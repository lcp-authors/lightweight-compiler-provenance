
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_basic_parse:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x16fe1]        # 419ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x16fe2]        # 41a008 <flatcc_builder_padding_base@@Base+0x5c68>
  403026:	jmp    QWORD PTR [rip+0x16fe4]        # 41a010 <flatcc_builder_padding_base@@Base+0x5c70>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0x16fe2]        # 41a018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strtod@plt>:
  403040:	jmp    QWORD PTR [rip+0x16fda]        # 41a020 <strtod@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0x16fd2]        # 41a028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <__stack_chk_fail@plt>:
  403060:	jmp    QWORD PTR [rip+0x16fca]        # 41a030 <__stack_chk_fail@GLIBC_2.4>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <__assert_fail@plt>:
  403070:	jmp    QWORD PTR [rip+0x16fc2]        # 41a038 <__assert_fail@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memset@plt>:
  403080:	jmp    QWORD PTR [rip+0x16fba]        # 41a040 <memset@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memchr@plt>:
  403090:	jmp    QWORD PTR [rip+0x16fb2]        # 41a048 <memchr@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memcmp@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x16faa]        # 41a050 <memcmp@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <fprintf@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x16fa2]        # 41a058 <fprintf@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <memcpy@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x16f9a]        # 41a060 <memcpy@GLIBC_2.14>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <malloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x16f92]        # 41a068 <malloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <realloc@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x16f8a]        # 41a070 <realloc@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <fwrite@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x16f82]        # 41a078 <fwrite@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

0000000000403100 <posix_memalign@plt>:
  403100:	jmp    QWORD PTR [rip+0x16f7a]        # 41a080 <posix_memalign@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403110 <_start@@Base>:
  403110:	endbr64 
  403114:	xor    ebp,ebp
  403116:	mov    r9,rdx
  403119:	pop    rsi
  40311a:	mov    rdx,rsp
  40311d:	and    rsp,0xfffffffffffffff0
  403121:	push   rax
  403122:	push   rsp
  403123:	mov    r8,0x413490
  40312a:	mov    rcx,0x413420
  403131:	mov    rdi,0x4065df
  403138:	call   QWORD PTR [rip+0x16eaa]        # 419fe8 <__libc_start_main@GLIBC_2.2.5>
  40313e:	hlt    
  40313f:	nop
  403140:	endbr64 
  403144:	ret    
  403145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40314f:	nop
  403150:	mov    eax,0x41a137
  403155:	push   rbp
  403156:	sub    rax,0x41a130
  40315c:	cmp    rax,0xe
  403160:	mov    rbp,rsp
  403163:	jbe    403180 <_start@@Base+0x70>
  403165:	mov    eax,0x0
  40316a:	test   rax,rax
  40316d:	je     403180 <_start@@Base+0x70>
  40316f:	pop    rbp
  403170:	mov    edi,0x41a130
  403175:	jmp    rax
  403177:	nop    WORD PTR [rax+rax*1+0x0]
  403180:	pop    rbp
  403181:	ret    
  403182:	nop    DWORD PTR [rax+0x0]
  403186:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403190:	mov    esi,0x41a130
  403195:	push   rbp
  403196:	sub    rsi,0x41a130
  40319d:	sar    rsi,0x3
  4031a1:	mov    rbp,rsp
  4031a4:	mov    rax,rsi
  4031a7:	shr    rax,0x3f
  4031ab:	add    rsi,rax
  4031ae:	sar    rsi,1
  4031b1:	je     4031c8 <_start@@Base+0xb8>
  4031b3:	mov    eax,0x0
  4031b8:	test   rax,rax
  4031bb:	je     4031c8 <_start@@Base+0xb8>
  4031bd:	pop    rbp
  4031be:	mov    edi,0x41a130
  4031c3:	jmp    rax
  4031c5:	nop    DWORD PTR [rax]
  4031c8:	pop    rbp
  4031c9:	ret    
  4031ca:	nop    WORD PTR [rax+rax*1+0x0]
  4031d0:	cmp    BYTE PTR [rip+0x16f59],0x0        # 41a130 <__bss_start@@Base>
  4031d7:	jne    4031ea <_start@@Base+0xda>
  4031d9:	push   rbp
  4031da:	mov    rbp,rsp
  4031dd:	call   403150 <_start@@Base+0x40>
  4031e2:	pop    rbp
  4031e3:	mov    BYTE PTR [rip+0x16f46],0x1        # 41a130 <__bss_start@@Base>
  4031ea:	repz ret 
  4031ec:	nop    DWORD PTR [rax+0x0]
  4031f0:	mov    edi,0x419e10
  4031f5:	cmp    QWORD PTR [rdi],0x0
  4031f9:	jne    403200 <_start@@Base+0xf0>
  4031fb:	jmp    403190 <_start@@Base+0x80>
  4031fd:	nop    DWORD PTR [rax]
  403200:	mov    eax,0x0
  403205:	test   rax,rax
  403208:	je     4031fb <_start@@Base+0xeb>
  40320a:	push   rbp
  40320b:	mov    rbp,rsp
  40320e:	call   rax
  403210:	pop    rbp
  403211:	jmp    403190 <_start@@Base+0x80>
  403216:	push   rbp
  403217:	mov    rbp,rsp
  40321a:	sub    rsp,0x20
  40321e:	mov    QWORD PTR [rbp-0x8],rdi
  403222:	mov    QWORD PTR [rbp-0x10],rsi
  403226:	mov    QWORD PTR [rbp-0x18],rdx
  40322a:	mov    rdx,QWORD PTR [rbp-0x18]
  40322e:	mov    rax,QWORD PTR [rbp-0x10]
  403232:	sub    rdx,rax
  403235:	mov    rax,rdx
  403238:	cmp    rax,0x1
  40323c:	jle    403273 <_start@@Base+0x163>
  40323e:	mov    rax,QWORD PTR [rbp-0x10]
  403242:	movzx  eax,BYTE PTR [rax]
  403245:	cmp    al,0x20
  403247:	jle    40324f <_start@@Base+0x13f>
  403249:	mov    rax,QWORD PTR [rbp-0x10]
  40324d:	jmp    40328a <_start@@Base+0x17a>
  40324f:	mov    rax,QWORD PTR [rbp-0x10]
  403253:	movzx  eax,BYTE PTR [rax]
  403256:	cmp    al,0x20
  403258:	jne    403273 <_start@@Base+0x163>
  40325a:	mov    rax,QWORD PTR [rbp-0x10]
  40325e:	add    rax,0x1
  403262:	movzx  eax,BYTE PTR [rax]
  403265:	cmp    al,0x20
  403267:	jle    403273 <_start@@Base+0x163>
  403269:	mov    rax,QWORD PTR [rbp-0x10]
  40326d:	add    rax,0x1
  403271:	jmp    40328a <_start@@Base+0x17a>
  403273:	mov    rdx,QWORD PTR [rbp-0x18]
  403277:	mov    rcx,QWORD PTR [rbp-0x10]
  40327b:	mov    rax,QWORD PTR [rbp-0x8]
  40327f:	mov    rsi,rcx
  403282:	mov    rdi,rax
  403285:	call   410889 <flatcc_json_parser_space_ext@@Base>
  40328a:	leave  
  40328b:	ret    
  40328c:	push   rbp
  40328d:	mov    rbp,rsp
  403290:	sub    rsp,0x20
  403294:	mov    QWORD PTR [rbp-0x8],rdi
  403298:	mov    QWORD PTR [rbp-0x10],rsi
  40329c:	mov    QWORD PTR [rbp-0x18],rdx
  4032a0:	mov    rax,QWORD PTR [rbp-0x10]
  4032a4:	cmp    rax,QWORD PTR [rbp-0x18]
  4032a8:	je     4032b5 <_start@@Base+0x1a5>
  4032aa:	mov    rax,QWORD PTR [rbp-0x10]
  4032ae:	movzx  eax,BYTE PTR [rax]
  4032b1:	cmp    al,0x22
  4032b3:	je     4032d0 <_start@@Base+0x1c0>
  4032b5:	mov    rdx,QWORD PTR [rbp-0x18]
  4032b9:	mov    rsi,QWORD PTR [rbp-0x10]
  4032bd:	mov    rax,QWORD PTR [rbp-0x8]
  4032c1:	mov    ecx,0x10
  4032c6:	mov    rdi,rax
  4032c9:	call   410789 <flatcc_json_parser_set_error@@Base>
  4032ce:	jmp    4032d9 <_start@@Base+0x1c9>
  4032d0:	add    QWORD PTR [rbp-0x10],0x1
  4032d5:	mov    rax,QWORD PTR [rbp-0x10]
  4032d9:	leave  
  4032da:	ret    
  4032db:	push   rbp
  4032dc:	mov    rbp,rsp
  4032df:	sub    rsp,0x20
  4032e3:	mov    QWORD PTR [rbp-0x8],rdi
  4032e7:	mov    QWORD PTR [rbp-0x10],rsi
  4032eb:	mov    QWORD PTR [rbp-0x18],rdx
  4032ef:	mov    rax,QWORD PTR [rbp-0x10]
  4032f3:	cmp    rax,QWORD PTR [rbp-0x18]
  4032f7:	je     403304 <_start@@Base+0x1f4>
  4032f9:	mov    rax,QWORD PTR [rbp-0x10]
  4032fd:	movzx  eax,BYTE PTR [rax]
  403300:	cmp    al,0x22
  403302:	je     40331f <_start@@Base+0x20f>
  403304:	mov    rdx,QWORD PTR [rbp-0x18]
  403308:	mov    rsi,QWORD PTR [rbp-0x10]
  40330c:	mov    rax,QWORD PTR [rbp-0x8]
  403310:	mov    ecx,0x14
  403315:	mov    rdi,rax
  403318:	call   410789 <flatcc_json_parser_set_error@@Base>
  40331d:	jmp    403328 <_start@@Base+0x218>
  40331f:	add    QWORD PTR [rbp-0x10],0x1
  403324:	mov    rax,QWORD PTR [rbp-0x10]
  403328:	leave  
  403329:	ret    
  40332a:	push   rbp
  40332b:	mov    rbp,rsp
  40332e:	sub    rsp,0x20
  403332:	mov    QWORD PTR [rbp-0x8],rdi
  403336:	mov    QWORD PTR [rbp-0x10],rsi
  40333a:	mov    QWORD PTR [rbp-0x18],rdx
  40333e:	mov    rax,QWORD PTR [rbp-0x10]
  403342:	cmp    rax,QWORD PTR [rbp-0x18]
  403346:	jne    40334e <_start@@Base+0x23e>
  403348:	mov    rax,QWORD PTR [rbp-0x10]
  40334c:	jmp    4033a0 <_start@@Base+0x290>
  40334e:	mov    rax,QWORD PTR [rbp-0x10]
  403352:	movzx  eax,BYTE PTR [rax]
  403355:	cmp    al,0x22
  403357:	jne    40336b <_start@@Base+0x25b>
  403359:	add    QWORD PTR [rbp-0x10],0x1
  40335e:	mov    rax,QWORD PTR [rbp-0x8]
  403362:	mov    DWORD PTR [rax+0x14],0x0
  403369:	jmp    40339c <_start@@Base+0x28c>
  40336b:	mov    rax,QWORD PTR [rbp-0x10]
  40336f:	movzx  eax,BYTE PTR [rax]
  403372:	cmp    al,0x2e
  403374:	jne    403391 <_start@@Base+0x281>
  403376:	mov    rdx,QWORD PTR [rbp-0x18]
  40337a:	mov    rsi,QWORD PTR [rbp-0x10]
  40337e:	mov    rax,QWORD PTR [rbp-0x8]
  403382:	mov    ecx,0x5
  403387:	mov    rdi,rax
  40338a:	call   410789 <flatcc_json_parser_set_error@@Base>
  40338f:	jmp    4033a0 <_start@@Base+0x290>
  403391:	mov    rax,QWORD PTR [rbp-0x8]
  403395:	mov    DWORD PTR [rax+0x14],0x1
  40339c:	mov    rax,QWORD PTR [rbp-0x10]
  4033a0:	leave  
  4033a1:	ret    
  4033a2:	push   rbp
  4033a3:	mov    rbp,rsp
  4033a6:	mov    QWORD PTR [rbp-0x18],rdi
  4033aa:	mov    QWORD PTR [rbp-0x20],rsi
  4033ae:	mov    QWORD PTR [rbp-0x10],0x0
  4033b6:	mov    rdx,QWORD PTR [rbp-0x20]
  4033ba:	mov    rax,QWORD PTR [rbp-0x18]
  4033be:	sub    rdx,rax
  4033c1:	mov    rax,rdx
  4033c4:	mov    QWORD PTR [rbp-0x8],rax
  4033c8:	cmp    QWORD PTR [rbp-0x8],0x8
  4033cd:	jbe    4033d7 <_start@@Base+0x2c7>
  4033cf:	mov    QWORD PTR [rbp-0x8],0x8
  4033d7:	cmp    QWORD PTR [rbp-0x8],0x8
  4033dc:	ja     4034b8 <_start@@Base+0x3a8>
  4033e2:	mov    rax,QWORD PTR [rbp-0x8]
  4033e6:	lea    rdx,[rax*4+0x0]
  4033ee:	lea    rax,[rip+0x10c2f]        # 414024 <_IO_stdin_used@@Base+0x24>
  4033f5:	mov    eax,DWORD PTR [rdx+rax*1]
  4033f8:	movsxd rdx,eax
  4033fb:	lea    rax,[rip+0x10c22]        # 414024 <_IO_stdin_used@@Base+0x24>
  403402:	add    rax,rdx
  403405:	jmp    rax
  403407:	mov    rax,QWORD PTR [rbp-0x18]
  40340b:	add    rax,0x7
  40340f:	movzx  eax,BYTE PTR [rax]
  403412:	movsx  rax,al
  403416:	or     QWORD PTR [rbp-0x10],rax
  40341a:	mov    rax,QWORD PTR [rbp-0x18]
  40341e:	add    rax,0x6
  403422:	movzx  eax,BYTE PTR [rax]
  403425:	movsx  rax,al
  403429:	shl    rax,0x8
  40342d:	or     QWORD PTR [rbp-0x10],rax
  403431:	mov    rax,QWORD PTR [rbp-0x18]
  403435:	add    rax,0x5
  403439:	movzx  eax,BYTE PTR [rax]
  40343c:	movsx  rax,al
  403440:	shl    rax,0x10
  403444:	or     QWORD PTR [rbp-0x10],rax
  403448:	mov    rax,QWORD PTR [rbp-0x18]
  40344c:	add    rax,0x4
  403450:	movzx  eax,BYTE PTR [rax]
  403453:	movsx  rax,al
  403457:	shl    rax,0x18
  40345b:	or     QWORD PTR [rbp-0x10],rax
  40345f:	mov    rax,QWORD PTR [rbp-0x18]
  403463:	add    rax,0x3
  403467:	movzx  eax,BYTE PTR [rax]
  40346a:	movsx  rax,al
  40346e:	shl    rax,0x20
  403472:	or     QWORD PTR [rbp-0x10],rax
  403476:	mov    rax,QWORD PTR [rbp-0x18]
  40347a:	add    rax,0x2
  40347e:	movzx  eax,BYTE PTR [rax]
  403481:	movsx  rax,al
  403485:	shl    rax,0x28
  403489:	or     QWORD PTR [rbp-0x10],rax
  40348d:	mov    rax,QWORD PTR [rbp-0x18]
  403491:	add    rax,0x1
  403495:	movzx  eax,BYTE PTR [rax]
  403498:	movsx  rax,al
  40349c:	shl    rax,0x30
  4034a0:	or     QWORD PTR [rbp-0x10],rax
  4034a4:	mov    rax,QWORD PTR [rbp-0x18]
  4034a8:	movzx  eax,BYTE PTR [rax]
  4034ab:	movsx  rax,al
  4034af:	shl    rax,0x38
  4034b3:	or     QWORD PTR [rbp-0x10],rax
  4034b7:	nop
  4034b8:	mov    rax,QWORD PTR [rbp-0x10]
  4034bc:	pop    rbp
  4034bd:	ret    
  4034be:	push   rbp
  4034bf:	mov    rbp,rsp
  4034c2:	sub    rsp,0x20
  4034c6:	mov    QWORD PTR [rbp-0x18],rdi
  4034ca:	mov    QWORD PTR [rbp-0x20],rsi
  4034ce:	mov    rdx,QWORD PTR [rbp-0x20]
  4034d2:	mov    rax,QWORD PTR [rbp-0x18]
  4034d6:	sub    rdx,rax
  4034d9:	mov    rax,rdx
  4034dc:	mov    QWORD PTR [rbp-0x8],rax
  4034e0:	cmp    QWORD PTR [rbp-0x8],0x7
  4034e5:	jbe    4034f3 <_start@@Base+0x3e3>
  4034e7:	mov    rax,QWORD PTR [rbp-0x18]
  4034eb:	mov    rax,QWORD PTR [rax]
  4034ee:	bswap  rax
  4034f1:	jmp    403506 <_start@@Base+0x3f6>
  4034f3:	mov    rdx,QWORD PTR [rbp-0x20]
  4034f7:	mov    rax,QWORD PTR [rbp-0x18]
  4034fb:	mov    rsi,rdx
  4034fe:	mov    rdi,rax
  403501:	call   4033a2 <_start@@Base+0x292>
  403506:	leave  
  403507:	ret    
  403508:	push   rbp
  403509:	mov    rbp,rsp
  40350c:	sub    rsp,0x30
  403510:	mov    QWORD PTR [rbp-0x18],rdi
  403514:	mov    QWORD PTR [rbp-0x20],rsi
  403518:	mov    QWORD PTR [rbp-0x28],rdx
  40351c:	mov    BYTE PTR [rbp-0x2],0x0
  403520:	mov    rax,QWORD PTR [rbp-0x18]
  403524:	mov    eax,DWORD PTR [rax+0x14]
  403527:	test   eax,eax
  403529:	je     4035e3 <_start@@Base+0x4d3>
  40352f:	jmp    40357d <_start@@Base+0x46d>
  403531:	mov    rax,QWORD PTR [rbp-0x20]
  403535:	movzx  eax,BYTE PTR [rax]
  403538:	mov    BYTE PTR [rbp-0x1],al
  40353b:	movzx  eax,BYTE PTR [rbp-0x1]
  40353f:	mov    BYTE PTR [rbp-0x2],al
  403542:	cmp    BYTE PTR [rbp-0x1],0x5f
  403546:	je     403560 <_start@@Base+0x450>
  403548:	cmp    BYTE PTR [rbp-0x1],0x2e
  40354c:	je     403560 <_start@@Base+0x450>
  40354e:	cmp    BYTE PTR [rbp-0x1],0x0
  403552:	js     403560 <_start@@Base+0x450>
  403554:	cmp    BYTE PTR [rbp-0x1],0x2f
  403558:	jle    403567 <_start@@Base+0x457>
  40355a:	cmp    BYTE PTR [rbp-0x1],0x39
  40355e:	jg     403567 <_start@@Base+0x457>
  403560:	add    QWORD PTR [rbp-0x20],0x1
  403565:	jmp    40357d <_start@@Base+0x46d>
  403567:	or     BYTE PTR [rbp-0x1],0x20
  40356b:	cmp    BYTE PTR [rbp-0x1],0x60
  40356f:	jle    403594 <_start@@Base+0x484>
  403571:	cmp    BYTE PTR [rbp-0x1],0x7a
  403575:	jg     403594 <_start@@Base+0x484>
  403577:	add    QWORD PTR [rbp-0x20],0x1
  40357c:	nop
  40357d:	mov    rax,QWORD PTR [rbp-0x20]
  403581:	cmp    rax,QWORD PTR [rbp-0x28]
  403585:	je     403595 <_start@@Base+0x485>
  403587:	mov    rax,QWORD PTR [rbp-0x20]
  40358b:	movzx  eax,BYTE PTR [rax]
  40358e:	cmp    al,0x20
  403590:	jg     403531 <_start@@Base+0x421>
  403592:	jmp    403595 <_start@@Base+0x485>
  403594:	nop
  403595:	cmp    BYTE PTR [rbp-0x2],0x2e
  403599:	jne    403630 <_start@@Base+0x520>
  40359f:	mov    rdx,QWORD PTR [rbp-0x28]
  4035a3:	mov    rsi,QWORD PTR [rbp-0x20]
  4035a7:	mov    rax,QWORD PTR [rbp-0x18]
  4035ab:	mov    ecx,0x5
  4035b0:	mov    rdi,rax
  4035b3:	call   410789 <flatcc_json_parser_set_error@@Base>
  4035b8:	jmp    403634 <_start@@Base+0x524>
  4035ba:	mov    rax,QWORD PTR [rbp-0x20]
  4035be:	movzx  eax,BYTE PTR [rax]
  4035c1:	cmp    al,0x5c
  4035c3:	jne    4035de <_start@@Base+0x4ce>
  4035c5:	mov    rdx,QWORD PTR [rbp-0x28]
  4035c9:	mov    rax,QWORD PTR [rbp-0x20]
  4035cd:	sub    rdx,rax
  4035d0:	mov    rax,rdx
  4035d3:	cmp    rax,0x1
  4035d7:	jle    4035fa <_start@@Base+0x4ea>
  4035d9:	add    QWORD PTR [rbp-0x20],0x1
  4035de:	add    QWORD PTR [rbp-0x20],0x1
  4035e3:	mov    rax,QWORD PTR [rbp-0x20]
  4035e7:	cmp    rax,QWORD PTR [rbp-0x28]
  4035eb:	je     4035fb <_start@@Base+0x4eb>
  4035ed:	mov    rax,QWORD PTR [rbp-0x20]
  4035f1:	movzx  eax,BYTE PTR [rax]
  4035f4:	cmp    al,0x22
  4035f6:	jne    4035ba <_start@@Base+0x4aa>
  4035f8:	jmp    4035fb <_start@@Base+0x4eb>
  4035fa:	nop
  4035fb:	mov    rax,QWORD PTR [rbp-0x20]
  4035ff:	cmp    rax,QWORD PTR [rbp-0x28]
  403603:	je     403610 <_start@@Base+0x500>
  403605:	mov    rax,QWORD PTR [rbp-0x20]
  403609:	movzx  eax,BYTE PTR [rax]
  40360c:	cmp    al,0x22
  40360e:	je     40362b <_start@@Base+0x51b>
  403610:	mov    rdx,QWORD PTR [rbp-0x28]
  403614:	mov    rsi,QWORD PTR [rbp-0x20]
  403618:	mov    rax,QWORD PTR [rbp-0x18]
  40361c:	mov    ecx,0x14
  403621:	mov    rdi,rax
  403624:	call   410789 <flatcc_json_parser_set_error@@Base>
  403629:	jmp    403634 <_start@@Base+0x524>
  40362b:	add    QWORD PTR [rbp-0x20],0x1
  403630:	mov    rax,QWORD PTR [rbp-0x20]
  403634:	leave  
  403635:	ret    
  403636:	push   rbp
  403637:	mov    rbp,rsp
  40363a:	sub    rsp,0x20
  40363e:	mov    QWORD PTR [rbp-0x8],rdi
  403642:	mov    QWORD PTR [rbp-0x10],rsi
  403646:	mov    QWORD PTR [rbp-0x18],rdx
  40364a:	mov    rdx,QWORD PTR [rbp-0x18]
  40364e:	mov    rcx,QWORD PTR [rbp-0x10]
  403652:	mov    rax,QWORD PTR [rbp-0x8]
  403656:	mov    rsi,rcx
  403659:	mov    rdi,rax
  40365c:	call   40332a <_start@@Base+0x21a>
  403661:	mov    QWORD PTR [rbp-0x10],rax
  403665:	mov    rax,QWORD PTR [rbp-0x8]
  403669:	mov    eax,DWORD PTR [rax+0x14]
  40366c:	test   eax,eax
  40366e:	jne    40368b <_start@@Base+0x57b>
  403670:	mov    rdx,QWORD PTR [rbp-0x18]
  403674:	mov    rcx,QWORD PTR [rbp-0x10]
  403678:	mov    rax,QWORD PTR [rbp-0x8]
  40367c:	mov    rsi,rcx
  40367f:	mov    rdi,rax
  403682:	call   403216 <_start@@Base+0x106>
  403687:	mov    QWORD PTR [rbp-0x10],rax
  40368b:	mov    rax,QWORD PTR [rbp-0x10]
  40368f:	leave  
  403690:	ret    
  403691:	push   rbp
  403692:	mov    rbp,rsp
  403695:	sub    rsp,0x30
  403699:	mov    QWORD PTR [rbp-0x8],rdi
  40369d:	mov    QWORD PTR [rbp-0x10],rsi
  4036a1:	mov    QWORD PTR [rbp-0x18],rdx
  4036a5:	mov    DWORD PTR [rbp-0x1c],ecx
  4036a8:	mov    QWORD PTR [rbp-0x28],r8
  4036ac:	mov    QWORD PTR [rbp-0x30],r9
  4036b0:	cmp    DWORD PTR [rbp-0x1c],0x0
  4036b4:	je     4036d1 <_start@@Base+0x5c1>
  4036b6:	mov    rdx,QWORD PTR [rbp-0x18]
  4036ba:	mov    rsi,QWORD PTR [rbp-0x10]
  4036be:	mov    rax,QWORD PTR [rbp-0x8]
  4036c2:	mov    ecx,0x8
  4036c7:	mov    rdi,rax
  4036ca:	call   410789 <flatcc_json_parser_set_error@@Base>
  4036cf:	jmp    4036e0 <_start@@Base+0x5d0>
  4036d1:	mov    rax,QWORD PTR [rbp-0x30]
  4036d5:	mov    rdx,QWORD PTR [rbp-0x28]
  4036d9:	mov    QWORD PTR [rax],rdx
  4036dc:	mov    rax,QWORD PTR [rbp-0x10]
  4036e0:	leave  
  4036e1:	ret    
  4036e2:	push   rbp
  4036e3:	mov    rbp,rsp
  4036e6:	sub    rsp,0x30
  4036ea:	mov    QWORD PTR [rbp-0x8],rdi
  4036ee:	mov    QWORD PTR [rbp-0x10],rsi
  4036f2:	mov    QWORD PTR [rbp-0x18],rdx
  4036f6:	mov    DWORD PTR [rbp-0x1c],ecx
  4036f9:	mov    QWORD PTR [rbp-0x28],r8
  4036fd:	mov    QWORD PTR [rbp-0x30],r9
  403701:	cmp    DWORD PTR [rbp-0x1c],0x0
  403705:	je     403722 <_start@@Base+0x612>
  403707:	mov    rdx,QWORD PTR [rbp-0x18]
  40370b:	mov    rsi,QWORD PTR [rbp-0x10]
  40370f:	mov    rax,QWORD PTR [rbp-0x8]
  403713:	mov    ecx,0x8
  403718:	mov    rdi,rax
  40371b:	call   410789 <flatcc_json_parser_set_error@@Base>
  403720:	jmp    403736 <_start@@Base+0x626>
  403722:	cmp    QWORD PTR [rbp-0x28],0x0
  403727:	setne  al
  40372a:	mov    edx,eax
  40372c:	mov    rax,QWORD PTR [rbp-0x30]
  403730:	mov    BYTE PTR [rax],dl
  403732:	mov    rax,QWORD PTR [rbp-0x10]
  403736:	leave  
  403737:	ret    
  403738:	push   rbp
  403739:	mov    rbp,rsp
  40373c:	sub    rsp,0x30
  403740:	mov    QWORD PTR [rbp-0x8],rdi
  403744:	mov    QWORD PTR [rbp-0x10],rsi
  403748:	mov    QWORD PTR [rbp-0x18],rdx
  40374c:	mov    DWORD PTR [rbp-0x1c],ecx
  40374f:	mov    QWORD PTR [rbp-0x28],r8
  403753:	mov    QWORD PTR [rbp-0x30],r9
  403757:	cmp    DWORD PTR [rbp-0x1c],0x0
  40375b:	je     403778 <_start@@Base+0x668>
  40375d:	mov    rdx,QWORD PTR [rbp-0x18]
  403761:	mov    rsi,QWORD PTR [rbp-0x10]
  403765:	mov    rax,QWORD PTR [rbp-0x8]
  403769:	mov    ecx,0x8
  40376e:	mov    rdi,rax
  403771:	call   410789 <flatcc_json_parser_set_error@@Base>
  403776:	jmp    4037ae <_start@@Base+0x69e>
  403778:	mov    eax,0xffffffff
  40377d:	cmp    QWORD PTR [rbp-0x28],rax
  403781:	jbe    40379e <_start@@Base+0x68e>
  403783:	mov    rdx,QWORD PTR [rbp-0x18]
  403787:	mov    rsi,QWORD PTR [rbp-0x10]
  40378b:	mov    rax,QWORD PTR [rbp-0x8]
  40378f:	mov    ecx,0x7
  403794:	mov    rdi,rax
  403797:	call   410789 <flatcc_json_parser_set_error@@Base>
  40379c:	jmp    4037ae <_start@@Base+0x69e>
  40379e:	mov    rax,QWORD PTR [rbp-0x28]
  4037a2:	mov    edx,eax
  4037a4:	mov    rax,QWORD PTR [rbp-0x30]
  4037a8:	mov    DWORD PTR [rax],edx
  4037aa:	mov    rax,QWORD PTR [rbp-0x10]
  4037ae:	leave  
  4037af:	ret    
  4037b0:	push   rbp
  4037b1:	mov    rbp,rsp
  4037b4:	sub    rsp,0x30
  4037b8:	mov    QWORD PTR [rbp-0x8],rdi
  4037bc:	mov    QWORD PTR [rbp-0x10],rsi
  4037c0:	mov    QWORD PTR [rbp-0x18],rdx
  4037c4:	mov    DWORD PTR [rbp-0x1c],ecx
  4037c7:	mov    QWORD PTR [rbp-0x28],r8
  4037cb:	mov    QWORD PTR [rbp-0x30],r9
  4037cf:	cmp    DWORD PTR [rbp-0x1c],0x0
  4037d3:	je     4037f0 <_start@@Base+0x6e0>
  4037d5:	mov    rdx,QWORD PTR [rbp-0x18]
  4037d9:	mov    rsi,QWORD PTR [rbp-0x10]
  4037dd:	mov    rax,QWORD PTR [rbp-0x8]
  4037e1:	mov    ecx,0x8
  4037e6:	mov    rdi,rax
  4037e9:	call   410789 <flatcc_json_parser_set_error@@Base>
  4037ee:	jmp    403826 <_start@@Base+0x716>
  4037f0:	cmp    QWORD PTR [rbp-0x28],0xffff
  4037f8:	jbe    403815 <_start@@Base+0x705>
  4037fa:	mov    rdx,QWORD PTR [rbp-0x18]
  4037fe:	mov    rsi,QWORD PTR [rbp-0x10]
  403802:	mov    rax,QWORD PTR [rbp-0x8]
  403806:	mov    ecx,0x7
  40380b:	mov    rdi,rax
  40380e:	call   410789 <flatcc_json_parser_set_error@@Base>
  403813:	jmp    403826 <_start@@Base+0x716>
  403815:	mov    rax,QWORD PTR [rbp-0x28]
  403819:	mov    edx,eax
  40381b:	mov    rax,QWORD PTR [rbp-0x30]
  40381f:	mov    WORD PTR [rax],dx
  403822:	mov    rax,QWORD PTR [rbp-0x10]
  403826:	leave  
  403827:	ret    
  403828:	push   rbp
  403829:	mov    rbp,rsp
  40382c:	sub    rsp,0x30
  403830:	mov    QWORD PTR [rbp-0x8],rdi
  403834:	mov    QWORD PTR [rbp-0x10],rsi
  403838:	mov    QWORD PTR [rbp-0x18],rdx
  40383c:	mov    DWORD PTR [rbp-0x1c],ecx
  40383f:	mov    QWORD PTR [rbp-0x28],r8
  403843:	mov    QWORD PTR [rbp-0x30],r9
  403847:	cmp    DWORD PTR [rbp-0x1c],0x0
  40384b:	je     403868 <_start@@Base+0x758>
  40384d:	mov    rdx,QWORD PTR [rbp-0x18]
  403851:	mov    rsi,QWORD PTR [rbp-0x10]
  403855:	mov    rax,QWORD PTR [rbp-0x8]
  403859:	mov    ecx,0x8
  40385e:	mov    rdi,rax
  403861:	call   410789 <flatcc_json_parser_set_error@@Base>
  403866:	jmp    40389d <_start@@Base+0x78d>
  403868:	cmp    QWORD PTR [rbp-0x28],0xff
  403870:	jbe    40388d <_start@@Base+0x77d>
  403872:	mov    rdx,QWORD PTR [rbp-0x18]
  403876:	mov    rsi,QWORD PTR [rbp-0x10]
  40387a:	mov    rax,QWORD PTR [rbp-0x8]
  40387e:	mov    ecx,0x7
  403883:	mov    rdi,rax
  403886:	call   410789 <flatcc_json_parser_set_error@@Base>
  40388b:	jmp    40389d <_start@@Base+0x78d>
  40388d:	mov    rax,QWORD PTR [rbp-0x28]
  403891:	mov    edx,eax
  403893:	mov    rax,QWORD PTR [rbp-0x30]
  403897:	mov    BYTE PTR [rax],dl
  403899:	mov    rax,QWORD PTR [rbp-0x10]
  40389d:	leave  
  40389e:	ret    
  40389f:	push   rbp
  4038a0:	mov    rbp,rsp
  4038a3:	sub    rsp,0x30
  4038a7:	mov    QWORD PTR [rbp-0x8],rdi
  4038ab:	mov    QWORD PTR [rbp-0x10],rsi
  4038af:	mov    QWORD PTR [rbp-0x18],rdx
  4038b3:	mov    DWORD PTR [rbp-0x1c],ecx
  4038b6:	mov    QWORD PTR [rbp-0x28],r8
  4038ba:	mov    QWORD PTR [rbp-0x30],r9
  4038be:	cmp    DWORD PTR [rbp-0x1c],0x0
  4038c2:	je     403902 <_start@@Base+0x7f2>
  4038c4:	movabs rax,0x8000000000000000
  4038ce:	cmp    QWORD PTR [rbp-0x28],rax
  4038d2:	jbe    4038ef <_start@@Base+0x7df>
  4038d4:	mov    rdx,QWORD PTR [rbp-0x18]
  4038d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4038dc:	mov    rax,QWORD PTR [rbp-0x8]
  4038e0:	mov    ecx,0x8
  4038e5:	mov    rdi,rax
  4038e8:	call   410789 <flatcc_json_parser_set_error@@Base>
  4038ed:	jmp    403935 <_start@@Base+0x825>
  4038ef:	mov    rax,QWORD PTR [rbp-0x28]
  4038f3:	neg    rax
  4038f6:	mov    rdx,rax
  4038f9:	mov    rax,QWORD PTR [rbp-0x30]
  4038fd:	mov    QWORD PTR [rax],rdx
  403900:	jmp    403931 <_start@@Base+0x821>
  403902:	mov    rax,QWORD PTR [rbp-0x28]
  403906:	test   rax,rax
  403909:	jns    403926 <_start@@Base+0x816>
  40390b:	mov    rdx,QWORD PTR [rbp-0x18]
  40390f:	mov    rsi,QWORD PTR [rbp-0x10]
  403913:	mov    rax,QWORD PTR [rbp-0x8]
  403917:	mov    ecx,0x7
  40391c:	mov    rdi,rax
  40391f:	call   410789 <flatcc_json_parser_set_error@@Base>
  403924:	jmp    403935 <_start@@Base+0x825>
  403926:	mov    rdx,QWORD PTR [rbp-0x28]
  40392a:	mov    rax,QWORD PTR [rbp-0x30]
  40392e:	mov    QWORD PTR [rax],rdx
  403931:	mov    rax,QWORD PTR [rbp-0x10]
  403935:	leave  
  403936:	ret    
  403937:	push   rbp
  403938:	mov    rbp,rsp
  40393b:	sub    rsp,0x30
  40393f:	mov    QWORD PTR [rbp-0x8],rdi
  403943:	mov    QWORD PTR [rbp-0x10],rsi
  403947:	mov    QWORD PTR [rbp-0x18],rdx
  40394b:	mov    DWORD PTR [rbp-0x1c],ecx
  40394e:	mov    QWORD PTR [rbp-0x28],r8
  403952:	mov    QWORD PTR [rbp-0x30],r9
  403956:	cmp    DWORD PTR [rbp-0x1c],0x0
  40395a:	je     403992 <_start@@Base+0x882>
  40395c:	mov    eax,0x80000000
  403961:	cmp    QWORD PTR [rbp-0x28],rax
  403965:	jbe    403982 <_start@@Base+0x872>
  403967:	mov    rdx,QWORD PTR [rbp-0x18]
  40396b:	mov    rsi,QWORD PTR [rbp-0x10]
  40396f:	mov    rax,QWORD PTR [rbp-0x8]
  403973:	mov    ecx,0x8
  403978:	mov    rdi,rax
  40397b:	call   410789 <flatcc_json_parser_set_error@@Base>
  403980:	jmp    4039c7 <_start@@Base+0x8b7>
  403982:	mov    rax,QWORD PTR [rbp-0x28]
  403986:	neg    eax
  403988:	mov    edx,eax
  40398a:	mov    rax,QWORD PTR [rbp-0x30]
  40398e:	mov    DWORD PTR [rax],edx
  403990:	jmp    4039c3 <_start@@Base+0x8b3>
  403992:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  40399a:	jbe    4039b7 <_start@@Base+0x8a7>
  40399c:	mov    rdx,QWORD PTR [rbp-0x18]
  4039a0:	mov    rsi,QWORD PTR [rbp-0x10]
  4039a4:	mov    rax,QWORD PTR [rbp-0x8]
  4039a8:	mov    ecx,0x7
  4039ad:	mov    rdi,rax
  4039b0:	call   410789 <flatcc_json_parser_set_error@@Base>
  4039b5:	jmp    4039c7 <_start@@Base+0x8b7>
  4039b7:	mov    rax,QWORD PTR [rbp-0x28]
  4039bb:	mov    edx,eax
  4039bd:	mov    rax,QWORD PTR [rbp-0x30]
  4039c1:	mov    DWORD PTR [rax],edx
  4039c3:	mov    rax,QWORD PTR [rbp-0x10]
  4039c7:	leave  
  4039c8:	ret    
  4039c9:	push   rbp
  4039ca:	mov    rbp,rsp
  4039cd:	sub    rsp,0x30
  4039d1:	mov    QWORD PTR [rbp-0x8],rdi
  4039d5:	mov    QWORD PTR [rbp-0x10],rsi
  4039d9:	mov    QWORD PTR [rbp-0x18],rdx
  4039dd:	mov    DWORD PTR [rbp-0x1c],ecx
  4039e0:	mov    QWORD PTR [rbp-0x28],r8
  4039e4:	mov    QWORD PTR [rbp-0x30],r9
  4039e8:	cmp    DWORD PTR [rbp-0x1c],0x0
  4039ec:	je     403a24 <_start@@Base+0x914>
  4039ee:	cmp    QWORD PTR [rbp-0x28],0x8000
  4039f6:	jbe    403a13 <_start@@Base+0x903>
  4039f8:	mov    rdx,QWORD PTR [rbp-0x18]
  4039fc:	mov    rsi,QWORD PTR [rbp-0x10]
  403a00:	mov    rax,QWORD PTR [rbp-0x8]
  403a04:	mov    ecx,0x8
  403a09:	mov    rdi,rax
  403a0c:	call   410789 <flatcc_json_parser_set_error@@Base>
  403a11:	jmp    403a5a <_start@@Base+0x94a>
  403a13:	mov    rax,QWORD PTR [rbp-0x28]
  403a17:	neg    eax
  403a19:	mov    edx,eax
  403a1b:	mov    rax,QWORD PTR [rbp-0x30]
  403a1f:	mov    WORD PTR [rax],dx
  403a22:	jmp    403a56 <_start@@Base+0x946>
  403a24:	cmp    QWORD PTR [rbp-0x28],0x7fff
  403a2c:	jbe    403a49 <_start@@Base+0x939>
  403a2e:	mov    rdx,QWORD PTR [rbp-0x18]
  403a32:	mov    rsi,QWORD PTR [rbp-0x10]
  403a36:	mov    rax,QWORD PTR [rbp-0x8]
  403a3a:	mov    ecx,0x7
  403a3f:	mov    rdi,rax
  403a42:	call   410789 <flatcc_json_parser_set_error@@Base>
  403a47:	jmp    403a5a <_start@@Base+0x94a>
  403a49:	mov    rax,QWORD PTR [rbp-0x28]
  403a4d:	mov    edx,eax
  403a4f:	mov    rax,QWORD PTR [rbp-0x30]
  403a53:	mov    WORD PTR [rax],dx
  403a56:	mov    rax,QWORD PTR [rbp-0x10]
  403a5a:	leave  
  403a5b:	ret    
  403a5c:	push   rbp
  403a5d:	mov    rbp,rsp
  403a60:	sub    rsp,0x30
  403a64:	mov    QWORD PTR [rbp-0x8],rdi
  403a68:	mov    QWORD PTR [rbp-0x10],rsi
  403a6c:	mov    QWORD PTR [rbp-0x18],rdx
  403a70:	mov    DWORD PTR [rbp-0x1c],ecx
  403a73:	mov    QWORD PTR [rbp-0x28],r8
  403a77:	mov    QWORD PTR [rbp-0x30],r9
  403a7b:	cmp    DWORD PTR [rbp-0x1c],0x0
  403a7f:	je     403ab6 <_start@@Base+0x9a6>
  403a81:	cmp    QWORD PTR [rbp-0x28],0x80
  403a89:	jbe    403aa6 <_start@@Base+0x996>
  403a8b:	mov    rdx,QWORD PTR [rbp-0x18]
  403a8f:	mov    rsi,QWORD PTR [rbp-0x10]
  403a93:	mov    rax,QWORD PTR [rbp-0x8]
  403a97:	mov    ecx,0x8
  403a9c:	mov    rdi,rax
  403a9f:	call   410789 <flatcc_json_parser_set_error@@Base>
  403aa4:	jmp    403ae8 <_start@@Base+0x9d8>
  403aa6:	mov    rax,QWORD PTR [rbp-0x28]
  403aaa:	neg    eax
  403aac:	mov    edx,eax
  403aae:	mov    rax,QWORD PTR [rbp-0x30]
  403ab2:	mov    BYTE PTR [rax],dl
  403ab4:	jmp    403ae4 <_start@@Base+0x9d4>
  403ab6:	cmp    QWORD PTR [rbp-0x28],0x7f
  403abb:	jbe    403ad8 <_start@@Base+0x9c8>
  403abd:	mov    rdx,QWORD PTR [rbp-0x18]
  403ac1:	mov    rsi,QWORD PTR [rbp-0x10]
  403ac5:	mov    rax,QWORD PTR [rbp-0x8]
  403ac9:	mov    ecx,0x7
  403ace:	mov    rdi,rax
  403ad1:	call   410789 <flatcc_json_parser_set_error@@Base>
  403ad6:	jmp    403ae8 <_start@@Base+0x9d8>
  403ad8:	mov    rax,QWORD PTR [rbp-0x28]
  403adc:	mov    edx,eax
  403ade:	mov    rax,QWORD PTR [rbp-0x30]
  403ae2:	mov    BYTE PTR [rax],dl
  403ae4:	mov    rax,QWORD PTR [rbp-0x10]
  403ae8:	leave  
  403ae9:	ret    
  403aea:	push   rbp
  403aeb:	mov    rbp,rsp
  403aee:	mov    QWORD PTR [rbp-0x8],rdi
  403af2:	mov    QWORD PTR [rbp-0x10],rsi
  403af6:	mov    QWORD PTR [rbp-0x18],rdx
  403afa:	mov    DWORD PTR [rbp-0x1c],ecx
  403afd:	mov    QWORD PTR [rbp-0x28],r8
  403b01:	mov    QWORD PTR [rbp-0x30],r9
  403b05:	cmp    DWORD PTR [rbp-0x1c],0x0
  403b09:	je     403b46 <_start@@Base+0xa36>
  403b0b:	mov    rax,QWORD PTR [rbp-0x28]
  403b0f:	test   rax,rax
  403b12:	js     403b1f <_start@@Base+0xa0f>
  403b14:	vxorps xmm0,xmm0,xmm0
  403b18:	vcvtsi2ss xmm0,xmm0,rax
  403b1d:	jmp    403b38 <_start@@Base+0xa28>
  403b1f:	mov    rdx,rax
  403b22:	shr    rdx,1
  403b25:	and    eax,0x1
  403b28:	or     rdx,rax
  403b2b:	vxorps xmm0,xmm0,xmm0
  403b2f:	vcvtsi2ss xmm0,xmm0,rdx
  403b34:	vaddss xmm0,xmm0,xmm0
  403b38:	vmovss xmm1,DWORD PTR [rip+0x10810]        # 414350 <g_data@@Base+0x2f0>
  403b40:	vxorps xmm0,xmm0,xmm1
  403b44:	jmp    403b73 <_start@@Base+0xa63>
  403b46:	mov    rax,QWORD PTR [rbp-0x28]
  403b4a:	test   rax,rax
  403b4d:	js     403b5a <_start@@Base+0xa4a>
  403b4f:	vxorps xmm0,xmm0,xmm0
  403b53:	vcvtsi2ss xmm0,xmm0,rax
  403b58:	jmp    403b73 <_start@@Base+0xa63>
  403b5a:	mov    rdx,rax
  403b5d:	shr    rdx,1
  403b60:	and    eax,0x1
  403b63:	or     rdx,rax
  403b66:	vxorps xmm0,xmm0,xmm0
  403b6a:	vcvtsi2ss xmm0,xmm0,rdx
  403b6f:	vaddss xmm0,xmm0,xmm0
  403b73:	mov    rax,QWORD PTR [rbp-0x30]
  403b77:	vmovss DWORD PTR [rax],xmm0
  403b7b:	mov    rax,QWORD PTR [rbp-0x10]
  403b7f:	pop    rbp
  403b80:	ret    
  403b81:	push   rbp
  403b82:	mov    rbp,rsp
  403b85:	mov    QWORD PTR [rbp-0x8],rdi
  403b89:	mov    QWORD PTR [rbp-0x10],rsi
  403b8d:	mov    QWORD PTR [rbp-0x18],rdx
  403b91:	mov    DWORD PTR [rbp-0x1c],ecx
  403b94:	mov    QWORD PTR [rbp-0x28],r8
  403b98:	mov    QWORD PTR [rbp-0x30],r9
  403b9c:	cmp    DWORD PTR [rbp-0x1c],0x0
  403ba0:	je     403bdd <_start@@Base+0xacd>
  403ba2:	mov    rax,QWORD PTR [rbp-0x28]
  403ba6:	test   rax,rax
  403ba9:	js     403bb6 <_start@@Base+0xaa6>
  403bab:	vxorpd xmm0,xmm0,xmm0
  403baf:	vcvtsi2sd xmm0,xmm0,rax
  403bb4:	jmp    403bcf <_start@@Base+0xabf>
  403bb6:	mov    rdx,rax
  403bb9:	shr    rdx,1
  403bbc:	and    eax,0x1
  403bbf:	or     rdx,rax
  403bc2:	vxorpd xmm0,xmm0,xmm0
  403bc6:	vcvtsi2sd xmm0,xmm0,rdx
  403bcb:	vaddsd xmm0,xmm0,xmm0
  403bcf:	vmovsd xmm1,QWORD PTR [rip+0x10789]        # 414360 <g_data@@Base+0x300>
  403bd7:	vxorpd xmm0,xmm0,xmm1
  403bdb:	jmp    403c0a <_start@@Base+0xafa>
  403bdd:	mov    rax,QWORD PTR [rbp-0x28]
  403be1:	test   rax,rax
  403be4:	js     403bf1 <_start@@Base+0xae1>
  403be6:	vxorpd xmm0,xmm0,xmm0
  403bea:	vcvtsi2sd xmm0,xmm0,rax
  403bef:	jmp    403c0a <_start@@Base+0xafa>
  403bf1:	mov    rdx,rax
  403bf4:	shr    rdx,1
  403bf7:	and    eax,0x1
  403bfa:	or     rdx,rax
  403bfd:	vxorpd xmm0,xmm0,xmm0
  403c01:	vcvtsi2sd xmm0,xmm0,rdx
  403c06:	vaddsd xmm0,xmm0,xmm0
  403c0a:	mov    rax,QWORD PTR [rbp-0x30]
  403c0e:	vmovsd QWORD PTR [rax],xmm0
  403c12:	mov    rax,QWORD PTR [rbp-0x10]
  403c16:	pop    rbp
  403c17:	ret    
  403c18:	push   rbp
  403c19:	mov    rbp,rsp
  403c1c:	sub    rsp,0x40
  403c20:	mov    QWORD PTR [rbp-0x28],rdi
  403c24:	mov    QWORD PTR [rbp-0x30],rsi
  403c28:	mov    QWORD PTR [rbp-0x38],rdx
  403c2c:	mov    QWORD PTR [rbp-0x40],rcx
  403c30:	mov    rax,QWORD PTR fs:0x28
  403c39:	mov    QWORD PTR [rbp-0x8],rax
  403c3d:	xor    eax,eax
  403c3f:	mov    QWORD PTR [rbp-0x18],0x0
  403c47:	mov    DWORD PTR [rbp-0x1c],0x0
  403c4e:	mov    rax,QWORD PTR [rbp-0x30]
  403c52:	mov    QWORD PTR [rbp-0x10],rax
  403c56:	mov    rax,QWORD PTR [rbp-0x40]
  403c5a:	mov    DWORD PTR [rax],0x0
  403c60:	mov    rax,QWORD PTR [rbp-0x30]
  403c64:	cmp    rax,QWORD PTR [rbp-0x38]
  403c68:	jne    403c70 <_start@@Base+0xb60>
  403c6a:	mov    rax,QWORD PTR [rbp-0x30]
  403c6e:	jmp    403cc8 <_start@@Base+0xbb8>
  403c70:	lea    rdi,[rbp-0x18]
  403c74:	lea    rcx,[rbp-0x1c]
  403c78:	mov    rdx,QWORD PTR [rbp-0x38]
  403c7c:	mov    rsi,QWORD PTR [rbp-0x30]
  403c80:	mov    rax,QWORD PTR [rbp-0x28]
  403c84:	mov    r8,rdi
  403c87:	mov    rdi,rax
  403c8a:	call   411e79 <flatcc_json_parser_integer@@Base>
  403c8f:	mov    QWORD PTR [rbp-0x30],rax
  403c93:	mov    rax,QWORD PTR [rbp-0x30]
  403c97:	cmp    rax,QWORD PTR [rbp-0x10]
  403c9b:	je     403cc4 <_start@@Base+0xbb4>
  403c9d:	mov    rdi,QWORD PTR [rbp-0x18]
  403ca1:	mov    ecx,DWORD PTR [rbp-0x1c]
  403ca4:	mov    r8,QWORD PTR [rbp-0x40]
  403ca8:	mov    rdx,QWORD PTR [rbp-0x38]
  403cac:	mov    rsi,QWORD PTR [rbp-0x30]
  403cb0:	mov    rax,QWORD PTR [rbp-0x28]
  403cb4:	mov    r9,r8
  403cb7:	mov    r8,rdi
  403cba:	mov    rdi,rax
  403cbd:	call   403738 <_start@@Base+0x628>
  403cc2:	jmp    403cc8 <_start@@Base+0xbb8>
  403cc4:	mov    rax,QWORD PTR [rbp-0x30]
  403cc8:	mov    rdx,QWORD PTR [rbp-0x8]
  403ccc:	xor    rdx,QWORD PTR fs:0x28
  403cd5:	je     403cdc <_start@@Base+0xbcc>
  403cd7:	call   403060 <__stack_chk_fail@plt>
  403cdc:	leave  
  403cdd:	ret    
  403cde:	push   rbp
  403cdf:	mov    rbp,rsp
  403ce2:	sub    rsp,0x40
  403ce6:	mov    QWORD PTR [rbp-0x28],rdi
  403cea:	mov    QWORD PTR [rbp-0x30],rsi
  403cee:	mov    QWORD PTR [rbp-0x38],rdx
  403cf2:	mov    QWORD PTR [rbp-0x40],rcx
  403cf6:	mov    rax,QWORD PTR fs:0x28
  403cff:	mov    QWORD PTR [rbp-0x8],rax
  403d03:	xor    eax,eax
  403d05:	mov    QWORD PTR [rbp-0x18],0x0
  403d0d:	mov    DWORD PTR [rbp-0x1c],0x0
  403d14:	mov    rax,QWORD PTR [rbp-0x30]
  403d18:	mov    QWORD PTR [rbp-0x10],rax
  403d1c:	mov    rax,QWORD PTR [rbp-0x40]
  403d20:	mov    BYTE PTR [rax],0x0
  403d23:	mov    rax,QWORD PTR [rbp-0x30]
  403d27:	cmp    rax,QWORD PTR [rbp-0x38]
  403d2b:	jne    403d33 <_start@@Base+0xc23>
  403d2d:	mov    rax,QWORD PTR [rbp-0x30]
  403d31:	jmp    403d8b <_start@@Base+0xc7b>
  403d33:	lea    rdi,[rbp-0x18]
  403d37:	lea    rcx,[rbp-0x1c]
  403d3b:	mov    rdx,QWORD PTR [rbp-0x38]
  403d3f:	mov    rsi,QWORD PTR [rbp-0x30]
  403d43:	mov    rax,QWORD PTR [rbp-0x28]
  403d47:	mov    r8,rdi
  403d4a:	mov    rdi,rax
  403d4d:	call   411e79 <flatcc_json_parser_integer@@Base>
  403d52:	mov    QWORD PTR [rbp-0x30],rax
  403d56:	mov    rax,QWORD PTR [rbp-0x30]
  403d5a:	cmp    rax,QWORD PTR [rbp-0x10]
  403d5e:	je     403d87 <_start@@Base+0xc77>
  403d60:	mov    rdi,QWORD PTR [rbp-0x18]
  403d64:	mov    ecx,DWORD PTR [rbp-0x1c]
  403d67:	mov    r8,QWORD PTR [rbp-0x40]
  403d6b:	mov    rdx,QWORD PTR [rbp-0x38]
  403d6f:	mov    rsi,QWORD PTR [rbp-0x30]
  403d73:	mov    rax,QWORD PTR [rbp-0x28]
  403d77:	mov    r9,r8
  403d7a:	mov    r8,rdi
  403d7d:	mov    rdi,rax
  403d80:	call   403828 <_start@@Base+0x718>
  403d85:	jmp    403d8b <_start@@Base+0xc7b>
  403d87:	mov    rax,QWORD PTR [rbp-0x30]
  403d8b:	mov    rdx,QWORD PTR [rbp-0x8]
  403d8f:	xor    rdx,QWORD PTR fs:0x28
  403d98:	je     403d9f <_start@@Base+0xc8f>
  403d9a:	call   403060 <__stack_chk_fail@plt>
  403d9f:	leave  
  403da0:	ret    
  403da1:	push   rbp
  403da2:	mov    rbp,rsp
  403da5:	sub    rsp,0x40
  403da9:	mov    QWORD PTR [rbp-0x28],rdi
  403dad:	mov    QWORD PTR [rbp-0x30],rsi
  403db1:	mov    QWORD PTR [rbp-0x38],rdx
  403db5:	mov    QWORD PTR [rbp-0x40],rcx
  403db9:	mov    rax,QWORD PTR fs:0x28
  403dc2:	mov    QWORD PTR [rbp-0x8],rax
  403dc6:	xor    eax,eax
  403dc8:	mov    QWORD PTR [rbp-0x18],0x0
  403dd0:	mov    DWORD PTR [rbp-0x1c],0x0
  403dd7:	mov    rax,QWORD PTR [rbp-0x30]
  403ddb:	mov    QWORD PTR [rbp-0x10],rax
  403ddf:	mov    rax,QWORD PTR [rbp-0x40]
  403de3:	mov    QWORD PTR [rax],0x0
  403dea:	mov    rax,QWORD PTR [rbp-0x30]
  403dee:	cmp    rax,QWORD PTR [rbp-0x38]
  403df2:	jne    403dfa <_start@@Base+0xcea>
  403df4:	mov    rax,QWORD PTR [rbp-0x30]
  403df8:	jmp    403e52 <_start@@Base+0xd42>
  403dfa:	lea    rdi,[rbp-0x18]
  403dfe:	lea    rcx,[rbp-0x1c]
  403e02:	mov    rdx,QWORD PTR [rbp-0x38]
  403e06:	mov    rsi,QWORD PTR [rbp-0x30]
  403e0a:	mov    rax,QWORD PTR [rbp-0x28]
  403e0e:	mov    r8,rdi
  403e11:	mov    rdi,rax
  403e14:	call   411e79 <flatcc_json_parser_integer@@Base>
  403e19:	mov    QWORD PTR [rbp-0x30],rax
  403e1d:	mov    rax,QWORD PTR [rbp-0x30]
  403e21:	cmp    rax,QWORD PTR [rbp-0x10]
  403e25:	je     403e4e <_start@@Base+0xd3e>
  403e27:	mov    rdi,QWORD PTR [rbp-0x18]
  403e2b:	mov    ecx,DWORD PTR [rbp-0x1c]
  403e2e:	mov    r8,QWORD PTR [rbp-0x40]
  403e32:	mov    rdx,QWORD PTR [rbp-0x38]
  403e36:	mov    rsi,QWORD PTR [rbp-0x30]
  403e3a:	mov    rax,QWORD PTR [rbp-0x28]
  403e3e:	mov    r9,r8
  403e41:	mov    r8,rdi
  403e44:	mov    rdi,rax
  403e47:	call   40389f <_start@@Base+0x78f>
  403e4c:	jmp    403e52 <_start@@Base+0xd42>
  403e4e:	mov    rax,QWORD PTR [rbp-0x30]
  403e52:	mov    rdx,QWORD PTR [rbp-0x8]
  403e56:	xor    rdx,QWORD PTR fs:0x28
  403e5f:	je     403e66 <_start@@Base+0xd56>
  403e61:	call   403060 <__stack_chk_fail@plt>
  403e66:	leave  
  403e67:	ret    
  403e68:	push   rbp
  403e69:	mov    rbp,rsp
  403e6c:	sub    rsp,0x70
  403e70:	mov    QWORD PTR [rbp-0x48],rdi
  403e74:	mov    QWORD PTR [rbp-0x50],rsi
  403e78:	mov    QWORD PTR [rbp-0x58],rdx
  403e7c:	mov    QWORD PTR [rbp-0x60],rcx
  403e80:	mov    QWORD PTR [rbp-0x68],r8
  403e84:	mov    rax,QWORD PTR fs:0x28
  403e8d:	mov    QWORD PTR [rbp-0x8],rax
  403e91:	xor    eax,eax
  403e93:	mov    QWORD PTR [rbp-0x28],0x0
  403e9b:	mov    DWORD PTR [rbp-0x2c],0x0
  403ea2:	mov    rax,QWORD PTR [rbp-0x68]
  403ea6:	mov    QWORD PTR [rax],0x0
  403ead:	mov    rdx,QWORD PTR [rbp-0x58]
  403eb1:	mov    rcx,QWORD PTR [rbp-0x50]
  403eb5:	mov    rax,QWORD PTR [rbp-0x48]
  403eb9:	mov    rsi,rcx
  403ebc:	mov    rdi,rax
  403ebf:	call   403636 <_start@@Base+0x526>
  403ec4:	mov    QWORD PTR [rbp-0x50],rax
  403ec8:	mov    rax,QWORD PTR [rbp-0x50]
  403ecc:	cmp    rax,QWORD PTR [rbp-0x58]
  403ed0:	jne    403edb <_start@@Base+0xdcb>
  403ed2:	mov    rax,QWORD PTR [rbp-0x50]
  403ed6:	jmp    403fee <_start@@Base+0xede>
  403edb:	mov    rax,QWORD PTR [rbp-0x60]
  403edf:	mov    QWORD PTR [rbp-0x18],rax
  403ee3:	mov    rax,QWORD PTR [rbp-0x18]
  403ee7:	mov    rax,QWORD PTR [rax]
  403eea:	mov    rdx,QWORD PTR [rbp-0x50]
  403eee:	mov    QWORD PTR [rbp-0x10],rdx
  403ef2:	lea    r9,[rbp-0x30]
  403ef6:	lea    r8,[rbp-0x20]
  403efa:	lea    rcx,[rbp-0x34]
  403efe:	mov    rdx,QWORD PTR [rbp-0x58]
  403f02:	mov    rsi,QWORD PTR [rbp-0x10]
  403f06:	mov    rdi,QWORD PTR [rbp-0x48]
  403f0a:	call   rax
  403f0c:	mov    QWORD PTR [rbp-0x50],rax
  403f10:	mov    rax,QWORD PTR [rbp-0x50]
  403f14:	cmp    rax,QWORD PTR [rbp-0x58]
  403f18:	jne    403f23 <_start@@Base+0xe13>
  403f1a:	mov    rax,QWORD PTR [rbp-0x50]
  403f1e:	jmp    403fee <_start@@Base+0xede>
  403f23:	mov    rax,QWORD PTR [rbp-0x50]
  403f27:	cmp    rax,QWORD PTR [rbp-0x10]
  403f2b:	jne    403f3e <_start@@Base+0xe2e>
  403f2d:	add    QWORD PTR [rbp-0x18],0x8
  403f32:	mov    rax,QWORD PTR [rbp-0x18]
  403f36:	mov    rax,QWORD PTR [rax]
  403f39:	test   rax,rax
  403f3c:	jne    403ee3 <_start@@Base+0xdd3>
  403f3e:	mov    rax,QWORD PTR [rbp-0x10]
  403f42:	cmp    rax,QWORD PTR [rbp-0x50]
  403f46:	jne    403f66 <_start@@Base+0xe56>
  403f48:	mov    rdx,QWORD PTR [rbp-0x58]
  403f4c:	mov    rsi,QWORD PTR [rbp-0x50]
  403f50:	mov    rax,QWORD PTR [rbp-0x48]
  403f54:	mov    ecx,0x17
  403f59:	mov    rdi,rax
  403f5c:	call   410789 <flatcc_json_parser_set_error@@Base>
  403f61:	jmp    403fee <_start@@Base+0xede>
  403f66:	mov    eax,DWORD PTR [rbp-0x2c]
  403f69:	lea    edx,[rax+0x1]
  403f6c:	mov    DWORD PTR [rbp-0x2c],edx
  403f6f:	test   eax,eax
  403f71:	je     403f99 <_start@@Base+0xe89>
  403f73:	mov    rax,QWORD PTR [rbp-0x48]
  403f77:	mov    eax,DWORD PTR [rax+0x14]
  403f7a:	test   eax,eax
  403f7c:	je     403f99 <_start@@Base+0xe89>
  403f7e:	mov    rdx,QWORD PTR [rbp-0x58]
  403f82:	mov    rsi,QWORD PTR [rbp-0x50]
  403f86:	mov    rax,QWORD PTR [rbp-0x48]
  403f8a:	mov    ecx,0xe
  403f8f:	mov    rdi,rax
  403f92:	call   410789 <flatcc_json_parser_set_error@@Base>
  403f97:	jmp    403fee <_start@@Base+0xede>
  403f99:	mov    rdi,QWORD PTR [rbp-0x20]
  403f9d:	mov    ecx,DWORD PTR [rbp-0x34]
  403fa0:	lea    r8,[rbp-0x28]
  403fa4:	mov    rdx,QWORD PTR [rbp-0x58]
  403fa8:	mov    rsi,QWORD PTR [rbp-0x50]
  403fac:	mov    rax,QWORD PTR [rbp-0x48]
  403fb0:	mov    r9,r8
  403fb3:	mov    r8,rdi
  403fb6:	mov    rdi,rax
  403fb9:	call   403691 <_start@@Base+0x581>
  403fbe:	cmp    rax,QWORD PTR [rbp-0x58]
  403fc2:	jne    403fca <_start@@Base+0xeba>
  403fc4:	mov    rax,QWORD PTR [rbp-0x58]
  403fc8:	jmp    403fee <_start@@Base+0xede>
  403fca:	mov    rax,QWORD PTR [rbp-0x68]
  403fce:	mov    rdx,QWORD PTR [rax]
  403fd1:	mov    rax,QWORD PTR [rbp-0x28]
  403fd5:	add    rdx,rax
  403fd8:	mov    rax,QWORD PTR [rbp-0x68]
  403fdc:	mov    QWORD PTR [rax],rdx
  403fdf:	mov    eax,DWORD PTR [rbp-0x30]
  403fe2:	test   eax,eax
  403fe4:	jne    403edb <_start@@Base+0xdcb>
  403fea:	mov    rax,QWORD PTR [rbp-0x50]
  403fee:	mov    rdi,QWORD PTR [rbp-0x8]
  403ff2:	xor    rdi,QWORD PTR fs:0x28
  403ffb:	je     404002 <_start@@Base+0xef2>
  403ffd:	call   403060 <__stack_chk_fail@plt>
  404002:	leave  
  404003:	ret    
  404004:	push   rbp
  404005:	mov    rbp,rsp
  404008:	sub    rsp,0x60
  40400c:	mov    QWORD PTR [rbp-0x38],rdi
  404010:	mov    QWORD PTR [rbp-0x40],rsi
  404014:	mov    QWORD PTR [rbp-0x48],rdx
  404018:	mov    QWORD PTR [rbp-0x50],rcx
  40401c:	mov    QWORD PTR [rbp-0x58],r8
  404020:	mov    rax,QWORD PTR fs:0x28
  404029:	mov    QWORD PTR [rbp-0x8],rax
  40402d:	xor    eax,eax
  40402f:	mov    DWORD PTR [rbp-0x30],0x0
  404036:	mov    DWORD PTR [rbp-0x24],0x0
  40403d:	mov    rax,QWORD PTR [rbp-0x58]
  404041:	mov    DWORD PTR [rax],0x0
  404047:	mov    rdx,QWORD PTR [rbp-0x48]
  40404b:	mov    rcx,QWORD PTR [rbp-0x40]
  40404f:	mov    rax,QWORD PTR [rbp-0x38]
  404053:	mov    rsi,rcx
  404056:	mov    rdi,rax
  404059:	call   403636 <_start@@Base+0x526>
  40405e:	mov    QWORD PTR [rbp-0x40],rax
  404062:	mov    rax,QWORD PTR [rbp-0x40]
  404066:	cmp    rax,QWORD PTR [rbp-0x48]
  40406a:	jne    404075 <_start@@Base+0xf65>
  40406c:	mov    rax,QWORD PTR [rbp-0x40]
  404070:	jmp    404184 <_start@@Base+0x1074>
  404075:	mov    rax,QWORD PTR [rbp-0x50]
  404079:	mov    QWORD PTR [rbp-0x18],rax
  40407d:	mov    rax,QWORD PTR [rbp-0x18]
  404081:	mov    rax,QWORD PTR [rax]
  404084:	mov    rdx,QWORD PTR [rbp-0x40]
  404088:	mov    QWORD PTR [rbp-0x10],rdx
  40408c:	lea    r9,[rbp-0x28]
  404090:	lea    r8,[rbp-0x20]
  404094:	lea    rcx,[rbp-0x2c]
  404098:	mov    rdx,QWORD PTR [rbp-0x48]
  40409c:	mov    rsi,QWORD PTR [rbp-0x10]
  4040a0:	mov    rdi,QWORD PTR [rbp-0x38]
  4040a4:	call   rax
  4040a6:	mov    QWORD PTR [rbp-0x40],rax
  4040aa:	mov    rax,QWORD PTR [rbp-0x40]
  4040ae:	cmp    rax,QWORD PTR [rbp-0x48]
  4040b2:	jne    4040bd <_start@@Base+0xfad>
  4040b4:	mov    rax,QWORD PTR [rbp-0x40]
  4040b8:	jmp    404184 <_start@@Base+0x1074>
  4040bd:	mov    rax,QWORD PTR [rbp-0x40]
  4040c1:	cmp    rax,QWORD PTR [rbp-0x10]
  4040c5:	jne    4040d8 <_start@@Base+0xfc8>
  4040c7:	add    QWORD PTR [rbp-0x18],0x8
  4040cc:	mov    rax,QWORD PTR [rbp-0x18]
  4040d0:	mov    rax,QWORD PTR [rax]
  4040d3:	test   rax,rax
  4040d6:	jne    40407d <_start@@Base+0xf6d>
  4040d8:	mov    rax,QWORD PTR [rbp-0x10]
  4040dc:	cmp    rax,QWORD PTR [rbp-0x40]
  4040e0:	jne    404100 <_start@@Base+0xff0>
  4040e2:	mov    rdx,QWORD PTR [rbp-0x48]
  4040e6:	mov    rsi,QWORD PTR [rbp-0x40]
  4040ea:	mov    rax,QWORD PTR [rbp-0x38]
  4040ee:	mov    ecx,0x17
  4040f3:	mov    rdi,rax
  4040f6:	call   410789 <flatcc_json_parser_set_error@@Base>
  4040fb:	jmp    404184 <_start@@Base+0x1074>
  404100:	mov    eax,DWORD PTR [rbp-0x24]
  404103:	lea    edx,[rax+0x1]
  404106:	mov    DWORD PTR [rbp-0x24],edx
  404109:	test   eax,eax
  40410b:	je     404133 <_start@@Base+0x1023>
  40410d:	mov    rax,QWORD PTR [rbp-0x38]
  404111:	mov    eax,DWORD PTR [rax+0x14]
  404114:	test   eax,eax
  404116:	je     404133 <_start@@Base+0x1023>
  404118:	mov    rdx,QWORD PTR [rbp-0x48]
  40411c:	mov    rsi,QWORD PTR [rbp-0x40]
  404120:	mov    rax,QWORD PTR [rbp-0x38]
  404124:	mov    ecx,0xe
  404129:	mov    rdi,rax
  40412c:	call   410789 <flatcc_json_parser_set_error@@Base>
  404131:	jmp    404184 <_start@@Base+0x1074>
  404133:	mov    rdi,QWORD PTR [rbp-0x20]
  404137:	mov    ecx,DWORD PTR [rbp-0x2c]
  40413a:	lea    r8,[rbp-0x30]
  40413e:	mov    rdx,QWORD PTR [rbp-0x48]
  404142:	mov    rsi,QWORD PTR [rbp-0x40]
  404146:	mov    rax,QWORD PTR [rbp-0x38]
  40414a:	mov    r9,r8
  40414d:	mov    r8,rdi
  404150:	mov    rdi,rax
  404153:	call   403738 <_start@@Base+0x628>
  404158:	cmp    rax,QWORD PTR [rbp-0x48]
  40415c:	jne    404164 <_start@@Base+0x1054>
  40415e:	mov    rax,QWORD PTR [rbp-0x48]
  404162:	jmp    404184 <_start@@Base+0x1074>
  404164:	mov    rax,QWORD PTR [rbp-0x58]
  404168:	mov    edx,DWORD PTR [rax]
  40416a:	mov    eax,DWORD PTR [rbp-0x30]
  40416d:	add    edx,eax
  40416f:	mov    rax,QWORD PTR [rbp-0x58]
  404173:	mov    DWORD PTR [rax],edx
  404175:	mov    eax,DWORD PTR [rbp-0x28]
  404178:	test   eax,eax
  40417a:	jne    404075 <_start@@Base+0xf65>
  404180:	mov    rax,QWORD PTR [rbp-0x40]
  404184:	mov    rdi,QWORD PTR [rbp-0x8]
  404188:	xor    rdi,QWORD PTR fs:0x28
  404191:	je     404198 <_start@@Base+0x1088>
  404193:	call   403060 <__stack_chk_fail@plt>
  404198:	leave  
  404199:	ret    
  40419a:	push   rbp
  40419b:	mov    rbp,rsp
  40419e:	sub    rsp,0x60
  4041a2:	mov    QWORD PTR [rbp-0x38],rdi
  4041a6:	mov    QWORD PTR [rbp-0x40],rsi
  4041aa:	mov    QWORD PTR [rbp-0x48],rdx
  4041ae:	mov    QWORD PTR [rbp-0x50],rcx
  4041b2:	mov    QWORD PTR [rbp-0x58],r8
  4041b6:	mov    rax,QWORD PTR fs:0x28
  4041bf:	mov    QWORD PTR [rbp-0x8],rax
  4041c3:	xor    eax,eax
  4041c5:	mov    WORD PTR [rbp-0x2e],0x0
  4041cb:	mov    DWORD PTR [rbp-0x24],0x0
  4041d2:	mov    rax,QWORD PTR [rbp-0x58]
  4041d6:	mov    WORD PTR [rax],0x0
  4041db:	mov    rdx,QWORD PTR [rbp-0x48]
  4041df:	mov    rcx,QWORD PTR [rbp-0x40]
  4041e3:	mov    rax,QWORD PTR [rbp-0x38]
  4041e7:	mov    rsi,rcx
  4041ea:	mov    rdi,rax
  4041ed:	call   403636 <_start@@Base+0x526>
  4041f2:	mov    QWORD PTR [rbp-0x40],rax
  4041f6:	mov    rax,QWORD PTR [rbp-0x40]
  4041fa:	cmp    rax,QWORD PTR [rbp-0x48]
  4041fe:	jne    404209 <_start@@Base+0x10f9>
  404200:	mov    rax,QWORD PTR [rbp-0x40]
  404204:	jmp    40431b <_start@@Base+0x120b>
  404209:	mov    rax,QWORD PTR [rbp-0x50]
  40420d:	mov    QWORD PTR [rbp-0x18],rax
  404211:	mov    rax,QWORD PTR [rbp-0x18]
  404215:	mov    rax,QWORD PTR [rax]
  404218:	mov    rdx,QWORD PTR [rbp-0x40]
  40421c:	mov    QWORD PTR [rbp-0x10],rdx
  404220:	lea    r9,[rbp-0x28]
  404224:	lea    r8,[rbp-0x20]
  404228:	lea    rcx,[rbp-0x2c]
  40422c:	mov    rdx,QWORD PTR [rbp-0x48]
  404230:	mov    rsi,QWORD PTR [rbp-0x10]
  404234:	mov    rdi,QWORD PTR [rbp-0x38]
  404238:	call   rax
  40423a:	mov    QWORD PTR [rbp-0x40],rax
  40423e:	mov    rax,QWORD PTR [rbp-0x40]
  404242:	cmp    rax,QWORD PTR [rbp-0x48]
  404246:	jne    404251 <_start@@Base+0x1141>
  404248:	mov    rax,QWORD PTR [rbp-0x40]
  40424c:	jmp    40431b <_start@@Base+0x120b>
  404251:	mov    rax,QWORD PTR [rbp-0x40]
  404255:	cmp    rax,QWORD PTR [rbp-0x10]
  404259:	jne    40426c <_start@@Base+0x115c>
  40425b:	add    QWORD PTR [rbp-0x18],0x8
  404260:	mov    rax,QWORD PTR [rbp-0x18]
  404264:	mov    rax,QWORD PTR [rax]
  404267:	test   rax,rax
  40426a:	jne    404211 <_start@@Base+0x1101>
  40426c:	mov    rax,QWORD PTR [rbp-0x10]
  404270:	cmp    rax,QWORD PTR [rbp-0x40]
  404274:	jne    404294 <_start@@Base+0x1184>
  404276:	mov    rdx,QWORD PTR [rbp-0x48]
  40427a:	mov    rsi,QWORD PTR [rbp-0x40]
  40427e:	mov    rax,QWORD PTR [rbp-0x38]
  404282:	mov    ecx,0x17
  404287:	mov    rdi,rax
  40428a:	call   410789 <flatcc_json_parser_set_error@@Base>
  40428f:	jmp    40431b <_start@@Base+0x120b>
  404294:	mov    eax,DWORD PTR [rbp-0x24]
  404297:	lea    edx,[rax+0x1]
  40429a:	mov    DWORD PTR [rbp-0x24],edx
  40429d:	test   eax,eax
  40429f:	je     4042c7 <_start@@Base+0x11b7>
  4042a1:	mov    rax,QWORD PTR [rbp-0x38]
  4042a5:	mov    eax,DWORD PTR [rax+0x14]
  4042a8:	test   eax,eax
  4042aa:	je     4042c7 <_start@@Base+0x11b7>
  4042ac:	mov    rdx,QWORD PTR [rbp-0x48]
  4042b0:	mov    rsi,QWORD PTR [rbp-0x40]
  4042b4:	mov    rax,QWORD PTR [rbp-0x38]
  4042b8:	mov    ecx,0xe
  4042bd:	mov    rdi,rax
  4042c0:	call   410789 <flatcc_json_parser_set_error@@Base>
  4042c5:	jmp    40431b <_start@@Base+0x120b>
  4042c7:	mov    rdi,QWORD PTR [rbp-0x20]
  4042cb:	mov    ecx,DWORD PTR [rbp-0x2c]
  4042ce:	lea    r8,[rbp-0x2e]
  4042d2:	mov    rdx,QWORD PTR [rbp-0x48]
  4042d6:	mov    rsi,QWORD PTR [rbp-0x40]
  4042da:	mov    rax,QWORD PTR [rbp-0x38]
  4042de:	mov    r9,r8
  4042e1:	mov    r8,rdi
  4042e4:	mov    rdi,rax
  4042e7:	call   4037b0 <_start@@Base+0x6a0>
  4042ec:	cmp    rax,QWORD PTR [rbp-0x48]
  4042f0:	jne    4042f8 <_start@@Base+0x11e8>
  4042f2:	mov    rax,QWORD PTR [rbp-0x48]
  4042f6:	jmp    40431b <_start@@Base+0x120b>
  4042f8:	mov    rax,QWORD PTR [rbp-0x58]
  4042fc:	movzx  edx,WORD PTR [rax]
  4042ff:	movzx  eax,WORD PTR [rbp-0x2e]
  404303:	add    edx,eax
  404305:	mov    rax,QWORD PTR [rbp-0x58]
  404309:	mov    WORD PTR [rax],dx
  40430c:	mov    eax,DWORD PTR [rbp-0x28]
  40430f:	test   eax,eax
  404311:	jne    404209 <_start@@Base+0x10f9>
  404317:	mov    rax,QWORD PTR [rbp-0x40]
  40431b:	mov    rdi,QWORD PTR [rbp-0x8]
  40431f:	xor    rdi,QWORD PTR fs:0x28
  404328:	je     40432f <_start@@Base+0x121f>
  40432a:	call   403060 <__stack_chk_fail@plt>
  40432f:	leave  
  404330:	ret    
  404331:	push   rbp
  404332:	mov    rbp,rsp
  404335:	sub    rsp,0x60
  404339:	mov    QWORD PTR [rbp-0x38],rdi
  40433d:	mov    QWORD PTR [rbp-0x40],rsi
  404341:	mov    QWORD PTR [rbp-0x48],rdx
  404345:	mov    QWORD PTR [rbp-0x50],rcx
  404349:	mov    QWORD PTR [rbp-0x58],r8
  40434d:	mov    rax,QWORD PTR fs:0x28
  404356:	mov    QWORD PTR [rbp-0x8],rax
  40435a:	xor    eax,eax
  40435c:	mov    BYTE PTR [rbp-0x2d],0x0
  404360:	mov    DWORD PTR [rbp-0x24],0x0
  404367:	mov    rax,QWORD PTR [rbp-0x58]
  40436b:	mov    BYTE PTR [rax],0x0
  40436e:	mov    rdx,QWORD PTR [rbp-0x48]
  404372:	mov    rcx,QWORD PTR [rbp-0x40]
  404376:	mov    rax,QWORD PTR [rbp-0x38]
  40437a:	mov    rsi,rcx
  40437d:	mov    rdi,rax
  404380:	call   403636 <_start@@Base+0x526>
  404385:	mov    QWORD PTR [rbp-0x40],rax
  404389:	mov    rax,QWORD PTR [rbp-0x40]
  40438d:	cmp    rax,QWORD PTR [rbp-0x48]
  404391:	jne    40439c <_start@@Base+0x128c>
  404393:	mov    rax,QWORD PTR [rbp-0x40]
  404397:	jmp    4044ad <_start@@Base+0x139d>
  40439c:	mov    rax,QWORD PTR [rbp-0x50]
  4043a0:	mov    QWORD PTR [rbp-0x18],rax
  4043a4:	mov    rax,QWORD PTR [rbp-0x18]
  4043a8:	mov    rax,QWORD PTR [rax]
  4043ab:	mov    rdx,QWORD PTR [rbp-0x40]
  4043af:	mov    QWORD PTR [rbp-0x10],rdx
  4043b3:	lea    r9,[rbp-0x28]
  4043b7:	lea    r8,[rbp-0x20]
  4043bb:	lea    rcx,[rbp-0x2c]
  4043bf:	mov    rdx,QWORD PTR [rbp-0x48]
  4043c3:	mov    rsi,QWORD PTR [rbp-0x10]
  4043c7:	mov    rdi,QWORD PTR [rbp-0x38]
  4043cb:	call   rax
  4043cd:	mov    QWORD PTR [rbp-0x40],rax
  4043d1:	mov    rax,QWORD PTR [rbp-0x40]
  4043d5:	cmp    rax,QWORD PTR [rbp-0x48]
  4043d9:	jne    4043e4 <_start@@Base+0x12d4>
  4043db:	mov    rax,QWORD PTR [rbp-0x40]
  4043df:	jmp    4044ad <_start@@Base+0x139d>
  4043e4:	mov    rax,QWORD PTR [rbp-0x40]
  4043e8:	cmp    rax,QWORD PTR [rbp-0x10]
  4043ec:	jne    4043ff <_start@@Base+0x12ef>
  4043ee:	add    QWORD PTR [rbp-0x18],0x8
  4043f3:	mov    rax,QWORD PTR [rbp-0x18]
  4043f7:	mov    rax,QWORD PTR [rax]
  4043fa:	test   rax,rax
  4043fd:	jne    4043a4 <_start@@Base+0x1294>
  4043ff:	mov    rax,QWORD PTR [rbp-0x10]
  404403:	cmp    rax,QWORD PTR [rbp-0x40]
  404407:	jne    404427 <_start@@Base+0x1317>
  404409:	mov    rdx,QWORD PTR [rbp-0x48]
  40440d:	mov    rsi,QWORD PTR [rbp-0x40]
  404411:	mov    rax,QWORD PTR [rbp-0x38]
  404415:	mov    ecx,0x17
  40441a:	mov    rdi,rax
  40441d:	call   410789 <flatcc_json_parser_set_error@@Base>
  404422:	jmp    4044ad <_start@@Base+0x139d>
  404427:	mov    eax,DWORD PTR [rbp-0x24]
  40442a:	lea    edx,[rax+0x1]
  40442d:	mov    DWORD PTR [rbp-0x24],edx
  404430:	test   eax,eax
  404432:	je     40445a <_start@@Base+0x134a>
  404434:	mov    rax,QWORD PTR [rbp-0x38]
  404438:	mov    eax,DWORD PTR [rax+0x14]
  40443b:	test   eax,eax
  40443d:	je     40445a <_start@@Base+0x134a>
  40443f:	mov    rdx,QWORD PTR [rbp-0x48]
  404443:	mov    rsi,QWORD PTR [rbp-0x40]
  404447:	mov    rax,QWORD PTR [rbp-0x38]
  40444b:	mov    ecx,0xe
  404450:	mov    rdi,rax
  404453:	call   410789 <flatcc_json_parser_set_error@@Base>
  404458:	jmp    4044ad <_start@@Base+0x139d>
  40445a:	mov    rdi,QWORD PTR [rbp-0x20]
  40445e:	mov    ecx,DWORD PTR [rbp-0x2c]
  404461:	lea    r8,[rbp-0x2d]
  404465:	mov    rdx,QWORD PTR [rbp-0x48]
  404469:	mov    rsi,QWORD PTR [rbp-0x40]
  40446d:	mov    rax,QWORD PTR [rbp-0x38]
  404471:	mov    r9,r8
  404474:	mov    r8,rdi
  404477:	mov    rdi,rax
  40447a:	call   403828 <_start@@Base+0x718>
  40447f:	cmp    rax,QWORD PTR [rbp-0x48]
  404483:	jne    40448b <_start@@Base+0x137b>
  404485:	mov    rax,QWORD PTR [rbp-0x48]
  404489:	jmp    4044ad <_start@@Base+0x139d>
  40448b:	mov    rax,QWORD PTR [rbp-0x58]
  40448f:	movzx  edx,BYTE PTR [rax]
  404492:	movzx  eax,BYTE PTR [rbp-0x2d]
  404496:	add    edx,eax
  404498:	mov    rax,QWORD PTR [rbp-0x58]
  40449c:	mov    BYTE PTR [rax],dl
  40449e:	mov    eax,DWORD PTR [rbp-0x28]
  4044a1:	test   eax,eax
  4044a3:	jne    40439c <_start@@Base+0x128c>
  4044a9:	mov    rax,QWORD PTR [rbp-0x40]
  4044ad:	mov    rdi,QWORD PTR [rbp-0x8]
  4044b1:	xor    rdi,QWORD PTR fs:0x28
  4044ba:	je     4044c1 <_start@@Base+0x13b1>
  4044bc:	call   403060 <__stack_chk_fail@plt>
  4044c1:	leave  
  4044c2:	ret    
  4044c3:	push   rbp
  4044c4:	mov    rbp,rsp
  4044c7:	sub    rsp,0x70
  4044cb:	mov    QWORD PTR [rbp-0x48],rdi
  4044cf:	mov    QWORD PTR [rbp-0x50],rsi
  4044d3:	mov    QWORD PTR [rbp-0x58],rdx
  4044d7:	mov    QWORD PTR [rbp-0x60],rcx
  4044db:	mov    QWORD PTR [rbp-0x68],r8
  4044df:	mov    rax,QWORD PTR fs:0x28
  4044e8:	mov    QWORD PTR [rbp-0x8],rax
  4044ec:	xor    eax,eax
  4044ee:	mov    QWORD PTR [rbp-0x28],0x0
  4044f6:	mov    DWORD PTR [rbp-0x2c],0x0
  4044fd:	mov    rax,QWORD PTR [rbp-0x68]
  404501:	mov    QWORD PTR [rax],0x0
  404508:	mov    rdx,QWORD PTR [rbp-0x58]
  40450c:	mov    rcx,QWORD PTR [rbp-0x50]
  404510:	mov    rax,QWORD PTR [rbp-0x48]
  404514:	mov    rsi,rcx
  404517:	mov    rdi,rax
  40451a:	call   403636 <_start@@Base+0x526>
  40451f:	mov    QWORD PTR [rbp-0x50],rax
  404523:	mov    rax,QWORD PTR [rbp-0x50]
  404527:	cmp    rax,QWORD PTR [rbp-0x58]
  40452b:	jne    404536 <_start@@Base+0x1426>
  40452d:	mov    rax,QWORD PTR [rbp-0x50]
  404531:	jmp    404649 <_start@@Base+0x1539>
  404536:	mov    rax,QWORD PTR [rbp-0x60]
  40453a:	mov    QWORD PTR [rbp-0x18],rax
  40453e:	mov    rax,QWORD PTR [rbp-0x18]
  404542:	mov    rax,QWORD PTR [rax]
  404545:	mov    rdx,QWORD PTR [rbp-0x50]
  404549:	mov    QWORD PTR [rbp-0x10],rdx
  40454d:	lea    r9,[rbp-0x30]
  404551:	lea    r8,[rbp-0x20]
  404555:	lea    rcx,[rbp-0x34]
  404559:	mov    rdx,QWORD PTR [rbp-0x58]
  40455d:	mov    rsi,QWORD PTR [rbp-0x10]
  404561:	mov    rdi,QWORD PTR [rbp-0x48]
  404565:	call   rax
  404567:	mov    QWORD PTR [rbp-0x50],rax
  40456b:	mov    rax,QWORD PTR [rbp-0x50]
  40456f:	cmp    rax,QWORD PTR [rbp-0x58]
  404573:	jne    40457e <_start@@Base+0x146e>
  404575:	mov    rax,QWORD PTR [rbp-0x50]
  404579:	jmp    404649 <_start@@Base+0x1539>
  40457e:	mov    rax,QWORD PTR [rbp-0x50]
  404582:	cmp    rax,QWORD PTR [rbp-0x10]
  404586:	jne    404599 <_start@@Base+0x1489>
  404588:	add    QWORD PTR [rbp-0x18],0x8
  40458d:	mov    rax,QWORD PTR [rbp-0x18]
  404591:	mov    rax,QWORD PTR [rax]
  404594:	test   rax,rax
  404597:	jne    40453e <_start@@Base+0x142e>
  404599:	mov    rax,QWORD PTR [rbp-0x10]
  40459d:	cmp    rax,QWORD PTR [rbp-0x50]
  4045a1:	jne    4045c1 <_start@@Base+0x14b1>
  4045a3:	mov    rdx,QWORD PTR [rbp-0x58]
  4045a7:	mov    rsi,QWORD PTR [rbp-0x50]
  4045ab:	mov    rax,QWORD PTR [rbp-0x48]
  4045af:	mov    ecx,0x17
  4045b4:	mov    rdi,rax
  4045b7:	call   410789 <flatcc_json_parser_set_error@@Base>
  4045bc:	jmp    404649 <_start@@Base+0x1539>
  4045c1:	mov    eax,DWORD PTR [rbp-0x2c]
  4045c4:	lea    edx,[rax+0x1]
  4045c7:	mov    DWORD PTR [rbp-0x2c],edx
  4045ca:	test   eax,eax
  4045cc:	je     4045f4 <_start@@Base+0x14e4>
  4045ce:	mov    rax,QWORD PTR [rbp-0x48]
  4045d2:	mov    eax,DWORD PTR [rax+0x14]
  4045d5:	test   eax,eax
  4045d7:	je     4045f4 <_start@@Base+0x14e4>
  4045d9:	mov    rdx,QWORD PTR [rbp-0x58]
  4045dd:	mov    rsi,QWORD PTR [rbp-0x50]
  4045e1:	mov    rax,QWORD PTR [rbp-0x48]
  4045e5:	mov    ecx,0xe
  4045ea:	mov    rdi,rax
  4045ed:	call   410789 <flatcc_json_parser_set_error@@Base>
  4045f2:	jmp    404649 <_start@@Base+0x1539>
  4045f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4045f8:	mov    ecx,DWORD PTR [rbp-0x34]
  4045fb:	lea    r8,[rbp-0x28]
  4045ff:	mov    rdx,QWORD PTR [rbp-0x58]
  404603:	mov    rsi,QWORD PTR [rbp-0x50]
  404607:	mov    rax,QWORD PTR [rbp-0x48]
  40460b:	mov    r9,r8
  40460e:	mov    r8,rdi
  404611:	mov    rdi,rax
  404614:	call   40389f <_start@@Base+0x78f>
  404619:	cmp    rax,QWORD PTR [rbp-0x58]
  40461d:	jne    404625 <_start@@Base+0x1515>
  40461f:	mov    rax,QWORD PTR [rbp-0x58]
  404623:	jmp    404649 <_start@@Base+0x1539>
  404625:	mov    rax,QWORD PTR [rbp-0x68]
  404629:	mov    rdx,QWORD PTR [rax]
  40462c:	mov    rax,QWORD PTR [rbp-0x28]
  404630:	add    rdx,rax
  404633:	mov    rax,QWORD PTR [rbp-0x68]
  404637:	mov    QWORD PTR [rax],rdx
  40463a:	mov    eax,DWORD PTR [rbp-0x30]
  40463d:	test   eax,eax
  40463f:	jne    404536 <_start@@Base+0x1426>
  404645:	mov    rax,QWORD PTR [rbp-0x50]
  404649:	mov    rdi,QWORD PTR [rbp-0x8]
  40464d:	xor    rdi,QWORD PTR fs:0x28
  404656:	je     40465d <_start@@Base+0x154d>
  404658:	call   403060 <__stack_chk_fail@plt>
  40465d:	leave  
  40465e:	ret    
  40465f:	push   rbp
  404660:	mov    rbp,rsp
  404663:	sub    rsp,0x60
  404667:	mov    QWORD PTR [rbp-0x38],rdi
  40466b:	mov    QWORD PTR [rbp-0x40],rsi
  40466f:	mov    QWORD PTR [rbp-0x48],rdx
  404673:	mov    QWORD PTR [rbp-0x50],rcx
  404677:	mov    QWORD PTR [rbp-0x58],r8
  40467b:	mov    rax,QWORD PTR fs:0x28
  404684:	mov    QWORD PTR [rbp-0x8],rax
  404688:	xor    eax,eax
  40468a:	mov    DWORD PTR [rbp-0x30],0x0
  404691:	mov    DWORD PTR [rbp-0x24],0x0
  404698:	mov    rax,QWORD PTR [rbp-0x58]
  40469c:	mov    DWORD PTR [rax],0x0
  4046a2:	mov    rdx,QWORD PTR [rbp-0x48]
  4046a6:	mov    rcx,QWORD PTR [rbp-0x40]
  4046aa:	mov    rax,QWORD PTR [rbp-0x38]
  4046ae:	mov    rsi,rcx
  4046b1:	mov    rdi,rax
  4046b4:	call   403636 <_start@@Base+0x526>
  4046b9:	mov    QWORD PTR [rbp-0x40],rax
  4046bd:	mov    rax,QWORD PTR [rbp-0x40]
  4046c1:	cmp    rax,QWORD PTR [rbp-0x48]
  4046c5:	jne    4046d0 <_start@@Base+0x15c0>
  4046c7:	mov    rax,QWORD PTR [rbp-0x40]
  4046cb:	jmp    4047df <_start@@Base+0x16cf>
  4046d0:	mov    rax,QWORD PTR [rbp-0x50]
  4046d4:	mov    QWORD PTR [rbp-0x18],rax
  4046d8:	mov    rax,QWORD PTR [rbp-0x18]
  4046dc:	mov    rax,QWORD PTR [rax]
  4046df:	mov    rdx,QWORD PTR [rbp-0x40]
  4046e3:	mov    QWORD PTR [rbp-0x10],rdx
  4046e7:	lea    r9,[rbp-0x28]
  4046eb:	lea    r8,[rbp-0x20]
  4046ef:	lea    rcx,[rbp-0x2c]
  4046f3:	mov    rdx,QWORD PTR [rbp-0x48]
  4046f7:	mov    rsi,QWORD PTR [rbp-0x10]
  4046fb:	mov    rdi,QWORD PTR [rbp-0x38]
  4046ff:	call   rax
  404701:	mov    QWORD PTR [rbp-0x40],rax
  404705:	mov    rax,QWORD PTR [rbp-0x40]
  404709:	cmp    rax,QWORD PTR [rbp-0x48]
  40470d:	jne    404718 <_start@@Base+0x1608>
  40470f:	mov    rax,QWORD PTR [rbp-0x40]
  404713:	jmp    4047df <_start@@Base+0x16cf>
  404718:	mov    rax,QWORD PTR [rbp-0x40]
  40471c:	cmp    rax,QWORD PTR [rbp-0x10]
  404720:	jne    404733 <_start@@Base+0x1623>
  404722:	add    QWORD PTR [rbp-0x18],0x8
  404727:	mov    rax,QWORD PTR [rbp-0x18]
  40472b:	mov    rax,QWORD PTR [rax]
  40472e:	test   rax,rax
  404731:	jne    4046d8 <_start@@Base+0x15c8>
  404733:	mov    rax,QWORD PTR [rbp-0x10]
  404737:	cmp    rax,QWORD PTR [rbp-0x40]
  40473b:	jne    40475b <_start@@Base+0x164b>
  40473d:	mov    rdx,QWORD PTR [rbp-0x48]
  404741:	mov    rsi,QWORD PTR [rbp-0x40]
  404745:	mov    rax,QWORD PTR [rbp-0x38]
  404749:	mov    ecx,0x17
  40474e:	mov    rdi,rax
  404751:	call   410789 <flatcc_json_parser_set_error@@Base>
  404756:	jmp    4047df <_start@@Base+0x16cf>
  40475b:	mov    eax,DWORD PTR [rbp-0x24]
  40475e:	lea    edx,[rax+0x1]
  404761:	mov    DWORD PTR [rbp-0x24],edx
  404764:	test   eax,eax
  404766:	je     40478e <_start@@Base+0x167e>
  404768:	mov    rax,QWORD PTR [rbp-0x38]
  40476c:	mov    eax,DWORD PTR [rax+0x14]
  40476f:	test   eax,eax
  404771:	je     40478e <_start@@Base+0x167e>
  404773:	mov    rdx,QWORD PTR [rbp-0x48]
  404777:	mov    rsi,QWORD PTR [rbp-0x40]
  40477b:	mov    rax,QWORD PTR [rbp-0x38]
  40477f:	mov    ecx,0xe
  404784:	mov    rdi,rax
  404787:	call   410789 <flatcc_json_parser_set_error@@Base>
  40478c:	jmp    4047df <_start@@Base+0x16cf>
  40478e:	mov    rdi,QWORD PTR [rbp-0x20]
  404792:	mov    ecx,DWORD PTR [rbp-0x2c]
  404795:	lea    r8,[rbp-0x30]
  404799:	mov    rdx,QWORD PTR [rbp-0x48]
  40479d:	mov    rsi,QWORD PTR [rbp-0x40]
  4047a1:	mov    rax,QWORD PTR [rbp-0x38]
  4047a5:	mov    r9,r8
  4047a8:	mov    r8,rdi
  4047ab:	mov    rdi,rax
  4047ae:	call   403937 <_start@@Base+0x827>
  4047b3:	cmp    rax,QWORD PTR [rbp-0x48]
  4047b7:	jne    4047bf <_start@@Base+0x16af>
  4047b9:	mov    rax,QWORD PTR [rbp-0x48]
  4047bd:	jmp    4047df <_start@@Base+0x16cf>
  4047bf:	mov    rax,QWORD PTR [rbp-0x58]
  4047c3:	mov    edx,DWORD PTR [rax]
  4047c5:	mov    eax,DWORD PTR [rbp-0x30]
  4047c8:	add    edx,eax
  4047ca:	mov    rax,QWORD PTR [rbp-0x58]
  4047ce:	mov    DWORD PTR [rax],edx
  4047d0:	mov    eax,DWORD PTR [rbp-0x28]
  4047d3:	test   eax,eax
  4047d5:	jne    4046d0 <_start@@Base+0x15c0>
  4047db:	mov    rax,QWORD PTR [rbp-0x40]
  4047df:	mov    rdi,QWORD PTR [rbp-0x8]
  4047e3:	xor    rdi,QWORD PTR fs:0x28
  4047ec:	je     4047f3 <_start@@Base+0x16e3>
  4047ee:	call   403060 <__stack_chk_fail@plt>
  4047f3:	leave  
  4047f4:	ret    
  4047f5:	push   rbp
  4047f6:	mov    rbp,rsp
  4047f9:	sub    rsp,0x60
  4047fd:	mov    QWORD PTR [rbp-0x38],rdi
  404801:	mov    QWORD PTR [rbp-0x40],rsi
  404805:	mov    QWORD PTR [rbp-0x48],rdx
  404809:	mov    QWORD PTR [rbp-0x50],rcx
  40480d:	mov    QWORD PTR [rbp-0x58],r8
  404811:	mov    rax,QWORD PTR fs:0x28
  40481a:	mov    QWORD PTR [rbp-0x8],rax
  40481e:	xor    eax,eax
  404820:	mov    WORD PTR [rbp-0x2e],0x0
  404826:	mov    DWORD PTR [rbp-0x24],0x0
  40482d:	mov    rax,QWORD PTR [rbp-0x58]
  404831:	mov    WORD PTR [rax],0x0
  404836:	mov    rdx,QWORD PTR [rbp-0x48]
  40483a:	mov    rcx,QWORD PTR [rbp-0x40]
  40483e:	mov    rax,QWORD PTR [rbp-0x38]
  404842:	mov    rsi,rcx
  404845:	mov    rdi,rax
  404848:	call   403636 <_start@@Base+0x526>
  40484d:	mov    QWORD PTR [rbp-0x40],rax
  404851:	mov    rax,QWORD PTR [rbp-0x40]
  404855:	cmp    rax,QWORD PTR [rbp-0x48]
  404859:	jne    404864 <_start@@Base+0x1754>
  40485b:	mov    rax,QWORD PTR [rbp-0x40]
  40485f:	jmp    40497a <_start@@Base+0x186a>
  404864:	mov    rax,QWORD PTR [rbp-0x50]
  404868:	mov    QWORD PTR [rbp-0x18],rax
  40486c:	mov    rax,QWORD PTR [rbp-0x18]
  404870:	mov    rax,QWORD PTR [rax]
  404873:	mov    rdx,QWORD PTR [rbp-0x40]
  404877:	mov    QWORD PTR [rbp-0x10],rdx
  40487b:	lea    r9,[rbp-0x28]
  40487f:	lea    r8,[rbp-0x20]
  404883:	lea    rcx,[rbp-0x2c]
  404887:	mov    rdx,QWORD PTR [rbp-0x48]
  40488b:	mov    rsi,QWORD PTR [rbp-0x10]
  40488f:	mov    rdi,QWORD PTR [rbp-0x38]
  404893:	call   rax
  404895:	mov    QWORD PTR [rbp-0x40],rax
  404899:	mov    rax,QWORD PTR [rbp-0x40]
  40489d:	cmp    rax,QWORD PTR [rbp-0x48]
  4048a1:	jne    4048ac <_start@@Base+0x179c>
  4048a3:	mov    rax,QWORD PTR [rbp-0x40]
  4048a7:	jmp    40497a <_start@@Base+0x186a>
  4048ac:	mov    rax,QWORD PTR [rbp-0x40]
  4048b0:	cmp    rax,QWORD PTR [rbp-0x10]
  4048b4:	jne    4048c7 <_start@@Base+0x17b7>
  4048b6:	add    QWORD PTR [rbp-0x18],0x8
  4048bb:	mov    rax,QWORD PTR [rbp-0x18]
  4048bf:	mov    rax,QWORD PTR [rax]
  4048c2:	test   rax,rax
  4048c5:	jne    40486c <_start@@Base+0x175c>
  4048c7:	mov    rax,QWORD PTR [rbp-0x10]
  4048cb:	cmp    rax,QWORD PTR [rbp-0x40]
  4048cf:	jne    4048ef <_start@@Base+0x17df>
  4048d1:	mov    rdx,QWORD PTR [rbp-0x48]
  4048d5:	mov    rsi,QWORD PTR [rbp-0x40]
  4048d9:	mov    rax,QWORD PTR [rbp-0x38]
  4048dd:	mov    ecx,0x17
  4048e2:	mov    rdi,rax
  4048e5:	call   410789 <flatcc_json_parser_set_error@@Base>
  4048ea:	jmp    40497a <_start@@Base+0x186a>
  4048ef:	mov    eax,DWORD PTR [rbp-0x24]
  4048f2:	lea    edx,[rax+0x1]
  4048f5:	mov    DWORD PTR [rbp-0x24],edx
  4048f8:	test   eax,eax
  4048fa:	je     404922 <_start@@Base+0x1812>
  4048fc:	mov    rax,QWORD PTR [rbp-0x38]
  404900:	mov    eax,DWORD PTR [rax+0x14]
  404903:	test   eax,eax
  404905:	je     404922 <_start@@Base+0x1812>
  404907:	mov    rdx,QWORD PTR [rbp-0x48]
  40490b:	mov    rsi,QWORD PTR [rbp-0x40]
  40490f:	mov    rax,QWORD PTR [rbp-0x38]
  404913:	mov    ecx,0xe
  404918:	mov    rdi,rax
  40491b:	call   410789 <flatcc_json_parser_set_error@@Base>
  404920:	jmp    40497a <_start@@Base+0x186a>
  404922:	mov    rdi,QWORD PTR [rbp-0x20]
  404926:	mov    ecx,DWORD PTR [rbp-0x2c]
  404929:	lea    r8,[rbp-0x2e]
  40492d:	mov    rdx,QWORD PTR [rbp-0x48]
  404931:	mov    rsi,QWORD PTR [rbp-0x40]
  404935:	mov    rax,QWORD PTR [rbp-0x38]
  404939:	mov    r9,r8
  40493c:	mov    r8,rdi
  40493f:	mov    rdi,rax
  404942:	call   4039c9 <_start@@Base+0x8b9>
  404947:	cmp    rax,QWORD PTR [rbp-0x48]
  40494b:	jne    404953 <_start@@Base+0x1843>
  40494d:	mov    rax,QWORD PTR [rbp-0x48]
  404951:	jmp    40497a <_start@@Base+0x186a>
  404953:	mov    rax,QWORD PTR [rbp-0x58]
  404957:	movzx  eax,WORD PTR [rax]
  40495a:	mov    edx,eax
  40495c:	movzx  eax,WORD PTR [rbp-0x2e]
  404960:	add    eax,edx
  404962:	mov    edx,eax
  404964:	mov    rax,QWORD PTR [rbp-0x58]
  404968:	mov    WORD PTR [rax],dx
  40496b:	mov    eax,DWORD PTR [rbp-0x28]
  40496e:	test   eax,eax
  404970:	jne    404864 <_start@@Base+0x1754>
  404976:	mov    rax,QWORD PTR [rbp-0x40]
  40497a:	mov    rdi,QWORD PTR [rbp-0x8]
  40497e:	xor    rdi,QWORD PTR fs:0x28
  404987:	je     40498e <_start@@Base+0x187e>
  404989:	call   403060 <__stack_chk_fail@plt>
  40498e:	leave  
  40498f:	ret    
  404990:	push   rbp
  404991:	mov    rbp,rsp
  404994:	sub    rsp,0x60
  404998:	mov    QWORD PTR [rbp-0x38],rdi
  40499c:	mov    QWORD PTR [rbp-0x40],rsi
  4049a0:	mov    QWORD PTR [rbp-0x48],rdx
  4049a4:	mov    QWORD PTR [rbp-0x50],rcx
  4049a8:	mov    QWORD PTR [rbp-0x58],r8
  4049ac:	mov    rax,QWORD PTR fs:0x28
  4049b5:	mov    QWORD PTR [rbp-0x8],rax
  4049b9:	xor    eax,eax
  4049bb:	mov    BYTE PTR [rbp-0x2d],0x0
  4049bf:	mov    DWORD PTR [rbp-0x24],0x0
  4049c6:	mov    rax,QWORD PTR [rbp-0x58]
  4049ca:	mov    BYTE PTR [rax],0x0
  4049cd:	mov    rdx,QWORD PTR [rbp-0x48]
  4049d1:	mov    rcx,QWORD PTR [rbp-0x40]
  4049d5:	mov    rax,QWORD PTR [rbp-0x38]
  4049d9:	mov    rsi,rcx
  4049dc:	mov    rdi,rax
  4049df:	call   403636 <_start@@Base+0x526>
  4049e4:	mov    QWORD PTR [rbp-0x40],rax
  4049e8:	mov    rax,QWORD PTR [rbp-0x40]
  4049ec:	cmp    rax,QWORD PTR [rbp-0x48]
  4049f0:	jne    4049fb <_start@@Base+0x18eb>
  4049f2:	mov    rax,QWORD PTR [rbp-0x40]
  4049f6:	jmp    404b10 <_start@@Base+0x1a00>
  4049fb:	mov    rax,QWORD PTR [rbp-0x50]
  4049ff:	mov    QWORD PTR [rbp-0x18],rax
  404a03:	mov    rax,QWORD PTR [rbp-0x18]
  404a07:	mov    rax,QWORD PTR [rax]
  404a0a:	mov    rdx,QWORD PTR [rbp-0x40]
  404a0e:	mov    QWORD PTR [rbp-0x10],rdx
  404a12:	lea    r9,[rbp-0x28]
  404a16:	lea    r8,[rbp-0x20]
  404a1a:	lea    rcx,[rbp-0x2c]
  404a1e:	mov    rdx,QWORD PTR [rbp-0x48]
  404a22:	mov    rsi,QWORD PTR [rbp-0x10]
  404a26:	mov    rdi,QWORD PTR [rbp-0x38]
  404a2a:	call   rax
  404a2c:	mov    QWORD PTR [rbp-0x40],rax
  404a30:	mov    rax,QWORD PTR [rbp-0x40]
  404a34:	cmp    rax,QWORD PTR [rbp-0x48]
  404a38:	jne    404a43 <_start@@Base+0x1933>
  404a3a:	mov    rax,QWORD PTR [rbp-0x40]
  404a3e:	jmp    404b10 <_start@@Base+0x1a00>
  404a43:	mov    rax,QWORD PTR [rbp-0x40]
  404a47:	cmp    rax,QWORD PTR [rbp-0x10]
  404a4b:	jne    404a5e <_start@@Base+0x194e>
  404a4d:	add    QWORD PTR [rbp-0x18],0x8
  404a52:	mov    rax,QWORD PTR [rbp-0x18]
  404a56:	mov    rax,QWORD PTR [rax]
  404a59:	test   rax,rax
  404a5c:	jne    404a03 <_start@@Base+0x18f3>
  404a5e:	mov    rax,QWORD PTR [rbp-0x10]
  404a62:	cmp    rax,QWORD PTR [rbp-0x40]
  404a66:	jne    404a86 <_start@@Base+0x1976>
  404a68:	mov    rdx,QWORD PTR [rbp-0x48]
  404a6c:	mov    rsi,QWORD PTR [rbp-0x40]
  404a70:	mov    rax,QWORD PTR [rbp-0x38]
  404a74:	mov    ecx,0x17
  404a79:	mov    rdi,rax
  404a7c:	call   410789 <flatcc_json_parser_set_error@@Base>
  404a81:	jmp    404b10 <_start@@Base+0x1a00>
  404a86:	mov    eax,DWORD PTR [rbp-0x24]
  404a89:	lea    edx,[rax+0x1]
  404a8c:	mov    DWORD PTR [rbp-0x24],edx
  404a8f:	test   eax,eax
  404a91:	je     404ab9 <_start@@Base+0x19a9>
  404a93:	mov    rax,QWORD PTR [rbp-0x38]
  404a97:	mov    eax,DWORD PTR [rax+0x14]
  404a9a:	test   eax,eax
  404a9c:	je     404ab9 <_start@@Base+0x19a9>
  404a9e:	mov    rdx,QWORD PTR [rbp-0x48]
  404aa2:	mov    rsi,QWORD PTR [rbp-0x40]
  404aa6:	mov    rax,QWORD PTR [rbp-0x38]
  404aaa:	mov    ecx,0xe
  404aaf:	mov    rdi,rax
  404ab2:	call   410789 <flatcc_json_parser_set_error@@Base>
  404ab7:	jmp    404b10 <_start@@Base+0x1a00>
  404ab9:	mov    rdi,QWORD PTR [rbp-0x20]
  404abd:	mov    ecx,DWORD PTR [rbp-0x2c]
  404ac0:	lea    r8,[rbp-0x2d]
  404ac4:	mov    rdx,QWORD PTR [rbp-0x48]
  404ac8:	mov    rsi,QWORD PTR [rbp-0x40]
  404acc:	mov    rax,QWORD PTR [rbp-0x38]
  404ad0:	mov    r9,r8
  404ad3:	mov    r8,rdi
  404ad6:	mov    rdi,rax
  404ad9:	call   403a5c <_start@@Base+0x94c>
  404ade:	cmp    rax,QWORD PTR [rbp-0x48]
  404ae2:	jne    404aea <_start@@Base+0x19da>
  404ae4:	mov    rax,QWORD PTR [rbp-0x48]
  404ae8:	jmp    404b10 <_start@@Base+0x1a00>
  404aea:	mov    rax,QWORD PTR [rbp-0x58]
  404aee:	movzx  eax,BYTE PTR [rax]
  404af1:	mov    edx,eax
  404af3:	movzx  eax,BYTE PTR [rbp-0x2d]
  404af7:	add    eax,edx
  404af9:	mov    edx,eax
  404afb:	mov    rax,QWORD PTR [rbp-0x58]
  404aff:	mov    BYTE PTR [rax],dl
  404b01:	mov    eax,DWORD PTR [rbp-0x28]
  404b04:	test   eax,eax
  404b06:	jne    4049fb <_start@@Base+0x18eb>
  404b0c:	mov    rax,QWORD PTR [rbp-0x40]
  404b10:	mov    rdi,QWORD PTR [rbp-0x8]
  404b14:	xor    rdi,QWORD PTR fs:0x28
  404b1d:	je     404b24 <_start@@Base+0x1a14>
  404b1f:	call   403060 <__stack_chk_fail@plt>
  404b24:	leave  
  404b25:	ret    
  404b26:	push   rbp
  404b27:	mov    rbp,rsp
  404b2a:	sub    rsp,0x60
  404b2e:	mov    QWORD PTR [rbp-0x38],rdi
  404b32:	mov    QWORD PTR [rbp-0x40],rsi
  404b36:	mov    QWORD PTR [rbp-0x48],rdx
  404b3a:	mov    QWORD PTR [rbp-0x50],rcx
  404b3e:	mov    QWORD PTR [rbp-0x58],r8
  404b42:	mov    rax,QWORD PTR fs:0x28
  404b4b:	mov    QWORD PTR [rbp-0x8],rax
  404b4f:	xor    eax,eax
  404b51:	mov    BYTE PTR [rbp-0x2d],0x0
  404b55:	mov    DWORD PTR [rbp-0x24],0x0
  404b5c:	mov    rax,QWORD PTR [rbp-0x58]
  404b60:	mov    BYTE PTR [rax],0x0
  404b63:	mov    rdx,QWORD PTR [rbp-0x48]
  404b67:	mov    rcx,QWORD PTR [rbp-0x40]
  404b6b:	mov    rax,QWORD PTR [rbp-0x38]
  404b6f:	mov    rsi,rcx
  404b72:	mov    rdi,rax
  404b75:	call   403636 <_start@@Base+0x526>
  404b7a:	mov    QWORD PTR [rbp-0x40],rax
  404b7e:	mov    rax,QWORD PTR [rbp-0x40]
  404b82:	cmp    rax,QWORD PTR [rbp-0x48]
  404b86:	jne    404b91 <_start@@Base+0x1a81>
  404b88:	mov    rax,QWORD PTR [rbp-0x40]
  404b8c:	jmp    404ca2 <_start@@Base+0x1b92>
  404b91:	mov    rax,QWORD PTR [rbp-0x50]
  404b95:	mov    QWORD PTR [rbp-0x18],rax
  404b99:	mov    rax,QWORD PTR [rbp-0x18]
  404b9d:	mov    rax,QWORD PTR [rax]
  404ba0:	mov    rdx,QWORD PTR [rbp-0x40]
  404ba4:	mov    QWORD PTR [rbp-0x10],rdx
  404ba8:	lea    r9,[rbp-0x28]
  404bac:	lea    r8,[rbp-0x20]
  404bb0:	lea    rcx,[rbp-0x2c]
  404bb4:	mov    rdx,QWORD PTR [rbp-0x48]
  404bb8:	mov    rsi,QWORD PTR [rbp-0x10]
  404bbc:	mov    rdi,QWORD PTR [rbp-0x38]
  404bc0:	call   rax
  404bc2:	mov    QWORD PTR [rbp-0x40],rax
  404bc6:	mov    rax,QWORD PTR [rbp-0x40]
  404bca:	cmp    rax,QWORD PTR [rbp-0x48]
  404bce:	jne    404bd9 <_start@@Base+0x1ac9>
  404bd0:	mov    rax,QWORD PTR [rbp-0x40]
  404bd4:	jmp    404ca2 <_start@@Base+0x1b92>
  404bd9:	mov    rax,QWORD PTR [rbp-0x40]
  404bdd:	cmp    rax,QWORD PTR [rbp-0x10]
  404be1:	jne    404bf4 <_start@@Base+0x1ae4>
  404be3:	add    QWORD PTR [rbp-0x18],0x8
  404be8:	mov    rax,QWORD PTR [rbp-0x18]
  404bec:	mov    rax,QWORD PTR [rax]
  404bef:	test   rax,rax
  404bf2:	jne    404b99 <_start@@Base+0x1a89>
  404bf4:	mov    rax,QWORD PTR [rbp-0x10]
  404bf8:	cmp    rax,QWORD PTR [rbp-0x40]
  404bfc:	jne    404c1c <_start@@Base+0x1b0c>
  404bfe:	mov    rdx,QWORD PTR [rbp-0x48]
  404c02:	mov    rsi,QWORD PTR [rbp-0x40]
  404c06:	mov    rax,QWORD PTR [rbp-0x38]
  404c0a:	mov    ecx,0x17
  404c0f:	mov    rdi,rax
  404c12:	call   410789 <flatcc_json_parser_set_error@@Base>
  404c17:	jmp    404ca2 <_start@@Base+0x1b92>
  404c1c:	mov    eax,DWORD PTR [rbp-0x24]
  404c1f:	lea    edx,[rax+0x1]
  404c22:	mov    DWORD PTR [rbp-0x24],edx
  404c25:	test   eax,eax
  404c27:	je     404c4f <_start@@Base+0x1b3f>
  404c29:	mov    rax,QWORD PTR [rbp-0x38]
  404c2d:	mov    eax,DWORD PTR [rax+0x14]
  404c30:	test   eax,eax
  404c32:	je     404c4f <_start@@Base+0x1b3f>
  404c34:	mov    rdx,QWORD PTR [rbp-0x48]
  404c38:	mov    rsi,QWORD PTR [rbp-0x40]
  404c3c:	mov    rax,QWORD PTR [rbp-0x38]
  404c40:	mov    ecx,0xe
  404c45:	mov    rdi,rax
  404c48:	call   410789 <flatcc_json_parser_set_error@@Base>
  404c4d:	jmp    404ca2 <_start@@Base+0x1b92>
  404c4f:	mov    rdi,QWORD PTR [rbp-0x20]
  404c53:	mov    ecx,DWORD PTR [rbp-0x2c]
  404c56:	lea    r8,[rbp-0x2d]
  404c5a:	mov    rdx,QWORD PTR [rbp-0x48]
  404c5e:	mov    rsi,QWORD PTR [rbp-0x40]
  404c62:	mov    rax,QWORD PTR [rbp-0x38]
  404c66:	mov    r9,r8
  404c69:	mov    r8,rdi
  404c6c:	mov    rdi,rax
  404c6f:	call   4036e2 <_start@@Base+0x5d2>
  404c74:	cmp    rax,QWORD PTR [rbp-0x48]
  404c78:	jne    404c80 <_start@@Base+0x1b70>
  404c7a:	mov    rax,QWORD PTR [rbp-0x48]
  404c7e:	jmp    404ca2 <_start@@Base+0x1b92>
  404c80:	mov    rax,QWORD PTR [rbp-0x58]
  404c84:	movzx  edx,BYTE PTR [rax]
  404c87:	movzx  eax,BYTE PTR [rbp-0x2d]
  404c8b:	add    edx,eax
  404c8d:	mov    rax,QWORD PTR [rbp-0x58]
  404c91:	mov    BYTE PTR [rax],dl
  404c93:	mov    eax,DWORD PTR [rbp-0x28]
  404c96:	test   eax,eax
  404c98:	jne    404b91 <_start@@Base+0x1a81>
  404c9e:	mov    rax,QWORD PTR [rbp-0x40]
  404ca2:	mov    rdi,QWORD PTR [rbp-0x8]
  404ca6:	xor    rdi,QWORD PTR fs:0x28
  404caf:	je     404cb6 <_start@@Base+0x1ba6>
  404cb1:	call   403060 <__stack_chk_fail@plt>
  404cb6:	leave  
  404cb7:	ret    
  404cb8:	push   rbp
  404cb9:	mov    rbp,rsp
  404cbc:	sub    rsp,0x60
  404cc0:	mov    QWORD PTR [rbp-0x38],rdi
  404cc4:	mov    QWORD PTR [rbp-0x40],rsi
  404cc8:	mov    QWORD PTR [rbp-0x48],rdx
  404ccc:	mov    QWORD PTR [rbp-0x50],rcx
  404cd0:	mov    QWORD PTR [rbp-0x58],r8
  404cd4:	mov    rax,QWORD PTR fs:0x28
  404cdd:	mov    QWORD PTR [rbp-0x8],rax
  404ce1:	xor    eax,eax
  404ce3:	vxorps xmm0,xmm0,xmm0
  404ce7:	vmovss DWORD PTR [rbp-0x30],xmm0
  404cec:	mov    DWORD PTR [rbp-0x24],0x0
  404cf3:	mov    rax,QWORD PTR [rbp-0x58]
  404cf7:	vxorps xmm0,xmm0,xmm0
  404cfb:	vmovss DWORD PTR [rax],xmm0
  404cff:	mov    rdx,QWORD PTR [rbp-0x48]
  404d03:	mov    rcx,QWORD PTR [rbp-0x40]
  404d07:	mov    rax,QWORD PTR [rbp-0x38]
  404d0b:	mov    rsi,rcx
  404d0e:	mov    rdi,rax
  404d11:	call   403636 <_start@@Base+0x526>
  404d16:	mov    QWORD PTR [rbp-0x40],rax
  404d1a:	mov    rax,QWORD PTR [rbp-0x40]
  404d1e:	cmp    rax,QWORD PTR [rbp-0x48]
  404d22:	jne    404d2d <_start@@Base+0x1c1d>
  404d24:	mov    rax,QWORD PTR [rbp-0x40]
  404d28:	jmp    404e44 <_start@@Base+0x1d34>
  404d2d:	mov    rax,QWORD PTR [rbp-0x50]
  404d31:	mov    QWORD PTR [rbp-0x18],rax
  404d35:	mov    rax,QWORD PTR [rbp-0x18]
  404d39:	mov    rax,QWORD PTR [rax]
  404d3c:	mov    rdx,QWORD PTR [rbp-0x40]
  404d40:	mov    QWORD PTR [rbp-0x10],rdx
  404d44:	lea    r9,[rbp-0x28]
  404d48:	lea    r8,[rbp-0x20]
  404d4c:	lea    rcx,[rbp-0x2c]
  404d50:	mov    rdx,QWORD PTR [rbp-0x48]
  404d54:	mov    rsi,QWORD PTR [rbp-0x10]
  404d58:	mov    rdi,QWORD PTR [rbp-0x38]
  404d5c:	call   rax
  404d5e:	mov    QWORD PTR [rbp-0x40],rax
  404d62:	mov    rax,QWORD PTR [rbp-0x40]
  404d66:	cmp    rax,QWORD PTR [rbp-0x48]
  404d6a:	jne    404d75 <_start@@Base+0x1c65>
  404d6c:	mov    rax,QWORD PTR [rbp-0x40]
  404d70:	jmp    404e44 <_start@@Base+0x1d34>
  404d75:	mov    rax,QWORD PTR [rbp-0x40]
  404d79:	cmp    rax,QWORD PTR [rbp-0x10]
  404d7d:	jne    404d90 <_start@@Base+0x1c80>
  404d7f:	add    QWORD PTR [rbp-0x18],0x8
  404d84:	mov    rax,QWORD PTR [rbp-0x18]
  404d88:	mov    rax,QWORD PTR [rax]
  404d8b:	test   rax,rax
  404d8e:	jne    404d35 <_start@@Base+0x1c25>
  404d90:	mov    rax,QWORD PTR [rbp-0x10]
  404d94:	cmp    rax,QWORD PTR [rbp-0x40]
  404d98:	jne    404db8 <_start@@Base+0x1ca8>
  404d9a:	mov    rdx,QWORD PTR [rbp-0x48]
  404d9e:	mov    rsi,QWORD PTR [rbp-0x40]
  404da2:	mov    rax,QWORD PTR [rbp-0x38]
  404da6:	mov    ecx,0x17
  404dab:	mov    rdi,rax
  404dae:	call   410789 <flatcc_json_parser_set_error@@Base>
  404db3:	jmp    404e44 <_start@@Base+0x1d34>
  404db8:	mov    eax,DWORD PTR [rbp-0x24]
  404dbb:	lea    edx,[rax+0x1]
  404dbe:	mov    DWORD PTR [rbp-0x24],edx
  404dc1:	test   eax,eax
  404dc3:	je     404deb <_start@@Base+0x1cdb>
  404dc5:	mov    rax,QWORD PTR [rbp-0x38]
  404dc9:	mov    eax,DWORD PTR [rax+0x14]
  404dcc:	test   eax,eax
  404dce:	je     404deb <_start@@Base+0x1cdb>
  404dd0:	mov    rdx,QWORD PTR [rbp-0x48]
  404dd4:	mov    rsi,QWORD PTR [rbp-0x40]
  404dd8:	mov    rax,QWORD PTR [rbp-0x38]
  404ddc:	mov    ecx,0xe
  404de1:	mov    rdi,rax
  404de4:	call   410789 <flatcc_json_parser_set_error@@Base>
  404de9:	jmp    404e44 <_start@@Base+0x1d34>
  404deb:	mov    rdi,QWORD PTR [rbp-0x20]
  404def:	mov    ecx,DWORD PTR [rbp-0x2c]
  404df2:	lea    r8,[rbp-0x30]
  404df6:	mov    rdx,QWORD PTR [rbp-0x48]
  404dfa:	mov    rsi,QWORD PTR [rbp-0x40]
  404dfe:	mov    rax,QWORD PTR [rbp-0x38]
  404e02:	mov    r9,r8
  404e05:	mov    r8,rdi
  404e08:	mov    rdi,rax
  404e0b:	call   403aea <_start@@Base+0x9da>
  404e10:	cmp    rax,QWORD PTR [rbp-0x48]
  404e14:	jne    404e1c <_start@@Base+0x1d0c>
  404e16:	mov    rax,QWORD PTR [rbp-0x48]
  404e1a:	jmp    404e44 <_start@@Base+0x1d34>
  404e1c:	mov    rax,QWORD PTR [rbp-0x58]
  404e20:	vmovss xmm1,DWORD PTR [rax]
  404e24:	vmovss xmm0,DWORD PTR [rbp-0x30]
  404e29:	vaddss xmm0,xmm1,xmm0
  404e2d:	mov    rax,QWORD PTR [rbp-0x58]
  404e31:	vmovss DWORD PTR [rax],xmm0
  404e35:	mov    eax,DWORD PTR [rbp-0x28]
  404e38:	test   eax,eax
  404e3a:	jne    404d2d <_start@@Base+0x1c1d>
  404e40:	mov    rax,QWORD PTR [rbp-0x40]
  404e44:	mov    rdi,QWORD PTR [rbp-0x8]
  404e48:	xor    rdi,QWORD PTR fs:0x28
  404e51:	je     404e58 <_start@@Base+0x1d48>
  404e53:	call   403060 <__stack_chk_fail@plt>
  404e58:	leave  
  404e59:	ret    
  404e5a:	push   rbp
  404e5b:	mov    rbp,rsp
  404e5e:	sub    rsp,0x70
  404e62:	mov    QWORD PTR [rbp-0x48],rdi
  404e66:	mov    QWORD PTR [rbp-0x50],rsi
  404e6a:	mov    QWORD PTR [rbp-0x58],rdx
  404e6e:	mov    QWORD PTR [rbp-0x60],rcx
  404e72:	mov    QWORD PTR [rbp-0x68],r8
  404e76:	mov    rax,QWORD PTR fs:0x28
  404e7f:	mov    QWORD PTR [rbp-0x8],rax
  404e83:	xor    eax,eax
  404e85:	vxorpd xmm0,xmm0,xmm0
  404e89:	vmovsd QWORD PTR [rbp-0x28],xmm0
  404e8e:	mov    DWORD PTR [rbp-0x2c],0x0
  404e95:	mov    rax,QWORD PTR [rbp-0x68]
  404e99:	vxorpd xmm0,xmm0,xmm0
  404e9d:	vmovsd QWORD PTR [rax],xmm0
  404ea1:	mov    rdx,QWORD PTR [rbp-0x58]
  404ea5:	mov    rcx,QWORD PTR [rbp-0x50]
  404ea9:	mov    rax,QWORD PTR [rbp-0x48]
  404ead:	mov    rsi,rcx
  404eb0:	mov    rdi,rax
  404eb3:	call   403636 <_start@@Base+0x526>
  404eb8:	mov    QWORD PTR [rbp-0x50],rax
  404ebc:	mov    rax,QWORD PTR [rbp-0x50]
  404ec0:	cmp    rax,QWORD PTR [rbp-0x58]
  404ec4:	jne    404ecf <_start@@Base+0x1dbf>
  404ec6:	mov    rax,QWORD PTR [rbp-0x50]
  404eca:	jmp    404fe6 <_start@@Base+0x1ed6>
  404ecf:	mov    rax,QWORD PTR [rbp-0x60]
  404ed3:	mov    QWORD PTR [rbp-0x18],rax
  404ed7:	mov    rax,QWORD PTR [rbp-0x18]
  404edb:	mov    rax,QWORD PTR [rax]
  404ede:	mov    rdx,QWORD PTR [rbp-0x50]
  404ee2:	mov    QWORD PTR [rbp-0x10],rdx
  404ee6:	lea    r9,[rbp-0x30]
  404eea:	lea    r8,[rbp-0x20]
  404eee:	lea    rcx,[rbp-0x34]
  404ef2:	mov    rdx,QWORD PTR [rbp-0x58]
  404ef6:	mov    rsi,QWORD PTR [rbp-0x10]
  404efa:	mov    rdi,QWORD PTR [rbp-0x48]
  404efe:	call   rax
  404f00:	mov    QWORD PTR [rbp-0x50],rax
  404f04:	mov    rax,QWORD PTR [rbp-0x50]
  404f08:	cmp    rax,QWORD PTR [rbp-0x58]
  404f0c:	jne    404f17 <_start@@Base+0x1e07>
  404f0e:	mov    rax,QWORD PTR [rbp-0x50]
  404f12:	jmp    404fe6 <_start@@Base+0x1ed6>
  404f17:	mov    rax,QWORD PTR [rbp-0x50]
  404f1b:	cmp    rax,QWORD PTR [rbp-0x10]
  404f1f:	jne    404f32 <_start@@Base+0x1e22>
  404f21:	add    QWORD PTR [rbp-0x18],0x8
  404f26:	mov    rax,QWORD PTR [rbp-0x18]
  404f2a:	mov    rax,QWORD PTR [rax]
  404f2d:	test   rax,rax
  404f30:	jne    404ed7 <_start@@Base+0x1dc7>
  404f32:	mov    rax,QWORD PTR [rbp-0x10]
  404f36:	cmp    rax,QWORD PTR [rbp-0x50]
  404f3a:	jne    404f5a <_start@@Base+0x1e4a>
  404f3c:	mov    rdx,QWORD PTR [rbp-0x58]
  404f40:	mov    rsi,QWORD PTR [rbp-0x50]
  404f44:	mov    rax,QWORD PTR [rbp-0x48]
  404f48:	mov    ecx,0x17
  404f4d:	mov    rdi,rax
  404f50:	call   410789 <flatcc_json_parser_set_error@@Base>
  404f55:	jmp    404fe6 <_start@@Base+0x1ed6>
  404f5a:	mov    eax,DWORD PTR [rbp-0x2c]
  404f5d:	lea    edx,[rax+0x1]
  404f60:	mov    DWORD PTR [rbp-0x2c],edx
  404f63:	test   eax,eax
  404f65:	je     404f8d <_start@@Base+0x1e7d>
  404f67:	mov    rax,QWORD PTR [rbp-0x48]
  404f6b:	mov    eax,DWORD PTR [rax+0x14]
  404f6e:	test   eax,eax
  404f70:	je     404f8d <_start@@Base+0x1e7d>
  404f72:	mov    rdx,QWORD PTR [rbp-0x58]
  404f76:	mov    rsi,QWORD PTR [rbp-0x50]
  404f7a:	mov    rax,QWORD PTR [rbp-0x48]
  404f7e:	mov    ecx,0xe
  404f83:	mov    rdi,rax
  404f86:	call   410789 <flatcc_json_parser_set_error@@Base>
  404f8b:	jmp    404fe6 <_start@@Base+0x1ed6>
  404f8d:	mov    rdi,QWORD PTR [rbp-0x20]
  404f91:	mov    ecx,DWORD PTR [rbp-0x34]
  404f94:	lea    r8,[rbp-0x28]
  404f98:	mov    rdx,QWORD PTR [rbp-0x58]
  404f9c:	mov    rsi,QWORD PTR [rbp-0x50]
  404fa0:	mov    rax,QWORD PTR [rbp-0x48]
  404fa4:	mov    r9,r8
  404fa7:	mov    r8,rdi
  404faa:	mov    rdi,rax
  404fad:	call   403b81 <_start@@Base+0xa71>
  404fb2:	cmp    rax,QWORD PTR [rbp-0x58]
  404fb6:	jne    404fbe <_start@@Base+0x1eae>
  404fb8:	mov    rax,QWORD PTR [rbp-0x58]
  404fbc:	jmp    404fe6 <_start@@Base+0x1ed6>
  404fbe:	mov    rax,QWORD PTR [rbp-0x68]
  404fc2:	vmovsd xmm1,QWORD PTR [rax]
  404fc6:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  404fcb:	vaddsd xmm0,xmm1,xmm0
  404fcf:	mov    rax,QWORD PTR [rbp-0x68]
  404fd3:	vmovsd QWORD PTR [rax],xmm0
  404fd7:	mov    eax,DWORD PTR [rbp-0x30]
  404fda:	test   eax,eax
  404fdc:	jne    404ecf <_start@@Base+0x1dbf>
  404fe2:	mov    rax,QWORD PTR [rbp-0x50]
  404fe6:	mov    rdi,QWORD PTR [rbp-0x8]
  404fea:	xor    rdi,QWORD PTR fs:0x28
  404ff3:	je     404ffa <_start@@Base+0x1eea>
  404ff5:	call   403060 <__stack_chk_fail@plt>
  404ffa:	leave  
  404ffb:	ret    

0000000000404ffc <test@@Base>:
  404ffc:	push   rbp
  404ffd:	mov    rbp,rsp
  405000:	sub    rsp,0xc0
  405007:	mov    QWORD PTR [rbp-0xa8],rdi
  40500e:	mov    QWORD PTR [rbp-0xb0],rsi
  405015:	mov    QWORD PTR [rbp-0xb8],rdx
  40501c:	mov    QWORD PTR [rbp-0xc0],rcx
  405023:	mov    rax,QWORD PTR fs:0x28
  40502c:	mov    QWORD PTR [rbp-0x8],rax
  405030:	xor    eax,eax
  405032:	mov    DWORD PTR [rbp-0x94],0x0
  40503c:	lea    rax,[rbp-0x60]
  405040:	mov    QWORD PTR [rbp-0x90],rax
  405047:	mov    rax,QWORD PTR [rbp-0x90]
  40504e:	mov    edx,0x48
  405053:	mov    esi,0x0
  405058:	mov    rdi,rax
  40505b:	call   403080 <memset@plt>
  405060:	mov    rax,QWORD PTR [rbp-0x90]
  405067:	mov    DWORD PTR [rax+0x18],0x1
  40506e:	mov    rax,QWORD PTR [rbp-0x90]
  405075:	mov    rdx,QWORD PTR [rbp-0xb0]
  40507c:	mov    QWORD PTR [rax+0x8],rdx
  405080:	mov    rax,QWORD PTR [rbp-0xa8]
  405087:	mov    ecx,0x0
  40508c:	mov    edx,0x0
  405091:	lea    rsi,[rip+0xf24e]        # 4142e6 <g_data@@Base+0x286>
  405098:	mov    rdi,rax
  40509b:	call   4085e5 <flatcc_builder_start_buffer@@Base>
  4050a0:	mov    rdx,QWORD PTR [rbp-0xb8]
  4050a7:	mov    rcx,QWORD PTR [rbp-0xb0]
  4050ae:	mov    rax,QWORD PTR [rbp-0x90]
  4050b5:	mov    rsi,rcx
  4050b8:	mov    rdi,rax
  4050bb:	call   403216 <_start@@Base+0x106>
  4050c0:	mov    QWORD PTR [rbp-0xb0],rax
  4050c7:	mov    rax,QWORD PTR [rbp-0xb0]
  4050ce:	cmp    rax,QWORD PTR [rbp-0xb8]
  4050d5:	jne    4050ff <test@@Base+0x103>
  4050d7:	mov    rax,QWORD PTR [rip+0x14f1a]        # 419ff8 <stderr@GLIBC_2.2.5>
  4050de:	mov    rax,QWORD PTR [rax]
  4050e1:	mov    rcx,rax
  4050e4:	mov    edx,0xd
  4050e9:	mov    esi,0x1
  4050ee:	lea    rdi,[rip+0xf1f6]        # 4142eb <g_data@@Base+0x28b>
  4050f5:	call   4030f0 <fwrite@plt>
  4050fa:	jmp    40650a <test@@Base+0x150e>
  4050ff:	mov    rax,QWORD PTR [rbp-0xb8]
  405106:	cmp    rax,QWORD PTR [rbp-0xb0]
  40510d:	jbe    40515e <test@@Base+0x162>
  40510f:	mov    rax,QWORD PTR [rbp-0xb0]
  405116:	movzx  eax,BYTE PTR [rax]
  405119:	cmp    al,0x7b
  40511b:	jne    40515e <test@@Base+0x162>
  40511d:	add    QWORD PTR [rbp-0xb0],0x1
  405125:	mov    rdx,QWORD PTR [rbp-0xb8]
  40512c:	mov    rcx,QWORD PTR [rbp-0xb0]
  405133:	mov    rax,QWORD PTR [rbp-0x90]
  40513a:	mov    rsi,rcx
  40513d:	mov    rdi,rax
  405140:	call   403216 <_start@@Base+0x106>
  405145:	mov    QWORD PTR [rbp-0xb0],rax
  40514c:	mov    rax,QWORD PTR [rbp-0xb0]
  405153:	cmp    rax,QWORD PTR [rbp-0xb8]
  40515a:	je     4051af <test@@Base+0x1b3>
  40515c:	jmp    4051d7 <test@@Base+0x1db>
  40515e:	mov    rax,QWORD PTR [rip+0x14e93]        # 419ff8 <stderr@GLIBC_2.2.5>
  405165:	mov    rax,QWORD PTR [rax]
  405168:	mov    edx,0x7b
  40516d:	lea    rsi,[rip+0xf185]        # 4142f9 <g_data@@Base+0x299>
  405174:	mov    rdi,rax
  405177:	mov    eax,0x0
  40517c:	call   4030b0 <fprintf@plt>
  405181:	mov    rdx,QWORD PTR [rbp-0xb8]
  405188:	mov    rsi,QWORD PTR [rbp-0xb0]
  40518f:	mov    rax,QWORD PTR [rbp-0x90]
  405196:	mov    ecx,0x11
  40519b:	mov    rdi,rax
  40519e:	call   410789 <flatcc_json_parser_set_error@@Base>
  4051a3:	mov    QWORD PTR [rbp-0xb0],rax
  4051aa:	jmp    40650a <test@@Base+0x150e>
  4051af:	mov    rax,QWORD PTR [rip+0x14e42]        # 419ff8 <stderr@GLIBC_2.2.5>
  4051b6:	mov    rax,QWORD PTR [rax]
  4051b9:	mov    rcx,rax
  4051bc:	mov    edx,0xd
  4051c1:	mov    esi,0x1
  4051c6:	lea    rdi,[rip+0xf11e]        # 4142eb <g_data@@Base+0x28b>
  4051cd:	call   4030f0 <fwrite@plt>
  4051d2:	jmp    40650a <test@@Base+0x150e>
  4051d7:	mov    rax,QWORD PTR [rbp-0xa8]
  4051de:	mov    esi,0xb
  4051e3:	mov    rdi,rax
  4051e6:	call   40934a <flatcc_builder_start_table@@Base>
  4051eb:	mov    rdx,QWORD PTR [rbp-0xb8]
  4051f2:	mov    rcx,QWORD PTR [rbp-0xb0]
  4051f9:	mov    rax,QWORD PTR [rbp-0x90]
  405200:	mov    rsi,rcx
  405203:	mov    rdi,rax
  405206:	call   40332a <_start@@Base+0x21a>
  40520b:	mov    QWORD PTR [rbp-0xb0],rax
  405212:	mov    rdx,QWORD PTR [rbp-0xb8]
  405219:	mov    rax,QWORD PTR [rbp-0xb0]
  405220:	mov    rsi,rdx
  405223:	mov    rdi,rax
  405226:	call   4034be <_start@@Base+0x3ae>
  40522b:	mov    QWORD PTR [rbp-0x88],rax
  405232:	mov    rdx,QWORD PTR [rbp-0xb8]
  405239:	mov    rax,QWORD PTR [rbp-0xb0]
  405240:	sub    rdx,rax
  405243:	mov    rax,rdx
  405246:	cmp    rax,0x8
  40524a:	jle    405259 <test@@Base+0x25d>
  40524c:	mov    rax,QWORD PTR [rbp-0xb0]
  405253:	add    rax,0x8
  405257:	jmp    405260 <test@@Base+0x264>
  405259:	mov    rax,QWORD PTR [rbp-0xb8]
  405260:	mov    QWORD PTR [rbp-0x80],rax
  405264:	mov    rax,QWORD PTR [rbp-0x88]
  40526b:	mov    ax,0x0
  40526f:	mov    rdx,rax
  405272:	mov    eax,0x73
  405277:	movsx  rax,al
  40527b:	shl    rax,0x38
  40527f:	mov    rcx,rax
  405282:	mov    eax,0x65
  405287:	movsx  rax,al
  40528b:	shl    rax,0x30
  40528f:	or     rcx,rax
  405292:	mov    eax,0x63
  405297:	movsx  rax,al
  40529b:	shl    rax,0x28
  40529f:	or     rcx,rax
  4052a2:	mov    eax,0x6f
  4052a7:	movsx  rax,al
  4052ab:	shl    rax,0x20
  4052af:	or     rcx,rax
  4052b2:	mov    eax,0x6e
  4052b7:	movsx  rax,al
  4052bb:	shl    rax,0x18
  4052bf:	or     rcx,rax
  4052c2:	mov    eax,0x64
  4052c7:	movsx  rax,al
  4052cb:	shl    rax,0x10
  4052cf:	or     rax,rcx
  4052d2:	cmp    rdx,rax
  4052d5:	jae    405546 <test@@Base+0x54a>
  4052db:	mov    rax,QWORD PTR [rbp-0x88]
  4052e2:	and    rax,0xffffffffff000000
  4052e8:	mov    rdx,rax
  4052eb:	mov    eax,0x66
  4052f0:	movsx  rax,al
  4052f4:	shl    rax,0x38
  4052f8:	mov    rcx,rax
  4052fb:	mov    eax,0x69
  405300:	movsx  rax,al
  405304:	shl    rax,0x30
  405308:	or     rcx,rax
  40530b:	mov    eax,0x72
  405310:	movsx  rax,al
  405314:	shl    rax,0x28
  405318:	or     rcx,rax
  40531b:	mov    eax,0x73
  405320:	movsx  rax,al
  405324:	shl    rax,0x20
  405328:	or     rcx,rax
  40532b:	mov    eax,0x74
  405330:	movsx  rax,al
  405334:	shl    rax,0x18
  405338:	or     rax,rcx
  40533b:	cmp    rdx,rax
  40533e:	je     40536e <test@@Base+0x372>
  405340:	mov    rdx,QWORD PTR [rbp-0xb8]
  405347:	mov    rsi,QWORD PTR [rbp-0xb0]
  40534e:	mov    rax,QWORD PTR [rbp-0x90]
  405355:	mov    ecx,0xd
  40535a:	mov    rdi,rax
  40535d:	call   410789 <flatcc_json_parser_set_error@@Base>
  405362:	mov    QWORD PTR [rbp-0xb0],rax
  405369:	jmp    40650a <test@@Base+0x150e>
  40536e:	mov    rax,QWORD PTR [rbp-0xb0]
  405375:	lea    rcx,[rax+0x5]
  405379:	mov    rdx,QWORD PTR [rbp-0xb8]
  405380:	mov    rax,QWORD PTR [rbp-0x90]
  405387:	mov    rsi,rcx
  40538a:	mov    rdi,rax
  40538d:	call   403508 <_start@@Base+0x3f8>
  405392:	mov    QWORD PTR [rbp-0xb0],rax
  405399:	mov    rdx,QWORD PTR [rbp-0xb8]
  4053a0:	mov    rcx,QWORD PTR [rbp-0xb0]
  4053a7:	mov    rax,QWORD PTR [rbp-0x90]
  4053ae:	mov    rsi,rcx
  4053b1:	mov    rdi,rax
  4053b4:	call   403216 <_start@@Base+0x106>
  4053b9:	mov    QWORD PTR [rbp-0xb0],rax
  4053c0:	mov    rax,QWORD PTR [rbp-0xb0]
  4053c7:	cmp    rax,QWORD PTR [rbp-0xb8]
  4053ce:	jne    4053f8 <test@@Base+0x3fc>
  4053d0:	mov    rax,QWORD PTR [rip+0x14c21]        # 419ff8 <stderr@GLIBC_2.2.5>
  4053d7:	mov    rax,QWORD PTR [rax]
  4053da:	mov    rcx,rax
  4053dd:	mov    edx,0xd
  4053e2:	mov    esi,0x1
  4053e7:	lea    rdi,[rip+0xeefd]        # 4142eb <g_data@@Base+0x28b>
  4053ee:	call   4030f0 <fwrite@plt>
  4053f3:	jmp    40650a <test@@Base+0x150e>
  4053f8:	mov    rax,QWORD PTR [rbp-0xb8]
  4053ff:	cmp    rax,QWORD PTR [rbp-0xb0]
  405406:	jbe    405457 <test@@Base+0x45b>
  405408:	mov    rax,QWORD PTR [rbp-0xb0]
  40540f:	movzx  eax,BYTE PTR [rax]
  405412:	cmp    al,0x3a
  405414:	jne    405457 <test@@Base+0x45b>
  405416:	add    QWORD PTR [rbp-0xb0],0x1
  40541e:	mov    rdx,QWORD PTR [rbp-0xb8]
  405425:	mov    rcx,QWORD PTR [rbp-0xb0]
  40542c:	mov    rax,QWORD PTR [rbp-0x90]
  405433:	mov    rsi,rcx
  405436:	mov    rdi,rax
  405439:	call   403216 <_start@@Base+0x106>
  40543e:	mov    QWORD PTR [rbp-0xb0],rax
  405445:	mov    rax,QWORD PTR [rbp-0xb0]
  40544c:	cmp    rax,QWORD PTR [rbp-0xb8]
  405453:	je     4054a8 <test@@Base+0x4ac>
  405455:	jmp    4054d0 <test@@Base+0x4d4>
  405457:	mov    rax,QWORD PTR [rip+0x14b9a]        # 419ff8 <stderr@GLIBC_2.2.5>
  40545e:	mov    rax,QWORD PTR [rax]
  405461:	mov    edx,0x3a
  405466:	lea    rsi,[rip+0xee8c]        # 4142f9 <g_data@@Base+0x299>
  40546d:	mov    rdi,rax
  405470:	mov    eax,0x0
  405475:	call   4030b0 <fprintf@plt>
  40547a:	mov    rdx,QWORD PTR [rbp-0xb8]
  405481:	mov    rsi,QWORD PTR [rbp-0xb0]
  405488:	mov    rax,QWORD PTR [rbp-0x90]
  40548f:	mov    ecx,0x11
  405494:	mov    rdi,rax
  405497:	call   410789 <flatcc_json_parser_set_error@@Base>
  40549c:	mov    QWORD PTR [rbp-0xb0],rax
  4054a3:	jmp    40650a <test@@Base+0x150e>
  4054a8:	mov    rax,QWORD PTR [rip+0x14b49]        # 419ff8 <stderr@GLIBC_2.2.5>
  4054af:	mov    rax,QWORD PTR [rax]
  4054b2:	mov    rcx,rax
  4054b5:	mov    edx,0xd
  4054ba:	mov    esi,0x1
  4054bf:	lea    rdi,[rip+0xee25]        # 4142eb <g_data@@Base+0x28b>
  4054c6:	call   4030f0 <fwrite@plt>
  4054cb:	jmp    40650a <test@@Base+0x150e>
  4054d0:	mov    rax,QWORD PTR [rbp-0xa8]
  4054d7:	mov    ecx,0x1
  4054dc:	mov    edx,0x1
  4054e1:	mov    esi,0x0
  4054e6:	mov    rdi,rax
  4054e9:	call   40b4ae <flatcc_builder_table_add@@Base>
  4054ee:	mov    QWORD PTR [rbp-0x78],rax
  4054f2:	cmp    QWORD PTR [rbp-0x78],0x0
  4054f7:	je     4064f1 <test@@Base+0x14f5>
  4054fd:	mov    rax,QWORD PTR [rbp-0xb0]
  405504:	mov    QWORD PTR [rbp-0x80],rax
  405508:	mov    rcx,QWORD PTR [rbp-0x78]
  40550c:	mov    rdx,QWORD PTR [rbp-0xb8]
  405513:	mov    rsi,QWORD PTR [rbp-0xb0]
  40551a:	mov    rax,QWORD PTR [rbp-0x90]
  405521:	mov    rdi,rax
  405524:	call   403cde <_start@@Base+0xbce>
  405529:	mov    QWORD PTR [rbp-0xb0],rax
  405530:	mov    rax,QWORD PTR [rbp-0x80]
  405534:	cmp    rax,QWORD PTR [rbp-0xb0]
  40553b:	jne    406309 <test@@Base+0x130d>
  405541:	jmp    40650a <test@@Base+0x150e>
  405546:	movabs rax,0xffffffff00000000
  405550:	and    rax,QWORD PTR [rbp-0x88]
  405557:	mov    edx,0x7a
  40555c:	movsx  rdx,dl
  405560:	mov    rcx,rdx
  405563:	shl    rcx,0x38
  405567:	mov    edx,0x75
  40556c:	movsx  rdx,dl
  405570:	shl    rdx,0x30
  405574:	or     rcx,rdx
  405577:	mov    edx,0x6c
  40557c:	movsx  rdx,dl
  405580:	shl    rdx,0x28
  405584:	or     rcx,rdx
  405587:	mov    edx,0x75
  40558c:	movsx  rdx,dl
  405590:	shl    rdx,0x20
  405594:	or     rdx,rcx
  405597:	cmp    rax,rdx
  40559a:	jae    405ec4 <test@@Base+0xec8>
  4055a0:	mov    eax,0x73
  4055a5:	movsx  rax,al
  4055a9:	shl    rax,0x38
  4055ad:	mov    rdx,rax
  4055b0:	mov    eax,0x65
  4055b5:	movsx  rax,al
  4055b9:	shl    rax,0x30
  4055bd:	or     rdx,rax
  4055c0:	mov    eax,0x63
  4055c5:	movsx  rax,al
  4055c9:	shl    rax,0x28
  4055cd:	or     rdx,rax
  4055d0:	mov    eax,0x6f
  4055d5:	movsx  rax,al
  4055d9:	shl    rax,0x20
  4055dd:	or     rdx,rax
  4055e0:	mov    eax,0x6e
  4055e5:	movsx  rax,al
  4055e9:	shl    rax,0x18
  4055ed:	or     rdx,rax
  4055f0:	mov    eax,0x64
  4055f5:	movsx  rax,al
  4055f9:	shl    rax,0x10
  4055fd:	or     rdx,rax
  405600:	mov    eax,0x73
  405605:	movsx  rax,al
  405609:	shl    rax,0x8
  40560d:	or     rdx,rax
  405610:	mov    eax,0x20
  405615:	movsx  rax,al
  405619:	or     rax,rdx
  40561c:	cmp    rax,QWORD PTR [rbp-0x88]
  405623:	jbe    4058a2 <test@@Base+0x8a6>
  405629:	mov    rax,QWORD PTR [rbp-0x88]
  405630:	mov    ax,0x0
  405634:	mov    rdx,rax
  405637:	mov    eax,0x73
  40563c:	movsx  rax,al
  405640:	shl    rax,0x38
  405644:	mov    rcx,rax
  405647:	mov    eax,0x65
  40564c:	movsx  rax,al
  405650:	shl    rax,0x30
  405654:	or     rcx,rax
  405657:	mov    eax,0x63
  40565c:	movsx  rax,al
  405660:	shl    rax,0x28
  405664:	or     rcx,rax
  405667:	mov    eax,0x6f
  40566c:	movsx  rax,al
  405670:	shl    rax,0x20
  405674:	or     rcx,rax
  405677:	mov    eax,0x6e
  40567c:	movsx  rax,al
  405680:	shl    rax,0x18
  405684:	or     rcx,rax
  405687:	mov    eax,0x64
  40568c:	movsx  rax,al
  405690:	shl    rax,0x10
  405694:	or     rax,rcx
  405697:	cmp    rdx,rax
  40569a:	je     4056ca <test@@Base+0x6ce>
  40569c:	mov    rdx,QWORD PTR [rbp-0xb8]
  4056a3:	mov    rsi,QWORD PTR [rbp-0xb0]
  4056aa:	mov    rax,QWORD PTR [rbp-0x90]
  4056b1:	mov    ecx,0xd
  4056b6:	mov    rdi,rax
  4056b9:	call   410789 <flatcc_json_parser_set_error@@Base>
  4056be:	mov    QWORD PTR [rbp-0xb0],rax
  4056c5:	jmp    40650a <test@@Base+0x150e>
  4056ca:	mov    rax,QWORD PTR [rbp-0xb0]
  4056d1:	lea    rcx,[rax+0x6]
  4056d5:	mov    rdx,QWORD PTR [rbp-0xb8]
  4056dc:	mov    rax,QWORD PTR [rbp-0x90]
  4056e3:	mov    rsi,rcx
  4056e6:	mov    rdi,rax
  4056e9:	call   403508 <_start@@Base+0x3f8>
  4056ee:	mov    QWORD PTR [rbp-0xb0],rax
  4056f5:	mov    rdx,QWORD PTR [rbp-0xb8]
  4056fc:	mov    rcx,QWORD PTR [rbp-0xb0]
  405703:	mov    rax,QWORD PTR [rbp-0x90]
  40570a:	mov    rsi,rcx
  40570d:	mov    rdi,rax
  405710:	call   403216 <_start@@Base+0x106>
  405715:	mov    QWORD PTR [rbp-0xb0],rax
  40571c:	mov    rax,QWORD PTR [rbp-0xb0]
  405723:	cmp    rax,QWORD PTR [rbp-0xb8]
  40572a:	jne    405754 <test@@Base+0x758>
  40572c:	mov    rax,QWORD PTR [rip+0x148c5]        # 419ff8 <stderr@GLIBC_2.2.5>
  405733:	mov    rax,QWORD PTR [rax]
  405736:	mov    rcx,rax
  405739:	mov    edx,0xd
  40573e:	mov    esi,0x1
  405743:	lea    rdi,[rip+0xeba1]        # 4142eb <g_data@@Base+0x28b>
  40574a:	call   4030f0 <fwrite@plt>
  40574f:	jmp    40650a <test@@Base+0x150e>
  405754:	mov    rax,QWORD PTR [rbp-0xb8]
  40575b:	cmp    rax,QWORD PTR [rbp-0xb0]
  405762:	jbe    4057b3 <test@@Base+0x7b7>
  405764:	mov    rax,QWORD PTR [rbp-0xb0]
  40576b:	movzx  eax,BYTE PTR [rax]
  40576e:	cmp    al,0x3a
  405770:	jne    4057b3 <test@@Base+0x7b7>
  405772:	add    QWORD PTR [rbp-0xb0],0x1
  40577a:	mov    rdx,QWORD PTR [rbp-0xb8]
  405781:	mov    rcx,QWORD PTR [rbp-0xb0]
  405788:	mov    rax,QWORD PTR [rbp-0x90]
  40578f:	mov    rsi,rcx
  405792:	mov    rdi,rax
  405795:	call   403216 <_start@@Base+0x106>
  40579a:	mov    QWORD PTR [rbp-0xb0],rax
  4057a1:	mov    rax,QWORD PTR [rbp-0xb0]
  4057a8:	cmp    rax,QWORD PTR [rbp-0xb8]
  4057af:	je     405804 <test@@Base+0x808>
  4057b1:	jmp    40582c <test@@Base+0x830>
  4057b3:	mov    rax,QWORD PTR [rip+0x1483e]        # 419ff8 <stderr@GLIBC_2.2.5>
  4057ba:	mov    rax,QWORD PTR [rax]
  4057bd:	mov    edx,0x3a
  4057c2:	lea    rsi,[rip+0xeb30]        # 4142f9 <g_data@@Base+0x299>
  4057c9:	mov    rdi,rax
  4057cc:	mov    eax,0x0
  4057d1:	call   4030b0 <fprintf@plt>
  4057d6:	mov    rdx,QWORD PTR [rbp-0xb8]
  4057dd:	mov    rsi,QWORD PTR [rbp-0xb0]
  4057e4:	mov    rax,QWORD PTR [rbp-0x90]
  4057eb:	mov    ecx,0x11
  4057f0:	mov    rdi,rax
  4057f3:	call   410789 <flatcc_json_parser_set_error@@Base>
  4057f8:	mov    QWORD PTR [rbp-0xb0],rax
  4057ff:	jmp    40650a <test@@Base+0x150e>
  405804:	mov    rax,QWORD PTR [rip+0x147ed]        # 419ff8 <stderr@GLIBC_2.2.5>
  40580b:	mov    rax,QWORD PTR [rax]
  40580e:	mov    rcx,rax
  405811:	mov    edx,0xd
  405816:	mov    esi,0x1
  40581b:	lea    rdi,[rip+0xeac9]        # 4142eb <g_data@@Base+0x28b>
  405822:	call   4030f0 <fwrite@plt>
  405827:	jmp    40650a <test@@Base+0x150e>
  40582c:	mov    rax,QWORD PTR [rbp-0xa8]
  405833:	mov    ecx,0x8
  405838:	mov    edx,0x8
  40583d:	mov    esi,0x1
  405842:	mov    rdi,rax
  405845:	call   40b4ae <flatcc_builder_table_add@@Base>
  40584a:	mov    QWORD PTR [rbp-0x78],rax
  40584e:	cmp    QWORD PTR [rbp-0x78],0x0
  405853:	je     4064f4 <test@@Base+0x14f8>
  405859:	mov    rax,QWORD PTR [rbp-0xb0]
  405860:	mov    QWORD PTR [rbp-0x80],rax
  405864:	mov    rcx,QWORD PTR [rbp-0x78]
  405868:	mov    rdx,QWORD PTR [rbp-0xb8]
  40586f:	mov    rsi,QWORD PTR [rbp-0xb0]
  405876:	mov    rax,QWORD PTR [rbp-0x90]
  40587d:	mov    rdi,rax
  405880:	call   4115f2 <flatcc_json_parser_double@@Base>
  405885:	mov    QWORD PTR [rbp-0xb0],rax
  40588c:	mov    rax,QWORD PTR [rbp-0x80]
  405890:	cmp    rax,QWORD PTR [rbp-0xb0]
  405897:	jne    406309 <test@@Base+0x130d>
  40589d:	jmp    40650a <test@@Base+0x150e>
  4058a2:	mov    eax,0x73
  4058a7:	movsx  rax,al
  4058ab:	shl    rax,0x38
  4058af:	mov    rdx,rax
  4058b2:	mov    eax,0x65
  4058b7:	movsx  rax,al
  4058bb:	shl    rax,0x30
  4058bf:	or     rdx,rax
  4058c2:	mov    eax,0x63
  4058c7:	movsx  rax,al
  4058cb:	shl    rax,0x28
  4058cf:	or     rdx,rax
  4058d2:	mov    eax,0x6f
  4058d7:	movsx  rax,al
  4058db:	shl    rax,0x20
  4058df:	or     rdx,rax
  4058e2:	mov    eax,0x6e
  4058e7:	movsx  rax,al
  4058eb:	shl    rax,0x18
  4058ef:	or     rdx,rax
  4058f2:	mov    eax,0x64
  4058f7:	movsx  rax,al
  4058fb:	shl    rax,0x10
  4058ff:	or     rdx,rax
  405902:	mov    eax,0x73
  405907:	movsx  rax,al
  40590b:	shl    rax,0x8
  40590f:	or     rdx,rax
  405912:	mov    eax,0x20
  405917:	movsx  rax,al
  40591b:	or     rax,rdx
  40591e:	cmp    rax,QWORD PTR [rbp-0x88]
  405925:	je     405955 <test@@Base+0x959>
  405927:	mov    rdx,QWORD PTR [rbp-0xb8]
  40592e:	mov    rsi,QWORD PTR [rbp-0xb0]
  405935:	mov    rax,QWORD PTR [rbp-0x90]
  40593c:	mov    ecx,0xd
  405941:	mov    rdi,rax
  405944:	call   410789 <flatcc_json_parser_set_error@@Base>
  405949:	mov    QWORD PTR [rbp-0xb0],rax
  405950:	jmp    40650a <test@@Base+0x150e>
  405955:	mov    rax,QWORD PTR [rbp-0x80]
  405959:	mov    QWORD PTR [rbp-0xb0],rax
  405960:	mov    rdx,QWORD PTR [rbp-0xb8]
  405967:	mov    rax,QWORD PTR [rbp-0xb0]
  40596e:	mov    rsi,rdx
  405971:	mov    rdi,rax
  405974:	call   4034be <_start@@Base+0x3ae>
  405979:	mov    QWORD PTR [rbp-0x88],rax
  405980:	mov    rdx,QWORD PTR [rbp-0xb8]
  405987:	mov    rax,QWORD PTR [rbp-0xb0]
  40598e:	sub    rdx,rax
  405991:	mov    rax,rdx
  405994:	cmp    rax,0x8
  405998:	jle    4059a7 <test@@Base+0x9ab>
  40599a:	mov    rax,QWORD PTR [rbp-0xb0]
  4059a1:	add    rax,0x8
  4059a5:	jmp    4059ae <test@@Base+0x9b2>
  4059a7:	mov    rax,QWORD PTR [rbp-0xb8]
  4059ae:	mov    QWORD PTR [rbp-0x80],rax
  4059b2:	movabs rax,0xffffffff00000000
  4059bc:	and    rax,QWORD PTR [rbp-0x88]
  4059c3:	mov    edx,0x6c
  4059c8:	movsx  rdx,dl
  4059cc:	mov    rcx,rdx
  4059cf:	shl    rcx,0x38
  4059d3:	mov    edx,0x65
  4059d8:	movsx  rdx,dl
  4059dc:	shl    rdx,0x30
  4059e0:	or     rcx,rdx
  4059e3:	mov    edx,0x66
  4059e8:	movsx  rdx,dl
  4059ec:	shl    rdx,0x28
  4059f0:	or     rcx,rdx
  4059f3:	mov    edx,0x74
  4059f8:	movsx  rdx,dl
  4059fc:	shl    rdx,0x20
  405a00:	or     rdx,rcx
  405a03:	cmp    rax,rdx
  405a06:	jae    405c68 <test@@Base+0xc6c>
  405a0c:	movabs rax,0xffffffff00000000
  405a16:	and    rax,QWORD PTR [rbp-0x88]
  405a1d:	mov    edx,0x6c
  405a22:	movsx  rdx,dl
  405a26:	mov    rcx,rdx
  405a29:	shl    rcx,0x38
  405a2d:	mov    edx,0x65
  405a32:	movsx  rdx,dl
  405a36:	shl    rdx,0x30
  405a3a:	or     rcx,rdx
  405a3d:	mov    edx,0x61
  405a42:	movsx  rdx,dl
  405a46:	shl    rdx,0x28
  405a4a:	or     rcx,rdx
  405a4d:	mov    edx,0x64
  405a52:	movsx  rdx,dl
  405a56:	shl    rdx,0x20
  405a5a:	or     rdx,rcx
  405a5d:	cmp    rax,rdx
  405a60:	je     405a90 <test@@Base+0xa94>
  405a62:	mov    rdx,QWORD PTR [rbp-0xb8]
  405a69:	mov    rsi,QWORD PTR [rbp-0xb0]
  405a70:	mov    rax,QWORD PTR [rbp-0x90]
  405a77:	mov    ecx,0xd
  405a7c:	mov    rdi,rax
  405a7f:	call   410789 <flatcc_json_parser_set_error@@Base>
  405a84:	mov    QWORD PTR [rbp-0xb0],rax
  405a8b:	jmp    40650a <test@@Base+0x150e>
  405a90:	mov    rax,QWORD PTR [rbp-0xb0]
  405a97:	lea    rcx,[rax+0x4]
  405a9b:	mov    rdx,QWORD PTR [rbp-0xb8]
  405aa2:	mov    rax,QWORD PTR [rbp-0x90]
  405aa9:	mov    rsi,rcx
  405aac:	mov    rdi,rax
  405aaf:	call   403508 <_start@@Base+0x3f8>
  405ab4:	mov    QWORD PTR [rbp-0xb0],rax
  405abb:	mov    rdx,QWORD PTR [rbp-0xb8]
  405ac2:	mov    rcx,QWORD PTR [rbp-0xb0]
  405ac9:	mov    rax,QWORD PTR [rbp-0x90]
  405ad0:	mov    rsi,rcx
  405ad3:	mov    rdi,rax
  405ad6:	call   403216 <_start@@Base+0x106>
  405adb:	mov    QWORD PTR [rbp-0xb0],rax
  405ae2:	mov    rax,QWORD PTR [rbp-0xb0]
  405ae9:	cmp    rax,QWORD PTR [rbp-0xb8]
  405af0:	jne    405b1a <test@@Base+0xb1e>
  405af2:	mov    rax,QWORD PTR [rip+0x144ff]        # 419ff8 <stderr@GLIBC_2.2.5>
  405af9:	mov    rax,QWORD PTR [rax]
  405afc:	mov    rcx,rax
  405aff:	mov    edx,0xd
  405b04:	mov    esi,0x1
  405b09:	lea    rdi,[rip+0xe7db]        # 4142eb <g_data@@Base+0x28b>
  405b10:	call   4030f0 <fwrite@plt>
  405b15:	jmp    40650a <test@@Base+0x150e>
  405b1a:	mov    rax,QWORD PTR [rbp-0xb8]
  405b21:	cmp    rax,QWORD PTR [rbp-0xb0]
  405b28:	jbe    405b79 <test@@Base+0xb7d>
  405b2a:	mov    rax,QWORD PTR [rbp-0xb0]
  405b31:	movzx  eax,BYTE PTR [rax]
  405b34:	cmp    al,0x3a
  405b36:	jne    405b79 <test@@Base+0xb7d>
  405b38:	add    QWORD PTR [rbp-0xb0],0x1
  405b40:	mov    rdx,QWORD PTR [rbp-0xb8]
  405b47:	mov    rcx,QWORD PTR [rbp-0xb0]
  405b4e:	mov    rax,QWORD PTR [rbp-0x90]
  405b55:	mov    rsi,rcx
  405b58:	mov    rdi,rax
  405b5b:	call   403216 <_start@@Base+0x106>
  405b60:	mov    QWORD PTR [rbp-0xb0],rax
  405b67:	mov    rax,QWORD PTR [rbp-0xb0]
  405b6e:	cmp    rax,QWORD PTR [rbp-0xb8]
  405b75:	je     405bca <test@@Base+0xbce>
  405b77:	jmp    405bf2 <test@@Base+0xbf6>
  405b79:	mov    rax,QWORD PTR [rip+0x14478]        # 419ff8 <stderr@GLIBC_2.2.5>
  405b80:	mov    rax,QWORD PTR [rax]
  405b83:	mov    edx,0x3a
  405b88:	lea    rsi,[rip+0xe76a]        # 4142f9 <g_data@@Base+0x299>
  405b8f:	mov    rdi,rax
  405b92:	mov    eax,0x0
  405b97:	call   4030b0 <fprintf@plt>
  405b9c:	mov    rdx,QWORD PTR [rbp-0xb8]
  405ba3:	mov    rsi,QWORD PTR [rbp-0xb0]
  405baa:	mov    rax,QWORD PTR [rbp-0x90]
  405bb1:	mov    ecx,0x11
  405bb6:	mov    rdi,rax
  405bb9:	call   410789 <flatcc_json_parser_set_error@@Base>
  405bbe:	mov    QWORD PTR [rbp-0xb0],rax
  405bc5:	jmp    40650a <test@@Base+0x150e>
  405bca:	mov    rax,QWORD PTR [rip+0x14427]        # 419ff8 <stderr@GLIBC_2.2.5>
  405bd1:	mov    rax,QWORD PTR [rax]
  405bd4:	mov    rcx,rax
  405bd7:	mov    edx,0xd
  405bdc:	mov    esi,0x1
  405be1:	lea    rdi,[rip+0xe703]        # 4142eb <g_data@@Base+0x28b>
  405be8:	call   4030f0 <fwrite@plt>
  405bed:	jmp    40650a <test@@Base+0x150e>
  405bf2:	mov    rax,QWORD PTR [rbp-0xa8]
  405bf9:	mov    ecx,0x8
  405bfe:	mov    edx,0x8
  405c03:	mov    esi,0x3
  405c08:	mov    rdi,rax
  405c0b:	call   40b4ae <flatcc_builder_table_add@@Base>
  405c10:	mov    QWORD PTR [rbp-0x78],rax
  405c14:	cmp    QWORD PTR [rbp-0x78],0x0
  405c19:	je     4064f7 <test@@Base+0x14fb>
  405c1f:	mov    rax,QWORD PTR [rbp-0xb0]
  405c26:	mov    QWORD PTR [rbp-0x80],rax
  405c2a:	mov    rcx,QWORD PTR [rbp-0x78]
  405c2e:	mov    rdx,QWORD PTR [rbp-0xb8]
  405c35:	mov    rsi,QWORD PTR [rbp-0xb0]
  405c3c:	mov    rax,QWORD PTR [rbp-0x90]
  405c43:	mov    rdi,rax
  405c46:	call   403da1 <_start@@Base+0xc91>
  405c4b:	mov    QWORD PTR [rbp-0xb0],rax
  405c52:	mov    rax,QWORD PTR [rbp-0x80]
  405c56:	cmp    rax,QWORD PTR [rbp-0xb0]
  405c5d:	jne    406309 <test@@Base+0x130d>
  405c63:	jmp    40650a <test@@Base+0x150e>
  405c68:	movabs rax,0xffffffff00000000
  405c72:	and    rax,QWORD PTR [rbp-0x88]
  405c79:	mov    edx,0x6c
  405c7e:	movsx  rdx,dl
  405c82:	mov    rcx,rdx
  405c85:	shl    rcx,0x38
  405c89:	mov    edx,0x65
  405c8e:	movsx  rdx,dl
  405c92:	shl    rdx,0x30
  405c96:	or     rcx,rdx
  405c99:	mov    edx,0x66
  405c9e:	movsx  rdx,dl
  405ca2:	shl    rdx,0x28
  405ca6:	or     rcx,rdx
  405ca9:	mov    edx,0x74
  405cae:	movsx  rdx,dl
  405cb2:	shl    rdx,0x20
  405cb6:	or     rdx,rcx
  405cb9:	cmp    rax,rdx
  405cbc:	je     405cec <test@@Base+0xcf0>
  405cbe:	mov    rdx,QWORD PTR [rbp-0xb8]
  405cc5:	mov    rsi,QWORD PTR [rbp-0xb0]
  405ccc:	mov    rax,QWORD PTR [rbp-0x90]
  405cd3:	mov    ecx,0xd
  405cd8:	mov    rdi,rax
  405cdb:	call   410789 <flatcc_json_parser_set_error@@Base>
  405ce0:	mov    QWORD PTR [rbp-0xb0],rax
  405ce7:	jmp    40650a <test@@Base+0x150e>
  405cec:	mov    rax,QWORD PTR [rbp-0xb0]
  405cf3:	lea    rcx,[rax+0x4]
  405cf7:	mov    rdx,QWORD PTR [rbp-0xb8]
  405cfe:	mov    rax,QWORD PTR [rbp-0x90]
  405d05:	mov    rsi,rcx
  405d08:	mov    rdi,rax
  405d0b:	call   403508 <_start@@Base+0x3f8>
  405d10:	mov    QWORD PTR [rbp-0xb0],rax
  405d17:	mov    rdx,QWORD PTR [rbp-0xb8]
  405d1e:	mov    rcx,QWORD PTR [rbp-0xb0]
  405d25:	mov    rax,QWORD PTR [rbp-0x90]
  405d2c:	mov    rsi,rcx
  405d2f:	mov    rdi,rax
  405d32:	call   403216 <_start@@Base+0x106>
  405d37:	mov    QWORD PTR [rbp-0xb0],rax
  405d3e:	mov    rax,QWORD PTR [rbp-0xb0]
  405d45:	cmp    rax,QWORD PTR [rbp-0xb8]
  405d4c:	jne    405d76 <test@@Base+0xd7a>
  405d4e:	mov    rax,QWORD PTR [rip+0x142a3]        # 419ff8 <stderr@GLIBC_2.2.5>
  405d55:	mov    rax,QWORD PTR [rax]
  405d58:	mov    rcx,rax
  405d5b:	mov    edx,0xd
  405d60:	mov    esi,0x1
  405d65:	lea    rdi,[rip+0xe57f]        # 4142eb <g_data@@Base+0x28b>
  405d6c:	call   4030f0 <fwrite@plt>
  405d71:	jmp    40650a <test@@Base+0x150e>
  405d76:	mov    rax,QWORD PTR [rbp-0xb8]
  405d7d:	cmp    rax,QWORD PTR [rbp-0xb0]
  405d84:	jbe    405dd5 <test@@Base+0xdd9>
  405d86:	mov    rax,QWORD PTR [rbp-0xb0]
  405d8d:	movzx  eax,BYTE PTR [rax]
  405d90:	cmp    al,0x3a
  405d92:	jne    405dd5 <test@@Base+0xdd9>
  405d94:	add    QWORD PTR [rbp-0xb0],0x1
  405d9c:	mov    rdx,QWORD PTR [rbp-0xb8]
  405da3:	mov    rcx,QWORD PTR [rbp-0xb0]
  405daa:	mov    rax,QWORD PTR [rbp-0x90]
  405db1:	mov    rsi,rcx
  405db4:	mov    rdi,rax
  405db7:	call   403216 <_start@@Base+0x106>
  405dbc:	mov    QWORD PTR [rbp-0xb0],rax
  405dc3:	mov    rax,QWORD PTR [rbp-0xb0]
  405dca:	cmp    rax,QWORD PTR [rbp-0xb8]
  405dd1:	je     405e26 <test@@Base+0xe2a>
  405dd3:	jmp    405e4e <test@@Base+0xe52>
  405dd5:	mov    rax,QWORD PTR [rip+0x1421c]        # 419ff8 <stderr@GLIBC_2.2.5>
  405ddc:	mov    rax,QWORD PTR [rax]
  405ddf:	mov    edx,0x3a
  405de4:	lea    rsi,[rip+0xe50e]        # 4142f9 <g_data@@Base+0x299>
  405deb:	mov    rdi,rax
  405dee:	mov    eax,0x0
  405df3:	call   4030b0 <fprintf@plt>
  405df8:	mov    rdx,QWORD PTR [rbp-0xb8]
  405dff:	mov    rsi,QWORD PTR [rbp-0xb0]
  405e06:	mov    rax,QWORD PTR [rbp-0x90]
  405e0d:	mov    ecx,0x11
  405e12:	mov    rdi,rax
  405e15:	call   410789 <flatcc_json_parser_set_error@@Base>
  405e1a:	mov    QWORD PTR [rbp-0xb0],rax
  405e21:	jmp    40650a <test@@Base+0x150e>
  405e26:	mov    rax,QWORD PTR [rip+0x141cb]        # 419ff8 <stderr@GLIBC_2.2.5>
  405e2d:	mov    rax,QWORD PTR [rax]
  405e30:	mov    rcx,rax
  405e33:	mov    edx,0xd
  405e38:	mov    esi,0x1
  405e3d:	lea    rdi,[rip+0xe4a7]        # 4142eb <g_data@@Base+0x28b>
  405e44:	call   4030f0 <fwrite@plt>
  405e49:	jmp    40650a <test@@Base+0x150e>
  405e4e:	mov    rax,QWORD PTR [rbp-0xa8]
  405e55:	mov    ecx,0x4
  405e5a:	mov    edx,0x4
  405e5f:	mov    esi,0x2
  405e64:	mov    rdi,rax
  405e67:	call   40b4ae <flatcc_builder_table_add@@Base>
  405e6c:	mov    QWORD PTR [rbp-0x78],rax
  405e70:	cmp    QWORD PTR [rbp-0x78],0x0
  405e75:	je     4064fa <test@@Base+0x14fe>
  405e7b:	mov    rax,QWORD PTR [rbp-0xb0]
  405e82:	mov    QWORD PTR [rbp-0x80],rax
  405e86:	mov    rcx,QWORD PTR [rbp-0x78]
  405e8a:	mov    rdx,QWORD PTR [rbp-0xb8]
  405e91:	mov    rsi,QWORD PTR [rbp-0xb0]
  405e98:	mov    rax,QWORD PTR [rbp-0x90]
  405e9f:	mov    rdi,rax
  405ea2:	call   403c18 <_start@@Base+0xb08>
  405ea7:	mov    QWORD PTR [rbp-0xb0],rax
  405eae:	mov    rax,QWORD PTR [rbp-0x80]
  405eb2:	cmp    rax,QWORD PTR [rbp-0xb0]
  405eb9:	jne    406309 <test@@Base+0x130d>
  405ebf:	jmp    40650a <test@@Base+0x150e>
  405ec4:	movabs rax,0xffffffff00000000
  405ece:	and    rax,QWORD PTR [rbp-0x88]
  405ed5:	mov    edx,0x7a
  405eda:	movsx  rdx,dl
  405ede:	mov    rcx,rdx
  405ee1:	shl    rcx,0x38
  405ee5:	mov    edx,0x75
  405eea:	movsx  rdx,dl
  405eee:	shl    rdx,0x30
  405ef2:	or     rcx,rdx
  405ef5:	mov    edx,0x6c
  405efa:	movsx  rdx,dl
  405efe:	shl    rdx,0x28
  405f02:	or     rcx,rdx
  405f05:	mov    edx,0x75
  405f0a:	movsx  rdx,dl
  405f0e:	shl    rdx,0x20
  405f12:	or     rdx,rcx
  405f15:	cmp    rax,rdx
  405f18:	je     405f48 <test@@Base+0xf4c>
  405f1a:	mov    rdx,QWORD PTR [rbp-0xb8]
  405f21:	mov    rsi,QWORD PTR [rbp-0xb0]
  405f28:	mov    rax,QWORD PTR [rbp-0x90]
  405f2f:	mov    ecx,0xd
  405f34:	mov    rdi,rax
  405f37:	call   410789 <flatcc_json_parser_set_error@@Base>
  405f3c:	mov    QWORD PTR [rbp-0xb0],rax
  405f43:	jmp    40650a <test@@Base+0x150e>
  405f48:	mov    rax,QWORD PTR [rbp-0xb0]
  405f4f:	lea    rcx,[rax+0x4]
  405f53:	mov    rdx,QWORD PTR [rbp-0xb8]
  405f5a:	mov    rax,QWORD PTR [rbp-0x90]
  405f61:	mov    rsi,rcx
  405f64:	mov    rdi,rax
  405f67:	call   403508 <_start@@Base+0x3f8>
  405f6c:	mov    QWORD PTR [rbp-0xb0],rax
  405f73:	mov    rdx,QWORD PTR [rbp-0xb8]
  405f7a:	mov    rcx,QWORD PTR [rbp-0xb0]
  405f81:	mov    rax,QWORD PTR [rbp-0x90]
  405f88:	mov    rsi,rcx
  405f8b:	mov    rdi,rax
  405f8e:	call   403216 <_start@@Base+0x106>
  405f93:	mov    QWORD PTR [rbp-0xb0],rax
  405f9a:	mov    rax,QWORD PTR [rbp-0xb0]
  405fa1:	cmp    rax,QWORD PTR [rbp-0xb8]
  405fa8:	jne    405fd2 <test@@Base+0xfd6>
  405faa:	mov    rax,QWORD PTR [rip+0x14047]        # 419ff8 <stderr@GLIBC_2.2.5>
  405fb1:	mov    rax,QWORD PTR [rax]
  405fb4:	mov    rcx,rax
  405fb7:	mov    edx,0xd
  405fbc:	mov    esi,0x1
  405fc1:	lea    rdi,[rip+0xe323]        # 4142eb <g_data@@Base+0x28b>
  405fc8:	call   4030f0 <fwrite@plt>
  405fcd:	jmp    40650a <test@@Base+0x150e>
  405fd2:	mov    rax,QWORD PTR [rbp-0xb8]
  405fd9:	cmp    rax,QWORD PTR [rbp-0xb0]
  405fe0:	jbe    406031 <test@@Base+0x1035>
  405fe2:	mov    rax,QWORD PTR [rbp-0xb0]
  405fe9:	movzx  eax,BYTE PTR [rax]
  405fec:	cmp    al,0x3a
  405fee:	jne    406031 <test@@Base+0x1035>
  405ff0:	add    QWORD PTR [rbp-0xb0],0x1
  405ff8:	mov    rdx,QWORD PTR [rbp-0xb8]
  405fff:	mov    rcx,QWORD PTR [rbp-0xb0]
  406006:	mov    rax,QWORD PTR [rbp-0x90]
  40600d:	mov    rsi,rcx
  406010:	mov    rdi,rax
  406013:	call   403216 <_start@@Base+0x106>
  406018:	mov    QWORD PTR [rbp-0xb0],rax
  40601f:	mov    rax,QWORD PTR [rbp-0xb0]
  406026:	cmp    rax,QWORD PTR [rbp-0xb8]
  40602d:	je     406082 <test@@Base+0x1086>
  40602f:	jmp    4060aa <test@@Base+0x10ae>
  406031:	mov    rax,QWORD PTR [rip+0x13fc0]        # 419ff8 <stderr@GLIBC_2.2.5>
  406038:	mov    rax,QWORD PTR [rax]
  40603b:	mov    edx,0x3a
  406040:	lea    rsi,[rip+0xe2b2]        # 4142f9 <g_data@@Base+0x299>
  406047:	mov    rdi,rax
  40604a:	mov    eax,0x0
  40604f:	call   4030b0 <fprintf@plt>
  406054:	mov    rdx,QWORD PTR [rbp-0xb8]
  40605b:	mov    rsi,QWORD PTR [rbp-0xb0]
  406062:	mov    rax,QWORD PTR [rbp-0x90]
  406069:	mov    ecx,0x11
  40606e:	mov    rdi,rax
  406071:	call   410789 <flatcc_json_parser_set_error@@Base>
  406076:	mov    QWORD PTR [rbp-0xb0],rax
  40607d:	jmp    40650a <test@@Base+0x150e>
  406082:	mov    rax,QWORD PTR [rip+0x13f6f]        # 419ff8 <stderr@GLIBC_2.2.5>
  406089:	mov    rax,QWORD PTR [rax]
  40608c:	mov    rcx,rax
  40608f:	mov    edx,0xd
  406094:	mov    esi,0x1
  406099:	lea    rdi,[rip+0xe24b]        # 4142eb <g_data@@Base+0x28b>
  4060a0:	call   4030f0 <fwrite@plt>
  4060a5:	jmp    40650a <test@@Base+0x150e>
  4060aa:	mov    rdx,QWORD PTR [rbp-0xb8]
  4060b1:	mov    rcx,QWORD PTR [rbp-0xb0]
  4060b8:	mov    rax,QWORD PTR [rbp-0x90]
  4060bf:	mov    rsi,rcx
  4060c2:	mov    rdi,rax
  4060c5:	call   40328c <_start@@Base+0x17c>
  4060ca:	mov    QWORD PTR [rbp-0xb0],rax
  4060d1:	mov    rax,QWORD PTR [rbp-0xb0]
  4060d8:	mov    QWORD PTR [rbp-0x80],rax
  4060dc:	mov    rdx,QWORD PTR [rbp-0xb8]
  4060e3:	mov    rcx,QWORD PTR [rbp-0xb0]
  4060ea:	mov    rax,QWORD PTR [rbp-0x90]
  4060f1:	mov    rsi,rcx
  4060f4:	mov    rdi,rax
  4060f7:	call   4107e1 <flatcc_json_parser_string_part@@Base>
  4060fc:	mov    QWORD PTR [rbp-0xb0],rax
  406103:	mov    rax,QWORD PTR [rbp-0xb0]
  40610a:	cmp    rax,QWORD PTR [rbp-0xb8]
  406111:	je     4064fd <test@@Base+0x1501>
  406117:	mov    rax,QWORD PTR [rbp-0xb0]
  40611e:	movzx  eax,BYTE PTR [rax]
  406121:	cmp    al,0x22
  406123:	jne    40615a <test@@Base+0x115e>
  406125:	mov    rdx,QWORD PTR [rbp-0xb0]
  40612c:	mov    rax,QWORD PTR [rbp-0x80]
  406130:	sub    rdx,rax
  406133:	mov    rax,rdx
  406136:	mov    rdx,rax
  406139:	mov    rcx,QWORD PTR [rbp-0x80]
  40613d:	mov    rax,QWORD PTR [rbp-0xa8]
  406144:	mov    rsi,rcx
  406147:	mov    rdi,rax
  40614a:	call   40b15b <flatcc_builder_create_string@@Base>
  40614f:	mov    DWORD PTR [rbp-0x98],eax
  406155:	jmp    4062a6 <test@@Base+0x12aa>
  40615a:	mov    rax,QWORD PTR [rbp-0xa8]
  406161:	mov    rdi,rax
  406164:	call   409297 <flatcc_builder_start_string@@Base>
  406169:	mov    rdx,QWORD PTR [rbp-0xb0]
  406170:	mov    rax,QWORD PTR [rbp-0x80]
  406174:	sub    rdx,rax
  406177:	mov    rax,rdx
  40617a:	mov    rdx,rax
  40617d:	mov    rax,QWORD PTR [rbp-0xa8]
  406184:	mov    rsi,rdx
  406187:	mov    rdi,rax
  40618a:	call   408d3a <flatcc_builder_extend_string@@Base>
  40618f:	mov    QWORD PTR [rbp-0x70],rax
  406193:	cmp    QWORD PTR [rbp-0x70],0x0
  406198:	je     406500 <test@@Base+0x1504>
  40619e:	mov    rdx,QWORD PTR [rbp-0xb0]
  4061a5:	mov    rax,QWORD PTR [rbp-0x80]
  4061a9:	sub    rdx,rax
  4061ac:	mov    rax,rdx
  4061af:	mov    rdx,rax
  4061b2:	mov    rcx,QWORD PTR [rbp-0x80]
  4061b6:	mov    rax,QWORD PTR [rbp-0x70]
  4061ba:	mov    rsi,rcx
  4061bd:	mov    rdi,rax
  4061c0:	call   4030c0 <memcpy@plt>
  4061c5:	lea    rcx,[rbp-0xc]
  4061c9:	mov    rdx,QWORD PTR [rbp-0xb8]
  4061d0:	mov    rsi,QWORD PTR [rbp-0xb0]
  4061d7:	mov    rax,QWORD PTR [rbp-0x90]
  4061de:	mov    rdi,rax
  4061e1:	call   4109e7 <flatcc_json_parser_string_escape@@Base>
  4061e6:	mov    QWORD PTR [rbp-0xb0],rax
  4061ed:	movzx  eax,BYTE PTR [rbp-0xc]
  4061f1:	movsx  rdx,al
  4061f5:	lea    rax,[rbp-0xc]
  4061f9:	add    rax,0x1
  4061fd:	mov    rcx,QWORD PTR [rbp-0xa8]
  406204:	mov    rsi,rax
  406207:	mov    rdi,rcx
  40620a:	call   408db5 <flatcc_builder_append_string@@Base>
  40620f:	mov    rax,QWORD PTR [rbp-0xb0]
  406216:	mov    QWORD PTR [rbp-0x80],rax
  40621a:	mov    rdx,QWORD PTR [rbp-0xb8]
  406221:	mov    rcx,QWORD PTR [rbp-0xb0]
  406228:	mov    rax,QWORD PTR [rbp-0x90]
  40622f:	mov    rsi,rcx
  406232:	mov    rdi,rax
  406235:	call   4107e1 <flatcc_json_parser_string_part@@Base>
  40623a:	mov    QWORD PTR [rbp-0xb0],rax
  406241:	mov    rax,QWORD PTR [rbp-0xb0]
  406248:	cmp    rax,QWORD PTR [rbp-0xb8]
  40624f:	je     406503 <test@@Base+0x1507>
  406255:	mov    rdx,QWORD PTR [rbp-0xb0]
  40625c:	mov    rax,QWORD PTR [rbp-0x80]
  406260:	sub    rdx,rax
  406263:	mov    rax,rdx
  406266:	mov    rdx,rax
  406269:	mov    rcx,QWORD PTR [rbp-0x80]
  40626d:	mov    rax,QWORD PTR [rbp-0xa8]
  406274:	mov    rsi,rcx
  406277:	mov    rdi,rax
  40627a:	call   408db5 <flatcc_builder_append_string@@Base>
  40627f:	mov    rax,QWORD PTR [rbp-0xb0]
  406286:	movzx  eax,BYTE PTR [rax]
  406289:	cmp    al,0x22
  40628b:	jne    4061c5 <test@@Base+0x11c9>
  406291:	mov    rax,QWORD PTR [rbp-0xa8]
  406298:	mov    rdi,rax
  40629b:	call   40b3d2 <flatcc_builder_end_string@@Base>
  4062a0:	mov    DWORD PTR [rbp-0x98],eax
  4062a6:	cmp    DWORD PTR [rbp-0x98],0x0
  4062ad:	je     406506 <test@@Base+0x150a>
  4062b3:	mov    rax,QWORD PTR [rbp-0xa8]
  4062ba:	mov    esi,0xa
  4062bf:	mov    rdi,rax
  4062c2:	call   40b67c <flatcc_builder_table_add_offset@@Base>
  4062c7:	mov    QWORD PTR [rbp-0x68],rax
  4062cb:	cmp    QWORD PTR [rbp-0x68],0x0
  4062d0:	je     406509 <test@@Base+0x150d>
  4062d6:	mov    rax,QWORD PTR [rbp-0x68]
  4062da:	mov    edx,DWORD PTR [rbp-0x98]
  4062e0:	mov    DWORD PTR [rax],edx
  4062e2:	mov    rdx,QWORD PTR [rbp-0xb8]
  4062e9:	mov    rcx,QWORD PTR [rbp-0xb0]
  4062f0:	mov    rax,QWORD PTR [rbp-0x90]
  4062f7:	mov    rsi,rcx
  4062fa:	mov    rdi,rax
  4062fd:	call   4032db <_start@@Base+0x1cb>
  406302:	mov    QWORD PTR [rbp-0xb0],rax
  406309:	mov    rdx,QWORD PTR [rbp-0xb8]
  406310:	mov    rcx,QWORD PTR [rbp-0xb0]
  406317:	mov    rax,QWORD PTR [rbp-0x90]
  40631e:	mov    rsi,rcx
  406321:	mov    rdi,rax
  406324:	call   403216 <_start@@Base+0x106>
  406329:	mov    QWORD PTR [rbp-0xb0],rax
  406330:	mov    rax,QWORD PTR [rbp-0xb0]
  406337:	cmp    rax,QWORD PTR [rbp-0xb8]
  40633e:	jne    406368 <test@@Base+0x136c>
  406340:	mov    rax,QWORD PTR [rip+0x13cb1]        # 419ff8 <stderr@GLIBC_2.2.5>
  406347:	mov    rax,QWORD PTR [rax]
  40634a:	mov    rcx,rax
  40634d:	mov    edx,0xd
  406352:	mov    esi,0x1
  406357:	lea    rdi,[rip+0xdf8d]        # 4142eb <g_data@@Base+0x28b>
  40635e:	call   4030f0 <fwrite@plt>
  406363:	jmp    40650a <test@@Base+0x150e>
  406368:	mov    rax,QWORD PTR [rbp-0xb0]
  40636f:	movzx  eax,BYTE PTR [rax]
  406372:	cmp    al,0x2c
  406374:	jne    4063f0 <test@@Base+0x13f4>
  406376:	add    QWORD PTR [rbp-0xb0],0x1
  40637e:	mov    rdx,QWORD PTR [rbp-0xb8]
  406385:	mov    rcx,QWORD PTR [rbp-0xb0]
  40638c:	mov    rax,QWORD PTR [rbp-0x90]
  406393:	mov    rsi,rcx
  406396:	mov    rdi,rax
  406399:	call   403216 <_start@@Base+0x106>
  40639e:	mov    QWORD PTR [rbp-0xb0],rax
  4063a5:	mov    rax,QWORD PTR [rbp-0xb0]
  4063ac:	cmp    rax,QWORD PTR [rbp-0xb8]
  4063b3:	jne    4063dd <test@@Base+0x13e1>
  4063b5:	mov    rax,QWORD PTR [rip+0x13c3c]        # 419ff8 <stderr@GLIBC_2.2.5>
  4063bc:	mov    rax,QWORD PTR [rax]
  4063bf:	mov    rcx,rax
  4063c2:	mov    edx,0xd
  4063c7:	mov    esi,0x1
  4063cc:	lea    rdi,[rip+0xdf18]        # 4142eb <g_data@@Base+0x28b>
  4063d3:	call   4030f0 <fwrite@plt>
  4063d8:	jmp    40650a <test@@Base+0x150e>
  4063dd:	mov    rax,QWORD PTR [rbp-0xb0]
  4063e4:	movzx  eax,BYTE PTR [rax]
  4063e7:	cmp    al,0x7d
  4063e9:	je     4063f0 <test@@Base+0x13f4>
  4063eb:	jmp    4051eb <test@@Base+0x1ef>
  4063f0:	mov    rax,QWORD PTR [rbp-0xb8]
  4063f7:	cmp    rax,QWORD PTR [rbp-0xb0]
  4063fe:	jbe    40647e <test@@Base+0x1482>
  406400:	mov    rax,QWORD PTR [rbp-0xb0]
  406407:	movzx  eax,BYTE PTR [rax]
  40640a:	cmp    al,0x7d
  40640c:	jne    40647e <test@@Base+0x1482>
  40640e:	add    QWORD PTR [rbp-0xb0],0x1
  406416:	mov    rax,QWORD PTR [rbp-0xa8]
  40641d:	mov    rdi,rax
  406420:	call   409e4c <flatcc_builder_end_table@@Base>
  406425:	mov    DWORD PTR [rbp-0x94],eax
  40642b:	mov    edx,DWORD PTR [rbp-0x94]
  406431:	mov    rax,QWORD PTR [rbp-0xa8]
  406438:	mov    esi,edx
  40643a:	mov    rdi,rax
  40643d:	call   40872e <flatcc_builder_end_buffer@@Base>
  406442:	mov    rdx,QWORD PTR [rbp-0xb8]
  406449:	mov    rcx,QWORD PTR [rbp-0xb0]
  406450:	mov    rax,QWORD PTR [rbp-0x90]
  406457:	mov    rsi,rcx
  40645a:	mov    rdi,rax
  40645d:	call   403216 <_start@@Base+0x106>
  406462:	mov    QWORD PTR [rbp-0xb0],rax
  406469:	mov    rax,QWORD PTR [rbp-0xb0]
  406470:	cmp    rax,QWORD PTR [rbp-0xb8]
  406477:	jne    4064cc <test@@Base+0x14d0>
  406479:	jmp    40650a <test@@Base+0x150e>
  40647e:	mov    rax,QWORD PTR [rip+0x13b73]        # 419ff8 <stderr@GLIBC_2.2.5>
  406485:	mov    rax,QWORD PTR [rax]
  406488:	mov    edx,0x7d
  40648d:	lea    rsi,[rip+0xde65]        # 4142f9 <g_data@@Base+0x299>
  406494:	mov    rdi,rax
  406497:	mov    eax,0x0
  40649c:	call   4030b0 <fprintf@plt>
  4064a1:	mov    rdx,QWORD PTR [rbp-0xb8]
  4064a8:	mov    rsi,QWORD PTR [rbp-0xb0]
  4064af:	mov    rax,QWORD PTR [rbp-0x90]
  4064b6:	mov    ecx,0x11
  4064bb:	mov    rdi,rax
  4064be:	call   410789 <flatcc_json_parser_set_error@@Base>
  4064c3:	mov    QWORD PTR [rbp-0xb0],rax
  4064ca:	jmp    40650a <test@@Base+0x150e>
  4064cc:	mov    rax,QWORD PTR [rip+0x13b25]        # 419ff8 <stderr@GLIBC_2.2.5>
  4064d3:	mov    rax,QWORD PTR [rax]
  4064d6:	mov    rcx,rax
  4064d9:	mov    edx,0x1a
  4064de:	mov    esi,0x1
  4064e3:	lea    rdi,[rip+0xde25]        # 41430f <g_data@@Base+0x2af>
  4064ea:	call   4030f0 <fwrite@plt>
  4064ef:	jmp    40650a <test@@Base+0x150e>
  4064f1:	nop
  4064f2:	jmp    40650a <test@@Base+0x150e>
  4064f4:	nop
  4064f5:	jmp    40650a <test@@Base+0x150e>
  4064f7:	nop
  4064f8:	jmp    40650a <test@@Base+0x150e>
  4064fa:	nop
  4064fb:	jmp    40650a <test@@Base+0x150e>
  4064fd:	nop
  4064fe:	jmp    40650a <test@@Base+0x150e>
  406500:	nop
  406501:	jmp    40650a <test@@Base+0x150e>
  406503:	nop
  406504:	jmp    40650a <test@@Base+0x150e>
  406506:	nop
  406507:	jmp    40650a <test@@Base+0x150e>
  406509:	nop
  40650a:	mov    rax,QWORD PTR [rbp-0x90]
  406511:	mov    eax,DWORD PTR [rax+0x20]
  406514:	test   eax,eax
  406516:	je     40658c <test@@Base+0x1590>
  406518:	mov    rax,QWORD PTR [rbp-0x90]
  40651f:	mov    eax,DWORD PTR [rax+0x20]
  406522:	mov    edi,eax
  406524:	call   4105d1 <flatcc_json_parser_error_string@@Base>
  406529:	mov    rsi,rax
  40652c:	mov    rax,QWORD PTR [rbp-0x90]
  406533:	mov    rax,QWORD PTR [rax+0x38]
  406537:	mov    rdx,rax
  40653a:	mov    rax,QWORD PTR [rbp-0x90]
  406541:	mov    rax,QWORD PTR [rax+0x8]
  406545:	sub    rdx,rax
  406548:	mov    rax,rdx
  40654b:	add    eax,0x1
  40654e:	mov    ecx,eax
  406550:	mov    rax,QWORD PTR [rbp-0x90]
  406557:	mov    edx,DWORD PTR [rax+0x18]
  40655a:	mov    rax,QWORD PTR [rip+0x13a97]        # 419ff8 <stderr@GLIBC_2.2.5>
  406561:	mov    rax,QWORD PTR [rax]
  406564:	mov    r8,rsi
  406567:	lea    rsi,[rip+0xddbc]        # 41432a <g_data@@Base+0x2ca>
  40656e:	mov    rdi,rax
  406571:	mov    eax,0x0
  406576:	call   4030b0 <fprintf@plt>
  40657b:	mov    rax,QWORD PTR [rbp-0xa8]
  406582:	mov    rdi,rax
  406585:	call   40734b <flatcc_builder_reset@@Base>
  40658a:	jmp    4065af <test@@Base+0x15b3>
  40658c:	mov    rax,QWORD PTR [rip+0x13a65]        # 419ff8 <stderr@GLIBC_2.2.5>
  406593:	mov    rax,QWORD PTR [rax]
  406596:	mov    rcx,rax
  406599:	mov    edx,0xf
  40659e:	mov    esi,0x1
  4065a3:	lea    rdi,[rip+0xdd8b]        # 414335 <g_data@@Base+0x2d5>
  4065aa:	call   4030f0 <fwrite@plt>
  4065af:	mov    rax,QWORD PTR [rbp-0x90]
  4065b6:	mov    edx,DWORD PTR [rax+0x20]
  4065b9:	mov    rax,QWORD PTR [rbp-0xc0]
  4065c0:	mov    DWORD PTR [rax],edx
  4065c2:	mov    rax,QWORD PTR [rbp-0xb0]
  4065c9:	mov    rdi,QWORD PTR [rbp-0x8]
  4065cd:	xor    rdi,QWORD PTR fs:0x28
  4065d6:	je     4065dd <test@@Base+0x15e1>
  4065d8:	call   403060 <__stack_chk_fail@plt>
  4065dd:	leave  
  4065de:	ret    

00000000004065df <main@@Base>:
  4065df:	push   rbp
  4065e0:	mov    rbp,rsp
  4065e3:	sub    rsp,0x1a0
  4065ea:	mov    rax,QWORD PTR fs:0x28
  4065f3:	mov    QWORD PTR [rbp-0x8],rax
  4065f7:	xor    eax,eax
  4065f9:	mov    DWORD PTR [rbp-0x194],0xffffffff
  406603:	lea    rax,[rbp-0x190]
  40660a:	mov    rdi,rax
  40660d:	call   40710b <flatcc_builder_init@@Base>
  406612:	mov    rax,0x414060
  406619:	lea    rdx,[rax+0x285]
  406620:	lea    rcx,[rbp-0x194]
  406627:	lea    rax,[rbp-0x190]
  40662e:	mov    rsi,0x414060
  406635:	mov    rdi,rax
  406638:	call   404ffc <test@@Base>
  40663d:	lea    rax,[rbp-0x190]
  406644:	mov    rdi,rax
  406647:	call   40736f <flatcc_builder_clear@@Base>
  40664c:	mov    eax,DWORD PTR [rbp-0x194]
  406652:	mov    rdx,QWORD PTR [rbp-0x8]
  406656:	xor    rdx,QWORD PTR fs:0x28
  40665f:	je     406666 <main@@Base+0x87>
  406661:	call   403060 <__stack_chk_fail@plt>
  406666:	leave  
  406667:	ret    
  406668:	push   rbp
  406669:	mov    rbp,rsp
  40666c:	sub    rsp,0x30
  406670:	mov    QWORD PTR [rbp-0x28],rdi
  406674:	mov    QWORD PTR [rbp-0x30],rsi
  406678:	mov    rax,QWORD PTR fs:0x28
  406681:	mov    QWORD PTR [rbp-0x8],rax
  406685:	xor    eax,eax
  406687:	mov    QWORD PTR [rbp-0x10],0x0
  40668f:	cmp    QWORD PTR [rbp-0x28],0x7
  406694:	ja     40669e <main@@Base+0xbf>
  406696:	mov    QWORD PTR [rbp-0x28],0x8
  40669e:	mov    rdx,QWORD PTR [rbp-0x30]
  4066a2:	mov    rcx,QWORD PTR [rbp-0x28]
  4066a6:	lea    rax,[rbp-0x10]
  4066aa:	mov    rsi,rcx
  4066ad:	mov    rdi,rax
  4066b0:	call   403100 <posix_memalign@plt>
  4066b5:	mov    DWORD PTR [rbp-0x14],eax
  4066b8:	cmp    DWORD PTR [rbp-0x14],0x0
  4066bc:	je     4066db <main@@Base+0xfc>
  4066be:	mov    rax,QWORD PTR [rbp-0x10]
  4066c2:	test   rax,rax
  4066c5:	je     4066db <main@@Base+0xfc>
  4066c7:	mov    rax,QWORD PTR [rbp-0x10]
  4066cb:	mov    rdi,rax
  4066ce:	call   403030 <free@plt>
  4066d3:	mov    QWORD PTR [rbp-0x10],0x0
  4066db:	mov    rax,QWORD PTR [rbp-0x10]
  4066df:	mov    rcx,QWORD PTR [rbp-0x8]
  4066e3:	xor    rcx,QWORD PTR fs:0x28
  4066ec:	je     4066f3 <main@@Base+0x114>
  4066ee:	call   403060 <__stack_chk_fail@plt>
  4066f3:	leave  
  4066f4:	ret    
  4066f5:	push   rbp
  4066f6:	mov    rbp,rsp
  4066f9:	mov    DWORD PTR [rbp-0x4],edi
  4066fc:	mov    eax,DWORD PTR [rbp-0x4]
  4066ff:	pop    rbp
  406700:	ret    
  406701:	push   rbp
  406702:	mov    rbp,rsp
  406705:	mov    eax,edi
  406707:	mov    BYTE PTR [rbp-0x4],al
  40670a:	movzx  eax,BYTE PTR [rbp-0x4]
  40670e:	pop    rbp
  40670f:	ret    
  406710:	push   rbp
  406711:	mov    rbp,rsp
  406714:	mov    DWORD PTR [rbp-0x4],edi
  406717:	mov    eax,DWORD PTR [rbp-0x4]
  40671a:	pop    rbp
  40671b:	ret    
  40671c:	push   rbp
  40671d:	mov    rbp,rsp
  406720:	mov    QWORD PTR [rbp-0x8],rdi
  406724:	mov    QWORD PTR [rbp-0x10],rsi
  406728:	mov    rax,QWORD PTR [rbp-0x8]
  40672c:	mov    rdx,QWORD PTR [rax]
  40672f:	mov    rax,QWORD PTR [rbp-0x8]
  406733:	mov    rax,QWORD PTR [rax+0x8]
  406737:	cmp    rdx,rax
  40673a:	jne    40675c <main@@Base+0x17d>
  40673c:	cmp    QWORD PTR [rbp-0x10],0x0
  406741:	je     406752 <main@@Base+0x173>
  406743:	mov    rax,QWORD PTR [rbp-0x8]
  406747:	mov    rdx,QWORD PTR [rax+0x30]
  40674b:	mov    rax,QWORD PTR [rbp-0x10]
  40674f:	mov    QWORD PTR [rax],rdx
  406752:	mov    rax,QWORD PTR [rbp-0x8]
  406756:	mov    rax,QWORD PTR [rax+0x10]
  40675a:	jmp    406773 <main@@Base+0x194>
  40675c:	cmp    QWORD PTR [rbp-0x10],0x0
  406761:	je     40676e <main@@Base+0x18f>
  406763:	mov    rax,QWORD PTR [rbp-0x10]
  406767:	mov    QWORD PTR [rax],0x0
  40676e:	mov    eax,0x0
  406773:	pop    rbp
  406774:	ret    
  406775:	push   rbp
  406776:	mov    rbp,rsp
  406779:	sub    rsp,0x20
  40677d:	mov    QWORD PTR [rbp-0x18],rdi
  406781:	mov    QWORD PTR [rbp-0x20],rsi
  406785:	mov    rdx,QWORD PTR [rbp-0x20]
  406789:	mov    rax,QWORD PTR [rbp-0x18]
  40678d:	mov    esi,0x0
  406792:	mov    rdi,rax
  406795:	call   403090 <memchr@plt>
  40679a:	mov    QWORD PTR [rbp-0x8],rax
  40679e:	cmp    QWORD PTR [rbp-0x8],0x0
  4067a3:	je     4067b5 <main@@Base+0x1d6>
  4067a5:	mov    rdx,QWORD PTR [rbp-0x8]
  4067a9:	mov    rax,QWORD PTR [rbp-0x18]
  4067ad:	sub    rdx,rax
  4067b0:	mov    rax,rdx
  4067b3:	jmp    4067b9 <main@@Base+0x1da>
  4067b5:	mov    rax,QWORD PTR [rbp-0x20]
  4067b9:	leave  
  4067ba:	ret    

00000000004067bb <flatcc_builder_default_alloc@@Base>:
  4067bb:	push   rbp
  4067bc:	mov    rbp,rsp
  4067bf:	sub    rsp,0x30
  4067c3:	mov    QWORD PTR [rbp-0x18],rdi
  4067c7:	mov    QWORD PTR [rbp-0x20],rsi
  4067cb:	mov    QWORD PTR [rbp-0x28],rdx
  4067cf:	mov    DWORD PTR [rbp-0x2c],ecx
  4067d2:	mov    DWORD PTR [rbp-0x30],r8d
  4067d6:	cmp    QWORD PTR [rbp-0x28],0x0
  4067db:	jne    406819 <flatcc_builder_default_alloc@@Base+0x5e>
  4067dd:	mov    rax,QWORD PTR [rbp-0x20]
  4067e1:	mov    rax,QWORD PTR [rax]
  4067e4:	test   rax,rax
  4067e7:	je     40680f <flatcc_builder_default_alloc@@Base+0x54>
  4067e9:	mov    rax,QWORD PTR [rbp-0x20]
  4067ed:	mov    rax,QWORD PTR [rax]
  4067f0:	mov    rdi,rax
  4067f3:	call   403030 <free@plt>
  4067f8:	mov    rax,QWORD PTR [rbp-0x20]
  4067fc:	mov    QWORD PTR [rax],0x0
  406803:	mov    rax,QWORD PTR [rbp-0x20]
  406807:	mov    QWORD PTR [rax+0x8],0x0
  40680f:	mov    eax,0x0
  406814:	jmp    406926 <flatcc_builder_default_alloc@@Base+0x16b>
  406819:	mov    eax,DWORD PTR [rbp-0x30]
  40681c:	cmp    eax,0x4
  40681f:	je     40684d <flatcc_builder_default_alloc@@Base+0x92>
  406821:	cmp    eax,0x4
  406824:	jg     40682d <flatcc_builder_default_alloc@@Base+0x72>
  406826:	cmp    eax,0x1
  406829:	je     406839 <flatcc_builder_default_alloc@@Base+0x7e>
  40682b:	jmp    406861 <flatcc_builder_default_alloc@@Base+0xa6>
  40682d:	cmp    eax,0x5
  406830:	je     406843 <flatcc_builder_default_alloc@@Base+0x88>
  406832:	cmp    eax,0x7
  406835:	je     406857 <flatcc_builder_default_alloc@@Base+0x9c>
  406837:	jmp    406861 <flatcc_builder_default_alloc@@Base+0xa6>
  406839:	mov    QWORD PTR [rbp-0x10],0x100
  406841:	jmp    40686a <flatcc_builder_default_alloc@@Base+0xaf>
  406843:	mov    rax,QWORD PTR [rbp-0x28]
  406847:	mov    QWORD PTR [rbp-0x10],rax
  40684b:	jmp    40686a <flatcc_builder_default_alloc@@Base+0xaf>
  40684d:	mov    QWORD PTR [rbp-0x10],0x120
  406855:	jmp    40686a <flatcc_builder_default_alloc@@Base+0xaf>
  406857:	mov    QWORD PTR [rbp-0x10],0x40
  40685f:	jmp    40686a <flatcc_builder_default_alloc@@Base+0xaf>
  406861:	mov    QWORD PTR [rbp-0x10],0x20
  406869:	nop
  40686a:	jmp    406870 <flatcc_builder_default_alloc@@Base+0xb5>
  40686c:	shl    QWORD PTR [rbp-0x10],1
  406870:	mov    rax,QWORD PTR [rbp-0x10]
  406874:	cmp    rax,QWORD PTR [rbp-0x28]
  406878:	jb     40686c <flatcc_builder_default_alloc@@Base+0xb1>
  40687a:	mov    rax,QWORD PTR [rbp-0x20]
  40687e:	mov    rax,QWORD PTR [rax+0x8]
  406882:	cmp    rax,QWORD PTR [rbp-0x28]
  406886:	jb     4068a3 <flatcc_builder_default_alloc@@Base+0xe8>
  406888:	mov    rax,QWORD PTR [rbp-0x20]
  40688c:	mov    rax,QWORD PTR [rax+0x8]
  406890:	shr    rax,1
  406893:	cmp    rax,QWORD PTR [rbp-0x10]
  406897:	jb     4068a3 <flatcc_builder_default_alloc@@Base+0xe8>
  406899:	mov    eax,0x0
  40689e:	jmp    406926 <flatcc_builder_default_alloc@@Base+0x16b>
  4068a3:	mov    rax,QWORD PTR [rbp-0x20]
  4068a7:	mov    rax,QWORD PTR [rax]
  4068aa:	mov    rdx,QWORD PTR [rbp-0x10]
  4068ae:	mov    rsi,rdx
  4068b1:	mov    rdi,rax
  4068b4:	call   4030e0 <realloc@plt>
  4068b9:	mov    QWORD PTR [rbp-0x8],rax
  4068bd:	cmp    QWORD PTR [rbp-0x8],0x0
  4068c2:	jne    4068cb <flatcc_builder_default_alloc@@Base+0x110>
  4068c4:	mov    eax,0xffffffff
  4068c9:	jmp    406926 <flatcc_builder_default_alloc@@Base+0x16b>
  4068cb:	cmp    DWORD PTR [rbp-0x2c],0x0
  4068cf:	je     40690a <flatcc_builder_default_alloc@@Base+0x14f>
  4068d1:	mov    rax,QWORD PTR [rbp-0x20]
  4068d5:	mov    rax,QWORD PTR [rax+0x8]
  4068d9:	cmp    rax,QWORD PTR [rbp-0x10]
  4068dd:	jae    40690a <flatcc_builder_default_alloc@@Base+0x14f>
  4068df:	mov    rax,QWORD PTR [rbp-0x20]
  4068e3:	mov    rax,QWORD PTR [rax+0x8]
  4068e7:	mov    rdx,QWORD PTR [rbp-0x10]
  4068eb:	sub    rdx,rax
  4068ee:	mov    rax,QWORD PTR [rbp-0x20]
  4068f2:	mov    rcx,QWORD PTR [rax+0x8]
  4068f6:	mov    rax,QWORD PTR [rbp-0x8]
  4068fa:	add    rax,rcx
  4068fd:	mov    esi,0x0
  406902:	mov    rdi,rax
  406905:	call   403080 <memset@plt>
  40690a:	mov    rax,QWORD PTR [rbp-0x20]
  40690e:	mov    rdx,QWORD PTR [rbp-0x8]
  406912:	mov    QWORD PTR [rax],rdx
  406915:	mov    rax,QWORD PTR [rbp-0x20]
  406919:	mov    rdx,QWORD PTR [rbp-0x10]
  40691d:	mov    QWORD PTR [rax+0x8],rdx
  406921:	mov    eax,0x0
  406926:	leave  
  406927:	ret    
  406928:	push   rbp
  406929:	mov    rbp,rsp
  40692c:	mov    QWORD PTR [rbp-0x18],rdi
  406930:	mov    DWORD PTR [rbp-0x1c],esi
  406933:	mov    rax,QWORD PTR [rbp-0x18]
  406937:	add    rax,0x58
  40693b:	add    rax,0x10
  40693f:	mov    QWORD PTR [rbp-0x8],rax
  406943:	mov    rax,QWORD PTR [rbp-0x18]
  406947:	mov    rdx,QWORD PTR [rax+0x68]
  40694b:	mov    rax,QWORD PTR [rbp-0x18]
  40694f:	mov    eax,DWORD PTR [rax+0x28]
  406952:	mov    eax,eax
  406954:	add    rdx,rax
  406957:	mov    rax,QWORD PTR [rbp-0x18]
  40695b:	mov    QWORD PTR [rax+0x18],rdx
  40695f:	mov    rax,QWORD PTR [rbp-0x8]
  406963:	mov    rax,QWORD PTR [rax+0x8]
  406967:	mov    edx,eax
  406969:	mov    rax,QWORD PTR [rbp-0x18]
  40696d:	mov    eax,DWORD PTR [rax+0x28]
  406970:	sub    edx,eax
  406972:	mov    rax,QWORD PTR [rbp-0x18]
  406976:	mov    DWORD PTR [rax+0x24],edx
  406979:	mov    rax,QWORD PTR [rbp-0x18]
  40697d:	mov    eax,DWORD PTR [rax+0x24]
  406980:	cmp    eax,DWORD PTR [rbp-0x1c]
  406983:	jbe    40698f <flatcc_builder_default_alloc@@Base+0x1d4>
  406985:	mov    rax,QWORD PTR [rbp-0x18]
  406989:	mov    edx,DWORD PTR [rbp-0x1c]
  40698c:	mov    DWORD PTR [rax+0x24],edx
  40698f:	mov    rax,QWORD PTR [rbp-0x18]
  406993:	mov    rax,QWORD PTR [rax+0x30]
  406997:	mov    edx,DWORD PTR [rbp-0x1c]
  40699a:	mov    DWORD PTR [rax+0x4],edx
  40699d:	nop
  40699e:	pop    rbp
  40699f:	ret    
  4069a0:	push   rbp
  4069a1:	mov    rbp,rsp
  4069a4:	sub    rsp,0x30
  4069a8:	mov    QWORD PTR [rbp-0x18],rdi
  4069ac:	mov    QWORD PTR [rbp-0x20],rsi
  4069b0:	mov    DWORD PTR [rbp-0x24],edx
  4069b3:	mov    rax,QWORD PTR [rbp-0x18]
  4069b7:	add    rax,0x58
  4069bb:	add    rax,0x10
  4069bf:	mov    QWORD PTR [rbp-0x8],rax
  4069c3:	mov    rax,QWORD PTR [rbp-0x18]
  4069c7:	mov    rax,QWORD PTR [rax+0x50]
  4069cb:	mov    rdx,QWORD PTR [rbp-0x18]
  4069cf:	mov    edx,DWORD PTR [rdx+0x28]
  4069d2:	mov    ecx,edx
  4069d4:	mov    rdx,QWORD PTR [rbp-0x20]
  4069d8:	lea    r9,[rcx+rdx*1]
  4069dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4069e0:	mov    rdi,QWORD PTR [rdx+0x40]
  4069e4:	mov    rsi,QWORD PTR [rbp-0x8]
  4069e8:	mov    r8d,0x1
  4069ee:	mov    ecx,0x1
  4069f3:	mov    rdx,r9
  4069f6:	call   rax
  4069f8:	test   eax,eax
  4069fa:	je     406a03 <flatcc_builder_default_alloc@@Base+0x248>
  4069fc:	mov    eax,0xffffffff
  406a01:	jmp    406a19 <flatcc_builder_default_alloc@@Base+0x25e>
  406a03:	mov    edx,DWORD PTR [rbp-0x24]
  406a06:	mov    rax,QWORD PTR [rbp-0x18]
  406a0a:	mov    esi,edx
  406a0c:	mov    rdi,rax
  406a0f:	call   406928 <flatcc_builder_default_alloc@@Base+0x16d>
  406a14:	mov    eax,0x0
  406a19:	leave  
  406a1a:	ret    
  406a1b:	push   rbp
  406a1c:	mov    rbp,rsp
  406a1f:	sub    rsp,0x20
  406a23:	mov    QWORD PTR [rbp-0x18],rdi
  406a27:	mov    DWORD PTR [rbp-0x1c],esi
  406a2a:	mov    rax,QWORD PTR [rbp-0x18]
  406a2e:	mov    eax,DWORD PTR [rax+0x20]
  406a31:	mov    eax,eax
  406a33:	mov    QWORD PTR [rbp-0x8],rax
  406a37:	mov    rax,QWORD PTR [rbp-0x18]
  406a3b:	mov    edx,DWORD PTR [rax+0x20]
  406a3e:	mov    eax,DWORD PTR [rbp-0x1c]
  406a41:	add    edx,eax
  406a43:	mov    rax,QWORD PTR [rbp-0x18]
  406a47:	mov    DWORD PTR [rax+0x20],edx
  406a4a:	mov    rax,QWORD PTR [rbp-0x18]
  406a4e:	mov    edx,DWORD PTR [rax+0x20]
  406a51:	mov    rax,QWORD PTR [rbp-0x18]
  406a55:	mov    eax,DWORD PTR [rax+0x24]
  406a58:	cmp    edx,eax
  406a5a:	jb     406a87 <flatcc_builder_default_alloc@@Base+0x2cc>
  406a5c:	mov    rax,QWORD PTR [rbp-0x18]
  406a60:	mov    eax,DWORD PTR [rax+0x20]
  406a63:	add    eax,0x1
  406a66:	mov    ecx,eax
  406a68:	mov    rax,QWORD PTR [rbp-0x18]
  406a6c:	mov    edx,0xfffffffc
  406a71:	mov    rsi,rcx
  406a74:	mov    rdi,rax
  406a77:	call   4069a0 <flatcc_builder_default_alloc@@Base+0x1e5>
  406a7c:	test   eax,eax
  406a7e:	je     406a87 <flatcc_builder_default_alloc@@Base+0x2cc>
  406a80:	mov    eax,0x0
  406a85:	jmp    406a96 <flatcc_builder_default_alloc@@Base+0x2db>
  406a87:	mov    rax,QWORD PTR [rbp-0x18]
  406a8b:	mov    rdx,QWORD PTR [rax+0x18]
  406a8f:	mov    rax,QWORD PTR [rbp-0x8]
  406a93:	add    rax,rdx
  406a96:	leave  
  406a97:	ret    
  406a98:	push   rbp
  406a99:	mov    rbp,rsp
  406a9c:	sub    rsp,0x10
  406aa0:	mov    QWORD PTR [rbp-0x8],rdi
  406aa4:	mov    DWORD PTR [rbp-0xc],esi
  406aa7:	mov    rax,QWORD PTR [rbp-0x8]
  406aab:	mov    eax,DWORD PTR [rax+0x20]
  406aae:	sub    eax,DWORD PTR [rbp-0xc]
  406ab1:	mov    edx,eax
  406ab3:	mov    rax,QWORD PTR [rbp-0x8]
  406ab7:	mov    DWORD PTR [rax+0x20],edx
  406aba:	mov    eax,DWORD PTR [rbp-0xc]
  406abd:	mov    rdx,QWORD PTR [rbp-0x8]
  406ac1:	mov    rcx,QWORD PTR [rdx+0x18]
  406ac5:	mov    rdx,QWORD PTR [rbp-0x8]
  406ac9:	mov    edx,DWORD PTR [rdx+0x20]
  406acc:	mov    edx,edx
  406ace:	add    rcx,rdx
  406ad1:	mov    rdx,rax
  406ad4:	mov    esi,0x0
  406ad9:	mov    rdi,rcx
  406adc:	call   403080 <memset@plt>
  406ae1:	nop
  406ae2:	leave  
  406ae3:	ret    
  406ae4:	push   rbp
  406ae5:	mov    rbp,rsp
  406ae8:	sub    rsp,0x30
  406aec:	mov    QWORD PTR [rbp-0x18],rdi
  406af0:	mov    QWORD PTR [rbp-0x20],rsi
  406af4:	mov    DWORD PTR [rbp-0x24],edx
  406af7:	mov    edx,DWORD PTR [rbp-0x24]
  406afa:	mov    rax,QWORD PTR [rbp-0x18]
  406afe:	mov    esi,edx
  406b00:	mov    rdi,rax
  406b03:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  406b08:	mov    QWORD PTR [rbp-0x8],rax
  406b0c:	cmp    QWORD PTR [rbp-0x8],0x0
  406b11:	jne    406b1a <flatcc_builder_default_alloc@@Base+0x35f>
  406b13:	mov    eax,0x0
  406b18:	jmp    406b34 <flatcc_builder_default_alloc@@Base+0x379>
  406b1a:	mov    edx,DWORD PTR [rbp-0x24]
  406b1d:	mov    rcx,QWORD PTR [rbp-0x20]
  406b21:	mov    rax,QWORD PTR [rbp-0x8]
  406b25:	mov    rsi,rcx
  406b28:	mov    rdi,rax
  406b2b:	call   4030c0 <memcpy@plt>
  406b30:	mov    rax,QWORD PTR [rbp-0x8]
  406b34:	leave  
  406b35:	ret    
  406b36:	push   rbp
  406b37:	mov    rbp,rsp
  406b3a:	sub    rsp,0x30
  406b3e:	mov    QWORD PTR [rbp-0x18],rdi
  406b42:	mov    DWORD PTR [rbp-0x1c],esi
  406b45:	mov    eax,ecx
  406b47:	mov    WORD PTR [rbp-0x20],dx
  406b4b:	mov    WORD PTR [rbp-0x24],ax
  406b4f:	mov    rax,QWORD PTR [rbp-0x18]
  406b53:	mov    edx,DWORD PTR [rax+0x20]
  406b56:	movzx  eax,WORD PTR [rbp-0x20]
  406b5a:	add    eax,edx
  406b5c:	lea    edx,[rax-0x1]
  406b5f:	movzx  eax,WORD PTR [rbp-0x20]
  406b63:	neg    eax
  406b65:	and    eax,edx
  406b67:	mov    DWORD PTR [rbp-0x4],eax
  406b6a:	mov    edx,DWORD PTR [rbp-0x4]
  406b6d:	mov    eax,DWORD PTR [rbp-0x1c]
  406b70:	add    edx,eax
  406b72:	mov    rax,QWORD PTR [rbp-0x18]
  406b76:	mov    DWORD PTR [rax+0x20],edx
  406b79:	mov    rax,QWORD PTR [rbp-0x18]
  406b7d:	mov    edx,DWORD PTR [rax+0x20]
  406b80:	mov    rax,QWORD PTR [rbp-0x18]
  406b84:	mov    eax,DWORD PTR [rax+0x24]
  406b87:	cmp    edx,eax
  406b89:	jb     406bb6 <flatcc_builder_default_alloc@@Base+0x3fb>
  406b8b:	mov    rax,QWORD PTR [rbp-0x18]
  406b8f:	mov    eax,DWORD PTR [rax+0x20]
  406b92:	add    eax,0x1
  406b95:	mov    ecx,eax
  406b97:	mov    rax,QWORD PTR [rbp-0x18]
  406b9b:	mov    edx,0xfffc
  406ba0:	mov    rsi,rcx
  406ba3:	mov    rdi,rax
  406ba6:	call   4069a0 <flatcc_builder_default_alloc@@Base+0x1e5>
  406bab:	test   eax,eax
  406bad:	je     406bb6 <flatcc_builder_default_alloc@@Base+0x3fb>
  406baf:	mov    eax,0x0
  406bb4:	jmp    406bfc <flatcc_builder_default_alloc@@Base+0x441>
  406bb6:	mov    rax,QWORD PTR [rbp-0x18]
  406bba:	mov    rax,QWORD PTR [rax+0x8]
  406bbe:	movzx  edx,WORD PTR [rbp-0x24]
  406bc2:	add    rdx,rdx
  406bc5:	add    rax,rdx
  406bc8:	mov    edx,DWORD PTR [rbp-0x4]
  406bcb:	add    edx,0x4
  406bce:	mov    WORD PTR [rax],dx
  406bd1:	mov    rax,QWORD PTR [rbp-0x18]
  406bd5:	movzx  eax,WORD PTR [rax+0x10]
  406bd9:	cmp    ax,WORD PTR [rbp-0x24]
  406bdd:	ja     406bee <flatcc_builder_default_alloc@@Base+0x433>
  406bdf:	movzx  eax,WORD PTR [rbp-0x24]
  406be3:	lea    edx,[rax+0x1]
  406be6:	mov    rax,QWORD PTR [rbp-0x18]
  406bea:	mov    WORD PTR [rax+0x10],dx
  406bee:	mov    rax,QWORD PTR [rbp-0x18]
  406bf2:	mov    rdx,QWORD PTR [rax+0x18]
  406bf6:	mov    eax,DWORD PTR [rbp-0x4]
  406bf9:	add    rax,rdx
  406bfc:	leave  
  406bfd:	ret    
  406bfe:	push   rbp
  406bff:	mov    rbp,rsp
  406c02:	sub    rsp,0x20
  406c06:	mov    QWORD PTR [rbp-0x18],rdi
  406c0a:	mov    eax,esi
  406c0c:	mov    WORD PTR [rbp-0x1c],ax
  406c10:	mov    rax,QWORD PTR [rbp-0x18]
  406c14:	mov    eax,DWORD PTR [rax+0x20]
  406c17:	add    eax,0x3
  406c1a:	and    eax,0xfffffffc
  406c1d:	mov    DWORD PTR [rbp-0x4],eax
  406c20:	mov    eax,DWORD PTR [rbp-0x4]
  406c23:	lea    edx,[rax+0x4]
  406c26:	mov    rax,QWORD PTR [rbp-0x18]
  406c2a:	mov    DWORD PTR [rax+0x20],edx
  406c2d:	mov    rax,QWORD PTR [rbp-0x18]
  406c31:	mov    edx,DWORD PTR [rax+0x20]
  406c34:	mov    rax,QWORD PTR [rbp-0x18]
  406c38:	mov    eax,DWORD PTR [rax+0x24]
  406c3b:	cmp    edx,eax
  406c3d:	jbe    406c67 <flatcc_builder_default_alloc@@Base+0x4ac>
  406c3f:	mov    rax,QWORD PTR [rbp-0x18]
  406c43:	mov    eax,DWORD PTR [rax+0x20]
  406c46:	mov    ecx,eax
  406c48:	mov    rax,QWORD PTR [rbp-0x18]
  406c4c:	mov    edx,0xfffc
  406c51:	mov    rsi,rcx
  406c54:	mov    rdi,rax
  406c57:	call   4069a0 <flatcc_builder_default_alloc@@Base+0x1e5>
  406c5c:	test   eax,eax
  406c5e:	je     406c67 <flatcc_builder_default_alloc@@Base+0x4ac>
  406c60:	mov    eax,0x0
  406c65:	jmp    406cc5 <flatcc_builder_default_alloc@@Base+0x50a>
  406c67:	mov    rax,QWORD PTR [rbp-0x18]
  406c6b:	mov    rax,QWORD PTR [rax+0x8]
  406c6f:	movzx  edx,WORD PTR [rbp-0x1c]
  406c73:	add    rdx,rdx
  406c76:	add    rax,rdx
  406c79:	mov    edx,DWORD PTR [rbp-0x4]
  406c7c:	add    edx,0x4
  406c7f:	mov    WORD PTR [rax],dx
  406c82:	mov    rax,QWORD PTR [rbp-0x18]
  406c86:	movzx  eax,WORD PTR [rax+0x10]
  406c8a:	cmp    ax,WORD PTR [rbp-0x1c]
  406c8e:	ja     406c9f <flatcc_builder_default_alloc@@Base+0x4e4>
  406c90:	movzx  eax,WORD PTR [rbp-0x1c]
  406c94:	lea    edx,[rax+0x1]
  406c97:	mov    rax,QWORD PTR [rbp-0x18]
  406c9b:	mov    WORD PTR [rax+0x10],dx
  406c9f:	mov    rax,QWORD PTR [rbp-0x18]
  406ca3:	mov    rax,QWORD PTR [rax]
  406ca6:	lea    rcx,[rax+0x2]
  406caa:	mov    rdx,QWORD PTR [rbp-0x18]
  406cae:	mov    QWORD PTR [rdx],rcx
  406cb1:	mov    edx,DWORD PTR [rbp-0x4]
  406cb4:	mov    WORD PTR [rax],dx
  406cb7:	mov    rax,QWORD PTR [rbp-0x18]
  406cbb:	mov    rdx,QWORD PTR [rax+0x18]
  406cbf:	mov    eax,DWORD PTR [rbp-0x4]
  406cc2:	add    rax,rdx
  406cc5:	leave  
  406cc6:	ret    
  406cc7:	push   rbp
  406cc8:	mov    rbp,rsp
  406ccb:	sub    rsp,0x30
  406ccf:	mov    QWORD PTR [rbp-0x18],rdi
  406cd3:	mov    DWORD PTR [rbp-0x1c],esi
  406cd6:	mov    QWORD PTR [rbp-0x28],rdx
  406cda:	mov    QWORD PTR [rbp-0x30],rcx
  406cde:	mov    DWORD PTR [rbp-0x20],r8d
  406ce2:	mov    rax,QWORD PTR [rbp-0x18]
  406ce6:	lea    rdx,[rax+0x58]
  406cea:	mov    eax,DWORD PTR [rbp-0x1c]
  406ced:	cdqe   
  406cef:	shl    rax,0x4
  406cf3:	add    rax,rdx
  406cf6:	mov    QWORD PTR [rbp-0x8],rax
  406cfa:	mov    rdx,QWORD PTR [rbp-0x28]
  406cfe:	mov    rax,QWORD PTR [rbp-0x30]
  406d02:	add    rdx,rax
  406d05:	mov    rax,QWORD PTR [rbp-0x8]
  406d09:	mov    rax,QWORD PTR [rax+0x8]
  406d0d:	cmp    rdx,rax
  406d10:	jbe    406d65 <flatcc_builder_default_alloc@@Base+0x5aa>
  406d12:	mov    rax,QWORD PTR [rbp-0x18]
  406d16:	mov    rax,QWORD PTR [rax+0x50]
  406d1a:	mov    rcx,QWORD PTR [rbp-0x28]
  406d1e:	mov    rdx,QWORD PTR [rbp-0x30]
  406d22:	lea    r9,[rcx+rdx*1]
  406d26:	mov    rdx,QWORD PTR [rbp-0x18]
  406d2a:	mov    rdi,QWORD PTR [rdx+0x40]
  406d2e:	mov    ecx,DWORD PTR [rbp-0x1c]
  406d31:	mov    edx,DWORD PTR [rbp-0x20]
  406d34:	mov    rsi,QWORD PTR [rbp-0x8]
  406d38:	mov    r8d,ecx
  406d3b:	mov    ecx,edx
  406d3d:	mov    rdx,r9
  406d40:	call   rax
  406d42:	test   eax,eax
  406d44:	je     406d65 <flatcc_builder_default_alloc@@Base+0x5aa>
  406d46:	lea    rcx,[rip+0xdcab]        # 4149f8 <flatcc_builder_padding_base@@Base+0x658>
  406d4d:	mov    edx,0x134
  406d52:	lea    rsi,[rip+0xd847]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  406d59:	lea    rdi,[rip+0xd8a0]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  406d60:	call   403070 <__assert_fail@plt>
  406d65:	mov    rax,QWORD PTR [rbp-0x8]
  406d69:	mov    rax,QWORD PTR [rax]
  406d6c:	mov    rdx,rax
  406d6f:	mov    rax,QWORD PTR [rbp-0x28]
  406d73:	add    rax,rdx
  406d76:	leave  
  406d77:	ret    
  406d78:	push   rbp
  406d79:	mov    rbp,rsp
  406d7c:	sub    rsp,0x20
  406d80:	mov    QWORD PTR [rbp-0x18],rdi
  406d84:	mov    DWORD PTR [rbp-0x1c],esi
  406d87:	mov    rax,QWORD PTR [rbp-0x18]
  406d8b:	mov    rax,QWORD PTR [rax+0x30]
  406d8f:	mov    edx,DWORD PTR [rax+0x10]
  406d92:	mov    rax,QWORD PTR [rbp-0x18]
  406d96:	mov    rax,QWORD PTR [rax+0x30]
  406d9a:	movzx  eax,WORD PTR [rax+0x1c]
  406d9e:	movzx  eax,ax
  406da1:	add    eax,eax
  406da3:	add    eax,edx
  406da5:	mov    DWORD PTR [rbp-0x8],eax
  406da8:	mov    eax,DWORD PTR [rbp-0x1c]
  406dab:	add    eax,0x2
  406dae:	cdqe   
  406db0:	add    eax,eax
  406db2:	mov    DWORD PTR [rbp-0x4],eax
  406db5:	mov    ecx,DWORD PTR [rbp-0x4]
  406db8:	mov    edx,DWORD PTR [rbp-0x8]
  406dbb:	mov    rax,QWORD PTR [rbp-0x18]
  406dbf:	mov    r8d,0x1
  406dc5:	mov    esi,0x0
  406dca:	mov    rdi,rax
  406dcd:	call   406cc7 <flatcc_builder_default_alloc@@Base+0x50c>
  406dd2:	mov    rdx,rax
  406dd5:	mov    rax,QWORD PTR [rbp-0x18]
  406dd9:	mov    QWORD PTR [rax+0x8],rdx
  406ddd:	mov    rax,QWORD PTR [rbp-0x18]
  406de1:	mov    rax,QWORD PTR [rax+0x8]
  406de5:	test   rax,rax
  406de8:	jne    406df1 <flatcc_builder_default_alloc@@Base+0x636>
  406dea:	mov    eax,0xffffffff
  406def:	jmp    406e5f <flatcc_builder_default_alloc@@Base+0x6a4>
  406df1:	mov    rax,QWORD PTR [rbp-0x18]
  406df5:	mov    rax,QWORD PTR [rax+0x8]
  406df9:	lea    rdx,[rax+0x4]
  406dfd:	mov    rax,QWORD PTR [rbp-0x18]
  406e01:	mov    QWORD PTR [rax+0x8],rdx
  406e05:	mov    rax,QWORD PTR [rbp-0x18]
  406e09:	mov    rax,QWORD PTR [rax+0x30]
  406e0d:	mov    eax,DWORD PTR [rax+0x14]
  406e10:	mov    DWORD PTR [rbp-0x8],eax
  406e13:	mov    eax,DWORD PTR [rbp-0x1c]
  406e16:	cdqe   
  406e18:	add    eax,eax
  406e1a:	add    eax,0x1
  406e1d:	mov    DWORD PTR [rbp-0x4],eax
  406e20:	mov    ecx,DWORD PTR [rbp-0x4]
  406e23:	mov    edx,DWORD PTR [rbp-0x8]
  406e26:	mov    rax,QWORD PTR [rbp-0x18]
  406e2a:	mov    r8d,0x0
  406e30:	mov    esi,0x3
  406e35:	mov    rdi,rax
  406e38:	call   406cc7 <flatcc_builder_default_alloc@@Base+0x50c>
  406e3d:	mov    rdx,rax
  406e40:	mov    rax,QWORD PTR [rbp-0x18]
  406e44:	mov    QWORD PTR [rax],rdx
  406e47:	mov    rax,QWORD PTR [rbp-0x18]
  406e4b:	mov    rax,QWORD PTR [rax]
  406e4e:	test   rax,rax
  406e51:	jne    406e5a <flatcc_builder_default_alloc@@Base+0x69f>
  406e53:	mov    eax,0xffffffff
  406e58:	jmp    406e5f <flatcc_builder_default_alloc@@Base+0x6a4>
  406e5a:	mov    eax,0x0
  406e5f:	leave  
  406e60:	ret    
  406e61:	push   rbp
  406e62:	mov    rbp,rsp
  406e65:	sub    rsp,0x30
  406e69:	mov    QWORD PTR [rbp-0x28],rdi
  406e6d:	mov    rax,QWORD PTR [rbp-0x28]
  406e71:	add    rax,0x58
  406e75:	add    rax,0x50
  406e79:	mov    QWORD PTR [rbp-0x8],rax
  406e7d:	mov    rax,QWORD PTR [rbp-0x28]
  406e81:	mov    eax,DWORD PTR [rax+0xe4]
  406e87:	test   eax,eax
  406e89:	je     406eaa <flatcc_builder_default_alloc@@Base+0x6ef>
  406e8b:	lea    rcx,[rip+0xdb56]        # 4149e8 <flatcc_builder_padding_base@@Base+0x648>
  406e92:	mov    edx,0x156
  406e97:	lea    rsi,[rip+0xd702]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  406e9e:	lea    rdi,[rip+0xd75d]        # 414602 <flatcc_builder_padding_base@@Base+0x262>
  406ea5:	call   403070 <__assert_fail@plt>
  406eaa:	mov    rax,QWORD PTR [rbp-0x28]
  406eae:	mov    eax,DWORD PTR [rax+0xe4]
  406eb4:	mov    edx,eax
  406eb6:	mov    rax,QWORD PTR [rbp-0x28]
  406eba:	mov    r8d,0x0
  406ec0:	mov    ecx,0x10
  406ec5:	mov    esi,0x6
  406eca:	mov    rdi,rax
  406ecd:	call   406cc7 <flatcc_builder_default_alloc@@Base+0x50c>
  406ed2:	test   rax,rax
  406ed5:	jne    406ee1 <flatcc_builder_default_alloc@@Base+0x726>
  406ed7:	mov    eax,0xffffffff
  406edc:	jmp    406f83 <flatcc_builder_default_alloc@@Base+0x7c8>
  406ee1:	mov    rax,QWORD PTR [rbp-0x28]
  406ee5:	mov    DWORD PTR [rax+0xe4],0x10
  406eef:	mov    QWORD PTR [rbp-0x18],0x100
  406ef7:	mov    rax,QWORD PTR [rbp-0x28]
  406efb:	mov    rax,QWORD PTR [rax+0x50]
  406eff:	mov    rdx,QWORD PTR [rbp-0x28]
  406f03:	mov    rdi,QWORD PTR [rdx+0x40]
  406f07:	mov    rdx,QWORD PTR [rbp-0x18]
  406f0b:	mov    rsi,QWORD PTR [rbp-0x8]
  406f0f:	mov    r8d,0x5
  406f15:	mov    ecx,0x1
  406f1a:	call   rax
  406f1c:	test   eax,eax
  406f1e:	je     406f2b <flatcc_builder_default_alloc@@Base+0x770>
  406f20:	mov    eax,0xffffffff
  406f25:	jmp    406f83 <flatcc_builder_default_alloc@@Base+0x7c8>
  406f27:	shl    QWORD PTR [rbp-0x18],1
  406f2b:	mov    rax,QWORD PTR [rbp-0x18]
  406f2f:	lea    rdx,[rax+rax*1]
  406f33:	mov    rax,QWORD PTR [rbp-0x8]
  406f37:	mov    rax,QWORD PTR [rax+0x8]
  406f3b:	cmp    rdx,rax
  406f3e:	jbe    406f27 <flatcc_builder_default_alloc@@Base+0x76c>
  406f40:	mov    rax,QWORD PTR [rbp-0x18]
  406f44:	shr    rax,0x2
  406f48:	mov    QWORD PTR [rbp-0x18],rax
  406f4c:	mov    QWORD PTR [rbp-0x10],0x0
  406f54:	jmp    406f5b <flatcc_builder_default_alloc@@Base+0x7a0>
  406f56:	add    QWORD PTR [rbp-0x10],0x1
  406f5b:	mov    rax,QWORD PTR [rbp-0x10]
  406f5f:	mov    edx,0x1
  406f64:	shlx   rax,rdx,rax
  406f69:	cmp    rax,QWORD PTR [rbp-0x18]
  406f6d:	jb     406f56 <flatcc_builder_default_alloc@@Base+0x79b>
  406f6f:	mov    rax,QWORD PTR [rbp-0x28]
  406f73:	mov    rdx,QWORD PTR [rbp-0x10]
  406f77:	mov    QWORD PTR [rax+0xd8],rdx
  406f7e:	mov    eax,0x0
  406f83:	leave  
  406f84:	ret    
  406f85:	push   rbp
  406f86:	mov    rbp,rsp
  406f89:	sub    rsp,0x20
  406f8d:	mov    QWORD PTR [rbp-0x18],rdi
  406f91:	mov    DWORD PTR [rbp-0x1c],esi
  406f94:	mov    rax,QWORD PTR [rbp-0x18]
  406f98:	mov    rax,QWORD PTR [rax+0xd8]
  406f9f:	test   rax,rax
  406fa2:	jne    406fbb <flatcc_builder_default_alloc@@Base+0x800>
  406fa4:	mov    rax,QWORD PTR [rbp-0x18]
  406fa8:	mov    rdi,rax
  406fab:	call   406e61 <flatcc_builder_default_alloc@@Base+0x6a6>
  406fb0:	test   eax,eax
  406fb2:	je     406fbb <flatcc_builder_default_alloc@@Base+0x800>
  406fb4:	mov    eax,0x0
  406fb9:	jmp    406ff7 <flatcc_builder_default_alloc@@Base+0x83c>
  406fbb:	mov    rax,QWORD PTR [rbp-0x18]
  406fbf:	mov    rax,QWORD PTR [rax+0xa8]
  406fc6:	mov    QWORD PTR [rbp-0x8],rax
  406fca:	mov    rax,QWORD PTR [rbp-0x18]
  406fce:	mov    rax,QWORD PTR [rax+0xd8]
  406fd5:	mov    edx,0x20
  406fda:	sub    edx,eax
  406fdc:	mov    eax,edx
  406fde:	mov    edx,DWORD PTR [rbp-0x1c]
  406fe1:	shrx   eax,edx,eax
  406fe6:	mov    eax,eax
  406fe8:	lea    rdx,[rax*4+0x0]
  406ff0:	mov    rax,QWORD PTR [rbp-0x8]
  406ff4:	add    rax,rdx
  406ff7:	leave  
  406ff8:	ret    

0000000000406ff9 <flatcc_builder_flush_vtable_cache@@Base>:
  406ff9:	push   rbp
  406ffa:	mov    rbp,rsp
  406ffd:	sub    rsp,0x20
  407001:	mov    QWORD PTR [rbp-0x18],rdi
  407005:	mov    rax,QWORD PTR [rbp-0x18]
  407009:	add    rax,0x58
  40700d:	add    rax,0x50
  407011:	mov    QWORD PTR [rbp-0x8],rax
  407015:	mov    rax,QWORD PTR [rbp-0x18]
  407019:	mov    rax,QWORD PTR [rax+0xd8]
  407020:	test   rax,rax
  407023:	je     40705f <flatcc_builder_flush_vtable_cache@@Base+0x66>
  407025:	mov    rax,QWORD PTR [rbp-0x8]
  407029:	mov    rdx,QWORD PTR [rax+0x8]
  40702d:	mov    rax,QWORD PTR [rbp-0x8]
  407031:	mov    rax,QWORD PTR [rax]
  407034:	mov    esi,0x0
  407039:	mov    rdi,rax
  40703c:	call   403080 <memset@plt>
  407041:	mov    rax,QWORD PTR [rbp-0x18]
  407045:	mov    DWORD PTR [rax+0xe4],0x10
  40704f:	mov    rax,QWORD PTR [rbp-0x18]
  407053:	mov    DWORD PTR [rax+0xe0],0x0
  40705d:	jmp    407060 <flatcc_builder_flush_vtable_cache@@Base+0x67>
  40705f:	nop
  407060:	leave  
  407061:	ret    

0000000000407062 <flatcc_builder_custom_init@@Base>:
  407062:	push   rbp
  407063:	mov    rbp,rsp
  407066:	sub    rsp,0x30
  40706a:	mov    QWORD PTR [rbp-0x8],rdi
  40706e:	mov    QWORD PTR [rbp-0x10],rsi
  407072:	mov    QWORD PTR [rbp-0x18],rdx
  407076:	mov    QWORD PTR [rbp-0x20],rcx
  40707a:	mov    QWORD PTR [rbp-0x28],r8
  40707e:	mov    rax,QWORD PTR [rbp-0x8]
  407082:	mov    edx,0x188
  407087:	mov    esi,0x0
  40708c:	mov    rdi,rax
  40708f:	call   403080 <memset@plt>
  407094:	cmp    QWORD PTR [rbp-0x10],0x0
  407099:	jne    4070c2 <flatcc_builder_custom_init@@Base+0x60>
  40709b:	mov    rax,QWORD PTR [rbp-0x8]
  40709f:	mov    DWORD PTR [rax+0x128],0x1
  4070a9:	mov    rax,0x40c495
  4070b0:	mov    QWORD PTR [rbp-0x10],rax
  4070b4:	mov    rax,QWORD PTR [rbp-0x8]
  4070b8:	add    rax,0x130
  4070be:	mov    QWORD PTR [rbp-0x18],rax
  4070c2:	cmp    QWORD PTR [rbp-0x20],0x0
  4070c7:	jne    4070d4 <flatcc_builder_custom_init@@Base+0x72>
  4070c9:	mov    rax,0x4067bb
  4070d0:	mov    QWORD PTR [rbp-0x20],rax
  4070d4:	mov    rax,QWORD PTR [rbp-0x8]
  4070d8:	mov    rdx,QWORD PTR [rbp-0x28]
  4070dc:	mov    QWORD PTR [rax+0x40],rdx
  4070e0:	mov    rax,QWORD PTR [rbp-0x8]
  4070e4:	mov    rdx,QWORD PTR [rbp-0x20]
  4070e8:	mov    QWORD PTR [rax+0x50],rdx
  4070ec:	mov    rax,QWORD PTR [rbp-0x8]
  4070f0:	mov    rdx,QWORD PTR [rbp-0x18]
  4070f4:	mov    QWORD PTR [rax+0x38],rdx
  4070f8:	mov    rax,QWORD PTR [rbp-0x8]
  4070fc:	mov    rdx,QWORD PTR [rbp-0x10]
  407100:	mov    QWORD PTR [rax+0x48],rdx
  407104:	mov    eax,0x0
  407109:	leave  
  40710a:	ret    

000000000040710b <flatcc_builder_init@@Base>:
  40710b:	push   rbp
  40710c:	mov    rbp,rsp
  40710f:	sub    rsp,0x10
  407113:	mov    QWORD PTR [rbp-0x8],rdi
  407117:	mov    rax,QWORD PTR [rbp-0x8]
  40711b:	mov    r8d,0x0
  407121:	mov    ecx,0x0
  407126:	mov    edx,0x0
  40712b:	mov    esi,0x0
  407130:	mov    rdi,rax
  407133:	call   407062 <flatcc_builder_custom_init@@Base>
  407138:	leave  
  407139:	ret    

000000000040713a <flatcc_builder_custom_reset@@Base>:
  40713a:	push   rbp
  40713b:	mov    rbp,rsp
  40713e:	sub    rsp,0x20
  407142:	mov    QWORD PTR [rbp-0x18],rdi
  407146:	mov    DWORD PTR [rbp-0x1c],esi
  407149:	mov    DWORD PTR [rbp-0x20],edx
  40714c:	mov    DWORD PTR [rbp-0xc],0x0
  407153:	jmp    40720a <flatcc_builder_custom_reset@@Base+0xd0>
  407158:	mov    rax,QWORD PTR [rbp-0x18]
  40715c:	lea    rdx,[rax+0x58]
  407160:	mov    eax,DWORD PTR [rbp-0xc]
  407163:	cdqe   
  407165:	shl    rax,0x4
  407169:	add    rax,rdx
  40716c:	mov    QWORD PTR [rbp-0x8],rax
  407170:	mov    rax,QWORD PTR [rbp-0x8]
  407174:	mov    rax,QWORD PTR [rax]
  407177:	test   rax,rax
  40717a:	je     4071da <flatcc_builder_custom_reset@@Base+0xa0>
  40717c:	cmp    DWORD PTR [rbp-0xc],0x5
  407180:	je     4071bc <flatcc_builder_custom_reset@@Base+0x82>
  407182:	cmp    DWORD PTR [rbp-0x20],0x0
  407186:	je     4071bc <flatcc_builder_custom_reset@@Base+0x82>
  407188:	mov    rax,QWORD PTR [rbp-0x18]
  40718c:	mov    rax,QWORD PTR [rax+0x50]
  407190:	mov    rdx,QWORD PTR [rbp-0x18]
  407194:	mov    rdi,QWORD PTR [rdx+0x40]
  407198:	mov    edx,DWORD PTR [rbp-0xc]
  40719b:	mov    rsi,QWORD PTR [rbp-0x8]
  40719f:	mov    r8d,edx
  4071a2:	mov    ecx,0x1
  4071a7:	mov    edx,0x1
  4071ac:	call   rax
  4071ae:	test   eax,eax
  4071b0:	je     4071bc <flatcc_builder_custom_reset@@Base+0x82>
  4071b2:	mov    eax,0xffffffff
  4071b7:	jmp    407349 <flatcc_builder_custom_reset@@Base+0x20f>
  4071bc:	mov    rax,QWORD PTR [rbp-0x8]
  4071c0:	mov    rdx,QWORD PTR [rax+0x8]
  4071c4:	mov    rax,QWORD PTR [rbp-0x8]
  4071c8:	mov    rax,QWORD PTR [rax]
  4071cb:	mov    esi,0x0
  4071d0:	mov    rdi,rax
  4071d3:	call   403080 <memset@plt>
  4071d8:	jmp    407206 <flatcc_builder_custom_reset@@Base+0xcc>
  4071da:	mov    rax,QWORD PTR [rbp-0x8]
  4071de:	mov    rax,QWORD PTR [rax+0x8]
  4071e2:	test   rax,rax
  4071e5:	je     407206 <flatcc_builder_custom_reset@@Base+0xcc>
  4071e7:	lea    rcx,[rip+0xd822]        # 414a10 <flatcc_builder_padding_base@@Base+0x670>
  4071ee:	mov    edx,0x1b2
  4071f3:	lea    rsi,[rip+0xd3a6]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4071fa:	lea    rdi,[rip+0xd410]        # 414611 <flatcc_builder_padding_base@@Base+0x271>
  407201:	call   403070 <__assert_fail@plt>
  407206:	add    DWORD PTR [rbp-0xc],0x1
  40720a:	cmp    DWORD PTR [rbp-0xc],0x7
  40720e:	jle    407158 <flatcc_builder_custom_reset@@Base+0x1e>
  407214:	mov    rax,QWORD PTR [rbp-0x18]
  407218:	mov    DWORD PTR [rax+0xe0],0x0
  407222:	mov    rax,QWORD PTR [rbp-0x18]
  407226:	mov    eax,DWORD PTR [rax+0xe4]
  40722c:	test   eax,eax
  40722e:	je     40723e <flatcc_builder_custom_reset@@Base+0x104>
  407230:	mov    rax,QWORD PTR [rbp-0x18]
  407234:	mov    DWORD PTR [rax+0xe4],0x10
  40723e:	mov    rax,QWORD PTR [rbp-0x18]
  407242:	mov    WORD PTR [rax+0xe8],0x0
  40724b:	mov    rax,QWORD PTR [rbp-0x18]
  40724f:	mov    DWORD PTR [rax+0xf0],0x0
  407259:	mov    rax,QWORD PTR [rbp-0x18]
  40725d:	mov    DWORD PTR [rax+0xf4],0x0
  407267:	mov    rax,QWORD PTR [rbp-0x18]
  40726b:	mov    DWORD PTR [rax+0x104],0x0
  407275:	mov    rax,QWORD PTR [rbp-0x18]
  407279:	mov    DWORD PTR [rax+0x108],0x0
  407283:	mov    rax,QWORD PTR [rbp-0x18]
  407287:	mov    DWORD PTR [rax+0x20],0x0
  40728e:	mov    rax,QWORD PTR [rbp-0x18]
  407292:	mov    DWORD PTR [rax+0x24],0x0
  407299:	mov    rax,QWORD PTR [rbp-0x18]
  40729d:	mov    DWORD PTR [rax+0xfc],0x0
  4072a7:	mov    rax,QWORD PTR [rbp-0x18]
  4072ab:	mov    DWORD PTR [rax+0x100],0x0
  4072b5:	mov    rax,QWORD PTR [rbp-0x18]
  4072b9:	mov    rdx,QWORD PTR [rax+0x68]
  4072bd:	mov    rax,QWORD PTR [rbp-0x18]
  4072c1:	mov    QWORD PTR [rax+0x18],rdx
  4072c5:	mov    rax,QWORD PTR [rbp-0x18]
  4072c9:	mov    rdx,QWORD PTR [rax+0x88]
  4072d0:	mov    rax,QWORD PTR [rbp-0x18]
  4072d4:	mov    QWORD PTR [rax],rdx
  4072d7:	mov    rax,QWORD PTR [rbp-0x18]
  4072db:	mov    rdx,QWORD PTR [rax+0x58]
  4072df:	mov    rax,QWORD PTR [rbp-0x18]
  4072e3:	mov    QWORD PTR [rax+0x8],rdx
  4072e7:	mov    rax,QWORD PTR [rbp-0x18]
  4072eb:	mov    QWORD PTR [rax+0x30],0x0
  4072f3:	cmp    DWORD PTR [rbp-0x1c],0x0
  4072f7:	je     407324 <flatcc_builder_custom_reset@@Base+0x1ea>
  4072f9:	mov    rax,QWORD PTR [rbp-0x18]
  4072fd:	mov    QWORD PTR [rax+0x118],0x0
  407308:	mov    rax,QWORD PTR [rbp-0x18]
  40730c:	mov    DWORD PTR [rax+0x120],0x0
  407316:	mov    rax,QWORD PTR [rbp-0x18]
  40731a:	mov    DWORD PTR [rax+0x124],0x0
  407324:	mov    rax,QWORD PTR [rbp-0x18]
  407328:	mov    eax,DWORD PTR [rax+0x128]
  40732e:	test   eax,eax
  407330:	je     407344 <flatcc_builder_custom_reset@@Base+0x20a>
  407332:	mov    rax,QWORD PTR [rbp-0x18]
  407336:	add    rax,0x130
  40733c:	mov    rdi,rax
  40733f:	call   40c27a <flatcc_emitter_reset@@Base>
  407344:	mov    eax,0x0
  407349:	leave  
  40734a:	ret    

000000000040734b <flatcc_builder_reset@@Base>:
  40734b:	push   rbp
  40734c:	mov    rbp,rsp
  40734f:	sub    rsp,0x10
  407353:	mov    QWORD PTR [rbp-0x8],rdi
  407357:	mov    rax,QWORD PTR [rbp-0x8]
  40735b:	mov    edx,0x0
  407360:	mov    esi,0x0
  407365:	mov    rdi,rax
  407368:	call   40713a <flatcc_builder_custom_reset@@Base>
  40736d:	leave  
  40736e:	ret    

000000000040736f <flatcc_builder_clear@@Base>:
  40736f:	push   rbp
  407370:	mov    rbp,rsp
  407373:	sub    rsp,0x20
  407377:	mov    QWORD PTR [rbp-0x18],rdi
  40737b:	mov    DWORD PTR [rbp-0xc],0x0
  407382:	jmp    4073c6 <flatcc_builder_clear@@Base+0x57>
  407384:	mov    rax,QWORD PTR [rbp-0x18]
  407388:	lea    rdx,[rax+0x58]
  40738c:	mov    eax,DWORD PTR [rbp-0xc]
  40738f:	cdqe   
  407391:	shl    rax,0x4
  407395:	add    rax,rdx
  407398:	mov    QWORD PTR [rbp-0x8],rax
  40739c:	mov    rax,QWORD PTR [rbp-0x18]
  4073a0:	mov    rax,QWORD PTR [rax+0x50]
  4073a4:	mov    rdx,QWORD PTR [rbp-0x18]
  4073a8:	mov    rdi,QWORD PTR [rdx+0x40]
  4073ac:	mov    edx,DWORD PTR [rbp-0xc]
  4073af:	mov    rsi,QWORD PTR [rbp-0x8]
  4073b3:	mov    r8d,edx
  4073b6:	mov    ecx,0x0
  4073bb:	mov    edx,0x0
  4073c0:	call   rax
  4073c2:	add    DWORD PTR [rbp-0xc],0x1
  4073c6:	cmp    DWORD PTR [rbp-0xc],0x7
  4073ca:	jle    407384 <flatcc_builder_clear@@Base+0x15>
  4073cc:	mov    rax,QWORD PTR [rbp-0x18]
  4073d0:	mov    eax,DWORD PTR [rax+0x128]
  4073d6:	test   eax,eax
  4073d8:	je     4073ec <flatcc_builder_clear@@Base+0x7d>
  4073da:	mov    rax,QWORD PTR [rbp-0x18]
  4073de:	add    rax,0x130
  4073e4:	mov    rdi,rax
  4073e7:	call   40c406 <flatcc_emitter_clear@@Base>
  4073ec:	mov    rax,QWORD PTR [rbp-0x18]
  4073f0:	mov    edx,0x188
  4073f5:	mov    esi,0x0
  4073fa:	mov    rdi,rax
  4073fd:	call   403080 <memset@plt>
  407402:	nop
  407403:	leave  
  407404:	ret    
  407405:	push   rbp
  407406:	mov    rbp,rsp
  407409:	mov    QWORD PTR [rbp-0x8],rdi
  40740d:	mov    eax,esi
  40740f:	mov    WORD PTR [rbp-0xc],ax
  407413:	mov    rax,QWORD PTR [rbp-0x8]
  407417:	movzx  eax,WORD PTR [rax+0xe8]
  40741e:	cmp    ax,WORD PTR [rbp-0xc]
  407422:	jae    407433 <flatcc_builder_clear@@Base+0xc4>
  407424:	mov    rax,QWORD PTR [rbp-0x8]
  407428:	movzx  edx,WORD PTR [rbp-0xc]
  40742c:	mov    WORD PTR [rax+0xe8],dx
  407433:	nop
  407434:	pop    rbp
  407435:	ret    
  407436:	push   rbp
  407437:	mov    rbp,rsp
  40743a:	mov    QWORD PTR [rbp-0x8],rdi
  40743e:	mov    eax,esi
  407440:	mov    WORD PTR [rbp-0xc],ax
  407444:	mov    rax,QWORD PTR [rbp-0x8]
  407448:	movzx  eax,WORD PTR [rax]
  40744b:	cmp    ax,WORD PTR [rbp-0xc]
  40744f:	jae    40745c <flatcc_builder_clear@@Base+0xed>
  407451:	mov    rax,QWORD PTR [rbp-0x8]
  407455:	movzx  edx,WORD PTR [rbp-0xc]
  407459:	mov    WORD PTR [rax],dx
  40745c:	nop
  40745d:	pop    rbp
  40745e:	ret    

000000000040745f <flatcc_builder_enter_user_frame_ptr@@Base>:
  40745f:	push   rbp
  407460:	mov    rbp,rsp
  407463:	sub    rsp,0x20
  407467:	mov    QWORD PTR [rbp-0x18],rdi
  40746b:	mov    QWORD PTR [rbp-0x20],rsi
  40746f:	mov    rax,QWORD PTR [rbp-0x20]
  407473:	add    rax,0x7
  407477:	and    rax,0xfffffffffffffff8
  40747b:	add    rax,0x8
  40747f:	mov    QWORD PTR [rbp-0x20],rax
  407483:	mov    rax,QWORD PTR [rbp-0x18]
  407487:	mov    rdx,QWORD PTR [rax+0x180]
  40748e:	mov    rcx,QWORD PTR [rbp-0x20]
  407492:	mov    rax,QWORD PTR [rbp-0x18]
  407496:	mov    r8d,0x0
  40749c:	mov    esi,0x7
  4074a1:	mov    rdi,rax
  4074a4:	call   406cc7 <flatcc_builder_default_alloc@@Base+0x50c>
  4074a9:	mov    QWORD PTR [rbp-0x8],rax
  4074ad:	cmp    QWORD PTR [rbp-0x8],0x0
  4074b2:	jne    4074bb <flatcc_builder_enter_user_frame_ptr@@Base+0x5c>
  4074b4:	mov    eax,0x0
  4074b9:	jmp    407525 <flatcc_builder_enter_user_frame_ptr@@Base+0xc6>
  4074bb:	mov    rdx,QWORD PTR [rbp-0x20]
  4074bf:	mov    rax,QWORD PTR [rbp-0x8]
  4074c3:	mov    esi,0x0
  4074c8:	mov    rdi,rax
  4074cb:	call   403080 <memset@plt>
  4074d0:	mov    rax,QWORD PTR [rbp-0x8]
  4074d4:	lea    rdx,[rax+0x8]
  4074d8:	mov    QWORD PTR [rbp-0x8],rdx
  4074dc:	mov    rdx,QWORD PTR [rbp-0x18]
  4074e0:	mov    rdx,QWORD PTR [rdx+0x178]
  4074e7:	mov    QWORD PTR [rax],rdx
  4074ea:	mov    rax,QWORD PTR [rbp-0x18]
  4074ee:	mov    rax,QWORD PTR [rax+0x180]
  4074f5:	lea    rdx,[rax+0x8]
  4074f9:	mov    rax,QWORD PTR [rbp-0x18]
  4074fd:	mov    QWORD PTR [rax+0x178],rdx
  407504:	mov    rax,QWORD PTR [rbp-0x18]
  407508:	mov    rdx,QWORD PTR [rax+0x180]
  40750f:	mov    rax,QWORD PTR [rbp-0x20]
  407513:	add    rdx,rax
  407516:	mov    rax,QWORD PTR [rbp-0x18]
  40751a:	mov    QWORD PTR [rax+0x180],rdx
  407521:	mov    rax,QWORD PTR [rbp-0x8]
  407525:	leave  
  407526:	ret    

0000000000407527 <flatcc_builder_enter_user_frame@@Base>:
  407527:	push   rbp
  407528:	mov    rbp,rsp
  40752b:	sub    rsp,0x20
  40752f:	mov    QWORD PTR [rbp-0x18],rdi
  407533:	mov    QWORD PTR [rbp-0x20],rsi
  407537:	mov    rax,QWORD PTR [rbp-0x20]
  40753b:	add    rax,0x7
  40753f:	and    rax,0xfffffffffffffff8
  407543:	add    rax,0x8
  407547:	mov    QWORD PTR [rbp-0x20],rax
  40754b:	mov    rax,QWORD PTR [rbp-0x18]
  40754f:	mov    rdx,QWORD PTR [rax+0x180]
  407556:	mov    rcx,QWORD PTR [rbp-0x20]
  40755a:	mov    rax,QWORD PTR [rbp-0x18]
  40755e:	mov    r8d,0x0
  407564:	mov    esi,0x7
  407569:	mov    rdi,rax
  40756c:	call   406cc7 <flatcc_builder_default_alloc@@Base+0x50c>
  407571:	mov    QWORD PTR [rbp-0x8],rax
  407575:	cmp    QWORD PTR [rbp-0x8],0x0
  40757a:	jne    407583 <flatcc_builder_enter_user_frame@@Base+0x5c>
  40757c:	mov    eax,0x0
  407581:	jmp    4075f4 <flatcc_builder_enter_user_frame@@Base+0xcd>
  407583:	mov    rdx,QWORD PTR [rbp-0x20]
  407587:	mov    rax,QWORD PTR [rbp-0x8]
  40758b:	mov    esi,0x0
  407590:	mov    rdi,rax
  407593:	call   403080 <memset@plt>
  407598:	mov    rax,QWORD PTR [rbp-0x8]
  40759c:	lea    rdx,[rax+0x8]
  4075a0:	mov    QWORD PTR [rbp-0x8],rdx
  4075a4:	mov    rdx,QWORD PTR [rbp-0x18]
  4075a8:	mov    rdx,QWORD PTR [rdx+0x178]
  4075af:	mov    QWORD PTR [rax],rdx
  4075b2:	mov    rax,QWORD PTR [rbp-0x18]
  4075b6:	mov    rax,QWORD PTR [rax+0x180]
  4075bd:	lea    rdx,[rax+0x8]
  4075c1:	mov    rax,QWORD PTR [rbp-0x18]
  4075c5:	mov    QWORD PTR [rax+0x178],rdx
  4075cc:	mov    rax,QWORD PTR [rbp-0x18]
  4075d0:	mov    rdx,QWORD PTR [rax+0x180]
  4075d7:	mov    rax,QWORD PTR [rbp-0x20]
  4075db:	add    rdx,rax
  4075de:	mov    rax,QWORD PTR [rbp-0x18]
  4075e2:	mov    QWORD PTR [rax+0x180],rdx
  4075e9:	mov    rax,QWORD PTR [rbp-0x18]
  4075ed:	mov    rax,QWORD PTR [rax+0x178]
  4075f4:	leave  
  4075f5:	ret    

00000000004075f6 <flatcc_builder_exit_user_frame@@Base>:
  4075f6:	push   rbp
  4075f7:	mov    rbp,rsp
  4075fa:	sub    rsp,0x20
  4075fe:	mov    QWORD PTR [rbp-0x18],rdi
  407602:	mov    rax,QWORD PTR [rbp-0x18]
  407606:	mov    rax,QWORD PTR [rax+0x178]
  40760d:	test   rax,rax
  407610:	jne    407631 <flatcc_builder_exit_user_frame@@Base+0x3b>
  407612:	lea    rcx,[rip+0xd417]        # 414a30 <flatcc_builder_padding_base@@Base+0x690>
  407619:	mov    edx,0x21e
  40761e:	lea    rsi,[rip+0xcf7b]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407625:	lea    rdi,[rip+0xcff7]        # 414623 <flatcc_builder_padding_base@@Base+0x283>
  40762c:	call   403070 <__assert_fail@plt>
  407631:	mov    rax,QWORD PTR [rbp-0x18]
  407635:	mov    rdx,QWORD PTR [rax+0xc8]
  40763c:	mov    rax,QWORD PTR [rbp-0x18]
  407640:	mov    rax,QWORD PTR [rax+0x178]
  407647:	mov    eax,eax
  407649:	add    rax,rdx
  40764c:	mov    QWORD PTR [rbp-0x8],rax
  407650:	mov    rax,QWORD PTR [rbp-0x18]
  407654:	mov    rax,QWORD PTR [rax+0x178]
  40765b:	lea    rdx,[rax-0x8]
  40765f:	mov    rax,QWORD PTR [rbp-0x18]
  407663:	mov    QWORD PTR [rax+0x180],rdx
  40766a:	mov    rax,QWORD PTR [rbp-0x8]
  40766e:	mov    rdx,QWORD PTR [rax-0x8]
  407672:	mov    rax,QWORD PTR [rbp-0x18]
  407676:	mov    QWORD PTR [rax+0x178],rdx
  40767d:	mov    rax,QWORD PTR [rbp-0x18]
  407681:	mov    rax,QWORD PTR [rax+0x178]
  407688:	leave  
  407689:	ret    

000000000040768a <flatcc_builder_exit_user_frame_at@@Base>:
  40768a:	push   rbp
  40768b:	mov    rbp,rsp
  40768e:	sub    rsp,0x10
  407692:	mov    QWORD PTR [rbp-0x8],rdi
  407696:	mov    QWORD PTR [rbp-0x10],rsi
  40769a:	mov    rax,QWORD PTR [rbp-0x8]
  40769e:	mov    rax,QWORD PTR [rax+0x178]
  4076a5:	cmp    rax,QWORD PTR [rbp-0x10]
  4076a9:	jae    4076ca <flatcc_builder_exit_user_frame_at@@Base+0x40>
  4076ab:	lea    rcx,[rip+0xd3ae]        # 414a60 <flatcc_builder_padding_base@@Base+0x6c0>
  4076b2:	mov    edx,0x227
  4076b7:	lea    rsi,[rip+0xcee2]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4076be:	lea    rdi,[rip+0xcf7b]        # 414640 <flatcc_builder_padding_base@@Base+0x2a0>
  4076c5:	call   403070 <__assert_fail@plt>
  4076ca:	mov    rax,QWORD PTR [rbp-0x8]
  4076ce:	mov    rdx,QWORD PTR [rbp-0x10]
  4076d2:	mov    QWORD PTR [rax+0x178],rdx
  4076d9:	mov    rax,QWORD PTR [rbp-0x8]
  4076dd:	mov    rdi,rax
  4076e0:	call   4075f6 <flatcc_builder_exit_user_frame@@Base>
  4076e5:	leave  
  4076e6:	ret    

00000000004076e7 <flatcc_builder_get_current_user_frame@@Base>:
  4076e7:	push   rbp
  4076e8:	mov    rbp,rsp
  4076eb:	mov    QWORD PTR [rbp-0x8],rdi
  4076ef:	mov    rax,QWORD PTR [rbp-0x8]
  4076f3:	mov    rax,QWORD PTR [rax+0x178]
  4076fa:	pop    rbp
  4076fb:	ret    

00000000004076fc <flatcc_builder_get_user_frame_ptr@@Base>:
  4076fc:	push   rbp
  4076fd:	mov    rbp,rsp
  407700:	mov    QWORD PTR [rbp-0x8],rdi
  407704:	mov    QWORD PTR [rbp-0x10],rsi
  407708:	mov    rax,QWORD PTR [rbp-0x8]
  40770c:	mov    rax,QWORD PTR [rax+0xc8]
  407713:	mov    rdx,QWORD PTR [rbp-0x10]
  407717:	mov    edx,edx
  407719:	add    rax,rdx
  40771c:	pop    rbp
  40771d:	ret    
  40771e:	push   rbp
  40771f:	mov    rbp,rsp
  407722:	sub    rsp,0x10
  407726:	mov    QWORD PTR [rbp-0x8],rdi
  40772a:	mov    eax,esi
  40772c:	mov    WORD PTR [rbp-0xc],ax
  407730:	mov    rax,QWORD PTR [rbp-0x8]
  407734:	mov    eax,DWORD PTR [rax+0x104]
  40773a:	lea    edx,[rax+0x1]
  40773d:	mov    rax,QWORD PTR [rbp-0x8]
  407741:	mov    DWORD PTR [rax+0x104],edx
  407747:	mov    rax,QWORD PTR [rbp-0x8]
  40774b:	mov    edx,DWORD PTR [rax+0x104]
  407751:	mov    rax,QWORD PTR [rbp-0x8]
  407755:	mov    eax,DWORD PTR [rax+0x108]
  40775b:	cmp    edx,eax
  40775d:	jle    407859 <flatcc_builder_get_user_frame_ptr@@Base+0x15d>
  407763:	mov    rax,QWORD PTR [rbp-0x8]
  407767:	mov    eax,DWORD PTR [rax+0x120]
  40776d:	test   eax,eax
  40776f:	jle    407793 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  407771:	mov    rax,QWORD PTR [rbp-0x8]
  407775:	mov    edx,DWORD PTR [rax+0x104]
  40777b:	mov    rax,QWORD PTR [rbp-0x8]
  40777f:	mov    eax,DWORD PTR [rax+0x120]
  407785:	cmp    edx,eax
  407787:	jle    407793 <flatcc_builder_get_user_frame_ptr@@Base+0x97>
  407789:	mov    eax,0xffffffff
  40778e:	jmp    4078f4 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  407793:	mov    rax,QWORD PTR [rbp-0x8]
  407797:	mov    eax,DWORD PTR [rax+0x104]
  40779d:	sub    eax,0x1
  4077a0:	movsxd rdx,eax
  4077a3:	mov    rax,rdx
  4077a6:	shl    rax,0x3
  4077aa:	add    rax,rdx
  4077ad:	shl    rax,0x2
  4077b1:	mov    rdx,rax
  4077b4:	mov    rax,QWORD PTR [rbp-0x8]
  4077b8:	mov    r8d,0x0
  4077be:	mov    ecx,0x24
  4077c3:	mov    esi,0x4
  4077c8:	mov    rdi,rax
  4077cb:	call   406cc7 <flatcc_builder_default_alloc@@Base+0x50c>
  4077d0:	mov    rdx,rax
  4077d3:	mov    rax,QWORD PTR [rbp-0x8]
  4077d7:	mov    QWORD PTR [rax+0x30],rdx
  4077db:	mov    rax,QWORD PTR [rbp-0x8]
  4077df:	mov    rax,QWORD PTR [rax+0x30]
  4077e3:	test   rax,rax
  4077e6:	jne    4077f2 <flatcc_builder_get_user_frame_ptr@@Base+0xf6>
  4077e8:	mov    eax,0xffffffff
  4077ed:	jmp    4078f4 <flatcc_builder_get_user_frame_ptr@@Base+0x1f8>
  4077f2:	mov    rax,QWORD PTR [rbp-0x8]
  4077f6:	mov    rax,QWORD PTR [rax+0xa0]
  4077fd:	movabs rdx,0xe38e38e38e38e38f
  407807:	mul    rdx
  40780a:	mov    rax,rdx
  40780d:	shr    rax,0x5
  407811:	mov    edx,eax
  407813:	mov    rax,QWORD PTR [rbp-0x8]
  407817:	mov    DWORD PTR [rax+0x108],edx
  40781d:	mov    rax,QWORD PTR [rbp-0x8]
  407821:	mov    eax,DWORD PTR [rax+0x120]
  407827:	test   eax,eax
  407829:	jle    40786d <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  40782b:	mov    rax,QWORD PTR [rbp-0x8]
  40782f:	mov    edx,DWORD PTR [rax+0x120]
  407835:	mov    rax,QWORD PTR [rbp-0x8]
  407839:	mov    eax,DWORD PTR [rax+0x108]
  40783f:	cmp    edx,eax
  407841:	jge    40786d <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  407843:	mov    rax,QWORD PTR [rbp-0x8]
  407847:	mov    edx,DWORD PTR [rax+0x120]
  40784d:	mov    rax,QWORD PTR [rbp-0x8]
  407851:	mov    DWORD PTR [rax+0x108],edx
  407857:	jmp    40786d <flatcc_builder_get_user_frame_ptr@@Base+0x171>
  407859:	mov    rax,QWORD PTR [rbp-0x8]
  40785d:	mov    rax,QWORD PTR [rax+0x30]
  407861:	lea    rdx,[rax+0x24]
  407865:	mov    rax,QWORD PTR [rbp-0x8]
  407869:	mov    QWORD PTR [rax+0x30],rdx
  40786d:	mov    rax,QWORD PTR [rbp-0x8]
  407871:	mov    rax,QWORD PTR [rax+0x30]
  407875:	mov    rdx,QWORD PTR [rbp-0x8]
  407879:	mov    edx,DWORD PTR [rdx+0x20]
  40787c:	mov    DWORD PTR [rax+0x8],edx
  40787f:	mov    rax,QWORD PTR [rbp-0x8]
  407883:	mov    rax,QWORD PTR [rax+0x30]
  407887:	mov    rdx,QWORD PTR [rbp-0x8]
  40788b:	movzx  edx,WORD PTR [rdx+0xea]
  407892:	mov    WORD PTR [rax+0xc],dx
  407896:	mov    rax,QWORD PTR [rbp-0x8]
  40789a:	movzx  edx,WORD PTR [rbp-0xc]
  40789e:	mov    WORD PTR [rax+0xea],dx
  4078a5:	mov    rax,QWORD PTR [rbp-0x8]
  4078a9:	mov    rax,QWORD PTR [rax+0x30]
  4078ad:	mov    rdx,QWORD PTR [rbp-0x8]
  4078b1:	mov    edx,DWORD PTR [rdx+0x28]
  4078b4:	mov    DWORD PTR [rax],edx
  4078b6:	mov    rax,QWORD PTR [rbp-0x8]
  4078ba:	mov    rax,QWORD PTR [rax+0x30]
  4078be:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4078c5:	mov    rax,QWORD PTR [rbp-0x8]
  4078c9:	mov    edx,DWORD PTR [rax+0x28]
  4078cc:	mov    rax,QWORD PTR [rbp-0x8]
  4078d0:	mov    eax,DWORD PTR [rax+0x20]
  4078d3:	add    eax,edx
  4078d5:	add    eax,0x7
  4078d8:	and    eax,0xfffffff8
  4078db:	mov    edx,eax
  4078dd:	mov    rax,QWORD PTR [rbp-0x8]
  4078e1:	mov    DWORD PTR [rax+0x28],edx
  4078e4:	mov    rax,QWORD PTR [rbp-0x8]
  4078e8:	mov    DWORD PTR [rax+0x20],0x0
  4078ef:	mov    eax,0x0
  4078f4:	leave  
  4078f5:	ret    
  4078f6:	push   rbp
  4078f7:	mov    rbp,rsp
  4078fa:	sub    rsp,0x10
  4078fe:	mov    QWORD PTR [rbp-0x8],rdi
  407902:	mov    rax,QWORD PTR [rbp-0x8]
  407906:	mov    eax,DWORD PTR [rax+0x20]
  407909:	mov    edx,eax
  40790b:	mov    rax,QWORD PTR [rbp-0x8]
  40790f:	mov    rax,QWORD PTR [rax+0x18]
  407913:	mov    esi,0x0
  407918:	mov    rdi,rax
  40791b:	call   403080 <memset@plt>
  407920:	mov    rax,QWORD PTR [rbp-0x8]
  407924:	mov    rax,QWORD PTR [rax+0x30]
  407928:	mov    edx,DWORD PTR [rax+0x8]
  40792b:	mov    rax,QWORD PTR [rbp-0x8]
  40792f:	mov    DWORD PTR [rax+0x20],edx
  407932:	mov    rax,QWORD PTR [rbp-0x8]
  407936:	mov    rax,QWORD PTR [rax+0x30]
  40793a:	mov    edx,DWORD PTR [rax]
  40793c:	mov    rax,QWORD PTR [rbp-0x8]
  407940:	mov    DWORD PTR [rax+0x28],edx
  407943:	mov    rax,QWORD PTR [rbp-0x8]
  407947:	mov    rax,QWORD PTR [rax+0x30]
  40794b:	mov    edx,DWORD PTR [rax+0x4]
  40794e:	mov    rax,QWORD PTR [rbp-0x8]
  407952:	mov    esi,edx
  407954:	mov    rdi,rax
  407957:	call   406928 <flatcc_builder_default_alloc@@Base+0x16d>
  40795c:	mov    rax,QWORD PTR [rbp-0x8]
  407960:	movzx  eax,WORD PTR [rax+0xea]
  407967:	movzx  edx,ax
  40796a:	mov    rax,QWORD PTR [rbp-0x8]
  40796e:	mov    esi,edx
  407970:	mov    rdi,rax
  407973:	call   407405 <flatcc_builder_clear@@Base+0x96>
  407978:	mov    rax,QWORD PTR [rbp-0x8]
  40797c:	mov    rax,QWORD PTR [rax+0x30]
  407980:	movzx  edx,WORD PTR [rax+0xc]
  407984:	mov    rax,QWORD PTR [rbp-0x8]
  407988:	mov    WORD PTR [rax+0xea],dx
  40798f:	mov    rax,QWORD PTR [rbp-0x8]
  407993:	mov    rax,QWORD PTR [rax+0x30]
  407997:	lea    rdx,[rax-0x24]
  40799b:	mov    rax,QWORD PTR [rbp-0x8]
  40799f:	mov    QWORD PTR [rax+0x30],rdx
  4079a3:	mov    rax,QWORD PTR [rbp-0x8]
  4079a7:	mov    eax,DWORD PTR [rax+0x104]
  4079ad:	lea    edx,[rax-0x1]
  4079b0:	mov    rax,QWORD PTR [rbp-0x8]
  4079b4:	mov    DWORD PTR [rax+0x104],edx
  4079ba:	nop
  4079bb:	leave  
  4079bc:	ret    
  4079bd:	push   rbp
  4079be:	mov    rbp,rsp
  4079c1:	mov    QWORD PTR [rbp-0x8],rdi
  4079c5:	mov    DWORD PTR [rbp-0xc],esi
  4079c8:	mov    eax,edx
  4079ca:	mov    WORD PTR [rbp-0x10],ax
  4079ce:	mov    rax,QWORD PTR [rbp-0x8]
  4079d2:	mov    eax,DWORD PTR [rax+0xf0]
  4079d8:	sub    eax,DWORD PTR [rbp-0xc]
  4079db:	movzx  edx,WORD PTR [rbp-0x10]
  4079df:	sub    edx,0x1
  4079e2:	and    eax,edx
  4079e4:	pop    rbp
  4079e5:	ret    
  4079e6:	push   rbp
  4079e7:	mov    rbp,rsp
  4079ea:	mov    QWORD PTR [rbp-0x8],rdi
  4079ee:	mov    eax,esi
  4079f0:	mov    WORD PTR [rbp-0xc],ax
  4079f4:	mov    rax,QWORD PTR [rbp-0x8]
  4079f8:	mov    eax,DWORD PTR [rax+0xf4]
  4079fe:	movzx  edx,WORD PTR [rbp-0xc]
  407a02:	sub    edx,0x1
  407a05:	and    eax,edx
  407a07:	pop    rbp
  407a08:	ret    
  407a09:	push   rbp
  407a0a:	mov    rbp,rsp
  407a0d:	sub    rsp,0x20
  407a11:	mov    QWORD PTR [rbp-0x18],rdi
  407a15:	mov    QWORD PTR [rbp-0x20],rsi
  407a19:	mov    rax,QWORD PTR [rbp-0x18]
  407a1d:	mov    edx,DWORD PTR [rax+0xf0]
  407a23:	mov    rax,QWORD PTR [rbp-0x20]
  407a27:	mov    rax,QWORD PTR [rax]
  407a2a:	sub    edx,eax
  407a2c:	mov    eax,edx
  407a2e:	mov    DWORD PTR [rbp-0x4],eax
  407a31:	mov    rax,QWORD PTR [rbp-0x20]
  407a35:	mov    rax,QWORD PTR [rax]
  407a38:	cmp    rax,0x10
  407a3c:	jbe    407a53 <flatcc_builder_get_user_frame_ptr@@Base+0x357>
  407a3e:	mov    rax,QWORD PTR [rbp-0x20]
  407a42:	mov    rax,QWORD PTR [rax]
  407a45:	lea    rdx,[rax-0x10]
  407a49:	mov    eax,0xffffffff
  407a4e:	cmp    rdx,rax
  407a51:	ja     407a62 <flatcc_builder_get_user_frame_ptr@@Base+0x366>
  407a53:	mov    rax,QWORD PTR [rbp-0x18]
  407a57:	mov    eax,DWORD PTR [rax+0xf0]
  407a5d:	cmp    eax,DWORD PTR [rbp-0x4]
  407a60:	jg     407a81 <flatcc_builder_get_user_frame_ptr@@Base+0x385>
  407a62:	lea    rcx,[rip+0xd03f]        # 414aa8 <flatcc_builder_padding_base@@Base+0x708>
  407a69:	mov    edx,0x287
  407a6e:	lea    rsi,[rip+0xcb2b]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407a75:	lea    rdi,[rip+0xcb84]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407a7c:	call   403070 <__assert_fail@plt>
  407a81:	mov    rax,QWORD PTR [rbp-0x18]
  407a85:	mov    rax,QWORD PTR [rax+0x48]
  407a89:	mov    rdx,QWORD PTR [rbp-0x20]
  407a8d:	mov    r8,QWORD PTR [rdx]
  407a90:	mov    rdx,QWORD PTR [rbp-0x20]
  407a94:	mov    edx,DWORD PTR [rdx+0x8]
  407a97:	mov    rcx,QWORD PTR [rbp-0x20]
  407a9b:	lea    rsi,[rcx+0x10]
  407a9f:	mov    rcx,QWORD PTR [rbp-0x18]
  407aa3:	mov    rdi,QWORD PTR [rcx+0x38]
  407aa7:	mov    ecx,DWORD PTR [rbp-0x4]
  407aaa:	call   rax
  407aac:	test   eax,eax
  407aae:	je     407acf <flatcc_builder_get_user_frame_ptr@@Base+0x3d3>
  407ab0:	lea    rcx,[rip+0xcff1]        # 414aa8 <flatcc_builder_padding_base@@Base+0x708>
  407ab7:	mov    edx,0x28b
  407abc:	lea    rsi,[rip+0xcadd]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407ac3:	lea    rdi,[rip+0xcb36]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407aca:	call   403070 <__assert_fail@plt>
  407acf:	mov    rax,QWORD PTR [rbp-0x18]
  407ad3:	mov    edx,DWORD PTR [rbp-0x4]
  407ad6:	mov    DWORD PTR [rax+0xf0],edx
  407adc:	mov    rax,QWORD PTR [rbp-0x18]
  407ae0:	mov    eax,DWORD PTR [rax+0xf0]
  407ae6:	leave  
  407ae7:	ret    
  407ae8:	push   rbp
  407ae9:	mov    rbp,rsp
  407aec:	sub    rsp,0x20
  407af0:	mov    QWORD PTR [rbp-0x18],rdi
  407af4:	mov    QWORD PTR [rbp-0x20],rsi
  407af8:	mov    rax,QWORD PTR [rbp-0x18]
  407afc:	mov    eax,DWORD PTR [rax+0xf4]
  407b02:	mov    DWORD PTR [rbp-0x4],eax
  407b05:	mov    rax,QWORD PTR [rbp-0x20]
  407b09:	mov    rax,QWORD PTR [rax]
  407b0c:	mov    edx,eax
  407b0e:	mov    eax,DWORD PTR [rbp-0x4]
  407b11:	add    edx,eax
  407b13:	mov    rax,QWORD PTR [rbp-0x18]
  407b17:	mov    DWORD PTR [rax+0xf4],edx
  407b1d:	mov    rax,QWORD PTR [rbp-0x18]
  407b21:	mov    eax,DWORD PTR [rax+0xf4]
  407b27:	cmp    eax,DWORD PTR [rbp-0x4]
  407b2a:	jge    407b4b <flatcc_builder_get_user_frame_ptr@@Base+0x44f>
  407b2c:	lea    rcx,[rip+0xcf65]        # 414a98 <flatcc_builder_padding_base@@Base+0x6f8>
  407b33:	mov    edx,0x2a1
  407b38:	lea    rsi,[rip+0xca61]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407b3f:	lea    rdi,[rip+0xcaba]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407b46:	call   403070 <__assert_fail@plt>
  407b4b:	mov    rax,QWORD PTR [rbp-0x18]
  407b4f:	mov    rax,QWORD PTR [rax+0x48]
  407b53:	mov    rdx,QWORD PTR [rbp-0x20]
  407b57:	mov    r8,QWORD PTR [rdx]
  407b5a:	mov    rdx,QWORD PTR [rbp-0x20]
  407b5e:	mov    edx,DWORD PTR [rdx+0x8]
  407b61:	mov    rcx,QWORD PTR [rbp-0x20]
  407b65:	lea    rsi,[rcx+0x10]
  407b69:	mov    rcx,QWORD PTR [rbp-0x18]
  407b6d:	mov    rdi,QWORD PTR [rcx+0x38]
  407b71:	mov    ecx,DWORD PTR [rbp-0x4]
  407b74:	call   rax
  407b76:	test   eax,eax
  407b78:	je     407b99 <flatcc_builder_get_user_frame_ptr@@Base+0x49d>
  407b7a:	lea    rcx,[rip+0xcf17]        # 414a98 <flatcc_builder_padding_base@@Base+0x6f8>
  407b81:	mov    edx,0x2a5
  407b86:	lea    rsi,[rip+0xca13]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407b8d:	lea    rdi,[rip+0xca6c]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407b94:	call   403070 <__assert_fail@plt>
  407b99:	mov    eax,DWORD PTR [rbp-0x4]
  407b9c:	add    eax,0x1
  407b9f:	leave  
  407ba0:	ret    
  407ba1:	push   rbp
  407ba2:	mov    rbp,rsp
  407ba5:	sub    rsp,0xd0
  407bac:	mov    QWORD PTR [rbp-0xb8],rdi
  407bb3:	mov    QWORD PTR [rbp-0xc0],rsi
  407bba:	mov    eax,edx
  407bbc:	mov    DWORD PTR [rbp-0xc8],ecx
  407bc2:	mov    WORD PTR [rbp-0xc4],ax
  407bc9:	mov    rax,QWORD PTR fs:0x28
  407bd2:	mov    QWORD PTR [rbp-0x8],rax
  407bd6:	xor    eax,eax
  407bd8:	cmp    WORD PTR [rbp-0xc4],0x0
  407be0:	jne    407c0c <flatcc_builder_get_user_frame_ptr@@Base+0x510>
  407be2:	mov    rax,QWORD PTR [rbp-0xb8]
  407be9:	movzx  eax,WORD PTR [rax+0xec]
  407bf0:	test   ax,ax
  407bf3:	je     407c05 <flatcc_builder_get_user_frame_ptr@@Base+0x509>
  407bf5:	mov    rax,QWORD PTR [rbp-0xb8]
  407bfc:	movzx  eax,WORD PTR [rax+0xec]
  407c03:	jmp    407c13 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  407c05:	mov    eax,0x1
  407c0a:	jmp    407c13 <flatcc_builder_get_user_frame_ptr@@Base+0x517>
  407c0c:	movzx  eax,WORD PTR [rbp-0xc4]
  407c13:	mov    WORD PTR [rbp-0xc4],ax
  407c1a:	mov    rax,QWORD PTR [rbp-0xc0]
  407c21:	mov    esi,0x4
  407c26:	mov    rdi,rax
  407c29:	call   407436 <flatcc_builder_clear@@Base+0xc7>
  407c2e:	movzx  edx,WORD PTR [rbp-0xc4]
  407c35:	mov    rax,QWORD PTR [rbp-0xc0]
  407c3c:	mov    esi,edx
  407c3e:	mov    rdi,rax
  407c41:	call   407436 <flatcc_builder_clear@@Base+0xc7>
  407c46:	cmp    DWORD PTR [rbp-0xc8],0x0
  407c4d:	jne    407d43 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  407c53:	movzx  edx,WORD PTR [rbp-0xc4]
  407c5a:	mov    rax,QWORD PTR [rbp-0xb8]
  407c61:	mov    esi,edx
  407c63:	mov    rdi,rax
  407c66:	call   4079e6 <flatcc_builder_get_user_frame_ptr@@Base+0x2ea>
  407c6b:	mov    eax,eax
  407c6d:	mov    QWORD PTR [rbp-0xa8],rax
  407c74:	cmp    QWORD PTR [rbp-0xa8],0x0
  407c7c:	je     407d43 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  407c82:	mov    QWORD PTR [rbp-0xa0],0x0
  407c8d:	mov    DWORD PTR [rbp-0x98],0x0
  407c97:	cmp    QWORD PTR [rbp-0xa8],0x0
  407c9f:	je     407d07 <flatcc_builder_get_user_frame_ptr@@Base+0x60b>
  407ca1:	mov    rdx,QWORD PTR [rbp-0xa0]
  407ca8:	mov    rax,QWORD PTR [rbp-0xa8]
  407caf:	add    rax,rdx
  407cb2:	mov    QWORD PTR [rbp-0xa0],rax
  407cb9:	mov    eax,DWORD PTR [rbp-0x98]
  407cbf:	cdqe   
  407cc1:	shl    rax,0x4
  407cc5:	add    rax,rbp
  407cc8:	sub    rax,0x90
  407cce:	mov    rdx,0x4143a0
  407cd5:	mov    QWORD PTR [rax],rdx
  407cd8:	mov    eax,DWORD PTR [rbp-0x98]
  407cde:	cdqe   
  407ce0:	shl    rax,0x4
  407ce4:	add    rax,rbp
  407ce7:	lea    rdx,[rax-0x88]
  407cee:	mov    rax,QWORD PTR [rbp-0xa8]
  407cf5:	mov    QWORD PTR [rdx],rax
  407cf8:	mov    eax,DWORD PTR [rbp-0x98]
  407cfe:	add    eax,0x1
  407d01:	mov    DWORD PTR [rbp-0x98],eax
  407d07:	lea    rdx,[rbp-0xa0]
  407d0e:	mov    rax,QWORD PTR [rbp-0xb8]
  407d15:	mov    rsi,rdx
  407d18:	mov    rdi,rax
  407d1b:	call   407ae8 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  407d20:	test   eax,eax
  407d22:	jne    407d43 <flatcc_builder_get_user_frame_ptr@@Base+0x647>
  407d24:	lea    rcx,[rip+0xcd5d]        # 414a88 <flatcc_builder_padding_base@@Base+0x6e8>
  407d2b:	mov    edx,0x2be
  407d30:	lea    rsi,[rip+0xc869]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  407d37:	lea    rdi,[rip+0xc8c2]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  407d3e:	call   403070 <__assert_fail@plt>
  407d43:	mov    eax,0x0
  407d48:	mov    rcx,QWORD PTR [rbp-0x8]
  407d4c:	xor    rcx,QWORD PTR fs:0x28
  407d55:	je     407d5c <flatcc_builder_get_user_frame_ptr@@Base+0x660>
  407d57:	call   403060 <__stack_chk_fail@plt>
  407d5c:	leave  
  407d5d:	ret    

0000000000407d5e <flatcc_builder_embed_buffer@@Base>:
  407d5e:	push   rbp
  407d5f:	mov    rbp,rsp
  407d62:	sub    rsp,0xe0
  407d69:	mov    QWORD PTR [rbp-0xb8],rdi
  407d70:	mov    eax,esi
  407d72:	mov    QWORD PTR [rbp-0xc8],rdx
  407d79:	mov    QWORD PTR [rbp-0xd0],rcx
  407d80:	mov    edx,r8d
  407d83:	mov    DWORD PTR [rbp-0xd4],r9d
  407d8a:	mov    WORD PTR [rbp-0xbc],ax
  407d91:	mov    WORD PTR [rbp-0xc0],dx
  407d98:	mov    rax,QWORD PTR fs:0x28
  407da1:	mov    QWORD PTR [rbp-0x8],rax
  407da5:	xor    eax,eax
  407da7:	mov    eax,DWORD PTR [rbp-0xd4]
  407dad:	and    eax,0x2
  407db0:	mov    DWORD PTR [rbp-0xa8],eax
  407db6:	mov    rax,QWORD PTR [rbp-0xb8]
  407dbd:	mov    eax,DWORD PTR [rax+0x100]
  407dc3:	test   eax,eax
  407dc5:	setne  al
  407dc8:	movzx  ecx,al
  407dcb:	movzx  edx,WORD PTR [rbp-0xbc]
  407dd2:	lea    rsi,[rbp-0xc0]
  407dd9:	mov    rax,QWORD PTR [rbp-0xb8]
  407de0:	mov    rdi,rax
  407de3:	call   407ba1 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  407de8:	test   eax,eax
  407dea:	je     407df6 <flatcc_builder_embed_buffer@@Base+0x98>
  407dec:	mov    eax,0x0
  407df1:	jmp    407fd0 <flatcc_builder_embed_buffer@@Base+0x272>
  407df6:	movzx  eax,WORD PTR [rbp-0xc0]
  407dfd:	movzx  edx,ax
  407e00:	mov    rax,QWORD PTR [rbp-0xd0]
  407e07:	mov    ecx,eax
  407e09:	cmp    DWORD PTR [rbp-0xa8],0x0
  407e10:	je     407e19 <flatcc_builder_embed_buffer@@Base+0xbb>
  407e12:	mov    eax,0x4
  407e17:	jmp    407e1e <flatcc_builder_embed_buffer@@Base+0xc0>
  407e19:	mov    eax,0x0
  407e1e:	add    ecx,eax
  407e20:	mov    rax,QWORD PTR [rbp-0xb8]
  407e27:	mov    esi,ecx
  407e29:	mov    rdi,rax
  407e2c:	call   4079bd <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  407e31:	mov    DWORD PTR [rbp-0xa4],eax
  407e37:	mov    rax,QWORD PTR [rbp-0xd0]
  407e3e:	mov    edx,eax
  407e40:	mov    eax,DWORD PTR [rbp-0xa4]
  407e46:	add    eax,edx
  407e48:	mov    edi,eax
  407e4a:	call   4066f5 <main@@Base+0x116>
  407e4f:	mov    DWORD PTR [rbp-0xac],eax
  407e55:	mov    QWORD PTR [rbp-0xa0],0x0
  407e60:	mov    DWORD PTR [rbp-0x98],0x0
  407e6a:	mov    rax,QWORD PTR [rbp-0xb8]
  407e71:	mov    eax,DWORD PTR [rax+0x100]
  407e77:	test   eax,eax
  407e79:	je     407ed8 <flatcc_builder_embed_buffer@@Base+0x17a>
  407e7b:	mov    rax,QWORD PTR [rbp-0xa0]
  407e82:	add    rax,0x4
  407e86:	mov    QWORD PTR [rbp-0xa0],rax
  407e8d:	mov    eax,DWORD PTR [rbp-0x98]
  407e93:	cdqe   
  407e95:	shl    rax,0x4
  407e99:	add    rax,rbp
  407e9c:	lea    rdx,[rax-0x90]
  407ea3:	lea    rax,[rbp-0xac]
  407eaa:	mov    QWORD PTR [rdx],rax
  407ead:	mov    eax,DWORD PTR [rbp-0x98]
  407eb3:	cdqe   
  407eb5:	shl    rax,0x4
  407eb9:	add    rax,rbp
  407ebc:	sub    rax,0x88
  407ec2:	mov    QWORD PTR [rax],0x4
  407ec9:	mov    eax,DWORD PTR [rbp-0x98]
  407ecf:	add    eax,0x1
  407ed2:	mov    DWORD PTR [rbp-0x98],eax
  407ed8:	cmp    QWORD PTR [rbp-0xd0],0x0
  407ee0:	je     407f49 <flatcc_builder_embed_buffer@@Base+0x1eb>
  407ee2:	mov    rdx,QWORD PTR [rbp-0xa0]
  407ee9:	mov    rax,QWORD PTR [rbp-0xd0]
  407ef0:	add    rax,rdx
  407ef3:	mov    QWORD PTR [rbp-0xa0],rax
  407efa:	mov    eax,DWORD PTR [rbp-0x98]
  407f00:	cdqe   
  407f02:	shl    rax,0x4
  407f06:	add    rax,rbp
  407f09:	lea    rdx,[rax-0x90]
  407f10:	mov    rax,QWORD PTR [rbp-0xc8]
  407f17:	mov    QWORD PTR [rdx],rax
  407f1a:	mov    eax,DWORD PTR [rbp-0x98]
  407f20:	cdqe   
  407f22:	shl    rax,0x4
  407f26:	add    rax,rbp
  407f29:	lea    rdx,[rax-0x88]
  407f30:	mov    rax,QWORD PTR [rbp-0xd0]
  407f37:	mov    QWORD PTR [rdx],rax
  407f3a:	mov    eax,DWORD PTR [rbp-0x98]
  407f40:	add    eax,0x1
  407f43:	mov    DWORD PTR [rbp-0x98],eax
  407f49:	cmp    DWORD PTR [rbp-0xa4],0x0
  407f50:	je     407fb7 <flatcc_builder_embed_buffer@@Base+0x259>
  407f52:	mov    rdx,QWORD PTR [rbp-0xa0]
  407f59:	mov    eax,DWORD PTR [rbp-0xa4]
  407f5f:	add    rax,rdx
  407f62:	mov    QWORD PTR [rbp-0xa0],rax
  407f69:	mov    eax,DWORD PTR [rbp-0x98]
  407f6f:	cdqe   
  407f71:	shl    rax,0x4
  407f75:	add    rax,rbp
  407f78:	sub    rax,0x90
  407f7e:	mov    rdx,0x4143a0
  407f85:	mov    QWORD PTR [rax],rdx
  407f88:	mov    edx,DWORD PTR [rbp-0x98]
  407f8e:	mov    eax,DWORD PTR [rbp-0xa4]
  407f94:	movsxd rdx,edx
  407f97:	shl    rdx,0x4
  407f9b:	add    rdx,rbp
  407f9e:	sub    rdx,0x88
  407fa5:	mov    QWORD PTR [rdx],rax
  407fa8:	mov    eax,DWORD PTR [rbp-0x98]
  407fae:	add    eax,0x1
  407fb1:	mov    DWORD PTR [rbp-0x98],eax
  407fb7:	lea    rdx,[rbp-0xa0]
  407fbe:	mov    rax,QWORD PTR [rbp-0xb8]
  407fc5:	mov    rsi,rdx
  407fc8:	mov    rdi,rax
  407fcb:	call   407a09 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  407fd0:	mov    rdi,QWORD PTR [rbp-0x8]
  407fd4:	xor    rdi,QWORD PTR fs:0x28
  407fdd:	je     407fe4 <flatcc_builder_embed_buffer@@Base+0x286>
  407fdf:	call   403060 <__stack_chk_fail@plt>
  407fe4:	leave  
  407fe5:	ret    

0000000000407fe6 <flatcc_builder_create_buffer@@Base>:
  407fe6:	push   rbp
  407fe7:	mov    rbp,rsp
  407fea:	sub    rsp,0xf0
  407ff1:	mov    QWORD PTR [rbp-0xd8],rdi
  407ff8:	mov    QWORD PTR [rbp-0xe0],rsi
  407fff:	mov    eax,edx
  408001:	mov    DWORD PTR [rbp-0xe8],ecx
  408007:	mov    edx,r8d
  40800a:	mov    DWORD PTR [rbp-0xf0],r9d
  408011:	mov    WORD PTR [rbp-0xe4],ax
  408018:	mov    WORD PTR [rbp-0xec],dx
  40801f:	mov    rax,QWORD PTR fs:0x28
  408028:	mov    QWORD PTR [rbp-0x8],rax
  40802c:	xor    eax,eax
  40802e:	mov    DWORD PTR [rbp-0xb8],0x0
  408038:	mov    DWORD PTR [rbp-0xbc],0x0
  408042:	mov    eax,DWORD PTR [rbp-0xf0]
  408048:	and    eax,0x1
  40804b:	test   eax,eax
  40804d:	setne  al
  408050:	movzx  eax,al
  408053:	mov    DWORD PTR [rbp-0xb4],eax
  408059:	mov    eax,DWORD PTR [rbp-0xf0]
  40805f:	and    eax,0x2
  408062:	test   eax,eax
  408064:	setne  al
  408067:	movzx  eax,al
  40806a:	mov    DWORD PTR [rbp-0xb0],eax
  408070:	movzx  edx,WORD PTR [rbp-0xe4]
  408077:	mov    ecx,DWORD PTR [rbp-0xb4]
  40807d:	lea    rsi,[rbp-0xec]
  408084:	mov    rax,QWORD PTR [rbp-0xd8]
  40808b:	mov    rdi,rax
  40808e:	call   407ba1 <flatcc_builder_get_user_frame_ptr@@Base+0x4a5>
  408093:	test   eax,eax
  408095:	je     4080a1 <flatcc_builder_create_buffer@@Base+0xbb>
  408097:	mov    eax,0x0
  40809c:	jmp    408407 <flatcc_builder_create_buffer@@Base+0x421>
  4080a1:	movzx  eax,WORD PTR [rbp-0xec]
  4080a8:	movzx  edx,ax
  4080ab:	mov    rax,QWORD PTR [rbp-0xd8]
  4080b2:	mov    esi,edx
  4080b4:	mov    rdi,rax
  4080b7:	call   407405 <flatcc_builder_clear@@Base+0x96>
  4080bc:	cmp    QWORD PTR [rbp-0xe0],0x0
  4080c4:	je     4080fb <flatcc_builder_create_buffer@@Base+0x115>
  4080c6:	mov    rax,QWORD PTR [rbp-0xe0]
  4080cd:	mov    eax,DWORD PTR [rax]
  4080cf:	mov    DWORD PTR [rbp-0xbc],eax
  4080d5:	mov    eax,DWORD PTR [rbp-0xbc]
  4080db:	mov    edi,eax
  4080dd:	call   406710 <main@@Base+0x131>
  4080e2:	mov    DWORD PTR [rbp-0xbc],eax
  4080e8:	mov    eax,DWORD PTR [rbp-0xbc]
  4080ee:	mov    edi,eax
  4080f0:	call   4066f5 <main@@Base+0x116>
  4080f5:	mov    DWORD PTR [rbp-0xbc],eax
  4080fb:	mov    eax,DWORD PTR [rbp-0xbc]
  408101:	test   eax,eax
  408103:	je     40810c <flatcc_builder_create_buffer@@Base+0x126>
  408105:	mov    eax,0x4
  40810a:	jmp    408111 <flatcc_builder_create_buffer@@Base+0x12b>
  40810c:	mov    eax,0x0
  408111:	mov    DWORD PTR [rbp-0xb8],eax
  408117:	movzx  eax,WORD PTR [rbp-0xec]
  40811e:	movzx  edx,ax
  408121:	cmp    DWORD PTR [rbp-0xb0],0x0
  408128:	je     408131 <flatcc_builder_create_buffer@@Base+0x14b>
  40812a:	mov    ecx,0x4
  40812f:	jmp    408136 <flatcc_builder_create_buffer@@Base+0x150>
  408131:	mov    ecx,0x0
  408136:	mov    eax,DWORD PTR [rbp-0xb8]
  40813c:	add    eax,ecx
  40813e:	lea    ecx,[rax+0x4]
  408141:	mov    rax,QWORD PTR [rbp-0xd8]
  408148:	mov    esi,ecx
  40814a:	mov    rdi,rax
  40814d:	call   4079bd <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  408152:	mov    DWORD PTR [rbp-0xac],eax
  408158:	mov    QWORD PTR [rbp-0xa0],0x0
  408163:	mov    DWORD PTR [rbp-0x98],0x0
  40816d:	cmp    DWORD PTR [rbp-0xb4],0x0
  408174:	jne    40817f <flatcc_builder_create_buffer@@Base+0x199>
  408176:	cmp    DWORD PTR [rbp-0xb0],0x0
  40817d:	je     4081dc <flatcc_builder_create_buffer@@Base+0x1f6>
  40817f:	mov    rax,QWORD PTR [rbp-0xa0]
  408186:	add    rax,0x4
  40818a:	mov    QWORD PTR [rbp-0xa0],rax
  408191:	mov    eax,DWORD PTR [rbp-0x98]
  408197:	cdqe   
  408199:	shl    rax,0x4
  40819d:	add    rax,rbp
  4081a0:	lea    rdx,[rax-0x90]
  4081a7:	lea    rax,[rbp-0xc0]
  4081ae:	mov    QWORD PTR [rdx],rax
  4081b1:	mov    eax,DWORD PTR [rbp-0x98]
  4081b7:	cdqe   
  4081b9:	shl    rax,0x4
  4081bd:	add    rax,rbp
  4081c0:	sub    rax,0x88
  4081c6:	mov    QWORD PTR [rax],0x4
  4081cd:	mov    eax,DWORD PTR [rbp-0x98]
  4081d3:	add    eax,0x1
  4081d6:	mov    DWORD PTR [rbp-0x98],eax
  4081dc:	mov    rax,QWORD PTR [rbp-0xa0]
  4081e3:	add    rax,0x4
  4081e7:	mov    QWORD PTR [rbp-0xa0],rax
  4081ee:	mov    eax,DWORD PTR [rbp-0x98]
  4081f4:	cdqe   
  4081f6:	shl    rax,0x4
  4081fa:	add    rax,rbp
  4081fd:	lea    rdx,[rax-0x90]
  408204:	lea    rax,[rbp-0xc4]
  40820b:	mov    QWORD PTR [rdx],rax
  40820e:	mov    eax,DWORD PTR [rbp-0x98]
  408214:	cdqe   
  408216:	shl    rax,0x4
  40821a:	add    rax,rbp
  40821d:	sub    rax,0x88
  408223:	mov    QWORD PTR [rax],0x4
  40822a:	mov    eax,DWORD PTR [rbp-0x98]
  408230:	add    eax,0x1
  408233:	mov    DWORD PTR [rbp-0x98],eax
  408239:	cmp    DWORD PTR [rbp-0xb8],0x0
  408240:	je     4082a8 <flatcc_builder_create_buffer@@Base+0x2c2>
  408242:	mov    rdx,QWORD PTR [rbp-0xa0]
  408249:	mov    eax,DWORD PTR [rbp-0xb8]
  40824f:	add    rax,rdx
  408252:	mov    QWORD PTR [rbp-0xa0],rax
  408259:	mov    eax,DWORD PTR [rbp-0x98]
  40825f:	cdqe   
  408261:	shl    rax,0x4
  408265:	add    rax,rbp
  408268:	lea    rdx,[rax-0x90]
  40826f:	lea    rax,[rbp-0xbc]
  408276:	mov    QWORD PTR [rdx],rax
  408279:	mov    edx,DWORD PTR [rbp-0x98]
  40827f:	mov    eax,DWORD PTR [rbp-0xb8]
  408285:	movsxd rdx,edx
  408288:	shl    rdx,0x4
  40828c:	add    rdx,rbp
  40828f:	sub    rdx,0x88
  408296:	mov    QWORD PTR [rdx],rax
  408299:	mov    eax,DWORD PTR [rbp-0x98]
  40829f:	add    eax,0x1
  4082a2:	mov    DWORD PTR [rbp-0x98],eax
  4082a8:	cmp    DWORD PTR [rbp-0xac],0x0
  4082af:	je     408316 <flatcc_builder_create_buffer@@Base+0x330>
  4082b1:	mov    rdx,QWORD PTR [rbp-0xa0]
  4082b8:	mov    eax,DWORD PTR [rbp-0xac]
  4082be:	add    rax,rdx
  4082c1:	mov    QWORD PTR [rbp-0xa0],rax
  4082c8:	mov    eax,DWORD PTR [rbp-0x98]
  4082ce:	cdqe   
  4082d0:	shl    rax,0x4
  4082d4:	add    rax,rbp
  4082d7:	sub    rax,0x90
  4082dd:	mov    rdx,0x4143a0
  4082e4:	mov    QWORD PTR [rax],rdx
  4082e7:	mov    edx,DWORD PTR [rbp-0x98]
  4082ed:	mov    eax,DWORD PTR [rbp-0xac]
  4082f3:	movsxd rdx,edx
  4082f6:	shl    rdx,0x4
  4082fa:	add    rdx,rbp
  4082fd:	sub    rdx,0x88
  408304:	mov    QWORD PTR [rdx],rax
  408307:	mov    eax,DWORD PTR [rbp-0x98]
  40830d:	add    eax,0x1
  408310:	mov    DWORD PTR [rbp-0x98],eax
  408316:	mov    rax,QWORD PTR [rbp-0xd8]
  40831d:	mov    eax,DWORD PTR [rax+0xf0]
  408323:	mov    edx,eax
  408325:	mov    rax,QWORD PTR [rbp-0xa0]
  40832c:	sub    edx,eax
  40832e:	mov    eax,edx
  408330:	cmp    DWORD PTR [rbp-0xb4],0x0
  408337:	jne    408342 <flatcc_builder_create_buffer@@Base+0x35c>
  408339:	cmp    DWORD PTR [rbp-0xb0],0x0
  408340:	je     408349 <flatcc_builder_create_buffer@@Base+0x363>
  408342:	mov    edx,0x4
  408347:	jmp    40834e <flatcc_builder_create_buffer@@Base+0x368>
  408349:	mov    edx,0x0
  40834e:	add    eax,edx
  408350:	mov    DWORD PTR [rbp-0xa8],eax
  408356:	cmp    DWORD PTR [rbp-0xb4],0x0
  40835d:	je     408381 <flatcc_builder_create_buffer@@Base+0x39b>
  40835f:	mov    rax,QWORD PTR [rbp-0xd8]
  408366:	mov    eax,DWORD PTR [rax+0xf8]
  40836c:	sub    eax,DWORD PTR [rbp-0xa8]
  408372:	mov    edi,eax
  408374:	call   4066f5 <main@@Base+0x116>
  408379:	mov    DWORD PTR [rbp-0xc0],eax
  40837f:	jmp    4083a1 <flatcc_builder_create_buffer@@Base+0x3bb>
  408381:	mov    rax,QWORD PTR [rbp-0xd8]
  408388:	mov    eax,DWORD PTR [rax+0xf4]
  40838e:	sub    eax,DWORD PTR [rbp-0xa8]
  408394:	mov    edi,eax
  408396:	call   4066f5 <main@@Base+0x116>
  40839b:	mov    DWORD PTR [rbp-0xc0],eax
  4083a1:	mov    eax,DWORD PTR [rbp-0xe8]
  4083a7:	sub    eax,DWORD PTR [rbp-0xa8]
  4083ad:	mov    edi,eax
  4083af:	call   4066f5 <main@@Base+0x116>
  4083b4:	mov    DWORD PTR [rbp-0xc4],eax
  4083ba:	lea    rdx,[rbp-0xa0]
  4083c1:	mov    rax,QWORD PTR [rbp-0xd8]
  4083c8:	mov    rsi,rdx
  4083cb:	mov    rdi,rax
  4083ce:	call   407a09 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4083d3:	mov    DWORD PTR [rbp-0xa4],eax
  4083d9:	cmp    DWORD PTR [rbp-0xa4],0x0
  4083e0:	jne    408401 <flatcc_builder_create_buffer@@Base+0x41b>
  4083e2:	lea    rcx,[rip+0xc6d7]        # 414ac0 <flatcc_builder_padding_base@@Base+0x720>
  4083e9:	mov    edx,0x304
  4083ee:	lea    rsi,[rip+0xc1ab]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4083f5:	lea    rdi,[rip+0xc204]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  4083fc:	call   403070 <__assert_fail@plt>
  408401:	mov    eax,DWORD PTR [rbp-0xa4]
  408407:	mov    rsi,QWORD PTR [rbp-0x8]
  40840b:	xor    rsi,QWORD PTR fs:0x28
  408414:	je     40841b <flatcc_builder_create_buffer@@Base+0x435>
  408416:	call   403060 <__stack_chk_fail@plt>
  40841b:	leave  
  40841c:	ret    

000000000040841d <flatcc_builder_create_struct@@Base>:
  40841d:	push   rbp
  40841e:	mov    rbp,rsp
  408421:	sub    rsp,0xd0
  408428:	mov    QWORD PTR [rbp-0xb8],rdi
  40842f:	mov    QWORD PTR [rbp-0xc0],rsi
  408436:	mov    QWORD PTR [rbp-0xc8],rdx
  40843d:	mov    eax,ecx
  40843f:	mov    WORD PTR [rbp-0xcc],ax
  408446:	mov    rax,QWORD PTR fs:0x28
  40844f:	mov    QWORD PTR [rbp-0x8],rax
  408453:	xor    eax,eax
  408455:	cmp    WORD PTR [rbp-0xcc],0x0
  40845d:	jne    40847e <flatcc_builder_create_struct@@Base+0x61>
  40845f:	lea    rcx,[rip+0xc67a]        # 414ae0 <flatcc_builder_padding_base@@Base+0x740>
  408466:	mov    edx,0x30f
  40846b:	lea    rsi,[rip+0xc12e]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408472:	lea    rdi,[rip+0xc1e6]        # 41465f <flatcc_builder_padding_base@@Base+0x2bf>
  408479:	call   403070 <__assert_fail@plt>
  40847e:	movzx  edx,WORD PTR [rbp-0xcc]
  408485:	mov    rax,QWORD PTR [rbp-0xb8]
  40848c:	mov    esi,edx
  40848e:	mov    rdi,rax
  408491:	call   407405 <flatcc_builder_clear@@Base+0x96>
  408496:	movzx  edx,WORD PTR [rbp-0xcc]
  40849d:	mov    rax,QWORD PTR [rbp-0xc8]
  4084a4:	mov    ecx,eax
  4084a6:	mov    rax,QWORD PTR [rbp-0xb8]
  4084ad:	mov    esi,ecx
  4084af:	mov    rdi,rax
  4084b2:	call   4079bd <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  4084b7:	mov    eax,eax
  4084b9:	mov    QWORD PTR [rbp-0xa8],rax
  4084c0:	mov    QWORD PTR [rbp-0xa0],0x0
  4084cb:	mov    DWORD PTR [rbp-0x98],0x0
  4084d5:	cmp    QWORD PTR [rbp-0xc8],0x0
  4084dd:	je     408546 <flatcc_builder_create_struct@@Base+0x129>
  4084df:	mov    rdx,QWORD PTR [rbp-0xa0]
  4084e6:	mov    rax,QWORD PTR [rbp-0xc8]
  4084ed:	add    rax,rdx
  4084f0:	mov    QWORD PTR [rbp-0xa0],rax
  4084f7:	mov    eax,DWORD PTR [rbp-0x98]
  4084fd:	cdqe   
  4084ff:	shl    rax,0x4
  408503:	add    rax,rbp
  408506:	lea    rdx,[rax-0x90]
  40850d:	mov    rax,QWORD PTR [rbp-0xc0]
  408514:	mov    QWORD PTR [rdx],rax
  408517:	mov    eax,DWORD PTR [rbp-0x98]
  40851d:	cdqe   
  40851f:	shl    rax,0x4
  408523:	add    rax,rbp
  408526:	lea    rdx,[rax-0x88]
  40852d:	mov    rax,QWORD PTR [rbp-0xc8]
  408534:	mov    QWORD PTR [rdx],rax
  408537:	mov    eax,DWORD PTR [rbp-0x98]
  40853d:	add    eax,0x1
  408540:	mov    DWORD PTR [rbp-0x98],eax
  408546:	cmp    QWORD PTR [rbp-0xa8],0x0
  40854e:	je     4085b6 <flatcc_builder_create_struct@@Base+0x199>
  408550:	mov    rdx,QWORD PTR [rbp-0xa0]
  408557:	mov    rax,QWORD PTR [rbp-0xa8]
  40855e:	add    rax,rdx
  408561:	mov    QWORD PTR [rbp-0xa0],rax
  408568:	mov    eax,DWORD PTR [rbp-0x98]
  40856e:	cdqe   
  408570:	shl    rax,0x4
  408574:	add    rax,rbp
  408577:	sub    rax,0x90
  40857d:	mov    rdx,0x4143a0
  408584:	mov    QWORD PTR [rax],rdx
  408587:	mov    eax,DWORD PTR [rbp-0x98]
  40858d:	cdqe   
  40858f:	shl    rax,0x4
  408593:	add    rax,rbp
  408596:	lea    rdx,[rax-0x88]
  40859d:	mov    rax,QWORD PTR [rbp-0xa8]
  4085a4:	mov    QWORD PTR [rdx],rax
  4085a7:	mov    eax,DWORD PTR [rbp-0x98]
  4085ad:	add    eax,0x1
  4085b0:	mov    DWORD PTR [rbp-0x98],eax
  4085b6:	lea    rdx,[rbp-0xa0]
  4085bd:	mov    rax,QWORD PTR [rbp-0xb8]
  4085c4:	mov    rsi,rdx
  4085c7:	mov    rdi,rax
  4085ca:	call   407a09 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  4085cf:	mov    rcx,QWORD PTR [rbp-0x8]
  4085d3:	xor    rcx,QWORD PTR fs:0x28
  4085dc:	je     4085e3 <flatcc_builder_create_struct@@Base+0x1c6>
  4085de:	call   403060 <__stack_chk_fail@plt>
  4085e3:	leave  
  4085e4:	ret    

00000000004085e5 <flatcc_builder_start_buffer@@Base>:
  4085e5:	push   rbp
  4085e6:	mov    rbp,rsp
  4085e9:	sub    rsp,0x20
  4085ed:	mov    QWORD PTR [rbp-0x8],rdi
  4085f1:	mov    QWORD PTR [rbp-0x10],rsi
  4085f5:	mov    eax,edx
  4085f7:	mov    DWORD PTR [rbp-0x18],ecx
  4085fa:	mov    WORD PTR [rbp-0x14],ax
  4085fe:	mov    rax,QWORD PTR [rbp-0x8]
  408602:	movzx  eax,WORD PTR [rax+0xe8]
  408609:	movzx  edx,ax
  40860c:	mov    rax,QWORD PTR [rbp-0x8]
  408610:	mov    esi,edx
  408612:	mov    rdi,rax
  408615:	call   40771e <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40861a:	test   eax,eax
  40861c:	je     408628 <flatcc_builder_start_buffer@@Base+0x43>
  40861e:	mov    eax,0xffffffff
  408623:	jmp    40872c <flatcc_builder_start_buffer@@Base+0x147>
  408628:	mov    rax,QWORD PTR [rbp-0x8]
  40862c:	mov    WORD PTR [rax+0xe8],0x1
  408635:	mov    rax,QWORD PTR [rbp-0x8]
  408639:	mov    rax,QWORD PTR [rax+0x30]
  40863d:	mov    rdx,QWORD PTR [rbp-0x8]
  408641:	movzx  edx,WORD PTR [rdx+0xec]
  408648:	mov    WORD PTR [rax+0x22],dx
  40864c:	mov    rax,QWORD PTR [rbp-0x8]
  408650:	movzx  edx,WORD PTR [rbp-0x14]
  408654:	mov    WORD PTR [rax+0xec],dx
  40865b:	mov    rax,QWORD PTR [rbp-0x8]
  40865f:	mov    rax,QWORD PTR [rax+0x30]
  408663:	mov    rdx,QWORD PTR [rbp-0x8]
  408667:	movzx  edx,WORD PTR [rdx+0x10c]
  40866e:	mov    WORD PTR [rax+0x20],dx
  408672:	mov    eax,DWORD PTR [rbp-0x18]
  408675:	mov    edx,eax
  408677:	mov    rax,QWORD PTR [rbp-0x8]
  40867b:	mov    WORD PTR [rax+0x10c],dx
  408682:	mov    rax,QWORD PTR [rbp-0x8]
  408686:	mov    rax,QWORD PTR [rax+0x30]
  40868a:	mov    rdx,QWORD PTR [rbp-0x8]
  40868e:	mov    edx,DWORD PTR [rdx+0xf8]
  408694:	mov    DWORD PTR [rax+0x14],edx
  408697:	mov    rax,QWORD PTR [rbp-0x8]
  40869b:	mov    rax,QWORD PTR [rax+0x30]
  40869f:	mov    rdx,QWORD PTR [rbp-0x8]
  4086a3:	mov    edx,DWORD PTR [rdx+0x100]
  4086a9:	mov    DWORD PTR [rax+0x1c],edx
  4086ac:	mov    rax,QWORD PTR [rbp-0x8]
  4086b0:	mov    edx,DWORD PTR [rax+0xf0]
  4086b6:	mov    rax,QWORD PTR [rbp-0x8]
  4086ba:	mov    DWORD PTR [rax+0xf8],edx
  4086c0:	mov    rax,QWORD PTR [rbp-0x8]
  4086c4:	mov    eax,DWORD PTR [rax+0xfc]
  4086ca:	lea    ecx,[rax+0x1]
  4086cd:	mov    rdx,QWORD PTR [rbp-0x8]
  4086d1:	mov    DWORD PTR [rdx+0xfc],ecx
  4086d7:	mov    rdx,QWORD PTR [rbp-0x8]
  4086db:	mov    DWORD PTR [rdx+0x100],eax
  4086e1:	mov    rax,QWORD PTR [rbp-0x8]
  4086e5:	mov    rax,QWORD PTR [rax+0x30]
  4086e9:	mov    rdx,QWORD PTR [rbp-0x8]
  4086ed:	mov    edx,DWORD PTR [rdx+0x110]
  4086f3:	mov    DWORD PTR [rax+0x10],edx
  4086f6:	cmp    QWORD PTR [rbp-0x10],0x0
  4086fb:	je     408703 <flatcc_builder_start_buffer@@Base+0x11e>
  4086fd:	mov    rax,QWORD PTR [rbp-0x10]
  408701:	jmp    40870a <flatcc_builder_start_buffer@@Base+0x125>
  408703:	mov    rax,0x4143a0
  40870a:	mov    rdx,QWORD PTR [rbp-0x8]
  40870e:	add    rdx,0x110
  408715:	mov    eax,DWORD PTR [rax]
  408717:	mov    DWORD PTR [rdx],eax
  408719:	mov    rax,QWORD PTR [rbp-0x8]
  40871d:	mov    rax,QWORD PTR [rax+0x30]
  408721:	mov    WORD PTR [rax+0xe],0x1
  408727:	mov    eax,0x0
  40872c:	leave  
  40872d:	ret    

000000000040872e <flatcc_builder_end_buffer@@Base>:
  40872e:	push   rbp
  40872f:	mov    rbp,rsp
  408732:	sub    rsp,0x20
  408736:	mov    QWORD PTR [rbp-0x18],rdi
  40873a:	mov    DWORD PTR [rbp-0x1c],esi
  40873d:	mov    rax,QWORD PTR [rbp-0x18]
  408741:	movzx  eax,WORD PTR [rax+0x10c]
  408748:	movzx  eax,ax
  40874b:	and    eax,0x2
  40874e:	mov    DWORD PTR [rbp-0x8],eax
  408751:	mov    rax,QWORD PTR [rbp-0x18]
  408755:	mov    eax,DWORD PTR [rax+0x100]
  40875b:	test   eax,eax
  40875d:	setne  al
  408760:	movzx  eax,al
  408763:	or     DWORD PTR [rbp-0x8],eax
  408766:	mov    rax,QWORD PTR [rbp-0x18]
  40876a:	mov    rax,QWORD PTR [rax+0x30]
  40876e:	movzx  eax,WORD PTR [rax+0xe]
  408772:	cmp    ax,0x1
  408776:	je     408797 <flatcc_builder_end_buffer@@Base+0x69>
  408778:	lea    rcx,[rip+0xc381]        # 414b00 <flatcc_builder_padding_base@@Base+0x760>
  40877f:	mov    edx,0x346
  408784:	lea    rsi,[rip+0xbe15]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40878b:	lea    rdi,[rip+0xbede]        # 414670 <flatcc_builder_padding_base@@Base+0x2d0>
  408792:	call   403070 <__assert_fail@plt>
  408797:	mov    rax,QWORD PTR [rbp-0x18]
  40879b:	movzx  eax,WORD PTR [rax+0xec]
  4087a2:	movzx  edx,ax
  4087a5:	mov    rax,QWORD PTR [rbp-0x18]
  4087a9:	mov    esi,edx
  4087ab:	mov    rdi,rax
  4087ae:	call   407405 <flatcc_builder_clear@@Base+0x96>
  4087b3:	mov    rax,QWORD PTR [rbp-0x18]
  4087b7:	movzx  eax,WORD PTR [rax+0xe8]
  4087be:	movzx  edi,ax
  4087c1:	mov    rax,QWORD PTR [rbp-0x18]
  4087c5:	movzx  eax,WORD PTR [rax+0xec]
  4087cc:	movzx  edx,ax
  4087cf:	mov    rax,QWORD PTR [rbp-0x18]
  4087d3:	lea    rsi,[rax+0x110]
  4087da:	mov    r8d,DWORD PTR [rbp-0x8]
  4087de:	mov    ecx,DWORD PTR [rbp-0x1c]
  4087e1:	mov    rax,QWORD PTR [rbp-0x18]
  4087e5:	mov    r9d,r8d
  4087e8:	mov    r8d,edi
  4087eb:	mov    rdi,rax
  4087ee:	call   407fe6 <flatcc_builder_create_buffer@@Base>
  4087f3:	mov    DWORD PTR [rbp-0x4],eax
  4087f6:	cmp    DWORD PTR [rbp-0x4],0x0
  4087fa:	jne    408803 <flatcc_builder_end_buffer@@Base+0xd5>
  4087fc:	mov    eax,0x0
  408801:	jmp    408868 <flatcc_builder_end_buffer@@Base+0x13a>
  408803:	mov    rax,QWORD PTR [rbp-0x18]
  408807:	mov    rax,QWORD PTR [rax+0x30]
  40880b:	mov    edx,DWORD PTR [rax+0x14]
  40880e:	mov    rax,QWORD PTR [rbp-0x18]
  408812:	mov    DWORD PTR [rax+0xf8],edx
  408818:	mov    rax,QWORD PTR [rbp-0x18]
  40881c:	mov    rax,QWORD PTR [rax+0x30]
  408820:	mov    edx,DWORD PTR [rax+0x1c]
  408823:	mov    rax,QWORD PTR [rbp-0x18]
  408827:	mov    DWORD PTR [rax+0x100],edx
  40882d:	mov    rax,QWORD PTR [rbp-0x18]
  408831:	mov    rax,QWORD PTR [rax+0x30]
  408835:	mov    edx,DWORD PTR [rax+0x10]
  408838:	mov    rax,QWORD PTR [rbp-0x18]
  40883c:	mov    DWORD PTR [rax+0x110],edx
  408842:	mov    rax,QWORD PTR [rbp-0x18]
  408846:	mov    rax,QWORD PTR [rax+0x30]
  40884a:	movzx  edx,WORD PTR [rax+0x20]
  40884e:	mov    rax,QWORD PTR [rbp-0x18]
  408852:	mov    WORD PTR [rax+0x10c],dx
  408859:	mov    rax,QWORD PTR [rbp-0x18]
  40885d:	mov    rdi,rax
  408860:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  408865:	mov    eax,DWORD PTR [rbp-0x4]
  408868:	leave  
  408869:	ret    

000000000040886a <flatcc_builder_start_struct@@Base>:
  40886a:	push   rbp
  40886b:	mov    rbp,rsp
  40886e:	sub    rsp,0x20
  408872:	mov    QWORD PTR [rbp-0x8],rdi
  408876:	mov    QWORD PTR [rbp-0x10],rsi
  40887a:	mov    eax,edx
  40887c:	mov    WORD PTR [rbp-0x14],ax
  408880:	movzx  edx,WORD PTR [rbp-0x14]
  408884:	mov    rax,QWORD PTR [rbp-0x8]
  408888:	mov    esi,edx
  40888a:	mov    rdi,rax
  40888d:	call   40771e <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  408892:	test   eax,eax
  408894:	je     40889d <flatcc_builder_start_struct@@Base+0x33>
  408896:	mov    eax,0x0
  40889b:	jmp    4088d0 <flatcc_builder_start_struct@@Base+0x66>
  40889d:	mov    rax,QWORD PTR [rbp-0x8]
  4088a1:	mov    rax,QWORD PTR [rax+0x30]
  4088a5:	mov    WORD PTR [rax+0xe],0x2
  4088ab:	mov    rax,QWORD PTR [rbp-0x8]
  4088af:	mov    esi,0xfffffffc
  4088b4:	mov    rdi,rax
  4088b7:	call   406928 <flatcc_builder_default_alloc@@Base+0x16d>
  4088bc:	mov    rax,QWORD PTR [rbp-0x10]
  4088c0:	mov    edx,eax
  4088c2:	mov    rax,QWORD PTR [rbp-0x8]
  4088c6:	mov    esi,edx
  4088c8:	mov    rdi,rax
  4088cb:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  4088d0:	leave  
  4088d1:	ret    

00000000004088d2 <flatcc_builder_struct_edit@@Base>:
  4088d2:	push   rbp
  4088d3:	mov    rbp,rsp
  4088d6:	mov    QWORD PTR [rbp-0x8],rdi
  4088da:	mov    rax,QWORD PTR [rbp-0x8]
  4088de:	mov    rax,QWORD PTR [rax+0x18]
  4088e2:	pop    rbp
  4088e3:	ret    

00000000004088e4 <flatcc_builder_end_struct@@Base>:
  4088e4:	push   rbp
  4088e5:	mov    rbp,rsp
  4088e8:	sub    rsp,0x20
  4088ec:	mov    QWORD PTR [rbp-0x18],rdi
  4088f0:	mov    rax,QWORD PTR [rbp-0x18]
  4088f4:	mov    rax,QWORD PTR [rax+0x30]
  4088f8:	movzx  eax,WORD PTR [rax+0xe]
  4088fc:	cmp    ax,0x2
  408900:	je     408921 <flatcc_builder_end_struct@@Base+0x3d>
  408902:	lea    rcx,[rip+0xc217]        # 414b20 <flatcc_builder_padding_base@@Base+0x780>
  408909:	mov    edx,0x368
  40890e:	lea    rsi,[rip+0xbc8b]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408915:	lea    rdi,[rip+0xbd84]        # 4146a0 <flatcc_builder_padding_base@@Base+0x300>
  40891c:	call   403070 <__assert_fail@plt>
  408921:	mov    rax,QWORD PTR [rbp-0x18]
  408925:	movzx  eax,WORD PTR [rax+0xea]
  40892c:	movzx  edx,ax
  40892f:	mov    rax,QWORD PTR [rbp-0x18]
  408933:	mov    eax,DWORD PTR [rax+0x20]
  408936:	mov    edi,eax
  408938:	mov    rax,QWORD PTR [rbp-0x18]
  40893c:	mov    rsi,QWORD PTR [rax+0x18]
  408940:	mov    rax,QWORD PTR [rbp-0x18]
  408944:	mov    ecx,edx
  408946:	mov    rdx,rdi
  408949:	mov    rdi,rax
  40894c:	call   40841d <flatcc_builder_create_struct@@Base>
  408951:	mov    DWORD PTR [rbp-0x4],eax
  408954:	cmp    DWORD PTR [rbp-0x4],0x0
  408958:	jne    408961 <flatcc_builder_end_struct@@Base+0x7d>
  40895a:	mov    eax,0x0
  40895f:	jmp    408970 <flatcc_builder_end_struct@@Base+0x8c>
  408961:	mov    rax,QWORD PTR [rbp-0x18]
  408965:	mov    rdi,rax
  408968:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40896d:	mov    eax,DWORD PTR [rbp-0x4]
  408970:	leave  
  408971:	ret    
  408972:	push   rbp
  408973:	mov    rbp,rsp
  408976:	sub    rsp,0x20
  40897a:	mov    QWORD PTR [rbp-0x18],rdi
  40897e:	mov    DWORD PTR [rbp-0x1c],esi
  408981:	mov    DWORD PTR [rbp-0x20],edx
  408984:	mov    rax,QWORD PTR [rbp-0x18]
  408988:	mov    rax,QWORD PTR [rax+0x30]
  40898c:	mov    eax,DWORD PTR [rax+0x14]
  40898f:	mov    DWORD PTR [rbp-0x8],eax
  408992:	mov    edx,DWORD PTR [rbp-0x8]
  408995:	mov    eax,DWORD PTR [rbp-0x1c]
  408998:	add    eax,edx
  40899a:	mov    DWORD PTR [rbp-0x4],eax
  40899d:	mov    eax,DWORD PTR [rbp-0x8]
  4089a0:	cmp    eax,DWORD PTR [rbp-0x4]
  4089a3:	ja     4089ad <flatcc_builder_end_struct@@Base+0xc9>
  4089a5:	mov    eax,DWORD PTR [rbp-0x4]
  4089a8:	cmp    eax,DWORD PTR [rbp-0x20]
  4089ab:	jbe    4089e3 <flatcc_builder_end_struct@@Base+0xff>
  4089ad:	mov    eax,DWORD PTR [rbp-0x8]
  4089b0:	cmp    eax,DWORD PTR [rbp-0x4]
  4089b3:	ja     4089bd <flatcc_builder_end_struct@@Base+0xd9>
  4089b5:	mov    eax,DWORD PTR [rbp-0x4]
  4089b8:	cmp    eax,DWORD PTR [rbp-0x20]
  4089bb:	jbe    4089dc <flatcc_builder_end_struct@@Base+0xf8>
  4089bd:	lea    rcx,[rip+0xc17c]        # 414b40 <flatcc_builder_padding_base@@Base+0x7a0>
  4089c4:	mov    edx,0x37c
  4089c9:	lea    rsi,[rip+0xbbd0]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4089d0:	lea    rdi,[rip+0xbcf5]        # 4146cc <flatcc_builder_padding_base@@Base+0x32c>
  4089d7:	call   403070 <__assert_fail@plt>
  4089dc:	mov    eax,0xffffffff
  4089e1:	jmp    4089f6 <flatcc_builder_end_struct@@Base+0x112>
  4089e3:	mov    rax,QWORD PTR [rbp-0x18]
  4089e7:	mov    rax,QWORD PTR [rax+0x30]
  4089eb:	mov    edx,DWORD PTR [rbp-0x4]
  4089ee:	mov    DWORD PTR [rax+0x14],edx
  4089f1:	mov    eax,0x0
  4089f6:	leave  
  4089f7:	ret    

00000000004089f8 <flatcc_builder_extend_vector@@Base>:
  4089f8:	push   rbp
  4089f9:	mov    rbp,rsp
  4089fc:	sub    rsp,0x10
  408a00:	mov    QWORD PTR [rbp-0x8],rdi
  408a04:	mov    QWORD PTR [rbp-0x10],rsi
  408a08:	mov    rax,QWORD PTR [rbp-0x8]
  408a0c:	mov    rax,QWORD PTR [rax+0x30]
  408a10:	mov    edx,DWORD PTR [rax+0x18]
  408a13:	mov    rax,QWORD PTR [rbp-0x10]
  408a17:	mov    ecx,eax
  408a19:	mov    rax,QWORD PTR [rbp-0x8]
  408a1d:	mov    esi,ecx
  408a1f:	mov    rdi,rax
  408a22:	call   408972 <flatcc_builder_end_struct@@Base+0x8e>
  408a27:	test   eax,eax
  408a29:	je     408a32 <flatcc_builder_extend_vector@@Base+0x3a>
  408a2b:	mov    eax,0x0
  408a30:	jmp    408a52 <flatcc_builder_extend_vector@@Base+0x5a>
  408a32:	mov    rax,QWORD PTR [rbp-0x8]
  408a36:	mov    rax,QWORD PTR [rax+0x30]
  408a3a:	mov    eax,DWORD PTR [rax+0x10]
  408a3d:	mov    rdx,QWORD PTR [rbp-0x10]
  408a41:	imul   edx,eax
  408a44:	mov    rax,QWORD PTR [rbp-0x8]
  408a48:	mov    esi,edx
  408a4a:	mov    rdi,rax
  408a4d:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  408a52:	leave  
  408a53:	ret    

0000000000408a54 <flatcc_builder_vector_push@@Base>:
  408a54:	push   rbp
  408a55:	mov    rbp,rsp
  408a58:	sub    rsp,0x10
  408a5c:	mov    QWORD PTR [rbp-0x8],rdi
  408a60:	mov    QWORD PTR [rbp-0x10],rsi
  408a64:	mov    rax,QWORD PTR [rbp-0x8]
  408a68:	mov    rax,QWORD PTR [rax+0x30]
  408a6c:	movzx  eax,WORD PTR [rax+0xe]
  408a70:	cmp    ax,0x4
  408a74:	je     408a95 <flatcc_builder_vector_push@@Base+0x41>
  408a76:	lea    rcx,[rip+0xc0e3]        # 414b60 <flatcc_builder_padding_base@@Base+0x7c0>
  408a7d:	mov    edx,0x38b
  408a82:	lea    rsi,[rip+0xbb17]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408a89:	lea    rdi,[rip+0xbc58]        # 4146e8 <flatcc_builder_padding_base@@Base+0x348>
  408a90:	call   403070 <__assert_fail@plt>
  408a95:	mov    rax,QWORD PTR [rbp-0x8]
  408a99:	mov    rax,QWORD PTR [rax+0x30]
  408a9d:	mov    edx,DWORD PTR [rax+0x14]
  408aa0:	mov    rax,QWORD PTR [rbp-0x8]
  408aa4:	mov    rax,QWORD PTR [rax+0x30]
  408aa8:	mov    eax,DWORD PTR [rax+0x18]
  408aab:	cmp    edx,eax
  408aad:	jbe    408aef <flatcc_builder_vector_push@@Base+0x9b>
  408aaf:	mov    rax,QWORD PTR [rbp-0x8]
  408ab3:	mov    rax,QWORD PTR [rax+0x30]
  408ab7:	mov    edx,DWORD PTR [rax+0x14]
  408aba:	mov    rax,QWORD PTR [rbp-0x8]
  408abe:	mov    rax,QWORD PTR [rax+0x30]
  408ac2:	mov    eax,DWORD PTR [rax+0x18]
  408ac5:	cmp    edx,eax
  408ac7:	jbe    408ae8 <flatcc_builder_vector_push@@Base+0x94>
  408ac9:	lea    rcx,[rip+0xc090]        # 414b60 <flatcc_builder_padding_base@@Base+0x7c0>
  408ad0:	mov    edx,0x38c
  408ad5:	lea    rsi,[rip+0xbac4]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408adc:	lea    rdi,[rip+0xbc35]        # 414718 <flatcc_builder_padding_base@@Base+0x378>
  408ae3:	call   403070 <__assert_fail@plt>
  408ae8:	mov    eax,0x0
  408aed:	jmp    408b26 <flatcc_builder_vector_push@@Base+0xd2>
  408aef:	mov    rax,QWORD PTR [rbp-0x8]
  408af3:	mov    rax,QWORD PTR [rax+0x30]
  408af7:	mov    rdx,QWORD PTR [rbp-0x8]
  408afb:	mov    rdx,QWORD PTR [rdx+0x30]
  408aff:	mov    edx,DWORD PTR [rdx+0x14]
  408b02:	add    edx,0x1
  408b05:	mov    DWORD PTR [rax+0x14],edx
  408b08:	mov    rax,QWORD PTR [rbp-0x8]
  408b0c:	mov    rax,QWORD PTR [rax+0x30]
  408b10:	mov    edx,DWORD PTR [rax+0x10]
  408b13:	mov    rcx,QWORD PTR [rbp-0x10]
  408b17:	mov    rax,QWORD PTR [rbp-0x8]
  408b1b:	mov    rsi,rcx
  408b1e:	mov    rdi,rax
  408b21:	call   406ae4 <flatcc_builder_default_alloc@@Base+0x329>
  408b26:	leave  
  408b27:	ret    

0000000000408b28 <flatcc_builder_append_vector@@Base>:
  408b28:	push   rbp
  408b29:	mov    rbp,rsp
  408b2c:	sub    rsp,0x20
  408b30:	mov    QWORD PTR [rbp-0x8],rdi
  408b34:	mov    QWORD PTR [rbp-0x10],rsi
  408b38:	mov    QWORD PTR [rbp-0x18],rdx
  408b3c:	mov    rax,QWORD PTR [rbp-0x8]
  408b40:	mov    rax,QWORD PTR [rax+0x30]
  408b44:	movzx  eax,WORD PTR [rax+0xe]
  408b48:	cmp    ax,0x4
  408b4c:	je     408b6d <flatcc_builder_append_vector@@Base+0x45>
  408b4e:	lea    rcx,[rip+0xc02b]        # 414b80 <flatcc_builder_padding_base@@Base+0x7e0>
  408b55:	mov    edx,0x393
  408b5a:	lea    rsi,[rip+0xba3f]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408b61:	lea    rdi,[rip+0xbb80]        # 4146e8 <flatcc_builder_padding_base@@Base+0x348>
  408b68:	call   403070 <__assert_fail@plt>
  408b6d:	mov    rax,QWORD PTR [rbp-0x8]
  408b71:	mov    rax,QWORD PTR [rax+0x30]
  408b75:	mov    edx,DWORD PTR [rax+0x18]
  408b78:	mov    rax,QWORD PTR [rbp-0x18]
  408b7c:	mov    ecx,eax
  408b7e:	mov    rax,QWORD PTR [rbp-0x8]
  408b82:	mov    esi,ecx
  408b84:	mov    rdi,rax
  408b87:	call   408972 <flatcc_builder_end_struct@@Base+0x8e>
  408b8c:	test   eax,eax
  408b8e:	je     408b97 <flatcc_builder_append_vector@@Base+0x6f>
  408b90:	mov    eax,0x0
  408b95:	jmp    408bbc <flatcc_builder_append_vector@@Base+0x94>
  408b97:	mov    rax,QWORD PTR [rbp-0x8]
  408b9b:	mov    rax,QWORD PTR [rax+0x30]
  408b9f:	mov    eax,DWORD PTR [rax+0x10]
  408ba2:	mov    rdx,QWORD PTR [rbp-0x18]
  408ba6:	imul   edx,eax
  408ba9:	mov    rcx,QWORD PTR [rbp-0x10]
  408bad:	mov    rax,QWORD PTR [rbp-0x8]
  408bb1:	mov    rsi,rcx
  408bb4:	mov    rdi,rax
  408bb7:	call   406ae4 <flatcc_builder_default_alloc@@Base+0x329>
  408bbc:	leave  
  408bbd:	ret    

0000000000408bbe <flatcc_builder_extend_offset_vector@@Base>:
  408bbe:	push   rbp
  408bbf:	mov    rbp,rsp
  408bc2:	sub    rsp,0x10
  408bc6:	mov    QWORD PTR [rbp-0x8],rdi
  408bca:	mov    QWORD PTR [rbp-0x10],rsi
  408bce:	mov    rax,QWORD PTR [rbp-0x10]
  408bd2:	mov    ecx,eax
  408bd4:	mov    rax,QWORD PTR [rbp-0x8]
  408bd8:	mov    edx,0x3fffffff
  408bdd:	mov    esi,ecx
  408bdf:	mov    rdi,rax
  408be2:	call   408972 <flatcc_builder_end_struct@@Base+0x8e>
  408be7:	test   eax,eax
  408be9:	je     408bf2 <flatcc_builder_extend_offset_vector@@Base+0x34>
  408beb:	mov    eax,0x0
  408bf0:	jmp    408c0b <flatcc_builder_extend_offset_vector@@Base+0x4d>
  408bf2:	mov    rax,QWORD PTR [rbp-0x10]
  408bf6:	lea    edx,[rax*4+0x0]
  408bfd:	mov    rax,QWORD PTR [rbp-0x8]
  408c01:	mov    esi,edx
  408c03:	mov    rdi,rax
  408c06:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  408c0b:	leave  
  408c0c:	ret    

0000000000408c0d <flatcc_builder_offset_vector_push@@Base>:
  408c0d:	push   rbp
  408c0e:	mov    rbp,rsp
  408c11:	sub    rsp,0x20
  408c15:	mov    QWORD PTR [rbp-0x18],rdi
  408c19:	mov    DWORD PTR [rbp-0x1c],esi
  408c1c:	mov    rax,QWORD PTR [rbp-0x18]
  408c20:	mov    rax,QWORD PTR [rax+0x30]
  408c24:	movzx  eax,WORD PTR [rax+0xe]
  408c28:	cmp    ax,0x5
  408c2c:	je     408c4d <flatcc_builder_offset_vector_push@@Base+0x40>
  408c2e:	lea    rcx,[rip+0xbf6b]        # 414ba0 <flatcc_builder_padding_base@@Base+0x800>
  408c35:	mov    edx,0x3a6
  408c3a:	lea    rsi,[rip+0xb95f]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408c41:	lea    rdi,[rip+0xbb10]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  408c48:	call   403070 <__assert_fail@plt>
  408c4d:	mov    rax,QWORD PTR [rbp-0x18]
  408c51:	mov    rax,QWORD PTR [rax+0x30]
  408c55:	mov    eax,DWORD PTR [rax+0x14]
  408c58:	cmp    eax,0x3fffffff
  408c5d:	jne    408c66 <flatcc_builder_offset_vector_push@@Base+0x59>
  408c5f:	mov    eax,0x0
  408c64:	jmp    408caf <flatcc_builder_offset_vector_push@@Base+0xa2>
  408c66:	mov    rax,QWORD PTR [rbp-0x18]
  408c6a:	mov    rax,QWORD PTR [rax+0x30]
  408c6e:	mov    rdx,QWORD PTR [rbp-0x18]
  408c72:	mov    rdx,QWORD PTR [rdx+0x30]
  408c76:	mov    edx,DWORD PTR [rdx+0x14]
  408c79:	add    edx,0x1
  408c7c:	mov    DWORD PTR [rax+0x14],edx
  408c7f:	mov    rax,QWORD PTR [rbp-0x18]
  408c83:	mov    esi,0x4
  408c88:	mov    rdi,rax
  408c8b:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  408c90:	mov    QWORD PTR [rbp-0x8],rax
  408c94:	cmp    QWORD PTR [rbp-0x8],0x0
  408c99:	jne    408ca2 <flatcc_builder_offset_vector_push@@Base+0x95>
  408c9b:	mov    eax,0x0
  408ca0:	jmp    408caf <flatcc_builder_offset_vector_push@@Base+0xa2>
  408ca2:	mov    rax,QWORD PTR [rbp-0x8]
  408ca6:	mov    edx,DWORD PTR [rbp-0x1c]
  408ca9:	mov    DWORD PTR [rax],edx
  408cab:	mov    rax,QWORD PTR [rbp-0x8]
  408caf:	leave  
  408cb0:	ret    

0000000000408cb1 <flatcc_builder_append_offset_vector@@Base>:
  408cb1:	push   rbp
  408cb2:	mov    rbp,rsp
  408cb5:	sub    rsp,0x20
  408cb9:	mov    QWORD PTR [rbp-0x8],rdi
  408cbd:	mov    QWORD PTR [rbp-0x10],rsi
  408cc1:	mov    QWORD PTR [rbp-0x18],rdx
  408cc5:	mov    rax,QWORD PTR [rbp-0x8]
  408cc9:	mov    rax,QWORD PTR [rax+0x30]
  408ccd:	movzx  eax,WORD PTR [rax+0xe]
  408cd1:	cmp    ax,0x5
  408cd5:	je     408cf6 <flatcc_builder_append_offset_vector@@Base+0x45>
  408cd7:	lea    rcx,[rip+0xbf02]        # 414be0 <flatcc_builder_padding_base@@Base+0x840>
  408cde:	mov    edx,0x3b4
  408ce3:	lea    rsi,[rip+0xb8b6]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408cea:	lea    rdi,[rip+0xba67]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  408cf1:	call   403070 <__assert_fail@plt>
  408cf6:	mov    rax,QWORD PTR [rbp-0x18]
  408cfa:	mov    ecx,eax
  408cfc:	mov    rax,QWORD PTR [rbp-0x8]
  408d00:	mov    edx,0x3fffffff
  408d05:	mov    esi,ecx
  408d07:	mov    rdi,rax
  408d0a:	call   408972 <flatcc_builder_end_struct@@Base+0x8e>
  408d0f:	test   eax,eax
  408d11:	je     408d1a <flatcc_builder_append_offset_vector@@Base+0x69>
  408d13:	mov    eax,0x0
  408d18:	jmp    408d38 <flatcc_builder_append_offset_vector@@Base+0x87>
  408d1a:	mov    rax,QWORD PTR [rbp-0x18]
  408d1e:	lea    edx,[rax*4+0x0]
  408d25:	mov    rcx,QWORD PTR [rbp-0x10]
  408d29:	mov    rax,QWORD PTR [rbp-0x8]
  408d2d:	mov    rsi,rcx
  408d30:	mov    rdi,rax
  408d33:	call   406ae4 <flatcc_builder_default_alloc@@Base+0x329>
  408d38:	leave  
  408d39:	ret    

0000000000408d3a <flatcc_builder_extend_string@@Base>:
  408d3a:	push   rbp
  408d3b:	mov    rbp,rsp
  408d3e:	sub    rsp,0x10
  408d42:	mov    QWORD PTR [rbp-0x8],rdi
  408d46:	mov    QWORD PTR [rbp-0x10],rsi
  408d4a:	mov    rax,QWORD PTR [rbp-0x8]
  408d4e:	mov    rax,QWORD PTR [rax+0x30]
  408d52:	movzx  eax,WORD PTR [rax+0xe]
  408d56:	cmp    ax,0x6
  408d5a:	je     408d7b <flatcc_builder_extend_string@@Base+0x41>
  408d5c:	lea    rcx,[rip+0xbead]        # 414c10 <flatcc_builder_padding_base@@Base+0x870>
  408d63:	mov    edx,0x3bd
  408d68:	lea    rsi,[rip+0xb831]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408d6f:	lea    rdi,[rip+0xba1a]        # 414790 <flatcc_builder_padding_base@@Base+0x3f0>
  408d76:	call   403070 <__assert_fail@plt>
  408d7b:	mov    rax,QWORD PTR [rbp-0x10]
  408d7f:	mov    ecx,eax
  408d81:	mov    rax,QWORD PTR [rbp-0x8]
  408d85:	mov    edx,0xffffffff
  408d8a:	mov    esi,ecx
  408d8c:	mov    rdi,rax
  408d8f:	call   408972 <flatcc_builder_end_struct@@Base+0x8e>
  408d94:	test   eax,eax
  408d96:	je     408d9f <flatcc_builder_extend_string@@Base+0x65>
  408d98:	mov    eax,0x0
  408d9d:	jmp    408db3 <flatcc_builder_extend_string@@Base+0x79>
  408d9f:	mov    rax,QWORD PTR [rbp-0x10]
  408da3:	mov    edx,eax
  408da5:	mov    rax,QWORD PTR [rbp-0x8]
  408da9:	mov    esi,edx
  408dab:	mov    rdi,rax
  408dae:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  408db3:	leave  
  408db4:	ret    

0000000000408db5 <flatcc_builder_append_string@@Base>:
  408db5:	push   rbp
  408db6:	mov    rbp,rsp
  408db9:	sub    rsp,0x20
  408dbd:	mov    QWORD PTR [rbp-0x8],rdi
  408dc1:	mov    QWORD PTR [rbp-0x10],rsi
  408dc5:	mov    QWORD PTR [rbp-0x18],rdx
  408dc9:	mov    rax,QWORD PTR [rbp-0x8]
  408dcd:	mov    rax,QWORD PTR [rax+0x30]
  408dd1:	movzx  eax,WORD PTR [rax+0xe]
  408dd5:	cmp    ax,0x6
  408dd9:	je     408dfa <flatcc_builder_append_string@@Base+0x45>
  408ddb:	lea    rcx,[rip+0xbe4e]        # 414c30 <flatcc_builder_padding_base@@Base+0x890>
  408de2:	mov    edx,0x3c6
  408de7:	lea    rsi,[rip+0xb7b2]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408dee:	lea    rdi,[rip+0xb99b]        # 414790 <flatcc_builder_padding_base@@Base+0x3f0>
  408df5:	call   403070 <__assert_fail@plt>
  408dfa:	mov    rax,QWORD PTR [rbp-0x18]
  408dfe:	mov    ecx,eax
  408e00:	mov    rax,QWORD PTR [rbp-0x8]
  408e04:	mov    edx,0xffffffff
  408e09:	mov    esi,ecx
  408e0b:	mov    rdi,rax
  408e0e:	call   408972 <flatcc_builder_end_struct@@Base+0x8e>
  408e13:	test   eax,eax
  408e15:	je     408e1e <flatcc_builder_append_string@@Base+0x69>
  408e17:	mov    eax,0x0
  408e1c:	jmp    408e37 <flatcc_builder_append_string@@Base+0x82>
  408e1e:	mov    rax,QWORD PTR [rbp-0x18]
  408e22:	mov    edx,eax
  408e24:	mov    rcx,QWORD PTR [rbp-0x10]
  408e28:	mov    rax,QWORD PTR [rbp-0x8]
  408e2c:	mov    rsi,rcx
  408e2f:	mov    rdi,rax
  408e32:	call   406ae4 <flatcc_builder_default_alloc@@Base+0x329>
  408e37:	leave  
  408e38:	ret    

0000000000408e39 <flatcc_builder_append_string_str@@Base>:
  408e39:	push   rbp
  408e3a:	mov    rbp,rsp
  408e3d:	sub    rsp,0x10
  408e41:	mov    QWORD PTR [rbp-0x8],rdi
  408e45:	mov    QWORD PTR [rbp-0x10],rsi
  408e49:	mov    rax,QWORD PTR [rbp-0x10]
  408e4d:	mov    rdi,rax
  408e50:	call   403050 <strlen@plt>
  408e55:	mov    rdx,rax
  408e58:	mov    rcx,QWORD PTR [rbp-0x10]
  408e5c:	mov    rax,QWORD PTR [rbp-0x8]
  408e60:	mov    rsi,rcx
  408e63:	mov    rdi,rax
  408e66:	call   408db5 <flatcc_builder_append_string@@Base>
  408e6b:	leave  
  408e6c:	ret    

0000000000408e6d <flatcc_builder_append_string_strn@@Base>:
  408e6d:	push   rbp
  408e6e:	mov    rbp,rsp
  408e71:	sub    rsp,0x20
  408e75:	mov    QWORD PTR [rbp-0x8],rdi
  408e79:	mov    QWORD PTR [rbp-0x10],rsi
  408e7d:	mov    QWORD PTR [rbp-0x18],rdx
  408e81:	mov    rdx,QWORD PTR [rbp-0x18]
  408e85:	mov    rax,QWORD PTR [rbp-0x10]
  408e89:	mov    rsi,rdx
  408e8c:	mov    rdi,rax
  408e8f:	call   406775 <main@@Base+0x196>
  408e94:	mov    rdx,rax
  408e97:	mov    rcx,QWORD PTR [rbp-0x10]
  408e9b:	mov    rax,QWORD PTR [rbp-0x8]
  408e9f:	mov    rsi,rcx
  408ea2:	mov    rdi,rax
  408ea5:	call   408db5 <flatcc_builder_append_string@@Base>
  408eaa:	leave  
  408eab:	ret    

0000000000408eac <flatcc_builder_truncate_vector@@Base>:
  408eac:	push   rbp
  408ead:	mov    rbp,rsp
  408eb0:	sub    rsp,0x10
  408eb4:	mov    QWORD PTR [rbp-0x8],rdi
  408eb8:	mov    QWORD PTR [rbp-0x10],rsi
  408ebc:	mov    rax,QWORD PTR [rbp-0x8]
  408ec0:	mov    rax,QWORD PTR [rax+0x30]
  408ec4:	movzx  eax,WORD PTR [rax+0xe]
  408ec8:	cmp    ax,0x4
  408ecc:	je     408eed <flatcc_builder_truncate_vector@@Base+0x41>
  408ece:	lea    rcx,[rip+0xbd7b]        # 414c50 <flatcc_builder_padding_base@@Base+0x8b0>
  408ed5:	mov    edx,0x3d9
  408eda:	lea    rsi,[rip+0xb6bf]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408ee1:	lea    rdi,[rip+0xb800]        # 4146e8 <flatcc_builder_padding_base@@Base+0x348>
  408ee8:	call   403070 <__assert_fail@plt>
  408eed:	mov    rax,QWORD PTR [rbp-0x8]
  408ef1:	mov    rax,QWORD PTR [rax+0x30]
  408ef5:	mov    eax,DWORD PTR [rax+0x14]
  408ef8:	mov    eax,eax
  408efa:	cmp    rax,QWORD PTR [rbp-0x10]
  408efe:	jae    408f39 <flatcc_builder_truncate_vector@@Base+0x8d>
  408f00:	mov    rax,QWORD PTR [rbp-0x8]
  408f04:	mov    rax,QWORD PTR [rax+0x30]
  408f08:	mov    eax,DWORD PTR [rax+0x14]
  408f0b:	mov    eax,eax
  408f0d:	cmp    rax,QWORD PTR [rbp-0x10]
  408f11:	jae    408f32 <flatcc_builder_truncate_vector@@Base+0x86>
  408f13:	lea    rcx,[rip+0xbd36]        # 414c50 <flatcc_builder_padding_base@@Base+0x8b0>
  408f1a:	mov    edx,0x3da
  408f1f:	lea    rsi,[rip+0xb67a]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408f26:	lea    rdi,[rip+0xb893]        # 4147c0 <flatcc_builder_padding_base@@Base+0x420>
  408f2d:	call   403070 <__assert_fail@plt>
  408f32:	mov    eax,0xffffffff
  408f37:	jmp    408f7a <flatcc_builder_truncate_vector@@Base+0xce>
  408f39:	mov    rax,QWORD PTR [rbp-0x8]
  408f3d:	mov    rax,QWORD PTR [rax+0x30]
  408f41:	mov    rdx,QWORD PTR [rbp-0x8]
  408f45:	mov    rdx,QWORD PTR [rdx+0x30]
  408f49:	mov    edx,DWORD PTR [rdx+0x14]
  408f4c:	mov    rcx,QWORD PTR [rbp-0x10]
  408f50:	sub    edx,ecx
  408f52:	mov    DWORD PTR [rax+0x14],edx
  408f55:	mov    rax,QWORD PTR [rbp-0x8]
  408f59:	mov    rax,QWORD PTR [rax+0x30]
  408f5d:	mov    eax,DWORD PTR [rax+0x10]
  408f60:	mov    rdx,QWORD PTR [rbp-0x10]
  408f64:	imul   edx,eax
  408f67:	mov    rax,QWORD PTR [rbp-0x8]
  408f6b:	mov    esi,edx
  408f6d:	mov    rdi,rax
  408f70:	call   406a98 <flatcc_builder_default_alloc@@Base+0x2dd>
  408f75:	mov    eax,0x0
  408f7a:	leave  
  408f7b:	ret    

0000000000408f7c <flatcc_builder_truncate_offset_vector@@Base>:
  408f7c:	push   rbp
  408f7d:	mov    rbp,rsp
  408f80:	sub    rsp,0x10
  408f84:	mov    QWORD PTR [rbp-0x8],rdi
  408f88:	mov    QWORD PTR [rbp-0x10],rsi
  408f8c:	mov    rax,QWORD PTR [rbp-0x8]
  408f90:	mov    rax,QWORD PTR [rax+0x30]
  408f94:	movzx  eax,WORD PTR [rax+0xe]
  408f98:	cmp    ax,0x5
  408f9c:	je     408fbd <flatcc_builder_truncate_offset_vector@@Base+0x41>
  408f9e:	lea    rcx,[rip+0xbcdb]        # 414c80 <flatcc_builder_padding_base@@Base+0x8e0>
  408fa5:	mov    edx,0x3e2
  408faa:	lea    rsi,[rip+0xb5ef]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408fb1:	lea    rdi,[rip+0xb7a0]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  408fb8:	call   403070 <__assert_fail@plt>
  408fbd:	mov    rax,QWORD PTR [rbp-0x8]
  408fc1:	mov    rax,QWORD PTR [rax+0x30]
  408fc5:	mov    eax,DWORD PTR [rax+0x14]
  408fc8:	mov    rdx,QWORD PTR [rbp-0x10]
  408fcc:	cmp    eax,edx
  408fce:	jae    409009 <flatcc_builder_truncate_offset_vector@@Base+0x8d>
  408fd0:	mov    rax,QWORD PTR [rbp-0x8]
  408fd4:	mov    rax,QWORD PTR [rax+0x30]
  408fd8:	mov    eax,DWORD PTR [rax+0x14]
  408fdb:	mov    rdx,QWORD PTR [rbp-0x10]
  408fdf:	cmp    eax,edx
  408fe1:	jae    409002 <flatcc_builder_truncate_offset_vector@@Base+0x86>
  408fe3:	lea    rcx,[rip+0xbc96]        # 414c80 <flatcc_builder_padding_base@@Base+0x8e0>
  408fea:	mov    edx,0x3e3
  408fef:	lea    rsi,[rip+0xb5aa]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  408ff6:	lea    rdi,[rip+0xb7eb]        # 4147e8 <flatcc_builder_padding_base@@Base+0x448>
  408ffd:	call   403070 <__assert_fail@plt>
  409002:	mov    eax,0xffffffff
  409007:	jmp    40904a <flatcc_builder_truncate_offset_vector@@Base+0xce>
  409009:	mov    rax,QWORD PTR [rbp-0x8]
  40900d:	mov    rax,QWORD PTR [rax+0x30]
  409011:	mov    rdx,QWORD PTR [rbp-0x8]
  409015:	mov    rdx,QWORD PTR [rdx+0x30]
  409019:	mov    edx,DWORD PTR [rdx+0x14]
  40901c:	mov    rcx,QWORD PTR [rbp-0x10]
  409020:	sub    edx,ecx
  409022:	mov    DWORD PTR [rax+0x14],edx
  409025:	mov    rax,QWORD PTR [rbp-0x8]
  409029:	mov    rax,QWORD PTR [rax+0x30]
  40902d:	mov    eax,DWORD PTR [rax+0x10]
  409030:	mov    rdx,QWORD PTR [rbp-0x10]
  409034:	imul   edx,eax
  409037:	mov    rax,QWORD PTR [rbp-0x8]
  40903b:	mov    esi,edx
  40903d:	mov    rdi,rax
  409040:	call   406a98 <flatcc_builder_default_alloc@@Base+0x2dd>
  409045:	mov    eax,0x0
  40904a:	leave  
  40904b:	ret    

000000000040904c <flatcc_builder_truncate_string@@Base>:
  40904c:	push   rbp
  40904d:	mov    rbp,rsp
  409050:	sub    rsp,0x10
  409054:	mov    QWORD PTR [rbp-0x8],rdi
  409058:	mov    QWORD PTR [rbp-0x10],rsi
  40905c:	mov    rax,QWORD PTR [rbp-0x8]
  409060:	mov    rax,QWORD PTR [rax+0x30]
  409064:	movzx  eax,WORD PTR [rax+0xe]
  409068:	cmp    ax,0x6
  40906c:	je     40908d <flatcc_builder_truncate_string@@Base+0x41>
  40906e:	lea    rcx,[rip+0xbc3b]        # 414cb0 <flatcc_builder_padding_base@@Base+0x910>
  409075:	mov    edx,0x3eb
  40907a:	lea    rsi,[rip+0xb51f]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409081:	lea    rdi,[rip+0xb708]        # 414790 <flatcc_builder_padding_base@@Base+0x3f0>
  409088:	call   403070 <__assert_fail@plt>
  40908d:	mov    rax,QWORD PTR [rbp-0x8]
  409091:	mov    rax,QWORD PTR [rax+0x30]
  409095:	mov    eax,DWORD PTR [rax+0x14]
  409098:	mov    eax,eax
  40909a:	cmp    rax,QWORD PTR [rbp-0x10]
  40909e:	jae    4090d9 <flatcc_builder_truncate_string@@Base+0x8d>
  4090a0:	mov    rax,QWORD PTR [rbp-0x8]
  4090a4:	mov    rax,QWORD PTR [rax+0x30]
  4090a8:	mov    eax,DWORD PTR [rax+0x14]
  4090ab:	mov    eax,eax
  4090ad:	cmp    rax,QWORD PTR [rbp-0x10]
  4090b1:	jae    4090d2 <flatcc_builder_truncate_string@@Base+0x86>
  4090b3:	lea    rcx,[rip+0xbbf6]        # 414cb0 <flatcc_builder_padding_base@@Base+0x910>
  4090ba:	mov    edx,0x3ec
  4090bf:	lea    rsi,[rip+0xb4da]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4090c6:	lea    rdi,[rip+0xb75b]        # 414828 <flatcc_builder_padding_base@@Base+0x488>
  4090cd:	call   403070 <__assert_fail@plt>
  4090d2:	mov    eax,0xffffffff
  4090d7:	jmp    40910e <flatcc_builder_truncate_string@@Base+0xc2>
  4090d9:	mov    rax,QWORD PTR [rbp-0x8]
  4090dd:	mov    rax,QWORD PTR [rax+0x30]
  4090e1:	mov    rdx,QWORD PTR [rbp-0x8]
  4090e5:	mov    rdx,QWORD PTR [rdx+0x30]
  4090e9:	mov    edx,DWORD PTR [rdx+0x14]
  4090ec:	mov    rcx,QWORD PTR [rbp-0x10]
  4090f0:	sub    edx,ecx
  4090f2:	mov    DWORD PTR [rax+0x14],edx
  4090f5:	mov    rax,QWORD PTR [rbp-0x10]
  4090f9:	mov    edx,eax
  4090fb:	mov    rax,QWORD PTR [rbp-0x8]
  4090ff:	mov    esi,edx
  409101:	mov    rdi,rax
  409104:	call   406a98 <flatcc_builder_default_alloc@@Base+0x2dd>
  409109:	mov    eax,0x0
  40910e:	leave  
  40910f:	ret    

0000000000409110 <flatcc_builder_start_vector@@Base>:
  409110:	push   rbp
  409111:	mov    rbp,rsp
  409114:	sub    rsp,0x20
  409118:	mov    QWORD PTR [rbp-0x8],rdi
  40911c:	mov    QWORD PTR [rbp-0x10],rsi
  409120:	mov    eax,edx
  409122:	mov    QWORD PTR [rbp-0x20],rcx
  409126:	mov    WORD PTR [rbp-0x14],ax
  40912a:	lea    rax,[rbp-0x14]
  40912e:	mov    esi,0x4
  409133:	mov    rdi,rax
  409136:	call   407436 <flatcc_builder_clear@@Base+0xc7>
  40913b:	movzx  eax,WORD PTR [rbp-0x14]
  40913f:	movzx  edx,ax
  409142:	mov    rax,QWORD PTR [rbp-0x8]
  409146:	mov    esi,edx
  409148:	mov    rdi,rax
  40914b:	call   40771e <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  409150:	test   eax,eax
  409152:	je     40915b <flatcc_builder_start_vector@@Base+0x4b>
  409154:	mov    eax,0xffffffff
  409159:	jmp    4091ac <flatcc_builder_start_vector@@Base+0x9c>
  40915b:	mov    rax,QWORD PTR [rbp-0x8]
  40915f:	mov    rax,QWORD PTR [rax+0x30]
  409163:	mov    rdx,QWORD PTR [rbp-0x10]
  409167:	mov    DWORD PTR [rax+0x10],edx
  40916a:	mov    rax,QWORD PTR [rbp-0x8]
  40916e:	mov    rax,QWORD PTR [rax+0x30]
  409172:	mov    DWORD PTR [rax+0x14],0x0
  409179:	mov    rax,QWORD PTR [rbp-0x8]
  40917d:	mov    rax,QWORD PTR [rax+0x30]
  409181:	mov    rdx,QWORD PTR [rbp-0x20]
  409185:	mov    DWORD PTR [rax+0x18],edx
  409188:	mov    rax,QWORD PTR [rbp-0x8]
  40918c:	mov    rax,QWORD PTR [rax+0x30]
  409190:	mov    WORD PTR [rax+0xe],0x4
  409196:	mov    rax,QWORD PTR [rbp-0x8]
  40919a:	mov    esi,0xfffffffc
  40919f:	mov    rdi,rax
  4091a2:	call   406928 <flatcc_builder_default_alloc@@Base+0x16d>
  4091a7:	mov    eax,0x0
  4091ac:	leave  
  4091ad:	ret    

00000000004091ae <flatcc_builder_start_offset_vector@@Base>:
  4091ae:	push   rbp
  4091af:	mov    rbp,rsp
  4091b2:	sub    rsp,0x10
  4091b6:	mov    QWORD PTR [rbp-0x8],rdi
  4091ba:	mov    rax,QWORD PTR [rbp-0x8]
  4091be:	mov    esi,0x4
  4091c3:	mov    rdi,rax
  4091c6:	call   40771e <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4091cb:	test   eax,eax
  4091cd:	je     4091d6 <flatcc_builder_start_offset_vector@@Base+0x28>
  4091cf:	mov    eax,0xffffffff
  4091d4:	jmp    409218 <flatcc_builder_start_offset_vector@@Base+0x6a>
  4091d6:	mov    rax,QWORD PTR [rbp-0x8]
  4091da:	mov    rax,QWORD PTR [rax+0x30]
  4091de:	mov    DWORD PTR [rax+0x10],0x4
  4091e5:	mov    rax,QWORD PTR [rbp-0x8]
  4091e9:	mov    rax,QWORD PTR [rax+0x30]
  4091ed:	mov    DWORD PTR [rax+0x14],0x0
  4091f4:	mov    rax,QWORD PTR [rbp-0x8]
  4091f8:	mov    rax,QWORD PTR [rax+0x30]
  4091fc:	mov    WORD PTR [rax+0xe],0x5
  409202:	mov    rax,QWORD PTR [rbp-0x8]
  409206:	mov    esi,0xfffffffc
  40920b:	mov    rdi,rax
  40920e:	call   406928 <flatcc_builder_default_alloc@@Base+0x16d>
  409213:	mov    eax,0x0
  409218:	leave  
  409219:	ret    

000000000040921a <flatcc_builder_create_offset_vector@@Base>:
  40921a:	push   rbp
  40921b:	mov    rbp,rsp
  40921e:	sub    rsp,0x30
  409222:	mov    QWORD PTR [rbp-0x18],rdi
  409226:	mov    QWORD PTR [rbp-0x20],rsi
  40922a:	mov    QWORD PTR [rbp-0x28],rdx
  40922e:	mov    rax,QWORD PTR [rbp-0x18]
  409232:	mov    rdi,rax
  409235:	call   4091ae <flatcc_builder_start_offset_vector@@Base>
  40923a:	test   eax,eax
  40923c:	je     409245 <flatcc_builder_create_offset_vector@@Base+0x2b>
  40923e:	mov    eax,0x0
  409243:	jmp    409295 <flatcc_builder_create_offset_vector@@Base+0x7b>
  409245:	mov    rdx,QWORD PTR [rbp-0x28]
  409249:	mov    rax,QWORD PTR [rbp-0x18]
  40924d:	mov    rsi,rdx
  409250:	mov    rdi,rax
  409253:	call   408bbe <flatcc_builder_extend_offset_vector@@Base>
  409258:	mov    QWORD PTR [rbp-0x8],rax
  40925c:	cmp    QWORD PTR [rbp-0x8],0x0
  409261:	jne    40926a <flatcc_builder_create_offset_vector@@Base+0x50>
  409263:	mov    eax,0x0
  409268:	jmp    409295 <flatcc_builder_create_offset_vector@@Base+0x7b>
  40926a:	mov    rax,QWORD PTR [rbp-0x28]
  40926e:	lea    rdx,[rax*4+0x0]
  409276:	mov    rcx,QWORD PTR [rbp-0x20]
  40927a:	mov    rax,QWORD PTR [rbp-0x8]
  40927e:	mov    rsi,rcx
  409281:	mov    rdi,rax
  409284:	call   4030c0 <memcpy@plt>
  409289:	mov    rax,QWORD PTR [rbp-0x18]
  40928d:	mov    rdi,rax
  409290:	call   40a7a0 <flatcc_builder_end_offset_vector@@Base>
  409295:	leave  
  409296:	ret    

0000000000409297 <flatcc_builder_start_string@@Base>:
  409297:	push   rbp
  409298:	mov    rbp,rsp
  40929b:	sub    rsp,0x10
  40929f:	mov    QWORD PTR [rbp-0x8],rdi
  4092a3:	mov    rax,QWORD PTR [rbp-0x8]
  4092a7:	mov    esi,0x1
  4092ac:	mov    rdi,rax
  4092af:	call   40771e <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  4092b4:	test   eax,eax
  4092b6:	je     4092bf <flatcc_builder_start_string@@Base+0x28>
  4092b8:	mov    eax,0xffffffff
  4092bd:	jmp    409301 <flatcc_builder_start_string@@Base+0x6a>
  4092bf:	mov    rax,QWORD PTR [rbp-0x8]
  4092c3:	mov    rax,QWORD PTR [rax+0x30]
  4092c7:	mov    DWORD PTR [rax+0x10],0x1
  4092ce:	mov    rax,QWORD PTR [rbp-0x8]
  4092d2:	mov    rax,QWORD PTR [rax+0x30]
  4092d6:	mov    DWORD PTR [rax+0x14],0x0
  4092dd:	mov    rax,QWORD PTR [rbp-0x8]
  4092e1:	mov    rax,QWORD PTR [rax+0x30]
  4092e5:	mov    WORD PTR [rax+0xe],0x6
  4092eb:	mov    rax,QWORD PTR [rbp-0x8]
  4092ef:	mov    esi,0xfffffffc
  4092f4:	mov    rdi,rax
  4092f7:	call   406928 <flatcc_builder_default_alloc@@Base+0x16d>
  4092fc:	mov    eax,0x0
  409301:	leave  
  409302:	ret    

0000000000409303 <flatcc_builder_reserve_table@@Base>:
  409303:	push   rbp
  409304:	mov    rbp,rsp
  409307:	sub    rsp,0x10
  40930b:	mov    QWORD PTR [rbp-0x8],rdi
  40930f:	mov    DWORD PTR [rbp-0xc],esi
  409312:	cmp    DWORD PTR [rbp-0xc],0x0
  409316:	jns    409337 <flatcc_builder_reserve_table@@Base+0x34>
  409318:	lea    rcx,[rip+0xb9b1]        # 414cd0 <flatcc_builder_padding_base@@Base+0x930>
  40931f:	mov    edx,0x429
  409324:	lea    rsi,[rip+0xb275]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40932b:	lea    rdi,[rip+0xb518]        # 41484a <flatcc_builder_padding_base@@Base+0x4aa>
  409332:	call   403070 <__assert_fail@plt>
  409337:	mov    edx,DWORD PTR [rbp-0xc]
  40933a:	mov    rax,QWORD PTR [rbp-0x8]
  40933e:	mov    esi,edx
  409340:	mov    rdi,rax
  409343:	call   406d78 <flatcc_builder_default_alloc@@Base+0x5bd>
  409348:	leave  
  409349:	ret    

000000000040934a <flatcc_builder_start_table@@Base>:
  40934a:	push   rbp
  40934b:	mov    rbp,rsp
  40934e:	sub    rsp,0x10
  409352:	mov    QWORD PTR [rbp-0x8],rdi
  409356:	mov    DWORD PTR [rbp-0xc],esi
  409359:	mov    rax,QWORD PTR [rbp-0x8]
  40935d:	mov    esi,0x4
  409362:	mov    rdi,rax
  409365:	call   40771e <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40936a:	test   eax,eax
  40936c:	je     409378 <flatcc_builder_start_table@@Base+0x2e>
  40936e:	mov    eax,0xffffffff
  409373:	jmp    409448 <flatcc_builder_start_table@@Base+0xfe>
  409378:	mov    rax,QWORD PTR [rbp-0x8]
  40937c:	mov    rax,QWORD PTR [rax+0x30]
  409380:	mov    rdx,QWORD PTR [rbp-0x8]
  409384:	mov    rdx,QWORD PTR [rdx+0x8]
  409388:	mov    rcx,rdx
  40938b:	mov    rdx,QWORD PTR [rbp-0x8]
  40938f:	mov    rdx,QWORD PTR [rdx+0x58]
  409393:	sub    rcx,rdx
  409396:	mov    rdx,rcx
  409399:	mov    DWORD PTR [rax+0x10],edx
  40939c:	mov    rax,QWORD PTR [rbp-0x8]
  4093a0:	mov    rax,QWORD PTR [rax+0x30]
  4093a4:	mov    rdx,QWORD PTR [rbp-0x8]
  4093a8:	mov    rdx,QWORD PTR [rdx]
  4093ab:	mov    rcx,rdx
  4093ae:	mov    rdx,QWORD PTR [rbp-0x8]
  4093b2:	mov    rdx,QWORD PTR [rdx+0x88]
  4093b9:	sub    rcx,rdx
  4093bc:	mov    rdx,rcx
  4093bf:	mov    DWORD PTR [rax+0x14],edx
  4093c2:	mov    rax,QWORD PTR [rbp-0x8]
  4093c6:	mov    rax,QWORD PTR [rax+0x30]
  4093ca:	mov    rdx,QWORD PTR [rbp-0x8]
  4093ce:	mov    edx,DWORD PTR [rdx+0x14]
  4093d1:	mov    DWORD PTR [rax+0x18],edx
  4093d4:	mov    rax,QWORD PTR [rbp-0x8]
  4093d8:	mov    rax,QWORD PTR [rax+0x30]
  4093dc:	mov    rdx,QWORD PTR [rbp-0x8]
  4093e0:	movzx  edx,WORD PTR [rdx+0x10]
  4093e4:	mov    WORD PTR [rax+0x1c],dx
  4093e8:	mov    rax,QWORD PTR [rbp-0x8]
  4093ec:	mov    DWORD PTR [rax+0x14],0x0
  4093f3:	mov    rax,QWORD PTR [rbp-0x8]
  4093f7:	mov    DWORD PTR [rax+0x14],0x2f693b52
  4093fe:	mov    rax,QWORD PTR [rbp-0x8]
  409402:	mov    WORD PTR [rax+0x10],0x0
  409408:	mov    rax,QWORD PTR [rbp-0x8]
  40940c:	mov    rax,QWORD PTR [rax+0x30]
  409410:	mov    WORD PTR [rax+0xe],0x3
  409416:	mov    edx,DWORD PTR [rbp-0xc]
  409419:	mov    rax,QWORD PTR [rbp-0x8]
  40941d:	mov    esi,edx
  40941f:	mov    rdi,rax
  409422:	call   406d78 <flatcc_builder_default_alloc@@Base+0x5bd>
  409427:	test   eax,eax
  409429:	je     409432 <flatcc_builder_start_table@@Base+0xe8>
  40942b:	mov    eax,0xffffffff
  409430:	jmp    409448 <flatcc_builder_start_table@@Base+0xfe>
  409432:	mov    rax,QWORD PTR [rbp-0x8]
  409436:	mov    esi,0xfffc
  40943b:	mov    rdi,rax
  40943e:	call   406928 <flatcc_builder_default_alloc@@Base+0x16d>
  409443:	mov    eax,0x0
  409448:	leave  
  409449:	ret    

000000000040944a <flatcc_builder_create_vtable@@Base>:
  40944a:	push   rbp
  40944b:	mov    rbp,rsp
  40944e:	sub    rsp,0xd0
  409455:	mov    QWORD PTR [rbp-0xb8],rdi
  40945c:	mov    QWORD PTR [rbp-0xc0],rsi
  409463:	mov    eax,edx
  409465:	mov    WORD PTR [rbp-0xc4],ax
  40946c:	mov    rax,QWORD PTR fs:0x28
  409475:	mov    QWORD PTR [rbp-0x8],rax
  409479:	xor    eax,eax
  40947b:	mov    QWORD PTR [rbp-0xa0],0x0
  409486:	mov    DWORD PTR [rbp-0x98],0x0
  409490:	cmp    WORD PTR [rbp-0xc4],0x0
  409498:	je     409502 <flatcc_builder_create_vtable@@Base+0xb8>
  40949a:	mov    rdx,QWORD PTR [rbp-0xa0]
  4094a1:	movzx  eax,WORD PTR [rbp-0xc4]
  4094a8:	add    rax,rdx
  4094ab:	mov    QWORD PTR [rbp-0xa0],rax
  4094b2:	mov    eax,DWORD PTR [rbp-0x98]
  4094b8:	cdqe   
  4094ba:	shl    rax,0x4
  4094be:	add    rax,rbp
  4094c1:	lea    rdx,[rax-0x90]
  4094c8:	mov    rax,QWORD PTR [rbp-0xc0]
  4094cf:	mov    QWORD PTR [rdx],rax
  4094d2:	mov    edx,DWORD PTR [rbp-0x98]
  4094d8:	movzx  eax,WORD PTR [rbp-0xc4]
  4094df:	movsxd rdx,edx
  4094e2:	shl    rdx,0x4
  4094e6:	add    rdx,rbp
  4094e9:	sub    rdx,0x88
  4094f0:	mov    QWORD PTR [rdx],rax
  4094f3:	mov    eax,DWORD PTR [rbp-0x98]
  4094f9:	add    eax,0x1
  4094fc:	mov    DWORD PTR [rbp-0x98],eax
  409502:	mov    rax,QWORD PTR [rbp-0xb8]
  409509:	mov    eax,DWORD PTR [rax+0x100]
  40950f:	test   eax,eax
  409511:	jne    409553 <flatcc_builder_create_vtable@@Base+0x109>
  409513:	mov    rax,QWORD PTR [rbp-0xb8]
  40951a:	mov    eax,DWORD PTR [rax+0x124]
  409520:	test   eax,eax
  409522:	jne    409553 <flatcc_builder_create_vtable@@Base+0x109>
  409524:	lea    rdx,[rbp-0xa0]
  40952b:	mov    rax,QWORD PTR [rbp-0xb8]
  409532:	mov    rsi,rdx
  409535:	mov    rdi,rax
  409538:	call   407ae8 <flatcc_builder_get_user_frame_ptr@@Base+0x3ec>
  40953d:	mov    DWORD PTR [rbp-0xa4],eax
  409543:	cmp    DWORD PTR [rbp-0xa4],0x0
  40954a:	jne    409589 <flatcc_builder_create_vtable@@Base+0x13f>
  40954c:	mov    eax,0x0
  409551:	jmp    40958f <flatcc_builder_create_vtable@@Base+0x145>
  409553:	lea    rdx,[rbp-0xa0]
  40955a:	mov    rax,QWORD PTR [rbp-0xb8]
  409561:	mov    rsi,rdx
  409564:	mov    rdi,rax
  409567:	call   407a09 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40956c:	mov    DWORD PTR [rbp-0xa4],eax
  409572:	cmp    DWORD PTR [rbp-0xa4],0x0
  409579:	jne    409582 <flatcc_builder_create_vtable@@Base+0x138>
  40957b:	mov    eax,0x0
  409580:	jmp    40958f <flatcc_builder_create_vtable@@Base+0x145>
  409582:	add    DWORD PTR [rbp-0xa4],0x1
  409589:	mov    eax,DWORD PTR [rbp-0xa4]
  40958f:	mov    rcx,QWORD PTR [rbp-0x8]
  409593:	xor    rcx,QWORD PTR fs:0x28
  40959c:	je     4095a3 <flatcc_builder_create_vtable@@Base+0x159>
  40959e:	call   403060 <__stack_chk_fail@plt>
  4095a3:	leave  
  4095a4:	ret    

00000000004095a5 <flatcc_builder_create_cached_vtable@@Base>:
  4095a5:	push   rbp
  4095a6:	mov    rbp,rsp
  4095a9:	sub    rsp,0x50
  4095ad:	mov    QWORD PTR [rbp-0x38],rdi
  4095b1:	mov    QWORD PTR [rbp-0x40],rsi
  4095b5:	mov    eax,edx
  4095b7:	mov    DWORD PTR [rbp-0x48],ecx
  4095ba:	mov    WORD PTR [rbp-0x44],ax
  4095be:	mov    edx,DWORD PTR [rbp-0x48]
  4095c1:	mov    rax,QWORD PTR [rbp-0x38]
  4095c5:	mov    esi,edx
  4095c7:	mov    rdi,rax
  4095ca:	call   406f85 <flatcc_builder_default_alloc@@Base+0x7ca>
  4095cf:	mov    QWORD PTR [rbp-0x18],rax
  4095d3:	cmp    QWORD PTR [rbp-0x18],0x0
  4095d8:	jne    4095e4 <flatcc_builder_create_cached_vtable@@Base+0x3f>
  4095da:	mov    eax,0x0
  4095df:	jmp    409885 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4095e4:	mov    rax,QWORD PTR [rbp-0x18]
  4095e8:	mov    QWORD PTR [rbp-0x20],rax
  4095ec:	mov    rax,QWORD PTR [rbp-0x20]
  4095f0:	mov    eax,DWORD PTR [rax]
  4095f2:	mov    DWORD PTR [rbp-0x2c],eax
  4095f5:	mov    QWORD PTR [rbp-0x28],0x0
  4095fd:	jmp    4096dc <flatcc_builder_create_cached_vtable@@Base+0x137>
  409602:	mov    rax,QWORD PTR [rbp-0x38]
  409606:	mov    rdx,QWORD PTR [rax+0xb8]
  40960d:	mov    eax,DWORD PTR [rbp-0x2c]
  409610:	add    rax,rdx
  409613:	mov    QWORD PTR [rbp-0x10],rax
  409617:	mov    rax,QWORD PTR [rbp-0x38]
  40961b:	mov    rdx,QWORD PTR [rax+0x78]
  40961f:	mov    rax,QWORD PTR [rbp-0x10]
  409623:	mov    eax,DWORD PTR [rax+0x8]
  409626:	mov    eax,eax
  409628:	add    rax,rdx
  40962b:	mov    QWORD PTR [rbp-0x8],rax
  40962f:	mov    rax,QWORD PTR [rbp-0x8]
  409633:	movzx  eax,WORD PTR [rax]
  409636:	cmp    ax,WORD PTR [rbp-0x44]
  40963a:	jne    409657 <flatcc_builder_create_cached_vtable@@Base+0xb2>
  40963c:	movzx  edx,WORD PTR [rbp-0x44]
  409640:	mov    rcx,QWORD PTR [rbp-0x8]
  409644:	mov    rax,QWORD PTR [rbp-0x40]
  409648:	mov    rsi,rcx
  40964b:	mov    rdi,rax
  40964e:	call   4030a0 <memcmp@plt>
  409653:	test   eax,eax
  409655:	je     40966f <flatcc_builder_create_cached_vtable@@Base+0xca>
  409657:	mov    rax,QWORD PTR [rbp-0x10]
  40965b:	add    rax,0xc
  40965f:	mov    QWORD PTR [rbp-0x20],rax
  409663:	mov    rax,QWORD PTR [rbp-0x10]
  409667:	mov    eax,DWORD PTR [rax+0xc]
  40966a:	mov    DWORD PTR [rbp-0x2c],eax
  40966d:	jmp    4096dc <flatcc_builder_create_cached_vtable@@Base+0x137>
  40966f:	mov    rax,QWORD PTR [rbp-0x10]
  409673:	mov    edx,DWORD PTR [rax+0x4]
  409676:	mov    rax,QWORD PTR [rbp-0x38]
  40967a:	mov    eax,DWORD PTR [rax+0x100]
  409680:	cmp    edx,eax
  409682:	je     4096a4 <flatcc_builder_create_cached_vtable@@Base+0xff>
  409684:	mov    rax,QWORD PTR [rbp-0x10]
  409688:	mov    QWORD PTR [rbp-0x28],rax
  40968c:	mov    rax,QWORD PTR [rbp-0x10]
  409690:	add    rax,0xc
  409694:	mov    QWORD PTR [rbp-0x20],rax
  409698:	mov    rax,QWORD PTR [rbp-0x10]
  40969c:	mov    eax,DWORD PTR [rax+0xc]
  40969f:	mov    DWORD PTR [rbp-0x2c],eax
  4096a2:	jmp    4096dc <flatcc_builder_create_cached_vtable@@Base+0x137>
  4096a4:	mov    rax,QWORD PTR [rbp-0x20]
  4096a8:	cmp    rax,QWORD PTR [rbp-0x18]
  4096ac:	je     4096d1 <flatcc_builder_create_cached_vtable@@Base+0x12c>
  4096ae:	mov    rax,QWORD PTR [rbp-0x10]
  4096b2:	mov    edx,DWORD PTR [rax+0xc]
  4096b5:	mov    rax,QWORD PTR [rbp-0x20]
  4096b9:	mov    DWORD PTR [rax],edx
  4096bb:	mov    rax,QWORD PTR [rbp-0x18]
  4096bf:	mov    edx,DWORD PTR [rax]
  4096c1:	mov    rax,QWORD PTR [rbp-0x10]
  4096c5:	mov    DWORD PTR [rax+0xc],edx
  4096c8:	mov    rax,QWORD PTR [rbp-0x18]
  4096cc:	mov    edx,DWORD PTR [rbp-0x2c]
  4096cf:	mov    DWORD PTR [rax],edx
  4096d1:	mov    rax,QWORD PTR [rbp-0x10]
  4096d5:	mov    eax,DWORD PTR [rax]
  4096d7:	jmp    409885 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4096dc:	cmp    DWORD PTR [rbp-0x2c],0x0
  4096e0:	jne    409602 <flatcc_builder_create_cached_vtable@@Base+0x5d>
  4096e6:	mov    rax,QWORD PTR [rbp-0x38]
  4096ea:	mov    eax,DWORD PTR [rax+0xe4]
  4096f0:	mov    edx,eax
  4096f2:	mov    rax,QWORD PTR [rbp-0x38]
  4096f6:	mov    r8d,0x0
  4096fc:	mov    ecx,0x10
  409701:	mov    esi,0x6
  409706:	mov    rdi,rax
  409709:	call   406cc7 <flatcc_builder_default_alloc@@Base+0x50c>
  40970e:	mov    QWORD PTR [rbp-0x10],rax
  409712:	cmp    QWORD PTR [rbp-0x10],0x0
  409717:	jne    409723 <flatcc_builder_create_cached_vtable@@Base+0x17e>
  409719:	mov    eax,0x0
  40971e:	jmp    409885 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  409723:	mov    rax,QWORD PTR [rbp-0x38]
  409727:	mov    eax,DWORD PTR [rax+0xe4]
  40972d:	mov    DWORD PTR [rbp-0x2c],eax
  409730:	mov    rax,QWORD PTR [rbp-0x38]
  409734:	mov    eax,DWORD PTR [rax+0xe4]
  40973a:	lea    edx,[rax+0x10]
  40973d:	mov    rax,QWORD PTR [rbp-0x38]
  409741:	mov    DWORD PTR [rax+0xe4],edx
  409747:	mov    rax,QWORD PTR [rbp-0x38]
  40974b:	mov    edx,DWORD PTR [rax+0x100]
  409751:	mov    rax,QWORD PTR [rbp-0x10]
  409755:	mov    DWORD PTR [rax+0x4],edx
  409758:	mov    rax,QWORD PTR [rbp-0x18]
  40975c:	mov    edx,DWORD PTR [rax]
  40975e:	mov    rax,QWORD PTR [rbp-0x10]
  409762:	mov    DWORD PTR [rax+0xc],edx
  409765:	mov    rax,QWORD PTR [rbp-0x18]
  409769:	mov    edx,DWORD PTR [rbp-0x2c]
  40976c:	mov    DWORD PTR [rax],edx
  40976e:	movzx  edx,WORD PTR [rbp-0x44]
  409772:	mov    rcx,QWORD PTR [rbp-0x40]
  409776:	mov    rax,QWORD PTR [rbp-0x38]
  40977a:	mov    rsi,rcx
  40977d:	mov    rdi,rax
  409780:	call   40944a <flatcc_builder_create_vtable@@Base>
  409785:	mov    edx,eax
  409787:	mov    rax,QWORD PTR [rbp-0x10]
  40978b:	mov    DWORD PTR [rax],edx
  40978d:	mov    rax,QWORD PTR [rbp-0x10]
  409791:	mov    eax,DWORD PTR [rax]
  409793:	test   eax,eax
  409795:	jne    4097a1 <flatcc_builder_create_cached_vtable@@Base+0x1fc>
  409797:	mov    eax,0x0
  40979c:	jmp    409885 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  4097a1:	cmp    QWORD PTR [rbp-0x28],0x0
  4097a6:	je     4097bb <flatcc_builder_create_cached_vtable@@Base+0x216>
  4097a8:	mov    rax,QWORD PTR [rbp-0x28]
  4097ac:	mov    edx,DWORD PTR [rax+0x8]
  4097af:	mov    rax,QWORD PTR [rbp-0x10]
  4097b3:	mov    DWORD PTR [rax+0x8],edx
  4097b6:	jmp    40987f <flatcc_builder_create_cached_vtable@@Base+0x2da>
  4097bb:	mov    rax,QWORD PTR [rbp-0x38]
  4097bf:	mov    rax,QWORD PTR [rax+0x118]
  4097c6:	test   rax,rax
  4097c9:	je     4097fe <flatcc_builder_create_cached_vtable@@Base+0x259>
  4097cb:	mov    rax,QWORD PTR [rbp-0x38]
  4097cf:	mov    rdx,QWORD PTR [rax+0x118]
  4097d6:	mov    rax,QWORD PTR [rbp-0x38]
  4097da:	mov    ecx,DWORD PTR [rax+0xe0]
  4097e0:	movzx  eax,WORD PTR [rbp-0x44]
  4097e4:	add    eax,ecx
  4097e6:	mov    eax,eax
  4097e8:	cmp    rdx,rax
  4097eb:	jae    4097fe <flatcc_builder_create_cached_vtable@@Base+0x259>
  4097ed:	mov    rax,QWORD PTR [rbp-0x38]
  4097f1:	mov    rdi,rax
  4097f4:	call   406ff9 <flatcc_builder_flush_vtable_cache@@Base>
  4097f9:	jmp    40987f <flatcc_builder_create_cached_vtable@@Base+0x2da>
  4097fe:	movzx  edx,WORD PTR [rbp-0x44]
  409802:	mov    rax,QWORD PTR [rbp-0x38]
  409806:	mov    eax,DWORD PTR [rax+0xe0]
  40980c:	mov    esi,eax
  40980e:	mov    rax,QWORD PTR [rbp-0x38]
  409812:	mov    r8d,0x0
  409818:	mov    rcx,rdx
  40981b:	mov    rdx,rsi
  40981e:	mov    esi,0x2
  409823:	mov    rdi,rax
  409826:	call   406cc7 <flatcc_builder_default_alloc@@Base+0x50c>
  40982b:	mov    QWORD PTR [rbp-0x8],rax
  40982f:	cmp    QWORD PTR [rbp-0x8],0x0
  409834:	jne    40983d <flatcc_builder_create_cached_vtable@@Base+0x298>
  409836:	mov    eax,0xffffffff
  40983b:	jmp    409885 <flatcc_builder_create_cached_vtable@@Base+0x2e0>
  40983d:	mov    rax,QWORD PTR [rbp-0x38]
  409841:	mov    edx,DWORD PTR [rax+0xe0]
  409847:	mov    rax,QWORD PTR [rbp-0x10]
  40984b:	mov    DWORD PTR [rax+0x8],edx
  40984e:	mov    rax,QWORD PTR [rbp-0x38]
  409852:	mov    edx,DWORD PTR [rax+0xe0]
  409858:	movzx  eax,WORD PTR [rbp-0x44]
  40985c:	add    edx,eax
  40985e:	mov    rax,QWORD PTR [rbp-0x38]
  409862:	mov    DWORD PTR [rax+0xe0],edx
  409868:	movzx  edx,WORD PTR [rbp-0x44]
  40986c:	mov    rcx,QWORD PTR [rbp-0x40]
  409870:	mov    rax,QWORD PTR [rbp-0x8]
  409874:	mov    rsi,rcx
  409877:	mov    rdi,rax
  40987a:	call   4030c0 <memcpy@plt>
  40987f:	mov    rax,QWORD PTR [rbp-0x10]
  409883:	mov    eax,DWORD PTR [rax]
  409885:	leave  
  409886:	ret    

0000000000409887 <flatcc_builder_create_table@@Base>:
  409887:	push   rbp
  409888:	mov    rbp,rsp
  40988b:	sub    rsp,0x100
  409892:	mov    QWORD PTR [rbp-0xd8],rdi
  409899:	mov    QWORD PTR [rbp-0xe0],rsi
  4098a0:	mov    QWORD PTR [rbp-0xe8],rdx
  4098a7:	mov    eax,ecx
  4098a9:	mov    QWORD PTR [rbp-0xf8],r8
  4098b0:	mov    DWORD PTR [rbp-0xf0],r9d
  4098b7:	mov    WORD PTR [rbp-0xec],ax
  4098be:	mov    rax,QWORD PTR fs:0x28
  4098c7:	mov    QWORD PTR [rbp-0x8],rax
  4098cb:	xor    eax,eax
  4098cd:	cmp    DWORD PTR [rbp-0xf0],0x0
  4098d4:	jns    4098f5 <flatcc_builder_create_table@@Base+0x6e>
  4098d6:	lea    rcx,[rip+0xb413]        # 414cf0 <flatcc_builder_padding_base@@Base+0x950>
  4098dd:	mov    edx,0x4d5
  4098e2:	lea    rsi,[rip+0xacb7]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  4098e9:	lea    rdi,[rip+0xaf65]        # 414855 <flatcc_builder_padding_base@@Base+0x4b5>
  4098f0:	call   403070 <__assert_fail@plt>
  4098f5:	mov    eax,DWORD PTR [rbp+0x10]
  4098f8:	and    eax,0x1
  4098fb:	test   eax,eax
  4098fd:	jne    40991e <flatcc_builder_create_table@@Base+0x97>
  4098ff:	lea    rcx,[rip+0xb3ea]        # 414cf0 <flatcc_builder_padding_base@@Base+0x950>
  409906:	mov    edx,0x4db
  40990b:	lea    rsi,[rip+0xac8e]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409912:	lea    rdi,[rip+0xaf4e]        # 414867 <flatcc_builder_padding_base@@Base+0x4c7>
  409919:	call   403070 <__assert_fail@plt>
  40991e:	lea    rax,[rbp-0xec]
  409925:	mov    esi,0x4
  40992a:	mov    rdi,rax
  40992d:	call   407436 <flatcc_builder_clear@@Base+0xc7>
  409932:	movzx  eax,WORD PTR [rbp-0xec]
  409939:	movzx  edx,ax
  40993c:	mov    rax,QWORD PTR [rbp-0xd8]
  409943:	mov    esi,edx
  409945:	mov    rdi,rax
  409948:	call   407405 <flatcc_builder_clear@@Base+0x96>
  40994d:	movzx  eax,WORD PTR [rbp-0xec]
  409954:	movzx  edx,ax
  409957:	mov    rax,QWORD PTR [rbp-0xe8]
  40995e:	mov    ecx,eax
  409960:	mov    rax,QWORD PTR [rbp-0xd8]
  409967:	mov    esi,ecx
  409969:	mov    rdi,rax
  40996c:	call   4079bd <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  409971:	mov    DWORD PTR [rbp-0xbc],eax
  409977:	mov    rax,QWORD PTR [rbp-0xd8]
  40997e:	mov    eax,DWORD PTR [rax+0xf0]
  409984:	mov    edx,eax
  409986:	mov    rax,QWORD PTR [rbp-0xe8]
  40998d:	mov    ecx,eax
  40998f:	mov    eax,DWORD PTR [rbp-0xbc]
  409995:	add    eax,ecx
  409997:	sub    edx,eax
  409999:	mov    eax,edx
  40999b:	sub    eax,0x4
  40999e:	mov    DWORD PTR [rbp-0xb8],eax
  4099a4:	mov    eax,DWORD PTR [rbp+0x10]
  4099a7:	sub    eax,0x1
  4099aa:	mov    DWORD PTR [rbp-0xb4],eax
  4099b0:	mov    eax,DWORD PTR [rbp-0xb8]
  4099b6:	sub    eax,DWORD PTR [rbp-0xb4]
  4099bc:	mov    DWORD PTR [rbp-0xb0],eax
  4099c2:	mov    eax,DWORD PTR [rbp-0xb8]
  4099c8:	sub    eax,DWORD PTR [rbp-0xb0]
  4099ce:	cmp    eax,DWORD PTR [rbp-0xb4]
  4099d4:	je     4099e0 <flatcc_builder_create_table@@Base+0x159>
  4099d6:	mov    eax,0xffffffff
  4099db:	jmp    409c04 <flatcc_builder_create_table@@Base+0x37d>
  4099e0:	mov    eax,DWORD PTR [rbp-0xb0]
  4099e6:	mov    edi,eax
  4099e8:	call   4066f5 <main@@Base+0x116>
  4099ed:	mov    DWORD PTR [rbp-0xc4],eax
  4099f3:	mov    DWORD PTR [rbp-0xc0],0x0
  4099fd:	jmp    409a88 <flatcc_builder_create_table@@Base+0x201>
  409a02:	mov    eax,DWORD PTR [rbp-0xc0]
  409a08:	cdqe   
  409a0a:	lea    rdx,[rax+rax*1]
  409a0e:	mov    rax,QWORD PTR [rbp-0xf8]
  409a15:	add    rax,rdx
  409a18:	movzx  eax,WORD PTR [rax]
  409a1b:	movzx  edx,ax
  409a1e:	mov    rax,QWORD PTR [rbp-0xe0]
  409a25:	add    rax,rdx
  409a28:	mov    QWORD PTR [rbp-0xa8],rax
  409a2f:	mov    rax,QWORD PTR [rbp-0xa8]
  409a36:	mov    eax,DWORD PTR [rax]
  409a38:	sub    eax,DWORD PTR [rbp-0xb8]
  409a3e:	mov    edx,eax
  409a40:	mov    eax,DWORD PTR [rbp-0xc0]
  409a46:	cdqe   
  409a48:	lea    rcx,[rax+rax*1]
  409a4c:	mov    rax,QWORD PTR [rbp-0xf8]
  409a53:	add    rax,rcx
  409a56:	movzx  eax,WORD PTR [rax]
  409a59:	movzx  eax,ax
  409a5c:	sub    edx,eax
  409a5e:	mov    eax,edx
  409a60:	sub    eax,0x4
  409a63:	mov    DWORD PTR [rbp-0xac],eax
  409a69:	mov    eax,DWORD PTR [rbp-0xac]
  409a6f:	mov    edi,eax
  409a71:	call   4066f5 <main@@Base+0x116>
  409a76:	mov    edx,eax
  409a78:	mov    rax,QWORD PTR [rbp-0xa8]
  409a7f:	mov    DWORD PTR [rax],edx
  409a81:	add    DWORD PTR [rbp-0xc0],0x1
  409a88:	mov    eax,DWORD PTR [rbp-0xc0]
  409a8e:	cmp    eax,DWORD PTR [rbp-0xf0]
  409a94:	jl     409a02 <flatcc_builder_create_table@@Base+0x17b>
  409a9a:	mov    QWORD PTR [rbp-0xa0],0x0
  409aa5:	mov    DWORD PTR [rbp-0x98],0x0
  409aaf:	mov    rax,QWORD PTR [rbp-0xa0]
  409ab6:	add    rax,0x4
  409aba:	mov    QWORD PTR [rbp-0xa0],rax
  409ac1:	mov    eax,DWORD PTR [rbp-0x98]
  409ac7:	cdqe   
  409ac9:	shl    rax,0x4
  409acd:	add    rax,rbp
  409ad0:	lea    rdx,[rax-0x90]
  409ad7:	lea    rax,[rbp-0xc4]
  409ade:	mov    QWORD PTR [rdx],rax
  409ae1:	mov    eax,DWORD PTR [rbp-0x98]
  409ae7:	cdqe   
  409ae9:	shl    rax,0x4
  409aed:	add    rax,rbp
  409af0:	sub    rax,0x88
  409af6:	mov    QWORD PTR [rax],0x4
  409afd:	mov    eax,DWORD PTR [rbp-0x98]
  409b03:	add    eax,0x1
  409b06:	mov    DWORD PTR [rbp-0x98],eax
  409b0c:	cmp    QWORD PTR [rbp-0xe8],0x0
  409b14:	je     409b7d <flatcc_builder_create_table@@Base+0x2f6>
  409b16:	mov    rdx,QWORD PTR [rbp-0xa0]
  409b1d:	mov    rax,QWORD PTR [rbp-0xe8]
  409b24:	add    rax,rdx
  409b27:	mov    QWORD PTR [rbp-0xa0],rax
  409b2e:	mov    eax,DWORD PTR [rbp-0x98]
  409b34:	cdqe   
  409b36:	shl    rax,0x4
  409b3a:	add    rax,rbp
  409b3d:	lea    rdx,[rax-0x90]
  409b44:	mov    rax,QWORD PTR [rbp-0xe0]
  409b4b:	mov    QWORD PTR [rdx],rax
  409b4e:	mov    eax,DWORD PTR [rbp-0x98]
  409b54:	cdqe   
  409b56:	shl    rax,0x4
  409b5a:	add    rax,rbp
  409b5d:	lea    rdx,[rax-0x88]
  409b64:	mov    rax,QWORD PTR [rbp-0xe8]
  409b6b:	mov    QWORD PTR [rdx],rax
  409b6e:	mov    eax,DWORD PTR [rbp-0x98]
  409b74:	add    eax,0x1
  409b77:	mov    DWORD PTR [rbp-0x98],eax
  409b7d:	cmp    DWORD PTR [rbp-0xbc],0x0
  409b84:	je     409beb <flatcc_builder_create_table@@Base+0x364>
  409b86:	mov    rdx,QWORD PTR [rbp-0xa0]
  409b8d:	mov    eax,DWORD PTR [rbp-0xbc]
  409b93:	add    rax,rdx
  409b96:	mov    QWORD PTR [rbp-0xa0],rax
  409b9d:	mov    eax,DWORD PTR [rbp-0x98]
  409ba3:	cdqe   
  409ba5:	shl    rax,0x4
  409ba9:	add    rax,rbp
  409bac:	sub    rax,0x90
  409bb2:	mov    rdx,0x4143a0
  409bb9:	mov    QWORD PTR [rax],rdx
  409bbc:	mov    edx,DWORD PTR [rbp-0x98]
  409bc2:	mov    eax,DWORD PTR [rbp-0xbc]
  409bc8:	movsxd rdx,edx
  409bcb:	shl    rdx,0x4
  409bcf:	add    rdx,rbp
  409bd2:	sub    rdx,0x88
  409bd9:	mov    QWORD PTR [rdx],rax
  409bdc:	mov    eax,DWORD PTR [rbp-0x98]
  409be2:	add    eax,0x1
  409be5:	mov    DWORD PTR [rbp-0x98],eax
  409beb:	lea    rdx,[rbp-0xa0]
  409bf2:	mov    rax,QWORD PTR [rbp-0xd8]
  409bf9:	mov    rsi,rdx
  409bfc:	mov    rdi,rax
  409bff:	call   407a09 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  409c04:	mov    rsi,QWORD PTR [rbp-0x8]
  409c08:	xor    rsi,QWORD PTR fs:0x28
  409c11:	je     409c18 <flatcc_builder_create_table@@Base+0x391>
  409c13:	call   403060 <__stack_chk_fail@plt>
  409c18:	leave  
  409c19:	ret    

0000000000409c1a <flatcc_builder_check_required_field@@Base>:
  409c1a:	push   rbp
  409c1b:	mov    rbp,rsp
  409c1e:	sub    rsp,0x10
  409c22:	mov    QWORD PTR [rbp-0x8],rdi
  409c26:	mov    eax,esi
  409c28:	mov    WORD PTR [rbp-0xc],ax
  409c2c:	mov    rax,QWORD PTR [rbp-0x8]
  409c30:	mov    rax,QWORD PTR [rax+0x30]
  409c34:	movzx  eax,WORD PTR [rax+0xe]
  409c38:	cmp    ax,0x3
  409c3c:	je     409c5d <flatcc_builder_check_required_field@@Base+0x43>
  409c3e:	lea    rcx,[rip+0xb0db]        # 414d20 <flatcc_builder_padding_base@@Base+0x980>
  409c45:	mov    edx,0x4f8
  409c4a:	lea    rsi,[rip+0xa94f]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409c51:	lea    rdi,[rip+0xac20]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  409c58:	call   403070 <__assert_fail@plt>
  409c5d:	mov    rax,QWORD PTR [rbp-0x8]
  409c61:	movzx  eax,WORD PTR [rax+0x10]
  409c65:	cmp    ax,WORD PTR [rbp-0xc]
  409c69:	jbe    409c8c <flatcc_builder_check_required_field@@Base+0x72>
  409c6b:	mov    rax,QWORD PTR [rbp-0x8]
  409c6f:	mov    rax,QWORD PTR [rax+0x8]
  409c73:	movzx  edx,WORD PTR [rbp-0xc]
  409c77:	add    rdx,rdx
  409c7a:	add    rax,rdx
  409c7d:	movzx  eax,WORD PTR [rax]
  409c80:	test   ax,ax
  409c83:	je     409c8c <flatcc_builder_check_required_field@@Base+0x72>
  409c85:	mov    eax,0x1
  409c8a:	jmp    409c91 <flatcc_builder_check_required_field@@Base+0x77>
  409c8c:	mov    eax,0x0
  409c91:	leave  
  409c92:	ret    

0000000000409c93 <flatcc_builder_check_union_field@@Base>:
  409c93:	push   rbp
  409c94:	mov    rbp,rsp
  409c97:	sub    rsp,0x10
  409c9b:	mov    QWORD PTR [rbp-0x8],rdi
  409c9f:	mov    eax,esi
  409ca1:	mov    WORD PTR [rbp-0xc],ax
  409ca5:	mov    rax,QWORD PTR [rbp-0x8]
  409ca9:	mov    rax,QWORD PTR [rax+0x30]
  409cad:	movzx  eax,WORD PTR [rax+0xe]
  409cb1:	cmp    ax,0x3
  409cb5:	je     409cd6 <flatcc_builder_check_union_field@@Base+0x43>
  409cb7:	lea    rcx,[rip+0xb0a2]        # 414d60 <flatcc_builder_padding_base@@Base+0x9c0>
  409cbe:	mov    edx,0x4ff
  409cc3:	lea    rsi,[rip+0xa8d6]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409cca:	lea    rdi,[rip+0xaba7]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  409cd1:	call   403070 <__assert_fail@plt>
  409cd6:	cmp    WORD PTR [rbp-0xc],0x0
  409cdb:	je     409ceb <flatcc_builder_check_union_field@@Base+0x58>
  409cdd:	mov    rax,QWORD PTR [rbp-0x8]
  409ce1:	movzx  eax,WORD PTR [rax+0x10]
  409ce5:	cmp    ax,WORD PTR [rbp-0xc]
  409ce9:	ja     409cf5 <flatcc_builder_check_union_field@@Base+0x62>
  409ceb:	mov    eax,0x0
  409cf0:	jmp    409d9f <flatcc_builder_check_union_field@@Base+0x10c>
  409cf5:	mov    rax,QWORD PTR [rbp-0x8]
  409cf9:	mov    rax,QWORD PTR [rax+0x8]
  409cfd:	movzx  edx,WORD PTR [rbp-0xc]
  409d01:	add    rdx,rdx
  409d04:	sub    rdx,0x2
  409d08:	add    rax,rdx
  409d0b:	movzx  eax,WORD PTR [rax]
  409d0e:	test   ax,ax
  409d11:	jne    409d33 <flatcc_builder_check_union_field@@Base+0xa0>
  409d13:	mov    rax,QWORD PTR [rbp-0x8]
  409d17:	mov    rax,QWORD PTR [rax+0x8]
  409d1b:	movzx  edx,WORD PTR [rbp-0xc]
  409d1f:	add    rdx,rdx
  409d22:	add    rax,rdx
  409d25:	movzx  eax,WORD PTR [rax]
  409d28:	test   ax,ax
  409d2b:	sete   al
  409d2e:	movzx  eax,al
  409d31:	jmp    409d9f <flatcc_builder_check_union_field@@Base+0x10c>
  409d33:	mov    rax,QWORD PTR [rbp-0x8]
  409d37:	mov    rdx,QWORD PTR [rax+0x18]
  409d3b:	mov    rax,QWORD PTR [rbp-0x8]
  409d3f:	mov    rax,QWORD PTR [rax+0x8]
  409d43:	movzx  ecx,WORD PTR [rbp-0xc]
  409d47:	add    rcx,rcx
  409d4a:	sub    rcx,0x2
  409d4e:	add    rax,rcx
  409d51:	movzx  eax,WORD PTR [rax]
  409d54:	movzx  eax,ax
  409d57:	add    rax,rdx
  409d5a:	movzx  eax,BYTE PTR [rax]
  409d5d:	test   al,al
  409d5f:	je     409d81 <flatcc_builder_check_union_field@@Base+0xee>
  409d61:	mov    rax,QWORD PTR [rbp-0x8]
  409d65:	mov    rax,QWORD PTR [rax+0x8]
  409d69:	movzx  edx,WORD PTR [rbp-0xc]
  409d6d:	add    rdx,rdx
  409d70:	add    rax,rdx
  409d73:	movzx  eax,WORD PTR [rax]
  409d76:	test   ax,ax
  409d79:	setne  al
  409d7c:	movzx  eax,al
  409d7f:	jmp    409d9f <flatcc_builder_check_union_field@@Base+0x10c>
  409d81:	mov    rax,QWORD PTR [rbp-0x8]
  409d85:	mov    rax,QWORD PTR [rax+0x8]
  409d89:	movzx  edx,WORD PTR [rbp-0xc]
  409d8d:	add    rdx,rdx
  409d90:	add    rax,rdx
  409d93:	movzx  eax,WORD PTR [rax]
  409d96:	test   ax,ax
  409d99:	sete   al
  409d9c:	movzx  eax,al
  409d9f:	leave  
  409da0:	ret    

0000000000409da1 <flatcc_builder_check_required@@Base>:
  409da1:	push   rbp
  409da2:	mov    rbp,rsp
  409da5:	sub    rsp,0x30
  409da9:	mov    QWORD PTR [rbp-0x18],rdi
  409dad:	mov    QWORD PTR [rbp-0x20],rsi
  409db1:	mov    DWORD PTR [rbp-0x24],edx
  409db4:	mov    rax,QWORD PTR [rbp-0x18]
  409db8:	mov    rax,QWORD PTR [rax+0x30]
  409dbc:	movzx  eax,WORD PTR [rax+0xe]
  409dc0:	cmp    ax,0x3
  409dc4:	je     409de5 <flatcc_builder_check_required@@Base+0x44>
  409dc6:	lea    rcx,[rip+0xafc3]        # 414d90 <flatcc_builder_padding_base@@Base+0x9f0>
  409dcd:	mov    edx,0x511
  409dd2:	lea    rsi,[rip+0xa7c7]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409dd9:	lea    rdi,[rip+0xaa98]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  409de0:	call   403070 <__assert_fail@plt>
  409de5:	mov    rax,QWORD PTR [rbp-0x18]
  409de9:	movzx  eax,WORD PTR [rax+0x10]
  409ded:	movzx  eax,ax
  409df0:	cmp    eax,DWORD PTR [rbp-0x24]
  409df3:	jge    409dfc <flatcc_builder_check_required@@Base+0x5b>
  409df5:	mov    eax,0x0
  409dfa:	jmp    409e4a <flatcc_builder_check_required@@Base+0xa9>
  409dfc:	mov    DWORD PTR [rbp-0x4],0x0
  409e03:	jmp    409e3d <flatcc_builder_check_required@@Base+0x9c>
  409e05:	mov    rax,QWORD PTR [rbp-0x18]
  409e09:	mov    rax,QWORD PTR [rax+0x8]
  409e0d:	mov    edx,DWORD PTR [rbp-0x4]
  409e10:	movsxd rdx,edx
  409e13:	lea    rcx,[rdx+rdx*1]
  409e17:	mov    rdx,QWORD PTR [rbp-0x20]
  409e1b:	add    rdx,rcx
  409e1e:	movzx  edx,WORD PTR [rdx]
  409e21:	movzx  edx,dx
  409e24:	add    rdx,rdx
  409e27:	add    rax,rdx
  409e2a:	movzx  eax,WORD PTR [rax]
  409e2d:	test   ax,ax
  409e30:	jne    409e39 <flatcc_builder_check_required@@Base+0x98>
  409e32:	mov    eax,0x0
  409e37:	jmp    409e4a <flatcc_builder_check_required@@Base+0xa9>
  409e39:	add    DWORD PTR [rbp-0x4],0x1
  409e3d:	mov    eax,DWORD PTR [rbp-0x4]
  409e40:	cmp    eax,DWORD PTR [rbp-0x24]
  409e43:	jl     409e05 <flatcc_builder_check_required@@Base+0x64>
  409e45:	mov    eax,0x1
  409e4a:	leave  
  409e4b:	ret    

0000000000409e4c <flatcc_builder_end_table@@Base>:
  409e4c:	push   rbp
  409e4d:	mov    rbp,rsp
  409e50:	sub    rsp,0x30
  409e54:	mov    QWORD PTR [rbp-0x28],rdi
  409e58:	mov    rax,QWORD PTR [rbp-0x28]
  409e5c:	mov    rax,QWORD PTR [rax+0x30]
  409e60:	movzx  eax,WORD PTR [rax+0xe]
  409e64:	cmp    ax,0x3
  409e68:	je     409e89 <flatcc_builder_end_table@@Base+0x3d>
  409e6a:	lea    rcx,[rip+0xaf3f]        # 414db0 <flatcc_builder_padding_base@@Base+0xa10>
  409e71:	mov    edx,0x525
  409e76:	lea    rsi,[rip+0xa723]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  409e7d:	lea    rdi,[rip+0xa9f4]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  409e84:	call   403070 <__assert_fail@plt>
  409e89:	mov    rax,QWORD PTR [rbp-0x28]
  409e8d:	mov    rax,QWORD PTR [rax+0x8]
  409e91:	sub    rax,0x4
  409e95:	mov    QWORD PTR [rbp-0x10],rax
  409e99:	mov    rax,QWORD PTR [rbp-0x28]
  409e9d:	movzx  eax,WORD PTR [rax+0x10]
  409ea1:	movzx  eax,ax
  409ea4:	add    eax,0x2
  409ea7:	cdqe   
  409ea9:	add    eax,eax
  409eab:	mov    WORD PTR [rbp-0x1e],ax
  409eaf:	mov    rax,QWORD PTR [rbp-0x10]
  409eb3:	movzx  edx,WORD PTR [rbp-0x1e]
  409eb7:	mov    WORD PTR [rax],dx
  409eba:	mov    rax,QWORD PTR [rbp-0x10]
  409ebe:	lea    rdx,[rax+0x2]
  409ec2:	mov    rax,QWORD PTR [rbp-0x28]
  409ec6:	mov    eax,DWORD PTR [rax+0x20]
  409ec9:	add    eax,0x4
  409ecc:	mov    WORD PTR [rdx],ax
  409ecf:	mov    rax,QWORD PTR [rbp-0x10]
  409ed3:	movzx  eax,WORD PTR [rax]
  409ed6:	movzx  edx,ax
  409ed9:	mov    rax,QWORD PTR [rbp-0x28]
  409edd:	mov    eax,DWORD PTR [rax+0x14]
  409ee0:	xor    eax,edx
  409ee2:	imul   edx,eax,0x9e3779b1
  409ee8:	mov    rax,QWORD PTR [rbp-0x10]
  409eec:	add    rax,0x2
  409ef0:	movzx  eax,WORD PTR [rax]
  409ef3:	movzx  eax,ax
  409ef6:	xor    eax,edx
  409ef8:	imul   edx,eax,0x9e3779b1
  409efe:	mov    rax,QWORD PTR [rbp-0x28]
  409f02:	mov    DWORD PTR [rax+0x14],edx
  409f05:	mov    rax,QWORD PTR [rbp-0x28]
  409f09:	mov    ecx,DWORD PTR [rax+0x14]
  409f0c:	movzx  edx,WORD PTR [rbp-0x1e]
  409f10:	mov    rsi,QWORD PTR [rbp-0x10]
  409f14:	mov    rax,QWORD PTR [rbp-0x28]
  409f18:	mov    rdi,rax
  409f1b:	call   4095a5 <flatcc_builder_create_cached_vtable@@Base>
  409f20:	mov    DWORD PTR [rbp-0x1c],eax
  409f23:	cmp    DWORD PTR [rbp-0x1c],0x0
  409f27:	jne    409f33 <flatcc_builder_end_table@@Base+0xe7>
  409f29:	mov    eax,0x0
  409f2e:	jmp    40a053 <flatcc_builder_end_table@@Base+0x207>
  409f33:	movzx  edx,WORD PTR [rbp-0x1e]
  409f37:	mov    rax,QWORD PTR [rbp-0x10]
  409f3b:	mov    esi,0x0
  409f40:	mov    rdi,rax
  409f43:	call   403080 <memset@plt>
  409f48:	mov    rax,QWORD PTR [rbp-0x28]
  409f4c:	mov    rdx,QWORD PTR [rax+0x88]
  409f53:	mov    rax,QWORD PTR [rbp-0x28]
  409f57:	mov    rax,QWORD PTR [rax+0x30]
  409f5b:	mov    eax,DWORD PTR [rax+0x14]
  409f5e:	mov    eax,eax
  409f60:	add    rax,rdx
  409f63:	mov    QWORD PTR [rbp-0x8],rax
  409f67:	mov    rax,QWORD PTR [rbp-0x28]
  409f6b:	mov    rax,QWORD PTR [rax]
  409f6e:	mov    rdx,rax
  409f71:	mov    rax,QWORD PTR [rbp-0x8]
  409f75:	sub    rdx,rax
  409f78:	mov    rax,rdx
  409f7b:	sar    rax,1
  409f7e:	mov    DWORD PTR [rbp-0x18],eax
  409f81:	mov    rax,QWORD PTR [rbp-0x28]
  409f85:	movzx  eax,WORD PTR [rax+0xea]
  409f8c:	movzx  edx,ax
  409f8f:	mov    rax,QWORD PTR [rbp-0x28]
  409f93:	mov    eax,DWORD PTR [rax+0x20]
  409f96:	mov    r10d,eax
  409f99:	mov    rax,QWORD PTR [rbp-0x28]
  409f9d:	mov    rsi,QWORD PTR [rax+0x18]
  409fa1:	mov    r8d,DWORD PTR [rbp-0x18]
  409fa5:	mov    rdi,QWORD PTR [rbp-0x8]
  409fa9:	mov    rax,QWORD PTR [rbp-0x28]
  409fad:	sub    rsp,0x8
  409fb1:	mov    ecx,DWORD PTR [rbp-0x1c]
  409fb4:	push   rcx
  409fb5:	mov    r9d,r8d
  409fb8:	mov    r8,rdi
  409fbb:	mov    ecx,edx
  409fbd:	mov    rdx,r10
  409fc0:	mov    rdi,rax
  409fc3:	call   409887 <flatcc_builder_create_table@@Base>
  409fc8:	add    rsp,0x10
  409fcc:	mov    DWORD PTR [rbp-0x14],eax
  409fcf:	cmp    DWORD PTR [rbp-0x14],0x0
  409fd3:	jne    409fdc <flatcc_builder_end_table@@Base+0x190>
  409fd5:	mov    eax,0x0
  409fda:	jmp    40a053 <flatcc_builder_end_table@@Base+0x207>
  409fdc:	mov    rax,QWORD PTR [rbp-0x28]
  409fe0:	mov    rax,QWORD PTR [rax+0x30]
  409fe4:	mov    edx,DWORD PTR [rax+0x18]
  409fe7:	mov    rax,QWORD PTR [rbp-0x28]
  409feb:	mov    DWORD PTR [rax+0x14],edx
  409fee:	mov    rax,QWORD PTR [rbp-0x28]
  409ff2:	mov    rax,QWORD PTR [rax+0x30]
  409ff6:	movzx  edx,WORD PTR [rax+0x1c]
  409ffa:	mov    rax,QWORD PTR [rbp-0x28]
  409ffe:	mov    WORD PTR [rax+0x10],dx
  40a002:	mov    rax,QWORD PTR [rbp-0x28]
  40a006:	mov    rdx,QWORD PTR [rax+0x58]
  40a00a:	mov    rax,QWORD PTR [rbp-0x28]
  40a00e:	mov    rax,QWORD PTR [rax+0x30]
  40a012:	mov    eax,DWORD PTR [rax+0x10]
  40a015:	mov    eax,eax
  40a017:	add    rdx,rax
  40a01a:	mov    rax,QWORD PTR [rbp-0x28]
  40a01e:	mov    QWORD PTR [rax+0x8],rdx
  40a022:	mov    rax,QWORD PTR [rbp-0x28]
  40a026:	mov    rdx,QWORD PTR [rax+0x88]
  40a02d:	mov    rax,QWORD PTR [rbp-0x28]
  40a031:	mov    rax,QWORD PTR [rax+0x30]
  40a035:	mov    eax,DWORD PTR [rax+0x14]
  40a038:	mov    eax,eax
  40a03a:	add    rdx,rax
  40a03d:	mov    rax,QWORD PTR [rbp-0x28]
  40a041:	mov    QWORD PTR [rax],rdx
  40a044:	mov    rax,QWORD PTR [rbp-0x28]
  40a048:	mov    rdi,rax
  40a04b:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40a050:	mov    eax,DWORD PTR [rbp-0x14]
  40a053:	leave  
  40a054:	ret    

000000000040a055 <flatcc_builder_create_vector@@Base>:
  40a055:	push   rbp
  40a056:	mov    rbp,rsp
  40a059:	sub    rsp,0xe0
  40a060:	mov    QWORD PTR [rbp-0xb8],rdi
  40a067:	mov    QWORD PTR [rbp-0xc0],rsi
  40a06e:	mov    QWORD PTR [rbp-0xc8],rdx
  40a075:	mov    QWORD PTR [rbp-0xd0],rcx
  40a07c:	mov    eax,r8d
  40a07f:	mov    QWORD PTR [rbp-0xe0],r9
  40a086:	mov    WORD PTR [rbp-0xd4],ax
  40a08d:	mov    rax,QWORD PTR fs:0x28
  40a096:	mov    QWORD PTR [rbp-0x8],rax
  40a09a:	xor    eax,eax
  40a09c:	mov    rax,QWORD PTR [rbp-0xc8]
  40a0a3:	cmp    rax,QWORD PTR [rbp-0xe0]
  40a0aa:	jbe    40a0e5 <flatcc_builder_create_vector@@Base+0x90>
  40a0ac:	mov    rax,QWORD PTR [rbp-0xc8]
  40a0b3:	cmp    rax,QWORD PTR [rbp-0xe0]
  40a0ba:	jbe    40a0db <flatcc_builder_create_vector@@Base+0x86>
  40a0bc:	lea    rcx,[rip+0xad0d]        # 414dd0 <flatcc_builder_padding_base@@Base+0xa30>
  40a0c3:	mov    edx,0x555
  40a0c8:	lea    rsi,[rip+0xa4d1]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a0cf:	lea    rdi,[rip+0xa7cd]        # 4148a3 <flatcc_builder_padding_base@@Base+0x503>
  40a0d6:	call   403070 <__assert_fail@plt>
  40a0db:	mov    eax,0x0
  40a0e0:	jmp    40a2d0 <flatcc_builder_create_vector@@Base+0x27b>
  40a0e5:	lea    rax,[rbp-0xd4]
  40a0ec:	mov    esi,0x4
  40a0f1:	mov    rdi,rax
  40a0f4:	call   407436 <flatcc_builder_clear@@Base+0xc7>
  40a0f9:	movzx  eax,WORD PTR [rbp-0xd4]
  40a100:	movzx  edx,ax
  40a103:	mov    rax,QWORD PTR [rbp-0xb8]
  40a10a:	mov    esi,edx
  40a10c:	mov    rdi,rax
  40a10f:	call   407405 <flatcc_builder_clear@@Base+0x96>
  40a114:	mov    rax,QWORD PTR [rbp-0xc8]
  40a11b:	mov    edx,eax
  40a11d:	mov    rax,QWORD PTR [rbp-0xd0]
  40a124:	imul   eax,edx
  40a127:	mov    DWORD PTR [rbp-0xa8],eax
  40a12d:	mov    rax,QWORD PTR [rbp-0xc8]
  40a134:	mov    edi,eax
  40a136:	call   4066f5 <main@@Base+0x116>
  40a13b:	mov    DWORD PTR [rbp-0xac],eax
  40a141:	movzx  eax,WORD PTR [rbp-0xd4]
  40a148:	movzx  edx,ax
  40a14b:	mov    ecx,DWORD PTR [rbp-0xa8]
  40a151:	mov    rax,QWORD PTR [rbp-0xb8]
  40a158:	mov    esi,ecx
  40a15a:	mov    rdi,rax
  40a15d:	call   4079bd <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40a162:	mov    DWORD PTR [rbp-0xa4],eax
  40a168:	mov    QWORD PTR [rbp-0xa0],0x0
  40a173:	mov    DWORD PTR [rbp-0x98],0x0
  40a17d:	mov    rax,QWORD PTR [rbp-0xa0]
  40a184:	add    rax,0x4
  40a188:	mov    QWORD PTR [rbp-0xa0],rax
  40a18f:	mov    eax,DWORD PTR [rbp-0x98]
  40a195:	cdqe   
  40a197:	shl    rax,0x4
  40a19b:	add    rax,rbp
  40a19e:	lea    rdx,[rax-0x90]
  40a1a5:	lea    rax,[rbp-0xac]
  40a1ac:	mov    QWORD PTR [rdx],rax
  40a1af:	mov    eax,DWORD PTR [rbp-0x98]
  40a1b5:	cdqe   
  40a1b7:	shl    rax,0x4
  40a1bb:	add    rax,rbp
  40a1be:	sub    rax,0x88
  40a1c4:	mov    QWORD PTR [rax],0x4
  40a1cb:	mov    eax,DWORD PTR [rbp-0x98]
  40a1d1:	add    eax,0x1
  40a1d4:	mov    DWORD PTR [rbp-0x98],eax
  40a1da:	cmp    DWORD PTR [rbp-0xa8],0x0
  40a1e1:	je     40a249 <flatcc_builder_create_vector@@Base+0x1f4>
  40a1e3:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a1ea:	mov    eax,DWORD PTR [rbp-0xa8]
  40a1f0:	add    rax,rdx
  40a1f3:	mov    QWORD PTR [rbp-0xa0],rax
  40a1fa:	mov    eax,DWORD PTR [rbp-0x98]
  40a200:	cdqe   
  40a202:	shl    rax,0x4
  40a206:	add    rax,rbp
  40a209:	lea    rdx,[rax-0x90]
  40a210:	mov    rax,QWORD PTR [rbp-0xc0]
  40a217:	mov    QWORD PTR [rdx],rax
  40a21a:	mov    edx,DWORD PTR [rbp-0x98]
  40a220:	mov    eax,DWORD PTR [rbp-0xa8]
  40a226:	movsxd rdx,edx
  40a229:	shl    rdx,0x4
  40a22d:	add    rdx,rbp
  40a230:	sub    rdx,0x88
  40a237:	mov    QWORD PTR [rdx],rax
  40a23a:	mov    eax,DWORD PTR [rbp-0x98]
  40a240:	add    eax,0x1
  40a243:	mov    DWORD PTR [rbp-0x98],eax
  40a249:	cmp    DWORD PTR [rbp-0xa4],0x0
  40a250:	je     40a2b7 <flatcc_builder_create_vector@@Base+0x262>
  40a252:	mov    rdx,QWORD PTR [rbp-0xa0]
  40a259:	mov    eax,DWORD PTR [rbp-0xa4]
  40a25f:	add    rax,rdx
  40a262:	mov    QWORD PTR [rbp-0xa0],rax
  40a269:	mov    eax,DWORD PTR [rbp-0x98]
  40a26f:	cdqe   
  40a271:	shl    rax,0x4
  40a275:	add    rax,rbp
  40a278:	sub    rax,0x90
  40a27e:	mov    rdx,0x4143a0
  40a285:	mov    QWORD PTR [rax],rdx
  40a288:	mov    edx,DWORD PTR [rbp-0x98]
  40a28e:	mov    eax,DWORD PTR [rbp-0xa4]
  40a294:	movsxd rdx,edx
  40a297:	shl    rdx,0x4
  40a29b:	add    rdx,rbp
  40a29e:	sub    rdx,0x88
  40a2a5:	mov    QWORD PTR [rdx],rax
  40a2a8:	mov    eax,DWORD PTR [rbp-0x98]
  40a2ae:	add    eax,0x1
  40a2b1:	mov    DWORD PTR [rbp-0x98],eax
  40a2b7:	lea    rdx,[rbp-0xa0]
  40a2be:	mov    rax,QWORD PTR [rbp-0xb8]
  40a2c5:	mov    rsi,rdx
  40a2c8:	mov    rdi,rax
  40a2cb:	call   407a09 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40a2d0:	mov    rcx,QWORD PTR [rbp-0x8]
  40a2d4:	xor    rcx,QWORD PTR fs:0x28
  40a2dd:	je     40a2e4 <flatcc_builder_create_vector@@Base+0x28f>
  40a2df:	call   403060 <__stack_chk_fail@plt>
  40a2e4:	leave  
  40a2e5:	ret    

000000000040a2e6 <flatcc_builder_end_vector@@Base>:
  40a2e6:	push   rbp
  40a2e7:	mov    rbp,rsp
  40a2ea:	sub    rsp,0x20
  40a2ee:	mov    QWORD PTR [rbp-0x18],rdi
  40a2f2:	mov    rax,QWORD PTR [rbp-0x18]
  40a2f6:	mov    rax,QWORD PTR [rax+0x30]
  40a2fa:	movzx  eax,WORD PTR [rax+0xe]
  40a2fe:	cmp    ax,0x4
  40a302:	je     40a323 <flatcc_builder_end_vector@@Base+0x3d>
  40a304:	lea    rcx,[rip+0xaae5]        # 414df0 <flatcc_builder_padding_base@@Base+0xa50>
  40a30b:	mov    edx,0x578
  40a310:	lea    rsi,[rip+0xa289]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a317:	lea    rdi,[rip+0xa3ca]        # 4146e8 <flatcc_builder_padding_base@@Base+0x348>
  40a31e:	call   403070 <__assert_fail@plt>
  40a323:	mov    rax,QWORD PTR [rbp-0x18]
  40a327:	mov    rax,QWORD PTR [rax+0x30]
  40a32b:	mov    eax,DWORD PTR [rax+0x18]
  40a32e:	mov    r8d,eax
  40a331:	mov    rax,QWORD PTR [rbp-0x18]
  40a335:	movzx  eax,WORD PTR [rax+0xea]
  40a33c:	movzx  edx,ax
  40a33f:	mov    rax,QWORD PTR [rbp-0x18]
  40a343:	mov    rax,QWORD PTR [rax+0x30]
  40a347:	mov    eax,DWORD PTR [rax+0x10]
  40a34a:	mov    ecx,eax
  40a34c:	mov    rax,QWORD PTR [rbp-0x18]
  40a350:	mov    rax,QWORD PTR [rax+0x30]
  40a354:	mov    eax,DWORD PTR [rax+0x14]
  40a357:	mov    edi,eax
  40a359:	mov    rax,QWORD PTR [rbp-0x18]
  40a35d:	mov    rsi,QWORD PTR [rax+0x18]
  40a361:	mov    rax,QWORD PTR [rbp-0x18]
  40a365:	mov    r9,r8
  40a368:	mov    r8d,edx
  40a36b:	mov    rdx,rdi
  40a36e:	mov    rdi,rax
  40a371:	call   40a055 <flatcc_builder_create_vector@@Base>
  40a376:	mov    DWORD PTR [rbp-0x4],eax
  40a379:	cmp    DWORD PTR [rbp-0x4],0x0
  40a37d:	jne    40a386 <flatcc_builder_end_vector@@Base+0xa0>
  40a37f:	mov    eax,0x0
  40a384:	jmp    40a395 <flatcc_builder_end_vector@@Base+0xaf>
  40a386:	mov    rax,QWORD PTR [rbp-0x18]
  40a38a:	mov    rdi,rax
  40a38d:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40a392:	mov    eax,DWORD PTR [rbp-0x4]
  40a395:	leave  
  40a396:	ret    

000000000040a397 <flatcc_builder_vector_count@@Base>:
  40a397:	push   rbp
  40a398:	mov    rbp,rsp
  40a39b:	mov    QWORD PTR [rbp-0x8],rdi
  40a39f:	mov    rax,QWORD PTR [rbp-0x8]
  40a3a3:	mov    rax,QWORD PTR [rax+0x30]
  40a3a7:	mov    eax,DWORD PTR [rax+0x14]
  40a3aa:	mov    eax,eax
  40a3ac:	pop    rbp
  40a3ad:	ret    

000000000040a3ae <flatcc_builder_vector_edit@@Base>:
  40a3ae:	push   rbp
  40a3af:	mov    rbp,rsp
  40a3b2:	mov    QWORD PTR [rbp-0x8],rdi
  40a3b6:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ba:	mov    rax,QWORD PTR [rax+0x18]
  40a3be:	pop    rbp
  40a3bf:	ret    
  40a3c0:	push   rbp
  40a3c1:	mov    rbp,rsp
  40a3c4:	push   rbx
  40a3c5:	sub    rsp,0xe8
  40a3cc:	mov    QWORD PTR [rbp-0xd8],rdi
  40a3d3:	mov    QWORD PTR [rbp-0xe0],rsi
  40a3da:	mov    QWORD PTR [rbp-0xe8],rdx
  40a3e1:	mov    QWORD PTR [rbp-0xf0],rcx
  40a3e8:	mov    rax,QWORD PTR fs:0x28
  40a3f1:	mov    QWORD PTR [rbp-0x18],rax
  40a3f5:	xor    eax,eax
  40a3f7:	mov    rax,QWORD PTR [rbp-0xe8]
  40a3fe:	cmp    eax,0x3fffffff
  40a403:	jbe    40a40f <flatcc_builder_vector_edit@@Base+0x61>
  40a405:	mov    eax,0x0
  40a40a:	jmp    40a753 <flatcc_builder_vector_edit@@Base+0x3a5>
  40a40f:	mov    rax,QWORD PTR [rbp-0xd8]
  40a416:	mov    esi,0x4
  40a41b:	mov    rdi,rax
  40a41e:	call   407405 <flatcc_builder_clear@@Base+0x96>
  40a423:	mov    rax,QWORD PTR [rbp-0xe8]
  40a42a:	shl    eax,0x2
  40a42d:	mov    DWORD PTR [rbp-0xc0],eax
  40a433:	mov    rax,QWORD PTR [rbp-0xe8]
  40a43a:	mov    edi,eax
  40a43c:	call   4066f5 <main@@Base+0x116>
  40a441:	mov    DWORD PTR [rbp-0xc8],eax
  40a447:	mov    ecx,DWORD PTR [rbp-0xc0]
  40a44d:	mov    rax,QWORD PTR [rbp-0xd8]
  40a454:	mov    edx,0x4
  40a459:	mov    esi,ecx
  40a45b:	mov    rdi,rax
  40a45e:	call   4079bd <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40a463:	mov    DWORD PTR [rbp-0xbc],eax
  40a469:	mov    QWORD PTR [rbp-0xb0],0x0
  40a474:	mov    DWORD PTR [rbp-0xa8],0x0
  40a47e:	mov    rax,QWORD PTR [rbp-0xb0]
  40a485:	add    rax,0x4
  40a489:	mov    QWORD PTR [rbp-0xb0],rax
  40a490:	mov    eax,DWORD PTR [rbp-0xa8]
  40a496:	cdqe   
  40a498:	shl    rax,0x4
  40a49c:	lea    rbx,[rbp-0x10]
  40a4a0:	add    rax,rbx
  40a4a3:	lea    rdx,[rax-0x90]
  40a4aa:	lea    rax,[rbp-0xc8]
  40a4b1:	mov    QWORD PTR [rdx],rax
  40a4b4:	mov    eax,DWORD PTR [rbp-0xa8]
  40a4ba:	cdqe   
  40a4bc:	shl    rax,0x4
  40a4c0:	lea    rbx,[rbp-0x10]
  40a4c4:	add    rax,rbx
  40a4c7:	sub    rax,0x88
  40a4cd:	mov    QWORD PTR [rax],0x4
  40a4d4:	mov    eax,DWORD PTR [rbp-0xa8]
  40a4da:	add    eax,0x1
  40a4dd:	mov    DWORD PTR [rbp-0xa8],eax
  40a4e3:	cmp    DWORD PTR [rbp-0xc0],0x0
  40a4ea:	je     40a55a <flatcc_builder_vector_edit@@Base+0x1ac>
  40a4ec:	mov    rdx,QWORD PTR [rbp-0xb0]
  40a4f3:	mov    eax,DWORD PTR [rbp-0xc0]
  40a4f9:	add    rax,rdx
  40a4fc:	mov    QWORD PTR [rbp-0xb0],rax
  40a503:	mov    eax,DWORD PTR [rbp-0xa8]
  40a509:	cdqe   
  40a50b:	shl    rax,0x4
  40a50f:	lea    rcx,[rbp-0x10]
  40a513:	add    rax,rcx
  40a516:	lea    rdx,[rax-0x90]
  40a51d:	mov    rax,QWORD PTR [rbp-0xe0]
  40a524:	mov    QWORD PTR [rdx],rax
  40a527:	mov    edx,DWORD PTR [rbp-0xa8]
  40a52d:	mov    eax,DWORD PTR [rbp-0xc0]
  40a533:	movsxd rdx,edx
  40a536:	shl    rdx,0x4
  40a53a:	lea    rbx,[rbp-0x10]
  40a53e:	add    rdx,rbx
  40a541:	sub    rdx,0x88
  40a548:	mov    QWORD PTR [rdx],rax
  40a54b:	mov    eax,DWORD PTR [rbp-0xa8]
  40a551:	add    eax,0x1
  40a554:	mov    DWORD PTR [rbp-0xa8],eax
  40a55a:	cmp    DWORD PTR [rbp-0xbc],0x0
  40a561:	je     40a5d0 <flatcc_builder_vector_edit@@Base+0x222>
  40a563:	mov    rdx,QWORD PTR [rbp-0xb0]
  40a56a:	mov    eax,DWORD PTR [rbp-0xbc]
  40a570:	add    rax,rdx
  40a573:	mov    QWORD PTR [rbp-0xb0],rax
  40a57a:	mov    eax,DWORD PTR [rbp-0xa8]
  40a580:	cdqe   
  40a582:	shl    rax,0x4
  40a586:	lea    rsi,[rbp-0x10]
  40a58a:	add    rax,rsi
  40a58d:	sub    rax,0x90
  40a593:	mov    rdx,0x4143a0
  40a59a:	mov    QWORD PTR [rax],rdx
  40a59d:	mov    edx,DWORD PTR [rbp-0xa8]
  40a5a3:	mov    eax,DWORD PTR [rbp-0xbc]
  40a5a9:	movsxd rdx,edx
  40a5ac:	shl    rdx,0x4
  40a5b0:	lea    rcx,[rbp-0x10]
  40a5b4:	add    rdx,rcx
  40a5b7:	sub    rdx,0x88
  40a5be:	mov    QWORD PTR [rdx],rax
  40a5c1:	mov    eax,DWORD PTR [rbp-0xa8]
  40a5c7:	add    eax,0x1
  40a5ca:	mov    DWORD PTR [rbp-0xa8],eax
  40a5d0:	mov    rax,QWORD PTR [rbp-0xd8]
  40a5d7:	mov    eax,DWORD PTR [rax+0xf0]
  40a5dd:	mov    edx,eax
  40a5df:	mov    rax,QWORD PTR [rbp-0xb0]
  40a5e6:	sub    edx,eax
  40a5e8:	mov    eax,edx
  40a5ea:	mov    DWORD PTR [rbp-0xb8],eax
  40a5f0:	mov    DWORD PTR [rbp-0xc4],0x0
  40a5fa:	jmp    40a727 <flatcc_builder_vector_edit@@Base+0x379>
  40a5ff:	mov    eax,DWORD PTR [rbp-0xc4]
  40a605:	lea    rdx,[rax*4+0x0]
  40a60d:	mov    rax,QWORD PTR [rbp-0xe0]
  40a614:	add    rax,rdx
  40a617:	mov    eax,DWORD PTR [rax]
  40a619:	test   eax,eax
  40a61b:	je     40a6c1 <flatcc_builder_vector_edit@@Base+0x313>
  40a621:	mov    eax,DWORD PTR [rbp-0xc4]
  40a627:	lea    rdx,[rax*4+0x0]
  40a62f:	mov    rax,QWORD PTR [rbp-0xe0]
  40a636:	add    rax,rdx
  40a639:	mov    eax,DWORD PTR [rax]
  40a63b:	sub    eax,DWORD PTR [rbp-0xb8]
  40a641:	mov    edx,DWORD PTR [rbp-0xc4]
  40a647:	shl    edx,0x2
  40a64a:	sub    eax,edx
  40a64c:	sub    eax,0x4
  40a64f:	mov    DWORD PTR [rbp-0xb4],eax
  40a655:	mov    eax,DWORD PTR [rbp-0xc4]
  40a65b:	lea    rdx,[rax*4+0x0]
  40a663:	mov    rax,QWORD PTR [rbp-0xe0]
  40a66a:	lea    rbx,[rdx+rax*1]
  40a66e:	mov    eax,DWORD PTR [rbp-0xb4]
  40a674:	mov    edi,eax
  40a676:	call   4066f5 <main@@Base+0x116>
  40a67b:	mov    DWORD PTR [rbx],eax
  40a67d:	cmp    QWORD PTR [rbp-0xf0],0x0
  40a685:	je     40a720 <flatcc_builder_vector_edit@@Base+0x372>
  40a68b:	mov    edx,DWORD PTR [rbp-0xc4]
  40a691:	mov    rax,QWORD PTR [rbp-0xf0]
  40a698:	add    rax,rdx
  40a69b:	movzx  eax,BYTE PTR [rax]
  40a69e:	test   al,al
  40a6a0:	jne    40a720 <flatcc_builder_vector_edit@@Base+0x372>
  40a6a2:	lea    rcx,[rip+0xa767]        # 414e10 <flatcc_builder_padding_base@@Base+0xa70>
  40a6a9:	mov    edx,0x5b1
  40a6ae:	lea    rsi,[rip+0x9eeb]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a6b5:	lea    rdi,[rip+0xa1fa]        # 4148b6 <flatcc_builder_padding_base@@Base+0x516>
  40a6bc:	call   403070 <__assert_fail@plt>
  40a6c1:	cmp    QWORD PTR [rbp-0xf0],0x0
  40a6c9:	je     40a701 <flatcc_builder_vector_edit@@Base+0x353>
  40a6cb:	mov    edx,DWORD PTR [rbp-0xc4]
  40a6d1:	mov    rax,QWORD PTR [rbp-0xf0]
  40a6d8:	add    rax,rdx
  40a6db:	movzx  eax,BYTE PTR [rax]
  40a6de:	test   al,al
  40a6e0:	je     40a720 <flatcc_builder_vector_edit@@Base+0x372>
  40a6e2:	lea    rcx,[rip+0xa727]        # 414e10 <flatcc_builder_padding_base@@Base+0xa70>
  40a6e9:	mov    edx,0x5b5
  40a6ee:	lea    rsi,[rip+0x9eab]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a6f5:	lea    rdi,[rip+0xa1c8]        # 4148c4 <flatcc_builder_padding_base@@Base+0x524>
  40a6fc:	call   403070 <__assert_fail@plt>
  40a701:	lea    rcx,[rip+0xa708]        # 414e10 <flatcc_builder_padding_base@@Base+0xa70>
  40a708:	mov    edx,0x5b7
  40a70d:	lea    rsi,[rip+0x9e8c]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a714:	lea    rdi,[rip+0x9ee5]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40a71b:	call   403070 <__assert_fail@plt>
  40a720:	add    DWORD PTR [rbp-0xc4],0x1
  40a727:	mov    rax,QWORD PTR [rbp-0xe8]
  40a72e:	cmp    eax,DWORD PTR [rbp-0xc4]
  40a734:	ja     40a5ff <flatcc_builder_vector_edit@@Base+0x251>
  40a73a:	lea    rdx,[rbp-0xb0]
  40a741:	mov    rax,QWORD PTR [rbp-0xd8]
  40a748:	mov    rsi,rdx
  40a74b:	mov    rdi,rax
  40a74e:	call   407a09 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40a753:	mov    rbx,QWORD PTR [rbp-0x18]
  40a757:	xor    rbx,QWORD PTR fs:0x28
  40a760:	je     40a767 <flatcc_builder_vector_edit@@Base+0x3b9>
  40a762:	call   403060 <__stack_chk_fail@plt>
  40a767:	add    rsp,0xe8
  40a76e:	pop    rbx
  40a76f:	pop    rbp
  40a770:	ret    

000000000040a771 <flatcc_builder_create_offset_vector_direct@@Base>:
  40a771:	push   rbp
  40a772:	mov    rbp,rsp
  40a775:	sub    rsp,0x20
  40a779:	mov    QWORD PTR [rbp-0x8],rdi
  40a77d:	mov    QWORD PTR [rbp-0x10],rsi
  40a781:	mov    QWORD PTR [rbp-0x18],rdx
  40a785:	mov    rdx,QWORD PTR [rbp-0x18]
  40a789:	mov    rsi,QWORD PTR [rbp-0x10]
  40a78d:	mov    rax,QWORD PTR [rbp-0x8]
  40a791:	mov    ecx,0x0
  40a796:	mov    rdi,rax
  40a799:	call   40a3c0 <flatcc_builder_vector_edit@@Base+0x12>
  40a79e:	leave  
  40a79f:	ret    

000000000040a7a0 <flatcc_builder_end_offset_vector@@Base>:
  40a7a0:	push   rbp
  40a7a1:	mov    rbp,rsp
  40a7a4:	sub    rsp,0x20
  40a7a8:	mov    QWORD PTR [rbp-0x18],rdi
  40a7ac:	mov    rax,QWORD PTR [rbp-0x18]
  40a7b0:	mov    rax,QWORD PTR [rax+0x30]
  40a7b4:	movzx  eax,WORD PTR [rax+0xe]
  40a7b8:	cmp    ax,0x5
  40a7bc:	je     40a7dd <flatcc_builder_end_offset_vector@@Base+0x3d>
  40a7be:	lea    rcx,[rip+0xa67b]        # 414e40 <flatcc_builder_padding_base@@Base+0xaa0>
  40a7c5:	mov    edx,0x5c8
  40a7ca:	lea    rsi,[rip+0x9dcf]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a7d1:	lea    rdi,[rip+0x9f80]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  40a7d8:	call   403070 <__assert_fail@plt>
  40a7dd:	mov    rax,QWORD PTR [rbp-0x18]
  40a7e1:	mov    rax,QWORD PTR [rax+0x30]
  40a7e5:	mov    eax,DWORD PTR [rax+0x14]
  40a7e8:	mov    edx,eax
  40a7ea:	mov    rax,QWORD PTR [rbp-0x18]
  40a7ee:	mov    rcx,QWORD PTR [rax+0x18]
  40a7f2:	mov    rax,QWORD PTR [rbp-0x18]
  40a7f6:	mov    rsi,rcx
  40a7f9:	mov    rdi,rax
  40a7fc:	call   40a771 <flatcc_builder_create_offset_vector_direct@@Base>
  40a801:	mov    DWORD PTR [rbp-0x4],eax
  40a804:	cmp    DWORD PTR [rbp-0x4],0x0
  40a808:	jne    40a811 <flatcc_builder_end_offset_vector@@Base+0x71>
  40a80a:	mov    eax,0x0
  40a80f:	jmp    40a820 <flatcc_builder_end_offset_vector@@Base+0x80>
  40a811:	mov    rax,QWORD PTR [rbp-0x18]
  40a815:	mov    rdi,rax
  40a818:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40a81d:	mov    eax,DWORD PTR [rbp-0x4]
  40a820:	leave  
  40a821:	ret    

000000000040a822 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  40a822:	push   rbp
  40a823:	mov    rbp,rsp
  40a826:	sub    rsp,0x20
  40a82a:	mov    QWORD PTR [rbp-0x18],rdi
  40a82e:	mov    QWORD PTR [rbp-0x20],rsi
  40a832:	mov    rax,QWORD PTR [rbp-0x18]
  40a836:	mov    rax,QWORD PTR [rax+0x30]
  40a83a:	movzx  eax,WORD PTR [rax+0xe]
  40a83e:	cmp    ax,0x5
  40a842:	je     40a863 <flatcc_builder_end_offset_vector_for_unions@@Base+0x41>
  40a844:	lea    rcx,[rip+0xa635]        # 414e80 <flatcc_builder_padding_base@@Base+0xae0>
  40a84b:	mov    edx,0x5d5
  40a850:	lea    rsi,[rip+0x9d49]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a857:	lea    rdi,[rip+0x9efa]        # 414758 <flatcc_builder_padding_base@@Base+0x3b8>
  40a85e:	call   403070 <__assert_fail@plt>
  40a863:	mov    rax,QWORD PTR [rbp-0x18]
  40a867:	mov    rax,QWORD PTR [rax+0x30]
  40a86b:	mov    eax,DWORD PTR [rax+0x14]
  40a86e:	mov    edi,eax
  40a870:	mov    rax,QWORD PTR [rbp-0x18]
  40a874:	mov    rsi,QWORD PTR [rax+0x18]
  40a878:	mov    rdx,QWORD PTR [rbp-0x20]
  40a87c:	mov    rax,QWORD PTR [rbp-0x18]
  40a880:	mov    rcx,rdx
  40a883:	mov    rdx,rdi
  40a886:	mov    rdi,rax
  40a889:	call   40a3c0 <flatcc_builder_vector_edit@@Base+0x12>
  40a88e:	mov    DWORD PTR [rbp-0x4],eax
  40a891:	cmp    DWORD PTR [rbp-0x4],0x0
  40a895:	jne    40a89e <flatcc_builder_end_offset_vector_for_unions@@Base+0x7c>
  40a897:	mov    eax,0x0
  40a89c:	jmp    40a8ad <flatcc_builder_end_offset_vector_for_unions@@Base+0x8b>
  40a89e:	mov    rax,QWORD PTR [rbp-0x18]
  40a8a2:	mov    rdi,rax
  40a8a5:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40a8aa:	mov    eax,DWORD PTR [rbp-0x4]
  40a8ad:	leave  
  40a8ae:	ret    

000000000040a8af <flatcc_builder_offset_vector_edit@@Base>:
  40a8af:	push   rbp
  40a8b0:	mov    rbp,rsp
  40a8b3:	mov    QWORD PTR [rbp-0x8],rdi
  40a8b7:	mov    rax,QWORD PTR [rbp-0x8]
  40a8bb:	mov    rax,QWORD PTR [rax+0x18]
  40a8bf:	pop    rbp
  40a8c0:	ret    

000000000040a8c1 <flatcc_builder_offset_vector_count@@Base>:
  40a8c1:	push   rbp
  40a8c2:	mov    rbp,rsp
  40a8c5:	mov    QWORD PTR [rbp-0x8],rdi
  40a8c9:	mov    rax,QWORD PTR [rbp-0x8]
  40a8cd:	mov    rax,QWORD PTR [rax+0x30]
  40a8d1:	mov    eax,DWORD PTR [rax+0x14]
  40a8d4:	mov    eax,eax
  40a8d6:	pop    rbp
  40a8d7:	ret    

000000000040a8d8 <flatcc_builder_table_add_union@@Base>:
  40a8d8:	push   rbp
  40a8d9:	mov    rbp,rsp
  40a8dc:	sub    rsp,0x30
  40a8e0:	mov    QWORD PTR [rbp-0x18],rdi
  40a8e4:	mov    DWORD PTR [rbp-0x1c],esi
  40a8e7:	mov    QWORD PTR [rbp-0x24],rdx
  40a8eb:	mov    rax,QWORD PTR [rbp-0x18]
  40a8ef:	mov    rax,QWORD PTR [rax+0x30]
  40a8f3:	movzx  eax,WORD PTR [rax+0xe]
  40a8f7:	cmp    ax,0x3
  40a8fb:	je     40a91c <flatcc_builder_table_add_union@@Base+0x44>
  40a8fd:	lea    rcx,[rip+0xa5ac]        # 414eb0 <flatcc_builder_padding_base@@Base+0xb10>
  40a904:	mov    edx,0x5ee
  40a909:	lea    rsi,[rip+0x9c90]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a910:	lea    rdi,[rip+0x9f61]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40a917:	call   403070 <__assert_fail@plt>
  40a91c:	movzx  eax,BYTE PTR [rbp-0x24]
  40a920:	test   al,al
  40a922:	jne    40a963 <flatcc_builder_table_add_union@@Base+0x8b>
  40a924:	mov    eax,DWORD PTR [rbp-0x20]
  40a927:	test   eax,eax
  40a929:	je     40a963 <flatcc_builder_table_add_union@@Base+0x8b>
  40a92b:	movzx  eax,BYTE PTR [rbp-0x24]
  40a92f:	test   al,al
  40a931:	jne    40a959 <flatcc_builder_table_add_union@@Base+0x81>
  40a933:	mov    eax,DWORD PTR [rbp-0x20]
  40a936:	test   eax,eax
  40a938:	je     40a959 <flatcc_builder_table_add_union@@Base+0x81>
  40a93a:	lea    rcx,[rip+0xa56f]        # 414eb0 <flatcc_builder_padding_base@@Base+0xb10>
  40a941:	mov    edx,0x5ef
  40a946:	lea    rsi,[rip+0x9c53]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a94d:	lea    rdi,[rip+0x9f84]        # 4148d8 <flatcc_builder_padding_base@@Base+0x538>
  40a954:	call   403070 <__assert_fail@plt>
  40a959:	mov    eax,0xffffffff
  40a95e:	jmp    40aa2b <flatcc_builder_table_add_union@@Base+0x153>
  40a963:	mov    eax,DWORD PTR [rbp-0x20]
  40a966:	test   eax,eax
  40a968:	je     40a9bc <flatcc_builder_table_add_union@@Base+0xe4>
  40a96a:	mov    edx,DWORD PTR [rbp-0x1c]
  40a96d:	mov    rax,QWORD PTR [rbp-0x18]
  40a971:	mov    esi,edx
  40a973:	mov    rdi,rax
  40a976:	call   40b67c <flatcc_builder_table_add_offset@@Base>
  40a97b:	mov    QWORD PTR [rbp-0x10],rax
  40a97f:	cmp    QWORD PTR [rbp-0x10],0x0
  40a984:	jne    40a9b3 <flatcc_builder_table_add_union@@Base+0xdb>
  40a986:	cmp    QWORD PTR [rbp-0x10],0x0
  40a98b:	jne    40a9ac <flatcc_builder_table_add_union@@Base+0xd4>
  40a98d:	lea    rcx,[rip+0xa51c]        # 414eb0 <flatcc_builder_padding_base@@Base+0xb10>
  40a994:	mov    edx,0x5f2
  40a999:	lea    rsi,[rip+0x9c00]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a9a0:	lea    rdi,[rip+0x9f53]        # 4148fa <flatcc_builder_padding_base@@Base+0x55a>
  40a9a7:	call   403070 <__assert_fail@plt>
  40a9ac:	mov    eax,0xffffffff
  40a9b1:	jmp    40aa2b <flatcc_builder_table_add_union@@Base+0x153>
  40a9b3:	mov    edx,DWORD PTR [rbp-0x20]
  40a9b6:	mov    rax,QWORD PTR [rbp-0x10]
  40a9ba:	mov    DWORD PTR [rax],edx
  40a9bc:	mov    eax,DWORD PTR [rbp-0x1c]
  40a9bf:	lea    esi,[rax-0x1]
  40a9c2:	mov    rax,QWORD PTR [rbp-0x18]
  40a9c6:	mov    ecx,0x1
  40a9cb:	mov    edx,0x1
  40a9d0:	mov    rdi,rax
  40a9d3:	call   40b4ae <flatcc_builder_table_add@@Base>
  40a9d8:	mov    QWORD PTR [rbp-0x8],rax
  40a9dc:	cmp    QWORD PTR [rbp-0x8],0x0
  40a9e1:	jne    40aa10 <flatcc_builder_table_add_union@@Base+0x138>
  40a9e3:	cmp    QWORD PTR [rbp-0x8],0x0
  40a9e8:	jne    40aa09 <flatcc_builder_table_add_union@@Base+0x131>
  40a9ea:	lea    rcx,[rip+0xa4bf]        # 414eb0 <flatcc_builder_padding_base@@Base+0xb10>
  40a9f1:	mov    edx,0x5f6
  40a9f6:	lea    rsi,[rip+0x9ba3]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40a9fd:	lea    rdi,[rip+0x9f00]        # 414904 <flatcc_builder_padding_base@@Base+0x564>
  40aa04:	call   403070 <__assert_fail@plt>
  40aa09:	mov    eax,0xffffffff
  40aa0e:	jmp    40aa2b <flatcc_builder_table_add_union@@Base+0x153>
  40aa10:	movzx  eax,BYTE PTR [rbp-0x24]
  40aa14:	movzx  eax,al
  40aa17:	mov    edi,eax
  40aa19:	call   406701 <main@@Base+0x122>
  40aa1e:	mov    edx,eax
  40aa20:	mov    rax,QWORD PTR [rbp-0x8]
  40aa24:	mov    BYTE PTR [rax],dl
  40aa26:	mov    eax,0x0
  40aa2b:	leave  
  40aa2c:	ret    

000000000040aa2d <flatcc_builder_table_add_union_vector@@Base>:
  40aa2d:	push   rbp
  40aa2e:	mov    rbp,rsp
  40aa31:	sub    rsp,0x30
  40aa35:	mov    QWORD PTR [rbp-0x18],rdi
  40aa39:	mov    DWORD PTR [rbp-0x1c],esi
  40aa3c:	mov    QWORD PTR [rbp-0x24],rdx
  40aa40:	mov    rax,QWORD PTR [rbp-0x18]
  40aa44:	mov    rax,QWORD PTR [rax+0x30]
  40aa48:	movzx  eax,WORD PTR [rax+0xe]
  40aa4c:	cmp    ax,0x3
  40aa50:	je     40aa71 <flatcc_builder_table_add_union_vector@@Base+0x44>
  40aa52:	lea    rcx,[rip+0xa487]        # 414ee0 <flatcc_builder_padding_base@@Base+0xb40>
  40aa59:	mov    edx,0x600
  40aa5e:	lea    rsi,[rip+0x9b3b]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40aa65:	lea    rdi,[rip+0x9e0c]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40aa6c:	call   403070 <__assert_fail@plt>
  40aa71:	mov    eax,DWORD PTR [rbp-0x24]
  40aa74:	test   eax,eax
  40aa76:	sete   dl
  40aa79:	mov    eax,DWORD PTR [rbp-0x20]
  40aa7c:	test   eax,eax
  40aa7e:	sete   al
  40aa81:	xor    eax,edx
  40aa83:	test   al,al
  40aa85:	je     40aac6 <flatcc_builder_table_add_union_vector@@Base+0x99>
  40aa87:	mov    eax,DWORD PTR [rbp-0x24]
  40aa8a:	test   eax,eax
  40aa8c:	setne  dl
  40aa8f:	mov    eax,DWORD PTR [rbp-0x20]
  40aa92:	test   eax,eax
  40aa94:	sete   al
  40aa97:	xor    eax,edx
  40aa99:	test   al,al
  40aa9b:	jne    40aabc <flatcc_builder_table_add_union_vector@@Base+0x8f>
  40aa9d:	lea    rcx,[rip+0xa43c]        # 414ee0 <flatcc_builder_padding_base@@Base+0xb40>
  40aaa4:	mov    edx,0x601
  40aaa9:	lea    rsi,[rip+0x9af0]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40aab0:	lea    rdi,[rip+0x9e59]        # 414910 <flatcc_builder_padding_base@@Base+0x570>
  40aab7:	call   403070 <__assert_fail@plt>
  40aabc:	mov    eax,0xffffffff
  40aac1:	jmp    40ab7d <flatcc_builder_table_add_union_vector@@Base+0x150>
  40aac6:	mov    eax,DWORD PTR [rbp-0x24]
  40aac9:	test   eax,eax
  40aacb:	je     40ab78 <flatcc_builder_table_add_union_vector@@Base+0x14b>
  40aad1:	mov    eax,DWORD PTR [rbp-0x1c]
  40aad4:	lea    edx,[rax-0x1]
  40aad7:	mov    rax,QWORD PTR [rbp-0x18]
  40aadb:	mov    esi,edx
  40aadd:	mov    rdi,rax
  40aae0:	call   40b67c <flatcc_builder_table_add_offset@@Base>
  40aae5:	mov    QWORD PTR [rbp-0x8],rax
  40aae9:	cmp    QWORD PTR [rbp-0x8],0x0
  40aaee:	jne    40ab1d <flatcc_builder_table_add_union_vector@@Base+0xf0>
  40aaf0:	cmp    QWORD PTR [rbp-0x8],0x0
  40aaf5:	jne    40ab16 <flatcc_builder_table_add_union_vector@@Base+0xe9>
  40aaf7:	lea    rcx,[rip+0xa3e2]        # 414ee0 <flatcc_builder_padding_base@@Base+0xb40>
  40aafe:	mov    edx,0x604
  40ab03:	lea    rsi,[rip+0x9a96]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40ab0a:	lea    rdi,[rip+0x9de9]        # 4148fa <flatcc_builder_padding_base@@Base+0x55a>
  40ab11:	call   403070 <__assert_fail@plt>
  40ab16:	mov    eax,0xffffffff
  40ab1b:	jmp    40ab7d <flatcc_builder_table_add_union_vector@@Base+0x150>
  40ab1d:	mov    edx,DWORD PTR [rbp-0x24]
  40ab20:	mov    rax,QWORD PTR [rbp-0x8]
  40ab24:	mov    DWORD PTR [rax],edx
  40ab26:	mov    edx,DWORD PTR [rbp-0x1c]
  40ab29:	mov    rax,QWORD PTR [rbp-0x18]
  40ab2d:	mov    esi,edx
  40ab2f:	mov    rdi,rax
  40ab32:	call   40b67c <flatcc_builder_table_add_offset@@Base>
  40ab37:	mov    QWORD PTR [rbp-0x8],rax
  40ab3b:	cmp    QWORD PTR [rbp-0x8],0x0
  40ab40:	jne    40ab6f <flatcc_builder_table_add_union_vector@@Base+0x142>
  40ab42:	cmp    QWORD PTR [rbp-0x8],0x0
  40ab47:	jne    40ab68 <flatcc_builder_table_add_union_vector@@Base+0x13b>
  40ab49:	lea    rcx,[rip+0xa390]        # 414ee0 <flatcc_builder_padding_base@@Base+0xb40>
  40ab50:	mov    edx,0x608
  40ab55:	lea    rsi,[rip+0x9a44]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40ab5c:	lea    rdi,[rip+0x9d97]        # 4148fa <flatcc_builder_padding_base@@Base+0x55a>
  40ab63:	call   403070 <__assert_fail@plt>
  40ab68:	mov    eax,0xffffffff
  40ab6d:	jmp    40ab7d <flatcc_builder_table_add_union_vector@@Base+0x150>
  40ab6f:	mov    edx,DWORD PTR [rbp-0x20]
  40ab72:	mov    rax,QWORD PTR [rbp-0x8]
  40ab76:	mov    DWORD PTR [rax],edx
  40ab78:	mov    eax,0x0
  40ab7d:	leave  
  40ab7e:	ret    

000000000040ab7f <flatcc_builder_create_union_vector@@Base>:
  40ab7f:	push   rbp
  40ab80:	mov    rbp,rsp
  40ab83:	sub    rsp,0x40
  40ab87:	mov    QWORD PTR [rbp-0x28],rdi
  40ab8b:	mov    QWORD PTR [rbp-0x30],rsi
  40ab8f:	mov    QWORD PTR [rbp-0x38],rdx
  40ab93:	mov    DWORD PTR [rbp-0x8],0x0
  40ab9a:	mov    DWORD PTR [rbp-0x4],0x0
  40aba1:	mov    rax,QWORD PTR [rbp-0x28]
  40aba5:	mov    rdi,rax
  40aba8:	call   4091ae <flatcc_builder_start_offset_vector@@Base>
  40abad:	test   eax,eax
  40abaf:	je     40abba <flatcc_builder_create_union_vector@@Base+0x3b>
  40abb1:	mov    rax,QWORD PTR [rbp-0x8]
  40abb5:	jmp    40aca6 <flatcc_builder_create_union_vector@@Base+0x127>
  40abba:	mov    rdx,QWORD PTR [rbp-0x38]
  40abbe:	mov    rax,QWORD PTR [rbp-0x28]
  40abc2:	mov    rsi,rdx
  40abc5:	mov    rdi,rax
  40abc8:	call   408bbe <flatcc_builder_extend_offset_vector@@Base>
  40abcd:	test   rax,rax
  40abd0:	jne    40abdb <flatcc_builder_create_union_vector@@Base+0x5c>
  40abd2:	mov    rax,QWORD PTR [rbp-0x8]
  40abd6:	jmp    40aca6 <flatcc_builder_create_union_vector@@Base+0x127>
  40abdb:	mov    rax,QWORD PTR [rbp-0x38]
  40abdf:	mov    edx,eax
  40abe1:	mov    rax,QWORD PTR [rbp-0x28]
  40abe5:	mov    esi,edx
  40abe7:	mov    rdi,rax
  40abea:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  40abef:	mov    QWORD PTR [rbp-0x18],rax
  40abf3:	cmp    QWORD PTR [rbp-0x18],0x0
  40abf8:	jne    40ac03 <flatcc_builder_create_union_vector@@Base+0x84>
  40abfa:	mov    rax,QWORD PTR [rbp-0x8]
  40abfe:	jmp    40aca6 <flatcc_builder_create_union_vector@@Base+0x127>
  40ac03:	mov    rax,QWORD PTR [rbp-0x28]
  40ac07:	mov    rdi,rax
  40ac0a:	call   40a8af <flatcc_builder_offset_vector_edit@@Base>
  40ac0f:	mov    QWORD PTR [rbp-0x10],rax
  40ac13:	mov    QWORD PTR [rbp-0x20],0x0
  40ac1b:	jmp    40ac70 <flatcc_builder_create_union_vector@@Base+0xf1>
  40ac1d:	mov    rdx,QWORD PTR [rbp-0x18]
  40ac21:	mov    rax,QWORD PTR [rbp-0x20]
  40ac25:	add    rdx,rax
  40ac28:	mov    rax,QWORD PTR [rbp-0x20]
  40ac2c:	lea    rcx,[rax*8+0x0]
  40ac34:	mov    rax,QWORD PTR [rbp-0x30]
  40ac38:	add    rax,rcx
  40ac3b:	movzx  eax,BYTE PTR [rax]
  40ac3e:	mov    BYTE PTR [rdx],al
  40ac40:	mov    rax,QWORD PTR [rbp-0x20]
  40ac44:	lea    rdx,[rax*4+0x0]
  40ac4c:	mov    rax,QWORD PTR [rbp-0x10]
  40ac50:	add    rdx,rax
  40ac53:	mov    rax,QWORD PTR [rbp-0x20]
  40ac57:	lea    rcx,[rax*8+0x0]
  40ac5f:	mov    rax,QWORD PTR [rbp-0x30]
  40ac63:	add    rax,rcx
  40ac66:	mov    eax,DWORD PTR [rax+0x4]
  40ac69:	mov    DWORD PTR [rdx],eax
  40ac6b:	add    QWORD PTR [rbp-0x20],0x1
  40ac70:	mov    rax,QWORD PTR [rbp-0x20]
  40ac74:	cmp    rax,QWORD PTR [rbp-0x38]
  40ac78:	jb     40ac1d <flatcc_builder_create_union_vector@@Base+0x9e>
  40ac7a:	mov    rcx,QWORD PTR [rbp-0x38]
  40ac7e:	mov    rdx,QWORD PTR [rbp-0x10]
  40ac82:	mov    rsi,QWORD PTR [rbp-0x18]
  40ac86:	mov    rax,QWORD PTR [rbp-0x28]
  40ac8a:	mov    rdi,rax
  40ac8d:	call   40aca8 <flatcc_builder_create_union_vector_direct@@Base>
  40ac92:	mov    QWORD PTR [rbp-0x8],rax
  40ac96:	mov    rax,QWORD PTR [rbp-0x28]
  40ac9a:	mov    rdi,rax
  40ac9d:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40aca2:	mov    rax,QWORD PTR [rbp-0x8]
  40aca6:	leave  
  40aca7:	ret    

000000000040aca8 <flatcc_builder_create_union_vector_direct@@Base>:
  40aca8:	push   rbp
  40aca9:	mov    rbp,rsp
  40acac:	sub    rsp,0x30
  40acb0:	mov    QWORD PTR [rbp-0x18],rdi
  40acb4:	mov    QWORD PTR [rbp-0x20],rsi
  40acb8:	mov    QWORD PTR [rbp-0x28],rdx
  40acbc:	mov    QWORD PTR [rbp-0x30],rcx
  40acc0:	mov    DWORD PTR [rbp-0x8],0x0
  40acc7:	mov    DWORD PTR [rbp-0x4],0x0
  40acce:	mov    rcx,QWORD PTR [rbp-0x20]
  40acd2:	mov    rdx,QWORD PTR [rbp-0x30]
  40acd6:	mov    rsi,QWORD PTR [rbp-0x28]
  40acda:	mov    rax,QWORD PTR [rbp-0x18]
  40acde:	mov    rdi,rax
  40ace1:	call   40a3c0 <flatcc_builder_vector_edit@@Base+0x12>
  40ace6:	mov    DWORD PTR [rbp-0x4],eax
  40ace9:	mov    eax,DWORD PTR [rbp-0x4]
  40acec:	test   eax,eax
  40acee:	jne    40acf6 <flatcc_builder_create_union_vector_direct@@Base+0x4e>
  40acf0:	mov    rax,QWORD PTR [rbp-0x8]
  40acf4:	jmp    40ad2f <flatcc_builder_create_union_vector_direct@@Base+0x87>
  40acf6:	mov    rdx,QWORD PTR [rbp-0x30]
  40acfa:	mov    rsi,QWORD PTR [rbp-0x20]
  40acfe:	mov    rax,QWORD PTR [rbp-0x18]
  40ad02:	mov    r9d,0xffffffff
  40ad08:	mov    r8d,0x1
  40ad0e:	mov    ecx,0x1
  40ad13:	mov    rdi,rax
  40ad16:	call   40a055 <flatcc_builder_create_vector@@Base>
  40ad1b:	mov    DWORD PTR [rbp-0x8],eax
  40ad1e:	mov    eax,DWORD PTR [rbp-0x8]
  40ad21:	test   eax,eax
  40ad23:	jne    40ad2b <flatcc_builder_create_union_vector_direct@@Base+0x83>
  40ad25:	mov    rax,QWORD PTR [rbp-0x8]
  40ad29:	jmp    40ad2f <flatcc_builder_create_union_vector_direct@@Base+0x87>
  40ad2b:	mov    rax,QWORD PTR [rbp-0x8]
  40ad2f:	leave  
  40ad30:	ret    

000000000040ad31 <flatcc_builder_start_union_vector@@Base>:
  40ad31:	push   rbp
  40ad32:	mov    rbp,rsp
  40ad35:	sub    rsp,0x10
  40ad39:	mov    QWORD PTR [rbp-0x8],rdi
  40ad3d:	mov    rax,QWORD PTR [rbp-0x8]
  40ad41:	mov    esi,0x4
  40ad46:	mov    rdi,rax
  40ad49:	call   40771e <flatcc_builder_get_user_frame_ptr@@Base+0x22>
  40ad4e:	test   eax,eax
  40ad50:	je     40ad59 <flatcc_builder_start_union_vector@@Base+0x28>
  40ad52:	mov    eax,0xffffffff
  40ad57:	jmp    40ad9b <flatcc_builder_start_union_vector@@Base+0x6a>
  40ad59:	mov    rax,QWORD PTR [rbp-0x8]
  40ad5d:	mov    rax,QWORD PTR [rax+0x30]
  40ad61:	mov    DWORD PTR [rax+0x10],0x8
  40ad68:	mov    rax,QWORD PTR [rbp-0x8]
  40ad6c:	mov    rax,QWORD PTR [rax+0x30]
  40ad70:	mov    DWORD PTR [rax+0x14],0x0
  40ad77:	mov    rax,QWORD PTR [rbp-0x8]
  40ad7b:	mov    rax,QWORD PTR [rax+0x30]
  40ad7f:	mov    WORD PTR [rax+0xe],0x7
  40ad85:	mov    rax,QWORD PTR [rbp-0x8]
  40ad89:	mov    esi,0xfffffffc
  40ad8e:	mov    rdi,rax
  40ad91:	call   406928 <flatcc_builder_default_alloc@@Base+0x16d>
  40ad96:	mov    eax,0x0
  40ad9b:	leave  
  40ad9c:	ret    

000000000040ad9d <flatcc_builder_end_union_vector@@Base>:
  40ad9d:	push   rbp
  40ad9e:	mov    rbp,rsp
  40ada1:	sub    rsp,0x40
  40ada5:	mov    QWORD PTR [rbp-0x38],rdi
  40ada9:	mov    DWORD PTR [rbp-0x8],0x0
  40adb0:	mov    DWORD PTR [rbp-0x4],0x0
  40adb7:	mov    rax,QWORD PTR [rbp-0x38]
  40adbb:	mov    rax,QWORD PTR [rax+0x30]
  40adbf:	movzx  eax,WORD PTR [rax+0xe]
  40adc3:	cmp    ax,0x7
  40adc7:	je     40ade8 <flatcc_builder_end_union_vector@@Base+0x4b>
  40adc9:	lea    rcx,[rip+0xa150]        # 414f20 <flatcc_builder_padding_base@@Base+0xb80>
  40add0:	mov    edx,0x651
  40add5:	lea    rsi,[rip+0x97c4]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40addc:	lea    rdi,[rip+0x9b55]        # 414938 <flatcc_builder_padding_base@@Base+0x598>
  40ade3:	call   403070 <__assert_fail@plt>
  40ade8:	mov    rax,QWORD PTR [rbp-0x38]
  40adec:	mov    rdi,rax
  40adef:	call   40aef5 <flatcc_builder_union_vector_count@@Base>
  40adf4:	mov    QWORD PTR [rbp-0x28],rax
  40adf8:	mov    rax,QWORD PTR [rbp-0x28]
  40adfc:	mov    edx,eax
  40adfe:	mov    eax,edx
  40ae00:	shl    eax,0x2
  40ae03:	add    edx,eax
  40ae05:	mov    rax,QWORD PTR [rbp-0x38]
  40ae09:	mov    esi,edx
  40ae0b:	mov    rdi,rax
  40ae0e:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  40ae13:	mov    QWORD PTR [rbp-0x20],rax
  40ae17:	cmp    QWORD PTR [rbp-0x20],0x0
  40ae1c:	jne    40ae27 <flatcc_builder_end_union_vector@@Base+0x8a>
  40ae1e:	mov    rax,QWORD PTR [rbp-0x8]
  40ae22:	jmp    40aee1 <flatcc_builder_end_union_vector@@Base+0x144>
  40ae27:	mov    rax,QWORD PTR [rbp-0x28]
  40ae2b:	lea    rdx,[rax*4+0x0]
  40ae33:	mov    rax,QWORD PTR [rbp-0x20]
  40ae37:	add    rax,rdx
  40ae3a:	mov    QWORD PTR [rbp-0x18],rax
  40ae3e:	mov    rax,QWORD PTR [rbp-0x38]
  40ae42:	mov    rdi,rax
  40ae45:	call   40aee3 <flatcc_builder_union_vector_edit@@Base>
  40ae4a:	mov    QWORD PTR [rbp-0x10],rax
  40ae4e:	mov    QWORD PTR [rbp-0x30],0x0
  40ae56:	jmp    40aeab <flatcc_builder_end_union_vector@@Base+0x10e>
  40ae58:	mov    rdx,QWORD PTR [rbp-0x18]
  40ae5c:	mov    rax,QWORD PTR [rbp-0x30]
  40ae60:	add    rdx,rax
  40ae63:	mov    rax,QWORD PTR [rbp-0x30]
  40ae67:	lea    rcx,[rax*8+0x0]
  40ae6f:	mov    rax,QWORD PTR [rbp-0x10]
  40ae73:	add    rax,rcx
  40ae76:	movzx  eax,BYTE PTR [rax]
  40ae79:	mov    BYTE PTR [rdx],al
  40ae7b:	mov    rax,QWORD PTR [rbp-0x30]
  40ae7f:	lea    rdx,[rax*4+0x0]
  40ae87:	mov    rax,QWORD PTR [rbp-0x20]
  40ae8b:	add    rdx,rax
  40ae8e:	mov    rax,QWORD PTR [rbp-0x30]
  40ae92:	lea    rcx,[rax*8+0x0]
  40ae9a:	mov    rax,QWORD PTR [rbp-0x10]
  40ae9e:	add    rax,rcx
  40aea1:	mov    eax,DWORD PTR [rax+0x4]
  40aea4:	mov    DWORD PTR [rdx],eax
  40aea6:	add    QWORD PTR [rbp-0x30],0x1
  40aeab:	mov    rax,QWORD PTR [rbp-0x30]
  40aeaf:	cmp    rax,QWORD PTR [rbp-0x28]
  40aeb3:	jb     40ae58 <flatcc_builder_end_union_vector@@Base+0xbb>
  40aeb5:	mov    rcx,QWORD PTR [rbp-0x28]
  40aeb9:	mov    rdx,QWORD PTR [rbp-0x20]
  40aebd:	mov    rsi,QWORD PTR [rbp-0x18]
  40aec1:	mov    rax,QWORD PTR [rbp-0x38]
  40aec5:	mov    rdi,rax
  40aec8:	call   40aca8 <flatcc_builder_create_union_vector_direct@@Base>
  40aecd:	mov    QWORD PTR [rbp-0x8],rax
  40aed1:	mov    rax,QWORD PTR [rbp-0x38]
  40aed5:	mov    rdi,rax
  40aed8:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40aedd:	mov    rax,QWORD PTR [rbp-0x8]
  40aee1:	leave  
  40aee2:	ret    

000000000040aee3 <flatcc_builder_union_vector_edit@@Base>:
  40aee3:	push   rbp
  40aee4:	mov    rbp,rsp
  40aee7:	mov    QWORD PTR [rbp-0x8],rdi
  40aeeb:	mov    rax,QWORD PTR [rbp-0x8]
  40aeef:	mov    rax,QWORD PTR [rax+0x18]
  40aef3:	pop    rbp
  40aef4:	ret    

000000000040aef5 <flatcc_builder_union_vector_count@@Base>:
  40aef5:	push   rbp
  40aef6:	mov    rbp,rsp
  40aef9:	mov    QWORD PTR [rbp-0x8],rdi
  40aefd:	mov    rax,QWORD PTR [rbp-0x8]
  40af01:	mov    rax,QWORD PTR [rax+0x30]
  40af05:	mov    eax,DWORD PTR [rax+0x14]
  40af08:	mov    eax,eax
  40af0a:	pop    rbp
  40af0b:	ret    

000000000040af0c <flatcc_builder_extend_union_vector@@Base>:
  40af0c:	push   rbp
  40af0d:	mov    rbp,rsp
  40af10:	sub    rsp,0x10
  40af14:	mov    QWORD PTR [rbp-0x8],rdi
  40af18:	mov    QWORD PTR [rbp-0x10],rsi
  40af1c:	mov    rax,QWORD PTR [rbp-0x10]
  40af20:	mov    ecx,eax
  40af22:	mov    rax,QWORD PTR [rbp-0x8]
  40af26:	mov    edx,0x1fffffff
  40af2b:	mov    esi,ecx
  40af2d:	mov    rdi,rax
  40af30:	call   408972 <flatcc_builder_end_struct@@Base+0x8e>
  40af35:	test   eax,eax
  40af37:	je     40af40 <flatcc_builder_extend_union_vector@@Base+0x34>
  40af39:	mov    eax,0x0
  40af3e:	jmp    40af59 <flatcc_builder_extend_union_vector@@Base+0x4d>
  40af40:	mov    rax,QWORD PTR [rbp-0x10]
  40af44:	lea    edx,[rax*8+0x0]
  40af4b:	mov    rax,QWORD PTR [rbp-0x8]
  40af4f:	mov    esi,edx
  40af51:	mov    rdi,rax
  40af54:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  40af59:	leave  
  40af5a:	ret    

000000000040af5b <flatcc_builder_truncate_union_vector@@Base>:
  40af5b:	push   rbp
  40af5c:	mov    rbp,rsp
  40af5f:	sub    rsp,0x10
  40af63:	mov    QWORD PTR [rbp-0x8],rdi
  40af67:	mov    QWORD PTR [rbp-0x10],rsi
  40af6b:	mov    rax,QWORD PTR [rbp-0x8]
  40af6f:	mov    rax,QWORD PTR [rax+0x30]
  40af73:	movzx  eax,WORD PTR [rax+0xe]
  40af77:	cmp    ax,0x7
  40af7b:	je     40af9c <flatcc_builder_truncate_union_vector@@Base+0x41>
  40af7d:	lea    rcx,[rip+0x9fbc]        # 414f40 <flatcc_builder_padding_base@@Base+0xba0>
  40af84:	mov    edx,0x681
  40af89:	lea    rsi,[rip+0x9610]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40af90:	lea    rdi,[rip+0x99a1]        # 414938 <flatcc_builder_padding_base@@Base+0x598>
  40af97:	call   403070 <__assert_fail@plt>
  40af9c:	mov    rax,QWORD PTR [rbp-0x8]
  40afa0:	mov    rax,QWORD PTR [rax+0x30]
  40afa4:	mov    eax,DWORD PTR [rax+0x14]
  40afa7:	mov    rdx,QWORD PTR [rbp-0x10]
  40afab:	cmp    eax,edx
  40afad:	jae    40afe8 <flatcc_builder_truncate_union_vector@@Base+0x8d>
  40afaf:	mov    rax,QWORD PTR [rbp-0x8]
  40afb3:	mov    rax,QWORD PTR [rax+0x30]
  40afb7:	mov    eax,DWORD PTR [rax+0x14]
  40afba:	mov    rdx,QWORD PTR [rbp-0x10]
  40afbe:	cmp    eax,edx
  40afc0:	jae    40afe1 <flatcc_builder_truncate_union_vector@@Base+0x86>
  40afc2:	lea    rcx,[rip+0x9f77]        # 414f40 <flatcc_builder_padding_base@@Base+0xba0>
  40afc9:	mov    edx,0x682
  40afce:	lea    rsi,[rip+0x95cb]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40afd5:	lea    rdi,[rip+0x980c]        # 4147e8 <flatcc_builder_padding_base@@Base+0x448>
  40afdc:	call   403070 <__assert_fail@plt>
  40afe1:	mov    eax,0xffffffff
  40afe6:	jmp    40b029 <flatcc_builder_truncate_union_vector@@Base+0xce>
  40afe8:	mov    rax,QWORD PTR [rbp-0x8]
  40afec:	mov    rax,QWORD PTR [rax+0x30]
  40aff0:	mov    rdx,QWORD PTR [rbp-0x8]
  40aff4:	mov    rdx,QWORD PTR [rdx+0x30]
  40aff8:	mov    edx,DWORD PTR [rdx+0x14]
  40affb:	mov    rcx,QWORD PTR [rbp-0x10]
  40afff:	sub    edx,ecx
  40b001:	mov    DWORD PTR [rax+0x14],edx
  40b004:	mov    rax,QWORD PTR [rbp-0x8]
  40b008:	mov    rax,QWORD PTR [rax+0x30]
  40b00c:	mov    eax,DWORD PTR [rax+0x10]
  40b00f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b013:	imul   edx,eax
  40b016:	mov    rax,QWORD PTR [rbp-0x8]
  40b01a:	mov    esi,edx
  40b01c:	mov    rdi,rax
  40b01f:	call   406a98 <flatcc_builder_default_alloc@@Base+0x2dd>
  40b024:	mov    eax,0x0
  40b029:	leave  
  40b02a:	ret    

000000000040b02b <flatcc_builder_union_vector_push@@Base>:
  40b02b:	push   rbp
  40b02c:	mov    rbp,rsp
  40b02f:	sub    rsp,0x20
  40b033:	mov    QWORD PTR [rbp-0x18],rdi
  40b037:	mov    QWORD PTR [rbp-0x20],rsi
  40b03b:	mov    rax,QWORD PTR [rbp-0x18]
  40b03f:	mov    rax,QWORD PTR [rax+0x30]
  40b043:	movzx  eax,WORD PTR [rax+0xe]
  40b047:	cmp    ax,0x7
  40b04b:	je     40b06c <flatcc_builder_union_vector_push@@Base+0x41>
  40b04d:	lea    rcx,[rip+0x9f2c]        # 414f80 <flatcc_builder_padding_base@@Base+0xbe0>
  40b054:	mov    edx,0x68d
  40b059:	lea    rsi,[rip+0x9540]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b060:	lea    rdi,[rip+0x98d1]        # 414938 <flatcc_builder_padding_base@@Base+0x598>
  40b067:	call   403070 <__assert_fail@plt>
  40b06c:	mov    rax,QWORD PTR [rbp-0x18]
  40b070:	mov    rax,QWORD PTR [rax+0x30]
  40b074:	mov    eax,DWORD PTR [rax+0x14]
  40b077:	cmp    eax,0x1fffffff
  40b07c:	jne    40b085 <flatcc_builder_union_vector_push@@Base+0x5a>
  40b07e:	mov    eax,0x0
  40b083:	jmp    40b0d0 <flatcc_builder_union_vector_push@@Base+0xa5>
  40b085:	mov    rax,QWORD PTR [rbp-0x18]
  40b089:	mov    rax,QWORD PTR [rax+0x30]
  40b08d:	mov    rdx,QWORD PTR [rbp-0x18]
  40b091:	mov    rdx,QWORD PTR [rdx+0x30]
  40b095:	mov    edx,DWORD PTR [rdx+0x14]
  40b098:	add    edx,0x1
  40b09b:	mov    DWORD PTR [rax+0x14],edx
  40b09e:	mov    rax,QWORD PTR [rbp-0x18]
  40b0a2:	mov    esi,0x8
  40b0a7:	mov    rdi,rax
  40b0aa:	call   406a1b <flatcc_builder_default_alloc@@Base+0x260>
  40b0af:	mov    QWORD PTR [rbp-0x8],rax
  40b0b3:	cmp    QWORD PTR [rbp-0x8],0x0
  40b0b8:	jne    40b0c1 <flatcc_builder_union_vector_push@@Base+0x96>
  40b0ba:	mov    eax,0x0
  40b0bf:	jmp    40b0d0 <flatcc_builder_union_vector_push@@Base+0xa5>
  40b0c1:	mov    rax,QWORD PTR [rbp-0x8]
  40b0c5:	mov    rdx,QWORD PTR [rbp-0x20]
  40b0c9:	mov    QWORD PTR [rax],rdx
  40b0cc:	mov    rax,QWORD PTR [rbp-0x8]
  40b0d0:	leave  
  40b0d1:	ret    

000000000040b0d2 <flatcc_builder_append_union_vector@@Base>:
  40b0d2:	push   rbp
  40b0d3:	mov    rbp,rsp
  40b0d6:	sub    rsp,0x20
  40b0da:	mov    QWORD PTR [rbp-0x8],rdi
  40b0de:	mov    QWORD PTR [rbp-0x10],rsi
  40b0e2:	mov    QWORD PTR [rbp-0x18],rdx
  40b0e6:	mov    rax,QWORD PTR [rbp-0x8]
  40b0ea:	mov    rax,QWORD PTR [rax+0x30]
  40b0ee:	movzx  eax,WORD PTR [rax+0xe]
  40b0f2:	cmp    ax,0x7
  40b0f6:	je     40b117 <flatcc_builder_append_union_vector@@Base+0x45>
  40b0f8:	lea    rcx,[rip+0x9ec1]        # 414fc0 <flatcc_builder_padding_base@@Base+0xc20>
  40b0ff:	mov    edx,0x69c
  40b104:	lea    rsi,[rip+0x9495]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b10b:	lea    rdi,[rip+0x9826]        # 414938 <flatcc_builder_padding_base@@Base+0x598>
  40b112:	call   403070 <__assert_fail@plt>
  40b117:	mov    rax,QWORD PTR [rbp-0x18]
  40b11b:	mov    ecx,eax
  40b11d:	mov    rax,QWORD PTR [rbp-0x8]
  40b121:	mov    edx,0x1fffffff
  40b126:	mov    esi,ecx
  40b128:	mov    rdi,rax
  40b12b:	call   408972 <flatcc_builder_end_struct@@Base+0x8e>
  40b130:	test   eax,eax
  40b132:	je     40b13b <flatcc_builder_append_union_vector@@Base+0x69>
  40b134:	mov    eax,0x0
  40b139:	jmp    40b159 <flatcc_builder_append_union_vector@@Base+0x87>
  40b13b:	mov    rax,QWORD PTR [rbp-0x18]
  40b13f:	lea    edx,[rax*8+0x0]
  40b146:	mov    rcx,QWORD PTR [rbp-0x10]
  40b14a:	mov    rax,QWORD PTR [rbp-0x8]
  40b14e:	mov    rsi,rcx
  40b151:	mov    rdi,rax
  40b154:	call   406ae4 <flatcc_builder_default_alloc@@Base+0x329>
  40b159:	leave  
  40b15a:	ret    

000000000040b15b <flatcc_builder_create_string@@Base>:
  40b15b:	push   rbp
  40b15c:	mov    rbp,rsp
  40b15f:	sub    rsp,0xd0
  40b166:	mov    QWORD PTR [rbp-0xb8],rdi
  40b16d:	mov    QWORD PTR [rbp-0xc0],rsi
  40b174:	mov    QWORD PTR [rbp-0xc8],rdx
  40b17b:	mov    rax,QWORD PTR fs:0x28
  40b184:	mov    QWORD PTR [rbp-0x8],rax
  40b188:	xor    eax,eax
  40b18a:	mov    eax,0xffffffff
  40b18f:	cmp    QWORD PTR [rbp-0xc8],rax
  40b196:	jbe    40b1a2 <flatcc_builder_create_string@@Base+0x47>
  40b198:	mov    eax,0x0
  40b19d:	jmp    40b349 <flatcc_builder_create_string@@Base+0x1ee>
  40b1a2:	mov    rax,QWORD PTR [rbp-0xc8]
  40b1a9:	mov    edi,eax
  40b1ab:	call   4066f5 <main@@Base+0x116>
  40b1b0:	mov    DWORD PTR [rbp-0xa8],eax
  40b1b6:	mov    rax,QWORD PTR [rbp-0xc8]
  40b1bd:	lea    ecx,[rax+0x1]
  40b1c0:	mov    rax,QWORD PTR [rbp-0xb8]
  40b1c7:	mov    edx,0x4
  40b1cc:	mov    esi,ecx
  40b1ce:	mov    rdi,rax
  40b1d1:	call   4079bd <flatcc_builder_get_user_frame_ptr@@Base+0x2c1>
  40b1d6:	add    eax,0x1
  40b1d9:	mov    DWORD PTR [rbp-0xa4],eax
  40b1df:	mov    QWORD PTR [rbp-0xa0],0x0
  40b1ea:	mov    DWORD PTR [rbp-0x98],0x0
  40b1f4:	mov    rax,QWORD PTR [rbp-0xa0]
  40b1fb:	add    rax,0x4
  40b1ff:	mov    QWORD PTR [rbp-0xa0],rax
  40b206:	mov    eax,DWORD PTR [rbp-0x98]
  40b20c:	cdqe   
  40b20e:	shl    rax,0x4
  40b212:	add    rax,rbp
  40b215:	lea    rdx,[rax-0x90]
  40b21c:	lea    rax,[rbp-0xa8]
  40b223:	mov    QWORD PTR [rdx],rax
  40b226:	mov    eax,DWORD PTR [rbp-0x98]
  40b22c:	cdqe   
  40b22e:	shl    rax,0x4
  40b232:	add    rax,rbp
  40b235:	sub    rax,0x88
  40b23b:	mov    QWORD PTR [rax],0x4
  40b242:	mov    eax,DWORD PTR [rbp-0x98]
  40b248:	add    eax,0x1
  40b24b:	mov    DWORD PTR [rbp-0x98],eax
  40b251:	cmp    QWORD PTR [rbp-0xc8],0x0
  40b259:	je     40b2c2 <flatcc_builder_create_string@@Base+0x167>
  40b25b:	mov    rdx,QWORD PTR [rbp-0xa0]
  40b262:	mov    rax,QWORD PTR [rbp-0xc8]
  40b269:	add    rax,rdx
  40b26c:	mov    QWORD PTR [rbp-0xa0],rax
  40b273:	mov    eax,DWORD PTR [rbp-0x98]
  40b279:	cdqe   
  40b27b:	shl    rax,0x4
  40b27f:	add    rax,rbp
  40b282:	lea    rdx,[rax-0x90]
  40b289:	mov    rax,QWORD PTR [rbp-0xc0]
  40b290:	mov    QWORD PTR [rdx],rax
  40b293:	mov    eax,DWORD PTR [rbp-0x98]
  40b299:	cdqe   
  40b29b:	shl    rax,0x4
  40b29f:	add    rax,rbp
  40b2a2:	lea    rdx,[rax-0x88]
  40b2a9:	mov    rax,QWORD PTR [rbp-0xc8]
  40b2b0:	mov    QWORD PTR [rdx],rax
  40b2b3:	mov    eax,DWORD PTR [rbp-0x98]
  40b2b9:	add    eax,0x1
  40b2bc:	mov    DWORD PTR [rbp-0x98],eax
  40b2c2:	cmp    DWORD PTR [rbp-0xa4],0x0
  40b2c9:	je     40b330 <flatcc_builder_create_string@@Base+0x1d5>
  40b2cb:	mov    rdx,QWORD PTR [rbp-0xa0]
  40b2d2:	mov    eax,DWORD PTR [rbp-0xa4]
  40b2d8:	add    rax,rdx
  40b2db:	mov    QWORD PTR [rbp-0xa0],rax
  40b2e2:	mov    eax,DWORD PTR [rbp-0x98]
  40b2e8:	cdqe   
  40b2ea:	shl    rax,0x4
  40b2ee:	add    rax,rbp
  40b2f1:	sub    rax,0x90
  40b2f7:	mov    rdx,0x4143a0
  40b2fe:	mov    QWORD PTR [rax],rdx
  40b301:	mov    edx,DWORD PTR [rbp-0x98]
  40b307:	mov    eax,DWORD PTR [rbp-0xa4]
  40b30d:	movsxd rdx,edx
  40b310:	shl    rdx,0x4
  40b314:	add    rdx,rbp
  40b317:	sub    rdx,0x88
  40b31e:	mov    QWORD PTR [rdx],rax
  40b321:	mov    eax,DWORD PTR [rbp-0x98]
  40b327:	add    eax,0x1
  40b32a:	mov    DWORD PTR [rbp-0x98],eax
  40b330:	lea    rdx,[rbp-0xa0]
  40b337:	mov    rax,QWORD PTR [rbp-0xb8]
  40b33e:	mov    rsi,rdx
  40b341:	mov    rdi,rax
  40b344:	call   407a09 <flatcc_builder_get_user_frame_ptr@@Base+0x30d>
  40b349:	mov    rcx,QWORD PTR [rbp-0x8]
  40b34d:	xor    rcx,QWORD PTR fs:0x28
  40b356:	je     40b35d <flatcc_builder_create_string@@Base+0x202>
  40b358:	call   403060 <__stack_chk_fail@plt>
  40b35d:	leave  
  40b35e:	ret    

000000000040b35f <flatcc_builder_create_string_str@@Base>:
  40b35f:	push   rbp
  40b360:	mov    rbp,rsp
  40b363:	sub    rsp,0x10
  40b367:	mov    QWORD PTR [rbp-0x8],rdi
  40b36b:	mov    QWORD PTR [rbp-0x10],rsi
  40b36f:	mov    rax,QWORD PTR [rbp-0x10]
  40b373:	mov    rdi,rax
  40b376:	call   403050 <strlen@plt>
  40b37b:	mov    rdx,rax
  40b37e:	mov    rcx,QWORD PTR [rbp-0x10]
  40b382:	mov    rax,QWORD PTR [rbp-0x8]
  40b386:	mov    rsi,rcx
  40b389:	mov    rdi,rax
  40b38c:	call   40b15b <flatcc_builder_create_string@@Base>
  40b391:	leave  
  40b392:	ret    

000000000040b393 <flatcc_builder_create_string_strn@@Base>:
  40b393:	push   rbp
  40b394:	mov    rbp,rsp
  40b397:	sub    rsp,0x20
  40b39b:	mov    QWORD PTR [rbp-0x8],rdi
  40b39f:	mov    QWORD PTR [rbp-0x10],rsi
  40b3a3:	mov    QWORD PTR [rbp-0x18],rdx
  40b3a7:	mov    rdx,QWORD PTR [rbp-0x18]
  40b3ab:	mov    rax,QWORD PTR [rbp-0x10]
  40b3af:	mov    rsi,rdx
  40b3b2:	mov    rdi,rax
  40b3b5:	call   406775 <main@@Base+0x196>
  40b3ba:	mov    rdx,rax
  40b3bd:	mov    rcx,QWORD PTR [rbp-0x10]
  40b3c1:	mov    rax,QWORD PTR [rbp-0x8]
  40b3c5:	mov    rsi,rcx
  40b3c8:	mov    rdi,rax
  40b3cb:	call   40b15b <flatcc_builder_create_string@@Base>
  40b3d0:	leave  
  40b3d1:	ret    

000000000040b3d2 <flatcc_builder_end_string@@Base>:
  40b3d2:	push   rbp
  40b3d3:	mov    rbp,rsp
  40b3d6:	sub    rsp,0x20
  40b3da:	mov    QWORD PTR [rbp-0x18],rdi
  40b3de:	mov    rax,QWORD PTR [rbp-0x18]
  40b3e2:	mov    rax,QWORD PTR [rax+0x30]
  40b3e6:	movzx  eax,WORD PTR [rax+0xe]
  40b3ea:	cmp    ax,0x6
  40b3ee:	je     40b40f <flatcc_builder_end_string@@Base+0x3d>
  40b3f0:	lea    rcx,[rip+0x9bf9]        # 414ff0 <flatcc_builder_padding_base@@Base+0xc50>
  40b3f7:	mov    edx,0x6c4
  40b3fc:	lea    rsi,[rip+0x919d]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b403:	lea    rdi,[rip+0x9386]        # 414790 <flatcc_builder_padding_base@@Base+0x3f0>
  40b40a:	call   403070 <__assert_fail@plt>
  40b40f:	mov    rax,QWORD PTR [rbp-0x18]
  40b413:	mov    rax,QWORD PTR [rax+0x30]
  40b417:	mov    edx,DWORD PTR [rax+0x14]
  40b41a:	mov    rax,QWORD PTR [rbp-0x18]
  40b41e:	mov    eax,DWORD PTR [rax+0x20]
  40b421:	cmp    edx,eax
  40b423:	je     40b444 <flatcc_builder_end_string@@Base+0x72>
  40b425:	lea    rcx,[rip+0x9bc4]        # 414ff0 <flatcc_builder_padding_base@@Base+0xc50>
  40b42c:	mov    edx,0x6c5
  40b431:	lea    rsi,[rip+0x9168]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b438:	lea    rdi,[rip+0x9531]        # 414970 <flatcc_builder_padding_base@@Base+0x5d0>
  40b43f:	call   403070 <__assert_fail@plt>
  40b444:	mov    rax,QWORD PTR [rbp-0x18]
  40b448:	mov    eax,DWORD PTR [rax+0x20]
  40b44b:	mov    edx,eax
  40b44d:	mov    rax,QWORD PTR [rbp-0x18]
  40b451:	mov    rcx,QWORD PTR [rax+0x18]
  40b455:	mov    rax,QWORD PTR [rbp-0x18]
  40b459:	mov    rsi,rcx
  40b45c:	mov    rdi,rax
  40b45f:	call   40b15b <flatcc_builder_create_string@@Base>
  40b464:	mov    DWORD PTR [rbp-0x4],eax
  40b467:	cmp    DWORD PTR [rbp-0x4],0x0
  40b46b:	jne    40b474 <flatcc_builder_end_string@@Base+0xa2>
  40b46d:	mov    eax,0x0
  40b472:	jmp    40b483 <flatcc_builder_end_string@@Base+0xb1>
  40b474:	mov    rax,QWORD PTR [rbp-0x18]
  40b478:	mov    rdi,rax
  40b47b:	call   4078f6 <flatcc_builder_get_user_frame_ptr@@Base+0x1fa>
  40b480:	mov    eax,DWORD PTR [rbp-0x4]
  40b483:	leave  
  40b484:	ret    

000000000040b485 <flatcc_builder_string_edit@@Base>:
  40b485:	push   rbp
  40b486:	mov    rbp,rsp
  40b489:	mov    QWORD PTR [rbp-0x8],rdi
  40b48d:	mov    rax,QWORD PTR [rbp-0x8]
  40b491:	mov    rax,QWORD PTR [rax+0x18]
  40b495:	pop    rbp
  40b496:	ret    

000000000040b497 <flatcc_builder_string_len@@Base>:
  40b497:	push   rbp
  40b498:	mov    rbp,rsp
  40b49b:	mov    QWORD PTR [rbp-0x8],rdi
  40b49f:	mov    rax,QWORD PTR [rbp-0x8]
  40b4a3:	mov    rax,QWORD PTR [rax+0x30]
  40b4a7:	mov    eax,DWORD PTR [rax+0x14]
  40b4aa:	mov    eax,eax
  40b4ac:	pop    rbp
  40b4ad:	ret    

000000000040b4ae <flatcc_builder_table_add@@Base>:
  40b4ae:	push   rbp
  40b4af:	mov    rbp,rsp
  40b4b2:	sub    rsp,0x20
  40b4b6:	mov    QWORD PTR [rbp-0x8],rdi
  40b4ba:	mov    DWORD PTR [rbp-0xc],esi
  40b4bd:	mov    QWORD PTR [rbp-0x18],rdx
  40b4c1:	mov    eax,ecx
  40b4c3:	mov    WORD PTR [rbp-0x10],ax
  40b4c7:	mov    rax,QWORD PTR [rbp-0x8]
  40b4cb:	mov    rax,QWORD PTR [rax+0x30]
  40b4cf:	movzx  eax,WORD PTR [rax+0xe]
  40b4d3:	cmp    ax,0x3
  40b4d7:	je     40b4f8 <flatcc_builder_table_add@@Base+0x4a>
  40b4d9:	lea    rcx,[rip+0x9b30]        # 415010 <flatcc_builder_padding_base@@Base+0xc70>
  40b4e0:	mov    edx,0x6ed
  40b4e5:	lea    rsi,[rip+0x90b4]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b4ec:	lea    rdi,[rip+0x9385]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40b4f3:	call   403070 <__assert_fail@plt>
  40b4f8:	cmp    DWORD PTR [rbp-0xc],0x0
  40b4fc:	js     40b507 <flatcc_builder_table_add@@Base+0x59>
  40b4fe:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40b505:	jle    40b526 <flatcc_builder_table_add@@Base+0x78>
  40b507:	lea    rcx,[rip+0x9b02]        # 415010 <flatcc_builder_padding_base@@Base+0xc70>
  40b50e:	mov    edx,0x6ee
  40b513:	lea    rsi,[rip+0x9086]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b51a:	lea    rdi,[rip+0x9477]        # 414998 <flatcc_builder_padding_base@@Base+0x5f8>
  40b521:	call   403070 <__assert_fail@plt>
  40b526:	mov    rax,QWORD PTR [rbp-0x8]
  40b52a:	movzx  eax,WORD PTR [rax+0xea]
  40b531:	cmp    ax,WORD PTR [rbp-0x10]
  40b535:	jae    40b546 <flatcc_builder_table_add@@Base+0x98>
  40b537:	mov    rax,QWORD PTR [rbp-0x8]
  40b53b:	movzx  edx,WORD PTR [rbp-0x10]
  40b53f:	mov    WORD PTR [rax+0xea],dx
  40b546:	mov    rax,QWORD PTR [rbp-0x8]
  40b54a:	mov    rax,QWORD PTR [rax+0x8]
  40b54e:	mov    edx,DWORD PTR [rbp-0xc]
  40b551:	movsxd rdx,edx
  40b554:	add    rdx,rdx
  40b557:	add    rax,rdx
  40b55a:	movzx  eax,WORD PTR [rax]
  40b55d:	test   ax,ax
  40b560:	je     40b581 <flatcc_builder_table_add@@Base+0xd3>
  40b562:	lea    rcx,[rip+0x9aa7]        # 415010 <flatcc_builder_padding_base@@Base+0xc70>
  40b569:	mov    edx,0x6f8
  40b56e:	lea    rsi,[rip+0x902b]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b575:	lea    rdi,[rip+0x9084]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40b57c:	call   403070 <__assert_fail@plt>
  40b581:	mov    rax,QWORD PTR [rbp-0x8]
  40b585:	mov    edx,DWORD PTR [rax+0x14]
  40b588:	mov    eax,DWORD PTR [rbp-0xc]
  40b58b:	xor    eax,edx
  40b58d:	imul   eax,eax,0x9e3779b1
  40b593:	mov    rdx,QWORD PTR [rbp-0x18]
  40b597:	xor    eax,edx
  40b599:	imul   edx,eax,0x9e3779b1
  40b59f:	mov    rax,QWORD PTR [rbp-0x8]
  40b5a3:	mov    DWORD PTR [rax+0x14],edx
  40b5a6:	mov    eax,DWORD PTR [rbp-0xc]
  40b5a9:	movzx  ecx,ax
  40b5ac:	movzx  edx,WORD PTR [rbp-0x10]
  40b5b0:	mov    rax,QWORD PTR [rbp-0x18]
  40b5b4:	mov    esi,eax
  40b5b6:	mov    rax,QWORD PTR [rbp-0x8]
  40b5ba:	mov    rdi,rax
  40b5bd:	call   406b36 <flatcc_builder_default_alloc@@Base+0x37b>
  40b5c2:	leave  
  40b5c3:	ret    

000000000040b5c4 <flatcc_builder_table_edit@@Base>:
  40b5c4:	push   rbp
  40b5c5:	mov    rbp,rsp
  40b5c8:	sub    rsp,0x10
  40b5cc:	mov    QWORD PTR [rbp-0x8],rdi
  40b5d0:	mov    QWORD PTR [rbp-0x10],rsi
  40b5d4:	mov    rax,QWORD PTR [rbp-0x8]
  40b5d8:	mov    rax,QWORD PTR [rax+0x30]
  40b5dc:	movzx  eax,WORD PTR [rax+0xe]
  40b5e0:	cmp    ax,0x3
  40b5e4:	je     40b605 <flatcc_builder_table_edit@@Base+0x41>
  40b5e6:	lea    rcx,[rip+0x9a43]        # 415030 <flatcc_builder_padding_base@@Base+0xc90>
  40b5ed:	mov    edx,0x702
  40b5f2:	lea    rsi,[rip+0x8fa7]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b5f9:	lea    rdi,[rip+0x9278]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40b600:	call   403070 <__assert_fail@plt>
  40b605:	mov    rax,QWORD PTR [rbp-0x8]
  40b609:	mov    rdx,QWORD PTR [rax+0x18]
  40b60d:	mov    rax,QWORD PTR [rbp-0x8]
  40b611:	mov    eax,DWORD PTR [rax+0x20]
  40b614:	mov    eax,eax
  40b616:	sub    rax,QWORD PTR [rbp-0x10]
  40b61a:	add    rax,rdx
  40b61d:	leave  
  40b61e:	ret    

000000000040b61f <flatcc_builder_table_add_copy@@Base>:
  40b61f:	push   rbp
  40b620:	mov    rbp,rsp
  40b623:	sub    rsp,0x30
  40b627:	mov    QWORD PTR [rbp-0x18],rdi
  40b62b:	mov    DWORD PTR [rbp-0x1c],esi
  40b62e:	mov    QWORD PTR [rbp-0x28],rdx
  40b632:	mov    QWORD PTR [rbp-0x30],rcx
  40b636:	mov    eax,r8d
  40b639:	mov    WORD PTR [rbp-0x20],ax
  40b63d:	movzx  ecx,WORD PTR [rbp-0x20]
  40b641:	mov    rdx,QWORD PTR [rbp-0x30]
  40b645:	mov    esi,DWORD PTR [rbp-0x1c]
  40b648:	mov    rax,QWORD PTR [rbp-0x18]
  40b64c:	mov    rdi,rax
  40b64f:	call   40b4ae <flatcc_builder_table_add@@Base>
  40b654:	mov    QWORD PTR [rbp-0x8],rax
  40b658:	cmp    QWORD PTR [rbp-0x8],0x0
  40b65d:	je     40b676 <flatcc_builder_table_add_copy@@Base+0x57>
  40b65f:	mov    rdx,QWORD PTR [rbp-0x30]
  40b663:	mov    rcx,QWORD PTR [rbp-0x28]
  40b667:	mov    rax,QWORD PTR [rbp-0x8]
  40b66b:	mov    rsi,rcx
  40b66e:	mov    rdi,rax
  40b671:	call   4030c0 <memcpy@plt>
  40b676:	mov    rax,QWORD PTR [rbp-0x8]
  40b67a:	leave  
  40b67b:	ret    

000000000040b67c <flatcc_builder_table_add_offset@@Base>:
  40b67c:	push   rbp
  40b67d:	mov    rbp,rsp
  40b680:	sub    rsp,0x10
  40b684:	mov    QWORD PTR [rbp-0x8],rdi
  40b688:	mov    DWORD PTR [rbp-0xc],esi
  40b68b:	mov    rax,QWORD PTR [rbp-0x8]
  40b68f:	mov    rax,QWORD PTR [rax+0x30]
  40b693:	movzx  eax,WORD PTR [rax+0xe]
  40b697:	cmp    ax,0x3
  40b69b:	je     40b6bc <flatcc_builder_table_add_offset@@Base+0x40>
  40b69d:	lea    rcx,[rip+0x99bc]        # 415060 <flatcc_builder_padding_base@@Base+0xcc0>
  40b6a4:	mov    edx,0x713
  40b6a9:	lea    rsi,[rip+0x8ef0]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b6b0:	lea    rdi,[rip+0x91c1]        # 414878 <flatcc_builder_padding_base@@Base+0x4d8>
  40b6b7:	call   403070 <__assert_fail@plt>
  40b6bc:	cmp    DWORD PTR [rbp-0xc],0x0
  40b6c0:	js     40b6cb <flatcc_builder_table_add_offset@@Base+0x4f>
  40b6c2:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40b6c9:	jle    40b6ea <flatcc_builder_table_add_offset@@Base+0x6e>
  40b6cb:	lea    rcx,[rip+0x998e]        # 415060 <flatcc_builder_padding_base@@Base+0xcc0>
  40b6d2:	mov    edx,0x714
  40b6d7:	lea    rsi,[rip+0x8ec2]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b6de:	lea    rdi,[rip+0x92b3]        # 414998 <flatcc_builder_padding_base@@Base+0x5f8>
  40b6e5:	call   403070 <__assert_fail@plt>
  40b6ea:	mov    rax,QWORD PTR [rbp-0x8]
  40b6ee:	mov    rax,QWORD PTR [rax+0x8]
  40b6f2:	mov    edx,DWORD PTR [rbp-0xc]
  40b6f5:	movsxd rdx,edx
  40b6f8:	add    rdx,rdx
  40b6fb:	add    rax,rdx
  40b6fe:	movzx  eax,WORD PTR [rax]
  40b701:	test   ax,ax
  40b704:	je     40b725 <flatcc_builder_table_add_offset@@Base+0xa9>
  40b706:	lea    rcx,[rip+0x9953]        # 415060 <flatcc_builder_padding_base@@Base+0xcc0>
  40b70d:	mov    edx,0x71b
  40b712:	lea    rsi,[rip+0x8e87]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40b719:	lea    rdi,[rip+0x8ee0]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40b720:	call   403070 <__assert_fail@plt>
  40b725:	mov    rax,QWORD PTR [rbp-0x8]
  40b729:	mov    edx,DWORD PTR [rax+0x14]
  40b72c:	mov    eax,DWORD PTR [rbp-0xc]
  40b72f:	xor    eax,edx
  40b731:	imul   eax,eax,0x9e3779b1
  40b737:	xor    eax,0x4
  40b73a:	imul   edx,eax,0x9e3779b1
  40b740:	mov    rax,QWORD PTR [rbp-0x8]
  40b744:	mov    DWORD PTR [rax+0x14],edx
  40b747:	mov    eax,DWORD PTR [rbp-0xc]
  40b74a:	movzx  edx,ax
  40b74d:	mov    rax,QWORD PTR [rbp-0x8]
  40b751:	mov    esi,edx
  40b753:	mov    rdi,rax
  40b756:	call   406bfe <flatcc_builder_default_alloc@@Base+0x443>
  40b75b:	leave  
  40b75c:	ret    

000000000040b75d <flatcc_builder_push_buffer_alignment@@Base>:
  40b75d:	push   rbp
  40b75e:	mov    rbp,rsp
  40b761:	mov    QWORD PTR [rbp-0x18],rdi
  40b765:	mov    rax,QWORD PTR [rbp-0x18]
  40b769:	movzx  eax,WORD PTR [rax+0xe8]
  40b770:	mov    WORD PTR [rbp-0x2],ax
  40b774:	mov    rax,QWORD PTR [rbp-0x18]
  40b778:	mov    WORD PTR [rax+0xe8],0x4
  40b781:	movzx  eax,WORD PTR [rbp-0x2]
  40b785:	pop    rbp
  40b786:	ret    

000000000040b787 <flatcc_builder_pop_buffer_alignment@@Base>:
  40b787:	push   rbp
  40b788:	mov    rbp,rsp
  40b78b:	sub    rsp,0x10
  40b78f:	mov    QWORD PTR [rbp-0x8],rdi
  40b793:	mov    eax,esi
  40b795:	mov    WORD PTR [rbp-0xc],ax
  40b799:	movzx  edx,WORD PTR [rbp-0xc]
  40b79d:	mov    rax,QWORD PTR [rbp-0x8]
  40b7a1:	mov    esi,edx
  40b7a3:	mov    rdi,rax
  40b7a6:	call   407405 <flatcc_builder_clear@@Base+0x96>
  40b7ab:	nop
  40b7ac:	leave  
  40b7ad:	ret    

000000000040b7ae <flatcc_builder_get_buffer_alignment@@Base>:
  40b7ae:	push   rbp
  40b7af:	mov    rbp,rsp
  40b7b2:	mov    QWORD PTR [rbp-0x8],rdi
  40b7b6:	mov    rax,QWORD PTR [rbp-0x8]
  40b7ba:	movzx  eax,WORD PTR [rax+0xe8]
  40b7c1:	pop    rbp
  40b7c2:	ret    

000000000040b7c3 <flatcc_builder_set_vtable_clustering@@Base>:
  40b7c3:	push   rbp
  40b7c4:	mov    rbp,rsp
  40b7c7:	mov    QWORD PTR [rbp-0x8],rdi
  40b7cb:	mov    DWORD PTR [rbp-0xc],esi
  40b7ce:	cmp    DWORD PTR [rbp-0xc],0x0
  40b7d2:	sete   al
  40b7d5:	movzx  edx,al
  40b7d8:	mov    rax,QWORD PTR [rbp-0x8]
  40b7dc:	mov    DWORD PTR [rax+0x124],edx
  40b7e2:	nop
  40b7e3:	pop    rbp
  40b7e4:	ret    

000000000040b7e5 <flatcc_builder_set_block_align@@Base>:
  40b7e5:	push   rbp
  40b7e6:	mov    rbp,rsp
  40b7e9:	mov    QWORD PTR [rbp-0x8],rdi
  40b7ed:	mov    eax,esi
  40b7ef:	mov    WORD PTR [rbp-0xc],ax
  40b7f3:	mov    rax,QWORD PTR [rbp-0x8]
  40b7f7:	movzx  edx,WORD PTR [rbp-0xc]
  40b7fb:	mov    WORD PTR [rax+0xec],dx
  40b802:	nop
  40b803:	pop    rbp
  40b804:	ret    

000000000040b805 <flatcc_builder_get_level@@Base>:
  40b805:	push   rbp
  40b806:	mov    rbp,rsp
  40b809:	mov    QWORD PTR [rbp-0x8],rdi
  40b80d:	mov    rax,QWORD PTR [rbp-0x8]
  40b811:	mov    eax,DWORD PTR [rax+0x104]
  40b817:	pop    rbp
  40b818:	ret    

000000000040b819 <flatcc_builder_set_max_level@@Base>:
  40b819:	push   rbp
  40b81a:	mov    rbp,rsp
  40b81d:	mov    QWORD PTR [rbp-0x8],rdi
  40b821:	mov    DWORD PTR [rbp-0xc],esi
  40b824:	mov    rax,QWORD PTR [rbp-0x8]
  40b828:	mov    edx,DWORD PTR [rbp-0xc]
  40b82b:	mov    DWORD PTR [rax+0x120],edx
  40b831:	mov    rax,QWORD PTR [rbp-0x8]
  40b835:	mov    edx,DWORD PTR [rax+0x108]
  40b83b:	mov    rax,QWORD PTR [rbp-0x8]
  40b83f:	mov    eax,DWORD PTR [rax+0x120]
  40b845:	cmp    edx,eax
  40b847:	jge    40b85d <flatcc_builder_set_max_level@@Base+0x44>
  40b849:	mov    rax,QWORD PTR [rbp-0x8]
  40b84d:	mov    edx,DWORD PTR [rax+0x120]
  40b853:	mov    rax,QWORD PTR [rbp-0x8]
  40b857:	mov    DWORD PTR [rax+0x108],edx
  40b85d:	nop
  40b85e:	pop    rbp
  40b85f:	ret    

000000000040b860 <flatcc_builder_get_buffer_size@@Base>:
  40b860:	push   rbp
  40b861:	mov    rbp,rsp
  40b864:	mov    QWORD PTR [rbp-0x8],rdi
  40b868:	mov    rax,QWORD PTR [rbp-0x8]
  40b86c:	mov    edx,DWORD PTR [rax+0xf4]
  40b872:	mov    rax,QWORD PTR [rbp-0x8]
  40b876:	mov    eax,DWORD PTR [rax+0xf0]
  40b87c:	sub    edx,eax
  40b87e:	mov    eax,edx
  40b880:	cdqe   
  40b882:	pop    rbp
  40b883:	ret    

000000000040b884 <flatcc_builder_get_buffer_start@@Base>:
  40b884:	push   rbp
  40b885:	mov    rbp,rsp
  40b888:	mov    QWORD PTR [rbp-0x8],rdi
  40b88c:	mov    rax,QWORD PTR [rbp-0x8]
  40b890:	mov    eax,DWORD PTR [rax+0xf0]
  40b896:	pop    rbp
  40b897:	ret    

000000000040b898 <flatcc_builder_get_buffer_end@@Base>:
  40b898:	push   rbp
  40b899:	mov    rbp,rsp
  40b89c:	mov    QWORD PTR [rbp-0x8],rdi
  40b8a0:	mov    rax,QWORD PTR [rbp-0x8]
  40b8a4:	mov    eax,DWORD PTR [rax+0xf4]
  40b8aa:	pop    rbp
  40b8ab:	ret    

000000000040b8ac <flatcc_builder_set_vtable_cache_limit@@Base>:
  40b8ac:	push   rbp
  40b8ad:	mov    rbp,rsp
  40b8b0:	mov    QWORD PTR [rbp-0x8],rdi
  40b8b4:	mov    QWORD PTR [rbp-0x10],rsi
  40b8b8:	mov    rax,QWORD PTR [rbp-0x8]
  40b8bc:	mov    rdx,QWORD PTR [rbp-0x10]
  40b8c0:	mov    QWORD PTR [rax+0x118],rdx
  40b8c7:	nop
  40b8c8:	pop    rbp
  40b8c9:	ret    

000000000040b8ca <flatcc_builder_set_identifier@@Base>:
  40b8ca:	push   rbp
  40b8cb:	mov    rbp,rsp
  40b8ce:	mov    QWORD PTR [rbp-0x8],rdi
  40b8d2:	mov    QWORD PTR [rbp-0x10],rsi
  40b8d6:	cmp    QWORD PTR [rbp-0x10],0x0
  40b8db:	je     40b8e3 <flatcc_builder_set_identifier@@Base+0x19>
  40b8dd:	mov    rax,QWORD PTR [rbp-0x10]
  40b8e1:	jmp    40b8ea <flatcc_builder_set_identifier@@Base+0x20>
  40b8e3:	mov    rax,0x4143a0
  40b8ea:	mov    rdx,QWORD PTR [rbp-0x8]
  40b8ee:	add    rdx,0x110
  40b8f5:	mov    eax,DWORD PTR [rax]
  40b8f7:	mov    DWORD PTR [rdx],eax
  40b8f9:	nop
  40b8fa:	pop    rbp
  40b8fb:	ret    

000000000040b8fc <flatcc_builder_get_type@@Base>:
  40b8fc:	push   rbp
  40b8fd:	mov    rbp,rsp
  40b900:	mov    QWORD PTR [rbp-0x8],rdi
  40b904:	mov    rax,QWORD PTR [rbp-0x8]
  40b908:	mov    rax,QWORD PTR [rax+0x30]
  40b90c:	test   rax,rax
  40b90f:	je     40b922 <flatcc_builder_get_type@@Base+0x26>
  40b911:	mov    rax,QWORD PTR [rbp-0x8]
  40b915:	mov    rax,QWORD PTR [rax+0x30]
  40b919:	movzx  eax,WORD PTR [rax+0xe]
  40b91d:	movzx  eax,ax
  40b920:	jmp    40b927 <flatcc_builder_get_type@@Base+0x2b>
  40b922:	mov    eax,0x0
  40b927:	pop    rbp
  40b928:	ret    

000000000040b929 <flatcc_builder_get_type_at@@Base>:
  40b929:	push   rbp
  40b92a:	mov    rbp,rsp
  40b92d:	mov    QWORD PTR [rbp-0x8],rdi
  40b931:	mov    DWORD PTR [rbp-0xc],esi
  40b934:	cmp    DWORD PTR [rbp-0xc],0x0
  40b938:	jle    40b949 <flatcc_builder_get_type_at@@Base+0x20>
  40b93a:	mov    rax,QWORD PTR [rbp-0x8]
  40b93e:	mov    eax,DWORD PTR [rax+0x104]
  40b944:	cmp    eax,DWORD PTR [rbp-0xc]
  40b947:	jge    40b950 <flatcc_builder_get_type_at@@Base+0x27>
  40b949:	mov    eax,0x0
  40b94e:	jmp    40b984 <flatcc_builder_get_type_at@@Base+0x5b>
  40b950:	mov    rax,QWORD PTR [rbp-0x8]
  40b954:	mov    rcx,QWORD PTR [rax+0x30]
  40b958:	mov    rax,QWORD PTR [rbp-0x8]
  40b95c:	mov    eax,DWORD PTR [rax+0x104]
  40b962:	mov    edx,DWORD PTR [rbp-0xc]
  40b965:	sub    edx,eax
  40b967:	mov    eax,edx
  40b969:	movsxd rdx,eax
  40b96c:	mov    rax,rdx
  40b96f:	shl    rax,0x3
  40b973:	add    rax,rdx
  40b976:	shl    rax,0x2
  40b97a:	add    rax,rcx
  40b97d:	movzx  eax,WORD PTR [rax+0xe]
  40b981:	movzx  eax,ax
  40b984:	pop    rbp
  40b985:	ret    

000000000040b986 <flatcc_builder_get_direct_buffer@@Base>:
  40b986:	push   rbp
  40b987:	mov    rbp,rsp
  40b98a:	sub    rsp,0x10
  40b98e:	mov    QWORD PTR [rbp-0x8],rdi
  40b992:	mov    QWORD PTR [rbp-0x10],rsi
  40b996:	mov    rax,QWORD PTR [rbp-0x8]
  40b99a:	mov    eax,DWORD PTR [rax+0x128]
  40b9a0:	test   eax,eax
  40b9a2:	je     40b9c0 <flatcc_builder_get_direct_buffer@@Base+0x3a>
  40b9a4:	mov    rax,QWORD PTR [rbp-0x8]
  40b9a8:	lea    rdx,[rax+0x130]
  40b9af:	mov    rax,QWORD PTR [rbp-0x10]
  40b9b3:	mov    rsi,rax
  40b9b6:	mov    rdi,rdx
  40b9b9:	call   40671c <main@@Base+0x13d>
  40b9be:	jmp    40b9d7 <flatcc_builder_get_direct_buffer@@Base+0x51>
  40b9c0:	cmp    QWORD PTR [rbp-0x10],0x0
  40b9c5:	je     40b9d2 <flatcc_builder_get_direct_buffer@@Base+0x4c>
  40b9c7:	mov    rax,QWORD PTR [rbp-0x10]
  40b9cb:	mov    QWORD PTR [rax],0x0
  40b9d2:	mov    eax,0x0
  40b9d7:	leave  
  40b9d8:	ret    

000000000040b9d9 <flatcc_builder_copy_buffer@@Base>:
  40b9d9:	push   rbp
  40b9da:	mov    rbp,rsp
  40b9dd:	sub    rsp,0x20
  40b9e1:	mov    QWORD PTR [rbp-0x8],rdi
  40b9e5:	mov    QWORD PTR [rbp-0x10],rsi
  40b9e9:	mov    QWORD PTR [rbp-0x18],rdx
  40b9ed:	mov    rax,QWORD PTR [rbp-0x8]
  40b9f1:	mov    eax,DWORD PTR [rax+0x128]
  40b9f7:	test   eax,eax
  40b9f9:	jne    40ba02 <flatcc_builder_copy_buffer@@Base+0x29>
  40b9fb:	mov    eax,0x0
  40ba00:	jmp    40ba4e <flatcc_builder_copy_buffer@@Base+0x75>
  40ba02:	mov    rax,QWORD PTR [rbp-0x8]
  40ba06:	lea    rcx,[rax+0x130]
  40ba0d:	mov    rdx,QWORD PTR [rbp-0x18]
  40ba11:	mov    rax,QWORD PTR [rbp-0x10]
  40ba15:	mov    rsi,rax
  40ba18:	mov    rdi,rcx
  40ba1b:	call   40c64b <flatcc_emitter_copy_buffer@@Base>
  40ba20:	mov    QWORD PTR [rbp-0x10],rax
  40ba24:	cmp    QWORD PTR [rbp-0x10],0x0
  40ba29:	jne    40ba4a <flatcc_builder_copy_buffer@@Base+0x71>
  40ba2b:	lea    rcx,[rip+0x964e]        # 415080 <flatcc_builder_padding_base@@Base+0xce0>
  40ba32:	mov    edx,0x786
  40ba37:	lea    rsi,[rip+0x8b62]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40ba3e:	lea    rdi,[rip+0x8f97]        # 4149dc <flatcc_builder_padding_base@@Base+0x63c>
  40ba45:	call   403070 <__assert_fail@plt>
  40ba4a:	mov    rax,QWORD PTR [rbp-0x10]
  40ba4e:	leave  
  40ba4f:	ret    

000000000040ba50 <flatcc_builder_finalize_buffer@@Base>:
  40ba50:	push   rbp
  40ba51:	mov    rbp,rsp
  40ba54:	sub    rsp,0x20
  40ba58:	mov    QWORD PTR [rbp-0x18],rdi
  40ba5c:	mov    QWORD PTR [rbp-0x20],rsi
  40ba60:	mov    rax,QWORD PTR [rbp-0x18]
  40ba64:	mov    rdi,rax
  40ba67:	call   40b860 <flatcc_builder_get_buffer_size@@Base>
  40ba6c:	mov    QWORD PTR [rbp-0x10],rax
  40ba70:	cmp    QWORD PTR [rbp-0x20],0x0
  40ba75:	je     40ba82 <flatcc_builder_finalize_buffer@@Base+0x32>
  40ba77:	mov    rax,QWORD PTR [rbp-0x20]
  40ba7b:	mov    rdx,QWORD PTR [rbp-0x10]
  40ba7f:	mov    QWORD PTR [rax],rdx
  40ba82:	mov    rax,QWORD PTR [rbp-0x10]
  40ba86:	mov    rdi,rax
  40ba89:	call   4030d0 <malloc@plt>
  40ba8e:	mov    QWORD PTR [rbp-0x8],rax
  40ba92:	cmp    QWORD PTR [rbp-0x8],0x0
  40ba97:	jne    40bab8 <flatcc_builder_finalize_buffer@@Base+0x68>
  40ba99:	lea    rcx,[rip+0x9600]        # 4150a0 <flatcc_builder_padding_base@@Base+0xd00>
  40baa0:	mov    edx,0x798
  40baa5:	lea    rsi,[rip+0x8af4]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40baac:	lea    rdi,[rip+0x8b4d]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40bab3:	call   403070 <__assert_fail@plt>
  40bab8:	mov    rdx,QWORD PTR [rbp-0x10]
  40babc:	mov    rcx,QWORD PTR [rbp-0x8]
  40bac0:	mov    rax,QWORD PTR [rbp-0x18]
  40bac4:	mov    rsi,rcx
  40bac7:	mov    rdi,rax
  40baca:	call   40b9d9 <flatcc_builder_copy_buffer@@Base>
  40bacf:	test   rax,rax
  40bad2:	jne    40baf3 <flatcc_builder_finalize_buffer@@Base+0xa3>
  40bad4:	lea    rcx,[rip+0x95c5]        # 4150a0 <flatcc_builder_padding_base@@Base+0xd00>
  40badb:	mov    edx,0x79c
  40bae0:	lea    rsi,[rip+0x8ab9]        # 4145a0 <flatcc_builder_padding_base@@Base+0x200>
  40bae7:	lea    rdi,[rip+0x8b12]        # 414600 <flatcc_builder_padding_base@@Base+0x260>
  40baee:	call   403070 <__assert_fail@plt>
  40baf3:	cmp    QWORD PTR [rbp-0x8],0x0
  40baf8:	jne    40bb0c <flatcc_builder_finalize_buffer@@Base+0xbc>
  40bafa:	cmp    QWORD PTR [rbp-0x20],0x0
  40baff:	je     40bb0c <flatcc_builder_finalize_buffer@@Base+0xbc>
  40bb01:	mov    rax,QWORD PTR [rbp-0x20]
  40bb05:	mov    QWORD PTR [rax],0x0
  40bb0c:	mov    rax,QWORD PTR [rbp-0x8]
  40bb10:	leave  
  40bb11:	ret    

000000000040bb12 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40bb12:	push   rbp
  40bb13:	mov    rbp,rsp
  40bb16:	sub    rsp,0x30
  40bb1a:	mov    QWORD PTR [rbp-0x28],rdi
  40bb1e:	mov    QWORD PTR [rbp-0x30],rsi
  40bb22:	mov    rax,QWORD PTR [rbp-0x28]
  40bb26:	mov    rdi,rax
  40bb29:	call   40b860 <flatcc_builder_get_buffer_size@@Base>
  40bb2e:	mov    QWORD PTR [rbp-0x10],rax
  40bb32:	cmp    QWORD PTR [rbp-0x30],0x0
  40bb37:	je     40bb44 <flatcc_builder_finalize_aligned_buffer@@Base+0x32>
  40bb39:	mov    rax,QWORD PTR [rbp-0x30]
  40bb3d:	mov    rdx,QWORD PTR [rbp-0x10]
  40bb41:	mov    QWORD PTR [rax],rdx
  40bb44:	mov    rax,QWORD PTR [rbp-0x28]
  40bb48:	mov    rdi,rax
  40bb4b:	call   40b7ae <flatcc_builder_get_buffer_alignment@@Base>
  40bb50:	movzx  eax,ax
  40bb53:	mov    QWORD PTR [rbp-0x8],rax
  40bb57:	mov    rdx,QWORD PTR [rbp-0x10]
  40bb5b:	mov    rax,QWORD PTR [rbp-0x8]
  40bb5f:	add    rax,rdx
  40bb62:	lea    rdx,[rax-0x1]
  40bb66:	mov    rax,QWORD PTR [rbp-0x8]
  40bb6a:	neg    rax
  40bb6d:	and    rax,rdx
  40bb70:	mov    QWORD PTR [rbp-0x10],rax
  40bb74:	mov    rdx,QWORD PTR [rbp-0x10]
  40bb78:	mov    rax,QWORD PTR [rbp-0x8]
  40bb7c:	mov    rsi,rdx
  40bb7f:	mov    rdi,rax
  40bb82:	call   406668 <main@@Base+0x89>
  40bb87:	mov    QWORD PTR [rbp-0x18],rax
  40bb8b:	cmp    QWORD PTR [rbp-0x18],0x0
  40bb90:	je     40bbc4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb2>
  40bb92:	mov    rdx,QWORD PTR [rbp-0x10]
  40bb96:	mov    rcx,QWORD PTR [rbp-0x18]
  40bb9a:	mov    rax,QWORD PTR [rbp-0x28]
  40bb9e:	mov    rsi,rcx
  40bba1:	mov    rdi,rax
  40bba4:	call   40b9d9 <flatcc_builder_copy_buffer@@Base>
  40bba9:	test   rax,rax
  40bbac:	jne    40bbc5 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  40bbae:	mov    rax,QWORD PTR [rbp-0x18]
  40bbb2:	mov    rdi,rax
  40bbb5:	call   403030 <free@plt>
  40bbba:	mov    QWORD PTR [rbp-0x18],0x0
  40bbc2:	jmp    40bbc5 <flatcc_builder_finalize_aligned_buffer@@Base+0xb3>
  40bbc4:	nop
  40bbc5:	cmp    QWORD PTR [rbp-0x18],0x0
  40bbca:	jne    40bbde <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  40bbcc:	cmp    QWORD PTR [rbp-0x30],0x0
  40bbd1:	je     40bbde <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
  40bbd3:	mov    rax,QWORD PTR [rbp-0x30]
  40bbd7:	mov    QWORD PTR [rax],0x0
  40bbde:	mov    rax,QWORD PTR [rbp-0x18]
  40bbe2:	leave  
  40bbe3:	ret    

000000000040bbe4 <flatcc_builder_aligned_alloc@@Base>:
  40bbe4:	push   rbp
  40bbe5:	mov    rbp,rsp
  40bbe8:	sub    rsp,0x10
  40bbec:	mov    QWORD PTR [rbp-0x8],rdi
  40bbf0:	mov    QWORD PTR [rbp-0x10],rsi
  40bbf4:	mov    rdx,QWORD PTR [rbp-0x10]
  40bbf8:	mov    rax,QWORD PTR [rbp-0x8]
  40bbfc:	mov    rsi,rdx
  40bbff:	mov    rdi,rax
  40bc02:	call   406668 <main@@Base+0x89>
  40bc07:	leave  
  40bc08:	ret    

000000000040bc09 <flatcc_builder_aligned_free@@Base>:
  40bc09:	push   rbp
  40bc0a:	mov    rbp,rsp
  40bc0d:	sub    rsp,0x10
  40bc11:	mov    QWORD PTR [rbp-0x8],rdi
  40bc15:	mov    rax,QWORD PTR [rbp-0x8]
  40bc19:	mov    rdi,rax
  40bc1c:	call   403030 <free@plt>
  40bc21:	nop
  40bc22:	leave  
  40bc23:	ret    

000000000040bc24 <flatcc_builder_get_emit_context@@Base>:
  40bc24:	push   rbp
  40bc25:	mov    rbp,rsp
  40bc28:	mov    QWORD PTR [rbp-0x8],rdi
  40bc2c:	mov    rax,QWORD PTR [rbp-0x8]
  40bc30:	mov    rax,QWORD PTR [rax+0x38]
  40bc34:	pop    rbp
  40bc35:	ret    
  40bc36:	push   rbp
  40bc37:	mov    rbp,rsp
  40bc3a:	sub    rsp,0x20
  40bc3e:	mov    QWORD PTR [rbp-0x18],rdi
  40bc42:	mov    QWORD PTR [rbp-0x8],0x0
  40bc4a:	mov    rax,QWORD PTR [rbp-0x18]
  40bc4e:	mov    rax,QWORD PTR [rax]
  40bc51:	test   rax,rax
  40bc54:	je     40bcb2 <flatcc_builder_get_emit_context@@Base+0x8e>
  40bc56:	mov    rax,QWORD PTR [rbp-0x18]
  40bc5a:	mov    rax,QWORD PTR [rax]
  40bc5d:	mov    rdx,QWORD PTR [rax+0xb88]
  40bc64:	mov    rax,QWORD PTR [rbp-0x18]
  40bc68:	mov    rax,QWORD PTR [rax+0x8]
  40bc6c:	cmp    rdx,rax
  40bc6f:	je     40bcb2 <flatcc_builder_get_emit_context@@Base+0x8e>
  40bc71:	mov    rax,QWORD PTR [rbp-0x18]
  40bc75:	mov    rax,QWORD PTR [rax]
  40bc78:	mov    rax,QWORD PTR [rax+0xb88]
  40bc7f:	mov    rdx,QWORD PTR [rbp-0x18]
  40bc83:	mov    rdx,QWORD PTR [rdx]
  40bc86:	mov    edx,DWORD PTR [rdx+0xb90]
  40bc8c:	sub    edx,0xb80
  40bc92:	mov    DWORD PTR [rax+0xb90],edx
  40bc98:	mov    rax,QWORD PTR [rbp-0x18]
  40bc9c:	mov    rax,QWORD PTR [rax]
  40bc9f:	mov    rdx,QWORD PTR [rax+0xb88]
  40bca6:	mov    rax,QWORD PTR [rbp-0x18]
  40bcaa:	mov    QWORD PTR [rax],rdx
  40bcad:	jmp    40bdea <flatcc_builder_get_emit_context@@Base+0x1c6>
  40bcb2:	mov    edi,0xb98
  40bcb7:	call   4030d0 <malloc@plt>
  40bcbc:	mov    QWORD PTR [rbp-0x8],rax
  40bcc0:	cmp    QWORD PTR [rbp-0x8],0x0
  40bcc5:	jne    40bcd1 <flatcc_builder_get_emit_context@@Base+0xad>
  40bcc7:	mov    eax,0xffffffff
  40bccc:	jmp    40be38 <flatcc_builder_get_emit_context@@Base+0x214>
  40bcd1:	mov    rax,QWORD PTR [rbp-0x18]
  40bcd5:	mov    rax,QWORD PTR [rax+0x38]
  40bcd9:	lea    rdx,[rax+0xb80]
  40bce0:	mov    rax,QWORD PTR [rbp-0x18]
  40bce4:	mov    QWORD PTR [rax+0x38],rdx
  40bce8:	mov    rax,QWORD PTR [rbp-0x18]
  40bcec:	mov    rax,QWORD PTR [rax]
  40bcef:	test   rax,rax
  40bcf2:	je     40bd4e <flatcc_builder_get_emit_context@@Base+0x12a>
  40bcf4:	mov    rax,QWORD PTR [rbp-0x18]
  40bcf8:	mov    rdx,QWORD PTR [rax+0x8]
  40bcfc:	mov    rax,QWORD PTR [rbp-0x8]
  40bd00:	mov    QWORD PTR [rax+0xb88],rdx
  40bd07:	mov    rax,QWORD PTR [rbp-0x18]
  40bd0b:	mov    rdx,QWORD PTR [rax]
  40bd0e:	mov    rax,QWORD PTR [rbp-0x8]
  40bd12:	mov    QWORD PTR [rax+0xb80],rdx
  40bd19:	mov    rax,QWORD PTR [rbp-0x18]
  40bd1d:	mov    rax,QWORD PTR [rax]
  40bd20:	mov    rdx,QWORD PTR [rbp-0x8]
  40bd24:	mov    QWORD PTR [rax+0xb88],rdx
  40bd2b:	mov    rax,QWORD PTR [rbp-0x18]
  40bd2f:	mov    rax,QWORD PTR [rax+0x8]
  40bd33:	mov    rdx,QWORD PTR [rbp-0x8]
  40bd37:	mov    QWORD PTR [rax+0xb80],rdx
  40bd3e:	mov    rax,QWORD PTR [rbp-0x18]
  40bd42:	mov    rdx,QWORD PTR [rbp-0x8]
  40bd46:	mov    QWORD PTR [rax],rdx
  40bd49:	jmp    40bdea <flatcc_builder_get_emit_context@@Base+0x1c6>
  40bd4e:	mov    rax,QWORD PTR [rbp-0x18]
  40bd52:	mov    rdx,QWORD PTR [rbp-0x8]
  40bd56:	mov    QWORD PTR [rax],rdx
  40bd59:	mov    rax,QWORD PTR [rbp-0x18]
  40bd5d:	mov    rdx,QWORD PTR [rbp-0x8]
  40bd61:	mov    QWORD PTR [rax+0x8],rdx
  40bd65:	mov    rax,QWORD PTR [rbp-0x8]
  40bd69:	mov    rdx,QWORD PTR [rbp-0x8]
  40bd6d:	mov    QWORD PTR [rax+0xb80],rdx
  40bd74:	mov    rax,QWORD PTR [rbp-0x8]
  40bd78:	mov    rdx,QWORD PTR [rbp-0x8]
  40bd7c:	mov    QWORD PTR [rax+0xb88],rdx
  40bd83:	mov    rax,QWORD PTR [rbp-0x18]
  40bd87:	mov    rax,QWORD PTR [rax]
  40bd8a:	lea    rdx,[rax+0x5c0]
  40bd91:	mov    rax,QWORD PTR [rbp-0x18]
  40bd95:	mov    QWORD PTR [rax+0x10],rdx
  40bd99:	mov    rax,QWORD PTR [rbp-0x18]
  40bd9d:	mov    rdx,QWORD PTR [rax+0x10]
  40bda1:	mov    rax,QWORD PTR [rbp-0x18]
  40bda5:	mov    QWORD PTR [rax+0x20],rdx
  40bda9:	mov    rax,QWORD PTR [rbp-0x18]
  40bdad:	mov    QWORD PTR [rax+0x18],0x5c0
  40bdb5:	mov    rax,QWORD PTR [rbp-0x18]
  40bdb9:	mov    rax,QWORD PTR [rax+0x18]
  40bdbd:	mov    edx,0xb80
  40bdc2:	sub    rdx,rax
  40bdc5:	mov    rax,QWORD PTR [rbp-0x18]
  40bdc9:	mov    QWORD PTR [rax+0x28],rdx
  40bdcd:	mov    rax,QWORD PTR [rbp-0x18]
  40bdd1:	mov    rax,QWORD PTR [rax+0x18]
  40bdd5:	neg    eax
  40bdd7:	mov    edx,eax
  40bdd9:	mov    rax,QWORD PTR [rbp-0x8]
  40bddd:	mov    DWORD PTR [rax+0xb90],edx
  40bde3:	mov    eax,0x0
  40bde8:	jmp    40be38 <flatcc_builder_get_emit_context@@Base+0x214>
  40bdea:	mov    rax,QWORD PTR [rbp-0x18]
  40bdee:	mov    rax,QWORD PTR [rax]
  40bdf1:	lea    rdx,[rax+0xb80]
  40bdf8:	mov    rax,QWORD PTR [rbp-0x18]
  40bdfc:	mov    QWORD PTR [rax+0x10],rdx
  40be00:	mov    rax,QWORD PTR [rbp-0x18]
  40be04:	mov    QWORD PTR [rax+0x18],0xb80
  40be0c:	mov    rax,QWORD PTR [rbp-0x18]
  40be10:	mov    rax,QWORD PTR [rax]
  40be13:	mov    rdx,QWORD PTR [rbp-0x18]
  40be17:	mov    rdx,QWORD PTR [rdx]
  40be1a:	mov    rdx,QWORD PTR [rdx+0xb80]
  40be21:	mov    edx,DWORD PTR [rdx+0xb90]
  40be27:	sub    edx,0xb80
  40be2d:	mov    DWORD PTR [rax+0xb90],edx
  40be33:	mov    eax,0x0
  40be38:	leave  
  40be39:	ret    
  40be3a:	push   rbp
  40be3b:	mov    rbp,rsp
  40be3e:	sub    rsp,0x20
  40be42:	mov    QWORD PTR [rbp-0x18],rdi
  40be46:	mov    QWORD PTR [rbp-0x8],0x0
  40be4e:	mov    rax,QWORD PTR [rbp-0x18]
  40be52:	mov    rax,QWORD PTR [rax+0x8]
  40be56:	test   rax,rax
  40be59:	je     40be92 <flatcc_builder_get_emit_context@@Base+0x26e>
  40be5b:	mov    rax,QWORD PTR [rbp-0x18]
  40be5f:	mov    rax,QWORD PTR [rax+0x8]
  40be63:	mov    rdx,QWORD PTR [rax+0xb80]
  40be6a:	mov    rax,QWORD PTR [rbp-0x18]
  40be6e:	mov    rax,QWORD PTR [rax]
  40be71:	cmp    rdx,rax
  40be74:	je     40be92 <flatcc_builder_get_emit_context@@Base+0x26e>
  40be76:	mov    rax,QWORD PTR [rbp-0x18]
  40be7a:	mov    rax,QWORD PTR [rax+0x8]
  40be7e:	mov    rdx,QWORD PTR [rax+0xb80]
  40be85:	mov    rax,QWORD PTR [rbp-0x18]
  40be89:	mov    QWORD PTR [rax+0x8],rdx
  40be8d:	jmp    40bfcc <flatcc_builder_get_emit_context@@Base+0x3a8>
  40be92:	mov    edi,0xb98
  40be97:	call   4030d0 <malloc@plt>
  40be9c:	mov    QWORD PTR [rbp-0x8],rax
  40bea0:	cmp    QWORD PTR [rbp-0x8],0x0
  40bea5:	jne    40beb1 <flatcc_builder_get_emit_context@@Base+0x28d>
  40bea7:	mov    eax,0xffffffff
  40beac:	jmp    40c019 <flatcc_builder_get_emit_context@@Base+0x3f5>
  40beb1:	mov    rax,QWORD PTR [rbp-0x18]
  40beb5:	mov    rax,QWORD PTR [rax+0x38]
  40beb9:	lea    rdx,[rax+0xb80]
  40bec0:	mov    rax,QWORD PTR [rbp-0x18]
  40bec4:	mov    QWORD PTR [rax+0x38],rdx
  40bec8:	mov    rax,QWORD PTR [rbp-0x18]
  40becc:	mov    rax,QWORD PTR [rax+0x8]
  40bed0:	test   rax,rax
  40bed3:	je     40bf30 <flatcc_builder_get_emit_context@@Base+0x30c>
  40bed5:	mov    rax,QWORD PTR [rbp-0x18]
  40bed9:	mov    rdx,QWORD PTR [rax+0x8]
  40bedd:	mov    rax,QWORD PTR [rbp-0x8]
  40bee1:	mov    QWORD PTR [rax+0xb88],rdx
  40bee8:	mov    rax,QWORD PTR [rbp-0x18]
  40beec:	mov    rdx,QWORD PTR [rax]
  40beef:	mov    rax,QWORD PTR [rbp-0x8]
  40bef3:	mov    QWORD PTR [rax+0xb80],rdx
  40befa:	mov    rax,QWORD PTR [rbp-0x18]
  40befe:	mov    rax,QWORD PTR [rax]
  40bf01:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf05:	mov    QWORD PTR [rax+0xb88],rdx
  40bf0c:	mov    rax,QWORD PTR [rbp-0x18]
  40bf10:	mov    rax,QWORD PTR [rax+0x8]
  40bf14:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf18:	mov    QWORD PTR [rax+0xb80],rdx
  40bf1f:	mov    rax,QWORD PTR [rbp-0x18]
  40bf23:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf27:	mov    QWORD PTR [rax+0x8],rdx
  40bf2b:	jmp    40bfcc <flatcc_builder_get_emit_context@@Base+0x3a8>
  40bf30:	mov    rax,QWORD PTR [rbp-0x18]
  40bf34:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf38:	mov    QWORD PTR [rax],rdx
  40bf3b:	mov    rax,QWORD PTR [rbp-0x18]
  40bf3f:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf43:	mov    QWORD PTR [rax+0x8],rdx
  40bf47:	mov    rax,QWORD PTR [rbp-0x8]
  40bf4b:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf4f:	mov    QWORD PTR [rax+0xb80],rdx
  40bf56:	mov    rax,QWORD PTR [rbp-0x8]
  40bf5a:	mov    rdx,QWORD PTR [rbp-0x8]
  40bf5e:	mov    QWORD PTR [rax+0xb88],rdx
  40bf65:	mov    rax,QWORD PTR [rbp-0x18]
  40bf69:	mov    rax,QWORD PTR [rax]
  40bf6c:	lea    rdx,[rax+0x5c0]
  40bf73:	mov    rax,QWORD PTR [rbp-0x18]
  40bf77:	mov    QWORD PTR [rax+0x10],rdx
  40bf7b:	mov    rax,QWORD PTR [rbp-0x18]
  40bf7f:	mov    rdx,QWORD PTR [rax+0x10]
  40bf83:	mov    rax,QWORD PTR [rbp-0x18]
  40bf87:	mov    QWORD PTR [rax+0x20],rdx
  40bf8b:	mov    rax,QWORD PTR [rbp-0x18]
  40bf8f:	mov    QWORD PTR [rax+0x18],0x5c0
  40bf97:	mov    rax,QWORD PTR [rbp-0x18]
  40bf9b:	mov    rax,QWORD PTR [rax+0x18]
  40bf9f:	mov    edx,0xb80
  40bfa4:	sub    rdx,rax
  40bfa7:	mov    rax,QWORD PTR [rbp-0x18]
  40bfab:	mov    QWORD PTR [rax+0x28],rdx
  40bfaf:	mov    rax,QWORD PTR [rbp-0x18]
  40bfb3:	mov    rax,QWORD PTR [rax+0x18]
  40bfb7:	neg    eax
  40bfb9:	mov    edx,eax
  40bfbb:	mov    rax,QWORD PTR [rbp-0x8]
  40bfbf:	mov    DWORD PTR [rax+0xb90],edx
  40bfc5:	mov    eax,0x0
  40bfca:	jmp    40c019 <flatcc_builder_get_emit_context@@Base+0x3f5>
  40bfcc:	mov    rax,QWORD PTR [rbp-0x18]
  40bfd0:	mov    rax,QWORD PTR [rax+0x8]
  40bfd4:	mov    rdx,rax
  40bfd7:	mov    rax,QWORD PTR [rbp-0x18]
  40bfdb:	mov    QWORD PTR [rax+0x20],rdx
  40bfdf:	mov    rax,QWORD PTR [rbp-0x18]
  40bfe3:	mov    QWORD PTR [rax+0x28],0xb80
  40bfeb:	mov    rax,QWORD PTR [rbp-0x18]
  40bfef:	mov    rax,QWORD PTR [rax+0x8]
  40bff3:	mov    rdx,QWORD PTR [rbp-0x18]
  40bff7:	mov    rdx,QWORD PTR [rdx+0x8]
  40bffb:	mov    rdx,QWORD PTR [rdx+0xb88]
  40c002:	mov    edx,DWORD PTR [rdx+0xb90]
  40c008:	add    edx,0xb80
  40c00e:	mov    DWORD PTR [rax+0xb90],edx
  40c014:	mov    eax,0x0
  40c019:	leave  
  40c01a:	ret    
  40c01b:	push   rbp
  40c01c:	mov    rbp,rsp
  40c01f:	sub    rsp,0x30
  40c023:	mov    QWORD PTR [rbp-0x18],rdi
  40c027:	mov    QWORD PTR [rbp-0x20],rsi
  40c02b:	mov    QWORD PTR [rbp-0x28],rdx
  40c02f:	mov    rax,QWORD PTR [rbp-0x28]
  40c033:	add    QWORD PTR [rbp-0x20],rax
  40c037:	jmp    40c0db <flatcc_builder_get_emit_context@@Base+0x4b7>
  40c03c:	mov    rax,QWORD PTR [rbp-0x28]
  40c040:	mov    QWORD PTR [rbp-0x8],rax
  40c044:	mov    rax,QWORD PTR [rbp-0x18]
  40c048:	mov    rax,QWORD PTR [rax+0x18]
  40c04c:	cmp    rax,QWORD PTR [rbp-0x8]
  40c050:	jae    40c07c <flatcc_builder_get_emit_context@@Base+0x458>
  40c052:	mov    rax,QWORD PTR [rbp-0x18]
  40c056:	mov    rax,QWORD PTR [rax+0x18]
  40c05a:	mov    QWORD PTR [rbp-0x8],rax
  40c05e:	cmp    QWORD PTR [rbp-0x8],0x0
  40c063:	jne    40c07c <flatcc_builder_get_emit_context@@Base+0x458>
  40c065:	mov    rax,QWORD PTR [rbp-0x18]
  40c069:	mov    rdi,rax
  40c06c:	call   40bc36 <flatcc_builder_get_emit_context@@Base+0x12>
  40c071:	test   eax,eax
  40c073:	je     40c0db <flatcc_builder_get_emit_context@@Base+0x4b7>
  40c075:	mov    eax,0xffffffff
  40c07a:	jmp    40c0eb <flatcc_builder_get_emit_context@@Base+0x4c7>
  40c07c:	mov    rax,QWORD PTR [rbp-0x18]
  40c080:	mov    rax,QWORD PTR [rax+0x10]
  40c084:	mov    rdx,QWORD PTR [rbp-0x8]
  40c088:	neg    rdx
  40c08b:	add    rdx,rax
  40c08e:	mov    rax,QWORD PTR [rbp-0x18]
  40c092:	mov    QWORD PTR [rax+0x10],rdx
  40c096:	mov    rax,QWORD PTR [rbp-0x18]
  40c09a:	mov    rax,QWORD PTR [rax+0x18]
  40c09e:	sub    rax,QWORD PTR [rbp-0x8]
  40c0a2:	mov    rdx,rax
  40c0a5:	mov    rax,QWORD PTR [rbp-0x18]
  40c0a9:	mov    QWORD PTR [rax+0x18],rdx
  40c0ad:	mov    rax,QWORD PTR [rbp-0x8]
  40c0b1:	neg    rax
  40c0b4:	add    QWORD PTR [rbp-0x20],rax
  40c0b8:	mov    rax,QWORD PTR [rbp-0x8]
  40c0bc:	sub    QWORD PTR [rbp-0x28],rax
  40c0c0:	mov    rax,QWORD PTR [rbp-0x18]
  40c0c4:	mov    rax,QWORD PTR [rax+0x10]
  40c0c8:	mov    rdx,QWORD PTR [rbp-0x8]
  40c0cc:	mov    rcx,QWORD PTR [rbp-0x20]
  40c0d0:	mov    rsi,rcx
  40c0d3:	mov    rdi,rax
  40c0d6:	call   4030c0 <memcpy@plt>
  40c0db:	cmp    QWORD PTR [rbp-0x28],0x0
  40c0e0:	jne    40c03c <flatcc_builder_get_emit_context@@Base+0x418>
  40c0e6:	mov    eax,0x0
  40c0eb:	leave  
  40c0ec:	ret    
  40c0ed:	push   rbp
  40c0ee:	mov    rbp,rsp
  40c0f1:	sub    rsp,0x30
  40c0f5:	mov    QWORD PTR [rbp-0x18],rdi
  40c0f9:	mov    QWORD PTR [rbp-0x20],rsi
  40c0fd:	mov    QWORD PTR [rbp-0x28],rdx
  40c101:	jmp    40c19f <flatcc_builder_get_emit_context@@Base+0x57b>
  40c106:	mov    rax,QWORD PTR [rbp-0x28]
  40c10a:	mov    QWORD PTR [rbp-0x8],rax
  40c10e:	mov    rax,QWORD PTR [rbp-0x18]
  40c112:	mov    rax,QWORD PTR [rax+0x28]
  40c116:	cmp    rax,QWORD PTR [rbp-0x8]
  40c11a:	jae    40c146 <flatcc_builder_get_emit_context@@Base+0x522>
  40c11c:	mov    rax,QWORD PTR [rbp-0x18]
  40c120:	mov    rax,QWORD PTR [rax+0x28]
  40c124:	mov    QWORD PTR [rbp-0x8],rax
  40c128:	cmp    QWORD PTR [rbp-0x8],0x0
  40c12d:	jne    40c146 <flatcc_builder_get_emit_context@@Base+0x522>
  40c12f:	mov    rax,QWORD PTR [rbp-0x18]
  40c133:	mov    rdi,rax
  40c136:	call   40be3a <flatcc_builder_get_emit_context@@Base+0x216>
  40c13b:	test   eax,eax
  40c13d:	je     40c19f <flatcc_builder_get_emit_context@@Base+0x57b>
  40c13f:	mov    eax,0xffffffff
  40c144:	jmp    40c1af <flatcc_builder_get_emit_context@@Base+0x58b>
  40c146:	mov    rax,QWORD PTR [rbp-0x18]
  40c14a:	mov    rax,QWORD PTR [rax+0x20]
  40c14e:	mov    rdx,QWORD PTR [rbp-0x8]
  40c152:	mov    rcx,QWORD PTR [rbp-0x20]
  40c156:	mov    rsi,rcx
  40c159:	mov    rdi,rax
  40c15c:	call   4030c0 <memcpy@plt>
  40c161:	mov    rax,QWORD PTR [rbp-0x8]
  40c165:	sub    QWORD PTR [rbp-0x28],rax
  40c169:	mov    rax,QWORD PTR [rbp-0x8]
  40c16d:	add    QWORD PTR [rbp-0x20],rax
  40c171:	mov    rax,QWORD PTR [rbp-0x18]
  40c175:	mov    rdx,QWORD PTR [rax+0x20]
  40c179:	mov    rax,QWORD PTR [rbp-0x8]
  40c17d:	add    rdx,rax
  40c180:	mov    rax,QWORD PTR [rbp-0x18]
  40c184:	mov    QWORD PTR [rax+0x20],rdx
  40c188:	mov    rax,QWORD PTR [rbp-0x18]
  40c18c:	mov    rax,QWORD PTR [rax+0x28]
  40c190:	sub    rax,QWORD PTR [rbp-0x8]
  40c194:	mov    rdx,rax
  40c197:	mov    rax,QWORD PTR [rbp-0x18]
  40c19b:	mov    QWORD PTR [rax+0x28],rdx
  40c19f:	cmp    QWORD PTR [rbp-0x28],0x0
  40c1a4:	jne    40c106 <flatcc_builder_get_emit_context@@Base+0x4e2>
  40c1aa:	mov    eax,0x0
  40c1af:	leave  
  40c1b0:	ret    

000000000040c1b1 <flatcc_emitter_recycle_page@@Base>:
  40c1b1:	push   rbp
  40c1b2:	mov    rbp,rsp
  40c1b5:	mov    QWORD PTR [rbp-0x8],rdi
  40c1b9:	mov    QWORD PTR [rbp-0x10],rsi
  40c1bd:	mov    rax,QWORD PTR [rbp-0x8]
  40c1c1:	mov    rax,QWORD PTR [rax]
  40c1c4:	cmp    rax,QWORD PTR [rbp-0x10]
  40c1c8:	je     40c1d8 <flatcc_emitter_recycle_page@@Base+0x27>
  40c1ca:	mov    rax,QWORD PTR [rbp-0x8]
  40c1ce:	mov    rax,QWORD PTR [rax+0x8]
  40c1d2:	cmp    rax,QWORD PTR [rbp-0x10]
  40c1d6:	jne    40c1e2 <flatcc_emitter_recycle_page@@Base+0x31>
  40c1d8:	mov    eax,0xffffffff
  40c1dd:	jmp    40c278 <flatcc_emitter_recycle_page@@Base+0xc7>
  40c1e2:	mov    rax,QWORD PTR [rbp-0x10]
  40c1e6:	mov    rax,QWORD PTR [rax+0xb80]
  40c1ed:	mov    rdx,QWORD PTR [rbp-0x10]
  40c1f1:	mov    rdx,QWORD PTR [rdx+0xb88]
  40c1f8:	mov    QWORD PTR [rax+0xb88],rdx
  40c1ff:	mov    rax,QWORD PTR [rbp-0x10]
  40c203:	mov    rax,QWORD PTR [rax+0xb88]
  40c20a:	mov    rdx,QWORD PTR [rbp-0x10]
  40c20e:	mov    rdx,QWORD PTR [rdx+0xb80]
  40c215:	mov    QWORD PTR [rax+0xb80],rdx
  40c21c:	mov    rax,QWORD PTR [rbp-0x8]
  40c220:	mov    rax,QWORD PTR [rax]
  40c223:	mov    rdx,QWORD PTR [rax+0xb88]
  40c22a:	mov    rax,QWORD PTR [rbp-0x10]
  40c22e:	mov    QWORD PTR [rax+0xb88],rdx
  40c235:	mov    rax,QWORD PTR [rbp-0x8]
  40c239:	mov    rdx,QWORD PTR [rax]
  40c23c:	mov    rax,QWORD PTR [rbp-0x10]
  40c240:	mov    QWORD PTR [rax+0xb80],rdx
  40c247:	mov    rax,QWORD PTR [rbp-0x10]
  40c24b:	mov    rax,QWORD PTR [rax+0xb88]
  40c252:	mov    rdx,QWORD PTR [rbp-0x10]
  40c256:	mov    QWORD PTR [rax+0xb80],rdx
  40c25d:	mov    rax,QWORD PTR [rbp-0x10]
  40c261:	mov    rax,QWORD PTR [rax+0xb80]
  40c268:	mov    rdx,QWORD PTR [rbp-0x10]
  40c26c:	mov    QWORD PTR [rax+0xb88],rdx
  40c273:	mov    eax,0x0
  40c278:	pop    rbp
  40c279:	ret    

000000000040c27a <flatcc_emitter_reset@@Base>:
  40c27a:	push   rbp
  40c27b:	mov    rbp,rsp
  40c27e:	sub    rsp,0x20
  40c282:	mov    QWORD PTR [rbp-0x18],rdi
  40c286:	mov    rax,QWORD PTR [rbp-0x18]
  40c28a:	mov    rax,QWORD PTR [rax]
  40c28d:	mov    QWORD PTR [rbp-0x8],rax
  40c291:	mov    rax,QWORD PTR [rbp-0x18]
  40c295:	mov    rax,QWORD PTR [rax]
  40c298:	test   rax,rax
  40c29b:	je     40c403 <flatcc_emitter_reset@@Base+0x189>
  40c2a1:	mov    rax,QWORD PTR [rbp-0x18]
  40c2a5:	mov    rdx,QWORD PTR [rax]
  40c2a8:	mov    rax,QWORD PTR [rbp-0x18]
  40c2ac:	mov    QWORD PTR [rax+0x8],rdx
  40c2b0:	mov    rax,QWORD PTR [rbp-0x18]
  40c2b4:	mov    rax,QWORD PTR [rax]
  40c2b7:	lea    rdx,[rax+0x5c0]
  40c2be:	mov    rax,QWORD PTR [rbp-0x18]
  40c2c2:	mov    QWORD PTR [rax+0x10],rdx
  40c2c6:	mov    rax,QWORD PTR [rbp-0x18]
  40c2ca:	mov    rdx,QWORD PTR [rax+0x10]
  40c2ce:	mov    rax,QWORD PTR [rbp-0x18]
  40c2d2:	mov    QWORD PTR [rax+0x20],rdx
  40c2d6:	mov    rax,QWORD PTR [rbp-0x18]
  40c2da:	mov    QWORD PTR [rax+0x18],0x5c0
  40c2e2:	mov    rax,QWORD PTR [rbp-0x18]
  40c2e6:	mov    QWORD PTR [rax+0x28],0x5c0
  40c2ee:	mov    rax,QWORD PTR [rbp-0x18]
  40c2f2:	mov    rax,QWORD PTR [rax]
  40c2f5:	mov    rdx,QWORD PTR [rbp-0x18]
  40c2f9:	mov    rdx,QWORD PTR [rdx+0x18]
  40c2fd:	neg    edx
  40c2ff:	mov    DWORD PTR [rax+0xb90],edx
  40c305:	mov    rax,QWORD PTR [rbp-0x18]
  40c309:	mov    rax,QWORD PTR [rax+0x40]
  40c30d:	test   rax,rax
  40c310:	jne    40c322 <flatcc_emitter_reset@@Base+0xa8>
  40c312:	mov    rax,QWORD PTR [rbp-0x18]
  40c316:	mov    rdx,QWORD PTR [rax+0x30]
  40c31a:	mov    rax,QWORD PTR [rbp-0x18]
  40c31e:	mov    QWORD PTR [rax+0x40],rdx
  40c322:	mov    rax,QWORD PTR [rbp-0x18]
  40c326:	mov    rdx,QWORD PTR [rax+0x40]
  40c32a:	mov    rax,rdx
  40c32d:	add    rax,rax
  40c330:	add    rax,rdx
  40c333:	shr    rax,0x2
  40c337:	mov    rdx,rax
  40c33a:	mov    rax,QWORD PTR [rbp-0x18]
  40c33e:	mov    rax,QWORD PTR [rax+0x30]
  40c342:	shr    rax,0x2
  40c346:	add    rdx,rax
  40c349:	mov    rax,QWORD PTR [rbp-0x18]
  40c34d:	mov    QWORD PTR [rax+0x40],rdx
  40c351:	mov    rax,QWORD PTR [rbp-0x18]
  40c355:	mov    QWORD PTR [rax+0x30],0x0
  40c35d:	jmp    40c3c9 <flatcc_emitter_reset@@Base+0x14f>
  40c35f:	mov    rax,QWORD PTR [rbp-0x18]
  40c363:	mov    rax,QWORD PTR [rax+0x8]
  40c367:	mov    rax,QWORD PTR [rax+0xb80]
  40c36e:	mov    QWORD PTR [rbp-0x8],rax
  40c372:	mov    rax,QWORD PTR [rbp-0x18]
  40c376:	mov    rax,QWORD PTR [rax+0x8]
  40c37a:	mov    rdx,QWORD PTR [rbp-0x8]
  40c37e:	mov    rdx,QWORD PTR [rdx+0xb80]
  40c385:	mov    QWORD PTR [rax+0xb80],rdx
  40c38c:	mov    rax,QWORD PTR [rbp-0x8]
  40c390:	mov    rax,QWORD PTR [rax+0xb80]
  40c397:	mov    rdx,QWORD PTR [rbp-0x18]
  40c39b:	mov    rdx,QWORD PTR [rdx+0x8]
  40c39f:	mov    QWORD PTR [rax+0xb88],rdx
  40c3a6:	mov    rax,QWORD PTR [rbp-0x8]
  40c3aa:	mov    rdi,rax
  40c3ad:	call   403030 <free@plt>
  40c3b2:	mov    rax,QWORD PTR [rbp-0x18]
  40c3b6:	mov    rax,QWORD PTR [rax+0x38]
  40c3ba:	lea    rdx,[rax-0xb80]
  40c3c1:	mov    rax,QWORD PTR [rbp-0x18]
  40c3c5:	mov    QWORD PTR [rax+0x38],rdx
  40c3c9:	mov    rax,QWORD PTR [rbp-0x18]
  40c3cd:	mov    rax,QWORD PTR [rax+0x40]
  40c3d1:	lea    rdx,[rax+rax*1]
  40c3d5:	mov    rax,QWORD PTR [rbp-0x18]
  40c3d9:	mov    rax,QWORD PTR [rax+0x38]
  40c3dd:	cmp    rdx,rax
  40c3e0:	jae    40c404 <flatcc_emitter_reset@@Base+0x18a>
  40c3e2:	mov    rax,QWORD PTR [rbp-0x18]
  40c3e6:	mov    rax,QWORD PTR [rax+0x8]
  40c3ea:	mov    rdx,QWORD PTR [rax+0xb80]
  40c3f1:	mov    rax,QWORD PTR [rbp-0x18]
  40c3f5:	mov    rax,QWORD PTR [rax]
  40c3f8:	cmp    rdx,rax
  40c3fb:	jne    40c35f <flatcc_emitter_reset@@Base+0xe5>
  40c401:	jmp    40c404 <flatcc_emitter_reset@@Base+0x18a>
  40c403:	nop
  40c404:	leave  
  40c405:	ret    

000000000040c406 <flatcc_emitter_clear@@Base>:
  40c406:	push   rbp
  40c407:	mov    rbp,rsp
  40c40a:	sub    rsp,0x20
  40c40e:	mov    QWORD PTR [rbp-0x18],rdi
  40c412:	mov    rax,QWORD PTR [rbp-0x18]
  40c416:	mov    rax,QWORD PTR [rax]
  40c419:	mov    QWORD PTR [rbp-0x8],rax
  40c41d:	cmp    QWORD PTR [rbp-0x8],0x0
  40c422:	je     40c492 <flatcc_emitter_clear@@Base+0x8c>
  40c424:	mov    rax,QWORD PTR [rbp-0x8]
  40c428:	mov    rax,QWORD PTR [rax+0xb88]
  40c42f:	mov    QWORD PTR [rax+0xb80],0x0
  40c43a:	jmp    40c45e <flatcc_emitter_clear@@Base+0x58>
  40c43c:	mov    rax,QWORD PTR [rbp-0x8]
  40c440:	mov    rax,QWORD PTR [rax+0xb80]
  40c447:	mov    QWORD PTR [rbp-0x8],rax
  40c44b:	mov    rax,QWORD PTR [rbp-0x8]
  40c44f:	mov    rax,QWORD PTR [rax+0xb88]
  40c456:	mov    rdi,rax
  40c459:	call   403030 <free@plt>
  40c45e:	mov    rax,QWORD PTR [rbp-0x8]
  40c462:	mov    rax,QWORD PTR [rax+0xb80]
  40c469:	test   rax,rax
  40c46c:	jne    40c43c <flatcc_emitter_clear@@Base+0x36>
  40c46e:	mov    rax,QWORD PTR [rbp-0x8]
  40c472:	mov    rdi,rax
  40c475:	call   403030 <free@plt>
  40c47a:	mov    rax,QWORD PTR [rbp-0x18]
  40c47e:	mov    edx,0x48
  40c483:	mov    esi,0x0
  40c488:	mov    rdi,rax
  40c48b:	call   403080 <memset@plt>
  40c490:	jmp    40c493 <flatcc_emitter_clear@@Base+0x8d>
  40c492:	nop
  40c493:	leave  
  40c494:	ret    

000000000040c495 <flatcc_emitter@@Base>:
  40c495:	push   rbp
  40c496:	mov    rbp,rsp
  40c499:	sub    rsp,0x30
  40c49d:	mov    QWORD PTR [rbp-0x18],rdi
  40c4a1:	mov    QWORD PTR [rbp-0x20],rsi
  40c4a5:	mov    DWORD PTR [rbp-0x24],edx
  40c4a8:	mov    DWORD PTR [rbp-0x28],ecx
  40c4ab:	mov    QWORD PTR [rbp-0x30],r8
  40c4af:	mov    rax,QWORD PTR [rbp-0x18]
  40c4b3:	mov    QWORD PTR [rbp-0x8],rax
  40c4b7:	mov    rax,QWORD PTR [rbp-0x8]
  40c4bb:	mov    rdx,QWORD PTR [rax+0x30]
  40c4bf:	mov    rax,QWORD PTR [rbp-0x30]
  40c4c3:	add    rdx,rax
  40c4c6:	mov    rax,QWORD PTR [rbp-0x8]
  40c4ca:	mov    QWORD PTR [rax+0x30],rdx
  40c4ce:	cmp    DWORD PTR [rbp-0x28],0x0
  40c4d2:	jns    40c57a <flatcc_emitter@@Base+0xe5>
  40c4d8:	mov    rax,QWORD PTR [rbp-0x8]
  40c4dc:	mov    rax,QWORD PTR [rax+0x18]
  40c4e0:	cmp    rax,QWORD PTR [rbp-0x30]
  40c4e4:	jb     40c528 <flatcc_emitter@@Base+0x93>
  40c4e6:	mov    rax,QWORD PTR [rbp-0x8]
  40c4ea:	mov    rax,QWORD PTR [rax+0x10]
  40c4ee:	mov    rdx,QWORD PTR [rbp-0x30]
  40c4f2:	neg    rdx
  40c4f5:	add    rdx,rax
  40c4f8:	mov    rax,QWORD PTR [rbp-0x8]
  40c4fc:	mov    QWORD PTR [rax+0x10],rdx
  40c500:	mov    rax,QWORD PTR [rbp-0x8]
  40c504:	mov    rax,QWORD PTR [rax+0x18]
  40c508:	sub    rax,QWORD PTR [rbp-0x30]
  40c50c:	mov    rdx,rax
  40c50f:	mov    rax,QWORD PTR [rbp-0x8]
  40c513:	mov    QWORD PTR [rax+0x18],rdx
  40c517:	mov    rax,QWORD PTR [rbp-0x8]
  40c51b:	mov    rax,QWORD PTR [rax+0x10]
  40c51f:	mov    QWORD PTR [rbp-0x10],rax
  40c523:	jmp    40c606 <flatcc_emitter@@Base+0x171>
  40c528:	mov    eax,DWORD PTR [rbp-0x24]
  40c52b:	cdqe   
  40c52d:	shl    rax,0x4
  40c531:	add    QWORD PTR [rbp-0x20],rax
  40c535:	jmp    40c568 <flatcc_emitter@@Base+0xd3>
  40c537:	sub    QWORD PTR [rbp-0x20],0x10
  40c53c:	mov    rax,QWORD PTR [rbp-0x20]
  40c540:	mov    rdx,QWORD PTR [rax+0x8]
  40c544:	mov    rax,QWORD PTR [rbp-0x20]
  40c548:	mov    rcx,QWORD PTR [rax]
  40c54b:	mov    rax,QWORD PTR [rbp-0x8]
  40c54f:	mov    rsi,rcx
  40c552:	mov    rdi,rax
  40c555:	call   40c01b <flatcc_builder_get_emit_context@@Base+0x3f7>
  40c55a:	test   eax,eax
  40c55c:	je     40c568 <flatcc_emitter@@Base+0xd3>
  40c55e:	mov    eax,0xffffffff
  40c563:	jmp    40c649 <flatcc_emitter@@Base+0x1b4>
  40c568:	mov    eax,DWORD PTR [rbp-0x24]
  40c56b:	lea    edx,[rax-0x1]
  40c56e:	mov    DWORD PTR [rbp-0x24],edx
  40c571:	test   eax,eax
  40c573:	jne    40c537 <flatcc_emitter@@Base+0xa2>
  40c575:	jmp    40c5ff <flatcc_emitter@@Base+0x16a>
  40c57a:	mov    rax,QWORD PTR [rbp-0x8]
  40c57e:	mov    rax,QWORD PTR [rax+0x28]
  40c582:	cmp    rax,QWORD PTR [rbp-0x30]
  40c586:	jb     40c5f2 <flatcc_emitter@@Base+0x15d>
  40c588:	mov    rax,QWORD PTR [rbp-0x8]
  40c58c:	mov    rax,QWORD PTR [rax+0x20]
  40c590:	mov    QWORD PTR [rbp-0x10],rax
  40c594:	mov    rax,QWORD PTR [rbp-0x8]
  40c598:	mov    rdx,QWORD PTR [rax+0x20]
  40c59c:	mov    rax,QWORD PTR [rbp-0x30]
  40c5a0:	add    rdx,rax
  40c5a3:	mov    rax,QWORD PTR [rbp-0x8]
  40c5a7:	mov    QWORD PTR [rax+0x20],rdx
  40c5ab:	mov    rax,QWORD PTR [rbp-0x8]
  40c5af:	mov    rax,QWORD PTR [rax+0x28]
  40c5b3:	sub    rax,QWORD PTR [rbp-0x30]
  40c5b7:	mov    rdx,rax
  40c5ba:	mov    rax,QWORD PTR [rbp-0x8]
  40c5be:	mov    QWORD PTR [rax+0x28],rdx
  40c5c2:	jmp    40c606 <flatcc_emitter@@Base+0x171>
  40c5c4:	mov    rax,QWORD PTR [rbp-0x20]
  40c5c8:	mov    rdx,QWORD PTR [rax+0x8]
  40c5cc:	mov    rax,QWORD PTR [rbp-0x20]
  40c5d0:	mov    rcx,QWORD PTR [rax]
  40c5d3:	mov    rax,QWORD PTR [rbp-0x8]
  40c5d7:	mov    rsi,rcx
  40c5da:	mov    rdi,rax
  40c5dd:	call   40c0ed <flatcc_builder_get_emit_context@@Base+0x4c9>
  40c5e2:	test   eax,eax
  40c5e4:	je     40c5ed <flatcc_emitter@@Base+0x158>
  40c5e6:	mov    eax,0xffffffff
  40c5eb:	jmp    40c649 <flatcc_emitter@@Base+0x1b4>
  40c5ed:	add    QWORD PTR [rbp-0x20],0x10
  40c5f2:	mov    eax,DWORD PTR [rbp-0x24]
  40c5f5:	lea    edx,[rax-0x1]
  40c5f8:	mov    DWORD PTR [rbp-0x24],edx
  40c5fb:	test   eax,eax
  40c5fd:	jne    40c5c4 <flatcc_emitter@@Base+0x12f>
  40c5ff:	mov    eax,0x0
  40c604:	jmp    40c649 <flatcc_emitter@@Base+0x1b4>
  40c606:	jmp    40c637 <flatcc_emitter@@Base+0x1a2>
  40c608:	mov    rax,QWORD PTR [rbp-0x20]
  40c60c:	mov    rdx,QWORD PTR [rax+0x8]
  40c610:	mov    rax,QWORD PTR [rbp-0x20]
  40c614:	mov    rcx,QWORD PTR [rax]
  40c617:	mov    rax,QWORD PTR [rbp-0x10]
  40c61b:	mov    rsi,rcx
  40c61e:	mov    rdi,rax
  40c621:	call   4030c0 <memcpy@plt>
  40c626:	mov    rax,QWORD PTR [rbp-0x20]
  40c62a:	mov    rax,QWORD PTR [rax+0x8]
  40c62e:	add    QWORD PTR [rbp-0x10],rax
  40c632:	add    QWORD PTR [rbp-0x20],0x10
  40c637:	mov    eax,DWORD PTR [rbp-0x24]
  40c63a:	lea    edx,[rax-0x1]
  40c63d:	mov    DWORD PTR [rbp-0x24],edx
  40c640:	test   eax,eax
  40c642:	jne    40c608 <flatcc_emitter@@Base+0x173>
  40c644:	mov    eax,0x0
  40c649:	leave  
  40c64a:	ret    

000000000040c64b <flatcc_emitter_copy_buffer@@Base>:
  40c64b:	push   rbp
  40c64c:	mov    rbp,rsp
  40c64f:	sub    rsp,0x30
  40c653:	mov    QWORD PTR [rbp-0x18],rdi
  40c657:	mov    QWORD PTR [rbp-0x20],rsi
  40c65b:	mov    QWORD PTR [rbp-0x28],rdx
  40c65f:	mov    rax,QWORD PTR [rbp-0x18]
  40c663:	mov    rax,QWORD PTR [rax+0x30]
  40c667:	cmp    rax,QWORD PTR [rbp-0x28]
  40c66b:	jbe    40c677 <flatcc_emitter_copy_buffer@@Base+0x2c>
  40c66d:	mov    eax,0x0
  40c672:	jmp    40c77b <flatcc_emitter_copy_buffer@@Base+0x130>
  40c677:	mov    rax,QWORD PTR [rbp-0x18]
  40c67b:	mov    rax,QWORD PTR [rax]
  40c67e:	test   rax,rax
  40c681:	jne    40c68d <flatcc_emitter_copy_buffer@@Base+0x42>
  40c683:	mov    eax,0x0
  40c688:	jmp    40c77b <flatcc_emitter_copy_buffer@@Base+0x130>
  40c68d:	mov    rax,QWORD PTR [rbp-0x18]
  40c691:	mov    rdx,QWORD PTR [rax]
  40c694:	mov    rax,QWORD PTR [rbp-0x18]
  40c698:	mov    rax,QWORD PTR [rax+0x8]
  40c69c:	cmp    rdx,rax
  40c69f:	jne    40c6c9 <flatcc_emitter_copy_buffer@@Base+0x7e>
  40c6a1:	mov    rax,QWORD PTR [rbp-0x18]
  40c6a5:	mov    rdx,QWORD PTR [rax+0x30]
  40c6a9:	mov    rax,QWORD PTR [rbp-0x18]
  40c6ad:	mov    rcx,QWORD PTR [rax+0x10]
  40c6b1:	mov    rax,QWORD PTR [rbp-0x20]
  40c6b5:	mov    rsi,rcx
  40c6b8:	mov    rdi,rax
  40c6bb:	call   4030c0 <memcpy@plt>
  40c6c0:	mov    rax,QWORD PTR [rbp-0x20]
  40c6c4:	jmp    40c77b <flatcc_emitter_copy_buffer@@Base+0x130>
  40c6c9:	mov    rax,QWORD PTR [rbp-0x18]
  40c6cd:	mov    rax,QWORD PTR [rax+0x18]
  40c6d1:	mov    edx,0xb80
  40c6d6:	sub    rdx,rax
  40c6d9:	mov    rax,rdx
  40c6dc:	mov    QWORD PTR [rbp-0x8],rax
  40c6e0:	mov    rax,QWORD PTR [rbp-0x18]
  40c6e4:	mov    rcx,QWORD PTR [rax+0x10]
  40c6e8:	mov    rdx,QWORD PTR [rbp-0x8]
  40c6ec:	mov    rax,QWORD PTR [rbp-0x20]
  40c6f0:	mov    rsi,rcx
  40c6f3:	mov    rdi,rax
  40c6f6:	call   4030c0 <memcpy@plt>
  40c6fb:	mov    rax,QWORD PTR [rbp-0x8]
  40c6ff:	add    QWORD PTR [rbp-0x20],rax
  40c703:	mov    rax,QWORD PTR [rbp-0x18]
  40c707:	mov    rax,QWORD PTR [rax]
  40c70a:	mov    rax,QWORD PTR [rax+0xb80]
  40c711:	mov    QWORD PTR [rbp-0x10],rax
  40c715:	jmp    40c746 <flatcc_emitter_copy_buffer@@Base+0xfb>
  40c717:	mov    rcx,QWORD PTR [rbp-0x10]
  40c71b:	mov    rax,QWORD PTR [rbp-0x20]
  40c71f:	mov    edx,0xb80
  40c724:	mov    rsi,rcx
  40c727:	mov    rdi,rax
  40c72a:	call   4030c0 <memcpy@plt>
  40c72f:	add    QWORD PTR [rbp-0x20],0xb80
  40c737:	mov    rax,QWORD PTR [rbp-0x10]
  40c73b:	mov    rax,QWORD PTR [rax+0xb80]
  40c742:	mov    QWORD PTR [rbp-0x10],rax
  40c746:	mov    rax,QWORD PTR [rbp-0x18]
  40c74a:	mov    rax,QWORD PTR [rax+0x8]
  40c74e:	cmp    rax,QWORD PTR [rbp-0x10]
  40c752:	jne    40c717 <flatcc_emitter_copy_buffer@@Base+0xcc>
  40c754:	mov    rax,QWORD PTR [rbp-0x18]
  40c758:	mov    rax,QWORD PTR [rax+0x28]
  40c75c:	mov    edx,0xb80
  40c761:	sub    rdx,rax
  40c764:	mov    rcx,QWORD PTR [rbp-0x10]
  40c768:	mov    rax,QWORD PTR [rbp-0x20]
  40c76c:	mov    rsi,rcx
  40c76f:	mov    rdi,rax
  40c772:	call   4030c0 <memcpy@plt>
  40c777:	mov    rax,QWORD PTR [rbp-0x20]
  40c77b:	leave  
  40c77c:	ret    
  40c77d:	push   rbp
  40c77e:	mov    rbp,rsp
  40c781:	mov    eax,edi
  40c783:	mov    BYTE PTR [rbp-0x4],al
  40c786:	movzx  eax,BYTE PTR [rbp-0x4]
  40c78a:	pop    rbp
  40c78b:	ret    
  40c78c:	push   rbp
  40c78d:	mov    rbp,rsp
  40c790:	sub    rsp,0x10
  40c794:	mov    QWORD PTR [rbp-0x8],rdi
  40c798:	mov    eax,esi
  40c79a:	mov    BYTE PTR [rbp-0xc],al
  40c79d:	movzx  eax,BYTE PTR [rbp-0xc]
  40c7a1:	mov    edi,eax
  40c7a3:	call   40c77d <flatcc_emitter_copy_buffer@@Base+0x132>
  40c7a8:	mov    edx,eax
  40c7aa:	mov    rax,QWORD PTR [rbp-0x8]
  40c7ae:	mov    BYTE PTR [rax],dl
  40c7b0:	nop
  40c7b1:	leave  
  40c7b2:	ret    
  40c7b3:	push   rbp
  40c7b4:	mov    rbp,rsp
  40c7b7:	sub    rsp,0x30
  40c7bb:	mov    QWORD PTR [rbp-0x8],rdi
  40c7bf:	mov    QWORD PTR [rbp-0x10],rsi
  40c7c3:	mov    QWORD PTR [rbp-0x18],rdx
  40c7c7:	mov    QWORD PTR [rbp-0x20],rcx
  40c7cb:	mov    DWORD PTR [rbp-0x24],r8d
  40c7cf:	mov    rax,QWORD PTR [rbp-0x8]
  40c7d3:	mov    edx,0x48
  40c7d8:	mov    esi,0x0
  40c7dd:	mov    rdi,rax
  40c7e0:	call   403080 <memset@plt>
  40c7e5:	mov    rax,QWORD PTR [rbp-0x8]
  40c7e9:	mov    rdx,QWORD PTR [rbp-0x10]
  40c7ed:	mov    QWORD PTR [rax],rdx
  40c7f0:	mov    rax,QWORD PTR [rbp-0x8]
  40c7f4:	mov    rdx,QWORD PTR [rbp-0x18]
  40c7f8:	mov    QWORD PTR [rax+0x8],rdx
  40c7fc:	mov    rax,QWORD PTR [rbp-0x8]
  40c800:	mov    DWORD PTR [rax+0x18],0x1
  40c807:	mov    rax,QWORD PTR [rbp-0x8]
  40c80b:	mov    edx,DWORD PTR [rbp-0x24]
  40c80e:	mov    DWORD PTR [rax+0x10],edx
  40c811:	mov    rax,QWORD PTR [rbp-0x8]
  40c815:	mov    rdx,QWORD PTR [rbp-0x18]
  40c819:	mov    QWORD PTR [rax+0x28],rdx
  40c81d:	mov    rax,QWORD PTR [rbp-0x8]
  40c821:	mov    rdx,QWORD PTR [rbp-0x20]
  40c825:	mov    QWORD PTR [rax+0x30],rdx
  40c829:	mov    rax,QWORD PTR [rbp-0x8]
  40c82d:	mov    rdx,QWORD PTR [rbp-0x18]
  40c831:	mov    QWORD PTR [rax+0x38],rdx
  40c835:	nop
  40c836:	leave  
  40c837:	ret    
  40c838:	push   rbp
  40c839:	mov    rbp,rsp
  40c83c:	sub    rsp,0x20
  40c840:	mov    QWORD PTR [rbp-0x8],rdi
  40c844:	mov    QWORD PTR [rbp-0x10],rsi
  40c848:	mov    QWORD PTR [rbp-0x18],rdx
  40c84c:	mov    rdx,QWORD PTR [rbp-0x18]
  40c850:	mov    rax,QWORD PTR [rbp-0x10]
  40c854:	sub    rdx,rax
  40c857:	mov    rax,rdx
  40c85a:	cmp    rax,0x1
  40c85e:	jle    40c895 <flatcc_emitter_copy_buffer@@Base+0x24a>
  40c860:	mov    rax,QWORD PTR [rbp-0x10]
  40c864:	movzx  eax,BYTE PTR [rax]
  40c867:	cmp    al,0x20
  40c869:	jle    40c871 <flatcc_emitter_copy_buffer@@Base+0x226>
  40c86b:	mov    rax,QWORD PTR [rbp-0x10]
  40c86f:	jmp    40c8ac <flatcc_emitter_copy_buffer@@Base+0x261>
  40c871:	mov    rax,QWORD PTR [rbp-0x10]
  40c875:	movzx  eax,BYTE PTR [rax]
  40c878:	cmp    al,0x20
  40c87a:	jne    40c895 <flatcc_emitter_copy_buffer@@Base+0x24a>
  40c87c:	mov    rax,QWORD PTR [rbp-0x10]
  40c880:	add    rax,0x1
  40c884:	movzx  eax,BYTE PTR [rax]
  40c887:	cmp    al,0x20
  40c889:	jle    40c895 <flatcc_emitter_copy_buffer@@Base+0x24a>
  40c88b:	mov    rax,QWORD PTR [rbp-0x10]
  40c88f:	add    rax,0x1
  40c893:	jmp    40c8ac <flatcc_emitter_copy_buffer@@Base+0x261>
  40c895:	mov    rdx,QWORD PTR [rbp-0x18]
  40c899:	mov    rcx,QWORD PTR [rbp-0x10]
  40c89d:	mov    rax,QWORD PTR [rbp-0x8]
  40c8a1:	mov    rsi,rcx
  40c8a4:	mov    rdi,rax
  40c8a7:	call   410889 <flatcc_json_parser_space_ext@@Base>
  40c8ac:	leave  
  40c8ad:	ret    
  40c8ae:	push   rbp
  40c8af:	mov    rbp,rsp
  40c8b2:	sub    rsp,0x20
  40c8b6:	mov    QWORD PTR [rbp-0x8],rdi
  40c8ba:	mov    QWORD PTR [rbp-0x10],rsi
  40c8be:	mov    QWORD PTR [rbp-0x18],rdx
  40c8c2:	mov    rax,QWORD PTR [rbp-0x10]
  40c8c6:	cmp    rax,QWORD PTR [rbp-0x18]
  40c8ca:	je     40c8d7 <flatcc_emitter_copy_buffer@@Base+0x28c>
  40c8cc:	mov    rax,QWORD PTR [rbp-0x10]
  40c8d0:	movzx  eax,BYTE PTR [rax]
  40c8d3:	cmp    al,0x22
  40c8d5:	je     40c8f2 <flatcc_emitter_copy_buffer@@Base+0x2a7>
  40c8d7:	mov    rdx,QWORD PTR [rbp-0x18]
  40c8db:	mov    rsi,QWORD PTR [rbp-0x10]
  40c8df:	mov    rax,QWORD PTR [rbp-0x8]
  40c8e3:	mov    ecx,0x10
  40c8e8:	mov    rdi,rax
  40c8eb:	call   410789 <flatcc_json_parser_set_error@@Base>
  40c8f0:	jmp    40c8fb <flatcc_emitter_copy_buffer@@Base+0x2b0>
  40c8f2:	add    QWORD PTR [rbp-0x10],0x1
  40c8f7:	mov    rax,QWORD PTR [rbp-0x10]
  40c8fb:	leave  
  40c8fc:	ret    
  40c8fd:	push   rbp
  40c8fe:	mov    rbp,rsp
  40c901:	sub    rsp,0x20
  40c905:	mov    QWORD PTR [rbp-0x8],rdi
  40c909:	mov    QWORD PTR [rbp-0x10],rsi
  40c90d:	mov    QWORD PTR [rbp-0x18],rdx
  40c911:	mov    rax,QWORD PTR [rbp-0x10]
  40c915:	cmp    rax,QWORD PTR [rbp-0x18]
  40c919:	je     40c926 <flatcc_emitter_copy_buffer@@Base+0x2db>
  40c91b:	mov    rax,QWORD PTR [rbp-0x10]
  40c91f:	movzx  eax,BYTE PTR [rax]
  40c922:	cmp    al,0x22
  40c924:	je     40c941 <flatcc_emitter_copy_buffer@@Base+0x2f6>
  40c926:	mov    rdx,QWORD PTR [rbp-0x18]
  40c92a:	mov    rsi,QWORD PTR [rbp-0x10]
  40c92e:	mov    rax,QWORD PTR [rbp-0x8]
  40c932:	mov    ecx,0x14
  40c937:	mov    rdi,rax
  40c93a:	call   410789 <flatcc_json_parser_set_error@@Base>
  40c93f:	jmp    40c94a <flatcc_emitter_copy_buffer@@Base+0x2ff>
  40c941:	add    QWORD PTR [rbp-0x10],0x1
  40c946:	mov    rax,QWORD PTR [rbp-0x10]
  40c94a:	leave  
  40c94b:	ret    
  40c94c:	push   rbp
  40c94d:	mov    rbp,rsp
  40c950:	sub    rsp,0x20
  40c954:	mov    QWORD PTR [rbp-0x8],rdi
  40c958:	mov    QWORD PTR [rbp-0x10],rsi
  40c95c:	mov    QWORD PTR [rbp-0x18],rdx
  40c960:	mov    rax,QWORD PTR [rbp-0x10]
  40c964:	cmp    rax,QWORD PTR [rbp-0x18]
  40c968:	jne    40c970 <flatcc_emitter_copy_buffer@@Base+0x325>
  40c96a:	mov    rax,QWORD PTR [rbp-0x10]
  40c96e:	jmp    40c9c2 <flatcc_emitter_copy_buffer@@Base+0x377>
  40c970:	mov    rax,QWORD PTR [rbp-0x10]
  40c974:	movzx  eax,BYTE PTR [rax]
  40c977:	cmp    al,0x22
  40c979:	jne    40c98d <flatcc_emitter_copy_buffer@@Base+0x342>
  40c97b:	add    QWORD PTR [rbp-0x10],0x1
  40c980:	mov    rax,QWORD PTR [rbp-0x8]
  40c984:	mov    DWORD PTR [rax+0x14],0x0
  40c98b:	jmp    40c9be <flatcc_emitter_copy_buffer@@Base+0x373>
  40c98d:	mov    rax,QWORD PTR [rbp-0x10]
  40c991:	movzx  eax,BYTE PTR [rax]
  40c994:	cmp    al,0x2e
  40c996:	jne    40c9b3 <flatcc_emitter_copy_buffer@@Base+0x368>
  40c998:	mov    rdx,QWORD PTR [rbp-0x18]
  40c99c:	mov    rsi,QWORD PTR [rbp-0x10]
  40c9a0:	mov    rax,QWORD PTR [rbp-0x8]
  40c9a4:	mov    ecx,0x5
  40c9a9:	mov    rdi,rax
  40c9ac:	call   410789 <flatcc_json_parser_set_error@@Base>
  40c9b1:	jmp    40c9c2 <flatcc_emitter_copy_buffer@@Base+0x377>
  40c9b3:	mov    rax,QWORD PTR [rbp-0x8]
  40c9b7:	mov    DWORD PTR [rax+0x14],0x1
  40c9be:	mov    rax,QWORD PTR [rbp-0x10]
  40c9c2:	leave  
  40c9c3:	ret    
  40c9c4:	push   rbp
  40c9c5:	mov    rbp,rsp
  40c9c8:	sub    rsp,0x30
  40c9cc:	mov    QWORD PTR [rbp-0x18],rdi
  40c9d0:	mov    QWORD PTR [rbp-0x20],rsi
  40c9d4:	mov    QWORD PTR [rbp-0x28],rdx
  40c9d8:	mov    BYTE PTR [rbp-0x2],0x0
  40c9dc:	mov    rax,QWORD PTR [rbp-0x18]
  40c9e0:	mov    eax,DWORD PTR [rax+0x14]
  40c9e3:	test   eax,eax
  40c9e5:	je     40ca9f <flatcc_emitter_copy_buffer@@Base+0x454>
  40c9eb:	jmp    40ca39 <flatcc_emitter_copy_buffer@@Base+0x3ee>
  40c9ed:	mov    rax,QWORD PTR [rbp-0x20]
  40c9f1:	movzx  eax,BYTE PTR [rax]
  40c9f4:	mov    BYTE PTR [rbp-0x1],al
  40c9f7:	movzx  eax,BYTE PTR [rbp-0x1]
  40c9fb:	mov    BYTE PTR [rbp-0x2],al
  40c9fe:	cmp    BYTE PTR [rbp-0x1],0x5f
  40ca02:	je     40ca1c <flatcc_emitter_copy_buffer@@Base+0x3d1>
  40ca04:	cmp    BYTE PTR [rbp-0x1],0x2e
  40ca08:	je     40ca1c <flatcc_emitter_copy_buffer@@Base+0x3d1>
  40ca0a:	cmp    BYTE PTR [rbp-0x1],0x0
  40ca0e:	js     40ca1c <flatcc_emitter_copy_buffer@@Base+0x3d1>
  40ca10:	cmp    BYTE PTR [rbp-0x1],0x2f
  40ca14:	jle    40ca23 <flatcc_emitter_copy_buffer@@Base+0x3d8>
  40ca16:	cmp    BYTE PTR [rbp-0x1],0x39
  40ca1a:	jg     40ca23 <flatcc_emitter_copy_buffer@@Base+0x3d8>
  40ca1c:	add    QWORD PTR [rbp-0x20],0x1
  40ca21:	jmp    40ca39 <flatcc_emitter_copy_buffer@@Base+0x3ee>
  40ca23:	or     BYTE PTR [rbp-0x1],0x20
  40ca27:	cmp    BYTE PTR [rbp-0x1],0x60
  40ca2b:	jle    40ca50 <flatcc_emitter_copy_buffer@@Base+0x405>
  40ca2d:	cmp    BYTE PTR [rbp-0x1],0x7a
  40ca31:	jg     40ca50 <flatcc_emitter_copy_buffer@@Base+0x405>
  40ca33:	add    QWORD PTR [rbp-0x20],0x1
  40ca38:	nop
  40ca39:	mov    rax,QWORD PTR [rbp-0x20]
  40ca3d:	cmp    rax,QWORD PTR [rbp-0x28]
  40ca41:	je     40ca51 <flatcc_emitter_copy_buffer@@Base+0x406>
  40ca43:	mov    rax,QWORD PTR [rbp-0x20]
  40ca47:	movzx  eax,BYTE PTR [rax]
  40ca4a:	cmp    al,0x20
  40ca4c:	jg     40c9ed <flatcc_emitter_copy_buffer@@Base+0x3a2>
  40ca4e:	jmp    40ca51 <flatcc_emitter_copy_buffer@@Base+0x406>
  40ca50:	nop
  40ca51:	cmp    BYTE PTR [rbp-0x2],0x2e
  40ca55:	jne    40caec <flatcc_emitter_copy_buffer@@Base+0x4a1>
  40ca5b:	mov    rdx,QWORD PTR [rbp-0x28]
  40ca5f:	mov    rsi,QWORD PTR [rbp-0x20]
  40ca63:	mov    rax,QWORD PTR [rbp-0x18]
  40ca67:	mov    ecx,0x5
  40ca6c:	mov    rdi,rax
  40ca6f:	call   410789 <flatcc_json_parser_set_error@@Base>
  40ca74:	jmp    40caf0 <flatcc_emitter_copy_buffer@@Base+0x4a5>
  40ca76:	mov    rax,QWORD PTR [rbp-0x20]
  40ca7a:	movzx  eax,BYTE PTR [rax]
  40ca7d:	cmp    al,0x5c
  40ca7f:	jne    40ca9a <flatcc_emitter_copy_buffer@@Base+0x44f>
  40ca81:	mov    rdx,QWORD PTR [rbp-0x28]
  40ca85:	mov    rax,QWORD PTR [rbp-0x20]
  40ca89:	sub    rdx,rax
  40ca8c:	mov    rax,rdx
  40ca8f:	cmp    rax,0x1
  40ca93:	jle    40cab6 <flatcc_emitter_copy_buffer@@Base+0x46b>
  40ca95:	add    QWORD PTR [rbp-0x20],0x1
  40ca9a:	add    QWORD PTR [rbp-0x20],0x1
  40ca9f:	mov    rax,QWORD PTR [rbp-0x20]
  40caa3:	cmp    rax,QWORD PTR [rbp-0x28]
  40caa7:	je     40cab7 <flatcc_emitter_copy_buffer@@Base+0x46c>
  40caa9:	mov    rax,QWORD PTR [rbp-0x20]
  40caad:	movzx  eax,BYTE PTR [rax]
  40cab0:	cmp    al,0x22
  40cab2:	jne    40ca76 <flatcc_emitter_copy_buffer@@Base+0x42b>
  40cab4:	jmp    40cab7 <flatcc_emitter_copy_buffer@@Base+0x46c>
  40cab6:	nop
  40cab7:	mov    rax,QWORD PTR [rbp-0x20]
  40cabb:	cmp    rax,QWORD PTR [rbp-0x28]
  40cabf:	je     40cacc <flatcc_emitter_copy_buffer@@Base+0x481>
  40cac1:	mov    rax,QWORD PTR [rbp-0x20]
  40cac5:	movzx  eax,BYTE PTR [rax]
  40cac8:	cmp    al,0x22
  40caca:	je     40cae7 <flatcc_emitter_copy_buffer@@Base+0x49c>
  40cacc:	mov    rdx,QWORD PTR [rbp-0x28]
  40cad0:	mov    rsi,QWORD PTR [rbp-0x20]
  40cad4:	mov    rax,QWORD PTR [rbp-0x18]
  40cad8:	mov    ecx,0x14
  40cadd:	mov    rdi,rax
  40cae0:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cae5:	jmp    40caf0 <flatcc_emitter_copy_buffer@@Base+0x4a5>
  40cae7:	add    QWORD PTR [rbp-0x20],0x1
  40caec:	mov    rax,QWORD PTR [rbp-0x20]
  40caf0:	leave  
  40caf1:	ret    
  40caf2:	push   rbp
  40caf3:	mov    rbp,rsp
  40caf6:	sub    rsp,0x20
  40cafa:	mov    QWORD PTR [rbp-0x8],rdi
  40cafe:	mov    QWORD PTR [rbp-0x10],rsi
  40cb02:	mov    QWORD PTR [rbp-0x18],rdx
  40cb06:	mov    rdx,QWORD PTR [rbp-0x18]
  40cb0a:	mov    rcx,QWORD PTR [rbp-0x10]
  40cb0e:	mov    rax,QWORD PTR [rbp-0x8]
  40cb12:	mov    rsi,rcx
  40cb15:	mov    rdi,rax
  40cb18:	call   40c94c <flatcc_emitter_copy_buffer@@Base+0x301>
  40cb1d:	mov    QWORD PTR [rbp-0x10],rax
  40cb21:	mov    rax,QWORD PTR [rbp-0x8]
  40cb25:	mov    eax,DWORD PTR [rax+0x14]
  40cb28:	test   eax,eax
  40cb2a:	jne    40cb47 <flatcc_emitter_copy_buffer@@Base+0x4fc>
  40cb2c:	mov    rdx,QWORD PTR [rbp-0x18]
  40cb30:	mov    rcx,QWORD PTR [rbp-0x10]
  40cb34:	mov    rax,QWORD PTR [rbp-0x8]
  40cb38:	mov    rsi,rcx
  40cb3b:	mov    rdi,rax
  40cb3e:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40cb43:	mov    QWORD PTR [rbp-0x10],rax
  40cb47:	mov    rax,QWORD PTR [rbp-0x10]
  40cb4b:	leave  
  40cb4c:	ret    
  40cb4d:	push   rbp
  40cb4e:	mov    rbp,rsp
  40cb51:	sub    rsp,0x20
  40cb55:	mov    QWORD PTR [rbp-0x8],rdi
  40cb59:	mov    QWORD PTR [rbp-0x10],rsi
  40cb5d:	mov    QWORD PTR [rbp-0x18],rdx
  40cb61:	mov    QWORD PTR [rbp-0x20],rcx
  40cb65:	mov    rdx,QWORD PTR [rbp-0x18]
  40cb69:	mov    rcx,QWORD PTR [rbp-0x10]
  40cb6d:	mov    rax,QWORD PTR [rbp-0x8]
  40cb71:	mov    rsi,rcx
  40cb74:	mov    rdi,rax
  40cb77:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40cb7c:	mov    QWORD PTR [rbp-0x10],rax
  40cb80:	mov    rax,QWORD PTR [rbp-0x10]
  40cb84:	cmp    rax,QWORD PTR [rbp-0x18]
  40cb88:	jne    40cb9d <flatcc_emitter_copy_buffer@@Base+0x552>
  40cb8a:	mov    rax,QWORD PTR [rbp-0x20]
  40cb8e:	mov    DWORD PTR [rax],0x0
  40cb94:	mov    rax,QWORD PTR [rbp-0x10]
  40cb98:	jmp    40cc89 <flatcc_emitter_copy_buffer@@Base+0x63e>
  40cb9d:	mov    rax,QWORD PTR [rbp-0x10]
  40cba1:	movzx  eax,BYTE PTR [rax]
  40cba4:	cmp    al,0x2c
  40cba6:	je     40cbfb <flatcc_emitter_copy_buffer@@Base+0x5b0>
  40cba8:	mov    rax,QWORD PTR [rbp-0x20]
  40cbac:	mov    DWORD PTR [rax],0x0
  40cbb2:	mov    rax,QWORD PTR [rbp-0x10]
  40cbb6:	movzx  eax,BYTE PTR [rax]
  40cbb9:	cmp    al,0x7d
  40cbbb:	je     40cbdb <flatcc_emitter_copy_buffer@@Base+0x590>
  40cbbd:	mov    rdx,QWORD PTR [rbp-0x18]
  40cbc1:	mov    rsi,QWORD PTR [rbp-0x10]
  40cbc5:	mov    rax,QWORD PTR [rbp-0x8]
  40cbc9:	mov    ecx,0xa
  40cbce:	mov    rdi,rax
  40cbd1:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cbd6:	jmp    40cc89 <flatcc_emitter_copy_buffer@@Base+0x63e>
  40cbdb:	mov    rax,QWORD PTR [rbp-0x10]
  40cbdf:	lea    rcx,[rax+0x1]
  40cbe3:	mov    rdx,QWORD PTR [rbp-0x18]
  40cbe7:	mov    rax,QWORD PTR [rbp-0x8]
  40cbeb:	mov    rsi,rcx
  40cbee:	mov    rdi,rax
  40cbf1:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40cbf6:	jmp    40cc89 <flatcc_emitter_copy_buffer@@Base+0x63e>
  40cbfb:	mov    rax,QWORD PTR [rbp-0x10]
  40cbff:	lea    rcx,[rax+0x1]
  40cc03:	mov    rdx,QWORD PTR [rbp-0x18]
  40cc07:	mov    rax,QWORD PTR [rbp-0x8]
  40cc0b:	mov    rsi,rcx
  40cc0e:	mov    rdi,rax
  40cc11:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40cc16:	mov    QWORD PTR [rbp-0x10],rax
  40cc1a:	mov    rax,QWORD PTR [rbp-0x10]
  40cc1e:	cmp    rax,QWORD PTR [rbp-0x18]
  40cc22:	jne    40cc49 <flatcc_emitter_copy_buffer@@Base+0x5fe>
  40cc24:	mov    rax,QWORD PTR [rbp-0x20]
  40cc28:	mov    DWORD PTR [rax],0x0
  40cc2e:	mov    rdx,QWORD PTR [rbp-0x18]
  40cc32:	mov    rsi,QWORD PTR [rbp-0x10]
  40cc36:	mov    rax,QWORD PTR [rbp-0x8]
  40cc3a:	mov    ecx,0xa
  40cc3f:	mov    rdi,rax
  40cc42:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cc47:	jmp    40cc89 <flatcc_emitter_copy_buffer@@Base+0x63e>
  40cc49:	mov    rax,QWORD PTR [rbp-0x10]
  40cc4d:	movzx  eax,BYTE PTR [rax]
  40cc50:	cmp    al,0x7d
  40cc52:	jne    40cc7b <flatcc_emitter_copy_buffer@@Base+0x630>
  40cc54:	mov    rax,QWORD PTR [rbp-0x20]
  40cc58:	mov    DWORD PTR [rax],0x0
  40cc5e:	mov    rax,QWORD PTR [rbp-0x10]
  40cc62:	lea    rcx,[rax+0x1]
  40cc66:	mov    rdx,QWORD PTR [rbp-0x18]
  40cc6a:	mov    rax,QWORD PTR [rbp-0x8]
  40cc6e:	mov    rsi,rcx
  40cc71:	mov    rdi,rax
  40cc74:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40cc79:	jmp    40cc89 <flatcc_emitter_copy_buffer@@Base+0x63e>
  40cc7b:	mov    rax,QWORD PTR [rbp-0x20]
  40cc7f:	mov    DWORD PTR [rax],0x1
  40cc85:	mov    rax,QWORD PTR [rbp-0x10]
  40cc89:	leave  
  40cc8a:	ret    
  40cc8b:	push   rbp
  40cc8c:	mov    rbp,rsp
  40cc8f:	sub    rsp,0x20
  40cc93:	mov    QWORD PTR [rbp-0x8],rdi
  40cc97:	mov    QWORD PTR [rbp-0x10],rsi
  40cc9b:	mov    QWORD PTR [rbp-0x18],rdx
  40cc9f:	mov    QWORD PTR [rbp-0x20],rcx
  40cca3:	mov    rax,QWORD PTR [rbp-0x10]
  40cca7:	cmp    rax,QWORD PTR [rbp-0x18]
  40ccab:	je     40ccb8 <flatcc_emitter_copy_buffer@@Base+0x66d>
  40ccad:	mov    rax,QWORD PTR [rbp-0x10]
  40ccb1:	movzx  eax,BYTE PTR [rax]
  40ccb4:	cmp    al,0x5b
  40ccb6:	je     40ccdd <flatcc_emitter_copy_buffer@@Base+0x692>
  40ccb8:	mov    rax,QWORD PTR [rbp-0x20]
  40ccbc:	mov    DWORD PTR [rax],0x0
  40ccc2:	mov    rdx,QWORD PTR [rbp-0x18]
  40ccc6:	mov    rsi,QWORD PTR [rbp-0x10]
  40ccca:	mov    rax,QWORD PTR [rbp-0x8]
  40ccce:	mov    ecx,0x16
  40ccd3:	mov    rdi,rax
  40ccd6:	call   410789 <flatcc_json_parser_set_error@@Base>
  40ccdb:	jmp    40cd46 <flatcc_emitter_copy_buffer@@Base+0x6fb>
  40ccdd:	mov    rax,QWORD PTR [rbp-0x10]
  40cce1:	lea    rcx,[rax+0x1]
  40cce5:	mov    rdx,QWORD PTR [rbp-0x18]
  40cce9:	mov    rax,QWORD PTR [rbp-0x8]
  40cced:	mov    rsi,rcx
  40ccf0:	mov    rdi,rax
  40ccf3:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40ccf8:	mov    QWORD PTR [rbp-0x10],rax
  40ccfc:	mov    rax,QWORD PTR [rbp-0x10]
  40cd00:	cmp    rax,QWORD PTR [rbp-0x18]
  40cd04:	je     40cd38 <flatcc_emitter_copy_buffer@@Base+0x6ed>
  40cd06:	mov    rax,QWORD PTR [rbp-0x10]
  40cd0a:	movzx  eax,BYTE PTR [rax]
  40cd0d:	cmp    al,0x5d
  40cd0f:	jne    40cd38 <flatcc_emitter_copy_buffer@@Base+0x6ed>
  40cd11:	mov    rax,QWORD PTR [rbp-0x20]
  40cd15:	mov    DWORD PTR [rax],0x0
  40cd1b:	mov    rax,QWORD PTR [rbp-0x10]
  40cd1f:	lea    rcx,[rax+0x1]
  40cd23:	mov    rdx,QWORD PTR [rbp-0x18]
  40cd27:	mov    rax,QWORD PTR [rbp-0x8]
  40cd2b:	mov    rsi,rcx
  40cd2e:	mov    rdi,rax
  40cd31:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40cd36:	jmp    40cd46 <flatcc_emitter_copy_buffer@@Base+0x6fb>
  40cd38:	mov    rax,QWORD PTR [rbp-0x20]
  40cd3c:	mov    DWORD PTR [rax],0x1
  40cd42:	mov    rax,QWORD PTR [rbp-0x10]
  40cd46:	leave  
  40cd47:	ret    
  40cd48:	push   rbp
  40cd49:	mov    rbp,rsp
  40cd4c:	sub    rsp,0x20
  40cd50:	mov    QWORD PTR [rbp-0x8],rdi
  40cd54:	mov    QWORD PTR [rbp-0x10],rsi
  40cd58:	mov    QWORD PTR [rbp-0x18],rdx
  40cd5c:	mov    QWORD PTR [rbp-0x20],rcx
  40cd60:	mov    rdx,QWORD PTR [rbp-0x18]
  40cd64:	mov    rcx,QWORD PTR [rbp-0x10]
  40cd68:	mov    rax,QWORD PTR [rbp-0x8]
  40cd6c:	mov    rsi,rcx
  40cd6f:	mov    rdi,rax
  40cd72:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40cd77:	mov    QWORD PTR [rbp-0x10],rax
  40cd7b:	mov    rax,QWORD PTR [rbp-0x10]
  40cd7f:	cmp    rax,QWORD PTR [rbp-0x18]
  40cd83:	jne    40cd98 <flatcc_emitter_copy_buffer@@Base+0x74d>
  40cd85:	mov    rax,QWORD PTR [rbp-0x20]
  40cd89:	mov    DWORD PTR [rax],0x0
  40cd8f:	mov    rax,QWORD PTR [rbp-0x10]
  40cd93:	jmp    40ce84 <flatcc_emitter_copy_buffer@@Base+0x839>
  40cd98:	mov    rax,QWORD PTR [rbp-0x10]
  40cd9c:	movzx  eax,BYTE PTR [rax]
  40cd9f:	cmp    al,0x2c
  40cda1:	je     40cdf6 <flatcc_emitter_copy_buffer@@Base+0x7ab>
  40cda3:	mov    rax,QWORD PTR [rbp-0x20]
  40cda7:	mov    DWORD PTR [rax],0x0
  40cdad:	mov    rax,QWORD PTR [rbp-0x10]
  40cdb1:	movzx  eax,BYTE PTR [rax]
  40cdb4:	cmp    al,0x5d
  40cdb6:	je     40cdd6 <flatcc_emitter_copy_buffer@@Base+0x78b>
  40cdb8:	mov    rdx,QWORD PTR [rbp-0x18]
  40cdbc:	mov    rsi,QWORD PTR [rbp-0x10]
  40cdc0:	mov    rax,QWORD PTR [rbp-0x8]
  40cdc4:	mov    ecx,0x9
  40cdc9:	mov    rdi,rax
  40cdcc:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cdd1:	jmp    40ce84 <flatcc_emitter_copy_buffer@@Base+0x839>
  40cdd6:	mov    rax,QWORD PTR [rbp-0x10]
  40cdda:	lea    rcx,[rax+0x1]
  40cdde:	mov    rdx,QWORD PTR [rbp-0x18]
  40cde2:	mov    rax,QWORD PTR [rbp-0x8]
  40cde6:	mov    rsi,rcx
  40cde9:	mov    rdi,rax
  40cdec:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40cdf1:	jmp    40ce84 <flatcc_emitter_copy_buffer@@Base+0x839>
  40cdf6:	mov    rax,QWORD PTR [rbp-0x10]
  40cdfa:	lea    rcx,[rax+0x1]
  40cdfe:	mov    rdx,QWORD PTR [rbp-0x18]
  40ce02:	mov    rax,QWORD PTR [rbp-0x8]
  40ce06:	mov    rsi,rcx
  40ce09:	mov    rdi,rax
  40ce0c:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40ce11:	mov    QWORD PTR [rbp-0x10],rax
  40ce15:	mov    rax,QWORD PTR [rbp-0x10]
  40ce19:	cmp    rax,QWORD PTR [rbp-0x18]
  40ce1d:	jne    40ce44 <flatcc_emitter_copy_buffer@@Base+0x7f9>
  40ce1f:	mov    rax,QWORD PTR [rbp-0x20]
  40ce23:	mov    DWORD PTR [rax],0x0
  40ce29:	mov    rdx,QWORD PTR [rbp-0x18]
  40ce2d:	mov    rsi,QWORD PTR [rbp-0x10]
  40ce31:	mov    rax,QWORD PTR [rbp-0x8]
  40ce35:	mov    ecx,0x9
  40ce3a:	mov    rdi,rax
  40ce3d:	call   410789 <flatcc_json_parser_set_error@@Base>
  40ce42:	jmp    40ce84 <flatcc_emitter_copy_buffer@@Base+0x839>
  40ce44:	mov    rax,QWORD PTR [rbp-0x10]
  40ce48:	movzx  eax,BYTE PTR [rax]
  40ce4b:	cmp    al,0x5d
  40ce4d:	jne    40ce76 <flatcc_emitter_copy_buffer@@Base+0x82b>
  40ce4f:	mov    rax,QWORD PTR [rbp-0x20]
  40ce53:	mov    DWORD PTR [rax],0x0
  40ce59:	mov    rax,QWORD PTR [rbp-0x10]
  40ce5d:	lea    rcx,[rax+0x1]
  40ce61:	mov    rdx,QWORD PTR [rbp-0x18]
  40ce65:	mov    rax,QWORD PTR [rbp-0x8]
  40ce69:	mov    rsi,rcx
  40ce6c:	mov    rdi,rax
  40ce6f:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  40ce74:	jmp    40ce84 <flatcc_emitter_copy_buffer@@Base+0x839>
  40ce76:	mov    rax,QWORD PTR [rbp-0x20]
  40ce7a:	mov    DWORD PTR [rax],0x1
  40ce80:	mov    rax,QWORD PTR [rbp-0x10]
  40ce84:	leave  
  40ce85:	ret    
  40ce86:	push   rbp
  40ce87:	mov    rbp,rsp
  40ce8a:	sub    rsp,0x30
  40ce8e:	mov    QWORD PTR [rbp-0x8],rdi
  40ce92:	mov    QWORD PTR [rbp-0x10],rsi
  40ce96:	mov    QWORD PTR [rbp-0x18],rdx
  40ce9a:	mov    DWORD PTR [rbp-0x1c],ecx
  40ce9d:	mov    QWORD PTR [rbp-0x28],r8
  40cea1:	mov    QWORD PTR [rbp-0x30],r9
  40cea5:	cmp    DWORD PTR [rbp-0x1c],0x0
  40cea9:	je     40cec6 <flatcc_emitter_copy_buffer@@Base+0x87b>
  40ceab:	mov    rdx,QWORD PTR [rbp-0x18]
  40ceaf:	mov    rsi,QWORD PTR [rbp-0x10]
  40ceb3:	mov    rax,QWORD PTR [rbp-0x8]
  40ceb7:	mov    ecx,0x8
  40cebc:	mov    rdi,rax
  40cebf:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cec4:	jmp    40ced5 <flatcc_emitter_copy_buffer@@Base+0x88a>
  40cec6:	mov    rax,QWORD PTR [rbp-0x30]
  40ceca:	mov    rdx,QWORD PTR [rbp-0x28]
  40cece:	mov    QWORD PTR [rax],rdx
  40ced1:	mov    rax,QWORD PTR [rbp-0x10]
  40ced5:	leave  
  40ced6:	ret    
  40ced7:	push   rbp
  40ced8:	mov    rbp,rsp
  40cedb:	sub    rsp,0x30
  40cedf:	mov    QWORD PTR [rbp-0x8],rdi
  40cee3:	mov    QWORD PTR [rbp-0x10],rsi
  40cee7:	mov    QWORD PTR [rbp-0x18],rdx
  40ceeb:	mov    DWORD PTR [rbp-0x1c],ecx
  40ceee:	mov    QWORD PTR [rbp-0x28],r8
  40cef2:	mov    QWORD PTR [rbp-0x30],r9
  40cef6:	cmp    DWORD PTR [rbp-0x1c],0x0
  40cefa:	je     40cf17 <flatcc_emitter_copy_buffer@@Base+0x8cc>
  40cefc:	mov    rdx,QWORD PTR [rbp-0x18]
  40cf00:	mov    rsi,QWORD PTR [rbp-0x10]
  40cf04:	mov    rax,QWORD PTR [rbp-0x8]
  40cf08:	mov    ecx,0x8
  40cf0d:	mov    rdi,rax
  40cf10:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cf15:	jmp    40cf2b <flatcc_emitter_copy_buffer@@Base+0x8e0>
  40cf17:	cmp    QWORD PTR [rbp-0x28],0x0
  40cf1c:	setne  al
  40cf1f:	mov    edx,eax
  40cf21:	mov    rax,QWORD PTR [rbp-0x30]
  40cf25:	mov    BYTE PTR [rax],dl
  40cf27:	mov    rax,QWORD PTR [rbp-0x10]
  40cf2b:	leave  
  40cf2c:	ret    
  40cf2d:	push   rbp
  40cf2e:	mov    rbp,rsp
  40cf31:	sub    rsp,0x30
  40cf35:	mov    QWORD PTR [rbp-0x8],rdi
  40cf39:	mov    QWORD PTR [rbp-0x10],rsi
  40cf3d:	mov    QWORD PTR [rbp-0x18],rdx
  40cf41:	mov    DWORD PTR [rbp-0x1c],ecx
  40cf44:	mov    QWORD PTR [rbp-0x28],r8
  40cf48:	mov    QWORD PTR [rbp-0x30],r9
  40cf4c:	cmp    DWORD PTR [rbp-0x1c],0x0
  40cf50:	je     40cf6d <flatcc_emitter_copy_buffer@@Base+0x922>
  40cf52:	mov    rdx,QWORD PTR [rbp-0x18]
  40cf56:	mov    rsi,QWORD PTR [rbp-0x10]
  40cf5a:	mov    rax,QWORD PTR [rbp-0x8]
  40cf5e:	mov    ecx,0x8
  40cf63:	mov    rdi,rax
  40cf66:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cf6b:	jmp    40cfa3 <flatcc_emitter_copy_buffer@@Base+0x958>
  40cf6d:	mov    eax,0xffffffff
  40cf72:	cmp    QWORD PTR [rbp-0x28],rax
  40cf76:	jbe    40cf93 <flatcc_emitter_copy_buffer@@Base+0x948>
  40cf78:	mov    rdx,QWORD PTR [rbp-0x18]
  40cf7c:	mov    rsi,QWORD PTR [rbp-0x10]
  40cf80:	mov    rax,QWORD PTR [rbp-0x8]
  40cf84:	mov    ecx,0x7
  40cf89:	mov    rdi,rax
  40cf8c:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cf91:	jmp    40cfa3 <flatcc_emitter_copy_buffer@@Base+0x958>
  40cf93:	mov    rax,QWORD PTR [rbp-0x28]
  40cf97:	mov    edx,eax
  40cf99:	mov    rax,QWORD PTR [rbp-0x30]
  40cf9d:	mov    DWORD PTR [rax],edx
  40cf9f:	mov    rax,QWORD PTR [rbp-0x10]
  40cfa3:	leave  
  40cfa4:	ret    
  40cfa5:	push   rbp
  40cfa6:	mov    rbp,rsp
  40cfa9:	sub    rsp,0x30
  40cfad:	mov    QWORD PTR [rbp-0x8],rdi
  40cfb1:	mov    QWORD PTR [rbp-0x10],rsi
  40cfb5:	mov    QWORD PTR [rbp-0x18],rdx
  40cfb9:	mov    DWORD PTR [rbp-0x1c],ecx
  40cfbc:	mov    QWORD PTR [rbp-0x28],r8
  40cfc0:	mov    QWORD PTR [rbp-0x30],r9
  40cfc4:	cmp    DWORD PTR [rbp-0x1c],0x0
  40cfc8:	je     40cfe5 <flatcc_emitter_copy_buffer@@Base+0x99a>
  40cfca:	mov    rdx,QWORD PTR [rbp-0x18]
  40cfce:	mov    rsi,QWORD PTR [rbp-0x10]
  40cfd2:	mov    rax,QWORD PTR [rbp-0x8]
  40cfd6:	mov    ecx,0x8
  40cfdb:	mov    rdi,rax
  40cfde:	call   410789 <flatcc_json_parser_set_error@@Base>
  40cfe3:	jmp    40d01b <flatcc_emitter_copy_buffer@@Base+0x9d0>
  40cfe5:	cmp    QWORD PTR [rbp-0x28],0xffff
  40cfed:	jbe    40d00a <flatcc_emitter_copy_buffer@@Base+0x9bf>
  40cfef:	mov    rdx,QWORD PTR [rbp-0x18]
  40cff3:	mov    rsi,QWORD PTR [rbp-0x10]
  40cff7:	mov    rax,QWORD PTR [rbp-0x8]
  40cffb:	mov    ecx,0x7
  40d000:	mov    rdi,rax
  40d003:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d008:	jmp    40d01b <flatcc_emitter_copy_buffer@@Base+0x9d0>
  40d00a:	mov    rax,QWORD PTR [rbp-0x28]
  40d00e:	mov    edx,eax
  40d010:	mov    rax,QWORD PTR [rbp-0x30]
  40d014:	mov    WORD PTR [rax],dx
  40d017:	mov    rax,QWORD PTR [rbp-0x10]
  40d01b:	leave  
  40d01c:	ret    
  40d01d:	push   rbp
  40d01e:	mov    rbp,rsp
  40d021:	sub    rsp,0x30
  40d025:	mov    QWORD PTR [rbp-0x8],rdi
  40d029:	mov    QWORD PTR [rbp-0x10],rsi
  40d02d:	mov    QWORD PTR [rbp-0x18],rdx
  40d031:	mov    DWORD PTR [rbp-0x1c],ecx
  40d034:	mov    QWORD PTR [rbp-0x28],r8
  40d038:	mov    QWORD PTR [rbp-0x30],r9
  40d03c:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d040:	je     40d05d <flatcc_emitter_copy_buffer@@Base+0xa12>
  40d042:	mov    rdx,QWORD PTR [rbp-0x18]
  40d046:	mov    rsi,QWORD PTR [rbp-0x10]
  40d04a:	mov    rax,QWORD PTR [rbp-0x8]
  40d04e:	mov    ecx,0x8
  40d053:	mov    rdi,rax
  40d056:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d05b:	jmp    40d092 <flatcc_emitter_copy_buffer@@Base+0xa47>
  40d05d:	cmp    QWORD PTR [rbp-0x28],0xff
  40d065:	jbe    40d082 <flatcc_emitter_copy_buffer@@Base+0xa37>
  40d067:	mov    rdx,QWORD PTR [rbp-0x18]
  40d06b:	mov    rsi,QWORD PTR [rbp-0x10]
  40d06f:	mov    rax,QWORD PTR [rbp-0x8]
  40d073:	mov    ecx,0x7
  40d078:	mov    rdi,rax
  40d07b:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d080:	jmp    40d092 <flatcc_emitter_copy_buffer@@Base+0xa47>
  40d082:	mov    rax,QWORD PTR [rbp-0x28]
  40d086:	mov    edx,eax
  40d088:	mov    rax,QWORD PTR [rbp-0x30]
  40d08c:	mov    BYTE PTR [rax],dl
  40d08e:	mov    rax,QWORD PTR [rbp-0x10]
  40d092:	leave  
  40d093:	ret    
  40d094:	push   rbp
  40d095:	mov    rbp,rsp
  40d098:	sub    rsp,0x30
  40d09c:	mov    QWORD PTR [rbp-0x8],rdi
  40d0a0:	mov    QWORD PTR [rbp-0x10],rsi
  40d0a4:	mov    QWORD PTR [rbp-0x18],rdx
  40d0a8:	mov    DWORD PTR [rbp-0x1c],ecx
  40d0ab:	mov    QWORD PTR [rbp-0x28],r8
  40d0af:	mov    QWORD PTR [rbp-0x30],r9
  40d0b3:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d0b7:	je     40d0f7 <flatcc_emitter_copy_buffer@@Base+0xaac>
  40d0b9:	movabs rax,0x8000000000000000
  40d0c3:	cmp    QWORD PTR [rbp-0x28],rax
  40d0c7:	jbe    40d0e4 <flatcc_emitter_copy_buffer@@Base+0xa99>
  40d0c9:	mov    rdx,QWORD PTR [rbp-0x18]
  40d0cd:	mov    rsi,QWORD PTR [rbp-0x10]
  40d0d1:	mov    rax,QWORD PTR [rbp-0x8]
  40d0d5:	mov    ecx,0x8
  40d0da:	mov    rdi,rax
  40d0dd:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d0e2:	jmp    40d12a <flatcc_emitter_copy_buffer@@Base+0xadf>
  40d0e4:	mov    rax,QWORD PTR [rbp-0x28]
  40d0e8:	neg    rax
  40d0eb:	mov    rdx,rax
  40d0ee:	mov    rax,QWORD PTR [rbp-0x30]
  40d0f2:	mov    QWORD PTR [rax],rdx
  40d0f5:	jmp    40d126 <flatcc_emitter_copy_buffer@@Base+0xadb>
  40d0f7:	mov    rax,QWORD PTR [rbp-0x28]
  40d0fb:	test   rax,rax
  40d0fe:	jns    40d11b <flatcc_emitter_copy_buffer@@Base+0xad0>
  40d100:	mov    rdx,QWORD PTR [rbp-0x18]
  40d104:	mov    rsi,QWORD PTR [rbp-0x10]
  40d108:	mov    rax,QWORD PTR [rbp-0x8]
  40d10c:	mov    ecx,0x7
  40d111:	mov    rdi,rax
  40d114:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d119:	jmp    40d12a <flatcc_emitter_copy_buffer@@Base+0xadf>
  40d11b:	mov    rdx,QWORD PTR [rbp-0x28]
  40d11f:	mov    rax,QWORD PTR [rbp-0x30]
  40d123:	mov    QWORD PTR [rax],rdx
  40d126:	mov    rax,QWORD PTR [rbp-0x10]
  40d12a:	leave  
  40d12b:	ret    
  40d12c:	push   rbp
  40d12d:	mov    rbp,rsp
  40d130:	sub    rsp,0x30
  40d134:	mov    QWORD PTR [rbp-0x8],rdi
  40d138:	mov    QWORD PTR [rbp-0x10],rsi
  40d13c:	mov    QWORD PTR [rbp-0x18],rdx
  40d140:	mov    DWORD PTR [rbp-0x1c],ecx
  40d143:	mov    QWORD PTR [rbp-0x28],r8
  40d147:	mov    QWORD PTR [rbp-0x30],r9
  40d14b:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d14f:	je     40d187 <flatcc_emitter_copy_buffer@@Base+0xb3c>
  40d151:	mov    eax,0x80000000
  40d156:	cmp    QWORD PTR [rbp-0x28],rax
  40d15a:	jbe    40d177 <flatcc_emitter_copy_buffer@@Base+0xb2c>
  40d15c:	mov    rdx,QWORD PTR [rbp-0x18]
  40d160:	mov    rsi,QWORD PTR [rbp-0x10]
  40d164:	mov    rax,QWORD PTR [rbp-0x8]
  40d168:	mov    ecx,0x8
  40d16d:	mov    rdi,rax
  40d170:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d175:	jmp    40d1bc <flatcc_emitter_copy_buffer@@Base+0xb71>
  40d177:	mov    rax,QWORD PTR [rbp-0x28]
  40d17b:	neg    eax
  40d17d:	mov    edx,eax
  40d17f:	mov    rax,QWORD PTR [rbp-0x30]
  40d183:	mov    DWORD PTR [rax],edx
  40d185:	jmp    40d1b8 <flatcc_emitter_copy_buffer@@Base+0xb6d>
  40d187:	cmp    QWORD PTR [rbp-0x28],0x7fffffff
  40d18f:	jbe    40d1ac <flatcc_emitter_copy_buffer@@Base+0xb61>
  40d191:	mov    rdx,QWORD PTR [rbp-0x18]
  40d195:	mov    rsi,QWORD PTR [rbp-0x10]
  40d199:	mov    rax,QWORD PTR [rbp-0x8]
  40d19d:	mov    ecx,0x7
  40d1a2:	mov    rdi,rax
  40d1a5:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d1aa:	jmp    40d1bc <flatcc_emitter_copy_buffer@@Base+0xb71>
  40d1ac:	mov    rax,QWORD PTR [rbp-0x28]
  40d1b0:	mov    edx,eax
  40d1b2:	mov    rax,QWORD PTR [rbp-0x30]
  40d1b6:	mov    DWORD PTR [rax],edx
  40d1b8:	mov    rax,QWORD PTR [rbp-0x10]
  40d1bc:	leave  
  40d1bd:	ret    
  40d1be:	push   rbp
  40d1bf:	mov    rbp,rsp
  40d1c2:	sub    rsp,0x30
  40d1c6:	mov    QWORD PTR [rbp-0x8],rdi
  40d1ca:	mov    QWORD PTR [rbp-0x10],rsi
  40d1ce:	mov    QWORD PTR [rbp-0x18],rdx
  40d1d2:	mov    DWORD PTR [rbp-0x1c],ecx
  40d1d5:	mov    QWORD PTR [rbp-0x28],r8
  40d1d9:	mov    QWORD PTR [rbp-0x30],r9
  40d1dd:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d1e1:	je     40d219 <flatcc_emitter_copy_buffer@@Base+0xbce>
  40d1e3:	cmp    QWORD PTR [rbp-0x28],0x8000
  40d1eb:	jbe    40d208 <flatcc_emitter_copy_buffer@@Base+0xbbd>
  40d1ed:	mov    rdx,QWORD PTR [rbp-0x18]
  40d1f1:	mov    rsi,QWORD PTR [rbp-0x10]
  40d1f5:	mov    rax,QWORD PTR [rbp-0x8]
  40d1f9:	mov    ecx,0x8
  40d1fe:	mov    rdi,rax
  40d201:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d206:	jmp    40d24f <flatcc_emitter_copy_buffer@@Base+0xc04>
  40d208:	mov    rax,QWORD PTR [rbp-0x28]
  40d20c:	neg    eax
  40d20e:	mov    edx,eax
  40d210:	mov    rax,QWORD PTR [rbp-0x30]
  40d214:	mov    WORD PTR [rax],dx
  40d217:	jmp    40d24b <flatcc_emitter_copy_buffer@@Base+0xc00>
  40d219:	cmp    QWORD PTR [rbp-0x28],0x7fff
  40d221:	jbe    40d23e <flatcc_emitter_copy_buffer@@Base+0xbf3>
  40d223:	mov    rdx,QWORD PTR [rbp-0x18]
  40d227:	mov    rsi,QWORD PTR [rbp-0x10]
  40d22b:	mov    rax,QWORD PTR [rbp-0x8]
  40d22f:	mov    ecx,0x7
  40d234:	mov    rdi,rax
  40d237:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d23c:	jmp    40d24f <flatcc_emitter_copy_buffer@@Base+0xc04>
  40d23e:	mov    rax,QWORD PTR [rbp-0x28]
  40d242:	mov    edx,eax
  40d244:	mov    rax,QWORD PTR [rbp-0x30]
  40d248:	mov    WORD PTR [rax],dx
  40d24b:	mov    rax,QWORD PTR [rbp-0x10]
  40d24f:	leave  
  40d250:	ret    
  40d251:	push   rbp
  40d252:	mov    rbp,rsp
  40d255:	sub    rsp,0x30
  40d259:	mov    QWORD PTR [rbp-0x8],rdi
  40d25d:	mov    QWORD PTR [rbp-0x10],rsi
  40d261:	mov    QWORD PTR [rbp-0x18],rdx
  40d265:	mov    DWORD PTR [rbp-0x1c],ecx
  40d268:	mov    QWORD PTR [rbp-0x28],r8
  40d26c:	mov    QWORD PTR [rbp-0x30],r9
  40d270:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d274:	je     40d2ab <flatcc_emitter_copy_buffer@@Base+0xc60>
  40d276:	cmp    QWORD PTR [rbp-0x28],0x80
  40d27e:	jbe    40d29b <flatcc_emitter_copy_buffer@@Base+0xc50>
  40d280:	mov    rdx,QWORD PTR [rbp-0x18]
  40d284:	mov    rsi,QWORD PTR [rbp-0x10]
  40d288:	mov    rax,QWORD PTR [rbp-0x8]
  40d28c:	mov    ecx,0x8
  40d291:	mov    rdi,rax
  40d294:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d299:	jmp    40d2dd <flatcc_emitter_copy_buffer@@Base+0xc92>
  40d29b:	mov    rax,QWORD PTR [rbp-0x28]
  40d29f:	neg    eax
  40d2a1:	mov    edx,eax
  40d2a3:	mov    rax,QWORD PTR [rbp-0x30]
  40d2a7:	mov    BYTE PTR [rax],dl
  40d2a9:	jmp    40d2d9 <flatcc_emitter_copy_buffer@@Base+0xc8e>
  40d2ab:	cmp    QWORD PTR [rbp-0x28],0x7f
  40d2b0:	jbe    40d2cd <flatcc_emitter_copy_buffer@@Base+0xc82>
  40d2b2:	mov    rdx,QWORD PTR [rbp-0x18]
  40d2b6:	mov    rsi,QWORD PTR [rbp-0x10]
  40d2ba:	mov    rax,QWORD PTR [rbp-0x8]
  40d2be:	mov    ecx,0x7
  40d2c3:	mov    rdi,rax
  40d2c6:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d2cb:	jmp    40d2dd <flatcc_emitter_copy_buffer@@Base+0xc92>
  40d2cd:	mov    rax,QWORD PTR [rbp-0x28]
  40d2d1:	mov    edx,eax
  40d2d3:	mov    rax,QWORD PTR [rbp-0x30]
  40d2d7:	mov    BYTE PTR [rax],dl
  40d2d9:	mov    rax,QWORD PTR [rbp-0x10]
  40d2dd:	leave  
  40d2de:	ret    
  40d2df:	push   rbp
  40d2e0:	mov    rbp,rsp
  40d2e3:	mov    QWORD PTR [rbp-0x8],rdi
  40d2e7:	mov    QWORD PTR [rbp-0x10],rsi
  40d2eb:	mov    QWORD PTR [rbp-0x18],rdx
  40d2ef:	mov    DWORD PTR [rbp-0x1c],ecx
  40d2f2:	mov    QWORD PTR [rbp-0x28],r8
  40d2f6:	mov    QWORD PTR [rbp-0x30],r9
  40d2fa:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d2fe:	je     40d33b <flatcc_emitter_copy_buffer@@Base+0xcf0>
  40d300:	mov    rax,QWORD PTR [rbp-0x28]
  40d304:	test   rax,rax
  40d307:	js     40d314 <flatcc_emitter_copy_buffer@@Base+0xcc9>
  40d309:	vxorps xmm0,xmm0,xmm0
  40d30d:	vcvtsi2ss xmm0,xmm0,rax
  40d312:	jmp    40d32d <flatcc_emitter_copy_buffer@@Base+0xce2>
  40d314:	mov    rdx,rax
  40d317:	shr    rdx,1
  40d31a:	and    eax,0x1
  40d31d:	or     rdx,rax
  40d320:	vxorps xmm0,xmm0,xmm0
  40d324:	vcvtsi2ss xmm0,xmm0,rdx
  40d329:	vaddss xmm0,xmm0,xmm0
  40d32d:	vmovss xmm1,DWORD PTR [rip+0x90db]        # 416410 <flatcc_builder_padding_base@@Base+0x2070>
  40d335:	vxorps xmm0,xmm0,xmm1
  40d339:	jmp    40d368 <flatcc_emitter_copy_buffer@@Base+0xd1d>
  40d33b:	mov    rax,QWORD PTR [rbp-0x28]
  40d33f:	test   rax,rax
  40d342:	js     40d34f <flatcc_emitter_copy_buffer@@Base+0xd04>
  40d344:	vxorps xmm0,xmm0,xmm0
  40d348:	vcvtsi2ss xmm0,xmm0,rax
  40d34d:	jmp    40d368 <flatcc_emitter_copy_buffer@@Base+0xd1d>
  40d34f:	mov    rdx,rax
  40d352:	shr    rdx,1
  40d355:	and    eax,0x1
  40d358:	or     rdx,rax
  40d35b:	vxorps xmm0,xmm0,xmm0
  40d35f:	vcvtsi2ss xmm0,xmm0,rdx
  40d364:	vaddss xmm0,xmm0,xmm0
  40d368:	mov    rax,QWORD PTR [rbp-0x30]
  40d36c:	vmovss DWORD PTR [rax],xmm0
  40d370:	mov    rax,QWORD PTR [rbp-0x10]
  40d374:	pop    rbp
  40d375:	ret    
  40d376:	push   rbp
  40d377:	mov    rbp,rsp
  40d37a:	mov    QWORD PTR [rbp-0x8],rdi
  40d37e:	mov    QWORD PTR [rbp-0x10],rsi
  40d382:	mov    QWORD PTR [rbp-0x18],rdx
  40d386:	mov    DWORD PTR [rbp-0x1c],ecx
  40d389:	mov    QWORD PTR [rbp-0x28],r8
  40d38d:	mov    QWORD PTR [rbp-0x30],r9
  40d391:	cmp    DWORD PTR [rbp-0x1c],0x0
  40d395:	je     40d3d2 <flatcc_emitter_copy_buffer@@Base+0xd87>
  40d397:	mov    rax,QWORD PTR [rbp-0x28]
  40d39b:	test   rax,rax
  40d39e:	js     40d3ab <flatcc_emitter_copy_buffer@@Base+0xd60>
  40d3a0:	vxorpd xmm0,xmm0,xmm0
  40d3a4:	vcvtsi2sd xmm0,xmm0,rax
  40d3a9:	jmp    40d3c4 <flatcc_emitter_copy_buffer@@Base+0xd79>
  40d3ab:	mov    rdx,rax
  40d3ae:	shr    rdx,1
  40d3b1:	and    eax,0x1
  40d3b4:	or     rdx,rax
  40d3b7:	vxorpd xmm0,xmm0,xmm0
  40d3bb:	vcvtsi2sd xmm0,xmm0,rdx
  40d3c0:	vaddsd xmm0,xmm0,xmm0
  40d3c4:	vmovsd xmm1,QWORD PTR [rip+0x9054]        # 416420 <flatcc_builder_padding_base@@Base+0x2080>
  40d3cc:	vxorpd xmm0,xmm0,xmm1
  40d3d0:	jmp    40d3ff <flatcc_emitter_copy_buffer@@Base+0xdb4>
  40d3d2:	mov    rax,QWORD PTR [rbp-0x28]
  40d3d6:	test   rax,rax
  40d3d9:	js     40d3e6 <flatcc_emitter_copy_buffer@@Base+0xd9b>
  40d3db:	vxorpd xmm0,xmm0,xmm0
  40d3df:	vcvtsi2sd xmm0,xmm0,rax
  40d3e4:	jmp    40d3ff <flatcc_emitter_copy_buffer@@Base+0xdb4>
  40d3e6:	mov    rdx,rax
  40d3e9:	shr    rdx,1
  40d3ec:	and    eax,0x1
  40d3ef:	or     rdx,rax
  40d3f2:	vxorpd xmm0,xmm0,xmm0
  40d3f6:	vcvtsi2sd xmm0,xmm0,rdx
  40d3fb:	vaddsd xmm0,xmm0,xmm0
  40d3ff:	mov    rax,QWORD PTR [rbp-0x30]
  40d403:	vmovsd QWORD PTR [rax],xmm0
  40d407:	mov    rax,QWORD PTR [rbp-0x10]
  40d40b:	pop    rbp
  40d40c:	ret    
  40d40d:	push   rbp
  40d40e:	mov    rbp,rsp
  40d411:	sub    rsp,0x40
  40d415:	mov    QWORD PTR [rbp-0x28],rdi
  40d419:	mov    QWORD PTR [rbp-0x30],rsi
  40d41d:	mov    QWORD PTR [rbp-0x38],rdx
  40d421:	mov    QWORD PTR [rbp-0x40],rcx
  40d425:	mov    rax,QWORD PTR fs:0x28
  40d42e:	mov    QWORD PTR [rbp-0x8],rax
  40d432:	xor    eax,eax
  40d434:	mov    QWORD PTR [rbp-0x18],0x0
  40d43c:	mov    DWORD PTR [rbp-0x1c],0x0
  40d443:	mov    rax,QWORD PTR [rbp-0x30]
  40d447:	mov    QWORD PTR [rbp-0x10],rax
  40d44b:	mov    rax,QWORD PTR [rbp-0x40]
  40d44f:	mov    BYTE PTR [rax],0x0
  40d452:	mov    rax,QWORD PTR [rbp-0x30]
  40d456:	cmp    rax,QWORD PTR [rbp-0x38]
  40d45a:	jne    40d462 <flatcc_emitter_copy_buffer@@Base+0xe17>
  40d45c:	mov    rax,QWORD PTR [rbp-0x30]
  40d460:	jmp    40d4ba <flatcc_emitter_copy_buffer@@Base+0xe6f>
  40d462:	lea    rdi,[rbp-0x18]
  40d466:	lea    rcx,[rbp-0x1c]
  40d46a:	mov    rdx,QWORD PTR [rbp-0x38]
  40d46e:	mov    rsi,QWORD PTR [rbp-0x30]
  40d472:	mov    rax,QWORD PTR [rbp-0x28]
  40d476:	mov    r8,rdi
  40d479:	mov    rdi,rax
  40d47c:	call   411e79 <flatcc_json_parser_integer@@Base>
  40d481:	mov    QWORD PTR [rbp-0x30],rax
  40d485:	mov    rax,QWORD PTR [rbp-0x30]
  40d489:	cmp    rax,QWORD PTR [rbp-0x10]
  40d48d:	je     40d4b6 <flatcc_emitter_copy_buffer@@Base+0xe6b>
  40d48f:	mov    rdi,QWORD PTR [rbp-0x18]
  40d493:	mov    ecx,DWORD PTR [rbp-0x1c]
  40d496:	mov    r8,QWORD PTR [rbp-0x40]
  40d49a:	mov    rdx,QWORD PTR [rbp-0x38]
  40d49e:	mov    rsi,QWORD PTR [rbp-0x30]
  40d4a2:	mov    rax,QWORD PTR [rbp-0x28]
  40d4a6:	mov    r9,r8
  40d4a9:	mov    r8,rdi
  40d4ac:	mov    rdi,rax
  40d4af:	call   40d01d <flatcc_emitter_copy_buffer@@Base+0x9d2>
  40d4b4:	jmp    40d4ba <flatcc_emitter_copy_buffer@@Base+0xe6f>
  40d4b6:	mov    rax,QWORD PTR [rbp-0x30]
  40d4ba:	mov    rdx,QWORD PTR [rbp-0x8]
  40d4be:	xor    rdx,QWORD PTR fs:0x28
  40d4c7:	je     40d4ce <flatcc_emitter_copy_buffer@@Base+0xe83>
  40d4c9:	call   403060 <__stack_chk_fail@plt>
  40d4ce:	leave  
  40d4cf:	ret    
  40d4d0:	push   rbp
  40d4d1:	mov    rbp,rsp
  40d4d4:	sub    rsp,0x70
  40d4d8:	mov    QWORD PTR [rbp-0x48],rdi
  40d4dc:	mov    QWORD PTR [rbp-0x50],rsi
  40d4e0:	mov    QWORD PTR [rbp-0x58],rdx
  40d4e4:	mov    QWORD PTR [rbp-0x60],rcx
  40d4e8:	mov    QWORD PTR [rbp-0x68],r8
  40d4ec:	mov    rax,QWORD PTR fs:0x28
  40d4f5:	mov    QWORD PTR [rbp-0x8],rax
  40d4f9:	xor    eax,eax
  40d4fb:	mov    QWORD PTR [rbp-0x28],0x0
  40d503:	mov    DWORD PTR [rbp-0x2c],0x0
  40d50a:	mov    rax,QWORD PTR [rbp-0x68]
  40d50e:	mov    QWORD PTR [rax],0x0
  40d515:	mov    rdx,QWORD PTR [rbp-0x58]
  40d519:	mov    rcx,QWORD PTR [rbp-0x50]
  40d51d:	mov    rax,QWORD PTR [rbp-0x48]
  40d521:	mov    rsi,rcx
  40d524:	mov    rdi,rax
  40d527:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40d52c:	mov    QWORD PTR [rbp-0x50],rax
  40d530:	mov    rax,QWORD PTR [rbp-0x50]
  40d534:	cmp    rax,QWORD PTR [rbp-0x58]
  40d538:	jne    40d543 <flatcc_emitter_copy_buffer@@Base+0xef8>
  40d53a:	mov    rax,QWORD PTR [rbp-0x50]
  40d53e:	jmp    40d656 <flatcc_emitter_copy_buffer@@Base+0x100b>
  40d543:	mov    rax,QWORD PTR [rbp-0x60]
  40d547:	mov    QWORD PTR [rbp-0x18],rax
  40d54b:	mov    rax,QWORD PTR [rbp-0x18]
  40d54f:	mov    rax,QWORD PTR [rax]
  40d552:	mov    rdx,QWORD PTR [rbp-0x50]
  40d556:	mov    QWORD PTR [rbp-0x10],rdx
  40d55a:	lea    r9,[rbp-0x30]
  40d55e:	lea    r8,[rbp-0x20]
  40d562:	lea    rcx,[rbp-0x34]
  40d566:	mov    rdx,QWORD PTR [rbp-0x58]
  40d56a:	mov    rsi,QWORD PTR [rbp-0x10]
  40d56e:	mov    rdi,QWORD PTR [rbp-0x48]
  40d572:	call   rax
  40d574:	mov    QWORD PTR [rbp-0x50],rax
  40d578:	mov    rax,QWORD PTR [rbp-0x50]
  40d57c:	cmp    rax,QWORD PTR [rbp-0x58]
  40d580:	jne    40d58b <flatcc_emitter_copy_buffer@@Base+0xf40>
  40d582:	mov    rax,QWORD PTR [rbp-0x50]
  40d586:	jmp    40d656 <flatcc_emitter_copy_buffer@@Base+0x100b>
  40d58b:	mov    rax,QWORD PTR [rbp-0x50]
  40d58f:	cmp    rax,QWORD PTR [rbp-0x10]
  40d593:	jne    40d5a6 <flatcc_emitter_copy_buffer@@Base+0xf5b>
  40d595:	add    QWORD PTR [rbp-0x18],0x8
  40d59a:	mov    rax,QWORD PTR [rbp-0x18]
  40d59e:	mov    rax,QWORD PTR [rax]
  40d5a1:	test   rax,rax
  40d5a4:	jne    40d54b <flatcc_emitter_copy_buffer@@Base+0xf00>
  40d5a6:	mov    rax,QWORD PTR [rbp-0x10]
  40d5aa:	cmp    rax,QWORD PTR [rbp-0x50]
  40d5ae:	jne    40d5ce <flatcc_emitter_copy_buffer@@Base+0xf83>
  40d5b0:	mov    rdx,QWORD PTR [rbp-0x58]
  40d5b4:	mov    rsi,QWORD PTR [rbp-0x50]
  40d5b8:	mov    rax,QWORD PTR [rbp-0x48]
  40d5bc:	mov    ecx,0x17
  40d5c1:	mov    rdi,rax
  40d5c4:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d5c9:	jmp    40d656 <flatcc_emitter_copy_buffer@@Base+0x100b>
  40d5ce:	mov    eax,DWORD PTR [rbp-0x2c]
  40d5d1:	lea    edx,[rax+0x1]
  40d5d4:	mov    DWORD PTR [rbp-0x2c],edx
  40d5d7:	test   eax,eax
  40d5d9:	je     40d601 <flatcc_emitter_copy_buffer@@Base+0xfb6>
  40d5db:	mov    rax,QWORD PTR [rbp-0x48]
  40d5df:	mov    eax,DWORD PTR [rax+0x14]
  40d5e2:	test   eax,eax
  40d5e4:	je     40d601 <flatcc_emitter_copy_buffer@@Base+0xfb6>
  40d5e6:	mov    rdx,QWORD PTR [rbp-0x58]
  40d5ea:	mov    rsi,QWORD PTR [rbp-0x50]
  40d5ee:	mov    rax,QWORD PTR [rbp-0x48]
  40d5f2:	mov    ecx,0xe
  40d5f7:	mov    rdi,rax
  40d5fa:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d5ff:	jmp    40d656 <flatcc_emitter_copy_buffer@@Base+0x100b>
  40d601:	mov    rdi,QWORD PTR [rbp-0x20]
  40d605:	mov    ecx,DWORD PTR [rbp-0x34]
  40d608:	lea    r8,[rbp-0x28]
  40d60c:	mov    rdx,QWORD PTR [rbp-0x58]
  40d610:	mov    rsi,QWORD PTR [rbp-0x50]
  40d614:	mov    rax,QWORD PTR [rbp-0x48]
  40d618:	mov    r9,r8
  40d61b:	mov    r8,rdi
  40d61e:	mov    rdi,rax
  40d621:	call   40ce86 <flatcc_emitter_copy_buffer@@Base+0x83b>
  40d626:	cmp    rax,QWORD PTR [rbp-0x58]
  40d62a:	jne    40d632 <flatcc_emitter_copy_buffer@@Base+0xfe7>
  40d62c:	mov    rax,QWORD PTR [rbp-0x58]
  40d630:	jmp    40d656 <flatcc_emitter_copy_buffer@@Base+0x100b>
  40d632:	mov    rax,QWORD PTR [rbp-0x68]
  40d636:	mov    rdx,QWORD PTR [rax]
  40d639:	mov    rax,QWORD PTR [rbp-0x28]
  40d63d:	add    rdx,rax
  40d640:	mov    rax,QWORD PTR [rbp-0x68]
  40d644:	mov    QWORD PTR [rax],rdx
  40d647:	mov    eax,DWORD PTR [rbp-0x30]
  40d64a:	test   eax,eax
  40d64c:	jne    40d543 <flatcc_emitter_copy_buffer@@Base+0xef8>
  40d652:	mov    rax,QWORD PTR [rbp-0x50]
  40d656:	mov    rdi,QWORD PTR [rbp-0x8]
  40d65a:	xor    rdi,QWORD PTR fs:0x28
  40d663:	je     40d66a <flatcc_emitter_copy_buffer@@Base+0x101f>
  40d665:	call   403060 <__stack_chk_fail@plt>
  40d66a:	leave  
  40d66b:	ret    
  40d66c:	push   rbp
  40d66d:	mov    rbp,rsp
  40d670:	sub    rsp,0x60
  40d674:	mov    QWORD PTR [rbp-0x38],rdi
  40d678:	mov    QWORD PTR [rbp-0x40],rsi
  40d67c:	mov    QWORD PTR [rbp-0x48],rdx
  40d680:	mov    QWORD PTR [rbp-0x50],rcx
  40d684:	mov    QWORD PTR [rbp-0x58],r8
  40d688:	mov    rax,QWORD PTR fs:0x28
  40d691:	mov    QWORD PTR [rbp-0x8],rax
  40d695:	xor    eax,eax
  40d697:	mov    DWORD PTR [rbp-0x30],0x0
  40d69e:	mov    DWORD PTR [rbp-0x24],0x0
  40d6a5:	mov    rax,QWORD PTR [rbp-0x58]
  40d6a9:	mov    DWORD PTR [rax],0x0
  40d6af:	mov    rdx,QWORD PTR [rbp-0x48]
  40d6b3:	mov    rcx,QWORD PTR [rbp-0x40]
  40d6b7:	mov    rax,QWORD PTR [rbp-0x38]
  40d6bb:	mov    rsi,rcx
  40d6be:	mov    rdi,rax
  40d6c1:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40d6c6:	mov    QWORD PTR [rbp-0x40],rax
  40d6ca:	mov    rax,QWORD PTR [rbp-0x40]
  40d6ce:	cmp    rax,QWORD PTR [rbp-0x48]
  40d6d2:	jne    40d6dd <flatcc_emitter_copy_buffer@@Base+0x1092>
  40d6d4:	mov    rax,QWORD PTR [rbp-0x40]
  40d6d8:	jmp    40d7ec <flatcc_emitter_copy_buffer@@Base+0x11a1>
  40d6dd:	mov    rax,QWORD PTR [rbp-0x50]
  40d6e1:	mov    QWORD PTR [rbp-0x18],rax
  40d6e5:	mov    rax,QWORD PTR [rbp-0x18]
  40d6e9:	mov    rax,QWORD PTR [rax]
  40d6ec:	mov    rdx,QWORD PTR [rbp-0x40]
  40d6f0:	mov    QWORD PTR [rbp-0x10],rdx
  40d6f4:	lea    r9,[rbp-0x28]
  40d6f8:	lea    r8,[rbp-0x20]
  40d6fc:	lea    rcx,[rbp-0x2c]
  40d700:	mov    rdx,QWORD PTR [rbp-0x48]
  40d704:	mov    rsi,QWORD PTR [rbp-0x10]
  40d708:	mov    rdi,QWORD PTR [rbp-0x38]
  40d70c:	call   rax
  40d70e:	mov    QWORD PTR [rbp-0x40],rax
  40d712:	mov    rax,QWORD PTR [rbp-0x40]
  40d716:	cmp    rax,QWORD PTR [rbp-0x48]
  40d71a:	jne    40d725 <flatcc_emitter_copy_buffer@@Base+0x10da>
  40d71c:	mov    rax,QWORD PTR [rbp-0x40]
  40d720:	jmp    40d7ec <flatcc_emitter_copy_buffer@@Base+0x11a1>
  40d725:	mov    rax,QWORD PTR [rbp-0x40]
  40d729:	cmp    rax,QWORD PTR [rbp-0x10]
  40d72d:	jne    40d740 <flatcc_emitter_copy_buffer@@Base+0x10f5>
  40d72f:	add    QWORD PTR [rbp-0x18],0x8
  40d734:	mov    rax,QWORD PTR [rbp-0x18]
  40d738:	mov    rax,QWORD PTR [rax]
  40d73b:	test   rax,rax
  40d73e:	jne    40d6e5 <flatcc_emitter_copy_buffer@@Base+0x109a>
  40d740:	mov    rax,QWORD PTR [rbp-0x10]
  40d744:	cmp    rax,QWORD PTR [rbp-0x40]
  40d748:	jne    40d768 <flatcc_emitter_copy_buffer@@Base+0x111d>
  40d74a:	mov    rdx,QWORD PTR [rbp-0x48]
  40d74e:	mov    rsi,QWORD PTR [rbp-0x40]
  40d752:	mov    rax,QWORD PTR [rbp-0x38]
  40d756:	mov    ecx,0x17
  40d75b:	mov    rdi,rax
  40d75e:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d763:	jmp    40d7ec <flatcc_emitter_copy_buffer@@Base+0x11a1>
  40d768:	mov    eax,DWORD PTR [rbp-0x24]
  40d76b:	lea    edx,[rax+0x1]
  40d76e:	mov    DWORD PTR [rbp-0x24],edx
  40d771:	test   eax,eax
  40d773:	je     40d79b <flatcc_emitter_copy_buffer@@Base+0x1150>
  40d775:	mov    rax,QWORD PTR [rbp-0x38]
  40d779:	mov    eax,DWORD PTR [rax+0x14]
  40d77c:	test   eax,eax
  40d77e:	je     40d79b <flatcc_emitter_copy_buffer@@Base+0x1150>
  40d780:	mov    rdx,QWORD PTR [rbp-0x48]
  40d784:	mov    rsi,QWORD PTR [rbp-0x40]
  40d788:	mov    rax,QWORD PTR [rbp-0x38]
  40d78c:	mov    ecx,0xe
  40d791:	mov    rdi,rax
  40d794:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d799:	jmp    40d7ec <flatcc_emitter_copy_buffer@@Base+0x11a1>
  40d79b:	mov    rdi,QWORD PTR [rbp-0x20]
  40d79f:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d7a2:	lea    r8,[rbp-0x30]
  40d7a6:	mov    rdx,QWORD PTR [rbp-0x48]
  40d7aa:	mov    rsi,QWORD PTR [rbp-0x40]
  40d7ae:	mov    rax,QWORD PTR [rbp-0x38]
  40d7b2:	mov    r9,r8
  40d7b5:	mov    r8,rdi
  40d7b8:	mov    rdi,rax
  40d7bb:	call   40cf2d <flatcc_emitter_copy_buffer@@Base+0x8e2>
  40d7c0:	cmp    rax,QWORD PTR [rbp-0x48]
  40d7c4:	jne    40d7cc <flatcc_emitter_copy_buffer@@Base+0x1181>
  40d7c6:	mov    rax,QWORD PTR [rbp-0x48]
  40d7ca:	jmp    40d7ec <flatcc_emitter_copy_buffer@@Base+0x11a1>
  40d7cc:	mov    rax,QWORD PTR [rbp-0x58]
  40d7d0:	mov    edx,DWORD PTR [rax]
  40d7d2:	mov    eax,DWORD PTR [rbp-0x30]
  40d7d5:	add    edx,eax
  40d7d7:	mov    rax,QWORD PTR [rbp-0x58]
  40d7db:	mov    DWORD PTR [rax],edx
  40d7dd:	mov    eax,DWORD PTR [rbp-0x28]
  40d7e0:	test   eax,eax
  40d7e2:	jne    40d6dd <flatcc_emitter_copy_buffer@@Base+0x1092>
  40d7e8:	mov    rax,QWORD PTR [rbp-0x40]
  40d7ec:	mov    rdi,QWORD PTR [rbp-0x8]
  40d7f0:	xor    rdi,QWORD PTR fs:0x28
  40d7f9:	je     40d800 <flatcc_emitter_copy_buffer@@Base+0x11b5>
  40d7fb:	call   403060 <__stack_chk_fail@plt>
  40d800:	leave  
  40d801:	ret    
  40d802:	push   rbp
  40d803:	mov    rbp,rsp
  40d806:	sub    rsp,0x60
  40d80a:	mov    QWORD PTR [rbp-0x38],rdi
  40d80e:	mov    QWORD PTR [rbp-0x40],rsi
  40d812:	mov    QWORD PTR [rbp-0x48],rdx
  40d816:	mov    QWORD PTR [rbp-0x50],rcx
  40d81a:	mov    QWORD PTR [rbp-0x58],r8
  40d81e:	mov    rax,QWORD PTR fs:0x28
  40d827:	mov    QWORD PTR [rbp-0x8],rax
  40d82b:	xor    eax,eax
  40d82d:	mov    WORD PTR [rbp-0x2e],0x0
  40d833:	mov    DWORD PTR [rbp-0x24],0x0
  40d83a:	mov    rax,QWORD PTR [rbp-0x58]
  40d83e:	mov    WORD PTR [rax],0x0
  40d843:	mov    rdx,QWORD PTR [rbp-0x48]
  40d847:	mov    rcx,QWORD PTR [rbp-0x40]
  40d84b:	mov    rax,QWORD PTR [rbp-0x38]
  40d84f:	mov    rsi,rcx
  40d852:	mov    rdi,rax
  40d855:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40d85a:	mov    QWORD PTR [rbp-0x40],rax
  40d85e:	mov    rax,QWORD PTR [rbp-0x40]
  40d862:	cmp    rax,QWORD PTR [rbp-0x48]
  40d866:	jne    40d871 <flatcc_emitter_copy_buffer@@Base+0x1226>
  40d868:	mov    rax,QWORD PTR [rbp-0x40]
  40d86c:	jmp    40d983 <flatcc_emitter_copy_buffer@@Base+0x1338>
  40d871:	mov    rax,QWORD PTR [rbp-0x50]
  40d875:	mov    QWORD PTR [rbp-0x18],rax
  40d879:	mov    rax,QWORD PTR [rbp-0x18]
  40d87d:	mov    rax,QWORD PTR [rax]
  40d880:	mov    rdx,QWORD PTR [rbp-0x40]
  40d884:	mov    QWORD PTR [rbp-0x10],rdx
  40d888:	lea    r9,[rbp-0x28]
  40d88c:	lea    r8,[rbp-0x20]
  40d890:	lea    rcx,[rbp-0x2c]
  40d894:	mov    rdx,QWORD PTR [rbp-0x48]
  40d898:	mov    rsi,QWORD PTR [rbp-0x10]
  40d89c:	mov    rdi,QWORD PTR [rbp-0x38]
  40d8a0:	call   rax
  40d8a2:	mov    QWORD PTR [rbp-0x40],rax
  40d8a6:	mov    rax,QWORD PTR [rbp-0x40]
  40d8aa:	cmp    rax,QWORD PTR [rbp-0x48]
  40d8ae:	jne    40d8b9 <flatcc_emitter_copy_buffer@@Base+0x126e>
  40d8b0:	mov    rax,QWORD PTR [rbp-0x40]
  40d8b4:	jmp    40d983 <flatcc_emitter_copy_buffer@@Base+0x1338>
  40d8b9:	mov    rax,QWORD PTR [rbp-0x40]
  40d8bd:	cmp    rax,QWORD PTR [rbp-0x10]
  40d8c1:	jne    40d8d4 <flatcc_emitter_copy_buffer@@Base+0x1289>
  40d8c3:	add    QWORD PTR [rbp-0x18],0x8
  40d8c8:	mov    rax,QWORD PTR [rbp-0x18]
  40d8cc:	mov    rax,QWORD PTR [rax]
  40d8cf:	test   rax,rax
  40d8d2:	jne    40d879 <flatcc_emitter_copy_buffer@@Base+0x122e>
  40d8d4:	mov    rax,QWORD PTR [rbp-0x10]
  40d8d8:	cmp    rax,QWORD PTR [rbp-0x40]
  40d8dc:	jne    40d8fc <flatcc_emitter_copy_buffer@@Base+0x12b1>
  40d8de:	mov    rdx,QWORD PTR [rbp-0x48]
  40d8e2:	mov    rsi,QWORD PTR [rbp-0x40]
  40d8e6:	mov    rax,QWORD PTR [rbp-0x38]
  40d8ea:	mov    ecx,0x17
  40d8ef:	mov    rdi,rax
  40d8f2:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d8f7:	jmp    40d983 <flatcc_emitter_copy_buffer@@Base+0x1338>
  40d8fc:	mov    eax,DWORD PTR [rbp-0x24]
  40d8ff:	lea    edx,[rax+0x1]
  40d902:	mov    DWORD PTR [rbp-0x24],edx
  40d905:	test   eax,eax
  40d907:	je     40d92f <flatcc_emitter_copy_buffer@@Base+0x12e4>
  40d909:	mov    rax,QWORD PTR [rbp-0x38]
  40d90d:	mov    eax,DWORD PTR [rax+0x14]
  40d910:	test   eax,eax
  40d912:	je     40d92f <flatcc_emitter_copy_buffer@@Base+0x12e4>
  40d914:	mov    rdx,QWORD PTR [rbp-0x48]
  40d918:	mov    rsi,QWORD PTR [rbp-0x40]
  40d91c:	mov    rax,QWORD PTR [rbp-0x38]
  40d920:	mov    ecx,0xe
  40d925:	mov    rdi,rax
  40d928:	call   410789 <flatcc_json_parser_set_error@@Base>
  40d92d:	jmp    40d983 <flatcc_emitter_copy_buffer@@Base+0x1338>
  40d92f:	mov    rdi,QWORD PTR [rbp-0x20]
  40d933:	mov    ecx,DWORD PTR [rbp-0x2c]
  40d936:	lea    r8,[rbp-0x2e]
  40d93a:	mov    rdx,QWORD PTR [rbp-0x48]
  40d93e:	mov    rsi,QWORD PTR [rbp-0x40]
  40d942:	mov    rax,QWORD PTR [rbp-0x38]
  40d946:	mov    r9,r8
  40d949:	mov    r8,rdi
  40d94c:	mov    rdi,rax
  40d94f:	call   40cfa5 <flatcc_emitter_copy_buffer@@Base+0x95a>
  40d954:	cmp    rax,QWORD PTR [rbp-0x48]
  40d958:	jne    40d960 <flatcc_emitter_copy_buffer@@Base+0x1315>
  40d95a:	mov    rax,QWORD PTR [rbp-0x48]
  40d95e:	jmp    40d983 <flatcc_emitter_copy_buffer@@Base+0x1338>
  40d960:	mov    rax,QWORD PTR [rbp-0x58]
  40d964:	movzx  edx,WORD PTR [rax]
  40d967:	movzx  eax,WORD PTR [rbp-0x2e]
  40d96b:	add    edx,eax
  40d96d:	mov    rax,QWORD PTR [rbp-0x58]
  40d971:	mov    WORD PTR [rax],dx
  40d974:	mov    eax,DWORD PTR [rbp-0x28]
  40d977:	test   eax,eax
  40d979:	jne    40d871 <flatcc_emitter_copy_buffer@@Base+0x1226>
  40d97f:	mov    rax,QWORD PTR [rbp-0x40]
  40d983:	mov    rdi,QWORD PTR [rbp-0x8]
  40d987:	xor    rdi,QWORD PTR fs:0x28
  40d990:	je     40d997 <flatcc_emitter_copy_buffer@@Base+0x134c>
  40d992:	call   403060 <__stack_chk_fail@plt>
  40d997:	leave  
  40d998:	ret    
  40d999:	push   rbp
  40d99a:	mov    rbp,rsp
  40d99d:	sub    rsp,0x60
  40d9a1:	mov    QWORD PTR [rbp-0x38],rdi
  40d9a5:	mov    QWORD PTR [rbp-0x40],rsi
  40d9a9:	mov    QWORD PTR [rbp-0x48],rdx
  40d9ad:	mov    QWORD PTR [rbp-0x50],rcx
  40d9b1:	mov    QWORD PTR [rbp-0x58],r8
  40d9b5:	mov    rax,QWORD PTR fs:0x28
  40d9be:	mov    QWORD PTR [rbp-0x8],rax
  40d9c2:	xor    eax,eax
  40d9c4:	mov    BYTE PTR [rbp-0x2d],0x0
  40d9c8:	mov    DWORD PTR [rbp-0x24],0x0
  40d9cf:	mov    rax,QWORD PTR [rbp-0x58]
  40d9d3:	mov    BYTE PTR [rax],0x0
  40d9d6:	mov    rdx,QWORD PTR [rbp-0x48]
  40d9da:	mov    rcx,QWORD PTR [rbp-0x40]
  40d9de:	mov    rax,QWORD PTR [rbp-0x38]
  40d9e2:	mov    rsi,rcx
  40d9e5:	mov    rdi,rax
  40d9e8:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40d9ed:	mov    QWORD PTR [rbp-0x40],rax
  40d9f1:	mov    rax,QWORD PTR [rbp-0x40]
  40d9f5:	cmp    rax,QWORD PTR [rbp-0x48]
  40d9f9:	jne    40da04 <flatcc_emitter_copy_buffer@@Base+0x13b9>
  40d9fb:	mov    rax,QWORD PTR [rbp-0x40]
  40d9ff:	jmp    40db15 <flatcc_emitter_copy_buffer@@Base+0x14ca>
  40da04:	mov    rax,QWORD PTR [rbp-0x50]
  40da08:	mov    QWORD PTR [rbp-0x18],rax
  40da0c:	mov    rax,QWORD PTR [rbp-0x18]
  40da10:	mov    rax,QWORD PTR [rax]
  40da13:	mov    rdx,QWORD PTR [rbp-0x40]
  40da17:	mov    QWORD PTR [rbp-0x10],rdx
  40da1b:	lea    r9,[rbp-0x28]
  40da1f:	lea    r8,[rbp-0x20]
  40da23:	lea    rcx,[rbp-0x2c]
  40da27:	mov    rdx,QWORD PTR [rbp-0x48]
  40da2b:	mov    rsi,QWORD PTR [rbp-0x10]
  40da2f:	mov    rdi,QWORD PTR [rbp-0x38]
  40da33:	call   rax
  40da35:	mov    QWORD PTR [rbp-0x40],rax
  40da39:	mov    rax,QWORD PTR [rbp-0x40]
  40da3d:	cmp    rax,QWORD PTR [rbp-0x48]
  40da41:	jne    40da4c <flatcc_emitter_copy_buffer@@Base+0x1401>
  40da43:	mov    rax,QWORD PTR [rbp-0x40]
  40da47:	jmp    40db15 <flatcc_emitter_copy_buffer@@Base+0x14ca>
  40da4c:	mov    rax,QWORD PTR [rbp-0x40]
  40da50:	cmp    rax,QWORD PTR [rbp-0x10]
  40da54:	jne    40da67 <flatcc_emitter_copy_buffer@@Base+0x141c>
  40da56:	add    QWORD PTR [rbp-0x18],0x8
  40da5b:	mov    rax,QWORD PTR [rbp-0x18]
  40da5f:	mov    rax,QWORD PTR [rax]
  40da62:	test   rax,rax
  40da65:	jne    40da0c <flatcc_emitter_copy_buffer@@Base+0x13c1>
  40da67:	mov    rax,QWORD PTR [rbp-0x10]
  40da6b:	cmp    rax,QWORD PTR [rbp-0x40]
  40da6f:	jne    40da8f <flatcc_emitter_copy_buffer@@Base+0x1444>
  40da71:	mov    rdx,QWORD PTR [rbp-0x48]
  40da75:	mov    rsi,QWORD PTR [rbp-0x40]
  40da79:	mov    rax,QWORD PTR [rbp-0x38]
  40da7d:	mov    ecx,0x17
  40da82:	mov    rdi,rax
  40da85:	call   410789 <flatcc_json_parser_set_error@@Base>
  40da8a:	jmp    40db15 <flatcc_emitter_copy_buffer@@Base+0x14ca>
  40da8f:	mov    eax,DWORD PTR [rbp-0x24]
  40da92:	lea    edx,[rax+0x1]
  40da95:	mov    DWORD PTR [rbp-0x24],edx
  40da98:	test   eax,eax
  40da9a:	je     40dac2 <flatcc_emitter_copy_buffer@@Base+0x1477>
  40da9c:	mov    rax,QWORD PTR [rbp-0x38]
  40daa0:	mov    eax,DWORD PTR [rax+0x14]
  40daa3:	test   eax,eax
  40daa5:	je     40dac2 <flatcc_emitter_copy_buffer@@Base+0x1477>
  40daa7:	mov    rdx,QWORD PTR [rbp-0x48]
  40daab:	mov    rsi,QWORD PTR [rbp-0x40]
  40daaf:	mov    rax,QWORD PTR [rbp-0x38]
  40dab3:	mov    ecx,0xe
  40dab8:	mov    rdi,rax
  40dabb:	call   410789 <flatcc_json_parser_set_error@@Base>
  40dac0:	jmp    40db15 <flatcc_emitter_copy_buffer@@Base+0x14ca>
  40dac2:	mov    rdi,QWORD PTR [rbp-0x20]
  40dac6:	mov    ecx,DWORD PTR [rbp-0x2c]
  40dac9:	lea    r8,[rbp-0x2d]
  40dacd:	mov    rdx,QWORD PTR [rbp-0x48]
  40dad1:	mov    rsi,QWORD PTR [rbp-0x40]
  40dad5:	mov    rax,QWORD PTR [rbp-0x38]
  40dad9:	mov    r9,r8
  40dadc:	mov    r8,rdi
  40dadf:	mov    rdi,rax
  40dae2:	call   40d01d <flatcc_emitter_copy_buffer@@Base+0x9d2>
  40dae7:	cmp    rax,QWORD PTR [rbp-0x48]
  40daeb:	jne    40daf3 <flatcc_emitter_copy_buffer@@Base+0x14a8>
  40daed:	mov    rax,QWORD PTR [rbp-0x48]
  40daf1:	jmp    40db15 <flatcc_emitter_copy_buffer@@Base+0x14ca>
  40daf3:	mov    rax,QWORD PTR [rbp-0x58]
  40daf7:	movzx  edx,BYTE PTR [rax]
  40dafa:	movzx  eax,BYTE PTR [rbp-0x2d]
  40dafe:	add    edx,eax
  40db00:	mov    rax,QWORD PTR [rbp-0x58]
  40db04:	mov    BYTE PTR [rax],dl
  40db06:	mov    eax,DWORD PTR [rbp-0x28]
  40db09:	test   eax,eax
  40db0b:	jne    40da04 <flatcc_emitter_copy_buffer@@Base+0x13b9>
  40db11:	mov    rax,QWORD PTR [rbp-0x40]
  40db15:	mov    rdi,QWORD PTR [rbp-0x8]
  40db19:	xor    rdi,QWORD PTR fs:0x28
  40db22:	je     40db29 <flatcc_emitter_copy_buffer@@Base+0x14de>
  40db24:	call   403060 <__stack_chk_fail@plt>
  40db29:	leave  
  40db2a:	ret    
  40db2b:	push   rbp
  40db2c:	mov    rbp,rsp
  40db2f:	sub    rsp,0x70
  40db33:	mov    QWORD PTR [rbp-0x48],rdi
  40db37:	mov    QWORD PTR [rbp-0x50],rsi
  40db3b:	mov    QWORD PTR [rbp-0x58],rdx
  40db3f:	mov    QWORD PTR [rbp-0x60],rcx
  40db43:	mov    QWORD PTR [rbp-0x68],r8
  40db47:	mov    rax,QWORD PTR fs:0x28
  40db50:	mov    QWORD PTR [rbp-0x8],rax
  40db54:	xor    eax,eax
  40db56:	mov    QWORD PTR [rbp-0x28],0x0
  40db5e:	mov    DWORD PTR [rbp-0x2c],0x0
  40db65:	mov    rax,QWORD PTR [rbp-0x68]
  40db69:	mov    QWORD PTR [rax],0x0
  40db70:	mov    rdx,QWORD PTR [rbp-0x58]
  40db74:	mov    rcx,QWORD PTR [rbp-0x50]
  40db78:	mov    rax,QWORD PTR [rbp-0x48]
  40db7c:	mov    rsi,rcx
  40db7f:	mov    rdi,rax
  40db82:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40db87:	mov    QWORD PTR [rbp-0x50],rax
  40db8b:	mov    rax,QWORD PTR [rbp-0x50]
  40db8f:	cmp    rax,QWORD PTR [rbp-0x58]
  40db93:	jne    40db9e <flatcc_emitter_copy_buffer@@Base+0x1553>
  40db95:	mov    rax,QWORD PTR [rbp-0x50]
  40db99:	jmp    40dcb1 <flatcc_emitter_copy_buffer@@Base+0x1666>
  40db9e:	mov    rax,QWORD PTR [rbp-0x60]
  40dba2:	mov    QWORD PTR [rbp-0x18],rax
  40dba6:	mov    rax,QWORD PTR [rbp-0x18]
  40dbaa:	mov    rax,QWORD PTR [rax]
  40dbad:	mov    rdx,QWORD PTR [rbp-0x50]
  40dbb1:	mov    QWORD PTR [rbp-0x10],rdx
  40dbb5:	lea    r9,[rbp-0x30]
  40dbb9:	lea    r8,[rbp-0x20]
  40dbbd:	lea    rcx,[rbp-0x34]
  40dbc1:	mov    rdx,QWORD PTR [rbp-0x58]
  40dbc5:	mov    rsi,QWORD PTR [rbp-0x10]
  40dbc9:	mov    rdi,QWORD PTR [rbp-0x48]
  40dbcd:	call   rax
  40dbcf:	mov    QWORD PTR [rbp-0x50],rax
  40dbd3:	mov    rax,QWORD PTR [rbp-0x50]
  40dbd7:	cmp    rax,QWORD PTR [rbp-0x58]
  40dbdb:	jne    40dbe6 <flatcc_emitter_copy_buffer@@Base+0x159b>
  40dbdd:	mov    rax,QWORD PTR [rbp-0x50]
  40dbe1:	jmp    40dcb1 <flatcc_emitter_copy_buffer@@Base+0x1666>
  40dbe6:	mov    rax,QWORD PTR [rbp-0x50]
  40dbea:	cmp    rax,QWORD PTR [rbp-0x10]
  40dbee:	jne    40dc01 <flatcc_emitter_copy_buffer@@Base+0x15b6>
  40dbf0:	add    QWORD PTR [rbp-0x18],0x8
  40dbf5:	mov    rax,QWORD PTR [rbp-0x18]
  40dbf9:	mov    rax,QWORD PTR [rax]
  40dbfc:	test   rax,rax
  40dbff:	jne    40dba6 <flatcc_emitter_copy_buffer@@Base+0x155b>
  40dc01:	mov    rax,QWORD PTR [rbp-0x10]
  40dc05:	cmp    rax,QWORD PTR [rbp-0x50]
  40dc09:	jne    40dc29 <flatcc_emitter_copy_buffer@@Base+0x15de>
  40dc0b:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc0f:	mov    rsi,QWORD PTR [rbp-0x50]
  40dc13:	mov    rax,QWORD PTR [rbp-0x48]
  40dc17:	mov    ecx,0x17
  40dc1c:	mov    rdi,rax
  40dc1f:	call   410789 <flatcc_json_parser_set_error@@Base>
  40dc24:	jmp    40dcb1 <flatcc_emitter_copy_buffer@@Base+0x1666>
  40dc29:	mov    eax,DWORD PTR [rbp-0x2c]
  40dc2c:	lea    edx,[rax+0x1]
  40dc2f:	mov    DWORD PTR [rbp-0x2c],edx
  40dc32:	test   eax,eax
  40dc34:	je     40dc5c <flatcc_emitter_copy_buffer@@Base+0x1611>
  40dc36:	mov    rax,QWORD PTR [rbp-0x48]
  40dc3a:	mov    eax,DWORD PTR [rax+0x14]
  40dc3d:	test   eax,eax
  40dc3f:	je     40dc5c <flatcc_emitter_copy_buffer@@Base+0x1611>
  40dc41:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc45:	mov    rsi,QWORD PTR [rbp-0x50]
  40dc49:	mov    rax,QWORD PTR [rbp-0x48]
  40dc4d:	mov    ecx,0xe
  40dc52:	mov    rdi,rax
  40dc55:	call   410789 <flatcc_json_parser_set_error@@Base>
  40dc5a:	jmp    40dcb1 <flatcc_emitter_copy_buffer@@Base+0x1666>
  40dc5c:	mov    rdi,QWORD PTR [rbp-0x20]
  40dc60:	mov    ecx,DWORD PTR [rbp-0x34]
  40dc63:	lea    r8,[rbp-0x28]
  40dc67:	mov    rdx,QWORD PTR [rbp-0x58]
  40dc6b:	mov    rsi,QWORD PTR [rbp-0x50]
  40dc6f:	mov    rax,QWORD PTR [rbp-0x48]
  40dc73:	mov    r9,r8
  40dc76:	mov    r8,rdi
  40dc79:	mov    rdi,rax
  40dc7c:	call   40d094 <flatcc_emitter_copy_buffer@@Base+0xa49>
  40dc81:	cmp    rax,QWORD PTR [rbp-0x58]
  40dc85:	jne    40dc8d <flatcc_emitter_copy_buffer@@Base+0x1642>
  40dc87:	mov    rax,QWORD PTR [rbp-0x58]
  40dc8b:	jmp    40dcb1 <flatcc_emitter_copy_buffer@@Base+0x1666>
  40dc8d:	mov    rax,QWORD PTR [rbp-0x68]
  40dc91:	mov    rdx,QWORD PTR [rax]
  40dc94:	mov    rax,QWORD PTR [rbp-0x28]
  40dc98:	add    rdx,rax
  40dc9b:	mov    rax,QWORD PTR [rbp-0x68]
  40dc9f:	mov    QWORD PTR [rax],rdx
  40dca2:	mov    eax,DWORD PTR [rbp-0x30]
  40dca5:	test   eax,eax
  40dca7:	jne    40db9e <flatcc_emitter_copy_buffer@@Base+0x1553>
  40dcad:	mov    rax,QWORD PTR [rbp-0x50]
  40dcb1:	mov    rdi,QWORD PTR [rbp-0x8]
  40dcb5:	xor    rdi,QWORD PTR fs:0x28
  40dcbe:	je     40dcc5 <flatcc_emitter_copy_buffer@@Base+0x167a>
  40dcc0:	call   403060 <__stack_chk_fail@plt>
  40dcc5:	leave  
  40dcc6:	ret    
  40dcc7:	push   rbp
  40dcc8:	mov    rbp,rsp
  40dccb:	sub    rsp,0x60
  40dccf:	mov    QWORD PTR [rbp-0x38],rdi
  40dcd3:	mov    QWORD PTR [rbp-0x40],rsi
  40dcd7:	mov    QWORD PTR [rbp-0x48],rdx
  40dcdb:	mov    QWORD PTR [rbp-0x50],rcx
  40dcdf:	mov    QWORD PTR [rbp-0x58],r8
  40dce3:	mov    rax,QWORD PTR fs:0x28
  40dcec:	mov    QWORD PTR [rbp-0x8],rax
  40dcf0:	xor    eax,eax
  40dcf2:	mov    DWORD PTR [rbp-0x30],0x0
  40dcf9:	mov    DWORD PTR [rbp-0x24],0x0
  40dd00:	mov    rax,QWORD PTR [rbp-0x58]
  40dd04:	mov    DWORD PTR [rax],0x0
  40dd0a:	mov    rdx,QWORD PTR [rbp-0x48]
  40dd0e:	mov    rcx,QWORD PTR [rbp-0x40]
  40dd12:	mov    rax,QWORD PTR [rbp-0x38]
  40dd16:	mov    rsi,rcx
  40dd19:	mov    rdi,rax
  40dd1c:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40dd21:	mov    QWORD PTR [rbp-0x40],rax
  40dd25:	mov    rax,QWORD PTR [rbp-0x40]
  40dd29:	cmp    rax,QWORD PTR [rbp-0x48]
  40dd2d:	jne    40dd38 <flatcc_emitter_copy_buffer@@Base+0x16ed>
  40dd2f:	mov    rax,QWORD PTR [rbp-0x40]
  40dd33:	jmp    40de47 <flatcc_emitter_copy_buffer@@Base+0x17fc>
  40dd38:	mov    rax,QWORD PTR [rbp-0x50]
  40dd3c:	mov    QWORD PTR [rbp-0x18],rax
  40dd40:	mov    rax,QWORD PTR [rbp-0x18]
  40dd44:	mov    rax,QWORD PTR [rax]
  40dd47:	mov    rdx,QWORD PTR [rbp-0x40]
  40dd4b:	mov    QWORD PTR [rbp-0x10],rdx
  40dd4f:	lea    r9,[rbp-0x28]
  40dd53:	lea    r8,[rbp-0x20]
  40dd57:	lea    rcx,[rbp-0x2c]
  40dd5b:	mov    rdx,QWORD PTR [rbp-0x48]
  40dd5f:	mov    rsi,QWORD PTR [rbp-0x10]
  40dd63:	mov    rdi,QWORD PTR [rbp-0x38]
  40dd67:	call   rax
  40dd69:	mov    QWORD PTR [rbp-0x40],rax
  40dd6d:	mov    rax,QWORD PTR [rbp-0x40]
  40dd71:	cmp    rax,QWORD PTR [rbp-0x48]
  40dd75:	jne    40dd80 <flatcc_emitter_copy_buffer@@Base+0x1735>
  40dd77:	mov    rax,QWORD PTR [rbp-0x40]
  40dd7b:	jmp    40de47 <flatcc_emitter_copy_buffer@@Base+0x17fc>
  40dd80:	mov    rax,QWORD PTR [rbp-0x40]
  40dd84:	cmp    rax,QWORD PTR [rbp-0x10]
  40dd88:	jne    40dd9b <flatcc_emitter_copy_buffer@@Base+0x1750>
  40dd8a:	add    QWORD PTR [rbp-0x18],0x8
  40dd8f:	mov    rax,QWORD PTR [rbp-0x18]
  40dd93:	mov    rax,QWORD PTR [rax]
  40dd96:	test   rax,rax
  40dd99:	jne    40dd40 <flatcc_emitter_copy_buffer@@Base+0x16f5>
  40dd9b:	mov    rax,QWORD PTR [rbp-0x10]
  40dd9f:	cmp    rax,QWORD PTR [rbp-0x40]
  40dda3:	jne    40ddc3 <flatcc_emitter_copy_buffer@@Base+0x1778>
  40dda5:	mov    rdx,QWORD PTR [rbp-0x48]
  40dda9:	mov    rsi,QWORD PTR [rbp-0x40]
  40ddad:	mov    rax,QWORD PTR [rbp-0x38]
  40ddb1:	mov    ecx,0x17
  40ddb6:	mov    rdi,rax
  40ddb9:	call   410789 <flatcc_json_parser_set_error@@Base>
  40ddbe:	jmp    40de47 <flatcc_emitter_copy_buffer@@Base+0x17fc>
  40ddc3:	mov    eax,DWORD PTR [rbp-0x24]
  40ddc6:	lea    edx,[rax+0x1]
  40ddc9:	mov    DWORD PTR [rbp-0x24],edx
  40ddcc:	test   eax,eax
  40ddce:	je     40ddf6 <flatcc_emitter_copy_buffer@@Base+0x17ab>
  40ddd0:	mov    rax,QWORD PTR [rbp-0x38]
  40ddd4:	mov    eax,DWORD PTR [rax+0x14]
  40ddd7:	test   eax,eax
  40ddd9:	je     40ddf6 <flatcc_emitter_copy_buffer@@Base+0x17ab>
  40dddb:	mov    rdx,QWORD PTR [rbp-0x48]
  40dddf:	mov    rsi,QWORD PTR [rbp-0x40]
  40dde3:	mov    rax,QWORD PTR [rbp-0x38]
  40dde7:	mov    ecx,0xe
  40ddec:	mov    rdi,rax
  40ddef:	call   410789 <flatcc_json_parser_set_error@@Base>
  40ddf4:	jmp    40de47 <flatcc_emitter_copy_buffer@@Base+0x17fc>
  40ddf6:	mov    rdi,QWORD PTR [rbp-0x20]
  40ddfa:	mov    ecx,DWORD PTR [rbp-0x2c]
  40ddfd:	lea    r8,[rbp-0x30]
  40de01:	mov    rdx,QWORD PTR [rbp-0x48]
  40de05:	mov    rsi,QWORD PTR [rbp-0x40]
  40de09:	mov    rax,QWORD PTR [rbp-0x38]
  40de0d:	mov    r9,r8
  40de10:	mov    r8,rdi
  40de13:	mov    rdi,rax
  40de16:	call   40d12c <flatcc_emitter_copy_buffer@@Base+0xae1>
  40de1b:	cmp    rax,QWORD PTR [rbp-0x48]
  40de1f:	jne    40de27 <flatcc_emitter_copy_buffer@@Base+0x17dc>
  40de21:	mov    rax,QWORD PTR [rbp-0x48]
  40de25:	jmp    40de47 <flatcc_emitter_copy_buffer@@Base+0x17fc>
  40de27:	mov    rax,QWORD PTR [rbp-0x58]
  40de2b:	mov    edx,DWORD PTR [rax]
  40de2d:	mov    eax,DWORD PTR [rbp-0x30]
  40de30:	add    edx,eax
  40de32:	mov    rax,QWORD PTR [rbp-0x58]
  40de36:	mov    DWORD PTR [rax],edx
  40de38:	mov    eax,DWORD PTR [rbp-0x28]
  40de3b:	test   eax,eax
  40de3d:	jne    40dd38 <flatcc_emitter_copy_buffer@@Base+0x16ed>
  40de43:	mov    rax,QWORD PTR [rbp-0x40]
  40de47:	mov    rdi,QWORD PTR [rbp-0x8]
  40de4b:	xor    rdi,QWORD PTR fs:0x28
  40de54:	je     40de5b <flatcc_emitter_copy_buffer@@Base+0x1810>
  40de56:	call   403060 <__stack_chk_fail@plt>
  40de5b:	leave  
  40de5c:	ret    
  40de5d:	push   rbp
  40de5e:	mov    rbp,rsp
  40de61:	sub    rsp,0x60
  40de65:	mov    QWORD PTR [rbp-0x38],rdi
  40de69:	mov    QWORD PTR [rbp-0x40],rsi
  40de6d:	mov    QWORD PTR [rbp-0x48],rdx
  40de71:	mov    QWORD PTR [rbp-0x50],rcx
  40de75:	mov    QWORD PTR [rbp-0x58],r8
  40de79:	mov    rax,QWORD PTR fs:0x28
  40de82:	mov    QWORD PTR [rbp-0x8],rax
  40de86:	xor    eax,eax
  40de88:	mov    WORD PTR [rbp-0x2e],0x0
  40de8e:	mov    DWORD PTR [rbp-0x24],0x0
  40de95:	mov    rax,QWORD PTR [rbp-0x58]
  40de99:	mov    WORD PTR [rax],0x0
  40de9e:	mov    rdx,QWORD PTR [rbp-0x48]
  40dea2:	mov    rcx,QWORD PTR [rbp-0x40]
  40dea6:	mov    rax,QWORD PTR [rbp-0x38]
  40deaa:	mov    rsi,rcx
  40dead:	mov    rdi,rax
  40deb0:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40deb5:	mov    QWORD PTR [rbp-0x40],rax
  40deb9:	mov    rax,QWORD PTR [rbp-0x40]
  40debd:	cmp    rax,QWORD PTR [rbp-0x48]
  40dec1:	jne    40decc <flatcc_emitter_copy_buffer@@Base+0x1881>
  40dec3:	mov    rax,QWORD PTR [rbp-0x40]
  40dec7:	jmp    40dfe2 <flatcc_emitter_copy_buffer@@Base+0x1997>
  40decc:	mov    rax,QWORD PTR [rbp-0x50]
  40ded0:	mov    QWORD PTR [rbp-0x18],rax
  40ded4:	mov    rax,QWORD PTR [rbp-0x18]
  40ded8:	mov    rax,QWORD PTR [rax]
  40dedb:	mov    rdx,QWORD PTR [rbp-0x40]
  40dedf:	mov    QWORD PTR [rbp-0x10],rdx
  40dee3:	lea    r9,[rbp-0x28]
  40dee7:	lea    r8,[rbp-0x20]
  40deeb:	lea    rcx,[rbp-0x2c]
  40deef:	mov    rdx,QWORD PTR [rbp-0x48]
  40def3:	mov    rsi,QWORD PTR [rbp-0x10]
  40def7:	mov    rdi,QWORD PTR [rbp-0x38]
  40defb:	call   rax
  40defd:	mov    QWORD PTR [rbp-0x40],rax
  40df01:	mov    rax,QWORD PTR [rbp-0x40]
  40df05:	cmp    rax,QWORD PTR [rbp-0x48]
  40df09:	jne    40df14 <flatcc_emitter_copy_buffer@@Base+0x18c9>
  40df0b:	mov    rax,QWORD PTR [rbp-0x40]
  40df0f:	jmp    40dfe2 <flatcc_emitter_copy_buffer@@Base+0x1997>
  40df14:	mov    rax,QWORD PTR [rbp-0x40]
  40df18:	cmp    rax,QWORD PTR [rbp-0x10]
  40df1c:	jne    40df2f <flatcc_emitter_copy_buffer@@Base+0x18e4>
  40df1e:	add    QWORD PTR [rbp-0x18],0x8
  40df23:	mov    rax,QWORD PTR [rbp-0x18]
  40df27:	mov    rax,QWORD PTR [rax]
  40df2a:	test   rax,rax
  40df2d:	jne    40ded4 <flatcc_emitter_copy_buffer@@Base+0x1889>
  40df2f:	mov    rax,QWORD PTR [rbp-0x10]
  40df33:	cmp    rax,QWORD PTR [rbp-0x40]
  40df37:	jne    40df57 <flatcc_emitter_copy_buffer@@Base+0x190c>
  40df39:	mov    rdx,QWORD PTR [rbp-0x48]
  40df3d:	mov    rsi,QWORD PTR [rbp-0x40]
  40df41:	mov    rax,QWORD PTR [rbp-0x38]
  40df45:	mov    ecx,0x17
  40df4a:	mov    rdi,rax
  40df4d:	call   410789 <flatcc_json_parser_set_error@@Base>
  40df52:	jmp    40dfe2 <flatcc_emitter_copy_buffer@@Base+0x1997>
  40df57:	mov    eax,DWORD PTR [rbp-0x24]
  40df5a:	lea    edx,[rax+0x1]
  40df5d:	mov    DWORD PTR [rbp-0x24],edx
  40df60:	test   eax,eax
  40df62:	je     40df8a <flatcc_emitter_copy_buffer@@Base+0x193f>
  40df64:	mov    rax,QWORD PTR [rbp-0x38]
  40df68:	mov    eax,DWORD PTR [rax+0x14]
  40df6b:	test   eax,eax
  40df6d:	je     40df8a <flatcc_emitter_copy_buffer@@Base+0x193f>
  40df6f:	mov    rdx,QWORD PTR [rbp-0x48]
  40df73:	mov    rsi,QWORD PTR [rbp-0x40]
  40df77:	mov    rax,QWORD PTR [rbp-0x38]
  40df7b:	mov    ecx,0xe
  40df80:	mov    rdi,rax
  40df83:	call   410789 <flatcc_json_parser_set_error@@Base>
  40df88:	jmp    40dfe2 <flatcc_emitter_copy_buffer@@Base+0x1997>
  40df8a:	mov    rdi,QWORD PTR [rbp-0x20]
  40df8e:	mov    ecx,DWORD PTR [rbp-0x2c]
  40df91:	lea    r8,[rbp-0x2e]
  40df95:	mov    rdx,QWORD PTR [rbp-0x48]
  40df99:	mov    rsi,QWORD PTR [rbp-0x40]
  40df9d:	mov    rax,QWORD PTR [rbp-0x38]
  40dfa1:	mov    r9,r8
  40dfa4:	mov    r8,rdi
  40dfa7:	mov    rdi,rax
  40dfaa:	call   40d1be <flatcc_emitter_copy_buffer@@Base+0xb73>
  40dfaf:	cmp    rax,QWORD PTR [rbp-0x48]
  40dfb3:	jne    40dfbb <flatcc_emitter_copy_buffer@@Base+0x1970>
  40dfb5:	mov    rax,QWORD PTR [rbp-0x48]
  40dfb9:	jmp    40dfe2 <flatcc_emitter_copy_buffer@@Base+0x1997>
  40dfbb:	mov    rax,QWORD PTR [rbp-0x58]
  40dfbf:	movzx  eax,WORD PTR [rax]
  40dfc2:	mov    edx,eax
  40dfc4:	movzx  eax,WORD PTR [rbp-0x2e]
  40dfc8:	add    eax,edx
  40dfca:	mov    edx,eax
  40dfcc:	mov    rax,QWORD PTR [rbp-0x58]
  40dfd0:	mov    WORD PTR [rax],dx
  40dfd3:	mov    eax,DWORD PTR [rbp-0x28]
  40dfd6:	test   eax,eax
  40dfd8:	jne    40decc <flatcc_emitter_copy_buffer@@Base+0x1881>
  40dfde:	mov    rax,QWORD PTR [rbp-0x40]
  40dfe2:	mov    rdi,QWORD PTR [rbp-0x8]
  40dfe6:	xor    rdi,QWORD PTR fs:0x28
  40dfef:	je     40dff6 <flatcc_emitter_copy_buffer@@Base+0x19ab>
  40dff1:	call   403060 <__stack_chk_fail@plt>
  40dff6:	leave  
  40dff7:	ret    
  40dff8:	push   rbp
  40dff9:	mov    rbp,rsp
  40dffc:	sub    rsp,0x60
  40e000:	mov    QWORD PTR [rbp-0x38],rdi
  40e004:	mov    QWORD PTR [rbp-0x40],rsi
  40e008:	mov    QWORD PTR [rbp-0x48],rdx
  40e00c:	mov    QWORD PTR [rbp-0x50],rcx
  40e010:	mov    QWORD PTR [rbp-0x58],r8
  40e014:	mov    rax,QWORD PTR fs:0x28
  40e01d:	mov    QWORD PTR [rbp-0x8],rax
  40e021:	xor    eax,eax
  40e023:	mov    BYTE PTR [rbp-0x2d],0x0
  40e027:	mov    DWORD PTR [rbp-0x24],0x0
  40e02e:	mov    rax,QWORD PTR [rbp-0x58]
  40e032:	mov    BYTE PTR [rax],0x0
  40e035:	mov    rdx,QWORD PTR [rbp-0x48]
  40e039:	mov    rcx,QWORD PTR [rbp-0x40]
  40e03d:	mov    rax,QWORD PTR [rbp-0x38]
  40e041:	mov    rsi,rcx
  40e044:	mov    rdi,rax
  40e047:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40e04c:	mov    QWORD PTR [rbp-0x40],rax
  40e050:	mov    rax,QWORD PTR [rbp-0x40]
  40e054:	cmp    rax,QWORD PTR [rbp-0x48]
  40e058:	jne    40e063 <flatcc_emitter_copy_buffer@@Base+0x1a18>
  40e05a:	mov    rax,QWORD PTR [rbp-0x40]
  40e05e:	jmp    40e178 <flatcc_emitter_copy_buffer@@Base+0x1b2d>
  40e063:	mov    rax,QWORD PTR [rbp-0x50]
  40e067:	mov    QWORD PTR [rbp-0x18],rax
  40e06b:	mov    rax,QWORD PTR [rbp-0x18]
  40e06f:	mov    rax,QWORD PTR [rax]
  40e072:	mov    rdx,QWORD PTR [rbp-0x40]
  40e076:	mov    QWORD PTR [rbp-0x10],rdx
  40e07a:	lea    r9,[rbp-0x28]
  40e07e:	lea    r8,[rbp-0x20]
  40e082:	lea    rcx,[rbp-0x2c]
  40e086:	mov    rdx,QWORD PTR [rbp-0x48]
  40e08a:	mov    rsi,QWORD PTR [rbp-0x10]
  40e08e:	mov    rdi,QWORD PTR [rbp-0x38]
  40e092:	call   rax
  40e094:	mov    QWORD PTR [rbp-0x40],rax
  40e098:	mov    rax,QWORD PTR [rbp-0x40]
  40e09c:	cmp    rax,QWORD PTR [rbp-0x48]
  40e0a0:	jne    40e0ab <flatcc_emitter_copy_buffer@@Base+0x1a60>
  40e0a2:	mov    rax,QWORD PTR [rbp-0x40]
  40e0a6:	jmp    40e178 <flatcc_emitter_copy_buffer@@Base+0x1b2d>
  40e0ab:	mov    rax,QWORD PTR [rbp-0x40]
  40e0af:	cmp    rax,QWORD PTR [rbp-0x10]
  40e0b3:	jne    40e0c6 <flatcc_emitter_copy_buffer@@Base+0x1a7b>
  40e0b5:	add    QWORD PTR [rbp-0x18],0x8
  40e0ba:	mov    rax,QWORD PTR [rbp-0x18]
  40e0be:	mov    rax,QWORD PTR [rax]
  40e0c1:	test   rax,rax
  40e0c4:	jne    40e06b <flatcc_emitter_copy_buffer@@Base+0x1a20>
  40e0c6:	mov    rax,QWORD PTR [rbp-0x10]
  40e0ca:	cmp    rax,QWORD PTR [rbp-0x40]
  40e0ce:	jne    40e0ee <flatcc_emitter_copy_buffer@@Base+0x1aa3>
  40e0d0:	mov    rdx,QWORD PTR [rbp-0x48]
  40e0d4:	mov    rsi,QWORD PTR [rbp-0x40]
  40e0d8:	mov    rax,QWORD PTR [rbp-0x38]
  40e0dc:	mov    ecx,0x17
  40e0e1:	mov    rdi,rax
  40e0e4:	call   410789 <flatcc_json_parser_set_error@@Base>
  40e0e9:	jmp    40e178 <flatcc_emitter_copy_buffer@@Base+0x1b2d>
  40e0ee:	mov    eax,DWORD PTR [rbp-0x24]
  40e0f1:	lea    edx,[rax+0x1]
  40e0f4:	mov    DWORD PTR [rbp-0x24],edx
  40e0f7:	test   eax,eax
  40e0f9:	je     40e121 <flatcc_emitter_copy_buffer@@Base+0x1ad6>
  40e0fb:	mov    rax,QWORD PTR [rbp-0x38]
  40e0ff:	mov    eax,DWORD PTR [rax+0x14]
  40e102:	test   eax,eax
  40e104:	je     40e121 <flatcc_emitter_copy_buffer@@Base+0x1ad6>
  40e106:	mov    rdx,QWORD PTR [rbp-0x48]
  40e10a:	mov    rsi,QWORD PTR [rbp-0x40]
  40e10e:	mov    rax,QWORD PTR [rbp-0x38]
  40e112:	mov    ecx,0xe
  40e117:	mov    rdi,rax
  40e11a:	call   410789 <flatcc_json_parser_set_error@@Base>
  40e11f:	jmp    40e178 <flatcc_emitter_copy_buffer@@Base+0x1b2d>
  40e121:	mov    rdi,QWORD PTR [rbp-0x20]
  40e125:	mov    ecx,DWORD PTR [rbp-0x2c]
  40e128:	lea    r8,[rbp-0x2d]
  40e12c:	mov    rdx,QWORD PTR [rbp-0x48]
  40e130:	mov    rsi,QWORD PTR [rbp-0x40]
  40e134:	mov    rax,QWORD PTR [rbp-0x38]
  40e138:	mov    r9,r8
  40e13b:	mov    r8,rdi
  40e13e:	mov    rdi,rax
  40e141:	call   40d251 <flatcc_emitter_copy_buffer@@Base+0xc06>
  40e146:	cmp    rax,QWORD PTR [rbp-0x48]
  40e14a:	jne    40e152 <flatcc_emitter_copy_buffer@@Base+0x1b07>
  40e14c:	mov    rax,QWORD PTR [rbp-0x48]
  40e150:	jmp    40e178 <flatcc_emitter_copy_buffer@@Base+0x1b2d>
  40e152:	mov    rax,QWORD PTR [rbp-0x58]
  40e156:	movzx  eax,BYTE PTR [rax]
  40e159:	mov    edx,eax
  40e15b:	movzx  eax,BYTE PTR [rbp-0x2d]
  40e15f:	add    eax,edx
  40e161:	mov    edx,eax
  40e163:	mov    rax,QWORD PTR [rbp-0x58]
  40e167:	mov    BYTE PTR [rax],dl
  40e169:	mov    eax,DWORD PTR [rbp-0x28]
  40e16c:	test   eax,eax
  40e16e:	jne    40e063 <flatcc_emitter_copy_buffer@@Base+0x1a18>
  40e174:	mov    rax,QWORD PTR [rbp-0x40]
  40e178:	mov    rdi,QWORD PTR [rbp-0x8]
  40e17c:	xor    rdi,QWORD PTR fs:0x28
  40e185:	je     40e18c <flatcc_emitter_copy_buffer@@Base+0x1b41>
  40e187:	call   403060 <__stack_chk_fail@plt>
  40e18c:	leave  
  40e18d:	ret    
  40e18e:	push   rbp
  40e18f:	mov    rbp,rsp
  40e192:	sub    rsp,0x60
  40e196:	mov    QWORD PTR [rbp-0x38],rdi
  40e19a:	mov    QWORD PTR [rbp-0x40],rsi
  40e19e:	mov    QWORD PTR [rbp-0x48],rdx
  40e1a2:	mov    QWORD PTR [rbp-0x50],rcx
  40e1a6:	mov    QWORD PTR [rbp-0x58],r8
  40e1aa:	mov    rax,QWORD PTR fs:0x28
  40e1b3:	mov    QWORD PTR [rbp-0x8],rax
  40e1b7:	xor    eax,eax
  40e1b9:	mov    BYTE PTR [rbp-0x2d],0x0
  40e1bd:	mov    DWORD PTR [rbp-0x24],0x0
  40e1c4:	mov    rax,QWORD PTR [rbp-0x58]
  40e1c8:	mov    BYTE PTR [rax],0x0
  40e1cb:	mov    rdx,QWORD PTR [rbp-0x48]
  40e1cf:	mov    rcx,QWORD PTR [rbp-0x40]
  40e1d3:	mov    rax,QWORD PTR [rbp-0x38]
  40e1d7:	mov    rsi,rcx
  40e1da:	mov    rdi,rax
  40e1dd:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40e1e2:	mov    QWORD PTR [rbp-0x40],rax
  40e1e6:	mov    rax,QWORD PTR [rbp-0x40]
  40e1ea:	cmp    rax,QWORD PTR [rbp-0x48]
  40e1ee:	jne    40e1f9 <flatcc_emitter_copy_buffer@@Base+0x1bae>
  40e1f0:	mov    rax,QWORD PTR [rbp-0x40]
  40e1f4:	jmp    40e30a <flatcc_emitter_copy_buffer@@Base+0x1cbf>
  40e1f9:	mov    rax,QWORD PTR [rbp-0x50]
  40e1fd:	mov    QWORD PTR [rbp-0x18],rax
  40e201:	mov    rax,QWORD PTR [rbp-0x18]
  40e205:	mov    rax,QWORD PTR [rax]
  40e208:	mov    rdx,QWORD PTR [rbp-0x40]
  40e20c:	mov    QWORD PTR [rbp-0x10],rdx
  40e210:	lea    r9,[rbp-0x28]
  40e214:	lea    r8,[rbp-0x20]
  40e218:	lea    rcx,[rbp-0x2c]
  40e21c:	mov    rdx,QWORD PTR [rbp-0x48]
  40e220:	mov    rsi,QWORD PTR [rbp-0x10]
  40e224:	mov    rdi,QWORD PTR [rbp-0x38]
  40e228:	call   rax
  40e22a:	mov    QWORD PTR [rbp-0x40],rax
  40e22e:	mov    rax,QWORD PTR [rbp-0x40]
  40e232:	cmp    rax,QWORD PTR [rbp-0x48]
  40e236:	jne    40e241 <flatcc_emitter_copy_buffer@@Base+0x1bf6>
  40e238:	mov    rax,QWORD PTR [rbp-0x40]
  40e23c:	jmp    40e30a <flatcc_emitter_copy_buffer@@Base+0x1cbf>
  40e241:	mov    rax,QWORD PTR [rbp-0x40]
  40e245:	cmp    rax,QWORD PTR [rbp-0x10]
  40e249:	jne    40e25c <flatcc_emitter_copy_buffer@@Base+0x1c11>
  40e24b:	add    QWORD PTR [rbp-0x18],0x8
  40e250:	mov    rax,QWORD PTR [rbp-0x18]
  40e254:	mov    rax,QWORD PTR [rax]
  40e257:	test   rax,rax
  40e25a:	jne    40e201 <flatcc_emitter_copy_buffer@@Base+0x1bb6>
  40e25c:	mov    rax,QWORD PTR [rbp-0x10]
  40e260:	cmp    rax,QWORD PTR [rbp-0x40]
  40e264:	jne    40e284 <flatcc_emitter_copy_buffer@@Base+0x1c39>
  40e266:	mov    rdx,QWORD PTR [rbp-0x48]
  40e26a:	mov    rsi,QWORD PTR [rbp-0x40]
  40e26e:	mov    rax,QWORD PTR [rbp-0x38]
  40e272:	mov    ecx,0x17
  40e277:	mov    rdi,rax
  40e27a:	call   410789 <flatcc_json_parser_set_error@@Base>
  40e27f:	jmp    40e30a <flatcc_emitter_copy_buffer@@Base+0x1cbf>
  40e284:	mov    eax,DWORD PTR [rbp-0x24]
  40e287:	lea    edx,[rax+0x1]
  40e28a:	mov    DWORD PTR [rbp-0x24],edx
  40e28d:	test   eax,eax
  40e28f:	je     40e2b7 <flatcc_emitter_copy_buffer@@Base+0x1c6c>
  40e291:	mov    rax,QWORD PTR [rbp-0x38]
  40e295:	mov    eax,DWORD PTR [rax+0x14]
  40e298:	test   eax,eax
  40e29a:	je     40e2b7 <flatcc_emitter_copy_buffer@@Base+0x1c6c>
  40e29c:	mov    rdx,QWORD PTR [rbp-0x48]
  40e2a0:	mov    rsi,QWORD PTR [rbp-0x40]
  40e2a4:	mov    rax,QWORD PTR [rbp-0x38]
  40e2a8:	mov    ecx,0xe
  40e2ad:	mov    rdi,rax
  40e2b0:	call   410789 <flatcc_json_parser_set_error@@Base>
  40e2b5:	jmp    40e30a <flatcc_emitter_copy_buffer@@Base+0x1cbf>
  40e2b7:	mov    rdi,QWORD PTR [rbp-0x20]
  40e2bb:	mov    ecx,DWORD PTR [rbp-0x2c]
  40e2be:	lea    r8,[rbp-0x2d]
  40e2c2:	mov    rdx,QWORD PTR [rbp-0x48]
  40e2c6:	mov    rsi,QWORD PTR [rbp-0x40]
  40e2ca:	mov    rax,QWORD PTR [rbp-0x38]
  40e2ce:	mov    r9,r8
  40e2d1:	mov    r8,rdi
  40e2d4:	mov    rdi,rax
  40e2d7:	call   40ced7 <flatcc_emitter_copy_buffer@@Base+0x88c>
  40e2dc:	cmp    rax,QWORD PTR [rbp-0x48]
  40e2e0:	jne    40e2e8 <flatcc_emitter_copy_buffer@@Base+0x1c9d>
  40e2e2:	mov    rax,QWORD PTR [rbp-0x48]
  40e2e6:	jmp    40e30a <flatcc_emitter_copy_buffer@@Base+0x1cbf>
  40e2e8:	mov    rax,QWORD PTR [rbp-0x58]
  40e2ec:	movzx  edx,BYTE PTR [rax]
  40e2ef:	movzx  eax,BYTE PTR [rbp-0x2d]
  40e2f3:	add    edx,eax
  40e2f5:	mov    rax,QWORD PTR [rbp-0x58]
  40e2f9:	mov    BYTE PTR [rax],dl
  40e2fb:	mov    eax,DWORD PTR [rbp-0x28]
  40e2fe:	test   eax,eax
  40e300:	jne    40e1f9 <flatcc_emitter_copy_buffer@@Base+0x1bae>
  40e306:	mov    rax,QWORD PTR [rbp-0x40]
  40e30a:	mov    rdi,QWORD PTR [rbp-0x8]
  40e30e:	xor    rdi,QWORD PTR fs:0x28
  40e317:	je     40e31e <flatcc_emitter_copy_buffer@@Base+0x1cd3>
  40e319:	call   403060 <__stack_chk_fail@plt>
  40e31e:	leave  
  40e31f:	ret    
  40e320:	push   rbp
  40e321:	mov    rbp,rsp
  40e324:	sub    rsp,0x60
  40e328:	mov    QWORD PTR [rbp-0x38],rdi
  40e32c:	mov    QWORD PTR [rbp-0x40],rsi
  40e330:	mov    QWORD PTR [rbp-0x48],rdx
  40e334:	mov    QWORD PTR [rbp-0x50],rcx
  40e338:	mov    QWORD PTR [rbp-0x58],r8
  40e33c:	mov    rax,QWORD PTR fs:0x28
  40e345:	mov    QWORD PTR [rbp-0x8],rax
  40e349:	xor    eax,eax
  40e34b:	vxorps xmm0,xmm0,xmm0
  40e34f:	vmovss DWORD PTR [rbp-0x30],xmm0
  40e354:	mov    DWORD PTR [rbp-0x24],0x0
  40e35b:	mov    rax,QWORD PTR [rbp-0x58]
  40e35f:	vxorps xmm0,xmm0,xmm0
  40e363:	vmovss DWORD PTR [rax],xmm0
  40e367:	mov    rdx,QWORD PTR [rbp-0x48]
  40e36b:	mov    rcx,QWORD PTR [rbp-0x40]
  40e36f:	mov    rax,QWORD PTR [rbp-0x38]
  40e373:	mov    rsi,rcx
  40e376:	mov    rdi,rax
  40e379:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40e37e:	mov    QWORD PTR [rbp-0x40],rax
  40e382:	mov    rax,QWORD PTR [rbp-0x40]
  40e386:	cmp    rax,QWORD PTR [rbp-0x48]
  40e38a:	jne    40e395 <flatcc_emitter_copy_buffer@@Base+0x1d4a>
  40e38c:	mov    rax,QWORD PTR [rbp-0x40]
  40e390:	jmp    40e4ac <flatcc_emitter_copy_buffer@@Base+0x1e61>
  40e395:	mov    rax,QWORD PTR [rbp-0x50]
  40e399:	mov    QWORD PTR [rbp-0x18],rax
  40e39d:	mov    rax,QWORD PTR [rbp-0x18]
  40e3a1:	mov    rax,QWORD PTR [rax]
  40e3a4:	mov    rdx,QWORD PTR [rbp-0x40]
  40e3a8:	mov    QWORD PTR [rbp-0x10],rdx
  40e3ac:	lea    r9,[rbp-0x28]
  40e3b0:	lea    r8,[rbp-0x20]
  40e3b4:	lea    rcx,[rbp-0x2c]
  40e3b8:	mov    rdx,QWORD PTR [rbp-0x48]
  40e3bc:	mov    rsi,QWORD PTR [rbp-0x10]
  40e3c0:	mov    rdi,QWORD PTR [rbp-0x38]
  40e3c4:	call   rax
  40e3c6:	mov    QWORD PTR [rbp-0x40],rax
  40e3ca:	mov    rax,QWORD PTR [rbp-0x40]
  40e3ce:	cmp    rax,QWORD PTR [rbp-0x48]
  40e3d2:	jne    40e3dd <flatcc_emitter_copy_buffer@@Base+0x1d92>
  40e3d4:	mov    rax,QWORD PTR [rbp-0x40]
  40e3d8:	jmp    40e4ac <flatcc_emitter_copy_buffer@@Base+0x1e61>
  40e3dd:	mov    rax,QWORD PTR [rbp-0x40]
  40e3e1:	cmp    rax,QWORD PTR [rbp-0x10]
  40e3e5:	jne    40e3f8 <flatcc_emitter_copy_buffer@@Base+0x1dad>
  40e3e7:	add    QWORD PTR [rbp-0x18],0x8
  40e3ec:	mov    rax,QWORD PTR [rbp-0x18]
  40e3f0:	mov    rax,QWORD PTR [rax]
  40e3f3:	test   rax,rax
  40e3f6:	jne    40e39d <flatcc_emitter_copy_buffer@@Base+0x1d52>
  40e3f8:	mov    rax,QWORD PTR [rbp-0x10]
  40e3fc:	cmp    rax,QWORD PTR [rbp-0x40]
  40e400:	jne    40e420 <flatcc_emitter_copy_buffer@@Base+0x1dd5>
  40e402:	mov    rdx,QWORD PTR [rbp-0x48]
  40e406:	mov    rsi,QWORD PTR [rbp-0x40]
  40e40a:	mov    rax,QWORD PTR [rbp-0x38]
  40e40e:	mov    ecx,0x17
  40e413:	mov    rdi,rax
  40e416:	call   410789 <flatcc_json_parser_set_error@@Base>
  40e41b:	jmp    40e4ac <flatcc_emitter_copy_buffer@@Base+0x1e61>
  40e420:	mov    eax,DWORD PTR [rbp-0x24]
  40e423:	lea    edx,[rax+0x1]
  40e426:	mov    DWORD PTR [rbp-0x24],edx
  40e429:	test   eax,eax
  40e42b:	je     40e453 <flatcc_emitter_copy_buffer@@Base+0x1e08>
  40e42d:	mov    rax,QWORD PTR [rbp-0x38]
  40e431:	mov    eax,DWORD PTR [rax+0x14]
  40e434:	test   eax,eax
  40e436:	je     40e453 <flatcc_emitter_copy_buffer@@Base+0x1e08>
  40e438:	mov    rdx,QWORD PTR [rbp-0x48]
  40e43c:	mov    rsi,QWORD PTR [rbp-0x40]
  40e440:	mov    rax,QWORD PTR [rbp-0x38]
  40e444:	mov    ecx,0xe
  40e449:	mov    rdi,rax
  40e44c:	call   410789 <flatcc_json_parser_set_error@@Base>
  40e451:	jmp    40e4ac <flatcc_emitter_copy_buffer@@Base+0x1e61>
  40e453:	mov    rdi,QWORD PTR [rbp-0x20]
  40e457:	mov    ecx,DWORD PTR [rbp-0x2c]
  40e45a:	lea    r8,[rbp-0x30]
  40e45e:	mov    rdx,QWORD PTR [rbp-0x48]
  40e462:	mov    rsi,QWORD PTR [rbp-0x40]
  40e466:	mov    rax,QWORD PTR [rbp-0x38]
  40e46a:	mov    r9,r8
  40e46d:	mov    r8,rdi
  40e470:	mov    rdi,rax
  40e473:	call   40d2df <flatcc_emitter_copy_buffer@@Base+0xc94>
  40e478:	cmp    rax,QWORD PTR [rbp-0x48]
  40e47c:	jne    40e484 <flatcc_emitter_copy_buffer@@Base+0x1e39>
  40e47e:	mov    rax,QWORD PTR [rbp-0x48]
  40e482:	jmp    40e4ac <flatcc_emitter_copy_buffer@@Base+0x1e61>
  40e484:	mov    rax,QWORD PTR [rbp-0x58]
  40e488:	vmovss xmm1,DWORD PTR [rax]
  40e48c:	vmovss xmm0,DWORD PTR [rbp-0x30]
  40e491:	vaddss xmm0,xmm1,xmm0
  40e495:	mov    rax,QWORD PTR [rbp-0x58]
  40e499:	vmovss DWORD PTR [rax],xmm0
  40e49d:	mov    eax,DWORD PTR [rbp-0x28]
  40e4a0:	test   eax,eax
  40e4a2:	jne    40e395 <flatcc_emitter_copy_buffer@@Base+0x1d4a>
  40e4a8:	mov    rax,QWORD PTR [rbp-0x40]
  40e4ac:	mov    rdi,QWORD PTR [rbp-0x8]
  40e4b0:	xor    rdi,QWORD PTR fs:0x28
  40e4b9:	je     40e4c0 <flatcc_emitter_copy_buffer@@Base+0x1e75>
  40e4bb:	call   403060 <__stack_chk_fail@plt>
  40e4c0:	leave  
  40e4c1:	ret    
  40e4c2:	push   rbp
  40e4c3:	mov    rbp,rsp
  40e4c6:	sub    rsp,0x70
  40e4ca:	mov    QWORD PTR [rbp-0x48],rdi
  40e4ce:	mov    QWORD PTR [rbp-0x50],rsi
  40e4d2:	mov    QWORD PTR [rbp-0x58],rdx
  40e4d6:	mov    QWORD PTR [rbp-0x60],rcx
  40e4da:	mov    QWORD PTR [rbp-0x68],r8
  40e4de:	mov    rax,QWORD PTR fs:0x28
  40e4e7:	mov    QWORD PTR [rbp-0x8],rax
  40e4eb:	xor    eax,eax
  40e4ed:	vxorpd xmm0,xmm0,xmm0
  40e4f1:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40e4f6:	mov    DWORD PTR [rbp-0x2c],0x0
  40e4fd:	mov    rax,QWORD PTR [rbp-0x68]
  40e501:	vxorpd xmm0,xmm0,xmm0
  40e505:	vmovsd QWORD PTR [rax],xmm0
  40e509:	mov    rdx,QWORD PTR [rbp-0x58]
  40e50d:	mov    rcx,QWORD PTR [rbp-0x50]
  40e511:	mov    rax,QWORD PTR [rbp-0x48]
  40e515:	mov    rsi,rcx
  40e518:	mov    rdi,rax
  40e51b:	call   40caf2 <flatcc_emitter_copy_buffer@@Base+0x4a7>
  40e520:	mov    QWORD PTR [rbp-0x50],rax
  40e524:	mov    rax,QWORD PTR [rbp-0x50]
  40e528:	cmp    rax,QWORD PTR [rbp-0x58]
  40e52c:	jne    40e537 <flatcc_emitter_copy_buffer@@Base+0x1eec>
  40e52e:	mov    rax,QWORD PTR [rbp-0x50]
  40e532:	jmp    40e64e <flatcc_emitter_copy_buffer@@Base+0x2003>
  40e537:	mov    rax,QWORD PTR [rbp-0x60]
  40e53b:	mov    QWORD PTR [rbp-0x18],rax
  40e53f:	mov    rax,QWORD PTR [rbp-0x18]
  40e543:	mov    rax,QWORD PTR [rax]
  40e546:	mov    rdx,QWORD PTR [rbp-0x50]
  40e54a:	mov    QWORD PTR [rbp-0x10],rdx
  40e54e:	lea    r9,[rbp-0x30]
  40e552:	lea    r8,[rbp-0x20]
  40e556:	lea    rcx,[rbp-0x34]
  40e55a:	mov    rdx,QWORD PTR [rbp-0x58]
  40e55e:	mov    rsi,QWORD PTR [rbp-0x10]
  40e562:	mov    rdi,QWORD PTR [rbp-0x48]
  40e566:	call   rax
  40e568:	mov    QWORD PTR [rbp-0x50],rax
  40e56c:	mov    rax,QWORD PTR [rbp-0x50]
  40e570:	cmp    rax,QWORD PTR [rbp-0x58]
  40e574:	jne    40e57f <flatcc_emitter_copy_buffer@@Base+0x1f34>
  40e576:	mov    rax,QWORD PTR [rbp-0x50]
  40e57a:	jmp    40e64e <flatcc_emitter_copy_buffer@@Base+0x2003>
  40e57f:	mov    rax,QWORD PTR [rbp-0x50]
  40e583:	cmp    rax,QWORD PTR [rbp-0x10]
  40e587:	jne    40e59a <flatcc_emitter_copy_buffer@@Base+0x1f4f>
  40e589:	add    QWORD PTR [rbp-0x18],0x8
  40e58e:	mov    rax,QWORD PTR [rbp-0x18]
  40e592:	mov    rax,QWORD PTR [rax]
  40e595:	test   rax,rax
  40e598:	jne    40e53f <flatcc_emitter_copy_buffer@@Base+0x1ef4>
  40e59a:	mov    rax,QWORD PTR [rbp-0x10]
  40e59e:	cmp    rax,QWORD PTR [rbp-0x50]
  40e5a2:	jne    40e5c2 <flatcc_emitter_copy_buffer@@Base+0x1f77>
  40e5a4:	mov    rdx,QWORD PTR [rbp-0x58]
  40e5a8:	mov    rsi,QWORD PTR [rbp-0x50]
  40e5ac:	mov    rax,QWORD PTR [rbp-0x48]
  40e5b0:	mov    ecx,0x17
  40e5b5:	mov    rdi,rax
  40e5b8:	call   410789 <flatcc_json_parser_set_error@@Base>
  40e5bd:	jmp    40e64e <flatcc_emitter_copy_buffer@@Base+0x2003>
  40e5c2:	mov    eax,DWORD PTR [rbp-0x2c]
  40e5c5:	lea    edx,[rax+0x1]
  40e5c8:	mov    DWORD PTR [rbp-0x2c],edx
  40e5cb:	test   eax,eax
  40e5cd:	je     40e5f5 <flatcc_emitter_copy_buffer@@Base+0x1faa>
  40e5cf:	mov    rax,QWORD PTR [rbp-0x48]
  40e5d3:	mov    eax,DWORD PTR [rax+0x14]
  40e5d6:	test   eax,eax
  40e5d8:	je     40e5f5 <flatcc_emitter_copy_buffer@@Base+0x1faa>
  40e5da:	mov    rdx,QWORD PTR [rbp-0x58]
  40e5de:	mov    rsi,QWORD PTR [rbp-0x50]
  40e5e2:	mov    rax,QWORD PTR [rbp-0x48]
  40e5e6:	mov    ecx,0xe
  40e5eb:	mov    rdi,rax
  40e5ee:	call   410789 <flatcc_json_parser_set_error@@Base>
  40e5f3:	jmp    40e64e <flatcc_emitter_copy_buffer@@Base+0x2003>
  40e5f5:	mov    rdi,QWORD PTR [rbp-0x20]
  40e5f9:	mov    ecx,DWORD PTR [rbp-0x34]
  40e5fc:	lea    r8,[rbp-0x28]
  40e600:	mov    rdx,QWORD PTR [rbp-0x58]
  40e604:	mov    rsi,QWORD PTR [rbp-0x50]
  40e608:	mov    rax,QWORD PTR [rbp-0x48]
  40e60c:	mov    r9,r8
  40e60f:	mov    r8,rdi
  40e612:	mov    rdi,rax
  40e615:	call   40d376 <flatcc_emitter_copy_buffer@@Base+0xd2b>
  40e61a:	cmp    rax,QWORD PTR [rbp-0x58]
  40e61e:	jne    40e626 <flatcc_emitter_copy_buffer@@Base+0x1fdb>
  40e620:	mov    rax,QWORD PTR [rbp-0x58]
  40e624:	jmp    40e64e <flatcc_emitter_copy_buffer@@Base+0x2003>
  40e626:	mov    rax,QWORD PTR [rbp-0x68]
  40e62a:	vmovsd xmm1,QWORD PTR [rax]
  40e62e:	vmovsd xmm0,QWORD PTR [rbp-0x28]
  40e633:	vaddsd xmm0,xmm1,xmm0
  40e637:	mov    rax,QWORD PTR [rbp-0x68]
  40e63b:	vmovsd QWORD PTR [rax],xmm0
  40e63f:	mov    eax,DWORD PTR [rbp-0x30]
  40e642:	test   eax,eax
  40e644:	jne    40e537 <flatcc_emitter_copy_buffer@@Base+0x1eec>
  40e64a:	mov    rax,QWORD PTR [rbp-0x50]
  40e64e:	mov    rdi,QWORD PTR [rbp-0x8]
  40e652:	xor    rdi,QWORD PTR fs:0x28
  40e65b:	je     40e662 <flatcc_emitter_copy_buffer@@Base+0x2017>
  40e65d:	call   403060 <__stack_chk_fail@plt>
  40e662:	leave  
  40e663:	ret    
  40e664:	push   rbp
  40e665:	mov    rbp,rsp
  40e668:	vmovsd QWORD PTR [rbp-0x18],xmm0
  40e66d:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40e672:	vmovsd QWORD PTR [rbp-0x8],xmm0
  40e677:	mov    rax,QWORD PTR [rbp-0x8]
  40e67b:	pop    rbp
  40e67c:	ret    
  40e67d:	push   rbp
  40e67e:	mov    rbp,rsp
  40e681:	mov    QWORD PTR [rbp-0x18],rdi
  40e685:	mov    rax,QWORD PTR [rbp-0x18]
  40e689:	mov    QWORD PTR [rbp-0x8],rax
  40e68d:	vmovsd xmm0,QWORD PTR [rbp-0x8]
  40e692:	pop    rbp
  40e693:	ret    
  40e694:	push   rbp
  40e695:	mov    rbp,rsp
  40e698:	vmovsd QWORD PTR [rbp-0x18],xmm0
  40e69d:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40e6a2:	vcvttsd2si eax,xmm0
  40e6a6:	mov    DWORD PTR [rbp-0x4],eax
  40e6a9:	vxorpd xmm0,xmm0,xmm0
  40e6ad:	vucomisd xmm0,QWORD PTR [rbp-0x18]
  40e6b2:	jbe    40e6b9 <flatcc_emitter_copy_buffer@@Base+0x206e>
  40e6b4:	mov    eax,DWORD PTR [rbp-0x4]
  40e6b7:	jmp    40e6ea <flatcc_emitter_copy_buffer@@Base+0x209f>
  40e6b9:	vxorpd xmm0,xmm0,xmm0
  40e6bd:	vcvtsi2sd xmm0,xmm0,DWORD PTR [rbp-0x4]
  40e6c2:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  40e6c7:	vsubsd xmm0,xmm1,xmm0
  40e6cb:	vxorpd xmm1,xmm1,xmm1
  40e6cf:	vucomisd xmm0,xmm1
  40e6d3:	jp     40e6df <flatcc_emitter_copy_buffer@@Base+0x2094>
  40e6d5:	vxorpd xmm1,xmm1,xmm1
  40e6d9:	vucomisd xmm0,xmm1
  40e6dd:	je     40e6e7 <flatcc_emitter_copy_buffer@@Base+0x209c>
  40e6df:	mov    eax,DWORD PTR [rbp-0x4]
  40e6e2:	add    eax,0x1
  40e6e5:	jmp    40e6ea <flatcc_emitter_copy_buffer@@Base+0x209f>
  40e6e7:	mov    eax,DWORD PTR [rbp-0x4]
  40e6ea:	pop    rbp
  40e6eb:	ret    
  40e6ec:	push   rbp
  40e6ed:	mov    rbp,rsp
  40e6f0:	sub    rsp,0x20
  40e6f4:	mov    DWORD PTR [rbp-0x14],edi
  40e6f7:	mov    QWORD PTR [rbp-0x20],rsi
  40e6fb:	mov    eax,DWORD PTR [rbp-0x14]
  40e6fe:	add    eax,0x3f
  40e701:	vxorpd xmm0,xmm0,xmm0
  40e705:	vcvtsi2sd xmm0,xmm0,eax
  40e709:	vmovsd xmm1,QWORD PTR [rip+0x7d27]        # 416438 <flatcc_builder_padding_base@@Base+0x2098>
  40e711:	vmulsd xmm0,xmm0,xmm1
  40e715:	call   40e694 <flatcc_emitter_copy_buffer@@Base+0x2049>
  40e71a:	mov    DWORD PTR [rbp-0x8],eax
  40e71d:	mov    eax,DWORD PTR [rbp-0x8]
  40e720:	add    eax,0x15b
  40e725:	lea    edx,[rax+0x7]
  40e728:	test   eax,eax
  40e72a:	cmovs  eax,edx
  40e72d:	sar    eax,0x3
  40e730:	add    eax,0x1
  40e733:	mov    DWORD PTR [rbp-0x4],eax
  40e736:	mov    eax,DWORD PTR [rbp-0x4]
  40e739:	cdqe   
  40e73b:	shl    rax,0x4
  40e73f:	mov    rdx,rax
  40e742:	lea    rax,[rip+0x69b7]        # 415100 <flatcc_builder_padding_base@@Base+0xd60>
  40e749:	mov    rdx,QWORD PTR [rdx+rax*1]
  40e74d:	mov    rax,QWORD PTR [rbp-0x20]
  40e751:	mov    QWORD PTR [rax],rdx
  40e754:	mov    eax,DWORD PTR [rbp-0x4]
  40e757:	cdqe   
  40e759:	shl    rax,0x4
  40e75d:	mov    rdx,rax
  40e760:	lea    rax,[rip+0x69a1]        # 415108 <flatcc_builder_padding_base@@Base+0xd68>
  40e767:	movzx  eax,WORD PTR [rdx+rax*1]
  40e76b:	movsx  edx,ax
  40e76e:	mov    rax,QWORD PTR [rbp-0x20]
  40e772:	mov    DWORD PTR [rax+0x8],edx
  40e775:	mov    eax,DWORD PTR [rbp-0x4]
  40e778:	cdqe   
  40e77a:	shl    rax,0x4
  40e77e:	mov    rdx,rax
  40e781:	lea    rax,[rip+0x6982]        # 41510a <flatcc_builder_padding_base@@Base+0xd6a>
  40e788:	movzx  eax,WORD PTR [rdx+rax*1]
  40e78c:	cwde   
  40e78d:	leave  
  40e78e:	ret    
  40e78f:	push   rbp
  40e790:	mov    rbp,rsp
  40e793:	sub    rsp,0x30
  40e797:	mov    rax,rdi
  40e79a:	mov    r8,rsi
  40e79d:	mov    rsi,rax
  40e7a0:	mov    rdi,rdx
  40e7a3:	mov    rdi,r8
  40e7a6:	mov    QWORD PTR [rbp-0x20],rsi
  40e7aa:	mov    QWORD PTR [rbp-0x18],rdi
  40e7ae:	mov    QWORD PTR [rbp-0x30],rdx
  40e7b2:	mov    QWORD PTR [rbp-0x28],rcx
  40e7b6:	mov    rdx,QWORD PTR [rbp-0x20]
  40e7ba:	mov    rax,QWORD PTR [rbp-0x30]
  40e7be:	sub    rdx,rax
  40e7c1:	mov    rax,rdx
  40e7c4:	mov    QWORD PTR [rbp-0x10],rax
  40e7c8:	mov    eax,DWORD PTR [rbp-0x18]
  40e7cb:	mov    DWORD PTR [rbp-0x8],eax
  40e7ce:	mov    edx,DWORD PTR [rbp-0x18]
  40e7d1:	mov    eax,DWORD PTR [rbp-0x28]
  40e7d4:	cmp    edx,eax
  40e7d6:	jne    40e7e5 <flatcc_emitter_copy_buffer@@Base+0x219a>
  40e7d8:	mov    rdx,QWORD PTR [rbp-0x20]
  40e7dc:	mov    rax,QWORD PTR [rbp-0x30]
  40e7e0:	cmp    rdx,rax
  40e7e3:	jae    40e804 <flatcc_emitter_copy_buffer@@Base+0x21b9>
  40e7e5:	lea    rcx,[rip+0x7724]        # 415f10 <flatcc_builder_padding_base@@Base+0x1b70>
  40e7ec:	mov    edx,0xef
  40e7f1:	lea    rsi,[rip+0x6e78]        # 415670 <flatcc_builder_padding_base@@Base+0x12d0>
  40e7f8:	lea    rdi,[rip+0x6ee1]        # 4156e0 <flatcc_builder_padding_base@@Base+0x1340>
  40e7ff:	call   403070 <__assert_fail@plt>
  40e804:	mov    rax,QWORD PTR [rbp-0x10]
  40e808:	mov    rdx,QWORD PTR [rbp-0x8]
  40e80c:	leave  
  40e80d:	ret    
  40e80e:	push   rbp
  40e80f:	mov    rbp,rsp
  40e812:	sub    rsp,0x8
  40e816:	mov    rax,rdi
  40e819:	mov    r8,rsi
  40e81c:	mov    rsi,rax
  40e81f:	mov    rdi,rdx
  40e822:	mov    rdi,r8
  40e825:	mov    QWORD PTR [rbp-0x70],rsi
  40e829:	mov    QWORD PTR [rbp-0x68],rdi
  40e82d:	mov    QWORD PTR [rbp-0x80],rdx
  40e831:	mov    QWORD PTR [rbp-0x78],rcx
  40e835:	mov    rax,QWORD PTR [rbp-0x70]
  40e839:	shr    rax,0x20
  40e83d:	mov    QWORD PTR [rbp-0x58],rax
  40e841:	mov    rax,QWORD PTR [rbp-0x70]
  40e845:	and    eax,0xffffffff
  40e848:	mov    QWORD PTR [rbp-0x50],rax
  40e84c:	mov    rax,QWORD PTR [rbp-0x80]
  40e850:	shr    rax,0x20
  40e854:	mov    QWORD PTR [rbp-0x48],rax
  40e858:	mov    rax,QWORD PTR [rbp-0x80]
  40e85c:	and    eax,0xffffffff
  40e85f:	mov    QWORD PTR [rbp-0x40],rax
  40e863:	mov    rax,QWORD PTR [rbp-0x58]
  40e867:	imul   rax,QWORD PTR [rbp-0x48]
  40e86c:	mov    QWORD PTR [rbp-0x38],rax
  40e870:	mov    rax,QWORD PTR [rbp-0x50]
  40e874:	imul   rax,QWORD PTR [rbp-0x48]
  40e879:	mov    QWORD PTR [rbp-0x30],rax
  40e87d:	mov    rax,QWORD PTR [rbp-0x58]
  40e881:	imul   rax,QWORD PTR [rbp-0x40]
  40e886:	mov    QWORD PTR [rbp-0x28],rax
  40e88a:	mov    rax,QWORD PTR [rbp-0x50]
  40e88e:	imul   rax,QWORD PTR [rbp-0x40]
  40e893:	mov    QWORD PTR [rbp-0x20],rax
  40e897:	mov    rax,QWORD PTR [rbp-0x20]
  40e89b:	shr    rax,0x20
  40e89f:	mov    rdx,QWORD PTR [rbp-0x28]
  40e8a3:	mov    edx,edx
  40e8a5:	add    rax,rdx
  40e8a8:	mov    rdx,QWORD PTR [rbp-0x30]
  40e8ac:	mov    edx,edx
  40e8ae:	add    rax,rdx
  40e8b1:	mov    QWORD PTR [rbp-0x18],rax
  40e8b5:	mov    eax,0x80000000
  40e8ba:	add    QWORD PTR [rbp-0x18],rax
  40e8be:	mov    rax,QWORD PTR [rbp-0x28]
  40e8c2:	shr    rax,0x20
  40e8c6:	mov    rdx,rax
  40e8c9:	mov    rax,QWORD PTR [rbp-0x38]
  40e8cd:	add    rdx,rax
  40e8d0:	mov    rax,QWORD PTR [rbp-0x30]
  40e8d4:	shr    rax,0x20
  40e8d8:	add    rdx,rax
  40e8db:	mov    rax,QWORD PTR [rbp-0x18]
  40e8df:	shr    rax,0x20
  40e8e3:	add    rax,rdx
  40e8e6:	mov    QWORD PTR [rbp-0x10],rax
  40e8ea:	mov    edx,DWORD PTR [rbp-0x68]
  40e8ed:	mov    eax,DWORD PTR [rbp-0x78]
  40e8f0:	add    eax,edx
  40e8f2:	add    eax,0x40
  40e8f5:	mov    DWORD PTR [rbp-0x8],eax
  40e8f8:	mov    rax,QWORD PTR [rbp-0x10]
  40e8fc:	mov    rdx,QWORD PTR [rbp-0x8]
  40e900:	leave  
  40e901:	ret    
  40e902:	push   rbp
  40e903:	mov    rbp,rsp
  40e906:	sub    rsp,0x10
  40e90a:	mov    rax,rdi
  40e90d:	mov    rcx,rsi
  40e910:	mov    rdx,rcx
  40e913:	mov    QWORD PTR [rbp-0x10],rax
  40e917:	mov    QWORD PTR [rbp-0x8],rdx
  40e91b:	mov    rax,QWORD PTR [rbp-0x10]
  40e91f:	test   rax,rax
  40e922:	jne    40e958 <flatcc_emitter_copy_buffer@@Base+0x230d>
  40e924:	lea    rcx,[rip+0x7605]        # 415f30 <flatcc_builder_padding_base@@Base+0x1b90>
  40e92b:	mov    edx,0x104
  40e930:	lea    rsi,[rip+0x6d39]        # 415670 <flatcc_builder_padding_base@@Base+0x12d0>
  40e937:	lea    rdi,[rip+0x6dbb]        # 4156f9 <flatcc_builder_padding_base@@Base+0x1359>
  40e93e:	call   403070 <__assert_fail@plt>
  40e943:	mov    rax,QWORD PTR [rbp-0x10]
  40e947:	shl    rax,0xa
  40e94b:	mov    QWORD PTR [rbp-0x10],rax
  40e94f:	mov    eax,DWORD PTR [rbp-0x8]
  40e952:	sub    eax,0xa
  40e955:	mov    DWORD PTR [rbp-0x8],eax
  40e958:	mov    rdx,QWORD PTR [rbp-0x10]
  40e95c:	movabs rax,0xffc0000000000000
  40e966:	and    rax,rdx
  40e969:	test   rax,rax
  40e96c:	je     40e943 <flatcc_emitter_copy_buffer@@Base+0x22f8>
  40e96e:	jmp    40e984 <flatcc_emitter_copy_buffer@@Base+0x2339>
  40e970:	mov    rax,QWORD PTR [rbp-0x10]
  40e974:	add    rax,rax
  40e977:	mov    QWORD PTR [rbp-0x10],rax
  40e97b:	mov    eax,DWORD PTR [rbp-0x8]
  40e97e:	sub    eax,0x1
  40e981:	mov    DWORD PTR [rbp-0x8],eax
  40e984:	mov    rax,QWORD PTR [rbp-0x10]
  40e988:	test   rax,rax
  40e98b:	jns    40e970 <flatcc_emitter_copy_buffer@@Base+0x2325>
  40e98d:	mov    rax,QWORD PTR [rbp-0x10]
  40e991:	mov    rdx,QWORD PTR [rbp-0x8]
  40e995:	leave  
  40e996:	ret    
  40e997:	push   rbp
  40e998:	mov    rbp,rsp
  40e99b:	sub    rsp,0x30
  40e99f:	vmovsd QWORD PTR [rbp-0x28],xmm0
  40e9a4:	mov    rax,QWORD PTR [rbp-0x28]
  40e9a8:	mov    QWORD PTR [rbp-0x30],rax
  40e9ac:	vmovsd xmm0,QWORD PTR [rbp-0x30]
  40e9b1:	call   40e664 <flatcc_emitter_copy_buffer@@Base+0x2019>
  40e9b6:	mov    QWORD PTR [rbp-0x18],rax
  40e9ba:	movabs rax,0x7ff0000000000000
  40e9c4:	and    rax,QWORD PTR [rbp-0x18]
  40e9c8:	test   rax,rax
  40e9cb:	jne    40e9e8 <flatcc_emitter_copy_buffer@@Base+0x239d>
  40e9cd:	movabs rax,0xfffffffffffff
  40e9d7:	and    rax,QWORD PTR [rbp-0x18]
  40e9db:	mov    QWORD PTR [rbp-0x10],rax
  40e9df:	mov    DWORD PTR [rbp-0x8],0xfffffbce
  40e9e6:	jmp    40ea1f <flatcc_emitter_copy_buffer@@Base+0x23d4>
  40e9e8:	movabs rax,0xfffffffffffff
  40e9f2:	and    rax,QWORD PTR [rbp-0x18]
  40e9f6:	mov    rdx,rax
  40e9f9:	movabs rax,0x10000000000000
  40ea03:	add    rax,rdx
  40ea06:	mov    QWORD PTR [rbp-0x10],rax
  40ea0a:	mov    rax,QWORD PTR [rbp-0x18]
  40ea0e:	shr    rax,0x34
  40ea12:	and    eax,0x7ff
  40ea17:	sub    eax,0x433
  40ea1c:	mov    DWORD PTR [rbp-0x8],eax
  40ea1f:	mov    rax,QWORD PTR [rbp-0x10]
  40ea23:	mov    rdx,QWORD PTR [rbp-0x8]
  40ea27:	leave  
  40ea28:	ret    
  40ea29:	push   rbp
  40ea2a:	mov    rbp,rsp
  40ea2d:	sub    rsp,0x60
  40ea31:	mov    rax,rdi
  40ea34:	mov    rcx,rsi
  40ea37:	mov    rdx,rcx
  40ea3a:	mov    QWORD PTR [rbp-0x50],rax
  40ea3e:	mov    QWORD PTR [rbp-0x48],rdx
  40ea42:	movabs rax,0x10000000000000
  40ea4c:	mov    QWORD PTR [rbp-0x20],rax
  40ea50:	movabs rax,0xfffffffffffff
  40ea5a:	mov    QWORD PTR [rbp-0x18],rax
  40ea5e:	mov    DWORD PTR [rbp-0x34],0xfffffbce
  40ea65:	mov    DWORD PTR [rbp-0x30],0x433
  40ea6c:	mov    DWORD PTR [rbp-0x2c],0x34
  40ea73:	mov    rax,QWORD PTR [rbp-0x50]
  40ea77:	mov    rdx,QWORD PTR [rbp-0x48]
  40ea7b:	mov    QWORD PTR [rbp-0x10],rax
  40ea7f:	mov    QWORD PTR [rbp-0x8],rdx
  40ea83:	jmp    40ea99 <flatcc_emitter_copy_buffer@@Base+0x244e>
  40ea85:	mov    rax,QWORD PTR [rbp-0x10]
  40ea89:	shr    rax,1
  40ea8c:	mov    QWORD PTR [rbp-0x10],rax
  40ea90:	mov    eax,DWORD PTR [rbp-0x8]
  40ea93:	add    eax,0x1
  40ea96:	mov    DWORD PTR [rbp-0x8],eax
  40ea99:	mov    rax,QWORD PTR [rbp-0x10]
  40ea9d:	mov    rcx,QWORD PTR [rbp-0x20]
  40eaa1:	mov    rdx,QWORD PTR [rbp-0x18]
  40eaa5:	add    rdx,rcx
  40eaa8:	cmp    rax,rdx
  40eaab:	ja     40ea85 <flatcc_emitter_copy_buffer@@Base+0x243a>
  40eaad:	mov    eax,DWORD PTR [rbp-0x8]
  40eab0:	cmp    eax,DWORD PTR [rbp-0x34]
  40eab3:	jge    40ead2 <flatcc_emitter_copy_buffer@@Base+0x2487>
  40eab5:	mov    rax,QWORD PTR [rip+0x7974]        # 416430 <flatcc_builder_padding_base@@Base+0x2090>
  40eabc:	jmp    40eb3b <flatcc_emitter_copy_buffer@@Base+0x24f0>
  40eabe:	mov    rax,QWORD PTR [rbp-0x10]
  40eac2:	add    rax,rax
  40eac5:	mov    QWORD PTR [rbp-0x10],rax
  40eac9:	mov    eax,DWORD PTR [rbp-0x8]
  40eacc:	sub    eax,0x1
  40eacf:	mov    DWORD PTR [rbp-0x8],eax
  40ead2:	mov    eax,DWORD PTR [rbp-0x8]
  40ead5:	cmp    eax,DWORD PTR [rbp-0x34]
  40ead8:	jle    40eae7 <flatcc_emitter_copy_buffer@@Base+0x249c>
  40eada:	mov    rax,QWORD PTR [rbp-0x10]
  40eade:	and    rax,QWORD PTR [rbp-0x20]
  40eae2:	test   rax,rax
  40eae5:	je     40eabe <flatcc_emitter_copy_buffer@@Base+0x2473>
  40eae7:	mov    eax,DWORD PTR [rbp-0x8]
  40eaea:	cmp    eax,DWORD PTR [rbp-0x34]
  40eaed:	jne    40eb06 <flatcc_emitter_copy_buffer@@Base+0x24bb>
  40eaef:	mov    rax,QWORD PTR [rbp-0x10]
  40eaf3:	and    rax,QWORD PTR [rbp-0x20]
  40eaf7:	test   rax,rax
  40eafa:	jne    40eb06 <flatcc_emitter_copy_buffer@@Base+0x24bb>
  40eafc:	mov    QWORD PTR [rbp-0x28],0x0
  40eb04:	jmp    40eb14 <flatcc_emitter_copy_buffer@@Base+0x24c9>
  40eb06:	mov    edx,DWORD PTR [rbp-0x8]
  40eb09:	mov    eax,DWORD PTR [rbp-0x30]
  40eb0c:	add    eax,edx
  40eb0e:	cdqe   
  40eb10:	mov    QWORD PTR [rbp-0x28],rax
  40eb14:	mov    rax,QWORD PTR [rbp-0x10]
  40eb18:	and    rax,QWORD PTR [rbp-0x18]
  40eb1c:	mov    rdx,rax
  40eb1f:	mov    eax,DWORD PTR [rbp-0x2c]
  40eb22:	mov    rcx,QWORD PTR [rbp-0x28]
  40eb26:	shlx   rax,rcx,rax
  40eb2b:	or     rax,rdx
  40eb2e:	mov    rdi,rax
  40eb31:	call   40e67d <flatcc_emitter_copy_buffer@@Base+0x2032>
  40eb36:	vmovq  rax,xmm0
  40eb3b:	mov    QWORD PTR [rbp-0x58],rax
  40eb3f:	vmovsd xmm0,QWORD PTR [rbp-0x58]
  40eb44:	leave  
  40eb45:	ret    
  40eb46:	push   rbp
  40eb47:	mov    rbp,rsp
  40eb4a:	mov    DWORD PTR [rbp-0x14],edi
  40eb4d:	mov    DWORD PTR [rbp-0x18],esi
  40eb50:	mov    QWORD PTR [rbp-0x20],rdx
  40eb54:	mov    eax,DWORD PTR [rbp-0x18]
  40eb57:	add    eax,0x1
  40eb5a:	imul   eax,eax,0x4d1
  40eb60:	sar    eax,0xc
  40eb63:	add    eax,0x1
  40eb66:	mov    DWORD PTR [rbp-0x4],eax
  40eb69:	mov    eax,DWORD PTR [rbp-0x4]
  40eb6c:	cdqe   
  40eb6e:	lea    rdx,[rax*4+0x0]
  40eb76:	lea    rax,[rip+0x6ba3]        # 415720 <flatcc_builder_padding_base@@Base+0x1380>
  40eb7d:	mov    eax,DWORD PTR [rdx+rax*1]
  40eb80:	cmp    eax,DWORD PTR [rbp-0x14]
  40eb83:	jbe    40eb89 <flatcc_emitter_copy_buffer@@Base+0x253e>
  40eb85:	sub    DWORD PTR [rbp-0x4],0x1
  40eb89:	mov    eax,DWORD PTR [rbp-0x4]
  40eb8c:	cdqe   
  40eb8e:	lea    rdx,[rax*4+0x0]
  40eb96:	lea    rax,[rip+0x6b83]        # 415720 <flatcc_builder_padding_base@@Base+0x1380>
  40eb9d:	mov    edx,DWORD PTR [rdx+rax*1]
  40eba0:	mov    rax,QWORD PTR [rbp-0x20]
  40eba4:	mov    DWORD PTR [rax],edx
  40eba6:	mov    eax,DWORD PTR [rbp-0x4]
  40eba9:	pop    rbp
  40ebaa:	ret    
  40ebab:	push   rbp
  40ebac:	mov    rbp,rsp
  40ebaf:	sub    rsp,0x20
  40ebb3:	mov    DWORD PTR [rbp-0x14],edi
  40ebb6:	mov    QWORD PTR [rbp-0x20],rsi
  40ebba:	mov    DWORD PTR [rbp-0x10],0x15c
  40ebc1:	mov    DWORD PTR [rbp-0xc],0x8
  40ebc8:	cmp    DWORD PTR [rbp-0x14],0xfffffea4
  40ebcf:	jge    40ebf0 <flatcc_emitter_copy_buffer@@Base+0x25a5>
  40ebd1:	lea    rcx,[rip+0x7378]        # 415f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  40ebd8:	mov    edx,0x50
  40ebdd:	lea    rsi,[rip+0x6b6c]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40ebe4:	lea    rdi,[rip+0x6bdd]        # 4157c8 <flatcc_builder_padding_base@@Base+0x1428>
  40ebeb:	call   403070 <__assert_fail@plt>
  40ebf0:	mov    eax,DWORD PTR [rbp-0xc]
  40ebf3:	add    eax,0x154
  40ebf8:	cmp    eax,DWORD PTR [rbp-0x14]
  40ebfb:	jg     40ec1c <flatcc_emitter_copy_buffer@@Base+0x25d1>
  40ebfd:	lea    rcx,[rip+0x734c]        # 415f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  40ec04:	mov    edx,0x51
  40ec09:	lea    rsi,[rip+0x6b40]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40ec10:	lea    rdi,[rip+0x6bd1]        # 4157e8 <flatcc_builder_padding_base@@Base+0x1448>
  40ec17:	call   403070 <__assert_fail@plt>
  40ec1c:	mov    edx,DWORD PTR [rbp-0x14]
  40ec1f:	mov    eax,DWORD PTR [rbp-0x10]
  40ec22:	add    eax,edx
  40ec24:	cdq    
  40ec25:	idiv   DWORD PTR [rbp-0xc]
  40ec28:	mov    DWORD PTR [rbp-0x8],eax
  40ec2b:	mov    eax,DWORD PTR [rbp-0x8]
  40ec2e:	cdqe   
  40ec30:	shl    rax,0x4
  40ec34:	mov    rdx,rax
  40ec37:	lea    rax,[rip+0x64cc]        # 41510a <flatcc_builder_padding_base@@Base+0xd6a>
  40ec3e:	movzx  eax,WORD PTR [rdx+rax*1]
  40ec42:	cwde   
  40ec43:	mov    DWORD PTR [rbp-0x4],eax
  40ec46:	mov    eax,DWORD PTR [rbp-0x8]
  40ec49:	cdqe   
  40ec4b:	shl    rax,0x4
  40ec4f:	mov    rdx,rax
  40ec52:	lea    rax,[rip+0x64a7]        # 415100 <flatcc_builder_padding_base@@Base+0xd60>
  40ec59:	mov    rdx,QWORD PTR [rdx+rax*1]
  40ec5d:	mov    rax,QWORD PTR [rbp-0x20]
  40ec61:	mov    QWORD PTR [rax],rdx
  40ec64:	mov    eax,DWORD PTR [rbp-0x8]
  40ec67:	cdqe   
  40ec69:	shl    rax,0x4
  40ec6d:	mov    rdx,rax
  40ec70:	lea    rax,[rip+0x6491]        # 415108 <flatcc_builder_padding_base@@Base+0xd68>
  40ec77:	movzx  eax,WORD PTR [rdx+rax*1]
  40ec7b:	movsx  edx,ax
  40ec7e:	mov    rax,QWORD PTR [rbp-0x20]
  40ec82:	mov    DWORD PTR [rax+0x8],edx
  40ec85:	mov    eax,DWORD PTR [rbp-0x4]
  40ec88:	cmp    eax,DWORD PTR [rbp-0x14]
  40ec8b:	jle    40ecac <flatcc_emitter_copy_buffer@@Base+0x2661>
  40ec8d:	lea    rcx,[rip+0x72bc]        # 415f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  40ec94:	mov    edx,0x58
  40ec99:	lea    rsi,[rip+0x6ab0]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40eca0:	lea    rdi,[rip+0x6b6c]        # 415813 <flatcc_builder_padding_base@@Base+0x1473>
  40eca7:	call   403070 <__assert_fail@plt>
  40ecac:	mov    edx,DWORD PTR [rbp-0x4]
  40ecaf:	mov    eax,DWORD PTR [rbp-0xc]
  40ecb2:	add    eax,edx
  40ecb4:	cmp    eax,DWORD PTR [rbp-0x14]
  40ecb7:	jg     40ecd8 <flatcc_emitter_copy_buffer@@Base+0x268d>
  40ecb9:	lea    rcx,[rip+0x7290]        # 415f50 <flatcc_builder_padding_base@@Base+0x1bb0>
  40ecc0:	mov    edx,0x59
  40ecc5:	lea    rsi,[rip+0x6a84]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40eccc:	lea    rdi,[rip+0x6b4f]        # 415822 <flatcc_builder_padding_base@@Base+0x1482>
  40ecd3:	call   403070 <__assert_fail@plt>
  40ecd8:	mov    eax,DWORD PTR [rbp-0x4]
  40ecdb:	leave  
  40ecdc:	ret    

000000000040ecdd <grisu3_diy_fp_encode_double@@Base>:
  40ecdd:	push   rbp
  40ecde:	mov    rbp,rsp
  40ece1:	sub    rsp,0xb0
  40ece8:	mov    QWORD PTR [rbp-0x98],rdi
  40ecef:	mov    DWORD PTR [rbp-0x9c],esi
  40ecf5:	mov    DWORD PTR [rbp-0xa0],edx
  40ecfb:	mov    DWORD PTR [rbp-0xa4],ecx
  40ed01:	mov    QWORD PTR [rbp-0xb0],r8
  40ed08:	mov    rax,QWORD PTR fs:0x28
  40ed11:	mov    QWORD PTR [rbp-0x8],rax
  40ed15:	xor    eax,eax
  40ed17:	mov    DWORD PTR [rbp-0x7c],0x3
  40ed1e:	mov    eax,DWORD PTR [rbp-0x7c]
  40ed21:	mov    edx,0x1
  40ed26:	shlx   eax,edx,eax
  40ed2b:	mov    DWORD PTR [rbp-0x78],eax
  40ed2e:	mov    DWORD PTR [rbp-0x74],0xfffffbce
  40ed35:	movabs rax,0x10000000000000
  40ed3f:	mov    QWORD PTR [rbp-0x48],rax
  40ed43:	mov    DWORD PTR [rbp-0x70],0x40
  40ed4a:	mov    DWORD PTR [rbp-0x6c],0x13
  40ed51:	cmp    DWORD PTR [rbp-0xa4],0x0
  40ed58:	je     40ed68 <grisu3_diy_fp_encode_double@@Base+0x8b>
  40ed5a:	mov    eax,DWORD PTR [rbp-0x78]
  40ed5d:	mov    edx,eax
  40ed5f:	shr    edx,0x1f
  40ed62:	add    eax,edx
  40ed64:	sar    eax,1
  40ed66:	jmp    40ed6d <grisu3_diy_fp_encode_double@@Base+0x90>
  40ed68:	mov    eax,0x0
  40ed6d:	mov    DWORD PTR [rbp-0x84],eax
  40ed73:	mov    eax,DWORD PTR [rbp-0x9c]
  40ed79:	sub    eax,DWORD PTR [rbp-0xa0]
  40ed7f:	mov    DWORD PTR [rbp-0x68],eax
  40ed82:	mov    rax,QWORD PTR [rbp-0x98]
  40ed89:	mov    QWORD PTR [rbp-0x40],rax
  40ed8d:	mov    DWORD PTR [rbp-0x38],0x0
  40ed94:	mov    rdx,QWORD PTR [rbp-0x40]
  40ed98:	mov    rax,QWORD PTR [rbp-0x38]
  40ed9c:	mov    rdi,rdx
  40ed9f:	mov    rsi,rax
  40eda2:	call   40e902 <flatcc_emitter_copy_buffer@@Base+0x22b7>
  40eda7:	mov    QWORD PTR [rbp-0x40],rax
  40edab:	mov    QWORD PTR [rbp-0x38],rdx
  40edaf:	mov    eax,DWORD PTR [rbp-0x38]
  40edb2:	neg    eax
  40edb4:	mov    ecx,eax
  40edb6:	shl    DWORD PTR [rbp-0x84],cl
  40edbc:	lea    rdx,[rbp-0x30]
  40edc0:	mov    eax,DWORD PTR [rbp-0x68]
  40edc3:	mov    rsi,rdx
  40edc6:	mov    edi,eax
  40edc8:	call   40ebab <flatcc_emitter_copy_buffer@@Base+0x2560>
  40edcd:	mov    DWORD PTR [rbp-0x64],eax
  40edd0:	mov    eax,DWORD PTR [rbp-0x64]
  40edd3:	cmp    eax,DWORD PTR [rbp-0x68]
  40edd6:	je     40ee71 <grisu3_diy_fp_encode_double@@Base+0x194>
  40eddc:	mov    eax,DWORD PTR [rbp-0x68]
  40eddf:	sub    eax,DWORD PTR [rbp-0x64]
  40ede2:	sub    eax,0x1
  40ede5:	mov    DWORD PTR [rbp-0x60],eax
  40ede8:	cmp    DWORD PTR [rbp-0x60],0x0
  40edec:	js     40edf4 <grisu3_diy_fp_encode_double@@Base+0x117>
  40edee:	cmp    DWORD PTR [rbp-0x60],0x6
  40edf2:	jle    40ee13 <grisu3_diy_fp_encode_double@@Base+0x136>
  40edf4:	lea    rcx,[rip+0x7175]        # 415f70 <flatcc_builder_padding_base@@Base+0x1bd0>
  40edfb:	mov    edx,0xb9
  40ee00:	lea    rsi,[rip+0x6949]        # 415750 <flatcc_builder_padding_base@@Base+0x13b0>
  40ee07:	lea    rdi,[rip+0x6a2f]        # 41583d <flatcc_builder_padding_base@@Base+0x149d>
  40ee0e:	call   403070 <__assert_fail@plt>
  40ee13:	mov    eax,DWORD PTR [rbp-0x60]
  40ee16:	cdqe   
  40ee18:	shl    rax,0x4
  40ee1c:	mov    rdx,rax
  40ee1f:	lea    rax,[rip+0xb29a]        # 41a0c0 <__data_start@@Base+0x20>
  40ee26:	lea    rdx,[rdx+rax*1]
  40ee2a:	mov    rax,QWORD PTR [rdx]
  40ee2d:	mov    rdx,QWORD PTR [rdx+0x8]
  40ee31:	mov    rdi,QWORD PTR [rbp-0x40]
  40ee35:	mov    rsi,QWORD PTR [rbp-0x38]
  40ee39:	mov    rcx,rdx
  40ee3c:	mov    rdx,rax
  40ee3f:	call   40e80e <flatcc_emitter_copy_buffer@@Base+0x21c3>
  40ee44:	mov    QWORD PTR [rbp-0x40],rax
  40ee48:	mov    QWORD PTR [rbp-0x38],rdx
  40ee4c:	mov    eax,DWORD PTR [rbp-0xa0]
  40ee52:	lea    edx,[rax+0x1]
  40ee55:	mov    eax,DWORD PTR [rbp-0x60]
  40ee58:	add    eax,edx
  40ee5a:	cmp    eax,DWORD PTR [rbp-0x6c]
  40ee5d:	jle    40ee71 <grisu3_diy_fp_encode_double@@Base+0x194>
  40ee5f:	mov    eax,DWORD PTR [rbp-0x78]
  40ee62:	mov    edx,eax
  40ee64:	shr    edx,0x1f
  40ee67:	add    eax,edx
  40ee69:	sar    eax,1
  40ee6b:	add    DWORD PTR [rbp-0x84],eax
  40ee71:	mov    rax,QWORD PTR [rbp-0x30]
  40ee75:	mov    rdx,QWORD PTR [rbp-0x28]
  40ee79:	mov    rdi,QWORD PTR [rbp-0x40]
  40ee7d:	mov    rsi,QWORD PTR [rbp-0x38]
  40ee81:	mov    rcx,rdx
  40ee84:	mov    rdx,rax
  40ee87:	call   40e80e <flatcc_emitter_copy_buffer@@Base+0x21c3>
  40ee8c:	mov    QWORD PTR [rbp-0x40],rax
  40ee90:	mov    QWORD PTR [rbp-0x38],rdx
  40ee94:	cmp    DWORD PTR [rbp-0x84],0x0
  40ee9b:	setne  al
  40ee9e:	movzx  edx,al
  40eea1:	mov    eax,DWORD PTR [rbp-0x78]
  40eea4:	add    eax,edx
  40eea6:	add    DWORD PTR [rbp-0x84],eax
  40eeac:	mov    eax,DWORD PTR [rbp-0x38]
  40eeaf:	mov    DWORD PTR [rbp-0x5c],eax
  40eeb2:	mov    rdx,QWORD PTR [rbp-0x40]
  40eeb6:	mov    rax,QWORD PTR [rbp-0x38]
  40eeba:	mov    rdi,rdx
  40eebd:	mov    rsi,rax
  40eec0:	call   40e902 <flatcc_emitter_copy_buffer@@Base+0x22b7>
  40eec5:	mov    QWORD PTR [rbp-0x40],rax
  40eec9:	mov    QWORD PTR [rbp-0x38],rdx
  40eecd:	mov    eax,DWORD PTR [rbp-0x38]
  40eed0:	mov    edx,DWORD PTR [rbp-0x5c]
  40eed3:	sub    edx,eax
  40eed5:	mov    eax,edx
  40eed7:	mov    ecx,eax
  40eed9:	shl    DWORD PTR [rbp-0x84],cl
  40eedf:	mov    edx,DWORD PTR [rbp-0x38]
  40eee2:	mov    eax,DWORD PTR [rbp-0x70]
  40eee5:	add    eax,edx
  40eee7:	mov    DWORD PTR [rbp-0x58],eax
  40eeea:	mov    edx,DWORD PTR [rbp-0x70]
  40eeed:	mov    eax,DWORD PTR [rbp-0x74]
  40eef0:	add    eax,edx
  40eef2:	cmp    eax,DWORD PTR [rbp-0x58]
  40eef5:	jle    40ef0e <grisu3_diy_fp_encode_double@@Base+0x231>
  40eef7:	mov    eax,DWORD PTR [rbp-0x58]
  40eefa:	cmp    eax,DWORD PTR [rbp-0x74]
  40eefd:	jle    40ef07 <grisu3_diy_fp_encode_double@@Base+0x22a>
  40eeff:	mov    eax,DWORD PTR [rbp-0x58]
  40ef02:	sub    eax,DWORD PTR [rbp-0x74]
  40ef05:	jmp    40ef11 <grisu3_diy_fp_encode_double@@Base+0x234>
  40ef07:	mov    eax,0x0
  40ef0c:	jmp    40ef11 <grisu3_diy_fp_encode_double@@Base+0x234>
  40ef0e:	mov    eax,DWORD PTR [rbp-0x70]
  40ef11:	mov    DWORD PTR [rbp-0x58],eax
  40ef14:	mov    eax,DWORD PTR [rbp-0x70]
  40ef17:	sub    eax,DWORD PTR [rbp-0x58]
  40ef1a:	mov    DWORD PTR [rbp-0x80],eax
  40ef1d:	mov    edx,DWORD PTR [rbp-0x80]
  40ef20:	mov    eax,DWORD PTR [rbp-0x7c]
  40ef23:	add    eax,edx
  40ef25:	cmp    eax,DWORD PTR [rbp-0x70]
  40ef28:	jl     40ef78 <grisu3_diy_fp_encode_double@@Base+0x29b>
  40ef2a:	mov    edx,DWORD PTR [rbp-0x80]
  40ef2d:	mov    eax,DWORD PTR [rbp-0x7c]
  40ef30:	add    eax,edx
  40ef32:	sub    eax,DWORD PTR [rbp-0x70]
  40ef35:	sub    eax,0x1
  40ef38:	mov    DWORD PTR [rbp-0x54],eax
  40ef3b:	mov    rdx,QWORD PTR [rbp-0x40]
  40ef3f:	mov    eax,DWORD PTR [rbp-0x54]
  40ef42:	shrx   rax,rdx,rax
  40ef47:	mov    QWORD PTR [rbp-0x40],rax
  40ef4b:	mov    edx,DWORD PTR [rbp-0x38]
  40ef4e:	mov    eax,DWORD PTR [rbp-0x54]
  40ef51:	add    eax,edx
  40ef53:	mov    DWORD PTR [rbp-0x38],eax
  40ef56:	mov    eax,DWORD PTR [rbp-0x54]
  40ef59:	mov    edx,DWORD PTR [rbp-0x84]
  40ef5f:	sarx   eax,edx,eax
  40ef64:	lea    edx,[rax+0x1]
  40ef67:	mov    eax,DWORD PTR [rbp-0x78]
  40ef6a:	add    eax,edx
  40ef6c:	mov    DWORD PTR [rbp-0x84],eax
  40ef72:	mov    eax,DWORD PTR [rbp-0x54]
  40ef75:	sub    DWORD PTR [rbp-0x80],eax
  40ef78:	mov    rdx,QWORD PTR [rbp-0x40]
  40ef7c:	mov    eax,DWORD PTR [rbp-0x80]
  40ef7f:	shrx   rax,rdx,rax
  40ef84:	mov    QWORD PTR [rbp-0x20],rax
  40ef88:	mov    edx,DWORD PTR [rbp-0x38]
  40ef8b:	mov    eax,DWORD PTR [rbp-0x80]
  40ef8e:	add    eax,edx
  40ef90:	mov    DWORD PTR [rbp-0x18],eax
  40ef93:	mov    rax,QWORD PTR [rbp-0x40]
  40ef97:	mov    edx,DWORD PTR [rbp-0x80]
  40ef9a:	sub    edx,0x1
  40ef9d:	mov    ecx,0x1
  40efa2:	shlx   rdx,rcx,rdx
  40efa7:	and    rax,rdx
  40efaa:	mov    edx,eax
  40efac:	mov    eax,DWORD PTR [rbp-0x78]
  40efaf:	cdqe   
  40efb1:	imul   eax,edx
  40efb4:	mov    DWORD PTR [rbp-0x50],eax
  40efb7:	mov    eax,DWORD PTR [rbp-0x78]
  40efba:	movsxd rdx,eax
  40efbd:	mov    eax,DWORD PTR [rbp-0x80]
  40efc0:	sub    eax,0x1
  40efc3:	shlx   rax,rdx,rax
  40efc8:	mov    DWORD PTR [rbp-0x4c],eax
  40efcb:	mov    edx,DWORD PTR [rbp-0x4c]
  40efce:	mov    eax,DWORD PTR [rbp-0x84]
  40efd4:	add    eax,edx
  40efd6:	cmp    eax,DWORD PTR [rbp-0x80]
  40efd9:	jg     40f00e <grisu3_diy_fp_encode_double@@Base+0x331>
  40efdb:	mov    rax,QWORD PTR [rbp-0x20]
  40efdf:	add    rax,0x1
  40efe3:	mov    QWORD PTR [rbp-0x20],rax
  40efe7:	mov    rax,QWORD PTR [rbp-0x20]
  40efeb:	mov    rdx,QWORD PTR [rbp-0x48]
  40efef:	add    rdx,rdx
  40eff2:	and    rax,rdx
  40eff5:	test   rax,rax
  40eff8:	je     40f00e <grisu3_diy_fp_encode_double@@Base+0x331>
  40effa:	mov    rax,QWORD PTR [rbp-0x20]
  40effe:	shr    rax,1
  40f001:	mov    QWORD PTR [rbp-0x20],rax
  40f005:	mov    eax,DWORD PTR [rbp-0x18]
  40f008:	add    eax,0x1
  40f00b:	mov    DWORD PTR [rbp-0x18],eax
  40f00e:	mov    rdx,QWORD PTR [rbp-0x20]
  40f012:	mov    rax,QWORD PTR [rbp-0x18]
  40f016:	mov    rdi,rdx
  40f019:	mov    rsi,rax
  40f01c:	call   40ea29 <flatcc_emitter_copy_buffer@@Base+0x23de>
  40f021:	vmovq  rdx,xmm0
  40f026:	mov    rax,QWORD PTR [rbp-0xb0]
  40f02d:	mov    QWORD PTR [rax],rdx
  40f030:	mov    eax,DWORD PTR [rbp-0x4c]
  40f033:	sub    eax,DWORD PTR [rbp-0x84]
  40f039:	cmp    eax,DWORD PTR [rbp-0x50]
  40f03c:	jge    40f04e <grisu3_diy_fp_encode_double@@Base+0x371>
  40f03e:	mov    edx,DWORD PTR [rbp-0x4c]
  40f041:	mov    eax,DWORD PTR [rbp-0x84]
  40f047:	add    eax,edx
  40f049:	cmp    eax,DWORD PTR [rbp-0x50]
  40f04c:	jg     40f055 <grisu3_diy_fp_encode_double@@Base+0x378>
  40f04e:	mov    eax,0x1
  40f053:	jmp    40f05a <grisu3_diy_fp_encode_double@@Base+0x37d>
  40f055:	mov    eax,0x0
  40f05a:	mov    rcx,QWORD PTR [rbp-0x8]
  40f05e:	xor    rcx,QWORD PTR fs:0x28
  40f067:	je     40f06e <grisu3_diy_fp_encode_double@@Base+0x391>
  40f069:	call   403060 <__stack_chk_fail@plt>
  40f06e:	leave  
  40f06f:	ret    
  40f070:	push   rbp
  40f071:	mov    rbp,rsp
  40f074:	sub    rsp,0x50
  40f078:	mov    QWORD PTR [rbp-0x28],rdi
  40f07c:	mov    QWORD PTR [rbp-0x30],rsi
  40f080:	mov    DWORD PTR [rbp-0x34],edx
  40f083:	mov    QWORD PTR [rbp-0x40],rcx
  40f087:	mov    DWORD PTR [rbp-0x38],r8d
  40f08b:	mov    DWORD PTR [rbp-0x44],r9d
  40f08f:	mov    rax,QWORD PTR [rbp+0x18]
  40f093:	mov    QWORD PTR [rbp-0x50],rax
  40f097:	mov    rax,QWORD PTR fs:0x28
  40f0a0:	mov    QWORD PTR [rbp-0x8],rax
  40f0a4:	xor    eax,eax
  40f0a6:	mov    DWORD PTR [rbp-0x20],0x135
  40f0ad:	mov    DWORD PTR [rbp-0x1c],0xfffffebc
  40f0b4:	cmp    QWORD PTR [rbp-0x40],0x0
  40f0b9:	je     40f0c3 <grisu3_diy_fp_encode_double@@Base+0x3e6>
  40f0bb:	mov    eax,DWORD PTR [rbp-0x38]
  40f0be:	cmp    eax,DWORD PTR [rbp-0x1c]
  40f0c1:	jge    40f0d4 <grisu3_diy_fp_encode_double@@Base+0x3f7>
  40f0c3:	mov    rax,QWORD PTR [rbp-0x50]
  40f0c7:	vxorpd xmm0,xmm0,xmm0
  40f0cb:	vmovsd QWORD PTR [rax],xmm0
  40f0cf:	jmp    40f686 <grisu3_diy_fp_encode_double@@Base+0x9a9>
  40f0d4:	mov    eax,DWORD PTR [rbp-0x38]
  40f0d7:	sub    eax,0x1
  40f0da:	cmp    eax,DWORD PTR [rbp-0x20]
  40f0dd:	jle    40f0ff <grisu3_diy_fp_encode_double@@Base+0x422>
  40f0df:	movabs rdi,0x7ff0000000000000
  40f0e9:	call   40e67d <flatcc_emitter_copy_buffer@@Base+0x2032>
  40f0ee:	vmovq  rdx,xmm0
  40f0f3:	mov    rax,QWORD PTR [rbp-0x50]
  40f0f7:	mov    QWORD PTR [rax],rdx
  40f0fa:	jmp    40f686 <grisu3_diy_fp_encode_double@@Base+0x9a9>
  40f0ff:	movabs rax,0x1fffffffffffff
  40f109:	cmp    QWORD PTR [rbp-0x40],rax
  40f10d:	ja     40f630 <grisu3_diy_fp_encode_double@@Base+0x953>
  40f113:	cmp    DWORD PTR [rbp-0x38],0x0
  40f117:	js     40f630 <grisu3_diy_fp_encode_double@@Base+0x953>
  40f11d:	cmp    DWORD PTR [rbp-0x38],0x16
  40f121:	jg     40f630 <grisu3_diy_fp_encode_double@@Base+0x953>
  40f127:	mov    rax,QWORD PTR [rbp-0x40]
  40f12b:	test   rax,rax
  40f12e:	js     40f13b <grisu3_diy_fp_encode_double@@Base+0x45e>
  40f130:	vxorpd xmm0,xmm0,xmm0
  40f134:	vcvtsi2sd xmm0,xmm0,rax
  40f139:	jmp    40f154 <grisu3_diy_fp_encode_double@@Base+0x477>
  40f13b:	mov    rdx,rax
  40f13e:	shr    rdx,1
  40f141:	and    eax,0x1
  40f144:	or     rdx,rax
  40f147:	vxorpd xmm0,xmm0,xmm0
  40f14b:	vcvtsi2sd xmm0,xmm0,rdx
  40f150:	vaddsd xmm0,xmm0,xmm0
  40f154:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f159:	mov    eax,DWORD PTR [rbp-0x38]
  40f15c:	sub    eax,DWORD PTR [rbp-0x44]
  40f15f:	add    eax,0x16
  40f162:	cmp    eax,0x2c
  40f165:	ja     40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f16b:	mov    eax,eax
  40f16d:	lea    rdx,[rax*4+0x0]
  40f175:	lea    rax,[rip+0x66e0]        # 41585c <flatcc_builder_padding_base@@Base+0x14bc>
  40f17c:	mov    eax,DWORD PTR [rdx+rax*1]
  40f17f:	movsxd rdx,eax
  40f182:	lea    rax,[rip+0x66d3]        # 41585c <flatcc_builder_padding_base@@Base+0x14bc>
  40f189:	add    rax,rdx
  40f18c:	jmp    rax
  40f18e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f193:	vmovsd xmm1,QWORD PTR [rip+0x72a5]        # 416440 <flatcc_builder_padding_base@@Base+0x20a0>
  40f19b:	vdivsd xmm0,xmm0,xmm1
  40f19f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f1a4:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f1a9:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f1ae:	vmovsd xmm1,QWORD PTR [rip+0x7292]        # 416448 <flatcc_builder_padding_base@@Base+0x20a8>
  40f1b6:	vdivsd xmm0,xmm0,xmm1
  40f1ba:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f1bf:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f1c4:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f1c9:	vmovsd xmm1,QWORD PTR [rip+0x727f]        # 416450 <flatcc_builder_padding_base@@Base+0x20b0>
  40f1d1:	vdivsd xmm0,xmm0,xmm1
  40f1d5:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f1da:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f1df:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f1e4:	vmovsd xmm1,QWORD PTR [rip+0x726c]        # 416458 <flatcc_builder_padding_base@@Base+0x20b8>
  40f1ec:	vdivsd xmm0,xmm0,xmm1
  40f1f0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f1f5:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f1fa:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f1ff:	vmovsd xmm1,QWORD PTR [rip+0x7259]        # 416460 <flatcc_builder_padding_base@@Base+0x20c0>
  40f207:	vdivsd xmm0,xmm0,xmm1
  40f20b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f210:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f215:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f21a:	vmovsd xmm1,QWORD PTR [rip+0x7246]        # 416468 <flatcc_builder_padding_base@@Base+0x20c8>
  40f222:	vdivsd xmm0,xmm0,xmm1
  40f226:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f22b:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f230:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f235:	vmovsd xmm1,QWORD PTR [rip+0x7233]        # 416470 <flatcc_builder_padding_base@@Base+0x20d0>
  40f23d:	vdivsd xmm0,xmm0,xmm1
  40f241:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f246:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f24b:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f250:	vmovsd xmm1,QWORD PTR [rip+0x7220]        # 416478 <flatcc_builder_padding_base@@Base+0x20d8>
  40f258:	vdivsd xmm0,xmm0,xmm1
  40f25c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f261:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f266:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f26b:	vmovsd xmm1,QWORD PTR [rip+0x720d]        # 416480 <flatcc_builder_padding_base@@Base+0x20e0>
  40f273:	vdivsd xmm0,xmm0,xmm1
  40f277:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f27c:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f281:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f286:	vmovsd xmm1,QWORD PTR [rip+0x71fa]        # 416488 <flatcc_builder_padding_base@@Base+0x20e8>
  40f28e:	vdivsd xmm0,xmm0,xmm1
  40f292:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f297:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f29c:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f2a1:	vmovsd xmm1,QWORD PTR [rip+0x71e7]        # 416490 <flatcc_builder_padding_base@@Base+0x20f0>
  40f2a9:	vdivsd xmm0,xmm0,xmm1
  40f2ad:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f2b2:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f2b7:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f2bc:	vmovsd xmm1,QWORD PTR [rip+0x71d4]        # 416498 <flatcc_builder_padding_base@@Base+0x20f8>
  40f2c4:	vdivsd xmm0,xmm0,xmm1
  40f2c8:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f2cd:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f2d2:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f2d7:	vmovsd xmm1,QWORD PTR [rip+0x71c1]        # 4164a0 <flatcc_builder_padding_base@@Base+0x2100>
  40f2df:	vdivsd xmm0,xmm0,xmm1
  40f2e3:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f2e8:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f2ed:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f2f2:	vmovsd xmm1,QWORD PTR [rip+0x71ae]        # 4164a8 <flatcc_builder_padding_base@@Base+0x2108>
  40f2fa:	vdivsd xmm0,xmm0,xmm1
  40f2fe:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f303:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f308:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f30d:	vmovsd xmm1,QWORD PTR [rip+0x719b]        # 4164b0 <flatcc_builder_padding_base@@Base+0x2110>
  40f315:	vdivsd xmm0,xmm0,xmm1
  40f319:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f31e:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f323:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f328:	vmovsd xmm1,QWORD PTR [rip+0x7188]        # 4164b8 <flatcc_builder_padding_base@@Base+0x2118>
  40f330:	vdivsd xmm0,xmm0,xmm1
  40f334:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f339:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f33e:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f343:	vmovsd xmm1,QWORD PTR [rip+0x7175]        # 4164c0 <flatcc_builder_padding_base@@Base+0x2120>
  40f34b:	vdivsd xmm0,xmm0,xmm1
  40f34f:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f354:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f359:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f35e:	vmovsd xmm1,QWORD PTR [rip+0x7162]        # 4164c8 <flatcc_builder_padding_base@@Base+0x2128>
  40f366:	vdivsd xmm0,xmm0,xmm1
  40f36a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f36f:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f374:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f379:	vmovsd xmm1,QWORD PTR [rip+0x714f]        # 4164d0 <flatcc_builder_padding_base@@Base+0x2130>
  40f381:	vdivsd xmm0,xmm0,xmm1
  40f385:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f38a:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f38f:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f394:	vmovsd xmm1,QWORD PTR [rip+0x713c]        # 4164d8 <flatcc_builder_padding_base@@Base+0x2138>
  40f39c:	vdivsd xmm0,xmm0,xmm1
  40f3a0:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f3a5:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f3aa:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f3af:	vmovsd xmm1,QWORD PTR [rip+0x7129]        # 4164e0 <flatcc_builder_padding_base@@Base+0x2140>
  40f3b7:	vdivsd xmm0,xmm0,xmm1
  40f3bb:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f3c0:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f3c5:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f3ca:	vmovsd xmm1,QWORD PTR [rip+0x7116]        # 4164e8 <flatcc_builder_padding_base@@Base+0x2148>
  40f3d2:	vdivsd xmm0,xmm0,xmm1
  40f3d6:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f3db:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f3e0:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f3e5:	vmovsd xmm0,QWORD PTR [rip+0x70fb]        # 4164e8 <flatcc_builder_padding_base@@Base+0x2148>
  40f3ed:	vmulsd xmm0,xmm1,xmm0
  40f3f1:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f3f6:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f3fb:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f400:	vmovsd xmm0,QWORD PTR [rip+0x70d8]        # 4164e0 <flatcc_builder_padding_base@@Base+0x2140>
  40f408:	vmulsd xmm0,xmm1,xmm0
  40f40c:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f411:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f416:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f41b:	vmovsd xmm0,QWORD PTR [rip+0x70b5]        # 4164d8 <flatcc_builder_padding_base@@Base+0x2138>
  40f423:	vmulsd xmm0,xmm1,xmm0
  40f427:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f42c:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f431:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f436:	vmovsd xmm0,QWORD PTR [rip+0x7092]        # 4164d0 <flatcc_builder_padding_base@@Base+0x2130>
  40f43e:	vmulsd xmm0,xmm1,xmm0
  40f442:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f447:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f44c:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f451:	vmovsd xmm0,QWORD PTR [rip+0x706f]        # 4164c8 <flatcc_builder_padding_base@@Base+0x2128>
  40f459:	vmulsd xmm0,xmm1,xmm0
  40f45d:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f462:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f467:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f46c:	vmovsd xmm0,QWORD PTR [rip+0x704c]        # 4164c0 <flatcc_builder_padding_base@@Base+0x2120>
  40f474:	vmulsd xmm0,xmm1,xmm0
  40f478:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f47d:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f482:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f487:	vmovsd xmm0,QWORD PTR [rip+0x7029]        # 4164b8 <flatcc_builder_padding_base@@Base+0x2118>
  40f48f:	vmulsd xmm0,xmm1,xmm0
  40f493:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f498:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f49d:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f4a2:	vmovsd xmm0,QWORD PTR [rip+0x7006]        # 4164b0 <flatcc_builder_padding_base@@Base+0x2110>
  40f4aa:	vmulsd xmm0,xmm1,xmm0
  40f4ae:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f4b3:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f4b8:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f4bd:	vmovsd xmm0,QWORD PTR [rip+0x6fe3]        # 4164a8 <flatcc_builder_padding_base@@Base+0x2108>
  40f4c5:	vmulsd xmm0,xmm1,xmm0
  40f4c9:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f4ce:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f4d3:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f4d8:	vmovsd xmm0,QWORD PTR [rip+0x6fc0]        # 4164a0 <flatcc_builder_padding_base@@Base+0x2100>
  40f4e0:	vmulsd xmm0,xmm1,xmm0
  40f4e4:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f4e9:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f4ee:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f4f3:	vmovsd xmm0,QWORD PTR [rip+0x6f9d]        # 416498 <flatcc_builder_padding_base@@Base+0x20f8>
  40f4fb:	vmulsd xmm0,xmm1,xmm0
  40f4ff:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f504:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f509:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f50e:	vmovsd xmm0,QWORD PTR [rip+0x6f7a]        # 416490 <flatcc_builder_padding_base@@Base+0x20f0>
  40f516:	vmulsd xmm0,xmm1,xmm0
  40f51a:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f51f:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f524:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f529:	vmovsd xmm0,QWORD PTR [rip+0x6f57]        # 416488 <flatcc_builder_padding_base@@Base+0x20e8>
  40f531:	vmulsd xmm0,xmm1,xmm0
  40f535:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f53a:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f53f:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f544:	vmovsd xmm0,QWORD PTR [rip+0x6f34]        # 416480 <flatcc_builder_padding_base@@Base+0x20e0>
  40f54c:	vmulsd xmm0,xmm1,xmm0
  40f550:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f555:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f55a:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f55f:	vmovsd xmm0,QWORD PTR [rip+0x6f11]        # 416478 <flatcc_builder_padding_base@@Base+0x20d8>
  40f567:	vmulsd xmm0,xmm1,xmm0
  40f56b:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f570:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f575:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f57a:	vmovsd xmm0,QWORD PTR [rip+0x6eee]        # 416470 <flatcc_builder_padding_base@@Base+0x20d0>
  40f582:	vmulsd xmm0,xmm1,xmm0
  40f586:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f58b:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f590:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f595:	vmovsd xmm0,QWORD PTR [rip+0x6ecb]        # 416468 <flatcc_builder_padding_base@@Base+0x20c8>
  40f59d:	vmulsd xmm0,xmm1,xmm0
  40f5a1:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f5a6:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f5a8:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f5ad:	vmovsd xmm0,QWORD PTR [rip+0x6eab]        # 416460 <flatcc_builder_padding_base@@Base+0x20c0>
  40f5b5:	vmulsd xmm0,xmm1,xmm0
  40f5b9:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f5be:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f5c0:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f5c5:	vmovsd xmm0,QWORD PTR [rip+0x6e8b]        # 416458 <flatcc_builder_padding_base@@Base+0x20b8>
  40f5cd:	vmulsd xmm0,xmm1,xmm0
  40f5d1:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f5d6:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f5d8:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f5dd:	vmovsd xmm0,QWORD PTR [rip+0x6e6b]        # 416450 <flatcc_builder_padding_base@@Base+0x20b0>
  40f5e5:	vmulsd xmm0,xmm1,xmm0
  40f5e9:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f5ee:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f5f0:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f5f5:	vmovsd xmm0,QWORD PTR [rip+0x6e4b]        # 416448 <flatcc_builder_padding_base@@Base+0x20a8>
  40f5fd:	vmulsd xmm0,xmm1,xmm0
  40f601:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f606:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f608:	vmovsd xmm1,QWORD PTR [rbp-0x10]
  40f60d:	vmovsd xmm0,QWORD PTR [rip+0x6e2b]        # 416440 <flatcc_builder_padding_base@@Base+0x20a0>
  40f615:	vmulsd xmm0,xmm1,xmm0
  40f619:	vmovsd QWORD PTR [rbp-0x10],xmm0
  40f61e:	jmp    40f621 <grisu3_diy_fp_encode_double@@Base+0x944>
  40f620:	nop
  40f621:	mov    rax,QWORD PTR [rbp-0x50]
  40f625:	vmovsd xmm0,QWORD PTR [rbp-0x10]
  40f62a:	vmovsd QWORD PTR [rax],xmm0
  40f62e:	jmp    40f686 <grisu3_diy_fp_encode_double@@Base+0x9a9>
  40f630:	mov    rcx,QWORD PTR [rbp-0x50]
  40f634:	mov    edx,DWORD PTR [rbp-0x44]
  40f637:	mov    esi,DWORD PTR [rbp-0x38]
  40f63a:	mov    rax,QWORD PTR [rbp-0x40]
  40f63e:	mov    r8,rcx
  40f641:	mov    ecx,DWORD PTR [rbp+0x10]
  40f644:	mov    rdi,rax
  40f647:	call   40ecdd <grisu3_diy_fp_encode_double@@Base>
  40f64c:	test   eax,eax
  40f64e:	jne    40f685 <grisu3_diy_fp_encode_double@@Base+0x9a8>
  40f650:	lea    rdx,[rbp-0x18]
  40f654:	mov    rax,QWORD PTR [rbp-0x28]
  40f658:	mov    rsi,rdx
  40f65b:	mov    rdi,rax
  40f65e:	call   403040 <strtod@plt>
  40f663:	vmovq  rdx,xmm0
  40f668:	mov    rax,QWORD PTR [rbp-0x50]
  40f66c:	mov    QWORD PTR [rax],rdx
  40f66f:	mov    rax,QWORD PTR [rbp-0x18]
  40f673:	cmp    rax,QWORD PTR [rbp-0x30]
  40f677:	jae    40f67f <grisu3_diy_fp_encode_double@@Base+0x9a2>
  40f679:	mov    rax,QWORD PTR [rbp-0x18]
  40f67d:	jmp    40f6ac <grisu3_diy_fp_encode_double@@Base+0x9cf>
  40f67f:	mov    rax,QWORD PTR [rbp-0x30]
  40f683:	jmp    40f6ac <grisu3_diy_fp_encode_double@@Base+0x9cf>
  40f685:	nop
  40f686:	cmp    DWORD PTR [rbp-0x34],0x0
  40f68a:	je     40f6a8 <grisu3_diy_fp_encode_double@@Base+0x9cb>
  40f68c:	mov    rax,QWORD PTR [rbp-0x50]
  40f690:	vmovsd xmm1,QWORD PTR [rax]
  40f694:	vmovsd xmm0,QWORD PTR [rip+0x6d84]        # 416420 <flatcc_builder_padding_base@@Base+0x2080>
  40f69c:	vxorpd xmm0,xmm0,xmm1
  40f6a0:	mov    rax,QWORD PTR [rbp-0x50]
  40f6a4:	vmovsd QWORD PTR [rax],xmm0
  40f6a8:	mov    rax,QWORD PTR [rbp-0x30]
  40f6ac:	mov    rcx,QWORD PTR [rbp-0x8]
  40f6b0:	xor    rcx,QWORD PTR fs:0x28
  40f6b9:	je     40f6c0 <grisu3_diy_fp_encode_double@@Base+0x9e3>
  40f6bb:	call   403060 <__stack_chk_fail@plt>
  40f6c0:	leave  
  40f6c1:	ret    
  40f6c2:	push   rbp
  40f6c3:	mov    rbp,rsp
  40f6c6:	mov    QWORD PTR [rbp-0x8],rdi
  40f6ca:	mov    QWORD PTR [rbp-0x10],rsi
  40f6ce:	mov    DWORD PTR [rbp-0x14],edx
  40f6d1:	mov    QWORD PTR [rbp-0x20],rcx
  40f6d5:	mov    rax,QWORD PTR [rbp-0x20]
  40f6d9:	vxorpd xmm0,xmm0,xmm0
  40f6dd:	vmovsd QWORD PTR [rax],xmm0
  40f6e1:	mov    rax,QWORD PTR [rbp-0x8]
  40f6e5:	pop    rbp
  40f6e6:	ret    
  40f6e7:	push   rbp
  40f6e8:	mov    rbp,rsp
  40f6eb:	sub    rsp,0x60
  40f6ef:	mov    QWORD PTR [rbp-0x48],rdi
  40f6f3:	mov    DWORD PTR [rbp-0x4c],esi
  40f6f6:	mov    QWORD PTR [rbp-0x58],rdx
  40f6fa:	mov    DWORD PTR [rbp-0x38],0x0
  40f701:	mov    DWORD PTR [rbp-0x34],0x0
  40f708:	mov    QWORD PTR [rbp-0x18],0x0
  40f710:	mov    DWORD PTR [rbp-0x30],0x0
  40f717:	mov    DWORD PTR [rbp-0x2c],0x0
  40f71e:	mov    DWORD PTR [rbp-0x28],0x0
  40f725:	mov    DWORD PTR [rbp-0x24],0x0
  40f72c:	mov    rax,QWORD PTR [rbp-0x58]
  40f730:	vxorpd xmm0,xmm0,xmm0
  40f734:	vmovsd QWORD PTR [rax],xmm0
  40f738:	mov    eax,DWORD PTR [rbp-0x4c]
  40f73b:	cdqe   
  40f73d:	lea    rdx,[rax+0x1]
  40f741:	mov    rax,QWORD PTR [rbp-0x48]
  40f745:	add    rax,rdx
  40f748:	mov    QWORD PTR [rbp-0x20],rax
  40f74c:	cmp    DWORD PTR [rbp-0x4c],0x3e8
  40f753:	jle    40f763 <grisu3_diy_fp_encode_double@@Base+0xa86>
  40f755:	mov    rax,QWORD PTR [rbp-0x48]
  40f759:	add    rax,0x3e9
  40f75f:	mov    QWORD PTR [rbp-0x20],rax
  40f763:	mov    rax,QWORD PTR [rbp-0x48]
  40f767:	cmp    rax,QWORD PTR [rbp-0x20]
  40f76b:	jne    40f776 <grisu3_diy_fp_encode_double@@Base+0xa99>
  40f76d:	mov    rax,QWORD PTR [rbp-0x48]
  40f771:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40f776:	mov    rax,QWORD PTR [rbp-0x48]
  40f77a:	mov    QWORD PTR [rbp-0x10],rax
  40f77e:	mov    rax,QWORD PTR [rbp-0x48]
  40f782:	movzx  eax,BYTE PTR [rax]
  40f785:	cmp    al,0x2d
  40f787:	jne    40f7a9 <grisu3_diy_fp_encode_double@@Base+0xacc>
  40f789:	add    QWORD PTR [rbp-0x48],0x1
  40f78e:	mov    DWORD PTR [rbp-0x38],0x1
  40f795:	mov    rax,QWORD PTR [rbp-0x48]
  40f799:	cmp    rax,QWORD PTR [rbp-0x20]
  40f79d:	jne    40f7a9 <grisu3_diy_fp_encode_double@@Base+0xacc>
  40f79f:	mov    eax,0x0
  40f7a4:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40f7a9:	mov    rax,QWORD PTR [rbp-0x48]
  40f7ad:	movzx  eax,BYTE PTR [rax]
  40f7b0:	cmp    al,0x30
  40f7b2:	jne    40f824 <grisu3_diy_fp_encode_double@@Base+0xb47>
  40f7b4:	add    QWORD PTR [rbp-0x48],0x1
  40f7b9:	mov    rax,QWORD PTR [rbp-0x48]
  40f7bd:	cmp    rax,QWORD PTR [rbp-0x20]
  40f7c1:	je     40f80d <grisu3_diy_fp_encode_double@@Base+0xb30>
  40f7c3:	mov    rax,QWORD PTR [rbp-0x48]
  40f7c7:	movzx  eax,BYTE PTR [rax]
  40f7ca:	or     eax,0x20
  40f7cd:	cmp    al,0x78
  40f7cf:	jne    40f80d <grisu3_diy_fp_encode_double@@Base+0xb30>
  40f7d1:	mov    rcx,QWORD PTR [rbp-0x58]
  40f7d5:	mov    edx,DWORD PTR [rbp-0x38]
  40f7d8:	mov    rsi,QWORD PTR [rbp-0x20]
  40f7dc:	mov    rax,QWORD PTR [rbp-0x48]
  40f7e0:	mov    rdi,rax
  40f7e3:	call   40f6c2 <grisu3_diy_fp_encode_double@@Base+0x9e5>
  40f7e8:	mov    QWORD PTR [rbp-0x8],rax
  40f7ec:	mov    rax,QWORD PTR [rbp-0x8]
  40f7f0:	cmp    rax,QWORD PTR [rbp-0x48]
  40f7f4:	jne    40f7ff <grisu3_diy_fp_encode_double@@Base+0xb22>
  40f7f6:	mov    rax,QWORD PTR [rbp-0x10]
  40f7fa:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40f7ff:	mov    rax,QWORD PTR [rbp-0x8]
  40f803:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40f808:	add    QWORD PTR [rbp-0x48],0x1
  40f80d:	mov    rax,QWORD PTR [rbp-0x48]
  40f811:	cmp    rax,QWORD PTR [rbp-0x20]
  40f815:	je     40f86e <grisu3_diy_fp_encode_double@@Base+0xb91>
  40f817:	mov    rax,QWORD PTR [rbp-0x48]
  40f81b:	movzx  eax,BYTE PTR [rax]
  40f81e:	cmp    al,0x30
  40f820:	je     40f808 <grisu3_diy_fp_encode_double@@Base+0xb2b>
  40f822:	jmp    40f86e <grisu3_diy_fp_encode_double@@Base+0xb91>
  40f824:	mov    rax,QWORD PTR [rbp-0x48]
  40f828:	movzx  eax,BYTE PTR [rax]
  40f82b:	cmp    al,0x30
  40f82d:	jle    40f83a <grisu3_diy_fp_encode_double@@Base+0xb5d>
  40f82f:	mov    rax,QWORD PTR [rbp-0x48]
  40f833:	movzx  eax,BYTE PTR [rax]
  40f836:	cmp    al,0x39
  40f838:	jle    40f853 <grisu3_diy_fp_encode_double@@Base+0xb76>
  40f83a:	cmp    DWORD PTR [rbp-0x38],0x0
  40f83e:	jne    40f849 <grisu3_diy_fp_encode_double@@Base+0xb6c>
  40f840:	mov    rax,QWORD PTR [rbp-0x10]
  40f844:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40f849:	mov    eax,0x0
  40f84e:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40f853:	mov    rax,QWORD PTR [rbp-0x48]
  40f857:	lea    rdx,[rax+0x1]
  40f85b:	mov    QWORD PTR [rbp-0x48],rdx
  40f85f:	movzx  eax,BYTE PTR [rax]
  40f862:	movsx  eax,al
  40f865:	sub    eax,0x30
  40f868:	cdqe   
  40f86a:	mov    QWORD PTR [rbp-0x18],rax
  40f86e:	mov    rax,QWORD PTR [rbp-0x48]
  40f872:	mov    QWORD PTR [rbp-0x8],rax
  40f876:	jmp    40f8d6 <grisu3_diy_fp_encode_double@@Base+0xbf9>
  40f878:	movabs rax,0x1999999999999998
  40f882:	cmp    QWORD PTR [rbp-0x18],rax
  40f886:	jbe    40f8a4 <grisu3_diy_fp_encode_double@@Base+0xbc7>
  40f888:	mov    rax,QWORD PTR [rbp-0x48]
  40f88c:	movzx  eax,BYTE PTR [rax]
  40f88f:	cmp    al,0x34
  40f891:	setg   al
  40f894:	movzx  eax,al
  40f897:	add    QWORD PTR [rbp-0x18],rax
  40f89b:	mov    DWORD PTR [rbp-0x24],0x1
  40f8a2:	jmp    40f8f6 <grisu3_diy_fp_encode_double@@Base+0xc19>
  40f8a4:	mov    rdx,QWORD PTR [rbp-0x18]
  40f8a8:	mov    rax,rdx
  40f8ab:	shl    rax,0x2
  40f8af:	add    rax,rdx
  40f8b2:	add    rax,rax
  40f8b5:	mov    rcx,rax
  40f8b8:	mov    rax,QWORD PTR [rbp-0x48]
  40f8bc:	lea    rdx,[rax+0x1]
  40f8c0:	mov    QWORD PTR [rbp-0x48],rdx
  40f8c4:	movzx  eax,BYTE PTR [rax]
  40f8c7:	movsx  rax,al
  40f8cb:	add    rax,rcx
  40f8ce:	sub    rax,0x30
  40f8d2:	mov    QWORD PTR [rbp-0x18],rax
  40f8d6:	mov    rax,QWORD PTR [rbp-0x48]
  40f8da:	cmp    rax,QWORD PTR [rbp-0x20]
  40f8de:	je     40f8f6 <grisu3_diy_fp_encode_double@@Base+0xc19>
  40f8e0:	mov    rax,QWORD PTR [rbp-0x48]
  40f8e4:	movzx  eax,BYTE PTR [rax]
  40f8e7:	cmp    al,0x2f
  40f8e9:	jle    40f8f6 <grisu3_diy_fp_encode_double@@Base+0xc19>
  40f8eb:	mov    rax,QWORD PTR [rbp-0x48]
  40f8ef:	movzx  eax,BYTE PTR [rax]
  40f8f2:	cmp    al,0x39
  40f8f4:	jle    40f878 <grisu3_diy_fp_encode_double@@Base+0xb9b>
  40f8f6:	mov    rdx,QWORD PTR [rbp-0x48]
  40f8fa:	mov    rax,QWORD PTR [rbp-0x8]
  40f8fe:	sub    rdx,rax
  40f901:	mov    rax,rdx
  40f904:	mov    DWORD PTR [rbp-0x28],eax
  40f907:	jmp    40f912 <grisu3_diy_fp_encode_double@@Base+0xc35>
  40f909:	add    DWORD PTR [rbp-0x30],0x1
  40f90d:	add    QWORD PTR [rbp-0x48],0x1
  40f912:	mov    rax,QWORD PTR [rbp-0x48]
  40f916:	cmp    rax,QWORD PTR [rbp-0x20]
  40f91a:	je     40f927 <grisu3_diy_fp_encode_double@@Base+0xc4a>
  40f91c:	mov    rax,QWORD PTR [rbp-0x48]
  40f920:	movzx  eax,BYTE PTR [rax]
  40f923:	cmp    al,0x30
  40f925:	je     40f909 <grisu3_diy_fp_encode_double@@Base+0xc2c>
  40f927:	mov    rax,QWORD PTR [rbp-0x48]
  40f92b:	cmp    rax,QWORD PTR [rbp-0x20]
  40f92f:	je     40f982 <grisu3_diy_fp_encode_double@@Base+0xca5>
  40f931:	mov    rax,QWORD PTR [rbp-0x48]
  40f935:	movzx  eax,BYTE PTR [rax]
  40f938:	cmp    al,0x30
  40f93a:	jle    40f982 <grisu3_diy_fp_encode_double@@Base+0xca5>
  40f93c:	mov    rax,QWORD PTR [rbp-0x48]
  40f940:	movzx  eax,BYTE PTR [rax]
  40f943:	cmp    al,0x39
  40f945:	jg     40f982 <grisu3_diy_fp_encode_double@@Base+0xca5>
  40f947:	mov    DWORD PTR [rbp-0x24],0x1
  40f94e:	add    DWORD PTR [rbp-0x30],0x1
  40f952:	add    QWORD PTR [rbp-0x48],0x1
  40f957:	jmp    40f962 <grisu3_diy_fp_encode_double@@Base+0xc85>
  40f959:	add    DWORD PTR [rbp-0x30],0x1
  40f95d:	add    QWORD PTR [rbp-0x48],0x1
  40f962:	mov    rax,QWORD PTR [rbp-0x48]
  40f966:	cmp    rax,QWORD PTR [rbp-0x20]
  40f96a:	je     40f982 <grisu3_diy_fp_encode_double@@Base+0xca5>
  40f96c:	mov    rax,QWORD PTR [rbp-0x48]
  40f970:	movzx  eax,BYTE PTR [rax]
  40f973:	cmp    al,0x2f
  40f975:	jle    40f982 <grisu3_diy_fp_encode_double@@Base+0xca5>
  40f977:	mov    rax,QWORD PTR [rbp-0x48]
  40f97b:	movzx  eax,BYTE PTR [rax]
  40f97e:	cmp    al,0x39
  40f980:	jle    40f959 <grisu3_diy_fp_encode_double@@Base+0xc7c>
  40f982:	mov    rax,QWORD PTR [rbp-0x48]
  40f986:	cmp    rax,QWORD PTR [rbp-0x20]
  40f98a:	je     40fadf <grisu3_diy_fp_encode_double@@Base+0xe02>
  40f990:	mov    rax,QWORD PTR [rbp-0x48]
  40f994:	movzx  eax,BYTE PTR [rax]
  40f997:	cmp    al,0x2e
  40f999:	jne    40fadf <grisu3_diy_fp_encode_double@@Base+0xe02>
  40f99f:	add    QWORD PTR [rbp-0x48],0x1
  40f9a4:	mov    rax,QWORD PTR [rbp-0x48]
  40f9a8:	mov    QWORD PTR [rbp-0x8],rax
  40f9ac:	mov    rax,QWORD PTR [rbp-0x48]
  40f9b0:	movzx  eax,BYTE PTR [rax]
  40f9b3:	cmp    al,0x2f
  40f9b5:	jle    40f9c2 <grisu3_diy_fp_encode_double@@Base+0xce5>
  40f9b7:	mov    rax,QWORD PTR [rbp-0x48]
  40f9bb:	movzx  eax,BYTE PTR [rax]
  40f9be:	cmp    al,0x39
  40f9c0:	jle    40fa34 <grisu3_diy_fp_encode_double@@Base+0xd57>
  40f9c2:	mov    eax,0x0
  40f9c7:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40f9cc:	movabs rax,0x1999999999999998
  40f9d6:	cmp    QWORD PTR [rbp-0x18],rax
  40f9da:	jbe    40f9fe <grisu3_diy_fp_encode_double@@Base+0xd21>
  40f9dc:	cmp    DWORD PTR [rbp-0x24],0x0
  40f9e0:	jne    40fa5a <grisu3_diy_fp_encode_double@@Base+0xd7d>
  40f9e2:	mov    rax,QWORD PTR [rbp-0x48]
  40f9e6:	movzx  eax,BYTE PTR [rax]
  40f9e9:	cmp    al,0x34
  40f9eb:	setg   al
  40f9ee:	movzx  eax,al
  40f9f1:	add    QWORD PTR [rbp-0x18],rax
  40f9f5:	mov    DWORD PTR [rbp-0x24],0x1
  40f9fc:	jmp    40fa5a <grisu3_diy_fp_encode_double@@Base+0xd7d>
  40f9fe:	mov    rdx,QWORD PTR [rbp-0x18]
  40fa02:	mov    rax,rdx
  40fa05:	shl    rax,0x2
  40fa09:	add    rax,rdx
  40fa0c:	add    rax,rax
  40fa0f:	mov    rcx,rax
  40fa12:	mov    rax,QWORD PTR [rbp-0x48]
  40fa16:	lea    rdx,[rax+0x1]
  40fa1a:	mov    QWORD PTR [rbp-0x48],rdx
  40fa1e:	movzx  eax,BYTE PTR [rax]
  40fa21:	movsx  rax,al
  40fa25:	add    rax,rcx
  40fa28:	sub    rax,0x30
  40fa2c:	mov    QWORD PTR [rbp-0x18],rax
  40fa30:	sub    DWORD PTR [rbp-0x30],0x1
  40fa34:	mov    rax,QWORD PTR [rbp-0x48]
  40fa38:	cmp    rax,QWORD PTR [rbp-0x20]
  40fa3c:	je     40fa5b <grisu3_diy_fp_encode_double@@Base+0xd7e>
  40fa3e:	mov    rax,QWORD PTR [rbp-0x48]
  40fa42:	movzx  eax,BYTE PTR [rax]
  40fa45:	cmp    al,0x2f
  40fa47:	jle    40fa5b <grisu3_diy_fp_encode_double@@Base+0xd7e>
  40fa49:	mov    rax,QWORD PTR [rbp-0x48]
  40fa4d:	movzx  eax,BYTE PTR [rax]
  40fa50:	cmp    al,0x39
  40fa52:	jle    40f9cc <grisu3_diy_fp_encode_double@@Base+0xcef>
  40fa58:	jmp    40fa5b <grisu3_diy_fp_encode_double@@Base+0xd7e>
  40fa5a:	nop
  40fa5b:	mov    rdx,QWORD PTR [rbp-0x48]
  40fa5f:	mov    rax,QWORD PTR [rbp-0x8]
  40fa63:	sub    rdx,rax
  40fa66:	mov    rax,rdx
  40fa69:	add    DWORD PTR [rbp-0x28],eax
  40fa6c:	jmp    40fa77 <grisu3_diy_fp_encode_double@@Base+0xd9a>
  40fa6e:	add    DWORD PTR [rbp-0x30],0x1
  40fa72:	add    QWORD PTR [rbp-0x48],0x1
  40fa77:	mov    rax,QWORD PTR [rbp-0x48]
  40fa7b:	cmp    rax,QWORD PTR [rbp-0x20]
  40fa7f:	je     40fa8c <grisu3_diy_fp_encode_double@@Base+0xdaf>
  40fa81:	mov    rax,QWORD PTR [rbp-0x48]
  40fa85:	movzx  eax,BYTE PTR [rax]
  40fa88:	cmp    al,0x30
  40fa8a:	je     40fa6e <grisu3_diy_fp_encode_double@@Base+0xd91>
  40fa8c:	mov    rax,QWORD PTR [rbp-0x48]
  40fa90:	cmp    rax,QWORD PTR [rbp-0x20]
  40fa94:	je     40fadf <grisu3_diy_fp_encode_double@@Base+0xe02>
  40fa96:	mov    rax,QWORD PTR [rbp-0x48]
  40fa9a:	movzx  eax,BYTE PTR [rax]
  40fa9d:	cmp    al,0x30
  40fa9f:	jle    40fadf <grisu3_diy_fp_encode_double@@Base+0xe02>
  40faa1:	mov    rax,QWORD PTR [rbp-0x48]
  40faa5:	movzx  eax,BYTE PTR [rax]
  40faa8:	cmp    al,0x39
  40faaa:	jg     40fadf <grisu3_diy_fp_encode_double@@Base+0xe02>
  40faac:	mov    DWORD PTR [rbp-0x24],0x1
  40fab3:	add    QWORD PTR [rbp-0x48],0x1
  40fab8:	jmp    40fabf <grisu3_diy_fp_encode_double@@Base+0xde2>
  40faba:	add    QWORD PTR [rbp-0x48],0x1
  40fabf:	mov    rax,QWORD PTR [rbp-0x48]
  40fac3:	cmp    rax,QWORD PTR [rbp-0x20]
  40fac7:	je     40fadf <grisu3_diy_fp_encode_double@@Base+0xe02>
  40fac9:	mov    rax,QWORD PTR [rbp-0x48]
  40facd:	movzx  eax,BYTE PTR [rax]
  40fad0:	cmp    al,0x2f
  40fad2:	jle    40fadf <grisu3_diy_fp_encode_double@@Base+0xe02>
  40fad4:	mov    rax,QWORD PTR [rbp-0x48]
  40fad8:	movzx  eax,BYTE PTR [rax]
  40fadb:	cmp    al,0x39
  40fadd:	jle    40faba <grisu3_diy_fp_encode_double@@Base+0xddd>
  40fadf:	mov    eax,DWORD PTR [rbp-0x28]
  40fae2:	add    DWORD PTR [rbp-0x30],eax
  40fae5:	mov    rax,QWORD PTR [rbp-0x48]
  40fae9:	cmp    rax,QWORD PTR [rbp-0x20]
  40faed:	je     40fbff <grisu3_diy_fp_encode_double@@Base+0xf22>
  40faf3:	mov    rax,QWORD PTR [rbp-0x48]
  40faf7:	movzx  eax,BYTE PTR [rax]
  40fafa:	or     eax,0x20
  40fafd:	cmp    al,0x65
  40faff:	jne    40fbff <grisu3_diy_fp_encode_double@@Base+0xf22>
  40fb05:	mov    rdx,QWORD PTR [rbp-0x20]
  40fb09:	mov    rax,QWORD PTR [rbp-0x48]
  40fb0d:	sub    rdx,rax
  40fb10:	mov    rax,rdx
  40fb13:	cmp    rax,0x1
  40fb17:	jg     40fb23 <grisu3_diy_fp_encode_double@@Base+0xe46>
  40fb19:	mov    eax,0x0
  40fb1e:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40fb23:	add    QWORD PTR [rbp-0x48],0x1
  40fb28:	mov    rax,QWORD PTR [rbp-0x48]
  40fb2c:	movzx  eax,BYTE PTR [rax]
  40fb2f:	cmp    al,0x2b
  40fb31:	jne    40fb4c <grisu3_diy_fp_encode_double@@Base+0xe6f>
  40fb33:	add    QWORD PTR [rbp-0x48],0x1
  40fb38:	mov    rax,QWORD PTR [rbp-0x48]
  40fb3c:	cmp    rax,QWORD PTR [rbp-0x20]
  40fb40:	jne    40fb77 <grisu3_diy_fp_encode_double@@Base+0xe9a>
  40fb42:	mov    eax,0x0
  40fb47:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40fb4c:	mov    rax,QWORD PTR [rbp-0x48]
  40fb50:	movzx  eax,BYTE PTR [rax]
  40fb53:	cmp    al,0x2d
  40fb55:	jne    40fb77 <grisu3_diy_fp_encode_double@@Base+0xe9a>
  40fb57:	mov    DWORD PTR [rbp-0x34],0x1
  40fb5e:	add    QWORD PTR [rbp-0x48],0x1
  40fb63:	mov    rax,QWORD PTR [rbp-0x48]
  40fb67:	cmp    rax,QWORD PTR [rbp-0x20]
  40fb6b:	jne    40fb77 <grisu3_diy_fp_encode_double@@Base+0xe9a>
  40fb6d:	mov    eax,0x0
  40fb72:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40fb77:	mov    rax,QWORD PTR [rbp-0x48]
  40fb7b:	movzx  eax,BYTE PTR [rax]
  40fb7e:	cmp    al,0x2f
  40fb80:	jle    40fb8d <grisu3_diy_fp_encode_double@@Base+0xeb0>
  40fb82:	mov    rax,QWORD PTR [rbp-0x48]
  40fb86:	movzx  eax,BYTE PTR [rax]
  40fb89:	cmp    al,0x39
  40fb8b:	jle    40fb97 <grisu3_diy_fp_encode_double@@Base+0xeba>
  40fb8d:	mov    eax,0x0
  40fb92:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40fb97:	mov    rax,QWORD PTR [rbp-0x48]
  40fb9b:	lea    rdx,[rax+0x1]
  40fb9f:	mov    QWORD PTR [rbp-0x48],rdx
  40fba3:	movzx  eax,BYTE PTR [rax]
  40fba6:	movsx  eax,al
  40fba9:	sub    eax,0x30
  40fbac:	mov    DWORD PTR [rbp-0x2c],eax
  40fbaf:	jmp    40fbdf <grisu3_diy_fp_encode_double@@Base+0xf02>
  40fbb1:	cmp    DWORD PTR [rbp-0x2c],0x7fff
  40fbb8:	jg     40fbda <grisu3_diy_fp_encode_double@@Base+0xefd>
  40fbba:	mov    edx,DWORD PTR [rbp-0x2c]
  40fbbd:	mov    eax,edx
  40fbbf:	shl    eax,0x2
  40fbc2:	add    eax,edx
  40fbc4:	add    eax,eax
  40fbc6:	mov    edx,eax
  40fbc8:	mov    rax,QWORD PTR [rbp-0x48]
  40fbcc:	movzx  eax,BYTE PTR [rax]
  40fbcf:	movsx  eax,al
  40fbd2:	add    eax,edx
  40fbd4:	sub    eax,0x30
  40fbd7:	mov    DWORD PTR [rbp-0x2c],eax
  40fbda:	add    QWORD PTR [rbp-0x48],0x1
  40fbdf:	mov    rax,QWORD PTR [rbp-0x48]
  40fbe3:	cmp    rax,QWORD PTR [rbp-0x20]
  40fbe7:	je     40fbff <grisu3_diy_fp_encode_double@@Base+0xf22>
  40fbe9:	mov    rax,QWORD PTR [rbp-0x48]
  40fbed:	movzx  eax,BYTE PTR [rax]
  40fbf0:	cmp    al,0x2f
  40fbf2:	jle    40fbff <grisu3_diy_fp_encode_double@@Base+0xf22>
  40fbf4:	mov    rax,QWORD PTR [rbp-0x48]
  40fbf8:	movzx  eax,BYTE PTR [rax]
  40fbfb:	cmp    al,0x39
  40fbfd:	jle    40fbb1 <grisu3_diy_fp_encode_double@@Base+0xed4>
  40fbff:	cmp    DWORD PTR [rbp-0x34],0x0
  40fc03:	je     40fc0c <grisu3_diy_fp_encode_double@@Base+0xf2f>
  40fc05:	mov    eax,DWORD PTR [rbp-0x2c]
  40fc08:	neg    eax
  40fc0a:	jmp    40fc0f <grisu3_diy_fp_encode_double@@Base+0xf32>
  40fc0c:	mov    eax,DWORD PTR [rbp-0x2c]
  40fc0f:	add    DWORD PTR [rbp-0x30],eax
  40fc12:	mov    rax,QWORD PTR [rbp-0x48]
  40fc16:	cmp    rax,QWORD PTR [rbp-0x20]
  40fc1a:	jne    40fc23 <grisu3_diy_fp_encode_double@@Base+0xf46>
  40fc1c:	mov    eax,0x0
  40fc21:	jmp    40fc4d <grisu3_diy_fp_encode_double@@Base+0xf70>
  40fc23:	mov    r9d,DWORD PTR [rbp-0x28]
  40fc27:	mov    r8d,DWORD PTR [rbp-0x30]
  40fc2b:	mov    rcx,QWORD PTR [rbp-0x18]
  40fc2f:	mov    edx,DWORD PTR [rbp-0x38]
  40fc32:	mov    rsi,QWORD PTR [rbp-0x48]
  40fc36:	mov    rax,QWORD PTR [rbp-0x10]
  40fc3a:	push   QWORD PTR [rbp-0x58]
  40fc3d:	mov    edi,DWORD PTR [rbp-0x24]
  40fc40:	push   rdi
  40fc41:	mov    rdi,rax
  40fc44:	call   40f070 <grisu3_diy_fp_encode_double@@Base+0x393>
  40fc49:	add    rsp,0x10
  40fc4d:	leave  
  40fc4e:	ret    
  40fc4f:	push   rbp
  40fc50:	mov    rbp,rsp
  40fc53:	sub    rsp,0x20
  40fc57:	mov    QWORD PTR [rbp-0x8],rdi
  40fc5b:	mov    DWORD PTR [rbp-0xc],esi
  40fc5e:	mov    QWORD PTR [rbp-0x18],rdx
  40fc62:	mov    rdx,QWORD PTR [rbp-0x18]
  40fc66:	mov    ecx,DWORD PTR [rbp-0xc]
  40fc69:	mov    rax,QWORD PTR [rbp-0x8]
  40fc6d:	mov    esi,ecx
  40fc6f:	mov    rdi,rax
  40fc72:	call   40f6e7 <grisu3_diy_fp_encode_double@@Base+0xa0a>
  40fc77:	leave  
  40fc78:	ret    
  40fc79:	push   rbp
  40fc7a:	mov    rbp,rsp
  40fc7d:	sub    rsp,0x40
  40fc81:	mov    QWORD PTR [rbp-0x28],rdi
  40fc85:	mov    DWORD PTR [rbp-0x2c],esi
  40fc88:	mov    QWORD PTR [rbp-0x38],rdx
  40fc8c:	mov    rax,QWORD PTR fs:0x28
  40fc95:	mov    QWORD PTR [rbp-0x8],rax
  40fc99:	xor    eax,eax
  40fc9b:	mov    DWORD PTR [rbp-0x1c],0x7f800000
  40fca2:	lea    rdx,[rbp-0x18]
  40fca6:	mov    ecx,DWORD PTR [rbp-0x2c]
  40fca9:	mov    rax,QWORD PTR [rbp-0x28]
  40fcad:	mov    esi,ecx
  40fcaf:	mov    rdi,rax
  40fcb2:	call   40fc4f <grisu3_diy_fp_encode_double@@Base+0xf72>
  40fcb7:	mov    QWORD PTR [rbp-0x10],rax
  40fcbb:	vmovsd xmm0,QWORD PTR [rbp-0x18]
  40fcc0:	vcvtsd2ss xmm0,xmm0,xmm0
  40fcc4:	mov    rax,QWORD PTR [rbp-0x38]
  40fcc8:	vmovss DWORD PTR [rax],xmm0
  40fccc:	mov    rax,QWORD PTR [rbp-0x38]
  40fcd0:	vmovss xmm1,DWORD PTR [rax]
  40fcd4:	vmovss xmm0,DWORD PTR [rip+0x6814]        # 4164f0 <flatcc_builder_padding_base@@Base+0x2150>
  40fcdc:	vandps xmm0,xmm0,xmm1
  40fce0:	vucomiss xmm0,DWORD PTR [rip+0x6818]        # 416500 <flatcc_builder_padding_base@@Base+0x2160>
  40fce8:	setbe  al
  40fceb:	xor    eax,0x1
  40fcee:	test   al,al
  40fcf0:	je     40fcf9 <grisu3_diy_fp_encode_double@@Base+0x101c>
  40fcf2:	mov    eax,0x1
  40fcf7:	jmp    40fcfe <grisu3_diy_fp_encode_double@@Base+0x1021>
  40fcf9:	mov    eax,0x0
  40fcfe:	test   al,al
  40fd00:	je     40fd37 <grisu3_diy_fp_encode_double@@Base+0x105a>
  40fd02:	vmovsd xmm1,QWORD PTR [rbp-0x18]
  40fd07:	vxorpd xmm0,xmm0,xmm0
  40fd0b:	vucomisd xmm0,xmm1
  40fd0f:	jbe    40fd24 <grisu3_diy_fp_encode_double@@Base+0x1047>
  40fd11:	vmovss xmm1,DWORD PTR [rbp-0x1c]
  40fd16:	vmovss xmm0,DWORD PTR [rip+0x66f2]        # 416410 <flatcc_builder_padding_base@@Base+0x2070>
  40fd1e:	vxorps xmm0,xmm0,xmm1
  40fd22:	jmp    40fd29 <grisu3_diy_fp_encode_double@@Base+0x104c>
  40fd24:	vmovss xmm0,DWORD PTR [rbp-0x1c]
  40fd29:	mov    rax,QWORD PTR [rbp-0x38]
  40fd2d:	vmovss DWORD PTR [rax],xmm0
  40fd31:	mov    rax,QWORD PTR [rbp-0x28]
  40fd35:	jmp    40fd3b <grisu3_diy_fp_encode_double@@Base+0x105e>
  40fd37:	mov    rax,QWORD PTR [rbp-0x10]
  40fd3b:	mov    rcx,QWORD PTR [rbp-0x8]
  40fd3f:	xor    rcx,QWORD PTR fs:0x28
  40fd48:	je     40fd4f <grisu3_diy_fp_encode_double@@Base+0x1072>
  40fd4a:	call   403060 <__stack_chk_fail@plt>
  40fd4f:	leave  
  40fd50:	ret    
  40fd51:	push   rbp
  40fd52:	mov    rbp,rsp
  40fd55:	mov    DWORD PTR [rbp-0x4],edi
  40fd58:	cmp    DWORD PTR [rbp-0x4],0x5
  40fd5c:	ja     40fdb8 <grisu3_diy_fp_encode_double@@Base+0x10db>
  40fd5e:	mov    eax,DWORD PTR [rbp-0x4]
  40fd61:	lea    rdx,[rax*4+0x0]
  40fd69:	lea    rax,[rip+0x5c0c]        # 41597c <flatcc_builder_padding_base@@Base+0x15dc>
  40fd70:	mov    eax,DWORD PTR [rdx+rax*1]
  40fd73:	movsxd rdx,eax
  40fd76:	lea    rax,[rip+0x5bff]        # 41597c <flatcc_builder_padding_base@@Base+0x15dc>
  40fd7d:	add    rax,rdx
  40fd80:	jmp    rax
  40fd82:	lea    rax,[rip+0x5b87]        # 415910 <flatcc_builder_padding_base@@Base+0x1570>
  40fd89:	jmp    40fdbf <grisu3_diy_fp_encode_double@@Base+0x10e2>
  40fd8b:	lea    rax,[rip+0x5b81]        # 415913 <flatcc_builder_padding_base@@Base+0x1573>
  40fd92:	jmp    40fdbf <grisu3_diy_fp_encode_double@@Base+0x10e2>
  40fd94:	lea    rax,[rip+0x5b89]        # 415924 <flatcc_builder_padding_base@@Base+0x1584>
  40fd9b:	jmp    40fdbf <grisu3_diy_fp_encode_double@@Base+0x10e2>
  40fd9d:	lea    rax,[rip+0x5b8d]        # 415931 <flatcc_builder_padding_base@@Base+0x1591>
  40fda4:	jmp    40fdbf <grisu3_diy_fp_encode_double@@Base+0x10e2>
  40fda6:	lea    rax,[rip+0x5b95]        # 415942 <flatcc_builder_padding_base@@Base+0x15a2>
  40fdad:	jmp    40fdbf <grisu3_diy_fp_encode_double@@Base+0x10e2>
  40fdaf:	lea    rax,[rip+0x5ba0]        # 415956 <flatcc_builder_padding_base@@Base+0x15b6>
  40fdb6:	jmp    40fdbf <grisu3_diy_fp_encode_double@@Base+0x10e2>
  40fdb8:	lea    rax,[rip+0x5bac]        # 41596b <flatcc_builder_padding_base@@Base+0x15cb>
  40fdbf:	pop    rbp
  40fdc0:	ret    
  40fdc1:	push   rbp
  40fdc2:	mov    rbp,rsp
  40fdc5:	mov    QWORD PTR [rbp-0x28],rdi
  40fdc9:	mov    DWORD PTR [rbp-0x2c],esi
  40fdcc:	mov    rcx,QWORD PTR [rbp-0x28]
  40fdd0:	movabs rdx,0xaaaaaaaaaaaaaaab
  40fdda:	mov    rax,rcx
  40fddd:	mul    rdx
  40fde0:	shr    rdx,1
  40fde3:	mov    rax,rdx
  40fde6:	add    rax,rax
  40fde9:	add    rax,rdx
  40fdec:	sub    rcx,rax
  40fdef:	mov    rax,rcx
  40fdf2:	mov    QWORD PTR [rbp-0x8],rax
  40fdf6:	mov    rax,QWORD PTR [rbp-0x28]
  40fdfa:	shl    rax,0x2
  40fdfe:	movabs rdx,0xaaaaaaaaaaaaaaab
  40fe08:	mul    rdx
  40fe0b:	mov    rax,rdx
  40fe0e:	shr    rax,1
  40fe11:	add    rax,0x3
  40fe15:	and    rax,0xfffffffffffffffc
  40fe19:	mov    QWORD PTR [rbp-0x10],rax
  40fe1d:	mov    eax,DWORD PTR [rbp-0x2c]
  40fe20:	and    eax,0x80
  40fe25:	mov    DWORD PTR [rbp-0x14],eax
  40fe28:	cmp    DWORD PTR [rbp-0x14],0x0
  40fe2c:	jne    40fe4d <grisu3_diy_fp_encode_double@@Base+0x1170>
  40fe2e:	mov    rax,QWORD PTR [rbp-0x8]
  40fe32:	cmp    rax,0x1
  40fe36:	je     40fe47 <grisu3_diy_fp_encode_double@@Base+0x116a>
  40fe38:	cmp    rax,0x2
  40fe3c:	je     40fe40 <grisu3_diy_fp_encode_double@@Base+0x1163>
  40fe3e:	jmp    40fe4d <grisu3_diy_fp_encode_double@@Base+0x1170>
  40fe40:	sub    QWORD PTR [rbp-0x10],0x1
  40fe45:	jmp    40fe4d <grisu3_diy_fp_encode_double@@Base+0x1170>
  40fe47:	sub    QWORD PTR [rbp-0x10],0x2
  40fe4c:	nop
  40fe4d:	mov    rax,QWORD PTR [rbp-0x10]
  40fe51:	pop    rbp
  40fe52:	ret    
  40fe53:	push   rbp
  40fe54:	mov    rbp,rsp
  40fe57:	mov    QWORD PTR [rbp-0x18],rdi
  40fe5b:	mov    rax,QWORD PTR [rbp-0x18]
  40fe5f:	and    eax,0x3
  40fe62:	mov    QWORD PTR [rbp-0x10],rax
  40fe66:	mov    rax,QWORD PTR [rbp-0x18]
  40fe6a:	shr    rax,0x2
  40fe6e:	mov    rdx,rax
  40fe71:	mov    rax,rdx
  40fe74:	add    rax,rax
  40fe77:	add    rax,rdx
  40fe7a:	mov    QWORD PTR [rbp-0x8],rax
  40fe7e:	mov    rax,QWORD PTR [rbp-0x10]
  40fe82:	cmp    rax,0x2
  40fe86:	je     40fe98 <grisu3_diy_fp_encode_double@@Base+0x11bb>
  40fe88:	cmp    rax,0x3
  40fe8c:	jne    40fea2 <grisu3_diy_fp_encode_double@@Base+0x11c5>
  40fe8e:	mov    rax,QWORD PTR [rbp-0x8]
  40fe92:	add    rax,0x2
  40fe96:	jmp    40fea6 <grisu3_diy_fp_encode_double@@Base+0x11c9>
  40fe98:	mov    rax,QWORD PTR [rbp-0x8]
  40fe9c:	add    rax,0x1
  40fea0:	jmp    40fea6 <grisu3_diy_fp_encode_double@@Base+0x11c9>
  40fea2:	mov    rax,QWORD PTR [rbp-0x8]
  40fea6:	pop    rbp
  40fea7:	ret    
  40fea8:	push   rbp
  40fea9:	mov    rbp,rsp
  40feac:	mov    QWORD PTR [rbp-0x38],rdi
  40feb0:	mov    QWORD PTR [rbp-0x40],rsi
  40feb4:	mov    QWORD PTR [rbp-0x48],rdx
  40feb8:	mov    QWORD PTR [rbp-0x50],rcx
  40febc:	mov    DWORD PTR [rbp-0x54],r8d
  40fec0:	lea    rax,[rip+0x5ad1]        # 415998 <flatcc_builder_padding_base@@Base+0x15f8>
  40fec7:	mov    QWORD PTR [rbp-0x18],rax
  40fecb:	lea    rax,[rip+0x5b0e]        # 4159e0 <flatcc_builder_padding_base@@Base+0x1640>
  40fed2:	mov    QWORD PTR [rbp-0x10],rax
  40fed6:	mov    rax,QWORD PTR [rbp-0x38]
  40feda:	mov    QWORD PTR [rbp-0x8],rax
  40fede:	mov    eax,DWORD PTR [rbp-0x54]
  40fee1:	and    eax,0x80
  40fee6:	mov    DWORD PTR [rbp-0x2c],eax
  40fee9:	mov    QWORD PTR [rbp-0x20],0x0
  40fef1:	mov    DWORD PTR [rbp-0x30],0x3
  40fef8:	cmp    QWORD PTR [rbp-0x50],0x0
  40fefd:	jne    40ff0b <grisu3_diy_fp_encode_double@@Base+0x122e>
  40feff:	mov    DWORD PTR [rbp-0x30],0x2
  40ff06:	jmp    41016c <grisu3_diy_fp_encode_double@@Base+0x148f>
  40ff0b:	mov    rax,QWORD PTR [rbp-0x50]
  40ff0f:	mov    rax,QWORD PTR [rax]
  40ff12:	mov    QWORD PTR [rbp-0x20],rax
  40ff16:	and    DWORD PTR [rbp-0x54],0xffffff1f
  40ff1d:	mov    eax,DWORD PTR [rbp-0x54]
  40ff20:	test   eax,eax
  40ff22:	je     40ff2e <grisu3_diy_fp_encode_double@@Base+0x1251>
  40ff24:	cmp    eax,0x1
  40ff27:	je     40ff38 <grisu3_diy_fp_encode_double@@Base+0x125b>
  40ff29:	jmp    41016c <grisu3_diy_fp_encode_double@@Base+0x148f>
  40ff2e:	mov    rax,QWORD PTR [rbp-0x18]
  40ff32:	mov    QWORD PTR [rbp-0x28],rax
  40ff36:	jmp    40ff41 <grisu3_diy_fp_encode_double@@Base+0x1264>
  40ff38:	mov    rax,QWORD PTR [rbp-0x10]
  40ff3c:	mov    QWORD PTR [rbp-0x28],rax
  40ff40:	nop
  40ff41:	mov    DWORD PTR [rbp-0x30],0x0
  40ff48:	jmp    41001d <grisu3_diy_fp_encode_double@@Base+0x1340>
  40ff4d:	mov    rax,QWORD PTR [rbp-0x40]
  40ff51:	movzx  eax,BYTE PTR [rax]
  40ff54:	shr    al,0x2
  40ff57:	movzx  edx,al
  40ff5a:	mov    rax,QWORD PTR [rbp-0x28]
  40ff5e:	add    rax,rdx
  40ff61:	movzx  edx,BYTE PTR [rax]
  40ff64:	mov    rax,QWORD PTR [rbp-0x38]
  40ff68:	mov    BYTE PTR [rax],dl
  40ff6a:	mov    rax,QWORD PTR [rbp-0x38]
  40ff6e:	lea    rdx,[rax+0x1]
  40ff72:	mov    rax,QWORD PTR [rbp-0x40]
  40ff76:	movzx  eax,BYTE PTR [rax]
  40ff79:	movzx  eax,al
  40ff7c:	shl    eax,0x4
  40ff7f:	and    eax,0x30
  40ff82:	mov    ecx,eax
  40ff84:	mov    rax,QWORD PTR [rbp-0x40]
  40ff88:	add    rax,0x1
  40ff8c:	movzx  eax,BYTE PTR [rax]
  40ff8f:	shr    al,0x4
  40ff92:	movzx  eax,al
  40ff95:	or     eax,ecx
  40ff97:	movsxd rcx,eax
  40ff9a:	mov    rax,QWORD PTR [rbp-0x28]
  40ff9e:	add    rax,rcx
  40ffa1:	movzx  eax,BYTE PTR [rax]
  40ffa4:	mov    BYTE PTR [rdx],al
  40ffa6:	mov    rax,QWORD PTR [rbp-0x38]
  40ffaa:	lea    rdx,[rax+0x2]
  40ffae:	mov    rax,QWORD PTR [rbp-0x40]
  40ffb2:	add    rax,0x1
  40ffb6:	movzx  eax,BYTE PTR [rax]
  40ffb9:	movzx  eax,al
  40ffbc:	shl    eax,0x2
  40ffbf:	and    eax,0x3c
  40ffc2:	mov    ecx,eax
  40ffc4:	mov    rax,QWORD PTR [rbp-0x40]
  40ffc8:	add    rax,0x2
  40ffcc:	movzx  eax,BYTE PTR [rax]
  40ffcf:	shr    al,0x6
  40ffd2:	movzx  eax,al
  40ffd5:	or     eax,ecx
  40ffd7:	movsxd rcx,eax
  40ffda:	mov    rax,QWORD PTR [rbp-0x28]
  40ffde:	add    rax,rcx
  40ffe1:	movzx  eax,BYTE PTR [rax]
  40ffe4:	mov    BYTE PTR [rdx],al
  40ffe6:	mov    rax,QWORD PTR [rbp-0x38]
  40ffea:	lea    rdx,[rax+0x3]
  40ffee:	mov    rax,QWORD PTR [rbp-0x40]
  40fff2:	add    rax,0x2
  40fff6:	movzx  eax,BYTE PTR [rax]
  40fff9:	movzx  eax,al
  40fffc:	and    eax,0x3f
  40ffff:	mov    rcx,rax
  410002:	mov    rax,QWORD PTR [rbp-0x28]
  410006:	add    rax,rcx
  410009:	movzx  eax,BYTE PTR [rax]
  41000c:	mov    BYTE PTR [rdx],al
  41000e:	sub    QWORD PTR [rbp-0x20],0x3
  410013:	add    QWORD PTR [rbp-0x38],0x4
  410018:	add    QWORD PTR [rbp-0x40],0x3
  41001d:	cmp    QWORD PTR [rbp-0x20],0x2
  410022:	ja     40ff4d <grisu3_diy_fp_encode_double@@Base+0x1270>
  410028:	mov    rax,QWORD PTR [rbp-0x20]
  41002c:	cmp    rax,0x1
  410030:	je     4100e6 <grisu3_diy_fp_encode_double@@Base+0x1409>
  410036:	cmp    rax,0x2
  41003a:	jne    410157 <grisu3_diy_fp_encode_double@@Base+0x147a>
  410040:	mov    rax,QWORD PTR [rbp-0x40]
  410044:	movzx  eax,BYTE PTR [rax]
  410047:	shr    al,0x2
  41004a:	movzx  edx,al
  41004d:	mov    rax,QWORD PTR [rbp-0x28]
  410051:	add    rax,rdx
  410054:	movzx  edx,BYTE PTR [rax]
  410057:	mov    rax,QWORD PTR [rbp-0x38]
  41005b:	mov    BYTE PTR [rax],dl
  41005d:	mov    rax,QWORD PTR [rbp-0x38]
  410061:	lea    rdx,[rax+0x1]
  410065:	mov    rax,QWORD PTR [rbp-0x40]
  410069:	movzx  eax,BYTE PTR [rax]
  41006c:	movzx  eax,al
  41006f:	shl    eax,0x4
  410072:	and    eax,0x30
  410075:	mov    ecx,eax
  410077:	mov    rax,QWORD PTR [rbp-0x40]
  41007b:	add    rax,0x1
  41007f:	movzx  eax,BYTE PTR [rax]
  410082:	shr    al,0x4
  410085:	movzx  eax,al
  410088:	or     eax,ecx
  41008a:	movsxd rcx,eax
  41008d:	mov    rax,QWORD PTR [rbp-0x28]
  410091:	add    rax,rcx
  410094:	movzx  eax,BYTE PTR [rax]
  410097:	mov    BYTE PTR [rdx],al
  410099:	mov    rax,QWORD PTR [rbp-0x38]
  41009d:	lea    rdx,[rax+0x2]
  4100a1:	mov    rax,QWORD PTR [rbp-0x40]
  4100a5:	add    rax,0x1
  4100a9:	movzx  eax,BYTE PTR [rax]
  4100ac:	movzx  eax,al
  4100af:	shl    eax,0x2
  4100b2:	cdqe   
  4100b4:	and    eax,0x3c
  4100b7:	mov    rcx,rax
  4100ba:	mov    rax,QWORD PTR [rbp-0x28]
  4100be:	add    rax,rcx
  4100c1:	movzx  eax,BYTE PTR [rax]
  4100c4:	mov    BYTE PTR [rdx],al
  4100c6:	add    QWORD PTR [rbp-0x38],0x3
  4100cb:	cmp    DWORD PTR [rbp-0x2c],0x0
  4100cf:	je     410160 <grisu3_diy_fp_encode_double@@Base+0x1483>
  4100d5:	mov    rax,QWORD PTR [rbp-0x38]
  4100d9:	lea    rdx,[rax+0x1]
  4100dd:	mov    QWORD PTR [rbp-0x38],rdx
  4100e1:	mov    BYTE PTR [rax],0x3d
  4100e4:	jmp    410160 <grisu3_diy_fp_encode_double@@Base+0x1483>
  4100e6:	mov    rax,QWORD PTR [rbp-0x40]
  4100ea:	movzx  eax,BYTE PTR [rax]
  4100ed:	shr    al,0x2
  4100f0:	movzx  edx,al
  4100f3:	mov    rax,QWORD PTR [rbp-0x28]
  4100f7:	add    rax,rdx
  4100fa:	movzx  edx,BYTE PTR [rax]
  4100fd:	mov    rax,QWORD PTR [rbp-0x38]
  410101:	mov    BYTE PTR [rax],dl
  410103:	mov    rax,QWORD PTR [rbp-0x38]
  410107:	lea    rdx,[rax+0x1]
  41010b:	mov    rax,QWORD PTR [rbp-0x40]
  41010f:	movzx  eax,BYTE PTR [rax]
  410112:	movzx  eax,al
  410115:	shl    eax,0x4
  410118:	cdqe   
  41011a:	and    eax,0x30
  41011d:	mov    rcx,rax
  410120:	mov    rax,QWORD PTR [rbp-0x28]
  410124:	add    rax,rcx
  410127:	movzx  eax,BYTE PTR [rax]
  41012a:	mov    BYTE PTR [rdx],al
  41012c:	add    QWORD PTR [rbp-0x38],0x2
  410131:	cmp    DWORD PTR [rbp-0x2c],0x0
  410135:	je     410163 <grisu3_diy_fp_encode_double@@Base+0x1486>
  410137:	mov    rax,QWORD PTR [rbp-0x38]
  41013b:	lea    rdx,[rax+0x1]
  41013f:	mov    QWORD PTR [rbp-0x38],rdx
  410143:	mov    BYTE PTR [rax],0x3d
  410146:	mov    rax,QWORD PTR [rbp-0x38]
  41014a:	lea    rdx,[rax+0x1]
  41014e:	mov    QWORD PTR [rbp-0x38],rdx
  410152:	mov    BYTE PTR [rax],0x3d
  410155:	jmp    410163 <grisu3_diy_fp_encode_double@@Base+0x1486>
  410157:	mov    DWORD PTR [rbp-0x2c],0x0
  41015e:	jmp    410164 <grisu3_diy_fp_encode_double@@Base+0x1487>
  410160:	nop
  410161:	jmp    410164 <grisu3_diy_fp_encode_double@@Base+0x1487>
  410163:	nop
  410164:	mov    QWORD PTR [rbp-0x20],0x0
  41016c:	cmp    QWORD PTR [rbp-0x48],0x0
  410171:	je     41018b <grisu3_diy_fp_encode_double@@Base+0x14ae>
  410173:	mov    rdx,QWORD PTR [rbp-0x38]
  410177:	mov    rax,QWORD PTR [rbp-0x8]
  41017b:	sub    rdx,rax
  41017e:	mov    rax,rdx
  410181:	mov    rdx,rax
  410184:	mov    rax,QWORD PTR [rbp-0x48]
  410188:	mov    QWORD PTR [rax],rdx
  41018b:	cmp    QWORD PTR [rbp-0x50],0x0
  410190:	je     4101a7 <grisu3_diy_fp_encode_double@@Base+0x14ca>
  410192:	mov    rax,QWORD PTR [rbp-0x50]
  410196:	mov    rax,QWORD PTR [rax]
  410199:	sub    rax,QWORD PTR [rbp-0x20]
  41019d:	mov    rdx,rax
  4101a0:	mov    rax,QWORD PTR [rbp-0x50]
  4101a4:	mov    QWORD PTR [rax],rdx
  4101a7:	mov    eax,DWORD PTR [rbp-0x30]
  4101aa:	pop    rbp
  4101ab:	ret    
  4101ac:	push   rbp
  4101ad:	mov    rbp,rsp
  4101b0:	add    rsp,0xffffffffffffff80
  4101b4:	mov    QWORD PTR [rbp-0x58],rdi
  4101b8:	mov    QWORD PTR [rbp-0x60],rsi
  4101bc:	mov    QWORD PTR [rbp-0x68],rdx
  4101c0:	mov    QWORD PTR [rbp-0x70],rcx
  4101c4:	mov    DWORD PTR [rbp-0x74],r8d
  4101c8:	mov    rax,QWORD PTR fs:0x28
  4101d1:	mov    QWORD PTR [rbp-0x8],rax
  4101d5:	xor    eax,eax
  4101d7:	mov    DWORD PTR [rbp-0x50],0x0
  4101de:	mov    rax,QWORD PTR [rbp-0x58]
  4101e2:	mov    QWORD PTR [rbp-0x18],rax
  4101e6:	mov    QWORD PTR [rbp-0x38],0xffffffffffffffff
  4101ee:	mov    QWORD PTR [rbp-0x30],0xffffffffffffffff
  4101f6:	lea    rax,[rip+0x5da3]        # 415fa0 <flatcc_builder_padding_base@@Base+0x1c00>
  4101fd:	mov    QWORD PTR [rbp-0x20],rax
  410201:	mov    eax,DWORD PTR [rbp-0x74]
  410204:	and    eax,0x20
  410207:	mov    DWORD PTR [rbp-0x4c],eax
  41020a:	cmp    QWORD PTR [rbp-0x70],0x0
  41020f:	je     41021c <grisu3_diy_fp_encode_double@@Base+0x153f>
  410211:	mov    rax,QWORD PTR [rbp-0x70]
  410215:	mov    rax,QWORD PTR [rax]
  410218:	mov    QWORD PTR [rbp-0x30],rax
  41021c:	mov    rax,QWORD PTR [rbp-0x30]
  410220:	mov    QWORD PTR [rbp-0x28],rax
  410224:	and    DWORD PTR [rbp-0x74],0xffffff1f
  41022b:	mov    eax,DWORD PTR [rbp-0x74]
  41022e:	test   eax,eax
  410230:	je     410239 <grisu3_diy_fp_encode_double@@Base+0x155c>
  410232:	cmp    eax,0x1
  410235:	je     410255 <grisu3_diy_fp_encode_double@@Base+0x1578>
  410237:	jmp    410271 <grisu3_diy_fp_encode_double@@Base+0x1594>
  410239:	cmp    DWORD PTR [rbp-0x4c],0x0
  41023d:	je     410248 <grisu3_diy_fp_encode_double@@Base+0x156b>
  41023f:	lea    rax,[rip+0x5e5a]        # 4160a0 <flatcc_builder_padding_base@@Base+0x1d00>
  410246:	jmp    41024f <grisu3_diy_fp_encode_double@@Base+0x1572>
  410248:	lea    rax,[rip+0x5d51]        # 415fa0 <flatcc_builder_padding_base@@Base+0x1c00>
  41024f:	mov    QWORD PTR [rbp-0x20],rax
  410253:	jmp    41027d <grisu3_diy_fp_encode_double@@Base+0x15a0>
  410255:	cmp    DWORD PTR [rbp-0x4c],0x0
  410259:	je     410264 <grisu3_diy_fp_encode_double@@Base+0x1587>
  41025b:	lea    rax,[rip+0x5f3e]        # 4161a0 <flatcc_builder_padding_base@@Base+0x1e00>
  410262:	jmp    41026b <grisu3_diy_fp_encode_double@@Base+0x158e>
  410264:	lea    rax,[rip+0x6035]        # 4162a0 <flatcc_builder_padding_base@@Base+0x1f00>
  41026b:	mov    QWORD PTR [rbp-0x20],rax
  41026f:	jmp    41027d <grisu3_diy_fp_encode_double@@Base+0x15a0>
  410271:	mov    DWORD PTR [rbp-0x50],0x3
  410278:	jmp    41047a <grisu3_diy_fp_encode_double@@Base+0x179d>
  41027d:	cmp    QWORD PTR [rbp-0x68],0x0
  410282:	je     41046f <grisu3_diy_fp_encode_double@@Base+0x1792>
  410288:	mov    rax,QWORD PTR [rbp-0x68]
  41028c:	mov    rax,QWORD PTR [rax]
  41028f:	test   rax,rax
  410292:	je     41046f <grisu3_diy_fp_encode_double@@Base+0x1792>
  410298:	mov    rax,QWORD PTR [rbp-0x68]
  41029c:	mov    rax,QWORD PTR [rax]
  41029f:	mov    QWORD PTR [rbp-0x38],rax
  4102a3:	jmp    41046f <grisu3_diy_fp_encode_double@@Base+0x1792>
  4102a8:	mov    QWORD PTR [rbp-0x48],0x0
  4102b0:	jmp    4103e5 <grisu3_diy_fp_encode_double@@Base+0x1708>
  4102b5:	mov    rax,QWORD PTR [rbp-0x30]
  4102b9:	cmp    rax,QWORD PTR [rbp-0x48]
  4102bd:	jne    4102d4 <grisu3_diy_fp_encode_double@@Base+0x15f7>
  4102bf:	mov    rax,QWORD PTR [rbp-0x48]
  4102c3:	mov    QWORD PTR [rbp-0x40],rax
  4102c7:	mov    rax,QWORD PTR [rbp-0x48]
  4102cb:	sub    QWORD PTR [rbp-0x30],rax
  4102cf:	jmp    4104d0 <grisu3_diy_fp_encode_double@@Base+0x17f3>
  4102d4:	mov    rdx,QWORD PTR [rbp-0x60]
  4102d8:	mov    rax,QWORD PTR [rbp-0x48]
  4102dc:	add    rax,rdx
  4102df:	movzx  eax,BYTE PTR [rax]
  4102e2:	movzx  edx,al
  4102e5:	mov    rax,QWORD PTR [rbp-0x20]
  4102e9:	add    rax,rdx
  4102ec:	movzx  eax,BYTE PTR [rax]
  4102ef:	lea    rcx,[rbp-0xc]
  4102f3:	mov    rdx,QWORD PTR [rbp-0x48]
  4102f7:	add    rdx,rcx
  4102fa:	mov    BYTE PTR [rdx],al
  4102fc:	lea    rdx,[rbp-0xc]
  410300:	mov    rax,QWORD PTR [rbp-0x48]
  410304:	add    rax,rdx
  410307:	movzx  edx,BYTE PTR [rax]
  41030a:	movzx  eax,BYTE PTR [rip+0x608f]        # 4163a0 <flatcc_builder_padding_base@@Base+0x2000>
  410311:	cmp    dl,al
  410313:	jb     4103e0 <grisu3_diy_fp_encode_double@@Base+0x1703>
  410319:	lea    rdx,[rbp-0xc]
  41031d:	mov    rax,QWORD PTR [rbp-0x48]
  410321:	add    rax,rdx
  410324:	movzx  edx,BYTE PTR [rax]
  410327:	movzx  eax,BYTE PTR [rip+0x6073]        # 4163a1 <flatcc_builder_padding_base@@Base+0x2001>
  41032e:	cmp    dl,al
  410330:	jne    410346 <grisu3_diy_fp_encode_double@@Base+0x1669>
  410332:	add    QWORD PTR [rbp-0x60],0x1
  410337:	sub    QWORD PTR [rbp-0x30],0x1
  41033c:	sub    QWORD PTR [rbp-0x48],0x1
  410341:	jmp    4103e0 <grisu3_diy_fp_encode_double@@Base+0x1703>
  410346:	mov    rax,QWORD PTR [rbp-0x48]
  41034a:	mov    QWORD PTR [rbp-0x40],rax
  41034e:	lea    rdx,[rbp-0xc]
  410352:	mov    rax,QWORD PTR [rbp-0x48]
  410356:	add    rax,rdx
  410359:	movzx  edx,BYTE PTR [rax]
  41035c:	movzx  eax,BYTE PTR [rip+0x603f]        # 4163a2 <flatcc_builder_padding_base@@Base+0x2002>
  410363:	cmp    dl,al
  410365:	jne    4103d3 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  410367:	add    QWORD PTR [rbp-0x48],0x1
  41036c:	jmp    4103bf <grisu3_diy_fp_encode_double@@Base+0x16e2>
  41036e:	mov    rdx,QWORD PTR [rbp-0x60]
  410372:	mov    rax,QWORD PTR [rbp-0x48]
  410376:	add    rax,rdx
  410379:	movzx  eax,BYTE PTR [rax]
  41037c:	movzx  edx,al
  41037f:	mov    rax,QWORD PTR [rbp-0x20]
  410383:	add    rax,rdx
  410386:	movzx  edx,BYTE PTR [rax]
  410389:	movzx  eax,BYTE PTR [rip+0x6012]        # 4163a2 <flatcc_builder_padding_base@@Base+0x2002>
  410390:	cmp    dl,al
  410392:	je     4103ba <grisu3_diy_fp_encode_double@@Base+0x16dd>
  410394:	mov    rdx,QWORD PTR [rbp-0x60]
  410398:	mov    rax,QWORD PTR [rbp-0x48]
  41039c:	add    rax,rdx
  41039f:	movzx  eax,BYTE PTR [rax]
  4103a2:	movzx  edx,al
  4103a5:	mov    rax,QWORD PTR [rbp-0x20]
  4103a9:	add    rax,rdx
  4103ac:	movzx  edx,BYTE PTR [rax]
  4103af:	movzx  eax,BYTE PTR [rip+0x5feb]        # 4163a1 <flatcc_builder_padding_base@@Base+0x2001>
  4103b6:	cmp    dl,al
  4103b8:	jne    4103d2 <grisu3_diy_fp_encode_double@@Base+0x16f5>
  4103ba:	add    QWORD PTR [rbp-0x48],0x1
  4103bf:	mov    rax,QWORD PTR [rbp-0x48]
  4103c3:	cmp    rax,QWORD PTR [rbp-0x30]
  4103c7:	jae    4103d3 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  4103c9:	cmp    QWORD PTR [rbp-0x48],0x7
  4103ce:	jbe    41036e <grisu3_diy_fp_encode_double@@Base+0x1691>
  4103d0:	jmp    4103d3 <grisu3_diy_fp_encode_double@@Base+0x16f6>
  4103d2:	nop
  4103d3:	mov    rax,QWORD PTR [rbp-0x48]
  4103d7:	sub    QWORD PTR [rbp-0x30],rax
  4103db:	jmp    4104d0 <grisu3_diy_fp_encode_double@@Base+0x17f3>
  4103e0:	add    QWORD PTR [rbp-0x48],0x1
  4103e5:	cmp    QWORD PTR [rbp-0x48],0x3
  4103ea:	jbe    4102b5 <grisu3_diy_fp_encode_double@@Base+0x15d8>
  4103f0:	cmp    QWORD PTR [rbp-0x38],0x2
  4103f5:	jbe    4105b7 <grisu3_diy_fp_encode_double@@Base+0x18da>
  4103fb:	movzx  eax,BYTE PTR [rbp-0xc]
  4103ff:	movzx  eax,al
  410402:	shl    eax,0x2
  410405:	mov    edx,eax
  410407:	movzx  eax,BYTE PTR [rbp-0xb]
  41040b:	shr    al,0x4
  41040e:	or     eax,edx
  410410:	mov    edx,eax
  410412:	mov    rax,QWORD PTR [rbp-0x58]
  410416:	mov    BYTE PTR [rax],dl
  410418:	mov    rax,QWORD PTR [rbp-0x58]
  41041c:	add    rax,0x1
  410420:	movzx  edx,BYTE PTR [rbp-0xb]
  410424:	movzx  edx,dl
  410427:	shl    edx,0x4
  41042a:	mov    ecx,edx
  41042c:	movzx  edx,BYTE PTR [rbp-0xa]
  410430:	shr    dl,0x2
  410433:	or     edx,ecx
  410435:	mov    BYTE PTR [rax],dl
  410437:	mov    rax,QWORD PTR [rbp-0x58]
  41043b:	add    rax,0x2
  41043f:	movzx  edx,BYTE PTR [rbp-0xa]
  410443:	movzx  edx,dl
  410446:	shl    edx,0x6
  410449:	mov    ecx,edx
  41044b:	movzx  edx,BYTE PTR [rbp-0x9]
  41044f:	or     edx,ecx
  410451:	mov    BYTE PTR [rax],dl
  410453:	add    QWORD PTR [rbp-0x58],0x3
  410458:	add    QWORD PTR [rbp-0x60],0x4
  41045d:	sub    QWORD PTR [rbp-0x38],0x3
  410462:	sub    QWORD PTR [rbp-0x30],0x4
  410467:	mov    rax,QWORD PTR [rbp-0x30]
  41046b:	mov    QWORD PTR [rbp-0x28],rax
  41046f:	cmp    QWORD PTR [rbp-0x38],0x0
  410474:	jne    4102a8 <grisu3_diy_fp_encode_double@@Base+0x15cb>
  41047a:	cmp    QWORD PTR [rbp-0x68],0x0
  41047f:	je     410499 <grisu3_diy_fp_encode_double@@Base+0x17bc>
  410481:	mov    rdx,QWORD PTR [rbp-0x58]
  410485:	mov    rax,QWORD PTR [rbp-0x18]
  410489:	sub    rdx,rax
  41048c:	mov    rax,rdx
  41048f:	mov    rdx,rax
  410492:	mov    rax,QWORD PTR [rbp-0x68]
  410496:	mov    QWORD PTR [rax],rdx
  410499:	cmp    QWORD PTR [rbp-0x70],0x0
  41049e:	je     4104b5 <grisu3_diy_fp_encode_double@@Base+0x17d8>
  4104a0:	mov    rax,QWORD PTR [rbp-0x70]
  4104a4:	mov    rax,QWORD PTR [rax]
  4104a7:	sub    rax,QWORD PTR [rbp-0x28]
  4104ab:	mov    rdx,rax
  4104ae:	mov    rax,QWORD PTR [rbp-0x70]
  4104b2:	mov    QWORD PTR [rax],rdx
  4104b5:	mov    eax,DWORD PTR [rbp-0x50]
  4104b8:	mov    rsi,QWORD PTR [rbp-0x8]
  4104bc:	xor    rsi,QWORD PTR fs:0x28
  4104c5:	je     4105cf <grisu3_diy_fp_encode_double@@Base+0x18f2>
  4104cb:	jmp    4105ca <grisu3_diy_fp_encode_double@@Base+0x18ed>
  4104d0:	mov    rax,QWORD PTR [rbp-0x40]
  4104d4:	cmp    rax,0x2
  4104d8:	je     4104ee <grisu3_diy_fp_encode_double@@Base+0x1811>
  4104da:	cmp    rax,0x3
  4104de:	je     410532 <grisu3_diy_fp_encode_double@@Base+0x1855>
  4104e0:	test   rax,rax
  4104e3:	je     410599 <grisu3_diy_fp_encode_double@@Base+0x18bc>
  4104e9:	jmp    41058d <grisu3_diy_fp_encode_double@@Base+0x18b0>
  4104ee:	movzx  eax,BYTE PTR [rbp-0xb]
  4104f2:	movzx  eax,al
  4104f5:	shl    eax,0x4
  4104f8:	movzx  eax,al
  4104fb:	test   eax,eax
  4104fd:	jne    4105a7 <grisu3_diy_fp_encode_double@@Base+0x18ca>
  410503:	cmp    QWORD PTR [rbp-0x38],0x0
  410508:	je     4105ba <grisu3_diy_fp_encode_double@@Base+0x18dd>
  41050e:	movzx  eax,BYTE PTR [rbp-0xc]
  410512:	movzx  eax,al
  410515:	shl    eax,0x2
  410518:	mov    edx,eax
  41051a:	movzx  eax,BYTE PTR [rbp-0xb]
  41051e:	shr    al,0x4
  410521:	or     eax,edx
  410523:	mov    edx,eax
  410525:	mov    rax,QWORD PTR [rbp-0x58]
  410529:	mov    BYTE PTR [rax],dl
  41052b:	add    QWORD PTR [rbp-0x58],0x1
  410530:	jmp    41059a <grisu3_diy_fp_encode_double@@Base+0x18bd>
  410532:	movzx  eax,BYTE PTR [rbp-0xa]
  410536:	movzx  eax,al
  410539:	shl    eax,0x6
  41053c:	movzx  eax,al
  41053f:	test   eax,eax
  410541:	jne    4105aa <grisu3_diy_fp_encode_double@@Base+0x18cd>
  410543:	cmp    QWORD PTR [rbp-0x38],0x1
  410548:	jbe    4105bd <grisu3_diy_fp_encode_double@@Base+0x18e0>
  41054a:	movzx  eax,BYTE PTR [rbp-0xc]
  41054e:	movzx  eax,al
  410551:	shl    eax,0x2
  410554:	mov    edx,eax
  410556:	movzx  eax,BYTE PTR [rbp-0xb]
  41055a:	shr    al,0x4
  41055d:	or     eax,edx
  41055f:	mov    edx,eax
  410561:	mov    rax,QWORD PTR [rbp-0x58]
  410565:	mov    BYTE PTR [rax],dl
  410567:	mov    rax,QWORD PTR [rbp-0x58]
  41056b:	add    rax,0x1
  41056f:	movzx  edx,BYTE PTR [rbp-0xb]
  410573:	movzx  edx,dl
  410576:	shl    edx,0x4
  410579:	mov    ecx,edx
  41057b:	movzx  edx,BYTE PTR [rbp-0xa]
  41057f:	shr    dl,0x2
  410582:	or     edx,ecx
  410584:	mov    BYTE PTR [rax],dl
  410586:	add    QWORD PTR [rbp-0x58],0x2
  41058b:	jmp    41059a <grisu3_diy_fp_encode_double@@Base+0x18bd>
  41058d:	mov    DWORD PTR [rbp-0x50],0x4
  410594:	jmp    41047a <grisu3_diy_fp_encode_double@@Base+0x179d>
  410599:	nop
  41059a:	mov    rax,QWORD PTR [rbp-0x30]
  41059e:	mov    QWORD PTR [rbp-0x28],rax
  4105a2:	jmp    41047a <grisu3_diy_fp_encode_double@@Base+0x179d>
  4105a7:	nop
  4105a8:	jmp    4105ab <grisu3_diy_fp_encode_double@@Base+0x18ce>
  4105aa:	nop
  4105ab:	mov    DWORD PTR [rbp-0x50],0x5
  4105b2:	jmp    41047a <grisu3_diy_fp_encode_double@@Base+0x179d>
  4105b7:	nop
  4105b8:	jmp    4105be <grisu3_diy_fp_encode_double@@Base+0x18e1>
  4105ba:	nop
  4105bb:	jmp    4105be <grisu3_diy_fp_encode_double@@Base+0x18e1>
  4105bd:	nop
  4105be:	mov    DWORD PTR [rbp-0x50],0x1
  4105c5:	jmp    41047a <grisu3_diy_fp_encode_double@@Base+0x179d>
  4105ca:	call   403060 <__stack_chk_fail@plt>
  4105cf:	leave  
  4105d0:	ret    

00000000004105d1 <flatcc_json_parser_error_string@@Base>:
  4105d1:	push   rbp
  4105d2:	mov    rbp,rsp
  4105d5:	mov    DWORD PTR [rbp-0x4],edi
  4105d8:	cmp    DWORD PTR [rbp-0x4],0x22
  4105dc:	ja     410780 <flatcc_json_parser_error_string@@Base+0x1af>
  4105e2:	mov    eax,DWORD PTR [rbp-0x4]
  4105e5:	lea    rdx,[rax*4+0x0]
  4105ed:	lea    rax,[rip+0x56bc]        # 415cb0 <flatcc_builder_padding_base@@Base+0x1910>
  4105f4:	mov    eax,DWORD PTR [rdx+rax*1]
  4105f7:	movsxd rdx,eax
  4105fa:	lea    rax,[rip+0x56af]        # 415cb0 <flatcc_builder_padding_base@@Base+0x1910>
  410601:	add    rax,rdx
  410604:	jmp    rax
  410606:	lea    rax,[rip+0x5303]        # 415910 <flatcc_builder_padding_base@@Base+0x1570>
  41060d:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410612:	lea    rax,[rip+0x5408]        # 415a21 <flatcc_builder_padding_base@@Base+0x1681>
  410619:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41061e:	lea    rax,[rip+0x5400]        # 415a25 <flatcc_builder_padding_base@@Base+0x1685>
  410625:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41062a:	lea    rax,[rip+0x5401]        # 415a32 <flatcc_builder_padding_base@@Base+0x1692>
  410631:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410636:	lea    rax,[rip+0x5404]        # 415a41 <flatcc_builder_padding_base@@Base+0x16a1>
  41063d:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410642:	lea    rax,[rip+0x5407]        # 415a50 <flatcc_builder_padding_base@@Base+0x16b0>
  410649:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41064e:	lea    rax,[rip+0x5410]        # 415a65 <flatcc_builder_padding_base@@Base+0x16c5>
  410655:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41065a:	lea    rax,[rip+0x5414]        # 415a75 <flatcc_builder_padding_base@@Base+0x16d5>
  410661:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410666:	lea    rax,[rip+0x5411]        # 415a7e <flatcc_builder_padding_base@@Base+0x16de>
  41066d:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410672:	lea    rax,[rip+0x540f]        # 415a88 <flatcc_builder_padding_base@@Base+0x16e8>
  410679:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41067e:	lea    rax,[rip+0x5414]        # 415a99 <flatcc_builder_padding_base@@Base+0x16f9>
  410685:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41068a:	lea    rax,[rip+0x541a]        # 415aab <flatcc_builder_padding_base@@Base+0x170b>
  410691:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410696:	lea    rax,[rip+0x541d]        # 415aba <flatcc_builder_padding_base@@Base+0x171a>
  41069d:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  4106a2:	lea    rax,[rip+0x5422]        # 415acb <flatcc_builder_padding_base@@Base+0x172b>
  4106a9:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  4106ae:	lea    rax,[rip+0x5425]        # 415ada <flatcc_builder_padding_base@@Base+0x173a>
  4106b5:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  4106ba:	lea    rax,[rip+0x5432]        # 415af3 <flatcc_builder_padding_base@@Base+0x1753>
  4106c1:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  4106c6:	lea    rax,[rip+0x5439]        # 415b06 <flatcc_builder_padding_base@@Base+0x1766>
  4106cd:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  4106d2:	lea    rax,[rip+0x543d]        # 415b16 <flatcc_builder_padding_base@@Base+0x1776>
  4106d9:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  4106de:	lea    rax,[rip+0x5443]        # 415b28 <flatcc_builder_padding_base@@Base+0x1788>
  4106e5:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  4106ea:	lea    rax,[rip+0x5446]        # 415b37 <flatcc_builder_padding_base@@Base+0x1797>
  4106f1:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  4106f6:	lea    rax,[rip+0x5447]        # 415b44 <flatcc_builder_padding_base@@Base+0x17a4>
  4106fd:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410702:	lea    rax,[rip+0x544f]        # 415b58 <flatcc_builder_padding_base@@Base+0x17b8>
  410709:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41070b:	lea    rax,[rip+0x5456]        # 415b68 <flatcc_builder_padding_base@@Base+0x17c8>
  410712:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410714:	lea    rax,[rip+0x545d]        # 415b78 <flatcc_builder_padding_base@@Base+0x17d8>
  41071b:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41071d:	lea    rax,[rip+0x5478]        # 415b9c <flatcc_builder_padding_base@@Base+0x17fc>
  410724:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410726:	lea    rax,[rip+0x5483]        # 415bb0 <flatcc_builder_padding_base@@Base+0x1810>
  41072d:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41072f:	lea    rax,[rip+0x549a]        # 415bd0 <flatcc_builder_padding_base@@Base+0x1830>
  410736:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410738:	lea    rax,[rip+0x54b0]        # 415bef <flatcc_builder_padding_base@@Base+0x184f>
  41073f:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410741:	lea    rax,[rip+0x54c2]        # 415c0a <flatcc_builder_padding_base@@Base+0x186a>
  410748:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41074a:	lea    rax,[rip+0x54d3]        # 415c24 <flatcc_builder_padding_base@@Base+0x1884>
  410751:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410753:	lea    rax,[rip+0x54e1]        # 415c3b <flatcc_builder_padding_base@@Base+0x189b>
  41075a:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41075c:	lea    rax,[rip+0x54f5]        # 415c58 <flatcc_builder_padding_base@@Base+0x18b8>
  410763:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410765:	lea    rax,[rip+0x5503]        # 415c6f <flatcc_builder_padding_base@@Base+0x18cf>
  41076c:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  41076e:	lea    rax,[rip+0x5514]        # 415c89 <flatcc_builder_padding_base@@Base+0x18e9>
  410775:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410777:	lea    rax,[rip+0x5519]        # 415c97 <flatcc_builder_padding_base@@Base+0x18f7>
  41077e:	jmp    410787 <flatcc_json_parser_error_string@@Base+0x1b6>
  410780:	lea    rax,[rip+0x551e]        # 415ca5 <flatcc_builder_padding_base@@Base+0x1905>
  410787:	pop    rbp
  410788:	ret    

0000000000410789 <flatcc_json_parser_set_error@@Base>:
  410789:	push   rbp
  41078a:	mov    rbp,rsp
  41078d:	mov    QWORD PTR [rbp-0x8],rdi
  410791:	mov    QWORD PTR [rbp-0x10],rsi
  410795:	mov    QWORD PTR [rbp-0x18],rdx
  410799:	mov    DWORD PTR [rbp-0x1c],ecx
  41079c:	mov    rax,QWORD PTR [rbp-0x8]
  4107a0:	mov    eax,DWORD PTR [rax+0x20]
  4107a3:	test   eax,eax
  4107a5:	jne    4107db <flatcc_json_parser_set_error@@Base+0x52>
  4107a7:	mov    rax,QWORD PTR [rbp-0x8]
  4107ab:	mov    edx,DWORD PTR [rbp-0x1c]
  4107ae:	mov    DWORD PTR [rax+0x20],edx
  4107b1:	mov    rdx,QWORD PTR [rbp-0x10]
  4107b5:	mov    rax,QWORD PTR [rbp-0x8]
  4107b9:	mov    rax,QWORD PTR [rax+0x8]
  4107bd:	sub    rdx,rax
  4107c0:	mov    rax,rdx
  4107c3:	add    eax,0x1
  4107c6:	mov    edx,eax
  4107c8:	mov    rax,QWORD PTR [rbp-0x8]
  4107cc:	mov    DWORD PTR [rax+0x1c],edx
  4107cf:	mov    rax,QWORD PTR [rbp-0x8]
  4107d3:	mov    rdx,QWORD PTR [rbp-0x10]
  4107d7:	mov    QWORD PTR [rax+0x38],rdx
  4107db:	mov    rax,QWORD PTR [rbp-0x18]
  4107df:	pop    rbp
  4107e0:	ret    

00000000004107e1 <flatcc_json_parser_string_part@@Base>:
  4107e1:	push   rbp
  4107e2:	mov    rbp,rsp
  4107e5:	sub    rsp,0x20
  4107e9:	mov    QWORD PTR [rbp-0x8],rdi
  4107ed:	mov    QWORD PTR [rbp-0x10],rsi
  4107f1:	mov    QWORD PTR [rbp-0x18],rdx
  4107f5:	jmp    4107fc <flatcc_json_parser_string_part@@Base+0x1b>
  4107f7:	add    QWORD PTR [rbp-0x10],0x1
  4107fc:	mov    rax,QWORD PTR [rbp-0x10]
  410800:	cmp    rax,QWORD PTR [rbp-0x18]
  410804:	je     410827 <flatcc_json_parser_string_part@@Base+0x46>
  410806:	mov    rax,QWORD PTR [rbp-0x10]
  41080a:	movzx  eax,BYTE PTR [rax]
  41080d:	cmp    al,0x22
  41080f:	je     410827 <flatcc_json_parser_string_part@@Base+0x46>
  410811:	mov    rax,QWORD PTR [rbp-0x10]
  410815:	movzx  eax,BYTE PTR [rax]
  410818:	cmp    al,0x1f
  41081a:	jbe    410827 <flatcc_json_parser_string_part@@Base+0x46>
  41081c:	mov    rax,QWORD PTR [rbp-0x10]
  410820:	movzx  eax,BYTE PTR [rax]
  410823:	cmp    al,0x5c
  410825:	jne    4107f7 <flatcc_json_parser_string_part@@Base+0x16>
  410827:	mov    rax,QWORD PTR [rbp-0x10]
  41082b:	cmp    rax,QWORD PTR [rbp-0x18]
  41082f:	jne    41084c <flatcc_json_parser_string_part@@Base+0x6b>
  410831:	mov    rdx,QWORD PTR [rbp-0x18]
  410835:	mov    rsi,QWORD PTR [rbp-0x10]
  410839:	mov    rax,QWORD PTR [rbp-0x8]
  41083d:	mov    ecx,0x14
  410842:	mov    rdi,rax
  410845:	call   410789 <flatcc_json_parser_set_error@@Base>
  41084a:	jmp    410887 <flatcc_json_parser_string_part@@Base+0xa6>
  41084c:	mov    rax,QWORD PTR [rbp-0x10]
  410850:	movzx  eax,BYTE PTR [rax]
  410853:	cmp    al,0x22
  410855:	jne    41085d <flatcc_json_parser_string_part@@Base+0x7c>
  410857:	mov    rax,QWORD PTR [rbp-0x10]
  41085b:	jmp    410887 <flatcc_json_parser_string_part@@Base+0xa6>
  41085d:	mov    rax,QWORD PTR [rbp-0x10]
  410861:	movzx  eax,BYTE PTR [rax]
  410864:	cmp    al,0x1f
  410866:	jg     410883 <flatcc_json_parser_string_part@@Base+0xa2>
  410868:	mov    rdx,QWORD PTR [rbp-0x18]
  41086c:	mov    rsi,QWORD PTR [rbp-0x10]
  410870:	mov    rax,QWORD PTR [rbp-0x8]
  410874:	mov    ecx,0x11
  410879:	mov    rdi,rax
  41087c:	call   410789 <flatcc_json_parser_set_error@@Base>
  410881:	jmp    410887 <flatcc_json_parser_string_part@@Base+0xa6>
  410883:	mov    rax,QWORD PTR [rbp-0x10]
  410887:	leave  
  410888:	ret    

0000000000410889 <flatcc_json_parser_space_ext@@Base>:
  410889:	push   rbp
  41088a:	mov    rbp,rsp
  41088d:	sub    rsp,0x20
  410891:	mov    QWORD PTR [rbp-0x8],rdi
  410895:	mov    QWORD PTR [rbp-0x10],rsi
  410899:	mov    QWORD PTR [rbp-0x18],rdx
  41089d:	nop
  41089e:	mov    rdx,QWORD PTR [rbp-0x18]
  4108a2:	mov    rax,QWORD PTR [rbp-0x10]
  4108a6:	sub    rdx,rax
  4108a9:	mov    rax,rdx
  4108ac:	cmp    rax,0xf
  4108b0:	jle    410904 <flatcc_json_parser_space_ext@@Base+0x7b>
  4108b2:	mov    rax,QWORD PTR [rbp-0x10]
  4108b6:	movzx  eax,BYTE PTR [rax]
  4108b9:	cmp    al,0x20
  4108bb:	jle    4108c6 <flatcc_json_parser_space_ext@@Base+0x3d>
  4108bd:	mov    rax,QWORD PTR [rbp-0x10]
  4108c1:	jmp    4109e5 <flatcc_json_parser_space_ext@@Base+0x15c>
  4108c6:	mov    rax,QWORD PTR [rbp-0x10]
  4108ca:	movzx  eax,WORD PTR [rax]
  4108cd:	cmp    ax,0x2020
  4108d1:	jne    4108d8 <flatcc_json_parser_space_ext@@Base+0x4f>
  4108d3:	add    QWORD PTR [rbp-0x10],0x2
  4108d8:	mov    rax,QWORD PTR [rbp-0x10]
  4108dc:	movzx  eax,BYTE PTR [rax]
  4108df:	cmp    al,0x20
  4108e1:	jne    4108e8 <flatcc_json_parser_space_ext@@Base+0x5f>
  4108e3:	add    QWORD PTR [rbp-0x10],0x1
  4108e8:	mov    rax,QWORD PTR [rbp-0x10]
  4108ec:	movzx  eax,BYTE PTR [rax]
  4108ef:	cmp    al,0x20
  4108f1:	jle    4108fc <flatcc_json_parser_space_ext@@Base+0x73>
  4108f3:	mov    rax,QWORD PTR [rbp-0x10]
  4108f7:	jmp    4109e5 <flatcc_json_parser_space_ext@@Base+0x15c>
  4108fc:	nop
  4108fd:	jmp    410904 <flatcc_json_parser_space_ext@@Base+0x7b>
  4108ff:	add    QWORD PTR [rbp-0x10],0x1
  410904:	mov    rax,QWORD PTR [rbp-0x10]
  410908:	cmp    rax,QWORD PTR [rbp-0x18]
  41090c:	je     4109c8 <flatcc_json_parser_space_ext@@Base+0x13f>
  410912:	mov    rax,QWORD PTR [rbp-0x10]
  410916:	movzx  eax,BYTE PTR [rax]
  410919:	cmp    al,0x20
  41091b:	je     4108ff <flatcc_json_parser_space_ext@@Base+0x76>
  41091d:	jmp    4109c8 <flatcc_json_parser_space_ext@@Base+0x13f>
  410922:	mov    rax,QWORD PTR [rbp-0x10]
  410926:	movzx  eax,BYTE PTR [rax]
  410929:	movsx  eax,al
  41092c:	cmp    eax,0xa
  41092f:	je     410982 <flatcc_json_parser_space_ext@@Base+0xf9>
  410931:	cmp    eax,0xa
  410934:	jg     41093d <flatcc_json_parser_space_ext@@Base+0xb4>
  410936:	cmp    eax,0x9
  410939:	je     4109a6 <flatcc_json_parser_space_ext@@Base+0x11d>
  41093b:	jmp    4109ad <flatcc_json_parser_space_ext@@Base+0x124>
  41093d:	cmp    eax,0xd
  410940:	je     41094d <flatcc_json_parser_space_ext@@Base+0xc4>
  410942:	cmp    eax,0x20
  410945:	je     41089d <flatcc_json_parser_space_ext@@Base+0x14>
  41094b:	jmp    4109ad <flatcc_json_parser_space_ext@@Base+0x124>
  41094d:	mov    rdx,QWORD PTR [rbp-0x18]
  410951:	mov    rax,QWORD PTR [rbp-0x10]
  410955:	sub    rdx,rax
  410958:	mov    rax,rdx
  41095b:	cmp    rax,0x1
  41095f:	jle    410977 <flatcc_json_parser_space_ext@@Base+0xee>
  410961:	mov    rax,QWORD PTR [rbp-0x10]
  410965:	add    rax,0x1
  410969:	movzx  eax,BYTE PTR [rax]
  41096c:	cmp    al,0xa
  41096e:	jne    410977 <flatcc_json_parser_space_ext@@Base+0xee>
  410970:	mov    eax,0x1
  410975:	jmp    41097c <flatcc_json_parser_space_ext@@Base+0xf3>
  410977:	mov    eax,0x0
  41097c:	cdqe   
  41097e:	add    QWORD PTR [rbp-0x10],rax
  410982:	mov    rax,QWORD PTR [rbp-0x8]
  410986:	mov    eax,DWORD PTR [rax+0x18]
  410989:	lea    edx,[rax+0x1]
  41098c:	mov    rax,QWORD PTR [rbp-0x8]
  410990:	mov    DWORD PTR [rax+0x18],edx
  410993:	add    QWORD PTR [rbp-0x10],0x1
  410998:	mov    rax,QWORD PTR [rbp-0x8]
  41099c:	mov    rdx,QWORD PTR [rbp-0x10]
  4109a0:	mov    QWORD PTR [rax+0x8],rdx
  4109a4:	jmp    4109c8 <flatcc_json_parser_space_ext@@Base+0x13f>
  4109a6:	add    QWORD PTR [rbp-0x10],0x1
  4109ab:	jmp    4109c8 <flatcc_json_parser_space_ext@@Base+0x13f>
  4109ad:	mov    rdx,QWORD PTR [rbp-0x18]
  4109b1:	mov    rsi,QWORD PTR [rbp-0x10]
  4109b5:	mov    rax,QWORD PTR [rbp-0x8]
  4109b9:	mov    ecx,0x5
  4109be:	mov    rdi,rax
  4109c1:	call   410789 <flatcc_json_parser_set_error@@Base>
  4109c6:	jmp    4109e5 <flatcc_json_parser_space_ext@@Base+0x15c>
  4109c8:	mov    rax,QWORD PTR [rbp-0x10]
  4109cc:	cmp    rax,QWORD PTR [rbp-0x18]
  4109d0:	je     4109e1 <flatcc_json_parser_space_ext@@Base+0x158>
  4109d2:	mov    rax,QWORD PTR [rbp-0x10]
  4109d6:	movzx  eax,BYTE PTR [rax]
  4109d9:	cmp    al,0x20
  4109db:	jle    410922 <flatcc_json_parser_space_ext@@Base+0x99>
  4109e1:	mov    rax,QWORD PTR [rbp-0x10]
  4109e5:	leave  
  4109e6:	ret    

00000000004109e7 <flatcc_json_parser_string_escape@@Base>:
  4109e7:	push   rbp
  4109e8:	mov    rbp,rsp
  4109eb:	sub    rsp,0x30
  4109ef:	mov    QWORD PTR [rbp-0x18],rdi
  4109f3:	mov    QWORD PTR [rbp-0x20],rsi
  4109f7:	mov    QWORD PTR [rbp-0x28],rdx
  4109fb:	mov    QWORD PTR [rbp-0x30],rcx
  4109ff:	mov    rdx,QWORD PTR [rbp-0x28]
  410a03:	mov    rax,QWORD PTR [rbp-0x20]
  410a07:	sub    rdx,rax
  410a0a:	mov    rax,rdx
  410a0d:	cmp    rax,0x1
  410a11:	jle    410a1e <flatcc_json_parser_string_escape@@Base+0x37>
  410a13:	mov    rax,QWORD PTR [rbp-0x20]
  410a17:	movzx  eax,BYTE PTR [rax]
  410a1a:	cmp    al,0x5c
  410a1c:	je     410a43 <flatcc_json_parser_string_escape@@Base+0x5c>
  410a1e:	mov    rax,QWORD PTR [rbp-0x30]
  410a22:	mov    BYTE PTR [rax],0x0
  410a25:	mov    rdx,QWORD PTR [rbp-0x28]
  410a29:	mov    rsi,QWORD PTR [rbp-0x20]
  410a2d:	mov    rax,QWORD PTR [rbp-0x18]
  410a31:	mov    ecx,0x12
  410a36:	mov    rdi,rax
  410a39:	call   410789 <flatcc_json_parser_set_error@@Base>
  410a3e:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410a43:	mov    rax,QWORD PTR [rbp-0x20]
  410a47:	add    rax,0x1
  410a4b:	movzx  eax,BYTE PTR [rax]
  410a4e:	movsx  eax,al
  410a51:	sub    eax,0x22
  410a54:	cmp    eax,0x56
  410a57:	ja     410fa2 <flatcc_json_parser_string_escape@@Base+0x5bb>
  410a5d:	mov    eax,eax
  410a5f:	lea    rdx,[rax*4+0x0]
  410a67:	lea    rax,[rip+0x52ce]        # 415d3c <flatcc_builder_padding_base@@Base+0x199c>
  410a6e:	mov    eax,DWORD PTR [rdx+rax*1]
  410a71:	movsxd rdx,eax
  410a74:	lea    rax,[rip+0x52c1]        # 415d3c <flatcc_builder_padding_base@@Base+0x199c>
  410a7b:	add    rax,rdx
  410a7e:	jmp    rax
  410a80:	mov    BYTE PTR [rbp-0x6],0x0
  410a84:	mov    rax,QWORD PTR [rbp-0x30]
  410a88:	mov    BYTE PTR [rax],0x1
  410a8b:	mov    rdx,QWORD PTR [rbp-0x28]
  410a8f:	mov    rax,QWORD PTR [rbp-0x20]
  410a93:	sub    rdx,rax
  410a96:	mov    rax,rdx
  410a99:	cmp    rax,0x3
  410a9d:	jg     410ac4 <flatcc_json_parser_string_escape@@Base+0xdd>
  410a9f:	mov    rax,QWORD PTR [rbp-0x30]
  410aa3:	mov    BYTE PTR [rax],0x0
  410aa6:	mov    rdx,QWORD PTR [rbp-0x28]
  410aaa:	mov    rsi,QWORD PTR [rbp-0x20]
  410aae:	mov    rax,QWORD PTR [rbp-0x18]
  410ab2:	mov    ecx,0x12
  410ab7:	mov    rdi,rax
  410aba:	call   410789 <flatcc_json_parser_set_error@@Base>
  410abf:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410ac4:	mov    rax,QWORD PTR [rbp-0x20]
  410ac8:	movzx  eax,BYTE PTR [rax+0x2]
  410acc:	mov    BYTE PTR [rbp-0x5],al
  410acf:	cmp    BYTE PTR [rbp-0x5],0x2f
  410ad3:	jle    410aea <flatcc_json_parser_string_escape@@Base+0x103>
  410ad5:	cmp    BYTE PTR [rbp-0x5],0x39
  410ad9:	jg     410aea <flatcc_json_parser_string_escape@@Base+0x103>
  410adb:	movsx  eax,BYTE PTR [rbp-0x5]
  410adf:	sub    eax,0x30
  410ae2:	shl    eax,0x4
  410ae5:	or     BYTE PTR [rbp-0x6],al
  410ae8:	jmp    410b2e <flatcc_json_parser_string_escape@@Base+0x147>
  410aea:	or     BYTE PTR [rbp-0x5],0x20
  410aee:	cmp    BYTE PTR [rbp-0x5],0x60
  410af2:	jle    410b09 <flatcc_json_parser_string_escape@@Base+0x122>
  410af4:	cmp    BYTE PTR [rbp-0x5],0x66
  410af8:	jg     410b09 <flatcc_json_parser_string_escape@@Base+0x122>
  410afa:	movsx  eax,BYTE PTR [rbp-0x5]
  410afe:	sub    eax,0x57
  410b01:	shl    eax,0x4
  410b04:	or     BYTE PTR [rbp-0x6],al
  410b07:	jmp    410b2e <flatcc_json_parser_string_escape@@Base+0x147>
  410b09:	mov    rax,QWORD PTR [rbp-0x30]
  410b0d:	mov    BYTE PTR [rax],0x0
  410b10:	mov    rdx,QWORD PTR [rbp-0x28]
  410b14:	mov    rsi,QWORD PTR [rbp-0x20]
  410b18:	mov    rax,QWORD PTR [rbp-0x18]
  410b1c:	mov    ecx,0x12
  410b21:	mov    rdi,rax
  410b24:	call   410789 <flatcc_json_parser_set_error@@Base>
  410b29:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410b2e:	mov    rax,QWORD PTR [rbp-0x20]
  410b32:	movzx  eax,BYTE PTR [rax+0x3]
  410b36:	mov    BYTE PTR [rbp-0x5],al
  410b39:	cmp    BYTE PTR [rbp-0x5],0x2f
  410b3d:	jle    410b51 <flatcc_json_parser_string_escape@@Base+0x16a>
  410b3f:	cmp    BYTE PTR [rbp-0x5],0x39
  410b43:	jg     410b51 <flatcc_json_parser_string_escape@@Base+0x16a>
  410b45:	movzx  eax,BYTE PTR [rbp-0x5]
  410b49:	sub    eax,0x30
  410b4c:	or     BYTE PTR [rbp-0x6],al
  410b4f:	jmp    410b92 <flatcc_json_parser_string_escape@@Base+0x1ab>
  410b51:	or     BYTE PTR [rbp-0x5],0x20
  410b55:	cmp    BYTE PTR [rbp-0x5],0x60
  410b59:	jle    410b6d <flatcc_json_parser_string_escape@@Base+0x186>
  410b5b:	cmp    BYTE PTR [rbp-0x5],0x66
  410b5f:	jg     410b6d <flatcc_json_parser_string_escape@@Base+0x186>
  410b61:	movzx  eax,BYTE PTR [rbp-0x5]
  410b65:	sub    eax,0x57
  410b68:	or     BYTE PTR [rbp-0x6],al
  410b6b:	jmp    410b92 <flatcc_json_parser_string_escape@@Base+0x1ab>
  410b6d:	mov    rax,QWORD PTR [rbp-0x30]
  410b71:	mov    BYTE PTR [rax],0x0
  410b74:	mov    rdx,QWORD PTR [rbp-0x28]
  410b78:	mov    rsi,QWORD PTR [rbp-0x20]
  410b7c:	mov    rax,QWORD PTR [rbp-0x18]
  410b80:	mov    ecx,0x12
  410b85:	mov    rdi,rax
  410b88:	call   410789 <flatcc_json_parser_set_error@@Base>
  410b8d:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410b92:	mov    rax,QWORD PTR [rbp-0x30]
  410b96:	lea    rdx,[rax+0x1]
  410b9a:	movzx  eax,BYTE PTR [rbp-0x6]
  410b9e:	mov    BYTE PTR [rdx],al
  410ba0:	mov    rax,QWORD PTR [rbp-0x20]
  410ba4:	add    rax,0x4
  410ba8:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410bad:	mov    rdx,QWORD PTR [rbp-0x28]
  410bb1:	mov    rax,QWORD PTR [rbp-0x20]
  410bb5:	sub    rdx,rax
  410bb8:	mov    rax,rdx
  410bbb:	cmp    rax,0x5
  410bbf:	jg     410be6 <flatcc_json_parser_string_escape@@Base+0x1ff>
  410bc1:	mov    rax,QWORD PTR [rbp-0x30]
  410bc5:	mov    BYTE PTR [rax],0x0
  410bc8:	mov    rdx,QWORD PTR [rbp-0x28]
  410bcc:	mov    rsi,QWORD PTR [rbp-0x20]
  410bd0:	mov    rax,QWORD PTR [rbp-0x18]
  410bd4:	mov    ecx,0x12
  410bd9:	mov    rdi,rax
  410bdc:	call   410789 <flatcc_json_parser_set_error@@Base>
  410be1:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410be6:	mov    WORD PTR [rbp-0x4],0x0
  410bec:	mov    rax,QWORD PTR [rbp-0x20]
  410bf0:	movzx  eax,BYTE PTR [rax+0x2]
  410bf4:	mov    BYTE PTR [rbp-0x5],al
  410bf7:	cmp    BYTE PTR [rbp-0x5],0x2f
  410bfb:	jle    410c1c <flatcc_json_parser_string_escape@@Base+0x235>
  410bfd:	cmp    BYTE PTR [rbp-0x5],0x39
  410c01:	jg     410c1c <flatcc_json_parser_string_escape@@Base+0x235>
  410c03:	movsx  ax,BYTE PTR [rbp-0x5]
  410c08:	sub    eax,0x30
  410c0b:	mov    WORD PTR [rbp-0x2],ax
  410c0f:	movzx  eax,WORD PTR [rbp-0x2]
  410c13:	shl    eax,0xc
  410c16:	mov    WORD PTR [rbp-0x4],ax
  410c1a:	jmp    410c72 <flatcc_json_parser_string_escape@@Base+0x28b>
  410c1c:	or     BYTE PTR [rbp-0x5],0x20
  410c20:	cmp    BYTE PTR [rbp-0x5],0x60
  410c24:	jle    410c4d <flatcc_json_parser_string_escape@@Base+0x266>
  410c26:	cmp    BYTE PTR [rbp-0x5],0x66
  410c2a:	jg     410c4d <flatcc_json_parser_string_escape@@Base+0x266>
  410c2c:	movsx  ax,BYTE PTR [rbp-0x5]
  410c31:	sub    eax,0x57
  410c34:	mov    WORD PTR [rbp-0x2],ax
  410c38:	movzx  eax,WORD PTR [rbp-0x2]
  410c3c:	shl    eax,0xc
  410c3f:	mov    edx,eax
  410c41:	movzx  eax,WORD PTR [rbp-0x4]
  410c45:	or     eax,edx
  410c47:	mov    WORD PTR [rbp-0x4],ax
  410c4b:	jmp    410c72 <flatcc_json_parser_string_escape@@Base+0x28b>
  410c4d:	mov    rax,QWORD PTR [rbp-0x30]
  410c51:	mov    BYTE PTR [rax],0x0
  410c54:	mov    rdx,QWORD PTR [rbp-0x28]
  410c58:	mov    rsi,QWORD PTR [rbp-0x20]
  410c5c:	mov    rax,QWORD PTR [rbp-0x18]
  410c60:	mov    ecx,0x12
  410c65:	mov    rdi,rax
  410c68:	call   410789 <flatcc_json_parser_set_error@@Base>
  410c6d:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410c72:	mov    rax,QWORD PTR [rbp-0x20]
  410c76:	movzx  eax,BYTE PTR [rax+0x3]
  410c7a:	mov    BYTE PTR [rbp-0x5],al
  410c7d:	cmp    BYTE PTR [rbp-0x5],0x2f
  410c81:	jle    410caa <flatcc_json_parser_string_escape@@Base+0x2c3>
  410c83:	cmp    BYTE PTR [rbp-0x5],0x39
  410c87:	jg     410caa <flatcc_json_parser_string_escape@@Base+0x2c3>
  410c89:	movsx  ax,BYTE PTR [rbp-0x5]
  410c8e:	sub    eax,0x30
  410c91:	mov    WORD PTR [rbp-0x2],ax
  410c95:	movzx  eax,WORD PTR [rbp-0x2]
  410c99:	shl    eax,0x8
  410c9c:	mov    edx,eax
  410c9e:	movzx  eax,WORD PTR [rbp-0x4]
  410ca2:	or     eax,edx
  410ca4:	mov    WORD PTR [rbp-0x4],ax
  410ca8:	jmp    410d00 <flatcc_json_parser_string_escape@@Base+0x319>
  410caa:	or     BYTE PTR [rbp-0x5],0x20
  410cae:	cmp    BYTE PTR [rbp-0x5],0x60
  410cb2:	jle    410cdb <flatcc_json_parser_string_escape@@Base+0x2f4>
  410cb4:	cmp    BYTE PTR [rbp-0x5],0x66
  410cb8:	jg     410cdb <flatcc_json_parser_string_escape@@Base+0x2f4>
  410cba:	movsx  ax,BYTE PTR [rbp-0x5]
  410cbf:	sub    eax,0x57
  410cc2:	mov    WORD PTR [rbp-0x2],ax
  410cc6:	movzx  eax,WORD PTR [rbp-0x2]
  410cca:	shl    eax,0x8
  410ccd:	mov    edx,eax
  410ccf:	movzx  eax,WORD PTR [rbp-0x4]
  410cd3:	or     eax,edx
  410cd5:	mov    WORD PTR [rbp-0x4],ax
  410cd9:	jmp    410d00 <flatcc_json_parser_string_escape@@Base+0x319>
  410cdb:	mov    rax,QWORD PTR [rbp-0x30]
  410cdf:	mov    BYTE PTR [rax],0x0
  410ce2:	mov    rdx,QWORD PTR [rbp-0x28]
  410ce6:	mov    rsi,QWORD PTR [rbp-0x20]
  410cea:	mov    rax,QWORD PTR [rbp-0x18]
  410cee:	mov    ecx,0x12
  410cf3:	mov    rdi,rax
  410cf6:	call   410789 <flatcc_json_parser_set_error@@Base>
  410cfb:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410d00:	mov    rax,QWORD PTR [rbp-0x20]
  410d04:	movzx  eax,BYTE PTR [rax+0x4]
  410d08:	mov    BYTE PTR [rbp-0x5],al
  410d0b:	cmp    BYTE PTR [rbp-0x5],0x2f
  410d0f:	jle    410d38 <flatcc_json_parser_string_escape@@Base+0x351>
  410d11:	cmp    BYTE PTR [rbp-0x5],0x39
  410d15:	jg     410d38 <flatcc_json_parser_string_escape@@Base+0x351>
  410d17:	movsx  ax,BYTE PTR [rbp-0x5]
  410d1c:	sub    eax,0x30
  410d1f:	mov    WORD PTR [rbp-0x2],ax
  410d23:	movzx  eax,WORD PTR [rbp-0x2]
  410d27:	shl    eax,0x4
  410d2a:	mov    edx,eax
  410d2c:	movzx  eax,WORD PTR [rbp-0x4]
  410d30:	or     eax,edx
  410d32:	mov    WORD PTR [rbp-0x4],ax
  410d36:	jmp    410d8e <flatcc_json_parser_string_escape@@Base+0x3a7>
  410d38:	or     BYTE PTR [rbp-0x5],0x20
  410d3c:	cmp    BYTE PTR [rbp-0x5],0x60
  410d40:	jle    410d69 <flatcc_json_parser_string_escape@@Base+0x382>
  410d42:	cmp    BYTE PTR [rbp-0x5],0x66
  410d46:	jg     410d69 <flatcc_json_parser_string_escape@@Base+0x382>
  410d48:	movsx  ax,BYTE PTR [rbp-0x5]
  410d4d:	sub    eax,0x57
  410d50:	mov    WORD PTR [rbp-0x2],ax
  410d54:	movzx  eax,WORD PTR [rbp-0x2]
  410d58:	shl    eax,0x4
  410d5b:	mov    edx,eax
  410d5d:	movzx  eax,WORD PTR [rbp-0x4]
  410d61:	or     eax,edx
  410d63:	mov    WORD PTR [rbp-0x4],ax
  410d67:	jmp    410d8e <flatcc_json_parser_string_escape@@Base+0x3a7>
  410d69:	mov    rax,QWORD PTR [rbp-0x30]
  410d6d:	mov    BYTE PTR [rax],0x0
  410d70:	mov    rdx,QWORD PTR [rbp-0x28]
  410d74:	mov    rsi,QWORD PTR [rbp-0x20]
  410d78:	mov    rax,QWORD PTR [rbp-0x18]
  410d7c:	mov    ecx,0x12
  410d81:	mov    rdi,rax
  410d84:	call   410789 <flatcc_json_parser_set_error@@Base>
  410d89:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410d8e:	mov    rax,QWORD PTR [rbp-0x20]
  410d92:	movzx  eax,BYTE PTR [rax+0x5]
  410d96:	mov    BYTE PTR [rbp-0x5],al
  410d99:	cmp    BYTE PTR [rbp-0x5],0x2f
  410d9d:	jle    410dbb <flatcc_json_parser_string_escape@@Base+0x3d4>
  410d9f:	cmp    BYTE PTR [rbp-0x5],0x39
  410da3:	jg     410dbb <flatcc_json_parser_string_escape@@Base+0x3d4>
  410da5:	movsx  ax,BYTE PTR [rbp-0x5]
  410daa:	sub    eax,0x30
  410dad:	mov    WORD PTR [rbp-0x2],ax
  410db1:	movzx  eax,WORD PTR [rbp-0x2]
  410db5:	or     WORD PTR [rbp-0x4],ax
  410db9:	jmp    410e06 <flatcc_json_parser_string_escape@@Base+0x41f>
  410dbb:	or     BYTE PTR [rbp-0x5],0x20
  410dbf:	cmp    BYTE PTR [rbp-0x5],0x60
  410dc3:	jle    410de1 <flatcc_json_parser_string_escape@@Base+0x3fa>
  410dc5:	cmp    BYTE PTR [rbp-0x5],0x66
  410dc9:	jg     410de1 <flatcc_json_parser_string_escape@@Base+0x3fa>
  410dcb:	movsx  ax,BYTE PTR [rbp-0x5]
  410dd0:	sub    eax,0x57
  410dd3:	mov    WORD PTR [rbp-0x2],ax
  410dd7:	movzx  eax,WORD PTR [rbp-0x2]
  410ddb:	or     WORD PTR [rbp-0x4],ax
  410ddf:	jmp    410e06 <flatcc_json_parser_string_escape@@Base+0x41f>
  410de1:	mov    rax,QWORD PTR [rbp-0x30]
  410de5:	mov    BYTE PTR [rax],0x0
  410de8:	mov    rdx,QWORD PTR [rbp-0x28]
  410dec:	mov    rsi,QWORD PTR [rbp-0x20]
  410df0:	mov    rax,QWORD PTR [rbp-0x18]
  410df4:	mov    ecx,0x12
  410df9:	mov    rdi,rax
  410dfc:	call   410789 <flatcc_json_parser_set_error@@Base>
  410e01:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410e06:	cmp    WORD PTR [rbp-0x4],0x7f
  410e0b:	ja     410e27 <flatcc_json_parser_string_escape@@Base+0x440>
  410e0d:	mov    rax,QWORD PTR [rbp-0x30]
  410e11:	mov    BYTE PTR [rax],0x1
  410e14:	mov    rax,QWORD PTR [rbp-0x30]
  410e18:	add    rax,0x1
  410e1c:	movzx  edx,WORD PTR [rbp-0x4]
  410e20:	mov    BYTE PTR [rax],dl
  410e22:	jmp    410ea9 <flatcc_json_parser_string_escape@@Base+0x4c2>
  410e27:	cmp    WORD PTR [rbp-0x4],0x7ff
  410e2d:	ja     410e61 <flatcc_json_parser_string_escape@@Base+0x47a>
  410e2f:	mov    rax,QWORD PTR [rbp-0x30]
  410e33:	mov    BYTE PTR [rax],0x2
  410e36:	mov    rax,QWORD PTR [rbp-0x30]
  410e3a:	add    rax,0x1
  410e3e:	movzx  edx,WORD PTR [rbp-0x4]
  410e42:	shr    dx,0x6
  410e46:	or     edx,0xffffffc0
  410e49:	mov    BYTE PTR [rax],dl
  410e4b:	mov    rax,QWORD PTR [rbp-0x30]
  410e4f:	add    rax,0x2
  410e53:	movzx  edx,WORD PTR [rbp-0x4]
  410e57:	and    edx,0x3f
  410e5a:	or     edx,0xffffff80
  410e5d:	mov    BYTE PTR [rax],dl
  410e5f:	jmp    410ea9 <flatcc_json_parser_string_escape@@Base+0x4c2>
  410e61:	mov    rax,QWORD PTR [rbp-0x30]
  410e65:	mov    BYTE PTR [rax],0x3
  410e68:	mov    rax,QWORD PTR [rbp-0x30]
  410e6c:	add    rax,0x1
  410e70:	movzx  edx,WORD PTR [rbp-0x4]
  410e74:	shr    dx,0xc
  410e78:	or     edx,0xffffffe0
  410e7b:	mov    BYTE PTR [rax],dl
  410e7d:	mov    rax,QWORD PTR [rbp-0x30]
  410e81:	add    rax,0x2
  410e85:	movzx  edx,WORD PTR [rbp-0x4]
  410e89:	shr    dx,0x6
  410e8d:	and    edx,0x3f
  410e90:	or     edx,0xffffff80
  410e93:	mov    BYTE PTR [rax],dl
  410e95:	mov    rax,QWORD PTR [rbp-0x30]
  410e99:	add    rax,0x3
  410e9d:	movzx  edx,WORD PTR [rbp-0x4]
  410ea1:	and    edx,0x3f
  410ea4:	or     edx,0xffffff80
  410ea7:	mov    BYTE PTR [rax],dl
  410ea9:	mov    rax,QWORD PTR [rbp-0x20]
  410ead:	add    rax,0x6
  410eb1:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410eb6:	mov    rax,QWORD PTR [rbp-0x30]
  410eba:	mov    BYTE PTR [rax],0x1
  410ebd:	mov    rax,QWORD PTR [rbp-0x30]
  410ec1:	add    rax,0x1
  410ec5:	mov    BYTE PTR [rax],0x9
  410ec8:	mov    rax,QWORD PTR [rbp-0x20]
  410ecc:	add    rax,0x2
  410ed0:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410ed5:	mov    rax,QWORD PTR [rbp-0x30]
  410ed9:	mov    BYTE PTR [rax],0x1
  410edc:	mov    rax,QWORD PTR [rbp-0x30]
  410ee0:	add    rax,0x1
  410ee4:	mov    BYTE PTR [rax],0xa
  410ee7:	mov    rax,QWORD PTR [rbp-0x20]
  410eeb:	add    rax,0x2
  410eef:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410ef4:	mov    rax,QWORD PTR [rbp-0x30]
  410ef8:	mov    BYTE PTR [rax],0x1
  410efb:	mov    rax,QWORD PTR [rbp-0x30]
  410eff:	add    rax,0x1
  410f03:	mov    BYTE PTR [rax],0xd
  410f06:	mov    rax,QWORD PTR [rbp-0x20]
  410f0a:	add    rax,0x2
  410f0e:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410f13:	mov    rax,QWORD PTR [rbp-0x30]
  410f17:	mov    BYTE PTR [rax],0x1
  410f1a:	mov    rax,QWORD PTR [rbp-0x30]
  410f1e:	add    rax,0x1
  410f22:	mov    BYTE PTR [rax],0x8
  410f25:	mov    rax,QWORD PTR [rbp-0x20]
  410f29:	add    rax,0x2
  410f2d:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410f32:	mov    rax,QWORD PTR [rbp-0x30]
  410f36:	mov    BYTE PTR [rax],0x1
  410f39:	mov    rax,QWORD PTR [rbp-0x30]
  410f3d:	add    rax,0x1
  410f41:	mov    BYTE PTR [rax],0xc
  410f44:	mov    rax,QWORD PTR [rbp-0x20]
  410f48:	add    rax,0x2
  410f4c:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410f4e:	mov    rax,QWORD PTR [rbp-0x30]
  410f52:	mov    BYTE PTR [rax],0x1
  410f55:	mov    rax,QWORD PTR [rbp-0x30]
  410f59:	add    rax,0x1
  410f5d:	mov    BYTE PTR [rax],0x22
  410f60:	mov    rax,QWORD PTR [rbp-0x20]
  410f64:	add    rax,0x2
  410f68:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410f6a:	mov    rax,QWORD PTR [rbp-0x30]
  410f6e:	mov    BYTE PTR [rax],0x1
  410f71:	mov    rax,QWORD PTR [rbp-0x30]
  410f75:	add    rax,0x1
  410f79:	mov    BYTE PTR [rax],0x5c
  410f7c:	mov    rax,QWORD PTR [rbp-0x20]
  410f80:	add    rax,0x2
  410f84:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410f86:	mov    rax,QWORD PTR [rbp-0x30]
  410f8a:	mov    BYTE PTR [rax],0x1
  410f8d:	mov    rax,QWORD PTR [rbp-0x30]
  410f91:	add    rax,0x1
  410f95:	mov    BYTE PTR [rax],0x2f
  410f98:	mov    rax,QWORD PTR [rbp-0x20]
  410f9c:	add    rax,0x2
  410fa0:	jmp    410fc2 <flatcc_json_parser_string_escape@@Base+0x5db>
  410fa2:	mov    rax,QWORD PTR [rbp-0x30]
  410fa6:	mov    BYTE PTR [rax],0x0
  410fa9:	mov    rdx,QWORD PTR [rbp-0x28]
  410fad:	mov    rsi,QWORD PTR [rbp-0x20]
  410fb1:	mov    rax,QWORD PTR [rbp-0x18]
  410fb5:	mov    ecx,0x12
  410fba:	mov    rdi,rax
  410fbd:	call   410789 <flatcc_json_parser_set_error@@Base>
  410fc2:	leave  
  410fc3:	ret    

0000000000410fc4 <flatcc_json_parser_skip_constant@@Base>:
  410fc4:	push   rbp
  410fc5:	mov    rbp,rsp
  410fc8:	sub    rsp,0x30
  410fcc:	mov    QWORD PTR [rbp-0x18],rdi
  410fd0:	mov    QWORD PTR [rbp-0x20],rsi
  410fd4:	mov    QWORD PTR [rbp-0x28],rdx
  410fd8:	jmp    411053 <flatcc_json_parser_skip_constant@@Base+0x8f>
  410fda:	mov    rax,QWORD PTR [rbp-0x20]
  410fde:	movzx  eax,BYTE PTR [rax]
  410fe1:	mov    BYTE PTR [rbp-0x9],al
  410fe4:	cmp    BYTE PTR [rbp-0x9],0x0
  410fe8:	js     411002 <flatcc_json_parser_skip_constant@@Base+0x3e>
  410fea:	cmp    BYTE PTR [rbp-0x9],0x5f
  410fee:	je     411002 <flatcc_json_parser_skip_constant@@Base+0x3e>
  410ff0:	cmp    BYTE PTR [rbp-0x9],0x2f
  410ff4:	jle    410ffc <flatcc_json_parser_skip_constant@@Base+0x38>
  410ff6:	cmp    BYTE PTR [rbp-0x9],0x39
  410ffa:	jle    411002 <flatcc_json_parser_skip_constant@@Base+0x3e>
  410ffc:	cmp    BYTE PTR [rbp-0x9],0x2e
  411000:	jne    411009 <flatcc_json_parser_skip_constant@@Base+0x45>
  411002:	add    QWORD PTR [rbp-0x20],0x1
  411007:	jmp    411053 <flatcc_json_parser_skip_constant@@Base+0x8f>
  411009:	or     BYTE PTR [rbp-0x9],0x20
  41100d:	cmp    BYTE PTR [rbp-0x9],0x60
  411011:	jle    411020 <flatcc_json_parser_skip_constant@@Base+0x5c>
  411013:	cmp    BYTE PTR [rbp-0x9],0x7a
  411017:	jg     411020 <flatcc_json_parser_skip_constant@@Base+0x5c>
  411019:	add    QWORD PTR [rbp-0x20],0x1
  41101e:	jmp    411053 <flatcc_json_parser_skip_constant@@Base+0x8f>
  411020:	mov    rax,QWORD PTR [rbp-0x20]
  411024:	mov    QWORD PTR [rbp-0x8],rax
  411028:	mov    rdx,QWORD PTR [rbp-0x28]
  41102c:	mov    rcx,QWORD PTR [rbp-0x8]
  411030:	mov    rax,QWORD PTR [rbp-0x18]
  411034:	mov    rsi,rcx
  411037:	mov    rdi,rax
  41103a:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  41103f:	mov    QWORD PTR [rbp-0x20],rax
  411043:	mov    rax,QWORD PTR [rbp-0x20]
  411047:	cmp    rax,QWORD PTR [rbp-0x8]
  41104b:	jne    411053 <flatcc_json_parser_skip_constant@@Base+0x8f>
  41104d:	mov    rax,QWORD PTR [rbp-0x20]
  411051:	jmp    411065 <flatcc_json_parser_skip_constant@@Base+0xa1>
  411053:	mov    rax,QWORD PTR [rbp-0x20]
  411057:	cmp    rax,QWORD PTR [rbp-0x28]
  41105b:	jne    410fda <flatcc_json_parser_skip_constant@@Base+0x16>
  411061:	mov    rax,QWORD PTR [rbp-0x20]
  411065:	leave  
  411066:	ret    

0000000000411067 <flatcc_json_parser_match_constant@@Base>:
  411067:	push   rbp
  411068:	mov    rbp,rsp
  41106b:	sub    rsp,0x50
  41106f:	mov    QWORD PTR [rbp-0x28],rdi
  411073:	mov    QWORD PTR [rbp-0x30],rsi
  411077:	mov    QWORD PTR [rbp-0x38],rdx
  41107b:	mov    DWORD PTR [rbp-0x3c],ecx
  41107e:	mov    QWORD PTR [rbp-0x48],r8
  411082:	mov    rax,QWORD PTR [rbp-0x30]
  411086:	mov    QWORD PTR [rbp-0x10],rax
  41108a:	mov    eax,DWORD PTR [rbp-0x3c]
  41108d:	movsxd rdx,eax
  411090:	mov    rax,QWORD PTR [rbp-0x30]
  411094:	add    rax,rdx
  411097:	mov    QWORD PTR [rbp-0x8],rax
  41109b:	mov    rdx,QWORD PTR [rbp-0x38]
  41109f:	mov    rax,QWORD PTR [rbp-0x30]
  4110a3:	sub    rdx,rax
  4110a6:	mov    eax,DWORD PTR [rbp-0x3c]
  4110a9:	cdqe   
  4110ab:	cmp    rdx,rax
  4110ae:	jg     4110c3 <flatcc_json_parser_match_constant@@Base+0x5c>
  4110b0:	mov    rax,QWORD PTR [rbp-0x48]
  4110b4:	mov    DWORD PTR [rax],0x0
  4110ba:	mov    rax,QWORD PTR [rbp-0x30]
  4110be:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  4110c3:	mov    rax,QWORD PTR [rbp-0x28]
  4110c7:	mov    eax,DWORD PTR [rax+0x14]
  4110ca:	test   eax,eax
  4110cc:	je     41119d <flatcc_json_parser_match_constant@@Base+0x136>
  4110d2:	mov    rdx,QWORD PTR [rbp-0x38]
  4110d6:	mov    rcx,QWORD PTR [rbp-0x8]
  4110da:	mov    rax,QWORD PTR [rbp-0x28]
  4110de:	mov    rsi,rcx
  4110e1:	mov    rdi,rax
  4110e4:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  4110e9:	mov    QWORD PTR [rbp-0x30],rax
  4110ed:	mov    rax,QWORD PTR [rbp-0x30]
  4110f1:	cmp    rax,QWORD PTR [rbp-0x38]
  4110f5:	jne    41110a <flatcc_json_parser_match_constant@@Base+0xa3>
  4110f7:	mov    rax,QWORD PTR [rbp-0x48]
  4110fb:	mov    DWORD PTR [rax],0x0
  411101:	mov    rax,QWORD PTR [rbp-0x30]
  411105:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  41110a:	mov    rax,QWORD PTR [rbp-0x30]
  41110e:	cmp    rax,QWORD PTR [rbp-0x8]
  411112:	je     411160 <flatcc_json_parser_match_constant@@Base+0xf9>
  411114:	mov    rax,QWORD PTR [rbp-0x30]
  411118:	movzx  eax,BYTE PTR [rax]
  41111b:	mov    BYTE PTR [rbp-0x11],al
  41111e:	cmp    BYTE PTR [rbp-0x11],0x5f
  411122:	je     41112a <flatcc_json_parser_match_constant@@Base+0xc3>
  411124:	cmp    BYTE PTR [rbp-0x11],0x0
  411128:	jns    41113d <flatcc_json_parser_match_constant@@Base+0xd6>
  41112a:	mov    rax,QWORD PTR [rbp-0x48]
  41112e:	mov    DWORD PTR [rax],0x1
  411134:	mov    rax,QWORD PTR [rbp-0x30]
  411138:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  41113d:	or     BYTE PTR [rbp-0x11],0x20
  411141:	cmp    BYTE PTR [rbp-0x11],0x60
  411145:	jle    411160 <flatcc_json_parser_match_constant@@Base+0xf9>
  411147:	cmp    BYTE PTR [rbp-0x11],0x7a
  41114b:	jg     411160 <flatcc_json_parser_match_constant@@Base+0xf9>
  41114d:	mov    rax,QWORD PTR [rbp-0x48]
  411151:	mov    DWORD PTR [rax],0x1
  411157:	mov    rax,QWORD PTR [rbp-0x30]
  41115b:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  411160:	mov    rax,QWORD PTR [rbp-0x48]
  411164:	mov    DWORD PTR [rax],0x0
  41116a:	mov    rax,QWORD PTR [rbp-0x30]
  41116e:	movzx  eax,BYTE PTR [rax]
  411171:	cmp    al,0x2c
  411173:	je     41118b <flatcc_json_parser_match_constant@@Base+0x124>
  411175:	mov    rax,QWORD PTR [rbp-0x30]
  411179:	movzx  eax,BYTE PTR [rax]
  41117c:	cmp    al,0x7d
  41117e:	je     41118b <flatcc_json_parser_match_constant@@Base+0x124>
  411180:	mov    rax,QWORD PTR [rbp-0x30]
  411184:	movzx  eax,BYTE PTR [rax]
  411187:	cmp    al,0x5d
  411189:	jne    411194 <flatcc_json_parser_match_constant@@Base+0x12d>
  41118b:	mov    rax,QWORD PTR [rbp-0x30]
  41118f:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  411194:	mov    rax,QWORD PTR [rbp-0x10]
  411198:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  41119d:	mov    rax,QWORD PTR [rbp-0x8]
  4111a1:	mov    QWORD PTR [rbp-0x30],rax
  4111a5:	mov    rax,QWORD PTR [rbp-0x30]
  4111a9:	movzx  eax,BYTE PTR [rax]
  4111ac:	cmp    al,0x20
  4111ae:	jne    411209 <flatcc_json_parser_match_constant@@Base+0x1a2>
  4111b0:	add    QWORD PTR [rbp-0x30],0x1
  4111b5:	jmp    4111bc <flatcc_json_parser_match_constant@@Base+0x155>
  4111b7:	add    QWORD PTR [rbp-0x30],0x1
  4111bc:	mov    rax,QWORD PTR [rbp-0x30]
  4111c0:	cmp    rax,QWORD PTR [rbp-0x38]
  4111c4:	je     4111d1 <flatcc_json_parser_match_constant@@Base+0x16a>
  4111c6:	mov    rax,QWORD PTR [rbp-0x30]
  4111ca:	movzx  eax,BYTE PTR [rax]
  4111cd:	cmp    al,0x20
  4111cf:	je     4111b7 <flatcc_json_parser_match_constant@@Base+0x150>
  4111d1:	mov    rax,QWORD PTR [rbp-0x30]
  4111d5:	cmp    rax,QWORD PTR [rbp-0x38]
  4111d9:	jne    4111ee <flatcc_json_parser_match_constant@@Base+0x187>
  4111db:	mov    rax,QWORD PTR [rbp-0x48]
  4111df:	mov    DWORD PTR [rax],0x0
  4111e5:	mov    rax,QWORD PTR [rbp-0x30]
  4111e9:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  4111ee:	mov    rax,QWORD PTR [rbp-0x30]
  4111f2:	movzx  eax,BYTE PTR [rax]
  4111f5:	cmp    al,0x22
  4111f7:	je     411209 <flatcc_json_parser_match_constant@@Base+0x1a2>
  4111f9:	mov    rax,QWORD PTR [rbp-0x48]
  4111fd:	mov    DWORD PTR [rax],0x1
  411203:	mov    rax,QWORD PTR [rbp-0x30]
  411207:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  411209:	mov    rax,QWORD PTR [rbp-0x30]
  41120d:	movzx  eax,BYTE PTR [rax]
  411210:	movsx  eax,al
  411213:	cmp    eax,0x22
  411216:	je     411242 <flatcc_json_parser_match_constant@@Base+0x1db>
  411218:	cmp    eax,0x5c
  41121b:	jne    411272 <flatcc_json_parser_match_constant@@Base+0x20b>
  41121d:	mov    rax,QWORD PTR [rbp-0x48]
  411221:	mov    DWORD PTR [rax],0x0
  411227:	mov    rdx,QWORD PTR [rbp-0x38]
  41122b:	mov    rsi,QWORD PTR [rbp-0x30]
  41122f:	mov    rax,QWORD PTR [rbp-0x28]
  411233:	mov    ecx,0x12
  411238:	mov    rdi,rax
  41123b:	call   410789 <flatcc_json_parser_set_error@@Base>
  411240:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  411242:	mov    rax,QWORD PTR [rbp-0x30]
  411246:	lea    rcx,[rax+0x1]
  41124a:	mov    rax,QWORD PTR [rbp-0x28]
  41124e:	mov    edx,0x0
  411253:	mov    rsi,rcx
  411256:	mov    rdi,rax
  411259:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  41125e:	mov    QWORD PTR [rbp-0x30],rax
  411262:	mov    rax,QWORD PTR [rbp-0x48]
  411266:	mov    DWORD PTR [rax],0x0
  41126c:	mov    rax,QWORD PTR [rbp-0x30]
  411270:	jmp    411280 <flatcc_json_parser_match_constant@@Base+0x219>
  411272:	mov    rax,QWORD PTR [rbp-0x48]
  411276:	mov    DWORD PTR [rax],0x0
  41127c:	mov    rax,QWORD PTR [rbp-0x10]
  411280:	leave  
  411281:	ret    

0000000000411282 <flatcc_json_parser_unmatched_symbol@@Base>:
  411282:	push   rbp
  411283:	mov    rbp,rsp
  411286:	sub    rsp,0x20
  41128a:	mov    QWORD PTR [rbp-0x8],rdi
  41128e:	mov    QWORD PTR [rbp-0x10],rsi
  411292:	mov    QWORD PTR [rbp-0x18],rdx
  411296:	mov    rax,QWORD PTR [rbp-0x8]
  41129a:	mov    eax,DWORD PTR [rax+0x10]
  41129d:	and    eax,0x1
  4112a0:	test   eax,eax
  4112a2:	je     411347 <flatcc_json_parser_unmatched_symbol@@Base+0xc5>
  4112a8:	mov    rdx,QWORD PTR [rbp-0x18]
  4112ac:	mov    rcx,QWORD PTR [rbp-0x10]
  4112b0:	mov    rax,QWORD PTR [rbp-0x8]
  4112b4:	mov    rsi,rcx
  4112b7:	mov    rdi,rax
  4112ba:	call   40c9c4 <flatcc_emitter_copy_buffer@@Base+0x379>
  4112bf:	mov    QWORD PTR [rbp-0x10],rax
  4112c3:	mov    rdx,QWORD PTR [rbp-0x18]
  4112c7:	mov    rcx,QWORD PTR [rbp-0x10]
  4112cb:	mov    rax,QWORD PTR [rbp-0x8]
  4112cf:	mov    rsi,rcx
  4112d2:	mov    rdi,rax
  4112d5:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  4112da:	mov    QWORD PTR [rbp-0x10],rax
  4112de:	mov    rax,QWORD PTR [rbp-0x10]
  4112e2:	cmp    rax,QWORD PTR [rbp-0x18]
  4112e6:	je     41132c <flatcc_json_parser_unmatched_symbol@@Base+0xaa>
  4112e8:	mov    rax,QWORD PTR [rbp-0x10]
  4112ec:	movzx  eax,BYTE PTR [rax]
  4112ef:	cmp    al,0x3a
  4112f1:	jne    41132c <flatcc_json_parser_unmatched_symbol@@Base+0xaa>
  4112f3:	add    QWORD PTR [rbp-0x10],0x1
  4112f8:	mov    rdx,QWORD PTR [rbp-0x18]
  4112fc:	mov    rcx,QWORD PTR [rbp-0x10]
  411300:	mov    rax,QWORD PTR [rbp-0x8]
  411304:	mov    rsi,rcx
  411307:	mov    rdi,rax
  41130a:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  41130f:	mov    QWORD PTR [rbp-0x10],rax
  411313:	mov    rdx,QWORD PTR [rbp-0x18]
  411317:	mov    rcx,QWORD PTR [rbp-0x10]
  41131b:	mov    rax,QWORD PTR [rbp-0x8]
  41131f:	mov    rsi,rcx
  411322:	mov    rdi,rax
  411325:	call   411890 <flatcc_json_parser_generic_json@@Base>
  41132a:	jmp    411360 <flatcc_json_parser_unmatched_symbol@@Base+0xde>
  41132c:	mov    rdx,QWORD PTR [rbp-0x18]
  411330:	mov    rsi,QWORD PTR [rbp-0x10]
  411334:	mov    rax,QWORD PTR [rbp-0x8]
  411338:	mov    ecx,0x4
  41133d:	mov    rdi,rax
  411340:	call   410789 <flatcc_json_parser_set_error@@Base>
  411345:	jmp    411360 <flatcc_json_parser_unmatched_symbol@@Base+0xde>
  411347:	mov    rdx,QWORD PTR [rbp-0x18]
  41134b:	mov    rsi,QWORD PTR [rbp-0x10]
  41134f:	mov    rax,QWORD PTR [rbp-0x8]
  411353:	mov    ecx,0xd
  411358:	mov    rdi,rax
  41135b:	call   410789 <flatcc_json_parser_set_error@@Base>
  411360:	leave  
  411361:	ret    
  411362:	push   rbp
  411363:	mov    rbp,rsp
  411366:	sub    rsp,0x20
  41136a:	mov    QWORD PTR [rbp-0x8],rdi
  41136e:	mov    QWORD PTR [rbp-0x10],rsi
  411372:	mov    QWORD PTR [rbp-0x18],rdx
  411376:	mov    rax,QWORD PTR [rbp-0x10]
  41137a:	cmp    rax,QWORD PTR [rbp-0x18]
  41137e:	jne    411389 <flatcc_json_parser_unmatched_symbol@@Base+0x107>
  411380:	mov    rax,QWORD PTR [rbp-0x10]
  411384:	jmp    4115f0 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  411389:	mov    rax,QWORD PTR [rbp-0x10]
  41138d:	movzx  eax,BYTE PTR [rax]
  411390:	cmp    al,0x2d
  411392:	jne    4113c1 <flatcc_json_parser_unmatched_symbol@@Base+0x13f>
  411394:	add    QWORD PTR [rbp-0x10],0x1
  411399:	mov    rax,QWORD PTR [rbp-0x10]
  41139d:	cmp    rax,QWORD PTR [rbp-0x18]
  4113a1:	jne    4113c1 <flatcc_json_parser_unmatched_symbol@@Base+0x13f>
  4113a3:	mov    rdx,QWORD PTR [rbp-0x18]
  4113a7:	mov    rsi,QWORD PTR [rbp-0x10]
  4113ab:	mov    rax,QWORD PTR [rbp-0x8]
  4113af:	mov    ecx,0x6
  4113b4:	mov    rdi,rax
  4113b7:	call   410789 <flatcc_json_parser_set_error@@Base>
  4113bc:	jmp    4115f0 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  4113c1:	mov    rax,QWORD PTR [rbp-0x10]
  4113c5:	movzx  eax,BYTE PTR [rax]
  4113c8:	cmp    al,0x30
  4113ca:	jne    4113d3 <flatcc_json_parser_unmatched_symbol@@Base+0x151>
  4113cc:	add    QWORD PTR [rbp-0x10],0x1
  4113d1:	jmp    411433 <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  4113d3:	mov    rax,QWORD PTR [rbp-0x10]
  4113d7:	movzx  eax,BYTE PTR [rax]
  4113da:	cmp    al,0x30
  4113dc:	jle    4113e9 <flatcc_json_parser_unmatched_symbol@@Base+0x167>
  4113de:	mov    rax,QWORD PTR [rbp-0x10]
  4113e2:	movzx  eax,BYTE PTR [rax]
  4113e5:	cmp    al,0x39
  4113e7:	jle    411407 <flatcc_json_parser_unmatched_symbol@@Base+0x185>
  4113e9:	mov    rdx,QWORD PTR [rbp-0x18]
  4113ed:	mov    rsi,QWORD PTR [rbp-0x10]
  4113f1:	mov    rax,QWORD PTR [rbp-0x8]
  4113f5:	mov    ecx,0x6
  4113fa:	mov    rdi,rax
  4113fd:	call   410789 <flatcc_json_parser_set_error@@Base>
  411402:	jmp    4115f0 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  411407:	add    QWORD PTR [rbp-0x10],0x1
  41140c:	jmp    411413 <flatcc_json_parser_unmatched_symbol@@Base+0x191>
  41140e:	add    QWORD PTR [rbp-0x10],0x1
  411413:	mov    rax,QWORD PTR [rbp-0x10]
  411417:	cmp    rax,QWORD PTR [rbp-0x18]
  41141b:	je     411433 <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  41141d:	mov    rax,QWORD PTR [rbp-0x10]
  411421:	movzx  eax,BYTE PTR [rax]
  411424:	cmp    al,0x2f
  411426:	jle    411433 <flatcc_json_parser_unmatched_symbol@@Base+0x1b1>
  411428:	mov    rax,QWORD PTR [rbp-0x10]
  41142c:	movzx  eax,BYTE PTR [rax]
  41142f:	cmp    al,0x39
  411431:	jle    41140e <flatcc_json_parser_unmatched_symbol@@Base+0x18c>
  411433:	mov    rax,QWORD PTR [rbp-0x10]
  411437:	cmp    rax,QWORD PTR [rbp-0x18]
  41143b:	je     4114ad <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  41143d:	mov    rax,QWORD PTR [rbp-0x10]
  411441:	movzx  eax,BYTE PTR [rax]
  411444:	cmp    al,0x2e
  411446:	jne    4114ad <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  411448:	add    QWORD PTR [rbp-0x10],0x1
  41144d:	mov    rax,QWORD PTR [rbp-0x10]
  411451:	movzx  eax,BYTE PTR [rax]
  411454:	cmp    al,0x2f
  411456:	jle    411463 <flatcc_json_parser_unmatched_symbol@@Base+0x1e1>
  411458:	mov    rax,QWORD PTR [rbp-0x10]
  41145c:	movzx  eax,BYTE PTR [rax]
  41145f:	cmp    al,0x39
  411461:	jle    411481 <flatcc_json_parser_unmatched_symbol@@Base+0x1ff>
  411463:	mov    rdx,QWORD PTR [rbp-0x18]
  411467:	mov    rsi,QWORD PTR [rbp-0x10]
  41146b:	mov    rax,QWORD PTR [rbp-0x8]
  41146f:	mov    ecx,0x6
  411474:	mov    rdi,rax
  411477:	call   410789 <flatcc_json_parser_set_error@@Base>
  41147c:	jmp    4115f0 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  411481:	add    QWORD PTR [rbp-0x10],0x1
  411486:	jmp    41148d <flatcc_json_parser_unmatched_symbol@@Base+0x20b>
  411488:	add    QWORD PTR [rbp-0x10],0x1
  41148d:	mov    rax,QWORD PTR [rbp-0x10]
  411491:	cmp    rax,QWORD PTR [rbp-0x18]
  411495:	je     4114ad <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  411497:	mov    rax,QWORD PTR [rbp-0x10]
  41149b:	movzx  eax,BYTE PTR [rax]
  41149e:	cmp    al,0x2f
  4114a0:	jle    4114ad <flatcc_json_parser_unmatched_symbol@@Base+0x22b>
  4114a2:	mov    rax,QWORD PTR [rbp-0x10]
  4114a6:	movzx  eax,BYTE PTR [rax]
  4114a9:	cmp    al,0x39
  4114ab:	jle    411488 <flatcc_json_parser_unmatched_symbol@@Base+0x206>
  4114ad:	mov    rax,QWORD PTR [rbp-0x10]
  4114b1:	cmp    rax,QWORD PTR [rbp-0x18]
  4114b5:	je     411587 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  4114bb:	mov    rax,QWORD PTR [rbp-0x10]
  4114bf:	movzx  eax,BYTE PTR [rax]
  4114c2:	cmp    al,0x65
  4114c4:	je     4114d5 <flatcc_json_parser_unmatched_symbol@@Base+0x253>
  4114c6:	mov    rax,QWORD PTR [rbp-0x10]
  4114ca:	movzx  eax,BYTE PTR [rax]
  4114cd:	cmp    al,0x45
  4114cf:	jne    411587 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  4114d5:	add    QWORD PTR [rbp-0x10],0x1
  4114da:	mov    rax,QWORD PTR [rbp-0x10]
  4114de:	cmp    rax,QWORD PTR [rbp-0x18]
  4114e2:	jne    411502 <flatcc_json_parser_unmatched_symbol@@Base+0x280>
  4114e4:	mov    rdx,QWORD PTR [rbp-0x18]
  4114e8:	mov    rsi,QWORD PTR [rbp-0x10]
  4114ec:	mov    rax,QWORD PTR [rbp-0x8]
  4114f0:	mov    ecx,0x6
  4114f5:	mov    rdi,rax
  4114f8:	call   410789 <flatcc_json_parser_set_error@@Base>
  4114fd:	jmp    4115f0 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  411502:	mov    rax,QWORD PTR [rbp-0x10]
  411506:	movzx  eax,BYTE PTR [rax]
  411509:	cmp    al,0x2b
  41150b:	je     411518 <flatcc_json_parser_unmatched_symbol@@Base+0x296>
  41150d:	mov    rax,QWORD PTR [rbp-0x10]
  411511:	movzx  eax,BYTE PTR [rax]
  411514:	cmp    al,0x2d
  411516:	jne    41151d <flatcc_json_parser_unmatched_symbol@@Base+0x29b>
  411518:	add    QWORD PTR [rbp-0x10],0x1
  41151d:	mov    rax,QWORD PTR [rbp-0x10]
  411521:	cmp    rax,QWORD PTR [rbp-0x18]
  411525:	je     41153d <flatcc_json_parser_unmatched_symbol@@Base+0x2bb>
  411527:	mov    rax,QWORD PTR [rbp-0x10]
  41152b:	movzx  eax,BYTE PTR [rax]
  41152e:	cmp    al,0x2f
  411530:	jle    41153d <flatcc_json_parser_unmatched_symbol@@Base+0x2bb>
  411532:	mov    rax,QWORD PTR [rbp-0x10]
  411536:	movzx  eax,BYTE PTR [rax]
  411539:	cmp    al,0x39
  41153b:	jle    41155b <flatcc_json_parser_unmatched_symbol@@Base+0x2d9>
  41153d:	mov    rdx,QWORD PTR [rbp-0x18]
  411541:	mov    rsi,QWORD PTR [rbp-0x10]
  411545:	mov    rax,QWORD PTR [rbp-0x8]
  411549:	mov    ecx,0x6
  41154e:	mov    rdi,rax
  411551:	call   410789 <flatcc_json_parser_set_error@@Base>
  411556:	jmp    4115f0 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  41155b:	add    QWORD PTR [rbp-0x10],0x1
  411560:	jmp    411567 <flatcc_json_parser_unmatched_symbol@@Base+0x2e5>
  411562:	add    QWORD PTR [rbp-0x10],0x1
  411567:	mov    rax,QWORD PTR [rbp-0x10]
  41156b:	cmp    rax,QWORD PTR [rbp-0x18]
  41156f:	je     411587 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  411571:	mov    rax,QWORD PTR [rbp-0x10]
  411575:	movzx  eax,BYTE PTR [rax]
  411578:	cmp    al,0x2f
  41157a:	jle    411587 <flatcc_json_parser_unmatched_symbol@@Base+0x305>
  41157c:	mov    rax,QWORD PTR [rbp-0x10]
  411580:	movzx  eax,BYTE PTR [rax]
  411583:	cmp    al,0x39
  411585:	jle    411562 <flatcc_json_parser_unmatched_symbol@@Base+0x2e0>
  411587:	mov    rax,QWORD PTR [rbp-0x10]
  41158b:	cmp    rax,QWORD PTR [rbp-0x18]
  41158f:	je     4115d7 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  411591:	mov    rax,QWORD PTR [rbp-0x10]
  411595:	movzx  eax,BYTE PTR [rax]
  411598:	movsx  eax,al
  41159b:	cmp    eax,0x20
  41159e:	je     4115d1 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  4115a0:	cmp    eax,0x20
  4115a3:	jg     4115b6 <flatcc_json_parser_unmatched_symbol@@Base+0x334>
  4115a5:	cmp    eax,0x9
  4115a8:	jl     4115d7 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  4115aa:	cmp    eax,0xb
  4115ad:	jle    4115d1 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  4115af:	cmp    eax,0xd
  4115b2:	je     4115d1 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  4115b4:	jmp    4115d7 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  4115b6:	cmp    eax,0x3a
  4115b9:	je     4115d1 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  4115bb:	cmp    eax,0x3a
  4115be:	jg     4115c7 <flatcc_json_parser_unmatched_symbol@@Base+0x345>
  4115c0:	cmp    eax,0x2c
  4115c3:	je     4115d1 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  4115c5:	jmp    4115d7 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  4115c7:	cmp    eax,0x5d
  4115ca:	je     4115d1 <flatcc_json_parser_unmatched_symbol@@Base+0x34f>
  4115cc:	cmp    eax,0x7d
  4115cf:	jne    4115d7 <flatcc_json_parser_unmatched_symbol@@Base+0x355>
  4115d1:	mov    rax,QWORD PTR [rbp-0x10]
  4115d5:	jmp    4115f0 <flatcc_json_parser_unmatched_symbol@@Base+0x36e>
  4115d7:	mov    rdx,QWORD PTR [rbp-0x18]
  4115db:	mov    rsi,QWORD PTR [rbp-0x10]
  4115df:	mov    rax,QWORD PTR [rbp-0x8]
  4115e3:	mov    ecx,0x6
  4115e8:	mov    rdi,rax
  4115eb:	call   410789 <flatcc_json_parser_set_error@@Base>
  4115f0:	leave  
  4115f1:	ret    

00000000004115f2 <flatcc_json_parser_double@@Base>:
  4115f2:	push   rbp
  4115f3:	mov    rbp,rsp
  4115f6:	sub    rsp,0x30
  4115fa:	mov    QWORD PTR [rbp-0x18],rdi
  4115fe:	mov    QWORD PTR [rbp-0x20],rsi
  411602:	mov    QWORD PTR [rbp-0x28],rdx
  411606:	mov    QWORD PTR [rbp-0x30],rcx
  41160a:	mov    rax,QWORD PTR [rbp-0x30]
  41160e:	vxorpd xmm0,xmm0,xmm0
  411612:	vmovsd QWORD PTR [rax],xmm0
  411616:	mov    rax,QWORD PTR [rbp-0x20]
  41161a:	cmp    rax,QWORD PTR [rbp-0x28]
  41161e:	jne    411629 <flatcc_json_parser_double@@Base+0x37>
  411620:	mov    rax,QWORD PTR [rbp-0x20]
  411624:	jmp    41173f <flatcc_json_parser_double@@Base+0x14d>
  411629:	mov    rax,QWORD PTR [rbp-0x20]
  41162d:	mov    QWORD PTR [rbp-0x10],rax
  411631:	mov    rax,QWORD PTR [rbp-0x20]
  411635:	movzx  eax,BYTE PTR [rax]
  411638:	cmp    al,0x2d
  41163a:	jne    411641 <flatcc_json_parser_double@@Base+0x4f>
  41163c:	add    QWORD PTR [rbp-0x10],0x1
  411641:	mov    rdx,QWORD PTR [rbp-0x28]
  411645:	mov    rax,QWORD PTR [rbp-0x10]
  411649:	sub    rdx,rax
  41164c:	mov    rax,rdx
  41164f:	cmp    rax,0x1
  411653:	jle    411698 <flatcc_json_parser_double@@Base+0xa6>
  411655:	mov    rax,QWORD PTR [rbp-0x10]
  411659:	movzx  eax,BYTE PTR [rax]
  41165c:	cmp    al,0x2e
  41165e:	je     41167a <flatcc_json_parser_double@@Base+0x88>
  411660:	mov    rax,QWORD PTR [rbp-0x10]
  411664:	movzx  eax,BYTE PTR [rax]
  411667:	cmp    al,0x30
  411669:	jne    411698 <flatcc_json_parser_double@@Base+0xa6>
  41166b:	mov    rax,QWORD PTR [rbp-0x10]
  41166f:	add    rax,0x1
  411673:	movzx  eax,BYTE PTR [rax]
  411676:	cmp    al,0x30
  411678:	jne    411698 <flatcc_json_parser_double@@Base+0xa6>
  41167a:	mov    rdx,QWORD PTR [rbp-0x28]
  41167e:	mov    rsi,QWORD PTR [rbp-0x20]
  411682:	mov    rax,QWORD PTR [rbp-0x18]
  411686:	mov    ecx,0x6
  41168b:	mov    rdi,rax
  41168e:	call   410789 <flatcc_json_parser_set_error@@Base>
  411693:	jmp    41173f <flatcc_json_parser_double@@Base+0x14d>
  411698:	mov    rdx,QWORD PTR [rbp-0x28]
  41169c:	mov    rax,QWORD PTR [rbp-0x20]
  4116a0:	sub    rdx,rax
  4116a3:	mov    rax,rdx
  4116a6:	mov    ecx,eax
  4116a8:	mov    rdx,QWORD PTR [rbp-0x30]
  4116ac:	mov    rax,QWORD PTR [rbp-0x20]
  4116b0:	mov    esi,ecx
  4116b2:	mov    rdi,rax
  4116b5:	call   40fc4f <grisu3_diy_fp_encode_double@@Base+0xf72>
  4116ba:	mov    QWORD PTR [rbp-0x8],rax
  4116be:	cmp    QWORD PTR [rbp-0x8],0x0
  4116c3:	je     4116cf <flatcc_json_parser_double@@Base+0xdd>
  4116c5:	mov    rax,QWORD PTR [rbp-0x8]
  4116c9:	cmp    rax,QWORD PTR [rbp-0x20]
  4116cd:	jne    41173b <flatcc_json_parser_double@@Base+0x149>
  4116cf:	mov    rax,QWORD PTR [rbp-0x30]
  4116d3:	vmovsd xmm1,QWORD PTR [rax]
  4116d7:	vmovsd xmm0,QWORD PTR [rip+0x4e31]        # 416510 <flatcc_builder_padding_base@@Base+0x2170>
  4116df:	vandpd xmm0,xmm0,xmm1
  4116e3:	vucomisd xmm0,QWORD PTR [rip+0x4e35]        # 416520 <flatcc_builder_padding_base@@Base+0x2180>
  4116eb:	setbe  al
  4116ee:	xor    eax,0x1
  4116f1:	test   al,al
  4116f3:	je     4116fc <flatcc_json_parser_double@@Base+0x10a>
  4116f5:	mov    eax,0x1
  4116fa:	jmp    411701 <flatcc_json_parser_double@@Base+0x10f>
  4116fc:	mov    eax,0x0
  411701:	test   al,al
  411703:	je     411720 <flatcc_json_parser_double@@Base+0x12e>
  411705:	mov    rdx,QWORD PTR [rbp-0x28]
  411709:	mov    rsi,QWORD PTR [rbp-0x20]
  41170d:	mov    rax,QWORD PTR [rbp-0x18]
  411711:	mov    ecx,0x7
  411716:	mov    rdi,rax
  411719:	call   410789 <flatcc_json_parser_set_error@@Base>
  41171e:	jmp    41173f <flatcc_json_parser_double@@Base+0x14d>
  411720:	mov    rdx,QWORD PTR [rbp-0x28]
  411724:	mov    rsi,QWORD PTR [rbp-0x20]
  411728:	mov    rax,QWORD PTR [rbp-0x18]
  41172c:	mov    ecx,0x6
  411731:	mov    rdi,rax
  411734:	call   410789 <flatcc_json_parser_set_error@@Base>
  411739:	jmp    41173f <flatcc_json_parser_double@@Base+0x14d>
  41173b:	mov    rax,QWORD PTR [rbp-0x8]
  41173f:	leave  
  411740:	ret    

0000000000411741 <flatcc_json_parser_float@@Base>:
  411741:	push   rbp
  411742:	mov    rbp,rsp
  411745:	sub    rsp,0x30
  411749:	mov    QWORD PTR [rbp-0x18],rdi
  41174d:	mov    QWORD PTR [rbp-0x20],rsi
  411751:	mov    QWORD PTR [rbp-0x28],rdx
  411755:	mov    QWORD PTR [rbp-0x30],rcx
  411759:	mov    rax,QWORD PTR [rbp-0x30]
  41175d:	vxorps xmm0,xmm0,xmm0
  411761:	vmovss DWORD PTR [rax],xmm0
  411765:	mov    rax,QWORD PTR [rbp-0x20]
  411769:	cmp    rax,QWORD PTR [rbp-0x28]
  41176d:	jne    411778 <flatcc_json_parser_float@@Base+0x37>
  41176f:	mov    rax,QWORD PTR [rbp-0x20]
  411773:	jmp    41188e <flatcc_json_parser_float@@Base+0x14d>
  411778:	mov    rax,QWORD PTR [rbp-0x20]
  41177c:	mov    QWORD PTR [rbp-0x10],rax
  411780:	mov    rax,QWORD PTR [rbp-0x20]
  411784:	movzx  eax,BYTE PTR [rax]
  411787:	cmp    al,0x2d
  411789:	jne    411790 <flatcc_json_parser_float@@Base+0x4f>
  41178b:	add    QWORD PTR [rbp-0x10],0x1
  411790:	mov    rdx,QWORD PTR [rbp-0x28]
  411794:	mov    rax,QWORD PTR [rbp-0x10]
  411798:	sub    rdx,rax
  41179b:	mov    rax,rdx
  41179e:	cmp    rax,0x1
  4117a2:	jle    4117e7 <flatcc_json_parser_float@@Base+0xa6>
  4117a4:	mov    rax,QWORD PTR [rbp-0x10]
  4117a8:	movzx  eax,BYTE PTR [rax]
  4117ab:	cmp    al,0x2e
  4117ad:	je     4117c9 <flatcc_json_parser_float@@Base+0x88>
  4117af:	mov    rax,QWORD PTR [rbp-0x10]
  4117b3:	movzx  eax,BYTE PTR [rax]
  4117b6:	cmp    al,0x30
  4117b8:	jne    4117e7 <flatcc_json_parser_float@@Base+0xa6>
  4117ba:	mov    rax,QWORD PTR [rbp-0x10]
  4117be:	add    rax,0x1
  4117c2:	movzx  eax,BYTE PTR [rax]
  4117c5:	cmp    al,0x30
  4117c7:	jne    4117e7 <flatcc_json_parser_float@@Base+0xa6>
  4117c9:	mov    rdx,QWORD PTR [rbp-0x28]
  4117cd:	mov    rsi,QWORD PTR [rbp-0x20]
  4117d1:	mov    rax,QWORD PTR [rbp-0x18]
  4117d5:	mov    ecx,0x6
  4117da:	mov    rdi,rax
  4117dd:	call   410789 <flatcc_json_parser_set_error@@Base>
  4117e2:	jmp    41188e <flatcc_json_parser_float@@Base+0x14d>
  4117e7:	mov    rdx,QWORD PTR [rbp-0x28]
  4117eb:	mov    rax,QWORD PTR [rbp-0x20]
  4117ef:	sub    rdx,rax
  4117f2:	mov    rax,rdx
  4117f5:	mov    ecx,eax
  4117f7:	mov    rdx,QWORD PTR [rbp-0x30]
  4117fb:	mov    rax,QWORD PTR [rbp-0x20]
  4117ff:	mov    esi,ecx
  411801:	mov    rdi,rax
  411804:	call   40fc79 <grisu3_diy_fp_encode_double@@Base+0xf9c>
  411809:	mov    QWORD PTR [rbp-0x8],rax
  41180d:	cmp    QWORD PTR [rbp-0x8],0x0
  411812:	je     41181e <flatcc_json_parser_float@@Base+0xdd>
  411814:	mov    rax,QWORD PTR [rbp-0x8]
  411818:	cmp    rax,QWORD PTR [rbp-0x20]
  41181c:	jne    41188a <flatcc_json_parser_float@@Base+0x149>
  41181e:	mov    rax,QWORD PTR [rbp-0x30]
  411822:	vmovss xmm1,DWORD PTR [rax]
  411826:	vmovss xmm0,DWORD PTR [rip+0x4cc2]        # 4164f0 <flatcc_builder_padding_base@@Base+0x2150>
  41182e:	vandps xmm0,xmm0,xmm1
  411832:	vucomiss xmm0,DWORD PTR [rip+0x4cc6]        # 416500 <flatcc_builder_padding_base@@Base+0x2160>
  41183a:	setbe  al
  41183d:	xor    eax,0x1
  411840:	test   al,al
  411842:	je     41184b <flatcc_json_parser_float@@Base+0x10a>
  411844:	mov    eax,0x1
  411849:	jmp    411850 <flatcc_json_parser_float@@Base+0x10f>
  41184b:	mov    eax,0x0
  411850:	test   al,al
  411852:	je     41186f <flatcc_json_parser_float@@Base+0x12e>
  411854:	mov    rdx,QWORD PTR [rbp-0x28]
  411858:	mov    rsi,QWORD PTR [rbp-0x20]
  41185c:	mov    rax,QWORD PTR [rbp-0x18]
  411860:	mov    ecx,0x7
  411865:	mov    rdi,rax
  411868:	call   410789 <flatcc_json_parser_set_error@@Base>
  41186d:	jmp    41188e <flatcc_json_parser_float@@Base+0x14d>
  41186f:	mov    rdx,QWORD PTR [rbp-0x28]
  411873:	mov    rsi,QWORD PTR [rbp-0x20]
  411877:	mov    rax,QWORD PTR [rbp-0x18]
  41187b:	mov    ecx,0x6
  411880:	mov    rdi,rax
  411883:	call   410789 <flatcc_json_parser_set_error@@Base>
  411888:	jmp    41188e <flatcc_json_parser_float@@Base+0x14d>
  41188a:	mov    rax,QWORD PTR [rbp-0x8]
  41188e:	leave  
  41188f:	ret    

0000000000411890 <flatcc_json_parser_generic_json@@Base>:
  411890:	push   rbp
  411891:	mov    rbp,rsp
  411894:	sub    rsp,0x260
  41189b:	mov    QWORD PTR [rbp-0x248],rdi
  4118a2:	mov    QWORD PTR [rbp-0x250],rsi
  4118a9:	mov    QWORD PTR [rbp-0x258],rdx
  4118b0:	mov    rax,QWORD PTR fs:0x28
  4118b9:	mov    QWORD PTR [rbp-0x8],rax
  4118bd:	xor    eax,eax
  4118bf:	mov    DWORD PTR [rbp-0x234],0x0
  4118c9:	lea    rax,[rbp-0x210]
  4118d0:	mov    QWORD PTR [rbp-0x230],rax
  4118d7:	mov    rax,QWORD PTR [rbp-0x230]
  4118de:	add    rax,0x200
  4118e4:	mov    QWORD PTR [rbp-0x228],rax
  4118eb:	mov    rax,QWORD PTR [rbp-0x250]
  4118f2:	cmp    rax,QWORD PTR [rbp-0x258]
  4118f9:	jne    411907 <flatcc_json_parser_generic_json@@Base+0x77>
  4118fb:	mov    rax,QWORD PTR [rbp-0x250]
  411902:	jmp    411e63 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411907:	lea    rax,[rbp-0x210]
  41190e:	cmp    QWORD PTR [rbp-0x230],rax
  411915:	je     411a3d <flatcc_json_parser_generic_json@@Base+0x1ad>
  41191b:	mov    rax,QWORD PTR [rbp-0x230]
  411922:	sub    rax,0x1
  411926:	movzx  eax,BYTE PTR [rax]
  411929:	cmp    al,0x7d
  41192b:	jne    411a3d <flatcc_json_parser_generic_json@@Base+0x1ad>
  411931:	mov    rdx,QWORD PTR [rbp-0x258]
  411938:	mov    rcx,QWORD PTR [rbp-0x250]
  41193f:	mov    rax,QWORD PTR [rbp-0x248]
  411946:	mov    rsi,rcx
  411949:	mov    rdi,rax
  41194c:	call   40c94c <flatcc_emitter_copy_buffer@@Base+0x301>
  411951:	mov    QWORD PTR [rbp-0x250],rax
  411958:	mov    rdx,QWORD PTR [rbp-0x258]
  41195f:	mov    rcx,QWORD PTR [rbp-0x250]
  411966:	mov    rax,QWORD PTR [rbp-0x248]
  41196d:	mov    rsi,rcx
  411970:	mov    rdi,rax
  411973:	call   40c9c4 <flatcc_emitter_copy_buffer@@Base+0x379>
  411978:	mov    QWORD PTR [rbp-0x250],rax
  41197f:	mov    rdx,QWORD PTR [rbp-0x258]
  411986:	mov    rcx,QWORD PTR [rbp-0x250]
  41198d:	mov    rax,QWORD PTR [rbp-0x248]
  411994:	mov    rsi,rcx
  411997:	mov    rdi,rax
  41199a:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  41199f:	mov    QWORD PTR [rbp-0x250],rax
  4119a6:	mov    rax,QWORD PTR [rbp-0x250]
  4119ad:	cmp    rax,QWORD PTR [rbp-0x258]
  4119b4:	jne    4119dd <flatcc_json_parser_generic_json@@Base+0x14d>
  4119b6:	mov    rdx,QWORD PTR [rbp-0x258]
  4119bd:	mov    rsi,QWORD PTR [rbp-0x250]
  4119c4:	mov    rax,QWORD PTR [rbp-0x248]
  4119cb:	mov    ecx,0xa
  4119d0:	mov    rdi,rax
  4119d3:	call   410789 <flatcc_json_parser_set_error@@Base>
  4119d8:	jmp    411e63 <flatcc_json_parser_generic_json@@Base+0x5d3>
  4119dd:	mov    rax,QWORD PTR [rbp-0x250]
  4119e4:	movzx  eax,BYTE PTR [rax]
  4119e7:	cmp    al,0x3a
  4119e9:	je     411a12 <flatcc_json_parser_generic_json@@Base+0x182>
  4119eb:	mov    rdx,QWORD PTR [rbp-0x258]
  4119f2:	mov    rsi,QWORD PTR [rbp-0x250]
  4119f9:	mov    rax,QWORD PTR [rbp-0x248]
  411a00:	mov    ecx,0x4
  411a05:	mov    rdi,rax
  411a08:	call   410789 <flatcc_json_parser_set_error@@Base>
  411a0d:	jmp    411e63 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411a12:	mov    rax,QWORD PTR [rbp-0x250]
  411a19:	lea    rcx,[rax+0x1]
  411a1d:	mov    rdx,QWORD PTR [rbp-0x258]
  411a24:	mov    rax,QWORD PTR [rbp-0x248]
  411a2b:	mov    rsi,rcx
  411a2e:	mov    rdi,rax
  411a31:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  411a36:	mov    QWORD PTR [rbp-0x250],rax
  411a3d:	mov    rax,QWORD PTR [rbp-0x250]
  411a44:	movzx  eax,BYTE PTR [rax]
  411a47:	movsx  eax,al
  411a4a:	cmp    eax,0x39
  411a4d:	jg     411a6b <flatcc_json_parser_generic_json@@Base+0x1db>
  411a4f:	cmp    eax,0x30
  411a52:	jge    411b6c <flatcc_json_parser_generic_json@@Base+0x2dc>
  411a58:	cmp    eax,0x22
  411a5b:	je     411a82 <flatcc_json_parser_generic_json@@Base+0x1f2>
  411a5d:	cmp    eax,0x2d
  411a60:	je     411b6c <flatcc_json_parser_generic_json@@Base+0x2dc>
  411a66:	jmp    411cd8 <flatcc_json_parser_generic_json@@Base+0x448>
  411a6b:	cmp    eax,0x5b
  411a6e:	je     411b98 <flatcc_json_parser_generic_json@@Base+0x308>
  411a74:	cmp    eax,0x7b
  411a77:	je     411c3a <flatcc_json_parser_generic_json@@Base+0x3aa>
  411a7d:	jmp    411cd8 <flatcc_json_parser_generic_json@@Base+0x448>
  411a82:	mov    rdx,QWORD PTR [rbp-0x258]
  411a89:	mov    rcx,QWORD PTR [rbp-0x250]
  411a90:	mov    rax,QWORD PTR [rbp-0x248]
  411a97:	mov    rsi,rcx
  411a9a:	mov    rdi,rax
  411a9d:	call   40c8ae <flatcc_emitter_copy_buffer@@Base+0x263>
  411aa2:	mov    QWORD PTR [rbp-0x250],rax
  411aa9:	jmp    411b1b <flatcc_json_parser_generic_json@@Base+0x28b>
  411aab:	mov    rdx,QWORD PTR [rbp-0x258]
  411ab2:	mov    rcx,QWORD PTR [rbp-0x250]
  411ab9:	mov    rax,QWORD PTR [rbp-0x248]
  411ac0:	mov    rsi,rcx
  411ac3:	mov    rdi,rax
  411ac6:	call   4107e1 <flatcc_json_parser_string_part@@Base>
  411acb:	mov    QWORD PTR [rbp-0x250],rax
  411ad2:	mov    rax,QWORD PTR [rbp-0x250]
  411ad9:	cmp    rax,QWORD PTR [rbp-0x258]
  411ae0:	je     411af0 <flatcc_json_parser_generic_json@@Base+0x260>
  411ae2:	mov    rax,QWORD PTR [rbp-0x250]
  411ae9:	movzx  eax,BYTE PTR [rax]
  411aec:	cmp    al,0x22
  411aee:	je     411b3f <flatcc_json_parser_generic_json@@Base+0x2af>
  411af0:	lea    rcx,[rbp-0x214]
  411af7:	mov    rdx,QWORD PTR [rbp-0x258]
  411afe:	mov    rsi,QWORD PTR [rbp-0x250]
  411b05:	mov    rax,QWORD PTR [rbp-0x248]
  411b0c:	mov    rdi,rax
  411b0f:	call   4109e7 <flatcc_json_parser_string_escape@@Base>
  411b14:	mov    QWORD PTR [rbp-0x250],rax
  411b1b:	mov    rax,QWORD PTR [rbp-0x250]
  411b22:	cmp    rax,QWORD PTR [rbp-0x258]
  411b29:	je     411b40 <flatcc_json_parser_generic_json@@Base+0x2b0>
  411b2b:	mov    rax,QWORD PTR [rbp-0x250]
  411b32:	movzx  eax,BYTE PTR [rax]
  411b35:	cmp    al,0x22
  411b37:	jne    411aab <flatcc_json_parser_generic_json@@Base+0x21b>
  411b3d:	jmp    411b40 <flatcc_json_parser_generic_json@@Base+0x2b0>
  411b3f:	nop
  411b40:	mov    rdx,QWORD PTR [rbp-0x258]
  411b47:	mov    rcx,QWORD PTR [rbp-0x250]
  411b4e:	mov    rax,QWORD PTR [rbp-0x248]
  411b55:	mov    rsi,rcx
  411b58:	mov    rdi,rax
  411b5b:	call   40c8fd <flatcc_emitter_copy_buffer@@Base+0x2b2>
  411b60:	mov    QWORD PTR [rbp-0x250],rax
  411b67:	jmp    411d51 <flatcc_json_parser_generic_json@@Base+0x4c1>
  411b6c:	mov    rdx,QWORD PTR [rbp-0x258]
  411b73:	mov    rcx,QWORD PTR [rbp-0x250]
  411b7a:	mov    rax,QWORD PTR [rbp-0x248]
  411b81:	mov    rsi,rcx
  411b84:	mov    rdi,rax
  411b87:	call   411362 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
  411b8c:	mov    QWORD PTR [rbp-0x250],rax
  411b93:	jmp    411d51 <flatcc_json_parser_generic_json@@Base+0x4c1>
  411b98:	mov    rax,QWORD PTR [rbp-0x230]
  411b9f:	cmp    rax,QWORD PTR [rbp-0x228]
  411ba6:	jne    411bcf <flatcc_json_parser_generic_json@@Base+0x33f>
  411ba8:	mov    rdx,QWORD PTR [rbp-0x258]
  411baf:	mov    rsi,QWORD PTR [rbp-0x250]
  411bb6:	mov    rax,QWORD PTR [rbp-0x248]
  411bbd:	mov    ecx,0x2
  411bc2:	mov    rdi,rax
  411bc5:	call   410789 <flatcc_json_parser_set_error@@Base>
  411bca:	jmp    411e63 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411bcf:	mov    rax,QWORD PTR [rbp-0x230]
  411bd6:	lea    rdx,[rax+0x1]
  411bda:	mov    QWORD PTR [rbp-0x230],rdx
  411be1:	mov    BYTE PTR [rax],0x5d
  411be4:	mov    rax,QWORD PTR [rbp-0x250]
  411beb:	lea    rcx,[rax+0x1]
  411bef:	mov    rdx,QWORD PTR [rbp-0x258]
  411bf6:	mov    rax,QWORD PTR [rbp-0x248]
  411bfd:	mov    rsi,rcx
  411c00:	mov    rdi,rax
  411c03:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  411c08:	mov    QWORD PTR [rbp-0x250],rax
  411c0f:	mov    rax,QWORD PTR [rbp-0x250]
  411c16:	cmp    rax,QWORD PTR [rbp-0x258]
  411c1d:	je     4118eb <flatcc_json_parser_generic_json@@Base+0x5b>
  411c23:	mov    rax,QWORD PTR [rbp-0x250]
  411c2a:	movzx  eax,BYTE PTR [rax]
  411c2d:	cmp    al,0x5d
  411c2f:	je     411d44 <flatcc_json_parser_generic_json@@Base+0x4b4>
  411c35:	jmp    4118eb <flatcc_json_parser_generic_json@@Base+0x5b>
  411c3a:	mov    rax,QWORD PTR [rbp-0x230]
  411c41:	cmp    rax,QWORD PTR [rbp-0x228]
  411c48:	jne    411c71 <flatcc_json_parser_generic_json@@Base+0x3e1>
  411c4a:	mov    rdx,QWORD PTR [rbp-0x258]
  411c51:	mov    rsi,QWORD PTR [rbp-0x250]
  411c58:	mov    rax,QWORD PTR [rbp-0x248]
  411c5f:	mov    ecx,0x2
  411c64:	mov    rdi,rax
  411c67:	call   410789 <flatcc_json_parser_set_error@@Base>
  411c6c:	jmp    411e63 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411c71:	mov    rax,QWORD PTR [rbp-0x230]
  411c78:	lea    rdx,[rax+0x1]
  411c7c:	mov    QWORD PTR [rbp-0x230],rdx
  411c83:	mov    BYTE PTR [rax],0x7d
  411c86:	mov    rax,QWORD PTR [rbp-0x250]
  411c8d:	lea    rcx,[rax+0x1]
  411c91:	mov    rdx,QWORD PTR [rbp-0x258]
  411c98:	mov    rax,QWORD PTR [rbp-0x248]
  411c9f:	mov    rsi,rcx
  411ca2:	mov    rdi,rax
  411ca5:	call   40c838 <flatcc_emitter_copy_buffer@@Base+0x1ed>
  411caa:	mov    QWORD PTR [rbp-0x250],rax
  411cb1:	mov    rax,QWORD PTR [rbp-0x250]
  411cb8:	cmp    rax,QWORD PTR [rbp-0x258]
  411cbf:	je     4118eb <flatcc_json_parser_generic_json@@Base+0x5b>
  411cc5:	mov    rax,QWORD PTR [rbp-0x250]
  411ccc:	movzx  eax,BYTE PTR [rax]
  411ccf:	cmp    al,0x7d
  411cd1:	je     411d4a <flatcc_json_parser_generic_json@@Base+0x4ba>
  411cd3:	jmp    4118eb <flatcc_json_parser_generic_json@@Base+0x5b>
  411cd8:	mov    rax,QWORD PTR [rbp-0x250]
  411cdf:	mov    QWORD PTR [rbp-0x220],rax
  411ce6:	mov    rdx,QWORD PTR [rbp-0x258]
  411ced:	mov    rcx,QWORD PTR [rbp-0x220]
  411cf4:	mov    rax,QWORD PTR [rbp-0x248]
  411cfb:	mov    rsi,rcx
  411cfe:	mov    rdi,rax
  411d01:	call   410fc4 <flatcc_json_parser_skip_constant@@Base>
  411d06:	mov    QWORD PTR [rbp-0x250],rax
  411d0d:	mov    rax,QWORD PTR [rbp-0x220]
  411d14:	cmp    rax,QWORD PTR [rbp-0x250]
  411d1b:	jne    411d50 <flatcc_json_parser_generic_json@@Base+0x4c0>
  411d1d:	mov    rdx,QWORD PTR [rbp-0x258]
  411d24:	mov    rsi,QWORD PTR [rbp-0x250]
  411d2b:	mov    rax,QWORD PTR [rbp-0x248]
  411d32:	mov    ecx,0x5
  411d37:	mov    rdi,rax
  411d3a:	call   410789 <flatcc_json_parser_set_error@@Base>
  411d3f:	jmp    411e63 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411d44:	nop
  411d45:	jmp    411ddb <flatcc_json_parser_generic_json@@Base+0x54b>
  411d4a:	nop
  411d4b:	jmp    411ddb <flatcc_json_parser_generic_json@@Base+0x54b>
  411d50:	nop
  411d51:	jmp    411ddb <flatcc_json_parser_generic_json@@Base+0x54b>
  411d56:	sub    QWORD PTR [rbp-0x230],0x1
  411d5e:	mov    rax,QWORD PTR [rbp-0x230]
  411d65:	movzx  eax,BYTE PTR [rax]
  411d68:	cmp    al,0x5d
  411d6a:	jne    411d99 <flatcc_json_parser_generic_json@@Base+0x509>
  411d6c:	lea    rcx,[rbp-0x234]
  411d73:	mov    rdx,QWORD PTR [rbp-0x258]
  411d7a:	mov    rsi,QWORD PTR [rbp-0x250]
  411d81:	mov    rax,QWORD PTR [rbp-0x248]
  411d88:	mov    rdi,rax
  411d8b:	call   40cd48 <flatcc_emitter_copy_buffer@@Base+0x6fd>
  411d90:	mov    QWORD PTR [rbp-0x250],rax
  411d97:	jmp    411dc4 <flatcc_json_parser_generic_json@@Base+0x534>
  411d99:	lea    rcx,[rbp-0x234]
  411da0:	mov    rdx,QWORD PTR [rbp-0x258]
  411da7:	mov    rsi,QWORD PTR [rbp-0x250]
  411dae:	mov    rax,QWORD PTR [rbp-0x248]
  411db5:	mov    rdi,rax
  411db8:	call   40cb4d <flatcc_emitter_copy_buffer@@Base+0x502>
  411dbd:	mov    QWORD PTR [rbp-0x250],rax
  411dc4:	mov    eax,DWORD PTR [rbp-0x234]
  411dca:	test   eax,eax
  411dcc:	je     411ddb <flatcc_json_parser_generic_json@@Base+0x54b>
  411dce:	add    QWORD PTR [rbp-0x230],0x1
  411dd6:	jmp    4118eb <flatcc_json_parser_generic_json@@Base+0x5b>
  411ddb:	mov    rax,QWORD PTR [rbp-0x250]
  411de2:	cmp    rax,QWORD PTR [rbp-0x258]
  411de9:	je     411dff <flatcc_json_parser_generic_json@@Base+0x56f>
  411deb:	lea    rax,[rbp-0x210]
  411df2:	cmp    QWORD PTR [rbp-0x230],rax
  411df9:	jne    411d56 <flatcc_json_parser_generic_json@@Base+0x4c6>
  411dff:	mov    rax,QWORD PTR [rbp-0x250]
  411e06:	cmp    rax,QWORD PTR [rbp-0x258]
  411e0d:	jne    411e5c <flatcc_json_parser_generic_json@@Base+0x5cc>
  411e0f:	lea    rax,[rbp-0x210]
  411e16:	cmp    QWORD PTR [rbp-0x230],rax
  411e1d:	je     411e5c <flatcc_json_parser_generic_json@@Base+0x5cc>
  411e1f:	mov    rax,QWORD PTR [rbp-0x230]
  411e26:	sub    rax,0x1
  411e2a:	movzx  eax,BYTE PTR [rax]
  411e2d:	cmp    al,0x5d
  411e2f:	jne    411e38 <flatcc_json_parser_generic_json@@Base+0x5a8>
  411e31:	mov    ecx,0x9
  411e36:	jmp    411e3d <flatcc_json_parser_generic_json@@Base+0x5ad>
  411e38:	mov    ecx,0xa
  411e3d:	mov    rdx,QWORD PTR [rbp-0x258]
  411e44:	mov    rsi,QWORD PTR [rbp-0x250]
  411e4b:	mov    rax,QWORD PTR [rbp-0x248]
  411e52:	mov    rdi,rax
  411e55:	call   410789 <flatcc_json_parser_set_error@@Base>
  411e5a:	jmp    411e63 <flatcc_json_parser_generic_json@@Base+0x5d3>
  411e5c:	mov    rax,QWORD PTR [rbp-0x250]
  411e63:	mov    rdi,QWORD PTR [rbp-0x8]
  411e67:	xor    rdi,QWORD PTR fs:0x28
  411e70:	je     411e77 <flatcc_json_parser_generic_json@@Base+0x5e7>
  411e72:	call   403060 <__stack_chk_fail@plt>
  411e77:	leave  
  411e78:	ret    

0000000000411e79 <flatcc_json_parser_integer@@Base>:
  411e79:	push   rbp
  411e7a:	mov    rbp,rsp
  411e7d:	sub    rsp,0x50
  411e81:	mov    QWORD PTR [rbp-0x28],rdi
  411e85:	mov    QWORD PTR [rbp-0x30],rsi
  411e89:	mov    QWORD PTR [rbp-0x38],rdx
  411e8d:	mov    QWORD PTR [rbp-0x40],rcx
  411e91:	mov    QWORD PTR [rbp-0x48],r8
  411e95:	mov    QWORD PTR [rbp-0x18],0x0
  411e9d:	mov    rax,QWORD PTR [rbp-0x30]
  411ea1:	cmp    rax,QWORD PTR [rbp-0x38]
  411ea5:	jne    411eb0 <flatcc_json_parser_integer@@Base+0x37>
  411ea7:	mov    rax,QWORD PTR [rbp-0x30]
  411eab:	jmp    411fd1 <flatcc_json_parser_integer@@Base+0x158>
  411eb0:	mov    rax,QWORD PTR [rbp-0x30]
  411eb4:	mov    QWORD PTR [rbp-0x10],rax
  411eb8:	mov    rax,QWORD PTR [rbp-0x30]
  411ebc:	movzx  eax,BYTE PTR [rax]
  411ebf:	cmp    al,0x2d
  411ec1:	sete   al
  411ec4:	movzx  edx,al
  411ec7:	mov    rax,QWORD PTR [rbp-0x40]
  411ecb:	mov    DWORD PTR [rax],edx
  411ecd:	mov    rax,QWORD PTR [rbp-0x40]
  411ed1:	mov    eax,DWORD PTR [rax]
  411ed3:	cdqe   
  411ed5:	add    QWORD PTR [rbp-0x30],rax
  411ed9:	jmp    411f48 <flatcc_json_parser_integer@@Base+0xcf>
  411edb:	mov    rax,QWORD PTR [rbp-0x18]
  411edf:	mov    QWORD PTR [rbp-0x8],rax
  411ee3:	mov    rdx,QWORD PTR [rbp-0x18]
  411ee7:	mov    rax,rdx
  411eea:	shl    rax,0x2
  411eee:	add    rax,rdx
  411ef1:	add    rax,rax
  411ef4:	mov    rdx,rax
  411ef7:	mov    rax,QWORD PTR [rbp-0x30]
  411efb:	movzx  eax,BYTE PTR [rax]
  411efe:	movsx  rax,al
  411f02:	add    rax,rdx
  411f05:	sub    rax,0x30
  411f09:	mov    QWORD PTR [rbp-0x18],rax
  411f0d:	mov    rax,QWORD PTR [rbp-0x8]
  411f11:	cmp    rax,QWORD PTR [rbp-0x18]
  411f15:	jbe    411f43 <flatcc_json_parser_integer@@Base+0xca>
  411f17:	cmp    QWORD PTR [rbp-0x40],0x0
  411f1c:	je     411f25 <flatcc_json_parser_integer@@Base+0xac>
  411f1e:	mov    ecx,0x8
  411f23:	jmp    411f2a <flatcc_json_parser_integer@@Base+0xb1>
  411f25:	mov    ecx,0x7
  411f2a:	mov    rdx,QWORD PTR [rbp-0x38]
  411f2e:	mov    rsi,QWORD PTR [rbp-0x30]
  411f32:	mov    rax,QWORD PTR [rbp-0x28]
  411f36:	mov    rdi,rax
  411f39:	call   410789 <flatcc_json_parser_set_error@@Base>
  411f3e:	jmp    411fd1 <flatcc_json_parser_integer@@Base+0x158>
  411f43:	add    QWORD PTR [rbp-0x30],0x1
  411f48:	mov    rax,QWORD PTR [rbp-0x30]
  411f4c:	cmp    rax,QWORD PTR [rbp-0x38]
  411f50:	je     411f6c <flatcc_json_parser_integer@@Base+0xf3>
  411f52:	mov    rax,QWORD PTR [rbp-0x30]
  411f56:	movzx  eax,BYTE PTR [rax]
  411f59:	cmp    al,0x2f
  411f5b:	jle    411f6c <flatcc_json_parser_integer@@Base+0xf3>
  411f5d:	mov    rax,QWORD PTR [rbp-0x30]
  411f61:	movzx  eax,BYTE PTR [rax]
  411f64:	cmp    al,0x39
  411f66:	jle    411edb <flatcc_json_parser_integer@@Base+0x62>
  411f6c:	mov    rax,QWORD PTR [rbp-0x30]
  411f70:	cmp    rax,QWORD PTR [rbp-0x10]
  411f74:	jne    411f7c <flatcc_json_parser_integer@@Base+0x103>
  411f76:	mov    rax,QWORD PTR [rbp-0x30]
  411f7a:	jmp    411fd1 <flatcc_json_parser_integer@@Base+0x158>
  411f7c:	mov    rax,QWORD PTR [rbp-0x30]
  411f80:	cmp    rax,QWORD PTR [rbp-0x38]
  411f84:	je     411fc2 <flatcc_json_parser_integer@@Base+0x149>
  411f86:	mov    rax,QWORD PTR [rbp-0x30]
  411f8a:	movzx  eax,BYTE PTR [rax]
  411f8d:	cmp    al,0x65
  411f8f:	je     411fa7 <flatcc_json_parser_integer@@Base+0x12e>
  411f91:	mov    rax,QWORD PTR [rbp-0x30]
  411f95:	movzx  eax,BYTE PTR [rax]
  411f98:	cmp    al,0x45
  411f9a:	je     411fa7 <flatcc_json_parser_integer@@Base+0x12e>
  411f9c:	mov    rax,QWORD PTR [rbp-0x30]
  411fa0:	movzx  eax,BYTE PTR [rax]
  411fa3:	cmp    al,0x2e
  411fa5:	jne    411fc2 <flatcc_json_parser_integer@@Base+0x149>
  411fa7:	mov    rdx,QWORD PTR [rbp-0x38]
  411fab:	mov    rsi,QWORD PTR [rbp-0x30]
  411faf:	mov    rax,QWORD PTR [rbp-0x28]
  411fb3:	mov    ecx,0xc
  411fb8:	mov    rdi,rax
  411fbb:	call   410789 <flatcc_json_parser_set_error@@Base>
  411fc0:	jmp    411fd1 <flatcc_json_parser_integer@@Base+0x158>
  411fc2:	mov    rax,QWORD PTR [rbp-0x48]
  411fc6:	mov    rdx,QWORD PTR [rbp-0x18]
  411fca:	mov    QWORD PTR [rax],rdx
  411fcd:	mov    rax,QWORD PTR [rbp-0x30]
  411fd1:	leave  
  411fd2:	ret    

0000000000411fd3 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  411fd3:	push   rbp
  411fd4:	mov    rbp,rsp
  411fd7:	sub    rsp,0x70
  411fdb:	mov    QWORD PTR [rbp-0x48],rdi
  411fdf:	mov    QWORD PTR [rbp-0x50],rsi
  411fe3:	mov    QWORD PTR [rbp-0x58],rdx
  411fe7:	mov    QWORD PTR [rbp-0x60],rcx
  411feb:	mov    DWORD PTR [rbp-0x64],r8d
  411fef:	mov    rax,QWORD PTR fs:0x28
  411ff8:	mov    QWORD PTR [rbp-0x8],rax
  411ffc:	xor    eax,eax
  411ffe:	cmp    DWORD PTR [rbp-0x64],0x0
  412002:	setne  al
  412005:	movzx  eax,al
  412008:	mov    DWORD PTR [rbp-0x38],eax
  41200b:	mov    rdx,QWORD PTR [rbp-0x58]
  41200f:	mov    rcx,QWORD PTR [rbp-0x50]
  412013:	mov    rax,QWORD PTR [rbp-0x48]
  412017:	mov    rsi,rcx
  41201a:	mov    rdi,rax
  41201d:	call   40c8ae <flatcc_emitter_copy_buffer@@Base+0x263>
  412022:	mov    QWORD PTR [rbp-0x50],rax
  412026:	mov    rax,QWORD PTR [rbp-0x50]
  41202a:	mov    QWORD PTR [rbp-0x20],rax
  41202e:	mov    rdx,QWORD PTR [rbp-0x58]
  412032:	mov    rcx,QWORD PTR [rbp-0x20]
  412036:	mov    rax,QWORD PTR [rbp-0x48]
  41203a:	mov    rsi,rcx
  41203d:	mov    rdi,rax
  412040:	call   4107e1 <flatcc_json_parser_string_part@@Base>
  412045:	mov    QWORD PTR [rbp-0x50],rax
  412049:	mov    rax,QWORD PTR [rbp-0x50]
  41204d:	cmp    rax,QWORD PTR [rbp-0x58]
  412051:	je     4121e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  412057:	mov    rax,QWORD PTR [rbp-0x50]
  41205b:	movzx  eax,BYTE PTR [rax]
  41205e:	cmp    al,0x22
  412060:	jne    4121e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  412066:	mov    rdx,QWORD PTR [rbp-0x50]
  41206a:	mov    rax,QWORD PTR [rbp-0x20]
  41206e:	sub    rdx,rax
  412071:	mov    rax,rdx
  412074:	mov    rdi,rax
  412077:	call   40fe53 <grisu3_diy_fp_encode_double@@Base+0x1176>
  41207c:	mov    QWORD PTR [rbp-0x18],rax
  412080:	mov    rax,QWORD PTR [rbp-0x48]
  412084:	mov    rax,QWORD PTR [rax]
  412087:	mov    ecx,0xffffffff
  41208c:	mov    edx,0x1
  412091:	mov    esi,0x1
  412096:	mov    rdi,rax
  412099:	call   409110 <flatcc_builder_start_vector@@Base>
  41209e:	test   eax,eax
  4120a0:	jne    4121b3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e0>
  4120a6:	mov    rax,QWORD PTR [rbp-0x48]
  4120aa:	mov    rax,QWORD PTR [rax]
  4120ad:	mov    rdx,QWORD PTR [rbp-0x18]
  4120b1:	mov    rsi,rdx
  4120b4:	mov    rdi,rax
  4120b7:	call   4089f8 <flatcc_builder_extend_vector@@Base>
  4120bc:	mov    QWORD PTR [rbp-0x10],rax
  4120c0:	cmp    QWORD PTR [rbp-0x10],0x0
  4120c5:	je     4121b6 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e3>
  4120cb:	mov    rdx,QWORD PTR [rbp-0x50]
  4120cf:	mov    rax,QWORD PTR [rbp-0x20]
  4120d3:	sub    rdx,rax
  4120d6:	mov    rax,rdx
  4120d9:	mov    QWORD PTR [rbp-0x28],rax
  4120dd:	mov    rax,QWORD PTR [rbp-0x18]
  4120e1:	mov    QWORD PTR [rbp-0x30],rax
  4120e5:	mov    edi,DWORD PTR [rbp-0x38]
  4120e8:	lea    rcx,[rbp-0x28]
  4120ec:	lea    rdx,[rbp-0x30]
  4120f0:	mov    rsi,QWORD PTR [rbp-0x20]
  4120f4:	mov    rax,QWORD PTR [rbp-0x10]
  4120f8:	mov    r8d,edi
  4120fb:	mov    rdi,rax
  4120fe:	call   4101ac <grisu3_diy_fp_encode_double@@Base+0x14cf>
  412103:	mov    DWORD PTR [rbp-0x34],eax
  412106:	cmp    DWORD PTR [rbp-0x34],0x0
  41210a:	je     412120 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14d>
  41210c:	mov    rdx,QWORD PTR [rbp-0x28]
  412110:	mov    rax,QWORD PTR [rbp-0x20]
  412114:	add    rax,rdx
  412117:	mov    QWORD PTR [rbp-0x50],rax
  41211b:	jmp    4121e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  412120:	mov    rdx,QWORD PTR [rbp-0x50]
  412124:	mov    rax,QWORD PTR [rbp-0x20]
  412128:	sub    rdx,rax
  41212b:	mov    rax,rdx
  41212e:	mov    rdx,rax
  412131:	mov    rax,QWORD PTR [rbp-0x28]
  412135:	cmp    rdx,rax
  412138:	je     41214e <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17b>
  41213a:	mov    rdx,QWORD PTR [rbp-0x28]
  41213e:	mov    rax,QWORD PTR [rbp-0x20]
  412142:	add    rax,rdx
  412145:	mov    QWORD PTR [rbp-0x50],rax
  412149:	jmp    4121e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20f>
  41214e:	mov    rax,QWORD PTR [rbp-0x30]
  412152:	cmp    rax,QWORD PTR [rbp-0x18]
  412156:	jae    412179 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1a6>
  412158:	mov    rax,QWORD PTR [rbp-0x30]
  41215c:	mov    rdx,QWORD PTR [rbp-0x18]
  412160:	sub    rdx,rax
  412163:	mov    rax,QWORD PTR [rbp-0x48]
  412167:	mov    rax,QWORD PTR [rax]
  41216a:	mov    rsi,rdx
  41216d:	mov    rdi,rax
  412170:	call   408eac <flatcc_builder_truncate_vector@@Base>
  412175:	test   eax,eax
  412177:	jne    4121b9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e6>
  412179:	mov    rax,QWORD PTR [rbp-0x48]
  41217d:	mov    rax,QWORD PTR [rax]
  412180:	mov    rdi,rax
  412183:	call   40a2e6 <flatcc_builder_end_vector@@Base>
  412188:	mov    edx,eax
  41218a:	mov    rax,QWORD PTR [rbp-0x60]
  41218e:	mov    DWORD PTR [rax],edx
  412190:	mov    rax,QWORD PTR [rbp-0x60]
  412194:	mov    eax,DWORD PTR [rax]
  412196:	test   eax,eax
  412198:	je     4121bc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1e9>
  41219a:	mov    rdx,QWORD PTR [rbp-0x58]
  41219e:	mov    rcx,QWORD PTR [rbp-0x50]
  4121a2:	mov    rax,QWORD PTR [rbp-0x48]
  4121a6:	mov    rsi,rcx
  4121a9:	mov    rdi,rax
  4121ac:	call   40c8fd <flatcc_emitter_copy_buffer@@Base+0x2b2>
  4121b1:	jmp    412212 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x23f>
  4121b3:	nop
  4121b4:	jmp    4121bd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  4121b6:	nop
  4121b7:	jmp    4121bd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  4121b9:	nop
  4121ba:	jmp    4121bd <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ea>
  4121bc:	nop
  4121bd:	mov    rax,QWORD PTR [rbp-0x60]
  4121c1:	mov    DWORD PTR [rax],0x0
  4121c7:	mov    rdx,QWORD PTR [rbp-0x58]
  4121cb:	mov    rsi,QWORD PTR [rbp-0x50]
  4121cf:	mov    rax,QWORD PTR [rbp-0x48]
  4121d3:	mov    ecx,0x21
  4121d8:	mov    rdi,rax
  4121db:	call   410789 <flatcc_json_parser_set_error@@Base>
  4121e0:	jmp    412212 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x23f>
  4121e2:	mov    rax,QWORD PTR [rbp-0x60]
  4121e6:	mov    DWORD PTR [rax],0x0
  4121ec:	cmp    DWORD PTR [rbp-0x64],0x0
  4121f0:	je     4121f9 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x226>
  4121f2:	mov    ecx,0x20
  4121f7:	jmp    4121fe <flatcc_json_parser_build_uint8_vector_base64@@Base+0x22b>
  4121f9:	mov    ecx,0x1f
  4121fe:	mov    rdx,QWORD PTR [rbp-0x58]
  412202:	mov    rsi,QWORD PTR [rbp-0x50]
  412206:	mov    rax,QWORD PTR [rbp-0x48]
  41220a:	mov    rdi,rax
  41220d:	call   410789 <flatcc_json_parser_set_error@@Base>
  412212:	mov    rdi,QWORD PTR [rbp-0x8]
  412216:	xor    rdi,QWORD PTR fs:0x28
  41221f:	je     412226 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x253>
  412221:	call   403060 <__stack_chk_fail@plt>
  412226:	leave  
  412227:	ret    

0000000000412228 <flatcc_json_parser_build_string@@Base>:
  412228:	push   rbp
  412229:	mov    rbp,rsp
  41222c:	sub    rsp,0x40
  412230:	mov    QWORD PTR [rbp-0x28],rdi
  412234:	mov    QWORD PTR [rbp-0x30],rsi
  412238:	mov    QWORD PTR [rbp-0x38],rdx
  41223c:	mov    QWORD PTR [rbp-0x40],rcx
  412240:	mov    rax,QWORD PTR fs:0x28
  412249:	mov    QWORD PTR [rbp-0x8],rax
  41224d:	xor    eax,eax
  41224f:	mov    rdx,QWORD PTR [rbp-0x38]
  412253:	mov    rcx,QWORD PTR [rbp-0x30]
  412257:	mov    rax,QWORD PTR [rbp-0x28]
  41225b:	mov    rsi,rcx
  41225e:	mov    rdi,rax
  412261:	call   40c8ae <flatcc_emitter_copy_buffer@@Base+0x263>
  412266:	mov    QWORD PTR [rbp-0x30],rax
  41226a:	mov    rax,QWORD PTR [rbp-0x30]
  41226e:	mov    QWORD PTR [rbp-0x18],rax
  412272:	mov    rdx,QWORD PTR [rbp-0x38]
  412276:	mov    rcx,QWORD PTR [rbp-0x18]
  41227a:	mov    rax,QWORD PTR [rbp-0x28]
  41227e:	mov    rsi,rcx
  412281:	mov    rdi,rax
  412284:	call   4107e1 <flatcc_json_parser_string_part@@Base>
  412289:	mov    QWORD PTR [rbp-0x30],rax
  41228d:	mov    rax,QWORD PTR [rbp-0x30]
  412291:	cmp    rax,QWORD PTR [rbp-0x38]
  412295:	je     4122d6 <flatcc_json_parser_build_string@@Base+0xae>
  412297:	mov    rax,QWORD PTR [rbp-0x30]
  41229b:	movzx  eax,BYTE PTR [rax]
  41229e:	cmp    al,0x22
  4122a0:	jne    4122d6 <flatcc_json_parser_build_string@@Base+0xae>
  4122a2:	mov    rdx,QWORD PTR [rbp-0x30]
  4122a6:	mov    rax,QWORD PTR [rbp-0x18]
  4122aa:	sub    rdx,rax
  4122ad:	mov    rax,rdx
  4122b0:	mov    rdx,rax
  4122b3:	mov    rax,QWORD PTR [rbp-0x28]
  4122b7:	mov    rax,QWORD PTR [rax]
  4122ba:	mov    rcx,QWORD PTR [rbp-0x18]
  4122be:	mov    rsi,rcx
  4122c1:	mov    rdi,rax
  4122c4:	call   40b15b <flatcc_builder_create_string@@Base>
  4122c9:	mov    edx,eax
  4122cb:	mov    rax,QWORD PTR [rbp-0x40]
  4122cf:	mov    DWORD PTR [rax],edx
  4122d1:	jmp    4123f2 <flatcc_json_parser_build_string@@Base+0x1ca>
  4122d6:	mov    rax,QWORD PTR [rbp-0x28]
  4122da:	mov    rax,QWORD PTR [rax]
  4122dd:	mov    rdi,rax
  4122e0:	call   409297 <flatcc_builder_start_string@@Base>
  4122e5:	test   eax,eax
  4122e7:	jne    41240f <flatcc_json_parser_build_string@@Base+0x1e7>
  4122ed:	mov    rdx,QWORD PTR [rbp-0x30]
  4122f1:	mov    rax,QWORD PTR [rbp-0x18]
  4122f5:	sub    rdx,rax
  4122f8:	mov    rax,rdx
  4122fb:	mov    rdx,rax
  4122fe:	mov    rax,QWORD PTR [rbp-0x28]
  412302:	mov    rax,QWORD PTR [rax]
  412305:	mov    rcx,QWORD PTR [rbp-0x18]
  412309:	mov    rsi,rcx
  41230c:	mov    rdi,rax
  41230f:	call   408db5 <flatcc_builder_append_string@@Base>
  412314:	test   rax,rax
  412317:	je     41240f <flatcc_json_parser_build_string@@Base+0x1e7>
  41231d:	jmp    4123c2 <flatcc_json_parser_build_string@@Base+0x19a>
  412322:	lea    rcx,[rbp-0xc]
  412326:	mov    rdx,QWORD PTR [rbp-0x38]
  41232a:	mov    rsi,QWORD PTR [rbp-0x30]
  41232e:	mov    rax,QWORD PTR [rbp-0x28]
  412332:	mov    rdi,rax
  412335:	call   4109e7 <flatcc_json_parser_string_escape@@Base>
  41233a:	mov    QWORD PTR [rbp-0x30],rax
  41233e:	movzx  eax,BYTE PTR [rbp-0xc]
  412342:	movsx  rdx,al
  412346:	lea    rax,[rbp-0xc]
  41234a:	add    rax,0x1
  41234e:	mov    rcx,QWORD PTR [rbp-0x28]
  412352:	mov    rcx,QWORD PTR [rcx]
  412355:	mov    rsi,rax
  412358:	mov    rdi,rcx
  41235b:	call   408db5 <flatcc_builder_append_string@@Base>
  412360:	test   rax,rax
  412363:	je     41240b <flatcc_json_parser_build_string@@Base+0x1e3>
  412369:	mov    rax,QWORD PTR [rbp-0x30]
  41236d:	mov    QWORD PTR [rbp-0x18],rax
  412371:	mov    rdx,QWORD PTR [rbp-0x38]
  412375:	mov    rcx,QWORD PTR [rbp-0x18]
  412379:	mov    rax,QWORD PTR [rbp-0x28]
  41237d:	mov    rsi,rcx
  412380:	mov    rdi,rax
  412383:	call   4107e1 <flatcc_json_parser_string_part@@Base>
  412388:	mov    QWORD PTR [rbp-0x30],rax
  41238c:	mov    rax,QWORD PTR [rbp-0x30]
  412390:	cmp    rax,QWORD PTR [rbp-0x38]
  412394:	je     4123c2 <flatcc_json_parser_build_string@@Base+0x19a>
  412396:	mov    rdx,QWORD PTR [rbp-0x30]
  41239a:	mov    rax,QWORD PTR [rbp-0x18]
  41239e:	sub    rdx,rax
  4123a1:	mov    rax,rdx
  4123a4:	mov    rdx,rax
  4123a7:	mov    rax,QWORD PTR [rbp-0x28]
  4123ab:	mov    rax,QWORD PTR [rax]
  4123ae:	mov    rcx,QWORD PTR [rbp-0x18]
  4123b2:	mov    rsi,rcx
  4123b5:	mov    rdi,rax
  4123b8:	call   408db5 <flatcc_builder_append_string@@Base>
  4123bd:	test   rax,rax
  4123c0:	je     41240e <flatcc_json_parser_build_string@@Base+0x1e6>
  4123c2:	mov    rax,QWORD PTR [rbp-0x30]
  4123c6:	cmp    rax,QWORD PTR [rbp-0x38]
  4123ca:	je     4123db <flatcc_json_parser_build_string@@Base+0x1b3>
  4123cc:	mov    rax,QWORD PTR [rbp-0x30]
  4123d0:	movzx  eax,BYTE PTR [rax]
  4123d3:	cmp    al,0x22
  4123d5:	jne    412322 <flatcc_json_parser_build_string@@Base+0xfa>
  4123db:	mov    rax,QWORD PTR [rbp-0x28]
  4123df:	mov    rax,QWORD PTR [rax]
  4123e2:	mov    rdi,rax
  4123e5:	call   40b3d2 <flatcc_builder_end_string@@Base>
  4123ea:	mov    edx,eax
  4123ec:	mov    rax,QWORD PTR [rbp-0x40]
  4123f0:	mov    DWORD PTR [rax],edx
  4123f2:	mov    rdx,QWORD PTR [rbp-0x38]
  4123f6:	mov    rcx,QWORD PTR [rbp-0x30]
  4123fa:	mov    rax,QWORD PTR [rbp-0x28]
  4123fe:	mov    rsi,rcx
  412401:	mov    rdi,rax
  412404:	call   40c8fd <flatcc_emitter_copy_buffer@@Base+0x2b2>
  412409:	jmp    41241d <flatcc_json_parser_build_string@@Base+0x1f5>
  41240b:	nop
  41240c:	jmp    41240f <flatcc_json_parser_build_string@@Base+0x1e7>
  41240e:	nop
  41240f:	mov    rax,QWORD PTR [rbp-0x40]
  412413:	mov    DWORD PTR [rax],0x0
  412419:	mov    rax,QWORD PTR [rbp-0x30]
  41241d:	mov    rsi,QWORD PTR [rbp-0x8]
  412421:	xor    rsi,QWORD PTR fs:0x28
  41242a:	je     412431 <flatcc_json_parser_build_string@@Base+0x209>
  41242c:	call   403060 <__stack_chk_fail@plt>
  412431:	leave  
  412432:	ret    

0000000000412433 <flatcc_json_parser_prepare_unions@@Base>:
  412433:	push   rbp
  412434:	mov    rbp,rsp
  412437:	sub    rsp,0x40
  41243b:	mov    QWORD PTR [rbp-0x18],rdi
  41243f:	mov    QWORD PTR [rbp-0x20],rsi
  412443:	mov    QWORD PTR [rbp-0x28],rdx
  412447:	mov    QWORD PTR [rbp-0x30],rcx
  41244b:	mov    QWORD PTR [rbp-0x38],r8
  41244f:	mov    rdx,QWORD PTR [rbp-0x30]
  412453:	mov    rax,rdx
  412456:	shl    rax,0x2
  41245a:	add    rax,rdx
  41245d:	shl    rax,0x3
  412461:	lea    rdx,[rax+0x10]
  412465:	mov    rax,QWORD PTR [rbp-0x18]
  412469:	mov    rax,QWORD PTR [rax]
  41246c:	mov    rsi,rdx
  41246f:	mov    rdi,rax
  412472:	call   407527 <flatcc_builder_enter_user_frame@@Base>
  412477:	mov    rdx,rax
  41247a:	mov    rax,QWORD PTR [rbp-0x38]
  41247e:	mov    QWORD PTR [rax],rdx
  412481:	mov    rax,QWORD PTR [rbp-0x38]
  412485:	mov    rax,QWORD PTR [rax]
  412488:	test   rax,rax
  41248b:	jne    4124a8 <flatcc_json_parser_prepare_unions@@Base+0x75>
  41248d:	mov    rdx,QWORD PTR [rbp-0x28]
  412491:	mov    rsi,QWORD PTR [rbp-0x20]
  412495:	mov    rax,QWORD PTR [rbp-0x18]
  412499:	mov    ecx,0x21
  41249e:	mov    rdi,rax
  4124a1:	call   410789 <flatcc_json_parser_set_error@@Base>
  4124a6:	jmp    4124d4 <flatcc_json_parser_prepare_unions@@Base+0xa1>
  4124a8:	mov    rax,QWORD PTR [rbp-0x38]
  4124ac:	mov    rdx,QWORD PTR [rax]
  4124af:	mov    rax,QWORD PTR [rbp-0x18]
  4124b3:	mov    rax,QWORD PTR [rax]
  4124b6:	mov    rsi,rdx
  4124b9:	mov    rdi,rax
  4124bc:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  4124c1:	mov    QWORD PTR [rbp-0x8],rax
  4124c5:	mov    rax,QWORD PTR [rbp-0x8]
  4124c9:	mov    rdx,QWORD PTR [rbp-0x30]
  4124cd:	mov    QWORD PTR [rax],rdx
  4124d0:	mov    rax,QWORD PTR [rbp-0x20]
  4124d4:	leave  
  4124d5:	ret    

00000000004124d6 <flatcc_json_parser_finalize_unions@@Base>:
  4124d6:	push   rbp
  4124d7:	mov    rbp,rsp
  4124da:	sub    rsp,0x30
  4124de:	mov    QWORD PTR [rbp-0x18],rdi
  4124e2:	mov    QWORD PTR [rbp-0x20],rsi
  4124e6:	mov    QWORD PTR [rbp-0x28],rdx
  4124ea:	mov    QWORD PTR [rbp-0x30],rcx
  4124ee:	mov    rax,QWORD PTR [rbp-0x18]
  4124f2:	mov    rax,QWORD PTR [rax]
  4124f5:	mov    rdx,QWORD PTR [rbp-0x30]
  4124f9:	mov    rsi,rdx
  4124fc:	mov    rdi,rax
  4124ff:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  412504:	mov    QWORD PTR [rbp-0x8],rax
  412508:	mov    rax,QWORD PTR [rbp-0x8]
  41250c:	mov    rax,QWORD PTR [rax+0x8]
  412510:	test   rax,rax
  412513:	je     412532 <flatcc_json_parser_finalize_unions@@Base+0x5c>
  412515:	mov    rdx,QWORD PTR [rbp-0x28]
  412519:	mov    rsi,QWORD PTR [rbp-0x20]
  41251d:	mov    rax,QWORD PTR [rbp-0x18]
  412521:	mov    ecx,0x1b
  412526:	mov    rdi,rax
  412529:	call   410789 <flatcc_json_parser_set_error@@Base>
  41252e:	mov    QWORD PTR [rbp-0x20],rax
  412532:	mov    rax,QWORD PTR [rbp-0x18]
  412536:	mov    rax,QWORD PTR [rax]
  412539:	mov    rdx,QWORD PTR [rbp-0x30]
  41253d:	mov    rsi,rdx
  412540:	mov    rdi,rax
  412543:	call   40768a <flatcc_builder_exit_user_frame_at@@Base>
  412548:	mov    rax,QWORD PTR [rbp-0x20]
  41254c:	leave  
  41254d:	ret    

000000000041254e <flatcc_json_parser_union@@Base>:
  41254e:	push   rbp
  41254f:	mov    rbp,rsp
  412552:	sub    rsp,0x60
  412556:	mov    QWORD PTR [rbp-0x28],rdi
  41255a:	mov    QWORD PTR [rbp-0x30],rsi
  41255e:	mov    QWORD PTR [rbp-0x38],rdx
  412562:	mov    QWORD PTR [rbp-0x40],rcx
  412566:	mov    eax,r8d
  412569:	mov    QWORD PTR [rbp-0x50],r9
  41256d:	mov    WORD PTR [rbp-0x44],ax
  412571:	mov    rax,QWORD PTR [rbp+0x10]
  412575:	mov    QWORD PTR [rbp-0x58],rax
  412579:	mov    rax,QWORD PTR fs:0x28
  412582:	mov    QWORD PTR [rbp-0x8],rax
  412586:	xor    eax,eax
  412588:	mov    rax,QWORD PTR [rbp-0x28]
  41258c:	mov    rax,QWORD PTR [rax]
  41258f:	mov    rdx,QWORD PTR [rbp-0x50]
  412593:	mov    rsi,rdx
  412596:	mov    rdi,rax
  412599:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  41259e:	mov    QWORD PTR [rbp-0x20],rax
  4125a2:	mov    rdx,QWORD PTR [rbp-0x40]
  4125a6:	mov    rax,rdx
  4125a9:	shl    rax,0x2
  4125ad:	add    rax,rdx
  4125b0:	shl    rax,0x3
  4125b4:	mov    rdx,QWORD PTR [rbp-0x20]
  4125b8:	add    rax,rdx
  4125bb:	add    rax,0x10
  4125bf:	mov    QWORD PTR [rbp-0x18],rax
  4125c3:	mov    rax,QWORD PTR [rbp-0x18]
  4125c7:	mov    rax,QWORD PTR [rax]
  4125ca:	test   rax,rax
  4125cd:	je     4125ed <flatcc_json_parser_union@@Base+0x9f>
  4125cf:	mov    rdx,QWORD PTR [rbp-0x38]
  4125d3:	mov    rsi,QWORD PTR [rbp-0x30]
  4125d7:	mov    rax,QWORD PTR [rbp-0x28]
  4125db:	mov    ecx,0x1c
  4125e0:	mov    rdi,rax
  4125e3:	call   410789 <flatcc_json_parser_set_error@@Base>
  4125e8:	jmp    412711 <flatcc_json_parser_union@@Base+0x1c3>
  4125ed:	mov    rax,QWORD PTR [rbp-0x18]
  4125f1:	movzx  eax,BYTE PTR [rax+0x14]
  4125f5:	test   al,al
  4125f7:	jne    412659 <flatcc_json_parser_union@@Base+0x10b>
  4125f9:	mov    rax,QWORD PTR [rbp-0x20]
  4125fd:	mov    rax,QWORD PTR [rax+0x8]
  412601:	lea    rdx,[rax+0x1]
  412605:	mov    rax,QWORD PTR [rbp-0x20]
  412609:	mov    QWORD PTR [rax+0x8],rdx
  41260d:	mov    rax,QWORD PTR [rbp-0x28]
  412611:	mov    edx,DWORD PTR [rax+0x18]
  412614:	mov    rax,QWORD PTR [rbp-0x18]
  412618:	mov    DWORD PTR [rax+0x10],edx
  41261b:	mov    rax,QWORD PTR [rbp-0x28]
  41261f:	mov    rdx,QWORD PTR [rax+0x8]
  412623:	mov    rax,QWORD PTR [rbp-0x18]
  412627:	mov    QWORD PTR [rax+0x8],rdx
  41262b:	mov    rax,QWORD PTR [rbp-0x18]
  41262f:	mov    rdx,QWORD PTR [rbp-0x30]
  412633:	mov    QWORD PTR [rax],rdx
  412636:	mov    rax,QWORD PTR [rbp-0x18]
  41263a:	mov    rcx,QWORD PTR [rax]
  41263d:	mov    rdx,QWORD PTR [rbp-0x38]
  412641:	mov    rax,QWORD PTR [rbp-0x28]
  412645:	mov    rsi,rcx
  412648:	mov    rdi,rax
  41264b:	call   411890 <flatcc_json_parser_generic_json@@Base>
  412650:	mov    QWORD PTR [rbp-0x30],rax
  412654:	jmp    41270d <flatcc_json_parser_union@@Base+0x1bf>
  412659:	mov    rax,QWORD PTR [rbp-0x18]
  41265d:	movzx  eax,BYTE PTR [rax+0x15]
  412661:	mov    BYTE PTR [rbp-0x10],al
  412664:	mov    rax,QWORD PTR [rbp-0x18]
  412668:	movzx  eax,BYTE PTR [rax+0x15]
  41266c:	test   al,al
  41266e:	jne    41268e <flatcc_json_parser_union@@Base+0x140>
  412670:	mov    rdx,QWORD PTR [rbp-0x38]
  412674:	mov    rsi,QWORD PTR [rbp-0x30]
  412678:	mov    rax,QWORD PTR [rbp-0x28]
  41267c:	mov    ecx,0x19
  412681:	mov    rdi,rax
  412684:	call   410789 <flatcc_json_parser_set_error@@Base>
  412689:	jmp    412711 <flatcc_json_parser_union@@Base+0x1c3>
  41268e:	mov    rax,QWORD PTR [rbp-0x20]
  412692:	mov    rax,QWORD PTR [rax+0x8]
  412696:	lea    rdx,[rax-0x1]
  41269a:	mov    rax,QWORD PTR [rbp-0x20]
  41269e:	mov    QWORD PTR [rax+0x8],rdx
  4126a2:	mov    rax,QWORD PTR [rbp-0x18]
  4126a6:	movzx  eax,BYTE PTR [rax+0x15]
  4126aa:	movzx  ecx,al
  4126ad:	lea    rax,[rbp-0x10]
  4126b1:	lea    r8,[rax+0x4]
  4126b5:	mov    rdx,QWORD PTR [rbp-0x38]
  4126b9:	mov    rsi,QWORD PTR [rbp-0x30]
  4126bd:	mov    rdi,QWORD PTR [rbp-0x28]
  4126c1:	mov    rax,QWORD PTR [rbp-0x58]
  4126c5:	call   rax
  4126c7:	mov    QWORD PTR [rbp-0x30],rax
  4126cb:	mov    rax,QWORD PTR [rbp-0x30]
  4126cf:	cmp    rax,QWORD PTR [rbp-0x38]
  4126d3:	je     41270d <flatcc_json_parser_union@@Base+0x1bf>
  4126d5:	movzx  ecx,WORD PTR [rbp-0x44]
  4126d9:	mov    rax,QWORD PTR [rbp-0x28]
  4126dd:	mov    rax,QWORD PTR [rax]
  4126e0:	mov    rdx,QWORD PTR [rbp-0x10]
  4126e4:	mov    esi,ecx
  4126e6:	mov    rdi,rax
  4126e9:	call   40a8d8 <flatcc_builder_table_add_union@@Base>
  4126ee:	test   eax,eax
  4126f0:	je     41270d <flatcc_json_parser_union@@Base+0x1bf>
  4126f2:	mov    rdx,QWORD PTR [rbp-0x38]
  4126f6:	mov    rsi,QWORD PTR [rbp-0x30]
  4126fa:	mov    rax,QWORD PTR [rbp-0x28]
  4126fe:	mov    ecx,0x1c
  412703:	mov    rdi,rax
  412706:	call   410789 <flatcc_json_parser_set_error@@Base>
  41270b:	jmp    412711 <flatcc_json_parser_union@@Base+0x1c3>
  41270d:	mov    rax,QWORD PTR [rbp-0x30]
  412711:	mov    rdi,QWORD PTR [rbp-0x8]
  412715:	xor    rdi,QWORD PTR fs:0x28
  41271e:	je     412725 <flatcc_json_parser_union@@Base+0x1d7>
  412720:	call   403060 <__stack_chk_fail@plt>
  412725:	leave  
  412726:	ret    

0000000000412727 <flatcc_json_parser_union_type@@Base>:
  412727:	push   rbp
  412728:	mov    rbp,rsp
  41272b:	add    rsp,0xffffffffffffff80
  41272f:	mov    QWORD PTR [rbp-0x48],rdi
  412733:	mov    QWORD PTR [rbp-0x50],rsi
  412737:	mov    QWORD PTR [rbp-0x58],rdx
  41273b:	mov    QWORD PTR [rbp-0x60],rcx
  41273f:	mov    eax,r8d
  412742:	mov    QWORD PTR [rbp-0x70],r9
  412746:	mov    WORD PTR [rbp-0x64],ax
  41274a:	mov    rax,QWORD PTR [rbp+0x10]
  41274e:	mov    QWORD PTR [rbp-0x78],rax
  412752:	mov    rax,QWORD PTR [rbp+0x18]
  412756:	mov    QWORD PTR [rbp-0x80],rax
  41275a:	mov    rax,QWORD PTR fs:0x28
  412763:	mov    QWORD PTR [rbp-0x8],rax
  412767:	xor    eax,eax
  412769:	mov    rax,QWORD PTR [rbp-0x48]
  41276d:	mov    rax,QWORD PTR [rax]
  412770:	mov    rdx,QWORD PTR [rbp-0x70]
  412774:	mov    rsi,rdx
  412777:	mov    rdi,rax
  41277a:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  41277f:	mov    QWORD PTR [rbp-0x30],rax
  412783:	mov    rax,QWORD PTR [rbp-0x30]
  412787:	lea    rcx,[rax+0x10]
  41278b:	mov    rdx,QWORD PTR [rbp-0x60]
  41278f:	mov    rax,rdx
  412792:	shl    rax,0x2
  412796:	add    rax,rdx
  412799:	shl    rax,0x3
  41279d:	add    rax,rcx
  4127a0:	mov    QWORD PTR [rbp-0x28],rax
  4127a4:	mov    rax,QWORD PTR [rbp-0x28]
  4127a8:	movzx  eax,BYTE PTR [rax+0x14]
  4127ac:	test   al,al
  4127ae:	je     4127ce <flatcc_json_parser_union_type@@Base+0xa7>
  4127b0:	mov    rdx,QWORD PTR [rbp-0x58]
  4127b4:	mov    rsi,QWORD PTR [rbp-0x50]
  4127b8:	mov    rax,QWORD PTR [rbp-0x48]
  4127bc:	mov    ecx,0x1c
  4127c1:	mov    rdi,rax
  4127c4:	call   410789 <flatcc_json_parser_set_error@@Base>
  4127c9:	jmp    41296c <flatcc_json_parser_union_type@@Base+0x245>
  4127ce:	mov    rax,QWORD PTR [rbp-0x28]
  4127d2:	mov    BYTE PTR [rax+0x14],0x1
  4127d6:	mov    rax,QWORD PTR [rbp-0x28]
  4127da:	lea    rcx,[rax+0x15]
  4127de:	mov    rax,QWORD PTR [rbp-0x50]
  4127e2:	mov    QWORD PTR [rbp-0x20],rax
  4127e6:	mov    rdx,QWORD PTR [rbp-0x58]
  4127ea:	mov    rsi,QWORD PTR [rbp-0x20]
  4127ee:	mov    rax,QWORD PTR [rbp-0x48]
  4127f2:	mov    rdi,rax
  4127f5:	call   40d40d <flatcc_emitter_copy_buffer@@Base+0xdc2>
  4127fa:	mov    QWORD PTR [rbp-0x50],rax
  4127fe:	mov    rax,QWORD PTR [rbp-0x20]
  412802:	cmp    rax,QWORD PTR [rbp-0x50]
  412806:	jne    41282f <flatcc_json_parser_union_type@@Base+0x108>
  412808:	mov    rax,QWORD PTR [rbp-0x28]
  41280c:	lea    rdi,[rax+0x15]
  412810:	mov    rcx,QWORD PTR [rbp-0x78]
  412814:	mov    rdx,QWORD PTR [rbp-0x58]
  412818:	mov    rsi,QWORD PTR [rbp-0x50]
  41281c:	mov    rax,QWORD PTR [rbp-0x48]
  412820:	mov    r8,rdi
  412823:	mov    rdi,rax
  412826:	call   40d999 <flatcc_emitter_copy_buffer@@Base+0x134e>
  41282b:	mov    QWORD PTR [rbp-0x50],rax
  41282f:	mov    rax,QWORD PTR [rbp-0x28]
  412833:	mov    rax,QWORD PTR [rax]
  412836:	test   rax,rax
  412839:	jne    412867 <flatcc_json_parser_union_type@@Base+0x140>
  41283b:	mov    rax,QWORD PTR [rbp-0x30]
  41283f:	mov    rdx,QWORD PTR [rax+0x8]
  412843:	mov    rax,QWORD PTR [rbp-0x28]
  412847:	movzx  eax,BYTE PTR [rax+0x15]
  41284b:	test   al,al
  41284d:	setne  al
  412850:	movzx  eax,al
  412853:	add    rdx,rax
  412856:	mov    rax,QWORD PTR [rbp-0x30]
  41285a:	mov    QWORD PTR [rax+0x8],rdx
  41285e:	mov    rax,QWORD PTR [rbp-0x50]
  412862:	jmp    41296c <flatcc_json_parser_union_type@@Base+0x245>
  412867:	mov    rax,QWORD PTR [rbp-0x30]
  41286b:	mov    rax,QWORD PTR [rax+0x8]
  41286f:	test   rax,rax
  412872:	jne    412893 <flatcc_json_parser_union_type@@Base+0x16c>
  412874:	lea    rcx,[rip+0x3b35]        # 4163b0 <flatcc_builder_padding_base@@Base+0x2010>
  41287b:	mov    edx,0x3c5
  412880:	lea    rsi,[rip+0x3611]        # 415e98 <flatcc_builder_padding_base@@Base+0x1af8>
  412887:	lea    rdi,[rip+0x366e]        # 415efc <flatcc_builder_padding_base@@Base+0x1b5c>
  41288e:	call   403070 <__assert_fail@plt>
  412893:	mov    rax,QWORD PTR [rbp-0x30]
  412897:	mov    rax,QWORD PTR [rax+0x8]
  41289b:	lea    rdx,[rax-0x1]
  41289f:	mov    rax,QWORD PTR [rbp-0x30]
  4128a3:	mov    QWORD PTR [rax+0x8],rdx
  4128a7:	mov    rax,QWORD PTR [rbp-0x48]
  4128ab:	mov    eax,DWORD PTR [rax+0x18]
  4128ae:	mov    DWORD PTR [rbp-0x34],eax
  4128b1:	mov    rax,QWORD PTR [rbp-0x48]
  4128b5:	mov    rax,QWORD PTR [rax+0x8]
  4128b9:	mov    QWORD PTR [rbp-0x18],rax
  4128bd:	mov    rax,QWORD PTR [rbp-0x28]
  4128c1:	mov    edx,DWORD PTR [rax+0x10]
  4128c4:	mov    rax,QWORD PTR [rbp-0x48]
  4128c8:	mov    DWORD PTR [rax+0x18],edx
  4128cb:	mov    rax,QWORD PTR [rbp-0x28]
  4128cf:	mov    rdx,QWORD PTR [rax+0x8]
  4128d3:	mov    rax,QWORD PTR [rbp-0x48]
  4128d7:	mov    QWORD PTR [rax+0x8],rdx
  4128db:	mov    rax,QWORD PTR [rbp-0x28]
  4128df:	movzx  eax,BYTE PTR [rax+0x15]
  4128e3:	mov    BYTE PTR [rbp-0x10],al
  4128e6:	mov    rax,QWORD PTR [rbp-0x28]
  4128ea:	movzx  eax,BYTE PTR [rax+0x15]
  4128ee:	movzx  ecx,al
  4128f1:	mov    rax,QWORD PTR [rbp-0x28]
  4128f5:	mov    rsi,QWORD PTR [rax]
  4128f8:	lea    rax,[rbp-0x10]
  4128fc:	lea    r8,[rax+0x4]
  412900:	mov    rdx,QWORD PTR [rbp-0x58]
  412904:	mov    rdi,QWORD PTR [rbp-0x48]
  412908:	mov    rax,QWORD PTR [rbp-0x80]
  41290c:	call   rax
  41290e:	cmp    rax,QWORD PTR [rbp-0x58]
  412912:	jne    41291a <flatcc_json_parser_union_type@@Base+0x1f3>
  412914:	mov    rax,QWORD PTR [rbp-0x58]
  412918:	jmp    41296c <flatcc_json_parser_union_type@@Base+0x245>
  41291a:	movzx  ecx,WORD PTR [rbp-0x64]
  41291e:	mov    rax,QWORD PTR [rbp-0x48]
  412922:	mov    rax,QWORD PTR [rax]
  412925:	mov    rdx,QWORD PTR [rbp-0x10]
  412929:	mov    esi,ecx
  41292b:	mov    rdi,rax
  41292e:	call   40a8d8 <flatcc_builder_table_add_union@@Base>
  412933:	test   eax,eax
  412935:	je     412952 <flatcc_json_parser_union_type@@Base+0x22b>
  412937:	mov    rdx,QWORD PTR [rbp-0x58]
  41293b:	mov    rsi,QWORD PTR [rbp-0x50]
  41293f:	mov    rax,QWORD PTR [rbp-0x48]
  412943:	mov    ecx,0x1c
  412948:	mov    rdi,rax
  41294b:	call   410789 <flatcc_json_parser_set_error@@Base>
  412950:	jmp    41296c <flatcc_json_parser_union_type@@Base+0x245>
  412952:	mov    rax,QWORD PTR [rbp-0x48]
  412956:	mov    edx,DWORD PTR [rbp-0x34]
  412959:	mov    DWORD PTR [rax+0x18],edx
  41295c:	mov    rax,QWORD PTR [rbp-0x48]
  412960:	mov    rdx,QWORD PTR [rbp-0x18]
  412964:	mov    QWORD PTR [rax+0x8],rdx
  412968:	mov    rax,QWORD PTR [rbp-0x50]
  41296c:	mov    rdi,QWORD PTR [rbp-0x8]
  412970:	xor    rdi,QWORD PTR fs:0x28
  412979:	je     412980 <flatcc_json_parser_union_type@@Base+0x259>
  41297b:	call   403060 <__stack_chk_fail@plt>
  412980:	leave  
  412981:	ret    
  412982:	push   rbp
  412983:	mov    rbp,rsp
  412986:	sub    rsp,0x60
  41298a:	mov    QWORD PTR [rbp-0x38],rdi
  41298e:	mov    QWORD PTR [rbp-0x40],rsi
  412992:	mov    QWORD PTR [rbp-0x48],rdx
  412996:	mov    QWORD PTR [rbp-0x50],rcx
  41299a:	mov    DWORD PTR [rbp-0x54],r8d
  41299e:	mov    eax,r9d
  4129a1:	mov    WORD PTR [rbp-0x58],ax
  4129a5:	mov    rax,QWORD PTR [rbp+0x10]
  4129a9:	mov    QWORD PTR [rbp-0x60],rax
  4129ad:	mov    rax,QWORD PTR fs:0x28
  4129b6:	mov    QWORD PTR [rbp-0x8],rax
  4129ba:	xor    eax,eax
  4129bc:	mov    DWORD PTR [rbp-0x28],0x0
  4129c3:	mov    rax,QWORD PTR [rbp-0x38]
  4129c7:	mov    rax,QWORD PTR [rax]
  4129ca:	mov    rdi,rax
  4129cd:	call   4091ae <flatcc_builder_start_offset_vector@@Base>
  4129d2:	test   eax,eax
  4129d4:	jne    412b6a <flatcc_json_parser_union_type@@Base+0x443>
  4129da:	lea    rcx,[rbp-0x24]
  4129de:	mov    rdx,QWORD PTR [rbp-0x48]
  4129e2:	mov    rsi,QWORD PTR [rbp-0x40]
  4129e6:	mov    rax,QWORD PTR [rbp-0x38]
  4129ea:	mov    rdi,rax
  4129ed:	call   40cc8b <flatcc_emitter_copy_buffer@@Base+0x640>
  4129f2:	mov    QWORD PTR [rbp-0x40],rax
  4129f6:	mov    QWORD PTR [rbp-0x20],0x0
  4129fe:	jmp    412acf <flatcc_json_parser_union_type@@Base+0x3a8>
  412a03:	mov    eax,DWORD PTR [rbp-0x54]
  412a06:	cmp    rax,QWORD PTR [rbp-0x20]
  412a0a:	jne    412a2a <flatcc_json_parser_union_type@@Base+0x303>
  412a0c:	mov    rdx,QWORD PTR [rbp-0x48]
  412a10:	mov    rsi,QWORD PTR [rbp-0x40]
  412a14:	mov    rax,QWORD PTR [rbp-0x38]
  412a18:	mov    ecx,0x1e
  412a1d:	mov    rdi,rax
  412a20:	call   410789 <flatcc_json_parser_set_error@@Base>
  412a25:	jmp    412b8d <flatcc_json_parser_union_type@@Base+0x466>
  412a2a:	mov    rax,QWORD PTR [rbp-0x38]
  412a2e:	mov    rax,QWORD PTR [rax]
  412a31:	mov    rdx,QWORD PTR [rbp-0x50]
  412a35:	mov    rsi,rdx
  412a38:	mov    rdi,rax
  412a3b:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  412a40:	mov    QWORD PTR [rbp-0x18],rax
  412a44:	mov    rdx,QWORD PTR [rbp-0x18]
  412a48:	mov    rax,QWORD PTR [rbp-0x20]
  412a4c:	add    rax,rdx
  412a4f:	movzx  eax,BYTE PTR [rax]
  412a52:	movzx  ecx,al
  412a55:	lea    r8,[rbp-0x28]
  412a59:	mov    rdx,QWORD PTR [rbp-0x48]
  412a5d:	mov    rsi,QWORD PTR [rbp-0x40]
  412a61:	mov    rdi,QWORD PTR [rbp-0x38]
  412a65:	mov    rax,QWORD PTR [rbp-0x60]
  412a69:	call   rax
  412a6b:	mov    QWORD PTR [rbp-0x40],rax
  412a6f:	mov    rax,QWORD PTR [rbp-0x40]
  412a73:	cmp    rax,QWORD PTR [rbp-0x48]
  412a77:	jne    412a82 <flatcc_json_parser_union_type@@Base+0x35b>
  412a79:	mov    rax,QWORD PTR [rbp-0x40]
  412a7d:	jmp    412b8d <flatcc_json_parser_union_type@@Base+0x466>
  412a82:	mov    rax,QWORD PTR [rbp-0x38]
  412a86:	mov    rax,QWORD PTR [rax]
  412a89:	mov    esi,0x1
  412a8e:	mov    rdi,rax
  412a91:	call   408bbe <flatcc_builder_extend_offset_vector@@Base>
  412a96:	mov    QWORD PTR [rbp-0x10],rax
  412a9a:	cmp    QWORD PTR [rbp-0x10],0x0
  412a9f:	je     412b6d <flatcc_json_parser_union_type@@Base+0x446>
  412aa5:	mov    edx,DWORD PTR [rbp-0x28]
  412aa8:	mov    rax,QWORD PTR [rbp-0x10]
  412aac:	mov    DWORD PTR [rax],edx
  412aae:	lea    rcx,[rbp-0x24]
  412ab2:	mov    rdx,QWORD PTR [rbp-0x48]
  412ab6:	mov    rsi,QWORD PTR [rbp-0x40]
  412aba:	mov    rax,QWORD PTR [rbp-0x38]
  412abe:	mov    rdi,rax
  412ac1:	call   40cd48 <flatcc_emitter_copy_buffer@@Base+0x6fd>
  412ac6:	mov    QWORD PTR [rbp-0x40],rax
  412aca:	add    QWORD PTR [rbp-0x20],0x1
  412acf:	mov    eax,DWORD PTR [rbp-0x24]
  412ad2:	test   eax,eax
  412ad4:	jne    412a03 <flatcc_json_parser_union_type@@Base+0x2dc>
  412ada:	mov    eax,DWORD PTR [rbp-0x54]
  412add:	cmp    rax,QWORD PTR [rbp-0x20]
  412ae1:	je     412b01 <flatcc_json_parser_union_type@@Base+0x3da>
  412ae3:	mov    rdx,QWORD PTR [rbp-0x48]
  412ae7:	mov    rsi,QWORD PTR [rbp-0x40]
  412aeb:	mov    rax,QWORD PTR [rbp-0x38]
  412aef:	mov    ecx,0x1e
  412af4:	mov    rdi,rax
  412af7:	call   410789 <flatcc_json_parser_set_error@@Base>
  412afc:	jmp    412b8d <flatcc_json_parser_union_type@@Base+0x466>
  412b01:	mov    rax,QWORD PTR [rbp-0x38]
  412b05:	mov    rax,QWORD PTR [rax]
  412b08:	mov    rdx,QWORD PTR [rbp-0x50]
  412b0c:	mov    rsi,rdx
  412b0f:	mov    rdi,rax
  412b12:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  412b17:	mov    QWORD PTR [rbp-0x18],rax
  412b1b:	mov    rax,QWORD PTR [rbp-0x38]
  412b1f:	mov    rax,QWORD PTR [rax]
  412b22:	mov    rdx,QWORD PTR [rbp-0x18]
  412b26:	mov    rsi,rdx
  412b29:	mov    rdi,rax
  412b2c:	call   40a822 <flatcc_builder_end_offset_vector_for_unions@@Base>
  412b31:	mov    DWORD PTR [rbp-0x28],eax
  412b34:	mov    eax,DWORD PTR [rbp-0x28]
  412b37:	test   eax,eax
  412b39:	je     412b70 <flatcc_json_parser_union_type@@Base+0x449>
  412b3b:	movzx  edx,WORD PTR [rbp-0x58]
  412b3f:	mov    rax,QWORD PTR [rbp-0x38]
  412b43:	mov    rax,QWORD PTR [rax]
  412b46:	mov    esi,edx
  412b48:	mov    rdi,rax
  412b4b:	call   40b67c <flatcc_builder_table_add_offset@@Base>
  412b50:	mov    QWORD PTR [rbp-0x10],rax
  412b54:	cmp    QWORD PTR [rbp-0x10],0x0
  412b59:	je     412b73 <flatcc_json_parser_union_type@@Base+0x44c>
  412b5b:	mov    edx,DWORD PTR [rbp-0x28]
  412b5e:	mov    rax,QWORD PTR [rbp-0x10]
  412b62:	mov    DWORD PTR [rax],edx
  412b64:	mov    rax,QWORD PTR [rbp-0x40]
  412b68:	jmp    412b8d <flatcc_json_parser_union_type@@Base+0x466>
  412b6a:	nop
  412b6b:	jmp    412b74 <flatcc_json_parser_union_type@@Base+0x44d>
  412b6d:	nop
  412b6e:	jmp    412b74 <flatcc_json_parser_union_type@@Base+0x44d>
  412b70:	nop
  412b71:	jmp    412b74 <flatcc_json_parser_union_type@@Base+0x44d>
  412b73:	nop
  412b74:	mov    rdx,QWORD PTR [rbp-0x48]
  412b78:	mov    rsi,QWORD PTR [rbp-0x40]
  412b7c:	mov    rax,QWORD PTR [rbp-0x38]
  412b80:	mov    ecx,0x21
  412b85:	mov    rdi,rax
  412b88:	call   410789 <flatcc_json_parser_set_error@@Base>
  412b8d:	mov    rcx,QWORD PTR [rbp-0x8]
  412b91:	xor    rcx,QWORD PTR fs:0x28
  412b9a:	je     412ba1 <flatcc_json_parser_union_type@@Base+0x47a>
  412b9c:	call   403060 <__stack_chk_fail@plt>
  412ba1:	leave  
  412ba2:	ret    

0000000000412ba3 <flatcc_json_parser_union_vector@@Base>:
  412ba3:	push   rbp
  412ba4:	mov    rbp,rsp
  412ba7:	sub    rsp,0x40
  412bab:	mov    QWORD PTR [rbp-0x18],rdi
  412baf:	mov    QWORD PTR [rbp-0x20],rsi
  412bb3:	mov    QWORD PTR [rbp-0x28],rdx
  412bb7:	mov    QWORD PTR [rbp-0x30],rcx
  412bbb:	mov    eax,r8d
  412bbe:	mov    QWORD PTR [rbp-0x40],r9
  412bc2:	mov    WORD PTR [rbp-0x34],ax
  412bc6:	mov    rax,QWORD PTR [rbp-0x18]
  412bca:	mov    rax,QWORD PTR [rax]
  412bcd:	mov    rdx,QWORD PTR [rbp-0x40]
  412bd1:	mov    rsi,rdx
  412bd4:	mov    rdi,rax
  412bd7:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  412bdc:	mov    QWORD PTR [rbp-0x10],rax
  412be0:	mov    rax,QWORD PTR [rbp-0x10]
  412be4:	lea    rcx,[rax+0x10]
  412be8:	mov    rdx,QWORD PTR [rbp-0x30]
  412bec:	mov    rax,rdx
  412bef:	shl    rax,0x2
  412bf3:	add    rax,rdx
  412bf6:	shl    rax,0x3
  412bfa:	add    rax,rcx
  412bfd:	mov    QWORD PTR [rbp-0x8],rax
  412c01:	mov    rax,QWORD PTR [rbp-0x8]
  412c05:	mov    rax,QWORD PTR [rax]
  412c08:	test   rax,rax
  412c0b:	je     412c2b <flatcc_json_parser_union_vector@@Base+0x88>
  412c0d:	mov    rdx,QWORD PTR [rbp-0x28]
  412c11:	mov    rsi,QWORD PTR [rbp-0x20]
  412c15:	mov    rax,QWORD PTR [rbp-0x18]
  412c19:	mov    ecx,0x1c
  412c1e:	mov    rdi,rax
  412c21:	call   410789 <flatcc_json_parser_set_error@@Base>
  412c26:	jmp    412ce9 <flatcc_json_parser_union_vector@@Base+0x146>
  412c2b:	mov    rax,QWORD PTR [rbp-0x8]
  412c2f:	movzx  eax,BYTE PTR [rax+0x14]
  412c33:	test   al,al
  412c35:	jne    412c94 <flatcc_json_parser_union_vector@@Base+0xf1>
  412c37:	mov    rax,QWORD PTR [rbp-0x10]
  412c3b:	mov    rax,QWORD PTR [rax+0x8]
  412c3f:	lea    rdx,[rax+0x1]
  412c43:	mov    rax,QWORD PTR [rbp-0x10]
  412c47:	mov    QWORD PTR [rax+0x8],rdx
  412c4b:	mov    rax,QWORD PTR [rbp-0x18]
  412c4f:	mov    edx,DWORD PTR [rax+0x18]
  412c52:	mov    rax,QWORD PTR [rbp-0x8]
  412c56:	mov    DWORD PTR [rax+0x10],edx
  412c59:	mov    rax,QWORD PTR [rbp-0x18]
  412c5d:	mov    rdx,QWORD PTR [rax+0x8]
  412c61:	mov    rax,QWORD PTR [rbp-0x8]
  412c65:	mov    QWORD PTR [rax+0x8],rdx
  412c69:	mov    rax,QWORD PTR [rbp-0x8]
  412c6d:	mov    rdx,QWORD PTR [rbp-0x20]
  412c71:	mov    QWORD PTR [rax],rdx
  412c74:	mov    rax,QWORD PTR [rbp-0x8]
  412c78:	mov    rcx,QWORD PTR [rax]
  412c7b:	mov    rdx,QWORD PTR [rbp-0x28]
  412c7f:	mov    rax,QWORD PTR [rbp-0x18]
  412c83:	mov    rsi,rcx
  412c86:	mov    rdi,rax
  412c89:	call   411890 <flatcc_json_parser_generic_json@@Base>
  412c8e:	mov    QWORD PTR [rbp-0x20],rax
  412c92:	jmp    412ce5 <flatcc_json_parser_union_vector@@Base+0x142>
  412c94:	mov    rax,QWORD PTR [rbp-0x10]
  412c98:	mov    rax,QWORD PTR [rax+0x8]
  412c9c:	lea    rdx,[rax-0x1]
  412ca0:	mov    rax,QWORD PTR [rbp-0x10]
  412ca4:	mov    QWORD PTR [rax+0x8],rdx
  412ca8:	movzx  r8d,WORD PTR [rbp-0x34]
  412cad:	mov    rax,QWORD PTR [rbp-0x8]
  412cb1:	mov    edi,DWORD PTR [rax+0x18]
  412cb4:	mov    rax,QWORD PTR [rbp-0x8]
  412cb8:	mov    rcx,QWORD PTR [rax+0x20]
  412cbc:	mov    rdx,QWORD PTR [rbp-0x28]
  412cc0:	mov    rsi,QWORD PTR [rbp-0x20]
  412cc4:	mov    rax,QWORD PTR [rbp-0x18]
  412cc8:	sub    rsp,0x8
  412ccc:	push   QWORD PTR [rbp+0x10]
  412ccf:	mov    r9d,r8d
  412cd2:	mov    r8d,edi
  412cd5:	mov    rdi,rax
  412cd8:	call   412982 <flatcc_json_parser_union_type@@Base+0x25b>
  412cdd:	add    rsp,0x10
  412ce1:	mov    QWORD PTR [rbp-0x20],rax
  412ce5:	mov    rax,QWORD PTR [rbp-0x20]
  412ce9:	leave  
  412cea:	ret    

0000000000412ceb <flatcc_json_parser_union_type_vector@@Base>:
  412ceb:	push   rbp
  412cec:	mov    rbp,rsp
  412cef:	sub    rsp,0xc0
  412cf6:	mov    QWORD PTR [rbp-0x78],rdi
  412cfa:	mov    QWORD PTR [rbp-0x80],rsi
  412cfe:	mov    QWORD PTR [rbp-0x88],rdx
  412d05:	mov    QWORD PTR [rbp-0x90],rcx
  412d0c:	mov    eax,r8d
  412d0f:	mov    QWORD PTR [rbp-0xa0],r9
  412d16:	mov    WORD PTR [rbp-0x94],ax
  412d1d:	mov    rax,QWORD PTR [rbp+0x10]
  412d21:	mov    QWORD PTR [rbp-0xa8],rax
  412d28:	mov    rax,QWORD PTR [rbp+0x18]
  412d2c:	mov    QWORD PTR [rbp-0xb0],rax
  412d33:	mov    rax,QWORD PTR [rbp+0x20]
  412d37:	mov    QWORD PTR [rbp-0xb8],rax
  412d3e:	mov    rax,QWORD PTR fs:0x28
  412d47:	mov    QWORD PTR [rbp-0x8],rax
  412d4b:	xor    eax,eax
  412d4d:	mov    rax,QWORD PTR [rbp-0x78]
  412d51:	mov    rax,QWORD PTR [rax]
  412d54:	mov    rdx,QWORD PTR [rbp-0xa0]
  412d5b:	mov    rsi,rdx
  412d5e:	mov    rdi,rax
  412d61:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  412d66:	mov    QWORD PTR [rbp-0x50],rax
  412d6a:	mov    rax,QWORD PTR [rbp-0x50]
  412d6e:	lea    rcx,[rax+0x10]
  412d72:	mov    rdx,QWORD PTR [rbp-0x90]
  412d79:	mov    rax,rdx
  412d7c:	shl    rax,0x2
  412d80:	add    rax,rdx
  412d83:	shl    rax,0x3
  412d87:	add    rax,rcx
  412d8a:	mov    QWORD PTR [rbp-0x48],rax
  412d8e:	mov    rax,QWORD PTR [rbp-0x48]
  412d92:	movzx  eax,BYTE PTR [rax+0x14]
  412d96:	test   al,al
  412d98:	je     412dbb <flatcc_json_parser_union_type_vector@@Base+0xd0>
  412d9a:	mov    rdx,QWORD PTR [rbp-0x88]
  412da1:	mov    rsi,QWORD PTR [rbp-0x80]
  412da5:	mov    rax,QWORD PTR [rbp-0x78]
  412da9:	mov    ecx,0x1c
  412dae:	mov    rdi,rax
  412db1:	call   410789 <flatcc_json_parser_set_error@@Base>
  412db6:	jmp    41317f <flatcc_json_parser_union_type_vector@@Base+0x494>
  412dbb:	mov    rax,QWORD PTR [rbp-0x48]
  412dbf:	mov    BYTE PTR [rax+0x14],0x1
  412dc3:	mov    rax,QWORD PTR [rbp-0x78]
  412dc7:	mov    rax,QWORD PTR [rax]
  412dca:	mov    ecx,0xffffffff
  412dcf:	mov    edx,0x1
  412dd4:	mov    esi,0x1
  412dd9:	mov    rdi,rax
  412ddc:	call   409110 <flatcc_builder_start_vector@@Base>
  412de1:	test   eax,eax
  412de3:	jne    413159 <flatcc_json_parser_union_type_vector@@Base+0x46e>
  412de9:	lea    rcx,[rbp-0x60]
  412ded:	mov    rdx,QWORD PTR [rbp-0x88]
  412df4:	mov    rsi,QWORD PTR [rbp-0x80]
  412df8:	mov    rax,QWORD PTR [rbp-0x78]
  412dfc:	mov    rdi,rax
  412dff:	call   40cc8b <flatcc_emitter_copy_buffer@@Base+0x640>
  412e04:	mov    QWORD PTR [rbp-0x80],rax
  412e08:	jmp    412f2e <flatcc_json_parser_union_type_vector@@Base+0x243>
  412e0d:	mov    rax,QWORD PTR [rbp-0x78]
  412e11:	mov    rax,QWORD PTR [rax]
  412e14:	mov    esi,0x1
  412e19:	mov    rdi,rax
  412e1c:	call   4089f8 <flatcc_builder_extend_vector@@Base>
  412e21:	mov    QWORD PTR [rbp-0x40],rax
  412e25:	cmp    QWORD PTR [rbp-0x40],0x0
  412e2a:	je     41315c <flatcc_json_parser_union_type_vector@@Base+0x471>
  412e30:	mov    rax,QWORD PTR [rbp-0x80]
  412e34:	mov    QWORD PTR [rbp-0x38],rax
  412e38:	lea    rcx,[rbp-0x61]
  412e3c:	mov    rdx,QWORD PTR [rbp-0x88]
  412e43:	mov    rsi,QWORD PTR [rbp-0x38]
  412e47:	mov    rax,QWORD PTR [rbp-0x78]
  412e4b:	mov    rdi,rax
  412e4e:	call   40d40d <flatcc_emitter_copy_buffer@@Base+0xdc2>
  412e53:	mov    QWORD PTR [rbp-0x80],rax
  412e57:	mov    rax,QWORD PTR [rbp-0x38]
  412e5b:	cmp    rax,QWORD PTR [rbp-0x80]
  412e5f:	jne    412eb1 <flatcc_json_parser_union_type_vector@@Base+0x1c6>
  412e61:	mov    rax,QWORD PTR [rbp-0x80]
  412e65:	mov    QWORD PTR [rbp-0x38],rax
  412e69:	lea    rdi,[rbp-0x61]
  412e6d:	mov    rcx,QWORD PTR [rbp-0xa8]
  412e74:	mov    rdx,QWORD PTR [rbp-0x88]
  412e7b:	mov    rsi,QWORD PTR [rbp-0x38]
  412e7f:	mov    rax,QWORD PTR [rbp-0x78]
  412e83:	mov    r8,rdi
  412e86:	mov    rdi,rax
  412e89:	call   40d999 <flatcc_emitter_copy_buffer@@Base+0x134e>
  412e8e:	mov    QWORD PTR [rbp-0x80],rax
  412e92:	mov    rax,QWORD PTR [rbp-0x80]
  412e96:	cmp    rax,QWORD PTR [rbp-0x38]
  412e9a:	je     413163 <flatcc_json_parser_union_type_vector@@Base+0x478>
  412ea0:	mov    rax,QWORD PTR [rbp-0x80]
  412ea4:	cmp    rax,QWORD PTR [rbp-0x88]
  412eab:	je     413163 <flatcc_json_parser_union_type_vector@@Base+0x478>
  412eb1:	movzx  eax,BYTE PTR [rbp-0x61]
  412eb5:	movzx  edx,al
  412eb8:	mov    rax,QWORD PTR [rbp-0xb8]
  412ebf:	mov    edi,edx
  412ec1:	call   rax
  412ec3:	test   eax,eax
  412ec5:	jne    412efa <flatcc_json_parser_union_type_vector@@Base+0x20f>
  412ec7:	mov    rax,QWORD PTR [rbp-0x78]
  412ecb:	mov    eax,DWORD PTR [rax+0x10]
  412ece:	and    eax,0x1
  412ed1:	test   eax,eax
  412ed3:	jne    412ef6 <flatcc_json_parser_union_type_vector@@Base+0x20b>
  412ed5:	mov    rdx,QWORD PTR [rbp-0x88]
  412edc:	mov    rsi,QWORD PTR [rbp-0x80]
  412ee0:	mov    rax,QWORD PTR [rbp-0x78]
  412ee4:	mov    ecx,0xf
  412ee9:	mov    rdi,rax
  412eec:	call   410789 <flatcc_json_parser_set_error@@Base>
  412ef1:	jmp    41317f <flatcc_json_parser_union_type_vector@@Base+0x494>
  412ef6:	mov    BYTE PTR [rbp-0x61],0x0
  412efa:	movzx  eax,BYTE PTR [rbp-0x61]
  412efe:	movzx  edx,al
  412f01:	mov    rax,QWORD PTR [rbp-0x40]
  412f05:	mov    esi,edx
  412f07:	mov    rdi,rax
  412f0a:	call   40c78c <flatcc_emitter_copy_buffer@@Base+0x141>
  412f0f:	lea    rcx,[rbp-0x60]
  412f13:	mov    rdx,QWORD PTR [rbp-0x88]
  412f1a:	mov    rsi,QWORD PTR [rbp-0x80]
  412f1e:	mov    rax,QWORD PTR [rbp-0x78]
  412f22:	mov    rdi,rax
  412f25:	call   40cd48 <flatcc_emitter_copy_buffer@@Base+0x6fd>
  412f2a:	mov    QWORD PTR [rbp-0x80],rax
  412f2e:	mov    eax,DWORD PTR [rbp-0x60]
  412f31:	test   eax,eax
  412f33:	jne    412e0d <flatcc_json_parser_union_type_vector@@Base+0x122>
  412f39:	mov    rax,QWORD PTR [rbp-0x78]
  412f3d:	mov    rax,QWORD PTR [rax]
  412f40:	mov    rdi,rax
  412f43:	call   40a397 <flatcc_builder_vector_count@@Base>
  412f48:	mov    DWORD PTR [rbp-0x5c],eax
  412f4b:	mov    rax,QWORD PTR [rbp-0x48]
  412f4f:	mov    edx,DWORD PTR [rbp-0x5c]
  412f52:	mov    DWORD PTR [rax+0x18],edx
  412f55:	mov    eax,DWORD PTR [rbp-0x5c]
  412f58:	mov    QWORD PTR [rbp-0x30],rax
  412f5c:	mov    rax,QWORD PTR [rbp-0x78]
  412f60:	mov    rax,QWORD PTR [rax]
  412f63:	mov    rdx,QWORD PTR [rbp-0x30]
  412f67:	mov    rsi,rdx
  412f6a:	mov    rdi,rax
  412f6d:	call   407527 <flatcc_builder_enter_user_frame@@Base>
  412f72:	mov    QWORD PTR [rbp-0x28],rax
  412f76:	mov    rax,QWORD PTR [rbp-0x78]
  412f7a:	mov    rax,QWORD PTR [rax]
  412f7d:	mov    rdx,QWORD PTR [rbp-0x28]
  412f81:	mov    rsi,rdx
  412f84:	mov    rdi,rax
  412f87:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  412f8c:	mov    QWORD PTR [rbp-0x20],rax
  412f90:	mov    rax,QWORD PTR [rbp-0x78]
  412f94:	mov    rax,QWORD PTR [rax]
  412f97:	mov    rdi,rax
  412f9a:	call   40a3ae <flatcc_builder_vector_edit@@Base>
  412f9f:	mov    rcx,rax
  412fa2:	mov    rdx,QWORD PTR [rbp-0x30]
  412fa6:	mov    rax,QWORD PTR [rbp-0x20]
  412faa:	mov    rsi,rcx
  412fad:	mov    rdi,rax
  412fb0:	call   4030c0 <memcpy@plt>
  412fb5:	mov    rax,QWORD PTR [rbp-0x78]
  412fb9:	mov    rax,QWORD PTR [rax]
  412fbc:	mov    rdi,rax
  412fbf:	call   40a2e6 <flatcc_builder_end_vector@@Base>
  412fc4:	mov    DWORD PTR [rbp-0x58],eax
  412fc7:	cmp    DWORD PTR [rbp-0x58],0x0
  412fcb:	je     41315f <flatcc_json_parser_union_type_vector@@Base+0x474>
  412fd1:	movzx  eax,WORD PTR [rbp-0x94]
  412fd8:	lea    edx,[rax-0x1]
  412fdb:	mov    rax,QWORD PTR [rbp-0x78]
  412fdf:	mov    rax,QWORD PTR [rax]
  412fe2:	mov    esi,edx
  412fe4:	mov    rdi,rax
  412fe7:	call   40b67c <flatcc_builder_table_add_offset@@Base>
  412fec:	mov    QWORD PTR [rbp-0x18],rax
  412ff0:	cmp    QWORD PTR [rbp-0x18],0x0
  412ff5:	je     413162 <flatcc_json_parser_union_type_vector@@Base+0x477>
  412ffb:	mov    rax,QWORD PTR [rbp-0x18]
  412fff:	mov    edx,DWORD PTR [rbp-0x58]
  413002:	mov    DWORD PTR [rax],edx
  413004:	mov    rax,QWORD PTR [rbp-0x78]
  413008:	mov    rax,QWORD PTR [rax]
  41300b:	mov    rdx,QWORD PTR [rbp-0xa0]
  413012:	mov    rsi,rdx
  413015:	mov    rdi,rax
  413018:	call   4076fc <flatcc_builder_get_user_frame_ptr@@Base>
  41301d:	mov    QWORD PTR [rbp-0x50],rax
  413021:	mov    rax,QWORD PTR [rbp-0x50]
  413025:	lea    rcx,[rax+0x10]
  413029:	mov    rdx,QWORD PTR [rbp-0x90]
  413030:	mov    rax,rdx
  413033:	shl    rax,0x2
  413037:	add    rax,rdx
  41303a:	shl    rax,0x3
  41303e:	add    rax,rcx
  413041:	mov    QWORD PTR [rbp-0x48],rax
  413045:	mov    rax,QWORD PTR [rbp-0x48]
  413049:	mov    rdx,QWORD PTR [rbp-0x28]
  41304d:	mov    QWORD PTR [rax+0x20],rdx
  413051:	mov    rax,QWORD PTR [rbp-0x48]
  413055:	mov    rax,QWORD PTR [rax]
  413058:	test   rax,rax
  41305b:	jne    41307a <flatcc_json_parser_union_type_vector@@Base+0x38f>
  41305d:	mov    rax,QWORD PTR [rbp-0x50]
  413061:	mov    rax,QWORD PTR [rax+0x8]
  413065:	lea    rdx,[rax+0x1]
  413069:	mov    rax,QWORD PTR [rbp-0x50]
  41306d:	mov    QWORD PTR [rax+0x8],rdx
  413071:	mov    rax,QWORD PTR [rbp-0x80]
  413075:	jmp    41317f <flatcc_json_parser_union_type_vector@@Base+0x494>
  41307a:	mov    rax,QWORD PTR [rbp-0x50]
  41307e:	mov    rax,QWORD PTR [rax+0x8]
  413082:	test   rax,rax
  413085:	jne    4130a6 <flatcc_json_parser_union_type_vector@@Base+0x3bb>
  413087:	lea    rcx,[rip+0x3352]        # 4163e0 <flatcc_builder_padding_base@@Base+0x2040>
  41308e:	mov    edx,0x462
  413093:	lea    rsi,[rip+0x2dfe]        # 415e98 <flatcc_builder_padding_base@@Base+0x1af8>
  41309a:	lea    rdi,[rip+0x2e5b]        # 415efc <flatcc_builder_padding_base@@Base+0x1b5c>
  4130a1:	call   403070 <__assert_fail@plt>
  4130a6:	mov    rax,QWORD PTR [rbp-0x50]
  4130aa:	mov    rax,QWORD PTR [rax+0x8]
  4130ae:	lea    rdx,[rax-0x1]
  4130b2:	mov    rax,QWORD PTR [rbp-0x50]
  4130b6:	mov    QWORD PTR [rax+0x8],rdx
  4130ba:	mov    rax,QWORD PTR [rbp-0x78]
  4130be:	mov    eax,DWORD PTR [rax+0x18]
  4130c1:	mov    DWORD PTR [rbp-0x54],eax
  4130c4:	mov    rax,QWORD PTR [rbp-0x78]
  4130c8:	mov    rax,QWORD PTR [rax+0x8]
  4130cc:	mov    QWORD PTR [rbp-0x10],rax
  4130d0:	mov    rax,QWORD PTR [rbp-0x48]
  4130d4:	mov    edx,DWORD PTR [rax+0x10]
  4130d7:	mov    rax,QWORD PTR [rbp-0x78]
  4130db:	mov    DWORD PTR [rax+0x18],edx
  4130de:	mov    rax,QWORD PTR [rbp-0x48]
  4130e2:	mov    rdx,QWORD PTR [rax+0x8]
  4130e6:	mov    rax,QWORD PTR [rbp-0x78]
  4130ea:	mov    QWORD PTR [rax+0x8],rdx
  4130ee:	movzx  r8d,WORD PTR [rbp-0x94]
  4130f6:	mov    rax,QWORD PTR [rbp-0x48]
  4130fa:	mov    rsi,QWORD PTR [rax]
  4130fd:	mov    edi,DWORD PTR [rbp-0x5c]
  413100:	mov    rcx,QWORD PTR [rbp-0x28]
  413104:	mov    rdx,QWORD PTR [rbp-0x88]
  41310b:	mov    rax,QWORD PTR [rbp-0x78]
  41310f:	sub    rsp,0x8
  413113:	push   QWORD PTR [rbp-0xb0]
  413119:	mov    r9d,r8d
  41311c:	mov    r8d,edi
  41311f:	mov    rdi,rax
  413122:	call   412982 <flatcc_json_parser_union_type@@Base+0x25b>
  413127:	add    rsp,0x10
  41312b:	cmp    rax,QWORD PTR [rbp-0x88]
  413132:	jne    41313d <flatcc_json_parser_union_type_vector@@Base+0x452>
  413134:	mov    rax,QWORD PTR [rbp-0x88]
  41313b:	jmp    41317f <flatcc_json_parser_union_type_vector@@Base+0x494>
  41313d:	mov    rax,QWORD PTR [rbp-0x78]
  413141:	mov    edx,DWORD PTR [rbp-0x54]
  413144:	mov    DWORD PTR [rax+0x18],edx
  413147:	mov    rax,QWORD PTR [rbp-0x78]
  41314b:	mov    rdx,QWORD PTR [rbp-0x10]
  41314f:	mov    QWORD PTR [rax+0x8],rdx
  413153:	mov    rax,QWORD PTR [rbp-0x80]
  413157:	jmp    41317f <flatcc_json_parser_union_type_vector@@Base+0x494>
  413159:	nop
  41315a:	jmp    413163 <flatcc_json_parser_union_type_vector@@Base+0x478>
  41315c:	nop
  41315d:	jmp    413163 <flatcc_json_parser_union_type_vector@@Base+0x478>
  41315f:	nop
  413160:	jmp    413163 <flatcc_json_parser_union_type_vector@@Base+0x478>
  413162:	nop
  413163:	mov    rdx,QWORD PTR [rbp-0x88]
  41316a:	mov    rsi,QWORD PTR [rbp-0x80]
  41316e:	mov    rax,QWORD PTR [rbp-0x78]
  413172:	mov    ecx,0x21
  413177:	mov    rdi,rax
  41317a:	call   410789 <flatcc_json_parser_set_error@@Base>
  41317f:	mov    rcx,QWORD PTR [rbp-0x8]
  413183:	xor    rcx,QWORD PTR fs:0x28
  41318c:	je     413193 <flatcc_json_parser_union_type_vector@@Base+0x4a8>
  41318e:	call   403060 <__stack_chk_fail@plt>
  413193:	leave  
  413194:	ret    

0000000000413195 <flatcc_json_parser_table_as_root@@Base>:
  413195:	push   rbp
  413196:	mov    rbp,rsp
  413199:	sub    rsp,0xa0
  4131a0:	mov    QWORD PTR [rbp-0x68],rdi
  4131a4:	mov    QWORD PTR [rbp-0x70],rsi
  4131a8:	mov    QWORD PTR [rbp-0x78],rdx
  4131ac:	mov    QWORD PTR [rbp-0x80],rcx
  4131b0:	mov    DWORD PTR [rbp-0x84],r8d
  4131b7:	mov    QWORD PTR [rbp-0x90],r9
  4131be:	mov    rax,QWORD PTR [rbp+0x10]
  4131c2:	mov    QWORD PTR [rbp-0x98],rax
  4131c9:	mov    rax,QWORD PTR fs:0x28
  4131d2:	mov    QWORD PTR [rbp-0x8],rax
  4131d6:	xor    eax,eax
  4131d8:	mov    eax,DWORD PTR [rbp-0x84]
  4131de:	and    eax,0x4
  4131e1:	test   eax,eax
  4131e3:	je     4131ec <flatcc_json_parser_table_as_root@@Base+0x57>
  4131e5:	mov    eax,0x2
  4131ea:	jmp    4131f1 <flatcc_json_parser_table_as_root@@Base+0x5c>
  4131ec:	mov    eax,0x0
  4131f1:	mov    DWORD PTR [rbp-0x54],eax
  4131f4:	cmp    QWORD PTR [rbp-0x70],0x0
  4131f9:	jne    413201 <flatcc_json_parser_table_as_root@@Base+0x6c>
  4131fb:	lea    rax,[rbp-0x50]
  4131ff:	jmp    413205 <flatcc_json_parser_table_as_root@@Base+0x70>
  413201:	mov    rax,QWORD PTR [rbp-0x70]
  413205:	mov    QWORD PTR [rbp-0x70],rax
  413209:	mov    rdx,QWORD PTR [rbp-0x78]
  41320d:	mov    rax,QWORD PTR [rbp-0x80]
  413211:	lea    rcx,[rdx+rax*1]
  413215:	mov    edi,DWORD PTR [rbp-0x84]
  41321b:	mov    rdx,QWORD PTR [rbp-0x78]
  41321f:	mov    rsi,QWORD PTR [rbp-0x68]
  413223:	mov    rax,QWORD PTR [rbp-0x70]
  413227:	mov    r8d,edi
  41322a:	mov    rdi,rax
  41322d:	call   40c7b3 <flatcc_emitter_copy_buffer@@Base+0x168>
  413232:	mov    edx,DWORD PTR [rbp-0x54]
  413235:	mov    rsi,QWORD PTR [rbp-0x90]
  41323c:	mov    rax,QWORD PTR [rbp-0x68]
  413240:	mov    ecx,edx
  413242:	mov    edx,0x0
  413247:	mov    rdi,rax
  41324a:	call   4085e5 <flatcc_builder_start_buffer@@Base>
  41324f:	test   eax,eax
  413251:	je     41325a <flatcc_json_parser_table_as_root@@Base+0xc5>
  413253:	mov    eax,0xffffffff
  413258:	jmp    4132c2 <flatcc_json_parser_table_as_root@@Base+0x12d>
  41325a:	mov    rdx,QWORD PTR [rbp-0x78]
  41325e:	mov    rax,QWORD PTR [rbp-0x80]
  413262:	lea    r8,[rdx+rax*1]
  413266:	lea    rdx,[rbp-0x58]
  41326a:	mov    rsi,QWORD PTR [rbp-0x78]
  41326e:	mov    rdi,QWORD PTR [rbp-0x70]
  413272:	mov    rax,QWORD PTR [rbp-0x98]
  413279:	mov    rcx,rdx
  41327c:	mov    rdx,r8
  41327f:	call   rax
  413281:	mov    rax,QWORD PTR [rbp-0x70]
  413285:	mov    eax,DWORD PTR [rax+0x20]
  413288:	test   eax,eax
  41328a:	je     413295 <flatcc_json_parser_table_as_root@@Base+0x100>
  41328c:	mov    rax,QWORD PTR [rbp-0x70]
  413290:	mov    eax,DWORD PTR [rax+0x20]
  413293:	jmp    4132c2 <flatcc_json_parser_table_as_root@@Base+0x12d>
  413295:	mov    edx,DWORD PTR [rbp-0x58]
  413298:	mov    rax,QWORD PTR [rbp-0x68]
  41329c:	mov    esi,edx
  41329e:	mov    rdi,rax
  4132a1:	call   40872e <flatcc_builder_end_buffer@@Base>
  4132a6:	test   eax,eax
  4132a8:	jne    4132b1 <flatcc_json_parser_table_as_root@@Base+0x11c>
  4132aa:	mov    eax,0xffffffff
  4132af:	jmp    4132c2 <flatcc_json_parser_table_as_root@@Base+0x12d>
  4132b1:	mov    rax,QWORD PTR [rbp-0x70]
  4132b5:	mov    rdx,QWORD PTR [rbp-0x78]
  4132b9:	mov    QWORD PTR [rax+0x40],rdx
  4132bd:	mov    eax,0x0
  4132c2:	mov    rcx,QWORD PTR [rbp-0x8]
  4132c6:	xor    rcx,QWORD PTR fs:0x28
  4132cf:	je     4132d6 <flatcc_json_parser_table_as_root@@Base+0x141>
  4132d1:	call   403060 <__stack_chk_fail@plt>
  4132d6:	leave  
  4132d7:	ret    

00000000004132d8 <flatcc_json_parser_struct_as_root@@Base>:
  4132d8:	push   rbp
  4132d9:	mov    rbp,rsp
  4132dc:	sub    rsp,0xa0
  4132e3:	mov    QWORD PTR [rbp-0x68],rdi
  4132e7:	mov    QWORD PTR [rbp-0x70],rsi
  4132eb:	mov    QWORD PTR [rbp-0x78],rdx
  4132ef:	mov    QWORD PTR [rbp-0x80],rcx
  4132f3:	mov    DWORD PTR [rbp-0x84],r8d
  4132fa:	mov    QWORD PTR [rbp-0x90],r9
  413301:	mov    rax,QWORD PTR [rbp+0x10]
  413305:	mov    QWORD PTR [rbp-0x98],rax
  41330c:	mov    rax,QWORD PTR fs:0x28
  413315:	mov    QWORD PTR [rbp-0x8],rax
  413319:	xor    eax,eax
  41331b:	mov    eax,DWORD PTR [rbp-0x84]
  413321:	and    eax,0x4
  413324:	test   eax,eax
  413326:	je     41332f <flatcc_json_parser_struct_as_root@@Base+0x57>
  413328:	mov    eax,0x2
  41332d:	jmp    413334 <flatcc_json_parser_struct_as_root@@Base+0x5c>
  41332f:	mov    eax,0x0
  413334:	mov    DWORD PTR [rbp-0x54],eax
  413337:	cmp    QWORD PTR [rbp-0x70],0x0
  41333c:	jne    413344 <flatcc_json_parser_struct_as_root@@Base+0x6c>
  41333e:	lea    rax,[rbp-0x50]
  413342:	jmp    413348 <flatcc_json_parser_struct_as_root@@Base+0x70>
  413344:	mov    rax,QWORD PTR [rbp-0x70]
  413348:	mov    QWORD PTR [rbp-0x70],rax
  41334c:	mov    rdx,QWORD PTR [rbp-0x78]
  413350:	mov    rax,QWORD PTR [rbp-0x80]
  413354:	lea    rcx,[rdx+rax*1]
  413358:	mov    edi,DWORD PTR [rbp-0x84]
  41335e:	mov    rdx,QWORD PTR [rbp-0x78]
  413362:	mov    rsi,QWORD PTR [rbp-0x68]
  413366:	mov    rax,QWORD PTR [rbp-0x70]
  41336a:	mov    r8d,edi
  41336d:	mov    rdi,rax
  413370:	call   40c7b3 <flatcc_emitter_copy_buffer@@Base+0x168>
  413375:	mov    edx,DWORD PTR [rbp-0x54]
  413378:	mov    rsi,QWORD PTR [rbp-0x90]
  41337f:	mov    rax,QWORD PTR [rbp-0x68]
  413383:	mov    ecx,edx
  413385:	mov    edx,0x0
  41338a:	mov    rdi,rax
  41338d:	call   4085e5 <flatcc_builder_start_buffer@@Base>
  413392:	test   eax,eax
  413394:	je     41339d <flatcc_json_parser_struct_as_root@@Base+0xc5>
  413396:	mov    eax,0xffffffff
  41339b:	jmp    413405 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  41339d:	mov    rdx,QWORD PTR [rbp-0x78]
  4133a1:	mov    rax,QWORD PTR [rbp-0x80]
  4133a5:	lea    r8,[rdx+rax*1]
  4133a9:	lea    rdx,[rbp-0x58]
  4133ad:	mov    rsi,QWORD PTR [rbp-0x78]
  4133b1:	mov    rdi,QWORD PTR [rbp-0x70]
  4133b5:	mov    rax,QWORD PTR [rbp-0x98]
  4133bc:	mov    rcx,rdx
  4133bf:	mov    rdx,r8
  4133c2:	call   rax
  4133c4:	mov    rax,QWORD PTR [rbp-0x70]
  4133c8:	mov    eax,DWORD PTR [rax+0x20]
  4133cb:	test   eax,eax
  4133cd:	je     4133d8 <flatcc_json_parser_struct_as_root@@Base+0x100>
  4133cf:	mov    rax,QWORD PTR [rbp-0x70]
  4133d3:	mov    eax,DWORD PTR [rax+0x20]
  4133d6:	jmp    413405 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  4133d8:	mov    edx,DWORD PTR [rbp-0x58]
  4133db:	mov    rax,QWORD PTR [rbp-0x68]
  4133df:	mov    esi,edx
  4133e1:	mov    rdi,rax
  4133e4:	call   40872e <flatcc_builder_end_buffer@@Base>
  4133e9:	test   eax,eax
  4133eb:	jne    4133f4 <flatcc_json_parser_struct_as_root@@Base+0x11c>
  4133ed:	mov    eax,0xffffffff
  4133f2:	jmp    413405 <flatcc_json_parser_struct_as_root@@Base+0x12d>
  4133f4:	mov    rax,QWORD PTR [rbp-0x70]
  4133f8:	mov    rdx,QWORD PTR [rbp-0x78]
  4133fc:	mov    QWORD PTR [rax+0x40],rdx
  413400:	mov    eax,0x0
  413405:	mov    rcx,QWORD PTR [rbp-0x8]
  413409:	xor    rcx,QWORD PTR fs:0x28
  413412:	je     413419 <flatcc_json_parser_struct_as_root@@Base+0x141>
  413414:	call   403060 <__stack_chk_fail@plt>
  413419:	leave  
  41341a:	ret    
  41341b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000413420 <__libc_csu_init@@Base>:
  413420:	endbr64 
  413424:	push   r15
  413426:	lea    r15,[rip+0x69d3]        # 419e00 <flatcc_builder_padding_base@@Base+0x5a60>
  41342d:	push   r14
  41342f:	mov    r14,rdx
  413432:	push   r13
  413434:	mov    r13,rsi
  413437:	push   r12
  413439:	mov    r12d,edi
  41343c:	push   rbp
  41343d:	lea    rbp,[rip+0x69c4]        # 419e08 <flatcc_builder_padding_base@@Base+0x5a68>
  413444:	push   rbx
  413445:	sub    rbp,r15
  413448:	sub    rsp,0x8
  41344c:	call   403000 <free@plt-0x30>
  413451:	sar    rbp,0x3
  413455:	je     413476 <__libc_csu_init@@Base+0x56>
  413457:	xor    ebx,ebx
  413459:	nop    DWORD PTR [rax+0x0]
  413460:	mov    rdx,r14
  413463:	mov    rsi,r13
  413466:	mov    edi,r12d
  413469:	call   QWORD PTR [r15+rbx*8]
  41346d:	add    rbx,0x1
  413471:	cmp    rbp,rbx
  413474:	jne    413460 <__libc_csu_init@@Base+0x40>
  413476:	add    rsp,0x8
  41347a:	pop    rbx
  41347b:	pop    rbp
  41347c:	pop    r12
  41347e:	pop    r13
  413480:	pop    r14
  413482:	pop    r15
  413484:	ret    
  413485:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000413490 <__libc_csu_fini@@Base>:
  413490:	endbr64 
  413494:	ret    

Disassembly of section .fini:

0000000000413498 <.fini>:
  413498:	endbr64 
  41349c:	sub    rsp,0x8
  4134a0:	add    rsp,0x8
  4134a4:	ret    
