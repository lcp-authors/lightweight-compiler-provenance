
../repos/stcorp-coda-3a25f25/codadump:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe1]        # 40fff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <coda_cursor_get_byte_size@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <coda_cursor_get_byte_size@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <_IO_stdin_used@@Base+0x4008>
  403026:	jmp    QWORD PTR [rip+0xcfe4]        # 410010 <_IO_stdin_used@@Base+0x4010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <coda_cursor_get_byte_size@plt>:
  403030:	jmp    QWORD PTR [rip+0xcfe2]        # 410018 <coda_cursor_get_byte_size>
  403036:	push   0x0
  40303b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403040 <coda_type_get_special_type_name@plt>:
  403040:	jmp    QWORD PTR [rip+0xcfda]        # 410020 <coda_type_get_special_type_name>
  403046:	push   0x1
  40304b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403050 <coda_set_option_use_fast_size_expressions@plt>:
  403050:	jmp    QWORD PTR [rip+0xcfd2]        # 410028 <coda_set_option_use_fast_size_expressions>
  403056:	push   0x2
  40305b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403060 <coda_get_option_bypass_special_types@plt>:
  403060:	jmp    QWORD PTR [rip+0xcfca]        # 410030 <coda_get_option_bypass_special_types>
  403066:	push   0x3
  40306b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403070 <free@plt>:
  403070:	jmp    QWORD PTR [rip+0xcfc2]        # 410038 <free@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403080 <putchar@plt>:
  403080:	jmp    QWORD PTR [rip+0xcfba]        # 410040 <putchar@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403090 <coda_set_option_perform_boundary_checks@plt>:
  403090:	jmp    QWORD PTR [rip+0xcfb2]        # 410048 <coda_set_option_perform_boundary_checks>
  403096:	push   0x6
  40309b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030a0 <strncpy@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xcfaa]        # 410050 <strncpy@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030b0 <coda_type_get_record_field_hidden_status@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xcfa2]        # 410058 <coda_type_get_record_field_hidden_status>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030c0 <coda_cursor_get_record_field_available_status@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xcf9a]        # 410060 <coda_cursor_get_record_field_available_status>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030d0 <coda_set_error@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xcf92]        # 410068 <coda_set_error>
  4030d6:	push   0xa
  4030db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030e0 <coda_open@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xcf8a]        # 410070 <coda_open>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004030f0 <coda_time_double_to_string@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xcf82]        # 410078 <coda_time_double_to_string>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403100 <puts@plt>:
  403100:	jmp    QWORD PTR [rip+0xcf7a]        # 410080 <puts@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403110 <coda_cursor_get_num_elements@plt>:
  403110:	jmp    QWORD PTR [rip+0xcf72]        # 410088 <coda_cursor_get_num_elements>
  403116:	push   0xe
  40311b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403120 <coda_str64u@plt>:
  403120:	jmp    QWORD PTR [rip+0xcf6a]        # 410090 <coda_str64u>
  403126:	push   0xf
  40312b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403130 <coda_set_option_use_mmap@plt>:
  403130:	jmp    QWORD PTR [rip+0xcf62]        # 410098 <coda_set_option_use_mmap>
  403136:	push   0x10
  40313b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403140 <coda_set_definition_path_conditional@plt>:
  403140:	jmp    QWORD PTR [rip+0xcf5a]        # 4100a0 <coda_set_definition_path_conditional>
  403146:	push   0x11
  40314b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403150 <coda_cursor_read_uint32@plt>:
  403150:	jmp    QWORD PTR [rip+0xcf52]        # 4100a8 <coda_cursor_read_uint32>
  403156:	push   0x12
  40315b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403160 <coda_set_option_bypass_special_types@plt>:
  403160:	jmp    QWORD PTR [rip+0xcf4a]        # 4100b0 <coda_set_option_bypass_special_types>
  403166:	push   0x13
  40316b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403170 <coda_type_get_record_field_type@plt>:
  403170:	jmp    QWORD PTR [rip+0xcf42]        # 4100b8 <coda_type_get_record_field_type>
  403176:	push   0x14
  40317b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403180 <coda_cursor_get_type@plt>:
  403180:	jmp    QWORD PTR [rip+0xcf3a]        # 4100c0 <coda_cursor_get_type>
  403186:	push   0x15
  40318b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403190 <coda_isInf@plt>:
  403190:	jmp    QWORD PTR [rip+0xcf32]        # 4100c8 <coda_isInf>
  403196:	push   0x16
  40319b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031a0 <coda_type_get_bit_size@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xcf2a]        # 4100d0 <coda_type_get_bit_size>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031b0 <coda_type_get_record_field_available_status@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xcf22]        # 4100d8 <coda_type_get_record_field_available_status>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031c0 <fclose@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xcf1a]        # 4100e0 <fclose@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031d0 <coda_cursor_has_attributes@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xcf12]        # 4100e8 <coda_cursor_has_attributes>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031e0 <coda_cursor_get_type_class@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xcf0a]        # 4100f0 <coda_cursor_get_type_class>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004031f0 <coda_set_definition_path@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xcf02]        # 4100f8 <coda_set_definition_path>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403200 <coda_get_product_format@plt>:
  403200:	jmp    QWORD PTR [rip+0xcefa]        # 410100 <coda_get_product_format>
  403206:	push   0x1d
  40320b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403210 <coda_type_get_unit@plt>:
  403210:	jmp    QWORD PTR [rip+0xcef2]        # 410108 <coda_type_get_unit>
  403216:	push   0x1e
  40321b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403220 <coda_type_get_description@plt>:
  403220:	jmp    QWORD PTR [rip+0xceea]        # 410110 <coda_type_get_description>
  403226:	push   0x1f
  40322b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403230 <printf@plt>:
  403230:	jmp    QWORD PTR [rip+0xcee2]        # 410118 <printf@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403240 <__assert_fail@plt>:
  403240:	jmp    QWORD PTR [rip+0xceda]        # 410120 <__assert_fail@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403250 <fputs@plt>:
  403250:	jmp    QWORD PTR [rip+0xced2]        # 410128 <fputs@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403260 <coda_cursor_get_special_type@plt>:
  403260:	jmp    QWORD PTR [rip+0xceca]        # 410130 <coda_cursor_get_special_type>
  403266:	push   0x23
  40326b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403270 <coda_cursor_goto_first_array_element@plt>:
  403270:	jmp    QWORD PTR [rip+0xcec2]        # 410138 <coda_cursor_goto_first_array_element>
  403276:	push   0x24
  40327b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403280 <memset@plt>:
  403280:	jmp    QWORD PTR [rip+0xceba]        # 410140 <memset@GLIBC_2.2.5>
  403286:	push   0x25
  40328b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403290 <coda_cursor_set_product@plt>:
  403290:	jmp    QWORD PTR [rip+0xceb2]        # 410148 <coda_cursor_set_product>
  403296:	push   0x26
  40329b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032a0 <coda_cursor_goto_first_record_field@plt>:
  4032a0:	jmp    QWORD PTR [rip+0xceaa]        # 410150 <coda_cursor_goto_first_record_field>
  4032a6:	push   0x27
  4032ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032b0 <fputc@plt>:
  4032b0:	jmp    QWORD PTR [rip+0xcea2]        # 410158 <fputc@GLIBC_2.2.5>
  4032b6:	push   0x28
  4032bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032c0 <coda_cursor_goto_record_field_by_index@plt>:
  4032c0:	jmp    QWORD PTR [rip+0xce9a]        # 410160 <coda_cursor_goto_record_field_by_index>
  4032c6:	push   0x29
  4032cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032d0 <coda_done@plt>:
  4032d0:	jmp    QWORD PTR [rip+0xce92]        # 410168 <coda_done>
  4032d6:	push   0x2a
  4032db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032e0 <coda_cursor_get_read_type@plt>:
  4032e0:	jmp    QWORD PTR [rip+0xce8a]        # 410170 <coda_cursor_get_read_type>
  4032e6:	push   0x2b
  4032eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004032f0 <strcmp@plt>:
  4032f0:	jmp    QWORD PTR [rip+0xce82]        # 410178 <strcmp@GLIBC_2.2.5>
  4032f6:	push   0x2c
  4032fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403300 <fprintf@plt>:
  403300:	jmp    QWORD PTR [rip+0xce7a]        # 410180 <fprintf@GLIBC_2.2.5>
  403306:	push   0x2d
  40330b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403310 <coda_cursor_read_string@plt>:
  403310:	jmp    QWORD PTR [rip+0xce72]        # 410188 <coda_cursor_read_string>
  403316:	push   0x2e
  40331b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403320 <coda_cursor_goto_parent@plt>:
  403320:	jmp    QWORD PTR [rip+0xce6a]        # 410190 <coda_cursor_goto_parent>
  403326:	push   0x2f
  40332b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403330 <strtol@plt>:
  403330:	jmp    QWORD PTR [rip+0xce62]        # 410198 <strtol@GLIBC_2.2.5>
  403336:	push   0x30
  40333b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403340 <coda_type_get_num_record_fields@plt>:
  403340:	jmp    QWORD PTR [rip+0xce5a]        # 4101a0 <coda_type_get_num_record_fields>
  403346:	push   0x31
  40334b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403350 <memcpy@plt>:
  403350:	jmp    QWORD PTR [rip+0xce52]        # 4101a8 <memcpy@GLIBC_2.14>
  403356:	push   0x32
  40335b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403360 <coda_type_get_read_type@plt>:
  403360:	jmp    QWORD PTR [rip+0xce4a]        # 4101b0 <coda_type_get_read_type>
  403366:	push   0x33
  40336b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403370 <coda_cursor_get_string_length@plt>:
  403370:	jmp    QWORD PTR [rip+0xce42]        # 4101b8 <coda_cursor_get_string_length>
  403376:	push   0x34
  40337b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403380 <coda_cursor_read_uint64@plt>:
  403380:	jmp    QWORD PTR [rip+0xce3a]        # 4101c0 <coda_cursor_read_uint64>
  403386:	push   0x35
  40338b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403390 <coda_cursor_read_double@plt>:
  403390:	jmp    QWORD PTR [rip+0xce32]        # 4101c8 <coda_cursor_read_double>
  403396:	push   0x36
  40339b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033a0 <coda_isNaN@plt>:
  4033a0:	jmp    QWORD PTR [rip+0xce2a]        # 4101d0 <coda_isNaN>
  4033a6:	push   0x37
  4033ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033b0 <coda_cursor_goto_next_array_element@plt>:
  4033b0:	jmp    QWORD PTR [rip+0xce22]        # 4101d8 <coda_cursor_goto_next_array_element>
  4033b6:	push   0x38
  4033bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033c0 <coda_open_as@plt>:
  4033c0:	jmp    QWORD PTR [rip+0xce1a]        # 4101e0 <coda_open_as>
  4033c6:	push   0x39
  4033cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033d0 <coda_init@plt>:
  4033d0:	jmp    QWORD PTR [rip+0xce12]        # 4101e8 <coda_init>
  4033d6:	push   0x3a
  4033db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033e0 <coda_set_option_perform_conversions@plt>:
  4033e0:	jmp    QWORD PTR [rip+0xce0a]        # 4101f0 <coda_set_option_perform_conversions>
  4033e6:	push   0x3b
  4033eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004033f0 <malloc@plt>:
  4033f0:	jmp    QWORD PTR [rip+0xce02]        # 4101f8 <malloc@GLIBC_2.2.5>
  4033f6:	push   0x3c
  4033fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403400 <fflush@plt>:
  403400:	jmp    QWORD PTR [rip+0xcdfa]        # 410200 <fflush@GLIBC_2.2.5>
  403406:	push   0x3d
  40340b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403410 <coda_cursor_goto_attributes@plt>:
  403410:	jmp    QWORD PTR [rip+0xcdf2]        # 410208 <coda_cursor_goto_attributes>
  403416:	push   0x3e
  40341b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403420 <coda_cursor_read_char@plt>:
  403420:	jmp    QWORD PTR [rip+0xcdea]        # 410210 <coda_cursor_read_char>
  403426:	push   0x3f
  40342b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403430 <coda_type_get_special_type@plt>:
  403430:	jmp    QWORD PTR [rip+0xcde2]        # 410218 <coda_type_get_special_type>
  403436:	push   0x40
  40343b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403440 <coda_type_get_record_union_status@plt>:
  403440:	jmp    QWORD PTR [rip+0xcdda]        # 410220 <coda_type_get_record_union_status>
  403446:	push   0x41
  40344b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403450 <coda_cursor_read_complex_double_split@plt>:
  403450:	jmp    QWORD PTR [rip+0xcdd2]        # 410228 <coda_cursor_read_complex_double_split>
  403456:	push   0x42
  40345b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403460 <coda_type_get_array_base_type@plt>:
  403460:	jmp    QWORD PTR [rip+0xcdca]        # 410230 <coda_type_get_array_base_type>
  403466:	push   0x43
  40346b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403470 <coda_type_get_string_length@plt>:
  403470:	jmp    QWORD PTR [rip+0xcdc2]        # 410238 <coda_type_get_string_length>
  403476:	push   0x44
  40347b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403480 <coda_type_get_native_type_name@plt>:
  403480:	jmp    QWORD PTR [rip+0xcdba]        # 410240 <coda_type_get_native_type_name>
  403486:	push   0x45
  40348b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403490 <coda_cursor_get_array_dim@plt>:
  403490:	jmp    QWORD PTR [rip+0xcdb2]        # 410248 <coda_cursor_get_array_dim>
  403496:	push   0x46
  40349b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034a0 <coda_cursor_has_ascii_content@plt>:
  4034a0:	jmp    QWORD PTR [rip+0xcdaa]        # 410250 <coda_cursor_has_ascii_content>
  4034a6:	push   0x47
  4034ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034b0 <coda_close@plt>:
  4034b0:	jmp    QWORD PTR [rip+0xcda2]        # 410258 <coda_close>
  4034b6:	push   0x48
  4034bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034c0 <coda_cursor_read_int64@plt>:
  4034c0:	jmp    QWORD PTR [rip+0xcd9a]        # 410260 <coda_cursor_read_int64>
  4034c6:	push   0x49
  4034cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034d0 <coda_cursor_goto@plt>:
  4034d0:	jmp    QWORD PTR [rip+0xcd92]        # 410268 <coda_cursor_goto>
  4034d6:	push   0x4a
  4034db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034e0 <coda_type_get_record_field_index_from_name@plt>:
  4034e0:	jmp    QWORD PTR [rip+0xcd8a]        # 410270 <coda_type_get_record_field_index_from_name>
  4034e6:	push   0x4b
  4034eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004034f0 <coda_cursor_read_complex_double_pair@plt>:
  4034f0:	jmp    QWORD PTR [rip+0xcd82]        # 410278 <coda_cursor_read_complex_double_pair>
  4034f6:	push   0x4c
  4034fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403500 <coda_cursor_goto_next_record_field@plt>:
  403500:	jmp    QWORD PTR [rip+0xcd7a]        # 410280 <coda_cursor_goto_next_record_field>
  403506:	push   0x4d
  40350b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403510 <fopen@plt>:
  403510:	jmp    QWORD PTR [rip+0xcd72]        # 410288 <fopen@GLIBC_2.2.5>
  403516:	push   0x4e
  40351b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403520 <coda_type_get_array_dim@plt>:
  403520:	jmp    QWORD PTR [rip+0xcd6a]        # 410290 <coda_type_get_array_dim>
  403526:	push   0x4f
  40352b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403530 <vfprintf@plt>:
  403530:	jmp    QWORD PTR [rip+0xcd62]        # 410298 <vfprintf@GLIBC_2.2.5>
  403536:	push   0x50
  40353b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403540 <coda_cursor_get_bit_size@plt>:
  403540:	jmp    QWORD PTR [rip+0xcd5a]        # 4102a0 <coda_cursor_get_bit_size>
  403546:	push   0x51
  40354b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403550 <coda_errno_to_string@plt>:
  403550:	jmp    QWORD PTR [rip+0xcd52]        # 4102a8 <coda_errno_to_string>
  403556:	push   0x52
  40355b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403560 <coda_cursor_use_base_type_of_special_type@plt>:
  403560:	jmp    QWORD PTR [rip+0xcd4a]        # 4102b0 <coda_cursor_use_base_type_of_special_type>
  403566:	push   0x53
  40356b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403570 <coda_cursor_get_available_union_field_index@plt>:
  403570:	jmp    QWORD PTR [rip+0xcd42]        # 4102b8 <coda_cursor_get_available_union_field_index>
  403576:	push   0x54
  40357b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403580 <exit@plt>:
  403580:	jmp    QWORD PTR [rip+0xcd3a]        # 4102c0 <exit@GLIBC_2.2.5>
  403586:	push   0x55
  40358b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403590 <coda_cursor_read_int32@plt>:
  403590:	jmp    QWORD PTR [rip+0xcd32]        # 4102c8 <coda_cursor_read_int32>
  403596:	push   0x56
  40359b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035a0 <fwrite@plt>:
  4035a0:	jmp    QWORD PTR [rip+0xcd2a]        # 4102d0 <fwrite@GLIBC_2.2.5>
  4035a6:	push   0x57
  4035ab:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035b0 <coda_cursor_get_file_bit_offset@plt>:
  4035b0:	jmp    QWORD PTR [rip+0xcd22]        # 4102d8 <coda_cursor_get_file_bit_offset>
  4035b6:	push   0x58
  4035bb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035c0 <coda_get_libcoda_version@plt>:
  4035c0:	jmp    QWORD PTR [rip+0xcd1a]        # 4102e0 <coda_get_libcoda_version>
  4035c6:	push   0x59
  4035cb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035d0 <coda_get_errno@plt>:
  4035d0:	jmp    QWORD PTR [rip+0xcd12]        # 4102e8 <coda_get_errno>
  4035d6:	push   0x5a
  4035db:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035e0 <coda_type_get_special_base_type@plt>:
  4035e0:	jmp    QWORD PTR [rip+0xcd0a]        # 4102f0 <coda_type_get_special_base_type>
  4035e6:	push   0x5b
  4035eb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

00000000004035f0 <coda_type_get_record_field_name@plt>:
  4035f0:	jmp    QWORD PTR [rip+0xcd02]        # 4102f8 <coda_type_get_record_field_name>
  4035f6:	push   0x5c
  4035fb:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403600 <coda_cursor_read_bits@plt>:
  403600:	jmp    QWORD PTR [rip+0xccfa]        # 410300 <coda_cursor_read_bits>
  403606:	push   0x5d
  40360b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403610 <coda_str64@plt>:
  403610:	jmp    QWORD PTR [rip+0xccf2]        # 410308 <coda_str64>
  403616:	push   0x5e
  40361b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

0000000000403620 <coda_type_get_class@plt>:
  403620:	jmp    QWORD PTR [rip+0xccea]        # 410310 <coda_type_get_class>
  403626:	push   0x5f
  40362b:	jmp    403020 <coda_cursor_get_byte_size@plt-0x10>

Disassembly of section .text:

0000000000403630 <_start@@Base>:
  403630:	endbr64 
  403634:	xor    ebp,ebp
  403636:	mov    r9,rdx
  403639:	pop    rsi
  40363a:	mov    rdx,rsp
  40363d:	and    rsp,0xfffffffffffffff0
  403641:	push   rax
  403642:	push   rsp
  403643:	mov    r8,0x40bf10
  40364a:	mov    rcx,0x40bea0
  403651:	mov    rdi,0x40a740
  403658:	call   QWORD PTR [rip+0xc98a]        # 40ffe8 <__libc_start_main@GLIBC_2.2.5>
  40365e:	hlt    
  40365f:	nop
  403660:	endbr64 
  403664:	ret    
  403665:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40366f:	nop
  403670:	mov    eax,0x410330
  403675:	cmp    rax,0x410330
  40367b:	je     403690 <_start@@Base+0x60>
  40367d:	mov    eax,0x0
  403682:	test   rax,rax
  403685:	je     403690 <_start@@Base+0x60>
  403687:	mov    edi,0x410330
  40368c:	jmp    rax
  40368e:	xchg   ax,ax
  403690:	ret    
  403691:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40369c:	nop    DWORD PTR [rax+0x0]
  4036a0:	mov    esi,0x410330
  4036a5:	sub    rsi,0x410330
  4036ac:	mov    rax,rsi
  4036af:	shr    rsi,0x3f
  4036b3:	sar    rax,0x3
  4036b7:	add    rsi,rax
  4036ba:	sar    rsi,1
  4036bd:	je     4036d0 <_start@@Base+0xa0>
  4036bf:	mov    eax,0x0
  4036c4:	test   rax,rax
  4036c7:	je     4036d0 <_start@@Base+0xa0>
  4036c9:	mov    edi,0x410330
  4036ce:	jmp    rax
  4036d0:	ret    
  4036d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4036dc:	nop    DWORD PTR [rax+0x0]
  4036e0:	endbr64 
  4036e4:	cmp    BYTE PTR [rip+0xcc45],0x0        # 410330 <__bss_start@@Base>
  4036eb:	jne    403700 <_start@@Base+0xd0>
  4036ed:	push   rbp
  4036ee:	mov    rbp,rsp
  4036f1:	call   403670 <_start@@Base+0x40>
  4036f6:	mov    BYTE PTR [rip+0xcc33],0x1        # 410330 <__bss_start@@Base>
  4036fd:	pop    rbp
  4036fe:	ret    
  4036ff:	nop
  403700:	ret    
  403701:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40370c:	nop    DWORD PTR [rax+0x0]
  403710:	endbr64 
  403714:	jmp    4036a0 <_start@@Base+0x70>
  403716:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403720 <export_data_element_to_ascii@@Base>:
  403720:	push   rbx
  403721:	cmp    BYTE PTR [rip+0xcc0c],0x0        # 410334 <__bss_start@@Base+0x4>
  403728:	je     403740 <export_data_element_to_ascii@@Base+0x20>
  40372a:	lea    rax,[rip+0xdd77]        # 4114a8 <ascii_output@@Base>
  403731:	mov    rsi,QWORD PTR [rax]
  403734:	mov    edi,0xa
  403739:	call   4032b0 <fputc@plt>
  40373e:	jmp    403747 <export_data_element_to_ascii@@Base+0x27>
  403740:	mov    BYTE PTR [rip+0xcbed],0x1        # 410334 <__bss_start@@Base+0x4>
  403747:	lea    rax,[rip+0xdf12]        # 411660 <show_label@@Base>
  40374e:	cmp    DWORD PTR [rax],0x0
  403751:	je     403776 <export_data_element_to_ascii@@Base+0x56>
  403753:	lea    rbx,[rip+0xdd4e]        # 4114a8 <ascii_output@@Base>
  40375a:	mov    rdi,QWORD PTR [rbx]
  40375d:	mov    esi,0x2
  403762:	xor    edx,edx
  403764:	call   4089a0 <print_full_field_name@@Base>
  403769:	mov    rsi,QWORD PTR [rbx]
  40376c:	mov    edi,0xa
  403771:	call   4032b0 <fputc@plt>
  403776:	lea    rax,[rip+0xdd53]        # 4114d0 <dim_info@@Base>
  40377d:	movsxd rcx,DWORD PTR [rax]
  403780:	test   rcx,rcx
  403783:	jle    403790 <export_data_element_to_ascii@@Base+0x70>
  403785:	cmp    QWORD PTR [rax+rcx*8+0x148],0x0
  40378e:	je     4037a3 <export_data_element_to_ascii@@Base+0x83>
  403790:	lea    rax,[rip+0xdd11]        # 4114a8 <ascii_output@@Base>
  403797:	mov    rdi,QWORD PTR [rax]
  40379a:	xor    esi,esi
  40379c:	xor    edx,edx
  40379e:	xor    ecx,ecx
  4037a0:	pop    rbx
  4037a1:	jmp    4037b0 <export_data_element_to_ascii@@Base+0x90>
  4037a3:	pop    rbx
  4037a4:	ret    
  4037a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037af:	nop
  4037b0:	push   rbp
  4037b1:	push   r15
  4037b3:	push   r14
  4037b5:	push   r13
  4037b7:	push   r12
  4037b9:	push   rbx
  4037ba:	sub    rsp,0x68
  4037be:	mov    DWORD PTR [rsp],ecx
  4037c1:	mov    r12d,edx
  4037c4:	mov    rbx,rdi
  4037c7:	mov    DWORD PTR [rsp+0x40],esi
  4037cb:	movsxd rbp,esi
  4037ce:	lea    r14,[rip+0xcb93]        # 410368 <traverse_info@@Base>
  4037d5:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  4037da:	lea    rsi,[rsp+0x50]
  4037df:	call   403620 <coda_type_get_class@plt>
  4037e4:	test   eax,eax
  4037e6:	je     4037ef <export_data_element_to_ascii@@Base+0xcf>
  4037e8:	xor    eax,eax
  4037ea:	call   40a6f0 <handle_coda_error@@Base>
  4037ef:	mov    eax,DWORD PTR [rsp+0x50]
  4037f3:	test   eax,eax
  4037f5:	mov    QWORD PTR [rsp+0x38],rbx
  4037fa:	je     4038b8 <export_data_element_to_ascii@@Base+0x198>
  403800:	cmp    eax,0x1
  403803:	jne    403928 <export_data_element_to_ascii@@Base+0x208>
  403809:	movsxd rax,r12d
  40380c:	lea    r15,[rax+rax*4]
  403810:	shl    r15,0x4
  403814:	movsxd r9,DWORD PTR [r14+r15*1+0x534]
  40381c:	test   r12d,r12d
  40381f:	jne    40382d <export_data_element_to_ascii@@Base+0x10d>
  403821:	mov    DWORD PTR [r14+r15*1+0x560],0x0
  40382d:	lea    r8,[rip+0xdc9c]        # 4114d0 <dim_info@@Base>
  403834:	mov    eax,DWORD PTR [r8+0x68]
  403838:	mov    edx,DWORD PTR [r14+r15*1+0x538]
  403840:	lea    ecx,[rdx+r9*1]
  403844:	mov    DWORD PTR [rsp+0x4c],eax
  403848:	mov    DWORD PTR [rsp+0x48],ecx
  40384c:	cmp    eax,ecx
  40384e:	jl     403888 <export_data_element_to_ascii@@Base+0x168>
  403850:	mov    eax,DWORD PTR [r14+0xf34]
  403857:	add    eax,0xffffffff
  40385a:	cmp    eax,r12d
  40385d:	jle    403888 <export_data_element_to_ascii@@Base+0x168>
  40385f:	mov    eax,DWORD PTR [r14+r15*1+0x55c]
  403867:	imul   eax,DWORD PTR [r14+r15*1+0x560]
  403870:	lea    ecx,[r12+0x1]
  403875:	movsxd rcx,ecx
  403878:	lea    rcx,[rcx+rcx*4]
  40387c:	shl    rcx,0x4
  403880:	mov    DWORD PTR [r14+rcx*1+0x560],eax
  403888:	test   edx,edx
  40388a:	jle    403ab6 <export_data_element_to_ascii@@Base+0x396>
  403890:	lea    r11,[r14+r15*1]
  403894:	add    r11,0x560
  40389b:	mov    r10d,edx
  40389e:	and    r10d,0x1
  4038a2:	cmp    edx,0x1
  4038a5:	jne    403af2 <export_data_element_to_ascii@@Base+0x3d2>
  4038ab:	mov    r14d,0x1
  4038b1:	xor    esi,esi
  4038b3:	jmp    403b92 <export_data_element_to_ascii@@Base+0x472>
  4038b8:	movsxd rbx,DWORD PTR [rsp]
  4038bc:	movsxd rsi,DWORD PTR [r14+rbx*4+0xfb8]
  4038c4:	lea    rbp,[r14+0x118]
  4038cb:	lea    rdx,[rsp+0x10]
  4038d0:	mov    rdi,rbp
  4038d3:	call   4030c0 <coda_cursor_get_record_field_available_status@plt>
  4038d8:	test   eax,eax
  4038da:	je     4038e3 <export_data_element_to_ascii@@Base+0x1c3>
  4038dc:	xor    eax,eax
  4038de:	call   40a6f0 <handle_coda_error@@Base>
  4038e3:	cmp    DWORD PTR [rsp+0x10],0x0
  4038e8:	je     404238 <export_data_element_to_ascii@@Base+0xb18>
  4038ee:	movsxd rsi,DWORD PTR [r14+rbx*4+0xfb8]
  4038f6:	mov    rdi,rbp
  4038f9:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  4038fe:	test   eax,eax
  403900:	je     403909 <export_data_element_to_ascii@@Base+0x1e9>
  403902:	xor    eax,eax
  403904:	call   40a6f0 <handle_coda_error@@Base>
  403909:	mov    esi,DWORD PTR [rsp+0x40]
  40390d:	add    esi,0x1
  403910:	mov    ecx,DWORD PTR [rsp]
  403913:	add    ecx,0x1
  403916:	mov    rdi,QWORD PTR [rsp+0x38]
  40391b:	mov    edx,r12d
  40391e:	call   4037b0 <export_data_element_to_ascii@@Base+0x90>
  403923:	jmp    403e1d <export_data_element_to_ascii@@Base+0x6fd>
  403928:	mov    QWORD PTR [rsp+0x40],rbp
  40392d:	lea    rax,[rip+0xdb8c]        # 4114c0 <show_index@@Base>
  403934:	cmp    DWORD PTR [rax],0x0
  403937:	je     403a1a <export_data_element_to_ascii@@Base+0x2fa>
  40393d:	mov    eax,DWORD PTR [r14+0x110]
  403944:	test   eax,eax
  403946:	jle    403a1a <export_data_element_to_ascii@@Base+0x2fa>
  40394c:	lea    r12,[rsp+0x10]
  403951:	lea    r15,[rip+0xdb58]        # 4114b0 <ascii_col_sep@@Base>
  403958:	lea    rbp,[rip+0x8825]        # 40c184 <_IO_stdin_used@@Base+0x184>
  40395f:	xor    ebx,ebx
  403961:	xor    r13d,r13d
  403964:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40396e:	xchg   ax,ax
  403970:	mov    rdi,QWORD PTR [r14+rbx*8+0x10]
  403975:	mov    rsi,r12
  403978:	call   403620 <coda_type_get_class@plt>
  40397d:	test   eax,eax
  40397f:	je     403988 <export_data_element_to_ascii@@Base+0x268>
  403981:	xor    eax,eax
  403983:	call   40a6f0 <handle_coda_error@@Base>
  403988:	cmp    DWORD PTR [rsp+0x10],0x1
  40398d:	jne    403a06 <export_data_element_to_ascii@@Base+0x2e6>
  40398f:	mov    DWORD PTR [rsp],r13d
  403993:	movsxd rax,r13d
  403996:	lea    rax,[rax+rax*4]
  40399a:	shl    rax,0x4
  40399e:	cmp    DWORD PTR [r14+rax*1+0x538],0x0
  4039a7:	mov    r12,QWORD PTR [rsp+0x38]
  4039ac:	jle    4039f2 <export_data_element_to_ascii@@Base+0x2d2>
  4039ae:	lea    rcx,[rip+0xc9b3]        # 410368 <traverse_info@@Base>
  4039b5:	lea    r13,[rcx+rax*1]
  4039b9:	add    r13,0x538
  4039c0:	xor    r14d,r14d
  4039c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039cd:	nop    DWORD PTR [rax]
  4039d0:	movsxd rdx,DWORD PTR [r13+r14*4+0x2c]
  4039d5:	mov    rcx,QWORD PTR [r15]
  4039d8:	xor    eax,eax
  4039da:	mov    rdi,r12
  4039dd:	mov    rsi,rbp
  4039e0:	call   403300 <fprintf@plt>
  4039e5:	add    r14,0x1
  4039e9:	movsxd rax,DWORD PTR [r13+0x0]
  4039ed:	cmp    r14,rax
  4039f0:	jl     4039d0 <export_data_element_to_ascii@@Base+0x2b0>
  4039f2:	mov    r13d,DWORD PTR [rsp]
  4039f6:	add    r13d,0x1
  4039fa:	lea    r14,[rip+0xc967]        # 410368 <traverse_info@@Base>
  403a01:	lea    r12,[rsp+0x10]
  403a06:	add    rbx,0x1
  403a0a:	movsxd rax,DWORD PTR [r14+0x110]
  403a11:	cmp    rbx,rax
  403a14:	jl     403970 <export_data_element_to_ascii@@Base+0x250>
  403a1a:	mov    rbp,QWORD PTR [rsp+0x40]
  403a1f:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  403a24:	lea    rsi,[rsp+0x54]
  403a29:	call   403620 <coda_type_get_class@plt>
  403a2e:	test   eax,eax
  403a30:	je     403a39 <export_data_element_to_ascii@@Base+0x319>
  403a32:	xor    eax,eax
  403a34:	call   40a6f0 <handle_coda_error@@Base>
  403a39:	mov    eax,DWORD PTR [rsp+0x54]
  403a3d:	lea    ecx,[rax-0x2]
  403a40:	cmp    ecx,0x4
  403a43:	mov    rbx,QWORD PTR [rsp+0x38]
  403a48:	jae    403ac1 <export_data_element_to_ascii@@Base+0x3a1>
  403a4a:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  403a4f:	lea    rsi,[rsp+0x4]
  403a54:	call   403360 <coda_type_get_read_type@plt>
  403a59:	test   eax,eax
  403a5b:	je     403a64 <export_data_element_to_ascii@@Base+0x344>
  403a5d:	xor    eax,eax
  403a5f:	call   40a6f0 <handle_coda_error@@Base>
  403a64:	mov    eax,DWORD PTR [rsp+0x4]
  403a68:	add    eax,0x1
  403a6b:	cmp    eax,0xd
  403a6e:	ja     40422b <export_data_element_to_ascii@@Base+0xb0b>
  403a74:	lea    rcx,[rip+0x8589]        # 40c004 <_IO_stdin_used@@Base+0x4>
  403a7b:	movsxd rax,DWORD PTR [rcx+rax*4]
  403a7f:	add    rax,rcx
  403a82:	jmp    rax
  403a84:	mov    edi,0x118
  403a89:	add    rdi,QWORD PTR [rip+0xc550]        # 40ffe0 <traverse_info@@Base-0x388>
  403a90:	lea    rsi,[rsp+0x10]
  403a95:	call   403590 <coda_cursor_read_int32@plt>
  403a9a:	test   eax,eax
  403a9c:	je     403aa5 <export_data_element_to_ascii@@Base+0x385>
  403a9e:	xor    eax,eax
  403aa0:	call   40a6f0 <handle_coda_error@@Base>
  403aa5:	movsxd rdx,DWORD PTR [rsp+0x10]
  403aaa:	lea    rsi,[rip+0x8f4a]        # 40c9fb <_IO_stdin_used@@Base+0x9fb>
  403ab1:	jmp    403caf <export_data_element_to_ascii@@Base+0x58f>
  403ab6:	mov    r14d,0x1
  403abc:	jmp    403cee <export_data_element_to_ascii@@Base+0x5ce>
  403ac1:	cmp    eax,0x6
  403ac4:	je     403bc0 <export_data_element_to_ascii@@Base+0x4a0>
  403aca:	cmp    eax,0x2
  403acd:	jae    40422b <export_data_element_to_ascii@@Base+0xb0b>
  403ad3:	lea    rdi,[rip+0x885a]        # 40c334 <_IO_stdin_used@@Base+0x334>
  403ada:	lea    rsi,[rip+0x85b1]        # 40c092 <_IO_stdin_used@@Base+0x92>
  403ae1:	lea    rcx,[rip+0x863c]        # 40c124 <_IO_stdin_used@@Base+0x124>
  403ae8:	mov    edx,0x170
  403aed:	call   403240 <__assert_fail@plt>
  403af2:	lea    rbp,[r8+r9*4]
  403af6:	lea    rax,[r8+r9*8]
  403afa:	add    rax,0x78
  403afe:	lea    rcx,[r14+r15*1]
  403b02:	add    rcx,0x568
  403b09:	sub    rdx,r10
  403b0c:	mov    r14d,0x1
  403b12:	xor    esi,esi
  403b14:	mov    rbx,rbp
  403b17:	nop    WORD PTR [rax+rax*1+0x0]
  403b20:	cmp    DWORD PTR [rbp+rsi*4+0x48],0x0
  403b25:	je     403b40 <export_data_element_to_ascii@@Base+0x420>
  403b27:	movsxd rdi,DWORD PTR [r11]
  403b2a:	shl    rdi,0x2
  403b2e:	add    rdi,QWORD PTR [rax+rsi*8-0x8]
  403b33:	jmp    403b44 <export_data_element_to_ascii@@Base+0x424>
  403b35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b3f:	nop
  403b40:	lea    rdi,[rbx+0x4]
  403b44:	mov    edi,DWORD PTR [rdi]
  403b46:	mov    DWORD PTR [rsp+rsi*4+0x10],edi
  403b4a:	imul   r14d,edi
  403b4e:	mov    DWORD PTR [rcx+rsi*4-0x4],0x0
  403b56:	cmp    DWORD PTR [rbp+rsi*4+0x4c],0x0
  403b5b:	je     403b70 <export_data_element_to_ascii@@Base+0x450>
  403b5d:	movsxd rdi,DWORD PTR [r11]
  403b60:	shl    rdi,0x2
  403b64:	add    rdi,QWORD PTR [rax+rsi*8]
  403b68:	jmp    403b74 <export_data_element_to_ascii@@Base+0x454>
  403b6a:	nop    WORD PTR [rax+rax*1+0x0]
  403b70:	lea    rdi,[rbx+0x8]
  403b74:	mov    edi,DWORD PTR [rdi]
  403b76:	mov    DWORD PTR [rsp+rsi*4+0x14],edi
  403b7a:	imul   r14d,edi
  403b7e:	mov    DWORD PTR [rcx+rsi*4],0x0
  403b85:	add    rsi,0x2
  403b89:	add    rbx,0x8
  403b8d:	cmp    rdx,rsi
  403b90:	jne    403b20 <export_data_element_to_ascii@@Base+0x400>
  403b92:	test   r10,r10
  403b95:	mov    rbx,QWORD PTR [rsp+0x38]
  403b9a:	je     403ce5 <export_data_element_to_ascii@@Base+0x5c5>
  403ba0:	add    r9,rsi
  403ba3:	cmp    DWORD PTR [r8+r9*4+0x48],0x0
  403ba9:	je     403cbe <export_data_element_to_ascii@@Base+0x59e>
  403baf:	movsxd rax,DWORD PTR [r11]
  403bb2:	shl    rax,0x2
  403bb6:	add    rax,QWORD PTR [r8+r9*8+0x70]
  403bbb:	jmp    403cc6 <export_data_element_to_ascii@@Base+0x5a6>
  403bc0:	mov    rdi,QWORD PTR [r14+rbp*8+0x10]
  403bc5:	lea    rsi,[rsp+0x4]
  403bca:	call   403430 <coda_type_get_special_type@plt>
  403bcf:	test   eax,eax
  403bd1:	je     403bda <export_data_element_to_ascii@@Base+0x4ba>
  403bd3:	xor    eax,eax
  403bd5:	call   40a6f0 <handle_coda_error@@Base>
  403bda:	mov    eax,DWORD PTR [rsp+0x4]
  403bde:	lea    ecx,[rax-0x1]
  403be1:	cmp    ecx,0x2
  403be4:	jae    403e71 <export_data_element_to_ascii@@Base+0x751>
  403bea:	mov    edi,0x118
  403bef:	add    rdi,QWORD PTR [rip+0xc3ea]        # 40ffe0 <traverse_info@@Base-0x388>
  403bf6:	lea    rsi,[rsp+0x8]
  403bfb:	call   403390 <coda_cursor_read_double@plt>
  403c00:	test   eax,eax
  403c02:	je     403c0b <export_data_element_to_ascii@@Base+0x4eb>
  403c04:	xor    eax,eax
  403c06:	call   40a6f0 <handle_coda_error@@Base>
  403c0b:	cmp    DWORD PTR [rsp+0x4],0x2
  403c10:	jne    4041ff <export_data_element_to_ascii@@Base+0xadf>
  403c16:	lea    rax,[rip+0xc73b]        # 410358 <show_time_as_string@@Base>
  403c1d:	mov    eax,DWORD PTR [rax]
  403c1f:	test   eax,eax
  403c21:	je     4041ff <export_data_element_to_ascii@@Base+0xadf>
  403c27:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  403c2d:	call   4033a0 <coda_isNaN@plt>
  403c32:	test   eax,eax
  403c34:	jne    403c49 <export_data_element_to_ascii@@Base+0x529>
  403c36:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  403c3c:	call   403190 <coda_isInf@plt>
  403c41:	test   eax,eax
  403c43:	je     40425d <export_data_element_to_ascii@@Base+0xb3d>
  403c49:	vmovups xmm0,XMMWORD PTR [rip+0x8501]        # 40c152 <_IO_stdin_used@@Base+0x152>
  403c51:	vmovups XMMWORD PTR [rsp+0x1b],xmm0
  403c57:	vmovups xmm0,XMMWORD PTR [rip+0x84e8]        # 40c147 <_IO_stdin_used@@Base+0x147>
  403c5f:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  403c65:	lea    rax,[rip+0xd9f8]        # 411664 <show_quotes@@Base>
  403c6c:	cmp    DWORD PTR [rax],0x0
  403c6f:	je     404253 <export_data_element_to_ascii@@Base+0xb33>
  403c75:	lea    rsi,[rip+0x8e84]        # 40cb00 <_IO_stdin_used@@Base+0xb00>
  403c7c:	lea    rdx,[rsp+0x10]
  403c81:	jmp    403caf <export_data_element_to_ascii@@Base+0x58f>
  403c83:	mov    edi,0x118
  403c88:	add    rdi,QWORD PTR [rip+0xc351]        # 40ffe0 <traverse_info@@Base-0x388>
  403c8f:	lea    rsi,[rsp+0x10]
  403c94:	call   403150 <coda_cursor_read_uint32@plt>
  403c99:	test   eax,eax
  403c9b:	je     403ca4 <export_data_element_to_ascii@@Base+0x584>
  403c9d:	xor    eax,eax
  403c9f:	call   40a6f0 <handle_coda_error@@Base>
  403ca4:	mov    edx,DWORD PTR [rsp+0x10]
  403ca8:	lea    rsi,[rip+0x8466]        # 40c115 <_IO_stdin_used@@Base+0x115>
  403caf:	xor    eax,eax
  403cb1:	mov    rdi,rbx
  403cb4:	call   403300 <fprintf@plt>
  403cb9:	jmp    40422b <export_data_element_to_ascii@@Base+0xb0b>
  403cbe:	lea    rax,[r8+r9*4]
  403cc2:	add    rax,0x4
  403cc6:	mov    eax,DWORD PTR [rax]
  403cc8:	mov    DWORD PTR [rsp+rsi*4+0x10],eax
  403ccc:	lea    rcx,[rip+0xc695]        # 410368 <traverse_info@@Base>
  403cd3:	add    rcx,r15
  403cd6:	mov    DWORD PTR [rcx+rsi*4+0x564],0x0
  403ce1:	imul   r14d,eax
  403ce5:	test   r14d,r14d
  403ce8:	je     404238 <export_data_element_to_ascii@@Base+0xb18>
  403cee:	mov    QWORD PTR [rsp+0x58],r12
  403cf3:	mov    edi,0x118
  403cf8:	add    rdi,QWORD PTR [rip+0xc2e1]        # 40ffe0 <traverse_info@@Base-0x388>
  403cff:	call   403270 <coda_cursor_goto_first_array_element@plt>
  403d04:	test   eax,eax
  403d06:	je     403d0f <export_data_element_to_ascii@@Base+0x5ef>
  403d08:	xor    eax,eax
  403d0a:	call   40a6f0 <handle_coda_error@@Base>
  403d0f:	test   r14d,r14d
  403d12:	jle    403e1d <export_data_element_to_ascii@@Base+0x6fd>
  403d18:	lea    rax,[rip+0xc649]        # 410368 <traverse_info@@Base>
  403d1f:	mov    rcx,rax
  403d22:	lea    r12,[rax+r15*1]
  403d26:	add    r12,0x538
  403d2d:	add    DWORD PTR [rsp+0x40],0x1
  403d32:	mov    rax,QWORD PTR [rsp+0x58]
  403d37:	lea    ebp,[rax+0x1]
  403d3a:	lea    r15d,[r14-0x1]
  403d3e:	movsxd rax,ebp
  403d41:	lea    rax,[rax+rax*4]
  403d45:	shl    rax,0x4
  403d49:	add    rax,rcx
  403d4c:	add    rax,0x560
  403d52:	mov    QWORD PTR [rsp+0x60],rax
  403d57:	mov    eax,0x118
  403d5c:	add    rax,QWORD PTR [rip+0xc27d]        # 40ffe0 <traverse_info@@Base-0x388>
  403d63:	mov    QWORD PTR [rsp+0x38],rax
  403d68:	xor    r13d,r13d
  403d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d70:	mov    rdi,rbx
  403d73:	mov    esi,DWORD PTR [rsp+0x40]
  403d77:	mov    edx,ebp
  403d79:	mov    ecx,DWORD PTR [rsp]
  403d7c:	call   4037b0 <export_data_element_to_ascii@@Base+0x90>
  403d81:	cmp    r13d,r15d
  403d84:	jge    403e10 <export_data_element_to_ascii@@Base+0x6f0>
  403d8a:	mov    rdi,QWORD PTR [rsp+0x38]
  403d8f:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  403d94:	test   eax,eax
  403d96:	je     403d9f <export_data_element_to_ascii@@Base+0x67f>
  403d98:	xor    eax,eax
  403d9a:	call   40a6f0 <handle_coda_error@@Base>
  403d9f:	mov    eax,DWORD PTR [rsp+0x48]
  403da3:	cmp    DWORD PTR [rsp+0x4c],eax
  403da7:	jl     403dc7 <export_data_element_to_ascii@@Base+0x6a7>
  403da9:	lea    rax,[rip+0xc5b8]        # 410368 <traverse_info@@Base>
  403db0:	mov    eax,DWORD PTR [rax+0xf34]
  403db6:	add    eax,0xffffffff
  403db9:	cmp    eax,DWORD PTR [rsp+0x58]
  403dbd:	jle    403dc7 <export_data_element_to_ascii@@Base+0x6a7>
  403dbf:	mov    rax,QWORD PTR [rsp+0x60]
  403dc4:	add    DWORD PTR [rax],0x1
  403dc7:	lea    rax,[rip+0xd6f2]        # 4114c0 <show_index@@Base>
  403dce:	cmp    DWORD PTR [rax],0x0
  403dd1:	je     403e10 <export_data_element_to_ascii@@Base+0x6f0>
  403dd3:	movsxd rax,DWORD PTR [r12]
  403dd7:	test   rax,rax
  403dda:	jle    403e10 <export_data_element_to_ascii@@Base+0x6f0>
  403ddc:	nop    DWORD PTR [rax+0x0]
  403de0:	mov    ecx,DWORD PTR [r12+rax*4+0x28]
  403de5:	add    ecx,0x1
  403de8:	mov    DWORD PTR [r12+rax*4+0x28],ecx
  403ded:	cmp    ecx,DWORD PTR [rsp+rax*4+0xc]
  403df1:	jne    403e10 <export_data_element_to_ascii@@Base+0x6f0>
  403df3:	mov    DWORD PTR [r12+rax*4+0x28],0x0
  403dfc:	add    rax,0xffffffffffffffff
  403e00:	lea    rcx,[rax+0x1]
  403e04:	cmp    rcx,0x1
  403e08:	jg     403de0 <export_data_element_to_ascii@@Base+0x6c0>
  403e0a:	nop    WORD PTR [rax+rax*1+0x0]
  403e10:	add    r13d,0x1
  403e14:	cmp    r13d,r14d
  403e17:	jne    403d70 <export_data_element_to_ascii@@Base+0x650>
  403e1d:	mov    edi,0x118
  403e22:	add    rdi,QWORD PTR [rip+0xc1b7]        # 40ffe0 <traverse_info@@Base-0x388>
  403e29:	call   403320 <coda_cursor_goto_parent@plt>
  403e2e:	jmp    404238 <export_data_element_to_ascii@@Base+0xb18>
  403e33:	mov    edi,0x118
  403e38:	add    rdi,QWORD PTR [rip+0xc1a1]        # 40ffe0 <traverse_info@@Base-0x388>
  403e3f:	lea    rsi,[rsp+0x10]
  403e44:	call   403390 <coda_cursor_read_double@plt>
  403e49:	test   eax,eax
  403e4b:	je     403e54 <export_data_element_to_ascii@@Base+0x734>
  403e4d:	xor    eax,eax
  403e4f:	call   40a6f0 <handle_coda_error@@Base>
  403e54:	cmp    DWORD PTR [rsp+0x4],0x8
  403e59:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  403e5f:	jne    404205 <export_data_element_to_ascii@@Base+0xae5>
  403e65:	lea    rsi,[rip+0x82ad]        # 40c119 <_IO_stdin_used@@Base+0x119>
  403e6c:	jmp    40420c <export_data_element_to_ascii@@Base+0xaec>
  403e71:	cmp    eax,0x3
  403e74:	jne    40422b <export_data_element_to_ascii@@Base+0xb0b>
  403e7a:	mov    edi,0x118
  403e7f:	add    rdi,QWORD PTR [rip+0xc15a]        # 40ffe0 <traverse_info@@Base-0x388>
  403e86:	lea    rsi,[rsp+0x10]
  403e8b:	call   4034f0 <coda_cursor_read_complex_double_pair@plt>
  403e90:	test   eax,eax
  403e92:	je     403e9b <export_data_element_to_ascii@@Base+0x77b>
  403e94:	xor    eax,eax
  403e96:	call   40a6f0 <handle_coda_error@@Base>
  403e9b:	lea    rax,[rip+0xd60e]        # 4114b0 <ascii_col_sep@@Base>
  403ea2:	mov    rdx,QWORD PTR [rax]
  403ea5:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  403eab:	vmovsd xmm1,QWORD PTR [rsp+0x18]
  403eb1:	lea    rsi,[rip+0x82c5]        # 40c17d <_IO_stdin_used@@Base+0x17d>
  403eb8:	mov    al,0x2
  403eba:	mov    rdi,rbx
  403ebd:	call   403300 <fprintf@plt>
  403ec2:	jmp    40422b <export_data_element_to_ascii@@Base+0xb0b>
  403ec7:	mov    edi,0x118
  403ecc:	add    rdi,QWORD PTR [rip+0xc10d]        # 40ffe0 <traverse_info@@Base-0x388>
  403ed3:	lea    rsi,[rsp+0x8]
  403ed8:	call   4034c0 <coda_cursor_read_int64@plt>
  403edd:	test   eax,eax
  403edf:	je     403ee8 <export_data_element_to_ascii@@Base+0x7c8>
  403ee1:	xor    eax,eax
  403ee3:	call   40a6f0 <handle_coda_error@@Base>
  403ee8:	mov    rdi,QWORD PTR [rsp+0x8]
  403eed:	lea    rbp,[rsp+0x10]
  403ef2:	mov    rsi,rbp
  403ef5:	call   403610 <coda_str64@plt>
  403efa:	jmp    4041ad <export_data_element_to_ascii@@Base+0xa8d>
  403eff:	mov    edi,0x118
  403f04:	add    rdi,QWORD PTR [rip+0xc0d5]        # 40ffe0 <traverse_info@@Base-0x388>
  403f0b:	lea    rsi,[rsp+0x10]
  403f10:	call   403370 <coda_cursor_get_string_length@plt>
  403f15:	test   eax,eax
  403f17:	je     403f20 <export_data_element_to_ascii@@Base+0x800>
  403f19:	xor    eax,eax
  403f1b:	call   40a6f0 <handle_coda_error@@Base>
  403f20:	mov    rbp,QWORD PTR [rsp+0x10]
  403f25:	add    rbp,0x1
  403f29:	mov    rdi,rbp
  403f2c:	call   4033f0 <malloc@plt>
  403f31:	mov    r14,rax
  403f34:	test   rax,rax
  403f37:	jne    403f6c <export_data_element_to_ascii@@Base+0x84c>
  403f39:	lea    rsi,[rip+0x811d]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  403f40:	lea    rcx,[rip+0x814b]        # 40c092 <_IO_stdin_used@@Base+0x92>
  403f47:	mov    edi,0xffffffff
  403f4c:	mov    r8d,0x7e
  403f52:	xor    eax,eax
  403f54:	mov    rdx,rbp
  403f57:	call   4030d0 <coda_set_error@plt>
  403f5c:	xor    eax,eax
  403f5e:	call   40a6f0 <handle_coda_error@@Base>
  403f63:	mov    rbp,QWORD PTR [rsp+0x10]
  403f68:	add    rbp,0x1
  403f6c:	mov    edi,0x118
  403f71:	add    rdi,QWORD PTR [rip+0xc068]        # 40ffe0 <traverse_info@@Base-0x388>
  403f78:	mov    rsi,r14
  403f7b:	mov    rdx,rbp
  403f7e:	call   403310 <coda_cursor_read_string@plt>
  403f83:	test   eax,eax
  403f85:	je     403f8e <export_data_element_to_ascii@@Base+0x86e>
  403f87:	xor    eax,eax
  403f89:	call   40a6f0 <handle_coda_error@@Base>
  403f8e:	lea    rax,[rip+0xd6cf]        # 411664 <show_quotes@@Base>
  403f95:	cmp    DWORD PTR [rax],0x0
  403f98:	je     404218 <export_data_element_to_ascii@@Base+0xaf8>
  403f9e:	lea    rsi,[rip+0x8b5b]        # 40cb00 <_IO_stdin_used@@Base+0xb00>
  403fa5:	xor    eax,eax
  403fa7:	mov    rdi,rbx
  403faa:	mov    rdx,r14
  403fad:	call   403300 <fprintf@plt>
  403fb2:	jmp    404223 <export_data_element_to_ascii@@Base+0xb03>
  403fb7:	mov    edi,0x118
  403fbc:	add    rdi,QWORD PTR [rip+0xc01d]        # 40ffe0 <traverse_info@@Base-0x388>
  403fc3:	lea    rsi,[rsp+0x10]
  403fc8:	call   403540 <coda_cursor_get_bit_size@plt>
  403fcd:	test   eax,eax
  403fcf:	je     403fd8 <export_data_element_to_ascii@@Base+0x8b8>
  403fd1:	xor    eax,eax
  403fd3:	call   40a6f0 <handle_coda_error@@Base>
  403fd8:	mov    r15,QWORD PTR [rsp+0x10]
  403fdd:	mov    rax,r15
  403fe0:	sar    rax,0x3
  403fe4:	xor    ebp,ebp
  403fe6:	test   r15b,0x7
  403fea:	setne  bpl
  403fee:	add    rbp,rax
  403ff1:	mov    rdi,rbp
  403ff4:	call   4033f0 <malloc@plt>
  403ff9:	mov    r14,rax
  403ffc:	test   rax,rax
  403fff:	jne    404030 <export_data_element_to_ascii@@Base+0x910>
  404001:	lea    rsi,[rip+0x8055]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  404008:	lea    rcx,[rip+0x8083]        # 40c092 <_IO_stdin_used@@Base+0x92>
  40400f:	mov    edi,0xffffffff
  404014:	mov    r8d,0xa3
  40401a:	xor    eax,eax
  40401c:	mov    rdx,rbp
  40401f:	call   4030d0 <coda_set_error@plt>
  404024:	xor    eax,eax
  404026:	call   40a6f0 <handle_coda_error@@Base>
  40402b:	mov    r15,QWORD PTR [rsp+0x10]
  404030:	mov    edi,0x118
  404035:	add    rdi,QWORD PTR [rip+0xbfa4]        # 40ffe0 <traverse_info@@Base-0x388>
  40403c:	xor    edx,edx
  40403e:	mov    rsi,r14
  404041:	mov    rcx,r15
  404044:	call   403600 <coda_cursor_read_bits@plt>
  404049:	test   eax,eax
  40404b:	je     404054 <export_data_element_to_ascii@@Base+0x934>
  40404d:	xor    eax,eax
  40404f:	call   40a6f0 <handle_coda_error@@Base>
  404054:	test   rbp,rbp
  404057:	jle    404223 <export_data_element_to_ascii@@Base+0xb03>
  40405d:	lea    r12,[rip+0x7fd8]        # 40c03c <_IO_stdin_used@@Base+0x3c>
  404064:	lea    r13,[rip+0x809e]        # 40c109 <_IO_stdin_used@@Base+0x109>
  40406b:	xor    r15d,r15d
  40406e:	jmp    4040b0 <export_data_element_to_ascii@@Base+0x990>
  404070:	cmp    dil,0x20
  404074:	jl     404089 <export_data_element_to_ascii@@Base+0x969>
  404076:	cmp    dil,0x7f
  40407a:	je     404089 <export_data_element_to_ascii@@Base+0x969>
  40407c:	mov    rsi,rbx
  40407f:	call   4032b0 <fputc@plt>
  404084:	jmp    404168 <export_data_element_to_ascii@@Base+0xa48>
  404089:	movzx  edx,dil
  40408d:	xor    eax,eax
  40408f:	mov    rdi,rbx
  404092:	lea    rsi,[rip+0x8076]        # 40c10f <_IO_stdin_used@@Base+0x10f>
  404099:	call   403300 <fprintf@plt>
  40409e:	jmp    404168 <export_data_element_to_ascii@@Base+0xa48>
  4040a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4040ad:	nop    DWORD PTR [rax]
  4040b0:	movsx  edi,BYTE PTR [r14+r15*1]
  4040b5:	lea    eax,[rdi-0x7]
  4040b8:	cmp    eax,0x6
  4040bb:	ja     4040dc <export_data_element_to_ascii@@Base+0x9bc>
  4040bd:	movsxd rax,DWORD PTR [r12+rax*4]
  4040c1:	add    rax,r12
  4040c4:	jmp    rax
  4040c6:	mov    esi,0x2
  4040cb:	mov    edx,0x1
  4040d0:	lea    rdi,[rip+0x8020]        # 40c0f7 <_IO_stdin_used@@Base+0xf7>
  4040d7:	jmp    404160 <export_data_element_to_ascii@@Base+0xa40>
  4040dc:	cmp    edi,0x5c
  4040df:	jne    404070 <export_data_element_to_ascii@@Base+0x950>
  4040e1:	mov    esi,0x2
  4040e6:	mov    edx,0x1
  4040eb:	lea    rdi,[rip+0x801a]        # 40c10c <_IO_stdin_used@@Base+0x10c>
  4040f2:	jmp    404160 <export_data_element_to_ascii@@Base+0xa40>
  4040f4:	mov    esi,0x2
  4040f9:	mov    edx,0x1
  4040fe:	lea    rdi,[rip+0x7ffe]        # 40c103 <_IO_stdin_used@@Base+0x103>
  404105:	jmp    404160 <export_data_element_to_ascii@@Base+0xa40>
  404107:	mov    esi,0x2
  40410c:	mov    edx,0x1
  404111:	lea    rdi,[rip+0x7fe5]        # 40c0fd <_IO_stdin_used@@Base+0xfd>
  404118:	jmp    404160 <export_data_element_to_ascii@@Base+0xa40>
  40411a:	mov    esi,0x2
  40411f:	mov    edx,0x1
  404124:	lea    rdi,[rip+0x7fcf]        # 40c0fa <_IO_stdin_used@@Base+0xfa>
  40412b:	jmp    404160 <export_data_element_to_ascii@@Base+0xa40>
  40412d:	mov    esi,0x2
  404132:	mov    edx,0x1
  404137:	lea    rdi,[rip+0x7fc2]        # 40c100 <_IO_stdin_used@@Base+0x100>
  40413e:	jmp    404160 <export_data_element_to_ascii@@Base+0xa40>
  404140:	mov    esi,0x2
  404145:	mov    edx,0x1
  40414a:	lea    rdi,[rip+0x7fb5]        # 40c106 <_IO_stdin_used@@Base+0x106>
  404151:	jmp    404160 <export_data_element_to_ascii@@Base+0xa40>
  404153:	mov    esi,0x2
  404158:	mov    edx,0x1
  40415d:	mov    rdi,r13
  404160:	mov    rcx,rbx
  404163:	call   4035a0 <fwrite@plt>
  404168:	add    r15,0x1
  40416c:	cmp    rbp,r15
  40416f:	jne    4040b0 <export_data_element_to_ascii@@Base+0x990>
  404175:	jmp    404223 <export_data_element_to_ascii@@Base+0xb03>
  40417a:	mov    edi,0x118
  40417f:	add    rdi,QWORD PTR [rip+0xbe5a]        # 40ffe0 <traverse_info@@Base-0x388>
  404186:	lea    rsi,[rsp+0x8]
  40418b:	call   403380 <coda_cursor_read_uint64@plt>
  404190:	test   eax,eax
  404192:	je     40419b <export_data_element_to_ascii@@Base+0xa7b>
  404194:	xor    eax,eax
  404196:	call   40a6f0 <handle_coda_error@@Base>
  40419b:	mov    rdi,QWORD PTR [rsp+0x8]
  4041a0:	lea    rbp,[rsp+0x10]
  4041a5:	mov    rsi,rbp
  4041a8:	call   403120 <coda_str64u@plt>
  4041ad:	mov    rdi,rbp
  4041b0:	mov    rsi,rbx
  4041b3:	call   403250 <fputs@plt>
  4041b8:	jmp    40422b <export_data_element_to_ascii@@Base+0xb0b>
  4041ba:	mov    edi,0x118
  4041bf:	add    rdi,QWORD PTR [rip+0xbe1a]        # 40ffe0 <traverse_info@@Base-0x388>
  4041c6:	lea    rsi,[rsp+0x10]
  4041cb:	call   403420 <coda_cursor_read_char@plt>
  4041d0:	test   eax,eax
  4041d2:	je     4041db <export_data_element_to_ascii@@Base+0xabb>
  4041d4:	xor    eax,eax
  4041d6:	call   40a6f0 <handle_coda_error@@Base>
  4041db:	lea    rax,[rip+0xd482]        # 411664 <show_quotes@@Base>
  4041e2:	cmp    DWORD PTR [rax],0x0
  4041e5:	movsx  edx,BYTE PTR [rsp+0x10]
  4041ea:	je     404247 <export_data_element_to_ascii@@Base+0xb27>
  4041ec:	lea    rsi,[rip+0x7e65]        # 40c058 <_IO_stdin_used@@Base+0x58>
  4041f3:	xor    eax,eax
  4041f5:	mov    rdi,rbx
  4041f8:	call   403300 <fprintf@plt>
  4041fd:	jmp    40422b <export_data_element_to_ascii@@Base+0xb0b>
  4041ff:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  404205:	lea    rsi,[rip+0x7f12]        # 40c11e <_IO_stdin_used@@Base+0x11e>
  40420c:	mov    al,0x1
  40420e:	mov    rdi,rbx
  404211:	call   403300 <fprintf@plt>
  404216:	jmp    40422b <export_data_element_to_ascii@@Base+0xb0b>
  404218:	mov    rdi,r14
  40421b:	mov    rsi,rbx
  40421e:	call   403250 <fputs@plt>
  404223:	mov    rdi,r14
  404226:	call   403070 <free@plt>
  40422b:	mov    edi,0xa
  404230:	mov    rsi,rbx
  404233:	call   4032b0 <fputc@plt>
  404238:	add    rsp,0x68
  40423c:	pop    rbx
  40423d:	pop    r12
  40423f:	pop    r13
  404241:	pop    r14
  404243:	pop    r15
  404245:	pop    rbp
  404246:	ret    
  404247:	mov    edi,edx
  404249:	mov    rsi,rbx
  40424c:	call   4032b0 <fputc@plt>
  404251:	jmp    40422b <export_data_element_to_ascii@@Base+0xb0b>
  404253:	lea    rdi,[rsp+0x10]
  404258:	jmp    4041b0 <export_data_element_to_ascii@@Base+0xa90>
  40425d:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  404263:	lea    rdi,[rip+0x7ef8]        # 40c162 <_IO_stdin_used@@Base+0x162>
  40426a:	lea    rsi,[rsp+0x10]
  40426f:	call   4030f0 <coda_time_double_to_string@plt>
  404274:	test   eax,eax
  404276:	je     403c65 <export_data_element_to_ascii@@Base+0x545>
  40427c:	xor    eax,eax
  40427e:	call   40a6f0 <handle_coda_error@@Base>
  404283:	jmp    403c65 <export_data_element_to_ascii@@Base+0x545>
  404288:	lea    rdi,[rip+0x80a5]        # 40c334 <_IO_stdin_used@@Base+0x334>
  40428f:	lea    rsi,[rip+0x7dfc]        # 40c092 <_IO_stdin_used@@Base+0x92>
  404296:	lea    rcx,[rip+0x7e87]        # 40c124 <_IO_stdin_used@@Base+0x124>
  40429d:	mov    edx,0x126
  4042a2:	call   403240 <__assert_fail@plt>
  4042a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004042b0 <print_debug_data@@Base>:
  4042b0:	push   rbp
  4042b1:	push   r15
  4042b3:	push   r14
  4042b5:	push   rbx
  4042b6:	sub    rsp,0x328
  4042bd:	mov    r14d,edx
  4042c0:	mov    rbx,rsi
  4042c3:	mov    rbp,rdi
  4042c6:	lea    r15,[rip+0xc09b]        # 410368 <traverse_info@@Base>
  4042cd:	mov    rdi,QWORD PTR [r15]
  4042d0:	test   rbp,rbp
  4042d3:	je     4042ee <print_debug_data@@Base+0x3e>
  4042d5:	lea    r8,[rsp+0x8]
  4042da:	mov    rsi,rbp
  4042dd:	mov    rdx,rbx
  4042e0:	mov    ecx,r14d
  4042e3:	call   4033c0 <coda_open_as@plt>
  4042e8:	test   eax,eax
  4042ea:	jne    4042fc <print_debug_data@@Base+0x4c>
  4042ec:	jmp    40434b <print_debug_data@@Base+0x9b>
  4042ee:	lea    rsi,[rsp+0x8]
  4042f3:	call   4030e0 <coda_open@plt>
  4042f8:	test   eax,eax
  4042fa:	je     40434b <print_debug_data@@Base+0x9b>
  4042fc:	call   4035d0 <coda_get_errno@plt>
  404301:	cmp    DWORD PTR [rax],0xffffffeb
  404304:	jne    404344 <print_debug_data@@Base+0x94>
  404306:	xor    edi,edi
  404308:	call   403130 <coda_set_option_use_mmap@plt>
  40430d:	mov    rdi,QWORD PTR [r15]
  404310:	test   rbp,rbp
  404313:	je     40432a <print_debug_data@@Base+0x7a>
  404315:	lea    r8,[rsp+0x8]
  40431a:	mov    rsi,rbp
  40431d:	mov    rdx,rbx
  404320:	mov    ecx,r14d
  404323:	call   4033c0 <coda_open_as@plt>
  404328:	jmp    404334 <print_debug_data@@Base+0x84>
  40432a:	lea    rsi,[rsp+0x8]
  40432f:	call   4030e0 <coda_open@plt>
  404334:	mov    ebx,eax
  404336:	mov    edi,0x1
  40433b:	call   403130 <coda_set_option_use_mmap@plt>
  404340:	test   ebx,ebx
  404342:	je     40434b <print_debug_data@@Base+0x9b>
  404344:	xor    eax,eax
  404346:	call   40a6f0 <handle_coda_error@@Base>
  40434b:	mov    rdi,QWORD PTR [rsp+0x8]
  404350:	lea    rsi,[rsp+0x14]
  404355:	call   403200 <coda_get_product_format@plt>
  40435a:	test   eax,eax
  40435c:	je     404365 <print_debug_data@@Base+0xb5>
  40435e:	xor    eax,eax
  404360:	call   40a6f0 <handle_coda_error@@Base>
  404365:	xor    eax,eax
  404367:	cmp    DWORD PTR [rsp+0x14],0x3
  40436c:	setb   al
  40436f:	mov    DWORD PTR [rip+0xbfb3],eax        # 410328 <__data_start@@Base+0x10>
  404375:	mov    rsi,QWORD PTR [rsp+0x8]
  40437a:	lea    rdi,[rsp+0x18]
  40437f:	call   403290 <coda_cursor_set_product@plt>
  404384:	test   eax,eax
  404386:	je     40438f <print_debug_data@@Base+0xdf>
  404388:	xor    eax,eax
  40438a:	call   40a6f0 <handle_coda_error@@Base>
  40438f:	lea    rax,[rip+0xd132]        # 4114c8 <starting_path@@Base>
  404396:	mov    rsi,QWORD PTR [rax]
  404399:	test   rsi,rsi
  40439c:	je     4043b3 <print_debug_data@@Base+0x103>
  40439e:	lea    rdi,[rsp+0x18]
  4043a3:	call   4034d0 <coda_cursor_goto@plt>
  4043a8:	test   eax,eax
  4043aa:	je     4043b3 <print_debug_data@@Base+0x103>
  4043ac:	xor    eax,eax
  4043ae:	call   40a6f0 <handle_coda_error@@Base>
  4043b3:	xor    edi,edi
  4043b5:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  4043ba:	lea    rdi,[rsp+0x18]
  4043bf:	xor    esi,esi
  4043c1:	call   4043e0 <print_debug_data@@Base+0x130>
  4043c6:	mov    rdi,QWORD PTR [rsp+0x8]
  4043cb:	call   4034b0 <coda_close@plt>
  4043d0:	add    rsp,0x328
  4043d7:	pop    rbx
  4043d8:	pop    r14
  4043da:	pop    r15
  4043dc:	pop    rbp
  4043dd:	ret    
  4043de:	xchg   ax,ax
  4043e0:	push   rbp
  4043e1:	push   r15
  4043e3:	push   r14
  4043e5:	push   r13
  4043e7:	push   r12
  4043e9:	push   rbx
  4043ea:	sub    rsp,0x398
  4043f1:	mov    QWORD PTR [rsp+0x18],rsi
  4043f6:	mov    r13,rdi
  4043f9:	lea    rsi,[rsp+0x78]
  4043fe:	call   4031d0 <coda_cursor_has_attributes@plt>
  404403:	test   eax,eax
  404405:	je     40440e <print_debug_data@@Base+0x15e>
  404407:	xor    eax,eax
  404409:	call   40a6f0 <handle_coda_error@@Base>
  40440e:	cmp    DWORD PTR [rsp+0x78],0x0
  404413:	je     404459 <print_debug_data@@Base+0x1a9>
  404415:	mov    rdi,r13
  404418:	call   403410 <coda_cursor_goto_attributes@plt>
  40441d:	test   eax,eax
  40441f:	je     404428 <print_debug_data@@Base+0x178>
  404421:	xor    eax,eax
  404423:	call   40a6f0 <handle_coda_error@@Base>
  404428:	lea    rdi,[rip+0x7de9]        # 40c218 <_IO_stdin_used@@Base+0x218>
  40442f:	xor    eax,eax
  404431:	call   405440 <print_debug_data@@Base+0x1190>
  404436:	add    DWORD PTR [rip+0xbefb],0x1        # 410338 <__bss_start@@Base+0x8>
  40443d:	mov    rdi,r13
  404440:	mov    rsi,QWORD PTR [rsp+0x18]
  404445:	call   4043e0 <print_debug_data@@Base+0x130>
  40444a:	add    DWORD PTR [rip+0xbee7],0xffffffff        # 410338 <__bss_start@@Base+0x8>
  404451:	mov    rdi,r13
  404454:	call   403320 <coda_cursor_goto_parent@plt>
  404459:	lea    rsi,[rsp+0x7c]
  40445e:	mov    rdi,r13
  404461:	call   4031e0 <coda_cursor_get_type_class@plt>
  404466:	test   eax,eax
  404468:	je     404471 <print_debug_data@@Base+0x1c1>
  40446a:	xor    eax,eax
  40446c:	call   40a6f0 <handle_coda_error@@Base>
  404471:	mov    eax,DWORD PTR [rsp+0x7c]
  404475:	cmp    rax,0x6
  404479:	ja     4053e5 <print_debug_data@@Base+0x1135>
  40447f:	lea    rcx,[rip+0x7d12]        # 40c198 <_IO_stdin_used@@Base+0x198>
  404486:	movsxd rax,DWORD PTR [rcx+rax*4]
  40448a:	add    rax,rcx
  40448d:	jmp    rax
  40448f:	lea    rsi,[rsp+0x8]
  404494:	mov    rdi,r13
  404497:	call   4034a0 <coda_cursor_has_ascii_content@plt>
  40449c:	test   eax,eax
  40449e:	je     4044a7 <print_debug_data@@Base+0x1f7>
  4044a0:	xor    eax,eax
  4044a2:	call   40a6f0 <handle_coda_error@@Base>
  4044a7:	cmp    DWORD PTR [rsp+0x8],0x0
  4044ac:	je     404574 <print_debug_data@@Base+0x2c4>
  4044b2:	lea    rsi,[rsp+0x80]
  4044ba:	mov    rdi,r13
  4044bd:	call   403370 <coda_cursor_get_string_length@plt>
  4044c2:	test   eax,eax
  4044c4:	je     4044cd <print_debug_data@@Base+0x21d>
  4044c6:	xor    eax,eax
  4044c8:	call   40a6f0 <handle_coda_error@@Base>
  4044cd:	mov    rbp,QWORD PTR [rsp+0x80]
  4044d5:	add    rbp,0x1
  4044d9:	mov    rdi,rbp
  4044dc:	call   4033f0 <malloc@plt>
  4044e1:	mov    rbx,rax
  4044e4:	test   rax,rax
  4044e7:	jne    40451f <print_debug_data@@Base+0x26f>
  4044e9:	lea    rsi,[rip+0x7b6d]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  4044f0:	lea    rcx,[rip+0x7d3c]        # 40c233 <_IO_stdin_used@@Base+0x233>
  4044f7:	mov    edi,0xffffffff
  4044fc:	mov    r8d,0x19a
  404502:	xor    eax,eax
  404504:	mov    rdx,rbp
  404507:	call   4030d0 <coda_set_error@plt>
  40450c:	xor    eax,eax
  40450e:	call   40a6f0 <handle_coda_error@@Base>
  404513:	mov    rbp,QWORD PTR [rsp+0x80]
  40451b:	add    rbp,0x1
  40451f:	mov    rdi,r13
  404522:	mov    rsi,rbx
  404525:	mov    rdx,rbp
  404528:	call   403310 <coda_cursor_read_string@plt>
  40452d:	test   eax,eax
  40452f:	je     404538 <print_debug_data@@Base+0x288>
  404531:	xor    eax,eax
  404533:	call   40a6f0 <handle_coda_error@@Base>
  404538:	lea    rdi,[rip+0x848a]        # 40c9c9 <_IO_stdin_used@@Base+0x9c9>
  40453f:	xor    eax,eax
  404541:	call   405440 <print_debug_data@@Base+0x1190>
  404546:	mov    rsi,QWORD PTR [rsp+0x80]
  40454e:	mov    rdi,rbx
  404551:	call   405610 <print_debug_data@@Base+0x1360>
  404556:	mov    rsi,QWORD PTR [rsp+0x80]
  40455e:	lea    rdi,[rip+0x7d33]        # 40c298 <_IO_stdin_used@@Base+0x298>
  404565:	xor    eax,eax
  404567:	call   405560 <print_debug_data@@Base+0x12b0>
  40456c:	mov    rdi,rbx
  40456f:	call   403070 <free@plt>
  404574:	lea    rsi,[rsp+0x50]
  404579:	mov    rdi,r13
  40457c:	call   4032e0 <coda_cursor_get_read_type@plt>
  404581:	test   eax,eax
  404583:	je     40458c <print_debug_data@@Base+0x2dc>
  404585:	xor    eax,eax
  404587:	call   40a6f0 <handle_coda_error@@Base>
  40458c:	mov    eax,DWORD PTR [rsp+0x50]
  404590:	add    eax,0x1
  404593:	cmp    eax,0xd
  404596:	ja     4053e5 <print_debug_data@@Base+0x1135>
  40459c:	lea    rcx,[rip+0x7c21]        # 40c1c4 <_IO_stdin_used@@Base+0x1c4>
  4045a3:	movsxd rax,DWORD PTR [rcx+rax*4]
  4045a7:	add    rax,rcx
  4045aa:	jmp    rax
  4045ac:	cmp    DWORD PTR [rsp+0x8],0x0
  4045b1:	jne    4053e5 <print_debug_data@@Base+0x1135>
  4045b7:	lea    rdi,[rip+0x7d03]        # 40c2c1 <_IO_stdin_used@@Base+0x2c1>
  4045be:	lea    rsi,[rip+0x7c6e]        # 40c233 <_IO_stdin_used@@Base+0x233>
  4045c5:	lea    rcx,[rip+0x7d07]        # 40c2d3 <_IO_stdin_used@@Base+0x2d3>
  4045cc:	mov    edx,0x224
  4045d1:	call   403240 <__assert_fail@plt>
  4045d6:	lea    rsi,[rsp+0x20]
  4045db:	mov    rdi,r13
  4045de:	call   403110 <coda_cursor_get_num_elements@plt>
  4045e3:	test   eax,eax
  4045e5:	je     4045ee <print_debug_data@@Base+0x33e>
  4045e7:	xor    eax,eax
  4045e9:	call   40a6f0 <handle_coda_error@@Base>
  4045ee:	cmp    QWORD PTR [rsp+0x20],0x0
  4045f4:	jle    4053e5 <print_debug_data@@Base+0x1135>
  4045fa:	lea    rsi,[rsp+0x50]
  4045ff:	mov    rdi,r13
  404602:	call   403180 <coda_cursor_get_type@plt>
  404607:	test   eax,eax
  404609:	je     404612 <print_debug_data@@Base+0x362>
  40460b:	xor    eax,eax
  40460d:	call   40a6f0 <handle_coda_error@@Base>
  404612:	mov    rdi,QWORD PTR [rsp+0x50]
  404617:	lea    rsi,[rsp+0x74]
  40461c:	call   403440 <coda_type_get_record_union_status@plt>
  404621:	test   eax,eax
  404623:	je     40462c <print_debug_data@@Base+0x37c>
  404625:	xor    eax,eax
  404627:	call   40a6f0 <handle_coda_error@@Base>
  40462c:	cmp    DWORD PTR [rsp+0x74],0x0
  404631:	je     404a90 <print_debug_data@@Base+0x7e0>
  404637:	lea    rsi,[rsp+0x8]
  40463c:	mov    rdi,r13
  40463f:	call   403570 <coda_cursor_get_available_union_field_index@plt>
  404644:	test   eax,eax
  404646:	je     40464f <print_debug_data@@Base+0x39f>
  404648:	xor    eax,eax
  40464a:	call   40a6f0 <handle_coda_error@@Base>
  40464f:	mov    rdi,QWORD PTR [rsp+0x50]
  404654:	mov    rsi,QWORD PTR [rsp+0x8]
  404659:	lea    rdx,[rsp+0x10]
  40465e:	call   4035f0 <coda_type_get_record_field_name@plt>
  404663:	test   eax,eax
  404665:	je     40466e <print_debug_data@@Base+0x3be>
  404667:	xor    eax,eax
  404669:	call   40a6f0 <handle_coda_error@@Base>
  40466e:	mov    rsi,QWORD PTR [rsp+0x8]
  404673:	mov    rdi,r13
  404676:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  40467b:	test   eax,eax
  40467d:	je     404686 <print_debug_data@@Base+0x3d6>
  40467f:	xor    eax,eax
  404681:	call   40a6f0 <handle_coda_error@@Base>
  404686:	mov    rsi,QWORD PTR [rsp+0x10]
  40468b:	lea    rdi,[rip+0x8468]        # 40cafa <_IO_stdin_used@@Base+0xafa>
  404692:	xor    eax,eax
  404694:	call   405440 <print_debug_data@@Base+0x1190>
  404699:	cmp    DWORD PTR [rip+0xbc88],0x0        # 410328 <__data_start@@Base+0x10>
  4046a0:	je     404702 <print_debug_data@@Base+0x452>
  4046a2:	lea    rsi,[rsp+0x48]
  4046a7:	mov    rdi,r13
  4046aa:	call   4035b0 <coda_cursor_get_file_bit_offset@plt>
  4046af:	test   eax,eax
  4046b1:	je     4046ba <print_debug_data@@Base+0x40a>
  4046b3:	xor    eax,eax
  4046b5:	call   40a6f0 <handle_coda_error@@Base>
  4046ba:	mov    rdi,QWORD PTR [rsp+0x48]
  4046bf:	test   rdi,rdi
  4046c2:	js     404702 <print_debug_data@@Base+0x452>
  4046c4:	shr    rdi,0x3
  4046c8:	lea    rbx,[rsp+0x80]
  4046d0:	mov    rsi,rbx
  4046d3:	call   403610 <coda_str64@plt>
  4046d8:	lea    rdi,[rip+0x7b47]        # 40c226 <_IO_stdin_used@@Base+0x226>
  4046df:	xor    eax,eax
  4046e1:	mov    rsi,rbx
  4046e4:	call   405560 <print_debug_data@@Base+0x12b0>
  4046e9:	mov    rsi,QWORD PTR [rsp+0x48]
  4046ee:	and    rsi,0x7
  4046f2:	je     404702 <print_debug_data@@Base+0x452>
  4046f4:	lea    rdi,[rip+0x7b2f]        # 40c22a <_IO_stdin_used@@Base+0x22a>
  4046fb:	xor    eax,eax
  4046fd:	call   405560 <print_debug_data@@Base+0x12b0>
  404702:	lea    rdi,[rip+0x8704]        # 40ce0d <_IO_stdin_used@@Base+0xe0d>
  404709:	xor    eax,eax
  40470b:	call   405560 <print_debug_data@@Base+0x12b0>
  404710:	add    DWORD PTR [rip+0xbc21],0x1        # 410338 <__bss_start@@Base+0x8>
  404717:	lea    rax,[rip+0xbc0e]        # 41032c <max_depth@@Base>
  40471e:	mov    eax,DWORD PTR [rax]
  404720:	test   eax,eax
  404722:	js     404ce1 <print_debug_data@@Base+0xa31>
  404728:	cmp    eax,DWORD PTR [rsp+0x18]
  40472c:	jg     404ce1 <print_debug_data@@Base+0xa31>
  404732:	lea    rdi,[rip+0x7af5]        # 40c22e <_IO_stdin_used@@Base+0x22e>
  404739:	xor    eax,eax
  40473b:	call   405440 <print_debug_data@@Base+0x1190>
  404740:	add    DWORD PTR [rip+0xbbf1],0xffffffff        # 410338 <__bss_start@@Base+0x8>
  404747:	jmp    4053dd <print_debug_data@@Base+0x112d>
  40474c:	lea    rsi,[rsp+0x10]
  404751:	lea    rdx,[rsp+0x80]
  404759:	mov    rdi,r13
  40475c:	call   403490 <coda_cursor_get_array_dim@plt>
  404761:	test   eax,eax
  404763:	je     40476c <print_debug_data@@Base+0x4bc>
  404765:	xor    eax,eax
  404767:	call   40a6f0 <handle_coda_error@@Base>
  40476c:	mov    ebp,DWORD PTR [rsp+0x10]
  404770:	test   ebp,ebp
  404772:	js     4053e5 <print_debug_data@@Base+0x1135>
  404778:	test   ebp,ebp
  40477a:	je     404c14 <print_debug_data@@Base+0x964>
  404780:	lea    rdx,[rbp*4+0x0]
  404788:	lea    rdi,[rsp+0x20]
  40478d:	xor    ebx,ebx
  40478f:	xor    esi,esi
  404791:	call   403280 <memset@plt>
  404796:	cmp    ebp,0x10
  404799:	jae    404cfd <print_debug_data@@Base+0xa4d>
  40479f:	mov    r12d,0x1
  4047a5:	jmp    4051f0 <print_debug_data@@Base+0xf40>
  4047aa:	lea    rsi,[rsp+0x50]
  4047af:	mov    rdi,r13
  4047b2:	call   403260 <coda_cursor_get_special_type@plt>
  4047b7:	test   eax,eax
  4047b9:	je     4047c2 <print_debug_data@@Base+0x512>
  4047bb:	xor    eax,eax
  4047bd:	call   40a6f0 <handle_coda_error@@Base>
  4047c2:	cmp    DWORD PTR [rsp+0x50],0x0
  4047c7:	je     4048af <print_debug_data@@Base+0x5ff>
  4047cd:	lea    rbx,[rsp+0x80]
  4047d5:	mov    edx,0x310
  4047da:	mov    rdi,rbx
  4047dd:	mov    rsi,r13
  4047e0:	call   403350 <memcpy@plt>
  4047e5:	mov    rdi,rbx
  4047e8:	call   403560 <coda_cursor_use_base_type_of_special_type@plt>
  4047ed:	test   eax,eax
  4047ef:	je     4047f8 <print_debug_data@@Base+0x548>
  4047f1:	xor    eax,eax
  4047f3:	call   40a6f0 <handle_coda_error@@Base>
  4047f8:	lea    rdi,[rsp+0x80]
  404800:	mov    rsi,QWORD PTR [rsp+0x18]
  404805:	call   4043e0 <print_debug_data@@Base+0x130>
  40480a:	mov    edi,DWORD PTR [rsp+0x50]
  40480e:	jmp    4048b1 <print_debug_data@@Base+0x601>
  404813:	lea    rsi,[rsp+0x80]
  40481b:	mov    rdi,r13
  40481e:	call   403150 <coda_cursor_read_uint32@plt>
  404823:	test   eax,eax
  404825:	je     40482e <print_debug_data@@Base+0x57e>
  404827:	xor    eax,eax
  404829:	call   40a6f0 <handle_coda_error@@Base>
  40482e:	mov    esi,DWORD PTR [rsp+0x80]
  404835:	lea    rdi,[rip+0x7a7a]        # 40c2b6 <_IO_stdin_used@@Base+0x2b6>
  40483c:	jmp    404868 <print_debug_data@@Base+0x5b8>
  40483e:	lea    rsi,[rsp+0x80]
  404846:	mov    rdi,r13
  404849:	call   403590 <coda_cursor_read_int32@plt>
  40484e:	test   eax,eax
  404850:	je     404859 <print_debug_data@@Base+0x5a9>
  404852:	xor    eax,eax
  404854:	call   40a6f0 <handle_coda_error@@Base>
  404859:	movsxd rsi,DWORD PTR [rsp+0x80]
  404861:	lea    rdi,[rip+0x7a49]        # 40c2b1 <_IO_stdin_used@@Base+0x2b1>
  404868:	xor    eax,eax
  40486a:	call   405440 <print_debug_data@@Base+0x1190>
  40486f:	jmp    4053e5 <print_debug_data@@Base+0x1135>
  404874:	lea    rsi,[rsp+0x80]
  40487c:	mov    rdi,r13
  40487f:	call   403390 <coda_cursor_read_double@plt>
  404884:	test   eax,eax
  404886:	je     40488f <print_debug_data@@Base+0x5df>
  404888:	xor    eax,eax
  40488a:	call   40a6f0 <handle_coda_error@@Base>
  40488f:	cmp    DWORD PTR [rsp+0x50],0x8
  404894:	vmovq  xmm0,QWORD PTR [rsp+0x80]
  40489d:	jne    40492a <print_debug_data@@Base+0x67a>
  4048a3:	lea    rdi,[rip+0x7a11]        # 40c2bb <_IO_stdin_used@@Base+0x2bb>
  4048aa:	jmp    404931 <print_debug_data@@Base+0x681>
  4048af:	xor    edi,edi
  4048b1:	call   403040 <coda_type_get_special_type_name@plt>
  4048b6:	mov    rcx,rax
  4048b9:	lea    rdi,[rip+0x7a37]        # 40c2f7 <_IO_stdin_used@@Base+0x2f7>
  4048c0:	xor    eax,eax
  4048c2:	mov    rsi,rcx
  4048c5:	call   405440 <print_debug_data@@Base+0x1190>
  4048ca:	mov    eax,DWORD PTR [rsp+0x50]
  4048ce:	cmp    rax,0x3
  4048d2:	ja     4053e5 <print_debug_data@@Base+0x1135>
  4048d8:	lea    rcx,[rip+0x78d5]        # 40c1b4 <_IO_stdin_used@@Base+0x1b4>
  4048df:	movsxd rax,DWORD PTR [rcx+rax*4]
  4048e3:	add    rax,rcx
  4048e6:	jmp    rax
  4048e8:	lea    rdi,[rip+0x851e]        # 40ce0d <_IO_stdin_used@@Base+0xe0d>
  4048ef:	xor    eax,eax
  4048f1:	call   405560 <print_debug_data@@Base+0x12b0>
  4048f6:	jmp    4053e5 <print_debug_data@@Base+0x1135>
  4048fb:	lea    rsi,[rsp+0x20]
  404900:	mov    rdi,r13
  404903:	call   4034c0 <coda_cursor_read_int64@plt>
  404908:	test   eax,eax
  40490a:	je     404913 <print_debug_data@@Base+0x663>
  40490c:	xor    eax,eax
  40490e:	call   40a6f0 <handle_coda_error@@Base>
  404913:	mov    rdi,QWORD PTR [rsp+0x20]
  404918:	lea    rbx,[rsp+0x80]
  404920:	mov    rsi,rbx
  404923:	call   403610 <coda_str64@plt>
  404928:	jmp    40496a <print_debug_data@@Base+0x6ba>
  40492a:	lea    rdi,[rip+0x79cc]        # 40c2fd <_IO_stdin_used@@Base+0x2fd>
  404931:	mov    al,0x1
  404933:	call   405440 <print_debug_data@@Base+0x1190>
  404938:	jmp    4053e5 <print_debug_data@@Base+0x1135>
  40493d:	lea    rsi,[rsp+0x20]
  404942:	mov    rdi,r13
  404945:	call   403380 <coda_cursor_read_uint64@plt>
  40494a:	test   eax,eax
  40494c:	je     404955 <print_debug_data@@Base+0x6a5>
  40494e:	xor    eax,eax
  404950:	call   40a6f0 <handle_coda_error@@Base>
  404955:	mov    rdi,QWORD PTR [rsp+0x20]
  40495a:	lea    rbx,[rsp+0x80]
  404962:	mov    rsi,rbx
  404965:	call   403120 <coda_str64u@plt>
  40496a:	lea    rdi,[rip+0x82f6]        # 40cc67 <_IO_stdin_used@@Base+0xc67>
  404971:	xor    eax,eax
  404973:	mov    rsi,rbx
  404976:	call   405440 <print_debug_data@@Base+0x1190>
  40497b:	jmp    4053e5 <print_debug_data@@Base+0x1135>
  404980:	lea    rsi,[rsp+0x20]
  404985:	mov    rdi,r13
  404988:	call   403540 <coda_cursor_get_bit_size@plt>
  40498d:	test   eax,eax
  40498f:	je     404998 <print_debug_data@@Base+0x6e8>
  404991:	xor    eax,eax
  404993:	call   40a6f0 <handle_coda_error@@Base>
  404998:	mov    rbx,QWORD PTR [rsp+0x20]
  40499d:	mov    rbp,rbx
  4049a0:	sar    rbp,0x3
  4049a4:	mov    eax,ebx
  4049a6:	and    eax,0x7
  4049a9:	cmp    rax,0x1
  4049ad:	sbb    rbp,0xffffffffffffffff
  4049b1:	mov    rdi,rbp
  4049b4:	call   4033f0 <malloc@plt>
  4049b9:	mov    r14,rax
  4049bc:	test   rax,rax
  4049bf:	jne    4049f0 <print_debug_data@@Base+0x740>
  4049c1:	lea    rsi,[rip+0x7695]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  4049c8:	lea    rcx,[rip+0x7864]        # 40c233 <_IO_stdin_used@@Base+0x233>
  4049cf:	mov    edi,0xffffffff
  4049d4:	mov    r8d,0x1bf
  4049da:	xor    eax,eax
  4049dc:	mov    rdx,rbp
  4049df:	call   4030d0 <coda_set_error@plt>
  4049e4:	xor    eax,eax
  4049e6:	call   40a6f0 <handle_coda_error@@Base>
  4049eb:	mov    rbx,QWORD PTR [rsp+0x20]
  4049f0:	xor    edx,edx
  4049f2:	mov    rdi,r13
  4049f5:	mov    rsi,r14
  4049f8:	mov    rcx,rbx
  4049fb:	call   403600 <coda_cursor_read_bits@plt>
  404a00:	test   eax,eax
  404a02:	je     404a0b <print_debug_data@@Base+0x75b>
  404a04:	xor    eax,eax
  404a06:	call   40a6f0 <handle_coda_error@@Base>
  404a0b:	lea    rdi,[rip+0x7fb7]        # 40c9c9 <_IO_stdin_used@@Base+0x9c9>
  404a12:	xor    eax,eax
  404a14:	call   405440 <print_debug_data@@Base+0x1190>
  404a19:	mov    rdi,r14
  404a1c:	mov    rsi,rbp
  404a1f:	call   405610 <print_debug_data@@Base+0x1360>
  404a24:	lea    rdi,[rip+0x787d]        # 40c2a8 <_IO_stdin_used@@Base+0x2a8>
  404a2b:	xor    eax,eax
  404a2d:	call   405560 <print_debug_data@@Base+0x12b0>
  404a32:	mov    rdi,QWORD PTR [rsp+0x20]
  404a37:	sar    rdi,0x3
  404a3b:	lea    rbx,[rsp+0x80]
  404a43:	mov    rsi,rbx
  404a46:	call   403610 <coda_str64@plt>
  404a4b:	lea    rdi,[rip+0x806c]        # 40cabe <_IO_stdin_used@@Base+0xabe>
  404a52:	xor    eax,eax
  404a54:	mov    rsi,rbx
  404a57:	call   405560 <print_debug_data@@Base+0x12b0>
  404a5c:	mov    rsi,QWORD PTR [rsp+0x20]
  404a61:	and    rsi,0x7
  404a65:	je     404a75 <print_debug_data@@Base+0x7c5>
  404a67:	lea    rdi,[rip+0x77bc]        # 40c22a <_IO_stdin_used@@Base+0x22a>
  404a6e:	xor    eax,eax
  404a70:	call   405560 <print_debug_data@@Base+0x12b0>
  404a75:	lea    rdi,[rip+0x7829]        # 40c2a5 <_IO_stdin_used@@Base+0x2a5>
  404a7c:	xor    eax,eax
  404a7e:	call   405560 <print_debug_data@@Base+0x12b0>
  404a83:	mov    rdi,r14
  404a86:	call   403070 <free@plt>
  404a8b:	jmp    4053e5 <print_debug_data@@Base+0x1135>
  404a90:	mov    rdi,r13
  404a93:	call   4032a0 <coda_cursor_goto_first_record_field@plt>
  404a98:	test   eax,eax
  404a9a:	je     404aa3 <print_debug_data@@Base+0x7f3>
  404a9c:	xor    eax,eax
  404a9e:	call   40a6f0 <handle_coda_error@@Base>
  404aa3:	mov    QWORD PTR [rsp+0x8],0x0
  404aac:	cmp    QWORD PTR [rsp+0x20],0x0
  404ab2:	jle    4053dd <print_debug_data@@Base+0x112d>
  404ab8:	mov    rax,QWORD PTR [rsp+0x18]
  404abd:	lea    eax,[rax+0x1]
  404ac0:	mov    DWORD PTR [rsp+0x68],eax
  404ac4:	lea    r15,[rsp+0x10]
  404ac9:	lea    r14,[rip+0x802a]        # 40cafa <_IO_stdin_used@@Base+0xafa>
  404ad0:	lea    r12,[rip+0x8336]        # 40ce0d <_IO_stdin_used@@Base+0xe0d>
  404ad7:	lea    rbp,[rip+0xb84e]        # 41032c <max_depth@@Base>
  404ade:	xor    esi,esi
  404ae0:	mov    rdi,QWORD PTR [rsp+0x50]
  404ae5:	mov    rdx,r15
  404ae8:	call   4035f0 <coda_type_get_record_field_name@plt>
  404aed:	test   eax,eax
  404aef:	je     404af8 <print_debug_data@@Base+0x848>
  404af1:	xor    eax,eax
  404af3:	call   40a6f0 <handle_coda_error@@Base>
  404af8:	mov    rsi,QWORD PTR [rsp+0x10]
  404afd:	xor    eax,eax
  404aff:	mov    rdi,r14
  404b02:	call   405440 <print_debug_data@@Base+0x1190>
  404b07:	cmp    DWORD PTR [rip+0xb81a],0x0        # 410328 <__data_start@@Base+0x10>
  404b0e:	je     404b88 <print_debug_data@@Base+0x8d8>
  404b10:	mov    rdi,r13
  404b13:	lea    rsi,[rsp+0x48]
  404b18:	call   4035b0 <coda_cursor_get_file_bit_offset@plt>
  404b1d:	test   eax,eax
  404b1f:	je     404b28 <print_debug_data@@Base+0x878>
  404b21:	xor    eax,eax
  404b23:	call   40a6f0 <handle_coda_error@@Base>
  404b28:	mov    rdi,QWORD PTR [rsp+0x48]
  404b2d:	test   rdi,rdi
  404b30:	js     404b88 <print_debug_data@@Base+0x8d8>
  404b32:	mov    rax,r15
  404b35:	mov    r15,rbp
  404b38:	mov    rbx,r14
  404b3b:	mov    rbp,rax
  404b3e:	shr    rdi,0x3
  404b42:	lea    r14,[rsp+0x80]
  404b4a:	mov    rsi,r14
  404b4d:	call   403610 <coda_str64@plt>
  404b52:	xor    eax,eax
  404b54:	lea    rdi,[rip+0x76cb]        # 40c226 <_IO_stdin_used@@Base+0x226>
  404b5b:	mov    rsi,r14
  404b5e:	call   405560 <print_debug_data@@Base+0x12b0>
  404b63:	mov    rsi,QWORD PTR [rsp+0x48]
  404b68:	and    rsi,0x7
  404b6c:	je     404b7c <print_debug_data@@Base+0x8cc>
  404b6e:	xor    eax,eax
  404b70:	lea    rdi,[rip+0x76b3]        # 40c22a <_IO_stdin_used@@Base+0x22a>
  404b77:	call   405560 <print_debug_data@@Base+0x12b0>
  404b7c:	mov    rax,rbp
  404b7f:	mov    r14,rbx
  404b82:	mov    rbp,r15
  404b85:	mov    r15,rax
  404b88:	xor    eax,eax
  404b8a:	mov    rdi,r12
  404b8d:	call   405560 <print_debug_data@@Base+0x12b0>
  404b92:	add    DWORD PTR [rip+0xb79f],0x1        # 410338 <__bss_start@@Base+0x8>
  404b99:	mov    eax,DWORD PTR [rbp+0x0]
  404b9c:	test   eax,eax
  404b9e:	js     404bc0 <print_debug_data@@Base+0x910>
  404ba0:	cmp    eax,DWORD PTR [rsp+0x18]
  404ba4:	jg     404bc0 <print_debug_data@@Base+0x910>
  404ba6:	xor    eax,eax
  404ba8:	lea    rdi,[rip+0x767f]        # 40c22e <_IO_stdin_used@@Base+0x22e>
  404baf:	call   405440 <print_debug_data@@Base+0x1190>
  404bb4:	jmp    404bcc <print_debug_data@@Base+0x91c>
  404bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bc0:	mov    rdi,r13
  404bc3:	mov    esi,DWORD PTR [rsp+0x68]
  404bc7:	call   4043e0 <print_debug_data@@Base+0x130>
  404bcc:	add    DWORD PTR [rip+0xb765],0xffffffff        # 410338 <__bss_start@@Base+0x8>
  404bd3:	mov    rax,QWORD PTR [rsp+0x20]
  404bd8:	add    rax,0xffffffffffffffff
  404bdc:	cmp    QWORD PTR [rsp+0x8],rax
  404be1:	jge    404bf6 <print_debug_data@@Base+0x946>
  404be3:	mov    rdi,r13
  404be6:	call   403500 <coda_cursor_goto_next_record_field@plt>
  404beb:	test   eax,eax
  404bed:	je     404bf6 <print_debug_data@@Base+0x946>
  404bef:	xor    eax,eax
  404bf1:	call   40a6f0 <handle_coda_error@@Base>
  404bf6:	mov    rsi,QWORD PTR [rsp+0x8]
  404bfb:	add    rsi,0x1
  404bff:	mov    QWORD PTR [rsp+0x8],rsi
  404c04:	cmp    rsi,QWORD PTR [rsp+0x20]
  404c09:	jl     404ae0 <print_debug_data@@Base+0x830>
  404c0f:	jmp    4053dd <print_debug_data@@Base+0x112d>
  404c14:	mov    r12d,0x1
  404c1a:	jmp    40520b <print_debug_data@@Base+0xf5b>
  404c1f:	lea    rsi,[rsp+0x20]
  404c24:	mov    rdi,r13
  404c27:	call   403390 <coda_cursor_read_double@plt>
  404c2c:	test   eax,eax
  404c2e:	je     404c37 <print_debug_data@@Base+0x987>
  404c30:	xor    eax,eax
  404c32:	call   40a6f0 <handle_coda_error@@Base>
  404c37:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  404c3d:	call   4033a0 <coda_isNaN@plt>
  404c42:	test   eax,eax
  404c44:	jne    404c59 <print_debug_data@@Base+0x9a9>
  404c46:	vmovsd xmm0,QWORD PTR [rsp+0x20]
  404c4c:	call   403190 <coda_isInf@plt>
  404c51:	test   eax,eax
  404c53:	je     4053fa <print_debug_data@@Base+0x114a>
  404c59:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  404c5f:	lea    rdi,[rip+0x7696]        # 40c2fc <_IO_stdin_used@@Base+0x2fc>
  404c66:	jmp    404cd5 <print_debug_data@@Base+0xa25>
  404c68:	lea    rsi,[rsp+0x80]
  404c70:	lea    rdx,[rsp+0x20]
  404c75:	mov    rdi,r13
  404c78:	call   403450 <coda_cursor_read_complex_double_split@plt>
  404c7d:	test   eax,eax
  404c7f:	je     404c88 <print_debug_data@@Base+0x9d8>
  404c81:	xor    eax,eax
  404c83:	call   40a6f0 <handle_coda_error@@Base>
  404c88:	vmovq  xmm0,QWORD PTR [rsp+0x80]
  404c91:	vmovq  xmm1,QWORD PTR [rsp+0x20]
  404c97:	lea    rdi,[rip+0x7681]        # 40c31f <_IO_stdin_used@@Base+0x31f>
  404c9e:	mov    al,0x2
  404ca0:	call   405560 <print_debug_data@@Base+0x12b0>
  404ca5:	jmp    4053e5 <print_debug_data@@Base+0x1135>
  404caa:	lea    rsi,[rsp+0x80]
  404cb2:	mov    rdi,r13
  404cb5:	call   403390 <coda_cursor_read_double@plt>
  404cba:	test   eax,eax
  404cbc:	je     404cc5 <print_debug_data@@Base+0xa15>
  404cbe:	xor    eax,eax
  404cc0:	call   40a6f0 <handle_coda_error@@Base>
  404cc5:	vmovq  xmm0,QWORD PTR [rsp+0x80]
  404cce:	lea    rdi,[rip+0x7628]        # 40c2fd <_IO_stdin_used@@Base+0x2fd>
  404cd5:	mov    al,0x1
  404cd7:	call   405560 <print_debug_data@@Base+0x12b0>
  404cdc:	jmp    4053e5 <print_debug_data@@Base+0x1135>
  404ce1:	mov    rsi,QWORD PTR [rsp+0x18]
  404ce6:	add    esi,0x1
  404ce9:	mov    rdi,r13
  404cec:	call   4043e0 <print_debug_data@@Base+0x130>
  404cf1:	add    DWORD PTR [rip+0xb640],0xffffffff        # 410338 <__bss_start@@Base+0x8>
  404cf8:	jmp    4053dd <print_debug_data@@Base+0x112d>
  404cfd:	mov    ebx,ebp
  404cff:	and    ebx,0xfffffff0
  404d02:	lea    rdx,[rbx-0x10]
  404d06:	mov    rcx,rdx
  404d09:	shr    rcx,0x4
  404d0d:	add    rcx,0x1
  404d11:	mov    eax,ecx
  404d13:	and    eax,0x3
  404d16:	cmp    rdx,0x30
  404d1a:	jae    404d41 <print_debug_data@@Base+0xa91>
  404d1c:	vpbroadcastq ymm0,QWORD PTR [rip+0x746b]        # 40c190 <_IO_stdin_used@@Base+0x190>
  404d25:	xor    ecx,ecx
  404d27:	vmovdqa ymm3,ymm0
  404d2b:	vmovdqa ymm2,ymm0
  404d2f:	vmovdqa ymm1,ymm0
  404d33:	test   rax,rax
  404d36:	jne    40505b <print_debug_data@@Base+0xdab>
  404d3c:	jmp    405122 <print_debug_data@@Base+0xe72>
  404d41:	mov    edx,0x1
  404d46:	sub    rdx,rcx
  404d49:	add    rdx,rax
  404d4c:	add    rdx,0xffffffffffffffff
  404d50:	vpbroadcastq ymm0,QWORD PTR [rip+0x7437]        # 40c190 <_IO_stdin_used@@Base+0x190>
  404d59:	xor    ecx,ecx
  404d5b:	vmovdqa ymm3,ymm0
  404d5f:	vmovdqa ymm2,ymm0
  404d63:	vmovdqa ymm1,ymm0
  404d67:	nop    WORD PTR [rax+rax*1+0x0]
  404d70:	vmovdqu ymm4,YMMWORD PTR [rsp+rcx*8+0x80]
  404d79:	vmovdqu ymm5,YMMWORD PTR [rsp+rcx*8+0xa0]
  404d82:	vmovdqu ymm6,YMMWORD PTR [rsp+rcx*8+0xc0]
  404d8b:	vmovdqu ymm7,YMMWORD PTR [rsp+rcx*8+0xe0]
  404d94:	vpsrlq ymm8,ymm0,0x20
  404d99:	vpmuludq ymm8,ymm4,ymm8
  404d9e:	vpsrlq ymm9,ymm4,0x20
  404da3:	vpmuludq ymm9,ymm9,ymm0
  404da7:	vpaddq ymm8,ymm8,ymm9
  404dac:	vpsllq ymm8,ymm8,0x20
  404db2:	vpmuludq ymm0,ymm4,ymm0
  404db6:	vpaddq ymm0,ymm0,ymm8
  404dbb:	vpsrlq ymm4,ymm3,0x20
  404dc0:	vpmuludq ymm4,ymm5,ymm4
  404dc4:	vpsrlq ymm8,ymm5,0x20
  404dc9:	vpmuludq ymm8,ymm8,ymm3
  404dcd:	vpaddq ymm4,ymm4,ymm8
  404dd2:	vpsllq ymm4,ymm4,0x20
  404dd7:	vpmuludq ymm3,ymm5,ymm3
  404ddb:	vpaddq ymm3,ymm3,ymm4
  404ddf:	vpsrlq ymm4,ymm2,0x20
  404de4:	vpmuludq ymm4,ymm6,ymm4
  404de8:	vpsrlq ymm5,ymm6,0x20
  404ded:	vpmuludq ymm5,ymm5,ymm2
  404df1:	vpaddq ymm4,ymm4,ymm5
  404df5:	vpsllq ymm4,ymm4,0x20
  404dfa:	vpmuludq ymm2,ymm6,ymm2
  404dfe:	vpaddq ymm2,ymm2,ymm4
  404e02:	vpsrlq ymm4,ymm1,0x20
  404e07:	vpmuludq ymm4,ymm7,ymm4
  404e0b:	vpsrlq ymm5,ymm7,0x20
  404e10:	vpmuludq ymm5,ymm5,ymm1
  404e14:	vpaddq ymm4,ymm4,ymm5
  404e18:	vpsllq ymm4,ymm4,0x20
  404e1d:	vpmuludq ymm1,ymm7,ymm1
  404e21:	vpaddq ymm1,ymm1,ymm4
  404e25:	vmovdqu ymm4,YMMWORD PTR [rsp+rcx*8+0x100]
  404e2e:	vmovdqu ymm5,YMMWORD PTR [rsp+rcx*8+0x120]
  404e37:	vmovdqu ymm6,YMMWORD PTR [rsp+rcx*8+0x140]
  404e40:	vmovdqu ymm7,YMMWORD PTR [rsp+rcx*8+0x160]
  404e49:	vpsrlq ymm8,ymm4,0x20
  404e4e:	vpmuludq ymm8,ymm8,ymm0
  404e52:	vpsrlq ymm9,ymm0,0x20
  404e57:	vpmuludq ymm9,ymm4,ymm9
  404e5c:	vpaddq ymm8,ymm9,ymm8
  404e61:	vpsllq ymm8,ymm8,0x20
  404e67:	vpmuludq ymm0,ymm4,ymm0
  404e6b:	vpaddq ymm0,ymm0,ymm8
  404e70:	vpsrlq ymm4,ymm5,0x20
  404e75:	vpmuludq ymm4,ymm4,ymm3
  404e79:	vpsrlq ymm8,ymm3,0x20
  404e7e:	vpmuludq ymm8,ymm5,ymm8
  404e83:	vpaddq ymm4,ymm8,ymm4
  404e87:	vpsllq ymm4,ymm4,0x20
  404e8c:	vpmuludq ymm3,ymm5,ymm3
  404e90:	vpaddq ymm3,ymm3,ymm4
  404e94:	vpsrlq ymm4,ymm6,0x20
  404e99:	vpmuludq ymm4,ymm4,ymm2
  404e9d:	vpsrlq ymm5,ymm2,0x20
  404ea2:	vpmuludq ymm5,ymm6,ymm5
  404ea6:	vpaddq ymm4,ymm5,ymm4
  404eaa:	vpsllq ymm4,ymm4,0x20
  404eaf:	vpmuludq ymm2,ymm6,ymm2
  404eb3:	vpaddq ymm2,ymm2,ymm4
  404eb7:	vpsrlq ymm4,ymm7,0x20
  404ebc:	vpmuludq ymm4,ymm4,ymm1
  404ec0:	vpsrlq ymm5,ymm1,0x20
  404ec5:	vpmuludq ymm5,ymm7,ymm5
  404ec9:	vpaddq ymm4,ymm5,ymm4
  404ecd:	vpsllq ymm4,ymm4,0x20
  404ed2:	vpmuludq ymm1,ymm7,ymm1
  404ed6:	vpaddq ymm1,ymm1,ymm4
  404eda:	vmovdqu ymm4,YMMWORD PTR [rsp+rcx*8+0x180]
  404ee3:	vmovdqu ymm5,YMMWORD PTR [rsp+rcx*8+0x1a0]
  404eec:	vmovdqu ymm6,YMMWORD PTR [rsp+rcx*8+0x1c0]
  404ef5:	vmovdqu ymm7,YMMWORD PTR [rsp+rcx*8+0x1e0]
  404efe:	vpsrlq ymm8,ymm4,0x20
  404f03:	vpmuludq ymm8,ymm8,ymm0
  404f07:	vpsrlq ymm9,ymm0,0x20
  404f0c:	vpmuludq ymm9,ymm4,ymm9
  404f11:	vpaddq ymm8,ymm9,ymm8
  404f16:	vpsllq ymm8,ymm8,0x20
  404f1c:	vpmuludq ymm0,ymm4,ymm0
  404f20:	vpaddq ymm0,ymm0,ymm8
  404f25:	vpsrlq ymm4,ymm5,0x20
  404f2a:	vpmuludq ymm4,ymm4,ymm3
  404f2e:	vpsrlq ymm8,ymm3,0x20
  404f33:	vpmuludq ymm8,ymm5,ymm8
  404f38:	vpaddq ymm4,ymm8,ymm4
  404f3c:	vpsllq ymm4,ymm4,0x20
  404f41:	vpmuludq ymm3,ymm5,ymm3
  404f45:	vpaddq ymm3,ymm3,ymm4
  404f49:	vpsrlq ymm4,ymm6,0x20
  404f4e:	vpmuludq ymm4,ymm4,ymm2
  404f52:	vpsrlq ymm5,ymm2,0x20
  404f57:	vpmuludq ymm5,ymm6,ymm5
  404f5b:	vpaddq ymm4,ymm5,ymm4
  404f5f:	vpsllq ymm4,ymm4,0x20
  404f64:	vpmuludq ymm2,ymm6,ymm2
  404f68:	vpaddq ymm2,ymm2,ymm4
  404f6c:	vpsrlq ymm4,ymm7,0x20
  404f71:	vpmuludq ymm4,ymm4,ymm1
  404f75:	vpsrlq ymm5,ymm1,0x20
  404f7a:	vpmuludq ymm5,ymm7,ymm5
  404f7e:	vpaddq ymm4,ymm5,ymm4
  404f82:	vpsllq ymm4,ymm4,0x20
  404f87:	vpmuludq ymm1,ymm7,ymm1
  404f8b:	vpaddq ymm1,ymm1,ymm4
  404f8f:	vmovdqu ymm4,YMMWORD PTR [rsp+rcx*8+0x200]
  404f98:	vmovdqu ymm5,YMMWORD PTR [rsp+rcx*8+0x220]
  404fa1:	vmovdqu ymm6,YMMWORD PTR [rsp+rcx*8+0x240]
  404faa:	vmovdqu ymm7,YMMWORD PTR [rsp+rcx*8+0x260]
  404fb3:	vpsrlq ymm8,ymm4,0x20
  404fb8:	vpmuludq ymm8,ymm8,ymm0
  404fbc:	vpsrlq ymm9,ymm0,0x20
  404fc1:	vpmuludq ymm9,ymm4,ymm9
  404fc6:	vpaddq ymm8,ymm9,ymm8
  404fcb:	vpsllq ymm8,ymm8,0x20
  404fd1:	vpmuludq ymm0,ymm4,ymm0
  404fd5:	vpaddq ymm0,ymm0,ymm8
  404fda:	vpsrlq ymm4,ymm5,0x20
  404fdf:	vpmuludq ymm4,ymm4,ymm3
  404fe3:	vpsrlq ymm8,ymm3,0x20
  404fe8:	vpmuludq ymm8,ymm5,ymm8
  404fed:	vpaddq ymm4,ymm8,ymm4
  404ff1:	vpsllq ymm4,ymm4,0x20
  404ff6:	vpmuludq ymm3,ymm5,ymm3
  404ffa:	vpaddq ymm3,ymm3,ymm4
  404ffe:	vpsrlq ymm4,ymm6,0x20
  405003:	vpmuludq ymm4,ymm4,ymm2
  405007:	vpsrlq ymm5,ymm2,0x20
  40500c:	vpmuludq ymm5,ymm6,ymm5
  405010:	vpaddq ymm4,ymm5,ymm4
  405014:	vpsllq ymm4,ymm4,0x20
  405019:	vpmuludq ymm2,ymm6,ymm2
  40501d:	vpaddq ymm2,ymm2,ymm4
  405021:	vpsrlq ymm4,ymm7,0x20
  405026:	vpmuludq ymm4,ymm4,ymm1
  40502a:	vpsrlq ymm5,ymm1,0x20
  40502f:	vpmuludq ymm5,ymm7,ymm5
  405033:	vpaddq ymm4,ymm5,ymm4
  405037:	vpsllq ymm4,ymm4,0x20
  40503c:	vpmuludq ymm1,ymm7,ymm1
  405040:	vpaddq ymm1,ymm1,ymm4
  405044:	add    rcx,0x40
  405048:	add    rdx,0x4
  40504c:	jne    404d70 <print_debug_data@@Base+0xac0>
  405052:	test   rax,rax
  405055:	je     405122 <print_debug_data@@Base+0xe72>
  40505b:	lea    rcx,[rsp+rcx*8]
  40505f:	add    rcx,0xe0
  405066:	neg    rax
  405069:	nop    DWORD PTR [rax+0x0]
  405070:	vmovdqu ymm4,YMMWORD PTR [rcx-0x60]
  405075:	vmovdqu ymm5,YMMWORD PTR [rcx-0x40]
  40507a:	vmovdqu ymm6,YMMWORD PTR [rcx-0x20]
  40507f:	vmovdqu ymm7,YMMWORD PTR [rcx]
  405083:	vpsrlq ymm8,ymm0,0x20
  405088:	vpmuludq ymm8,ymm4,ymm8
  40508d:	vpsrlq ymm9,ymm4,0x20
  405092:	vpmuludq ymm9,ymm9,ymm0
  405096:	vpaddq ymm8,ymm8,ymm9
  40509b:	vpsllq ymm8,ymm8,0x20
  4050a1:	vpmuludq ymm0,ymm4,ymm0
  4050a5:	vpaddq ymm0,ymm0,ymm8
  4050aa:	vpsrlq ymm4,ymm3,0x20
  4050af:	vpmuludq ymm4,ymm5,ymm4
  4050b3:	vpsrlq ymm8,ymm5,0x20
  4050b8:	vpmuludq ymm8,ymm8,ymm3
  4050bc:	vpaddq ymm4,ymm4,ymm8
  4050c1:	vpsllq ymm4,ymm4,0x20
  4050c6:	vpmuludq ymm3,ymm5,ymm3
  4050ca:	vpaddq ymm3,ymm3,ymm4
  4050ce:	vpsrlq ymm4,ymm2,0x20
  4050d3:	vpmuludq ymm4,ymm6,ymm4
  4050d7:	vpsrlq ymm5,ymm6,0x20
  4050dc:	vpmuludq ymm5,ymm5,ymm2
  4050e0:	vpaddq ymm4,ymm4,ymm5
  4050e4:	vpsllq ymm4,ymm4,0x20
  4050e9:	vpmuludq ymm2,ymm6,ymm2
  4050ed:	vpaddq ymm2,ymm2,ymm4
  4050f1:	vpsrlq ymm4,ymm1,0x20
  4050f6:	vpmuludq ymm4,ymm7,ymm4
  4050fa:	vpsrlq ymm5,ymm7,0x20
  4050ff:	vpmuludq ymm5,ymm5,ymm1
  405103:	vpaddq ymm4,ymm4,ymm5
  405107:	vpsllq ymm4,ymm4,0x20
  40510c:	vpmuludq ymm1,ymm7,ymm1
  405110:	vpaddq ymm1,ymm1,ymm4
  405114:	sub    rcx,0xffffffffffffff80
  405118:	add    rax,0x1
  40511c:	jne    405070 <print_debug_data@@Base+0xdc0>
  405122:	vpsrlq ymm4,ymm3,0x20
  405127:	vpmuludq ymm4,ymm4,ymm0
  40512b:	vpsrlq ymm5,ymm0,0x20
  405130:	vpmuludq ymm5,ymm3,ymm5
  405134:	vpaddq ymm4,ymm5,ymm4
  405138:	vpsllq ymm4,ymm4,0x20
  40513d:	vpmuludq ymm0,ymm3,ymm0
  405141:	vpaddq ymm0,ymm0,ymm4
  405145:	vpsrlq ymm3,ymm2,0x20
  40514a:	vpmuludq ymm3,ymm3,ymm0
  40514e:	vpsrlq ymm4,ymm0,0x20
  405153:	vpmuludq ymm4,ymm2,ymm4
  405157:	vpaddq ymm3,ymm4,ymm3
  40515b:	vpsllq ymm3,ymm3,0x20
  405160:	vpmuludq ymm0,ymm2,ymm0
  405164:	vpaddq ymm0,ymm0,ymm3
  405168:	vpsrlq ymm2,ymm1,0x20
  40516d:	vpmuludq ymm2,ymm2,ymm0
  405171:	vpsrlq ymm3,ymm0,0x20
  405176:	vpmuludq ymm3,ymm1,ymm3
  40517a:	vpaddq ymm2,ymm3,ymm2
  40517e:	vpsllq ymm2,ymm2,0x20
  405183:	vpmuludq ymm0,ymm1,ymm0
  405187:	vpaddq ymm0,ymm0,ymm2
  40518b:	vextracti128 xmm1,ymm0,0x1
  405191:	vpsrlq ymm2,ymm0,0x20
  405196:	vpmuludq ymm2,ymm2,ymm1
  40519a:	vpsrlq ymm3,ymm1,0x20
  40519f:	vpmuludq ymm3,ymm0,ymm3
  4051a3:	vpaddq ymm2,ymm3,ymm2
  4051a7:	vpsllq ymm2,ymm2,0x20
  4051ac:	vpmuludq ymm0,ymm0,ymm1
  4051b0:	vpaddq ymm0,ymm0,ymm2
  4051b4:	vpshufd xmm1,xmm0,0x4e
  4051b9:	vpsrlq ymm2,ymm0,0x20
  4051be:	vpmuludq ymm2,ymm2,ymm1
  4051c2:	vpsrlq ymm3,ymm1,0x20
  4051c7:	vpmuludq ymm3,ymm0,ymm3
  4051cb:	vpaddq ymm2,ymm3,ymm2
  4051cf:	vpsllq ymm2,ymm2,0x20
  4051d4:	vpmuludq ymm0,ymm0,ymm1
  4051d8:	vpaddq ymm0,ymm0,ymm2
  4051dc:	vmovq  r12,xmm0
  4051e1:	cmp    rbx,rbp
  4051e4:	je     405202 <print_debug_data@@Base+0xf52>
  4051e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051f0:	imul   r12,QWORD PTR [rsp+rbx*8+0x80]
  4051f9:	add    rbx,0x1
  4051fd:	cmp    rbp,rbx
  405200:	jne    4051f0 <print_debug_data@@Base+0xf40>
  405202:	test   r12,r12
  405205:	jle    4053e5 <print_debug_data@@Base+0x1135>
  40520b:	mov    rdi,r13
  40520e:	vzeroupper 
  405211:	call   403270 <coda_cursor_goto_first_array_element@plt>
  405216:	test   eax,eax
  405218:	je     405221 <print_debug_data@@Base+0xf71>
  40521a:	xor    eax,eax
  40521c:	call   40a6f0 <handle_coda_error@@Base>
  405221:	mov    rax,QWORD PTR [rsp+0x18]
  405226:	lea    eax,[rax+0x1]
  405229:	mov    DWORD PTR [rsp+0x70],eax
  40522d:	lea    rax,[r12-0x1]
  405232:	mov    QWORD PTR [rsp+0x68],rax
  405237:	lea    rbp,[rip+0x6fed]        # 40c22b <_IO_stdin_used@@Base+0x22b>
  40523e:	lea    rbx,[rip+0x7251]        # 40c496 <_IO_stdin_used@@Base+0x496>
  405245:	xor    r15d,r15d
  405248:	nop    DWORD PTR [rax+rax*1+0x0]
  405250:	mov    r14,r13
  405253:	xor    eax,eax
  405255:	lea    rdi,[rip+0x7246]        # 40c4a2 <_IO_stdin_used@@Base+0x4a2>
  40525c:	call   405440 <print_debug_data@@Base+0x1190>
  405261:	cmp    DWORD PTR [rsp+0x10],0x0
  405266:	jle    4052a9 <print_debug_data@@Base+0xff9>
  405268:	xor    r13d,r13d
  40526b:	nop    DWORD PTR [rax+rax*1+0x0]
  405270:	mov    esi,DWORD PTR [rsp+r13*4+0x20]
  405275:	xor    eax,eax
  405277:	mov    rdi,rbp
  40527a:	call   405560 <print_debug_data@@Base+0x12b0>
  40527f:	movsxd rax,DWORD PTR [rsp+0x10]
  405284:	mov    rcx,rax
  405287:	add    rcx,0xffffffffffffffff
  40528b:	cmp    r13,rcx
  40528e:	jge    40529e <print_debug_data@@Base+0xfee>
  405290:	xor    eax,eax
  405292:	mov    rdi,rbx
  405295:	call   405560 <print_debug_data@@Base+0x12b0>
  40529a:	mov    eax,DWORD PTR [rsp+0x10]
  40529e:	add    r13,0x1
  4052a2:	cdqe   
  4052a4:	cmp    r13,rax
  4052a7:	jl     405270 <print_debug_data@@Base+0xfc0>
  4052a9:	xor    eax,eax
  4052ab:	lea    rdi,[rip+0x77d5]        # 40ca87 <_IO_stdin_used@@Base+0xa87>
  4052b2:	call   405560 <print_debug_data@@Base+0x12b0>
  4052b7:	cmp    DWORD PTR [rip+0xb06a],0x0        # 410328 <__data_start@@Base+0x10>
  4052be:	mov    r13,r14
  4052c1:	je     405320 <print_debug_data@@Base+0x1070>
  4052c3:	mov    rdi,r13
  4052c6:	lea    rsi,[rsp+0x8]
  4052cb:	call   4035b0 <coda_cursor_get_file_bit_offset@plt>
  4052d0:	test   eax,eax
  4052d2:	je     4052db <print_debug_data@@Base+0x102b>
  4052d4:	xor    eax,eax
  4052d6:	call   40a6f0 <handle_coda_error@@Base>
  4052db:	mov    rdi,QWORD PTR [rsp+0x8]
  4052e0:	test   rdi,rdi
  4052e3:	js     405320 <print_debug_data@@Base+0x1070>
  4052e5:	shr    rdi,0x3
  4052e9:	lea    r14,[rsp+0x50]
  4052ee:	mov    rsi,r14
  4052f1:	call   403610 <coda_str64@plt>
  4052f6:	xor    eax,eax
  4052f8:	lea    rdi,[rip+0x6f27]        # 40c226 <_IO_stdin_used@@Base+0x226>
  4052ff:	mov    rsi,r14
  405302:	call   405560 <print_debug_data@@Base+0x12b0>
  405307:	mov    rsi,QWORD PTR [rsp+0x8]
  40530c:	and    rsi,0x7
  405310:	je     405320 <print_debug_data@@Base+0x1070>
  405312:	xor    eax,eax
  405314:	lea    rdi,[rip+0x6f0f]        # 40c22a <_IO_stdin_used@@Base+0x22a>
  40531b:	call   405560 <print_debug_data@@Base+0x12b0>
  405320:	xor    eax,eax
  405322:	lea    rdi,[rip+0x7ae4]        # 40ce0d <_IO_stdin_used@@Base+0xe0d>
  405329:	call   405560 <print_debug_data@@Base+0x12b0>
  40532e:	add    DWORD PTR [rip+0xb003],0x1        # 410338 <__bss_start@@Base+0x8>
  405335:	lea    rax,[rip+0xaff0]        # 41032c <max_depth@@Base>
  40533c:	mov    eax,DWORD PTR [rax]
  40533e:	test   eax,eax
  405340:	js     405360 <print_debug_data@@Base+0x10b0>
  405342:	cmp    eax,DWORD PTR [rsp+0x18]
  405346:	jg     405360 <print_debug_data@@Base+0x10b0>
  405348:	xor    eax,eax
  40534a:	lea    rdi,[rip+0x6edd]        # 40c22e <_IO_stdin_used@@Base+0x22e>
  405351:	call   405440 <print_debug_data@@Base+0x1190>
  405356:	jmp    40536c <print_debug_data@@Base+0x10bc>
  405358:	nop    DWORD PTR [rax+rax*1+0x0]
  405360:	mov    rdi,r13
  405363:	mov    esi,DWORD PTR [rsp+0x70]
  405367:	call   4043e0 <print_debug_data@@Base+0x130>
  40536c:	add    DWORD PTR [rip+0xafc5],0xffffffff        # 410338 <__bss_start@@Base+0x8>
  405373:	movsxd rax,DWORD PTR [rsp+0x10]
  405378:	test   rax,rax
  40537b:	jle    4053b6 <print_debug_data@@Base+0x1106>
  40537d:	add    rax,0x1
  405381:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40538b:	nop    DWORD PTR [rax+rax*1+0x0]
  405390:	movsxd rcx,DWORD PTR [rsp+rax*4+0x18]
  405395:	add    rcx,0x1
  405399:	mov    DWORD PTR [rsp+rax*4+0x18],ecx
  40539d:	cmp    QWORD PTR [rsp+rax*8+0x70],rcx
  4053a2:	jne    4053b6 <print_debug_data@@Base+0x1106>
  4053a4:	mov    DWORD PTR [rsp+rax*4+0x18],0x0
  4053ac:	add    rax,0xffffffffffffffff
  4053b0:	cmp    rax,0x1
  4053b4:	jg     405390 <print_debug_data@@Base+0x10e0>
  4053b6:	cmp    QWORD PTR [rsp+0x68],r15
  4053bb:	jle    4053d0 <print_debug_data@@Base+0x1120>
  4053bd:	mov    rdi,r13
  4053c0:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  4053c5:	test   eax,eax
  4053c7:	je     4053d0 <print_debug_data@@Base+0x1120>
  4053c9:	xor    eax,eax
  4053cb:	call   40a6f0 <handle_coda_error@@Base>
  4053d0:	add    r15,0x1
  4053d4:	cmp    r15,r12
  4053d7:	jne    405250 <print_debug_data@@Base+0xfa0>
  4053dd:	mov    rdi,r13
  4053e0:	call   403320 <coda_cursor_goto_parent@plt>
  4053e5:	add    rsp,0x398
  4053ec:	pop    rbx
  4053ed:	pop    r12
  4053ef:	pop    r13
  4053f1:	pop    r14
  4053f3:	pop    r15
  4053f5:	pop    rbp
  4053f6:	vzeroupper 
  4053f9:	ret    
  4053fa:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  405400:	lea    rdi,[rip+0x6d5b]        # 40c162 <_IO_stdin_used@@Base+0x162>
  405407:	lea    rsi,[rsp+0x80]
  40540f:	call   4030f0 <coda_time_double_to_string@plt>
  405414:	test   eax,eax
  405416:	je     405424 <print_debug_data@@Base+0x1174>
  405418:	lea    rdi,[rip+0x6ee5]        # 40c304 <_IO_stdin_used@@Base+0x304>
  40541f:	jmp    4048ef <print_debug_data@@Base+0x63f>
  405424:	lea    rdi,[rip+0x783b]        # 40cc66 <_IO_stdin_used@@Base+0xc66>
  40542b:	lea    rsi,[rsp+0x80]
  405433:	xor    eax,eax
  405435:	call   405560 <print_debug_data@@Base+0x12b0>
  40543a:	jmp    4053e5 <print_debug_data@@Base+0x1135>
  40543c:	nop    DWORD PTR [rax+0x0]
  405440:	push   rbp
  405441:	push   r15
  405443:	push   r14
  405445:	push   rbx
  405446:	sub    rsp,0xd8
  40544d:	mov    r14,rdi
  405450:	test   al,al
  405452:	je     405493 <print_debug_data@@Base+0x11e3>
  405454:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40545a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  405460:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  405466:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40546f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  405478:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  405481:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40548a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  405493:	mov    QWORD PTR [rsp+0x48],r9
  405498:	mov    QWORD PTR [rsp+0x40],r8
  40549d:	mov    QWORD PTR [rsp+0x38],rcx
  4054a2:	mov    QWORD PTR [rsp+0x30],rdx
  4054a7:	mov    QWORD PTR [rsp+0x28],rsi
  4054ac:	mov    ebp,DWORD PTR [rip+0xae86]        # 410338 <__bss_start@@Base+0x8>
  4054b2:	test   ebp,ebp
  4054b4:	js     405535 <print_debug_data@@Base+0x1285>
  4054b6:	je     4054ed <print_debug_data@@Base+0x123d>
  4054b8:	add    ebp,0x1
  4054bb:	lea    r15,[rip+0xbfe6]        # 4114a8 <ascii_output@@Base>
  4054c2:	lea    rbx,[rip+0x6c96]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  4054c9:	nop    DWORD PTR [rax+0x0]
  4054d0:	mov    rcx,QWORD PTR [r15]
  4054d3:	mov    esi,0x2
  4054d8:	mov    edx,0x1
  4054dd:	mov    rdi,rbx
  4054e0:	call   4035a0 <fwrite@plt>
  4054e5:	add    ebp,0xffffffff
  4054e8:	cmp    ebp,0x1
  4054eb:	jg     4054d0 <print_debug_data@@Base+0x1220>
  4054ed:	lea    rax,[rsp+0x20]
  4054f2:	mov    QWORD PTR [rsp+0x10],rax
  4054f7:	lea    rax,[rsp+0x100]
  4054ff:	mov    QWORD PTR [rsp+0x8],rax
  405504:	movabs rax,0x3000000008
  40550e:	mov    QWORD PTR [rsp],rax
  405512:	lea    rax,[rip+0xbf8f]        # 4114a8 <ascii_output@@Base>
  405519:	mov    rdi,QWORD PTR [rax]
  40551c:	mov    rdx,rsp
  40551f:	mov    rsi,r14
  405522:	call   403530 <vfprintf@plt>
  405527:	add    rsp,0xd8
  40552e:	pop    rbx
  40552f:	pop    r14
  405531:	pop    r15
  405533:	pop    rbp
  405534:	ret    
  405535:	lea    rdi,[rip+0x6dee]        # 40c32a <_IO_stdin_used@@Base+0x32a>
  40553c:	lea    rsi,[rip+0x6cf0]        # 40c233 <_IO_stdin_used@@Base+0x233>
  405543:	lea    rcx,[rip+0x6dec]        # 40c336 <_IO_stdin_used@@Base+0x336>
  40554a:	mov    edx,0x2c
  40554f:	call   403240 <__assert_fail@plt>
  405554:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40555e:	xchg   ax,ax
  405560:	sub    rsp,0xd8
  405567:	mov    r10,rdi
  40556a:	test   al,al
  40556c:	je     4055ad <print_debug_data@@Base+0x12fd>
  40556e:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  405574:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40557a:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  405580:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  405589:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  405592:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40559b:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4055a4:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4055ad:	mov    QWORD PTR [rsp+0x48],r9
  4055b2:	mov    QWORD PTR [rsp+0x40],r8
  4055b7:	mov    QWORD PTR [rsp+0x38],rcx
  4055bc:	mov    QWORD PTR [rsp+0x30],rdx
  4055c1:	mov    QWORD PTR [rsp+0x28],rsi
  4055c6:	lea    rax,[rsp+0x20]
  4055cb:	mov    QWORD PTR [rsp+0x10],rax
  4055d0:	lea    rax,[rsp+0xe0]
  4055d8:	mov    QWORD PTR [rsp+0x8],rax
  4055dd:	movabs rax,0x3000000008
  4055e7:	mov    QWORD PTR [rsp],rax
  4055eb:	lea    rax,[rip+0xbeb6]        # 4114a8 <ascii_output@@Base>
  4055f2:	mov    rdi,QWORD PTR [rax]
  4055f5:	mov    rdx,rsp
  4055f8:	mov    rsi,r10
  4055fb:	call   403530 <vfprintf@plt>
  405600:	add    rsp,0xd8
  405607:	ret    
  405608:	nop    DWORD PTR [rax+rax*1+0x0]
  405610:	push   rbp
  405611:	push   r15
  405613:	push   r14
  405615:	push   r13
  405617:	push   r12
  405619:	push   rbx
  40561a:	push   rax
  40561b:	test   rsi,rsi
  40561e:	jle    40572d <print_debug_data@@Base+0x147d>
  405624:	mov    rbx,rsi
  405627:	mov    r14,rdi
  40562a:	lea    r15,[rip+0x6bcb]        # 40c1fc <_IO_stdin_used@@Base+0x1fc>
  405631:	lea    r12,[rip+0x6ace]        # 40c106 <_IO_stdin_used@@Base+0x106>
  405638:	lea    r13,[rip+0x6aca]        # 40c109 <_IO_stdin_used@@Base+0x109>
  40563f:	xor    ebp,ebp
  405641:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40564b:	nop    DWORD PTR [rax+rax*1+0x0]
  405650:	movsx  esi,BYTE PTR [r14+rbp*1]
  405655:	lea    eax,[rsi-0x7]
  405658:	cmp    eax,0x6
  40565b:	ja     405680 <print_debug_data@@Base+0x13d0>
  40565d:	movsxd rax,DWORD PTR [r15+rax*4]
  405661:	add    rax,r15
  405664:	jmp    rax
  405666:	xor    eax,eax
  405668:	lea    rdi,[rip+0x6a88]        # 40c0f7 <_IO_stdin_used@@Base+0xf7>
  40566f:	call   405560 <print_debug_data@@Base+0x12b0>
  405674:	jmp    405720 <print_debug_data@@Base+0x1470>
  405679:	nop    DWORD PTR [rax+0x0]
  405680:	cmp    esi,0x5c
  405683:	jne    4056f0 <print_debug_data@@Base+0x1440>
  405685:	xor    eax,eax
  405687:	lea    rdi,[rip+0x6a7e]        # 40c10c <_IO_stdin_used@@Base+0x10c>
  40568e:	call   405560 <print_debug_data@@Base+0x12b0>
  405693:	jmp    405720 <print_debug_data@@Base+0x1470>
  405698:	xor    eax,eax
  40569a:	lea    rdi,[rip+0x6a59]        # 40c0fa <_IO_stdin_used@@Base+0xfa>
  4056a1:	call   405560 <print_debug_data@@Base+0x12b0>
  4056a6:	jmp    405720 <print_debug_data@@Base+0x1470>
  4056a8:	xor    eax,eax
  4056aa:	lea    rdi,[rip+0x6a4c]        # 40c0fd <_IO_stdin_used@@Base+0xfd>
  4056b1:	call   405560 <print_debug_data@@Base+0x12b0>
  4056b6:	jmp    405720 <print_debug_data@@Base+0x1470>
  4056b8:	xor    eax,eax
  4056ba:	lea    rdi,[rip+0x6a3f]        # 40c100 <_IO_stdin_used@@Base+0x100>
  4056c1:	call   405560 <print_debug_data@@Base+0x12b0>
  4056c6:	jmp    405720 <print_debug_data@@Base+0x1470>
  4056c8:	xor    eax,eax
  4056ca:	lea    rdi,[rip+0x6a32]        # 40c103 <_IO_stdin_used@@Base+0x103>
  4056d1:	call   405560 <print_debug_data@@Base+0x12b0>
  4056d6:	jmp    405720 <print_debug_data@@Base+0x1470>
  4056d8:	xor    eax,eax
  4056da:	mov    rdi,r12
  4056dd:	call   405560 <print_debug_data@@Base+0x12b0>
  4056e2:	jmp    405720 <print_debug_data@@Base+0x1470>
  4056e4:	xor    eax,eax
  4056e6:	mov    rdi,r13
  4056e9:	call   405560 <print_debug_data@@Base+0x12b0>
  4056ee:	jmp    405720 <print_debug_data@@Base+0x1470>
  4056f0:	cmp    sil,0x20
  4056f4:	jl     405707 <print_debug_data@@Base+0x1457>
  4056f6:	cmp    sil,0x7f
  4056fa:	je     405707 <print_debug_data@@Base+0x1457>
  4056fc:	xor    eax,eax
  4056fe:	lea    rdi,[rip+0x6c43]        # 40c348 <_IO_stdin_used@@Base+0x348>
  405705:	jmp    405714 <print_debug_data@@Base+0x1464>
  405707:	movzx  esi,sil
  40570b:	xor    eax,eax
  40570d:	lea    rdi,[rip+0x69fb]        # 40c10f <_IO_stdin_used@@Base+0x10f>
  405714:	call   405560 <print_debug_data@@Base+0x12b0>
  405719:	nop    DWORD PTR [rax+0x0]
  405720:	add    rbp,0x1
  405724:	cmp    rbx,rbp
  405727:	jne    405650 <print_debug_data@@Base+0x13a0>
  40572d:	add    rsp,0x8
  405731:	pop    rbx
  405732:	pop    r12
  405734:	pop    r13
  405736:	pop    r14
  405738:	pop    r15
  40573a:	pop    rbp
  40573b:	ret    
  40573c:	nop    DWORD PTR [rax+0x0]

0000000000405740 <dim_info_init@@Base>:
  405740:	lea    rax,[rip+0xbd89]        # 4114d0 <dim_info@@Base>
  405747:	mov    DWORD PTR [rax],0x0
  40574d:	mov    DWORD PTR [rax+0x44],0x0
  405754:	mov    DWORD PTR [rax+0x68],0xffffffff
  40575b:	ret    
  40575c:	nop    DWORD PTR [rax+0x0]

0000000000405760 <dim_info_done@@Base>:
  405760:	ret    
  405761:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40576b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405770 <print_all_distinct_dims@@Base>:
  405770:	push   r15
  405772:	push   r14
  405774:	push   r13
  405776:	push   r12
  405778:	push   rbx
  405779:	lea    r12,[rip+0xbd50]        # 4114d0 <dim_info@@Base>
  405780:	cmp    DWORD PTR [r12],edi
  405784:	jle    405995 <print_all_distinct_dims@@Base+0x225>
  40578a:	movsxd r13,edi
  40578d:	cmp    DWORD PTR [r12+r13*4+0x48],0x0
  405793:	je     405833 <print_all_distinct_dims@@Base+0xc3>
  405799:	movsxd rax,DWORD PTR [r12+r13*4+0x4]
  40579e:	lea    rbx,[rax*4+0x4]
  4057a6:	mov    rdi,rbx
  4057a9:	call   4033f0 <malloc@plt>
  4057ae:	mov    r14,rax
  4057b1:	test   rax,rax
  4057b4:	jne    4057ed <print_all_distinct_dims@@Base+0x7d>
  4057b6:	lea    rsi,[rip+0x68a0]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  4057bd:	lea    rcx,[rip+0x6c3f]        # 40c403 <_IO_stdin_used@@Base+0x403>
  4057c4:	mov    edi,0xffffffff
  4057c9:	mov    r8d,0x3d
  4057cf:	xor    eax,eax
  4057d1:	mov    rdx,rbx
  4057d4:	call   4030d0 <coda_set_error@plt>
  4057d9:	xor    eax,eax
  4057db:	call   40a6f0 <handle_coda_error@@Base>
  4057e0:	movsxd rax,DWORD PTR [r12+r13*4+0x4]
  4057e5:	lea    rbx,[rax*4+0x4]
  4057ed:	xor    esi,esi
  4057ef:	mov    rdi,r14
  4057f2:	mov    rdx,rbx
  4057f5:	call   403280 <memset@plt>
  4057fa:	movsxd rax,DWORD PTR [r12+r13*4+0xb0]
  405802:	mov    rdx,QWORD PTR [r12+rax*8+0x108]
  40580a:	test   rdx,rdx
  40580d:	jle    4058b7 <print_all_distinct_dims@@Base+0x147>
  405813:	mov    rcx,QWORD PTR [r12+r13*8+0x70]
  405818:	lea    rsi,[rdx-0x1]
  40581c:	mov    eax,edx
  40581e:	and    eax,0x3
  405821:	cmp    rsi,0x3
  405825:	jae    40583d <print_all_distinct_dims@@Base+0xcd>
  405827:	xor    esi,esi
  405829:	test   rax,rax
  40582c:	jne    405899 <print_all_distinct_dims@@Base+0x129>
  40582e:	jmp    4058b7 <print_all_distinct_dims@@Base+0x147>
  405833:	pop    rbx
  405834:	pop    r12
  405836:	pop    r13
  405838:	pop    r14
  40583a:	pop    r15
  40583c:	ret    
  40583d:	sub    rdx,rax
  405840:	xor    esi,esi
  405842:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40584c:	nop    DWORD PTR [rax+0x0]
  405850:	movsxd rdi,DWORD PTR [rcx+rsi*4]
  405854:	test   rdi,rdi
  405857:	js     40585e <print_all_distinct_dims@@Base+0xee>
  405859:	add    DWORD PTR [r14+rdi*4],0x1
  40585e:	movsxd rdi,DWORD PTR [rcx+rsi*4+0x4]
  405863:	test   rdi,rdi
  405866:	js     40586d <print_all_distinct_dims@@Base+0xfd>
  405868:	add    DWORD PTR [r14+rdi*4],0x1
  40586d:	movsxd rdi,DWORD PTR [rcx+rsi*4+0x8]
  405872:	test   rdi,rdi
  405875:	js     40587c <print_all_distinct_dims@@Base+0x10c>
  405877:	add    DWORD PTR [r14+rdi*4],0x1
  40587c:	movsxd rdi,DWORD PTR [rcx+rsi*4+0xc]
  405881:	test   rdi,rdi
  405884:	js     40588b <print_all_distinct_dims@@Base+0x11b>
  405886:	add    DWORD PTR [r14+rdi*4],0x1
  40588b:	add    rsi,0x4
  40588f:	cmp    rdx,rsi
  405892:	jne    405850 <print_all_distinct_dims@@Base+0xe0>
  405894:	test   rax,rax
  405897:	je     4058b7 <print_all_distinct_dims@@Base+0x147>
  405899:	lea    rcx,[rcx+rsi*4]
  40589d:	xor    edx,edx
  40589f:	nop
  4058a0:	movsxd rsi,DWORD PTR [rcx+rdx*4]
  4058a4:	test   rsi,rsi
  4058a7:	js     4058ae <print_all_distinct_dims@@Base+0x13e>
  4058a9:	add    DWORD PTR [r14+rsi*4],0x1
  4058ae:	add    rdx,0x1
  4058b2:	cmp    rax,rdx
  4058b5:	jne    4058a0 <print_all_distinct_dims@@Base+0x130>
  4058b7:	lea    esi,[r13+0x1]
  4058bb:	lea    rdi,[rip+0x6bc6]        # 40c488 <_IO_stdin_used@@Base+0x488>
  4058c2:	xor    eax,eax
  4058c4:	call   403230 <printf@plt>
  4058c9:	movsxd rbx,DWORD PTR [r12+r13*4+0x24]
  4058ce:	mov    esi,DWORD PTR [r12+r13*4+0x4]
  4058d3:	cmp    ebx,esi
  4058d5:	jge    405904 <print_all_distinct_dims@@Base+0x194>
  4058d7:	lea    r15,[rip+0x6bb6]        # 40c494 <_IO_stdin_used@@Base+0x494>
  4058de:	xchg   ax,ax
  4058e0:	cmp    DWORD PTR [r14+rbx*4],0x0
  4058e5:	jle    4058f8 <print_all_distinct_dims@@Base+0x188>
  4058e7:	xor    eax,eax
  4058e9:	mov    rdi,r15
  4058ec:	mov    esi,ebx
  4058ee:	call   403230 <printf@plt>
  4058f3:	mov    esi,DWORD PTR [r12+r13*4+0x4]
  4058f8:	add    rbx,0x1
  4058fc:	movsxd rax,esi
  4058ff:	cmp    rbx,rax
  405902:	jl     4058e0 <print_all_distinct_dims@@Base+0x170>
  405904:	lea    rdi,[rip+0x6b8d]        # 40c498 <_IO_stdin_used@@Base+0x498>
  40590b:	xor    eax,eax
  40590d:	call   403230 <printf@plt>
  405912:	lea    rdi,[rip+0x6b83]        # 40c49c <_IO_stdin_used@@Base+0x49c>
  405919:	xor    eax,eax
  40591b:	call   403230 <printf@plt>
  405920:	movsxd rbx,DWORD PTR [r12+r13*4+0x24]
  405925:	mov    eax,DWORD PTR [r12+r13*4+0x4]
  40592a:	cmp    ebx,eax
  40592c:	jge    405965 <print_all_distinct_dims@@Base+0x1f5>
  40592e:	lea    r15,[rip+0x6b5f]        # 40c494 <_IO_stdin_used@@Base+0x494>
  405935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40593f:	nop
  405940:	mov    esi,DWORD PTR [r14+rbx*4]
  405944:	test   esi,esi
  405946:	jle    405957 <print_all_distinct_dims@@Base+0x1e7>
  405948:	xor    eax,eax
  40594a:	mov    rdi,r15
  40594d:	call   403230 <printf@plt>
  405952:	mov    eax,DWORD PTR [r12+r13*4+0x4]
  405957:	add    rbx,0x1
  40595b:	movsxd rcx,eax
  40595e:	cmp    rbx,rcx
  405961:	jl     405940 <print_all_distinct_dims@@Base+0x1d0>
  405963:	jmp    405968 <print_all_distinct_dims@@Base+0x1f8>
  405965:	movsxd rcx,eax
  405968:	mov    esi,DWORD PTR [r14+rcx*4]
  40596c:	lea    rdi,[rip+0x6b25]        # 40c498 <_IO_stdin_used@@Base+0x498>
  405973:	xor    eax,eax
  405975:	call   403230 <printf@plt>
  40597a:	mov    edi,0xa
  40597f:	call   403080 <putchar@plt>
  405984:	mov    rdi,r14
  405987:	pop    rbx
  405988:	pop    r12
  40598a:	pop    r13
  40598c:	pop    r14
  40598e:	pop    r15
  405990:	jmp    403070 <free@plt>
  405995:	lea    rdi,[rip+0x6a4c]        # 40c3e8 <_IO_stdin_used@@Base+0x3e8>
  40599c:	lea    rsi,[rip+0x6a60]        # 40c403 <_IO_stdin_used@@Base+0x403>
  4059a3:	lea    rcx,[rip+0x6abc]        # 40c466 <_IO_stdin_used@@Base+0x466>
  4059aa:	mov    edx,0x32
  4059af:	call   403240 <__assert_fail@plt>
  4059b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059be:	xchg   ax,ax

00000000004059c0 <dim_enter_array@@Base>:
  4059c0:	push   rbp
  4059c1:	push   r15
  4059c3:	push   r14
  4059c5:	push   r13
  4059c7:	push   r12
  4059c9:	push   rbx
  4059ca:	sub    rsp,0x78
  4059ce:	lea    rbp,[rip+0xa993]        # 410368 <traverse_info@@Base>
  4059d5:	movsxd rbx,DWORD PTR [rbp+0xf34]
  4059dc:	movsxd rax,DWORD PTR [rbp+0x110]
  4059e3:	mov    rdi,QWORD PTR [rbp+rax*8+0x10]
  4059e8:	lea    rsi,[rsp+0x24]
  4059ed:	call   403620 <coda_type_get_class@plt>
  4059f2:	test   eax,eax
  4059f4:	je     4059fd <dim_enter_array@@Base+0x3d>
  4059f6:	xor    eax,eax
  4059f8:	call   40a6f0 <handle_coda_error@@Base>
  4059fd:	mov    eax,DWORD PTR [rsp+0x24]
  405a01:	add    eax,0xffffffff
  405a04:	cmp    eax,0x5
  405a07:	ja     406686 <dim_enter_array@@Base+0xcc6>
  405a0d:	lea    rbx,[rbx+rbx*4]
  405a11:	shl    rbx,0x4
  405a15:	lea    rcx,[rip+0x6984]        # 40c3a0 <_IO_stdin_used@@Base+0x3a0>
  405a1c:	movsxd rax,DWORD PTR [rcx+rax*4]
  405a20:	add    rax,rcx
  405a23:	jmp    rax
  405a25:	movsxd rax,DWORD PTR [rbp+0x110]
  405a2c:	mov    rdi,QWORD PTR [rbp+rax*8+0x10]
  405a31:	lea    rsi,[rsp+0x20]
  405a36:	lea    rdx,[rsp+0x30]
  405a3b:	call   403520 <coda_type_get_array_dim@plt>
  405a40:	test   eax,eax
  405a42:	je     405a4b <dim_enter_array@@Base+0x8b>
  405a44:	xor    eax,eax
  405a46:	call   40a6f0 <handle_coda_error@@Base>
  405a4b:	mov    r14d,DWORD PTR [rsp+0x20]
  405a50:	mov    DWORD PTR [rbp+rbx*1+0x538],r14d
  405a58:	test   r14d,r14d
  405a5b:	jle    405b49 <dim_enter_array@@Base+0x189>
  405a61:	cmp    r14d,0x10
  405a65:	jae    405edb <dim_enter_array@@Base+0x51b>
  405a6b:	xor    eax,eax
  405a6d:	jmp    406012 <dim_enter_array@@Base+0x652>
  405a72:	movsxd rax,DWORD PTR [rbp+0x110]
  405a79:	mov    rdi,QWORD PTR [rbp+rax*8+0x10]
  405a7e:	lea    rsi,[rsp+0x30]
  405a83:	call   403430 <coda_type_get_special_type@plt>
  405a88:	test   eax,eax
  405a8a:	je     405a93 <dim_enter_array@@Base+0xd3>
  405a8c:	xor    eax,eax
  405a8e:	call   40a6f0 <handle_coda_error@@Base>
  405a93:	cmp    DWORD PTR [rsp+0x30],0x3
  405a98:	jne    4066c7 <dim_enter_array@@Base+0xd07>
  405a9e:	movabs rax,0x200000001
  405aa8:	mov    QWORD PTR [rbp+rbx*1+0x538],rax
  405ab0:	jmp    405b43 <dim_enter_array@@Base+0x183>
  405ab5:	movsxd rax,DWORD PTR [rbp+0x110]
  405abc:	mov    rdi,QWORD PTR [rbp+rax*8+0x10]
  405ac1:	lea    rsi,[rsp+0x30]
  405ac6:	call   403470 <coda_type_get_string_length@plt>
  405acb:	test   eax,eax
  405acd:	je     405ad6 <dim_enter_array@@Base+0x116>
  405acf:	xor    eax,eax
  405ad1:	call   40a6f0 <handle_coda_error@@Base>
  405ad6:	mov    DWORD PTR [rbp+rbx*1+0x538],0x1
  405ae1:	mov    eax,DWORD PTR [rsp+0x30]
  405ae5:	mov    DWORD PTR [rbp+rbx*1+0x53c],eax
  405aec:	jmp    405b43 <dim_enter_array@@Base+0x183>
  405aee:	movsxd rax,DWORD PTR [rbp+0x110]
  405af5:	mov    rdi,QWORD PTR [rbp+rax*8+0x10]
  405afa:	lea    rsi,[rsp+0x30]
  405aff:	call   4031a0 <coda_type_get_bit_size@plt>
  405b04:	test   eax,eax
  405b06:	je     405b0f <dim_enter_array@@Base+0x14f>
  405b08:	xor    eax,eax
  405b0a:	call   40a6f0 <handle_coda_error@@Base>
  405b0f:	mov    DWORD PTR [rbp+rbx*1+0x538],0x1
  405b1a:	mov    rcx,QWORD PTR [rsp+0x30]
  405b1f:	test   rcx,rcx
  405b22:	js     405b37 <dim_enter_array@@Base+0x177>
  405b24:	mov    rax,rcx
  405b27:	shr    rax,0x3
  405b2b:	and    ecx,0x7
  405b2e:	cmp    rcx,0x1
  405b32:	sbb    eax,0xffffffff
  405b35:	jmp    405b3c <dim_enter_array@@Base+0x17c>
  405b37:	mov    eax,0xffffffff
  405b3c:	mov    DWORD PTR [rbp+rbx*1+0x53c],eax
  405b43:	mov    r14d,0x1
  405b49:	lea    rax,[rbx+rbp*1]
  405b4d:	add    rax,0x534
  405b53:	lea    rcx,[rip+0xa806]        # 410360 <calc_dim@@Base>
  405b5a:	cmp    DWORD PTR [rcx],0x0
  405b5d:	je     405bb6 <dim_enter_array@@Base+0x1f6>
  405b5f:	lea    r13,[rip+0xb96a]        # 4114d0 <dim_info@@Base>
  405b66:	mov    ecx,DWORD PTR [r13+0x0]
  405b6a:	mov    DWORD PTR [rax],ecx
  405b6c:	lea    r12d,[r14+rcx*1]
  405b70:	cmp    r12d,0x9
  405b74:	jge    4066a5 <dim_enter_array@@Base+0xce5>
  405b7a:	movsxd r15,ecx
  405b7d:	mov    DWORD PTR [r13+0x0],r12d
  405b81:	test   ecx,ecx
  405b83:	mov    QWORD PTR [rsp+0x28],rcx
  405b88:	mov    QWORD PTR [rsp],rbx
  405b8c:	jle    405bcd <dim_enter_array@@Base+0x20d>
  405b8e:	mov    rax,QWORD PTR [r13+r15*8+0x108]
  405b96:	mov    QWORD PTR [rsp+0x8],rax
  405b9b:	mov    r10,QWORD PTR [r13+r15*8+0x148]
  405ba3:	test   r10,r10
  405ba6:	jle    405ea1 <dim_enter_array@@Base+0x4e1>
  405bac:	test   r14d,r14d
  405baf:	jg     405be6 <dim_enter_array@@Base+0x226>
  405bb1:	jmp    406198 <dim_enter_array@@Base+0x7d8>
  405bb6:	mov    DWORD PTR [rax],0xffffffff
  405bbc:	mov    QWORD PTR [rbp+rbx*1+0x55c],0x0
  405bc8:	jmp    406674 <dim_enter_array@@Base+0xcb4>
  405bcd:	mov    r10d,0x1
  405bd3:	test   r14d,r14d
  405bd6:	jle    405ecd <dim_enter_array@@Base+0x50d>
  405bdc:	mov    eax,0x1
  405be1:	mov    QWORD PTR [rsp+0x8],rax
  405be6:	mov    esi,r14d
  405be9:	lea    rcx,[rsi-0x1]
  405bed:	mov    r8d,esi
  405bf0:	and    r8d,0x3
  405bf4:	cmp    rcx,0x3
  405bf8:	jae    405c03 <dim_enter_array@@Base+0x243>
  405bfa:	xor    edx,edx
  405bfc:	xor    ecx,ecx
  405bfe:	jmp    405c90 <dim_enter_array@@Base+0x2d0>
  405c03:	lea    rdi,[rbx+rbp*1]
  405c07:	add    rdi,0x548
  405c0e:	lea    rbp,[r15*4+0x54]
  405c16:	add    rbp,r13
  405c19:	sub    rsi,r8
  405c1c:	xor    edx,edx
  405c1e:	mov    ebx,0x1
  405c23:	xor    ecx,ecx
  405c25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c2f:	nop
  405c30:	mov    eax,DWORD PTR [rdi+rdx*4-0xc]
  405c34:	mov    DWORD PTR [rbp+rdx*4-0x50],eax
  405c38:	mov    DWORD PTR [rbp+rdx*4-0xc],0x0
  405c40:	cmp    eax,0xffffffff
  405c43:	mov    eax,DWORD PTR [rdi+rdx*4-0x8]
  405c47:	mov    DWORD PTR [rbp+rdx*4-0x4c],eax
  405c4b:	mov    DWORD PTR [rbp+rdx*4-0x8],0x0
  405c53:	cmove  ecx,ebx
  405c56:	cmp    eax,0xffffffff
  405c59:	mov    eax,DWORD PTR [rdi+rdx*4-0x4]
  405c5d:	mov    DWORD PTR [rbp+rdx*4-0x48],eax
  405c61:	mov    DWORD PTR [rbp+rdx*4-0x4],0x0
  405c69:	cmove  ecx,ebx
  405c6c:	cmp    eax,0xffffffff
  405c6f:	mov    eax,DWORD PTR [rdi+rdx*4]
  405c72:	mov    DWORD PTR [rbp+rdx*4-0x44],eax
  405c76:	mov    DWORD PTR [rbp+rdx*4+0x0],0x0
  405c7e:	cmove  ecx,ebx
  405c81:	cmp    eax,0xffffffff
  405c84:	cmove  ecx,ebx
  405c87:	add    rdx,0x4
  405c8b:	cmp    rsi,rdx
  405c8e:	jne    405c30 <dim_enter_array@@Base+0x270>
  405c90:	test   r8,r8
  405c93:	mov    rbx,QWORD PTR [rsp]
  405c97:	je     405ced <dim_enter_array@@Base+0x32d>
  405c99:	lea    rax,[rdx*4+0x0]
  405ca1:	lea    rax,[rax+r15*4]
  405ca5:	lea    rsi,[rax+r13*1]
  405ca9:	add    rsi,0x48
  405cad:	lea    rax,[rbx+rdx*4]
  405cb1:	lea    rdx,[rip+0xa6b0]        # 410368 <traverse_info@@Base>
  405cb8:	add    rdx,rax
  405cbb:	add    rdx,0x53c
  405cc2:	xor    edi,edi
  405cc4:	mov    ebp,0x1
  405cc9:	nop    DWORD PTR [rax+0x0]
  405cd0:	mov    eax,DWORD PTR [rdx+rdi*4]
  405cd3:	mov    DWORD PTR [rsi+rdi*4-0x44],eax
  405cd7:	mov    DWORD PTR [rsi+rdi*4],0x0
  405cde:	cmp    eax,0xffffffff
  405ce1:	cmove  ecx,ebp
  405ce4:	add    rdi,0x1
  405ce8:	cmp    r8,rdi
  405ceb:	jne    405cd0 <dim_enter_array@@Base+0x310>
  405ced:	test   ecx,ecx
  405cef:	je     405ebe <dim_enter_array@@Base+0x4fe>
  405cf5:	mov    QWORD PTR [rsp+0x18],r10
  405cfa:	mov    rax,r15
  405cfd:	lea    rcx,[rip+0xa664]        # 410368 <traverse_info@@Base>
  405d04:	lea    r15,[rcx+rbx*1]
  405d08:	add    r15,0x538
  405d0f:	mov    rcx,QWORD PTR [rsp+0x8]
  405d14:	lea    rbp,[rcx*4+0x0]
  405d1c:	lea    r14,[rax*4+0xb0]
  405d24:	add    r14,r13
  405d27:	mov    QWORD PTR [rsp+0x10],rax
  405d2c:	lea    r12,[rax*8+0x70]
  405d34:	add    r12,r13
  405d37:	xor    ebx,ebx
  405d39:	jmp    405d70 <dim_enter_array@@Base+0x3b0>
  405d3b:	mov    edi,0xffffffff
  405d40:	mov    r8d,0x1c8
  405d46:	xor    eax,eax
  405d48:	lea    rsi,[rip+0x630e]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  405d4f:	mov    rdx,rbp
  405d52:	lea    rcx,[rip+0x66aa]        # 40c403 <_IO_stdin_used@@Base+0x403>
  405d59:	call   4030d0 <coda_set_error@plt>
  405d5e:	xor    eax,eax
  405d60:	call   40a6f0 <handle_coda_error@@Base>
  405d65:	cmp    QWORD PTR [rsp+0x8],0x0
  405d6b:	jg     405db5 <dim_enter_array@@Base+0x3f5>
  405d6d:	jmp    405dc6 <dim_enter_array@@Base+0x406>
  405d6f:	nop
  405d70:	cmp    DWORD PTR [r15+rbx*4+0x4],0xffffffff
  405d76:	je     405d90 <dim_enter_array@@Base+0x3d0>
  405d78:	mov    DWORD PTR [r14+rbx*4],0x0
  405d80:	mov    QWORD PTR [r12+rbx*8],0x0
  405d88:	jmp    405dc6 <dim_enter_array@@Base+0x406>
  405d8a:	nop    WORD PTR [rax+rax*1+0x0]
  405d90:	mov    rax,QWORD PTR [rsp+0x28]
  405d95:	mov    DWORD PTR [r14+rbx*4],eax
  405d99:	mov    rdi,rbp
  405d9c:	vzeroupper 
  405d9f:	call   4033f0 <malloc@plt>
  405da4:	mov    QWORD PTR [r12+rbx*8],rax
  405da8:	test   rax,rax
  405dab:	je     405d3b <dim_enter_array@@Base+0x37b>
  405dad:	cmp    QWORD PTR [rsp+0x8],0x0
  405db3:	jle    405dc6 <dim_enter_array@@Base+0x406>
  405db5:	mov    rdi,QWORD PTR [r12+rbx*8]
  405db9:	mov    esi,0xff
  405dbe:	mov    rdx,rbp
  405dc1:	call   403280 <memset@plt>
  405dc6:	add    rbx,0x1
  405dca:	movsxd rax,DWORD PTR [r15]
  405dcd:	cmp    rbx,rax
  405dd0:	jl     405d70 <dim_enter_array@@Base+0x3b0>
  405dd2:	lea    rbp,[rip+0xa58f]        # 410368 <traverse_info@@Base>
  405dd9:	mov    rbx,QWORD PTR [rsp]
  405ddd:	mov    DWORD PTR [rbp+rbx*1+0x560],0x0
  405de8:	xor    edi,edi
  405dea:	xor    esi,esi
  405dec:	xor    edx,edx
  405dee:	vzeroupper 
  405df1:	call   4066f0 <dim_enter_array@@Base+0xd30>
  405df6:	mov    r14d,DWORD PTR [r15]
  405df9:	test   r14d,r14d
  405dfc:	jle    406035 <dim_enter_array@@Base+0x675>
  405e02:	mov    rax,QWORD PTR [rsp+0x10]
  405e07:	lea    rbx,[rax*4+0x4]
  405e0f:	add    rbx,r13
  405e12:	xor    ebp,ebp
  405e14:	xor    r11d,r11d
  405e17:	mov    r10,QWORD PTR [rsp+0x18]
  405e1c:	nop    DWORD PTR [rax+0x0]
  405e20:	cmp    DWORD PTR [r15+rbp*4+0x4],0xffffffff
  405e26:	jne    405e80 <dim_enter_array@@Base+0x4c0>
  405e28:	mov    eax,DWORD PTR [rbx+rbp*4]
  405e2b:	cmp    eax,DWORD PTR [rbx+rbp*4+0x20]
  405e2f:	jne    405e65 <dim_enter_array@@Base+0x4a5>
  405e31:	mov    DWORD PTR [rbx+rbp*4+0x44],0x0
  405e39:	mov    rdi,QWORD PTR [r12+rbp*8]
  405e3d:	mov    r14d,r11d
  405e40:	call   403070 <free@plt>
  405e45:	mov    r11d,r14d
  405e48:	mov    r10,QWORD PTR [rsp+0x18]
  405e4d:	mov    QWORD PTR [r12+rbp*8],0x0
  405e55:	mov    DWORD PTR [rbx+rbp*4+0xac],0x0
  405e60:	mov    r14d,DWORD PTR [r15]
  405e63:	jmp    405e80 <dim_enter_array@@Base+0x4c0>
  405e65:	mov    DWORD PTR [rbx+rbp*4+0x44],0x1
  405e6d:	mov    r11d,0x1
  405e73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e7d:	nop    DWORD PTR [rax]
  405e80:	add    rbp,0x1
  405e84:	movsxd rax,r14d
  405e87:	cmp    rbp,rax
  405e8a:	jl     405e20 <dim_enter_array@@Base+0x460>
  405e8c:	mov    r15,QWORD PTR [rsp+0x10]
  405e91:	lea    rbp,[rip+0xa4d0]        # 410368 <traverse_info@@Base>
  405e98:	mov    rbx,QWORD PTR [rsp]
  405e9c:	jmp    40619b <dim_enter_array@@Base+0x7db>
  405ea1:	test   r14d,r14d
  405ea4:	jle    406198 <dim_enter_array@@Base+0x7d8>
  405eaa:	mov    eax,r14d
  405ead:	cmp    r14d,0x7
  405eb1:	ja     406044 <dim_enter_array@@Base+0x684>
  405eb7:	xor    ecx,ecx
  405eb9:	jmp    406172 <dim_enter_array@@Base+0x7b2>
  405ebe:	xor    r11d,r11d
  405ec1:	lea    rbp,[rip+0xa4a0]        # 410368 <traverse_info@@Base>
  405ec8:	jmp    40619b <dim_enter_array@@Base+0x7db>
  405ecd:	xor    r11d,r11d
  405ed0:	mov    r8d,0x1
  405ed6:	jmp    4061a7 <dim_enter_array@@Base+0x7e7>
  405edb:	mov    eax,r14d
  405ede:	and    eax,0xfffffff0
  405ee1:	lea    rsi,[rax-0x10]
  405ee5:	mov    rcx,rsi
  405ee8:	shr    rcx,0x4
  405eec:	add    rcx,0x1
  405ef0:	mov    edx,ecx
  405ef2:	and    edx,0x1
  405ef5:	test   rsi,rsi
  405ef8:	je     406073 <dim_enter_array@@Base+0x6b3>
  405efe:	lea    rsi,[rbx+rbp*1]
  405f02:	add    rsi,0x5ac
  405f09:	mov    edi,0x1
  405f0e:	sub    rdi,rcx
  405f11:	add    rdi,rdx
  405f14:	add    rdi,0xffffffffffffffff
  405f18:	xor    ecx,ecx
  405f1a:	vmovaps ymm0,YMMWORD PTR [rip+0x643e]        # 40c360 <_IO_stdin_used@@Base+0x360>
  405f22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f2c:	nop    DWORD PTR [rax+0x0]
  405f30:	vpermps ymm1,ymm0,YMMWORD PTR [rsp+rcx*8+0x30]
  405f37:	vpermps ymm2,ymm0,YMMWORD PTR [rsp+rcx*8+0x50]
  405f3e:	vpermps ymm3,ymm0,YMMWORD PTR [rsp+rcx*8+0x70]
  405f45:	vpermps ymm4,ymm0,YMMWORD PTR [rsp+rcx*8+0x90]
  405f4f:	vinsertf128 ymm1,ymm1,xmm2,0x1
  405f55:	vmovups YMMWORD PTR [rsi+rcx*4-0x70],ymm1
  405f5b:	vinsertf128 ymm1,ymm3,xmm4,0x1
  405f61:	vmovups YMMWORD PTR [rsi+rcx*4-0x50],ymm1
  405f67:	vpermps ymm1,ymm0,YMMWORD PTR [rsp+rcx*8+0xb0]
  405f71:	vpermps ymm2,ymm0,YMMWORD PTR [rsp+rcx*8+0xd0]
  405f7b:	vpermps ymm3,ymm0,YMMWORD PTR [rsp+rcx*8+0xf0]
  405f85:	vpermps ymm4,ymm0,YMMWORD PTR [rsp+rcx*8+0x110]
  405f8f:	vinsertf128 ymm1,ymm1,xmm2,0x1
  405f95:	vmovups YMMWORD PTR [rsi+rcx*4-0x30],ymm1
  405f9b:	vinsertf128 ymm1,ymm3,xmm4,0x1
  405fa1:	vmovups YMMWORD PTR [rsi+rcx*4-0x10],ymm1
  405fa7:	add    rcx,0x20
  405fab:	add    rdi,0x2
  405faf:	jne    405f30 <dim_enter_array@@Base+0x570>
  405fb5:	test   rdx,rdx
  405fb8:	je     406009 <dim_enter_array@@Base+0x649>
  405fba:	vmovaps ymm0,YMMWORD PTR [rip+0x639e]        # 40c360 <_IO_stdin_used@@Base+0x360>
  405fc2:	vpermps ymm1,ymm0,YMMWORD PTR [rsp+rcx*8+0x30]
  405fc9:	vpermps ymm2,ymm0,YMMWORD PTR [rsp+rcx*8+0x50]
  405fd0:	vpermps ymm3,ymm0,YMMWORD PTR [rsp+rcx*8+0x70]
  405fd7:	vpermps ymm0,ymm0,YMMWORD PTR [rsp+rcx*8+0x90]
  405fe1:	lea    rdx,[rip+0xa380]        # 410368 <traverse_info@@Base>
  405fe8:	add    rdx,rbx
  405feb:	vinsertf128 ymm1,ymm1,xmm2,0x1
  405ff1:	vmovups YMMWORD PTR [rdx+rcx*4+0x53c],ymm1
  405ffa:	vinsertf128 ymm0,ymm3,xmm0,0x1
  406000:	vmovups YMMWORD PTR [rdx+rcx*4+0x55c],ymm0
  406009:	cmp    rax,r14
  40600c:	je     405b49 <dim_enter_array@@Base+0x189>
  406012:	lea    rcx,[rbx+rbp*1]
  406016:	add    rcx,0x53c
  40601d:	nop    DWORD PTR [rax]
  406020:	mov    edx,DWORD PTR [rsp+rax*8+0x30]
  406024:	mov    DWORD PTR [rcx+rax*4],edx
  406027:	add    rax,0x1
  40602b:	cmp    r14,rax
  40602e:	jne    406020 <dim_enter_array@@Base+0x660>
  406030:	jmp    405b49 <dim_enter_array@@Base+0x189>
  406035:	mov    r15,QWORD PTR [rsp+0x10]
  40603a:	mov    r10,QWORD PTR [rsp+0x18]
  40603f:	jmp    406198 <dim_enter_array@@Base+0x7d8>
  406044:	mov    ecx,eax
  406046:	and    ecx,0xfffffff8
  406049:	lea    rdi,[rcx-0x8]
  40604d:	mov    rsi,rdi
  406050:	shr    rsi,0x3
  406054:	add    rsi,0x1
  406058:	mov    edx,esi
  40605a:	and    edx,0x7
  40605d:	cmp    rdi,0x38
  406061:	jae    406080 <dim_enter_array@@Base+0x6c0>
  406063:	xor    esi,esi
  406065:	test   rdx,rdx
  406068:	jne    40612d <dim_enter_array@@Base+0x76d>
  40606e:	jmp    406163 <dim_enter_array@@Base+0x7a3>
  406073:	xor    ecx,ecx
  406075:	test   rdx,rdx
  406078:	jne    405fba <dim_enter_array@@Base+0x5fa>
  40607e:	jmp    406009 <dim_enter_array@@Base+0x649>
  406080:	lea    rdi,[r15*4+0x128]
  406088:	add    rdi,r13
  40608b:	mov    ebp,0x1
  406090:	sub    rbp,rsi
  406093:	add    rbp,rdx
  406096:	add    rbp,0xffffffffffffffff
  40609a:	xor    esi,esi
  40609c:	vxorps xmm0,xmm0,xmm0
  4060a0:	vmovups YMMWORD PTR [rdi+rsi*4-0x124],ymm0
  4060a9:	vmovups YMMWORD PTR [rdi+rsi*4-0xe0],ymm0
  4060b2:	vmovups YMMWORD PTR [rdi+rsi*4-0x104],ymm0
  4060bb:	vmovups YMMWORD PTR [rdi+rsi*4-0xc0],ymm0
  4060c4:	vmovups YMMWORD PTR [rdi+rsi*4-0xe4],ymm0
  4060cd:	vmovups YMMWORD PTR [rdi+rsi*4-0xa0],ymm0
  4060d6:	vmovups YMMWORD PTR [rdi+rsi*4-0xc4],ymm0
  4060df:	vmovups YMMWORD PTR [rdi+rsi*4-0x80],ymm0
  4060e5:	vmovups YMMWORD PTR [rdi+rsi*4-0xa4],ymm0
  4060ee:	vmovups YMMWORD PTR [rdi+rsi*4-0x60],ymm0
  4060f4:	vmovups YMMWORD PTR [rdi+rsi*4-0x84],ymm0
  4060fd:	vmovups YMMWORD PTR [rdi+rsi*4-0x40],ymm0
  406103:	vmovups YMMWORD PTR [rdi+rsi*4-0x64],ymm0
  406109:	vmovups YMMWORD PTR [rdi+rsi*4-0x20],ymm0
  40610f:	vmovups YMMWORD PTR [rdi+rsi*4-0x44],ymm0
  406115:	vmovups YMMWORD PTR [rdi+rsi*4],ymm0
  40611a:	add    rsi,0x40
  40611e:	add    rbp,0x8
  406122:	jne    4060a0 <dim_enter_array@@Base+0x6e0>
  406128:	test   rdx,rdx
  40612b:	je     406163 <dim_enter_array@@Base+0x7a3>
  40612d:	add    rsi,r15
  406130:	lea    rsi,[rsi*4+0x48]
  406138:	add    rsi,r13
  40613b:	neg    rdx
  40613e:	vxorps xmm0,xmm0,xmm0
  406142:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40614c:	nop    DWORD PTR [rax+0x0]
  406150:	vmovups YMMWORD PTR [rsi-0x44],ymm0
  406155:	vmovups YMMWORD PTR [rsi],ymm0
  406159:	add    rsi,0x20
  40615d:	add    rdx,0x1
  406161:	jne    406150 <dim_enter_array@@Base+0x790>
  406163:	xor    r11d,r11d
  406166:	cmp    rcx,rax
  406169:	lea    rbp,[rip+0xa1f8]        # 410368 <traverse_info@@Base>
  406170:	je     40619b <dim_enter_array@@Base+0x7db>
  406172:	lea    rdx,[r15*4+0x48]
  40617a:	add    rdx,r13
  40617d:	nop    DWORD PTR [rax]
  406180:	mov    DWORD PTR [rdx+rcx*4-0x44],0x0
  406188:	mov    DWORD PTR [rdx+rcx*4],0x0
  40618f:	add    rcx,0x1
  406193:	cmp    rax,rcx
  406196:	jne    406180 <dim_enter_array@@Base+0x7c0>
  406198:	xor    r11d,r11d
  40619b:	mov    r8,r10
  40619e:	mov    r12d,DWORD PTR [r13+0x0]
  4061a2:	mov    r10,QWORD PTR [rsp+0x8]
  4061a7:	mov    DWORD PTR [r13+0x44],0x0
  4061af:	mov    DWORD PTR [r13+0x68],0xffffffff
  4061b7:	test   r12d,r12d
  4061ba:	jle    40627e <dim_enter_array@@Base+0x8be>
  4061c0:	movsxd rsi,r12d
  4061c3:	lea    rax,[rsi-0x1]
  4061c7:	mov    ecx,r12d
  4061ca:	and    ecx,0x3
  4061cd:	cmp    rax,0x3
  4061d1:	jae    4061df <dim_enter_array@@Base+0x81f>
  4061d3:	xor    edx,edx
  4061d5:	test   rcx,rcx
  4061d8:	jne    406257 <dim_enter_array@@Base+0x897>
  4061da:	jmp    40627e <dim_enter_array@@Base+0x8be>
  4061df:	sub    rsi,rcx
  4061e2:	xor    edx,edx
  4061e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061ee:	xchg   ax,ax
  4061f0:	cmp    DWORD PTR [r13+rdx*4+0x48],0x0
  4061f6:	je     406204 <dim_enter_array@@Base+0x844>
  4061f8:	mov    DWORD PTR [r13+0x44],0x1
  406200:	mov    DWORD PTR [r13+0x68],edx
  406204:	cmp    DWORD PTR [r13+rdx*4+0x4c],0x0
  40620a:	je     40621b <dim_enter_array@@Base+0x85b>
  40620c:	mov    DWORD PTR [r13+0x44],0x1
  406214:	lea    eax,[rdx+0x1]
  406217:	mov    DWORD PTR [r13+0x68],eax
  40621b:	cmp    DWORD PTR [r13+rdx*4+0x50],0x0
  406221:	je     406232 <dim_enter_array@@Base+0x872>
  406223:	mov    DWORD PTR [r13+0x44],0x1
  40622b:	lea    eax,[rdx+0x2]
  40622e:	mov    DWORD PTR [r13+0x68],eax
  406232:	cmp    DWORD PTR [r13+rdx*4+0x54],0x0
  406238:	je     406249 <dim_enter_array@@Base+0x889>
  40623a:	mov    DWORD PTR [r13+0x44],0x1
  406242:	lea    eax,[rdx+0x3]
  406245:	mov    DWORD PTR [r13+0x68],eax
  406249:	add    rdx,0x4
  40624d:	cmp    rsi,rdx
  406250:	jne    4061f0 <dim_enter_array@@Base+0x830>
  406252:	test   rcx,rcx
  406255:	je     40627e <dim_enter_array@@Base+0x8be>
  406257:	neg    rcx
  40625a:	nop    WORD PTR [rax+rax*1+0x0]
  406260:	cmp    DWORD PTR [r13+rdx*4+0x48],0x0
  406266:	je     406274 <dim_enter_array@@Base+0x8b4>
  406268:	mov    DWORD PTR [r13+0x44],0x1
  406270:	mov    DWORD PTR [r13+0x68],edx
  406274:	add    rdx,0x1
  406278:	add    rcx,0x1
  40627c:	jne    406260 <dim_enter_array@@Base+0x8a0>
  40627e:	mov    DWORD PTR [rbp+rbx*1+0x55c],0x1
  406289:	test   r14d,r14d
  40628c:	jle    406370 <dim_enter_array@@Base+0x9b0>
  406292:	mov    r9d,r14d
  406295:	and    r9d,0x1
  406299:	cmp    r14d,0x1
  40629d:	jne    4062a8 <dim_enter_array@@Base+0x8e8>
  40629f:	mov    ecx,0x1
  4062a4:	xor    esi,esi
  4062a6:	jmp    40631e <dim_enter_array@@Base+0x95e>
  4062a8:	movsxd rdi,r14d
  4062ab:	lea    rbp,[r15*8+0x118]
  4062b3:	add    rbp,r13
  4062b6:	lea    rbx,[r15*4+0x8]
  4062be:	add    rbx,r13
  4062c1:	sub    rdi,r9
  4062c4:	mov    eax,0x1
  4062c9:	xor    esi,esi
  4062cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4062d0:	movsxd rdx,DWORD PTR [rbx+rsi*4-0x4]
  4062d5:	mov    ecx,edx
  4062d7:	imul   ecx,eax
  4062da:	test   rsi,rsi
  4062dd:	je     4062f0 <dim_enter_array@@Base+0x930>
  4062df:	imul   rdx,QWORD PTR [rbp+rsi*8-0x10]
  4062e5:	mov    QWORD PTR [rbp+rsi*8-0x8],rdx
  4062ea:	jmp    406301 <dim_enter_array@@Base+0x941>
  4062ec:	nop    DWORD PTR [rax+0x0]
  4062f0:	movsxd rax,DWORD PTR [r13+r15*4+0x4]
  4062f5:	imul   rax,r10
  4062f9:	mov    QWORD PTR [r13+r15*8+0x110],rax
  406301:	movsxd rax,DWORD PTR [rbx+rsi*4]
  406305:	imul   ecx,eax
  406308:	imul   rax,QWORD PTR [rbp+rsi*8-0x8]
  40630e:	mov    QWORD PTR [rbp+rsi*8+0x0],rax
  406313:	add    rsi,0x2
  406317:	mov    eax,ecx
  406319:	cmp    rdi,rsi
  40631c:	jne    4062d0 <dim_enter_array@@Base+0x910>
  40631e:	lea    rax,[rip+0xa043]        # 410368 <traverse_info@@Base>
  406325:	mov    rdx,QWORD PTR [rsp]
  406329:	lea    rdi,[rax+rdx*1]
  40632d:	add    rdi,0x55c
  406334:	test   r9,r9
  406337:	je     40636e <dim_enter_array@@Base+0x9ae>
  406339:	lea    rax,[rsi+r15*1]
  40633d:	movsxd rdx,DWORD PTR [r13+rax*4+0x4]
  406342:	imul   ecx,edx
  406345:	test   rsi,rsi
  406348:	je     40635d <dim_enter_array@@Base+0x99d>
  40634a:	imul   rdx,QWORD PTR [r13+rax*8+0x108]
  406353:	mov    QWORD PTR [r13+rax*8+0x110],rdx
  40635b:	jmp    40636e <dim_enter_array@@Base+0x9ae>
  40635d:	movsxd rax,DWORD PTR [r13+r15*4+0x4]
  406362:	imul   rax,r10
  406366:	mov    QWORD PTR [r13+r15*8+0x110],rax
  40636e:	mov    DWORD PTR [rdi],ecx
  406370:	test   r11d,r11d
  406373:	je     4064cd <dim_enter_array@@Base+0xb0d>
  406379:	test   r14d,r14d
  40637c:	jle    4063a0 <dim_enter_array@@Base+0x9e0>
  40637e:	lea    rdi,[r15*8+0x150]
  406386:	add    rdi,r13
  406389:	mov    edx,r14d
  40638c:	shl    rdx,0x3
  406390:	xor    esi,esi
  406392:	mov    rbx,r10
  406395:	vzeroupper 
  406398:	call   403280 <memset@plt>
  40639d:	mov    r10,rbx
  4063a0:	test   r10,r10
  4063a3:	jle    4065c5 <dim_enter_array@@Base+0xc05>
  4063a9:	mov    r9d,r14d
  4063ac:	mov    r8d,r9d
  4063af:	and    r8d,0x1
  4063b3:	lea    rdx,[r15*8+0x158]
  4063bb:	add    rdx,r13
  4063be:	lea    rbx,[r15*4+0x0]
  4063c6:	add    rbx,r13
  4063c9:	sub    r9,r8
  4063cc:	xor    edi,edi
  4063ce:	xchg   ax,ax
  4063d0:	test   r14d,r14d
  4063d3:	jle    4064bb <dim_enter_array@@Base+0xafb>
  4063d9:	mov    ecx,0x1
  4063de:	cmp    r14d,0x1
  4063e2:	jne    406400 <dim_enter_array@@Base+0xa40>
  4063e4:	xor    ebp,ebp
  4063e6:	test   r8,r8
  4063e9:	jne    406484 <dim_enter_array@@Base+0xac4>
  4063ef:	jmp    4064bb <dim_enter_array@@Base+0xafb>
  4063f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4063fe:	xchg   ax,ax
  406400:	mov    rsi,rbx
  406403:	xor    ebp,ebp
  406405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40640f:	nop
  406410:	cmp    DWORD PTR [rbx+rbp*4+0x48],0x0
  406415:	je     406430 <dim_enter_array@@Base+0xa70>
  406417:	lea    rax,[rdi*4+0x0]
  40641f:	add    rax,QWORD PTR [rdx+rbp*8-0xe8]
  406427:	jmp    406434 <dim_enter_array@@Base+0xa74>
  406429:	nop    DWORD PTR [rax+0x0]
  406430:	lea    rax,[rsi+0x4]
  406434:	movsxd rax,DWORD PTR [rax]
  406437:	movsxd rcx,ecx
  40643a:	imul   rcx,rax
  40643e:	add    QWORD PTR [rdx+rbp*8-0x8],rcx
  406443:	cmp    DWORD PTR [rbx+rbp*4+0x4c],0x0
  406448:	je     406460 <dim_enter_array@@Base+0xaa0>
  40644a:	lea    rax,[rdi*4+0x0]
  406452:	add    rax,QWORD PTR [rdx+rbp*8-0xe0]
  40645a:	jmp    406464 <dim_enter_array@@Base+0xaa4>
  40645c:	nop    DWORD PTR [rax+0x0]
  406460:	lea    rax,[rsi+0x8]
  406464:	movsxd rax,DWORD PTR [rax]
  406467:	movsxd rcx,ecx
  40646a:	imul   rcx,rax
  40646e:	add    QWORD PTR [rdx+rbp*8],rcx
  406472:	add    rbp,0x2
  406476:	add    rsi,0x8
  40647a:	cmp    r9,rbp
  40647d:	jne    406410 <dim_enter_array@@Base+0xa50>
  40647f:	test   r8,r8
  406482:	je     4064bb <dim_enter_array@@Base+0xafb>
  406484:	add    rbp,r15
  406487:	cmp    DWORD PTR [r13+rbp*4+0x48],0x0
  40648d:	je     40649e <dim_enter_array@@Base+0xade>
  40648f:	lea    rax,[rdi*4+0x0]
  406497:	add    rax,QWORD PTR [r13+rbp*8+0x70]
  40649c:	jmp    4064a9 <dim_enter_array@@Base+0xae9>
  40649e:	lea    rax,[rbp*4+0x4]
  4064a6:	add    rax,r13
  4064a9:	movsxd rax,DWORD PTR [rax]
  4064ac:	movsxd rcx,ecx
  4064af:	imul   rcx,rax
  4064b3:	add    QWORD PTR [r13+rbp*8+0x150],rcx
  4064bb:	add    rdi,0x1
  4064bf:	cmp    rdi,r10
  4064c2:	jne    4063d0 <dim_enter_array@@Base+0xa10>
  4064c8:	jmp    4065c5 <dim_enter_array@@Base+0xc05>
  4064cd:	movsxd rax,DWORD PTR [r13+r15*4+0x4]
  4064d2:	imul   r8,rax
  4064d6:	mov    QWORD PTR [r13+r15*8+0x150],r8
  4064de:	cmp    r14d,0x2
  4064e2:	jl     4065c5 <dim_enter_array@@Base+0xc05>
  4064e8:	mov    esi,r14d
  4064eb:	mov    rcx,QWORD PTR [r13+r15*8+0x150]
  4064f3:	lea    rdx,[rsi-0x2]
  4064f7:	lea    eax,[r14-0x1]
  4064fb:	and    eax,0x3
  4064fe:	cmp    rdx,0x3
  406502:	jae    406512 <dim_enter_array@@Base+0xb52>
  406504:	mov    edx,0x1
  406509:	test   eax,eax
  40650b:	jne    406588 <dim_enter_array@@Base+0xbc8>
  40650d:	jmp    4065c5 <dim_enter_array@@Base+0xc05>
  406512:	lea    rdi,[r15*8+0x170]
  40651a:	add    rdi,r13
  40651d:	lea    rbp,[r15*4+0x14]
  406525:	add    rbp,r13
  406528:	add    rsi,0xffffffffffffffff
  40652c:	sub    rsi,rax
  40652f:	xor    edx,edx
  406531:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40653b:	nop    DWORD PTR [rax+rax*1+0x0]
  406540:	movsxd rbx,DWORD PTR [rbp+rdx*4-0xc]
  406545:	imul   rbx,rcx
  406549:	mov    QWORD PTR [rdi+rdx*8-0x18],rbx
  40654e:	movsxd rcx,DWORD PTR [rbp+rdx*4-0x8]
  406553:	imul   rcx,rbx
  406557:	mov    QWORD PTR [rdi+rdx*8-0x10],rcx
  40655c:	movsxd rbx,DWORD PTR [rbp+rdx*4-0x4]
  406561:	imul   rbx,rcx
  406565:	mov    QWORD PTR [rdi+rdx*8-0x8],rbx
  40656a:	movsxd rcx,DWORD PTR [rbp+rdx*4+0x0]
  40656f:	imul   rcx,rbx
  406573:	mov    QWORD PTR [rdi+rdx*8],rcx
  406577:	add    rdx,0x4
  40657b:	cmp    rsi,rdx
  40657e:	jne    406540 <dim_enter_array@@Base+0xb80>
  406580:	add    rdx,0x1
  406584:	test   eax,eax
  406586:	je     4065c5 <dim_enter_array@@Base+0xc05>
  406588:	lea    rsi,[rdx*8+0x0]
  406590:	lea    rsi,[rsi+r15*8]
  406594:	add    rsi,r13
  406597:	add    rsi,0x150
  40659e:	shl    rdx,0x2
  4065a2:	lea    rdx,[rdx+r15*4]
  4065a6:	add    rdx,r13
  4065a9:	add    rdx,0x4
  4065ad:	xor    edi,edi
  4065af:	nop
  4065b0:	movsxd rbp,DWORD PTR [rdx+rdi*4]
  4065b4:	imul   rcx,rbp
  4065b8:	mov    QWORD PTR [rsi+rdi*8],rcx
  4065bc:	add    rdi,0x1
  4065c0:	cmp    rax,rdi
  4065c3:	jne    4065b0 <dim_enter_array@@Base+0xbf0>
  4065c5:	mov    rdi,QWORD PTR [rsp+0x28]
  4065ca:	lea    eax,[rdi+r14*1]
  4065ce:	add    eax,0xffffffff
  4065d1:	cdqe   
  4065d3:	cmp    QWORD PTR [r13+rax*8+0x150],0x0
  4065dc:	jle    406674 <dim_enter_array@@Base+0xcb4>
  4065e2:	movsxd rax,r12d
  4065e5:	movsxd rcx,DWORD PTR [r13+rax*4+0x0]
  4065ea:	mov    QWORD PTR [r13+rax*8+0xc8],rcx
  4065f2:	cmp    r14d,0x2
  4065f6:	jl     406637 <dim_enter_array@@Base+0xc77>
  4065f8:	add    r14d,0xfffffffe
  4065fc:	movsxd rax,r14d
  4065ff:	lea    rcx,[r15*8+0xd8]
  406607:	add    rcx,r13
  40660a:	lea    rdx,[r15*4+0x4]
  406612:	add    rdx,r13
  406615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40661f:	nop
  406620:	movsxd rsi,DWORD PTR [rdx+rax*4]
  406624:	imul   rsi,QWORD PTR [rcx+rax*8]
  406629:	mov    QWORD PTR [rcx+rax*8-0x8],rsi
  40662e:	test   rax,rax
  406631:	lea    rax,[rax-0x1]
  406635:	jg     406620 <dim_enter_array@@Base+0xc60>
  406637:	test   edi,edi
  406639:	jle    406674 <dim_enter_array@@Base+0xcb4>
  40663b:	mov    rax,r15
  40663e:	add    rax,0x19
  406642:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40664c:	nop    DWORD PTR [rax+0x0]
  406650:	mov    rcx,QWORD PTR [r13+rax*8+0x0]
  406655:	imul   rcx,QWORD PTR [r13+r15*8+0xd0]
  40665e:	mov    QWORD PTR [r13+rax*8+0x0],rcx
  406663:	lea    rcx,[rax-0x1]
  406667:	add    rax,0xffffffffffffffe7
  40666b:	cmp    rax,0x1
  40666f:	mov    rax,rcx
  406672:	jg     406650 <dim_enter_array@@Base+0xc90>
  406674:	add    rsp,0x78
  406678:	pop    rbx
  406679:	pop    r12
  40667b:	pop    r13
  40667d:	pop    r14
  40667f:	pop    r15
  406681:	pop    rbp
  406682:	vzeroupper 
  406685:	ret    
  406686:	lea    rdi,[rip+0x5ca7]        # 40c334 <_IO_stdin_used@@Base+0x334>
  40668d:	lea    rsi,[rip+0x5d6f]        # 40c403 <_IO_stdin_used@@Base+0x403>
  406694:	lea    rcx,[rip+0x5e09]        # 40c4a4 <_IO_stdin_used@@Base+0x4a4>
  40669b:	mov    edx,0x182
  4066a0:	call   403240 <__assert_fail@plt>
  4066a5:	lea    rdi,[rip+0x5e0f]        # 40c4bb <_IO_stdin_used@@Base+0x4bb>
  4066ac:	lea    rsi,[rip+0x5d50]        # 40c403 <_IO_stdin_used@@Base+0x403>
  4066b3:	lea    rcx,[rip+0x5dea]        # 40c4a4 <_IO_stdin_used@@Base+0x4a4>
  4066ba:	mov    edx,0x192
  4066bf:	vzeroupper 
  4066c2:	call   403240 <__assert_fail@plt>
  4066c7:	lea    rdi,[rip+0x5c66]        # 40c334 <_IO_stdin_used@@Base+0x334>
  4066ce:	lea    rsi,[rip+0x5d2e]        # 40c403 <_IO_stdin_used@@Base+0x403>
  4066d5:	lea    rcx,[rip+0x5dc8]        # 40c4a4 <_IO_stdin_used@@Base+0x4a4>
  4066dc:	mov    edx,0x15d
  4066e1:	call   403240 <__assert_fail@plt>
  4066e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066f0:	push   rbp
  4066f1:	push   r15
  4066f3:	push   r14
  4066f5:	push   r13
  4066f7:	push   r12
  4066f9:	push   rbx
  4066fa:	sub    rsp,0x108
  406701:	mov    DWORD PTR [rsp+0xc],edx
  406705:	mov    r13d,esi
  406708:	mov    DWORD PTR [rsp+0x8],edi
  40670c:	mov    edi,0x118
  406711:	add    rdi,QWORD PTR [rip+0x98c8]        # 40ffe0 <traverse_info@@Base-0x388>
  406718:	lea    rsi,[rsp+0x1c]
  40671d:	call   4031e0 <coda_cursor_get_type_class@plt>
  406722:	test   eax,eax
  406724:	je     40672d <dim_enter_array@@Base+0xd6d>
  406726:	xor    eax,eax
  406728:	call   40a6f0 <handle_coda_error@@Base>
  40672d:	mov    eax,DWORD PTR [rsp+0x1c]
  406731:	lea    ecx,[rax-0x4]
  406734:	cmp    ecx,0x2
  406737:	jb     40682f <dim_enter_array@@Base+0xe6f>
  40673d:	test   eax,eax
  40673f:	je     40687c <dim_enter_array@@Base+0xebc>
  406745:	cmp    eax,0x1
  406748:	jne    406dcc <dim_enter_array@@Base+0x140c>
  40674e:	movsxd rax,r13d
  406751:	lea    rbx,[rax+rax*4]
  406755:	shl    rbx,0x4
  406759:	lea    r14,[rip+0x9c08]        # 410368 <traverse_info@@Base>
  406760:	movsxd r12,DWORD PTR [r14+rbx*1+0x534]
  406768:	cmp    DWORD PTR [r14+0xf34],r13d
  40676f:	jne    40696a <dim_enter_array@@Base+0xfaa>
  406775:	mov    edi,0x118
  40677a:	add    rdi,QWORD PTR [rip+0x985f]        # 40ffe0 <traverse_info@@Base-0x388>
  406781:	lea    rsi,[rsp+0x10]
  406786:	lea    rdx,[rsp+0x20]
  40678b:	call   403490 <coda_cursor_get_array_dim@plt>
  406790:	test   eax,eax
  406792:	je     40679b <dim_enter_array@@Base+0xddb>
  406794:	xor    eax,eax
  406796:	call   40a6f0 <handle_coda_error@@Base>
  40679b:	mov    eax,DWORD PTR [rsp+0x10]
  40679f:	cmp    eax,DWORD PTR [r14+rbx*1+0x538]
  4067a7:	jne    406e0a <dim_enter_array@@Base+0x144a>
  4067ad:	test   eax,eax
  4067af:	jle    406db7 <dim_enter_array@@Base+0x13f7>
  4067b5:	lea    rax,[r14+rbx*1]
  4067b9:	add    rax,0x538
  4067bf:	lea    rdx,[rip+0xad0a]        # 4114d0 <dim_info@@Base>
  4067c6:	lea    rcx,[rdx+r12*8]
  4067ca:	add    rcx,0x70
  4067ce:	lea    rdx,[rdx+r12*4]
  4067d2:	add    rdx,0x24
  4067d6:	xor    esi,esi
  4067d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4067e0:	cmp    DWORD PTR [rax+rsi*4+0x4],0xffffffff
  4067e5:	jne    40681e <dim_enter_array@@Base+0xe5e>
  4067e7:	mov    rdi,QWORD PTR [rsp+rsi*8+0x20]
  4067ec:	mov    rbp,QWORD PTR [rcx+rsi*8]
  4067f0:	movsxd rbx,DWORD PTR [rax+0x28]
  4067f4:	mov    DWORD PTR [rbp+rbx*4+0x0],edi
  4067f8:	movsxd rbp,DWORD PTR [rdx+rsi*4-0x20]
  4067fd:	cmp    rbp,0xffffffffffffffff
  406801:	je     406817 <dim_enter_array@@Base+0xe57>
  406803:	cmp    rdi,rbp
  406806:	jle    40680c <dim_enter_array@@Base+0xe4c>
  406808:	mov    DWORD PTR [rdx+rsi*4-0x20],edi
  40680c:	movsxd rbp,DWORD PTR [rdx+rsi*4]
  406810:	cmp    rdi,rbp
  406813:	jl     40681b <dim_enter_array@@Base+0xe5b>
  406815:	jmp    40681e <dim_enter_array@@Base+0xe5e>
  406817:	mov    DWORD PTR [rdx+rsi*4-0x20],edi
  40681b:	mov    DWORD PTR [rdx+rsi*4],edi
  40681e:	add    rsi,0x1
  406822:	movsxd rdi,DWORD PTR [rax]
  406825:	cmp    rsi,rdi
  406828:	jl     4067e0 <dim_enter_array@@Base+0xe20>
  40682a:	jmp    406db7 <dim_enter_array@@Base+0x13f7>
  40682f:	lea    rbx,[rip+0x9b32]        # 410368 <traverse_info@@Base>
  406836:	cmp    DWORD PTR [rbx+0xf34],r13d
  40683d:	jne    406deb <dim_enter_array@@Base+0x142b>
  406843:	mov    edi,0x118
  406848:	add    rdi,QWORD PTR [rip+0x9791]        # 40ffe0 <traverse_info@@Base-0x388>
  40684f:	cmp    eax,0x4
  406852:	jne    4068f0 <dim_enter_array@@Base+0xf30>
  406858:	lea    rsi,[rsp+0x10]
  40685d:	call   403370 <coda_cursor_get_string_length@plt>
  406862:	test   eax,eax
  406864:	je     40686d <dim_enter_array@@Base+0xead>
  406866:	xor    eax,eax
  406868:	call   40a6f0 <handle_coda_error@@Base>
  40686d:	mov    rax,QWORD PTR [rsp+0x10]
  406872:	mov    QWORD PTR [rsp+0x20],rax
  406877:	jmp    406905 <dim_enter_array@@Base+0xf45>
  40687c:	movsxd rbx,DWORD PTR [rsp+0xc]
  406881:	lea    r14,[rip+0x9ae0]        # 410368 <traverse_info@@Base>
  406888:	movsxd rsi,DWORD PTR [r14+rbx*4+0xfb8]
  406890:	lea    rbp,[r14+0x118]
  406897:	lea    rdx,[rsp+0x20]
  40689c:	mov    rdi,rbp
  40689f:	call   4030c0 <coda_cursor_get_record_field_available_status@plt>
  4068a4:	test   eax,eax
  4068a6:	je     4068af <dim_enter_array@@Base+0xeef>
  4068a8:	xor    eax,eax
  4068aa:	call   40a6f0 <handle_coda_error@@Base>
  4068af:	cmp    DWORD PTR [rsp+0x20],0x0
  4068b4:	je     406984 <dim_enter_array@@Base+0xfc4>
  4068ba:	movsxd rsi,DWORD PTR [r14+rbx*4+0xfb8]
  4068c2:	mov    rdi,rbp
  4068c5:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  4068ca:	test   eax,eax
  4068cc:	je     4068d5 <dim_enter_array@@Base+0xf15>
  4068ce:	xor    eax,eax
  4068d0:	call   40a6f0 <handle_coda_error@@Base>
  4068d5:	mov    edi,DWORD PTR [rsp+0x8]
  4068d9:	add    edi,0x1
  4068dc:	mov    edx,DWORD PTR [rsp+0xc]
  4068e0:	add    edx,0x1
  4068e3:	mov    esi,r13d
  4068e6:	call   4066f0 <dim_enter_array@@Base+0xd30>
  4068eb:	jmp    406da6 <dim_enter_array@@Base+0x13e6>
  4068f0:	lea    rsi,[rsp+0x20]
  4068f5:	call   403030 <coda_cursor_get_byte_size@plt>
  4068fa:	test   eax,eax
  4068fc:	je     406905 <dim_enter_array@@Base+0xf45>
  4068fe:	xor    eax,eax
  406900:	call   40a6f0 <handle_coda_error@@Base>
  406905:	movsxd rax,r13d
  406908:	lea    rsi,[rax+rax*4]
  40690c:	shl    rsi,0x4
  406910:	movsxd rcx,DWORD PTR [rbx+rsi*1+0x534]
  406918:	mov    rax,QWORD PTR [rsp+0x20]
  40691d:	lea    rdx,[rip+0xabac]        # 4114d0 <dim_info@@Base>
  406924:	mov    rdi,QWORD PTR [rdx+rcx*8+0x70]
  406929:	movsxd rsi,DWORD PTR [rbx+rsi*1+0x560]
  406931:	mov    DWORD PTR [rdi+rsi*4],eax
  406934:	movsxd rsi,DWORD PTR [rdx+rcx*4+0x4]
  406939:	cmp    rsi,0xffffffffffffffff
  40693d:	je     406957 <dim_enter_array@@Base+0xf97>
  40693f:	cmp    rax,rsi
  406942:	jle    406948 <dim_enter_array@@Base+0xf88>
  406944:	mov    DWORD PTR [rdx+rcx*4+0x4],eax
  406948:	movsxd rsi,DWORD PTR [rdx+rcx*4+0x24]
  40694d:	cmp    rax,rsi
  406950:	jl     40695b <dim_enter_array@@Base+0xf9b>
  406952:	jmp    406db7 <dim_enter_array@@Base+0x13f7>
  406957:	mov    DWORD PTR [rdx+rcx*4+0x4],eax
  40695b:	lea    rcx,[rdx+rcx*4]
  40695f:	add    rcx,0x24
  406963:	mov    DWORD PTR [rcx],eax
  406965:	jmp    406db7 <dim_enter_array@@Base+0x13f7>
  40696a:	lea    rax,[r14+rbx*1]
  40696e:	add    rax,0x560
  406974:	test   r13d,r13d
  406977:	je     406a0e <dim_enter_array@@Base+0x104e>
  40697d:	mov    eax,DWORD PTR [rax]
  40697f:	jmp    406a16 <dim_enter_array@@Base+0x1056>
  406984:	movsxd rax,DWORD PTR [r14+0xf34]
  40698b:	lea    rcx,[rax+rax*4]
  40698f:	shl    rcx,0x4
  406993:	mov    edi,DWORD PTR [r14+rcx*1+0x538]
  40699b:	test   edi,edi
  40699d:	jle    406db7 <dim_enter_array@@Base+0x13f7>
  4069a3:	lea    rax,[r14+rcx*1]
  4069a7:	add    rax,0x538
  4069ad:	movsxd rdx,DWORD PTR [r14+rcx*1+0x534]
  4069b5:	lea    rsi,[rip+0xab14]        # 4114d0 <dim_info@@Base>
  4069bc:	lea    rcx,[rsi+rdx*8]
  4069c0:	add    rcx,0x70
  4069c4:	lea    rdx,[rsi+rdx*4]
  4069c8:	add    rdx,0x4
  4069cc:	xor    esi,esi
  4069ce:	xchg   ax,ax
  4069d0:	cmp    DWORD PTR [rax+rsi*4+0x4],0xffffffff
  4069d5:	jne    4069fd <dim_enter_array@@Base+0x103d>
  4069d7:	mov    rdi,QWORD PTR [rcx+rsi*8]
  4069db:	movsxd rbp,DWORD PTR [rax+0x28]
  4069df:	mov    DWORD PTR [rdi+rbp*4],0x0
  4069e6:	cmp    DWORD PTR [rdx+rsi*4],0xffffffff
  4069ea:	jne    4069f3 <dim_enter_array@@Base+0x1033>
  4069ec:	mov    DWORD PTR [rdx+rsi*4],0x0
  4069f3:	mov    DWORD PTR [rdx+rsi*4+0x20],0x0
  4069fb:	mov    edi,DWORD PTR [rax]
  4069fd:	add    rsi,0x1
  406a01:	movsxd rbp,edi
  406a04:	cmp    rsi,rbp
  406a07:	jl     4069d0 <dim_enter_array@@Base+0x1010>
  406a09:	jmp    406db7 <dim_enter_array@@Base+0x13f7>
  406a0e:	mov    DWORD PTR [rax],0x0
  406a14:	xor    eax,eax
  406a16:	mov    ecx,DWORD PTR [r14+rbx*1+0x55c]
  406a1e:	imul   ecx,eax
  406a21:	add    r13d,0x1
  406a25:	movsxd rdx,r13d
  406a28:	lea    r15,[rdx+rdx*4]
  406a2c:	shl    r15,0x4
  406a30:	mov    DWORD PTR [r14+r15*1+0x560],ecx
  406a38:	movsxd r10,DWORD PTR [r14+rbx*1+0x538]
  406a40:	test   r10,r10
  406a43:	jle    406a6d <dim_enter_array@@Base+0x10ad>
  406a45:	add    r10,r12
  406a48:	movsxd r11,eax
  406a4b:	lea    r9,[r12+0x1]
  406a50:	cmp    r9,r10
  406a53:	cmovl  r9,r10
  406a57:	sub    r9,r12
  406a5a:	mov    ebx,0x1
  406a5f:	cmp    r9,0x10
  406a63:	jae    406a77 <dim_enter_array@@Base+0x10b7>
  406a65:	mov    rdx,r12
  406a68:	jmp    406cdf <dim_enter_array@@Base+0x131f>
  406a6d:	mov    ebx,0x1
  406a72:	jmp    406d2c <dim_enter_array@@Base+0x136c>
  406a77:	mov    rcx,r9
  406a7a:	and    rcx,0xfffffffffffffff0
  406a7e:	lea    rdx,[rcx+r12*1]
  406a82:	vmovq  xmm0,r12
  406a87:	vpbroadcastq ymm0,xmm0
  406a8c:	vpaddq ymm9,ymm0,YMMWORD PTR [rip+0x58ec]        # 40c380 <_IO_stdin_used@@Base+0x380>
  406a94:	lea    rbx,[r12*8+0x70]
  406a9c:	lea    rdi,[r12*8+0xd0]
  406aa4:	lea    rbp,[r12*8+0xb0]
  406aac:	lea    rsi,[r12*8+0x90]
  406ab4:	lea    rax,[r12+0x1e]
  406ab9:	mov    r12,rcx
  406abc:	vpbroadcastd xmm14,DWORD PTR [rip+0x58f3]        # 40c3b8 <_IO_stdin_used@@Base+0x3b8>
  406ac5:	vbroadcastsd ymm0,QWORD PTR [rip+0x58f2]        # 40c3c0 <_IO_stdin_used@@Base+0x3c0>
  406ace:	vmovups YMMWORD PTR [rsp+0xe0],ymm0
  406ad7:	lea    rcx,[rip+0xa9f2]        # 4114d0 <dim_info@@Base>
  406ade:	vpcmpeqd xmm15,xmm15,xmm15
  406ae3:	vbroadcastsd ymm0,QWORD PTR [rip+0x58dc]        # 40c3c8 <_IO_stdin_used@@Base+0x3c8>
  406aec:	vmovups YMMWORD PTR [rsp+0xc0],ymm0
  406af5:	vbroadcastsd ymm0,QWORD PTR [rip+0x58d2]        # 40c3d0 <_IO_stdin_used@@Base+0x3d0>
  406afe:	vmovups YMMWORD PTR [rsp+0xa0],ymm0
  406b07:	vbroadcastsd ymm0,QWORD PTR [rip+0x58c8]        # 40c3d8 <_IO_stdin_used@@Base+0x3d8>
  406b10:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  406b19:	vpxor  xmm8,xmm8,xmm8
  406b1e:	vpbroadcastq ymm0,QWORD PTR [rip+0x58b9]        # 40c3e0 <_IO_stdin_used@@Base+0x3e0>
  406b27:	vmovdqu YMMWORD PTR [rsp+0x60],ymm0
  406b2d:	mov    r8,r12
  406b30:	vmovdqa xmm11,xmm14
  406b35:	vmovdqa xmm2,xmm14
  406b39:	vmovdqa xmm5,xmm14
  406b3d:	nop    DWORD PTR [rax]
  406b40:	vmovdqu xmm3,XMMWORD PTR [rcx+rax*4-0x30]
  406b46:	vmovdqu xmm7,XMMWORD PTR [rcx+rax*4-0x20]
  406b4c:	vpxor  xmm1,xmm1,xmm1
  406b50:	vpcmpeqd xmm4,xmm3,xmm1
  406b54:	vpxor  xmm4,xmm4,xmm15
  406b59:	vpcmpeqd xmm10,xmm7,xmm1
  406b5d:	vpmovsxdq ymm4,xmm4
  406b62:	vpxor  xmm6,xmm10,xmm15
  406b67:	vpmovsxdq ymm6,xmm6
  406b6c:	vpmaskmovq ymm4,ymm4,YMMWORD PTR [rcx+rbx*1]
  406b72:	vpmaskmovq ymm10,ymm6,YMMWORD PTR [rcx+rsi*1]
  406b78:	vmovq  xmm6,r11
  406b7d:	vpbroadcastq ymm6,xmm6
  406b82:	vpsllq ymm6,ymm6,0x2
  406b87:	vpsllq ymm12,ymm9,0x2
  406b8d:	vmovq  xmm13,rcx
  406b92:	vpbroadcastq ymm13,xmm13
  406b97:	vpaddq ymm4,ymm4,ymm6
  406b9b:	vpaddq ymm12,ymm13,ymm12
  406ba0:	vpaddq ymm13,ymm12,YMMWORD PTR [rsp+0xe0]
  406ba9:	vpmovzxdq ymm3,xmm3
  406bae:	vpcmpeqq ymm3,ymm3,ymm8
  406bb3:	vblendvpd ymm3,ymm4,ymm13,ymm3
  406bb9:	vpaddq ymm4,ymm10,ymm6
  406bbd:	vpaddq ymm10,ymm12,YMMWORD PTR [rsp+0xc0]
  406bc6:	vpmovzxdq ymm7,xmm7
  406bcb:	vpcmpeqq ymm7,ymm7,ymm8
  406bd0:	vblendvpd ymm4,ymm4,ymm10,ymm7
  406bd6:	vmovdqu xmm7,XMMWORD PTR [rcx+rax*4-0x10]
  406bdc:	vpcmpeqd xmm0,xmm7,xmm1
  406be0:	vpxor  xmm0,xmm0,xmm15
  406be5:	vpmovsxdq ymm0,xmm0
  406bea:	vpmaskmovq ymm0,ymm0,YMMWORD PTR [rcx+rbp*1]
  406bf0:	vpaddq ymm0,ymm0,ymm6
  406bf4:	vpaddq ymm10,ymm12,YMMWORD PTR [rsp+0xa0]
  406bfd:	vpmovzxdq ymm7,xmm7
  406c02:	vpcmpeqq ymm7,ymm7,ymm8
  406c07:	vblendvpd ymm0,ymm0,ymm10,ymm7
  406c0d:	vmovdqu xmm7,XMMWORD PTR [rcx+rax*4]
  406c12:	vpcmpeqd xmm1,xmm7,xmm1
  406c16:	vpxor  xmm1,xmm1,xmm15
  406c1b:	vpmovsxdq ymm1,xmm1
  406c20:	vpmaskmovq ymm1,ymm1,YMMWORD PTR [rcx+rdi*1]
  406c26:	vpaddq ymm1,ymm1,ymm6
  406c2a:	vpaddq ymm6,ymm12,YMMWORD PTR [rsp+0x80]
  406c33:	vpmovzxdq ymm7,xmm7
  406c38:	vpcmpeqq ymm7,ymm7,ymm8
  406c3d:	vblendvpd ymm1,ymm1,ymm6,ymm7
  406c43:	vpcmpeqd xmm6,xmm6,xmm6
  406c47:	vpgatherqd xmm7,DWORD PTR [ymm3*1+0x0],xmm6
  406c51:	vpcmpeqd xmm3,xmm3,xmm3
  406c55:	vpgatherqd xmm6,DWORD PTR [ymm4*1+0x0],xmm3
  406c5f:	vpcmpeqd xmm3,xmm3,xmm3
  406c63:	vpgatherqd xmm4,DWORD PTR [ymm0*1+0x0],xmm3
  406c6d:	vpcmpeqd xmm0,xmm0,xmm0
  406c71:	vpgatherqd xmm3,DWORD PTR [ymm1*1+0x0],xmm0
  406c7b:	vpmulld xmm14,xmm7,xmm14
  406c80:	vpmulld xmm11,xmm6,xmm11
  406c85:	vpmulld xmm2,xmm4,xmm2
  406c8a:	vpmulld xmm5,xmm3,xmm5
  406c8f:	vpaddq ymm9,ymm9,YMMWORD PTR [rsp+0x60]
  406c95:	add    rax,0x10
  406c99:	sub    rbx,0xffffffffffffff80
  406c9d:	sub    rdi,0xffffffffffffff80
  406ca1:	sub    rbp,0xffffffffffffff80
  406ca5:	sub    rsi,0xffffffffffffff80
  406ca9:	add    r8,0xfffffffffffffff0
  406cad:	jne    406b40 <dim_enter_array@@Base+0x1180>
  406cb3:	vpmulld xmm0,xmm11,xmm14
  406cb8:	vpmulld xmm0,xmm2,xmm0
  406cbd:	vpmulld xmm0,xmm5,xmm0
  406cc2:	vpshufd xmm1,xmm0,0x4e
  406cc7:	vpmulld xmm0,xmm0,xmm1
  406ccc:	vpshufd xmm1,xmm0,0xe5
  406cd1:	vpmulld xmm0,xmm0,xmm1
  406cd6:	vmovd  ebx,xmm0
  406cda:	cmp    r9,r12
  406cdd:	je     406d24 <dim_enter_array@@Base+0x1364>
  406cdf:	lea    rax,[rip+0xa7ea]        # 4114d0 <dim_info@@Base>
  406ce6:	lea    rcx,[rax+rdx*4]
  406cea:	add    rcx,0x48
  406cee:	shl    r11,0x2
  406cf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cfc:	nop    DWORD PTR [rax+0x0]
  406d00:	cmp    DWORD PTR [rcx],0x0
  406d03:	je     406d10 <dim_enter_array@@Base+0x1350>
  406d05:	mov    rsi,QWORD PTR [rax+rdx*8+0x70]
  406d0a:	add    rsi,r11
  406d0d:	jmp    406d14 <dim_enter_array@@Base+0x1354>
  406d0f:	nop
  406d10:	lea    rsi,[rcx-0x44]
  406d14:	imul   ebx,DWORD PTR [rsi]
  406d17:	add    rdx,0x1
  406d1b:	add    rcx,0x4
  406d1f:	cmp    rdx,r10
  406d22:	jl     406d00 <dim_enter_array@@Base+0x1340>
  406d24:	test   ebx,ebx
  406d26:	jle    406db7 <dim_enter_array@@Base+0x13f7>
  406d2c:	mov    edi,0x118
  406d31:	add    rdi,QWORD PTR [rip+0x92a8]        # 40ffe0 <traverse_info@@Base-0x388>
  406d38:	vzeroupper 
  406d3b:	call   403270 <coda_cursor_goto_first_array_element@plt>
  406d40:	test   eax,eax
  406d42:	je     406d4b <dim_enter_array@@Base+0x138b>
  406d44:	xor    eax,eax
  406d46:	call   40a6f0 <handle_coda_error@@Base>
  406d4b:	lea    r12,[r14+r15*1]
  406d4f:	add    r12,0x560
  406d56:	add    DWORD PTR [rsp+0x8],0x1
  406d5b:	lea    r14d,[rbx-0x1]
  406d5f:	mov    ebp,0x118
  406d64:	add    rbp,QWORD PTR [rip+0x9275]        # 40ffe0 <traverse_info@@Base-0x388>
  406d6b:	xor    r15d,r15d
  406d6e:	xchg   ax,ax
  406d70:	mov    edi,DWORD PTR [rsp+0x8]
  406d74:	mov    esi,r13d
  406d77:	mov    edx,DWORD PTR [rsp+0xc]
  406d7b:	call   4066f0 <dim_enter_array@@Base+0xd30>
  406d80:	cmp    r15d,r14d
  406d83:	jge    406d9d <dim_enter_array@@Base+0x13dd>
  406d85:	mov    rdi,rbp
  406d88:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  406d8d:	test   eax,eax
  406d8f:	je     406d98 <dim_enter_array@@Base+0x13d8>
  406d91:	xor    eax,eax
  406d93:	call   40a6f0 <handle_coda_error@@Base>
  406d98:	add    DWORD PTR [r12],0x1
  406d9d:	add    r15d,0x1
  406da1:	cmp    ebx,r15d
  406da4:	jne    406d70 <dim_enter_array@@Base+0x13b0>
  406da6:	mov    edi,0x118
  406dab:	add    rdi,QWORD PTR [rip+0x922e]        # 40ffe0 <traverse_info@@Base-0x388>
  406db2:	call   403320 <coda_cursor_goto_parent@plt>
  406db7:	add    rsp,0x108
  406dbe:	pop    rbx
  406dbf:	pop    r12
  406dc1:	pop    r13
  406dc3:	pop    r14
  406dc5:	pop    r15
  406dc7:	pop    rbp
  406dc8:	vzeroupper 
  406dcb:	ret    
  406dcc:	lea    rdi,[rip+0x5561]        # 40c334 <_IO_stdin_used@@Base+0x334>
  406dd3:	lea    rsi,[rip+0x5629]        # 40c403 <_IO_stdin_used@@Base+0x403>
  406dda:	lea    rcx,[rip+0x5769]        # 40c54a <_IO_stdin_used@@Base+0x54a>
  406de1:	mov    edx,0x126
  406de6:	call   403240 <__assert_fail@plt>
  406deb:	lea    rdi,[rip+0x5783]        # 40c575 <_IO_stdin_used@@Base+0x575>
  406df2:	lea    rsi,[rip+0x560a]        # 40c403 <_IO_stdin_used@@Base+0x403>
  406df9:	lea    rcx,[rip+0x574a]        # 40c54a <_IO_stdin_used@@Base+0x54a>
  406e00:	mov    edx,0xfc
  406e05:	call   403240 <__assert_fail@plt>
  406e0a:	lea    rdi,[rip+0x5718]        # 40c529 <_IO_stdin_used@@Base+0x529>
  406e11:	lea    rsi,[rip+0x55eb]        # 40c403 <_IO_stdin_used@@Base+0x403>
  406e18:	lea    rcx,[rip+0x572b]        # 40c54a <_IO_stdin_used@@Base+0x54a>
  406e1f:	mov    edx,0x7d
  406e24:	call   403240 <__assert_fail@plt>
  406e29:	nop    DWORD PTR [rax+0x0]

0000000000406e30 <dim_leave_array@@Base>:
  406e30:	push   rbp
  406e31:	push   r15
  406e33:	push   r14
  406e35:	push   r13
  406e37:	push   r12
  406e39:	push   rbx
  406e3a:	push   rax
  406e3b:	lea    rdx,[rip+0x9526]        # 410368 <traverse_info@@Base>
  406e42:	movsxd rax,DWORD PTR [rdx+0xf34]
  406e49:	test   rax,rax
  406e4c:	js     406fe8 <dim_leave_array@@Base+0x1b8>
  406e52:	lea    rsi,[rax+rax*4]
  406e56:	shl    rsi,0x4
  406e5a:	movsxd r14,DWORD PTR [rdx+rsi*1+0x534]
  406e62:	mov    eax,DWORD PTR [rdx+rsi*1+0x538]
  406e69:	lea    rbx,[rip+0xa660]        # 4114d0 <dim_info@@Base>
  406e70:	mov    ecx,DWORD PTR [rbx]
  406e72:	sub    ecx,eax
  406e74:	mov    DWORD PTR [rbx],ecx
  406e76:	test   eax,eax
  406e78:	jle    406ec2 <dim_leave_array@@Base+0x92>
  406e7a:	lea    r15,[rdx+rsi*1]
  406e7e:	add    r15,0x538
  406e85:	lea    r12,[rbx+r14*4]
  406e89:	add    r12,0x48
  406e8d:	lea    r13,[rbx+r14*8]
  406e91:	add    r13,0x70
  406e95:	xor    ebp,ebp
  406e97:	nop    WORD PTR [rax+rax*1+0x0]
  406ea0:	cmp    DWORD PTR [r12+rbp*4],0x0
  406ea5:	je     406eb4 <dim_leave_array@@Base+0x84>
  406ea7:	mov    rdi,QWORD PTR [r13+rbp*8+0x0]
  406eac:	call   403070 <free@plt>
  406eb1:	mov    eax,DWORD PTR [r15]
  406eb4:	add    rbp,0x1
  406eb8:	movsxd rcx,eax
  406ebb:	cmp    rbp,rcx
  406ebe:	jl     406ea0 <dim_leave_array@@Base+0x70>
  406ec0:	mov    ecx,DWORD PTR [rbx]
  406ec2:	mov    DWORD PTR [rbx+0x44],0x0
  406ec9:	mov    DWORD PTR [rbx+0x68],0xffffffff
  406ed0:	test   ecx,ecx
  406ed2:	jle    406f7b <dim_leave_array@@Base+0x14b>
  406ed8:	movsxd rsi,ecx
  406edb:	lea    rdx,[rsi-0x1]
  406edf:	and    ecx,0x3
  406ee2:	cmp    rdx,0x3
  406ee6:	jae    406ef4 <dim_leave_array@@Base+0xc4>
  406ee8:	xor    edx,edx
  406eea:	test   rcx,rcx
  406eed:	jne    406f5b <dim_leave_array@@Base+0x12b>
  406eef:	jmp    406f7b <dim_leave_array@@Base+0x14b>
  406ef4:	sub    rsi,rcx
  406ef7:	xor    edx,edx
  406ef9:	nop    DWORD PTR [rax+0x0]
  406f00:	cmp    DWORD PTR [rbx+rdx*4+0x48],0x0
  406f05:	je     406f11 <dim_leave_array@@Base+0xe1>
  406f07:	mov    DWORD PTR [rbx+0x44],0x1
  406f0e:	mov    DWORD PTR [rbx+0x68],edx
  406f11:	cmp    DWORD PTR [rbx+rdx*4+0x4c],0x0
  406f16:	je     406f25 <dim_leave_array@@Base+0xf5>
  406f18:	mov    DWORD PTR [rbx+0x44],0x1
  406f1f:	lea    edi,[rdx+0x1]
  406f22:	mov    DWORD PTR [rbx+0x68],edi
  406f25:	cmp    DWORD PTR [rbx+rdx*4+0x50],0x0
  406f2a:	je     406f39 <dim_leave_array@@Base+0x109>
  406f2c:	mov    DWORD PTR [rbx+0x44],0x1
  406f33:	lea    edi,[rdx+0x2]
  406f36:	mov    DWORD PTR [rbx+0x68],edi
  406f39:	cmp    DWORD PTR [rbx+rdx*4+0x54],0x0
  406f3e:	je     406f4d <dim_leave_array@@Base+0x11d>
  406f40:	mov    DWORD PTR [rbx+0x44],0x1
  406f47:	lea    edi,[rdx+0x3]
  406f4a:	mov    DWORD PTR [rbx+0x68],edi
  406f4d:	add    rdx,0x4
  406f51:	cmp    rsi,rdx
  406f54:	jne    406f00 <dim_leave_array@@Base+0xd0>
  406f56:	test   rcx,rcx
  406f59:	je     406f7b <dim_leave_array@@Base+0x14b>
  406f5b:	neg    rcx
  406f5e:	xchg   ax,ax
  406f60:	cmp    DWORD PTR [rbx+rdx*4+0x48],0x0
  406f65:	je     406f71 <dim_leave_array@@Base+0x141>
  406f67:	mov    DWORD PTR [rbx+0x44],0x1
  406f6e:	mov    DWORD PTR [rbx+0x68],edx
  406f71:	add    rdx,0x1
  406f75:	add    rcx,0x1
  406f79:	jne    406f60 <dim_leave_array@@Base+0x130>
  406f7b:	lea    eax,[r14+rax*1]
  406f7f:	add    eax,0xffffffff
  406f82:	cdqe   
  406f84:	cmp    QWORD PTR [rbx+rax*8+0x150],0x0
  406f8d:	jle    406fd9 <dim_leave_array@@Base+0x1a9>
  406f8f:	test   r14d,r14d
  406f92:	jle    406fd9 <dim_leave_array@@Base+0x1a9>
  406f94:	lea    rcx,[r14+0x19]
  406f98:	nop    DWORD PTR [rax+rax*1+0x0]
  406fa0:	mov    rsi,QWORD PTR [rbx+r14*8+0xd0]
  406fa8:	mov    rax,QWORD PTR [rbx+rcx*8]
  406fac:	mov    rdx,rax
  406faf:	or     rdx,rsi
  406fb2:	shr    rdx,0x20
  406fb6:	je     406fc0 <dim_leave_array@@Base+0x190>
  406fb8:	cqo    
  406fba:	idiv   rsi
  406fbd:	jmp    406fc4 <dim_leave_array@@Base+0x194>
  406fbf:	nop
  406fc0:	xor    edx,edx
  406fc2:	div    esi
  406fc4:	mov    QWORD PTR [rbx+rcx*8],rax
  406fc8:	lea    rax,[rcx-0x1]
  406fcc:	add    rcx,0xffffffffffffffe7
  406fd0:	cmp    rcx,0x1
  406fd4:	mov    rcx,rax
  406fd7:	jg     406fa0 <dim_leave_array@@Base+0x170>
  406fd9:	add    rsp,0x8
  406fdd:	pop    rbx
  406fde:	pop    r12
  406fe0:	pop    r13
  406fe2:	pop    r14
  406fe4:	pop    r15
  406fe6:	pop    rbp
  406fe7:	ret    
  406fe8:	lea    rdi,[rip+0x5505]        # 40c4f4 <_IO_stdin_used@@Base+0x4f4>
  406fef:	lea    rsi,[rip+0x540d]        # 40c403 <_IO_stdin_used@@Base+0x403>
  406ff6:	lea    rcx,[rip+0x5515]        # 40c512 <_IO_stdin_used@@Base+0x512>
  406ffd:	mov    edx,0x243
  407002:	call   403240 <__assert_fail@plt>
  407007:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407010 <dim_record_field_available@@Base>:
  407010:	xor    edi,edi
  407012:	xor    esi,esi
  407014:	xor    edx,edx
  407016:	jmp    407020 <dim_record_field_available@@Base+0x10>
  407018:	nop    DWORD PTR [rax+rax*1+0x0]
  407020:	push   rbp
  407021:	push   r15
  407023:	push   r14
  407025:	push   r13
  407027:	push   r12
  407029:	push   rbx
  40702a:	sub    rsp,0xc8
  407031:	mov    DWORD PTR [rsp+0x10],edx
  407035:	mov    r13d,esi
  407038:	mov    DWORD PTR [rsp+0x14],edi
  40703c:	mov    edi,0x118
  407041:	add    rdi,QWORD PTR [rip+0x8f98]        # 40ffe0 <traverse_info@@Base-0x388>
  407048:	lea    rsi,[rsp+0x1c]
  40704d:	call   4031e0 <coda_cursor_get_type_class@plt>
  407052:	test   eax,eax
  407054:	je     40705d <dim_record_field_available@@Base+0x4d>
  407056:	xor    eax,eax
  407058:	call   40a6f0 <handle_coda_error@@Base>
  40705d:	mov    eax,DWORD PTR [rsp+0x1c]
  407061:	test   eax,eax
  407063:	je     4070b0 <dim_record_field_available@@Base+0xa0>
  407065:	cmp    eax,0x1
  407068:	jne    40751a <dim_record_field_available@@Base+0x50a>
  40706e:	lea    r14,[rip+0x92f3]        # 410368 <traverse_info@@Base>
  407075:	cmp    DWORD PTR [r14+0xf34],r13d
  40707c:	jle    407539 <dim_record_field_available@@Base+0x529>
  407082:	movsxd rax,r13d
  407085:	lea    rcx,[rax+rax*4]
  407089:	shl    rcx,0x4
  40708d:	movsxd rax,DWORD PTR [r14+rcx*1+0x534]
  407095:	lea    rdx,[r14+rcx*1]
  407099:	add    rdx,0x560
  4070a0:	test   r13d,r13d
  4070a3:	je     407158 <dim_record_field_available@@Base+0x148>
  4070a9:	mov    edx,DWORD PTR [rdx]
  4070ab:	jmp    407160 <dim_record_field_available@@Base+0x150>
  4070b0:	movsxd rbp,DWORD PTR [rsp+0x10]
  4070b5:	lea    r14,[rip+0x92ac]        # 410368 <traverse_info@@Base>
  4070bc:	movsxd rsi,DWORD PTR [r14+rbp*4+0xfb8]
  4070c4:	lea    rbx,[r14+0x118]
  4070cb:	lea    rdx,[rsp+0x18]
  4070d0:	mov    rdi,rbx
  4070d3:	call   4030c0 <coda_cursor_get_record_field_available_status@plt>
  4070d8:	test   eax,eax
  4070da:	je     4070e3 <dim_record_field_available@@Base+0xd3>
  4070dc:	xor    eax,eax
  4070de:	call   40a6f0 <handle_coda_error@@Base>
  4070e3:	cmp    DWORD PTR [rsp+0x18],0x0
  4070e8:	je     4074eb <dim_record_field_available@@Base+0x4db>
  4070ee:	mov    eax,DWORD PTR [r14+0x1138]
  4070f5:	add    eax,0xffffffff
  4070f8:	cmp    eax,DWORD PTR [rsp+0x10]
  4070fc:	je     407500 <dim_record_field_available@@Base+0x4f0>
  407102:	movsxd rsi,DWORD PTR [r14+rbp*4+0xfb8]
  40710a:	mov    rdi,rbx
  40710d:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  407112:	test   eax,eax
  407114:	je     40711d <dim_record_field_available@@Base+0x10d>
  407116:	xor    eax,eax
  407118:	call   40a6f0 <handle_coda_error@@Base>
  40711d:	mov    edi,DWORD PTR [rsp+0x14]
  407121:	add    edi,0x1
  407124:	mov    edx,DWORD PTR [rsp+0x10]
  407128:	add    edx,0x1
  40712b:	mov    esi,r13d
  40712e:	call   407020 <dim_record_field_available@@Base+0x10>
  407133:	mov    DWORD PTR [rsp+0x18],eax
  407137:	mov    edi,0x118
  40713c:	add    rdi,QWORD PTR [rip+0x8e9d]        # 40ffe0 <traverse_info@@Base-0x388>
  407143:	call   403320 <coda_cursor_goto_parent@plt>
  407148:	cmp    DWORD PTR [rsp+0x18],0x0
  40714d:	jne    407500 <dim_record_field_available@@Base+0x4f0>
  407153:	jmp    4074eb <dim_record_field_available@@Base+0x4db>
  407158:	mov    DWORD PTR [rdx],0x0
  40715e:	xor    edx,edx
  407160:	mov    esi,DWORD PTR [r14+rcx*1+0x55c]
  407168:	imul   esi,edx
  40716b:	add    r13d,0x1
  40716f:	movsxd rdi,r13d
  407172:	lea    r12,[rdi+rdi*4]
  407176:	shl    r12,0x4
  40717a:	mov    DWORD PTR [r14+r12*1+0x560],esi
  407182:	mov    ecx,DWORD PTR [r14+rcx*1+0x538]
  40718a:	test   ecx,ecx
  40718c:	jle    4071b7 <dim_record_field_available@@Base+0x1a7>
  40718e:	add    ecx,eax
  407190:	movsxd r10,ecx
  407193:	movsxd r11,edx
  407196:	lea    r9,[rax+0x1]
  40719a:	cmp    r9,r10
  40719d:	cmovl  r9,r10
  4071a1:	sub    r9,rax
  4071a4:	mov    ebp,0x1
  4071a9:	cmp    r9,0x10
  4071ad:	jae    4071c1 <dim_record_field_available@@Base+0x1b1>
  4071af:	mov    rdx,rax
  4071b2:	jmp    407419 <dim_record_field_available@@Base+0x409>
  4071b7:	mov    ebp,0x1
  4071bc:	jmp    40745c <dim_record_field_available@@Base+0x44c>
  4071c1:	mov    r15,r9
  4071c4:	and    r15,0xfffffffffffffff0
  4071c8:	lea    rdx,[r15+rax*1]
  4071cc:	vmovq  xmm0,rax
  4071d1:	vpbroadcastq ymm0,xmm0
  4071d6:	vpaddq ymm9,ymm0,YMMWORD PTR [rip+0x51a2]        # 40c380 <_IO_stdin_used@@Base+0x380>
  4071de:	lea    rbp,[rax*8+0x70]
  4071e6:	lea    rdi,[rax*8+0xd0]
  4071ee:	lea    rbx,[rax*8+0xb0]
  4071f6:	lea    rsi,[rax*8+0x90]
  4071fe:	lea    rax,[rax+0x1e]
  407202:	vpbroadcastd xmm14,DWORD PTR [rip+0x51ad]        # 40c3b8 <_IO_stdin_used@@Base+0x3b8>
  40720b:	vbroadcastsd ymm0,QWORD PTR [rip+0x51ac]        # 40c3c0 <_IO_stdin_used@@Base+0x3c0>
  407214:	vmovups YMMWORD PTR [rsp+0xa0],ymm0
  40721d:	lea    rcx,[rip+0xa2ac]        # 4114d0 <dim_info@@Base>
  407224:	vpcmpeqd xmm15,xmm15,xmm15
  407229:	vbroadcastsd ymm0,QWORD PTR [rip+0x5196]        # 40c3c8 <_IO_stdin_used@@Base+0x3c8>
  407232:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  40723b:	vbroadcastsd ymm0,QWORD PTR [rip+0x518c]        # 40c3d0 <_IO_stdin_used@@Base+0x3d0>
  407244:	vmovups YMMWORD PTR [rsp+0x60],ymm0
  40724a:	vbroadcastsd ymm0,QWORD PTR [rip+0x5185]        # 40c3d8 <_IO_stdin_used@@Base+0x3d8>
  407253:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  407259:	vpxor  xmm8,xmm8,xmm8
  40725e:	vpbroadcastq ymm0,QWORD PTR [rip+0x5179]        # 40c3e0 <_IO_stdin_used@@Base+0x3e0>
  407267:	vmovdqu YMMWORD PTR [rsp+0x20],ymm0
  40726d:	mov    r8,r15
  407270:	vmovdqa xmm11,xmm14
  407275:	vmovdqa xmm2,xmm14
  407279:	vmovdqa xmm5,xmm14
  40727d:	nop    DWORD PTR [rax]
  407280:	vmovdqu xmm3,XMMWORD PTR [rcx+rax*4-0x30]
  407286:	vmovdqu xmm7,XMMWORD PTR [rcx+rax*4-0x20]
  40728c:	vpxor  xmm1,xmm1,xmm1
  407290:	vpcmpeqd xmm4,xmm3,xmm1
  407294:	vpxor  xmm4,xmm4,xmm15
  407299:	vpcmpeqd xmm10,xmm7,xmm1
  40729d:	vpmovsxdq ymm4,xmm4
  4072a2:	vpxor  xmm6,xmm10,xmm15
  4072a7:	vpmovsxdq ymm6,xmm6
  4072ac:	vpmaskmovq ymm4,ymm4,YMMWORD PTR [rcx+rbp*1]
  4072b2:	vpmaskmovq ymm10,ymm6,YMMWORD PTR [rcx+rsi*1]
  4072b8:	vmovq  xmm6,r11
  4072bd:	vpbroadcastq ymm6,xmm6
  4072c2:	vpsllq ymm6,ymm6,0x2
  4072c7:	vpsllq ymm12,ymm9,0x2
  4072cd:	vmovq  xmm13,rcx
  4072d2:	vpbroadcastq ymm13,xmm13
  4072d7:	vpaddq ymm4,ymm4,ymm6
  4072db:	vpaddq ymm12,ymm13,ymm12
  4072e0:	vpaddq ymm13,ymm12,YMMWORD PTR [rsp+0xa0]
  4072e9:	vpmovzxdq ymm3,xmm3
  4072ee:	vpcmpeqq ymm3,ymm3,ymm8
  4072f3:	vblendvpd ymm3,ymm4,ymm13,ymm3
  4072f9:	vpaddq ymm4,ymm10,ymm6
  4072fd:	vpaddq ymm10,ymm12,YMMWORD PTR [rsp+0x80]
  407306:	vpmovzxdq ymm7,xmm7
  40730b:	vpcmpeqq ymm7,ymm7,ymm8
  407310:	vblendvpd ymm4,ymm4,ymm10,ymm7
  407316:	vmovdqu xmm7,XMMWORD PTR [rcx+rax*4-0x10]
  40731c:	vpcmpeqd xmm0,xmm7,xmm1
  407320:	vpxor  xmm0,xmm0,xmm15
  407325:	vpmovsxdq ymm0,xmm0
  40732a:	vpmaskmovq ymm0,ymm0,YMMWORD PTR [rcx+rbx*1]
  407330:	vpaddq ymm0,ymm0,ymm6
  407334:	vpaddq ymm10,ymm12,YMMWORD PTR [rsp+0x60]
  40733a:	vpmovzxdq ymm7,xmm7
  40733f:	vpcmpeqq ymm7,ymm7,ymm8
  407344:	vblendvpd ymm0,ymm0,ymm10,ymm7
  40734a:	vmovdqu xmm7,XMMWORD PTR [rcx+rax*4]
  40734f:	vpcmpeqd xmm1,xmm7,xmm1
  407353:	vpxor  xmm1,xmm1,xmm15
  407358:	vpmovsxdq ymm1,xmm1
  40735d:	vpmaskmovq ymm1,ymm1,YMMWORD PTR [rcx+rdi*1]
  407363:	vpaddq ymm1,ymm1,ymm6
  407367:	vpaddq ymm6,ymm12,YMMWORD PTR [rsp+0x40]
  40736d:	vpmovzxdq ymm7,xmm7
  407372:	vpcmpeqq ymm7,ymm7,ymm8
  407377:	vblendvpd ymm1,ymm1,ymm6,ymm7
  40737d:	vpcmpeqd xmm6,xmm6,xmm6
  407381:	vpgatherqd xmm7,DWORD PTR [ymm3*1+0x0],xmm6
  40738b:	vpcmpeqd xmm3,xmm3,xmm3
  40738f:	vpgatherqd xmm6,DWORD PTR [ymm4*1+0x0],xmm3
  407399:	vpcmpeqd xmm3,xmm3,xmm3
  40739d:	vpgatherqd xmm4,DWORD PTR [ymm0*1+0x0],xmm3
  4073a7:	vpcmpeqd xmm0,xmm0,xmm0
  4073ab:	vpgatherqd xmm3,DWORD PTR [ymm1*1+0x0],xmm0
  4073b5:	vpmulld xmm14,xmm7,xmm14
  4073ba:	vpmulld xmm11,xmm6,xmm11
  4073bf:	vpmulld xmm2,xmm4,xmm2
  4073c4:	vpmulld xmm5,xmm3,xmm5
  4073c9:	vpaddq ymm9,ymm9,YMMWORD PTR [rsp+0x20]
  4073cf:	add    rax,0x10
  4073d3:	sub    rbp,0xffffffffffffff80
  4073d7:	sub    rdi,0xffffffffffffff80
  4073db:	sub    rbx,0xffffffffffffff80
  4073df:	sub    rsi,0xffffffffffffff80
  4073e3:	add    r8,0xfffffffffffffff0
  4073e7:	jne    407280 <dim_record_field_available@@Base+0x270>
  4073ed:	vpmulld xmm0,xmm11,xmm14
  4073f2:	vpmulld xmm0,xmm2,xmm0
  4073f7:	vpmulld xmm0,xmm5,xmm0
  4073fc:	vpshufd xmm1,xmm0,0x4e
  407401:	vpmulld xmm0,xmm0,xmm1
  407406:	vpshufd xmm1,xmm0,0xe5
  40740b:	vpmulld xmm0,xmm0,xmm1
  407410:	vmovd  ebp,xmm0
  407414:	cmp    r9,r15
  407417:	je     407454 <dim_record_field_available@@Base+0x444>
  407419:	lea    rax,[rip+0xa0b0]        # 4114d0 <dim_info@@Base>
  407420:	lea    rcx,[rax+rdx*4]
  407424:	add    rcx,0x48
  407428:	shl    r11,0x2
  40742c:	nop    DWORD PTR [rax+0x0]
  407430:	cmp    DWORD PTR [rcx],0x0
  407433:	je     407440 <dim_record_field_available@@Base+0x430>
  407435:	mov    rsi,QWORD PTR [rax+rdx*8+0x70]
  40743a:	add    rsi,r11
  40743d:	jmp    407444 <dim_record_field_available@@Base+0x434>
  40743f:	nop
  407440:	lea    rsi,[rcx-0x44]
  407444:	imul   ebp,DWORD PTR [rsi]
  407447:	add    rdx,0x1
  40744b:	add    rcx,0x4
  40744f:	cmp    rdx,r10
  407452:	jl     407430 <dim_record_field_available@@Base+0x420>
  407454:	test   ebp,ebp
  407456:	jle    4074eb <dim_record_field_available@@Base+0x4db>
  40745c:	mov    edi,0x118
  407461:	add    rdi,QWORD PTR [rip+0x8b78]        # 40ffe0 <traverse_info@@Base-0x388>
  407468:	vzeroupper 
  40746b:	call   403270 <coda_cursor_goto_first_array_element@plt>
  407470:	test   eax,eax
  407472:	je     40747b <dim_record_field_available@@Base+0x46b>
  407474:	xor    eax,eax
  407476:	call   40a6f0 <handle_coda_error@@Base>
  40747b:	add    r12,r14
  40747e:	add    r12,0x560
  407485:	add    DWORD PTR [rsp+0x14],0x1
  40748a:	lea    r14d,[rbp-0x1]
  40748e:	mov    ebx,0x118
  407493:	add    rbx,QWORD PTR [rip+0x8b46]        # 40ffe0 <traverse_info@@Base-0x388>
  40749a:	xor    r15d,r15d
  40749d:	nop    DWORD PTR [rax]
  4074a0:	mov    edi,DWORD PTR [rsp+0x14]
  4074a4:	mov    esi,r13d
  4074a7:	mov    edx,DWORD PTR [rsp+0x10]
  4074ab:	call   407020 <dim_record_field_available@@Base+0x10>
  4074b0:	test   eax,eax
  4074b2:	jne    4074ef <dim_record_field_available@@Base+0x4df>
  4074b4:	cmp    r15d,r14d
  4074b7:	jge    4074d1 <dim_record_field_available@@Base+0x4c1>
  4074b9:	mov    rdi,rbx
  4074bc:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  4074c1:	test   eax,eax
  4074c3:	je     4074cc <dim_record_field_available@@Base+0x4bc>
  4074c5:	xor    eax,eax
  4074c7:	call   40a6f0 <handle_coda_error@@Base>
  4074cc:	add    DWORD PTR [r12],0x1
  4074d1:	add    r15d,0x1
  4074d5:	cmp    r15d,ebp
  4074d8:	jl     4074a0 <dim_record_field_available@@Base+0x490>
  4074da:	mov    edi,0x118
  4074df:	add    rdi,QWORD PTR [rip+0x8afa]        # 40ffe0 <traverse_info@@Base-0x388>
  4074e6:	call   403320 <coda_cursor_goto_parent@plt>
  4074eb:	xor    eax,eax
  4074ed:	jmp    407505 <dim_record_field_available@@Base+0x4f5>
  4074ef:	mov    edi,0x118
  4074f4:	add    rdi,QWORD PTR [rip+0x8ae5]        # 40ffe0 <traverse_info@@Base-0x388>
  4074fb:	call   403320 <coda_cursor_goto_parent@plt>
  407500:	mov    eax,0x1
  407505:	add    rsp,0xc8
  40750c:	pop    rbx
  40750d:	pop    r12
  40750f:	pop    r13
  407511:	pop    r14
  407513:	pop    r15
  407515:	pop    rbp
  407516:	vzeroupper 
  407519:	ret    
  40751a:	lea    rdi,[rip+0x4e13]        # 40c334 <_IO_stdin_used@@Base+0x334>
  407521:	lea    rsi,[rip+0x4edb]        # 40c403 <_IO_stdin_used@@Base+0x403>
  407528:	lea    rcx,[rip+0x5095]        # 40c5c4 <_IO_stdin_used@@Base+0x5c4>
  40752f:	mov    edx,0x2d9
  407534:	call   403240 <__assert_fail@plt>
  407539:	lea    rdi,[rip+0x505d]        # 40c59d <_IO_stdin_used@@Base+0x59d>
  407540:	lea    rsi,[rip+0x4ebc]        # 40c403 <_IO_stdin_used@@Base+0x403>
  407547:	lea    rcx,[rip+0x5076]        # 40c5c4 <_IO_stdin_used@@Base+0x5c4>
  40754e:	mov    edx,0x27e
  407553:	call   403240 <__assert_fail@plt>
  407558:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407560 <codadump_filter_create@@Base>:
  407560:	push   r15
  407562:	push   r14
  407564:	push   rbx
  407565:	sub    rsp,0x20
  407569:	mov    QWORD PTR [rsp+0x8],0x0
  407572:	mov    QWORD PTR [rsp+0x10],0x0
  40757b:	mov    QWORD PTR [rsp+0x18],rdi
  407580:	test   rdi,rdi
  407583:	je     4075dc <codadump_filter_create@@Base+0x7c>
  407585:	cmp    BYTE PTR [rdi],0x0
  407588:	je     4075dc <codadump_filter_create@@Base+0x7c>
  40758a:	lea    r14,[rsp+0x10]
  40758f:	lea    rbx,[rsp+0x18]
  407594:	lea    r15,[rsp+0x8]
  407599:	nop    DWORD PTR [rax+0x0]
  4075a0:	mov    rsi,r14
  4075a3:	mov    rdx,rbx
  4075a6:	call   407710 <codadump_filter_get_next_filter@@Base+0x30>
  4075ab:	mov    rsi,QWORD PTR [rsp+0x10]
  4075b0:	test   rsi,rsi
  4075b3:	je     4075d2 <codadump_filter_create@@Base+0x72>
  4075b5:	mov    rdi,r15
  4075b8:	call   407990 <codadump_filter_get_next_filter@@Base+0x2b0>
  4075bd:	mov    QWORD PTR [rsp+0x10],0x0
  4075c6:	mov    rdi,QWORD PTR [rsp+0x18]
  4075cb:	cmp    BYTE PTR [rdi],0x0
  4075ce:	jne    4075a0 <codadump_filter_create@@Base+0x40>
  4075d0:	jmp    4075dc <codadump_filter_create@@Base+0x7c>
  4075d2:	lea    rdi,[rsp+0x8]
  4075d7:	call   4075f0 <codadump_filter_remove@@Base>
  4075dc:	mov    rax,QWORD PTR [rsp+0x8]
  4075e1:	add    rsp,0x20
  4075e5:	pop    rbx
  4075e6:	pop    r14
  4075e8:	pop    r15
  4075ea:	ret    
  4075eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004075f0 <codadump_filter_remove@@Base>:
  4075f0:	push   rbx
  4075f1:	test   rdi,rdi
  4075f4:	je     407652 <codadump_filter_remove@@Base+0x62>
  4075f6:	mov    rbx,rdi
  4075f9:	mov    rdi,QWORD PTR [rdi]
  4075fc:	test   rdi,rdi
  4075ff:	je     407650 <codadump_filter_remove@@Base+0x60>
  407601:	cmp    QWORD PTR [rdi+0x10],0x0
  407606:	je     407614 <codadump_filter_remove@@Base+0x24>
  407608:	add    rdi,0x10
  40760c:	call   4075f0 <codadump_filter_remove@@Base>
  407611:	mov    rdi,QWORD PTR [rbx]
  407614:	cmp    QWORD PTR [rdi+0x8],0x0
  407619:	je     407627 <codadump_filter_remove@@Base+0x37>
  40761b:	add    rdi,0x8
  40761f:	call   4075f0 <codadump_filter_remove@@Base>
  407624:	mov    rdi,QWORD PTR [rbx]
  407627:	mov    rax,QWORD PTR [rdi]
  40762a:	test   rax,rax
  40762d:	je     407644 <codadump_filter_remove@@Base+0x54>
  40762f:	mov    rdi,rax
  407632:	call   403070 <free@plt>
  407637:	mov    rax,QWORD PTR [rbx]
  40763a:	mov    QWORD PTR [rax],0x0
  407641:	mov    rdi,QWORD PTR [rbx]
  407644:	call   403070 <free@plt>
  407649:	mov    QWORD PTR [rbx],0x0
  407650:	pop    rbx
  407651:	ret    
  407652:	lea    rdi,[rip+0x4fa0]        # 40c5f9 <_IO_stdin_used@@Base+0x5f9>
  407659:	lea    rsi,[rip+0x4fa8]        # 40c608 <_IO_stdin_used@@Base+0x608>
  407660:	lea    rcx,[rip+0x5007]        # 40c66e <_IO_stdin_used@@Base+0x66e>
  407667:	mov    edx,0xc0
  40766c:	call   403240 <__assert_fail@plt>
  407671:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40767b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407680 <codadump_filter_get_fieldname@@Base>:
  407680:	test   rdi,rdi
  407683:	je     407689 <codadump_filter_get_fieldname@@Base+0x9>
  407685:	mov    rax,QWORD PTR [rdi]
  407688:	ret    
  407689:	push   rax
  40768a:	lea    rdi,[rip+0x4f68]        # 40c5f9 <_IO_stdin_used@@Base+0x5f9>
  407691:	lea    rsi,[rip+0x4f70]        # 40c608 <_IO_stdin_used@@Base+0x608>
  407698:	lea    rcx,[rip+0x4fff]        # 40c69e <_IO_stdin_used@@Base+0x69e>
  40769f:	mov    edx,0xd8
  4076a4:	call   403240 <__assert_fail@plt>
  4076a9:	nop    DWORD PTR [rax+0x0]

00000000004076b0 <codadump_filter_get_subfilter@@Base>:
  4076b0:	test   rdi,rdi
  4076b3:	je     4076ba <codadump_filter_get_subfilter@@Base+0xa>
  4076b5:	mov    rax,QWORD PTR [rdi+0x8]
  4076b9:	ret    
  4076ba:	push   rax
  4076bb:	lea    rdi,[rip+0x4f37]        # 40c5f9 <_IO_stdin_used@@Base+0x5f9>
  4076c2:	lea    rsi,[rip+0x4f3f]        # 40c608 <_IO_stdin_used@@Base+0x608>
  4076c9:	lea    rcx,[rip+0x500b]        # 40c6db <_IO_stdin_used@@Base+0x6db>
  4076d0:	mov    edx,0xdf
  4076d5:	call   403240 <__assert_fail@plt>
  4076da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004076e0 <codadump_filter_get_next_filter@@Base>:
  4076e0:	test   rdi,rdi
  4076e3:	je     4076ea <codadump_filter_get_next_filter@@Base+0xa>
  4076e5:	mov    rax,QWORD PTR [rdi+0x10]
  4076e9:	ret    
  4076ea:	push   rax
  4076eb:	lea    rdi,[rip+0x4f07]        # 40c5f9 <_IO_stdin_used@@Base+0x5f9>
  4076f2:	lea    rsi,[rip+0x4f0f]        # 40c608 <_IO_stdin_used@@Base+0x608>
  4076f9:	lea    rcx,[rip+0x501d]        # 40c71d <_IO_stdin_used@@Base+0x71d>
  407700:	mov    edx,0xe6
  407705:	call   403240 <__assert_fail@plt>
  40770a:	nop    WORD PTR [rax+rax*1+0x0]
  407710:	push   rbp
  407711:	push   r15
  407713:	push   r14
  407715:	push   r13
  407717:	push   r12
  407719:	push   rbx
  40771a:	sub    rsp,0x18
  40771e:	test   rdi,rdi
  407721:	je     40792a <codadump_filter_get_next_filter@@Base+0x24a>
  407727:	mov    r15,rsi
  40772a:	test   rsi,rsi
  40772d:	je     407949 <codadump_filter_get_next_filter@@Base+0x269>
  407733:	test   rdx,rdx
  407736:	je     407968 <codadump_filter_get_next_filter@@Base+0x288>
  40773c:	mov    rbx,rdi
  40773f:	movabs rbp,0x100000600
  407749:	jmp    407754 <codadump_filter_get_next_filter@@Base+0x74>
  40774b:	nop    DWORD PTR [rax+rax*1+0x0]
  407750:	add    rbx,0x1
  407754:	movzx  ecx,BYTE PTR [rbx]
  407757:	cmp    rcx,0x20
  40775b:	ja     407763 <codadump_filter_get_next_filter@@Base+0x83>
  40775d:	bt     rbp,rcx
  407761:	jb     407750 <codadump_filter_get_next_filter@@Base+0x70>
  407763:	mov    r14d,0x1
  407769:	xor    eax,eax
  40776b:	movabs rsi,0x800500000000001
  407775:	xor    r12d,r12d
  407778:	jmp    407791 <codadump_filter_get_next_filter@@Base+0xb1>
  40777a:	nop    WORD PTR [rax+rax*1+0x0]
  407780:	movzx  ecx,BYTE PTR [rbx+r12*1+0x1]
  407786:	add    r12,0x1
  40778a:	add    r14d,0x1
  40778e:	add    eax,0x1
  407791:	movzx  ecx,cl
  407794:	cmp    cl,0x3b
  407797:	ja     407780 <codadump_filter_get_next_filter@@Base+0xa0>
  407799:	bt     rsi,rcx
  40779d:	jae    407780 <codadump_filter_get_next_filter@@Base+0xa0>
  40779f:	test   r12d,r12d
  4077a2:	je     407904 <codadump_filter_get_next_filter@@Base+0x224>
  4077a8:	mov    QWORD PTR [rsp+0x10],rdx
  4077ad:	mov    ecx,r12d
  4077b0:	mov    QWORD PTR [rsp],rcx
  4077b4:	mov    eax,eax
  4077b6:	mov    QWORD PTR [rsp+0x8],rax
  4077bb:	mov    edi,0x18
  4077c0:	call   4033f0 <malloc@plt>
  4077c5:	mov    QWORD PTR [r15],rax
  4077c8:	test   rax,rax
  4077cb:	jne    4077f9 <codadump_filter_get_next_filter@@Base+0x119>
  4077cd:	lea    rsi,[rip+0x4889]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  4077d4:	lea    rcx,[rip+0x4e2d]        # 40c608 <_IO_stdin_used@@Base+0x608>
  4077db:	mov    edi,0xffffffff
  4077e0:	mov    edx,0x18
  4077e5:	mov    r8d,0x45
  4077eb:	xor    eax,eax
  4077ed:	call   4030d0 <coda_set_error@plt>
  4077f2:	xor    eax,eax
  4077f4:	call   40a6f0 <handle_coda_error@@Base>
  4077f9:	lea    r13,[r12+0x1]
  4077fe:	mov    edi,r13d
  407801:	call   4033f0 <malloc@plt>
  407806:	mov    rcx,QWORD PTR [r15]
  407809:	mov    QWORD PTR [rcx],rax
  40780c:	mov    rax,QWORD PTR [r15]
  40780f:	mov    rdi,QWORD PTR [rax]
  407812:	test   rdi,rdi
  407815:	jne    407847 <codadump_filter_get_next_filter@@Base+0x167>
  407817:	lea    rsi,[rip+0x4fa4]        # 40c7c2 <_IO_stdin_used@@Base+0x7c2>
  40781e:	lea    rcx,[rip+0x4de3]        # 40c608 <_IO_stdin_used@@Base+0x608>
  407825:	mov    edi,0xffffffff
  40782a:	mov    r8d,0x4c
  407830:	xor    eax,eax
  407832:	mov    edx,r13d
  407835:	call   4030d0 <coda_set_error@plt>
  40783a:	xor    eax,eax
  40783c:	call   40a6f0 <handle_coda_error@@Base>
  407841:	mov    rax,QWORD PTR [r15]
  407844:	mov    rdi,QWORD PTR [rax]
  407847:	mov    r13,QWORD PTR [rsp+0x8]
  40784c:	add    r13,rbx
  40784f:	mov    rsi,rbx
  407852:	mov    rdx,QWORD PTR [rsp]
  407856:	call   4030a0 <strncpy@plt>
  40785b:	mov    rax,QWORD PTR [r15]
  40785e:	mov    QWORD PTR [rax+0x8],0x0
  407866:	mov    rax,QWORD PTR [r15]
  407869:	mov    QWORD PTR [rax+0x10],0x0
  407871:	mov    rax,QWORD PTR [r15]
  407874:	mov    r8,QWORD PTR [rax]
  407877:	mov    ecx,r12d
  40787a:	lea    rax,[r8+rcx*1]
  40787e:	add    rax,0xffffffffffffffff
  407882:	shl    rcx,0x20
  407886:	movabs rsi,0xffffffff00000000
  407890:	mov    rdx,QWORD PTR [rsp+0x10]
  407895:	jmp    4078a7 <codadump_filter_get_next_filter@@Base+0x1c7>
  407897:	nop    WORD PTR [rax+rax*1+0x0]
  4078a0:	add    rcx,rsi
  4078a3:	add    rax,0xffffffffffffffff
  4078a7:	movzx  edi,BYTE PTR [rax]
  4078aa:	cmp    rdi,0x20
  4078ae:	ja     4078b6 <codadump_filter_get_next_filter@@Base+0x1d6>
  4078b0:	bt     rbp,rdi
  4078b4:	jb     4078a0 <codadump_filter_get_next_filter@@Base+0x1c0>
  4078b6:	sar    rcx,0x20
  4078ba:	mov    BYTE PTR [r8+rcx*1],0x0
  4078bf:	mov    al,BYTE PTR [r13+0x0]
  4078c3:	cmp    al,0x2c
  4078c5:	je     40790d <codadump_filter_get_next_filter@@Base+0x22d>
  4078c7:	cmp    al,0x3b
  4078c9:	je     40790d <codadump_filter_get_next_filter@@Base+0x22d>
  4078cb:	cmp    al,0x2e
  4078cd:	jne    407918 <codadump_filter_get_next_filter@@Base+0x238>
  4078cf:	mov    eax,r14d
  4078d2:	add    rbx,rax
  4078d5:	mov    rsi,QWORD PTR [r15]
  4078d8:	add    rsi,0x8
  4078dc:	mov    rdi,rbx
  4078df:	call   407710 <codadump_filter_get_next_filter@@Base+0x30>
  4078e4:	mov    rax,QWORD PTR [r15]
  4078e7:	cmp    QWORD PTR [rax+0x8],0x0
  4078ec:	jne    40791b <codadump_filter_get_next_filter@@Base+0x23b>
  4078ee:	mov    rdi,r15
  4078f1:	add    rsp,0x18
  4078f5:	pop    rbx
  4078f6:	pop    r12
  4078f8:	pop    r13
  4078fa:	pop    r14
  4078fc:	pop    r15
  4078fe:	pop    rbp
  4078ff:	jmp    4075f0 <codadump_filter_remove@@Base>
  407904:	mov    QWORD PTR [r15],0x0
  40790b:	jmp    40791b <codadump_filter_get_next_filter@@Base+0x23b>
  40790d:	mov    eax,r14d
  407910:	add    rbx,rax
  407913:	mov    QWORD PTR [rdx],rbx
  407916:	jmp    40791b <codadump_filter_get_next_filter@@Base+0x23b>
  407918:	mov    QWORD PTR [rdx],r13
  40791b:	add    rsp,0x18
  40791f:	pop    rbx
  407920:	pop    r12
  407922:	pop    r13
  407924:	pop    r14
  407926:	pop    r15
  407928:	pop    rbp
  407929:	ret    
  40792a:	lea    rdi,[rip+0x4e30]        # 40c761 <_IO_stdin_used@@Base+0x761>
  407931:	lea    rsi,[rip+0x4cd0]        # 40c608 <_IO_stdin_used@@Base+0x608>
  407938:	lea    rcx,[rip+0x4e36]        # 40c775 <_IO_stdin_used@@Base+0x775>
  40793f:	mov    edx,0x2c
  407944:	call   403240 <__assert_fail@plt>
  407949:	lea    rdi,[rip+0x4ca9]        # 40c5f9 <_IO_stdin_used@@Base+0x5f9>
  407950:	lea    rsi,[rip+0x4cb1]        # 40c608 <_IO_stdin_used@@Base+0x608>
  407957:	lea    rcx,[rip+0x4e17]        # 40c775 <_IO_stdin_used@@Base+0x775>
  40795e:	mov    edx,0x2d
  407963:	call   403240 <__assert_fail@plt>
  407968:	lea    rdi,[rip+0x4e46]        # 40c7b5 <_IO_stdin_used@@Base+0x7b5>
  40796f:	lea    rsi,[rip+0x4c92]        # 40c608 <_IO_stdin_used@@Base+0x608>
  407976:	lea    rcx,[rip+0x4df8]        # 40c775 <_IO_stdin_used@@Base+0x775>
  40797d:	mov    edx,0x2e
  407982:	call   403240 <__assert_fail@plt>
  407987:	nop    WORD PTR [rax+rax*1+0x0]
  407990:	push   r14
  407992:	push   rbx
  407993:	push   rax
  407994:	mov    QWORD PTR [rsp],rsi
  407998:	test   rdi,rdi
  40799b:	je     407a13 <codadump_filter_get_next_filter@@Base+0x333>
  40799d:	mov    rbx,rsi
  4079a0:	test   rsi,rsi
  4079a3:	je     407a0b <codadump_filter_get_next_filter@@Base+0x32b>
  4079a5:	mov    r14,QWORD PTR [rdi]
  4079a8:	test   r14,r14
  4079ab:	je     4079d3 <codadump_filter_get_next_filter@@Base+0x2f3>
  4079ad:	mov    rdi,QWORD PTR [r14]
  4079b0:	mov    rsi,QWORD PTR [rbx]
  4079b3:	call   4032f0 <strcmp@plt>
  4079b8:	test   eax,eax
  4079ba:	je     4079d8 <codadump_filter_get_next_filter@@Base+0x2f8>
  4079bc:	cmp    QWORD PTR [r14+0x10],0x0
  4079c1:	lea    rdi,[r14+0x10]
  4079c5:	je     4079d3 <codadump_filter_get_next_filter@@Base+0x2f3>
  4079c7:	mov    rsi,rbx
  4079ca:	add    rsp,0x8
  4079ce:	pop    rbx
  4079cf:	pop    r14
  4079d1:	jmp    407990 <codadump_filter_get_next_filter@@Base+0x2b0>
  4079d3:	mov    QWORD PTR [rdi],rbx
  4079d6:	jmp    407a0b <codadump_filter_get_next_filter@@Base+0x32b>
  4079d8:	cmp    QWORD PTR [r14+0x8],0x0
  4079dd:	je     407a03 <codadump_filter_get_next_filter@@Base+0x323>
  4079df:	add    r14,0x8
  4079e3:	mov    rsi,QWORD PTR [rbx+0x8]
  4079e7:	mov    rdi,r14
  4079ea:	test   rsi,rsi
  4079ed:	je     4079fe <codadump_filter_get_next_filter@@Base+0x31e>
  4079ef:	call   407990 <codadump_filter_get_next_filter@@Base+0x2b0>
  4079f4:	mov    QWORD PTR [rbx+0x8],0x0
  4079fc:	jmp    407a03 <codadump_filter_get_next_filter@@Base+0x323>
  4079fe:	call   4075f0 <codadump_filter_remove@@Base>
  407a03:	mov    rdi,rsp
  407a06:	call   4075f0 <codadump_filter_remove@@Base>
  407a0b:	add    rsp,0x8
  407a0f:	pop    rbx
  407a10:	pop    r14
  407a12:	ret    
  407a13:	lea    rdi,[rip+0x4bdf]        # 40c5f9 <_IO_stdin_used@@Base+0x5f9>
  407a1a:	lea    rsi,[rip+0x4be7]        # 40c608 <_IO_stdin_used@@Base+0x608>
  407a21:	lea    rcx,[rip+0x4dce]        # 40c7f6 <_IO_stdin_used@@Base+0x7f6>
  407a28:	mov    edx,0x75
  407a2d:	call   403240 <__assert_fail@plt>
  407a32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a3c:	nop    DWORD PTR [rax+0x0]

0000000000407a40 <print_json_data@@Base>:
  407a40:	push   rbx
  407a41:	sub    rsp,0x320
  407a48:	mov    DWORD PTR [rip+0x88ee],edi        # 41033c <__bss_start@@Base+0xc>
  407a4e:	lea    rbx,[rip+0x8913]        # 410368 <traverse_info@@Base>
  407a55:	mov    rdi,QWORD PTR [rbx]
  407a58:	lea    rsi,[rsp+0x8]
  407a5d:	call   4030e0 <coda_open@plt>
  407a62:	test   eax,eax
  407a64:	je     407a9b <print_json_data@@Base+0x5b>
  407a66:	call   4035d0 <coda_get_errno@plt>
  407a6b:	cmp    DWORD PTR [rax],0xffffffeb
  407a6e:	jne    407a94 <print_json_data@@Base+0x54>
  407a70:	xor    edi,edi
  407a72:	call   403130 <coda_set_option_use_mmap@plt>
  407a77:	mov    rdi,QWORD PTR [rbx]
  407a7a:	lea    rsi,[rsp+0x8]
  407a7f:	call   4030e0 <coda_open@plt>
  407a84:	mov    ebx,eax
  407a86:	mov    edi,0x1
  407a8b:	call   403130 <coda_set_option_use_mmap@plt>
  407a90:	test   ebx,ebx
  407a92:	je     407a9b <print_json_data@@Base+0x5b>
  407a94:	xor    eax,eax
  407a96:	call   40a6f0 <handle_coda_error@@Base>
  407a9b:	mov    rsi,QWORD PTR [rsp+0x8]
  407aa0:	lea    rdi,[rsp+0x10]
  407aa5:	call   403290 <coda_cursor_set_product@plt>
  407aaa:	test   eax,eax
  407aac:	je     407ab5 <print_json_data@@Base+0x75>
  407aae:	xor    eax,eax
  407ab0:	call   40a6f0 <handle_coda_error@@Base>
  407ab5:	lea    rax,[rip+0x9a0c]        # 4114c8 <starting_path@@Base>
  407abc:	mov    rsi,QWORD PTR [rax]
  407abf:	test   rsi,rsi
  407ac2:	je     407ad9 <print_json_data@@Base+0x99>
  407ac4:	lea    rdi,[rsp+0x10]
  407ac9:	call   4034d0 <coda_cursor_goto@plt>
  407ace:	test   eax,eax
  407ad0:	je     407ad9 <print_json_data@@Base+0x99>
  407ad2:	xor    eax,eax
  407ad4:	call   40a6f0 <handle_coda_error@@Base>
  407ad9:	xor    edi,edi
  407adb:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  407ae0:	lea    rdi,[rsp+0x10]
  407ae5:	call   407b10 <print_json_data@@Base+0xd0>
  407aea:	lea    rdi,[rip+0x531c]        # 40ce0d <_IO_stdin_used@@Base+0xe0d>
  407af1:	xor    eax,eax
  407af3:	call   4087e0 <print_json_data@@Base+0xda0>
  407af8:	mov    rdi,QWORD PTR [rsp+0x8]
  407afd:	call   4034b0 <coda_close@plt>
  407b02:	add    rsp,0x320
  407b09:	pop    rbx
  407b0a:	ret    
  407b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  407b10:	push   rbp
  407b11:	push   r15
  407b13:	push   r14
  407b15:	push   r13
  407b17:	push   r12
  407b19:	push   rbx
  407b1a:	sub    rsp,0x78
  407b1e:	mov    r13,rdi
  407b21:	mov    DWORD PTR [rsp+0x1c],0x0
  407b29:	cmp    DWORD PTR [rip+0x880c],0x0        # 41033c <__bss_start@@Base+0xc>
  407b30:	je     407b90 <print_json_data@@Base+0x150>
  407b32:	lea    rsi,[rsp+0x1c]
  407b37:	mov    rdi,r13
  407b3a:	call   4031d0 <coda_cursor_has_attributes@plt>
  407b3f:	test   eax,eax
  407b41:	je     407b4a <print_json_data@@Base+0x10a>
  407b43:	xor    eax,eax
  407b45:	call   40a6f0 <handle_coda_error@@Base>
  407b4a:	cmp    DWORD PTR [rsp+0x1c],0x0
  407b4f:	je     407b90 <print_json_data@@Base+0x150>
  407b51:	lea    rdi,[rip+0x4da8]        # 40c900 <_IO_stdin_used@@Base+0x900>
  407b58:	xor    eax,eax
  407b5a:	call   4087e0 <print_json_data@@Base+0xda0>
  407b5f:	mov    rdi,r13
  407b62:	call   403410 <coda_cursor_goto_attributes@plt>
  407b67:	test   eax,eax
  407b69:	je     407b72 <print_json_data@@Base+0x132>
  407b6b:	xor    eax,eax
  407b6d:	call   40a6f0 <handle_coda_error@@Base>
  407b72:	mov    rdi,r13
  407b75:	call   407b10 <print_json_data@@Base+0xd0>
  407b7a:	mov    rdi,r13
  407b7d:	call   403320 <coda_cursor_goto_parent@plt>
  407b82:	lea    rdi,[rip+0x4d80]        # 40c909 <_IO_stdin_used@@Base+0x909>
  407b89:	xor    eax,eax
  407b8b:	call   4087e0 <print_json_data@@Base+0xda0>
  407b90:	lea    rsi,[rsp+0x74]
  407b95:	mov    rdi,r13
  407b98:	call   4031e0 <coda_cursor_get_type_class@plt>
  407b9d:	test   eax,eax
  407b9f:	je     407ba8 <print_json_data@@Base+0x168>
  407ba1:	xor    eax,eax
  407ba3:	call   40a6f0 <handle_coda_error@@Base>
  407ba8:	mov    eax,DWORD PTR [rsp+0x74]
  407bac:	cmp    rax,0x6
  407bb0:	ja     407dc1 <print_json_data@@Base+0x381>
  407bb6:	lea    rcx,[rip+0x4c73]        # 40c830 <_IO_stdin_used@@Base+0x830>
  407bbd:	movsxd rax,DWORD PTR [rcx+rax*4]
  407bc1:	add    rax,rcx
  407bc4:	jmp    rax
  407bc6:	lea    rsi,[rsp+0x10]
  407bcb:	mov    rdi,r13
  407bce:	call   4032e0 <coda_cursor_get_read_type@plt>
  407bd3:	test   eax,eax
  407bd5:	je     407bde <print_json_data@@Base+0x19e>
  407bd7:	xor    eax,eax
  407bd9:	call   40a6f0 <handle_coda_error@@Base>
  407bde:	mov    eax,DWORD PTR [rsp+0x10]
  407be2:	add    eax,0x1
  407be5:	cmp    eax,0xd
  407be8:	ja     407dc1 <print_json_data@@Base+0x381>
  407bee:	lea    rcx,[rip+0x4c67]        # 40c85c <_IO_stdin_used@@Base+0x85c>
  407bf5:	movsxd rax,DWORD PTR [rcx+rax*4]
  407bf9:	add    rax,rcx
  407bfc:	jmp    rax
  407bfe:	lea    rsi,[rsp+0x20]
  407c03:	mov    rdi,r13
  407c06:	call   403590 <coda_cursor_read_int32@plt>
  407c0b:	test   eax,eax
  407c0d:	je     407c16 <print_json_data@@Base+0x1d6>
  407c0f:	xor    eax,eax
  407c11:	call   40a6f0 <handle_coda_error@@Base>
  407c16:	movsxd rsi,DWORD PTR [rsp+0x20]
  407c1b:	lea    rdi,[rip+0x4dd9]        # 40c9fb <_IO_stdin_used@@Base+0x9fb>
  407c22:	jmp    407dba <print_json_data@@Base+0x37a>
  407c27:	lea    rdi,[rip+0x4ce4]        # 40c912 <_IO_stdin_used@@Base+0x912>
  407c2e:	xor    eax,eax
  407c30:	call   4087e0 <print_json_data@@Base+0xda0>
  407c35:	lea    rsi,[rsp+0x20]
  407c3a:	mov    rdi,r13
  407c3d:	call   403110 <coda_cursor_get_num_elements@plt>
  407c42:	test   eax,eax
  407c44:	je     407c4d <print_json_data@@Base+0x20d>
  407c46:	xor    eax,eax
  407c48:	call   40a6f0 <handle_coda_error@@Base>
  407c4d:	cmp    QWORD PTR [rsp+0x20],0x0
  407c53:	jle    408147 <print_json_data@@Base+0x707>
  407c59:	lea    rsi,[rsp+0x8]
  407c5e:	mov    rdi,r13
  407c61:	call   403180 <coda_cursor_get_type@plt>
  407c66:	test   eax,eax
  407c68:	je     407c71 <print_json_data@@Base+0x231>
  407c6a:	xor    eax,eax
  407c6c:	call   40a6f0 <handle_coda_error@@Base>
  407c71:	mov    rdi,QWORD PTR [rsp+0x8]
  407c76:	lea    rsi,[rsp+0x70]
  407c7b:	call   403440 <coda_type_get_record_union_status@plt>
  407c80:	test   eax,eax
  407c82:	je     407c8b <print_json_data@@Base+0x24b>
  407c84:	xor    eax,eax
  407c86:	call   40a6f0 <handle_coda_error@@Base>
  407c8b:	cmp    DWORD PTR [rsp+0x70],0x0
  407c90:	je     40804f <print_json_data@@Base+0x60f>
  407c96:	lea    rsi,[rsp+0x10]
  407c9b:	mov    rdi,r13
  407c9e:	call   403570 <coda_cursor_get_available_union_field_index@plt>
  407ca3:	test   eax,eax
  407ca5:	je     407cae <print_json_data@@Base+0x26e>
  407ca7:	xor    eax,eax
  407ca9:	call   40a6f0 <handle_coda_error@@Base>
  407cae:	mov    rdi,QWORD PTR [rsp+0x8]
  407cb3:	mov    rsi,QWORD PTR [rsp+0x10]
  407cb8:	lea    rdx,[rsp+0x60]
  407cbd:	call   4035f0 <coda_type_get_record_field_name@plt>
  407cc2:	test   eax,eax
  407cc4:	je     407ccd <print_json_data@@Base+0x28d>
  407cc6:	xor    eax,eax
  407cc8:	call   40a6f0 <handle_coda_error@@Base>
  407ccd:	mov    rsi,QWORD PTR [rsp+0x10]
  407cd2:	mov    rdi,r13
  407cd5:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  407cda:	test   eax,eax
  407cdc:	je     407ce5 <print_json_data@@Base+0x2a5>
  407cde:	xor    eax,eax
  407ce0:	call   40a6f0 <handle_coda_error@@Base>
  407ce5:	mov    rsi,QWORD PTR [rsp+0x60]
  407cea:	lea    rdi,[rip+0x4c23]        # 40c914 <_IO_stdin_used@@Base+0x914>
  407cf1:	xor    eax,eax
  407cf3:	call   4087e0 <print_json_data@@Base+0xda0>
  407cf8:	mov    rdi,r13
  407cfb:	call   407b10 <print_json_data@@Base+0xd0>
  407d00:	jmp    40813f <print_json_data@@Base+0x6ff>
  407d05:	lea    rdi,[rip+0x4ce9]        # 40c9f5 <_IO_stdin_used@@Base+0x9f5>
  407d0c:	xor    eax,eax
  407d0e:	call   4087e0 <print_json_data@@Base+0xda0>
  407d13:	lea    rsi,[rsp+0x8]
  407d18:	lea    rdx,[rsp+0x20]
  407d1d:	mov    rdi,r13
  407d20:	call   403490 <coda_cursor_get_array_dim@plt>
  407d25:	test   eax,eax
  407d27:	je     407d30 <print_json_data@@Base+0x2f0>
  407d29:	xor    eax,eax
  407d2b:	call   40a6f0 <handle_coda_error@@Base>
  407d30:	mov    eax,DWORD PTR [rsp+0x8]
  407d34:	test   eax,eax
  407d36:	js     40877b <print_json_data@@Base+0xd3b>
  407d3c:	test   eax,eax
  407d3e:	je     408153 <print_json_data@@Base+0x713>
  407d44:	cmp    eax,0x10
  407d47:	jae    408222 <print_json_data@@Base+0x7e2>
  407d4d:	mov    ebx,0x1
  407d52:	xor    ecx,ecx
  407d54:	jmp    408700 <print_json_data@@Base+0xcc0>
  407d59:	lea    rsi,[rsp+0x10]
  407d5e:	mov    rdi,r13
  407d61:	call   403260 <coda_cursor_get_special_type@plt>
  407d66:	test   eax,eax
  407d68:	je     407d71 <print_json_data@@Base+0x331>
  407d6a:	xor    eax,eax
  407d6c:	call   40a6f0 <handle_coda_error@@Base>
  407d71:	mov    eax,DWORD PTR [rsp+0x10]
  407d75:	cmp    rax,0x3
  407d79:	ja     407dc1 <print_json_data@@Base+0x381>
  407d7b:	lea    rcx,[rip+0x4aca]        # 40c84c <_IO_stdin_used@@Base+0x84c>
  407d82:	movsxd rax,DWORD PTR [rcx+rax*4]
  407d86:	add    rax,rcx
  407d89:	jmp    rax
  407d8b:	lea    rdi,[rip+0x4bee]        # 40c980 <_IO_stdin_used@@Base+0x980>
  407d92:	jmp    408782 <print_json_data@@Base+0xd42>
  407d97:	lea    rsi,[rsp+0x20]
  407d9c:	mov    rdi,r13
  407d9f:	call   403150 <coda_cursor_read_uint32@plt>
  407da4:	test   eax,eax
  407da6:	je     407daf <print_json_data@@Base+0x36f>
  407da8:	xor    eax,eax
  407daa:	call   40a6f0 <handle_coda_error@@Base>
  407daf:	mov    esi,DWORD PTR [rsp+0x20]
  407db3:	lea    rdi,[rip+0x435b]        # 40c115 <_IO_stdin_used@@Base+0x115>
  407dba:	xor    eax,eax
  407dbc:	call   4087e0 <print_json_data@@Base+0xda0>
  407dc1:	cmp    DWORD PTR [rsp+0x1c],0x0
  407dc6:	je     407dd6 <print_json_data@@Base+0x396>
  407dc8:	lea    rdi,[rip+0x4b4b]        # 40c91a <_IO_stdin_used@@Base+0x91a>
  407dcf:	xor    eax,eax
  407dd1:	call   4087e0 <print_json_data@@Base+0xda0>
  407dd6:	add    rsp,0x78
  407dda:	pop    rbx
  407ddb:	pop    r12
  407ddd:	pop    r13
  407ddf:	pop    r14
  407de1:	pop    r15
  407de3:	pop    rbp
  407de4:	ret    
  407de5:	lea    rsi,[rsp+0x20]
  407dea:	mov    rdi,r13
  407ded:	call   403390 <coda_cursor_read_double@plt>
  407df2:	test   eax,eax
  407df4:	je     407dfd <print_json_data@@Base+0x3bd>
  407df6:	xor    eax,eax
  407df8:	call   40a6f0 <handle_coda_error@@Base>
  407dfd:	cmp    DWORD PTR [rsp+0x10],0x8
  407e02:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  407e08:	jne    4081bd <print_json_data@@Base+0x77d>
  407e0e:	lea    rdi,[rip+0x4304]        # 40c119 <_IO_stdin_used@@Base+0x119>
  407e15:	jmp    4081c4 <print_json_data@@Base+0x784>
  407e1a:	lea    rsi,[rsp+0x8]
  407e1f:	mov    rdi,r13
  407e22:	call   4034c0 <coda_cursor_read_int64@plt>
  407e27:	test   eax,eax
  407e29:	je     407e32 <print_json_data@@Base+0x3f2>
  407e2b:	xor    eax,eax
  407e2d:	call   40a6f0 <handle_coda_error@@Base>
  407e32:	mov    rdi,QWORD PTR [rsp+0x8]
  407e37:	lea    rbx,[rsp+0x20]
  407e3c:	mov    rsi,rbx
  407e3f:	call   403610 <coda_str64@plt>
  407e44:	jmp    407e70 <print_json_data@@Base+0x430>
  407e46:	lea    rsi,[rsp+0x8]
  407e4b:	mov    rdi,r13
  407e4e:	call   403380 <coda_cursor_read_uint64@plt>
  407e53:	test   eax,eax
  407e55:	je     407e5e <print_json_data@@Base+0x41e>
  407e57:	xor    eax,eax
  407e59:	call   40a6f0 <handle_coda_error@@Base>
  407e5e:	mov    rdi,QWORD PTR [rsp+0x8]
  407e63:	lea    rbx,[rsp+0x20]
  407e68:	mov    rsi,rbx
  407e6b:	call   403120 <coda_str64u@plt>
  407e70:	lea    rdi,[rip+0x4c47]        # 40cabe <_IO_stdin_used@@Base+0xabe>
  407e77:	xor    eax,eax
  407e79:	mov    rsi,rbx
  407e7c:	call   4087e0 <print_json_data@@Base+0xda0>
  407e81:	cmp    DWORD PTR [rsp+0x1c],0x0
  407e86:	jne    407dc8 <print_json_data@@Base+0x388>
  407e8c:	jmp    407dd6 <print_json_data@@Base+0x396>
  407e91:	lea    rsi,[rsp+0x20]
  407e96:	mov    rdi,r13
  407e99:	call   403420 <coda_cursor_read_char@plt>
  407e9e:	test   eax,eax
  407ea0:	je     407ea9 <print_json_data@@Base+0x469>
  407ea2:	xor    eax,eax
  407ea4:	call   40a6f0 <handle_coda_error@@Base>
  407ea9:	lea    rbx,[rip+0x4b19]        # 40c9c9 <_IO_stdin_used@@Base+0x9c9>
  407eb0:	xor    eax,eax
  407eb2:	mov    rdi,rbx
  407eb5:	call   4087e0 <print_json_data@@Base+0xda0>
  407eba:	lea    rdi,[rsp+0x20]
  407ebf:	mov    esi,0x1
  407ec4:	call   408890 <print_json_data@@Base+0xe50>
  407ec9:	xor    eax,eax
  407ecb:	mov    rdi,rbx
  407ece:	jmp    408784 <print_json_data@@Base+0xd44>
  407ed3:	lea    rsi,[rsp+0x20]
  407ed8:	mov    rdi,r13
  407edb:	call   403370 <coda_cursor_get_string_length@plt>
  407ee0:	test   eax,eax
  407ee2:	je     407eeb <print_json_data@@Base+0x4ab>
  407ee4:	xor    eax,eax
  407ee6:	call   40a6f0 <handle_coda_error@@Base>
  407eeb:	mov    r15,QWORD PTR [rsp+0x20]
  407ef0:	add    r15,0x1
  407ef4:	mov    rdi,r15
  407ef7:	call   4033f0 <malloc@plt>
  407efc:	mov    r14,rax
  407eff:	test   rax,rax
  407f02:	jne    407f37 <print_json_data@@Base+0x4f7>
  407f04:	lea    rsi,[rip+0x4152]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  407f0b:	lea    rcx,[rip+0x4a0a]        # 40c91c <_IO_stdin_used@@Base+0x91c>
  407f12:	mov    edi,0xffffffff
  407f17:	mov    r8d,0x12f
  407f1d:	xor    eax,eax
  407f1f:	mov    rdx,r15
  407f22:	call   4030d0 <coda_set_error@plt>
  407f27:	xor    eax,eax
  407f29:	call   40a6f0 <handle_coda_error@@Base>
  407f2e:	mov    r15,QWORD PTR [rsp+0x20]
  407f33:	add    r15,0x1
  407f37:	mov    rdi,r13
  407f3a:	mov    rsi,r14
  407f3d:	mov    rdx,r15
  407f40:	call   403310 <coda_cursor_read_string@plt>
  407f45:	test   eax,eax
  407f47:	je     407f50 <print_json_data@@Base+0x510>
  407f49:	xor    eax,eax
  407f4b:	call   40a6f0 <handle_coda_error@@Base>
  407f50:	lea    rbx,[rip+0x4a72]        # 40c9c9 <_IO_stdin_used@@Base+0x9c9>
  407f57:	xor    eax,eax
  407f59:	mov    rdi,rbx
  407f5c:	call   4087e0 <print_json_data@@Base+0xda0>
  407f61:	mov    rsi,QWORD PTR [rsp+0x20]
  407f66:	mov    rdi,r14
  407f69:	call   408890 <print_json_data@@Base+0xe50>
  407f6e:	mov    rsi,QWORD PTR [rsp+0x20]
  407f73:	xor    eax,eax
  407f75:	mov    rdi,rbx
  407f78:	call   4087e0 <print_json_data@@Base+0xda0>
  407f7d:	mov    rdi,r14
  407f80:	jmp    40803a <print_json_data@@Base+0x5fa>
  407f85:	lea    rsi,[rsp+0x20]
  407f8a:	mov    rdi,r13
  407f8d:	call   403540 <coda_cursor_get_bit_size@plt>
  407f92:	test   eax,eax
  407f94:	je     407f9d <print_json_data@@Base+0x55d>
  407f96:	xor    eax,eax
  407f98:	call   40a6f0 <handle_coda_error@@Base>
  407f9d:	mov    r12,QWORD PTR [rsp+0x20]
  407fa2:	mov    r14,r12
  407fa5:	sar    r14,0x3
  407fa9:	mov    eax,r12d
  407fac:	and    eax,0x7
  407faf:	cmp    rax,0x1
  407fb3:	sbb    r14,0xffffffffffffffff
  407fb7:	mov    rdi,r14
  407fba:	call   4033f0 <malloc@plt>
  407fbf:	mov    r15,rax
  407fc2:	test   rax,rax
  407fc5:	jne    407ff6 <print_json_data@@Base+0x5b6>
  407fc7:	lea    rsi,[rip+0x408f]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  407fce:	lea    rcx,[rip+0x4947]        # 40c91c <_IO_stdin_used@@Base+0x91c>
  407fd5:	mov    edi,0xffffffff
  407fda:	mov    r8d,0x14e
  407fe0:	xor    eax,eax
  407fe2:	mov    rdx,r14
  407fe5:	call   4030d0 <coda_set_error@plt>
  407fea:	xor    eax,eax
  407fec:	call   40a6f0 <handle_coda_error@@Base>
  407ff1:	mov    r12,QWORD PTR [rsp+0x20]
  407ff6:	xor    edx,edx
  407ff8:	mov    rdi,r13
  407ffb:	mov    rsi,r15
  407ffe:	mov    rcx,r12
  408001:	call   403600 <coda_cursor_read_bits@plt>
  408006:	test   eax,eax
  408008:	je     408011 <print_json_data@@Base+0x5d1>
  40800a:	xor    eax,eax
  40800c:	call   40a6f0 <handle_coda_error@@Base>
  408011:	lea    rbx,[rip+0x49b1]        # 40c9c9 <_IO_stdin_used@@Base+0x9c9>
  408018:	xor    eax,eax
  40801a:	mov    rdi,rbx
  40801d:	call   4087e0 <print_json_data@@Base+0xda0>
  408022:	mov    rdi,r15
  408025:	mov    rsi,r14
  408028:	call   408890 <print_json_data@@Base+0xe50>
  40802d:	xor    eax,eax
  40802f:	mov    rdi,rbx
  408032:	call   4087e0 <print_json_data@@Base+0xda0>
  408037:	mov    rdi,r15
  40803a:	call   403070 <free@plt>
  40803f:	cmp    DWORD PTR [rsp+0x1c],0x0
  408044:	jne    407dc8 <print_json_data@@Base+0x388>
  40804a:	jmp    407dd6 <print_json_data@@Base+0x396>
  40804f:	mov    rdi,r13
  408052:	call   4032a0 <coda_cursor_goto_first_record_field@plt>
  408057:	test   eax,eax
  408059:	je     408062 <print_json_data@@Base+0x622>
  40805b:	xor    eax,eax
  40805d:	call   40a6f0 <handle_coda_error@@Base>
  408062:	mov    QWORD PTR [rsp+0x10],0x0
  40806b:	cmp    QWORD PTR [rsp+0x20],0x0
  408071:	jle    40813f <print_json_data@@Base+0x6ff>
  408077:	mov    ebx,0x1
  40807c:	lea    r14,[rsp+0x6c]
  408081:	lea    r15,[rip+0x440e]        # 40c496 <_IO_stdin_used@@Base+0x496>
  408088:	lea    r12,[rsp+0x60]
  40808d:	lea    rbp,[rip+0x4880]        # 40c914 <_IO_stdin_used@@Base+0x914>
  408094:	xor    esi,esi
  408096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080a0:	mov    rdi,QWORD PTR [rsp+0x8]
  4080a5:	mov    rdx,r14
  4080a8:	call   4030b0 <coda_type_get_record_field_hidden_status@plt>
  4080ad:	test   eax,eax
  4080af:	je     4080b8 <print_json_data@@Base+0x678>
  4080b1:	xor    eax,eax
  4080b3:	call   40a6f0 <handle_coda_error@@Base>
  4080b8:	cmp    DWORD PTR [rsp+0x6c],0x0
  4080bd:	jne    408103 <print_json_data@@Base+0x6c3>
  4080bf:	test   ebx,ebx
  4080c1:	jne    4080cd <print_json_data@@Base+0x68d>
  4080c3:	xor    eax,eax
  4080c5:	mov    rdi,r15
  4080c8:	call   4087e0 <print_json_data@@Base+0xda0>
  4080cd:	mov    rdi,QWORD PTR [rsp+0x8]
  4080d2:	mov    rsi,QWORD PTR [rsp+0x10]
  4080d7:	mov    rdx,r12
  4080da:	call   4035f0 <coda_type_get_record_field_name@plt>
  4080df:	test   eax,eax
  4080e1:	je     4080ea <print_json_data@@Base+0x6aa>
  4080e3:	xor    eax,eax
  4080e5:	call   40a6f0 <handle_coda_error@@Base>
  4080ea:	mov    rsi,QWORD PTR [rsp+0x60]
  4080ef:	xor    ebx,ebx
  4080f1:	xor    eax,eax
  4080f3:	mov    rdi,rbp
  4080f6:	call   4087e0 <print_json_data@@Base+0xda0>
  4080fb:	mov    rdi,r13
  4080fe:	call   407b10 <print_json_data@@Base+0xd0>
  408103:	mov    rax,QWORD PTR [rsp+0x20]
  408108:	add    rax,0xffffffffffffffff
  40810c:	cmp    QWORD PTR [rsp+0x10],rax
  408111:	jge    408126 <print_json_data@@Base+0x6e6>
  408113:	mov    rdi,r13
  408116:	call   403500 <coda_cursor_goto_next_record_field@plt>
  40811b:	test   eax,eax
  40811d:	je     408126 <print_json_data@@Base+0x6e6>
  40811f:	xor    eax,eax
  408121:	call   40a6f0 <handle_coda_error@@Base>
  408126:	mov    rsi,QWORD PTR [rsp+0x10]
  40812b:	add    rsi,0x1
  40812f:	mov    QWORD PTR [rsp+0x10],rsi
  408134:	cmp    rsi,QWORD PTR [rsp+0x20]
  408139:	jl     4080a0 <print_json_data@@Base+0x660>
  40813f:	mov    rdi,r13
  408142:	call   403320 <coda_cursor_goto_parent@plt>
  408147:	lea    rdi,[rip+0x47cc]        # 40c91a <_IO_stdin_used@@Base+0x91a>
  40814e:	jmp    408782 <print_json_data@@Base+0xd42>
  408153:	mov    ebx,0x1
  408158:	jmp    408714 <print_json_data@@Base+0xcd4>
  40815d:	lea    rsi,[rsp+0x20]
  408162:	mov    rdi,r13
  408165:	call   403390 <coda_cursor_read_double@plt>
  40816a:	test   eax,eax
  40816c:	je     408175 <print_json_data@@Base+0x735>
  40816e:	xor    eax,eax
  408170:	call   40a6f0 <handle_coda_error@@Base>
  408175:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  40817b:	jmp    4081bd <print_json_data@@Base+0x77d>
  40817d:	lea    rsi,[rsp+0x8]
  408182:	mov    rdi,r13
  408185:	call   403390 <coda_cursor_read_double@plt>
  40818a:	test   eax,eax
  40818c:	je     408195 <print_json_data@@Base+0x755>
  40818e:	xor    eax,eax
  408190:	call   40a6f0 <handle_coda_error@@Base>
  408195:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40819b:	call   4033a0 <coda_isNaN@plt>
  4081a0:	test   eax,eax
  4081a2:	jne    4081b7 <print_json_data@@Base+0x777>
  4081a4:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  4081aa:	call   403190 <coda_isInf@plt>
  4081af:	test   eax,eax
  4081b1:	je     40879c <print_json_data@@Base+0xd5c>
  4081b7:	vmovq  xmm0,QWORD PTR [rsp+0x8]
  4081bd:	lea    rdi,[rip+0x3f5a]        # 40c11e <_IO_stdin_used@@Base+0x11e>
  4081c4:	mov    al,0x1
  4081c6:	call   4087e0 <print_json_data@@Base+0xda0>
  4081cb:	cmp    DWORD PTR [rsp+0x1c],0x0
  4081d0:	jne    407dc8 <print_json_data@@Base+0x388>
  4081d6:	jmp    407dd6 <print_json_data@@Base+0x396>
  4081db:	lea    rsi,[rsp+0x20]
  4081e0:	lea    rdx,[rsp+0x8]
  4081e5:	mov    rdi,r13
  4081e8:	call   403450 <coda_cursor_read_complex_double_split@plt>
  4081ed:	test   eax,eax
  4081ef:	je     4081f8 <print_json_data@@Base+0x7b8>
  4081f1:	xor    eax,eax
  4081f3:	call   40a6f0 <handle_coda_error@@Base>
  4081f8:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  4081fe:	vmovq  xmm1,QWORD PTR [rsp+0x8]
  408204:	lea    rdi,[rip+0x47b2]        # 40c9bd <_IO_stdin_used@@Base+0x9bd>
  40820b:	mov    al,0x2
  40820d:	call   4087e0 <print_json_data@@Base+0xda0>
  408212:	cmp    DWORD PTR [rsp+0x1c],0x0
  408217:	jne    407dc8 <print_json_data@@Base+0x388>
  40821d:	jmp    407dd6 <print_json_data@@Base+0x396>
  408222:	mov    ecx,eax
  408224:	and    ecx,0xfffffff0
  408227:	lea    rdi,[rcx-0x10]
  40822b:	mov    rsi,rdi
  40822e:	shr    rsi,0x4
  408232:	add    rsi,0x1
  408236:	mov    edx,esi
  408238:	and    edx,0x3
  40823b:	cmp    rdi,0x30
  40823f:	jae    408266 <print_json_data@@Base+0x826>
  408241:	vpbroadcastq ymm0,QWORD PTR [rip+0x3f46]        # 40c190 <_IO_stdin_used@@Base+0x190>
  40824a:	xor    esi,esi
  40824c:	vmovdqa ymm3,ymm0
  408250:	vmovdqa ymm2,ymm0
  408254:	vmovdqa ymm1,ymm0
  408258:	test   rdx,rdx
  40825b:	jne    408572 <print_json_data@@Base+0xb32>
  408261:	jmp    408632 <print_json_data@@Base+0xbf2>
  408266:	mov    edi,0x1
  40826b:	sub    rdi,rsi
  40826e:	add    rdi,rdx
  408271:	add    rdi,0xffffffffffffffff
  408275:	vpbroadcastq ymm0,QWORD PTR [rip+0x3f12]        # 40c190 <_IO_stdin_used@@Base+0x190>
  40827e:	xor    esi,esi
  408280:	vmovdqa ymm3,ymm0
  408284:	vmovdqa ymm2,ymm0
  408288:	vmovdqa ymm1,ymm0
  40828c:	nop    DWORD PTR [rax+0x0]
  408290:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x20]
  408296:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x40]
  40829c:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x60]
  4082a2:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x80]
  4082ab:	vpsrlq ymm8,ymm0,0x20
  4082b0:	vpmuludq ymm8,ymm4,ymm8
  4082b5:	vpsrlq ymm9,ymm4,0x20
  4082ba:	vpmuludq ymm9,ymm9,ymm0
  4082be:	vpaddq ymm8,ymm8,ymm9
  4082c3:	vpsllq ymm8,ymm8,0x20
  4082c9:	vpmuludq ymm0,ymm4,ymm0
  4082cd:	vpaddq ymm0,ymm0,ymm8
  4082d2:	vpsrlq ymm4,ymm3,0x20
  4082d7:	vpmuludq ymm4,ymm5,ymm4
  4082db:	vpsrlq ymm8,ymm5,0x20
  4082e0:	vpmuludq ymm8,ymm8,ymm3
  4082e4:	vpaddq ymm4,ymm4,ymm8
  4082e9:	vpsllq ymm4,ymm4,0x20
  4082ee:	vpmuludq ymm3,ymm5,ymm3
  4082f2:	vpaddq ymm3,ymm3,ymm4
  4082f6:	vpsrlq ymm4,ymm2,0x20
  4082fb:	vpmuludq ymm4,ymm6,ymm4
  4082ff:	vpsrlq ymm5,ymm6,0x20
  408304:	vpmuludq ymm5,ymm5,ymm2
  408308:	vpaddq ymm4,ymm4,ymm5
  40830c:	vpsllq ymm4,ymm4,0x20
  408311:	vpmuludq ymm2,ymm6,ymm2
  408315:	vpaddq ymm2,ymm2,ymm4
  408319:	vpsrlq ymm4,ymm1,0x20
  40831e:	vpmuludq ymm4,ymm7,ymm4
  408322:	vpsrlq ymm5,ymm7,0x20
  408327:	vpmuludq ymm5,ymm5,ymm1
  40832b:	vpaddq ymm4,ymm4,ymm5
  40832f:	vpsllq ymm4,ymm4,0x20
  408334:	vpmuludq ymm1,ymm7,ymm1
  408338:	vpaddq ymm1,ymm1,ymm4
  40833c:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0xa0]
  408345:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0xc0]
  40834e:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0xe0]
  408357:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x100]
  408360:	vpsrlq ymm8,ymm4,0x20
  408365:	vpmuludq ymm8,ymm8,ymm0
  408369:	vpsrlq ymm9,ymm0,0x20
  40836e:	vpmuludq ymm9,ymm4,ymm9
  408373:	vpaddq ymm8,ymm9,ymm8
  408378:	vpsllq ymm8,ymm8,0x20
  40837e:	vpmuludq ymm0,ymm4,ymm0
  408382:	vpaddq ymm0,ymm0,ymm8
  408387:	vpsrlq ymm4,ymm5,0x20
  40838c:	vpmuludq ymm4,ymm4,ymm3
  408390:	vpsrlq ymm8,ymm3,0x20
  408395:	vpmuludq ymm8,ymm5,ymm8
  40839a:	vpaddq ymm4,ymm8,ymm4
  40839e:	vpsllq ymm4,ymm4,0x20
  4083a3:	vpmuludq ymm3,ymm5,ymm3
  4083a7:	vpaddq ymm3,ymm3,ymm4
  4083ab:	vpsrlq ymm4,ymm6,0x20
  4083b0:	vpmuludq ymm4,ymm4,ymm2
  4083b4:	vpsrlq ymm5,ymm2,0x20
  4083b9:	vpmuludq ymm5,ymm6,ymm5
  4083bd:	vpaddq ymm4,ymm5,ymm4
  4083c1:	vpsllq ymm4,ymm4,0x20
  4083c6:	vpmuludq ymm2,ymm6,ymm2
  4083ca:	vpaddq ymm2,ymm2,ymm4
  4083ce:	vpsrlq ymm4,ymm7,0x20
  4083d3:	vpmuludq ymm4,ymm4,ymm1
  4083d7:	vpsrlq ymm5,ymm1,0x20
  4083dc:	vpmuludq ymm5,ymm7,ymm5
  4083e0:	vpaddq ymm4,ymm5,ymm4
  4083e4:	vpsllq ymm4,ymm4,0x20
  4083e9:	vpmuludq ymm1,ymm7,ymm1
  4083ed:	vpaddq ymm1,ymm1,ymm4
  4083f1:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x120]
  4083fa:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x140]
  408403:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x160]
  40840c:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x180]
  408415:	vpsrlq ymm8,ymm4,0x20
  40841a:	vpmuludq ymm8,ymm8,ymm0
  40841e:	vpsrlq ymm9,ymm0,0x20
  408423:	vpmuludq ymm9,ymm4,ymm9
  408428:	vpaddq ymm8,ymm9,ymm8
  40842d:	vpsllq ymm8,ymm8,0x20
  408433:	vpmuludq ymm0,ymm4,ymm0
  408437:	vpaddq ymm0,ymm0,ymm8
  40843c:	vpsrlq ymm4,ymm5,0x20
  408441:	vpmuludq ymm4,ymm4,ymm3
  408445:	vpsrlq ymm8,ymm3,0x20
  40844a:	vpmuludq ymm8,ymm5,ymm8
  40844f:	vpaddq ymm4,ymm8,ymm4
  408453:	vpsllq ymm4,ymm4,0x20
  408458:	vpmuludq ymm3,ymm5,ymm3
  40845c:	vpaddq ymm3,ymm3,ymm4
  408460:	vpsrlq ymm4,ymm6,0x20
  408465:	vpmuludq ymm4,ymm4,ymm2
  408469:	vpsrlq ymm5,ymm2,0x20
  40846e:	vpmuludq ymm5,ymm6,ymm5
  408472:	vpaddq ymm4,ymm5,ymm4
  408476:	vpsllq ymm4,ymm4,0x20
  40847b:	vpmuludq ymm2,ymm6,ymm2
  40847f:	vpaddq ymm2,ymm2,ymm4
  408483:	vpsrlq ymm4,ymm7,0x20
  408488:	vpmuludq ymm4,ymm4,ymm1
  40848c:	vpsrlq ymm5,ymm1,0x20
  408491:	vpmuludq ymm5,ymm7,ymm5
  408495:	vpaddq ymm4,ymm5,ymm4
  408499:	vpsllq ymm4,ymm4,0x20
  40849e:	vpmuludq ymm1,ymm7,ymm1
  4084a2:	vpaddq ymm1,ymm1,ymm4
  4084a6:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x1a0]
  4084af:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x1c0]
  4084b8:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x1e0]
  4084c1:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x200]
  4084ca:	vpsrlq ymm8,ymm4,0x20
  4084cf:	vpmuludq ymm8,ymm8,ymm0
  4084d3:	vpsrlq ymm9,ymm0,0x20
  4084d8:	vpmuludq ymm9,ymm4,ymm9
  4084dd:	vpaddq ymm8,ymm9,ymm8
  4084e2:	vpsllq ymm8,ymm8,0x20
  4084e8:	vpmuludq ymm0,ymm4,ymm0
  4084ec:	vpaddq ymm0,ymm0,ymm8
  4084f1:	vpsrlq ymm4,ymm5,0x20
  4084f6:	vpmuludq ymm4,ymm4,ymm3
  4084fa:	vpsrlq ymm8,ymm3,0x20
  4084ff:	vpmuludq ymm8,ymm5,ymm8
  408504:	vpaddq ymm4,ymm8,ymm4
  408508:	vpsllq ymm4,ymm4,0x20
  40850d:	vpmuludq ymm3,ymm5,ymm3
  408511:	vpaddq ymm3,ymm3,ymm4
  408515:	vpsrlq ymm4,ymm6,0x20
  40851a:	vpmuludq ymm4,ymm4,ymm2
  40851e:	vpsrlq ymm5,ymm2,0x20
  408523:	vpmuludq ymm5,ymm6,ymm5
  408527:	vpaddq ymm4,ymm5,ymm4
  40852b:	vpsllq ymm4,ymm4,0x20
  408530:	vpmuludq ymm2,ymm6,ymm2
  408534:	vpaddq ymm2,ymm2,ymm4
  408538:	vpsrlq ymm4,ymm7,0x20
  40853d:	vpmuludq ymm4,ymm4,ymm1
  408541:	vpsrlq ymm5,ymm1,0x20
  408546:	vpmuludq ymm5,ymm7,ymm5
  40854a:	vpaddq ymm4,ymm5,ymm4
  40854e:	vpsllq ymm4,ymm4,0x20
  408553:	vpmuludq ymm1,ymm7,ymm1
  408557:	vpaddq ymm1,ymm1,ymm4
  40855b:	add    rsi,0x40
  40855f:	add    rdi,0x4
  408563:	jne    408290 <print_json_data@@Base+0x850>
  408569:	test   rdx,rdx
  40856c:	je     408632 <print_json_data@@Base+0xbf2>
  408572:	lea    rsi,[rsp+rsi*8]
  408576:	add    rsi,0x80
  40857d:	neg    rdx
  408580:	vmovdqu ymm4,YMMWORD PTR [rsi-0x60]
  408585:	vmovdqu ymm5,YMMWORD PTR [rsi-0x40]
  40858a:	vmovdqu ymm6,YMMWORD PTR [rsi-0x20]
  40858f:	vmovdqu ymm7,YMMWORD PTR [rsi]
  408593:	vpsrlq ymm8,ymm0,0x20
  408598:	vpmuludq ymm8,ymm4,ymm8
  40859d:	vpsrlq ymm9,ymm4,0x20
  4085a2:	vpmuludq ymm9,ymm9,ymm0
  4085a6:	vpaddq ymm8,ymm8,ymm9
  4085ab:	vpsllq ymm8,ymm8,0x20
  4085b1:	vpmuludq ymm0,ymm4,ymm0
  4085b5:	vpaddq ymm0,ymm0,ymm8
  4085ba:	vpsrlq ymm4,ymm3,0x20
  4085bf:	vpmuludq ymm4,ymm5,ymm4
  4085c3:	vpsrlq ymm8,ymm5,0x20
  4085c8:	vpmuludq ymm8,ymm8,ymm3
  4085cc:	vpaddq ymm4,ymm4,ymm8
  4085d1:	vpsllq ymm4,ymm4,0x20
  4085d6:	vpmuludq ymm3,ymm5,ymm3
  4085da:	vpaddq ymm3,ymm3,ymm4
  4085de:	vpsrlq ymm4,ymm2,0x20
  4085e3:	vpmuludq ymm4,ymm6,ymm4
  4085e7:	vpsrlq ymm5,ymm6,0x20
  4085ec:	vpmuludq ymm5,ymm5,ymm2
  4085f0:	vpaddq ymm4,ymm4,ymm5
  4085f4:	vpsllq ymm4,ymm4,0x20
  4085f9:	vpmuludq ymm2,ymm6,ymm2
  4085fd:	vpaddq ymm2,ymm2,ymm4
  408601:	vpsrlq ymm4,ymm1,0x20
  408606:	vpmuludq ymm4,ymm7,ymm4
  40860a:	vpsrlq ymm5,ymm7,0x20
  40860f:	vpmuludq ymm5,ymm5,ymm1
  408613:	vpaddq ymm4,ymm4,ymm5
  408617:	vpsllq ymm4,ymm4,0x20
  40861c:	vpmuludq ymm1,ymm7,ymm1
  408620:	vpaddq ymm1,ymm1,ymm4
  408624:	sub    rsi,0xffffffffffffff80
  408628:	add    rdx,0x1
  40862c:	jne    408580 <print_json_data@@Base+0xb40>
  408632:	vpsrlq ymm4,ymm3,0x20
  408637:	vpmuludq ymm4,ymm4,ymm0
  40863b:	vpsrlq ymm5,ymm0,0x20
  408640:	vpmuludq ymm5,ymm3,ymm5
  408644:	vpaddq ymm4,ymm5,ymm4
  408648:	vpsllq ymm4,ymm4,0x20
  40864d:	vpmuludq ymm0,ymm3,ymm0
  408651:	vpaddq ymm0,ymm0,ymm4
  408655:	vpsrlq ymm3,ymm2,0x20
  40865a:	vpmuludq ymm3,ymm3,ymm0
  40865e:	vpsrlq ymm4,ymm0,0x20
  408663:	vpmuludq ymm4,ymm2,ymm4
  408667:	vpaddq ymm3,ymm4,ymm3
  40866b:	vpsllq ymm3,ymm3,0x20
  408670:	vpmuludq ymm0,ymm2,ymm0
  408674:	vpaddq ymm0,ymm0,ymm3
  408678:	vpsrlq ymm2,ymm1,0x20
  40867d:	vpmuludq ymm2,ymm2,ymm0
  408681:	vpsrlq ymm3,ymm0,0x20
  408686:	vpmuludq ymm3,ymm1,ymm3
  40868a:	vpaddq ymm2,ymm3,ymm2
  40868e:	vpsllq ymm2,ymm2,0x20
  408693:	vpmuludq ymm0,ymm1,ymm0
  408697:	vpaddq ymm0,ymm0,ymm2
  40869b:	vextracti128 xmm1,ymm0,0x1
  4086a1:	vpsrlq ymm2,ymm0,0x20
  4086a6:	vpmuludq ymm2,ymm2,ymm1
  4086aa:	vpsrlq ymm3,ymm1,0x20
  4086af:	vpmuludq ymm3,ymm0,ymm3
  4086b3:	vpaddq ymm2,ymm3,ymm2
  4086b7:	vpsllq ymm2,ymm2,0x20
  4086bc:	vpmuludq ymm0,ymm0,ymm1
  4086c0:	vpaddq ymm0,ymm0,ymm2
  4086c4:	vpshufd xmm1,xmm0,0x4e
  4086c9:	vpsrlq ymm2,ymm0,0x20
  4086ce:	vpmuludq ymm2,ymm2,ymm1
  4086d2:	vpsrlq ymm3,ymm1,0x20
  4086d7:	vpmuludq ymm3,ymm0,ymm3
  4086db:	vpaddq ymm2,ymm3,ymm2
  4086df:	vpsllq ymm2,ymm2,0x20
  4086e4:	vpmuludq ymm0,ymm0,ymm1
  4086e8:	vpaddq ymm0,ymm0,ymm2
  4086ec:	vmovq  rbx,xmm0
  4086f1:	cmp    rcx,rax
  4086f4:	je     40870f <print_json_data@@Base+0xccf>
  4086f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408700:	imul   rbx,QWORD PTR [rsp+rcx*8+0x20]
  408706:	add    rcx,0x1
  40870a:	cmp    rax,rcx
  40870d:	jne    408700 <print_json_data@@Base+0xcc0>
  40870f:	test   rbx,rbx
  408712:	jle    40877b <print_json_data@@Base+0xd3b>
  408714:	mov    rdi,r13
  408717:	vzeroupper 
  40871a:	call   403270 <coda_cursor_goto_first_array_element@plt>
  40871f:	test   eax,eax
  408721:	je     40872a <print_json_data@@Base+0xcea>
  408723:	xor    eax,eax
  408725:	call   40a6f0 <handle_coda_error@@Base>
  40872a:	lea    r15,[rbx-0x1]
  40872e:	lea    r14,[rip+0x3d61]        # 40c496 <_IO_stdin_used@@Base+0x496>
  408735:	xor    ebp,ebp
  408737:	nop    WORD PTR [rax+rax*1+0x0]
  408740:	mov    rdi,r13
  408743:	call   407b10 <print_json_data@@Base+0xd0>
  408748:	cmp    r15,rbp
  40874b:	jle    40876a <print_json_data@@Base+0xd2a>
  40874d:	xor    eax,eax
  40874f:	mov    rdi,r14
  408752:	call   4087e0 <print_json_data@@Base+0xda0>
  408757:	mov    rdi,r13
  40875a:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  40875f:	test   eax,eax
  408761:	je     40876a <print_json_data@@Base+0xd2a>
  408763:	xor    eax,eax
  408765:	call   40a6f0 <handle_coda_error@@Base>
  40876a:	add    rbp,0x1
  40876e:	cmp    rbx,rbp
  408771:	jne    408740 <print_json_data@@Base+0xd00>
  408773:	mov    rdi,r13
  408776:	call   403320 <coda_cursor_goto_parent@plt>
  40877b:	lea    rdi,[rip+0x437b]        # 40cafd <_IO_stdin_used@@Base+0xafd>
  408782:	xor    eax,eax
  408784:	vzeroupper 
  408787:	call   4087e0 <print_json_data@@Base+0xda0>
  40878c:	cmp    DWORD PTR [rsp+0x1c],0x0
  408791:	jne    407dc8 <print_json_data@@Base+0x388>
  408797:	jmp    407dd6 <print_json_data@@Base+0x396>
  40879c:	vmovq  xmm0,QWORD PTR [rsp+0x8]
  4087a2:	lea    rdi,[rip+0x41dc]        # 40c985 <_IO_stdin_used@@Base+0x985>
  4087a9:	lea    rsi,[rsp+0x20]
  4087ae:	call   4030f0 <coda_time_double_to_string@plt>
  4087b3:	test   eax,eax
  4087b5:	je     4087c0 <print_json_data@@Base+0xd80>
  4087b7:	lea    rdi,[rip+0x41e4]        # 40c9a2 <_IO_stdin_used@@Base+0x9a2>
  4087be:	jmp    408782 <print_json_data@@Base+0xd42>
  4087c0:	lea    rdi,[rip+0x4339]        # 40cb00 <_IO_stdin_used@@Base+0xb00>
  4087c7:	lea    rsi,[rsp+0x20]
  4087cc:	jmp    407dba <print_json_data@@Base+0x37a>
  4087d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087db:	nop    DWORD PTR [rax+rax*1+0x0]
  4087e0:	sub    rsp,0xd8
  4087e7:	mov    r10,rdi
  4087ea:	test   al,al
  4087ec:	je     40882d <print_json_data@@Base+0xded>
  4087ee:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4087f4:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  4087fa:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  408800:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  408809:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  408812:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40881b:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  408824:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40882d:	mov    QWORD PTR [rsp+0x48],r9
  408832:	mov    QWORD PTR [rsp+0x40],r8
  408837:	mov    QWORD PTR [rsp+0x38],rcx
  40883c:	mov    QWORD PTR [rsp+0x30],rdx
  408841:	mov    QWORD PTR [rsp+0x28],rsi
  408846:	lea    rax,[rsp+0x20]
  40884b:	mov    QWORD PTR [rsp+0x10],rax
  408850:	lea    rax,[rsp+0xe0]
  408858:	mov    QWORD PTR [rsp+0x8],rax
  40885d:	movabs rax,0x3000000008
  408867:	mov    QWORD PTR [rsp],rax
  40886b:	lea    rax,[rip+0x8c36]        # 4114a8 <ascii_output@@Base>
  408872:	mov    rdi,QWORD PTR [rax]
  408875:	mov    rdx,rsp
  408878:	mov    rsi,r10
  40887b:	call   403530 <vfprintf@plt>
  408880:	add    rsp,0xd8
  408887:	ret    
  408888:	nop    DWORD PTR [rax+rax*1+0x0]
  408890:	push   rbp
  408891:	push   r15
  408893:	push   r14
  408895:	push   r13
  408897:	push   r12
  408899:	push   rbx
  40889a:	push   rax
  40889b:	test   rsi,rsi
  40889e:	jle    40898d <print_json_data@@Base+0xf4d>
  4088a4:	mov    rbx,rsi
  4088a7:	mov    r14,rdi
  4088aa:	lea    r13,[rip+0x3fe3]        # 40c894 <_IO_stdin_used@@Base+0x894>
  4088b1:	lea    rbp,[rip+0x3851]        # 40c109 <_IO_stdin_used@@Base+0x109>
  4088b8:	lea    r12,[rip+0x4109]        # 40c9c8 <_IO_stdin_used@@Base+0x9c8>
  4088bf:	xor    r15d,r15d
  4088c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088cc:	nop    DWORD PTR [rax+0x0]
  4088d0:	movsx  esi,BYTE PTR [r14+r15*1]
  4088d5:	lea    eax,[rsi-0x8]
  4088d8:	cmp    eax,0x1a
  4088db:	ja     4088fa <print_json_data@@Base+0xeba>
  4088dd:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4088e2:	add    rax,r13
  4088e5:	jmp    rax
  4088e7:	xor    eax,eax
  4088e9:	lea    rdi,[rip+0x380a]        # 40c0fa <_IO_stdin_used@@Base+0xfa>
  4088f0:	call   4087e0 <print_json_data@@Base+0xda0>
  4088f5:	jmp    408980 <print_json_data@@Base+0xf40>
  4088fa:	cmp    esi,0x5c
  4088fd:	jne    40890f <print_json_data@@Base+0xecf>
  4088ff:	xor    eax,eax
  408901:	lea    rdi,[rip+0x3804]        # 40c10c <_IO_stdin_used@@Base+0x10c>
  408908:	call   4087e0 <print_json_data@@Base+0xda0>
  40890d:	jmp    408980 <print_json_data@@Base+0xf40>
  40890f:	cmp    sil,0x20
  408913:	jl     40896e <print_json_data@@Base+0xf2e>
  408915:	cmp    sil,0x7f
  408919:	je     40896e <print_json_data@@Base+0xf2e>
  40891b:	xor    eax,eax
  40891d:	lea    rdi,[rip+0x3a24]        # 40c348 <_IO_stdin_used@@Base+0x348>
  408924:	jmp    40897b <print_json_data@@Base+0xf3b>
  408926:	xor    eax,eax
  408928:	lea    rdi,[rip+0x37ce]        # 40c0fd <_IO_stdin_used@@Base+0xfd>
  40892f:	call   4087e0 <print_json_data@@Base+0xda0>
  408934:	jmp    408980 <print_json_data@@Base+0xf40>
  408936:	xor    eax,eax
  408938:	lea    rdi,[rip+0x37c1]        # 40c100 <_IO_stdin_used@@Base+0x100>
  40893f:	call   4087e0 <print_json_data@@Base+0xda0>
  408944:	jmp    408980 <print_json_data@@Base+0xf40>
  408946:	xor    eax,eax
  408948:	lea    rdi,[rip+0x37b7]        # 40c106 <_IO_stdin_used@@Base+0x106>
  40894f:	call   4087e0 <print_json_data@@Base+0xda0>
  408954:	jmp    408980 <print_json_data@@Base+0xf40>
  408956:	xor    eax,eax
  408958:	mov    rdi,rbp
  40895b:	call   4087e0 <print_json_data@@Base+0xda0>
  408960:	jmp    408980 <print_json_data@@Base+0xf40>
  408962:	xor    eax,eax
  408964:	mov    rdi,r12
  408967:	call   4087e0 <print_json_data@@Base+0xda0>
  40896c:	jmp    408980 <print_json_data@@Base+0xf40>
  40896e:	movzx  esi,sil
  408972:	xor    eax,eax
  408974:	lea    rdi,[rip+0x4050]        # 40c9cb <_IO_stdin_used@@Base+0x9cb>
  40897b:	call   4087e0 <print_json_data@@Base+0xda0>
  408980:	add    r15,0x1
  408984:	cmp    rbx,r15
  408987:	jne    4088d0 <print_json_data@@Base+0xe90>
  40898d:	add    rsp,0x8
  408991:	pop    rbx
  408992:	pop    r12
  408994:	pop    r13
  408996:	pop    r14
  408998:	pop    r15
  40899a:	pop    rbp
  40899b:	ret    
  40899c:	nop    DWORD PTR [rax+0x0]

00000000004089a0 <print_full_field_name@@Base>:
  4089a0:	push   rbp
  4089a1:	push   r15
  4089a3:	push   r14
  4089a5:	push   r13
  4089a7:	push   r12
  4089a9:	push   rbx
  4089aa:	sub    rsp,0x18
  4089ae:	mov    r12d,edx
  4089b1:	mov    r14,rdi
  4089b4:	cmp    esi,0x1
  4089b7:	jne    408ad9 <print_full_field_name@@Base+0x139>
  4089bd:	mov    DWORD PTR [rsp+0xc],r12d
  4089c2:	lea    rbx,[rip+0x799f]        # 410368 <traverse_info@@Base>
  4089c9:	cmp    DWORD PTR [rbx+0x110],0x0
  4089d0:	jle    408c0b <print_full_field_name@@Base+0x26b>
  4089d6:	lea    r15,[rsp+0x14]
  4089db:	xor    ebp,ebp
  4089dd:	xor    r13d,r13d
  4089e0:	xor    r12d,r12d
  4089e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089ed:	nop    DWORD PTR [rax]
  4089f0:	mov    rdi,QWORD PTR [rbx+rbp*8+0x10]
  4089f5:	mov    rsi,r15
  4089f8:	call   403620 <coda_type_get_class@plt>
  4089fd:	test   eax,eax
  4089ff:	je     408a08 <print_full_field_name@@Base+0x68>
  408a01:	xor    eax,eax
  408a03:	call   40a6f0 <handle_coda_error@@Base>
  408a08:	mov    eax,DWORD PTR [rsp+0x14]
  408a0c:	cmp    eax,0x1
  408a0f:	je     408a40 <print_full_field_name@@Base+0xa0>
  408a11:	test   eax,eax
  408a13:	jne    408a90 <print_full_field_name@@Base+0xf0>
  408a15:	movsxd r12,r12d
  408a18:	mov    rdx,QWORD PTR [rbx+r12*8+0x1038]
  408a20:	xor    eax,eax
  408a22:	mov    rdi,r14
  408a25:	lea    rsi,[rip+0x3fc4]        # 40c9f0 <_IO_stdin_used@@Base+0x9f0>
  408a2c:	call   403300 <fprintf@plt>
  408a31:	add    r12d,0x1
  408a35:	jmp    408a90 <print_full_field_name@@Base+0xf0>
  408a37:	nop    WORD PTR [rax+rax*1+0x0]
  408a40:	test   rbp,rbp
  408a43:	jne    408a52 <print_full_field_name@@Base+0xb2>
  408a45:	mov    edi,0x2f
  408a4a:	mov    rsi,r14
  408a4d:	call   4032b0 <fputc@plt>
  408a52:	movsxd rax,r13d
  408a55:	lea    rax,[rax+rax*4]
  408a59:	shl    rax,0x4
  408a5d:	cmp    DWORD PTR [rbx+rax*1+0x538],0x0
  408a65:	jle    408a8c <print_full_field_name@@Base+0xec>
  408a67:	mov    edi,0x5b
  408a6c:	mov    rsi,r14
  408a6f:	call   4032b0 <fputc@plt>
  408a74:	mov    rdi,r14
  408a77:	mov    esi,r13d
  408a7a:	call   408c70 <print_full_field_name@@Base+0x2d0>
  408a7f:	mov    edi,0x5d
  408a84:	mov    rsi,r14
  408a87:	call   4032b0 <fputc@plt>
  408a8c:	add    r13d,0x1
  408a90:	add    rbp,0x1
  408a94:	movsxd rax,DWORD PTR [rbx+0x110]
  408a9b:	cmp    rbp,rax
  408a9e:	jl     4089f0 <print_full_field_name@@Base+0x50>
  408aa4:	cmp    DWORD PTR [rsp+0xc],0x0
  408aa9:	je     408c5f <print_full_field_name@@Base+0x2bf>
  408aaf:	cmp    r13d,DWORD PTR [rbx+0xf34]
  408ab6:	jge    408c5f <print_full_field_name@@Base+0x2bf>
  408abc:	mov    edi,0x5b
  408ac1:	mov    rsi,r14
  408ac4:	call   4032b0 <fputc@plt>
  408ac9:	mov    rdi,r14
  408acc:	mov    esi,r13d
  408acf:	call   408c70 <print_full_field_name@@Base+0x2d0>
  408ad4:	jmp    408c52 <print_full_field_name@@Base+0x2b2>
  408ad9:	mov    r15d,esi
  408adc:	lea    rbp,[rip+0x7885]        # 410368 <traverse_info@@Base>
  408ae3:	cmp    DWORD PTR [rbp+0x1138],0x0
  408aea:	jle    408b22 <print_full_field_name@@Base+0x182>
  408aec:	xor    ebx,ebx
  408aee:	xchg   ax,ax
  408af0:	test   rbx,rbx
  408af3:	je     408b02 <print_full_field_name@@Base+0x162>
  408af5:	mov    edi,0x2e
  408afa:	mov    rsi,r14
  408afd:	call   4032b0 <fputc@plt>
  408b02:	mov    rdi,QWORD PTR [rbp+rbx*8+0x1038]
  408b0a:	mov    rsi,r14
  408b0d:	call   403250 <fputs@plt>
  408b12:	add    rbx,0x1
  408b16:	movsxd rax,DWORD PTR [rbp+0x1138]
  408b1d:	cmp    rbx,rax
  408b20:	jl     408af0 <print_full_field_name@@Base+0x150>
  408b22:	cmp    r15d,0x2
  408b26:	jne    408c5f <print_full_field_name@@Base+0x2bf>
  408b2c:	cmp    DWORD PTR [rbp+0x110],0x0
  408b33:	jle    408c1b <print_full_field_name@@Base+0x27b>
  408b39:	lea    r15,[rsp+0x10]
  408b3e:	xor    ebx,ebx
  408b40:	xor    r13d,r13d
  408b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b4d:	nop    DWORD PTR [rax]
  408b50:	mov    rdi,QWORD PTR [rbp+rbx*8+0x10]
  408b55:	mov    rsi,r15
  408b58:	call   403620 <coda_type_get_class@plt>
  408b5d:	test   eax,eax
  408b5f:	je     408b68 <print_full_field_name@@Base+0x1c8>
  408b61:	xor    eax,eax
  408b63:	call   40a6f0 <handle_coda_error@@Base>
  408b68:	cmp    DWORD PTR [rsp+0x10],0x1
  408b6d:	jne    408bc5 <print_full_field_name@@Base+0x225>
  408b6f:	movsxd rax,r13d
  408b72:	lea    rax,[rax+rax*4]
  408b76:	shl    rax,0x4
  408b7a:	cmp    DWORD PTR [rbp+rax*1+0x538],0x0
  408b82:	jle    408bc5 <print_full_field_name@@Base+0x225>
  408b84:	cmp    DWORD PTR [rbp+rax*1+0x534],0x0
  408b8c:	je     408b9d <print_full_field_name@@Base+0x1fd>
  408b8e:	mov    edi,0x2c
  408b93:	mov    rsi,r14
  408b96:	call   4032b0 <fputc@plt>
  408b9b:	jmp    408bb6 <print_full_field_name@@Base+0x216>
  408b9d:	mov    esi,0x2
  408ba2:	mov    edx,0x1
  408ba7:	lea    rdi,[rip+0x3e46]        # 40c9f4 <_IO_stdin_used@@Base+0x9f4>
  408bae:	mov    rcx,r14
  408bb1:	call   4035a0 <fwrite@plt>
  408bb6:	mov    rdi,r14
  408bb9:	mov    esi,r13d
  408bbc:	call   408c70 <print_full_field_name@@Base+0x2d0>
  408bc1:	add    r13d,0x1
  408bc5:	add    rbx,0x1
  408bc9:	movsxd rax,DWORD PTR [rbp+0x110]
  408bd0:	cmp    rbx,rax
  408bd3:	jl     408b50 <print_full_field_name@@Base+0x1b0>
  408bd9:	test   r12d,r12d
  408bdc:	je     408c4d <print_full_field_name@@Base+0x2ad>
  408bde:	cmp    r13d,DWORD PTR [rbp+0xf34]
  408be5:	jge    408c4d <print_full_field_name@@Base+0x2ad>
  408be7:	movsxd rax,r13d
  408bea:	lea    rax,[rax+rax*4]
  408bee:	shl    rax,0x4
  408bf2:	cmp    DWORD PTR [rbp+rax*1+0x534],0x0
  408bfa:	je     408c25 <print_full_field_name@@Base+0x285>
  408bfc:	mov    edi,0x2c
  408c01:	mov    rsi,r14
  408c04:	call   4032b0 <fputc@plt>
  408c09:	jmp    408c3e <print_full_field_name@@Base+0x29e>
  408c0b:	xor    r13d,r13d
  408c0e:	cmp    DWORD PTR [rsp+0xc],0x0
  408c13:	jne    408aaf <print_full_field_name@@Base+0x10f>
  408c19:	jmp    408c5f <print_full_field_name@@Base+0x2bf>
  408c1b:	xor    r13d,r13d
  408c1e:	test   r12d,r12d
  408c21:	jne    408bde <print_full_field_name@@Base+0x23e>
  408c23:	jmp    408c4d <print_full_field_name@@Base+0x2ad>
  408c25:	lea    rdi,[rip+0x3dc8]        # 40c9f4 <_IO_stdin_used@@Base+0x9f4>
  408c2c:	mov    esi,0x2
  408c31:	mov    edx,0x1
  408c36:	mov    rcx,r14
  408c39:	call   4035a0 <fwrite@plt>
  408c3e:	mov    rdi,r14
  408c41:	mov    esi,r13d
  408c44:	call   408c70 <print_full_field_name@@Base+0x2d0>
  408c49:	add    r13d,0x1
  408c4d:	test   r13d,r13d
  408c50:	jle    408c5f <print_full_field_name@@Base+0x2bf>
  408c52:	mov    edi,0x5d
  408c57:	mov    rsi,r14
  408c5a:	call   4032b0 <fputc@plt>
  408c5f:	add    rsp,0x18
  408c63:	pop    rbx
  408c64:	pop    r12
  408c66:	pop    r13
  408c68:	pop    r14
  408c6a:	pop    r15
  408c6c:	pop    rbp
  408c6d:	ret    
  408c6e:	xchg   ax,ax
  408c70:	push   rbp
  408c71:	push   r15
  408c73:	push   r14
  408c75:	push   r13
  408c77:	push   r12
  408c79:	push   rbx
  408c7a:	push   rax
  408c7b:	movsxd rax,esi
  408c7e:	lea    rax,[rax+rax*4]
  408c82:	shl    rax,0x4
  408c86:	lea    rcx,[rip+0x76db]        # 410368 <traverse_info@@Base>
  408c8d:	cmp    DWORD PTR [rcx+rax*1+0x538],0x0
  408c95:	jle    408d62 <print_full_field_name@@Base+0x3c2>
  408c9b:	mov    r12,rdi
  408c9e:	lea    rbx,[rcx+rax*1]
  408ca2:	add    rbx,0x538
  408ca9:	lea    r13,[rip+0x76b0]        # 410360 <calc_dim@@Base>
  408cb0:	lea    r14,[rip+0x3d44]        # 40c9fb <_IO_stdin_used@@Base+0x9fb>
  408cb7:	lea    rbp,[rip+0x8812]        # 4114d0 <dim_info@@Base>
  408cbe:	xor    r15d,r15d
  408cc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  408cd0:	test   r15,r15
  408cd3:	je     408ce2 <print_full_field_name@@Base+0x342>
  408cd5:	mov    edi,0x2c
  408cda:	mov    rsi,r12
  408cdd:	call   4032b0 <fputc@plt>
  408ce2:	cmp    DWORD PTR [r13+0x0],0x0
  408ce7:	je     408d20 <print_full_field_name@@Base+0x380>
  408ce9:	mov    eax,DWORD PTR [rbx-0x4]
  408cec:	add    eax,r15d
  408cef:	cdqe   
  408cf1:	cmp    DWORD PTR [rbp+rax*4+0x48],0x0
  408cf6:	je     408d40 <print_full_field_name@@Base+0x3a0>
  408cf8:	movsxd rdx,DWORD PTR [rbp+rax*4+0x24]
  408cfd:	movsxd rcx,DWORD PTR [rbp+rax*4+0x4]
  408d02:	xor    eax,eax
  408d04:	mov    rdi,r12
  408d07:	lea    rsi,[rip+0x3ce9]        # 40c9f7 <_IO_stdin_used@@Base+0x9f7>
  408d0e:	call   403300 <fprintf@plt>
  408d13:	jmp    408d52 <print_full_field_name@@Base+0x3b2>
  408d15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d1f:	nop
  408d20:	movsxd rdx,DWORD PTR [rbx+r15*4+0x4]
  408d25:	cmp    rdx,0xffffffffffffffff
  408d29:	jne    408d45 <print_full_field_name@@Base+0x3a5>
  408d2b:	mov    edi,0x3f
  408d30:	mov    rsi,r12
  408d33:	call   4032b0 <fputc@plt>
  408d38:	jmp    408d52 <print_full_field_name@@Base+0x3b2>
  408d3a:	nop    WORD PTR [rax+rax*1+0x0]
  408d40:	movsxd rdx,DWORD PTR [rbp+rax*4+0x4]
  408d45:	xor    eax,eax
  408d47:	mov    rdi,r12
  408d4a:	mov    rsi,r14
  408d4d:	call   403300 <fprintf@plt>
  408d52:	add    r15,0x1
  408d56:	movsxd rax,DWORD PTR [rbx]
  408d59:	cmp    r15,rax
  408d5c:	jl     408cd0 <print_full_field_name@@Base+0x330>
  408d62:	add    rsp,0x8
  408d66:	pop    rbx
  408d67:	pop    r12
  408d69:	pop    r13
  408d6b:	pop    r14
  408d6d:	pop    r15
  408d6f:	pop    rbp
  408d70:	ret    
  408d71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408d80 <traverse_info_init@@Base>:
  408d80:	lea    rax,[rip+0x75e1]        # 410368 <traverse_info@@Base>
  408d87:	mov    QWORD PTR [rax+0x8],0x0
  408d8f:	mov    DWORD PTR [rax+0x110],0x0
  408d99:	mov    DWORD PTR [rax+0xf34],0x0
  408da3:	mov    DWORD PTR [rax+0x1138],0x0
  408dad:	ret    
  408dae:	xchg   ax,ax

0000000000408db0 <traverse_info_done@@Base>:
  408db0:	push   rbx
  408db1:	lea    rbx,[rip+0x75b0]        # 410368 <traverse_info@@Base>
  408db8:	mov    rdi,QWORD PTR [rbx+0x8]
  408dbc:	test   rdi,rdi
  408dbf:	je     408dc6 <traverse_info_done@@Base+0x16>
  408dc1:	call   4034b0 <coda_close@plt>
  408dc6:	cmp    QWORD PTR [rbx+0x428],0x0
  408dce:	je     408de2 <traverse_info_done@@Base+0x32>
  408dd0:	mov    edi,0x428
  408dd5:	add    rdi,QWORD PTR [rip+0x7204]        # 40ffe0 <traverse_info@@Base-0x388>
  408ddc:	pop    rbx
  408ddd:	jmp    4075f0 <codadump_filter_remove@@Base>
  408de2:	pop    rbx
  408de3:	ret    
  408de4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408dee:	xchg   ax,ax

0000000000408df0 <traverse_product@@Base>:
  408df0:	push   r14
  408df2:	push   rbx
  408df3:	push   rax
  408df4:	lea    r14,[rip+0x756d]        # 410368 <traverse_info@@Base>
  408dfb:	mov    rdi,QWORD PTR [r14]
  408dfe:	lea    rbx,[r14+0x8]
  408e02:	mov    rsi,rbx
  408e05:	call   4030e0 <coda_open@plt>
  408e0a:	test   eax,eax
  408e0c:	je     408e41 <traverse_product@@Base+0x51>
  408e0e:	call   4035d0 <coda_get_errno@plt>
  408e13:	cmp    DWORD PTR [rax],0xffffffeb
  408e16:	jne    408e3a <traverse_product@@Base+0x4a>
  408e18:	xor    edi,edi
  408e1a:	call   403130 <coda_set_option_use_mmap@plt>
  408e1f:	mov    rdi,QWORD PTR [r14]
  408e22:	mov    rsi,rbx
  408e25:	call   4030e0 <coda_open@plt>
  408e2a:	mov    ebx,eax
  408e2c:	mov    edi,0x1
  408e31:	call   403130 <coda_set_option_use_mmap@plt>
  408e36:	test   ebx,ebx
  408e38:	je     408e41 <traverse_product@@Base+0x51>
  408e3a:	xor    eax,eax
  408e3c:	call   40a6f0 <handle_coda_error@@Base>
  408e41:	mov    rsi,QWORD PTR [r14+0x8]
  408e45:	lea    rbx,[r14+0x118]
  408e4c:	mov    rdi,rbx
  408e4f:	call   403290 <coda_cursor_set_product@plt>
  408e54:	test   eax,eax
  408e56:	je     408e5f <traverse_product@@Base+0x6f>
  408e58:	xor    eax,eax
  408e5a:	call   40a6f0 <handle_coda_error@@Base>
  408e5f:	movsxd rax,DWORD PTR [r14+0x110]
  408e66:	lea    rsi,[r14+rax*8]
  408e6a:	add    rsi,0x10
  408e6e:	mov    rdi,rbx
  408e71:	call   403180 <coda_cursor_get_type@plt>
  408e76:	test   eax,eax
  408e78:	je     408e81 <traverse_product@@Base+0x91>
  408e7a:	xor    eax,eax
  408e7c:	call   40a6f0 <handle_coda_error@@Base>
  408e81:	call   408ea0 <traverse_product@@Base+0xb0>
  408e86:	mov    rdi,QWORD PTR [r14+0x8]
  408e8a:	call   4034b0 <coda_close@plt>
  408e8f:	mov    QWORD PTR [r14+0x8],0x0
  408e97:	add    rsp,0x8
  408e9b:	pop    rbx
  408e9c:	pop    r14
  408e9e:	ret    
  408e9f:	nop
  408ea0:	push   r15
  408ea2:	push   r14
  408ea4:	push   r12
  408ea6:	push   rbx
  408ea7:	sub    rsp,0x18
  408eab:	lea    r15,[rip+0x74b6]        # 410368 <traverse_info@@Base>
  408eb2:	movsxd rax,DWORD PTR [r15+0x110]
  408eb9:	mov    rdi,QWORD PTR [r15+rax*8+0x10]
  408ebe:	lea    rsi,[rsp+0x14]
  408ec3:	call   403620 <coda_type_get_class@plt>
  408ec8:	test   eax,eax
  408eca:	je     408ed3 <traverse_product@@Base+0xe3>
  408ecc:	xor    eax,eax
  408ece:	call   40a6f0 <handle_coda_error@@Base>
  408ed3:	mov    eax,DWORD PTR [rsp+0x14]
  408ed7:	cmp    rax,0x6
  408edb:	ja     409128 <traverse_product@@Base+0x338>
  408ee1:	lea    rcx,[rip+0x3aec]        # 40c9d4 <_IO_stdin_used@@Base+0x9d4>
  408ee8:	movsxd rax,DWORD PTR [rcx+rax*4]
  408eec:	add    rax,rcx
  408eef:	jmp    rax
  408ef1:	movsxd rax,DWORD PTR [r15+0x110]
  408ef8:	mov    rdi,QWORD PTR [r15+rax*8+0x10]
  408efd:	mov    rsi,rsp
  408f00:	call   403360 <coda_type_get_read_type@plt>
  408f05:	test   eax,eax
  408f07:	je     408f10 <traverse_product@@Base+0x120>
  408f09:	xor    eax,eax
  408f0b:	call   40a6f0 <handle_coda_error@@Base>
  408f10:	mov    eax,DWORD PTR [rsp]
  408f13:	add    eax,0xfffffff5
  408f16:	cmp    eax,0x1
  408f19:	ja     409123 <traverse_product@@Base+0x333>
  408f1f:	xor    eax,eax
  408f21:	call   4059c0 <dim_enter_array@@Base>
  408f26:	add    DWORD PTR [r15+0xf34],0x1
  408f2e:	call   4092f0 <traverse_product@@Base+0x500>
  408f33:	add    DWORD PTR [r15+0xf34],0xffffffff
  408f3b:	xor    eax,eax
  408f3d:	call   406e30 <dim_leave_array@@Base>
  408f42:	jmp    409128 <traverse_product@@Base+0x338>
  408f47:	movsxd rax,DWORD PTR [r15+0x110]
  408f4e:	cmp    rax,0x1e
  408f52:	jg     409128 <traverse_product@@Base+0x338>
  408f58:	add    DWORD PTR [r15+0x1138],0x1
  408f60:	mov    rdi,QWORD PTR [r15+rax*8+0x10]
  408f65:	mov    rsi,rsp
  408f68:	call   403340 <coda_type_get_num_record_fields@plt>
  408f6d:	test   eax,eax
  408f6f:	je     408f78 <traverse_product@@Base+0x188>
  408f71:	xor    eax,eax
  408f73:	call   40a6f0 <handle_coda_error@@Base>
  408f78:	add    DWORD PTR [r15+0x110],0x1
  408f80:	movsxd rax,DWORD PTR [r15+0x530]
  408f87:	mov    r12,QWORD PTR [r15+rax*8+0x428]
  408f8f:	test   r12,r12
  408f92:	je     409134 <traverse_product@@Base+0x344>
  408f98:	lea    r14,[rsp+0x8]
  408f9d:	mov    rax,r12
  408fa0:	mov    rdi,rax
  408fa3:	call   407680 <codadump_filter_get_fieldname@@Base>
  408fa8:	test   rax,rax
  408fab:	je     40917d <traverse_product@@Base+0x38d>
  408fb1:	mov    rbx,rax
  408fb4:	movsxd rax,DWORD PTR [r15+0x110]
  408fbb:	mov    rdi,QWORD PTR [r15+rax*8+0x8]
  408fc0:	mov    rsi,rbx
  408fc3:	mov    rdx,r14
  408fc6:	call   4034e0 <coda_type_get_record_field_index_from_name@plt>
  408fcb:	test   eax,eax
  408fcd:	je     408fe4 <traverse_product@@Base+0x1f4>
  408fcf:	call   4035d0 <coda_get_errno@plt>
  408fd4:	cmp    DWORD PTR [rax],0xffffff9a
  408fd7:	je     40919c <traverse_product@@Base+0x3ac>
  408fdd:	xor    eax,eax
  408fdf:	call   40a6f0 <handle_coda_error@@Base>
  408fe4:	movsxd rax,DWORD PTR [r15+0x530]
  408feb:	mov    rdi,QWORD PTR [r15+rax*8+0x428]
  408ff3:	call   4076b0 <codadump_filter_get_subfilter@@Base>
  408ff8:	movsxd rcx,DWORD PTR [r15+0x530]
  408fff:	mov    QWORD PTR [r15+rcx*8+0x430],rax
  409007:	add    rcx,0x1
  40900b:	mov    DWORD PTR [r15+0x530],ecx
  409012:	mov    edi,DWORD PTR [rsp+0x8]
  409016:	mov    esi,0x1
  40901b:	call   4091d0 <traverse_product@@Base+0x3e0>
  409020:	movsxd rax,DWORD PTR [r15+0x530]
  409027:	lea    rcx,[rax-0x1]
  40902b:	mov    DWORD PTR [r15+0x530],ecx
  409032:	mov    rdi,QWORD PTR [r15+rax*8+0x420]
  40903a:	call   4076e0 <codadump_filter_get_next_filter@@Base>
  40903f:	movsxd rcx,DWORD PTR [r15+0x530]
  409046:	mov    QWORD PTR [r15+rcx*8+0x428],rax
  40904e:	test   rax,rax
  409051:	jne    408fa0 <traverse_product@@Base+0x1b0>
  409057:	mov    QWORD PTR [r15+rcx*8+0x428],r12
  40905f:	jmp    40916b <traverse_product@@Base+0x37b>
  409064:	cmp    DWORD PTR [r15+0x110],0x1e
  40906c:	jg     409128 <traverse_product@@Base+0x338>
  409072:	xor    eax,eax
  409074:	call   4059c0 <dim_enter_array@@Base>
  409079:	add    DWORD PTR [r15+0xf34],0x1
  409081:	movsxd rax,DWORD PTR [r15+0x110]
  409088:	lea    rcx,[rax+0x1]
  40908c:	mov    DWORD PTR [r15+0x110],ecx
  409093:	mov    rdi,QWORD PTR [r15+rax*8+0x10]
  409098:	lea    rsi,[r15+rax*8]
  40909c:	add    rsi,0x18
  4090a0:	call   403460 <coda_type_get_array_base_type@plt>
  4090a5:	test   eax,eax
  4090a7:	je     4090b0 <traverse_product@@Base+0x2c0>
  4090a9:	xor    eax,eax
  4090ab:	call   40a6f0 <handle_coda_error@@Base>
  4090b0:	call   408ea0 <traverse_product@@Base+0xb0>
  4090b5:	add    DWORD PTR [r15+0x110],0xffffffff
  4090bd:	jmp    408f33 <traverse_product@@Base+0x143>
  4090c2:	call   403060 <coda_get_option_bypass_special_types@plt>
  4090c7:	movsxd rcx,DWORD PTR [r15+0x110]
  4090ce:	mov    rdi,QWORD PTR [r15+rcx*8+0x10]
  4090d3:	test   eax,eax
  4090d5:	je     4090f6 <traverse_product@@Base+0x306>
  4090d7:	lea    rsi,[r15+rcx*8]
  4090db:	add    rsi,0x10
  4090df:	call   4035e0 <coda_type_get_special_base_type@plt>
  4090e4:	test   eax,eax
  4090e6:	je     4090ef <traverse_product@@Base+0x2ff>
  4090e8:	xor    eax,eax
  4090ea:	call   40a6f0 <handle_coda_error@@Base>
  4090ef:	call   408ea0 <traverse_product@@Base+0xb0>
  4090f4:	jmp    409128 <traverse_product@@Base+0x338>
  4090f6:	mov    rsi,rsp
  4090f9:	call   403430 <coda_type_get_special_type@plt>
  4090fe:	test   eax,eax
  409100:	je     409109 <traverse_product@@Base+0x319>
  409102:	xor    eax,eax
  409104:	call   40a6f0 <handle_coda_error@@Base>
  409109:	mov    eax,DWORD PTR [rsp]
  40910c:	lea    ecx,[rax-0x1]
  40910f:	cmp    ecx,0x2
  409112:	jb     409123 <traverse_product@@Base+0x333>
  409114:	test   eax,eax
  409116:	je     409128 <traverse_product@@Base+0x338>
  409118:	cmp    eax,0x3
  40911b:	je     408f1f <traverse_product@@Base+0x12f>
  409121:	jmp    409128 <traverse_product@@Base+0x338>
  409123:	call   4092f0 <traverse_product@@Base+0x500>
  409128:	add    rsp,0x18
  40912c:	pop    rbx
  40912d:	pop    r12
  40912f:	pop    r14
  409131:	pop    r15
  409133:	ret    
  409134:	mov    QWORD PTR [rsp+0x8],0x0
  40913d:	cmp    QWORD PTR [rsp],0x0
  409142:	jle    40916b <traverse_product@@Base+0x37b>
  409144:	xor    edi,edi
  409146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409150:	xor    esi,esi
  409152:	call   4091d0 <traverse_product@@Base+0x3e0>
  409157:	mov    rdi,QWORD PTR [rsp+0x8]
  40915c:	add    rdi,0x1
  409160:	mov    QWORD PTR [rsp+0x8],rdi
  409165:	cmp    rdi,QWORD PTR [rsp]
  409169:	jl     409150 <traverse_product@@Base+0x360>
  40916b:	add    DWORD PTR [r15+0x110],0xffffffff
  409173:	add    DWORD PTR [r15+0x1138],0xffffffff
  40917b:	jmp    409128 <traverse_product@@Base+0x338>
  40917d:	lea    rdi,[rip+0x387b]        # 40c9ff <_IO_stdin_used@@Base+0x9ff>
  409184:	lea    rsi,[rip+0x3881]        # 40ca0c <_IO_stdin_used@@Base+0xa0c>
  40918b:	lea    rcx,[rip+0x38e2]        # 40ca74 <_IO_stdin_used@@Base+0xa74>
  409192:	mov    edx,0x189
  409197:	call   403240 <__assert_fail@plt>
  40919c:	mov    rax,QWORD PTR [rip+0x6e55]        # 40fff8 <stderr@GLIBC_2.2.5>
  4091a3:	mov    rdi,QWORD PTR [rax]
  4091a6:	lea    rsi,[rip+0x38dc]        # 40ca89 <_IO_stdin_used@@Base+0xa89>
  4091ad:	xor    eax,eax
  4091af:	mov    rdx,rbx
  4091b2:	call   403300 <fprintf@plt>
  4091b7:	mov    edi,0x1
  4091bc:	call   403580 <exit@plt>
  4091c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4091cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4091d0:	push   rbp
  4091d1:	push   r14
  4091d3:	push   rbx
  4091d4:	sub    rsp,0x10
  4091d8:	mov    ebp,esi
  4091da:	lea    rbx,[rip+0x7187]        # 410368 <traverse_info@@Base>
  4091e1:	movsxd rax,DWORD PTR [rbx+0x1138]
  4091e8:	mov    DWORD PTR [rbx+rax*4+0xfb4],edi
  4091ef:	movsxd rax,DWORD PTR [rbx+0x110]
  4091f6:	mov    rax,QWORD PTR [rbx+rax*8+0x8]
  4091fb:	movsxd r14,edi
  4091fe:	lea    rdx,[rsp+0xc]
  409203:	mov    rdi,rax
  409206:	mov    rsi,r14
  409209:	call   4030b0 <coda_type_get_record_field_hidden_status@plt>
  40920e:	test   eax,eax
  409210:	je     409219 <traverse_product@@Base+0x429>
  409212:	xor    eax,eax
  409214:	call   40a6f0 <handle_coda_error@@Base>
  409219:	test   ebp,ebp
  40921b:	jne    409229 <traverse_product@@Base+0x439>
  40921d:	mov    eax,DWORD PTR [rsp+0xc]
  409221:	test   eax,eax
  409223:	jne    4092dc <traverse_product@@Base+0x4ec>
  409229:	lea    rax,[rip+0x7130]        # 410360 <calc_dim@@Base>
  409230:	cmp    DWORD PTR [rax],0x0
  409233:	je     40927f <traverse_product@@Base+0x48f>
  409235:	movsxd rax,DWORD PTR [rbx+0x110]
  40923c:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
  409241:	lea    rdx,[rsp+0x8]
  409246:	mov    rsi,r14
  409249:	call   4031b0 <coda_type_get_record_field_available_status@plt>
  40924e:	test   eax,eax
  409250:	je     409259 <traverse_product@@Base+0x469>
  409252:	xor    eax,eax
  409254:	call   40a6f0 <handle_coda_error@@Base>
  409259:	mov    eax,DWORD PTR [rsp+0x8]
  40925d:	cmp    eax,0xffffffff
  409260:	jne    409271 <traverse_product@@Base+0x481>
  409262:	xor    eax,eax
  409264:	call   407010 <dim_record_field_available@@Base>
  409269:	test   eax,eax
  40926b:	je     4092dc <traverse_product@@Base+0x4ec>
  40926d:	mov    eax,DWORD PTR [rsp+0x8]
  409271:	movsxd rcx,DWORD PTR [rbx+0x110]
  409278:	mov    DWORD PTR [rbx+rcx*4+0xf34],eax
  40927f:	movsxd rax,DWORD PTR [rbx+0x110]
  409286:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
  40928b:	movsxd rax,DWORD PTR [rbx+0x1138]
  409292:	lea    rdx,[rbx+rax*8]
  409296:	add    rdx,0x1030
  40929d:	mov    rsi,r14
  4092a0:	call   4035f0 <coda_type_get_record_field_name@plt>
  4092a5:	test   eax,eax
  4092a7:	je     4092b0 <traverse_product@@Base+0x4c0>
  4092a9:	xor    eax,eax
  4092ab:	call   40a6f0 <handle_coda_error@@Base>
  4092b0:	movsxd rax,DWORD PTR [rbx+0x110]
  4092b7:	mov    rdi,QWORD PTR [rbx+rax*8+0x8]
  4092bc:	lea    rdx,[rbx+rax*8]
  4092c0:	add    rdx,0x10
  4092c4:	mov    rsi,r14
  4092c7:	call   403170 <coda_type_get_record_field_type@plt>
  4092cc:	test   eax,eax
  4092ce:	je     4092d7 <traverse_product@@Base+0x4e7>
  4092d0:	xor    eax,eax
  4092d2:	call   40a6f0 <handle_coda_error@@Base>
  4092d7:	call   408ea0 <traverse_product@@Base+0xb0>
  4092dc:	add    rsp,0x10
  4092e0:	pop    rbx
  4092e1:	pop    r14
  4092e3:	pop    rbp
  4092e4:	ret    
  4092e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092ef:	nop
  4092f0:	push   r14
  4092f2:	push   rbx
  4092f3:	sub    rsp,0x18
  4092f7:	lea    rax,[rip+0x81c6]        # 4114c4 <run_mode@@Base>
  4092fe:	mov    eax,DWORD PTR [rax]
  409300:	cmp    eax,0x1
  409303:	je     4093a9 <traverse_product@@Base+0x5b9>
  409309:	test   eax,eax
  40930b:	jne    40950f <traverse_product@@Base+0x71f>
  409311:	mov    r14,QWORD PTR [rip+0x6cc0]        # 40ffd8 <stdout@GLIBC_2.2.5>
  409318:	mov    rdi,QWORD PTR [r14]
  40931b:	mov    esi,0x1
  409320:	xor    edx,edx
  409322:	call   4089a0 <print_full_field_name@@Base>
  409327:	lea    rax,[rip+0x818a]        # 4114b8 <show_type@@Base>
  40932e:	cmp    DWORD PTR [rax],0x0
  409331:	je     40942e <traverse_product@@Base+0x63e>
  409337:	lea    rbx,[rip+0x702a]        # 410368 <traverse_info@@Base>
  40933e:	movsxd rax,DWORD PTR [rbx+0x110]
  409345:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  40934a:	lea    rsi,[rsp+0x10]
  40934f:	call   403620 <coda_type_get_class@plt>
  409354:	test   eax,eax
  409356:	je     40935f <traverse_product@@Base+0x56f>
  409358:	xor    eax,eax
  40935a:	call   40a6f0 <handle_coda_error@@Base>
  40935f:	cmp    DWORD PTR [rsp+0x10],0x6
  409364:	jne    4093b7 <traverse_product@@Base+0x5c7>
  409366:	movsxd rax,DWORD PTR [rbx+0x110]
  40936d:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  409372:	lea    rsi,[rsp+0xc]
  409377:	call   403430 <coda_type_get_special_type@plt>
  40937c:	test   eax,eax
  40937e:	je     409387 <traverse_product@@Base+0x597>
  409380:	xor    eax,eax
  409382:	call   40a6f0 <handle_coda_error@@Base>
  409387:	mov    edi,DWORD PTR [rsp+0xc]
  40938b:	call   403040 <coda_type_get_special_type_name@plt>
  409390:	mov    rcx,rax
  409393:	lea    rdi,[rip+0x3723]        # 40cabd <_IO_stdin_used@@Base+0xabd>
  40939a:	xor    eax,eax
  40939c:	mov    rsi,rcx
  40939f:	call   403230 <printf@plt>
  4093a4:	jmp    40942e <traverse_product@@Base+0x63e>
  4093a9:	xor    eax,eax
  4093ab:	add    rsp,0x18
  4093af:	pop    rbx
  4093b0:	pop    r14
  4093b2:	jmp    403720 <export_data_element_to_ascii@@Base>
  4093b7:	movsxd rax,DWORD PTR [rbx+0x110]
  4093be:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  4093c3:	lea    rsi,[rsp+0xc]
  4093c8:	call   403360 <coda_type_get_read_type@plt>
  4093cd:	test   eax,eax
  4093cf:	je     4093d8 <traverse_product@@Base+0x5e8>
  4093d1:	xor    eax,eax
  4093d3:	call   40a6f0 <handle_coda_error@@Base>
  4093d8:	mov    edi,DWORD PTR [rsp+0xc]
  4093dc:	call   403480 <coda_type_get_native_type_name@plt>
  4093e1:	mov    rcx,rax
  4093e4:	lea    rdi,[rip+0x36d2]        # 40cabd <_IO_stdin_used@@Base+0xabd>
  4093eb:	xor    eax,eax
  4093ed:	mov    rsi,rcx
  4093f0:	call   403230 <printf@plt>
  4093f5:	mov    eax,DWORD PTR [rsp+0xc]
  4093f9:	add    eax,0xfffffff5
  4093fc:	cmp    eax,0x1
  4093ff:	ja     40942e <traverse_product@@Base+0x63e>
  409401:	mov    edi,0x28
  409406:	call   403080 <putchar@plt>
  40940b:	mov    esi,DWORD PTR [rbx+0xf34]
  409411:	test   esi,esi
  409413:	jle    409517 <traverse_product@@Base+0x727>
  409419:	mov    rdi,QWORD PTR [r14]
  40941c:	add    esi,0xffffffff
  40941f:	call   408c70 <print_full_field_name@@Base+0x2d0>
  409424:	mov    edi,0x29
  409429:	call   403080 <putchar@plt>
  40942e:	lea    rax,[rip+0x6f27]        # 41035c <show_unit@@Base>
  409435:	cmp    DWORD PTR [rax],0x0
  409438:	je     40947f <traverse_product@@Base+0x68f>
  40943a:	lea    rax,[rip+0x6f27]        # 410368 <traverse_info@@Base>
  409441:	movsxd rcx,DWORD PTR [rax+0x110]
  409448:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
  40944d:	lea    rsi,[rsp+0x10]
  409452:	call   403210 <coda_type_get_unit@plt>
  409457:	test   eax,eax
  409459:	je     409462 <traverse_product@@Base+0x672>
  40945b:	xor    eax,eax
  40945d:	call   40a6f0 <handle_coda_error@@Base>
  409462:	mov    rsi,QWORD PTR [rsp+0x10]
  409467:	test   rsi,rsi
  40946a:	je     40947f <traverse_product@@Base+0x68f>
  40946c:	cmp    BYTE PTR [rsi],0x0
  40946f:	je     40947f <traverse_product@@Base+0x68f>
  409471:	lea    rdi,[rip+0x3681]        # 40caf9 <_IO_stdin_used@@Base+0xaf9>
  409478:	xor    eax,eax
  40947a:	call   403230 <printf@plt>
  40947f:	lea    rax,[rip+0x8036]        # 4114bc <show_description@@Base>
  409486:	cmp    DWORD PTR [rax],0x0
  409489:	je     4094d0 <traverse_product@@Base+0x6e0>
  40948b:	lea    rax,[rip+0x6ed6]        # 410368 <traverse_info@@Base>
  409492:	movsxd rcx,DWORD PTR [rax+0x110]
  409499:	mov    rdi,QWORD PTR [rax+rcx*8+0x10]
  40949e:	lea    rsi,[rsp+0x10]
  4094a3:	call   403220 <coda_type_get_description@plt>
  4094a8:	test   eax,eax
  4094aa:	je     4094b3 <traverse_product@@Base+0x6c3>
  4094ac:	xor    eax,eax
  4094ae:	call   40a6f0 <handle_coda_error@@Base>
  4094b3:	mov    rsi,QWORD PTR [rsp+0x10]
  4094b8:	test   rsi,rsi
  4094bb:	je     4094d0 <traverse_product@@Base+0x6e0>
  4094bd:	cmp    BYTE PTR [rsi],0x0
  4094c0:	je     4094d0 <traverse_product@@Base+0x6e0>
  4094c2:	lea    rdi,[rip+0x3636]        # 40caff <_IO_stdin_used@@Base+0xaff>
  4094c9:	xor    eax,eax
  4094cb:	call   403230 <printf@plt>
  4094d0:	mov    edi,0xa
  4094d5:	call   403080 <putchar@plt>
  4094da:	lea    rax,[rip+0x6e6b]        # 41034c <show_dim_vals@@Base>
  4094e1:	cmp    DWORD PTR [rax],0x0
  4094e4:	je     40950f <traverse_product@@Base+0x71f>
  4094e6:	lea    r14,[rip+0x7fe3]        # 4114d0 <dim_info@@Base>
  4094ed:	mov    eax,DWORD PTR [r14]
  4094f0:	test   eax,eax
  4094f2:	jle    40950f <traverse_product@@Base+0x71f>
  4094f4:	xor    ebx,ebx
  4094f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409500:	mov    edi,ebx
  409502:	call   405770 <print_all_distinct_dims@@Base>
  409507:	add    ebx,0x1
  40950a:	cmp    ebx,DWORD PTR [r14]
  40950d:	jl     409500 <traverse_product@@Base+0x710>
  40950f:	add    rsp,0x18
  409513:	pop    rbx
  409514:	pop    r14
  409516:	ret    
  409517:	lea    rdi,[rip+0x35a3]        # 40cac1 <_IO_stdin_used@@Base+0xac1>
  40951e:	lea    rsi,[rip+0x34e7]        # 40ca0c <_IO_stdin_used@@Base+0xa0c>
  409525:	lea    rcx,[rip+0x35b2]        # 40cade <_IO_stdin_used@@Base+0xade>
  40952c:	mov    edx,0xee
  409531:	call   403240 <__assert_fail@plt>
  409536:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409540 <print_yaml_data@@Base>:
  409540:	push   rbx
  409541:	sub    rsp,0x320
  409548:	mov    DWORD PTR [rip+0x6df2],edi        # 410340 <__bss_start@@Base+0x10>
  40954e:	lea    rbx,[rip+0x6e13]        # 410368 <traverse_info@@Base>
  409555:	mov    rdi,QWORD PTR [rbx]
  409558:	lea    rsi,[rsp+0x8]
  40955d:	call   4030e0 <coda_open@plt>
  409562:	test   eax,eax
  409564:	je     40959b <print_yaml_data@@Base+0x5b>
  409566:	call   4035d0 <coda_get_errno@plt>
  40956b:	cmp    DWORD PTR [rax],0xffffffeb
  40956e:	jne    409594 <print_yaml_data@@Base+0x54>
  409570:	xor    edi,edi
  409572:	call   403130 <coda_set_option_use_mmap@plt>
  409577:	mov    rdi,QWORD PTR [rbx]
  40957a:	lea    rsi,[rsp+0x8]
  40957f:	call   4030e0 <coda_open@plt>
  409584:	mov    ebx,eax
  409586:	mov    edi,0x1
  40958b:	call   403130 <coda_set_option_use_mmap@plt>
  409590:	test   ebx,ebx
  409592:	je     40959b <print_yaml_data@@Base+0x5b>
  409594:	xor    eax,eax
  409596:	call   40a6f0 <handle_coda_error@@Base>
  40959b:	mov    rsi,QWORD PTR [rsp+0x8]
  4095a0:	lea    rdi,[rsp+0x10]
  4095a5:	call   403290 <coda_cursor_set_product@plt>
  4095aa:	test   eax,eax
  4095ac:	je     4095b5 <print_yaml_data@@Base+0x75>
  4095ae:	xor    eax,eax
  4095b0:	call   40a6f0 <handle_coda_error@@Base>
  4095b5:	lea    rax,[rip+0x7f0c]        # 4114c8 <starting_path@@Base>
  4095bc:	mov    rsi,QWORD PTR [rax]
  4095bf:	test   rsi,rsi
  4095c2:	je     4095d9 <print_yaml_data@@Base+0x99>
  4095c4:	lea    rdi,[rsp+0x10]
  4095c9:	call   4034d0 <coda_cursor_goto@plt>
  4095ce:	test   eax,eax
  4095d0:	je     4095d9 <print_yaml_data@@Base+0x99>
  4095d2:	xor    eax,eax
  4095d4:	call   40a6f0 <handle_coda_error@@Base>
  4095d9:	xor    edi,edi
  4095db:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  4095e0:	lea    rdi,[rsp+0x10]
  4095e5:	xor    esi,esi
  4095e7:	call   409600 <print_yaml_data@@Base+0xc0>
  4095ec:	mov    rdi,QWORD PTR [rsp+0x8]
  4095f1:	call   4034b0 <coda_close@plt>
  4095f6:	add    rsp,0x320
  4095fd:	pop    rbx
  4095fe:	ret    
  4095ff:	nop
  409600:	push   rbp
  409601:	push   r15
  409603:	push   r14
  409605:	push   r13
  409607:	push   r12
  409609:	push   rbx
  40960a:	sub    rsp,0x78
  40960e:	mov    r13d,esi
  409611:	mov    r12,rdi
  409614:	mov    DWORD PTR [rsp+0x1c],0x0
  40961c:	cmp    DWORD PTR [rip+0x6d1d],0x0        # 410340 <__bss_start@@Base+0x10>
  409623:	je     4096f6 <print_yaml_data@@Base+0x1b6>
  409629:	lea    rsi,[rsp+0x1c]
  40962e:	mov    rdi,r12
  409631:	call   4031d0 <coda_cursor_has_attributes@plt>
  409636:	test   eax,eax
  409638:	je     409641 <print_yaml_data@@Base+0x101>
  40963a:	xor    eax,eax
  40963c:	call   40a6f0 <handle_coda_error@@Base>
  409641:	cmp    DWORD PTR [rsp+0x1c],0x0
  409646:	je     4096f6 <print_yaml_data@@Base+0x1b6>
  40964c:	test   r13d,r13d
  40964f:	je     40969d <print_yaml_data@@Base+0x15d>
  409651:	lea    rdi,[rip+0x37b5]        # 40ce0d <_IO_stdin_used@@Base+0xe0d>
  409658:	xor    eax,eax
  40965a:	call   40a410 <print_yaml_data@@Base+0xed0>
  40965f:	mov    ebx,DWORD PTR [rip+0x6cdf]        # 410344 <__bss_start@@Base+0x14>
  409665:	test   ebx,ebx
  409667:	js     40a3f1 <print_yaml_data@@Base+0xeb1>
  40966d:	je     40969d <print_yaml_data@@Base+0x15d>
  40966f:	add    ebx,0x1
  409672:	lea    r14,[rip+0x7e2f]        # 4114a8 <ascii_output@@Base>
  409679:	lea    rbp,[rip+0x2adf]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  409680:	mov    rcx,QWORD PTR [r14]
  409683:	mov    esi,0x2
  409688:	mov    edx,0x1
  40968d:	mov    rdi,rbp
  409690:	call   4035a0 <fwrite@plt>
  409695:	add    ebx,0xffffffff
  409698:	cmp    ebx,0x1
  40969b:	jg     409680 <print_yaml_data@@Base+0x140>
  40969d:	lea    rdi,[rip+0x3534]        # 40cbd8 <_IO_stdin_used@@Base+0xbd8>
  4096a4:	xor    eax,eax
  4096a6:	call   40a410 <print_yaml_data@@Base+0xed0>
  4096ab:	mov    rdi,r12
  4096ae:	call   403410 <coda_cursor_goto_attributes@plt>
  4096b3:	test   eax,eax
  4096b5:	je     4096be <print_yaml_data@@Base+0x17e>
  4096b7:	xor    eax,eax
  4096b9:	call   40a6f0 <handle_coda_error@@Base>
  4096be:	add    DWORD PTR [rip+0x6c7f],0x1        # 410344 <__bss_start@@Base+0x14>
  4096c5:	mov    esi,0x1
  4096ca:	mov    rdi,r12
  4096cd:	call   409600 <print_yaml_data@@Base+0xc0>
  4096d2:	add    DWORD PTR [rip+0x6c6b],0xffffffff        # 410344 <__bss_start@@Base+0x14>
  4096d9:	mov    rdi,r12
  4096dc:	call   403320 <coda_cursor_goto_parent@plt>
  4096e1:	lea    rdi,[rip+0x34f7]        # 40cbdf <_IO_stdin_used@@Base+0xbdf>
  4096e8:	xor    eax,eax
  4096ea:	call   40a4c0 <print_yaml_data@@Base+0xf80>
  4096ef:	add    DWORD PTR [rip+0x6c4e],0x1        # 410344 <__bss_start@@Base+0x14>
  4096f6:	lea    rsi,[rsp+0x74]
  4096fb:	mov    rdi,r12
  4096fe:	call   4031e0 <coda_cursor_get_type_class@plt>
  409703:	test   eax,eax
  409705:	je     40970e <print_yaml_data@@Base+0x1ce>
  409707:	xor    eax,eax
  409709:	call   40a6f0 <handle_coda_error@@Base>
  40970e:	mov    eax,DWORD PTR [rsp+0x74]
  409712:	cmp    rax,0x6
  409716:	ja     40997e <print_yaml_data@@Base+0x43e>
  40971c:	lea    rcx,[rip+0x33e5]        # 40cb08 <_IO_stdin_used@@Base+0xb08>
  409723:	movsxd rax,DWORD PTR [rcx+rax*4]
  409727:	add    rax,rcx
  40972a:	jmp    rax
  40972c:	lea    rsi,[rsp+0x10]
  409731:	mov    rdi,r12
  409734:	call   4032e0 <coda_cursor_get_read_type@plt>
  409739:	test   eax,eax
  40973b:	je     409744 <print_yaml_data@@Base+0x204>
  40973d:	xor    eax,eax
  40973f:	call   40a6f0 <handle_coda_error@@Base>
  409744:	mov    eax,DWORD PTR [rsp+0x10]
  409748:	add    eax,0x1
  40974b:	cmp    eax,0xd
  40974e:	ja     40997e <print_yaml_data@@Base+0x43e>
  409754:	lea    rcx,[rip+0x33d9]        # 40cb34 <_IO_stdin_used@@Base+0xb34>
  40975b:	movsxd rax,DWORD PTR [rcx+rax*4]
  40975f:	add    rax,rcx
  409762:	jmp    rax
  409764:	lea    rsi,[rsp+0x20]
  409769:	mov    rdi,r12
  40976c:	call   403590 <coda_cursor_read_int32@plt>
  409771:	test   eax,eax
  409773:	je     40977c <print_yaml_data@@Base+0x23c>
  409775:	xor    eax,eax
  409777:	call   40a6f0 <handle_coda_error@@Base>
  40977c:	movsxd rsi,DWORD PTR [rsp+0x20]
  409781:	lea    rdi,[rip+0x2b29]        # 40c2b1 <_IO_stdin_used@@Base+0x2b1>
  409788:	jmp    409977 <print_yaml_data@@Base+0x437>
  40978d:	lea    rsi,[rsp+0x20]
  409792:	mov    rdi,r12
  409795:	call   403110 <coda_cursor_get_num_elements@plt>
  40979a:	test   eax,eax
  40979c:	je     4097a5 <print_yaml_data@@Base+0x265>
  40979e:	xor    eax,eax
  4097a0:	call   40a6f0 <handle_coda_error@@Base>
  4097a5:	cmp    QWORD PTR [rsp+0x20],0x0
  4097ab:	jle    4099d0 <print_yaml_data@@Base+0x490>
  4097b1:	test   r13d,r13d
  4097b4:	je     4097c4 <print_yaml_data@@Base+0x284>
  4097b6:	lea    rdi,[rip+0x3650]        # 40ce0d <_IO_stdin_used@@Base+0xe0d>
  4097bd:	xor    eax,eax
  4097bf:	call   40a410 <print_yaml_data@@Base+0xed0>
  4097c4:	lea    rsi,[rsp+0x8]
  4097c9:	mov    rdi,r12
  4097cc:	call   403180 <coda_cursor_get_type@plt>
  4097d1:	test   eax,eax
  4097d3:	je     4097dc <print_yaml_data@@Base+0x29c>
  4097d5:	xor    eax,eax
  4097d7:	call   40a6f0 <handle_coda_error@@Base>
  4097dc:	mov    rdi,QWORD PTR [rsp+0x8]
  4097e1:	lea    rsi,[rsp+0x70]
  4097e6:	call   403440 <coda_type_get_record_union_status@plt>
  4097eb:	test   eax,eax
  4097ed:	je     4097f6 <print_yaml_data@@Base+0x2b6>
  4097ef:	xor    eax,eax
  4097f1:	call   40a6f0 <handle_coda_error@@Base>
  4097f6:	cmp    DWORD PTR [rsp+0x70],0x0
  4097fb:	je     409c0e <print_yaml_data@@Base+0x6ce>
  409801:	lea    rsi,[rsp+0x10]
  409806:	mov    rdi,r12
  409809:	call   403570 <coda_cursor_get_available_union_field_index@plt>
  40980e:	test   eax,eax
  409810:	je     409819 <print_yaml_data@@Base+0x2d9>
  409812:	xor    eax,eax
  409814:	call   40a6f0 <handle_coda_error@@Base>
  409819:	mov    rdi,QWORD PTR [rsp+0x8]
  40981e:	mov    rsi,QWORD PTR [rsp+0x10]
  409823:	lea    rdx,[rsp+0x60]
  409828:	call   4035f0 <coda_type_get_record_field_name@plt>
  40982d:	test   eax,eax
  40982f:	je     409838 <print_yaml_data@@Base+0x2f8>
  409831:	xor    eax,eax
  409833:	call   40a6f0 <handle_coda_error@@Base>
  409838:	mov    rsi,QWORD PTR [rsp+0x10]
  40983d:	mov    rdi,r12
  409840:	call   4032c0 <coda_cursor_goto_record_field_by_index@plt>
  409845:	test   eax,eax
  409847:	je     409850 <print_yaml_data@@Base+0x310>
  409849:	xor    eax,eax
  40984b:	call   40a6f0 <handle_coda_error@@Base>
  409850:	test   r13d,r13d
  409853:	je     40989d <print_yaml_data@@Base+0x35d>
  409855:	mov    ebx,DWORD PTR [rip+0x6ae9]        # 410344 <__bss_start@@Base+0x14>
  40985b:	test   ebx,ebx
  40985d:	js     40a3f1 <print_yaml_data@@Base+0xeb1>
  409863:	je     40989d <print_yaml_data@@Base+0x35d>
  409865:	add    ebx,0x1
  409868:	lea    r14,[rip+0x7c39]        # 4114a8 <ascii_output@@Base>
  40986f:	lea    rbp,[rip+0x28e9]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  409876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409880:	mov    rcx,QWORD PTR [r14]
  409883:	mov    esi,0x2
  409888:	mov    edx,0x1
  40988d:	mov    rdi,rbp
  409890:	call   4035a0 <fwrite@plt>
  409895:	add    ebx,0xffffffff
  409898:	cmp    ebx,0x1
  40989b:	jg     409880 <print_yaml_data@@Base+0x340>
  40989d:	mov    rsi,QWORD PTR [rsp+0x60]
  4098a2:	lea    rdi,[rip+0x333d]        # 40cbe6 <_IO_stdin_used@@Base+0xbe6>
  4098a9:	xor    eax,eax
  4098ab:	call   40a410 <print_yaml_data@@Base+0xed0>
  4098b0:	add    DWORD PTR [rip+0x6a8d],0x1        # 410344 <__bss_start@@Base+0x14>
  4098b7:	mov    esi,0x1
  4098bc:	mov    rdi,r12
  4098bf:	call   409600 <print_yaml_data@@Base+0xc0>
  4098c4:	add    DWORD PTR [rip+0x6a79],0xffffffff        # 410344 <__bss_start@@Base+0x14>
  4098cb:	jmp    40a383 <print_yaml_data@@Base+0xe43>
  4098d0:	lea    rsi,[rsp+0x8]
  4098d5:	lea    rdx,[rsp+0x20]
  4098da:	mov    rdi,r12
  4098dd:	call   403490 <coda_cursor_get_array_dim@plt>
  4098e2:	test   eax,eax
  4098e4:	je     4098ed <print_yaml_data@@Base+0x3ad>
  4098e6:	xor    eax,eax
  4098e8:	call   40a6f0 <handle_coda_error@@Base>
  4098ed:	mov    eax,DWORD PTR [rsp+0x8]
  4098f1:	test   eax,eax
  4098f3:	js     40a39b <print_yaml_data@@Base+0xe5b>
  4098f9:	test   eax,eax
  4098fb:	je     409d3e <print_yaml_data@@Base+0x7fe>
  409901:	cmp    eax,0x10
  409904:	jae    409e0d <print_yaml_data@@Base+0x8cd>
  40990a:	mov    ebx,0x1
  40990f:	xor    ecx,ecx
  409911:	jmp    40a2f0 <print_yaml_data@@Base+0xdb0>
  409916:	lea    rsi,[rsp+0x10]
  40991b:	mov    rdi,r12
  40991e:	call   403260 <coda_cursor_get_special_type@plt>
  409923:	test   eax,eax
  409925:	je     40992e <print_yaml_data@@Base+0x3ee>
  409927:	xor    eax,eax
  409929:	call   40a6f0 <handle_coda_error@@Base>
  40992e:	mov    eax,DWORD PTR [rsp+0x10]
  409932:	cmp    rax,0x3
  409936:	ja     40997e <print_yaml_data@@Base+0x43e>
  409938:	lea    rcx,[rip+0x31e5]        # 40cb24 <_IO_stdin_used@@Base+0xb24>
  40993f:	movsxd rax,DWORD PTR [rcx+rax*4]
  409943:	add    rax,rcx
  409946:	jmp    rax
  409948:	lea    rdi,[rip+0x330b]        # 40cc5a <_IO_stdin_used@@Base+0xc5a>
  40994f:	jmp    40a3a2 <print_yaml_data@@Base+0xe62>
  409954:	lea    rsi,[rsp+0x20]
  409959:	mov    rdi,r12
  40995c:	call   403150 <coda_cursor_read_uint32@plt>
  409961:	test   eax,eax
  409963:	je     40996c <print_yaml_data@@Base+0x42c>
  409965:	xor    eax,eax
  409967:	call   40a6f0 <handle_coda_error@@Base>
  40996c:	mov    esi,DWORD PTR [rsp+0x20]
  409970:	lea    rdi,[rip+0x293f]        # 40c2b6 <_IO_stdin_used@@Base+0x2b6>
  409977:	xor    eax,eax
  409979:	call   40a410 <print_yaml_data@@Base+0xed0>
  40997e:	cmp    DWORD PTR [rsp+0x1c],0x0
  409983:	je     40998c <print_yaml_data@@Base+0x44c>
  409985:	add    DWORD PTR [rip+0x69b8],0xffffffff        # 410344 <__bss_start@@Base+0x14>
  40998c:	add    rsp,0x78
  409990:	pop    rbx
  409991:	pop    r12
  409993:	pop    r13
  409995:	pop    r14
  409997:	pop    r15
  409999:	pop    rbp
  40999a:	ret    
  40999b:	lea    rsi,[rsp+0x20]
  4099a0:	mov    rdi,r12
  4099a3:	call   403390 <coda_cursor_read_double@plt>
  4099a8:	test   eax,eax
  4099aa:	je     4099b3 <print_yaml_data@@Base+0x473>
  4099ac:	xor    eax,eax
  4099ae:	call   40a6f0 <handle_coda_error@@Base>
  4099b3:	cmp    DWORD PTR [rsp+0x10],0x8
  4099b8:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  4099be:	jne    409def <print_yaml_data@@Base+0x8af>
  4099c4:	lea    rdi,[rip+0x28f0]        # 40c2bb <_IO_stdin_used@@Base+0x2bb>
  4099cb:	jmp    409df6 <print_yaml_data@@Base+0x8b6>
  4099d0:	lea    rdi,[rip+0x3214]        # 40cbeb <_IO_stdin_used@@Base+0xbeb>
  4099d7:	jmp    40a3a2 <print_yaml_data@@Base+0xe62>
  4099dc:	lea    rsi,[rsp+0x20]
  4099e1:	mov    rdi,r12
  4099e4:	call   403420 <coda_cursor_read_char@plt>
  4099e9:	test   eax,eax
  4099eb:	je     4099f4 <print_yaml_data@@Base+0x4b4>
  4099ed:	xor    eax,eax
  4099ef:	call   40a6f0 <handle_coda_error@@Base>
  4099f4:	lea    rdi,[rip+0x2fce]        # 40c9c9 <_IO_stdin_used@@Base+0x9c9>
  4099fb:	xor    eax,eax
  4099fd:	call   40a410 <print_yaml_data@@Base+0xed0>
  409a02:	lea    rdi,[rsp+0x20]
  409a07:	mov    esi,0x1
  409a0c:	call   40a5e0 <print_yaml_data@@Base+0x10a0>
  409a11:	lea    rdi,[rip+0x33f4]        # 40ce0c <_IO_stdin_used@@Base+0xe0c>
  409a18:	jmp    40a3a2 <print_yaml_data@@Base+0xe62>
  409a1d:	lea    rsi,[rsp+0x20]
  409a22:	mov    rdi,r12
  409a25:	call   403370 <coda_cursor_get_string_length@plt>
  409a2a:	test   eax,eax
  409a2c:	je     409a35 <print_yaml_data@@Base+0x4f5>
  409a2e:	xor    eax,eax
  409a30:	call   40a6f0 <handle_coda_error@@Base>
  409a35:	mov    rbp,QWORD PTR [rsp+0x20]
  409a3a:	add    rbp,0x1
  409a3e:	mov    rdi,rbp
  409a41:	call   4033f0 <malloc@plt>
  409a46:	mov    r14,rax
  409a49:	test   rax,rax
  409a4c:	jne    409a81 <print_yaml_data@@Base+0x541>
  409a4e:	lea    rsi,[rip+0x2608]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  409a55:	lea    rcx,[rip+0x319a]        # 40cbf6 <_IO_stdin_used@@Base+0xbf6>
  409a5c:	mov    edi,0xffffffff
  409a61:	mov    r8d,0x169
  409a67:	xor    eax,eax
  409a69:	mov    rdx,rbp
  409a6c:	call   4030d0 <coda_set_error@plt>
  409a71:	xor    eax,eax
  409a73:	call   40a6f0 <handle_coda_error@@Base>
  409a78:	mov    rbp,QWORD PTR [rsp+0x20]
  409a7d:	add    rbp,0x1
  409a81:	mov    rdi,r12
  409a84:	mov    rsi,r14
  409a87:	mov    rdx,rbp
  409a8a:	call   403310 <coda_cursor_read_string@plt>
  409a8f:	test   eax,eax
  409a91:	je     409a9a <print_yaml_data@@Base+0x55a>
  409a93:	xor    eax,eax
  409a95:	call   40a6f0 <handle_coda_error@@Base>
  409a9a:	lea    rdi,[rip+0x2f28]        # 40c9c9 <_IO_stdin_used@@Base+0x9c9>
  409aa1:	xor    eax,eax
  409aa3:	call   40a410 <print_yaml_data@@Base+0xed0>
  409aa8:	mov    rsi,QWORD PTR [rsp+0x20]
  409aad:	mov    rdi,r14
  409ab0:	call   40a5e0 <print_yaml_data@@Base+0x10a0>
  409ab5:	mov    rsi,QWORD PTR [rsp+0x20]
  409aba:	lea    rdi,[rip+0x334b]        # 40ce0c <_IO_stdin_used@@Base+0xe0c>
  409ac1:	xor    eax,eax
  409ac3:	call   40a410 <print_yaml_data@@Base+0xed0>
  409ac8:	jmp    409bf6 <print_yaml_data@@Base+0x6b6>
  409acd:	lea    rsi,[rsp+0x8]
  409ad2:	mov    rdi,r12
  409ad5:	call   4034c0 <coda_cursor_read_int64@plt>
  409ada:	test   eax,eax
  409adc:	je     409ae5 <print_yaml_data@@Base+0x5a5>
  409ade:	xor    eax,eax
  409ae0:	call   40a6f0 <handle_coda_error@@Base>
  409ae5:	mov    rdi,QWORD PTR [rsp+0x8]
  409aea:	lea    rbx,[rsp+0x20]
  409aef:	mov    rsi,rbx
  409af2:	call   403610 <coda_str64@plt>
  409af7:	jmp    409b23 <print_yaml_data@@Base+0x5e3>
  409af9:	lea    rsi,[rsp+0x8]
  409afe:	mov    rdi,r12
  409b01:	call   403380 <coda_cursor_read_uint64@plt>
  409b06:	test   eax,eax
  409b08:	je     409b11 <print_yaml_data@@Base+0x5d1>
  409b0a:	xor    eax,eax
  409b0c:	call   40a6f0 <handle_coda_error@@Base>
  409b11:	mov    rdi,QWORD PTR [rsp+0x8]
  409b16:	lea    rbx,[rsp+0x20]
  409b1b:	mov    rsi,rbx
  409b1e:	call   403120 <coda_str64u@plt>
  409b23:	lea    rdi,[rip+0x313d]        # 40cc67 <_IO_stdin_used@@Base+0xc67>
  409b2a:	xor    eax,eax
  409b2c:	mov    rsi,rbx
  409b2f:	call   40a410 <print_yaml_data@@Base+0xed0>
  409b34:	cmp    DWORD PTR [rsp+0x1c],0x0
  409b39:	jne    409985 <print_yaml_data@@Base+0x445>
  409b3f:	jmp    40998c <print_yaml_data@@Base+0x44c>
  409b44:	lea    rsi,[rsp+0x20]
  409b49:	mov    rdi,r12
  409b4c:	call   403540 <coda_cursor_get_bit_size@plt>
  409b51:	test   eax,eax
  409b53:	je     409b5c <print_yaml_data@@Base+0x61c>
  409b55:	xor    eax,eax
  409b57:	call   40a6f0 <handle_coda_error@@Base>
  409b5c:	mov    rbp,QWORD PTR [rsp+0x20]
  409b61:	mov    r15,rbp
  409b64:	sar    r15,0x3
  409b68:	mov    eax,ebp
  409b6a:	and    eax,0x7
  409b6d:	cmp    rax,0x1
  409b71:	sbb    r15,0xffffffffffffffff
  409b75:	mov    rdi,r15
  409b78:	call   4033f0 <malloc@plt>
  409b7d:	mov    r14,rax
  409b80:	test   rax,rax
  409b83:	jne    409bb4 <print_yaml_data@@Base+0x674>
  409b85:	lea    rsi,[rip+0x24d1]        # 40c05d <_IO_stdin_used@@Base+0x5d>
  409b8c:	lea    rcx,[rip+0x3063]        # 40cbf6 <_IO_stdin_used@@Base+0xbf6>
  409b93:	mov    edi,0xffffffff
  409b98:	mov    r8d,0x188
  409b9e:	xor    eax,eax
  409ba0:	mov    rdx,r15
  409ba3:	call   4030d0 <coda_set_error@plt>
  409ba8:	xor    eax,eax
  409baa:	call   40a6f0 <handle_coda_error@@Base>
  409baf:	mov    rbp,QWORD PTR [rsp+0x20]
  409bb4:	xor    edx,edx
  409bb6:	mov    rdi,r12
  409bb9:	mov    rsi,r14
  409bbc:	mov    rcx,rbp
  409bbf:	call   403600 <coda_cursor_read_bits@plt>
  409bc4:	test   eax,eax
  409bc6:	je     409bcf <print_yaml_data@@Base+0x68f>
  409bc8:	xor    eax,eax
  409bca:	call   40a6f0 <handle_coda_error@@Base>
  409bcf:	lea    rdi,[rip+0x2df3]        # 40c9c9 <_IO_stdin_used@@Base+0x9c9>
  409bd6:	xor    eax,eax
  409bd8:	call   40a410 <print_yaml_data@@Base+0xed0>
  409bdd:	mov    rdi,r14
  409be0:	mov    rsi,r15
  409be3:	call   40a5e0 <print_yaml_data@@Base+0x10a0>
  409be8:	lea    rdi,[rip+0x321d]        # 40ce0c <_IO_stdin_used@@Base+0xe0c>
  409bef:	xor    eax,eax
  409bf1:	call   40a410 <print_yaml_data@@Base+0xed0>
  409bf6:	mov    rdi,r14
  409bf9:	call   403070 <free@plt>
  409bfe:	cmp    DWORD PTR [rsp+0x1c],0x0
  409c03:	jne    409985 <print_yaml_data@@Base+0x445>
  409c09:	jmp    40998c <print_yaml_data@@Base+0x44c>
  409c0e:	mov    rdi,r12
  409c11:	call   4032a0 <coda_cursor_goto_first_record_field@plt>
  409c16:	test   eax,eax
  409c18:	je     409c21 <print_yaml_data@@Base+0x6e1>
  409c1a:	xor    eax,eax
  409c1c:	call   40a6f0 <handle_coda_error@@Base>
  409c21:	mov    QWORD PTR [rsp+0x10],0x0
  409c2a:	cmp    QWORD PTR [rsp+0x20],0x0
  409c30:	jle    40a383 <print_yaml_data@@Base+0xe43>
  409c36:	mov    ebx,0x1
  409c3b:	lea    r14,[rsp+0x6c]
  409c40:	lea    r15,[rip+0x7861]        # 4114a8 <ascii_output@@Base>
  409c47:	lea    rbp,[rip+0x2511]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  409c4e:	xor    esi,esi
  409c50:	mov    rdi,QWORD PTR [rsp+0x8]
  409c55:	mov    rdx,r14
  409c58:	call   4030b0 <coda_type_get_record_field_hidden_status@plt>
  409c5d:	test   eax,eax
  409c5f:	je     409c68 <print_yaml_data@@Base+0x728>
  409c61:	xor    eax,eax
  409c63:	call   40a6f0 <handle_coda_error@@Base>
  409c68:	cmp    DWORD PTR [rsp+0x6c],0x0
  409c6d:	jne    409cfd <print_yaml_data@@Base+0x7bd>
  409c73:	mov    rdi,QWORD PTR [rsp+0x8]
  409c78:	mov    rsi,QWORD PTR [rsp+0x10]
  409c7d:	lea    rdx,[rsp+0x60]
  409c82:	call   4035f0 <coda_type_get_record_field_name@plt>
  409c87:	test   eax,eax
  409c89:	je     409c92 <print_yaml_data@@Base+0x752>
  409c8b:	xor    eax,eax
  409c8d:	call   40a6f0 <handle_coda_error@@Base>
  409c92:	test   r13d,r13d
  409c95:	jne    409c9b <print_yaml_data@@Base+0x75b>
  409c97:	test   ebx,ebx
  409c99:	jne    409ccd <print_yaml_data@@Base+0x78d>
  409c9b:	mov    ebx,DWORD PTR [rip+0x66a3]        # 410344 <__bss_start@@Base+0x14>
  409ca1:	test   ebx,ebx
  409ca3:	js     40a3f1 <print_yaml_data@@Base+0xeb1>
  409ca9:	je     409ccd <print_yaml_data@@Base+0x78d>
  409cab:	add    ebx,0x1
  409cae:	xchg   ax,ax
  409cb0:	mov    rcx,QWORD PTR [r15]
  409cb3:	mov    esi,0x2
  409cb8:	mov    edx,0x1
  409cbd:	mov    rdi,rbp
  409cc0:	call   4035a0 <fwrite@plt>
  409cc5:	add    ebx,0xffffffff
  409cc8:	cmp    ebx,0x1
  409ccb:	jg     409cb0 <print_yaml_data@@Base+0x770>
  409ccd:	mov    rsi,QWORD PTR [rsp+0x60]
  409cd2:	xor    ebx,ebx
  409cd4:	xor    eax,eax
  409cd6:	lea    rdi,[rip+0x2f09]        # 40cbe6 <_IO_stdin_used@@Base+0xbe6>
  409cdd:	call   40a410 <print_yaml_data@@Base+0xed0>
  409ce2:	add    DWORD PTR [rip+0x665b],0x1        # 410344 <__bss_start@@Base+0x14>
  409ce9:	mov    esi,0x1
  409cee:	mov    rdi,r12
  409cf1:	call   409600 <print_yaml_data@@Base+0xc0>
  409cf6:	add    DWORD PTR [rip+0x6647],0xffffffff        # 410344 <__bss_start@@Base+0x14>
  409cfd:	mov    rax,QWORD PTR [rsp+0x20]
  409d02:	add    rax,0xffffffffffffffff
  409d06:	cmp    QWORD PTR [rsp+0x10],rax
  409d0b:	jge    409d20 <print_yaml_data@@Base+0x7e0>
  409d0d:	mov    rdi,r12
  409d10:	call   403500 <coda_cursor_goto_next_record_field@plt>
  409d15:	test   eax,eax
  409d17:	je     409d20 <print_yaml_data@@Base+0x7e0>
  409d19:	xor    eax,eax
  409d1b:	call   40a6f0 <handle_coda_error@@Base>
  409d20:	mov    rsi,QWORD PTR [rsp+0x10]
  409d25:	add    rsi,0x1
  409d29:	mov    QWORD PTR [rsp+0x10],rsi
  409d2e:	cmp    rsi,QWORD PTR [rsp+0x20]
  409d33:	jl     409c50 <print_yaml_data@@Base+0x710>
  409d39:	jmp    40a383 <print_yaml_data@@Base+0xe43>
  409d3e:	mov    ebx,0x1
  409d43:	jmp    40a308 <print_yaml_data@@Base+0xdc8>
  409d48:	lea    rsi,[rsp+0x8]
  409d4d:	mov    rdi,r12
  409d50:	call   403390 <coda_cursor_read_double@plt>
  409d55:	test   eax,eax
  409d57:	je     409d60 <print_yaml_data@@Base+0x820>
  409d59:	xor    eax,eax
  409d5b:	call   40a6f0 <handle_coda_error@@Base>
  409d60:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  409d66:	call   4033a0 <coda_isNaN@plt>
  409d6b:	test   eax,eax
  409d6d:	jne    409d82 <print_yaml_data@@Base+0x842>
  409d6f:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  409d75:	call   403190 <coda_isInf@plt>
  409d7a:	test   eax,eax
  409d7c:	je     40a3bc <print_yaml_data@@Base+0xe7c>
  409d82:	vmovq  xmm0,QWORD PTR [rsp+0x8]
  409d88:	jmp    409def <print_yaml_data@@Base+0x8af>
  409d8a:	lea    rsi,[rsp+0x20]
  409d8f:	lea    rdx,[rsp+0x8]
  409d94:	mov    rdi,r12
  409d97:	call   403450 <coda_cursor_read_complex_double_split@plt>
  409d9c:	test   eax,eax
  409d9e:	je     409da7 <print_yaml_data@@Base+0x867>
  409da0:	xor    eax,eax
  409da2:	call   40a6f0 <handle_coda_error@@Base>
  409da7:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  409dad:	vmovq  xmm1,QWORD PTR [rsp+0x8]
  409db3:	lea    rdi,[rip+0x2566]        # 40c320 <_IO_stdin_used@@Base+0x320>
  409dba:	mov    al,0x2
  409dbc:	call   40a410 <print_yaml_data@@Base+0xed0>
  409dc1:	cmp    DWORD PTR [rsp+0x1c],0x0
  409dc6:	jne    409985 <print_yaml_data@@Base+0x445>
  409dcc:	jmp    40998c <print_yaml_data@@Base+0x44c>
  409dd1:	lea    rsi,[rsp+0x20]
  409dd6:	mov    rdi,r12
  409dd9:	call   403390 <coda_cursor_read_double@plt>
  409dde:	test   eax,eax
  409de0:	je     409de9 <print_yaml_data@@Base+0x8a9>
  409de2:	xor    eax,eax
  409de4:	call   40a6f0 <handle_coda_error@@Base>
  409de9:	vmovq  xmm0,QWORD PTR [rsp+0x20]
  409def:	lea    rdi,[rip+0x2507]        # 40c2fd <_IO_stdin_used@@Base+0x2fd>
  409df6:	mov    al,0x1
  409df8:	call   40a410 <print_yaml_data@@Base+0xed0>
  409dfd:	cmp    DWORD PTR [rsp+0x1c],0x0
  409e02:	jne    409985 <print_yaml_data@@Base+0x445>
  409e08:	jmp    40998c <print_yaml_data@@Base+0x44c>
  409e0d:	mov    ecx,eax
  409e0f:	and    ecx,0xfffffff0
  409e12:	lea    rdi,[rcx-0x10]
  409e16:	mov    rsi,rdi
  409e19:	shr    rsi,0x4
  409e1d:	add    rsi,0x1
  409e21:	mov    edx,esi
  409e23:	and    edx,0x3
  409e26:	cmp    rdi,0x30
  409e2a:	jae    409e51 <print_yaml_data@@Base+0x911>
  409e2c:	vpbroadcastq ymm0,QWORD PTR [rip+0x235b]        # 40c190 <_IO_stdin_used@@Base+0x190>
  409e35:	xor    esi,esi
  409e37:	vmovdqa ymm3,ymm0
  409e3b:	vmovdqa ymm2,ymm0
  409e3f:	vmovdqa ymm1,ymm0
  409e43:	test   rdx,rdx
  409e46:	jne    40a162 <print_yaml_data@@Base+0xc22>
  409e4c:	jmp    40a222 <print_yaml_data@@Base+0xce2>
  409e51:	mov    edi,0x1
  409e56:	sub    rdi,rsi
  409e59:	add    rdi,rdx
  409e5c:	add    rdi,0xffffffffffffffff
  409e60:	vpbroadcastq ymm0,QWORD PTR [rip+0x2327]        # 40c190 <_IO_stdin_used@@Base+0x190>
  409e69:	xor    esi,esi
  409e6b:	vmovdqa ymm3,ymm0
  409e6f:	vmovdqa ymm2,ymm0
  409e73:	vmovdqa ymm1,ymm0
  409e77:	nop    WORD PTR [rax+rax*1+0x0]
  409e80:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x20]
  409e86:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x40]
  409e8c:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x60]
  409e92:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x80]
  409e9b:	vpsrlq ymm8,ymm0,0x20
  409ea0:	vpmuludq ymm8,ymm4,ymm8
  409ea5:	vpsrlq ymm9,ymm4,0x20
  409eaa:	vpmuludq ymm9,ymm9,ymm0
  409eae:	vpaddq ymm8,ymm8,ymm9
  409eb3:	vpsllq ymm8,ymm8,0x20
  409eb9:	vpmuludq ymm0,ymm4,ymm0
  409ebd:	vpaddq ymm0,ymm0,ymm8
  409ec2:	vpsrlq ymm4,ymm3,0x20
  409ec7:	vpmuludq ymm4,ymm5,ymm4
  409ecb:	vpsrlq ymm8,ymm5,0x20
  409ed0:	vpmuludq ymm8,ymm8,ymm3
  409ed4:	vpaddq ymm4,ymm4,ymm8
  409ed9:	vpsllq ymm4,ymm4,0x20
  409ede:	vpmuludq ymm3,ymm5,ymm3
  409ee2:	vpaddq ymm3,ymm3,ymm4
  409ee6:	vpsrlq ymm4,ymm2,0x20
  409eeb:	vpmuludq ymm4,ymm6,ymm4
  409eef:	vpsrlq ymm5,ymm6,0x20
  409ef4:	vpmuludq ymm5,ymm5,ymm2
  409ef8:	vpaddq ymm4,ymm4,ymm5
  409efc:	vpsllq ymm4,ymm4,0x20
  409f01:	vpmuludq ymm2,ymm6,ymm2
  409f05:	vpaddq ymm2,ymm2,ymm4
  409f09:	vpsrlq ymm4,ymm1,0x20
  409f0e:	vpmuludq ymm4,ymm7,ymm4
  409f12:	vpsrlq ymm5,ymm7,0x20
  409f17:	vpmuludq ymm5,ymm5,ymm1
  409f1b:	vpaddq ymm4,ymm4,ymm5
  409f1f:	vpsllq ymm4,ymm4,0x20
  409f24:	vpmuludq ymm1,ymm7,ymm1
  409f28:	vpaddq ymm1,ymm1,ymm4
  409f2c:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0xa0]
  409f35:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0xc0]
  409f3e:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0xe0]
  409f47:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x100]
  409f50:	vpsrlq ymm8,ymm4,0x20
  409f55:	vpmuludq ymm8,ymm8,ymm0
  409f59:	vpsrlq ymm9,ymm0,0x20
  409f5e:	vpmuludq ymm9,ymm4,ymm9
  409f63:	vpaddq ymm8,ymm9,ymm8
  409f68:	vpsllq ymm8,ymm8,0x20
  409f6e:	vpmuludq ymm0,ymm4,ymm0
  409f72:	vpaddq ymm0,ymm0,ymm8
  409f77:	vpsrlq ymm4,ymm5,0x20
  409f7c:	vpmuludq ymm4,ymm4,ymm3
  409f80:	vpsrlq ymm8,ymm3,0x20
  409f85:	vpmuludq ymm8,ymm5,ymm8
  409f8a:	vpaddq ymm4,ymm8,ymm4
  409f8e:	vpsllq ymm4,ymm4,0x20
  409f93:	vpmuludq ymm3,ymm5,ymm3
  409f97:	vpaddq ymm3,ymm3,ymm4
  409f9b:	vpsrlq ymm4,ymm6,0x20
  409fa0:	vpmuludq ymm4,ymm4,ymm2
  409fa4:	vpsrlq ymm5,ymm2,0x20
  409fa9:	vpmuludq ymm5,ymm6,ymm5
  409fad:	vpaddq ymm4,ymm5,ymm4
  409fb1:	vpsllq ymm4,ymm4,0x20
  409fb6:	vpmuludq ymm2,ymm6,ymm2
  409fba:	vpaddq ymm2,ymm2,ymm4
  409fbe:	vpsrlq ymm4,ymm7,0x20
  409fc3:	vpmuludq ymm4,ymm4,ymm1
  409fc7:	vpsrlq ymm5,ymm1,0x20
  409fcc:	vpmuludq ymm5,ymm7,ymm5
  409fd0:	vpaddq ymm4,ymm5,ymm4
  409fd4:	vpsllq ymm4,ymm4,0x20
  409fd9:	vpmuludq ymm1,ymm7,ymm1
  409fdd:	vpaddq ymm1,ymm1,ymm4
  409fe1:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x120]
  409fea:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x140]
  409ff3:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x160]
  409ffc:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x180]
  40a005:	vpsrlq ymm8,ymm4,0x20
  40a00a:	vpmuludq ymm8,ymm8,ymm0
  40a00e:	vpsrlq ymm9,ymm0,0x20
  40a013:	vpmuludq ymm9,ymm4,ymm9
  40a018:	vpaddq ymm8,ymm9,ymm8
  40a01d:	vpsllq ymm8,ymm8,0x20
  40a023:	vpmuludq ymm0,ymm4,ymm0
  40a027:	vpaddq ymm0,ymm0,ymm8
  40a02c:	vpsrlq ymm4,ymm5,0x20
  40a031:	vpmuludq ymm4,ymm4,ymm3
  40a035:	vpsrlq ymm8,ymm3,0x20
  40a03a:	vpmuludq ymm8,ymm5,ymm8
  40a03f:	vpaddq ymm4,ymm8,ymm4
  40a043:	vpsllq ymm4,ymm4,0x20
  40a048:	vpmuludq ymm3,ymm5,ymm3
  40a04c:	vpaddq ymm3,ymm3,ymm4
  40a050:	vpsrlq ymm4,ymm6,0x20
  40a055:	vpmuludq ymm4,ymm4,ymm2
  40a059:	vpsrlq ymm5,ymm2,0x20
  40a05e:	vpmuludq ymm5,ymm6,ymm5
  40a062:	vpaddq ymm4,ymm5,ymm4
  40a066:	vpsllq ymm4,ymm4,0x20
  40a06b:	vpmuludq ymm2,ymm6,ymm2
  40a06f:	vpaddq ymm2,ymm2,ymm4
  40a073:	vpsrlq ymm4,ymm7,0x20
  40a078:	vpmuludq ymm4,ymm4,ymm1
  40a07c:	vpsrlq ymm5,ymm1,0x20
  40a081:	vpmuludq ymm5,ymm7,ymm5
  40a085:	vpaddq ymm4,ymm5,ymm4
  40a089:	vpsllq ymm4,ymm4,0x20
  40a08e:	vpmuludq ymm1,ymm7,ymm1
  40a092:	vpaddq ymm1,ymm1,ymm4
  40a096:	vmovdqu ymm4,YMMWORD PTR [rsp+rsi*8+0x1a0]
  40a09f:	vmovdqu ymm5,YMMWORD PTR [rsp+rsi*8+0x1c0]
  40a0a8:	vmovdqu ymm6,YMMWORD PTR [rsp+rsi*8+0x1e0]
  40a0b1:	vmovdqu ymm7,YMMWORD PTR [rsp+rsi*8+0x200]
  40a0ba:	vpsrlq ymm8,ymm4,0x20
  40a0bf:	vpmuludq ymm8,ymm8,ymm0
  40a0c3:	vpsrlq ymm9,ymm0,0x20
  40a0c8:	vpmuludq ymm9,ymm4,ymm9
  40a0cd:	vpaddq ymm8,ymm9,ymm8
  40a0d2:	vpsllq ymm8,ymm8,0x20
  40a0d8:	vpmuludq ymm0,ymm4,ymm0
  40a0dc:	vpaddq ymm0,ymm0,ymm8
  40a0e1:	vpsrlq ymm4,ymm5,0x20
  40a0e6:	vpmuludq ymm4,ymm4,ymm3
  40a0ea:	vpsrlq ymm8,ymm3,0x20
  40a0ef:	vpmuludq ymm8,ymm5,ymm8
  40a0f4:	vpaddq ymm4,ymm8,ymm4
  40a0f8:	vpsllq ymm4,ymm4,0x20
  40a0fd:	vpmuludq ymm3,ymm5,ymm3
  40a101:	vpaddq ymm3,ymm3,ymm4
  40a105:	vpsrlq ymm4,ymm6,0x20
  40a10a:	vpmuludq ymm4,ymm4,ymm2
  40a10e:	vpsrlq ymm5,ymm2,0x20
  40a113:	vpmuludq ymm5,ymm6,ymm5
  40a117:	vpaddq ymm4,ymm5,ymm4
  40a11b:	vpsllq ymm4,ymm4,0x20
  40a120:	vpmuludq ymm2,ymm6,ymm2
  40a124:	vpaddq ymm2,ymm2,ymm4
  40a128:	vpsrlq ymm4,ymm7,0x20
  40a12d:	vpmuludq ymm4,ymm4,ymm1
  40a131:	vpsrlq ymm5,ymm1,0x20
  40a136:	vpmuludq ymm5,ymm7,ymm5
  40a13a:	vpaddq ymm4,ymm5,ymm4
  40a13e:	vpsllq ymm4,ymm4,0x20
  40a143:	vpmuludq ymm1,ymm7,ymm1
  40a147:	vpaddq ymm1,ymm1,ymm4
  40a14b:	add    rsi,0x40
  40a14f:	add    rdi,0x4
  40a153:	jne    409e80 <print_yaml_data@@Base+0x940>
  40a159:	test   rdx,rdx
  40a15c:	je     40a222 <print_yaml_data@@Base+0xce2>
  40a162:	lea    rsi,[rsp+rsi*8]
  40a166:	add    rsi,0x80
  40a16d:	neg    rdx
  40a170:	vmovdqu ymm4,YMMWORD PTR [rsi-0x60]
  40a175:	vmovdqu ymm5,YMMWORD PTR [rsi-0x40]
  40a17a:	vmovdqu ymm6,YMMWORD PTR [rsi-0x20]
  40a17f:	vmovdqu ymm7,YMMWORD PTR [rsi]
  40a183:	vpsrlq ymm8,ymm0,0x20
  40a188:	vpmuludq ymm8,ymm4,ymm8
  40a18d:	vpsrlq ymm9,ymm4,0x20
  40a192:	vpmuludq ymm9,ymm9,ymm0
  40a196:	vpaddq ymm8,ymm8,ymm9
  40a19b:	vpsllq ymm8,ymm8,0x20
  40a1a1:	vpmuludq ymm0,ymm4,ymm0
  40a1a5:	vpaddq ymm0,ymm0,ymm8
  40a1aa:	vpsrlq ymm4,ymm3,0x20
  40a1af:	vpmuludq ymm4,ymm5,ymm4
  40a1b3:	vpsrlq ymm8,ymm5,0x20
  40a1b8:	vpmuludq ymm8,ymm8,ymm3
  40a1bc:	vpaddq ymm4,ymm4,ymm8
  40a1c1:	vpsllq ymm4,ymm4,0x20
  40a1c6:	vpmuludq ymm3,ymm5,ymm3
  40a1ca:	vpaddq ymm3,ymm3,ymm4
  40a1ce:	vpsrlq ymm4,ymm2,0x20
  40a1d3:	vpmuludq ymm4,ymm6,ymm4
  40a1d7:	vpsrlq ymm5,ymm6,0x20
  40a1dc:	vpmuludq ymm5,ymm5,ymm2
  40a1e0:	vpaddq ymm4,ymm4,ymm5
  40a1e4:	vpsllq ymm4,ymm4,0x20
  40a1e9:	vpmuludq ymm2,ymm6,ymm2
  40a1ed:	vpaddq ymm2,ymm2,ymm4
  40a1f1:	vpsrlq ymm4,ymm1,0x20
  40a1f6:	vpmuludq ymm4,ymm7,ymm4
  40a1fa:	vpsrlq ymm5,ymm7,0x20
  40a1ff:	vpmuludq ymm5,ymm5,ymm1
  40a203:	vpaddq ymm4,ymm4,ymm5
  40a207:	vpsllq ymm4,ymm4,0x20
  40a20c:	vpmuludq ymm1,ymm7,ymm1
  40a210:	vpaddq ymm1,ymm1,ymm4
  40a214:	sub    rsi,0xffffffffffffff80
  40a218:	add    rdx,0x1
  40a21c:	jne    40a170 <print_yaml_data@@Base+0xc30>
  40a222:	vpsrlq ymm4,ymm3,0x20
  40a227:	vpmuludq ymm4,ymm4,ymm0
  40a22b:	vpsrlq ymm5,ymm0,0x20
  40a230:	vpmuludq ymm5,ymm3,ymm5
  40a234:	vpaddq ymm4,ymm5,ymm4
  40a238:	vpsllq ymm4,ymm4,0x20
  40a23d:	vpmuludq ymm0,ymm3,ymm0
  40a241:	vpaddq ymm0,ymm0,ymm4
  40a245:	vpsrlq ymm3,ymm2,0x20
  40a24a:	vpmuludq ymm3,ymm3,ymm0
  40a24e:	vpsrlq ymm4,ymm0,0x20
  40a253:	vpmuludq ymm4,ymm2,ymm4
  40a257:	vpaddq ymm3,ymm4,ymm3
  40a25b:	vpsllq ymm3,ymm3,0x20
  40a260:	vpmuludq ymm0,ymm2,ymm0
  40a264:	vpaddq ymm0,ymm0,ymm3
  40a268:	vpsrlq ymm2,ymm1,0x20
  40a26d:	vpmuludq ymm2,ymm2,ymm0
  40a271:	vpsrlq ymm3,ymm0,0x20
  40a276:	vpmuludq ymm3,ymm1,ymm3
  40a27a:	vpaddq ymm2,ymm3,ymm2
  40a27e:	vpsllq ymm2,ymm2,0x20
  40a283:	vpmuludq ymm0,ymm1,ymm0
  40a287:	vpaddq ymm0,ymm0,ymm2
  40a28b:	vextracti128 xmm1,ymm0,0x1
  40a291:	vpsrlq ymm2,ymm0,0x20
  40a296:	vpmuludq ymm2,ymm2,ymm1
  40a29a:	vpsrlq ymm3,ymm1,0x20
  40a29f:	vpmuludq ymm3,ymm0,ymm3
  40a2a3:	vpaddq ymm2,ymm3,ymm2
  40a2a7:	vpsllq ymm2,ymm2,0x20
  40a2ac:	vpmuludq ymm0,ymm0,ymm1
  40a2b0:	vpaddq ymm0,ymm0,ymm2
  40a2b4:	vpshufd xmm1,xmm0,0x4e
  40a2b9:	vpsrlq ymm2,ymm0,0x20
  40a2be:	vpmuludq ymm2,ymm2,ymm1
  40a2c2:	vpsrlq ymm3,ymm1,0x20
  40a2c7:	vpmuludq ymm3,ymm0,ymm3
  40a2cb:	vpaddq ymm2,ymm3,ymm2
  40a2cf:	vpsllq ymm2,ymm2,0x20
  40a2d4:	vpmuludq ymm0,ymm0,ymm1
  40a2d8:	vpaddq ymm0,ymm0,ymm2
  40a2dc:	vmovq  rbx,xmm0
  40a2e1:	cmp    rcx,rax
  40a2e4:	je     40a2ff <print_yaml_data@@Base+0xdbf>
  40a2e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2f0:	imul   rbx,QWORD PTR [rsp+rcx*8+0x20]
  40a2f6:	add    rcx,0x1
  40a2fa:	cmp    rax,rcx
  40a2fd:	jne    40a2f0 <print_yaml_data@@Base+0xdb0>
  40a2ff:	test   rbx,rbx
  40a302:	jle    40a39b <print_yaml_data@@Base+0xe5b>
  40a308:	lea    rdi,[rip+0x2afe]        # 40ce0d <_IO_stdin_used@@Base+0xe0d>
  40a30f:	xor    eax,eax
  40a311:	vzeroupper 
  40a314:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a319:	mov    rdi,r12
  40a31c:	call   403270 <coda_cursor_goto_first_array_element@plt>
  40a321:	test   eax,eax
  40a323:	je     40a32c <print_yaml_data@@Base+0xdec>
  40a325:	xor    eax,eax
  40a327:	call   40a6f0 <handle_coda_error@@Base>
  40a32c:	lea    r15,[rbx-0x1]
  40a330:	lea    r14,[rip+0x28b8]        # 40cbef <_IO_stdin_used@@Base+0xbef>
  40a337:	xor    ebp,ebp
  40a339:	nop    DWORD PTR [rax+0x0]
  40a340:	xor    eax,eax
  40a342:	mov    rdi,r14
  40a345:	call   40a4c0 <print_yaml_data@@Base+0xf80>
  40a34a:	add    DWORD PTR [rip+0x5ff3],0x1        # 410344 <__bss_start@@Base+0x14>
  40a351:	xor    esi,esi
  40a353:	mov    rdi,r12
  40a356:	call   409600 <print_yaml_data@@Base+0xc0>
  40a35b:	add    DWORD PTR [rip+0x5fe2],0xffffffff        # 410344 <__bss_start@@Base+0x14>
  40a362:	cmp    r15,rbp
  40a365:	jle    40a37a <print_yaml_data@@Base+0xe3a>
  40a367:	mov    rdi,r12
  40a36a:	call   4033b0 <coda_cursor_goto_next_array_element@plt>
  40a36f:	test   eax,eax
  40a371:	je     40a37a <print_yaml_data@@Base+0xe3a>
  40a373:	xor    eax,eax
  40a375:	call   40a6f0 <handle_coda_error@@Base>
  40a37a:	add    rbp,0x1
  40a37e:	cmp    rbx,rbp
  40a381:	jne    40a340 <print_yaml_data@@Base+0xe00>
  40a383:	mov    rdi,r12
  40a386:	call   403320 <coda_cursor_goto_parent@plt>
  40a38b:	cmp    DWORD PTR [rsp+0x1c],0x0
  40a390:	jne    409985 <print_yaml_data@@Base+0x445>
  40a396:	jmp    40998c <print_yaml_data@@Base+0x44c>
  40a39b:	lea    rdi,[rip+0x2850]        # 40cbf2 <_IO_stdin_used@@Base+0xbf2>
  40a3a2:	xor    eax,eax
  40a3a4:	vzeroupper 
  40a3a7:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a3ac:	cmp    DWORD PTR [rsp+0x1c],0x0
  40a3b1:	jne    409985 <print_yaml_data@@Base+0x445>
  40a3b7:	jmp    40998c <print_yaml_data@@Base+0x44c>
  40a3bc:	vmovq  xmm0,QWORD PTR [rsp+0x8]
  40a3c2:	lea    rdi,[rip+0x25bc]        # 40c985 <_IO_stdin_used@@Base+0x985>
  40a3c9:	lea    rsi,[rsp+0x20]
  40a3ce:	call   4030f0 <coda_time_double_to_string@plt>
  40a3d3:	test   eax,eax
  40a3d5:	je     40a3e0 <print_yaml_data@@Base+0xea0>
  40a3d7:	lea    rdi,[rip+0x25c4]        # 40c9a2 <_IO_stdin_used@@Base+0x9a2>
  40a3de:	jmp    40a3a2 <print_yaml_data@@Base+0xe62>
  40a3e0:	lea    rdi,[rip+0x2880]        # 40cc67 <_IO_stdin_used@@Base+0xc67>
  40a3e7:	lea    rsi,[rsp+0x20]
  40a3ec:	jmp    409977 <print_yaml_data@@Base+0x437>
  40a3f1:	lea    rdi,[rip+0x1f32]        # 40c32a <_IO_stdin_used@@Base+0x32a>
  40a3f8:	lea    rsi,[rip+0x27f7]        # 40cbf6 <_IO_stdin_used@@Base+0xbf6>
  40a3ff:	lea    rcx,[rip+0x1f30]        # 40c336 <_IO_stdin_used@@Base+0x336>
  40a406:	mov    edx,0x2c
  40a40b:	call   403240 <__assert_fail@plt>
  40a410:	sub    rsp,0xd8
  40a417:	mov    r10,rdi
  40a41a:	test   al,al
  40a41c:	je     40a45d <print_yaml_data@@Base+0xf1d>
  40a41e:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40a424:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40a42a:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40a430:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40a439:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40a442:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40a44b:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40a454:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40a45d:	mov    QWORD PTR [rsp+0x48],r9
  40a462:	mov    QWORD PTR [rsp+0x40],r8
  40a467:	mov    QWORD PTR [rsp+0x38],rcx
  40a46c:	mov    QWORD PTR [rsp+0x30],rdx
  40a471:	mov    QWORD PTR [rsp+0x28],rsi
  40a476:	lea    rax,[rsp+0x20]
  40a47b:	mov    QWORD PTR [rsp+0x10],rax
  40a480:	lea    rax,[rsp+0xe0]
  40a488:	mov    QWORD PTR [rsp+0x8],rax
  40a48d:	movabs rax,0x3000000008
  40a497:	mov    QWORD PTR [rsp],rax
  40a49b:	lea    rax,[rip+0x7006]        # 4114a8 <ascii_output@@Base>
  40a4a2:	mov    rdi,QWORD PTR [rax]
  40a4a5:	mov    rdx,rsp
  40a4a8:	mov    rsi,r10
  40a4ab:	call   403530 <vfprintf@plt>
  40a4b0:	add    rsp,0xd8
  40a4b7:	ret    
  40a4b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a4c0:	push   rbp
  40a4c1:	push   r15
  40a4c3:	push   r14
  40a4c5:	push   rbx
  40a4c6:	sub    rsp,0xd8
  40a4cd:	mov    r14,rdi
  40a4d0:	test   al,al
  40a4d2:	je     40a513 <print_yaml_data@@Base+0xfd3>
  40a4d4:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40a4da:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  40a4e0:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40a4e6:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40a4ef:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40a4f8:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  40a501:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40a50a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  40a513:	mov    QWORD PTR [rsp+0x48],r9
  40a518:	mov    QWORD PTR [rsp+0x40],r8
  40a51d:	mov    QWORD PTR [rsp+0x38],rcx
  40a522:	mov    QWORD PTR [rsp+0x30],rdx
  40a527:	mov    QWORD PTR [rsp+0x28],rsi
  40a52c:	mov    ebp,DWORD PTR [rip+0x5e12]        # 410344 <__bss_start@@Base+0x14>
  40a532:	test   ebp,ebp
  40a534:	js     40a5b5 <print_yaml_data@@Base+0x1075>
  40a536:	je     40a56d <print_yaml_data@@Base+0x102d>
  40a538:	add    ebp,0x1
  40a53b:	lea    r15,[rip+0x6f66]        # 4114a8 <ascii_output@@Base>
  40a542:	lea    rbx,[rip+0x1c16]        # 40c15f <_IO_stdin_used@@Base+0x15f>
  40a549:	nop    DWORD PTR [rax+0x0]
  40a550:	mov    rcx,QWORD PTR [r15]
  40a553:	mov    esi,0x2
  40a558:	mov    edx,0x1
  40a55d:	mov    rdi,rbx
  40a560:	call   4035a0 <fwrite@plt>
  40a565:	add    ebp,0xffffffff
  40a568:	cmp    ebp,0x1
  40a56b:	jg     40a550 <print_yaml_data@@Base+0x1010>
  40a56d:	lea    rax,[rsp+0x20]
  40a572:	mov    QWORD PTR [rsp+0x10],rax
  40a577:	lea    rax,[rsp+0x100]
  40a57f:	mov    QWORD PTR [rsp+0x8],rax
  40a584:	movabs rax,0x3000000008
  40a58e:	mov    QWORD PTR [rsp],rax
  40a592:	lea    rax,[rip+0x6f0f]        # 4114a8 <ascii_output@@Base>
  40a599:	mov    rdi,QWORD PTR [rax]
  40a59c:	mov    rdx,rsp
  40a59f:	mov    rsi,r14
  40a5a2:	call   403530 <vfprintf@plt>
  40a5a7:	add    rsp,0xd8
  40a5ae:	pop    rbx
  40a5af:	pop    r14
  40a5b1:	pop    r15
  40a5b3:	pop    rbp
  40a5b4:	ret    
  40a5b5:	lea    rdi,[rip+0x1d6e]        # 40c32a <_IO_stdin_used@@Base+0x32a>
  40a5bc:	lea    rsi,[rip+0x2633]        # 40cbf6 <_IO_stdin_used@@Base+0xbf6>
  40a5c3:	lea    rcx,[rip+0x1d6c]        # 40c336 <_IO_stdin_used@@Base+0x336>
  40a5ca:	mov    edx,0x2c
  40a5cf:	call   403240 <__assert_fail@plt>
  40a5d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a5de:	xchg   ax,ax
  40a5e0:	push   rbp
  40a5e1:	push   r15
  40a5e3:	push   r14
  40a5e5:	push   r13
  40a5e7:	push   r12
  40a5e9:	push   rbx
  40a5ea:	push   rax
  40a5eb:	test   rsi,rsi
  40a5ee:	jle    40a6dd <print_yaml_data@@Base+0x119d>
  40a5f4:	mov    rbx,rsi
  40a5f7:	mov    r14,rdi
  40a5fa:	lea    r13,[rip+0x256b]        # 40cb6c <_IO_stdin_used@@Base+0xb6c>
  40a601:	lea    rbp,[rip+0x1b01]        # 40c109 <_IO_stdin_used@@Base+0x109>
  40a608:	lea    r12,[rip+0x23b9]        # 40c9c8 <_IO_stdin_used@@Base+0x9c8>
  40a60f:	xor    r15d,r15d
  40a612:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a61c:	nop    DWORD PTR [rax+0x0]
  40a620:	movsx  esi,BYTE PTR [r14+r15*1]
  40a625:	lea    eax,[rsi-0x8]
  40a628:	cmp    eax,0x1a
  40a62b:	ja     40a64a <print_yaml_data@@Base+0x110a>
  40a62d:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40a632:	add    rax,r13
  40a635:	jmp    rax
  40a637:	xor    eax,eax
  40a639:	lea    rdi,[rip+0x1aba]        # 40c0fa <_IO_stdin_used@@Base+0xfa>
  40a640:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a645:	jmp    40a6d0 <print_yaml_data@@Base+0x1190>
  40a64a:	cmp    esi,0x5c
  40a64d:	jne    40a65f <print_yaml_data@@Base+0x111f>
  40a64f:	xor    eax,eax
  40a651:	lea    rdi,[rip+0x1ab4]        # 40c10c <_IO_stdin_used@@Base+0x10c>
  40a658:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a65d:	jmp    40a6d0 <print_yaml_data@@Base+0x1190>
  40a65f:	cmp    sil,0x20
  40a663:	jl     40a6be <print_yaml_data@@Base+0x117e>
  40a665:	cmp    sil,0x7f
  40a669:	je     40a6be <print_yaml_data@@Base+0x117e>
  40a66b:	xor    eax,eax
  40a66d:	lea    rdi,[rip+0x1cd4]        # 40c348 <_IO_stdin_used@@Base+0x348>
  40a674:	jmp    40a6cb <print_yaml_data@@Base+0x118b>
  40a676:	xor    eax,eax
  40a678:	lea    rdi,[rip+0x1a7e]        # 40c0fd <_IO_stdin_used@@Base+0xfd>
  40a67f:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a684:	jmp    40a6d0 <print_yaml_data@@Base+0x1190>
  40a686:	xor    eax,eax
  40a688:	lea    rdi,[rip+0x1a71]        # 40c100 <_IO_stdin_used@@Base+0x100>
  40a68f:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a694:	jmp    40a6d0 <print_yaml_data@@Base+0x1190>
  40a696:	xor    eax,eax
  40a698:	lea    rdi,[rip+0x1a67]        # 40c106 <_IO_stdin_used@@Base+0x106>
  40a69f:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a6a4:	jmp    40a6d0 <print_yaml_data@@Base+0x1190>
  40a6a6:	xor    eax,eax
  40a6a8:	mov    rdi,rbp
  40a6ab:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a6b0:	jmp    40a6d0 <print_yaml_data@@Base+0x1190>
  40a6b2:	xor    eax,eax
  40a6b4:	mov    rdi,r12
  40a6b7:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a6bc:	jmp    40a6d0 <print_yaml_data@@Base+0x1190>
  40a6be:	movzx  esi,sil
  40a6c2:	xor    eax,eax
  40a6c4:	lea    rdi,[rip+0x2300]        # 40c9cb <_IO_stdin_used@@Base+0x9cb>
  40a6cb:	call   40a410 <print_yaml_data@@Base+0xed0>
  40a6d0:	add    r15,0x1
  40a6d4:	cmp    rbx,r15
  40a6d7:	jne    40a620 <print_yaml_data@@Base+0x10e0>
  40a6dd:	add    rsp,0x8
  40a6e1:	pop    rbx
  40a6e2:	pop    r12
  40a6e4:	pop    r13
  40a6e6:	pop    r14
  40a6e8:	pop    r15
  40a6ea:	pop    rbp
  40a6eb:	ret    
  40a6ec:	nop    DWORD PTR [rax+0x0]

000000000040a6f0 <handle_coda_error@@Base>:
  40a6f0:	push   r14
  40a6f2:	push   rbx
  40a6f3:	push   rax
  40a6f4:	mov    r14,QWORD PTR [rip+0x58fd]        # 40fff8 <stderr@GLIBC_2.2.5>
  40a6fb:	mov    rbx,QWORD PTR [r14]
  40a6fe:	call   4035d0 <coda_get_errno@plt>
  40a703:	mov    edi,DWORD PTR [rax]
  40a705:	call   403550 <coda_errno_to_string@plt>
  40a70a:	mov    rcx,rax
  40a70d:	lea    rsi,[rip+0x254c]        # 40cc60 <_IO_stdin_used@@Base+0xc60>
  40a714:	xor    eax,eax
  40a716:	mov    rdi,rbx
  40a719:	mov    rdx,rcx
  40a71c:	call   403300 <fprintf@plt>
  40a721:	mov    rdi,QWORD PTR [r14]
  40a724:	call   403400 <fflush@plt>
  40a729:	mov    edi,0x1
  40a72e:	call   403580 <exit@plt>
  40a733:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a73d:	nop    DWORD PTR [rax]

000000000040a740 <main@@Base>:
  40a740:	push   rbp
  40a741:	push   r15
  40a743:	push   r14
  40a745:	push   r13
  40a747:	push   r12
  40a749:	push   rbx
  40a74a:	sub    rsp,0x28
  40a74e:	cmp    edi,0x1
  40a751:	je     40b846 <main@@Base+0x1106>
  40a757:	mov    r14,rsi
  40a75a:	mov    ebx,edi
  40a75c:	mov    rbp,QWORD PTR [rsi+0x8]
  40a760:	lea    rsi,[rip+0x2504]        # 40cc6b <_IO_stdin_used@@Base+0xc6b>
  40a767:	mov    rdi,rbp
  40a76a:	call   4032f0 <strcmp@plt>
  40a76f:	test   eax,eax
  40a771:	je     40b846 <main@@Base+0x1106>
  40a777:	lea    rsi,[rip+0x24f0]        # 40cc6e <_IO_stdin_used@@Base+0xc6e>
  40a77e:	mov    rdi,rbp
  40a781:	call   4032f0 <strcmp@plt>
  40a786:	test   eax,eax
  40a788:	je     40b846 <main@@Base+0x1106>
  40a78e:	lea    rsi,[rip+0x24e0]        # 40cc75 <_IO_stdin_used@@Base+0xc75>
  40a795:	mov    rdi,rbp
  40a798:	call   4032f0 <strcmp@plt>
  40a79d:	test   eax,eax
  40a79f:	je     40b852 <main@@Base+0x1112>
  40a7a5:	lea    rsi,[rip+0x24cc]        # 40cc78 <_IO_stdin_used@@Base+0xc78>
  40a7ac:	mov    rdi,rbp
  40a7af:	call   4032f0 <strcmp@plt>
  40a7b4:	test   eax,eax
  40a7b6:	je     40b852 <main@@Base+0x1112>
  40a7bc:	cmp    ebx,0x3
  40a7bf:	jl     40a7d8 <main@@Base+0x98>
  40a7c1:	lea    rsi,[rip+0x24ba]        # 40cc82 <_IO_stdin_used@@Base+0xc82>
  40a7c8:	mov    rdi,rbp
  40a7cb:	call   4032f0 <strcmp@plt>
  40a7d0:	test   eax,eax
  40a7d2:	je     40af95 <main@@Base+0x855>
  40a7d8:	mov    rdi,QWORD PTR [r14]
  40a7db:	lea    rdx,[rip+0x24a3]        # 40cc85 <_IO_stdin_used@@Base+0xc85>
  40a7e2:	xor    esi,esi
  40a7e4:	call   403140 <coda_set_definition_path_conditional@plt>
  40a7e9:	mov    r12d,0x1
  40a7ef:	test   eax,eax
  40a7f1:	jne    40b85e <main@@Base+0x111e>
  40a7f7:	mov    r15d,r12d
  40a7fa:	mov    rbp,QWORD PTR [r14+r15*8]
  40a7fe:	lea    rsi,[rip+0x249a]        # 40cc9f <_IO_stdin_used@@Base+0xc9f>
  40a805:	mov    rdi,rbp
  40a808:	call   4032f0 <strcmp@plt>
  40a80d:	test   eax,eax
  40a80f:	je     40a8fd <main@@Base+0x1bd>
  40a815:	lea    rsi,[rip+0x2488]        # 40cca4 <_IO_stdin_used@@Base+0xca4>
  40a81c:	mov    rdi,rbp
  40a81f:	call   4032f0 <strcmp@plt>
  40a824:	test   eax,eax
  40a826:	je     40aebd <main@@Base+0x77d>
  40a82c:	lea    rsi,[rip+0x2477]        # 40ccaa <_IO_stdin_used@@Base+0xcaa>
  40a833:	mov    rdi,rbp
  40a836:	call   4032f0 <strcmp@plt>
  40a83b:	test   eax,eax
  40a83d:	je     40afa9 <main@@Base+0x869>
  40a843:	lea    rsi,[rip+0x2465]        # 40ccaf <_IO_stdin_used@@Base+0xcaf>
  40a84a:	mov    rdi,rbp
  40a84d:	call   4032f0 <strcmp@plt>
  40a852:	test   eax,eax
  40a854:	je     40b22a <main@@Base+0xaea>
  40a85a:	lea    rsi,[rip+0x2453]        # 40ccb4 <_IO_stdin_used@@Base+0xcb4>
  40a861:	mov    rdi,rbp
  40a864:	call   4032f0 <strcmp@plt>
  40a869:	test   eax,eax
  40a86b:	jne    40b817 <main@@Base+0x10d7>
  40a871:	lea    rax,[rip+0x6c4c]        # 4114c4 <run_mode@@Base>
  40a878:	mov    DWORD PTR [rax],0x5
  40a87e:	add    r12d,0x1
  40a882:	lea    rax,[rip+0x5adf]        # 410368 <traverse_info@@Base>
  40a889:	mov    QWORD PTR [rax],0x0
  40a890:	lea    rax,[rip+0x5ab9]        # 410350 <output_file_name@@Base>
  40a897:	mov    QWORD PTR [rax],0x0
  40a89e:	mov    rax,QWORD PTR [rip+0x5733]        # 40ffd8 <stdout@GLIBC_2.2.5>
  40a8a5:	mov    rax,QWORD PTR [rax]
  40a8a8:	lea    rcx,[rip+0x6bf9]        # 4114a8 <ascii_output@@Base>
  40a8af:	mov    QWORD PTR [rcx],rax
  40a8b2:	lea    rax,[rip+0x6c0f]        # 4114c8 <starting_path@@Base>
  40a8b9:	mov    QWORD PTR [rax],0x0
  40a8c0:	sub    ebx,r12d
  40a8c3:	jle    40b817 <main@@Base+0x10d7>
  40a8c9:	lea    r15,[r14+r15*8]
  40a8cd:	add    r15,0x8
  40a8d1:	lea    eax,[rbx-0x1]
  40a8d4:	mov    DWORD PTR [rsp+0x8],eax
  40a8d8:	mov    DWORD PTR [rsp+0x4],0x1
  40a8e0:	xor    r13d,r13d
  40a8e3:	xor    eax,eax
  40a8e5:	mov    QWORD PTR [rsp+0x18],rax
  40a8ea:	xor    eax,eax
  40a8ec:	mov    QWORD PTR [rsp+0x10],rax
  40a8f1:	xor    eax,eax
  40a8f3:	mov    QWORD PTR [rsp+0x20],rax
  40a8f8:	jmp    40acb0 <main@@Base+0x570>
  40a8fd:	lea    rax,[rip+0x6bc0]        # 4114c4 <run_mode@@Base>
  40a904:	mov    DWORD PTR [rax],0x0
  40a90a:	add    r12d,0x1
  40a90e:	lea    rax,[rip+0x5a53]        # 410368 <traverse_info@@Base>
  40a915:	mov    QWORD PTR [rax],0x0
  40a91c:	mov    QWORD PTR [rax+0x428],0x0
  40a927:	lea    rax,[rip+0x5a1a]        # 410348 <verbosity@@Base>
  40a92e:	mov    DWORD PTR [rax],0x1
  40a934:	lea    rax,[rip+0x5a25]        # 410360 <calc_dim@@Base>
  40a93b:	mov    DWORD PTR [rax],0x0
  40a941:	lea    rax,[rip+0x5a04]        # 41034c <show_dim_vals@@Base>
  40a948:	mov    DWORD PTR [rax],0x0
  40a94e:	lea    rax,[rip+0x6b63]        # 4114b8 <show_type@@Base>
  40a955:	mov    DWORD PTR [rax],0x0
  40a95b:	lea    rax,[rip+0x59fa]        # 41035c <show_unit@@Base>
  40a962:	mov    DWORD PTR [rax],0x0
  40a968:	lea    rax,[rip+0x6b4d]        # 4114bc <show_description@@Base>
  40a96f:	mov    DWORD PTR [rax],0x0
  40a975:	sub    ebx,r12d
  40a978:	jle    40b817 <main@@Base+0x10d7>
  40a97e:	lea    r15,[r14+r15*8]
  40a982:	add    r15,0x8
  40a986:	mov    r14,rbx
  40a989:	lea    eax,[rbx-0x1]
  40a98c:	mov    DWORD PTR [rsp+0x10],eax
  40a990:	mov    DWORD PTR [rsp+0x4],0x1
  40a998:	xor    r12d,r12d
  40a99b:	lea    rbx,[rip+0x2347]        # 40cce9 <_IO_stdin_used@@Base+0xce9>
  40a9a2:	mov    DWORD PTR [rsp+0x18],0x1
  40a9aa:	lea    rbp,[rip+0x59af]        # 410360 <calc_dim@@Base>
  40a9b1:	mov    QWORD PTR [rsp+0x8],r15
  40a9b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9c0:	movsxd rax,r12d
  40a9c3:	mov    r13,QWORD PTR [r15+rax*8]
  40a9c7:	mov    rdi,r13
  40a9ca:	mov    rsi,rbx
  40a9cd:	call   4032f0 <strcmp@plt>
  40a9d2:	test   eax,eax
  40a9d4:	je     40ab40 <main@@Base+0x400>
  40a9da:	mov    rdi,r13
  40a9dd:	lea    rsi,[rip+0x2308]        # 40ccec <_IO_stdin_used@@Base+0xcec>
  40a9e4:	call   4032f0 <strcmp@plt>
  40a9e9:	test   eax,eax
  40a9eb:	je     40ab40 <main@@Base+0x400>
  40a9f1:	mov    rdi,r13
  40a9f4:	lea    rsi,[rip+0x22fc]        # 40ccf7 <_IO_stdin_used@@Base+0xcf7>
  40a9fb:	call   4032f0 <strcmp@plt>
  40aa00:	test   eax,eax
  40aa02:	je     40ab50 <main@@Base+0x410>
  40aa08:	mov    rdi,r13
  40aa0b:	lea    rsi,[rip+0x22e8]        # 40ccfa <_IO_stdin_used@@Base+0xcfa>
  40aa12:	call   4032f0 <strcmp@plt>
  40aa17:	test   eax,eax
  40aa19:	je     40ab50 <main@@Base+0x410>
  40aa1f:	mov    rdi,r13
  40aa22:	lea    rsi,[rip+0x22e7]        # 40cd10 <_IO_stdin_used@@Base+0xd10>
  40aa29:	call   4032f0 <strcmp@plt>
  40aa2e:	test   eax,eax
  40aa30:	je     40aa45 <main@@Base+0x305>
  40aa32:	mov    rdi,r13
  40aa35:	lea    rsi,[rip+0x22d7]        # 40cd13 <_IO_stdin_used@@Base+0xd13>
  40aa3c:	call   4032f0 <strcmp@plt>
  40aa41:	test   eax,eax
  40aa43:	jne    40aa64 <main@@Base+0x324>
  40aa45:	lea    r15d,[r12+0x1]
  40aa4a:	cmp    r15d,r14d
  40aa4d:	jge    40aa64 <main@@Base+0x324>
  40aa4f:	movsxd rax,r15d
  40aa52:	mov    rcx,QWORD PTR [rsp+0x8]
  40aa57:	mov    rdi,QWORD PTR [rcx+rax*8]
  40aa5b:	cmp    BYTE PTR [rdi],0x2d
  40aa5e:	jne    40ab87 <main@@Base+0x447>
  40aa64:	mov    rdi,r13
  40aa67:	lea    rsi,[rip+0x22d7]        # 40cd45 <_IO_stdin_used@@Base+0xd45>
  40aa6e:	call   4032f0 <strcmp@plt>
  40aa73:	test   eax,eax
  40aa75:	je     40ab5d <main@@Base+0x41d>
  40aa7b:	mov    rdi,r13
  40aa7e:	lea    rsi,[rip+0x22c3]        # 40cd48 <_IO_stdin_used@@Base+0xd48>
  40aa85:	call   4032f0 <strcmp@plt>
  40aa8a:	test   eax,eax
  40aa8c:	je     40ab5d <main@@Base+0x41d>
  40aa92:	mov    rdi,r13
  40aa95:	lea    rsi,[rip+0x22b3]        # 40cd4f <_IO_stdin_used@@Base+0xd4f>
  40aa9c:	call   4032f0 <strcmp@plt>
  40aaa1:	test   eax,eax
  40aaa3:	lea    rbp,[rip+0x58b6]        # 410360 <calc_dim@@Base>
  40aaaa:	mov    r15,QWORD PTR [rsp+0x8]
  40aaaf:	je     40ab78 <main@@Base+0x438>
  40aab5:	mov    rdi,r13
  40aab8:	lea    rsi,[rip+0x2293]        # 40cd52 <_IO_stdin_used@@Base+0xd52>
  40aabf:	call   4032f0 <strcmp@plt>
  40aac4:	test   eax,eax
  40aac6:	je     40ab78 <main@@Base+0x438>
  40aacc:	mov    rdi,r13
  40aacf:	lea    rsi,[rip+0x2283]        # 40cd59 <_IO_stdin_used@@Base+0xd59>
  40aad6:	call   4032f0 <strcmp@plt>
  40aadb:	test   eax,eax
  40aadd:	je     40abb3 <main@@Base+0x473>
  40aae3:	mov    rdi,r13
  40aae6:	lea    rsi,[rip+0x227a]        # 40cd67 <_IO_stdin_used@@Base+0xd67>
  40aaed:	call   4032f0 <strcmp@plt>
  40aaf2:	test   eax,eax
  40aaf4:	je     40abc2 <main@@Base+0x482>
  40aafa:	mov    rdi,r13
  40aafd:	lea    rsi,[rip+0x2270]        # 40cd74 <_IO_stdin_used@@Base+0xd74>
  40ab04:	call   4032f0 <strcmp@plt>
  40ab09:	test   eax,eax
  40ab0b:	je     40abd8 <main@@Base+0x498>
  40ab11:	cmp    r12d,DWORD PTR [rsp+0x10]
  40ab16:	jne    40b817 <main@@Base+0x10d7>
  40ab1c:	cmp    BYTE PTR [r13+0x0],0x2d
  40ab21:	je     40b817 <main@@Base+0x10d7>
  40ab27:	lea    rax,[rip+0x583a]        # 410368 <traverse_info@@Base>
  40ab2e:	mov    QWORD PTR [rax],r13
  40ab31:	mov    eax,DWORD PTR [rsp+0x10]
  40ab35:	mov    r12d,eax
  40ab38:	jmp    40abe0 <main@@Base+0x4a0>
  40ab3d:	nop    DWORD PTR [rax]
  40ab40:	mov    DWORD PTR [rbp+0x0],0x1
  40ab47:	jmp    40abe0 <main@@Base+0x4a0>
  40ab4c:	nop    DWORD PTR [rax+0x0]
  40ab50:	mov    DWORD PTR [rsp+0x4],0x0
  40ab58:	jmp    40abe0 <main@@Base+0x4a0>
  40ab5d:	lea    rax,[rip+0x6954]        # 4114b8 <show_type@@Base>
  40ab64:	mov    DWORD PTR [rax],0x1
  40ab6a:	lea    rbp,[rip+0x57ef]        # 410360 <calc_dim@@Base>
  40ab71:	mov    r15,QWORD PTR [rsp+0x8]
  40ab76:	jmp    40abe0 <main@@Base+0x4a0>
  40ab78:	lea    rax,[rip+0x57dd]        # 41035c <show_unit@@Base>
  40ab7f:	mov    DWORD PTR [rax],0x1
  40ab85:	jmp    40abe0 <main@@Base+0x4a0>
  40ab87:	call   407560 <codadump_filter_create@@Base>
  40ab8c:	lea    rcx,[rip+0x57d5]        # 410368 <traverse_info@@Base>
  40ab93:	mov    QWORD PTR [rcx+0x428],rax
  40ab9a:	mov    r12d,r15d
  40ab9d:	test   rax,rax
  40aba0:	lea    rbp,[rip+0x57b9]        # 410360 <calc_dim@@Base>
  40aba7:	mov    r15,QWORD PTR [rsp+0x8]
  40abac:	jne    40abe0 <main@@Base+0x4a0>
  40abae:	jmp    40b895 <main@@Base+0x1155>
  40abb3:	lea    rax,[rip+0x6902]        # 4114bc <show_description@@Base>
  40abba:	mov    DWORD PTR [rax],0x1
  40abc0:	jmp    40abe0 <main@@Base+0x4a0>
  40abc2:	mov    DWORD PTR [rbp+0x0],0x1
  40abc9:	lea    rax,[rip+0x577c]        # 41034c <show_dim_vals@@Base>
  40abd0:	mov    DWORD PTR [rax],0x1
  40abd6:	jmp    40abe0 <main@@Base+0x4a0>
  40abd8:	mov    DWORD PTR [rsp+0x18],0x0
  40abe0:	add    r12d,0x1
  40abe4:	cmp    r12d,r14d
  40abe7:	jl     40a9c0 <main@@Base+0x280>
  40abed:	lea    rax,[rip+0x5774]        # 410368 <traverse_info@@Base>
  40abf4:	mov    rax,QWORD PTR [rax]
  40abf7:	test   rax,rax
  40abfa:	je     40b817 <main@@Base+0x10d7>
  40ac00:	cmp    BYTE PTR [rax],0x0
  40ac03:	je     40b817 <main@@Base+0x10d7>
  40ac09:	call   4033d0 <coda_init@plt>
  40ac0e:	test   eax,eax
  40ac10:	jne    40b85e <main@@Base+0x111e>
  40ac16:	xor    edi,edi
  40ac18:	cmp    DWORD PTR [rsp+0x18],0x0
  40ac1d:	sete   dil
  40ac21:	call   403160 <coda_set_option_bypass_special_types@plt>
  40ac26:	xor    edi,edi
  40ac28:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  40ac2d:	mov    edi,DWORD PTR [rsp+0x4]
  40ac31:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40ac36:	xor    eax,eax
  40ac38:	call   408d80 <traverse_info_init@@Base>
  40ac3d:	xor    eax,eax
  40ac3f:	call   405740 <dim_info_init@@Base>
  40ac44:	xor    eax,eax
  40ac46:	call   408df0 <traverse_product@@Base>
  40ac4b:	jmp    40b7f3 <main@@Base+0x10b3>
  40ac50:	lea    rcx,[rip+0x56f9]        # 410350 <output_file_name@@Base>
  40ac57:	mov    QWORD PTR [rcx],rax
  40ac5a:	jmp    40ae1b <main@@Base+0x6db>
  40ac5f:	lea    rcx,[rip+0x6862]        # 4114c8 <starting_path@@Base>
  40ac66:	mov    QWORD PTR [rcx],rax
  40ac69:	jmp    40ae1b <main@@Base+0x6db>
  40ac6e:	xor    esi,esi
  40ac70:	mov    edx,0xa
  40ac75:	call   403330 <strtol@plt>
  40ac7a:	lea    rcx,[rip+0x56ab]        # 41032c <max_depth@@Base>
  40ac81:	mov    DWORD PTR [rcx],eax
  40ac83:	jmp    40ae1b <main@@Base+0x6db>
  40ac88:	xor    esi,esi
  40ac8a:	mov    edx,0xa
  40ac8f:	mov    r12,rcx
  40ac92:	call   403330 <strtol@plt>
  40ac97:	mov    QWORD PTR [rsp+0x18],rax
  40ac9c:	mov    rax,r12
  40ac9f:	mov    QWORD PTR [rsp+0x20],r12
  40aca4:	mov    QWORD PTR [rsp+0x10],r14
  40aca9:	jmp    40ae1b <main@@Base+0x6db>
  40acae:	xchg   ax,ax
  40acb0:	movsxd r14,r13d
  40acb3:	mov    r12,QWORD PTR [r15+r14*8]
  40acb7:	mov    rdi,r12
  40acba:	lea    rsi,[rip+0x2036]        # 40ccf7 <_IO_stdin_used@@Base+0xcf7>
  40acc1:	call   4032f0 <strcmp@plt>
  40acc6:	test   eax,eax
  40acc8:	je     40ae10 <main@@Base+0x6d0>
  40acce:	mov    rdi,r12
  40acd1:	lea    rsi,[rip+0x2151]        # 40ce29 <_IO_stdin_used@@Base+0xe29>
  40acd8:	call   4032f0 <strcmp@plt>
  40acdd:	test   eax,eax
  40acdf:	je     40ae10 <main@@Base+0x6d0>
  40ace5:	mov    rdi,r12
  40ace8:	lea    rsi,[rip+0x20ae]        # 40cd9d <_IO_stdin_used@@Base+0xd9d>
  40acef:	call   4032f0 <strcmp@plt>
  40acf4:	test   eax,eax
  40acf6:	je     40ad0b <main@@Base+0x5cb>
  40acf8:	mov    rdi,r12
  40acfb:	lea    rsi,[rip+0x209e]        # 40cda0 <_IO_stdin_used@@Base+0xda0>
  40ad02:	call   4032f0 <strcmp@plt>
  40ad07:	test   eax,eax
  40ad09:	jne    40ad30 <main@@Base+0x5f0>
  40ad0b:	lea    ebp,[r13+0x1]
  40ad0f:	cmp    ebp,ebx
  40ad11:	jge    40ad30 <main@@Base+0x5f0>
  40ad13:	movsxd rax,ebp
  40ad16:	mov    rax,QWORD PTR [r15+rax*8]
  40ad1a:	cmp    BYTE PTR [rax],0x2d
  40ad1d:	jne    40ac50 <main@@Base+0x510>
  40ad23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ad2d:	nop    DWORD PTR [rax]
  40ad30:	mov    rdi,r12
  40ad33:	lea    rsi,[rip+0x20e5]        # 40ce1f <_IO_stdin_used@@Base+0xe1f>
  40ad3a:	call   4032f0 <strcmp@plt>
  40ad3f:	test   eax,eax
  40ad41:	je     40ad56 <main@@Base+0x616>
  40ad43:	mov    rdi,r12
  40ad46:	lea    rsi,[rip+0x20d5]        # 40ce22 <_IO_stdin_used@@Base+0xe22>
  40ad4d:	call   4032f0 <strcmp@plt>
  40ad52:	test   eax,eax
  40ad54:	jne    40ad70 <main@@Base+0x630>
  40ad56:	lea    ebp,[r13+0x1]
  40ad5a:	cmp    ebp,ebx
  40ad5c:	jge    40ad70 <main@@Base+0x630>
  40ad5e:	movsxd rax,ebp
  40ad61:	mov    rax,QWORD PTR [r15+rax*8]
  40ad65:	cmp    BYTE PTR [rax],0x2d
  40ad68:	jne    40ac5f <main@@Base+0x51f>
  40ad6e:	xchg   ax,ax
  40ad70:	mov    rdi,r12
  40ad73:	lea    rsi,[rip+0x20cf]        # 40ce49 <_IO_stdin_used@@Base+0xe49>
  40ad7a:	call   4032f0 <strcmp@plt>
  40ad7f:	test   eax,eax
  40ad81:	jne    40ada0 <main@@Base+0x660>
  40ad83:	lea    ebp,[r13+0x1]
  40ad87:	cmp    ebp,ebx
  40ad89:	jge    40ada0 <main@@Base+0x660>
  40ad8b:	movsxd rax,ebp
  40ad8e:	mov    rdi,QWORD PTR [r15+rax*8]
  40ad92:	cmp    BYTE PTR [rdi],0x2d
  40ad95:	jne    40ac6e <main@@Base+0x52e>
  40ad9b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ada0:	mov    rdi,r12
  40ada3:	lea    rsi,[rip+0x20ab]        # 40ce55 <_IO_stdin_used@@Base+0xe55>
  40adaa:	call   4032f0 <strcmp@plt>
  40adaf:	test   eax,eax
  40adb1:	jne    40ade0 <main@@Base+0x6a0>
  40adb3:	lea    ebp,[r13+0x3]
  40adb7:	cmp    ebp,ebx
  40adb9:	jge    40ade0 <main@@Base+0x6a0>
  40adbb:	mov    rcx,QWORD PTR [r15+r14*8+0x8]
  40adc0:	cmp    BYTE PTR [rcx],0x2d
  40adc3:	je     40ade0 <main@@Base+0x6a0>
  40adc5:	mov    r14,QWORD PTR [r15+r14*8+0x10]
  40adca:	cmp    BYTE PTR [r14],0x2d
  40adce:	je     40ade0 <main@@Base+0x6a0>
  40add0:	movsxd rax,ebp
  40add3:	mov    rdi,QWORD PTR [r15+rax*8]
  40add7:	cmp    BYTE PTR [rdi],0x2d
  40adda:	jne    40ac88 <main@@Base+0x548>
  40ade0:	cmp    r13d,DWORD PTR [rsp+0x8]
  40ade5:	jne    40b817 <main@@Base+0x10d7>
  40adeb:	cmp    BYTE PTR [r12],0x2d
  40adf0:	je     40b817 <main@@Base+0x10d7>
  40adf6:	lea    rax,[rip+0x556b]        # 410368 <traverse_info@@Base>
  40adfd:	mov    QWORD PTR [rax],r12
  40ae00:	mov    ebp,DWORD PTR [rsp+0x8]
  40ae04:	jmp    40ae1b <main@@Base+0x6db>
  40ae06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae10:	mov    DWORD PTR [rsp+0x4],0x0
  40ae18:	mov    ebp,r13d
  40ae1b:	add    ebp,0x1
  40ae1e:	mov    r13d,ebp
  40ae21:	cmp    ebp,ebx
  40ae23:	jl     40acb0 <main@@Base+0x570>
  40ae29:	lea    rax,[rip+0x5538]        # 410368 <traverse_info@@Base>
  40ae30:	mov    rax,QWORD PTR [rax]
  40ae33:	test   rax,rax
  40ae36:	je     40b817 <main@@Base+0x10d7>
  40ae3c:	cmp    BYTE PTR [rax],0x0
  40ae3f:	je     40b817 <main@@Base+0x10d7>
  40ae45:	call   4033d0 <coda_init@plt>
  40ae4a:	test   eax,eax
  40ae4c:	jne    40b85e <main@@Base+0x111e>
  40ae52:	xor    edi,edi
  40ae54:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40ae59:	mov    edi,DWORD PTR [rsp+0x4]
  40ae5d:	call   403050 <coda_set_option_use_fast_size_expressions@plt>
  40ae62:	lea    rax,[rip+0x54e7]        # 410350 <output_file_name@@Base>
  40ae69:	mov    rdi,QWORD PTR [rax]
  40ae6c:	test   rdi,rdi
  40ae6f:	lea    rbx,[rip+0x6632]        # 4114a8 <ascii_output@@Base>
  40ae76:	je     40ae90 <main@@Base+0x750>
  40ae78:	lea    rsi,[rip+0x1f64]        # 40cde3 <_IO_stdin_used@@Base+0xde3>
  40ae7f:	call   403510 <fopen@plt>
  40ae84:	mov    QWORD PTR [rbx],rax
  40ae87:	test   rax,rax
  40ae8a:	je     40b8bc <main@@Base+0x117c>
  40ae90:	mov    rdi,QWORD PTR [rsp+0x20]
  40ae95:	mov    rsi,QWORD PTR [rsp+0x10]
  40ae9a:	mov    rdx,QWORD PTR [rsp+0x18]
  40ae9f:	call   4042b0 <print_debug_data@@Base>
  40aea4:	lea    rax,[rip+0x54a5]        # 410350 <output_file_name@@Base>
  40aeab:	cmp    QWORD PTR [rax],0x0
  40aeaf:	je     40b801 <main@@Base+0x10c1>
  40aeb5:	mov    rdi,QWORD PTR [rbx]
  40aeb8:	jmp    40b4b8 <main@@Base+0xd78>
  40aebd:	lea    rax,[rip+0x6600]        # 4114c4 <run_mode@@Base>
  40aec4:	mov    DWORD PTR [rax],0x1
  40aeca:	add    r12d,0x1
  40aece:	lea    rax,[rip+0x5493]        # 410368 <traverse_info@@Base>
  40aed5:	mov    QWORD PTR [rax],0x0
  40aedc:	mov    QWORD PTR [rax+0x428],0x0
  40aee7:	lea    rax,[rip+0x5462]        # 410350 <output_file_name@@Base>
  40aeee:	mov    QWORD PTR [rax],0x0
  40aef5:	lea    rax,[rip+0x1264]        # 40c160 <_IO_stdin_used@@Base+0x160>
  40aefc:	lea    rcx,[rip+0x65ad]        # 4114b0 <ascii_col_sep@@Base>
  40af03:	mov    QWORD PTR [rcx],rax
  40af06:	mov    rax,QWORD PTR [rip+0x50cb]        # 40ffd8 <stdout@GLIBC_2.2.5>
  40af0d:	mov    rax,QWORD PTR [rax]
  40af10:	lea    rcx,[rip+0x6591]        # 4114a8 <ascii_output@@Base>
  40af17:	mov    QWORD PTR [rcx],rax
  40af1a:	lea    rax,[rip+0x5427]        # 410348 <verbosity@@Base>
  40af21:	mov    DWORD PTR [rax],0x1
  40af27:	lea    rax,[rip+0x5432]        # 410360 <calc_dim@@Base>
  40af2e:	mov    DWORD PTR [rax],0x1
  40af34:	lea    rax,[rip+0x6585]        # 4114c0 <show_index@@Base>
  40af3b:	mov    DWORD PTR [rax],0x0
  40af41:	lea    rax,[rip+0x6718]        # 411660 <show_label@@Base>
  40af48:	mov    DWORD PTR [rax],0x0
  40af4e:	lea    rax,[rip+0x670f]        # 411664 <show_quotes@@Base>
  40af55:	mov    DWORD PTR [rax],0x0
  40af5b:	lea    rax,[rip+0x53f6]        # 410358 <show_time_as_string@@Base>
  40af62:	mov    DWORD PTR [rax],0x0
  40af68:	sub    ebx,r12d
  40af6b:	jle    40b817 <main@@Base+0x10d7>
  40af71:	lea    r12,[r14+r15*8]
  40af75:	add    r12,0x8
  40af79:	lea    eax,[rbx-0x1]
  40af7c:	mov    DWORD PTR [rsp+0x8],eax
  40af80:	mov    ebp,0x1
  40af85:	xor    r15d,r15d
  40af88:	mov    DWORD PTR [rsp+0x4],0x1
  40af90:	jmp    40b4f0 <main@@Base+0xdb0>
  40af95:	mov    rdi,QWORD PTR [r14+0x10]
  40af99:	call   4031f0 <coda_set_definition_path@plt>
  40af9e:	mov    r12d,0x3
  40afa4:	jmp    40a7f7 <main@@Base+0xb7>
  40afa9:	lea    rax,[rip+0x6514]        # 4114c4 <run_mode@@Base>
  40afb0:	mov    DWORD PTR [rax],0x3
  40afb6:	add    r12d,0x1
  40afba:	lea    rax,[rip+0x53a7]        # 410368 <traverse_info@@Base>
  40afc1:	mov    QWORD PTR [rax],0x0
  40afc8:	lea    rax,[rip+0x5381]        # 410350 <output_file_name@@Base>
  40afcf:	mov    QWORD PTR [rax],0x0
  40afd6:	mov    rax,QWORD PTR [rip+0x4ffb]        # 40ffd8 <stdout@GLIBC_2.2.5>
  40afdd:	mov    rax,QWORD PTR [rax]
  40afe0:	lea    rcx,[rip+0x64c1]        # 4114a8 <ascii_output@@Base>
  40afe7:	mov    QWORD PTR [rcx],rax
  40afea:	lea    rax,[rip+0x64d7]        # 4114c8 <starting_path@@Base>
  40aff1:	mov    QWORD PTR [rax],0x0
  40aff8:	sub    ebx,r12d
  40affb:	jle    40b817 <main@@Base+0x10d7>
  40b001:	lea    r14,[r14+r15*8]
  40b005:	add    r14,0x8
  40b009:	lea    eax,[rbx-0x1]
  40b00c:	mov    DWORD PTR [rsp+0x8],eax
  40b010:	mov    DWORD PTR [rsp+0x4],0x1
  40b018:	xor    eax,eax
  40b01a:	mov    QWORD PTR [rsp+0x18],rax
  40b01f:	lea    r15,[rip+0x1de9]        # 40ce0f <_IO_stdin_used@@Base+0xe0f>
  40b026:	xor    r12d,r12d
  40b029:	xor    ebp,ebp
  40b02b:	mov    DWORD PTR [rsp+0x10],0x1
  40b033:	jmp    40b060 <main@@Base+0x920>
  40b035:	mov    DWORD PTR [rsp+0x10],0x0
  40b03d:	jmp    40b198 <main@@Base+0xa58>
  40b042:	lea    rdx,[rip+0x5307]        # 410350 <output_file_name@@Base>
  40b049:	mov    QWORD PTR [rdx],rcx
  40b04c:	jmp    40b19b <main@@Base+0xa5b>
  40b051:	lea    rdx,[rip+0x6470]        # 4114c8 <starting_path@@Base>
  40b058:	mov    QWORD PTR [rdx],rcx
  40b05b:	jmp    40b19b <main@@Base+0xa5b>
  40b060:	movsxd rax,r12d
  40b063:	mov    r13,QWORD PTR [r14+rax*8]
  40b067:	mov    rdi,r13
  40b06a:	mov    rsi,r15
  40b06d:	call   4032f0 <strcmp@plt>
  40b072:	test   eax,eax
  40b074:	je     40b180 <main@@Base+0xa40>
  40b07a:	mov    rdi,r13
  40b07d:	lea    rsi,[rip+0x1d8e]        # 40ce12 <_IO_stdin_used@@Base+0xe12>
  40b084:	call   4032f0 <strcmp@plt>
  40b089:	test   eax,eax
  40b08b:	je     40b180 <main@@Base+0xa40>
  40b091:	mov    rdi,r13
  40b094:	lea    rsi,[rip+0x1c5c]        # 40ccf7 <_IO_stdin_used@@Base+0xcf7>
  40b09b:	call   4032f0 <strcmp@plt>
  40b0a0:	test   eax,eax
  40b0a2:	je     40b190 <main@@Base+0xa50>
  40b0a8:	mov    rdi,r13
  40b0ab:	lea    rsi,[rip+0x1c48]        # 40ccfa <_IO_stdin_used@@Base+0xcfa>
  40b0b2:	call   4032f0 <strcmp@plt>
  40b0b7:	test   eax,eax
  40b0b9:	je     40b190 <main@@Base+0xa50>
  40b0bf:	mov    rdi,r13
  40b0c2:	lea    rsi,[rip+0x1cd4]        # 40cd9d <_IO_stdin_used@@Base+0xd9d>
  40b0c9:	call   4032f0 <strcmp@plt>
  40b0ce:	test   eax,eax
  40b0d0:	je     40b0e5 <main@@Base+0x9a5>
  40b0d2:	mov    rdi,r13
  40b0d5:	lea    rsi,[rip+0x1cc4]        # 40cda0 <_IO_stdin_used@@Base+0xda0>
  40b0dc:	call   4032f0 <strcmp@plt>
  40b0e1:	test   eax,eax
  40b0e3:	jne    40b0fe <main@@Base+0x9be>
  40b0e5:	lea    eax,[r12+0x1]
  40b0ea:	cmp    eax,ebx
  40b0ec:	jge    40b0fe <main@@Base+0x9be>
  40b0ee:	movsxd rcx,eax
  40b0f1:	mov    rcx,QWORD PTR [r14+rcx*8]
  40b0f5:	cmp    BYTE PTR [rcx],0x2d
  40b0f8:	jne    40b042 <main@@Base+0x902>
  40b0fe:	mov    rdi,r13
  40b101:	lea    rsi,[rip+0x1d17]        # 40ce1f <_IO_stdin_used@@Base+0xe1f>
  40b108:	call   4032f0 <strcmp@plt>
  40b10d:	test   eax,eax
  40b10f:	je     40b124 <main@@Base+0x9e4>
  40b111:	mov    rdi,r13
  40b114:	lea    rsi,[rip+0x1d07]        # 40ce22 <_IO_stdin_used@@Base+0xe22>
  40b11b:	call   4032f0 <strcmp@plt>
  40b120:	test   eax,eax
  40b122:	jne    40b13d <main@@Base+0x9fd>
  40b124:	lea    eax,[r12+0x1]
  40b129:	cmp    eax,ebx
  40b12b:	jge    40b13d <main@@Base+0x9fd>
  40b12d:	movsxd rcx,eax
  40b130:	mov    rcx,QWORD PTR [r14+rcx*8]
  40b134:	cmp    BYTE PTR [rcx],0x2d
  40b137:	jne    40b051 <main@@Base+0x911>
  40b13d:	mov    rdi,r13
  40b140:	lea    rsi,[rip+0x1c2d]        # 40cd74 <_IO_stdin_used@@Base+0xd74>
  40b147:	call   4032f0 <strcmp@plt>
  40b14c:	test   eax,eax
  40b14e:	je     40b035 <main@@Base+0x8f5>
  40b154:	cmp    r12d,DWORD PTR [rsp+0x8]
  40b159:	jne    40b817 <main@@Base+0x10d7>
  40b15f:	cmp    BYTE PTR [r13+0x0],0x2d
  40b164:	je     40b817 <main@@Base+0x10d7>
  40b16a:	lea    rax,[rip+0x51f7]        # 410368 <traverse_info@@Base>
  40b171:	mov    QWORD PTR [rax],r13
  40b174:	mov    QWORD PTR [rsp+0x18],r13
  40b179:	mov    eax,DWORD PTR [rsp+0x8]
  40b17d:	jmp    40b19b <main@@Base+0xa5b>
  40b17f:	nop
  40b180:	mov    ebp,0x1
  40b185:	jmp    40b198 <main@@Base+0xa58>
  40b187:	nop    WORD PTR [rax+rax*1+0x0]
  40b190:	mov    DWORD PTR [rsp+0x4],0x0
  40b198:	mov    eax,r12d
  40b19b:	add    eax,0x1
  40b19e:	mov    r12d,eax
  40b1a1:	cmp    eax,ebx
  40b1a3:	jl     40b060 <main@@Base+0x920>
  40b1a9:	mov    rax,QWORD PTR [rsp+0x18]
  40b1ae:	test   rax,rax
  40b1b1:	je     40b817 <main@@Base+0x10d7>
  40b1b7:	cmp    BYTE PTR [rax],0x0
  40b1ba:	je     40b817 <main@@Base+0x10d7>
  40b1c0:	call   4033d0 <coda_init@plt>
  40b1c5:	test   eax,eax
  40b1c7:	jne    40b85e <main@@Base+0x111e>
  40b1cd:	xor    edi,edi
  40b1cf:	cmp    DWORD PTR [rsp+0x10],0x0
  40b1d4:	sete   dil
  40b1d8:	call   403160 <coda_set_option_bypass_special_types@plt>
  40b1dd:	mov    edi,DWORD PTR [rsp+0x4]
  40b1e1:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40b1e6:	lea    rbx,[rip+0x5163]        # 410350 <output_file_name@@Base>
  40b1ed:	mov    rdi,QWORD PTR [rbx]
  40b1f0:	test   rdi,rdi
  40b1f3:	lea    r14,[rip+0x62ae]        # 4114a8 <ascii_output@@Base>
  40b1fa:	je     40b214 <main@@Base+0xad4>
  40b1fc:	lea    rsi,[rip+0x1be0]        # 40cde3 <_IO_stdin_used@@Base+0xde3>
  40b203:	call   403510 <fopen@plt>
  40b208:	mov    QWORD PTR [r14],rax
  40b20b:	test   rax,rax
  40b20e:	je     40b8ad <main@@Base+0x116d>
  40b214:	mov    edi,ebp
  40b216:	call   407a40 <print_json_data@@Base>
  40b21b:	cmp    QWORD PTR [rbx],0x0
  40b21f:	jne    40b4b5 <main@@Base+0xd75>
  40b225:	jmp    40b801 <main@@Base+0x10c1>
  40b22a:	lea    rax,[rip+0x6293]        # 4114c4 <run_mode@@Base>
  40b231:	mov    DWORD PTR [rax],0x4
  40b237:	add    r12d,0x1
  40b23b:	lea    rax,[rip+0x5126]        # 410368 <traverse_info@@Base>
  40b242:	mov    QWORD PTR [rax],0x0
  40b249:	lea    rax,[rip+0x5100]        # 410350 <output_file_name@@Base>
  40b250:	mov    QWORD PTR [rax],0x0
  40b257:	mov    rax,QWORD PTR [rip+0x4d7a]        # 40ffd8 <stdout@GLIBC_2.2.5>
  40b25e:	mov    rax,QWORD PTR [rax]
  40b261:	lea    rcx,[rip+0x6240]        # 4114a8 <ascii_output@@Base>
  40b268:	mov    QWORD PTR [rcx],rax
  40b26b:	lea    rax,[rip+0x6256]        # 4114c8 <starting_path@@Base>
  40b272:	mov    QWORD PTR [rax],0x0
  40b279:	sub    ebx,r12d
  40b27c:	jle    40b817 <main@@Base+0x10d7>
  40b282:	lea    r14,[r14+r15*8]
  40b286:	add    r14,0x8
  40b28a:	lea    eax,[rbx-0x1]
  40b28d:	mov    DWORD PTR [rsp+0x8],eax
  40b291:	mov    DWORD PTR [rsp+0x4],0x1
  40b299:	xor    eax,eax
  40b29b:	mov    QWORD PTR [rsp+0x18],rax
  40b2a0:	lea    r15,[rip+0x1b68]        # 40ce0f <_IO_stdin_used@@Base+0xe0f>
  40b2a7:	xor    r12d,r12d
  40b2aa:	xor    ebp,ebp
  40b2ac:	mov    DWORD PTR [rsp+0x10],0x1
  40b2b4:	jmp    40b2f0 <main@@Base+0xbb0>
  40b2b6:	mov    DWORD PTR [rsp+0x10],0x0
  40b2be:	jmp    40b428 <main@@Base+0xce8>
  40b2c3:	lea    rdx,[rip+0x5086]        # 410350 <output_file_name@@Base>
  40b2ca:	mov    QWORD PTR [rdx],rcx
  40b2cd:	jmp    40b42b <main@@Base+0xceb>
  40b2d2:	lea    rdx,[rip+0x61ef]        # 4114c8 <starting_path@@Base>
  40b2d9:	mov    QWORD PTR [rdx],rcx
  40b2dc:	jmp    40b42b <main@@Base+0xceb>
  40b2e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40b2f0:	movsxd rax,r12d
  40b2f3:	mov    r13,QWORD PTR [r14+rax*8]
  40b2f7:	mov    rdi,r13
  40b2fa:	mov    rsi,r15
  40b2fd:	call   4032f0 <strcmp@plt>
  40b302:	test   eax,eax
  40b304:	je     40b410 <main@@Base+0xcd0>
  40b30a:	mov    rdi,r13
  40b30d:	lea    rsi,[rip+0x1afe]        # 40ce12 <_IO_stdin_used@@Base+0xe12>
  40b314:	call   4032f0 <strcmp@plt>
  40b319:	test   eax,eax
  40b31b:	je     40b410 <main@@Base+0xcd0>
  40b321:	mov    rdi,r13
  40b324:	lea    rsi,[rip+0x19cc]        # 40ccf7 <_IO_stdin_used@@Base+0xcf7>
  40b32b:	call   4032f0 <strcmp@plt>
  40b330:	test   eax,eax
  40b332:	je     40b420 <main@@Base+0xce0>
  40b338:	mov    rdi,r13
  40b33b:	lea    rsi,[rip+0x19b8]        # 40ccfa <_IO_stdin_used@@Base+0xcfa>
  40b342:	call   4032f0 <strcmp@plt>
  40b347:	test   eax,eax
  40b349:	je     40b420 <main@@Base+0xce0>
  40b34f:	mov    rdi,r13
  40b352:	lea    rsi,[rip+0x1a44]        # 40cd9d <_IO_stdin_used@@Base+0xd9d>
  40b359:	call   4032f0 <strcmp@plt>
  40b35e:	test   eax,eax
  40b360:	je     40b375 <main@@Base+0xc35>
  40b362:	mov    rdi,r13
  40b365:	lea    rsi,[rip+0x1a34]        # 40cda0 <_IO_stdin_used@@Base+0xda0>
  40b36c:	call   4032f0 <strcmp@plt>
  40b371:	test   eax,eax
  40b373:	jne    40b38e <main@@Base+0xc4e>
  40b375:	lea    eax,[r12+0x1]
  40b37a:	cmp    eax,ebx
  40b37c:	jge    40b38e <main@@Base+0xc4e>
  40b37e:	movsxd rcx,eax
  40b381:	mov    rcx,QWORD PTR [r14+rcx*8]
  40b385:	cmp    BYTE PTR [rcx],0x2d
  40b388:	jne    40b2c3 <main@@Base+0xb83>
  40b38e:	mov    rdi,r13
  40b391:	lea    rsi,[rip+0x1a87]        # 40ce1f <_IO_stdin_used@@Base+0xe1f>
  40b398:	call   4032f0 <strcmp@plt>
  40b39d:	test   eax,eax
  40b39f:	je     40b3b4 <main@@Base+0xc74>
  40b3a1:	mov    rdi,r13
  40b3a4:	lea    rsi,[rip+0x1a77]        # 40ce22 <_IO_stdin_used@@Base+0xe22>
  40b3ab:	call   4032f0 <strcmp@plt>
  40b3b0:	test   eax,eax
  40b3b2:	jne    40b3cd <main@@Base+0xc8d>
  40b3b4:	lea    eax,[r12+0x1]
  40b3b9:	cmp    eax,ebx
  40b3bb:	jge    40b3cd <main@@Base+0xc8d>
  40b3bd:	movsxd rcx,eax
  40b3c0:	mov    rcx,QWORD PTR [r14+rcx*8]
  40b3c4:	cmp    BYTE PTR [rcx],0x2d
  40b3c7:	jne    40b2d2 <main@@Base+0xb92>
  40b3cd:	mov    rdi,r13
  40b3d0:	lea    rsi,[rip+0x199d]        # 40cd74 <_IO_stdin_used@@Base+0xd74>
  40b3d7:	call   4032f0 <strcmp@plt>
  40b3dc:	test   eax,eax
  40b3de:	je     40b2b6 <main@@Base+0xb76>
  40b3e4:	cmp    r12d,DWORD PTR [rsp+0x8]
  40b3e9:	jne    40b817 <main@@Base+0x10d7>
  40b3ef:	cmp    BYTE PTR [r13+0x0],0x2d
  40b3f4:	je     40b817 <main@@Base+0x10d7>
  40b3fa:	lea    rax,[rip+0x4f67]        # 410368 <traverse_info@@Base>
  40b401:	mov    QWORD PTR [rax],r13
  40b404:	mov    QWORD PTR [rsp+0x18],r13
  40b409:	mov    eax,DWORD PTR [rsp+0x8]
  40b40d:	jmp    40b42b <main@@Base+0xceb>
  40b40f:	nop
  40b410:	mov    ebp,0x1
  40b415:	jmp    40b428 <main@@Base+0xce8>
  40b417:	nop    WORD PTR [rax+rax*1+0x0]
  40b420:	mov    DWORD PTR [rsp+0x4],0x0
  40b428:	mov    eax,r12d
  40b42b:	add    eax,0x1
  40b42e:	mov    r12d,eax
  40b431:	cmp    eax,ebx
  40b433:	jl     40b2f0 <main@@Base+0xbb0>
  40b439:	mov    rax,QWORD PTR [rsp+0x18]
  40b43e:	test   rax,rax
  40b441:	je     40b817 <main@@Base+0x10d7>
  40b447:	cmp    BYTE PTR [rax],0x0
  40b44a:	je     40b817 <main@@Base+0x10d7>
  40b450:	call   4033d0 <coda_init@plt>
  40b455:	test   eax,eax
  40b457:	jne    40b85e <main@@Base+0x111e>
  40b45d:	xor    edi,edi
  40b45f:	cmp    DWORD PTR [rsp+0x10],0x0
  40b464:	sete   dil
  40b468:	call   403160 <coda_set_option_bypass_special_types@plt>
  40b46d:	mov    edi,DWORD PTR [rsp+0x4]
  40b471:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40b476:	lea    rbx,[rip+0x4ed3]        # 410350 <output_file_name@@Base>
  40b47d:	mov    rdi,QWORD PTR [rbx]
  40b480:	test   rdi,rdi
  40b483:	lea    r14,[rip+0x601e]        # 4114a8 <ascii_output@@Base>
  40b48a:	je     40b4a4 <main@@Base+0xd64>
  40b48c:	lea    rsi,[rip+0x1950]        # 40cde3 <_IO_stdin_used@@Base+0xde3>
  40b493:	call   403510 <fopen@plt>
  40b498:	mov    QWORD PTR [r14],rax
  40b49b:	test   rax,rax
  40b49e:	je     40b8ad <main@@Base+0x116d>
  40b4a4:	mov    edi,ebp
  40b4a6:	call   409540 <print_yaml_data@@Base>
  40b4ab:	cmp    QWORD PTR [rbx],0x0
  40b4af:	je     40b801 <main@@Base+0x10c1>
  40b4b5:	mov    rdi,QWORD PTR [r14]
  40b4b8:	call   4031c0 <fclose@plt>
  40b4bd:	jmp    40b801 <main@@Base+0x10c1>
  40b4c2:	lea    rcx,[rip+0x4e87]        # 410350 <output_file_name@@Base>
  40b4c9:	mov    QWORD PTR [rcx],rax
  40b4cc:	jmp    40b749 <main@@Base+0x1009>
  40b4d1:	lea    rcx,[rip+0x5fd8]        # 4114b0 <ascii_col_sep@@Base>
  40b4d8:	mov    QWORD PTR [rcx],rax
  40b4db:	jmp    40b749 <main@@Base+0x1009>
  40b4e0:	mov    DWORD PTR [rsp+0x4],0x0
  40b4e8:	jmp    40b746 <main@@Base+0x1006>
  40b4ed:	nop    DWORD PTR [rax]
  40b4f0:	movsxd rax,r15d
  40b4f3:	mov    r13,QWORD PTR [r12+rax*8]
  40b4f7:	mov    rdi,r13
  40b4fa:	lea    rsi,[rip+0x17f6]        # 40ccf7 <_IO_stdin_used@@Base+0xcf7>
  40b501:	call   4032f0 <strcmp@plt>
  40b506:	test   eax,eax
  40b508:	je     40b6f0 <main@@Base+0xfb0>
  40b50e:	mov    rdi,r13
  40b511:	lea    rsi,[rip+0x17e2]        # 40ccfa <_IO_stdin_used@@Base+0xcfa>
  40b518:	call   4032f0 <strcmp@plt>
  40b51d:	test   eax,eax
  40b51f:	je     40b6f0 <main@@Base+0xfb0>
  40b525:	mov    rdi,r13
  40b528:	lea    rsi,[rip+0x17e1]        # 40cd10 <_IO_stdin_used@@Base+0xd10>
  40b52f:	call   4032f0 <strcmp@plt>
  40b534:	test   eax,eax
  40b536:	je     40b54b <main@@Base+0xe0b>
  40b538:	mov    rdi,r13
  40b53b:	lea    rsi,[rip+0x17d1]        # 40cd13 <_IO_stdin_used@@Base+0xd13>
  40b542:	call   4032f0 <strcmp@plt>
  40b547:	test   eax,eax
  40b549:	jne    40b570 <main@@Base+0xe30>
  40b54b:	lea    r14d,[r15+0x1]
  40b54f:	cmp    r14d,ebx
  40b552:	jge    40b570 <main@@Base+0xe30>
  40b554:	movsxd rax,r14d
  40b557:	mov    rdi,QWORD PTR [r12+rax*8]
  40b55b:	cmp    BYTE PTR [rdi],0x2d
  40b55e:	jne    40b712 <main@@Base+0xfd2>
  40b564:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b56e:	xchg   ax,ax
  40b570:	mov    rdi,r13
  40b573:	lea    rsi,[rip+0x180d]        # 40cd87 <_IO_stdin_used@@Base+0xd87>
  40b57a:	call   4032f0 <strcmp@plt>
  40b57f:	test   eax,eax
  40b581:	je     40b700 <main@@Base+0xfc0>
  40b587:	mov    rdi,r13
  40b58a:	lea    rsi,[rip+0x17f9]        # 40cd8a <_IO_stdin_used@@Base+0xd8a>
  40b591:	call   4032f0 <strcmp@plt>
  40b596:	test   eax,eax
  40b598:	je     40b700 <main@@Base+0xfc0>
  40b59e:	mov    rdi,r13
  40b5a1:	lea    rsi,[rip+0x17ea]        # 40cd92 <_IO_stdin_used@@Base+0xd92>
  40b5a8:	call   4032f0 <strcmp@plt>
  40b5ad:	test   eax,eax
  40b5af:	je     40b709 <main@@Base+0xfc9>
  40b5b5:	mov    rdi,r13
  40b5b8:	lea    rsi,[rip+0x17d6]        # 40cd95 <_IO_stdin_used@@Base+0xd95>
  40b5bf:	call   4032f0 <strcmp@plt>
  40b5c4:	test   eax,eax
  40b5c6:	je     40b709 <main@@Base+0xfc9>
  40b5cc:	mov    rdi,r13
  40b5cf:	lea    rsi,[rip+0x17c7]        # 40cd9d <_IO_stdin_used@@Base+0xd9d>
  40b5d6:	call   4032f0 <strcmp@plt>
  40b5db:	test   eax,eax
  40b5dd:	je     40b5f2 <main@@Base+0xeb2>
  40b5df:	mov    rdi,r13
  40b5e2:	lea    rsi,[rip+0x17b7]        # 40cda0 <_IO_stdin_used@@Base+0xda0>
  40b5e9:	call   4032f0 <strcmp@plt>
  40b5ee:	test   eax,eax
  40b5f0:	jne    40b60b <main@@Base+0xecb>
  40b5f2:	lea    r14d,[r15+0x1]
  40b5f6:	cmp    r14d,ebx
  40b5f9:	jge    40b60b <main@@Base+0xecb>
  40b5fb:	movsxd rax,r14d
  40b5fe:	mov    rax,QWORD PTR [r12+rax*8]
  40b602:	cmp    BYTE PTR [rax],0x2d
  40b605:	jne    40b4c2 <main@@Base+0xd82>
  40b60b:	mov    rdi,r13
  40b60e:	lea    rsi,[rip+0x1794]        # 40cda9 <_IO_stdin_used@@Base+0xda9>
  40b615:	call   4032f0 <strcmp@plt>
  40b61a:	test   eax,eax
  40b61c:	je     40b72f <main@@Base+0xfef>
  40b622:	mov    rdi,r13
  40b625:	lea    rsi,[rip+0x1780]        # 40cdac <_IO_stdin_used@@Base+0xdac>
  40b62c:	call   4032f0 <strcmp@plt>
  40b631:	test   eax,eax
  40b633:	je     40b72f <main@@Base+0xfef>
  40b639:	mov    rdi,r13
  40b63c:	lea    rsi,[rip+0x1779]        # 40cdbc <_IO_stdin_used@@Base+0xdbc>
  40b643:	call   4032f0 <strcmp@plt>
  40b648:	test   eax,eax
  40b64a:	je     40b65f <main@@Base+0xf1f>
  40b64c:	mov    rdi,r13
  40b64f:	lea    rsi,[rip+0x1769]        # 40cdbf <_IO_stdin_used@@Base+0xdbf>
  40b656:	call   4032f0 <strcmp@plt>
  40b65b:	test   eax,eax
  40b65d:	jne    40b678 <main@@Base+0xf38>
  40b65f:	lea    r14d,[r15+0x1]
  40b663:	cmp    r14d,ebx
  40b666:	jge    40b678 <main@@Base+0xf38>
  40b668:	movsxd rax,r14d
  40b66b:	mov    rax,QWORD PTR [r12+rax*8]
  40b66f:	cmp    BYTE PTR [rax],0x2d
  40b672:	jne    40b4d1 <main@@Base+0xd91>
  40b678:	mov    rdi,r13
  40b67b:	lea    rsi,[rip+0x16c3]        # 40cd45 <_IO_stdin_used@@Base+0xd45>
  40b682:	call   4032f0 <strcmp@plt>
  40b687:	test   eax,eax
  40b689:	je     40b738 <main@@Base+0xff8>
  40b68f:	mov    rdi,r13
  40b692:	lea    rsi,[rip+0x1739]        # 40cdd2 <_IO_stdin_used@@Base+0xdd2>
  40b699:	call   4032f0 <strcmp@plt>
  40b69e:	test   eax,eax
  40b6a0:	je     40b738 <main@@Base+0xff8>
  40b6a6:	mov    rdi,r13
  40b6a9:	lea    rsi,[rip+0x16c4]        # 40cd74 <_IO_stdin_used@@Base+0xd74>
  40b6b0:	call   4032f0 <strcmp@plt>
  40b6b5:	test   eax,eax
  40b6b7:	je     40b4e0 <main@@Base+0xda0>
  40b6bd:	cmp    r15d,DWORD PTR [rsp+0x8]
  40b6c2:	jne    40b817 <main@@Base+0x10d7>
  40b6c8:	cmp    BYTE PTR [r13+0x0],0x2d
  40b6cd:	je     40b817 <main@@Base+0x10d7>
  40b6d3:	lea    rax,[rip+0x4c8e]        # 410368 <traverse_info@@Base>
  40b6da:	mov    QWORD PTR [rax],r13
  40b6dd:	mov    r14d,DWORD PTR [rsp+0x8]
  40b6e2:	jmp    40b749 <main@@Base+0x1009>
  40b6e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b6ee:	xchg   ax,ax
  40b6f0:	xor    ebp,ebp
  40b6f2:	jmp    40b746 <main@@Base+0x1006>
  40b6f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b6fe:	xchg   ax,ax
  40b700:	lea    rax,[rip+0x5db9]        # 4114c0 <show_index@@Base>
  40b707:	jmp    40b740 <main@@Base+0x1000>
  40b709:	lea    rax,[rip+0x5f50]        # 411660 <show_label@@Base>
  40b710:	jmp    40b740 <main@@Base+0x1000>
  40b712:	call   407560 <codadump_filter_create@@Base>
  40b717:	lea    rcx,[rip+0x4c4a]        # 410368 <traverse_info@@Base>
  40b71e:	mov    QWORD PTR [rcx+0x428],rax
  40b725:	test   rax,rax
  40b728:	jne    40b749 <main@@Base+0x1009>
  40b72a:	jmp    40b895 <main@@Base+0x1155>
  40b72f:	lea    rax,[rip+0x5f2e]        # 411664 <show_quotes@@Base>
  40b736:	jmp    40b740 <main@@Base+0x1000>
  40b738:	lea    rax,[rip+0x4c19]        # 410358 <show_time_as_string@@Base>
  40b73f:	nop
  40b740:	mov    DWORD PTR [rax],0x1
  40b746:	mov    r14d,r15d
  40b749:	add    r14d,0x1
  40b74d:	mov    r15d,r14d
  40b750:	cmp    r14d,ebx
  40b753:	jl     40b4f0 <main@@Base+0xdb0>
  40b759:	lea    rax,[rip+0x4c08]        # 410368 <traverse_info@@Base>
  40b760:	mov    rax,QWORD PTR [rax]
  40b763:	test   rax,rax
  40b766:	je     40b817 <main@@Base+0x10d7>
  40b76c:	cmp    BYTE PTR [rax],0x0
  40b76f:	je     40b817 <main@@Base+0x10d7>
  40b775:	call   4033d0 <coda_init@plt>
  40b77a:	test   eax,eax
  40b77c:	jne    40b85e <main@@Base+0x111e>
  40b782:	xor    edi,edi
  40b784:	cmp    DWORD PTR [rsp+0x4],0x0
  40b789:	sete   dil
  40b78d:	call   403160 <coda_set_option_bypass_special_types@plt>
  40b792:	xor    edi,edi
  40b794:	call   403090 <coda_set_option_perform_boundary_checks@plt>
  40b799:	mov    edi,ebp
  40b79b:	call   4033e0 <coda_set_option_perform_conversions@plt>
  40b7a0:	xor    eax,eax
  40b7a2:	call   408d80 <traverse_info_init@@Base>
  40b7a7:	xor    eax,eax
  40b7a9:	call   405740 <dim_info_init@@Base>
  40b7ae:	lea    rbx,[rip+0x4b9b]        # 410350 <output_file_name@@Base>
  40b7b5:	mov    rdi,QWORD PTR [rbx]
  40b7b8:	test   rdi,rdi
  40b7bb:	lea    rbp,[rip+0x5ce6]        # 4114a8 <ascii_output@@Base>
  40b7c2:	je     40b7dd <main@@Base+0x109d>
  40b7c4:	lea    rsi,[rip+0x1618]        # 40cde3 <_IO_stdin_used@@Base+0xde3>
  40b7cb:	call   403510 <fopen@plt>
  40b7d0:	mov    QWORD PTR [rbp+0x0],rax
  40b7d4:	test   rax,rax
  40b7d7:	je     40b8ad <main@@Base+0x116d>
  40b7dd:	xor    eax,eax
  40b7df:	call   408df0 <traverse_product@@Base>
  40b7e4:	cmp    QWORD PTR [rbx],0x0
  40b7e8:	je     40b7f3 <main@@Base+0x10b3>
  40b7ea:	mov    rdi,QWORD PTR [rbp+0x0]
  40b7ee:	call   4031c0 <fclose@plt>
  40b7f3:	xor    eax,eax
  40b7f5:	call   405760 <dim_info_done@@Base>
  40b7fa:	xor    eax,eax
  40b7fc:	call   408db0 <traverse_info_done@@Base>
  40b801:	call   4032d0 <coda_done@plt>
  40b806:	xor    eax,eax
  40b808:	add    rsp,0x28
  40b80c:	pop    rbx
  40b80d:	pop    r12
  40b80f:	pop    r13
  40b811:	pop    r14
  40b813:	pop    r15
  40b815:	pop    rbp
  40b816:	ret    
  40b817:	mov    rax,QWORD PTR [rip+0x47da]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b81e:	mov    rcx,QWORD PTR [rax]
  40b821:	lea    rdi,[rip+0x1492]        # 40ccba <_IO_stdin_used@@Base+0xcba>
  40b828:	mov    esi,0x19
  40b82d:	mov    edx,0x1
  40b832:	call   4035a0 <fwrite@plt>
  40b837:	call   40b8e0 <main@@Base+0x11a0>
  40b83c:	mov    edi,0x1
  40b841:	call   403580 <exit@plt>
  40b846:	call   40b8e0 <main@@Base+0x11a0>
  40b84b:	xor    edi,edi
  40b84d:	call   403580 <exit@plt>
  40b852:	call   40be60 <main@@Base+0x1720>
  40b857:	xor    edi,edi
  40b859:	call   403580 <exit@plt>
  40b85e:	mov    rax,QWORD PTR [rip+0x4793]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b865:	mov    rbx,QWORD PTR [rax]
  40b868:	call   4035d0 <coda_get_errno@plt>
  40b86d:	mov    edi,DWORD PTR [rax]
  40b86f:	call   403550 <coda_errno_to_string@plt>
  40b874:	mov    rcx,rax
  40b877:	lea    rsi,[rip+0x13e2]        # 40cc60 <_IO_stdin_used@@Base+0xc60>
  40b87e:	xor    eax,eax
  40b880:	mov    rdi,rbx
  40b883:	mov    rdx,rcx
  40b886:	call   403300 <fprintf@plt>
  40b88b:	mov    edi,0x1
  40b890:	call   403580 <exit@plt>
  40b895:	mov    rax,QWORD PTR [rip+0x475c]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b89c:	mov    rcx,QWORD PTR [rax]
  40b89f:	lea    rdi,[rip+0x1476]        # 40cd1c <_IO_stdin_used@@Base+0xd1c>
  40b8a6:	mov    esi,0x28
  40b8ab:	jmp    40b82d <main@@Base+0x10ed>
  40b8ad:	mov    rax,QWORD PTR [rip+0x4744]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b8b4:	mov    rdi,QWORD PTR [rax]
  40b8b7:	mov    rdx,QWORD PTR [rbx]
  40b8ba:	jmp    40b8d0 <main@@Base+0x1190>
  40b8bc:	mov    rax,QWORD PTR [rip+0x4735]        # 40fff8 <stderr@GLIBC_2.2.5>
  40b8c3:	mov    rdi,QWORD PTR [rax]
  40b8c6:	lea    rax,[rip+0x4a83]        # 410350 <output_file_name@@Base>
  40b8cd:	mov    rdx,QWORD PTR [rax]
  40b8d0:	lea    rsi,[rip+0x150e]        # 40cde5 <_IO_stdin_used@@Base+0xde5>
  40b8d7:	xor    eax,eax
  40b8d9:	jmp    40b886 <main@@Base+0x1146>
  40b8db:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8e0:	push   rbp
  40b8e1:	push   r15
  40b8e3:	push   r14
  40b8e5:	push   r13
  40b8e7:	push   r12
  40b8e9:	push   rbx
  40b8ea:	push   rax
  40b8eb:	lea    rdi,[rip+0x156d]        # 40ce5f <_IO_stdin_used@@Base+0xe5f>
  40b8f2:	call   403100 <puts@plt>
  40b8f7:	lea    rdi,[rip+0x1572]        # 40ce70 <_IO_stdin_used@@Base+0xe70>
  40b8fe:	call   403100 <puts@plt>
  40b903:	lea    rdi,[rip+0x15b6]        # 40cec0 <_IO_stdin_used@@Base+0xec0>
  40b90a:	call   403100 <puts@plt>
  40b90f:	lea    r13,[rip+0x186a]        # 40d180 <_IO_stdin_used@@Base+0x1180>
  40b916:	mov    rdi,r13
  40b919:	call   403100 <puts@plt>
  40b91e:	lea    rdi,[rip+0x15cb]        # 40cef0 <_IO_stdin_used@@Base+0xef0>
  40b925:	call   403100 <puts@plt>
  40b92a:	lea    rdi,[rip+0x15df]        # 40cf10 <_IO_stdin_used@@Base+0xf10>
  40b931:	call   403100 <puts@plt>
  40b936:	lea    r15,[rip+0x1dd3]        # 40d710 <_IO_stdin_used@@Base+0x1710>
  40b93d:	mov    rdi,r15
  40b940:	call   403100 <puts@plt>
  40b945:	lea    r12,[rip+0x1df4]        # 40d740 <_IO_stdin_used@@Base+0x1740>
  40b94c:	mov    rdi,r12
  40b94f:	call   403100 <puts@plt>
  40b954:	lea    rbp,[rip+0x1845]        # 40d1a0 <_IO_stdin_used@@Base+0x11a0>
  40b95b:	mov    rdi,rbp
  40b95e:	call   403100 <puts@plt>
  40b963:	lea    rbx,[rip+0x1866]        # 40d1d0 <_IO_stdin_used@@Base+0x11d0>
  40b96a:	mov    rdi,rbx
  40b96d:	call   403100 <puts@plt>
  40b972:	lea    rdi,[rip+0x15d7]        # 40cf50 <_IO_stdin_used@@Base+0xf50>
  40b979:	call   403100 <puts@plt>
  40b97e:	lea    rdi,[rip+0x15eb]        # 40cf70 <_IO_stdin_used@@Base+0xf70>
  40b985:	call   403100 <puts@plt>
  40b98a:	lea    rdi,[rip+0x160f]        # 40cfa0 <_IO_stdin_used@@Base+0xfa0>
  40b991:	call   403100 <puts@plt>
  40b996:	lea    rdi,[rip+0x1623]        # 40cfc0 <_IO_stdin_used@@Base+0xfc0>
  40b99d:	call   403100 <puts@plt>
  40b9a2:	lea    rdi,[rip+0x1647]        # 40cff0 <_IO_stdin_used@@Base+0xff0>
  40b9a9:	call   403100 <puts@plt>
  40b9ae:	lea    rdi,[rip+0x165b]        # 40d010 <_IO_stdin_used@@Base+0x1010>
  40b9b5:	call   403100 <puts@plt>
  40b9ba:	lea    rdi,[rip+0x168f]        # 40d050 <_IO_stdin_used@@Base+0x1050>
  40b9c1:	call   403100 <puts@plt>
  40b9c6:	lea    rdi,[rip+0x16a3]        # 40d070 <_IO_stdin_used@@Base+0x1070>
  40b9cd:	call   403100 <puts@plt>
  40b9d2:	lea    rdi,[rip+0x16e7]        # 40d0c0 <_IO_stdin_used@@Base+0x10c0>
  40b9d9:	call   403100 <puts@plt>
  40b9de:	lea    rdi,[rip+0x1d9b]        # 40d780 <_IO_stdin_used@@Base+0x1780>
  40b9e5:	call   403100 <puts@plt>
  40b9ea:	lea    rdi,[rip+0x1daf]        # 40d7a0 <_IO_stdin_used@@Base+0x17a0>
  40b9f1:	call   403100 <puts@plt>
  40b9f6:	lea    rdi,[rip+0x1df3]        # 40d7f0 <_IO_stdin_used@@Base+0x17f0>
  40b9fd:	call   403100 <puts@plt>
  40ba02:	lea    r14,[rip+0x1e37]        # 40d840 <_IO_stdin_used@@Base+0x1840>
  40ba09:	mov    rdi,r14
  40ba0c:	call   403100 <puts@plt>
  40ba11:	mov    edi,0xa
  40ba16:	call   403080 <putchar@plt>
  40ba1b:	lea    rdi,[rip+0x16ce]        # 40d0f0 <_IO_stdin_used@@Base+0x10f0>
  40ba22:	call   403100 <puts@plt>
  40ba27:	lea    rdi,[rip+0x1712]        # 40d140 <_IO_stdin_used@@Base+0x1140>
  40ba2e:	call   403100 <puts@plt>
  40ba33:	mov    rdi,r13
  40ba36:	call   403100 <puts@plt>
  40ba3b:	mov    rdi,r15
  40ba3e:	call   403100 <puts@plt>
  40ba43:	mov    rdi,r12
  40ba46:	call   403100 <puts@plt>
  40ba4b:	mov    rdi,rbp
  40ba4e:	call   403100 <puts@plt>
  40ba53:	mov    rdi,rbx
  40ba56:	call   403100 <puts@plt>
  40ba5b:	lea    rdi,[rip+0x17be]        # 40d220 <_IO_stdin_used@@Base+0x1220>
  40ba62:	call   403100 <puts@plt>
  40ba67:	lea    rdi,[rip+0x17d2]        # 40d240 <_IO_stdin_used@@Base+0x1240>
  40ba6e:	call   403100 <puts@plt>
  40ba73:	lea    rdi,[rip+0x1816]        # 40d290 <_IO_stdin_used@@Base+0x1290>
  40ba7a:	call   403100 <puts@plt>
  40ba7f:	lea    rdi,[rip+0x182a]        # 40d2b0 <_IO_stdin_used@@Base+0x12b0>
  40ba86:	call   403100 <puts@plt>
  40ba8b:	lea    rdi,[rip+0x1f7e]        # 40da10 <_IO_stdin_used@@Base+0x1a10>
  40ba92:	call   403100 <puts@plt>
  40ba97:	lea    rdi,[rip+0x1fa2]        # 40da40 <_IO_stdin_used@@Base+0x1a40>
  40ba9e:	call   403100 <puts@plt>
  40baa3:	lea    rdi,[rip+0x1856]        # 40d300 <_IO_stdin_used@@Base+0x1300>
  40baaa:	call   403100 <puts@plt>
  40baaf:	lea    rdi,[rip+0x186a]        # 40d320 <_IO_stdin_used@@Base+0x1320>
  40bab6:	call   403100 <puts@plt>
  40babb:	lea    rdi,[rip+0x18ae]        # 40d370 <_IO_stdin_used@@Base+0x1370>
  40bac2:	call   403100 <puts@plt>
  40bac7:	lea    rdi,[rip+0x18e2]        # 40d3b0 <_IO_stdin_used@@Base+0x13b0>
  40bace:	call   403100 <puts@plt>
  40bad3:	lea    rdi,[rip+0x1926]        # 40d400 <_IO_stdin_used@@Base+0x1400>
  40bada:	call   403100 <puts@plt>
  40badf:	lea    rdi,[rip+0x194a]        # 40d430 <_IO_stdin_used@@Base+0x1430>
  40bae6:	call   403100 <puts@plt>
  40baeb:	lea    rdi,[rip+0x1c8e]        # 40d780 <_IO_stdin_used@@Base+0x1780>
  40baf2:	mov    r15,rdi
  40baf5:	call   403100 <puts@plt>
  40bafa:	lea    rdi,[rip+0x1c9f]        # 40d7a0 <_IO_stdin_used@@Base+0x17a0>
  40bb01:	mov    r13,rdi
  40bb04:	call   403100 <puts@plt>
  40bb09:	lea    rdi,[rip+0x1ce0]        # 40d7f0 <_IO_stdin_used@@Base+0x17f0>
  40bb10:	mov    r12,rdi
  40bb13:	call   403100 <puts@plt>
  40bb18:	mov    rdi,r14
  40bb1b:	mov    rbx,r14
  40bb1e:	call   403100 <puts@plt>
  40bb23:	mov    edi,0xa
  40bb28:	call   403080 <putchar@plt>
  40bb2d:	lea    rdi,[rip+0x194c]        # 40d480 <_IO_stdin_used@@Base+0x1480>
  40bb34:	call   403100 <puts@plt>
  40bb39:	lea    rdi,[rip+0x1990]        # 40d4d0 <_IO_stdin_used@@Base+0x14d0>
  40bb40:	call   403100 <puts@plt>
  40bb45:	lea    rdi,[rip+0x19c4]        # 40d510 <_IO_stdin_used@@Base+0x1510>
  40bb4c:	call   403100 <puts@plt>
  40bb51:	lea    rbp,[rip+0x1ad8]        # 40d630 <_IO_stdin_used@@Base+0x1630>
  40bb58:	mov    rdi,rbp
  40bb5b:	call   403100 <puts@plt>
  40bb60:	lea    r14,[rip+0x1ae9]        # 40d650 <_IO_stdin_used@@Base+0x1650>
  40bb67:	mov    rdi,r14
  40bb6a:	call   403100 <puts@plt>
  40bb6f:	lea    rdi,[rip+0x19ba]        # 40d530 <_IO_stdin_used@@Base+0x1530>
  40bb76:	call   403100 <puts@plt>
  40bb7b:	lea    rdi,[rip+0x1b8e]        # 40d710 <_IO_stdin_used@@Base+0x1710>
  40bb82:	call   403100 <puts@plt>
  40bb87:	lea    rdi,[rip+0x1bb2]        # 40d740 <_IO_stdin_used@@Base+0x1740>
  40bb8e:	call   403100 <puts@plt>
  40bb93:	lea    rdi,[rip+0x1e76]        # 40da10 <_IO_stdin_used@@Base+0x1a10>
  40bb9a:	call   403100 <puts@plt>
  40bb9f:	lea    rdi,[rip+0x1e9a]        # 40da40 <_IO_stdin_used@@Base+0x1a40>
  40bba6:	call   403100 <puts@plt>
  40bbab:	lea    rdi,[rip+0x1ece]        # 40da80 <_IO_stdin_used@@Base+0x1a80>
  40bbb2:	call   403100 <puts@plt>
  40bbb7:	lea    rdi,[rip+0x1ee2]        # 40daa0 <_IO_stdin_used@@Base+0x1aa0>
  40bbbe:	call   403100 <puts@plt>
  40bbc3:	lea    rdi,[rip+0x1f26]        # 40daf0 <_IO_stdin_used@@Base+0x1af0>
  40bbca:	call   403100 <puts@plt>
  40bbcf:	mov    rdi,r15
  40bbd2:	call   403100 <puts@plt>
  40bbd7:	mov    rdi,r13
  40bbda:	call   403100 <puts@plt>
  40bbdf:	mov    rdi,r12
  40bbe2:	call   403100 <puts@plt>
  40bbe7:	mov    rdi,rbx
  40bbea:	call   403100 <puts@plt>
  40bbef:	mov    edi,0xa
  40bbf4:	call   403080 <putchar@plt>
  40bbf9:	lea    rdi,[rip+0x1980]        # 40d580 <_IO_stdin_used@@Base+0x1580>
  40bc00:	call   403100 <puts@plt>
  40bc05:	lea    rdi,[rip+0x19c4]        # 40d5d0 <_IO_stdin_used@@Base+0x15d0>
  40bc0c:	call   403100 <puts@plt>
  40bc11:	lea    rdi,[rip+0x19f8]        # 40d610 <_IO_stdin_used@@Base+0x1610>
  40bc18:	call   403100 <puts@plt>
  40bc1d:	mov    rdi,rbp
  40bc20:	call   403100 <puts@plt>
  40bc25:	mov    rdi,r14
  40bc28:	call   403100 <puts@plt>
  40bc2d:	lea    rdi,[rip+0x1a6c]        # 40d6a0 <_IO_stdin_used@@Base+0x16a0>
  40bc34:	call   403100 <puts@plt>
  40bc39:	lea    rdi,[rip+0x1ab0]        # 40d6f0 <_IO_stdin_used@@Base+0x16f0>
  40bc40:	call   403100 <puts@plt>
  40bc45:	lea    rdi,[rip+0x1ac4]        # 40d710 <_IO_stdin_used@@Base+0x1710>
  40bc4c:	call   403100 <puts@plt>
  40bc51:	lea    rdi,[rip+0x1ae8]        # 40d740 <_IO_stdin_used@@Base+0x1740>
  40bc58:	call   403100 <puts@plt>
  40bc5d:	lea    rdi,[rip+0x1dac]        # 40da10 <_IO_stdin_used@@Base+0x1a10>
  40bc64:	call   403100 <puts@plt>
  40bc69:	lea    rdi,[rip+0x1dd0]        # 40da40 <_IO_stdin_used@@Base+0x1a40>
  40bc70:	call   403100 <puts@plt>
  40bc75:	lea    rdi,[rip+0x1e04]        # 40da80 <_IO_stdin_used@@Base+0x1a80>
  40bc7c:	call   403100 <puts@plt>
  40bc81:	lea    rdi,[rip+0x1e18]        # 40daa0 <_IO_stdin_used@@Base+0x1aa0>
  40bc88:	call   403100 <puts@plt>
  40bc8d:	lea    rdi,[rip+0x1e5c]        # 40daf0 <_IO_stdin_used@@Base+0x1af0>
  40bc94:	call   403100 <puts@plt>
  40bc99:	mov    rdi,r15
  40bc9c:	call   403100 <puts@plt>
  40bca1:	mov    rdi,r13
  40bca4:	call   403100 <puts@plt>
  40bca9:	mov    rdi,r12
  40bcac:	call   403100 <puts@plt>
  40bcb1:	mov    rdi,rbx
  40bcb4:	call   403100 <puts@plt>
  40bcb9:	mov    edi,0xa
  40bcbe:	call   403080 <putchar@plt>
  40bcc3:	lea    rdi,[rip+0x1b96]        # 40d860 <_IO_stdin_used@@Base+0x1860>
  40bcca:	call   403100 <puts@plt>
  40bccf:	lea    rdi,[rip+0x1bda]        # 40d8b0 <_IO_stdin_used@@Base+0x18b0>
  40bcd6:	call   403100 <puts@plt>
  40bcdb:	lea    rdi,[rip+0x1c1e]        # 40d900 <_IO_stdin_used@@Base+0x1900>
  40bce2:	call   403100 <puts@plt>
  40bce7:	lea    rdi,[rip+0x1c62]        # 40d950 <_IO_stdin_used@@Base+0x1950>
  40bcee:	call   403100 <puts@plt>
  40bcf3:	lea    rdi,[rip+0x1c86]        # 40d980 <_IO_stdin_used@@Base+0x1980>
  40bcfa:	call   403100 <puts@plt>
  40bcff:	lea    rdi,[rip+0x1c9a]        # 40d9a0 <_IO_stdin_used@@Base+0x19a0>
  40bd06:	call   403100 <puts@plt>
  40bd0b:	lea    rdi,[rip+0x1cbe]        # 40d9d0 <_IO_stdin_used@@Base+0x19d0>
  40bd12:	call   403100 <puts@plt>
  40bd17:	lea    rdi,[rip+0x1cf2]        # 40da10 <_IO_stdin_used@@Base+0x1a10>
  40bd1e:	call   403100 <puts@plt>
  40bd23:	lea    rdi,[rip+0x1d16]        # 40da40 <_IO_stdin_used@@Base+0x1a40>
  40bd2a:	call   403100 <puts@plt>
  40bd2f:	lea    rdi,[rip+0x1d4a]        # 40da80 <_IO_stdin_used@@Base+0x1a80>
  40bd36:	call   403100 <puts@plt>
  40bd3b:	lea    rdi,[rip+0x1d5e]        # 40daa0 <_IO_stdin_used@@Base+0x1aa0>
  40bd42:	call   403100 <puts@plt>
  40bd47:	lea    rdi,[rip+0x1da2]        # 40daf0 <_IO_stdin_used@@Base+0x1af0>
  40bd4e:	call   403100 <puts@plt>
  40bd53:	lea    rdi,[rip+0x1de6]        # 40db40 <_IO_stdin_used@@Base+0x1b40>
  40bd5a:	call   403100 <puts@plt>
  40bd5f:	lea    rdi,[rip+0x1dfa]        # 40db60 <_IO_stdin_used@@Base+0x1b60>
  40bd66:	call   403100 <puts@plt>
  40bd6b:	lea    rdi,[rip+0x1e3e]        # 40dbb0 <_IO_stdin_used@@Base+0x1bb0>
  40bd72:	call   403100 <puts@plt>
  40bd77:	lea    rdi,[rip+0x1e82]        # 40dc00 <_IO_stdin_used@@Base+0x1c00>
  40bd7e:	call   403100 <puts@plt>
  40bd83:	lea    rdi,[rip+0x1eb6]        # 40dc40 <_IO_stdin_used@@Base+0x1c40>
  40bd8a:	call   403100 <puts@plt>
  40bd8f:	lea    rdi,[rip+0x1efa]        # 40dc90 <_IO_stdin_used@@Base+0x1c90>
  40bd96:	call   403100 <puts@plt>
  40bd9b:	mov    edi,0xa
  40bda0:	call   403080 <putchar@plt>
  40bda5:	lea    rdi,[rip+0x1f24]        # 40dcd0 <_IO_stdin_used@@Base+0x1cd0>
  40bdac:	call   403100 <puts@plt>
  40bdb1:	lea    rdi,[rip+0x1f38]        # 40dcf0 <_IO_stdin_used@@Base+0x1cf0>
  40bdb8:	call   403100 <puts@plt>
  40bdbd:	mov    edi,0xa
  40bdc2:	call   403080 <putchar@plt>
  40bdc7:	lea    rdi,[rip+0x1f42]        # 40dd10 <_IO_stdin_used@@Base+0x1d10>
  40bdce:	call   403100 <puts@plt>
  40bdd3:	lea    rdi,[rip+0x1f56]        # 40dd30 <_IO_stdin_used@@Base+0x1d30>
  40bdda:	call   403100 <puts@plt>
  40bddf:	mov    edi,0xa
  40bde4:	call   403080 <putchar@plt>
  40bde9:	lea    rdi,[rip+0x1f80]        # 40dd70 <_IO_stdin_used@@Base+0x1d70>
  40bdf0:	call   403100 <puts@plt>
  40bdf5:	lea    rdi,[rip+0x1fc4]        # 40ddc0 <_IO_stdin_used@@Base+0x1dc0>
  40bdfc:	call   403100 <puts@plt>
  40be01:	lea    rdi,[rip+0x2008]        # 40de10 <_IO_stdin_used@@Base+0x1e10>
  40be08:	call   403100 <puts@plt>
  40be0d:	lea    rdi,[rip+0x202c]        # 40de40 <_IO_stdin_used@@Base+0x1e40>
  40be14:	call   403100 <puts@plt>
  40be19:	lea    rdi,[rip+0x2070]        # 40de90 <_IO_stdin_used@@Base+0x1e90>
  40be20:	call   403100 <puts@plt>
  40be25:	lea    rdi,[rip+0x20b4]        # 40dee0 <_IO_stdin_used@@Base+0x1ee0>
  40be2c:	call   403100 <puts@plt>
  40be31:	lea    rdi,[rip+0x20e8]        # 40df20 <_IO_stdin_used@@Base+0x1f20>
  40be38:	call   403100 <puts@plt>
  40be3d:	mov    edi,0xa
  40be42:	add    rsp,0x8
  40be46:	pop    rbx
  40be47:	pop    r12
  40be49:	pop    r13
  40be4b:	pop    r14
  40be4d:	pop    r15
  40be4f:	pop    rbp
  40be50:	jmp    403080 <putchar@plt>
  40be55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be5f:	nop
  40be60:	push   rax
  40be61:	call   4035c0 <coda_get_libcoda_version@plt>
  40be66:	mov    rcx,rax
  40be69:	lea    rdi,[rip+0xe64]        # 40ccd4 <_IO_stdin_used@@Base+0xcd4>
  40be70:	xor    eax,eax
  40be72:	mov    rsi,rcx
  40be75:	call   403230 <printf@plt>
  40be7a:	lea    rdi,[rip+0x20df]        # 40df60 <_IO_stdin_used@@Base+0x1f60>
  40be81:	call   403100 <puts@plt>
  40be86:	mov    edi,0xa
  40be8b:	pop    rax
  40be8c:	jmp    403080 <putchar@plt>
  40be91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be9b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040bea0 <__libc_csu_init@@Base>:
  40bea0:	endbr64 
  40bea4:	push   r15
  40bea6:	lea    r15,[rip+0x3f0b]        # 40fdb8 <_IO_stdin_used@@Base+0x3db8>
  40bead:	push   r14
  40beaf:	mov    r14,rdx
  40beb2:	push   r13
  40beb4:	mov    r13,rsi
  40beb7:	push   r12
  40beb9:	mov    r12d,edi
  40bebc:	push   rbp
  40bebd:	lea    rbp,[rip+0x3efc]        # 40fdc0 <_IO_stdin_used@@Base+0x3dc0>
  40bec4:	push   rbx
  40bec5:	sub    rbp,r15
  40bec8:	sub    rsp,0x8
  40becc:	call   403000 <coda_cursor_get_byte_size@plt-0x30>
  40bed1:	sar    rbp,0x3
  40bed5:	je     40bef6 <__libc_csu_init@@Base+0x56>
  40bed7:	xor    ebx,ebx
  40bed9:	nop    DWORD PTR [rax+0x0]
  40bee0:	mov    rdx,r14
  40bee3:	mov    rsi,r13
  40bee6:	mov    edi,r12d
  40bee9:	call   QWORD PTR [r15+rbx*8]
  40beed:	add    rbx,0x1
  40bef1:	cmp    rbp,rbx
  40bef4:	jne    40bee0 <__libc_csu_init@@Base+0x40>
  40bef6:	add    rsp,0x8
  40befa:	pop    rbx
  40befb:	pop    rbp
  40befc:	pop    r12
  40befe:	pop    r13
  40bf00:	pop    r14
  40bf02:	pop    r15
  40bf04:	ret    
  40bf05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040bf10 <__libc_csu_fini@@Base>:
  40bf10:	endbr64 
  40bf14:	ret    

Disassembly of section .fini:

000000000040bf18 <.fini>:
  40bf18:	endbr64 
  40bf1c:	sub    rsp,0x8
  40bf20:	add    rsp,0x8
  40bf24:	ret    
