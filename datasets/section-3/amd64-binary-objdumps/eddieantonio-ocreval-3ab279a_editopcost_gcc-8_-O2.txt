
../repos/eddieantonio-ocreval-3ab279a/editopcost/editopcost:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe1]        # 403ff0 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x12a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <error@@Base+0x2518>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <error@@Base+0x2520>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x120>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x120>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x120>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x120>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x120>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x120>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x120>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x120>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x120>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x120>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x120>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x120>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x120>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x120>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x120>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x120>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x120>
  40113f:	nop

Disassembly of section .plt.sec:

0000000000401140 <free@plt>:
  401140:	endbr64 
  401144:	bnd jmp QWORD PTR [rip+0x2ecd]        # 404018 <free@GLIBC_2.2.5>
  40114b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401150 <unlink@plt>:
  401150:	endbr64 
  401154:	bnd jmp QWORD PTR [rip+0x2ec5]        # 404020 <unlink@GLIBC_2.2.5>
  40115b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401160 <getpid@plt>:
  401160:	endbr64 
  401164:	bnd jmp QWORD PTR [rip+0x2ebd]        # 404028 <getpid@GLIBC_2.2.5>
  40116b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401170 <fclose@plt>:
  401170:	endbr64 
  401174:	bnd jmp QWORD PTR [rip+0x2eb5]        # 404030 <fclose@GLIBC_2.2.5>
  40117b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401180 <strlen@plt>:
  401180:	endbr64 
  401184:	bnd jmp QWORD PTR [rip+0x2ead]        # 404038 <strlen@GLIBC_2.2.5>
  40118b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401190 <__stack_chk_fail@plt>:
  401190:	endbr64 
  401194:	bnd jmp QWORD PTR [rip+0x2ea5]        # 404040 <__stack_chk_fail@GLIBC_2.4>
  40119b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011a0 <fgets@plt>:
  4011a0:	endbr64 
  4011a4:	bnd jmp QWORD PTR [rip+0x2e9d]        # 404048 <fgets@GLIBC_2.2.5>
  4011ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011b0 <calloc@plt>:
  4011b0:	endbr64 
  4011b4:	bnd jmp QWORD PTR [rip+0x2e95]        # 404050 <calloc@GLIBC_2.2.5>
  4011bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011c0 <__sysv_signal@plt>:
  4011c0:	endbr64 
  4011c4:	bnd jmp QWORD PTR [rip+0x2e8d]        # 404058 <__sysv_signal@GLIBC_2.2.5>
  4011cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011d0 <__xstat@plt>:
  4011d0:	endbr64 
  4011d4:	bnd jmp QWORD PTR [rip+0x2e85]        # 404060 <__xstat@GLIBC_2.2.5>
  4011db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011e0 <__isoc99_sscanf@plt>:
  4011e0:	endbr64 
  4011e4:	bnd jmp QWORD PTR [rip+0x2e7d]        # 404068 <__isoc99_sscanf@GLIBC_2.7>
  4011eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004011f0 <__printf_chk@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x2e75]        # 404070 <__printf_chk@GLIBC_2.3.4>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <fopen@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x2e6d]        # 404078 <fopen@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <exit@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x2e65]        # 404080 <exit@GLIBC_2.2.5>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <__fprintf_chk@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x2e5d]        # 404088 <__fprintf_chk@GLIBC_2.3.4>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <strdup@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x2e55]        # 404090 <strdup@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <__sprintf_chk@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x2e4d]        # 404098 <__sprintf_chk@GLIBC_2.3.4>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401250 <error@@Base-0x8a0>:
  401250:	endbr64 
  401254:	push   rbx
  401255:	xor    eax,eax
  401257:	xor    ecx,ecx
  401259:	sub    rsp,0x10
  40125d:	mov    DWORD PTR [rsp+0xc],edi
  401261:	lea    rdx,[rip+0xdc0]        # 402028 <error@@Base+0x538>
  401268:	lea    rdi,[rsp+0xc]
  40126d:	mov    rbx,rsi
  401270:	call   401c70 <error@@Base+0x180>
  401275:	mov    eax,DWORD PTR [rsp+0xc]
  401279:	dec    eax
  40127b:	cmp    eax,0x1
  40127e:	jbe    40128e <__sprintf_chk@plt+0x4e>
  401280:	lea    rdi,[rip+0xd89]        # 402010 <error@@Base+0x520>
  401287:	xor    eax,eax
  401289:	call   401af0 <error@@Base>
  40128e:	mov    rsi,QWORD PTR [rbx]
  401291:	mov    rdi,0x4044a0
  401298:	xor    eax,eax
  40129a:	call   401500 <__sprintf_chk@plt+0x2c0>
  40129f:	cmp    DWORD PTR [rsp+0xc],0x2
  4012a4:	je     4012b4 <__sprintf_chk@plt+0x74>
  4012a6:	xor    eax,eax
  4012a8:	call   401420 <__sprintf_chk@plt+0x1e0>
  4012ad:	xor    eax,eax
  4012af:	call   401a80 <__sprintf_chk@plt+0x840>
  4012b4:	mov    rsi,QWORD PTR [rbx+0x8]
  4012b8:	mov    rdi,0x404160
  4012bf:	xor    eax,eax
  4012c1:	call   401500 <__sprintf_chk@plt+0x2c0>
  4012c6:	xor    eax,eax
  4012c8:	call   4013c0 <__sprintf_chk@plt+0x180>
  4012cd:	jmp    4012a6 <__sprintf_chk@plt+0x66>
  4012cf:	nop
  4012d0:	endbr64 
  4012d4:	xor    ebp,ebp
  4012d6:	mov    r9,rdx
  4012d9:	pop    rsi
  4012da:	mov    rdx,rsp
  4012dd:	and    rsp,0xfffffffffffffff0
  4012e1:	push   rax
  4012e2:	push   rsp
  4012e3:	mov    r8,0x401fb0
  4012ea:	mov    rcx,0x401f40
  4012f1:	mov    rdi,0x401250
  4012f8:	call   QWORD PTR [rip+0x2cea]        # 403fe8 <error@@Base+0x24f8>
  4012fe:	hlt    
  4012ff:	nop
  401300:	endbr64 
  401304:	ret    
  401305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40130f:	nop
  401310:	mov    eax,0x4040b8
  401315:	cmp    rax,0x4040b8
  40131b:	je     401330 <__sprintf_chk@plt+0xf0>
  40131d:	mov    eax,0x0
  401322:	test   rax,rax
  401325:	je     401330 <__sprintf_chk@plt+0xf0>
  401327:	mov    edi,0x4040b8
  40132c:	jmp    rax
  40132e:	xchg   ax,ax
  401330:	ret    
  401331:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40133c:	nop    DWORD PTR [rax+0x0]
  401340:	mov    esi,0x4040b8
  401345:	sub    rsi,0x4040b8
  40134c:	sar    rsi,0x3
  401350:	mov    rax,rsi
  401353:	shr    rax,0x3f
  401357:	add    rsi,rax
  40135a:	sar    rsi,1
  40135d:	je     401370 <__sprintf_chk@plt+0x130>
  40135f:	mov    eax,0x0
  401364:	test   rax,rax
  401367:	je     401370 <__sprintf_chk@plt+0x130>
  401369:	mov    edi,0x4040b8
  40136e:	jmp    rax
  401370:	ret    
  401371:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40137c:	nop    DWORD PTR [rax+0x0]
  401380:	endbr64 
  401384:	cmp    BYTE PTR [rip+0x2d35],0x0        # 4040c0 <error@@Base+0x25d0>
  40138b:	jne    4013a0 <__sprintf_chk@plt+0x160>
  40138d:	push   rbp
  40138e:	mov    rbp,rsp
  401391:	call   401310 <__sprintf_chk@plt+0xd0>
  401396:	mov    BYTE PTR [rip+0x2d23],0x1        # 4040c0 <error@@Base+0x25d0>
  40139d:	pop    rbp
  40139e:	ret    
  40139f:	nop
  4013a0:	ret    
  4013a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013ac:	nop    DWORD PTR [rax+0x0]
  4013b0:	endbr64 
  4013b4:	jmp    401340 <__sprintf_chk@plt+0x100>
  4013b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013c0:	endbr64 
  4013c4:	mov    rsi,0x4044a0
  4013cb:	mov    rdx,0x404160
  4013d2:	mov    rax,QWORD PTR [rsi]
  4013d5:	add    rdx,0x20
  4013d9:	sub    rax,QWORD PTR [rdx-0x20]
  4013dd:	mov    QWORD PTR [rsi],rax
  4013e0:	mov    rax,QWORD PTR [rsi+0x8]
  4013e4:	sub    rax,QWORD PTR [rdx-0x18]
  4013e8:	mov    QWORD PTR [rsi+0x8],rax
  4013ec:	mov    rax,QWORD PTR [rsi+0x10]
  4013f0:	sub    rax,QWORD PTR [rdx-0x10]
  4013f4:	mov    QWORD PTR [rsi+0x10],rax
  4013f8:	lea    rax,[rsi+0x20]
  4013fc:	add    rsi,0x340
  401403:	nop    DWORD PTR [rax+rax*1+0x0]
  401408:	mov    rcx,QWORD PTR [rdx]
  40140b:	add    rdx,0x8
  40140f:	sub    QWORD PTR [rax],rcx
  401412:	add    rax,0x8
  401416:	cmp    rax,rsi
  401419:	jne    401408 <__sprintf_chk@plt+0x1c8>
  40141b:	ret    
  40141c:	nop    DWORD PTR [rax+0x0]
  401420:	endbr64 
  401424:	push   r14
  401426:	mov    r14,0x4044a0
  40142d:	push   r13
  40142f:	lea    r13,[rip+0xbce]        # 402004 <error@@Base+0x514>
  401436:	push   r12
  401438:	push   rbp
  401439:	push   rbx
  40143a:	xor    ebx,ebx
  40143c:	mov    r12,QWORD PTR [r14]
  40143f:	mov    rbp,QWORD PTR [r14+0x10]
  401443:	nop    DWORD PTR [rax+rax*1+0x0]
  401448:	mov    rcx,rbp
  40144b:	imul   rcx,rbx
  40144f:	mov    rdx,rbx
  401452:	mov    rsi,r13
  401455:	add    rcx,r12
  401458:	mov    edi,0x1
  40145d:	xor    eax,eax
  40145f:	call   4011f0 <__printf_chk@plt>
  401464:	mov    rax,QWORD PTR [r14+rbx*8+0x18]
  401469:	mov    rdx,rax
  40146c:	imul   rdx,rbx
  401470:	inc    rbx
  401473:	sub    rbp,rax
  401476:	add    r12,rdx
  401479:	cmp    rbx,0x65
  40147d:	jne    401448 <__sprintf_chk@plt+0x208>
  40147f:	pop    rbx
  401480:	pop    rbp
  401481:	pop    r12
  401483:	pop    r13
  401485:	pop    r14
  401487:	ret    
  401488:	nop    DWORD PTR [rax+rax*1+0x0]
  401490:	push   rbp
  401491:	mov    rbp,rdx
  401494:	mov    rdx,rdi
  401497:	push   rbx
  401498:	lea    rdi,[rip+0x2c41]        # 4040e0 <error@@Base+0x25f0>
  40149f:	mov    rbx,rsi
  4014a2:	sub    rsp,0x8
  4014a6:	mov    esi,0x63
  4014ab:	call   4011a0 <fgets@plt>
  4014b0:	test   rax,rax
  4014b3:	je     4014d2 <__sprintf_chk@plt+0x292>
  4014b5:	xor    eax,eax
  4014b7:	mov    rdx,rbx
  4014ba:	lea    rsi,[rip+0xb9a]        # 40205b <error@@Base+0x56b>
  4014c1:	lea    rdi,[rip+0x2c18]        # 4040e0 <error@@Base+0x25f0>
  4014c8:	call   4011e0 <__isoc99_sscanf@plt>
  4014cd:	cmp    eax,0x1
  4014d0:	je     4014e0 <__sprintf_chk@plt+0x2a0>
  4014d2:	add    rsp,0x8
  4014d6:	pop    rbx
  4014d7:	xor    eax,eax
  4014d9:	pop    rbp
  4014da:	ret    
  4014db:	nop    DWORD PTR [rax+rax*1+0x0]
  4014e0:	mov    rax,QWORD PTR [rbx]
  4014e3:	add    QWORD PTR [rbp+0x0],rax
  4014e7:	add    rsp,0x8
  4014eb:	pop    rbx
  4014ec:	mov    eax,0x1
  4014f1:	pop    rbp
  4014f2:	ret    
  4014f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014fe:	xchg   ax,ax
  401500:	endbr64 
  401504:	push   r14
  401506:	push   r13
  401508:	mov    r13,rsi
  40150b:	lea    rsi,[rip+0xb43]        # 402055 <error@@Base+0x565>
  401512:	push   r12
  401514:	push   rbp
  401515:	mov    rbp,rdi
  401518:	mov    rdi,r13
  40151b:	push   rbx
  40151c:	sub    rsp,0x20
  401520:	mov    rax,QWORD PTR fs:0x28
  401529:	mov    QWORD PTR [rsp+0x18],rax
  40152e:	xor    eax,eax
  401530:	call   401bf0 <error@@Base+0x100>
  401535:	mov    rdx,rax
  401538:	mov    esi,0x63
  40153d:	lea    rdi,[rip+0x2b9c]        # 4040e0 <error@@Base+0x25f0>
  401544:	mov    rbx,rax
  401547:	call   4011a0 <fgets@plt>
  40154c:	test   rax,rax
  40154f:	je     4016d1 <__sprintf_chk@plt+0x491>
  401555:	lea    r12,[rip+0x2b84]        # 4040e0 <error@@Base+0x25f0>
  40155c:	mov    ecx,0x2a
  401561:	lea    rdi,[rip+0xb60]        # 4020c8 <error@@Base+0x5d8>
  401568:	mov    rsi,r12
  40156b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40156d:	seta   al
  401570:	sbb    al,0x0
  401572:	test   al,al
  401574:	jne    4016d1 <__sprintf_chk@plt+0x491>
  40157a:	mov    rdx,rbx
  40157d:	mov    esi,0x63
  401582:	mov    rdi,r12
  401585:	call   4011a0 <fgets@plt>
  40158a:	test   rax,rax
  40158d:	je     4016d1 <__sprintf_chk@plt+0x491>
  401593:	mov    ecx,0x2d
  401598:	lea    rdi,[rip+0xb59]        # 4020f8 <error@@Base+0x608>
  40159f:	mov    rsi,r12
  4015a2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4015a4:	seta   al
  4015a7:	sbb    al,0x0
  4015a9:	test   al,al
  4015ab:	jne    4016d1 <__sprintf_chk@plt+0x491>
  4015b1:	lea    r14,[rsp+0x8]
  4015b6:	mov    rdx,rbp
  4015b9:	mov    rsi,r14
  4015bc:	mov    rdi,rbx
  4015bf:	call   401490 <__sprintf_chk@plt+0x250>
  4015c4:	test   al,al
  4015c6:	je     4016d1 <__sprintf_chk@plt+0x491>
  4015cc:	xor    eax,eax
  4015ce:	lea    rdx,[rbp+0x8]
  4015d2:	mov    rsi,r14
  4015d5:	mov    rdi,rbx
  4015d8:	call   401490 <__sprintf_chk@plt+0x250>
  4015dd:	test   al,al
  4015df:	je     4016d1 <__sprintf_chk@plt+0x491>
  4015e5:	xor    eax,eax
  4015e7:	lea    rdx,[rbp+0x10]
  4015eb:	mov    rsi,rsp
  4015ee:	mov    rdi,rbx
  4015f1:	call   401490 <__sprintf_chk@plt+0x250>
  4015f6:	test   al,al
  4015f8:	je     4016d1 <__sprintf_chk@plt+0x491>
  4015fe:	cmp    QWORD PTR [rsp],0x0
  401603:	jg     401630 <__sprintf_chk@plt+0x3f0>
  401605:	xor    eax,eax
  401607:	mov    rdi,rbx
  40160a:	call   401960 <__sprintf_chk@plt+0x720>
  40160f:	mov    rax,QWORD PTR [rsp+0x18]
  401614:	xor    rax,QWORD PTR fs:0x28
  40161d:	jne    4016f0 <__sprintf_chk@plt+0x4b0>
  401623:	add    rsp,0x20
  401627:	pop    rbx
  401628:	pop    rbp
  401629:	pop    r12
  40162b:	pop    r13
  40162d:	pop    r14
  40162f:	ret    
  401630:	mov    rdx,rbx
  401633:	mov    esi,0x63
  401638:	mov    rdi,r12
  40163b:	call   4011a0 <fgets@plt>
  401640:	test   rax,rax
  401643:	je     401605 <__sprintf_chk@plt+0x3c5>
  401645:	mov    rdx,rbx
  401648:	mov    esi,0x63
  40164d:	mov    rdi,r12
  401650:	call   4011a0 <fgets@plt>
  401655:	test   rax,rax
  401658:	je     401605 <__sprintf_chk@plt+0x3c5>
  40165a:	mov    rdx,rbx
  40165d:	mov    esi,0x63
  401662:	mov    rdi,r12
  401665:	call   4011a0 <fgets@plt>
  40166a:	test   rax,rax
  40166d:	je     401605 <__sprintf_chk@plt+0x3c5>
  40166f:	lea    r12,[rsp+0x10]
  401674:	jmp    4016b3 <__sprintf_chk@plt+0x473>
  401676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401680:	xor    eax,eax
  401682:	mov    rcx,r12
  401685:	mov    rdx,r14
  401688:	lea    rsi,[rip+0x9c8]        # 402057 <error@@Base+0x567>
  40168f:	lea    rdi,[rip+0x2a4a]        # 4040e0 <error@@Base+0x25f0>
  401696:	call   4011e0 <__isoc99_sscanf@plt>
  40169b:	cmp    eax,0x2
  40169e:	jne    401605 <__sprintf_chk@plt+0x3c5>
  4016a4:	mov    rax,QWORD PTR [rsp+0x10]
  4016a9:	mov    rdx,QWORD PTR [rsp+0x8]
  4016ae:	add    QWORD PTR [rbp+rax*8+0x18],rdx
  4016b3:	mov    rdx,rbx
  4016b6:	mov    esi,0x63
  4016bb:	lea    rdi,[rip+0x2a1e]        # 4040e0 <error@@Base+0x25f0>
  4016c2:	call   4011a0 <fgets@plt>
  4016c7:	test   rax,rax
  4016ca:	jne    401680 <__sprintf_chk@plt+0x440>
  4016cc:	jmp    401605 <__sprintf_chk@plt+0x3c5>
  4016d1:	test   r13,r13
  4016d4:	lea    rax,[rip+0x974]        # 40204f <error@@Base+0x55f>
  4016db:	cmove  r13,rax
  4016df:	lea    rdi,[rip+0x979]        # 40205f <error@@Base+0x56f>
  4016e6:	mov    rsi,r13
  4016e9:	xor    eax,eax
  4016eb:	call   401ba0 <error@@Base+0xb0>
  4016f0:	call   401190 <__stack_chk_fail@plt>
  4016f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401700:	endbr64 
  401704:	push   r13
  401706:	xor    eax,eax
  401708:	push   r12
  40170a:	push   rbp
  40170b:	mov    rbp,rdi
  40170e:	mov    rdi,rsi
  401711:	push   rbx
  401712:	lea    rsi,[rip+0x958]        # 402071 <error@@Base+0x581>
  401719:	sub    rsp,0x8
  40171d:	call   401bf0 <error@@Base+0x100>
  401722:	mov    r12,rax
  401725:	mov    rdi,rax
  401728:	lea    r8,[rip+0x9c9]        # 4020f8 <error@@Base+0x608>
  40172f:	lea    rcx,[rip+0x992]        # 4020c8 <error@@Base+0x5d8>
  401736:	lea    rdx,[rip+0x936]        # 402073 <error@@Base+0x583>
  40173d:	mov    esi,0x1
  401742:	xor    eax,eax
  401744:	call   401220 <__fprintf_chk@plt>
  401749:	mov    rcx,QWORD PTR [rbp+0x0]
  40174d:	lea    r8,[rip+0x924]        # 402078 <error@@Base+0x588>
  401754:	lea    rdx,[rip+0x928]        # 402083 <error@@Base+0x593>
  40175b:	mov    esi,0x1
  401760:	mov    rdi,r12
  401763:	xor    eax,eax
  401765:	call   401220 <__fprintf_chk@plt>
  40176a:	mov    rcx,QWORD PTR [rbp+0x8]
  40176e:	lea    r8,[rip+0x919]        # 40208e <error@@Base+0x59e>
  401775:	lea    rdx,[rip+0x907]        # 402083 <error@@Base+0x593>
  40177c:	mov    esi,0x1
  401781:	mov    rdi,r12
  401784:	xor    eax,eax
  401786:	call   401220 <__fprintf_chk@plt>
  40178b:	mov    rcx,QWORD PTR [rbp+0x10]
  40178f:	xor    eax,eax
  401791:	lea    r8,[rip+0x900]        # 402098 <error@@Base+0x5a8>
  401798:	lea    rdx,[rip+0x8e4]        # 402083 <error@@Base+0x593>
  40179f:	mov    esi,0x1
  4017a4:	mov    rdi,r12
  4017a7:	call   401220 <__fprintf_chk@plt>
  4017ac:	cmp    QWORD PTR [rbp+0x10],0x0
  4017b1:	jg     4017c7 <__sprintf_chk@plt+0x587>
  4017b3:	add    rsp,0x8
  4017b7:	pop    rbx
  4017b8:	pop    rbp
  4017b9:	mov    rdi,r12
  4017bc:	pop    r12
  4017be:	xor    eax,eax
  4017c0:	pop    r13
  4017c2:	jmp    401960 <__sprintf_chk@plt+0x720>
  4017c7:	lea    rdx,[rip+0x8d0]        # 40209e <error@@Base+0x5ae>
  4017ce:	mov    esi,0x1
  4017d3:	mov    rdi,r12
  4017d6:	xor    eax,eax
  4017d8:	call   401220 <__fprintf_chk@plt>
  4017dd:	mov    ebx,0x1
  4017e2:	lea    r13,[rip+0x8cf]        # 4020b8 <error@@Base+0x5c8>
  4017e9:	nop    DWORD PTR [rax+0x0]
  4017f0:	mov    rcx,QWORD PTR [rbp+rbx*8+0x18]
  4017f5:	test   rcx,rcx
  4017f8:	jle    40180f <__sprintf_chk@plt+0x5cf>
  4017fa:	mov    r8,rbx
  4017fd:	mov    rdx,r13
  401800:	mov    esi,0x1
  401805:	mov    rdi,r12
  401808:	xor    eax,eax
  40180a:	call   401220 <__fprintf_chk@plt>
  40180f:	inc    rbx
  401812:	cmp    rbx,0x65
  401816:	jne    4017f0 <__sprintf_chk@plt+0x5b0>
  401818:	jmp    4017b3 <__sprintf_chk@plt+0x573>
  40181a:	nop    WORD PTR [rax+rax*1+0x0]
  401820:	push   rbp
  401821:	push   rbx
  401822:	mov    ebx,edi
  401824:	movsx  ebx,bx
  401827:	sub    rsp,0x78
  40182b:	mov    rax,QWORD PTR fs:0x28
  401834:	mov    QWORD PTR [rsp+0x68],rax
  401839:	xor    eax,eax
  40183b:	mov    rbp,rsp
  40183e:	call   401160 <getpid@plt>
  401843:	mov    r9d,eax
  401846:	sub    rsp,0x8
  40184a:	mov    rax,0x4047e8
  401851:	push   rbx
  401852:	mov    r8,QWORD PTR [rax]
  401855:	lea    rcx,[rip+0x8c9]        # 402125 <error@@Base+0x635>
  40185c:	mov    edx,0x64
  401861:	mov    esi,0x1
  401866:	mov    rdi,rbp
  401869:	xor    eax,eax
  40186b:	call   401240 <__sprintf_chk@plt>
  401870:	mov    rdi,rbp
  401873:	call   401230 <strdup@plt>
  401878:	pop    rdx
  401879:	pop    rcx
  40187a:	mov    rdx,QWORD PTR [rsp+0x68]
  40187f:	xor    rdx,QWORD PTR fs:0x28
  401888:	jne    401891 <__sprintf_chk@plt+0x651>
  40188a:	add    rsp,0x78
  40188e:	pop    rbx
  40188f:	pop    rbp
  401890:	ret    
  401891:	call   401190 <__stack_chk_fail@plt>
  401896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018a0:	push   r12
  4018a2:	mov    rax,0x4047f0
  4018a9:	mov    r12d,edi
  4018ac:	push   rbp
  4018ad:	push   rbx
  4018ae:	mov    rdx,QWORD PTR [rax]
  4018b1:	test   rdx,rdx
  4018b4:	je     4018ba <__sprintf_chk@plt+0x67a>
  4018b6:	xor    eax,eax
  4018b8:	call   rdx
  4018ba:	cmp    WORD PTR [rip+0x2884],0x0        # 404146 <error@@Base+0x2656>
  4018c2:	jle    4018fa <__sprintf_chk@plt+0x6ba>
  4018c4:	mov    ebx,0x1
  4018c9:	nop    DWORD PTR [rax+0x0]
  4018d0:	movsx  edi,bx
  4018d3:	xor    eax,eax
  4018d5:	call   401820 <__sprintf_chk@plt+0x5e0>
  4018da:	mov    rdi,rax
  4018dd:	mov    rbp,rax
  4018e0:	xor    eax,eax
  4018e2:	call   401150 <unlink@plt>
  4018e7:	inc    ebx
  4018e9:	mov    rdi,rbp
  4018ec:	call   401140 <free@plt>
  4018f1:	cmp    bx,WORD PTR [rip+0x284e]        # 404146 <error@@Base+0x2656>
  4018f8:	jle    4018d0 <__sprintf_chk@plt+0x690>
  4018fa:	mov    edi,r12d
  4018fd:	call   401210 <exit@plt>
  401902:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40190d:	nop    DWORD PTR [rax]
  401910:	endbr64 
  401914:	movzx  edx,BYTE PTR [rdi]
  401917:	movzx  ecx,BYTE PTR [rsi]
  40191a:	test   dl,dl
  40191c:	je     401943 <__sprintf_chk@plt+0x703>
  40191e:	cmp    cl,dl
  401920:	jne    401949 <__sprintf_chk@plt+0x709>
  401922:	xor    eax,eax
  401924:	jmp    401934 <__sprintf_chk@plt+0x6f4>
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	cmp    dl,cl
  401932:	jne    401949 <__sprintf_chk@plt+0x709>
  401934:	inc    rax
  401937:	movzx  edx,BYTE PTR [rdi+rax*1]
  40193b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  40193f:	test   dl,dl
  401941:	jne    401930 <__sprintf_chk@plt+0x6f0>
  401943:	test   cl,cl
  401945:	je     401958 <__sprintf_chk@plt+0x718>
  401947:	xor    edx,edx
  401949:	cmp    dl,cl
  40194b:	sbb    eax,eax
  40194d:	or     eax,0x1
  401950:	ret    
  401951:	nop    DWORD PTR [rax+0x0]
  401958:	xor    eax,eax
  40195a:	ret    
  40195b:	nop    DWORD PTR [rax+rax*1+0x0]
  401960:	endbr64 
  401964:	mov    rax,QWORD PTR [rip+0x2675]        # 403fe0 <error@@Base+0x24f0>
  40196b:	cmp    QWORD PTR [rax],rdi
  40196e:	je     401988 <__sprintf_chk@plt+0x748>
  401970:	mov    rax,QWORD PTR [rip+0x2661]        # 403fd8 <error@@Base+0x24e8>
  401977:	cmp    QWORD PTR [rax],rdi
  40197a:	je     401988 <__sprintf_chk@plt+0x748>
  40197c:	jmp    401170 <fclose@plt>
  401981:	nop    DWORD PTR [rax+0x0]
  401988:	ret    
  401989:	nop    DWORD PTR [rax+0x0]
  401990:	endbr64 
  401994:	sub    rsp,0xa8
  40199b:	mov    rsi,rdi
  40199e:	mov    rdx,rsp
  4019a1:	mov    edi,0x1
  4019a6:	mov    rax,QWORD PTR fs:0x28
  4019af:	mov    QWORD PTR [rsp+0x98],rax
  4019b7:	xor    eax,eax
  4019b9:	call   4011d0 <__xstat@plt>
  4019be:	test   eax,eax
  4019c0:	sete   al
  4019c3:	mov    rcx,QWORD PTR [rsp+0x98]
  4019cb:	xor    rcx,QWORD PTR fs:0x28
  4019d4:	jne    4019de <__sprintf_chk@plt+0x79e>
  4019d6:	add    rsp,0xa8
  4019dd:	ret    
  4019de:	call   401190 <__stack_chk_fail@plt>
  4019e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4019ee:	xchg   ax,ax
  4019f0:	endbr64 
  4019f4:	movzx  eax,WORD PTR [rip+0x274b]        # 404146 <error@@Base+0x2656>
  4019fb:	push   rbx
  4019fc:	lea    edi,[rax+0x1]
  4019ff:	mov    WORD PTR [rip+0x2740],di        # 404146 <error@@Base+0x2656>
  401a06:	xor    eax,eax
  401a08:	movsx  edi,di
  401a0b:	call   401820 <__sprintf_chk@plt+0x5e0>
  401a10:	mov    rbx,rax
  401a13:	mov    rdi,rax
  401a16:	xor    eax,eax
  401a18:	call   401150 <unlink@plt>
  401a1d:	mov    rax,rbx
  401a20:	pop    rbx
  401a21:	ret    
  401a22:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a2d:	nop    DWORD PTR [rax]
  401a30:	endbr64 
  401a34:	push   rbx
  401a35:	mov    rbx,rdi
  401a38:	call   401180 <strlen@plt>
  401a3d:	lea    ecx,[rax-0x1]
  401a40:	movsx  rdx,cx
  401a44:	test   cx,cx
  401a47:	js     401a73 <__sprintf_chk@plt+0x833>
  401a49:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  401a4d:	je     401a73 <__sprintf_chk@plt+0x833>
  401a4f:	sub    eax,0x2
  401a52:	movsx  rdx,ax
  401a56:	jmp    401a6e <__sprintf_chk@plt+0x82e>
  401a58:	nop    DWORD PTR [rax+rax*1+0x0]
  401a60:	lea    rax,[rdx-0x1]
  401a64:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  401a69:	je     401a73 <__sprintf_chk@plt+0x833>
  401a6b:	mov    rdx,rax
  401a6e:	test   dx,dx
  401a71:	jns    401a60 <__sprintf_chk@plt+0x820>
  401a73:	lea    rax,[rbx+rdx*1+0x1]
  401a78:	pop    rbx
  401a79:	ret    
  401a7a:	nop    WORD PTR [rax+rax*1+0x0]
  401a80:	endbr64 
  401a84:	push   rax
  401a85:	pop    rax
  401a86:	xor    edi,edi
  401a88:	xor    eax,eax
  401a8a:	sub    rsp,0x8
  401a8e:	call   4018a0 <__sprintf_chk@plt+0x660>
  401a93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a9e:	xchg   ax,ax
  401aa0:	push   rax
  401aa1:	pop    rax
  401aa2:	sub    rsp,0x8
  401aa6:	mov    rax,0x4047e0
  401aad:	mov    rdx,QWORD PTR [rax]
  401ab0:	test   rdx,rdx
  401ab3:	je     401ac0 <__sprintf_chk@plt+0x880>
  401ab5:	xor    eax,eax
  401ab7:	call   rdx
  401ab9:	xor    eax,eax
  401abb:	call   401a80 <__sprintf_chk@plt+0x840>
  401ac0:	mov    rax,0x4047e8
  401ac7:	mov    r8,rdi
  401aca:	mov    rcx,QWORD PTR [rax]
  401acd:	mov    rax,QWORD PTR [rip+0x2524]        # 403ff8 <error@@Base+0x2508>
  401ad4:	lea    rdx,[rip+0x658]        # 402133 <error@@Base+0x643>
  401adb:	mov    rdi,QWORD PTR [rax]
  401ade:	mov    esi,0x1
  401ae3:	xor    eax,eax
  401ae5:	call   401220 <__fprintf_chk@plt>
  401aea:	jmp    401ab9 <__sprintf_chk@plt+0x879>
  401aec:	nop    DWORD PTR [rax+0x0]

0000000000401af0 <error@@Base>:
  401af0:	endbr64 
  401af4:	push   rax
  401af5:	pop    rax
  401af6:	lea    rdx,[rip+0x645]        # 402142 <error@@Base+0x652>
  401afd:	mov    esi,0x1
  401b02:	sub    rsp,0x8
  401b06:	mov    rax,0x4047e8
  401b0d:	mov    r8,rdi
  401b10:	mov    rcx,QWORD PTR [rax]
  401b13:	mov    rax,QWORD PTR [rip+0x24de]        # 403ff8 <error@@Base+0x2508>
  401b1a:	mov    rdi,QWORD PTR [rax]
  401b1d:	xor    eax,eax
  401b1f:	call   401220 <__fprintf_chk@plt>
  401b24:	mov    rax,0x4040b0
  401b2b:	mov    edi,DWORD PTR [rax]
  401b2d:	xor    eax,eax
  401b2f:	call   4018a0 <__sprintf_chk@plt+0x660>
  401b34:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b3f:	nop
  401b40:	endbr64 
  401b44:	sub    rsp,0x8
  401b48:	call   4011b0 <calloc@plt>
  401b4d:	test   rax,rax
  401b50:	je     401b57 <error@@Base+0x67>
  401b52:	add    rsp,0x8
  401b56:	ret    
  401b57:	lea    rdi,[rip+0x5ec]        # 40214a <error@@Base+0x65a>
  401b5e:	call   401af0 <error@@Base>
  401b63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b6e:	xchg   ax,ax
  401b70:	endbr64 
  401b74:	cmp    BYTE PTR [rip+0x25c9],0x0        # 404144 <error@@Base+0x2654>
  401b7b:	je     401b7e <error@@Base+0x8e>
  401b7d:	ret    
  401b7e:	push   rax
  401b7f:	lea    rdi,[rip+0x5de]        # 402164 <error@@Base+0x674>
  401b86:	xor    eax,eax
  401b88:	mov    BYTE PTR [rip+0x25b5],0x1        # 404144 <error@@Base+0x2654>
  401b8f:	call   401af0 <error@@Base>
  401b94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b9f:	nop
  401ba0:	endbr64 
  401ba4:	push   rax
  401ba5:	pop    rax
  401ba6:	lea    rdx,[rip+0x5c6]        # 402173 <error@@Base+0x683>
  401bad:	sub    rsp,0x8
  401bb1:	mov    rax,0x4047e8
  401bb8:	mov    r8,rdi
  401bbb:	mov    rcx,QWORD PTR [rax]
  401bbe:	mov    rax,QWORD PTR [rip+0x2433]        # 403ff8 <error@@Base+0x2508>
  401bc5:	mov    r9,rsi
  401bc8:	mov    rdi,QWORD PTR [rax]
  401bcb:	mov    esi,0x1
  401bd0:	xor    eax,eax
  401bd2:	call   401220 <__fprintf_chk@plt>
  401bd7:	mov    rax,0x4040b0
  401bde:	mov    edi,DWORD PTR [rax]
  401be0:	xor    eax,eax
  401be2:	call   4018a0 <__sprintf_chk@plt+0x660>
  401be7:	nop    WORD PTR [rax+rax*1+0x0]
  401bf0:	endbr64 
  401bf4:	test   rdi,rdi
  401bf7:	je     401c40 <error@@Base+0x150>
  401bf9:	push   rbp
  401bfa:	mov    rbp,rsi
  401bfd:	push   rbx
  401bfe:	mov    rbx,rdi
  401c01:	sub    rsp,0x8
  401c05:	call   401200 <fopen@plt>
  401c0a:	test   rax,rax
  401c0d:	je     401c20 <error@@Base+0x130>
  401c0f:	add    rsp,0x8
  401c13:	pop    rbx
  401c14:	pop    rbp
  401c15:	ret    
  401c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401c20:	cmp    BYTE PTR [rbp+0x0],0x77
  401c24:	mov    rsi,rbx
  401c27:	je     401c50 <error@@Base+0x160>
  401c29:	lea    rdi,[rip+0x566]        # 402196 <error@@Base+0x6a6>
  401c30:	xor    eax,eax
  401c32:	call   401ba0 <error@@Base+0xb0>
  401c37:	nop    WORD PTR [rax+rax*1+0x0]
  401c40:	cmp    BYTE PTR [rsi],0x72
  401c43:	je     401c60 <error@@Base+0x170>
  401c45:	mov    rax,QWORD PTR [rip+0x238c]        # 403fd8 <error@@Base+0x24e8>
  401c4c:	mov    rax,QWORD PTR [rax]
  401c4f:	ret    
  401c50:	lea    rdi,[rip+0x529]        # 402180 <error@@Base+0x690>
  401c57:	call   401ba0 <error@@Base+0xb0>
  401c5c:	nop    DWORD PTR [rax+0x0]
  401c60:	mov    rax,QWORD PTR [rip+0x2379]        # 403fe0 <error@@Base+0x24f0>
  401c67:	mov    rax,QWORD PTR [rax]
  401c6a:	ret    
  401c6b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c70:	endbr64 
  401c74:	push   r15
  401c76:	xor    eax,eax
  401c78:	push   r14
  401c7a:	mov    r14,rsi
  401c7d:	push   r13
  401c7f:	push   r12
  401c81:	push   rbp
  401c82:	push   rbx
  401c83:	sub    rsp,0x38
  401c87:	mov    QWORD PTR [rsp+0x8],rdi
  401c8c:	mov    rdi,QWORD PTR [rsi]
  401c8f:	mov    QWORD PTR [rsp+0x28],rdx
  401c94:	mov    QWORD PTR [rsp+0x10],rcx
  401c99:	call   401a30 <__sprintf_chk@plt+0x7f0>
  401c9e:	mov    rcx,0x4047e8
  401ca5:	lea    rsi,[rip+0xfffffffffffffec4]        # 401b70 <error@@Base+0x80>
  401cac:	mov    edi,0x2
  401cb1:	mov    QWORD PTR [rcx],rax
  401cb4:	call   4011c0 <__sysv_signal@plt>
  401cb9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 401b70 <error@@Base+0x80>
  401cc0:	mov    edi,0xf
  401cc5:	call   4011c0 <__sysv_signal@plt>
  401cca:	mov    r9,QWORD PTR [rsp+0x8]
  401ccf:	mov    r15d,DWORD PTR [r9]
  401cd2:	cmp    r15d,0x1
  401cd6:	je     401ea0 <error@@Base+0x3b0>
  401cdc:	mov    rdx,QWORD PTR [rsp+0x10]
  401ce1:	jle    401eac <error@@Base+0x3bc>
  401ce7:	mov    r8d,r15d
  401cea:	xor    r12d,r12d
  401ced:	mov    r15,rdx
  401cf0:	mov    r13d,0x1
  401cf6:	mov    ebx,0x1
  401cfb:	mov    rdx,r14
  401cfe:	jmp    401d1a <error@@Base+0x22a>
  401d00:	movsx  rax,r12w
  401d04:	mov    QWORD PTR [rdx+rax*8],rbp
  401d08:	inc    ebx
  401d0a:	inc    r12d
  401d0d:	movsx  r13d,bx
  401d11:	cmp    r13d,r8d
  401d14:	jge    401e40 <error@@Base+0x350>
  401d1a:	movsx  rax,bx
  401d1e:	mov    rbp,QWORD PTR [rdx+rax*8]
  401d22:	lea    r10,[rax*8+0x0]
  401d2a:	cmp    BYTE PTR [rbp+0x0],0x2d
  401d2e:	jne    401d00 <error@@Base+0x210>
  401d30:	movzx  r14d,BYTE PTR [rbp+0x1]
  401d35:	mov    QWORD PTR [rsp+0x20],r10
  401d3a:	test   r14b,r14b
  401d3d:	je     401d00 <error@@Base+0x210>
  401d3f:	mov    rdi,rbp
  401d42:	mov    DWORD PTR [rsp+0x1c],r8d
  401d47:	mov    QWORD PTR [rsp+0x10],rdx
  401d4c:	mov    QWORD PTR [rsp+0x8],r9
  401d51:	call   401180 <strlen@plt>
  401d56:	cmp    rax,0x6
  401d5a:	mov    ecx,0x6
  401d5f:	cmovle rcx,rax
  401d63:	lea    rsi,[rip+0x440]        # 4021aa <error@@Base+0x6ba>
  401d6a:	cmp    rcx,rcx
  401d6d:	mov    rdi,rbp
  401d70:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401d72:	seta   al
  401d75:	sbb    al,0x0
  401d77:	test   al,al
  401d79:	je     401ed0 <error@@Base+0x3e0>
  401d7f:	mov    r8d,DWORD PTR [rsp+0x1c]
  401d84:	inc    r13d
  401d87:	xor    eax,eax
  401d89:	cmp    r13d,r8d
  401d8c:	mov    r9,QWORD PTR [rsp+0x8]
  401d91:	mov    rdx,QWORD PTR [rsp+0x10]
  401d96:	jge    401da2 <error@@Base+0x2b2>
  401d98:	mov    r10,QWORD PTR [rsp+0x20]
  401d9d:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  401da2:	test   r15,r15
  401da5:	je     401ddb <error@@Base+0x2eb>
  401da7:	movzx  ecx,BYTE PTR [r15]
  401dab:	test   cl,cl
  401dad:	je     401ddb <error@@Base+0x2eb>
  401daf:	cmp    r14b,cl
  401db2:	je     401df0 <error@@Base+0x300>
  401db4:	xor    ecx,ecx
  401db6:	jmp    401dc5 <error@@Base+0x2d5>
  401db8:	nop    DWORD PTR [rax+rax*1+0x0]
  401dc0:	cmp    r14b,dil
  401dc3:	je     401df8 <error@@Base+0x308>
  401dc5:	inc    ecx
  401dc7:	movsx  rsi,cx
  401dcb:	lea    rsi,[rsi+rsi*2]
  401dcf:	lea    rsi,[r15+rsi*8]
  401dd3:	movzx  edi,BYTE PTR [rsi]
  401dd6:	test   dil,dil
  401dd9:	jne    401dc0 <error@@Base+0x2d0>
  401ddb:	mov    rsi,rbp
  401dde:	lea    rdi,[rip+0x3cb]        # 4021b0 <error@@Base+0x6c0>
  401de5:	xor    eax,eax
  401de7:	call   401ba0 <error@@Base+0xb0>
  401dec:	nop    DWORD PTR [rax+0x0]
  401df0:	mov    rsi,r15
  401df3:	nop    DWORD PTR [rax+rax*1+0x0]
  401df8:	mov    rcx,QWORD PTR [rsi+0x8]
  401dfc:	test   rcx,rcx
  401dff:	je     401e70 <error@@Base+0x380>
  401e01:	cmp    BYTE PTR [rbp+0x2],0x0
  401e05:	jne    401e60 <error@@Base+0x370>
  401e07:	test   rax,rax
  401e0a:	je     401eb8 <error@@Base+0x3c8>
  401e10:	cmp    QWORD PTR [rcx],0x0
  401e14:	jne    401ee0 <error@@Base+0x3f0>
  401e1a:	mov    QWORD PTR [rcx],rax
  401e1d:	mov    eax,ebx
  401e1f:	inc    ebx
  401e21:	cmp    BYTE PTR [rbp+0x2],0x0
  401e25:	jne    401d0d <error@@Base+0x21d>
  401e2b:	lea    ebx,[rax+0x2]
  401e2e:	movsx  r13d,bx
  401e32:	cmp    r13d,r8d
  401e35:	jl     401d1a <error@@Base+0x22a>
  401e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401e40:	movsx  r12d,r12w
  401e44:	mov    DWORD PTR [r9],r12d
  401e47:	add    rsp,0x38
  401e4b:	pop    rbx
  401e4c:	pop    rbp
  401e4d:	pop    r12
  401e4f:	pop    r13
  401e51:	pop    r14
  401e53:	pop    r15
  401e55:	ret    
  401e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e60:	cmp    QWORD PTR [rcx],0x0
  401e64:	jne    401ee0 <error@@Base+0x3f0>
  401e66:	lea    rax,[rbp+0x2]
  401e6a:	jmp    401e1a <error@@Base+0x32a>
  401e6c:	nop    DWORD PTR [rax+0x0]
  401e70:	mov    rax,QWORD PTR [rsi+0x10]
  401e74:	test   rax,rax
  401e77:	je     401ddb <error@@Base+0x2eb>
  401e7d:	cmp    BYTE PTR [rbp+0x2],0x0
  401e81:	jne    401ddb <error@@Base+0x2eb>
  401e87:	cmp    BYTE PTR [rax],0x0
  401e8a:	jne    401ee0 <error@@Base+0x3f0>
  401e8c:	mov    BYTE PTR [rax],0x1
  401e8f:	inc    ebx
  401e91:	mov    r8d,DWORD PTR [r9]
  401e94:	jmp    401d0d <error@@Base+0x21d>
  401e99:	nop    DWORD PTR [rax+0x0]
  401ea0:	mov    rax,0x4040b4
  401ea7:	cmp    BYTE PTR [rax],0x0
  401eaa:	jne    401ed0 <error@@Base+0x3e0>
  401eac:	xor    r12d,r12d
  401eaf:	jmp    401e44 <error@@Base+0x354>
  401eb1:	nop    DWORD PTR [rax+0x0]
  401eb8:	mov    rax,QWORD PTR [rsi+0x10]
  401ebc:	test   rax,rax
  401ebf:	jne    401e87 <error@@Base+0x397>
  401ec1:	jmp    401ddb <error@@Base+0x2eb>
  401ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401ed0:	mov    rdi,QWORD PTR [rsp+0x28]
  401ed5:	xor    eax,eax
  401ed7:	call   401aa0 <__sprintf_chk@plt+0x860>
  401edc:	nop    DWORD PTR [rax+0x0]
  401ee0:	mov    rsi,rbp
  401ee3:	lea    rdi,[rip+0x2d5]        # 4021bf <error@@Base+0x6cf>
  401eea:	xor    eax,eax
  401eec:	call   401ba0 <error@@Base+0xb0>
  401ef1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401efc:	nop    DWORD PTR [rax+0x0]
  401f00:	endbr64 
  401f04:	mov    rax,0x4047e8
  401f0b:	mov    r8,rdi
  401f0e:	mov    rcx,QWORD PTR [rax]
  401f11:	mov    rax,QWORD PTR [rip+0x20e0]        # 403ff8 <error@@Base+0x2508>
  401f18:	mov    r9,rsi
  401f1b:	mov    rdi,QWORD PTR [rax]
  401f1e:	lea    rdx,[rip+0x24e]        # 402173 <error@@Base+0x683>
  401f25:	mov    esi,0x1
  401f2a:	xor    eax,eax
  401f2c:	jmp    401220 <__fprintf_chk@plt>
  401f31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401f40:	endbr64 
  401f44:	push   r15
  401f46:	lea    r15,[rip+0x1eab]        # 403df8 <error@@Base+0x2308>
  401f4d:	push   r14
  401f4f:	mov    r14,rdx
  401f52:	push   r13
  401f54:	mov    r13,rsi
  401f57:	push   r12
  401f59:	mov    r12d,edi
  401f5c:	push   rbp
  401f5d:	lea    rbp,[rip+0x1e9c]        # 403e00 <error@@Base+0x2310>
  401f64:	push   rbx
  401f65:	sub    rbp,r15
  401f68:	sub    rsp,0x8
  401f6c:	call   401000 <free@plt-0x140>
  401f71:	sar    rbp,0x3
  401f75:	je     401f96 <error@@Base+0x4a6>
  401f77:	xor    ebx,ebx
  401f79:	nop    DWORD PTR [rax+0x0]
  401f80:	mov    rdx,r14
  401f83:	mov    rsi,r13
  401f86:	mov    edi,r12d
  401f89:	call   QWORD PTR [r15+rbx*8]
  401f8d:	add    rbx,0x1
  401f91:	cmp    rbp,rbx
  401f94:	jne    401f80 <error@@Base+0x490>
  401f96:	add    rsp,0x8
  401f9a:	pop    rbx
  401f9b:	pop    rbp
  401f9c:	pop    r12
  401f9e:	pop    r13
  401fa0:	pop    r14
  401fa2:	pop    r15
  401fa4:	ret    
  401fa5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401fb0:	endbr64 
  401fb4:	ret    

Disassembly of section .fini:

0000000000401fb8 <.fini>:
  401fb8:	endbr64 
  401fbc:	sub    rsp,0x8
  401fc0:	add    rsp,0x8
  401fc4:	ret    
