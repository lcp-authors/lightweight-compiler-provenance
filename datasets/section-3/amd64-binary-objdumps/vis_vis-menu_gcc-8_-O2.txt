
../repos/vis/vis-menu:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x4fd9]        # 405fe8 <__ctype_b_loc@plt+0x4c28>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1ea>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x4eba]        # 405ee0 <__ctype_b_loc@plt+0x4b20>
  401026:	bnd jmp QWORD PTR [rip+0x4ebb]        # 405ee8 <__ctype_b_loc@plt+0x4b28>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1e0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1e0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1e0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1e0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1e0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1e0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1e0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1e0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1e0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1e0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1e0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1e0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1e0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1e0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1e0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1e0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1e0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1e0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1e0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1e0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1e0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1e0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1e0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1e0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1e0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1e0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1e0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1e0>
  4011ef:	nop
  4011f0:	endbr64 
  4011f4:	push   0x1c
  4011f9:	bnd jmp 401020 <free@plt-0x1e0>
  4011ff:	nop

Disassembly of section .plt.sec:

0000000000401200 <free@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x4ce5]        # 405ef0 <__ctype_b_loc@plt+0x4b30>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <__errno_location@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x4cdd]        # 405ef8 <__ctype_b_loc@plt+0x4b38>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <strncpy@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x4cd5]        # 405f00 <__ctype_b_loc@plt+0x4b40>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <puts@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x4ccd]        # 405f08 <__ctype_b_loc@plt+0x4b48>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <strlen@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x4cc5]        # 405f10 <__ctype_b_loc@plt+0x4b50>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <__stack_chk_fail@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x4cbd]        # 405f18 <__ctype_b_loc@plt+0x4b58>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <strchr@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x4cb5]        # 405f20 <__ctype_b_loc@plt+0x4b60>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <memset@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x4cad]        # 405f28 <__ctype_b_loc@plt+0x4b68>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <freopen@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x4ca5]        # 405f30 <__ctype_b_loc@plt+0x4b70>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <ioctl@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x4c9d]        # 405f38 <__ctype_b_loc@plt+0x4b78>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <close@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x4c95]        # 405f40 <__ctype_b_loc@plt+0x4b80>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <read@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x4c8d]        # 405f48 <__ctype_b_loc@plt+0x4b88>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <fgets@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x4c85]        # 405f50 <__ctype_b_loc@plt+0x4b90>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <calloc@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x4c7d]        # 405f58 <__ctype_b_loc@plt+0x4b98>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <memcpy@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x4c75]        # 405f60 <__ctype_b_loc@plt+0x4ba0>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <fflush@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x4c6d]        # 405f68 <__ctype_b_loc@plt+0x4ba8>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <realloc@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x4c65]        # 405f70 <__ctype_b_loc@plt+0x4bb0>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <__strcpy_chk@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x4c5d]        # 405f78 <__ctype_b_loc@plt+0x4bb8>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <memmove@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x4c55]        # 405f80 <__ctype_b_loc@plt+0x4bc0>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <tcgetattr@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x4c4d]        # 405f88 <__ctype_b_loc@plt+0x4bc8>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <tcsetattr@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x4c45]        # 405f90 <__ctype_b_loc@plt+0x4bd0>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <open@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x4c3d]        # 405f98 <__ctype_b_loc@plt+0x4bd8>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <strtok@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x4c35]        # 405fa0 <__ctype_b_loc@plt+0x4be0>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <strtoul@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x4c2d]        # 405fa8 <__ctype_b_loc@plt+0x4be8>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <exit@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x4c25]        # 405fb0 <__ctype_b_loc@plt+0x4bf0>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <fwrite@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x4c1d]        # 405fb8 <__ctype_b_loc@plt+0x4bf8>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <__fprintf_chk@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x4c15]        # 405fc0 <__ctype_b_loc@plt+0x4c00>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013b0 <strdup@plt>:
  4013b0:	endbr64 
  4013b4:	bnd jmp QWORD PTR [rip+0x4c0d]        # 405fc8 <__ctype_b_loc@plt+0x4c08>
  4013bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013c0 <__ctype_b_loc@plt>:
  4013c0:	endbr64 
  4013c4:	bnd jmp QWORD PTR [rip+0x4c05]        # 405fd0 <__ctype_b_loc@plt+0x4c10>
  4013cb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013d0 <.text>:
  4013d0:	endbr64 
  4013d4:	push   r15
  4013d6:	push   r14
  4013d8:	push   r13
  4013da:	push   r12
  4013dc:	push   rbp
  4013dd:	push   rbx
  4013de:	sub    rsp,0x58
  4013e2:	mov    rax,QWORD PTR fs:0x28
  4013eb:	mov    QWORD PTR [rsp+0x48],rax
  4013f0:	xor    eax,eax
  4013f2:	cmp    edi,0x1
  4013f5:	jle    4014a5 <__ctype_b_loc@plt+0xe5>
  4013fb:	mov    r12d,edi
  4013fe:	mov    r14,rsi
  401401:	mov    ebx,0x1
  401406:	lea    r15,[rip+0x2cc5]        # 4040d2 <__ctype_b_loc@plt+0x2d12>
  40140d:	lea    r8,[rip+0x2cc1]        # 4040d5 <__ctype_b_loc@plt+0x2d15>
  401414:	lea    r13,[rip+0x2cbd]        # 4040d8 <__ctype_b_loc@plt+0x2d18>
  40141b:	jmp    401435 <__ctype_b_loc@plt+0x75>
  40141d:	nop    DWORD PTR [rax]
  401420:	mov    rax,QWORD PTR [rip+0x4bc9]        # 405ff0 <__ctype_b_loc@plt+0x4c30>
  401427:	mov    ebx,ebp
  401429:	mov    QWORD PTR [rip+0x4bd0],rax        # 406000 <__ctype_b_loc@plt+0x4c40>
  401430:	cmp    r12d,ebx
  401433:	jle    4014a5 <__ctype_b_loc@plt+0xe5>
  401435:	movsxd rax,ebx
  401438:	lea    rdx,[rax*8+0x0]
  401440:	mov    rax,QWORD PTR [r14+rax*8]
  401444:	mov    ecx,0x3
  401449:	mov    rsi,rax
  40144c:	mov    rdi,r15
  40144f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401451:	seta   cl
  401454:	sbb    cl,0x0
  401457:	test   cl,cl
  401459:	je     4019fd <__ctype_b_loc@plt+0x63d>
  40145f:	mov    ecx,0x3
  401464:	mov    rsi,rax
  401467:	mov    rdi,r8
  40146a:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40146c:	lea    ebp,[rbx+0x1]
  40146f:	seta   cl
  401472:	sbb    cl,0x0
  401475:	test   cl,cl
  401477:	je     401420 <__ctype_b_loc@plt+0x60>
  401479:	mov    ecx,0x3
  40147e:	mov    rsi,rax
  401481:	mov    rdi,r13
  401484:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401486:	seta   cl
  401489:	sbb    cl,0x0
  40148c:	test   cl,cl
  40148e:	jne    401690 <__ctype_b_loc@plt+0x2d0>
  401494:	mov    ebx,ebp
  401496:	mov    DWORD PTR [rip+0x4c90],0x1        # 406130 <__ctype_b_loc@plt+0x4d70>
  4014a0:	cmp    r12d,ebx
  4014a3:	jg     401435 <__ctype_b_loc@plt+0x75>
  4014a5:	xor    eax,eax
  4014a7:	call   402670 <__ctype_b_loc@plt+0x12b0>
  4014ac:	mov    rax,QWORD PTR [rip+0x4b25]        # 405fd8 <__ctype_b_loc@plt+0x4c18>
  4014b3:	lea    rsi,[rip+0x2c0d]        # 4040c7 <__ctype_b_loc@plt+0x2d07>
  4014ba:	mov    rdx,QWORD PTR [rax]
  4014bd:	lea    rdi,[rip+0x2c05]        # 4040c9 <__ctype_b_loc@plt+0x2d09>
  4014c4:	call   401280 <freopen@plt>
  4014c9:	test   rax,rax
  4014cc:	je     402238 <__ctype_b_loc@plt+0xe78>
  4014d2:	mov    r13,QWORD PTR [rip+0x4b1f]        # 405ff8 <__ctype_b_loc@plt+0x4c38>
  4014d9:	lea    rsi,[rip+0x2c1f]        # 4040ff <__ctype_b_loc@plt+0x2d3f>
  4014e0:	mov    rdx,QWORD PTR [r13+0x0]
  4014e4:	lea    rdi,[rip+0x2bde]        # 4040c9 <__ctype_b_loc@plt+0x2d09>
  4014eb:	call   401280 <freopen@plt>
  4014f0:	test   rax,rax
  4014f3:	je     40222c <__ctype_b_loc@plt+0xe6c>
  4014f9:	mov    esi,0x2
  4014fe:	lea    rdi,[rip+0x2bc4]        # 4040c9 <__ctype_b_loc@plt+0x2d09>
  401505:	xor    eax,eax
  401507:	call   401350 <open@plt>
  40150c:	mov    ebx,eax
  40150e:	cmp    eax,0xffffffff
  401511:	jne    4017f0 <__ctype_b_loc@plt+0x430>
  401517:	mov    QWORD PTR [rip+0x4bfe],0x18        # 406120 <__ctype_b_loc@plt+0x4d60>
  401522:	mov    QWORD PTR [rip+0x4bfb],0x50        # 406128 <__ctype_b_loc@plt+0x4d68>
  40152d:	lea    r12,[rsp+0x18]
  401532:	xor    edi,edi
  401534:	lea    rsi,[rip+0x4b45]        # 406080 <__ctype_b_loc@plt+0x4cc0>
  40153b:	call   401330 <tcgetattr@plt>
  401540:	lea    rdi,[rip+0x4af9]        # 406040 <__ctype_b_loc@plt+0x4c80>
  401547:	lea    rsi,[rip+0x4b32]        # 406080 <__ctype_b_loc@plt+0x4cc0>
  40154e:	mov    ecx,0xf
  401553:	rep movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
  401555:	lea    rdx,[rip+0x4ae4]        # 406040 <__ctype_b_loc@plt+0x4c80>
  40155c:	xor    esi,esi
  40155e:	xor    edi,edi
  401560:	mov    BYTE PTR [rip+0x4af0],0x1        # 406057 <__ctype_b_loc@plt+0x4c97>
  401567:	mov    eax,DWORD PTR [rip+0x4adb]        # 406048 <__ctype_b_loc@plt+0x4c88>
  40156d:	and    DWORD PTR [rip+0x4ac9],0xfffffa15        # 406040 <__ctype_b_loc@plt+0x4c80>
  401577:	and    eax,0xfffffecf
  40157c:	or     eax,0x30
  40157f:	and    DWORD PTR [rip+0x4ac3],0xffff7fb4        # 40604c <__ctype_b_loc@plt+0x4c8c>
  401589:	mov    DWORD PTR [rip+0x4ab9],eax        # 406048 <__ctype_b_loc@plt+0x4c88>
  40158f:	call   401340 <tcsetattr@plt>
  401594:	mov    rax,QWORD PTR [rip+0x4b7d]        # 406118 <__ctype_b_loc@plt+0x4d58>
  40159b:	mov    rdx,QWORD PTR [rip+0x4b56]        # 4060f8 <__ctype_b_loc@plt+0x4d38>
  4015a2:	cmp    QWORD PTR [rip+0x4b77],rax        # 406120 <__ctype_b_loc@plt+0x4d60>
  4015a9:	cmovbe rax,QWORD PTR [rip+0x4b6f]        # 406120 <__ctype_b_loc@plt+0x4d60>
  4015b1:	mov    QWORD PTR [rip+0x4b60],rax        # 406118 <__ctype_b_loc@plt+0x4d58>
  4015b8:	test   rdx,rdx
  4015bb:	je     401e0b <__ctype_b_loc@plt+0xa4b>
  4015c1:	movzx  eax,BYTE PTR [rdx]
  4015c4:	test   al,al
  4015c6:	je     4020b7 <__ctype_b_loc@plt+0xcf7>
  4015cc:	inc    rdx
  4015cf:	xor    ecx,ecx
  4015d1:	nop    DWORD PTR [rax+0x0]
  4015d8:	and    eax,0xc0
  4015dd:	cmp    eax,0x80
  4015e2:	setne  al
  4015e5:	movzx  eax,al
  4015e8:	inc    rdx
  4015eb:	add    ecx,eax
  4015ed:	movzx  eax,BYTE PTR [rdx-0x1]
  4015f1:	test   al,al
  4015f3:	jne    4015d8 <__ctype_b_loc@plt+0x218>
  4015f5:	lea    eax,[rcx+0x4]
  4015f8:	cdqe   
  4015fa:	mov    QWORD PTR [rip+0x4b07],rax        # 406108 <__ctype_b_loc@plt+0x4d48>
  401601:	mov    rax,QWORD PTR [rip+0x4b20]        # 406128 <__ctype_b_loc@plt+0x4d68>
  401608:	mov    ecx,0x3
  40160d:	xor    edx,edx
  40160f:	div    rcx
  401612:	mov    rdx,QWORD PTR [rip+0x4af7]        # 406110 <__ctype_b_loc@plt+0x4d50>
  401619:	cmp    rax,rdx
  40161c:	cmova  rax,rdx
  401620:	mov    QWORD PTR [rip+0x4ae9],rax        # 406110 <__ctype_b_loc@plt+0x4d50>
  401627:	call   402880 <__ctype_b_loc@plt+0x14c0>
  40162c:	cmp    DWORD PTR [rip+0x4afd],0x0        # 406130 <__ctype_b_loc@plt+0x4d70>
  401633:	jne    401e01 <__ctype_b_loc@plt+0xa41>
  401639:	call   402fd0 <__ctype_b_loc@plt+0x1c10>
  40163e:	lea    rbx,[rsp+0x20]
  401643:	lea    rbp,[rip+0x2b02]        # 40414c <__ctype_b_loc@plt+0x2d8c>
  40164a:	lea    r14,[rip+0x4af0]        # 406141 <__ctype_b_loc@plt+0x4d81>
  401651:	nop    DWORD PTR [rax+0x0]
  401658:	mov    rdi,r12
  40165b:	call   403430 <__ctype_b_loc@plt+0x2070>
  401660:	movzx  eax,BYTE PTR [rsp+0x18]
  401665:	vpxor  xmm0,xmm0,xmm0
  401669:	vmovaps XMMWORD PTR [rbx],xmm0
  40166d:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  401672:	mov    BYTE PTR [rsp+0x20],al
  401676:	cmp    al,0x7f
  401678:	ja     401d8b <__ctype_b_loc@plt+0x9cb>
  40167e:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  401683:	add    rax,rbp
  401686:	notrack jmp rax
  401689:	nop    DWORD PTR [rax+0x0]
  401690:	mov    ecx,0x3
  401695:	mov    rsi,rax
  401698:	lea    rdi,[rip+0x2a3c]        # 4040db <__ctype_b_loc@plt+0x2d1b>
  40169f:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4016a1:	seta   cl
  4016a4:	sbb    cl,0x0
  4016a7:	test   cl,cl
  4016a9:	jne    4016c0 <__ctype_b_loc@plt+0x300>
  4016ab:	mov    DWORD PTR [rip+0x4a7b],0xffffffff        # 406130 <__ctype_b_loc@plt+0x4d70>
  4016b5:	mov    ebx,ebp
  4016b7:	jmp    401430 <__ctype_b_loc@plt+0x70>
  4016bc:	nop    DWORD PTR [rax+0x0]
  4016c0:	cmp    BYTE PTR [rax],0x2d
  4016c3:	je     401730 <__ctype_b_loc@plt+0x370>
  4016c5:	mov    edx,0x1fff
  4016ca:	mov    rsi,rax
  4016cd:	lea    rdi,[rip+0x4a6c]        # 406140 <__ctype_b_loc@plt+0x4d80>
  4016d4:	call   401220 <strncpy@plt>
  4016d9:	lea    rsi,[rip+0x4a60]        # 406140 <__ctype_b_loc@plt+0x4d80>
  4016e0:	mov    rdx,rsi
  4016e3:	lea    r8,[rip+0x29eb]        # 4040d5 <__ctype_b_loc@plt+0x2d15>
  4016ea:	mov    ecx,DWORD PTR [rdx]
  4016ec:	add    rdx,0x4
  4016f0:	lea    eax,[rcx-0x1010101]
  4016f6:	andn   eax,ecx,eax
  4016fb:	and    eax,0x80808080
  401700:	je     4016ea <__ctype_b_loc@plt+0x32a>
  401702:	mov    ecx,eax
  401704:	shr    ecx,0x10
  401707:	test   eax,0x8080
  40170c:	cmove  eax,ecx
  40170f:	lea    rcx,[rdx+0x2]
  401713:	cmove  rdx,rcx
  401717:	mov    ebx,eax
  401719:	add    bl,al
  40171b:	sbb    rdx,0x3
  40171f:	sub    rdx,rsi
  401722:	mov    QWORD PTR [rip+0x49d7],rdx        # 406100 <__ctype_b_loc@plt+0x4d40>
  401729:	mov    ebx,ebp
  40172b:	jmp    401430 <__ctype_b_loc@plt+0x70>
  401730:	cmp    r12d,ebp
  401733:	je     402227 <__ctype_b_loc@plt+0xe67>
  401739:	mov    ecx,0x3
  40173e:	mov    rsi,rax
  401741:	lea    rdi,[rip+0x2996]        # 4040de <__ctype_b_loc@plt+0x2d1e>
  401748:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40174a:	seta   cl
  40174d:	sbb    cl,0x0
  401750:	test   cl,cl
  401752:	jne    401788 <__ctype_b_loc@plt+0x3c8>
  401754:	mov    rax,QWORD PTR [r14+rdx*1+0x8]
  401759:	add    ebx,0x2
  40175c:	mov    QWORD PTR [rip+0x4995],rax        # 4060f8 <__ctype_b_loc@plt+0x4d38>
  401763:	test   rax,rax
  401766:	je     401430 <__ctype_b_loc@plt+0x70>
  40176c:	cmp    BYTE PTR [rax],0x0
  40176f:	jne    401430 <__ctype_b_loc@plt+0x70>
  401775:	mov    QWORD PTR [rip+0x4978],0x0        # 4060f8 <__ctype_b_loc@plt+0x4d38>
  401780:	jmp    401430 <__ctype_b_loc@plt+0x70>
  401785:	nop    DWORD PTR [rax]
  401788:	mov    rsi,rax
  40178b:	mov    ecx,0x3
  401790:	lea    rdi,[rip+0x294a]        # 4040e1 <__ctype_b_loc@plt+0x2d21>
  401797:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401799:	mov    QWORD PTR [rsp+0x8],rdx
  40179e:	seta   al
  4017a1:	sbb    al,0x0
  4017a3:	test   al,al
  4017a5:	jne    402227 <__ctype_b_loc@plt+0xe67>
  4017ab:	call   401210 <__errno_location@plt>
  4017b0:	mov    rdx,QWORD PTR [rsp+0x8]
  4017b5:	mov    DWORD PTR [rax],0x0
  4017bb:	mov    rdi,QWORD PTR [r14+rdx*1+0x8]
  4017c0:	xor    esi,esi
  4017c2:	mov    edx,0xa
  4017c7:	mov    rbp,rax
  4017ca:	call   401370 <strtoul@plt>
  4017cf:	mov    QWORD PTR [rip+0x4942],rax        # 406118 <__ctype_b_loc@plt+0x4d58>
  4017d6:	mov    eax,DWORD PTR [rbp+0x0]
  4017d9:	test   eax,eax
  4017db:	jne    402227 <__ctype_b_loc@plt+0xe67>
  4017e1:	add    ebx,0x2
  4017e4:	lea    r8,[rip+0x28ea]        # 4040d5 <__ctype_b_loc@plt+0x2d15>
  4017eb:	jmp    401430 <__ctype_b_loc@plt+0x70>
  4017f0:	lea    r12,[rsp+0x18]
  4017f5:	mov    edi,eax
  4017f7:	mov    rdx,r12
  4017fa:	xor    eax,eax
  4017fc:	mov    esi,0x5413
  401801:	call   401290 <ioctl@plt>
  401806:	mov    ebp,eax
  401808:	mov    edi,ebx
  40180a:	call   4012a0 <close@plt>
  40180f:	test   ebp,ebp
  401811:	js     401d70 <__ctype_b_loc@plt+0x9b0>
  401817:	movzx  eax,WORD PTR [rsp+0x1a]
  40181c:	mov    QWORD PTR [rip+0x4905],rax        # 406128 <__ctype_b_loc@plt+0x4d68>
  401823:	movzx  eax,WORD PTR [rsp+0x18]
  401828:	mov    QWORD PTR [rip+0x48f1],rax        # 406120 <__ctype_b_loc@plt+0x4d60>
  40182f:	jmp    401532 <__ctype_b_loc@plt+0x172>
  401834:	mov    rax,QWORD PTR [rip+0x4885]        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  40183b:	test   rax,rax
  40183e:	je     401854 <__ctype_b_loc@plt+0x494>
  401840:	mov    rsi,QWORD PTR [rax]
  401843:	mov    edx,0x1fff
  401848:	lea    rdi,[rip+0x48f1]        # 406140 <__ctype_b_loc@plt+0x4d80>
  40184f:	call   401220 <strncpy@plt>
  401854:	lea    rdi,[rip+0x48e5]        # 406140 <__ctype_b_loc@plt+0x4d80>
  40185b:	xor    eax,eax
  40185d:	or     rcx,0xffffffffffffffff
  401861:	repnz scas al,BYTE PTR es:[rdi]
  401863:	mov    rax,rcx
  401866:	not    rax
  401869:	dec    rax
  40186c:	mov    QWORD PTR [rip+0x488d],rax        # 406100 <__ctype_b_loc@plt+0x4d40>
  401873:	call   402880 <__ctype_b_loc@plt+0x14c0>
  401878:	call   402fd0 <__ctype_b_loc@plt+0x1c10>
  40187d:	lea    rdi,[rip+0x48bc]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401884:	call   401230 <puts@plt>
  401889:	xor    ebx,ebx
  40188b:	cmp    DWORD PTR [rip+0x489e],0x0        # 406130 <__ctype_b_loc@plt+0x4d70>
  401892:	mov    rdi,QWORD PTR [r13+0x0]
  401896:	jne    401a10 <__ctype_b_loc@plt+0x650>
  40189c:	lea    rdx,[rip+0x27a8]        # 40404b <__ctype_b_loc@plt+0x2c8b>
  4018a3:	mov    esi,0x1
  4018a8:	xor    eax,eax
  4018aa:	call   4013a0 <__fprintf_chk@plt>
  4018af:	xor    esi,esi
  4018b1:	xor    edi,edi
  4018b3:	lea    rdx,[rip+0x47c6]        # 406080 <__ctype_b_loc@plt+0x4cc0>
  4018ba:	call   401340 <tcsetattr@plt>
  4018bf:	mov    eax,ebx
  4018c1:	mov    rbx,QWORD PTR [rsp+0x48]
  4018c6:	xor    rbx,QWORD PTR fs:0x28
  4018cf:	jne    402244 <__ctype_b_loc@plt+0xe84>
  4018d5:	add    rsp,0x58
  4018d9:	pop    rbx
  4018da:	pop    rbp
  4018db:	pop    r12
  4018dd:	pop    r13
  4018df:	pop    r14
  4018e1:	pop    r15
  4018e3:	ret    
  4018e4:	mov    rax,QWORD PTR [rip+0x4815]        # 406100 <__ctype_b_loc@plt+0x4d40>
  4018eb:	lea    r15,[rip+0x484e]        # 406140 <__ctype_b_loc@plt+0x4d80>
  4018f2:	cmp    BYTE PTR [r15+rax*1],0x0
  4018f7:	jne    401e4c <__ctype_b_loc@plt+0xa8c>
  4018fd:	mov    rax,QWORD PTR [rip+0x47bc]        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  401904:	test   rax,rax
  401907:	je     401930 <__ctype_b_loc@plt+0x570>
  401909:	mov    rax,QWORD PTR [rax+0x10]
  40190d:	test   rax,rax
  401910:	je     401930 <__ctype_b_loc@plt+0x570>
  401912:	cmp    rax,QWORD PTR [rip+0x47af]        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  401919:	mov    QWORD PTR [rip+0x47a0],rax        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  401920:	je     401e7f <__ctype_b_loc@plt+0xabf>
  401926:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401930:	call   402fd0 <__ctype_b_loc@plt+0x1c10>
  401935:	jmp    401658 <__ctype_b_loc@plt+0x298>
  40193a:	mov    rax,QWORD PTR [rip+0x477f]        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  401941:	test   rax,rax
  401944:	je     401930 <__ctype_b_loc@plt+0x570>
  401946:	mov    rax,QWORD PTR [rax+0x8]
  40194a:	test   rax,rax
  40194d:	je     401930 <__ctype_b_loc@plt+0x570>
  40194f:	mov    rdi,QWORD PTR [rip+0x477a]        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  401956:	mov    QWORD PTR [rip+0x4763],rax        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  40195d:	cmp    QWORD PTR [rax+0x10],rdi
  401961:	jne    401930 <__ctype_b_loc@plt+0x570>
  401963:	mov    rax,QWORD PTR [rip+0x476e]        # 4060d8 <__ctype_b_loc@plt+0x4d18>
  40196a:	mov    QWORD PTR [rip+0x475f],rax        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  401971:	call   402340 <__ctype_b_loc@plt+0xf80>
  401976:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401978:	mov    rax,QWORD PTR [rip+0x4781]        # 406100 <__ctype_b_loc@plt+0x4d40>
  40197f:	lea    r15,[rip+0x47ba]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401986:	cmp    BYTE PTR [r15+rax*1],0x0
  40198b:	je     401930 <__ctype_b_loc@plt+0x570>
  40198d:	inc    rax
  401990:	lea    rsi,[r15-0x1]
  401994:	jmp    4019ac <__ctype_b_loc@plt+0x5ec>
  401996:	movsx  edx,BYTE PTR [rsi+rax*1+0x1]
  40199b:	and    edx,0xc0
  4019a1:	cmp    edx,0x80
  4019a7:	jne    4019b4 <__ctype_b_loc@plt+0x5f4>
  4019a9:	mov    rax,rcx
  4019ac:	mov    rcx,rax
  4019af:	inc    rcx
  4019b2:	jns    401996 <__ctype_b_loc@plt+0x5d6>
  4019b4:	mov    QWORD PTR [rip+0x4745],rax        # 406100 <__ctype_b_loc@plt+0x4d40>
  4019bb:	mov    rcx,QWORD PTR [rip+0x473e]        # 406100 <__ctype_b_loc@plt+0x4d40>
  4019c2:	lea    rsi,[rcx-0x1]
  4019c6:	test   rcx,rcx
  4019c9:	je     401930 <__ctype_b_loc@plt+0x570>
  4019cf:	jmp    4019e6 <__ctype_b_loc@plt+0x626>
  4019d1:	movsx  eax,BYTE PTR [r14+rsi*1-0x1]
  4019d7:	and    eax,0xc0
  4019dc:	cmp    eax,0x80
  4019e1:	jne    4019ee <__ctype_b_loc@plt+0x62e>
  4019e3:	mov    rsi,rdx
  4019e6:	mov    rdx,rsi
  4019e9:	dec    rdx
  4019ec:	jns    4019d1 <__ctype_b_loc@plt+0x611>
  4019ee:	sub    rsi,rcx
  4019f1:	xor    edi,edi
  4019f3:	call   402c90 <__ctype_b_loc@plt+0x18d0>
  4019f8:	jmp    401930 <__ctype_b_loc@plt+0x570>
  4019fd:	lea    rdi,[rip+0x2724]        # 404128 <__ctype_b_loc@plt+0x2d68>
  401a04:	call   401230 <puts@plt>
  401a09:	xor    edi,edi
  401a0b:	call   401380 <exit@plt>
  401a10:	lea    rdx,[rip+0x2706]        # 40411d <__ctype_b_loc@plt+0x2d5d>
  401a17:	mov    esi,0x1
  401a1c:	xor    eax,eax
  401a1e:	call   4013a0 <__fprintf_chk@plt>
  401a23:	jmp    4018af <__ctype_b_loc@plt+0x4ef>
  401a28:	mov    ebx,0x1
  401a2d:	jmp    40188b <__ctype_b_loc@plt+0x4cb>
  401a32:	mov    rax,QWORD PTR [rip+0x46c7]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401a39:	test   rax,rax
  401a3c:	je     40193a <__ctype_b_loc@plt+0x57a>
  401a42:	mov    rdx,QWORD PTR [rip+0x4677]        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  401a49:	test   rdx,rdx
  401a4c:	je     401e90 <__ctype_b_loc@plt+0xad0>
  401a52:	cmp    QWORD PTR [rdx+0x8],0x0
  401a57:	je     401e90 <__ctype_b_loc@plt+0xad0>
  401a5d:	cmp    QWORD PTR [rip+0x46b3],0x0        # 406118 <__ctype_b_loc@plt+0x4d58>
  401a65:	jne    401e90 <__ctype_b_loc@plt+0xad0>
  401a6b:	mov    rax,QWORD PTR [rdx+0x8]
  401a6f:	jmp    40194f <__ctype_b_loc@plt+0x58f>
  401a74:	mov    rax,QWORD PTR [rip+0x466d]        # 4060e8 <__ctype_b_loc@plt+0x4d28>
  401a7b:	cmp    QWORD PTR [rip+0x463e],rax        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  401a82:	je     401e1b <__ctype_b_loc@plt+0xa5b>
  401a88:	mov    QWORD PTR [rip+0x4641],rax        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  401a8f:	mov    QWORD PTR [rip+0x462a],rax        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  401a96:	call   402340 <__ctype_b_loc@plt+0xf80>
  401a9b:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401aa0:	mov    rdi,r12
  401aa3:	call   403430 <__ctype_b_loc@plt+0x2070>
  401aa8:	movzx  eax,BYTE PTR [rsp+0x18]
  401aad:	cmp    al,0x62
  401aaf:	je     401fc8 <__ctype_b_loc@plt+0xc08>
  401ab5:	jle    401dc5 <__ctype_b_loc@plt+0xa05>
  401abb:	cmp    al,0x66
  401abd:	je     401f44 <__ctype_b_loc@plt+0xb84>
  401ac3:	cmp    al,0x76
  401ac5:	je     402052 <__ctype_b_loc@plt+0xc92>
  401acb:	cmp    al,0x64
  401acd:	jne    401930 <__ctype_b_loc@plt+0x570>
  401ad3:	lea    r15,[rip+0x4666]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401ada:	lea    rcx,[r15-0x1]
  401ade:	mov    rdi,QWORD PTR [rip+0x461b]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401ae5:	cmp    BYTE PTR [r15+rdi*1],0x0
  401aea:	je     401930 <__ctype_b_loc@plt+0x570>
  401af0:	lea    rax,[rdi+0x1]
  401af4:	mov    rdx,rax
  401af7:	jmp    401b16 <__ctype_b_loc@plt+0x756>
  401af9:	nop    DWORD PTR [rax+0x0]
  401b00:	movsx  esi,BYTE PTR [rcx+rdx*1+0x1]
  401b05:	and    esi,0xc0
  401b0b:	cmp    esi,0x80
  401b11:	jne    401b1e <__ctype_b_loc@plt+0x75e>
  401b13:	mov    rdx,r9
  401b16:	mov    r9,rdx
  401b19:	inc    r9
  401b1c:	jns    401b00 <__ctype_b_loc@plt+0x740>
  401b1e:	cmp    BYTE PTR [r15+rdx*1],0x20
  401b23:	je     401b46 <__ctype_b_loc@plt+0x786>
  401b25:	jmp    40215b <__ctype_b_loc@plt+0xd9b>
  401b2a:	nop    WORD PTR [rax+rax*1+0x0]
  401b30:	movsx  edx,BYTE PTR [rcx+rax*1+0x1]
  401b35:	and    edx,0xc0
  401b3b:	cmp    edx,0x80
  401b41:	jne    401b4e <__ctype_b_loc@plt+0x78e>
  401b43:	mov    rax,rsi
  401b46:	mov    rsi,rax
  401b49:	inc    rsi
  401b4c:	jns    401b30 <__ctype_b_loc@plt+0x770>
  401b4e:	mov    QWORD PTR [rip+0x45ab],rax        # 406100 <__ctype_b_loc@plt+0x4d40>
  401b55:	lea    rsi,[rax-0x1]
  401b59:	jmp    401b77 <__ctype_b_loc@plt+0x7b7>
  401b5b:	nop    DWORD PTR [rax+rax*1+0x0]
  401b60:	movsx  edx,BYTE PTR [r14+rsi*1-0x1]
  401b66:	and    edx,0xc0
  401b6c:	cmp    edx,0x80
  401b72:	jne    401b7f <__ctype_b_loc@plt+0x7bf>
  401b74:	mov    rsi,rdi
  401b77:	mov    rdi,rsi
  401b7a:	dec    rdi
  401b7d:	jns    401b60 <__ctype_b_loc@plt+0x7a0>
  401b7f:	sub    rsi,rax
  401b82:	xor    edi,edi
  401b84:	call   402c90 <__ctype_b_loc@plt+0x18d0>
  401b89:	lea    rcx,[rip+0x45af]        # 40613f <__ctype_b_loc@plt+0x4d7f>
  401b90:	jmp    401ade <__ctype_b_loc@plt+0x71e>
  401b95:	mov    rax,QWORD PTR [rip+0x453c]        # 4060d8 <__ctype_b_loc@plt+0x4d18>
  401b9c:	test   rax,rax
  401b9f:	jne    401a88 <__ctype_b_loc@plt+0x6c8>
  401ba5:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401baa:	mov    rax,QWORD PTR [rip+0x454f]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401bb1:	lea    r15,[rip+0x4588]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401bb8:	mov    BYTE PTR [r15+rax*1],0x0
  401bbd:	call   402880 <__ctype_b_loc@plt+0x14c0>
  401bc2:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401bc7:	mov    rdi,QWORD PTR [rip+0x4532]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401bce:	lea    r15,[rip+0x456b]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401bd5:	test   rdi,rdi
  401bd8:	je     401930 <__ctype_b_loc@plt+0x570>
  401bde:	xchg   ax,ax
  401be0:	lea    rsi,[rdi-0x1]
  401be4:	mov    rax,rsi
  401be7:	jmp    401c07 <__ctype_b_loc@plt+0x847>
  401be9:	nop    DWORD PTR [rax+0x0]
  401bf0:	movsx  edx,BYTE PTR [r14+rax*1-0x1]
  401bf6:	and    edx,0xc0
  401bfc:	cmp    edx,0x80
  401c02:	jne    401c0f <__ctype_b_loc@plt+0x84f>
  401c04:	mov    rax,rcx
  401c07:	mov    rcx,rax
  401c0a:	dec    rcx
  401c0d:	jns    401bf0 <__ctype_b_loc@plt+0x830>
  401c0f:	cmp    BYTE PTR [r15+rax*1],0x20
  401c14:	je     401c35 <__ctype_b_loc@plt+0x875>
  401c16:	jmp    401c9e <__ctype_b_loc@plt+0x8de>
  401c1b:	nop    DWORD PTR [rax+rax*1+0x0]
  401c20:	movsx  eax,BYTE PTR [r14+rsi*1-0x1]
  401c26:	and    eax,0xc0
  401c2b:	cmp    eax,0x80
  401c30:	jne    401c3d <__ctype_b_loc@plt+0x87d>
  401c32:	mov    rsi,rdx
  401c35:	mov    rdx,rsi
  401c38:	dec    rdx
  401c3b:	jns    401c20 <__ctype_b_loc@plt+0x860>
  401c3d:	sub    rsi,rdi
  401c40:	xor    edi,edi
  401c42:	call   402c90 <__ctype_b_loc@plt+0x18d0>
  401c47:	mov    rdi,QWORD PTR [rip+0x44b2]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401c4e:	test   rdi,rdi
  401c51:	jne    401be0 <__ctype_b_loc@plt+0x820>
  401c53:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401c58:	nop    DWORD PTR [rax+rax*1+0x0]
  401c60:	cmp    BYTE PTR [r15+rax*1],0x20
  401c65:	jne    401c85 <__ctype_b_loc@plt+0x8c5>
  401c67:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401c6c:	nop    DWORD PTR [rax+0x0]
  401c70:	movsx  eax,BYTE PTR [r14+rsi*1-0x1]
  401c76:	and    eax,0xc0
  401c7b:	cmp    eax,0x80
  401c80:	jne    401c8d <__ctype_b_loc@plt+0x8cd>
  401c82:	mov    rsi,rdx
  401c85:	mov    rdx,rsi
  401c88:	dec    rdx
  401c8b:	jns    401c70 <__ctype_b_loc@plt+0x8b0>
  401c8d:	sub    rsi,rdi
  401c90:	xor    edi,edi
  401c92:	call   402c90 <__ctype_b_loc@plt+0x18d0>
  401c97:	mov    rdi,QWORD PTR [rip+0x4462]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401c9e:	test   rdi,rdi
  401ca1:	je     401930 <__ctype_b_loc@plt+0x570>
  401ca7:	lea    rsi,[rdi-0x1]
  401cab:	mov    rax,rsi
  401cae:	jmp    401cc7 <__ctype_b_loc@plt+0x907>
  401cb0:	movsx  edx,BYTE PTR [r14+rax*1-0x1]
  401cb6:	and    edx,0xc0
  401cbc:	cmp    edx,0x80
  401cc2:	jne    401c60 <__ctype_b_loc@plt+0x8a0>
  401cc4:	mov    rax,rcx
  401cc7:	mov    rcx,rax
  401cca:	dec    rcx
  401ccd:	jns    401cb0 <__ctype_b_loc@plt+0x8f0>
  401ccf:	jmp    401c60 <__ctype_b_loc@plt+0x8a0>
  401cd1:	mov    rax,QWORD PTR [rip+0x43e8]        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  401cd8:	test   rax,rax
  401cdb:	je     401930 <__ctype_b_loc@plt+0x570>
  401ce1:	mov    rsi,QWORD PTR [rax]
  401ce4:	mov    edx,0x2000
  401ce9:	lea    rdi,[rip+0x4450]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401cf0:	lea    r15,[rip+0x4449]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401cf7:	call   401220 <strncpy@plt>
  401cfc:	xor    eax,eax
  401cfe:	or     rcx,0xffffffffffffffff
  401d02:	mov    rdi,r15
  401d05:	repnz scas al,BYTE PTR es:[rdi]
  401d07:	mov    rax,rcx
  401d0a:	not    rax
  401d0d:	dec    rax
  401d10:	mov    QWORD PTR [rip+0x43e9],rax        # 406100 <__ctype_b_loc@plt+0x4d40>
  401d17:	call   402880 <__ctype_b_loc@plt+0x14c0>
  401d1c:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401d21:	mov    rax,QWORD PTR [rip+0x43d8]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401d28:	lea    r15,[rip+0x4411]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401d2f:	cmp    BYTE PTR [r15+rax*1],0x0
  401d34:	je     401e2b <__ctype_b_loc@plt+0xa6b>
  401d3a:	xor    eax,eax
  401d3c:	or     rcx,0xffffffffffffffff
  401d40:	mov    rdi,r15
  401d43:	repnz scas al,BYTE PTR es:[rdi]
  401d45:	mov    rax,rcx
  401d48:	not    rax
  401d4b:	dec    rax
  401d4e:	mov    QWORD PTR [rip+0x43ab],rax        # 406100 <__ctype_b_loc@plt+0x4d40>
  401d55:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401d5a:	mov    rsi,QWORD PTR [rip+0x439f]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401d61:	xor    edi,edi
  401d63:	neg    rsi
  401d66:	call   402c90 <__ctype_b_loc@plt+0x18d0>
  401d6b:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401d70:	mov    QWORD PTR [rip+0x43ad],0x50        # 406128 <__ctype_b_loc@plt+0x4d68>
  401d7b:	mov    QWORD PTR [rip+0x439a],0x18        # 406120 <__ctype_b_loc@plt+0x4d60>
  401d86:	jmp    401532 <__ctype_b_loc@plt+0x172>
  401d8b:	call   4013c0 <__ctype_b_loc@plt>
  401d90:	mov    rax,QWORD PTR [rax]
  401d93:	movsx  rdx,BYTE PTR [rsp+0x20]
  401d99:	test   BYTE PTR [rax+rdx*2],0x2
  401d9d:	jne    401930 <__ctype_b_loc@plt+0x570>
  401da3:	xor    eax,eax
  401da5:	mov    rdi,rbx
  401da8:	or     rcx,0xffffffffffffffff
  401dac:	repnz scas al,BYTE PTR es:[rdi]
  401dae:	mov    rdi,rbx
  401db1:	mov    rax,rcx
  401db4:	not    rax
  401db7:	lea    rsi,[rax-0x1]
  401dbb:	call   402c90 <__ctype_b_loc@plt+0x18d0>
  401dc0:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401dc5:	cmp    al,0x1b
  401dc7:	je     402048 <__ctype_b_loc@plt+0xc88>
  401dcd:	cmp    al,0x5b
  401dcf:	jne    401930 <__ctype_b_loc@plt+0x570>
  401dd5:	mov    rdi,r12
  401dd8:	call   403430 <__ctype_b_loc@plt+0x2070>
  401ddd:	movzx  edx,BYTE PTR [rsp+0x18]
  401de2:	lea    eax,[rdx-0x31]
  401de5:	cmp    al,0x17
  401de7:	ja     401930 <__ctype_b_loc@plt+0x570>
  401ded:	lea    rdi,[rip+0x2558]        # 40434c <__ctype_b_loc@plt+0x2f8c>
  401df4:	movzx  eax,al
  401df7:	movsxd rax,DWORD PTR [rdi+rax*4]
  401dfb:	add    rax,rdi
  401dfe:	notrack jmp rax
  401e01:	call   402da0 <__ctype_b_loc@plt+0x19e0>
  401e06:	jmp    401639 <__ctype_b_loc@plt+0x279>
  401e0b:	xor    eax,eax
  401e0d:	jmp    4015fa <__ctype_b_loc@plt+0x23a>
  401e12:	test   r10b,r10b
  401e15:	je     401930 <__ctype_b_loc@plt+0x570>
  401e1b:	mov    QWORD PTR [rip+0x42da],0x0        # 406100 <__ctype_b_loc@plt+0x4d40>
  401e26:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401e2b:	cmp    QWORD PTR [rip+0x4295],0x0        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  401e33:	mov    r15,QWORD PTR [rip+0x42a6]        # 4060e0 <__ctype_b_loc@plt+0x4d20>
  401e3a:	jne    402067 <__ctype_b_loc@plt+0xca7>
  401e40:	mov    QWORD PTR [rip+0x4279],r15        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  401e47:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401e4c:	inc    rax
  401e4f:	lea    rsi,[r15-0x1]
  401e53:	jmp    401e6b <__ctype_b_loc@plt+0xaab>
  401e55:	movsx  edx,BYTE PTR [rsi+rax*1+0x1]
  401e5a:	and    edx,0xc0
  401e60:	cmp    edx,0x80
  401e66:	jne    401e73 <__ctype_b_loc@plt+0xab3>
  401e68:	mov    rax,rcx
  401e6b:	mov    rcx,rax
  401e6e:	inc    rcx
  401e71:	jns    401e55 <__ctype_b_loc@plt+0xa95>
  401e73:	mov    QWORD PTR [rip+0x4286],rax        # 406100 <__ctype_b_loc@plt+0x4d40>
  401e7a:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401e7f:	mov    QWORD PTR [rip+0x424a],rax        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  401e86:	call   402340 <__ctype_b_loc@plt+0xf80>
  401e8b:	jmp    401930 <__ctype_b_loc@plt+0x570>
  401e90:	dec    rax
  401e93:	jmp    401eac <__ctype_b_loc@plt+0xaec>
  401e95:	movsx  edx,BYTE PTR [r14+rax*1-0x1]
  401e9b:	and    edx,0xc0
  401ea1:	cmp    edx,0x80
  401ea7:	jne    401e73 <__ctype_b_loc@plt+0xab3>
  401ea9:	mov    rax,rcx
  401eac:	mov    rcx,rax
  401eaf:	dec    rcx
  401eb2:	jns    401e95 <__ctype_b_loc@plt+0xad5>
  401eb4:	jmp    401e73 <__ctype_b_loc@plt+0xab3>
  401eb6:	mov    BYTE PTR [rsp+0x18],0x2
  401ebb:	movzx  eax,BYTE PTR [rsp+0x18]
  401ec0:	jmp    401676 <__ctype_b_loc@plt+0x2b6>
  401ec5:	mov    BYTE PTR [rsp+0x18],0x6
  401eca:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  401ecc:	mov    BYTE PTR [rsp+0x18],0xe
  401ed1:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  401ed3:	mov    BYTE PTR [rsp+0x18],0x10
  401ed8:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  401eda:	mov    rdi,r12
  401edd:	call   403430 <__ctype_b_loc@plt+0x2070>
  401ee2:	mov    BYTE PTR [rsp+0x18],0x76
  401ee7:	jmp    401aa8 <__ctype_b_loc@plt+0x6e8>
  401eec:	mov    rdi,r12
  401eef:	call   403430 <__ctype_b_loc@plt+0x2070>
  401ef4:	mov    BYTE PTR [rsp+0x18],0x16
  401ef9:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  401efb:	cmp    dl,0x46
  401efe:	je     401f08 <__ctype_b_loc@plt+0xb48>
  401f00:	mov    rdi,r12
  401f03:	call   403430 <__ctype_b_loc@plt+0x2070>
  401f08:	mov    BYTE PTR [rsp+0x18],0x5
  401f0d:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  401f0f:	mov    rdi,r12
  401f12:	call   403430 <__ctype_b_loc@plt+0x2070>
  401f17:	mov    BYTE PTR [rsp+0x18],0x4
  401f1c:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  401f1e:	mov    rdi,r12
  401f21:	call   403430 <__ctype_b_loc@plt+0x2070>
  401f26:	mov    BYTE PTR [rsp+0x18],0x19
  401f2b:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  401f2d:	cmp    dl,0x48
  401f30:	je     401f3a <__ctype_b_loc@plt+0xb7a>
  401f32:	mov    rdi,r12
  401f35:	call   403430 <__ctype_b_loc@plt+0x2070>
  401f3a:	mov    BYTE PTR [rsp+0x18],0x1
  401f3f:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  401f44:	mov    rdi,QWORD PTR [rip+0x41b5]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401f4b:	lea    r15,[rip+0x41ee]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401f52:	mov    r10,rdi
  401f55:	xor    r11d,r11d
  401f58:	lea    r9,[r15-0x1]
  401f5c:	cmp    BYTE PTR [r15+r10*1],0x0
  401f61:	je     402212 <__ctype_b_loc@plt+0xe52>
  401f67:	lea    rdx,[r10+0x1]
  401f6b:	mov    rax,rdx
  401f6e:	jmp    401f87 <__ctype_b_loc@plt+0xbc7>
  401f70:	movsx  ecx,BYTE PTR [r9+rax*1+0x1]
  401f76:	and    ecx,0xc0
  401f7c:	cmp    ecx,0x80
  401f82:	jne    401f8f <__ctype_b_loc@plt+0xbcf>
  401f84:	mov    rax,rsi
  401f87:	mov    rsi,rax
  401f8a:	inc    rsi
  401f8d:	jns    401f70 <__ctype_b_loc@plt+0xbb0>
  401f8f:	cmp    BYTE PTR [r15+rax*1],0x20
  401f94:	je     401fb5 <__ctype_b_loc@plt+0xbf5>
  401f96:	jmp    4021d1 <__ctype_b_loc@plt+0xe11>
  401f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401fa0:	movsx  eax,BYTE PTR [r9+rdx*1+0x1]
  401fa6:	and    eax,0xc0
  401fab:	cmp    eax,0x80
  401fb0:	jne    401fbd <__ctype_b_loc@plt+0xbfd>
  401fb2:	mov    rdx,rcx
  401fb5:	mov    rcx,rdx
  401fb8:	inc    rcx
  401fbb:	jns    401fa0 <__ctype_b_loc@plt+0xbe0>
  401fbd:	mov    r10,rdx
  401fc0:	mov    r11d,0x1
  401fc6:	jmp    401f5c <__ctype_b_loc@plt+0xb9c>
  401fc8:	mov    rdi,QWORD PTR [rip+0x4131]        # 406100 <__ctype_b_loc@plt+0x4d40>
  401fcf:	xor    r11d,r11d
  401fd2:	mov    r10,rdi
  401fd5:	lea    rsi,[rip+0x4164]        # 406140 <__ctype_b_loc@plt+0x4d80>
  401fdc:	test   r10,r10
  401fdf:	je     40214d <__ctype_b_loc@plt+0xd8d>
  401fe5:	lea    rdx,[r10-0x1]
  401fe9:	mov    rax,rdx
  401fec:	jmp    402007 <__ctype_b_loc@plt+0xc47>
  401fee:	xchg   ax,ax
  401ff0:	movsx  ecx,BYTE PTR [r14+rax*1-0x1]
  401ff6:	and    ecx,0xc0
  401ffc:	cmp    ecx,0x80
  402002:	jne    40200f <__ctype_b_loc@plt+0xc4f>
  402004:	mov    rax,r9
  402007:	mov    r9,rax
  40200a:	dec    r9
  40200d:	jns    401ff0 <__ctype_b_loc@plt+0xc30>
  40200f:	cmp    BYTE PTR [rsi+rax*1],0x20
  402013:	je     402035 <__ctype_b_loc@plt+0xc75>
  402015:	jmp    4020be <__ctype_b_loc@plt+0xcfe>
  40201a:	nop    WORD PTR [rax+rax*1+0x0]
  402020:	movsx  eax,BYTE PTR [r14+rdx*1-0x1]
  402026:	and    eax,0xc0
  40202b:	cmp    eax,0x80
  402030:	jne    40203d <__ctype_b_loc@plt+0xc7d>
  402032:	mov    rdx,rcx
  402035:	mov    rcx,rdx
  402038:	dec    rcx
  40203b:	jns    402020 <__ctype_b_loc@plt+0xc60>
  40203d:	mov    r10,rdx
  402040:	mov    r11d,0x1
  402046:	jmp    401fdc <__ctype_b_loc@plt+0xc1c>
  402048:	mov    BYTE PTR [rsp+0x18],0x3
  40204d:	jmp    401ebb <__ctype_b_loc@plt+0xafb>
  402052:	mov    rax,QWORD PTR [rip+0x406f]        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  402059:	test   rax,rax
  40205c:	jne    401a88 <__ctype_b_loc@plt+0x6c8>
  402062:	jmp    401930 <__ctype_b_loc@plt+0x570>
  402067:	mov    QWORD PTR [rip+0x4062],r15        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  40206e:	call   402340 <__ctype_b_loc@plt+0xf80>
  402073:	mov    rax,QWORD PTR [rip+0x405e]        # 4060d8 <__ctype_b_loc@plt+0x4d18>
  40207a:	mov    QWORD PTR [rip+0x404f],rax        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  402081:	call   402340 <__ctype_b_loc@plt+0xf80>
  402086:	jmp    4020a8 <__ctype_b_loc@plt+0xce8>
  402088:	mov    rax,QWORD PTR [rip+0x4041]        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  40208f:	mov    rax,QWORD PTR [rax+0x10]
  402093:	mov    QWORD PTR [rip+0x4036],rax        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  40209a:	test   rax,rax
  40209d:	je     401e40 <__ctype_b_loc@plt+0xa80>
  4020a3:	call   402340 <__ctype_b_loc@plt+0xf80>
  4020a8:	cmp    QWORD PTR [rip+0x4018],0x0        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  4020b0:	jne    402088 <__ctype_b_loc@plt+0xcc8>
  4020b2:	jmp    401e40 <__ctype_b_loc@plt+0xa80>
  4020b7:	xor    ecx,ecx
  4020b9:	jmp    4015f5 <__ctype_b_loc@plt+0x235>
  4020be:	test   r11b,r11b
  4020c1:	je     4020cd <__ctype_b_loc@plt+0xd0d>
  4020c3:	mov    QWORD PTR [rip+0x4036],r10        # 406100 <__ctype_b_loc@plt+0x4d40>
  4020ca:	mov    rdi,r10
  4020cd:	xor    r10d,r10d
  4020d0:	test   rdi,rdi
  4020d3:	je     401e12 <__ctype_b_loc@plt+0xa52>
  4020d9:	lea    rdx,[rdi-0x1]
  4020dd:	mov    rax,rdx
  4020e0:	jmp    4020ff <__ctype_b_loc@plt+0xd3f>
  4020e2:	nop    WORD PTR [rax+rax*1+0x0]
  4020e8:	movsx  ecx,BYTE PTR [r14+rax*1-0x1]
  4020ee:	and    ecx,0xc0
  4020f4:	cmp    ecx,0x80
  4020fa:	jne    402107 <__ctype_b_loc@plt+0xd47>
  4020fc:	mov    rax,r9
  4020ff:	mov    r9,rax
  402102:	dec    r9
  402105:	jns    4020e8 <__ctype_b_loc@plt+0xd28>
  402107:	cmp    BYTE PTR [rsi+rax*1],0x20
  40210b:	jne    402125 <__ctype_b_loc@plt+0xd65>
  40210d:	jmp    402138 <__ctype_b_loc@plt+0xd78>
  40210f:	nop
  402110:	movsx  eax,BYTE PTR [r14+rdx*1-0x1]
  402116:	and    eax,0xc0
  40211b:	cmp    eax,0x80
  402120:	jne    40212d <__ctype_b_loc@plt+0xd6d>
  402122:	mov    rdx,rcx
  402125:	mov    rcx,rdx
  402128:	dec    rcx
  40212b:	jns    402110 <__ctype_b_loc@plt+0xd50>
  40212d:	mov    rdi,rdx
  402130:	mov    r10d,0x1
  402136:	jmp    4020d0 <__ctype_b_loc@plt+0xd10>
  402138:	test   r10b,r10b
  40213b:	je     401930 <__ctype_b_loc@plt+0x570>
  402141:	mov    QWORD PTR [rip+0x3fb8],rdi        # 406100 <__ctype_b_loc@plt+0x4d40>
  402148:	jmp    401930 <__ctype_b_loc@plt+0x570>
  40214d:	test   r11b,r11b
  402150:	jne    401e1b <__ctype_b_loc@plt+0xa5b>
  402156:	jmp    401930 <__ctype_b_loc@plt+0x570>
  40215b:	lea    rdx,[rip+0x3fdd]        # 40613f <__ctype_b_loc@plt+0x4d7f>
  402162:	inc    rdi
  402165:	jmp    40217b <__ctype_b_loc@plt+0xdbb>
  402167:	movsx  eax,BYTE PTR [rdx+rdi*1+0x1]
  40216c:	and    eax,0xc0
  402171:	cmp    eax,0x80
  402176:	jne    402183 <__ctype_b_loc@plt+0xdc3>
  402178:	mov    rdi,rcx
  40217b:	mov    rcx,rdi
  40217e:	inc    rcx
  402181:	jns    402167 <__ctype_b_loc@plt+0xda7>
  402183:	mov    QWORD PTR [rip+0x3f76],rdi        # 406100 <__ctype_b_loc@plt+0x4d40>
  40218a:	lea    rsi,[rdi-0x1]
  40218e:	jmp    4021a5 <__ctype_b_loc@plt+0xde5>
  402190:	movsx  eax,BYTE PTR [r14+rsi*1-0x1]
  402196:	and    eax,0xc0
  40219b:	cmp    eax,0x80
  4021a0:	jne    4021ad <__ctype_b_loc@plt+0xded>
  4021a2:	mov    rsi,rcx
  4021a5:	mov    rcx,rsi
  4021a8:	dec    rcx
  4021ab:	jns    402190 <__ctype_b_loc@plt+0xdd0>
  4021ad:	sub    rsi,rdi
  4021b0:	xor    edi,edi
  4021b2:	call   402c90 <__ctype_b_loc@plt+0x18d0>
  4021b7:	mov    rdi,QWORD PTR [rip+0x3f42]        # 406100 <__ctype_b_loc@plt+0x4d40>
  4021be:	lea    rdx,[rip+0x3f7a]        # 40613f <__ctype_b_loc@plt+0x4d7f>
  4021c5:	test   BYTE PTR [r15+rdi*1],0xdf
  4021ca:	jne    402162 <__ctype_b_loc@plt+0xda2>
  4021cc:	jmp    401930 <__ctype_b_loc@plt+0x570>
  4021d1:	test   r11b,r11b
  4021d4:	cmovne rdi,r10
  4021d8:	lea    rsi,[rip+0x3f60]        # 40613f <__ctype_b_loc@plt+0x4d7f>
  4021df:	lea    rax,[rdi+0x1]
  4021e3:	jmp    4021fb <__ctype_b_loc@plt+0xe3b>
  4021e5:	movsx  edx,BYTE PTR [rsi+rax*1+0x1]
  4021ea:	and    edx,0xc0
  4021f0:	cmp    edx,0x80
  4021f6:	jne    402203 <__ctype_b_loc@plt+0xe43>
  4021f8:	mov    rax,rcx
  4021fb:	mov    rcx,rax
  4021fe:	inc    rcx
  402201:	jns    4021e5 <__ctype_b_loc@plt+0xe25>
  402203:	mov    rdi,rax
  402206:	test   BYTE PTR [r15+rax*1],0xdf
  40220b:	jne    4021df <__ctype_b_loc@plt+0xe1f>
  40220d:	jmp    401e73 <__ctype_b_loc@plt+0xab3>
  402212:	test   r11b,r11b
  402215:	je     401930 <__ctype_b_loc@plt+0x570>
  40221b:	mov    QWORD PTR [rip+0x3ede],r10        # 406100 <__ctype_b_loc@plt+0x4d40>
  402222:	jmp    401930 <__ctype_b_loc@plt+0x570>
  402227:	call   4025d0 <__ctype_b_loc@plt+0x1210>
  40222c:	lea    rdi,[rip+0x1ece]        # 404101 <__ctype_b_loc@plt+0x2d41>
  402233:	call   402610 <__ctype_b_loc@plt+0x1250>
  402238:	lea    rdi,[rip+0x1ea5]        # 4040e4 <__ctype_b_loc@plt+0x2d24>
  40223f:	call   402610 <__ctype_b_loc@plt+0x1250>
  402244:	call   401250 <__stack_chk_fail@plt>
  402249:	nop    DWORD PTR [rax+0x0]
  402250:	endbr64 
  402254:	xor    ebp,ebp
  402256:	mov    r9,rdx
  402259:	pop    rsi
  40225a:	mov    rdx,rsp
  40225d:	and    rsp,0xfffffffffffffff0
  402261:	push   rax
  402262:	push   rsp
  402263:	mov    r8,0x4034f0
  40226a:	mov    rcx,0x403480
  402271:	mov    rdi,0x4013d0
  402278:	call   QWORD PTR [rip+0x3d62]        # 405fe0 <__ctype_b_loc@plt+0x4c20>
  40227e:	hlt    
  40227f:	nop
  402280:	endbr64 
  402284:	ret    
  402285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40228f:	nop
  402290:	mov    eax,0x406008
  402295:	cmp    rax,0x406008
  40229b:	je     4022b0 <__ctype_b_loc@plt+0xef0>
  40229d:	mov    eax,0x0
  4022a2:	test   rax,rax
  4022a5:	je     4022b0 <__ctype_b_loc@plt+0xef0>
  4022a7:	mov    edi,0x406008
  4022ac:	jmp    rax
  4022ae:	xchg   ax,ax
  4022b0:	ret    
  4022b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4022bc:	nop    DWORD PTR [rax+0x0]
  4022c0:	mov    esi,0x406008
  4022c5:	sub    rsi,0x406008
  4022cc:	sar    rsi,0x3
  4022d0:	mov    rax,rsi
  4022d3:	shr    rax,0x3f
  4022d7:	add    rsi,rax
  4022da:	sar    rsi,1
  4022dd:	je     4022f0 <__ctype_b_loc@plt+0xf30>
  4022df:	mov    eax,0x0
  4022e4:	test   rax,rax
  4022e7:	je     4022f0 <__ctype_b_loc@plt+0xf30>
  4022e9:	mov    edi,0x406008
  4022ee:	jmp    rax
  4022f0:	ret    
  4022f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4022fc:	nop    DWORD PTR [rax+0x0]
  402300:	endbr64 
  402304:	cmp    BYTE PTR [rip+0x3d15],0x0        # 406020 <__ctype_b_loc@plt+0x4c60>
  40230b:	jne    402320 <__ctype_b_loc@plt+0xf60>
  40230d:	push   rbp
  40230e:	mov    rbp,rsp
  402311:	call   402290 <__ctype_b_loc@plt+0xed0>
  402316:	mov    BYTE PTR [rip+0x3d03],0x1        # 406020 <__ctype_b_loc@plt+0x4c60>
  40231d:	pop    rbp
  40231e:	ret    
  40231f:	nop
  402320:	ret    
  402321:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40232c:	nop    DWORD PTR [rax+0x0]
  402330:	endbr64 
  402334:	jmp    4022c0 <__ctype_b_loc@plt+0xf00>
  402336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402340:	push   r12
  402342:	push   rbp
  402343:	push   rbx
  402344:	sub    rsp,0x10
  402348:	mov    rdi,QWORD PTR [rip+0x3dc9]        # 406118 <__ctype_b_loc@plt+0x4d58>
  40234f:	mov    rax,QWORD PTR fs:0x28
  402358:	mov    QWORD PTR [rsp+0x8],rax
  40235d:	xor    eax,eax
  40235f:	mov    rsi,rdi
  402362:	test   rdi,rdi
  402365:	jne    402380 <__ctype_b_loc@plt+0xfc0>
  402367:	mov    rax,QWORD PTR [rip+0x3dba]        # 406128 <__ctype_b_loc@plt+0x4d68>
  40236e:	lea    rsi,[rax-0xa]
  402372:	sub    rsi,QWORD PTR [rip+0x3d8f]        # 406108 <__ctype_b_loc@plt+0x4d48>
  402379:	sub    rsi,QWORD PTR [rip+0x3d90]        # 406110 <__ctype_b_loc@plt+0x4d50>
  402380:	mov    r8,QWORD PTR [rip+0x3d49]        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  402387:	mov    QWORD PTR [rip+0x3d3a],r8        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  40238e:	test   r8,r8
  402391:	je     4025b9 <__ctype_b_loc@plt+0x11f9>
  402397:	mov    r11,r8
  40239a:	xor    ebp,ebp
  40239c:	xor    ebx,ebx
  40239e:	mov    r12d,0x4
  4023a4:	jmp    4023ce <__ctype_b_loc@plt+0x100e>
  4023a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4023b0:	add    rbx,rax
  4023b3:	cmp    rsi,rbx
  4023b6:	jb     402468 <__ctype_b_loc@plt+0x10a8>
  4023bc:	mov    r11,QWORD PTR [r11+0x10]
  4023c0:	mov    ebp,0x1
  4023c5:	test   r11,r11
  4023c8:	je     402580 <__ctype_b_loc@plt+0x11c0>
  4023ce:	mov    eax,0x1
  4023d3:	test   rdi,rdi
  4023d6:	jne    4023b0 <__ctype_b_loc@plt+0xff0>
  4023d8:	mov    r10,QWORD PTR [r11]
  4023db:	test   r10,r10
  4023de:	je     402599 <__ctype_b_loc@plt+0x11d9>
  4023e4:	movzx  r9d,BYTE PTR [r10]
  4023e8:	test   r9b,r9b
  4023eb:	je     402599 <__ctype_b_loc@plt+0x11d9>
  4023f1:	inc    r10
  4023f4:	mov    rdx,r10
  4023f7:	mov    eax,r9d
  4023fa:	xor    ecx,ecx
  4023fc:	nop    DWORD PTR [rax+0x0]
  402400:	and    eax,0xc0
  402405:	cmp    eax,0x80
  40240a:	setne  al
  40240d:	movzx  eax,al
  402410:	inc    rdx
  402413:	add    ecx,eax
  402415:	movzx  eax,BYTE PTR [rdx-0x1]
  402419:	test   al,al
  40241b:	jne    402400 <__ctype_b_loc@plt+0x1040>
  40241d:	add    ecx,0x4
  402420:	movsxd rcx,ecx
  402423:	mov    rax,rsi
  402426:	cmp    rsi,rcx
  402429:	jbe    4023b0 <__ctype_b_loc@plt+0xff0>
  40242b:	xor    eax,eax
  40242d:	nop    DWORD PTR [rax]
  402430:	and    r9d,0xc0
  402437:	xor    edx,edx
  402439:	cmp    r9d,0x80
  402440:	setne  dl
  402443:	inc    r10
  402446:	movzx  r9d,BYTE PTR [r10-0x1]
  40244b:	add    eax,edx
  40244d:	test   r9b,r9b
  402450:	jne    402430 <__ctype_b_loc@plt+0x1070>
  402452:	add    eax,0x4
  402455:	cdqe   
  402457:	add    rbx,rax
  40245a:	cmp    rsi,rbx
  40245d:	jae    4023bc <__ctype_b_loc@plt+0xffc>
  402463:	nop    DWORD PTR [rax+rax*1+0x0]
  402468:	test   bpl,bpl
  40246b:	je     402474 <__ctype_b_loc@plt+0x10b4>
  40246d:	mov    QWORD PTR [rip+0x3c54],r11        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  402474:	mov    r11,QWORD PTR [r8+0x8]
  402478:	mov    QWORD PTR [rip+0x3c59],r8        # 4060d8 <__ctype_b_loc@plt+0x4d18>
  40247f:	test   r11,r11
  402482:	je     402527 <__ctype_b_loc@plt+0x1167>
  402488:	xor    ebp,ebp
  40248a:	xor    ebx,ebx
  40248c:	mov    r12d,0x4
  402492:	jmp    4024b8 <__ctype_b_loc@plt+0x10f8>
  402494:	nop    DWORD PTR [rax+0x0]
  402498:	inc    rbx
  40249b:	cmp    rsi,rbx
  40249e:	jb     40251b <__ctype_b_loc@plt+0x115b>
  4024a0:	mov    rax,QWORD PTR [r11+0x8]
  4024a4:	mov    r8,r11
  4024a7:	mov    ebp,0x1
  4024ac:	test   rax,rax
  4024af:	je     402590 <__ctype_b_loc@plt+0x11d0>
  4024b5:	mov    r11,rax
  4024b8:	test   rdi,rdi
  4024bb:	jne    402498 <__ctype_b_loc@plt+0x10d8>
  4024bd:	mov    r10,QWORD PTR [r11]
  4024c0:	test   r10,r10
  4024c3:	je     4025a9 <__ctype_b_loc@plt+0x11e9>
  4024c9:	movzx  r9d,BYTE PTR [r10]
  4024cd:	test   r9b,r9b
  4024d0:	je     4025a9 <__ctype_b_loc@plt+0x11e9>
  4024d6:	inc    r10
  4024d9:	mov    rdx,r10
  4024dc:	mov    eax,r9d
  4024df:	xor    ecx,ecx
  4024e1:	nop    DWORD PTR [rax+0x0]
  4024e8:	and    eax,0xc0
  4024ed:	cmp    eax,0x80
  4024f2:	setne  al
  4024f5:	movzx  eax,al
  4024f8:	inc    rdx
  4024fb:	add    ecx,eax
  4024fd:	movzx  eax,BYTE PTR [rdx-0x1]
  402501:	test   al,al
  402503:	jne    4024e8 <__ctype_b_loc@plt+0x1128>
  402505:	add    ecx,0x4
  402508:	movsxd rcx,ecx
  40250b:	mov    rax,rsi
  40250e:	cmp    rsi,rcx
  402511:	ja     402544 <__ctype_b_loc@plt+0x1184>
  402513:	add    rbx,rax
  402516:	cmp    rsi,rbx
  402519:	jae    4024a0 <__ctype_b_loc@plt+0x10e0>
  40251b:	test   bpl,bpl
  40251e:	je     402527 <__ctype_b_loc@plt+0x1167>
  402520:	mov    QWORD PTR [rip+0x3bb1],r8        # 4060d8 <__ctype_b_loc@plt+0x4d18>
  402527:	mov    rax,QWORD PTR [rsp+0x8]
  40252c:	xor    rax,QWORD PTR fs:0x28
  402535:	jne    4025c9 <__ctype_b_loc@plt+0x1209>
  40253b:	add    rsp,0x10
  40253f:	pop    rbx
  402540:	pop    rbp
  402541:	pop    r12
  402543:	ret    
  402544:	xor    eax,eax
  402546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402550:	and    r9d,0xc0
  402557:	xor    edx,edx
  402559:	cmp    r9d,0x80
  402560:	setne  dl
  402563:	inc    r10
  402566:	movzx  r9d,BYTE PTR [r10-0x1]
  40256b:	add    eax,edx
  40256d:	test   r9b,r9b
  402570:	jne    402550 <__ctype_b_loc@plt+0x1190>
  402572:	add    eax,0x4
  402575:	cdqe   
  402577:	jmp    402513 <__ctype_b_loc@plt+0x1153>
  402579:	nop    DWORD PTR [rax+0x0]
  402580:	mov    QWORD PTR [rip+0x3b3d],0x0        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  40258b:	jmp    402474 <__ctype_b_loc@plt+0x10b4>
  402590:	mov    QWORD PTR [rip+0x3b41],r11        # 4060d8 <__ctype_b_loc@plt+0x4d18>
  402597:	jmp    402527 <__ctype_b_loc@plt+0x1167>
  402599:	cmp    rsi,0x4
  40259d:	mov    rax,r12
  4025a0:	cmovbe rax,rsi
  4025a4:	jmp    4023b0 <__ctype_b_loc@plt+0xff0>
  4025a9:	cmp    rsi,0x4
  4025ad:	mov    rax,r12
  4025b0:	cmovbe rax,rsi
  4025b4:	jmp    402513 <__ctype_b_loc@plt+0x1153>
  4025b9:	mov    QWORD PTR [rip+0x3b14],0x0        # 4060d8 <__ctype_b_loc@plt+0x4d18>
  4025c4:	jmp    402527 <__ctype_b_loc@plt+0x1167>
  4025c9:	call   401250 <__stack_chk_fail@plt>
  4025ce:	xchg   ax,ax
  4025d0:	push   rax
  4025d1:	pop    rax
  4025d2:	lea    rdi,[rip+0x1a27]        # 404000 <__ctype_b_loc@plt+0x2c40>
  4025d9:	mov    edx,0x48
  4025de:	mov    esi,0x1
  4025e3:	sub    rsp,0x18
  4025e7:	mov    rax,QWORD PTR fs:0x28
  4025f0:	mov    QWORD PTR [rsp+0x8],rax
  4025f5:	xor    eax,eax
  4025f7:	mov    rax,QWORD PTR [rip+0x39fa]        # 405ff8 <__ctype_b_loc@plt+0x4c38>
  4025fe:	mov    rcx,QWORD PTR [rax]
  402601:	call   401390 <fwrite@plt>
  402606:	mov    edi,0x2
  40260b:	call   401380 <exit@plt>
  402610:	push   rbx
  402611:	lea    rdx,[rip+0x3a68]        # 406080 <__ctype_b_loc@plt+0x4cc0>
  402618:	mov    rbx,rdi
  40261b:	sub    rsp,0x10
  40261f:	xor    esi,esi
  402621:	xor    edi,edi
  402623:	mov    rax,QWORD PTR fs:0x28
  40262c:	mov    QWORD PTR [rsp+0x8],rax
  402631:	xor    eax,eax
  402633:	call   401340 <tcsetattr@plt>
  402638:	mov    rax,QWORD PTR [rip+0x39b9]        # 405ff8 <__ctype_b_loc@plt+0x4c38>
  40263f:	mov    rcx,rbx
  402642:	mov    rdi,QWORD PTR [rax]
  402645:	lea    rdx,[rip+0x19fd]        # 404049 <__ctype_b_loc@plt+0x2c89>
  40264c:	mov    esi,0x1
  402651:	xor    eax,eax
  402653:	call   4013a0 <__fprintf_chk@plt>
  402658:	mov    edi,0x2
  40265d:	call   401380 <exit@plt>
  402662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40266c:	nop    DWORD PTR [rax+0x0]
  402670:	push   r15
  402672:	push   r14
  402674:	push   r13
  402676:	push   r12
  402678:	push   rbp
  402679:	push   rbx
  40267a:	sub    rsp,0x1000
  402681:	or     QWORD PTR [rsp],0x0
  402686:	sub    rsp,0x1000
  40268d:	or     QWORD PTR [rsp],0x0
  402692:	sub    rsp,0x28
  402696:	xor    r13d,r13d
  402699:	xor    r14d,r14d
  40269c:	xor    ebp,ebp
  40269e:	mov    rax,QWORD PTR fs:0x28
  4026a7:	mov    QWORD PTR [rsp+0x2018],rax
  4026af:	xor    eax,eax
  4026b1:	lea    r12,[rsp+0x10]
  4026b6:	mov    QWORD PTR [rsp],0x0
  4026be:	mov    QWORD PTR [rsp+0x8],0x0
  4026c7:	jmp    402715 <__ctype_b_loc@plt+0x1355>
  4026c9:	nop    DWORD PTR [rax+0x0]
  4026d0:	mov    esi,0xa
  4026d5:	mov    rdi,r12
  4026d8:	call   401260 <strchr@plt>
  4026dd:	test   rax,rax
  4026e0:	je     4026e5 <__ctype_b_loc@plt+0x1325>
  4026e2:	mov    BYTE PTR [rax],0x0
  4026e5:	mov    rdi,r12
  4026e8:	call   4013b0 <strdup@plt>
  4026ed:	add    rbx,r13
  4026f0:	mov    r15,rax
  4026f3:	mov    QWORD PTR [rbx],rax
  4026f6:	test   rax,rax
  4026f9:	je     402869 <__ctype_b_loc@plt+0x14a9>
  4026ff:	mov    rdi,rax
  402702:	call   401240 <strlen@plt>
  402707:	cmp    rax,QWORD PTR [rsp]
  40270b:	ja     402790 <__ctype_b_loc@plt+0x13d0>
  402711:	add    r13,0x18
  402715:	mov    rax,QWORD PTR [rip+0x38bc]        # 405fd8 <__ctype_b_loc@plt+0x4c18>
  40271c:	mov    esi,0x2000
  402721:	mov    rdx,QWORD PTR [rax]
  402724:	mov    rdi,r12
  402727:	call   4012c0 <fgets@plt>
  40272c:	test   rax,rax
  40272f:	je     4027d9 <__ctype_b_loc@plt+0x1419>
  402735:	movabs rax,0xaaaaaaaaaaaaaaab
  40273f:	mul    r14
  402742:	inc    rbp
  402745:	mov    rbx,QWORD PTR [rip+0x39a4]        # 4060f0 <__ctype_b_loc@plt+0x4d30>
  40274c:	shr    rdx,0x4
  402750:	cmp    rbp,rdx
  402753:	jb     4026d0 <__ctype_b_loc@plt+0x1310>
  402759:	add    r14,0x2000
  402760:	mov    rdi,rbx
  402763:	mov    rsi,r14
  402766:	call   401300 <realloc@plt>
  40276b:	mov    rbx,rax
  40276e:	mov    QWORD PTR [rip+0x397b],rax        # 4060f0 <__ctype_b_loc@plt+0x4d30>
  402775:	test   rax,rax
  402778:	jne    4026d0 <__ctype_b_loc@plt+0x1310>
  40277e:	lea    rdi,[rip+0x18c8]        # 40404d <__ctype_b_loc@plt+0x2c8d>
  402785:	call   402610 <__ctype_b_loc@plt+0x1250>
  40278a:	nop    WORD PTR [rax+rax*1+0x0]
  402790:	movzx  eax,BYTE PTR [r15]
  402794:	test   al,al
  402796:	je     40285e <__ctype_b_loc@plt+0x149e>
  40279c:	lea    rdx,[r15+0x1]
  4027a0:	xor    ecx,ecx
  4027a2:	nop    WORD PTR [rax+rax*1+0x0]
  4027a8:	and    eax,0xc0
  4027ad:	cmp    eax,0x80
  4027b2:	setne  al
  4027b5:	movzx  eax,al
  4027b8:	inc    rdx
  4027bb:	add    ecx,eax
  4027bd:	movzx  eax,BYTE PTR [rdx-0x1]
  4027c1:	test   al,al
  4027c3:	jne    4027a8 <__ctype_b_loc@plt+0x13e8>
  4027c5:	add    ecx,0x4
  4027c8:	movsxd rax,ecx
  4027cb:	mov    QWORD PTR [rsp],rax
  4027cf:	mov    QWORD PTR [rsp+0x8],r15
  4027d4:	jmp    402711 <__ctype_b_loc@plt+0x1351>
  4027d9:	mov    rax,QWORD PTR [rip+0x3910]        # 4060f0 <__ctype_b_loc@plt+0x4d30>
  4027e0:	test   rax,rax
  4027e3:	je     4027f2 <__ctype_b_loc@plt+0x1432>
  4027e5:	lea    rdx,[rbp+rbp*2+0x0]
  4027ea:	mov    QWORD PTR [rax+rdx*8],0x0
  4027f2:	mov    rsi,QWORD PTR [rsp+0x8]
  4027f7:	test   rsi,rsi
  4027fa:	je     402865 <__ctype_b_loc@plt+0x14a5>
  4027fc:	movzx  eax,BYTE PTR [rsi]
  4027ff:	test   al,al
  402801:	je     402865 <__ctype_b_loc@plt+0x14a5>
  402803:	inc    rsi
  402806:	mov    rdx,rsi
  402809:	xor    ecx,ecx
  40280b:	nop    DWORD PTR [rax+rax*1+0x0]
  402810:	and    eax,0xc0
  402815:	cmp    eax,0x80
  40281a:	setne  al
  40281d:	movzx  eax,al
  402820:	inc    rdx
  402823:	add    ecx,eax
  402825:	movzx  eax,BYTE PTR [rdx-0x1]
  402829:	test   al,al
  40282b:	jne    402810 <__ctype_b_loc@plt+0x1450>
  40282d:	lea    eax,[rcx+0x4]
  402830:	cdqe   
  402832:	mov    QWORD PTR [rip+0x38d7],rax        # 406110 <__ctype_b_loc@plt+0x4d50>
  402839:	mov    rax,QWORD PTR [rsp+0x2018]
  402841:	xor    rax,QWORD PTR fs:0x28
  40284a:	jne    402875 <__ctype_b_loc@plt+0x14b5>
  40284c:	add    rsp,0x2028
  402853:	pop    rbx
  402854:	pop    rbp
  402855:	pop    r12
  402857:	pop    r13
  402859:	pop    r14
  40285b:	pop    r15
  40285d:	ret    
  40285e:	xor    ecx,ecx
  402860:	jmp    4027c5 <__ctype_b_loc@plt+0x1405>
  402865:	xor    ecx,ecx
  402867:	jmp    40282d <__ctype_b_loc@plt+0x146d>
  402869:	lea    rdi,[rip+0x17ec]        # 40405c <__ctype_b_loc@plt+0x2c9c>
  402870:	call   402610 <__ctype_b_loc@plt+0x1250>
  402875:	call   401250 <__stack_chk_fail@plt>
  40287a:	nop    WORD PTR [rax+rax*1+0x0]
  402880:	push   r15
  402882:	push   r14
  402884:	push   r13
  402886:	push   r12
  402888:	push   rbp
  402889:	push   rbx
  40288a:	sub    rsp,0x1000
  402891:	or     QWORD PTR [rsp],0x0
  402896:	sub    rsp,0x1000
  40289d:	or     QWORD PTR [rsp],0x0
  4028a2:	sub    rsp,0x58
  4028a6:	lea    rsi,[rip+0x3893]        # 406140 <__ctype_b_loc@plt+0x4d80>
  4028ad:	mov    edx,0x2000
  4028b2:	lea    rcx,[rsp+0x40]
  4028b7:	mov    rdi,rcx
  4028ba:	mov    rax,QWORD PTR fs:0x28
  4028c3:	mov    QWORD PTR [rsp+0x2048],rax
  4028cb:	xor    eax,eax
  4028cd:	call   401310 <__strcpy_chk@plt>
  4028d2:	mov    rdi,rax
  4028d5:	lea    rsi,[rip+0x178e]        # 40406a <__ctype_b_loc@plt+0x2caa>
  4028dc:	call   401360 <strtok@plt>
  4028e1:	test   rax,rax
  4028e4:	je     402c5c <__ctype_b_loc@plt+0x189c>
  4028ea:	mov    r12,QWORD PTR [rip+0x3737]        # 406028 <__ctype_b_loc@plt+0x4c68>
  4028f1:	mov    r13,rax
  4028f4:	xor    ebx,ebx
  4028f6:	xor    r14d,r14d
  4028f9:	lea    rbp,[rip+0x176a]        # 40406a <__ctype_b_loc@plt+0x2caa>
  402900:	mov    eax,DWORD PTR [rip+0x372a]        # 406030 <__ctype_b_loc@plt+0x4c70>
  402906:	inc    r14d
  402909:	cmp    eax,r14d
  40290c:	jge    40293b <__ctype_b_loc@plt+0x157b>
  40290e:	inc    eax
  402910:	mov    DWORD PTR [rip+0x371a],eax        # 406030 <__ctype_b_loc@plt+0x4c70>
  402916:	cdqe   
  402918:	mov    rdi,r12
  40291b:	lea    rsi,[rax*8+0x0]
  402923:	call   401300 <realloc@plt>
  402928:	mov    r12,rax
  40292b:	mov    QWORD PTR [rip+0x36f6],rax        # 406028 <__ctype_b_loc@plt+0x4c68>
  402932:	test   rax,rax
  402935:	je     402c79 <__ctype_b_loc@plt+0x18b9>
  40293b:	mov    QWORD PTR [r12+rbx*1],r13
  40293f:	mov    rsi,rbp
  402942:	xor    edi,edi
  402944:	call   401360 <strtok@plt>
  402949:	mov    r13,rax
  40294c:	add    rbx,0x8
  402950:	test   rax,rax
  402953:	jne    402900 <__ctype_b_loc@plt+0x1540>
  402955:	mov    rdi,QWORD PTR [r12]
  402959:	mov    DWORD PTR [rsp+0xc],r14d
  40295e:	call   401240 <strlen@plt>
  402963:	mov    QWORD PTR [rsp+0x30],rax
  402968:	mov    QWORD PTR [rip+0x376d],0x0        # 4060e0 <__ctype_b_loc@plt+0x4d20>
  402973:	mov    QWORD PTR [rip+0x376a],0x0        # 4060e8 <__ctype_b_loc@plt+0x4d28>
  40297e:	lea    rsi,[rip+0x37bb]        # 406140 <__ctype_b_loc@plt+0x4d80>
  402985:	mov    rdx,rsi
  402988:	mov    ecx,DWORD PTR [rdx]
  40298a:	add    rdx,0x4
  40298e:	lea    eax,[rcx-0x1010101]
  402994:	andn   eax,ecx,eax
  402999:	and    eax,0x80808080
  40299e:	je     402988 <__ctype_b_loc@plt+0x15c8>
  4029a0:	mov    ecx,eax
  4029a2:	shr    ecx,0x10
  4029a5:	test   eax,0x8080
  4029aa:	cmove  eax,ecx
  4029ad:	lea    rcx,[rdx+0x2]
  4029b1:	cmove  rdx,rcx
  4029b5:	mov    ecx,eax
  4029b7:	add    cl,al
  4029b9:	sbb    rdx,0x3
  4029bd:	sub    rdx,rsi
  4029c0:	mov    r12,QWORD PTR [rip+0x3729]        # 4060f0 <__ctype_b_loc@plt+0x4d30>
  4029c7:	lea    rax,[rdx+0x1]
  4029cb:	mov    QWORD PTR [rsp+0x10],rax
  4029d0:	test   r12,r12
  4029d3:	je     402c72 <__ctype_b_loc@plt+0x18b2>
  4029d9:	mov    rax,QWORD PTR [r12]
  4029dd:	test   rax,rax
  4029e0:	je     402b2a <__ctype_b_loc@plt+0x176a>
  4029e6:	mov    eax,DWORD PTR [rsp+0xc]
  4029ea:	mov    QWORD PTR [rsp+0x20],0x0
  4029f3:	mov    QWORD PTR [rsp+0x18],0x0
  4029fc:	mov    QWORD PTR [rsp+0x28],0x0
  402a05:	mov    QWORD PTR [rsp+0x38],0x0
  402a0e:	lea    r13d,[rax-0x1]
  402a12:	nop    WORD PTR [rax+rax*1+0x0]
  402a18:	mov    eax,DWORD PTR [rsp+0xc]
  402a1c:	xor    r15d,r15d
  402a1f:	test   eax,eax
  402a21:	je     402a88 <__ctype_b_loc@plt+0x16c8>
  402a23:	nop    DWORD PTR [rax+rax*1+0x0]
  402a28:	mov    rax,QWORD PTR [rip+0x35f9]        # 406028 <__ctype_b_loc@plt+0x4c68>
  402a2f:	mov    rbx,QWORD PTR [r12]
  402a33:	mov    rbp,QWORD PTR [rax+r15*8]
  402a37:	mov    rdi,rbp
  402a3a:	call   401240 <strlen@plt>
  402a3f:	cmp    BYTE PTR [rbx],0x0
  402a42:	mov    r14,rax
  402a45:	jne    402a58 <__ctype_b_loc@plt+0x1698>
  402a47:	jmp    402ab8 <__ctype_b_loc@plt+0x16f8>
  402a49:	nop    DWORD PTR [rax+0x0]
  402a50:	inc    rbx
  402a53:	cmp    BYTE PTR [rbx],0x0
  402a56:	je     402ab8 <__ctype_b_loc@plt+0x16f8>
  402a58:	mov    rdx,r14
  402a5b:	mov    rsi,rbp
  402a5e:	mov    rdi,rbx
  402a61:	call   QWORD PTR [rip+0x3599]        # 406000 <__ctype_b_loc@plt+0x4c40>
  402a67:	test   eax,eax
  402a69:	jne    402a50 <__ctype_b_loc@plt+0x1690>
  402a6b:	lea    edx,[r15+0x1]
  402a6f:	lea    rax,[r15+0x1]
  402a73:	cmp    r13,r15
  402a76:	je     402b70 <__ctype_b_loc@plt+0x17b0>
  402a7c:	mov    r15,rax
  402a7f:	jmp    402a28 <__ctype_b_loc@plt+0x1668>
  402a81:	nop    DWORD PTR [rax+0x0]
  402a88:	mov    rax,QWORD PTR [rip+0x3651]        # 4060e0 <__ctype_b_loc@plt+0x4d20>
  402a8f:	test   rax,rax
  402a92:	je     402be0 <__ctype_b_loc@plt+0x1820>
  402a98:	mov    QWORD PTR [rax+0x10],r12
  402a9c:	mov    QWORD PTR [r12+0x8],rax
  402aa1:	mov    QWORD PTR [r12+0x10],0x0
  402aaa:	mov    QWORD PTR [rip+0x362f],r12        # 4060e0 <__ctype_b_loc@plt+0x4d20>
  402ab1:	nop    DWORD PTR [rax+0x0]
  402ab8:	add    r12,0x18
  402abc:	je     402ac9 <__ctype_b_loc@plt+0x1709>
  402abe:	cmp    QWORD PTR [r12],0x0
  402ac3:	jne    402a18 <__ctype_b_loc@plt+0x1658>
  402ac9:	mov    rcx,QWORD PTR [rsp+0x38]
  402ace:	mov    rax,QWORD PTR [rip+0x3613]        # 4060e8 <__ctype_b_loc@plt+0x4d28>
  402ad5:	test   rcx,rcx
  402ad8:	je     402c36 <__ctype_b_loc@plt+0x1876>
  402ade:	test   rax,rax
  402ae1:	je     402c17 <__ctype_b_loc@plt+0x1857>
  402ae7:	mov    rdx,QWORD PTR [rip+0x35f2]        # 4060e0 <__ctype_b_loc@plt+0x4d20>
  402aee:	mov    QWORD PTR [rdx+0x10],rcx
  402af2:	mov    QWORD PTR [rcx+0x8],rdx
  402af6:	mov    rcx,QWORD PTR [rsp+0x18]
  402afb:	cmp    QWORD PTR [rsp+0x28],0x0
  402b01:	mov    QWORD PTR [rip+0x35d8],rcx        # 4060e0 <__ctype_b_loc@plt+0x4d20>
  402b08:	je     402b2a <__ctype_b_loc@plt+0x176a>
  402b0a:	mov    rdx,QWORD PTR [rip+0x35cf]        # 4060e0 <__ctype_b_loc@plt+0x4d20>
  402b11:	mov    rcx,QWORD PTR [rsp+0x28]
  402b16:	mov    QWORD PTR [rdx+0x10],rcx
  402b1a:	mov    QWORD PTR [rcx+0x8],rdx
  402b1e:	mov    rcx,QWORD PTR [rsp+0x20]
  402b23:	mov    QWORD PTR [rip+0x35b6],rcx        # 4060e0 <__ctype_b_loc@plt+0x4d20>
  402b2a:	mov    QWORD PTR [rip+0x358f],rax        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  402b31:	mov    QWORD PTR [rip+0x3598],rax        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  402b38:	call   402340 <__ctype_b_loc@plt+0xf80>
  402b3d:	mov    rax,QWORD PTR [rsp+0x2048]
  402b45:	xor    rax,QWORD PTR fs:0x28
  402b4e:	jne    402c85 <__ctype_b_loc@plt+0x18c5>
  402b54:	add    rsp,0x2058
  402b5b:	pop    rbx
  402b5c:	pop    rbp
  402b5d:	pop    r12
  402b5f:	pop    r13
  402b61:	pop    r14
  402b63:	pop    r15
  402b65:	ret    
  402b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402b70:	cmp    edx,DWORD PTR [rsp+0xc]
  402b74:	jne    402ab8 <__ctype_b_loc@plt+0x16f8>
  402b7a:	mov    rdx,QWORD PTR [rsp+0x10]
  402b7f:	mov    rsi,QWORD PTR [r12]
  402b83:	lea    rdi,[rip+0x35b6]        # 406140 <__ctype_b_loc@plt+0x4d80>
  402b8a:	call   QWORD PTR [rip+0x3470]        # 406000 <__ctype_b_loc@plt+0x4c40>
  402b90:	test   eax,eax
  402b92:	je     402a88 <__ctype_b_loc@plt+0x16c8>
  402b98:	mov    rax,QWORD PTR [rip+0x3489]        # 406028 <__ctype_b_loc@plt+0x4c68>
  402b9f:	mov    rdx,QWORD PTR [rsp+0x30]
  402ba4:	mov    rsi,QWORD PTR [r12]
  402ba8:	mov    rdi,QWORD PTR [rax]
  402bab:	call   QWORD PTR [rip+0x344f]        # 406000 <__ctype_b_loc@plt+0x4c40>
  402bb1:	test   eax,eax
  402bb3:	jne    402bec <__ctype_b_loc@plt+0x182c>
  402bb5:	mov    rax,QWORD PTR [rsp+0x18]
  402bba:	test   rax,rax
  402bbd:	je     402c28 <__ctype_b_loc@plt+0x1868>
  402bbf:	mov    QWORD PTR [rax+0x10],r12
  402bc3:	mov    rax,QWORD PTR [rsp+0x18]
  402bc8:	mov    QWORD PTR [r12+0x10],0x0
  402bd1:	mov    QWORD PTR [r12+0x8],rax
  402bd6:	mov    QWORD PTR [rsp+0x18],r12
  402bdb:	jmp    402ab8 <__ctype_b_loc@plt+0x16f8>
  402be0:	mov    QWORD PTR [rip+0x3501],r12        # 4060e8 <__ctype_b_loc@plt+0x4d28>
  402be7:	jmp    402a9c <__ctype_b_loc@plt+0x16dc>
  402bec:	mov    rax,QWORD PTR [rsp+0x20]
  402bf1:	test   rax,rax
  402bf4:	je     402c2f <__ctype_b_loc@plt+0x186f>
  402bf6:	mov    QWORD PTR [rax+0x10],r12
  402bfa:	mov    rax,QWORD PTR [rsp+0x20]
  402bff:	mov    QWORD PTR [r12+0x10],0x0
  402c08:	mov    QWORD PTR [r12+0x8],rax
  402c0d:	mov    QWORD PTR [rsp+0x20],r12
  402c12:	jmp    402ab8 <__ctype_b_loc@plt+0x16f8>
  402c17:	mov    rax,QWORD PTR [rsp+0x38]
  402c1c:	mov    QWORD PTR [rip+0x34c5],rax        # 4060e8 <__ctype_b_loc@plt+0x4d28>
  402c23:	jmp    402af6 <__ctype_b_loc@plt+0x1736>
  402c28:	mov    QWORD PTR [rsp+0x38],r12
  402c2d:	jmp    402bc3 <__ctype_b_loc@plt+0x1803>
  402c2f:	mov    QWORD PTR [rsp+0x28],r12
  402c34:	jmp    402bfa <__ctype_b_loc@plt+0x183a>
  402c36:	cmp    QWORD PTR [rsp+0x28],0x0
  402c3c:	je     402b2a <__ctype_b_loc@plt+0x176a>
  402c42:	test   rax,rax
  402c45:	jne    402b0a <__ctype_b_loc@plt+0x174a>
  402c4b:	mov    rax,QWORD PTR [rsp+0x28]
  402c50:	mov    QWORD PTR [rip+0x3491],rax        # 4060e8 <__ctype_b_loc@plt+0x4d28>
  402c57:	jmp    402b1e <__ctype_b_loc@plt+0x175e>
  402c5c:	mov    DWORD PTR [rsp+0xc],0x0
  402c64:	mov    QWORD PTR [rsp+0x30],0x0
  402c6d:	jmp    402968 <__ctype_b_loc@plt+0x15a8>
  402c72:	xor    eax,eax
  402c74:	jmp    402b2a <__ctype_b_loc@plt+0x176a>
  402c79:	lea    rdi,[rip+0x13cd]        # 40404d <__ctype_b_loc@plt+0x2c8d>
  402c80:	call   402610 <__ctype_b_loc@plt+0x1250>
  402c85:	call   401250 <__stack_chk_fail@plt>
  402c8a:	nop    WORD PTR [rax+rax*1+0x0]
  402c90:	push   r13
  402c92:	lea    rcx,[rip+0x34a7]        # 406140 <__ctype_b_loc@plt+0x4d80>
  402c99:	push   r12
  402c9b:	push   rbp
  402c9c:	mov    rbp,rdi
  402c9f:	mov    rdi,rcx
  402ca2:	push   rbx
  402ca3:	mov    rbx,rsi
  402ca6:	sub    rsp,0x18
  402caa:	mov    rax,QWORD PTR fs:0x28
  402cb3:	mov    QWORD PTR [rsp+0x8],rax
  402cb8:	xor    eax,eax
  402cba:	mov    rax,rcx
  402cbd:	mov    esi,DWORD PTR [rax]
  402cbf:	add    rax,0x4
  402cc3:	lea    edx,[rsi-0x1010101]
  402cc9:	andn   edx,esi,edx
  402cce:	and    edx,0x80808080
  402cd4:	je     402cbd <__ctype_b_loc@plt+0x18fd>
  402cd6:	mov    esi,edx
  402cd8:	shr    esi,0x10
  402cdb:	test   edx,0x8080
  402ce1:	cmove  edx,esi
  402ce4:	lea    rsi,[rax+0x2]
  402ce8:	cmove  rax,rsi
  402cec:	mov    esi,edx
  402cee:	add    sil,dl
  402cf1:	sbb    rax,0x3
  402cf5:	sub    rax,rcx
  402cf8:	add    rax,rbx
  402cfb:	cmp    rax,0x1fff
  402d01:	ja     402d60 <__ctype_b_loc@plt+0x19a0>
  402d03:	mov    rax,QWORD PTR [rip+0x33f6]        # 406100 <__ctype_b_loc@plt+0x4d40>
  402d0a:	mov    edx,0x2000
  402d0f:	lea    r13,[rdi+rax*1]
  402d13:	sub    rdx,rax
  402d16:	lea    r12,[rbx+rax*1]
  402d1a:	test   rbx,rbx
  402d1d:	mov    eax,0x0
  402d22:	cmovns rax,rbx
  402d26:	mov    rsi,r13
  402d29:	sub    rdx,rax
  402d2c:	add    rdi,r12
  402d2f:	call   401320 <memmove@plt>
  402d34:	test   rbx,rbx
  402d37:	jg     402d80 <__ctype_b_loc@plt+0x19c0>
  402d39:	mov    QWORD PTR [rip+0x33c0],r12        # 406100 <__ctype_b_loc@plt+0x4d40>
  402d40:	mov    rax,QWORD PTR [rsp+0x8]
  402d45:	xor    rax,QWORD PTR fs:0x28
  402d4e:	jne    402d90 <__ctype_b_loc@plt+0x19d0>
  402d50:	add    rsp,0x18
  402d54:	pop    rbx
  402d55:	pop    rbp
  402d56:	pop    r12
  402d58:	pop    r13
  402d5a:	jmp    402880 <__ctype_b_loc@plt+0x14c0>
  402d5f:	nop
  402d60:	mov    rax,QWORD PTR [rsp+0x8]
  402d65:	xor    rax,QWORD PTR fs:0x28
  402d6e:	jne    402d90 <__ctype_b_loc@plt+0x19d0>
  402d70:	add    rsp,0x18
  402d74:	pop    rbx
  402d75:	pop    rbp
  402d76:	pop    r12
  402d78:	pop    r13
  402d7a:	ret    
  402d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  402d80:	mov    rdx,rbx
  402d83:	mov    rsi,rbp
  402d86:	mov    rdi,r13
  402d89:	call   4012e0 <memcpy@plt>
  402d8e:	jmp    402d39 <__ctype_b_loc@plt+0x1979>
  402d90:	call   401250 <__stack_chk_fail@plt>
  402d95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d9f:	nop
  402da0:	sub    rsp,0x18
  402da4:	mov    rax,QWORD PTR fs:0x28
  402dad:	mov    QWORD PTR [rsp+0x8],rax
  402db2:	xor    eax,eax
  402db4:	mov    rax,QWORD PTR [rip+0x323d]        # 405ff8 <__ctype_b_loc@plt+0x4c38>
  402dbb:	mov    rdi,QWORD PTR [rax]
  402dbe:	mov    eax,DWORD PTR [rip+0x336c]        # 406130 <__ctype_b_loc@plt+0x4d70>
  402dc4:	test   eax,eax
  402dc6:	je     402e10 <__ctype_b_loc@plt+0x1a50>
  402dc8:	mov    ecx,0x0
  402dcd:	jle    402e00 <__ctype_b_loc@plt+0x1a40>
  402dcf:	mov    rax,QWORD PTR [rsp+0x8]
  402dd4:	xor    rax,QWORD PTR fs:0x28
  402ddd:	jne    402e3e <__ctype_b_loc@plt+0x1a7e>
  402ddf:	lea    rdx,[rip+0x1286]        # 40406c <__ctype_b_loc@plt+0x2cac>
  402de6:	mov    esi,0x1
  402deb:	xor    eax,eax
  402ded:	add    rsp,0x18
  402df1:	jmp    4013a0 <__fprintf_chk@plt>
  402df6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e00:	mov    rcx,QWORD PTR [rip+0x3319]        # 406120 <__ctype_b_loc@plt+0x4d60>
  402e07:	sub    rcx,QWORD PTR [rip+0x330a]        # 406118 <__ctype_b_loc@plt+0x4d58>
  402e0e:	jmp    402dcf <__ctype_b_loc@plt+0x1a0f>
  402e10:	mov    rax,QWORD PTR [rsp+0x8]
  402e15:	xor    rax,QWORD PTR fs:0x28
  402e1e:	jne    402e3e <__ctype_b_loc@plt+0x1a7e>
  402e20:	mov    rcx,QWORD PTR [rip+0x32f1]        # 406118 <__ctype_b_loc@plt+0x4d58>
  402e27:	lea    rdx,[rip+0x1245]        # 404073 <__ctype_b_loc@plt+0x2cb3>
  402e2e:	mov    esi,0x1
  402e33:	xor    eax,eax
  402e35:	add    rsp,0x18
  402e39:	jmp    4013a0 <__fprintf_chk@plt>
  402e3e:	call   401250 <__stack_chk_fail@plt>
  402e43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e4d:	nop    DWORD PTR [rax]
  402e50:	push   r15
  402e52:	push   r14
  402e54:	lea    r14,[rsi-0x4]
  402e58:	push   r13
  402e5a:	push   r12
  402e5c:	mov    r12d,edx
  402e5f:	push   rbp
  402e60:	mov    rbp,rsi
  402e63:	sub    rsi,0x3
  402e67:	push   rbx
  402e68:	mov    rbx,rdi
  402e6b:	mov    edi,0x1
  402e70:	sub    rsp,0x18
  402e74:	mov    rax,QWORD PTR fs:0x28
  402e7d:	mov    QWORD PTR [rsp+0x8],rax
  402e82:	xor    eax,eax
  402e84:	call   4012d0 <calloc@plt>
  402e89:	test   rax,rax
  402e8c:	je     402fb1 <__ctype_b_loc@plt+0x1bf1>
  402e92:	mov    r13,rax
  402e95:	cmp    r12d,0x1
  402e99:	je     402f90 <__ctype_b_loc@plt+0x1bd0>
  402e9f:	lea    r15,[rip+0x11a6]        # 40404c <__ctype_b_loc@plt+0x2c8c>
  402ea6:	mov    r12,r15
  402ea9:	mov    rdx,r14
  402eac:	mov    esi,0x20
  402eb1:	mov    rdi,r13
  402eb4:	call   401270 <memset@plt>
  402eb9:	mov    BYTE PTR [r13+rbp*1-0x4],0x0
  402ebf:	mov    rdi,rbx
  402ec2:	call   401240 <strlen@plt>
  402ec7:	cmp    r14,rax
  402eca:	cmovbe rax,r14
  402ece:	mov    rdi,r13
  402ed1:	mov    rdx,rax
  402ed4:	mov    rsi,rbx
  402ed7:	call   4012e0 <memcpy@plt>
  402edc:	movzx  eax,BYTE PTR [rbx]
  402edf:	lea    rdi,[rbx+0x1]
  402ee3:	xor    edx,edx
  402ee5:	test   al,al
  402ee7:	je     402fa7 <__ctype_b_loc@plt+0x1be7>
  402eed:	nop    DWORD PTR [rax]
  402ef0:	and    eax,0xc0
  402ef5:	cmp    eax,0x80
  402efa:	setne  al
  402efd:	movzx  eax,al
  402f00:	inc    rdi
  402f03:	add    edx,eax
  402f05:	movzx  eax,BYTE PTR [rdi-0x1]
  402f09:	test   al,al
  402f0b:	jne    402ef0 <__ctype_b_loc@plt+0x1b30>
  402f0d:	add    edx,0x4
  402f10:	movsxd rdx,edx
  402f13:	cmp    rbp,rdx
  402f16:	jae    402f3e <__ctype_b_loc@plt+0x1b7e>
  402f18:	cmp    r14,0x4
  402f1c:	je     402fa3 <__ctype_b_loc@plt+0x1be3>
  402f22:	sub    rbp,0x8
  402f26:	cmp    r14,rbp
  402f29:	jbe    402f3e <__ctype_b_loc@plt+0x1b7e>
  402f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f30:	mov    BYTE PTR [r13+rbp*1+0x0],0x2e
  402f36:	inc    rbp
  402f39:	cmp    r14,rbp
  402f3c:	ja     402f30 <__ctype_b_loc@plt+0x1b70>
  402f3e:	mov    rax,QWORD PTR [rip+0x30b3]        # 405ff8 <__ctype_b_loc@plt+0x4c38>
  402f45:	mov    r9,r15
  402f48:	mov    rdi,QWORD PTR [rax]
  402f4b:	mov    r8,r13
  402f4e:	xor    eax,eax
  402f50:	mov    rcx,r12
  402f53:	lea    rdx,[rip+0x1138]        # 404092 <__ctype_b_loc@plt+0x2cd2>
  402f5a:	mov    esi,0x1
  402f5f:	call   4013a0 <__fprintf_chk@plt>
  402f64:	mov    rax,QWORD PTR [rsp+0x8]
  402f69:	xor    rax,QWORD PTR fs:0x28
  402f72:	jne    402fbd <__ctype_b_loc@plt+0x1bfd>
  402f74:	add    rsp,0x18
  402f78:	pop    rbx
  402f79:	pop    rbp
  402f7a:	pop    r12
  402f7c:	mov    rdi,r13
  402f7f:	pop    r13
  402f81:	pop    r14
  402f83:	pop    r15
  402f85:	jmp    401200 <free@plt>
  402f8a:	nop    WORD PTR [rax+rax*1+0x0]
  402f90:	lea    r15,[rip+0x10e3]        # 40407a <__ctype_b_loc@plt+0x2cba>
  402f97:	lea    r12,[rip+0x10e1]        # 40407f <__ctype_b_loc@plt+0x2cbf>
  402f9e:	jmp    402ea9 <__ctype_b_loc@plt+0x1ae9>
  402fa3:	xor    ebp,ebp
  402fa5:	jmp    402f30 <__ctype_b_loc@plt+0x1b70>
  402fa7:	mov    edx,0x4
  402fac:	jmp    402f13 <__ctype_b_loc@plt+0x1b53>
  402fb1:	lea    rdi,[rip+0x10cc]        # 404084 <__ctype_b_loc@plt+0x2cc4>
  402fb8:	call   402610 <__ctype_b_loc@plt+0x1250>
  402fbd:	call   401250 <__stack_chk_fail@plt>
  402fc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402fcc:	nop    DWORD PTR [rax+0x0]
  402fd0:	push   r13
  402fd2:	lea    rdx,[rip+0x10a1]        # 40407a <__ctype_b_loc@plt+0x2cba>
  402fd9:	mov    esi,0x1
  402fde:	push   r12
  402fe0:	push   rbp
  402fe1:	push   rbx
  402fe2:	sub    rsp,0x18
  402fe6:	mov    rax,QWORD PTR fs:0x28
  402fef:	mov    QWORD PTR [rsp+0x8],rax
  402ff4:	xor    eax,eax
  402ff6:	mov    rbx,QWORD PTR [rip+0x2ffb]        # 405ff8 <__ctype_b_loc@plt+0x4c38>
  402ffd:	mov    rdi,QWORD PTR [rbx]
  403000:	call   4013a0 <__fprintf_chk@plt>
  403005:	mov    rdi,QWORD PTR [rbx]
  403008:	lea    rdx,[rip+0x108e]        # 40409d <__ctype_b_loc@plt+0x2cdd>
  40300f:	mov    esi,0x1
  403014:	xor    eax,eax
  403016:	call   4013a0 <__fprintf_chk@plt>
  40301b:	mov    rdi,QWORD PTR [rbx]
  40301e:	lea    rdx,[rip+0x107e]        # 4040a3 <__ctype_b_loc@plt+0x2ce3>
  403025:	mov    esi,0x1
  40302a:	xor    eax,eax
  40302c:	call   4013a0 <__fprintf_chk@plt>
  403031:	mov    rdi,QWORD PTR [rip+0x30c0]        # 4060f8 <__ctype_b_loc@plt+0x4d38>
  403038:	test   rdi,rdi
  40303b:	je     40304e <__ctype_b_loc@plt+0x1c8e>
  40303d:	mov    rsi,QWORD PTR [rip+0x30c4]        # 406108 <__ctype_b_loc@plt+0x4d48>
  403044:	cmp    rsi,0x4
  403048:	ja     403354 <__ctype_b_loc@plt+0x1f94>
  40304e:	cmp    QWORD PTR [rip+0x30c2],0x0        # 406118 <__ctype_b_loc@plt+0x4d58>
  403056:	jne    4031f0 <__ctype_b_loc@plt+0x1e30>
  40305c:	cmp    QWORD PTR [rip+0x3084],0x0        # 4060e8 <__ctype_b_loc@plt+0x4d28>
  403064:	je     403363 <__ctype_b_loc@plt+0x1fa3>
  40306a:	mov    rsi,QWORD PTR [rip+0x309f]        # 406110 <__ctype_b_loc@plt+0x4d50>
  403071:	mov    r8,QWORD PTR [rip+0x3090]        # 406108 <__ctype_b_loc@plt+0x4d48>
  403078:	cmp    rsi,0x4
  40307c:	ja     403380 <__ctype_b_loc@plt+0x1fc0>
  403082:	mov    rdx,QWORD PTR [rip+0x309f]        # 406128 <__ctype_b_loc@plt+0x4d68>
  403089:	mov    rbp,QWORD PTR [rip+0x3040]        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  403090:	lea    r12,[rdx-0x4]
  403094:	sub    r12,r8
  403097:	sub    r12,QWORD PTR [rip+0x3072]        # 406110 <__ctype_b_loc@plt+0x4d50>
  40309e:	cmp    QWORD PTR [rbp+0x8],0x0
  4030a3:	je     4033b6 <__ctype_b_loc@plt+0x1ff6>
  4030a9:	xor    edx,edx
  4030ab:	mov    esi,0x5
  4030b0:	lea    rdi,[rip+0xff0]        # 4040a7 <__ctype_b_loc@plt+0x2ce7>
  4030b7:	call   402e50 <__ctype_b_loc@plt+0x1a90>
  4030bc:	mov    rbp,QWORD PTR [rip+0x300d]        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  4030c3:	cmp    QWORD PTR [rip+0x2ffe],rbp        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  4030ca:	je     403420 <__ctype_b_loc@plt+0x2060>
  4030d0:	mov    rdi,QWORD PTR [rbp+0x0]
  4030d4:	test   rdi,rdi
  4030d7:	je     403402 <__ctype_b_loc@plt+0x2042>
  4030dd:	movzx  esi,BYTE PTR [rdi]
  4030e0:	test   sil,sil
  4030e3:	je     403143 <__ctype_b_loc@plt+0x1d83>
  4030e5:	lea    r8,[rdi+0x1]
  4030e9:	mov    rdx,r8
  4030ec:	mov    eax,esi
  4030ee:	xor    ecx,ecx
  4030f0:	and    eax,0xc0
  4030f5:	cmp    eax,0x80
  4030fa:	setne  al
  4030fd:	movzx  eax,al
  403100:	inc    rdx
  403103:	add    ecx,eax
  403105:	movzx  eax,BYTE PTR [rdx-0x1]
  403109:	test   al,al
  40310b:	jne    4030f0 <__ctype_b_loc@plt+0x1d30>
  40310d:	add    ecx,0x4
  403110:	movsxd rcx,ecx
  403113:	cmp    r12,rcx
  403116:	ja     4033d0 <__ctype_b_loc@plt+0x2010>
  40311c:	mov    rsi,r12
  40311f:	cmp    rsi,0x4
  403123:	jbe    403143 <__ctype_b_loc@plt+0x1d83>
  403125:	xor    edx,edx
  403127:	cmp    QWORD PTR [rip+0x2f92],rbp        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  40312e:	sete   dl
  403131:	call   402e50 <__ctype_b_loc@plt+0x1a90>
  403136:	mov    rdi,QWORD PTR [rbp+0x0]
  40313a:	test   rdi,rdi
  40313d:	je     403402 <__ctype_b_loc@plt+0x2042>
  403143:	movzx  eax,BYTE PTR [rdi]
  403146:	xor    edx,edx
  403148:	inc    rdi
  40314b:	test   al,al
  40314d:	je     403402 <__ctype_b_loc@plt+0x2042>
  403153:	nop    DWORD PTR [rax+rax*1+0x0]
  403158:	and    eax,0xc0
  40315d:	cmp    eax,0x80
  403162:	setne  al
  403165:	movzx  eax,al
  403168:	inc    rdi
  40316b:	add    edx,eax
  40316d:	movzx  eax,BYTE PTR [rdi-0x1]
  403171:	test   al,al
  403173:	jne    403158 <__ctype_b_loc@plt+0x1d98>
  403175:	add    edx,0x4
  403178:	movsxd rdx,edx
  40317b:	mov    rax,QWORD PTR [rip+0x2f46]        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  403182:	sub    r12,rdx
  403185:	je     403194 <__ctype_b_loc@plt+0x1dd4>
  403187:	mov    rbp,QWORD PTR [rbp+0x10]
  40318b:	cmp    rbp,rax
  40318e:	jne    4030d0 <__ctype_b_loc@plt+0x1d10>
  403194:	mov    rdi,QWORD PTR [rbx]
  403197:	mov    rdx,QWORD PTR [rip+0x2f8a]        # 406128 <__ctype_b_loc@plt+0x4d68>
  40319e:	mov    r8,QWORD PTR [rip+0x2f63]        # 406108 <__ctype_b_loc@plt+0x4d48>
  4031a5:	test   rax,rax
  4031a8:	je     4032b5 <__ctype_b_loc@plt+0x1ef5>
  4031ae:	lea    rcx,[rdx-0x5]
  4031b2:	mov    esi,0x1
  4031b7:	lea    rdx,[rip+0xeeb]        # 4040a9 <__ctype_b_loc@plt+0x2ce9>
  4031be:	xor    eax,eax
  4031c0:	call   4013a0 <__fprintf_chk@plt>
  4031c5:	xor    edx,edx
  4031c7:	mov    esi,0x5
  4031cc:	lea    rdi,[rip+0xedd]        # 4040b0 <__ctype_b_loc@plt+0x2cf0>
  4031d3:	call   402e50 <__ctype_b_loc@plt+0x1a90>
  4031d8:	mov    r8,QWORD PTR [rip+0x2f29]        # 406108 <__ctype_b_loc@plt+0x4d48>
  4031df:	mov    rdi,QWORD PTR [rbx]
  4031e2:	jmp    4032b5 <__ctype_b_loc@plt+0x1ef5>
  4031e7:	nop    WORD PTR [rax+rax*1+0x0]
  4031f0:	mov    rsi,QWORD PTR [rip+0x2f31]        # 406128 <__ctype_b_loc@plt+0x4d68>
  4031f7:	sub    rsi,QWORD PTR [rip+0x2f0a]        # 406108 <__ctype_b_loc@plt+0x4d48>
  4031fe:	cmp    rsi,0x4
  403202:	ja     403380 <__ctype_b_loc@plt+0x1fc0>
  403208:	mov    eax,DWORD PTR [rip+0x2f22]        # 406130 <__ctype_b_loc@plt+0x4d70>
  40320e:	test   eax,eax
  403210:	jne    40340c <__ctype_b_loc@plt+0x204c>
  403216:	mov    r12,QWORD PTR [rip+0x2eb3]        # 4060d0 <__ctype_b_loc@plt+0x4d10>
  40321d:	xor    ebp,ebp
  40321f:	cmp    r12,QWORD PTR [rip+0x2ea2]        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  403226:	je     403275 <__ctype_b_loc@plt+0x1eb5>
  403228:	lea    r13,[rip+0xe1c]        # 40404b <__ctype_b_loc@plt+0x2c8b>
  40322f:	nop
  403230:	mov    rdi,QWORD PTR [rbx]
  403233:	mov    esi,0x1
  403238:	mov    rdx,r13
  40323b:	xor    eax,eax
  40323d:	call   4013a0 <__fprintf_chk@plt>
  403242:	mov    rsi,QWORD PTR [rip+0x2edf]        # 406128 <__ctype_b_loc@plt+0x4d68>
  403249:	cmp    rsi,0x4
  40324d:	jbe    403264 <__ctype_b_loc@plt+0x1ea4>
  40324f:	xor    edx,edx
  403251:	mov    rdi,QWORD PTR [r12]
  403255:	cmp    QWORD PTR [rip+0x2e64],r12        # 4060c0 <__ctype_b_loc@plt+0x4d00>
  40325c:	sete   dl
  40325f:	call   402e50 <__ctype_b_loc@plt+0x1a90>
  403264:	mov    r12,QWORD PTR [r12+0x10]
  403269:	inc    rbp
  40326c:	cmp    QWORD PTR [rip+0x2e55],r12        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  403273:	jne    403230 <__ctype_b_loc@plt+0x1e70>
  403275:	cmp    QWORD PTR [rip+0x2e9c],rbp        # 406118 <__ctype_b_loc@plt+0x4d58>
  40327c:	lea    r12,[rip+0xe1f]        # 4040a2 <__ctype_b_loc@plt+0x2ce2>
  403283:	jbe    4032a6 <__ctype_b_loc@plt+0x1ee6>
  403285:	nop    DWORD PTR [rax]
  403288:	mov    rdi,QWORD PTR [rbx]
  40328b:	xor    eax,eax
  40328d:	mov    rdx,r12
  403290:	mov    esi,0x1
  403295:	inc    rbp
  403298:	call   4013a0 <__fprintf_chk@plt>
  40329d:	cmp    QWORD PTR [rip+0x2e74],rbp        # 406118 <__ctype_b_loc@plt+0x4d58>
  4032a4:	ja     403288 <__ctype_b_loc@plt+0x1ec8>
  4032a6:	call   402da0 <__ctype_b_loc@plt+0x19e0>
  4032ab:	mov    r8,QWORD PTR [rip+0x2e56]        # 406108 <__ctype_b_loc@plt+0x4d48>
  4032b2:	mov    rdi,QWORD PTR [rbx]
  4032b5:	movzx  eax,BYTE PTR [rip+0x2e84]        # 406140 <__ctype_b_loc@plt+0x4d80>
  4032bc:	mov    rcx,QWORD PTR [rip+0x2e3d]        # 406100 <__ctype_b_loc@plt+0x4d40>
  4032c3:	test   al,al
  4032c5:	je     403416 <__ctype_b_loc@plt+0x2056>
  4032cb:	test   ecx,ecx
  4032cd:	je     403416 <__ctype_b_loc@plt+0x2056>
  4032d3:	lea    rdx,[rip+0x2e67]        # 406141 <__ctype_b_loc@plt+0x4d81>
  4032da:	dec    ecx
  4032dc:	lea    rsi,[rdx+0x1]
  4032e0:	add    rsi,rcx
  4032e3:	xor    ecx,ecx
  4032e5:	jmp    4032f8 <__ctype_b_loc@plt+0x1f38>
  4032e7:	nop    WORD PTR [rax+rax*1+0x0]
  4032f0:	inc    rdx
  4032f3:	cmp    rdx,rsi
  4032f6:	je     403311 <__ctype_b_loc@plt+0x1f51>
  4032f8:	and    eax,0xc0
  4032fd:	cmp    eax,0x80
  403302:	setne  al
  403305:	movzx  eax,al
  403308:	add    ecx,eax
  40330a:	movzx  eax,BYTE PTR [rdx]
  40330d:	test   al,al
  40330f:	jne    4032f0 <__ctype_b_loc@plt+0x1f30>
  403311:	lea    eax,[rcx+0x4]
  403314:	cdqe   
  403316:	lea    rcx,[rax+r8*1-0x1]
  40331b:	lea    rdx,[rip+0xd90]        # 4040b2 <__ctype_b_loc@plt+0x2cf2>
  403322:	xor    eax,eax
  403324:	mov    esi,0x1
  403329:	call   4013a0 <__fprintf_chk@plt>
  40332e:	mov    rax,QWORD PTR [rsp+0x8]
  403333:	xor    rax,QWORD PTR fs:0x28
  40333c:	jne    403428 <__ctype_b_loc@plt+0x2068>
  403342:	mov    rdi,QWORD PTR [rbx]
  403345:	add    rsp,0x18
  403349:	pop    rbx
  40334a:	pop    rbp
  40334b:	pop    r12
  40334d:	pop    r13
  40334f:	jmp    4012f0 <fflush@plt>
  403354:	mov    edx,0x1
  403359:	call   402e50 <__ctype_b_loc@plt+0x1a90>
  40335e:	jmp    40304e <__ctype_b_loc@plt+0x1c8e>
  403363:	mov    rsi,QWORD PTR [rip+0x2dbe]        # 406128 <__ctype_b_loc@plt+0x4d68>
  40336a:	sub    rsi,QWORD PTR [rip+0x2d97]        # 406108 <__ctype_b_loc@plt+0x4d48>
  403371:	cmp    rsi,0x4
  403375:	jbe    40339c <__ctype_b_loc@plt+0x1fdc>
  403377:	nop    WORD PTR [rax+rax*1+0x0]
  403380:	xor    edx,edx
  403382:	lea    rdi,[rip+0x2db7]        # 406140 <__ctype_b_loc@plt+0x4d80>
  403389:	call   402e50 <__ctype_b_loc@plt+0x1a90>
  40338e:	cmp    QWORD PTR [rip+0x2d82],0x0        # 406118 <__ctype_b_loc@plt+0x4d58>
  403396:	jne    403208 <__ctype_b_loc@plt+0x1e48>
  40339c:	cmp    QWORD PTR [rip+0x2d44],0x0        # 4060e8 <__ctype_b_loc@plt+0x4d28>
  4033a4:	mov    r8,QWORD PTR [rip+0x2d5d]        # 406108 <__ctype_b_loc@plt+0x4d48>
  4033ab:	jne    403082 <__ctype_b_loc@plt+0x1cc2>
  4033b1:	jmp    4031df <__ctype_b_loc@plt+0x1e1f>
  4033b6:	cmp    rbp,QWORD PTR [rip+0x2d0b]        # 4060c8 <__ctype_b_loc@plt+0x4d08>
  4033bd:	jne    4030d0 <__ctype_b_loc@plt+0x1d10>
  4033c3:	mov    rdi,QWORD PTR [rbx]
  4033c6:	jmp    4031ae <__ctype_b_loc@plt+0x1dee>
  4033cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4033d0:	mov    rax,r8
  4033d3:	xor    edx,edx
  4033d5:	nop    DWORD PTR [rax]
  4033d8:	and    esi,0xc0
  4033de:	xor    ecx,ecx
  4033e0:	cmp    esi,0x80
  4033e6:	setne  cl
  4033e9:	inc    rax
  4033ec:	movzx  esi,BYTE PTR [rax-0x1]
  4033f0:	add    edx,ecx
  4033f2:	test   sil,sil
  4033f5:	jne    4033d8 <__ctype_b_loc@plt+0x2018>
  4033f7:	add    edx,0x4
  4033fa:	movsxd rsi,edx
  4033fd:	jmp    40311f <__ctype_b_loc@plt+0x1d5f>
  403402:	mov    edx,0x4
  403407:	jmp    40317b <__ctype_b_loc@plt+0x1dbb>
  40340c:	call   402da0 <__ctype_b_loc@plt+0x19e0>
  403411:	jmp    403216 <__ctype_b_loc@plt+0x1e56>
  403416:	mov    eax,0x4
  40341b:	jmp    403316 <__ctype_b_loc@plt+0x1f56>
  403420:	mov    rax,rbp
  403423:	jmp    403194 <__ctype_b_loc@plt+0x1dd4>
  403428:	call   401250 <__stack_chk_fail@plt>
  40342d:	nop    DWORD PTR [rax]
  403430:	sub    rsp,0x18
  403434:	mov    rsi,rdi
  403437:	mov    edx,0x1
  40343c:	xor    edi,edi
  40343e:	mov    rax,QWORD PTR fs:0x28
  403447:	mov    QWORD PTR [rsp+0x8],rax
  40344c:	xor    eax,eax
  40344e:	call   4012b0 <read@plt>
  403453:	cmp    rax,0x1
  403457:	jne    40346e <__ctype_b_loc@plt+0x20ae>
  403459:	mov    rax,QWORD PTR [rsp+0x8]
  40345e:	xor    rax,QWORD PTR fs:0x28
  403467:	jne    40347a <__ctype_b_loc@plt+0x20ba>
  403469:	add    rsp,0x18
  40346d:	ret    
  40346e:	lea    rdi,[rip+0xc44]        # 4040b9 <__ctype_b_loc@plt+0x2cf9>
  403475:	call   402610 <__ctype_b_loc@plt+0x1250>
  40347a:	call   401250 <__stack_chk_fail@plt>
  40347f:	nop
  403480:	endbr64 
  403484:	push   r15
  403486:	lea    r15,[rip+0x284b]        # 405cd8 <__ctype_b_loc@plt+0x4918>
  40348d:	push   r14
  40348f:	mov    r14,rdx
  403492:	push   r13
  403494:	mov    r13,rsi
  403497:	push   r12
  403499:	mov    r12d,edi
  40349c:	push   rbp
  40349d:	lea    rbp,[rip+0x283c]        # 405ce0 <__ctype_b_loc@plt+0x4920>
  4034a4:	push   rbx
  4034a5:	sub    rbp,r15
  4034a8:	sub    rsp,0x8
  4034ac:	call   401000 <free@plt-0x200>
  4034b1:	sar    rbp,0x3
  4034b5:	je     4034d6 <__ctype_b_loc@plt+0x2116>
  4034b7:	xor    ebx,ebx
  4034b9:	nop    DWORD PTR [rax+0x0]
  4034c0:	mov    rdx,r14
  4034c3:	mov    rsi,r13
  4034c6:	mov    edi,r12d
  4034c9:	call   QWORD PTR [r15+rbx*8]
  4034cd:	add    rbx,0x1
  4034d1:	cmp    rbp,rbx
  4034d4:	jne    4034c0 <__ctype_b_loc@plt+0x2100>
  4034d6:	add    rsp,0x8
  4034da:	pop    rbx
  4034db:	pop    rbp
  4034dc:	pop    r12
  4034de:	pop    r13
  4034e0:	pop    r14
  4034e2:	pop    r15
  4034e4:	ret    
  4034e5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4034f0:	endbr64 
  4034f4:	ret    

Disassembly of section .fini:

00000000004034f8 <.fini>:
  4034f8:	endbr64 
  4034fc:	sub    rsp,0x8
  403500:	add    rsp,0x8
  403504:	ret    
