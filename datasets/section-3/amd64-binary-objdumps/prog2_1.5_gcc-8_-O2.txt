
../repos/prog2/1.5:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <fclose@plt-0x9a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <fclose@plt-0x90>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <fclose@plt-0x90>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <fclose@plt-0x90>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <fclose@plt-0x90>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <fclose@plt-0x90>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <fclose@plt-0x90>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <fclose@plt-0x90>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <fclose@plt-0x90>
  4010af:	nop

Disassembly of section .plt.sec:

00000000004010b0 <fclose@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404018 <fclose@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <strlen@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404020 <strlen@GLIBC_2.2.5>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <__stack_chk_fail@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f4d]        # 404028 <__stack_chk_fail@GLIBC_2.4>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <fgetc@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f45]        # 404030 <fgetc@GLIBC_2.2.5>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010f0 <strcmp@plt>:
  4010f0:	endbr64 
  4010f4:	bnd jmp QWORD PTR [rip+0x2f3d]        # 404038 <strcmp@GLIBC_2.2.5>
  4010fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401100 <fseek@plt>:
  401100:	endbr64 
  401104:	bnd jmp QWORD PTR [rip+0x2f35]        # 404040 <fseek@GLIBC_2.2.5>
  40110b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401110 <__printf_chk@plt>:
  401110:	endbr64 
  401114:	bnd jmp QWORD PTR [rip+0x2f2d]        # 404048 <__printf_chk@GLIBC_2.3.4>
  40111b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401120 <fopen@plt>:
  401120:	endbr64 
  401124:	bnd jmp QWORD PTR [rip+0x2f25]        # 404050 <fopen@GLIBC_2.2.5>
  40112b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401130 <main@@Base>:
  401130:	endbr64 
  401134:	push   r15
  401136:	lea    rsi,[rip+0xec7]        # 402004 <_IO_stdin_used@@Base+0x4>
  40113d:	lea    rdi,[rip+0xec2]        # 402006 <_IO_stdin_used@@Base+0x6>
  401144:	push   r14
  401146:	xor    r14d,r14d
  401149:	push   r13
  40114b:	xor    r13d,r13d
  40114e:	push   r12
  401150:	mov    r12d,0x1
  401156:	push   rbp
  401157:	push   rbx
  401158:	xor    ebx,ebx
  40115a:	sub    rsp,0x18
  40115e:	call   401120 <fopen@plt>
  401163:	mov    DWORD PTR [rsp+0xc],0x0
  40116b:	mov    rbp,rax
  40116e:	xchg   ax,ax
  401170:	mov    rdi,rbp
  401173:	call   4010e0 <fgetc@plt>
  401178:	cmp    al,0xff
  40117a:	je     4011c1 <main@@Base+0x91>
  40117c:	lea    r15d,[rbx+0x1]
  401180:	cmp    al,0xa
  401182:	je     401268 <main@@Base+0x138>
  401188:	mov    rsi,rbp
  40118b:	lea    rdi,[rip+0xe86]        # 402018 <_IO_stdin_used@@Base+0x18>
  401192:	cmp    al,0x73
  401194:	je     40127f <main@@Base+0x14f>
  40119a:	cmp    al,0x70
  40119c:	je     401278 <main@@Base+0x148>
  4011a2:	cmp    al,0x2f
  4011a4:	je     401298 <main@@Base+0x168>
  4011aa:	cmp    al,0x2a
  4011ac:	je     4012c6 <main@@Base+0x196>
  4011b2:	mov    rdi,rbp
  4011b5:	mov    ebx,r15d
  4011b8:	call   4010e0 <fgetc@plt>
  4011bd:	cmp    al,0xff
  4011bf:	jne    40117c <main@@Base+0x4c>
  4011c1:	mov    edx,r12d
  4011c4:	lea    rsi,[rip+0xe5a]        # 402025 <_IO_stdin_used@@Base+0x25>
  4011cb:	mov    edi,0x1
  4011d0:	xor    eax,eax
  4011d2:	call   401110 <__printf_chk@plt>
  4011d7:	vxorps xmm1,xmm1,xmm1
  4011db:	vxorps xmm0,xmm0,xmm0
  4011df:	vcvtsi2ss xmm1,xmm1,ebx
  4011e3:	vcvtsi2ss xmm0,xmm0,r12d
  4011e8:	lea    rsi,[rip+0xe79]        # 402068 <_IO_stdin_used@@Base+0x68>
  4011ef:	mov    edi,0x1
  4011f4:	mov    eax,0x1
  4011f9:	vdivss xmm0,xmm1,xmm0
  4011fd:	vcvtss2sd xmm0,xmm0,xmm0
  401201:	call   401110 <__printf_chk@plt>
  401206:	mov    edx,ebx
  401208:	lea    rsi,[rip+0xe2c]        # 40203b <_IO_stdin_used@@Base+0x3b>
  40120f:	mov    edi,0x1
  401214:	xor    eax,eax
  401216:	call   401110 <__printf_chk@plt>
  40121b:	mov    edx,r13d
  40121e:	lea    rsi,[rip+0xe73]        # 402098 <_IO_stdin_used@@Base+0x98>
  401225:	mov    edi,0x1
  40122a:	xor    eax,eax
  40122c:	call   401110 <__printf_chk@plt>
  401231:	mov    edx,DWORD PTR [rsp+0xc]
  401235:	lea    rsi,[rip+0xe0e]        # 40204a <_IO_stdin_used@@Base+0x4a>
  40123c:	mov    edi,0x1
  401241:	xor    eax,eax
  401243:	call   401110 <__printf_chk@plt>
  401248:	mov    rdi,rbp
  40124b:	call   4010b0 <fclose@plt>
  401250:	add    rsp,0x18
  401254:	pop    rbx
  401255:	pop    rbp
  401256:	pop    r12
  401258:	pop    r13
  40125a:	pop    r14
  40125c:	xor    eax,eax
  40125e:	pop    r15
  401260:	ret    
  401261:	nop    DWORD PTR [rax+0x0]
  401268:	inc    r12d
  40126b:	mov    ebx,r15d
  40126e:	jmp    401170 <main@@Base+0x40>
  401273:	nop    DWORD PTR [rax+rax*1+0x0]
  401278:	lea    rdi,[rip+0xd9f]        # 40201e <_IO_stdin_used@@Base+0x1e>
  40127f:	call   4013f0 <IsIOFunction@@Base>
  401284:	cmp    eax,0x1
  401287:	mov    ebx,r15d
  40128a:	sbb    r13d,0xffffffff
  40128e:	jmp    401170 <main@@Base+0x40>
  401293:	nop    DWORD PTR [rax+rax*1+0x0]
  401298:	mov    rdi,rbp
  40129b:	call   4010e0 <fgetc@plt>
  4012a0:	test   r14d,r14d
  4012a3:	jne    4012aa <main@@Base+0x17a>
  4012a5:	cmp    eax,0x2a
  4012a8:	je     4012e7 <main@@Base+0x1b7>
  4012aa:	mov    edx,0x1
  4012af:	mov    rsi,0xffffffffffffffff
  4012b6:	mov    rdi,rbp
  4012b9:	call   401100 <fseek@plt>
  4012be:	mov    ebx,r15d
  4012c1:	jmp    401170 <main@@Base+0x40>
  4012c6:	mov    rdi,rbp
  4012c9:	call   4010e0 <fgetc@plt>
  4012ce:	cmp    eax,0x2f
  4012d1:	jne    4012aa <main@@Base+0x17a>
  4012d3:	test   r14d,r14d
  4012d6:	je     4012aa <main@@Base+0x17a>
  4012d8:	add    ebx,0x2
  4012db:	inc    DWORD PTR [rsp+0xc]
  4012df:	xor    r14d,r14d
  4012e2:	jmp    401170 <main@@Base+0x40>
  4012e7:	add    ebx,0x2
  4012ea:	mov    r14d,0x1
  4012f0:	jmp    401170 <main@@Base+0x40>
  4012f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012ff:	nop

0000000000401300 <_start@@Base>:
  401300:	endbr64 
  401304:	xor    ebp,ebp
  401306:	mov    r9,rdx
  401309:	pop    rsi
  40130a:	mov    rdx,rsp
  40130d:	and    rsp,0xfffffffffffffff0
  401311:	push   rax
  401312:	push   rsp
  401313:	mov    r8,0x401560
  40131a:	mov    rcx,0x4014f0
  401321:	mov    rdi,0x401130
  401328:	call   QWORD PTR [rip+0x2cc2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  40132e:	hlt    
  40132f:	nop
  401330:	endbr64 
  401334:	ret    
  401335:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40133f:	nop
  401340:	mov    eax,0x404068
  401345:	cmp    rax,0x404068
  40134b:	je     401360 <_start@@Base+0x60>
  40134d:	mov    eax,0x0
  401352:	test   rax,rax
  401355:	je     401360 <_start@@Base+0x60>
  401357:	mov    edi,0x404068
  40135c:	jmp    rax
  40135e:	xchg   ax,ax
  401360:	ret    
  401361:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40136c:	nop    DWORD PTR [rax+0x0]
  401370:	mov    esi,0x404068
  401375:	sub    rsi,0x404068
  40137c:	sar    rsi,0x3
  401380:	mov    rax,rsi
  401383:	shr    rax,0x3f
  401387:	add    rsi,rax
  40138a:	sar    rsi,1
  40138d:	je     4013a0 <_start@@Base+0xa0>
  40138f:	mov    eax,0x0
  401394:	test   rax,rax
  401397:	je     4013a0 <_start@@Base+0xa0>
  401399:	mov    edi,0x404068
  40139e:	jmp    rax
  4013a0:	ret    
  4013a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013ac:	nop    DWORD PTR [rax+0x0]
  4013b0:	endbr64 
  4013b4:	cmp    BYTE PTR [rip+0x2cad],0x0        # 404068 <__bss_start@@Base>
  4013bb:	jne    4013d0 <_start@@Base+0xd0>
  4013bd:	push   rbp
  4013be:	mov    rbp,rsp
  4013c1:	call   401340 <_start@@Base+0x40>
  4013c6:	mov    BYTE PTR [rip+0x2c9b],0x1        # 404068 <__bss_start@@Base>
  4013cd:	pop    rbp
  4013ce:	ret    
  4013cf:	nop
  4013d0:	ret    
  4013d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4013dc:	nop    DWORD PTR [rax+0x0]
  4013e0:	endbr64 
  4013e4:	jmp    401370 <_start@@Base+0x70>
  4013e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004013f0 <IsIOFunction@@Base>:
  4013f0:	endbr64 
  4013f4:	push   r15
  4013f6:	mov    edx,0x1
  4013fb:	push   r14
  4013fd:	push   r13
  4013ff:	push   r12
  401401:	push   rbp
  401402:	mov    rbp,rsi
  401405:	mov    rsi,0xffffffffffffffff
  40140c:	push   rbx
  40140d:	mov    rbx,rdi
  401410:	sub    rsp,0x28
  401414:	mov    QWORD PTR [rsp+0x8],rdi
  401419:	mov    rdi,rbp
  40141c:	mov    rax,QWORD PTR fs:0x28
  401425:	mov    QWORD PTR [rsp+0x18],rax
  40142a:	xor    eax,eax
  40142c:	call   401100 <fseek@plt>
  401431:	mov    rdi,rbx
  401434:	call   4010c0 <strlen@plt>
  401439:	xor    edx,edx
  40143b:	mov    r13,rax
  40143e:	mov    DWORD PTR [rsp+0x11],0x0
  401446:	mov    WORD PTR [rsp+0x15],dx
  40144b:	mov    BYTE PTR [rsp+0x17],0x0
  401450:	test   eax,eax
  401452:	jle    4014e0 <IsIOFunction@@Base+0xf0>
  401458:	lea    r14,[rsp+0x11]
  40145d:	lea    rbx,[r14+0x1]
  401461:	lea    r12d,[rax-0x1]
  401465:	mov    r15,r14
  401468:	add    r12,rbx
  40146b:	jmp    401473 <IsIOFunction@@Base+0x83>
  40146d:	nop    DWORD PTR [rax]
  401470:	inc    rbx
  401473:	mov    rdi,rbp
  401476:	call   4010e0 <fgetc@plt>
  40147b:	mov    BYTE PTR [r15],al
  40147e:	mov    r15,rbx
  401481:	cmp    rbx,r12
  401484:	jne    401470 <IsIOFunction@@Base+0x80>
  401486:	movsxd rax,r13d
  401489:	mov    esi,0x1
  40148e:	sub    esi,r13d
  401491:	movsxd rsi,esi
  401494:	mov    edx,0x1
  401499:	mov    rdi,rbp
  40149c:	mov    BYTE PTR [rsp+rax*1+0x11],0x0
  4014a1:	call   401100 <fseek@plt>
  4014a6:	mov    rdi,QWORD PTR [rsp+0x8]
  4014ab:	mov    rsi,r14
  4014ae:	call   4010f0 <strcmp@plt>
  4014b3:	test   eax,eax
  4014b5:	sete   al
  4014b8:	mov    rcx,QWORD PTR [rsp+0x18]
  4014bd:	xor    rcx,QWORD PTR fs:0x28
  4014c6:	movzx  eax,al
  4014c9:	jne    4014e9 <IsIOFunction@@Base+0xf9>
  4014cb:	add    rsp,0x28
  4014cf:	pop    rbx
  4014d0:	pop    rbp
  4014d1:	pop    r12
  4014d3:	pop    r13
  4014d5:	pop    r14
  4014d7:	pop    r15
  4014d9:	ret    
  4014da:	nop    WORD PTR [rax+rax*1+0x0]
  4014e0:	xor    eax,eax
  4014e2:	lea    r14,[rsp+0x11]
  4014e7:	jmp    401489 <IsIOFunction@@Base+0x99>
  4014e9:	call   4010d0 <__stack_chk_fail@plt>
  4014ee:	xchg   ax,ax

00000000004014f0 <__libc_csu_init@@Base>:
  4014f0:	endbr64 
  4014f4:	push   r15
  4014f6:	lea    r15,[rip+0x2913]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4014fd:	push   r14
  4014ff:	mov    r14,rdx
  401502:	push   r13
  401504:	mov    r13,rsi
  401507:	push   r12
  401509:	mov    r12d,edi
  40150c:	push   rbp
  40150d:	lea    rbp,[rip+0x2904]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  401514:	push   rbx
  401515:	sub    rbp,r15
  401518:	sub    rsp,0x8
  40151c:	call   401000 <fclose@plt-0xb0>
  401521:	sar    rbp,0x3
  401525:	je     401546 <__libc_csu_init@@Base+0x56>
  401527:	xor    ebx,ebx
  401529:	nop    DWORD PTR [rax+0x0]
  401530:	mov    rdx,r14
  401533:	mov    rsi,r13
  401536:	mov    edi,r12d
  401539:	call   QWORD PTR [r15+rbx*8]
  40153d:	add    rbx,0x1
  401541:	cmp    rbp,rbx
  401544:	jne    401530 <__libc_csu_init@@Base+0x40>
  401546:	add    rsp,0x8
  40154a:	pop    rbx
  40154b:	pop    rbp
  40154c:	pop    r12
  40154e:	pop    r13
  401550:	pop    r14
  401552:	pop    r15
  401554:	ret    
  401555:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401560 <__libc_csu_fini@@Base>:
  401560:	endbr64 
  401564:	ret    

Disassembly of section .fini:

0000000000401568 <.fini>:
  401568:	endbr64 
  40156c:	sub    rsp,0x8
  401570:	add    rsp,0x8
  401574:	ret    
