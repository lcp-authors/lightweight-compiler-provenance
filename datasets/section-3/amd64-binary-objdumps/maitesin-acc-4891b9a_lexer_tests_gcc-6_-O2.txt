
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe1]        # 40fff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <UnityStrOk@@Base+0x398c>
  403026:	jmp    QWORD PTR [rip+0xcfe4]        # 410010 <UnityStrOk@@Base+0x3994>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xcfe2]        # 410018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xcfda]        # 410020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__vfprintf_chk@plt>:
  403050:	jmp    QWORD PTR [rip+0xcfd2]        # 410028 <__vfprintf_chk@GLIBC_2.3.4>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <abort@plt>:
  403060:	jmp    QWORD PTR [rip+0xcfca]        # 410030 <abort@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <__errno_location@plt>:
  403070:	jmp    QWORD PTR [rip+0xcfc2]        # 410038 <__errno_location@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <strncpy@plt>:
  403080:	jmp    QWORD PTR [rip+0xcfba]        # 410040 <strncpy@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <strcpy@plt>:
  403090:	jmp    QWORD PTR [rip+0xcfb2]        # 410048 <strcpy@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <mkdir@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xcfaa]        # 410050 <mkdir@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <fread@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xcfa2]        # 410058 <fread@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <fcntl@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xcf9a]        # 410060 <fcntl@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <getpid@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xcf92]        # 410068 <getpid@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <fclose@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xcf8a]        # 410070 <fclose@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <strlen@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xcf82]        # 410078 <strlen@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <__stack_chk_fail@plt>:
  403100:	jmp    QWORD PTR [rip+0xcf7a]        # 410080 <__stack_chk_fail@GLIBC_2.4>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <setbuf@plt>:
  403110:	jmp    QWORD PTR [rip+0xcf72]        # 410088 <setbuf@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <close@plt>:
  403120:	jmp    QWORD PTR [rip+0xcf6a]        # 410090 <close@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <_setjmp@plt>:
  403130:	jmp    QWORD PTR [rip+0xcf62]        # 410098 <_setjmp@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <putc@plt>:
  403140:	jmp    QWORD PTR [rip+0xcf5a]        # 4100a0 <putc@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <ftell@plt>:
  403150:	jmp    QWORD PTR [rip+0xcf52]        # 4100a8 <ftell@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <strtol@plt>:
  403160:	jmp    QWORD PTR [rip+0xcf4a]        # 4100b0 <strtol@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <memcpy@plt>:
  403170:	jmp    QWORD PTR [rip+0xcf42]        # 4100b8 <memcpy@GLIBC_2.14>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <malloc@plt>:
  403180:	jmp    QWORD PTR [rip+0xcf3a]        # 4100c0 <malloc@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <__fxstat@plt>:
  403190:	jmp    QWORD PTR [rip+0xcf32]        # 4100c8 <__fxstat@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <fseek@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xcf2a]        # 4100d0 <fseek@GLIBC_2.2.5>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <fdopen@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xcf22]        # 4100d8 <fdopen@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <__longjmp_chk@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xcf1a]        # 4100e0 <__longjmp_chk@GLIBC_2.11>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <open@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xcf12]        # 4100e8 <open@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <access@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xcf0a]        # 4100f0 <access@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <__cxa_atexit@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xcf02]        # 4100f8 <__cxa_atexit@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <exit@plt>:
  403200:	jmp    QWORD PTR [rip+0xcefa]        # 410100 <exit@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <fwrite@plt>:
  403210:	jmp    QWORD PTR [rip+0xcef2]        # 410108 <fwrite@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <__fprintf_chk@plt>:
  403220:	jmp    QWORD PTR [rip+0xceea]        # 410110 <__fprintf_chk@GLIBC_2.3.4>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403230 <main@@Base-0x100>:
  403230:	push   r12
  403232:	mov    r12,rdi
  403235:	mov    rdi,0x40c658
  40323c:	push   rbp
  40323d:	push   rbx
  40323e:	mov    rbp,rsi
  403241:	inc    QWORD PTR [rip+0xfad8]        # 412d20 <__bss_start@@Base+0xeb0>
  403248:	call   4057f0 <UnityPrint@@Base>
  40324d:	test   r12,r12
  403250:	je     403299 <__fprintf_chk@plt+0x79>
  403252:	mov    rbx,QWORD PTR [rip+0xcd87]        # 40ffe0 <stdout@GLIBC_2.2.5>
  403259:	mov    edi,0x27
  40325e:	inc    QWORD PTR [rip+0xfac3]        # 412d28 <__bss_start@@Base+0xeb8>
  403265:	mov    rsi,QWORD PTR [rbx]
  403268:	call   403140 <putc@plt>
  40326d:	mov    rdi,r12
  403270:	inc    QWORD PTR [rip+0xfac1]        # 412d38 <__bss_start@@Base+0xec8>
  403277:	call   4057f0 <UnityPrint@@Base>
  40327c:	mov    rsi,QWORD PTR [rbx]
  40327f:	mov    edi,0x27
  403284:	inc    QWORD PTR [rip+0xfab5]        # 412d40 <__bss_start@@Base+0xed0>
  40328b:	call   403140 <putc@plt>
  403290:	inc    QWORD PTR [rip+0xfab1]        # 412d48 <__bss_start@@Base+0xed8>
  403297:	jmp    4032b3 <__fprintf_chk@plt+0x93>
  403299:	mov    rdi,0x40c666
  4032a0:	inc    QWORD PTR [rip+0xfa89]        # 412d30 <__bss_start@@Base+0xec0>
  4032a7:	call   4057f0 <UnityPrint@@Base>
  4032ac:	inc    QWORD PTR [rip+0xfa9d]        # 412d50 <__bss_start@@Base+0xee0>
  4032b3:	mov    rdi,0x40c64f
  4032ba:	call   4057f0 <UnityPrint@@Base>
  4032bf:	test   rbp,rbp
  4032c2:	je     40330b <__fprintf_chk@plt+0xeb>
  4032c4:	mov    rbx,QWORD PTR [rip+0xcd15]        # 40ffe0 <stdout@GLIBC_2.2.5>
  4032cb:	mov    edi,0x27
  4032d0:	inc    QWORD PTR [rip+0xfa81]        # 412d58 <__bss_start@@Base+0xee8>
  4032d7:	mov    rsi,QWORD PTR [rbx]
  4032da:	call   403140 <putc@plt>
  4032df:	mov    rdi,rbp
  4032e2:	inc    QWORD PTR [rip+0xfa7f]        # 412d68 <__bss_start@@Base+0xef8>
  4032e9:	call   4057f0 <UnityPrint@@Base>
  4032ee:	mov    rsi,QWORD PTR [rbx]
  4032f1:	mov    edi,0x27
  4032f6:	inc    QWORD PTR [rip+0xfa73]        # 412d70 <__bss_start@@Base+0xf00>
  4032fd:	call   403140 <putc@plt>
  403302:	inc    QWORD PTR [rip+0xfa6f]        # 412d78 <__bss_start@@Base+0xf08>
  403309:	jmp    403325 <__fprintf_chk@plt+0x105>
  40330b:	mov    rdi,0x40c666
  403312:	inc    QWORD PTR [rip+0xfa47]        # 412d60 <__bss_start@@Base+0xef0>
  403319:	call   4057f0 <UnityPrint@@Base>
  40331e:	inc    QWORD PTR [rip+0xfa5b]        # 412d80 <__bss_start@@Base+0xf10>
  403325:	pop    rbx
  403326:	pop    rbp
  403327:	pop    r12
  403329:	ret    
  40332a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403330 <main@@Base>:
  403330:	lea    rdi,[rip+0x8fb1]        # 40c2e8 <_IO_stdin_used@@Base+0x2e8>
  403337:	sub    rsp,0x8
  40333b:	add    QWORD PTR [rip+0xf57d],0x1        # 4128c0 <__bss_start@@Base+0xa50>
  403343:	call   407e80 <UnityBegin@@Base>
  403348:	mov    rdi,0x404df0
  40334f:	lea    rsi,[rip+0x8cef]        # 40c045 <_IO_stdin_used@@Base+0x45>
  403356:	mov    edx,0x275
  40335b:	add    QWORD PTR [rip+0xf565],0x1        # 4128c8 <__bss_start@@Base+0xa58>
  403363:	call   407da0 <UnityDefaultTestRun@@Base>
  403368:	mov    rdi,0x405200
  40336f:	lea    rsi,[rip+0x8ce5]        # 40c05b <_IO_stdin_used@@Base+0x5b>
  403376:	mov    edx,0x276
  40337b:	add    QWORD PTR [rip+0xf54d],0x1        # 4128d0 <__bss_start@@Base+0xa60>
  403383:	call   407da0 <UnityDefaultTestRun@@Base>
  403388:	mov    rdi,0x405100
  40338f:	lea    rsi,[rip+0x8cd9]        # 40c06f <_IO_stdin_used@@Base+0x6f>
  403396:	mov    edx,0x277
  40339b:	add    QWORD PTR [rip+0xf535],0x1        # 4128d8 <__bss_start@@Base+0xa68>
  4033a3:	call   407da0 <UnityDefaultTestRun@@Base>
  4033a8:	mov    rdi,0x405040
  4033af:	lea    rsi,[rip+0x8cd2]        # 40c088 <_IO_stdin_used@@Base+0x88>
  4033b6:	mov    edx,0x278
  4033bb:	add    QWORD PTR [rip+0xf51d],0x1        # 4128e0 <__bss_start@@Base+0xa70>
  4033c3:	call   407da0 <UnityDefaultTestRun@@Base>
  4033c8:	mov    rdi,0x404980
  4033cf:	lea    rsi,[rip+0x8ccb]        # 40c0a1 <_IO_stdin_used@@Base+0xa1>
  4033d6:	mov    edx,0x279
  4033db:	add    QWORD PTR [rip+0xf505],0x1        # 4128e8 <__bss_start@@Base+0xa78>
  4033e3:	call   407da0 <UnityDefaultTestRun@@Base>
  4033e8:	mov    rdi,0x4043f0
  4033ef:	lea    rsi,[rip+0x8cbb]        # 40c0b1 <_IO_stdin_used@@Base+0xb1>
  4033f6:	mov    edx,0x27a
  4033fb:	add    QWORD PTR [rip+0xf4ed],0x1        # 4128f0 <__bss_start@@Base+0xa80>
  403403:	call   407da0 <UnityDefaultTestRun@@Base>
  403408:	mov    rdi,0x404360
  40340f:	lea    rsi,[rip+0x8ca8]        # 40c0be <_IO_stdin_used@@Base+0xbe>
  403416:	mov    edx,0x27b
  40341b:	add    QWORD PTR [rip+0xf4d5],0x1        # 4128f8 <__bss_start@@Base+0xa88>
  403423:	call   407da0 <UnityDefaultTestRun@@Base>
  403428:	mov    rdi,0x4042d0
  40342f:	lea    rsi,[rip+0x8c9c]        # 40c0d2 <_IO_stdin_used@@Base+0xd2>
  403436:	mov    edx,0x27c
  40343b:	add    QWORD PTR [rip+0xf4bd],0x1        # 412900 <__bss_start@@Base+0xa90>
  403443:	call   407da0 <UnityDefaultTestRun@@Base>
  403448:	mov    rdi,0x404240
  40344f:	lea    rsi,[rip+0x8c91]        # 40c0e7 <_IO_stdin_used@@Base+0xe7>
  403456:	mov    edx,0x27d
  40345b:	add    QWORD PTR [rip+0xf4a5],0x1        # 412908 <__bss_start@@Base+0xa98>
  403463:	call   407da0 <UnityDefaultTestRun@@Base>
  403468:	mov    rdi,0x4041b0
  40346f:	lea    rsi,[rip+0x8c85]        # 40c0fb <_IO_stdin_used@@Base+0xfb>
  403476:	mov    edx,0x27e
  40347b:	add    QWORD PTR [rip+0xf48d],0x1        # 412910 <__bss_start@@Base+0xaa0>
  403483:	call   407da0 <UnityDefaultTestRun@@Base>
  403488:	mov    rdi,0x404120
  40348f:	lea    rsi,[rip+0x8c75]        # 40c10b <_IO_stdin_used@@Base+0x10b>
  403496:	mov    edx,0x27f
  40349b:	add    QWORD PTR [rip+0xf475],0x1        # 412918 <__bss_start@@Base+0xaa8>
  4034a3:	call   407da0 <UnityDefaultTestRun@@Base>
  4034a8:	mov    rdi,0x404090
  4034af:	lea    rsi,[rip+0x8c65]        # 40c11b <_IO_stdin_used@@Base+0x11b>
  4034b6:	mov    edx,0x280
  4034bb:	add    QWORD PTR [rip+0xf45d],0x1        # 412920 <__bss_start@@Base+0xab0>
  4034c3:	call   407da0 <UnityDefaultTestRun@@Base>
  4034c8:	mov    rdi,0x404000
  4034cf:	lea    rsi,[rip+0x8c55]        # 40c12b <_IO_stdin_used@@Base+0x12b>
  4034d6:	mov    edx,0x281
  4034db:	add    QWORD PTR [rip+0xf445],0x1        # 412928 <__bss_start@@Base+0xab8>
  4034e3:	call   407da0 <UnityDefaultTestRun@@Base>
  4034e8:	mov    rdi,0x403f70
  4034ef:	lea    rsi,[rip+0x8c45]        # 40c13b <_IO_stdin_used@@Base+0x13b>
  4034f6:	mov    edx,0x282
  4034fb:	add    QWORD PTR [rip+0xf42d],0x1        # 412930 <__bss_start@@Base+0xac0>
  403503:	call   407da0 <UnityDefaultTestRun@@Base>
  403508:	mov    rdi,0x403ee0
  40350f:	lea    rsi,[rip+0x8c37]        # 40c14d <_IO_stdin_used@@Base+0x14d>
  403516:	mov    edx,0x283
  40351b:	add    QWORD PTR [rip+0xf415],0x1        # 412938 <__bss_start@@Base+0xac8>
  403523:	call   407da0 <UnityDefaultTestRun@@Base>
  403528:	mov    rdi,0x403e50
  40352f:	lea    rsi,[rip+0x8c2c]        # 40c162 <_IO_stdin_used@@Base+0x162>
  403536:	mov    edx,0x284
  40353b:	add    QWORD PTR [rip+0xf3fd],0x1        # 412940 <__bss_start@@Base+0xad0>
  403543:	call   407da0 <UnityDefaultTestRun@@Base>
  403548:	mov    rdi,0x403dc0
  40354f:	lea    rsi,[rip+0x8c1b]        # 40c171 <_IO_stdin_used@@Base+0x171>
  403556:	mov    edx,0x285
  40355b:	add    QWORD PTR [rip+0xf3e5],0x1        # 412948 <__bss_start@@Base+0xad8>
  403563:	call   407da0 <UnityDefaultTestRun@@Base>
  403568:	mov    rdi,0x403d30
  40356f:	lea    rsi,[rip+0x8c09]        # 40c17f <_IO_stdin_used@@Base+0x17f>
  403576:	mov    edx,0x286
  40357b:	add    QWORD PTR [rip+0xf3cd],0x1        # 412950 <__bss_start@@Base+0xae0>
  403583:	call   407da0 <UnityDefaultTestRun@@Base>
  403588:	mov    rdi,0x403ca0
  40358f:	lea    rsi,[rip+0x8bf9]        # 40c18f <_IO_stdin_used@@Base+0x18f>
  403596:	mov    edx,0x287
  40359b:	add    QWORD PTR [rip+0xf3b5],0x1        # 412958 <__bss_start@@Base+0xae8>
  4035a3:	call   407da0 <UnityDefaultTestRun@@Base>
  4035a8:	mov    rdi,0x403c10
  4035af:	lea    rsi,[rip+0x8bef]        # 40c1a5 <_IO_stdin_used@@Base+0x1a5>
  4035b6:	mov    edx,0x288
  4035bb:	add    QWORD PTR [rip+0xf39d],0x1        # 412960 <__bss_start@@Base+0xaf0>
  4035c3:	call   407da0 <UnityDefaultTestRun@@Base>
  4035c8:	mov    rdi,0x403b80
  4035cf:	lea    rsi,[rip+0x8be3]        # 40c1b9 <_IO_stdin_used@@Base+0x1b9>
  4035d6:	mov    edx,0x289
  4035db:	add    QWORD PTR [rip+0xf385],0x1        # 412968 <__bss_start@@Base+0xaf8>
  4035e3:	call   407da0 <UnityDefaultTestRun@@Base>
  4035e8:	mov    rdi,0x4039d0
  4035ef:	lea    rsi,[rip+0x8bdc]        # 40c1d2 <_IO_stdin_used@@Base+0x1d2>
  4035f6:	mov    edx,0x28a
  4035fb:	add    QWORD PTR [rip+0xf36d],0x1        # 412970 <__bss_start@@Base+0xb00>
  403603:	call   407da0 <UnityDefaultTestRun@@Base>
  403608:	mov    rdi,0x403af0
  40360f:	lea    rsi,[rip+0x8bd8]        # 40c1ee <_IO_stdin_used@@Base+0x1ee>
  403616:	mov    edx,0x28b
  40361b:	add    QWORD PTR [rip+0xf355],0x1        # 412978 <__bss_start@@Base+0xb08>
  403623:	call   407da0 <UnityDefaultTestRun@@Base>
  403628:	mov    rdi,0x403a60
  40362f:	lea    rsi,[rip+0x8bc8]        # 40c1fe <_IO_stdin_used@@Base+0x1fe>
  403636:	mov    edx,0x28c
  40363b:	add    QWORD PTR [rip+0xf33d],0x1        # 412980 <__bss_start@@Base+0xb10>
  403643:	call   407da0 <UnityDefaultTestRun@@Base>
  403648:	mov    rdi,0x403940
  40364f:	lea    rsi,[rip+0x8bba]        # 40c210 <_IO_stdin_used@@Base+0x210>
  403656:	mov    edx,0x28d
  40365b:	add    QWORD PTR [rip+0xf325],0x1        # 412988 <__bss_start@@Base+0xb18>
  403663:	call   407da0 <UnityDefaultTestRun@@Base>
  403668:	mov    rdi,0x4038b0
  40366f:	lea    rsi,[rip+0x8bae]        # 40c224 <_IO_stdin_used@@Base+0x224>
  403676:	mov    edx,0x28e
  40367b:	add    QWORD PTR [rip+0xf30d],0x1        # 412990 <__bss_start@@Base+0xb20>
  403683:	call   407da0 <UnityDefaultTestRun@@Base>
  403688:	mov    rdi,0x403820
  40368f:	lea    rsi,[rip+0x8ba5]        # 40c23b <_IO_stdin_used@@Base+0x23b>
  403696:	mov    edx,0x28f
  40369b:	add    QWORD PTR [rip+0xf2f5],0x1        # 412998 <__bss_start@@Base+0xb28>
  4036a3:	call   407da0 <UnityDefaultTestRun@@Base>
  4036a8:	add    QWORD PTR [rip+0xf2f0],0x1        # 4129a0 <__bss_start@@Base+0xb30>
  4036b0:	call   407ee0 <UnityEnd@@Base>
  4036b5:	add    QWORD PTR [rip+0xf2eb],0x1        # 4129a8 <__bss_start@@Base+0xb38>
  4036bd:	add    rsp,0x8
  4036c1:	ret    
  4036c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4036cd:	nop    DWORD PTR [rax]
  4036d0:	lea    rdi,[rip+0xd249]        # 410920 <__data_start@@Base+0x800>
  4036d7:	jmp    40ae70 <__gcov_sort_n_vals@@Base+0x1640>
  4036dc:	nop    DWORD PTR [rax+0x0]
  4036e0:	lea    rdi,[rip+0xdc59]        # 411340 <__data_start@@Base+0x1220>
  4036e7:	jmp    40ae70 <__gcov_sort_n_vals@@Base+0x1640>
  4036ec:	nop    DWORD PTR [rax+0x0]
  4036f0:	lea    rdi,[rip+0xe429]        # 411b20 <__data_start@@Base+0x1a00>
  4036f7:	jmp    40ae70 <__gcov_sort_n_vals@@Base+0x1640>
  4036fc:	nop    DWORD PTR [rax+0x0]
  403700:	lea    rdi,[rip+0xe6d9]        # 411de0 <__data_start@@Base+0x1cc0>
  403707:	jmp    40ae70 <__gcov_sort_n_vals@@Base+0x1640>
  40370c:	nop    DWORD PTR [rax+0x0]

0000000000403710 <_start@@Base>:
  403710:	endbr64 
  403714:	xor    ebp,ebp
  403716:	mov    r9,rdx
  403719:	pop    rsi
  40371a:	mov    rdx,rsp
  40371d:	and    rsp,0xfffffffffffffff0
  403721:	push   rax
  403722:	push   rsp
  403723:	mov    r8,0x40afe0
  40372a:	mov    rcx,0x40af70
  403731:	mov    rdi,0x403330
  403738:	call   QWORD PTR [rip+0xc8aa]        # 40ffe8 <__libc_start_main@GLIBC_2.2.5>
  40373e:	hlt    
  40373f:	nop
  403740:	endbr64 
  403744:	ret    
  403745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40374f:	nop
  403750:	mov    eax,0x411e77
  403755:	push   rbp
  403756:	sub    rax,0x411e70
  40375c:	cmp    rax,0xe
  403760:	mov    rbp,rsp
  403763:	jbe    403780 <_start@@Base+0x70>
  403765:	mov    eax,0x0
  40376a:	test   rax,rax
  40376d:	je     403780 <_start@@Base+0x70>
  40376f:	pop    rbp
  403770:	mov    edi,0x411e70
  403775:	jmp    rax
  403777:	nop    WORD PTR [rax+rax*1+0x0]
  403780:	pop    rbp
  403781:	ret    
  403782:	nop    DWORD PTR [rax+0x0]
  403786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403790:	mov    esi,0x411e70
  403795:	push   rbp
  403796:	sub    rsi,0x411e70
  40379d:	sar    rsi,0x3
  4037a1:	mov    rbp,rsp
  4037a4:	mov    rax,rsi
  4037a7:	shr    rax,0x3f
  4037ab:	add    rsi,rax
  4037ae:	sar    rsi,1
  4037b1:	je     4037c8 <_start@@Base+0xb8>
  4037b3:	mov    eax,0x0
  4037b8:	test   rax,rax
  4037bb:	je     4037c8 <_start@@Base+0xb8>
  4037bd:	pop    rbp
  4037be:	mov    edi,0x411e70
  4037c3:	jmp    rax
  4037c5:	nop    DWORD PTR [rax]
  4037c8:	pop    rbp
  4037c9:	ret    
  4037ca:	nop    WORD PTR [rax+rax*1+0x0]
  4037d0:	cmp    BYTE PTR [rip+0xe6a9],0x0        # 411e80 <__bss_start@@Base+0x10>
  4037d7:	jne    4037ea <_start@@Base+0xda>
  4037d9:	push   rbp
  4037da:	mov    rbp,rsp
  4037dd:	call   403750 <_start@@Base+0x40>
  4037e2:	pop    rbp
  4037e3:	mov    BYTE PTR [rip+0xe696],0x1        # 411e80 <__bss_start@@Base+0x10>
  4037ea:	repz ret 
  4037ec:	nop    DWORD PTR [rax+0x0]
  4037f0:	mov    edi,0x40fe08
  4037f5:	cmp    QWORD PTR [rdi],0x0
  4037f9:	jne    403800 <_start@@Base+0xf0>
  4037fb:	jmp    403790 <_start@@Base+0x80>
  4037fd:	nop    DWORD PTR [rax]
  403800:	mov    eax,0x0
  403805:	test   rax,rax
  403808:	je     4037fb <_start@@Base+0xeb>
  40380a:	push   rbp
  40380b:	mov    rbp,rsp
  40380e:	call   rax
  403810:	pop    rbp
  403811:	jmp    403790 <_start@@Base+0x80>
  403816:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403820 <read_token_not@@Base>:
  403820:	push   rbx
  403821:	lea    rsi,[rip+0x87dc]        # 40c004 <_IO_stdin_used@@Base+0x4>
  403828:	sub    rsp,0x20
  40382c:	add    QWORD PTR [rip+0xf04c],0x1        # 412880 <__bss_start@@Base+0xa10>
  403834:	mov    rdi,rsp
  403837:	mov    rax,QWORD PTR fs:0x28
  403840:	mov    QWORD PTR [rsp+0x18],rax
  403845:	xor    eax,eax
  403847:	call   408210 <init_lexer@@Base>
  40384c:	mov    rdi,rsp
  40384f:	add    QWORD PTR [rip+0xf031],0x1        # 412888 <__bss_start@@Base+0xa18>
  403857:	call   408360 <next@@Base>
  40385c:	mov    esi,DWORD PTR [rax]
  40385e:	xor    edx,edx
  403860:	mov    r8d,0x94
  403866:	mov    ecx,0x26c
  40386b:	mov    edi,0xc
  403870:	add    QWORD PTR [rip+0xf018],0x1        # 412890 <__bss_start@@Base+0xa20>
  403878:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40387d:	mov    rdi,rsp
  403880:	add    QWORD PTR [rip+0xf010],0x1        # 412898 <__bss_start@@Base+0xa28>
  403888:	call   408240 <destroy_lexer@@Base>
  40388d:	add    QWORD PTR [rip+0xf00b],0x1        # 4128a0 <__bss_start@@Base+0xa30>
  403895:	mov    rax,QWORD PTR [rsp+0x18]
  40389a:	xor    rax,QWORD PTR fs:0x28
  4038a3:	jne    4038ab <read_token_not@@Base+0x8b>
  4038a5:	add    rsp,0x20
  4038a9:	pop    rbx
  4038aa:	ret    
  4038ab:	call   403100 <__stack_chk_fail@plt>

00000000004038b0 <read_token_greaterthan@@Base>:
  4038b0:	push   rbx
  4038b1:	lea    rsi,[rip+0x921f]        # 40cad7 <UnityStrOk@@Base+0x45b>
  4038b8:	sub    rsp,0x20
  4038bc:	add    QWORD PTR [rip+0xef7c],0x1        # 412840 <__bss_start@@Base+0x9d0>
  4038c4:	mov    rdi,rsp
  4038c7:	mov    rax,QWORD PTR fs:0x28
  4038d0:	mov    QWORD PTR [rsp+0x18],rax
  4038d5:	xor    eax,eax
  4038d7:	call   408210 <init_lexer@@Base>
  4038dc:	mov    rdi,rsp
  4038df:	add    QWORD PTR [rip+0xef61],0x1        # 412848 <__bss_start@@Base+0x9d8>
  4038e7:	call   408360 <next@@Base>
  4038ec:	mov    esi,DWORD PTR [rax]
  4038ee:	xor    edx,edx
  4038f0:	mov    r8d,0x94
  4038f6:	mov    ecx,0x25b
  4038fb:	mov    edi,0xc
  403900:	add    QWORD PTR [rip+0xef48],0x1        # 412850 <__bss_start@@Base+0x9e0>
  403908:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40390d:	mov    rdi,rsp
  403910:	add    QWORD PTR [rip+0xef40],0x1        # 412858 <__bss_start@@Base+0x9e8>
  403918:	call   408240 <destroy_lexer@@Base>
  40391d:	add    QWORD PTR [rip+0xef3b],0x1        # 412860 <__bss_start@@Base+0x9f0>
  403925:	mov    rax,QWORD PTR [rsp+0x18]
  40392a:	xor    rax,QWORD PTR fs:0x28
  403933:	jne    40393b <read_token_greaterthan@@Base+0x8b>
  403935:	add    rsp,0x20
  403939:	pop    rbx
  40393a:	ret    
  40393b:	call   403100 <__stack_chk_fail@plt>

0000000000403940 <read_token_lessthan@@Base>:
  403940:	push   rbx
  403941:	lea    rsi,[rip+0x86be]        # 40c006 <_IO_stdin_used@@Base+0x6>
  403948:	sub    rsp,0x20
  40394c:	add    QWORD PTR [rip+0xeeac],0x1        # 412800 <__bss_start@@Base+0x990>
  403954:	mov    rdi,rsp
  403957:	mov    rax,QWORD PTR fs:0x28
  403960:	mov    QWORD PTR [rsp+0x18],rax
  403965:	xor    eax,eax
  403967:	call   408210 <init_lexer@@Base>
  40396c:	mov    rdi,rsp
  40396f:	add    QWORD PTR [rip+0xee91],0x1        # 412808 <__bss_start@@Base+0x998>
  403977:	call   408360 <next@@Base>
  40397c:	mov    esi,DWORD PTR [rax]
  40397e:	xor    edx,edx
  403980:	mov    r8d,0x94
  403986:	mov    ecx,0x24a
  40398b:	mov    edi,0xc
  403990:	add    QWORD PTR [rip+0xee78],0x1        # 412810 <__bss_start@@Base+0x9a0>
  403998:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40399d:	mov    rdi,rsp
  4039a0:	add    QWORD PTR [rip+0xee70],0x1        # 412818 <__bss_start@@Base+0x9a8>
  4039a8:	call   408240 <destroy_lexer@@Base>
  4039ad:	add    QWORD PTR [rip+0xee6b],0x1        # 412820 <__bss_start@@Base+0x9b0>
  4039b5:	mov    rax,QWORD PTR [rsp+0x18]
  4039ba:	xor    rax,QWORD PTR fs:0x28
  4039c3:	jne    4039cb <read_token_lessthan@@Base+0x8b>
  4039c5:	add    rsp,0x20
  4039c9:	pop    rbx
  4039ca:	ret    
  4039cb:	call   403100 <__stack_chk_fail@plt>

00000000004039d0 <read_token_greaterequalthan@@Base>:
  4039d0:	push   rbx
  4039d1:	lea    rsi,[rip+0x8630]        # 40c008 <_IO_stdin_used@@Base+0x8>
  4039d8:	sub    rsp,0x20
  4039dc:	add    QWORD PTR [rip+0xeddc],0x1        # 4127c0 <__bss_start@@Base+0x950>
  4039e4:	mov    rdi,rsp
  4039e7:	mov    rax,QWORD PTR fs:0x28
  4039f0:	mov    QWORD PTR [rsp+0x18],rax
  4039f5:	xor    eax,eax
  4039f7:	call   408210 <init_lexer@@Base>
  4039fc:	mov    rdi,rsp
  4039ff:	add    QWORD PTR [rip+0xedc1],0x1        # 4127c8 <__bss_start@@Base+0x958>
  403a07:	call   408360 <next@@Base>
  403a0c:	mov    esi,DWORD PTR [rax]
  403a0e:	xor    edx,edx
  403a10:	mov    r8d,0x94
  403a16:	mov    ecx,0x239
  403a1b:	mov    edi,0xc
  403a20:	add    QWORD PTR [rip+0xeda8],0x1        # 4127d0 <__bss_start@@Base+0x960>
  403a28:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403a2d:	mov    rdi,rsp
  403a30:	add    QWORD PTR [rip+0xeda0],0x1        # 4127d8 <__bss_start@@Base+0x968>
  403a38:	call   408240 <destroy_lexer@@Base>
  403a3d:	add    QWORD PTR [rip+0xed9b],0x1        # 4127e0 <__bss_start@@Base+0x970>
  403a45:	mov    rax,QWORD PTR [rsp+0x18]
  403a4a:	xor    rax,QWORD PTR fs:0x28
  403a53:	jne    403a5b <read_token_greaterequalthan@@Base+0x8b>
  403a55:	add    rsp,0x20
  403a59:	pop    rbx
  403a5a:	ret    
  403a5b:	call   403100 <__stack_chk_fail@plt>

0000000000403a60 <read_token_andand@@Base>:
  403a60:	push   rbx
  403a61:	lea    rsi,[rip+0x85a3]        # 40c00b <_IO_stdin_used@@Base+0xb>
  403a68:	sub    rsp,0x20
  403a6c:	add    QWORD PTR [rip+0xed0c],0x1        # 412780 <__bss_start@@Base+0x910>
  403a74:	mov    rdi,rsp
  403a77:	mov    rax,QWORD PTR fs:0x28
  403a80:	mov    QWORD PTR [rsp+0x18],rax
  403a85:	xor    eax,eax
  403a87:	call   408210 <init_lexer@@Base>
  403a8c:	mov    rdi,rsp
  403a8f:	add    QWORD PTR [rip+0xecf1],0x1        # 412788 <__bss_start@@Base+0x918>
  403a97:	call   408360 <next@@Base>
  403a9c:	mov    esi,DWORD PTR [rax]
  403a9e:	xor    edx,edx
  403aa0:	mov    r8d,0x94
  403aa6:	mov    ecx,0x228
  403aab:	mov    edi,0xc
  403ab0:	add    QWORD PTR [rip+0xecd8],0x1        # 412790 <__bss_start@@Base+0x920>
  403ab8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403abd:	mov    rdi,rsp
  403ac0:	add    QWORD PTR [rip+0xecd0],0x1        # 412798 <__bss_start@@Base+0x928>
  403ac8:	call   408240 <destroy_lexer@@Base>
  403acd:	add    QWORD PTR [rip+0xeccb],0x1        # 4127a0 <__bss_start@@Base+0x930>
  403ad5:	mov    rax,QWORD PTR [rsp+0x18]
  403ada:	xor    rax,QWORD PTR fs:0x28
  403ae3:	jne    403aeb <read_token_andand@@Base+0x8b>
  403ae5:	add    rsp,0x20
  403ae9:	pop    rbx
  403aea:	ret    
  403aeb:	call   403100 <__stack_chk_fail@plt>

0000000000403af0 <read_token_oror@@Base>:
  403af0:	push   rbx
  403af1:	lea    rsi,[rip+0x8516]        # 40c00e <_IO_stdin_used@@Base+0xe>
  403af8:	sub    rsp,0x20
  403afc:	add    QWORD PTR [rip+0xec3c],0x1        # 412740 <__bss_start@@Base+0x8d0>
  403b04:	mov    rdi,rsp
  403b07:	mov    rax,QWORD PTR fs:0x28
  403b10:	mov    QWORD PTR [rsp+0x18],rax
  403b15:	xor    eax,eax
  403b17:	call   408210 <init_lexer@@Base>
  403b1c:	mov    rdi,rsp
  403b1f:	add    QWORD PTR [rip+0xec21],0x1        # 412748 <__bss_start@@Base+0x8d8>
  403b27:	call   408360 <next@@Base>
  403b2c:	mov    esi,DWORD PTR [rax]
  403b2e:	xor    edx,edx
  403b30:	mov    r8d,0x94
  403b36:	mov    ecx,0x217
  403b3b:	mov    edi,0xc
  403b40:	add    QWORD PTR [rip+0xec08],0x1        # 412750 <__bss_start@@Base+0x8e0>
  403b48:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403b4d:	mov    rdi,rsp
  403b50:	add    QWORD PTR [rip+0xec00],0x1        # 412758 <__bss_start@@Base+0x8e8>
  403b58:	call   408240 <destroy_lexer@@Base>
  403b5d:	add    QWORD PTR [rip+0xebfb],0x1        # 412760 <__bss_start@@Base+0x8f0>
  403b65:	mov    rax,QWORD PTR [rsp+0x18]
  403b6a:	xor    rax,QWORD PTR fs:0x28
  403b73:	jne    403b7b <read_token_oror@@Base+0x8b>
  403b75:	add    rsp,0x20
  403b79:	pop    rbx
  403b7a:	ret    
  403b7b:	call   403100 <__stack_chk_fail@plt>

0000000000403b80 <read_token_lessequalthan@@Base>:
  403b80:	push   rbx
  403b81:	lea    rsi,[rip+0x8489]        # 40c011 <_IO_stdin_used@@Base+0x11>
  403b88:	sub    rsp,0x20
  403b8c:	add    QWORD PTR [rip+0xeb6c],0x1        # 412700 <__bss_start@@Base+0x890>
  403b94:	mov    rdi,rsp
  403b97:	mov    rax,QWORD PTR fs:0x28
  403ba0:	mov    QWORD PTR [rsp+0x18],rax
  403ba5:	xor    eax,eax
  403ba7:	call   408210 <init_lexer@@Base>
  403bac:	mov    rdi,rsp
  403baf:	add    QWORD PTR [rip+0xeb51],0x1        # 412708 <__bss_start@@Base+0x898>
  403bb7:	call   408360 <next@@Base>
  403bbc:	mov    esi,DWORD PTR [rax]
  403bbe:	xor    edx,edx
  403bc0:	mov    r8d,0x94
  403bc6:	mov    ecx,0x206
  403bcb:	mov    edi,0xc
  403bd0:	add    QWORD PTR [rip+0xeb38],0x1        # 412710 <__bss_start@@Base+0x8a0>
  403bd8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403bdd:	mov    rdi,rsp
  403be0:	add    QWORD PTR [rip+0xeb30],0x1        # 412718 <__bss_start@@Base+0x8a8>
  403be8:	call   408240 <destroy_lexer@@Base>
  403bed:	add    QWORD PTR [rip+0xeb2b],0x1        # 412720 <__bss_start@@Base+0x8b0>
  403bf5:	mov    rax,QWORD PTR [rsp+0x18]
  403bfa:	xor    rax,QWORD PTR fs:0x28
  403c03:	jne    403c0b <read_token_lessequalthan@@Base+0x8b>
  403c05:	add    rsp,0x20
  403c09:	pop    rbx
  403c0a:	ret    
  403c0b:	call   403100 <__stack_chk_fail@plt>

0000000000403c10 <read_token_notequal@@Base>:
  403c10:	push   rbx
  403c11:	lea    rsi,[rip+0x83fc]        # 40c014 <_IO_stdin_used@@Base+0x14>
  403c18:	sub    rsp,0x20
  403c1c:	add    QWORD PTR [rip+0xea9c],0x1        # 4126c0 <__bss_start@@Base+0x850>
  403c24:	mov    rdi,rsp
  403c27:	mov    rax,QWORD PTR fs:0x28
  403c30:	mov    QWORD PTR [rsp+0x18],rax
  403c35:	xor    eax,eax
  403c37:	call   408210 <init_lexer@@Base>
  403c3c:	mov    rdi,rsp
  403c3f:	add    QWORD PTR [rip+0xea81],0x1        # 4126c8 <__bss_start@@Base+0x858>
  403c47:	call   408360 <next@@Base>
  403c4c:	mov    esi,DWORD PTR [rax]
  403c4e:	xor    edx,edx
  403c50:	mov    r8d,0x94
  403c56:	mov    ecx,0x1f5
  403c5b:	mov    edi,0xc
  403c60:	add    QWORD PTR [rip+0xea68],0x1        # 4126d0 <__bss_start@@Base+0x860>
  403c68:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403c6d:	mov    rdi,rsp
  403c70:	add    QWORD PTR [rip+0xea60],0x1        # 4126d8 <__bss_start@@Base+0x868>
  403c78:	call   408240 <destroy_lexer@@Base>
  403c7d:	add    QWORD PTR [rip+0xea5b],0x1        # 4126e0 <__bss_start@@Base+0x870>
  403c85:	mov    rax,QWORD PTR [rsp+0x18]
  403c8a:	xor    rax,QWORD PTR fs:0x28
  403c93:	jne    403c9b <read_token_notequal@@Base+0x8b>
  403c95:	add    rsp,0x20
  403c99:	pop    rbx
  403c9a:	ret    
  403c9b:	call   403100 <__stack_chk_fail@plt>

0000000000403ca0 <read_token_equalequal@@Base>:
  403ca0:	push   rbx
  403ca1:	lea    rsi,[rip+0x836f]        # 40c017 <_IO_stdin_used@@Base+0x17>
  403ca8:	sub    rsp,0x20
  403cac:	add    QWORD PTR [rip+0xe9cc],0x1        # 412680 <__bss_start@@Base+0x810>
  403cb4:	mov    rdi,rsp
  403cb7:	mov    rax,QWORD PTR fs:0x28
  403cc0:	mov    QWORD PTR [rsp+0x18],rax
  403cc5:	xor    eax,eax
  403cc7:	call   408210 <init_lexer@@Base>
  403ccc:	mov    rdi,rsp
  403ccf:	add    QWORD PTR [rip+0xe9b1],0x1        # 412688 <__bss_start@@Base+0x818>
  403cd7:	call   408360 <next@@Base>
  403cdc:	mov    esi,DWORD PTR [rax]
  403cde:	xor    edx,edx
  403ce0:	mov    r8d,0x94
  403ce6:	mov    ecx,0x1e4
  403ceb:	mov    edi,0xc
  403cf0:	add    QWORD PTR [rip+0xe998],0x1        # 412690 <__bss_start@@Base+0x820>
  403cf8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403cfd:	mov    rdi,rsp
  403d00:	add    QWORD PTR [rip+0xe990],0x1        # 412698 <__bss_start@@Base+0x828>
  403d08:	call   408240 <destroy_lexer@@Base>
  403d0d:	add    QWORD PTR [rip+0xe98b],0x1        # 4126a0 <__bss_start@@Base+0x830>
  403d15:	mov    rax,QWORD PTR [rsp+0x18]
  403d1a:	xor    rax,QWORD PTR fs:0x28
  403d23:	jne    403d2b <read_token_equalequal@@Base+0x8b>
  403d25:	add    rsp,0x20
  403d29:	pop    rbx
  403d2a:	ret    
  403d2b:	call   403100 <__stack_chk_fail@plt>

0000000000403d30 <read_token_else@@Base>:
  403d30:	push   rbx
  403d31:	lea    rsi,[rip+0x8381]        # 40c0b9 <_IO_stdin_used@@Base+0xb9>
  403d38:	sub    rsp,0x20
  403d3c:	add    QWORD PTR [rip+0xe8fc],0x1        # 412640 <__bss_start@@Base+0x7d0>
  403d44:	mov    rdi,rsp
  403d47:	mov    rax,QWORD PTR fs:0x28
  403d50:	mov    QWORD PTR [rsp+0x18],rax
  403d55:	xor    eax,eax
  403d57:	call   408210 <init_lexer@@Base>
  403d5c:	mov    rdi,rsp
  403d5f:	add    QWORD PTR [rip+0xe8e1],0x1        # 412648 <__bss_start@@Base+0x7d8>
  403d67:	call   408360 <next@@Base>
  403d6c:	mov    esi,DWORD PTR [rax]
  403d6e:	xor    edx,edx
  403d70:	mov    r8d,0x94
  403d76:	mov    ecx,0x1d3
  403d7b:	mov    edi,0xb
  403d80:	add    QWORD PTR [rip+0xe8c8],0x1        # 412650 <__bss_start@@Base+0x7e0>
  403d88:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403d8d:	mov    rdi,rsp
  403d90:	add    QWORD PTR [rip+0xe8c0],0x1        # 412658 <__bss_start@@Base+0x7e8>
  403d98:	call   408240 <destroy_lexer@@Base>
  403d9d:	add    QWORD PTR [rip+0xe8bb],0x1        # 412660 <__bss_start@@Base+0x7f0>
  403da5:	mov    rax,QWORD PTR [rsp+0x18]
  403daa:	xor    rax,QWORD PTR fs:0x28
  403db3:	jne    403dbb <read_token_else@@Base+0x8b>
  403db5:	add    rsp,0x20
  403db9:	pop    rbx
  403dba:	ret    
  403dbb:	call   403100 <__stack_chk_fail@plt>

0000000000403dc0 <read_token_if@@Base>:
  403dc0:	push   rbx
  403dc1:	lea    rsi,[rip+0x83b4]        # 40c17c <_IO_stdin_used@@Base+0x17c>
  403dc8:	sub    rsp,0x20
  403dcc:	add    QWORD PTR [rip+0xe82c],0x1        # 412600 <__bss_start@@Base+0x790>
  403dd4:	mov    rdi,rsp
  403dd7:	mov    rax,QWORD PTR fs:0x28
  403de0:	mov    QWORD PTR [rsp+0x18],rax
  403de5:	xor    eax,eax
  403de7:	call   408210 <init_lexer@@Base>
  403dec:	mov    rdi,rsp
  403def:	add    QWORD PTR [rip+0xe811],0x1        # 412608 <__bss_start@@Base+0x798>
  403df7:	call   408360 <next@@Base>
  403dfc:	mov    esi,DWORD PTR [rax]
  403dfe:	xor    edx,edx
  403e00:	mov    r8d,0x94
  403e06:	mov    ecx,0x1c2
  403e0b:	mov    edi,0xa
  403e10:	add    QWORD PTR [rip+0xe7f8],0x1        # 412610 <__bss_start@@Base+0x7a0>
  403e18:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403e1d:	mov    rdi,rsp
  403e20:	add    QWORD PTR [rip+0xe7f0],0x1        # 412618 <__bss_start@@Base+0x7a8>
  403e28:	call   408240 <destroy_lexer@@Base>
  403e2d:	add    QWORD PTR [rip+0xe7eb],0x1        # 412620 <__bss_start@@Base+0x7b0>
  403e35:	mov    rax,QWORD PTR [rsp+0x18]
  403e3a:	xor    rax,QWORD PTR fs:0x28
  403e43:	jne    403e4b <read_token_if@@Base+0x8b>
  403e45:	add    rsp,0x20
  403e49:	pop    rbx
  403e4a:	ret    
  403e4b:	call   403100 <__stack_chk_fail@plt>

0000000000403e50 <read_token_eof@@Base>:
  403e50:	push   rbx
  403e51:	lea    rsi,[rip+0x8c77]        # 40cacf <UnityStrOk@@Base+0x453>
  403e58:	sub    rsp,0x20
  403e5c:	add    QWORD PTR [rip+0xe75c],0x1        # 4125c0 <__bss_start@@Base+0x750>
  403e64:	mov    rdi,rsp
  403e67:	mov    rax,QWORD PTR fs:0x28
  403e70:	mov    QWORD PTR [rsp+0x18],rax
  403e75:	xor    eax,eax
  403e77:	call   408210 <init_lexer@@Base>
  403e7c:	mov    rdi,rsp
  403e7f:	add    QWORD PTR [rip+0xe741],0x1        # 4125c8 <__bss_start@@Base+0x758>
  403e87:	call   408360 <next@@Base>
  403e8c:	mov    esi,DWORD PTR [rax]
  403e8e:	xor    edx,edx
  403e90:	mov    r8d,0x94
  403e96:	mov    ecx,0x1b1
  403e9b:	mov    edi,0x9
  403ea0:	add    QWORD PTR [rip+0xe728],0x1        # 4125d0 <__bss_start@@Base+0x760>
  403ea8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403ead:	mov    rdi,rsp
  403eb0:	add    QWORD PTR [rip+0xe720],0x1        # 4125d8 <__bss_start@@Base+0x768>
  403eb8:	call   408240 <destroy_lexer@@Base>
  403ebd:	add    QWORD PTR [rip+0xe71b],0x1        # 4125e0 <__bss_start@@Base+0x770>
  403ec5:	mov    rax,QWORD PTR [rsp+0x18]
  403eca:	xor    rax,QWORD PTR fs:0x28
  403ed3:	jne    403edb <read_token_eof@@Base+0x8b>
  403ed5:	add    rsp,0x20
  403ed9:	pop    rbx
  403eda:	ret    
  403edb:	call   403100 <__stack_chk_fail@plt>

0000000000403ee0 <read_token_semicolon@@Base>:
  403ee0:	push   rbx
  403ee1:	lea    rsi,[rip+0x8132]        # 40c01a <_IO_stdin_used@@Base+0x1a>
  403ee8:	sub    rsp,0x20
  403eec:	add    QWORD PTR [rip+0xe68c],0x1        # 412580 <__bss_start@@Base+0x710>
  403ef4:	mov    rdi,rsp
  403ef7:	mov    rax,QWORD PTR fs:0x28
  403f00:	mov    QWORD PTR [rsp+0x18],rax
  403f05:	xor    eax,eax
  403f07:	call   408210 <init_lexer@@Base>
  403f0c:	mov    rdi,rsp
  403f0f:	add    QWORD PTR [rip+0xe671],0x1        # 412588 <__bss_start@@Base+0x718>
  403f17:	call   408360 <next@@Base>
  403f1c:	mov    esi,DWORD PTR [rax]
  403f1e:	xor    edx,edx
  403f20:	mov    r8d,0x94
  403f26:	mov    ecx,0x1a0
  403f2b:	mov    edi,0x8
  403f30:	add    QWORD PTR [rip+0xe658],0x1        # 412590 <__bss_start@@Base+0x720>
  403f38:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403f3d:	mov    rdi,rsp
  403f40:	add    QWORD PTR [rip+0xe650],0x1        # 412598 <__bss_start@@Base+0x728>
  403f48:	call   408240 <destroy_lexer@@Base>
  403f4d:	add    QWORD PTR [rip+0xe64b],0x1        # 4125a0 <__bss_start@@Base+0x730>
  403f55:	mov    rax,QWORD PTR [rsp+0x18]
  403f5a:	xor    rax,QWORD PTR fs:0x28
  403f63:	jne    403f6b <read_token_semicolon@@Base+0x8b>
  403f65:	add    rsp,0x20
  403f69:	pop    rbx
  403f6a:	ret    
  403f6b:	call   403100 <__stack_chk_fail@plt>

0000000000403f70 <read_token_return@@Base>:
  403f70:	push   rbx
  403f71:	lea    rsi,[rip+0x81ce]        # 40c146 <_IO_stdin_used@@Base+0x146>
  403f78:	sub    rsp,0x20
  403f7c:	add    QWORD PTR [rip+0xe5bc],0x1        # 412540 <__bss_start@@Base+0x6d0>
  403f84:	mov    rdi,rsp
  403f87:	mov    rax,QWORD PTR fs:0x28
  403f90:	mov    QWORD PTR [rsp+0x18],rax
  403f95:	xor    eax,eax
  403f97:	call   408210 <init_lexer@@Base>
  403f9c:	mov    rdi,rsp
  403f9f:	add    QWORD PTR [rip+0xe5a1],0x1        # 412548 <__bss_start@@Base+0x6d8>
  403fa7:	call   408360 <next@@Base>
  403fac:	mov    esi,DWORD PTR [rax]
  403fae:	xor    edx,edx
  403fb0:	mov    r8d,0x94
  403fb6:	mov    ecx,0x18f
  403fbb:	mov    edi,0x7
  403fc0:	add    QWORD PTR [rip+0xe588],0x1        # 412550 <__bss_start@@Base+0x6e0>
  403fc8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  403fcd:	mov    rdi,rsp
  403fd0:	add    QWORD PTR [rip+0xe580],0x1        # 412558 <__bss_start@@Base+0x6e8>
  403fd8:	call   408240 <destroy_lexer@@Base>
  403fdd:	add    QWORD PTR [rip+0xe57b],0x1        # 412560 <__bss_start@@Base+0x6f0>
  403fe5:	mov    rax,QWORD PTR [rsp+0x18]
  403fea:	xor    rax,QWORD PTR fs:0x28
  403ff3:	jne    403ffb <read_token_return@@Base+0x8b>
  403ff5:	add    rsp,0x20
  403ff9:	pop    rbx
  403ffa:	ret    
  403ffb:	call   403100 <__stack_chk_fail@plt>

0000000000404000 <read_token_cbra@@Base>:
  404000:	push   rbx
  404001:	lea    rsi,[rip+0x803b]        # 40c043 <_IO_stdin_used@@Base+0x43>
  404008:	sub    rsp,0x20
  40400c:	add    QWORD PTR [rip+0xe4ec],0x1        # 412500 <__bss_start@@Base+0x690>
  404014:	mov    rdi,rsp
  404017:	mov    rax,QWORD PTR fs:0x28
  404020:	mov    QWORD PTR [rsp+0x18],rax
  404025:	xor    eax,eax
  404027:	call   408210 <init_lexer@@Base>
  40402c:	mov    rdi,rsp
  40402f:	add    QWORD PTR [rip+0xe4d1],0x1        # 412508 <__bss_start@@Base+0x698>
  404037:	call   408360 <next@@Base>
  40403c:	mov    esi,DWORD PTR [rax]
  40403e:	xor    edx,edx
  404040:	mov    r8d,0x94
  404046:	mov    ecx,0x17e
  40404b:	mov    edi,0x6
  404050:	add    QWORD PTR [rip+0xe4b8],0x1        # 412510 <__bss_start@@Base+0x6a0>
  404058:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40405d:	mov    rdi,rsp
  404060:	add    QWORD PTR [rip+0xe4b0],0x1        # 412518 <__bss_start@@Base+0x6a8>
  404068:	call   408240 <destroy_lexer@@Base>
  40406d:	add    QWORD PTR [rip+0xe4ab],0x1        # 412520 <__bss_start@@Base+0x6b0>
  404075:	mov    rax,QWORD PTR [rsp+0x18]
  40407a:	xor    rax,QWORD PTR fs:0x28
  404083:	jne    40408b <read_token_cbra@@Base+0x8b>
  404085:	add    rsp,0x20
  404089:	pop    rbx
  40408a:	ret    
  40408b:	call   403100 <__stack_chk_fail@plt>

0000000000404090 <read_token_obra@@Base>:
  404090:	push   rbx
  404091:	lea    rsi,[rip+0x7f84]        # 40c01c <_IO_stdin_used@@Base+0x1c>
  404098:	sub    rsp,0x20
  40409c:	add    QWORD PTR [rip+0xe41c],0x1        # 4124c0 <__bss_start@@Base+0x650>
  4040a4:	mov    rdi,rsp
  4040a7:	mov    rax,QWORD PTR fs:0x28
  4040b0:	mov    QWORD PTR [rsp+0x18],rax
  4040b5:	xor    eax,eax
  4040b7:	call   408210 <init_lexer@@Base>
  4040bc:	mov    rdi,rsp
  4040bf:	add    QWORD PTR [rip+0xe401],0x1        # 4124c8 <__bss_start@@Base+0x658>
  4040c7:	call   408360 <next@@Base>
  4040cc:	mov    esi,DWORD PTR [rax]
  4040ce:	xor    edx,edx
  4040d0:	mov    r8d,0x94
  4040d6:	mov    ecx,0x16c
  4040db:	mov    edi,0x5
  4040e0:	add    QWORD PTR [rip+0xe3e8],0x1        # 4124d0 <__bss_start@@Base+0x660>
  4040e8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4040ed:	mov    rdi,rsp
  4040f0:	add    QWORD PTR [rip+0xe3e0],0x1        # 4124d8 <__bss_start@@Base+0x668>
  4040f8:	call   408240 <destroy_lexer@@Base>
  4040fd:	add    QWORD PTR [rip+0xe3db],0x1        # 4124e0 <__bss_start@@Base+0x670>
  404105:	mov    rax,QWORD PTR [rsp+0x18]
  40410a:	xor    rax,QWORD PTR fs:0x28
  404113:	jne    40411b <read_token_obra@@Base+0x8b>
  404115:	add    rsp,0x20
  404119:	pop    rbx
  40411a:	ret    
  40411b:	call   403100 <__stack_chk_fail@plt>

0000000000404120 <read_token_cpar@@Base>:
  404120:	push   rbx
  404121:	lea    rsi,[rip+0x7ef6]        # 40c01e <_IO_stdin_used@@Base+0x1e>
  404128:	sub    rsp,0x20
  40412c:	add    QWORD PTR [rip+0xe34c],0x1        # 412480 <__bss_start@@Base+0x610>
  404134:	mov    rdi,rsp
  404137:	mov    rax,QWORD PTR fs:0x28
  404140:	mov    QWORD PTR [rsp+0x18],rax
  404145:	xor    eax,eax
  404147:	call   408210 <init_lexer@@Base>
  40414c:	mov    rdi,rsp
  40414f:	add    QWORD PTR [rip+0xe331],0x1        # 412488 <__bss_start@@Base+0x618>
  404157:	call   408360 <next@@Base>
  40415c:	mov    esi,DWORD PTR [rax]
  40415e:	xor    edx,edx
  404160:	mov    r8d,0x94
  404166:	mov    ecx,0x15b
  40416b:	mov    edi,0x4
  404170:	add    QWORD PTR [rip+0xe318],0x1        # 412490 <__bss_start@@Base+0x620>
  404178:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40417d:	mov    rdi,rsp
  404180:	add    QWORD PTR [rip+0xe310],0x1        # 412498 <__bss_start@@Base+0x628>
  404188:	call   408240 <destroy_lexer@@Base>
  40418d:	add    QWORD PTR [rip+0xe30b],0x1        # 4124a0 <__bss_start@@Base+0x630>
  404195:	mov    rax,QWORD PTR [rsp+0x18]
  40419a:	xor    rax,QWORD PTR fs:0x28
  4041a3:	jne    4041ab <read_token_cpar@@Base+0x8b>
  4041a5:	add    rsp,0x20
  4041a9:	pop    rbx
  4041aa:	ret    
  4041ab:	call   403100 <__stack_chk_fail@plt>

00000000004041b0 <read_token_opar@@Base>:
  4041b0:	push   rbx
  4041b1:	lea    rsi,[rip+0x7e68]        # 40c020 <_IO_stdin_used@@Base+0x20>
  4041b8:	sub    rsp,0x20
  4041bc:	add    QWORD PTR [rip+0xe27c],0x1        # 412440 <__bss_start@@Base+0x5d0>
  4041c4:	mov    rdi,rsp
  4041c7:	mov    rax,QWORD PTR fs:0x28
  4041d0:	mov    QWORD PTR [rsp+0x18],rax
  4041d5:	xor    eax,eax
  4041d7:	call   408210 <init_lexer@@Base>
  4041dc:	mov    rdi,rsp
  4041df:	add    QWORD PTR [rip+0xe261],0x1        # 412448 <__bss_start@@Base+0x5d8>
  4041e7:	call   408360 <next@@Base>
  4041ec:	mov    esi,DWORD PTR [rax]
  4041ee:	xor    edx,edx
  4041f0:	mov    r8d,0x94
  4041f6:	mov    ecx,0x14a
  4041fb:	mov    edi,0x3
  404200:	add    QWORD PTR [rip+0xe248],0x1        # 412450 <__bss_start@@Base+0x5e0>
  404208:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40420d:	mov    rdi,rsp
  404210:	add    QWORD PTR [rip+0xe240],0x1        # 412458 <__bss_start@@Base+0x5e8>
  404218:	call   408240 <destroy_lexer@@Base>
  40421d:	add    QWORD PTR [rip+0xe23b],0x1        # 412460 <__bss_start@@Base+0x5f0>
  404225:	mov    rax,QWORD PTR [rsp+0x18]
  40422a:	xor    rax,QWORD PTR fs:0x28
  404233:	jne    40423b <read_token_opar@@Base+0x8b>
  404235:	add    rsp,0x20
  404239:	pop    rbx
  40423a:	ret    
  40423b:	call   403100 <__stack_chk_fail@plt>

0000000000404240 <read_token_function@@Base>:
  404240:	push   rbx
  404241:	lea    rsi,[rip+0x7e0e]        # 40c056 <_IO_stdin_used@@Base+0x56>
  404248:	sub    rsp,0x20
  40424c:	add    QWORD PTR [rip+0xe1ac],0x1        # 412400 <__bss_start@@Base+0x590>
  404254:	mov    rdi,rsp
  404257:	mov    rax,QWORD PTR fs:0x28
  404260:	mov    QWORD PTR [rsp+0x18],rax
  404265:	xor    eax,eax
  404267:	call   408210 <init_lexer@@Base>
  40426c:	mov    rdi,rsp
  40426f:	add    QWORD PTR [rip+0xe191],0x1        # 412408 <__bss_start@@Base+0x598>
  404277:	call   408360 <next@@Base>
  40427c:	mov    esi,DWORD PTR [rax]
  40427e:	xor    edx,edx
  404280:	mov    r8d,0x94
  404286:	mov    ecx,0x139
  40428b:	mov    edi,0x2
  404290:	add    QWORD PTR [rip+0xe178],0x1        # 412410 <__bss_start@@Base+0x5a0>
  404298:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40429d:	mov    rdi,rsp
  4042a0:	add    QWORD PTR [rip+0xe170],0x1        # 412418 <__bss_start@@Base+0x5a8>
  4042a8:	call   408240 <destroy_lexer@@Base>
  4042ad:	add    QWORD PTR [rip+0xe16b],0x1        # 412420 <__bss_start@@Base+0x5b0>
  4042b5:	mov    rax,QWORD PTR [rsp+0x18]
  4042ba:	xor    rax,QWORD PTR fs:0x28
  4042c3:	jne    4042cb <read_token_function@@Base+0x8b>
  4042c5:	add    rsp,0x20
  4042c9:	pop    rbx
  4042ca:	ret    
  4042cb:	call   403100 <__stack_chk_fail@plt>

00000000004042d0 <read_token_int_value@@Base>:
  4042d0:	push   rbx
  4042d1:	lea    rsi,[rip+0x7d4a]        # 40c022 <_IO_stdin_used@@Base+0x22>
  4042d8:	sub    rsp,0x20
  4042dc:	add    QWORD PTR [rip+0xe0dc],0x1        # 4123c0 <__bss_start@@Base+0x550>
  4042e4:	mov    rdi,rsp
  4042e7:	mov    rax,QWORD PTR fs:0x28
  4042f0:	mov    QWORD PTR [rsp+0x18],rax
  4042f5:	xor    eax,eax
  4042f7:	call   408210 <init_lexer@@Base>
  4042fc:	mov    rdi,rsp
  4042ff:	add    QWORD PTR [rip+0xe0c1],0x1        # 4123c8 <__bss_start@@Base+0x558>
  404307:	call   408360 <next@@Base>
  40430c:	mov    esi,DWORD PTR [rax]
  40430e:	xor    edx,edx
  404310:	mov    r8d,0x94
  404316:	mov    ecx,0x128
  40431b:	mov    edi,0x1
  404320:	add    QWORD PTR [rip+0xe0a8],0x1        # 4123d0 <__bss_start@@Base+0x560>
  404328:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40432d:	mov    rdi,rsp
  404330:	add    QWORD PTR [rip+0xe0a0],0x1        # 4123d8 <__bss_start@@Base+0x568>
  404338:	call   408240 <destroy_lexer@@Base>
  40433d:	add    QWORD PTR [rip+0xe09b],0x1        # 4123e0 <__bss_start@@Base+0x570>
  404345:	mov    rax,QWORD PTR [rsp+0x18]
  40434a:	xor    rax,QWORD PTR fs:0x28
  404353:	jne    40435b <read_token_int_value@@Base+0x8b>
  404355:	add    rsp,0x20
  404359:	pop    rbx
  40435a:	ret    
  40435b:	call   403100 <__stack_chk_fail@plt>

0000000000404360 <read_token_int_type@@Base>:
  404360:	push   rbx
  404361:	lea    rsi,[rip+0x7cbf]        # 40c027 <_IO_stdin_used@@Base+0x27>
  404368:	sub    rsp,0x20
  40436c:	add    QWORD PTR [rip+0xe00c],0x1        # 412380 <__bss_start@@Base+0x510>
  404374:	mov    rdi,rsp
  404377:	mov    rax,QWORD PTR fs:0x28
  404380:	mov    QWORD PTR [rsp+0x18],rax
  404385:	xor    eax,eax
  404387:	call   408210 <init_lexer@@Base>
  40438c:	mov    rdi,rsp
  40438f:	add    QWORD PTR [rip+0xdff1],0x1        # 412388 <__bss_start@@Base+0x518>
  404397:	call   408360 <next@@Base>
  40439c:	mov    esi,DWORD PTR [rax]
  40439e:	xor    edx,edx
  4043a0:	xor    edi,edi
  4043a2:	mov    r8d,0x94
  4043a8:	mov    ecx,0x117
  4043ad:	add    QWORD PTR [rip+0xdfdb],0x1        # 412390 <__bss_start@@Base+0x520>
  4043b5:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4043ba:	mov    rdi,rsp
  4043bd:	add    QWORD PTR [rip+0xdfd3],0x1        # 412398 <__bss_start@@Base+0x528>
  4043c5:	call   408240 <destroy_lexer@@Base>
  4043ca:	add    QWORD PTR [rip+0xdfce],0x1        # 4123a0 <__bss_start@@Base+0x530>
  4043d2:	mov    rax,QWORD PTR [rsp+0x18]
  4043d7:	xor    rax,QWORD PTR fs:0x28
  4043e0:	jne    4043e8 <read_token_int_type@@Base+0x88>
  4043e2:	add    rsp,0x20
  4043e6:	pop    rbx
  4043e7:	ret    
  4043e8:	call   403100 <__stack_chk_fail@plt>
  4043ed:	nop    DWORD PTR [rax]

00000000004043f0 <if_with_else@@Base>:
  4043f0:	push   rbx
  4043f1:	lea    rsi,[rip+0x7e58]        # 40c250 <_IO_stdin_used@@Base+0x250>
  4043f8:	sub    rsp,0x20
  4043fc:	add    QWORD PTR [rip+0xdd9c],0x1        # 4121a0 <__bss_start@@Base+0x330>
  404404:	mov    rdi,rsp
  404407:	mov    rax,QWORD PTR fs:0x28
  404410:	mov    QWORD PTR [rsp+0x18],rax
  404415:	xor    eax,eax
  404417:	call   408210 <init_lexer@@Base>
  40441c:	mov    rdi,rsp
  40441f:	add    QWORD PTR [rip+0xdd81],0x1        # 4121a8 <__bss_start@@Base+0x338>
  404427:	call   408360 <next@@Base>
  40442c:	mov    esi,DWORD PTR [rax]
  40442e:	xor    edx,edx
  404430:	mov    r8d,0x94
  404436:	mov    ecx,0xd2
  40443b:	xor    edi,edi
  40443d:	add    QWORD PTR [rip+0xdd6b],0x1        # 4121b0 <__bss_start@@Base+0x340>
  404445:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40444a:	mov    rdi,rsp
  40444d:	add    QWORD PTR [rip+0xdd63],0x1        # 4121b8 <__bss_start@@Base+0x348>
  404455:	call   408360 <next@@Base>
  40445a:	mov    esi,DWORD PTR [rax]
  40445c:	xor    edx,edx
  40445e:	mov    r8d,0x94
  404464:	mov    ecx,0xd4
  404469:	mov    edi,0x2
  40446e:	add    QWORD PTR [rip+0xdd4a],0x1        # 4121c0 <__bss_start@@Base+0x350>
  404476:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40447b:	mov    rdi,rsp
  40447e:	add    QWORD PTR [rip+0xdd42],0x1        # 4121c8 <__bss_start@@Base+0x358>
  404486:	call   408360 <next@@Base>
  40448b:	mov    esi,DWORD PTR [rax]
  40448d:	xor    edx,edx
  40448f:	mov    r8d,0x94
  404495:	mov    ecx,0xd6
  40449a:	mov    edi,0x3
  40449f:	add    QWORD PTR [rip+0xdd29],0x1        # 4121d0 <__bss_start@@Base+0x360>
  4044a7:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4044ac:	mov    rdi,rsp
  4044af:	add    QWORD PTR [rip+0xdd21],0x1        # 4121d8 <__bss_start@@Base+0x368>
  4044b7:	call   408360 <next@@Base>
  4044bc:	mov    esi,DWORD PTR [rax]
  4044be:	xor    edx,edx
  4044c0:	mov    r8d,0x94
  4044c6:	mov    ecx,0xd8
  4044cb:	mov    edi,0x4
  4044d0:	add    QWORD PTR [rip+0xdd08],0x1        # 4121e0 <__bss_start@@Base+0x370>
  4044d8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4044dd:	mov    rdi,rsp
  4044e0:	add    QWORD PTR [rip+0xdd00],0x1        # 4121e8 <__bss_start@@Base+0x378>
  4044e8:	call   408360 <next@@Base>
  4044ed:	mov    esi,DWORD PTR [rax]
  4044ef:	xor    edx,edx
  4044f1:	mov    r8d,0x94
  4044f7:	mov    ecx,0xda
  4044fc:	mov    edi,0x5
  404501:	add    QWORD PTR [rip+0xdce7],0x1        # 4121f0 <__bss_start@@Base+0x380>
  404509:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40450e:	mov    rdi,rsp
  404511:	add    QWORD PTR [rip+0xdcdf],0x1        # 4121f8 <__bss_start@@Base+0x388>
  404519:	call   408360 <next@@Base>
  40451e:	mov    esi,DWORD PTR [rax]
  404520:	add    QWORD PTR [rip+0xdcd8],0x1        # 412200 <__bss_start@@Base+0x390>
  404528:	mov    r8d,0x94
  40452e:	xor    edx,edx
  404530:	mov    ecx,0xdc
  404535:	mov    edi,0xa
  40453a:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40453f:	mov    rdi,rsp
  404542:	add    QWORD PTR [rip+0xdcbe],0x1        # 412208 <__bss_start@@Base+0x398>
  40454a:	call   408360 <next@@Base>
  40454f:	mov    esi,DWORD PTR [rax]
  404551:	xor    edx,edx
  404553:	mov    r8d,0x94
  404559:	mov    ecx,0xde
  40455e:	mov    edi,0x3
  404563:	add    QWORD PTR [rip+0xdca5],0x1        # 412210 <__bss_start@@Base+0x3a0>
  40456b:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404570:	mov    rdi,rsp
  404573:	add    QWORD PTR [rip+0xdc9d],0x1        # 412218 <__bss_start@@Base+0x3a8>
  40457b:	call   408360 <next@@Base>
  404580:	mov    esi,DWORD PTR [rax]
  404582:	xor    edx,edx
  404584:	mov    r8d,0x94
  40458a:	mov    ecx,0xe0
  40458f:	mov    edi,0x1
  404594:	add    QWORD PTR [rip+0xdc84],0x1        # 412220 <__bss_start@@Base+0x3b0>
  40459c:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4045a1:	mov    rdi,rsp
  4045a4:	add    QWORD PTR [rip+0xdc7c],0x1        # 412228 <__bss_start@@Base+0x3b8>
  4045ac:	call   408360 <next@@Base>
  4045b1:	mov    esi,DWORD PTR [rax]
  4045b3:	xor    edx,edx
  4045b5:	mov    r8d,0x94
  4045bb:	mov    ecx,0xe2
  4045c0:	mov    edi,0xc
  4045c5:	add    QWORD PTR [rip+0xdc63],0x1        # 412230 <__bss_start@@Base+0x3c0>
  4045cd:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4045d2:	mov    rdi,rsp
  4045d5:	add    QWORD PTR [rip+0xdc5b],0x1        # 412238 <__bss_start@@Base+0x3c8>
  4045dd:	call   408360 <next@@Base>
  4045e2:	mov    esi,DWORD PTR [rax]
  4045e4:	xor    edx,edx
  4045e6:	mov    r8d,0x94
  4045ec:	mov    ecx,0xe4
  4045f1:	mov    edi,0x1
  4045f6:	add    QWORD PTR [rip+0xdc42],0x1        # 412240 <__bss_start@@Base+0x3d0>
  4045fe:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404603:	mov    rdi,rsp
  404606:	add    QWORD PTR [rip+0xdc3a],0x1        # 412248 <__bss_start@@Base+0x3d8>
  40460e:	call   408360 <next@@Base>
  404613:	mov    esi,DWORD PTR [rax]
  404615:	xor    edx,edx
  404617:	mov    r8d,0x94
  40461d:	mov    ecx,0xe6
  404622:	mov    edi,0x4
  404627:	add    QWORD PTR [rip+0xdc21],0x1        # 412250 <__bss_start@@Base+0x3e0>
  40462f:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404634:	mov    rdi,rsp
  404637:	add    QWORD PTR [rip+0xdc19],0x1        # 412258 <__bss_start@@Base+0x3e8>
  40463f:	call   408360 <next@@Base>
  404644:	mov    esi,DWORD PTR [rax]
  404646:	mov    r8d,0x94
  40464c:	mov    ecx,0xe8
  404651:	xor    edx,edx
  404653:	mov    edi,0x5
  404658:	add    QWORD PTR [rip+0xdc00],0x1        # 412260 <__bss_start@@Base+0x3f0>
  404660:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404665:	mov    rdi,rsp
  404668:	add    QWORD PTR [rip+0xdbf8],0x1        # 412268 <__bss_start@@Base+0x3f8>
  404670:	call   408360 <next@@Base>
  404675:	mov    esi,DWORD PTR [rax]
  404677:	xor    edx,edx
  404679:	mov    r8d,0x94
  40467f:	mov    ecx,0xea
  404684:	mov    edi,0x7
  404689:	add    QWORD PTR [rip+0xdbdf],0x1        # 412270 <__bss_start@@Base+0x400>
  404691:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404696:	mov    rdi,rsp
  404699:	add    QWORD PTR [rip+0xdbd7],0x1        # 412278 <__bss_start@@Base+0x408>
  4046a1:	call   408360 <next@@Base>
  4046a6:	mov    esi,DWORD PTR [rax]
  4046a8:	xor    edx,edx
  4046aa:	mov    r8d,0x94
  4046b0:	mov    ecx,0xec
  4046b5:	mov    edi,0x1
  4046ba:	add    QWORD PTR [rip+0xdbbe],0x1        # 412280 <__bss_start@@Base+0x410>
  4046c2:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4046c7:	mov    rdi,rsp
  4046ca:	add    QWORD PTR [rip+0xdbb6],0x1        # 412288 <__bss_start@@Base+0x418>
  4046d2:	call   408360 <next@@Base>
  4046d7:	mov    esi,DWORD PTR [rax]
  4046d9:	xor    edx,edx
  4046db:	mov    r8d,0x94
  4046e1:	mov    ecx,0xee
  4046e6:	mov    edi,0x8
  4046eb:	add    QWORD PTR [rip+0xdb9d],0x1        # 412290 <__bss_start@@Base+0x420>
  4046f3:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4046f8:	mov    rdi,rsp
  4046fb:	add    QWORD PTR [rip+0xdb95],0x1        # 412298 <__bss_start@@Base+0x428>
  404703:	call   408360 <next@@Base>
  404708:	mov    esi,DWORD PTR [rax]
  40470a:	xor    edx,edx
  40470c:	mov    r8d,0x94
  404712:	mov    ecx,0xf0
  404717:	mov    edi,0x6
  40471c:	add    QWORD PTR [rip+0xdb7c],0x1        # 4122a0 <__bss_start@@Base+0x430>
  404724:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404729:	mov    rdi,rsp
  40472c:	add    QWORD PTR [rip+0xdb74],0x1        # 4122a8 <__bss_start@@Base+0x438>
  404734:	call   408360 <next@@Base>
  404739:	mov    esi,DWORD PTR [rax]
  40473b:	xor    edx,edx
  40473d:	mov    r8d,0x94
  404743:	mov    ecx,0xf2
  404748:	mov    edi,0xb
  40474d:	add    QWORD PTR [rip+0xdb5b],0x1        # 4122b0 <__bss_start@@Base+0x440>
  404755:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40475a:	mov    rdi,rsp
  40475d:	add    QWORD PTR [rip+0xdb53],0x1        # 4122b8 <__bss_start@@Base+0x448>
  404765:	call   408360 <next@@Base>
  40476a:	mov    esi,DWORD PTR [rax]
  40476c:	mov    r8d,0x94
  404772:	mov    ecx,0xf4
  404777:	xor    edx,edx
  404779:	mov    edi,0x5
  40477e:	add    QWORD PTR [rip+0xdb3a],0x1        # 4122c0 <__bss_start@@Base+0x450>
  404786:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40478b:	mov    rdi,rsp
  40478e:	add    QWORD PTR [rip+0xdb32],0x1        # 4122c8 <__bss_start@@Base+0x458>
  404796:	call   408360 <next@@Base>
  40479b:	mov    esi,DWORD PTR [rax]
  40479d:	xor    edx,edx
  40479f:	mov    r8d,0x94
  4047a5:	mov    ecx,0xf6
  4047aa:	mov    edi,0x7
  4047af:	add    QWORD PTR [rip+0xdb19],0x1        # 4122d0 <__bss_start@@Base+0x460>
  4047b7:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4047bc:	mov    rdi,rsp
  4047bf:	add    QWORD PTR [rip+0xdb11],0x1        # 4122d8 <__bss_start@@Base+0x468>
  4047c7:	call   408360 <next@@Base>
  4047cc:	mov    esi,DWORD PTR [rax]
  4047ce:	xor    edx,edx
  4047d0:	mov    r8d,0x94
  4047d6:	mov    ecx,0xf8
  4047db:	mov    edi,0x1
  4047e0:	add    QWORD PTR [rip+0xdaf8],0x1        # 4122e0 <__bss_start@@Base+0x470>
  4047e8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4047ed:	mov    rdi,rsp
  4047f0:	add    QWORD PTR [rip+0xdaf0],0x1        # 4122e8 <__bss_start@@Base+0x478>
  4047f8:	call   408360 <next@@Base>
  4047fd:	mov    esi,DWORD PTR [rax]
  4047ff:	xor    edx,edx
  404801:	mov    r8d,0x94
  404807:	mov    ecx,0xfa
  40480c:	mov    edi,0x8
  404811:	add    QWORD PTR [rip+0xdad7],0x1        # 4122f0 <__bss_start@@Base+0x480>
  404819:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40481e:	mov    rdi,rsp
  404821:	add    QWORD PTR [rip+0xdacf],0x1        # 4122f8 <__bss_start@@Base+0x488>
  404829:	call   408360 <next@@Base>
  40482e:	mov    esi,DWORD PTR [rax]
  404830:	xor    edx,edx
  404832:	mov    r8d,0x94
  404838:	mov    ecx,0xfc
  40483d:	mov    edi,0x6
  404842:	add    QWORD PTR [rip+0xdab6],0x1        # 412300 <__bss_start@@Base+0x490>
  40484a:	call   405ee0 <UnityAssertEqualNumber@@Base>
  40484f:	mov    rdi,rsp
  404852:	add    QWORD PTR [rip+0xdaae],0x1        # 412308 <__bss_start@@Base+0x498>
  40485a:	call   408360 <next@@Base>
  40485f:	mov    esi,DWORD PTR [rax]
  404861:	xor    edx,edx
  404863:	mov    r8d,0x94
  404869:	mov    ecx,0xfe
  40486e:	mov    edi,0x7
  404873:	add    QWORD PTR [rip+0xda95],0x1        # 412310 <__bss_start@@Base+0x4a0>
  40487b:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404880:	mov    rdi,rsp
  404883:	add    QWORD PTR [rip+0xda8d],0x1        # 412318 <__bss_start@@Base+0x4a8>
  40488b:	call   408360 <next@@Base>
  404890:	mov    esi,DWORD PTR [rax]
  404892:	mov    r8d,0x94
  404898:	mov    ecx,0x100
  40489d:	xor    edx,edx
  40489f:	mov    edi,0x1
  4048a4:	add    QWORD PTR [rip+0xda74],0x1        # 412320 <__bss_start@@Base+0x4b0>
  4048ac:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4048b1:	mov    rdi,rsp
  4048b4:	add    QWORD PTR [rip+0xda6c],0x1        # 412328 <__bss_start@@Base+0x4b8>
  4048bc:	call   408360 <next@@Base>
  4048c1:	mov    esi,DWORD PTR [rax]
  4048c3:	mov    r8d,0x94
  4048c9:	mov    ecx,0x102
  4048ce:	add    QWORD PTR [rip+0xda5a],0x1        # 412330 <__bss_start@@Base+0x4c0>
  4048d6:	mov    edi,0x8
  4048db:	xor    edx,edx
  4048dd:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4048e2:	mov    rdi,rsp
  4048e5:	add    QWORD PTR [rip+0xda4b],0x1        # 412338 <__bss_start@@Base+0x4c8>
  4048ed:	call   408360 <next@@Base>
  4048f2:	mov    esi,DWORD PTR [rax]
  4048f4:	xor    edx,edx
  4048f6:	mov    r8d,0x94
  4048fc:	mov    ecx,0x104
  404901:	mov    edi,0x6
  404906:	add    QWORD PTR [rip+0xda32],0x1        # 412340 <__bss_start@@Base+0x4d0>
  40490e:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404913:	mov    rdi,rsp
  404916:	add    QWORD PTR [rip+0xda2a],0x1        # 412348 <__bss_start@@Base+0x4d8>
  40491e:	call   408360 <next@@Base>
  404923:	mov    esi,DWORD PTR [rax]
  404925:	xor    edx,edx
  404927:	mov    r8d,0x94
  40492d:	mov    ecx,0x106
  404932:	mov    edi,0x9
  404937:	add    QWORD PTR [rip+0xda11],0x1        # 412350 <__bss_start@@Base+0x4e0>
  40493f:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404944:	mov    rdi,rsp
  404947:	add    QWORD PTR [rip+0xda09],0x1        # 412358 <__bss_start@@Base+0x4e8>
  40494f:	call   408240 <destroy_lexer@@Base>
  404954:	add    QWORD PTR [rip+0xda04],0x1        # 412360 <__bss_start@@Base+0x4f0>
  40495c:	mov    rax,QWORD PTR [rsp+0x18]
  404961:	xor    rax,QWORD PTR fs:0x28
  40496a:	jne    404972 <if_with_else@@Base+0x582>
  40496c:	add    rsp,0x20
  404970:	pop    rbx
  404971:	ret    
  404972:	call   403100 <__stack_chk_fail@plt>
  404977:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404980 <if_without_else@@Base>:
  404980:	push   rbx
  404981:	lea    rsi,[rip+0x7920]        # 40c2a8 <_IO_stdin_used@@Base+0x2a8>
  404988:	sub    rsp,0x20
  40498c:	add    QWORD PTR [rip+0xd68c],0x1        # 412020 <__bss_start@@Base+0x1b0>
  404994:	mov    rdi,rsp
  404997:	mov    rax,QWORD PTR fs:0x28
  4049a0:	mov    QWORD PTR [rsp+0x18],rax
  4049a5:	xor    eax,eax
  4049a7:	call   408210 <init_lexer@@Base>
  4049ac:	mov    rdi,rsp
  4049af:	add    QWORD PTR [rip+0xd671],0x1        # 412028 <__bss_start@@Base+0x1b8>
  4049b7:	call   408360 <next@@Base>
  4049bc:	mov    esi,DWORD PTR [rax]
  4049be:	xor    edx,edx
  4049c0:	mov    r8d,0x94
  4049c6:	mov    ecx,0x8c
  4049cb:	xor    edi,edi
  4049cd:	add    QWORD PTR [rip+0xd65b],0x1        # 412030 <__bss_start@@Base+0x1c0>
  4049d5:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4049da:	mov    rdi,rsp
  4049dd:	add    QWORD PTR [rip+0xd653],0x1        # 412038 <__bss_start@@Base+0x1c8>
  4049e5:	call   408360 <next@@Base>
  4049ea:	mov    esi,DWORD PTR [rax]
  4049ec:	xor    edx,edx
  4049ee:	mov    r8d,0x94
  4049f4:	mov    ecx,0x8e
  4049f9:	mov    edi,0x2
  4049fe:	add    QWORD PTR [rip+0xd63a],0x1        # 412040 <__bss_start@@Base+0x1d0>
  404a06:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404a0b:	mov    rdi,rsp
  404a0e:	add    QWORD PTR [rip+0xd632],0x1        # 412048 <__bss_start@@Base+0x1d8>
  404a16:	call   408360 <next@@Base>
  404a1b:	mov    esi,DWORD PTR [rax]
  404a1d:	xor    edx,edx
  404a1f:	mov    r8d,0x94
  404a25:	mov    ecx,0x90
  404a2a:	mov    edi,0x3
  404a2f:	add    QWORD PTR [rip+0xd619],0x1        # 412050 <__bss_start@@Base+0x1e0>
  404a37:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404a3c:	mov    rdi,rsp
  404a3f:	add    QWORD PTR [rip+0xd611],0x1        # 412058 <__bss_start@@Base+0x1e8>
  404a47:	call   408360 <next@@Base>
  404a4c:	mov    esi,DWORD PTR [rax]
  404a4e:	xor    edx,edx
  404a50:	mov    r8d,0x94
  404a56:	mov    ecx,0x92
  404a5b:	mov    edi,0x4
  404a60:	add    QWORD PTR [rip+0xd5f8],0x1        # 412060 <__bss_start@@Base+0x1f0>
  404a68:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404a6d:	mov    rdi,rsp
  404a70:	add    QWORD PTR [rip+0xd5f0],0x1        # 412068 <__bss_start@@Base+0x1f8>
  404a78:	call   408360 <next@@Base>
  404a7d:	mov    esi,DWORD PTR [rax]
  404a7f:	xor    edx,edx
  404a81:	mov    r8d,0x94
  404a87:	mov    ecx,0x94
  404a8c:	mov    edi,0x5
  404a91:	add    QWORD PTR [rip+0xd5d7],0x1        # 412070 <__bss_start@@Base+0x200>
  404a99:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404a9e:	mov    rdi,rsp
  404aa1:	add    QWORD PTR [rip+0xd5cf],0x1        # 412078 <__bss_start@@Base+0x208>
  404aa9:	call   408360 <next@@Base>
  404aae:	mov    esi,DWORD PTR [rax]
  404ab0:	add    QWORD PTR [rip+0xd5c8],0x1        # 412080 <__bss_start@@Base+0x210>
  404ab8:	mov    r8d,0x94
  404abe:	xor    edx,edx
  404ac0:	mov    ecx,0x96
  404ac5:	mov    edi,0xa
  404aca:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404acf:	mov    rdi,rsp
  404ad2:	add    QWORD PTR [rip+0xd5ae],0x1        # 412088 <__bss_start@@Base+0x218>
  404ada:	call   408360 <next@@Base>
  404adf:	mov    esi,DWORD PTR [rax]
  404ae1:	xor    edx,edx
  404ae3:	mov    r8d,0x94
  404ae9:	mov    ecx,0x98
  404aee:	mov    edi,0x3
  404af3:	add    QWORD PTR [rip+0xd595],0x1        # 412090 <__bss_start@@Base+0x220>
  404afb:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404b00:	mov    rdi,rsp
  404b03:	add    QWORD PTR [rip+0xd58d],0x1        # 412098 <__bss_start@@Base+0x228>
  404b0b:	call   408360 <next@@Base>
  404b10:	mov    esi,DWORD PTR [rax]
  404b12:	xor    edx,edx
  404b14:	mov    r8d,0x94
  404b1a:	mov    ecx,0x9a
  404b1f:	mov    edi,0x1
  404b24:	add    QWORD PTR [rip+0xd574],0x1        # 4120a0 <__bss_start@@Base+0x230>
  404b2c:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404b31:	mov    rdi,rsp
  404b34:	add    QWORD PTR [rip+0xd56c],0x1        # 4120a8 <__bss_start@@Base+0x238>
  404b3c:	call   408360 <next@@Base>
  404b41:	mov    esi,DWORD PTR [rax]
  404b43:	xor    edx,edx
  404b45:	mov    r8d,0x94
  404b4b:	mov    ecx,0x9c
  404b50:	mov    edi,0xc
  404b55:	add    QWORD PTR [rip+0xd553],0x1        # 4120b0 <__bss_start@@Base+0x240>
  404b5d:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404b62:	mov    rdi,rsp
  404b65:	add    QWORD PTR [rip+0xd54b],0x1        # 4120b8 <__bss_start@@Base+0x248>
  404b6d:	call   408360 <next@@Base>
  404b72:	mov    esi,DWORD PTR [rax]
  404b74:	xor    edx,edx
  404b76:	mov    r8d,0x94
  404b7c:	mov    ecx,0x9e
  404b81:	mov    edi,0x1
  404b86:	add    QWORD PTR [rip+0xd532],0x1        # 4120c0 <__bss_start@@Base+0x250>
  404b8e:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404b93:	mov    rdi,rsp
  404b96:	add    QWORD PTR [rip+0xd52a],0x1        # 4120c8 <__bss_start@@Base+0x258>
  404b9e:	call   408360 <next@@Base>
  404ba3:	mov    esi,DWORD PTR [rax]
  404ba5:	xor    edx,edx
  404ba7:	mov    r8d,0x94
  404bad:	mov    ecx,0xa0
  404bb2:	mov    edi,0x4
  404bb7:	add    QWORD PTR [rip+0xd511],0x1        # 4120d0 <__bss_start@@Base+0x260>
  404bbf:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404bc4:	mov    rdi,rsp
  404bc7:	add    QWORD PTR [rip+0xd509],0x1        # 4120d8 <__bss_start@@Base+0x268>
  404bcf:	call   408360 <next@@Base>
  404bd4:	mov    esi,DWORD PTR [rax]
  404bd6:	mov    r8d,0x94
  404bdc:	mov    ecx,0xa2
  404be1:	xor    edx,edx
  404be3:	mov    edi,0x5
  404be8:	add    QWORD PTR [rip+0xd4f0],0x1        # 4120e0 <__bss_start@@Base+0x270>
  404bf0:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404bf5:	mov    rdi,rsp
  404bf8:	add    QWORD PTR [rip+0xd4e8],0x1        # 4120e8 <__bss_start@@Base+0x278>
  404c00:	call   408360 <next@@Base>
  404c05:	mov    esi,DWORD PTR [rax]
  404c07:	xor    edx,edx
  404c09:	mov    r8d,0x94
  404c0f:	mov    ecx,0xa4
  404c14:	mov    edi,0x7
  404c19:	add    QWORD PTR [rip+0xd4cf],0x1        # 4120f0 <__bss_start@@Base+0x280>
  404c21:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404c26:	mov    rdi,rsp
  404c29:	add    QWORD PTR [rip+0xd4c7],0x1        # 4120f8 <__bss_start@@Base+0x288>
  404c31:	call   408360 <next@@Base>
  404c36:	mov    esi,DWORD PTR [rax]
  404c38:	xor    edx,edx
  404c3a:	mov    r8d,0x94
  404c40:	mov    ecx,0xa6
  404c45:	mov    edi,0x1
  404c4a:	add    QWORD PTR [rip+0xd4ae],0x1        # 412100 <__bss_start@@Base+0x290>
  404c52:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404c57:	mov    rdi,rsp
  404c5a:	add    QWORD PTR [rip+0xd4a6],0x1        # 412108 <__bss_start@@Base+0x298>
  404c62:	call   408360 <next@@Base>
  404c67:	mov    esi,DWORD PTR [rax]
  404c69:	xor    edx,edx
  404c6b:	mov    r8d,0x94
  404c71:	mov    ecx,0xa8
  404c76:	mov    edi,0x8
  404c7b:	add    QWORD PTR [rip+0xd48d],0x1        # 412110 <__bss_start@@Base+0x2a0>
  404c83:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404c88:	mov    rdi,rsp
  404c8b:	add    QWORD PTR [rip+0xd485],0x1        # 412118 <__bss_start@@Base+0x2a8>
  404c93:	call   408360 <next@@Base>
  404c98:	mov    esi,DWORD PTR [rax]
  404c9a:	xor    edx,edx
  404c9c:	mov    r8d,0x94
  404ca2:	mov    ecx,0xaa
  404ca7:	mov    edi,0x6
  404cac:	add    QWORD PTR [rip+0xd46c],0x1        # 412120 <__bss_start@@Base+0x2b0>
  404cb4:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404cb9:	mov    rdi,rsp
  404cbc:	add    QWORD PTR [rip+0xd464],0x1        # 412128 <__bss_start@@Base+0x2b8>
  404cc4:	call   408360 <next@@Base>
  404cc9:	mov    esi,DWORD PTR [rax]
  404ccb:	xor    edx,edx
  404ccd:	mov    r8d,0x94
  404cd3:	mov    ecx,0xac
  404cd8:	mov    edi,0x7
  404cdd:	add    QWORD PTR [rip+0xd44b],0x1        # 412130 <__bss_start@@Base+0x2c0>
  404ce5:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404cea:	mov    rdi,rsp
  404ced:	add    QWORD PTR [rip+0xd443],0x1        # 412138 <__bss_start@@Base+0x2c8>
  404cf5:	call   408360 <next@@Base>
  404cfa:	mov    esi,DWORD PTR [rax]
  404cfc:	mov    r8d,0x94
  404d02:	mov    ecx,0xae
  404d07:	xor    edx,edx
  404d09:	mov    edi,0x1
  404d0e:	add    QWORD PTR [rip+0xd42a],0x1        # 412140 <__bss_start@@Base+0x2d0>
  404d16:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404d1b:	mov    rdi,rsp
  404d1e:	add    QWORD PTR [rip+0xd422],0x1        # 412148 <__bss_start@@Base+0x2d8>
  404d26:	call   408360 <next@@Base>
  404d2b:	mov    esi,DWORD PTR [rax]
  404d2d:	xor    edx,edx
  404d2f:	mov    r8d,0x94
  404d35:	mov    ecx,0xb0
  404d3a:	mov    edi,0x8
  404d3f:	add    QWORD PTR [rip+0xd409],0x1        # 412150 <__bss_start@@Base+0x2e0>
  404d47:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404d4c:	mov    rdi,rsp
  404d4f:	add    QWORD PTR [rip+0xd401],0x1        # 412158 <__bss_start@@Base+0x2e8>
  404d57:	call   408360 <next@@Base>
  404d5c:	mov    esi,DWORD PTR [rax]
  404d5e:	xor    edx,edx
  404d60:	mov    r8d,0x94
  404d66:	mov    ecx,0xb2
  404d6b:	mov    edi,0x6
  404d70:	add    QWORD PTR [rip+0xd3e8],0x1        # 412160 <__bss_start@@Base+0x2f0>
  404d78:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404d7d:	mov    rdi,rsp
  404d80:	add    QWORD PTR [rip+0xd3e0],0x1        # 412168 <__bss_start@@Base+0x2f8>
  404d88:	call   408360 <next@@Base>
  404d8d:	mov    esi,DWORD PTR [rax]
  404d8f:	xor    edx,edx
  404d91:	mov    r8d,0x94
  404d97:	mov    ecx,0xb4
  404d9c:	mov    edi,0x9
  404da1:	add    QWORD PTR [rip+0xd3c7],0x1        # 412170 <__bss_start@@Base+0x300>
  404da9:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404dae:	mov    rdi,rsp
  404db1:	add    QWORD PTR [rip+0xd3bf],0x1        # 412178 <__bss_start@@Base+0x308>
  404db9:	call   408240 <destroy_lexer@@Base>
  404dbe:	add    QWORD PTR [rip+0xd3ba],0x1        # 412180 <__bss_start@@Base+0x310>
  404dc6:	mov    rax,QWORD PTR [rsp+0x18]
  404dcb:	xor    rax,QWORD PTR fs:0x28
  404dd4:	jne    404ddc <if_without_else@@Base+0x45c>
  404dd6:	add    rsp,0x20
  404dda:	pop    rbx
  404ddb:	ret    
  404ddc:	call   403100 <__stack_chk_fail@plt>
  404de1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404dec:	nop    DWORD PTR [rax+0x0]

0000000000404df0 <simple_file_only_main@@Base>:
  404df0:	push   rbx
  404df1:	lea    rsi,[rip+0x7233]        # 40c02b <_IO_stdin_used@@Base+0x2b>
  404df8:	sub    rsp,0x20
  404dfc:	add    QWORD PTR [rip+0xd09c],0x1        # 411ea0 <__bss_start@@Base+0x30>
  404e04:	mov    rdi,rsp
  404e07:	mov    rax,QWORD PTR fs:0x28
  404e10:	mov    QWORD PTR [rsp+0x18],rax
  404e15:	xor    eax,eax
  404e17:	call   408210 <init_lexer@@Base>
  404e1c:	mov    rdi,rsp
  404e1f:	add    QWORD PTR [rip+0xd081],0x1        # 411ea8 <__bss_start@@Base+0x38>
  404e27:	call   408360 <next@@Base>
  404e2c:	mov    esi,DWORD PTR [rax]
  404e2e:	xor    edx,edx
  404e30:	mov    r8d,0x94
  404e36:	mov    ecx,0x17
  404e3b:	xor    edi,edi
  404e3d:	add    QWORD PTR [rip+0xd06b],0x1        # 411eb0 <__bss_start@@Base+0x40>
  404e45:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404e4a:	mov    rdi,rsp
  404e4d:	add    QWORD PTR [rip+0xd063],0x1        # 411eb8 <__bss_start@@Base+0x48>
  404e55:	call   408360 <next@@Base>
  404e5a:	mov    esi,DWORD PTR [rax]
  404e5c:	xor    edx,edx
  404e5e:	mov    r8d,0x94
  404e64:	mov    ecx,0x19
  404e69:	mov    edi,0x2
  404e6e:	add    QWORD PTR [rip+0xd04a],0x1        # 411ec0 <__bss_start@@Base+0x50>
  404e76:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404e7b:	mov    rdi,rsp
  404e7e:	add    QWORD PTR [rip+0xd042],0x1        # 411ec8 <__bss_start@@Base+0x58>
  404e86:	call   408360 <next@@Base>
  404e8b:	mov    esi,DWORD PTR [rax]
  404e8d:	xor    edx,edx
  404e8f:	mov    r8d,0x94
  404e95:	mov    ecx,0x1b
  404e9a:	mov    edi,0x3
  404e9f:	add    QWORD PTR [rip+0xd029],0x1        # 411ed0 <__bss_start@@Base+0x60>
  404ea7:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404eac:	mov    rdi,rsp
  404eaf:	add    QWORD PTR [rip+0xd021],0x1        # 411ed8 <__bss_start@@Base+0x68>
  404eb7:	call   408360 <next@@Base>
  404ebc:	mov    esi,DWORD PTR [rax]
  404ebe:	xor    edx,edx
  404ec0:	mov    r8d,0x94
  404ec6:	mov    ecx,0x1d
  404ecb:	mov    edi,0x4
  404ed0:	add    QWORD PTR [rip+0xd008],0x1        # 411ee0 <__bss_start@@Base+0x70>
  404ed8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404edd:	mov    rdi,rsp
  404ee0:	add    QWORD PTR [rip+0xd000],0x1        # 411ee8 <__bss_start@@Base+0x78>
  404ee8:	call   408360 <next@@Base>
  404eed:	mov    esi,DWORD PTR [rax]
  404eef:	xor    edx,edx
  404ef1:	mov    r8d,0x94
  404ef7:	mov    ecx,0x1f
  404efc:	mov    edi,0x5
  404f01:	add    QWORD PTR [rip+0xcfe7],0x1        # 411ef0 <__bss_start@@Base+0x80>
  404f09:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404f0e:	mov    rdi,rsp
  404f11:	add    QWORD PTR [rip+0xcfdf],0x1        # 411ef8 <__bss_start@@Base+0x88>
  404f19:	call   408360 <next@@Base>
  404f1e:	mov    esi,DWORD PTR [rax]
  404f20:	add    QWORD PTR [rip+0xcfd8],0x1        # 411f00 <__bss_start@@Base+0x90>
  404f28:	mov    r8d,0x94
  404f2e:	xor    edx,edx
  404f30:	mov    ecx,0x21
  404f35:	mov    edi,0x7
  404f3a:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404f3f:	mov    rdi,rsp
  404f42:	add    QWORD PTR [rip+0xcfbe],0x1        # 411f08 <__bss_start@@Base+0x98>
  404f4a:	call   408360 <next@@Base>
  404f4f:	mov    esi,DWORD PTR [rax]
  404f51:	xor    edx,edx
  404f53:	mov    r8d,0x94
  404f59:	mov    ecx,0x23
  404f5e:	mov    edi,0x1
  404f63:	add    QWORD PTR [rip+0xcfa5],0x1        # 411f10 <__bss_start@@Base+0xa0>
  404f6b:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404f70:	mov    rdi,rsp
  404f73:	add    QWORD PTR [rip+0xcf9d],0x1        # 411f18 <__bss_start@@Base+0xa8>
  404f7b:	call   408360 <next@@Base>
  404f80:	mov    esi,DWORD PTR [rax]
  404f82:	xor    edx,edx
  404f84:	mov    r8d,0x94
  404f8a:	mov    ecx,0x25
  404f8f:	mov    edi,0x8
  404f94:	add    QWORD PTR [rip+0xcf84],0x1        # 411f20 <__bss_start@@Base+0xb0>
  404f9c:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404fa1:	mov    rdi,rsp
  404fa4:	add    QWORD PTR [rip+0xcf7c],0x1        # 411f28 <__bss_start@@Base+0xb8>
  404fac:	call   408360 <next@@Base>
  404fb1:	mov    esi,DWORD PTR [rax]
  404fb3:	xor    edx,edx
  404fb5:	mov    r8d,0x94
  404fbb:	mov    ecx,0x27
  404fc0:	mov    edi,0x6
  404fc5:	add    QWORD PTR [rip+0xcf63],0x1        # 411f30 <__bss_start@@Base+0xc0>
  404fcd:	call   405ee0 <UnityAssertEqualNumber@@Base>
  404fd2:	mov    rdi,rsp
  404fd5:	add    QWORD PTR [rip+0xcf5b],0x1        # 411f38 <__bss_start@@Base+0xc8>
  404fdd:	call   408360 <next@@Base>
  404fe2:	mov    esi,DWORD PTR [rax]
  404fe4:	xor    edx,edx
  404fe6:	mov    r8d,0x94
  404fec:	mov    ecx,0x29
  404ff1:	mov    edi,0x9
  404ff6:	add    QWORD PTR [rip+0xcf42],0x1        # 411f40 <__bss_start@@Base+0xd0>
  404ffe:	call   405ee0 <UnityAssertEqualNumber@@Base>
  405003:	mov    rdi,rsp
  405006:	add    QWORD PTR [rip+0xcf3a],0x1        # 411f48 <__bss_start@@Base+0xd8>
  40500e:	call   408240 <destroy_lexer@@Base>
  405013:	add    QWORD PTR [rip+0xcf35],0x1        # 411f50 <__bss_start@@Base+0xe0>
  40501b:	mov    rax,QWORD PTR [rsp+0x18]
  405020:	xor    rax,QWORD PTR fs:0x28
  405029:	jne    405031 <simple_file_only_main@@Base+0x241>
  40502b:	add    rsp,0x20
  40502f:	pop    rbx
  405030:	ret    
  405031:	call   403100 <__stack_chk_fail@plt>
  405036:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405040 <push_token_and_call_next@@Base>:
  405040:	push   rbp
  405041:	push   rbx
  405042:	lea    rsi,[rip+0x6fe2]        # 40c02b <_IO_stdin_used@@Base+0x2b>
  405049:	sub    rsp,0x28
  40504d:	add    QWORD PTR [rip+0xcf8b],0x1        # 411fe0 <__bss_start@@Base+0x170>
  405055:	mov    rdi,rsp
  405058:	mov    rax,QWORD PTR fs:0x28
  405061:	mov    QWORD PTR [rsp+0x18],rax
  405066:	xor    eax,eax
  405068:	call   408210 <init_lexer@@Base>
  40506d:	mov    edi,0x8
  405072:	add    QWORD PTR [rip+0xcf6e],0x1        # 411fe8 <__bss_start@@Base+0x178>
  40507a:	call   403180 <malloc@plt>
  40507f:	mov    rdi,rsp
  405082:	mov    rsi,rax
  405085:	mov    rbp,rax
  405088:	call   408270 <push_back@@Base>
  40508d:	mov    rdi,rsp
  405090:	add    QWORD PTR [rip+0xcf58],0x1        # 411ff0 <__bss_start@@Base+0x180>
  405098:	call   408360 <next@@Base>
  40509d:	xor    edx,edx
  40509f:	mov    rsi,rax
  4050a2:	mov    r8d,0x94
  4050a8:	mov    ecx,0x71
  4050ad:	mov    rdi,rbp
  4050b0:	add    QWORD PTR [rip+0xcf40],0x1        # 411ff8 <__bss_start@@Base+0x188>
  4050b8:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4050bd:	mov    rdi,rsp
  4050c0:	add    QWORD PTR [rip+0xcf38],0x1        # 412000 <__bss_start@@Base+0x190>
  4050c8:	call   408240 <destroy_lexer@@Base>
  4050cd:	add    QWORD PTR [rip+0xcf33],0x1        # 412008 <__bss_start@@Base+0x198>
  4050d5:	mov    rax,QWORD PTR [rsp+0x18]
  4050da:	xor    rax,QWORD PTR fs:0x28
  4050e3:	jne    4050f3 <push_token_and_call_next@@Base+0xb3>
  4050e5:	add    rsp,0x28
  4050e9:	mov    rdi,rbp
  4050ec:	pop    rbx
  4050ed:	pop    rbp
  4050ee:	jmp    403040 <free@plt>
  4050f3:	call   403100 <__stack_chk_fail@plt>
  4050f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405100 <push_two_tokens_to_stack@@Base>:
  405100:	push   r12
  405102:	push   rbp
  405103:	lea    rsi,[rip+0x6f21]        # 40c02b <_IO_stdin_used@@Base+0x2b>
  40510a:	push   rbx
  40510b:	sub    rsp,0x20
  40510f:	add    QWORD PTR [rip+0xce89],0x1        # 411fa0 <__bss_start@@Base+0x130>
  405117:	mov    rdi,rsp
  40511a:	mov    rax,QWORD PTR fs:0x28
  405123:	mov    QWORD PTR [rsp+0x18],rax
  405128:	xor    eax,eax
  40512a:	call   408210 <init_lexer@@Base>
  40512f:	mov    edi,0x8
  405134:	add    QWORD PTR [rip+0xce6c],0x1        # 411fa8 <__bss_start@@Base+0x138>
  40513c:	call   403180 <malloc@plt>
  405141:	mov    edi,0x8
  405146:	mov    rbp,rax
  405149:	call   403180 <malloc@plt>
  40514e:	mov    rsi,rbp
  405151:	mov    rdi,rsp
  405154:	mov    r12,rax
  405157:	call   408270 <push_back@@Base>
  40515c:	mov    rax,QWORD PTR [rsp+0x8]
  405161:	xor    edx,edx
  405163:	mov    r8d,0x94
  405169:	mov    ecx,0x56
  40516e:	mov    rsi,rbp
  405171:	add    QWORD PTR [rip+0xce37],0x1        # 411fb0 <__bss_start@@Base+0x140>
  405179:	mov    rdi,QWORD PTR [rax+0x8]
  40517d:	call   405ee0 <UnityAssertEqualNumber@@Base>
  405182:	mov    rsi,r12
  405185:	mov    rdi,rsp
  405188:	add    QWORD PTR [rip+0xce28],0x1        # 411fb8 <__bss_start@@Base+0x148>
  405190:	call   408270 <push_back@@Base>
  405195:	mov    rax,QWORD PTR [rsp+0x8]
  40519a:	xor    edx,edx
  40519c:	mov    r8d,0x94
  4051a2:	mov    ecx,0x58
  4051a7:	mov    rsi,r12
  4051aa:	add    QWORD PTR [rip+0xce0e],0x1        # 411fc0 <__bss_start@@Base+0x150>
  4051b2:	mov    rdi,QWORD PTR [rax+0x8]
  4051b6:	call   405ee0 <UnityAssertEqualNumber@@Base>
  4051bb:	mov    rdi,rsp
  4051be:	add    QWORD PTR [rip+0xce02],0x1        # 411fc8 <__bss_start@@Base+0x158>
  4051c6:	call   408240 <destroy_lexer@@Base>
  4051cb:	mov    rdi,rbp
  4051ce:	add    QWORD PTR [rip+0xcdfa],0x1        # 411fd0 <__bss_start@@Base+0x160>
  4051d6:	call   403040 <free@plt>
  4051db:	mov    rax,QWORD PTR [rsp+0x18]
  4051e0:	xor    rax,QWORD PTR fs:0x28
  4051e9:	jne    4051fb <push_two_tokens_to_stack@@Base+0xfb>
  4051eb:	add    rsp,0x20
  4051ef:	mov    rdi,r12
  4051f2:	pop    rbx
  4051f3:	pop    rbp
  4051f4:	pop    r12
  4051f6:	jmp    403040 <free@plt>
  4051fb:	call   403100 <__stack_chk_fail@plt>

0000000000405200 <push_token_to_stack@@Base>:
  405200:	push   rbp
  405201:	push   rbx
  405202:	lea    rsi,[rip+0x6e22]        # 40c02b <_IO_stdin_used@@Base+0x2b>
  405209:	sub    rsp,0x28
  40520d:	add    QWORD PTR [rip+0xcd4b],0x1        # 411f60 <__bss_start@@Base+0xf0>
  405215:	mov    rdi,rsp
  405218:	mov    rax,QWORD PTR fs:0x28
  405221:	mov    QWORD PTR [rsp+0x18],rax
  405226:	xor    eax,eax
  405228:	call   408210 <init_lexer@@Base>
  40522d:	mov    edi,0x8
  405232:	add    QWORD PTR [rip+0xcd2e],0x1        # 411f68 <__bss_start@@Base+0xf8>
  40523a:	call   403180 <malloc@plt>
  40523f:	mov    rdi,rsp
  405242:	mov    rsi,rax
  405245:	mov    rbp,rax
  405248:	call   408270 <push_back@@Base>
  40524d:	mov    rax,QWORD PTR [rsp+0x8]
  405252:	xor    edx,edx
  405254:	mov    r8d,0x94
  40525a:	mov    ecx,0x3e
  40525f:	mov    rsi,rbp
  405262:	add    QWORD PTR [rip+0xcd06],0x1        # 411f70 <__bss_start@@Base+0x100>
  40526a:	mov    rdi,QWORD PTR [rax+0x8]
  40526e:	call   405ee0 <UnityAssertEqualNumber@@Base>
  405273:	mov    rdi,rsp
  405276:	add    QWORD PTR [rip+0xccfa],0x1        # 411f78 <__bss_start@@Base+0x108>
  40527e:	call   408240 <destroy_lexer@@Base>
  405283:	add    QWORD PTR [rip+0xccf5],0x1        # 411f80 <__bss_start@@Base+0x110>
  40528b:	mov    rax,QWORD PTR [rsp+0x18]
  405290:	xor    rax,QWORD PTR fs:0x28
  405299:	jne    4052a9 <push_token_to_stack@@Base+0xa9>
  40529b:	add    rsp,0x28
  40529f:	mov    rdi,rbp
  4052a2:	pop    rbx
  4052a3:	pop    rbp
  4052a4:	jmp    403040 <free@plt>
  4052a9:	call   403100 <__stack_chk_fail@plt>
  4052ae:	xchg   ax,ax

00000000004052b0 <UnityPrintNumber@@Base>:
  4052b0:	push   r13
  4052b2:	push   r12
  4052b4:	push   rbp
  4052b5:	push   rbx
  4052b6:	mov    rbp,rdi
  4052b9:	sub    rsp,0x8
  4052bd:	test   rdi,rdi
  4052c0:	js     4053d0 <UnityPrintNumber@@Base+0x120>
  4052c6:	add    QWORD PTR [rip+0xd83a],0x1        # 412b08 <__bss_start@@Base+0xc98>
  4052ce:	mov    r13,QWORD PTR [rip+0xad0b]        # 40ffe0 <stdout@GLIBC_2.2.5>
  4052d5:	cmp    rbp,0x9
  4052d9:	jbe    4053f5 <UnityPrintNumber@@Base+0x145>
  4052df:	mov    rsi,QWORD PTR [rip+0xd832]        # 412b18 <__bss_start@@Base+0xca8>
  4052e6:	xor    r8d,r8d
  4052e9:	mov    ebx,0xa
  4052ee:	mov    rax,QWORD PTR [rip+0xd81b]        # 412b10 <__bss_start@@Base+0xca0>
  4052f5:	lea    rcx,[rsi+0x1]
  4052f9:	add    rsi,0x14
  4052fd:	lea    rdi,[rax+0x1]
  405301:	mov    QWORD PTR [rip+0xd810],rcx        # 412b18 <__bss_start@@Base+0xca8>
  405308:	sub    rdi,rcx
  40530b:	jmp    40532d <UnityPrintNumber@@Base+0x7d>
  40530d:	nop    DWORD PTR [rax]
  405310:	lea    rax,[rbx+rbx*4]
  405314:	add    rcx,0x1
  405318:	mov    r8d,0x1
  40531e:	add    rax,rax
  405321:	cmp    rcx,rsi
  405324:	je     4053c0 <UnityPrintNumber@@Base+0x110>
  40532a:	mov    rbx,rax
  40532d:	xor    edx,edx
  40532f:	mov    rax,rbp
  405332:	lea    r9,[rdi+rcx*1]
  405336:	div    rbx
  405339:	cmp    rax,0x9
  40533d:	ja     405310 <UnityPrintNumber@@Base+0x60>
  40533f:	test   r8b,r8b
  405342:	jne    4053c0 <UnityPrintNumber@@Base+0x110>
  405344:	mov    QWORD PTR [rip+0xd7c5],r9        # 412b10 <__bss_start@@Base+0xca0>
  40534b:	add    QWORD PTR [rip+0xd7cd],0x1        # 412b20 <__bss_start@@Base+0xcb0>
  405353:	movabs r12,0xcccccccccccccccd
  40535d:	jmp    405368 <UnityPrintNumber@@Base+0xb8>
  40535f:	nop
  405360:	add    QWORD PTR [rip+0xd7c8],0x1        # 412b30 <__bss_start@@Base+0xcc0>
  405368:	xor    edx,edx
  40536a:	mov    rax,rbp
  40536d:	mov    rsi,QWORD PTR [r13+0x0]
  405371:	div    rbx
  405374:	mov    rdi,rax
  405377:	mul    r12
  40537a:	shr    rdx,0x3
  40537e:	lea    rax,[rdx+rdx*4]
  405382:	add    rax,rax
  405385:	sub    rdi,rax
  405388:	add    edi,0x30
  40538b:	movzx  edi,dil
  40538f:	call   403140 <putc@plt>
  405394:	mov    rax,rbx
  405397:	mul    r12
  40539a:	mov    rbx,rdx
  40539d:	shr    rbx,0x3
  4053a1:	test   rbx,rbx
  4053a4:	jne    405360 <UnityPrintNumber@@Base+0xb0>
  4053a6:	add    QWORD PTR [rip+0xd77a],0x1        # 412b28 <__bss_start@@Base+0xcb8>
  4053ae:	add    rsp,0x8
  4053b2:	pop    rbx
  4053b3:	pop    rbp
  4053b4:	pop    r12
  4053b6:	pop    r13
  4053b8:	ret    
  4053b9:	nop    DWORD PTR [rax+0x0]
  4053c0:	mov    QWORD PTR [rip+0xd751],rcx        # 412b18 <__bss_start@@Base+0xca8>
  4053c7:	jmp    405344 <UnityPrintNumber@@Base+0x94>
  4053cc:	nop    DWORD PTR [rax+0x0]
  4053d0:	mov    r13,QWORD PTR [rip+0xac09]        # 40ffe0 <stdout@GLIBC_2.2.5>
  4053d7:	mov    edi,0x2d
  4053dc:	add    QWORD PTR [rip+0xd71c],0x1        # 412b00 <__bss_start@@Base+0xc90>
  4053e4:	neg    rbp
  4053e7:	mov    rsi,QWORD PTR [r13+0x0]
  4053eb:	call   403140 <putc@plt>
  4053f0:	jmp    4052d5 <UnityPrintNumber@@Base+0x25>
  4053f5:	mov    ebx,0x1
  4053fa:	jmp    40534b <UnityPrintNumber@@Base+0x9b>
  4053ff:	nop

0000000000405400 <UnityPrintNumberUnsigned@@Base>:
  405400:	push   r13
  405402:	push   r12
  405404:	push   rbp
  405405:	push   rbx
  405406:	mov    rbp,rdi
  405409:	sub    rsp,0x8
  40540d:	cmp    rdi,0x9
  405411:	jbe    405510 <UnityPrintNumberUnsigned@@Base+0x110>
  405417:	mov    rsi,QWORD PTR [rip+0xd72a]        # 412b48 <__bss_start@@Base+0xcd8>
  40541e:	mov    rax,QWORD PTR [rip+0xd71b]        # 412b40 <__bss_start@@Base+0xcd0>
  405425:	xor    r8d,r8d
  405428:	mov    ebx,0xa
  40542d:	lea    rcx,[rsi+0x1]
  405431:	lea    rdi,[rax+0x1]
  405435:	add    rsi,0x14
  405439:	mov    QWORD PTR [rip+0xd708],rcx        # 412b48 <__bss_start@@Base+0xcd8>
  405440:	sub    rdi,rcx
  405443:	jmp    40544b <UnityPrintNumberUnsigned@@Base+0x4b>
  405445:	nop    DWORD PTR [rax]
  405448:	mov    rbx,rax
  40544b:	xor    edx,edx
  40544d:	mov    rax,rbp
  405450:	lea    r9,[rdi+rcx*1]
  405454:	div    rbx
  405457:	cmp    rax,0x9
  40545b:	jbe    405500 <UnityPrintNumberUnsigned@@Base+0x100>
  405461:	lea    rax,[rbx+rbx*4]
  405465:	add    rcx,0x1
  405469:	mov    r8d,0x1
  40546f:	add    rax,rax
  405472:	cmp    rcx,rsi
  405475:	jne    405448 <UnityPrintNumberUnsigned@@Base+0x48>
  405477:	mov    QWORD PTR [rip+0xd6ca],rcx        # 412b48 <__bss_start@@Base+0xcd8>
  40547e:	mov    QWORD PTR [rip+0xd6bb],r9        # 412b40 <__bss_start@@Base+0xcd0>
  405485:	add    QWORD PTR [rip+0xd6c3],0x1        # 412b50 <__bss_start@@Base+0xce0>
  40548d:	mov    r13,QWORD PTR [rip+0xab4c]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405494:	movabs r12,0xcccccccccccccccd
  40549e:	jmp    4054a8 <UnityPrintNumberUnsigned@@Base+0xa8>
  4054a0:	add    QWORD PTR [rip+0xd6b8],0x1        # 412b60 <__bss_start@@Base+0xcf0>
  4054a8:	xor    edx,edx
  4054aa:	mov    rax,rbp
  4054ad:	mov    rsi,QWORD PTR [r13+0x0]
  4054b1:	div    rbx
  4054b4:	mov    rdi,rax
  4054b7:	mul    r12
  4054ba:	shr    rdx,0x3
  4054be:	lea    rax,[rdx+rdx*4]
  4054c2:	add    rax,rax
  4054c5:	sub    rdi,rax
  4054c8:	add    edi,0x30
  4054cb:	movzx  edi,dil
  4054cf:	call   403140 <putc@plt>
  4054d4:	mov    rax,rbx
  4054d7:	mul    r12
  4054da:	mov    rbx,rdx
  4054dd:	shr    rbx,0x3
  4054e1:	test   rbx,rbx
  4054e4:	jne    4054a0 <UnityPrintNumberUnsigned@@Base+0xa0>
  4054e6:	add    QWORD PTR [rip+0xd66a],0x1        # 412b58 <__bss_start@@Base+0xce8>
  4054ee:	add    rsp,0x8
  4054f2:	pop    rbx
  4054f3:	pop    rbp
  4054f4:	pop    r12
  4054f6:	pop    r13
  4054f8:	ret    
  4054f9:	nop    DWORD PTR [rax+0x0]
  405500:	test   r8b,r8b
  405503:	je     40547e <UnityPrintNumberUnsigned@@Base+0x7e>
  405509:	jmp    405477 <UnityPrintNumberUnsigned@@Base+0x77>
  40550e:	xchg   ax,ax
  405510:	mov    ebx,0x1
  405515:	jmp    405485 <UnityPrintNumberUnsigned@@Base+0x85>
  40551a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405520 <UnityPrintNumberHex@@Base>:
  405520:	push   r13
  405522:	push   r12
  405524:	mov    r13d,esi
  405527:	push   rbp
  405528:	push   rbx
  405529:	mov    rbp,rdi
  40552c:	mov    edi,0x30
  405531:	lea    r12d,[r13-0x1]
  405535:	sub    rsp,0x8
  405539:	mov    rbx,QWORD PTR [rip+0xaaa0]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405540:	add    QWORD PTR [rip+0xd638],0x1        # 412b80 <__bss_start@@Base+0xd10>
  405548:	mov    rsi,QWORD PTR [rbx]
  40554b:	call   403140 <putc@plt>
  405550:	mov    rsi,QWORD PTR [rbx]
  405553:	mov    edi,0x78
  405558:	add    QWORD PTR [rip+0xd628],0x1        # 412b88 <__bss_start@@Base+0xd18>
  405560:	call   403140 <putc@plt>
  405565:	test   r13b,r13b
  405568:	jg     40558d <UnityPrintNumberHex@@Base+0x6d>
  40556a:	jmp    4055d0 <UnityPrintNumberHex@@Base+0xb0>
  40556c:	nop    DWORD PTR [rax+0x0]
  405570:	mov    rsi,QWORD PTR [rbx]
  405573:	lea    edi,[rax+0x30]
  405576:	call   403140 <putc@plt>
  40557b:	sub    r12d,0x1
  40557f:	add    QWORD PTR [rip+0xd619],0x1        # 412ba0 <__bss_start@@Base+0xd30>
  405587:	cmp    r12b,0xff
  40558b:	je     4055d0 <UnityPrintNumberHex@@Base+0xb0>
  40558d:	movzx  eax,r12b
  405591:	add    QWORD PTR [rip+0xd60f],0x1        # 412ba8 <__bss_start@@Base+0xd38>
  405599:	shl    eax,0x2
  40559c:	shrx   rax,rbp,rax
  4055a1:	and    eax,0xf
  4055a4:	cmp    rax,0x9
  4055a8:	jbe    405570 <UnityPrintNumberHex@@Base+0x50>
  4055aa:	mov    rsi,QWORD PTR [rbx]
  4055ad:	lea    edi,[rax+0x37]
  4055b0:	add    QWORD PTR [rip+0xd5d8],0x1        # 412b90 <__bss_start@@Base+0xd20>
  4055b8:	call   403140 <putc@plt>
  4055bd:	add    QWORD PTR [rip+0xd5d3],0x1        # 412b98 <__bss_start@@Base+0xd28>
  4055c5:	jmp    40557b <UnityPrintNumberHex@@Base+0x5b>
  4055c7:	nop    WORD PTR [rax+rax*1+0x0]
  4055d0:	add    QWORD PTR [rip+0xd5d8],0x1        # 412bb0 <__bss_start@@Base+0xd40>
  4055d8:	add    rsp,0x8
  4055dc:	pop    rbx
  4055dd:	pop    rbp
  4055de:	pop    r12
  4055e0:	pop    r13
  4055e2:	ret    
  4055e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4055ee:	xchg   ax,ax

00000000004055f0 <UnityPrintNumberByStyle@@Base>:
  4055f0:	sub    rsp,0x8
  4055f4:	test   sil,0x10
  4055f8:	jne    405650 <UnityPrintNumberByStyle@@Base+0x60>
  4055fa:	test   sil,0x20
  4055fe:	jne    405620 <UnityPrintNumberByStyle@@Base+0x30>
  405600:	add    esi,esi
  405602:	add    QWORD PTR [rip+0xd4ce],0x1        # 412ad8 <__bss_start@@Base+0xc68>
  40560a:	and    esi,0x1e
  40560d:	call   405520 <UnityPrintNumberHex@@Base>
  405612:	add    QWORD PTR [rip+0xd4ce],0x1        # 412ae8 <__bss_start@@Base+0xc78>
  40561a:	add    rsp,0x8
  40561e:	ret    
  40561f:	nop
  405620:	mov    rax,0x40c400
  405627:	and    esi,0xf
  40562a:	add    QWORD PTR [rip+0xd49e],0x1        # 412ad0 <__bss_start@@Base+0xc60>
  405632:	and    rdi,QWORD PTR [rax+rsi*8-0x8]
  405637:	call   405400 <UnityPrintNumberUnsigned@@Base>
  40563c:	add    QWORD PTR [rip+0xd49c],0x1        # 412ae0 <__bss_start@@Base+0xc70>
  405644:	add    rsp,0x8
  405648:	ret    
  405649:	nop    DWORD PTR [rax+0x0]
  405650:	add    QWORD PTR [rip+0xd468],0x1        # 412ac0 <__bss_start@@Base+0xc50>
  405658:	call   4052b0 <UnityPrintNumber@@Base>
  40565d:	add    QWORD PTR [rip+0xd463],0x1        # 412ac8 <__bss_start@@Base+0xc58>
  405665:	add    rsp,0x8
  405669:	ret    
  40566a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405670 <UnityPrintLen@@Base>:
  405670:	add    QWORD PTR [rip+0xd3c8],0x1        # 412a40 <__bss_start@@Base+0xbd0>
  405678:	test   rdi,rdi
  40567b:	je     4057ea <UnityPrintLen@@Base+0x17a>
  405681:	push   r13
  405683:	push   r12
  405685:	push   rbp
  405686:	push   rbx
  405687:	mov    rbx,rdi
  40568a:	sub    rsp,0x8
  40568e:	movsx  edi,BYTE PTR [rdi]
  405691:	add    QWORD PTR [rip+0xd3af],0x1        # 412a48 <__bss_start@@Base+0xbd8>
  405699:	test   dil,dil
  40569c:	je     4057e0 <UnityPrintLen@@Base+0x170>
  4056a2:	add    QWORD PTR [rip+0xd3f6],0x1        # 412aa0 <__bss_start@@Base+0xc30>
  4056aa:	test   esi,esi
  4056ac:	mov    r12d,esi
  4056af:	mov    r13,rbx
  4056b2:	je     4057e0 <UnityPrintLen@@Base+0x170>
  4056b8:	mov    rbp,QWORD PTR [rip+0xa921]        # 40ffe0 <stdout@GLIBC_2.2.5>
  4056bf:	jmp    40573f <UnityPrintLen@@Base+0xcf>
  4056c1:	nop    DWORD PTR [rax+0x0]
  4056c8:	cmp    dil,0xd
  4056cc:	je     4057a0 <UnityPrintLen@@Base+0x130>
  4056d2:	cmp    dil,0xa
  4056d6:	je     405760 <UnityPrintLen@@Base+0xf0>
  4056dc:	mov    rsi,QWORD PTR [rbp+0x0]
  4056e0:	mov    edi,0x5c
  4056e5:	add    QWORD PTR [rip+0xd383],0x1        # 412a70 <__bss_start@@Base+0xc00>
  4056ed:	call   403140 <putc@plt>
  4056f2:	movsx  rdi,BYTE PTR [rbx]
  4056f6:	mov    esi,0x2
  4056fb:	add    QWORD PTR [rip+0xd385],0x1        # 412a88 <__bss_start@@Base+0xc18>
  405703:	call   405520 <UnityPrintNumberHex@@Base>
  405708:	add    QWORD PTR [rip+0xd380],0x1        # 412a90 <__bss_start@@Base+0xc20>
  405710:	add    rbx,0x1
  405714:	movsx  edi,BYTE PTR [rbx]
  405717:	add    QWORD PTR [rip+0xd379],0x1        # 412a98 <__bss_start@@Base+0xc28>
  40571f:	test   dil,dil
  405722:	je     4057e0 <UnityPrintLen@@Base+0x170>
  405728:	mov    rax,rbx
  40572b:	add    QWORD PTR [rip+0xd36d],0x1        # 412aa0 <__bss_start@@Base+0xc30>
  405733:	sub    rax,r13
  405736:	cmp    r12d,eax
  405739:	jbe    4057e0 <UnityPrintLen@@Base+0x170>
  40573f:	lea    eax,[rdi-0x20]
  405742:	add    QWORD PTR [rip+0xd35e],0x1        # 412aa8 <__bss_start@@Base+0xc38>
  40574a:	cmp    al,0x5e
  40574c:	ja     4056c8 <UnityPrintLen@@Base+0x58>
  405752:	mov    rsi,QWORD PTR [rbp+0x0]
  405756:	call   403140 <putc@plt>
  40575b:	jmp    405710 <UnityPrintLen@@Base+0xa0>
  40575d:	nop    DWORD PTR [rax]
  405760:	mov    rsi,QWORD PTR [rbp+0x0]
  405764:	mov    edi,0x5c
  405769:	add    QWORD PTR [rip+0xd2f7],0x1        # 412a68 <__bss_start@@Base+0xbf8>
  405771:	call   403140 <putc@plt>
  405776:	mov    rsi,QWORD PTR [rbp+0x0]
  40577a:	mov    edi,0x6e
  40577f:	add    QWORD PTR [rip+0xd2f1],0x1        # 412a78 <__bss_start@@Base+0xc08>
  405787:	call   403140 <putc@plt>
  40578c:	add    QWORD PTR [rip+0xd2ec],0x1        # 412a80 <__bss_start@@Base+0xc10>
  405794:	jmp    405710 <UnityPrintLen@@Base+0xa0>
  405799:	nop    DWORD PTR [rax+0x0]
  4057a0:	mov    rsi,QWORD PTR [rbp+0x0]
  4057a4:	mov    edi,0x5c
  4057a9:	add    QWORD PTR [rip+0xd29f],0x1        # 412a50 <__bss_start@@Base+0xbe0>
  4057b1:	call   403140 <putc@plt>
  4057b6:	mov    rsi,QWORD PTR [rbp+0x0]
  4057ba:	mov    edi,0x72
  4057bf:	add    QWORD PTR [rip+0xd291],0x1        # 412a58 <__bss_start@@Base+0xbe8>
  4057c7:	call   403140 <putc@plt>
  4057cc:	add    QWORD PTR [rip+0xd28c],0x1        # 412a60 <__bss_start@@Base+0xbf0>
  4057d4:	jmp    405710 <UnityPrintLen@@Base+0xa0>
  4057d9:	nop    DWORD PTR [rax+0x0]
  4057e0:	add    rsp,0x8
  4057e4:	pop    rbx
  4057e5:	pop    rbp
  4057e6:	pop    r12
  4057e8:	pop    r13
  4057ea:	repz ret 
  4057ec:	nop    DWORD PTR [rax+0x0]

00000000004057f0 <UnityPrint@@Base>:
  4057f0:	add    QWORD PTR [rip+0xd1c8],0x1        # 4129c0 <__bss_start@@Base+0xb50>
  4057f8:	test   rdi,rdi
  4057fb:	je     4058e6 <UnityPrint@@Base+0xf6>
  405801:	push   rbp
  405802:	push   rbx
  405803:	mov    rbx,rdi
  405806:	sub    rsp,0x8
  40580a:	movsx  edi,BYTE PTR [rdi]
  40580d:	add    QWORD PTR [rip+0xd1b3],0x1        # 4129c8 <__bss_start@@Base+0xb58>
  405815:	test   dil,dil
  405818:	je     4058e0 <UnityPrint@@Base+0xf0>
  40581e:	mov    rbp,QWORD PTR [rip+0xa7bb]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405825:	jmp    405888 <UnityPrint@@Base+0x98>
  405827:	nop    WORD PTR [rax+rax*1+0x0]
  405830:	cmp    dil,0xd
  405834:	je     4058f0 <UnityPrint@@Base+0x100>
  40583a:	cmp    dil,0xa
  40583e:	je     4058a8 <UnityPrint@@Base+0xb8>
  405840:	mov    rsi,QWORD PTR [rbp+0x0]
  405844:	mov    edi,0x5c
  405849:	add    QWORD PTR [rip+0xd19f],0x1        # 4129f0 <__bss_start@@Base+0xb80>
  405851:	call   403140 <putc@plt>
  405856:	movsx  rdi,BYTE PTR [rbx]
  40585a:	mov    esi,0x2
  40585f:	add    QWORD PTR [rip+0xd1a1],0x1        # 412a08 <__bss_start@@Base+0xb98>
  405867:	call   405520 <UnityPrintNumberHex@@Base>
  40586c:	add    QWORD PTR [rip+0xd19c],0x1        # 412a10 <__bss_start@@Base+0xba0>
  405874:	add    rbx,0x1
  405878:	movsx  edi,BYTE PTR [rbx]
  40587b:	add    QWORD PTR [rip+0xd195],0x1        # 412a18 <__bss_start@@Base+0xba8>
  405883:	test   dil,dil
  405886:	je     4058e0 <UnityPrint@@Base+0xf0>
  405888:	lea    eax,[rdi-0x20]
  40588b:	add    QWORD PTR [rip+0xd18d],0x1        # 412a20 <__bss_start@@Base+0xbb0>
  405893:	cmp    al,0x5e
  405895:	ja     405830 <UnityPrint@@Base+0x40>
  405897:	mov    rsi,QWORD PTR [rbp+0x0]
  40589b:	call   403140 <putc@plt>
  4058a0:	jmp    405874 <UnityPrint@@Base+0x84>
  4058a2:	nop    WORD PTR [rax+rax*1+0x0]
  4058a8:	mov    rsi,QWORD PTR [rbp+0x0]
  4058ac:	mov    edi,0x5c
  4058b1:	add    QWORD PTR [rip+0xd12f],0x1        # 4129e8 <__bss_start@@Base+0xb78>
  4058b9:	call   403140 <putc@plt>
  4058be:	mov    rsi,QWORD PTR [rbp+0x0]
  4058c2:	mov    edi,0x6e
  4058c7:	add    QWORD PTR [rip+0xd129],0x1        # 4129f8 <__bss_start@@Base+0xb88>
  4058cf:	call   403140 <putc@plt>
  4058d4:	add    QWORD PTR [rip+0xd124],0x1        # 412a00 <__bss_start@@Base+0xb90>
  4058dc:	jmp    405874 <UnityPrint@@Base+0x84>
  4058de:	xchg   ax,ax
  4058e0:	add    rsp,0x8
  4058e4:	pop    rbx
  4058e5:	pop    rbp
  4058e6:	repz ret 
  4058e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4058f0:	mov    rsi,QWORD PTR [rbp+0x0]
  4058f4:	mov    edi,0x5c
  4058f9:	add    QWORD PTR [rip+0xd0cf],0x1        # 4129d0 <__bss_start@@Base+0xb60>
  405901:	call   403140 <putc@plt>
  405906:	mov    rsi,QWORD PTR [rbp+0x0]
  40590a:	mov    edi,0x72
  40590f:	add    QWORD PTR [rip+0xd0c1],0x1        # 4129d8 <__bss_start@@Base+0xb68>
  405917:	call   403140 <putc@plt>
  40591c:	add    QWORD PTR [rip+0xd0bc],0x1        # 4129e0 <__bss_start@@Base+0xb70>
  405924:	jmp    405874 <UnityPrint@@Base+0x84>
  405929:	nop    DWORD PTR [rax+0x0]
  405930:	add    QWORD PTR [rip+0xd388],0x1        # 412cc0 <__bss_start@@Base+0xe50>
  405938:	test   rdi,rdi
  40593b:	je     4059fa <UnityPrint@@Base+0x20a>
  405941:	push   r12
  405943:	mov    r12,0x40c663
  40594a:	push   rbp
  40594b:	push   rbx
  40594c:	mov    rbx,rdi
  40594f:	mov    rdi,r12
  405952:	add    QWORD PTR [rip+0xd36e],0x1        # 412cc8 <__bss_start@@Base+0xe58>
  40595a:	call   4057f0 <UnityPrint@@Base>
  40595f:	mov    rbp,0x413c00
  405966:	add    QWORD PTR [rip+0xd362],0x1        # 412cd0 <__bss_start@@Base+0xe60>
  40596e:	cmp    QWORD PTR [rbp+0x10],0x0
  405973:	je     4059e6 <UnityPrint@@Base+0x1f6>
  405975:	mov    rdi,0x40c450
  40597c:	add    QWORD PTR [rip+0xd354],0x1        # 412cd8 <__bss_start@@Base+0xe68>
  405984:	call   4057f0 <UnityPrint@@Base>
  405989:	mov    rdi,QWORD PTR [rbp+0x10]
  40598d:	add    QWORD PTR [rip+0xd34b],0x1        # 412ce0 <__bss_start@@Base+0xe70>
  405995:	call   4057f0 <UnityPrint@@Base>
  40599a:	add    QWORD PTR [rip+0xd346],0x1        # 412ce8 <__bss_start@@Base+0xe78>
  4059a2:	cmp    QWORD PTR [rbp+0x18],0x0
  4059a7:	je     4059d6 <UnityPrint@@Base+0x1e6>
  4059a9:	mov    rdi,0x40c440
  4059b0:	add    QWORD PTR [rip+0xd338],0x1        # 412cf0 <__bss_start@@Base+0xe80>
  4059b8:	call   4057f0 <UnityPrint@@Base>
  4059bd:	mov    rdi,QWORD PTR [rbp+0x18]
  4059c1:	add    QWORD PTR [rip+0xd32f],0x1        # 412cf8 <__bss_start@@Base+0xe88>
  4059c9:	call   4057f0 <UnityPrint@@Base>
  4059ce:	add    QWORD PTR [rip+0xd32a],0x1        # 412d00 <__bss_start@@Base+0xe90>
  4059d6:	mov    rdi,r12
  4059d9:	call   4057f0 <UnityPrint@@Base>
  4059de:	add    QWORD PTR [rip+0xd322],0x1        # 412d08 <__bss_start@@Base+0xe98>
  4059e6:	mov    rdi,rbx
  4059e9:	call   4057f0 <UnityPrint@@Base>
  4059ee:	pop    rbx
  4059ef:	add    QWORD PTR [rip+0xd319],0x1        # 412d10 <__bss_start@@Base+0xea0>
  4059f7:	pop    rbp
  4059f8:	pop    r12
  4059fa:	repz ret 
  4059fc:	nop    DWORD PTR [rax+0x0]
  405a00:	push   rbp
  405a01:	push   rbx
  405a02:	mov    rbp,rsi
  405a05:	sub    rsp,0x8
  405a09:	add    QWORD PTR [rip+0xd20f],0x1        # 412c20 <__bss_start@@Base+0xdb0>
  405a11:	call   4057f0 <UnityPrint@@Base>
  405a16:	mov    rbx,QWORD PTR [rip+0xa5c3]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405a1d:	mov    edi,0x3a
  405a22:	add    QWORD PTR [rip+0xd1fe],0x1        # 412c28 <__bss_start@@Base+0xdb8>
  405a2a:	mov    rsi,QWORD PTR [rbx]
  405a2d:	call   403140 <putc@plt>
  405a32:	mov    rdi,rbp
  405a35:	add    QWORD PTR [rip+0xd1f3],0x1        # 412c30 <__bss_start@@Base+0xdc0>
  405a3d:	call   4052b0 <UnityPrintNumber@@Base>
  405a42:	mov    rsi,QWORD PTR [rbx]
  405a45:	mov    edi,0x3a
  405a4a:	add    QWORD PTR [rip+0xd1e6],0x1        # 412c38 <__bss_start@@Base+0xdc8>
  405a52:	call   403140 <putc@plt>
  405a57:	mov    rax,0x413c00
  405a5e:	add    QWORD PTR [rip+0xd1da],0x1        # 412c40 <__bss_start@@Base+0xdd0>
  405a66:	mov    rdi,QWORD PTR [rax+0x8]
  405a6a:	call   4057f0 <UnityPrint@@Base>
  405a6f:	mov    rsi,QWORD PTR [rbx]
  405a72:	mov    edi,0x3a
  405a77:	add    QWORD PTR [rip+0xd1c9],0x1        # 412c48 <__bss_start@@Base+0xdd8>
  405a7f:	call   403140 <putc@plt>
  405a84:	add    QWORD PTR [rip+0xd1c4],0x1        # 412c50 <__bss_start@@Base+0xde0>
  405a8c:	add    rsp,0x8
  405a90:	pop    rbx
  405a91:	pop    rbp
  405a92:	ret    
  405a93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405a9e:	xchg   ax,ax
  405aa0:	sub    rsp,0x8
  405aa4:	mov    rax,0x413c00
  405aab:	mov    rsi,rdi
  405aae:	add    QWORD PTR [rip+0xd1aa],0x1        # 412c60 <__bss_start@@Base+0xdf0>
  405ab6:	mov    rdi,QWORD PTR [rax]
  405ab9:	call   405a00 <UnityPrint@@Base+0x210>
  405abe:	mov    rdi,0x40c672
  405ac5:	add    QWORD PTR [rip+0xd19b],0x1        # 412c68 <__bss_start@@Base+0xdf8>
  405acd:	call   4057f0 <UnityPrint@@Base>
  405ad2:	mov    rax,QWORD PTR [rip+0xa507]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405ad9:	mov    edi,0x3a
  405ade:	add    QWORD PTR [rip+0xd18a],0x1        # 412c70 <__bss_start@@Base+0xe00>
  405ae6:	mov    rsi,QWORD PTR [rax]
  405ae9:	call   403140 <putc@plt>
  405aee:	add    QWORD PTR [rip+0xd182],0x1        # 412c78 <__bss_start@@Base+0xe08>
  405af6:	add    rsp,0x8
  405afa:	ret    
  405afb:	nop    DWORD PTR [rax+rax*1+0x0]
  405b00:	add    QWORD PTR [rip+0xd318],0x1        # 412e20 <__bss_start@@Base+0xfb0>
  405b08:	test   rdi,rdi
  405b0b:	jne    405b20 <UnityPrint@@Base+0x330>
  405b0d:	test   rsi,rsi
  405b10:	mov    eax,0x1
  405b15:	jne    405b20 <UnityPrint@@Base+0x330>
  405b17:	ret    
  405b18:	nop    DWORD PTR [rax+rax*1+0x0]
  405b20:	sub    rsp,0x18
  405b24:	test   rdi,rdi
  405b27:	je     405ba0 <UnityPrint@@Base+0x3b0>
  405b29:	add    QWORD PTR [rip+0xd2ff],0x1        # 412e30 <__bss_start@@Base+0xfc0>
  405b31:	test   rsi,rsi
  405b34:	je     405b3d <UnityPrint@@Base+0x34d>
  405b36:	xor    eax,eax
  405b38:	add    rsp,0x18
  405b3c:	ret    
  405b3d:	mov    rdi,rdx
  405b40:	mov    QWORD PTR [rsp+0x8],rcx
  405b45:	add    QWORD PTR [rip+0xd303],0x1        # 412e50 <__bss_start@@Base+0xfe0>
  405b4d:	call   405aa0 <UnityPrint@@Base+0x2b0>
  405b52:	mov    rdi,0x40c580
  405b59:	add    QWORD PTR [rip+0xd2f7],0x1        # 412e58 <__bss_start@@Base+0xfe8>
  405b61:	call   4057f0 <UnityPrint@@Base>
  405b66:	mov    rcx,QWORD PTR [rsp+0x8]
  405b6b:	add    QWORD PTR [rip+0xd2ed],0x1        # 412e60 <__bss_start@@Base+0xff0>
  405b73:	mov    rdi,rcx
  405b76:	call   405930 <UnityPrint@@Base+0x140>
  405b7b:	mov    rax,0x413c00
  405b82:	mov    esi,0x1
  405b87:	add    QWORD PTR [rip+0xd2d9],0x1        # 412e68 <__bss_start@@Base+0xff8>
  405b8f:	lea    rdi,[rax+0x50]
  405b93:	mov    QWORD PTR [rax+0x40],0x1
  405b9b:	call   4031c0 <__longjmp_chk@plt>
  405ba0:	mov    rdi,rdx
  405ba3:	mov    QWORD PTR [rsp+0x8],rcx
  405ba8:	add    QWORD PTR [rip+0xd278],0x1        # 412e28 <__bss_start@@Base+0xfb8>
  405bb0:	call   405aa0 <UnityPrint@@Base+0x2b0>
  405bb5:	mov    rdi,0x40c5a0
  405bbc:	add    QWORD PTR [rip+0xd274],0x1        # 412e38 <__bss_start@@Base+0xfc8>
  405bc4:	call   4057f0 <UnityPrint@@Base>
  405bc9:	mov    rcx,QWORD PTR [rsp+0x8]
  405bce:	add    QWORD PTR [rip+0xd26a],0x1        # 412e40 <__bss_start@@Base+0xfd0>
  405bd6:	mov    rdi,rcx
  405bd9:	call   405930 <UnityPrint@@Base+0x140>
  405bde:	mov    rax,0x413c00
  405be5:	mov    esi,0x1
  405bea:	add    QWORD PTR [rip+0xd256],0x1        # 412e48 <__bss_start@@Base+0xfd8>
  405bf2:	lea    rdi,[rax+0x50]
  405bf6:	mov    QWORD PTR [rax+0x40],0x1
  405bfe:	call   4031c0 <__longjmp_chk@plt>
  405c03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405c0e:	xchg   ax,ax

0000000000405c10 <UnityPrintMask@@Base>:
  405c10:	push   r15
  405c12:	push   r14
  405c14:	mov    r15,rsi
  405c17:	push   r13
  405c19:	push   r12
  405c1b:	mov    r13,rdi
  405c1e:	push   rbp
  405c1f:	push   rbx
  405c20:	mov    ebp,0x20
  405c25:	mov    ebx,0x80000000
  405c2a:	lea    r14,[rip+0xcf8f]        # 412bc0 <__bss_start@@Base+0xd50>
  405c31:	sub    rsp,0x8
  405c35:	mov    r12,QWORD PTR [rip+0xa3a4]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405c3c:	jmp    405c62 <UnityPrintMask@@Base+0x52>
  405c3e:	xchg   ax,ax
  405c40:	mov    rsi,QWORD PTR [r12]
  405c44:	mov    edi,0x31
  405c49:	add    QWORD PTR [r14],0x1
  405c4d:	call   403140 <putc@plt>
  405c52:	shr    rbx,1
  405c55:	add    QWORD PTR [rip+0xcf83],0x1        # 412be0 <__bss_start@@Base+0xd70>
  405c5d:	sub    ebp,0x1
  405c60:	je     405ca2 <UnityPrintMask@@Base+0x92>
  405c62:	add    QWORD PTR [rip+0xcf7e],0x1        # 412be8 <__bss_start@@Base+0xd78>
  405c6a:	test   r13,rbx
  405c6d:	je     405cc0 <UnityPrintMask@@Base+0xb0>
  405c6f:	test   r15,rbx
  405c72:	jne    405c40 <UnityPrintMask@@Base+0x30>
  405c74:	mov    rsi,QWORD PTR [r12]
  405c78:	mov    edi,0x30
  405c7d:	shr    rbx,1
  405c80:	add    QWORD PTR [rip+0xcf40],0x1        # 412bc8 <__bss_start@@Base+0xd58>
  405c88:	call   403140 <putc@plt>
  405c8d:	add    QWORD PTR [rip+0xcf3b],0x1        # 412bd0 <__bss_start@@Base+0xd60>
  405c95:	add    QWORD PTR [rip+0xcf43],0x1        # 412be0 <__bss_start@@Base+0xd70>
  405c9d:	sub    ebp,0x1
  405ca0:	jne    405c62 <UnityPrintMask@@Base+0x52>
  405ca2:	add    QWORD PTR [rip+0xcf46],0x1        # 412bf0 <__bss_start@@Base+0xd80>
  405caa:	add    rsp,0x8
  405cae:	pop    rbx
  405caf:	pop    rbp
  405cb0:	pop    r12
  405cb2:	pop    r13
  405cb4:	pop    r14
  405cb6:	pop    r15
  405cb8:	ret    
  405cb9:	nop    DWORD PTR [rax+0x0]
  405cc0:	mov    rsi,QWORD PTR [r12]
  405cc4:	mov    edi,0x58
  405cc9:	call   403140 <putc@plt>
  405cce:	add    QWORD PTR [rip+0xcf02],0x1        # 412bd8 <__bss_start@@Base+0xd68>
  405cd6:	jmp    405c52 <UnityPrintMask@@Base+0x42>
  405cdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405ce0 <UnityPrintFail@@Base>:
  405ce0:	sub    rsp,0x8
  405ce4:	mov    rdi,0x40c672
  405ceb:	add    QWORD PTR [rip+0xcf0d],0x1        # 412c00 <__bss_start@@Base+0xd90>
  405cf3:	call   4057f0 <UnityPrint@@Base>
  405cf8:	add    QWORD PTR [rip+0xcf08],0x1        # 412c08 <__bss_start@@Base+0xd98>
  405d00:	add    rsp,0x8
  405d04:	ret    
  405d05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405d10 <UnityPrintOk@@Base>:
  405d10:	sub    rsp,0x8
  405d14:	mov    rdi,0x40c67c
  405d1b:	add    QWORD PTR [rip+0xceed],0x1        # 412c10 <__bss_start@@Base+0xda0>
  405d23:	call   4057f0 <UnityPrint@@Base>
  405d28:	add    QWORD PTR [rip+0xcee8],0x1        # 412c18 <__bss_start@@Base+0xda8>
  405d30:	add    rsp,0x8
  405d34:	ret    
  405d35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405d40 <UnityConcludeTest@@Base>:
  405d40:	push   rbx
  405d41:	mov    rbx,0x413c00
  405d48:	cmp    QWORD PTR [rbx+0x48],0x0
  405d4d:	jne    405d98 <UnityConcludeTest@@Base+0x58>
  405d4f:	cmp    QWORD PTR [rbx+0x40],0x0
  405d54:	je     405db0 <UnityConcludeTest@@Base+0x70>
  405d56:	add    QWORD PTR [rbx+0x30],0x1
  405d5b:	add    QWORD PTR [rip+0xcf3d],0x1        # 412ca0 <__bss_start@@Base+0xe30>
  405d63:	mov    rax,QWORD PTR [rip+0xa276]        # 40ffe0 <stdout@GLIBC_2.2.5>
  405d6a:	mov    edi,0xa
  405d6f:	mov    QWORD PTR [rbx+0x40],0x0
  405d77:	mov    QWORD PTR [rbx+0x48],0x0
  405d7f:	mov    rsi,QWORD PTR [rax]
  405d82:	call   403140 <putc@plt>
  405d87:	add    QWORD PTR [rip+0xcf19],0x1        # 412ca8 <__bss_start@@Base+0xe38>
  405d8f:	pop    rbx
  405d90:	ret    
  405d91:	nop    DWORD PTR [rax+0x0]
  405d98:	add    QWORD PTR [rbx+0x38],0x1
  405d9d:	add    QWORD PTR [rip+0xcedb],0x1        # 412c80 <__bss_start@@Base+0xe10>
  405da5:	jmp    405d63 <UnityConcludeTest@@Base+0x23>
  405da7:	nop    WORD PTR [rax+rax*1+0x0]
  405db0:	mov    rsi,QWORD PTR [rbx+0x20]
  405db4:	mov    rdi,QWORD PTR [rbx]
  405db7:	add    QWORD PTR [rip+0xcec9],0x1        # 412c88 <__bss_start@@Base+0xe18>
  405dbf:	call   405a00 <UnityPrint@@Base+0x210>
  405dc4:	mov    rdi,0x40c677
  405dcb:	add    QWORD PTR [rip+0xcebd],0x1        # 412c90 <__bss_start@@Base+0xe20>
  405dd3:	call   4057f0 <UnityPrint@@Base>
  405dd8:	add    QWORD PTR [rip+0xceb8],0x1        # 412c98 <__bss_start@@Base+0xe28>
  405de0:	jmp    405d63 <UnityConcludeTest@@Base+0x23>
  405de2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405ded:	nop    DWORD PTR [rax]

0000000000405df0 <UnityAssertBits@@Base>:
  405df0:	push   r14
  405df2:	push   r13
  405df4:	push   r12
  405df6:	push   rbp
  405df7:	push   rbx
  405df8:	mov    rbx,0x413c00
  405dff:	add    QWORD PTR [rip+0xd079],0x1        # 412e80 <__bss_start@@Base+0x1010>
  405e07:	cmp    QWORD PTR [rbx+0x40],0x0
  405e0c:	jne    405e30 <UnityAssertBits@@Base+0x40>
  405e0e:	add    QWORD PTR [rip+0xd072],0x1        # 412e88 <__bss_start@@Base+0x1018>
  405e16:	cmp    QWORD PTR [rbx+0x48],0x0
  405e1b:	jne    405e30 <UnityAssertBits@@Base+0x40>
  405e1d:	mov    rax,rsi
  405e20:	add    QWORD PTR [rip+0xd068],0x1        # 412e90 <__bss_start@@Base+0x1020>
  405e28:	xor    rax,rdx
  405e2b:	test   rax,rdi
  405e2e:	jne    405e39 <UnityAssertBits@@Base+0x49>
  405e30:	pop    rbx
  405e31:	pop    rbp
  405e32:	pop    r12
  405e34:	pop    r13
  405e36:	pop    r14
  405e38:	ret    
  405e39:	mov    rbp,rdi
  405e3c:	mov    rdi,r8
  405e3f:	mov    r13,rcx
  405e42:	mov    r12,rdx
  405e45:	mov    r14,rsi
  405e48:	add    QWORD PTR [rip+0xd048],0x1        # 412e98 <__bss_start@@Base+0x1028>
  405e50:	call   405aa0 <UnityPrint@@Base+0x2b0>
  405e55:	mov    rdi,0x40c658
  405e5c:	add    QWORD PTR [rip+0xd03c],0x1        # 412ea0 <__bss_start@@Base+0x1030>
  405e64:	call   4057f0 <UnityPrint@@Base>
  405e69:	mov    rsi,r14
  405e6c:	mov    rdi,rbp
  405e6f:	add    QWORD PTR [rip+0xd031],0x1        # 412ea8 <__bss_start@@Base+0x1038>
  405e77:	call   405c10 <UnityPrintMask@@Base>
  405e7c:	mov    rdi,0x40c64f
  405e83:	add    QWORD PTR [rip+0xd025],0x1        # 412eb0 <__bss_start@@Base+0x1040>
  405e8b:	call   4057f0 <UnityPrint@@Base>
  405e90:	mov    rsi,r12
  405e93:	mov    rdi,rbp
  405e96:	add    QWORD PTR [rip+0xd01a],0x1        # 412eb8 <__bss_start@@Base+0x1048>
  405e9e:	call   405c10 <UnityPrintMask@@Base>
  405ea3:	mov    rdi,r13
  405ea6:	add    QWORD PTR [rip+0xd012],0x1        # 412ec0 <__bss_start@@Base+0x1050>
  405eae:	call   405930 <UnityPrint@@Base+0x140>
  405eb3:	lea    rdi,[rbx+0x50]
  405eb7:	mov    esi,0x1
  405ebc:	add    QWORD PTR [rip+0xd004],0x1        # 412ec8 <__bss_start@@Base+0x1058>
  405ec4:	mov    QWORD PTR [rbx+0x40],0x1
  405ecc:	call   4031c0 <__longjmp_chk@plt>
  405ed1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405edc:	nop    DWORD PTR [rax+0x0]

0000000000405ee0 <UnityAssertEqualNumber@@Base>:
  405ee0:	push   r14
  405ee2:	push   r13
  405ee4:	push   r12
  405ee6:	push   rbp
  405ee7:	push   rbx
  405ee8:	mov    rbx,0x413c00
  405eef:	add    QWORD PTR [rip+0xcfe9],0x1        # 412ee0 <__bss_start@@Base+0x1070>
  405ef7:	cmp    QWORD PTR [rbx+0x40],0x0
  405efc:	jne    405f1a <UnityAssertEqualNumber@@Base+0x3a>
  405efe:	add    QWORD PTR [rip+0xcfe2],0x1        # 412ee8 <__bss_start@@Base+0x1078>
  405f06:	cmp    QWORD PTR [rbx+0x48],0x0
  405f0b:	jne    405f1a <UnityAssertEqualNumber@@Base+0x3a>
  405f0d:	add    QWORD PTR [rip+0xcfdb],0x1        # 412ef0 <__bss_start@@Base+0x1080>
  405f15:	cmp    rdi,rsi
  405f18:	jne    405f23 <UnityAssertEqualNumber@@Base+0x43>
  405f1a:	pop    rbx
  405f1b:	pop    rbp
  405f1c:	pop    r12
  405f1e:	pop    r13
  405f20:	pop    r14
  405f22:	ret    
  405f23:	mov    rbp,rdi
  405f26:	mov    rdi,rcx
  405f29:	mov    r12d,r8d
  405f2c:	mov    r13,rdx
  405f2f:	mov    r14,rsi
  405f32:	add    QWORD PTR [rip+0xcfbe],0x1        # 412ef8 <__bss_start@@Base+0x1088>
  405f3a:	call   405aa0 <UnityPrint@@Base+0x2b0>
  405f3f:	mov    rdi,0x40c658
  405f46:	add    QWORD PTR [rip+0xcfb2],0x1        # 412f00 <__bss_start@@Base+0x1090>
  405f4e:	call   4057f0 <UnityPrint@@Base>
  405f53:	mov    esi,r12d
  405f56:	mov    rdi,rbp
  405f59:	add    QWORD PTR [rip+0xcfa7],0x1        # 412f08 <__bss_start@@Base+0x1098>
  405f61:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  405f66:	mov    rdi,0x40c64f
  405f6d:	add    QWORD PTR [rip+0xcf9b],0x1        # 412f10 <__bss_start@@Base+0x10a0>
  405f75:	call   4057f0 <UnityPrint@@Base>
  405f7a:	mov    esi,r12d
  405f7d:	mov    rdi,r14
  405f80:	add    QWORD PTR [rip+0xcf90],0x1        # 412f18 <__bss_start@@Base+0x10a8>
  405f88:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  405f8d:	mov    rdi,r13
  405f90:	add    QWORD PTR [rip+0xcf88],0x1        # 412f20 <__bss_start@@Base+0x10b0>
  405f98:	call   405930 <UnityPrint@@Base+0x140>
  405f9d:	lea    rdi,[rbx+0x50]
  405fa1:	mov    esi,0x1
  405fa6:	add    QWORD PTR [rip+0xcf7a],0x1        # 412f28 <__bss_start@@Base+0x10b8>
  405fae:	mov    QWORD PTR [rbx+0x40],0x1
  405fb6:	call   4031c0 <__longjmp_chk@plt>
  405fbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405fc0 <UnityAssertEqualIntArray@@Base>:
  405fc0:	push   r15
  405fc2:	push   r14
  405fc4:	push   r13
  405fc6:	push   r12
  405fc8:	push   rbp
  405fc9:	push   rbx
  405fca:	sub    rsp,0x18
  405fce:	mov    r13,0x413c00
  405fd5:	add    QWORD PTR [rip+0xcf63],0x1        # 412f40 <__bss_start@@Base+0x10d0>
  405fdd:	cmp    QWORD PTR [r13+0x40],0x0
  405fe2:	jne    4060d2 <UnityAssertEqualIntArray@@Base+0x112>
  405fe8:	add    QWORD PTR [rip+0xcf58],0x1        # 412f48 <__bss_start@@Base+0x10d8>
  405ff0:	cmp    QWORD PTR [r13+0x48],0x0
  405ff5:	jne    4060d2 <UnityAssertEqualIntArray@@Base+0x112>
  405ffb:	test   edx,edx
  405ffd:	mov    r15d,edx
  406000:	mov    r14,rcx
  406003:	je     406525 <UnityAssertEqualIntArray@@Base+0x565>
  406009:	mov    rdx,r8
  40600c:	add    QWORD PTR [rip+0xcf44],0x1        # 412f58 <__bss_start@@Base+0x10e8>
  406014:	mov    rbx,rdi
  406017:	mov    rbp,rsi
  40601a:	mov    DWORD PTR [rsp+0xc],r9d
  40601f:	mov    QWORD PTR [rsp],r8
  406023:	call   405b00 <UnityPrint@@Base+0x310>
  406028:	add    QWORD PTR [rip+0xcf48],0x1        # 412f78 <__bss_start@@Base+0x1108>
  406030:	cmp    eax,0x1
  406033:	je     4060d2 <UnityAssertEqualIntArray@@Base+0x112>
  406039:	mov    r9d,DWORD PTR [rsp+0xc]
  40603e:	mov    r8,QWORD PTR [rsp]
  406042:	mov    eax,r9d
  406045:	and    al,0x7f
  406047:	sub    eax,0x11
  40604a:	cmp    eax,0x37
  40604d:	jbe    4060e8 <UnityAssertEqualIntArray@@Base+0x128>
  406053:	mov    rax,QWORD PTR [rip+0xd086]        # 4130e0 <__bss_start@@Base+0x1270>
  40605a:	add    QWORD PTR [rip+0xcf3e],0x1        # 412fa0 <__bss_start@@Base+0x1130>
  406062:	sub    r15d,0x1
  406066:	mov    esi,DWORD PTR [rbp+0x0]
  406069:	add    rax,0x1
  40606d:	cmp    DWORD PTR [rbx],esi
  40606f:	mov    QWORD PTR [rip+0xd06a],rax        # 4130e0 <__bss_start@@Base+0x1270>
  406076:	jne    40667b <UnityAssertEqualIntArray@@Base+0x6bb>
  40607c:	mov    rdx,QWORD PTR [rip+0xd055]        # 4130d8 <__bss_start@@Base+0x1268>
  406083:	mov    r12d,r15d
  406086:	xor    esi,esi
  406088:	lea    rcx,[rdx+0x1]
  40608c:	sub    rcx,rax
  40608f:	jmp    4060ac <UnityAssertEqualIntArray@@Base+0xec>
  406091:	nop    DWORD PTR [rax+0x0]
  406098:	add    rax,0x1
  40609c:	mov    edx,DWORD PTR [rbp+0x0]
  40609f:	cmp    DWORD PTR [rbx],edx
  4060a1:	mov    esi,0x1
  4060a6:	jne    4062d1 <UnityAssertEqualIntArray@@Base+0x311>
  4060ac:	sub    r12d,0x1
  4060b0:	add    rbx,0x4
  4060b4:	add    rbp,0x4
  4060b8:	cmp    r12d,0xffffffff
  4060bc:	lea    rdi,[rcx+rax*1]
  4060c0:	jne    406098 <UnityAssertEqualIntArray@@Base+0xd8>
  4060c2:	test   sil,sil
  4060c5:	jne    40658b <UnityAssertEqualIntArray@@Base+0x5cb>
  4060cb:	mov    QWORD PTR [rip+0xd006],rdi        # 4130d8 <__bss_start@@Base+0x1268>
  4060d2:	add    rsp,0x18
  4060d6:	pop    rbx
  4060d7:	pop    rbp
  4060d8:	pop    r12
  4060da:	pop    r13
  4060dc:	pop    r14
  4060de:	pop    r15
  4060e0:	ret    
  4060e1:	nop    DWORD PTR [rax+0x0]
  4060e8:	mov    edx,0x1
  4060ed:	shlx   rax,rdx,rax
  4060f2:	movabs rdx,0x80000000800080
  4060fc:	test   rax,rdx
  4060ff:	jne    4061a8 <UnityAssertEqualIntArray@@Base+0x1e8>
  406105:	movabs rdx,0x2000000020002
  40610f:	test   rax,rdx
  406112:	je     406238 <UnityAssertEqualIntArray@@Base+0x278>
  406118:	mov    rax,QWORD PTR [rip+0xcf21]        # 413040 <__bss_start@@Base+0x11d0>
  40611f:	movzx  esi,WORD PTR [rbp+0x0]
  406123:	sub    r15d,0x1
  406127:	add    QWORD PTR [rip+0xce61],0x1        # 412f90 <__bss_start@@Base+0x1120>
  40612f:	add    rax,0x1
  406133:	cmp    WORD PTR [rbx],si
  406136:	mov    QWORD PTR [rip+0xcf03],rax        # 413040 <__bss_start@@Base+0x11d0>
  40613d:	jne    406597 <UnityAssertEqualIntArray@@Base+0x5d7>
  406143:	mov    rdx,QWORD PTR [rip+0xceee]        # 413038 <__bss_start@@Base+0x11c8>
  40614a:	mov    r12d,r15d
  40614d:	xor    esi,esi
  40614f:	add    rdx,0x1
  406153:	sub    rdx,rax
  406156:	jmp    406176 <UnityAssertEqualIntArray@@Base+0x1b6>
  406158:	nop    DWORD PTR [rax+rax*1+0x0]
  406160:	movzx  edi,WORD PTR [rbp+0x0]
  406164:	add    rax,0x1
  406168:	mov    esi,0x1
  40616d:	cmp    WORD PTR [rbx],di
  406170:	jne    40645d <UnityAssertEqualIntArray@@Base+0x49d>
  406176:	sub    r12d,0x1
  40617a:	add    rbx,0x2
  40617e:	add    rbp,0x2
  406182:	cmp    r12d,0xffffffff
  406186:	lea    rcx,[rdx+rax*1]
  40618a:	jne    406160 <UnityAssertEqualIntArray@@Base+0x1a0>
  40618c:	test   sil,sil
  40618f:	jne    40659f <UnityAssertEqualIntArray@@Base+0x5df>
  406195:	mov    QWORD PTR [rip+0xce9c],rcx        # 413038 <__bss_start@@Base+0x11c8>
  40619c:	jmp    4060d2 <UnityAssertEqualIntArray@@Base+0x112>
  4061a1:	nop    DWORD PTR [rax+0x0]
  4061a8:	mov    rax,QWORD PTR [rip+0xcee1]        # 413090 <__bss_start@@Base+0x1220>
  4061af:	add    QWORD PTR [rip+0xcdd1],0x1        # 412f88 <__bss_start@@Base+0x1118>
  4061b7:	sub    r15d,0x1
  4061bb:	mov    rcx,QWORD PTR [rbp+0x0]
  4061bf:	add    rax,0x1
  4061c3:	cmp    QWORD PTR [rbx],rcx
  4061c6:	mov    QWORD PTR [rip+0xcec3],rax        # 413090 <__bss_start@@Base+0x1220>
  4061cd:	jne    406583 <UnityAssertEqualIntArray@@Base+0x5c3>
  4061d3:	mov    rdx,QWORD PTR [rip+0xceae]        # 413088 <__bss_start@@Base+0x1218>
  4061da:	mov    r12d,r15d
  4061dd:	xor    esi,esi
  4061df:	add    rdx,0x1
  4061e3:	sub    rdx,rax
  4061e6:	jmp    406206 <UnityAssertEqualIntArray@@Base+0x246>
  4061e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4061f0:	add    rax,0x1
  4061f4:	mov    rdi,QWORD PTR [rbp+0x0]
  4061f8:	cmp    QWORD PTR [rbx],rdi
  4061fb:	mov    esi,0x1
  406200:	jne    406397 <UnityAssertEqualIntArray@@Base+0x3d7>
  406206:	sub    r12d,0x1
  40620a:	add    rbx,0x8
  40620e:	add    rbp,0x8
  406212:	cmp    r12d,0xffffffff
  406216:	lea    rcx,[rdx+rax*1]
  40621a:	jne    4061f0 <UnityAssertEqualIntArray@@Base+0x230>
  40621c:	test   sil,sil
  40621f:	jne    406577 <UnityAssertEqualIntArray@@Base+0x5b7>
  406225:	mov    QWORD PTR [rip+0xce5c],rcx        # 413088 <__bss_start@@Base+0x1218>
  40622c:	jmp    4060d2 <UnityAssertEqualIntArray@@Base+0x112>
  406231:	nop    DWORD PTR [rax+0x0]
  406238:	movabs rdx,0x1000000010001
  406242:	test   rax,rdx
  406245:	jne    406254 <UnityAssertEqualIntArray@@Base+0x294>
  406247:	add    QWORD PTR [rip+0xcd31],0x1        # 412f80 <__bss_start@@Base+0x1110>
  40624f:	jmp    406053 <UnityAssertEqualIntArray@@Base+0x93>
  406254:	mov    rax,QWORD PTR [rip+0xcd95]        # 412ff0 <__bss_start@@Base+0x1180>
  40625b:	movzx  esi,BYTE PTR [rbx]
  40625e:	lea    r12d,[r15-0x1]
  406262:	add    QWORD PTR [rip+0xcd2e],0x1        # 412f98 <__bss_start@@Base+0x1128>
  40626a:	add    rax,0x1
  40626e:	cmp    BYTE PTR [rbp+0x0],sil
  406272:	mov    QWORD PTR [rip+0xcd77],rax        # 412ff0 <__bss_start@@Base+0x1180>
  406279:	jne    4065ab <UnityAssertEqualIntArray@@Base+0x5eb>
  40627f:	mov    rdx,QWORD PTR [rip+0xcd62]        # 412fe8 <__bss_start@@Base+0x1178>
  406286:	mov    r15d,r12d
  406289:	xor    esi,esi
  40628b:	sub    rdx,rbx
  40628e:	jmp    4062a6 <UnityAssertEqualIntArray@@Base+0x2e6>
  406290:	movzx  edi,BYTE PTR [rbp+0x0]
  406294:	add    rax,0x1
  406298:	mov    esi,0x1
  40629d:	cmp    BYTE PTR [rbx],dil
  4062a0:	jne    406668 <UnityAssertEqualIntArray@@Base+0x6a8>
  4062a6:	sub    r15d,0x1
  4062aa:	add    rbx,0x1
  4062ae:	add    rbp,0x1
  4062b2:	cmp    r15d,0xffffffff
  4062b6:	lea    rcx,[rbx+rdx*1]
  4062ba:	jne    406290 <UnityAssertEqualIntArray@@Base+0x2d0>
  4062bc:	test   sil,sil
  4062bf:	jne    406683 <UnityAssertEqualIntArray@@Base+0x6c3>
  4062c5:	mov    QWORD PTR [rip+0xcd1c],rcx        # 412fe8 <__bss_start@@Base+0x1178>
  4062cc:	jmp    4060d2 <UnityAssertEqualIntArray@@Base+0x112>
  4062d1:	mov    QWORD PTR [rip+0xce08],rax        # 4130e0 <__bss_start@@Base+0x1270>
  4062d8:	mov    QWORD PTR [rip+0xcdf9],rdi        # 4130d8 <__bss_start@@Base+0x1268>
  4062df:	mov    rdi,r8
  4062e2:	mov    DWORD PTR [rsp],r9d
  4062e6:	call   405aa0 <UnityPrint@@Base+0x2b0>
  4062eb:	mov    rdi,0x40c640
  4062f2:	add    QWORD PTR [rip+0xcd9e],0x1        # 413098 <__bss_start@@Base+0x1228>
  4062fa:	call   4057f0 <UnityPrint@@Base>
  4062ff:	mov    edi,r15d
  406302:	add    QWORD PTR [rip+0xcd96],0x1        # 4130a0 <__bss_start@@Base+0x1230>
  40630a:	sub    edi,r12d
  40630d:	call   405400 <UnityPrintNumberUnsigned@@Base>
  406312:	mov    rdi,0x40c658
  406319:	add    QWORD PTR [rip+0xcd87],0x1        # 4130a8 <__bss_start@@Base+0x1238>
  406321:	call   4057f0 <UnityPrint@@Base>
  406326:	mov    r9d,DWORD PTR [rsp]
  40632a:	movsxd rdi,DWORD PTR [rbx]
  40632d:	add    QWORD PTR [rip+0xcd7b],0x1        # 4130b0 <__bss_start@@Base+0x1240>
  406335:	mov    esi,r9d
  406338:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  40633d:	mov    rdi,0x40c64f
  406344:	add    QWORD PTR [rip+0xcd6c],0x1        # 4130b8 <__bss_start@@Base+0x1248>
  40634c:	call   4057f0 <UnityPrint@@Base>
  406351:	mov    r9d,DWORD PTR [rsp]
  406355:	movsxd rdi,DWORD PTR [rbp+0x0]
  406359:	add    QWORD PTR [rip+0xcd5f],0x1        # 4130c0 <__bss_start@@Base+0x1250>
  406361:	mov    esi,r9d
  406364:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  406369:	mov    rdi,r14
  40636c:	add    QWORD PTR [rip+0xcd54],0x1        # 4130c8 <__bss_start@@Base+0x1258>
  406374:	call   405930 <UnityPrint@@Base+0x140>
  406379:	lea    rdi,[r13+0x50]
  40637d:	mov    esi,0x1
  406382:	add    QWORD PTR [rip+0xcd46],0x1        # 4130d0 <__bss_start@@Base+0x1260>
  40638a:	mov    QWORD PTR [r13+0x40],0x1
  406392:	call   4031c0 <__longjmp_chk@plt>
  406397:	mov    QWORD PTR [rip+0xccf2],rax        # 413090 <__bss_start@@Base+0x1220>
  40639e:	mov    QWORD PTR [rip+0xcce3],rcx        # 413088 <__bss_start@@Base+0x1218>
  4063a5:	mov    rdi,r8
  4063a8:	mov    DWORD PTR [rsp],r9d
  4063ac:	call   405aa0 <UnityPrint@@Base+0x2b0>
  4063b1:	mov    rdi,0x40c640
  4063b8:	add    QWORD PTR [rip+0xcc88],0x1        # 413048 <__bss_start@@Base+0x11d8>
  4063c0:	call   4057f0 <UnityPrint@@Base>
  4063c5:	mov    edi,r15d
  4063c8:	add    QWORD PTR [rip+0xcc80],0x1        # 413050 <__bss_start@@Base+0x11e0>
  4063d0:	sub    edi,r12d
  4063d3:	call   405400 <UnityPrintNumberUnsigned@@Base>
  4063d8:	mov    rdi,0x40c658
  4063df:	add    QWORD PTR [rip+0xcc71],0x1        # 413058 <__bss_start@@Base+0x11e8>
  4063e7:	call   4057f0 <UnityPrint@@Base>
  4063ec:	mov    r9d,DWORD PTR [rsp]
  4063f0:	mov    rdi,QWORD PTR [rbx]
  4063f3:	add    QWORD PTR [rip+0xcc65],0x1        # 413060 <__bss_start@@Base+0x11f0>
  4063fb:	mov    esi,r9d
  4063fe:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  406403:	mov    rdi,0x40c64f
  40640a:	add    QWORD PTR [rip+0xcc56],0x1        # 413068 <__bss_start@@Base+0x11f8>
  406412:	call   4057f0 <UnityPrint@@Base>
  406417:	mov    r9d,DWORD PTR [rsp]
  40641b:	mov    rdi,QWORD PTR [rbp+0x0]
  40641f:	add    QWORD PTR [rip+0xcc49],0x1        # 413070 <__bss_start@@Base+0x1200>
  406427:	mov    esi,r9d
  40642a:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  40642f:	mov    rdi,r14
  406432:	add    QWORD PTR [rip+0xcc3e],0x1        # 413078 <__bss_start@@Base+0x1208>
  40643a:	call   405930 <UnityPrint@@Base+0x140>
  40643f:	lea    rdi,[r13+0x50]
  406443:	mov    esi,0x1
  406448:	add    QWORD PTR [rip+0xcc30],0x1        # 413080 <__bss_start@@Base+0x1210>
  406450:	mov    QWORD PTR [r13+0x40],0x1
  406458:	call   4031c0 <__longjmp_chk@plt>
  40645d:	mov    QWORD PTR [rip+0xcbdc],rax        # 413040 <__bss_start@@Base+0x11d0>
  406464:	mov    QWORD PTR [rip+0xcbcd],rcx        # 413038 <__bss_start@@Base+0x11c8>
  40646b:	mov    rdi,r8
  40646e:	mov    DWORD PTR [rsp],r9d
  406472:	call   405aa0 <UnityPrint@@Base+0x2b0>
  406477:	mov    rdi,0x40c640
  40647e:	add    QWORD PTR [rip+0xcb72],0x1        # 412ff8 <__bss_start@@Base+0x1188>
  406486:	call   4057f0 <UnityPrint@@Base>
  40648b:	mov    edi,r15d
  40648e:	add    QWORD PTR [rip+0xcb6a],0x1        # 413000 <__bss_start@@Base+0x1190>
  406496:	sub    edi,r12d
  406499:	call   405400 <UnityPrintNumberUnsigned@@Base>
  40649e:	mov    rdi,0x40c658
  4064a5:	add    QWORD PTR [rip+0xcb5b],0x1        # 413008 <__bss_start@@Base+0x1198>
  4064ad:	call   4057f0 <UnityPrint@@Base>
  4064b2:	mov    r9d,DWORD PTR [rsp]
  4064b6:	movsx  rdi,WORD PTR [rbx]
  4064ba:	add    QWORD PTR [rip+0xcb4e],0x1        # 413010 <__bss_start@@Base+0x11a0>
  4064c2:	mov    esi,r9d
  4064c5:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  4064ca:	mov    rdi,0x40c64f
  4064d1:	add    QWORD PTR [rip+0xcb3f],0x1        # 413018 <__bss_start@@Base+0x11a8>
  4064d9:	call   4057f0 <UnityPrint@@Base>
  4064de:	mov    r9d,DWORD PTR [rsp]
  4064e2:	movsx  rdi,WORD PTR [rbp+0x0]
  4064e7:	add    QWORD PTR [rip+0xcb31],0x1        # 413020 <__bss_start@@Base+0x11b0>
  4064ef:	mov    esi,r9d
  4064f2:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  4064f7:	mov    rdi,r14
  4064fa:	add    QWORD PTR [rip+0xcb26],0x1        # 413028 <__bss_start@@Base+0x11b8>
  406502:	call   405930 <UnityPrint@@Base+0x140>
  406507:	lea    rdi,[r13+0x50]
  40650b:	mov    esi,0x1
  406510:	add    QWORD PTR [rip+0xcb18],0x1        # 413030 <__bss_start@@Base+0x11c0>
  406518:	mov    QWORD PTR [r13+0x40],0x1
  406520:	call   4031c0 <__longjmp_chk@plt>
  406525:	mov    rdi,r8
  406528:	add    QWORD PTR [rip+0xca20],0x1        # 412f50 <__bss_start@@Base+0x10e0>
  406530:	call   405aa0 <UnityPrint@@Base+0x2b0>
  406535:	mov    rdi,0x40c5c0
  40653c:	add    QWORD PTR [rip+0xca1c],0x1        # 412f60 <__bss_start@@Base+0x10f0>
  406544:	call   4057f0 <UnityPrint@@Base>
  406549:	mov    rdi,r14
  40654c:	add    QWORD PTR [rip+0xca14],0x1        # 412f68 <__bss_start@@Base+0x10f8>
  406554:	call   405930 <UnityPrint@@Base+0x140>
  406559:	lea    rdi,[r13+0x50]
  40655d:	mov    esi,0x1
  406562:	add    QWORD PTR [rip+0xca06],0x1        # 412f70 <__bss_start@@Base+0x1100>
  40656a:	mov    QWORD PTR [r13+0x40],0x1
  406572:	call   4031c0 <__longjmp_chk@plt>
  406577:	mov    QWORD PTR [rip+0xcb12],rax        # 413090 <__bss_start@@Base+0x1220>
  40657e:	jmp    406225 <UnityAssertEqualIntArray@@Base+0x265>
  406583:	mov    r12d,r15d
  406586:	jmp    4063a5 <UnityAssertEqualIntArray@@Base+0x3e5>
  40658b:	mov    QWORD PTR [rip+0xcb4e],rax        # 4130e0 <__bss_start@@Base+0x1270>
  406592:	jmp    4060cb <UnityAssertEqualIntArray@@Base+0x10b>
  406597:	mov    r12d,r15d
  40659a:	jmp    40646b <UnityAssertEqualIntArray@@Base+0x4ab>
  40659f:	mov    QWORD PTR [rip+0xca9a],rax        # 413040 <__bss_start@@Base+0x11d0>
  4065a6:	jmp    406195 <UnityAssertEqualIntArray@@Base+0x1d5>
  4065ab:	mov    r15d,r12d
  4065ae:	mov    rdi,r8
  4065b1:	mov    DWORD PTR [rsp],r9d
  4065b5:	call   405aa0 <UnityPrint@@Base+0x2b0>
  4065ba:	mov    rdi,0x40c640
  4065c1:	add    QWORD PTR [rip+0xc9df],0x1        # 412fa8 <__bss_start@@Base+0x1138>
  4065c9:	call   4057f0 <UnityPrint@@Base>
  4065ce:	mov    edi,r12d
  4065d1:	add    QWORD PTR [rip+0xc9d7],0x1        # 412fb0 <__bss_start@@Base+0x1140>
  4065d9:	sub    edi,r15d
  4065dc:	call   405400 <UnityPrintNumberUnsigned@@Base>
  4065e1:	mov    rdi,0x40c658
  4065e8:	add    QWORD PTR [rip+0xc9c8],0x1        # 412fb8 <__bss_start@@Base+0x1148>
  4065f0:	call   4057f0 <UnityPrint@@Base>
  4065f5:	mov    r9d,DWORD PTR [rsp]
  4065f9:	movsx  rdi,BYTE PTR [rbx]
  4065fd:	add    QWORD PTR [rip+0xc9bb],0x1        # 412fc0 <__bss_start@@Base+0x1150>
  406605:	mov    esi,r9d
  406608:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  40660d:	mov    rdi,0x40c64f
  406614:	add    QWORD PTR [rip+0xc9ac],0x1        # 412fc8 <__bss_start@@Base+0x1158>
  40661c:	call   4057f0 <UnityPrint@@Base>
  406621:	mov    r9d,DWORD PTR [rsp]
  406625:	movsx  rdi,BYTE PTR [rbp+0x0]
  40662a:	add    QWORD PTR [rip+0xc99e],0x1        # 412fd0 <__bss_start@@Base+0x1160>
  406632:	mov    esi,r9d
  406635:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  40663a:	mov    rdi,r14
  40663d:	add    QWORD PTR [rip+0xc993],0x1        # 412fd8 <__bss_start@@Base+0x1168>
  406645:	call   405930 <UnityPrint@@Base+0x140>
  40664a:	lea    rdi,[r13+0x50]
  40664e:	mov    esi,0x1
  406653:	add    QWORD PTR [rip+0xc985],0x1        # 412fe0 <__bss_start@@Base+0x1170>
  40665b:	mov    QWORD PTR [r13+0x40],0x1
  406663:	call   4031c0 <__longjmp_chk@plt>
  406668:	mov    QWORD PTR [rip+0xc981],rax        # 412ff0 <__bss_start@@Base+0x1180>
  40666f:	mov    QWORD PTR [rip+0xc972],rcx        # 412fe8 <__bss_start@@Base+0x1178>
  406676:	jmp    4065ae <UnityAssertEqualIntArray@@Base+0x5ee>
  40667b:	mov    r12d,r15d
  40667e:	jmp    4062df <UnityAssertEqualIntArray@@Base+0x31f>
  406683:	mov    QWORD PTR [rip+0xc966],rax        # 412ff0 <__bss_start@@Base+0x1180>
  40668a:	jmp    4062c5 <UnityAssertEqualIntArray@@Base+0x305>
  40668f:	nop

0000000000406690 <UnityAssertEqualFloatArray@@Base>:
  406690:	push   r15
  406692:	push   r14
  406694:	push   r13
  406696:	push   r12
  406698:	push   rbp
  406699:	push   rbx
  40669a:	sub    rsp,0x18
  40669e:	mov    rbp,0x413c00
  4066a5:	add    QWORD PTR [rip+0xca53],0x1        # 413100 <__bss_start@@Base+0x1290>
  4066ad:	cmp    QWORD PTR [rbp+0x40],0x0
  4066b2:	jne    406817 <UnityAssertEqualFloatArray@@Base+0x187>
  4066b8:	add    QWORD PTR [rip+0xca48],0x1        # 413108 <__bss_start@@Base+0x1298>
  4066c0:	cmp    QWORD PTR [rbp+0x48],0x0
  4066c5:	jne    406817 <UnityAssertEqualFloatArray@@Base+0x187>
  4066cb:	test   edx,edx
  4066cd:	mov    r13,r8
  4066d0:	mov    r12,rcx
  4066d3:	mov    r15d,edx
  4066d6:	mov    rbx,rsi
  4066d9:	mov    r14,rdi
  4066dc:	je     40691b <UnityAssertEqualFloatArray@@Base+0x28b>
  4066e2:	mov    rdx,r8
  4066e5:	add    QWORD PTR [rip+0xca2b],0x1        # 413118 <__bss_start@@Base+0x12a8>
  4066ed:	call   405b00 <UnityPrint@@Base+0x310>
  4066f2:	add    QWORD PTR [rip+0xca3e],0x1        # 413138 <__bss_start@@Base+0x12c8>
  4066fa:	cmp    eax,0x1
  4066fd:	je     406817 <UnityAssertEqualFloatArray@@Base+0x187>
  406703:	lea    eax,[r15-0x1]
  406707:	add    QWORD PTR [rip+0xca31],0x1        # 413140 <__bss_start@@Base+0x12d0>
  40670f:	xor    r8d,r8d
  406712:	mov    r11,QWORD PTR [rip+0xca2f]        # 413148 <__bss_start@@Base+0x12d8>
  406719:	xor    r15d,r15d
  40671c:	mov    esi,eax
  40671e:	mov    DWORD PTR [rsp+0xc],eax
  406722:	mov    rax,QWORD PTR [rip+0xca2f]        # 413158 <__bss_start@@Base+0x12e8>
  406729:	vxorps xmm1,xmm1,xmm1
  40672d:	mov    r10,QWORD PTR [rip+0xca1c]        # 413150 <__bss_start@@Base+0x12e0>
  406734:	mov    rdx,QWORD PTR [rip+0xca4d]        # 413188 <__bss_start@@Base+0x1318>
  40673b:	vmovss xmm4,DWORD PTR [rip+0x5fb9]        # 40c6fc <UnityStrOk@@Base+0x80>
  406743:	mov    rcx,rax
  406746:	neg    rcx
  406749:	shl    rcx,0x2
  40674d:	lea    rdi,[r14+rcx*1]
  406751:	add    rcx,rbx
  406754:	mov    ebx,esi
  406756:	mov    rsi,QWORD PTR [rip+0xca33]        # 413190 <__bss_start@@Base+0x1320>
  40675d:	xor    r14d,r14d
  406760:	add    rsi,0x1
  406764:	sub    rsi,rax
  406767:	jmp    4067ae <UnityAssertEqualFloatArray@@Base+0x11e>
  406769:	nop    DWORD PTR [rax+0x0]
  406770:	vmulss xmm0,xmm0,xmm4
  406774:	vucomiss xmm1,xmm0
  406778:	ja     4067da <UnityAssertEqualFloatArray@@Base+0x14a>
  40677a:	vmulss xmm3,xmm2,xmm1
  40677e:	vucomiss xmm3,xmm1
  406782:	jp     406830 <UnityAssertEqualFloatArray@@Base+0x1a0>
  406788:	jne    406830 <UnityAssertEqualFloatArray@@Base+0x1a0>
  40678e:	add    rax,0x1
  406792:	vucomiss xmm2,xmm0
  406796:	ja     4068c6 <UnityAssertEqualFloatArray@@Base+0x236>
  40679c:	sub    ebx,0x1
  40679f:	add    rdx,0x1
  4067a3:	mov    r8d,0x1
  4067a9:	cmp    ebx,0xffffffff
  4067ac:	je     4067f0 <UnityAssertEqualFloatArray@@Base+0x160>
  4067ae:	vmovss xmm0,DWORD PTR [rdi+rax*4]
  4067b3:	lea    r9,[rsi+rax*1]
  4067b7:	vsubss xmm2,xmm0,DWORD PTR [rcx+rax*4]
  4067bc:	vucomiss xmm1,xmm2
  4067c0:	jbe    406770 <UnityAssertEqualFloatArray@@Base+0xe0>
  4067c2:	vmulss xmm0,xmm0,xmm4
  4067c6:	add    r11,0x1
  4067ca:	vsubss xmm2,xmm1,xmm2
  4067ce:	mov    r14d,0x1
  4067d4:	vucomiss xmm1,xmm0
  4067d8:	jbe    40677a <UnityAssertEqualFloatArray@@Base+0xea>
  4067da:	vsubss xmm0,xmm1,xmm0
  4067de:	add    r10,0x1
  4067e2:	mov    r15d,0x1
  4067e8:	jmp    40677a <UnityAssertEqualFloatArray@@Base+0xea>
  4067ea:	nop    WORD PTR [rax+rax*1+0x0]
  4067f0:	test   r14b,r14b
  4067f3:	mov    QWORD PTR [rip+0xc996],r9        # 413190 <__bss_start@@Base+0x1320>
  4067fa:	jne    40696d <UnityAssertEqualFloatArray@@Base+0x2dd>
  406800:	test   r15b,r15b
  406803:	jne    40690f <UnityAssertEqualFloatArray@@Base+0x27f>
  406809:	mov    QWORD PTR [rip+0xc948],rax        # 413158 <__bss_start@@Base+0x12e8>
  406810:	mov    QWORD PTR [rip+0xc971],rdx        # 413188 <__bss_start@@Base+0x1318>
  406817:	add    rsp,0x18
  40681b:	pop    rbx
  40681c:	pop    rbp
  40681d:	pop    r12
  40681f:	pop    r13
  406821:	pop    r14
  406823:	pop    r15
  406825:	ret    
  406826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406830:	test   r14b,r14b
  406833:	mov    QWORD PTR [rip+0xc956],r9        # 413190 <__bss_start@@Base+0x1320>
  40683a:	jne    406903 <UnityAssertEqualFloatArray@@Base+0x273>
  406840:	test   r15b,r15b
  406843:	je     40684c <UnityAssertEqualFloatArray@@Base+0x1bc>
  406845:	mov    QWORD PTR [rip+0xc904],r10        # 413150 <__bss_start@@Base+0x12e0>
  40684c:	test   r8b,r8b
  40684f:	jne    406979 <UnityAssertEqualFloatArray@@Base+0x2e9>
  406855:	mov    rdi,r13
  406858:	call   405aa0 <UnityPrint@@Base+0x2b0>
  40685d:	mov    rdi,0x40c640
  406864:	add    QWORD PTR [rip+0xc8f4],0x1        # 413160 <__bss_start@@Base+0x12f0>
  40686c:	call   4057f0 <UnityPrint@@Base>
  406871:	mov    edi,DWORD PTR [rsp+0xc]
  406875:	add    QWORD PTR [rip+0xc8eb],0x1        # 413168 <__bss_start@@Base+0x12f8>
  40687d:	sub    edi,ebx
  40687f:	call   405400 <UnityPrintNumberUnsigned@@Base>
  406884:	mov    rdi,0x40c600
  40688b:	add    QWORD PTR [rip+0xc8dd],0x1        # 413170 <__bss_start@@Base+0x1300>
  406893:	call   4057f0 <UnityPrint@@Base>
  406898:	mov    rdi,r12
  40689b:	add    QWORD PTR [rip+0xc8d5],0x1        # 413178 <__bss_start@@Base+0x1308>
  4068a3:	call   405930 <UnityPrint@@Base+0x140>
  4068a8:	lea    rdi,[rbp+0x50]
  4068ac:	mov    esi,0x1
  4068b1:	add    QWORD PTR [rip+0xc8c7],0x1        # 413180 <__bss_start@@Base+0x1310>
  4068b9:	mov    QWORD PTR [rbp+0x40],0x1
  4068c1:	call   4031c0 <__longjmp_chk@plt>
  4068c6:	test   r14b,r14b
  4068c9:	mov    QWORD PTR [rip+0xc8c0],r9        # 413190 <__bss_start@@Base+0x1320>
  4068d0:	jne    4068fa <UnityAssertEqualFloatArray@@Base+0x26a>
  4068d2:	test   r15b,r15b
  4068d5:	je     4068de <UnityAssertEqualFloatArray@@Base+0x24e>
  4068d7:	mov    QWORD PTR [rip+0xc872],r10        # 413150 <__bss_start@@Base+0x12e0>
  4068de:	test   r8b,r8b
  4068e1:	mov    QWORD PTR [rip+0xc870],rax        # 413158 <__bss_start@@Base+0x12e8>
  4068e8:	je     406855 <UnityAssertEqualFloatArray@@Base+0x1c5>
  4068ee:	mov    QWORD PTR [rip+0xc893],rdx        # 413188 <__bss_start@@Base+0x1318>
  4068f5:	jmp    406855 <UnityAssertEqualFloatArray@@Base+0x1c5>
  4068fa:	mov    QWORD PTR [rip+0xc847],r11        # 413148 <__bss_start@@Base+0x12d8>
  406901:	jmp    4068d2 <UnityAssertEqualFloatArray@@Base+0x242>
  406903:	mov    QWORD PTR [rip+0xc83e],r11        # 413148 <__bss_start@@Base+0x12d8>
  40690a:	jmp    406840 <UnityAssertEqualFloatArray@@Base+0x1b0>
  40690f:	mov    QWORD PTR [rip+0xc83a],r10        # 413150 <__bss_start@@Base+0x12e0>
  406916:	jmp    406809 <UnityAssertEqualFloatArray@@Base+0x179>
  40691b:	mov    rdi,r8
  40691e:	add    QWORD PTR [rip+0xc7ea],0x1        # 413110 <__bss_start@@Base+0x12a0>
  406926:	call   405aa0 <UnityPrint@@Base+0x2b0>
  40692b:	mov    rdi,0x40c5c0
  406932:	add    QWORD PTR [rip+0xc7e6],0x1        # 413120 <__bss_start@@Base+0x12b0>
  40693a:	call   4057f0 <UnityPrint@@Base>
  40693f:	mov    rdi,r12
  406942:	add    QWORD PTR [rip+0xc7de],0x1        # 413128 <__bss_start@@Base+0x12b8>
  40694a:	call   405930 <UnityPrint@@Base+0x140>
  40694f:	lea    rdi,[rbp+0x50]
  406953:	mov    esi,0x1
  406958:	add    QWORD PTR [rip+0xc7d0],0x1        # 413130 <__bss_start@@Base+0x12c0>
  406960:	mov    QWORD PTR [rbp+0x40],0x1
  406968:	call   4031c0 <__longjmp_chk@plt>
  40696d:	mov    QWORD PTR [rip+0xc7d4],r11        # 413148 <__bss_start@@Base+0x12d8>
  406974:	jmp    406800 <UnityAssertEqualFloatArray@@Base+0x170>
  406979:	mov    QWORD PTR [rip+0xc7d8],rax        # 413158 <__bss_start@@Base+0x12e8>
  406980:	jmp    4068ee <UnityAssertEqualFloatArray@@Base+0x25e>
  406985:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406990 <UnityAssertFloatsWithin@@Base>:
  406990:	push   rbp
  406991:	push   rbx
  406992:	sub    rsp,0x8
  406996:	mov    rbx,0x413c00
  40699d:	add    QWORD PTR [rip+0xc7fb],0x1        # 4131a0 <__bss_start@@Base+0x1330>
  4069a5:	cmp    QWORD PTR [rbx+0x40],0x0
  4069aa:	jne    4069f9 <UnityAssertFloatsWithin@@Base+0x69>
  4069ac:	add    QWORD PTR [rip+0xc7f4],0x1        # 4131a8 <__bss_start@@Base+0x1338>
  4069b4:	cmp    QWORD PTR [rbx+0x48],0x0
  4069b9:	jne    4069f9 <UnityAssertFloatsWithin@@Base+0x69>
  4069bb:	vsubss xmm1,xmm2,xmm1
  4069bf:	vxorps xmm2,xmm2,xmm2
  4069c3:	add    QWORD PTR [rip+0xc7e5],0x1        # 4131b0 <__bss_start@@Base+0x1340>
  4069cb:	vucomiss xmm2,xmm1
  4069cf:	ja     406a00 <UnityAssertFloatsWithin@@Base+0x70>
  4069d1:	vucomiss xmm2,xmm0
  4069d5:	ja     406a12 <UnityAssertFloatsWithin@@Base+0x82>
  4069d7:	vmulss xmm3,xmm1,xmm2
  4069db:	vucomiss xmm3,xmm2
  4069df:	jp     406a20 <UnityAssertFloatsWithin@@Base+0x90>
  4069e1:	jne    406a20 <UnityAssertFloatsWithin@@Base+0x90>
  4069e3:	add    QWORD PTR [rip+0xc7dd],0x1        # 4131c8 <__bss_start@@Base+0x1358>
  4069eb:	vucomiss xmm1,xmm0
  4069ef:	ja     406a20 <UnityAssertFloatsWithin@@Base+0x90>
  4069f1:	add    QWORD PTR [rip+0xc7d7],0x1        # 4131d0 <__bss_start@@Base+0x1360>
  4069f9:	add    rsp,0x8
  4069fd:	pop    rbx
  4069fe:	pop    rbp
  4069ff:	ret    
  406a00:	add    QWORD PTR [rip+0xc7b0],0x1        # 4131b8 <__bss_start@@Base+0x1348>
  406a08:	vsubss xmm1,xmm2,xmm1
  406a0c:	vucomiss xmm2,xmm0
  406a10:	jbe    4069d7 <UnityAssertFloatsWithin@@Base+0x47>
  406a12:	vsubss xmm0,xmm2,xmm0
  406a16:	add    QWORD PTR [rip+0xc7a2],0x1        # 4131c0 <__bss_start@@Base+0x1350>
  406a1e:	jmp    4069d7 <UnityAssertFloatsWithin@@Base+0x47>
  406a20:	mov    rbp,rdi
  406a23:	mov    rdi,rsi
  406a26:	call   405aa0 <UnityPrint@@Base+0x2b0>
  406a2b:	mov    rdi,0x40c600
  406a32:	add    QWORD PTR [rip+0xc79e],0x1        # 4131d8 <__bss_start@@Base+0x1368>
  406a3a:	call   4057f0 <UnityPrint@@Base>
  406a3f:	mov    rdi,rbp
  406a42:	add    QWORD PTR [rip+0xc796],0x1        # 4131e0 <__bss_start@@Base+0x1370>
  406a4a:	call   405930 <UnityPrint@@Base+0x140>
  406a4f:	lea    rdi,[rbx+0x50]
  406a53:	mov    esi,0x1
  406a58:	add    QWORD PTR [rip+0xc788],0x1        # 4131e8 <__bss_start@@Base+0x1378>
  406a60:	mov    QWORD PTR [rbx+0x40],0x1
  406a68:	call   4031c0 <__longjmp_chk@plt>
  406a6d:	nop    DWORD PTR [rax]

0000000000406a70 <UnityAssertFloatSpecial@@Base>:
  406a70:	push   r12
  406a72:	push   rbp
  406a73:	push   rbx
  406a74:	sub    rsp,0x40
  406a78:	mov    rbx,0x413c00
  406a7f:	mov    rax,QWORD PTR fs:0x28
  406a88:	mov    QWORD PTR [rsp+0x38],rax
  406a8d:	xor    eax,eax
  406a8f:	mov    rax,0x40c568
  406a96:	mov    QWORD PTR [rsp+0x10],rax
  406a9b:	mov    rax,0x40c550
  406aa2:	mov    QWORD PTR [rsp+0x18],rax
  406aa7:	mov    rax,0x40c544
  406aae:	mov    QWORD PTR [rsp+0x20],rax
  406ab3:	mov    rax,0x40c538
  406aba:	mov    QWORD PTR [rsp+0x28],rax
  406abf:	mov    eax,edx
  406ac1:	shr    eax,1
  406ac3:	cmp    QWORD PTR [rbx+0x40],0x0
  406ac8:	jne    406ad9 <UnityAssertFloatSpecial@@Base+0x69>
  406aca:	add    QWORD PTR [rip+0xc72e],0x1        # 413200 <__bss_start@@Base+0x1390>
  406ad2:	cmp    QWORD PTR [rbx+0x48],0x0
  406ad7:	je     406b00 <UnityAssertFloatSpecial@@Base+0x90>
  406ad9:	add    QWORD PTR [rip+0xc7df],0x1        # 4132c0 <__bss_start@@Base+0x1450>
  406ae1:	mov    rax,QWORD PTR [rsp+0x38]
  406ae6:	xor    rax,QWORD PTR fs:0x28
  406aef:	jne    406c75 <UnityAssertFloatSpecial@@Base+0x205>
  406af5:	add    rsp,0x40
  406af9:	pop    rbx
  406afa:	pop    rbp
  406afb:	pop    r12
  406afd:	ret    
  406afe:	xchg   ax,ax
  406b00:	cmp    edx,0x7
  406b03:	mov    rbp,rdi
  406b06:	ja     406c28 <UnityAssertFloatSpecial@@Base+0x1b8>
  406b0c:	lea    r8,[rip+0x58cd]        # 40c3e0 <_IO_stdin_used@@Base+0x3e0>
  406b13:	mov    edi,edx
  406b15:	movsxd rcx,DWORD PTR [r8+rdi*4]
  406b19:	add    rcx,r8
  406b1c:	jmp    rcx
  406b1e:	xchg   ax,ax
  406b20:	xor    ecx,ecx
  406b22:	vucomiss xmm0,xmm0
  406b26:	setp   cl
  406b29:	add    QWORD PTR [rip+0xc707],0x1        # 413238 <__bss_start@@Base+0x13c8>
  406b31:	and    edx,0x1
  406b34:	cmp    rcx,rdx
  406b37:	jne    406c7a <UnityAssertFloatSpecial@@Base+0x20a>
  406b3d:	add    QWORD PTR [rip+0xc773],0x1        # 4132b8 <__bss_start@@Base+0x1448>
  406b45:	jmp    406ae1 <UnityAssertFloatSpecial@@Base+0x71>
  406b47:	nop    WORD PTR [rax+rax*1+0x0]
  406b50:	vmovaps xmm1,xmm0
  406b54:	xor    ecx,ecx
  406b56:	vandps xmm1,xmm1,XMMWORD PTR [rip+0x5bb2]        # 40c710 <UnityStrOk@@Base+0x94>
  406b5e:	vucomiss xmm1,DWORD PTR [rip+0x5b9a]        # 40c700 <UnityStrOk@@Base+0x84>
  406b66:	jbe    406b8d <UnityAssertFloatSpecial@@Base+0x11d>
  406b68:	vmovd  ecx,xmm0
  406b6c:	add    QWORD PTR [rip+0xc6ac],0x1        # 413220 <__bss_start@@Base+0x13b0>
  406b74:	test   ecx,ecx
  406b76:	js     406b80 <UnityAssertFloatSpecial@@Base+0x110>
  406b78:	add    QWORD PTR [rip+0xc6a8],0x1        # 413228 <__bss_start@@Base+0x13b8>
  406b80:	vxorps xmm1,xmm1,xmm1
  406b84:	xor    ecx,ecx
  406b86:	vucomiss xmm1,xmm0
  406b8a:	seta   cl
  406b8d:	add    QWORD PTR [rip+0xc69b],0x1        # 413230 <__bss_start@@Base+0x13c0>
  406b95:	jmp    406b31 <UnityAssertFloatSpecial@@Base+0xc1>
  406b97:	nop    WORD PTR [rax+rax*1+0x0]
  406ba0:	vmovaps xmm1,xmm0
  406ba4:	xor    ecx,ecx
  406ba6:	vandps xmm1,xmm1,XMMWORD PTR [rip+0x5b62]        # 40c710 <UnityStrOk@@Base+0x94>
  406bae:	vucomiss xmm1,DWORD PTR [rip+0x5b4a]        # 40c700 <UnityStrOk@@Base+0x84>
  406bb6:	jbe    406bdd <UnityAssertFloatSpecial@@Base+0x16d>
  406bb8:	vmovd  ecx,xmm0
  406bbc:	add    QWORD PTR [rip+0xc644],0x1        # 413208 <__bss_start@@Base+0x1398>
  406bc4:	test   ecx,ecx
  406bc6:	js     406bd0 <UnityAssertFloatSpecial@@Base+0x160>
  406bc8:	add    QWORD PTR [rip+0xc640],0x1        # 413210 <__bss_start@@Base+0x13a0>
  406bd0:	xor    ecx,ecx
  406bd2:	vucomiss xmm0,DWORD PTR [rip+0x5b1e]        # 40c6f8 <UnityStrOk@@Base+0x7c>
  406bda:	seta   cl
  406bdd:	add    QWORD PTR [rip+0xc633],0x1        # 413218 <__bss_start@@Base+0x13a8>
  406be5:	jmp    406b31 <UnityAssertFloatSpecial@@Base+0xc1>
  406bea:	nop    WORD PTR [rax+rax*1+0x0]
  406bf0:	vmovaps xmm1,xmm0
  406bf4:	vandps xmm1,xmm1,XMMWORD PTR [rip+0x5b14]        # 40c710 <UnityStrOk@@Base+0x94>
  406bfc:	vucomiss xmm1,DWORD PTR [rip+0x5afc]        # 40c700 <UnityStrOk@@Base+0x84>
  406c04:	ja     406c50 <UnityAssertFloatSpecial@@Base+0x1e0>
  406c06:	vucomiss xmm0,xmm0
  406c0a:	jp     406d3c <UnityAssertFloatSpecial@@Base+0x2cc>
  406c10:	add    QWORD PTR [rip+0xc638],0x1        # 413250 <__bss_start@@Base+0x13e0>
  406c18:	mov    ecx,0x1
  406c1d:	jmp    406b31 <UnityAssertFloatSpecial@@Base+0xc1>
  406c22:	nop    WORD PTR [rax+rax*1+0x0]
  406c28:	mov    rax,0x40c520
  406c2f:	mov    ecx,edx
  406c31:	add    QWORD PTR [rip+0xc61f],0x1        # 413258 <__bss_start@@Base+0x13e8>
  406c39:	not    ecx
  406c3b:	and    ecx,0x1
  406c3e:	mov    QWORD PTR [rsp+0x10],rax
  406c43:	xor    eax,eax
  406c45:	jmp    406b31 <UnityAssertFloatSpecial@@Base+0xc1>
  406c4a:	nop    WORD PTR [rax+rax*1+0x0]
  406c50:	vmovd  r8d,xmm0
  406c55:	add    QWORD PTR [rip+0xc5e3],0x1        # 413240 <__bss_start@@Base+0x13d0>
  406c5d:	xor    ecx,ecx
  406c5f:	test   r8d,r8d
  406c62:	js     406b31 <UnityAssertFloatSpecial@@Base+0xc1>
  406c68:	add    QWORD PTR [rip+0xc5d8],0x1        # 413248 <__bss_start@@Base+0x13d8>
  406c70:	jmp    406b31 <UnityAssertFloatSpecial@@Base+0xc1>
  406c75:	call   403100 <__stack_chk_fail@plt>
  406c7a:	mov    rdi,rsi
  406c7d:	mov    QWORD PTR [rsp+0x8],rdx
  406c82:	mov    QWORD PTR [rsp],rax
  406c86:	add    QWORD PTR [rip+0xc5d2],0x1        # 413260 <__bss_start@@Base+0x13f0>
  406c8e:	call   405aa0 <UnityPrint@@Base+0x2b0>
  406c93:	mov    rdi,0x40c658
  406c9a:	add    QWORD PTR [rip+0xc5c6],0x1        # 413268 <__bss_start@@Base+0x13f8>
  406ca2:	call   4057f0 <UnityPrint@@Base>
  406ca7:	mov    rdx,QWORD PTR [rsp+0x8]
  406cac:	add    QWORD PTR [rip+0xc5bc],0x1        # 413270 <__bss_start@@Base+0x1400>
  406cb4:	mov    rax,QWORD PTR [rsp]
  406cb8:	test   rdx,rdx
  406cbb:	je     406d43 <UnityAssertFloatSpecial@@Base+0x2d3>
  406cc1:	mov    r12,QWORD PTR [rsp+rax*8+0x10]
  406cc6:	mov    rdi,r12
  406cc9:	call   4057f0 <UnityPrint@@Base>
  406cce:	mov    rdi,0x40c64f
  406cd5:	add    QWORD PTR [rip+0xc5ab],0x1        # 413288 <__bss_start@@Base+0x1418>
  406cdd:	call   4057f0 <UnityPrint@@Base>
  406ce2:	mov    rdi,0x40c571
  406ce9:	add    QWORD PTR [rip+0xc59f],0x1        # 413290 <__bss_start@@Base+0x1420>
  406cf1:	add    QWORD PTR [rip+0xc59f],0x1        # 413298 <__bss_start@@Base+0x1428>
  406cf9:	call   4057f0 <UnityPrint@@Base>
  406cfe:	add    QWORD PTR [rip+0xc59a],0x1        # 4132a0 <__bss_start@@Base+0x1430>
  406d06:	mov    rdi,r12
  406d09:	call   4057f0 <UnityPrint@@Base>
  406d0e:	mov    rdi,rbp
  406d11:	add    QWORD PTR [rip+0xc58f],0x1        # 4132a8 <__bss_start@@Base+0x1438>
  406d19:	call   405930 <UnityPrint@@Base+0x140>
  406d1e:	lea    rdi,[rbx+0x50]
  406d22:	mov    esi,0x1
  406d27:	add    QWORD PTR [rip+0xc581],0x1        # 4132b0 <__bss_start@@Base+0x1440>
  406d2f:	mov    QWORD PTR [rbx+0x40],0x1
  406d37:	call   4031c0 <__longjmp_chk@plt>
  406d3c:	xor    ecx,ecx
  406d3e:	jmp    406b31 <UnityAssertFloatSpecial@@Base+0xc1>
  406d43:	mov    rdi,0x40c571
  406d4a:	add    QWORD PTR [rip+0xc526],0x1        # 413278 <__bss_start@@Base+0x1408>
  406d52:	call   4057f0 <UnityPrint@@Base>
  406d57:	mov    rax,QWORD PTR [rsp]
  406d5b:	add    QWORD PTR [rip+0xc51d],0x1        # 413280 <__bss_start@@Base+0x1410>
  406d63:	mov    r12,QWORD PTR [rsp+rax*8+0x10]
  406d68:	mov    rdi,r12
  406d6b:	call   4057f0 <UnityPrint@@Base>
  406d70:	mov    rdi,0x40c64f
  406d77:	add    QWORD PTR [rip+0xc509],0x1        # 413288 <__bss_start@@Base+0x1418>
  406d7f:	call   4057f0 <UnityPrint@@Base>
  406d84:	add    QWORD PTR [rip+0xc504],0x1        # 413290 <__bss_start@@Base+0x1420>
  406d8c:	jmp    406d06 <UnityAssertFloatSpecial@@Base+0x296>
  406d91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406d9c:	nop    DWORD PTR [rax+0x0]

0000000000406da0 <UnityAssertNumbersWithin@@Base>:
  406da0:	push   r15
  406da2:	push   r14
  406da4:	push   r13
  406da6:	push   r12
  406da8:	push   rbp
  406da9:	push   rbx
  406daa:	sub    rsp,0x8
  406dae:	mov    rbx,0x413c00
  406db5:	add    QWORD PTR [rip+0xc523],0x1        # 4132e0 <__bss_start@@Base+0x1470>
  406dbd:	cmp    QWORD PTR [rbx+0x40],0x0
  406dc2:	jne    406dfe <UnityAssertNumbersWithin@@Base+0x5e>
  406dc4:	add    QWORD PTR [rip+0xc51c],0x1        # 4132e8 <__bss_start@@Base+0x1478>
  406dcc:	cmp    QWORD PTR [rbx+0x48],0x0
  406dd1:	jne    406dfe <UnityAssertNumbersWithin@@Base+0x5e>
  406dd3:	test   r9b,0x10
  406dd7:	jne    406e10 <UnityAssertNumbersWithin@@Base+0x70>
  406dd9:	cmp    rdx,rsi
  406ddc:	jbe    406e38 <UnityAssertNumbersWithin@@Base+0x98>
  406dde:	mov    rax,rdx
  406de1:	sub    rax,rsi
  406de4:	cmp    rdi,rax
  406de7:	setb   al
  406dea:	add    QWORD PTR [rip+0xc50e],0x1        # 413300 <__bss_start@@Base+0x1490>
  406df2:	movzx  eax,al
  406df5:	mov    QWORD PTR [rbx+0x40],rax
  406df9:	test   rax,rax
  406dfc:	jne    406e75 <UnityAssertNumbersWithin@@Base+0xd5>
  406dfe:	add    rsp,0x8
  406e02:	pop    rbx
  406e03:	pop    rbp
  406e04:	pop    r12
  406e06:	pop    r13
  406e08:	pop    r14
  406e0a:	pop    r15
  406e0c:	ret    
  406e0d:	nop    DWORD PTR [rax]
  406e10:	cmp    rdx,rsi
  406e13:	jle    406e58 <UnityAssertNumbersWithin@@Base+0xb8>
  406e15:	mov    rax,rdx
  406e18:	sub    rax,rsi
  406e1b:	cmp    rdi,rax
  406e1e:	setb   al
  406e21:	add    QWORD PTR [rip+0xc4c7],0x1        # 4132f0 <__bss_start@@Base+0x1480>
  406e29:	movzx  eax,al
  406e2c:	mov    QWORD PTR [rbx+0x40],rax
  406e30:	jmp    406df9 <UnityAssertNumbersWithin@@Base+0x59>
  406e32:	nop    WORD PTR [rax+rax*1+0x0]
  406e38:	mov    rax,rsi
  406e3b:	sub    rax,rdx
  406e3e:	cmp    rdi,rax
  406e41:	setb   al
  406e44:	add    QWORD PTR [rip+0xc4bc],0x1        # 413308 <__bss_start@@Base+0x1498>
  406e4c:	movzx  eax,al
  406e4f:	mov    QWORD PTR [rbx+0x40],rax
  406e53:	jmp    406df9 <UnityAssertNumbersWithin@@Base+0x59>
  406e55:	nop    DWORD PTR [rax]
  406e58:	mov    rax,rsi
  406e5b:	sub    rax,rdx
  406e5e:	cmp    rax,rdi
  406e61:	seta   al
  406e64:	add    QWORD PTR [rip+0xc48c],0x1        # 4132f8 <__bss_start@@Base+0x1488>
  406e6c:	movzx  eax,al
  406e6f:	mov    QWORD PTR [rbx+0x40],rax
  406e73:	jmp    406df9 <UnityAssertNumbersWithin@@Base+0x59>
  406e75:	mov    r15,rdi
  406e78:	mov    rdi,r8
  406e7b:	mov    r12d,r9d
  406e7e:	mov    r13,rcx
  406e81:	mov    r14,rdx
  406e84:	mov    rbp,rsi
  406e87:	add    QWORD PTR [rip+0xc481],0x1        # 413310 <__bss_start@@Base+0x14a0>
  406e8f:	call   405aa0 <UnityPrint@@Base+0x2b0>
  406e94:	mov    rdi,0x40c600
  406e9b:	add    QWORD PTR [rip+0xc475],0x1        # 413318 <__bss_start@@Base+0x14a8>
  406ea3:	call   4057f0 <UnityPrint@@Base>
  406ea8:	mov    esi,r12d
  406eab:	mov    rdi,r15
  406eae:	add    QWORD PTR [rip+0xc46a],0x1        # 413320 <__bss_start@@Base+0x14b0>
  406eb6:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  406ebb:	mov    rdi,0x40c658
  406ec2:	add    QWORD PTR [rip+0xc45e],0x1        # 413328 <__bss_start@@Base+0x14b8>
  406eca:	call   4057f0 <UnityPrint@@Base>
  406ecf:	mov    esi,r12d
  406ed2:	mov    rdi,rbp
  406ed5:	add    QWORD PTR [rip+0xc453],0x1        # 413330 <__bss_start@@Base+0x14c0>
  406edd:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  406ee2:	mov    rdi,0x40c64f
  406ee9:	add    QWORD PTR [rip+0xc447],0x1        # 413338 <__bss_start@@Base+0x14c8>
  406ef1:	call   4057f0 <UnityPrint@@Base>
  406ef6:	mov    esi,r12d
  406ef9:	mov    rdi,r14
  406efc:	add    QWORD PTR [rip+0xc43c],0x1        # 413340 <__bss_start@@Base+0x14d0>
  406f04:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  406f09:	mov    rdi,r13
  406f0c:	add    QWORD PTR [rip+0xc434],0x1        # 413348 <__bss_start@@Base+0x14d8>
  406f14:	call   405930 <UnityPrint@@Base+0x140>
  406f19:	lea    rdi,[rbx+0x50]
  406f1d:	mov    esi,0x1
  406f22:	add    QWORD PTR [rip+0xc426],0x1        # 413350 <__bss_start@@Base+0x14e0>
  406f2a:	mov    QWORD PTR [rbx+0x40],0x1
  406f32:	call   4031c0 <__longjmp_chk@plt>
  406f37:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406f40 <UnityAssertEqualString@@Base>:
  406f40:	push   r13
  406f42:	push   r12
  406f44:	push   rbp
  406f45:	push   rbx
  406f46:	sub    rsp,0x8
  406f4a:	mov    r12,0x413c00
  406f51:	add    QWORD PTR [rip+0xc407],0x1        # 413360 <__bss_start@@Base+0x14f0>
  406f59:	cmp    QWORD PTR [r12+0x40],0x0
  406f5f:	jne    406fe0 <UnityAssertEqualString@@Base+0xa0>
  406f61:	add    QWORD PTR [rip+0xc3ff],0x1        # 413368 <__bss_start@@Base+0x14f8>
  406f69:	cmp    QWORD PTR [r12+0x48],0x0
  406f6f:	jne    406fe0 <UnityAssertEqualString@@Base+0xa0>
  406f71:	test   rdi,rdi
  406f74:	setne  bl
  406f77:	test   rsi,rsi
  406f7a:	setne  al
  406f7d:	and    bl,al
  406f7f:	je     406ff0 <UnityAssertEqualString@@Base+0xb0>
  406f81:	add    QWORD PTR [rip+0xc3ef],0x1        # 413378 <__bss_start@@Base+0x1508>
  406f89:	mov    r10,QWORD PTR [rip+0xc3f8]        # 413388 <__bss_start@@Base+0x1518>
  406f90:	xor    r11d,r11d
  406f93:	xor    r8d,r8d
  406f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fa0:	mov    eax,r8d
  406fa3:	mov    rbp,r10
  406fa6:	movzx  r9d,BYTE PTR [rdi+rax*1]
  406fab:	test   r9b,r9b
  406fae:	jne    407070 <UnityAssertEqualString@@Base+0x130>
  406fb4:	test   r11b,r11b
  406fb7:	jne    407086 <UnityAssertEqualString@@Base+0x146>
  406fbd:	add    QWORD PTR [rip+0xc3cb],0x1        # 413390 <__bss_start@@Base+0x1520>
  406fc5:	cmp    BYTE PTR [rsi+rax*1],0x0
  406fc9:	je     406fe0 <UnityAssertEqualString@@Base+0xa0>
  406fcb:	mov    QWORD PTR [r12+0x40],0x1
  406fd4:	add    QWORD PTR [rip+0xc3a4],0x1        # 413380 <__bss_start@@Base+0x1510>
  406fdc:	jmp    407010 <UnityAssertEqualString@@Base+0xd0>
  406fde:	xchg   ax,ax
  406fe0:	add    rsp,0x8
  406fe4:	pop    rbx
  406fe5:	pop    rbp
  406fe6:	pop    r12
  406fe8:	pop    r13
  406fea:	ret    
  406feb:	nop    DWORD PTR [rax+rax*1+0x0]
  406ff0:	add    QWORD PTR [rip+0xc378],0x1        # 413370 <__bss_start@@Base+0x1500>
  406ff8:	cmp    rdi,rsi
  406ffb:	je     406fe0 <UnityAssertEqualString@@Base+0xa0>
  406ffd:	add    QWORD PTR [rip+0xc393],0x1        # 413398 <__bss_start@@Base+0x1528>
  407005:	mov    QWORD PTR [r12+0x40],0x1
  40700e:	xchg   ax,ax
  407010:	mov    rbp,rsi
  407013:	mov    rbx,rdi
  407016:	mov    rdi,rcx
  407019:	mov    r13,rdx
  40701c:	add    QWORD PTR [rip+0xc37c],0x1        # 4133a0 <__bss_start@@Base+0x1530>
  407024:	call   405aa0 <UnityPrint@@Base+0x2b0>
  407029:	mov    rsi,rbp
  40702c:	mov    rdi,rbx
  40702f:	add    QWORD PTR [rip+0xc371],0x1        # 4133a8 <__bss_start@@Base+0x1538>
  407037:	call   403230 <__fprintf_chk@plt+0x10>
  40703c:	mov    rdi,r13
  40703f:	add    QWORD PTR [rip+0xc369],0x1        # 4133b0 <__bss_start@@Base+0x1540>
  407047:	call   405930 <UnityPrint@@Base+0x140>
  40704c:	lea    rdi,[r12+0x50]
  407051:	mov    esi,0x1
  407056:	add    QWORD PTR [rip+0xc35a],0x1        # 4133b8 <__bss_start@@Base+0x1548>
  40705e:	mov    QWORD PTR [r12+0x40],0x1
  407067:	call   4031c0 <__longjmp_chk@plt>
  40706c:	nop    DWORD PTR [rax+0x0]
  407070:	add    r10,0x1
  407074:	cmp    r9b,BYTE PTR [rsi+rax*1]
  407078:	jne    407092 <UnityAssertEqualString@@Base+0x152>
  40707a:	add    r8d,0x1
  40707e:	mov    r11d,ebx
  407081:	jmp    406fa0 <UnityAssertEqualString@@Base+0x60>
  407086:	mov    QWORD PTR [rip+0xc2fb],r10        # 413388 <__bss_start@@Base+0x1518>
  40708d:	jmp    406fbd <UnityAssertEqualString@@Base+0x7d>
  407092:	test   r11b,r11b
  407095:	je     406fcb <UnityAssertEqualString@@Base+0x8b>
  40709b:	mov    QWORD PTR [rip+0xc2e6],rbp        # 413388 <__bss_start@@Base+0x1518>
  4070a2:	jmp    406fcb <UnityAssertEqualString@@Base+0x8b>
  4070a7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004070b0 <UnityAssertEqualStringLen@@Base>:
  4070b0:	push   r15
  4070b2:	push   r14
  4070b4:	push   r13
  4070b6:	push   r12
  4070b8:	push   rbp
  4070b9:	push   rbx
  4070ba:	sub    rsp,0x18
  4070be:	mov    rbx,0x413c00
  4070c5:	add    QWORD PTR [rip+0xc2f3],0x1        # 4133c0 <__bss_start@@Base+0x1550>
  4070cd:	cmp    QWORD PTR [rbx+0x40],0x0
  4070d2:	jne    40719f <UnityAssertEqualStringLen@@Base+0xef>
  4070d8:	add    QWORD PTR [rip+0xc2e8],0x1        # 4133c8 <__bss_start@@Base+0x1558>
  4070e0:	cmp    QWORD PTR [rbx+0x48],0x0
  4070e5:	jne    40719f <UnityAssertEqualStringLen@@Base+0xef>
  4070eb:	test   rdi,rdi
  4070ee:	mov    QWORD PTR [rsp+0x8],rcx
  4070f3:	mov    DWORD PTR [rsp+0x4],edx
  4070f7:	setne  cl
  4070fa:	test   rsi,rsi
  4070fd:	mov    r15,rsi
  407100:	setne  al
  407103:	mov    r14,rdi
  407106:	and    cl,al
  407108:	je     4071b0 <UnityAssertEqualStringLen@@Base+0x100>
  40710e:	mov    rax,QWORD PTR [rip+0xc2db]        # 4133f0 <__bss_start@@Base+0x1580>
  407115:	mov    r10,QWORD PTR [rip+0xc2c4]        # 4133e0 <__bss_start@@Base+0x1570>
  40711c:	mov    r11d,edx
  40711f:	add    QWORD PTR [rip+0xc2b1],0x1        # 4133d8 <__bss_start@@Base+0x1568>
  407127:	mov    rbp,QWORD PTR [rip+0xc2ba]        # 4133e8 <__bss_start@@Base+0x1578>
  40712e:	xor    edi,edi
  407130:	xor    r13d,r13d
  407133:	mov    r9,rax
  407136:	add    r11,rax
  407139:	sub    r10,rax
  40713c:	neg    r9
  40713f:	lea    r12,[r14+r9*1]
  407143:	add    r9,rsi
  407146:	jmp    407162 <UnityAssertEqualStringLen@@Base+0xb2>
  407148:	nop    DWORD PTR [rax+rax*1+0x0]
  407150:	add    rax,0x1
  407154:	cmp    dl,BYTE PTR [rax+r9*1-0x1]
  407159:	jne    4072e8 <UnityAssertEqualStringLen@@Base+0x238>
  40715f:	mov    r13d,ecx
  407162:	movzx  edx,BYTE PTR [r12+rax*1]
  407167:	lea    rsi,[r10+rax*1]
  40716b:	test   dl,dl
  40716d:	jne    407180 <UnityAssertEqualStringLen@@Base+0xd0>
  40716f:	add    rbp,0x1
  407173:	cmp    BYTE PTR [r9+rax*1],0x0
  407178:	je     407340 <UnityAssertEqualStringLen@@Base+0x290>
  40717e:	mov    edi,ecx
  407180:	cmp    r11,rax
  407183:	jne    407150 <UnityAssertEqualStringLen@@Base+0xa0>
  407185:	test   r13b,r13b
  407188:	jne    4073c7 <UnityAssertEqualStringLen@@Base+0x317>
  40718e:	test   dil,dil
  407191:	jne    4073bb <UnityAssertEqualStringLen@@Base+0x30b>
  407197:	add    QWORD PTR [rip+0xc259],0x1        # 4133f8 <__bss_start@@Base+0x1588>
  40719f:	add    rsp,0x18
  4071a3:	pop    rbx
  4071a4:	pop    rbp
  4071a5:	pop    r12
  4071a7:	pop    r13
  4071a9:	pop    r14
  4071ab:	pop    r15
  4071ad:	ret    
  4071ae:	xchg   ax,ax
  4071b0:	add    QWORD PTR [rip+0xc218],0x1        # 4133d0 <__bss_start@@Base+0x1560>
  4071b8:	cmp    rdi,rsi
  4071bb:	je     40719f <UnityAssertEqualStringLen@@Base+0xef>
  4071bd:	mov    rdi,r8
  4071c0:	add    QWORD PTR [rip+0xc238],0x1        # 413400 <__bss_start@@Base+0x1590>
  4071c8:	add    QWORD PTR [rip+0xc238],0x1        # 413408 <__bss_start@@Base+0x1598>
  4071d0:	mov    QWORD PTR [rbx+0x40],0x1
  4071d8:	call   405aa0 <UnityPrint@@Base+0x2b0>
  4071dd:	mov    rdi,0x40c658
  4071e4:	add    QWORD PTR [rip+0xc224],0x1        # 413410 <__bss_start@@Base+0x15a0>
  4071ec:	add    QWORD PTR [rip+0xbbac],0x1        # 412da0 <__bss_start@@Base+0xf30>
  4071f4:	call   4057f0 <UnityPrint@@Base>
  4071f9:	test   r14,r14
  4071fc:	je     407351 <UnityAssertEqualStringLen@@Base+0x2a1>
  407202:	mov    rbp,QWORD PTR [rip+0x8dd7]        # 40ffe0 <stdout@GLIBC_2.2.5>
  407209:	mov    edi,0x27
  40720e:	add    QWORD PTR [rip+0xbb92],0x1        # 412da8 <__bss_start@@Base+0xf38>
  407216:	mov    rsi,QWORD PTR [rbp+0x0]
  40721a:	call   403140 <putc@plt>
  40721f:	mov    esi,DWORD PTR [rsp+0x4]
  407223:	mov    rdi,r14
  407226:	add    QWORD PTR [rip+0xbb8a],0x1        # 412db8 <__bss_start@@Base+0xf48>
  40722e:	call   405670 <UnityPrintLen@@Base>
  407233:	mov    rsi,QWORD PTR [rbp+0x0]
  407237:	mov    edi,0x27
  40723c:	add    QWORD PTR [rip+0xbb7c],0x1        # 412dc0 <__bss_start@@Base+0xf50>
  407244:	call   403140 <putc@plt>
  407249:	add    QWORD PTR [rip+0xbb77],0x1        # 412dc8 <__bss_start@@Base+0xf58>
  407251:	mov    rdi,0x40c64f
  407258:	call   4057f0 <UnityPrint@@Base>
  40725d:	test   r15,r15
  407260:	je     407382 <UnityAssertEqualStringLen@@Base+0x2d2>
  407266:	mov    rbp,QWORD PTR [rip+0x8d73]        # 40ffe0 <stdout@GLIBC_2.2.5>
  40726d:	mov    edi,0x27
  407272:	add    QWORD PTR [rip+0xbb5e],0x1        # 412dd8 <__bss_start@@Base+0xf68>
  40727a:	mov    rsi,QWORD PTR [rbp+0x0]
  40727e:	call   403140 <putc@plt>
  407283:	mov    esi,DWORD PTR [rsp+0x4]
  407287:	mov    rdi,r15
  40728a:	add    QWORD PTR [rip+0xbb56],0x1        # 412de8 <__bss_start@@Base+0xf78>
  407292:	call   405670 <UnityPrintLen@@Base>
  407297:	mov    rsi,QWORD PTR [rbp+0x0]
  40729b:	mov    edi,0x27
  4072a0:	add    QWORD PTR [rip+0xbb48],0x1        # 412df0 <__bss_start@@Base+0xf80>
  4072a8:	call   403140 <putc@plt>
  4072ad:	add    QWORD PTR [rip+0xbb43],0x1        # 412df8 <__bss_start@@Base+0xf88>
  4072b5:	mov    rdi,QWORD PTR [rsp+0x8]
  4072ba:	add    QWORD PTR [rip+0xc156],0x1        # 413418 <__bss_start@@Base+0x15a8>
  4072c2:	call   405930 <UnityPrint@@Base+0x140>
  4072c7:	lea    rdi,[rbx+0x50]
  4072cb:	mov    esi,0x1
  4072d0:	add    QWORD PTR [rip+0xc148],0x1        # 413420 <__bss_start@@Base+0x15b0>
  4072d8:	mov    QWORD PTR [rbx+0x40],0x1
  4072e0:	call   4031c0 <__longjmp_chk@plt>
  4072e5:	nop    DWORD PTR [rax]
  4072e8:	test   r13b,r13b
  4072eb:	mov    QWORD PTR [rip+0xc0fe],rax        # 4133f0 <__bss_start@@Base+0x1580>
  4072f2:	jne    4073af <UnityAssertEqualStringLen@@Base+0x2ff>
  4072f8:	test   dil,dil
  4072fb:	jne    4073a3 <UnityAssertEqualStringLen@@Base+0x2f3>
  407301:	mov    rdi,r8
  407304:	mov    QWORD PTR [rbx+0x40],0x1
  40730c:	add    QWORD PTR [rip+0xc0f4],0x1        # 413408 <__bss_start@@Base+0x1598>
  407314:	call   405aa0 <UnityPrint@@Base+0x2b0>
  407319:	mov    rdi,0x40c658
  407320:	add    QWORD PTR [rip+0xc0e8],0x1        # 413410 <__bss_start@@Base+0x15a0>
  407328:	add    QWORD PTR [rip+0xba70],0x1        # 412da0 <__bss_start@@Base+0xf30>
  407330:	call   4057f0 <UnityPrint@@Base>
  407335:	jmp    407202 <UnityAssertEqualStringLen@@Base+0x152>
  40733a:	nop    WORD PTR [rax+rax*1+0x0]
  407340:	test   r13b,r13b
  407343:	jne    407372 <UnityAssertEqualStringLen@@Base+0x2c2>
  407345:	mov    QWORD PTR [rip+0xc09c],rbp        # 4133e8 <__bss_start@@Base+0x1578>
  40734c:	jmp    40719f <UnityAssertEqualStringLen@@Base+0xef>
  407351:	mov    rdi,0x40c666
  407358:	add    QWORD PTR [rip+0xba50],0x1        # 412db0 <__bss_start@@Base+0xf40>
  407360:	call   4057f0 <UnityPrint@@Base>
  407365:	add    QWORD PTR [rip+0xba63],0x1        # 412dd0 <__bss_start@@Base+0xf60>
  40736d:	jmp    407251 <UnityAssertEqualStringLen@@Base+0x1a1>
  407372:	mov    QWORD PTR [rip+0xc077],rax        # 4133f0 <__bss_start@@Base+0x1580>
  407379:	mov    QWORD PTR [rip+0xc060],rsi        # 4133e0 <__bss_start@@Base+0x1570>
  407380:	jmp    407345 <UnityAssertEqualStringLen@@Base+0x295>
  407382:	mov    rdi,0x40c666
  407389:	add    QWORD PTR [rip+0xba4f],0x1        # 412de0 <__bss_start@@Base+0xf70>
  407391:	call   4057f0 <UnityPrint@@Base>
  407396:	add    QWORD PTR [rip+0xba62],0x1        # 412e00 <__bss_start@@Base+0xf90>
  40739e:	jmp    4072b5 <UnityAssertEqualStringLen@@Base+0x205>
  4073a3:	mov    QWORD PTR [rip+0xc03e],rbp        # 4133e8 <__bss_start@@Base+0x1578>
  4073aa:	jmp    407301 <UnityAssertEqualStringLen@@Base+0x251>
  4073af:	mov    QWORD PTR [rip+0xc02a],rsi        # 4133e0 <__bss_start@@Base+0x1570>
  4073b6:	jmp    4072f8 <UnityAssertEqualStringLen@@Base+0x248>
  4073bb:	mov    QWORD PTR [rip+0xc026],rbp        # 4133e8 <__bss_start@@Base+0x1578>
  4073c2:	jmp    407197 <UnityAssertEqualStringLen@@Base+0xe7>
  4073c7:	mov    QWORD PTR [rip+0xc022],r11        # 4133f0 <__bss_start@@Base+0x1580>
  4073ce:	mov    QWORD PTR [rip+0xc00b],rsi        # 4133e0 <__bss_start@@Base+0x1570>
  4073d5:	jmp    40718e <UnityAssertEqualStringLen@@Base+0xde>
  4073da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004073e0 <UnityAssertEqualStringArray@@Base>:
  4073e0:	push   r15
  4073e2:	push   r14
  4073e4:	push   r13
  4073e6:	push   r12
  4073e8:	push   rbp
  4073e9:	push   rbx
  4073ea:	sub    rsp,0x58
  4073ee:	mov    rbx,0x413c00
  4073f5:	add    QWORD PTR [rip+0xc043],0x1        # 413440 <__bss_start@@Base+0x15d0>
  4073fd:	cmp    QWORD PTR [rbx+0x40],0x0
  407402:	jne    407648 <UnityAssertEqualStringArray@@Base+0x268>
  407408:	add    QWORD PTR [rip+0xc038],0x1        # 413448 <__bss_start@@Base+0x15d8>
  407410:	cmp    QWORD PTR [rbx+0x48],0x0
  407415:	jne    407648 <UnityAssertEqualStringArray@@Base+0x268>
  40741b:	test   edx,edx
  40741d:	mov    QWORD PTR [rsp+0x40],r8
  407422:	mov    QWORD PTR [rsp+0x38],rcx
  407427:	mov    DWORD PTR [rsp+0x28],edx
  40742b:	mov    QWORD PTR [rsp+0x48],rsi
  407430:	mov    r13,rdi
  407433:	je     407747 <UnityAssertEqualStringArray@@Base+0x367>
  407439:	mov    r12,QWORD PTR [rsp+0x48]
  40743e:	mov    rcx,QWORD PTR [rsp+0x38]
  407443:	mov    rdx,QWORD PTR [rsp+0x40]
  407448:	add    QWORD PTR [rip+0xc008],0x1        # 413458 <__bss_start@@Base+0x15e8>
  407450:	mov    rsi,r12
  407453:	call   405b00 <UnityPrint@@Base+0x310>
  407458:	add    QWORD PTR [rip+0xc018],0x1        # 413478 <__bss_start@@Base+0x1608>
  407460:	cmp    eax,0x1
  407463:	je     407648 <UnityAssertEqualStringArray@@Base+0x268>
  407469:	mov    rax,QWORD PTR [rip+0xc018]        # 413488 <__bss_start@@Base+0x1618>
  407470:	mov    r15,QWORD PTR [rip+0xc041]        # 4134b8 <__bss_start@@Base+0x1648>
  407477:	xor    ebp,ebp
  407479:	mov    rsi,QWORD PTR [rip+0xc070]        # 4134f0 <__bss_start@@Base+0x1680>
  407480:	xor    edx,edx
  407482:	xor    r10d,r10d
  407485:	mov    r14,QWORD PTR [rip+0xbff4]        # 413480 <__bss_start@@Base+0x1610>
  40748c:	mov    QWORD PTR [rsp+0x20],rax
  407491:	mov    rax,QWORD PTR [rbx+0x40]
  407495:	mov    r9,QWORD PTR [rip+0xc004]        # 4134a0 <__bss_start@@Base+0x1630>
  40749c:	mov    r8,QWORD PTR [rip+0xbff5]        # 413498 <__bss_start@@Base+0x1628>
  4074a3:	sub    rsi,r15
  4074a6:	mov    BYTE PTR [rsp+0x2e],0x0
  4074ab:	mov    BYTE PTR [rsp+0x2f],0x0
  4074b0:	mov    QWORD PTR [rsp+0x30],rax
  4074b5:	mov    QWORD PTR [rsp+0x8],rsi
  4074ba:	xor    eax,eax
  4074bc:	nop    DWORD PTR [rax+0x0]
  4074c0:	mov    rsi,QWORD PTR [rsp+0x8]
  4074c5:	add    rsi,r15
  4074c8:	mov    QWORD PTR [rsp],rsi
  4074cc:	lea    rsi,[rbp*8+0x0]
  4074d4:	mov    QWORD PTR [rsp+0x18],rsi
  4074d9:	mov    rsi,QWORD PTR [r13+0x0]
  4074dd:	test   rsi,rsi
  4074e0:	je     4076c8 <UnityAssertEqualStringArray@@Base+0x2e8>
  4074e6:	mov    rdi,QWORD PTR [r12]
  4074ea:	add    r14,0x1
  4074ee:	mov    QWORD PTR [rsp+0x10],r12
  4074f3:	test   rdi,rdi
  4074f6:	je     407730 <UnityAssertEqualStringArray@@Base+0x350>
  4074fc:	add    QWORD PTR [rsp+0x20],0x1
  407502:	mov    rax,r8
  407505:	nop    DWORD PTR [rax]
  407508:	mov    edx,eax
  40750a:	mov    r11,rax
  40750d:	sub    edx,r8d
  407510:	movzx  ecx,BYTE PTR [rsi+rdx*1]
  407514:	test   cl,cl
  407516:	jne    407660 <UnityAssertEqualStringArray@@Base+0x280>
  40751c:	add    r9,0x1
  407520:	cmp    BYTE PTR [rdi+rdx*1],0x0
  407524:	je     407680 <UnityAssertEqualStringArray@@Base+0x2a0>
  40752a:	test   r10b,r10b
  40752d:	jne    40779b <UnityAssertEqualStringArray@@Base+0x3bb>
  407533:	cmp    BYTE PTR [rsp+0x2e],0x0
  407538:	mov    rax,QWORD PTR [rsp+0x20]
  40753d:	mov    QWORD PTR [rip+0xbf3c],r14        # 413480 <__bss_start@@Base+0x1610>
  407544:	mov    QWORD PTR [rip+0xbf55],r9        # 4134a0 <__bss_start@@Base+0x1630>
  40754b:	mov    QWORD PTR [rip+0xbf36],rax        # 413488 <__bss_start@@Base+0x1618>
  407552:	jne    4077df <UnityAssertEqualStringArray@@Base+0x3ff>
  407558:	add    QWORD PTR [rip+0xbf30],0x1        # 413490 <__bss_start@@Base+0x1620>
  407560:	mov    QWORD PTR [rbx+0x40],0x1
  407568:	mov    rdi,QWORD PTR [rsp+0x40]
  40756d:	add    QWORD PTR [rip+0xbf3b],0x1        # 4134b0 <__bss_start@@Base+0x1640>
  407575:	call   405aa0 <UnityPrint@@Base+0x2b0>
  40757a:	add    QWORD PTR [rip+0xbf3e],0x1        # 4134c0 <__bss_start@@Base+0x1650>
  407582:	cmp    DWORD PTR [rsp+0x28],0x1
  407587:	jbe    4075b5 <UnityAssertEqualStringArray@@Base+0x1d5>
  407589:	mov    rdi,0x40c640
  407590:	add    QWORD PTR [rip+0xbf30],0x1        # 4134c8 <__bss_start@@Base+0x1658>
  407598:	call   4057f0 <UnityPrint@@Base>
  40759d:	mov    rdi,rbp
  4075a0:	add    QWORD PTR [rip+0xbf28],0x1        # 4134d0 <__bss_start@@Base+0x1660>
  4075a8:	call   405400 <UnityPrintNumberUnsigned@@Base>
  4075ad:	add    QWORD PTR [rip+0xbf23],0x1        # 4134d8 <__bss_start@@Base+0x1668>
  4075b5:	mov    rax,QWORD PTR [rsp+0x10]
  4075ba:	mov    rdi,QWORD PTR [r13+0x0]
  4075be:	mov    rsi,QWORD PTR [rax]
  4075c1:	call   403230 <__fprintf_chk@plt+0x10>
  4075c6:	mov    rdi,QWORD PTR [rsp+0x38]
  4075cb:	add    QWORD PTR [rip+0xbf0d],0x1        # 4134e0 <__bss_start@@Base+0x1670>
  4075d3:	call   405930 <UnityPrint@@Base+0x140>
  4075d8:	lea    rdi,[rbx+0x50]
  4075dc:	mov    esi,0x1
  4075e1:	add    QWORD PTR [rip+0xbeff],0x1        # 4134e8 <__bss_start@@Base+0x1678>
  4075e9:	mov    QWORD PTR [rbx+0x40],0x1
  4075f1:	call   4031c0 <__longjmp_chk@plt>
  4075f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407600:	test   r10b,r10b
  407603:	jne    407858 <UnityAssertEqualStringArray@@Base+0x478>
  407609:	test   dl,dl
  40760b:	jne    407864 <UnityAssertEqualStringArray@@Base+0x484>
  407611:	test   al,al
  407613:	je     407621 <UnityAssertEqualStringArray@@Base+0x241>
  407615:	mov    rax,QWORD PTR [rsp+0x20]
  40761a:	mov    QWORD PTR [rip+0xbe67],rax        # 413488 <__bss_start@@Base+0x1618>
  407621:	cmp    BYTE PTR [rsp+0x2f],0x0
  407626:	je     40762f <UnityAssertEqualStringArray@@Base+0x24f>
  407628:	mov    QWORD PTR [rip+0xbe71],r9        # 4134a0 <__bss_start@@Base+0x1630>
  40762f:	cmp    BYTE PTR [rsp+0x2e],0x0
  407634:	mov    QWORD PTR [rip+0xbe7d],r15        # 4134b8 <__bss_start@@Base+0x1648>
  40763b:	je     407648 <UnityAssertEqualStringArray@@Base+0x268>
  40763d:	mov    rax,QWORD PTR [rsp]
  407641:	mov    QWORD PTR [rip+0xbea8],rax        # 4134f0 <__bss_start@@Base+0x1680>
  407648:	add    rsp,0x58
  40764c:	pop    rbx
  40764d:	pop    rbp
  40764e:	pop    r12
  407650:	pop    r13
  407652:	pop    r14
  407654:	pop    r15
  407656:	ret    
  407657:	nop    WORD PTR [rax+rax*1+0x0]
  407660:	add    rax,0x1
  407664:	cmp    cl,BYTE PTR [rdi+rdx*1]
  407667:	jne    4077a7 <UnityAssertEqualStringArray@@Base+0x3c7>
  40766d:	mov    r10d,0x1
  407673:	jmp    407508 <UnityAssertEqualStringArray@@Base+0x128>
  407678:	nop    DWORD PTR [rax+rax*1+0x0]
  407680:	mov    r8,rax
  407683:	mov    BYTE PTR [rsp+0x2f],0x1
  407688:	mov    eax,0x1
  40768d:	mov    edx,0x1
  407692:	cmp    QWORD PTR [rsp+0x30],0x0
  407698:	jne    4077f6 <UnityAssertEqualStringArray@@Base+0x416>
  40769e:	add    r15,0x1
  4076a2:	add    rbp,0x1
  4076a6:	add    r13,0x8
  4076aa:	add    r12,0x8
  4076ae:	cmp    DWORD PTR [rsp+0x28],ebp
  4076b2:	jbe    407600 <UnityAssertEqualStringArray@@Base+0x220>
  4076b8:	mov    BYTE PTR [rsp+0x2e],0x1
  4076bd:	jmp    4074c0 <UnityAssertEqualStringArray@@Base+0xe0>
  4076c2:	nop    WORD PTR [rax+rax*1+0x0]
  4076c8:	cmp    QWORD PTR [r12],0x0
  4076cd:	mov    QWORD PTR [rsp+0x10],r12
  4076d2:	je     407692 <UnityAssertEqualStringArray@@Base+0x2b2>
  4076d4:	test   r10b,r10b
  4076d7:	jne    407870 <UnityAssertEqualStringArray@@Base+0x490>
  4076dd:	test   dl,dl
  4076df:	jne    407735 <UnityAssertEqualStringArray@@Base+0x355>
  4076e1:	test   al,al
  4076e3:	je     4076f1 <UnityAssertEqualStringArray@@Base+0x311>
  4076e5:	mov    rax,QWORD PTR [rsp+0x20]
  4076ea:	mov    QWORD PTR [rip+0xbd97],rax        # 413488 <__bss_start@@Base+0x1618>
  4076f1:	cmp    BYTE PTR [rsp+0x2f],0x0
  4076f6:	je     4076ff <UnityAssertEqualStringArray@@Base+0x31f>
  4076f8:	mov    QWORD PTR [rip+0xbda1],r9        # 4134a0 <__bss_start@@Base+0x1630>
  4076ff:	cmp    BYTE PTR [rsp+0x2e],0x0
  407704:	je     407718 <UnityAssertEqualStringArray@@Base+0x338>
  407706:	mov    rax,QWORD PTR [rsp]
  40770a:	mov    QWORD PTR [rip+0xbda7],r15        # 4134b8 <__bss_start@@Base+0x1648>
  407711:	mov    QWORD PTR [rip+0xbdd8],rax        # 4134f0 <__bss_start@@Base+0x1680>
  407718:	mov    QWORD PTR [rbx+0x40],0x1
  407720:	add    QWORD PTR [rip+0xbd80],0x1        # 4134a8 <__bss_start@@Base+0x1638>
  407728:	jmp    407568 <UnityAssertEqualStringArray@@Base+0x188>
  40772d:	nop    DWORD PTR [rax]
  407730:	test   r10b,r10b
  407733:	jne    40773e <UnityAssertEqualStringArray@@Base+0x35e>
  407735:	mov    QWORD PTR [rip+0xbd44],r14        # 413480 <__bss_start@@Base+0x1610>
  40773c:	jmp    4076e1 <UnityAssertEqualStringArray@@Base+0x301>
  40773e:	mov    QWORD PTR [rip+0xbd53],r8        # 413498 <__bss_start@@Base+0x1628>
  407745:	jmp    407735 <UnityAssertEqualStringArray@@Base+0x355>
  407747:	mov    rdi,r8
  40774a:	add    QWORD PTR [rip+0xbcfe],0x1        # 413450 <__bss_start@@Base+0x15e0>
  407752:	call   405aa0 <UnityPrint@@Base+0x2b0>
  407757:	mov    rdi,0x40c5c0
  40775e:	add    QWORD PTR [rip+0xbcfa],0x1        # 413460 <__bss_start@@Base+0x15f0>
  407766:	call   4057f0 <UnityPrint@@Base>
  40776b:	mov    rdi,QWORD PTR [rsp+0x38]
  407770:	add    QWORD PTR [rip+0xbcf0],0x1        # 413468 <__bss_start@@Base+0x15f8>
  407778:	call   405930 <UnityPrint@@Base+0x140>
  40777d:	lea    rdi,[rbx+0x50]
  407781:	mov    esi,0x1
  407786:	add    QWORD PTR [rip+0xbce2],0x1        # 413470 <__bss_start@@Base+0x1600>
  40778e:	mov    QWORD PTR [rbx+0x40],0x1
  407796:	call   4031c0 <__longjmp_chk@plt>
  40779b:	mov    QWORD PTR [rip+0xbcf6],rax        # 413498 <__bss_start@@Base+0x1628>
  4077a2:	jmp    407533 <UnityAssertEqualStringArray@@Base+0x153>
  4077a7:	test   r10b,r10b
  4077aa:	je     4077b3 <UnityAssertEqualStringArray@@Base+0x3d3>
  4077ac:	mov    QWORD PTR [rip+0xbce5],r11        # 413498 <__bss_start@@Base+0x1628>
  4077b3:	cmp    BYTE PTR [rsp+0x2f],0x0
  4077b8:	mov    rax,QWORD PTR [rsp+0x20]
  4077bd:	mov    QWORD PTR [rip+0xbcbc],r14        # 413480 <__bss_start@@Base+0x1610>
  4077c4:	mov    QWORD PTR [rip+0xbcbd],rax        # 413488 <__bss_start@@Base+0x1618>
  4077cb:	je     4077d4 <UnityAssertEqualStringArray@@Base+0x3f4>
  4077cd:	mov    QWORD PTR [rip+0xbccc],r9        # 4134a0 <__bss_start@@Base+0x1630>
  4077d4:	cmp    BYTE PTR [rsp+0x2e],0x0
  4077d9:	je     407558 <UnityAssertEqualStringArray@@Base+0x178>
  4077df:	mov    rax,QWORD PTR [rsp]
  4077e3:	mov    QWORD PTR [rip+0xbcce],r15        # 4134b8 <__bss_start@@Base+0x1648>
  4077ea:	mov    QWORD PTR [rip+0xbcff],rax        # 4134f0 <__bss_start@@Base+0x1680>
  4077f1:	jmp    407558 <UnityAssertEqualStringArray@@Base+0x178>
  4077f6:	test   r10b,r10b
  4077f9:	je     407802 <UnityAssertEqualStringArray@@Base+0x422>
  4077fb:	mov    QWORD PTR [rip+0xbc96],r8        # 413498 <__bss_start@@Base+0x1628>
  407802:	test   dl,dl
  407804:	je     40780d <UnityAssertEqualStringArray@@Base+0x42d>
  407806:	mov    QWORD PTR [rip+0xbc73],r14        # 413480 <__bss_start@@Base+0x1610>
  40780d:	test   al,al
  40780f:	je     40781d <UnityAssertEqualStringArray@@Base+0x43d>
  407811:	mov    rax,QWORD PTR [rsp+0x20]
  407816:	mov    QWORD PTR [rip+0xbc6b],rax        # 413488 <__bss_start@@Base+0x1618>
  40781d:	cmp    BYTE PTR [rsp+0x2f],0x0
  407822:	je     40782b <UnityAssertEqualStringArray@@Base+0x44b>
  407824:	mov    QWORD PTR [rip+0xbc75],r9        # 4134a0 <__bss_start@@Base+0x1630>
  40782b:	cmp    BYTE PTR [rsp+0x2e],0x0
  407830:	je     407844 <UnityAssertEqualStringArray@@Base+0x464>
  407832:	mov    rax,QWORD PTR [rsp]
  407836:	mov    QWORD PTR [rip+0xbc7b],r15        # 4134b8 <__bss_start@@Base+0x1648>
  40783d:	mov    QWORD PTR [rip+0xbcac],rax        # 4134f0 <__bss_start@@Base+0x1680>
  407844:	mov    rax,QWORD PTR [rsp+0x48]
  407849:	add    rax,QWORD PTR [rsp+0x18]
  40784e:	mov    QWORD PTR [rsp+0x10],rax
  407853:	jmp    407568 <UnityAssertEqualStringArray@@Base+0x188>
  407858:	mov    QWORD PTR [rip+0xbc39],r8        # 413498 <__bss_start@@Base+0x1628>
  40785f:	jmp    407609 <UnityAssertEqualStringArray@@Base+0x229>
  407864:	mov    QWORD PTR [rip+0xbc15],r14        # 413480 <__bss_start@@Base+0x1610>
  40786b:	jmp    407611 <UnityAssertEqualStringArray@@Base+0x231>
  407870:	mov    QWORD PTR [rip+0xbc21],r8        # 413498 <__bss_start@@Base+0x1628>
  407877:	jmp    4076dd <UnityAssertEqualStringArray@@Base+0x2fd>
  40787c:	nop    DWORD PTR [rax+0x0]

0000000000407880 <UnityAssertEqualMemory@@Base>:
  407880:	push   r15
  407882:	push   r14
  407884:	push   r13
  407886:	push   r12
  407888:	push   rbp
  407889:	push   rbx
  40788a:	sub    rsp,0x18
  40788e:	mov    r12,0x413c00
  407895:	add    QWORD PTR [rip+0xbc63],0x1        # 413500 <__bss_start@@Base+0x1690>
  40789d:	cmp    QWORD PTR [r12+0x40],0x0
  4078a3:	jne    4079ac <UnityAssertEqualMemory@@Base+0x12c>
  4078a9:	add    QWORD PTR [rip+0xbc57],0x1        # 413508 <__bss_start@@Base+0x1698>
  4078b1:	cmp    QWORD PTR [r12+0x48],0x0
  4078b7:	jne    4079ac <UnityAssertEqualMemory@@Base+0x12c>
  4078bd:	test   ecx,ecx
  4078bf:	mov    r13,r8
  4078c2:	mov    r15d,ecx
  4078c5:	sete   r14b
  4078c9:	test   edx,edx
  4078cb:	mov    rbp,rsi
  4078ce:	sete   al
  4078d1:	mov    rbx,rdi
  4078d4:	or     r14b,al
  4078d7:	jne    407ae3 <UnityAssertEqualMemory@@Base+0x263>
  4078dd:	mov    DWORD PTR [rsp+0xc],edx
  4078e1:	mov    rcx,r13
  4078e4:	mov    rdx,r9
  4078e7:	add    QWORD PTR [rip+0xbc29],0x1        # 413518 <__bss_start@@Base+0x16a8>
  4078ef:	mov    QWORD PTR [rsp],r9
  4078f3:	call   405b00 <UnityPrint@@Base+0x310>
  4078f8:	add    QWORD PTR [rip+0xbc38],0x1        # 413538 <__bss_start@@Base+0x16c8>
  407900:	cmp    eax,0x1
  407903:	mov    r9,QWORD PTR [rsp]
  407907:	mov    r8d,DWORD PTR [rsp+0xc]
  40790c:	je     4079ac <UnityAssertEqualMemory@@Base+0x12c>
  407912:	lea    eax,[r15-0x1]
  407916:	mov    rdi,QWORD PTR [rip+0xbc8b]        # 4135a8 <__bss_start@@Base+0x1738>
  40791d:	sub    r8d,0x1
  407921:	add    QWORD PTR [rip+0xbc87],0x1        # 4135b0 <__bss_start@@Base+0x1740>
  407929:	mov    DWORD PTR [rsp],eax
  40792c:	mov    ecx,eax
  40792e:	mov    rax,QWORD PTR [rip+0xbc83]        # 4135b8 <__bss_start@@Base+0x1748>
  407935:	mov    rdx,QWORD PTR [rip+0xbc64]        # 4135a0 <__bss_start@@Base+0x1730>
  40793c:	lea    r10,[rax+0x1]
  407940:	sub    r10,rdi
  407943:	nop    DWORD PTR [rax+rax*1+0x0]
  407948:	movzx  eax,BYTE PTR [rbp+0x0]
  40794c:	add    rdx,0x1
  407950:	lea    r11,[r10+rdi*1]
  407954:	cmp    BYTE PTR [rbx],al
  407956:	jne    407b37 <UnityAssertEqualMemory@@Base+0x2b7>
  40795c:	mov    eax,r8d
  40795f:	jmp    407975 <UnityAssertEqualMemory@@Base+0xf5>
  407961:	nop    DWORD PTR [rax+0x0]
  407968:	movzx  esi,BYTE PTR [rbp+0x0]
  40796c:	add    rdx,0x1
  407970:	cmp    BYTE PTR [rbx],sil
  407973:	jne    4079bb <UnityAssertEqualMemory@@Base+0x13b>
  407975:	sub    eax,0x1
  407978:	add    rbx,0x1
  40797c:	add    rbp,0x1
  407980:	cmp    eax,0xffffffff
  407983:	jne    407968 <UnityAssertEqualMemory@@Base+0xe8>
  407985:	sub    ecx,0x1
  407988:	add    rdi,0x1
  40798c:	mov    r14d,0x1
  407992:	cmp    ecx,0xffffffff
  407995:	jne    407948 <UnityAssertEqualMemory@@Base+0xc8>
  407997:	mov    QWORD PTR [rip+0xbc02],rdx        # 4135a0 <__bss_start@@Base+0x1730>
  40799e:	mov    QWORD PTR [rip+0xbc03],rdi        # 4135a8 <__bss_start@@Base+0x1738>
  4079a5:	mov    QWORD PTR [rip+0xbc0c],r11        # 4135b8 <__bss_start@@Base+0x1748>
  4079ac:	add    rsp,0x18
  4079b0:	pop    rbx
  4079b1:	pop    rbp
  4079b2:	pop    r12
  4079b4:	pop    r13
  4079b6:	pop    r14
  4079b8:	pop    r15
  4079ba:	ret    
  4079bb:	test   r14b,r14b
  4079be:	mov    QWORD PTR [rip+0xbbdb],rdx        # 4135a0 <__bss_start@@Base+0x1730>
  4079c5:	jne    407ad7 <UnityAssertEqualMemory@@Base+0x257>
  4079cb:	mov    r14d,r8d
  4079ce:	mov    QWORD PTR [rip+0xbbe3],r11        # 4135b8 <__bss_start@@Base+0x1748>
  4079d5:	sub    r14d,eax
  4079d8:	mov    rdi,r9
  4079db:	mov    DWORD PTR [rsp+0xc],ecx
  4079df:	call   405aa0 <UnityPrint@@Base+0x2b0>
  4079e4:	mov    rdi,0x40c620
  4079eb:	add    QWORD PTR [rip+0xbb4d],0x1        # 413540 <__bss_start@@Base+0x16d0>
  4079f3:	call   4057f0 <UnityPrint@@Base>
  4079f8:	add    QWORD PTR [rip+0xbb48],0x1        # 413548 <__bss_start@@Base+0x16d8>
  407a00:	cmp    r15d,0x1
  407a04:	jbe    407a38 <UnityAssertEqualMemory@@Base+0x1b8>
  407a06:	mov    rdi,0x40c640
  407a0d:	add    QWORD PTR [rip+0xbb3b],0x1        # 413550 <__bss_start@@Base+0x16e0>
  407a15:	call   4057f0 <UnityPrint@@Base>
  407a1a:	mov    edi,DWORD PTR [rsp]
  407a1d:	mov    ecx,DWORD PTR [rsp+0xc]
  407a21:	add    QWORD PTR [rip+0xbb2f],0x1        # 413558 <__bss_start@@Base+0x16e8>
  407a29:	sub    edi,ecx
  407a2b:	call   405400 <UnityPrintNumberUnsigned@@Base>
  407a30:	add    QWORD PTR [rip+0xbb28],0x1        # 413560 <__bss_start@@Base+0x16f0>
  407a38:	mov    rdi,0x40c632
  407a3f:	call   4057f0 <UnityPrint@@Base>
  407a44:	mov    rdi,r14
  407a47:	add    QWORD PTR [rip+0xbb19],0x1        # 413568 <__bss_start@@Base+0x16f8>
  407a4f:	call   405400 <UnityPrintNumberUnsigned@@Base>
  407a54:	mov    rdi,0x40c658
  407a5b:	add    QWORD PTR [rip+0xbb0d],0x1        # 413570 <__bss_start@@Base+0x1700>
  407a63:	call   4057f0 <UnityPrint@@Base>
  407a68:	movzx  edi,BYTE PTR [rbx]
  407a6b:	mov    esi,0x41
  407a70:	add    QWORD PTR [rip+0xbb00],0x1        # 413578 <__bss_start@@Base+0x1708>
  407a78:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  407a7d:	mov    rdi,0x40c64f
  407a84:	add    QWORD PTR [rip+0xbaf4],0x1        # 413580 <__bss_start@@Base+0x1710>
  407a8c:	call   4057f0 <UnityPrint@@Base>
  407a91:	movzx  edi,BYTE PTR [rbp+0x0]
  407a95:	mov    esi,0x41
  407a9a:	add    QWORD PTR [rip+0xbae6],0x1        # 413588 <__bss_start@@Base+0x1718>
  407aa2:	call   4055f0 <UnityPrintNumberByStyle@@Base>
  407aa7:	mov    rdi,r13
  407aaa:	add    QWORD PTR [rip+0xbade],0x1        # 413590 <__bss_start@@Base+0x1720>
  407ab2:	call   405930 <UnityPrint@@Base+0x140>
  407ab7:	lea    rdi,[r12+0x50]
  407abc:	mov    esi,0x1
  407ac1:	add    QWORD PTR [rip+0xbacf],0x1        # 413598 <__bss_start@@Base+0x1728>
  407ac9:	mov    QWORD PTR [r12+0x40],0x1
  407ad2:	call   4031c0 <__longjmp_chk@plt>
  407ad7:	mov    QWORD PTR [rip+0xbaca],rdi        # 4135a8 <__bss_start@@Base+0x1738>
  407ade:	jmp    4079cb <UnityAssertEqualMemory@@Base+0x14b>
  407ae3:	mov    rdi,r9
  407ae6:	add    QWORD PTR [rip+0xba22],0x1        # 413510 <__bss_start@@Base+0x16a0>
  407aee:	call   405aa0 <UnityPrint@@Base+0x2b0>
  407af3:	mov    rdi,0x40c5c0
  407afa:	add    QWORD PTR [rip+0xba1e],0x1        # 413520 <__bss_start@@Base+0x16b0>
  407b02:	call   4057f0 <UnityPrint@@Base>
  407b07:	mov    rdi,r13
  407b0a:	add    QWORD PTR [rip+0xba16],0x1        # 413528 <__bss_start@@Base+0x16b8>
  407b12:	call   405930 <UnityPrint@@Base+0x140>
  407b17:	lea    rdi,[r12+0x50]
  407b1c:	mov    esi,0x1
  407b21:	add    QWORD PTR [rip+0xba07],0x1        # 413530 <__bss_start@@Base+0x16c0>
  407b29:	mov    QWORD PTR [r12+0x40],0x1
  407b32:	call   4031c0 <__longjmp_chk@plt>
  407b37:	test   r14b,r14b
  407b3a:	mov    QWORD PTR [rip+0xba5f],rdx        # 4135a0 <__bss_start@@Base+0x1730>
  407b41:	je     407b4a <UnityAssertEqualMemory@@Base+0x2ca>
  407b43:	mov    QWORD PTR [rip+0xba5e],rdi        # 4135a8 <__bss_start@@Base+0x1738>
  407b4a:	mov    QWORD PTR [rip+0xba67],r11        # 4135b8 <__bss_start@@Base+0x1748>
  407b51:	xor    r14d,r14d
  407b54:	jmp    4079d8 <UnityAssertEqualMemory@@Base+0x158>
  407b59:	nop    DWORD PTR [rax+0x0]

0000000000407b60 <UnityFail@@Base>:
  407b60:	push   r12
  407b62:	push   rbp
  407b63:	push   rbx
  407b64:	mov    rbx,0x413c00
  407b6b:	add    QWORD PTR [rip+0xba4d],0x1        # 4135c0 <__bss_start@@Base+0x1750>
  407b73:	cmp    QWORD PTR [rbx+0x40],0x0
  407b78:	jne    407b89 <UnityFail@@Base+0x29>
  407b7a:	add    QWORD PTR [rip+0xba46],0x1        # 4135c8 <__bss_start@@Base+0x1758>
  407b82:	cmp    QWORD PTR [rbx+0x48],0x0
  407b87:	je     407b8e <UnityFail@@Base+0x2e>
  407b89:	pop    rbx
  407b8a:	pop    rbp
  407b8b:	pop    r12
  407b8d:	ret    
  407b8e:	mov    rbp,rdi
  407b91:	mov    rdi,QWORD PTR [rbx]
  407b94:	add    QWORD PTR [rip+0xba34],0x1        # 4135d0 <__bss_start@@Base+0x1760>
  407b9c:	call   405a00 <UnityPrint@@Base+0x210>
  407ba1:	add    QWORD PTR [rip+0xba2f],0x1        # 4135d8 <__bss_start@@Base+0x1768>
  407ba9:	call   405ce0 <UnityPrintFail@@Base>
  407bae:	add    QWORD PTR [rip+0xba2a],0x1        # 4135e0 <__bss_start@@Base+0x1770>
  407bb6:	test   rbp,rbp
  407bb9:	je     407c76 <UnityFail@@Base+0x116>
  407bbf:	mov    r12,QWORD PTR [rip+0x841a]        # 40ffe0 <stdout@GLIBC_2.2.5>
  407bc6:	mov    edi,0x3a
  407bcb:	add    QWORD PTR [rip+0xba15],0x1        # 4135e8 <__bss_start@@Base+0x1778>
  407bd3:	mov    rsi,QWORD PTR [r12]
  407bd7:	call   403140 <putc@plt>
  407bdc:	add    QWORD PTR [rip+0xba0c],0x1        # 4135f0 <__bss_start@@Base+0x1780>
  407be4:	cmp    QWORD PTR [rbx+0x10],0x0
  407be9:	je     407c58 <UnityFail@@Base+0xf8>
  407beb:	mov    rdi,0x40c450
  407bf2:	add    QWORD PTR [rip+0xb9fe],0x1        # 4135f8 <__bss_start@@Base+0x1788>
  407bfa:	call   4057f0 <UnityPrint@@Base>
  407bff:	mov    rdi,QWORD PTR [rbx+0x10]
  407c03:	add    QWORD PTR [rip+0xb9f5],0x1        # 413600 <__bss_start@@Base+0x1790>
  407c0b:	call   4057f0 <UnityPrint@@Base>
  407c10:	add    QWORD PTR [rip+0xb9f0],0x1        # 413608 <__bss_start@@Base+0x1798>
  407c18:	cmp    QWORD PTR [rbx+0x18],0x0
  407c1d:	je     407c4c <UnityFail@@Base+0xec>
  407c1f:	mov    rdi,0x40c440
  407c26:	add    QWORD PTR [rip+0xb9e2],0x1        # 413610 <__bss_start@@Base+0x17a0>
  407c2e:	call   4057f0 <UnityPrint@@Base>
  407c33:	mov    rdi,QWORD PTR [rbx+0x18]
  407c37:	add    QWORD PTR [rip+0xb9d9],0x1        # 413618 <__bss_start@@Base+0x17a8>
  407c3f:	call   4057f0 <UnityPrint@@Base>
  407c44:	add    QWORD PTR [rip+0xb9d4],0x1        # 413620 <__bss_start@@Base+0x17b0>
  407c4c:	mov    rdi,0x40c663
  407c53:	call   4057f0 <UnityPrint@@Base>
  407c58:	cmp    BYTE PTR [rbp+0x0],0x20
  407c5c:	jne    407c8c <UnityFail@@Base+0x12c>
  407c5e:	add    QWORD PTR [rip+0xb9ca],0x1        # 413630 <__bss_start@@Base+0x17c0>
  407c66:	mov    rdi,rbp
  407c69:	call   4057f0 <UnityPrint@@Base>
  407c6e:	add    QWORD PTR [rip+0xb9ca],0x1        # 413640 <__bss_start@@Base+0x17d0>
  407c76:	lea    rdi,[rbx+0x50]
  407c7a:	mov    esi,0x1
  407c7f:	mov    QWORD PTR [rbx+0x40],0x1
  407c87:	call   4031c0 <__longjmp_chk@plt>
  407c8c:	mov    rsi,QWORD PTR [r12]
  407c90:	mov    edi,0x20
  407c95:	add    QWORD PTR [rip+0xb98b],0x1        # 413628 <__bss_start@@Base+0x17b8>
  407c9d:	call   403140 <putc@plt>
  407ca2:	add    QWORD PTR [rip+0xb98e],0x1        # 413638 <__bss_start@@Base+0x17c8>
  407caa:	jmp    407c66 <UnityFail@@Base+0x106>
  407cac:	nop    DWORD PTR [rax+0x0]

0000000000407cb0 <UnityIgnore@@Base>:
  407cb0:	push   r12
  407cb2:	push   rbp
  407cb3:	push   rbx
  407cb4:	mov    rbx,0x413c00
  407cbb:	add    QWORD PTR [rip+0xb99d],0x1        # 413660 <__bss_start@@Base+0x17f0>
  407cc3:	cmp    QWORD PTR [rbx+0x40],0x0
  407cc8:	jne    407cd9 <UnityIgnore@@Base+0x29>
  407cca:	add    QWORD PTR [rip+0xb996],0x1        # 413668 <__bss_start@@Base+0x17f8>
  407cd2:	cmp    QWORD PTR [rbx+0x48],0x0
  407cd7:	je     407cde <UnityIgnore@@Base+0x2e>
  407cd9:	pop    rbx
  407cda:	pop    rbp
  407cdb:	pop    r12
  407cdd:	ret    
  407cde:	mov    rbp,rdi
  407ce1:	mov    rdi,QWORD PTR [rbx]
  407ce4:	add    QWORD PTR [rip+0xb984],0x1        # 413670 <__bss_start@@Base+0x1800>
  407cec:	call   405a00 <UnityPrint@@Base+0x210>
  407cf1:	mov    rdi,0x40c66b
  407cf8:	add    QWORD PTR [rip+0xb978],0x1        # 413678 <__bss_start@@Base+0x1808>
  407d00:	call   4057f0 <UnityPrint@@Base>
  407d05:	add    QWORD PTR [rip+0xb973],0x1        # 413680 <__bss_start@@Base+0x1810>
  407d0d:	test   rbp,rbp
  407d10:	je     407d5d <UnityIgnore@@Base+0xad>
  407d12:	mov    r12,QWORD PTR [rip+0x82c7]        # 40ffe0 <stdout@GLIBC_2.2.5>
  407d19:	mov    edi,0x3a
  407d1e:	add    QWORD PTR [rip+0xb962],0x1        # 413688 <__bss_start@@Base+0x1818>
  407d26:	mov    rsi,QWORD PTR [r12]
  407d2a:	call   403140 <putc@plt>
  407d2f:	mov    rsi,QWORD PTR [r12]
  407d33:	mov    edi,0x20
  407d38:	add    QWORD PTR [rip+0xb950],0x1        # 413690 <__bss_start@@Base+0x1820>
  407d40:	call   403140 <putc@plt>
  407d45:	mov    rdi,rbp
  407d48:	add    QWORD PTR [rip+0xb948],0x1        # 413698 <__bss_start@@Base+0x1828>
  407d50:	call   4057f0 <UnityPrint@@Base>
  407d55:	add    QWORD PTR [rip+0xb943],0x1        # 4136a0 <__bss_start@@Base+0x1830>
  407d5d:	lea    rdi,[rbx+0x50]
  407d61:	mov    esi,0x1
  407d66:	mov    QWORD PTR [rbx+0x48],0x1
  407d6e:	call   4031c0 <__longjmp_chk@plt>
  407d73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407d7e:	xchg   ax,ax

0000000000407d80 <setUp@@Base>:
  407d80:	add    QWORD PTR [rip+0xb920],0x1        # 4136a8 <__bss_start@@Base+0x1838>
  407d88:	ret    
  407d89:	nop    DWORD PTR [rax+0x0]

0000000000407d90 <tearDown@@Base>:
  407d90:	add    QWORD PTR [rip+0xb918],0x1        # 4136b0 <__bss_start@@Base+0x1840>
  407d98:	ret    
  407d99:	nop    DWORD PTR [rax+0x0]

0000000000407da0 <UnityDefaultTestRun@@Base>:
  407da0:	sub    rsp,0x18
  407da4:	mov    rax,0x413c00
  407dab:	movsxd rdx,edx
  407dae:	mov    QWORD PTR [rsp+0x8],rdi
  407db3:	add    QWORD PTR [rip+0xb905],0x1        # 4136c0 <__bss_start@@Base+0x1850>
  407dbb:	lea    rdi,[rax+0x50]
  407dbf:	mov    QWORD PTR [rax+0x8],rsi
  407dc3:	mov    QWORD PTR [rax+0x20],rdx
  407dc7:	add    QWORD PTR [rax+0x28],0x1
  407dcc:	mov    QWORD PTR [rax+0x10],0x0
  407dd4:	mov    QWORD PTR [rax+0x18],0x0
  407ddc:	call   403130 <_setjmp@plt>
  407de1:	add    QWORD PTR [rip+0xb8df],0x1        # 4136c8 <__bss_start@@Base+0x1858>
  407de9:	test   eax,eax
  407deb:	je     407e38 <UnityDefaultTestRun@@Base+0x98>
  407ded:	mov    rax,0x413c00
  407df4:	lea    rdi,[rax+0x50]
  407df8:	call   403130 <_setjmp@plt>
  407dfd:	add    QWORD PTR [rip+0xb8e3],0x1        # 4136e8 <__bss_start@@Base+0x1878>
  407e05:	test   eax,eax
  407e07:	jne    407e1f <UnityDefaultTestRun@@Base+0x7f>
  407e09:	mov    rax,0x413c00
  407e10:	add    QWORD PTR [rip+0xb8d8],0x1        # 4136f0 <__bss_start@@Base+0x1880>
  407e18:	cmp    QWORD PTR [rax+0x48],0x0
  407e1d:	je     407e60 <UnityDefaultTestRun@@Base+0xc0>
  407e1f:	call   405d40 <UnityConcludeTest@@Base>
  407e24:	add    QWORD PTR [rip+0xb8dc],0x1        # 413708 <__bss_start@@Base+0x1898>
  407e2c:	add    rsp,0x18
  407e30:	ret    
  407e31:	nop    DWORD PTR [rax+0x0]
  407e38:	add    QWORD PTR [rip+0xb890],0x1        # 4136d0 <__bss_start@@Base+0x1860>
  407e40:	call   407d80 <setUp@@Base>
  407e45:	add    QWORD PTR [rip+0xb88b],0x1        # 4136d8 <__bss_start@@Base+0x1868>
  407e4d:	mov    rax,QWORD PTR [rsp+0x8]
  407e52:	call   rax
  407e54:	add    QWORD PTR [rip+0xb884],0x1        # 4136e0 <__bss_start@@Base+0x1870>
  407e5c:	jmp    407ded <UnityDefaultTestRun@@Base+0x4d>
  407e5e:	xchg   ax,ax
  407e60:	add    QWORD PTR [rip+0xb890],0x1        # 4136f8 <__bss_start@@Base+0x1888>
  407e68:	call   407d90 <tearDown@@Base>
  407e6d:	add    QWORD PTR [rip+0xb88b],0x1        # 413700 <__bss_start@@Base+0x1890>
  407e75:	jmp    407e1f <UnityDefaultTestRun@@Base+0x7f>
  407e77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407e80 <UnityBegin@@Base>:
  407e80:	mov    rax,0x413c00
  407e87:	add    QWORD PTR [rip+0xb881],0x1        # 413710 <__bss_start@@Base+0x18a0>
  407e8f:	mov    QWORD PTR [rax],rdi
  407e92:	mov    QWORD PTR [rax+0x8],0x0
  407e9a:	mov    QWORD PTR [rax+0x20],0x0
  407ea2:	mov    QWORD PTR [rax+0x28],0x0
  407eaa:	mov    QWORD PTR [rax+0x30],0x0
  407eb2:	mov    QWORD PTR [rax+0x38],0x0
  407eba:	mov    QWORD PTR [rax+0x40],0x0
  407ec2:	mov    QWORD PTR [rax+0x48],0x0
  407eca:	mov    QWORD PTR [rax+0x10],0x0
  407ed2:	mov    QWORD PTR [rax+0x18],0x0
  407eda:	ret    
  407edb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407ee0 <UnityEnd@@Base>:
  407ee0:	push   rbp
  407ee1:	push   rbx
  407ee2:	mov    edi,0xa
  407ee7:	sub    rsp,0x8
  407eeb:	mov    rbp,QWORD PTR [rip+0x80ee]        # 40ffe0 <stdout@GLIBC_2.2.5>
  407ef2:	add    QWORD PTR [rip+0xb826],0x1        # 413720 <__bss_start@@Base+0x18b0>
  407efa:	mov    rsi,QWORD PTR [rbp+0x0]
  407efe:	call   403140 <putc@plt>
  407f03:	mov    rdi,0x40c490
  407f0a:	add    QWORD PTR [rip+0xb816],0x1        # 413728 <__bss_start@@Base+0x18b8>
  407f12:	call   4057f0 <UnityPrint@@Base>
  407f17:	mov    rsi,QWORD PTR [rbp+0x0]
  407f1b:	mov    edi,0xa
  407f20:	add    QWORD PTR [rip+0xb808],0x1        # 413730 <__bss_start@@Base+0x18c0>
  407f28:	call   403140 <putc@plt>
  407f2d:	mov    rbx,0x413c00
  407f34:	add    QWORD PTR [rip+0xb7fc],0x1        # 413738 <__bss_start@@Base+0x18c8>
  407f3c:	mov    rdi,QWORD PTR [rbx+0x28]
  407f40:	call   4052b0 <UnityPrintNumber@@Base>
  407f45:	mov    rdi,0x40c480
  407f4c:	add    QWORD PTR [rip+0xb7ec],0x1        # 413740 <__bss_start@@Base+0x18d0>
  407f54:	call   4057f0 <UnityPrint@@Base>
  407f59:	mov    rdi,QWORD PTR [rbx+0x30]
  407f5d:	add    QWORD PTR [rip+0xb7e3],0x1        # 413748 <__bss_start@@Base+0x18d8>
  407f65:	call   4052b0 <UnityPrintNumber@@Base>
  407f6a:	mov    rdi,0x40c470
  407f71:	add    QWORD PTR [rip+0xb7d7],0x1        # 413750 <__bss_start@@Base+0x18e0>
  407f79:	call   4057f0 <UnityPrint@@Base>
  407f7e:	mov    rdi,QWORD PTR [rbx+0x38]
  407f82:	add    QWORD PTR [rip+0xb7ce],0x1        # 413758 <__bss_start@@Base+0x18e8>
  407f8a:	call   4052b0 <UnityPrintNumber@@Base>
  407f8f:	mov    rdi,0x40c460
  407f96:	add    QWORD PTR [rip+0xb7c2],0x1        # 413760 <__bss_start@@Base+0x18f0>
  407f9e:	call   4057f0 <UnityPrint@@Base>
  407fa3:	mov    rsi,QWORD PTR [rbp+0x0]
  407fa7:	mov    edi,0xa
  407fac:	add    QWORD PTR [rip+0xb7b4],0x1        # 413768 <__bss_start@@Base+0x18f8>
  407fb4:	call   403140 <putc@plt>
  407fb9:	cmp    QWORD PTR [rbx+0x30],0x0
  407fbe:	je     408000 <UnityEnd@@Base+0x120>
  407fc0:	add    QWORD PTR [rip+0xb7b0],0x1        # 413778 <__bss_start@@Base+0x1908>
  407fc8:	call   405ce0 <UnityPrintFail@@Base>
  407fcd:	add    QWORD PTR [rip+0xb7b3],0x1        # 413788 <__bss_start@@Base+0x1918>
  407fd5:	mov    rsi,QWORD PTR [rbp+0x0]
  407fd9:	mov    edi,0xa
  407fde:	call   403140 <putc@plt>
  407fe3:	mov    rax,QWORD PTR [rbx+0x30]
  407fe7:	add    QWORD PTR [rip+0xb7a1],0x1        # 413790 <__bss_start@@Base+0x1920>
  407fef:	add    rsp,0x8
  407ff3:	pop    rbx
  407ff4:	pop    rbp
  407ff5:	ret    
  407ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408000:	add    QWORD PTR [rip+0xb768],0x1        # 413770 <__bss_start@@Base+0x1900>
  408008:	call   405d10 <UnityPrintOk@@Base>
  40800d:	add    QWORD PTR [rip+0xb76b],0x1        # 413780 <__bss_start@@Base+0x1910>
  408015:	jmp    407fd5 <UnityEnd@@Base+0xf5>
  408017:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408020 <init_token_int_type@@Base>:
  408020:	add    QWORD PTR [rip+0xb778],0x1        # 4137a0 <__bss_start@@Base+0x1930>
  408028:	mov    DWORD PTR [rdi],0x0
  40802e:	ret    
  40802f:	nop

0000000000408030 <init_token_int_value@@Base>:
  408030:	add    QWORD PTR [rip+0xb770],0x1        # 4137a8 <__bss_start@@Base+0x1938>
  408038:	mov    DWORD PTR [rdi],0x1
  40803e:	mov    DWORD PTR [rdi+0x4],esi
  408041:	ret    
  408042:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40804d:	nop    DWORD PTR [rax]

0000000000408050 <init_token_function@@Base>:
  408050:	add    QWORD PTR [rip+0xb758],0x1        # 4137b0 <__bss_start@@Base+0x1940>
  408058:	mov    DWORD PTR [rdi],0x2
  40805e:	mov    QWORD PTR [rdi+0x8],rsi
  408062:	ret    
  408063:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40806e:	xchg   ax,ax

0000000000408070 <init_token_opar@@Base>:
  408070:	add    QWORD PTR [rip+0xb740],0x1        # 4137b8 <__bss_start@@Base+0x1948>
  408078:	mov    DWORD PTR [rdi],0x3
  40807e:	ret    
  40807f:	nop

0000000000408080 <init_token_cpar@@Base>:
  408080:	add    QWORD PTR [rip+0xb738],0x1        # 4137c0 <__bss_start@@Base+0x1950>
  408088:	mov    DWORD PTR [rdi],0x4
  40808e:	ret    
  40808f:	nop

0000000000408090 <init_token_obra@@Base>:
  408090:	add    QWORD PTR [rip+0xb730],0x1        # 4137c8 <__bss_start@@Base+0x1958>
  408098:	mov    DWORD PTR [rdi],0x5
  40809e:	ret    
  40809f:	nop

00000000004080a0 <init_token_cbra@@Base>:
  4080a0:	add    QWORD PTR [rip+0xb728],0x1        # 4137d0 <__bss_start@@Base+0x1960>
  4080a8:	mov    DWORD PTR [rdi],0x6
  4080ae:	ret    
  4080af:	nop

00000000004080b0 <init_token_return@@Base>:
  4080b0:	add    QWORD PTR [rip+0xb720],0x1        # 4137d8 <__bss_start@@Base+0x1968>
  4080b8:	mov    DWORD PTR [rdi],0x7
  4080be:	ret    
  4080bf:	nop

00000000004080c0 <init_token_semicolon@@Base>:
  4080c0:	add    QWORD PTR [rip+0xb718],0x1        # 4137e0 <__bss_start@@Base+0x1970>
  4080c8:	mov    DWORD PTR [rdi],0x8
  4080ce:	ret    
  4080cf:	nop

00000000004080d0 <init_token_eof@@Base>:
  4080d0:	add    QWORD PTR [rip+0xb710],0x1        # 4137e8 <__bss_start@@Base+0x1978>
  4080d8:	mov    DWORD PTR [rdi],0x9
  4080de:	ret    
  4080df:	nop

00000000004080e0 <init_token_if@@Base>:
  4080e0:	add    QWORD PTR [rip+0xb708],0x1        # 4137f0 <__bss_start@@Base+0x1980>
  4080e8:	mov    DWORD PTR [rdi],0xa
  4080ee:	ret    
  4080ef:	nop

00000000004080f0 <init_token_else@@Base>:
  4080f0:	add    QWORD PTR [rip+0xb700],0x1        # 4137f8 <__bss_start@@Base+0x1988>
  4080f8:	mov    DWORD PTR [rdi],0xb
  4080fe:	ret    
  4080ff:	nop

0000000000408100 <init_token_boolean_op@@Base>:
  408100:	add    QWORD PTR [rip+0xb6f8],0x1        # 413800 <__bss_start@@Base+0x1990>
  408108:	mov    DWORD PTR [rdi],0xc
  40810e:	mov    QWORD PTR [rdi+0x8],rsi
  408112:	ret    
  408113:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40811e:	xchg   ax,ax

0000000000408120 <free_token_int_type@@Base>:
  408120:	add    QWORD PTR [rip+0xb6e0],0x1        # 413808 <__bss_start@@Base+0x1998>
  408128:	jmp    403040 <free@plt>
  40812d:	nop    DWORD PTR [rax]

0000000000408130 <free_token_int_value@@Base>:
  408130:	add    QWORD PTR [rip+0xb6d8],0x1        # 413810 <__bss_start@@Base+0x19a0>
  408138:	jmp    403040 <free@plt>
  40813d:	nop    DWORD PTR [rax]

0000000000408140 <free_token_function@@Base>:
  408140:	add    QWORD PTR [rip+0xb6d0],0x1        # 413818 <__bss_start@@Base+0x19a8>
  408148:	jmp    403040 <free@plt>
  40814d:	nop    DWORD PTR [rax]

0000000000408150 <free_token_opar@@Base>:
  408150:	add    QWORD PTR [rip+0xb6c8],0x1        # 413820 <__bss_start@@Base+0x19b0>
  408158:	jmp    403040 <free@plt>
  40815d:	nop    DWORD PTR [rax]

0000000000408160 <free_token_cpar@@Base>:
  408160:	add    QWORD PTR [rip+0xb6c0],0x1        # 413828 <__bss_start@@Base+0x19b8>
  408168:	jmp    403040 <free@plt>
  40816d:	nop    DWORD PTR [rax]

0000000000408170 <free_token_obra@@Base>:
  408170:	add    QWORD PTR [rip+0xb6b8],0x1        # 413830 <__bss_start@@Base+0x19c0>
  408178:	jmp    403040 <free@plt>
  40817d:	nop    DWORD PTR [rax]

0000000000408180 <free_token_cbra@@Base>:
  408180:	add    QWORD PTR [rip+0xb6b0],0x1        # 413838 <__bss_start@@Base+0x19c8>
  408188:	jmp    403040 <free@plt>
  40818d:	nop    DWORD PTR [rax]

0000000000408190 <free_token_return@@Base>:
  408190:	add    QWORD PTR [rip+0xb6a8],0x1        # 413840 <__bss_start@@Base+0x19d0>
  408198:	jmp    403040 <free@plt>
  40819d:	nop    DWORD PTR [rax]

00000000004081a0 <free_token_semicolon@@Base>:
  4081a0:	add    QWORD PTR [rip+0xb6a0],0x1        # 413848 <__bss_start@@Base+0x19d8>
  4081a8:	jmp    403040 <free@plt>
  4081ad:	nop    DWORD PTR [rax]

00000000004081b0 <free_token_eof@@Base>:
  4081b0:	add    QWORD PTR [rip+0xb698],0x1        # 413850 <__bss_start@@Base+0x19e0>
  4081b8:	jmp    403040 <free@plt>
  4081bd:	nop    DWORD PTR [rax]

00000000004081c0 <free_token_if@@Base>:
  4081c0:	add    QWORD PTR [rip+0xb690],0x1        # 413858 <__bss_start@@Base+0x19e8>
  4081c8:	jmp    403040 <free@plt>
  4081cd:	nop    DWORD PTR [rax]

00000000004081d0 <free_token_else@@Base>:
  4081d0:	add    QWORD PTR [rip+0xb688],0x1        # 413860 <__bss_start@@Base+0x19f0>
  4081d8:	jmp    403040 <free@plt>
  4081dd:	nop    DWORD PTR [rax]

00000000004081e0 <free_token_boolean_op@@Base>:
  4081e0:	push   rbx
  4081e1:	mov    rbx,rdi
  4081e4:	mov    rdi,QWORD PTR [rdi+0x8]
  4081e8:	add    QWORD PTR [rip+0xb680],0x1        # 413870 <__bss_start@@Base+0x1a00>
  4081f0:	test   rdi,rdi
  4081f3:	je     408202 <free_token_boolean_op@@Base+0x22>
  4081f5:	call   403040 <free@plt>
  4081fa:	add    QWORD PTR [rip+0xb676],0x1        # 413878 <__bss_start@@Base+0x1a08>
  408202:	mov    rdi,rbx
  408205:	pop    rbx
  408206:	jmp    403040 <free@plt>
  40820b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408210 <init_lexer@@Base>:
  408210:	add    QWORD PTR [rip+0xb668],0x1        # 413880 <__bss_start@@Base+0x1a10>
  408218:	mov    QWORD PTR [rdi],rsi
  40821b:	mov    QWORD PTR [rdi+0x8],0x0
  408223:	mov    QWORD PTR [rdi+0x10],0x0
  40822b:	ret    
  40822c:	nop    DWORD PTR [rax+0x0]

0000000000408230 <free_stack_base@@Base>:
  408230:	add    QWORD PTR [rip+0xb670],0x1        # 4138a8 <__bss_start@@Base+0x1a38>
  408238:	jmp    403040 <free@plt>
  40823d:	nop    DWORD PTR [rax]

0000000000408240 <destroy_lexer@@Base>:
  408240:	mov    rdi,QWORD PTR [rdi+0x8]
  408244:	add    QWORD PTR [rip+0xb644],0x1        # 413890 <__bss_start@@Base+0x1a20>
  40824c:	test   rdi,rdi
  40824f:	je     40826e <destroy_lexer@@Base+0x2e>
  408251:	sub    rsp,0x8
  408255:	add    QWORD PTR [rip+0xb63b],0x1        # 413898 <__bss_start@@Base+0x1a28>
  40825d:	call   408230 <free_stack_base@@Base>
  408262:	add    QWORD PTR [rip+0xb636],0x1        # 4138a0 <__bss_start@@Base+0x1a30>
  40826a:	add    rsp,0x8
  40826e:	repz ret 

0000000000408270 <push_back@@Base>:
  408270:	push   rbp
  408271:	push   rbx
  408272:	mov    rbx,rdi
  408275:	mov    edi,0x10
  40827a:	mov    rbp,rsi
  40827d:	sub    rsp,0x8
  408281:	add    QWORD PTR [rip+0xb627],0x1        # 4138b0 <__bss_start@@Base+0x1a40>
  408289:	call   403180 <malloc@plt>
  40828e:	mov    rdx,QWORD PTR [rbx+0x8]
  408292:	mov    QWORD PTR [rax+0x8],rbp
  408296:	mov    QWORD PTR [rbx+0x8],rax
  40829a:	mov    QWORD PTR [rax],rdx
  40829d:	add    rsp,0x8
  4082a1:	pop    rbx
  4082a2:	pop    rbp
  4082a3:	ret    
  4082a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4082af:	nop

00000000004082b0 <get_char@@Base>:
  4082b0:	mov    rax,QWORD PTR [rdi+0x10]
  4082b4:	mov    rdx,QWORD PTR [rdi]
  4082b7:	add    QWORD PTR [rip+0xb5f9],0x1        # 4138b8 <__bss_start@@Base+0x1a48>
  4082bf:	lea    rcx,[rax+0x1]
  4082c3:	mov    QWORD PTR [rdi+0x10],rcx
  4082c7:	movzx  eax,BYTE PTR [rdx+rax*1]
  4082cb:	ret    
  4082cc:	nop    DWORD PTR [rax+0x0]

00000000004082d0 <push_back_chars@@Base>:
  4082d0:	mov    rax,QWORD PTR [rdi+0x10]
  4082d4:	cmp    rax,rsi
  4082d7:	jb     4082e9 <push_back_chars@@Base+0x19>
  4082d9:	sub    rax,rsi
  4082dc:	add    QWORD PTR [rip+0xb5dc],0x1        # 4138c0 <__bss_start@@Base+0x1a50>
  4082e4:	mov    QWORD PTR [rdi+0x10],rax
  4082e8:	ret    
  4082e9:	sub    rsp,0x8
  4082ed:	mov    rax,QWORD PTR [rip+0x7d04]        # 40fff8 <stderr@GLIBC_2.2.5>
  4082f4:	lea    rdi,[rip+0x449d]        # 40c798 <UnityStrOk@@Base+0x11c>
  4082fb:	mov    edx,0x20
  408300:	mov    esi,0x1
  408305:	add    QWORD PTR [rip+0xb5bb],0x1        # 4138c8 <__bss_start@@Base+0x1a58>
  40830d:	mov    rcx,QWORD PTR [rax]
  408310:	call   403210 <fwrite@plt>
  408315:	mov    edi,0x1
  40831a:	add    QWORD PTR [rip+0xb5ae],0x1        # 4138d0 <__bss_start@@Base+0x1a60>
  408322:	call   403200 <exit@plt>
  408327:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408330 <push_back_one_char@@Base>:
  408330:	sub    rsp,0x8
  408334:	mov    esi,0x1
  408339:	add    QWORD PTR [rip+0xb59f],0x1        # 4138e0 <__bss_start@@Base+0x1a70>
  408341:	call   4082d0 <push_back_chars@@Base>
  408346:	add    QWORD PTR [rip+0xb59a],0x1        # 4138e8 <__bss_start@@Base+0x1a78>
  40834e:	add    rsp,0x8
  408352:	ret    
  408353:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40835e:	xchg   ax,ax

0000000000408360 <next@@Base>:
  408360:	push   r13
  408362:	push   r12
  408364:	push   rbp
  408365:	push   rbx
  408366:	mov    rbp,rdi
  408369:	sub    rsp,0x218
  408370:	mov    rdi,QWORD PTR [rdi+0x8]
  408374:	mov    rax,QWORD PTR fs:0x28
  40837d:	mov    QWORD PTR [rsp+0x208],rax
  408385:	xor    eax,eax
  408387:	test   rdi,rdi
  40838a:	je     4083e0 <next@@Base+0x80>
  40838c:	mov    rax,QWORD PTR [rdi]
  40838f:	mov    rbx,QWORD PTR [rdi+0x8]
  408393:	add    QWORD PTR [rip+0xb565],0x1        # 413900 <__bss_start@@Base+0x1a90>
  40839b:	mov    QWORD PTR [rbp+0x8],rax
  40839f:	mov    QWORD PTR [rdi+0x8],0x0
  4083a7:	call   408230 <free_stack_base@@Base>
  4083ac:	add    QWORD PTR [rip+0xb55c],0x1        # 413910 <__bss_start@@Base+0x1aa0>
  4083b4:	mov    rax,rbx
  4083b7:	mov    rsi,QWORD PTR [rsp+0x208]
  4083bf:	xor    rsi,QWORD PTR fs:0x28
  4083c8:	jne    40895f <next@@Base+0x5ff>
  4083ce:	add    rsp,0x218
  4083d5:	pop    rbx
  4083d6:	pop    rbp
  4083d7:	pop    r12
  4083d9:	pop    r13
  4083db:	ret    
  4083dc:	nop    DWORD PTR [rax+0x0]
  4083e0:	mov    rdi,rbp
  4083e3:	lea    r13,[rip+0x4472]        # 40c85c <UnityStrOk@@Base+0x1e0>
  4083ea:	add    QWORD PTR [rip+0xb516],0x1        # 413908 <__bss_start@@Base+0x1a98>
  4083f2:	xor    r12d,r12d
  4083f5:	call   4082b0 <get_char@@Base>
  4083fa:	xor    ecx,ecx
  4083fc:	add    QWORD PTR [rip+0xb7c4],0x1        # 413bc8 <__bss_start@@Base+0x1d58>
  408404:	test   al,al
  408406:	je     408878 <next@@Base+0x518>
  40840c:	mov    rsi,QWORD PTR [rip+0xb7bd]        # 413bd0 <__bss_start@@Base+0x1d60>
  408413:	cmp    rcx,0x5
  408417:	lea    rdx,[rsi+0x1]
  40841b:	mov    QWORD PTR [rip+0xb7ae],rdx        # 413bd0 <__bss_start@@Base+0x1d60>
  408422:	ja     408500 <next@@Base+0x1a0>
  408428:	movsxd rcx,DWORD PTR [r13+rcx*4+0x0]
  40842d:	add    rcx,r13
  408430:	jmp    rcx
  408432:	nop    WORD PTR [rax+rax*1+0x0]
  408438:	cmp    al,0x65
  40843a:	jne    408e16 <next@@Base+0xab6>
  408440:	movsxd rax,r12d
  408443:	mov    rdi,rbp
  408446:	add    QWORD PTR [rip+0xb6ea],0x1        # 413b38 <__bss_start@@Base+0x1cc8>
  40844e:	mov    BYTE PTR [rsp+rax*1],0x65
  408452:	lea    ebx,[r12+0x1]
  408457:	call   4082b0 <get_char@@Base>
  40845c:	cmp    al,0x74
  40845e:	jne    408e04 <next@@Base+0xaa4>
  408464:	movsxd rbx,ebx
  408467:	mov    rdi,rbp
  40846a:	add    QWORD PTR [rip+0xb6d6],0x1        # 413b48 <__bss_start@@Base+0x1cd8>
  408472:	mov    BYTE PTR [rsp+rbx*1],0x74
  408476:	lea    r13d,[r12+0x2]
  40847b:	call   4082b0 <get_char@@Base>
  408480:	cmp    al,0x75
  408482:	jne    408df2 <next@@Base+0xa92>
  408488:	movsxd r13,r13d
  40848b:	mov    rdi,rbp
  40848e:	add    QWORD PTR [rip+0xb6c2],0x1        # 413b58 <__bss_start@@Base+0x1ce8>
  408496:	mov    BYTE PTR [rsp+r13*1],0x75
  40849b:	lea    ebx,[r12+0x3]
  4084a0:	call   4082b0 <get_char@@Base>
  4084a5:	cmp    al,0x72
  4084a7:	jne    408de0 <next@@Base+0xa80>
  4084ad:	movsxd rbx,ebx
  4084b0:	mov    rdi,rbp
  4084b3:	add    QWORD PTR [rip+0xb6ad],0x1        # 413b68 <__bss_start@@Base+0x1cf8>
  4084bb:	mov    BYTE PTR [rsp+rbx*1],0x72
  4084bf:	call   4082b0 <get_char@@Base>
  4084c4:	cmp    al,0x6e
  4084c6:	jne    408d98 <next@@Base+0xa38>
  4084cc:	mov    edi,0x4
  4084d1:	add    QWORD PTR [rip+0xb69f],0x1        # 413b78 <__bss_start@@Base+0x1d08>
  4084d9:	call   403180 <malloc@plt>
  4084de:	mov    rbx,rax
  4084e1:	mov    rdi,rax
  4084e4:	call   4080b0 <init_token_return@@Base>
  4084e9:	add    QWORD PTR [rip+0xb68f],0x1        # 413b80 <__bss_start@@Base+0x1d10>
  4084f1:	mov    rax,rbx
  4084f4:	jmp    4083b7 <next@@Base+0x57>
  4084f9:	nop    DWORD PTR [rax+0x0]
  408500:	cmp    al,0x9
  408502:	je     4087ea <next@@Base+0x48a>
  408508:	cmp    al,0x20
  40850a:	je     4087ea <next@@Base+0x48a>
  408510:	add    QWORD PTR [rip+0xb408],0x1        # 413920 <__bss_start@@Base+0x1ab0>
  408518:	cmp    al,0xa
  40851a:	je     4087ea <next@@Base+0x48a>
  408520:	cmp    al,0x30
  408522:	je     408a18 <next@@Base+0x6b8>
  408528:	lea    edx,[rax-0x31]
  40852b:	cmp    dl,0x8
  40852e:	jbe    40884a <next@@Base+0x4ea>
  408534:	cmp    al,0x28
  408536:	je     408932 <next@@Base+0x5d2>
  40853c:	cmp    al,0x29
  40853e:	je     4089eb <next@@Base+0x68b>
  408544:	cmp    al,0x7b
  408546:	je     4089be <next@@Base+0x65e>
  40854c:	cmp    al,0x7d
  40854e:	je     408991 <next@@Base+0x631>
  408554:	cmp    al,0x3b
  408556:	je     408964 <next@@Base+0x604>
  40855c:	cmp    al,0x65
  40855e:	je     4088d4 <next@@Base+0x574>
  408564:	cmp    al,0x69
  408566:	je     4088a5 <next@@Base+0x545>
  40856c:	cmp    al,0x6d
  40856e:	je     408903 <next@@Base+0x5a3>
  408574:	cmp    al,0x72
  408576:	jne    408a59 <next@@Base+0x6f9>
  40857c:	mov    rdi,rbp
  40857f:	mov    BYTE PTR [rsp+r12*1],0x72
  408584:	add    QWORD PTR [rip+0xb43c],0x1        # 4139c8 <__bss_start@@Base+0x1b58>
  40858c:	call   4082b0 <get_char@@Base>
  408591:	add    QWORD PTR [rip+0xb437],0x1        # 4139d0 <__bss_start@@Base+0x1b60>
  408599:	lea    ebx,[r12+0x1]
  40859e:	mov    ecx,0x4
  4085a3:	movsxd r12,ebx
  4085a6:	add    QWORD PTR [rip+0xb612],0x1        # 413bc0 <__bss_start@@Base+0x1d50>
  4085ae:	jmp    4083fc <next@@Base+0x9c>
  4085b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4085b8:	cmp    al,0x66
  4085ba:	je     40880b <next@@Base+0x4ab>
  4085c0:	cmp    al,0x6e
  4085c2:	jne    4087f9 <next@@Base+0x499>
  4085c8:	movsxd rbx,r12d
  4085cb:	mov    rdi,rbp
  4085ce:	add    QWORD PTR [rip+0xb4fa],0x1        # 413ad0 <__bss_start@@Base+0x1c60>
  4085d6:	mov    BYTE PTR [rsp+rbx*1],0x6e
  4085da:	call   4082b0 <get_char@@Base>
  4085df:	cmp    al,0x74
  4085e1:	jne    408aee <next@@Base+0x78e>
  4085e7:	mov    edi,0x4
  4085ec:	add    QWORD PTR [rip+0xb4ec],0x1        # 413ae0 <__bss_start@@Base+0x1c70>
  4085f4:	call   403180 <malloc@plt>
  4085f9:	mov    rbx,rax
  4085fc:	mov    rdi,rax
  4085ff:	call   408020 <init_token_int_type@@Base>
  408604:	add    QWORD PTR [rip+0xb4dc],0x1        # 413ae8 <__bss_start@@Base+0x1c78>
  40860c:	mov    rax,rbx
  40860f:	jmp    4083b7 <next@@Base+0x57>
  408614:	nop    DWORD PTR [rax+0x0]
  408618:	cmp    al,0x61
  40861a:	jne    408dce <next@@Base+0xa6e>
  408620:	movsxd rax,r12d
  408623:	mov    rdi,rbp
  408626:	add    QWORD PTR [rip+0xb4d2],0x1        # 413b00 <__bss_start@@Base+0x1c90>
  40862e:	mov    BYTE PTR [rsp+rax*1],0x61
  408632:	lea    ebx,[r12+0x1]
  408637:	call   4082b0 <get_char@@Base>
  40863c:	cmp    al,0x69
  40863e:	jne    408dbc <next@@Base+0xa5c>
  408644:	movsxd rbx,ebx
  408647:	mov    rdi,rbp
  40864a:	add    QWORD PTR [rip+0xb4be],0x1        # 413b10 <__bss_start@@Base+0x1ca0>
  408652:	mov    BYTE PTR [rsp+rbx*1],0x69
  408656:	lea    r13d,[r12+0x2]
  40865b:	call   4082b0 <get_char@@Base>
  408660:	cmp    al,0x6e
  408662:	jne    408daa <next@@Base+0xa4a>
  408668:	lea    ebx,[r12+0x3]
  40866d:	movsxd r13,r13d
  408670:	add    QWORD PTR [rip+0xb4a8],0x1        # 413b20 <__bss_start@@Base+0x1cb0>
  408678:	mov    BYTE PTR [rsp+r13*1],0x6e
  40867d:	movsxd rbx,ebx
  408680:	lea    rdi,[rbx+0x1]
  408684:	mov    BYTE PTR [rsp+rbx*1],0x0
  408688:	call   403180 <malloc@plt>
  40868d:	mov    rdx,rbx
  408690:	mov    rbp,rax
  408693:	mov    rsi,rsp
  408696:	mov    rdi,rax
  408699:	call   403080 <strncpy@plt>
  40869e:	mov    BYTE PTR [rbp+rbx*1+0x0],0x0
  4086a3:	mov    edi,0x10
  4086a8:	call   403180 <malloc@plt>
  4086ad:	mov    rsi,rbp
  4086b0:	mov    rbx,rax
  4086b3:	mov    rdi,rax
  4086b6:	call   408050 <init_token_function@@Base>
  4086bb:	add    QWORD PTR [rip+0xb465],0x1        # 413b28 <__bss_start@@Base+0x1cb8>
  4086c3:	mov    rax,rbx
  4086c6:	jmp    4083b7 <next@@Base+0x57>
  4086cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4086d0:	lea    edx,[rax-0x30]
  4086d3:	add    QWORD PTR [rip+0xb23d],0x1        # 413918 <__bss_start@@Base+0x1aa8>
  4086db:	cmp    dl,0x9
  4086de:	ja     408714 <next@@Base+0x3b4>
  4086e0:	lea    ebx,[r12+0x1]
  4086e5:	lea    r13,[rsp-0x1]
  4086ea:	movsxd rbx,ebx
  4086ed:	nop    DWORD PTR [rax]
  4086f0:	mov    BYTE PTR [r13+rbx*1+0x0],al
  4086f5:	mov    rdi,rbp
  4086f8:	add    QWORD PTR [rip+0xb398],0x1        # 413a98 <__bss_start@@Base+0x1c28>
  408700:	call   4082b0 <get_char@@Base>
  408705:	lea    edx,[rax-0x30]
  408708:	mov    r12d,ebx
  40870b:	add    rbx,0x1
  40870f:	cmp    dl,0x9
  408712:	jbe    4086f0 <next@@Base+0x390>
  408714:	mov    rdi,rbp
  408717:	movsxd rbx,r12d
  40871a:	add    QWORD PTR [rip+0xb37e],0x1        # 413aa0 <__bss_start@@Base+0x1c30>
  408722:	call   408330 <push_back_one_char@@Base>
  408727:	mov    edi,0x8
  40872c:	mov    BYTE PTR [rsp+rbx*1],0x0
  408730:	add    QWORD PTR [rip+0xb370],0x1        # 413aa8 <__bss_start@@Base+0x1c38>
  408738:	call   403180 <malloc@plt>
  40873d:	mov    rdi,rsp
  408740:	mov    rbx,rax
  408743:	mov    edx,0xa
  408748:	xor    esi,esi
  40874a:	call   403160 <strtol@plt>
  40874f:	mov    rdi,rbx
  408752:	mov    esi,eax
  408754:	add    QWORD PTR [rip+0xb354],0x1        # 413ab0 <__bss_start@@Base+0x1c40>
  40875c:	call   408030 <init_token_int_value@@Base>
  408761:	add    QWORD PTR [rip+0xb34f],0x1        # 413ab8 <__bss_start@@Base+0x1c48>
  408769:	mov    rax,rbx
  40876c:	jmp    4083b7 <next@@Base+0x57>
  408771:	cmp    al,0x6c
  408773:	jne    408d86 <next@@Base+0xa26>
  408779:	movsxd rbx,r12d
  40877c:	mov    rdi,rbp
  40877f:	add    QWORD PTR [rip+0xb409],0x1        # 413b90 <__bss_start@@Base+0x1d20>
  408787:	mov    BYTE PTR [rsp+rbx*1],0x6c
  40878b:	lea    r13d,[r12+0x1]
  408790:	call   4082b0 <get_char@@Base>
  408795:	cmp    al,0x73
  408797:	jne    408d74 <next@@Base+0xa14>
  40879d:	movsxd r13,r13d
  4087a0:	mov    rdi,rbp
  4087a3:	add    QWORD PTR [rip+0xb3f5],0x1        # 413ba0 <__bss_start@@Base+0x1d30>
  4087ab:	mov    BYTE PTR [rsp+r13*1],0x73
  4087b0:	call   4082b0 <get_char@@Base>
  4087b5:	cmp    al,0x65
  4087b7:	jne    408a47 <next@@Base+0x6e7>
  4087bd:	mov    edi,0x4
  4087c2:	add    QWORD PTR [rip+0xb3e6],0x1        # 413bb0 <__bss_start@@Base+0x1d40>
  4087ca:	call   403180 <malloc@plt>
  4087cf:	mov    rbx,rax
  4087d2:	mov    rdi,rax
  4087d5:	call   4080f0 <init_token_else@@Base>
  4087da:	add    QWORD PTR [rip+0xb3d6],0x1        # 413bb8 <__bss_start@@Base+0x1d48>
  4087e2:	mov    rax,rbx
  4087e5:	jmp    4083b7 <next@@Base+0x57>
  4087ea:	mov    rdi,rbp
  4087ed:	call   4082b0 <get_char@@Base>
  4087f2:	xor    ecx,ecx
  4087f4:	jmp    4085a6 <next@@Base+0x246>
  4087f9:	mov    edi,0x1
  4087fe:	add    QWORD PTR [rip+0xb2ba],0x1        # 413ac0 <__bss_start@@Base+0x1c50>
  408806:	call   403200 <exit@plt>
  40880b:	movsxd rax,r12d
  40880e:	mov    edi,0x4
  408813:	add    QWORD PTR [rip+0xb2ad],0x1        # 413ac8 <__bss_start@@Base+0x1c58>
  40881b:	mov    BYTE PTR [rsp+rax*1],0x66
  40881f:	lea    eax,[r12+0x1]
  408824:	cdqe   
  408826:	mov    BYTE PTR [rsp+rax*1],0x0
  40882a:	call   403180 <malloc@plt>
  40882f:	mov    rbx,rax
  408832:	mov    rdi,rax
  408835:	call   4080e0 <init_token_if@@Base>
  40883a:	add    QWORD PTR [rip+0xb2ae],0x1        # 413af0 <__bss_start@@Base+0x1c80>
  408842:	mov    rax,rbx
  408845:	jmp    4083b7 <next@@Base+0x57>
  40884a:	lea    ebx,[r12+0x1]
  40884f:	mov    rdi,rbp
  408852:	mov    BYTE PTR [rsp+r12*1],al
  408856:	add    QWORD PTR [rip+0xb0da],0x1        # 413938 <__bss_start@@Base+0x1ac8>
  40885e:	movsxd r12,ebx
  408861:	call   4082b0 <get_char@@Base>
  408866:	add    QWORD PTR [rip+0xb0d2],0x1        # 413940 <__bss_start@@Base+0x1ad0>
  40886e:	mov    ecx,0x1
  408873:	jmp    4085a6 <next@@Base+0x246>
  408878:	mov    edi,0x4
  40887d:	add    QWORD PTR [rip+0xb353],0x1        # 413bd8 <__bss_start@@Base+0x1d68>
  408885:	call   403180 <malloc@plt>
  40888a:	mov    rbx,rax
  40888d:	mov    rdi,rax
  408890:	call   4080d0 <init_token_eof@@Base>
  408895:	add    QWORD PTR [rip+0xb343],0x1        # 413be0 <__bss_start@@Base+0x1d70>
  40889d:	mov    rax,rbx
  4088a0:	jmp    4083b7 <next@@Base+0x57>
  4088a5:	lea    ebx,[r12+0x1]
  4088aa:	mov    rdi,rbp
  4088ad:	mov    BYTE PTR [rsp+r12*1],0x69
  4088b2:	add    QWORD PTR [rip+0xb0ee],0x1        # 4139a8 <__bss_start@@Base+0x1b38>
  4088ba:	movsxd r12,ebx
  4088bd:	call   4082b0 <get_char@@Base>
  4088c2:	add    QWORD PTR [rip+0xb0e6],0x1        # 4139b0 <__bss_start@@Base+0x1b40>
  4088ca:	mov    ecx,0x2
  4088cf:	jmp    4085a6 <next@@Base+0x246>
  4088d4:	lea    ebx,[r12+0x1]
  4088d9:	mov    rdi,rbp
  4088dc:	mov    BYTE PTR [rsp+r12*1],0x65
  4088e1:	add    QWORD PTR [rip+0xb0af],0x1        # 413998 <__bss_start@@Base+0x1b28>
  4088e9:	movsxd r12,ebx
  4088ec:	call   4082b0 <get_char@@Base>
  4088f1:	add    QWORD PTR [rip+0xb0a7],0x1        # 4139a0 <__bss_start@@Base+0x1b30>
  4088f9:	mov    ecx,0x5
  4088fe:	jmp    4085a6 <next@@Base+0x246>
  408903:	lea    ebx,[r12+0x1]
  408908:	mov    rdi,rbp
  40890b:	mov    BYTE PTR [rsp+r12*1],0x6d
  408910:	add    QWORD PTR [rip+0xb0a0],0x1        # 4139b8 <__bss_start@@Base+0x1b48>
  408918:	movsxd r12,ebx
  40891b:	call   4082b0 <get_char@@Base>
  408920:	add    QWORD PTR [rip+0xb098],0x1        # 4139c0 <__bss_start@@Base+0x1b50>
  408928:	mov    ecx,0x3
  40892d:	jmp    4085a6 <next@@Base+0x246>
  408932:	mov    edi,0x4
  408937:	add    QWORD PTR [rip+0xb009],0x1        # 413948 <__bss_start@@Base+0x1ad8>
  40893f:	call   403180 <malloc@plt>
  408944:	mov    rbx,rax
  408947:	mov    rdi,rax
  40894a:	call   408070 <init_token_opar@@Base>
  40894f:	add    QWORD PTR [rip+0xaff9],0x1        # 413950 <__bss_start@@Base+0x1ae0>
  408957:	mov    rax,rbx
  40895a:	jmp    4083b7 <next@@Base+0x57>
  40895f:	call   403100 <__stack_chk_fail@plt>
  408964:	mov    edi,0x4
  408969:	add    QWORD PTR [rip+0xb017],0x1        # 413988 <__bss_start@@Base+0x1b18>
  408971:	call   403180 <malloc@plt>
  408976:	mov    rbx,rax
  408979:	mov    rdi,rax
  40897c:	call   4080c0 <init_token_semicolon@@Base>
  408981:	add    QWORD PTR [rip+0xb007],0x1        # 413990 <__bss_start@@Base+0x1b20>
  408989:	mov    rax,rbx
  40898c:	jmp    4083b7 <next@@Base+0x57>
  408991:	mov    edi,0x4
  408996:	add    QWORD PTR [rip+0xafda],0x1        # 413978 <__bss_start@@Base+0x1b08>
  40899e:	call   403180 <malloc@plt>
  4089a3:	mov    rbx,rax
  4089a6:	mov    rdi,rax
  4089a9:	call   4080a0 <init_token_cbra@@Base>
  4089ae:	add    QWORD PTR [rip+0xafca],0x1        # 413980 <__bss_start@@Base+0x1b10>
  4089b6:	mov    rax,rbx
  4089b9:	jmp    4083b7 <next@@Base+0x57>
  4089be:	mov    edi,0x4
  4089c3:	add    QWORD PTR [rip+0xaf9d],0x1        # 413968 <__bss_start@@Base+0x1af8>
  4089cb:	call   403180 <malloc@plt>
  4089d0:	mov    rbx,rax
  4089d3:	mov    rdi,rax
  4089d6:	call   408090 <init_token_obra@@Base>
  4089db:	add    QWORD PTR [rip+0xaf8d],0x1        # 413970 <__bss_start@@Base+0x1b00>
  4089e3:	mov    rax,rbx
  4089e6:	jmp    4083b7 <next@@Base+0x57>
  4089eb:	mov    edi,0x4
  4089f0:	add    QWORD PTR [rip+0xaf60],0x1        # 413958 <__bss_start@@Base+0x1ae8>
  4089f8:	call   403180 <malloc@plt>
  4089fd:	mov    rbx,rax
  408a00:	mov    rdi,rax
  408a03:	call   408080 <init_token_cpar@@Base>
  408a08:	add    QWORD PTR [rip+0xaf50],0x1        # 413960 <__bss_start@@Base+0x1af0>
  408a10:	mov    rax,rbx
  408a13:	jmp    4083b7 <next@@Base+0x57>
  408a18:	mov    edi,0x8
  408a1d:	add    QWORD PTR [rip+0xaf03],0x1        # 413928 <__bss_start@@Base+0x1ab8>
  408a25:	call   403180 <malloc@plt>
  408a2a:	xor    esi,esi
  408a2c:	mov    rbx,rax
  408a2f:	mov    rdi,rax
  408a32:	call   408030 <init_token_int_value@@Base>
  408a37:	add    QWORD PTR [rip+0xaef1],0x1        # 413930 <__bss_start@@Base+0x1ac0>
  408a3f:	mov    rax,rbx
  408a42:	jmp    4083b7 <next@@Base+0x57>
  408a47:	mov    edi,0x1
  408a4c:	add    QWORD PTR [rip+0xb154],0x1        # 413ba8 <__bss_start@@Base+0x1d38>
  408a54:	call   403200 <exit@plt>
  408a59:	cmp    al,0x21
  408a5b:	je     408cb9 <next@@Base+0x959>
  408a61:	mov    edx,eax
  408a63:	and    edx,0xfffffffd
  408a66:	cmp    dl,0x3c
  408a69:	je     408c42 <next@@Base+0x8e2>
  408a6f:	cmp    al,0x3d
  408a71:	je     408bb7 <next@@Base+0x857>
  408a77:	cmp    al,0x7c
  408a79:	je     408b4c <next@@Base+0x7ec>
  408a7f:	cmp    al,0x26
  408a81:	jne    408b12 <next@@Base+0x7b2>
  408a87:	mov    rdi,rbp
  408a8a:	movsxd rbx,r12d
  408a8d:	add    QWORD PTR [rip+0xafd3],0x1        # 413a68 <__bss_start@@Base+0x1bf8>
  408a95:	mov    BYTE PTR [rsp+rbx*1],0x26
  408a99:	call   4082b0 <get_char@@Base>
  408a9e:	mov    edi,0x10
  408aa3:	mov    ebp,eax
  408aa5:	call   403180 <malloc@plt>
  408aaa:	cmp    bpl,0x26
  408aae:	mov    rbx,rax
  408ab1:	jne    408b00 <next@@Base+0x7a0>
  408ab3:	mov    edi,0x3
  408ab8:	add    QWORD PTR [rip+0xafc0],0x1        # 413a80 <__bss_start@@Base+0x1c10>
  408ac0:	call   403180 <malloc@plt>
  408ac5:	movzx  edx,BYTE PTR [rsp]
  408ac9:	mov    BYTE PTR [rax+0x1],0x26
  408acd:	mov    rsi,rax
  408ad0:	mov    BYTE PTR [rax+0x2],0x0
  408ad4:	mov    rdi,rbx
  408ad7:	mov    BYTE PTR [rax],dl
  408ad9:	call   408100 <init_token_boolean_op@@Base>
  408ade:	add    QWORD PTR [rip+0xafa2],0x1        # 413a88 <__bss_start@@Base+0x1c18>
  408ae6:	mov    rax,rbx
  408ae9:	jmp    4083b7 <next@@Base+0x57>
  408aee:	mov    edi,0x1
  408af3:	add    QWORD PTR [rip+0xafdd],0x1        # 413ad8 <__bss_start@@Base+0x1c68>
  408afb:	call   403200 <exit@plt>
  408b00:	mov    edi,0x1
  408b05:	add    QWORD PTR [rip+0xaf6b],0x1        # 413a78 <__bss_start@@Base+0x1c08>
  408b0d:	call   403200 <exit@plt>
  408b12:	movsx  ecx,al
  408b15:	mov    rax,QWORD PTR [rip+0x74dc]        # 40fff8 <stderr@GLIBC_2.2.5>
  408b1c:	lea    rdx,[rip+0x3c9d]        # 40c7c0 <UnityStrOk@@Base+0x144>
  408b23:	mov    esi,0x1
  408b28:	add    QWORD PTR [rip+0xaf40],0x1        # 413a70 <__bss_start@@Base+0x1c00>
  408b30:	mov    rdi,QWORD PTR [rax]
  408b33:	xor    eax,eax
  408b35:	call   403220 <__fprintf_chk@plt>
  408b3a:	mov    edi,0x1
  408b3f:	add    QWORD PTR [rip+0xaf49],0x1        # 413a90 <__bss_start@@Base+0x1c20>
  408b47:	call   403200 <exit@plt>
  408b4c:	mov    rdi,rbp
  408b4f:	movsxd rbx,r12d
  408b52:	add    QWORD PTR [rip+0xaeee],0x1        # 413a48 <__bss_start@@Base+0x1bd8>
  408b5a:	mov    BYTE PTR [rsp+rbx*1],0x7c
  408b5e:	call   4082b0 <get_char@@Base>
  408b63:	mov    edi,0x10
  408b68:	mov    ebp,eax
  408b6a:	call   403180 <malloc@plt>
  408b6f:	cmp    bpl,0x7c
  408b73:	mov    rbx,rax
  408b76:	jne    408c1e <next@@Base+0x8be>
  408b7c:	mov    edi,0x3
  408b81:	add    QWORD PTR [rip+0xaecf],0x1        # 413a58 <__bss_start@@Base+0x1be8>
  408b89:	call   403180 <malloc@plt>
  408b8e:	movzx  edx,BYTE PTR [rsp]
  408b92:	mov    BYTE PTR [rax+0x1],0x7c
  408b96:	mov    rsi,rax
  408b99:	mov    BYTE PTR [rax+0x2],0x0
  408b9d:	mov    rdi,rbx
  408ba0:	mov    BYTE PTR [rax],dl
  408ba2:	call   408100 <init_token_boolean_op@@Base>
  408ba7:	add    QWORD PTR [rip+0xaeb1],0x1        # 413a60 <__bss_start@@Base+0x1bf0>
  408baf:	mov    rax,rbx
  408bb2:	jmp    4083b7 <next@@Base+0x57>
  408bb7:	mov    rdi,rbp
  408bba:	movsxd rbx,r12d
  408bbd:	add    QWORD PTR [rip+0xae63],0x1        # 413a28 <__bss_start@@Base+0x1bb8>
  408bc5:	mov    BYTE PTR [rsp+rbx*1],0x3d
  408bc9:	call   4082b0 <get_char@@Base>
  408bce:	mov    edi,0x10
  408bd3:	mov    ebp,eax
  408bd5:	call   403180 <malloc@plt>
  408bda:	cmp    bpl,0x3d
  408bde:	mov    rbx,rax
  408be1:	jne    408c30 <next@@Base+0x8d0>
  408be3:	mov    edi,0x3
  408be8:	add    QWORD PTR [rip+0xae48],0x1        # 413a38 <__bss_start@@Base+0x1bc8>
  408bf0:	call   403180 <malloc@plt>
  408bf5:	movzx  edx,BYTE PTR [rsp]
  408bf9:	mov    BYTE PTR [rax+0x1],0x3d
  408bfd:	mov    rsi,rax
  408c00:	mov    BYTE PTR [rax+0x2],0x0
  408c04:	mov    rdi,rbx
  408c07:	mov    BYTE PTR [rax],dl
  408c09:	call   408100 <init_token_boolean_op@@Base>
  408c0e:	add    QWORD PTR [rip+0xae2a],0x1        # 413a40 <__bss_start@@Base+0x1bd0>
  408c16:	mov    rax,rbx
  408c19:	jmp    4083b7 <next@@Base+0x57>
  408c1e:	mov    edi,0x1
  408c23:	add    QWORD PTR [rip+0xae25],0x1        # 413a50 <__bss_start@@Base+0x1be0>
  408c2b:	call   403200 <exit@plt>
  408c30:	mov    edi,0x1
  408c35:	add    QWORD PTR [rip+0xadf3],0x1        # 413a30 <__bss_start@@Base+0x1bc0>
  408c3d:	call   403200 <exit@plt>
  408c42:	movsxd rbx,r12d
  408c45:	mov    rdi,rbp
  408c48:	add    QWORD PTR [rip+0xadb0],0x1        # 413a00 <__bss_start@@Base+0x1b90>
  408c50:	mov    BYTE PTR [rsp+rbx*1],al
  408c53:	call   4082b0 <get_char@@Base>
  408c58:	mov    edi,0x10
  408c5d:	mov    r12d,eax
  408c60:	call   403180 <malloc@plt>
  408c65:	cmp    r12b,0x3d
  408c69:	mov    rbx,rax
  408c6c:	je     408d2d <next@@Base+0x9cd>
  408c72:	mov    rdi,rbp
  408c75:	add    QWORD PTR [rip+0xad8b],0x1        # 413a08 <__bss_start@@Base+0x1b98>
  408c7d:	call   408330 <push_back_one_char@@Base>
  408c82:	mov    edi,0x2
  408c87:	call   403180 <malloc@plt>
  408c8c:	movzx  edx,BYTE PTR [rsp]
  408c90:	add    QWORD PTR [rip+0xad78],0x1        # 413a10 <__bss_start@@Base+0x1ba0>
  408c98:	mov    BYTE PTR [rax+0x1],0x0
  408c9c:	mov    BYTE PTR [rax],dl
  408c9e:	mov    rsi,rax
  408ca1:	mov    rdi,rbx
  408ca4:	call   408100 <init_token_boolean_op@@Base>
  408ca9:	add    QWORD PTR [rip+0xad6f],0x1        # 413a20 <__bss_start@@Base+0x1bb0>
  408cb1:	mov    rax,rbx
  408cb4:	jmp    4083b7 <next@@Base+0x57>
  408cb9:	movsxd rbx,r12d
  408cbc:	mov    rdi,rbp
  408cbf:	add    QWORD PTR [rip+0xad11],0x1        # 4139d8 <__bss_start@@Base+0x1b68>
  408cc7:	mov    BYTE PTR [rsp+rbx*1],0x21
  408ccb:	call   4082b0 <get_char@@Base>
  408cd0:	mov    edi,0x10
  408cd5:	mov    r12d,eax
  408cd8:	call   403180 <malloc@plt>
  408cdd:	cmp    r12b,0x3d
  408ce1:	mov    rbx,rax
  408ce4:	je     408d52 <next@@Base+0x9f2>
  408ce6:	mov    rdi,rbp
  408ce9:	add    QWORD PTR [rip+0xacef],0x1        # 4139e0 <__bss_start@@Base+0x1b70>
  408cf1:	call   408330 <push_back_one_char@@Base>
  408cf6:	mov    edi,0x2
  408cfb:	call   403180 <malloc@plt>
  408d00:	movzx  edx,BYTE PTR [rsp]
  408d04:	add    QWORD PTR [rip+0xacdc],0x1        # 4139e8 <__bss_start@@Base+0x1b78>
  408d0c:	mov    BYTE PTR [rax+0x1],0x0
  408d10:	mov    BYTE PTR [rax],dl
  408d12:	mov    rsi,rax
  408d15:	mov    rdi,rbx
  408d18:	call   408100 <init_token_boolean_op@@Base>
  408d1d:	add    QWORD PTR [rip+0xacd3],0x1        # 4139f8 <__bss_start@@Base+0x1b88>
  408d25:	mov    rax,rbx
  408d28:	jmp    4083b7 <next@@Base+0x57>
  408d2d:	mov    edi,0x3
  408d32:	call   403180 <malloc@plt>
  408d37:	movzx  edx,BYTE PTR [rsp]
  408d3b:	mov    BYTE PTR [rax+0x1],0x3d
  408d3f:	mov    BYTE PTR [rax+0x2],0x0
  408d43:	add    QWORD PTR [rip+0xaccd],0x1        # 413a18 <__bss_start@@Base+0x1ba8>
  408d4b:	mov    BYTE PTR [rax],dl
  408d4d:	jmp    408c9e <next@@Base+0x93e>
  408d52:	mov    edi,0x3
  408d57:	call   403180 <malloc@plt>
  408d5c:	movzx  edx,BYTE PTR [rsp]
  408d60:	mov    BYTE PTR [rax+0x1],0x3d
  408d64:	mov    BYTE PTR [rax+0x2],0x0
  408d68:	add    QWORD PTR [rip+0xac80],0x1        # 4139f0 <__bss_start@@Base+0x1b80>
  408d70:	mov    BYTE PTR [rax],dl
  408d72:	jmp    408d12 <next@@Base+0x9b2>
  408d74:	mov    edi,0x1
  408d79:	add    QWORD PTR [rip+0xae17],0x1        # 413b98 <__bss_start@@Base+0x1d28>
  408d81:	call   403200 <exit@plt>
  408d86:	mov    edi,0x1
  408d8b:	add    QWORD PTR [rip+0xadf5],0x1        # 413b88 <__bss_start@@Base+0x1d18>
  408d93:	call   403200 <exit@plt>
  408d98:	mov    edi,0x1
  408d9d:	add    QWORD PTR [rip+0xadcb],0x1        # 413b70 <__bss_start@@Base+0x1d00>
  408da5:	call   403200 <exit@plt>
  408daa:	mov    edi,0x1
  408daf:	add    QWORD PTR [rip+0xad61],0x1        # 413b18 <__bss_start@@Base+0x1ca8>
  408db7:	call   403200 <exit@plt>
  408dbc:	mov    edi,0x1
  408dc1:	add    QWORD PTR [rip+0xad3f],0x1        # 413b08 <__bss_start@@Base+0x1c98>
  408dc9:	call   403200 <exit@plt>
  408dce:	mov    edi,0x1
  408dd3:	add    QWORD PTR [rip+0xad1d],0x1        # 413af8 <__bss_start@@Base+0x1c88>
  408ddb:	call   403200 <exit@plt>
  408de0:	mov    edi,0x1
  408de5:	add    QWORD PTR [rip+0xad73],0x1        # 413b60 <__bss_start@@Base+0x1cf0>
  408ded:	call   403200 <exit@plt>
  408df2:	mov    edi,0x1
  408df7:	add    QWORD PTR [rip+0xad51],0x1        # 413b50 <__bss_start@@Base+0x1ce0>
  408dff:	call   403200 <exit@plt>
  408e04:	mov    edi,0x1
  408e09:	add    QWORD PTR [rip+0xad2f],0x1        # 413b40 <__bss_start@@Base+0x1cd0>
  408e11:	call   403200 <exit@plt>
  408e16:	mov    edi,0x1
  408e1b:	add    QWORD PTR [rip+0xad0d],0x1        # 413b30 <__bss_start@@Base+0x1cc0>
  408e23:	call   403200 <exit@plt>
  408e28:	nop    DWORD PTR [rax+rax*1+0x0]
  408e30:	test   esi,esi
  408e32:	je     408e5f <next@@Base+0xaff>
  408e34:	lea    eax,[rsi-0x1]
  408e37:	push   rbp
  408e38:	push   rbx
  408e39:	mov    rbx,rdi
  408e3c:	lea    rbp,[rdi+rax*8+0x8]
  408e41:	sub    rsp,0x8
  408e45:	nop    DWORD PTR [rax]
  408e48:	call   409520 <next@@Base+0x11c0>
  408e4d:	add    QWORD PTR [rbx],rax
  408e50:	add    rbx,0x8
  408e54:	cmp    rbx,rbp
  408e57:	jne    408e48 <next@@Base+0xae8>
  408e59:	add    rsp,0x8
  408e5d:	pop    rbx
  408e5e:	pop    rbp
  408e5f:	repz ret 
  408e61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  408e70:	push   rbp
  408e71:	push   rbx
  408e72:	lea    esi,[rdi*4+0x0]
  408e79:	mov    ebp,edi
  408e7b:	mov    edx,0x1
  408e80:	sub    rsp,0x8
  408e84:	mov    rbx,0x413d40
  408e8b:	mov    rcx,QWORD PTR [rbx]
  408e8e:	lea    rdi,[rbx+0x20]
  408e92:	call   403210 <fwrite@plt>
  408e97:	cmp    rax,0x1
  408e9b:	je     408ea4 <next@@Base+0xb44>
  408e9d:	mov    DWORD PTR [rbx+0x18],0x1
  408ea4:	add    DWORD PTR [rbx+0x8],ebp
  408ea7:	sub    DWORD PTR [rbx+0xc],ebp
  408eaa:	add    rsp,0x8
  408eae:	pop    rbx
  408eaf:	pop    rbp
  408eb0:	ret    
  408eb1:	nop    DWORD PTR [rax+rax*1+0x0]
  408eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ec0:	push   rbp
  408ec1:	push   rbx
  408ec2:	mov    ebp,edi
  408ec4:	sub    rsp,0x8
  408ec8:	mov    rbx,0x413d40
  408ecf:	mov    eax,DWORD PTR [rbx+0xc]
  408ed2:	cmp    eax,0x3ff
  408ed7:	ja     408ef0 <next@@Base+0xb90>
  408ed9:	add    ebp,eax
  408edb:	lea    rax,[rbx+rax*4+0x20]
  408ee0:	mov    DWORD PTR [rbx+0xc],ebp
  408ee3:	add    rsp,0x8
  408ee7:	pop    rbx
  408ee8:	pop    rbp
  408ee9:	ret    
  408eea:	nop    WORD PTR [rax+rax*1+0x0]
  408ef0:	mov    edi,0x400
  408ef5:	call   408e70 <next@@Base+0xb10>
  408efa:	mov    eax,DWORD PTR [rbx+0xc]
  408efd:	test   eax,eax
  408eff:	je     408ed9 <next@@Base+0xb79>
  408f01:	mov    edx,DWORD PTR [rbx+0x1020]
  408f07:	mov    DWORD PTR [rbx+0x20],edx
  408f0a:	jmp    408ed9 <next@@Base+0xb79>
  408f0c:	nop    DWORD PTR [rax+0x0]
  408f10:	push   rbp
  408f11:	push   rbx
  408f12:	mov    ebp,edi
  408f14:	sub    rsp,0x8
  408f18:	mov    rbx,0x413d40
  408f1f:	mov    edi,DWORD PTR [rbx+0xc]
  408f22:	mov    eax,DWORD PTR [rbx+0x10]
  408f25:	sub    eax,edi
  408f27:	cmp    eax,ebp
  408f29:	jae    408f6b <next@@Base+0xc0b>
  408f2b:	add    DWORD PTR [rbx+0x8],edi
  408f2e:	test   eax,eax
  408f30:	je     408f39 <next@@Base+0xbd9>
  408f32:	mov    edx,DWORD PTR [rbx+rdi*4+0x20]
  408f36:	mov    DWORD PTR [rbx+0x20],edx
  408f39:	mov    rcx,QWORD PTR [rbx]
  408f3c:	lea    rdi,[rbx+rax*4+0x20]
  408f41:	mov    edx,0x1000
  408f46:	mov    esi,0x1
  408f4b:	mov    DWORD PTR [rbx+0xc],0x0
  408f52:	mov    DWORD PTR [rbx+0x10],eax
  408f55:	call   4030b0 <fread@plt>
  408f5a:	shr    rax,0x2
  408f5e:	add    eax,DWORD PTR [rbx+0x10]
  408f61:	cmp    ebp,eax
  408f63:	mov    DWORD PTR [rbx+0x10],eax
  408f66:	ja     408f80 <next@@Base+0xc20>
  408f68:	mov    edi,DWORD PTR [rbx+0xc]
  408f6b:	mov    eax,edi
  408f6d:	add    edi,ebp
  408f6f:	lea    rax,[rbx+rax*4+0x20]
  408f74:	mov    DWORD PTR [rbx+0xc],edi
  408f77:	add    rsp,0x8
  408f7b:	pop    rbx
  408f7c:	pop    rbp
  408f7d:	ret    
  408f7e:	xchg   ax,ax
  408f80:	sub    ebp,eax
  408f82:	mov    DWORD PTR [rbx+0x10],0x0
  408f89:	add    DWORD PTR [rbx+0x14],ebp
  408f8c:	xor    eax,eax
  408f8e:	jmp    408f77 <next@@Base+0xc17>
  408f90:	sub    rsp,0xd8
  408f97:	test   al,al
  408f99:	mov    QWORD PTR [rsp+0x28],rsi
  408f9e:	mov    QWORD PTR [rsp+0x30],rdx
  408fa3:	mov    QWORD PTR [rsp+0x38],rcx
  408fa8:	mov    QWORD PTR [rsp+0x40],r8
  408fad:	mov    QWORD PTR [rsp+0x48],r9
  408fb2:	je     408feb <next@@Base+0xc8b>
  408fb4:	movaps XMMWORD PTR [rsp+0x50],xmm0
  408fb9:	movaps XMMWORD PTR [rsp+0x60],xmm1
  408fbe:	movaps XMMWORD PTR [rsp+0x70],xmm2
  408fc3:	movaps XMMWORD PTR [rsp+0x80],xmm3
  408fcb:	movaps XMMWORD PTR [rsp+0x90],xmm4
  408fd3:	movaps XMMWORD PTR [rsp+0xa0],xmm5
  408fdb:	movaps XMMWORD PTR [rsp+0xb0],xmm6
  408fe3:	movaps XMMWORD PTR [rsp+0xc0],xmm7
  408feb:	lea    rax,[rsp+0xe0]
  408ff3:	mov    rdx,rdi
  408ff6:	lea    rcx,[rsp+0x8]
  408ffb:	mov    esi,0x1
  409000:	mov    QWORD PTR [rsp+0x10],rax
  409005:	lea    rax,[rsp+0x20]
  40900a:	mov    DWORD PTR [rsp+0x8],0x8
  409012:	mov    DWORD PTR [rsp+0xc],0x30
  40901a:	mov    QWORD PTR [rsp+0x18],rax
  40901f:	mov    rax,QWORD PTR [rip+0x6fd2]        # 40fff8 <stderr@GLIBC_2.2.5>
  409026:	mov    rdi,QWORD PTR [rax]
  409029:	call   403050 <__vfprintf_chk@plt>
  40902e:	add    rsp,0xd8
  409035:	ret    
  409036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409040:	test   rsi,rsi
  409043:	push   r14
  409045:	push   r13
  409047:	push   r12
  409049:	push   rbp
  40904a:	push   rbx
  40904b:	je     4090a2 <next@@Base+0xd42>
  40904d:	test   edx,edx
  40904f:	mov    rbp,rsi
  409052:	mov    r13,QWORD PTR [rsi]
  409055:	je     40908e <next@@Base+0xd2e>
  409057:	lea    eax,[rdx-0x1]
  40905a:	lea    r14,[rdi+0x20]
  40905e:	lea    r12,[rdi+rax*8+0x28]
  409063:	xor    eax,eax
  409065:	nop    DWORD PTR [rax]
  409068:	cmp    QWORD PTR [r14],0x0
  40906c:	je     409085 <next@@Base+0xd25>
  40906e:	lea    ebx,[rax+0x1]
  409071:	add    rax,0x2
  409075:	shl    rax,0x4
  409079:	mov    rdi,QWORD PTR [rbp+rax*1+0x10]
  40907e:	call   403040 <free@plt>
  409083:	mov    eax,ebx
  409085:	add    r14,0x8
  409089:	cmp    r14,r12
  40908c:	jne    409068 <next@@Base+0xd08>
  40908e:	mov    rdi,rbp
  409091:	call   403040 <free@plt>
  409096:	pop    rbx
  409097:	mov    rax,r13
  40909a:	pop    rbp
  40909b:	pop    r12
  40909d:	pop    r13
  40909f:	pop    r14
  4090a1:	ret    
  4090a2:	xor    r13d,r13d
  4090a5:	jmp    409096 <next@@Base+0xd36>
  4090a7:	nop    WORD PTR [rax+rax*1+0x0]
  4090b0:	cmp    esi,0x3630342a
  4090b6:	je     409120 <next@@Base+0xdc0>
  4090b8:	mov    rax,rdx
  4090bb:	mov    edx,esi
  4090bd:	sub    rsp,0x18
  4090c1:	shr    edx,0x18
  4090c4:	mov    BYTE PTR [rsp+0xb],sil
  4090c9:	mov    BYTE PTR [rsp+0xc],0x36
  4090ce:	mov    BYTE PTR [rsp+0x8],dl
  4090d2:	mov    edx,esi
  4090d4:	mov    BYTE PTR [rsp+0xd],0x30
  4090d9:	shr    edx,0x10
  4090dc:	mov    BYTE PTR [rsp+0xe],0x34
  4090e1:	mov    BYTE PTR [rsp+0xf],0x2a
  4090e6:	mov    BYTE PTR [rsp+0x9],dl
  4090ea:	mov    edx,esi
  4090ec:	shr    edx,0x8
  4090ef:	test   rax,rax
  4090f2:	mov    BYTE PTR [rsp+0xa],dl
  4090f6:	je     409130 <next@@Base+0xdd0>
  4090f8:	lea    rcx,[rsp+0x8]
  4090fd:	lea    rdx,[rsp+0xc]
  409102:	lea    rdi,[rip+0x376f]        # 40c878 <UnityStrOk@@Base+0x1fc>
  409109:	mov    rsi,rax
  40910c:	xor    eax,eax
  40910e:	call   408f90 <next@@Base+0xc30>
  409113:	xor    eax,eax
  409115:	add    rsp,0x18
  409119:	ret    
  40911a:	nop    WORD PTR [rax+rax*1+0x0]
  409120:	mov    eax,0x1
  409125:	ret    
  409126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409130:	mov    rax,QWORD PTR [rdi]
  409133:	jmp    4090f8 <next@@Base+0xd98>
  409135:	nop
  409136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409140:	mov    rax,0x413d40
  409147:	xor    edx,edx
  409149:	xor    esi,esi
  40914b:	mov    rdi,QWORD PTR [rax]
  40914e:	mov    DWORD PTR [rax+0x1c],0xffffffff
  409155:	mov    DWORD PTR [rax+0x8],0x0
  40915c:	mov    DWORD PTR [rax+0xc],0x0
  409163:	jmp    4031a0 <fseek@plt>
  409168:	nop    DWORD PTR [rax+rax*1+0x0]
  409170:	push   r12
  409172:	push   rbp
  409173:	xor    eax,eax
  409175:	push   rbx
  409176:	mov    rbp,rdi
  409179:	sub    rsp,0xb0
  409180:	mov    WORD PTR [rsp+0x2],ax
  409185:	mov    QWORD PTR [rsp+0x8],0x0
  40918e:	mov    QWORD PTR [rsp+0x10],0x0
  409197:	call   4030d0 <getpid@plt>
  40919c:	mov    rbx,0x413d40
  4091a3:	mov    edx,0x1
  4091a8:	mov    DWORD PTR [rsp+0x18],eax
  4091ac:	mov    WORD PTR [rsp],dx
  4091b0:	xor    eax,eax
  4091b2:	mov    edx,0x1b6
  4091b7:	mov    esi,0x42
  4091bc:	mov    rdi,rbp
  4091bf:	mov    DWORD PTR [rbx+0x8],0x0
  4091c6:	mov    DWORD PTR [rbx+0x10],0x0
  4091cd:	mov    DWORD PTR [rbx+0xc],0x0
  4091d4:	mov    DWORD PTR [rbx+0x14],0xffffffff
  4091db:	mov    DWORD PTR [rbx+0x18],0x0
  4091e2:	call   4031d0 <open@plt>
  4091e7:	test   eax,eax
  4091e9:	js     409260 <next@@Base+0xf00>
  4091eb:	mov    ebp,eax
  4091ed:	mov    r12,rsp
  4091f0:	xor    eax,eax
  4091f2:	mov    rdx,r12
  4091f5:	mov    esi,0x7
  4091fa:	mov    edi,ebp
  4091fc:	call   4030c0 <fcntl@plt>
  409201:	test   eax,eax
  409203:	je     40920f <next@@Base+0xeaf>
  409205:	call   403070 <__errno_location@plt>
  40920a:	cmp    DWORD PTR [rax],0x4
  40920d:	je     4091f0 <next@@Base+0xe90>
  40920f:	lea    rsi,[rip+0x3804]        # 40ca1a <UnityStrOk@@Base+0x39e>
  409216:	mov    edi,ebp
  409218:	call   4031b0 <fdopen@plt>
  40921d:	test   rax,rax
  409220:	mov    QWORD PTR [rbx],rax
  409223:	je     409270 <next@@Base+0xf10>
  409225:	lea    rdx,[rsp+0x20]
  40922a:	mov    esi,ebp
  40922c:	mov    edi,0x1
  409231:	call   403190 <__fxstat@plt>
  409236:	test   eax,eax
  409238:	js     409280 <next@@Base+0xf20>
  40923a:	mov    rdi,QWORD PTR [rbx]
  40923d:	xor    esi,esi
  40923f:	mov    DWORD PTR [rbx+0x1c],0x1
  409246:	call   403110 <setbuf@plt>
  40924b:	mov    eax,0x1
  409250:	add    rsp,0xb0
  409257:	pop    rbx
  409258:	pop    rbp
  409259:	pop    r12
  40925b:	ret    
  40925c:	nop    DWORD PTR [rax+0x0]
  409260:	add    rsp,0xb0
  409267:	xor    eax,eax
  409269:	pop    rbx
  40926a:	pop    rbp
  40926b:	pop    r12
  40926d:	ret    
  40926e:	xchg   ax,ax
  409270:	mov    edi,ebp
  409272:	call   403120 <close@plt>
  409277:	xor    eax,eax
  409279:	jmp    409250 <next@@Base+0xef0>
  40927b:	nop    DWORD PTR [rax+rax*1+0x0]
  409280:	mov    rdi,QWORD PTR [rbx]
  409283:	call   4030e0 <fclose@plt>
  409288:	mov    QWORD PTR [rbx],0x0
  40928f:	xor    eax,eax
  409291:	jmp    409250 <next@@Base+0xef0>
  409293:	nop    DWORD PTR [rax]
  409296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092a0:	push   rbx
  4092a1:	mov    rbx,0x413d40
  4092a8:	mov    rdi,QWORD PTR [rbx]
  4092ab:	test   rdi,rdi
  4092ae:	je     4092ca <next@@Base+0xf6a>
  4092b0:	mov    eax,DWORD PTR [rbx+0xc]
  4092b3:	test   eax,eax
  4092b5:	jne    4092e0 <next@@Base+0xf80>
  4092b7:	call   4030e0 <fclose@plt>
  4092bc:	mov    QWORD PTR [rbx],0x0
  4092c3:	mov    DWORD PTR [rbx+0x10],0x0
  4092ca:	mov    eax,DWORD PTR [rbx+0x18]
  4092cd:	mov    DWORD PTR [rbx+0x1c],0x0
  4092d4:	pop    rbx
  4092d5:	ret    
  4092d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092e0:	mov    edx,DWORD PTR [rbx+0x1c]
  4092e3:	test   edx,edx
  4092e5:	jns    4092b7 <next@@Base+0xf57>
  4092e7:	mov    edi,eax
  4092e9:	call   408e70 <next@@Base+0xb10>
  4092ee:	mov    rdi,QWORD PTR [rbx]
  4092f1:	jmp    4092b7 <next@@Base+0xf57>
  4092f3:	nop    DWORD PTR [rax]
  4092f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409300:	push   rbx
  409301:	mov    ebx,edi
  409303:	mov    edi,0x1
  409308:	call   408ec0 <next@@Base+0xb60>
  40930d:	mov    DWORD PTR [rax],ebx
  40930f:	pop    rbx
  409310:	ret    
  409311:	nop    DWORD PTR [rax+rax*1+0x0]
  409316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409320:	push   rbx
  409321:	mov    rbx,rdi
  409324:	mov    edi,0x2
  409329:	call   408ec0 <next@@Base+0xb60>
  40932e:	mov    DWORD PTR [rax],ebx
  409330:	sar    rbx,0x20
  409334:	mov    DWORD PTR [rax+0x4],ebx
  409337:	pop    rbx
  409338:	ret    
  409339:	nop    DWORD PTR [rax+0x0]
  409340:	push   rbp
  409341:	push   rbx
  409342:	mov    ebp,edi
  409344:	mov    ebx,esi
  409346:	mov    edi,0x2
  40934b:	sub    rsp,0x8
  40934f:	call   408ec0 <next@@Base+0xb60>
  409354:	mov    DWORD PTR [rax],ebp
  409356:	mov    DWORD PTR [rax+0x4],ebx
  409359:	add    rsp,0x8
  40935d:	pop    rbx
  40935e:	pop    rbp
  40935f:	ret    
  409360:	push   r15
  409362:	push   r14
  409364:	mov    r14d,edi
  409367:	push   r13
  409369:	push   r12
  40936b:	push   rbp
  40936c:	push   rbx
  40936d:	mov    rbp,rsi
  409370:	sub    rsp,0x28
  409374:	lea    rax,[rsp+0x20]
  409379:	mov    r15,rsp
  40937c:	mov    r13,rsp
  40937f:	nop
  409380:	mov    DWORD PTR [r13+0x0],0x0
  409388:	add    r13,0x4
  40938c:	cmp    rax,r13
  40938f:	jne    409380 <next@@Base+0x1020>
  409391:	lea    rbx,[rbp+0x28]
  409395:	xor    r12d,r12d
  409398:	xor    ecx,ecx
  40939a:	mov    edi,0x1
  40939f:	mov    rax,rbx
  4093a2:	nop    WORD PTR [rax+rax*1+0x0]
  4093a8:	mov    edx,DWORD PTR [rax]
  4093aa:	test   edx,edx
  4093ac:	je     4093be <next@@Base+0x105e>
  4093ae:	mov    edx,ecx
  4093b0:	mov    esi,edi
  4093b2:	add    r12d,0x1
  4093b6:	shr    edx,0x5
  4093b9:	shl    esi,cl
  4093bb:	or     DWORD PTR [rsp+rdx*4],esi
  4093be:	add    ecx,0x1
  4093c1:	add    rax,0x18
  4093c5:	cmp    ecx,0xfc
  4093cb:	jne    4093a8 <next@@Base+0x1048>
  4093cd:	mov    edi,0x2
  4093d2:	call   408ec0 <next@@Base+0xb60>
  4093d7:	lea    edx,[r12+r12*4+0x11]
  4093dc:	mov    DWORD PTR [rax],r14d
  4093df:	mov    edi,0x1
  4093e4:	mov    DWORD PTR [rax+0x4],edx
  4093e7:	mov    r12d,DWORD PTR [rbp+0x0]
  4093eb:	call   408ec0 <next@@Base+0xb60>
  4093f0:	mov    edi,0x1
  4093f5:	mov    DWORD PTR [rax],r12d
  4093f8:	mov    r12d,DWORD PTR [rbp+0x8]
  4093fc:	call   408ec0 <next@@Base+0xb60>
  409401:	mov    edi,0x1
  409406:	mov    DWORD PTR [rax],r12d
  409409:	mov    r12d,DWORD PTR [rbp+0xc]
  40940d:	call   408ec0 <next@@Base+0xb60>
  409412:	mov    edi,0x2
  409417:	mov    DWORD PTR [rax],r12d
  40941a:	mov    r12,QWORD PTR [rbp+0x10]
  40941e:	call   408ec0 <next@@Base+0xb60>
  409423:	mov    edi,0x2
  409428:	mov    DWORD PTR [rax],r12d
  40942b:	sar    r12,0x20
  40942f:	mov    DWORD PTR [rax+0x4],r12d
  409433:	mov    r12,QWORD PTR [rbp+0x18]
  409437:	call   408ec0 <next@@Base+0xb60>
  40943c:	mov    edi,0x2
  409441:	mov    DWORD PTR [rax],r12d
  409444:	sar    r12,0x20
  409448:	mov    DWORD PTR [rax+0x4],r12d
  40944c:	mov    r12,QWORD PTR [rbp+0x20]
  409450:	call   408ec0 <next@@Base+0xb60>
  409455:	mov    DWORD PTR [rax],r12d
  409458:	sar    r12,0x20
  40945c:	mov    DWORD PTR [rax+0x4],r12d
  409460:	mov    r12d,DWORD PTR [r15]
  409463:	mov    edi,0x1
  409468:	add    r15,0x4
  40946c:	call   408ec0 <next@@Base+0xb60>
  409471:	cmp    r15,r13
  409474:	mov    DWORD PTR [rax],r12d
  409477:	jne    409460 <next@@Base+0x1100>
  409479:	lea    r13,[rbp+0x17c8]
  409480:	jmp    409491 <next@@Base+0x1131>
  409482:	nop    WORD PTR [rax+rax*1+0x0]
  409488:	add    rbx,0x18
  40948c:	cmp    rbx,r13
  40948f:	je     4094de <next@@Base+0x117e>
  409491:	mov    ebp,DWORD PTR [rbx]
  409493:	test   ebp,ebp
  409495:	je     409488 <next@@Base+0x1128>
  409497:	mov    edi,0x1
  40949c:	add    rbx,0x18
  4094a0:	call   408ec0 <next@@Base+0xb60>
  4094a5:	mov    r12,QWORD PTR [rbx-0x10]
  4094a9:	mov    edi,0x2
  4094ae:	mov    DWORD PTR [rax],ebp
  4094b0:	call   408ec0 <next@@Base+0xb60>
  4094b5:	mov    edi,0x2
  4094ba:	mov    DWORD PTR [rax],r12d
  4094bd:	sar    r12,0x20
  4094c1:	mov    DWORD PTR [rax+0x4],r12d
  4094c5:	mov    r12,QWORD PTR [rbx-0x8]
  4094c9:	call   408ec0 <next@@Base+0xb60>
  4094ce:	mov    DWORD PTR [rax],r12d
  4094d1:	sar    r12,0x20
  4094d5:	cmp    rbx,r13
  4094d8:	mov    DWORD PTR [rax+0x4],r12d
  4094dc:	jne    409491 <next@@Base+0x1131>
  4094de:	add    rsp,0x28
  4094e2:	pop    rbx
  4094e3:	pop    rbp
  4094e4:	pop    r12
  4094e6:	pop    r13
  4094e8:	pop    r14
  4094ea:	pop    r15
  4094ec:	ret    
  4094ed:	nop    DWORD PTR [rax]
  4094f0:	sub    rsp,0x8
  4094f4:	mov    edi,0x1
  4094f9:	call   408f10 <next@@Base+0xbb0>
  4094fe:	test   rax,rax
  409501:	je     409510 <next@@Base+0x11b0>
  409503:	mov    eax,DWORD PTR [rax]
  409505:	add    rsp,0x8
  409509:	ret    
  40950a:	nop    WORD PTR [rax+rax*1+0x0]
  409510:	xor    eax,eax
  409512:	add    rsp,0x8
  409516:	ret    
  409517:	nop    WORD PTR [rax+rax*1+0x0]
  409520:	sub    rsp,0x8
  409524:	mov    edi,0x2
  409529:	call   408f10 <next@@Base+0xbb0>
  40952e:	test   rax,rax
  409531:	je     409540 <next@@Base+0x11e0>
  409533:	mov    rax,QWORD PTR [rax]
  409536:	add    rsp,0x8
  40953a:	ret    
  40953b:	nop    DWORD PTR [rax+rax*1+0x0]
  409540:	xor    eax,eax
  409542:	add    rsp,0x8
  409546:	ret    
  409547:	nop    WORD PTR [rax+rax*1+0x0]
  409550:	push   r15
  409552:	push   r14
  409554:	push   r13
  409556:	push   r12
  409558:	mov    r12,rdi
  40955b:	push   rbp
  40955c:	push   rbx
  40955d:	mov    edi,0x1
  409562:	sub    rsp,0x28
  409566:	call   408f10 <next@@Base+0xbb0>
  40956b:	test   rax,rax
  40956e:	je     4097af <next@@Base+0x144f>
  409574:	mov    eax,DWORD PTR [rax]
  409576:	mov    DWORD PTR [r12],eax
  40957a:	mov    edi,0x1
  40957f:	call   408f10 <next@@Base+0xbb0>
  409584:	test   rax,rax
  409587:	je     4097b6 <next@@Base+0x1456>
  40958d:	mov    eax,DWORD PTR [rax]
  40958f:	mov    DWORD PTR [r12+0x8],eax
  409594:	mov    edi,0x1
  409599:	call   408f10 <next@@Base+0xbb0>
  40959e:	test   rax,rax
  4095a1:	je     4097bd <next@@Base+0x145d>
  4095a7:	mov    eax,DWORD PTR [rax]
  4095a9:	mov    DWORD PTR [r12+0xc],eax
  4095ae:	mov    edi,0x2
  4095b3:	call   408f10 <next@@Base+0xbb0>
  4095b8:	test   rax,rax
  4095bb:	je     4097c4 <next@@Base+0x1464>
  4095c1:	mov    rax,QWORD PTR [rax]
  4095c4:	mov    QWORD PTR [r12+0x10],rax
  4095c9:	mov    edi,0x2
  4095ce:	call   408f10 <next@@Base+0xbb0>
  4095d3:	test   rax,rax
  4095d6:	je     4097cb <next@@Base+0x146b>
  4095dc:	mov    rax,QWORD PTR [rax]
  4095df:	mov    QWORD PTR [r12+0x18],rax
  4095e4:	mov    edi,0x2
  4095e9:	call   408f10 <next@@Base+0xbb0>
  4095ee:	test   rax,rax
  4095f1:	je     4097d2 <next@@Base+0x1472>
  4095f7:	mov    rax,QWORD PTR [rax]
  4095fa:	lea    rdi,[r12+0x30]
  4095ff:	mov    QWORD PTR [r12+0x20],rax
  409604:	mov    eax,r12d
  409607:	mov    QWORD PTR [r12+0x28],0x0
  409610:	mov    QWORD PTR [r12+0x17c0],0x0
  40961c:	mov    rbx,rsp
  40961f:	and    rdi,0xfffffffffffffff8
  409623:	lea    r13,[rsp+0x20]
  409628:	xor    r15d,r15d
  40962b:	sub    eax,edi
  40962d:	lea    ecx,[rax+0x17c8]
  409633:	xor    eax,eax
  409635:	shr    ecx,0x3
  409638:	rep stos QWORD PTR es:[rdi],rax
  40963b:	jmp    409659 <next@@Base+0x12f9>
  40963d:	nop    DWORD PTR [rax]
  409640:	mov    edi,DWORD PTR [rax]
  409642:	add    rbx,0x4
  409646:	mov    rbp,rdi
  409649:	call   40af10 <__gcov_sort_n_vals@@Base+0x16e0>
  40964e:	mov    DWORD PTR [rbx-0x4],ebp
  409651:	add    r15d,eax
  409654:	cmp    rbx,r13
  409657:	je     409680 <next@@Base+0x1320>
  409659:	mov    edi,0x1
  40965e:	call   408f10 <next@@Base+0xbb0>
  409663:	test   rax,rax
  409666:	jne    409640 <next@@Base+0x12e0>
  409668:	xor    ebp,ebp
  40966a:	add    rbx,0x4
  40966e:	add    r15d,eax
  409671:	mov    DWORD PTR [rbx-0x4],ebp
  409674:	cmp    rbx,r13
  409677:	jne    409659 <next@@Base+0x12f9>
  409679:	nop    DWORD PTR [rax+0x0]
  409680:	xor    ebx,ebx
  409682:	xor    ebp,ebp
  409684:	xor    r14d,r14d
  409687:	test   r15d,r15d
  40968a:	lea    r13d,[r15-0x1]
  40968e:	je     409757 <next@@Base+0x13f7>
  409694:	nop    DWORD PTR [rax+0x0]
  409698:	test   ebx,ebx
  40969a:	je     4096a2 <next@@Base+0x1342>
  40969c:	jmp    4096d6 <next@@Base+0x1376>
  40969e:	xchg   ax,ax
  4096a0:	mov    ebp,ecx
  4096a2:	cmp    ebp,0x7
  4096a5:	jbe    4096b5 <next@@Base+0x1355>
  4096a7:	lea    rdi,[rip+0x3242]        # 40c8f0 <UnityStrOk@@Base+0x274>
  4096ae:	xor    eax,eax
  4096b0:	call   408f90 <next@@Base+0xc30>
  4096b5:	mov    eax,ebp
  4096b7:	lea    ecx,[rbp+0x1]
  4096ba:	mov    ebx,DWORD PTR [rsp+rax*4]
  4096bd:	test   ebx,ebx
  4096bf:	je     4096a0 <next@@Base+0x1340>
  4096c1:	mov    r14d,ebp
  4096c4:	mov    ebp,ecx
  4096c6:	shl    r14d,0x5
  4096ca:	test   bl,0x1
  4096cd:	jne    4096db <next@@Base+0x137b>
  4096cf:	nop
  4096d0:	add    r14d,0x1
  4096d4:	shr    ebx,1
  4096d6:	test   bl,0x1
  4096d9:	je     4096d0 <next@@Base+0x1370>
  4096db:	cmp    r14d,0xfb
  4096e2:	ja     409770 <next@@Base+0x1410>
  4096e8:	mov    edi,0x1
  4096ed:	call   408f10 <next@@Base+0xbb0>
  4096f2:	test   rax,rax
  4096f5:	je     409791 <next@@Base+0x1431>
  4096fb:	mov    ecx,DWORD PTR [rax]
  4096fd:	mov    r15d,r14d
  409700:	mov    edi,0x2
  409705:	lea    rax,[r15+r15*2]
  409709:	mov    DWORD PTR [r12+rax*8+0x28],ecx
  40970e:	call   408f10 <next@@Base+0xbb0>
  409713:	test   rax,rax
  409716:	je     4097a8 <next@@Base+0x1448>
  40971c:	mov    rcx,QWORD PTR [rax]
  40971f:	lea    rax,[r15+r15*2]
  409723:	mov    edi,0x2
  409728:	mov    QWORD PTR [r12+rax*8+0x30],rcx
  40972d:	call   408f10 <next@@Base+0xbb0>
  409732:	test   rax,rax
  409735:	je     4097a0 <next@@Base+0x1440>
  409737:	mov    rcx,QWORD PTR [rax]
  40973a:	lea    rax,[r15+r15*2]
  40973e:	sub    r13d,0x1
  409742:	shr    ebx,1
  409744:	add    r14d,0x1
  409748:	cmp    r13d,0xffffffff
  40974c:	mov    QWORD PTR [r12+rax*8+0x38],rcx
  409751:	jne    409698 <next@@Base+0x1338>
  409757:	add    rsp,0x28
  40975b:	pop    rbx
  40975c:	pop    rbp
  40975d:	pop    r12
  40975f:	pop    r13
  409761:	pop    r14
  409763:	pop    r15
  409765:	ret    
  409766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409770:	lea    rdi,[rip+0x3139]        # 40c8b0 <UnityStrOk@@Base+0x234>
  409777:	xor    eax,eax
  409779:	call   408f90 <next@@Base+0xc30>
  40977e:	mov    edi,0x1
  409783:	call   408f10 <next@@Base+0xbb0>
  409788:	test   rax,rax
  40978b:	jne    4096fb <next@@Base+0x139b>
  409791:	xor    ecx,ecx
  409793:	jmp    4096fd <next@@Base+0x139d>
  409798:	nop    DWORD PTR [rax+rax*1+0x0]
  4097a0:	xor    ecx,ecx
  4097a2:	jmp    40973a <next@@Base+0x13da>
  4097a4:	nop    DWORD PTR [rax+0x0]
  4097a8:	xor    ecx,ecx
  4097aa:	jmp    40971f <next@@Base+0x13bf>
  4097af:	xor    eax,eax
  4097b1:	jmp    409576 <next@@Base+0x1216>
  4097b6:	xor    eax,eax
  4097b8:	jmp    40958f <next@@Base+0x122f>
  4097bd:	xor    eax,eax
  4097bf:	jmp    4095a9 <next@@Base+0x1249>
  4097c4:	xor    eax,eax
  4097c6:	jmp    4095c4 <next@@Base+0x1264>
  4097cb:	xor    eax,eax
  4097cd:	jmp    4095df <next@@Base+0x127f>
  4097d2:	xor    eax,eax
  4097d4:	jmp    4095fa <next@@Base+0x129a>
  4097d9:	nop    DWORD PTR [rax+0x0]
  4097e0:	push   rbp
  4097e1:	push   rbx
  4097e2:	mov    ebx,edi
  4097e4:	sub    rsp,0x8
  4097e8:	mov    rbp,0x413d40
  4097ef:	mov    edi,DWORD PTR [rbp+0xc]
  4097f2:	test   edi,edi
  4097f4:	je     4097fb <next@@Base+0x149b>
  4097f6:	call   408e70 <next@@Base+0xb10>
  4097fb:	mov    rdi,QWORD PTR [rbp+0x0]
  4097ff:	lea    esi,[rbx*4+0x0]
  409806:	xor    edx,edx
  409808:	call   4031a0 <fseek@plt>
  40980d:	mov    rdi,QWORD PTR [rbp+0x0]
  409811:	call   403150 <ftell@plt>
  409816:	sar    rax,0x2
  40981a:	mov    DWORD PTR [rbp+0x8],eax
  40981d:	add    rsp,0x8
  409821:	pop    rbx
  409822:	pop    rbp
  409823:	ret    
  409824:	xchg   ax,ax
  409826:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409830 <__gcov_sort_n_vals@@Base>:
  409830:	cmp    esi,0x2
  409833:	jle    4098bd <__gcov_sort_n_vals@@Base+0x8d>
  409839:	sub    esi,0x3
  40983c:	push   rbp
  40983d:	lea    r9,[rdi+0x8]
  409841:	shr    esi,1
  409843:	push   rbx
  409844:	xor    r11d,r11d
  409847:	mov    eax,esi
  409849:	xor    r10d,r10d
  40984c:	lea    rbp,[rax+rax*1+0x2]
  409851:	nop    DWORD PTR [rax+0x0]
  409858:	mov    rsi,QWORD PTR [r9+0x10]
  40985c:	cmp    rsi,QWORD PTR [r9]
  40985f:	mov    edx,r10d
  409862:	mov    rbx,QWORD PTR [r9+0x8]
  409866:	mov    rax,r10
  409869:	jle    40989d <__gcov_sort_n_vals@@Base+0x6d>
  40986b:	lea    r8,[r9+r11*1]
  40986f:	jmp    409883 <__gcov_sort_n_vals@@Base+0x53>
  409871:	nop    DWORD PTR [rax+0x0]
  409878:	sub    rax,0x2
  40987c:	cmp    rsi,QWORD PTR [rdi+rax*8+0x8]
  409881:	jle    40989d <__gcov_sort_n_vals@@Base+0x6d>
  409883:	mov    rcx,QWORD PTR [rdi+rax*8]
  409887:	sub    edx,0x2
  40988a:	mov    QWORD PTR [rdi+rax*8+0x10],rcx
  40988f:	mov    rcx,QWORD PTR [r8+rax*8]
  409893:	mov    QWORD PTR [rdi+rax*8+0x18],rcx
  409898:	jns    409878 <__gcov_sort_n_vals@@Base+0x48>
  40989a:	movsxd rax,edx
  40989d:	add    r10,0x2
  4098a1:	add    rax,0x2
  4098a5:	add    r9,0x10
  4098a9:	sub    r11,0x10
  4098ad:	cmp    rbp,r10
  4098b0:	mov    QWORD PTR [rdi+rax*8],rbx
  4098b4:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  4098b9:	jne    409858 <__gcov_sort_n_vals@@Base+0x28>
  4098bb:	pop    rbx
  4098bc:	pop    rbp
  4098bd:	repz ret 
  4098bf:	nop
  4098c0:	push   r15
  4098c2:	push   r14
  4098c4:	xor    eax,eax
  4098c6:	push   r13
  4098c8:	push   r12
  4098ca:	mov    r13,rdi
  4098cd:	push   rbp
  4098ce:	push   rbx
  4098cf:	mov    ecx,0x2f9
  4098d4:	sub    rsp,0x4808
  4098db:	test   r13,r13
  4098de:	lea    rdi,[rsp+0x90]
  4098e6:	mov    DWORD PTR [rsp+0x6c],esi
  4098ea:	mov    QWORD PTR [rsp+0x8],rdi
  4098ef:	rep stos QWORD PTR es:[rdi],rax
  4098f2:	je     40abd9 <__gcov_sort_n_vals@@Base+0x13a9>
  4098f8:	mov    rbx,r13
  4098fb:	xor    ebp,ebp
  4098fd:	mov    QWORD PTR [rsp+0x10],0x0
  409906:	xor    r15d,r15d
  409909:	mov    QWORD PTR [rsp+0x18],r13
  40990e:	mov    rdi,QWORD PTR [rbx+0x18]
  409912:	call   4030f0 <strlen@plt>
  409917:	mov    rsi,QWORD PTR [rsp+0x10]
  40991c:	mov    ecx,DWORD PTR [rbx+0x10]
  40991f:	mov    edx,0x20
  409924:	cmp    rsi,rax
  409927:	cmovae rax,rsi
  40992b:	mov    QWORD PTR [rsp+0x10],rax
  409930:	mov    eax,ecx
  409932:	add    ecx,ecx
  409934:	xor    eax,r15d
  409937:	add    r15d,r15d
  40993a:	sar    eax,0x1f
  40993d:	and    eax,0x4c11db7
  409942:	xor    r15d,eax
  409945:	sub    edx,0x1
  409948:	jne    409930 <__gcov_sort_n_vals@@Base+0x100>
  40994a:	mov    edi,DWORD PTR [rbx+0x70]
  40994d:	mov    edx,0x20
  409952:	mov    ecx,edi
  409954:	nop    DWORD PTR [rax+0x0]
  409958:	mov    eax,ecx
  40995a:	add    ecx,ecx
  40995c:	xor    eax,r15d
  40995f:	add    r15d,r15d
  409962:	sar    eax,0x1f
  409965:	and    eax,0x4c11db7
  40996a:	xor    r15d,eax
  40996d:	sub    edx,0x1
  409970:	jne    409958 <__gcov_sort_n_vals@@Base+0x128>
  409972:	test   edi,edi
  409974:	je     409ad0 <__gcov_sort_n_vals@@Base+0x2a0>
  40997a:	mov    r8,QWORD PTR [rbx+0x78]
  40997e:	lea    eax,[rdi-0x1]
  409981:	mov    r12d,DWORD PTR [rsp+0x98]
  409989:	mov    rcx,QWORD PTR [rsp+0xa0]
  409991:	mov    rsi,QWORD PTR [rsp+0xa8]
  409999:	xor    r9d,r9d
  40999c:	xor    r13d,r13d
  40999f:	xor    r11d,r11d
  4099a2:	lea    r10,[r8+rax*8+0x8]
  4099a7:	nop    WORD PTR [rax+rax*1+0x0]
  4099b0:	mov    rdi,QWORD PTR [r8]
  4099b3:	test   rdi,rdi
  4099b6:	je     409eac <__gcov_sort_n_vals@@Base+0x67c>
  4099bc:	cmp    QWORD PTR [rdi],rbx
  4099bf:	je     409e9c <__gcov_sort_n_vals@@Base+0x66c>
  4099c5:	xor    edi,edi
  4099c7:	xor    edx,edx
  4099c9:	mov    r14d,0x20
  4099cf:	nop
  4099d0:	mov    eax,r15d
  4099d3:	add    r15d,r15d
  4099d6:	xor    eax,edx
  4099d8:	add    edx,edx
  4099da:	sar    eax,0x1f
  4099dd:	and    eax,0x4c11db7
  4099e2:	xor    r15d,eax
  4099e5:	sub    r14d,0x1
  4099e9:	jne    4099d0 <__gcov_sort_n_vals@@Base+0x1a0>
  4099eb:	test   rdi,rdi
  4099ee:	je     409ea4 <__gcov_sort_n_vals@@Base+0x674>
  4099f4:	mov    r14d,DWORD PTR [rdi+0xc]
  4099f8:	mov    edx,0x20
  4099fd:	nop    DWORD PTR [rax]
  409a00:	mov    eax,r15d
  409a03:	add    r15d,r15d
  409a06:	xor    eax,r14d
  409a09:	add    r14d,r14d
  409a0c:	sar    eax,0x1f
  409a0f:	and    eax,0x4c11db7
  409a14:	xor    r15d,eax
  409a17:	sub    edx,0x1
  409a1a:	jne    409a00 <__gcov_sort_n_vals@@Base+0x1d0>
  409a1c:	test   rdi,rdi
  409a1f:	je     409aa4 <__gcov_sort_n_vals@@Base+0x274>
  409a25:	cmp    QWORD PTR [rbx+0x20],0x0
  409a2a:	je     409aa4 <__gcov_sort_n_vals@@Base+0x274>
  409a2c:	mov    r12d,DWORD PTR [rdi+0x18]
  409a30:	mov    edx,0x20
  409a35:	add    ebp,r12d
  409a38:	mov    r11d,r12d
  409a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  409a40:	mov    eax,r15d
  409a43:	add    r15d,r15d
  409a46:	xor    eax,r11d
  409a49:	add    r11d,r11d
  409a4c:	sar    eax,0x1f
  409a4f:	and    eax,0x4c11db7
  409a54:	xor    r15d,eax
  409a57:	sub    edx,0x1
  409a5a:	jne    409a40 <__gcov_sort_n_vals@@Base+0x210>
  409a5c:	test   r12d,r12d
  409a5f:	je     409f30 <__gcov_sort_n_vals@@Base+0x700>
  409a65:	mov    rax,QWORD PTR [rdi+0x20]
  409a69:	lea    edx,[r12-0x1]
  409a6e:	lea    rdi,[rax+rdx*8+0x8]
  409a73:	nop    DWORD PTR [rax+rax*1+0x0]
  409a78:	mov    rdx,QWORD PTR [rax]
  409a7b:	add    rcx,rdx
  409a7e:	cmp    rsi,rdx
  409a81:	jge    409a8c <__gcov_sort_n_vals@@Base+0x25c>
  409a83:	mov    rsi,rdx
  409a86:	mov    r9d,0x1
  409a8c:	add    rax,0x8
  409a90:	cmp    rax,rdi
  409a93:	jne    409a78 <__gcov_sort_n_vals@@Base+0x248>
  409a95:	mov    r12d,ebp
  409a98:	mov    r13d,0x1
  409a9e:	mov    r11d,0x1
  409aa4:	add    r8,0x8
  409aa8:	cmp    r10,r8
  409aab:	jne    4099b0 <__gcov_sort_n_vals@@Base+0x180>
  409ab1:	test   r11b,r11b
  409ab4:	jne    40abb2 <__gcov_sort_n_vals@@Base+0x1382>
  409aba:	test   r13b,r13b
  409abd:	je     409ac7 <__gcov_sort_n_vals@@Base+0x297>
  409abf:	mov    QWORD PTR [rsp+0xa0],rcx
  409ac7:	test   r9b,r9b
  409aca:	jne    40abbf <__gcov_sort_n_vals@@Base+0x138f>
  409ad0:	mov    rbx,QWORD PTR [rbx+0x8]
  409ad4:	test   rbx,rbx
  409ad7:	jne    40990e <__gcov_sort_n_vals@@Base+0xde>
  409add:	mov    r14,QWORD PTR [rsp+0x10]
  409ae2:	mov    r13,QWORD PTR [rsp+0x18]
  409ae7:	add    r14,0x2
  409aeb:	test   ebp,ebp
  409aed:	je     409c22 <__gcov_sort_n_vals@@Base+0x3f2>
  409af3:	mov    rbx,QWORD PTR [rsp+0x8]
  409af8:	mov    rcx,QWORD PTR [rsp+0xa8]
  409b00:	mov    rax,rbx
  409b03:	lea    rdx,[rbx+0x17c8]
  409b0a:	add    rax,0x28
  409b0e:	xchg   ax,ax
  409b10:	mov    DWORD PTR [rax],0x0
  409b16:	mov    QWORD PTR [rax+0x8],rcx
  409b1a:	add    rax,0x18
  409b1e:	mov    QWORD PTR [rax-0x8],0x0
  409b26:	cmp    rdx,rax
  409b29:	jne    409b10 <__gcov_sort_n_vals@@Base+0x2e0>
  409b2b:	mov    rax,QWORD PTR [rsp+0x8]
  409b30:	mov    r10,r13
  409b33:	mov    r12d,0x3f
  409b39:	mov    ebp,0x3d
  409b3e:	mov    ebx,0x4000003e
  409b43:	lea    r8,[rax+0x28]
  409b47:	cmp    QWORD PTR [r10+0x20],0x0
  409b4c:	je     409c15 <__gcov_sort_n_vals@@Base+0x3e5>
  409b52:	mov    eax,DWORD PTR [r10+0x70]
  409b56:	test   eax,eax
  409b58:	je     409c15 <__gcov_sort_n_vals@@Base+0x3e5>
  409b5e:	mov    rdi,QWORD PTR [r10+0x78]
  409b62:	sub    eax,0x1
  409b65:	lea    r11,[rdi+rax*8+0x8]
  409b6a:	jmp    409b7d <__gcov_sort_n_vals@@Base+0x34d>
  409b6c:	nop    DWORD PTR [rax+0x0]
  409b70:	add    rdi,0x8
  409b74:	cmp    r11,rdi
  409b77:	je     409c15 <__gcov_sort_n_vals@@Base+0x3e5>
  409b7d:	mov    rax,QWORD PTR [rdi]
  409b80:	test   rax,rax
  409b83:	je     409b70 <__gcov_sort_n_vals@@Base+0x340>
  409b85:	cmp    QWORD PTR [rax],r10
  409b88:	jne    409b70 <__gcov_sort_n_vals@@Base+0x340>
  409b8a:	mov    edx,DWORD PTR [rax+0x18]
  409b8d:	test   edx,edx
  409b8f:	je     409b70 <__gcov_sort_n_vals@@Base+0x340>
  409b91:	mov    rsi,QWORD PTR [rax+0x20]
  409b95:	lea    eax,[rdx-0x1]
  409b98:	mov    QWORD PTR [rsp+0x10],rdi
  409b9d:	lea    r9,[rsi+rax*8+0x8]
  409ba2:	nop    WORD PTR [rax+rax*1+0x0]
  409ba8:	mov    rdx,QWORD PTR [rsi]
  409bab:	test   rdx,rdx
  409bae:	je     409eb8 <__gcov_sort_n_vals@@Base+0x688>
  409bb4:	bsr    rax,rdx
  409bb8:	mov    ecx,r12d
  409bbb:	xor    rax,0x3f
  409bbf:	sub    ecx,eax
  409bc1:	cmp    ecx,0x1
  409bc4:	jbe    409eb8 <__gcov_sort_n_vals@@Base+0x688>
  409bca:	mov    ecx,ebp
  409bcc:	mov    rdi,rdx
  409bcf:	sub    ecx,eax
  409bd1:	shr    rdi,cl
  409bd4:	mov    rcx,rdi
  409bd7:	mov    edi,ebx
  409bd9:	and    ecx,0x3
  409bdc:	sub    edi,eax
  409bde:	lea    eax,[rcx+rdi*4]
  409be1:	lea    rax,[rax+rax*2]
  409be5:	lea    rax,[r8+rax*8]
  409be9:	add    DWORD PTR [rax],0x1
  409bec:	add    QWORD PTR [rax+0x10],rdx
  409bf0:	cmp    rdx,QWORD PTR [rax+0x8]
  409bf4:	jge    409bfa <__gcov_sort_n_vals@@Base+0x3ca>
  409bf6:	mov    QWORD PTR [rax+0x8],rdx
  409bfa:	add    rsi,0x8
  409bfe:	cmp    rsi,r9
  409c01:	jne    409ba8 <__gcov_sort_n_vals@@Base+0x378>
  409c03:	mov    rdi,QWORD PTR [rsp+0x10]
  409c08:	add    rdi,0x8
  409c0c:	cmp    r11,rdi
  409c0f:	jne    409b7d <__gcov_sort_n_vals@@Base+0x34d>
  409c15:	mov    r10,QWORD PTR [r10+0x8]
  409c19:	test   r10,r10
  409c1c:	jne    409b47 <__gcov_sort_n_vals@@Base+0x317>
  409c22:	lea    rdi,[rip+0x2e43]        # 40ca6c <UnityStrOk@@Base+0x3f0>
  409c29:	call   403030 <getenv@plt>
  409c2e:	test   rax,rax
  409c31:	je     40ab15 <__gcov_sort_n_vals@@Base+0x12e5>
  409c37:	xor    esi,esi
  409c39:	mov    edx,0xa
  409c3e:	mov    rdi,rax
  409c41:	call   403160 <strtol@plt>
  409c46:	mov    edx,0x0
  409c4b:	test   eax,eax
  409c4d:	lea    rdi,[rip+0x2e2a]        # 40ca7e <UnityStrOk@@Base+0x402>
  409c54:	cmovns edx,eax
  409c57:	mov    DWORD PTR [rsp+0x3c],edx
  409c5b:	call   403030 <getenv@plt>
  409c60:	test   rax,rax
  409c63:	mov    rbx,rax
  409c66:	je     40aaf8 <__gcov_sort_n_vals@@Base+0x12c8>
  409c6c:	mov    rdi,rax
  409c6f:	call   4030f0 <strlen@plt>
  409c74:	test   rax,rax
  409c77:	mov    QWORD PTR [rsp+0x20],rax
  409c7c:	je     40aaf8 <__gcov_sort_n_vals@@Base+0x12c8>
  409c82:	mov    rsi,QWORD PTR [rsp+0x20]
  409c87:	mov    rax,rsi
  409c8a:	sub    rax,0x1
  409c8e:	cmp    BYTE PTR [rbx+rsi*1-0x1],0x2f
  409c93:	je     40ab9f <__gcov_sort_n_vals@@Base+0x136f>
  409c99:	mov    rbp,QWORD PTR [rsp+0x20]
  409c9e:	lea    rdi,[r14+rbp*1]
  409ca2:	call   403180 <malloc@plt>
  409ca7:	mov    rdx,rbp
  409caa:	mov    rsi,rbx
  409cad:	mov    rdi,rax
  409cb0:	call   403170 <memcpy@plt>
  409cb5:	mov    QWORD PTR [rsp+0x10],rax
  409cba:	test   r13,r13
  409cbd:	je     409e81 <__gcov_sort_n_vals@@Base+0x651>
  409cc3:	mov    rax,QWORD PTR [rsp+0x10]
  409cc8:	add    rax,QWORD PTR [rsp+0x20]
  409ccd:	mov    r12,r13
  409cd0:	mov    DWORD PTR [rsp+0x60],r15d
  409cd5:	mov    QWORD PTR [rsp+0x58],rax
  409cda:	add    rax,0x1
  409cde:	mov    QWORD PTR [rsp+0x80],rax
  409ce6:	lea    rax,[rsp+0x1860]
  409cee:	mov    QWORD PTR [rsp+0x30],rax
  409cf3:	cmp    QWORD PTR [r12+0x68],0x0
  409cf9:	mov    QWORD PTR [rip+0x9eec],0x0        # 413bf0 <__bss_start@@Base+0x1d80>
  409d04:	mov    QWORD PTR [rip+0x9ed9],0x0        # 413be8 <__bss_start@@Base+0x1d78>
  409d0f:	je     409d5e <__gcov_sort_n_vals@@Base+0x52e>
  409d11:	mov    r11d,DWORD PTR [r12+0x70]
  409d16:	test   r11d,r11d
  409d19:	je     409d5e <__gcov_sort_n_vals@@Base+0x52e>
  409d1b:	xor    r13d,r13d
  409d1e:	xor    ebp,ebp
  409d20:	mov    rax,QWORD PTR [r12+0x78]
  409d25:	mov    rcx,QWORD PTR [rax+r13*1]
  409d29:	xor    eax,eax
  409d2b:	add    rcx,0x18
  409d2f:	nop
  409d30:	cmp    QWORD PTR [r12+rax*8+0x20],0x0
  409d36:	je     409d46 <__gcov_sort_n_vals@@Base+0x516>
  409d38:	cmp    rax,0x9
  409d3c:	je     409ec0 <__gcov_sort_n_vals@@Base+0x690>
  409d42:	add    rcx,0x10
  409d46:	add    rax,0x1
  409d4a:	cmp    rax,0xa
  409d4e:	jne    409d30 <__gcov_sort_n_vals@@Base+0x500>
  409d50:	add    ebp,0x1
  409d53:	add    r13,0x8
  409d57:	cmp    DWORD PTR [r12+0x70],ebp
  409d5c:	jne    409d20 <__gcov_sort_n_vals@@Base+0x4f0>
  409d5e:	mov    ebx,DWORD PTR [rsp+0x3c]
  409d62:	mov    rsi,QWORD PTR [r12+0x18]
  409d67:	mov    rdi,QWORD PTR [rsp+0x58]
  409d6c:	test   ebx,ebx
  409d6e:	je     409db5 <__gcov_sort_n_vals@@Base+0x585>
  409d70:	movzx  edx,BYTE PTR [rsi]
  409d73:	mov    rax,rsi
  409d76:	cmp    dl,0x2f
  409d79:	je     409fb0 <__gcov_sort_n_vals@@Base+0x780>
  409d7f:	test   dl,dl
  409d81:	je     409db5 <__gcov_sort_n_vals@@Base+0x585>
  409d83:	mov    ecx,DWORD PTR [rsp+0x3c]
  409d87:	jmp    409d9f <__gcov_sort_n_vals@@Base+0x56f>
  409d89:	nop    DWORD PTR [rax+0x0]
  409d90:	add    rax,0x1
  409d94:	movzx  edx,BYTE PTR [rax]
  409d97:	test   dl,dl
  409d99:	je     409db5 <__gcov_sort_n_vals@@Base+0x585>
  409d9b:	test   ecx,ecx
  409d9d:	je     409db5 <__gcov_sort_n_vals@@Base+0x585>
  409d9f:	cmp    dl,0x2f
  409da2:	jne    409d90 <__gcov_sort_n_vals@@Base+0x560>
  409da4:	mov    rsi,rax
  409da7:	add    rax,0x1
  409dab:	movzx  edx,BYTE PTR [rax]
  409dae:	sub    ecx,0x1
  409db1:	test   dl,dl
  409db3:	jne    409d9b <__gcov_sort_n_vals@@Base+0x56b>
  409db5:	cmp    QWORD PTR [rsp+0x20],0x0
  409dbb:	je     409dd2 <__gcov_sort_n_vals@@Base+0x5a2>
  409dbd:	cmp    BYTE PTR [rsi],0x2f
  409dc0:	je     409dd2 <__gcov_sort_n_vals@@Base+0x5a2>
  409dc2:	mov    rax,QWORD PTR [rsp+0x58]
  409dc7:	mov    rdi,QWORD PTR [rsp+0x80]
  409dcf:	mov    BYTE PTR [rax],0x2f
  409dd2:	call   403090 <strcpy@plt>
  409dd7:	mov    rdi,QWORD PTR [rsp+0x10]
  409ddc:	call   409170 <next@@Base+0xe10>
  409de1:	test   eax,eax
  409de3:	je     409f3e <__gcov_sort_n_vals@@Base+0x70e>
  409de9:	mov    edi,0x1
  409dee:	call   408f10 <next@@Base+0xbb0>
  409df3:	test   rax,rax
  409df6:	je     40a4be <__gcov_sort_n_vals@@Base+0xc8e>
  409dfc:	mov    eax,DWORD PTR [rax]
  409dfe:	test   eax,eax
  409e00:	je     40a4be <__gcov_sort_n_vals@@Base+0xc8e>
  409e06:	cmp    eax,0x67636461
  409e0b:	je     40a030 <__gcov_sort_n_vals@@Base+0x800>
  409e11:	mov    rsi,QWORD PTR [rsp+0x10]
  409e16:	lea    rdi,[rip+0x2b5b]        # 40c978 <UnityStrOk@@Base+0x2fc>
  409e1d:	xor    eax,eax
  409e1f:	call   408f90 <next@@Base+0xc30>
  409e24:	mov    rax,QWORD PTR [rip+0x9dc5]        # 413bf0 <__bss_start@@Base+0x1d80>
  409e2b:	test   rax,rax
  409e2e:	je     409e4c <__gcov_sort_n_vals@@Base+0x61c>
  409e30:	mov    edx,0xa
  409e35:	mov    rsi,rax
  409e38:	mov    rdi,r12
  409e3b:	call   409040 <next@@Base+0xce0>
  409e40:	test   rax,rax
  409e43:	mov    QWORD PTR [rip+0x9da6],rax        # 413bf0 <__bss_start@@Base+0x1d80>
  409e4a:	jne    409e30 <__gcov_sort_n_vals@@Base+0x600>
  409e4c:	call   4092a0 <next@@Base+0xf40>
  409e51:	test   eax,eax
  409e53:	je     409e73 <__gcov_sort_n_vals@@Base+0x643>
  409e55:	lea    rax,[rip+0x2ad4]        # 40c930 <UnityStrOk@@Base+0x2b4>
  409e5c:	lea    rdi,[rip+0x2beb]        # 40ca4e <UnityStrOk@@Base+0x3d2>
  409e63:	mov    rsi,QWORD PTR [rsp+0x10]
  409e68:	cmovs  rdi,rax
  409e6c:	xor    eax,eax
  409e6e:	call   408f90 <next@@Base+0xc30>
  409e73:	mov    r12,QWORD PTR [r12+0x8]
  409e78:	test   r12,r12
  409e7b:	jne    409cf3 <__gcov_sort_n_vals@@Base+0x4c3>
  409e81:	mov    rdi,QWORD PTR [rsp+0x10]
  409e86:	add    rsp,0x4808
  409e8d:	pop    rbx
  409e8e:	pop    rbp
  409e8f:	pop    r12
  409e91:	pop    r13
  409e93:	pop    r14
  409e95:	pop    r15
  409e97:	jmp    403040 <free@plt>
  409e9c:	mov    edx,DWORD PTR [rdi+0x10]
  409e9f:	jmp    4099c9 <__gcov_sort_n_vals@@Base+0x199>
  409ea4:	xor    r14d,r14d
  409ea7:	jmp    4099f8 <__gcov_sort_n_vals@@Base+0x1c8>
  409eac:	xor    edx,edx
  409eae:	jmp    4099c9 <__gcov_sort_n_vals@@Base+0x199>
  409eb3:	nop    DWORD PTR [rax+rax*1+0x0]
  409eb8:	mov    eax,edx
  409eba:	jmp    409be1 <__gcov_sort_n_vals@@Base+0x3b1>
  409ebf:	nop
  409ec0:	mov    r14d,DWORD PTR [rcx]
  409ec3:	mov    eax,0x38e38e39
  409ec8:	imul   r14d
  409ecb:	mov    eax,r14d
  409ece:	sar    eax,0x1f
  409ed1:	sar    edx,1
  409ed3:	mov    ebx,edx
  409ed5:	sub    ebx,eax
  409ed7:	lea    eax,[rbx+rbx*8]
  409eda:	mov    ebx,r14d
  409edd:	sub    ebx,eax
  409edf:	jne    40ab9a <__gcov_sort_n_vals@@Base+0x136a>
  409ee5:	mov    r15,QWORD PTR [rcx+0x8]
  409ee9:	add    r15,0x8
  409eed:	test   r14d,r14d
  409ef0:	jle    409d50 <__gcov_sort_n_vals@@Base+0x520>
  409ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f00:	mov    rdi,r15
  409f03:	mov    esi,0x8
  409f08:	add    ebx,0x9
  409f0b:	call   409830 <__gcov_sort_n_vals@@Base>
  409f10:	add    r15,0x48
  409f14:	cmp    r14d,ebx
  409f17:	jg     409f00 <__gcov_sort_n_vals@@Base+0x6d0>
  409f19:	add    ebp,0x1
  409f1c:	add    r13,0x8
  409f20:	cmp    DWORD PTR [r12+0x70],ebp
  409f25:	jne    409d20 <__gcov_sort_n_vals@@Base+0x4f0>
  409f2b:	jmp    409d5e <__gcov_sort_n_vals@@Base+0x52e>
  409f30:	mov    r12d,ebp
  409f33:	mov    r11d,0x1
  409f39:	jmp    409aa4 <__gcov_sort_n_vals@@Base+0x274>
  409f3e:	mov    rbx,QWORD PTR [rsp+0x10]
  409f43:	movzx  eax,BYTE PTR [rbx]
  409f46:	cmp    al,0x2f
  409f48:	je     40a020 <__gcov_sort_n_vals@@Base+0x7f0>
  409f4e:	test   al,al
  409f50:	je     409f8f <__gcov_sort_n_vals@@Base+0x75f>
  409f52:	mov    rbp,QWORD PTR [rsp+0x10]
  409f57:	jmp    409f6b <__gcov_sort_n_vals@@Base+0x73b>
  409f59:	nop    DWORD PTR [rax+0x0]
  409f60:	add    rbx,0x1
  409f64:	movzx  eax,BYTE PTR [rbx]
  409f67:	test   al,al
  409f69:	je     409f8f <__gcov_sort_n_vals@@Base+0x75f>
  409f6b:	cmp    al,0x2f
  409f6d:	jne    409f60 <__gcov_sort_n_vals@@Base+0x730>
  409f6f:	xor    esi,esi
  409f71:	mov    BYTE PTR [rbx],0x0
  409f74:	mov    rdi,rbp
  409f77:	call   4031e0 <access@plt>
  409f7c:	cmp    eax,0xffffffff
  409f7f:	je     409fbd <__gcov_sort_n_vals@@Base+0x78d>
  409f81:	mov    BYTE PTR [rbx],0x2f
  409f84:	add    rbx,0x1
  409f88:	movzx  eax,BYTE PTR [rbx]
  409f8b:	test   al,al
  409f8d:	jne    409f6b <__gcov_sort_n_vals@@Base+0x73b>
  409f8f:	mov    rdi,QWORD PTR [rsp+0x10]
  409f94:	call   409170 <next@@Base+0xe10>
  409f99:	test   eax,eax
  409f9b:	jne    409de9 <__gcov_sort_n_vals@@Base+0x5b9>
  409fa1:	mov    rcx,QWORD PTR [rsp+0x10]
  409fa6:	lea    rdx,[rip+0x2af0]        # 40ca9d <UnityStrOk@@Base+0x421>
  409fad:	jmp    409ffc <__gcov_sort_n_vals@@Base+0x7cc>
  409faf:	nop
  409fb0:	lea    rax,[rsi+0x1]
  409fb4:	movzx  edx,BYTE PTR [rsi+0x1]
  409fb8:	jmp    409d7f <__gcov_sort_n_vals@@Base+0x54f>
  409fbd:	mov    esi,0x1ed
  409fc2:	mov    rdi,rbp
  409fc5:	call   4030a0 <mkdir@plt>
  409fca:	cmp    eax,0xffffffff
  409fcd:	jne    409f81 <__gcov_sort_n_vals@@Base+0x751>
  409fcf:	call   403070 <__errno_location@plt>
  409fd4:	cmp    DWORD PTR [rax],0x11
  409fd7:	je     409f81 <__gcov_sort_n_vals@@Base+0x751>
  409fd9:	mov    r14,QWORD PTR [rsp+0x10]
  409fde:	lea    rdi,[rip+0x296b]        # 40c950 <UnityStrOk@@Base+0x2d4>
  409fe5:	xor    eax,eax
  409fe7:	mov    rsi,r14
  409fea:	call   408f90 <next@@Base+0xc30>
  409fef:	lea    rdx,[rip+0x2a94]        # 40ca8a <UnityStrOk@@Base+0x40e>
  409ff6:	mov    BYTE PTR [rbx],0x2f
  409ff9:	mov    rcx,r14
  409ffc:	mov    rax,QWORD PTR [rip+0x5ff5]        # 40fff8 <stderr@GLIBC_2.2.5>
  40a003:	mov    esi,0x1
  40a008:	mov    rdi,QWORD PTR [rax]
  40a00b:	xor    eax,eax
  40a00d:	call   403220 <__fprintf_chk@plt>
  40a012:	jmp    409e73 <__gcov_sort_n_vals@@Base+0x643>
  40a017:	nop    WORD PTR [rax+rax*1+0x0]
  40a020:	mov    rax,rbx
  40a023:	lea    rbx,[rbx+0x1]
  40a027:	movzx  eax,BYTE PTR [rax+0x1]
  40a02b:	jmp    409f4e <__gcov_sort_n_vals@@Base+0x71e>
  40a030:	mov    edi,0x1
  40a035:	call   408f10 <next@@Base+0xbb0>
  40a03a:	test   rax,rax
  40a03d:	je     40ab74 <__gcov_sort_n_vals@@Base+0x1344>
  40a043:	mov    esi,DWORD PTR [rax]
  40a045:	lea    rax,[r12+0x18]
  40a04a:	mov    rdx,QWORD PTR [rsp+0x10]
  40a04f:	mov    rdi,rax
  40a052:	mov    QWORD PTR [rsp+0x78],rax
  40a057:	call   4090b0 <next@@Base+0xd50>
  40a05c:	test   eax,eax
  40a05e:	je     409e24 <__gcov_sort_n_vals@@Base+0x5f4>
  40a064:	mov    edi,0x1
  40a069:	call   408f10 <next@@Base+0xbb0>
  40a06e:	test   rax,rax
  40a071:	je     40ab7b <__gcov_sort_n_vals@@Base+0x134b>
  40a077:	mov    eax,DWORD PTR [rax]
  40a079:	cmp    DWORD PTR [r12+0x10],eax
  40a07e:	jne    40a4be <__gcov_sort_n_vals@@Base+0xc8e>
  40a084:	mov    r15,0x413d40
  40a08b:	lea    rbx,[rip+0x9b56]        # 413be8 <__bss_start@@Base+0x1d78>
  40a092:	lea    rbp,[rsp+0x3030]
  40a09a:	xor    r13d,r13d
  40a09d:	mov    eax,DWORD PTR [r15+0xc]
  40a0a1:	add    eax,DWORD PTR [r15+0x8]
  40a0a5:	mov    edi,0x1
  40a0aa:	mov    DWORD PTR [rsp+0x28],eax
  40a0ae:	call   408f10 <next@@Base+0xbb0>
  40a0b3:	test   rax,rax
  40a0b6:	je     40a158 <__gcov_sort_n_vals@@Base+0x928>
  40a0bc:	mov    eax,DWORD PTR [rax]
  40a0be:	cmp    eax,0xa3000000
  40a0c3:	jne    40ab6a <__gcov_sort_n_vals@@Base+0x133a>
  40a0c9:	mov    edi,0x1
  40a0ce:	call   408f10 <next@@Base+0xbb0>
  40a0d3:	mov    rdi,rbp
  40a0d6:	call   409550 <next@@Base+0x11f0>
  40a0db:	cmp    QWORD PTR [r15],0x0
  40a0df:	je     40a49f <__gcov_sort_n_vals@@Base+0xc6f>
  40a0e5:	mov    eax,DWORD PTR [r15+0x18]
  40a0e9:	test   eax,eax
  40a0eb:	jne    40a494 <__gcov_sort_n_vals@@Base+0xc64>
  40a0f1:	test   r13d,r13d
  40a0f4:	jne    40a12d <__gcov_sort_n_vals@@Base+0x8fd>
  40a0f6:	mov    eax,DWORD PTR [rsp+0x60]
  40a0fa:	cmp    DWORD PTR [rsp+0x3030],eax
  40a101:	jne    40a09d <__gcov_sort_n_vals@@Base+0x86d>
  40a103:	mov    eax,DWORD PTR [rsp+0x98]
  40a10a:	cmp    DWORD PTR [rsp+0x3038],eax
  40a111:	jne    40a09d <__gcov_sort_n_vals@@Base+0x86d>
  40a113:	mov    ecx,0x2f9
  40a118:	mov    rdi,QWORD PTR [rsp+0x30]
  40a11d:	mov    rsi,rbp
  40a120:	mov    r13d,DWORD PTR [rsp+0x28]
  40a125:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a128:	jmp    40a09d <__gcov_sort_n_vals@@Base+0x86d>
  40a12d:	mov    edi,0x17d0
  40a132:	call   403180 <malloc@plt>
  40a137:	mov    ecx,0x2f9
  40a13c:	mov    QWORD PTR [rbx],rax
  40a13f:	lea    rdi,[rax+0x8]
  40a143:	mov    rsi,rbp
  40a146:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a149:	mov    QWORD PTR [rax],0x0
  40a150:	mov    rbx,QWORD PTR [rbx]
  40a153:	jmp    40a09d <__gcov_sort_n_vals@@Base+0x86d>
  40a158:	mov    DWORD PTR [rsp+0x18],r13d
  40a15d:	xor    eax,eax
  40a15f:	lea    rbx,[rip+0x9a8a]        # 413bf0 <__bss_start@@Base+0x1d80>
  40a166:	mov    QWORD PTR [rsp+0x48],0x0
  40a16f:	mov    QWORD PTR [rsp+0x70],r15
  40a174:	mov    QWORD PTR [rsp+0x50],rbx
  40a179:	mov    rbx,QWORD PTR [rsp+0x48]
  40a17e:	cmp    ebx,DWORD PTR [r12+0x70]
  40a183:	mov    DWORD PTR [rsp+0x88],ebx
  40a18a:	mov    DWORD PTR [rsp+0x64],ebx
  40a18e:	je     40acc5 <__gcov_sort_n_vals@@Base+0x1495>
  40a194:	mov    rdx,QWORD PTR [r12+0x78]
  40a199:	mov    rbx,QWORD PTR [rsp+0x48]
  40a19e:	cmp    eax,0x1000000
  40a1a3:	mov    rbx,QWORD PTR [rdx+rbx*8]
  40a1a7:	jne    40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40a1ad:	mov    edi,0x1
  40a1b2:	call   408f10 <next@@Base+0xbb0>
  40a1b7:	test   rax,rax
  40a1ba:	je     40a379 <__gcov_sort_n_vals@@Base+0xb49>
  40a1c0:	mov    eax,DWORD PTR [rax]
  40a1c2:	test   eax,eax
  40a1c4:	je     40a379 <__gcov_sort_n_vals@@Base+0xb49>
  40a1ca:	cmp    eax,0x3
  40a1cd:	jne    40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40a1d3:	test   rbx,rbx
  40a1d6:	je     40a1e1 <__gcov_sort_n_vals@@Base+0x9b1>
  40a1d8:	cmp    QWORD PTR [rbx],r12
  40a1db:	je     40ac19 <__gcov_sort_n_vals@@Base+0x13e9>
  40a1e1:	mov    rcx,QWORD PTR [rsp+0x78]
  40a1e6:	lea    rdx,[r12+0x68]
  40a1eb:	xor    eax,eax
  40a1ed:	cmp    QWORD PTR [rdx],0x1
  40a1f1:	sbb    eax,0xffffffff
  40a1f4:	sub    rdx,0x8
  40a1f8:	cmp    rdx,rcx
  40a1fb:	jne    40a1ed <__gcov_sort_n_vals@@Base+0x9bd>
  40a1fd:	shl    eax,0x4
  40a200:	lea    edi,[rax+0x38]
  40a203:	mov    DWORD PTR [rsp+0x40],edi
  40a207:	call   403180 <malloc@plt>
  40a20c:	test   rax,rax
  40a20f:	mov    r13,rax
  40a212:	mov    ecx,DWORD PTR [rsp+0x40]
  40a216:	je     40a40c <__gcov_sort_n_vals@@Base+0xbdc>
  40a21c:	mov    QWORD PTR [rax],0x0
  40a223:	mov    eax,DWORD PTR [rsp+0x64]
  40a227:	mov    edi,0x1
  40a22c:	mov    DWORD PTR [r13+0x8],eax
  40a230:	call   408f10 <next@@Base+0xbb0>
  40a235:	test   rax,rax
  40a238:	je     40ac12 <__gcov_sort_n_vals@@Base+0x13e2>
  40a23e:	mov    eax,DWORD PTR [rax]
  40a240:	mov    DWORD PTR [r13+0x18],eax
  40a244:	mov    edi,0x1
  40a249:	call   408f10 <next@@Base+0xbb0>
  40a24e:	test   rax,rax
  40a251:	je     40ac0b <__gcov_sort_n_vals@@Base+0x13db>
  40a257:	mov    eax,DWORD PTR [rax]
  40a259:	mov    DWORD PTR [r13+0x1c],eax
  40a25d:	mov    edi,0x1
  40a262:	call   408f10 <next@@Base+0xbb0>
  40a267:	test   rax,rax
  40a26a:	je     40ac04 <__gcov_sort_n_vals@@Base+0x13d4>
  40a270:	mov    eax,DWORD PTR [rax]
  40a272:	mov    DWORD PTR [r13+0x20],eax
  40a276:	mov    r14d,0x1a10000
  40a27c:	xor    ebx,ebx
  40a27e:	mov    DWORD PTR [rsp+0x68],0x0
  40a286:	mov    QWORD PTR [rsp+0x40],r13
  40a28b:	cmp    QWORD PTR [r12+rbx*8+0x20],0x0
  40a291:	mov    ebp,ebx
  40a293:	je     40a34f <__gcov_sort_n_vals@@Base+0xb1f>
  40a299:	mov    edi,0x1
  40a29e:	call   408f10 <next@@Base+0xbb0>
  40a2a3:	test   rax,rax
  40a2a6:	je     40a399 <__gcov_sort_n_vals@@Base+0xb69>
  40a2ac:	cmp    r14d,DWORD PTR [rax]
  40a2af:	jne    40a399 <__gcov_sort_n_vals@@Base+0xb69>
  40a2b5:	mov    edi,0x1
  40a2ba:	call   408f10 <next@@Base+0xbb0>
  40a2bf:	test   rax,rax
  40a2c2:	je     40a400 <__gcov_sort_n_vals@@Base+0xbd0>
  40a2c8:	mov    esi,DWORD PTR [rax]
  40a2ca:	shr    esi,1
  40a2cc:	lea    edi,[rsi*8+0x0]
  40a2d3:	mov    r15,rdi
  40a2d6:	mov    DWORD PTR [rsp+0x8c],esi
  40a2dd:	call   403180 <malloc@plt>
  40a2e2:	test   rax,rax
  40a2e5:	mov    r13,rax
  40a2e8:	je     40abf5 <__gcov_sort_n_vals@@Base+0x13c5>
  40a2ee:	mov    eax,DWORD PTR [rsp+0x68]
  40a2f2:	mov    esi,DWORD PTR [rsp+0x8c]
  40a2f9:	shl    rax,0x4
  40a2fd:	add    rax,QWORD PTR [rsp+0x40]
  40a302:	test   esi,esi
  40a304:	mov    DWORD PTR [rax+0x28],esi
  40a307:	mov    QWORD PTR [rax+0x30],r13
  40a30b:	lea    eax,[rsi-0x1]
  40a30e:	lea    rbp,[r13+rax*8+0x8]
  40a313:	jne    40a32c <__gcov_sort_n_vals@@Base+0xafc>
  40a315:	jmp    40a34a <__gcov_sort_n_vals@@Base+0xb1a>
  40a317:	nop    WORD PTR [rax+rax*1+0x0]
  40a320:	mov    rax,QWORD PTR [rax]
  40a323:	cmp    rbp,r13
  40a326:	mov    QWORD PTR [r13-0x8],rax
  40a32a:	je     40a34a <__gcov_sort_n_vals@@Base+0xb1a>
  40a32c:	mov    edi,0x2
  40a331:	add    r13,0x8
  40a335:	call   408f10 <next@@Base+0xbb0>
  40a33a:	test   rax,rax
  40a33d:	jne    40a320 <__gcov_sort_n_vals@@Base+0xaf0>
  40a33f:	xor    eax,eax
  40a341:	cmp    rbp,r13
  40a344:	mov    QWORD PTR [r13-0x8],rax
  40a348:	jne    40a32c <__gcov_sort_n_vals@@Base+0xafc>
  40a34a:	add    DWORD PTR [rsp+0x68],0x1
  40a34f:	add    r14d,0x20000
  40a356:	add    rbx,0x1
  40a35a:	cmp    r14d,0x1b50000
  40a361:	jne    40a28b <__gcov_sort_n_vals@@Base+0xa5b>
  40a367:	mov    r13,QWORD PTR [rsp+0x40]
  40a36c:	mov    rax,QWORD PTR [rsp+0x50]
  40a371:	mov    QWORD PTR [rsp+0x50],r13
  40a376:	mov    QWORD PTR [rax],r13
  40a379:	mov    edi,0x1
  40a37e:	call   408f10 <next@@Base+0xbb0>
  40a383:	test   rax,rax
  40a386:	je     40a430 <__gcov_sort_n_vals@@Base+0xc00>
  40a38c:	mov    eax,DWORD PTR [rax]
  40a38e:	add    QWORD PTR [rsp+0x48],0x1
  40a394:	jmp    40a179 <__gcov_sort_n_vals@@Base+0x949>
  40a399:	mov    r13,QWORD PTR [rsp+0x40]
  40a39e:	lea    rcx,[rip+0x2689]        # 40ca2e <UnityStrOk@@Base+0x3b2>
  40a3a5:	mov    edx,DWORD PTR [rsp+0x64]
  40a3a9:	mov    rsi,QWORD PTR [rsp+0x10]
  40a3ae:	lea    rdi,[rip+0x2613]        # 40c9c8 <UnityStrOk@@Base+0x34c>
  40a3b5:	mov    r8d,ebp
  40a3b8:	xor    eax,eax
  40a3ba:	call   408f90 <next@@Base+0xc30>
  40a3bf:	mov    edx,ebx
  40a3c1:	mov    rsi,r13
  40a3c4:	mov    rdi,r12
  40a3c7:	call   409040 <next@@Base+0xce0>
  40a3cc:	test   rax,rax
  40a3cf:	mov    QWORD PTR [rsp+0x50],rax
  40a3d4:	jne    40a379 <__gcov_sort_n_vals@@Base+0xb49>
  40a3d6:	mov    ecx,DWORD PTR [rsp+0x88]
  40a3dd:	mov    rsi,QWORD PTR [rsp+0x10]
  40a3e2:	lea    rdx,[rip+0x1d09]        # 40c0f2 <_IO_stdin_used@@Base+0xf2>
  40a3e9:	lea    rdi,[rip+0x25b0]        # 40c9a0 <UnityStrOk@@Base+0x324>
  40a3f0:	xor    eax,eax
  40a3f2:	call   408f90 <next@@Base+0xc30>
  40a3f7:	jmp    409e24 <__gcov_sort_n_vals@@Base+0x5f4>
  40a3fc:	nop    DWORD PTR [rax+0x0]
  40a400:	xor    edi,edi
  40a402:	xor    r15d,r15d
  40a405:	xor    esi,esi
  40a407:	jmp    40a2d6 <__gcov_sort_n_vals@@Base+0xaa6>
  40a40c:	mov    ebx,0xffffffff
  40a411:	test   ecx,ecx
  40a413:	je     40abe7 <__gcov_sort_n_vals@@Base+0x13b7>
  40a419:	mov    ebp,ecx
  40a41b:	lea    rcx,[rip+0x25fc]        # 40ca1e <UnityStrOk@@Base+0x3a2>
  40a422:	jmp    40a3a5 <__gcov_sort_n_vals@@Base+0xb75>
  40a427:	nop    WORD PTR [rax+rax*1+0x0]
  40a430:	xor    eax,eax
  40a432:	jmp    40a38e <__gcov_sort_n_vals@@Base+0xb5e>
  40a437:	mov    edi,0x1
  40a43c:	call   408f10 <next@@Base+0xbb0>
  40a441:	test   rax,rax
  40a444:	je     40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40a446:	xor    r15d,r15d
  40a449:	mov    eax,DWORD PTR [rax]
  40a44b:	cmp    ebp,r15d
  40a44e:	jne    40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40a450:	mov    esi,DWORD PTR [rbx]
  40a452:	lea    edx,[rsi+rsi*1]
  40a455:	cmp    edx,eax
  40a457:	jne    40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40a45d:	mov    rdi,QWORD PTR [rbx+0x8]
  40a461:	add    rbx,0x10
  40a465:	call   r14
  40a468:	add    ebp,0x20000
  40a46e:	add    r13,0x8
  40a472:	cmp    ebp,0x1b50000
  40a478:	jne    40ac79 <__gcov_sort_n_vals@@Base+0x1449>
  40a47e:	mov    rax,QWORD PTR [rsp+0x70]
  40a483:	cmp    QWORD PTR [rax],0x0
  40a487:	je     40a49f <__gcov_sort_n_vals@@Base+0xc6f>
  40a489:	mov    eax,DWORD PTR [rax+0x18]
  40a48c:	test   eax,eax
  40a48e:	je     40a379 <__gcov_sort_n_vals@@Base+0xb49>
  40a494:	test   eax,eax
  40a496:	lea    rdx,[rip+0x25a2]        # 40ca3f <UnityStrOk@@Base+0x3c3>
  40a49d:	js     40a4a6 <__gcov_sort_n_vals@@Base+0xc76>
  40a49f:	lea    rdx,[rip+0x25a2]        # 40ca48 <UnityStrOk@@Base+0x3cc>
  40a4a6:	mov    rsi,QWORD PTR [rsp+0x10]
  40a4ab:	lea    rdi,[rip+0x2605]        # 40cab7 <UnityStrOk@@Base+0x43b>
  40a4b2:	xor    eax,eax
  40a4b4:	call   408f90 <next@@Base+0xc30>
  40a4b9:	jmp    409e24 <__gcov_sort_n_vals@@Base+0x5f4>
  40a4be:	mov    r15,0x413d40
  40a4c5:	xor    edx,edx
  40a4c7:	xor    esi,esi
  40a4c9:	mov    rdi,QWORD PTR [r15]
  40a4cc:	mov    DWORD PTR [r15+0x1c],0xffffffff
  40a4d4:	mov    DWORD PTR [r15+0x8],0x0
  40a4dc:	mov    DWORD PTR [r15+0xc],0x0
  40a4e4:	call   4031a0 <fseek@plt>
  40a4e9:	mov    rdi,QWORD PTR [rsp+0x30]
  40a4ee:	xor    eax,eax
  40a4f0:	mov    ecx,0x2f9
  40a4f5:	rep stos QWORD PTR es:[rdi],rax
  40a4f8:	cmp    QWORD PTR [r12+0x20],0x0
  40a4fe:	je     40aaa0 <__gcov_sort_n_vals@@Base+0x1270>
  40a504:	mov    DWORD PTR [rsp+0x28],0x0
  40a50c:	xor    eax,eax
  40a50e:	mov    DWORD PTR [rsp+0x18],0x0
  40a516:	mov    r9d,DWORD PTR [rsp+0x6c]
  40a51b:	test   r9d,r9d
  40a51e:	jne    40a52a <__gcov_sort_n_vals@@Base+0xcfa>
  40a520:	lea    edx,[rax+0x1]
  40a523:	mov    DWORD PTR [rsp+0x186c],edx
  40a52a:	test   eax,eax
  40a52c:	je     40aa19 <__gcov_sort_n_vals@@Base+0x11e9>
  40a532:	mov    rax,QWORD PTR [rsp+0xa0]
  40a53a:	add    QWORD PTR [rsp+0x1870],rax
  40a542:	mov    rax,QWORD PTR [rsp+0xa8]
  40a54a:	cmp    QWORD PTR [rsp+0x1878],rax
  40a552:	jl     40ab8d <__gcov_sort_n_vals@@Base+0x135d>
  40a558:	lea    rdi,[rsp+0x3030]
  40a560:	add    QWORD PTR [rsp+0x1880],rax
  40a568:	mov    ecx,0x2f4
  40a56d:	xor    eax,eax
  40a56f:	xor    r11d,r11d
  40a572:	xor    r14d,r14d
  40a575:	mov    QWORD PTR [rsp+0x40],rdi
  40a57a:	mov    esi,0xfb
  40a57f:	mov    r8d,0xfb
  40a585:	rep stos QWORD PTR es:[rdi],rax
  40a588:	mov    rax,QWORD PTR [rsp+0x30]
  40a58d:	xor    edi,edi
  40a58f:	lea    rbp,[rax+0x17b0]
  40a596:	mov    rax,QWORD PTR [rsp+0x8]
  40a59b:	lea    r15,[rax+0x28]
  40a59f:	mov    r10d,DWORD PTR [rbp+0x0]
  40a5a3:	mov    rbx,QWORD PTR [rbp+0x10]
  40a5a7:	mov    ecx,r14d
  40a5aa:	test   r10d,r10d
  40a5ad:	je     40a93f <__gcov_sort_n_vals@@Base+0x110f>
  40a5b3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5b8:	test   edi,edi
  40a5ba:	jne    40a8b0 <__gcov_sort_n_vals@@Base+0x1080>
  40a5c0:	test   esi,esi
  40a5c2:	js     40a60a <__gcov_sort_n_vals@@Base+0xdda>
  40a5c4:	movsxd rax,esi
  40a5c7:	lea    rax,[rax+rax*2]
  40a5cb:	shl    rax,0x3
  40a5cf:	lea    rdx,[r15+rax*1]
  40a5d3:	mov    edi,DWORD PTR [rdx]
  40a5d5:	test   edi,edi
  40a5d7:	jne    40aa10 <__gcov_sort_n_vals@@Base+0x11e0>
  40a5dd:	mov    rdi,QWORD PTR [rsp+0x8]
  40a5e2:	lea    rax,[rdi+rax*1+0x10]
  40a5e7:	jmp    40a602 <__gcov_sort_n_vals@@Base+0xdd2>
  40a5e9:	nop    DWORD PTR [rax+0x0]
  40a5f0:	mov    rdx,rax
  40a5f3:	sub    rax,0x18
  40a5f7:	mov    edi,DWORD PTR [rax+0x18]
  40a5fa:	test   edi,edi
  40a5fc:	jne    40aa10 <__gcov_sort_n_vals@@Base+0x11e0>
  40a602:	sub    esi,0x1
  40a605:	cmp    esi,0xffffffff
  40a608:	jne    40a5f0 <__gcov_sort_n_vals@@Base+0xdc0>
  40a60a:	movsxd rdx,r8d
  40a60d:	movsxd r14,ecx
  40a610:	mov    rcx,QWORD PTR [rbp+0x8]
  40a614:	lea    rax,[rdx+rdx*2]
  40a618:	shl    rax,0x3
  40a61c:	add    DWORD PTR [rsp+rax*1+0x3030],r10d
  40a624:	add    QWORD PTR [rsp+rax*1+0x3040],rbx
  40a62c:	mov    rax,QWORD PTR [rsp+rax*1+0x3038]
  40a634:	test   rax,rax
  40a637:	je     40a63e <__gcov_sort_n_vals@@Base+0xe0e>
  40a639:	cmp    rax,rcx
  40a63c:	jle    40a64a <__gcov_sort_n_vals@@Base+0xe1a>
  40a63e:	lea    rax,[rdx+rdx*2]
  40a642:	mov    QWORD PTR [rsp+rax*8+0x3038],rcx
  40a64a:	lea    rax,[rdx+rdx*2]
  40a64e:	mov    rbx,QWORD PTR [rsp+0x30]
  40a653:	shl    rax,0x3
  40a657:	lea    rdx,[rbx+rax*1+0x10]
  40a65c:	mov    rbx,QWORD PTR [rsp+0x40]
  40a661:	lea    rax,[rbx+rax*1-0x18]
  40a666:	jmp    40a69a <__gcov_sort_n_vals@@Base+0xe6a>
  40a668:	nop    DWORD PTR [rax+rax*1+0x0]
  40a670:	mov    ecx,DWORD PTR [rdx]
  40a672:	add    DWORD PTR [rax],ecx
  40a674:	mov    rcx,QWORD PTR [rdx+0x10]
  40a678:	add    QWORD PTR [rax+0x10],rcx
  40a67c:	mov    rcx,QWORD PTR [rax+0x8]
  40a680:	mov    rsi,QWORD PTR [rdx+0x8]
  40a684:	test   rcx,rcx
  40a687:	je     40a68e <__gcov_sort_n_vals@@Base+0xe5e>
  40a689:	cmp    rcx,rsi
  40a68c:	jle    40a692 <__gcov_sort_n_vals@@Base+0xe62>
  40a68e:	mov    QWORD PTR [rax+0x8],rsi
  40a692:	sub    rdx,0x18
  40a696:	sub    rax,0x18
  40a69a:	sub    r8d,0x1
  40a69e:	jns    40a670 <__gcov_sort_n_vals@@Base+0xe40>
  40a6a0:	lea    rax,[r14+r14*2]
  40a6a4:	lea    rdi,[rsp+0x1888]
  40a6ac:	mov    ecx,0x2f4
  40a6b1:	mov    rsi,QWORD PTR [rsp+0x40]
  40a6b6:	add    QWORD PTR [rsp+rax*8+0x3040],r11
  40a6be:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40a6c1:	mov    r8d,DWORD PTR [rsp+0x28]
  40a6c6:	mov    eax,DWORD PTR [rsp+0x60]
  40a6ca:	test   r8d,r8d
  40a6cd:	mov    DWORD PTR [rsp+0x1860],eax
  40a6d4:	je     40aab3 <__gcov_sort_n_vals@@Base+0x1283>
  40a6da:	mov    edi,DWORD PTR [rsp+0x18]
  40a6de:	test   edi,edi
  40a6e0:	jne    40aae7 <__gcov_sort_n_vals@@Base+0x12b7>
  40a6e6:	mov    rsi,QWORD PTR [rsp+0x30]
  40a6eb:	mov    edi,0xa3000000
  40a6f0:	mov    ebx,0xa3000000
  40a6f5:	call   409360 <next@@Base+0x1000>
  40a6fa:	mov    rbp,QWORD PTR [rip+0x94e7]        # 413be8 <__bss_start@@Base+0x1d78>
  40a701:	test   rbp,rbp
  40a704:	je     40a72c <__gcov_sort_n_vals@@Base+0xefc>
  40a706:	lea    rsi,[rbp+0x8]
  40a70a:	mov    edi,ebx
  40a70c:	call   409360 <next@@Base+0x1000>
  40a711:	mov    rdi,QWORD PTR [rip+0x94d0]        # 413be8 <__bss_start@@Base+0x1d78>
  40a718:	mov    rbp,QWORD PTR [rdi]
  40a71b:	call   403040 <free@plt>
  40a720:	test   rbp,rbp
  40a723:	mov    QWORD PTR [rip+0x94be],rbp        # 413be8 <__bss_start@@Base+0x1d78>
  40a72a:	jne    40a706 <__gcov_sort_n_vals@@Base+0xed6>
  40a72c:	mov    esi,DWORD PTR [r12+0x70]
  40a731:	mov    DWORD PTR [rsp+0x18],0x0
  40a739:	test   esi,esi
  40a73b:	je     40aa8b <__gcov_sort_n_vals@@Base+0x125b>
  40a741:	mov    QWORD PTR [rsp+0x28],r12
  40a746:	jmp    40a796 <__gcov_sort_n_vals@@Base+0xf66>
  40a748:	mov    rbx,QWORD PTR [rsp+0x28]
  40a74d:	mov    eax,DWORD PTR [rsp+0x18]
  40a751:	mov    rdx,QWORD PTR [rbx+0x78]
  40a755:	mov    rbp,QWORD PTR [rdx+rax*8]
  40a759:	test   rbp,rbp
  40a75c:	je     40a768 <__gcov_sort_n_vals@@Base+0xf38>
  40a75e:	cmp    QWORD PTR [rbp+0x0],rbx
  40a762:	je     40aa7b <__gcov_sort_n_vals@@Base+0x124b>
  40a768:	mov    edi,0x2
  40a76d:	call   408ec0 <next@@Base+0xb60>
  40a772:	mov    DWORD PTR [rax],0x1000000
  40a778:	mov    DWORD PTR [rax+0x4],0x0
  40a77f:	mov    rbx,QWORD PTR [rsp+0x28]
  40a784:	add    DWORD PTR [rsp+0x18],0x1
  40a789:	mov    eax,DWORD PTR [rsp+0x18]
  40a78d:	cmp    eax,DWORD PTR [rbx+0x70]
  40a790:	je     40aa88 <__gcov_sort_n_vals@@Base+0x1258>
  40a796:	mov    rbp,QWORD PTR [rip+0x9453]        # 413bf0 <__bss_start@@Base+0x1d80>
  40a79d:	test   rbp,rbp
  40a7a0:	je     40a748 <__gcov_sort_n_vals@@Base+0xf18>
  40a7a2:	mov    eax,DWORD PTR [rsp+0x18]
  40a7a6:	cmp    DWORD PTR [rbp+0x8],eax
  40a7a9:	jne    40a748 <__gcov_sort_n_vals@@Base+0xf18>
  40a7ab:	add    rbp,0x10
  40a7af:	mov    DWORD PTR [rsp+0x40],0x1
  40a7b7:	mov    edi,0x2
  40a7bc:	add    rbp,0x18
  40a7c0:	mov    r13d,0x1a10000
  40a7c6:	call   408ec0 <next@@Base+0xb60>
  40a7cb:	mov    DWORD PTR [rax],0x1000000
  40a7d1:	mov    DWORD PTR [rax+0x4],0x3
  40a7d8:	mov    edi,0x1
  40a7dd:	mov    ebx,DWORD PTR [rbp-0x10]
  40a7e0:	call   408ec0 <next@@Base+0xb60>
  40a7e5:	mov    edi,0x1
  40a7ea:	mov    DWORD PTR [rax],ebx
  40a7ec:	mov    ebx,DWORD PTR [rbp-0xc]
  40a7ef:	call   408ec0 <next@@Base+0xb60>
  40a7f4:	mov    edi,0x1
  40a7f9:	mov    DWORD PTR [rax],ebx
  40a7fb:	mov    ebx,DWORD PTR [rbp-0x8]
  40a7fe:	call   408ec0 <next@@Base+0xb60>
  40a803:	mov    DWORD PTR [rax],ebx
  40a805:	mov    rax,QWORD PTR [rsp+0x28]
  40a80a:	lea    r14,[rax+0x20]
  40a80e:	xchg   ax,ax
  40a810:	cmp    QWORD PTR [r14],0x0
  40a814:	je     40a864 <__gcov_sort_n_vals@@Base+0x1034>
  40a816:	mov    ebx,DWORD PTR [rbp+0x0]
  40a819:	mov    edi,0x2
  40a81e:	call   408ec0 <next@@Base+0xb60>
  40a823:	mov    r15,QWORD PTR [rbp+0x8]
  40a827:	mov    DWORD PTR [rax],r13d
  40a82a:	lea    edx,[rbx+rbx*1]
  40a82d:	test   ebx,ebx
  40a82f:	mov    DWORD PTR [rax+0x4],edx
  40a832:	lea    eax,[rbx-0x1]
  40a835:	lea    r12,[r15+rax*8+0x8]
  40a83a:	je     40a860 <__gcov_sort_n_vals@@Base+0x1030>
  40a83c:	nop    DWORD PTR [rax+0x0]
  40a840:	add    r15,0x8
  40a844:	mov    rbx,QWORD PTR [r15-0x8]
  40a848:	mov    edi,0x2
  40a84d:	call   408ec0 <next@@Base+0xb60>
  40a852:	mov    DWORD PTR [rax],ebx
  40a854:	sar    rbx,0x20
  40a858:	cmp    r12,r15
  40a85b:	mov    DWORD PTR [rax+0x4],ebx
  40a85e:	jne    40a840 <__gcov_sort_n_vals@@Base+0x1010>
  40a860:	add    rbp,0x10
  40a864:	add    r13d,0x20000
  40a86b:	add    r14,0x8
  40a86f:	cmp    r13d,0x1b50000
  40a876:	jne    40a810 <__gcov_sort_n_vals@@Base+0xfe0>
  40a878:	mov    ecx,DWORD PTR [rsp+0x40]
  40a87c:	test   ecx,ecx
  40a87e:	je     40a77f <__gcov_sort_n_vals@@Base+0xf4f>
  40a884:	mov    rsi,QWORD PTR [rip+0x9365]        # 413bf0 <__bss_start@@Base+0x1d80>
  40a88b:	mov    rdi,QWORD PTR [rsp+0x28]
  40a890:	mov    edx,0xa
  40a895:	call   409040 <next@@Base+0xce0>
  40a89a:	mov    QWORD PTR [rip+0x934f],rax        # 413bf0 <__bss_start@@Base+0x1d80>
  40a8a1:	jmp    40a77f <__gcov_sort_n_vals@@Base+0xf4f>
  40a8a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a8b0:	movsxd rax,esi
  40a8b3:	lea    rax,[rax+rax*2]
  40a8b7:	lea    rdx,[r15+rax*8]
  40a8bb:	mov    r9,QWORD PTR [rdx+0x8]
  40a8bf:	add    r9,QWORD PTR [rbp+0x8]
  40a8c3:	cmp    r10d,edi
  40a8c6:	ja     40a9e0 <__gcov_sort_n_vals@@Base+0x11b0>
  40a8cc:	cmp    r10d,edi
  40a8cf:	jae    40ab82 <__gcov_sort_n_vals@@Base+0x1352>
  40a8d5:	mov    eax,r10d
  40a8d8:	mov    ecx,edi
  40a8da:	imul   rax,r11
  40a8de:	cqo    
  40a8e0:	idiv   rcx
  40a8e3:	sub    r11,rax
  40a8e6:	sub    edi,r10d
  40a8e9:	mov    r14d,r10d
  40a8ec:	mov    r13,rbx
  40a8ef:	xor    r10d,r10d
  40a8f2:	xor    ebx,ebx
  40a8f4:	add    r13,rax
  40a8f7:	test   r9,r9
  40a8fa:	jne    40a9a0 <__gcov_sort_n_vals@@Base+0x1170>
  40a900:	mov    ecx,r9d
  40a903:	movsxd rdx,ecx
  40a906:	lea    rax,[rdx+rdx*2]
  40a90a:	shl    rax,0x3
  40a90e:	add    DWORD PTR [rsp+rax*1+0x3030],r14d
  40a916:	add    QWORD PTR [rsp+rax*1+0x3040],r13
  40a91e:	mov    rax,QWORD PTR [rsp+rax*1+0x3038]
  40a926:	test   rax,rax
  40a929:	je     40a990 <__gcov_sort_n_vals@@Base+0x1160>
  40a92b:	cmp    rax,r9
  40a92e:	jg     40a990 <__gcov_sort_n_vals@@Base+0x1160>
  40a930:	cmp    edi,0x1
  40a933:	sbb    esi,0x0
  40a936:	test   r10d,r10d
  40a939:	jne    40a5b8 <__gcov_sort_n_vals@@Base+0xd88>
  40a93f:	sub    r8d,0x1
  40a943:	sub    rbp,0x18
  40a947:	movsxd r14,ecx
  40a94a:	cmp    r8d,0xffffffff
  40a94e:	jne    40a59f <__gcov_sort_n_vals@@Base+0xd6f>
  40a954:	cmp    edi,0x1
  40a957:	adc    esi,0xffffffff
  40a95a:	test   esi,esi
  40a95c:	js     40a6a0 <__gcov_sort_n_vals@@Base+0xe70>
  40a962:	mov    rbx,QWORD PTR [rsp+0x8]
  40a967:	movsxd rsi,esi
  40a96a:	lea    rax,[rsi+rsi*2]
  40a96e:	lea    rdx,[rbx+0x20]
  40a972:	lea    rax,[rbx+rax*8+0x38]
  40a977:	add    r11,QWORD PTR [rax]
  40a97a:	sub    rax,0x18
  40a97e:	cmp    rdx,rax
  40a981:	jne    40a977 <__gcov_sort_n_vals@@Base+0x1147>
  40a983:	jmp    40a6a0 <__gcov_sort_n_vals@@Base+0xe70>
  40a988:	nop    DWORD PTR [rax+rax*1+0x0]
  40a990:	lea    rax,[rdx+rdx*2]
  40a994:	mov    QWORD PTR [rsp+rax*8+0x3038],r9
  40a99c:	jmp    40a930 <__gcov_sort_n_vals@@Base+0x1100>
  40a99e:	xchg   ax,ax
  40a9a0:	bsr    rax,r9
  40a9a4:	mov    edx,0x3f
  40a9a9:	xor    rax,0x3f
  40a9ad:	sub    edx,eax
  40a9af:	cmp    edx,0x1
  40a9b2:	jbe    40a900 <__gcov_sort_n_vals@@Base+0x10d0>
  40a9b8:	mov    ecx,0x3d
  40a9bd:	mov    rdx,r9
  40a9c0:	sub    ecx,eax
  40a9c2:	shr    rdx,cl
  40a9c5:	mov    ecx,0x4000003e
  40a9ca:	and    edx,0x3
  40a9cd:	sub    ecx,eax
  40a9cf:	lea    ecx,[rdx+rcx*4]
  40a9d2:	jmp    40a903 <__gcov_sort_n_vals@@Base+0x10d3>
  40a9d7:	nop    WORD PTR [rax+rax*1+0x0]
  40a9e0:	mov    eax,edi
  40a9e2:	mov    ecx,r10d
  40a9e5:	mov    r14d,edi
  40a9e8:	imul   rax,rbx
  40a9ec:	sub    r10d,edi
  40a9ef:	xor    edi,edi
  40a9f1:	cqo    
  40a9f3:	idiv   rcx
  40a9f6:	mov    r13,rax
  40a9f9:	sub    rbx,rax
  40a9fc:	mov    rax,r11
  40a9ff:	xor    r11d,r11d
  40aa02:	jmp    40a8f4 <__gcov_sort_n_vals@@Base+0x10c4>
  40aa07:	nop    WORD PTR [rax+rax*1+0x0]
  40aa10:	mov    r11,QWORD PTR [rdx+0x10]
  40aa14:	jmp    40a8bb <__gcov_sort_n_vals@@Base+0x108b>
  40aa19:	mov    eax,DWORD PTR [rsp+0x98]
  40aa20:	mov    DWORD PTR [rsp+0x1868],eax
  40aa27:	mov    rax,QWORD PTR [rsp+0xa0]
  40aa2f:	add    QWORD PTR [rsp+0x1870],rax
  40aa37:	mov    rax,QWORD PTR [rsp+0xa8]
  40aa3f:	cmp    QWORD PTR [rsp+0x1878],rax
  40aa47:	jge    40aa51 <__gcov_sort_n_vals@@Base+0x1221>
  40aa49:	mov    QWORD PTR [rsp+0x1878],rax
  40aa51:	add    QWORD PTR [rsp+0x1880],rax
  40aa59:	mov    rax,QWORD PTR [rsp+0x30]
  40aa5e:	mov    ecx,0x2f4
  40aa63:	mov    rbx,QWORD PTR [rsp+0x8]
  40aa68:	add    rax,0x28
  40aa6c:	lea    rsi,[rbx+0x28]
  40aa70:	mov    rdi,rax
  40aa73:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  40aa76:	jmp    40a6c1 <__gcov_sort_n_vals@@Base+0xe91>
  40aa7b:	mov    DWORD PTR [rsp+0x40],0x0
  40aa83:	jmp    40a7b7 <__gcov_sort_n_vals@@Base+0xf87>
  40aa88:	mov    r12,rbx
  40aa8b:	mov    edi,0x1
  40aa90:	call   408ec0 <next@@Base+0xb60>
  40aa95:	mov    DWORD PTR [rax],0x0
  40aa9b:	jmp    409e24 <__gcov_sort_n_vals@@Base+0x5f4>
  40aaa0:	mov    eax,DWORD PTR [rsp+0x60]
  40aaa4:	mov    DWORD PTR [rsp+0x18],0x0
  40aaac:	mov    DWORD PTR [rsp+0x1860],eax
  40aab3:	mov    edi,0x2
  40aab8:	call   408ec0 <next@@Base+0xb60>
  40aabd:	mov    edi,0x1
  40aac2:	mov    DWORD PTR [rax],0x67636461
  40aac8:	mov    DWORD PTR [rax+0x4],0x3630342a
  40aacf:	mov    ebx,DWORD PTR [r12+0x10]
  40aad4:	call   408ec0 <next@@Base+0xb60>
  40aad9:	mov    edi,DWORD PTR [rsp+0x18]
  40aadd:	mov    DWORD PTR [rax],ebx
  40aadf:	test   edi,edi
  40aae1:	je     40a6e6 <__gcov_sort_n_vals@@Base+0xeb6>
  40aae7:	mov    edi,DWORD PTR [rsp+0x18]
  40aaeb:	call   4097e0 <next@@Base+0x1480>
  40aaf0:	jmp    40a6e6 <__gcov_sort_n_vals@@Base+0xeb6>
  40aaf5:	nop    DWORD PTR [rax]
  40aaf8:	mov    ebp,DWORD PTR [rsp+0x3c]
  40aafc:	test   ebp,ebp
  40aafe:	je     40ab47 <__gcov_sort_n_vals@@Base+0x1317>
  40ab00:	mov    QWORD PTR [rsp+0x20],0x1
  40ab09:	lea    rbx,[rip+0x1f5a]        # 40ca6a <UnityStrOk@@Base+0x3ee>
  40ab10:	jmp    409c99 <__gcov_sort_n_vals@@Base+0x469>
  40ab15:	lea    rdi,[rip+0x1f62]        # 40ca7e <UnityStrOk@@Base+0x402>
  40ab1c:	call   403030 <getenv@plt>
  40ab21:	test   rax,rax
  40ab24:	mov    rbx,rax
  40ab27:	je     40ab47 <__gcov_sort_n_vals@@Base+0x1317>
  40ab29:	mov    rdi,rax
  40ab2c:	call   4030f0 <strlen@plt>
  40ab31:	test   rax,rax
  40ab34:	mov    QWORD PTR [rsp+0x20],rax
  40ab39:	mov    DWORD PTR [rsp+0x3c],0x0
  40ab41:	jne    409c82 <__gcov_sort_n_vals@@Base+0x452>
  40ab47:	mov    rdi,r14
  40ab4a:	call   403180 <malloc@plt>
  40ab4f:	mov    DWORD PTR [rsp+0x3c],0x0
  40ab57:	mov    QWORD PTR [rsp+0x10],rax
  40ab5c:	mov    QWORD PTR [rsp+0x20],0x0
  40ab65:	jmp    409cba <__gcov_sort_n_vals@@Base+0x48a>
  40ab6a:	mov    DWORD PTR [rsp+0x18],r13d
  40ab6f:	jmp    40a15f <__gcov_sort_n_vals@@Base+0x92f>
  40ab74:	xor    esi,esi
  40ab76:	jmp    40a045 <__gcov_sort_n_vals@@Base+0x815>
  40ab7b:	xor    eax,eax
  40ab7d:	jmp    40a079 <__gcov_sort_n_vals@@Base+0x849>
  40ab82:	mov    rax,r11
  40ab85:	xor    r11d,r11d
  40ab88:	jmp    40a8e6 <__gcov_sort_n_vals@@Base+0x10b6>
  40ab8d:	mov    QWORD PTR [rsp+0x1878],rax
  40ab95:	jmp    40a558 <__gcov_sort_n_vals@@Base+0xd28>
  40ab9a:	call   403060 <abort@plt>
  40ab9f:	test   rax,rax
  40aba2:	je     40aaf8 <__gcov_sort_n_vals@@Base+0x12c8>
  40aba8:	mov    QWORD PTR [rsp+0x20],rax
  40abad:	jmp    409c99 <__gcov_sort_n_vals@@Base+0x469>
  40abb2:	mov    DWORD PTR [rsp+0x98],r12d
  40abba:	jmp    409aba <__gcov_sort_n_vals@@Base+0x28a>
  40abbf:	mov    rbx,QWORD PTR [rbx+0x8]
  40abc3:	mov    QWORD PTR [rsp+0xa8],rsi
  40abcb:	test   rbx,rbx
  40abce:	jne    40990e <__gcov_sort_n_vals@@Base+0xde>
  40abd4:	jmp    409add <__gcov_sort_n_vals@@Base+0x2ad>
  40abd9:	mov    r14d,0x2
  40abdf:	xor    r15d,r15d
  40abe2:	jmp    409c22 <__gcov_sort_n_vals@@Base+0x3f2>
  40abe7:	mov    ebp,ebx
  40abe9:	lea    rcx,[rip+0x1e3e]        # 40ca2e <UnityStrOk@@Base+0x3b2>
  40abf0:	jmp    40a3a5 <__gcov_sort_n_vals@@Base+0xb75>
  40abf5:	mov    ecx,r15d
  40abf8:	mov    r13,QWORD PTR [rsp+0x40]
  40abfd:	mov    ebx,ebp
  40abff:	jmp    40a411 <__gcov_sort_n_vals@@Base+0xbe1>
  40ac04:	xor    eax,eax
  40ac06:	jmp    40a272 <__gcov_sort_n_vals@@Base+0xa42>
  40ac0b:	xor    eax,eax
  40ac0d:	jmp    40a259 <__gcov_sort_n_vals@@Base+0xa29>
  40ac12:	xor    eax,eax
  40ac14:	jmp    40a240 <__gcov_sort_n_vals@@Base+0xa10>
  40ac19:	mov    edi,0x1
  40ac1e:	call   408f10 <next@@Base+0xbb0>
  40ac23:	test   rax,rax
  40ac26:	je     40acbe <__gcov_sort_n_vals@@Base+0x148e>
  40ac2c:	mov    eax,DWORD PTR [rax]
  40ac2e:	cmp    DWORD PTR [rbx+0x8],eax
  40ac31:	jne    40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40ac37:	mov    edi,0x1
  40ac3c:	call   408f10 <next@@Base+0xbb0>
  40ac41:	test   rax,rax
  40ac44:	je     40acba <__gcov_sort_n_vals@@Base+0x148a>
  40ac46:	mov    eax,DWORD PTR [rax]
  40ac48:	cmp    DWORD PTR [rbx+0xc],eax
  40ac4b:	jne    40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40ac51:	mov    edi,0x1
  40ac56:	call   408f10 <next@@Base+0xbb0>
  40ac5b:	test   rax,rax
  40ac5e:	je     40acb6 <__gcov_sort_n_vals@@Base+0x1486>
  40ac60:	mov    eax,DWORD PTR [rax]
  40ac62:	cmp    DWORD PTR [rbx+0x10],eax
  40ac65:	jne    40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40ac6b:	lea    r13,[r12+0x20]
  40ac70:	add    rbx,0x18
  40ac74:	mov    ebp,0x1a10000
  40ac79:	mov    r14,QWORD PTR [r13+0x0]
  40ac7d:	test   r14,r14
  40ac80:	je     40a468 <__gcov_sort_n_vals@@Base+0xc38>
  40ac86:	mov    edi,0x1
  40ac8b:	call   408f10 <next@@Base+0xbb0>
  40ac90:	test   rax,rax
  40ac93:	je     40a437 <__gcov_sort_n_vals@@Base+0xc07>
  40ac99:	mov    edi,0x1
  40ac9e:	mov    r15d,DWORD PTR [rax]
  40aca1:	call   408f10 <next@@Base+0xbb0>
  40aca6:	test   rax,rax
  40aca9:	jne    40a449 <__gcov_sort_n_vals@@Base+0xc19>
  40acaf:	xor    eax,eax
  40acb1:	jmp    40a44b <__gcov_sort_n_vals@@Base+0xc1b>
  40acb6:	xor    eax,eax
  40acb8:	jmp    40ac62 <__gcov_sort_n_vals@@Base+0x1432>
  40acba:	xor    eax,eax
  40acbc:	jmp    40ac48 <__gcov_sort_n_vals@@Base+0x1418>
  40acbe:	xor    eax,eax
  40acc0:	jmp    40ac2e <__gcov_sort_n_vals@@Base+0x13fe>
  40acc5:	test   eax,eax
  40acc7:	mov    r15,QWORD PTR [rsp+0x70]
  40accc:	jne    40a3d6 <__gcov_sort_n_vals@@Base+0xba6>
  40acd2:	mov    rdi,QWORD PTR [r15]
  40acd5:	xor    edx,edx
  40acd7:	xor    esi,esi
  40acd9:	mov    DWORD PTR [r15+0x1c],0xffffffff
  40ace1:	mov    DWORD PTR [r15+0x8],0x0
  40ace9:	mov    DWORD PTR [r15+0xc],0x0
  40acf1:	call   4031a0 <fseek@plt>
  40acf6:	mov    r10d,DWORD PTR [rsp+0x18]
  40acfb:	test   r10d,r10d
  40acfe:	je     40ad3c <__gcov_sort_n_vals@@Base+0x150c>
  40ad00:	cmp    QWORD PTR [r12+0x20],0x0
  40ad06:	mov    eax,DWORD PTR [rsp+0x186c]
  40ad0d:	jne    40a516 <__gcov_sort_n_vals@@Base+0xce6>
  40ad13:	test   eax,eax
  40ad15:	jne    40ad6e <__gcov_sort_n_vals@@Base+0x153e>
  40ad17:	mov    eax,DWORD PTR [rsp+0x60]
  40ad1b:	mov    DWORD PTR [rsp+0x1860],eax
  40ad22:	mov    eax,DWORD PTR [rsp+0x28]
  40ad26:	test   eax,eax
  40ad28:	je     40aab3 <__gcov_sort_n_vals@@Base+0x1283>
  40ad2e:	mov    edi,DWORD PTR [rsp+0x18]
  40ad32:	call   4097e0 <next@@Base+0x1480>
  40ad37:	jmp    40a6e6 <__gcov_sort_n_vals@@Base+0xeb6>
  40ad3c:	mov    rdi,QWORD PTR [rsp+0x30]
  40ad41:	xor    eax,eax
  40ad43:	mov    ecx,0x2f9
  40ad48:	rep stos QWORD PTR es:[rdi],rax
  40ad4b:	mov    eax,DWORD PTR [rsp+0x28]
  40ad4f:	cmp    QWORD PTR [r12+0x20],0x0
  40ad55:	je     40ad86 <__gcov_sort_n_vals@@Base+0x1556>
  40ad57:	mov    edx,DWORD PTR [rsp+0x6c]
  40ad5b:	mov    DWORD PTR [rsp+0x18],eax
  40ad5f:	test   edx,edx
  40ad61:	jne    40aa19 <__gcov_sort_n_vals@@Base+0x11e9>
  40ad67:	xor    eax,eax
  40ad69:	jmp    40a520 <__gcov_sort_n_vals@@Base+0xcf0>
  40ad6e:	mov    rsi,QWORD PTR [rsp+0x10]
  40ad73:	lea    rdi,[rip+0x1c76]        # 40c9f0 <UnityStrOk@@Base+0x374>
  40ad7a:	xor    eax,eax
  40ad7c:	call   408f90 <next@@Base+0xc30>
  40ad81:	jmp    409e24 <__gcov_sort_n_vals@@Base+0x5f4>
  40ad86:	mov    DWORD PTR [rsp+0x18],eax
  40ad8a:	jmp    40a6c1 <__gcov_sort_n_vals@@Base+0xe91>
  40ad8f:	nop
  40ad90:	movzx  esi,BYTE PTR [rip+0x8f91]        # 413d28 <Unity@@Base+0x128>
  40ad97:	test   sil,0x1
  40ad9b:	je     40adc8 <__gcov_sort_n_vals@@Base+0x1598>
  40ad9d:	mov    rax,QWORD PTR [rip+0x8f8c]        # 413d30 <Unity@@Base+0x130>
  40ada4:	test   rax,rax
  40ada7:	je     40adb4 <__gcov_sort_n_vals@@Base+0x1584>
  40ada9:	mov    rdx,QWORD PTR [rip+0x8f88]        # 413d38 <Unity@@Base+0x138>
  40adb0:	mov    QWORD PTR [rax+0x18],rdx
  40adb4:	mov    rdx,QWORD PTR [rip+0x8f7d]        # 413d38 <Unity@@Base+0x138>
  40adbb:	test   rdx,rdx
  40adbe:	je     40ae18 <__gcov_sort_n_vals@@Base+0x15e8>
  40adc0:	mov    QWORD PTR [rdx+0x10],rax
  40adc4:	ret    
  40adc5:	nop    DWORD PTR [rax]
  40adc8:	sub    rsp,0x8
  40adcc:	mov    rdi,QWORD PTR [rip+0x8f4d]        # 413d20 <Unity@@Base+0x120>
  40add3:	shr    sil,1
  40add6:	and    esi,0x1
  40add9:	call   4098c0 <__gcov_sort_n_vals@@Base+0x90>
  40adde:	mov    rax,QWORD PTR [rip+0x8f4b]        # 413d30 <Unity@@Base+0x130>
  40ade5:	or     BYTE PTR [rip+0x8f3c],0x3        # 413d28 <Unity@@Base+0x128>
  40adec:	test   rax,rax
  40adef:	je     40adfc <__gcov_sort_n_vals@@Base+0x15cc>
  40adf1:	mov    rdx,QWORD PTR [rip+0x8f40]        # 413d38 <Unity@@Base+0x138>
  40adf8:	mov    QWORD PTR [rax+0x18],rdx
  40adfc:	mov    rdx,QWORD PTR [rip+0x8f35]        # 413d38 <Unity@@Base+0x138>
  40ae03:	test   rdx,rdx
  40ae06:	je     40ae28 <__gcov_sort_n_vals@@Base+0x15f8>
  40ae08:	mov    QWORD PTR [rdx+0x10],rax
  40ae0c:	add    rsp,0x8
  40ae10:	ret    
  40ae11:	nop    DWORD PTR [rax+0x0]
  40ae18:	mov    rdx,0x411e60
  40ae1f:	mov    QWORD PTR [rdx+0x8],rax
  40ae23:	ret    
  40ae24:	nop    DWORD PTR [rax+0x0]
  40ae28:	mov    rdx,0x411e60
  40ae2f:	mov    QWORD PTR [rdx+0x8],rax
  40ae33:	jmp    40ae0c <__gcov_sort_n_vals@@Base+0x15dc>
  40ae35:	nop
  40ae36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ae40:	movzx  esi,BYTE PTR [rdi+0x8]
  40ae44:	test   sil,0x1
  40ae48:	je     40ae50 <__gcov_sort_n_vals@@Base+0x1620>
  40ae4a:	ret    
  40ae4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae50:	push   rbx
  40ae51:	mov    rbx,rdi
  40ae54:	mov    rdi,QWORD PTR [rdi]
  40ae57:	shr    sil,1
  40ae5a:	and    esi,0x1
  40ae5d:	call   4098c0 <__gcov_sort_n_vals@@Base+0x90>
  40ae62:	or     BYTE PTR [rbx+0x8],0x3
  40ae66:	pop    rbx
  40ae67:	ret    
  40ae68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ae70:	mov    esi,DWORD PTR [rdi]
  40ae72:	test   esi,esi
  40ae74:	je     40ae7d <__gcov_sort_n_vals@@Base+0x164d>
  40ae76:	mov    eax,DWORD PTR [rdi+0x70]
  40ae79:	test   eax,eax
  40ae7b:	jne    40ae80 <__gcov_sort_n_vals@@Base+0x1650>
  40ae7d:	ret    
  40ae7e:	xchg   ax,ax
  40ae80:	push   r12
  40ae82:	push   rbp
  40ae83:	xor    edx,edx
  40ae85:	push   rbx
  40ae86:	mov    rbx,rdi
  40ae89:	lea    rdi,[rdi+0x18]
  40ae8d:	call   4090b0 <next@@Base+0xd50>
  40ae92:	test   eax,eax
  40ae94:	je     40aeb4 <__gcov_sort_n_vals@@Base+0x1684>
  40ae96:	mov    rax,QWORD PTR [rip+0x8e83]        # 413d20 <Unity@@Base+0x120>
  40ae9d:	lea    rbp,[rip+0x8e7c]        # 413d20 <Unity@@Base+0x120>
  40aea4:	test   rax,rax
  40aea7:	je     40aeb9 <__gcov_sort_n_vals@@Base+0x1689>
  40aea9:	mov    QWORD PTR [rbx+0x8],rax
  40aead:	mov    QWORD PTR [rip+0x8e6c],rbx        # 413d20 <Unity@@Base+0x120>
  40aeb4:	pop    rbx
  40aeb5:	pop    rbp
  40aeb6:	pop    r12
  40aeb8:	ret    
  40aeb9:	mov    r12,0x411e60
  40aec0:	lea    rdx,[rip+0x1c09]        # 40cad0 <UnityStrOk@@Base+0x454>
  40aec7:	mov    edi,0x18
  40aecc:	mov    esi,DWORD PTR [r12]
  40aed0:	call   4090b0 <next@@Base+0xd50>
  40aed5:	test   eax,eax
  40aed7:	je     40aef3 <__gcov_sort_n_vals@@Base+0x16c3>
  40aed9:	mov    rax,QWORD PTR [r12+0x8]
  40aede:	test   rax,rax
  40aee1:	mov    QWORD PTR [rip+0x8e48],rax        # 413d30 <Unity@@Base+0x130>
  40aee8:	je     40aeee <__gcov_sort_n_vals@@Base+0x16be>
  40aeea:	mov    QWORD PTR [rax+0x18],rbp
  40aeee:	mov    QWORD PTR [r12+0x8],rbp
  40aef3:	lea    rdi,[rip+0xfffffffffffffe96]        # 40ad90 <__gcov_sort_n_vals@@Base+0x1560>
  40aefa:	call   40aff0 <__libc_csu_fini@@Base+0x10>
  40aeff:	mov    rax,QWORD PTR [rip+0x8e1a]        # 413d20 <Unity@@Base+0x120>
  40af06:	jmp    40aea9 <__gcov_sort_n_vals@@Base+0x1679>
  40af08:	nop    DWORD PTR [rax+rax*1+0x0]
  40af10:	mov    rax,rdi
  40af13:	movabs rdx,0x5555555555555555
  40af1d:	shr    rax,1
  40af20:	and    rax,rdx
  40af23:	movabs rdx,0x3333333333333333
  40af2d:	sub    rdi,rax
  40af30:	mov    rax,rdi
  40af33:	shr    rdi,0x2
  40af37:	and    rax,rdx
  40af3a:	and    rdi,rdx
  40af3d:	movabs rdx,0xf0f0f0f0f0f0f0f
  40af47:	add    rdi,rax
  40af4a:	mov    rax,rdi
  40af4d:	shr    rax,0x4
  40af51:	add    rax,rdi
  40af54:	and    rax,rdx
  40af57:	movabs rdx,0x101010101010101
  40af61:	imul   rax,rdx
  40af65:	shr    rax,0x38
  40af69:	ret    
  40af6a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040af70 <__libc_csu_init@@Base>:
  40af70:	endbr64 
  40af74:	push   r15
  40af76:	lea    r15,[rip+0x4e5b]        # 40fdd8 <UnityStrOk@@Base+0x375c>
  40af7d:	push   r14
  40af7f:	mov    r14,rdx
  40af82:	push   r13
  40af84:	mov    r13,rsi
  40af87:	push   r12
  40af89:	mov    r12d,edi
  40af8c:	push   rbp
  40af8d:	lea    rbp,[rip+0x4e6c]        # 40fe00 <UnityStrOk@@Base+0x3784>
  40af94:	push   rbx
  40af95:	sub    rbp,r15
  40af98:	sub    rsp,0x8
  40af9c:	call   403000 <getenv@plt-0x30>
  40afa1:	sar    rbp,0x3
  40afa5:	je     40afc6 <__libc_csu_init@@Base+0x56>
  40afa7:	xor    ebx,ebx
  40afa9:	nop    DWORD PTR [rax+0x0]
  40afb0:	mov    rdx,r14
  40afb3:	mov    rsi,r13
  40afb6:	mov    edi,r12d
  40afb9:	call   QWORD PTR [r15+rbx*8]
  40afbd:	add    rbx,0x1
  40afc1:	cmp    rbp,rbx
  40afc4:	jne    40afb0 <__libc_csu_init@@Base+0x40>
  40afc6:	add    rsp,0x8
  40afca:	pop    rbx
  40afcb:	pop    rbp
  40afcc:	pop    r12
  40afce:	pop    r13
  40afd0:	pop    r14
  40afd2:	pop    r15
  40afd4:	ret    
  40afd5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040afe0 <__libc_csu_fini@@Base>:
  40afe0:	endbr64 
  40afe4:	ret    
  40afe5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40afef:	nop
  40aff0:	endbr64 
  40aff4:	mov    rdx,QWORD PTR [rip+0x512d]        # 410128 <__data_start@@Base+0x8>
  40affb:	xor    esi,esi
  40affd:	jmp    4031f0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000040b004 <.fini>:
  40b004:	endbr64 
  40b008:	sub    rsp,0x8
  40b00c:	add    rsp,0x8
  40b010:	ret    
