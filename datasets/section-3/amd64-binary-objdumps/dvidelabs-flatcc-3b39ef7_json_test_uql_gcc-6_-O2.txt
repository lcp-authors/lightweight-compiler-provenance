
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf64-x86-64


Disassembly of section .init:

0000000000405000 <.init>:
  405000:	endbr64 
  405004:	sub    rsp,0x8
  405008:	mov    rax,QWORD PTR [rip+0x33fd1]        # 438fe0 <__gmon_start__>
  40500f:	test   rax,rax
  405012:	je     405016 <free@plt-0x1a>
  405014:	call   rax
  405016:	add    rsp,0x8
  40501a:	ret    

Disassembly of section .plt:

0000000000405020 <free@plt-0x10>:
  405020:	push   QWORD PTR [rip+0x33fe2]        # 439008 <flatcc_builder_padding_base@@Base+0x9528>
  405026:	jmp    QWORD PTR [rip+0x33fe4]        # 439010 <flatcc_builder_padding_base@@Base+0x9530>
  40502c:	nop    DWORD PTR [rax+0x0]

0000000000405030 <free@plt>:
  405030:	jmp    QWORD PTR [rip+0x33fe2]        # 439018 <free@GLIBC_2.2.5>
  405036:	push   0x0
  40503b:	jmp    405020 <free@plt-0x10>

0000000000405040 <strncpy@plt>:
  405040:	jmp    QWORD PTR [rip+0x33fda]        # 439020 <strncpy@GLIBC_2.2.5>
  405046:	push   0x1
  40504b:	jmp    405020 <free@plt-0x10>

0000000000405050 <strtod@plt>:
  405050:	jmp    QWORD PTR [rip+0x33fd2]        # 439028 <strtod@GLIBC_2.2.5>
  405056:	push   0x2
  40505b:	jmp    405020 <free@plt-0x10>

0000000000405060 <strlen@plt>:
  405060:	jmp    QWORD PTR [rip+0x33fca]        # 439030 <strlen@GLIBC_2.2.5>
  405066:	push   0x3
  40506b:	jmp    405020 <free@plt-0x10>

0000000000405070 <__stack_chk_fail@plt>:
  405070:	jmp    QWORD PTR [rip+0x33fc2]        # 439038 <__stack_chk_fail@GLIBC_2.4>
  405076:	push   0x4
  40507b:	jmp    405020 <free@plt-0x10>

0000000000405080 <__assert_fail@plt>:
  405080:	jmp    QWORD PTR [rip+0x33fba]        # 439040 <__assert_fail@GLIBC_2.2.5>
  405086:	push   0x5
  40508b:	jmp    405020 <free@plt-0x10>

0000000000405090 <memset@plt>:
  405090:	jmp    QWORD PTR [rip+0x33fb2]        # 439048 <memset@GLIBC_2.2.5>
  405096:	push   0x6
  40509b:	jmp    405020 <free@plt-0x10>

00000000004050a0 <memchr@plt>:
  4050a0:	jmp    QWORD PTR [rip+0x33faa]        # 439050 <memchr@GLIBC_2.2.5>
  4050a6:	push   0x7
  4050ab:	jmp    405020 <free@plt-0x10>

00000000004050b0 <memcmp@plt>:
  4050b0:	jmp    QWORD PTR [rip+0x33fa2]        # 439058 <memcmp@GLIBC_2.2.5>
  4050b6:	push   0x8
  4050bb:	jmp    405020 <free@plt-0x10>

00000000004050c0 <strcmp@plt>:
  4050c0:	jmp    QWORD PTR [rip+0x33f9a]        # 439060 <strcmp@GLIBC_2.2.5>
  4050c6:	push   0x9
  4050cb:	jmp    405020 <free@plt-0x10>

00000000004050d0 <__memcpy_chk@plt>:
  4050d0:	jmp    QWORD PTR [rip+0x33f92]        # 439068 <__memcpy_chk@GLIBC_2.3.4>
  4050d6:	push   0xa
  4050db:	jmp    405020 <free@plt-0x10>

00000000004050e0 <memcpy@plt>:
  4050e0:	jmp    QWORD PTR [rip+0x33f8a]        # 439070 <memcpy@GLIBC_2.14>
  4050e6:	push   0xb
  4050eb:	jmp    405020 <free@plt-0x10>

00000000004050f0 <malloc@plt>:
  4050f0:	jmp    QWORD PTR [rip+0x33f82]        # 439078 <malloc@GLIBC_2.2.5>
  4050f6:	push   0xc
  4050fb:	jmp    405020 <free@plt-0x10>

0000000000405100 <realloc@plt>:
  405100:	jmp    QWORD PTR [rip+0x33f7a]        # 439080 <realloc@GLIBC_2.2.5>
  405106:	push   0xd
  40510b:	jmp    405020 <free@plt-0x10>

0000000000405110 <memmove@plt>:
  405110:	jmp    QWORD PTR [rip+0x33f72]        # 439088 <memmove@GLIBC_2.2.5>
  405116:	push   0xe
  40511b:	jmp    405020 <free@plt-0x10>

0000000000405120 <fwrite@plt>:
  405120:	jmp    QWORD PTR [rip+0x33f6a]        # 439090 <fwrite@GLIBC_2.2.5>
  405126:	push   0xf
  40512b:	jmp    405020 <free@plt-0x10>

0000000000405130 <__fprintf_chk@plt>:
  405130:	jmp    QWORD PTR [rip+0x33f62]        # 439098 <__fprintf_chk@GLIBC_2.3.4>
  405136:	push   0x10
  40513b:	jmp    405020 <free@plt-0x10>

0000000000405140 <posix_memalign@plt>:
  405140:	jmp    QWORD PTR [rip+0x33f5a]        # 4390a0 <posix_memalign@GLIBC_2.2.5>
  405146:	push   0x11
  40514b:	jmp    405020 <free@plt-0x10>

0000000000405150 <__sprintf_chk@plt>:
  405150:	jmp    QWORD PTR [rip+0x33f52]        # 4390a8 <__sprintf_chk@GLIBC_2.3.4>
  405156:	push   0x12
  40515b:	jmp    405020 <free@plt-0x10>

Disassembly of section .text:

0000000000405160 <main@@Base-0x200>:
  405160:	push   r15
  405162:	push   r14
  405164:	mov    r14,rdx
  405167:	push   r13
  405169:	push   r12
  40516b:	mov    r12,r8
  40516e:	push   rbp
  40516f:	push   rbx
  405170:	mov    rbp,rdi
  405173:	mov    rbx,rsi
  405176:	sub    rsp,0x58
  40517a:	mov    QWORD PTR [r8],0x0
  405181:	mov    rax,QWORD PTR fs:0x28
  40518a:	mov    QWORD PTR [rsp+0x48],rax
  40518f:	xor    eax,eax
  405191:	cmp    rsi,rdx
  405194:	mov    QWORD PTR [rsp+0x10],rcx
  405199:	je     4051c7 <__sprintf_chk@plt+0x77>
  40519b:	mov    al,BYTE PTR [rsi]
  40519d:	cmp    al,0x22
  40519f:	jne    4051ad <__sprintf_chk@plt+0x5d>
  4051a1:	inc    rbx
  4051a4:	mov    DWORD PTR [rdi+0x14],0x0
  4051ab:	jmp    4051c7 <__sprintf_chk@plt+0x77>
  4051ad:	cmp    al,0x2e
  4051af:	jne    4051c0 <__sprintf_chk@plt+0x70>
  4051b1:	mov    ecx,0x5
  4051b6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4051bb:	mov    rbx,rax
  4051be:	jmp    4051c7 <__sprintf_chk@plt+0x77>
  4051c0:	mov    DWORD PTR [rdi+0x14],0x1
  4051c7:	cmp    DWORD PTR [rbp+0x14],0x0
  4051cb:	jne    4051de <__sprintf_chk@plt+0x8e>
  4051cd:	mov    rsi,rbx
  4051d0:	mov    rdx,r14
  4051d3:	mov    rdi,rbp
  4051d6:	call   407030 <_start@@Base+0x10f0>
  4051db:	mov    rbx,rax
  4051de:	cmp    r14,rbx
  4051e1:	je     405289 <__sprintf_chk@plt+0x139>
  4051e7:	lea    rax,[rsp+0x3c]
  4051ec:	mov    QWORD PTR [rsp+0x8],rbp
  4051f1:	xor    r13d,r13d
  4051f4:	mov    rbp,rbx
  4051f7:	mov    QWORD PTR [rsp+0x18],rax
  4051fc:	lea    rax,[rsp+0x40]
  405201:	mov    QWORD PTR [rsp+0x20],rax
  405206:	lea    rax,[rsp+0x38]
  40520b:	mov    QWORD PTR [rsp+0x28],rax
  405210:	mov    rbx,QWORD PTR [rsp+0x10]
  405215:	mov    r9,QWORD PTR [rsp+0x18]
  40521a:	mov    r8,QWORD PTR [rsp+0x20]
  40521f:	mov    rdx,r14
  405222:	mov    rcx,QWORD PTR [rsp+0x28]
  405227:	mov    rsi,rbp
  40522a:	mov    rdi,QWORD PTR [rsp+0x8]
  40522f:	call   QWORD PTR [rbx]
  405231:	cmp    r14,rax
  405234:	je     405289 <__sprintf_chk@plt+0x139>
  405236:	cmp    rbp,rax
  405239:	jne    405265 <__sprintf_chk@plt+0x115>
  40523b:	add    rbx,0x8
  40523f:	cmp    QWORD PTR [rbx],0x0
  405243:	jne    405215 <__sprintf_chk@plt+0xc5>
  405245:	mov    rbx,rbp
  405248:	mov    rbp,QWORD PTR [rsp+0x8]
  40524d:	mov    rdx,r14
  405250:	mov    ecx,0x17
  405255:	mov    rsi,rbx
  405258:	mov    rdi,rbp
  40525b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  405260:	mov    r14,rax
  405263:	jmp    405289 <__sprintf_chk@plt+0x139>
  405265:	cmp    DWORD PTR [rsp+0x38],0x0
  40526a:	mov    r15,rax
  40526d:	je     4052a1 <__sprintf_chk@plt+0x151>
  40526f:	mov    rdi,QWORD PTR [rsp+0x8]
  405274:	mov    ecx,0x8
  405279:	mov    rdx,r14
  40527c:	mov    rsi,r15
  40527f:	call   41c420 <flatcc_json_parser_set_error@@Base>
  405284:	cmp    r14,rax
  405287:	jne    4052a6 <__sprintf_chk@plt+0x156>
  405289:	mov    rcx,QWORD PTR [rsp+0x48]
  40528e:	xor    rcx,QWORD PTR fs:0x28
  405297:	mov    rax,r14
  40529a:	je     4052be <__sprintf_chk@plt+0x16e>
  40529c:	call   405070 <__stack_chk_fail@plt>
  4052a1:	mov    r13,QWORD PTR [rsp+0x40]
  4052a6:	add    QWORD PTR [r12],r13
  4052aa:	cmp    DWORD PTR [rsp+0x3c],0x0
  4052af:	je     4052b9 <__sprintf_chk@plt+0x169>
  4052b1:	mov    rbp,r15
  4052b4:	jmp    405210 <__sprintf_chk@plt+0xc0>
  4052b9:	mov    r14,r15
  4052bc:	jmp    405289 <__sprintf_chk@plt+0x139>
  4052be:	add    rsp,0x58
  4052c2:	pop    rbx
  4052c3:	pop    rbp
  4052c4:	pop    r12
  4052c6:	pop    r13
  4052c8:	pop    r14
  4052ca:	pop    r15
  4052cc:	ret    
  4052cd:	lea    rcx,[rip+0x2a7dc]        # 42fab0 <_IO_stdin_used@@Base+0x4ab0>
  4052d4:	lea    rsi,[rip+0x29d25]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4052db:	lea    rdi,[rip+0x2a0b5]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  4052e2:	sub    rsp,0x8
  4052e6:	mov    edx,0x134
  4052eb:	call   405080 <__assert_fail@plt>
  4052f0:	lea    rcx,[rip+0x2a749]        # 42fa40 <_IO_stdin_used@@Base+0x4a40>
  4052f7:	lea    rsi,[rip+0x29d02]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4052fe:	lea    rdi,[rip+0x2a092]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  405305:	sub    rsp,0x8
  405309:	mov    edx,0x2a1
  40530e:	call   405080 <__assert_fail@plt>
  405313:	lea    rcx,[rip+0x2a716]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  40531a:	lea    rsi,[rip+0x29cdf]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  405321:	lea    rdi,[rip+0x2a06f]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  405328:	sub    rsp,0x8
  40532c:	mov    edx,0x28b
  405331:	call   405080 <__assert_fail@plt>
  405336:	lea    rcx,[rip+0x2a653]        # 42f990 <_IO_stdin_used@@Base+0x4990>
  40533d:	lea    rsi,[rip+0x29cbc]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  405344:	lea    rdi,[rip+0x2a025]        # 42f370 <_IO_stdin_used@@Base+0x4370>
  40534b:	sub    rsp,0x8
  40534f:	mov    edx,0x37c
  405354:	call   405080 <__assert_fail@plt>
  405359:	nop    DWORD PTR [rax+0x0]

0000000000405360 <main@@Base>:
  405360:	push   rbx
  405361:	xor    eax,eax
  405363:	call   414c60 <edge_case_tests@@Base>
  405368:	mov    ebx,eax
  40536a:	xor    eax,eax
  40536c:	call   414f80 <error_case_tests@@Base>
  405371:	or     ebx,eax
  405373:	xor    eax,eax
  405375:	call   415570 <union_vector_tests@@Base>
  40537a:	or     ebx,eax
  40537c:	xor    eax,eax
  40537e:	call   415270 <base64_tests@@Base>
  405383:	or     ebx,eax
  405385:	xor    eax,eax
  405387:	call   415430 <mixed_type_union_tests@@Base>
  40538c:	sub    rsp,0x8
  405390:	lea    rdx,[rip+0x2626f]        # 42b606 <_IO_stdin_used@@Base+0x606>
  405397:	lea    rsi,[rip+0x26325]        # 42b6c3 <_IO_stdin_used@@Base+0x6c3>
  40539e:	push   0x20d
  4053a3:	lea    rdi,[rip+0x33a36]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4053aa:	xor    r9d,r9d
  4053ad:	xor    r8d,r8d
  4053b0:	xor    ecx,ecx
  4053b2:	or     ebx,eax
  4053b4:	call   414720 <test_json@@Base>
  4053b9:	lea    rdx,[rip+0x28830]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  4053c0:	lea    rsi,[rip+0x28851]        # 42dc18 <_IO_stdin_used@@Base+0x2c18>
  4053c7:	lea    rdi,[rip+0x33a12]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4053ce:	xor    r9d,r9d
  4053d1:	xor    r8d,r8d
  4053d4:	xor    ecx,ecx
  4053d6:	or     ebx,eax
  4053d8:	mov    DWORD PTR [rsp],0x210
  4053df:	call   414720 <test_json@@Base>
  4053e4:	lea    rdx,[rip+0x28855]        # 42dc40 <_IO_stdin_used@@Base+0x2c40>
  4053eb:	lea    rsi,[rip+0x28876]        # 42dc68 <_IO_stdin_used@@Base+0x2c68>
  4053f2:	lea    rdi,[rip+0x339e7]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4053f9:	xor    r9d,r9d
  4053fc:	xor    r8d,r8d
  4053ff:	xor    ecx,ecx
  405401:	or     ebx,eax
  405403:	mov    DWORD PTR [rsp],0x213
  40540a:	call   414720 <test_json@@Base>
  40540f:	lea    rdx,[rip+0x2887a]        # 42dc90 <_IO_stdin_used@@Base+0x2c90>
  405416:	lea    rsi,[rip+0x288a3]        # 42dcc0 <_IO_stdin_used@@Base+0x2cc0>
  40541d:	lea    rdi,[rip+0x339bc]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405424:	or     ebx,eax
  405426:	xor    r9d,r9d
  405429:	xor    r8d,r8d
  40542c:	xor    ecx,ecx
  40542e:	mov    DWORD PTR [rsp],0x216
  405435:	call   414720 <test_json@@Base>
  40543a:	lea    rdx,[rip+0x2884f]        # 42dc90 <_IO_stdin_used@@Base+0x2c90>
  405441:	lea    rsi,[rip+0x288b0]        # 42dcf8 <_IO_stdin_used@@Base+0x2cf8>
  405448:	lea    rdi,[rip+0x33991]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  40544f:	xor    r9d,r9d
  405452:	xor    r8d,r8d
  405455:	xor    ecx,ecx
  405457:	or     ebx,eax
  405459:	mov    DWORD PTR [rsp],0x219
  405460:	call   414720 <test_json@@Base>
  405465:	lea    rdx,[rip+0x28784]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  40546c:	lea    rsi,[rip+0x288c5]        # 42dd38 <_IO_stdin_used@@Base+0x2d38>
  405473:	lea    rdi,[rip+0x33966]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  40547a:	xor    r9d,r9d
  40547d:	xor    r8d,r8d
  405480:	xor    ecx,ecx
  405482:	or     ebx,eax
  405484:	mov    DWORD PTR [rsp],0x21c
  40548b:	call   414720 <test_json@@Base>
  405490:	lea    rdx,[rip+0x287a9]        # 42dc40 <_IO_stdin_used@@Base+0x2c40>
  405497:	lea    rsi,[rip+0x288c2]        # 42dd60 <_IO_stdin_used@@Base+0x2d60>
  40549e:	lea    rdi,[rip+0x3393b]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4054a5:	xor    r9d,r9d
  4054a8:	xor    r8d,r8d
  4054ab:	xor    ecx,ecx
  4054ad:	or     ebx,eax
  4054af:	mov    DWORD PTR [rsp],0x21f
  4054b6:	call   414720 <test_json@@Base>
  4054bb:	lea    rdx,[rip+0x26144]        # 42b606 <_IO_stdin_used@@Base+0x606>
  4054c2:	lea    rsi,[rip+0x288c7]        # 42dd90 <_IO_stdin_used@@Base+0x2d90>
  4054c9:	lea    rdi,[rip+0x33910]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4054d0:	xor    r9d,r9d
  4054d3:	xor    r8d,r8d
  4054d6:	xor    ecx,ecx
  4054d8:	or     ebx,eax
  4054da:	mov    DWORD PTR [rsp],0x223
  4054e1:	call   414720 <test_json@@Base>
  4054e6:	lea    rdx,[rip+0x26119]        # 42b606 <_IO_stdin_used@@Base+0x606>
  4054ed:	lea    rsi,[rip+0x26554]        # 42ba48 <_IO_stdin_used@@Base+0xa48>
  4054f4:	lea    rdi,[rip+0x338e5]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4054fb:	xor    r9d,r9d
  4054fe:	xor    r8d,r8d
  405501:	xor    ecx,ecx
  405503:	or     ebx,eax
  405505:	mov    DWORD PTR [rsp],0x227
  40550c:	call   414720 <test_json@@Base>
  405511:	lea    rdx,[rip+0x260ee]        # 42b606 <_IO_stdin_used@@Base+0x606>
  405518:	lea    rsi,[rip+0x261bb]        # 42b6da <_IO_stdin_used@@Base+0x6da>
  40551f:	lea    rdi,[rip+0x338ba]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405526:	xor    r9d,r9d
  405529:	xor    r8d,r8d
  40552c:	xor    ecx,ecx
  40552e:	mov    DWORD PTR [rsp],0x22b
  405535:	or     ebx,eax
  405537:	call   414720 <test_json@@Base>
  40553c:	lea    rdx,[rip+0x286ad]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  405543:	lea    rsi,[rip+0x2886e]        # 42ddb8 <_IO_stdin_used@@Base+0x2db8>
  40554a:	lea    rdi,[rip+0x3388f]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405551:	or     ebx,eax
  405553:	xor    r9d,r9d
  405556:	xor    r8d,r8d
  405559:	xor    ecx,ecx
  40555b:	mov    DWORD PTR [rsp],0x22e
  405562:	call   414720 <test_json@@Base>
  405567:	lea    rdx,[rip+0x286d2]        # 42dc40 <_IO_stdin_used@@Base+0x2c40>
  40556e:	lea    rsi,[rip+0x2886b]        # 42dde0 <_IO_stdin_used@@Base+0x2de0>
  405575:	lea    rdi,[rip+0x33864]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  40557c:	xor    r9d,r9d
  40557f:	xor    r8d,r8d
  405582:	xor    ecx,ecx
  405584:	or     ebx,eax
  405586:	mov    DWORD PTR [rsp],0x231
  40558d:	call   414720 <test_json@@Base>
  405592:	lea    rdx,[rip+0x286f7]        # 42dc90 <_IO_stdin_used@@Base+0x2c90>
  405599:	lea    rsi,[rip+0x28868]        # 42de08 <_IO_stdin_used@@Base+0x2e08>
  4055a0:	lea    rdi,[rip+0x33839]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4055a7:	xor    r9d,r9d
  4055aa:	xor    r8d,r8d
  4055ad:	xor    ecx,ecx
  4055af:	or     ebx,eax
  4055b1:	mov    DWORD PTR [rsp],0x234
  4055b8:	call   414720 <test_json@@Base>
  4055bd:	lea    rdx,[rip+0x286cc]        # 42dc90 <_IO_stdin_used@@Base+0x2c90>
  4055c4:	lea    rsi,[rip+0x2886d]        # 42de38 <_IO_stdin_used@@Base+0x2e38>
  4055cb:	lea    rdi,[rip+0x3380e]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4055d2:	xor    r9d,r9d
  4055d5:	xor    r8d,r8d
  4055d8:	xor    ecx,ecx
  4055da:	or     ebx,eax
  4055dc:	mov    DWORD PTR [rsp],0x237
  4055e3:	call   414720 <test_json@@Base>
  4055e8:	lea    rdx,[rip+0x28601]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  4055ef:	lea    rsi,[rip+0x2887a]        # 42de70 <_IO_stdin_used@@Base+0x2e70>
  4055f6:	lea    rdi,[rip+0x337e3]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4055fd:	xor    r9d,r9d
  405600:	xor    r8d,r8d
  405603:	xor    ecx,ecx
  405605:	or     ebx,eax
  405607:	mov    DWORD PTR [rsp],0x23a
  40560e:	call   414720 <test_json@@Base>
  405613:	lea    rdx,[rip+0x28626]        # 42dc40 <_IO_stdin_used@@Base+0x2c40>
  40561a:	lea    rsi,[rip+0x2886f]        # 42de90 <_IO_stdin_used@@Base+0x2e90>
  405621:	lea    rdi,[rip+0x337b8]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405628:	xor    r9d,r9d
  40562b:	xor    ecx,ecx
  40562d:	xor    r8d,r8d
  405630:	or     ebx,eax
  405632:	mov    DWORD PTR [rsp],0x23d
  405639:	call   414720 <test_json@@Base>
  40563e:	lea    rdx,[rip+0x25fc1]        # 42b606 <_IO_stdin_used@@Base+0x606>
  405645:	lea    rsi,[rip+0x2886c]        # 42deb8 <_IO_stdin_used@@Base+0x2eb8>
  40564c:	lea    rdi,[rip+0x3378d]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405653:	or     ebx,eax
  405655:	xor    r9d,r9d
  405658:	xor    r8d,r8d
  40565b:	xor    ecx,ecx
  40565d:	mov    DWORD PTR [rsp],0x241
  405664:	call   414720 <test_json@@Base>
  405669:	lea    rdx,[rip+0x25f96]        # 42b606 <_IO_stdin_used@@Base+0x606>
  405670:	lea    rsi,[rip+0x25fd4]        # 42b64b <_IO_stdin_used@@Base+0x64b>
  405677:	lea    rdi,[rip+0x33762]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  40567e:	xor    r9d,r9d
  405681:	xor    r8d,r8d
  405684:	xor    ecx,ecx
  405686:	or     ebx,eax
  405688:	mov    DWORD PTR [rsp],0x245
  40568f:	call   414720 <test_json@@Base>
  405694:	lea    rdx,[rip+0x28845]        # 42dee0 <_IO_stdin_used@@Base+0x2ee0>
  40569b:	lea    rsi,[rip+0x28866]        # 42df08 <_IO_stdin_used@@Base+0x2f08>
  4056a2:	lea    rdi,[rip+0x33737]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4056a9:	xor    r9d,r9d
  4056ac:	xor    r8d,r8d
  4056af:	xor    ecx,ecx
  4056b1:	or     ebx,eax
  4056b3:	mov    DWORD PTR [rsp],0x249
  4056ba:	call   414720 <test_json@@Base>
  4056bf:	lea    rdx,[rip+0x2881a]        # 42dee0 <_IO_stdin_used@@Base+0x2ee0>
  4056c6:	lea    rsi,[rip+0x28863]        # 42df30 <_IO_stdin_used@@Base+0x2f30>
  4056cd:	lea    rdi,[rip+0x3370c]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4056d4:	xor    r9d,r9d
  4056d7:	xor    r8d,r8d
  4056da:	xor    ecx,ecx
  4056dc:	or     ebx,eax
  4056de:	mov    DWORD PTR [rsp],0x24f
  4056e5:	call   414720 <test_json@@Base>
  4056ea:	lea    rdx,[rip+0x287ef]        # 42dee0 <_IO_stdin_used@@Base+0x2ee0>
  4056f1:	lea    rsi,[rip+0x28860]        # 42df58 <_IO_stdin_used@@Base+0x2f58>
  4056f8:	lea    rdi,[rip+0x336e1]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4056ff:	xor    r9d,r9d
  405702:	xor    r8d,r8d
  405705:	xor    ecx,ecx
  405707:	or     ebx,eax
  405709:	mov    DWORD PTR [rsp],0x252
  405710:	call   414720 <test_json@@Base>
  405715:	lea    rdx,[rip+0x28574]        # 42dc90 <_IO_stdin_used@@Base+0x2c90>
  40571c:	lea    rsi,[rip+0x2885d]        # 42df80 <_IO_stdin_used@@Base+0x2f80>
  405723:	lea    rdi,[rip+0x336b6]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  40572a:	xor    r9d,r9d
  40572d:	xor    r8d,r8d
  405730:	xor    ecx,ecx
  405732:	or     ebx,eax
  405734:	mov    DWORD PTR [rsp],0x255
  40573b:	call   414720 <test_json@@Base>
  405740:	lea    rdx,[rip+0x284a9]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  405747:	lea    rsi,[rip+0x28862]        # 42dfb0 <_IO_stdin_used@@Base+0x2fb0>
  40574e:	lea    rdi,[rip+0x3368b]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405755:	xor    r9d,r9d
  405758:	xor    r8d,r8d
  40575b:	xor    ecx,ecx
  40575d:	mov    DWORD PTR [rsp],0x259
  405764:	or     ebx,eax
  405766:	call   414720 <test_json@@Base>
  40576b:	lea    rdx,[rip+0x284ce]        # 42dc40 <_IO_stdin_used@@Base+0x2c40>
  405772:	lea    rsi,[rip+0x2885f]        # 42dfd8 <_IO_stdin_used@@Base+0x2fd8>
  405779:	lea    rdi,[rip+0x33660]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405780:	xor    r9d,r9d
  405783:	xor    r8d,r8d
  405786:	xor    ecx,ecx
  405788:	or     ebx,eax
  40578a:	mov    DWORD PTR [rsp],0x25c
  405791:	call   414720 <test_json@@Base>
  405796:	lea    rdx,[rip+0x28863]        # 42e000 <_IO_stdin_used@@Base+0x3000>
  40579d:	lea    rsi,[rip+0x28884]        # 42e028 <_IO_stdin_used@@Base+0x3028>
  4057a4:	lea    rdi,[rip+0x33635]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4057ab:	xor    r9d,r9d
  4057ae:	xor    r8d,r8d
  4057b1:	xor    ecx,ecx
  4057b3:	or     ebx,eax
  4057b5:	mov    DWORD PTR [rsp],0x25f
  4057bc:	call   414720 <test_json@@Base>
  4057c1:	lea    rdx,[rip+0x284c8]        # 42dc90 <_IO_stdin_used@@Base+0x2c90>
  4057c8:	lea    rsi,[rip+0x28881]        # 42e050 <_IO_stdin_used@@Base+0x3050>
  4057cf:	lea    rdi,[rip+0x3360a]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4057d6:	xor    r9d,r9d
  4057d9:	xor    r8d,r8d
  4057dc:	xor    ecx,ecx
  4057de:	or     ebx,eax
  4057e0:	mov    DWORD PTR [rsp],0x262
  4057e7:	call   414720 <test_json@@Base>
  4057ec:	lea    rdx,[rip+0x25efc]        # 42b6ef <_IO_stdin_used@@Base+0x6ef>
  4057f3:	lea    rsi,[rip+0x2887e]        # 42e078 <_IO_stdin_used@@Base+0x3078>
  4057fa:	lea    rdi,[rip+0x335df]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405801:	xor    r9d,r9d
  405804:	xor    r8d,r8d
  405807:	xor    ecx,ecx
  405809:	or     ebx,eax
  40580b:	mov    DWORD PTR [rsp],0x265
  405812:	call   414720 <test_json@@Base>
  405817:	lea    rdx,[rip+0x25eef]        # 42b70d <_IO_stdin_used@@Base+0x70d>
  40581e:	lea    rsi,[rip+0x2887b]        # 42e0a0 <_IO_stdin_used@@Base+0x30a0>
  405825:	lea    rdi,[rip+0x335b4]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  40582c:	xor    r9d,r9d
  40582f:	xor    r8d,r8d
  405832:	xor    ecx,ecx
  405834:	or     ebx,eax
  405836:	mov    DWORD PTR [rsp],0x268
  40583d:	call   414720 <test_json@@Base>
  405842:	lea    rdx,[rip+0x25ee2]        # 42b72b <_IO_stdin_used@@Base+0x72b>
  405849:	lea    rsi,[rip+0x28878]        # 42e0c8 <_IO_stdin_used@@Base+0x30c8>
  405850:	lea    rdi,[rip+0x33589]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405857:	xor    r8d,r8d
  40585a:	xor    ecx,ecx
  40585c:	xor    r9d,r9d
  40585f:	or     ebx,eax
  405861:	mov    DWORD PTR [rsp],0x26b
  405868:	call   414720 <test_json@@Base>
  40586d:	lea    rdx,[rip+0x2837c]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  405874:	lea    rsi,[rip+0x28875]        # 42e0f0 <_IO_stdin_used@@Base+0x30f0>
  40587b:	lea    rdi,[rip+0x3355e]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405882:	or     ebx,eax
  405884:	xor    r9d,r9d
  405887:	xor    r8d,r8d
  40588a:	xor    ecx,ecx
  40588c:	mov    DWORD PTR [rsp],0x26e
  405893:	call   414720 <test_json@@Base>
  405898:	lea    rdx,[rip+0x28351]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  40589f:	lea    rsi,[rip+0x2887a]        # 42e120 <_IO_stdin_used@@Base+0x3120>
  4058a6:	lea    rdi,[rip+0x33533]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4058ad:	xor    r9d,r9d
  4058b0:	xor    r8d,r8d
  4058b3:	xor    ecx,ecx
  4058b5:	or     ebx,eax
  4058b7:	mov    DWORD PTR [rsp],0x271
  4058be:	call   414720 <test_json@@Base>
  4058c3:	lea    rdx,[rip+0x25e7e]        # 42b748 <_IO_stdin_used@@Base+0x748>
  4058ca:	lea    rsi,[rip+0x2888f]        # 42e160 <_IO_stdin_used@@Base+0x3160>
  4058d1:	lea    rdi,[rip+0x33508]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4058d8:	xor    r9d,r9d
  4058db:	xor    r8d,r8d
  4058de:	xor    ecx,ecx
  4058e0:	or     ebx,eax
  4058e2:	mov    DWORD PTR [rsp],0x274
  4058e9:	call   414720 <test_json@@Base>
  4058ee:	lea    rdx,[rip+0x25e53]        # 42b748 <_IO_stdin_used@@Base+0x748>
  4058f5:	lea    rsi,[rip+0x28864]        # 42e160 <_IO_stdin_used@@Base+0x3160>
  4058fc:	lea    rdi,[rip+0x334dd]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405903:	xor    r9d,r9d
  405906:	xor    r8d,r8d
  405909:	xor    ecx,ecx
  40590b:	or     ebx,eax
  40590d:	mov    DWORD PTR [rsp],0x277
  405914:	call   414720 <test_json@@Base>
  405919:	lea    rdx,[rip+0x28870]        # 42e190 <_IO_stdin_used@@Base+0x3190>
  405920:	lea    rsi,[rip+0x288b1]        # 42e1d8 <_IO_stdin_used@@Base+0x31d8>
  405927:	lea    rdi,[rip+0x334b2]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  40592e:	xor    r9d,r9d
  405931:	xor    r8d,r8d
  405934:	xor    ecx,ecx
  405936:	or     ebx,eax
  405938:	mov    DWORD PTR [rsp],0x27a
  40593f:	call   414720 <test_json@@Base>
  405944:	lea    rdx,[rip+0x288e5]        # 42e230 <_IO_stdin_used@@Base+0x3230>
  40594b:	lea    rsi,[rip+0x2892e]        # 42e280 <_IO_stdin_used@@Base+0x3280>
  405952:	lea    rdi,[rip+0x33487]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405959:	xor    r9d,r9d
  40595c:	xor    r8d,r8d
  40595f:	xor    ecx,ecx
  405961:	or     ebx,eax
  405963:	mov    DWORD PTR [rsp],0x27e
  40596a:	call   414720 <test_json@@Base>
  40596f:	lea    rdx,[rip+0x28962]        # 42e2d8 <_IO_stdin_used@@Base+0x32d8>
  405976:	lea    rsi,[rip+0x289c3]        # 42e340 <_IO_stdin_used@@Base+0x3340>
  40597d:	lea    rdi,[rip+0x3345c]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405984:	or     ebx,eax
  405986:	xor    r9d,r9d
  405989:	xor    r8d,r8d
  40598c:	xor    ecx,ecx
  40598e:	mov    DWORD PTR [rsp],0x282
  405995:	call   414720 <test_json@@Base>
  40599a:	lea    rdx,[rip+0x25c65]        # 42b606 <_IO_stdin_used@@Base+0x606>
  4059a1:	lea    rsi,[rip+0x28a08]        # 42e3b0 <_IO_stdin_used@@Base+0x33b0>
  4059a8:	lea    rdi,[rip+0x33431]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4059af:	xor    r9d,r9d
  4059b2:	xor    r8d,r8d
  4059b5:	xor    ecx,ecx
  4059b7:	or     ebx,eax
  4059b9:	mov    DWORD PTR [rsp],0x286
  4059c0:	call   414720 <test_json@@Base>
  4059c5:	lea    rdx,[rip+0x25c3a]        # 42b606 <_IO_stdin_used@@Base+0x606>
  4059cc:	lea    rsi,[rip+0x28a0d]        # 42e3e0 <_IO_stdin_used@@Base+0x33e0>
  4059d3:	lea    rdi,[rip+0x33406]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4059da:	xor    r9d,r9d
  4059dd:	xor    r8d,r8d
  4059e0:	xor    ecx,ecx
  4059e2:	or     ebx,eax
  4059e4:	mov    DWORD PTR [rsp],0x289
  4059eb:	call   414720 <test_json@@Base>
  4059f0:	lea    rdx,[rip+0x281f9]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  4059f7:	lea    rsi,[rip+0x25d64]        # 42b762 <_IO_stdin_used@@Base+0x762>
  4059fe:	lea    rdi,[rip+0x333db]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405a05:	xor    r9d,r9d
  405a08:	xor    r8d,r8d
  405a0b:	xor    ecx,ecx
  405a0d:	or     ebx,eax
  405a0f:	mov    DWORD PTR [rsp],0x28d
  405a16:	call   414720 <test_json@@Base>
  405a1b:	lea    rdx,[rip+0x2821e]        # 42dc40 <_IO_stdin_used@@Base+0x2c40>
  405a22:	lea    rsi,[rip+0x25d56]        # 42b77f <_IO_stdin_used@@Base+0x77f>
  405a29:	lea    rdi,[rip+0x333b0]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405a30:	xor    r9d,r9d
  405a33:	xor    r8d,r8d
  405a36:	xor    ecx,ecx
  405a38:	or     ebx,eax
  405a3a:	mov    DWORD PTR [rsp],0x290
  405a41:	call   414720 <test_json@@Base>
  405a46:	lea    rdx,[rip+0x285b3]        # 42e000 <_IO_stdin_used@@Base+0x3000>
  405a4d:	lea    rsi,[rip+0x25d48]        # 42b79c <_IO_stdin_used@@Base+0x79c>
  405a54:	lea    rdi,[rip+0x33385]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405a5b:	xor    r9d,r9d
  405a5e:	xor    r8d,r8d
  405a61:	xor    ecx,ecx
  405a63:	or     ebx,eax
  405a65:	mov    DWORD PTR [rsp],0x293
  405a6c:	call   414720 <test_json@@Base>
  405a71:	lea    rdx,[rip+0x28218]        # 42dc90 <_IO_stdin_used@@Base+0x2c90>
  405a78:	lea    rsi,[rip+0x25d3a]        # 42b7b9 <_IO_stdin_used@@Base+0x7b9>
  405a7f:	lea    rdi,[rip+0x3335a]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405a86:	xor    r9d,r9d
  405a89:	xor    r8d,r8d
  405a8c:	xor    ecx,ecx
  405a8e:	mov    DWORD PTR [rsp],0x296
  405a95:	or     ebx,eax
  405a97:	call   414720 <test_json@@Base>
  405a9c:	lea    rdx,[rip+0x25c4c]        # 42b6ef <_IO_stdin_used@@Base+0x6ef>
  405aa3:	lea    rsi,[rip+0x25d2d]        # 42b7d7 <_IO_stdin_used@@Base+0x7d7>
  405aaa:	lea    rdi,[rip+0x3332f]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405ab1:	or     ebx,eax
  405ab3:	xor    r9d,r9d
  405ab6:	xor    r8d,r8d
  405ab9:	xor    ecx,ecx
  405abb:	mov    DWORD PTR [rsp],0x299
  405ac2:	call   414720 <test_json@@Base>
  405ac7:	lea    rdx,[rip+0x25c3f]        # 42b70d <_IO_stdin_used@@Base+0x70d>
  405ace:	lea    rsi,[rip+0x25d20]        # 42b7f5 <_IO_stdin_used@@Base+0x7f5>
  405ad5:	lea    rdi,[rip+0x33304]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405adc:	xor    r9d,r9d
  405adf:	xor    r8d,r8d
  405ae2:	xor    ecx,ecx
  405ae4:	or     ebx,eax
  405ae6:	mov    DWORD PTR [rsp],0x29c
  405aed:	call   414720 <test_json@@Base>
  405af2:	lea    rdx,[rip+0x25c32]        # 42b72b <_IO_stdin_used@@Base+0x72b>
  405af9:	lea    rsi,[rip+0x25d13]        # 42b813 <_IO_stdin_used@@Base+0x813>
  405b00:	lea    rdi,[rip+0x332d9]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405b07:	xor    r9d,r9d
  405b0a:	xor    r8d,r8d
  405b0d:	xor    ecx,ecx
  405b0f:	or     ebx,eax
  405b11:	mov    DWORD PTR [rsp],0x29f
  405b18:	call   414720 <test_json@@Base>
  405b1d:	lea    rdx,[rip+0x280cc]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  405b24:	lea    rsi,[rip+0x288dd]        # 42e408 <_IO_stdin_used@@Base+0x3408>
  405b2b:	lea    rdi,[rip+0x332ae]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405b32:	xor    r9d,r9d
  405b35:	xor    r8d,r8d
  405b38:	xor    ecx,ecx
  405b3a:	or     ebx,eax
  405b3c:	mov    DWORD PTR [rsp],0x2a2
  405b43:	call   414720 <test_json@@Base>
  405b48:	lea    rdx,[rip+0x280a1]        # 42dbf0 <_IO_stdin_used@@Base+0x2bf0>
  405b4f:	lea    rsi,[rip+0x288da]        # 42e430 <_IO_stdin_used@@Base+0x3430>
  405b56:	lea    rdi,[rip+0x33283]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405b5d:	xor    r9d,r9d
  405b60:	xor    r8d,r8d
  405b63:	xor    ecx,ecx
  405b65:	or     ebx,eax
  405b67:	mov    DWORD PTR [rsp],0x2a5
  405b6e:	call   414720 <test_json@@Base>
  405b73:	lea    rdx,[rip+0x25bce]        # 42b748 <_IO_stdin_used@@Base+0x748>
  405b7a:	lea    rsi,[rip+0x288e7]        # 42e468 <_IO_stdin_used@@Base+0x3468>
  405b81:	lea    rdi,[rip+0x33258]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405b88:	xor    r9d,r9d
  405b8b:	xor    ecx,ecx
  405b8d:	xor    r8d,r8d
  405b90:	or     ebx,eax
  405b92:	mov    DWORD PTR [rsp],0x2a8
  405b99:	call   414720 <test_json@@Base>
  405b9e:	lea    rdx,[rip+0x25ba3]        # 42b748 <_IO_stdin_used@@Base+0x748>
  405ba5:	lea    rsi,[rip+0x288bc]        # 42e468 <_IO_stdin_used@@Base+0x3468>
  405bac:	lea    rdi,[rip+0x3322d]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405bb3:	or     ebx,eax
  405bb5:	xor    r9d,r9d
  405bb8:	xor    r8d,r8d
  405bbb:	xor    ecx,ecx
  405bbd:	mov    DWORD PTR [rsp],0x2ab
  405bc4:	call   414720 <test_json@@Base>
  405bc9:	lea    rdx,[rip+0x285c0]        # 42e190 <_IO_stdin_used@@Base+0x3190>
  405bd0:	lea    rsi,[rip+0x288b9]        # 42e490 <_IO_stdin_used@@Base+0x3490>
  405bd7:	lea    rdi,[rip+0x33202]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405bde:	xor    r9d,r9d
  405be1:	xor    r8d,r8d
  405be4:	xor    ecx,ecx
  405be6:	or     ebx,eax
  405be8:	mov    DWORD PTR [rsp],0x2ae
  405bef:	call   414720 <test_json@@Base>
  405bf4:	lea    rdx,[rip+0x28635]        # 42e230 <_IO_stdin_used@@Base+0x3230>
  405bfb:	lea    rsi,[rip+0x288d6]        # 42e4d8 <_IO_stdin_used@@Base+0x34d8>
  405c02:	lea    rdi,[rip+0x331d7]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405c09:	xor    r9d,r9d
  405c0c:	xor    r8d,r8d
  405c0f:	xor    ecx,ecx
  405c11:	or     ebx,eax
  405c13:	mov    DWORD PTR [rsp],0x2b2
  405c1a:	call   414720 <test_json@@Base>
  405c1f:	lea    rdx,[rip+0x286b2]        # 42e2d8 <_IO_stdin_used@@Base+0x32d8>
  405c26:	lea    rsi,[rip+0x288fb]        # 42e528 <_IO_stdin_used@@Base+0x3528>
  405c2d:	lea    rdi,[rip+0x331ac]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405c34:	xor    r9d,r9d
  405c37:	xor    r8d,r8d
  405c3a:	xor    ecx,ecx
  405c3c:	or     ebx,eax
  405c3e:	mov    DWORD PTR [rsp],0x2b6
  405c45:	call   414720 <test_json@@Base>
  405c4a:	lea    rdx,[rip+0x259b5]        # 42b606 <_IO_stdin_used@@Base+0x606>
  405c51:	lea    rsi,[rip+0x28930]        # 42e588 <_IO_stdin_used@@Base+0x3588>
  405c58:	lea    rdi,[rip+0x33181]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405c5f:	xor    r9d,r9d
  405c62:	xor    r8d,r8d
  405c65:	xor    ecx,ecx
  405c67:	or     ebx,eax
  405c69:	mov    DWORD PTR [rsp],0x2ba
  405c70:	call   414720 <test_json@@Base>
  405c75:	lea    rdx,[rip+0x2598a]        # 42b606 <_IO_stdin_used@@Base+0x606>
  405c7c:	lea    rsi,[rip+0x2892d]        # 42e5b0 <_IO_stdin_used@@Base+0x35b0>
  405c83:	lea    rdi,[rip+0x33156]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405c8a:	xor    r9d,r9d
  405c8d:	xor    r8d,r8d
  405c90:	xor    ecx,ecx
  405c92:	or     ebx,eax
  405c94:	mov    DWORD PTR [rsp],0x2bd
  405c9b:	call   414720 <test_json@@Base>
  405ca0:	lea    rdx,[rip+0x28931]        # 42e5d8 <_IO_stdin_used@@Base+0x35d8>
  405ca7:	lea    rsi,[rip+0x2898a]        # 42e638 <_IO_stdin_used@@Base+0x3638>
  405cae:	lea    rdi,[rip+0x3312b]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405cb5:	xor    r9d,r9d
  405cb8:	xor    r8d,r8d
  405cbb:	xor    ecx,ecx
  405cbd:	mov    DWORD PTR [rsp],0x2c7
  405cc4:	or     ebx,eax
  405cc6:	call   414720 <test_json@@Base>
  405ccb:	lea    rdx,[rip+0x28906]        # 42e5d8 <_IO_stdin_used@@Base+0x35d8>
  405cd2:	lea    rsi,[rip+0x289bf]        # 42e698 <_IO_stdin_used@@Base+0x3698>
  405cd9:	lea    rdi,[rip+0x33100]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405ce0:	xor    r9d,r9d
  405ce3:	xor    r8d,r8d
  405ce6:	xor    ecx,ecx
  405ce8:	or     ebx,eax
  405cea:	mov    DWORD PTR [rsp],0x2cc
  405cf1:	call   414720 <test_json@@Base>
  405cf6:	lea    rdx,[rip+0x28a0b]        # 42e708 <_IO_stdin_used@@Base+0x3708>
  405cfd:	lea    rsi,[rip+0x28a34]        # 42e738 <_IO_stdin_used@@Base+0x3738>
  405d04:	lea    rdi,[rip+0x330d5]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405d0b:	xor    r9d,r9d
  405d0e:	xor    r8d,r8d
  405d11:	xor    ecx,ecx
  405d13:	or     ebx,eax
  405d15:	mov    DWORD PTR [rsp],0x2db
  405d1c:	call   414720 <test_json@@Base>
  405d21:	lea    rdx,[rip+0x25b08]        # 42b830 <_IO_stdin_used@@Base+0x830>
  405d28:	lea    rsi,[rip+0x25b13]        # 42b842 <_IO_stdin_used@@Base+0x842>
  405d2f:	lea    rdi,[rip+0x330aa]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405d36:	xor    r9d,r9d
  405d39:	xor    r8d,r8d
  405d3c:	xor    ecx,ecx
  405d3e:	or     ebx,eax
  405d40:	mov    DWORD PTR [rsp],0x2de
  405d47:	call   414720 <test_json@@Base>
  405d4c:	lea    rdx,[rip+0x28a25]        # 42e778 <_IO_stdin_used@@Base+0x3778>
  405d53:	lea    rsi,[rip+0x28a66]        # 42e7c0 <_IO_stdin_used@@Base+0x37c0>
  405d5a:	lea    rdi,[rip+0x3307f]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405d61:	xor    r9d,r9d
  405d64:	xor    r8d,r8d
  405d67:	xor    ecx,ecx
  405d69:	or     ebx,eax
  405d6b:	mov    DWORD PTR [rsp],0x2e2
  405d72:	call   414720 <test_json@@Base>
  405d77:	lea    rdx,[rip+0x289fa]        # 42e778 <_IO_stdin_used@@Base+0x3778>
  405d7e:	lea    rsi,[rip+0x28a83]        # 42e808 <_IO_stdin_used@@Base+0x3808>
  405d85:	lea    rdi,[rip+0x33054]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405d8c:	xor    r9d,r9d
  405d8f:	xor    r8d,r8d
  405d92:	xor    ecx,ecx
  405d94:	or     ebx,eax
  405d96:	mov    DWORD PTR [rsp],0x2ee
  405d9d:	call   414720 <test_json@@Base>
  405da2:	lea    rdx,[rip+0x28aff]        # 42e8a8 <_IO_stdin_used@@Base+0x38a8>
  405da9:	lea    rsi,[rip+0x28b20]        # 42e8d0 <_IO_stdin_used@@Base+0x38d0>
  405db0:	lea    rdi,[rip+0x33029]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405db7:	xor    r8d,r8d
  405dba:	xor    ecx,ecx
  405dbc:	xor    r9d,r9d
  405dbf:	or     ebx,eax
  405dc1:	mov    DWORD PTR [rsp],0x2fe
  405dc8:	call   414720 <test_json@@Base>
  405dcd:	lea    rdx,[rip+0x28b24]        # 42e8f8 <_IO_stdin_used@@Base+0x38f8>
  405dd4:	lea    rsi,[rip+0x28b4d]        # 42e928 <_IO_stdin_used@@Base+0x3928>
  405ddb:	lea    rdi,[rip+0x32ffe]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405de2:	or     ebx,eax
  405de4:	xor    r9d,r9d
  405de7:	xor    r8d,r8d
  405dea:	xor    ecx,ecx
  405dec:	mov    DWORD PTR [rsp],0x302
  405df3:	call   414720 <test_json@@Base>
  405df8:	lea    rdx,[rip+0x28b59]        # 42e958 <_IO_stdin_used@@Base+0x3958>
  405dff:	lea    rsi,[rip+0x28bc2]        # 42e9c8 <_IO_stdin_used@@Base+0x39c8>
  405e06:	lea    rdi,[rip+0x32fd3]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405e0d:	xor    r9d,r9d
  405e10:	xor    r8d,r8d
  405e13:	xor    ecx,ecx
  405e15:	or     ebx,eax
  405e17:	mov    DWORD PTR [rsp],0x308
  405e1e:	call   414720 <test_json@@Base>
  405e23:	lea    rdx,[rip+0x257dc]        # 42b606 <_IO_stdin_used@@Base+0x606>
  405e2a:	lea    rsi,[rip+0x28c17]        # 42ea48 <_IO_stdin_used@@Base+0x3a48>
  405e31:	lea    rdi,[rip+0x32fa8]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405e38:	xor    r9d,r9d
  405e3b:	xor    r8d,r8d
  405e3e:	xor    ecx,ecx
  405e40:	or     ebx,eax
  405e42:	mov    DWORD PTR [rsp],0x30d
  405e49:	call   414720 <test_json@@Base>
  405e4e:	lea    rdx,[rip+0x28c6b]        # 42eac0 <_IO_stdin_used@@Base+0x3ac0>
  405e55:	lea    rsi,[rip+0x28cd4]        # 42eb30 <_IO_stdin_used@@Base+0x3b30>
  405e5c:	lea    rdi,[rip+0x32f7d]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405e63:	xor    r9d,r9d
  405e66:	xor    r8d,r8d
  405e69:	xor    ecx,ecx
  405e6b:	or     ebx,eax
  405e6d:	mov    DWORD PTR [rsp],0x312
  405e74:	call   414720 <test_json@@Base>
  405e79:	lea    rdx,[rip+0x28d30]        # 42ebb0 <_IO_stdin_used@@Base+0x3bb0>
  405e80:	lea    rsi,[rip+0x28da9]        # 42ec30 <_IO_stdin_used@@Base+0x3c30>
  405e87:	lea    rdi,[rip+0x32f52]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405e8e:	xor    r9d,r9d
  405e91:	xor    r8d,r8d
  405e94:	xor    ecx,ecx
  405e96:	or     ebx,eax
  405e98:	mov    DWORD PTR [rsp],0x317
  405e9f:	call   414720 <test_json@@Base>
  405ea4:	lea    rdx,[rip+0x28e15]        # 42ecc0 <_IO_stdin_used@@Base+0x3cc0>
  405eab:	lea    rsi,[rip+0x28e7e]        # 42ed30 <_IO_stdin_used@@Base+0x3d30>
  405eb2:	lea    rdi,[rip+0x32f27]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405eb9:	xor    r9d,r9d
  405ebc:	xor    r8d,r8d
  405ebf:	xor    ecx,ecx
  405ec1:	or     ebx,eax
  405ec3:	mov    DWORD PTR [rsp],0x31c
  405eca:	call   414720 <test_json@@Base>
  405ecf:	lea    rdx,[rip+0x28eda]        # 42edb0 <_IO_stdin_used@@Base+0x3db0>
  405ed6:	lea    rsi,[rip+0x28f53]        # 42ee30 <_IO_stdin_used@@Base+0x3e30>
  405edd:	lea    rdi,[rip+0x32efc]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405ee4:	or     ebx,eax
  405ee6:	xor    r9d,r9d
  405ee9:	xor    r8d,r8d
  405eec:	xor    ecx,ecx
  405eee:	mov    DWORD PTR [rsp],0x321
  405ef5:	call   414720 <test_json@@Base>
  405efa:	lea    rdx,[rip+0x28fbf]        # 42eec0 <_IO_stdin_used@@Base+0x3ec0>
  405f01:	lea    rsi,[rip+0x29040]        # 42ef48 <_IO_stdin_used@@Base+0x3f48>
  405f08:	lea    rdi,[rip+0x32ed1]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  405f0f:	or     ebx,eax
  405f11:	xor    ecx,ecx
  405f13:	xor    r9d,r9d
  405f16:	xor    r8d,r8d
  405f19:	mov    DWORD PTR [rsp],0x326
  405f20:	call   414720 <test_json@@Base>
  405f25:	or     ebx,eax
  405f27:	setne  al
  405f2a:	movzx  eax,al
  405f2d:	pop    rdx
  405f2e:	neg    eax
  405f30:	pop    rcx
  405f31:	pop    rbx
  405f32:	ret    
  405f33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f3d:	nop    DWORD PTR [rax]

0000000000405f40 <_start@@Base>:
  405f40:	endbr64 
  405f44:	xor    ebp,ebp
  405f46:	mov    r9,rdx
  405f49:	pop    rsi
  405f4a:	mov    rdx,rsp
  405f4d:	and    rsp,0xfffffffffffffff0
  405f51:	push   rax
  405f52:	push   rsp
  405f53:	mov    r8,0x42add0
  405f5a:	mov    rcx,0x42ad60
  405f61:	mov    rdi,0x405360
  405f68:	call   QWORD PTR [rip+0x3306a]        # 438fd8 <__libc_start_main@GLIBC_2.2.5>
  405f6e:	hlt    
  405f6f:	nop
  405f70:	endbr64 
  405f74:	ret    
  405f75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f7f:	nop
  405f80:	mov    eax,0x439857
  405f85:	push   rbp
  405f86:	sub    rax,0x439850
  405f8c:	cmp    rax,0xe
  405f90:	mov    rbp,rsp
  405f93:	jbe    405fb0 <_start@@Base+0x70>
  405f95:	mov    eax,0x0
  405f9a:	test   rax,rax
  405f9d:	je     405fb0 <_start@@Base+0x70>
  405f9f:	pop    rbp
  405fa0:	mov    edi,0x439850
  405fa5:	jmp    rax
  405fa7:	nop    WORD PTR [rax+rax*1+0x0]
  405fb0:	pop    rbp
  405fb1:	ret    
  405fb2:	nop    DWORD PTR [rax+0x0]
  405fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fc0:	mov    esi,0x439850
  405fc5:	push   rbp
  405fc6:	sub    rsi,0x439850
  405fcd:	sar    rsi,0x3
  405fd1:	mov    rbp,rsp
  405fd4:	mov    rax,rsi
  405fd7:	shr    rax,0x3f
  405fdb:	add    rsi,rax
  405fde:	sar    rsi,1
  405fe1:	je     405ff8 <_start@@Base+0xb8>
  405fe3:	mov    eax,0x0
  405fe8:	test   rax,rax
  405feb:	je     405ff8 <_start@@Base+0xb8>
  405fed:	pop    rbp
  405fee:	mov    edi,0x439850
  405ff3:	jmp    rax
  405ff5:	nop    DWORD PTR [rax]
  405ff8:	pop    rbp
  405ff9:	ret    
  405ffa:	nop    WORD PTR [rax+rax*1+0x0]
  406000:	cmp    BYTE PTR [rip+0x33849],0x0        # 439850 <__bss_start@@Base>
  406007:	jne    40601a <_start@@Base+0xda>
  406009:	push   rbp
  40600a:	mov    rbp,rsp
  40600d:	call   405f80 <_start@@Base+0x40>
  406012:	pop    rbp
  406013:	mov    BYTE PTR [rip+0x33836],0x1        # 439850 <__bss_start@@Base>
  40601a:	repz ret 
  40601c:	nop    DWORD PTR [rax+0x0]
  406020:	mov    edi,0x438d98
  406025:	cmp    QWORD PTR [rdi],0x0
  406029:	jne    406030 <_start@@Base+0xf0>
  40602b:	jmp    405fc0 <_start@@Base+0x80>
  40602d:	nop    DWORD PTR [rax]
  406030:	mov    eax,0x0
  406035:	test   rax,rax
  406038:	je     40602b <_start@@Base+0xeb>
  40603a:	push   rbp
  40603b:	mov    rbp,rsp
  40603e:	call   rax
  406040:	pop    rbp
  406041:	jmp    405fc0 <_start@@Base+0x80>
  406046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406050:	sub    rsi,rdi
  406053:	cmp    rsi,0x8
  406057:	jbe    4060c8 <_start@@Base+0x188>
  406059:	movsx  rax,BYTE PTR [rdi+0x7]
  40605e:	movsx  rdx,BYTE PTR [rdi+0x6]
  406063:	mov    rcx,rdx
  406066:	shl    rcx,0x8
  40606a:	or     rcx,rax
  40606d:	movsx  rdx,BYTE PTR [rdi+0x5]
  406072:	mov    rax,rdx
  406075:	shl    rax,0x10
  406079:	or     rcx,rax
  40607c:	movsx  rdx,BYTE PTR [rdi+0x4]
  406081:	mov    rax,rdx
  406084:	shl    rax,0x18
  406088:	or     rax,rcx
  40608b:	movsx  rdx,BYTE PTR [rdi+0x3]
  406090:	shl    rdx,0x20
  406094:	or     rax,rdx
  406097:	movsx  rdx,BYTE PTR [rdi+0x2]
  40609c:	mov    rcx,rdx
  40609f:	shl    rcx,0x28
  4060a3:	or     rcx,rax
  4060a6:	movsx  rdx,BYTE PTR [rdi+0x1]
  4060ab:	mov    rax,rdx
  4060ae:	shl    rax,0x30
  4060b2:	or     rcx,rax
  4060b5:	movsx  rdx,BYTE PTR [rdi]
  4060b9:	mov    rax,rdx
  4060bc:	shl    rax,0x38
  4060c0:	or     rax,rcx
  4060c3:	ret    
  4060c4:	nop    DWORD PTR [rax+0x0]
  4060c8:	lea    rdx,[rip+0x24f35]        # 42b004 <_IO_stdin_used@@Base+0x4>
  4060cf:	movsxd rax,DWORD PTR [rdx+rsi*4]
  4060d3:	add    rax,rdx
  4060d6:	jmp    rax
  4060d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4060e0:	xor    eax,eax
  4060e2:	jmp    40605e <_start@@Base+0x11e>
  4060e7:	nop    WORD PTR [rax+rax*1+0x0]
  4060f0:	xor    ecx,ecx
  4060f2:	jmp    40606d <_start@@Base+0x12d>
  4060f7:	nop    WORD PTR [rax+rax*1+0x0]
  406100:	xor    ecx,ecx
  406102:	jmp    40607c <_start@@Base+0x13c>
  406107:	nop    WORD PTR [rax+rax*1+0x0]
  406110:	xor    eax,eax
  406112:	jmp    40608b <_start@@Base+0x14b>
  406117:	nop    WORD PTR [rax+rax*1+0x0]
  406120:	xor    eax,eax
  406122:	jmp    406097 <_start@@Base+0x157>
  406127:	nop    WORD PTR [rax+rax*1+0x0]
  406130:	xor    ecx,ecx
  406132:	jmp    4060a6 <_start@@Base+0x166>
  406137:	nop    WORD PTR [rax+rax*1+0x0]
  406140:	xor    ecx,ecx
  406142:	jmp    4060b5 <_start@@Base+0x175>
  406147:	nop    WORD PTR [rax+rax*1+0x0]
  406150:	xor    eax,eax
  406152:	ret    
  406153:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40615e:	xchg   ax,ax
  406160:	xor    eax,eax
  406162:	cmp    dil,0x4
  406166:	setbe  al
  406169:	ret    
  40616a:	nop    WORD PTR [rax+rax*1+0x0]
  406170:	cmp    dil,0xb
  406174:	ja     406190 <_start@@Base+0x250>
  406176:	cmp    dil,0x8
  40617a:	jae    406196 <_start@@Base+0x256>
  40617c:	test   dil,dil
  40617f:	je     406196 <_start@@Base+0x256>
  406181:	cmp    dil,0x2
  406185:	je     406196 <_start@@Base+0x256>
  406187:	xor    eax,eax
  406189:	ret    
  40618a:	nop    WORD PTR [rax+rax*1+0x0]
  406190:	cmp    dil,0xff
  406194:	jne    406187 <_start@@Base+0x247>
  406196:	mov    eax,0x1
  40619b:	ret    
  40619c:	nop    DWORD PTR [rax+0x0]
  4061a0:	repz ret 
  4061a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061ad:	nop    DWORD PTR [rax]
  4061b0:	xor    eax,eax
  4061b2:	ret    
  4061b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061be:	xchg   ax,ax
  4061c0:	mov    ecx,0x4
  4061c5:	mov    edx,0x4
  4061ca:	xor    esi,esi
  4061cc:	jmp    419f50 <flatcc_verify_field@@Base>
  4061d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4061dc:	nop    DWORD PTR [rax+0x0]
  4061e0:	push   rbp
  4061e1:	push   rbx
  4061e2:	lea    r9,[rip+0x137]        # 406320 <_start@@Base+0x3e0>
  4061e9:	lea    rcx,[rip+0x25010]        # 42b200 <_IO_stdin_used@@Base+0x200>
  4061f0:	mov    r8d,0x15
  4061f6:	xor    edx,edx
  4061f8:	sub    rsp,0x8
  4061fc:	mov    rbx,rdi
  4061ff:	mov    rbp,rsi
  406202:	call   429ab0 <flatcc_json_printer_table_field@@Base>
  406207:	lea    r9,[rip+0xc2]        # 4062d0 <_start@@Base+0x390>
  40620e:	lea    rcx,[rip+0x25001]        # 42b216 <_IO_stdin_used@@Base+0x216>
  406215:	mov    rsi,rbp
  406218:	mov    rdi,rbx
  40621b:	mov    r8d,0x16
  406221:	mov    edx,0x1
  406226:	call   429ab0 <flatcc_json_printer_table_field@@Base>
  40622b:	add    rsp,0x8
  40622f:	mov    rsi,rbp
  406232:	mov    rdi,rbx
  406235:	pop    rbx
  406236:	pop    rbp
  406237:	lea    r9,[rip+0x42]        # 406280 <_start@@Base+0x340>
  40623e:	lea    rcx,[rip+0x24fe8]        # 42b22d <_IO_stdin_used@@Base+0x22d>
  406245:	mov    r8d,0x16
  40624b:	mov    edx,0x2
  406250:	jmp    429ab0 <flatcc_json_printer_table_field@@Base>
  406255:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406260:	lea    rcx,[rip+0x24fdd]        # 42b244 <_IO_stdin_used@@Base+0x244>
  406267:	xor    r9d,r9d
  40626a:	mov    r8d,0x13
  406270:	xor    edx,edx
  406272:	jmp    422240 <flatcc_json_printer_int32_field@@Base>
  406277:	nop    WORD PTR [rax+rax*1+0x0]
  406280:	push   rbp
  406281:	push   rbx
  406282:	lea    rcx,[rip+0x24fcf]        # 42b258 <_IO_stdin_used@@Base+0x258>
  406289:	xor    r9d,r9d
  40628c:	mov    r8d,0xf
  406292:	xor    edx,edx
  406294:	sub    rsp,0x8
  406298:	mov    rbx,rdi
  40629b:	mov    rbp,rsi
  40629e:	call   4223e0 <flatcc_json_printer_int64_field@@Base>
  4062a3:	add    rsp,0x8
  4062a7:	mov    rsi,rbp
  4062aa:	mov    rdi,rbx
  4062ad:	pop    rbx
  4062ae:	pop    rbp
  4062af:	lea    rcx,[rip+0x24fb2]        # 42b268 <_IO_stdin_used@@Base+0x268>
  4062b6:	xor    r9d,r9d
  4062b9:	mov    r8d,0x15
  4062bf:	mov    edx,0x1
  4062c4:	jmp    421bf0 <flatcc_json_printer_uint32_field@@Base>
  4062c9:	nop    DWORD PTR [rax+0x0]
  4062d0:	push   rbp
  4062d1:	push   rbx
  4062d2:	lea    rcx,[rip+0x24f7f]        # 42b258 <_IO_stdin_used@@Base+0x258>
  4062d9:	xor    r9d,r9d
  4062dc:	mov    r8d,0xf
  4062e2:	xor    edx,edx
  4062e4:	sub    rsp,0x8
  4062e8:	mov    rbx,rdi
  4062eb:	mov    rbp,rsi
  4062ee:	call   4223e0 <flatcc_json_printer_int64_field@@Base>
  4062f3:	add    rsp,0x8
  4062f7:	mov    rsi,rbp
  4062fa:	mov    rdi,rbx
  4062fd:	pop    rbx
  4062fe:	pop    rbp
  4062ff:	lea    rcx,[rip+0x24f78]        # 42b27e <_IO_stdin_used@@Base+0x27e>
  406306:	xor    r9d,r9d
  406309:	mov    r8d,0x10
  40630f:	mov    edx,0x1
  406314:	jmp    421bf0 <flatcc_json_printer_uint32_field@@Base>
  406319:	nop    DWORD PTR [rax+0x0]
  406320:	push   rbp
  406321:	push   rbx
  406322:	lea    rcx,[rip+0x24f66]        # 42b28f <_IO_stdin_used@@Base+0x28f>
  406329:	mov    r8d,0x4
  40632f:	xor    edx,edx
  406331:	mov    rbx,rdi
  406334:	sub    rsp,0x8
  406338:	mov    rbp,rsi
  40633b:	call   421480 <flatcc_json_printer_string_field@@Base>
  406340:	lea    rcx,[rip+0x24f4d]        # 42b294 <_IO_stdin_used@@Base+0x294>
  406347:	xor    r9d,r9d
  40634a:	mov    rsi,rbp
  40634d:	mov    rdi,rbx
  406350:	mov    r8d,0x9
  406356:	mov    edx,0x1
  40635b:	call   421bf0 <flatcc_json_printer_uint32_field@@Base>
  406360:	lea    rcx,[rip+0x24f37]        # 42b29e <_IO_stdin_used@@Base+0x29e>
  406367:	mov    rsi,rbp
  40636a:	mov    rdi,rbx
  40636d:	mov    r8d,0x4
  406373:	mov    edx,0x2
  406378:	call   421480 <flatcc_json_printer_string_field@@Base>
  40637d:	lea    rcx,[rip+0x24f1f]        # 42b2a3 <_IO_stdin_used@@Base+0x2a3>
  406384:	xor    r9d,r9d
  406387:	mov    rsi,rbp
  40638a:	mov    rdi,rbx
  40638d:	mov    r8d,0x8
  406393:	mov    edx,0x3
  406398:	call   4223e0 <flatcc_json_printer_int64_field@@Base>
  40639d:	lea    rcx,[rip+0x24f08]        # 42b2ac <_IO_stdin_used@@Base+0x2ac>
  4063a4:	mov    rsi,rbp
  4063a7:	mov    rdi,rbx
  4063aa:	mov    r8d,0x4
  4063b0:	mov    edx,0x4
  4063b5:	call   421480 <flatcc_json_printer_string_field@@Base>
  4063ba:	lea    rcx,[rip+0x24ef0]        # 42b2b1 <_IO_stdin_used@@Base+0x2b1>
  4063c1:	mov    rsi,rbp
  4063c4:	mov    rdi,rbx
  4063c7:	xor    r9d,r9d
  4063ca:	mov    r8d,0x8
  4063d0:	mov    edx,0x5
  4063d5:	call   4223e0 <flatcc_json_printer_int64_field@@Base>
  4063da:	lea    rcx,[rip+0x24ed9]        # 42b2ba <_IO_stdin_used@@Base+0x2ba>
  4063e1:	mov    rsi,rbp
  4063e4:	mov    rdi,rbx
  4063e7:	xor    r9d,r9d
  4063ea:	mov    r8d,0x9
  4063f0:	mov    edx,0x6
  4063f5:	call   421bf0 <flatcc_json_printer_uint32_field@@Base>
  4063fa:	lea    rcx,[rip+0x24ec3]        # 42b2c4 <_IO_stdin_used@@Base+0x2c4>
  406401:	mov    rsi,rbp
  406404:	mov    rdi,rbx
  406407:	xor    r9d,r9d
  40640a:	mov    r8d,0x8
  406410:	mov    edx,0x7
  406415:	call   4223e0 <flatcc_json_printer_int64_field@@Base>
  40641a:	add    rsp,0x8
  40641e:	mov    rsi,rbp
  406421:	mov    rdi,rbx
  406424:	pop    rbx
  406425:	pop    rbp
  406426:	lea    rcx,[rip+0x24ea0]        # 42b2cd <_IO_stdin_used@@Base+0x2cd>
  40642d:	xor    r9d,r9d
  406430:	mov    r8d,0x9
  406436:	mov    edx,0x8
  40643b:	jmp    421bf0 <flatcc_json_printer_uint32_field@@Base>
  406440:	push   r12
  406442:	lea    r9,[rip+0xaf7]        # 406f40 <_start@@Base+0x1000>
  406449:	push   rbp
  40644a:	lea    rcx,[rip+0x24e86]        # 42b2d7 <_IO_stdin_used@@Base+0x2d7>
  406451:	push   rbx
  406452:	xor    edx,edx
  406454:	mov    r8d,0x3
  40645a:	mov    rbx,rdi
  40645d:	mov    rbp,rsi
  406460:	call   42a3d0 <flatcc_json_printer_struct_field@@Base>
  406465:	lea    rcx,[rip+0x24e6f]        # 42b2db <_IO_stdin_used@@Base+0x2db>
  40646c:	mov    rsi,rbp
  40646f:	mov    rdi,rbx
  406472:	mov    r9d,0x96
  406478:	mov    r8d,0x4
  40647e:	mov    edx,0x1
  406483:	call   422090 <flatcc_json_printer_int16_field@@Base>
  406488:	lea    rcx,[rip+0x24e51]        # 42b2e0 <_IO_stdin_used@@Base+0x2e0>
  40648f:	mov    r9d,0x64
  406495:	mov    rsi,rbp
  406498:	mov    rdi,rbx
  40649b:	mov    r8d,0x2
  4064a1:	mov    edx,0x2
  4064a6:	call   422090 <flatcc_json_printer_int16_field@@Base>
  4064ab:	lea    rcx,[rip+0x24e31]        # 42b2e3 <_IO_stdin_used@@Base+0x2e3>
  4064b2:	mov    rsi,rbp
  4064b5:	mov    rdi,rbx
  4064b8:	mov    r8d,0x4
  4064be:	mov    edx,0x3
  4064c3:	lea    r12,[rip+0x556]        # 406a20 <_start@@Base+0xae0>
  4064ca:	call   421480 <flatcc_json_printer_string_field@@Base>
  4064cf:	lea    rcx,[rip+0x24e12]        # 42b2e8 <_IO_stdin_used@@Base+0x2e8>
  4064d6:	mov    rsi,rbp
  4064d9:	mov    rdi,rbx
  4064dc:	mov    r8d,0x9
  4064e2:	mov    edx,0x5
  4064e7:	call   425960 <flatcc_json_printer_uint8_vector_field@@Base>
  4064ec:	lea    rax,[rip+0x97d]        # 406e70 <_start@@Base+0xf30>
  4064f3:	sub    rsp,0x8
  4064f7:	lea    rcx,[rip+0x24df4]        # 42b2f2 <_IO_stdin_used@@Base+0x2f2>
  4064fe:	mov    rsi,rbp
  406501:	mov    rdi,rbx
  406504:	mov    r9d,0x8
  40650a:	push   rax
  40650b:	mov    r8d,0x5
  406511:	mov    edx,0x6
  406516:	call   4231e0 <flatcc_json_printer_int8_enum_field@@Base>
  40651b:	lea    rax,[rip+0x54e]        # 406a70 <_start@@Base+0xb30>
  406522:	lea    r9,[rip+0x20e7]        # 408610 <_start@@Base+0x26d0>
  406529:	lea    rcx,[rip+0x24f3a]        # 42b46a <_IO_stdin_used@@Base+0x46a>
  406530:	mov    rsi,rbp
  406533:	mov    rdi,rbx
  406536:	mov    r8d,0x4
  40653c:	mov    edx,0x8
  406541:	mov    QWORD PTR [rsp],rax
  406545:	call   429d40 <flatcc_json_printer_union_field@@Base>
  40654a:	lea    rcx,[rip+0x24da7]        # 42b2f8 <_IO_stdin_used@@Base+0x2f8>
  406551:	mov    r9d,0x4
  406557:	mov    rsi,rbp
  40655a:	mov    rdi,rbx
  40655d:	mov    r8d,0x5
  406563:	mov    edx,0x9
  406568:	mov    QWORD PTR [rsp],r12
  40656c:	call   428ca0 <flatcc_json_printer_struct_vector_field@@Base>
  406571:	lea    rcx,[rip+0x24d86]        # 42b2fe <_IO_stdin_used@@Base+0x2fe>
  406578:	mov    rsi,rbp
  40657b:	mov    rdi,rbx
  40657e:	mov    r8d,0x11
  406584:	mov    edx,0xa
  406589:	call   428fe0 <flatcc_json_printer_string_vector_field@@Base>
  40658e:	lea    r9,[rip+0xfffffffffffffeab]        # 406440 <_start@@Base+0x500>
  406595:	lea    rcx,[rip+0x24d74]        # 42b310 <_IO_stdin_used@@Base+0x310>
  40659c:	mov    rsi,rbp
  40659f:	mov    rdi,rbx
  4065a2:	mov    r8d,0x11
  4065a8:	mov    edx,0xb
  4065ad:	call   429350 <flatcc_json_printer_table_vector_field@@Base>
  4065b2:	lea    r9,[rip+0xfffffffffffffe87]        # 406440 <_start@@Base+0x500>
  4065b9:	lea    rcx,[rip+0x24d62]        # 42b322 <_IO_stdin_used@@Base+0x322>
  4065c0:	mov    rsi,rbp
  4065c3:	mov    rdi,rbx
  4065c6:	mov    r8d,0x5
  4065cc:	mov    edx,0xc
  4065d1:	call   429ab0 <flatcc_json_printer_table_field@@Base>
  4065d6:	lea    rax,[rip+0xfffffffffffffe63]        # 406440 <_start@@Base+0x500>
  4065dd:	lea    rcx,[rip+0x24d44]        # 42b328 <_IO_stdin_used@@Base+0x328>
  4065e4:	xor    r9d,r9d
  4065e7:	mov    rsi,rbp
  4065ea:	mov    rdi,rbx
  4065ed:	mov    r8d,0x14
  4065f3:	mov    edx,0xd
  4065f8:	mov    QWORD PTR [rsp],rax
  4065fc:	call   42a970 <flatcc_json_printer_table_as_nested_root@@Base>
  406601:	lea    r9,[rip+0x3a8]        # 4069b0 <_start@@Base+0xa70>
  406608:	lea    rcx,[rip+0x24d2e]        # 42b33d <_IO_stdin_used@@Base+0x33d>
  40660f:	mov    rsi,rbp
  406612:	mov    rdi,rbx
  406615:	mov    r8d,0x9
  40661b:	mov    edx,0xe
  406620:	call   429ab0 <flatcc_json_printer_table_field@@Base>
  406625:	lea    rcx,[rip+0x24d1b]        # 42b347 <_IO_stdin_used@@Base+0x347>
  40662c:	mov    rsi,rbp
  40662f:	mov    rdi,rbx
  406632:	mov    r9d,0x1
  406638:	mov    r8d,0x8
  40663e:	mov    edx,0xf
  406643:	call   422580 <flatcc_json_printer_bool_field@@Base>
  406648:	lea    rcx,[rip+0x24d01]        # 42b350 <_IO_stdin_used@@Base+0x350>
  40664f:	xor    r9d,r9d
  406652:	mov    rsi,rbp
  406655:	mov    rdi,rbx
  406658:	mov    r8d,0x10
  40665e:	mov    edx,0x10
  406663:	call   422240 <flatcc_json_printer_int32_field@@Base>
  406668:	lea    rcx,[rip+0x24cf2]        # 42b361 <_IO_stdin_used@@Base+0x361>
  40666f:	xor    r9d,r9d
  406672:	mov    rsi,rbp
  406675:	mov    rdi,rbx
  406678:	mov    r8d,0x10
  40667e:	mov    edx,0x11
  406683:	call   421bf0 <flatcc_json_printer_uint32_field@@Base>
  406688:	lea    rcx,[rip+0x24ce3]        # 42b372 <_IO_stdin_used@@Base+0x372>
  40668f:	xor    r9d,r9d
  406692:	mov    rsi,rbp
  406695:	mov    rdi,rbx
  406698:	mov    r8d,0x10
  40669e:	mov    edx,0x12
  4066a3:	call   4223e0 <flatcc_json_printer_int64_field@@Base>
  4066a8:	lea    rcx,[rip+0x24cd4]        # 42b383 <_IO_stdin_used@@Base+0x383>
  4066af:	xor    r9d,r9d
  4066b2:	mov    rsi,rbp
  4066b5:	mov    rdi,rbx
  4066b8:	mov    r8d,0x10
  4066be:	mov    edx,0x13
  4066c3:	call   421d70 <flatcc_json_printer_uint64_field@@Base>
  4066c8:	lea    rcx,[rip+0x24cc5]        # 42b394 <_IO_stdin_used@@Base+0x394>
  4066cf:	xor    r9d,r9d
  4066d2:	mov    rsi,rbp
  4066d5:	mov    rdi,rbx
  4066d8:	mov    r8d,0x11
  4066de:	mov    edx,0x14
  4066e3:	call   422240 <flatcc_json_printer_int32_field@@Base>
  4066e8:	lea    rcx,[rip+0x24cb7]        # 42b3a6 <_IO_stdin_used@@Base+0x3a6>
  4066ef:	xor    r9d,r9d
  4066f2:	mov    rsi,rbp
  4066f5:	mov    rdi,rbx
  4066f8:	mov    r8d,0x11
  4066fe:	mov    edx,0x15
  406703:	call   421bf0 <flatcc_json_printer_uint32_field@@Base>
  406708:	lea    rcx,[rip+0x24ca9]        # 42b3b8 <_IO_stdin_used@@Base+0x3b8>
  40670f:	xor    r9d,r9d
  406712:	mov    rsi,rbp
  406715:	mov    rdi,rbx
  406718:	mov    r8d,0x11
  40671e:	mov    edx,0x16
  406723:	call   4223e0 <flatcc_json_printer_int64_field@@Base>
  406728:	lea    rcx,[rip+0x24c9b]        # 42b3ca <_IO_stdin_used@@Base+0x3ca>
  40672f:	xor    r9d,r9d
  406732:	mov    rsi,rbp
  406735:	mov    rdi,rbx
  406738:	mov    r8d,0x11
  40673e:	mov    edx,0x17
  406743:	call   421d70 <flatcc_json_printer_uint64_field@@Base>
  406748:	lea    rcx,[rip+0x24c8d]        # 42b3dc <_IO_stdin_used@@Base+0x3dc>
  40674f:	mov    rsi,rbp
  406752:	mov    rdi,rbx
  406755:	mov    r8d,0x10
  40675b:	mov    edx,0x18
  406760:	call   426f00 <flatcc_json_printer_bool_vector_field@@Base>
  406765:	lea    rcx,[rip+0x24c81]        # 42b3ed <_IO_stdin_used@@Base+0x3ed>
  40676c:	mov    rsi,rbp
  40676f:	mov    rdi,rbx
  406772:	vmovss xmm0,DWORD PTR [rip+0x2885e]        # 42efd8 <_IO_stdin_used@@Base+0x3fd8>
  40677a:	mov    r8d,0x5
  406780:	mov    edx,0x19
  406785:	call   422700 <flatcc_json_printer_float_field@@Base>
  40678a:	lea    rcx,[rip+0x24c62]        # 42b3f3 <_IO_stdin_used@@Base+0x3f3>
  406791:	mov    rsi,rbp
  406794:	mov    rdi,rbx
  406797:	vmovss xmm0,DWORD PTR [rip+0x2883d]        # 42efdc <_IO_stdin_used@@Base+0x3fdc>
  40679f:	mov    r8d,0x6
  4067a5:	mov    edx,0x1a
  4067aa:	call   422700 <flatcc_json_printer_float_field@@Base>
  4067af:	vxorps xmm0,xmm0,xmm0
  4067b3:	lea    rcx,[rip+0x24c40]        # 42b3fa <_IO_stdin_used@@Base+0x3fa>
  4067ba:	mov    rsi,rbp
  4067bd:	mov    rdi,rbx
  4067c0:	mov    r8d,0x6
  4067c6:	mov    edx,0x1b
  4067cb:	call   422700 <flatcc_json_printer_float_field@@Base>
  4067d0:	lea    rcx,[rip+0x24c2a]        # 42b401 <_IO_stdin_used@@Base+0x401>
  4067d7:	mov    rsi,rbp
  4067da:	mov    rdi,rbx
  4067dd:	mov    r8d,0x12
  4067e3:	mov    edx,0x1c
  4067e8:	call   428fe0 <flatcc_json_printer_string_vector_field@@Base>
  4067ed:	lea    rax,[rip+0x16c]        # 406960 <_start@@Base+0xa20>
  4067f4:	lea    rcx,[rip+0x24c19]        # 42b414 <_IO_stdin_used@@Base+0x414>
  4067fb:	mov    r9d,0x8
  406801:	mov    rsi,rbp
  406804:	mov    rdi,rbx
  406807:	mov    r8d,0x17
  40680d:	mov    edx,0x1d
  406812:	mov    QWORD PTR [rsp],rax
  406816:	call   428ca0 <flatcc_json_printer_struct_vector_field@@Base>
  40681b:	lea    rcx,[rip+0x24c0a]        # 42b42c <_IO_stdin_used@@Base+0x42c>
  406822:	mov    rsi,rbp
  406825:	mov    rdi,rbx
  406828:	mov    r8d,0x4
  40682e:	mov    edx,0x1e
  406833:	call   425960 <flatcc_json_printer_uint8_vector_field@@Base>
  406838:	lea    rcx,[rip+0x24bf2]        # 42b431 <_IO_stdin_used@@Base+0x431>
  40683f:	mov    r9d,0x4
  406845:	mov    rsi,rbp
  406848:	mov    rdi,rbx
  40684b:	mov    r8d,0x5
  406851:	mov    edx,0x1f
  406856:	mov    QWORD PTR [rsp],r12
  40685a:	call   428ca0 <flatcc_json_printer_struct_vector_field@@Base>
  40685f:	lea    rcx,[rip+0x24bd1]        # 42b437 <_IO_stdin_used@@Base+0x437>
  406866:	mov    rsi,rbp
  406869:	mov    rdi,rbx
  40686c:	mov    r8d,0xf
  406872:	mov    edx,0x20
  406877:	call   426c30 <flatcc_json_printer_int64_vector_field@@Base>
  40687c:	lea    rcx,[rip+0x24bc4]        # 42b447 <_IO_stdin_used@@Base+0x447>
  406883:	mov    rsi,rbp
  406886:	mov    rdi,rbx
  406889:	mov    r8d,0x11
  40688f:	mov    edx,0x21
  406894:	call   427480 <flatcc_json_printer_double_vector_field@@Base>
  406899:	lea    r9,[rip+0x1eb0]        # 408750 <_start@@Base+0x2810>
  4068a0:	lea    rcx,[rip+0x24bb2]        # 42b459 <_IO_stdin_used@@Base+0x459>
  4068a7:	mov    rsi,rbp
  4068aa:	mov    rdi,rbx
  4068ad:	mov    r8d,0x15
  4068b3:	mov    edx,0x22
  4068b8:	call   429ab0 <flatcc_json_printer_table_field@@Base>
  4068bd:	pop    rax
  4068be:	mov    rsi,rbp
  4068c1:	mov    rdi,rbx
  4068c4:	lea    r9,[rip+0x25]        # 4068f0 <_start@@Base+0x9b0>
  4068cb:	pop    rdx
  4068cc:	pop    rbx
  4068cd:	pop    rbp
  4068ce:	pop    r12
  4068d0:	lea    rcx,[rip+0x24b98]        # 42b46f <_IO_stdin_used@@Base+0x46f>
  4068d7:	mov    r8d,0xa
  4068dd:	mov    edx,0x23
  4068e2:	jmp    429ab0 <flatcc_json_printer_table_field@@Base>
  4068e7:	nop    WORD PTR [rax+rax*1+0x0]
  4068f0:	push   rbp
  4068f1:	push   rbx
  4068f2:	lea    rcx,[rip+0x24b84]        # 42b47d <_IO_stdin_used@@Base+0x47d>
  4068f9:	xor    r9d,r9d
  4068fc:	mov    r8d,0x4
  406902:	xor    edx,edx
  406904:	sub    rsp,0x8
  406908:	mov    rbx,rdi
  40690b:	mov    rbp,rsi
  40690e:	call   421600 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  406913:	lea    rcx,[rip+0x24b60]        # 42b47a <_IO_stdin_used@@Base+0x47a>
  40691a:	mov    rsi,rbp
  40691d:	mov    rdi,rbx
  406920:	mov    r9d,0x1
  406926:	mov    r8d,0x7
  40692c:	mov    edx,0x1
  406931:	call   421600 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  406936:	add    rsp,0x8
  40693a:	mov    rsi,rbp
  40693d:	mov    rdi,rbx
  406940:	pop    rbx
  406941:	pop    rbp
  406942:	lea    rcx,[rip+0x24b39]        # 42b482 <_IO_stdin_used@@Base+0x482>
  406949:	xor    r9d,r9d
  40694c:	mov    r8d,0x6
  406952:	mov    edx,0x2
  406957:	jmp    421600 <flatcc_json_printer_uint8_vector_base64_field@@Base>
  40695c:	nop    DWORD PTR [rax+0x0]
  406960:	push   rbp
  406961:	push   rbx
  406962:	lea    r8,[rip+0x24b20]        # 42b489 <_IO_stdin_used@@Base+0x489>
  406969:	mov    rbp,rsi
  40696c:	mov    rdx,rsi
  40696f:	mov    r9d,0x2
  406975:	sub    rsp,0x8
  406979:	xor    ecx,ecx
  40697b:	xor    esi,esi
  40697d:	mov    rbx,rdi
  406980:	call   423e00 <flatcc_json_printer_uint32_struct_field@@Base>
  406985:	add    rsp,0x8
  406989:	mov    rdx,rbp
  40698c:	mov    rdi,rbx
  40698f:	pop    rbx
  406990:	pop    rbp
  406991:	lea    r8,[rip+0x24af4]        # 42b48c <_IO_stdin_used@@Base+0x48c>
  406998:	mov    r9d,0x8
  40699e:	mov    ecx,0x4
  4069a3:	mov    esi,0x1
  4069a8:	jmp    423e00 <flatcc_json_printer_uint32_struct_field@@Base>
  4069ad:	nop    DWORD PTR [rax]
  4069b0:	push   rbp
  4069b1:	push   rbx
  4069b2:	lea    rcx,[rip+0x24ad0]        # 42b489 <_IO_stdin_used@@Base+0x489>
  4069b9:	mov    r8d,0x2
  4069bf:	xor    edx,edx
  4069c1:	mov    rbx,rdi
  4069c4:	sub    rsp,0x8
  4069c8:	mov    rbp,rsi
  4069cb:	call   421480 <flatcc_json_printer_string_field@@Base>
  4069d0:	lea    rcx,[rip+0x24abe]        # 42b495 <_IO_stdin_used@@Base+0x495>
  4069d7:	mov    rsi,rbp
  4069da:	mov    rdi,rbx
  4069dd:	xor    r9d,r9d
  4069e0:	mov    r8d,0x3
  4069e6:	mov    edx,0x1
  4069eb:	call   4223e0 <flatcc_json_printer_int64_field@@Base>
  4069f0:	add    rsp,0x8
  4069f4:	mov    rsi,rbp
  4069f7:	mov    rdi,rbx
  4069fa:	pop    rbx
  4069fb:	pop    rbp
  4069fc:	lea    rcx,[rip+0x29c58]        # 43065b <flatcc_builder_padding_base@@Base+0xb7b>
  406a03:	xor    r9d,r9d
  406a06:	mov    r8d,0x5
  406a0c:	mov    edx,0x2
  406a11:	jmp    421a70 <flatcc_json_printer_uint16_field@@Base>
  406a16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a20:	push   rbp
  406a21:	push   rbx
  406a22:	lea    r8,[rip+0x2497b]        # 42b3a4 <_IO_stdin_used@@Base+0x3a4>
  406a29:	mov    rbp,rsi
  406a2c:	mov    rdx,rsi
  406a2f:	mov    r9d,0x1
  406a35:	sub    rsp,0x8
  406a39:	xor    ecx,ecx
  406a3b:	xor    esi,esi
  406a3d:	mov    rbx,rdi
  406a40:	call   424210 <flatcc_json_printer_int16_struct_field@@Base>
  406a45:	add    rsp,0x8
  406a49:	mov    rdx,rbp
  406a4c:	mov    rdi,rbx
  406a4f:	pop    rbx
  406a50:	pop    rbp
  406a51:	lea    r8,[rip+0x24849]        # 42b2a1 <_IO_stdin_used@@Base+0x2a1>
  406a58:	mov    r9d,0x1
  406a5e:	mov    ecx,0x2
  406a63:	mov    esi,0x1
  406a68:	jmp    4240a0 <flatcc_json_printer_int8_struct_field@@Base>
  406a6d:	nop    DWORD PTR [rax]
  406a70:	movzx  eax,BYTE PTR [rsi+0xc]
  406a74:	cmp    al,0x2
  406a76:	je     406ab0 <_start@@Base+0xb70>
  406a78:	jbe    406aa0 <_start@@Base+0xb60>
  406a7a:	cmp    al,0x3
  406a7c:	je     406a90 <_start@@Base+0xb50>
  406a7e:	cmp    al,0x4
  406a80:	jne    406ac0 <_start@@Base+0xb80>
  406a82:	lea    rdx,[rip+0x47]        # 406ad0 <_start@@Base+0xb90>
  406a89:	jmp    42a010 <flatcc_json_printer_union_table@@Base>
  406a8e:	xchg   ax,ax
  406a90:	lea    rdx,[rip+0xfffffffffffff709]        # 4061a0 <_start@@Base+0x260>
  406a97:	jmp    42a010 <flatcc_json_printer_union_table@@Base>
  406a9c:	nop    DWORD PTR [rax+0x0]
  406aa0:	cmp    al,0x1
  406aa2:	jne    406ac8 <_start@@Base+0xb88>
  406aa4:	lea    rdx,[rip+0xfffffffffffff995]        # 406440 <_start@@Base+0x500>
  406aab:	jmp    42a010 <flatcc_json_printer_union_table@@Base>
  406ab0:	lea    rdx,[rip+0x309]        # 406dc0 <_start@@Base+0xe80>
  406ab7:	jmp    42a010 <flatcc_json_printer_union_table@@Base>
  406abc:	nop    DWORD PTR [rax+0x0]
  406ac0:	repz ret 
  406ac2:	nop    WORD PTR [rax+rax*1+0x0]
  406ac8:	repz ret 
  406aca:	nop    WORD PTR [rax+rax*1+0x0]
  406ad0:	push   rbp
  406ad1:	push   rbx
  406ad2:	lea    r9,[rip+0xfffffffffffff707]        # 4061e0 <_start@@Base+0x2a0>
  406ad9:	lea    rcx,[rip+0x249b9]        # 42b499 <_IO_stdin_used@@Base+0x499>
  406ae0:	mov    r8d,0x6
  406ae6:	xor    edx,edx
  406ae8:	sub    rsp,0x8
  406aec:	mov    rbx,rdi
  406aef:	mov    rbp,rsi
  406af2:	call   429ab0 <flatcc_json_printer_table_field@@Base>
  406af7:	lea    r9,[rip+0x62]        # 406b60 <_start@@Base+0xc20>
  406afe:	lea    rcx,[rip+0x2499b]        # 42b4a0 <_IO_stdin_used@@Base+0x4a0>
  406b05:	mov    rsi,rbp
  406b08:	mov    rdi,rbx
  406b0b:	mov    r8d,0x5
  406b11:	mov    edx,0x1
  406b16:	call   429ab0 <flatcc_json_printer_table_field@@Base>
  406b1b:	lea    rax,[rip+0xffffffffffffff4e]        # 406a70 <_start@@Base+0xb30>
  406b22:	sub    rsp,0x8
  406b26:	lea    r9,[rip+0x1ae3]        # 408610 <_start@@Base+0x26d0>
  406b2d:	lea    rcx,[rip+0x24972]        # 42b4a6 <_IO_stdin_used@@Base+0x4a6>
  406b34:	mov    rsi,rbp
  406b37:	mov    rdi,rbx
  406b3a:	push   rax
  406b3b:	mov    r8d,0x7
  406b41:	mov    edx,0x3
  406b46:	call   429770 <flatcc_json_printer_union_vector_field@@Base>
  406b4b:	add    rsp,0x18
  406b4f:	pop    rbx
  406b50:	pop    rbp
  406b51:	ret    
  406b52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406b5d:	nop    DWORD PTR [rax]
  406b60:	push   r12
  406b62:	push   rbp
  406b63:	lea    r12,[rip+0xd6]        # 406c40 <_start@@Base+0xd00>
  406b6a:	push   rbx
  406b6b:	lea    r9,[rip+0x17e]        # 406cf0 <_start@@Base+0xdb0>
  406b72:	lea    rcx,[rip+0x24935]        # 42b4ae <_IO_stdin_used@@Base+0x4ae>
  406b79:	mov    r8d,0xe
  406b7f:	mov    edx,0x1
  406b84:	mov    rbx,rdi
  406b87:	sub    rsp,0x8
  406b8b:	mov    rbp,rsi
  406b8e:	push   r12
  406b90:	call   429d40 <flatcc_json_printer_union_field@@Base>
  406b95:	lea    r9,[rip+0x154]        # 406cf0 <_start@@Base+0xdb0>
  406b9c:	lea    rcx,[rip+0x2491a]        # 42b4bd <_IO_stdin_used@@Base+0x4bd>
  406ba3:	mov    rsi,rbp
  406ba6:	mov    rdi,rbx
  406ba9:	mov    r8d,0xa
  406baf:	mov    edx,0x3
  406bb4:	mov    QWORD PTR [rsp],r12
  406bb8:	call   429d40 <flatcc_json_printer_union_field@@Base>
  406bbd:	lea    r9,[rip+0x12c]        # 406cf0 <_start@@Base+0xdb0>
  406bc4:	lea    rcx,[rip+0x248fd]        # 42b4c8 <_IO_stdin_used@@Base+0x4c8>
  406bcb:	mov    rsi,rbp
  406bce:	mov    rdi,rbx
  406bd1:	mov    r8d,0x9
  406bd7:	mov    edx,0x5
  406bdc:	mov    QWORD PTR [rsp],r12
  406be0:	call   429d40 <flatcc_json_printer_union_field@@Base>
  406be5:	lea    r9,[rip+0x104]        # 406cf0 <_start@@Base+0xdb0>
  406bec:	lea    rcx,[rip+0x248df]        # 42b4d2 <_IO_stdin_used@@Base+0x4d2>
  406bf3:	mov    rsi,rbp
  406bf6:	mov    rdi,rbx
  406bf9:	mov    r8d,0x5
  406bff:	mov    edx,0x7
  406c04:	mov    QWORD PTR [rsp],r12
  406c08:	call   429d40 <flatcc_json_printer_union_field@@Base>
  406c0d:	lea    r9,[rip+0xdc]        # 406cf0 <_start@@Base+0xdb0>
  406c14:	lea    rcx,[rip+0x248bd]        # 42b4d8 <_IO_stdin_used@@Base+0x4d8>
  406c1b:	mov    edx,0x9
  406c20:	mov    rsi,rbp
  406c23:	mov    rdi,rbx
  406c26:	mov    r8d,0xa
  406c2c:	mov    QWORD PTR [rsp],r12
  406c30:	call   429770 <flatcc_json_printer_union_vector_field@@Base>
  406c35:	pop    rax
  406c36:	pop    rdx
  406c37:	pop    rbx
  406c38:	pop    rbp
  406c39:	pop    r12
  406c3b:	ret    
  406c3c:	nop    DWORD PTR [rax+0x0]
  406c40:	movzx  eax,BYTE PTR [rsi+0xc]
  406c44:	cmp    al,0x9
  406c46:	je     406c78 <_start@@Base+0xd38>
  406c48:	jbe    406c60 <_start@@Base+0xd20>
  406c4a:	cmp    al,0xb
  406c4c:	je     406c54 <_start@@Base+0xd14>
  406c4e:	jb     406c78 <_start@@Base+0xd38>
  406c50:	cmp    al,0xff
  406c52:	jne    406c88 <_start@@Base+0xd48>
  406c54:	jmp    42a1d0 <flatcc_json_printer_union_string@@Base>
  406c59:	nop    DWORD PTR [rax+0x0]
  406c60:	cmp    al,0x2
  406c62:	je     406c98 <_start@@Base+0xd58>
  406c64:	cmp    al,0x8
  406c66:	jne    406c90 <_start@@Base+0xd50>
  406c68:	lea    rdx,[rip+0x61]        # 406cd0 <_start@@Base+0xd90>
  406c6f:	jmp    42a130 <flatcc_json_printer_union_struct@@Base>
  406c74:	nop    DWORD PTR [rax+0x0]
  406c78:	lea    rdx,[rip+0x31]        # 406cb0 <_start@@Base+0xd70>
  406c7f:	jmp    42a130 <flatcc_json_printer_union_struct@@Base>
  406c84:	nop    DWORD PTR [rax+0x0]
  406c88:	repz ret 
  406c8a:	nop    WORD PTR [rax+rax*1+0x0]
  406c90:	repz ret 
  406c92:	nop    WORD PTR [rax+rax*1+0x0]
  406c98:	lea    rdx,[rip+0xfffffffffffff5c1]        # 406260 <_start@@Base+0x320>
  406c9f:	jmp    42a010 <flatcc_json_printer_union_table@@Base>
  406ca4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406caf:	nop
  406cb0:	lea    r8,[rip+0x2482c]        # 42b4e3 <_IO_stdin_used@@Base+0x4e3>
  406cb7:	mov    rdx,rsi
  406cba:	mov    r9d,0xa
  406cc0:	xor    ecx,ecx
  406cc2:	xor    esi,esi
  406cc4:	jmp    424380 <flatcc_json_printer_int32_struct_field@@Base>
  406cc9:	nop    DWORD PTR [rax+0x0]
  406cd0:	lea    r8,[rip+0x24817]        # 42b4ee <_IO_stdin_used@@Base+0x4ee>
  406cd7:	mov    rdx,rsi
  406cda:	mov    r9d,0xb
  406ce0:	xor    ecx,ecx
  406ce2:	xor    esi,esi
  406ce4:	jmp    423cb0 <flatcc_json_printer_uint16_struct_field@@Base>
  406ce9:	nop    DWORD PTR [rax+0x0]
  406cf0:	cmp    sil,0x9
  406cf4:	je     406da0 <_start@@Base+0xe60>
  406cfa:	jbe    406d20 <_start@@Base+0xde0>
  406cfc:	cmp    sil,0xb
  406d00:	je     406d40 <_start@@Base+0xe00>
  406d02:	jb     406d88 <_start@@Base+0xe48>
  406d08:	cmp    sil,0xff
  406d0c:	jne    406d58 <_start@@Base+0xe18>
  406d0e:	lea    rsi,[rip+0x24808]        # 42b51d <_IO_stdin_used@@Base+0x51d>
  406d15:	mov    edx,0x6
  406d1a:	jmp    421380 <flatcc_json_printer_enum@@Base>
  406d1f:	nop
  406d20:	cmp    sil,0x2
  406d24:	je     406d70 <_start@@Base+0xe30>
  406d26:	cmp    sil,0x8
  406d2a:	jne    406d58 <_start@@Base+0xe18>
  406d2c:	lea    rsi,[rip+0x247cd]        # 42b500 <_IO_stdin_used@@Base+0x500>
  406d33:	mov    edx,0x8
  406d38:	jmp    421380 <flatcc_json_printer_enum@@Base>
  406d3d:	nop    DWORD PTR [rax]
  406d40:	lea    rsi,[rip+0x247d0]        # 42b517 <_IO_stdin_used@@Base+0x517>
  406d47:	mov    edx,0x5
  406d4c:	jmp    421380 <flatcc_json_printer_enum@@Base>
  406d51:	nop    DWORD PTR [rax+0x0]
  406d58:	lea    rsi,[rip+0x2985d]        # 4305bc <flatcc_builder_padding_base@@Base+0xadc>
  406d5f:	mov    edx,0x4
  406d64:	jmp    421380 <flatcc_json_printer_enum@@Base>
  406d69:	nop    DWORD PTR [rax+0x0]
  406d70:	lea    rsi,[rip+0x24783]        # 42b4fa <_IO_stdin_used@@Base+0x4fa>
  406d77:	mov    edx,0x5
  406d7c:	jmp    421380 <flatcc_json_printer_enum@@Base>
  406d81:	nop    DWORD PTR [rax+0x0]
  406d88:	lea    rsi,[rip+0x24780]        # 42b50f <_IO_stdin_used@@Base+0x50f>
  406d8f:	mov    edx,0x7
  406d94:	jmp    421380 <flatcc_json_printer_enum@@Base>
  406d99:	nop    DWORD PTR [rax+0x0]
  406da0:	lea    rsi,[rip+0x24762]        # 42b509 <_IO_stdin_used@@Base+0x509>
  406da7:	mov    edx,0x5
  406dac:	jmp    421380 <flatcc_json_printer_enum@@Base>
  406db1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406dbc:	nop    DWORD PTR [rax+0x0]
  406dc0:	push   r12
  406dc2:	push   rbp
  406dc3:	lea    r12,[rip+0xa6]        # 406e70 <_start@@Base+0xf30>
  406dca:	push   rbx
  406dcb:	lea    rcx,[rip+0x24520]        # 42b2f2 <_IO_stdin_used@@Base+0x2f2>
  406dd2:	mov    r9d,0x2
  406dd8:	mov    r8d,0x5
  406dde:	xor    edx,edx
  406de0:	mov    rbx,rdi
  406de3:	sub    rsp,0x8
  406de7:	mov    rbp,rsi
  406dea:	push   r12
  406dec:	call   4231e0 <flatcc_json_printer_int8_enum_field@@Base>
  406df1:	lea    rcx,[rip+0x2472c]        # 42b524 <_IO_stdin_used@@Base+0x524>
  406df8:	mov    rsi,rbp
  406dfb:	mov    rdi,rbx
  406dfe:	mov    r9d,0x2
  406e04:	mov    r8d,0x6
  406e0a:	mov    edx,0x1
  406e0f:	mov    QWORD PTR [rsp],r12
  406e13:	call   4231e0 <flatcc_json_printer_int8_enum_field@@Base>
  406e18:	lea    rcx,[rip+0x2470c]        # 42b52b <_IO_stdin_used@@Base+0x52b>
  406e1f:	mov    rsi,rbp
  406e22:	mov    rdi,rbx
  406e25:	mov    r9d,0x2
  406e2b:	mov    r8d,0x2
  406e31:	mov    edx,0x2
  406e36:	call   4218f0 <flatcc_json_printer_uint8_field@@Base>
  406e3b:	pop    rax
  406e3c:	mov    rsi,rbp
  406e3f:	mov    rdi,rbx
  406e42:	lea    rcx,[rip+0x246e5]        # 42b52e <_IO_stdin_used@@Base+0x52e>
  406e49:	pop    rdx
  406e4a:	pop    rbx
  406e4b:	pop    rbp
  406e4c:	pop    r12
  406e4e:	mov    r9d,0x2
  406e54:	mov    r8d,0x3
  406e5a:	mov    edx,0x3
  406e5f:	jmp    4218f0 <flatcc_json_printer_uint8_field@@Base>
  406e64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406e6f:	nop
  406e70:	test   sil,0xf4
  406e74:	jne    406ed0 <_start@@Base+0xf90>
  406e76:	test   sil,sil
  406e79:	je     406ed0 <_start@@Base+0xf90>
  406e7b:	push   r13
  406e7d:	movzx  eax,sil
  406e81:	push   r12
  406e83:	push   rbp
  406e84:	push   rbx
  406e85:	blsr   eax,eax
  406e8a:	xor    r12d,r12d
  406e8d:	mov    ebx,esi
  406e8f:	mov    rbp,rdi
  406e92:	sub    rsp,0x8
  406e96:	test   eax,eax
  406e98:	setne  r12b
  406e9c:	mov    esi,r12d
  406e9f:	call   4213f0 <flatcc_json_printer_delimit_enum_flags@@Base>
  406ea4:	xor    esi,esi
  406ea6:	test   bl,0x1
  406ea9:	jne    406ee0 <_start@@Base+0xfa0>
  406eab:	test   bl,0x2
  406eae:	jne    406f20 <_start@@Base+0xfe0>
  406eb0:	and    ebx,0x8
  406eb3:	jne    406f00 <_start@@Base+0xfc0>
  406eb5:	add    rsp,0x8
  406eb9:	mov    esi,r12d
  406ebc:	mov    rdi,rbp
  406ebf:	pop    rbx
  406ec0:	pop    rbp
  406ec1:	pop    r12
  406ec3:	pop    r13
  406ec5:	jmp    4213f0 <flatcc_json_printer_delimit_enum_flags@@Base>
  406eca:	nop    WORD PTR [rax+rax*1+0x0]
  406ed0:	movsx  esi,sil
  406ed4:	jmp    421250 <flatcc_json_printer_int8@@Base>
  406ed9:	nop    DWORD PTR [rax+0x0]
  406ee0:	lea    rdx,[rip+0x2464b]        # 42b532 <_IO_stdin_used@@Base+0x532>
  406ee7:	mov    ecx,0x3
  406eec:	mov    rdi,rbp
  406eef:	call   421410 <flatcc_json_printer_enum_flag@@Base>
  406ef4:	mov    esi,0x1
  406ef9:	jmp    406eab <_start@@Base+0xf6b>
  406efb:	nop    DWORD PTR [rax+rax*1+0x0]
  406f00:	lea    rdx,[rip+0x24635]        # 42b53c <_IO_stdin_used@@Base+0x53c>
  406f07:	mov    ecx,0x4
  406f0c:	mov    rdi,rbp
  406f0f:	call   421410 <flatcc_json_printer_enum_flag@@Base>
  406f14:	jmp    406eb5 <_start@@Base+0xf75>
  406f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f20:	lea    r13d,[rsi+0x1]
  406f24:	lea    rdx,[rip+0x2460b]        # 42b536 <_IO_stdin_used@@Base+0x536>
  406f2b:	mov    ecx,0x5
  406f30:	mov    rdi,rbp
  406f33:	call   421410 <flatcc_json_printer_enum_flag@@Base>
  406f38:	mov    esi,r13d
  406f3b:	jmp    406eb0 <_start@@Base+0xf70>
  406f40:	push   rbp
  406f41:	push   rbx
  406f42:	lea    r8,[rip+0x2467c]        # 42b5c5 <_IO_stdin_used@@Base+0x5c5>
  406f49:	mov    rbp,rsi
  406f4c:	mov    rdx,rsi
  406f4f:	mov    r9d,0x1
  406f55:	sub    rsp,0x8
  406f59:	xor    ecx,ecx
  406f5b:	xor    esi,esi
  406f5d:	mov    rbx,rdi
  406f60:	call   4247b0 <flatcc_json_printer_float_struct_field@@Base>
  406f65:	lea    r8,[rip+0x29544]        # 4304b0 <flatcc_builder_padding_base@@Base+0x9d0>
  406f6c:	mov    rdx,rbp
  406f6f:	mov    rdi,rbx
  406f72:	mov    r9d,0x1
  406f78:	mov    ecx,0x4
  406f7d:	mov    esi,0x1
  406f82:	call   4247b0 <flatcc_json_printer_float_struct_field@@Base>
  406f87:	lea    r8,[rip+0x245b3]        # 42b541 <_IO_stdin_used@@Base+0x541>
  406f8e:	mov    rdx,rbp
  406f91:	mov    rdi,rbx
  406f94:	mov    r9d,0x1
  406f9a:	mov    ecx,0x8
  406f9f:	mov    esi,0x2
  406fa4:	call   4247b0 <flatcc_json_printer_float_struct_field@@Base>
  406fa9:	lea    r8,[rip+0x24593]        # 42b543 <_IO_stdin_used@@Base+0x543>
  406fb0:	mov    rdx,rbp
  406fb3:	mov    rdi,rbx
  406fb6:	mov    r9d,0x5
  406fbc:	mov    ecx,0x10
  406fc1:	mov    esi,0x3
  406fc6:	call   424910 <flatcc_json_printer_double_struct_field@@Base>
  406fcb:	lea    rax,[rip+0xfffffffffffffe9e]        # 406e70 <_start@@Base+0xf30>
  406fd2:	sub    rsp,0x8
  406fd6:	lea    r8,[rip+0x2456c]        # 42b549 <_IO_stdin_used@@Base+0x549>
  406fdd:	mov    rdx,rbp
  406fe0:	mov    rdi,rbx
  406fe3:	mov    r9d,0x5
  406fe9:	push   rax
  406fea:	mov    ecx,0x18
  406fef:	mov    esi,0x4
  406ff4:	call   425100 <flatcc_json_printer_int8_enum_struct_field@@Base>
  406ff9:	lea    rax,[rip+0xfffffffffffffa20]        # 406a20 <_start@@Base+0xae0>
  407000:	lea    r8,[rip+0x24548]        # 42b54f <_IO_stdin_used@@Base+0x54f>
  407007:	mov    rdx,rbp
  40700a:	mov    rdi,rbx
  40700d:	mov    r9d,0x5
  407013:	mov    ecx,0x1a
  407018:	mov    esi,0x5
  40701d:	mov    QWORD PTR [rsp],rax
  407021:	call   42a1f0 <flatcc_json_printer_embedded_struct_field@@Base>
  407026:	add    rsp,0x18
  40702a:	pop    rbx
  40702b:	pop    rbp
  40702c:	ret    
  40702d:	nop    DWORD PTR [rax]
  407030:	mov    rax,rdx
  407033:	sub    rax,rsi
  407036:	cmp    rax,0x1
  40703a:	jle    407043 <_start@@Base+0x1103>
  40703c:	cmp    BYTE PTR [rsi],0x20
  40703f:	jg     407050 <_start@@Base+0x1110>
  407041:	je     407058 <_start@@Base+0x1118>
  407043:	jmp    41c4b0 <flatcc_json_parser_space_ext@@Base>
  407048:	nop    DWORD PTR [rax+rax*1+0x0]
  407050:	mov    rax,rsi
  407053:	ret    
  407054:	nop    DWORD PTR [rax+0x0]
  407058:	cmp    BYTE PTR [rsi+0x1],0x20
  40705c:	jle    407043 <_start@@Base+0x1103>
  40705e:	lea    rax,[rsi+0x1]
  407062:	ret    
  407063:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40706e:	xchg   ax,ax
  407070:	mov    rax,rdx
  407073:	push   r12
  407075:	mov    r11,rdi
  407078:	sub    rax,rsi
  40707b:	push   rbp
  40707c:	mov    r10,rdx
  40707f:	cmp    rax,0x7
  407083:	push   rbx
  407084:	mov    rbp,rcx
  407087:	mov    rbx,rsi
  40708a:	mov    r12,r8
  40708d:	jbe    407120 <_start@@Base+0x11e0>
  407093:	movbe  rax,QWORD PTR [rsi]
  407098:	movabs rdx,0x4e4f4e44ffffffff
  4070a2:	cmp    rax,rdx
  4070a5:	ja     40713e <_start@@Base+0x11fe>
  4070ab:	movabs rdx,0x426f6f6b46616dff
  4070b5:	cmp    rax,rdx
  4070b8:	jbe    4071e8 <_start@@Base+0x12a8>
  4070be:	mov    rcx,rax
  4070c1:	movabs rdx,0x4d754c616e000000
  4070cb:	and    rcx,0xffffffffff000000
  4070d2:	cmp    rcx,rdx
  4070d5:	je     4072d0 <_start@@Base+0x1390>
  4070db:	xor    al,al
  4070dd:	movabs rdx,0x426f6f6b46616e00
  4070e7:	cmp    rax,rdx
  4070ea:	jne    40716d <_start@@Base+0x122d>
  4070f0:	mov    r8,r9
  4070f3:	mov    ecx,0x7
  4070f8:	mov    rdx,r10
  4070fb:	mov    rsi,rbx
  4070fe:	mov    rdi,r11
  407101:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407106:	cmp    rbx,rax
  407109:	je     40716d <_start@@Base+0x122d>
  40710b:	mov    QWORD PTR [r12],0xa
  407113:	mov    rbx,rax
  407116:	mov    DWORD PTR [rbp+0x0],0x0
  40711d:	jmp    40716d <_start@@Base+0x122d>
  40711f:	nop
  407120:	mov    rsi,rdx
  407123:	mov    rdi,rbx
  407126:	call   406050 <_start@@Base+0x110>
  40712b:	movabs rdx,0x4e4f4e44ffffffff
  407135:	cmp    rax,rdx
  407138:	jbe    4070ab <_start@@Base+0x116b>
  40713e:	movabs rdx,0x4f74686571ffffff
  407148:	cmp    rax,rdx
  40714b:	ja     407178 <_start@@Base+0x1238>
  40714d:	movabs rdx,0xffffffff00000000
  407157:	and    rax,rdx
  40715a:	movabs rdx,0x4e4f4e4500000000
  407164:	cmp    rax,rdx
  407167:	je     407290 <_start@@Base+0x1350>
  40716d:	mov    rax,rbx
  407170:	pop    rbx
  407171:	pop    rbp
  407172:	pop    r12
  407174:	ret    
  407175:	nop    DWORD PTR [rax]
  407178:	movabs rdx,0x526170756e7a656b
  407182:	cmp    rax,rdx
  407185:	jbe    407240 <_start@@Base+0x1300>
  40718b:	mov    rcx,rax
  40718e:	movabs rdx,0x556e757365640000
  407198:	xor    cx,cx
  40719b:	cmp    rcx,rdx
  40719e:	je     407310 <_start@@Base+0x13d0>
  4071a4:	movabs rdx,0x526170756e7a656c
  4071ae:	cmp    rax,rdx
  4071b1:	jne    40716d <_start@@Base+0x122d>
  4071b3:	mov    r8,r9
  4071b6:	mov    ecx,0x8
  4071bb:	mov    rdx,r10
  4071be:	mov    rsi,rbx
  4071c1:	mov    rdi,r11
  4071c4:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  4071c9:	cmp    rbx,rax
  4071cc:	je     40716d <_start@@Base+0x122d>
  4071ce:	mov    QWORD PTR [r12],0x8
  4071d6:	mov    rbx,rax
  4071d9:	mov    DWORD PTR [rbp+0x0],0x0
  4071e0:	jmp    40716d <_start@@Base+0x122d>
  4071e2:	nop    WORD PTR [rax+rax*1+0x0]
  4071e8:	and    rax,0xffffffffff000000
  4071ee:	movabs rdx,0x42656c6c65000000
  4071f8:	cmp    rax,rdx
  4071fb:	jne    40716d <_start@@Base+0x122d>
  407201:	mov    r8,r9
  407204:	mov    ecx,0x5
  407209:	mov    rdx,r10
  40720c:	mov    rsi,rbx
  40720f:	mov    rdi,r11
  407212:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407217:	cmp    rbx,rax
  40721a:	je     40716d <_start@@Base+0x122d>
  407220:	mov    QWORD PTR [r12],0x9
  407228:	mov    rbx,rax
  40722b:	mov    DWORD PTR [rbp+0x0],0x0
  407232:	jmp    40716d <_start@@Base+0x122d>
  407237:	nop    WORD PTR [rax+rax*1+0x0]
  407240:	and    rax,0xffffffffff000000
  407246:	movabs rdx,0x4f74686572000000
  407250:	cmp    rax,rdx
  407253:	jne    40716d <_start@@Base+0x122d>
  407259:	mov    r8,r9
  40725c:	mov    ecx,0x5
  407261:	mov    rdx,r10
  407264:	mov    rsi,rbx
  407267:	mov    rdi,r11
  40726a:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  40726f:	cmp    rbx,rax
  407272:	je     40716d <_start@@Base+0x122d>
  407278:	mov    QWORD PTR [r12],0xb
  407280:	mov    rbx,rax
  407283:	mov    DWORD PTR [rbp+0x0],0x0
  40728a:	jmp    40716d <_start@@Base+0x122d>
  40728f:	nop
  407290:	mov    r8,r9
  407293:	mov    ecx,0x4
  407298:	mov    rdx,r10
  40729b:	mov    rsi,rbx
  40729e:	mov    rdi,r11
  4072a1:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  4072a6:	cmp    rbx,rax
  4072a9:	je     40716d <_start@@Base+0x122d>
  4072af:	mov    QWORD PTR [r12],0x0
  4072b7:	mov    rbx,rax
  4072ba:	mov    DWORD PTR [rbp+0x0],0x0
  4072c1:	jmp    40716d <_start@@Base+0x122d>
  4072c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072d0:	mov    r8,r9
  4072d3:	mov    ecx,0x5
  4072d8:	mov    rdx,r10
  4072db:	mov    rsi,rbx
  4072de:	mov    rdi,r11
  4072e1:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  4072e6:	cmp    rbx,rax
  4072e9:	je     40716d <_start@@Base+0x122d>
  4072ef:	mov    QWORD PTR [r12],0x2
  4072f7:	mov    rbx,rax
  4072fa:	mov    DWORD PTR [rbp+0x0],0x0
  407301:	jmp    40716d <_start@@Base+0x122d>
  407306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407310:	mov    r8,r9
  407313:	mov    ecx,0x6
  407318:	mov    rdx,r10
  40731b:	mov    rsi,rbx
  40731e:	mov    rdi,r11
  407321:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407326:	cmp    rbx,rax
  407329:	je     40716d <_start@@Base+0x122d>
  40732f:	mov    QWORD PTR [r12],0xff
  407337:	mov    rbx,rax
  40733a:	mov    DWORD PTR [rbp+0x0],0x0
  407341:	jmp    40716d <_start@@Base+0x122d>
  407346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407350:	push   r15
  407352:	mov    rax,rdx
  407355:	push   r14
  407357:	push   r13
  407359:	push   r12
  40735b:	sub    rax,rsi
  40735e:	push   rbp
  40735f:	push   rbx
  407360:	mov    r13,rdi
  407363:	mov    rbx,rsi
  407366:	mov    r12,rdx
  407369:	mov    r14,rcx
  40736c:	sub    rsp,0x18
  407370:	cmp    rax,0x7
  407374:	mov    r15,r8
  407377:	jbe    4074c0 <_start@@Base+0x1580>
  40737d:	movbe  rbp,QWORD PTR [rsi]
  407382:	movabs rax,0x4d6f6e73746571ff
  40738c:	cmp    rbp,rax
  40738f:	ja     4073c8 <_start@@Base+0x1488>
  407391:	movabs rax,0xffffff0000000000
  40739b:	and    rbp,rax
  40739e:	movabs rax,0x416c740000000000
  4073a8:	cmp    rbp,rax
  4073ab:	je     4074e0 <_start@@Base+0x15a0>
  4073b1:	mov    rax,rbx
  4073b4:	add    rsp,0x18
  4073b8:	pop    rbx
  4073b9:	pop    rbp
  4073ba:	pop    r12
  4073bc:	pop    r13
  4073be:	pop    r14
  4073c0:	pop    r15
  4073c2:	ret    
  4073c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4073c8:	movabs rax,0x4d6f6e7374657232
  4073d2:	cmp    rbp,rax
  4073d5:	je     407518 <_start@@Base+0x15d8>
  4073db:	mov    rdx,rbp
  4073de:	movabs rax,0x4d6f6e7374657200
  4073e8:	xor    dl,dl
  4073ea:	cmp    rdx,rax
  4073ed:	je     407570 <_start@@Base+0x1630>
  4073f3:	movabs rax,0xffffffff00000000
  4073fd:	movabs rdx,0x4e4f4e4500000000
  407407:	and    rax,rbp
  40740a:	cmp    rax,rdx
  40740d:	je     4075b0 <_start@@Base+0x1670>
  407413:	movabs rax,0x5465737453696d70
  40741d:	cmp    rbp,rax
  407420:	jne    4073b1 <_start@@Base+0x1471>
  407422:	lea    rdi,[rbx+0x8]
  407426:	mov    rax,r12
  407429:	sub    rax,rdi
  40742c:	cmp    rax,0x7
  407430:	jbe    407550 <_start@@Base+0x1610>
  407436:	movbe  rax,QWORD PTR [rbx+0x8]
  40743c:	movabs rdx,0x6c655461626c6557
  407446:	cmp    rax,rdx
  407449:	jne    4073b1 <_start@@Base+0x1471>
  40744f:	lea    rbp,[rbx+0x10]
  407453:	mov    rax,r12
  407456:	sub    rax,rbp
  407459:	cmp    rax,0x7
  40745d:	ja     4075e8 <_start@@Base+0x16a8>
  407463:	mov    rsi,r12
  407466:	mov    rdi,rbp
  407469:	mov    QWORD PTR [rsp+0x8],r9
  40746e:	call   406050 <_start@@Base+0x110>
  407473:	mov    r9,QWORD PTR [rsp+0x8]
  407478:	xor    al,al
  40747a:	movabs rdx,0x697468456e756d00
  407484:	cmp    rax,rdx
  407487:	jne    4073b1 <_start@@Base+0x1471>
  40748d:	mov    r8,r9
  407490:	mov    ecx,0x7
  407495:	mov    rdx,r12
  407498:	mov    rsi,rbp
  40749b:	mov    rdi,r13
  40749e:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  4074a3:	cmp    rbp,rax
  4074a6:	je     4073b1 <_start@@Base+0x1471>
  4074ac:	mov    QWORD PTR [r15],0x2
  4074b3:	mov    DWORD PTR [r14],0x0
  4074ba:	jmp    4073b4 <_start@@Base+0x1474>
  4074bf:	nop
  4074c0:	mov    rsi,rdx
  4074c3:	mov    rdi,rbx
  4074c6:	mov    QWORD PTR [rsp+0x8],r9
  4074cb:	call   406050 <_start@@Base+0x110>
  4074d0:	mov    r9,QWORD PTR [rsp+0x8]
  4074d5:	mov    rbp,rax
  4074d8:	jmp    407382 <_start@@Base+0x1442>
  4074dd:	nop    DWORD PTR [rax]
  4074e0:	mov    r8,r9
  4074e3:	mov    ecx,0x3
  4074e8:	mov    rdx,r12
  4074eb:	mov    rsi,rbx
  4074ee:	mov    rdi,r13
  4074f1:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  4074f6:	cmp    rbx,rax
  4074f9:	je     4073b4 <_start@@Base+0x1474>
  4074ff:	mov    QWORD PTR [r15],0x4
  407506:	mov    DWORD PTR [r14],0x0
  40750d:	jmp    4073b4 <_start@@Base+0x1474>
  407512:	nop    WORD PTR [rax+rax*1+0x0]
  407518:	mov    r8,r9
  40751b:	mov    ecx,0x8
  407520:	mov    rdx,r12
  407523:	mov    rsi,rbx
  407526:	mov    rdi,r13
  407529:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  40752e:	cmp    rbx,rax
  407531:	je     4073b1 <_start@@Base+0x1471>
  407537:	mov    QWORD PTR [r15],0x3
  40753e:	mov    DWORD PTR [r14],0x0
  407545:	jmp    4073b4 <_start@@Base+0x1474>
  40754a:	nop    WORD PTR [rax+rax*1+0x0]
  407550:	mov    rsi,r12
  407553:	mov    QWORD PTR [rsp+0x8],r9
  407558:	call   406050 <_start@@Base+0x110>
  40755d:	mov    r9,QWORD PTR [rsp+0x8]
  407562:	jmp    40743c <_start@@Base+0x14fc>
  407567:	nop    WORD PTR [rax+rax*1+0x0]
  407570:	mov    r8,r9
  407573:	mov    ecx,0x7
  407578:	mov    rdx,r12
  40757b:	mov    rsi,rbx
  40757e:	mov    rdi,r13
  407581:	mov    QWORD PTR [rsp+0x8],r9
  407586:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  40758b:	cmp    rbx,rax
  40758e:	mov    r9,QWORD PTR [rsp+0x8]
  407593:	je     4073f3 <_start@@Base+0x14b3>
  407599:	mov    QWORD PTR [r15],0x1
  4075a0:	mov    DWORD PTR [r14],0x0
  4075a7:	jmp    4073b4 <_start@@Base+0x1474>
  4075ac:	nop    DWORD PTR [rax+0x0]
  4075b0:	mov    r8,r9
  4075b3:	mov    ecx,0x4
  4075b8:	mov    rdx,r12
  4075bb:	mov    rsi,rbx
  4075be:	mov    rdi,r13
  4075c1:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  4075c6:	cmp    rbx,rax
  4075c9:	je     4073b1 <_start@@Base+0x1471>
  4075cf:	mov    QWORD PTR [r15],0x0
  4075d6:	mov    DWORD PTR [r14],0x0
  4075dd:	jmp    4073b4 <_start@@Base+0x1474>
  4075e2:	nop    WORD PTR [rax+rax*1+0x0]
  4075e8:	movbe  rax,QWORD PTR [rbx+0x10]
  4075ee:	jmp    407478 <_start@@Base+0x1538>
  4075f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4075fe:	xchg   ax,ax
  407600:	push   r13
  407602:	mov    rax,rdx
  407605:	push   r12
  407607:	push   rbp
  407608:	push   rbx
  407609:	sub    rax,rsi
  40760c:	mov    r11,rdi
  40760f:	mov    rbx,rsi
  407612:	mov    r10,rdx
  407615:	sub    rsp,0x8
  407619:	cmp    rax,0x7
  40761d:	mov    rbp,rcx
  407620:	mov    r12,r8
  407623:	jbe    407670 <_start@@Base+0x1730>
  407625:	movbe  rax,QWORD PTR [rsi]
  40762a:	movabs rdx,0x496e506172656e74
  407634:	cmp    rax,rdx
  407637:	je     40768a <_start@@Base+0x174a>
  407639:	movabs rdx,0xffffffff00000000
  407643:	and    rax,rdx
  407646:	movabs rdx,0x4e4f4e4500000000
  407650:	cmp    rax,rdx
  407653:	je     407738 <_start@@Base+0x17f8>
  407659:	mov    rax,rbx
  40765c:	add    rsp,0x8
  407660:	pop    rbx
  407661:	pop    rbp
  407662:	pop    r12
  407664:	pop    r13
  407666:	ret    
  407667:	nop    WORD PTR [rax+rax*1+0x0]
  407670:	mov    rsi,rdx
  407673:	mov    rdi,rbx
  407676:	call   406050 <_start@@Base+0x110>
  40767b:	movabs rdx,0x496e506172656e74
  407685:	cmp    rax,rdx
  407688:	jne    407639 <_start@@Base+0x16f9>
  40768a:	lea    rdi,[rbx+0x8]
  40768e:	mov    rax,r10
  407691:	sub    rax,rdi
  407694:	cmp    rax,0x7
  407698:	ja     407728 <_start@@Base+0x17e8>
  40769e:	mov    rsi,r10
  4076a1:	call   406050 <_start@@Base+0x110>
  4076a6:	movabs rdx,0x4e616d6573706163
  4076b0:	cmp    rax,rdx
  4076b3:	jne    407659 <_start@@Base+0x1719>
  4076b5:	lea    r13,[rbx+0x10]
  4076b9:	mov    rax,r10
  4076bc:	sub    rax,r13
  4076bf:	cmp    rax,0x7
  4076c3:	jbe    407778 <_start@@Base+0x1838>
  4076c9:	movbe  rax,QWORD PTR [rbx+0x10]
  4076cf:	movabs rdx,0xff00000000000000
  4076d9:	and    rax,rdx
  4076dc:	movabs rdx,0x6500000000000000
  4076e6:	cmp    rax,rdx
  4076e9:	jne    407659 <_start@@Base+0x1719>
  4076ef:	mov    r8,r9
  4076f2:	mov    ecx,0x1
  4076f7:	mov    rdx,r10
  4076fa:	mov    rsi,r13
  4076fd:	mov    rdi,r11
  407700:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407705:	cmp    r13,rax
  407708:	je     407659 <_start@@Base+0x1719>
  40770e:	mov    QWORD PTR [r12],0x1
  407716:	mov    DWORD PTR [rbp+0x0],0x0
  40771d:	jmp    40765c <_start@@Base+0x171c>
  407722:	nop    WORD PTR [rax+rax*1+0x0]
  407728:	movbe  rax,QWORD PTR [rbx+0x8]
  40772e:	jmp    4076a6 <_start@@Base+0x1766>
  407733:	nop    DWORD PTR [rax+rax*1+0x0]
  407738:	mov    r8,r9
  40773b:	mov    ecx,0x4
  407740:	mov    rdx,r10
  407743:	mov    rsi,rbx
  407746:	mov    rdi,r11
  407749:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  40774e:	cmp    rbx,rax
  407751:	je     40765c <_start@@Base+0x171c>
  407757:	mov    QWORD PTR [r12],0x0
  40775f:	mov    DWORD PTR [rbp+0x0],0x0
  407766:	add    rsp,0x8
  40776a:	pop    rbx
  40776b:	pop    rbp
  40776c:	pop    r12
  40776e:	pop    r13
  407770:	ret    
  407771:	nop    DWORD PTR [rax+0x0]
  407778:	mov    rsi,r10
  40777b:	mov    rdi,r13
  40777e:	call   406050 <_start@@Base+0x110>
  407783:	jmp    4076cf <_start@@Base+0x178f>
  407788:	nop    DWORD PTR [rax+rax*1+0x0]
  407790:	mov    rax,rdx
  407793:	push   r12
  407795:	mov    r11,rdi
  407798:	sub    rax,rsi
  40779b:	push   rbp
  40779c:	mov    r10,rdx
  40779f:	cmp    rax,0x7
  4077a3:	push   rbx
  4077a4:	mov    rbp,rcx
  4077a7:	mov    rbx,rsi
  4077aa:	mov    r12,r8
  4077ad:	jbe    407858 <_start@@Base+0x1918>
  4077b3:	movbe  rax,QWORD PTR [rsi]
  4077b8:	movabs rdx,0x68657831ffffffff
  4077c2:	cmp    rax,rdx
  4077c5:	ja     4077f0 <_start@@Base+0x18b0>
  4077c7:	movabs rdx,0xffffffff00000000
  4077d1:	and    rax,rdx
  4077d4:	movabs rdx,0x6865783100000000
  4077de:	cmp    rax,rdx
  4077e1:	je     407870 <_start@@Base+0x1930>
  4077e7:	mov    rax,rbx
  4077ea:	pop    rbx
  4077eb:	pop    rbp
  4077ec:	pop    r12
  4077ee:	ret    
  4077ef:	nop
  4077f0:	mov    rcx,rax
  4077f3:	movabs rdx,0x6865786e65670000
  4077fd:	xor    cx,cx
  407800:	cmp    rcx,rdx
  407803:	je     4078b0 <_start@@Base+0x1970>
  407809:	movabs rdx,0xffffffff00000000
  407813:	and    rax,rdx
  407816:	movabs rdx,0x6865783200000000
  407820:	cmp    rax,rdx
  407823:	jne    4077e7 <_start@@Base+0x18a7>
  407825:	mov    r8,r9
  407828:	mov    ecx,0x4
  40782d:	mov    rdx,r10
  407830:	mov    rsi,rbx
  407833:	mov    rdi,r11
  407836:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  40783b:	cmp    rbx,rax
  40783e:	je     4077e7 <_start@@Base+0x18a7>
  407840:	mov    QWORD PTR [r12],0x7eafbeaf
  407848:	mov    rbx,rax
  40784b:	mov    DWORD PTR [rbp+0x0],0x0
  407852:	jmp    4077e7 <_start@@Base+0x18a7>
  407854:	nop    DWORD PTR [rax+0x0]
  407858:	mov    rsi,rdx
  40785b:	mov    rdi,rbx
  40785e:	call   406050 <_start@@Base+0x110>
  407863:	jmp    4077b8 <_start@@Base+0x1878>
  407868:	nop    DWORD PTR [rax+rax*1+0x0]
  407870:	mov    r8,r9
  407873:	mov    ecx,0x4
  407878:	mov    rdx,r10
  40787b:	mov    rsi,rbx
  40787e:	mov    rdi,r11
  407881:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407886:	cmp    rbx,rax
  407889:	je     4077e7 <_start@@Base+0x18a7>
  40788f:	mov    QWORD PTR [r12],0x3
  407897:	mov    rbx,rax
  40789a:	mov    DWORD PTR [rbp+0x0],0x0
  4078a1:	jmp    4077e7 <_start@@Base+0x18a7>
  4078a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078b0:	mov    r8,r9
  4078b3:	mov    ecx,0x6
  4078b8:	mov    rdx,r10
  4078bb:	mov    rsi,rbx
  4078be:	mov    rdi,r11
  4078c1:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  4078c6:	cmp    rbx,rax
  4078c9:	je     4077e7 <_start@@Base+0x18a7>
  4078cf:	mov    QWORD PTR [r12],0xfffffffffffffffe
  4078d7:	mov    rbx,rax
  4078da:	mov    DWORD PTR [rbp+0x0],0x1
  4078e1:	jmp    4077e7 <_start@@Base+0x18a7>
  4078e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078f0:	mov    rax,rdx
  4078f3:	push   r12
  4078f5:	mov    r10,rdi
  4078f8:	sub    rax,rsi
  4078fb:	push   rbp
  4078fc:	mov    r12,rsi
  4078ff:	cmp    rax,0x7
  407903:	push   rbx
  407904:	mov    r11,rdx
  407907:	mov    rbx,rcx
  40790a:	mov    rbp,r8
  40790d:	jbe    4079c0 <_start@@Base+0x1a80>
  407913:	movbe  rax,QWORD PTR [rsi]
  407918:	movabs rdx,0x696e7431ffffffff
  407922:	cmp    rax,rdx
  407925:	ja     407950 <_start@@Base+0x1a10>
  407927:	movabs rdx,0xffffffff00000000
  407931:	and    rax,rdx
  407934:	movabs rdx,0x696e743100000000
  40793e:	cmp    rax,rdx
  407941:	je     407a28 <_start@@Base+0x1ae8>
  407947:	mov    rax,r12
  40794a:	pop    rbx
  40794b:	pop    rbp
  40794c:	pop    r12
  40794e:	ret    
  40794f:	nop
  407950:	movabs rdx,0x696e746e6566ffff
  40795a:	cmp    rax,rdx
  40795d:	jbe    4079d0 <_start@@Base+0x1a90>
  40795f:	mov    rcx,rax
  407962:	movabs rdx,0x696e746e65673200
  40796c:	xor    cl,cl
  40796e:	cmp    rcx,rdx
  407971:	je     407a60 <_start@@Base+0x1b20>
  407977:	xor    ax,ax
  40797a:	movabs rdx,0x696e746e65670000
  407984:	cmp    rax,rdx
  407987:	jne    407947 <_start@@Base+0x1a07>
  407989:	mov    r8,r9
  40798c:	mov    ecx,0x6
  407991:	mov    rdx,r11
  407994:	mov    rsi,r12
  407997:	mov    rdi,r10
  40799a:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  40799f:	cmp    r12,rax
  4079a2:	je     407947 <_start@@Base+0x1a07>
  4079a4:	mov    QWORD PTR [rbp+0x0],0xfffffffffffffffe
  4079ac:	mov    r12,rax
  4079af:	mov    DWORD PTR [rbx],0x1
  4079b5:	jmp    407947 <_start@@Base+0x1a07>
  4079b7:	nop    WORD PTR [rax+rax*1+0x0]
  4079c0:	mov    rsi,rdx
  4079c3:	mov    rdi,r12
  4079c6:	call   406050 <_start@@Base+0x110>
  4079cb:	jmp    407918 <_start@@Base+0x19d8>
  4079d0:	movabs rdx,0xffffffff00000000
  4079da:	and    rax,rdx
  4079dd:	movabs rdx,0x696e743200000000
  4079e7:	cmp    rax,rdx
  4079ea:	jne    407947 <_start@@Base+0x1a07>
  4079f0:	mov    r8,r9
  4079f3:	mov    ecx,0x4
  4079f8:	mov    rdx,r11
  4079fb:	mov    rsi,r12
  4079fe:	mov    rdi,r10
  407a01:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407a06:	cmp    r12,rax
  407a09:	je     407947 <_start@@Base+0x1a07>
  407a0f:	mov    QWORD PTR [rbp+0x0],0x2a
  407a17:	mov    r12,rax
  407a1a:	mov    DWORD PTR [rbx],0x0
  407a20:	jmp    407947 <_start@@Base+0x1a07>
  407a25:	nop    DWORD PTR [rax]
  407a28:	mov    r8,r9
  407a2b:	mov    ecx,0x4
  407a30:	mov    rdx,r11
  407a33:	mov    rsi,r12
  407a36:	mov    rdi,r10
  407a39:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407a3e:	cmp    r12,rax
  407a41:	je     407947 <_start@@Base+0x1a07>
  407a47:	mov    QWORD PTR [rbp+0x0],0x2
  407a4f:	mov    r12,rax
  407a52:	mov    DWORD PTR [rbx],0x0
  407a58:	jmp    407947 <_start@@Base+0x1a07>
  407a5d:	nop    DWORD PTR [rax]
  407a60:	mov    r8,r9
  407a63:	mov    ecx,0x7
  407a68:	mov    rdx,r11
  407a6b:	mov    rsi,r12
  407a6e:	mov    rdi,r10
  407a71:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407a76:	cmp    r12,rax
  407a79:	je     407947 <_start@@Base+0x1a07>
  407a7f:	mov    QWORD PTR [rbp+0x0],0xffffffffffffffff
  407a87:	mov    r12,rax
  407a8a:	mov    DWORD PTR [rbx],0x1
  407a90:	jmp    407947 <_start@@Base+0x1a07>
  407a95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407aa0:	mov    rax,rdx
  407aa3:	push   r12
  407aa5:	mov    r11,rdi
  407aa8:	sub    rax,rsi
  407aab:	push   rbp
  407aac:	mov    r10,rdx
  407aaf:	cmp    rax,0x7
  407ab3:	push   rbx
  407ab4:	mov    rbp,rcx
  407ab7:	mov    rbx,rsi
  407aba:	mov    r12,r8
  407abd:	jbe    407b58 <_start@@Base+0x1c18>
  407ac3:	movbe  rax,QWORD PTR [rsi]
  407ac8:	movabs rdx,0x6e656731ffffffff
  407ad2:	cmp    rax,rdx
  407ad5:	movabs rdx,0xffffffff00000000
  407adf:	ja     407b00 <_start@@Base+0x1bc0>
  407ae1:	and    rax,rdx
  407ae4:	movabs rdx,0x6e65673100000000
  407aee:	cmp    rax,rdx
  407af1:	je     407b70 <_start@@Base+0x1c30>
  407af3:	mov    rax,rbx
  407af6:	pop    rbx
  407af7:	pop    rbp
  407af8:	pop    r12
  407afa:	ret    
  407afb:	nop    DWORD PTR [rax+rax*1+0x0]
  407b00:	and    rax,rdx
  407b03:	movabs rdx,0x6e65673300000000
  407b0d:	cmp    rax,rdx
  407b10:	je     407bb0 <_start@@Base+0x1c70>
  407b16:	movabs rdx,0x6e65673200000000
  407b20:	cmp    rax,rdx
  407b23:	jne    407af3 <_start@@Base+0x1bb3>
  407b25:	mov    r8,r9
  407b28:	mov    ecx,0x4
  407b2d:	mov    rdx,r10
  407b30:	mov    rsi,rbx
  407b33:	mov    rdi,r11
  407b36:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407b3b:	cmp    rbx,rax
  407b3e:	je     407af3 <_start@@Base+0x1bb3>
  407b40:	mov    QWORD PTR [r12],0xfffffffffffffff5
  407b48:	mov    rbx,rax
  407b4b:	mov    DWORD PTR [rbp+0x0],0x1
  407b52:	jmp    407af3 <_start@@Base+0x1bb3>
  407b54:	nop    DWORD PTR [rax+0x0]
  407b58:	mov    rsi,rdx
  407b5b:	mov    rdi,rbx
  407b5e:	call   406050 <_start@@Base+0x110>
  407b63:	jmp    407ac8 <_start@@Base+0x1b88>
  407b68:	nop    DWORD PTR [rax+rax*1+0x0]
  407b70:	mov    r8,r9
  407b73:	mov    ecx,0x4
  407b78:	mov    rdx,r10
  407b7b:	mov    rsi,rbx
  407b7e:	mov    rdi,r11
  407b81:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407b86:	cmp    rbx,rax
  407b89:	je     407af3 <_start@@Base+0x1bb3>
  407b8f:	mov    QWORD PTR [r12],0xfffffffffffffff4
  407b97:	mov    rbx,rax
  407b9a:	mov    DWORD PTR [rbp+0x0],0x1
  407ba1:	jmp    407af3 <_start@@Base+0x1bb3>
  407ba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bb0:	mov    r8,r9
  407bb3:	mov    ecx,0x4
  407bb8:	mov    rdx,r10
  407bbb:	mov    rsi,rbx
  407bbe:	mov    rdi,r11
  407bc1:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407bc6:	cmp    rbx,rax
  407bc9:	je     407af3 <_start@@Base+0x1bb3>
  407bcf:	mov    QWORD PTR [r12],0xfffffffffffffff6
  407bd7:	mov    rbx,rax
  407bda:	mov    DWORD PTR [rbp+0x0],0x1
  407be1:	jmp    407af3 <_start@@Base+0x1bb3>
  407be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bf0:	mov    rax,rdx
  407bf3:	push   r12
  407bf5:	mov    r11,rdi
  407bf8:	sub    rax,rsi
  407bfb:	push   rbp
  407bfc:	mov    r10,rdx
  407bff:	cmp    rax,0x7
  407c03:	push   rbx
  407c04:	mov    rbp,rcx
  407c07:	mov    rbx,rsi
  407c0a:	mov    r12,r8
  407c0d:	jbe    407cb8 <_start@@Base+0x1d78>
  407c13:	movbe  rax,QWORD PTR [rsi]
  407c18:	movabs rdx,0x477265656dffffff
  407c22:	cmp    rax,rdx
  407c25:	ja     407c50 <_start@@Base+0x1d10>
  407c27:	movabs rdx,0xffffffff00000000
  407c31:	and    rax,rdx
  407c34:	movabs rdx,0x426c756500000000
  407c3e:	cmp    rax,rdx
  407c41:	je     407cd0 <_start@@Base+0x1d90>
  407c47:	mov    rax,rbx
  407c4a:	pop    rbx
  407c4b:	pop    rbp
  407c4c:	pop    r12
  407c4e:	ret    
  407c4f:	nop
  407c50:	movabs rdx,0xffffff0000000000
  407c5a:	movabs rcx,0x5265640000000000
  407c64:	and    rdx,rax
  407c67:	cmp    rdx,rcx
  407c6a:	je     407d10 <_start@@Base+0x1dd0>
  407c70:	and    rax,0xffffffffff000000
  407c76:	movabs rdx,0x477265656e000000
  407c80:	cmp    rax,rdx
  407c83:	jne    407c47 <_start@@Base+0x1d07>
  407c85:	mov    r8,r9
  407c88:	mov    ecx,0x5
  407c8d:	mov    rdx,r10
  407c90:	mov    rsi,rbx
  407c93:	mov    rdi,r11
  407c96:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407c9b:	cmp    rbx,rax
  407c9e:	je     407c47 <_start@@Base+0x1d07>
  407ca0:	mov    QWORD PTR [r12],0x2
  407ca8:	mov    rbx,rax
  407cab:	mov    DWORD PTR [rbp+0x0],0x0
  407cb2:	jmp    407c47 <_start@@Base+0x1d07>
  407cb4:	nop    DWORD PTR [rax+0x0]
  407cb8:	mov    rsi,rdx
  407cbb:	mov    rdi,rbx
  407cbe:	call   406050 <_start@@Base+0x110>
  407cc3:	jmp    407c18 <_start@@Base+0x1cd8>
  407cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  407cd0:	mov    r8,r9
  407cd3:	mov    ecx,0x4
  407cd8:	mov    rdx,r10
  407cdb:	mov    rsi,rbx
  407cde:	mov    rdi,r11
  407ce1:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407ce6:	cmp    rbx,rax
  407ce9:	je     407c47 <_start@@Base+0x1d07>
  407cef:	mov    QWORD PTR [r12],0x8
  407cf7:	mov    rbx,rax
  407cfa:	mov    DWORD PTR [rbp+0x0],0x0
  407d01:	jmp    407c47 <_start@@Base+0x1d07>
  407d06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d10:	mov    r8,r9
  407d13:	mov    ecx,0x3
  407d18:	mov    rdx,r10
  407d1b:	mov    rsi,rbx
  407d1e:	mov    rdi,r11
  407d21:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  407d26:	cmp    rbx,rax
  407d29:	je     407c47 <_start@@Base+0x1d07>
  407d2f:	mov    QWORD PTR [r12],0x1
  407d37:	mov    rbx,rax
  407d3a:	mov    DWORD PTR [rbp+0x0],0x0
  407d41:	jmp    407c47 <_start@@Base+0x1d07>
  407d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d50:	push   rbx
  407d51:	xor    esi,esi
  407d53:	mov    ecx,0x8
  407d58:	mov    edx,0x8
  407d5d:	mov    rbx,rdi
  407d60:	call   419f50 <flatcc_verify_field@@Base>
  407d65:	test   eax,eax
  407d67:	je     407d70 <_start@@Base+0x1e30>
  407d69:	pop    rbx
  407d6a:	ret    
  407d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  407d70:	mov    rdi,rbx
  407d73:	mov    ecx,0x4
  407d78:	mov    edx,0x4
  407d7d:	pop    rbx
  407d7e:	mov    esi,0x1
  407d83:	jmp    419f50 <flatcc_verify_field@@Base>
  407d88:	nop    DWORD PTR [rax+rax*1+0x0]
  407d90:	push   rbx
  407d91:	xor    esi,esi
  407d93:	mov    ecx,0x1
  407d98:	mov    edx,0x1
  407d9d:	mov    rbx,rdi
  407da0:	call   419f50 <flatcc_verify_field@@Base>
  407da5:	test   eax,eax
  407da7:	je     407db0 <_start@@Base+0x1e70>
  407da9:	pop    rbx
  407daa:	ret    
  407dab:	nop    DWORD PTR [rax+rax*1+0x0]
  407db0:	mov    ecx,0x1
  407db5:	mov    edx,0x1
  407dba:	mov    esi,0x1
  407dbf:	mov    rdi,rbx
  407dc2:	call   419f50 <flatcc_verify_field@@Base>
  407dc7:	test   eax,eax
  407dc9:	jne    407da9 <_start@@Base+0x1e69>
  407dcb:	mov    ecx,0x1
  407dd0:	mov    edx,0x1
  407dd5:	mov    esi,0x2
  407dda:	mov    rdi,rbx
  407ddd:	call   419f50 <flatcc_verify_field@@Base>
  407de2:	test   eax,eax
  407de4:	jne    407da9 <_start@@Base+0x1e69>
  407de6:	mov    rdi,rbx
  407de9:	mov    ecx,0x1
  407dee:	mov    edx,0x1
  407df3:	pop    rbx
  407df4:	mov    esi,0x3
  407df9:	jmp    419f50 <flatcc_verify_field@@Base>
  407dfe:	xchg   ax,ax
  407e00:	push   rbx
  407e01:	xor    edx,edx
  407e03:	xor    esi,esi
  407e05:	mov    rbx,rdi
  407e08:	call   419fb0 <flatcc_verify_string_field@@Base>
  407e0d:	test   eax,eax
  407e0f:	je     407e18 <_start@@Base+0x1ed8>
  407e11:	pop    rbx
  407e12:	ret    
  407e13:	nop    DWORD PTR [rax+rax*1+0x0]
  407e18:	mov    ecx,0x8
  407e1d:	mov    edx,0x8
  407e22:	mov    esi,0x1
  407e27:	mov    rdi,rbx
  407e2a:	call   419f50 <flatcc_verify_field@@Base>
  407e2f:	test   eax,eax
  407e31:	jne    407e11 <_start@@Base+0x1ed1>
  407e33:	mov    rdi,rbx
  407e36:	mov    ecx,0x2
  407e3b:	mov    edx,0x2
  407e40:	pop    rbx
  407e41:	mov    esi,0x2
  407e46:	jmp    419f50 <flatcc_verify_field@@Base>
  407e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  407e50:	push   rbx
  407e51:	xor    edx,edx
  407e53:	xor    esi,esi
  407e55:	mov    rbx,rdi
  407e58:	call   419fb0 <flatcc_verify_string_field@@Base>
  407e5d:	test   eax,eax
  407e5f:	je     407e68 <_start@@Base+0x1f28>
  407e61:	pop    rbx
  407e62:	ret    
  407e63:	nop    DWORD PTR [rax+rax*1+0x0]
  407e68:	mov    ecx,0x4
  407e6d:	mov    edx,0x4
  407e72:	mov    esi,0x1
  407e77:	mov    rdi,rbx
  407e7a:	call   419f50 <flatcc_verify_field@@Base>
  407e7f:	test   eax,eax
  407e81:	jne    407e61 <_start@@Base+0x1f21>
  407e83:	xor    edx,edx
  407e85:	mov    esi,0x2
  407e8a:	mov    rdi,rbx
  407e8d:	call   419fb0 <flatcc_verify_string_field@@Base>
  407e92:	test   eax,eax
  407e94:	jne    407e61 <_start@@Base+0x1f21>
  407e96:	mov    ecx,0x8
  407e9b:	mov    edx,0x8
  407ea0:	mov    esi,0x3
  407ea5:	mov    rdi,rbx
  407ea8:	call   419f50 <flatcc_verify_field@@Base>
  407ead:	test   eax,eax
  407eaf:	jne    407e61 <_start@@Base+0x1f21>
  407eb1:	xor    edx,edx
  407eb3:	mov    esi,0x4
  407eb8:	mov    rdi,rbx
  407ebb:	call   419fb0 <flatcc_verify_string_field@@Base>
  407ec0:	test   eax,eax
  407ec2:	jne    407e61 <_start@@Base+0x1f21>
  407ec4:	mov    ecx,0x8
  407ec9:	mov    edx,0x8
  407ece:	mov    esi,0x5
  407ed3:	mov    rdi,rbx
  407ed6:	call   419f50 <flatcc_verify_field@@Base>
  407edb:	test   eax,eax
  407edd:	jne    407e61 <_start@@Base+0x1f21>
  407edf:	mov    ecx,0x4
  407ee4:	mov    edx,0x4
  407ee9:	mov    esi,0x6
  407eee:	mov    rdi,rbx
  407ef1:	call   419f50 <flatcc_verify_field@@Base>
  407ef6:	test   eax,eax
  407ef8:	jne    407e61 <_start@@Base+0x1f21>
  407efe:	mov    ecx,0x8
  407f03:	mov    edx,0x8
  407f08:	mov    esi,0x7
  407f0d:	mov    rdi,rbx
  407f10:	call   419f50 <flatcc_verify_field@@Base>
  407f15:	test   eax,eax
  407f17:	jne    407e61 <_start@@Base+0x1f21>
  407f1d:	mov    rdi,rbx
  407f20:	mov    ecx,0x4
  407f25:	mov    edx,0x4
  407f2a:	pop    rbx
  407f2b:	mov    esi,0x8
  407f30:	jmp    419f50 <flatcc_verify_field@@Base>
  407f35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407f40:	push   rbx
  407f41:	lea    rcx,[rip+0xffffffffffffff08]        # 407e50 <_start@@Base+0x1f10>
  407f48:	xor    edx,edx
  407f4a:	xor    esi,esi
  407f4c:	mov    rbx,rdi
  407f4f:	call   41a2e0 <flatcc_verify_table_field@@Base>
  407f54:	test   eax,eax
  407f56:	je     407f60 <_start@@Base+0x2020>
  407f58:	pop    rbx
  407f59:	ret    
  407f5a:	nop    WORD PTR [rax+rax*1+0x0]
  407f60:	lea    rcx,[rip+0xc69]        # 408bd0 <_start@@Base+0x2c90>
  407f67:	xor    edx,edx
  407f69:	mov    esi,0x1
  407f6e:	mov    rdi,rbx
  407f71:	call   41a2e0 <flatcc_verify_table_field@@Base>
  407f76:	test   eax,eax
  407f78:	jne    407f58 <_start@@Base+0x2018>
  407f7a:	mov    rdi,rbx
  407f7d:	lea    rcx,[rip+0xfffffffffffffdcc]        # 407d50 <_start@@Base+0x1e10>
  407f84:	xor    edx,edx
  407f86:	pop    rbx
  407f87:	mov    esi,0x2
  407f8c:	jmp    41a2e0 <flatcc_verify_table_field@@Base>
  407f91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  407f9c:	nop    DWORD PTR [rax+0x0]
  407fa0:	push   rbx
  407fa1:	xor    esi,esi
  407fa3:	mov    ecx,0x10
  407fa8:	mov    edx,0x20
  407fad:	mov    rbx,rdi
  407fb0:	call   419f50 <flatcc_verify_field@@Base>
  407fb5:	test   eax,eax
  407fb7:	je     407fc0 <_start@@Base+0x2080>
  407fb9:	pop    rbx
  407fba:	ret    
  407fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  407fc0:	mov    ecx,0x2
  407fc5:	mov    edx,0x2
  407fca:	mov    esi,0x2
  407fcf:	mov    rdi,rbx
  407fd2:	call   419f50 <flatcc_verify_field@@Base>
  407fd7:	test   eax,eax
  407fd9:	jne    407fb9 <_start@@Base+0x2079>
  407fdb:	mov    ecx,0x2
  407fe0:	mov    edx,0x2
  407fe5:	mov    esi,0x1
  407fea:	mov    rdi,rbx
  407fed:	call   419f50 <flatcc_verify_field@@Base>
  407ff2:	test   eax,eax
  407ff4:	jne    407fb9 <_start@@Base+0x2079>
  407ff6:	mov    edx,0x1
  407ffb:	mov    esi,0x3
  408000:	mov    rdi,rbx
  408003:	call   419fb0 <flatcc_verify_string_field@@Base>
  408008:	test   eax,eax
  40800a:	jne    407fb9 <_start@@Base+0x2079>
  40800c:	mov    ecx,0x1
  408011:	mov    edx,0x1
  408016:	mov    esi,0x6
  40801b:	mov    rdi,rbx
  40801e:	call   419f50 <flatcc_verify_field@@Base>
  408023:	test   eax,eax
  408025:	jne    407fb9 <_start@@Base+0x2079>
  408027:	xor    edx,edx
  408029:	mov    r9d,0xffffffff
  40802f:	mov    r8d,0x1
  408035:	mov    ecx,0x1
  40803a:	mov    esi,0x5
  40803f:	mov    rdi,rbx
  408042:	call   41a060 <flatcc_verify_vector_field@@Base>
  408047:	test   eax,eax
  408049:	jne    407fb9 <_start@@Base+0x2079>
  40804f:	lea    rcx,[rip+0xffffffffffffff4a]        # 407fa0 <_start@@Base+0x2060>
  408056:	xor    edx,edx
  408058:	mov    esi,0xb
  40805d:	mov    rdi,rbx
  408060:	call   41a430 <flatcc_verify_table_vector_field@@Base>
  408065:	test   eax,eax
  408067:	jne    407fb9 <_start@@Base+0x2079>
  40806d:	xor    edx,edx
  40806f:	mov    esi,0xa
  408074:	mov    rdi,rbx
  408077:	call   41a140 <flatcc_verify_string_vector_field@@Base>
  40807c:	test   eax,eax
  40807e:	jne    407fb9 <_start@@Base+0x2079>
  408084:	xor    edx,edx
  408086:	mov    esi,0x1c
  40808b:	mov    rdi,rbx
  40808e:	call   41a140 <flatcc_verify_string_vector_field@@Base>
  408093:	test   eax,eax
  408095:	jne    407fb9 <_start@@Base+0x2079>
  40809b:	xor    edx,edx
  40809d:	mov    r9d,0xffffffff
  4080a3:	mov    r8d,0x1
  4080a9:	mov    ecx,0x1
  4080ae:	mov    esi,0x18
  4080b3:	mov    rdi,rbx
  4080b6:	call   41a060 <flatcc_verify_vector_field@@Base>
  4080bb:	test   eax,eax
  4080bd:	jne    407fb9 <_start@@Base+0x2079>
  4080c3:	xor    edx,edx
  4080c5:	mov    r9d,0x1fffffff
  4080cb:	mov    r8d,0x4
  4080d1:	mov    ecx,0x8
  4080d6:	mov    esi,0x1d
  4080db:	mov    rdi,rbx
  4080de:	call   41a060 <flatcc_verify_vector_field@@Base>
  4080e3:	test   eax,eax
  4080e5:	jne    407fb9 <_start@@Base+0x2079>
  4080eb:	lea    rcx,[rip+0xfffffffffffffeae]        # 407fa0 <_start@@Base+0x2060>
  4080f2:	xor    edx,edx
  4080f4:	mov    esi,0xc
  4080f9:	mov    rdi,rbx
  4080fc:	call   41a2e0 <flatcc_verify_table_field@@Base>
  408101:	test   eax,eax
  408103:	jne    407fb9 <_start@@Base+0x2079>
  408109:	lea    rcx,[rip+0x340]        # 408450 <_start@@Base+0x2510>
  408110:	xor    edx,edx
  408112:	mov    esi,0x8
  408117:	mov    rdi,rbx
  40811a:	call   41b0d0 <flatcc_verify_union_field@@Base>
  40811f:	test   eax,eax
  408121:	jne    407fb9 <_start@@Base+0x2079>
  408127:	xor    edx,edx
  408129:	mov    r9d,0x3fffffff
  40812f:	mov    r8d,0x2
  408135:	mov    ecx,0x4
  40813a:	mov    esi,0x9
  40813f:	mov    rdi,rbx
  408142:	call   41a060 <flatcc_verify_vector_field@@Base>
  408147:	test   eax,eax
  408149:	jne    407fb9 <_start@@Base+0x2079>
  40814f:	xor    edx,edx
  408151:	mov    r9d,0x3fffffff
  408157:	mov    r8d,0x2
  40815d:	mov    ecx,0x4
  408162:	mov    esi,0x1f
  408167:	mov    rdi,rbx
  40816a:	call   41a060 <flatcc_verify_vector_field@@Base>
  40816f:	test   eax,eax
  408171:	jne    407fb9 <_start@@Base+0x2079>
  408177:	lea    r9,[rip+0xfffffffffffffe22]        # 407fa0 <_start@@Base+0x2060>
  40817e:	xor    ecx,ecx
  408180:	xor    edx,edx
  408182:	mov    r8d,0x1
  408188:	mov    esi,0xd
  40818d:	mov    rdi,rbx
  408190:	call   41aee0 <flatcc_verify_table_as_nested_root@@Base>
  408195:	test   eax,eax
  408197:	jne    407fb9 <_start@@Base+0x2079>
  40819d:	lea    rcx,[rip+0xfffffffffffffc5c]        # 407e00 <_start@@Base+0x1ec0>
  4081a4:	xor    edx,edx
  4081a6:	mov    esi,0xe
  4081ab:	mov    rdi,rbx
  4081ae:	call   41a2e0 <flatcc_verify_table_field@@Base>
  4081b3:	test   eax,eax
  4081b5:	jne    407fb9 <_start@@Base+0x2079>
  4081bb:	mov    ecx,0x1
  4081c0:	mov    edx,0x1
  4081c5:	mov    esi,0xf
  4081ca:	mov    rdi,rbx
  4081cd:	call   419f50 <flatcc_verify_field@@Base>
  4081d2:	test   eax,eax
  4081d4:	jne    407fb9 <_start@@Base+0x2079>
  4081da:	mov    ecx,0x4
  4081df:	mov    edx,0x4
  4081e4:	mov    esi,0x10
  4081e9:	mov    rdi,rbx
  4081ec:	call   419f50 <flatcc_verify_field@@Base>
  4081f1:	test   eax,eax
  4081f3:	jne    407fb9 <_start@@Base+0x2079>
  4081f9:	mov    ecx,0x4
  4081fe:	mov    edx,0x4
  408203:	mov    esi,0x11
  408208:	mov    rdi,rbx
  40820b:	call   419f50 <flatcc_verify_field@@Base>
  408210:	test   eax,eax
  408212:	jne    407fb9 <_start@@Base+0x2079>
  408218:	mov    ecx,0x8
  40821d:	mov    edx,0x8
  408222:	mov    esi,0x12
  408227:	mov    rdi,rbx
  40822a:	call   419f50 <flatcc_verify_field@@Base>
  40822f:	test   eax,eax
  408231:	jne    407fb9 <_start@@Base+0x2079>
  408237:	mov    ecx,0x8
  40823c:	mov    edx,0x8
  408241:	mov    esi,0x13
  408246:	mov    rdi,rbx
  408249:	call   419f50 <flatcc_verify_field@@Base>
  40824e:	test   eax,eax
  408250:	jne    407fb9 <_start@@Base+0x2079>
  408256:	mov    ecx,0x4
  40825b:	mov    edx,0x4
  408260:	mov    esi,0x14
  408265:	mov    rdi,rbx
  408268:	call   419f50 <flatcc_verify_field@@Base>
  40826d:	test   eax,eax
  40826f:	jne    407fb9 <_start@@Base+0x2079>
  408275:	mov    ecx,0x4
  40827a:	mov    edx,0x4
  40827f:	mov    esi,0x15
  408284:	mov    rdi,rbx
  408287:	call   419f50 <flatcc_verify_field@@Base>
  40828c:	test   eax,eax
  40828e:	jne    407fb9 <_start@@Base+0x2079>
  408294:	mov    ecx,0x8
  408299:	mov    edx,0x8
  40829e:	mov    esi,0x16
  4082a3:	mov    rdi,rbx
  4082a6:	call   419f50 <flatcc_verify_field@@Base>
  4082ab:	test   eax,eax
  4082ad:	jne    407fb9 <_start@@Base+0x2079>
  4082b3:	mov    ecx,0x8
  4082b8:	mov    edx,0x8
  4082bd:	mov    esi,0x17
  4082c2:	mov    rdi,rbx
  4082c5:	call   419f50 <flatcc_verify_field@@Base>
  4082ca:	test   eax,eax
  4082cc:	jne    407fb9 <_start@@Base+0x2079>
  4082d2:	mov    ecx,0x4
  4082d7:	mov    edx,0x4
  4082dc:	mov    esi,0x19
  4082e1:	mov    rdi,rbx
  4082e4:	call   419f50 <flatcc_verify_field@@Base>
  4082e9:	test   eax,eax
  4082eb:	jne    407fb9 <_start@@Base+0x2079>
  4082f1:	mov    ecx,0x4
  4082f6:	mov    edx,0x4
  4082fb:	mov    esi,0x1a
  408300:	mov    rdi,rbx
  408303:	call   419f50 <flatcc_verify_field@@Base>
  408308:	test   eax,eax
  40830a:	jne    407fb9 <_start@@Base+0x2079>
  408310:	mov    ecx,0x4
  408315:	mov    edx,0x4
  40831a:	mov    esi,0x1b
  40831f:	mov    rdi,rbx
  408322:	call   419f50 <flatcc_verify_field@@Base>
  408327:	test   eax,eax
  408329:	jne    407fb9 <_start@@Base+0x2079>
  40832f:	xor    edx,edx
  408331:	mov    r9d,0xffffffff
  408337:	mov    r8d,0x1
  40833d:	mov    ecx,0x1
  408342:	mov    esi,0x1e
  408347:	mov    rdi,rbx
  40834a:	call   41a060 <flatcc_verify_vector_field@@Base>
  40834f:	test   eax,eax
  408351:	jne    407fb9 <_start@@Base+0x2079>
  408357:	xor    edx,edx
  408359:	mov    r9d,0x1fffffff
  40835f:	mov    r8d,0x8
  408365:	mov    ecx,0x8
  40836a:	mov    esi,0x20
  40836f:	mov    rdi,rbx
  408372:	call   41a060 <flatcc_verify_vector_field@@Base>
  408377:	test   eax,eax
  408379:	jne    407fb9 <_start@@Base+0x2079>
  40837f:	xor    edx,edx
  408381:	mov    r9d,0x1fffffff
  408387:	mov    r8d,0x8
  40838d:	mov    ecx,0x8
  408392:	mov    esi,0x21
  408397:	mov    rdi,rbx
  40839a:	call   41a060 <flatcc_verify_vector_field@@Base>
  40839f:	test   eax,eax
  4083a1:	jne    407fb9 <_start@@Base+0x2079>
  4083a7:	lea    rcx,[rip+0x392]        # 408740 <_start@@Base+0x2800>
  4083ae:	xor    edx,edx
  4083b0:	mov    esi,0x22
  4083b5:	mov    rdi,rbx
  4083b8:	call   41a2e0 <flatcc_verify_table_field@@Base>
  4083bd:	test   eax,eax
  4083bf:	jne    407fb9 <_start@@Base+0x2079>
  4083c5:	mov    rdi,rbx
  4083c8:	lea    rcx,[rip+0x11]        # 4083e0 <_start@@Base+0x24a0>
  4083cf:	xor    edx,edx
  4083d1:	pop    rbx
  4083d2:	mov    esi,0x23
  4083d7:	jmp    41a2e0 <flatcc_verify_table_field@@Base>
  4083dc:	nop    DWORD PTR [rax+0x0]
  4083e0:	push   rbx
  4083e1:	xor    edx,edx
  4083e3:	xor    esi,esi
  4083e5:	mov    r9d,0xffffffff
  4083eb:	mov    r8d,0x1
  4083f1:	mov    ecx,0x1
  4083f6:	mov    rbx,rdi
  4083f9:	call   41a060 <flatcc_verify_vector_field@@Base>
  4083fe:	test   eax,eax
  408400:	je     408408 <_start@@Base+0x24c8>
  408402:	pop    rbx
  408403:	ret    
  408404:	nop    DWORD PTR [rax+0x0]
  408408:	xor    edx,edx
  40840a:	mov    r9d,0xffffffff
  408410:	mov    r8d,0x1
  408416:	mov    ecx,0x1
  40841b:	mov    esi,0x1
  408420:	mov    rdi,rbx
  408423:	call   41a060 <flatcc_verify_vector_field@@Base>
  408428:	test   eax,eax
  40842a:	jne    408402 <_start@@Base+0x24c2>
  40842c:	mov    rdi,rbx
  40842f:	lea    r9,[rip+0xfffffffffffffb6a]        # 407fa0 <_start@@Base+0x2060>
  408436:	mov    r8d,0x1
  40843c:	pop    rbx
  40843d:	xor    ecx,ecx
  40843f:	xor    edx,edx
  408441:	mov    esi,0x2
  408446:	jmp    41aee0 <flatcc_verify_table_as_nested_root@@Base>
  40844b:	nop    DWORD PTR [rax+rax*1+0x0]
  408450:	movzx  eax,BYTE PTR [rdi+0x10]
  408454:	cmp    al,0x2
  408456:	je     408498 <_start@@Base+0x2558>
  408458:	jbe    408480 <_start@@Base+0x2540>
  40845a:	cmp    al,0x3
  40845c:	je     408470 <_start@@Base+0x2530>
  40845e:	cmp    al,0x4
  408460:	jne    408490 <_start@@Base+0x2550>
  408462:	lea    rsi,[rip+0x47]        # 4084b0 <_start@@Base+0x2570>
  408469:	jmp    41a760 <flatcc_verify_union_table@@Base>
  40846e:	xchg   ax,ax
  408470:	lea    rsi,[rip+0xffffffffffffdd39]        # 4061b0 <_start@@Base+0x270>
  408477:	jmp    41a760 <flatcc_verify_union_table@@Base>
  40847c:	nop    DWORD PTR [rax+0x0]
  408480:	cmp    al,0x1
  408482:	jne    408490 <_start@@Base+0x2550>
  408484:	lea    rsi,[rip+0xfffffffffffffb15]        # 407fa0 <_start@@Base+0x2060>
  40848b:	jmp    41a760 <flatcc_verify_union_table@@Base>
  408490:	xor    eax,eax
  408492:	ret    
  408493:	nop    DWORD PTR [rax+rax*1+0x0]
  408498:	lea    rsi,[rip+0xfffffffffffff8f1]        # 407d90 <_start@@Base+0x1e50>
  40849f:	jmp    41a760 <flatcc_verify_union_table@@Base>
  4084a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4084af:	nop
  4084b0:	push   rbx
  4084b1:	lea    rcx,[rip+0xfffffffffffffa88]        # 407f40 <_start@@Base+0x2000>
  4084b8:	xor    edx,edx
  4084ba:	xor    esi,esi
  4084bc:	mov    rbx,rdi
  4084bf:	call   41a2e0 <flatcc_verify_table_field@@Base>
  4084c4:	test   eax,eax
  4084c6:	je     4084d0 <_start@@Base+0x2590>
  4084c8:	pop    rbx
  4084c9:	ret    
  4084ca:	nop    WORD PTR [rax+rax*1+0x0]
  4084d0:	lea    rcx,[rip+0x39]        # 408510 <_start@@Base+0x25d0>
  4084d7:	xor    edx,edx
  4084d9:	mov    esi,0x1
  4084de:	mov    rdi,rbx
  4084e1:	call   41a2e0 <flatcc_verify_table_field@@Base>
  4084e6:	test   eax,eax
  4084e8:	jne    4084c8 <_start@@Base+0x2588>
  4084ea:	mov    rdi,rbx
  4084ed:	lea    rcx,[rip+0xffffffffffffff5c]        # 408450 <_start@@Base+0x2510>
  4084f4:	xor    edx,edx
  4084f6:	pop    rbx
  4084f7:	mov    esi,0x3
  4084fc:	jmp    41b230 <flatcc_verify_union_vector_field@@Base>
  408501:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40850c:	nop    DWORD PTR [rax+0x0]
  408510:	push   rbx
  408511:	lea    rcx,[rip+0x88]        # 4085a0 <_start@@Base+0x2660>
  408518:	xor    edx,edx
  40851a:	mov    esi,0x1
  40851f:	mov    rbx,rdi
  408522:	call   41b0d0 <flatcc_verify_union_field@@Base>
  408527:	test   eax,eax
  408529:	je     408530 <_start@@Base+0x25f0>
  40852b:	pop    rbx
  40852c:	ret    
  40852d:	nop    DWORD PTR [rax]
  408530:	lea    rcx,[rip+0x69]        # 4085a0 <_start@@Base+0x2660>
  408537:	xor    edx,edx
  408539:	mov    esi,0x3
  40853e:	mov    rdi,rbx
  408541:	call   41b0d0 <flatcc_verify_union_field@@Base>
  408546:	test   eax,eax
  408548:	jne    40852b <_start@@Base+0x25eb>
  40854a:	lea    rcx,[rip+0x4f]        # 4085a0 <_start@@Base+0x2660>
  408551:	xor    edx,edx
  408553:	mov    esi,0x5
  408558:	mov    rdi,rbx
  40855b:	call   41b0d0 <flatcc_verify_union_field@@Base>
  408560:	test   eax,eax
  408562:	jne    40852b <_start@@Base+0x25eb>
  408564:	lea    rcx,[rip+0x35]        # 4085a0 <_start@@Base+0x2660>
  40856b:	xor    edx,edx
  40856d:	mov    esi,0x7
  408572:	mov    rdi,rbx
  408575:	call   41b0d0 <flatcc_verify_union_field@@Base>
  40857a:	test   eax,eax
  40857c:	jne    40852b <_start@@Base+0x25eb>
  40857e:	mov    rdi,rbx
  408581:	lea    rcx,[rip+0x18]        # 4085a0 <_start@@Base+0x2660>
  408588:	xor    edx,edx
  40858a:	pop    rbx
  40858b:	mov    esi,0x9
  408590:	jmp    41b230 <flatcc_verify_union_vector_field@@Base>
  408595:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4085a0:	movzx  eax,BYTE PTR [rdi+0x10]
  4085a4:	cmp    al,0x9
  4085a6:	je     4085e0 <_start@@Base+0x26a0>
  4085a8:	jbe    4085c0 <_start@@Base+0x2680>
  4085aa:	cmp    al,0xb
  4085ac:	je     4085b4 <_start@@Base+0x2674>
  4085ae:	jb     4085e0 <_start@@Base+0x26a0>
  4085b0:	cmp    al,0xff
  4085b2:	jne    4085f0 <_start@@Base+0x26b0>
  4085b4:	jmp    41a8d0 <flatcc_verify_union_string@@Base>
  4085b9:	nop    DWORD PTR [rax+0x0]
  4085c0:	cmp    al,0x2
  4085c2:	je     4085f8 <_start@@Base+0x26b8>
  4085c4:	cmp    al,0x8
  4085c6:	jne    4085f0 <_start@@Base+0x26b0>
  4085c8:	mov    edx,0x2
  4085cd:	mov    esi,0x2
  4085d2:	jmp    41a880 <flatcc_verify_union_struct@@Base>
  4085d7:	nop    WORD PTR [rax+rax*1+0x0]
  4085e0:	mov    edx,0x4
  4085e5:	mov    esi,0x4
  4085ea:	jmp    41a880 <flatcc_verify_union_struct@@Base>
  4085ef:	nop
  4085f0:	xor    eax,eax
  4085f2:	ret    
  4085f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4085f8:	lea    rsi,[rip+0xffffffffffffdbc1]        # 4061c0 <_start@@Base+0x280>
  4085ff:	jmp    41a760 <flatcc_verify_union_table@@Base>
  408604:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40860f:	nop
  408610:	cmp    sil,0x2
  408614:	je     408688 <_start@@Base+0x2748>
  408616:	jbe    408650 <_start@@Base+0x2710>
  408618:	cmp    sil,0x3
  40861c:	je     408638 <_start@@Base+0x26f8>
  40861e:	cmp    sil,0x4
  408622:	jne    408670 <_start@@Base+0x2730>
  408624:	lea    rsi,[rip+0x22f53]        # 42b57e <_IO_stdin_used@@Base+0x57e>
  40862b:	mov    edx,0x3
  408630:	jmp    421380 <flatcc_json_printer_enum@@Base>
  408635:	nop    DWORD PTR [rax]
  408638:	lea    rsi,[rip+0x22f36]        # 42b575 <_IO_stdin_used@@Base+0x575>
  40863f:	mov    edx,0x8
  408644:	jmp    421380 <flatcc_json_printer_enum@@Base>
  408649:	nop    DWORD PTR [rax+0x0]
  408650:	cmp    sil,0x1
  408654:	jne    408670 <_start@@Base+0x2730>
  408656:	lea    rsi,[rip+0x22ef8]        # 42b555 <_IO_stdin_used@@Base+0x555>
  40865d:	mov    edx,0x7
  408662:	jmp    421380 <flatcc_json_printer_enum@@Base>
  408667:	nop    WORD PTR [rax+rax*1+0x0]
  408670:	lea    rsi,[rip+0x27f45]        # 4305bc <flatcc_builder_padding_base@@Base+0xadc>
  408677:	mov    edx,0x4
  40867c:	jmp    421380 <flatcc_json_printer_enum@@Base>
  408681:	nop    DWORD PTR [rax+0x0]
  408688:	lea    rsi,[rip+0x22ece]        # 42b55d <_IO_stdin_used@@Base+0x55d>
  40868f:	mov    edx,0x17
  408694:	jmp    421380 <flatcc_json_printer_enum@@Base>
  408699:	nop    DWORD PTR [rax+0x0]
  4086a0:	mov    rax,rdx
  4086a3:	push   r12
  4086a5:	mov    r11,rdi
  4086a8:	sub    rax,rsi
  4086ab:	push   rbp
  4086ac:	mov    r10,rdx
  4086af:	cmp    rax,0x7
  4086b3:	push   rbx
  4086b4:	mov    rbp,rcx
  4086b7:	mov    rbx,rsi
  4086ba:	mov    r12,r8
  4086bd:	jbe    4086f0 <_start@@Base+0x27b0>
  4086bf:	movbe  rax,QWORD PTR [rsi]
  4086c4:	movabs rdx,0xff00000000000000
  4086ce:	and    rax,rdx
  4086d1:	movabs rdx,0x7800000000000000
  4086db:	cmp    rax,rdx
  4086de:	je     408700 <_start@@Base+0x27c0>
  4086e0:	mov    rax,rbx
  4086e3:	pop    rbx
  4086e4:	pop    rbp
  4086e5:	pop    r12
  4086e7:	ret    
  4086e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4086f0:	mov    rsi,rdx
  4086f3:	mov    rdi,rbx
  4086f6:	call   406050 <_start@@Base+0x110>
  4086fb:	jmp    4086c4 <_start@@Base+0x2784>
  4086fd:	nop    DWORD PTR [rax]
  408700:	mov    r8,r9
  408703:	mov    ecx,0x1
  408708:	mov    rdx,r10
  40870b:	mov    rsi,rbx
  40870e:	mov    rdi,r11
  408711:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  408716:	cmp    rbx,rax
  408719:	je     4086e0 <_start@@Base+0x27a0>
  40871b:	mov    rbx,rax
  40871e:	mov    QWORD PTR [r12],0x0
  408726:	mov    DWORD PTR [rbp+0x0],0x0
  40872d:	mov    rax,rbx
  408730:	pop    rbx
  408731:	pop    rbp
  408732:	pop    r12
  408734:	ret    
  408735:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408740:	xor    eax,eax
  408742:	ret    
  408743:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40874e:	xchg   ax,ax
  408750:	repz ret 
  408752:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40875d:	nop    DWORD PTR [rax]
  408760:	push   r13
  408762:	push   r12
  408764:	push   rbp
  408765:	push   rbx
  408766:	sub    rsp,0x28
  40876a:	mov    DWORD PTR [rcx],0x0
  408770:	mov    rax,QWORD PTR fs:0x28
  408779:	mov    QWORD PTR [rsp+0x18],rax
  40877e:	xor    eax,eax
  408780:	cmp    rsi,rdx
  408783:	mov    QWORD PTR [rsp+0x10],0x0
  40878c:	mov    DWORD PTR [rsp+0xc],0x0
  408794:	mov    rax,rsi
  408797:	je     4087d4 <_start@@Base+0x2894>
  408799:	mov    r12,rcx
  40879c:	lea    r8,[rsp+0x10]
  4087a1:	lea    rcx,[rsp+0xc]
  4087a6:	mov    rbp,rsi
  4087a9:	mov    r13,rdi
  4087ac:	mov    rbx,rdx
  4087af:	call   41df90 <flatcc_json_parser_integer@@Base>
  4087b4:	cmp    rbp,rax
  4087b7:	je     4087d4 <_start@@Base+0x2894>
  4087b9:	mov    edx,DWORD PTR [rsp+0xc]
  4087bd:	test   edx,edx
  4087bf:	jne    4087f0 <_start@@Base+0x28b0>
  4087c1:	mov    rdx,QWORD PTR [rsp+0x10]
  4087c6:	mov    ecx,0xffffffff
  4087cb:	cmp    rdx,rcx
  4087ce:	ja     408808 <_start@@Base+0x28c8>
  4087d0:	mov    DWORD PTR [r12],edx
  4087d4:	mov    rsi,QWORD PTR [rsp+0x18]
  4087d9:	xor    rsi,QWORD PTR fs:0x28
  4087e2:	jne    40881d <_start@@Base+0x28dd>
  4087e4:	add    rsp,0x28
  4087e8:	pop    rbx
  4087e9:	pop    rbp
  4087ea:	pop    r12
  4087ec:	pop    r13
  4087ee:	ret    
  4087ef:	nop
  4087f0:	mov    ecx,0x8
  4087f5:	mov    rdx,rbx
  4087f8:	mov    rsi,rax
  4087fb:	mov    rdi,r13
  4087fe:	call   41c420 <flatcc_json_parser_set_error@@Base>
  408803:	jmp    4087d4 <_start@@Base+0x2894>
  408805:	nop    DWORD PTR [rax]
  408808:	mov    ecx,0x7
  40880d:	mov    rdx,rbx
  408810:	mov    rsi,rax
  408813:	mov    rdi,r13
  408816:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40881b:	jmp    4087d4 <_start@@Base+0x2894>
  40881d:	call   405070 <__stack_chk_fail@plt>
  408822:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40882d:	nop    DWORD PTR [rax]
  408830:	push   r13
  408832:	push   r12
  408834:	push   rbp
  408835:	push   rbx
  408836:	sub    rsp,0x28
  40883a:	mov    BYTE PTR [rcx],0x0
  40883d:	mov    rax,QWORD PTR fs:0x28
  408846:	mov    QWORD PTR [rsp+0x18],rax
  40884b:	xor    eax,eax
  40884d:	cmp    rsi,rdx
  408850:	mov    QWORD PTR [rsp+0x10],0x0
  408859:	mov    DWORD PTR [rsp+0xc],0x0
  408861:	mov    rax,rsi
  408864:	je     4088a0 <_start@@Base+0x2960>
  408866:	mov    r12,rcx
  408869:	lea    r8,[rsp+0x10]
  40886e:	lea    rcx,[rsp+0xc]
  408873:	mov    rbp,rsi
  408876:	mov    r13,rdi
  408879:	mov    rbx,rdx
  40887c:	call   41df90 <flatcc_json_parser_integer@@Base>
  408881:	cmp    rbp,rax
  408884:	je     4088a0 <_start@@Base+0x2960>
  408886:	mov    edx,DWORD PTR [rsp+0xc]
  40888a:	test   edx,edx
  40888c:	jne    4088c0 <_start@@Base+0x2980>
  40888e:	mov    rdx,QWORD PTR [rsp+0x10]
  408893:	cmp    rdx,0xff
  40889a:	ja     4088d8 <_start@@Base+0x2998>
  40889c:	mov    BYTE PTR [r12],dl
  4088a0:	mov    rsi,QWORD PTR [rsp+0x18]
  4088a5:	xor    rsi,QWORD PTR fs:0x28
  4088ae:	jne    4088ed <_start@@Base+0x29ad>
  4088b0:	add    rsp,0x28
  4088b4:	pop    rbx
  4088b5:	pop    rbp
  4088b6:	pop    r12
  4088b8:	pop    r13
  4088ba:	ret    
  4088bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4088c0:	mov    ecx,0x8
  4088c5:	mov    rdx,rbx
  4088c8:	mov    rsi,rax
  4088cb:	mov    rdi,r13
  4088ce:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4088d3:	jmp    4088a0 <_start@@Base+0x2960>
  4088d5:	nop    DWORD PTR [rax]
  4088d8:	mov    ecx,0x7
  4088dd:	mov    rdx,rbx
  4088e0:	mov    rsi,rax
  4088e3:	mov    rdi,r13
  4088e6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4088eb:	jmp    4088a0 <_start@@Base+0x2960>
  4088ed:	call   405070 <__stack_chk_fail@plt>
  4088f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4088fd:	nop    DWORD PTR [rax]
  408900:	push   r13
  408902:	push   r12
  408904:	push   rbp
  408905:	push   rbx
  408906:	sub    rsp,0x28
  40890a:	mov    DWORD PTR [rcx],0x0
  408910:	mov    rax,QWORD PTR fs:0x28
  408919:	mov    QWORD PTR [rsp+0x18],rax
  40891e:	xor    eax,eax
  408920:	cmp    rsi,rdx
  408923:	mov    QWORD PTR [rsp+0x10],0x0
  40892c:	mov    DWORD PTR [rsp+0xc],0x0
  408934:	mov    rax,rsi
  408937:	je     408976 <_start@@Base+0x2a36>
  408939:	mov    r12,rcx
  40893c:	lea    r8,[rsp+0x10]
  408941:	lea    rcx,[rsp+0xc]
  408946:	mov    rbp,rsi
  408949:	mov    r13,rdi
  40894c:	mov    rbx,rdx
  40894f:	call   41df90 <flatcc_json_parser_integer@@Base>
  408954:	cmp    rbp,rax
  408957:	je     408976 <_start@@Base+0x2a36>
  408959:	mov    ecx,DWORD PTR [rsp+0xc]
  40895d:	mov    rdx,QWORD PTR [rsp+0x10]
  408962:	test   ecx,ecx
  408964:	je     408998 <_start@@Base+0x2a58>
  408966:	mov    ecx,0x80000000
  40896b:	cmp    rdx,rcx
  40896e:	ja     4089b0 <_start@@Base+0x2a70>
  408970:	neg    edx
  408972:	mov    DWORD PTR [r12],edx
  408976:	mov    rsi,QWORD PTR [rsp+0x18]
  40897b:	xor    rsi,QWORD PTR fs:0x28
  408984:	jne    4089dd <_start@@Base+0x2a9d>
  408986:	add    rsp,0x28
  40898a:	pop    rbx
  40898b:	pop    rbp
  40898c:	pop    r12
  40898e:	pop    r13
  408990:	ret    
  408991:	nop    DWORD PTR [rax+0x0]
  408998:	cmp    rdx,0x7fffffff
  40899f:	ja     4089c8 <_start@@Base+0x2a88>
  4089a1:	mov    DWORD PTR [r12],edx
  4089a5:	jmp    408976 <_start@@Base+0x2a36>
  4089a7:	nop    WORD PTR [rax+rax*1+0x0]
  4089b0:	mov    ecx,0x8
  4089b5:	mov    rdx,rbx
  4089b8:	mov    rsi,rax
  4089bb:	mov    rdi,r13
  4089be:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4089c3:	jmp    408976 <_start@@Base+0x2a36>
  4089c5:	nop    DWORD PTR [rax]
  4089c8:	mov    ecx,0x7
  4089cd:	mov    rdx,rbx
  4089d0:	mov    rsi,rax
  4089d3:	mov    rdi,r13
  4089d6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4089db:	jmp    408976 <_start@@Base+0x2a36>
  4089dd:	call   405070 <__stack_chk_fail@plt>
  4089e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4089ed:	nop    DWORD PTR [rax]
  4089f0:	push   r13
  4089f2:	push   r12
  4089f4:	xor    r8d,r8d
  4089f7:	push   rbp
  4089f8:	push   rbx
  4089f9:	sub    rsp,0x28
  4089fd:	mov    WORD PTR [rcx],r8w
  408a01:	mov    rax,QWORD PTR fs:0x28
  408a0a:	mov    QWORD PTR [rsp+0x18],rax
  408a0f:	xor    eax,eax
  408a11:	cmp    rsi,rdx
  408a14:	mov    QWORD PTR [rsp+0x10],0x0
  408a1d:	mov    DWORD PTR [rsp+0xc],0x0
  408a25:	mov    rax,rsi
  408a28:	je     408a67 <_start@@Base+0x2b27>
  408a2a:	mov    r12,rcx
  408a2d:	lea    r8,[rsp+0x10]
  408a32:	lea    rcx,[rsp+0xc]
  408a37:	mov    rbp,rsi
  408a3a:	mov    r13,rdi
  408a3d:	mov    rbx,rdx
  408a40:	call   41df90 <flatcc_json_parser_integer@@Base>
  408a45:	cmp    rbp,rax
  408a48:	je     408a67 <_start@@Base+0x2b27>
  408a4a:	mov    ecx,DWORD PTR [rsp+0xc]
  408a4e:	mov    rdx,QWORD PTR [rsp+0x10]
  408a53:	test   ecx,ecx
  408a55:	je     408a88 <_start@@Base+0x2b48>
  408a57:	cmp    rdx,0x8000
  408a5e:	ja     408aa0 <_start@@Base+0x2b60>
  408a60:	neg    edx
  408a62:	mov    WORD PTR [r12],dx
  408a67:	mov    rsi,QWORD PTR [rsp+0x18]
  408a6c:	xor    rsi,QWORD PTR fs:0x28
  408a75:	jne    408acd <_start@@Base+0x2b8d>
  408a77:	add    rsp,0x28
  408a7b:	pop    rbx
  408a7c:	pop    rbp
  408a7d:	pop    r12
  408a7f:	pop    r13
  408a81:	ret    
  408a82:	nop    WORD PTR [rax+rax*1+0x0]
  408a88:	cmp    rdx,0x7fff
  408a8f:	ja     408ab8 <_start@@Base+0x2b78>
  408a91:	mov    WORD PTR [r12],dx
  408a96:	jmp    408a67 <_start@@Base+0x2b27>
  408a98:	nop    DWORD PTR [rax+rax*1+0x0]
  408aa0:	mov    ecx,0x8
  408aa5:	mov    rdx,rbx
  408aa8:	mov    rsi,rax
  408aab:	mov    rdi,r13
  408aae:	call   41c420 <flatcc_json_parser_set_error@@Base>
  408ab3:	jmp    408a67 <_start@@Base+0x2b27>
  408ab5:	nop    DWORD PTR [rax]
  408ab8:	mov    ecx,0x7
  408abd:	mov    rdx,rbx
  408ac0:	mov    rsi,rax
  408ac3:	mov    rdi,r13
  408ac6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  408acb:	jmp    408a67 <_start@@Base+0x2b27>
  408acd:	call   405070 <__stack_chk_fail@plt>
  408ad2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408add:	nop    DWORD PTR [rax]
  408ae0:	push   r13
  408ae2:	push   r12
  408ae4:	push   rbp
  408ae5:	push   rbx
  408ae6:	sub    rsp,0x28
  408aea:	mov    QWORD PTR [rcx],0x0
  408af1:	mov    rax,QWORD PTR fs:0x28
  408afa:	mov    QWORD PTR [rsp+0x18],rax
  408aff:	xor    eax,eax
  408b01:	cmp    rsi,rdx
  408b04:	mov    QWORD PTR [rsp+0x10],0x0
  408b0d:	mov    DWORD PTR [rsp+0xc],0x0
  408b15:	mov    rax,rsi
  408b18:	je     408b5d <_start@@Base+0x2c1d>
  408b1a:	mov    r12,rcx
  408b1d:	lea    r8,[rsp+0x10]
  408b22:	lea    rcx,[rsp+0xc]
  408b27:	mov    rbp,rsi
  408b2a:	mov    r13,rdi
  408b2d:	mov    rbx,rdx
  408b30:	call   41df90 <flatcc_json_parser_integer@@Base>
  408b35:	cmp    rbp,rax
  408b38:	je     408b5d <_start@@Base+0x2c1d>
  408b3a:	mov    ecx,DWORD PTR [rsp+0xc]
  408b3e:	mov    rdx,QWORD PTR [rsp+0x10]
  408b43:	test   ecx,ecx
  408b45:	je     408b80 <_start@@Base+0x2c40>
  408b47:	movabs rcx,0x8000000000000000
  408b51:	cmp    rdx,rcx
  408b54:	ja     408b90 <_start@@Base+0x2c50>
  408b56:	neg    rdx
  408b59:	mov    QWORD PTR [r12],rdx
  408b5d:	mov    rsi,QWORD PTR [rsp+0x18]
  408b62:	xor    rsi,QWORD PTR fs:0x28
  408b6b:	jne    408bbd <_start@@Base+0x2c7d>
  408b6d:	add    rsp,0x28
  408b71:	pop    rbx
  408b72:	pop    rbp
  408b73:	pop    r12
  408b75:	pop    r13
  408b77:	ret    
  408b78:	nop    DWORD PTR [rax+rax*1+0x0]
  408b80:	test   rdx,rdx
  408b83:	js     408ba8 <_start@@Base+0x2c68>
  408b85:	mov    QWORD PTR [r12],rdx
  408b89:	jmp    408b5d <_start@@Base+0x2c1d>
  408b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  408b90:	mov    ecx,0x8
  408b95:	mov    rdx,rbx
  408b98:	mov    rsi,rax
  408b9b:	mov    rdi,r13
  408b9e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  408ba3:	jmp    408b5d <_start@@Base+0x2c1d>
  408ba5:	nop    DWORD PTR [rax]
  408ba8:	mov    ecx,0x7
  408bad:	mov    rdx,rbx
  408bb0:	mov    rsi,rax
  408bb3:	mov    rdi,r13
  408bb6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  408bbb:	jmp    408b5d <_start@@Base+0x2c1d>
  408bbd:	call   405070 <__stack_chk_fail@plt>
  408bc2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  408bcd:	nop    DWORD PTR [rax]
  408bd0:	push   rbx
  408bd1:	xor    esi,esi
  408bd3:	mov    ecx,0x8
  408bd8:	mov    edx,0x8
  408bdd:	mov    rbx,rdi
  408be0:	call   419f50 <flatcc_verify_field@@Base>
  408be5:	test   eax,eax
  408be7:	je     408bf0 <_start@@Base+0x2cb0>
  408be9:	pop    rbx
  408bea:	ret    
  408beb:	nop    DWORD PTR [rax+rax*1+0x0]
  408bf0:	mov    rdi,rbx
  408bf3:	mov    ecx,0x4
  408bf8:	mov    edx,0x4
  408bfd:	pop    rbx
  408bfe:	mov    esi,0x1
  408c03:	jmp    419f50 <flatcc_verify_field@@Base>
  408c08:	nop    DWORD PTR [rax+rax*1+0x0]
  408c10:	push   r13
  408c12:	mov    rax,rdx
  408c15:	push   r12
  408c17:	push   rbp
  408c18:	push   rbx
  408c19:	sub    rax,rsi
  408c1c:	mov    rbx,rdi
  408c1f:	mov    r10,rsi
  408c22:	mov    r11,rdx
  408c25:	sub    rsp,0x8
  408c29:	cmp    rax,0x7
  408c2d:	mov    rbp,rcx
  408c30:	jbe    408c58 <_start@@Base+0x2d18>
  408c32:	movbe  rax,QWORD PTR [rsi]
  408c37:	movabs rdx,0x4368617261637465
  408c41:	cmp    rax,rdx
  408c44:	je     408c72 <_start@@Base+0x2d32>
  408c46:	add    rsp,0x8
  408c4a:	mov    rax,r10
  408c4d:	pop    rbx
  408c4e:	pop    rbp
  408c4f:	pop    r12
  408c51:	pop    r13
  408c53:	ret    
  408c54:	nop    DWORD PTR [rax+0x0]
  408c58:	mov    rsi,rdx
  408c5b:	mov    rdi,r10
  408c5e:	call   406050 <_start@@Base+0x110>
  408c63:	movabs rdx,0x4368617261637465
  408c6d:	cmp    rax,rdx
  408c70:	jne    408c46 <_start@@Base+0x2d06>
  408c72:	lea    r13,[r10+0x8]
  408c76:	mov    r12,r11
  408c79:	sub    r12,r13
  408c7c:	cmp    r12,0x7
  408c80:	ja     408ce0 <_start@@Base+0x2da0>
  408c82:	mov    rsi,r11
  408c85:	mov    rdi,r13
  408c88:	call   406050 <_start@@Base+0x110>
  408c8d:	movabs rdx,0xff00000000000000
  408c97:	and    rax,rdx
  408c9a:	movabs rdx,0x7200000000000000
  408ca4:	cmp    rax,rdx
  408ca7:	jne    408c46 <_start@@Base+0x2d06>
  408ca9:	cmp    r12,0x1
  408cad:	jle    408c46 <_start@@Base+0x2d06>
  408caf:	cmp    BYTE PTR [r10+0x9],0x2e
  408cb4:	jne    408c46 <_start@@Base+0x2d06>
  408cb6:	lea    rsi,[r10+0xa]
  408cba:	cmp    r13,rsi
  408cbd:	je     408c46 <_start@@Base+0x2d06>
  408cbf:	add    rsp,0x8
  408cc3:	mov    rcx,rbp
  408cc6:	mov    rdi,rbx
  408cc9:	pop    rbx
  408cca:	pop    rbp
  408ccb:	pop    r12
  408ccd:	pop    r13
  408ccf:	mov    rdx,r11
  408cd2:	jmp    407070 <_start@@Base+0x1130>
  408cd7:	nop    WORD PTR [rax+rax*1+0x0]
  408ce0:	movbe  rax,QWORD PTR [r10+0x8]
  408ce6:	jmp    408c8d <_start@@Base+0x2d4d>
  408ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  408cf0:	push   r13
  408cf2:	push   r12
  408cf4:	mov    r10,rsi
  408cf7:	push   rbp
  408cf8:	push   rbx
  408cf9:	mov    rbx,rdx
  408cfc:	sub    rbx,rsi
  408cff:	mov    rbp,rdi
  408d02:	mov    r11,rdx
  408d05:	sub    rsp,0x8
  408d09:	cmp    rbx,0x7
  408d0d:	mov    r12,rcx
  408d10:	jbe    408d78 <_start@@Base+0x2e38>
  408d12:	movbe  rax,QWORD PTR [rsi]
  408d17:	movabs rdx,0x6865785f656e756c
  408d21:	cmp    rax,rdx
  408d24:	ja     408d92 <_start@@Base+0x2e52>
  408d26:	movabs rdx,0x436f6c6f71ffffff
  408d30:	cmp    rax,rdx
  408d33:	movabs rdx,0xffffff0000000000
  408d3d:	ja     408e40 <_start@@Base+0x2f00>
  408d43:	and    rax,rdx
  408d46:	movabs rdx,0x416e790000000000
  408d50:	cmp    rax,rdx
  408d53:	jne    408d66 <_start@@Base+0x2e26>
  408d55:	cmp    rbx,0x3
  408d59:	jle    408d66 <_start@@Base+0x2e26>
  408d5b:	cmp    BYTE PTR [r10+0x3],0x2e
  408d60:	je     408f78 <_start@@Base+0x3038>
  408d66:	add    rsp,0x8
  408d6a:	mov    rax,r10
  408d6d:	pop    rbx
  408d6e:	pop    rbp
  408d6f:	pop    r12
  408d71:	pop    r13
  408d73:	ret    
  408d74:	nop    DWORD PTR [rax+0x0]
  408d78:	mov    rsi,rdx
  408d7b:	mov    rdi,r10
  408d7e:	call   406050 <_start@@Base+0x110>
  408d83:	movabs rdx,0x6865785f656e756c
  408d8d:	cmp    rax,rdx
  408d90:	jbe    408d26 <_start@@Base+0x2de6>
  408d92:	movabs rdx,0x696e745f656e756c
  408d9c:	cmp    rax,rdx
  408d9f:	ja     408de0 <_start@@Base+0x2ea0>
  408da1:	movabs rdx,0x6865785f656e756d
  408dab:	cmp    rax,rdx
  408dae:	jne    408d66 <_start@@Base+0x2e26>
  408db0:	cmp    rbx,0x8
  408db4:	jle    408d66 <_start@@Base+0x2e26>
  408db6:	cmp    BYTE PTR [r10+0x8],0x2e
  408dbb:	jne    408d66 <_start@@Base+0x2e26>
  408dbd:	add    rsp,0x8
  408dc1:	mov    rcx,r12
  408dc4:	mov    rdi,rbp
  408dc7:	pop    rbx
  408dc8:	pop    rbp
  408dc9:	pop    r12
  408dcb:	pop    r13
  408dcd:	lea    rsi,[r10+0x9]
  408dd1:	mov    rdx,r11
  408dd4:	jmp    407790 <_start@@Base+0x1850>
  408dd9:	nop    DWORD PTR [rax+0x0]
  408de0:	movabs rdx,0x6e65675f656e756c
  408dea:	cmp    rax,rdx
  408ded:	ja     408ea0 <_start@@Base+0x2f60>
  408df3:	movabs rdx,0x696e745f656e756d
  408dfd:	cmp    rax,rdx
  408e00:	jne    408d66 <_start@@Base+0x2e26>
  408e06:	cmp    rbx,0x8
  408e0a:	jle    408d66 <_start@@Base+0x2e26>
  408e10:	cmp    BYTE PTR [r10+0x8],0x2e
  408e15:	jne    408d66 <_start@@Base+0x2e26>
  408e1b:	add    rsp,0x8
  408e1f:	mov    rcx,r12
  408e22:	mov    rdi,rbp
  408e25:	pop    rbx
  408e26:	pop    rbp
  408e27:	pop    r12
  408e29:	pop    r13
  408e2b:	lea    rsi,[r10+0x9]
  408e2f:	mov    rdx,r11
  408e32:	jmp    4078f0 <_start@@Base+0x19b0>
  408e37:	nop    WORD PTR [rax+rax*1+0x0]
  408e40:	and    rdx,rax
  408e43:	movabs rcx,0x466f6f0000000000
  408e4d:	cmp    rdx,rcx
  408e50:	je     408f40 <_start@@Base+0x3000>
  408e56:	and    rax,0xffffffffff000000
  408e5c:	movabs rdx,0x436f6c6f72000000
  408e66:	cmp    rax,rdx
  408e69:	jne    408d66 <_start@@Base+0x2e26>
  408e6f:	cmp    rbx,0x5
  408e73:	jle    408d66 <_start@@Base+0x2e26>
  408e79:	cmp    BYTE PTR [r10+0x5],0x2e
  408e7e:	jne    408d66 <_start@@Base+0x2e26>
  408e84:	add    rsp,0x8
  408e88:	mov    rcx,r12
  408e8b:	mov    rdi,rbp
  408e8e:	pop    rbx
  408e8f:	pop    rbp
  408e90:	pop    r12
  408e92:	pop    r13
  408e94:	lea    rsi,[r10+0x6]
  408e98:	mov    rdx,r11
  408e9b:	jmp    407bf0 <_start@@Base+0x1cb0>
  408ea0:	movabs rdx,0x6e65675f656e756d
  408eaa:	cmp    rax,rdx
  408ead:	je     408f98 <_start@@Base+0x3058>
  408eb3:	movabs rdx,0x6e6f74656d707479
  408ebd:	cmp    rax,rdx
  408ec0:	jne    408d66 <_start@@Base+0x2e26>
  408ec6:	lea    r13,[r10+0x8]
  408eca:	mov    rbx,r11
  408ecd:	sub    rbx,r13
  408ed0:	cmp    rbx,0x7
  408ed4:	jbe    408fd0 <_start@@Base+0x3090>
  408eda:	movbe  rax,QWORD PTR [r10+0x8]
  408ee0:	movabs rdx,0xffffffff00000000
  408eea:	and    rax,rdx
  408eed:	movabs rdx,0x656e756d00000000
  408ef7:	cmp    rax,rdx
  408efa:	jne    408d66 <_start@@Base+0x2e26>
  408f00:	cmp    rbx,0x4
  408f04:	jle    408d66 <_start@@Base+0x2e26>
  408f0a:	cmp    BYTE PTR [r10+0xc],0x2e
  408f0f:	jne    408d66 <_start@@Base+0x2e26>
  408f15:	lea    rsi,[r10+0xd]
  408f19:	cmp    r13,rsi
  408f1c:	je     408d66 <_start@@Base+0x2e26>
  408f22:	add    rsp,0x8
  408f26:	mov    rcx,r12
  408f29:	mov    rdi,rbp
  408f2c:	pop    rbx
  408f2d:	pop    rbp
  408f2e:	pop    r12
  408f30:	pop    r13
  408f32:	mov    rdx,r11
  408f35:	jmp    4086a0 <_start@@Base+0x2760>
  408f3a:	nop    WORD PTR [rax+rax*1+0x0]
  408f40:	cmp    rbx,0x3
  408f44:	jle    408d66 <_start@@Base+0x2e26>
  408f4a:	cmp    BYTE PTR [r10+0x3],0x2e
  408f4f:	jne    408d66 <_start@@Base+0x2e26>
  408f55:	add    rsp,0x8
  408f59:	mov    rcx,r12
  408f5c:	mov    rdi,rbp
  408f5f:	pop    rbx
  408f60:	pop    rbp
  408f61:	pop    r12
  408f63:	pop    r13
  408f65:	lea    rsi,[r10+0x4]
  408f69:	mov    rdx,r11
  408f6c:	jmp    407600 <_start@@Base+0x16c0>
  408f71:	nop    DWORD PTR [rax+0x0]
  408f78:	add    rsp,0x8
  408f7c:	mov    rcx,r12
  408f7f:	mov    rdi,rbp
  408f82:	pop    rbx
  408f83:	pop    rbp
  408f84:	pop    r12
  408f86:	pop    r13
  408f88:	lea    rsi,[r10+0x4]
  408f8c:	mov    rdx,r11
  408f8f:	jmp    407350 <_start@@Base+0x1410>
  408f94:	nop    DWORD PTR [rax+0x0]
  408f98:	cmp    rbx,0x8
  408f9c:	jle    408d66 <_start@@Base+0x2e26>
  408fa2:	cmp    BYTE PTR [r10+0x8],0x2e
  408fa7:	jne    408d66 <_start@@Base+0x2e26>
  408fad:	add    rsp,0x8
  408fb1:	mov    rcx,r12
  408fb4:	mov    rdi,rbp
  408fb7:	pop    rbx
  408fb8:	pop    rbp
  408fb9:	pop    r12
  408fbb:	pop    r13
  408fbd:	lea    rsi,[r10+0x9]
  408fc1:	mov    rdx,r11
  408fc4:	jmp    407aa0 <_start@@Base+0x1b60>
  408fc9:	nop    DWORD PTR [rax+0x0]
  408fd0:	mov    rsi,r11
  408fd3:	mov    rdi,r13
  408fd6:	call   406050 <_start@@Base+0x110>
  408fdb:	jmp    408ee0 <_start@@Base+0x2fa0>
  408fe0:	cmp    rsi,rdx
  408fe3:	je     408fea <_start@@Base+0x30aa>
  408fe5:	cmp    BYTE PTR [rsi],0x7b
  408fe8:	je     409000 <_start@@Base+0x30c0>
  408fea:	mov    DWORD PTR [rcx],0x0
  408ff0:	mov    ecx,0x15
  408ff5:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  408ffa:	nop    WORD PTR [rax+rax*1+0x0]
  409000:	lea    rax,[rsi+0x1]
  409004:	push   r12
  409006:	push   rbp
  409007:	push   rbx
  409008:	mov    rbx,rdx
  40900b:	mov    rbp,rcx
  40900e:	sub    rdx,rax
  409011:	mov    r12,rdi
  409014:	cmp    rdx,0x1
  409018:	jle    409022 <_start@@Base+0x30e2>
  40901a:	cmp    BYTE PTR [rsi+0x1],0x20
  40901e:	jg     409030 <_start@@Base+0x30f0>
  409020:	je     409050 <_start@@Base+0x3110>
  409022:	mov    rdx,rbx
  409025:	mov    rsi,rax
  409028:	mov    rdi,r12
  40902b:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  409030:	cmp    rbx,rax
  409033:	je     40903a <_start@@Base+0x30fa>
  409035:	cmp    BYTE PTR [rax],0x7d
  409038:	je     409060 <_start@@Base+0x3120>
  40903a:	mov    DWORD PTR [rbp+0x0],0x1
  409041:	pop    rbx
  409042:	pop    rbp
  409043:	pop    r12
  409045:	ret    
  409046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409050:	cmp    BYTE PTR [rsi+0x2],0x20
  409054:	jle    409022 <_start@@Base+0x30e2>
  409056:	lea    rax,[rsi+0x2]
  40905a:	jmp    409030 <_start@@Base+0x30f0>
  40905c:	nop    DWORD PTR [rax+0x0]
  409060:	mov    DWORD PTR [rbp+0x0],0x0
  409067:	mov    rdx,rbx
  40906a:	mov    rdi,r12
  40906d:	pop    rbx
  40906e:	pop    rbp
  40906f:	pop    r12
  409071:	lea    rsi,[rax+0x1]
  409075:	jmp    407030 <_start@@Base+0x10f0>
  40907a:	nop    WORD PTR [rax+rax*1+0x0]
  409080:	mov    eax,DWORD PTR [rdi+0x14]
  409083:	movsxd rcx,ecx
  409086:	test   eax,eax
  409088:	je     4090a0 <_start@@Base+0x3160>
  40908a:	lea    r8,[rsi+rcx*1]
  40908e:	movzx  eax,BYTE PTR [r8]
  409092:	cmp    al,0x20
  409094:	jle    4090b0 <_start@@Base+0x3170>
  409096:	cmp    al,0x3a
  409098:	je     4090b0 <_start@@Base+0x3170>
  40909a:	mov    rax,rsi
  40909d:	ret    
  40909e:	xchg   ax,ax
  4090a0:	cmp    BYTE PTR [rsi+rcx*1],0x22
  4090a4:	jne    40909a <_start@@Base+0x315a>
  4090a6:	lea    r8,[rsi+rcx*1+0x1]
  4090ab:	jmp    4090b7 <_start@@Base+0x3177>
  4090ad:	nop    DWORD PTR [rax]
  4090b0:	mov    DWORD PTR [rdi+0x14],0x0
  4090b7:	push   rbp
  4090b8:	mov    rax,rdx
  4090bb:	push   rbx
  4090bc:	sub    rax,r8
  4090bf:	mov    rbp,rdx
  4090c2:	mov    rbx,rdi
  4090c5:	sub    rsp,0x8
  4090c9:	cmp    rax,0x1
  4090cd:	jle    4090d7 <_start@@Base+0x3197>
  4090cf:	cmp    BYTE PTR [r8],0x20
  4090d3:	jg     4090e8 <_start@@Base+0x31a8>
  4090d5:	je     409110 <_start@@Base+0x31d0>
  4090d7:	mov    rsi,r8
  4090da:	mov    rdx,rbp
  4090dd:	mov    rdi,rbx
  4090e0:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  4090e5:	mov    r8,rax
  4090e8:	cmp    rbp,r8
  4090eb:	je     4090f3 <_start@@Base+0x31b3>
  4090ed:	cmp    BYTE PTR [r8],0x3a
  4090f1:	je     409120 <_start@@Base+0x31e0>
  4090f3:	add    rsp,0x8
  4090f7:	mov    rdx,rbp
  4090fa:	mov    rdi,rbx
  4090fd:	pop    rbx
  4090fe:	pop    rbp
  4090ff:	mov    ecx,0x4
  409104:	mov    rsi,r8
  409107:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  40910c:	nop    DWORD PTR [rax+0x0]
  409110:	cmp    BYTE PTR [r8+0x1],0x20
  409115:	jle    4090d7 <_start@@Base+0x3197>
  409117:	add    r8,0x1
  40911b:	jmp    4090e8 <_start@@Base+0x31a8>
  40911d:	nop    DWORD PTR [rax]
  409120:	add    rsp,0x8
  409124:	mov    rdx,rbp
  409127:	mov    rdi,rbx
  40912a:	pop    rbx
  40912b:	pop    rbp
  40912c:	lea    rsi,[r8+0x1]
  409130:	jmp    407030 <_start@@Base+0x10f0>
  409135:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409140:	push   r15
  409142:	push   r14
  409144:	push   r13
  409146:	push   r12
  409148:	mov    r12,rdi
  40914b:	push   rbp
  40914c:	push   rbx
  40914d:	mov    rbp,rdx
  409150:	mov    rbx,rsi
  409153:	sub    rsp,0x48
  409157:	mov    DWORD PTR [r8],0x0
  40915e:	mov    rdi,QWORD PTR fs:0x28
  409167:	mov    QWORD PTR [rsp+0x38],rdi
  40916c:	xor    edi,edi
  40916e:	cmp    rsi,rdx
  409171:	mov    QWORD PTR [rsp+0x10],rcx
  409176:	mov    QWORD PTR [rsp+0x18],r8
  40917b:	je     40931f <_start@@Base+0x33df>
  409181:	movzx  eax,BYTE PTR [rsi]
  409184:	cmp    al,0x22
  409186:	je     4092a0 <_start@@Base+0x3360>
  40918c:	cmp    al,0x2e
  40918e:	je     409330 <_start@@Base+0x33f0>
  409194:	mov    DWORD PTR [r12+0x14],0x1
  40919d:	lea    rax,[rsp+0x28]
  4091a2:	lea    r15,[rsp+0x2c]
  4091a7:	lea    r14,[rsp+0x30]
  4091ac:	mov    QWORD PTR [rsp+0x8],rax
  4091b1:	mov    r13,QWORD PTR [rsp+0x10]
  4091b6:	mov    rax,QWORD PTR [r13+0x0]
  4091ba:	jmp    4091d6 <_start@@Base+0x3296>
  4091bc:	nop    DWORD PTR [rax+0x0]
  4091c0:	cmp    rbx,rax
  4091c3:	jne    409220 <_start@@Base+0x32e0>
  4091c5:	add    r13,0x8
  4091c9:	mov    rax,QWORD PTR [r13+0x0]
  4091cd:	test   rax,rax
  4091d0:	je     409270 <_start@@Base+0x3330>
  4091d6:	mov    r9,r15
  4091d9:	mov    r8,r14
  4091dc:	mov    rcx,QWORD PTR [rsp+0x8]
  4091e1:	mov    rdx,rbp
  4091e4:	mov    rsi,rbx
  4091e7:	mov    rdi,r12
  4091ea:	call   rax
  4091ec:	cmp    rbp,rax
  4091ef:	jne    4091c0 <_start@@Base+0x3280>
  4091f1:	mov    rcx,QWORD PTR [rsp+0x38]
  4091f6:	xor    rcx,QWORD PTR fs:0x28
  4091ff:	mov    rax,rbp
  409202:	jne    409370 <_start@@Base+0x3430>
  409208:	add    rsp,0x48
  40920c:	pop    rbx
  40920d:	pop    rbp
  40920e:	pop    r12
  409210:	pop    r13
  409212:	pop    r14
  409214:	pop    r15
  409216:	ret    
  409217:	nop    WORD PTR [rax+rax*1+0x0]
  409220:	mov    ecx,DWORD PTR [rsp+0x28]
  409224:	mov    rdx,QWORD PTR [rsp+0x30]
  409229:	test   ecx,ecx
  40922b:	je     409290 <_start@@Base+0x3350>
  40922d:	test   rdx,rdx
  409230:	js     4092e3 <_start@@Base+0x33a3>
  409236:	vxorps xmm0,xmm0,xmm0
  40923a:	vcvtsi2ss xmm0,xmm0,rdx
  40923f:	vxorps xmm0,xmm0,XMMWORD PTR [rip+0x25d99]        # 42efe0 <_IO_stdin_used@@Base+0x3fe0>
  409247:	mov    rsi,QWORD PTR [rsp+0x18]
  40924c:	mov    edi,DWORD PTR [rsp+0x2c]
  409250:	vaddss xmm0,xmm0,DWORD PTR [rsi]
  409254:	test   edi,edi
  409256:	vmovss DWORD PTR [rsi],xmm0
  40925a:	je     409368 <_start@@Base+0x3428>
  409260:	mov    rbx,rax
  409263:	jmp    4091b1 <_start@@Base+0x3271>
  409268:	nop    DWORD PTR [rax+rax*1+0x0]
  409270:	mov    rdx,rbp
  409273:	mov    ecx,0x17
  409278:	mov    rsi,rbx
  40927b:	mov    rdi,r12
  40927e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409283:	mov    rbp,rax
  409286:	jmp    4091f1 <_start@@Base+0x32b1>
  40928b:	nop    DWORD PTR [rax+rax*1+0x0]
  409290:	test   rdx,rdx
  409293:	js     409301 <_start@@Base+0x33c1>
  409295:	vxorps xmm0,xmm0,xmm0
  409299:	vcvtsi2ss xmm0,xmm0,rdx
  40929e:	jmp    409247 <_start@@Base+0x3307>
  4092a0:	add    rbx,0x1
  4092a4:	mov    rax,rdx
  4092a7:	mov    DWORD PTR [r12+0x14],0x0
  4092b0:	sub    rax,rbx
  4092b3:	cmp    rax,0x1
  4092b7:	jle    4092c4 <_start@@Base+0x3384>
  4092b9:	cmp    BYTE PTR [rbx],0x20
  4092bc:	jg     4092d5 <_start@@Base+0x3395>
  4092be:	je     409355 <_start@@Base+0x3415>
  4092c4:	mov    rsi,rbx
  4092c7:	mov    rdx,rbp
  4092ca:	mov    rdi,r12
  4092cd:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  4092d2:	mov    rbx,rax
  4092d5:	cmp    rbp,rbx
  4092d8:	jne    40919d <_start@@Base+0x325d>
  4092de:	jmp    4091f1 <_start@@Base+0x32b1>
  4092e3:	mov    rcx,rdx
  4092e6:	vxorps xmm0,xmm0,xmm0
  4092ea:	shr    rcx,1
  4092ed:	and    edx,0x1
  4092f0:	or     rcx,rdx
  4092f3:	vcvtsi2ss xmm0,xmm0,rcx
  4092f8:	vaddss xmm0,xmm0,xmm0
  4092fc:	jmp    40923f <_start@@Base+0x32ff>
  409301:	mov    rcx,rdx
  409304:	vxorps xmm0,xmm0,xmm0
  409308:	shr    rcx,1
  40930b:	and    edx,0x1
  40930e:	or     rcx,rdx
  409311:	vcvtsi2ss xmm0,xmm0,rcx
  409316:	vaddss xmm0,xmm0,xmm0
  40931a:	jmp    409247 <_start@@Base+0x3307>
  40931f:	mov    esi,DWORD PTR [r12+0x14]
  409324:	test   esi,esi
  409326:	je     4092c4 <_start@@Base+0x3384>
  409328:	jmp    4091f1 <_start@@Base+0x32b1>
  40932d:	nop    DWORD PTR [rax]
  409330:	mov    ecx,0x5
  409335:	mov    rdi,r12
  409338:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40933d:	mov    r8d,DWORD PTR [r12+0x14]
  409342:	mov    rbx,rax
  409345:	test   r8d,r8d
  409348:	jne    4092d5 <_start@@Base+0x3395>
  40934a:	mov    rax,rbp
  40934d:	sub    rax,rbx
  409350:	jmp    4092b3 <_start@@Base+0x3373>
  409355:	cmp    BYTE PTR [rbx+0x1],0x20
  409359:	jle    4092c4 <_start@@Base+0x3384>
  40935f:	add    rbx,0x1
  409363:	jmp    4092d5 <_start@@Base+0x3395>
  409368:	mov    rbp,rax
  40936b:	jmp    4091f1 <_start@@Base+0x32b1>
  409370:	call   405070 <__stack_chk_fail@plt>
  409375:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409380:	push   r15
  409382:	push   r14
  409384:	push   r13
  409386:	push   r12
  409388:	mov    r12,rdi
  40938b:	push   rbp
  40938c:	push   rbx
  40938d:	mov    rbp,rdx
  409390:	mov    rbx,rsi
  409393:	sub    rsp,0x48
  409397:	mov    QWORD PTR [r8],0x0
  40939e:	mov    rdi,QWORD PTR fs:0x28
  4093a7:	mov    QWORD PTR [rsp+0x38],rdi
  4093ac:	xor    edi,edi
  4093ae:	cmp    rsi,rdx
  4093b1:	mov    QWORD PTR [rsp+0x10],rcx
  4093b6:	mov    QWORD PTR [rsp+0x18],r8
  4093bb:	je     40955f <_start@@Base+0x361f>
  4093c1:	movzx  eax,BYTE PTR [rsi]
  4093c4:	cmp    al,0x22
  4093c6:	je     4094e0 <_start@@Base+0x35a0>
  4093cc:	cmp    al,0x2e
  4093ce:	je     409570 <_start@@Base+0x3630>
  4093d4:	mov    DWORD PTR [r12+0x14],0x1
  4093dd:	lea    rax,[rsp+0x28]
  4093e2:	lea    r15,[rsp+0x2c]
  4093e7:	lea    r14,[rsp+0x30]
  4093ec:	mov    QWORD PTR [rsp+0x8],rax
  4093f1:	mov    r13,QWORD PTR [rsp+0x10]
  4093f6:	mov    rax,QWORD PTR [r13+0x0]
  4093fa:	jmp    409416 <_start@@Base+0x34d6>
  4093fc:	nop    DWORD PTR [rax+0x0]
  409400:	cmp    rbx,rax
  409403:	jne    409460 <_start@@Base+0x3520>
  409405:	add    r13,0x8
  409409:	mov    rax,QWORD PTR [r13+0x0]
  40940d:	test   rax,rax
  409410:	je     4094b0 <_start@@Base+0x3570>
  409416:	mov    r9,r15
  409419:	mov    r8,r14
  40941c:	mov    rcx,QWORD PTR [rsp+0x8]
  409421:	mov    rdx,rbp
  409424:	mov    rsi,rbx
  409427:	mov    rdi,r12
  40942a:	call   rax
  40942c:	cmp    rbp,rax
  40942f:	jne    409400 <_start@@Base+0x34c0>
  409431:	mov    rcx,QWORD PTR [rsp+0x38]
  409436:	xor    rcx,QWORD PTR fs:0x28
  40943f:	mov    rax,rbp
  409442:	jne    4095b0 <_start@@Base+0x3670>
  409448:	add    rsp,0x48
  40944c:	pop    rbx
  40944d:	pop    rbp
  40944e:	pop    r12
  409450:	pop    r13
  409452:	pop    r14
  409454:	pop    r15
  409456:	ret    
  409457:	nop    WORD PTR [rax+rax*1+0x0]
  409460:	mov    ecx,DWORD PTR [rsp+0x28]
  409464:	mov    rdx,QWORD PTR [rsp+0x30]
  409469:	test   ecx,ecx
  40946b:	je     4094d0 <_start@@Base+0x3590>
  40946d:	test   rdx,rdx
  409470:	js     409523 <_start@@Base+0x35e3>
  409476:	vxorpd xmm0,xmm0,xmm0
  40947a:	vcvtsi2sd xmm0,xmm0,rdx
  40947f:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x25b69]        # 42eff0 <_IO_stdin_used@@Base+0x3ff0>
  409487:	mov    rsi,QWORD PTR [rsp+0x18]
  40948c:	mov    edi,DWORD PTR [rsp+0x2c]
  409490:	vaddsd xmm0,xmm0,QWORD PTR [rsi]
  409494:	test   edi,edi
  409496:	vmovsd QWORD PTR [rsi],xmm0
  40949a:	je     4095a8 <_start@@Base+0x3668>
  4094a0:	mov    rbx,rax
  4094a3:	jmp    4093f1 <_start@@Base+0x34b1>
  4094a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4094b0:	mov    rdx,rbp
  4094b3:	mov    ecx,0x17
  4094b8:	mov    rsi,rbx
  4094bb:	mov    rdi,r12
  4094be:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4094c3:	mov    rbp,rax
  4094c6:	jmp    409431 <_start@@Base+0x34f1>
  4094cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4094d0:	test   rdx,rdx
  4094d3:	js     409541 <_start@@Base+0x3601>
  4094d5:	vxorpd xmm0,xmm0,xmm0
  4094d9:	vcvtsi2sd xmm0,xmm0,rdx
  4094de:	jmp    409487 <_start@@Base+0x3547>
  4094e0:	add    rbx,0x1
  4094e4:	mov    rax,rdx
  4094e7:	mov    DWORD PTR [r12+0x14],0x0
  4094f0:	sub    rax,rbx
  4094f3:	cmp    rax,0x1
  4094f7:	jle    409504 <_start@@Base+0x35c4>
  4094f9:	cmp    BYTE PTR [rbx],0x20
  4094fc:	jg     409515 <_start@@Base+0x35d5>
  4094fe:	je     409595 <_start@@Base+0x3655>
  409504:	mov    rsi,rbx
  409507:	mov    rdx,rbp
  40950a:	mov    rdi,r12
  40950d:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  409512:	mov    rbx,rax
  409515:	cmp    rbp,rbx
  409518:	jne    4093dd <_start@@Base+0x349d>
  40951e:	jmp    409431 <_start@@Base+0x34f1>
  409523:	mov    rcx,rdx
  409526:	vxorpd xmm0,xmm0,xmm0
  40952a:	shr    rcx,1
  40952d:	and    edx,0x1
  409530:	or     rcx,rdx
  409533:	vcvtsi2sd xmm0,xmm0,rcx
  409538:	vaddsd xmm0,xmm0,xmm0
  40953c:	jmp    40947f <_start@@Base+0x353f>
  409541:	mov    rcx,rdx
  409544:	vxorpd xmm0,xmm0,xmm0
  409548:	shr    rcx,1
  40954b:	and    edx,0x1
  40954e:	or     rcx,rdx
  409551:	vcvtsi2sd xmm0,xmm0,rcx
  409556:	vaddsd xmm0,xmm0,xmm0
  40955a:	jmp    409487 <_start@@Base+0x3547>
  40955f:	mov    esi,DWORD PTR [r12+0x14]
  409564:	test   esi,esi
  409566:	je     409504 <_start@@Base+0x35c4>
  409568:	jmp    409431 <_start@@Base+0x34f1>
  40956d:	nop    DWORD PTR [rax]
  409570:	mov    ecx,0x5
  409575:	mov    rdi,r12
  409578:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40957d:	mov    r8d,DWORD PTR [r12+0x14]
  409582:	mov    rbx,rax
  409585:	test   r8d,r8d
  409588:	jne    409515 <_start@@Base+0x35d5>
  40958a:	mov    rax,rbp
  40958d:	sub    rax,rbx
  409590:	jmp    4094f3 <_start@@Base+0x35b3>
  409595:	cmp    BYTE PTR [rbx+0x1],0x20
  409599:	jle    409504 <_start@@Base+0x35c4>
  40959f:	add    rbx,0x1
  4095a3:	jmp    409515 <_start@@Base+0x35d5>
  4095a8:	mov    rbp,rax
  4095ab:	jmp    409431 <_start@@Base+0x34f1>
  4095b0:	call   405070 <__stack_chk_fail@plt>
  4095b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4095c0:	cmp    rsi,rdx
  4095c3:	je     4095ca <_start@@Base+0x368a>
  4095c5:	cmp    BYTE PTR [rsi],0x5b
  4095c8:	je     4095e0 <_start@@Base+0x36a0>
  4095ca:	mov    DWORD PTR [rcx],0x0
  4095d0:	mov    ecx,0x16
  4095d5:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  4095da:	nop    WORD PTR [rax+rax*1+0x0]
  4095e0:	lea    rax,[rsi+0x1]
  4095e4:	push   r12
  4095e6:	push   rbp
  4095e7:	push   rbx
  4095e8:	mov    rbx,rdx
  4095eb:	mov    rbp,rcx
  4095ee:	sub    rdx,rax
  4095f1:	mov    r12,rdi
  4095f4:	cmp    rdx,0x1
  4095f8:	jle    409602 <_start@@Base+0x36c2>
  4095fa:	cmp    BYTE PTR [rsi+0x1],0x20
  4095fe:	jg     409610 <_start@@Base+0x36d0>
  409600:	je     409630 <_start@@Base+0x36f0>
  409602:	mov    rdx,rbx
  409605:	mov    rsi,rax
  409608:	mov    rdi,r12
  40960b:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  409610:	cmp    rbx,rax
  409613:	je     40961a <_start@@Base+0x36da>
  409615:	cmp    BYTE PTR [rax],0x5d
  409618:	je     409640 <_start@@Base+0x3700>
  40961a:	mov    DWORD PTR [rbp+0x0],0x1
  409621:	pop    rbx
  409622:	pop    rbp
  409623:	pop    r12
  409625:	ret    
  409626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409630:	cmp    BYTE PTR [rsi+0x2],0x20
  409634:	jle    409602 <_start@@Base+0x36c2>
  409636:	lea    rax,[rsi+0x2]
  40963a:	jmp    409610 <_start@@Base+0x36d0>
  40963c:	nop    DWORD PTR [rax+0x0]
  409640:	mov    DWORD PTR [rbp+0x0],0x0
  409647:	mov    rdx,rbx
  40964a:	mov    rdi,r12
  40964d:	pop    rbx
  40964e:	pop    rbp
  40964f:	pop    r12
  409651:	lea    rsi,[rax+0x1]
  409655:	jmp    407030 <_start@@Base+0x10f0>
  40965a:	nop    WORD PTR [rax+rax*1+0x0]
  409660:	push   r15
  409662:	push   r14
  409664:	push   r13
  409666:	push   r12
  409668:	mov    r12,rdi
  40966b:	push   rbp
  40966c:	push   rbx
  40966d:	mov    rbx,rdx
  409670:	mov    rbp,rsi
  409673:	sub    rsp,0x58
  409677:	mov    BYTE PTR [r8],0x0
  40967b:	mov    rdx,QWORD PTR fs:0x28
  409684:	mov    QWORD PTR [rsp+0x48],rdx
  409689:	xor    edx,edx
  40968b:	cmp    rsi,rbx
  40968e:	mov    QWORD PTR [rsp+0x18],rcx
  409693:	mov    QWORD PTR [rsp+0x20],r8
  409698:	je     4097f5 <_start@@Base+0x38b5>
  40969e:	movzx  eax,BYTE PTR [rsi]
  4096a1:	cmp    al,0x22
  4096a3:	je     4097b7 <_start@@Base+0x3877>
  4096a9:	cmp    al,0x2e
  4096ab:	je     409802 <_start@@Base+0x38c2>
  4096b1:	mov    DWORD PTR [rdi+0x14],0x1
  4096b8:	lea    rax,[rsp+0x38]
  4096bd:	lea    r15,[rsp+0x3c]
  4096c2:	lea    r14,[rsp+0x40]
  4096c7:	mov    BYTE PTR [rsp+0x17],0x0
  4096cc:	mov    QWORD PTR [rsp+0x8],rax
  4096d1:	mov    r13,QWORD PTR [rsp+0x18]
  4096d6:	mov    rax,QWORD PTR [r13+0x0]
  4096da:	jmp    4096f2 <_start@@Base+0x37b2>
  4096dc:	nop    DWORD PTR [rax+0x0]
  4096e0:	cmp    rbp,rax
  4096e3:	jne    409738 <_start@@Base+0x37f8>
  4096e5:	add    r13,0x8
  4096e9:	mov    rax,QWORD PTR [r13+0x0]
  4096ed:	test   rax,rax
  4096f0:	je     409770 <_start@@Base+0x3830>
  4096f2:	mov    r9,r15
  4096f5:	mov    r8,r14
  4096f8:	mov    rcx,QWORD PTR [rsp+0x8]
  4096fd:	mov    rdx,rbx
  409700:	mov    rsi,rbp
  409703:	mov    rdi,r12
  409706:	call   rax
  409708:	cmp    rbx,rax
  40970b:	jne    4096e0 <_start@@Base+0x37a0>
  40970d:	mov    rsi,QWORD PTR [rsp+0x48]
  409712:	xor    rsi,QWORD PTR fs:0x28
  40971b:	mov    rax,rbx
  40971e:	jne    409837 <_start@@Base+0x38f7>
  409724:	add    rsp,0x58
  409728:	pop    rbx
  409729:	pop    rbp
  40972a:	pop    r12
  40972c:	pop    r13
  40972e:	pop    r14
  409730:	pop    r15
  409732:	ret    
  409733:	nop    DWORD PTR [rax+rax*1+0x0]
  409738:	mov    r8,rax
  40973b:	mov    eax,DWORD PTR [rsp+0x38]
  40973f:	test   eax,eax
  409741:	jne    409790 <_start@@Base+0x3850>
  409743:	cmp    QWORD PTR [rsp+0x40],0x0
  409749:	setne  BYTE PTR [rsp+0x17]
  40974e:	mov    rax,QWORD PTR [rsp+0x20]
  409753:	movzx  ecx,BYTE PTR [rsp+0x17]
  409758:	add    BYTE PTR [rax],cl
  40975a:	mov    ecx,DWORD PTR [rsp+0x3c]
  40975e:	test   ecx,ecx
  409760:	je     40982f <_start@@Base+0x38ef>
  409766:	mov    rbp,r8
  409769:	jmp    4096d1 <_start@@Base+0x3791>
  40976e:	xchg   ax,ax
  409770:	mov    rdx,rbx
  409773:	mov    ecx,0x17
  409778:	mov    rsi,rbp
  40977b:	mov    rdi,r12
  40977e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409783:	mov    rbx,rax
  409786:	jmp    40970d <_start@@Base+0x37cd>
  409788:	nop    DWORD PTR [rax+rax*1+0x0]
  409790:	mov    rsi,r8
  409793:	mov    ecx,0x8
  409798:	mov    rdx,rbx
  40979b:	mov    rdi,r12
  40979e:	mov    QWORD PTR [rsp+0x28],r8
  4097a3:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4097a8:	cmp    rbx,rax
  4097ab:	mov    r8,QWORD PTR [rsp+0x28]
  4097b0:	jne    40974e <_start@@Base+0x380e>
  4097b2:	jmp    40970d <_start@@Base+0x37cd>
  4097b7:	add    rbp,0x1
  4097bb:	mov    rax,rbx
  4097be:	mov    DWORD PTR [rdi+0x14],0x0
  4097c5:	sub    rax,rbp
  4097c8:	cmp    rax,0x1
  4097cc:	jle    4097d6 <_start@@Base+0x3896>
  4097ce:	cmp    BYTE PTR [rbp+0x0],0x20
  4097d2:	jg     4097e7 <_start@@Base+0x38a7>
  4097d4:	je     409823 <_start@@Base+0x38e3>
  4097d6:	mov    rsi,rbp
  4097d9:	mov    rdx,rbx
  4097dc:	mov    rdi,r12
  4097df:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  4097e4:	mov    rbp,rax
  4097e7:	cmp    rbx,rbp
  4097ea:	jne    4096b8 <_start@@Base+0x3778>
  4097f0:	jmp    40970d <_start@@Base+0x37cd>
  4097f5:	mov    edx,DWORD PTR [rdi+0x14]
  4097f8:	test   edx,edx
  4097fa:	jne    40970d <_start@@Base+0x37cd>
  409800:	jmp    4097d6 <_start@@Base+0x3896>
  409802:	mov    ecx,0x5
  409807:	mov    rdx,rbx
  40980a:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40980f:	mov    esi,DWORD PTR [r12+0x14]
  409814:	mov    rbp,rax
  409817:	test   esi,esi
  409819:	jne    4097e7 <_start@@Base+0x38a7>
  40981b:	mov    rax,rbx
  40981e:	sub    rax,rbp
  409821:	jmp    4097c8 <_start@@Base+0x3888>
  409823:	cmp    BYTE PTR [rbp+0x1],0x20
  409827:	jle    4097d6 <_start@@Base+0x3896>
  409829:	add    rbp,0x1
  40982d:	jmp    4097e7 <_start@@Base+0x38a7>
  40982f:	mov    rbx,r8
  409832:	jmp    40970d <_start@@Base+0x37cd>
  409837:	call   405070 <__stack_chk_fail@plt>
  40983c:	nop    DWORD PTR [rax+0x0]
  409840:	push   r15
  409842:	push   r14
  409844:	push   r13
  409846:	push   r12
  409848:	mov    r12,rdi
  40984b:	push   rbp
  40984c:	push   rbx
  40984d:	mov    rbx,rsi
  409850:	mov    rbp,rdx
  409853:	sub    rsp,0x58
  409857:	mov    DWORD PTR [r8],0x0
  40985e:	mov    rsi,QWORD PTR fs:0x28
  409867:	mov    QWORD PTR [rsp+0x48],rsi
  40986c:	xor    esi,esi
  40986e:	cmp    rbx,rdx
  409871:	mov    QWORD PTR [rsp+0x18],rcx
  409876:	mov    QWORD PTR [rsp+0x20],r8
  40987b:	je     4099fa <_start@@Base+0x3aba>
  409881:	movzx  eax,BYTE PTR [rbx]
  409884:	cmp    al,0x22
  409886:	je     4099bd <_start@@Base+0x3a7d>
  40988c:	cmp    al,0x2e
  40988e:	je     409a10 <_start@@Base+0x3ad0>
  409894:	mov    DWORD PTR [rdi+0x14],0x1
  40989b:	lea    rax,[rsp+0x38]
  4098a0:	lea    r15,[rsp+0x3c]
  4098a5:	lea    r14,[rsp+0x40]
  4098aa:	mov    DWORD PTR [rsp+0x14],0x0
  4098b2:	mov    QWORD PTR [rsp+0x8],rax
  4098b7:	mov    r13,QWORD PTR [rsp+0x18]
  4098bc:	mov    rax,QWORD PTR [r13+0x0]
  4098c0:	jmp    4098de <_start@@Base+0x399e>
  4098c2:	nop    WORD PTR [rax+rax*1+0x0]
  4098c8:	cmp    rbx,rax
  4098cb:	jne    409920 <_start@@Base+0x39e0>
  4098cd:	add    r13,0x8
  4098d1:	mov    rax,QWORD PTR [r13+0x0]
  4098d5:	test   rax,rax
  4098d8:	je     409968 <_start@@Base+0x3a28>
  4098de:	mov    r9,r15
  4098e1:	mov    r8,r14
  4098e4:	mov    rcx,QWORD PTR [rsp+0x8]
  4098e9:	mov    rdx,rbp
  4098ec:	mov    rsi,rbx
  4098ef:	mov    rdi,r12
  4098f2:	call   rax
  4098f4:	cmp    rbp,rax
  4098f7:	jne    4098c8 <_start@@Base+0x3988>
  4098f9:	mov    rdi,QWORD PTR [rsp+0x48]
  4098fe:	xor    rdi,QWORD PTR fs:0x28
  409907:	mov    rax,rbp
  40990a:	jne    409a45 <_start@@Base+0x3b05>
  409910:	add    rsp,0x58
  409914:	pop    rbx
  409915:	pop    rbp
  409916:	pop    r12
  409918:	pop    r13
  40991a:	pop    r14
  40991c:	pop    r15
  40991e:	ret    
  40991f:	nop
  409920:	mov    edx,DWORD PTR [rsp+0x38]
  409924:	mov    r8,rax
  409927:	mov    rax,QWORD PTR [rsp+0x40]
  40992c:	test   edx,edx
  40992e:	je     409988 <_start@@Base+0x3a48>
  409930:	mov    edx,0x80000000
  409935:	mov    ecx,0x8
  40993a:	cmp    rax,rdx
  40993d:	ja     40999b <_start@@Base+0x3a5b>
  40993f:	neg    eax
  409941:	mov    DWORD PTR [rsp+0x14],eax
  409945:	mov    rax,QWORD PTR [rsp+0x20]
  40994a:	mov    esi,DWORD PTR [rsp+0x3c]
  40994e:	mov    ecx,DWORD PTR [rsp+0x14]
  409952:	add    DWORD PTR [rax],ecx
  409954:	test   esi,esi
  409956:	je     409a3d <_start@@Base+0x3afd>
  40995c:	mov    rbx,r8
  40995f:	jmp    4098b7 <_start@@Base+0x3977>
  409964:	nop    DWORD PTR [rax+0x0]
  409968:	mov    rdx,rbp
  40996b:	mov    ecx,0x17
  409970:	mov    rsi,rbx
  409973:	mov    rdi,r12
  409976:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40997b:	mov    rbp,rax
  40997e:	jmp    4098f9 <_start@@Base+0x39b9>
  409983:	nop    DWORD PTR [rax+rax*1+0x0]
  409988:	cmp    rax,0x7fffffff
  40998e:	ja     409996 <_start@@Base+0x3a56>
  409990:	mov    DWORD PTR [rsp+0x14],eax
  409994:	jmp    409945 <_start@@Base+0x3a05>
  409996:	mov    ecx,0x7
  40999b:	mov    rsi,r8
  40999e:	mov    rdx,rbp
  4099a1:	mov    rdi,r12
  4099a4:	mov    QWORD PTR [rsp+0x28],r8
  4099a9:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4099ae:	cmp    rbp,rax
  4099b1:	mov    r8,QWORD PTR [rsp+0x28]
  4099b6:	jne    409945 <_start@@Base+0x3a05>
  4099b8:	jmp    4098f9 <_start@@Base+0x39b9>
  4099bd:	add    rbx,0x1
  4099c1:	mov    rax,rdx
  4099c4:	mov    DWORD PTR [rdi+0x14],0x0
  4099cb:	sub    rax,rbx
  4099ce:	cmp    rax,0x1
  4099d2:	jle    4099db <_start@@Base+0x3a9b>
  4099d4:	cmp    BYTE PTR [rbx],0x20
  4099d7:	jg     4099ec <_start@@Base+0x3aac>
  4099d9:	je     409a31 <_start@@Base+0x3af1>
  4099db:	mov    rsi,rbx
  4099de:	mov    rdx,rbp
  4099e1:	mov    rdi,r12
  4099e4:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  4099e9:	mov    rbx,rax
  4099ec:	cmp    rbp,rbx
  4099ef:	jne    40989b <_start@@Base+0x395b>
  4099f5:	jmp    4098f9 <_start@@Base+0x39b9>
  4099fa:	mov    ecx,DWORD PTR [rdi+0x14]
  4099fd:	test   ecx,ecx
  4099ff:	je     4099db <_start@@Base+0x3a9b>
  409a01:	jmp    4098f9 <_start@@Base+0x39b9>
  409a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a10:	mov    rsi,rbx
  409a13:	mov    ecx,0x5
  409a18:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409a1d:	mov    edi,DWORD PTR [r12+0x14]
  409a22:	mov    rbx,rax
  409a25:	test   edi,edi
  409a27:	jne    4099ec <_start@@Base+0x3aac>
  409a29:	mov    rax,rbp
  409a2c:	sub    rax,rbx
  409a2f:	jmp    4099ce <_start@@Base+0x3a8e>
  409a31:	cmp    BYTE PTR [rbx+0x1],0x20
  409a35:	jle    4099db <_start@@Base+0x3a9b>
  409a37:	add    rbx,0x1
  409a3b:	jmp    4099ec <_start@@Base+0x3aac>
  409a3d:	mov    rbp,r8
  409a40:	jmp    4098f9 <_start@@Base+0x39b9>
  409a45:	call   405070 <__stack_chk_fail@plt>
  409a4a:	nop    WORD PTR [rax+rax*1+0x0]
  409a50:	push   r15
  409a52:	push   r14
  409a54:	push   r13
  409a56:	push   r12
  409a58:	mov    r12,rdi
  409a5b:	push   rbp
  409a5c:	push   rbx
  409a5d:	mov    rbp,rsi
  409a60:	mov    rbx,rdx
  409a63:	sub    rsp,0x58
  409a67:	mov    DWORD PTR [r8],0x0
  409a6e:	mov    rsi,QWORD PTR fs:0x28
  409a77:	mov    QWORD PTR [rsp+0x48],rsi
  409a7c:	xor    esi,esi
  409a7e:	cmp    rbp,rdx
  409a81:	mov    QWORD PTR [rsp+0x10],rcx
  409a86:	mov    QWORD PTR [rsp+0x20],r8
  409a8b:	je     409bfc <_start@@Base+0x3cbc>
  409a91:	movzx  eax,BYTE PTR [rbp+0x0]
  409a95:	cmp    al,0x22
  409a97:	je     409bbe <_start@@Base+0x3c7e>
  409a9d:	cmp    al,0x2e
  409a9f:	je     409c10 <_start@@Base+0x3cd0>
  409aa5:	mov    DWORD PTR [rdi+0x14],0x1
  409aac:	lea    rax,[rsp+0x38]
  409ab1:	lea    r15,[rsp+0x3c]
  409ab6:	lea    r14,[rsp+0x40]
  409abb:	mov    DWORD PTR [rsp+0x1c],0x0
  409ac3:	mov    QWORD PTR [rsp+0x8],rax
  409ac8:	mov    r13,QWORD PTR [rsp+0x10]
  409acd:	mov    rax,QWORD PTR [r13+0x0]
  409ad1:	jmp    409aee <_start@@Base+0x3bae>
  409ad3:	nop    DWORD PTR [rax+rax*1+0x0]
  409ad8:	cmp    rbp,rax
  409adb:	jne    409b30 <_start@@Base+0x3bf0>
  409add:	add    r13,0x8
  409ae1:	mov    rax,QWORD PTR [r13+0x0]
  409ae5:	test   rax,rax
  409ae8:	je     409b70 <_start@@Base+0x3c30>
  409aee:	mov    r9,r15
  409af1:	mov    r8,r14
  409af4:	mov    rcx,QWORD PTR [rsp+0x8]
  409af9:	mov    rdx,rbx
  409afc:	mov    rsi,rbp
  409aff:	mov    rdi,r12
  409b02:	call   rax
  409b04:	cmp    rbx,rax
  409b07:	jne    409ad8 <_start@@Base+0x3b98>
  409b09:	mov    rdi,QWORD PTR [rsp+0x48]
  409b0e:	xor    rdi,QWORD PTR fs:0x28
  409b17:	mov    rax,rbx
  409b1a:	jne    409c45 <_start@@Base+0x3d05>
  409b20:	add    rsp,0x58
  409b24:	pop    rbx
  409b25:	pop    rbp
  409b26:	pop    r12
  409b28:	pop    r13
  409b2a:	pop    r14
  409b2c:	pop    r15
  409b2e:	ret    
  409b2f:	nop
  409b30:	mov    r8,rax
  409b33:	mov    eax,DWORD PTR [rsp+0x38]
  409b37:	test   eax,eax
  409b39:	jne    409b90 <_start@@Base+0x3c50>
  409b3b:	mov    rax,QWORD PTR [rsp+0x40]
  409b40:	mov    edx,0xffffffff
  409b45:	cmp    rax,rdx
  409b48:	ja     409bb7 <_start@@Base+0x3c77>
  409b4a:	mov    DWORD PTR [rsp+0x1c],eax
  409b4e:	mov    rax,QWORD PTR [rsp+0x20]
  409b53:	mov    ecx,DWORD PTR [rsp+0x1c]
  409b57:	add    DWORD PTR [rax],ecx
  409b59:	mov    ecx,DWORD PTR [rsp+0x3c]
  409b5d:	test   ecx,ecx
  409b5f:	je     409c3d <_start@@Base+0x3cfd>
  409b65:	mov    rbp,r8
  409b68:	jmp    409ac8 <_start@@Base+0x3b88>
  409b6d:	nop    DWORD PTR [rax]
  409b70:	mov    rdx,rbx
  409b73:	mov    ecx,0x17
  409b78:	mov    rsi,rbp
  409b7b:	mov    rdi,r12
  409b7e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409b83:	mov    rbx,rax
  409b86:	jmp    409b09 <_start@@Base+0x3bc9>
  409b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409b90:	mov    ecx,0x8
  409b95:	mov    rsi,r8
  409b98:	mov    rdx,rbx
  409b9b:	mov    rdi,r12
  409b9e:	mov    QWORD PTR [rsp+0x28],r8
  409ba3:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409ba8:	cmp    rbx,rax
  409bab:	mov    r8,QWORD PTR [rsp+0x28]
  409bb0:	jne    409b4e <_start@@Base+0x3c0e>
  409bb2:	jmp    409b09 <_start@@Base+0x3bc9>
  409bb7:	mov    ecx,0x7
  409bbc:	jmp    409b95 <_start@@Base+0x3c55>
  409bbe:	add    rbp,0x1
  409bc2:	mov    rax,rdx
  409bc5:	mov    DWORD PTR [rdi+0x14],0x0
  409bcc:	sub    rax,rbp
  409bcf:	cmp    rax,0x1
  409bd3:	jle    409bdd <_start@@Base+0x3c9d>
  409bd5:	cmp    BYTE PTR [rbp+0x0],0x20
  409bd9:	jg     409bee <_start@@Base+0x3cae>
  409bdb:	je     409c31 <_start@@Base+0x3cf1>
  409bdd:	mov    rsi,rbp
  409be0:	mov    rdx,rbx
  409be3:	mov    rdi,r12
  409be6:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  409beb:	mov    rbp,rax
  409bee:	cmp    rbx,rbp
  409bf1:	jne    409aac <_start@@Base+0x3b6c>
  409bf7:	jmp    409b09 <_start@@Base+0x3bc9>
  409bfc:	mov    edx,DWORD PTR [rdi+0x14]
  409bff:	test   edx,edx
  409c01:	je     409bdd <_start@@Base+0x3c9d>
  409c03:	jmp    409b09 <_start@@Base+0x3bc9>
  409c08:	nop    DWORD PTR [rax+rax*1+0x0]
  409c10:	mov    rsi,rbp
  409c13:	mov    ecx,0x5
  409c18:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409c1d:	mov    esi,DWORD PTR [r12+0x14]
  409c22:	mov    rbp,rax
  409c25:	test   esi,esi
  409c27:	jne    409bee <_start@@Base+0x3cae>
  409c29:	mov    rax,rbx
  409c2c:	sub    rax,rbp
  409c2f:	jmp    409bcf <_start@@Base+0x3c8f>
  409c31:	cmp    BYTE PTR [rbp+0x1],0x20
  409c35:	jle    409bdd <_start@@Base+0x3c9d>
  409c37:	add    rbp,0x1
  409c3b:	jmp    409bee <_start@@Base+0x3cae>
  409c3d:	mov    rbx,r8
  409c40:	jmp    409b09 <_start@@Base+0x3bc9>
  409c45:	call   405070 <__stack_chk_fail@plt>
  409c4a:	nop    WORD PTR [rax+rax*1+0x0]
  409c50:	push   r15
  409c52:	push   r14
  409c54:	xor    r9d,r9d
  409c57:	push   r13
  409c59:	push   r12
  409c5b:	mov    r12,rdi
  409c5e:	push   rbp
  409c5f:	push   rbx
  409c60:	mov    rbp,rdx
  409c63:	mov    rbx,rsi
  409c66:	sub    rsp,0x58
  409c6a:	mov    WORD PTR [r8],r9w
  409c6e:	mov    rdx,QWORD PTR fs:0x28
  409c77:	mov    QWORD PTR [rsp+0x48],rdx
  409c7c:	xor    edx,edx
  409c7e:	cmp    rsi,rbp
  409c81:	mov    QWORD PTR [rsp+0x18],rcx
  409c86:	mov    QWORD PTR [rsp+0x20],r8
  409c8b:	je     409e0b <_start@@Base+0x3ecb>
  409c91:	movzx  eax,BYTE PTR [rsi]
  409c94:	cmp    al,0x22
  409c96:	je     409dce <_start@@Base+0x3e8e>
  409c9c:	cmp    al,0x2e
  409c9e:	je     409e20 <_start@@Base+0x3ee0>
  409ca4:	mov    DWORD PTR [rdi+0x14],0x1
  409cab:	lea    rax,[rsp+0x38]
  409cb0:	xor    edi,edi
  409cb2:	lea    r15,[rsp+0x3c]
  409cb7:	lea    r14,[rsp+0x40]
  409cbc:	mov    WORD PTR [rsp+0x16],di
  409cc1:	mov    QWORD PTR [rsp+0x8],rax
  409cc6:	mov    r13,QWORD PTR [rsp+0x18]
  409ccb:	mov    rax,QWORD PTR [r13+0x0]
  409ccf:	jmp    409cee <_start@@Base+0x3dae>
  409cd1:	nop    DWORD PTR [rax+0x0]
  409cd8:	cmp    rbx,rax
  409cdb:	jne    409d30 <_start@@Base+0x3df0>
  409cdd:	add    r13,0x8
  409ce1:	mov    rax,QWORD PTR [r13+0x0]
  409ce5:	test   rax,rax
  409ce8:	je     409d78 <_start@@Base+0x3e38>
  409cee:	mov    r9,r15
  409cf1:	mov    r8,r14
  409cf4:	mov    rcx,QWORD PTR [rsp+0x8]
  409cf9:	mov    rdx,rbp
  409cfc:	mov    rsi,rbx
  409cff:	mov    rdi,r12
  409d02:	call   rax
  409d04:	cmp    rbp,rax
  409d07:	jne    409cd8 <_start@@Base+0x3d98>
  409d09:	mov    rsi,QWORD PTR [rsp+0x48]
  409d0e:	xor    rsi,QWORD PTR fs:0x28
  409d17:	mov    rax,rbp
  409d1a:	jne    409e56 <_start@@Base+0x3f16>
  409d20:	add    rsp,0x58
  409d24:	pop    rbx
  409d25:	pop    rbp
  409d26:	pop    r12
  409d28:	pop    r13
  409d2a:	pop    r14
  409d2c:	pop    r15
  409d2e:	ret    
  409d2f:	nop
  409d30:	mov    edx,DWORD PTR [rsp+0x38]
  409d34:	mov    r8,rax
  409d37:	mov    rax,QWORD PTR [rsp+0x40]
  409d3c:	test   edx,edx
  409d3e:	je     409d98 <_start@@Base+0x3e58>
  409d40:	cmp    rax,0x8000
  409d46:	mov    ecx,0x8
  409d4b:	ja     409dac <_start@@Base+0x3e6c>
  409d4d:	neg    eax
  409d4f:	mov    WORD PTR [rsp+0x16],ax
  409d54:	mov    rax,QWORD PTR [rsp+0x20]
  409d59:	mov    esi,DWORD PTR [rsp+0x3c]
  409d5d:	movzx  ecx,WORD PTR [rsp+0x16]
  409d62:	add    WORD PTR [rax],cx
  409d65:	test   esi,esi
  409d67:	je     409e4e <_start@@Base+0x3f0e>
  409d6d:	mov    rbx,r8
  409d70:	jmp    409cc6 <_start@@Base+0x3d86>
  409d75:	nop    DWORD PTR [rax]
  409d78:	mov    rdx,rbp
  409d7b:	mov    ecx,0x17
  409d80:	mov    rsi,rbx
  409d83:	mov    rdi,r12
  409d86:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409d8b:	mov    rbp,rax
  409d8e:	jmp    409d09 <_start@@Base+0x3dc9>
  409d93:	nop    DWORD PTR [rax+rax*1+0x0]
  409d98:	cmp    rax,0x7fff
  409d9e:	ja     409da7 <_start@@Base+0x3e67>
  409da0:	mov    WORD PTR [rsp+0x16],ax
  409da5:	jmp    409d54 <_start@@Base+0x3e14>
  409da7:	mov    ecx,0x7
  409dac:	mov    rsi,r8
  409daf:	mov    rdx,rbp
  409db2:	mov    rdi,r12
  409db5:	mov    QWORD PTR [rsp+0x28],r8
  409dba:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409dbf:	cmp    rbp,rax
  409dc2:	mov    r8,QWORD PTR [rsp+0x28]
  409dc7:	jne    409d54 <_start@@Base+0x3e14>
  409dc9:	jmp    409d09 <_start@@Base+0x3dc9>
  409dce:	add    rbx,0x1
  409dd2:	mov    rax,rbp
  409dd5:	mov    DWORD PTR [rdi+0x14],0x0
  409ddc:	sub    rax,rbx
  409ddf:	cmp    rax,0x1
  409de3:	jle    409dec <_start@@Base+0x3eac>
  409de5:	cmp    BYTE PTR [rbx],0x20
  409de8:	jg     409dfd <_start@@Base+0x3ebd>
  409dea:	je     409e42 <_start@@Base+0x3f02>
  409dec:	mov    rsi,rbx
  409def:	mov    rdx,rbp
  409df2:	mov    rdi,r12
  409df5:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  409dfa:	mov    rbx,rax
  409dfd:	cmp    rbp,rbx
  409e00:	jne    409cab <_start@@Base+0x3d6b>
  409e06:	jmp    409d09 <_start@@Base+0x3dc9>
  409e0b:	mov    ecx,DWORD PTR [rdi+0x14]
  409e0e:	test   ecx,ecx
  409e10:	je     409dec <_start@@Base+0x3eac>
  409e12:	jmp    409d09 <_start@@Base+0x3dc9>
  409e17:	nop    WORD PTR [rax+rax*1+0x0]
  409e20:	mov    ecx,0x5
  409e25:	mov    rdx,rbp
  409e28:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409e2d:	mov    r8d,DWORD PTR [r12+0x14]
  409e32:	mov    rbx,rax
  409e35:	test   r8d,r8d
  409e38:	jne    409dfd <_start@@Base+0x3ebd>
  409e3a:	mov    rax,rbp
  409e3d:	sub    rax,rbx
  409e40:	jmp    409ddf <_start@@Base+0x3e9f>
  409e42:	cmp    BYTE PTR [rbx+0x1],0x20
  409e46:	jle    409dec <_start@@Base+0x3eac>
  409e48:	add    rbx,0x1
  409e4c:	jmp    409dfd <_start@@Base+0x3ebd>
  409e4e:	mov    rbp,r8
  409e51:	jmp    409d09 <_start@@Base+0x3dc9>
  409e56:	call   405070 <__stack_chk_fail@plt>
  409e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  409e60:	push   r15
  409e62:	push   r14
  409e64:	xor    r9d,r9d
  409e67:	push   r13
  409e69:	push   r12
  409e6b:	mov    r12,rdi
  409e6e:	push   rbp
  409e6f:	push   rbx
  409e70:	mov    rbx,rdx
  409e73:	mov    rbp,rsi
  409e76:	sub    rsp,0x58
  409e7a:	mov    WORD PTR [r8],r9w
  409e7e:	mov    rdx,QWORD PTR fs:0x28
  409e87:	mov    QWORD PTR [rsp+0x48],rdx
  409e8c:	xor    edx,edx
  409e8e:	cmp    rsi,rbx
  409e91:	mov    QWORD PTR [rsp+0x10],rcx
  409e96:	mov    QWORD PTR [rsp+0x20],r8
  409e9b:	je     40a00c <_start@@Base+0x40cc>
  409ea1:	movzx  eax,BYTE PTR [rsi]
  409ea4:	cmp    al,0x22
  409ea6:	je     409fce <_start@@Base+0x408e>
  409eac:	cmp    al,0x2e
  409eae:	je     40a020 <_start@@Base+0x40e0>
  409eb4:	mov    DWORD PTR [rdi+0x14],0x1
  409ebb:	lea    rax,[rsp+0x38]
  409ec0:	xor    esi,esi
  409ec2:	lea    r15,[rsp+0x3c]
  409ec7:	lea    r14,[rsp+0x40]
  409ecc:	mov    WORD PTR [rsp+0x1e],si
  409ed1:	mov    QWORD PTR [rsp+0x8],rax
  409ed6:	mov    r13,QWORD PTR [rsp+0x10]
  409edb:	mov    rax,QWORD PTR [r13+0x0]
  409edf:	jmp    409efe <_start@@Base+0x3fbe>
  409ee1:	nop    DWORD PTR [rax+0x0]
  409ee8:	cmp    rbp,rax
  409eeb:	jne    409f40 <_start@@Base+0x4000>
  409eed:	add    r13,0x8
  409ef1:	mov    rax,QWORD PTR [r13+0x0]
  409ef5:	test   rax,rax
  409ef8:	je     409f80 <_start@@Base+0x4040>
  409efe:	mov    r9,r15
  409f01:	mov    r8,r14
  409f04:	mov    rcx,QWORD PTR [rsp+0x8]
  409f09:	mov    rdx,rbx
  409f0c:	mov    rsi,rbp
  409f0f:	mov    rdi,r12
  409f12:	call   rax
  409f14:	cmp    rbx,rax
  409f17:	jne    409ee8 <_start@@Base+0x3fa8>
  409f19:	mov    rsi,QWORD PTR [rsp+0x48]
  409f1e:	xor    rsi,QWORD PTR fs:0x28
  409f27:	mov    rax,rbx
  409f2a:	jne    40a055 <_start@@Base+0x4115>
  409f30:	add    rsp,0x58
  409f34:	pop    rbx
  409f35:	pop    rbp
  409f36:	pop    r12
  409f38:	pop    r13
  409f3a:	pop    r14
  409f3c:	pop    r15
  409f3e:	ret    
  409f3f:	nop
  409f40:	mov    r8,rax
  409f43:	mov    eax,DWORD PTR [rsp+0x38]
  409f47:	test   eax,eax
  409f49:	jne    409fa0 <_start@@Base+0x4060>
  409f4b:	mov    rax,QWORD PTR [rsp+0x40]
  409f50:	cmp    rax,0xffff
  409f56:	ja     409fc7 <_start@@Base+0x4087>
  409f58:	mov    WORD PTR [rsp+0x1e],ax
  409f5d:	mov    rax,QWORD PTR [rsp+0x20]
  409f62:	movzx  ecx,WORD PTR [rsp+0x1e]
  409f67:	add    WORD PTR [rax],cx
  409f6a:	mov    ecx,DWORD PTR [rsp+0x3c]
  409f6e:	test   ecx,ecx
  409f70:	je     40a04d <_start@@Base+0x410d>
  409f76:	mov    rbp,r8
  409f79:	jmp    409ed6 <_start@@Base+0x3f96>
  409f7e:	xchg   ax,ax
  409f80:	mov    rdx,rbx
  409f83:	mov    ecx,0x17
  409f88:	mov    rsi,rbp
  409f8b:	mov    rdi,r12
  409f8e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409f93:	mov    rbx,rax
  409f96:	jmp    409f19 <_start@@Base+0x3fd9>
  409f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  409fa0:	mov    ecx,0x8
  409fa5:	mov    rsi,r8
  409fa8:	mov    rdx,rbx
  409fab:	mov    rdi,r12
  409fae:	mov    QWORD PTR [rsp+0x28],r8
  409fb3:	call   41c420 <flatcc_json_parser_set_error@@Base>
  409fb8:	cmp    rbx,rax
  409fbb:	mov    r8,QWORD PTR [rsp+0x28]
  409fc0:	jne    409f5d <_start@@Base+0x401d>
  409fc2:	jmp    409f19 <_start@@Base+0x3fd9>
  409fc7:	mov    ecx,0x7
  409fcc:	jmp    409fa5 <_start@@Base+0x4065>
  409fce:	add    rbp,0x1
  409fd2:	mov    rax,rbx
  409fd5:	mov    DWORD PTR [rdi+0x14],0x0
  409fdc:	sub    rax,rbp
  409fdf:	cmp    rax,0x1
  409fe3:	jle    409fed <_start@@Base+0x40ad>
  409fe5:	cmp    BYTE PTR [rbp+0x0],0x20
  409fe9:	jg     409ffe <_start@@Base+0x40be>
  409feb:	je     40a041 <_start@@Base+0x4101>
  409fed:	mov    rsi,rbp
  409ff0:	mov    rdx,rbx
  409ff3:	mov    rdi,r12
  409ff6:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  409ffb:	mov    rbp,rax
  409ffe:	cmp    rbx,rbp
  40a001:	jne    409ebb <_start@@Base+0x3f7b>
  40a007:	jmp    409f19 <_start@@Base+0x3fd9>
  40a00c:	mov    edx,DWORD PTR [rdi+0x14]
  40a00f:	test   edx,edx
  40a011:	je     409fed <_start@@Base+0x40ad>
  40a013:	jmp    409f19 <_start@@Base+0x3fd9>
  40a018:	nop    DWORD PTR [rax+rax*1+0x0]
  40a020:	mov    ecx,0x5
  40a025:	mov    rdx,rbx
  40a028:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a02d:	mov    edi,DWORD PTR [r12+0x14]
  40a032:	mov    rbp,rax
  40a035:	test   edi,edi
  40a037:	jne    409ffe <_start@@Base+0x40be>
  40a039:	mov    rax,rbx
  40a03c:	sub    rax,rbp
  40a03f:	jmp    409fdf <_start@@Base+0x409f>
  40a041:	cmp    BYTE PTR [rbp+0x1],0x20
  40a045:	jle    409fed <_start@@Base+0x40ad>
  40a047:	add    rbp,0x1
  40a04b:	jmp    409ffe <_start@@Base+0x40be>
  40a04d:	mov    rbx,r8
  40a050:	jmp    409f19 <_start@@Base+0x3fd9>
  40a055:	call   405070 <__stack_chk_fail@plt>
  40a05a:	nop    WORD PTR [rax+rax*1+0x0]
  40a060:	push   r15
  40a062:	push   r14
  40a064:	push   r13
  40a066:	push   r12
  40a068:	mov    r12,rdi
  40a06b:	push   rbp
  40a06c:	push   rbx
  40a06d:	mov    rbx,rdx
  40a070:	mov    rbp,rsi
  40a073:	sub    rsp,0x58
  40a077:	mov    BYTE PTR [r8],0x0
  40a07b:	mov    rdx,QWORD PTR fs:0x28
  40a084:	mov    QWORD PTR [rsp+0x48],rdx
  40a089:	xor    edx,edx
  40a08b:	cmp    rsi,rbx
  40a08e:	mov    QWORD PTR [rsp+0x10],rcx
  40a093:	mov    QWORD PTR [rsp+0x20],r8
  40a098:	je     40a20c <_start@@Base+0x42cc>
  40a09e:	movzx  eax,BYTE PTR [rsi]
  40a0a1:	cmp    al,0x22
  40a0a3:	je     40a1ce <_start@@Base+0x428e>
  40a0a9:	cmp    al,0x2e
  40a0ab:	je     40a220 <_start@@Base+0x42e0>
  40a0b1:	mov    DWORD PTR [rdi+0x14],0x1
  40a0b8:	lea    rax,[rsp+0x38]
  40a0bd:	lea    r15,[rsp+0x3c]
  40a0c2:	lea    r14,[rsp+0x40]
  40a0c7:	mov    BYTE PTR [rsp+0x1f],0x0
  40a0cc:	mov    QWORD PTR [rsp+0x8],rax
  40a0d1:	mov    r13,QWORD PTR [rsp+0x10]
  40a0d6:	mov    rax,QWORD PTR [r13+0x0]
  40a0da:	jmp    40a0f6 <_start@@Base+0x41b6>
  40a0dc:	nop    DWORD PTR [rax+0x0]
  40a0e0:	cmp    rbp,rax
  40a0e3:	jne    40a140 <_start@@Base+0x4200>
  40a0e5:	add    r13,0x8
  40a0e9:	mov    rax,QWORD PTR [r13+0x0]
  40a0ed:	test   rax,rax
  40a0f0:	je     40a180 <_start@@Base+0x4240>
  40a0f6:	mov    r9,r15
  40a0f9:	mov    r8,r14
  40a0fc:	mov    rcx,QWORD PTR [rsp+0x8]
  40a101:	mov    rdx,rbx
  40a104:	mov    rsi,rbp
  40a107:	mov    rdi,r12
  40a10a:	call   rax
  40a10c:	cmp    rbx,rax
  40a10f:	jne    40a0e0 <_start@@Base+0x41a0>
  40a111:	mov    rsi,QWORD PTR [rsp+0x48]
  40a116:	xor    rsi,QWORD PTR fs:0x28
  40a11f:	mov    rax,rbx
  40a122:	jne    40a255 <_start@@Base+0x4315>
  40a128:	add    rsp,0x58
  40a12c:	pop    rbx
  40a12d:	pop    rbp
  40a12e:	pop    r12
  40a130:	pop    r13
  40a132:	pop    r14
  40a134:	pop    r15
  40a136:	ret    
  40a137:	nop    WORD PTR [rax+rax*1+0x0]
  40a140:	mov    r8,rax
  40a143:	mov    eax,DWORD PTR [rsp+0x38]
  40a147:	test   eax,eax
  40a149:	jne    40a1a0 <_start@@Base+0x4260>
  40a14b:	mov    rax,QWORD PTR [rsp+0x40]
  40a150:	cmp    rax,0xff
  40a156:	ja     40a1c7 <_start@@Base+0x4287>
  40a158:	mov    BYTE PTR [rsp+0x1f],al
  40a15c:	mov    rax,QWORD PTR [rsp+0x20]
  40a161:	movzx  ecx,BYTE PTR [rsp+0x1f]
  40a166:	add    BYTE PTR [rax],cl
  40a168:	mov    ecx,DWORD PTR [rsp+0x3c]
  40a16c:	test   ecx,ecx
  40a16e:	je     40a24d <_start@@Base+0x430d>
  40a174:	mov    rbp,r8
  40a177:	jmp    40a0d1 <_start@@Base+0x4191>
  40a17c:	nop    DWORD PTR [rax+0x0]
  40a180:	mov    rdx,rbx
  40a183:	mov    ecx,0x17
  40a188:	mov    rsi,rbp
  40a18b:	mov    rdi,r12
  40a18e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a193:	mov    rbx,rax
  40a196:	jmp    40a111 <_start@@Base+0x41d1>
  40a19b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a1a0:	mov    ecx,0x8
  40a1a5:	mov    rsi,r8
  40a1a8:	mov    rdx,rbx
  40a1ab:	mov    rdi,r12
  40a1ae:	mov    QWORD PTR [rsp+0x28],r8
  40a1b3:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a1b8:	cmp    rbx,rax
  40a1bb:	mov    r8,QWORD PTR [rsp+0x28]
  40a1c0:	jne    40a15c <_start@@Base+0x421c>
  40a1c2:	jmp    40a111 <_start@@Base+0x41d1>
  40a1c7:	mov    ecx,0x7
  40a1cc:	jmp    40a1a5 <_start@@Base+0x4265>
  40a1ce:	add    rbp,0x1
  40a1d2:	mov    rax,rbx
  40a1d5:	mov    DWORD PTR [rdi+0x14],0x0
  40a1dc:	sub    rax,rbp
  40a1df:	cmp    rax,0x1
  40a1e3:	jle    40a1ed <_start@@Base+0x42ad>
  40a1e5:	cmp    BYTE PTR [rbp+0x0],0x20
  40a1e9:	jg     40a1fe <_start@@Base+0x42be>
  40a1eb:	je     40a241 <_start@@Base+0x4301>
  40a1ed:	mov    rsi,rbp
  40a1f0:	mov    rdx,rbx
  40a1f3:	mov    rdi,r12
  40a1f6:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a1fb:	mov    rbp,rax
  40a1fe:	cmp    rbx,rbp
  40a201:	jne    40a0b8 <_start@@Base+0x4178>
  40a207:	jmp    40a111 <_start@@Base+0x41d1>
  40a20c:	mov    edx,DWORD PTR [rdi+0x14]
  40a20f:	test   edx,edx
  40a211:	je     40a1ed <_start@@Base+0x42ad>
  40a213:	jmp    40a111 <_start@@Base+0x41d1>
  40a218:	nop    DWORD PTR [rax+rax*1+0x0]
  40a220:	mov    ecx,0x5
  40a225:	mov    rdx,rbx
  40a228:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a22d:	mov    esi,DWORD PTR [r12+0x14]
  40a232:	mov    rbp,rax
  40a235:	test   esi,esi
  40a237:	jne    40a1fe <_start@@Base+0x42be>
  40a239:	mov    rax,rbx
  40a23c:	sub    rax,rbp
  40a23f:	jmp    40a1df <_start@@Base+0x429f>
  40a241:	cmp    BYTE PTR [rbp+0x1],0x20
  40a245:	jle    40a1ed <_start@@Base+0x42ad>
  40a247:	add    rbp,0x1
  40a24b:	jmp    40a1fe <_start@@Base+0x42be>
  40a24d:	mov    rbx,r8
  40a250:	jmp    40a111 <_start@@Base+0x41d1>
  40a255:	call   405070 <__stack_chk_fail@plt>
  40a25a:	nop    WORD PTR [rax+rax*1+0x0]
  40a260:	push   r15
  40a262:	push   r14
  40a264:	push   r13
  40a266:	push   r12
  40a268:	mov    r12,rdi
  40a26b:	push   rbp
  40a26c:	push   rbx
  40a26d:	mov    rbx,rsi
  40a270:	mov    rbp,rdx
  40a273:	sub    rsp,0x58
  40a277:	mov    QWORD PTR [r8],0x0
  40a27e:	mov    rsi,QWORD PTR fs:0x28
  40a287:	mov    QWORD PTR [rsp+0x48],rsi
  40a28c:	xor    esi,esi
  40a28e:	cmp    rbx,rdx
  40a291:	mov    QWORD PTR [rsp+0x18],rcx
  40a296:	mov    QWORD PTR [rsp+0x20],r8
  40a29b:	je     40a420 <_start@@Base+0x44e0>
  40a2a1:	movzx  eax,BYTE PTR [rbx]
  40a2a4:	cmp    al,0x22
  40a2a6:	je     40a3e3 <_start@@Base+0x44a3>
  40a2ac:	cmp    al,0x2e
  40a2ae:	je     40a430 <_start@@Base+0x44f0>
  40a2b4:	mov    DWORD PTR [rdi+0x14],0x1
  40a2bb:	lea    rax,[rsp+0x38]
  40a2c0:	lea    r15,[rsp+0x3c]
  40a2c5:	lea    r14,[rsp+0x40]
  40a2ca:	mov    QWORD PTR [rsp+0x10],0x0
  40a2d3:	mov    QWORD PTR [rsp+0x8],rax
  40a2d8:	mov    r13,QWORD PTR [rsp+0x18]
  40a2dd:	mov    rax,QWORD PTR [r13+0x0]
  40a2e1:	jmp    40a2fe <_start@@Base+0x43be>
  40a2e3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a2e8:	cmp    rbx,rax
  40a2eb:	jne    40a340 <_start@@Base+0x4400>
  40a2ed:	add    r13,0x8
  40a2f1:	mov    rax,QWORD PTR [r13+0x0]
  40a2f5:	test   rax,rax
  40a2f8:	je     40a390 <_start@@Base+0x4450>
  40a2fe:	mov    r9,r15
  40a301:	mov    r8,r14
  40a304:	mov    rcx,QWORD PTR [rsp+0x8]
  40a309:	mov    rdx,rbp
  40a30c:	mov    rsi,rbx
  40a30f:	mov    rdi,r12
  40a312:	call   rax
  40a314:	cmp    rbp,rax
  40a317:	jne    40a2e8 <_start@@Base+0x43a8>
  40a319:	mov    rdi,QWORD PTR [rsp+0x48]
  40a31e:	xor    rdi,QWORD PTR fs:0x28
  40a327:	mov    rax,rbp
  40a32a:	jne    40a465 <_start@@Base+0x4525>
  40a330:	add    rsp,0x58
  40a334:	pop    rbx
  40a335:	pop    rbp
  40a336:	pop    r12
  40a338:	pop    r13
  40a33a:	pop    r14
  40a33c:	pop    r15
  40a33e:	ret    
  40a33f:	nop
  40a340:	mov    edx,DWORD PTR [rsp+0x38]
  40a344:	mov    r8,rax
  40a347:	mov    rax,QWORD PTR [rsp+0x40]
  40a34c:	test   edx,edx
  40a34e:	je     40a3b0 <_start@@Base+0x4470>
  40a350:	movabs rdx,0x8000000000000000
  40a35a:	mov    ecx,0x8
  40a35f:	cmp    rax,rdx
  40a362:	ja     40a3c1 <_start@@Base+0x4481>
  40a364:	neg    rax
  40a367:	mov    QWORD PTR [rsp+0x10],rax
  40a36c:	mov    rax,QWORD PTR [rsp+0x20]
  40a371:	mov    esi,DWORD PTR [rsp+0x3c]
  40a375:	mov    rcx,QWORD PTR [rsp+0x10]
  40a37a:	add    QWORD PTR [rax],rcx
  40a37d:	test   esi,esi
  40a37f:	je     40a45d <_start@@Base+0x451d>
  40a385:	mov    rbx,r8
  40a388:	jmp    40a2d8 <_start@@Base+0x4398>
  40a38d:	nop    DWORD PTR [rax]
  40a390:	mov    rdx,rbp
  40a393:	mov    ecx,0x17
  40a398:	mov    rsi,rbx
  40a39b:	mov    rdi,r12
  40a39e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a3a3:	mov    rbp,rax
  40a3a6:	jmp    40a319 <_start@@Base+0x43d9>
  40a3ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40a3b0:	test   rax,rax
  40a3b3:	js     40a3bc <_start@@Base+0x447c>
  40a3b5:	mov    QWORD PTR [rsp+0x10],rax
  40a3ba:	jmp    40a36c <_start@@Base+0x442c>
  40a3bc:	mov    ecx,0x7
  40a3c1:	mov    rsi,r8
  40a3c4:	mov    rdx,rbp
  40a3c7:	mov    rdi,r12
  40a3ca:	mov    QWORD PTR [rsp+0x28],r8
  40a3cf:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a3d4:	cmp    rbp,rax
  40a3d7:	mov    r8,QWORD PTR [rsp+0x28]
  40a3dc:	jne    40a36c <_start@@Base+0x442c>
  40a3de:	jmp    40a319 <_start@@Base+0x43d9>
  40a3e3:	add    rbx,0x1
  40a3e7:	mov    rax,rdx
  40a3ea:	mov    DWORD PTR [rdi+0x14],0x0
  40a3f1:	sub    rax,rbx
  40a3f4:	cmp    rax,0x1
  40a3f8:	jle    40a401 <_start@@Base+0x44c1>
  40a3fa:	cmp    BYTE PTR [rbx],0x20
  40a3fd:	jg     40a412 <_start@@Base+0x44d2>
  40a3ff:	je     40a451 <_start@@Base+0x4511>
  40a401:	mov    rsi,rbx
  40a404:	mov    rdx,rbp
  40a407:	mov    rdi,r12
  40a40a:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a40f:	mov    rbx,rax
  40a412:	cmp    rbp,rbx
  40a415:	jne    40a2bb <_start@@Base+0x437b>
  40a41b:	jmp    40a319 <_start@@Base+0x43d9>
  40a420:	mov    ecx,DWORD PTR [rdi+0x14]
  40a423:	test   ecx,ecx
  40a425:	je     40a401 <_start@@Base+0x44c1>
  40a427:	jmp    40a319 <_start@@Base+0x43d9>
  40a42c:	nop    DWORD PTR [rax+0x0]
  40a430:	mov    rsi,rbx
  40a433:	mov    ecx,0x5
  40a438:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a43d:	mov    edi,DWORD PTR [r12+0x14]
  40a442:	mov    rbx,rax
  40a445:	test   edi,edi
  40a447:	jne    40a412 <_start@@Base+0x44d2>
  40a449:	mov    rax,rbp
  40a44c:	sub    rax,rbx
  40a44f:	jmp    40a3f4 <_start@@Base+0x44b4>
  40a451:	cmp    BYTE PTR [rbx+0x1],0x20
  40a455:	jle    40a401 <_start@@Base+0x44c1>
  40a457:	add    rbx,0x1
  40a45b:	jmp    40a412 <_start@@Base+0x44d2>
  40a45d:	mov    rbp,r8
  40a460:	jmp    40a319 <_start@@Base+0x43d9>
  40a465:	call   405070 <__stack_chk_fail@plt>
  40a46a:	nop    WORD PTR [rax+rax*1+0x0]
  40a470:	push   r15
  40a472:	push   r14
  40a474:	push   r13
  40a476:	push   r12
  40a478:	mov    r12,rdi
  40a47b:	push   rbp
  40a47c:	push   rbx
  40a47d:	mov    rbp,rdx
  40a480:	mov    rbx,rsi
  40a483:	sub    rsp,0x58
  40a487:	mov    BYTE PTR [r8],0x0
  40a48b:	mov    rdx,QWORD PTR fs:0x28
  40a494:	mov    QWORD PTR [rsp+0x48],rdx
  40a499:	xor    edx,edx
  40a49b:	cmp    rsi,rbp
  40a49e:	mov    QWORD PTR [rsp+0x18],rcx
  40a4a3:	mov    QWORD PTR [rsp+0x20],r8
  40a4a8:	je     40a628 <_start@@Base+0x46e8>
  40a4ae:	movzx  eax,BYTE PTR [rsi]
  40a4b1:	cmp    al,0x22
  40a4b3:	je     40a5eb <_start@@Base+0x46ab>
  40a4b9:	cmp    al,0x2e
  40a4bb:	je     40a638 <_start@@Base+0x46f8>
  40a4c1:	mov    DWORD PTR [rdi+0x14],0x1
  40a4c8:	lea    rax,[rsp+0x38]
  40a4cd:	lea    r15,[rsp+0x3c]
  40a4d2:	lea    r14,[rsp+0x40]
  40a4d7:	mov    BYTE PTR [rsp+0x17],0x0
  40a4dc:	mov    QWORD PTR [rsp+0x8],rax
  40a4e1:	mov    r13,QWORD PTR [rsp+0x18]
  40a4e6:	mov    rax,QWORD PTR [r13+0x0]
  40a4ea:	jmp    40a506 <_start@@Base+0x45c6>
  40a4ec:	nop    DWORD PTR [rax+0x0]
  40a4f0:	cmp    rbx,rax
  40a4f3:	jne    40a550 <_start@@Base+0x4610>
  40a4f5:	add    r13,0x8
  40a4f9:	mov    rax,QWORD PTR [r13+0x0]
  40a4fd:	test   rax,rax
  40a500:	je     40a598 <_start@@Base+0x4658>
  40a506:	mov    r9,r15
  40a509:	mov    r8,r14
  40a50c:	mov    rcx,QWORD PTR [rsp+0x8]
  40a511:	mov    rdx,rbp
  40a514:	mov    rsi,rbx
  40a517:	mov    rdi,r12
  40a51a:	call   rax
  40a51c:	cmp    rbp,rax
  40a51f:	jne    40a4f0 <_start@@Base+0x45b0>
  40a521:	mov    rsi,QWORD PTR [rsp+0x48]
  40a526:	xor    rsi,QWORD PTR fs:0x28
  40a52f:	mov    rax,rbp
  40a532:	jne    40a66d <_start@@Base+0x472d>
  40a538:	add    rsp,0x58
  40a53c:	pop    rbx
  40a53d:	pop    rbp
  40a53e:	pop    r12
  40a540:	pop    r13
  40a542:	pop    r14
  40a544:	pop    r15
  40a546:	ret    
  40a547:	nop    WORD PTR [rax+rax*1+0x0]
  40a550:	mov    edx,DWORD PTR [rsp+0x38]
  40a554:	mov    r8,rax
  40a557:	mov    rax,QWORD PTR [rsp+0x40]
  40a55c:	test   edx,edx
  40a55e:	je     40a5b8 <_start@@Base+0x4678>
  40a560:	cmp    rax,0x80
  40a566:	mov    ecx,0x8
  40a56b:	ja     40a5c9 <_start@@Base+0x4689>
  40a56d:	neg    eax
  40a56f:	mov    BYTE PTR [rsp+0x17],al
  40a573:	mov    rax,QWORD PTR [rsp+0x20]
  40a578:	mov    esi,DWORD PTR [rsp+0x3c]
  40a57c:	movzx  ecx,BYTE PTR [rsp+0x17]
  40a581:	add    BYTE PTR [rax],cl
  40a583:	test   esi,esi
  40a585:	je     40a665 <_start@@Base+0x4725>
  40a58b:	mov    rbx,r8
  40a58e:	jmp    40a4e1 <_start@@Base+0x45a1>
  40a593:	nop    DWORD PTR [rax+rax*1+0x0]
  40a598:	mov    rdx,rbp
  40a59b:	mov    ecx,0x17
  40a5a0:	mov    rsi,rbx
  40a5a3:	mov    rdi,r12
  40a5a6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a5ab:	mov    rbp,rax
  40a5ae:	jmp    40a521 <_start@@Base+0x45e1>
  40a5b3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a5b8:	cmp    rax,0x7f
  40a5bc:	ja     40a5c4 <_start@@Base+0x4684>
  40a5be:	mov    BYTE PTR [rsp+0x17],al
  40a5c2:	jmp    40a573 <_start@@Base+0x4633>
  40a5c4:	mov    ecx,0x7
  40a5c9:	mov    rsi,r8
  40a5cc:	mov    rdx,rbp
  40a5cf:	mov    rdi,r12
  40a5d2:	mov    QWORD PTR [rsp+0x28],r8
  40a5d7:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a5dc:	cmp    rbp,rax
  40a5df:	mov    r8,QWORD PTR [rsp+0x28]
  40a5e4:	jne    40a573 <_start@@Base+0x4633>
  40a5e6:	jmp    40a521 <_start@@Base+0x45e1>
  40a5eb:	add    rbx,0x1
  40a5ef:	mov    rax,rbp
  40a5f2:	mov    DWORD PTR [rdi+0x14],0x0
  40a5f9:	sub    rax,rbx
  40a5fc:	cmp    rax,0x1
  40a600:	jle    40a609 <_start@@Base+0x46c9>
  40a602:	cmp    BYTE PTR [rbx],0x20
  40a605:	jg     40a61a <_start@@Base+0x46da>
  40a607:	je     40a659 <_start@@Base+0x4719>
  40a609:	mov    rsi,rbx
  40a60c:	mov    rdx,rbp
  40a60f:	mov    rdi,r12
  40a612:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a617:	mov    rbx,rax
  40a61a:	cmp    rbp,rbx
  40a61d:	jne    40a4c8 <_start@@Base+0x4588>
  40a623:	jmp    40a521 <_start@@Base+0x45e1>
  40a628:	mov    ecx,DWORD PTR [rdi+0x14]
  40a62b:	test   ecx,ecx
  40a62d:	je     40a609 <_start@@Base+0x46c9>
  40a62f:	jmp    40a521 <_start@@Base+0x45e1>
  40a634:	nop    DWORD PTR [rax+0x0]
  40a638:	mov    ecx,0x5
  40a63d:	mov    rdx,rbp
  40a640:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40a645:	mov    edi,DWORD PTR [r12+0x14]
  40a64a:	mov    rbx,rax
  40a64d:	test   edi,edi
  40a64f:	jne    40a61a <_start@@Base+0x46da>
  40a651:	mov    rax,rbp
  40a654:	sub    rax,rbx
  40a657:	jmp    40a5fc <_start@@Base+0x46bc>
  40a659:	cmp    BYTE PTR [rbx+0x1],0x20
  40a65d:	jle    40a609 <_start@@Base+0x46c9>
  40a65f:	add    rbx,0x1
  40a663:	jmp    40a61a <_start@@Base+0x46da>
  40a665:	mov    rbp,r8
  40a668:	jmp    40a521 <_start@@Base+0x45e1>
  40a66d:	call   405070 <__stack_chk_fail@plt>
  40a672:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a67d:	nop    DWORD PTR [rax]
  40a680:	mov    rax,rdx
  40a683:	push   r12
  40a685:	mov    r12,rcx
  40a688:	sub    rax,rsi
  40a68b:	push   rbp
  40a68c:	mov    rbp,rdi
  40a68f:	cmp    rax,0x1
  40a693:	push   rbx
  40a694:	mov    rbx,rdx
  40a697:	jle    40a6a0 <_start@@Base+0x4760>
  40a699:	cmp    BYTE PTR [rsi],0x20
  40a69c:	jg     40a6ae <_start@@Base+0x476e>
  40a69e:	je     40a710 <_start@@Base+0x47d0>
  40a6a0:	mov    rdx,rbx
  40a6a3:	mov    rdi,rbp
  40a6a6:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a6ab:	mov    rsi,rax
  40a6ae:	cmp    rbx,rsi
  40a6b1:	je     40a760 <_start@@Base+0x4820>
  40a6b7:	cmp    BYTE PTR [rsi],0x2c
  40a6ba:	je     40a720 <_start@@Base+0x47e0>
  40a6bc:	mov    DWORD PTR [r12],0x0
  40a6c4:	cmp    BYTE PTR [rsi],0x5d
  40a6c7:	je     40a6e0 <_start@@Base+0x47a0>
  40a6c9:	mov    ecx,0x9
  40a6ce:	mov    rdx,rbx
  40a6d1:	pop    rbx
  40a6d2:	mov    rdi,rbp
  40a6d5:	pop    rbp
  40a6d6:	pop    r12
  40a6d8:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  40a6dd:	nop    DWORD PTR [rax]
  40a6e0:	lea    rax,[rsi+0x1]
  40a6e4:	mov    rdx,rbx
  40a6e7:	sub    rdx,rax
  40a6ea:	cmp    rdx,0x1
  40a6ee:	jle    40a6fc <_start@@Base+0x47bc>
  40a6f0:	cmp    BYTE PTR [rsi+0x1],0x20
  40a6f4:	jg     40a758 <_start@@Base+0x4818>
  40a6f6:	je     40a780 <_start@@Base+0x4840>
  40a6fc:	mov    rdx,rbx
  40a6ff:	mov    rdi,rbp
  40a702:	mov    rsi,rax
  40a705:	pop    rbx
  40a706:	pop    rbp
  40a707:	pop    r12
  40a709:	jmp    41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a70e:	xchg   ax,ax
  40a710:	cmp    BYTE PTR [rsi+0x1],0x20
  40a714:	jle    40a6a0 <_start@@Base+0x4760>
  40a716:	add    rsi,0x1
  40a71a:	jmp    40a6ae <_start@@Base+0x476e>
  40a71c:	nop    DWORD PTR [rax+0x0]
  40a720:	lea    rax,[rsi+0x1]
  40a724:	mov    rdx,rbx
  40a727:	sub    rdx,rax
  40a72a:	cmp    rdx,0x1
  40a72e:	jle    40a738 <_start@@Base+0x47f8>
  40a730:	cmp    BYTE PTR [rsi+0x1],0x20
  40a734:	jg     40a746 <_start@@Base+0x4806>
  40a736:	je     40a770 <_start@@Base+0x4830>
  40a738:	mov    rdx,rbx
  40a73b:	mov    rsi,rax
  40a73e:	mov    rdi,rbp
  40a741:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a746:	cmp    rbx,rax
  40a749:	je     40a7ab <_start@@Base+0x486b>
  40a74b:	cmp    BYTE PTR [rax],0x5d
  40a74e:	je     40a790 <_start@@Base+0x4850>
  40a750:	mov    DWORD PTR [r12],0x1
  40a758:	pop    rbx
  40a759:	pop    rbp
  40a75a:	pop    r12
  40a75c:	ret    
  40a75d:	nop    DWORD PTR [rax]
  40a760:	mov    rax,rbx
  40a763:	mov    DWORD PTR [r12],0x0
  40a76b:	pop    rbx
  40a76c:	pop    rbp
  40a76d:	pop    r12
  40a76f:	ret    
  40a770:	cmp    BYTE PTR [rsi+0x2],0x20
  40a774:	jle    40a738 <_start@@Base+0x47f8>
  40a776:	lea    rax,[rsi+0x2]
  40a77a:	jmp    40a746 <_start@@Base+0x4806>
  40a77c:	nop    DWORD PTR [rax+0x0]
  40a780:	cmp    BYTE PTR [rsi+0x2],0x20
  40a784:	jle    40a6fc <_start@@Base+0x47bc>
  40a78a:	lea    rax,[rsi+0x2]
  40a78e:	jmp    40a758 <_start@@Base+0x4818>
  40a790:	mov    DWORD PTR [r12],0x0
  40a798:	mov    rdx,rbx
  40a79b:	mov    rdi,rbp
  40a79e:	pop    rbx
  40a79f:	pop    rbp
  40a7a0:	pop    r12
  40a7a2:	lea    rsi,[rax+0x1]
  40a7a6:	jmp    407030 <_start@@Base+0x10f0>
  40a7ab:	mov    DWORD PTR [r12],0x0
  40a7b3:	mov    ecx,0x9
  40a7b8:	mov    rdx,rbx
  40a7bb:	mov    rsi,rbx
  40a7be:	jmp    40a6d1 <_start@@Base+0x4791>
  40a7c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a7ce:	xchg   ax,ax
  40a7d0:	mov    rax,rdx
  40a7d3:	push   r12
  40a7d5:	mov    r12,rcx
  40a7d8:	sub    rax,rsi
  40a7db:	push   rbp
  40a7dc:	mov    rbp,rdi
  40a7df:	cmp    rax,0x1
  40a7e3:	push   rbx
  40a7e4:	mov    rbx,rdx
  40a7e7:	jle    40a7f0 <_start@@Base+0x48b0>
  40a7e9:	cmp    BYTE PTR [rsi],0x20
  40a7ec:	jg     40a7fe <_start@@Base+0x48be>
  40a7ee:	je     40a860 <_start@@Base+0x4920>
  40a7f0:	mov    rdx,rbx
  40a7f3:	mov    rdi,rbp
  40a7f6:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a7fb:	mov    rsi,rax
  40a7fe:	cmp    rbx,rsi
  40a801:	je     40a8b0 <_start@@Base+0x4970>
  40a807:	cmp    BYTE PTR [rsi],0x2c
  40a80a:	je     40a870 <_start@@Base+0x4930>
  40a80c:	mov    DWORD PTR [r12],0x0
  40a814:	cmp    BYTE PTR [rsi],0x7d
  40a817:	je     40a830 <_start@@Base+0x48f0>
  40a819:	mov    ecx,0xa
  40a81e:	mov    rdx,rbx
  40a821:	pop    rbx
  40a822:	mov    rdi,rbp
  40a825:	pop    rbp
  40a826:	pop    r12
  40a828:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  40a82d:	nop    DWORD PTR [rax]
  40a830:	lea    rax,[rsi+0x1]
  40a834:	mov    rdx,rbx
  40a837:	sub    rdx,rax
  40a83a:	cmp    rdx,0x1
  40a83e:	jle    40a84c <_start@@Base+0x490c>
  40a840:	cmp    BYTE PTR [rsi+0x1],0x20
  40a844:	jg     40a8a8 <_start@@Base+0x4968>
  40a846:	je     40a8d0 <_start@@Base+0x4990>
  40a84c:	mov    rdx,rbx
  40a84f:	mov    rdi,rbp
  40a852:	mov    rsi,rax
  40a855:	pop    rbx
  40a856:	pop    rbp
  40a857:	pop    r12
  40a859:	jmp    41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a85e:	xchg   ax,ax
  40a860:	cmp    BYTE PTR [rsi+0x1],0x20
  40a864:	jle    40a7f0 <_start@@Base+0x48b0>
  40a866:	add    rsi,0x1
  40a86a:	jmp    40a7fe <_start@@Base+0x48be>
  40a86c:	nop    DWORD PTR [rax+0x0]
  40a870:	lea    rax,[rsi+0x1]
  40a874:	mov    rdx,rbx
  40a877:	sub    rdx,rax
  40a87a:	cmp    rdx,0x1
  40a87e:	jle    40a888 <_start@@Base+0x4948>
  40a880:	cmp    BYTE PTR [rsi+0x1],0x20
  40a884:	jg     40a896 <_start@@Base+0x4956>
  40a886:	je     40a8c0 <_start@@Base+0x4980>
  40a888:	mov    rdx,rbx
  40a88b:	mov    rsi,rax
  40a88e:	mov    rdi,rbp
  40a891:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40a896:	cmp    rbx,rax
  40a899:	je     40a8fb <_start@@Base+0x49bb>
  40a89b:	cmp    BYTE PTR [rax],0x7d
  40a89e:	je     40a8e0 <_start@@Base+0x49a0>
  40a8a0:	mov    DWORD PTR [r12],0x1
  40a8a8:	pop    rbx
  40a8a9:	pop    rbp
  40a8aa:	pop    r12
  40a8ac:	ret    
  40a8ad:	nop    DWORD PTR [rax]
  40a8b0:	mov    rax,rbx
  40a8b3:	mov    DWORD PTR [r12],0x0
  40a8bb:	pop    rbx
  40a8bc:	pop    rbp
  40a8bd:	pop    r12
  40a8bf:	ret    
  40a8c0:	cmp    BYTE PTR [rsi+0x2],0x20
  40a8c4:	jle    40a888 <_start@@Base+0x4948>
  40a8c6:	lea    rax,[rsi+0x2]
  40a8ca:	jmp    40a896 <_start@@Base+0x4956>
  40a8cc:	nop    DWORD PTR [rax+0x0]
  40a8d0:	cmp    BYTE PTR [rsi+0x2],0x20
  40a8d4:	jle    40a84c <_start@@Base+0x490c>
  40a8da:	lea    rax,[rsi+0x2]
  40a8de:	jmp    40a8a8 <_start@@Base+0x4968>
  40a8e0:	mov    DWORD PTR [r12],0x0
  40a8e8:	mov    rdx,rbx
  40a8eb:	mov    rdi,rbp
  40a8ee:	pop    rbx
  40a8ef:	pop    rbp
  40a8f0:	pop    r12
  40a8f2:	lea    rsi,[rax+0x1]
  40a8f6:	jmp    407030 <_start@@Base+0x10f0>
  40a8fb:	mov    DWORD PTR [r12],0x0
  40a903:	mov    ecx,0xa
  40a908:	mov    rdx,rbx
  40a90b:	mov    rsi,rbx
  40a90e:	jmp    40a821 <_start@@Base+0x48e1>
  40a913:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40a91e:	xchg   ax,ax
  40a920:	push   r15
  40a922:	push   r14
  40a924:	mov    r15,rsi
  40a927:	push   r13
  40a929:	push   r12
  40a92b:	mov    esi,0xa
  40a930:	push   rbp
  40a931:	push   rbx
  40a932:	mov    rbp,rdi
  40a935:	mov    rbx,rdx
  40a938:	mov    r14,rcx
  40a93b:	sub    rsp,0x38
  40a93f:	mov    rdi,QWORD PTR [rdi]
  40a942:	mov    DWORD PTR [rcx],0x0
  40a948:	mov    rax,QWORD PTR fs:0x28
  40a951:	mov    QWORD PTR [rsp+0x28],rax
  40a956:	xor    eax,eax
  40a958:	call   4173e0 <flatcc_builder_start_table@@Base>
  40a95d:	test   eax,eax
  40a95f:	jne    40ab13 <_start@@Base+0x4bd3>
  40a965:	lea    r8,[rsp+0x20]
  40a96a:	mov    ecx,0x5
  40a96f:	mov    rdx,rbx
  40a972:	mov    rsi,r15
  40a975:	mov    rdi,rbp
  40a978:	call   41e620 <flatcc_json_parser_prepare_unions@@Base>
  40a97d:	cmp    rbx,rax
  40a980:	je     40ab13 <_start@@Base+0x4bd3>
  40a986:	lea    r12,[rsp+0x1c]
  40a98b:	mov    rsi,r15
  40a98e:	mov    rdx,rbx
  40a991:	mov    rdi,rbp
  40a994:	mov    rcx,r12
  40a997:	call   408fe0 <_start@@Base+0x30a0>
  40a99c:	mov    ecx,DWORD PTR [rsp+0x1c]
  40a9a0:	mov    r15,rax
  40a9a3:	test   ecx,ecx
  40a9a5:	je     40ab08 <_start@@Base+0x4bc8>
  40a9ab:	movabs r13,0x6368617261637464
  40a9b5:	jmp    40aa33 <_start@@Base+0x4af3>
  40a9b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a9c0:	movabs rdx,0x616e7461676f6e69
  40a9ca:	cmp    rax,rdx
  40a9cd:	je     40ac80 <_start@@Base+0x4d40>
  40a9d3:	movabs rdx,0x63616d656f5f7479
  40a9dd:	cmp    rax,rdx
  40a9e0:	je     40ad38 <_start@@Base+0x4df8>
  40a9e6:	and    rax,0xffffffffff000000
  40a9ec:	movabs rdx,0x63616d656f000000
  40a9f6:	cmp    rax,rdx
  40a9f9:	jne    40aa05 <_start@@Base+0x4ac5>
  40a9fb:	cmp    r8,0x5
  40a9ff:	jg     40b050 <_start@@Base+0x5110>
  40aa05:	mov    rdx,rbx
  40aa08:	mov    rsi,r15
  40aa0b:	mov    rdi,rbp
  40aa0e:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40aa13:	mov    rdx,rbx
  40aa16:	mov    rcx,r12
  40aa19:	mov    rsi,rax
  40aa1c:	mov    rdi,rbp
  40aa1f:	call   40a7d0 <_start@@Base+0x4890>
  40aa24:	mov    edx,DWORD PTR [rsp+0x1c]
  40aa28:	mov    r15,rax
  40aa2b:	test   edx,edx
  40aa2d:	je     40ab08 <_start@@Base+0x4bc8>
  40aa33:	cmp    rbx,r15
  40aa36:	je     40ab50 <_start@@Base+0x4c10>
  40aa3c:	movzx  eax,BYTE PTR [r15]
  40aa40:	cmp    al,0x22
  40aa42:	je     40ac60 <_start@@Base+0x4d20>
  40aa48:	cmp    al,0x2e
  40aa4a:	je     40aec8 <_start@@Base+0x4f88>
  40aa50:	mov    r8,rbx
  40aa53:	mov    DWORD PTR [rbp+0x14],0x1
  40aa5a:	sub    r8,r15
  40aa5d:	cmp    r8,0x7
  40aa61:	jbe    40ab58 <_start@@Base+0x4c18>
  40aa67:	movbe  rax,QWORD PTR [r15]
  40aa6c:	cmp    rax,r13
  40aa6f:	jbe    40a9c0 <_start@@Base+0x4a80>
  40aa75:	movabs rcx,0x6d61696e5f636860
  40aa7f:	cmp    rax,rcx
  40aa82:	ja     40ab70 <_start@@Base+0x4c30>
  40aa88:	movabs rdx,0x6368617261637465
  40aa92:	cmp    rax,rdx
  40aa95:	jne    40aa05 <_start@@Base+0x4ac5>
  40aa9b:	lea    r8,[r15+0x8]
  40aa9f:	mov    r10,rbx
  40aaa2:	sub    r10,r8
  40aaa5:	cmp    r10,0x7
  40aaa9:	jbe    40aef0 <_start@@Base+0x4fb0>
  40aaaf:	movbe  rax,QWORD PTR [r15+0x8]
  40aab5:	mov    rcx,rax
  40aab8:	movabs rdx,0x72735f7479706500
  40aac2:	xor    cl,cl
  40aac4:	cmp    rcx,rdx
  40aac7:	je     40b0a0 <_start@@Base+0x5160>
  40aacd:	movabs rdx,0xffff000000000000
  40aad7:	and    rax,rdx
  40aada:	movabs rdx,0x7273000000000000
  40aae4:	cmp    rax,rdx
  40aae7:	je     40af30 <_start@@Base+0x4ff0>
  40aaed:	nop    DWORD PTR [rax]
  40aaf0:	mov    rdx,rbx
  40aaf3:	mov    rsi,r8
  40aaf6:	mov    rdi,rbp
  40aaf9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40aafe:	jmp    40aa13 <_start@@Base+0x4ad3>
  40ab03:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab08:	mov    eax,DWORD PTR [rbp+0x20]
  40ab0b:	test   eax,eax
  40ab0d:	je     40afa8 <_start@@Base+0x5068>
  40ab13:	mov    ecx,0x21
  40ab18:	mov    rdx,rbx
  40ab1b:	mov    rsi,r15
  40ab1e:	mov    rdi,rbp
  40ab21:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40ab26:	mov    rdi,QWORD PTR [rsp+0x28]
  40ab2b:	xor    rdi,QWORD PTR fs:0x28
  40ab34:	jne    40b238 <_start@@Base+0x52f8>
  40ab3a:	add    rsp,0x38
  40ab3e:	pop    rbx
  40ab3f:	pop    rbp
  40ab40:	pop    r12
  40ab42:	pop    r13
  40ab44:	pop    r14
  40ab46:	pop    r15
  40ab48:	ret    
  40ab49:	nop    DWORD PTR [rax+0x0]
  40ab50:	xor    r8d,r8d
  40ab53:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab58:	mov    rsi,rbx
  40ab5b:	mov    rdi,r15
  40ab5e:	call   406050 <_start@@Base+0x110>
  40ab63:	jmp    40aa6c <_start@@Base+0x4b2c>
  40ab68:	nop    DWORD PTR [rax+rax*1+0x0]
  40ab70:	movabs rcx,0x6d61696e5f636861
  40ab7a:	cmp    rax,rcx
  40ab7d:	je     40adf0 <_start@@Base+0x4eb0>
  40ab83:	movabs rdi,0x736964655f6b6963
  40ab8d:	cmp    rax,rdi
  40ab90:	jne    40aa05 <_start@@Base+0x4ac5>
  40ab96:	lea    r8,[r15+0x8]
  40ab9a:	mov    r10,rbx
  40ab9d:	sub    r10,r8
  40aba0:	cmp    r10,0x7
  40aba4:	ja     40af20 <_start@@Base+0x4fe0>
  40abaa:	mov    rdi,r8
  40abad:	mov    rsi,rbx
  40abb0:	mov    QWORD PTR [rsp+0x8],r8
  40abb5:	call   406050 <_start@@Base+0x110>
  40abba:	mov    r8,QWORD PTR [rsp+0x8]
  40abbf:	mov    rcx,rax
  40abc2:	movabs rdx,0x6b5f747970650000
  40abcc:	xor    cx,cx
  40abcf:	cmp    rcx,rdx
  40abd2:	je     40b118 <_start@@Base+0x51d8>
  40abd8:	movabs rdx,0xff00000000000000
  40abe2:	and    rax,rdx
  40abe5:	movabs rdx,0x6b00000000000000
  40abef:	cmp    rax,rdx
  40abf2:	jne    40aaf0 <_start@@Base+0x4bb0>
  40abf8:	cmp    r10,0x1
  40abfc:	jle    40aaf0 <_start@@Base+0x4bb0>
  40ac02:	mov    rsi,r8
  40ac05:	mov    ecx,0x1
  40ac0a:	mov    rdx,rbx
  40ac0d:	mov    rdi,rbp
  40ac10:	mov    QWORD PTR [rsp+0x8],r8
  40ac15:	call   409080 <_start@@Base+0x3140>
  40ac1a:	mov    r8,QWORD PTR [rsp+0x8]
  40ac1f:	mov    rsi,rax
  40ac22:	cmp    r8,rax
  40ac25:	je     40aaf0 <_start@@Base+0x4bb0>
  40ac2b:	lea    rax,[rip+0x154e]        # 40c180 <_start@@Base+0x6240>
  40ac32:	sub    rsp,0x8
  40ac36:	mov    ecx,0x2
  40ac3b:	mov    r8d,0x5
  40ac41:	mov    rdx,rbx
  40ac44:	mov    rdi,rbp
  40ac47:	push   rax
  40ac48:	mov    r9,QWORD PTR [rsp+0x30]
  40ac4d:	call   41e6f0 <flatcc_json_parser_union@@Base>
  40ac52:	pop    rcx
  40ac53:	pop    rsi
  40ac54:	jmp    40aa13 <_start@@Base+0x4ad3>
  40ac59:	nop    DWORD PTR [rax+0x0]
  40ac60:	add    r15,0x1
  40ac64:	mov    r8,rbx
  40ac67:	mov    DWORD PTR [rbp+0x14],0x0
  40ac6e:	sub    r8,r15
  40ac71:	jmp    40aa5d <_start@@Base+0x4b1d>
  40ac76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac80:	lea    r8,[r15+0x8]
  40ac84:	mov    r10,rbx
  40ac87:	sub    r10,r8
  40ac8a:	cmp    r10,0x7
  40ac8e:	jbe    40aea8 <_start@@Base+0x4f68>
  40ac94:	movbe  rax,QWORD PTR [r15+0x8]
  40ac9a:	mov    rcx,rax
  40ac9d:	movabs rdx,0x73745f7479706500
  40aca7:	xor    cl,cl
  40aca9:	cmp    rcx,rdx
  40acac:	je     40afe0 <_start@@Base+0x50a0>
  40acb2:	movabs rdx,0xffff000000000000
  40acbc:	and    rax,rdx
  40acbf:	movabs rdx,0x7374000000000000
  40acc9:	cmp    rax,rdx
  40accc:	jne    40aaf0 <_start@@Base+0x4bb0>
  40acd2:	cmp    r10,0x2
  40acd6:	jle    40aaf0 <_start@@Base+0x4bb0>
  40acdc:	mov    rsi,r8
  40acdf:	mov    ecx,0x2
  40ace4:	mov    rdx,rbx
  40ace7:	mov    rdi,rbp
  40acea:	mov    QWORD PTR [rsp+0x8],r8
  40acef:	call   409080 <_start@@Base+0x3140>
  40acf4:	mov    r8,QWORD PTR [rsp+0x8]
  40acf9:	mov    rsi,rax
  40acfc:	cmp    r8,rax
  40acff:	je     40aaf0 <_start@@Base+0x4bb0>
  40ad05:	lea    rax,[rip+0x1474]        # 40c180 <_start@@Base+0x6240>
  40ad0c:	sub    rsp,0x8
  40ad10:	mov    r8d,0x3
  40ad16:	mov    ecx,0x1
  40ad1b:	mov    rdx,rbx
  40ad1e:	mov    rdi,rbp
  40ad21:	push   rax
  40ad22:	mov    r9,QWORD PTR [rsp+0x30]
  40ad27:	call   41e6f0 <flatcc_json_parser_union@@Base>
  40ad2c:	pop    r10
  40ad2e:	pop    r11
  40ad30:	jmp    40aa13 <_start@@Base+0x4ad3>
  40ad35:	nop    DWORD PTR [rax]
  40ad38:	lea    r8,[r15+0x8]
  40ad3c:	mov    r10,rbx
  40ad3f:	sub    r10,r8
  40ad42:	cmp    r10,0x7
  40ad46:	ja     40af10 <_start@@Base+0x4fd0>
  40ad4c:	mov    rdi,r8
  40ad4f:	mov    rsi,rbx
  40ad52:	mov    QWORD PTR [rsp+0x8],r8
  40ad57:	call   406050 <_start@@Base+0x110>
  40ad5c:	mov    r8,QWORD PTR [rsp+0x8]
  40ad61:	movabs rdx,0xffff000000000000
  40ad6b:	and    rax,rdx
  40ad6e:	movabs rdx,0x7065000000000000
  40ad78:	cmp    rax,rdx
  40ad7b:	jne    40aaf0 <_start@@Base+0x4bb0>
  40ad81:	cmp    r10,0x2
  40ad85:	jle    40aaf0 <_start@@Base+0x4bb0>
  40ad8b:	mov    rsi,r8
  40ad8e:	mov    ecx,0x2
  40ad93:	mov    rdx,rbx
  40ad96:	mov    rdi,rbp
  40ad99:	mov    QWORD PTR [rsp+0x8],r8
  40ad9e:	call   409080 <_start@@Base+0x3140>
  40ada3:	mov    r8,QWORD PTR [rsp+0x8]
  40ada8:	mov    rsi,rax
  40adab:	cmp    r8,rax
  40adae:	je     40aaf0 <_start@@Base+0x4bb0>
  40adb4:	lea    rax,[rip+0x13c5]        # 40c180 <_start@@Base+0x6240>
  40adbb:	mov    r8d,0x7
  40adc1:	mov    ecx,0x3
  40adc6:	mov    rdx,rbx
  40adc9:	mov    rdi,rbp
  40adcc:	push   rax
  40adcd:	lea    rax,[rip+0x2e52c]        # 439300 <__data_start@@Base+0x240>
  40add4:	push   rax
  40add5:	mov    r9,QWORD PTR [rsp+0x30]
  40adda:	call   41e830 <flatcc_json_parser_union_type@@Base>
  40addf:	pop    r8
  40ade1:	pop    r9
  40ade3:	jmp    40aa13 <_start@@Base+0x4ad3>
  40ade8:	nop    DWORD PTR [rax+rax*1+0x0]
  40adf0:	lea    r8,[r15+0x8]
  40adf4:	mov    r10,rbx
  40adf7:	sub    r10,r8
  40adfa:	cmp    r10,0x7
  40adfe:	ja     40af98 <_start@@Base+0x5058>
  40ae04:	mov    rdi,r8
  40ae07:	mov    rsi,rbx
  40ae0a:	mov    QWORD PTR [rsp+0x8],r8
  40ae0f:	call   406050 <_start@@Base+0x110>
  40ae14:	mov    r8,QWORD PTR [rsp+0x8]
  40ae19:	movabs rdx,0x7261637465725f74
  40ae23:	cmp    rax,rdx
  40ae26:	je     40b180 <_start@@Base+0x5240>
  40ae2c:	xor    ax,ax
  40ae2f:	movabs rdx,0x7261637465720000
  40ae39:	cmp    rax,rdx
  40ae3c:	jne    40aaf0 <_start@@Base+0x4bb0>
  40ae42:	cmp    r10,0x6
  40ae46:	jle    40aaf0 <_start@@Base+0x4bb0>
  40ae4c:	mov    rsi,r8
  40ae4f:	mov    ecx,0x6
  40ae54:	mov    rdx,rbx
  40ae57:	mov    rdi,rbp
  40ae5a:	mov    QWORD PTR [rsp+0x8],r8
  40ae5f:	call   409080 <_start@@Base+0x3140>
  40ae64:	mov    r8,QWORD PTR [rsp+0x8]
  40ae69:	mov    rsi,rax
  40ae6c:	cmp    r8,rax
  40ae6f:	je     40aaf0 <_start@@Base+0x4bb0>
  40ae75:	lea    rax,[rip+0x1304]        # 40c180 <_start@@Base+0x6240>
  40ae7c:	sub    rsp,0x8
  40ae80:	mov    r8d,0x1
  40ae86:	xor    ecx,ecx
  40ae88:	mov    rdx,rbx
  40ae8b:	mov    rdi,rbp
  40ae8e:	push   rax
  40ae8f:	mov    r9,QWORD PTR [rsp+0x30]
  40ae94:	call   41e6f0 <flatcc_json_parser_union@@Base>
  40ae99:	pop    r9
  40ae9b:	pop    r10
  40ae9d:	jmp    40aa13 <_start@@Base+0x4ad3>
  40aea2:	nop    WORD PTR [rax+rax*1+0x0]
  40aea8:	mov    rdi,r8
  40aeab:	mov    rsi,rbx
  40aeae:	mov    QWORD PTR [rsp+0x8],r8
  40aeb3:	call   406050 <_start@@Base+0x110>
  40aeb8:	mov    r8,QWORD PTR [rsp+0x8]
  40aebd:	jmp    40ac9a <_start@@Base+0x4d5a>
  40aec2:	nop    WORD PTR [rax+rax*1+0x0]
  40aec8:	mov    rsi,r15
  40aecb:	mov    ecx,0x5
  40aed0:	mov    rdx,rbx
  40aed3:	mov    rdi,rbp
  40aed6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40aedb:	mov    r8,rbx
  40aede:	mov    r15,rax
  40aee1:	sub    r8,rax
  40aee4:	jmp    40aa5d <_start@@Base+0x4b1d>
  40aee9:	nop    DWORD PTR [rax+0x0]
  40aef0:	mov    rdi,r8
  40aef3:	mov    rsi,rbx
  40aef6:	mov    QWORD PTR [rsp+0x8],r8
  40aefb:	call   406050 <_start@@Base+0x110>
  40af00:	mov    r8,QWORD PTR [rsp+0x8]
  40af05:	jmp    40aab5 <_start@@Base+0x4b75>
  40af0a:	nop    WORD PTR [rax+rax*1+0x0]
  40af10:	movbe  rax,QWORD PTR [r15+0x8]
  40af16:	jmp    40ad61 <_start@@Base+0x4e21>
  40af1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af20:	movbe  rax,QWORD PTR [r15+0x8]
  40af26:	jmp    40abbf <_start@@Base+0x4c7f>
  40af2b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af30:	cmp    r10,0x2
  40af34:	jle    40aaf0 <_start@@Base+0x4bb0>
  40af3a:	mov    rsi,r8
  40af3d:	mov    ecx,0x2
  40af42:	mov    rdx,rbx
  40af45:	mov    rdi,rbp
  40af48:	mov    QWORD PTR [rsp+0x8],r8
  40af4d:	call   409080 <_start@@Base+0x3140>
  40af52:	mov    r8,QWORD PTR [rsp+0x8]
  40af57:	mov    rsi,rax
  40af5a:	cmp    r8,rax
  40af5d:	je     40aaf0 <_start@@Base+0x4bb0>
  40af63:	lea    rax,[rip+0x1216]        # 40c180 <_start@@Base+0x6240>
  40af6a:	sub    rsp,0x8
  40af6e:	mov    ecx,0x4
  40af73:	mov    rdx,rbx
  40af76:	mov    r8d,0x9
  40af7c:	mov    rdi,rbp
  40af7f:	push   rax
  40af80:	mov    r9,QWORD PTR [rsp+0x30]
  40af85:	call   41eaa0 <flatcc_json_parser_union_vector@@Base>
  40af8a:	pop    rdx
  40af8b:	pop    rcx
  40af8c:	jmp    40aa13 <_start@@Base+0x4ad3>
  40af91:	nop    DWORD PTR [rax+0x0]
  40af98:	movbe  rax,QWORD PTR [r15+0x8]
  40af9e:	jmp    40ae19 <_start@@Base+0x4ed9>
  40afa3:	nop    DWORD PTR [rax+rax*1+0x0]
  40afa8:	mov    rcx,QWORD PTR [rsp+0x20]
  40afad:	mov    rdx,rbx
  40afb0:	mov    rsi,r15
  40afb3:	mov    rdi,rbp
  40afb6:	call   41e690 <flatcc_json_parser_finalize_unions@@Base>
  40afbb:	mov    rdi,QWORD PTR [rbp+0x0]
  40afbf:	mov    r15,rax
  40afc2:	call   417da0 <flatcc_builder_end_table@@Base>
  40afc7:	mov    edx,eax
  40afc9:	mov    DWORD PTR [r14],eax
  40afcc:	mov    rax,r15
  40afcf:	test   edx,edx
  40afd1:	je     40ab13 <_start@@Base+0x4bd3>
  40afd7:	jmp    40ab26 <_start@@Base+0x4be6>
  40afdc:	nop    DWORD PTR [rax+0x0]
  40afe0:	cmp    r10,0x7
  40afe4:	jle    40aaf0 <_start@@Base+0x4bb0>
  40afea:	mov    rsi,r8
  40afed:	mov    ecx,0x7
  40aff2:	mov    rdx,rbx
  40aff5:	mov    rdi,rbp
  40aff8:	mov    QWORD PTR [rsp+0x8],r8
  40affd:	call   409080 <_start@@Base+0x3140>
  40b002:	mov    r8,QWORD PTR [rsp+0x8]
  40b007:	mov    rsi,rax
  40b00a:	cmp    r8,rax
  40b00d:	je     40aaf0 <_start@@Base+0x4bb0>
  40b013:	lea    rax,[rip+0x1166]        # 40c180 <_start@@Base+0x6240>
  40b01a:	mov    rdx,rbx
  40b01d:	mov    r8d,0x3
  40b023:	mov    ecx,0x1
  40b028:	mov    rdi,rbp
  40b02b:	push   rax
  40b02c:	lea    rax,[rip+0x2e2ed]        # 439320 <__data_start@@Base+0x260>
  40b033:	push   rax
  40b034:	mov    r9,QWORD PTR [rsp+0x30]
  40b039:	call   41e830 <flatcc_json_parser_union_type@@Base>
  40b03e:	pop    r15
  40b040:	pop    rdx
  40b041:	jmp    40aa13 <_start@@Base+0x4ad3>
  40b046:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b050:	mov    rsi,r15
  40b053:	mov    ecx,0x5
  40b058:	mov    rdx,rbx
  40b05b:	mov    rdi,rbp
  40b05e:	call   409080 <_start@@Base+0x3140>
  40b063:	cmp    r15,rax
  40b066:	mov    rsi,rax
  40b069:	je     40aa05 <_start@@Base+0x4ac5>
  40b06f:	lea    rax,[rip+0x110a]        # 40c180 <_start@@Base+0x6240>
  40b076:	sub    rsp,0x8
  40b07a:	mov    rdi,rbp
  40b07d:	mov    r8d,0x7
  40b083:	mov    ecx,0x3
  40b088:	mov    rdx,rbx
  40b08b:	push   rax
  40b08c:	mov    r9,QWORD PTR [rsp+0x30]
  40b091:	call   41e6f0 <flatcc_json_parser_union@@Base>
  40b096:	pop    rsi
  40b097:	pop    rdi
  40b098:	jmp    40aa13 <_start@@Base+0x4ad3>
  40b09d:	nop    DWORD PTR [rax]
  40b0a0:	cmp    r10,0x7
  40b0a4:	jle    40aaf0 <_start@@Base+0x4bb0>
  40b0aa:	mov    rsi,r8
  40b0ad:	mov    ecx,0x7
  40b0b2:	mov    rdx,rbx
  40b0b5:	mov    rdi,rbp
  40b0b8:	mov    QWORD PTR [rsp+0x8],r8
  40b0bd:	call   409080 <_start@@Base+0x3140>
  40b0c2:	mov    r8,QWORD PTR [rsp+0x8]
  40b0c7:	mov    rsi,rax
  40b0ca:	cmp    r8,rax
  40b0cd:	je     40aaf0 <_start@@Base+0x4bb0>
  40b0d3:	lea    rax,[rip+0xffffffffffffb096]        # 406170 <_start@@Base+0x230>
  40b0da:	sub    rsp,0x8
  40b0de:	mov    r8d,0x9
  40b0e4:	mov    ecx,0x4
  40b0e9:	mov    rdx,rbx
  40b0ec:	mov    rdi,rbp
  40b0ef:	push   rax
  40b0f0:	lea    rax,[rip+0x1089]        # 40c180 <_start@@Base+0x6240>
  40b0f7:	push   rax
  40b0f8:	lea    rax,[rip+0x2e1e1]        # 4392e0 <__data_start@@Base+0x220>
  40b0ff:	push   rax
  40b100:	mov    r9,QWORD PTR [rsp+0x40]
  40b105:	call   41eb80 <flatcc_json_parser_union_type_vector@@Base>
  40b10a:	add    rsp,0x20
  40b10e:	jmp    40aa13 <_start@@Base+0x4ad3>
  40b113:	nop    DWORD PTR [rax+rax*1+0x0]
  40b118:	cmp    r10,0x6
  40b11c:	jle    40aaf0 <_start@@Base+0x4bb0>
  40b122:	mov    rsi,r8
  40b125:	mov    ecx,0x6
  40b12a:	mov    rdx,rbx
  40b12d:	mov    rdi,rbp
  40b130:	mov    QWORD PTR [rsp+0x8],r8
  40b135:	call   409080 <_start@@Base+0x3140>
  40b13a:	mov    r8,QWORD PTR [rsp+0x8]
  40b13f:	mov    rsi,rax
  40b142:	cmp    r8,rax
  40b145:	je     40aaf0 <_start@@Base+0x4bb0>
  40b14b:	lea    rax,[rip+0x102e]        # 40c180 <_start@@Base+0x6240>
  40b152:	mov    r8d,0x5
  40b158:	mov    rdi,rbp
  40b15b:	mov    ecx,0x2
  40b160:	mov    rdx,rbx
  40b163:	push   rax
  40b164:	lea    rax,[rip+0x2e135]        # 4392a0 <__data_start@@Base+0x1e0>
  40b16b:	push   rax
  40b16c:	mov    r9,QWORD PTR [rsp+0x30]
  40b171:	call   41e830 <flatcc_json_parser_union_type@@Base>
  40b176:	pop    rdi
  40b177:	pop    r8
  40b179:	jmp    40aa13 <_start@@Base+0x4ad3>
  40b17e:	xchg   ax,ax
  40b180:	lea    r8,[r15+0x10]
  40b184:	mov    r10,rbx
  40b187:	sub    r10,r8
  40b18a:	cmp    r10,0x7
  40b18e:	ja     40b22d <_start@@Base+0x52ed>
  40b194:	mov    rdi,r8
  40b197:	mov    rsi,rbx
  40b19a:	mov    QWORD PTR [rsp+0x8],r8
  40b19f:	call   406050 <_start@@Base+0x110>
  40b1a4:	mov    r8,QWORD PTR [rsp+0x8]
  40b1a9:	movabs rdx,0xffffff0000000000
  40b1b3:	and    rax,rdx
  40b1b6:	movabs rdx,0x7970650000000000
  40b1c0:	cmp    rax,rdx
  40b1c3:	jne    40aaf0 <_start@@Base+0x4bb0>
  40b1c9:	cmp    r10,0x3
  40b1cd:	jle    40aaf0 <_start@@Base+0x4bb0>
  40b1d3:	mov    rsi,r8
  40b1d6:	mov    ecx,0x3
  40b1db:	mov    rdx,rbx
  40b1de:	mov    rdi,rbp
  40b1e1:	mov    QWORD PTR [rsp+0x8],r8
  40b1e6:	call   409080 <_start@@Base+0x3140>
  40b1eb:	mov    r8,QWORD PTR [rsp+0x8]
  40b1f0:	mov    rsi,rax
  40b1f3:	cmp    r8,rax
  40b1f6:	je     40aaf0 <_start@@Base+0x4bb0>
  40b1fc:	lea    rax,[rip+0xf7d]        # 40c180 <_start@@Base+0x6240>
  40b203:	mov    r8d,0x1
  40b209:	xor    ecx,ecx
  40b20b:	mov    rdx,rbx
  40b20e:	mov    rdi,rbp
  40b211:	push   rax
  40b212:	lea    rax,[rip+0x2e0a7]        # 4392c0 <__data_start@@Base+0x200>
  40b219:	push   rax
  40b21a:	mov    r9,QWORD PTR [rsp+0x30]
  40b21f:	call   41e830 <flatcc_json_parser_union_type@@Base>
  40b224:	pop    r11
  40b226:	pop    r15
  40b228:	jmp    40aa13 <_start@@Base+0x4ad3>
  40b22d:	movbe  rax,QWORD PTR [r15+0x10]
  40b233:	jmp    40b1a9 <_start@@Base+0x5269>
  40b238:	call   405070 <__stack_chk_fail@plt>
  40b23d:	nop    DWORD PTR [rax]
  40b240:	push   r15
  40b242:	push   r14
  40b244:	mov    r15,rdx
  40b247:	push   r13
  40b249:	push   r12
  40b24b:	push   rbp
  40b24c:	push   rbx
  40b24d:	mov    rbx,rdi
  40b250:	sub    rsp,0x48
  40b254:	mov    rax,QWORD PTR fs:0x28
  40b25d:	mov    QWORD PTR [rsp+0x38],rax
  40b262:	xor    eax,eax
  40b264:	cmp    rsi,rdx
  40b267:	je     40b26e <_start@@Base+0x532e>
  40b269:	cmp    BYTE PTR [rsi],0x7b
  40b26c:	je     40b2ae <_start@@Base+0x536e>
  40b26e:	mov    rdx,r15
  40b271:	mov    ecx,0x15
  40b276:	mov    rdi,rbx
  40b279:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b27e:	mov    r15,rax
  40b281:	nop    DWORD PTR [rax+0x0]
  40b288:	mov    rdi,QWORD PTR [rsp+0x38]
  40b28d:	xor    rdi,QWORD PTR fs:0x28
  40b296:	mov    rax,r15
  40b299:	jne    40ba17 <_start@@Base+0x5ad7>
  40b29f:	add    rsp,0x48
  40b2a3:	pop    rbx
  40b2a4:	pop    rbp
  40b2a5:	pop    r12
  40b2a7:	pop    r13
  40b2a9:	pop    r14
  40b2ab:	pop    r15
  40b2ad:	ret    
  40b2ae:	lea    r13,[rsi+0x1]
  40b2b2:	mov    rax,rdx
  40b2b5:	mov    r12,rcx
  40b2b8:	sub    rax,r13
  40b2bb:	cmp    rax,0x1
  40b2bf:	jle    40b2cd <_start@@Base+0x538d>
  40b2c1:	cmp    BYTE PTR [rsi+0x1],0x20
  40b2c5:	jg     40b2de <_start@@Base+0x539e>
  40b2c7:	je     40b9de <_start@@Base+0x5a9e>
  40b2cd:	mov    rsi,r13
  40b2d0:	mov    rdx,r15
  40b2d3:	mov    rdi,rbx
  40b2d6:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40b2db:	mov    r13,rax
  40b2de:	cmp    r15,r13
  40b2e1:	je     40b2ee <_start@@Base+0x53ae>
  40b2e3:	cmp    BYTE PTR [r13+0x0],0x7d
  40b2e8:	je     40ba00 <_start@@Base+0x5ac0>
  40b2ee:	lea    rax,[rsp+0x2a]
  40b2f3:	movabs rbp,0xff00000000000000
  40b2fd:	mov    QWORD PTR [rsp+0x18],rax
  40b302:	lea    rax,[rsp+0x30]
  40b307:	mov    QWORD PTR [rsp+0x8],rax
  40b30c:	lea    rax,[rsp+0x2c]
  40b311:	mov    QWORD PTR [rsp+0x10],rax
  40b316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b320:	cmp    r15,r13
  40b323:	je     40b3b0 <_start@@Base+0x5470>
  40b329:	movzx  eax,BYTE PTR [r13+0x0]
  40b32e:	cmp    al,0x22
  40b330:	je     40b600 <_start@@Base+0x56c0>
  40b336:	cmp    al,0x2e
  40b338:	je     40b810 <_start@@Base+0x58d0>
  40b33e:	mov    rcx,r15
  40b341:	mov    DWORD PTR [rbx+0x14],0x1
  40b348:	sub    rcx,r13
  40b34b:	cmp    rcx,0x7
  40b34f:	jbe    40b548 <_start@@Base+0x5608>
  40b355:	movbe  rax,QWORD PTR [r13+0x0]
  40b35b:	and    rax,rbp
  40b35e:	movabs rdx,0x6200000000000000
  40b368:	cmp    rax,rdx
  40b36b:	je     40b420 <_start@@Base+0x54e0>
  40b371:	movabs rdx,0x6100000000000000
  40b37b:	cmp    rax,rdx
  40b37e:	jne    40b3b0 <_start@@Base+0x5470>
  40b380:	cmp    rcx,0x1
  40b384:	jle    40b3b0 <_start@@Base+0x5470>
  40b386:	mov    r8d,DWORD PTR [rbx+0x14]
  40b38a:	test   r8d,r8d
  40b38d:	je     40b6b8 <_start@@Base+0x5778>
  40b393:	movzx  eax,BYTE PTR [r13+0x1]
  40b398:	cmp    al,0x20
  40b39a:	jle    40b838 <_start@@Base+0x58f8>
  40b3a0:	cmp    al,0x3a
  40b3a2:	je     40b838 <_start@@Base+0x58f8>
  40b3a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b3b0:	mov    rdx,r15
  40b3b3:	mov    rsi,r13
  40b3b6:	mov    rdi,rbx
  40b3b9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40b3be:	mov    rdx,r15
  40b3c1:	sub    rdx,rax
  40b3c4:	cmp    rdx,0x1
  40b3c8:	jle    40b3d5 <_start@@Base+0x5495>
  40b3ca:	cmp    BYTE PTR [rax],0x20
  40b3cd:	jg     40b3e3 <_start@@Base+0x54a3>
  40b3cf:	je     40b620 <_start@@Base+0x56e0>
  40b3d5:	mov    rdx,r15
  40b3d8:	mov    rsi,rax
  40b3db:	mov    rdi,rbx
  40b3de:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40b3e3:	cmp    r15,rax
  40b3e6:	je     40b288 <_start@@Base+0x5348>
  40b3ec:	movzx  edx,BYTE PTR [rax]
  40b3ef:	cmp    dl,0x2c
  40b3f2:	je     40b638 <_start@@Base+0x56f8>
  40b3f8:	cmp    dl,0x7d
  40b3fb:	mov    ecx,0xa
  40b400:	je     40b510 <_start@@Base+0x55d0>
  40b406:	mov    rdx,r15
  40b409:	mov    rsi,rax
  40b40c:	mov    rdi,rbx
  40b40f:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b414:	mov    r15,rax
  40b417:	jmp    40b288 <_start@@Base+0x5348>
  40b41c:	nop    DWORD PTR [rax+0x0]
  40b420:	cmp    rcx,0x1
  40b424:	jle    40b3b0 <_start@@Base+0x5470>
  40b426:	mov    r10d,DWORD PTR [rbx+0x14]
  40b42a:	test   r10d,r10d
  40b42d:	je     40b7c0 <_start@@Base+0x5880>
  40b433:	movzx  eax,BYTE PTR [r13+0x1]
  40b438:	cmp    al,0x20
  40b43a:	jle    40b444 <_start@@Base+0x5504>
  40b43c:	cmp    al,0x3a
  40b43e:	jne    40b3b0 <_start@@Base+0x5470>
  40b444:	lea    rsi,[r13+0x1]
  40b448:	mov    DWORD PTR [rbx+0x14],0x0
  40b44f:	mov    rax,r15
  40b452:	sub    rax,rsi
  40b455:	cmp    rax,0x1
  40b459:	jle    40b466 <_start@@Base+0x5526>
  40b45b:	cmp    BYTE PTR [rsi],0x20
  40b45e:	jg     40b474 <_start@@Base+0x5534>
  40b460:	je     40b958 <_start@@Base+0x5a18>
  40b466:	mov    rdx,r15
  40b469:	mov    rdi,rbx
  40b46c:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40b471:	mov    rsi,rax
  40b474:	cmp    r15,rsi
  40b477:	je     40b482 <_start@@Base+0x5542>
  40b479:	cmp    BYTE PTR [rsi],0x3a
  40b47c:	je     40b99d <_start@@Base+0x5a5d>
  40b482:	mov    ecx,0x4
  40b487:	mov    rdx,r15
  40b48a:	mov    rdi,rbx
  40b48d:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b492:	mov    r14,rax
  40b495:	cmp    r14,r13
  40b498:	je     40b3b0 <_start@@Base+0x5470>
  40b49e:	cmp    r15,r14
  40b4a1:	mov    BYTE PTR [rsp+0x2a],0x0
  40b4a6:	mov    QWORD PTR [rsp+0x30],0x0
  40b4af:	mov    DWORD PTR [rsp+0x2c],0x0
  40b4b7:	je     40b910 <_start@@Base+0x59d0>
  40b4bd:	mov    r8,QWORD PTR [rsp+0x8]
  40b4c2:	mov    rcx,QWORD PTR [rsp+0x10]
  40b4c7:	mov    rdx,r15
  40b4ca:	mov    rsi,r14
  40b4cd:	mov    rdi,rbx
  40b4d0:	call   41df90 <flatcc_json_parser_integer@@Base>
  40b4d5:	cmp    r14,rax
  40b4d8:	je     40b910 <_start@@Base+0x59d0>
  40b4de:	mov    r9d,DWORD PTR [rsp+0x2c]
  40b4e3:	mov    rdx,QWORD PTR [rsp+0x30]
  40b4e8:	test   r9d,r9d
  40b4eb:	mov    ecx,edx
  40b4ed:	je     40b7d8 <_start@@Base+0x5898>
  40b4f3:	neg    ecx
  40b4f5:	cmp    rdx,0x80
  40b4fc:	ja     40b880 <_start@@Base+0x5940>
  40b502:	mov    BYTE PTR [r12+0x2],cl
  40b507:	jmp    40b3be <_start@@Base+0x547e>
  40b50c:	nop    DWORD PTR [rax+0x0]
  40b510:	lea    rsi,[rax+0x1]
  40b514:	mov    rdx,r15
  40b517:	sub    rdx,rsi
  40b51a:	cmp    rdx,0x1
  40b51e:	jle    40b530 <_start@@Base+0x55f0>
  40b520:	cmp    BYTE PTR [rax+0x1],0x20
  40b524:	jg     40b7b0 <_start@@Base+0x5870>
  40b52a:	je     40b850 <_start@@Base+0x5910>
  40b530:	mov    rdx,r15
  40b533:	mov    rdi,rbx
  40b536:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40b53b:	mov    r15,rax
  40b53e:	jmp    40b288 <_start@@Base+0x5348>
  40b543:	nop    DWORD PTR [rax+rax*1+0x0]
  40b548:	lea    rdx,[rip+0x1fad9]        # 42b028 <_IO_stdin_used@@Base+0x28>
  40b54f:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40b553:	add    rax,rdx
  40b556:	jmp    rax
  40b558:	nop    DWORD PTR [rax+rax*1+0x0]
  40b560:	movsx  rsi,BYTE PTR [r13+0x6]
  40b565:	shl    rsi,0x8
  40b569:	movsx  rdx,BYTE PTR [r13+0x5]
  40b56e:	mov    rax,rdx
  40b571:	shl    rax,0x10
  40b575:	or     rsi,rax
  40b578:	movsx  rdx,BYTE PTR [r13+0x4]
  40b57d:	mov    rax,rdx
  40b580:	shl    rax,0x18
  40b584:	or     rax,rsi
  40b587:	movsx  rdx,BYTE PTR [r13+0x3]
  40b58c:	mov    rsi,rdx
  40b58f:	shl    rsi,0x20
  40b593:	or     rax,rsi
  40b596:	movsx  rdx,BYTE PTR [r13+0x2]
  40b59b:	mov    rsi,rdx
  40b59e:	shl    rsi,0x28
  40b5a2:	or     rsi,rax
  40b5a5:	movsx  rdx,BYTE PTR [r13+0x1]
  40b5aa:	mov    rax,rdx
  40b5ad:	shl    rax,0x30
  40b5b1:	or     rsi,rax
  40b5b4:	movsx  rdx,BYTE PTR [r13+0x0]
  40b5b9:	mov    rax,rdx
  40b5bc:	shl    rax,0x38
  40b5c0:	or     rax,rsi
  40b5c3:	jmp    40b35b <_start@@Base+0x541b>
  40b5c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b5d0:	xor    esi,esi
  40b5d2:	jmp    40b569 <_start@@Base+0x5629>
  40b5d4:	nop    DWORD PTR [rax+0x0]
  40b5d8:	xor    esi,esi
  40b5da:	jmp    40b578 <_start@@Base+0x5638>
  40b5dc:	nop    DWORD PTR [rax+0x0]
  40b5e0:	xor    eax,eax
  40b5e2:	jmp    40b587 <_start@@Base+0x5647>
  40b5e4:	nop    DWORD PTR [rax+0x0]
  40b5e8:	xor    eax,eax
  40b5ea:	jmp    40b596 <_start@@Base+0x5656>
  40b5ec:	nop    DWORD PTR [rax+0x0]
  40b5f0:	xor    esi,esi
  40b5f2:	jmp    40b5a5 <_start@@Base+0x5665>
  40b5f4:	nop    DWORD PTR [rax+0x0]
  40b5f8:	xor    esi,esi
  40b5fa:	jmp    40b5b4 <_start@@Base+0x5674>
  40b5fc:	nop    DWORD PTR [rax+0x0]
  40b600:	add    r13,0x1
  40b604:	mov    rcx,r15
  40b607:	mov    DWORD PTR [rbx+0x14],0x0
  40b60e:	sub    rcx,r13
  40b611:	jmp    40b34b <_start@@Base+0x540b>
  40b616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b620:	cmp    BYTE PTR [rax+0x1],0x20
  40b624:	jle    40b3d5 <_start@@Base+0x5495>
  40b62a:	add    rax,0x1
  40b62e:	jmp    40b3e3 <_start@@Base+0x54a3>
  40b633:	nop    DWORD PTR [rax+rax*1+0x0]
  40b638:	lea    r13,[rax+0x1]
  40b63c:	mov    rdx,r15
  40b63f:	sub    rdx,r13
  40b642:	cmp    rdx,0x1
  40b646:	jle    40b654 <_start@@Base+0x5714>
  40b648:	cmp    BYTE PTR [rax+0x1],0x20
  40b64c:	jg     40b665 <_start@@Base+0x5725>
  40b64e:	je     40b8d8 <_start@@Base+0x5998>
  40b654:	mov    rsi,r13
  40b657:	mov    rdx,r15
  40b65a:	mov    rdi,rbx
  40b65d:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40b662:	mov    r13,rax
  40b665:	cmp    r15,r13
  40b668:	je     40b8ef <_start@@Base+0x59af>
  40b66e:	cmp    BYTE PTR [r13+0x0],0x7d
  40b673:	jne    40b320 <_start@@Base+0x53e0>
  40b679:	lea    rsi,[r13+0x1]
  40b67d:	mov    rax,r15
  40b680:	sub    rax,rsi
  40b683:	cmp    rax,0x1
  40b687:	jle    40b530 <_start@@Base+0x55f0>
  40b68d:	cmp    BYTE PTR [r13+0x1],0x20
  40b692:	jg     40b7b0 <_start@@Base+0x5870>
  40b698:	jne    40b530 <_start@@Base+0x55f0>
  40b69e:	cmp    BYTE PTR [r13+0x2],0x20
  40b6a3:	jle    40b530 <_start@@Base+0x55f0>
  40b6a9:	lea    r15,[r13+0x2]
  40b6ad:	jmp    40b288 <_start@@Base+0x5348>
  40b6b2:	nop    WORD PTR [rax+rax*1+0x0]
  40b6b8:	cmp    BYTE PTR [r13+0x1],0x22
  40b6bd:	jne    40b3b0 <_start@@Base+0x5470>
  40b6c3:	lea    rsi,[r13+0x2]
  40b6c7:	mov    rax,r15
  40b6ca:	sub    rax,rsi
  40b6cd:	cmp    rax,0x1
  40b6d1:	jle    40b6de <_start@@Base+0x579e>
  40b6d3:	cmp    BYTE PTR [rsi],0x20
  40b6d6:	jg     40b6ec <_start@@Base+0x57ac>
  40b6d8:	je     40b940 <_start@@Base+0x5a00>
  40b6de:	mov    rdx,r15
  40b6e1:	mov    rdi,rbx
  40b6e4:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40b6e9:	mov    rsi,rax
  40b6ec:	cmp    r15,rsi
  40b6ef:	je     40b6fa <_start@@Base+0x57ba>
  40b6f1:	cmp    BYTE PTR [rsi],0x3a
  40b6f4:	je     40b96b <_start@@Base+0x5a2b>
  40b6fa:	mov    ecx,0x4
  40b6ff:	mov    rdx,r15
  40b702:	mov    rdi,rbx
  40b705:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b70a:	mov    r14,rax
  40b70d:	cmp    r14,r13
  40b710:	je     40b3b0 <_start@@Base+0x5470>
  40b716:	xor    edi,edi
  40b718:	cmp    r15,r14
  40b71b:	mov    QWORD PTR [rsp+0x30],0x0
  40b724:	mov    WORD PTR [rsp+0x2a],di
  40b729:	mov    DWORD PTR [rsp+0x2c],0x0
  40b731:	je     40b8a0 <_start@@Base+0x5960>
  40b737:	mov    r8,QWORD PTR [rsp+0x8]
  40b73c:	mov    rcx,QWORD PTR [rsp+0x10]
  40b741:	mov    rdx,r15
  40b744:	mov    rsi,r14
  40b747:	mov    rdi,rbx
  40b74a:	call   41df90 <flatcc_json_parser_integer@@Base>
  40b74f:	cmp    r14,rax
  40b752:	je     40b8a0 <_start@@Base+0x5960>
  40b758:	mov    esi,DWORD PTR [rsp+0x2c]
  40b75c:	mov    rdx,QWORD PTR [rsp+0x30]
  40b761:	test   esi,esi
  40b763:	mov    ecx,edx
  40b765:	je     40b780 <_start@@Base+0x5840>
  40b767:	neg    ecx
  40b769:	cmp    rdx,0x8000
  40b770:	ja     40b868 <_start@@Base+0x5928>
  40b776:	mov    WORD PTR [r12],cx
  40b77b:	jmp    40b3be <_start@@Base+0x547e>
  40b780:	cmp    rdx,0x7fff
  40b787:	jbe    40b776 <_start@@Base+0x5836>
  40b789:	mov    ecx,0x7
  40b78e:	mov    rdx,r15
  40b791:	mov    rsi,rax
  40b794:	mov    rdi,rbx
  40b797:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b79c:	cmp    r14,rax
  40b79f:	je     40b8a0 <_start@@Base+0x5960>
  40b7a5:	movzx  ecx,WORD PTR [rsp+0x2a]
  40b7aa:	jmp    40b776 <_start@@Base+0x5836>
  40b7ac:	nop    DWORD PTR [rax+0x0]
  40b7b0:	mov    r15,rsi
  40b7b3:	jmp    40b288 <_start@@Base+0x5348>
  40b7b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40b7c0:	cmp    BYTE PTR [r13+0x1],0x22
  40b7c5:	jne    40b3b0 <_start@@Base+0x5470>
  40b7cb:	lea    rsi,[r13+0x2]
  40b7cf:	jmp    40b44f <_start@@Base+0x550f>
  40b7d4:	nop    DWORD PTR [rax+0x0]
  40b7d8:	cmp    rdx,0x7f
  40b7dc:	jbe    40b502 <_start@@Base+0x55c2>
  40b7e2:	mov    ecx,0x7
  40b7e7:	mov    rdx,r15
  40b7ea:	mov    rsi,rax
  40b7ed:	mov    rdi,rbx
  40b7f0:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b7f5:	cmp    r14,rax
  40b7f8:	je     40b910 <_start@@Base+0x59d0>
  40b7fe:	movzx  ecx,BYTE PTR [rsp+0x2a]
  40b803:	jmp    40b502 <_start@@Base+0x55c2>
  40b808:	nop    DWORD PTR [rax+rax*1+0x0]
  40b810:	mov    ecx,0x5
  40b815:	mov    rsi,r13
  40b818:	mov    rdx,r15
  40b81b:	mov    rdi,rbx
  40b81e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b823:	mov    rcx,r15
  40b826:	mov    r13,rax
  40b829:	sub    rcx,rax
  40b82c:	jmp    40b34b <_start@@Base+0x540b>
  40b831:	nop    DWORD PTR [rax+0x0]
  40b838:	lea    rsi,[r13+0x1]
  40b83c:	mov    DWORD PTR [rbx+0x14],0x0
  40b843:	jmp    40b6c7 <_start@@Base+0x5787>
  40b848:	nop    DWORD PTR [rax+rax*1+0x0]
  40b850:	cmp    BYTE PTR [rax+0x2],0x20
  40b854:	jle    40b530 <_start@@Base+0x55f0>
  40b85a:	lea    r15,[rax+0x2]
  40b85e:	jmp    40b288 <_start@@Base+0x5348>
  40b863:	nop    DWORD PTR [rax+rax*1+0x0]
  40b868:	mov    ecx,0x8
  40b86d:	mov    rdx,r15
  40b870:	mov    rsi,rax
  40b873:	mov    rdi,rbx
  40b876:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b87b:	jmp    40b79c <_start@@Base+0x585c>
  40b880:	mov    ecx,0x8
  40b885:	mov    rdx,r15
  40b888:	mov    rsi,rax
  40b88b:	mov    rdi,rbx
  40b88e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b893:	jmp    40b7f5 <_start@@Base+0x58b5>
  40b898:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8a0:	mov    r8,QWORD PTR [rsp+0x18]
  40b8a5:	lea    rcx,[rip+0x2d8b4]        # 439160 <__data_start@@Base+0xa0>
  40b8ac:	mov    rdx,r15
  40b8af:	mov    rsi,r14
  40b8b2:	mov    rdi,rbx
  40b8b5:	call   409c50 <_start@@Base+0x3d10>
  40b8ba:	cmp    rax,r14
  40b8bd:	je     40b8c8 <_start@@Base+0x5988>
  40b8bf:	cmp    r15,rax
  40b8c2:	jne    40b7a5 <_start@@Base+0x5865>
  40b8c8:	mov    ecx,0x21
  40b8cd:	jmp    40b406 <_start@@Base+0x54c6>
  40b8d2:	nop    WORD PTR [rax+rax*1+0x0]
  40b8d8:	cmp    BYTE PTR [rax+0x2],0x20
  40b8dc:	jle    40b654 <_start@@Base+0x5714>
  40b8e2:	lea    r13,[rax+0x2]
  40b8e6:	cmp    r15,r13
  40b8e9:	jne    40b66e <_start@@Base+0x572e>
  40b8ef:	mov    rdx,r15
  40b8f2:	mov    rsi,r15
  40b8f5:	mov    ecx,0xa
  40b8fa:	mov    rdi,rbx
  40b8fd:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40b902:	mov    r15,rax
  40b905:	jmp    40b288 <_start@@Base+0x5348>
  40b90a:	nop    WORD PTR [rax+rax*1+0x0]
  40b910:	mov    r8,QWORD PTR [rsp+0x18]
  40b915:	lea    rcx,[rip+0x2d864]        # 439180 <__data_start@@Base+0xc0>
  40b91c:	mov    rdx,r15
  40b91f:	mov    rsi,r14
  40b922:	mov    rdi,rbx
  40b925:	call   40a470 <_start@@Base+0x4530>
  40b92a:	cmp    rax,r14
  40b92d:	je     40b8c8 <_start@@Base+0x5988>
  40b92f:	cmp    r15,rax
  40b932:	jne    40b7fe <_start@@Base+0x58be>
  40b938:	jmp    40b8c8 <_start@@Base+0x5988>
  40b93a:	nop    WORD PTR [rax+rax*1+0x0]
  40b940:	cmp    BYTE PTR [rsi+0x1],0x20
  40b944:	jle    40b6de <_start@@Base+0x579e>
  40b94a:	add    rsi,0x1
  40b94e:	jmp    40b6ec <_start@@Base+0x57ac>
  40b953:	nop    DWORD PTR [rax+rax*1+0x0]
  40b958:	cmp    BYTE PTR [rsi+0x1],0x20
  40b95c:	jle    40b466 <_start@@Base+0x5526>
  40b962:	add    rsi,0x1
  40b966:	jmp    40b474 <_start@@Base+0x5534>
  40b96b:	lea    r14,[rsi+0x1]
  40b96f:	mov    rax,r15
  40b972:	sub    rax,r14
  40b975:	cmp    rax,0x1
  40b979:	jle    40b987 <_start@@Base+0x5a47>
  40b97b:	cmp    BYTE PTR [rsi+0x1],0x20
  40b97f:	jg     40b70d <_start@@Base+0x57cd>
  40b985:	je     40b9cf <_start@@Base+0x5a8f>
  40b987:	mov    rsi,r14
  40b98a:	mov    rdx,r15
  40b98d:	mov    rdi,rbx
  40b990:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40b995:	mov    r14,rax
  40b998:	jmp    40b70d <_start@@Base+0x57cd>
  40b99d:	lea    r14,[rsi+0x1]
  40b9a1:	mov    rax,r15
  40b9a4:	sub    rax,r14
  40b9a7:	cmp    rax,0x1
  40b9ab:	jle    40b9b9 <_start@@Base+0x5a79>
  40b9ad:	cmp    BYTE PTR [rsi+0x1],0x20
  40b9b1:	jg     40b495 <_start@@Base+0x5555>
  40b9b7:	je     40b9f1 <_start@@Base+0x5ab1>
  40b9b9:	mov    rsi,r14
  40b9bc:	mov    rdx,r15
  40b9bf:	mov    rdi,rbx
  40b9c2:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40b9c7:	mov    r14,rax
  40b9ca:	jmp    40b495 <_start@@Base+0x5555>
  40b9cf:	cmp    BYTE PTR [rsi+0x2],0x20
  40b9d3:	jle    40b987 <_start@@Base+0x5a47>
  40b9d5:	lea    r14,[rsi+0x2]
  40b9d9:	jmp    40b70d <_start@@Base+0x57cd>
  40b9de:	cmp    BYTE PTR [rsi+0x2],0x20
  40b9e2:	jle    40b2cd <_start@@Base+0x538d>
  40b9e8:	lea    r13,[rsi+0x2]
  40b9ec:	jmp    40b2de <_start@@Base+0x539e>
  40b9f1:	cmp    BYTE PTR [rsi+0x2],0x20
  40b9f5:	jle    40b9b9 <_start@@Base+0x5a79>
  40b9f7:	lea    r14,[rsi+0x2]
  40b9fb:	jmp    40b495 <_start@@Base+0x5555>
  40ba00:	lea    rsi,[r13+0x1]
  40ba04:	mov    rdx,r15
  40ba07:	mov    rdi,rbx
  40ba0a:	call   407030 <_start@@Base+0x10f0>
  40ba0f:	mov    r15,rax
  40ba12:	jmp    40b288 <_start@@Base+0x5348>
  40ba17:	call   405070 <__stack_chk_fail@plt>
  40ba1c:	nop    DWORD PTR [rax+0x0]
  40ba20:	push   r15
  40ba22:	push   r14
  40ba24:	mov    r15,rcx
  40ba27:	push   r13
  40ba29:	push   r12
  40ba2b:	mov    r13,rdx
  40ba2e:	push   rbp
  40ba2f:	push   rbx
  40ba30:	mov    rbx,rdi
  40ba33:	mov    r12,rsi
  40ba36:	mov    edx,0x4
  40ba3b:	mov    esi,0x4
  40ba40:	sub    rsp,0x48
  40ba44:	mov    rdi,QWORD PTR [rdi]
  40ba47:	mov    DWORD PTR [rcx],0x0
  40ba4d:	mov    rax,QWORD PTR fs:0x28
  40ba56:	mov    QWORD PTR [rsp+0x38],rax
  40ba5b:	xor    eax,eax
  40ba5d:	call   416990 <flatcc_builder_start_struct@@Base>
  40ba62:	test   rax,rax
  40ba65:	je     40c0c8 <_start@@Base+0x6188>
  40ba6b:	cmp    r12,r13
  40ba6e:	je     40ba77 <_start@@Base+0x5b37>
  40ba70:	cmp    BYTE PTR [r12],0x7b
  40ba75:	je     40bae9 <_start@@Base+0x5ba9>
  40ba77:	mov    rsi,r12
  40ba7a:	mov    ecx,0x15
  40ba7f:	mov    rdx,r13
  40ba82:	mov    rdi,rbx
  40ba85:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40ba8a:	mov    rsi,rax
  40ba8d:	nop    DWORD PTR [rax]
  40ba90:	cmp    r13,rsi
  40ba93:	je     40bab0 <_start@@Base+0x5b70>
  40ba95:	mov    rdi,QWORD PTR [rbx]
  40ba98:	mov    QWORD PTR [rsp],rsi
  40ba9c:	call   416a40 <flatcc_builder_end_struct@@Base>
  40baa1:	test   eax,eax
  40baa3:	mov    DWORD PTR [r15],eax
  40baa6:	mov    rsi,QWORD PTR [rsp]
  40baaa:	jne    40bac3 <_start@@Base+0x5b83>
  40baac:	nop    DWORD PTR [rax+0x0]
  40bab0:	mov    ecx,0x21
  40bab5:	mov    rdx,r13
  40bab8:	mov    rdi,rbx
  40babb:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40bac0:	mov    rsi,rax
  40bac3:	mov    rbx,QWORD PTR [rsp+0x38]
  40bac8:	xor    rbx,QWORD PTR fs:0x28
  40bad1:	mov    rax,rsi
  40bad4:	jne    40c176 <_start@@Base+0x6236>
  40bada:	add    rsp,0x48
  40bade:	pop    rbx
  40badf:	pop    rbp
  40bae0:	pop    r12
  40bae2:	pop    r13
  40bae4:	pop    r14
  40bae6:	pop    r15
  40bae8:	ret    
  40bae9:	lea    rdi,[r12+0x1]
  40baee:	mov    rbp,rax
  40baf1:	mov    rax,r13
  40baf4:	sub    rax,rdi
  40baf7:	cmp    rax,0x1
  40bafb:	jle    40bb0b <_start@@Base+0x5bcb>
  40bafd:	cmp    BYTE PTR [r12+0x1],0x20
  40bb03:	jg     40bb1c <_start@@Base+0x5bdc>
  40bb05:	je     40c13a <_start@@Base+0x61fa>
  40bb0b:	mov    rsi,rdi
  40bb0e:	mov    rdx,r13
  40bb11:	mov    rdi,rbx
  40bb14:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40bb19:	mov    rdi,rax
  40bb1c:	cmp    r13,rdi
  40bb1f:	je     40bb2a <_start@@Base+0x5bea>
  40bb21:	cmp    BYTE PTR [rdi],0x7d
  40bb24:	je     40c150 <_start@@Base+0x6210>
  40bb2a:	lea    rax,[rsp+0x28]
  40bb2f:	lea    r12,[rip+0x1f532]        # 42b068 <_IO_stdin_used@@Base+0x68>
  40bb36:	mov    QWORD PTR [rsp+0x18],rax
  40bb3b:	lea    rax,[rsp+0x30]
  40bb40:	mov    QWORD PTR [rsp],rax
  40bb44:	lea    rax,[rsp+0x2c]
  40bb49:	mov    QWORD PTR [rsp+0x8],rax
  40bb4e:	xchg   ax,ax
  40bb50:	cmp    r13,rdi
  40bb53:	je     40bd10 <_start@@Base+0x5dd0>
  40bb59:	movzx  eax,BYTE PTR [rdi]
  40bb5c:	cmp    al,0x22
  40bb5e:	je     40bd70 <_start@@Base+0x5e30>
  40bb64:	cmp    al,0x2e
  40bb66:	je     40bfe8 <_start@@Base+0x60a8>
  40bb6c:	mov    DWORD PTR [rbx+0x14],0x1
  40bb73:	mov    rax,r13
  40bb76:	sub    rax,rdi
  40bb79:	cmp    rax,0x7
  40bb7d:	jbe    40bd90 <_start@@Base+0x5e50>
  40bb83:	movbe  rax,QWORD PTR [rdi]
  40bb88:	movabs rdx,0x626f6f6b735f7265
  40bb92:	cmp    rax,rdx
  40bb95:	jne    40bd10 <_start@@Base+0x5dd0>
  40bb9b:	lea    r8,[rdi+0x8]
  40bb9f:	mov    rcx,r13
  40bba2:	sub    rcx,r8
  40bba5:	cmp    rcx,0x7
  40bba9:	ja     40bd28 <_start@@Base+0x5de8>
  40bbaf:	lea    rdx,[rip+0x1f492]        # 42b048 <_IO_stdin_used@@Base+0x48>
  40bbb6:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40bbba:	add    rax,rdx
  40bbbd:	jmp    rax
  40bbbf:	nop
  40bbc0:	movsx  rsi,BYTE PTR [rdi+0xe]
  40bbc5:	shl    rsi,0x8
  40bbc9:	movsx  rdx,BYTE PTR [rdi+0xd]
  40bbce:	mov    rax,rdx
  40bbd1:	shl    rax,0x10
  40bbd5:	or     rsi,rax
  40bbd8:	movsx  rdx,BYTE PTR [rdi+0xc]
  40bbdd:	mov    rax,rdx
  40bbe0:	shl    rax,0x18
  40bbe4:	or     rax,rsi
  40bbe7:	movsx  rdx,BYTE PTR [rdi+0xb]
  40bbec:	mov    rsi,rdx
  40bbef:	shl    rsi,0x20
  40bbf3:	or     rax,rsi
  40bbf6:	movsx  rdx,BYTE PTR [rdi+0xa]
  40bbfb:	mov    rsi,rdx
  40bbfe:	shl    rsi,0x28
  40bc02:	or     rsi,rax
  40bc05:	movsx  rdx,BYTE PTR [rdi+0x9]
  40bc0a:	mov    rax,rdx
  40bc0d:	shl    rax,0x30
  40bc11:	or     rsi,rax
  40bc14:	movsx  rdx,BYTE PTR [rdi+0x8]
  40bc19:	mov    rax,rdx
  40bc1c:	shl    rax,0x38
  40bc20:	or     rax,rsi
  40bc23:	movabs rdx,0xffff000000000000
  40bc2d:	and    rax,rdx
  40bc30:	movabs rdx,0x6164000000000000
  40bc3a:	cmp    rax,rdx
  40bc3d:	jne    40bc49 <_start@@Base+0x5d09>
  40bc3f:	cmp    rcx,0x2
  40bc43:	jg     40bef0 <_start@@Base+0x5fb0>
  40bc49:	mov    rdx,r13
  40bc4c:	mov    rsi,r8
  40bc4f:	mov    rdi,rbx
  40bc52:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40bc57:	mov    rdx,r13
  40bc5a:	sub    rdx,rax
  40bc5d:	cmp    rdx,0x1
  40bc61:	jle    40bc6e <_start@@Base+0x5d2e>
  40bc63:	cmp    BYTE PTR [rax],0x20
  40bc66:	jg     40bc7c <_start@@Base+0x5d3c>
  40bc68:	je     40be40 <_start@@Base+0x5f00>
  40bc6e:	mov    rdx,r13
  40bc71:	mov    rsi,rax
  40bc74:	mov    rdi,rbx
  40bc77:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40bc7c:	cmp    r13,rax
  40bc7f:	je     40be60 <_start@@Base+0x5f20>
  40bc85:	movzx  edx,BYTE PTR [rax]
  40bc88:	cmp    dl,0x2c
  40bc8b:	je     40be70 <_start@@Base+0x5f30>
  40bc91:	cmp    dl,0x7d
  40bc94:	je     40bd38 <_start@@Base+0x5df8>
  40bc9a:	mov    ecx,0xa
  40bc9f:	mov    rsi,rax
  40bca2:	mov    rdx,r13
  40bca5:	mov    rdi,rbx
  40bca8:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40bcad:	mov    rsi,rax
  40bcb0:	jmp    40ba90 <_start@@Base+0x5b50>
  40bcb5:	nop    DWORD PTR [rax]
  40bcb8:	xor    esi,esi
  40bcba:	jmp    40bbc9 <_start@@Base+0x5c89>
  40bcbf:	nop
  40bcc0:	xor    eax,eax
  40bcc2:	jmp    40bbe7 <_start@@Base+0x5ca7>
  40bcc7:	nop    WORD PTR [rax+rax*1+0x0]
  40bcd0:	xor    eax,eax
  40bcd2:	jmp    40bbf6 <_start@@Base+0x5cb6>
  40bcd7:	nop    WORD PTR [rax+rax*1+0x0]
  40bce0:	xor    esi,esi
  40bce2:	jmp    40bc05 <_start@@Base+0x5cc5>
  40bce7:	nop    WORD PTR [rax+rax*1+0x0]
  40bcf0:	xor    esi,esi
  40bcf2:	jmp    40bc14 <_start@@Base+0x5cd4>
  40bcf7:	nop    WORD PTR [rax+rax*1+0x0]
  40bd00:	xor    esi,esi
  40bd02:	jmp    40bbd8 <_start@@Base+0x5c98>
  40bd07:	nop    WORD PTR [rax+rax*1+0x0]
  40bd10:	mov    rsi,rdi
  40bd13:	mov    rdx,r13
  40bd16:	mov    rdi,rbx
  40bd19:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40bd1e:	jmp    40bc57 <_start@@Base+0x5d17>
  40bd23:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd28:	movbe  rax,QWORD PTR [rdi+0x8]
  40bd2e:	jmp    40bc23 <_start@@Base+0x5ce3>
  40bd33:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd38:	lea    rsi,[rax+0x1]
  40bd3c:	mov    rdx,r13
  40bd3f:	sub    rdx,rsi
  40bd42:	cmp    rdx,0x1
  40bd46:	jle    40bd58 <_start@@Base+0x5e18>
  40bd48:	cmp    BYTE PTR [rax+0x1],0x20
  40bd4c:	jg     40ba90 <_start@@Base+0x5b50>
  40bd52:	je     40c048 <_start@@Base+0x6108>
  40bd58:	mov    rdx,r13
  40bd5b:	mov    rdi,rbx
  40bd5e:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40bd63:	mov    rsi,rax
  40bd66:	jmp    40ba90 <_start@@Base+0x5b50>
  40bd6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd70:	add    rdi,0x1
  40bd74:	mov    rax,r13
  40bd77:	mov    DWORD PTR [rbx+0x14],0x0
  40bd7e:	sub    rax,rdi
  40bd81:	cmp    rax,0x7
  40bd85:	ja     40bb83 <_start@@Base+0x5c43>
  40bd8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd90:	movsxd rax,DWORD PTR [r12+rax*4]
  40bd94:	add    rax,r12
  40bd97:	jmp    rax
  40bd99:	nop    DWORD PTR [rax+0x0]
  40bda0:	movsx  rcx,BYTE PTR [rdi+0x6]
  40bda5:	shl    rcx,0x8
  40bda9:	movsx  rdx,BYTE PTR [rdi+0x5]
  40bdae:	mov    rax,rdx
  40bdb1:	shl    rax,0x10
  40bdb5:	or     rcx,rax
  40bdb8:	movsx  rdx,BYTE PTR [rdi+0x4]
  40bdbd:	mov    rax,rdx
  40bdc0:	shl    rax,0x18
  40bdc4:	or     rax,rcx
  40bdc7:	movsx  rdx,BYTE PTR [rdi+0x3]
  40bdcc:	mov    rcx,rdx
  40bdcf:	shl    rcx,0x20
  40bdd3:	or     rax,rcx
  40bdd6:	movsx  rdx,BYTE PTR [rdi+0x2]
  40bddb:	mov    rcx,rdx
  40bdde:	shl    rcx,0x28
  40bde2:	or     rcx,rax
  40bde5:	movsx  rdx,BYTE PTR [rdi+0x1]
  40bdea:	mov    rax,rdx
  40bded:	shl    rax,0x30
  40bdf1:	or     rcx,rax
  40bdf4:	movsx  rdx,BYTE PTR [rdi]
  40bdf8:	mov    rax,rdx
  40bdfb:	shl    rax,0x38
  40bdff:	or     rax,rcx
  40be02:	jmp    40bb88 <_start@@Base+0x5c48>
  40be07:	nop    WORD PTR [rax+rax*1+0x0]
  40be10:	xor    ecx,ecx
  40be12:	jmp    40bda9 <_start@@Base+0x5e69>
  40be14:	nop    DWORD PTR [rax+0x0]
  40be18:	xor    ecx,ecx
  40be1a:	jmp    40bdb8 <_start@@Base+0x5e78>
  40be1c:	nop    DWORD PTR [rax+0x0]
  40be20:	xor    eax,eax
  40be22:	jmp    40bdc7 <_start@@Base+0x5e87>
  40be24:	nop    DWORD PTR [rax+0x0]
  40be28:	xor    eax,eax
  40be2a:	jmp    40bdd6 <_start@@Base+0x5e96>
  40be2c:	nop    DWORD PTR [rax+0x0]
  40be30:	xor    ecx,ecx
  40be32:	jmp    40bde5 <_start@@Base+0x5ea5>
  40be34:	nop    DWORD PTR [rax+0x0]
  40be38:	xor    ecx,ecx
  40be3a:	jmp    40bdf4 <_start@@Base+0x5eb4>
  40be3c:	nop    DWORD PTR [rax+0x0]
  40be40:	cmp    BYTE PTR [rax+0x1],0x20
  40be44:	jle    40bc6e <_start@@Base+0x5d2e>
  40be4a:	add    rax,0x1
  40be4e:	cmp    r13,rax
  40be51:	jne    40bc85 <_start@@Base+0x5d45>
  40be57:	nop    WORD PTR [rax+rax*1+0x0]
  40be60:	mov    rsi,r13
  40be63:	jmp    40bab0 <_start@@Base+0x5b70>
  40be68:	nop    DWORD PTR [rax+rax*1+0x0]
  40be70:	lea    rdi,[rax+0x1]
  40be74:	mov    rdx,r13
  40be77:	sub    rdx,rdi
  40be7a:	cmp    rdx,0x1
  40be7e:	jle    40be8c <_start@@Base+0x5f4c>
  40be80:	cmp    BYTE PTR [rax+0x1],0x20
  40be84:	jg     40be9d <_start@@Base+0x5f5d>
  40be86:	je     40c060 <_start@@Base+0x6120>
  40be8c:	mov    rsi,rdi
  40be8f:	mov    rdx,r13
  40be92:	mov    rdi,rbx
  40be95:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40be9a:	mov    rdi,rax
  40be9d:	cmp    r13,rdi
  40bea0:	je     40c0d0 <_start@@Base+0x6190>
  40bea6:	cmp    BYTE PTR [rdi],0x7d
  40bea9:	jne    40bb50 <_start@@Base+0x5c10>
  40beaf:	lea    rsi,[rdi+0x1]
  40beb3:	mov    rax,r13
  40beb6:	sub    rax,rsi
  40beb9:	cmp    rax,0x1
  40bebd:	jle    40bd58 <_start@@Base+0x5e18>
  40bec3:	cmp    BYTE PTR [rdi+0x1],0x20
  40bec7:	jg     40ba90 <_start@@Base+0x5b50>
  40becd:	jne    40bd58 <_start@@Base+0x5e18>
  40bed3:	cmp    BYTE PTR [rdi+0x2],0x20
  40bed7:	jle    40bd58 <_start@@Base+0x5e18>
  40bedd:	lea    rsi,[rdi+0x2]
  40bee1:	jmp    40ba90 <_start@@Base+0x5b50>
  40bee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bef0:	mov    r9d,DWORD PTR [rbx+0x14]
  40bef4:	test   r9d,r9d
  40bef7:	je     40c030 <_start@@Base+0x60f0>
  40befd:	movzx  eax,BYTE PTR [rdi+0xa]
  40bf01:	cmp    al,0x20
  40bf03:	jle    40bf0d <_start@@Base+0x5fcd>
  40bf05:	cmp    al,0x3a
  40bf07:	jne    40bc49 <_start@@Base+0x5d09>
  40bf0d:	lea    rsi,[rdi+0xa]
  40bf11:	mov    DWORD PTR [rbx+0x14],0x0
  40bf18:	mov    rax,r13
  40bf1b:	sub    rax,rsi
  40bf1e:	cmp    rax,0x1
  40bf22:	jle    40bf2f <_start@@Base+0x5fef>
  40bf24:	cmp    BYTE PTR [rsi],0x20
  40bf27:	jg     40bf47 <_start@@Base+0x6007>
  40bf29:	je     40c0eb <_start@@Base+0x61ab>
  40bf2f:	mov    rdx,r13
  40bf32:	mov    rdi,rbx
  40bf35:	mov    QWORD PTR [rsp+0x10],r8
  40bf3a:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40bf3f:	mov    r8,QWORD PTR [rsp+0x10]
  40bf44:	mov    rsi,rax
  40bf47:	cmp    r13,rsi
  40bf4a:	je     40bf55 <_start@@Base+0x6015>
  40bf4c:	cmp    BYTE PTR [rsi],0x3a
  40bf4f:	je     40c0fe <_start@@Base+0x61be>
  40bf55:	mov    ecx,0x4
  40bf5a:	mov    rdx,r13
  40bf5d:	mov    rdi,rbx
  40bf60:	mov    QWORD PTR [rsp+0x10],r8
  40bf65:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40bf6a:	mov    r8,QWORD PTR [rsp+0x10]
  40bf6f:	mov    r14,rax
  40bf72:	cmp    r8,r14
  40bf75:	je     40bc49 <_start@@Base+0x5d09>
  40bf7b:	cmp    r13,r14
  40bf7e:	mov    DWORD PTR [rsp+0x28],0x0
  40bf86:	mov    QWORD PTR [rsp+0x30],0x0
  40bf8f:	mov    DWORD PTR [rsp+0x2c],0x0
  40bf97:	je     40c090 <_start@@Base+0x6150>
  40bf9d:	mov    r8,QWORD PTR [rsp]
  40bfa1:	mov    rcx,QWORD PTR [rsp+0x8]
  40bfa6:	mov    rdx,r13
  40bfa9:	mov    rsi,r14
  40bfac:	mov    rdi,rbx
  40bfaf:	call   41df90 <flatcc_json_parser_integer@@Base>
  40bfb4:	cmp    r14,rax
  40bfb7:	je     40c090 <_start@@Base+0x6150>
  40bfbd:	mov    esi,DWORD PTR [rsp+0x2c]
  40bfc1:	mov    rdx,QWORD PTR [rsp+0x30]
  40bfc6:	test   esi,esi
  40bfc8:	mov    ecx,edx
  40bfca:	je     40c008 <_start@@Base+0x60c8>
  40bfcc:	mov    esi,0x80000000
  40bfd1:	neg    ecx
  40bfd3:	cmp    rdx,rsi
  40bfd6:	ja     40c078 <_start@@Base+0x6138>
  40bfdc:	mov    DWORD PTR [rbp+0x0],ecx
  40bfdf:	jmp    40bc57 <_start@@Base+0x5d17>
  40bfe4:	nop    DWORD PTR [rax+0x0]
  40bfe8:	mov    rsi,rdi
  40bfeb:	mov    ecx,0x5
  40bff0:	mov    rdi,rbx
  40bff3:	mov    rdx,r13
  40bff6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40bffb:	mov    rdi,rax
  40bffe:	jmp    40bb73 <_start@@Base+0x5c33>
  40c003:	nop    DWORD PTR [rax+rax*1+0x0]
  40c008:	cmp    rdx,0x7fffffff
  40c00f:	jbe    40bfdc <_start@@Base+0x609c>
  40c011:	mov    ecx,0x7
  40c016:	mov    rdx,r13
  40c019:	mov    rsi,rax
  40c01c:	mov    rdi,rbx
  40c01f:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c024:	cmp    r14,rax
  40c027:	je     40c090 <_start@@Base+0x6150>
  40c029:	mov    ecx,DWORD PTR [rsp+0x28]
  40c02d:	jmp    40bfdc <_start@@Base+0x609c>
  40c02f:	nop
  40c030:	cmp    BYTE PTR [rdi+0xa],0x22
  40c034:	jne    40bc49 <_start@@Base+0x5d09>
  40c03a:	lea    rsi,[rdi+0xb]
  40c03e:	jmp    40bf18 <_start@@Base+0x5fd8>
  40c043:	nop    DWORD PTR [rax+rax*1+0x0]
  40c048:	cmp    BYTE PTR [rax+0x2],0x20
  40c04c:	jle    40bd58 <_start@@Base+0x5e18>
  40c052:	lea    rsi,[rax+0x2]
  40c056:	jmp    40ba90 <_start@@Base+0x5b50>
  40c05b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c060:	cmp    BYTE PTR [rax+0x2],0x20
  40c064:	jle    40be8c <_start@@Base+0x5f4c>
  40c06a:	lea    rdi,[rax+0x2]
  40c06e:	jmp    40be9d <_start@@Base+0x5f5d>
  40c073:	nop    DWORD PTR [rax+rax*1+0x0]
  40c078:	mov    ecx,0x8
  40c07d:	mov    rdx,r13
  40c080:	mov    rsi,rax
  40c083:	mov    rdi,rbx
  40c086:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c08b:	jmp    40c024 <_start@@Base+0x60e4>
  40c08d:	nop    DWORD PTR [rax]
  40c090:	mov    r8,QWORD PTR [rsp+0x18]
  40c095:	lea    rcx,[rip+0x2d1a4]        # 439240 <__data_start@@Base+0x180>
  40c09c:	mov    rdx,r13
  40c09f:	mov    rsi,r14
  40c0a2:	mov    rdi,rbx
  40c0a5:	call   409840 <_start@@Base+0x3900>
  40c0aa:	cmp    rax,r14
  40c0ad:	je     40c0b8 <_start@@Base+0x6178>
  40c0af:	cmp    r13,rax
  40c0b2:	jne    40c029 <_start@@Base+0x60e9>
  40c0b8:	mov    ecx,0x21
  40c0bd:	jmp    40bc9f <_start@@Base+0x5d5f>
  40c0c2:	nop    WORD PTR [rax+rax*1+0x0]
  40c0c8:	mov    rsi,r12
  40c0cb:	jmp    40bab0 <_start@@Base+0x5b70>
  40c0d0:	mov    rsi,r13
  40c0d3:	mov    ecx,0xa
  40c0d8:	mov    rdx,r13
  40c0db:	mov    rdi,rbx
  40c0de:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c0e3:	mov    rsi,rax
  40c0e6:	jmp    40ba90 <_start@@Base+0x5b50>
  40c0eb:	cmp    BYTE PTR [rsi+0x1],0x20
  40c0ef:	jle    40bf2f <_start@@Base+0x5fef>
  40c0f5:	add    rsi,0x1
  40c0f9:	jmp    40bf47 <_start@@Base+0x6007>
  40c0fe:	lea    r14,[rsi+0x1]
  40c102:	mov    rax,r13
  40c105:	sub    rax,r14
  40c108:	cmp    rax,0x1
  40c10c:	jle    40c11a <_start@@Base+0x61da>
  40c10e:	cmp    BYTE PTR [rsi+0x1],0x20
  40c112:	jg     40bf72 <_start@@Base+0x6032>
  40c118:	je     40c167 <_start@@Base+0x6227>
  40c11a:	mov    rsi,r14
  40c11d:	mov    rdx,r13
  40c120:	mov    rdi,rbx
  40c123:	mov    QWORD PTR [rsp+0x10],r8
  40c128:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40c12d:	mov    r8,QWORD PTR [rsp+0x10]
  40c132:	mov    r14,rax
  40c135:	jmp    40bf72 <_start@@Base+0x6032>
  40c13a:	cmp    BYTE PTR [r12+0x2],0x20
  40c140:	jle    40bb0b <_start@@Base+0x5bcb>
  40c146:	lea    rdi,[r12+0x2]
  40c14b:	jmp    40bb1c <_start@@Base+0x5bdc>
  40c150:	lea    rsi,[rdi+0x1]
  40c154:	mov    rdx,r13
  40c157:	mov    rdi,rbx
  40c15a:	call   407030 <_start@@Base+0x10f0>
  40c15f:	mov    rsi,rax
  40c162:	jmp    40ba90 <_start@@Base+0x5b50>
  40c167:	cmp    BYTE PTR [rsi+0x2],0x20
  40c16b:	jle    40c11a <_start@@Base+0x61da>
  40c16d:	lea    r14,[rsi+0x2]
  40c171:	jmp    40bf72 <_start@@Base+0x6032>
  40c176:	call   405070 <__stack_chk_fail@plt>
  40c17b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c180:	push   r15
  40c182:	push   r14
  40c184:	mov    r14,rsi
  40c187:	push   r13
  40c189:	push   r12
  40c18b:	mov    r12,r8
  40c18e:	push   rbp
  40c18f:	push   rbx
  40c190:	mov    rbp,rdi
  40c193:	mov    rbx,rdx
  40c196:	sub    rsp,0x58
  40c19a:	mov    DWORD PTR [r8],0x0
  40c1a1:	mov    rax,QWORD PTR fs:0x28
  40c1aa:	mov    QWORD PTR [rsp+0x48],rax
  40c1af:	xor    eax,eax
  40c1b1:	cmp    cl,0x9
  40c1b4:	je     40c270 <_start@@Base+0x6330>
  40c1ba:	jbe    40c220 <_start@@Base+0x62e0>
  40c1bc:	cmp    cl,0xb
  40c1bf:	je     40c2c0 <_start@@Base+0x6380>
  40c1c5:	jb     40c270 <_start@@Base+0x6330>
  40c1cb:	cmp    cl,0xff
  40c1ce:	je     40c2c0 <_start@@Base+0x6380>
  40c1d4:	test   BYTE PTR [rbp+0x10],0x1
  40c1d8:	jne    40c830 <_start@@Base+0x68f0>
  40c1de:	mov    ecx,0xf
  40c1e3:	mov    rdx,rbx
  40c1e6:	mov    rsi,r14
  40c1e9:	mov    rdi,rbp
  40c1ec:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c1f1:	mov    r15,rax
  40c1f4:	nop    DWORD PTR [rax+0x0]
  40c1f8:	mov    rcx,QWORD PTR [rsp+0x48]
  40c1fd:	xor    rcx,QWORD PTR fs:0x28
  40c206:	mov    rax,r15
  40c209:	jne    40c96a <_start@@Base+0x6a2a>
  40c20f:	add    rsp,0x58
  40c213:	pop    rbx
  40c214:	pop    rbp
  40c215:	pop    r12
  40c217:	pop    r13
  40c219:	pop    r14
  40c21b:	pop    r15
  40c21d:	ret    
  40c21e:	xchg   ax,ax
  40c220:	cmp    cl,0x2
  40c223:	je     40c510 <_start@@Base+0x65d0>
  40c229:	cmp    cl,0x8
  40c22c:	je     40c2e0 <_start@@Base+0x63a0>
  40c232:	test   cl,cl
  40c234:	jne    40c1d4 <_start@@Base+0x6294>
  40c236:	mov    rax,rdx
  40c239:	sub    rax,rsi
  40c23c:	cmp    rax,0x3
  40c240:	jle    40c25e <_start@@Base+0x631e>
  40c242:	lea    rsi,[rip+0x1f339]        # 42b582 <_IO_stdin_used@@Base+0x582>
  40c249:	mov    edx,0x4
  40c24e:	mov    rdi,r14
  40c251:	lea    r15,[r14+0x4]
  40c255:	call   4050b0 <memcmp@plt>
  40c25a:	test   eax,eax
  40c25c:	je     40c1f8 <_start@@Base+0x62b8>
  40c25e:	mov    ecx,0x1a
  40c263:	jmp    40c1e3 <_start@@Base+0x62a3>
  40c268:	nop    DWORD PTR [rax+rax*1+0x0]
  40c270:	mov    rcx,r12
  40c273:	mov    rdx,rbx
  40c276:	mov    rsi,r14
  40c279:	mov    rdi,rbp
  40c27c:	call   40ba20 <_start@@Base+0x5ae0>
  40c281:	mov    r15,rax
  40c284:	mov    edx,DWORD PTR [rbp+0x20]
  40c287:	test   edx,edx
  40c289:	jne    40c1f8 <_start@@Base+0x62b8>
  40c28f:	mov    eax,DWORD PTR [r12]
  40c293:	test   eax,eax
  40c295:	jne    40c1f8 <_start@@Base+0x62b8>
  40c29b:	mov    rsi,r15
  40c29e:	mov    ecx,0x21
  40c2a3:	mov    rdx,rbx
  40c2a6:	mov    rdi,rbp
  40c2a9:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c2ae:	mov    r15,rax
  40c2b1:	jmp    40c1f8 <_start@@Base+0x62b8>
  40c2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2c0:	mov    rcx,r12
  40c2c3:	mov    rdx,rbx
  40c2c6:	mov    rsi,r14
  40c2c9:	mov    rdi,rbp
  40c2cc:	call   41e450 <flatcc_json_parser_build_string@@Base>
  40c2d1:	mov    r15,rax
  40c2d4:	jmp    40c284 <_start@@Base+0x6344>
  40c2d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c2e0:	mov    rdi,QWORD PTR [rdi]
  40c2e3:	mov    edx,0x2
  40c2e8:	mov    esi,0x2
  40c2ed:	call   416990 <flatcc_builder_start_struct@@Base>
  40c2f2:	test   rax,rax
  40c2f5:	mov    QWORD PTR [rsp+0x10],rax
  40c2fa:	je     40c928 <_start@@Base+0x69e8>
  40c300:	lea    r13,[rsp+0x38]
  40c305:	mov    rdx,rbx
  40c308:	mov    rsi,r14
  40c30b:	mov    rdi,rbp
  40c30e:	mov    rcx,r13
  40c311:	call   408fe0 <_start@@Base+0x30a0>
  40c316:	mov    r9d,DWORD PTR [rsp+0x38]
  40c31b:	mov    r15,rax
  40c31e:	test   r9d,r9d
  40c321:	je     40c750 <_start@@Base+0x6810>
  40c327:	lea    rax,[rsp+0x34]
  40c32c:	movabs r14,0x686169725f6c656e
  40c336:	mov    QWORD PTR [rsp+0x28],rax
  40c33b:	lea    rax,[rsp+0x40]
  40c340:	mov    QWORD PTR [rsp+0x18],rax
  40c345:	lea    rax,[rsp+0x3c]
  40c34a:	mov    QWORD PTR [rsp+0x20],rax
  40c34f:	jmp    40c3c6 <_start@@Base+0x6486>
  40c351:	nop    DWORD PTR [rax+0x0]
  40c358:	lea    r9,[r15+0x8]
  40c35c:	mov    r10,rbx
  40c35f:	sub    r10,r9
  40c362:	cmp    r10,0x7
  40c366:	jbe    40c420 <_start@@Base+0x64e0>
  40c36c:	movbe  rax,QWORD PTR [r15+0x8]
  40c372:	movabs rdx,0xffffff0000000000
  40c37c:	and    rax,rdx
  40c37f:	movabs rdx,0x6774680000000000
  40c389:	cmp    rax,rdx
  40c38c:	jne    40c398 <_start@@Base+0x6458>
  40c38e:	cmp    r10,0x3
  40c392:	jg     40c450 <_start@@Base+0x6510>
  40c398:	mov    rsi,r9
  40c39b:	mov    rdx,rbx
  40c39e:	mov    rdi,rbp
  40c3a1:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40c3a6:	mov    rsi,rax
  40c3a9:	mov    rcx,r13
  40c3ac:	mov    rdx,rbx
  40c3af:	mov    rdi,rbp
  40c3b2:	call   40a7d0 <_start@@Base+0x4890>
  40c3b7:	mov    ecx,DWORD PTR [rsp+0x38]
  40c3bb:	mov    r15,rax
  40c3be:	test   ecx,ecx
  40c3c0:	je     40c750 <_start@@Base+0x6810>
  40c3c6:	cmp    rbx,r15
  40c3c9:	je     40c410 <_start@@Base+0x64d0>
  40c3cb:	movzx  eax,BYTE PTR [r15]
  40c3cf:	cmp    al,0x22
  40c3d1:	je     40c440 <_start@@Base+0x6500>
  40c3d3:	cmp    al,0x2e
  40c3d5:	je     40c4f0 <_start@@Base+0x65b0>
  40c3db:	mov    DWORD PTR [rbp+0x14],0x1
  40c3e2:	mov    rax,rbx
  40c3e5:	sub    rax,r15
  40c3e8:	cmp    rax,0x7
  40c3ec:	jbe    40c410 <_start@@Base+0x64d0>
  40c3ee:	movbe  rax,QWORD PTR [r15]
  40c3f3:	cmp    rax,r14
  40c3f6:	je     40c358 <_start@@Base+0x6418>
  40c3fc:	mov    rsi,r15
  40c3ff:	mov    rdx,rbx
  40c402:	mov    rdi,rbp
  40c405:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40c40a:	mov    rsi,rax
  40c40d:	jmp    40c3a9 <_start@@Base+0x6469>
  40c40f:	nop
  40c410:	mov    rsi,rbx
  40c413:	mov    rdi,r15
  40c416:	call   406050 <_start@@Base+0x110>
  40c41b:	jmp    40c3f3 <_start@@Base+0x64b3>
  40c41d:	nop    DWORD PTR [rax]
  40c420:	mov    rdi,r9
  40c423:	mov    rsi,rbx
  40c426:	mov    QWORD PTR [rsp+0x8],r9
  40c42b:	call   406050 <_start@@Base+0x110>
  40c430:	mov    r9,QWORD PTR [rsp+0x8]
  40c435:	jmp    40c372 <_start@@Base+0x6432>
  40c43a:	nop    WORD PTR [rax+rax*1+0x0]
  40c440:	add    r15,0x1
  40c444:	mov    DWORD PTR [rbp+0x14],0x0
  40c44b:	jmp    40c3e2 <_start@@Base+0x64a2>
  40c44d:	nop    DWORD PTR [rax]
  40c450:	mov    rsi,r9
  40c453:	mov    ecx,0x3
  40c458:	mov    rdx,rbx
  40c45b:	mov    rdi,rbp
  40c45e:	mov    QWORD PTR [rsp+0x8],r9
  40c463:	call   409080 <_start@@Base+0x3140>
  40c468:	mov    r9,QWORD PTR [rsp+0x8]
  40c46d:	mov    r15,rax
  40c470:	cmp    r9,rax
  40c473:	je     40c398 <_start@@Base+0x6458>
  40c479:	xor    r8d,r8d
  40c47c:	cmp    rbx,rax
  40c47f:	mov    QWORD PTR [rsp+0x40],0x0
  40c488:	mov    WORD PTR [rsp+0x34],r8w
  40c48e:	mov    DWORD PTR [rsp+0x3c],0x0
  40c496:	je     40c710 <_start@@Base+0x67d0>
  40c49c:	mov    r8,QWORD PTR [rsp+0x18]
  40c4a1:	mov    rcx,QWORD PTR [rsp+0x20]
  40c4a6:	mov    rsi,rax
  40c4a9:	mov    rdx,rbx
  40c4ac:	mov    rdi,rbp
  40c4af:	call   41df90 <flatcc_json_parser_integer@@Base>
  40c4b4:	cmp    r15,rax
  40c4b7:	mov    rsi,rax
  40c4ba:	je     40c710 <_start@@Base+0x67d0>
  40c4c0:	mov    edi,DWORD PTR [rsp+0x3c]
  40c4c4:	test   edi,edi
  40c4c6:	jne    40c850 <_start@@Base+0x6910>
  40c4cc:	mov    rdx,QWORD PTR [rsp+0x40]
  40c4d1:	cmp    rdx,0xffff
  40c4d8:	mov    eax,edx
  40c4da:	ja     40c910 <_start@@Base+0x69d0>
  40c4e0:	mov    rcx,QWORD PTR [rsp+0x10]
  40c4e5:	mov    WORD PTR [rcx],ax
  40c4e8:	jmp    40c3a9 <_start@@Base+0x6469>
  40c4ed:	nop    DWORD PTR [rax]
  40c4f0:	mov    rsi,r15
  40c4f3:	mov    ecx,0x5
  40c4f8:	mov    rdx,rbx
  40c4fb:	mov    rdi,rbp
  40c4fe:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c503:	mov    r15,rax
  40c506:	jmp    40c3e2 <_start@@Base+0x64a2>
  40c50b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c510:	mov    rdi,QWORD PTR [rdi]
  40c513:	mov    esi,0x1
  40c518:	call   4173e0 <flatcc_builder_start_table@@Base>
  40c51d:	test   eax,eax
  40c51f:	jne    40c6ed <_start@@Base+0x67ad>
  40c525:	lea    r13,[rsp+0x34]
  40c52a:	mov    rsi,r14
  40c52d:	mov    rdx,rbx
  40c530:	mov    rdi,rbp
  40c533:	mov    rcx,r13
  40c536:	call   408fe0 <_start@@Base+0x30a0>
  40c53b:	mov    ecx,DWORD PTR [rsp+0x34]
  40c53f:	mov    r14,rax
  40c542:	test   ecx,ecx
  40c544:	je     40c6e0 <_start@@Base+0x67a0>
  40c54a:	lea    rax,[rsp+0x38]
  40c54f:	movabs r15,0x73776f72645f6174
  40c559:	mov    QWORD PTR [rsp+0x20],rax
  40c55e:	lea    rax,[rsp+0x40]
  40c563:	mov    QWORD PTR [rsp+0x10],rax
  40c568:	lea    rax,[rsp+0x3c]
  40c56d:	mov    QWORD PTR [rsp+0x18],rax
  40c572:	jmp    40c623 <_start@@Base+0x66e3>
  40c577:	nop    WORD PTR [rax+rax*1+0x0]
  40c580:	lea    r8,[r14+0x8]
  40c584:	mov    rax,rbx
  40c587:	sub    rax,r8
  40c58a:	cmp    rax,0x7
  40c58e:	jbe    40c680 <_start@@Base+0x6740>
  40c594:	movbe  rax,QWORD PTR [r14+0x8]
  40c59a:	movabs rdx,0x7461636b5f64616d
  40c5a4:	cmp    rax,rdx
  40c5a7:	jne    40c5f0 <_start@@Base+0x66b0>
  40c5a9:	lea    r8,[r14+0x10]
  40c5ad:	mov    r10,rbx
  40c5b0:	sub    r10,r8
  40c5b3:	cmp    r10,0x7
  40c5b7:	jbe    40c6a0 <_start@@Base+0x6760>
  40c5bd:	movbe  rax,QWORD PTR [r14+0x10]
  40c5c3:	movabs rdx,0xffffff0000000000
  40c5cd:	and    rax,rdx
  40c5d0:	movabs rdx,0x6167650000000000
  40c5da:	cmp    rax,rdx
  40c5dd:	jne    40c5f0 <_start@@Base+0x66b0>
  40c5df:	cmp    r10,0x3
  40c5e3:	jg     40c788 <_start@@Base+0x6848>
  40c5e9:	nop    DWORD PTR [rax+0x0]
  40c5f0:	mov    rdx,rbx
  40c5f3:	mov    rsi,r8
  40c5f6:	mov    rdi,rbp
  40c5f9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40c5fe:	mov    r14,rax
  40c601:	mov    rsi,r14
  40c604:	mov    rcx,r13
  40c607:	mov    rdx,rbx
  40c60a:	mov    rdi,rbp
  40c60d:	call   40a7d0 <_start@@Base+0x4890>
  40c612:	mov    r11d,DWORD PTR [rsp+0x34]
  40c617:	mov    r14,rax
  40c61a:	test   r11d,r11d
  40c61d:	je     40c6e0 <_start@@Base+0x67a0>
  40c623:	cmp    rbx,r14
  40c626:	je     40c670 <_start@@Base+0x6730>
  40c628:	movzx  eax,BYTE PTR [r14]
  40c62c:	cmp    al,0x22
  40c62e:	je     40c690 <_start@@Base+0x6750>
  40c630:	cmp    al,0x2e
  40c632:	je     40c6c0 <_start@@Base+0x6780>
  40c638:	mov    DWORD PTR [rbp+0x14],0x1
  40c63f:	mov    rax,rbx
  40c642:	sub    rax,r14
  40c645:	cmp    rax,0x7
  40c649:	jbe    40c670 <_start@@Base+0x6730>
  40c64b:	movbe  rax,QWORD PTR [r14]
  40c650:	cmp    rax,r15
  40c653:	je     40c580 <_start@@Base+0x6640>
  40c659:	mov    rsi,r14
  40c65c:	mov    rdx,rbx
  40c65f:	mov    rdi,rbp
  40c662:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40c667:	mov    r14,rax
  40c66a:	jmp    40c601 <_start@@Base+0x66c1>
  40c66c:	nop    DWORD PTR [rax+0x0]
  40c670:	mov    rsi,rbx
  40c673:	mov    rdi,r14
  40c676:	call   406050 <_start@@Base+0x110>
  40c67b:	jmp    40c650 <_start@@Base+0x6710>
  40c67d:	nop    DWORD PTR [rax]
  40c680:	mov    rsi,rbx
  40c683:	mov    rdi,r8
  40c686:	call   406050 <_start@@Base+0x110>
  40c68b:	jmp    40c59a <_start@@Base+0x665a>
  40c690:	add    r14,0x1
  40c694:	mov    DWORD PTR [rbp+0x14],0x0
  40c69b:	jmp    40c63f <_start@@Base+0x66ff>
  40c69d:	nop    DWORD PTR [rax]
  40c6a0:	mov    rdi,r8
  40c6a3:	mov    rsi,rbx
  40c6a6:	mov    QWORD PTR [rsp+0x8],r8
  40c6ab:	call   406050 <_start@@Base+0x110>
  40c6b0:	mov    r8,QWORD PTR [rsp+0x8]
  40c6b5:	jmp    40c5c3 <_start@@Base+0x6683>
  40c6ba:	nop    WORD PTR [rax+rax*1+0x0]
  40c6c0:	mov    rsi,r14
  40c6c3:	mov    ecx,0x5
  40c6c8:	mov    rdx,rbx
  40c6cb:	mov    rdi,rbp
  40c6ce:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c6d3:	mov    r14,rax
  40c6d6:	jmp    40c63f <_start@@Base+0x66ff>
  40c6db:	nop    DWORD PTR [rax+rax*1+0x0]
  40c6e0:	mov    r10d,DWORD PTR [rbp+0x20]
  40c6e4:	test   r10d,r10d
  40c6e7:	je     40c8c5 <_start@@Base+0x6985>
  40c6ed:	mov    ecx,0x21
  40c6f2:	mov    rdx,rbx
  40c6f5:	mov    rsi,r14
  40c6f8:	mov    rdi,rbp
  40c6fb:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c700:	mov    r15,rax
  40c703:	jmp    40c284 <_start@@Base+0x6344>
  40c708:	nop    DWORD PTR [rax+rax*1+0x0]
  40c710:	mov    r8,QWORD PTR [rsp+0x28]
  40c715:	lea    rcx,[rip+0x2cb44]        # 439260 <__data_start@@Base+0x1a0>
  40c71c:	mov    rsi,r15
  40c71f:	mov    rdx,rbx
  40c722:	mov    rdi,rbp
  40c725:	call   409e60 <_start@@Base+0x3f20>
  40c72a:	cmp    rax,r15
  40c72d:	mov    rsi,rax
  40c730:	je     40c73b <_start@@Base+0x67fb>
  40c732:	cmp    rbx,rax
  40c735:	jne    40c86c <_start@@Base+0x692c>
  40c73b:	mov    ecx,0x21
  40c740:	mov    rdx,rbx
  40c743:	mov    rdi,rbp
  40c746:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c74b:	mov    r15,rax
  40c74e:	xchg   ax,ax
  40c750:	cmp    rbx,r15
  40c753:	je     40c76a <_start@@Base+0x682a>
  40c755:	mov    rdi,QWORD PTR [rbp+0x0]
  40c759:	call   416a40 <flatcc_builder_end_struct@@Base>
  40c75e:	test   eax,eax
  40c760:	mov    DWORD PTR [r12],eax
  40c764:	jne    40c1f8 <_start@@Base+0x62b8>
  40c76a:	mov    rsi,r15
  40c76d:	mov    ecx,0x21
  40c772:	mov    rdx,rbx
  40c775:	mov    rdi,rbp
  40c778:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c77d:	mov    r15,rax
  40c780:	jmp    40c284 <_start@@Base+0x6344>
  40c785:	nop    DWORD PTR [rax]
  40c788:	mov    rsi,r8
  40c78b:	mov    ecx,0x3
  40c790:	mov    rdx,rbx
  40c793:	mov    rdi,rbp
  40c796:	mov    QWORD PTR [rsp+0x8],r8
  40c79b:	call   409080 <_start@@Base+0x3140>
  40c7a0:	mov    r8,QWORD PTR [rsp+0x8]
  40c7a5:	mov    r10,rax
  40c7a8:	cmp    r8,rax
  40c7ab:	je     40c5f0 <_start@@Base+0x66b0>
  40c7b1:	cmp    rbx,rax
  40c7b4:	mov    DWORD PTR [rsp+0x38],0x0
  40c7bc:	mov    QWORD PTR [rsp+0x40],0x0
  40c7c5:	mov    DWORD PTR [rsp+0x3c],0x0
  40c7cd:	je     40c930 <_start@@Base+0x69f0>
  40c7d3:	mov    r8,QWORD PTR [rsp+0x10]
  40c7d8:	mov    rcx,QWORD PTR [rsp+0x18]
  40c7dd:	mov    rdx,rbx
  40c7e0:	mov    rsi,rax
  40c7e3:	mov    rdi,rbp
  40c7e6:	mov    QWORD PTR [rsp+0x8],rax
  40c7eb:	call   41df90 <flatcc_json_parser_integer@@Base>
  40c7f0:	mov    r10,QWORD PTR [rsp+0x8]
  40c7f5:	mov    r14,rax
  40c7f8:	cmp    r10,rax
  40c7fb:	je     40c930 <_start@@Base+0x69f0>
  40c801:	mov    edx,DWORD PTR [rsp+0x3c]
  40c805:	mov    rax,QWORD PTR [rsp+0x40]
  40c80a:	test   edx,edx
  40c80c:	je     40c880 <_start@@Base+0x6940>
  40c80e:	mov    edx,0x80000000
  40c813:	mov    ecx,0x8
  40c818:	cmp    rax,rdx
  40c81b:	ja     40c8ec <_start@@Base+0x69ac>
  40c821:	mov    edx,eax
  40c823:	neg    edx
  40c825:	mov    DWORD PTR [rsp+0x38],edx
  40c829:	jmp    40c88e <_start@@Base+0x694e>
  40c82b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c830:	mov    rdx,rbx
  40c833:	mov    rsi,r14
  40c836:	mov    rdi,rbp
  40c839:	call   41d330 <flatcc_json_parser_generic_json@@Base>
  40c83e:	mov    r15,rax
  40c841:	jmp    40c1f8 <_start@@Base+0x62b8>
  40c846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c850:	mov    ecx,0x8
  40c855:	mov    rdx,rbx
  40c858:	mov    rdi,rbp
  40c85b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c860:	mov    rsi,rax
  40c863:	cmp    r15,rsi
  40c866:	je     40c710 <_start@@Base+0x67d0>
  40c86c:	movzx  eax,WORD PTR [rsp+0x34]
  40c871:	jmp    40c4e0 <_start@@Base+0x65a0>
  40c876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c880:	cmp    rax,0x7fffffff
  40c886:	ja     40c8e2 <_start@@Base+0x69a2>
  40c888:	mov    edx,eax
  40c88a:	mov    DWORD PTR [rsp+0x38],eax
  40c88e:	test   edx,edx
  40c890:	jne    40c89c <_start@@Base+0x695c>
  40c892:	test   BYTE PTR [rbp+0x10],0x2
  40c896:	je     40c601 <_start@@Base+0x66c1>
  40c89c:	mov    rdi,QWORD PTR [rbp+0x0]
  40c8a0:	xor    esi,esi
  40c8a2:	mov    ecx,0x4
  40c8a7:	mov    edx,0x4
  40c8ac:	call   418c80 <flatcc_builder_table_add@@Base>
  40c8b1:	test   rax,rax
  40c8b4:	je     40c6ed <_start@@Base+0x67ad>
  40c8ba:	mov    edx,DWORD PTR [rsp+0x38]
  40c8be:	mov    DWORD PTR [rax],edx
  40c8c0:	jmp    40c601 <_start@@Base+0x66c1>
  40c8c5:	mov    rdi,QWORD PTR [rbp+0x0]
  40c8c9:	mov    r15,r14
  40c8cc:	call   417da0 <flatcc_builder_end_table@@Base>
  40c8d1:	test   eax,eax
  40c8d3:	mov    DWORD PTR [r12],eax
  40c8d7:	je     40c6ed <_start@@Base+0x67ad>
  40c8dd:	jmp    40c284 <_start@@Base+0x6344>
  40c8e2:	mov    QWORD PTR [rsp+0x8],r10
  40c8e7:	mov    ecx,0x7
  40c8ec:	mov    rsi,r14
  40c8ef:	mov    rdx,rbx
  40c8f2:	mov    rdi,rbp
  40c8f5:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c8fa:	mov    r10,QWORD PTR [rsp+0x8]
  40c8ff:	mov    r14,rax
  40c902:	cmp    r10,rax
  40c905:	je     40c930 <_start@@Base+0x69f0>
  40c907:	mov    edx,DWORD PTR [rsp+0x38]
  40c90b:	jmp    40c88e <_start@@Base+0x694e>
  40c90d:	nop    DWORD PTR [rax]
  40c910:	mov    ecx,0x7
  40c915:	mov    rdx,rbx
  40c918:	mov    rdi,rbp
  40c91b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40c920:	mov    rsi,rax
  40c923:	jmp    40c863 <_start@@Base+0x6923>
  40c928:	mov    r15,r14
  40c92b:	jmp    40c76a <_start@@Base+0x682a>
  40c930:	mov    r8,QWORD PTR [rsp+0x20]
  40c935:	lea    rcx,[rip+0x2c944]        # 439280 <__data_start@@Base+0x1c0>
  40c93c:	mov    rsi,r10
  40c93f:	mov    rdx,rbx
  40c942:	mov    rdi,rbp
  40c945:	mov    QWORD PTR [rsp+0x8],r10
  40c94a:	call   409840 <_start@@Base+0x3900>
  40c94f:	mov    r10,QWORD PTR [rsp+0x8]
  40c954:	mov    r14,rax
  40c957:	cmp    rax,r10
  40c95a:	je     40c6ed <_start@@Base+0x67ad>
  40c960:	cmp    rbx,rax
  40c963:	jne    40c907 <_start@@Base+0x69c7>
  40c965:	jmp    40c6ed <_start@@Base+0x67ad>
  40c96a:	call   405070 <__stack_chk_fail@plt>
  40c96f:	nop
  40c970:	push   r15
  40c972:	push   r14
  40c974:	mov    r14,rdx
  40c977:	push   r13
  40c979:	push   r12
  40c97b:	push   rbp
  40c97c:	push   rbx
  40c97d:	mov    rbx,rdi
  40c980:	mov    rbp,rsi
  40c983:	mov    esi,0x4
  40c988:	sub    rsp,0x68
  40c98c:	mov    DWORD PTR [rcx],0x0
  40c992:	mov    rdi,QWORD PTR fs:0x28
  40c99b:	mov    QWORD PTR [rsp+0x58],rdi
  40c9a0:	xor    edi,edi
  40c9a2:	mov    rdi,QWORD PTR [rbx]
  40c9a5:	mov    QWORD PTR [rsp+0x18],rcx
  40c9aa:	call   4173e0 <flatcc_builder_start_table@@Base>
  40c9af:	test   eax,eax
  40c9b1:	jne    40cb40 <_start@@Base+0x6c00>
  40c9b7:	lea    r8,[rsp+0x40]
  40c9bc:	mov    ecx,0x1
  40c9c1:	mov    rdx,r14
  40c9c4:	mov    rsi,rbp
  40c9c7:	mov    rdi,rbx
  40c9ca:	call   41e620 <flatcc_json_parser_prepare_unions@@Base>
  40c9cf:	cmp    r14,rax
  40c9d2:	je     40cb40 <_start@@Base+0x6c00>
  40c9d8:	lea    rcx,[rsp+0x28]
  40c9dd:	mov    rsi,rbp
  40c9e0:	mov    rdi,rbx
  40c9e3:	mov    rdx,r14
  40c9e6:	call   408fe0 <_start@@Base+0x30a0>
  40c9eb:	lea    rdi,[rsp+0x48]
  40c9f0:	mov    rbp,rax
  40c9f3:	mov    eax,DWORD PTR [rsp+0x28]
  40c9f7:	mov    QWORD PTR [rsp],rdi
  40c9fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca00:	test   eax,eax
  40ca02:	je     40cb30 <_start@@Base+0x6bf0>
  40ca08:	cmp    r14,rbp
  40ca0b:	je     40d940 <_start@@Base+0x7a00>
  40ca11:	movzx  eax,BYTE PTR [rbp+0x0]
  40ca15:	cmp    al,0x22
  40ca17:	je     40ccc8 <_start@@Base+0x6d88>
  40ca1d:	cmp    al,0x2e
  40ca1f:	je     40da20 <_start@@Base+0x7ae0>
  40ca25:	mov    r15,r14
  40ca28:	mov    DWORD PTR [rbx+0x14],0x1
  40ca2f:	sub    r15,rbp
  40ca32:	cmp    r15,0x7
  40ca36:	jbe    40cc20 <_start@@Base+0x6ce0>
  40ca3c:	movbe  r12,QWORD PTR [rbp+0x0]
  40ca42:	movabs rax,0x6d616e79616e795f
  40ca4c:	cmp    r12,rax
  40ca4f:	je     40cb80 <_start@@Base+0x6c40>
  40ca55:	mov    rdx,r12
  40ca58:	movabs rax,0x6d616e79616e7900
  40ca62:	xor    dl,dl
  40ca64:	cmp    rdx,rax
  40ca67:	jne    40ca73 <_start@@Base+0x6b33>
  40ca69:	cmp    r15,0x7
  40ca6d:	jg     40daa0 <_start@@Base+0x7b60>
  40ca73:	mov    rdx,r12
  40ca76:	movabs rax,0x7072656669780000
  40ca80:	xor    dx,dx
  40ca83:	cmp    rdx,rax
  40ca86:	je     40cce0 <_start@@Base+0x6da0>
  40ca8c:	and    r12,0xffffffffff000000
  40ca93:	movabs rax,0x6d6f766965000000
  40ca9d:	cmp    r12,rax
  40caa0:	jne    40caac <_start@@Base+0x6b6c>
  40caa2:	cmp    r15,0x5
  40caa6:	jg     40da48 <_start@@Base+0x7b08>
  40caac:	mov    rdx,r14
  40caaf:	mov    rsi,rbp
  40cab2:	mov    rdi,rbx
  40cab5:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40caba:	mov    r12,rax
  40cabd:	mov    rax,r14
  40cac0:	sub    rax,r12
  40cac3:	cmp    rax,0x1
  40cac7:	jle    40cad6 <_start@@Base+0x6b96>
  40cac9:	cmp    BYTE PTR [r12],0x20
  40cace:	jg     40cae7 <_start@@Base+0x6ba7>
  40cad0:	je     40d7d0 <_start@@Base+0x7890>
  40cad6:	mov    rsi,r12
  40cad9:	mov    rdx,r14
  40cadc:	mov    rdi,rbx
  40cadf:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40cae4:	mov    r12,rax
  40cae7:	cmp    r14,r12
  40caea:	je     40d7f0 <_start@@Base+0x78b0>
  40caf0:	cmp    BYTE PTR [r12],0x2c
  40caf5:	je     40d8e8 <_start@@Base+0x79a8>
  40cafb:	mov    DWORD PTR [rsp+0x28],0x0
  40cb03:	cmp    BYTE PTR [r12],0x7d
  40cb08:	je     40cbe0 <_start@@Base+0x6ca0>
  40cb0e:	mov    ecx,0xa
  40cb13:	mov    rdx,r14
  40cb16:	mov    rsi,r12
  40cb19:	mov    rdi,rbx
  40cb1c:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40cb21:	mov    rbp,rax
  40cb24:	mov    eax,DWORD PTR [rsp+0x28]
  40cb28:	test   eax,eax
  40cb2a:	jne    40ca08 <_start@@Base+0x6ac8>
  40cb30:	mov    eax,DWORD PTR [rbx+0x20]
  40cb33:	test   eax,eax
  40cb35:	je     40e848 <_start@@Base+0x8908>
  40cb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb40:	mov    ecx,0x21
  40cb45:	mov    rdx,r14
  40cb48:	mov    rsi,rbp
  40cb4b:	mov    rdi,rbx
  40cb4e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40cb53:	mov    rbx,QWORD PTR [rsp+0x58]
  40cb58:	xor    rbx,QWORD PTR fs:0x28
  40cb61:	jne    40f32e <_start@@Base+0x93ee>
  40cb67:	add    rsp,0x68
  40cb6b:	pop    rbx
  40cb6c:	pop    rbp
  40cb6d:	pop    r12
  40cb6f:	pop    r13
  40cb71:	pop    r14
  40cb73:	pop    r15
  40cb75:	ret    
  40cb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb80:	lea    r12,[rbp+0x8]
  40cb84:	mov    r8,r14
  40cb87:	sub    r8,r12
  40cb8a:	cmp    r8,0x7
  40cb8e:	jbe    40d810 <_start@@Base+0x78d0>
  40cb94:	movbe  rax,QWORD PTR [rbp+0x8]
  40cb9a:	movabs rdx,0xffffffff00000000
  40cba4:	and    rax,rdx
  40cba7:	movabs rdx,0x7479706500000000
  40cbb1:	cmp    rax,rdx
  40cbb4:	jne    40cbc0 <_start@@Base+0x6c80>
  40cbb6:	cmp    r8,0x4
  40cbba:	jg     40dc10 <_start@@Base+0x7cd0>
  40cbc0:	mov    rsi,r12
  40cbc3:	mov    rdx,r14
  40cbc6:	mov    rdi,rbx
  40cbc9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40cbce:	mov    r12,rax
  40cbd1:	jmp    40cabd <_start@@Base+0x6b7d>
  40cbd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cbe0:	lea    rbp,[r12+0x1]
  40cbe5:	mov    rax,r14
  40cbe8:	sub    rax,rbp
  40cbeb:	cmp    rax,0x1
  40cbef:	jle    40cc03 <_start@@Base+0x6cc3>
  40cbf1:	cmp    BYTE PTR [r12+0x1],0x20
  40cbf7:	jg     40cb30 <_start@@Base+0x6bf0>
  40cbfd:	je     40e66a <_start@@Base+0x872a>
  40cc03:	mov    rsi,rbp
  40cc06:	mov    rdx,r14
  40cc09:	mov    rdi,rbx
  40cc0c:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40cc11:	mov    rbp,rax
  40cc14:	mov    eax,DWORD PTR [rsp+0x28]
  40cc18:	jmp    40ca00 <_start@@Base+0x6ac0>
  40cc1d:	nop    DWORD PTR [rax]
  40cc20:	cmp    r15,0x8
  40cc24:	ja     40d943 <_start@@Base+0x7a03>
  40cc2a:	lea    rdx,[rip+0x1e457]        # 42b088 <_IO_stdin_used@@Base+0x88>
  40cc31:	movsxd rax,DWORD PTR [rdx+r15*4]
  40cc35:	add    rax,rdx
  40cc38:	jmp    rax
  40cc3a:	movsx  r12,BYTE PTR [rbp+0x7]
  40cc3f:	movsx  rdx,BYTE PTR [rbp+0x6]
  40cc44:	mov    rax,rdx
  40cc47:	shl    rax,0x8
  40cc4b:	or     rax,r12
  40cc4e:	movsx  rdx,BYTE PTR [rbp+0x5]
  40cc53:	shl    rdx,0x10
  40cc57:	or     rax,rdx
  40cc5a:	movsx  rdx,BYTE PTR [rbp+0x4]
  40cc5f:	shl    rdx,0x18
  40cc63:	mov    r12,rdx
  40cc66:	or     r12,rax
  40cc69:	movsx  rdx,BYTE PTR [rbp+0x3]
  40cc6e:	mov    rax,rdx
  40cc71:	shl    rax,0x20
  40cc75:	or     r12,rax
  40cc78:	movsx  rdx,BYTE PTR [rbp+0x2]
  40cc7d:	mov    rax,rdx
  40cc80:	shl    rax,0x28
  40cc84:	or     rax,r12
  40cc87:	movsx  rdx,BYTE PTR [rbp+0x1]
  40cc8c:	shl    rdx,0x30
  40cc90:	or     rax,rdx
  40cc93:	movsx  r12,BYTE PTR [rbp+0x0]
  40cc98:	shl    r12,0x38
  40cc9c:	or     r12,rax
  40cc9f:	jmp    40ca42 <_start@@Base+0x6b02>
  40cca4:	xor    r12d,r12d
  40cca7:	jmp    40cc3f <_start@@Base+0x6cff>
  40cca9:	xor    eax,eax
  40ccab:	jmp    40cc4e <_start@@Base+0x6d0e>
  40ccad:	xor    eax,eax
  40ccaf:	jmp    40cc5a <_start@@Base+0x6d1a>
  40ccb1:	xor    r12d,r12d
  40ccb4:	jmp    40cc69 <_start@@Base+0x6d29>
  40ccb6:	xor    r12d,r12d
  40ccb9:	jmp    40cc78 <_start@@Base+0x6d38>
  40ccbb:	xor    eax,eax
  40ccbd:	jmp    40cc87 <_start@@Base+0x6d47>
  40ccbf:	xor    eax,eax
  40ccc1:	jmp    40cc93 <_start@@Base+0x6d53>
  40ccc3:	nop    DWORD PTR [rax+rax*1+0x0]
  40ccc8:	add    rbp,0x1
  40cccc:	mov    r15,r14
  40cccf:	mov    DWORD PTR [rbx+0x14],0x0
  40ccd6:	sub    r15,rbp
  40ccd9:	jmp    40ca32 <_start@@Base+0x6af2>
  40ccde:	xchg   ax,ax
  40cce0:	cmp    r15,0x6
  40cce4:	jle    40caac <_start@@Base+0x6b6c>
  40ccea:	mov    ecx,0x6
  40ccef:	mov    rdx,r14
  40ccf2:	mov    rsi,rbp
  40ccf5:	mov    rdi,rbx
  40ccf8:	call   409080 <_start@@Base+0x3140>
  40ccfd:	cmp    rax,rbp
  40cd00:	mov    r12,rax
  40cd03:	je     40caac <_start@@Base+0x6b6c>
  40cd09:	mov    rdi,QWORD PTR [rbx]
  40cd0c:	mov    esi,0x3
  40cd11:	mov    DWORD PTR [rsp+0x2c],0x0
  40cd19:	call   4173e0 <flatcc_builder_start_table@@Base>
  40cd1e:	test   eax,eax
  40cd20:	jne    40d1c0 <_start@@Base+0x7280>
  40cd26:	lea    rcx,[rsp+0x30]
  40cd2b:	mov    rsi,r12
  40cd2e:	mov    rdx,r14
  40cd31:	mov    rdi,rbx
  40cd34:	call   408fe0 <_start@@Base+0x30a0>
  40cd39:	mov    r12,rax
  40cd3c:	mov    eax,DWORD PTR [rsp+0x30]
  40cd40:	test   eax,eax
  40cd42:	je     40d1ab <_start@@Base+0x726b>
  40cd48:	lea    rbp,[rsp+0x50]
  40cd4d:	cmp    r14,r12
  40cd50:	je     40d040 <_start@@Base+0x7100>
  40cd56:	movzx  eax,BYTE PTR [r12]
  40cd5b:	cmp    al,0x22
  40cd5d:	je     40d0b0 <_start@@Base+0x7170>
  40cd63:	cmp    al,0x2e
  40cd65:	je     40d790 <_start@@Base+0x7850>
  40cd6b:	mov    DWORD PTR [rbx+0x14],0x1
  40cd72:	mov    rax,r14
  40cd75:	sub    rax,r12
  40cd78:	cmp    rax,0x7
  40cd7c:	jbe    40d0d0 <_start@@Base+0x7190>
  40cd82:	movbe  rax,QWORD PTR [r12]
  40cd88:	movabs rdx,0x746573746a736f6e
  40cd92:	cmp    rax,rdx
  40cd95:	jne    40d040 <_start@@Base+0x7100>
  40cd9b:	lea    rsi,[r12+0x8]
  40cda0:	mov    rax,r14
  40cda3:	sub    rax,rsi
  40cda6:	cmp    rax,0x7
  40cdaa:	ja     40d060 <_start@@Base+0x7120>
  40cdb0:	lea    rdx,[rip+0x1e2f5]        # 42b0ac <_IO_stdin_used@@Base+0xac>
  40cdb7:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cdbb:	add    rax,rdx
  40cdbe:	jmp    rax
  40cdc0:	movsx  rcx,BYTE PTR [r12+0xe]
  40cdc6:	shl    rcx,0x8
  40cdca:	movsx  rdx,BYTE PTR [r12+0xd]
  40cdd0:	mov    rax,rdx
  40cdd3:	shl    rax,0x10
  40cdd7:	or     rcx,rax
  40cdda:	movsx  rdx,BYTE PTR [r12+0xc]
  40cde0:	mov    rax,rdx
  40cde3:	shl    rax,0x18
  40cde7:	or     rax,rcx
  40cdea:	movsx  rdx,BYTE PTR [r12+0xb]
  40cdf0:	mov    rcx,rdx
  40cdf3:	shl    rcx,0x20
  40cdf7:	or     rax,rcx
  40cdfa:	movsx  rdx,BYTE PTR [r12+0xa]
  40ce00:	mov    rcx,rdx
  40ce03:	shl    rcx,0x28
  40ce07:	or     rcx,rax
  40ce0a:	movsx  rdx,BYTE PTR [r12+0x9]
  40ce10:	mov    rax,rdx
  40ce13:	shl    rax,0x30
  40ce17:	or     rcx,rax
  40ce1a:	movsx  rdx,BYTE PTR [r12+0x8]
  40ce20:	mov    rax,rdx
  40ce23:	shl    rax,0x38
  40ce27:	or     rax,rcx
  40ce2a:	movabs rdx,0x7072656669787061
  40ce34:	cmp    rax,rdx
  40ce37:	jne    40cec0 <_start@@Base+0x6f80>
  40ce3d:	lea    r15,[r12+0x10]
  40ce42:	mov    rcx,r14
  40ce45:	sub    rcx,r15
  40ce48:	cmp    rcx,0x7
  40ce4c:	ja     40d250 <_start@@Base+0x7310>
  40ce52:	lea    rdx,[rip+0x1e273]        # 42b0cc <_IO_stdin_used@@Base+0xcc>
  40ce59:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40ce5d:	add    rax,rdx
  40ce60:	jmp    rax
  40ce62:	nop    WORD PTR [rax+rax*1+0x0]
  40ce68:	xor    ecx,ecx
  40ce6a:	jmp    40cdca <_start@@Base+0x6e8a>
  40ce6f:	nop
  40ce70:	xor    eax,eax
  40ce72:	jmp    40cdea <_start@@Base+0x6eaa>
  40ce77:	nop    WORD PTR [rax+rax*1+0x0]
  40ce80:	xor    eax,eax
  40ce82:	jmp    40cdfa <_start@@Base+0x6eba>
  40ce87:	nop    WORD PTR [rax+rax*1+0x0]
  40ce90:	xor    ecx,ecx
  40ce92:	jmp    40ce0a <_start@@Base+0x6eca>
  40ce97:	nop    WORD PTR [rax+rax*1+0x0]
  40cea0:	xor    ecx,ecx
  40cea2:	jmp    40ce1a <_start@@Base+0x6eda>
  40cea7:	nop    WORD PTR [rax+rax*1+0x0]
  40ceb0:	xor    ecx,ecx
  40ceb2:	jmp    40cdda <_start@@Base+0x6e9a>
  40ceb7:	nop    WORD PTR [rax+rax*1+0x0]
  40cec0:	mov    rdx,r14
  40cec3:	mov    rdi,rbx
  40cec6:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40cecb:	mov    r13,rax
  40cece:	mov    rax,r14
  40ced1:	sub    rax,r13
  40ced4:	cmp    rax,0x1
  40ced8:	jle    40cee7 <_start@@Base+0x6fa7>
  40ceda:	cmp    BYTE PTR [r13+0x0],0x20
  40cedf:	jg     40cef8 <_start@@Base+0x6fb8>
  40cee1:	je     40d180 <_start@@Base+0x7240>
  40cee7:	mov    rsi,r13
  40ceea:	mov    rdx,r14
  40ceed:	mov    rdi,rbx
  40cef0:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40cef5:	mov    r13,rax
  40cef8:	cmp    r14,r13
  40cefb:	je     40d1a0 <_start@@Base+0x7260>
  40cf01:	cmp    BYTE PTR [r13+0x0],0x2c
  40cf06:	je     40d200 <_start@@Base+0x72c0>
  40cf0c:	mov    DWORD PTR [rsp+0x30],0x0
  40cf14:	cmp    BYTE PTR [r13+0x0],0x7d
  40cf19:	je     40d070 <_start@@Base+0x7130>
  40cf1f:	mov    ecx,0xa
  40cf24:	mov    rdx,r14
  40cf27:	mov    rsi,r13
  40cf2a:	mov    rdi,rbx
  40cf2d:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40cf32:	mov    r12,rax
  40cf35:	mov    eax,DWORD PTR [rsp+0x30]
  40cf39:	jmp    40cd40 <_start@@Base+0x6e00>
  40cf3e:	movsx  rsi,BYTE PTR [r12+0x16]
  40cf44:	shl    rsi,0x8
  40cf48:	movsx  rdx,BYTE PTR [r12+0x15]
  40cf4e:	mov    rax,rdx
  40cf51:	shl    rax,0x10
  40cf55:	or     rsi,rax
  40cf58:	movsx  rdx,BYTE PTR [r12+0x14]
  40cf5e:	mov    rax,rdx
  40cf61:	shl    rax,0x18
  40cf65:	or     rax,rsi
  40cf68:	movsx  rdx,BYTE PTR [r12+0x13]
  40cf6e:	mov    rsi,rdx
  40cf71:	shl    rsi,0x20
  40cf75:	or     rax,rsi
  40cf78:	movsx  rdx,BYTE PTR [r12+0x12]
  40cf7e:	mov    rsi,rdx
  40cf81:	shl    rsi,0x28
  40cf85:	or     rsi,rax
  40cf88:	movsx  rdx,BYTE PTR [r12+0x11]
  40cf8e:	mov    rax,rdx
  40cf91:	shl    rax,0x30
  40cf95:	or     rsi,rax
  40cf98:	movsx  rdx,BYTE PTR [r12+0x10]
  40cf9e:	mov    rax,rdx
  40cfa1:	shl    rax,0x38
  40cfa5:	or     rax,rsi
  40cfa8:	mov    r12,rax
  40cfab:	movabs rdx,0x7273696e67320000
  40cfb5:	xor    r12w,r12w
  40cfb9:	cmp    r12,rdx
  40cfbc:	je     40d260 <_start@@Base+0x7320>
  40cfc2:	and    rax,0xffffffffff000000
  40cfc8:	movabs rdx,0x7273696e67000000
  40cfd2:	cmp    rax,rdx
  40cfd5:	jne    40cfe1 <_start@@Base+0x70a1>
  40cfd7:	cmp    rcx,0x5
  40cfdb:	jg     40dd50 <_start@@Base+0x7e10>
  40cfe1:	movabs rax,0x7273696e67330000
  40cfeb:	cmp    r12,rax
  40cfee:	jne    40d000 <_start@@Base+0x70c0>
  40cff0:	mov    rax,r14
  40cff3:	sub    rax,r15
  40cff6:	cmp    rax,0x6
  40cffa:	jg     40daf0 <_start@@Base+0x7bb0>
  40d000:	mov    rdx,r14
  40d003:	mov    rsi,r15
  40d006:	mov    rdi,rbx
  40d009:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40d00e:	mov    r13,rax
  40d011:	jmp    40cece <_start@@Base+0x6f8e>
  40d016:	xor    esi,esi
  40d018:	jmp    40cf48 <_start@@Base+0x7008>
  40d01d:	xor    esi,esi
  40d01f:	jmp    40cf58 <_start@@Base+0x7018>
  40d024:	xor    eax,eax
  40d026:	jmp    40cf68 <_start@@Base+0x7028>
  40d02b:	xor    eax,eax
  40d02d:	jmp    40cf78 <_start@@Base+0x7038>
  40d032:	xor    esi,esi
  40d034:	jmp    40cf88 <_start@@Base+0x7048>
  40d039:	xor    esi,esi
  40d03b:	jmp    40cf98 <_start@@Base+0x7058>
  40d040:	mov    rdx,r14
  40d043:	mov    rsi,r12
  40d046:	mov    rdi,rbx
  40d049:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40d04e:	mov    r13,rax
  40d051:	jmp    40cece <_start@@Base+0x6f8e>
  40d056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d060:	movbe  rax,QWORD PTR [r12+0x8]
  40d067:	jmp    40ce2a <_start@@Base+0x6eea>
  40d06c:	nop    DWORD PTR [rax+0x0]
  40d070:	lea    r12,[r13+0x1]
  40d074:	mov    rax,r14
  40d077:	sub    rax,r12
  40d07a:	cmp    rax,0x1
  40d07e:	jle    40d091 <_start@@Base+0x7151>
  40d080:	cmp    BYTE PTR [r13+0x1],0x20
  40d085:	jg     40d1ab <_start@@Base+0x726b>
  40d08b:	je     40d968 <_start@@Base+0x7a28>
  40d091:	mov    rsi,r12
  40d094:	mov    rdx,r14
  40d097:	mov    rdi,rbx
  40d09a:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40d09f:	mov    r12,rax
  40d0a2:	mov    eax,DWORD PTR [rsp+0x30]
  40d0a6:	jmp    40cd40 <_start@@Base+0x6e00>
  40d0ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0b0:	add    r12,0x1
  40d0b4:	mov    rax,r14
  40d0b7:	mov    DWORD PTR [rbx+0x14],0x0
  40d0be:	sub    rax,r12
  40d0c1:	cmp    rax,0x7
  40d0c5:	ja     40cd82 <_start@@Base+0x6e42>
  40d0cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d0d0:	lea    rdx,[rip+0x1e015]        # 42b0ec <_IO_stdin_used@@Base+0xec>
  40d0d7:	movsxd rax,DWORD PTR [rdx+rax*4]
  40d0db:	add    rax,rdx
  40d0de:	jmp    rax
  40d0e0:	movsx  rcx,BYTE PTR [r12+0x6]
  40d0e6:	shl    rcx,0x8
  40d0ea:	movsx  rdx,BYTE PTR [r12+0x5]
  40d0f0:	mov    rax,rdx
  40d0f3:	shl    rax,0x10
  40d0f7:	or     rcx,rax
  40d0fa:	movsx  rdx,BYTE PTR [r12+0x4]
  40d100:	mov    rax,rdx
  40d103:	shl    rax,0x18
  40d107:	or     rax,rcx
  40d10a:	movsx  rdx,BYTE PTR [r12+0x3]
  40d110:	mov    rcx,rdx
  40d113:	shl    rcx,0x20
  40d117:	or     rax,rcx
  40d11a:	movsx  rdx,BYTE PTR [r12+0x2]
  40d120:	mov    rcx,rdx
  40d123:	shl    rcx,0x28
  40d127:	or     rcx,rax
  40d12a:	movsx  rdx,BYTE PTR [r12+0x1]
  40d130:	mov    rax,rdx
  40d133:	shl    rax,0x30
  40d137:	or     rcx,rax
  40d13a:	movsx  rdx,BYTE PTR [r12]
  40d13f:	mov    rax,rdx
  40d142:	shl    rax,0x38
  40d146:	or     rax,rcx
  40d149:	jmp    40cd88 <_start@@Base+0x6e48>
  40d14e:	xchg   ax,ax
  40d150:	xor    ecx,ecx
  40d152:	jmp    40d0ea <_start@@Base+0x71aa>
  40d154:	nop    DWORD PTR [rax+0x0]
  40d158:	xor    ecx,ecx
  40d15a:	jmp    40d0fa <_start@@Base+0x71ba>
  40d15c:	nop    DWORD PTR [rax+0x0]
  40d160:	xor    eax,eax
  40d162:	jmp    40d10a <_start@@Base+0x71ca>
  40d164:	nop    DWORD PTR [rax+0x0]
  40d168:	xor    eax,eax
  40d16a:	jmp    40d11a <_start@@Base+0x71da>
  40d16c:	nop    DWORD PTR [rax+0x0]
  40d170:	xor    ecx,ecx
  40d172:	jmp    40d12a <_start@@Base+0x71ea>
  40d174:	nop    DWORD PTR [rax+0x0]
  40d178:	xor    ecx,ecx
  40d17a:	jmp    40d13a <_start@@Base+0x71fa>
  40d17c:	nop    DWORD PTR [rax+0x0]
  40d180:	cmp    BYTE PTR [r13+0x1],0x20
  40d185:	jle    40cee7 <_start@@Base+0x6fa7>
  40d18b:	add    r13,0x1
  40d18f:	cmp    r14,r13
  40d192:	jne    40cf01 <_start@@Base+0x6fc1>
  40d198:	nop    DWORD PTR [rax+rax*1+0x0]
  40d1a0:	mov    DWORD PTR [rsp+0x30],0x0
  40d1a8:	mov    r12,r14
  40d1ab:	mov    esi,DWORD PTR [rbx+0x20]
  40d1ae:	test   esi,esi
  40d1b0:	je     40d982 <_start@@Base+0x7a42>
  40d1b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1c0:	mov    ecx,0x21
  40d1c5:	mov    rsi,r12
  40d1c8:	mov    rdx,r14
  40d1cb:	mov    rdi,rbx
  40d1ce:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40d1d3:	mov    ecx,DWORD PTR [rsp+0x2c]
  40d1d7:	mov    r12,rax
  40d1da:	test   ecx,ecx
  40d1dc:	je     40da98 <_start@@Base+0x7b58>
  40d1e2:	mov    rdi,QWORD PTR [rbx]
  40d1e5:	xor    esi,esi
  40d1e7:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  40d1ec:	test   rax,rax
  40d1ef:	je     40da98 <_start@@Base+0x7b58>
  40d1f5:	mov    edx,DWORD PTR [rsp+0x2c]
  40d1f9:	mov    DWORD PTR [rax],edx
  40d1fb:	jmp    40cabd <_start@@Base+0x6b7d>
  40d200:	lea    r12,[r13+0x1]
  40d204:	mov    rax,r14
  40d207:	sub    rax,r12
  40d20a:	cmp    rax,0x1
  40d20e:	jle    40d21d <_start@@Base+0x72dd>
  40d210:	cmp    BYTE PTR [r13+0x1],0x20
  40d215:	jg     40d22e <_start@@Base+0x72ee>
  40d217:	je     40db90 <_start@@Base+0x7c50>
  40d21d:	mov    rsi,r12
  40d220:	mov    rdx,r14
  40d223:	mov    rdi,rbx
  40d226:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40d22b:	mov    r12,rax
  40d22e:	cmp    r14,r12
  40d231:	je     40dba8 <_start@@Base+0x7c68>
  40d237:	cmp    BYTE PTR [r12],0x7d
  40d23c:	je     40e680 <_start@@Base+0x8740>
  40d242:	mov    DWORD PTR [rsp+0x30],0x1
  40d24a:	jmp    40cd4d <_start@@Base+0x6e0d>
  40d24f:	nop
  40d250:	movbe  rax,QWORD PTR [r12+0x10]
  40d257:	jmp    40cfa8 <_start@@Base+0x7068>
  40d25c:	nop    DWORD PTR [rax+0x0]
  40d260:	cmp    rcx,0x6
  40d264:	jle    40d000 <_start@@Base+0x70c0>
  40d26a:	mov    ecx,0x6
  40d26f:	mov    rdx,r14
  40d272:	mov    rsi,r15
  40d275:	mov    rdi,rbx
  40d278:	call   409080 <_start@@Base+0x3140>
  40d27d:	cmp    r15,rax
  40d280:	mov    r13,rax
  40d283:	je     40d000 <_start@@Base+0x70c0>
  40d289:	mov    rdi,QWORD PTR [rbx]
  40d28c:	mov    esi,0x2
  40d291:	call   4173e0 <flatcc_builder_start_table@@Base>
  40d296:	test   eax,eax
  40d298:	jne    40d640 <_start@@Base+0x7700>
  40d29e:	lea    rcx,[rsp+0x38]
  40d2a3:	mov    rsi,r13
  40d2a6:	mov    rdi,rbx
  40d2a9:	mov    rdx,r14
  40d2ac:	call   408fe0 <_start@@Base+0x30a0>
  40d2b1:	lea    rdi,[rsp+0x3c]
  40d2b6:	mov    r13,rax
  40d2b9:	mov    eax,DWORD PTR [rsp+0x38]
  40d2bd:	mov    QWORD PTR [rsp+0x8],rdi
  40d2c2:	nop    WORD PTR [rax+rax*1+0x0]
  40d2c8:	test   eax,eax
  40d2ca:	je     40d62b <_start@@Base+0x76eb>
  40d2d0:	lea    r12,[rip+0x1de55]        # 42b12c <_IO_stdin_used@@Base+0x12c>
  40d2d7:	cmp    r14,r13
  40d2da:	je     40d4c0 <_start@@Base+0x7580>
  40d2e0:	movzx  eax,BYTE PTR [r13+0x0]
  40d2e5:	cmp    al,0x22
  40d2e7:	je     40d530 <_start@@Base+0x75f0>
  40d2ed:	cmp    al,0x2e
  40d2ef:	je     40d7b0 <_start@@Base+0x7870>
  40d2f5:	mov    DWORD PTR [rbx+0x14],0x1
  40d2fc:	mov    rax,r14
  40d2ff:	sub    rax,r13
  40d302:	cmp    rax,0x7
  40d306:	jbe    40d550 <_start@@Base+0x7610>
  40d30c:	movbe  rax,QWORD PTR [r13+0x0]
  40d312:	movabs rdx,0x616161615f626262
  40d31c:	cmp    rax,rdx
  40d31f:	jne    40d4c0 <_start@@Base+0x7580>
  40d325:	lea    r15,[r13+0x8]
  40d329:	mov    rdx,r14
  40d32c:	sub    rdx,r15
  40d32f:	cmp    rdx,0x7
  40d333:	ja     40d4e0 <_start@@Base+0x75a0>
  40d339:	lea    rcx,[rip+0x1ddcc]        # 42b10c <_IO_stdin_used@@Base+0x10c>
  40d340:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40d344:	add    rax,rcx
  40d347:	jmp    rax
  40d349:	nop    DWORD PTR [rax+0x0]
  40d350:	movsx  rcx,BYTE PTR [r13+0xe]
  40d355:	shl    rcx,0x8
  40d359:	movsx  rsi,BYTE PTR [r13+0xd]
  40d35e:	mov    rax,rsi
  40d361:	shl    rax,0x10
  40d365:	or     rcx,rax
  40d368:	movsx  rsi,BYTE PTR [r13+0xc]
  40d36d:	mov    rax,rsi
  40d370:	shl    rax,0x18
  40d374:	or     rax,rcx
  40d377:	movsx  rsi,BYTE PTR [r13+0xb]
  40d37c:	shl    rsi,0x20
  40d380:	or     rax,rsi
  40d383:	movsx  rsi,BYTE PTR [r13+0xa]
  40d388:	shl    rsi,0x28
  40d38c:	mov    rcx,rsi
  40d38f:	or     rcx,rax
  40d392:	movsx  rsi,BYTE PTR [r13+0x9]
  40d397:	mov    rax,rsi
  40d39a:	shl    rax,0x30
  40d39e:	or     rcx,rax
  40d3a1:	movsx  rax,BYTE PTR [r13+0x8]
  40d3a6:	shl    rax,0x38
  40d3aa:	or     rax,rcx
  40d3ad:	mov    rsi,rax
  40d3b0:	movabs rcx,0x625f737465707300
  40d3ba:	xor    sil,sil
  40d3bd:	cmp    rsi,rcx
  40d3c0:	je     40d660 <_start@@Base+0x7720>
  40d3c6:	movabs rcx,0x625f73746172745f
  40d3d0:	cmp    rax,rcx
  40d3d3:	jne    40d3df <_start@@Base+0x749f>
  40d3d5:	cmp    rdx,0x8
  40d3d9:	jg     40d820 <_start@@Base+0x78e0>
  40d3df:	mov    rsi,r15
  40d3e2:	mov    rdx,r14
  40d3e5:	mov    rdi,rbx
  40d3e8:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40d3ed:	mov    r15,rax
  40d3f0:	mov    rax,r14
  40d3f3:	sub    rax,r15
  40d3f6:	cmp    rax,0x1
  40d3fa:	jle    40d408 <_start@@Base+0x74c8>
  40d3fc:	cmp    BYTE PTR [r15],0x20
  40d400:	jg     40d419 <_start@@Base+0x74d9>
  40d402:	je     40d600 <_start@@Base+0x76c0>
  40d408:	mov    rsi,r15
  40d40b:	mov    rdx,r14
  40d40e:	mov    rdi,rbx
  40d411:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40d416:	mov    r15,rax
  40d419:	cmp    r14,r15
  40d41c:	je     40d620 <_start@@Base+0x76e0>
  40d422:	cmp    BYTE PTR [r15],0x2c
  40d426:	je     40d740 <_start@@Base+0x7800>
  40d42c:	mov    DWORD PTR [rsp+0x38],0x0
  40d434:	cmp    BYTE PTR [r15],0x7d
  40d438:	je     40d4f0 <_start@@Base+0x75b0>
  40d43e:	mov    ecx,0xa
  40d443:	mov    rdx,r14
  40d446:	mov    rsi,r15
  40d449:	mov    rdi,rbx
  40d44c:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40d451:	mov    r13,rax
  40d454:	mov    eax,DWORD PTR [rsp+0x38]
  40d458:	jmp    40d2c8 <_start@@Base+0x7388>
  40d45d:	nop    DWORD PTR [rax]
  40d460:	xor    ecx,ecx
  40d462:	jmp    40d359 <_start@@Base+0x7419>
  40d467:	nop    WORD PTR [rax+rax*1+0x0]
  40d470:	xor    eax,eax
  40d472:	jmp    40d377 <_start@@Base+0x7437>
  40d477:	nop    WORD PTR [rax+rax*1+0x0]
  40d480:	xor    eax,eax
  40d482:	jmp    40d383 <_start@@Base+0x7443>
  40d487:	nop    WORD PTR [rax+rax*1+0x0]
  40d490:	xor    ecx,ecx
  40d492:	jmp    40d392 <_start@@Base+0x7452>
  40d497:	nop    WORD PTR [rax+rax*1+0x0]
  40d4a0:	xor    ecx,ecx
  40d4a2:	jmp    40d3a1 <_start@@Base+0x7461>
  40d4a7:	nop    WORD PTR [rax+rax*1+0x0]
  40d4b0:	xor    ecx,ecx
  40d4b2:	jmp    40d368 <_start@@Base+0x7428>
  40d4b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d4c0:	mov    rdx,r14
  40d4c3:	mov    rsi,r13
  40d4c6:	mov    rdi,rbx
  40d4c9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40d4ce:	mov    r15,rax
  40d4d1:	jmp    40d3f0 <_start@@Base+0x74b0>
  40d4d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d4e0:	movbe  rax,QWORD PTR [r13+0x8]
  40d4e6:	jmp    40d3ad <_start@@Base+0x746d>
  40d4eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d4f0:	lea    r13,[r15+0x1]
  40d4f4:	mov    rax,r14
  40d4f7:	sub    rax,r13
  40d4fa:	cmp    rax,0x1
  40d4fe:	jle    40d511 <_start@@Base+0x75d1>
  40d500:	cmp    BYTE PTR [r15+0x1],0x20
  40d505:	jg     40d62b <_start@@Base+0x76eb>
  40d50b:	je     40d9d0 <_start@@Base+0x7a90>
  40d511:	mov    rsi,r13
  40d514:	mov    rdx,r14
  40d517:	mov    rdi,rbx
  40d51a:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40d51f:	mov    r13,rax
  40d522:	mov    eax,DWORD PTR [rsp+0x38]
  40d526:	jmp    40d2c8 <_start@@Base+0x7388>
  40d52b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d530:	add    r13,0x1
  40d534:	mov    rax,r14
  40d537:	mov    DWORD PTR [rbx+0x14],0x0
  40d53e:	sub    rax,r13
  40d541:	cmp    rax,0x7
  40d545:	ja     40d30c <_start@@Base+0x73cc>
  40d54b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d550:	movsxd rax,DWORD PTR [r12+rax*4]
  40d554:	add    rax,r12
  40d557:	jmp    rax
  40d559:	nop    DWORD PTR [rax+0x0]
  40d560:	movsx  rcx,BYTE PTR [r13+0x6]
  40d565:	shl    rcx,0x8
  40d569:	movsx  rdx,BYTE PTR [r13+0x5]
  40d56e:	mov    rax,rdx
  40d571:	shl    rax,0x10
  40d575:	or     rcx,rax
  40d578:	movsx  rdx,BYTE PTR [r13+0x4]
  40d57d:	mov    rax,rdx
  40d580:	shl    rax,0x18
  40d584:	or     rax,rcx
  40d587:	movsx  rdx,BYTE PTR [r13+0x3]
  40d58c:	mov    rcx,rdx
  40d58f:	shl    rcx,0x20
  40d593:	or     rax,rcx
  40d596:	movsx  rdx,BYTE PTR [r13+0x2]
  40d59b:	mov    rcx,rdx
  40d59e:	shl    rcx,0x28
  40d5a2:	or     rcx,rax
  40d5a5:	movsx  rdx,BYTE PTR [r13+0x1]
  40d5aa:	mov    rax,rdx
  40d5ad:	shl    rax,0x30
  40d5b1:	or     rcx,rax
  40d5b4:	movsx  rdx,BYTE PTR [r13+0x0]
  40d5b9:	mov    rax,rdx
  40d5bc:	shl    rax,0x38
  40d5c0:	or     rax,rcx
  40d5c3:	jmp    40d312 <_start@@Base+0x73d2>
  40d5c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d5d0:	xor    ecx,ecx
  40d5d2:	jmp    40d569 <_start@@Base+0x7629>
  40d5d4:	nop    DWORD PTR [rax+0x0]
  40d5d8:	xor    ecx,ecx
  40d5da:	jmp    40d578 <_start@@Base+0x7638>
  40d5dc:	nop    DWORD PTR [rax+0x0]
  40d5e0:	xor    eax,eax
  40d5e2:	jmp    40d587 <_start@@Base+0x7647>
  40d5e4:	nop    DWORD PTR [rax+0x0]
  40d5e8:	xor    eax,eax
  40d5ea:	jmp    40d596 <_start@@Base+0x7656>
  40d5ec:	nop    DWORD PTR [rax+0x0]
  40d5f0:	xor    ecx,ecx
  40d5f2:	jmp    40d5a5 <_start@@Base+0x7665>
  40d5f4:	nop    DWORD PTR [rax+0x0]
  40d5f8:	xor    ecx,ecx
  40d5fa:	jmp    40d5b4 <_start@@Base+0x7674>
  40d5fc:	nop    DWORD PTR [rax+0x0]
  40d600:	cmp    BYTE PTR [r15+0x1],0x20
  40d605:	jle    40d408 <_start@@Base+0x74c8>
  40d60b:	add    r15,0x1
  40d60f:	cmp    r14,r15
  40d612:	jne    40d422 <_start@@Base+0x74e2>
  40d618:	nop    DWORD PTR [rax+rax*1+0x0]
  40d620:	mov    DWORD PTR [rsp+0x38],0x0
  40d628:	mov    r13,r14
  40d62b:	mov    r11d,DWORD PTR [rbx+0x20]
  40d62f:	test   r11d,r11d
  40d632:	je     40d9ec <_start@@Base+0x7aac>
  40d638:	nop    DWORD PTR [rax+rax*1+0x0]
  40d640:	mov    ecx,0x21
  40d645:	mov    rdx,r14
  40d648:	mov    rsi,r13
  40d64b:	mov    rdi,rbx
  40d64e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40d653:	mov    r12,rax
  40d656:	jmp    40d1c0 <_start@@Base+0x7280>
  40d65b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d660:	cmp    rdx,0x7
  40d664:	jle    40d3df <_start@@Base+0x749f>
  40d66a:	mov    ecx,0x7
  40d66f:	mov    rdx,r14
  40d672:	mov    rsi,r15
  40d675:	mov    rdi,rbx
  40d678:	call   409080 <_start@@Base+0x3140>
  40d67d:	cmp    r15,rax
  40d680:	mov    r13,rax
  40d683:	je     40d3df <_start@@Base+0x749f>
  40d689:	cmp    r14,rax
  40d68c:	mov    QWORD PTR [rsp+0x48],0x0
  40d695:	mov    QWORD PTR [rsp+0x50],0x0
  40d69e:	mov    DWORD PTR [rsp+0x3c],0x0
  40d6a6:	je     40e780 <_start@@Base+0x8840>
  40d6ac:	mov    rcx,QWORD PTR [rsp+0x8]
  40d6b1:	mov    r8,rbp
  40d6b4:	mov    rdx,r14
  40d6b7:	mov    rsi,rax
  40d6ba:	mov    rdi,rbx
  40d6bd:	call   41df90 <flatcc_json_parser_integer@@Base>
  40d6c2:	cmp    r13,rax
  40d6c5:	mov    r15,rax
  40d6c8:	je     40e780 <_start@@Base+0x8840>
  40d6ce:	mov    edx,DWORD PTR [rsp+0x3c]
  40d6d2:	mov    rax,QWORD PTR [rsp+0x50]
  40d6d7:	test   edx,edx
  40d6d9:	je     40d950 <_start@@Base+0x7a10>
  40d6df:	movabs rdx,0x8000000000000000
  40d6e9:	mov    ecx,0x8
  40d6ee:	cmp    rax,rdx
  40d6f1:	ja     40e646 <_start@@Base+0x8706>
  40d6f7:	neg    rax
  40d6fa:	mov    QWORD PTR [rsp+0x48],rax
  40d6ff:	test   rax,rax
  40d702:	jne    40d70e <_start@@Base+0x77ce>
  40d704:	test   BYTE PTR [rbx+0x10],0x2
  40d708:	je     40d3f0 <_start@@Base+0x74b0>
  40d70e:	mov    rdi,QWORD PTR [rbx]
  40d711:	xor    esi,esi
  40d713:	mov    ecx,0x8
  40d718:	mov    edx,0x8
  40d71d:	call   418c80 <flatcc_builder_table_add@@Base>
  40d722:	test   rax,rax
  40d725:	je     40dd40 <_start@@Base+0x7e00>
  40d72b:	mov    rdx,QWORD PTR [rsp+0x48]
  40d730:	mov    QWORD PTR [rax],rdx
  40d733:	jmp    40d3f0 <_start@@Base+0x74b0>
  40d738:	nop    DWORD PTR [rax+rax*1+0x0]
  40d740:	lea    r13,[r15+0x1]
  40d744:	mov    rax,r14
  40d747:	sub    rax,r13
  40d74a:	cmp    rax,0x1
  40d74e:	jle    40d75d <_start@@Base+0x781d>
  40d750:	cmp    BYTE PTR [r15+0x1],0x20
  40d755:	jg     40d76e <_start@@Base+0x782e>
  40d757:	je     40dbd0 <_start@@Base+0x7c90>
  40d75d:	mov    rsi,r13
  40d760:	mov    rdx,r14
  40d763:	mov    rdi,rbx
  40d766:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40d76b:	mov    r13,rax
  40d76e:	cmp    r14,r13
  40d771:	je     40dbe8 <_start@@Base+0x7ca8>
  40d777:	cmp    BYTE PTR [r13+0x0],0x7d
  40d77c:	je     40e6c2 <_start@@Base+0x8782>
  40d782:	mov    DWORD PTR [rsp+0x38],0x1
  40d78a:	jmp    40d2d7 <_start@@Base+0x7397>
  40d78f:	nop
  40d790:	mov    rsi,r12
  40d793:	mov    ecx,0x5
  40d798:	mov    rdx,r14
  40d79b:	mov    rdi,rbx
  40d79e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40d7a3:	mov    r12,rax
  40d7a6:	jmp    40cd72 <_start@@Base+0x6e32>
  40d7ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7b0:	mov    rsi,r13
  40d7b3:	mov    ecx,0x5
  40d7b8:	mov    rdx,r14
  40d7bb:	mov    rdi,rbx
  40d7be:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40d7c3:	mov    r13,rax
  40d7c6:	jmp    40d2fc <_start@@Base+0x73bc>
  40d7cb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d7d0:	cmp    BYTE PTR [r12+0x1],0x20
  40d7d6:	jle    40cad6 <_start@@Base+0x6b96>
  40d7dc:	add    r12,0x1
  40d7e0:	cmp    r14,r12
  40d7e3:	jne    40caf0 <_start@@Base+0x6bb0>
  40d7e9:	nop    DWORD PTR [rax+0x0]
  40d7f0:	mov    eax,DWORD PTR [rbx+0x20]
  40d7f3:	mov    DWORD PTR [rsp+0x28],0x0
  40d7fb:	mov    rbp,r14
  40d7fe:	test   eax,eax
  40d800:	jne    40cb40 <_start@@Base+0x6c00>
  40d806:	jmp    40e848 <_start@@Base+0x8908>
  40d80b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d810:	mov    rsi,r14
  40d813:	mov    rdi,r12
  40d816:	call   406050 <_start@@Base+0x110>
  40d81b:	jmp    40cb9a <_start@@Base+0x6c5a>
  40d820:	mov    ecx,0x8
  40d825:	mov    rdx,r14
  40d828:	mov    rsi,r15
  40d82b:	mov    rdi,rbx
  40d82e:	call   409080 <_start@@Base+0x3140>
  40d833:	cmp    r15,rax
  40d836:	mov    r13,rax
  40d839:	je     40d3df <_start@@Base+0x749f>
  40d83f:	cmp    r14,rax
  40d842:	mov    DWORD PTR [rsp+0x3c],0x0
  40d84a:	mov    QWORD PTR [rsp+0x50],0x0
  40d853:	mov    DWORD PTR [rsp+0x48],0x0
  40d85b:	je     40e730 <_start@@Base+0x87f0>
  40d861:	mov    rcx,QWORD PTR [rsp]
  40d865:	mov    r8,rbp
  40d868:	mov    rdx,r14
  40d86b:	mov    rsi,rax
  40d86e:	mov    rdi,rbx
  40d871:	call   41df90 <flatcc_json_parser_integer@@Base>
  40d876:	cmp    r13,rax
  40d879:	mov    r15,rax
  40d87c:	je     40e730 <_start@@Base+0x87f0>
  40d882:	mov    eax,DWORD PTR [rsp+0x48]
  40d886:	mov    ecx,0x8
  40d88b:	test   eax,eax
  40d88d:	jne    40d9a5 <_start@@Base+0x7a65>
  40d893:	mov    rax,QWORD PTR [rsp+0x50]
  40d898:	mov    edx,0xffffffff
  40d89d:	cmp    rax,rdx
  40d8a0:	ja     40d9a0 <_start@@Base+0x7a60>
  40d8a6:	mov    edx,eax
  40d8a8:	mov    DWORD PTR [rsp+0x3c],eax
  40d8ac:	test   edx,edx
  40d8ae:	jne    40d8ba <_start@@Base+0x797a>
  40d8b0:	test   BYTE PTR [rbx+0x10],0x2
  40d8b4:	je     40d3f0 <_start@@Base+0x74b0>
  40d8ba:	mov    rdi,QWORD PTR [rbx]
  40d8bd:	mov    ecx,0x4
  40d8c2:	mov    edx,0x4
  40d8c7:	mov    esi,0x1
  40d8cc:	call   418c80 <flatcc_builder_table_add@@Base>
  40d8d1:	test   rax,rax
  40d8d4:	je     40dd40 <_start@@Base+0x7e00>
  40d8da:	mov    edx,DWORD PTR [rsp+0x3c]
  40d8de:	mov    DWORD PTR [rax],edx
  40d8e0:	jmp    40d3f0 <_start@@Base+0x74b0>
  40d8e5:	nop    DWORD PTR [rax]
  40d8e8:	lea    rbp,[r12+0x1]
  40d8ed:	mov    rax,r14
  40d8f0:	sub    rax,rbp
  40d8f3:	cmp    rax,0x1
  40d8f7:	jle    40d907 <_start@@Base+0x79c7>
  40d8f9:	cmp    BYTE PTR [r12+0x1],0x20
  40d8ff:	jg     40d918 <_start@@Base+0x79d8>
  40d901:	je     40e87f <_start@@Base+0x893f>
  40d907:	mov    rsi,rbp
  40d90a:	mov    rdx,r14
  40d90d:	mov    rdi,rbx
  40d910:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40d915:	mov    rbp,rax
  40d918:	cmp    r14,rbp
  40d91b:	je     40f210 <_start@@Base+0x92d0>
  40d921:	cmp    BYTE PTR [rbp+0x0],0x7d
  40d925:	je     40f103 <_start@@Base+0x91c3>
  40d92b:	cmp    r14,rbp
  40d92e:	mov    DWORD PTR [rsp+0x28],0x1
  40d936:	jne    40ca11 <_start@@Base+0x6ad1>
  40d93c:	nop    DWORD PTR [rax+0x0]
  40d940:	xor    r15d,r15d
  40d943:	xor    r12d,r12d
  40d946:	jmp    40ca8c <_start@@Base+0x6b4c>
  40d94b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d950:	test   rax,rax
  40d953:	js     40e641 <_start@@Base+0x8701>
  40d959:	mov    QWORD PTR [rsp+0x48],rax
  40d95e:	jmp    40d6ff <_start@@Base+0x77bf>
  40d963:	nop    DWORD PTR [rax+rax*1+0x0]
  40d968:	cmp    BYTE PTR [r13+0x2],0x20
  40d96d:	jle    40d091 <_start@@Base+0x7151>
  40d973:	mov    esi,DWORD PTR [rbx+0x20]
  40d976:	lea    r12,[r13+0x2]
  40d97a:	test   esi,esi
  40d97c:	jne    40d1c0 <_start@@Base+0x7280>
  40d982:	mov    rdi,QWORD PTR [rbx]
  40d985:	call   417da0 <flatcc_builder_end_table@@Base>
  40d98a:	test   eax,eax
  40d98c:	mov    DWORD PTR [rsp+0x2c],eax
  40d990:	je     40d1c0 <_start@@Base+0x7280>
  40d996:	jmp    40d1e2 <_start@@Base+0x72a2>
  40d99b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9a0:	mov    ecx,0x7
  40d9a5:	mov    rsi,r15
  40d9a8:	mov    rdx,r14
  40d9ab:	mov    rdi,rbx
  40d9ae:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40d9b3:	cmp    r13,rax
  40d9b6:	mov    r15,rax
  40d9b9:	je     40e730 <_start@@Base+0x87f0>
  40d9bf:	mov    edx,DWORD PTR [rsp+0x3c]
  40d9c3:	jmp    40d8ac <_start@@Base+0x796c>
  40d9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d9d0:	cmp    BYTE PTR [r15+0x2],0x20
  40d9d5:	jle    40d511 <_start@@Base+0x75d1>
  40d9db:	mov    r11d,DWORD PTR [rbx+0x20]
  40d9df:	lea    r13,[r15+0x2]
  40d9e3:	test   r11d,r11d
  40d9e6:	jne    40d640 <_start@@Base+0x7700>
  40d9ec:	mov    rdi,QWORD PTR [rbx]
  40d9ef:	call   417da0 <flatcc_builder_end_table@@Base>
  40d9f4:	test   eax,eax
  40d9f6:	mov    r12d,eax
  40d9f9:	je     40d640 <_start@@Base+0x7700>
  40d9ff:	mov    rdi,QWORD PTR [rbx]
  40da02:	mov    esi,0x1
  40da07:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  40da0c:	test   rax,rax
  40da0f:	jne    40db84 <_start@@Base+0x7c44>
  40da15:	mov    r12,r13
  40da18:	jmp    40d1c0 <_start@@Base+0x7280>
  40da1d:	nop    DWORD PTR [rax]
  40da20:	mov    rsi,rbp
  40da23:	mov    ecx,0x5
  40da28:	mov    rdx,r14
  40da2b:	mov    rdi,rbx
  40da2e:	mov    r15,r14
  40da31:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40da36:	mov    rbp,rax
  40da39:	sub    r15,rax
  40da3c:	jmp    40ca32 <_start@@Base+0x6af2>
  40da41:	nop    DWORD PTR [rax+0x0]
  40da48:	mov    rsi,rbp
  40da4b:	mov    ecx,0x5
  40da50:	mov    rdx,r14
  40da53:	mov    rdi,rbx
  40da56:	call   409080 <_start@@Base+0x3140>
  40da5b:	cmp    rax,rbp
  40da5e:	mov    rsi,rax
  40da61:	je     40caac <_start@@Base+0x6b6c>
  40da67:	lea    rcx,[rsp+0x2c]
  40da6c:	mov    rdx,r14
  40da6f:	mov    rdi,rbx
  40da72:	call   40a920 <_start@@Base+0x49e0>
  40da77:	mov    edx,DWORD PTR [rsp+0x2c]
  40da7b:	mov    r12,rax
  40da7e:	test   edx,edx
  40da80:	je     40da98 <_start@@Base+0x7b58>
  40da82:	mov    rdi,QWORD PTR [rbx]
  40da85:	mov    esi,0x1
  40da8a:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  40da8f:	test   rax,rax
  40da92:	jne    40d1f5 <_start@@Base+0x72b5>
  40da98:	mov    rbp,r12
  40da9b:	jmp    40cb40 <_start@@Base+0x6c00>
  40daa0:	mov    rsi,rbp
  40daa3:	mov    ecx,0x7
  40daa8:	mov    rdx,r14
  40daab:	mov    rdi,rbx
  40daae:	call   409080 <_start@@Base+0x3140>
  40dab3:	cmp    rax,rbp
  40dab6:	mov    rsi,rax
  40dab9:	je     40ca73 <_start@@Base+0x6b33>
  40dabf:	lea    rax,[rip+0x62fa]        # 413dc0 <_start@@Base+0xde80>
  40dac6:	sub    rsp,0x8
  40daca:	xor    ecx,ecx
  40dacc:	mov    r8d,0x3
  40dad2:	mov    rdx,r14
  40dad5:	mov    rdi,rbx
  40dad8:	push   rax
  40dad9:	mov    r9,QWORD PTR [rsp+0x50]
  40dade:	call   41eaa0 <flatcc_json_parser_union_vector@@Base>
  40dae3:	pop    rcx
  40dae4:	mov    r12,rax
  40dae7:	pop    rsi
  40dae8:	jmp    40cabd <_start@@Base+0x6b7d>
  40daed:	nop    DWORD PTR [rax]
  40daf0:	mov    ecx,0x6
  40daf5:	mov    rdx,r14
  40daf8:	mov    rsi,r15
  40dafb:	mov    rdi,rbx
  40dafe:	call   409080 <_start@@Base+0x3140>
  40db03:	cmp    r15,rax
  40db06:	mov    r13,rax
  40db09:	je     40d000 <_start@@Base+0x70c0>
  40db0f:	mov    rdi,QWORD PTR [rbx]
  40db12:	mov    esi,0x2
  40db17:	call   4173e0 <flatcc_builder_start_table@@Base>
  40db1c:	test   eax,eax
  40db1e:	jne    40d640 <_start@@Base+0x7700>
  40db24:	cmp    r14,r13
  40db27:	je     40db34 <_start@@Base+0x7bf4>
  40db29:	cmp    BYTE PTR [r13+0x0],0x7b
  40db2e:	je     40e895 <_start@@Base+0x8955>
  40db34:	mov    rsi,r13
  40db37:	mov    ecx,0x15
  40db3c:	mov    rdx,r14
  40db3f:	mov    rdi,rbx
  40db42:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40db47:	mov    r13,rax
  40db4a:	nop    WORD PTR [rax+rax*1+0x0]
  40db50:	mov    edi,DWORD PTR [rbx+0x20]
  40db53:	test   edi,edi
  40db55:	jne    40d640 <_start@@Base+0x7700>
  40db5b:	mov    rdi,QWORD PTR [rbx]
  40db5e:	call   417da0 <flatcc_builder_end_table@@Base>
  40db63:	test   eax,eax
  40db65:	mov    r12d,eax
  40db68:	je     40d640 <_start@@Base+0x7700>
  40db6e:	mov    rdi,QWORD PTR [rbx]
  40db71:	mov    esi,0x2
  40db76:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  40db7b:	test   rax,rax
  40db7e:	je     40da15 <_start@@Base+0x7ad5>
  40db84:	mov    DWORD PTR [rax],r12d
  40db87:	jmp    40cece <_start@@Base+0x6f8e>
  40db8c:	nop    DWORD PTR [rax+0x0]
  40db90:	cmp    BYTE PTR [r13+0x2],0x20
  40db95:	jle    40d21d <_start@@Base+0x72dd>
  40db9b:	lea    r12,[r13+0x2]
  40db9f:	cmp    r14,r12
  40dba2:	jne    40d237 <_start@@Base+0x72f7>
  40dba8:	mov    ecx,0xa
  40dbad:	mov    rdx,r14
  40dbb0:	mov    rsi,r14
  40dbb3:	mov    rdi,rbx
  40dbb6:	mov    DWORD PTR [rsp+0x30],0x0
  40dbbe:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40dbc3:	mov    r12,rax
  40dbc6:	mov    eax,DWORD PTR [rsp+0x30]
  40dbca:	jmp    40cd40 <_start@@Base+0x6e00>
  40dbcf:	nop
  40dbd0:	cmp    BYTE PTR [r15+0x2],0x20
  40dbd5:	jle    40d75d <_start@@Base+0x781d>
  40dbdb:	lea    r13,[r15+0x2]
  40dbdf:	cmp    r14,r13
  40dbe2:	jne    40d777 <_start@@Base+0x7837>
  40dbe8:	mov    ecx,0xa
  40dbed:	mov    rdx,r14
  40dbf0:	mov    rsi,r14
  40dbf3:	mov    rdi,rbx
  40dbf6:	mov    DWORD PTR [rsp+0x38],0x0
  40dbfe:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40dc03:	mov    r13,rax
  40dc06:	mov    eax,DWORD PTR [rsp+0x38]
  40dc0a:	jmp    40d2c8 <_start@@Base+0x7388>
  40dc0f:	nop
  40dc10:	mov    rsi,r12
  40dc13:	mov    ecx,0x4
  40dc18:	mov    rdx,r14
  40dc1b:	mov    rdi,rbx
  40dc1e:	call   409080 <_start@@Base+0x3140>
  40dc23:	cmp    r12,rax
  40dc26:	mov    rsi,rax
  40dc29:	je     40cbc0 <_start@@Base+0x6c80>
  40dc2f:	lea    rax,[rip+0xffffffffffff852a]        # 406160 <_start@@Base+0x220>
  40dc36:	sub    rsp,0x8
  40dc3a:	mov    r8d,0x3
  40dc40:	xor    ecx,ecx
  40dc42:	mov    rdx,r14
  40dc45:	mov    rdi,rbx
  40dc48:	push   rax
  40dc49:	lea    rax,[rip+0x6170]        # 413dc0 <_start@@Base+0xde80>
  40dc50:	push   rax
  40dc51:	lea    rax,[rip+0x2b828]        # 439480 <__data_start@@Base+0x3c0>
  40dc58:	push   rax
  40dc59:	mov    r9,QWORD PTR [rsp+0x60]
  40dc5e:	call   41eb80 <flatcc_json_parser_union_type_vector@@Base>
  40dc63:	add    rsp,0x20
  40dc67:	mov    r12,rax
  40dc6a:	jmp    40cabd <_start@@Base+0x6b7d>
  40dc6f:	nop
  40dc70:	mov    ecx,0x8
  40dc75:	mov    rdx,r14
  40dc78:	mov    rsi,r13
  40dc7b:	mov    rdi,rbx
  40dc7e:	call   409080 <_start@@Base+0x3140>
  40dc83:	cmp    rax,r13
  40dc86:	mov    r11,rax
  40dc89:	je     40e05a <_start@@Base+0x811a>
  40dc8f:	cmp    r14,rax
  40dc92:	mov    QWORD PTR [rsp+0x48],0x0
  40dc9b:	mov    QWORD PTR [rsp+0x50],0x0
  40dca4:	mov    DWORD PTR [rsp+0x3c],0x0
  40dcac:	je     40f170 <_start@@Base+0x9230>
  40dcb2:	mov    rcx,QWORD PTR [rsp+0x8]
  40dcb7:	mov    r8,rbp
  40dcba:	mov    rdx,r14
  40dcbd:	mov    rsi,rax
  40dcc0:	mov    rdi,rbx
  40dcc3:	mov    QWORD PTR [rsp+0x10],rax
  40dcc8:	call   41df90 <flatcc_json_parser_integer@@Base>
  40dccd:	mov    r11,QWORD PTR [rsp+0x10]
  40dcd2:	mov    r15,rax
  40dcd5:	cmp    r11,rax
  40dcd8:	je     40f170 <_start@@Base+0x9230>
  40dcde:	mov    edi,DWORD PTR [rsp+0x3c]
  40dce2:	mov    rax,QWORD PTR [rsp+0x50]
  40dce7:	test   edi,edi
  40dce9:	je     40e5d0 <_start@@Base+0x8690>
  40dcef:	movabs rdx,0x8000000000000000
  40dcf9:	mov    ecx,0x8
  40dcfe:	cmp    rax,rdx
  40dd01:	ja     40f039 <_start@@Base+0x90f9>
  40dd07:	neg    rax
  40dd0a:	mov    QWORD PTR [rsp+0x48],rax
  40dd0f:	test   rax,rax
  40dd12:	jne    40dd1e <_start@@Base+0x7dde>
  40dd14:	test   BYTE PTR [rbx+0x10],0x2
  40dd18:	je     40de81 <_start@@Base+0x7f41>
  40dd1e:	mov    rdi,QWORD PTR [rbx]
  40dd21:	mov    ecx,0x8
  40dd26:	mov    edx,0x8
  40dd2b:	mov    esi,0x5
  40dd30:	call   418c80 <flatcc_builder_table_add@@Base>
  40dd35:	test   rax,rax
  40dd38:	jne    40e58a <_start@@Base+0x864a>
  40dd3e:	xchg   ax,ax
  40dd40:	mov    r13,r15
  40dd43:	jmp    40d640 <_start@@Base+0x7700>
  40dd48:	nop    DWORD PTR [rax+rax*1+0x0]
  40dd50:	mov    ecx,0x5
  40dd55:	mov    rdx,r14
  40dd58:	mov    rsi,r15
  40dd5b:	mov    rdi,rbx
  40dd5e:	call   409080 <_start@@Base+0x3140>
  40dd63:	cmp    r15,rax
  40dd66:	mov    r13,rax
  40dd69:	je     40cfe1 <_start@@Base+0x70a1>
  40dd6f:	mov    rdi,QWORD PTR [rbx]
  40dd72:	mov    esi,0x9
  40dd77:	call   4173e0 <flatcc_builder_start_table@@Base>
  40dd7c:	test   eax,eax
  40dd7e:	jne    40d640 <_start@@Base+0x7700>
  40dd84:	lea    rcx,[rsp+0x34]
  40dd89:	mov    rsi,r13
  40dd8c:	mov    rdi,rbx
  40dd8f:	mov    rdx,r14
  40dd92:	call   408fe0 <_start@@Base+0x30a0>
  40dd97:	lea    rdi,[rsp+0x3c]
  40dd9c:	mov    r13,rax
  40dd9f:	mov    eax,DWORD PTR [rsp+0x34]
  40dda3:	mov    QWORD PTR [rsp+0x8],rdi
  40dda8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ddb0:	test   eax,eax
  40ddb2:	je     40def8 <_start@@Base+0x7fb8>
  40ddb8:	cmp    r14,r13
  40ddbb:	lea    r12,[rsp+0x38]
  40ddc0:	je     40e318 <_start@@Base+0x83d8>
  40ddc6:	movzx  eax,BYTE PTR [r13+0x0]
  40ddcb:	cmp    al,0x22
  40ddcd:	je     40e100 <_start@@Base+0x81c0>
  40ddd3:	cmp    al,0x2e
  40ddd5:	je     40e4a0 <_start@@Base+0x8560>
  40dddb:	mov    DWORD PTR [rbx+0x14],0x1
  40dde2:	mov    rdx,r14
  40dde5:	sub    rdx,r13
  40dde8:	cmp    rdx,0x7
  40ddec:	jbe    40e120 <_start@@Base+0x81e0>
  40ddf2:	movbe  rax,QWORD PTR [r13+0x0]
  40ddf8:	movabs rcx,0x63636362ffffffff
  40de02:	cmp    rax,rcx
  40de05:	ja     40df38 <_start@@Base+0x7ff8>
  40de0b:	movabs rcx,0x6161616131323334
  40de15:	cmp    rax,rcx
  40de18:	je     40e1f0 <_start@@Base+0x82b0>
  40de1e:	movabs rcx,0xffffffff00000000
  40de28:	movabs rsi,0x6161616100000000
  40de32:	and    rcx,rax
  40de35:	cmp    rcx,rsi
  40de38:	je     40e320 <_start@@Base+0x83e0>
  40de3e:	movabs rsi,0x6262626231323334
  40de48:	cmp    rax,rsi
  40de4b:	je     40e3f0 <_start@@Base+0x84b0>
  40de51:	movabs rax,0x6262626200000000
  40de5b:	cmp    rcx,rax
  40de5e:	jne    40de70 <_start@@Base+0x7f30>
  40de60:	cmp    rdx,0x4
  40de64:	jg     40e5e8 <_start@@Base+0x86a8>
  40de6a:	nop    WORD PTR [rax+rax*1+0x0]
  40de70:	mov    rdx,r14
  40de73:	mov    rsi,r13
  40de76:	mov    rdi,rbx
  40de79:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40de7e:	mov    r15,rax
  40de81:	mov    rax,r14
  40de84:	sub    rax,r15
  40de87:	cmp    rax,0x1
  40de8b:	jle    40de99 <_start@@Base+0x7f59>
  40de8d:	cmp    BYTE PTR [r15],0x20
  40de91:	jg     40deaa <_start@@Base+0x7f6a>
  40de93:	je     40e1b0 <_start@@Base+0x8270>
  40de99:	mov    rsi,r15
  40de9c:	mov    rdx,r14
  40de9f:	mov    rdi,rbx
  40dea2:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40dea7:	mov    r15,rax
  40deaa:	cmp    r14,r15
  40dead:	je     40e1d0 <_start@@Base+0x8290>
  40deb3:	cmp    BYTE PTR [r15],0x2c
  40deb7:	je     40e2c0 <_start@@Base+0x8380>
  40debd:	mov    DWORD PTR [rsp+0x34],0x0
  40dec5:	cmp    BYTE PTR [r15],0x7d
  40dec9:	je     40e0c0 <_start@@Base+0x8180>
  40decf:	mov    ecx,0xa
  40ded4:	mov    rdx,r14
  40ded7:	mov    rsi,r15
  40deda:	mov    rdi,rbx
  40dedd:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40dee2:	mov    r13,rax
  40dee5:	mov    eax,DWORD PTR [rsp+0x34]
  40dee9:	test   eax,eax
  40deeb:	jne    40ddb8 <_start@@Base+0x7e78>
  40def1:	nop    DWORD PTR [rax+0x0]
  40def8:	mov    r11d,DWORD PTR [rbx+0x20]
  40defc:	test   r11d,r11d
  40deff:	jne    40d640 <_start@@Base+0x7700>
  40df05:	nop    DWORD PTR [rax]
  40df08:	mov    rdi,QWORD PTR [rbx]
  40df0b:	call   417da0 <flatcc_builder_end_table@@Base>
  40df10:	test   eax,eax
  40df12:	mov    r12d,eax
  40df15:	je     40d640 <_start@@Base+0x7700>
  40df1b:	mov    rdi,QWORD PTR [rbx]
  40df1e:	xor    esi,esi
  40df20:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  40df25:	test   rax,rax
  40df28:	jne    40db84 <_start@@Base+0x7c44>
  40df2e:	jmp    40da15 <_start@@Base+0x7ad5>
  40df33:	nop    DWORD PTR [rax+rax*1+0x0]
  40df38:	movabs rcx,0x6363636331323334
  40df42:	cmp    rax,rcx
  40df45:	je     40e050 <_start@@Base+0x8110>
  40df4b:	movabs rcx,0xffffffff00000000
  40df55:	movabs rsi,0x6363636300000000
  40df5f:	and    rcx,rax
  40df62:	cmp    rcx,rsi
  40df65:	je     40e390 <_start@@Base+0x8450>
  40df6b:	movabs rcx,0x6464646431323334
  40df75:	cmp    rax,rcx
  40df78:	jne    40de70 <_start@@Base+0x7f30>
  40df7e:	cmp    rdx,0x8
  40df82:	jg     40e4c0 <_start@@Base+0x8580>
  40df88:	lea    r15,[r13+0x8]
  40df8c:	mov    r8,r14
  40df8f:	sub    r8,r15
  40df92:	cmp    r8,0x7
  40df96:	jbe    40e720 <_start@@Base+0x87e0>
  40df9c:	movbe  rax,QWORD PTR [r13+0x8]
  40dfa2:	movabs rdx,0xff00000000000000
  40dfac:	and    rax,rdx
  40dfaf:	movabs rdx,0x3500000000000000
  40dfb9:	cmp    rax,rdx
  40dfbc:	jne    40e0a0 <_start@@Base+0x8160>
  40dfc2:	cmp    r8,0x1
  40dfc6:	jle    40e0a0 <_start@@Base+0x8160>
  40dfcc:	mov    ecx,0x1
  40dfd1:	mov    rdx,r14
  40dfd4:	mov    rsi,r15
  40dfd7:	mov    rdi,rbx
  40dfda:	call   409080 <_start@@Base+0x3140>
  40dfdf:	cmp    r15,rax
  40dfe2:	mov    r13,rax
  40dfe5:	je     40e0a0 <_start@@Base+0x8160>
  40dfeb:	mov    rcx,rbp
  40dfee:	mov    rdx,r14
  40dff1:	mov    rsi,rax
  40dff4:	mov    rdi,rbx
  40dff7:	mov    DWORD PTR [rsp+0x50],0x0
  40dfff:	call   408760 <_start@@Base+0x2820>
  40e004:	cmp    r13,rax
  40e007:	mov    r15,rax
  40e00a:	je     40f2e2 <_start@@Base+0x93a2>
  40e010:	mov    r13d,DWORD PTR [rsp+0x50]
  40e015:	test   r13d,r13d
  40e018:	jne    40e024 <_start@@Base+0x80e4>
  40e01a:	test   BYTE PTR [rbx+0x10],0x2
  40e01e:	je     40de81 <_start@@Base+0x7f41>
  40e024:	mov    rdi,QWORD PTR [rbx]
  40e027:	mov    ecx,0x4
  40e02c:	mov    edx,0x4
  40e031:	mov    esi,0x8
  40e036:	call   418c80 <flatcc_builder_table_add@@Base>
  40e03b:	test   rax,rax
  40e03e:	jne    40e2ac <_start@@Base+0x836c>
  40e044:	jmp    40dd40 <_start@@Base+0x7e00>
  40e049:	nop    DWORD PTR [rax+0x0]
  40e050:	cmp    rdx,0x8
  40e054:	jg     40dc70 <_start@@Base+0x7d30>
  40e05a:	lea    r15,[r13+0x8]
  40e05e:	mov    r8,r14
  40e061:	sub    r8,r15
  40e064:	cmp    r8,0x7
  40e068:	jbe    40e708 <_start@@Base+0x87c8>
  40e06e:	movbe  rax,QWORD PTR [r13+0x8]
  40e074:	movabs rdx,0xff00000000000000
  40e07e:	and    rax,rdx
  40e081:	movabs rdx,0x3500000000000000
  40e08b:	cmp    rax,rdx
  40e08e:	jne    40e0a0 <_start@@Base+0x8160>
  40e090:	cmp    r8,0x1
  40e094:	jg     40e7b8 <_start@@Base+0x8878>
  40e09a:	nop    WORD PTR [rax+rax*1+0x0]
  40e0a0:	mov    rsi,r15
  40e0a3:	mov    rdx,r14
  40e0a6:	mov    rdi,rbx
  40e0a9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40e0ae:	mov    r15,rax
  40e0b1:	jmp    40de81 <_start@@Base+0x7f41>
  40e0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e0c0:	lea    r13,[r15+0x1]
  40e0c4:	mov    rax,r14
  40e0c7:	sub    rax,r13
  40e0ca:	cmp    rax,0x1
  40e0ce:	jle    40e0e1 <_start@@Base+0x81a1>
  40e0d0:	cmp    BYTE PTR [r15+0x1],0x20
  40e0d5:	jg     40def8 <_start@@Base+0x7fb8>
  40e0db:	je     40e5a0 <_start@@Base+0x8660>
  40e0e1:	mov    rsi,r13
  40e0e4:	mov    rdx,r14
  40e0e7:	mov    rdi,rbx
  40e0ea:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40e0ef:	mov    r13,rax
  40e0f2:	mov    eax,DWORD PTR [rsp+0x34]
  40e0f6:	jmp    40ddb0 <_start@@Base+0x7e70>
  40e0fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e100:	add    r13,0x1
  40e104:	mov    rdx,r14
  40e107:	mov    DWORD PTR [rbx+0x14],0x0
  40e10e:	sub    rdx,r13
  40e111:	cmp    rdx,0x7
  40e115:	ja     40ddf2 <_start@@Base+0x7eb2>
  40e11b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e120:	lea    rcx,[rip+0x1d025]        # 42b14c <_IO_stdin_used@@Base+0x14c>
  40e127:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40e12b:	add    rax,rcx
  40e12e:	jmp    rax
  40e130:	movsx  rcx,BYTE PTR [r13+0x6]
  40e135:	shl    rcx,0x8
  40e139:	movsx  rsi,BYTE PTR [r13+0x5]
  40e13e:	mov    rax,rsi
  40e141:	shl    rax,0x10
  40e145:	or     rcx,rax
  40e148:	movsx  rsi,BYTE PTR [r13+0x4]
  40e14d:	mov    rax,rsi
  40e150:	shl    rax,0x18
  40e154:	or     rax,rcx
  40e157:	movsx  rsi,BYTE PTR [r13+0x3]
  40e15c:	shl    rsi,0x20
  40e160:	or     rax,rsi
  40e163:	movsx  rsi,BYTE PTR [r13+0x2]
  40e168:	shl    rsi,0x28
  40e16c:	mov    rcx,rsi
  40e16f:	or     rcx,rax
  40e172:	movsx  rsi,BYTE PTR [r13+0x1]
  40e177:	mov    rax,rsi
  40e17a:	shl    rax,0x30
  40e17e:	or     rcx,rax
  40e181:	movsx  rax,BYTE PTR [r13+0x0]
  40e186:	shl    rax,0x38
  40e18a:	or     rax,rcx
  40e18d:	jmp    40ddf8 <_start@@Base+0x7eb8>
  40e192:	xor    ecx,ecx
  40e194:	jmp    40e139 <_start@@Base+0x81f9>
  40e196:	xor    ecx,ecx
  40e198:	jmp    40e148 <_start@@Base+0x8208>
  40e19a:	xor    eax,eax
  40e19c:	jmp    40e157 <_start@@Base+0x8217>
  40e19e:	xor    eax,eax
  40e1a0:	jmp    40e163 <_start@@Base+0x8223>
  40e1a2:	xor    ecx,ecx
  40e1a4:	jmp    40e172 <_start@@Base+0x8232>
  40e1a6:	xor    ecx,ecx
  40e1a8:	jmp    40e181 <_start@@Base+0x8241>
  40e1aa:	nop    WORD PTR [rax+rax*1+0x0]
  40e1b0:	cmp    BYTE PTR [r15+0x1],0x20
  40e1b5:	jle    40de99 <_start@@Base+0x7f59>
  40e1bb:	add    r15,0x1
  40e1bf:	cmp    r14,r15
  40e1c2:	jne    40deb3 <_start@@Base+0x7f73>
  40e1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e1d0:	mov    r11d,DWORD PTR [rbx+0x20]
  40e1d4:	mov    DWORD PTR [rsp+0x34],0x0
  40e1dc:	mov    r13,r14
  40e1df:	test   r11d,r11d
  40e1e2:	jne    40d640 <_start@@Base+0x7700>
  40e1e8:	jmp    40df08 <_start@@Base+0x7fc8>
  40e1ed:	nop    DWORD PTR [rax]
  40e1f0:	lea    r15,[r13+0x8]
  40e1f4:	mov    r8,r14
  40e1f7:	sub    r8,r15
  40e1fa:	cmp    r8,0x7
  40e1fe:	jbe    40e488 <_start@@Base+0x8548>
  40e204:	movbe  rax,QWORD PTR [r13+0x8]
  40e20a:	movabs rdx,0xff00000000000000
  40e214:	and    rax,rdx
  40e217:	movabs rdx,0x3500000000000000
  40e221:	cmp    rax,rdx
  40e224:	jne    40e0a0 <_start@@Base+0x8160>
  40e22a:	cmp    r8,0x1
  40e22e:	jle    40e0a0 <_start@@Base+0x8160>
  40e234:	mov    ecx,0x1
  40e239:	mov    rdx,r14
  40e23c:	mov    rsi,r15
  40e23f:	mov    rdi,rbx
  40e242:	call   409080 <_start@@Base+0x3140>
  40e247:	cmp    r15,rax
  40e24a:	mov    r13,rax
  40e24d:	je     40e0a0 <_start@@Base+0x8160>
  40e253:	mov    rcx,rbp
  40e256:	mov    rdx,r14
  40e259:	mov    rsi,rax
  40e25c:	mov    rdi,rbx
  40e25f:	mov    DWORD PTR [rsp+0x50],0x0
  40e267:	call   408760 <_start@@Base+0x2820>
  40e26c:	cmp    r13,rax
  40e26f:	mov    r15,rax
  40e272:	je     40f237 <_start@@Base+0x92f7>
  40e278:	mov    r10d,DWORD PTR [rsp+0x50]
  40e27d:	test   r10d,r10d
  40e280:	jne    40e28c <_start@@Base+0x834c>
  40e282:	test   BYTE PTR [rbx+0x10],0x2
  40e286:	je     40de81 <_start@@Base+0x7f41>
  40e28c:	mov    rdi,QWORD PTR [rbx]
  40e28f:	mov    ecx,0x4
  40e294:	mov    edx,0x4
  40e299:	mov    esi,0x1
  40e29e:	call   418c80 <flatcc_builder_table_add@@Base>
  40e2a3:	test   rax,rax
  40e2a6:	je     40dd40 <_start@@Base+0x7e00>
  40e2ac:	mov    edx,DWORD PTR [rsp+0x50]
  40e2b0:	mov    DWORD PTR [rax],edx
  40e2b2:	jmp    40de81 <_start@@Base+0x7f41>
  40e2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40e2c0:	lea    r13,[r15+0x1]
  40e2c4:	mov    rax,r14
  40e2c7:	sub    rax,r13
  40e2ca:	cmp    rax,0x1
  40e2ce:	jle    40e2dd <_start@@Base+0x839d>
  40e2d0:	cmp    BYTE PTR [r15+0x1],0x20
  40e2d5:	jg     40e2ee <_start@@Base+0x83ae>
  40e2d7:	je     40e768 <_start@@Base+0x8828>
  40e2dd:	mov    rsi,r13
  40e2e0:	mov    rdx,r14
  40e2e3:	mov    rdi,rbx
  40e2e6:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40e2eb:	mov    r13,rax
  40e2ee:	cmp    r14,r13
  40e2f1:	je     40f1b0 <_start@@Base+0x9270>
  40e2f7:	cmp    BYTE PTR [r13+0x0],0x7d
  40e2fc:	je     40f0e0 <_start@@Base+0x91a0>
  40e302:	cmp    r14,r13
  40e305:	mov    DWORD PTR [rsp+0x34],0x1
  40e30d:	jne    40ddc6 <_start@@Base+0x7e86>
  40e313:	nop    DWORD PTR [rax+rax*1+0x0]
  40e318:	mov    r13,r14
  40e31b:	jmp    40de70 <_start@@Base+0x7f30>
  40e320:	cmp    rdx,0x4
  40e324:	jle    40de70 <_start@@Base+0x7f30>
  40e32a:	mov    rsi,r13
  40e32d:	mov    ecx,0x4
  40e332:	mov    rdx,r14
  40e335:	mov    rdi,rbx
  40e338:	call   409080 <_start@@Base+0x3140>
  40e33d:	cmp    rax,r13
  40e340:	mov    rsi,rax
  40e343:	je     40de70 <_start@@Base+0x7f30>
  40e349:	mov    rcx,r12
  40e34c:	mov    rdx,r14
  40e34f:	mov    rdi,rbx
  40e352:	call   41e450 <flatcc_json_parser_build_string@@Base>
  40e357:	mov    r9d,DWORD PTR [rsp+0x38]
  40e35c:	mov    r15,rax
  40e35f:	test   r9d,r9d
  40e362:	je     40dd40 <_start@@Base+0x7e00>
  40e368:	mov    rdi,QWORD PTR [rbx]
  40e36b:	xor    esi,esi
  40e36d:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  40e372:	test   rax,rax
  40e375:	je     40dd40 <_start@@Base+0x7e00>
  40e37b:	mov    edx,DWORD PTR [rsp+0x38]
  40e37f:	mov    DWORD PTR [rax],edx
  40e381:	jmp    40de81 <_start@@Base+0x7f41>
  40e386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e390:	cmp    rdx,0x4
  40e394:	jle    40de70 <_start@@Base+0x7f30>
  40e39a:	mov    rsi,r13
  40e39d:	mov    ecx,0x4
  40e3a2:	mov    rdx,r14
  40e3a5:	mov    rdi,rbx
  40e3a8:	call   409080 <_start@@Base+0x3140>
  40e3ad:	cmp    rax,r13
  40e3b0:	mov    rsi,rax
  40e3b3:	je     40de70 <_start@@Base+0x7f30>
  40e3b9:	mov    rcx,r12
  40e3bc:	mov    rdx,r14
  40e3bf:	mov    rdi,rbx
  40e3c2:	call   41e450 <flatcc_json_parser_build_string@@Base>
  40e3c7:	mov    ecx,DWORD PTR [rsp+0x38]
  40e3cb:	mov    r15,rax
  40e3ce:	test   ecx,ecx
  40e3d0:	je     40dd40 <_start@@Base+0x7e00>
  40e3d6:	mov    rdi,QWORD PTR [rbx]
  40e3d9:	mov    esi,0x4
  40e3de:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  40e3e3:	test   rax,rax
  40e3e6:	jne    40e37b <_start@@Base+0x843b>
  40e3e8:	jmp    40dd40 <_start@@Base+0x7e00>
  40e3ed:	nop    DWORD PTR [rax]
  40e3f0:	cmp    rdx,0x8
  40e3f4:	jle    40de70 <_start@@Base+0x7f30>
  40e3fa:	mov    ecx,0x8
  40e3ff:	mov    rdx,r14
  40e402:	mov    rsi,r13
  40e405:	mov    rdi,rbx
  40e408:	call   409080 <_start@@Base+0x3140>
  40e40d:	cmp    rax,r13
  40e410:	je     40de70 <_start@@Base+0x7f30>
  40e416:	mov    rcx,rbp
  40e419:	mov    rdx,r14
  40e41c:	mov    rsi,rax
  40e41f:	mov    rdi,rbx
  40e422:	mov    QWORD PTR [rsp+0x50],0x0
  40e42b:	mov    QWORD PTR [rsp+0x10],rax
  40e430:	call   408ae0 <_start@@Base+0x2ba0>
  40e435:	mov    r8,QWORD PTR [rsp+0x10]
  40e43a:	mov    r15,rax
  40e43d:	cmp    r8,rax
  40e440:	je     40f1d7 <_start@@Base+0x9297>
  40e446:	cmp    QWORD PTR [rsp+0x50],0x0
  40e44c:	jne    40e458 <_start@@Base+0x8518>
  40e44e:	test   BYTE PTR [rbx+0x10],0x2
  40e452:	je     40de81 <_start@@Base+0x7f41>
  40e458:	mov    rdi,QWORD PTR [rbx]
  40e45b:	mov    ecx,0x8
  40e460:	mov    edx,0x8
  40e465:	mov    esi,0x3
  40e46a:	call   418c80 <flatcc_builder_table_add@@Base>
  40e46f:	test   rax,rax
  40e472:	je     40dd40 <_start@@Base+0x7e00>
  40e478:	mov    rdx,QWORD PTR [rsp+0x50]
  40e47d:	mov    QWORD PTR [rax],rdx
  40e480:	jmp    40de81 <_start@@Base+0x7f41>
  40e485:	nop    DWORD PTR [rax]
  40e488:	mov    rsi,r14
  40e48b:	mov    rdi,r15
  40e48e:	call   406050 <_start@@Base+0x110>
  40e493:	jmp    40e20a <_start@@Base+0x82ca>
  40e498:	nop    DWORD PTR [rax+rax*1+0x0]
  40e4a0:	mov    rsi,r13
  40e4a3:	mov    ecx,0x5
  40e4a8:	mov    rdx,r14
  40e4ab:	mov    rdi,rbx
  40e4ae:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40e4b3:	mov    r13,rax
  40e4b6:	jmp    40dde2 <_start@@Base+0x7ea2>
  40e4bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e4c0:	mov    ecx,0x8
  40e4c5:	mov    rdx,r14
  40e4c8:	mov    rsi,r13
  40e4cb:	mov    rdi,rbx
  40e4ce:	call   409080 <_start@@Base+0x3140>
  40e4d3:	cmp    rax,r13
  40e4d6:	mov    r11,rax
  40e4d9:	je     40df88 <_start@@Base+0x8048>
  40e4df:	cmp    r14,rax
  40e4e2:	mov    QWORD PTR [rsp+0x48],0x0
  40e4eb:	mov    QWORD PTR [rsp+0x50],0x0
  40e4f4:	mov    DWORD PTR [rsp+0x3c],0x0
  40e4fc:	je     40f130 <_start@@Base+0x91f0>
  40e502:	mov    rcx,QWORD PTR [rsp+0x8]
  40e507:	mov    r8,rbp
  40e50a:	mov    rdx,r14
  40e50d:	mov    rsi,rax
  40e510:	mov    rdi,rbx
  40e513:	mov    QWORD PTR [rsp+0x10],rax
  40e518:	call   41df90 <flatcc_json_parser_integer@@Base>
  40e51d:	mov    r11,QWORD PTR [rsp+0x10]
  40e522:	mov    r15,rax
  40e525:	cmp    r11,rax
  40e528:	je     40f130 <_start@@Base+0x91f0>
  40e52e:	mov    edx,DWORD PTR [rsp+0x3c]
  40e532:	mov    rax,QWORD PTR [rsp+0x50]
  40e537:	test   edx,edx
  40e539:	je     40e5b8 <_start@@Base+0x8678>
  40e53b:	movabs rdx,0x8000000000000000
  40e545:	mov    ecx,0x8
  40e54a:	cmp    rax,rdx
  40e54d:	ja     40f06c <_start@@Base+0x912c>
  40e553:	neg    rax
  40e556:	mov    QWORD PTR [rsp+0x48],rax
  40e55b:	test   rax,rax
  40e55e:	jne    40e56a <_start@@Base+0x862a>
  40e560:	test   BYTE PTR [rbx+0x10],0x2
  40e564:	je     40de81 <_start@@Base+0x7f41>
  40e56a:	mov    rdi,QWORD PTR [rbx]
  40e56d:	mov    ecx,0x8
  40e572:	mov    edx,0x8
  40e577:	mov    esi,0x7
  40e57c:	call   418c80 <flatcc_builder_table_add@@Base>
  40e581:	test   rax,rax
  40e584:	je     40dd40 <_start@@Base+0x7e00>
  40e58a:	mov    rdx,QWORD PTR [rsp+0x48]
  40e58f:	mov    QWORD PTR [rax],rdx
  40e592:	jmp    40de81 <_start@@Base+0x7f41>
  40e597:	nop    WORD PTR [rax+rax*1+0x0]
  40e5a0:	cmp    BYTE PTR [r15+0x2],0x20
  40e5a5:	jle    40e0e1 <_start@@Base+0x81a1>
  40e5ab:	lea    r13,[r15+0x2]
  40e5af:	jmp    40def8 <_start@@Base+0x7fb8>
  40e5b4:	nop    DWORD PTR [rax+0x0]
  40e5b8:	test   rax,rax
  40e5bb:	js     40f062 <_start@@Base+0x9122>
  40e5c1:	mov    QWORD PTR [rsp+0x48],rax
  40e5c6:	jmp    40e55b <_start@@Base+0x861b>
  40e5c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5d0:	test   rax,rax
  40e5d3:	js     40f02f <_start@@Base+0x90ef>
  40e5d9:	mov    QWORD PTR [rsp+0x48],rax
  40e5de:	jmp    40dd0f <_start@@Base+0x7dcf>
  40e5e3:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5e8:	mov    rsi,r13
  40e5eb:	mov    ecx,0x4
  40e5f0:	mov    rdx,r14
  40e5f3:	mov    rdi,rbx
  40e5f6:	call   409080 <_start@@Base+0x3140>
  40e5fb:	cmp    rax,r13
  40e5fe:	mov    rsi,rax
  40e601:	je     40de70 <_start@@Base+0x7f30>
  40e607:	mov    rcx,r12
  40e60a:	mov    rdx,r14
  40e60d:	mov    rdi,rbx
  40e610:	call   41e450 <flatcc_json_parser_build_string@@Base>
  40e615:	mov    r8d,DWORD PTR [rsp+0x38]
  40e61a:	mov    r15,rax
  40e61d:	test   r8d,r8d
  40e620:	je     40dd40 <_start@@Base+0x7e00>
  40e626:	mov    rdi,QWORD PTR [rbx]
  40e629:	mov    esi,0x2
  40e62e:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  40e633:	test   rax,rax
  40e636:	jne    40e37b <_start@@Base+0x843b>
  40e63c:	jmp    40dd40 <_start@@Base+0x7e00>
  40e641:	mov    ecx,0x7
  40e646:	mov    rsi,r15
  40e649:	mov    rdx,r14
  40e64c:	mov    rdi,rbx
  40e64f:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40e654:	cmp    r13,rax
  40e657:	mov    r15,rax
  40e65a:	je     40e780 <_start@@Base+0x8840>
  40e660:	mov    rax,QWORD PTR [rsp+0x48]
  40e665:	jmp    40d6ff <_start@@Base+0x77bf>
  40e66a:	cmp    BYTE PTR [r12+0x2],0x20
  40e670:	jle    40cc03 <_start@@Base+0x6cc3>
  40e676:	lea    rbp,[r12+0x2]
  40e67b:	jmp    40cb30 <_start@@Base+0x6bf0>
  40e680:	lea    rsi,[r12+0x1]
  40e685:	mov    rax,r14
  40e688:	mov    DWORD PTR [rsp+0x30],0x0
  40e690:	sub    rax,rsi
  40e693:	cmp    rax,0x1
  40e697:	jle    40e6ab <_start@@Base+0x876b>
  40e699:	cmp    BYTE PTR [r12+0x1],0x20
  40e69f:	jg     40e838 <_start@@Base+0x88f8>
  40e6a5:	je     40f284 <_start@@Base+0x9344>
  40e6ab:	mov    rdx,r14
  40e6ae:	mov    rdi,rbx
  40e6b1:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40e6b6:	mov    r12,rax
  40e6b9:	mov    eax,DWORD PTR [rsp+0x30]
  40e6bd:	jmp    40cd40 <_start@@Base+0x6e00>
  40e6c2:	lea    rsi,[r13+0x1]
  40e6c6:	mov    rax,r14
  40e6c9:	mov    DWORD PTR [rsp+0x38],0x0
  40e6d1:	sub    rax,rsi
  40e6d4:	cmp    rax,0x1
  40e6d8:	jle    40e6eb <_start@@Base+0x87ab>
  40e6da:	cmp    BYTE PTR [r13+0x1],0x20
  40e6df:	jg     40e840 <_start@@Base+0x8900>
  40e6e5:	je     40f270 <_start@@Base+0x9330>
  40e6eb:	mov    rdx,r14
  40e6ee:	mov    rdi,rbx
  40e6f1:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40e6f6:	mov    r13,rax
  40e6f9:	mov    eax,DWORD PTR [rsp+0x38]
  40e6fd:	jmp    40d2c8 <_start@@Base+0x7388>
  40e702:	nop    WORD PTR [rax+rax*1+0x0]
  40e708:	mov    rsi,r14
  40e70b:	mov    rdi,r15
  40e70e:	call   406050 <_start@@Base+0x110>
  40e713:	jmp    40e074 <_start@@Base+0x8134>
  40e718:	nop    DWORD PTR [rax+rax*1+0x0]
  40e720:	mov    rsi,r14
  40e723:	mov    rdi,r15
  40e726:	call   406050 <_start@@Base+0x110>
  40e72b:	jmp    40dfa2 <_start@@Base+0x8062>
  40e730:	mov    r8,QWORD PTR [rsp+0x8]
  40e735:	lea    rcx,[rip+0x2ad04]        # 439440 <__data_start@@Base+0x380>
  40e73c:	mov    rdx,r14
  40e73f:	mov    rsi,r13
  40e742:	mov    rdi,rbx
  40e745:	call   409a50 <_start@@Base+0x3b10>
  40e74a:	cmp    rax,r13
  40e74d:	mov    r15,rax
  40e750:	je     40dd40 <_start@@Base+0x7e00>
  40e756:	cmp    r14,rax
  40e759:	jne    40d9bf <_start@@Base+0x7a7f>
  40e75f:	jmp    40dd40 <_start@@Base+0x7e00>
  40e764:	nop    DWORD PTR [rax+0x0]
  40e768:	cmp    BYTE PTR [r15+0x2],0x20
  40e76d:	jle    40e2dd <_start@@Base+0x839d>
  40e773:	lea    r13,[r15+0x2]
  40e777:	jmp    40e2ee <_start@@Base+0x83ae>
  40e77c:	nop    DWORD PTR [rax+0x0]
  40e780:	mov    r8,QWORD PTR [rsp]
  40e784:	lea    rcx,[rip+0x2acd5]        # 439460 <__data_start@@Base+0x3a0>
  40e78b:	mov    rdx,r14
  40e78e:	mov    rsi,r13
  40e791:	mov    rdi,rbx
  40e794:	call   40a260 <_start@@Base+0x4320>
  40e799:	cmp    rax,r13
  40e79c:	mov    r15,rax
  40e79f:	je     40dd40 <_start@@Base+0x7e00>
  40e7a5:	cmp    r14,rax
  40e7a8:	jne    40e660 <_start@@Base+0x8720>
  40e7ae:	jmp    40dd40 <_start@@Base+0x7e00>
  40e7b3:	nop    DWORD PTR [rax+rax*1+0x0]
  40e7b8:	mov    ecx,0x1
  40e7bd:	mov    rdx,r14
  40e7c0:	mov    rsi,r15
  40e7c3:	mov    rdi,rbx
  40e7c6:	call   409080 <_start@@Base+0x3140>
  40e7cb:	cmp    r15,rax
  40e7ce:	mov    r13,rax
  40e7d1:	je     40e0a0 <_start@@Base+0x8160>
  40e7d7:	mov    rcx,rbp
  40e7da:	mov    rdx,r14
  40e7dd:	mov    rsi,rax
  40e7e0:	mov    rdi,rbx
  40e7e3:	mov    DWORD PTR [rsp+0x50],0x0
  40e7eb:	call   408760 <_start@@Base+0x2820>
  40e7f0:	cmp    r13,rax
  40e7f3:	mov    r15,rax
  40e7f6:	je     40f2ad <_start@@Base+0x936d>
  40e7fc:	mov    esi,DWORD PTR [rsp+0x50]
  40e800:	test   esi,esi
  40e802:	jne    40e80e <_start@@Base+0x88ce>
  40e804:	test   BYTE PTR [rbx+0x10],0x2
  40e808:	je     40de81 <_start@@Base+0x7f41>
  40e80e:	mov    rdi,QWORD PTR [rbx]
  40e811:	mov    ecx,0x4
  40e816:	mov    edx,0x4
  40e81b:	mov    esi,0x6
  40e820:	call   418c80 <flatcc_builder_table_add@@Base>
  40e825:	test   rax,rax
  40e828:	jne    40e2ac <_start@@Base+0x836c>
  40e82e:	jmp    40dd40 <_start@@Base+0x7e00>
  40e833:	nop    DWORD PTR [rax+rax*1+0x0]
  40e838:	mov    r12,rsi
  40e83b:	jmp    40d1ab <_start@@Base+0x726b>
  40e840:	mov    r13,rsi
  40e843:	jmp    40d62b <_start@@Base+0x76eb>
  40e848:	mov    rcx,QWORD PTR [rsp+0x40]
  40e84d:	mov    rdx,r14
  40e850:	mov    rsi,rbp
  40e853:	mov    rdi,rbx
  40e856:	call   41e690 <flatcc_json_parser_finalize_unions@@Base>
  40e85b:	mov    rdi,QWORD PTR [rbx]
  40e85e:	mov    rbp,rax
  40e861:	call   417da0 <flatcc_builder_end_table@@Base>
  40e866:	mov    edx,eax
  40e868:	mov    rax,QWORD PTR [rsp+0x18]
  40e86d:	test   edx,edx
  40e86f:	mov    DWORD PTR [rax],edx
  40e871:	mov    rax,rbp
  40e874:	je     40cb40 <_start@@Base+0x6c00>
  40e87a:	jmp    40cb53 <_start@@Base+0x6c13>
  40e87f:	cmp    BYTE PTR [r12+0x2],0x20
  40e885:	jle    40d907 <_start@@Base+0x79c7>
  40e88b:	lea    rbp,[r12+0x2]
  40e890:	jmp    40d918 <_start@@Base+0x79d8>
  40e895:	lea    rsi,[r13+0x1]
  40e899:	mov    rax,r14
  40e89c:	sub    rax,rsi
  40e89f:	cmp    rax,0x1
  40e8a3:	jle    40e8b2 <_start@@Base+0x8972>
  40e8a5:	cmp    BYTE PTR [r13+0x1],0x20
  40e8aa:	jg     40e8c0 <_start@@Base+0x8980>
  40e8ac:	je     40f299 <_start@@Base+0x9359>
  40e8b2:	mov    rdx,r14
  40e8b5:	mov    rdi,rbx
  40e8b8:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40e8bd:	mov    rsi,rax
  40e8c0:	cmp    r14,rsi
  40e8c3:	je     40e8ce <_start@@Base+0x898e>
  40e8c5:	cmp    BYTE PTR [rsi],0x7d
  40e8c8:	je     40f317 <_start@@Base+0x93d7>
  40e8ce:	lea    rax,[rsp+0x3c]
  40e8d3:	lea    r12,[rip+0x1c8d2]        # 42b1ac <_IO_stdin_used@@Base+0x1ac>
  40e8da:	mov    QWORD PTR [rsp+0x8],rax
  40e8df:	nop
  40e8e0:	cmp    r14,rsi
  40e8e3:	je     40eab0 <_start@@Base+0x8b70>
  40e8e9:	movzx  eax,BYTE PTR [rsi]
  40e8ec:	cmp    al,0x22
  40e8ee:	je     40eb40 <_start@@Base+0x8c00>
  40e8f4:	cmp    al,0x2e
  40e8f6:	je     40ed80 <_start@@Base+0x8e40>
  40e8fc:	mov    DWORD PTR [rbx+0x14],0x1
  40e903:	mov    rax,r14
  40e906:	sub    rax,rsi
  40e909:	cmp    rax,0x7
  40e90d:	jbe    40eb60 <_start@@Base+0x8c20>
  40e913:	movbe  rax,QWORD PTR [rsi]
  40e918:	movabs rdx,0x616161615f626262
  40e922:	cmp    rax,rdx
  40e925:	jne    40eab0 <_start@@Base+0x8b70>
  40e92b:	lea    r15,[rsi+0x8]
  40e92f:	mov    rcx,r14
  40e932:	sub    rcx,r15
  40e935:	cmp    rcx,0x7
  40e939:	ja     40eac8 <_start@@Base+0x8b88>
  40e93f:	lea    rdx,[rip+0x1c826]        # 42b16c <_IO_stdin_used@@Base+0x16c>
  40e946:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40e94a:	add    rax,rdx
  40e94d:	jmp    rax
  40e94f:	nop
  40e950:	movsx  rdi,BYTE PTR [rsi+0xe]
  40e955:	shl    rdi,0x8
  40e959:	movsx  rdx,BYTE PTR [rsi+0xd]
  40e95e:	mov    rax,rdx
  40e961:	shl    rax,0x10
  40e965:	or     rdi,rax
  40e968:	movsx  rdx,BYTE PTR [rsi+0xc]
  40e96d:	mov    rax,rdx
  40e970:	shl    rax,0x18
  40e974:	or     rax,rdi
  40e977:	movsx  rdx,BYTE PTR [rsi+0xb]
  40e97c:	mov    rdi,rdx
  40e97f:	shl    rdi,0x20
  40e983:	or     rax,rdi
  40e986:	movsx  rdx,BYTE PTR [rsi+0xa]
  40e98b:	mov    rdi,rdx
  40e98e:	shl    rdi,0x28
  40e992:	or     rdi,rax
  40e995:	movsx  rdx,BYTE PTR [rsi+0x9]
  40e99a:	mov    rax,rdx
  40e99d:	shl    rax,0x30
  40e9a1:	or     rdi,rax
  40e9a4:	movsx  rdx,BYTE PTR [rsi+0x8]
  40e9a9:	mov    rax,rdx
  40e9ac:	movabs rdx,0x625f73746172745f
  40e9b6:	shl    rax,0x38
  40e9ba:	or     rax,rdi
  40e9bd:	cmp    rax,rdx
  40e9c0:	je     40eae1 <_start@@Base+0x8ba1>
  40e9c6:	xor    al,al
  40e9c8:	movabs rdx,0x625f737465707300
  40e9d2:	cmp    rax,rdx
  40e9d5:	jne    40e9e1 <_start@@Base+0x8aa1>
  40e9d7:	cmp    rcx,0x7
  40e9db:	jg     40eda0 <_start@@Base+0x8e60>
  40e9e1:	mov    rsi,r15
  40e9e4:	mov    rdx,r14
  40e9e7:	mov    rdi,rbx
  40e9ea:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40e9ef:	mov    r15,rax
  40e9f2:	mov    rax,r14
  40e9f5:	sub    rax,r15
  40e9f8:	cmp    rax,0x1
  40e9fc:	jle    40ea0a <_start@@Base+0x8aca>
  40e9fe:	cmp    BYTE PTR [r15],0x20
  40ea02:	jg     40ea1b <_start@@Base+0x8adb>
  40ea04:	je     40ec10 <_start@@Base+0x8cd0>
  40ea0a:	mov    rsi,r15
  40ea0d:	mov    rdx,r14
  40ea10:	mov    rdi,rbx
  40ea13:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40ea18:	mov    r15,rax
  40ea1b:	cmp    r14,r15
  40ea1e:	je     40ec30 <_start@@Base+0x8cf0>
  40ea24:	movzx  eax,BYTE PTR [r15]
  40ea28:	cmp    al,0x2c
  40ea2a:	je     40ecf8 <_start@@Base+0x8db8>
  40ea30:	cmp    al,0x7d
  40ea32:	je     40eb08 <_start@@Base+0x8bc8>
  40ea38:	mov    ecx,0xa
  40ea3d:	mov    rdx,r14
  40ea40:	mov    rsi,r15
  40ea43:	mov    rdi,rbx
  40ea46:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40ea4b:	mov    r13,rax
  40ea4e:	jmp    40db50 <_start@@Base+0x7c10>
  40ea53:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea58:	xor    edi,edi
  40ea5a:	jmp    40e959 <_start@@Base+0x8a19>
  40ea5f:	nop
  40ea60:	xor    eax,eax
  40ea62:	jmp    40e977 <_start@@Base+0x8a37>
  40ea67:	nop    WORD PTR [rax+rax*1+0x0]
  40ea70:	xor    eax,eax
  40ea72:	jmp    40e986 <_start@@Base+0x8a46>
  40ea77:	nop    WORD PTR [rax+rax*1+0x0]
  40ea80:	xor    edi,edi
  40ea82:	jmp    40e995 <_start@@Base+0x8a55>
  40ea87:	nop    WORD PTR [rax+rax*1+0x0]
  40ea90:	xor    edi,edi
  40ea92:	jmp    40e9a4 <_start@@Base+0x8a64>
  40ea97:	nop    WORD PTR [rax+rax*1+0x0]
  40eaa0:	xor    edi,edi
  40eaa2:	jmp    40e968 <_start@@Base+0x8a28>
  40eaa7:	nop    WORD PTR [rax+rax*1+0x0]
  40eab0:	mov    rdx,r14
  40eab3:	mov    rdi,rbx
  40eab6:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40eabb:	mov    r15,rax
  40eabe:	jmp    40e9f2 <_start@@Base+0x8ab2>
  40eac3:	nop    DWORD PTR [rax+rax*1+0x0]
  40eac8:	movbe  rax,QWORD PTR [rsi+0x8]
  40eace:	movabs rdx,0x625f73746172745f
  40ead8:	cmp    rax,rdx
  40eadb:	jne    40e9c6 <_start@@Base+0x8a86>
  40eae1:	lea    r13,[rsi+0x10]
  40eae5:	mov    rcx,r14
  40eae8:	sub    rcx,r13
  40eaeb:	cmp    rcx,0x7
  40eaef:	ja     40ed70 <_start@@Base+0x8e30>
  40eaf5:	lea    rdx,[rip+0x1c690]        # 42b18c <_IO_stdin_used@@Base+0x18c>
  40eafc:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40eb00:	add    rax,rdx
  40eb03:	jmp    rax
  40eb05:	nop    DWORD PTR [rax]
  40eb08:	lea    r13,[r15+0x1]
  40eb0c:	mov    rax,r14
  40eb0f:	sub    rax,r13
  40eb12:	cmp    rax,0x1
  40eb16:	jle    40eb29 <_start@@Base+0x8be9>
  40eb18:	cmp    BYTE PTR [r15+0x1],0x20
  40eb1d:	jg     40db50 <_start@@Base+0x7c10>
  40eb23:	je     40ee80 <_start@@Base+0x8f40>
  40eb29:	mov    rsi,r13
  40eb2c:	mov    rdx,r14
  40eb2f:	mov    rdi,rbx
  40eb32:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40eb37:	mov    r13,rax
  40eb3a:	jmp    40db50 <_start@@Base+0x7c10>
  40eb3f:	nop
  40eb40:	add    rsi,0x1
  40eb44:	mov    rax,r14
  40eb47:	mov    DWORD PTR [rbx+0x14],0x0
  40eb4e:	sub    rax,rsi
  40eb51:	cmp    rax,0x7
  40eb55:	ja     40e913 <_start@@Base+0x89d3>
  40eb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  40eb60:	movsxd rax,DWORD PTR [r12+rax*4]
  40eb64:	add    rax,r12
  40eb67:	jmp    rax
  40eb69:	nop    DWORD PTR [rax+0x0]
  40eb70:	movsx  rcx,BYTE PTR [rsi+0x6]
  40eb75:	shl    rcx,0x8
  40eb79:	movsx  rdx,BYTE PTR [rsi+0x5]
  40eb7e:	mov    rax,rdx
  40eb81:	shl    rax,0x10
  40eb85:	or     rcx,rax
  40eb88:	movsx  rdx,BYTE PTR [rsi+0x4]
  40eb8d:	mov    rax,rdx
  40eb90:	shl    rax,0x18
  40eb94:	or     rax,rcx
  40eb97:	movsx  rdx,BYTE PTR [rsi+0x3]
  40eb9c:	mov    rcx,rdx
  40eb9f:	shl    rcx,0x20
  40eba3:	or     rax,rcx
  40eba6:	movsx  rdx,BYTE PTR [rsi+0x2]
  40ebab:	mov    rcx,rdx
  40ebae:	shl    rcx,0x28
  40ebb2:	or     rcx,rax
  40ebb5:	movsx  rdx,BYTE PTR [rsi+0x1]
  40ebba:	mov    rax,rdx
  40ebbd:	shl    rax,0x30
  40ebc1:	or     rcx,rax
  40ebc4:	movsx  rdx,BYTE PTR [rsi]
  40ebc8:	mov    rax,rdx
  40ebcb:	shl    rax,0x38
  40ebcf:	or     rax,rcx
  40ebd2:	jmp    40e918 <_start@@Base+0x89d8>
  40ebd7:	nop    WORD PTR [rax+rax*1+0x0]
  40ebe0:	xor    ecx,ecx
  40ebe2:	jmp    40eb79 <_start@@Base+0x8c39>
  40ebe4:	nop    DWORD PTR [rax+0x0]
  40ebe8:	xor    ecx,ecx
  40ebea:	jmp    40eb88 <_start@@Base+0x8c48>
  40ebec:	nop    DWORD PTR [rax+0x0]
  40ebf0:	xor    eax,eax
  40ebf2:	jmp    40eb97 <_start@@Base+0x8c57>
  40ebf4:	nop    DWORD PTR [rax+0x0]
  40ebf8:	xor    eax,eax
  40ebfa:	jmp    40eba6 <_start@@Base+0x8c66>
  40ebfc:	nop    DWORD PTR [rax+0x0]
  40ec00:	xor    ecx,ecx
  40ec02:	jmp    40ebb5 <_start@@Base+0x8c75>
  40ec04:	nop    DWORD PTR [rax+0x0]
  40ec08:	xor    ecx,ecx
  40ec0a:	jmp    40ebc4 <_start@@Base+0x8c84>
  40ec0c:	nop    DWORD PTR [rax+0x0]
  40ec10:	cmp    BYTE PTR [r15+0x1],0x20
  40ec15:	jle    40ea0a <_start@@Base+0x8aca>
  40ec1b:	add    r15,0x1
  40ec1f:	cmp    r14,r15
  40ec22:	jne    40ea24 <_start@@Base+0x8ae4>
  40ec28:	nop    DWORD PTR [rax+rax*1+0x0]
  40ec30:	mov    r13,r14
  40ec33:	jmp    40db50 <_start@@Base+0x7c10>
  40ec38:	movsx  rdi,BYTE PTR [rsi+0x16]
  40ec3d:	shl    rdi,0x8
  40ec41:	movsx  rdx,BYTE PTR [rsi+0x15]
  40ec46:	mov    rax,rdx
  40ec49:	shl    rax,0x10
  40ec4d:	or     rdi,rax
  40ec50:	movsx  rdx,BYTE PTR [rsi+0x14]
  40ec55:	mov    rax,rdx
  40ec58:	shl    rax,0x18
  40ec5c:	or     rax,rdi
  40ec5f:	movsx  rdx,BYTE PTR [rsi+0x13]
  40ec64:	mov    rdi,rdx
  40ec67:	shl    rdi,0x20
  40ec6b:	or     rax,rdi
  40ec6e:	movsx  rdx,BYTE PTR [rsi+0x12]
  40ec73:	mov    rdi,rdx
  40ec76:	shl    rdi,0x28
  40ec7a:	or     rdi,rax
  40ec7d:	movsx  rdx,BYTE PTR [rsi+0x11]
  40ec82:	mov    rax,rdx
  40ec85:	shl    rax,0x30
  40ec89:	or     rdi,rax
  40ec8c:	movsx  rdx,BYTE PTR [rsi+0x10]
  40ec91:	mov    rax,rdx
  40ec94:	shl    rax,0x38
  40ec98:	or     rax,rdi
  40ec9b:	and    rax,0xffffffffff000000
  40eca1:	movabs rdx,0x7374657073000000
  40ecab:	cmp    rax,rdx
  40ecae:	jne    40ecba <_start@@Base+0x8d7a>
  40ecb0:	cmp    rcx,0x5
  40ecb4:	jg     40ee98 <_start@@Base+0x8f58>
  40ecba:	mov    rdx,r14
  40ecbd:	mov    rsi,r13
  40ecc0:	mov    rdi,rbx
  40ecc3:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40ecc8:	mov    r15,rax
  40eccb:	jmp    40e9f2 <_start@@Base+0x8ab2>
  40ecd0:	xor    edi,edi
  40ecd2:	jmp    40ec41 <_start@@Base+0x8d01>
  40ecd7:	xor    edi,edi
  40ecd9:	jmp    40ec50 <_start@@Base+0x8d10>
  40ecde:	xor    eax,eax
  40ece0:	jmp    40ec5f <_start@@Base+0x8d1f>
  40ece5:	xor    eax,eax
  40ece7:	jmp    40ec6e <_start@@Base+0x8d2e>
  40ece9:	xor    edi,edi
  40eceb:	jmp    40ec7d <_start@@Base+0x8d3d>
  40eced:	xor    edi,edi
  40ecef:	jmp    40ec8c <_start@@Base+0x8d4c>
  40ecf1:	nop    DWORD PTR [rax+0x0]
  40ecf8:	lea    rsi,[r15+0x1]
  40ecfc:	mov    rax,r14
  40ecff:	sub    rax,rsi
  40ed02:	cmp    rax,0x1
  40ed06:	jle    40ed15 <_start@@Base+0x8dd5>
  40ed08:	cmp    BYTE PTR [r15+0x1],0x20
  40ed0d:	jg     40ed23 <_start@@Base+0x8de3>
  40ed0f:	je     40ef70 <_start@@Base+0x9030>
  40ed15:	mov    rdx,r14
  40ed18:	mov    rdi,rbx
  40ed1b:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40ed20:	mov    rsi,rax
  40ed23:	cmp    r14,rsi
  40ed26:	je     40ef88 <_start@@Base+0x9048>
  40ed2c:	cmp    BYTE PTR [rsi],0x7d
  40ed2f:	jne    40e8e0 <_start@@Base+0x89a0>
  40ed35:	lea    r13,[rsi+0x1]
  40ed39:	mov    rax,r14
  40ed3c:	sub    rax,r13
  40ed3f:	cmp    rax,0x1
  40ed43:	jle    40eb29 <_start@@Base+0x8be9>
  40ed49:	cmp    BYTE PTR [rsi+0x1],0x20
  40ed4d:	jg     40db50 <_start@@Base+0x7c10>
  40ed53:	jne    40eb29 <_start@@Base+0x8be9>
  40ed59:	cmp    BYTE PTR [rsi+0x2],0x20
  40ed5d:	jle    40eb29 <_start@@Base+0x8be9>
  40ed63:	lea    r13,[rsi+0x2]
  40ed67:	jmp    40db50 <_start@@Base+0x7c10>
  40ed6c:	nop    DWORD PTR [rax+0x0]
  40ed70:	movbe  rax,QWORD PTR [rsi+0x10]
  40ed76:	jmp    40ec9b <_start@@Base+0x8d5b>
  40ed7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40ed80:	mov    ecx,0x5
  40ed85:	mov    rdx,r14
  40ed88:	mov    rdi,rbx
  40ed8b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40ed90:	mov    rsi,rax
  40ed93:	jmp    40e903 <_start@@Base+0x89c3>
  40ed98:	nop    DWORD PTR [rax+rax*1+0x0]
  40eda0:	mov    ecx,0x7
  40eda5:	mov    rdx,r14
  40eda8:	mov    rsi,r15
  40edab:	mov    rdi,rbx
  40edae:	call   409080 <_start@@Base+0x3140>
  40edb3:	cmp    r15,rax
  40edb6:	mov    r13,rax
  40edb9:	je     40e9e1 <_start@@Base+0x8aa1>
  40edbf:	cmp    r14,rax
  40edc2:	mov    QWORD PTR [rsp+0x48],0x0
  40edcb:	mov    QWORD PTR [rsp+0x50],0x0
  40edd4:	mov    DWORD PTR [rsp+0x3c],0x0
  40eddc:	je     40f000 <_start@@Base+0x90c0>
  40ede2:	mov    rcx,QWORD PTR [rsp+0x8]
  40ede7:	mov    r8,rbp
  40edea:	mov    rdx,r14
  40eded:	mov    rsi,rax
  40edf0:	mov    rdi,rbx
  40edf3:	call   41df90 <flatcc_json_parser_integer@@Base>
  40edf8:	cmp    r13,rax
  40edfb:	mov    r15,rax
  40edfe:	je     40f000 <_start@@Base+0x90c0>
  40ee04:	mov    r8d,DWORD PTR [rsp+0x3c]
  40ee09:	mov    rax,QWORD PTR [rsp+0x50]
  40ee0e:	test   r8d,r8d
  40ee11:	je     40ee70 <_start@@Base+0x8f30>
  40ee13:	movabs rdx,0x8000000000000000
  40ee1d:	mov    ecx,0x8
  40ee22:	cmp    rax,rdx
  40ee25:	ja     40efa8 <_start@@Base+0x9068>
  40ee2b:	neg    rax
  40ee2e:	mov    QWORD PTR [rsp+0x48],rax
  40ee33:	test   rax,rax
  40ee36:	jne    40ee42 <_start@@Base+0x8f02>
  40ee38:	test   BYTE PTR [rbx+0x10],0x2
  40ee3c:	je     40e9f2 <_start@@Base+0x8ab2>
  40ee42:	mov    rdi,QWORD PTR [rbx]
  40ee45:	xor    esi,esi
  40ee47:	mov    ecx,0x8
  40ee4c:	mov    edx,0x8
  40ee51:	call   418c80 <flatcc_builder_table_add@@Base>
  40ee56:	test   rax,rax
  40ee59:	je     40dd40 <_start@@Base+0x7e00>
  40ee5f:	mov    rdx,QWORD PTR [rsp+0x48]
  40ee64:	mov    QWORD PTR [rax],rdx
  40ee67:	jmp    40e9f2 <_start@@Base+0x8ab2>
  40ee6c:	nop    DWORD PTR [rax+0x0]
  40ee70:	test   rax,rax
  40ee73:	js     40efa3 <_start@@Base+0x9063>
  40ee79:	mov    QWORD PTR [rsp+0x48],rax
  40ee7e:	jmp    40ee33 <_start@@Base+0x8ef3>
  40ee80:	cmp    BYTE PTR [r15+0x2],0x20
  40ee85:	jle    40eb29 <_start@@Base+0x8be9>
  40ee8b:	lea    r13,[r15+0x2]
  40ee8f:	jmp    40db50 <_start@@Base+0x7c10>
  40ee94:	nop    DWORD PTR [rax+0x0]
  40ee98:	mov    ecx,0x5
  40ee9d:	mov    rdx,r14
  40eea0:	mov    rsi,r13
  40eea3:	mov    rdi,rbx
  40eea6:	call   409080 <_start@@Base+0x3140>
  40eeab:	cmp    r13,rax
  40eeae:	mov    r9,rax
  40eeb1:	je     40ecba <_start@@Base+0x8d7a>
  40eeb7:	cmp    r14,rax
  40eeba:	mov    DWORD PTR [rsp+0x3c],0x0
  40eec2:	mov    QWORD PTR [rsp+0x50],0x0
  40eecb:	mov    DWORD PTR [rsp+0x48],0x0
  40eed3:	je     40f098 <_start@@Base+0x9158>
  40eed9:	mov    rcx,QWORD PTR [rsp]
  40eedd:	mov    r8,rbp
  40eee0:	mov    rdx,r14
  40eee3:	mov    rsi,rax
  40eee6:	mov    rdi,rbx
  40eee9:	mov    QWORD PTR [rsp+0x10],rax
  40eeee:	call   41df90 <flatcc_json_parser_integer@@Base>
  40eef3:	mov    r9,QWORD PTR [rsp+0x10]
  40eef8:	mov    r15,rax
  40eefb:	cmp    r9,rax
  40eefe:	je     40f098 <_start@@Base+0x9158>
  40ef04:	mov    r10d,DWORD PTR [rsp+0x48]
  40ef09:	mov    ecx,0x8
  40ef0e:	test   r10d,r10d
  40ef11:	jne    40efd2 <_start@@Base+0x9092>
  40ef17:	mov    rax,QWORD PTR [rsp+0x50]
  40ef1c:	mov    edx,0xffffffff
  40ef21:	cmp    rax,rdx
  40ef24:	ja     40efc8 <_start@@Base+0x9088>
  40ef2a:	mov    edx,eax
  40ef2c:	mov    DWORD PTR [rsp+0x3c],eax
  40ef30:	test   edx,edx
  40ef32:	jne    40ef3e <_start@@Base+0x8ffe>
  40ef34:	test   BYTE PTR [rbx+0x10],0x2
  40ef38:	je     40e9f2 <_start@@Base+0x8ab2>
  40ef3e:	mov    rdi,QWORD PTR [rbx]
  40ef41:	mov    ecx,0x4
  40ef46:	mov    edx,0x4
  40ef4b:	mov    esi,0x1
  40ef50:	call   418c80 <flatcc_builder_table_add@@Base>
  40ef55:	test   rax,rax
  40ef58:	je     40dd40 <_start@@Base+0x7e00>
  40ef5e:	mov    edx,DWORD PTR [rsp+0x3c]
  40ef62:	mov    DWORD PTR [rax],edx
  40ef64:	jmp    40e9f2 <_start@@Base+0x8ab2>
  40ef69:	nop    DWORD PTR [rax+0x0]
  40ef70:	cmp    BYTE PTR [r15+0x2],0x20
  40ef75:	jle    40ed15 <_start@@Base+0x8dd5>
  40ef7b:	lea    rsi,[r15+0x2]
  40ef7f:	cmp    r14,rsi
  40ef82:	jne    40ed2c <_start@@Base+0x8dec>
  40ef88:	mov    ecx,0xa
  40ef8d:	mov    rdx,r14
  40ef90:	mov    rsi,r14
  40ef93:	mov    rdi,rbx
  40ef96:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40ef9b:	mov    r13,rax
  40ef9e:	jmp    40db50 <_start@@Base+0x7c10>
  40efa3:	mov    ecx,0x7
  40efa8:	mov    rsi,r15
  40efab:	mov    rdx,r14
  40efae:	mov    rdi,rbx
  40efb1:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40efb6:	cmp    r13,rax
  40efb9:	mov    r15,rax
  40efbc:	je     40f000 <_start@@Base+0x90c0>
  40efbe:	mov    rax,QWORD PTR [rsp+0x48]
  40efc3:	jmp    40ee33 <_start@@Base+0x8ef3>
  40efc8:	mov    QWORD PTR [rsp+0x10],r9
  40efcd:	mov    ecx,0x7
  40efd2:	mov    rsi,r15
  40efd5:	mov    rdx,r14
  40efd8:	mov    rdi,rbx
  40efdb:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40efe0:	mov    r9,QWORD PTR [rsp+0x10]
  40efe5:	mov    r15,rax
  40efe8:	cmp    r9,rax
  40efeb:	je     40f098 <_start@@Base+0x9158>
  40eff1:	mov    edx,DWORD PTR [rsp+0x3c]
  40eff5:	jmp    40ef30 <_start@@Base+0x8ff0>
  40effa:	nop    WORD PTR [rax+rax*1+0x0]
  40f000:	mov    r8,QWORD PTR [rsp]
  40f004:	lea    rcx,[rip+0x2a335]        # 439340 <__data_start@@Base+0x280>
  40f00b:	mov    rdx,r14
  40f00e:	mov    rsi,r13
  40f011:	mov    rdi,rbx
  40f014:	call   40a260 <_start@@Base+0x4320>
  40f019:	cmp    rax,r13
  40f01c:	mov    r15,rax
  40f01f:	je     40dd40 <_start@@Base+0x7e00>
  40f025:	cmp    r14,rax
  40f028:	jne    40efbe <_start@@Base+0x907e>
  40f02a:	jmp    40dd40 <_start@@Base+0x7e00>
  40f02f:	mov    QWORD PTR [rsp+0x10],r11
  40f034:	mov    ecx,0x7
  40f039:	mov    rsi,r15
  40f03c:	mov    rdx,r14
  40f03f:	mov    rdi,rbx
  40f042:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40f047:	mov    r11,QWORD PTR [rsp+0x10]
  40f04c:	mov    r15,rax
  40f04f:	cmp    r11,rax
  40f052:	je     40f170 <_start@@Base+0x9230>
  40f058:	mov    rax,QWORD PTR [rsp+0x48]
  40f05d:	jmp    40dd0f <_start@@Base+0x7dcf>
  40f062:	mov    QWORD PTR [rsp+0x10],r11
  40f067:	mov    ecx,0x7
  40f06c:	mov    rsi,r15
  40f06f:	mov    rdx,r14
  40f072:	mov    rdi,rbx
  40f075:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40f07a:	mov    r11,QWORD PTR [rsp+0x10]
  40f07f:	mov    r15,rax
  40f082:	cmp    r11,rax
  40f085:	je     40f130 <_start@@Base+0x91f0>
  40f08b:	mov    rax,QWORD PTR [rsp+0x48]
  40f090:	jmp    40e55b <_start@@Base+0x861b>
  40f095:	nop    DWORD PTR [rax]
  40f098:	mov    r8,QWORD PTR [rsp+0x8]
  40f09d:	lea    rcx,[rip+0x2a2bc]        # 439360 <__data_start@@Base+0x2a0>
  40f0a4:	mov    rsi,r9
  40f0a7:	mov    rdx,r14
  40f0aa:	mov    rdi,rbx
  40f0ad:	mov    QWORD PTR [rsp+0x10],r9
  40f0b2:	call   409a50 <_start@@Base+0x3b10>
  40f0b7:	mov    r9,QWORD PTR [rsp+0x10]
  40f0bc:	mov    r15,rax
  40f0bf:	cmp    rax,r9
  40f0c2:	je     40dd40 <_start@@Base+0x7e00>
  40f0c8:	cmp    r14,rax
  40f0cb:	jne    40eff1 <_start@@Base+0x90b1>
  40f0d1:	jmp    40dd40 <_start@@Base+0x7e00>
  40f0d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f0e0:	lea    rsi,[r13+0x1]
  40f0e4:	mov    rdx,r14
  40f0e7:	mov    rdi,rbx
  40f0ea:	mov    DWORD PTR [rsp+0x34],0x0
  40f0f2:	call   407030 <_start@@Base+0x10f0>
  40f0f7:	mov    r13,rax
  40f0fa:	mov    eax,DWORD PTR [rsp+0x34]
  40f0fe:	jmp    40ddb0 <_start@@Base+0x7e70>
  40f103:	lea    rsi,[rbp+0x1]
  40f107:	mov    rdx,r14
  40f10a:	mov    rdi,rbx
  40f10d:	mov    DWORD PTR [rsp+0x28],0x0
  40f115:	call   407030 <_start@@Base+0x10f0>
  40f11a:	mov    rbp,rax
  40f11d:	mov    eax,DWORD PTR [rsp+0x28]
  40f121:	jmp    40ca00 <_start@@Base+0x6ac0>
  40f126:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f130:	mov    r8,QWORD PTR [rsp]
  40f134:	lea    rcx,[rip+0x2a265]        # 4393a0 <__data_start@@Base+0x2e0>
  40f13b:	mov    rsi,r11
  40f13e:	mov    rdx,r14
  40f141:	mov    rdi,rbx
  40f144:	mov    QWORD PTR [rsp+0x10],r11
  40f149:	call   40a260 <_start@@Base+0x4320>
  40f14e:	mov    r11,QWORD PTR [rsp+0x10]
  40f153:	mov    r15,rax
  40f156:	cmp    rax,r11
  40f159:	je     40dd40 <_start@@Base+0x7e00>
  40f15f:	cmp    r14,rax
  40f162:	jne    40f08b <_start@@Base+0x914b>
  40f168:	jmp    40dd40 <_start@@Base+0x7e00>
  40f16d:	nop    DWORD PTR [rax]
  40f170:	mov    r8,QWORD PTR [rsp]
  40f174:	lea    rcx,[rip+0x2a265]        # 4393e0 <__data_start@@Base+0x320>
  40f17b:	mov    rsi,r11
  40f17e:	mov    rdx,r14
  40f181:	mov    rdi,rbx
  40f184:	mov    QWORD PTR [rsp+0x10],r11
  40f189:	call   40a260 <_start@@Base+0x4320>
  40f18e:	mov    r11,QWORD PTR [rsp+0x10]
  40f193:	mov    r15,rax
  40f196:	cmp    rax,r11
  40f199:	je     40dd40 <_start@@Base+0x7e00>
  40f19f:	cmp    r14,rax
  40f1a2:	jne    40f058 <_start@@Base+0x9118>
  40f1a8:	jmp    40dd40 <_start@@Base+0x7e00>
  40f1ad:	nop    DWORD PTR [rax]
  40f1b0:	mov    ecx,0xa
  40f1b5:	mov    rdx,r14
  40f1b8:	mov    rsi,r14
  40f1bb:	mov    rdi,rbx
  40f1be:	mov    DWORD PTR [rsp+0x34],0x0
  40f1c6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40f1cb:	mov    r13,rax
  40f1ce:	mov    eax,DWORD PTR [rsp+0x34]
  40f1d2:	jmp    40ddb0 <_start@@Base+0x7e70>
  40f1d7:	lea    rcx,[rip+0x2a222]        # 439400 <__data_start@@Base+0x340>
  40f1de:	mov    r8,rbp
  40f1e1:	mov    rdx,r14
  40f1e4:	mov    rsi,rax
  40f1e7:	mov    rdi,rbx
  40f1ea:	call   40a260 <_start@@Base+0x4320>
  40f1ef:	cmp    r15,rax
  40f1f2:	mov    r15,rax
  40f1f5:	je     40dd40 <_start@@Base+0x7e00>
  40f1fb:	cmp    r14,rax
  40f1fe:	jne    40e446 <_start@@Base+0x8506>
  40f204:	jmp    40dd40 <_start@@Base+0x7e00>
  40f209:	nop    DWORD PTR [rax+0x0]
  40f210:	mov    ecx,0xa
  40f215:	mov    rdx,r14
  40f218:	mov    rsi,r14
  40f21b:	mov    rdi,rbx
  40f21e:	mov    DWORD PTR [rsp+0x28],0x0
  40f226:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40f22b:	mov    rbp,rax
  40f22e:	mov    eax,DWORD PTR [rsp+0x28]
  40f232:	jmp    40ca00 <_start@@Base+0x6ac0>
  40f237:	lea    rcx,[rip+0x2a1e2]        # 439420 <__data_start@@Base+0x360>
  40f23e:	mov    r8,rbp
  40f241:	mov    rdx,r14
  40f244:	mov    rsi,rax
  40f247:	mov    rdi,rbx
  40f24a:	call   409a50 <_start@@Base+0x3b10>
  40f24f:	cmp    r15,rax
  40f252:	mov    r15,rax
  40f255:	je     40dd40 <_start@@Base+0x7e00>
  40f25b:	cmp    r14,rax
  40f25e:	jne    40e278 <_start@@Base+0x8338>
  40f264:	jmp    40dd40 <_start@@Base+0x7e00>
  40f269:	nop    DWORD PTR [rax+0x0]
  40f270:	cmp    BYTE PTR [r13+0x2],0x20
  40f275:	jle    40e6eb <_start@@Base+0x87ab>
  40f27b:	add    r13,0x2
  40f27f:	jmp    40d62b <_start@@Base+0x76eb>
  40f284:	cmp    BYTE PTR [r12+0x2],0x20
  40f28a:	jle    40e6ab <_start@@Base+0x876b>
  40f290:	add    r12,0x2
  40f294:	jmp    40d1ab <_start@@Base+0x726b>
  40f299:	cmp    BYTE PTR [r13+0x2],0x20
  40f29e:	jle    40e8b2 <_start@@Base+0x8972>
  40f2a4:	lea    rsi,[r13+0x2]
  40f2a8:	jmp    40e8c0 <_start@@Base+0x8980>
  40f2ad:	lea    rcx,[rip+0x2a10c]        # 4393c0 <__data_start@@Base+0x300>
  40f2b4:	mov    r8,rbp
  40f2b7:	mov    rdx,r14
  40f2ba:	mov    rsi,rax
  40f2bd:	mov    rdi,rbx
  40f2c0:	call   409a50 <_start@@Base+0x3b10>
  40f2c5:	cmp    r15,rax
  40f2c8:	mov    r13,rax
  40f2cb:	je     40d640 <_start@@Base+0x7700>
  40f2d1:	cmp    r14,rax
  40f2d4:	je     40d640 <_start@@Base+0x7700>
  40f2da:	mov    r15,rax
  40f2dd:	jmp    40e7fc <_start@@Base+0x88bc>
  40f2e2:	lea    rcx,[rip+0x2a097]        # 439380 <__data_start@@Base+0x2c0>
  40f2e9:	mov    r8,rbp
  40f2ec:	mov    rdx,r14
  40f2ef:	mov    rsi,rax
  40f2f2:	mov    rdi,rbx
  40f2f5:	call   409a50 <_start@@Base+0x3b10>
  40f2fa:	cmp    r15,rax
  40f2fd:	mov    r13,rax
  40f300:	je     40d640 <_start@@Base+0x7700>
  40f306:	cmp    r14,rax
  40f309:	je     40d640 <_start@@Base+0x7700>
  40f30f:	mov    r15,rax
  40f312:	jmp    40e010 <_start@@Base+0x80d0>
  40f317:	add    rsi,0x1
  40f31b:	mov    rdx,r14
  40f31e:	mov    rdi,rbx
  40f321:	call   407030 <_start@@Base+0x10f0>
  40f326:	mov    r13,rax
  40f329:	jmp    40db50 <_start@@Base+0x7c10>
  40f32e:	call   405070 <__stack_chk_fail@plt>
  40f333:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f33e:	xchg   ax,ax
  40f340:	mov    rax,rdx
  40f343:	push   r14
  40f345:	mov    r10,rsi
  40f348:	sub    rax,rsi
  40f34b:	push   r13
  40f34d:	mov    r11,rdx
  40f350:	cmp    rax,0x7
  40f354:	push   r12
  40f356:	mov    r12,rdi
  40f359:	push   rbp
  40f35a:	mov    rbp,r8
  40f35d:	push   rbx
  40f35e:	mov    rbx,rcx
  40f361:	jbe    40f4f0 <_start@@Base+0x95b0>
  40f367:	movbe  rax,QWORD PTR [rsi]
  40f36c:	movabs rdx,0x4d7947616d652e44
  40f376:	cmp    rax,rdx
  40f379:	ja     40f3a0 <_start@@Base+0x9460>
  40f37b:	movabs rdx,0x46616e746173792e
  40f385:	cmp    rax,rdx
  40f388:	je     40f500 <_start@@Base+0x95c0>
  40f38e:	pop    rbx
  40f38f:	mov    rax,r10
  40f392:	pop    rbp
  40f393:	pop    r12
  40f395:	pop    r13
  40f397:	pop    r14
  40f399:	ret    
  40f39a:	nop    WORD PTR [rax+rax*1+0x0]
  40f3a0:	movabs rdx,0x4d7947616d652e45
  40f3aa:	cmp    rax,rdx
  40f3ad:	je     40f5a0 <_start@@Base+0x9660>
  40f3b3:	movabs rdx,0x4d7947616d652e4f
  40f3bd:	cmp    rax,rdx
  40f3c0:	jne    40f38e <_start@@Base+0x944e>
  40f3c2:	lea    rdi,[r10+0x8]
  40f3c6:	mov    rax,r11
  40f3c9:	sub    rax,rdi
  40f3cc:	cmp    rax,0x7
  40f3d0:	jbe    40f738 <_start@@Base+0x97f8>
  40f3d6:	movbe  rax,QWORD PTR [r10+0x8]
  40f3dc:	movabs rdx,0x746865724e616d65
  40f3e6:	cmp    rax,rdx
  40f3e9:	jne    40f38e <_start@@Base+0x944e>
  40f3eb:	lea    rdi,[r10+0x10]
  40f3ef:	mov    rax,r11
  40f3f2:	sub    rax,rdi
  40f3f5:	cmp    rax,0x7
  40f3f9:	ja     40f848 <_start@@Base+0x9908>
  40f3ff:	mov    rsi,r11
  40f402:	call   406050 <_start@@Base+0x110>
  40f407:	movabs rdx,0x53706163652e4672
  40f411:	cmp    rax,rdx
  40f414:	jne    40f38e <_start@@Base+0x944e>
  40f41a:	lea    rdi,[r10+0x18]
  40f41e:	mov    rax,r11
  40f421:	sub    rax,rdi
  40f424:	cmp    rax,0x7
  40f428:	jbe    40f988 <_start@@Base+0x9a48>
  40f42e:	movbe  rax,QWORD PTR [r10+0x18]
  40f434:	movabs rdx,0x6f6d496e636c7564
  40f43e:	cmp    rax,rdx
  40f441:	jne    40f38e <_start@@Base+0x944e>
  40f447:	lea    rdi,[r10+0x20]
  40f44b:	mov    r8,r11
  40f44e:	sub    r8,rdi
  40f451:	cmp    r8,0x7
  40f455:	jbe    40f9c9 <_start@@Base+0x9a89>
  40f45b:	movbe  rax,QWORD PTR [r10+0x20]
  40f461:	movabs rdx,0xff00000000000000
  40f46b:	and    rax,rdx
  40f46e:	movabs rdx,0x6500000000000000
  40f478:	cmp    rax,rdx
  40f47b:	jne    40f38e <_start@@Base+0x944e>
  40f481:	cmp    r8,0x1
  40f485:	jle    40f38e <_start@@Base+0x944e>
  40f48b:	cmp    BYTE PTR [r10+0x21],0x2e
  40f490:	jne    40f38e <_start@@Base+0x944e>
  40f496:	lea    r13,[r10+0x22]
  40f49a:	mov    rax,r11
  40f49d:	sub    rax,r13
  40f4a0:	cmp    rax,0x7
  40f4a4:	jbe    40fa22 <_start@@Base+0x9ae2>
  40f4aa:	movbe  rax,QWORD PTR [r10+0x22]
  40f4b0:	movabs rdx,0xffffff0000000000
  40f4ba:	movabs rcx,0x466f6f0000000000
  40f4c4:	and    rdx,rax
  40f4c7:	cmp    rdx,rcx
  40f4ca:	je     40faba <_start@@Base+0x9b7a>
  40f4d0:	movabs rdx,0x496e636c75646556
  40f4da:	cmp    rax,rdx
  40f4dd:	je     40fa3f <_start@@Base+0x9aff>
  40f4e3:	mov    r10,r13
  40f4e6:	jmp    40f38e <_start@@Base+0x944e>
  40f4eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40f4f0:	mov    rsi,rdx
  40f4f3:	mov    rdi,r10
  40f4f6:	call   406050 <_start@@Base+0x110>
  40f4fb:	jmp    40f36c <_start@@Base+0x942c>
  40f500:	lea    rdi,[r10+0x8]
  40f504:	mov    rax,r11
  40f507:	sub    rax,rdi
  40f50a:	cmp    rax,0x7
  40f50e:	jbe    40f678 <_start@@Base+0x9738>
  40f514:	movbe  rax,QWORD PTR [r10+0x8]
  40f51a:	movabs rdx,0x4368617261637465
  40f524:	cmp    rax,rdx
  40f527:	jne    40f38e <_start@@Base+0x944e>
  40f52d:	lea    rdi,[r10+0x10]
  40f531:	mov    r8,r11
  40f534:	sub    r8,rdi
  40f537:	cmp    r8,0x7
  40f53b:	ja     40f748 <_start@@Base+0x9808>
  40f541:	mov    rsi,r11
  40f544:	call   406050 <_start@@Base+0x110>
  40f549:	movabs rdx,0xff00000000000000
  40f553:	and    rax,rdx
  40f556:	movabs rdx,0x7200000000000000
  40f560:	cmp    rax,rdx
  40f563:	jne    40f38e <_start@@Base+0x944e>
  40f569:	cmp    r8,0x1
  40f56d:	jle    40f38e <_start@@Base+0x944e>
  40f573:	cmp    BYTE PTR [r10+0x11],0x2e
  40f578:	jne    40f38e <_start@@Base+0x944e>
  40f57e:	mov    r8,rbp
  40f581:	mov    rcx,rbx
  40f584:	mov    rdi,r12
  40f587:	pop    rbx
  40f588:	pop    rbp
  40f589:	pop    r12
  40f58b:	pop    r13
  40f58d:	pop    r14
  40f58f:	lea    rsi,[r10+0x12]
  40f593:	mov    rdx,r11
  40f596:	jmp    407070 <_start@@Base+0x1130>
  40f59b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f5a0:	lea    rdi,[r10+0x8]
  40f5a4:	mov    rax,r11
  40f5a7:	sub    rax,rdi
  40f5aa:	cmp    rax,0x7
  40f5ae:	jbe    40f728 <_start@@Base+0x97e8>
  40f5b4:	movbe  rax,QWORD PTR [r10+0x8]
  40f5ba:	movabs rdx,0x78616d706c652e67
  40f5c4:	cmp    rax,rdx
  40f5c7:	ja     40f688 <_start@@Base+0x9748>
  40f5cd:	movabs rdx,0x78616d706c652e42
  40f5d7:	cmp    rax,rdx
  40f5da:	jbe    40f758 <_start@@Base+0x9818>
  40f5e0:	movabs rdx,0x78616d706c652e43
  40f5ea:	cmp    rax,rdx
  40f5ed:	je     40f920 <_start@@Base+0x99e0>
  40f5f3:	movabs rdx,0x78616d706c652e46
  40f5fd:	cmp    rax,rdx
  40f600:	jne    40f38e <_start@@Base+0x944e>
  40f606:	lea    rdi,[r10+0x10]
  40f60a:	mov    r8,r11
  40f60d:	sub    r8,rdi
  40f610:	cmp    r8,0x7
  40f614:	jbe    40f9bc <_start@@Base+0x9a7c>
  40f61a:	movbe  rax,QWORD PTR [r10+0x10]
  40f620:	movabs rdx,0xffff000000000000
  40f62a:	and    rax,rdx
  40f62d:	movabs rdx,0x6f6f000000000000
  40f637:	cmp    rax,rdx
  40f63a:	jne    40f38e <_start@@Base+0x944e>
  40f640:	cmp    r8,0x2
  40f644:	jle    40f38e <_start@@Base+0x944e>
  40f64a:	cmp    BYTE PTR [r10+0x12],0x2e
  40f64f:	jne    40f38e <_start@@Base+0x944e>
  40f655:	mov    r8,rbp
  40f658:	mov    rcx,rbx
  40f65b:	mov    rdi,r12
  40f65e:	pop    rbx
  40f65f:	pop    rbp
  40f660:	pop    r12
  40f662:	pop    r13
  40f664:	pop    r14
  40f666:	lea    rsi,[r10+0x13]
  40f66a:	mov    rdx,r11
  40f66d:	jmp    407600 <_start@@Base+0x16c0>
  40f672:	nop    WORD PTR [rax+rax*1+0x0]
  40f678:	mov    rsi,r11
  40f67b:	call   406050 <_start@@Base+0x110>
  40f680:	jmp    40f51a <_start@@Base+0x95da>
  40f685:	nop    DWORD PTR [rax]
  40f688:	movabs rdx,0x78616d706c652e68
  40f692:	cmp    rax,rdx
  40f695:	je     40f7e0 <_start@@Base+0x98a0>
  40f69b:	movabs rdx,0x78616d706c652e6d
  40f6a5:	cmp    rax,rdx
  40f6a8:	ja     40f858 <_start@@Base+0x9918>
  40f6ae:	movabs rdx,0x78616d706c652e69
  40f6b8:	cmp    rax,rdx
  40f6bb:	jne    40f38e <_start@@Base+0x944e>
  40f6c1:	lea    rdi,[r10+0x10]
  40f6c5:	mov    r8,r11
  40f6c8:	sub    r8,rdi
  40f6cb:	cmp    r8,0x7
  40f6cf:	jbe    40f9e3 <_start@@Base+0x9aa3>
  40f6d5:	movbe  rax,QWORD PTR [r10+0x10]
  40f6db:	xor    al,al
  40f6dd:	movabs rdx,0x6e745f656e756d00
  40f6e7:	cmp    rax,rdx
  40f6ea:	jne    40f38e <_start@@Base+0x944e>
  40f6f0:	cmp    r8,0x7
  40f6f4:	jle    40f38e <_start@@Base+0x944e>
  40f6fa:	cmp    BYTE PTR [r10+0x17],0x2e
  40f6ff:	jne    40f38e <_start@@Base+0x944e>
  40f705:	mov    r8,rbp
  40f708:	mov    rcx,rbx
  40f70b:	mov    rdi,r12
  40f70e:	pop    rbx
  40f70f:	pop    rbp
  40f710:	pop    r12
  40f712:	pop    r13
  40f714:	pop    r14
  40f716:	lea    rsi,[r10+0x18]
  40f71a:	mov    rdx,r11
  40f71d:	jmp    4078f0 <_start@@Base+0x19b0>
  40f722:	nop    WORD PTR [rax+rax*1+0x0]
  40f728:	mov    rsi,r11
  40f72b:	call   406050 <_start@@Base+0x110>
  40f730:	jmp    40f5ba <_start@@Base+0x967a>
  40f735:	nop    DWORD PTR [rax]
  40f738:	mov    rsi,r11
  40f73b:	call   406050 <_start@@Base+0x110>
  40f740:	jmp    40f3dc <_start@@Base+0x949c>
  40f745:	nop    DWORD PTR [rax]
  40f748:	movbe  rax,QWORD PTR [r10+0x10]
  40f74e:	jmp    40f549 <_start@@Base+0x9609>
  40f753:	nop    DWORD PTR [rax+rax*1+0x0]
  40f758:	movabs rdx,0x78616d706c652e41
  40f762:	cmp    rax,rdx
  40f765:	jne    40f38e <_start@@Base+0x944e>
  40f76b:	lea    rdi,[r10+0x10]
  40f76f:	mov    r8,r11
  40f772:	sub    r8,rdi
  40f775:	cmp    r8,0x7
  40f779:	jbe    40f995 <_start@@Base+0x9a55>
  40f77f:	movbe  rax,QWORD PTR [r10+0x10]
  40f785:	movabs rdx,0xffff000000000000
  40f78f:	and    rax,rdx
  40f792:	movabs rdx,0x6e79000000000000
  40f79c:	cmp    rax,rdx
  40f79f:	jne    40f38e <_start@@Base+0x944e>
  40f7a5:	cmp    r8,0x2
  40f7a9:	jle    40f38e <_start@@Base+0x944e>
  40f7af:	cmp    BYTE PTR [r10+0x12],0x2e
  40f7b4:	jne    40f38e <_start@@Base+0x944e>
  40f7ba:	mov    r8,rbp
  40f7bd:	mov    rcx,rbx
  40f7c0:	mov    rdi,r12
  40f7c3:	pop    rbx
  40f7c4:	pop    rbp
  40f7c5:	pop    r12
  40f7c7:	pop    r13
  40f7c9:	pop    r14
  40f7cb:	lea    rsi,[r10+0x13]
  40f7cf:	mov    rdx,r11
  40f7d2:	jmp    407350 <_start@@Base+0x1410>
  40f7d7:	nop    WORD PTR [rax+rax*1+0x0]
  40f7e0:	lea    rdi,[r10+0x10]
  40f7e4:	mov    r8,r11
  40f7e7:	sub    r8,rdi
  40f7ea:	cmp    r8,0x7
  40f7ee:	jbe    40f9a2 <_start@@Base+0x9a62>
  40f7f4:	movbe  rax,QWORD PTR [r10+0x10]
  40f7fa:	xor    al,al
  40f7fc:	movabs rdx,0x65785f656e756d00
  40f806:	cmp    rax,rdx
  40f809:	jne    40f38e <_start@@Base+0x944e>
  40f80f:	cmp    r8,0x7
  40f813:	jle    40f38e <_start@@Base+0x944e>
  40f819:	cmp    BYTE PTR [r10+0x17],0x2e
  40f81e:	jne    40f38e <_start@@Base+0x944e>
  40f824:	mov    r8,rbp
  40f827:	mov    rcx,rbx
  40f82a:	mov    rdi,r12
  40f82d:	pop    rbx
  40f82e:	pop    rbp
  40f82f:	pop    r12
  40f831:	pop    r13
  40f833:	pop    r14
  40f835:	lea    rsi,[r10+0x18]
  40f839:	mov    rdx,r11
  40f83c:	jmp    407790 <_start@@Base+0x1850>
  40f841:	nop    DWORD PTR [rax+0x0]
  40f848:	movbe  rax,QWORD PTR [r10+0x10]
  40f84e:	jmp    40f407 <_start@@Base+0x94c7>
  40f853:	nop    DWORD PTR [rax+rax*1+0x0]
  40f858:	movabs rdx,0x78616d706c652e6e
  40f862:	cmp    rax,rdx
  40f865:	jne    40f38e <_start@@Base+0x944e>
  40f86b:	lea    rdi,[r10+0x10]
  40f86f:	mov    r8,r11
  40f872:	sub    r8,rdi
  40f875:	cmp    r8,0x7
  40f879:	jbe    40f9d6 <_start@@Base+0x9a96>
  40f87f:	movbe  rax,QWORD PTR [r10+0x10]
  40f885:	mov    rcx,rax
  40f888:	movabs rdx,0x65675f656e756d00
  40f892:	xor    cl,cl
  40f894:	cmp    rcx,rdx
  40f897:	je     40f9f0 <_start@@Base+0x9ab0>
  40f89d:	movabs rdx,0x6f74656d70747965
  40f8a7:	cmp    rax,rdx
  40f8aa:	jne    40f38e <_start@@Base+0x944e>
  40f8b0:	lea    rdi,[r10+0x18]
  40f8b4:	mov    r8,r11
  40f8b7:	sub    r8,rdi
  40f8ba:	cmp    r8,0x7
  40f8be:	jbe    40fa32 <_start@@Base+0x9af2>
  40f8c4:	movbe  rax,QWORD PTR [r10+0x18]
  40f8ca:	movabs rdx,0xffffff0000000000
  40f8d4:	and    rax,rdx
  40f8d7:	movabs rdx,0x6e756d0000000000
  40f8e1:	cmp    rax,rdx
  40f8e4:	jne    40f38e <_start@@Base+0x944e>
  40f8ea:	cmp    r8,0x3
  40f8ee:	jle    40f38e <_start@@Base+0x944e>
  40f8f4:	cmp    BYTE PTR [r10+0x1b],0x2e
  40f8f9:	jne    40f38e <_start@@Base+0x944e>
  40f8ff:	mov    r8,rbp
  40f902:	mov    rcx,rbx
  40f905:	mov    rdi,r12
  40f908:	pop    rbx
  40f909:	pop    rbp
  40f90a:	pop    r12
  40f90c:	pop    r13
  40f90e:	pop    r14
  40f910:	lea    rsi,[r10+0x1c]
  40f914:	mov    rdx,r11
  40f917:	jmp    4086a0 <_start@@Base+0x2760>
  40f91c:	nop    DWORD PTR [rax+0x0]
  40f920:	lea    rdi,[r10+0x10]
  40f924:	mov    r8,r11
  40f927:	sub    r8,rdi
  40f92a:	cmp    r8,0x7
  40f92e:	jbe    40f9af <_start@@Base+0x9a6f>
  40f930:	movbe  rax,QWORD PTR [r10+0x10]
  40f936:	movabs rdx,0xffffffff00000000
  40f940:	and    rax,rdx
  40f943:	movabs rdx,0x6f6c6f7200000000
  40f94d:	cmp    rax,rdx
  40f950:	jne    40f38e <_start@@Base+0x944e>
  40f956:	cmp    r8,0x4
  40f95a:	jle    40f38e <_start@@Base+0x944e>
  40f960:	cmp    BYTE PTR [r10+0x14],0x2e
  40f965:	jne    40f38e <_start@@Base+0x944e>
  40f96b:	mov    r8,rbp
  40f96e:	mov    rcx,rbx
  40f971:	mov    rdi,r12
  40f974:	pop    rbx
  40f975:	pop    rbp
  40f976:	pop    r12
  40f978:	pop    r13
  40f97a:	pop    r14
  40f97c:	lea    rsi,[r10+0x15]
  40f980:	mov    rdx,r11
  40f983:	jmp    407bf0 <_start@@Base+0x1cb0>
  40f988:	mov    rsi,r11
  40f98b:	call   406050 <_start@@Base+0x110>
  40f990:	jmp    40f434 <_start@@Base+0x94f4>
  40f995:	mov    rsi,r11
  40f998:	call   406050 <_start@@Base+0x110>
  40f99d:	jmp    40f785 <_start@@Base+0x9845>
  40f9a2:	mov    rsi,r11
  40f9a5:	call   406050 <_start@@Base+0x110>
  40f9aa:	jmp    40f7fa <_start@@Base+0x98ba>
  40f9af:	mov    rsi,r11
  40f9b2:	call   406050 <_start@@Base+0x110>
  40f9b7:	jmp    40f936 <_start@@Base+0x99f6>
  40f9bc:	mov    rsi,r11
  40f9bf:	call   406050 <_start@@Base+0x110>
  40f9c4:	jmp    40f620 <_start@@Base+0x96e0>
  40f9c9:	mov    rsi,r11
  40f9cc:	call   406050 <_start@@Base+0x110>
  40f9d1:	jmp    40f461 <_start@@Base+0x9521>
  40f9d6:	mov    rsi,r11
  40f9d9:	call   406050 <_start@@Base+0x110>
  40f9de:	jmp    40f885 <_start@@Base+0x9945>
  40f9e3:	mov    rsi,r11
  40f9e6:	call   406050 <_start@@Base+0x110>
  40f9eb:	jmp    40f6db <_start@@Base+0x979b>
  40f9f0:	cmp    r8,0x7
  40f9f4:	jle    40f38e <_start@@Base+0x944e>
  40f9fa:	cmp    BYTE PTR [r10+0x17],0x2e
  40f9ff:	jne    40f38e <_start@@Base+0x944e>
  40fa05:	mov    r8,rbp
  40fa08:	mov    rcx,rbx
  40fa0b:	mov    rdi,r12
  40fa0e:	pop    rbx
  40fa0f:	pop    rbp
  40fa10:	pop    r12
  40fa12:	pop    r13
  40fa14:	pop    r14
  40fa16:	lea    rsi,[r10+0x18]
  40fa1a:	mov    rdx,r11
  40fa1d:	jmp    407aa0 <_start@@Base+0x1b60>
  40fa22:	mov    rsi,r11
  40fa25:	mov    rdi,r13
  40fa28:	call   406050 <_start@@Base+0x110>
  40fa2d:	jmp    40f4b0 <_start@@Base+0x9570>
  40fa32:	mov    rsi,r11
  40fa35:	call   406050 <_start@@Base+0x110>
  40fa3a:	jmp    40f8ca <_start@@Base+0x998a>
  40fa3f:	lea    r14,[r10+0x2a]
  40fa43:	mov    rax,r11
  40fa46:	sub    rax,r14
  40fa49:	cmp    rax,0x7
  40fa4d:	jbe    40faad <_start@@Base+0x9b6d>
  40fa4f:	movbe  rax,QWORD PTR [r10+0x2a]
  40fa55:	movabs rdx,0xffff000000000000
  40fa5f:	mov    r10,r13
  40fa62:	and    rax,rdx
  40fa65:	movabs rdx,0x616c000000000000
  40fa6f:	cmp    rax,rdx
  40fa72:	jne    40f38e <_start@@Base+0x944e>
  40fa78:	mov    r8,r9
  40fa7b:	mov    ecx,0x2
  40fa80:	mov    rdx,r11
  40fa83:	mov    rsi,r14
  40fa86:	mov    rdi,r12
  40fa89:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  40fa8e:	cmp    r14,rax
  40fa91:	mov    r10,rax
  40fa94:	je     40f4e3 <_start@@Base+0x95a3>
  40fa9a:	mov    QWORD PTR [rbp+0x0],0x0
  40faa2:	mov    DWORD PTR [rbx],0x0
  40faa8:	jmp    40f38e <_start@@Base+0x944e>
  40faad:	mov    rsi,r11
  40fab0:	mov    rdi,r14
  40fab3:	call   406050 <_start@@Base+0x110>
  40fab8:	jmp    40fa55 <_start@@Base+0x9b15>
  40faba:	mov    r8,r9
  40fabd:	mov    ecx,0x3
  40fac2:	mov    rdx,r11
  40fac5:	mov    rsi,r13
  40fac8:	mov    rdi,r12
  40facb:	call   41cf40 <flatcc_json_parser_match_constant@@Base>
  40fad0:	cmp    r13,rax
  40fad3:	mov    r10,rax
  40fad6:	je     40f38e <_start@@Base+0x944e>
  40fadc:	mov    QWORD PTR [rbp+0x0],0x11
  40fae4:	mov    DWORD PTR [rbx],0x0
  40faea:	jmp    40f38e <_start@@Base+0x944e>
  40faef:	nop
  40faf0:	push   r13
  40faf2:	push   r12
  40faf4:	mov    r13,rsi
  40faf7:	push   rbp
  40faf8:	push   rbx
  40faf9:	mov    rbp,rdi
  40fafc:	xor    esi,esi
  40fafe:	mov    rbx,rdx
  40fb01:	mov    r12,rcx
  40fb04:	sub    rsp,0x8
  40fb08:	mov    rdi,QWORD PTR [rdi]
  40fb0b:	mov    DWORD PTR [rcx],0x0
  40fb11:	call   4173e0 <flatcc_builder_start_table@@Base>
  40fb16:	test   eax,eax
  40fb18:	jne    40fb47 <_start@@Base+0x9c07>
  40fb1a:	cmp    r13,rbx
  40fb1d:	je     40fb26 <_start@@Base+0x9be6>
  40fb1f:	cmp    BYTE PTR [r13+0x0],0x7b
  40fb24:	je     40fb90 <_start@@Base+0x9c50>
  40fb26:	mov    rsi,r13
  40fb29:	mov    ecx,0x15
  40fb2e:	mov    rdx,rbx
  40fb31:	mov    rdi,rbp
  40fb34:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40fb39:	mov    r13,rax
  40fb3c:	nop    DWORD PTR [rax+0x0]
  40fb40:	mov    eax,DWORD PTR [rbp+0x20]
  40fb43:	test   eax,eax
  40fb45:	je     40fb68 <_start@@Base+0x9c28>
  40fb47:	add    rsp,0x8
  40fb4b:	mov    rdx,rbx
  40fb4e:	mov    rsi,r13
  40fb51:	pop    rbx
  40fb52:	mov    rdi,rbp
  40fb55:	mov    ecx,0x21
  40fb5a:	pop    rbp
  40fb5b:	pop    r12
  40fb5d:	pop    r13
  40fb5f:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  40fb64:	nop    DWORD PTR [rax+0x0]
  40fb68:	mov    rdi,QWORD PTR [rbp+0x0]
  40fb6c:	call   417da0 <flatcc_builder_end_table@@Base>
  40fb71:	test   eax,eax
  40fb73:	mov    DWORD PTR [r12],eax
  40fb77:	je     40fb47 <_start@@Base+0x9c07>
  40fb79:	add    rsp,0x8
  40fb7d:	mov    rax,r13
  40fb80:	pop    rbx
  40fb81:	pop    rbp
  40fb82:	pop    r12
  40fb84:	pop    r13
  40fb86:	ret    
  40fb87:	nop    WORD PTR [rax+rax*1+0x0]
  40fb90:	lea    rsi,[r13+0x1]
  40fb94:	mov    rax,rbx
  40fb97:	sub    rax,rsi
  40fb9a:	cmp    rax,0x1
  40fb9e:	jle    40fbad <_start@@Base+0x9c6d>
  40fba0:	cmp    BYTE PTR [r13+0x1],0x20
  40fba5:	jg     40fbbb <_start@@Base+0x9c7b>
  40fba7:	je     40fd8b <_start@@Base+0x9e4b>
  40fbad:	mov    rdx,rbx
  40fbb0:	mov    rdi,rbp
  40fbb3:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40fbb8:	mov    rsi,rax
  40fbbb:	cmp    rbx,rsi
  40fbbe:	je     40fbd0 <_start@@Base+0x9c90>
  40fbc0:	cmp    BYTE PTR [rsi],0x7d
  40fbc3:	je     40fdba <_start@@Base+0x9e7a>
  40fbc9:	nop    DWORD PTR [rax+0x0]
  40fbd0:	cmp    rbx,rsi
  40fbd3:	je     40fbef <_start@@Base+0x9caf>
  40fbd5:	movzx  eax,BYTE PTR [rsi]
  40fbd8:	cmp    al,0x22
  40fbda:	je     40fc90 <_start@@Base+0x9d50>
  40fbe0:	cmp    al,0x2e
  40fbe2:	je     40fd48 <_start@@Base+0x9e08>
  40fbe8:	mov    DWORD PTR [rbp+0x14],0x1
  40fbef:	mov    rdx,rbx
  40fbf2:	mov    rdi,rbp
  40fbf5:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40fbfa:	mov    rdx,rbx
  40fbfd:	sub    rdx,rax
  40fc00:	cmp    rdx,0x1
  40fc04:	jle    40fc11 <_start@@Base+0x9cd1>
  40fc06:	cmp    BYTE PTR [rax],0x20
  40fc09:	jg     40fc1f <_start@@Base+0x9cdf>
  40fc0b:	je     40fca0 <_start@@Base+0x9d60>
  40fc11:	mov    rdx,rbx
  40fc14:	mov    rsi,rax
  40fc17:	mov    rdi,rbp
  40fc1a:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40fc1f:	cmp    rbx,rax
  40fc22:	je     40fcc0 <_start@@Base+0x9d80>
  40fc28:	movzx  edx,BYTE PTR [rax]
  40fc2b:	cmp    dl,0x2c
  40fc2e:	je     40fcd0 <_start@@Base+0x9d90>
  40fc34:	cmp    dl,0x7d
  40fc37:	je     40fc58 <_start@@Base+0x9d18>
  40fc39:	mov    ecx,0xa
  40fc3e:	mov    rdx,rbx
  40fc41:	mov    rsi,rax
  40fc44:	mov    rdi,rbp
  40fc47:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40fc4c:	mov    r13,rax
  40fc4f:	jmp    40fb40 <_start@@Base+0x9c00>
  40fc54:	nop    DWORD PTR [rax+0x0]
  40fc58:	lea    r13,[rax+0x1]
  40fc5c:	mov    rdx,rbx
  40fc5f:	sub    rdx,r13
  40fc62:	cmp    rdx,0x1
  40fc66:	jle    40fc78 <_start@@Base+0x9d38>
  40fc68:	cmp    BYTE PTR [rax+0x1],0x20
  40fc6c:	jg     40fb40 <_start@@Base+0x9c00>
  40fc72:	je     40fd60 <_start@@Base+0x9e20>
  40fc78:	mov    rsi,r13
  40fc7b:	mov    rdx,rbx
  40fc7e:	mov    rdi,rbp
  40fc81:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40fc86:	mov    r13,rax
  40fc89:	jmp    40fb40 <_start@@Base+0x9c00>
  40fc8e:	xchg   ax,ax
  40fc90:	add    rsi,0x1
  40fc94:	mov    DWORD PTR [rbp+0x14],0x0
  40fc9b:	jmp    40fbef <_start@@Base+0x9caf>
  40fca0:	cmp    BYTE PTR [rax+0x1],0x20
  40fca4:	jle    40fc11 <_start@@Base+0x9cd1>
  40fcaa:	add    rax,0x1
  40fcae:	cmp    rbx,rax
  40fcb1:	jne    40fc28 <_start@@Base+0x9ce8>
  40fcb7:	nop    WORD PTR [rax+rax*1+0x0]
  40fcc0:	mov    r13,rbx
  40fcc3:	jmp    40fb40 <_start@@Base+0x9c00>
  40fcc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40fcd0:	lea    rsi,[rax+0x1]
  40fcd4:	mov    rdx,rbx
  40fcd7:	sub    rdx,rsi
  40fcda:	cmp    rdx,0x1
  40fcde:	jle    40fcec <_start@@Base+0x9dac>
  40fce0:	cmp    BYTE PTR [rax+0x1],0x20
  40fce4:	jg     40fcfa <_start@@Base+0x9dba>
  40fce6:	je     40fd78 <_start@@Base+0x9e38>
  40fcec:	mov    rdx,rbx
  40fcef:	mov    rdi,rbp
  40fcf2:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  40fcf7:	mov    rsi,rax
  40fcfa:	cmp    rbx,rsi
  40fcfd:	je     40fd9f <_start@@Base+0x9e5f>
  40fd03:	cmp    BYTE PTR [rsi],0x7d
  40fd06:	jne    40fbd0 <_start@@Base+0x9c90>
  40fd0c:	lea    r13,[rsi+0x1]
  40fd10:	mov    rax,rbx
  40fd13:	sub    rax,r13
  40fd16:	cmp    rax,0x1
  40fd1a:	jle    40fc78 <_start@@Base+0x9d38>
  40fd20:	cmp    BYTE PTR [rsi+0x1],0x20
  40fd24:	jg     40fb40 <_start@@Base+0x9c00>
  40fd2a:	jne    40fc78 <_start@@Base+0x9d38>
  40fd30:	cmp    BYTE PTR [rsi+0x2],0x20
  40fd34:	jle    40fc78 <_start@@Base+0x9d38>
  40fd3a:	lea    r13,[rsi+0x2]
  40fd3e:	jmp    40fb40 <_start@@Base+0x9c00>
  40fd43:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd48:	mov    ecx,0x5
  40fd4d:	mov    rdx,rbx
  40fd50:	mov    rdi,rbp
  40fd53:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40fd58:	mov    rsi,rax
  40fd5b:	jmp    40fbef <_start@@Base+0x9caf>
  40fd60:	cmp    BYTE PTR [rax+0x2],0x20
  40fd64:	jle    40fc78 <_start@@Base+0x9d38>
  40fd6a:	lea    r13,[rax+0x2]
  40fd6e:	jmp    40fb40 <_start@@Base+0x9c00>
  40fd73:	nop    DWORD PTR [rax+rax*1+0x0]
  40fd78:	cmp    BYTE PTR [rax+0x2],0x20
  40fd7c:	jle    40fcec <_start@@Base+0x9dac>
  40fd82:	lea    rsi,[rax+0x2]
  40fd86:	jmp    40fcfa <_start@@Base+0x9dba>
  40fd8b:	cmp    BYTE PTR [r13+0x2],0x20
  40fd90:	jle    40fbad <_start@@Base+0x9c6d>
  40fd96:	lea    rsi,[r13+0x2]
  40fd9a:	jmp    40fbbb <_start@@Base+0x9c7b>
  40fd9f:	mov    ecx,0xa
  40fda4:	mov    rdx,rbx
  40fda7:	mov    rsi,rbx
  40fdaa:	mov    rdi,rbp
  40fdad:	call   41c420 <flatcc_json_parser_set_error@@Base>
  40fdb2:	mov    r13,rax
  40fdb5:	jmp    40fb40 <_start@@Base+0x9c00>
  40fdba:	add    rsi,0x1
  40fdbe:	mov    rdx,rbx
  40fdc1:	mov    rdi,rbp
  40fdc4:	call   407030 <_start@@Base+0x10f0>
  40fdc9:	mov    r13,rax
  40fdcc:	jmp    40fb40 <_start@@Base+0x9c00>
  40fdd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40fddc:	nop    DWORD PTR [rax+0x0]
  40fde0:	push   r15
  40fde2:	push   r14
  40fde4:	mov    rax,rcx
  40fde7:	push   r13
  40fde9:	push   r12
  40fdeb:	mov    r14,rsi
  40fdee:	push   rbp
  40fdef:	push   rbx
  40fdf0:	mov    rbp,rdi
  40fdf3:	mov    esi,0x24
  40fdf8:	mov    rbx,rdx
  40fdfb:	sub    rsp,0x78
  40fdff:	mov    rdi,QWORD PTR [rdi]
  40fe02:	mov    DWORD PTR [rax],0x0
  40fe08:	mov    QWORD PTR [rsp+0x20],rcx
  40fe0d:	mov    rcx,QWORD PTR fs:0x28
  40fe16:	mov    QWORD PTR [rsp+0x68],rcx
  40fe1b:	xor    ecx,ecx
  40fe1d:	call   4173e0 <flatcc_builder_start_table@@Base>
  40fe22:	test   eax,eax
  40fe24:	jne    410070 <_start@@Base+0xa130>
  40fe2a:	lea    r8,[rsp+0x50]
  40fe2f:	mov    ecx,0x1
  40fe34:	mov    rdx,rbx
  40fe37:	mov    rsi,r14
  40fe3a:	mov    rdi,rbp
  40fe3d:	call   41e620 <flatcc_json_parser_prepare_unions@@Base>
  40fe42:	cmp    rbx,rax
  40fe45:	je     410070 <_start@@Base+0xa130>
  40fe4b:	lea    rax,[rsp+0x40]
  40fe50:	mov    rsi,r14
  40fe53:	mov    rdx,rbx
  40fe56:	mov    rdi,rbp
  40fe59:	mov    rcx,rax
  40fe5c:	mov    QWORD PTR [rsp+0x8],rax
  40fe61:	call   408fe0 <_start@@Base+0x30a0>
  40fe66:	mov    r14,rax
  40fe69:	mov    eax,DWORD PTR [rsp+0x40]
  40fe6d:	test   eax,eax
  40fe6f:	je     41057a <_start@@Base+0xa63a>
  40fe75:	lea    rax,[rsp+0x60]
  40fe7a:	mov    r13,rax
  40fe7d:	nop    DWORD PTR [rax]
  40fe80:	cmp    rbx,r14
  40fe83:	je     4100b0 <_start@@Base+0xa170>
  40fe89:	movzx  eax,BYTE PTR [r14]
  40fe8d:	cmp    al,0x22
  40fe8f:	je     410200 <_start@@Base+0xa2c0>
  40fe95:	cmp    al,0x2e
  40fe97:	je     410518 <_start@@Base+0xa5d8>
  40fe9d:	mov    r15,rbx
  40fea0:	mov    DWORD PTR [rbp+0x14],0x1
  40fea7:	sub    r15,r14
  40feaa:	cmp    r15,0x7
  40feae:	jbe    4100b8 <_start@@Base+0xa178>
  40feb4:	movbe  r12,QWORD PTR [r14]
  40feb9:	movabs rax,0x7465737461727260
  40fec3:	cmp    r12,rax
  40fec6:	ja     4100d9 <_start@@Base+0xa199>
  40fecc:	movabs rax,0x6e616d64ffffffff
  40fed6:	cmp    r12,rax
  40fed9:	ja     410150 <_start@@Base+0xa210>
  40fedf:	movabs rax,0x666c6577ffffffff
  40fee9:	cmp    r12,rax
  40feec:	ja     410308 <_start@@Base+0xa3c8>
  40fef2:	and    r12,0xffffffffff000000
  40fef9:	movabs rax,0x656e656d79000000
  40ff03:	cmp    r12,rax
  40ff06:	je     410ce0 <_start@@Base+0xada0>
  40ff0c:	movabs rax,0x636f6c6f72000000
  40ff16:	cmp    r12,rax
  40ff19:	je     410918 <_start@@Base+0xa9d8>
  40ff1f:	mov    rsi,r14
  40ff22:	mov    rdx,rbx
  40ff25:	mov    rdi,rbp
  40ff28:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  40ff2d:	mov    r14,rax
  40ff30:	jmp    410558 <_start@@Base+0xa618>
  40ff35:	lea    r12,[r14+0x10]
  40ff39:	mov    r8,rbx
  40ff3c:	sub    r8,r12
  40ff3f:	cmp    r8,0x7
  40ff43:	jbe    412c8d <_start@@Base+0xcd4d>
  40ff49:	movbe  rax,QWORD PTR [r14+0x10]
  40ff4f:	movabs rdx,0xff00000000000000
  40ff59:	and    rax,rdx
  40ff5c:	movabs rdx,0x7300000000000000
  40ff66:	cmp    rax,rdx
  40ff69:	jne    412b0e <_start@@Base+0xcbce>
  40ff6f:	cmp    r8,0x1
  40ff73:	jle    413b20 <_start@@Base+0xdbe0>
  40ff79:	mov    ecx,0x1
  40ff7e:	mov    rdx,rbx
  40ff81:	mov    rsi,r12
  40ff84:	mov    rdi,rbp
  40ff87:	call   409080 <_start@@Base+0x3140>
  40ff8c:	cmp    r12,rax
  40ff8f:	mov    r14,rax
  40ff92:	je     413b20 <_start@@Base+0xdbe0>
  40ff98:	mov    rdi,QWORD PTR [rbp+0x0]
  40ff9c:	mov    ecx,0x1fffffff
  40ffa1:	mov    edx,0x8
  40ffa6:	mov    esi,0x8
  40ffab:	call   4171c0 <flatcc_builder_start_vector@@Base>
  40ffb0:	test   eax,eax
  40ffb2:	jne    410070 <_start@@Base+0xa130>
  40ffb8:	mov    r12,QWORD PTR [rsp+0x8]
  40ffbd:	mov    rsi,r14
  40ffc0:	mov    rdx,rbx
  40ffc3:	mov    rdi,rbp
  40ffc6:	mov    rcx,r12
  40ffc9:	call   4095c0 <_start@@Base+0x3680>
  40ffce:	mov    r8d,DWORD PTR [rsp+0x40]
  40ffd3:	mov    r14,rax
  40ffd6:	test   r8d,r8d
  40ffd9:	jne    41000b <_start@@Base+0xa0cb>
  40ffdb:	jmp    413594 <_start@@Base+0xd654>
  40ffe0:	vmovsd xmm0,QWORD PTR [rsp+0x60]
  40ffe6:	mov    rdi,rbp
  40ffe9:	mov    rcx,r12
  40ffec:	mov    rdx,rbx
  40ffef:	mov    rsi,rax
  40fff2:	vmovsd QWORD PTR [r15],xmm0
  40fff7:	call   40a680 <_start@@Base+0x4740>
  40fffc:	mov    edi,DWORD PTR [rsp+0x40]
  410000:	mov    r14,rax
  410003:	test   edi,edi
  410005:	je     413594 <_start@@Base+0xd654>
  41000b:	mov    rdi,QWORD PTR [rbp+0x0]
  41000f:	mov    esi,0x1
  410014:	mov    QWORD PTR [rsp+0x60],0x0
  41001d:	call   416b20 <flatcc_builder_extend_vector@@Base>
  410022:	test   rax,rax
  410025:	mov    r15,rax
  410028:	je     410070 <_start@@Base+0xa130>
  41002a:	mov    rcx,r13
  41002d:	mov    rdx,rbx
  410030:	mov    rsi,r14
  410033:	mov    rdi,rbp
  410036:	call   41d110 <flatcc_json_parser_double@@Base>
  41003b:	cmp    rax,r14
  41003e:	jne    40ffe0 <_start@@Base+0xa0a0>
  410040:	lea    rcx,[rip+0x294f9]        # 439540 <__data_start@@Base+0x480>
  410047:	mov    r8,r13
  41004a:	mov    rdx,rbx
  41004d:	mov    rsi,r14
  410050:	mov    rdi,rbp
  410053:	call   409380 <_start@@Base+0x3440>
  410058:	cmp    rax,r14
  41005b:	je     410066 <_start@@Base+0xa126>
  41005d:	cmp    rbx,rax
  410060:	jne    40ffe0 <_start@@Base+0xa0a0>
  410066:	mov    r14,rax
  410069:	nop    DWORD PTR [rax+0x0]
  410070:	mov    ecx,0x21
  410075:	mov    rdx,rbx
  410078:	mov    rsi,r14
  41007b:	mov    rdi,rbp
  41007e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  410083:	mov    rcx,QWORD PTR [rsp+0x68]
  410088:	xor    rcx,QWORD PTR fs:0x28
  410091:	jne    413c30 <_start@@Base+0xdcf0>
  410097:	add    rsp,0x78
  41009b:	pop    rbx
  41009c:	pop    rbp
  41009d:	pop    r12
  41009f:	pop    r13
  4100a1:	pop    r14
  4100a3:	pop    r15
  4100a5:	ret    
  4100a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4100b0:	xor    r15d,r15d
  4100b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4100b8:	mov    rsi,rbx
  4100bb:	mov    rdi,r14
  4100be:	call   406050 <_start@@Base+0x110>
  4100c3:	mov    r12,rax
  4100c6:	movabs rax,0x7465737461727260
  4100d0:	cmp    r12,rax
  4100d3:	jbe    40fecc <_start@@Base+0x9f8c>
  4100d9:	movabs rax,0x746573746632ffff
  4100e3:	cmp    r12,rax
  4100e6:	ja     4101b0 <_start@@Base+0xa270>
  4100ec:	movabs rax,0x7465737461727261
  4100f6:	cmp    r12,rax
  4100f9:	je     410470 <_start@@Base+0xa530>
  4100ff:	movabs rax,0x74657374656d7073
  410109:	cmp    r12,rax
  41010c:	ja     410420 <_start@@Base+0xa4e0>
  410112:	movabs rax,0x7465737462617365
  41011c:	cmp    r12,rax
  41011f:	je     410dc8 <_start@@Base+0xae88>
  410125:	movabs rax,0x74657374626f6f6c
  41012f:	cmp    r12,rax
  410132:	je     410a90 <_start@@Base+0xab50>
  410138:	mov    rsi,r14
  41013b:	mov    rdx,rbx
  41013e:	mov    rdi,rbp
  410141:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410146:	mov    r14,rax
  410149:	jmp    410558 <_start@@Base+0xa618>
  41014e:	xchg   ax,ax
  410150:	movabs rax,0x74657373ffffffff
  41015a:	cmp    r12,rax
  41015d:	ja     410220 <_start@@Base+0xa2e0>
  410163:	movabs rax,0x706172656e745f6d
  41016d:	cmp    r12,rax
  410170:	ja     410618 <_start@@Base+0xa6d8>
  410176:	movabs rax,0xffffffff00000000
  410180:	and    r12,rax
  410183:	movabs rax,0x6e616d6500000000
  41018d:	cmp    r12,rax
  410190:	je     410b00 <_start@@Base+0xabc0>
  410196:	mov    rsi,r14
  410199:	mov    rdx,rbx
  41019c:	mov    rdi,rbp
  41019f:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  4101a4:	mov    r14,rax
  4101a7:	jmp    410558 <_start@@Base+0xa618>
  4101ac:	nop    DWORD PTR [rax+0x0]
  4101b0:	movabs rax,0x7465737468617367
  4101ba:	cmp    r12,rax
  4101bd:	ja     410358 <_start@@Base+0xa418>
  4101c3:	xor    r12w,r12w
  4101c7:	movabs rax,0x7465737466330000
  4101d1:	cmp    r12,rax
  4101d4:	jne    410540 <_start@@Base+0xa600>
  4101da:	cmp    r15,0x6
  4101de:	jg     410b40 <_start@@Base+0xac00>
  4101e4:	mov    rsi,r14
  4101e7:	mov    rdx,rbx
  4101ea:	mov    rdi,rbp
  4101ed:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  4101f2:	mov    r14,rax
  4101f5:	jmp    410558 <_start@@Base+0xa618>
  4101fa:	nop    WORD PTR [rax+rax*1+0x0]
  410200:	add    r14,0x1
  410204:	mov    r15,rbx
  410207:	mov    DWORD PTR [rbp+0x14],0x0
  41020e:	sub    r15,r14
  410211:	jmp    40feaa <_start@@Base+0x9f6a>
  410216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410220:	mov    r8,r12
  410223:	movabs rax,0x7465737434000000
  41022d:	and    r8,0xffffffffff000000
  410234:	cmp    r8,rax
  410237:	je     410d00 <_start@@Base+0xadc0>
  41023d:	cmp    r15,0x4
  410241:	jg     4122a0 <_start@@Base+0xc360>
  410247:	movabs rax,0x7465737435000000
  410251:	cmp    r8,rax
  410254:	je     410c58 <_start@@Base+0xad18>
  41025a:	movabs rax,0x746573745f747970
  410264:	cmp    r12,rax
  410267:	jne    410c62 <_start@@Base+0xad22>
  41026d:	lea    r12,[r14+0x8]
  410271:	mov    r8,rbx
  410274:	sub    r8,r12
  410277:	cmp    r8,0x7
  41027b:	jbe    411006 <_start@@Base+0xb0c6>
  410281:	movbe  rax,QWORD PTR [r14+0x8]
  410287:	movabs rdx,0xff00000000000000
  410291:	and    rax,rdx
  410294:	movabs rdx,0x6500000000000000
  41029e:	cmp    rax,rdx
  4102a1:	jne    410ff0 <_start@@Base+0xb0b0>
  4102a7:	cmp    r8,0x1
  4102ab:	jle    411385 <_start@@Base+0xb445>
  4102b1:	mov    rsi,r12
  4102b4:	mov    ecx,0x1
  4102b9:	mov    rdx,rbx
  4102bc:	mov    rdi,rbp
  4102bf:	call   409080 <_start@@Base+0x3140>
  4102c4:	cmp    r12,rax
  4102c7:	mov    rsi,rax
  4102ca:	je     411385 <_start@@Base+0xb445>
  4102d0:	lea    rax,[rip+0x3ae9]        # 413dc0 <_start@@Base+0xde80>
  4102d7:	mov    rdx,rbx
  4102da:	mov    r8d,0x8
  4102e0:	xor    ecx,ecx
  4102e2:	mov    rdi,rbp
  4102e5:	push   rax
  4102e6:	lea    rax,[rip+0x29433]        # 439720 <__data_start@@Base+0x660>
  4102ed:	push   rax
  4102ee:	mov    r9,QWORD PTR [rsp+0x60]
  4102f3:	call   41e830 <flatcc_json_parser_union_type@@Base>
  4102f8:	mov    r14,rax
  4102fb:	pop    rax
  4102fc:	pop    rdx
  4102fd:	jmp    410558 <_start@@Base+0xa618>
  410302:	nop    WORD PTR [rax+rax*1+0x0]
  410308:	movabs rax,0x686fffffffffffff
  410312:	cmp    r12,rax
  410315:	ja     4105c0 <_start@@Base+0xa680>
  41031b:	movabs rax,0xffffffff00000000
  410325:	and    r12,rax
  410328:	movabs rax,0x666c657800000000
  410332:	cmp    r12,rax
  410335:	je     410b20 <_start@@Base+0xabe0>
  41033b:	mov    rsi,r14
  41033e:	mov    rdx,rbx
  410341:	mov    rdi,rbp
  410344:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410349:	mov    r14,rax
  41034c:	jmp    410558 <_start@@Base+0xa618>
  410351:	nop    DWORD PTR [rax+0x0]
  410358:	movabs rax,0x7465737468617368
  410362:	cmp    r12,rax
  410365:	je     410c80 <_start@@Base+0xad40>
  41036b:	movabs rax,0x766563746f725f6e
  410375:	cmp    r12,rax
  410378:	ja     410898 <_start@@Base+0xa958>
  41037e:	movabs rax,0x746573746e657374
  410388:	cmp    r12,rax
  41038b:	jne    410e80 <_start@@Base+0xaf40>
  410391:	lea    r8,[r14+0x8]
  410395:	mov    rax,rbx
  410398:	sub    rax,r8
  41039b:	cmp    rax,0x7
  41039f:	ja     411184 <_start@@Base+0xb244>
  4103a5:	mov    rsi,rbx
  4103a8:	mov    rdi,r8
  4103ab:	call   406050 <_start@@Base+0x110>
  4103b0:	movabs rdx,0x6564666c61746275
  4103ba:	cmp    rax,rdx
  4103bd:	jne    4118dc <_start@@Base+0xb99c>
  4103c3:	lea    r12,[r14+0x10]
  4103c7:	mov    r8,rbx
  4103ca:	sub    r8,r12
  4103cd:	cmp    r8,0x7
  4103d1:	jbe    412906 <_start@@Base+0xc9c6>
  4103d7:	movbe  rax,QWORD PTR [r14+0x10]
  4103dd:	movabs rdx,0xffffffff00000000
  4103e7:	and    rax,rdx
  4103ea:	movabs rdx,0x6666657200000000
  4103f4:	cmp    rax,rdx
  4103f7:	jne    4128f0 <_start@@Base+0xc9b0>
  4103fd:	cmp    r8,0x4
  410401:	jg     4133e6 <_start@@Base+0xd4a6>
  410407:	mov    rdx,rbx
  41040a:	mov    rsi,r12
  41040d:	mov    rdi,rbp
  410410:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410415:	mov    r14,rax
  410418:	jmp    410558 <_start@@Base+0xa618>
  41041d:	nop    DWORD PTR [rax]
  410420:	movabs rax,0x7465737465ffffff
  41042a:	cmp    r12,rax
  41042d:	jbe    410670 <_start@@Base+0xa730>
  410433:	xor    r12w,r12w
  410437:	movabs rax,0x7465737466320000
  410441:	cmp    r12,rax
  410444:	je     41113a <_start@@Base+0xb1fa>
  41044a:	cmp    r15,0x5
  41044e:	jg     412971 <_start@@Base+0xca31>
  410454:	mov    rsi,r14
  410457:	mov    rdx,rbx
  41045a:	mov    rdi,rbp
  41045d:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410462:	mov    r14,rax
  410465:	jmp    410558 <_start@@Base+0xa618>
  41046a:	nop    WORD PTR [rax+rax*1+0x0]
  410470:	lea    r12,[r14+0x8]
  410474:	mov    r8,rbx
  410477:	sub    r8,r12
  41047a:	cmp    r8,0x7
  41047e:	ja     410940 <_start@@Base+0xaa00>
  410484:	mov    rsi,rbx
  410487:	mov    rdi,r12
  41048a:	call   406050 <_start@@Base+0x110>
  41048f:	movabs rdx,0x796f66737472696d
  410499:	cmp    rax,rdx
  41049c:	ja     410959 <_start@@Base+0xaa19>
  4104a2:	movabs rdx,0x796f66626f6f6c73
  4104ac:	cmp    rax,rdx
  4104af:	je     411a2e <_start@@Base+0xbaee>
  4104b5:	movabs rdx,0x796f66736f727465
  4104bf:	cmp    rax,rdx
  4104c2:	jne    411030 <_start@@Base+0xb0f0>
  4104c8:	lea    r12,[r14+0x10]
  4104cc:	mov    r8,rbx
  4104cf:	sub    r8,r12
  4104d2:	cmp    r8,0x7
  4104d6:	jbe    41139b <_start@@Base+0xb45b>
  4104dc:	movbe  rax,QWORD PTR [r14+0x10]
  4104e2:	xor    al,al
  4104e4:	movabs rdx,0x6473747275637400
  4104ee:	cmp    rax,rdx
  4104f1:	jne    4122f8 <_start@@Base+0xc3b8>
  4104f7:	cmp    r8,0x7
  4104fb:	jg     412fa8 <_start@@Base+0xd068>
  410501:	mov    rdx,rbx
  410504:	mov    rsi,r12
  410507:	mov    rdi,rbp
  41050a:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41050f:	mov    r14,rax
  410512:	jmp    410558 <_start@@Base+0xa618>
  410514:	nop    DWORD PTR [rax+0x0]
  410518:	mov    rsi,r14
  41051b:	mov    ecx,0x5
  410520:	mov    rdx,rbx
  410523:	mov    rdi,rbp
  410526:	mov    r15,rbx
  410529:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41052e:	mov    r14,rax
  410531:	sub    r15,rax
  410534:	jmp    40feaa <_start@@Base+0x9f6a>
  410539:	nop    DWORD PTR [rax+0x0]
  410540:	mov    rsi,r14
  410543:	mov    rdx,rbx
  410546:	mov    rdi,rbp
  410549:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41054e:	mov    r14,rax
  410551:	nop    DWORD PTR [rax+0x0]
  410558:	mov    rcx,QWORD PTR [rsp+0x8]
  41055d:	mov    rdx,rbx
  410560:	mov    rsi,r14
  410563:	mov    rdi,rbp
  410566:	call   40a7d0 <_start@@Base+0x4890>
  41056b:	mov    edx,DWORD PTR [rsp+0x40]
  41056f:	mov    r14,rax
  410572:	test   edx,edx
  410574:	jne    40fe80 <_start@@Base+0x9f40>
  41057a:	mov    eax,DWORD PTR [rbp+0x20]
  41057d:	test   eax,eax
  41057f:	jne    410070 <_start@@Base+0xa130>
  410585:	mov    rdi,QWORD PTR [rbp+0x0]
  410589:	mov    esi,0x3
  41058e:	call   417c60 <flatcc_builder_check_required_field@@Base>
  410593:	test   eax,eax
  410595:	jne    412c55 <_start@@Base+0xcd15>
  41059b:	mov    rsi,r14
  41059e:	mov    ecx,0x1d
  4105a3:	mov    rdx,rbx
  4105a6:	mov    rdi,rbp
  4105a9:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4105ae:	mov    r14,rax
  4105b1:	jmp    410070 <_start@@Base+0xa130>
  4105b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4105c0:	movabs rax,0x696e76656e746f71
  4105ca:	cmp    r12,rax
  4105cd:	ja     410ab0 <_start@@Base+0xab70>
  4105d3:	movabs rax,0xffff000000000000
  4105dd:	and    r12,rax
  4105e0:	movabs rax,0x6870000000000000
  4105ea:	cmp    r12,rax
  4105ed:	jne    411016 <_start@@Base+0xb0d6>
  4105f3:	cmp    r15,0x2
  4105f7:	jg     41146c <_start@@Base+0xb52c>
  4105fd:	mov    rsi,r14
  410600:	mov    rdx,rbx
  410603:	mov    rdi,rbp
  410606:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41060b:	mov    r14,rax
  41060e:	jmp    410558 <_start@@Base+0xa618>
  410613:	nop    DWORD PTR [rax+rax*1+0x0]
  410618:	movabs rax,0x706172656e745f6e
  410622:	cmp    r12,rax
  410625:	je     410bcc <_start@@Base+0xac8c>
  41062b:	movabs rax,0xffffff0000000000
  410635:	and    r12,rax
  410638:	movabs rax,0x706f730000000000
  410642:	cmp    r12,rax
  410645:	jne    410e60 <_start@@Base+0xaf20>
  41064b:	cmp    r15,0x3
  41064f:	jg     412324 <_start@@Base+0xc3e4>
  410655:	mov    rsi,r14
  410658:	mov    rdx,rbx
  41065b:	mov    rdi,rbp
  41065e:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410663:	mov    r14,rax
  410666:	jmp    410558 <_start@@Base+0xa618>
  41066b:	nop    DWORD PTR [rax+rax*1+0x0]
  410670:	movabs rax,0x74657374656d7074
  41067a:	cmp    r12,rax
  41067d:	jne    410e40 <_start@@Base+0xaf00>
  410683:	lea    r12,[r14+0x8]
  410687:	mov    r8,rbx
  41068a:	sub    r8,r12
  41068d:	cmp    r8,0x7
  410691:	ja     4111af <_start@@Base+0xb26f>
  410697:	mov    rsi,rbx
  41069a:	mov    rdi,r12
  41069d:	call   406050 <_start@@Base+0x110>
  4106a2:	movabs rdx,0xff00000000000000
  4106ac:	and    rax,rdx
  4106af:	movabs rdx,0x7900000000000000
  4106b9:	cmp    rax,rdx
  4106bc:	jne    4118f2 <_start@@Base+0xb9b2>
  4106c2:	cmp    r8,0x1
  4106c6:	jle    41332c <_start@@Base+0xd3ec>
  4106cc:	mov    ecx,0x1
  4106d1:	mov    rdx,rbx
  4106d4:	mov    rsi,r12
  4106d7:	mov    rdi,rbp
  4106da:	call   409080 <_start@@Base+0x3140>
  4106df:	cmp    r12,rax
  4106e2:	mov    r14,rax
  4106e5:	je     41332c <_start@@Base+0xd3ec>
  4106eb:	mov    rdi,QWORD PTR [rbp+0x0]
  4106ef:	mov    esi,0x3
  4106f4:	mov    DWORD PTR [rsp+0x44],0x0
  4106fc:	call   4173e0 <flatcc_builder_start_table@@Base>
  410701:	test   eax,eax
  410703:	jne    4120a7 <_start@@Base+0xc167>
  410709:	lea    r12,[rsp+0x48]
  41070e:	mov    rsi,r14
  410711:	mov    rdi,rbp
  410714:	mov    rdx,rbx
  410717:	mov    rcx,r12
  41071a:	call   408fe0 <_start@@Base+0x30a0>
  41071f:	mov    edi,DWORD PTR [rsp+0x48]
  410723:	mov    r14,rax
  410726:	test   edi,edi
  410728:	je     412c30 <_start@@Base+0xccf0>
  41072e:	lea    rax,[rsp+0x4c]
  410733:	mov    QWORD PTR [rsp+0x18],rax
  410738:	lea    rax,[rsp+0x3e]
  41073d:	mov    QWORD PTR [rsp+0x28],rax
  410742:	lea    rax,[rsp+0x58]
  410747:	mov    QWORD PTR [rsp+0x10],rax
  41074c:	jmp    4107a0 <_start@@Base+0xa860>
  41074e:	xchg   ax,ax
  410750:	and    rax,0xffffffffff000000
  410756:	movabs rdx,0x636f756e74000000
  410760:	cmp    rax,rdx
  410763:	jne    41076f <_start@@Base+0xa82f>
  410765:	cmp    r8,0x5
  410769:	jg     411908 <_start@@Base+0xb9c8>
  41076f:	mov    rsi,r14
  410772:	mov    rdx,rbx
  410775:	mov    rdi,rbp
  410778:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41077d:	mov    r14,rax
  410780:	mov    rsi,r14
  410783:	mov    rcx,r12
  410786:	mov    rdx,rbx
  410789:	mov    rdi,rbp
  41078c:	call   40a7d0 <_start@@Base+0x4890>
  410791:	mov    r14,rax
  410794:	mov    eax,DWORD PTR [rsp+0x48]
  410798:	test   eax,eax
  41079a:	je     412c30 <_start@@Base+0xccf0>
  4107a0:	cmp    rbx,r14
  4107a3:	je     411724 <_start@@Base+0xb7e4>
  4107a9:	movzx  eax,BYTE PTR [r14]
  4107ad:	cmp    al,0x22
  4107af:	je     411750 <_start@@Base+0xb810>
  4107b5:	cmp    al,0x2e
  4107b7:	je     411d70 <_start@@Base+0xbe30>
  4107bd:	mov    DWORD PTR [rbp+0x14],0x1
  4107c4:	mov    r8,rbx
  4107c7:	sub    r8,r14
  4107ca:	cmp    r8,0x7
  4107ce:	jbe    41172a <_start@@Base+0xb7ea>
  4107d4:	movbe  rax,QWORD PTR [r14]
  4107d9:	movabs rdx,0x6963ffffffffffff
  4107e3:	cmp    rax,rdx
  4107e6:	jbe    410750 <_start@@Base+0xa810>
  4107ec:	movabs rdx,0xffffff0000000000
  4107f6:	movabs rcx,0x76616c0000000000
  410800:	and    rdx,rax
  410803:	cmp    rdx,rcx
  410806:	je     411770 <_start@@Base+0xb830>
  41080c:	movabs rdx,0xffff000000000000
  410816:	and    rax,rdx
  410819:	movabs rdx,0x6964000000000000
  410823:	cmp    rax,rdx
  410826:	jne    41076f <_start@@Base+0xa82f>
  41082c:	cmp    r8,0x2
  410830:	jle    41076f <_start@@Base+0xa82f>
  410836:	mov    rsi,r14
  410839:	mov    ecx,0x2
  41083e:	mov    rdx,rbx
  410841:	mov    rdi,rbp
  410844:	call   409080 <_start@@Base+0x3140>
  410849:	cmp    rax,r14
  41084c:	mov    rsi,rax
  41084f:	je     41076f <_start@@Base+0xa82f>
  410855:	mov    rcx,QWORD PTR [rsp+0x18]
  41085a:	mov    rdx,rbx
  41085d:	mov    rdi,rbp
  410860:	call   41e450 <flatcc_json_parser_build_string@@Base>
  410865:	mov    edx,DWORD PTR [rsp+0x4c]
  410869:	mov    r14,rax
  41086c:	test   edx,edx
  41086e:	je     4120a7 <_start@@Base+0xc167>
  410874:	mov    rdi,QWORD PTR [rbp+0x0]
  410878:	xor    esi,esi
  41087a:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  41087f:	test   rax,rax
  410882:	je     4120a7 <_start@@Base+0xc167>
  410888:	mov    edx,DWORD PTR [rsp+0x4c]
  41088c:	mov    DWORD PTR [rax],edx
  41088e:	jmp    410780 <_start@@Base+0xa840>
  410893:	nop    DWORD PTR [rax+rax*1+0x0]
  410898:	movabs rax,0x766563746f725f6f
  4108a2:	cmp    r12,rax
  4108a5:	jne    410e28 <_start@@Base+0xaee8>
  4108ab:	lea    r12,[r14+0x8]
  4108af:	mov    r8,rbx
  4108b2:	sub    r8,r12
  4108b5:	cmp    r8,0x7
  4108b9:	ja     411179 <_start@@Base+0xb239>
  4108bf:	mov    rsi,rbx
  4108c2:	mov    rdi,r12
  4108c5:	call   406050 <_start@@Base+0x110>
  4108ca:	movabs rdx,0x665f646f75626c65
  4108d4:	cmp    rax,rdx
  4108d7:	je     40ff35 <_start@@Base+0x9ff5>
  4108dd:	xor    al,al
  4108df:	movabs rdx,0x665f6c6f6e677300
  4108e9:	cmp    rax,rdx
  4108ec:	jne    412282 <_start@@Base+0xc342>
  4108f2:	cmp    r8,0x7
  4108f6:	jg     412e48 <_start@@Base+0xcf08>
  4108fc:	mov    rdx,rbx
  4108ff:	mov    rsi,r12
  410902:	mov    rdi,rbp
  410905:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41090a:	mov    r14,rax
  41090d:	jmp    410558 <_start@@Base+0xa618>
  410912:	nop    WORD PTR [rax+rax*1+0x0]
  410918:	cmp    r15,0x5
  41091c:	jg     411072 <_start@@Base+0xb132>
  410922:	mov    rsi,r14
  410925:	mov    rdx,rbx
  410928:	mov    rdi,rbp
  41092b:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410930:	mov    r14,rax
  410933:	jmp    410558 <_start@@Base+0xa618>
  410938:	nop    DWORD PTR [rax+rax*1+0x0]
  410940:	movbe  rax,QWORD PTR [r14+0x8]
  410946:	movabs rdx,0x796f66737472696d
  410950:	cmp    rax,rdx
  410953:	jbe    4104a2 <_start@@Base+0xa562>
  410959:	movabs rdx,0x796f66737472696e
  410963:	cmp    rax,rdx
  410966:	je     411c4e <_start@@Base+0xbd0e>
  41096c:	movabs rdx,0x796f667461626c65
  410976:	cmp    rax,rdx
  410979:	jne    41105c <_start@@Base+0xb11c>
  41097f:	lea    r12,[r14+0x10]
  410983:	mov    r8,rbx
  410986:	sub    r8,r12
  410989:	cmp    r8,0x7
  41098d:	ja     411461 <_start@@Base+0xb521>
  410993:	mov    rsi,rbx
  410996:	mov    rdi,r12
  410999:	call   406050 <_start@@Base+0x110>
  41099e:	movabs rdx,0xff00000000000000
  4109a8:	and    rax,rdx
  4109ab:	movabs rdx,0x7300000000000000
  4109b5:	cmp    rax,rdx
  4109b8:	jne    41230e <_start@@Base+0xc3ce>
  4109be:	cmp    r8,0x1
  4109c2:	jle    413758 <_start@@Base+0xd818>
  4109c8:	mov    ecx,0x1
  4109cd:	mov    rdx,rbx
  4109d0:	mov    rsi,r12
  4109d3:	mov    rdi,rbp
  4109d6:	call   409080 <_start@@Base+0x3140>
  4109db:	cmp    r12,rax
  4109de:	mov    r14,rax
  4109e1:	je     413758 <_start@@Base+0xd818>
  4109e7:	mov    rdi,QWORD PTR [rbp+0x0]
  4109eb:	call   417240 <flatcc_builder_start_offset_vector@@Base>
  4109f0:	test   eax,eax
  4109f2:	jne    410070 <_start@@Base+0xa130>
  4109f8:	mov    r15,QWORD PTR [rsp+0x8]
  4109fd:	mov    rdx,rbx
  410a00:	mov    rsi,r14
  410a03:	mov    rdi,rbp
  410a06:	mov    rcx,r15
  410a09:	call   4095c0 <_start@@Base+0x3680>
  410a0e:	mov    edx,DWORD PTR [rsp+0x40]
  410a12:	mov    r14,rax
  410a15:	test   edx,edx
  410a17:	je     413378 <_start@@Base+0xd438>
  410a1d:	lea    r12,[rsp+0x44]
  410a22:	jmp    410a65 <_start@@Base+0xab25>
  410a24:	nop    DWORD PTR [rax+0x0]
  410a28:	mov    rdi,QWORD PTR [rbp+0x0]
  410a2c:	mov    esi,0x1
  410a31:	call   416d00 <flatcc_builder_extend_offset_vector@@Base>
  410a36:	test   rax,rax
  410a39:	je     410070 <_start@@Base+0xa130>
  410a3f:	mov    edx,DWORD PTR [rsp+0x44]
  410a43:	mov    rsi,r14
  410a46:	mov    rcx,r15
  410a49:	mov    rdi,rbp
  410a4c:	mov    DWORD PTR [rax],edx
  410a4e:	mov    rdx,rbx
  410a51:	call   40a680 <_start@@Base+0x4740>
  410a56:	mov    r14,rax
  410a59:	mov    eax,DWORD PTR [rsp+0x40]
  410a5d:	test   eax,eax
  410a5f:	je     413378 <_start@@Base+0xd438>
  410a65:	mov    rsi,r14
  410a68:	mov    rcx,r12
  410a6b:	mov    rdx,rbx
  410a6e:	mov    rdi,rbp
  410a71:	call   40fde0 <_start@@Base+0x9ea0>
  410a76:	mov    r14,rax
  410a79:	mov    eax,DWORD PTR [rsp+0x44]
  410a7d:	test   eax,eax
  410a7f:	jne    410a28 <_start@@Base+0xaae8>
  410a81:	jmp    410070 <_start@@Base+0xa130>
  410a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a90:	cmp    r15,0x8
  410a94:	jg     411de8 <_start@@Base+0xbea8>
  410a9a:	mov    rsi,r14
  410a9d:	mov    rdx,rbx
  410aa0:	mov    rdi,rbp
  410aa3:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410aa8:	mov    r14,rax
  410aab:	jmp    410558 <_start@@Base+0xa618>
  410ab0:	movabs rax,0x696e76656e746f72
  410aba:	cmp    r12,rax
  410abd:	je     4120eb <_start@@Base+0xc1ab>
  410ac3:	movabs rax,0xffffffff00000000
  410acd:	and    r12,rax
  410ad0:	movabs rax,0x6d616e6100000000
  410ada:	cmp    r12,rax
  410add:	je     41118f <_start@@Base+0xb24f>
  410ae3:	mov    rsi,r14
  410ae6:	mov    rdx,rbx
  410ae9:	mov    rdi,rbp
  410aec:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410af1:	mov    r14,rax
  410af4:	jmp    410558 <_start@@Base+0xa618>
  410af9:	nop    DWORD PTR [rax+0x0]
  410b00:	cmp    r15,0x4
  410b04:	jg     41203c <_start@@Base+0xc0fc>
  410b0a:	mov    rsi,r14
  410b0d:	mov    rdx,rbx
  410b10:	mov    rdi,rbp
  410b13:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410b18:	mov    r14,rax
  410b1b:	jmp    410558 <_start@@Base+0xa618>
  410b20:	cmp    r15,0x4
  410b24:	jg     411f11 <_start@@Base+0xbfd1>
  410b2a:	mov    rsi,r14
  410b2d:	mov    rdx,rbx
  410b30:	mov    rdi,rbp
  410b33:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410b38:	mov    r14,rax
  410b3b:	jmp    410558 <_start@@Base+0xa618>
  410b40:	mov    ecx,0x6
  410b45:	mov    rdx,rbx
  410b48:	mov    rsi,r14
  410b4b:	mov    rdi,rbp
  410b4e:	call   409080 <_start@@Base+0x3140>
  410b53:	cmp    rax,r14
  410b56:	mov    r12,rax
  410b59:	je     4101e4 <_start@@Base+0xa2a4>
  410b5f:	mov    rcx,r13
  410b62:	mov    rdx,rbx
  410b65:	mov    rsi,rax
  410b68:	mov    rdi,rbp
  410b6b:	mov    DWORD PTR [rsp+0x60],0x0
  410b73:	call   41d1f0 <flatcc_json_parser_float@@Base>
  410b78:	cmp    rax,r12
  410b7b:	mov    r14,rax
  410b7e:	je     412ac0 <_start@@Base+0xcb80>
  410b84:	vxorps xmm1,xmm1,xmm1
  410b88:	vucomiss xmm1,DWORD PTR [rsp+0x60]
  410b8e:	jp     410b9c <_start@@Base+0xac5c>
  410b90:	jne    410b9c <_start@@Base+0xac5c>
  410b92:	test   BYTE PTR [rbp+0x10],0x2
  410b96:	je     410558 <_start@@Base+0xa618>
  410b9c:	mov    rdi,QWORD PTR [rbp+0x0]
  410ba0:	mov    ecx,0x4
  410ba5:	mov    edx,0x4
  410baa:	mov    esi,0x1b
  410baf:	call   418c80 <flatcc_builder_table_add@@Base>
  410bb4:	test   rax,rax
  410bb7:	je     410070 <_start@@Base+0xa130>
  410bbd:	vmovss xmm0,DWORD PTR [rsp+0x60]
  410bc3:	vmovss DWORD PTR [rax],xmm0
  410bc7:	jmp    410558 <_start@@Base+0xa618>
  410bcc:	lea    r8,[r14+0x8]
  410bd0:	mov    rax,rbx
  410bd3:	sub    rax,r8
  410bd6:	cmp    rax,0x7
  410bda:	ja     4112a8 <_start@@Base+0xb368>
  410be0:	mov    rsi,rbx
  410be3:	mov    rdi,r8
  410be6:	call   406050 <_start@@Base+0x110>
  410beb:	movabs rdx,0x616d657370616365
  410bf5:	cmp    rax,rdx
  410bf8:	jne    411efb <_start@@Base+0xbfbb>
  410bfe:	lea    r12,[r14+0x10]
  410c02:	mov    r8,rbx
  410c05:	sub    r8,r12
  410c08:	cmp    r8,0x7
  410c0c:	jbe    412a2d <_start@@Base+0xcaed>
  410c12:	movbe  rax,QWORD PTR [r14+0x10]
  410c18:	and    rax,0xffffffffff000000
  410c1e:	movabs rdx,0x5f74657374000000
  410c28:	cmp    rax,rdx
  410c2b:	jne    412a3d <_start@@Base+0xcafd>
  410c31:	cmp    r8,0x5
  410c35:	jg     413531 <_start@@Base+0xd5f1>
  410c3b:	mov    rdx,rbx
  410c3e:	mov    rsi,r12
  410c41:	mov    rdi,rbp
  410c44:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410c49:	mov    r14,rax
  410c4c:	jmp    410558 <_start@@Base+0xa618>
  410c51:	nop    DWORD PTR [rax+0x0]
  410c58:	cmp    r15,0x5
  410c5c:	jg     4113ab <_start@@Base+0xb46b>
  410c62:	mov    rsi,r14
  410c65:	mov    rdx,rbx
  410c68:	mov    rdi,rbp
  410c6b:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410c70:	mov    r14,rax
  410c73:	jmp    410558 <_start@@Base+0xa618>
  410c78:	nop    DWORD PTR [rax+rax*1+0x0]
  410c80:	lea    r12,[r14+0x8]
  410c84:	mov    r8,rbx
  410c87:	sub    r8,r12
  410c8a:	cmp    r8,0x7
  410c8e:	jbe    410fe0 <_start@@Base+0xb0a0>
  410c94:	movbe  rax,QWORD PTR [r14+0x8]
  410c9a:	movabs rdx,0x7336345f666e7630
  410ca4:	cmp    rax,rdx
  410ca7:	ja     410e96 <_start@@Base+0xaf56>
  410cad:	movabs rdx,0x7333325f666e7631
  410cb7:	cmp    rax,rdx
  410cba:	je     4112b3 <_start@@Base+0xb373>
  410cc0:	mov    rdx,rbx
  410cc3:	mov    rsi,r12
  410cc6:	mov    rdi,rbp
  410cc9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410cce:	mov    r14,rax
  410cd1:	jmp    410558 <_start@@Base+0xa618>
  410cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ce0:	cmp    r15,0x5
  410ce4:	jg     4119cb <_start@@Base+0xba8b>
  410cea:	mov    rsi,r14
  410ced:	mov    rdx,rbx
  410cf0:	mov    rdi,rbp
  410cf3:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410cf8:	mov    r14,rax
  410cfb:	jmp    410558 <_start@@Base+0xa618>
  410d00:	cmp    r15,0x5
  410d04:	jle    410c62 <_start@@Base+0xad22>
  410d0a:	mov    ecx,0x5
  410d0f:	mov    rdx,rbx
  410d12:	mov    rsi,r14
  410d15:	mov    rdi,rbp
  410d18:	call   409080 <_start@@Base+0x3140>
  410d1d:	cmp    rax,r14
  410d20:	mov    r12,rax
  410d23:	je     410c62 <_start@@Base+0xad22>
  410d29:	mov    rdi,QWORD PTR [rbp+0x0]
  410d2d:	mov    ecx,0x3fffffff
  410d32:	mov    edx,0x2
  410d37:	mov    esi,0x4
  410d3c:	call   4171c0 <flatcc_builder_start_vector@@Base>
  410d41:	test   eax,eax
  410d43:	jne    413aa6 <_start@@Base+0xdb66>
  410d49:	mov    r15,QWORD PTR [rsp+0x8]
  410d4e:	mov    rdx,rbx
  410d51:	mov    rsi,r12
  410d54:	mov    rdi,rbp
  410d57:	mov    rcx,r15
  410d5a:	call   4095c0 <_start@@Base+0x3680>
  410d5f:	mov    r10d,DWORD PTR [rsp+0x40]
  410d64:	mov    r14,rax
  410d67:	test   r10d,r10d
  410d6a:	je     4118a5 <_start@@Base+0xb965>
  410d70:	mov    r12,r15
  410d73:	jmp    410dab <_start@@Base+0xae6b>
  410d75:	nop    DWORD PTR [rax]
  410d78:	mov    rsi,r14
  410d7b:	mov    rcx,rax
  410d7e:	mov    rdx,rbx
  410d81:	mov    rdi,rbp
  410d84:	call   40b240 <_start@@Base+0x5300>
  410d89:	mov    rcx,r12
  410d8c:	mov    rdx,rbx
  410d8f:	mov    rsi,rax
  410d92:	mov    rdi,rbp
  410d95:	call   40a680 <_start@@Base+0x4740>
  410d9a:	mov    r9d,DWORD PTR [rsp+0x40]
  410d9f:	mov    r14,rax
  410da2:	test   r9d,r9d
  410da5:	je     4118a5 <_start@@Base+0xb965>
  410dab:	mov    rdi,QWORD PTR [rbp+0x0]
  410daf:	mov    esi,0x1
  410db4:	call   416b20 <flatcc_builder_extend_vector@@Base>
  410db9:	test   rax,rax
  410dbc:	jne    410d78 <_start@@Base+0xae38>
  410dbe:	jmp    410070 <_start@@Base+0xa130>
  410dc3:	nop    DWORD PTR [rax+rax*1+0x0]
  410dc8:	lea    r12,[r14+0x8]
  410dcc:	mov    r8,rbx
  410dcf:	sub    r8,r12
  410dd2:	cmp    r8,0x7
  410dd6:	jbe    41112a <_start@@Base+0xb1ea>
  410ddc:	movbe  rax,QWORD PTR [r14+0x8]
  410de2:	movabs rdx,0xffff000000000000
  410dec:	and    rax,rdx
  410def:	movabs rdx,0x3634000000000000
  410df9:	cmp    rax,rdx
  410dfc:	jne    411046 <_start@@Base+0xb106>
  410e02:	cmp    r8,0x2
  410e06:	jg     411581 <_start@@Base+0xb641>
  410e0c:	mov    rdx,rbx
  410e0f:	mov    rsi,r12
  410e12:	mov    rdi,rbp
  410e15:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410e1a:	mov    r14,rax
  410e1d:	jmp    410558 <_start@@Base+0xa618>
  410e22:	nop    WORD PTR [rax+rax*1+0x0]
  410e28:	mov    rsi,r14
  410e2b:	mov    rdx,rbx
  410e2e:	mov    rdi,rbp
  410e31:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410e36:	mov    r14,rax
  410e39:	jmp    410558 <_start@@Base+0xa618>
  410e3e:	xchg   ax,ax
  410e40:	mov    rsi,r14
  410e43:	mov    rdx,rbx
  410e46:	mov    rdi,rbp
  410e49:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410e4e:	mov    r14,rax
  410e51:	jmp    410558 <_start@@Base+0xa618>
  410e56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e60:	mov    rsi,r14
  410e63:	mov    rdx,rbx
  410e66:	mov    rdi,rbp
  410e69:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410e6e:	mov    r14,rax
  410e71:	jmp    410558 <_start@@Base+0xa618>
  410e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e80:	mov    rsi,r14
  410e83:	mov    rdx,rbx
  410e86:	mov    rdi,rbp
  410e89:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410e8e:	mov    r14,rax
  410e91:	jmp    410558 <_start@@Base+0xa618>
  410e96:	movabs rdx,0x7533325f666e7630
  410ea0:	cmp    rax,rdx
  410ea3:	jbe    4111ba <_start@@Base+0xb27a>
  410ea9:	movabs rdx,0x7533325f666e7631
  410eb3:	cmp    rax,rdx
  410eb6:	je     412d70 <_start@@Base+0xce30>
  410ebc:	movabs rdx,0x7536345f666e7631
  410ec6:	cmp    rax,rdx
  410ec9:	jne    412b24 <_start@@Base+0xcbe4>
  410ecf:	cmp    r8,0x8
  410ed3:	jg     413667 <_start@@Base+0xd727>
  410ed9:	lea    r14,[r12+0x8]
  410ede:	mov    r8,rbx
  410ee1:	sub    r8,r14
  410ee4:	cmp    r8,0x7
  410ee8:	jbe    413b68 <_start@@Base+0xdc28>
  410eee:	movbe  rax,QWORD PTR [r12+0x8]
  410ef5:	movabs rdx,0xff00000000000000
  410eff:	and    rax,rdx
  410f02:	movabs rdx,0x6100000000000000
  410f0c:	cmp    rax,rdx
  410f0f:	jne    413988 <_start@@Base+0xda48>
  410f15:	cmp    r8,0x1
  410f19:	jle    413c67 <_start@@Base+0xdd27>
  410f1f:	mov    ecx,0x1
  410f24:	mov    rdx,rbx
  410f27:	mov    rsi,r14
  410f2a:	mov    rdi,rbp
  410f2d:	call   409080 <_start@@Base+0x3140>
  410f32:	cmp    r14,rax
  410f35:	mov    r12,rax
  410f38:	je     413c6a <_start@@Base+0xdd2a>
  410f3e:	cmp    rbx,rax
  410f41:	mov    QWORD PTR [rsp+0x58],0x0
  410f4a:	mov    QWORD PTR [rsp+0x60],0x0
  410f53:	mov    DWORD PTR [rsp+0x4c],0x0
  410f5b:	je     413d74 <_start@@Base+0xde34>
  410f61:	lea    rcx,[rsp+0x4c]
  410f66:	mov    r8,r13
  410f69:	mov    rdx,rbx
  410f6c:	mov    rsi,rax
  410f6f:	mov    rdi,rbp
  410f72:	call   41df90 <flatcc_json_parser_integer@@Base>
  410f77:	cmp    r12,rax
  410f7a:	mov    r14,rax
  410f7d:	je     413d77 <_start@@Base+0xde37>
  410f83:	mov    r11d,DWORD PTR [rsp+0x4c]
  410f88:	mov    rax,QWORD PTR [rsp+0x60]
  410f8d:	test   r11d,r11d
  410f90:	jne    413c80 <_start@@Base+0xdd40>
  410f96:	mov    QWORD PTR [rsp+0x58],rax
  410f9b:	test   rax,rax
  410f9e:	jne    410faa <_start@@Base+0xb06a>
  410fa0:	test   BYTE PTR [rbp+0x10],0x2
  410fa4:	je     410558 <_start@@Base+0xa618>
  410faa:	mov    rdi,QWORD PTR [rbp+0x0]
  410fae:	mov    ecx,0x8
  410fb3:	mov    edx,0x8
  410fb8:	mov    esi,0x17
  410fbd:	call   418c80 <flatcc_builder_table_add@@Base>
  410fc2:	test   rax,rax
  410fc5:	je     410070 <_start@@Base+0xa130>
  410fcb:	mov    rdx,QWORD PTR [rsp+0x58]
  410fd0:	mov    QWORD PTR [rax],rdx
  410fd3:	jmp    410558 <_start@@Base+0xa618>
  410fd8:	nop    DWORD PTR [rax+rax*1+0x0]
  410fe0:	mov    rsi,rbx
  410fe3:	mov    rdi,r12
  410fe6:	call   406050 <_start@@Base+0x110>
  410feb:	jmp    410c9a <_start@@Base+0xad5a>
  410ff0:	mov    rdx,rbx
  410ff3:	mov    rsi,r12
  410ff6:	mov    rdi,rbp
  410ff9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  410ffe:	mov    r14,rax
  411001:	jmp    410558 <_start@@Base+0xa618>
  411006:	mov    rsi,rbx
  411009:	mov    rdi,r12
  41100c:	call   406050 <_start@@Base+0x110>
  411011:	jmp    410287 <_start@@Base+0xa347>
  411016:	mov    rsi,r14
  411019:	mov    rdx,rbx
  41101c:	mov    rdi,rbp
  41101f:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  411024:	mov    r14,rax
  411027:	jmp    410558 <_start@@Base+0xa618>
  41102c:	nop    DWORD PTR [rax+0x0]
  411030:	mov    rdx,rbx
  411033:	mov    rsi,r12
  411036:	mov    rdi,rbp
  411039:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41103e:	mov    r14,rax
  411041:	jmp    410558 <_start@@Base+0xa618>
  411046:	mov    rdx,rbx
  411049:	mov    rsi,r12
  41104c:	mov    rdi,rbp
  41104f:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  411054:	mov    r14,rax
  411057:	jmp    410558 <_start@@Base+0xa618>
  41105c:	mov    rdx,rbx
  41105f:	mov    rsi,r12
  411062:	mov    rdi,rbp
  411065:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41106a:	mov    r14,rax
  41106d:	jmp    410558 <_start@@Base+0xa618>
  411072:	mov    ecx,0x5
  411077:	mov    rdx,rbx
  41107a:	mov    rsi,r14
  41107d:	mov    rdi,rbp
  411080:	call   409080 <_start@@Base+0x3140>
  411085:	cmp    rax,r14
  411088:	mov    r12,rax
  41108b:	je     410922 <_start@@Base+0xa9e2>
  411091:	cmp    rbx,rax
  411094:	mov    BYTE PTR [rsp+0x4c],0x0
  411099:	mov    QWORD PTR [rsp+0x60],0x0
  4110a2:	mov    DWORD PTR [rsp+0x58],0x0
  4110aa:	je     412853 <_start@@Base+0xc913>
  4110b0:	lea    rcx,[rsp+0x58]
  4110b5:	mov    r8,r13
  4110b8:	mov    rdx,rbx
  4110bb:	mov    rsi,rax
  4110be:	mov    rdi,rbp
  4110c1:	call   41df90 <flatcc_json_parser_integer@@Base>
  4110c6:	cmp    r12,rax
  4110c9:	mov    r14,rax
  4110cc:	je     412850 <_start@@Base+0xc910>
  4110d2:	mov    eax,DWORD PTR [rsp+0x58]
  4110d6:	mov    rdx,QWORD PTR [rsp+0x60]
  4110db:	test   eax,eax
  4110dd:	jne    41115a <_start@@Base+0xb21a>
  4110df:	cmp    rdx,0x7f
  4110e3:	ja     4128ca <_start@@Base+0xc98a>
  4110e9:	mov    eax,edx
  4110eb:	mov    BYTE PTR [rsp+0x4c],dl
  4110ef:	cmp    al,0x8
  4110f1:	jne    4110fd <_start@@Base+0xb1bd>
  4110f3:	test   BYTE PTR [rbp+0x10],0x2
  4110f7:	je     410558 <_start@@Base+0xa618>
  4110fd:	mov    rdi,QWORD PTR [rbp+0x0]
  411101:	mov    ecx,0x1
  411106:	mov    edx,0x1
  41110b:	mov    esi,0x6
  411110:	call   418c80 <flatcc_builder_table_add@@Base>
  411115:	test   rax,rax
  411118:	je     410070 <_start@@Base+0xa130>
  41111e:	movzx  edx,BYTE PTR [rsp+0x4c]
  411123:	mov    BYTE PTR [rax],dl
  411125:	jmp    410558 <_start@@Base+0xa618>
  41112a:	mov    rsi,rbx
  41112d:	mov    rdi,r12
  411130:	call   406050 <_start@@Base+0x110>
  411135:	jmp    410de2 <_start@@Base+0xaea2>
  41113a:	cmp    r15,0x6
  41113e:	jg     4114f1 <_start@@Base+0xb5b1>
  411144:	mov    rsi,r14
  411147:	mov    rdx,rbx
  41114a:	mov    rdi,rbp
  41114d:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  411152:	mov    r14,rax
  411155:	jmp    410558 <_start@@Base+0xa618>
  41115a:	cmp    rdx,0x80
  411161:	mov    ecx,0x8
  411166:	ja     4128cf <_start@@Base+0xc98f>
  41116c:	mov    eax,edx
  41116e:	neg    eax
  411170:	mov    BYTE PTR [rsp+0x4c],al
  411174:	jmp    4110ef <_start@@Base+0xb1af>
  411179:	movbe  rax,QWORD PTR [r14+0x8]
  41117f:	jmp    4108ca <_start@@Base+0xa98a>
  411184:	movbe  rax,QWORD PTR [r14+0x8]
  41118a:	jmp    4103b0 <_start@@Base+0xa470>
  41118f:	cmp    r15,0x4
  411193:	jg     412b3a <_start@@Base+0xcbfa>
  411199:	mov    rsi,r14
  41119c:	mov    rdx,rbx
  41119f:	mov    rdi,rbp
  4111a2:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  4111a7:	mov    r14,rax
  4111aa:	jmp    410558 <_start@@Base+0xa618>
  4111af:	movbe  rax,QWORD PTR [r14+0x8]
  4111b5:	jmp    4106a2 <_start@@Base+0xa762>
  4111ba:	movabs rdx,0x7336345f666e7631
  4111c4:	cmp    rax,rdx
  4111c7:	jne    412a17 <_start@@Base+0xcad7>
  4111cd:	cmp    r8,0x8
  4111d1:	jg     413486 <_start@@Base+0xd546>
  4111d7:	lea    r14,[r12+0x8]
  4111dc:	mov    r8,rbx
  4111df:	sub    r8,r14
  4111e2:	cmp    r8,0x7
  4111e6:	jbe    413a80 <_start@@Base+0xdb40>
  4111ec:	movbe  rax,QWORD PTR [r12+0x8]
  4111f3:	movabs rdx,0xff00000000000000
  4111fd:	and    rax,rdx
  411200:	movabs rdx,0x6100000000000000
  41120a:	cmp    rax,rdx
  41120d:	jne    413862 <_start@@Base+0xd922>
  411213:	cmp    r8,0x1
  411217:	jle    413bf8 <_start@@Base+0xdcb8>
  41121d:	mov    ecx,0x1
  411222:	mov    rdx,rbx
  411225:	mov    rsi,r14
  411228:	mov    rdi,rbp
  41122b:	call   409080 <_start@@Base+0x3140>
  411230:	cmp    r14,rax
  411233:	mov    r12,rax
  411236:	je     413bfb <_start@@Base+0xdcbb>
  41123c:	mov    rcx,r13
  41123f:	mov    rdx,rbx
  411242:	mov    rsi,rax
  411245:	mov    rdi,rbp
  411248:	mov    QWORD PTR [rsp+0x60],0x0
  411251:	call   408ae0 <_start@@Base+0x2ba0>
  411256:	cmp    rax,r12
  411259:	mov    r14,rax
  41125c:	je     413d37 <_start@@Base+0xddf7>
  411262:	cmp    QWORD PTR [rsp+0x60],0x0
  411268:	jne    411274 <_start@@Base+0xb334>
  41126a:	test   BYTE PTR [rbp+0x10],0x2
  41126e:	je     410558 <_start@@Base+0xa618>
  411274:	mov    rdi,QWORD PTR [rbp+0x0]
  411278:	mov    ecx,0x8
  41127d:	mov    edx,0x8
  411282:	mov    esi,0x16
  411287:	call   418c80 <flatcc_builder_table_add@@Base>
  41128c:	test   rax,rax
  41128f:	je     413cac <_start@@Base+0xdd6c>
  411295:	mov    rdx,QWORD PTR [rsp+0x60]
  41129a:	mov    QWORD PTR [rax],rdx
  41129d:	jmp    410558 <_start@@Base+0xa618>
  4112a2:	nop    WORD PTR [rax+rax*1+0x0]
  4112a8:	movbe  rax,QWORD PTR [r14+0x8]
  4112ae:	jmp    410beb <_start@@Base+0xacab>
  4112b3:	cmp    r8,0x8
  4112b7:	jg     412cee <_start@@Base+0xcdae>
  4112bd:	lea    r14,[r12+0x8]
  4112c2:	mov    r8,rbx
  4112c5:	sub    r8,r14
  4112c8:	cmp    r8,0x7
  4112cc:	jbe    413521 <_start@@Base+0xd5e1>
  4112d2:	movbe  rax,QWORD PTR [r12+0x8]
  4112d9:	movabs rdx,0xff00000000000000
  4112e3:	and    rax,rdx
  4112e6:	movabs rdx,0x6100000000000000
  4112f0:	cmp    rax,rdx
  4112f3:	jne    41350b <_start@@Base+0xd5cb>
  4112f9:	cmp    r8,0x1
  4112fd:	jle    413bb0 <_start@@Base+0xdc70>
  411303:	mov    ecx,0x1
  411308:	mov    rdx,rbx
  41130b:	mov    rsi,r14
  41130e:	mov    rdi,rbp
  411311:	call   409080 <_start@@Base+0x3140>
  411316:	cmp    r14,rax
  411319:	mov    r12,rax
  41131c:	je     413bb0 <_start@@Base+0xdc70>
  411322:	mov    rcx,r13
  411325:	mov    rdx,rbx
  411328:	mov    rsi,rax
  41132b:	mov    rdi,rbp
  41132e:	mov    DWORD PTR [rsp+0x60],0x0
  411336:	call   408900 <_start@@Base+0x29c0>
  41133b:	cmp    rax,r12
  41133e:	mov    r14,rax
  411341:	je     413cd8 <_start@@Base+0xdd98>
  411347:	mov    eax,DWORD PTR [rsp+0x60]
  41134b:	test   eax,eax
  41134d:	jne    411359 <_start@@Base+0xb419>
  41134f:	test   BYTE PTR [rbp+0x10],0x2
  411353:	je     410558 <_start@@Base+0xa618>
  411359:	mov    rdi,QWORD PTR [rbp+0x0]
  41135d:	mov    ecx,0x4
  411362:	mov    edx,0x4
  411367:	mov    esi,0x14
  41136c:	call   418c80 <flatcc_builder_table_add@@Base>
  411371:	test   rax,rax
  411374:	je     413cc2 <_start@@Base+0xdd82>
  41137a:	mov    edx,DWORD PTR [rsp+0x60]
  41137e:	mov    DWORD PTR [rax],edx
  411380:	jmp    410558 <_start@@Base+0xa618>
  411385:	mov    rdx,rbx
  411388:	mov    rsi,r12
  41138b:	mov    rdi,rbp
  41138e:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  411393:	mov    r14,rax
  411396:	jmp    410558 <_start@@Base+0xa618>
  41139b:	mov    rsi,rbx
  41139e:	mov    rdi,r12
  4113a1:	call   406050 <_start@@Base+0x110>
  4113a6:	jmp    4104e2 <_start@@Base+0xa5a2>
  4113ab:	mov    ecx,0x5
  4113b0:	mov    rdx,rbx
  4113b3:	mov    rsi,r14
  4113b6:	mov    rdi,rbp
  4113b9:	call   409080 <_start@@Base+0x3140>
  4113be:	cmp    rax,r14
  4113c1:	mov    r12,rax
  4113c4:	je     410c62 <_start@@Base+0xad22>
  4113ca:	mov    rdi,QWORD PTR [rbp+0x0]
  4113ce:	mov    ecx,0x3fffffff
  4113d3:	mov    edx,0x2
  4113d8:	mov    esi,0x4
  4113dd:	call   4171c0 <flatcc_builder_start_vector@@Base>
  4113e2:	test   eax,eax
  4113e4:	jne    413b02 <_start@@Base+0xdbc2>
  4113ea:	mov    r15,QWORD PTR [rsp+0x8]
  4113ef:	mov    rsi,r12
  4113f2:	mov    rdx,rbx
  4113f5:	mov    rdi,rbp
  4113f8:	mov    rcx,r15
  4113fb:	call   4095c0 <_start@@Base+0x3680>
  411400:	mov    esi,DWORD PTR [rsp+0x40]
  411404:	mov    r14,rax
  411407:	test   esi,esi
  411409:	je     41224b <_start@@Base+0xc30b>
  41140f:	mov    r12,r15
  411412:	jmp    411449 <_start@@Base+0xb509>
  411414:	nop    DWORD PTR [rax+0x0]
  411418:	mov    rsi,r14
  41141b:	mov    rcx,rax
  41141e:	mov    rdx,rbx
  411421:	mov    rdi,rbp
  411424:	call   40b240 <_start@@Base+0x5300>
  411429:	mov    rcx,r12
  41142c:	mov    rdx,rbx
  41142f:	mov    rsi,rax
  411432:	mov    rdi,rbp
  411435:	call   40a680 <_start@@Base+0x4740>
  41143a:	mov    ecx,DWORD PTR [rsp+0x40]
  41143e:	mov    r14,rax
  411441:	test   ecx,ecx
  411443:	je     41224b <_start@@Base+0xc30b>
  411449:	mov    rdi,QWORD PTR [rbp+0x0]
  41144d:	mov    esi,0x1
  411452:	call   416b20 <flatcc_builder_extend_vector@@Base>
  411457:	test   rax,rax
  41145a:	jne    411418 <_start@@Base+0xb4d8>
  41145c:	jmp    410070 <_start@@Base+0xa130>
  411461:	movbe  rax,QWORD PTR [r14+0x10]
  411467:	jmp    41099e <_start@@Base+0xaa5e>
  41146c:	mov    ecx,0x2
  411471:	mov    rdx,rbx
  411474:	mov    rsi,r14
  411477:	mov    rdi,rbp
  41147a:	call   409080 <_start@@Base+0x3140>
  41147f:	cmp    rax,r14
  411482:	mov    r12,rax
  411485:	je     4105fd <_start@@Base+0xa6bd>
  41148b:	xor    r14d,r14d
  41148e:	mov    rcx,r13
  411491:	mov    rdx,rbx
  411494:	mov    rsi,rax
  411497:	mov    rdi,rbp
  41149a:	mov    WORD PTR [rsp+0x60],r14w
  4114a0:	call   4089f0 <_start@@Base+0x2ab0>
  4114a5:	cmp    rax,r12
  4114a8:	mov    r14,rax
  4114ab:	je     4135fd <_start@@Base+0xd6bd>
  4114b1:	cmp    WORD PTR [rsp+0x60],0x64
  4114b7:	jne    4114c3 <_start@@Base+0xb583>
  4114b9:	test   BYTE PTR [rbp+0x10],0x2
  4114bd:	je     410558 <_start@@Base+0xa618>
  4114c3:	mov    rdi,QWORD PTR [rbp+0x0]
  4114c7:	mov    ecx,0x2
  4114cc:	mov    edx,0x2
  4114d1:	mov    esi,0x2
  4114d6:	call   418c80 <flatcc_builder_table_add@@Base>
  4114db:	test   rax,rax
  4114de:	je     410070 <_start@@Base+0xa130>
  4114e4:	movzx  edx,WORD PTR [rsp+0x60]
  4114e9:	mov    WORD PTR [rax],dx
  4114ec:	jmp    410558 <_start@@Base+0xa618>
  4114f1:	mov    ecx,0x6
  4114f6:	mov    rdx,rbx
  4114f9:	mov    rsi,r14
  4114fc:	mov    rdi,rbp
  4114ff:	call   409080 <_start@@Base+0x3140>
  411504:	cmp    rax,r14
  411507:	mov    r12,rax
  41150a:	je     411144 <_start@@Base+0xb204>
  411510:	mov    rcx,r13
  411513:	mov    rdx,rbx
  411516:	mov    rsi,rax
  411519:	mov    rdi,rbp
  41151c:	mov    DWORD PTR [rsp+0x60],0x0
  411524:	call   41d1f0 <flatcc_json_parser_float@@Base>
  411529:	cmp    rax,r12
  41152c:	mov    r14,rax
  41152f:	je     41376e <_start@@Base+0xd82e>
  411535:	vmovss xmm0,DWORD PTR [rsp+0x60]
  41153b:	vucomiss xmm0,DWORD PTR [rip+0x1da99]        # 42efdc <_IO_stdin_used@@Base+0x3fdc>
  411543:	jp     411551 <_start@@Base+0xb611>
  411545:	jne    411551 <_start@@Base+0xb611>
  411547:	test   BYTE PTR [rbp+0x10],0x2
  41154b:	je     410558 <_start@@Base+0xa618>
  411551:	mov    rdi,QWORD PTR [rbp+0x0]
  411555:	mov    ecx,0x4
  41155a:	mov    edx,0x4
  41155f:	mov    esi,0x1a
  411564:	call   418c80 <flatcc_builder_table_add@@Base>
  411569:	test   rax,rax
  41156c:	je     410070 <_start@@Base+0xa130>
  411572:	vmovss xmm0,DWORD PTR [rsp+0x60]
  411578:	vmovss DWORD PTR [rax],xmm0
  41157c:	jmp    410558 <_start@@Base+0xa618>
  411581:	mov    ecx,0x2
  411586:	mov    rdx,rbx
  411589:	mov    rsi,r12
  41158c:	mov    rdi,rbp
  41158f:	call   409080 <_start@@Base+0x3140>
  411594:	cmp    r12,rax
  411597:	mov    r14,rax
  41159a:	je     410e0c <_start@@Base+0xaecc>
  4115a0:	mov    rdi,QWORD PTR [rbp+0x0]
  4115a4:	mov    esi,0x3
  4115a9:	mov    DWORD PTR [rsp+0x44],0x0
  4115b1:	call   4173e0 <flatcc_builder_start_table@@Base>
  4115b6:	test   eax,eax
  4115b8:	jne    41185f <_start@@Base+0xb91f>
  4115be:	lea    r12,[rsp+0x58]
  4115c3:	mov    rsi,r14
  4115c6:	mov    rdx,rbx
  4115c9:	mov    rdi,rbp
  4115cc:	mov    rcx,r12
  4115cf:	call   408fe0 <_start@@Base+0x30a0>
  4115d4:	mov    r14,rax
  4115d7:	mov    eax,DWORD PTR [rsp+0x58]
  4115db:	test   eax,eax
  4115dd:	je     412cc7 <_start@@Base+0xcd87>
  4115e3:	movabs r15,0x6e6573746563ffff
  4115ed:	jmp    411649 <_start@@Base+0xb709>
  4115ef:	nop
  4115f0:	movabs rdx,0xffffffff00000000
  4115fa:	and    rax,rdx
  4115fd:	movabs rdx,0x6461746100000000
  411607:	cmp    rax,rdx
  41160a:	jne    411616 <_start@@Base+0xb6d6>
  41160c:	cmp    r8,0x4
  411610:	jg     411d8b <_start@@Base+0xbe4b>
  411616:	mov    rsi,r14
  411619:	mov    rdx,rbx
  41161c:	mov    rdi,rbp
  41161f:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  411624:	mov    r14,rax
  411627:	mov    rsi,r14
  41162a:	mov    rcx,r12
  41162d:	mov    rdx,rbx
  411630:	mov    rdi,rbp
  411633:	call   40a7d0 <_start@@Base+0x4890>
  411638:	mov    r11d,DWORD PTR [rsp+0x58]
  41163d:	mov    r14,rax
  411640:	test   r11d,r11d
  411643:	je     412cc7 <_start@@Base+0xcd87>
  411649:	cmp    rbx,r14
  41164c:	je     41173a <_start@@Base+0xb7fa>
  411652:	movzx  eax,BYTE PTR [r14]
  411656:	cmp    al,0x22
  411658:	je     411760 <_start@@Base+0xb820>
  41165e:	cmp    al,0x2e
  411660:	je     412230 <_start@@Base+0xc2f0>
  411666:	mov    DWORD PTR [rbp+0x14],0x1
  41166d:	mov    r8,rbx
  411670:	sub    r8,r14
  411673:	cmp    r8,0x7
  411677:	jbe    411740 <_start@@Base+0xb800>
  41167d:	movbe  rax,QWORD PTR [r14]
  411682:	cmp    rax,r15
  411685:	jbe    4115f0 <_start@@Base+0xb6b0>
  41168b:	mov    rdx,rax
  41168e:	movabs rcx,0x75726c6461746100
  411698:	xor    dl,dl
  41169a:	cmp    rdx,rcx
  41169d:	je     411800 <_start@@Base+0xb8c0>
  4116a3:	xor    ax,ax
  4116a6:	movabs rcx,0x6e65737465640000
  4116b0:	cmp    rax,rcx
  4116b3:	jne    411616 <_start@@Base+0xb6d6>
  4116b9:	cmp    r8,0x6
  4116bd:	jle    411616 <_start@@Base+0xb6d6>
  4116c3:	mov    rsi,r14
  4116c6:	mov    ecx,0x6
  4116cb:	mov    rdx,rbx
  4116ce:	mov    rdi,rbp
  4116d1:	call   409080 <_start@@Base+0x3140>
  4116d6:	cmp    rax,r14
  4116d9:	mov    rsi,rax
  4116dc:	je     411616 <_start@@Base+0xb6d6>
  4116e2:	xor    r8d,r8d
  4116e5:	mov    rcx,r13
  4116e8:	mov    rdx,rbx
  4116eb:	mov    rdi,rbp
  4116ee:	call   41e050 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  4116f3:	mov    r14,rax
  4116f6:	mov    eax,DWORD PTR [rsp+0x60]
  4116fa:	test   eax,eax
  4116fc:	je     41185f <_start@@Base+0xb91f>
  411702:	mov    rdi,QWORD PTR [rbp+0x0]
  411706:	mov    esi,0x2
  41170b:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  411710:	test   rax,rax
  411713:	je     41185f <_start@@Base+0xb91f>
  411719:	mov    edx,DWORD PTR [rsp+0x60]
  41171d:	mov    DWORD PTR [rax],edx
  41171f:	jmp    411627 <_start@@Base+0xb6e7>
  411724:	xor    r8d,r8d
  411727:	mov    r14,rbx
  41172a:	mov    rsi,rbx
  41172d:	mov    rdi,r14
  411730:	call   406050 <_start@@Base+0x110>
  411735:	jmp    4107d9 <_start@@Base+0xa899>
  41173a:	xor    r8d,r8d
  41173d:	mov    r14,rbx
  411740:	mov    rsi,rbx
  411743:	mov    rdi,r14
  411746:	call   406050 <_start@@Base+0x110>
  41174b:	jmp    411682 <_start@@Base+0xb742>
  411750:	add    r14,0x1
  411754:	mov    DWORD PTR [rbp+0x14],0x0
  41175b:	jmp    4107c4 <_start@@Base+0xa884>
  411760:	add    r14,0x1
  411764:	mov    DWORD PTR [rbp+0x14],0x0
  41176b:	jmp    41166d <_start@@Base+0xb72d>
  411770:	cmp    r8,0x3
  411774:	jle    41076f <_start@@Base+0xa82f>
  41177a:	mov    ecx,0x3
  41177f:	mov    rdx,rbx
  411782:	mov    rsi,r14
  411785:	mov    rdi,rbp
  411788:	call   409080 <_start@@Base+0x3140>
  41178d:	cmp    rax,r14
  411790:	mov    r15,rax
  411793:	je     41076f <_start@@Base+0xa82f>
  411799:	mov    rcx,r13
  41179c:	mov    rdx,rbx
  41179f:	mov    rsi,rax
  4117a2:	mov    rdi,rbp
  4117a5:	mov    QWORD PTR [rsp+0x60],0x0
  4117ae:	call   408ae0 <_start@@Base+0x2ba0>
  4117b3:	cmp    r15,rax
  4117b6:	mov    r14,rax
  4117b9:	je     4135cb <_start@@Base+0xd68b>
  4117bf:	cmp    QWORD PTR [rsp+0x60],0x0
  4117c5:	jne    4117d1 <_start@@Base+0xb891>
  4117c7:	test   BYTE PTR [rbp+0x10],0x2
  4117cb:	je     410780 <_start@@Base+0xa840>
  4117d1:	mov    rdi,QWORD PTR [rbp+0x0]
  4117d5:	mov    ecx,0x8
  4117da:	mov    edx,0x8
  4117df:	mov    esi,0x1
  4117e4:	call   418c80 <flatcc_builder_table_add@@Base>
  4117e9:	test   rax,rax
  4117ec:	je     4120a1 <_start@@Base+0xc161>
  4117f2:	mov    rdx,QWORD PTR [rsp+0x60]
  4117f7:	mov    QWORD PTR [rax],rdx
  4117fa:	jmp    410780 <_start@@Base+0xa840>
  4117ff:	nop
  411800:	cmp    r8,0x7
  411804:	jle    411616 <_start@@Base+0xb6d6>
  41180a:	mov    rsi,r14
  41180d:	mov    ecx,0x7
  411812:	mov    rdx,rbx
  411815:	mov    rdi,rbp
  411818:	call   409080 <_start@@Base+0x3140>
  41181d:	cmp    rax,r14
  411820:	mov    rsi,rax
  411823:	je     411616 <_start@@Base+0xb6d6>
  411829:	mov    r8d,0x1
  41182f:	mov    rcx,r13
  411832:	mov    rdx,rbx
  411835:	mov    rdi,rbp
  411838:	call   41e050 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  41183d:	mov    r14,rax
  411840:	mov    eax,DWORD PTR [rsp+0x60]
  411844:	test   eax,eax
  411846:	je     41185f <_start@@Base+0xb91f>
  411848:	mov    rdi,QWORD PTR [rbp+0x0]
  41184c:	mov    esi,0x1
  411851:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  411856:	test   rax,rax
  411859:	jne    411719 <_start@@Base+0xb7d9>
  41185f:	mov    rsi,r14
  411862:	mov    ecx,0x21
  411867:	mov    rdx,rbx
  41186a:	mov    rdi,rbp
  41186d:	call   41c420 <flatcc_json_parser_set_error@@Base>
  411872:	mov    r9d,DWORD PTR [rsp+0x44]
  411877:	mov    r14,rax
  41187a:	test   r9d,r9d
  41187d:	je     410070 <_start@@Base+0xa130>
  411883:	mov    rdi,QWORD PTR [rbp+0x0]
  411887:	mov    esi,0x23
  41188c:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  411891:	test   rax,rax
  411894:	je     410070 <_start@@Base+0xa130>
  41189a:	mov    edx,DWORD PTR [rsp+0x44]
  41189e:	mov    DWORD PTR [rax],edx
  4118a0:	jmp    410558 <_start@@Base+0xa618>
  4118a5:	mov    rdi,QWORD PTR [rbp+0x0]
  4118a9:	call   4180c0 <flatcc_builder_end_vector@@Base>
  4118ae:	test   eax,eax
  4118b0:	mov    DWORD PTR [rsp+0x44],eax
  4118b4:	je     410070 <_start@@Base+0xa130>
  4118ba:	mov    rdi,QWORD PTR [rbp+0x0]
  4118be:	mov    esi,0x9
  4118c3:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  4118c8:	test   rax,rax
  4118cb:	je     410070 <_start@@Base+0xa130>
  4118d1:	mov    edx,DWORD PTR [rsp+0x44]
  4118d5:	mov    DWORD PTR [rax],edx
  4118d7:	jmp    410558 <_start@@Base+0xa618>
  4118dc:	mov    rdx,rbx
  4118df:	mov    rsi,r8
  4118e2:	mov    rdi,rbp
  4118e5:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  4118ea:	mov    r14,rax
  4118ed:	jmp    410558 <_start@@Base+0xa618>
  4118f2:	mov    rdx,rbx
  4118f5:	mov    rsi,r12
  4118f8:	mov    rdi,rbp
  4118fb:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  411900:	mov    r14,rax
  411903:	jmp    410558 <_start@@Base+0xa618>
  411908:	mov    ecx,0x5
  41190d:	mov    rdx,rbx
  411910:	mov    rsi,r14
  411913:	mov    rdi,rbp
  411916:	call   409080 <_start@@Base+0x3140>
  41191b:	cmp    rax,r14
  41191e:	mov    r15,rax
  411921:	je     41076f <_start@@Base+0xa82f>
  411927:	xor    esi,esi
  411929:	cmp    rbx,rax
  41192c:	mov    QWORD PTR [rsp+0x60],0x0
  411935:	mov    WORD PTR [rsp+0x3e],si
  41193a:	mov    DWORD PTR [rsp+0x58],0x0
  411942:	je     412928 <_start@@Base+0xc9e8>
  411948:	mov    rcx,QWORD PTR [rsp+0x10]
  41194d:	mov    r8,r13
  411950:	mov    rdx,rbx
  411953:	mov    rsi,rax
  411956:	mov    rdi,rbp
  411959:	call   41df90 <flatcc_json_parser_integer@@Base>
  41195e:	cmp    r15,rax
  411961:	mov    r14,rax
  411964:	je     412925 <_start@@Base+0xc9e5>
  41196a:	mov    ecx,DWORD PTR [rsp+0x58]
  41196e:	test   ecx,ecx
  411970:	jne    412a63 <_start@@Base+0xcb23>
  411976:	mov    rax,QWORD PTR [rsp+0x60]
  41197b:	cmp    rax,0xffff
  411981:	ja     412c9d <_start@@Base+0xcd5d>
  411987:	mov    edx,eax
  411989:	mov    WORD PTR [rsp+0x3e],ax
  41198e:	test   dx,dx
  411991:	jne    41199d <_start@@Base+0xba5d>
  411993:	test   BYTE PTR [rbp+0x10],0x2
  411997:	je     410780 <_start@@Base+0xa840>
  41199d:	mov    rdi,QWORD PTR [rbp+0x0]
  4119a1:	mov    ecx,0x2
  4119a6:	mov    edx,0x2
  4119ab:	mov    esi,0x2
  4119b0:	call   418c80 <flatcc_builder_table_add@@Base>
  4119b5:	test   rax,rax
  4119b8:	je     4120a7 <_start@@Base+0xc167>
  4119be:	movzx  edx,WORD PTR [rsp+0x3e]
  4119c3:	mov    WORD PTR [rax],dx
  4119c6:	jmp    410780 <_start@@Base+0xa840>
  4119cb:	mov    rsi,r14
  4119ce:	mov    ecx,0x5
  4119d3:	mov    rdx,rbx
  4119d6:	mov    rdi,rbp
  4119d9:	call   409080 <_start@@Base+0x3140>
  4119de:	cmp    rax,r14
  4119e1:	mov    rsi,rax
  4119e4:	je     410cea <_start@@Base+0xadaa>
  4119ea:	lea    r12,[rsp+0x44]
  4119ef:	mov    rdx,rbx
  4119f2:	mov    rdi,rbp
  4119f5:	mov    rcx,r12
  4119f8:	call   40fde0 <_start@@Base+0x9ea0>
  4119fd:	mov    r14,rax
  411a00:	mov    eax,DWORD PTR [rsp+0x44]
  411a04:	test   eax,eax
  411a06:	je     410070 <_start@@Base+0xa130>
  411a0c:	mov    rdi,QWORD PTR [rbp+0x0]
  411a10:	mov    esi,0xc
  411a15:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  411a1a:	test   rax,rax
  411a1d:	je     410070 <_start@@Base+0xa130>
  411a23:	mov    edx,DWORD PTR [rsp+0x44]
  411a27:	mov    DWORD PTR [rax],edx
  411a29:	jmp    410558 <_start@@Base+0xa618>
  411a2e:	cmp    r8,0x8
  411a32:	jle    411030 <_start@@Base+0xb0f0>
  411a38:	mov    ecx,0x8
  411a3d:	mov    rdx,rbx
  411a40:	mov    rsi,r12
  411a43:	mov    rdi,rbp
  411a46:	call   409080 <_start@@Base+0x3140>
  411a4b:	cmp    r12,rax
  411a4e:	mov    r14,rax
  411a51:	je     411030 <_start@@Base+0xb0f0>
  411a57:	mov    rdi,QWORD PTR [rbp+0x0]
  411a5b:	mov    ecx,0xffffffff
  411a60:	mov    edx,0x1
  411a65:	mov    esi,0x1
  411a6a:	call   4171c0 <flatcc_builder_start_vector@@Base>
  411a6f:	test   eax,eax
  411a71:	jne    410070 <_start@@Base+0xa130>
  411a77:	mov    r15,QWORD PTR [rsp+0x8]
  411a7c:	mov    rsi,r14
  411a7f:	mov    rdx,rbx
  411a82:	mov    rdi,rbp
  411a85:	mov    rcx,r15
  411a88:	call   4095c0 <_start@@Base+0x3680>
  411a8d:	mov    r14,rax
  411a90:	mov    eax,DWORD PTR [rsp+0x40]
  411a94:	test   eax,eax
  411a96:	je     412bc5 <_start@@Base+0xcc85>
  411a9c:	lea    rax,[rsp+0x58]
  411aa1:	mov    QWORD PTR [rsp+0x10],r13
  411aa6:	mov    QWORD PTR [rsp+0x18],rax
  411aab:	lea    rax,[rsp+0x4c]
  411ab0:	mov    QWORD PTR [rsp+0x28],rax
  411ab5:	jmp    411b59 <_start@@Base+0xbc19>
  411aba:	nop    WORD PTR [rax+rax*1+0x0]
  411ac0:	cmp    rbx,r14
  411ac3:	mov    QWORD PTR [rsp+0x60],0x0
  411acc:	mov    DWORD PTR [rsp+0x58],0x0
  411ad4:	je     411c3a <_start@@Base+0xbcfa>
  411ada:	mov    r8,QWORD PTR [rsp+0x10]
  411adf:	mov    rcx,QWORD PTR [rsp+0x18]
  411ae4:	mov    rsi,r14
  411ae7:	mov    rdx,rbx
  411aea:	mov    rdi,rbp
  411aed:	call   41df90 <flatcc_json_parser_integer@@Base>
  411af2:	cmp    rax,r14
  411af5:	mov    rsi,rax
  411af8:	je     411c44 <_start@@Base+0xbd04>
  411afe:	mov    eax,DWORD PTR [rsp+0x58]
  411b02:	mov    ecx,0x8
  411b07:	test   eax,eax
  411b09:	jne    411c25 <_start@@Base+0xbce5>
  411b0f:	mov    rdx,QWORD PTR [rsp+0x60]
  411b14:	test   dl,dl
  411b16:	setne  al
  411b19:	cmp    rdx,0xff
  411b20:	ja     411c20 <_start@@Base+0xbce0>
  411b26:	mov    BYTE PTR [rsp+0x4c],al
  411b2a:	cmp    rsi,r14
  411b2d:	je     411be6 <_start@@Base+0xbca6>
  411b33:	movzx  eax,BYTE PTR [rsp+0x4c]
  411b38:	mov    rcx,r15
  411b3b:	mov    rdx,rbx
  411b3e:	mov    rdi,rbp
  411b41:	mov    BYTE PTR [r12],al
  411b45:	call   40a680 <_start@@Base+0x4740>
  411b4a:	mov    r14,rax
  411b4d:	mov    eax,DWORD PTR [rsp+0x40]
  411b51:	test   eax,eax
  411b53:	je     412bc0 <_start@@Base+0xcc80>
  411b59:	mov    rdi,QWORD PTR [rbp+0x0]
  411b5d:	mov    esi,0x1
  411b62:	mov    BYTE PTR [rsp+0x4c],0x0
  411b67:	call   416b20 <flatcc_builder_extend_vector@@Base>
  411b6c:	test   rax,rax
  411b6f:	mov    r12,rax
  411b72:	je     410070 <_start@@Base+0xa130>
  411b78:	mov    r13,rbx
  411b7b:	sub    r13,r14
  411b7e:	cmp    r13,0x3
  411b82:	jle    411ac0 <_start@@Base+0xbb80>
  411b88:	lea    rsi,[rip+0x199f8]        # 42b587 <_IO_stdin_used@@Base+0x587>
  411b8f:	mov    edx,0x4
  411b94:	mov    rdi,r14
  411b97:	call   4050b0 <memcmp@plt>
  411b9c:	test   eax,eax
  411b9e:	je     411bd8 <_start@@Base+0xbc98>
  411ba0:	cmp    r13,0x4
  411ba4:	je     411ac0 <_start@@Base+0xbb80>
  411baa:	lea    rsi,[rip+0x199db]        # 42b58c <_IO_stdin_used@@Base+0x58c>
  411bb1:	mov    edx,0x5
  411bb6:	mov    rdi,r14
  411bb9:	call   4050b0 <memcmp@plt>
  411bbe:	test   eax,eax
  411bc0:	jne    411ac0 <_start@@Base+0xbb80>
  411bc6:	mov    BYTE PTR [rsp+0x4c],0x0
  411bcb:	lea    rsi,[r14+0x5]
  411bcf:	jmp    411b2a <_start@@Base+0xbbea>
  411bd4:	nop    DWORD PTR [rax+0x0]
  411bd8:	mov    BYTE PTR [rsp+0x4c],0x1
  411bdd:	lea    rsi,[r14+0x4]
  411be1:	jmp    411b2a <_start@@Base+0xbbea>
  411be6:	mov    r8,QWORD PTR [rsp+0x28]
  411beb:	lea    rcx,[rip+0x27b0e]        # 439700 <__data_start@@Base+0x640>
  411bf2:	mov    rdx,rbx
  411bf5:	mov    rdi,rbp
  411bf8:	call   409660 <_start@@Base+0x3720>
  411bfd:	cmp    rax,r14
  411c00:	mov    rsi,rax
  411c03:	je     411c0e <_start@@Base+0xbcce>
  411c05:	cmp    rbx,rax
  411c08:	jne    411b33 <_start@@Base+0xbbf3>
  411c0e:	mov    r14,rsi
  411c11:	jmp    410070 <_start@@Base+0xa130>
  411c16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411c20:	mov    ecx,0x7
  411c25:	mov    rdx,rbx
  411c28:	mov    rdi,rbp
  411c2b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  411c30:	mov    rsi,rax
  411c33:	xor    eax,eax
  411c35:	jmp    411b26 <_start@@Base+0xbbe6>
  411c3a:	mov    rsi,rbx
  411c3d:	xor    eax,eax
  411c3f:	jmp    411b26 <_start@@Base+0xbbe6>
  411c44:	mov    rsi,r14
  411c47:	xor    eax,eax
  411c49:	jmp    411b26 <_start@@Base+0xbbe6>
  411c4e:	lea    r12,[r14+0x10]
  411c52:	mov    r8,rbx
  411c55:	sub    r8,r12
  411c58:	cmp    r8,0x7
  411c5c:	jbe    412961 <_start@@Base+0xca21>
  411c62:	movbe  rax,QWORD PTR [r14+0x10]
  411c68:	movabs rdx,0xffff000000000000
  411c72:	movabs rcx,0x6732000000000000
  411c7c:	and    rdx,rax
  411c7f:	cmp    rdx,rcx
  411c82:	je     412ca7 <_start@@Base+0xcd67>
  411c88:	movabs rdx,0xff00000000000000
  411c92:	and    rax,rdx
  411c95:	movabs rdx,0x6700000000000000
  411c9f:	cmp    rax,rdx
  411ca2:	jne    412af8 <_start@@Base+0xcbb8>
  411ca8:	cmp    r8,0x1
  411cac:	jle    413931 <_start@@Base+0xd9f1>
  411cb2:	mov    ecx,0x1
  411cb7:	mov    rdx,rbx
  411cba:	mov    rsi,r12
  411cbd:	mov    rdi,rbp
  411cc0:	call   409080 <_start@@Base+0x3140>
  411cc5:	cmp    r12,rax
  411cc8:	mov    r14,rax
  411ccb:	je     413931 <_start@@Base+0xd9f1>
  411cd1:	mov    rdi,QWORD PTR [rbp+0x0]
  411cd5:	call   417240 <flatcc_builder_start_offset_vector@@Base>
  411cda:	test   eax,eax
  411cdc:	jne    410070 <_start@@Base+0xa130>
  411ce2:	mov    r15,QWORD PTR [rsp+0x8]
  411ce7:	mov    rsi,r14
  411cea:	mov    rdi,rbp
  411ced:	mov    rdx,rbx
  411cf0:	mov    rcx,r15
  411cf3:	call   4095c0 <_start@@Base+0x3680>
  411cf8:	mov    edi,DWORD PTR [rsp+0x40]
  411cfc:	mov    r14,rax
  411cff:	test   edi,edi
  411d01:	je     413630 <_start@@Base+0xd6f0>
  411d07:	lea    r12,[rsp+0x44]
  411d0c:	jmp    411d4d <_start@@Base+0xbe0d>
  411d0e:	xchg   ax,ax
  411d10:	mov    rdi,QWORD PTR [rbp+0x0]
  411d14:	mov    esi,0x1
  411d19:	call   416d00 <flatcc_builder_extend_offset_vector@@Base>
  411d1e:	test   rax,rax
  411d21:	je     410070 <_start@@Base+0xa130>
  411d27:	mov    edx,DWORD PTR [rsp+0x44]
  411d2b:	mov    rcx,r15
  411d2e:	mov    rsi,r14
  411d31:	mov    rdi,rbp
  411d34:	mov    DWORD PTR [rax],edx
  411d36:	mov    rdx,rbx
  411d39:	call   40a680 <_start@@Base+0x4740>
  411d3e:	mov    ecx,DWORD PTR [rsp+0x40]
  411d42:	mov    r14,rax
  411d45:	test   ecx,ecx
  411d47:	je     413630 <_start@@Base+0xd6f0>
  411d4d:	mov    rsi,r14
  411d50:	mov    rcx,r12
  411d53:	mov    rdx,rbx
  411d56:	mov    rdi,rbp
  411d59:	call   41e450 <flatcc_json_parser_build_string@@Base>
  411d5e:	mov    esi,DWORD PTR [rsp+0x44]
  411d62:	mov    r14,rax
  411d65:	test   esi,esi
  411d67:	jne    411d10 <_start@@Base+0xbdd0>
  411d69:	jmp    410070 <_start@@Base+0xa130>
  411d6e:	xchg   ax,ax
  411d70:	mov    rsi,r14
  411d73:	mov    ecx,0x5
  411d78:	mov    rdx,rbx
  411d7b:	mov    rdi,rbp
  411d7e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  411d83:	mov    r14,rax
  411d86:	jmp    4107c4 <_start@@Base+0xa884>
  411d8b:	mov    rsi,r14
  411d8e:	mov    ecx,0x4
  411d93:	mov    rdx,rbx
  411d96:	mov    rdi,rbp
  411d99:	call   409080 <_start@@Base+0x3140>
  411d9e:	cmp    rax,r14
  411da1:	mov    rsi,rax
  411da4:	je     411616 <_start@@Base+0xb6d6>
  411daa:	xor    r8d,r8d
  411dad:	mov    rcx,r13
  411db0:	mov    rdx,rbx
  411db3:	mov    rdi,rbp
  411db6:	call   41e050 <flatcc_json_parser_build_uint8_vector_base64@@Base>
  411dbb:	mov    r14,rax
  411dbe:	mov    eax,DWORD PTR [rsp+0x60]
  411dc2:	test   eax,eax
  411dc4:	je     41185f <_start@@Base+0xb91f>
  411dca:	mov    rdi,QWORD PTR [rbp+0x0]
  411dce:	xor    esi,esi
  411dd0:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  411dd5:	test   rax,rax
  411dd8:	jne    411719 <_start@@Base+0xb7d9>
  411dde:	jmp    41185f <_start@@Base+0xb91f>
  411de3:	nop    DWORD PTR [rax+rax*1+0x0]
  411de8:	mov    ecx,0x8
  411ded:	mov    rdx,rbx
  411df0:	mov    rsi,r14
  411df3:	mov    rdi,rbp
  411df6:	call   409080 <_start@@Base+0x3140>
  411dfb:	cmp    rax,r14
  411dfe:	mov    r12,rax
  411e01:	je     410a9a <_start@@Base+0xab5a>
  411e07:	mov    r14,rbx
  411e0a:	mov    BYTE PTR [rsp+0x4c],0x0
  411e0f:	sub    r14,rax
  411e12:	cmp    r14,0x3
  411e16:	jle    411e57 <_start@@Base+0xbf17>
  411e18:	lea    rsi,[rip+0x19768]        # 42b587 <_IO_stdin_used@@Base+0x587>
  411e1f:	mov    edx,0x4
  411e24:	mov    rdi,rax
  411e27:	call   4050b0 <memcmp@plt>
  411e2c:	test   eax,eax
  411e2e:	je     412916 <_start@@Base+0xc9d6>
  411e34:	cmp    r14,0x4
  411e38:	je     411e57 <_start@@Base+0xbf17>
  411e3a:	lea    rsi,[rip+0x1974b]        # 42b58c <_IO_stdin_used@@Base+0x58c>
  411e41:	mov    edx,0x5
  411e46:	mov    rdi,r12
  411e49:	lea    r14,[r12+0x5]
  411e4e:	call   4050b0 <memcmp@plt>
  411e53:	test   eax,eax
  411e55:	je     411ece <_start@@Base+0xbf8e>
  411e57:	cmp    rbx,r12
  411e5a:	mov    QWORD PTR [rsp+0x60],0x0
  411e63:	mov    DWORD PTR [rsp+0x58],0x0
  411e6b:	je     41288c <_start@@Base+0xc94c>
  411e71:	lea    rcx,[rsp+0x58]
  411e76:	mov    r8,r13
  411e79:	mov    rdx,rbx
  411e7c:	mov    rsi,r12
  411e7f:	mov    rdi,rbp
  411e82:	call   41df90 <flatcc_json_parser_integer@@Base>
  411e87:	cmp    r12,rax
  411e8a:	mov    r14,rax
  411e8d:	je     41288c <_start@@Base+0xc94c>
  411e93:	mov    r8d,DWORD PTR [rsp+0x58]
  411e98:	mov    ecx,0x8
  411e9d:	test   r8d,r8d
  411ea0:	jne    412a95 <_start@@Base+0xcb55>
  411ea6:	mov    rax,QWORD PTR [rsp+0x60]
  411eab:	cmp    rax,0xff
  411eb1:	ja     412a90 <_start@@Base+0xcb50>
  411eb7:	test   al,al
  411eb9:	setne  al
  411ebc:	mov    BYTE PTR [rsp+0x4c],al
  411ec0:	cmp    al,0x1
  411ec2:	jne    411ece <_start@@Base+0xbf8e>
  411ec4:	test   BYTE PTR [rbp+0x10],0x2
  411ec8:	je     410558 <_start@@Base+0xa618>
  411ece:	mov    rdi,QWORD PTR [rbp+0x0]
  411ed2:	mov    ecx,0x1
  411ed7:	mov    edx,0x1
  411edc:	mov    esi,0xf
  411ee1:	call   418c80 <flatcc_builder_table_add@@Base>
  411ee6:	test   rax,rax
  411ee9:	je     410070 <_start@@Base+0xa130>
  411eef:	movzx  edx,BYTE PTR [rsp+0x4c]
  411ef4:	mov    BYTE PTR [rax],dl
  411ef6:	jmp    410558 <_start@@Base+0xa618>
  411efb:	mov    rdx,rbx
  411efe:	mov    rsi,r8
  411f01:	mov    rdi,rbp
  411f04:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  411f09:	mov    r14,rax
  411f0c:	jmp    410558 <_start@@Base+0xa618>
  411f11:	mov    ecx,0x4
  411f16:	mov    rdx,rbx
  411f19:	mov    rsi,r14
  411f1c:	mov    rdi,rbp
  411f1f:	call   409080 <_start@@Base+0x3140>
  411f24:	cmp    rax,r14
  411f27:	mov    r12,rax
  411f2a:	je     410b2a <_start@@Base+0xabea>
  411f30:	mov    rdi,QWORD PTR [rbp+0x0]
  411f34:	mov    ecx,0xffffffff
  411f39:	mov    edx,0x1
  411f3e:	mov    esi,0x1
  411f43:	call   4171c0 <flatcc_builder_start_vector@@Base>
  411f48:	test   eax,eax
  411f4a:	jne    413980 <_start@@Base+0xda40>
  411f50:	mov    r15,QWORD PTR [rsp+0x8]
  411f55:	mov    rdx,rbx
  411f58:	mov    rsi,r12
  411f5b:	mov    rdi,rbp
  411f5e:	mov    rcx,r15
  411f61:	call   4095c0 <_start@@Base+0x3680>
  411f66:	mov    r14,rax
  411f69:	mov    eax,DWORD PTR [rsp+0x40]
  411f6d:	test   eax,eax
  411f6f:	je     412005 <_start@@Base+0xc0c5>
  411f75:	mov    r12,r15
  411f78:	jmp    411fa6 <_start@@Base+0xc066>
  411f7a:	nop    WORD PTR [rax+rax*1+0x0]
  411f80:	movzx  edx,BYTE PTR [rsp+0x60]
  411f85:	mov    rcx,r12
  411f88:	mov    rsi,rax
  411f8b:	mov    rdi,rbp
  411f8e:	mov    BYTE PTR [r15],dl
  411f91:	mov    rdx,rbx
  411f94:	call   40a680 <_start@@Base+0x4740>
  411f99:	mov    r15d,DWORD PTR [rsp+0x40]
  411f9e:	mov    r14,rax
  411fa1:	test   r15d,r15d
  411fa4:	je     412005 <_start@@Base+0xc0c5>
  411fa6:	mov    rdi,QWORD PTR [rbp+0x0]
  411faa:	mov    esi,0x1
  411faf:	mov    BYTE PTR [rsp+0x60],0x0
  411fb4:	call   416b20 <flatcc_builder_extend_vector@@Base>
  411fb9:	test   rax,rax
  411fbc:	mov    r15,rax
  411fbf:	je     410070 <_start@@Base+0xa130>
  411fc5:	mov    rcx,r13
  411fc8:	mov    rdx,rbx
  411fcb:	mov    rsi,r14
  411fce:	mov    rdi,rbp
  411fd1:	call   408830 <_start@@Base+0x28f0>
  411fd6:	cmp    rax,r14
  411fd9:	jne    411f80 <_start@@Base+0xc040>
  411fdb:	lea    rcx,[rip+0x277be]        # 4397a0 <__data_start@@Base+0x6e0>
  411fe2:	mov    r8,r13
  411fe5:	mov    rdx,rbx
  411fe8:	mov    rsi,r14
  411feb:	mov    rdi,rbp
  411fee:	call   40a060 <_start@@Base+0x4120>
  411ff3:	cmp    rax,r14
  411ff6:	je     411ffd <_start@@Base+0xc0bd>
  411ff8:	cmp    rbx,rax
  411ffb:	jne    411f80 <_start@@Base+0xc040>
  411ffd:	mov    r14,rax
  412000:	jmp    410070 <_start@@Base+0xa130>
  412005:	mov    rdi,QWORD PTR [rbp+0x0]
  412009:	call   4180c0 <flatcc_builder_end_vector@@Base>
  41200e:	test   eax,eax
  412010:	mov    DWORD PTR [rsp+0x44],eax
  412014:	je     410070 <_start@@Base+0xa130>
  41201a:	mov    rdi,QWORD PTR [rbp+0x0]
  41201e:	mov    esi,0x1e
  412023:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  412028:	test   rax,rax
  41202b:	je     410070 <_start@@Base+0xa130>
  412031:	mov    edx,DWORD PTR [rsp+0x44]
  412035:	mov    DWORD PTR [rax],edx
  412037:	jmp    410558 <_start@@Base+0xa618>
  41203c:	mov    rsi,r14
  41203f:	mov    ecx,0x4
  412044:	mov    rdx,rbx
  412047:	mov    rdi,rbp
  41204a:	call   409080 <_start@@Base+0x3140>
  41204f:	cmp    rax,r14
  412052:	mov    rsi,rax
  412055:	je     410b0a <_start@@Base+0xabca>
  41205b:	lea    r12,[rsp+0x44]
  412060:	mov    rdx,rbx
  412063:	mov    rdi,rbp
  412066:	mov    rcx,r12
  412069:	call   41e450 <flatcc_json_parser_build_string@@Base>
  41206e:	mov    r8d,DWORD PTR [rsp+0x44]
  412073:	mov    r14,rax
  412076:	test   r8d,r8d
  412079:	je     410070 <_start@@Base+0xa130>
  41207f:	mov    rdi,QWORD PTR [rbp+0x0]
  412083:	mov    esi,0x3
  412088:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  41208d:	test   rax,rax
  412090:	je     410070 <_start@@Base+0xa130>
  412096:	mov    edx,DWORD PTR [rsp+0x44]
  41209a:	mov    DWORD PTR [rax],edx
  41209c:	jmp    410558 <_start@@Base+0xa618>
  4120a1:	mov    rax,r14
  4120a4:	mov    r14,rax
  4120a7:	mov    rsi,r14
  4120aa:	mov    ecx,0x21
  4120af:	mov    rdx,rbx
  4120b2:	mov    rdi,rbp
  4120b5:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4120ba:	mov    r14,rax
  4120bd:	mov    eax,DWORD PTR [rsp+0x44]
  4120c1:	test   eax,eax
  4120c3:	je     410070 <_start@@Base+0xa130>
  4120c9:	mov    rdi,QWORD PTR [rbp+0x0]
  4120cd:	mov    esi,0xe
  4120d2:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  4120d7:	test   rax,rax
  4120da:	je     410070 <_start@@Base+0xa130>
  4120e0:	mov    edx,DWORD PTR [rsp+0x44]
  4120e4:	mov    DWORD PTR [rax],edx
  4120e6:	jmp    410558 <_start@@Base+0xa618>
  4120eb:	lea    r12,[r14+0x8]
  4120ef:	mov    r8,rbx
  4120f2:	sub    r8,r12
  4120f5:	cmp    r8,0x7
  4120f9:	jbe    412a53 <_start@@Base+0xcb13>
  4120ff:	movbe  rax,QWORD PTR [r14+0x8]
  412105:	movabs rdx,0xff00000000000000
  41210f:	and    rax,rdx
  412112:	movabs rdx,0x7900000000000000
  41211c:	cmp    rax,rdx
  41211f:	jne    412a01 <_start@@Base+0xcac1>
  412125:	cmp    r8,0x1
  412129:	jle    413a90 <_start@@Base+0xdb50>
  41212f:	mov    ecx,0x1
  412134:	mov    rdx,rbx
  412137:	mov    rsi,r12
  41213a:	mov    rdi,rbp
  41213d:	call   409080 <_start@@Base+0x3140>
  412142:	cmp    r12,rax
  412145:	mov    r14,rax
  412148:	je     413a90 <_start@@Base+0xdb50>
  41214e:	mov    rdi,QWORD PTR [rbp+0x0]
  412152:	mov    ecx,0xffffffff
  412157:	mov    edx,0x1
  41215c:	mov    esi,0x1
  412161:	call   4171c0 <flatcc_builder_start_vector@@Base>
  412166:	test   eax,eax
  412168:	jne    410070 <_start@@Base+0xa130>
  41216e:	mov    r12,QWORD PTR [rsp+0x8]
  412173:	mov    rsi,r14
  412176:	mov    rdx,rbx
  412179:	mov    rdi,rbp
  41217c:	mov    rcx,r12
  41217f:	call   4095c0 <_start@@Base+0x3680>
  412184:	mov    r11d,DWORD PTR [rsp+0x40]
  412189:	mov    r14,rax
  41218c:	test   r11d,r11d
  41218f:	jne    4121ca <_start@@Base+0xc28a>
  412191:	jmp    4133af <_start@@Base+0xd46f>
  412196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4121a0:	movzx  edx,BYTE PTR [rsp+0x60]
  4121a5:	mov    rcx,r12
  4121a8:	mov    rsi,rax
  4121ab:	mov    rdi,rbp
  4121ae:	mov    BYTE PTR [r15],dl
  4121b1:	mov    rdx,rbx
  4121b4:	call   40a680 <_start@@Base+0x4740>
  4121b9:	mov    r10d,DWORD PTR [rsp+0x40]
  4121be:	mov    r14,rax
  4121c1:	test   r10d,r10d
  4121c4:	je     4133af <_start@@Base+0xd46f>
  4121ca:	mov    rdi,QWORD PTR [rbp+0x0]
  4121ce:	mov    esi,0x1
  4121d3:	mov    BYTE PTR [rsp+0x60],0x0
  4121d8:	call   416b20 <flatcc_builder_extend_vector@@Base>
  4121dd:	test   rax,rax
  4121e0:	mov    r15,rax
  4121e3:	je     410070 <_start@@Base+0xa130>
  4121e9:	mov    rcx,r13
  4121ec:	mov    rdx,rbx
  4121ef:	mov    rsi,r14
  4121f2:	mov    rdi,rbp
  4121f5:	call   408830 <_start@@Base+0x28f0>
  4121fa:	cmp    rax,r14
  4121fd:	jne    4121a0 <_start@@Base+0xc260>
  4121ff:	lea    rcx,[rip+0x2755a]        # 439760 <__data_start@@Base+0x6a0>
  412206:	mov    r8,r13
  412209:	mov    rdx,rbx
  41220c:	mov    rsi,r14
  41220f:	mov    rdi,rbp
  412212:	call   40a060 <_start@@Base+0x4120>
  412217:	cmp    rax,r14
  41221a:	je     412225 <_start@@Base+0xc2e5>
  41221c:	cmp    rbx,rax
  41221f:	jne    4121a0 <_start@@Base+0xc260>
  412225:	mov    r14,rax
  412228:	jmp    410070 <_start@@Base+0xa130>
  41222d:	nop    DWORD PTR [rax]
  412230:	mov    rsi,r14
  412233:	mov    ecx,0x5
  412238:	mov    rdx,rbx
  41223b:	mov    rdi,rbp
  41223e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  412243:	mov    r14,rax
  412246:	jmp    41166d <_start@@Base+0xb72d>
  41224b:	mov    rdi,QWORD PTR [rbp+0x0]
  41224f:	call   4180c0 <flatcc_builder_end_vector@@Base>
  412254:	test   eax,eax
  412256:	mov    DWORD PTR [rsp+0x44],eax
  41225a:	je     410070 <_start@@Base+0xa130>
  412260:	mov    rdi,QWORD PTR [rbp+0x0]
  412264:	mov    esi,0x1f
  412269:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  41226e:	test   rax,rax
  412271:	je     410070 <_start@@Base+0xa130>
  412277:	mov    edx,DWORD PTR [rsp+0x44]
  41227b:	mov    DWORD PTR [rax],edx
  41227d:	jmp    410558 <_start@@Base+0xa618>
  412282:	mov    rdx,rbx
  412285:	mov    rsi,r12
  412288:	mov    rdi,rbp
  41228b:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412290:	mov    r14,rax
  412293:	jmp    410558 <_start@@Base+0xa618>
  412298:	nop    DWORD PTR [rax+rax*1+0x0]
  4122a0:	mov    rsi,r14
  4122a3:	mov    ecx,0x4
  4122a8:	mov    rdx,rbx
  4122ab:	mov    rdi,rbp
  4122ae:	mov    QWORD PTR [rsp+0x10],r8
  4122b3:	call   409080 <_start@@Base+0x3140>
  4122b8:	cmp    rax,r14
  4122bb:	mov    rsi,rax
  4122be:	mov    r8,QWORD PTR [rsp+0x10]
  4122c3:	je     410247 <_start@@Base+0xa307>
  4122c9:	lea    rax,[rip+0x1af0]        # 413dc0 <_start@@Base+0xde80>
  4122d0:	sub    rsp,0x8
  4122d4:	mov    r8d,0x8
  4122da:	mov    rdi,rbp
  4122dd:	xor    ecx,ecx
  4122df:	mov    rdx,rbx
  4122e2:	push   rax
  4122e3:	mov    r9,QWORD PTR [rsp+0x60]
  4122e8:	call   41e6f0 <flatcc_json_parser_union@@Base>
  4122ed:	pop    rdi
  4122ee:	mov    r14,rax
  4122f1:	pop    r8
  4122f3:	jmp    410558 <_start@@Base+0xa618>
  4122f8:	mov    rdx,rbx
  4122fb:	mov    rsi,r12
  4122fe:	mov    rdi,rbp
  412301:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412306:	mov    r14,rax
  412309:	jmp    410558 <_start@@Base+0xa618>
  41230e:	mov    rdx,rbx
  412311:	mov    rsi,r12
  412314:	mov    rdi,rbp
  412317:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41231c:	mov    r14,rax
  41231f:	jmp    410558 <_start@@Base+0xa618>
  412324:	mov    ecx,0x3
  412329:	mov    rdx,rbx
  41232c:	mov    rsi,r14
  41232f:	mov    rdi,rbp
  412332:	call   409080 <_start@@Base+0x3140>
  412337:	cmp    rax,r14
  41233a:	mov    QWORD PTR [rsp+0x10],rax
  41233f:	je     410655 <_start@@Base+0xa715>
  412345:	mov    rdi,QWORD PTR [rbp+0x0]
  412349:	xor    esi,esi
  41234b:	mov    ecx,0x10
  412350:	mov    edx,0x20
  412355:	call   418c80 <flatcc_builder_table_add@@Base>
  41235a:	test   rax,rax
  41235d:	mov    r15,rax
  412360:	je     413b5b <_start@@Base+0xdc1b>
  412366:	mov    rsi,QWORD PTR [rsp+0x10]
  41236b:	lea    r12,[rsp+0x4c]
  412370:	mov    rdx,rbx
  412373:	mov    rdi,rbp
  412376:	mov    rcx,r12
  412379:	call   408fe0 <_start@@Base+0x30a0>
  41237e:	mov    esi,DWORD PTR [rsp+0x4c]
  412382:	mov    r14,rax
  412385:	test   esi,esi
  412387:	jne    4123fb <_start@@Base+0xc4bb>
  412389:	jmp    410558 <_start@@Base+0xa618>
  41238e:	xchg   ax,ax
  412390:	and    rax,0xffffffffff000000
  412396:	movabs rdx,0x7465737432000000
  4123a0:	cmp    rax,rdx
  4123a3:	je     412560 <_start@@Base+0xc620>
  4123a9:	movabs rdx,0x7465737431000000
  4123b3:	cmp    rax,rdx
  4123b6:	jne    4123c8 <_start@@Base+0xc488>
  4123b8:	cmp    r8,0x5
  4123bc:	jg     4126c8 <_start@@Base+0xc788>
  4123c2:	nop    WORD PTR [rax+rax*1+0x0]
  4123c8:	mov    rsi,r14
  4123cb:	mov    rdx,rbx
  4123ce:	mov    rdi,rbp
  4123d1:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  4123d6:	mov    r14,rax
  4123d9:	mov    rsi,r14
  4123dc:	mov    rcx,r12
  4123df:	mov    rdx,rbx
  4123e2:	mov    rdi,rbp
  4123e5:	call   40a7d0 <_start@@Base+0x4890>
  4123ea:	mov    r11d,DWORD PTR [rsp+0x4c]
  4123ef:	mov    r14,rax
  4123f2:	test   r11d,r11d
  4123f5:	je     410558 <_start@@Base+0xa618>
  4123fb:	cmp    rbx,r14
  4123fe:	je     4124b0 <_start@@Base+0xc570>
  412404:	movzx  eax,BYTE PTR [r14]
  412408:	cmp    al,0x22
  41240a:	je     412550 <_start@@Base+0xc610>
  412410:	cmp    al,0x2e
  412412:	je     4126a8 <_start@@Base+0xc768>
  412418:	mov    DWORD PTR [rbp+0x14],0x1
  41241f:	mov    r8,rbx
  412422:	sub    r8,r14
  412425:	cmp    r8,0x7
  412429:	jbe    4124b6 <_start@@Base+0xc576>
  41242f:	movbe  rax,QWORD PTR [r14]
  412434:	movabs rdx,0x7465737432ffffff
  41243e:	cmp    rax,rdx
  412441:	jbe    412390 <_start@@Base+0xc450>
  412447:	movabs rdx,0x77ffffffffffffff
  412451:	cmp    rax,rdx
  412454:	ja     4124d0 <_start@@Base+0xc590>
  412456:	and    rax,0xffffffffff000000
  41245c:	movabs rdx,0x7465737433000000
  412466:	cmp    rax,rdx
  412469:	jne    4123c8 <_start@@Base+0xc488>
  41246f:	cmp    r8,0x5
  412473:	jle    4123c8 <_start@@Base+0xc488>
  412479:	mov    rsi,r14
  41247c:	mov    ecx,0x5
  412481:	mov    rdx,rbx
  412484:	mov    rdi,rbp
  412487:	call   409080 <_start@@Base+0x3140>
  41248c:	cmp    rax,r14
  41248f:	mov    rsi,rax
  412492:	je     4123c8 <_start@@Base+0xc488>
  412498:	lea    rcx,[r15+0x1a]
  41249c:	mov    rdx,rbx
  41249f:	mov    rdi,rbp
  4124a2:	call   40b240 <_start@@Base+0x5300>
  4124a7:	mov    r14,rax
  4124aa:	jmp    4123d9 <_start@@Base+0xc499>
  4124af:	nop
  4124b0:	xor    r8d,r8d
  4124b3:	mov    r14,rbx
  4124b6:	mov    rsi,rbx
  4124b9:	mov    rdi,r14
  4124bc:	call   406050 <_start@@Base+0x110>
  4124c1:	jmp    412434 <_start@@Base+0xc4f4>
  4124c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4124d0:	movabs rdx,0x78ffffffffffffff
  4124da:	cmp    rax,rdx
  4124dd:	ja     412608 <_start@@Base+0xc6c8>
  4124e3:	cmp    r8,0x1
  4124e7:	jle    4123c8 <_start@@Base+0xc488>
  4124ed:	mov    ecx,0x1
  4124f2:	mov    rdx,rbx
  4124f5:	mov    rsi,r14
  4124f8:	mov    rdi,rbp
  4124fb:	call   409080 <_start@@Base+0x3140>
  412500:	cmp    rax,r14
  412503:	je     4123c8 <_start@@Base+0xc488>
  412509:	mov    rcx,r13
  41250c:	mov    rdx,rbx
  41250f:	mov    rsi,rax
  412512:	mov    rdi,rbp
  412515:	mov    DWORD PTR [rsp+0x60],0x0
  41251d:	mov    QWORD PTR [rsp+0x10],rax
  412522:	call   41d1f0 <flatcc_json_parser_float@@Base>
  412527:	mov    r8,QWORD PTR [rsp+0x10]
  41252c:	mov    r14,rax
  41252f:	cmp    r8,rax
  412532:	je     412bfc <_start@@Base+0xccbc>
  412538:	vmovss xmm0,DWORD PTR [rsp+0x60]
  41253e:	vmovss DWORD PTR [r15],xmm0
  412543:	jmp    4123d9 <_start@@Base+0xc499>
  412548:	nop    DWORD PTR [rax+rax*1+0x0]
  412550:	add    r14,0x1
  412554:	mov    DWORD PTR [rbp+0x14],0x0
  41255b:	jmp    41241f <_start@@Base+0xc4df>
  412560:	cmp    r8,0x5
  412564:	jle    4123c8 <_start@@Base+0xc488>
  41256a:	mov    ecx,0x5
  41256f:	mov    rdx,rbx
  412572:	mov    rsi,r14
  412575:	mov    rdi,rbp
  412578:	call   409080 <_start@@Base+0x3140>
  41257d:	cmp    rax,r14
  412580:	mov    r9,rax
  412583:	je     4123c8 <_start@@Base+0xc488>
  412589:	cmp    rbx,rax
  41258c:	mov    BYTE PTR [rsp+0x48],0x0
  412591:	mov    QWORD PTR [rsp+0x60],0x0
  41259a:	mov    DWORD PTR [rsp+0x58],0x0
  4125a2:	je     412818 <_start@@Base+0xc8d8>
  4125a8:	lea    rcx,[rsp+0x58]
  4125ad:	mov    r8,r13
  4125b0:	mov    rdx,rbx
  4125b3:	mov    rsi,rax
  4125b6:	mov    rdi,rbp
  4125b9:	mov    QWORD PTR [rsp+0x10],rax
  4125be:	call   41df90 <flatcc_json_parser_integer@@Base>
  4125c3:	mov    r9,QWORD PTR [rsp+0x10]
  4125c8:	mov    r14,rax
  4125cb:	cmp    r9,rax
  4125ce:	je     412818 <_start@@Base+0xc8d8>
  4125d4:	mov    ecx,DWORD PTR [rsp+0x58]
  4125d8:	mov    rax,QWORD PTR [rsp+0x60]
  4125dd:	test   ecx,ecx
  4125df:	mov    edx,eax
  4125e1:	je     412728 <_start@@Base+0xc7e8>
  4125e7:	neg    edx
  4125e9:	cmp    rax,0x80
  4125ef:	mov    ecx,0x8
  4125f4:	ja     41273c <_start@@Base+0xc7fc>
  4125fa:	mov    BYTE PTR [r15+0x18],dl
  4125fe:	jmp    4123d9 <_start@@Base+0xc499>
  412603:	nop    DWORD PTR [rax+rax*1+0x0]
  412608:	movabs rdx,0xff00000000000000
  412612:	and    rax,rdx
  412615:	movabs rdx,0x7a00000000000000
  41261f:	cmp    rax,rdx
  412622:	je     412768 <_start@@Base+0xc828>
  412628:	movabs rdx,0x7900000000000000
  412632:	cmp    rax,rdx
  412635:	jne    4123c8 <_start@@Base+0xc488>
  41263b:	cmp    r8,0x1
  41263f:	jle    4123c8 <_start@@Base+0xc488>
  412645:	mov    ecx,0x1
  41264a:	mov    rdx,rbx
  41264d:	mov    rsi,r14
  412650:	mov    rdi,rbp
  412653:	call   409080 <_start@@Base+0x3140>
  412658:	cmp    rax,r14
  41265b:	je     4123c8 <_start@@Base+0xc488>
  412661:	mov    rcx,r13
  412664:	mov    rdx,rbx
  412667:	mov    rsi,rax
  41266a:	mov    rdi,rbp
  41266d:	mov    DWORD PTR [rsp+0x60],0x0
  412675:	mov    QWORD PTR [rsp+0x10],rax
  41267a:	call   41d1f0 <flatcc_json_parser_float@@Base>
  41267f:	mov    r9,QWORD PTR [rsp+0x10]
  412684:	mov    r14,rax
  412687:	cmp    r9,rax
  41268a:	je     412f6e <_start@@Base+0xd02e>
  412690:	vmovss xmm0,DWORD PTR [rsp+0x60]
  412696:	vmovss DWORD PTR [r15+0x4],xmm0
  41269c:	jmp    4123d9 <_start@@Base+0xc499>
  4126a1:	nop    DWORD PTR [rax+0x0]
  4126a8:	mov    rsi,r14
  4126ab:	mov    ecx,0x5
  4126b0:	mov    rdx,rbx
  4126b3:	mov    rdi,rbp
  4126b6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4126bb:	mov    r14,rax
  4126be:	jmp    41241f <_start@@Base+0xc4df>
  4126c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4126c8:	mov    ecx,0x5
  4126cd:	mov    rdx,rbx
  4126d0:	mov    rsi,r14
  4126d3:	mov    rdi,rbp
  4126d6:	call   409080 <_start@@Base+0x3140>
  4126db:	cmp    rax,r14
  4126de:	je     4123c8 <_start@@Base+0xc488>
  4126e4:	mov    rcx,r13
  4126e7:	mov    rdx,rbx
  4126ea:	mov    rsi,rax
  4126ed:	mov    rdi,rbp
  4126f0:	mov    QWORD PTR [rsp+0x60],0x0
  4126f9:	mov    QWORD PTR [rsp+0x10],rax
  4126fe:	call   41d110 <flatcc_json_parser_double@@Base>
  412703:	mov    r8,QWORD PTR [rsp+0x10]
  412708:	mov    r14,rax
  41270b:	cmp    r8,rax
  41270e:	je     4127ce <_start@@Base+0xc88e>
  412714:	vmovsd xmm0,QWORD PTR [rsp+0x60]
  41271a:	vmovsd QWORD PTR [r15+0x10],xmm0
  412720:	jmp    4123d9 <_start@@Base+0xc499>
  412725:	nop    DWORD PTR [rax]
  412728:	cmp    rax,0x7f
  41272c:	jbe    4125fa <_start@@Base+0xc6ba>
  412732:	mov    QWORD PTR [rsp+0x10],r9
  412737:	mov    ecx,0x7
  41273c:	mov    rsi,r14
  41273f:	mov    rdx,rbx
  412742:	mov    rdi,rbp
  412745:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41274a:	mov    r9,QWORD PTR [rsp+0x10]
  41274f:	mov    r14,rax
  412752:	cmp    r9,rax
  412755:	je     412818 <_start@@Base+0xc8d8>
  41275b:	movzx  edx,BYTE PTR [rsp+0x48]
  412760:	jmp    4125fa <_start@@Base+0xc6ba>
  412765:	nop    DWORD PTR [rax]
  412768:	cmp    r8,0x1
  41276c:	jle    4123c8 <_start@@Base+0xc488>
  412772:	mov    ecx,0x1
  412777:	mov    rdx,rbx
  41277a:	mov    rsi,r14
  41277d:	mov    rdi,rbp
  412780:	call   409080 <_start@@Base+0x3140>
  412785:	cmp    rax,r14
  412788:	je     4123c8 <_start@@Base+0xc488>
  41278e:	mov    rcx,r13
  412791:	mov    rdx,rbx
  412794:	mov    rsi,rax
  412797:	mov    rdi,rbp
  41279a:	mov    DWORD PTR [rsp+0x60],0x0
  4127a2:	mov    QWORD PTR [rsp+0x10],rax
  4127a7:	call   41d1f0 <flatcc_json_parser_float@@Base>
  4127ac:	mov    r8,QWORD PTR [rsp+0x10]
  4127b1:	mov    r14,rax
  4127b4:	cmp    r8,rax
  4127b7:	je     413342 <_start@@Base+0xd402>
  4127bd:	vmovss xmm0,DWORD PTR [rsp+0x60]
  4127c3:	vmovss DWORD PTR [r15+0x8],xmm0
  4127c9:	jmp    4123d9 <_start@@Base+0xc499>
  4127ce:	lea    rcx,[rip+0x26a2b]        # 439200 <__data_start@@Base+0x140>
  4127d5:	mov    r8,r13
  4127d8:	mov    rdx,rbx
  4127db:	mov    rsi,rax
  4127de:	mov    rdi,rbp
  4127e1:	call   409380 <_start@@Base+0x3440>
  4127e6:	cmp    r14,rax
  4127e9:	mov    r14,rax
  4127ec:	je     4127f7 <_start@@Base+0xc8b7>
  4127ee:	cmp    rbx,rax
  4127f1:	jne    412714 <_start@@Base+0xc7d4>
  4127f7:	mov    rsi,r14
  4127fa:	mov    ecx,0x21
  4127ff:	mov    rdx,rbx
  412802:	mov    rdi,rbp
  412805:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41280a:	mov    r14,rax
  41280d:	jmp    410558 <_start@@Base+0xa618>
  412812:	nop    WORD PTR [rax+rax*1+0x0]
  412818:	lea    r8,[rsp+0x48]
  41281d:	lea    rcx,[rip+0x269fc]        # 439220 <__data_start@@Base+0x160>
  412824:	mov    rsi,r9
  412827:	mov    rdx,rbx
  41282a:	mov    rdi,rbp
  41282d:	mov    QWORD PTR [rsp+0x10],r9
  412832:	call   40a470 <_start@@Base+0x4530>
  412837:	mov    r9,QWORD PTR [rsp+0x10]
  41283c:	mov    r14,rax
  41283f:	cmp    rax,r9
  412842:	je     4127f7 <_start@@Base+0xc8b7>
  412844:	cmp    rbx,rax
  412847:	jne    41275b <_start@@Base+0xc81b>
  41284d:	jmp    4127f7 <_start@@Base+0xc8b7>
  41284f:	nop
  412850:	mov    r12,rax
  412853:	lea    r8,[rsp+0x4c]
  412858:	lea    rcx,[rip+0x26f61]        # 4397c0 <__data_start@@Base+0x700>
  41285f:	mov    rdx,rbx
  412862:	mov    rsi,r12
  412865:	mov    rdi,rbp
  412868:	call   40a470 <_start@@Base+0x4530>
  41286d:	cmp    rax,r12
  412870:	mov    r14,rax
  412873:	je     410070 <_start@@Base+0xa130>
  412879:	cmp    rbx,rax
  41287c:	je     410070 <_start@@Base+0xa130>
  412882:	movzx  eax,BYTE PTR [rsp+0x4c]
  412887:	jmp    4110ef <_start@@Base+0xb1af>
  41288c:	mov    BYTE PTR [rsp+0x4c],0x0
  412891:	lea    r8,[rsp+0x4c]
  412896:	lea    rcx,[rip+0x26e43]        # 4396e0 <__data_start@@Base+0x620>
  41289d:	mov    rdx,rbx
  4128a0:	mov    rsi,r12
  4128a3:	mov    rdi,rbp
  4128a6:	call   409660 <_start@@Base+0x3720>
  4128ab:	cmp    rax,r12
  4128ae:	mov    r14,rax
  4128b1:	je     410070 <_start@@Base+0xa130>
  4128b7:	cmp    rbx,rax
  4128ba:	je     410070 <_start@@Base+0xa130>
  4128c0:	movzx  eax,BYTE PTR [rsp+0x4c]
  4128c5:	jmp    411ec0 <_start@@Base+0xbf80>
  4128ca:	mov    ecx,0x7
  4128cf:	mov    rsi,r14
  4128d2:	mov    rdx,rbx
  4128d5:	mov    rdi,rbp
  4128d8:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4128dd:	cmp    r12,rax
  4128e0:	mov    r14,rax
  4128e3:	jne    412882 <_start@@Base+0xc942>
  4128e5:	jmp    412853 <_start@@Base+0xc913>
  4128ea:	nop    WORD PTR [rax+rax*1+0x0]
  4128f0:	mov    rdx,rbx
  4128f3:	mov    rsi,r12
  4128f6:	mov    rdi,rbp
  4128f9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  4128fe:	mov    r14,rax
  412901:	jmp    410558 <_start@@Base+0xa618>
  412906:	mov    rsi,rbx
  412909:	mov    rdi,r12
  41290c:	call   406050 <_start@@Base+0x110>
  412911:	jmp    4103dd <_start@@Base+0xa49d>
  412916:	mov    BYTE PTR [rsp+0x4c],0x1
  41291b:	lea    r14,[r12+0x4]
  412920:	jmp    411ec4 <_start@@Base+0xbf84>
  412925:	mov    r15,rax
  412928:	mov    r8,QWORD PTR [rsp+0x28]
  41292d:	lea    rcx,[rip+0x267cc]        # 439100 <__data_start@@Base+0x40>
  412934:	mov    rdx,rbx
  412937:	mov    rsi,r15
  41293a:	mov    rdi,rbp
  41293d:	call   409e60 <_start@@Base+0x3f20>
  412942:	cmp    rax,r15
  412945:	mov    r14,rax
  412948:	je     4120a7 <_start@@Base+0xc167>
  41294e:	cmp    rbx,rax
  412951:	je     4120a7 <_start@@Base+0xc167>
  412957:	movzx  edx,WORD PTR [rsp+0x3e]
  41295c:	jmp    41198e <_start@@Base+0xba4e>
  412961:	mov    rsi,rbx
  412964:	mov    rdi,r12
  412967:	call   406050 <_start@@Base+0x110>
  41296c:	jmp    411c68 <_start@@Base+0xbd28>
  412971:	mov    ecx,0x5
  412976:	mov    rdx,rbx
  412979:	mov    rsi,r14
  41297c:	mov    rdi,rbp
  41297f:	call   409080 <_start@@Base+0x3140>
  412984:	cmp    rax,r14
  412987:	mov    r12,rax
  41298a:	je     410454 <_start@@Base+0xa514>
  412990:	mov    rcx,r13
  412993:	mov    rdx,rbx
  412996:	mov    rsi,rax
  412999:	mov    rdi,rbp
  41299c:	mov    DWORD PTR [rsp+0x60],0x0
  4129a4:	call   41d1f0 <flatcc_json_parser_float@@Base>
  4129a9:	cmp    rax,r12
  4129ac:	mov    r14,rax
  4129af:	je     413720 <_start@@Base+0xd7e0>
  4129b5:	vmovss xmm0,DWORD PTR [rsp+0x60]
  4129bb:	vucomiss xmm0,DWORD PTR [rip+0x1c615]        # 42efd8 <_IO_stdin_used@@Base+0x3fd8>
  4129c3:	jp     4129d1 <_start@@Base+0xca91>
  4129c5:	jne    4129d1 <_start@@Base+0xca91>
  4129c7:	test   BYTE PTR [rbp+0x10],0x2
  4129cb:	je     410558 <_start@@Base+0xa618>
  4129d1:	mov    rdi,QWORD PTR [rbp+0x0]
  4129d5:	mov    ecx,0x4
  4129da:	mov    edx,0x4
  4129df:	mov    esi,0x19
  4129e4:	call   418c80 <flatcc_builder_table_add@@Base>
  4129e9:	test   rax,rax
  4129ec:	je     410070 <_start@@Base+0xa130>
  4129f2:	vmovss xmm0,DWORD PTR [rsp+0x60]
  4129f8:	vmovss DWORD PTR [rax],xmm0
  4129fc:	jmp    410558 <_start@@Base+0xa618>
  412a01:	mov    rdx,rbx
  412a04:	mov    rsi,r12
  412a07:	mov    rdi,rbp
  412a0a:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412a0f:	mov    r14,rax
  412a12:	jmp    410558 <_start@@Base+0xa618>
  412a17:	mov    rdx,rbx
  412a1a:	mov    rsi,r12
  412a1d:	mov    rdi,rbp
  412a20:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412a25:	mov    r14,rax
  412a28:	jmp    410558 <_start@@Base+0xa618>
  412a2d:	mov    rsi,rbx
  412a30:	mov    rdi,r12
  412a33:	call   406050 <_start@@Base+0x110>
  412a38:	jmp    410c18 <_start@@Base+0xacd8>
  412a3d:	mov    rdx,rbx
  412a40:	mov    rsi,r12
  412a43:	mov    rdi,rbp
  412a46:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412a4b:	mov    r14,rax
  412a4e:	jmp    410558 <_start@@Base+0xa618>
  412a53:	mov    rsi,rbx
  412a56:	mov    rdi,r12
  412a59:	call   406050 <_start@@Base+0x110>
  412a5e:	jmp    412105 <_start@@Base+0xc1c5>
  412a63:	mov    ecx,0x8
  412a68:	mov    rsi,r14
  412a6b:	mov    rdx,rbx
  412a6e:	mov    rdi,rbp
  412a71:	call   41c420 <flatcc_json_parser_set_error@@Base>
  412a76:	cmp    r15,rax
  412a79:	mov    r14,rax
  412a7c:	jne    412957 <_start@@Base+0xca17>
  412a82:	jmp    412928 <_start@@Base+0xc9e8>
  412a87:	nop    WORD PTR [rax+rax*1+0x0]
  412a90:	mov    ecx,0x7
  412a95:	mov    rsi,r14
  412a98:	mov    rdx,rbx
  412a9b:	mov    rdi,rbp
  412a9e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  412aa3:	cmp    r12,rax
  412aa6:	mov    r14,rax
  412aa9:	mov    BYTE PTR [rsp+0x4c],0x0
  412aae:	jne    411ece <_start@@Base+0xbf8e>
  412ab4:	jmp    412891 <_start@@Base+0xc951>
  412ab9:	nop    DWORD PTR [rax+0x0]
  412ac0:	lea    rcx,[rip+0x26bb9]        # 439680 <__data_start@@Base+0x5c0>
  412ac7:	mov    r8,r13
  412aca:	mov    rdx,rbx
  412acd:	mov    rsi,rax
  412ad0:	mov    rdi,rbp
  412ad3:	call   409140 <_start@@Base+0x3200>
  412ad8:	cmp    r14,rax
  412adb:	mov    r14,rax
  412ade:	je     410070 <_start@@Base+0xa130>
  412ae4:	cmp    rbx,rax
  412ae7:	jne    410b84 <_start@@Base+0xac44>
  412aed:	jmp    410070 <_start@@Base+0xa130>
  412af2:	nop    WORD PTR [rax+rax*1+0x0]
  412af8:	mov    rdx,rbx
  412afb:	mov    rsi,r12
  412afe:	mov    rdi,rbp
  412b01:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412b06:	mov    r14,rax
  412b09:	jmp    410558 <_start@@Base+0xa618>
  412b0e:	mov    rdx,rbx
  412b11:	mov    rsi,r12
  412b14:	mov    rdi,rbp
  412b17:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412b1c:	mov    r14,rax
  412b1f:	jmp    410558 <_start@@Base+0xa618>
  412b24:	mov    rdx,rbx
  412b27:	mov    rsi,r12
  412b2a:	mov    rdi,rbp
  412b2d:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412b32:	mov    r14,rax
  412b35:	jmp    410558 <_start@@Base+0xa618>
  412b3a:	mov    ecx,0x4
  412b3f:	mov    rdx,rbx
  412b42:	mov    rsi,r14
  412b45:	mov    rdi,rbp
  412b48:	call   409080 <_start@@Base+0x3140>
  412b4d:	cmp    rax,r14
  412b50:	mov    r12,rax
  412b53:	je     411199 <_start@@Base+0xb259>
  412b59:	xor    r9d,r9d
  412b5c:	mov    rcx,r13
  412b5f:	mov    rdx,rbx
  412b62:	mov    rsi,rax
  412b65:	mov    rdi,rbp
  412b68:	mov    WORD PTR [rsp+0x60],r9w
  412b6e:	call   4089f0 <_start@@Base+0x2ab0>
  412b73:	cmp    rax,r12
  412b76:	mov    r14,rax
  412b79:	je     413947 <_start@@Base+0xda07>
  412b7f:	cmp    WORD PTR [rsp+0x60],0x96
  412b86:	jne    412b92 <_start@@Base+0xcc52>
  412b88:	test   BYTE PTR [rbp+0x10],0x2
  412b8c:	je     410558 <_start@@Base+0xa618>
  412b92:	mov    rdi,QWORD PTR [rbp+0x0]
  412b96:	mov    ecx,0x2
  412b9b:	mov    edx,0x2
  412ba0:	mov    esi,0x1
  412ba5:	call   418c80 <flatcc_builder_table_add@@Base>
  412baa:	test   rax,rax
  412bad:	je     410070 <_start@@Base+0xa130>
  412bb3:	movzx  edx,WORD PTR [rsp+0x60]
  412bb8:	mov    WORD PTR [rax],dx
  412bbb:	jmp    410558 <_start@@Base+0xa618>
  412bc0:	mov    r13,QWORD PTR [rsp+0x10]
  412bc5:	mov    rdi,QWORD PTR [rbp+0x0]
  412bc9:	call   4180c0 <flatcc_builder_end_vector@@Base>
  412bce:	test   eax,eax
  412bd0:	mov    DWORD PTR [rsp+0x44],eax
  412bd4:	je     410070 <_start@@Base+0xa130>
  412bda:	mov    rdi,QWORD PTR [rbp+0x0]
  412bde:	mov    esi,0x18
  412be3:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  412be8:	test   rax,rax
  412beb:	je     410070 <_start@@Base+0xa130>
  412bf1:	mov    edx,DWORD PTR [rsp+0x44]
  412bf5:	mov    DWORD PTR [rax],edx
  412bf7:	jmp    410558 <_start@@Base+0xa618>
  412bfc:	lea    rcx,[rip+0x265dd]        # 4391e0 <__data_start@@Base+0x120>
  412c03:	mov    r8,r13
  412c06:	mov    rdx,rbx
  412c09:	mov    rsi,rax
  412c0c:	mov    rdi,rbp
  412c0f:	call   409140 <_start@@Base+0x3200>
  412c14:	cmp    r14,rax
  412c17:	mov    r14,rax
  412c1a:	je     4127f7 <_start@@Base+0xc8b7>
  412c20:	cmp    rbx,rax
  412c23:	jne    412538 <_start@@Base+0xc5f8>
  412c29:	jmp    4127f7 <_start@@Base+0xc8b7>
  412c2e:	xchg   ax,ax
  412c30:	mov    eax,DWORD PTR [rbp+0x20]
  412c33:	test   eax,eax
  412c35:	jne    4120a7 <_start@@Base+0xc167>
  412c3b:	mov    rdi,QWORD PTR [rbp+0x0]
  412c3f:	call   417da0 <flatcc_builder_end_table@@Base>
  412c44:	test   eax,eax
  412c46:	mov    DWORD PTR [rsp+0x44],eax
  412c4a:	je     4120a7 <_start@@Base+0xc167>
  412c50:	jmp    4120c9 <_start@@Base+0xc189>
  412c55:	mov    rcx,QWORD PTR [rsp+0x50]
  412c5a:	mov    rdx,rbx
  412c5d:	mov    rsi,r14
  412c60:	mov    rdi,rbp
  412c63:	call   41e690 <flatcc_json_parser_finalize_unions@@Base>
  412c68:	mov    rdi,QWORD PTR [rbp+0x0]
  412c6c:	mov    r14,rax
  412c6f:	call   417da0 <flatcc_builder_end_table@@Base>
  412c74:	mov    edx,eax
  412c76:	mov    rax,QWORD PTR [rsp+0x20]
  412c7b:	test   edx,edx
  412c7d:	mov    DWORD PTR [rax],edx
  412c7f:	mov    rax,r14
  412c82:	je     410070 <_start@@Base+0xa130>
  412c88:	jmp    410083 <_start@@Base+0xa143>
  412c8d:	mov    rsi,rbx
  412c90:	mov    rdi,r12
  412c93:	call   406050 <_start@@Base+0x110>
  412c98:	jmp    40ff4f <_start@@Base+0xa00f>
  412c9d:	mov    ecx,0x7
  412ca2:	jmp    412a68 <_start@@Base+0xcb28>
  412ca7:	cmp    r8,0x2
  412cab:	jg     4137a0 <_start@@Base+0xd860>
  412cb1:	mov    rdx,rbx
  412cb4:	mov    rsi,r12
  412cb7:	mov    rdi,rbp
  412cba:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  412cbf:	mov    r14,rax
  412cc2:	jmp    410558 <_start@@Base+0xa618>
  412cc7:	mov    r10d,DWORD PTR [rbp+0x20]
  412ccb:	test   r10d,r10d
  412cce:	jne    41185f <_start@@Base+0xb91f>
  412cd4:	mov    rdi,QWORD PTR [rbp+0x0]
  412cd8:	call   417da0 <flatcc_builder_end_table@@Base>
  412cdd:	test   eax,eax
  412cdf:	mov    DWORD PTR [rsp+0x44],eax
  412ce3:	je     41185f <_start@@Base+0xb91f>
  412ce9:	jmp    411883 <_start@@Base+0xb943>
  412cee:	mov    ecx,0x8
  412cf3:	mov    rdx,rbx
  412cf6:	mov    rsi,r12
  412cf9:	mov    rdi,rbp
  412cfc:	call   409080 <_start@@Base+0x3140>
  412d01:	cmp    r12,rax
  412d04:	mov    r15,rax
  412d07:	je     4112bd <_start@@Base+0xb37d>
  412d0d:	mov    rcx,r13
  412d10:	mov    rdx,rbx
  412d13:	mov    rsi,rax
  412d16:	mov    rdi,rbp
  412d19:	mov    DWORD PTR [rsp+0x60],0x0
  412d21:	call   408900 <_start@@Base+0x29c0>
  412d26:	cmp    rax,r15
  412d29:	mov    r14,rax
  412d2c:	je     413ad0 <_start@@Base+0xdb90>
  412d32:	mov    eax,DWORD PTR [rsp+0x60]
  412d36:	test   eax,eax
  412d38:	jne    412d44 <_start@@Base+0xce04>
  412d3a:	test   BYTE PTR [rbp+0x10],0x2
  412d3e:	je     410558 <_start@@Base+0xa618>
  412d44:	mov    rdi,QWORD PTR [rbp+0x0]
  412d48:	mov    ecx,0x4
  412d4d:	mov    edx,0x4
  412d52:	mov    esi,0x10
  412d57:	call   418c80 <flatcc_builder_table_add@@Base>
  412d5c:	test   rax,rax
  412d5f:	je     413cb7 <_start@@Base+0xdd77>
  412d65:	mov    edx,DWORD PTR [rsp+0x60]
  412d69:	mov    DWORD PTR [rax],edx
  412d6b:	jmp    410558 <_start@@Base+0xa618>
  412d70:	cmp    r8,0x8
  412d74:	jg     413878 <_start@@Base+0xd938>
  412d7a:	lea    r14,[r12+0x8]
  412d7f:	mov    r8,rbx
  412d82:	sub    r8,r14
  412d85:	cmp    r8,0x7
  412d89:	jbe    413ac0 <_start@@Base+0xdb80>
  412d8f:	movbe  rax,QWORD PTR [r12+0x8]
  412d96:	movabs rdx,0xff00000000000000
  412da0:	and    rax,rdx
  412da3:	movabs rdx,0x6100000000000000
  412dad:	cmp    rax,rdx
  412db0:	jne    413b0a <_start@@Base+0xdbca>
  412db6:	cmp    r8,0x1
  412dba:	jle    413c11 <_start@@Base+0xdcd1>
  412dc0:	mov    ecx,0x1
  412dc5:	mov    rdx,rbx
  412dc8:	mov    rsi,r14
  412dcb:	mov    rdi,rbp
  412dce:	call   409080 <_start@@Base+0x3140>
  412dd3:	cmp    r14,rax
  412dd6:	mov    r12,rax
  412dd9:	je     413c14 <_start@@Base+0xdcd4>
  412ddf:	mov    rcx,r13
  412de2:	mov    rdx,rbx
  412de5:	mov    rsi,rax
  412de8:	mov    rdi,rbp
  412deb:	mov    DWORD PTR [rsp+0x60],0x0
  412df3:	call   408760 <_start@@Base+0x2820>
  412df8:	cmp    rax,r12
  412dfb:	mov    r14,rax
  412dfe:	je     413d02 <_start@@Base+0xddc2>
  412e04:	mov    r15d,DWORD PTR [rsp+0x60]
  412e09:	test   r15d,r15d
  412e0c:	jne    412e18 <_start@@Base+0xced8>
  412e0e:	test   BYTE PTR [rbp+0x10],0x2
  412e12:	je     410558 <_start@@Base+0xa618>
  412e18:	mov    rdi,QWORD PTR [rbp+0x0]
  412e1c:	mov    ecx,0x4
  412e21:	mov    edx,0x4
  412e26:	mov    esi,0x15
  412e2b:	call   418c80 <flatcc_builder_table_add@@Base>
  412e30:	test   rax,rax
  412e33:	je     413ccd <_start@@Base+0xdd8d>
  412e39:	mov    edx,DWORD PTR [rsp+0x60]
  412e3d:	mov    DWORD PTR [rax],edx
  412e3f:	jmp    410558 <_start@@Base+0xa618>
  412e44:	nop    DWORD PTR [rax+0x0]
  412e48:	mov    ecx,0x7
  412e4d:	mov    rdx,rbx
  412e50:	mov    rsi,r12
  412e53:	mov    rdi,rbp
  412e56:	call   409080 <_start@@Base+0x3140>
  412e5b:	cmp    r12,rax
  412e5e:	mov    r14,rax
  412e61:	je     4108fc <_start@@Base+0xa9bc>
  412e67:	mov    rdi,QWORD PTR [rbp+0x0]
  412e6b:	mov    ecx,0x1fffffff
  412e70:	mov    edx,0x8
  412e75:	mov    esi,0x8
  412e7a:	call   4171c0 <flatcc_builder_start_vector@@Base>
  412e7f:	test   eax,eax
  412e81:	jne    410070 <_start@@Base+0xa130>
  412e87:	mov    r12,QWORD PTR [rsp+0x8]
  412e8c:	mov    rsi,r14
  412e8f:	mov    rdx,rbx
  412e92:	mov    rdi,rbp
  412e95:	mov    rcx,r12
  412e98:	call   4095c0 <_start@@Base+0x3680>
  412e9d:	mov    esi,DWORD PTR [rsp+0x40]
  412ea1:	mov    r14,rax
  412ea4:	test   esi,esi
  412ea6:	jne    412ed4 <_start@@Base+0xcf94>
  412ea8:	jmp    412f37 <_start@@Base+0xcff7>
  412ead:	nop    DWORD PTR [rax]
  412eb0:	mov    rdx,QWORD PTR [rsp+0x60]
  412eb5:	mov    rcx,r12
  412eb8:	mov    rsi,rax
  412ebb:	mov    rdi,rbp
  412ebe:	mov    QWORD PTR [r15],rdx
  412ec1:	mov    rdx,rbx
  412ec4:	call   40a680 <_start@@Base+0x4740>
  412ec9:	mov    ecx,DWORD PTR [rsp+0x40]
  412ecd:	mov    r14,rax
  412ed0:	test   ecx,ecx
  412ed2:	je     412f37 <_start@@Base+0xcff7>
  412ed4:	mov    rdi,QWORD PTR [rbp+0x0]
  412ed8:	mov    esi,0x1
  412edd:	mov    QWORD PTR [rsp+0x60],0x0
  412ee6:	call   416b20 <flatcc_builder_extend_vector@@Base>
  412eeb:	test   rax,rax
  412eee:	mov    r15,rax
  412ef1:	je     410070 <_start@@Base+0xa130>
  412ef7:	mov    rcx,r13
  412efa:	mov    rdx,rbx
  412efd:	mov    rsi,r14
  412f00:	mov    rdi,rbp
  412f03:	call   408ae0 <_start@@Base+0x2ba0>
  412f08:	cmp    rax,r14
  412f0b:	jne    412eb0 <_start@@Base+0xcf70>
  412f0d:	lea    rcx,[rip+0x2660c]        # 439520 <__data_start@@Base+0x460>
  412f14:	mov    r8,r13
  412f17:	mov    rdx,rbx
  412f1a:	mov    rsi,r14
  412f1d:	mov    rdi,rbp
  412f20:	call   40a260 <_start@@Base+0x4320>
  412f25:	cmp    rax,r14
  412f28:	je     412f2f <_start@@Base+0xcfef>
  412f2a:	cmp    rbx,rax
  412f2d:	jne    412eb0 <_start@@Base+0xcf70>
  412f2f:	mov    r14,rax
  412f32:	jmp    410070 <_start@@Base+0xa130>
  412f37:	mov    rdi,QWORD PTR [rbp+0x0]
  412f3b:	call   4180c0 <flatcc_builder_end_vector@@Base>
  412f40:	test   eax,eax
  412f42:	mov    DWORD PTR [rsp+0x44],eax
  412f46:	je     410070 <_start@@Base+0xa130>
  412f4c:	mov    rdi,QWORD PTR [rbp+0x0]
  412f50:	mov    esi,0x20
  412f55:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  412f5a:	test   rax,rax
  412f5d:	je     410070 <_start@@Base+0xa130>
  412f63:	mov    edx,DWORD PTR [rsp+0x44]
  412f67:	mov    DWORD PTR [rax],edx
  412f69:	jmp    410558 <_start@@Base+0xa618>
  412f6e:	lea    rcx,[rip+0x2622b]        # 4391a0 <__data_start@@Base+0xe0>
  412f75:	mov    rsi,r9
  412f78:	mov    r8,r13
  412f7b:	mov    rdx,rbx
  412f7e:	mov    rdi,rbp
  412f81:	call   409140 <_start@@Base+0x3200>
  412f86:	mov    r9,QWORD PTR [rsp+0x10]
  412f8b:	mov    r14,rax
  412f8e:	cmp    r9,rax
  412f91:	je     4127f7 <_start@@Base+0xc8b7>
  412f97:	cmp    rbx,rax
  412f9a:	jne    412690 <_start@@Base+0xc750>
  412fa0:	jmp    4127f7 <_start@@Base+0xc8b7>
  412fa5:	nop    DWORD PTR [rax]
  412fa8:	mov    ecx,0x7
  412fad:	mov    rdx,rbx
  412fb0:	mov    rsi,r12
  412fb3:	mov    rdi,rbp
  412fb6:	call   409080 <_start@@Base+0x3140>
  412fbb:	cmp    r12,rax
  412fbe:	mov    r14,rax
  412fc1:	je     410501 <_start@@Base+0xa5c1>
  412fc7:	mov    rdi,QWORD PTR [rbp+0x0]
  412fcb:	mov    ecx,0x1fffffff
  412fd0:	mov    edx,0x4
  412fd5:	mov    esi,0x8
  412fda:	call   4171c0 <flatcc_builder_start_vector@@Base>
  412fdf:	test   eax,eax
  412fe1:	jne    410070 <_start@@Base+0xa130>
  412fe7:	mov    rcx,QWORD PTR [rsp+0x8]
  412fec:	mov    rsi,r14
  412fef:	mov    rdx,rbx
  412ff2:	mov    rdi,rbp
  412ff5:	call   4095c0 <_start@@Base+0x3680>
  412ffa:	mov    r14,rax
  412ffd:	mov    eax,DWORD PTR [rsp+0x40]
  413001:	test   eax,eax
  413003:	je     413274 <_start@@Base+0xd334>
  413009:	lea    r15,[rsp+0x58]
  41300e:	mov    r12,r14
  413011:	mov    QWORD PTR [rsp+0x10],r13
  413016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413020:	mov    rdi,QWORD PTR [rbp+0x0]
  413024:	mov    esi,0x1
  413029:	call   416b20 <flatcc_builder_extend_vector@@Base>
  41302e:	test   rax,rax
  413031:	mov    r14,rax
  413034:	je     413324 <_start@@Base+0xd3e4>
  41303a:	mov    rcx,r15
  41303d:	mov    rdx,rbx
  413040:	mov    rsi,r12
  413043:	mov    rdi,rbp
  413046:	call   408fe0 <_start@@Base+0x30a0>
  41304b:	mov    r13,rax
  41304e:	mov    eax,DWORD PTR [rsp+0x58]
  413052:	test   eax,eax
  413054:	je     413248 <_start@@Base+0xd308>
  41305a:	mov    QWORD PTR [rsp+0x18],r14
  41305f:	movabs r12,0x6964000000000000
  413069:	mov    r14,r13
  41306c:	jmp    4130d7 <_start@@Base+0xd197>
  41306e:	xchg   ax,ax
  413070:	movbe  rax,QWORD PTR [r14]
  413075:	movabs rdx,0xffff000000000000
  41307f:	and    rdx,rax
  413082:	cmp    rdx,r12
  413085:	je     413120 <_start@@Base+0xd1e0>
  41308b:	movabs rcx,0x64697374616e6365
  413095:	cmp    rax,rcx
  413098:	jne    4130a4 <_start@@Base+0xd164>
  41309a:	cmp    r9,0x8
  41309e:	jg     413190 <_start@@Base+0xd250>
  4130a4:	mov    rsi,r14
  4130a7:	mov    rdx,rbx
  4130aa:	mov    rdi,rbp
  4130ad:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  4130b2:	mov    r14,rax
  4130b5:	mov    rsi,r14
  4130b8:	mov    rcx,r15
  4130bb:	mov    rdx,rbx
  4130be:	mov    rdi,rbp
  4130c1:	call   40a7d0 <_start@@Base+0x4890>
  4130c6:	mov    r13d,DWORD PTR [rsp+0x58]
  4130cb:	mov    r14,rax
  4130ce:	test   r13d,r13d
  4130d1:	je     4132b0 <_start@@Base+0xd370>
  4130d7:	cmp    rbx,r14
  4130da:	je     4131f0 <_start@@Base+0xd2b0>
  4130e0:	movzx  eax,BYTE PTR [r14]
  4130e4:	cmp    al,0x22
  4130e6:	je     413180 <_start@@Base+0xd240>
  4130ec:	cmp    al,0x2e
  4130ee:	je     413210 <_start@@Base+0xd2d0>
  4130f4:	mov    DWORD PTR [rbp+0x14],0x1
  4130fb:	mov    r9,rbx
  4130fe:	sub    r9,r14
  413101:	cmp    r9,0x7
  413105:	ja     413070 <_start@@Base+0xd130>
  41310b:	mov    rsi,rbx
  41310e:	mov    rdi,r14
  413111:	call   406050 <_start@@Base+0x110>
  413116:	jmp    413075 <_start@@Base+0xd135>
  41311b:	nop    DWORD PTR [rax+rax*1+0x0]
  413120:	cmp    r9,0x2
  413124:	jle    4130a4 <_start@@Base+0xd164>
  41312a:	mov    ecx,0x2
  41312f:	mov    rdx,rbx
  413132:	mov    rsi,r14
  413135:	mov    rdi,rbp
  413138:	call   409080 <_start@@Base+0x3140>
  41313d:	cmp    rax,r14
  413140:	mov    r13,rax
  413143:	je     4130a4 <_start@@Base+0xd164>
  413149:	mov    rcx,QWORD PTR [rsp+0x10]
  41314e:	mov    rdx,rbx
  413151:	mov    rsi,rax
  413154:	mov    rdi,rbp
  413157:	mov    DWORD PTR [rsp+0x60],0x0
  41315f:	call   408760 <_start@@Base+0x2820>
  413164:	cmp    r13,rax
  413167:	mov    r14,rax
  41316a:	je     4132f0 <_start@@Base+0xd3b0>
  413170:	mov    eax,DWORD PTR [rsp+0x60]
  413174:	mov    rcx,QWORD PTR [rsp+0x18]
  413179:	mov    DWORD PTR [rcx],eax
  41317b:	jmp    4130b5 <_start@@Base+0xd175>
  413180:	add    r14,0x1
  413184:	mov    DWORD PTR [rbp+0x14],0x0
  41318b:	jmp    4130fb <_start@@Base+0xd1bb>
  413190:	mov    ecx,0x8
  413195:	mov    rdx,rbx
  413198:	mov    rsi,r14
  41319b:	mov    rdi,rbp
  41319e:	call   409080 <_start@@Base+0x3140>
  4131a3:	cmp    rax,r14
  4131a6:	mov    r13,rax
  4131a9:	je     4130a4 <_start@@Base+0xd164>
  4131af:	mov    rcx,QWORD PTR [rsp+0x10]
  4131b4:	mov    rdx,rbx
  4131b7:	mov    rsi,rax
  4131ba:	mov    rdi,rbp
  4131bd:	mov    DWORD PTR [rsp+0x60],0x0
  4131c5:	call   408760 <_start@@Base+0x2820>
  4131ca:	cmp    r13,rax
  4131cd:	mov    r14,rax
  4131d0:	je     4132b8 <_start@@Base+0xd378>
  4131d6:	mov    eax,DWORD PTR [rsp+0x60]
  4131da:	mov    rcx,QWORD PTR [rsp+0x18]
  4131df:	mov    DWORD PTR [rcx+0x4],eax
  4131e2:	jmp    4130b5 <_start@@Base+0xd175>
  4131e7:	nop    WORD PTR [rax+rax*1+0x0]
  4131f0:	mov    r14,rbx
  4131f3:	mov    rsi,rbx
  4131f6:	xor    r9d,r9d
  4131f9:	mov    rdi,r14
  4131fc:	call   406050 <_start@@Base+0x110>
  413201:	jmp    413075 <_start@@Base+0xd135>
  413206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413210:	mov    rsi,r14
  413213:	mov    ecx,0x5
  413218:	mov    rdx,rbx
  41321b:	mov    rdi,rbp
  41321e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  413223:	mov    r14,rax
  413226:	jmp    4130fb <_start@@Base+0xd1bb>
  41322b:	mov    ecx,0x21
  413230:	mov    rdx,rbx
  413233:	mov    rsi,rax
  413236:	mov    rdi,rbp
  413239:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41323e:	mov    r13,rax
  413241:	nop    DWORD PTR [rax+0x0]
  413248:	mov    rcx,QWORD PTR [rsp+0x8]
  41324d:	mov    rdx,rbx
  413250:	mov    rsi,r13
  413253:	mov    rdi,rbp
  413256:	call   40a680 <_start@@Base+0x4740>
  41325b:	mov    r11d,DWORD PTR [rsp+0x40]
  413260:	mov    r12,rax
  413263:	test   r11d,r11d
  413266:	jne    413020 <_start@@Base+0xd0e0>
  41326c:	mov    r13,QWORD PTR [rsp+0x10]
  413271:	mov    r14,rax
  413274:	mov    rdi,QWORD PTR [rbp+0x0]
  413278:	call   4180c0 <flatcc_builder_end_vector@@Base>
  41327d:	test   eax,eax
  41327f:	mov    DWORD PTR [rsp+0x44],eax
  413283:	je     410070 <_start@@Base+0xa130>
  413289:	mov    rdi,QWORD PTR [rbp+0x0]
  41328d:	mov    esi,0x1d
  413292:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  413297:	test   rax,rax
  41329a:	je     410070 <_start@@Base+0xa130>
  4132a0:	mov    edx,DWORD PTR [rsp+0x44]
  4132a4:	mov    DWORD PTR [rax],edx
  4132a6:	jmp    410558 <_start@@Base+0xa618>
  4132ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4132b0:	mov    r13,rax
  4132b3:	jmp    413248 <_start@@Base+0xd308>
  4132b5:	nop    DWORD PTR [rax]
  4132b8:	mov    r8,QWORD PTR [rsp+0x10]
  4132bd:	lea    rcx,[rip+0x25e5c]        # 439120 <__data_start@@Base+0x60>
  4132c4:	mov    rdx,rbx
  4132c7:	mov    rsi,rax
  4132ca:	mov    rdi,rbp
  4132cd:	call   409a50 <_start@@Base+0x3b10>
  4132d2:	cmp    r14,rax
  4132d5:	je     41322b <_start@@Base+0xd2eb>
  4132db:	cmp    rbx,rax
  4132de:	je     41322b <_start@@Base+0xd2eb>
  4132e4:	mov    r14,rax
  4132e7:	jmp    4131d6 <_start@@Base+0xd296>
  4132ec:	nop    DWORD PTR [rax+0x0]
  4132f0:	mov    r8,QWORD PTR [rsp+0x10]
  4132f5:	lea    rcx,[rip+0x25e44]        # 439140 <__data_start@@Base+0x80>
  4132fc:	mov    rdx,rbx
  4132ff:	mov    rsi,rax
  413302:	mov    rdi,rbp
  413305:	call   409a50 <_start@@Base+0x3b10>
  41330a:	cmp    r14,rax
  41330d:	je     41322b <_start@@Base+0xd2eb>
  413313:	cmp    rbx,rax
  413316:	je     41322b <_start@@Base+0xd2eb>
  41331c:	mov    r14,rax
  41331f:	jmp    413170 <_start@@Base+0xd230>
  413324:	mov    r14,r12
  413327:	jmp    410070 <_start@@Base+0xa130>
  41332c:	mov    rdx,rbx
  41332f:	mov    rsi,r12
  413332:	mov    rdi,rbp
  413335:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41333a:	mov    r14,rax
  41333d:	jmp    410558 <_start@@Base+0xa618>
  413342:	lea    rcx,[rip+0x25e77]        # 4391c0 <__data_start@@Base+0x100>
  413349:	mov    r8,r13
  41334c:	mov    rdx,rbx
  41334f:	mov    rsi,rax
  413352:	mov    rdi,rbp
  413355:	call   409140 <_start@@Base+0x3200>
  41335a:	cmp    r14,rax
  41335d:	mov    r14,rax
  413360:	je     4127f7 <_start@@Base+0xc8b7>
  413366:	cmp    rbx,rax
  413369:	jne    4127bd <_start@@Base+0xc87d>
  41336f:	jmp    4127f7 <_start@@Base+0xc8b7>
  413374:	nop    DWORD PTR [rax+0x0]
  413378:	mov    rdi,QWORD PTR [rbp+0x0]
  41337c:	call   4181d0 <flatcc_builder_end_offset_vector@@Base>
  413381:	test   eax,eax
  413383:	mov    DWORD PTR [rsp+0x44],eax
  413387:	je     410070 <_start@@Base+0xa130>
  41338d:	mov    rdi,QWORD PTR [rbp+0x0]
  413391:	mov    esi,0xb
  413396:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  41339b:	test   rax,rax
  41339e:	je     410070 <_start@@Base+0xa130>
  4133a4:	mov    edx,DWORD PTR [rsp+0x44]
  4133a8:	mov    DWORD PTR [rax],edx
  4133aa:	jmp    410558 <_start@@Base+0xa618>
  4133af:	mov    rdi,QWORD PTR [rbp+0x0]
  4133b3:	call   4180c0 <flatcc_builder_end_vector@@Base>
  4133b8:	test   eax,eax
  4133ba:	mov    DWORD PTR [rsp+0x44],eax
  4133be:	je     410070 <_start@@Base+0xa130>
  4133c4:	mov    rdi,QWORD PTR [rbp+0x0]
  4133c8:	mov    esi,0x5
  4133cd:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  4133d2:	test   rax,rax
  4133d5:	je     410070 <_start@@Base+0xa130>
  4133db:	mov    edx,DWORD PTR [rsp+0x44]
  4133df:	mov    DWORD PTR [rax],edx
  4133e1:	jmp    410558 <_start@@Base+0xa618>
  4133e6:	mov    ecx,0x4
  4133eb:	mov    rdx,rbx
  4133ee:	mov    rsi,r12
  4133f1:	mov    rdi,rbp
  4133f4:	call   409080 <_start@@Base+0x3140>
  4133f9:	cmp    r12,rax
  4133fc:	mov    r14,rax
  4133ff:	je     410407 <_start@@Base+0xa4c7>
  413405:	cmp    rbx,rax
  413408:	je     413413 <_start@@Base+0xd4d3>
  41340a:	cmp    BYTE PTR [rax],0x5b
  41340d:	je     41399e <_start@@Base+0xda5e>
  413413:	mov    rdi,QWORD PTR [rbp+0x0]
  413417:	xor    ecx,ecx
  413419:	xor    edx,edx
  41341b:	xor    esi,esi
  41341d:	call   416770 <flatcc_builder_start_buffer@@Base>
  413422:	test   eax,eax
  413424:	jne    410070 <_start@@Base+0xa130>
  41342a:	lea    r12,[rsp+0x44]
  41342f:	mov    rsi,r14
  413432:	mov    rdx,rbx
  413435:	mov    rdi,rbp
  413438:	mov    rcx,r12
  41343b:	call   40fde0 <_start@@Base+0x9ea0>
  413440:	mov    esi,DWORD PTR [rsp+0x44]
  413444:	mov    r14,rax
  413447:	test   esi,esi
  413449:	je     410070 <_start@@Base+0xa130>
  41344f:	mov    rdi,QWORD PTR [rbp+0x0]
  413453:	call   416850 <flatcc_builder_end_buffer@@Base>
  413458:	mov    DWORD PTR [rsp+0x44],eax
  41345c:	test   eax,eax
  41345e:	je     410070 <_start@@Base+0xa130>
  413464:	mov    rdi,QWORD PTR [rbp+0x0]
  413468:	mov    esi,0xd
  41346d:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  413472:	test   rax,rax
  413475:	je     410070 <_start@@Base+0xa130>
  41347b:	mov    edx,DWORD PTR [rsp+0x44]
  41347f:	mov    DWORD PTR [rax],edx
  413481:	jmp    410558 <_start@@Base+0xa618>
  413486:	mov    ecx,0x8
  41348b:	mov    rdx,rbx
  41348e:	mov    rsi,r12
  413491:	mov    rdi,rbp
  413494:	call   409080 <_start@@Base+0x3140>
  413499:	cmp    r12,rax
  41349c:	mov    r15,rax
  41349f:	je     4111d7 <_start@@Base+0xb297>
  4134a5:	mov    rcx,r13
  4134a8:	mov    rdx,rbx
  4134ab:	mov    rsi,rax
  4134ae:	mov    rdi,rbp
  4134b1:	mov    QWORD PTR [rsp+0x60],0x0
  4134ba:	call   408ae0 <_start@@Base+0x2ba0>
  4134bf:	cmp    rax,r15
  4134c2:	mov    r14,rax
  4134c5:	je     413bc6 <_start@@Base+0xdc86>
  4134cb:	cmp    QWORD PTR [rsp+0x60],0x0
  4134d1:	jne    4134dd <_start@@Base+0xd59d>
  4134d3:	test   BYTE PTR [rbp+0x10],0x2
  4134d7:	je     410558 <_start@@Base+0xa618>
  4134dd:	mov    rdi,QWORD PTR [rbp+0x0]
  4134e1:	mov    ecx,0x8
  4134e6:	mov    edx,0x8
  4134eb:	mov    esi,0x12
  4134f0:	call   418c80 <flatcc_builder_table_add@@Base>
  4134f5:	test   rax,rax
  4134f8:	je     413d2c <_start@@Base+0xddec>
  4134fe:	mov    rdx,QWORD PTR [rsp+0x60]
  413503:	mov    QWORD PTR [rax],rdx
  413506:	jmp    410558 <_start@@Base+0xa618>
  41350b:	mov    rsi,r14
  41350e:	mov    rdx,rbx
  413511:	mov    rdi,rbp
  413514:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413519:	mov    r14,rax
  41351c:	jmp    410558 <_start@@Base+0xa618>
  413521:	mov    rsi,rbx
  413524:	mov    rdi,r14
  413527:	call   406050 <_start@@Base+0x110>
  41352c:	jmp    4112d9 <_start@@Base+0xb399>
  413531:	mov    ecx,0x5
  413536:	mov    rdx,rbx
  413539:	mov    rsi,r12
  41353c:	mov    rdi,rbp
  41353f:	call   409080 <_start@@Base+0x3140>
  413544:	cmp    r12,rax
  413547:	je     410c3b <_start@@Base+0xacfb>
  41354d:	lea    r12,[rsp+0x44]
  413552:	mov    rdi,rbp
  413555:	mov    rdx,rbx
  413558:	mov    rsi,rax
  41355b:	mov    rcx,r12
  41355e:	call   40faf0 <_start@@Base+0x9bb0>
  413563:	mov    edi,DWORD PTR [rsp+0x44]
  413567:	mov    r14,rax
  41356a:	test   edi,edi
  41356c:	je     410070 <_start@@Base+0xa130>
  413572:	mov    rdi,QWORD PTR [rbp+0x0]
  413576:	mov    esi,0x22
  41357b:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  413580:	test   rax,rax
  413583:	je     410070 <_start@@Base+0xa130>
  413589:	mov    edx,DWORD PTR [rsp+0x44]
  41358d:	mov    DWORD PTR [rax],edx
  41358f:	jmp    410558 <_start@@Base+0xa618>
  413594:	mov    rdi,QWORD PTR [rbp+0x0]
  413598:	call   4180c0 <flatcc_builder_end_vector@@Base>
  41359d:	test   eax,eax
  41359f:	mov    DWORD PTR [rsp+0x44],eax
  4135a3:	je     410070 <_start@@Base+0xa130>
  4135a9:	mov    rdi,QWORD PTR [rbp+0x0]
  4135ad:	mov    esi,0x21
  4135b2:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  4135b7:	test   rax,rax
  4135ba:	je     410070 <_start@@Base+0xa130>
  4135c0:	mov    edx,DWORD PTR [rsp+0x44]
  4135c4:	mov    DWORD PTR [rax],edx
  4135c6:	jmp    410558 <_start@@Base+0xa618>
  4135cb:	lea    rcx,[rip+0x25b0e]        # 4390e0 <__data_start@@Base+0x20>
  4135d2:	mov    r8,r13
  4135d5:	mov    rdx,rbx
  4135d8:	mov    rsi,rax
  4135db:	mov    rdi,rbp
  4135de:	call   40a260 <_start@@Base+0x4320>
  4135e3:	cmp    r14,rax
  4135e6:	je     4120a4 <_start@@Base+0xc164>
  4135ec:	cmp    rbx,rax
  4135ef:	je     4120a4 <_start@@Base+0xc164>
  4135f5:	mov    r14,rax
  4135f8:	jmp    4117bf <_start@@Base+0xb87f>
  4135fd:	lea    rcx,[rip+0x2617c]        # 439780 <__data_start@@Base+0x6c0>
  413604:	mov    r8,r13
  413607:	mov    rdx,rbx
  41360a:	mov    rsi,rax
  41360d:	mov    rdi,rbp
  413610:	call   409c50 <_start@@Base+0x3d10>
  413615:	cmp    r14,rax
  413618:	mov    r14,rax
  41361b:	je     410070 <_start@@Base+0xa130>
  413621:	cmp    rbx,rax
  413624:	jne    4114b1 <_start@@Base+0xb571>
  41362a:	jmp    410070 <_start@@Base+0xa130>
  41362f:	nop
  413630:	mov    rdi,QWORD PTR [rbp+0x0]
  413634:	call   4181d0 <flatcc_builder_end_offset_vector@@Base>
  413639:	test   eax,eax
  41363b:	mov    DWORD PTR [rsp+0x44],eax
  41363f:	je     410070 <_start@@Base+0xa130>
  413645:	mov    rdi,QWORD PTR [rbp+0x0]
  413649:	mov    esi,0xa
  41364e:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  413653:	test   rax,rax
  413656:	je     410070 <_start@@Base+0xa130>
  41365c:	mov    edx,DWORD PTR [rsp+0x44]
  413660:	mov    DWORD PTR [rax],edx
  413662:	jmp    410558 <_start@@Base+0xa618>
  413667:	mov    ecx,0x8
  41366c:	mov    rdx,rbx
  41366f:	mov    rsi,r12
  413672:	mov    rdi,rbp
  413675:	call   409080 <_start@@Base+0x3140>
  41367a:	cmp    r12,rax
  41367d:	mov    r15,rax
  413680:	je     410ed9 <_start@@Base+0xaf99>
  413686:	cmp    rbx,rax
  413689:	mov    QWORD PTR [rsp+0x58],0x0
  413692:	mov    QWORD PTR [rsp+0x60],0x0
  41369b:	mov    DWORD PTR [rsp+0x4c],0x0
  4136a3:	je     413b7b <_start@@Base+0xdc3b>
  4136a9:	lea    rcx,[rsp+0x4c]
  4136ae:	mov    r8,r13
  4136b1:	mov    rdx,rbx
  4136b4:	mov    rsi,rax
  4136b7:	mov    rdi,rbp
  4136ba:	call   41df90 <flatcc_json_parser_integer@@Base>
  4136bf:	cmp    r15,rax
  4136c2:	mov    r14,rax
  4136c5:	je     413b7b <_start@@Base+0xdc3b>
  4136cb:	mov    r12d,DWORD PTR [rsp+0x4c]
  4136d0:	test   r12d,r12d
  4136d3:	jne    413b36 <_start@@Base+0xdbf6>
  4136d9:	mov    rax,QWORD PTR [rsp+0x60]
  4136de:	mov    QWORD PTR [rsp+0x58],rax
  4136e3:	test   rax,rax
  4136e6:	jne    4136f2 <_start@@Base+0xd7b2>
  4136e8:	test   BYTE PTR [rbp+0x10],0x2
  4136ec:	je     410558 <_start@@Base+0xa618>
  4136f2:	mov    rdi,QWORD PTR [rbp+0x0]
  4136f6:	mov    ecx,0x8
  4136fb:	mov    edx,0x8
  413700:	mov    esi,0x13
  413705:	call   418c80 <flatcc_builder_table_add@@Base>
  41370a:	test   rax,rax
  41370d:	je     410070 <_start@@Base+0xa130>
  413713:	mov    rdx,QWORD PTR [rsp+0x58]
  413718:	mov    QWORD PTR [rax],rdx
  41371b:	jmp    410558 <_start@@Base+0xa618>
  413720:	lea    rcx,[rip+0x25f79]        # 4396a0 <__data_start@@Base+0x5e0>
  413727:	mov    r8,r13
  41372a:	mov    rdx,rbx
  41372d:	mov    rsi,rax
  413730:	mov    rdi,rbp
  413733:	call   409140 <_start@@Base+0x3200>
  413738:	cmp    r14,rax
  41373b:	mov    r14,rax
  41373e:	je     410070 <_start@@Base+0xa130>
  413744:	cmp    rbx,rax
  413747:	jne    4129b5 <_start@@Base+0xca75>
  41374d:	jmp    410070 <_start@@Base+0xa130>
  413752:	nop    WORD PTR [rax+rax*1+0x0]
  413758:	mov    rdx,rbx
  41375b:	mov    rsi,r12
  41375e:	mov    rdi,rbp
  413761:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413766:	mov    r14,rax
  413769:	jmp    410558 <_start@@Base+0xa618>
  41376e:	lea    rcx,[rip+0x25f4b]        # 4396c0 <__data_start@@Base+0x600>
  413775:	mov    r8,r13
  413778:	mov    rdx,rbx
  41377b:	mov    rsi,rax
  41377e:	mov    rdi,rbp
  413781:	call   409140 <_start@@Base+0x3200>
  413786:	cmp    r14,rax
  413789:	mov    r14,rax
  41378c:	je     410070 <_start@@Base+0xa130>
  413792:	cmp    rbx,rax
  413795:	jne    411535 <_start@@Base+0xb5f5>
  41379b:	jmp    410070 <_start@@Base+0xa130>
  4137a0:	mov    ecx,0x2
  4137a5:	mov    rdx,rbx
  4137a8:	mov    rsi,r12
  4137ab:	mov    rdi,rbp
  4137ae:	call   409080 <_start@@Base+0x3140>
  4137b3:	cmp    r12,rax
  4137b6:	mov    r14,rax
  4137b9:	je     412cb1 <_start@@Base+0xcd71>
  4137bf:	mov    rdi,QWORD PTR [rbp+0x0]
  4137c3:	call   417240 <flatcc_builder_start_offset_vector@@Base>
  4137c8:	test   eax,eax
  4137ca:	jne    410070 <_start@@Base+0xa130>
  4137d0:	mov    r15,QWORD PTR [rsp+0x8]
  4137d5:	mov    rsi,r14
  4137d8:	mov    rdx,rbx
  4137db:	mov    rdi,rbp
  4137de:	mov    rcx,r15
  4137e1:	call   4095c0 <_start@@Base+0x3680>
  4137e6:	mov    r10d,DWORD PTR [rsp+0x40]
  4137eb:	mov    r14,rax
  4137ee:	test   r10d,r10d
  4137f1:	je     4138fa <_start@@Base+0xd9ba>
  4137f7:	lea    r12,[rsp+0x44]
  4137fc:	jmp    41383f <_start@@Base+0xd8ff>
  4137fe:	xchg   ax,ax
  413800:	mov    rdi,QWORD PTR [rbp+0x0]
  413804:	mov    esi,0x1
  413809:	call   416d00 <flatcc_builder_extend_offset_vector@@Base>
  41380e:	test   rax,rax
  413811:	je     410070 <_start@@Base+0xa130>
  413817:	mov    edx,DWORD PTR [rsp+0x44]
  41381b:	mov    rsi,r14
  41381e:	mov    rcx,r15
  413821:	mov    rdi,rbp
  413824:	mov    DWORD PTR [rax],edx
  413826:	mov    rdx,rbx
  413829:	call   40a680 <_start@@Base+0x4740>
  41382e:	mov    r8d,DWORD PTR [rsp+0x40]
  413833:	mov    r14,rax
  413836:	test   r8d,r8d
  413839:	je     4138fa <_start@@Base+0xd9ba>
  41383f:	mov    rsi,r14
  413842:	mov    rcx,r12
  413845:	mov    rdx,rbx
  413848:	mov    rdi,rbp
  41384b:	call   41e450 <flatcc_json_parser_build_string@@Base>
  413850:	mov    r9d,DWORD PTR [rsp+0x44]
  413855:	mov    r14,rax
  413858:	test   r9d,r9d
  41385b:	jne    413800 <_start@@Base+0xd8c0>
  41385d:	jmp    410070 <_start@@Base+0xa130>
  413862:	mov    rsi,r14
  413865:	mov    rdx,rbx
  413868:	mov    rdi,rbp
  41386b:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413870:	mov    r14,rax
  413873:	jmp    410558 <_start@@Base+0xa618>
  413878:	mov    ecx,0x8
  41387d:	mov    rdx,rbx
  413880:	mov    rsi,r12
  413883:	mov    rdi,rbp
  413886:	call   409080 <_start@@Base+0x3140>
  41388b:	cmp    r12,rax
  41388e:	mov    r15,rax
  413891:	je     412d7a <_start@@Base+0xce3a>
  413897:	mov    rcx,r13
  41389a:	mov    rdx,rbx
  41389d:	mov    rsi,rax
  4138a0:	mov    rdi,rbp
  4138a3:	mov    DWORD PTR [rsp+0x60],0x0
  4138ab:	call   408760 <_start@@Base+0x2820>
  4138b0:	cmp    rax,r15
  4138b3:	mov    r14,rax
  4138b6:	je     413c35 <_start@@Base+0xdcf5>
  4138bc:	mov    eax,DWORD PTR [rsp+0x60]
  4138c0:	test   eax,eax
  4138c2:	jne    4138ce <_start@@Base+0xd98e>
  4138c4:	test   BYTE PTR [rbp+0x10],0x2
  4138c8:	je     410558 <_start@@Base+0xa618>
  4138ce:	mov    rdi,QWORD PTR [rbp+0x0]
  4138d2:	mov    ecx,0x4
  4138d7:	mov    edx,0x4
  4138dc:	mov    esi,0x11
  4138e1:	call   418c80 <flatcc_builder_table_add@@Base>
  4138e6:	test   rax,rax
  4138e9:	je     413d69 <_start@@Base+0xde29>
  4138ef:	mov    edx,DWORD PTR [rsp+0x60]
  4138f3:	mov    DWORD PTR [rax],edx
  4138f5:	jmp    410558 <_start@@Base+0xa618>
  4138fa:	mov    rdi,QWORD PTR [rbp+0x0]
  4138fe:	call   4181d0 <flatcc_builder_end_offset_vector@@Base>
  413903:	test   eax,eax
  413905:	mov    DWORD PTR [rsp+0x44],eax
  413909:	je     410070 <_start@@Base+0xa130>
  41390f:	mov    rdi,QWORD PTR [rbp+0x0]
  413913:	mov    esi,0x1c
  413918:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  41391d:	test   rax,rax
  413920:	je     410070 <_start@@Base+0xa130>
  413926:	mov    edx,DWORD PTR [rsp+0x44]
  41392a:	mov    DWORD PTR [rax],edx
  41392c:	jmp    410558 <_start@@Base+0xa618>
  413931:	mov    rdx,rbx
  413934:	mov    rsi,r12
  413937:	mov    rdi,rbp
  41393a:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  41393f:	mov    r14,rax
  413942:	jmp    410558 <_start@@Base+0xa618>
  413947:	lea    rcx,[rip+0x25df2]        # 439740 <__data_start@@Base+0x680>
  41394e:	mov    r8,r13
  413951:	mov    rdx,rbx
  413954:	mov    rsi,rax
  413957:	mov    rdi,rbp
  41395a:	call   409c50 <_start@@Base+0x3d10>
  41395f:	cmp    r14,rax
  413962:	mov    r14,rax
  413965:	je     410070 <_start@@Base+0xa130>
  41396b:	cmp    rbx,rax
  41396e:	jne    412b7f <_start@@Base+0xcc3f>
  413974:	jmp    410070 <_start@@Base+0xa130>
  413979:	nop    DWORD PTR [rax+0x0]
  413980:	mov    r14,r12
  413983:	jmp    410070 <_start@@Base+0xa130>
  413988:	mov    rsi,r14
  41398b:	mov    rdx,rbx
  41398e:	mov    rdi,rbp
  413991:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413996:	mov    r14,rax
  413999:	jmp    410558 <_start@@Base+0xa618>
  41399e:	mov    rdi,QWORD PTR [rbp+0x0]
  4139a2:	mov    ecx,0xffffffff
  4139a7:	mov    edx,0x1
  4139ac:	mov    esi,0x1
  4139b1:	call   4171c0 <flatcc_builder_start_vector@@Base>
  4139b6:	test   eax,eax
  4139b8:	jne    410070 <_start@@Base+0xa130>
  4139be:	mov    r12,QWORD PTR [rsp+0x8]
  4139c3:	mov    rsi,r14
  4139c6:	mov    rdx,rbx
  4139c9:	mov    rdi,rbp
  4139cc:	mov    rcx,r12
  4139cf:	call   4095c0 <_start@@Base+0x3680>
  4139d4:	mov    r10d,DWORD PTR [rsp+0x40]
  4139d9:	mov    r14,rax
  4139dc:	test   r10d,r10d
  4139df:	jne    413a1a <_start@@Base+0xdada>
  4139e1:	jmp    413aae <_start@@Base+0xdb6e>
  4139e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139f0:	movzx  edx,BYTE PTR [rsp+0x60]
  4139f5:	mov    rcx,r12
  4139f8:	mov    rsi,rax
  4139fb:	mov    rdi,rbp
  4139fe:	mov    BYTE PTR [r15],dl
  413a01:	mov    rdx,rbx
  413a04:	call   40a680 <_start@@Base+0x4740>
  413a09:	mov    r9d,DWORD PTR [rsp+0x40]
  413a0e:	mov    r14,rax
  413a11:	test   r9d,r9d
  413a14:	je     413aae <_start@@Base+0xdb6e>
  413a1a:	mov    rdi,QWORD PTR [rbp+0x0]
  413a1e:	mov    esi,0x1
  413a23:	mov    BYTE PTR [rsp+0x60],0x0
  413a28:	call   416b20 <flatcc_builder_extend_vector@@Base>
  413a2d:	test   rax,rax
  413a30:	mov    r15,rax
  413a33:	je     410070 <_start@@Base+0xa130>
  413a39:	mov    rcx,r13
  413a3c:	mov    rdx,rbx
  413a3f:	mov    rsi,r14
  413a42:	mov    rdi,rbp
  413a45:	call   408830 <_start@@Base+0x28f0>
  413a4a:	cmp    rax,r14
  413a4d:	jne    4139f0 <_start@@Base+0xdab0>
  413a4f:	lea    rcx,[rip+0x25b0a]        # 439560 <__data_start@@Base+0x4a0>
  413a56:	mov    r8,r13
  413a59:	mov    rdx,rbx
  413a5c:	mov    rsi,r14
  413a5f:	mov    rdi,rbp
  413a62:	call   40a060 <_start@@Base+0x4120>
  413a67:	cmp    rax,r14
  413a6a:	je     413a75 <_start@@Base+0xdb35>
  413a6c:	cmp    rbx,rax
  413a6f:	jne    4139f0 <_start@@Base+0xdab0>
  413a75:	mov    r14,rax
  413a78:	jmp    410070 <_start@@Base+0xa130>
  413a7d:	nop    DWORD PTR [rax]
  413a80:	mov    rsi,rbx
  413a83:	mov    rdi,r14
  413a86:	call   406050 <_start@@Base+0x110>
  413a8b:	jmp    4111f3 <_start@@Base+0xb2b3>
  413a90:	mov    rdx,rbx
  413a93:	mov    rsi,r12
  413a96:	mov    rdi,rbp
  413a99:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413a9e:	mov    r14,rax
  413aa1:	jmp    410558 <_start@@Base+0xa618>
  413aa6:	mov    r14,r12
  413aa9:	jmp    410070 <_start@@Base+0xa130>
  413aae:	mov    rdi,QWORD PTR [rbp+0x0]
  413ab2:	call   4180c0 <flatcc_builder_end_vector@@Base>
  413ab7:	mov    DWORD PTR [rsp+0x44],eax
  413abb:	jmp    41345c <_start@@Base+0xd51c>
  413ac0:	mov    rsi,rbx
  413ac3:	mov    rdi,r14
  413ac6:	call   406050 <_start@@Base+0x110>
  413acb:	jmp    412d96 <_start@@Base+0xce56>
  413ad0:	lea    rcx,[rip+0x25b89]        # 439660 <__data_start@@Base+0x5a0>
  413ad7:	mov    r8,r13
  413ada:	mov    rdx,rbx
  413add:	mov    rsi,rax
  413ae0:	mov    rdi,rbp
  413ae3:	call   409840 <_start@@Base+0x3900>
  413ae8:	cmp    r14,rax
  413aeb:	je     413cba <_start@@Base+0xdd7a>
  413af1:	cmp    rbx,rax
  413af4:	je     413cba <_start@@Base+0xdd7a>
  413afa:	mov    r14,rax
  413afd:	jmp    412d32 <_start@@Base+0xcdf2>
  413b02:	mov    r14,r12
  413b05:	jmp    410070 <_start@@Base+0xa130>
  413b0a:	mov    rsi,r14
  413b0d:	mov    rdx,rbx
  413b10:	mov    rdi,rbp
  413b13:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413b18:	mov    r14,rax
  413b1b:	jmp    410558 <_start@@Base+0xa618>
  413b20:	mov    rdx,rbx
  413b23:	mov    rsi,r12
  413b26:	mov    rdi,rbp
  413b29:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413b2e:	mov    r14,rax
  413b31:	jmp    410558 <_start@@Base+0xa618>
  413b36:	mov    ecx,0x8
  413b3b:	mov    rdx,rbx
  413b3e:	mov    rsi,rax
  413b41:	mov    rdi,rbp
  413b44:	call   41c420 <flatcc_json_parser_set_error@@Base>
  413b49:	cmp    r15,rax
  413b4c:	mov    r14,rax
  413b4f:	je     413b78 <_start@@Base+0xdc38>
  413b51:	mov    rax,QWORD PTR [rsp+0x58]
  413b56:	jmp    4136e3 <_start@@Base+0xd7a3>
  413b5b:	mov    r15,QWORD PTR [rsp+0x10]
  413b60:	mov    r14,r15
  413b63:	jmp    410070 <_start@@Base+0xa130>
  413b68:	mov    rsi,rbx
  413b6b:	mov    rdi,r14
  413b6e:	call   406050 <_start@@Base+0x110>
  413b73:	jmp    410ef5 <_start@@Base+0xafb5>
  413b78:	mov    r15,rax
  413b7b:	lea    r8,[rsp+0x58]
  413b80:	lea    rcx,[rip+0x25a19]        # 4395a0 <__data_start@@Base+0x4e0>
  413b87:	mov    rdx,rbx
  413b8a:	mov    rsi,r15
  413b8d:	mov    rdi,rbp
  413b90:	call   405160 <__sprintf_chk@plt+0x10>
  413b95:	cmp    rax,r15
  413b98:	mov    r14,rax
  413b9b:	je     410070 <_start@@Base+0xa130>
  413ba1:	cmp    rbx,rax
  413ba4:	jne    413b51 <_start@@Base+0xdc11>
  413ba6:	jmp    410070 <_start@@Base+0xa130>
  413bab:	nop    DWORD PTR [rax+rax*1+0x0]
  413bb0:	mov    rsi,r14
  413bb3:	mov    rdx,rbx
  413bb6:	mov    rdi,rbp
  413bb9:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413bbe:	mov    r14,rax
  413bc1:	jmp    410558 <_start@@Base+0xa618>
  413bc6:	lea    rcx,[rip+0x25a53]        # 439620 <__data_start@@Base+0x560>
  413bcd:	mov    r8,r13
  413bd0:	mov    rdx,rbx
  413bd3:	mov    rsi,rax
  413bd6:	mov    rdi,rbp
  413bd9:	call   40a260 <_start@@Base+0x4320>
  413bde:	cmp    r14,rax
  413be1:	je     413d2f <_start@@Base+0xddef>
  413be7:	cmp    rbx,rax
  413bea:	je     413d2f <_start@@Base+0xddef>
  413bf0:	mov    r14,rax
  413bf3:	jmp    4134cb <_start@@Base+0xd58b>
  413bf8:	mov    r12,r14
  413bfb:	mov    rdx,rbx
  413bfe:	mov    rsi,r12
  413c01:	mov    rdi,rbp
  413c04:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413c09:	mov    r14,rax
  413c0c:	jmp    410558 <_start@@Base+0xa618>
  413c11:	mov    r12,r14
  413c14:	mov    rdx,rbx
  413c17:	mov    rsi,r12
  413c1a:	mov    rdi,rbp
  413c1d:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413c22:	mov    r14,rax
  413c25:	jmp    410558 <_start@@Base+0xa618>
  413c2a:	nop    WORD PTR [rax+rax*1+0x0]
  413c30:	call   405070 <__stack_chk_fail@plt>
  413c35:	lea    rcx,[rip+0x259a4]        # 4395e0 <__data_start@@Base+0x520>
  413c3c:	mov    r8,r13
  413c3f:	mov    rdx,rbx
  413c42:	mov    rsi,rax
  413c45:	mov    rdi,rbp
  413c48:	call   409a50 <_start@@Base+0x3b10>
  413c4d:	cmp    r14,rax
  413c50:	je     413d6c <_start@@Base+0xde2c>
  413c56:	cmp    rbx,rax
  413c59:	je     413d6c <_start@@Base+0xde2c>
  413c5f:	mov    r14,rax
  413c62:	jmp    4138bc <_start@@Base+0xd97c>
  413c67:	mov    r12,r14
  413c6a:	mov    rdx,rbx
  413c6d:	mov    rsi,r12
  413c70:	mov    rdi,rbp
  413c73:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413c78:	mov    r14,rax
  413c7b:	jmp    410558 <_start@@Base+0xa618>
  413c80:	mov    ecx,0x8
  413c85:	mov    rdx,rbx
  413c88:	mov    rsi,r14
  413c8b:	mov    rdi,rbp
  413c8e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  413c93:	cmp    r12,rax
  413c96:	mov    r15,rax
  413c99:	je     413d7a <_start@@Base+0xde3a>
  413c9f:	mov    rax,QWORD PTR [rsp+0x58]
  413ca4:	mov    r14,r15
  413ca7:	jmp    410f9b <_start@@Base+0xb05b>
  413cac:	mov    rax,r14
  413caf:	mov    r14,rax
  413cb2:	jmp    410070 <_start@@Base+0xa130>
  413cb7:	mov    rax,r14
  413cba:	mov    r14,rax
  413cbd:	jmp    410070 <_start@@Base+0xa130>
  413cc2:	mov    rax,r14
  413cc5:	mov    r14,rax
  413cc8:	jmp    410070 <_start@@Base+0xa130>
  413ccd:	mov    rax,r14
  413cd0:	mov    r14,rax
  413cd3:	jmp    410070 <_start@@Base+0xa130>
  413cd8:	lea    rcx,[rip+0x25961]        # 439640 <__data_start@@Base+0x580>
  413cdf:	mov    r8,r13
  413ce2:	mov    rdx,rbx
  413ce5:	mov    rsi,rax
  413ce8:	mov    rdi,rbp
  413ceb:	call   409840 <_start@@Base+0x3900>
  413cf0:	cmp    r14,rax
  413cf3:	je     413cc5 <_start@@Base+0xdd85>
  413cf5:	cmp    rbx,rax
  413cf8:	je     413cc5 <_start@@Base+0xdd85>
  413cfa:	mov    r14,rax
  413cfd:	jmp    411347 <_start@@Base+0xb407>
  413d02:	lea    rcx,[rip+0x258b7]        # 4395c0 <__data_start@@Base+0x500>
  413d09:	mov    r8,r13
  413d0c:	mov    rdx,rbx
  413d0f:	mov    rsi,rax
  413d12:	mov    rdi,rbp
  413d15:	call   409a50 <_start@@Base+0x3b10>
  413d1a:	cmp    r14,rax
  413d1d:	je     413cd0 <_start@@Base+0xdd90>
  413d1f:	cmp    rbx,rax
  413d22:	je     413cd0 <_start@@Base+0xdd90>
  413d24:	mov    r14,rax
  413d27:	jmp    412e04 <_start@@Base+0xcec4>
  413d2c:	mov    rax,r14
  413d2f:	mov    r14,rax
  413d32:	jmp    410070 <_start@@Base+0xa130>
  413d37:	lea    rcx,[rip+0x258c2]        # 439600 <__data_start@@Base+0x540>
  413d3e:	mov    r8,r13
  413d41:	mov    rdx,rbx
  413d44:	mov    rsi,rax
  413d47:	mov    rdi,rbp
  413d4a:	call   40a260 <_start@@Base+0x4320>
  413d4f:	cmp    r14,rax
  413d52:	je     413caf <_start@@Base+0xdd6f>
  413d58:	cmp    rbx,rax
  413d5b:	je     413caf <_start@@Base+0xdd6f>
  413d61:	mov    r14,rax
  413d64:	jmp    411262 <_start@@Base+0xb322>
  413d69:	mov    rax,r14
  413d6c:	mov    r14,rax
  413d6f:	jmp    410070 <_start@@Base+0xa130>
  413d74:	mov    r14,rbx
  413d77:	mov    r15,r14
  413d7a:	lea    r8,[rsp+0x58]
  413d7f:	lea    rcx,[rip+0x257fa]        # 439580 <__data_start@@Base+0x4c0>
  413d86:	mov    rdx,rbx
  413d89:	mov    rsi,r15
  413d8c:	mov    rdi,rbp
  413d8f:	call   405160 <__sprintf_chk@plt+0x10>
  413d94:	cmp    rax,r15
  413d97:	mov    r14,rax
  413d9a:	je     410070 <_start@@Base+0xa130>
  413da0:	cmp    rbx,rax
  413da3:	je     410070 <_start@@Base+0xa130>
  413da9:	mov    rax,QWORD PTR [rsp+0x58]
  413dae:	jmp    410f9b <_start@@Base+0xb05b>
  413db3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  413dbe:	xchg   ax,ax
  413dc0:	push   r15
  413dc2:	push   r14
  413dc4:	mov    r14,rsi
  413dc7:	push   r13
  413dc9:	push   r12
  413dcb:	push   rbp
  413dcc:	push   rbx
  413dcd:	mov    rbp,rdi
  413dd0:	mov    rbx,rdx
  413dd3:	sub    rsp,0x48
  413dd7:	mov    DWORD PTR [r8],0x0
  413dde:	mov    rsi,QWORD PTR fs:0x28
  413de7:	mov    QWORD PTR [rsp+0x38],rsi
  413dec:	xor    esi,esi
  413dee:	cmp    cl,0x4
  413df1:	ja     4143c0 <_start@@Base+0xe480>
  413df7:	lea    rdx,[rip+0x173ce]        # 42b1cc <_IO_stdin_used@@Base+0x1cc>
  413dfe:	movzx  eax,cl
  413e01:	mov    r12,r8
  413e04:	movsxd rax,DWORD PTR [rdx+rax*4]
  413e08:	add    rax,rdx
  413e0b:	jmp    rax
  413e0d:	nop    DWORD PTR [rax]
  413e10:	mov    rcx,r8
  413e13:	mov    rdx,rbx
  413e16:	mov    rsi,r14
  413e19:	call   40faf0 <_start@@Base+0x9bb0>
  413e1e:	mov    ecx,DWORD PTR [rbp+0x20]
  413e21:	test   ecx,ecx
  413e23:	jne    413e40 <_start@@Base+0xdf00>
  413e25:	mov    edx,DWORD PTR [r12]
  413e29:	test   edx,edx
  413e2b:	jne    413e40 <_start@@Base+0xdf00>
  413e2d:	mov    ecx,0x21
  413e32:	mov    rdx,rbx
  413e35:	mov    rsi,rax
  413e38:	mov    rdi,rbp
  413e3b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  413e40:	mov    rdi,QWORD PTR [rsp+0x38]
  413e45:	xor    rdi,QWORD PTR fs:0x28
  413e4e:	jne    414719 <_start@@Base+0xe7d9>
  413e54:	add    rsp,0x48
  413e58:	pop    rbx
  413e59:	pop    rbp
  413e5a:	pop    r12
  413e5c:	pop    r13
  413e5e:	pop    r14
  413e60:	pop    r15
  413e62:	ret    
  413e63:	nop    DWORD PTR [rax+rax*1+0x0]
  413e68:	mov    rcx,r8
  413e6b:	mov    rdx,rbx
  413e6e:	mov    rsi,r14
  413e71:	call   40c970 <_start@@Base+0x6a30>
  413e76:	jmp    413e1e <_start@@Base+0xdede>
  413e78:	nop    DWORD PTR [rax+rax*1+0x0]
  413e80:	mov    rax,rbx
  413e83:	sub    rax,r14
  413e86:	cmp    rax,0x3
  413e8a:	jle    413ea8 <_start@@Base+0xdf68>
  413e8c:	lea    rsi,[rip+0x176ef]        # 42b582 <_IO_stdin_used@@Base+0x582>
  413e93:	mov    edx,0x4
  413e98:	mov    rdi,r14
  413e9b:	call   4050b0 <memcmp@plt>
  413ea0:	test   eax,eax
  413ea2:	je     414710 <_start@@Base+0xe7d0>
  413ea8:	mov    ecx,0x1a
  413ead:	mov    rdx,rbx
  413eb0:	mov    rsi,r14
  413eb3:	mov    rdi,rbp
  413eb6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  413ebb:	jmp    413e40 <_start@@Base+0xdf00>
  413ebd:	nop    DWORD PTR [rax]
  413ec0:	mov    rcx,r8
  413ec3:	mov    rdx,rbx
  413ec6:	mov    rsi,r14
  413ec9:	call   40fde0 <_start@@Base+0x9ea0>
  413ece:	jmp    413e1e <_start@@Base+0xdede>
  413ed3:	nop    DWORD PTR [rax+rax*1+0x0]
  413ed8:	mov    rdi,QWORD PTR [rdi]
  413edb:	mov    esi,0x4
  413ee0:	call   4173e0 <flatcc_builder_start_table@@Base>
  413ee5:	test   eax,eax
  413ee7:	jne    4141e0 <_start@@Base+0xe2a0>
  413eed:	lea    r13,[rsp+0x28]
  413ef2:	mov    rsi,r14
  413ef5:	mov    rdx,rbx
  413ef8:	mov    rdi,rbp
  413efb:	mov    rcx,r13
  413efe:	call   408fe0 <_start@@Base+0x30a0>
  413f03:	mov    ecx,DWORD PTR [rsp+0x28]
  413f07:	mov    r14,rax
  413f0a:	test   ecx,ecx
  413f0c:	je     4146e0 <_start@@Base+0xe7a0>
  413f12:	lea    rax,[rsp+0x27]
  413f17:	lea    r15,[rsp+0x30]
  413f1c:	mov    QWORD PTR [rsp+0x18],rax
  413f21:	lea    rax,[rsp+0x2c]
  413f26:	mov    QWORD PTR [rsp],rax
  413f2a:	jmp    413fca <_start@@Base+0xe08a>
  413f2f:	nop
  413f30:	mov    rdx,r8
  413f33:	movabs rax,0x636f6c6f72000000
  413f3d:	and    rdx,0xffffffffff000000
  413f44:	cmp    rdx,rax
  413f47:	jne    413f53 <_start@@Base+0xe013>
  413f49:	cmp    r11,0x5
  413f4d:	jg     4143f8 <_start@@Base+0xe4b8>
  413f53:	movabs rax,0xffffff0000000000
  413f5d:	movabs rdx,0x7563320000000000
  413f67:	and    rax,r8
  413f6a:	cmp    rax,rdx
  413f6d:	je     414110 <_start@@Base+0xe1d0>
  413f73:	movabs rax,0xffff000000000000
  413f7d:	and    r8,rax
  413f80:	movabs rax,0x7563000000000000
  413f8a:	cmp    r8,rax
  413f8d:	jne    413f99 <_start@@Base+0xe059>
  413f8f:	cmp    r11,0x2
  413f93:	jg     4142d0 <_start@@Base+0xe390>
  413f99:	mov    rsi,r14
  413f9c:	mov    rdx,rbx
  413f9f:	mov    rdi,rbp
  413fa2:	call   41dd70 <flatcc_json_parser_unmatched_symbol@@Base>
  413fa7:	mov    r14,rax
  413faa:	mov    rsi,r14
  413fad:	mov    rdi,rbp
  413fb0:	mov    rcx,r13
  413fb3:	mov    rdx,rbx
  413fb6:	call   40a7d0 <_start@@Base+0x4890>
  413fbb:	mov    edi,DWORD PTR [rsp+0x28]
  413fbf:	mov    r14,rax
  413fc2:	test   edi,edi
  413fc4:	je     4146e0 <_start@@Base+0xe7a0>
  413fca:	cmp    rbx,r14
  413fcd:	je     4142c0 <_start@@Base+0xe380>
  413fd3:	movzx  eax,BYTE PTR [r14]
  413fd7:	cmp    al,0x22
  413fd9:	je     414200 <_start@@Base+0xe2c0>
  413fdf:	cmp    al,0x2e
  413fe1:	je     4143a0 <_start@@Base+0xe460>
  413fe7:	mov    DWORD PTR [rbp+0x14],0x1
  413fee:	mov    r11,rbx
  413ff1:	sub    r11,r14
  413ff4:	cmp    r11,0x7
  413ff8:	jbe    414220 <_start@@Base+0xe2e0>
  413ffe:	movbe  r8,QWORD PTR [r14]
  414003:	mov    rdx,r8
  414006:	movabs rax,0x636f6c6f72320000
  414010:	xor    dx,dx
  414013:	cmp    rdx,rax
  414016:	jne    413f30 <_start@@Base+0xdff0>
  41401c:	cmp    r11,0x6
  414020:	jle    413f73 <_start@@Base+0xe033>
  414026:	mov    ecx,0x6
  41402b:	mov    rdx,rbx
  41402e:	mov    rsi,r14
  414031:	mov    rdi,rbp
  414034:	mov    QWORD PTR [rsp+0x10],r11
  414039:	mov    QWORD PTR [rsp+0x8],r8
  41403e:	call   409080 <_start@@Base+0x3140>
  414043:	cmp    rax,r14
  414046:	mov    r10,rax
  414049:	mov    r8,QWORD PTR [rsp+0x8]
  41404e:	mov    r11,QWORD PTR [rsp+0x10]
  414053:	je     413f73 <_start@@Base+0xe033>
  414059:	cmp    rbx,rax
  41405c:	mov    BYTE PTR [rsp+0x27],0x0
  414061:	mov    QWORD PTR [rsp+0x30],0x0
  41406a:	mov    DWORD PTR [rsp+0x2c],0x0
  414072:	je     41459b <_start@@Base+0xe65b>
  414078:	mov    rcx,QWORD PTR [rsp]
  41407c:	mov    r8,r15
  41407f:	mov    rdx,rbx
  414082:	mov    rsi,rax
  414085:	mov    rdi,rbp
  414088:	mov    QWORD PTR [rsp+0x8],rax
  41408d:	call   41df90 <flatcc_json_parser_integer@@Base>
  414092:	mov    r10,QWORD PTR [rsp+0x8]
  414097:	mov    r14,rax
  41409a:	cmp    r10,rax
  41409d:	je     414598 <_start@@Base+0xe658>
  4140a3:	mov    edx,DWORD PTR [rsp+0x2c]
  4140a7:	mov    rax,QWORD PTR [rsp+0x30]
  4140ac:	test   edx,edx
  4140ae:	je     4143e0 <_start@@Base+0xe4a0>
  4140b4:	cmp    rax,0x80
  4140ba:	mov    ecx,0x8
  4140bf:	ja     4145f2 <_start@@Base+0xe6b2>
  4140c5:	mov    edx,eax
  4140c7:	neg    edx
  4140c9:	mov    BYTE PTR [rsp+0x27],dl
  4140cd:	cmp    dl,0x2
  4140d0:	jne    4140dc <_start@@Base+0xe19c>
  4140d2:	test   BYTE PTR [rbp+0x10],0x2
  4140d6:	je     413faa <_start@@Base+0xe06a>
  4140dc:	mov    rdi,QWORD PTR [rbp+0x0]
  4140e0:	mov    ecx,0x1
  4140e5:	mov    edx,0x1
  4140ea:	mov    esi,0x1
  4140ef:	call   418c80 <flatcc_builder_table_add@@Base>
  4140f4:	test   rax,rax
  4140f7:	je     4141e0 <_start@@Base+0xe2a0>
  4140fd:	movzx  edx,BYTE PTR [rsp+0x27]
  414102:	mov    BYTE PTR [rax],dl
  414104:	jmp    413faa <_start@@Base+0xe06a>
  414109:	nop    DWORD PTR [rax+0x0]
  414110:	cmp    r11,0x3
  414114:	jle    413f99 <_start@@Base+0xe059>
  41411a:	mov    ecx,0x3
  41411f:	mov    rdx,rbx
  414122:	mov    rsi,r14
  414125:	mov    rdi,rbp
  414128:	call   409080 <_start@@Base+0x3140>
  41412d:	cmp    rax,r14
  414130:	mov    r10,rax
  414133:	je     413f99 <_start@@Base+0xe059>
  414139:	cmp    rbx,rax
  41413c:	mov    BYTE PTR [rsp+0x27],0x0
  414141:	mov    QWORD PTR [rsp+0x30],0x0
  41414a:	mov    DWORD PTR [rsp+0x2c],0x0
  414152:	je     414623 <_start@@Base+0xe6e3>
  414158:	mov    rcx,QWORD PTR [rsp]
  41415c:	mov    r8,r15
  41415f:	mov    rdx,rbx
  414162:	mov    rsi,rax
  414165:	mov    rdi,rbp
  414168:	mov    QWORD PTR [rsp+0x8],rax
  41416d:	call   41df90 <flatcc_json_parser_integer@@Base>
  414172:	mov    r10,QWORD PTR [rsp+0x8]
  414177:	mov    r14,rax
  41417a:	cmp    r10,rax
  41417d:	je     414620 <_start@@Base+0xe6e0>
  414183:	mov    r9d,DWORD PTR [rsp+0x2c]
  414188:	mov    ecx,0x8
  41418d:	test   r9d,r9d
  414190:	jne    414522 <_start@@Base+0xe5e2>
  414196:	mov    rax,QWORD PTR [rsp+0x30]
  41419b:	cmp    rax,0xff
  4141a1:	ja     414518 <_start@@Base+0xe5d8>
  4141a7:	mov    edx,eax
  4141a9:	mov    BYTE PTR [rsp+0x27],al
  4141ad:	cmp    dl,0x2
  4141b0:	jne    4141bc <_start@@Base+0xe27c>
  4141b2:	test   BYTE PTR [rbp+0x10],0x2
  4141b6:	je     413faa <_start@@Base+0xe06a>
  4141bc:	mov    rdi,QWORD PTR [rbp+0x0]
  4141c0:	mov    ecx,0x1
  4141c5:	mov    edx,0x1
  4141ca:	mov    esi,0x3
  4141cf:	call   418c80 <flatcc_builder_table_add@@Base>
  4141d4:	test   rax,rax
  4141d7:	jne    4140fd <_start@@Base+0xe1bd>
  4141dd:	nop    DWORD PTR [rax]
  4141e0:	mov    ecx,0x21
  4141e5:	mov    rdx,rbx
  4141e8:	mov    rsi,r14
  4141eb:	mov    rdi,rbp
  4141ee:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4141f3:	jmp    413e1e <_start@@Base+0xdede>
  4141f8:	nop    DWORD PTR [rax+rax*1+0x0]
  414200:	add    r14,0x1
  414204:	mov    r11,rbx
  414207:	mov    DWORD PTR [rbp+0x14],0x0
  41420e:	sub    r11,r14
  414211:	cmp    r11,0x7
  414215:	ja     413ffe <_start@@Base+0xe0be>
  41421b:	nop    DWORD PTR [rax+rax*1+0x0]
  414220:	lea    rdx,[rip+0x16fb9]        # 42b1e0 <_IO_stdin_used@@Base+0x1e0>
  414227:	movsxd rax,DWORD PTR [rdx+r11*4]
  41422b:	add    rax,rdx
  41422e:	jmp    rax
  414230:	movsx  rax,BYTE PTR [r14+0x6]
  414235:	shl    rax,0x8
  414239:	movsx  rdx,BYTE PTR [r14+0x5]
  41423e:	shl    rdx,0x10
  414242:	or     rax,rdx
  414245:	movsx  rdx,BYTE PTR [r14+0x4]
  41424a:	shl    rdx,0x18
  41424e:	mov    r8,rdx
  414251:	or     r8,rax
  414254:	movsx  rdx,BYTE PTR [r14+0x3]
  414259:	mov    rax,rdx
  41425c:	shl    rax,0x20
  414260:	or     r8,rax
  414263:	movsx  rdx,BYTE PTR [r14+0x2]
  414268:	mov    rax,rdx
  41426b:	shl    rax,0x28
  41426f:	or     rax,r8
  414272:	movsx  rdx,BYTE PTR [r14+0x1]
  414277:	shl    rdx,0x30
  41427b:	or     rax,rdx
  41427e:	movsx  r8,BYTE PTR [r14]
  414282:	shl    r8,0x38
  414286:	or     r8,rax
  414289:	jmp    414003 <_start@@Base+0xe0c3>
  41428e:	xchg   ax,ax
  414290:	xor    eax,eax
  414292:	jmp    414239 <_start@@Base+0xe2f9>
  414294:	nop    DWORD PTR [rax+0x0]
  414298:	xor    eax,eax
  41429a:	jmp    414245 <_start@@Base+0xe305>
  41429c:	nop    DWORD PTR [rax+0x0]
  4142a0:	xor    r8d,r8d
  4142a3:	jmp    414254 <_start@@Base+0xe314>
  4142a5:	nop    DWORD PTR [rax]
  4142a8:	xor    r8d,r8d
  4142ab:	jmp    414263 <_start@@Base+0xe323>
  4142ad:	nop    DWORD PTR [rax]
  4142b0:	xor    eax,eax
  4142b2:	jmp    414272 <_start@@Base+0xe332>
  4142b4:	nop    DWORD PTR [rax+0x0]
  4142b8:	xor    eax,eax
  4142ba:	jmp    41427e <_start@@Base+0xe33e>
  4142bc:	nop    DWORD PTR [rax+0x0]
  4142c0:	xor    r11d,r11d
  4142c3:	xor    r8d,r8d
  4142c6:	jmp    413f73 <_start@@Base+0xe033>
  4142cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4142d0:	mov    ecx,0x2
  4142d5:	mov    rdx,rbx
  4142d8:	mov    rsi,r14
  4142db:	mov    rdi,rbp
  4142de:	call   409080 <_start@@Base+0x3140>
  4142e3:	cmp    rax,r14
  4142e6:	mov    r10,rax
  4142e9:	je     413f99 <_start@@Base+0xe059>
  4142ef:	cmp    rbx,rax
  4142f2:	mov    BYTE PTR [rsp+0x27],0x0
  4142f7:	mov    QWORD PTR [rsp+0x30],0x0
  414300:	mov    DWORD PTR [rsp+0x2c],0x0
  414308:	je     414553 <_start@@Base+0xe613>
  41430e:	mov    rcx,QWORD PTR [rsp]
  414312:	mov    r8,r15
  414315:	mov    rdx,rbx
  414318:	mov    rsi,rax
  41431b:	mov    rdi,rbp
  41431e:	mov    QWORD PTR [rsp+0x8],rax
  414323:	call   41df90 <flatcc_json_parser_integer@@Base>
  414328:	mov    r10,QWORD PTR [rsp+0x8]
  41432d:	mov    r14,rax
  414330:	cmp    r10,rax
  414333:	je     414550 <_start@@Base+0xe610>
  414339:	mov    r8d,DWORD PTR [rsp+0x2c]
  41433e:	mov    ecx,0x8
  414343:	test   r8d,r8d
  414346:	jne    4144da <_start@@Base+0xe59a>
  41434c:	mov    rax,QWORD PTR [rsp+0x30]
  414351:	cmp    rax,0xff
  414357:	ja     4144d0 <_start@@Base+0xe590>
  41435d:	mov    edx,eax
  41435f:	mov    BYTE PTR [rsp+0x27],al
  414363:	cmp    dl,0x2
  414366:	jne    414372 <_start@@Base+0xe432>
  414368:	test   BYTE PTR [rbp+0x10],0x2
  41436c:	je     413faa <_start@@Base+0xe06a>
  414372:	mov    rdi,QWORD PTR [rbp+0x0]
  414376:	mov    ecx,0x1
  41437b:	mov    edx,0x1
  414380:	mov    esi,0x2
  414385:	call   418c80 <flatcc_builder_table_add@@Base>
  41438a:	test   rax,rax
  41438d:	jne    4140fd <_start@@Base+0xe1bd>
  414393:	jmp    4141e0 <_start@@Base+0xe2a0>
  414398:	nop    DWORD PTR [rax+rax*1+0x0]
  4143a0:	mov    rsi,r14
  4143a3:	mov    ecx,0x5
  4143a8:	mov    rdx,rbx
  4143ab:	mov    rdi,rbp
  4143ae:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4143b3:	mov    r14,rax
  4143b6:	jmp    413fee <_start@@Base+0xe0ae>
  4143bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4143c0:	test   BYTE PTR [rdi+0x10],0x1
  4143c4:	jne    4145d8 <_start@@Base+0xe698>
  4143ca:	mov    ecx,0xf
  4143cf:	mov    rsi,r14
  4143d2:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4143d7:	jmp    413e40 <_start@@Base+0xdf00>
  4143dc:	nop    DWORD PTR [rax+0x0]
  4143e0:	cmp    rax,0x7f
  4143e4:	ja     4145e8 <_start@@Base+0xe6a8>
  4143ea:	mov    edx,eax
  4143ec:	mov    BYTE PTR [rsp+0x27],al
  4143f0:	jmp    4140cd <_start@@Base+0xe18d>
  4143f5:	nop    DWORD PTR [rax]
  4143f8:	mov    ecx,0x5
  4143fd:	mov    rdx,rbx
  414400:	mov    rsi,r14
  414403:	mov    rdi,rbp
  414406:	mov    QWORD PTR [rsp+0x10],r11
  41440b:	mov    QWORD PTR [rsp+0x8],r8
  414410:	call   409080 <_start@@Base+0x3140>
  414415:	cmp    rax,r14
  414418:	mov    r10,rax
  41441b:	mov    r8,QWORD PTR [rsp+0x8]
  414420:	mov    r11,QWORD PTR [rsp+0x10]
  414425:	je     413f53 <_start@@Base+0xe013>
  41442b:	cmp    rbx,rax
  41442e:	mov    BYTE PTR [rsp+0x27],0x0
  414433:	mov    QWORD PTR [rsp+0x30],0x0
  41443c:	mov    DWORD PTR [rsp+0x2c],0x0
  414444:	je     41466b <_start@@Base+0xe72b>
  41444a:	mov    rcx,QWORD PTR [rsp]
  41444e:	mov    r8,r15
  414451:	mov    rdx,rbx
  414454:	mov    rsi,rax
  414457:	mov    rdi,rbp
  41445a:	mov    QWORD PTR [rsp+0x8],rax
  41445f:	call   41df90 <flatcc_json_parser_integer@@Base>
  414464:	mov    r10,QWORD PTR [rsp+0x8]
  414469:	mov    r14,rax
  41446c:	cmp    r10,rax
  41446f:	je     414668 <_start@@Base+0xe728>
  414475:	mov    r11d,DWORD PTR [rsp+0x2c]
  41447a:	mov    rax,QWORD PTR [rsp+0x30]
  41447f:	test   r11d,r11d
  414482:	je     414500 <_start@@Base+0xe5c0>
  414484:	cmp    rax,0x80
  41448a:	mov    ecx,0x8
  41448f:	ja     4146b2 <_start@@Base+0xe772>
  414495:	mov    edx,eax
  414497:	neg    edx
  414499:	mov    BYTE PTR [rsp+0x27],dl
  41449d:	cmp    dl,0x2
  4144a0:	jne    4144ac <_start@@Base+0xe56c>
  4144a2:	test   BYTE PTR [rbp+0x10],0x2
  4144a6:	je     413faa <_start@@Base+0xe06a>
  4144ac:	mov    rdi,QWORD PTR [rbp+0x0]
  4144b0:	xor    esi,esi
  4144b2:	mov    ecx,0x1
  4144b7:	mov    edx,0x1
  4144bc:	call   418c80 <flatcc_builder_table_add@@Base>
  4144c1:	test   rax,rax
  4144c4:	jne    4140fd <_start@@Base+0xe1bd>
  4144ca:	jmp    4141e0 <_start@@Base+0xe2a0>
  4144cf:	nop
  4144d0:	mov    QWORD PTR [rsp+0x8],r10
  4144d5:	mov    ecx,0x7
  4144da:	mov    rsi,r14
  4144dd:	mov    rdx,rbx
  4144e0:	mov    rdi,rbp
  4144e3:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4144e8:	mov    r10,QWORD PTR [rsp+0x8]
  4144ed:	mov    r14,rax
  4144f0:	cmp    r10,rax
  4144f3:	je     414553 <_start@@Base+0xe613>
  4144f5:	movzx  edx,BYTE PTR [rsp+0x27]
  4144fa:	jmp    414363 <_start@@Base+0xe423>
  4144ff:	nop
  414500:	cmp    rax,0x7f
  414504:	ja     4146a8 <_start@@Base+0xe768>
  41450a:	mov    edx,eax
  41450c:	mov    BYTE PTR [rsp+0x27],al
  414510:	jmp    41449d <_start@@Base+0xe55d>
  414512:	nop    WORD PTR [rax+rax*1+0x0]
  414518:	mov    QWORD PTR [rsp+0x8],r10
  41451d:	mov    ecx,0x7
  414522:	mov    rsi,r14
  414525:	mov    rdx,rbx
  414528:	mov    rdi,rbp
  41452b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  414530:	mov    r10,QWORD PTR [rsp+0x8]
  414535:	mov    r14,rax
  414538:	cmp    r10,rax
  41453b:	je     414623 <_start@@Base+0xe6e3>
  414541:	movzx  edx,BYTE PTR [rsp+0x27]
  414546:	jmp    4141ad <_start@@Base+0xe26d>
  41454b:	nop    DWORD PTR [rax+rax*1+0x0]
  414550:	mov    r10,rax
  414553:	mov    r8,QWORD PTR [rsp+0x18]
  414558:	lea    rcx,[rip+0x24f41]        # 4394a0 <__data_start@@Base+0x3e0>
  41455f:	mov    rsi,r10
  414562:	mov    rdx,rbx
  414565:	mov    rdi,rbp
  414568:	mov    QWORD PTR [rsp+0x8],r10
  41456d:	call   40a060 <_start@@Base+0x4120>
  414572:	mov    r10,QWORD PTR [rsp+0x8]
  414577:	mov    r14,rax
  41457a:	cmp    rax,r10
  41457d:	je     4141e0 <_start@@Base+0xe2a0>
  414583:	cmp    rbx,rax
  414586:	jne    4144f5 <_start@@Base+0xe5b5>
  41458c:	jmp    4141e0 <_start@@Base+0xe2a0>
  414591:	nop    DWORD PTR [rax+0x0]
  414598:	mov    r10,rax
  41459b:	mov    r8,QWORD PTR [rsp+0x18]
  4145a0:	lea    rcx,[rip+0x24f59]        # 439500 <__data_start@@Base+0x440>
  4145a7:	mov    rsi,r10
  4145aa:	mov    rdx,rbx
  4145ad:	mov    rdi,rbp
  4145b0:	mov    QWORD PTR [rsp+0x8],r10
  4145b5:	call   40a470 <_start@@Base+0x4530>
  4145ba:	mov    r10,QWORD PTR [rsp+0x8]
  4145bf:	mov    r14,rax
  4145c2:	cmp    rax,r10
  4145c5:	je     4141e0 <_start@@Base+0xe2a0>
  4145cb:	cmp    rbx,rax
  4145ce:	jne    41460d <_start@@Base+0xe6cd>
  4145d0:	jmp    4141e0 <_start@@Base+0xe2a0>
  4145d5:	nop    DWORD PTR [rax]
  4145d8:	mov    rsi,r14
  4145db:	call   41d330 <flatcc_json_parser_generic_json@@Base>
  4145e0:	jmp    413e40 <_start@@Base+0xdf00>
  4145e5:	nop    DWORD PTR [rax]
  4145e8:	mov    QWORD PTR [rsp+0x8],r10
  4145ed:	mov    ecx,0x7
  4145f2:	mov    rsi,r14
  4145f5:	mov    rdx,rbx
  4145f8:	mov    rdi,rbp
  4145fb:	call   41c420 <flatcc_json_parser_set_error@@Base>
  414600:	mov    r10,QWORD PTR [rsp+0x8]
  414605:	mov    r14,rax
  414608:	cmp    r10,rax
  41460b:	je     41459b <_start@@Base+0xe65b>
  41460d:	movzx  edx,BYTE PTR [rsp+0x27]
  414612:	jmp    4140cd <_start@@Base+0xe18d>
  414617:	nop    WORD PTR [rax+rax*1+0x0]
  414620:	mov    r10,rax
  414623:	mov    r8,QWORD PTR [rsp+0x18]
  414628:	lea    rcx,[rip+0x24e91]        # 4394c0 <__data_start@@Base+0x400>
  41462f:	mov    rsi,r10
  414632:	mov    rdx,rbx
  414635:	mov    rdi,rbp
  414638:	mov    QWORD PTR [rsp+0x8],r10
  41463d:	call   40a060 <_start@@Base+0x4120>
  414642:	mov    r10,QWORD PTR [rsp+0x8]
  414647:	mov    r14,rax
  41464a:	cmp    rax,r10
  41464d:	je     4141e0 <_start@@Base+0xe2a0>
  414653:	cmp    rbx,rax
  414656:	jne    414541 <_start@@Base+0xe601>
  41465c:	jmp    4141e0 <_start@@Base+0xe2a0>
  414661:	nop    DWORD PTR [rax+0x0]
  414668:	mov    r10,rax
  41466b:	mov    r8,QWORD PTR [rsp+0x18]
  414670:	lea    rcx,[rip+0x24e69]        # 4394e0 <__data_start@@Base+0x420>
  414677:	mov    rsi,r10
  41467a:	mov    rdx,rbx
  41467d:	mov    rdi,rbp
  414680:	mov    QWORD PTR [rsp+0x8],r10
  414685:	call   40a470 <_start@@Base+0x4530>
  41468a:	mov    r10,QWORD PTR [rsp+0x8]
  41468f:	mov    r14,rax
  414692:	cmp    rax,r10
  414695:	je     4141e0 <_start@@Base+0xe2a0>
  41469b:	cmp    rbx,rax
  41469e:	jne    4146cd <_start@@Base+0xe78d>
  4146a0:	jmp    4141e0 <_start@@Base+0xe2a0>
  4146a5:	nop    DWORD PTR [rax]
  4146a8:	mov    QWORD PTR [rsp+0x8],r10
  4146ad:	mov    ecx,0x7
  4146b2:	mov    rsi,r14
  4146b5:	mov    rdx,rbx
  4146b8:	mov    rdi,rbp
  4146bb:	call   41c420 <flatcc_json_parser_set_error@@Base>
  4146c0:	mov    r10,QWORD PTR [rsp+0x8]
  4146c5:	mov    r14,rax
  4146c8:	cmp    r10,rax
  4146cb:	je     41466b <_start@@Base+0xe72b>
  4146cd:	movzx  edx,BYTE PTR [rsp+0x27]
  4146d2:	jmp    41449d <_start@@Base+0xe55d>
  4146d7:	nop    WORD PTR [rax+rax*1+0x0]
  4146e0:	mov    esi,DWORD PTR [rbp+0x20]
  4146e3:	test   esi,esi
  4146e5:	jne    4141e0 <_start@@Base+0xe2a0>
  4146eb:	mov    rdi,QWORD PTR [rbp+0x0]
  4146ef:	call   417da0 <flatcc_builder_end_table@@Base>
  4146f4:	mov    edx,eax
  4146f6:	mov    DWORD PTR [r12],eax
  4146fa:	mov    rax,r14
  4146fd:	test   edx,edx
  4146ff:	je     4141e0 <_start@@Base+0xe2a0>
  414705:	jmp    413e1e <_start@@Base+0xdede>
  41470a:	nop    WORD PTR [rax+rax*1+0x0]
  414710:	lea    rax,[r14+0x4]
  414714:	jmp    413e40 <_start@@Base+0xdf00>
  414719:	call   405070 <__stack_chk_fail@plt>
  41471e:	xchg   ax,ax

0000000000414720 <test_json@@Base>:
  414720:	push   r15
  414722:	push   r14
  414724:	mov    r15d,r8d
  414727:	push   r13
  414729:	push   r12
  41472b:	mov    r14d,r9d
  41472e:	push   rbp
  41472f:	push   rbx
  414730:	mov    rbx,rdi
  414733:	mov    rbp,rsi
  414736:	mov    r12d,ecx
  414739:	sub    rsp,0x288
  414740:	lea    r13,[rsp+0xd0]
  414748:	mov    QWORD PTR [rsp+0x18],rdx
  41474d:	mov    rax,QWORD PTR fs:0x28
  414756:	mov    QWORD PTR [rsp+0x278],rax
  41475e:	xor    eax,eax
  414760:	mov    rdi,r13
  414763:	call   415d70 <flatcc_builder_init@@Base>
  414768:	lea    rax,[rsp+0x80]
  414770:	xor    esi,esi
  414772:	mov    rdi,rax
  414775:	mov    QWORD PTR [rsp+0x10],rax
  41477a:	call   42ac00 <flatcc_json_printer_init_dynamic_buffer@@Base>
  41477f:	mov    eax,r14d
  414782:	and    eax,0x1
  414785:	mov    BYTE PTR [rsp+0xb2],al
  41478c:	mov    eax,r14d
  41478f:	shr    eax,1
  414791:	and    eax,0x1
  414794:	mov    BYTE PTR [rsp+0xb3],al
  41479b:	mov    eax,r14d
  41479e:	shr    eax,0x2
  4147a1:	and    eax,0x1
  4147a4:	mov    BYTE PTR [rsp+0xb4],al
  4147ab:	mov    eax,r14d
  4147ae:	shr    eax,0x3
  4147b1:	and    eax,0x1
  4147b4:	test   r14b,0x10
  4147b8:	mov    BYTE PTR [rsp+0xb5],al
  4147bf:	je     4147c9 <test_json@@Base+0xa9>
  4147c1:	mov    BYTE PTR [rsp+0xb1],0x2
  4147c9:	and    r14d,0x20
  4147cd:	je     4147e7 <test_json@@Base+0xc7>
  4147cf:	mov    BYTE PTR [rsp+0xb1],0x2
  4147d7:	mov    BYTE PTR [rsp+0xb2],0x1
  4147df:	mov    BYTE PTR [rsp+0xb3],0x0
  4147e7:	mov    rdi,rbp
  4147ea:	call   405060 <strlen@plt>
  4147ef:	mov    r9,QWORD PTR [rbx]
  4147f2:	lea    rsi,[rsp+0x30]
  4147f7:	sub    rsp,0x8
  4147fb:	push   QWORD PTR [rbx+0x8]
  4147fe:	mov    rcx,rax
  414801:	mov    rdx,rbp
  414804:	mov    r8d,r15d
  414807:	mov    rdi,r13
  41480a:	call   41f260 <flatcc_json_parser_table_as_root@@Base>
  41480f:	cmp    eax,r12d
  414812:	pop    rdx
  414813:	pop    rcx
  414814:	je     414970 <test_json@@Base+0x250>
  41481a:	test   r12d,r12d
  41481d:	je     414ad8 <test_json@@Base+0x3b8>
  414823:	test   eax,eax
  414825:	jne    414918 <test_json@@Base+0x1f8>
  41482b:	mov    edi,r12d
  41482e:	call   41c1c0 <flatcc_json_parser_error_string@@Base>
  414833:	mov    rbx,QWORD PTR [rip+0x247ae]        # 438fe8 <stderr@GLIBC_2.2.5>
  41483a:	mov    ecx,DWORD PTR [rsp+0x2c0]
  414841:	lea    rdx,[rip+0x17070]        # 42b8b8 <_IO_stdin_used@@Base+0x8b8>
  414848:	mov    r8,rax
  41484b:	mov    rdi,QWORD PTR [rbx]
  41484e:	mov    esi,0x1
  414853:	xor    eax,eax
  414855:	call   405130 <__fprintf_chk@plt>
  41485a:	mov    rdi,QWORD PTR [rbx]
  41485d:	lea    rdx,[rip+0x16d51]        # 42b5b5 <_IO_stdin_used@@Base+0x5b5>
  414864:	mov    rcx,rbp
  414867:	xor    eax,eax
  414869:	mov    esi,0x1
  41486e:	xor    ebp,ebp
  414870:	lea    r12,[rip+0x16d52]        # 42b5c9 <_IO_stdin_used@@Base+0x5c9>
  414877:	call   405130 <__fprintf_chk@plt>
  41487c:	cmp    DWORD PTR [rsp+0x4c],0x1
  414881:	jle    4148a8 <test_json@@Base+0x188>
  414883:	nop    DWORD PTR [rax+rax*1+0x0]
  414888:	mov    rdi,QWORD PTR [rbx]
  41488b:	xor    eax,eax
  41488d:	mov    rdx,r12
  414890:	mov    esi,0x1
  414895:	add    ebp,0x1
  414898:	call   405130 <__fprintf_chk@plt>
  41489d:	mov    eax,DWORD PTR [rsp+0x4c]
  4148a1:	sub    eax,0x1
  4148a4:	cmp    eax,ebp
  4148a6:	jg     414888 <test_json@@Base+0x168>
  4148a8:	mov    rdi,QWORD PTR [rbx]
  4148ab:	lea    rdx,[rip+0x16ce0]        # 42b592 <_IO_stdin_used@@Base+0x592>
  4148b2:	mov    esi,0x1
  4148b7:	xor    eax,eax
  4148b9:	mov    r14d,0xffffffff
  4148bf:	call   405130 <__fprintf_chk@plt>
  4148c4:	mov    QWORD PTR [rsp+0x8],0x0
  4148cd:	mov    rdi,QWORD PTR [rsp+0x8]
  4148d2:	call   419590 <flatcc_builder_aligned_free@@Base>
  4148d7:	mov    rdi,r13
  4148da:	call   415f40 <flatcc_builder_clear@@Base>
  4148df:	mov    rdi,QWORD PTR [rsp+0x10]
  4148e4:	call   42ad20 <flatcc_json_printer_clear@@Base>
  4148e9:	mov    rcx,QWORD PTR [rsp+0x278]
  4148f1:	xor    rcx,QWORD PTR fs:0x28
  4148fa:	mov    eax,r14d
  4148fd:	jne    414c52 <test_json@@Base+0x532>
  414903:	add    rsp,0x288
  41490a:	pop    rbx
  41490b:	pop    rbp
  41490c:	pop    r12
  41490e:	pop    r13
  414910:	pop    r14
  414912:	pop    r15
  414914:	ret    
  414915:	nop    DWORD PTR [rax]
  414918:	mov    edi,eax
  41491a:	call   41c1c0 <flatcc_json_parser_error_string@@Base>
  41491f:	mov    rbx,QWORD PTR [rip+0x246c2]        # 438fe8 <stderr@GLIBC_2.2.5>
  414926:	mov    ecx,DWORD PTR [rsp+0x2c0]
  41492d:	lea    rdx,[rip+0x16f3c]        # 42b870 <_IO_stdin_used@@Base+0x870>
  414934:	mov    r8,rax
  414937:	mov    esi,0x1
  41493c:	xor    eax,eax
  41493e:	mov    rdi,QWORD PTR [rbx]
  414941:	call   405130 <__fprintf_chk@plt>
  414946:	mov    edi,r12d
  414949:	call   41c1c0 <flatcc_json_parser_error_string@@Base>
  41494e:	mov    rdi,QWORD PTR [rbx]
  414951:	lea    rdx,[rip+0x16f40]        # 42b898 <_IO_stdin_used@@Base+0x898>
  414958:	mov    rcx,rax
  41495b:	mov    esi,0x1
  414960:	xor    eax,eax
  414962:	call   405130 <__fprintf_chk@plt>
  414967:	jmp    41485a <test_json@@Base+0x13a>
  41496c:	nop    DWORD PTR [rax+0x0]
  414970:	xor    r14d,r14d
  414973:	test   r12d,r12d
  414976:	mov    QWORD PTR [rsp+0x8],0x0
  41497f:	jne    4148cd <test_json@@Base+0x1ad>
  414985:	lea    rsi,[rsp+0x20]
  41498a:	mov    rdi,r13
  41498d:	call   419440 <flatcc_builder_finalize_aligned_buffer@@Base>
  414992:	mov    rcx,QWORD PTR [rbx+0x18]
  414996:	mov    rdx,QWORD PTR [rbx]
  414999:	mov    rdi,rax
  41499c:	mov    rsi,QWORD PTR [rsp+0x20]
  4149a1:	mov    QWORD PTR [rsp+0x8],rax
  4149a6:	call   41ab60 <flatcc_verify_table_as_root@@Base>
  4149ab:	test   eax,eax
  4149ad:	je     414b82 <test_json@@Base+0x462>
  4149b3:	mov    edi,eax
  4149b5:	call   419cd0 <flatcc_verify_error_string@@Base>
  4149ba:	mov    rbx,QWORD PTR [rip+0x24627]        # 438fe8 <stderr@GLIBC_2.2.5>
  4149c1:	mov    r8d,DWORD PTR [rsp+0x2c0]
  4149c9:	lea    rcx,[rip+0x16f50]        # 42b920 <_IO_stdin_used@@Base+0x920>
  4149d0:	lea    rdx,[rip+0x16fb1]        # 42b988 <_IO_stdin_used@@Base+0x988>
  4149d7:	mov    r9,rax
  4149da:	mov    esi,0x1
  4149df:	xor    eax,eax
  4149e1:	mov    rdi,QWORD PTR [rbx]
  4149e4:	call   405130 <__fprintf_chk@plt>
  4149e9:	cmp    QWORD PTR [rsp+0x8],0x0
  4149ef:	je     414c57 <test_json@@Base+0x537>
  4149f5:	mov    rbp,QWORD PTR [rbx]
  4149f8:	mov    rbx,QWORD PTR [rsp+0x20]
  4149fd:	lea    rcx,[rip+0x16b9c]        # 42b5a0 <_IO_stdin_used@@Base+0x5a0>
  414a04:	lea    rdx,[rip+0x16ba3]        # 42b5ae <_IO_stdin_used@@Base+0x5ae>
  414a0b:	xor    eax,eax
  414a0d:	mov    esi,0x1
  414a12:	mov    rdi,rbp
  414a15:	mov    r12d,ebx
  414a18:	call   405130 <__fprintf_chk@plt>
  414a1d:	test   ebx,ebx
  414a1f:	je     414c40 <test_json@@Base+0x520>
  414a25:	lea    rax,[rsp+0x260]
  414a2d:	mov    r14,QWORD PTR [rsp+0x8]
  414a32:	xor    r15d,r15d
  414a35:	mov    QWORD PTR [rsp+0x18],rax
  414a3a:	jmp    414aae <test_json@@Base+0x38e>
  414a3c:	nop    DWORD PTR [rax+0x0]
  414a40:	test   r15d,r15d
  414a43:	jne    414b10 <test_json@@Base+0x3f0>
  414a49:	lea    rdx,[rip+0x16b69]        # 42b5b9 <_IO_stdin_used@@Base+0x5b9>
  414a50:	mov    ecx,r15d
  414a53:	mov    esi,0x1
  414a58:	mov    rdi,rbp
  414a5b:	xor    eax,eax
  414a5d:	call   405130 <__fprintf_chk@plt>
  414a62:	movzx  ecx,BYTE PTR [r14]
  414a66:	lea    rdx,[rip+0x16b54]        # 42b5c1 <_IO_stdin_used@@Base+0x5c1>
  414a6d:	xor    eax,eax
  414a6f:	mov    esi,0x1
  414a74:	mov    rdi,rbp
  414a77:	call   405130 <__fprintf_chk@plt>
  414a7c:	movzx  eax,BYTE PTR [r14]
  414a80:	lea    edx,[rax-0x20]
  414a83:	cmp    dl,0x5e
  414a86:	jbe    414b00 <test_json@@Base+0x3e0>
  414a88:	mov    eax,ebx
  414a8a:	mov    BYTE PTR [rsp+rax*1+0x260],0x2e
  414a92:	add    r15d,0x1
  414a96:	add    ebx,0x1
  414a99:	add    r14,0x1
  414a9d:	cmp    r15d,r12d
  414aa0:	mov    BYTE PTR [rsp+rbx*1+0x260],0x0
  414aa8:	je     414b30 <test_json@@Base+0x410>
  414aae:	mov    ebx,r15d
  414ab1:	and    ebx,0xf
  414ab4:	je     414a40 <test_json@@Base+0x320>
  414ab6:	test   r15b,0x7
  414aba:	jne    414a62 <test_json@@Base+0x342>
  414abc:	lea    rdx,[rip+0x16b06]        # 42b5c9 <_IO_stdin_used@@Base+0x5c9>
  414ac3:	mov    esi,0x1
  414ac8:	mov    rdi,rbp
  414acb:	xor    eax,eax
  414acd:	call   405130 <__fprintf_chk@plt>
  414ad2:	jmp    414a62 <test_json@@Base+0x342>
  414ad4:	nop    DWORD PTR [rax+0x0]
  414ad8:	mov    edi,eax
  414ada:	call   41c1c0 <flatcc_json_parser_error_string@@Base>
  414adf:	mov    rbx,QWORD PTR [rip+0x24502]        # 438fe8 <stderr@GLIBC_2.2.5>
  414ae6:	mov    r8,rax
  414ae9:	mov    ecx,DWORD PTR [rsp+0x2c0]
  414af0:	lea    rdx,[rip+0x16e01]        # 42b8f8 <_IO_stdin_used@@Base+0x8f8>
  414af7:	jmp    41484b <test_json@@Base+0x12b>
  414afc:	nop    DWORD PTR [rax+0x0]
  414b00:	mov    edx,ebx
  414b02:	mov    BYTE PTR [rsp+rdx*1+0x260],al
  414b09:	jmp    414a92 <test_json@@Base+0x372>
  414b0b:	nop    DWORD PTR [rax+rax*1+0x0]
  414b10:	mov    rcx,QWORD PTR [rsp+0x18]
  414b15:	lea    rdx,[rip+0x16a97]        # 42b5b3 <_IO_stdin_used@@Base+0x5b3>
  414b1c:	mov    esi,0x1
  414b21:	mov    rdi,rbp
  414b24:	xor    eax,eax
  414b26:	call   405130 <__fprintf_chk@plt>
  414b2b:	jmp    414a49 <test_json@@Base+0x329>
  414b30:	test   r15b,0xf
  414b34:	je     414b5c <test_json@@Base+0x43c>
  414b36:	lea    rbx,[rip+0x16a8a]        # 42b5c7 <_IO_stdin_used@@Base+0x5c7>
  414b3d:	nop    DWORD PTR [rax]
  414b40:	xor    eax,eax
  414b42:	mov    rdx,rbx
  414b45:	mov    esi,0x1
  414b4a:	mov    rdi,rbp
  414b4d:	add    r15d,0x1
  414b51:	call   405130 <__fprintf_chk@plt>
  414b56:	test   r15b,0xf
  414b5a:	jne    414b40 <test_json@@Base+0x420>
  414b5c:	mov    rcx,QWORD PTR [rsp+0x18]
  414b61:	lea    rdx,[rip+0x16a4b]        # 42b5b3 <_IO_stdin_used@@Base+0x5b3>
  414b68:	mov    esi,0x1
  414b6d:	mov    rdi,rbp
  414b70:	xor    eax,eax
  414b72:	mov    r14d,0xffffffff
  414b78:	call   405130 <__fprintf_chk@plt>
  414b7d:	jmp    4148cd <test_json@@Base+0x1ad>
  414b82:	mov    r8,QWORD PTR [rbx+0x10]
  414b86:	mov    rcx,QWORD PTR [rbx]
  414b89:	mov    rbx,QWORD PTR [rsp+0x10]
  414b8e:	mov    rdx,QWORD PTR [rsp+0x20]
  414b93:	mov    rsi,QWORD PTR [rsp+0x8]
  414b98:	mov    rdi,rbx
  414b9b:	call   42a6e0 <flatcc_json_printer_table_as_root@@Base>
  414ba0:	lea    rsi,[rsp+0x28]
  414ba5:	mov    rdi,rbx
  414ba8:	call   42acb0 <flatcc_json_printer_get_buffer@@Base>
  414bad:	test   rax,rax
  414bb0:	mov    rbp,rax
  414bb3:	je     414bcd <test_json@@Base+0x4ad>
  414bb5:	mov    rdi,QWORD PTR [rsp+0x18]
  414bba:	mov    rsi,rax
  414bbd:	call   4050c0 <strcmp@plt>
  414bc2:	test   eax,eax
  414bc4:	mov    r14d,eax
  414bc7:	je     4148cd <test_json@@Base+0x1ad>
  414bcd:	mov    rbx,QWORD PTR [rip+0x24414]        # 438fe8 <stderr@GLIBC_2.2.5>
  414bd4:	mov    ecx,DWORD PTR [rsp+0x2c0]
  414bdb:	lea    rdx,[rip+0x16dce]        # 42b9b0 <_IO_stdin_used@@Base+0x9b0>
  414be2:	mov    esi,0x1
  414be7:	xor    eax,eax
  414be9:	mov    rdi,QWORD PTR [rbx]
  414bec:	call   405130 <__fprintf_chk@plt>
  414bf1:	mov    rdi,QWORD PTR [rbx]
  414bf4:	lea    rdx,[rip+0x169ba]        # 42b5b5 <_IO_stdin_used@@Base+0x5b5>
  414bfb:	mov    rcx,rbp
  414bfe:	mov    esi,0x1
  414c03:	xor    eax,eax
  414c05:	call   405130 <__fprintf_chk@plt>
  414c0a:	mov    rdi,QWORD PTR [rbx]
  414c0d:	lea    rdx,[rip+0x16981]        # 42b595 <_IO_stdin_used@@Base+0x595>
  414c14:	mov    esi,0x1
  414c19:	xor    eax,eax
  414c1b:	call   405130 <__fprintf_chk@plt>
  414c20:	mov    rcx,QWORD PTR [rsp+0x18]
  414c25:	mov    rdi,QWORD PTR [rbx]
  414c28:	lea    rdx,[rip+0x16986]        # 42b5b5 <_IO_stdin_used@@Base+0x5b5>
  414c2f:	mov    esi,0x1
  414c34:	xor    eax,eax
  414c36:	call   405130 <__fprintf_chk@plt>
  414c3b:	jmp    4149e9 <test_json@@Base+0x2c9>
  414c40:	lea    rax,[rsp+0x260]
  414c48:	mov    QWORD PTR [rsp+0x18],rax
  414c4d:	jmp    414b5c <test_json@@Base+0x43c>
  414c52:	call   405070 <__stack_chk_fail@plt>
  414c57:	or     r14d,0xffffffff
  414c5b:	jmp    4148cd <test_json@@Base+0x1ad>

0000000000414c60 <edge_case_tests@@Base>:
  414c60:	push   rbx
  414c61:	lea    rdx,[rip+0x16963]        # 42b5cb <_IO_stdin_used@@Base+0x5cb>
  414c68:	lea    rsi,[rip+0x16d79]        # 42b9e8 <_IO_stdin_used@@Base+0x9e8>
  414c6f:	lea    rdi,[rip+0x2416a]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414c76:	xor    r9d,r9d
  414c79:	xor    r8d,r8d
  414c7c:	sub    rsp,0x8
  414c80:	xor    ecx,ecx
  414c82:	push   0x9b
  414c87:	call   414720 <test_json@@Base>
  414c8c:	lea    rdx,[rip+0x16d8d]        # 42ba20 <_IO_stdin_used@@Base+0xa20>
  414c93:	lea    rsi,[rip+0x16dae]        # 42ba48 <_IO_stdin_used@@Base+0xa48>
  414c9a:	lea    rdi,[rip+0x2413f]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414ca1:	xor    r9d,r9d
  414ca4:	xor    ecx,ecx
  414ca6:	mov    r8d,0x2
  414cac:	mov    DWORD PTR [rsp],0xa8
  414cb3:	mov    ebx,eax
  414cb5:	call   414720 <test_json@@Base>
  414cba:	lea    rdx,[rip+0x16928]        # 42b5e9 <_IO_stdin_used@@Base+0x5e9>
  414cc1:	lea    rsi,[rip+0x16da8]        # 42ba70 <_IO_stdin_used@@Base+0xa70>
  414cc8:	lea    rdi,[rip+0x24111]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414ccf:	xor    r8d,r8d
  414cd2:	xor    ecx,ecx
  414cd4:	mov    r9d,0x2
  414cda:	or     ebx,eax
  414cdc:	mov    DWORD PTR [rsp],0xac
  414ce3:	call   414720 <test_json@@Base>
  414ce8:	lea    rdx,[rip+0x16917]        # 42b606 <_IO_stdin_used@@Base+0x606>
  414cef:	lea    rsi,[rip+0x16d52]        # 42ba48 <_IO_stdin_used@@Base+0xa48>
  414cf6:	lea    rdi,[rip+0x240e3]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414cfd:	xor    ecx,ecx
  414cff:	mov    r9d,0x4
  414d05:	mov    r8d,0x2
  414d0b:	or     ebx,eax
  414d0d:	mov    DWORD PTR [rsp],0xb0
  414d14:	call   414720 <test_json@@Base>
  414d19:	lea    rdx,[rip+0x16d78]        # 42ba98 <_IO_stdin_used@@Base+0xa98>
  414d20:	lea    rsi,[rip+0x16e89]        # 42bbb0 <_IO_stdin_used@@Base+0xbb0>
  414d27:	lea    rdi,[rip+0x240b2]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414d2e:	xor    r8d,r8d
  414d31:	xor    ecx,ecx
  414d33:	mov    r9d,0x8
  414d39:	or     ebx,eax
  414d3b:	mov    DWORD PTR [rsp],0xb4
  414d42:	call   414720 <test_json@@Base>
  414d47:	lea    rdx,[rip+0x16cd2]        # 42ba20 <_IO_stdin_used@@Base+0xa20>
  414d4e:	lea    rsi,[rip+0x16e83]        # 42bbd8 <_IO_stdin_used@@Base+0xbd8>
  414d55:	lea    rdi,[rip+0x24084]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414d5c:	xor    r9d,r9d
  414d5f:	xor    ecx,ecx
  414d61:	mov    r8d,0x2
  414d67:	or     ebx,eax
  414d69:	mov    DWORD PTR [rsp],0xc3
  414d70:	call   414720 <test_json@@Base>
  414d75:	lea    rdx,[rip+0x1689d]        # 42b619 <_IO_stdin_used@@Base+0x619>
  414d7c:	lea    rsi,[rip+0x16e7d]        # 42bc00 <_IO_stdin_used@@Base+0xc00>
  414d83:	lea    rdi,[rip+0x24056]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414d8a:	xor    r9d,r9d
  414d8d:	xor    ecx,ecx
  414d8f:	mov    r8d,0x1
  414d95:	or     ebx,eax
  414d97:	mov    DWORD PTR [rsp],0xc7
  414d9e:	call   414720 <test_json@@Base>
  414da3:	lea    rdx,[rip+0x1688a]        # 42b634 <_IO_stdin_used@@Base+0x634>
  414daa:	lea    rsi,[rip+0x16e4f]        # 42bc00 <_IO_stdin_used@@Base+0xc00>
  414db1:	lea    rdi,[rip+0x24028]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414db8:	mov    r9d,0x1
  414dbe:	mov    r8d,0x1
  414dc4:	xor    ecx,ecx
  414dc6:	or     ebx,eax
  414dc8:	mov    DWORD PTR [rsp],0xcb
  414dcf:	call   414720 <test_json@@Base>
  414dd4:	lea    rdx,[rip+0x1683e]        # 42b619 <_IO_stdin_used@@Base+0x619>
  414ddb:	lea    rsi,[rip+0x16e56]        # 42bc38 <_IO_stdin_used@@Base+0xc38>
  414de2:	lea    rdi,[rip+0x23ff7]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414de9:	or     ebx,eax
  414deb:	xor    r9d,r9d
  414dee:	mov    r8d,0x1
  414df4:	xor    ecx,ecx
  414df6:	mov    DWORD PTR [rsp],0xd1
  414dfd:	call   414720 <test_json@@Base>
  414e02:	lea    rdx,[rip+0x16c17]        # 42ba20 <_IO_stdin_used@@Base+0xa20>
  414e09:	lea    rsi,[rip+0x1683b]        # 42b64b <_IO_stdin_used@@Base+0x64b>
  414e10:	lea    rdi,[rip+0x23fc9]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414e17:	xor    r9d,r9d
  414e1a:	xor    ecx,ecx
  414e1c:	mov    r8d,0x2
  414e22:	or     ebx,eax
  414e24:	mov    DWORD PTR [rsp],0xd9
  414e2b:	call   414720 <test_json@@Base>
  414e30:	lea    rdx,[rip+0x167b2]        # 42b5e9 <_IO_stdin_used@@Base+0x5e9>
  414e37:	lea    rsi,[rip+0x16e72]        # 42bcb0 <_IO_stdin_used@@Base+0xcb0>
  414e3e:	lea    rdi,[rip+0x23f9b]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414e45:	xor    r8d,r8d
  414e48:	xor    ecx,ecx
  414e4a:	mov    r9d,0x2
  414e50:	or     ebx,eax
  414e52:	mov    DWORD PTR [rsp],0xdd
  414e59:	call   414720 <test_json@@Base>
  414e5e:	lea    rdx,[rip+0x167a1]        # 42b606 <_IO_stdin_used@@Base+0x606>
  414e65:	lea    rsi,[rip+0x167df]        # 42b64b <_IO_stdin_used@@Base+0x64b>
  414e6c:	lea    rdi,[rip+0x23f6d]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414e73:	xor    ecx,ecx
  414e75:	mov    r9d,0x4
  414e7b:	mov    r8d,0x2
  414e81:	or     ebx,eax
  414e83:	mov    DWORD PTR [rsp],0xe1
  414e8a:	call   414720 <test_json@@Base>
  414e8f:	lea    rdx,[rip+0x16e42]        # 42bcd8 <_IO_stdin_used@@Base+0xcd8>
  414e96:	lea    rsi,[rip+0x167cb]        # 42b668 <_IO_stdin_used@@Base+0x668>
  414e9d:	lea    rdi,[rip+0x23f3c]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414ea4:	xor    r8d,r8d
  414ea7:	xor    ecx,ecx
  414ea9:	mov    r9d,0x8
  414eaf:	or     ebx,eax
  414eb1:	mov    DWORD PTR [rsp],0xe5
  414eb8:	call   414720 <test_json@@Base>
  414ebd:	lea    rdx,[rip+0x16b5c]        # 42ba20 <_IO_stdin_used@@Base+0xa20>
  414ec4:	lea    rsi,[rip+0x16f25]        # 42bdf0 <_IO_stdin_used@@Base+0xdf0>
  414ecb:	lea    rdi,[rip+0x23f0e]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414ed2:	xor    r9d,r9d
  414ed5:	xor    ecx,ecx
  414ed7:	mov    r8d,0x2
  414edd:	or     ebx,eax
  414edf:	mov    DWORD PTR [rsp],0xe9
  414ee6:	call   414720 <test_json@@Base>
  414eeb:	lea    rdx,[rip+0x16727]        # 42b619 <_IO_stdin_used@@Base+0x619>
  414ef2:	lea    rsi,[rip+0x16f17]        # 42be10 <_IO_stdin_used@@Base+0xe10>
  414ef9:	lea    rdi,[rip+0x23ee0]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414f00:	xor    r9d,r9d
  414f03:	xor    ecx,ecx
  414f05:	mov    r8d,0x1
  414f0b:	or     ebx,eax
  414f0d:	mov    DWORD PTR [rsp],0xed
  414f14:	call   414720 <test_json@@Base>
  414f19:	lea    rdx,[rip+0x16714]        # 42b634 <_IO_stdin_used@@Base+0x634>
  414f20:	lea    rsi,[rip+0x16ee9]        # 42be10 <_IO_stdin_used@@Base+0xe10>
  414f27:	lea    rdi,[rip+0x23eb2]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414f2e:	xor    ecx,ecx
  414f30:	mov    r9d,0x1
  414f36:	mov    r8d,0x1
  414f3c:	or     ebx,eax
  414f3e:	mov    DWORD PTR [rsp],0xf1
  414f45:	call   414720 <test_json@@Base>
  414f4a:	lea    rdx,[rip+0x166c8]        # 42b619 <_IO_stdin_used@@Base+0x619>
  414f51:	lea    rsi,[rip+0x16ee8]        # 42be40 <_IO_stdin_used@@Base+0xe40>
  414f58:	lea    rdi,[rip+0x23e81]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414f5f:	or     ebx,eax
  414f61:	xor    ecx,ecx
  414f63:	xor    r9d,r9d
  414f66:	mov    r8d,0x1
  414f6c:	mov    DWORD PTR [rsp],0xf7
  414f73:	call   414720 <test_json@@Base>
  414f78:	pop    rdx
  414f79:	or     eax,ebx
  414f7b:	pop    rcx
  414f7c:	pop    rbx
  414f7d:	ret    
  414f7e:	xchg   ax,ax

0000000000414f80 <error_case_tests@@Base>:
  414f80:	push   rbx
  414f81:	lea    rsi,[rip+0x166f3]        # 42b67b <_IO_stdin_used@@Base+0x67b>
  414f88:	lea    rdi,[rip+0x23e51]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414f8f:	xor    r9d,r9d
  414f92:	xor    r8d,r8d
  414f95:	xor    edx,edx
  414f97:	sub    rsp,0x8
  414f9b:	mov    ecx,0xd
  414fa0:	push   0x11d
  414fa5:	call   414720 <test_json@@Base>
  414faa:	lea    rsi,[rip+0x16eef]        # 42bea0 <_IO_stdin_used@@Base+0xea0>
  414fb1:	lea    rdi,[rip+0x23e28]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414fb8:	xor    r9d,r9d
  414fbb:	xor    r8d,r8d
  414fbe:	xor    edx,edx
  414fc0:	mov    ecx,0xd
  414fc5:	mov    DWORD PTR [rsp],0x11f
  414fcc:	mov    ebx,eax
  414fce:	call   414720 <test_json@@Base>
  414fd3:	lea    rsi,[rip+0x16f2e]        # 42bf08 <_IO_stdin_used@@Base+0xf08>
  414fda:	lea    rdi,[rip+0x23dff]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  414fe1:	xor    r9d,r9d
  414fe4:	xor    r8d,r8d
  414fe7:	xor    edx,edx
  414fe9:	mov    ecx,0xd
  414fee:	or     ebx,eax
  414ff0:	mov    DWORD PTR [rsp],0x121
  414ff7:	call   414720 <test_json@@Base>
  414ffc:	lea    rsi,[rip+0x16f65]        # 42bf68 <_IO_stdin_used@@Base+0xf68>
  415003:	lea    rdi,[rip+0x23dd6]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  41500a:	xor    r9d,r9d
  41500d:	xor    r8d,r8d
  415010:	xor    edx,edx
  415012:	mov    ecx,0xd
  415017:	or     ebx,eax
  415019:	mov    DWORD PTR [rsp],0x123
  415020:	call   414720 <test_json@@Base>
  415025:	lea    rsi,[rip+0x16f94]        # 42bfc0 <_IO_stdin_used@@Base+0xfc0>
  41502c:	lea    rdi,[rip+0x23dad]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415033:	xor    r9d,r9d
  415036:	xor    r8d,r8d
  415039:	xor    edx,edx
  41503b:	mov    ecx,0xd
  415040:	or     ebx,eax
  415042:	mov    DWORD PTR [rsp],0x125
  415049:	call   414720 <test_json@@Base>
  41504e:	lea    rsi,[rip+0x16fc3]        # 42c018 <_IO_stdin_used@@Base+0x1018>
  415055:	lea    rdi,[rip+0x23d84]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  41505c:	xor    r9d,r9d
  41505f:	xor    r8d,r8d
  415062:	mov    ecx,0xd
  415067:	xor    edx,edx
  415069:	or     ebx,eax
  41506b:	mov    DWORD PTR [rsp],0x128
  415072:	call   414720 <test_json@@Base>
  415077:	lea    rsi,[rip+0x1703a]        # 42c0b8 <_IO_stdin_used@@Base+0x10b8>
  41507e:	lea    rdi,[rip+0x23d5b]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415085:	or     ebx,eax
  415087:	xor    r9d,r9d
  41508a:	xor    r8d,r8d
  41508d:	mov    ecx,0xd
  415092:	xor    edx,edx
  415094:	mov    DWORD PTR [rsp],0x12b
  41509b:	call   414720 <test_json@@Base>
  4150a0:	lea    rsi,[rip+0x170b1]        # 42c158 <_IO_stdin_used@@Base+0x1158>
  4150a7:	lea    rdi,[rip+0x23d32]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4150ae:	xor    r9d,r9d
  4150b1:	xor    r8d,r8d
  4150b4:	xor    edx,edx
  4150b6:	mov    ecx,0xd
  4150bb:	or     ebx,eax
  4150bd:	mov    DWORD PTR [rsp],0x12f
  4150c4:	call   414720 <test_json@@Base>
  4150c9:	lea    rsi,[rip+0x17150]        # 42c220 <_IO_stdin_used@@Base+0x1220>
  4150d0:	lea    rdi,[rip+0x23d09]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4150d7:	xor    r9d,r9d
  4150da:	xor    r8d,r8d
  4150dd:	xor    edx,edx
  4150df:	mov    ecx,0xd
  4150e4:	or     ebx,eax
  4150e6:	mov    DWORD PTR [rsp],0x133
  4150ed:	call   414720 <test_json@@Base>
  4150f2:	lea    rsi,[rip+0x1659c]        # 42b695 <_IO_stdin_used@@Base+0x695>
  4150f9:	lea    rdi,[rip+0x23ce0]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415100:	xor    r9d,r9d
  415103:	xor    r8d,r8d
  415106:	xor    edx,edx
  415108:	mov    ecx,0xd
  41510d:	or     ebx,eax
  41510f:	mov    DWORD PTR [rsp],0x142
  415116:	call   414720 <test_json@@Base>
  41511b:	lea    rsi,[rip+0x171c6]        # 42c2e8 <_IO_stdin_used@@Base+0x12e8>
  415122:	lea    rdi,[rip+0x23cb7]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415129:	xor    r9d,r9d
  41512c:	xor    r8d,r8d
  41512f:	xor    edx,edx
  415131:	mov    ecx,0xd
  415136:	or     ebx,eax
  415138:	mov    DWORD PTR [rsp],0x144
  41513f:	call   414720 <test_json@@Base>
  415144:	lea    rsi,[rip+0x171f5]        # 42c340 <_IO_stdin_used@@Base+0x1340>
  41514b:	lea    rdi,[rip+0x23c8e]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415152:	xor    r9d,r9d
  415155:	xor    r8d,r8d
  415158:	xor    edx,edx
  41515a:	mov    ecx,0xd
  41515f:	or     ebx,eax
  415161:	mov    DWORD PTR [rsp],0x146
  415168:	call   414720 <test_json@@Base>
  41516d:	lea    rsi,[rip+0x17224]        # 42c398 <_IO_stdin_used@@Base+0x1398>
  415174:	lea    rdi,[rip+0x23c65]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  41517b:	xor    r9d,r9d
  41517e:	xor    r8d,r8d
  415181:	xor    edx,edx
  415183:	mov    ecx,0xd
  415188:	mov    DWORD PTR [rsp],0x148
  41518f:	or     ebx,eax
  415191:	call   414720 <test_json@@Base>
  415196:	lea    rsi,[rip+0x1724b]        # 42c3e8 <_IO_stdin_used@@Base+0x13e8>
  41519d:	lea    rdi,[rip+0x23c3c]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4151a4:	or     ebx,eax
  4151a6:	mov    ecx,0xd
  4151ab:	xor    r9d,r9d
  4151ae:	xor    r8d,r8d
  4151b1:	xor    edx,edx
  4151b3:	mov    DWORD PTR [rsp],0x14a
  4151ba:	call   414720 <test_json@@Base>
  4151bf:	lea    rsi,[rip+0x17272]        # 42c438 <_IO_stdin_used@@Base+0x1438>
  4151c6:	lea    rdi,[rip+0x23c13]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4151cd:	xor    r9d,r9d
  4151d0:	xor    r8d,r8d
  4151d3:	mov    ecx,0xd
  4151d8:	xor    edx,edx
  4151da:	mov    DWORD PTR [rsp],0x14d
  4151e1:	or     ebx,eax
  4151e3:	call   414720 <test_json@@Base>
  4151e8:	lea    rsi,[rip+0x172d9]        # 42c4c8 <_IO_stdin_used@@Base+0x14c8>
  4151ef:	lea    rdi,[rip+0x23bea]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4151f6:	xor    r9d,r9d
  4151f9:	xor    r8d,r8d
  4151fc:	mov    ecx,0xd
  415201:	xor    edx,edx
  415203:	mov    DWORD PTR [rsp],0x150
  41520a:	or     ebx,eax
  41520c:	call   414720 <test_json@@Base>
  415211:	lea    rsi,[rip+0x17340]        # 42c558 <_IO_stdin_used@@Base+0x1558>
  415218:	lea    rdi,[rip+0x23bc1]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  41521f:	xor    r9d,r9d
  415222:	xor    r8d,r8d
  415225:	mov    ecx,0xd
  41522a:	xor    edx,edx
  41522c:	mov    DWORD PTR [rsp],0x154
  415233:	or     ebx,eax
  415235:	call   414720 <test_json@@Base>
  41523a:	lea    rsi,[rip+0x173c7]        # 42c608 <_IO_stdin_used@@Base+0x1608>
  415241:	lea    rdi,[rip+0x23b98]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415248:	or     ebx,eax
  41524a:	mov    ecx,0xd
  41524f:	xor    edx,edx
  415251:	xor    r9d,r9d
  415254:	xor    r8d,r8d
  415257:	mov    DWORD PTR [rsp],0x158
  41525e:	call   414720 <test_json@@Base>
  415263:	pop    rdx
  415264:	or     eax,ebx
  415266:	pop    rcx
  415267:	pop    rbx
  415268:	ret    
  415269:	nop    DWORD PTR [rax+0x0]

0000000000415270 <base64_tests@@Base>:
  415270:	push   rbx
  415271:	lea    rdx,[rip+0x1638e]        # 42b606 <_IO_stdin_used@@Base+0x606>
  415278:	lea    rsi,[rip+0x1642e]        # 42b6ad <_IO_stdin_used@@Base+0x6ad>
  41527f:	lea    rdi,[rip+0x23b5a]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415286:	xor    r9d,r9d
  415289:	xor    r8d,r8d
  41528c:	sub    rsp,0x8
  415290:	xor    ecx,ecx
  415292:	push   0x171
  415297:	call   414720 <test_json@@Base>
  41529c:	lea    rdx,[rip+0x17415]        # 42c6b8 <_IO_stdin_used@@Base+0x16b8>
  4152a3:	lea    rsi,[rip+0x17436]        # 42c6e0 <_IO_stdin_used@@Base+0x16e0>
  4152aa:	lea    rdi,[rip+0x23b2f]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4152b1:	xor    r9d,r9d
  4152b4:	xor    r8d,r8d
  4152b7:	xor    ecx,ecx
  4152b9:	mov    DWORD PTR [rsp],0x174
  4152c0:	mov    ebx,eax
  4152c2:	call   414720 <test_json@@Base>
  4152c7:	lea    rdx,[rip+0x1743a]        # 42c708 <_IO_stdin_used@@Base+0x1708>
  4152ce:	lea    rsi,[rip+0x174eb]        # 42c7c0 <_IO_stdin_used@@Base+0x17c0>
  4152d5:	lea    rdi,[rip+0x23b04]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4152dc:	xor    r9d,r9d
  4152df:	xor    r8d,r8d
  4152e2:	xor    ecx,ecx
  4152e4:	mov    DWORD PTR [rsp],0x178
  4152eb:	or     ebx,eax
  4152ed:	call   414720 <test_json@@Base>
  4152f2:	lea    rdx,[rip+0x17587]        # 42c880 <_IO_stdin_used@@Base+0x1880>
  4152f9:	lea    rsi,[rip+0x17638]        # 42c938 <_IO_stdin_used@@Base+0x1938>
  415300:	lea    rdi,[rip+0x23ad9]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415307:	xor    r9d,r9d
  41530a:	xor    r8d,r8d
  41530d:	xor    ecx,ecx
  41530f:	mov    DWORD PTR [rsp],0x17b
  415316:	or     ebx,eax
  415318:	call   414720 <test_json@@Base>
  41531d:	lea    rdx,[rip+0x173e4]        # 42c708 <_IO_stdin_used@@Base+0x1708>
  415324:	lea    rsi,[rip+0x176cd]        # 42c9f8 <_IO_stdin_used@@Base+0x19f8>
  41532b:	lea    rdi,[rip+0x23aae]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415332:	xor    r9d,r9d
  415335:	xor    r8d,r8d
  415338:	xor    ecx,ecx
  41533a:	mov    DWORD PTR [rsp],0x17e
  415341:	or     ebx,eax
  415343:	call   414720 <test_json@@Base>
  415348:	lea    rdx,[rip+0x17531]        # 42c880 <_IO_stdin_used@@Base+0x1880>
  41534f:	lea    rsi,[rip+0x1775a]        # 42cab0 <_IO_stdin_used@@Base+0x1ab0>
  415356:	lea    rdi,[rip+0x23a83]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  41535d:	xor    r9d,r9d
  415360:	xor    r8d,r8d
  415363:	xor    ecx,ecx
  415365:	mov    DWORD PTR [rsp],0x181
  41536c:	or     ebx,eax
  41536e:	call   414720 <test_json@@Base>
  415373:	lea    rsi,[rip+0x177f6]        # 42cb70 <_IO_stdin_used@@Base+0x1b70>
  41537a:	lea    rdi,[rip+0x23a5f]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415381:	or     ebx,eax
  415383:	xor    r9d,r9d
  415386:	xor    r8d,r8d
  415389:	mov    ecx,0x1f
  41538e:	xor    edx,edx
  415390:	mov    DWORD PTR [rsp],0x184
  415397:	call   414720 <test_json@@Base>
  41539c:	lea    rsi,[rip+0x1788d]        # 42cc30 <_IO_stdin_used@@Base+0x1c30>
  4153a3:	lea    rdi,[rip+0x23a36]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4153aa:	xor    r9d,r9d
  4153ad:	xor    r8d,r8d
  4153b0:	mov    ecx,0x20
  4153b5:	xor    edx,edx
  4153b7:	mov    DWORD PTR [rsp],0x187
  4153be:	or     ebx,eax
  4153c0:	call   414720 <test_json@@Base>
  4153c5:	lea    rdx,[rip+0x17924]        # 42ccf0 <_IO_stdin_used@@Base+0x1cf0>
  4153cc:	lea    rsi,[rip+0x179f5]        # 42cdc8 <_IO_stdin_used@@Base+0x1dc8>
  4153d3:	lea    rdi,[rip+0x23a06]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  4153da:	xor    r9d,r9d
  4153dd:	xor    r8d,r8d
  4153e0:	xor    ecx,ecx
  4153e2:	mov    DWORD PTR [rsp],0x196
  4153e9:	or     ebx,eax
  4153eb:	call   414720 <test_json@@Base>
  4153f0:	lea    rdx,[rip+0x178f9]        # 42ccf0 <_IO_stdin_used@@Base+0x1cf0>
  4153f7:	lea    rsi,[rip+0x17a9a]        # 42ce98 <_IO_stdin_used@@Base+0x1e98>
  4153fe:	lea    rdi,[rip+0x239db]        # 438de0 <flatcc_builder_padding_base@@Base+0x9300>
  415405:	or     ebx,eax
  415407:	xor    ecx,ecx
  415409:	xor    r9d,r9d
  41540c:	xor    r8d,r8d
  41540f:	mov    DWORD PTR [rsp],0x1a3
  415416:	call   414720 <test_json@@Base>
  41541b:	pop    rdx
  41541c:	or     eax,ebx
  41541e:	pop    rcx
  41541f:	pop    rbx
  415420:	ret    
  415421:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41542c:	nop    DWORD PTR [rax+0x0]

0000000000415430 <mixed_type_union_tests@@Base>:
  415430:	push   rbx
  415431:	lea    rdx,[rip+0x17b30]        # 42cf68 <_IO_stdin_used@@Base+0x1f68>
  415438:	lea    rsi,[rip+0x17b71]        # 42cfb0 <_IO_stdin_used@@Base+0x1fb0>
  41543f:	lea    rdi,[rip+0x2395a]        # 438da0 <flatcc_builder_padding_base@@Base+0x92c0>
  415446:	xor    r9d,r9d
  415449:	xor    r8d,r8d
  41544c:	sub    rsp,0x8
  415450:	xor    ecx,ecx
  415452:	push   0x1b0
  415457:	call   414720 <test_json@@Base>
  41545c:	lea    rdx,[rip+0x17b9d]        # 42d000 <_IO_stdin_used@@Base+0x2000>
  415463:	lea    rsi,[rip+0x17c0e]        # 42d078 <_IO_stdin_used@@Base+0x2078>
  41546a:	lea    rdi,[rip+0x2392f]        # 438da0 <flatcc_builder_padding_base@@Base+0x92c0>
  415471:	xor    r9d,r9d
  415474:	xor    r8d,r8d
  415477:	xor    ecx,ecx
  415479:	mov    DWORD PTR [rsp],0x1b5
  415480:	mov    ebx,eax
  415482:	call   414720 <test_json@@Base>
  415487:	lea    rdx,[rip+0x17b72]        # 42d000 <_IO_stdin_used@@Base+0x2000>
  41548e:	lea    rsi,[rip+0x17c6b]        # 42d100 <_IO_stdin_used@@Base+0x2100>
  415495:	lea    rdi,[rip+0x23904]        # 438da0 <flatcc_builder_padding_base@@Base+0x92c0>
  41549c:	xor    r9d,r9d
  41549f:	xor    r8d,r8d
  4154a2:	xor    ecx,ecx
  4154a4:	mov    DWORD PTR [rsp],0x1ba
  4154ab:	or     ebx,eax
  4154ad:	call   414720 <test_json@@Base>
  4154b2:	lea    rdx,[rip+0x17cdf]        # 42d198 <_IO_stdin_used@@Base+0x2198>
  4154b9:	lea    rsi,[rip+0x17d98]        # 42d258 <_IO_stdin_used@@Base+0x2258>
  4154c0:	lea    rdi,[rip+0x238d9]        # 438da0 <flatcc_builder_padding_base@@Base+0x92c0>
  4154c7:	xor    r9d,r9d
  4154ca:	xor    r8d,r8d
  4154cd:	xor    ecx,ecx
  4154cf:	mov    DWORD PTR [rsp],0x1c1
  4154d6:	or     ebx,eax
  4154d8:	call   414720 <test_json@@Base>
  4154dd:	lea    rdx,[rip+0x17e54]        # 42d338 <_IO_stdin_used@@Base+0x2338>
  4154e4:	lea    rsi,[rip+0x17f2d]        # 42d418 <_IO_stdin_used@@Base+0x2418>
  4154eb:	lea    rdi,[rip+0x238ae]        # 438da0 <flatcc_builder_padding_base@@Base+0x92c0>
  4154f2:	xor    r9d,r9d
  4154f5:	xor    r8d,r8d
  4154f8:	xor    ecx,ecx
  4154fa:	mov    DWORD PTR [rsp],0x1ca
  415501:	or     ebx,eax
  415503:	call   414720 <test_json@@Base>
  415508:	lea    rdx,[rip+0x18011]        # 42d520 <_IO_stdin_used@@Base+0x2520>
  41550f:	lea    rsi,[rip+0x18152]        # 42d668 <_IO_stdin_used@@Base+0x2668>
  415516:	lea    rdi,[rip+0x23883]        # 438da0 <flatcc_builder_padding_base@@Base+0x92c0>
  41551d:	xor    r9d,r9d
  415520:	xor    r8d,r8d
  415523:	xor    ecx,ecx
  415525:	mov    DWORD PTR [rsp],0x1d5
  41552c:	or     ebx,eax
  41552e:	call   414720 <test_json@@Base>
  415533:	lea    rdx,[rip+0x17ac6]        # 42d000 <_IO_stdin_used@@Base+0x2000>
  41553a:	lea    rsi,[rip+0x182af]        # 42d7f0 <_IO_stdin_used@@Base+0x27f0>
  415541:	lea    rdi,[rip+0x23858]        # 438da0 <flatcc_builder_padding_base@@Base+0x92c0>
  415548:	or     ebx,eax
  41554a:	xor    r9d,r9d
  41554d:	xor    r8d,r8d
  415550:	xor    ecx,ecx
  415552:	mov    DWORD PTR [rsp],0x1da
  415559:	call   414720 <test_json@@Base>
  41555e:	pop    rdx
  41555f:	or     eax,ebx
  415561:	pop    rcx
  415562:	pop    rbx
  415563:	ret    
  415564:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41556f:	nop

0000000000415570 <union_vector_tests@@Base>:
  415570:	push   rbx
  415571:	lea    rdx,[rip+0x18308]        # 42d880 <_IO_stdin_used@@Base+0x2880>
  415578:	lea    rsi,[rip+0x18339]        # 42d8b8 <_IO_stdin_used@@Base+0x28b8>
  41557f:	lea    rdi,[rip+0x2383a]        # 438dc0 <flatcc_builder_padding_base@@Base+0x92e0>
  415586:	xor    r9d,r9d
  415589:	xor    r8d,r8d
  41558c:	sub    rsp,0x8
  415590:	xor    ecx,ecx
  415592:	push   0x1e5
  415597:	call   414720 <test_json@@Base>
  41559c:	lea    rdx,[rip+0x18355]        # 42d8f8 <_IO_stdin_used@@Base+0x28f8>
  4155a3:	lea    rsi,[rip+0x1837e]        # 42d928 <_IO_stdin_used@@Base+0x2928>
  4155aa:	lea    rdi,[rip+0x2380f]        # 438dc0 <flatcc_builder_padding_base@@Base+0x92e0>
  4155b1:	xor    r9d,r9d
  4155b4:	xor    r8d,r8d
  4155b7:	xor    ecx,ecx
  4155b9:	mov    DWORD PTR [rsp],0x1e8
  4155c0:	mov    ebx,eax
  4155c2:	call   414720 <test_json@@Base>
  4155c7:	lea    rdx,[rip+0x18392]        # 42d960 <_IO_stdin_used@@Base+0x2960>
  4155ce:	lea    rsi,[rip+0x183d3]        # 42d9a8 <_IO_stdin_used@@Base+0x29a8>
  4155d5:	lea    rdi,[rip+0x237e4]        # 438dc0 <flatcc_builder_padding_base@@Base+0x92e0>
  4155dc:	xor    r9d,r9d
  4155df:	xor    r8d,r8d
  4155e2:	xor    ecx,ecx
  4155e4:	mov    DWORD PTR [rsp],0x1eb
  4155eb:	or     ebx,eax
  4155ed:	call   414720 <test_json@@Base>
  4155f2:	lea    rdx,[rip+0x183ff]        # 42d9f8 <_IO_stdin_used@@Base+0x29f8>
  4155f9:	lea    rsi,[rip+0x18468]        # 42da68 <_IO_stdin_used@@Base+0x2a68>
  415600:	lea    rdi,[rip+0x237b9]        # 438dc0 <flatcc_builder_padding_base@@Base+0x92e0>
  415607:	xor    r9d,r9d
  41560a:	xor    r8d,r8d
  41560d:	xor    ecx,ecx
  41560f:	mov    DWORD PTR [rsp],0x1ee
  415616:	or     ebx,eax
  415618:	call   414720 <test_json@@Base>
  41561d:	lea    rdx,[rip+0x1825c]        # 42d880 <_IO_stdin_used@@Base+0x2880>
  415624:	lea    rsi,[rip+0x184bd]        # 42dae8 <_IO_stdin_used@@Base+0x2ae8>
  41562b:	lea    rdi,[rip+0x2378e]        # 438dc0 <flatcc_builder_padding_base@@Base+0x92e0>
  415632:	xor    r9d,r9d
  415635:	xor    r8d,r8d
  415638:	xor    ecx,ecx
  41563a:	mov    DWORD PTR [rsp],0x1f1
  415641:	or     ebx,eax
  415643:	call   414720 <test_json@@Base>
  415648:	lea    rdx,[rip+0x184d9]        # 42db28 <_IO_stdin_used@@Base+0x2b28>
  41564f:	lea    rsi,[rip+0x18532]        # 42db88 <_IO_stdin_used@@Base+0x2b88>
  415656:	lea    rdi,[rip+0x23763]        # 438dc0 <flatcc_builder_padding_base@@Base+0x92e0>
  41565d:	or     ebx,eax
  41565f:	xor    ecx,ecx
  415661:	xor    r9d,r9d
  415664:	xor    r8d,r8d
  415667:	mov    DWORD PTR [rsp],0x1f4
  41566e:	call   414720 <test_json@@Base>
  415673:	pop    rdx
  415674:	or     eax,ebx
  415676:	pop    rcx
  415677:	pop    rbx
  415678:	ret    
  415679:	nop    DWORD PTR [rax+0x0]
  415680:	push   rbp
  415681:	push   rbx
  415682:	mov    ebp,edx
  415684:	mov    rbx,rdi
  415687:	mov    r8d,0x1
  41568d:	mov    ecx,0x1
  415692:	sub    rsp,0x8
  415696:	mov    edx,DWORD PTR [rdi+0x28]
  415699:	add    rdx,rsi
  41569c:	lea    rsi,[rdi+0x68]
  4156a0:	mov    rdi,QWORD PTR [rdi+0x40]
  4156a4:	call   QWORD PTR [rbx+0x50]
  4156a7:	test   eax,eax
  4156a9:	jne    4156d8 <union_vector_tests@@Base+0x168>
  4156ab:	mov    edx,DWORD PTR [rbx+0x28]
  4156ae:	mov    rcx,rdx
  4156b1:	add    rdx,QWORD PTR [rbx+0x68]
  4156b5:	mov    QWORD PTR [rbx+0x18],rdx
  4156b9:	mov    edx,DWORD PTR [rbx+0x70]
  4156bc:	sub    edx,ecx
  4156be:	cmp    ebp,edx
  4156c0:	cmovb  edx,ebp
  4156c3:	mov    DWORD PTR [rbx+0x24],edx
  4156c6:	mov    rdx,QWORD PTR [rbx+0x30]
  4156ca:	mov    DWORD PTR [rdx+0x4],ebp
  4156cd:	add    rsp,0x8
  4156d1:	pop    rbx
  4156d2:	pop    rbp
  4156d3:	ret    
  4156d4:	nop    DWORD PTR [rax+0x0]
  4156d8:	mov    eax,0xffffffff
  4156dd:	jmp    4156cd <union_vector_tests@@Base+0x15d>
  4156df:	nop

00000000004156e0 <flatcc_builder_default_alloc@@Base>:
  4156e0:	push   r12
  4156e2:	push   rbp
  4156e3:	mov    rbp,rsi
  4156e6:	push   rbx
  4156e7:	sub    rsp,0x10
  4156eb:	test   rdx,rdx
  4156ee:	jne    415720 <flatcc_builder_default_alloc@@Base+0x40>
  4156f0:	mov    rdi,QWORD PTR [rsi]
  4156f3:	xor    eax,eax
  4156f5:	test   rdi,rdi
  4156f8:	je     415717 <flatcc_builder_default_alloc@@Base+0x37>
  4156fa:	mov    DWORD PTR [rsp+0xc],eax
  4156fe:	call   405030 <free@plt>
  415703:	mov    eax,DWORD PTR [rsp+0xc]
  415707:	mov    QWORD PTR [rbp+0x0],0x0
  41570f:	mov    QWORD PTR [rbp+0x8],0x0
  415717:	add    rsp,0x10
  41571b:	pop    rbx
  41571c:	pop    rbp
  41571d:	pop    r12
  41571f:	ret    
  415720:	cmp    r8d,0x4
  415724:	je     4157c0 <flatcc_builder_default_alloc@@Base+0xe0>
  41572a:	jle    4157d0 <flatcc_builder_default_alloc@@Base+0xf0>
  415730:	cmp    r8d,0x5
  415734:	mov    rbx,rdx
  415737:	je     415758 <flatcc_builder_default_alloc@@Base+0x78>
  415739:	cmp    r8d,0x7
  41573d:	mov    ebx,0x40
  415742:	je     415753 <flatcc_builder_default_alloc@@Base+0x73>
  415744:	jmp    4157df <flatcc_builder_default_alloc@@Base+0xff>
  415749:	nop    DWORD PTR [rax+0x0]
  415750:	add    rbx,rbx
  415753:	cmp    rdx,rbx
  415756:	ja     415750 <flatcc_builder_default_alloc@@Base+0x70>
  415758:	mov    rax,QWORD PTR [rbp+0x8]
  41575c:	cmp    rdx,rax
  41575f:	ja     41576e <flatcc_builder_default_alloc@@Base+0x8e>
  415761:	shr    rax,1
  415764:	mov    rdx,rax
  415767:	xor    eax,eax
  415769:	cmp    rdx,rbx
  41576c:	jae    415717 <flatcc_builder_default_alloc@@Base+0x37>
  41576e:	mov    rdi,QWORD PTR [rbp+0x0]
  415772:	mov    rsi,rbx
  415775:	mov    DWORD PTR [rsp+0xc],ecx
  415779:	call   405100 <realloc@plt>
  41577e:	test   rax,rax
  415781:	mov    r12,rax
  415784:	je     4157e9 <flatcc_builder_default_alloc@@Base+0x109>
  415786:	mov    ecx,DWORD PTR [rsp+0xc]
  41578a:	test   ecx,ecx
  41578c:	je     4157a8 <flatcc_builder_default_alloc@@Base+0xc8>
  41578e:	mov    rax,QWORD PTR [rbp+0x8]
  415792:	cmp    rax,rbx
  415795:	jae    4157a8 <flatcc_builder_default_alloc@@Base+0xc8>
  415797:	mov    rdx,rbx
  41579a:	lea    rdi,[r12+rax*1]
  41579e:	xor    esi,esi
  4157a0:	sub    rdx,rax
  4157a3:	call   405090 <memset@plt>
  4157a8:	mov    QWORD PTR [rbp+0x0],r12
  4157ac:	mov    QWORD PTR [rbp+0x8],rbx
  4157b0:	add    rsp,0x10
  4157b4:	pop    rbx
  4157b5:	xor    eax,eax
  4157b7:	pop    rbp
  4157b8:	pop    r12
  4157ba:	ret    
  4157bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4157c0:	mov    ebx,0x120
  4157c5:	jmp    415753 <flatcc_builder_default_alloc@@Base+0x73>
  4157c7:	nop    WORD PTR [rax+rax*1+0x0]
  4157d0:	cmp    r8d,0x1
  4157d4:	mov    ebx,0x100
  4157d9:	je     415753 <flatcc_builder_default_alloc@@Base+0x73>
  4157df:	mov    ebx,0x20
  4157e4:	jmp    415753 <flatcc_builder_default_alloc@@Base+0x73>
  4157e9:	mov    eax,0xffffffff
  4157ee:	jmp    415717 <flatcc_builder_default_alloc@@Base+0x37>
  4157f3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4157fe:	xchg   ax,ax
  415800:	push   rbx
  415801:	mov    r9,rdi
  415804:	sub    rsp,0xa0
  41580b:	mov    rbx,QWORD PTR fs:0x28
  415814:	mov    QWORD PTR [rsp+0x98],rbx
  41581c:	xor    ebx,ebx
  41581e:	test   dx,dx
  415821:	je     415880 <flatcc_builder_default_alloc@@Base+0x1a0>
  415823:	mov    eax,edx
  415825:	movzx  edx,dx
  415828:	movzx  edi,WORD PTR [rsi]
  41582b:	cmp    di,0x3
  41582f:	ja     41583e <flatcc_builder_default_alloc@@Base+0x15e>
  415831:	mov    edi,0x4
  415836:	mov    WORD PTR [rsi],di
  415839:	mov    edi,0x4
  41583e:	cmp    ax,di
  415841:	jbe    415846 <flatcc_builder_default_alloc@@Base+0x166>
  415843:	mov    WORD PTR [rsi],ax
  415846:	test   ecx,ecx
  415848:	jne    415858 <flatcc_builder_default_alloc@@Base+0x178>
  41584a:	mov    ebx,DWORD PTR [r9+0xf4]
  415851:	sub    edx,0x1
  415854:	and    edx,ebx
  415856:	jne    4158a0 <flatcc_builder_default_alloc@@Base+0x1c0>
  415858:	xor    eax,eax
  41585a:	mov    rbx,QWORD PTR [rsp+0x98]
  415862:	xor    rbx,QWORD PTR fs:0x28
  41586b:	jne    41590d <flatcc_builder_default_alloc@@Base+0x22d>
  415871:	add    rsp,0xa0
  415878:	pop    rbx
  415879:	ret    
  41587a:	nop    WORD PTR [rax+rax*1+0x0]
  415880:	movzx  eax,WORD PTR [rdi+0xec]
  415887:	test   ax,ax
  41588a:	movzx  edx,ax
  41588d:	jne    415828 <flatcc_builder_default_alloc@@Base+0x148>
  41588f:	mov    edx,0x1
  415894:	mov    eax,0x1
  415899:	jmp    415828 <flatcc_builder_default_alloc@@Base+0x148>
  41589b:	nop    DWORD PTR [rax+rax*1+0x0]
  4158a0:	mov    rax,0x42fae0
  4158a7:	movsxd r8,edx
  4158aa:	add    edx,ebx
  4158ac:	cmp    ebx,edx
  4158ae:	mov    QWORD PTR [rsp],r8
  4158b2:	mov    QWORD PTR [rsp+0x18],r8
  4158b7:	mov    DWORD PTR [rsp+0x8],0x1
  4158bf:	mov    DWORD PTR [r9+0xf4],edx
  4158c6:	mov    QWORD PTR [rsp+0x10],rax
  4158cb:	jg     415912 <flatcc_builder_default_alloc@@Base+0x232>
  4158cd:	lea    rsi,[rsp+0x10]
  4158d2:	mov    rdi,QWORD PTR [r9+0x38]
  4158d6:	mov    ecx,ebx
  4158d8:	mov    edx,0x1
  4158dd:	call   QWORD PTR [r9+0x48]
  4158e1:	test   eax,eax
  4158e3:	jne    415917 <flatcc_builder_default_alloc@@Base+0x237>
  4158e5:	cmp    ebx,0xffffffff
  4158e8:	jne    415858 <flatcc_builder_default_alloc@@Base+0x178>
  4158ee:	lea    rcx,[rip+0x1a15b]        # 42fa50 <_IO_stdin_used@@Base+0x4a50>
  4158f5:	lea    rsi,[rip+0x19704]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4158fc:	lea    rdi,[rip+0x19a94]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  415903:	mov    edx,0x2be
  415908:	call   405080 <__assert_fail@plt>
  41590d:	call   405070 <__stack_chk_fail@plt>
  415912:	call   4052f0 <__sprintf_chk@plt+0x1a0>
  415917:	lea    rcx,[rip+0x1a122]        # 42fa40 <_IO_stdin_used@@Base+0x4a40>
  41591e:	lea    rsi,[rip+0x196db]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  415925:	lea    rdi,[rip+0x19a6b]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  41592c:	mov    edx,0x2a5
  415931:	call   405080 <__assert_fail@plt>
  415936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415940:	push   r12
  415942:	push   rbp
  415943:	mov    r12d,esi
  415946:	push   rbx
  415947:	movsxd rax,DWORD PTR [rdi+0x104]
  41594e:	mov    rbx,rdi
  415951:	lea    edx,[rax+0x1]
  415954:	cmp    edx,DWORD PTR [rdi+0x108]
  41595a:	mov    DWORD PTR [rdi+0x104],edx
  415960:	jle    4159e0 <flatcc_builder_default_alloc@@Base+0x300>
  415962:	mov    ecx,DWORD PTR [rdi+0x120]
  415968:	test   ecx,ecx
  41596a:	jle    415974 <flatcc_builder_default_alloc@@Base+0x294>
  41596c:	cmp    edx,ecx
  41596e:	jg     415a60 <flatcc_builder_default_alloc@@Base+0x380>
  415974:	lea    rcx,[rax+rax*8]
  415978:	lea    rbp,[rcx*4+0x0]
  415980:	lea    rdx,[rbp+0x24]
  415984:	cmp    rdx,QWORD PTR [rbx+0xa0]
  41598b:	ja     415a38 <flatcc_builder_default_alloc@@Base+0x358>
  415991:	mov    rcx,rbp
  415994:	add    rcx,QWORD PTR [rbx+0x98]
  41599b:	test   rcx,rcx
  41599e:	mov    QWORD PTR [rbx+0x30],rcx
  4159a2:	je     415a60 <flatcc_builder_default_alloc@@Base+0x380>
  4159a8:	movabs rdx,0xe38e38e38e38e38f
  4159b2:	mov    rax,rdx
  4159b5:	mul    QWORD PTR [rbx+0xa0]
  4159bc:	mov    eax,DWORD PTR [rbx+0x120]
  4159c2:	shr    rdx,0x5
  4159c6:	test   eax,eax
  4159c8:	mov    DWORD PTR [rbx+0x108],edx
  4159ce:	jle    415a30 <flatcc_builder_default_alloc@@Base+0x350>
  4159d0:	cmp    eax,edx
  4159d2:	jge    415a30 <flatcc_builder_default_alloc@@Base+0x350>
  4159d4:	mov    DWORD PTR [rbx+0x108],eax
  4159da:	mov    rax,rcx
  4159dd:	jmp    4159ec <flatcc_builder_default_alloc@@Base+0x30c>
  4159df:	nop
  4159e0:	mov    rax,QWORD PTR [rdi+0x30]
  4159e4:	add    rax,0x24
  4159e8:	mov    QWORD PTR [rdi+0x30],rax
  4159ec:	movzx  edx,WORD PTR [rbx+0xea]
  4159f3:	mov    ecx,DWORD PTR [rbx+0x20]
  4159f6:	mov    DWORD PTR [rax+0x8],ecx
  4159f9:	mov    WORD PTR [rax+0xc],dx
  4159fd:	mov    edx,DWORD PTR [rbx+0x28]
  415a00:	mov    WORD PTR [rbx+0xea],r12w
  415a08:	mov    DWORD PTR [rax+0x4],0xfffffffc
  415a0f:	mov    DWORD PTR [rax],edx
  415a11:	lea    eax,[rcx+rdx*1+0x7]
  415a15:	mov    DWORD PTR [rbx+0x20],0x0
  415a1c:	and    eax,0xfffffff8
  415a1f:	mov    DWORD PTR [rbx+0x28],eax
  415a22:	xor    eax,eax
  415a24:	pop    rbx
  415a25:	pop    rbp
  415a26:	pop    r12
  415a28:	ret    
  415a29:	nop    DWORD PTR [rax+0x0]
  415a30:	mov    rax,rcx
  415a33:	jmp    4159ec <flatcc_builder_default_alloc@@Base+0x30c>
  415a35:	nop    DWORD PTR [rax]
  415a38:	xor    ecx,ecx
  415a3a:	lea    rsi,[rbx+0x98]
  415a41:	mov    rdi,QWORD PTR [rbx+0x40]
  415a45:	mov    r8d,0x4
  415a4b:	call   QWORD PTR [rbx+0x50]
  415a4e:	test   eax,eax
  415a50:	je     415991 <flatcc_builder_default_alloc@@Base+0x2b1>
  415a56:	call   4052cd <__sprintf_chk@plt+0x17d>
  415a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  415a60:	mov    eax,0xffffffff
  415a65:	jmp    415a24 <flatcc_builder_default_alloc@@Base+0x344>
  415a67:	nop    WORD PTR [rax+rax*1+0x0]
  415a70:	push   rbp
  415a71:	push   rbx
  415a72:	sub    rsp,0xb8
  415a79:	mov    rax,QWORD PTR fs:0x28
  415a82:	mov    QWORD PTR [rsp+0xa8],rax
  415a8a:	xor    eax,eax
  415a8c:	cmp    edx,0x3fffffff
  415a92:	ja     415c28 <flatcc_builder_default_alloc@@Base+0x548>
  415a98:	cmp    WORD PTR [rdi+0xe8],0x3
  415aa0:	mov    rbx,rdi
  415aa3:	mov    r10d,edx
  415aa6:	ja     415ab4 <flatcc_builder_default_alloc@@Base+0x3d4>
  415aa8:	mov    eax,0x4
  415aad:	mov    WORD PTR [rdi+0xe8],ax
  415ab4:	mov    eax,DWORD PTR [rbx+0xf0]
  415aba:	lea    r9d,[rdx*4+0x0]
  415ac2:	lea    r8,[rsp+0xc]
  415ac7:	mov    DWORD PTR [rsp+0xc],edx
  415acb:	mov    QWORD PTR [rsp+0x10],0x4
  415ad4:	mov    QWORD PTR [rsp+0x20],r8
  415ad9:	mov    QWORD PTR [rsp+0x28],0x4
  415ae2:	mov    r8d,0x4
  415ae8:	mov    edi,eax
  415aea:	mov    DWORD PTR [rsp+0x18],0x1
  415af2:	and    edi,0x3
  415af5:	test   r9d,r9d
  415af8:	je     415b15 <flatcc_builder_default_alloc@@Base+0x435>
  415afa:	lea    r8,[r9+0x4]
  415afe:	mov    QWORD PTR [rsp+0x30],rsi
  415b03:	mov    QWORD PTR [rsp+0x38],r9
  415b08:	mov    DWORD PTR [rsp+0x18],0x2
  415b10:	mov    QWORD PTR [rsp+0x10],r8
  415b15:	test   edi,edi
  415b17:	jne    415bf0 <flatcc_builder_default_alloc@@Base+0x510>
  415b1d:	mov    r11d,eax
  415b20:	sub    r11d,r8d
  415b23:	test   edx,edx
  415b25:	je     415b96 <flatcc_builder_default_alloc@@Base+0x4b6>
  415b27:	mov    edx,0xfffffffc
  415b2c:	xor    eax,eax
  415b2e:	jmp    415b57 <flatcc_builder_default_alloc@@Base+0x477>
  415b30:	mov    r9d,edx
  415b33:	sub    r9d,r11d
  415b36:	add    edi,r9d
  415b39:	test   rcx,rcx
  415b3c:	mov    DWORD PTR [rsi+rax*4],edi
  415b3f:	je     415b4b <flatcc_builder_default_alloc@@Base+0x46b>
  415b41:	cmp    BYTE PTR [rcx+rax*1],0x0
  415b45:	je     415c4b <flatcc_builder_default_alloc@@Base+0x56b>
  415b4b:	add    rax,0x1
  415b4f:	sub    edx,0x4
  415b52:	cmp    r10d,eax
  415b55:	jbe    415b90 <flatcc_builder_default_alloc@@Base+0x4b0>
  415b57:	mov    edi,DWORD PTR [rsi+rax*4]
  415b5a:	test   edi,edi
  415b5c:	jne    415b30 <flatcc_builder_default_alloc@@Base+0x450>
  415b5e:	test   rcx,rcx
  415b61:	je     415c2c <flatcc_builder_default_alloc@@Base+0x54c>
  415b67:	cmp    BYTE PTR [rcx+rax*1],0x0
  415b6b:	je     415b4b <flatcc_builder_default_alloc@@Base+0x46b>
  415b6d:	lea    rcx,[rip+0x19b3c]        # 42f6b0 <_IO_stdin_used@@Base+0x46b0>
  415b74:	lea    rsi,[rip+0x19485]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  415b7b:	lea    rdi,[rip+0x19817]        # 42f399 <_IO_stdin_used@@Base+0x4399>
  415b82:	mov    edx,0x5b5
  415b87:	call   405080 <__assert_fail@plt>
  415b8c:	nop    DWORD PTR [rax+0x0]
  415b90:	mov    eax,DWORD PTR [rbx+0xf0]
  415b96:	mov    ebp,eax
  415b98:	sub    ebp,r8d
  415b9b:	cmp    ebp,eax
  415b9d:	jge    415c6a <flatcc_builder_default_alloc@@Base+0x58a>
  415ba3:	lea    rsi,[rsp+0x20]
  415ba8:	mov    rdi,QWORD PTR [rbx+0x38]
  415bac:	mov    ecx,ebp
  415bae:	mov    edx,DWORD PTR [rsp+0x18]
  415bb2:	call   QWORD PTR [rbx+0x48]
  415bb5:	test   eax,eax
  415bb7:	jne    415c8e <flatcc_builder_default_alloc@@Base+0x5ae>
  415bbd:	mov    DWORD PTR [rbx+0xf0],ebp
  415bc3:	mov    rbx,QWORD PTR [rsp+0xa8]
  415bcb:	xor    rbx,QWORD PTR fs:0x28
  415bd4:	mov    eax,ebp
  415bd6:	jne    415c89 <flatcc_builder_default_alloc@@Base+0x5a9>
  415bdc:	add    rsp,0xb8
  415be3:	pop    rbx
  415be4:	pop    rbp
  415be5:	ret    
  415be6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415bf0:	movsxd r11,DWORD PTR [rsp+0x18]
  415bf5:	mov    rbp,0x42fae0
  415bfc:	add    r8,rdi
  415bff:	mov    QWORD PTR [rsp+0x10],r8
  415c04:	mov    r9,r11
  415c07:	shl    r11,0x4
  415c0b:	add    r9d,0x1
  415c0f:	mov    QWORD PTR [rsp+r11*1+0x20],rbp
  415c14:	mov    QWORD PTR [rsp+r11*1+0x28],rdi
  415c19:	mov    DWORD PTR [rsp+0x18],r9d
  415c1e:	jmp    415b1d <flatcc_builder_default_alloc@@Base+0x43d>
  415c23:	nop    DWORD PTR [rax+rax*1+0x0]
  415c28:	xor    ebp,ebp
  415c2a:	jmp    415bc3 <flatcc_builder_default_alloc@@Base+0x4e3>
  415c2c:	lea    rcx,[rip+0x19a7d]        # 42f6b0 <_IO_stdin_used@@Base+0x46b0>
  415c33:	lea    rsi,[rip+0x193c6]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  415c3a:	lea    rdi,[rip+0x19756]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  415c41:	mov    edx,0x5b7
  415c46:	call   405080 <__assert_fail@plt>
  415c4b:	lea    rcx,[rip+0x19a5e]        # 42f6b0 <_IO_stdin_used@@Base+0x46b0>
  415c52:	lea    rsi,[rip+0x193a7]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  415c59:	lea    rdi,[rip+0x1972b]        # 42f38b <_IO_stdin_used@@Base+0x438b>
  415c60:	mov    edx,0x5b1
  415c65:	call   405080 <__assert_fail@plt>
  415c6a:	lea    rcx,[rip+0x19dbf]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  415c71:	lea    rsi,[rip+0x19388]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  415c78:	lea    rdi,[rip+0x19718]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  415c7f:	mov    edx,0x287
  415c84:	call   405080 <__assert_fail@plt>
  415c89:	call   405070 <__stack_chk_fail@plt>
  415c8e:	call   405313 <__sprintf_chk@plt+0x1c3>
  415c93:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415c9e:	xchg   ax,ax

0000000000415ca0 <flatcc_builder_flush_vtable_cache@@Base>:
  415ca0:	cmp    QWORD PTR [rdi+0xd8],0x0
  415ca8:	jne    415cb0 <flatcc_builder_flush_vtable_cache@@Base+0x10>
  415caa:	ret    
  415cab:	nop    DWORD PTR [rax+rax*1+0x0]
  415cb0:	push   rbx
  415cb1:	mov    rbx,rdi
  415cb4:	mov    rdi,QWORD PTR [rdi+0xa8]
  415cbb:	mov    rdx,QWORD PTR [rbx+0xb0]
  415cc2:	xor    esi,esi
  415cc4:	call   405090 <memset@plt>
  415cc9:	mov    DWORD PTR [rbx+0xe4],0x10
  415cd3:	mov    DWORD PTR [rbx+0xe0],0x0
  415cdd:	pop    rbx
  415cde:	ret    
  415cdf:	nop

0000000000415ce0 <flatcc_builder_custom_init@@Base>:
  415ce0:	mov    QWORD PTR [rdi],0x0
  415ce7:	mov    QWORD PTR [rdi+0x180],0x0
  415cf2:	mov    r9,rdi
  415cf5:	lea    rdi,[rdi+0x8]
  415cf9:	mov    r10,rcx
  415cfc:	mov    rcx,r9
  415cff:	xor    eax,eax
  415d01:	and    rdi,0xfffffffffffffff8
  415d05:	sub    rcx,rdi
  415d08:	add    ecx,0x188
  415d0e:	shr    ecx,0x3
  415d11:	test   rsi,rsi
  415d14:	rep stos QWORD PTR es:[rdi],rax
  415d17:	je     415d48 <flatcc_builder_custom_init@@Base+0x68>
  415d19:	test   r10,r10
  415d1c:	je     415d38 <flatcc_builder_custom_init@@Base+0x58>
  415d1e:	mov    QWORD PTR [r9+0x40],r8
  415d22:	mov    QWORD PTR [r9+0x50],r10
  415d26:	xor    eax,eax
  415d28:	mov    QWORD PTR [r9+0x38],rdx
  415d2c:	mov    QWORD PTR [r9+0x48],rsi
  415d30:	ret    
  415d31:	nop    DWORD PTR [rax+0x0]
  415d38:	mov    r10,0x4156e0
  415d3f:	jmp    415d1e <flatcc_builder_custom_init@@Base+0x3e>
  415d41:	nop    DWORD PTR [rax+0x0]
  415d48:	mov    DWORD PTR [r9+0x128],0x1
  415d53:	lea    rdx,[r9+0x130]
  415d5a:	mov    rsi,0x419790
  415d61:	jmp    415d19 <flatcc_builder_custom_init@@Base+0x39>
  415d63:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415d6e:	xchg   ax,ax

0000000000415d70 <flatcc_builder_init@@Base>:
  415d70:	xor    r8d,r8d
  415d73:	xor    ecx,ecx
  415d75:	xor    edx,edx
  415d77:	xor    esi,esi
  415d79:	jmp    415ce0 <flatcc_builder_custom_init@@Base>
  415d7e:	xchg   ax,ax

0000000000415d80 <flatcc_builder_custom_reset@@Base>:
  415d80:	push   r14
  415d82:	mov    r14d,esi
  415d85:	push   r13
  415d87:	mov    r13d,edx
  415d8a:	push   r12
  415d8c:	mov    r12,rdi
  415d8f:	push   rbp
  415d90:	xor    ebp,ebp
  415d92:	push   rbx
  415d93:	lea    rbx,[rdi+0x58]
  415d97:	jmp    415de6 <flatcc_builder_custom_reset@@Base+0x66>
  415d99:	nop    DWORD PTR [rax+0x0]
  415da0:	cmp    ebp,0x5
  415da3:	je     415dcf <flatcc_builder_custom_reset@@Base+0x4f>
  415da5:	test   r13d,r13d
  415da8:	je     415dcf <flatcc_builder_custom_reset@@Base+0x4f>
  415daa:	mov    rdi,QWORD PTR [r12+0x40]
  415daf:	mov    r8d,ebp
  415db2:	mov    ecx,0x1
  415db7:	mov    edx,0x1
  415dbc:	mov    rsi,rbx
  415dbf:	call   QWORD PTR [r12+0x50]
  415dc4:	test   eax,eax
  415dc6:	jne    415f20 <flatcc_builder_custom_reset@@Base+0x1a0>
  415dcc:	mov    rdi,QWORD PTR [rbx]
  415dcf:	mov    rdx,QWORD PTR [rbx+0x8]
  415dd3:	xor    esi,esi
  415dd5:	call   405090 <memset@plt>
  415dda:	add    ebp,0x1
  415ddd:	add    rbx,0x10
  415de1:	cmp    ebp,0x8
  415de4:	je     415e18 <flatcc_builder_custom_reset@@Base+0x98>
  415de6:	mov    rdi,QWORD PTR [rbx]
  415de9:	test   rdi,rdi
  415dec:	jne    415da0 <flatcc_builder_custom_reset@@Base+0x20>
  415dee:	cmp    QWORD PTR [rbx+0x8],0x0
  415df3:	je     415dda <flatcc_builder_custom_reset@@Base+0x5a>
  415df5:	lea    rcx,[rip+0x19cc4]        # 42fac0 <_IO_stdin_used@@Base+0x4ac0>
  415dfc:	lea    rsi,[rip+0x191fd]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  415e03:	lea    rdi,[rip+0x1959d]        # 42f3a7 <_IO_stdin_used@@Base+0x43a7>
  415e0a:	mov    edx,0x1b2
  415e0f:	call   405080 <__assert_fail@plt>
  415e14:	nop    DWORD PTR [rax+0x0]
  415e18:	mov    edx,DWORD PTR [r12+0xe4]
  415e20:	mov    DWORD PTR [r12+0xe0],0x0
  415e2c:	test   edx,edx
  415e2e:	je     415e3c <flatcc_builder_custom_reset@@Base+0xbc>
  415e30:	mov    DWORD PTR [r12+0xe4],0x10
  415e3c:	xor    eax,eax
  415e3e:	test   r14d,r14d
  415e41:	mov    DWORD PTR [r12+0xf0],0x0
  415e4d:	mov    WORD PTR [r12+0xe8],ax
  415e56:	mov    rax,QWORD PTR [r12+0x68]
  415e5b:	mov    DWORD PTR [r12+0xf4],0x0
  415e67:	mov    DWORD PTR [r12+0x104],0x0
  415e73:	mov    DWORD PTR [r12+0x108],0x0
  415e7f:	mov    DWORD PTR [r12+0x20],0x0
  415e88:	mov    QWORD PTR [r12+0x18],rax
  415e8d:	mov    rax,QWORD PTR [r12+0x88]
  415e95:	mov    DWORD PTR [r12+0x24],0x0
  415e9e:	mov    DWORD PTR [r12+0xfc],0x0
  415eaa:	mov    DWORD PTR [r12+0x100],0x0
  415eb6:	mov    QWORD PTR [r12+0x30],0x0
  415ebf:	mov    QWORD PTR [r12],rax
  415ec3:	mov    rax,QWORD PTR [r12+0x58]
  415ec8:	mov    QWORD PTR [r12+0x8],rax
  415ecd:	jne    415ef8 <flatcc_builder_custom_reset@@Base+0x178>
  415ecf:	mov    eax,DWORD PTR [r12+0x128]
  415ed7:	test   eax,eax
  415ed9:	je     415eea <flatcc_builder_custom_reset@@Base+0x16a>
  415edb:	lea    rdi,[r12+0x130]
  415ee3:	call   419620 <flatcc_emitter_reset@@Base>
  415ee8:	xor    eax,eax
  415eea:	pop    rbx
  415eeb:	pop    rbp
  415eec:	pop    r12
  415eee:	pop    r13
  415ef0:	pop    r14
  415ef2:	ret    
  415ef3:	nop    DWORD PTR [rax+rax*1+0x0]
  415ef8:	mov    QWORD PTR [r12+0x118],0x0
  415f04:	mov    DWORD PTR [r12+0x120],0x0
  415f10:	mov    DWORD PTR [r12+0x124],0x0
  415f1c:	jmp    415ecf <flatcc_builder_custom_reset@@Base+0x14f>
  415f1e:	xchg   ax,ax
  415f20:	mov    eax,0xffffffff
  415f25:	jmp    415eea <flatcc_builder_custom_reset@@Base+0x16a>
  415f27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000415f30 <flatcc_builder_reset@@Base>:
  415f30:	xor    edx,edx
  415f32:	xor    esi,esi
  415f34:	jmp    415d80 <flatcc_builder_custom_reset@@Base>
  415f39:	nop    DWORD PTR [rax+0x0]

0000000000415f40 <flatcc_builder_clear@@Base>:
  415f40:	push   r12
  415f42:	lea    r12,[rdi+0x58]
  415f46:	push   rbp
  415f47:	xor    ebp,ebp
  415f49:	push   rbx
  415f4a:	mov    rbx,rdi
  415f4d:	nop    DWORD PTR [rax]
  415f50:	mov    r8d,ebp
  415f53:	add    ebp,0x1
  415f56:	xor    ecx,ecx
  415f58:	xor    edx,edx
  415f5a:	mov    rsi,r12
  415f5d:	mov    rdi,QWORD PTR [rbx+0x40]
  415f61:	add    r12,0x10
  415f65:	call   QWORD PTR [rbx+0x50]
  415f68:	cmp    ebp,0x8
  415f6b:	jne    415f50 <flatcc_builder_clear@@Base+0x10>
  415f6d:	mov    eax,DWORD PTR [rbx+0x128]
  415f73:	test   eax,eax
  415f75:	je     415f83 <flatcc_builder_clear@@Base+0x43>
  415f77:	lea    rdi,[rbx+0x130]
  415f7e:	call   419700 <flatcc_emitter_clear@@Base>
  415f83:	lea    rdi,[rbx+0x8]
  415f87:	mov    QWORD PTR [rbx],0x0
  415f8e:	mov    QWORD PTR [rbx+0x180],0x0
  415f99:	xor    eax,eax
  415f9b:	and    rdi,0xfffffffffffffff8
  415f9f:	sub    rbx,rdi
  415fa2:	lea    ecx,[rbx+0x188]
  415fa8:	shr    ecx,0x3
  415fab:	rep stos QWORD PTR es:[rdi],rax
  415fae:	pop    rbx
  415faf:	pop    rbp
  415fb0:	pop    r12
  415fb2:	ret    
  415fb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  415fbe:	xchg   ax,ax

0000000000415fc0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  415fc0:	push   r12
  415fc2:	push   rbp
  415fc3:	mov    r12,rdi
  415fc6:	push   rbx
  415fc7:	lea    rbx,[rsi+0x7]
  415fcb:	mov    rbp,QWORD PTR [rdi+0x180]
  415fd2:	and    rbx,0xfffffffffffffff8
  415fd6:	add    rbx,0x8
  415fda:	lea    rdx,[rbx+rbp*1]
  415fde:	cmp    rdx,QWORD PTR [rdi+0xd0]
  415fe5:	ja     416038 <flatcc_builder_enter_user_frame_ptr@@Base+0x78>
  415fe7:	add    rbp,QWORD PTR [r12+0xc8]
  415fef:	je     416060 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
  415ff1:	mov    rdx,rbx
  415ff4:	xor    esi,esi
  415ff6:	mov    rdi,rbp
  415ff9:	call   405090 <memset@plt>
  415ffe:	mov    rax,QWORD PTR [r12+0x178]
  416006:	mov    QWORD PTR [rbp+0x0],rax
  41600a:	mov    rax,QWORD PTR [r12+0x180]
  416012:	lea    rdx,[rax+0x8]
  416016:	add    rbx,rax
  416019:	lea    rax,[rbp+0x8]
  41601d:	mov    QWORD PTR [r12+0x180],rbx
  416025:	mov    QWORD PTR [r12+0x178],rdx
  41602d:	pop    rbx
  41602e:	pop    rbp
  41602f:	pop    r12
  416031:	ret    
  416032:	nop    WORD PTR [rax+rax*1+0x0]
  416038:	lea    rsi,[rdi+0xc8]
  41603f:	xor    ecx,ecx
  416041:	mov    rdi,QWORD PTR [rdi+0x40]
  416045:	mov    r8d,0x7
  41604b:	call   QWORD PTR [r12+0x50]
  416050:	test   eax,eax
  416052:	je     415fe7 <flatcc_builder_enter_user_frame_ptr@@Base+0x27>
  416054:	call   4052cd <__sprintf_chk@plt+0x17d>
  416059:	nop    DWORD PTR [rax+0x0]
  416060:	xor    eax,eax
  416062:	jmp    41602d <flatcc_builder_enter_user_frame_ptr@@Base+0x6d>
  416064:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41606f:	nop

0000000000416070 <flatcc_builder_enter_user_frame@@Base>:
  416070:	push   r12
  416072:	push   rbp
  416073:	mov    r12,rdi
  416076:	push   rbx
  416077:	lea    rbx,[rsi+0x7]
  41607b:	mov    rbp,QWORD PTR [rdi+0x180]
  416082:	and    rbx,0xfffffffffffffff8
  416086:	add    rbx,0x8
  41608a:	lea    rdx,[rbx+rbp*1]
  41608e:	cmp    rdx,QWORD PTR [rdi+0xd0]
  416095:	ja     4160e0 <flatcc_builder_enter_user_frame@@Base+0x70>
  416097:	xor    eax,eax
  416099:	add    rbp,QWORD PTR [r12+0xc8]
  4160a1:	je     4160db <flatcc_builder_enter_user_frame@@Base+0x6b>
  4160a3:	mov    rdx,rbx
  4160a6:	xor    esi,esi
  4160a8:	mov    rdi,rbp
  4160ab:	call   405090 <memset@plt>
  4160b0:	mov    rax,QWORD PTR [r12+0x178]
  4160b8:	mov    QWORD PTR [rbp+0x0],rax
  4160bc:	mov    rdx,QWORD PTR [r12+0x180]
  4160c4:	lea    rax,[rdx+0x8]
  4160c8:	add    rbx,rdx
  4160cb:	mov    QWORD PTR [r12+0x180],rbx
  4160d3:	mov    QWORD PTR [r12+0x178],rax
  4160db:	pop    rbx
  4160dc:	pop    rbp
  4160dd:	pop    r12
  4160df:	ret    
  4160e0:	lea    rsi,[rdi+0xc8]
  4160e7:	xor    ecx,ecx
  4160e9:	mov    rdi,QWORD PTR [rdi+0x40]
  4160ed:	mov    r8d,0x7
  4160f3:	call   QWORD PTR [r12+0x50]
  4160f8:	test   eax,eax
  4160fa:	je     416097 <flatcc_builder_enter_user_frame@@Base+0x27>
  4160fc:	call   4052cd <__sprintf_chk@plt+0x17d>
  416101:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41610c:	nop    DWORD PTR [rax+0x0]

0000000000416110 <flatcc_builder_exit_user_frame@@Base>:
  416110:	mov    rax,QWORD PTR [rdi+0x178]
  416117:	test   rax,rax
  41611a:	je     41613c <flatcc_builder_exit_user_frame@@Base+0x2c>
  41611c:	mov    edx,eax
  41611e:	add    rdx,QWORD PTR [rdi+0xc8]
  416125:	sub    rax,0x8
  416129:	mov    QWORD PTR [rdi+0x180],rax
  416130:	mov    rax,QWORD PTR [rdx-0x8]
  416134:	mov    QWORD PTR [rdi+0x178],rax
  41613b:	ret    
  41613c:	lea    rcx,[rip+0x1994d]        # 42fa90 <_IO_stdin_used@@Base+0x4a90>
  416143:	lea    rsi,[rip+0x18eb6]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41614a:	lea    rdi,[rip+0x19268]        # 42f3b9 <_IO_stdin_used@@Base+0x43b9>
  416151:	sub    rsp,0x8
  416155:	mov    edx,0x21e
  41615a:	call   405080 <__assert_fail@plt>
  41615f:	nop

0000000000416160 <flatcc_builder_exit_user_frame_at@@Base>:
  416160:	cmp    QWORD PTR [rdi+0x178],rsi
  416167:	jb     416175 <flatcc_builder_exit_user_frame_at@@Base+0x15>
  416169:	mov    QWORD PTR [rdi+0x178],rsi
  416170:	jmp    416110 <flatcc_builder_exit_user_frame@@Base>
  416175:	lea    rcx,[rip+0x198e4]        # 42fa60 <_IO_stdin_used@@Base+0x4a60>
  41617c:	lea    rsi,[rip+0x18e7d]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416183:	lea    rdi,[rip+0x18ed6]        # 42f060 <_IO_stdin_used@@Base+0x4060>
  41618a:	sub    rsp,0x8
  41618e:	mov    edx,0x227
  416193:	call   405080 <__assert_fail@plt>
  416198:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004161a0 <flatcc_builder_get_current_user_frame@@Base>:
  4161a0:	mov    rax,QWORD PTR [rdi+0x178]
  4161a7:	ret    
  4161a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004161b0 <flatcc_builder_get_user_frame_ptr@@Base>:
  4161b0:	mov    eax,esi
  4161b2:	add    rax,QWORD PTR [rdi+0xc8]
  4161b9:	ret    
  4161ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004161c0 <flatcc_builder_embed_buffer@@Base>:
  4161c0:	push   r13
  4161c2:	push   r12
  4161c4:	mov    r12,rcx
  4161c7:	push   rbp
  4161c8:	push   rbx
  4161c9:	xor    ecx,ecx
  4161cb:	mov    rbp,rdx
  4161ce:	movzx  edx,si
  4161d1:	mov    rbx,rdi
  4161d4:	sub    rsp,0xc8
  4161db:	mov    r13d,r9d
  4161de:	mov    WORD PTR [rsp+0xc],r8w
  4161e4:	mov    r8d,DWORD PTR [rdi+0x100]
  4161eb:	lea    rsi,[rsp+0xc]
  4161f0:	mov    rax,QWORD PTR fs:0x28
  4161f9:	mov    QWORD PTR [rsp+0xb8],rax
  416201:	xor    eax,eax
  416203:	test   r8d,r8d
  416206:	setne  cl
  416209:	call   415800 <flatcc_builder_default_alloc@@Base+0x120>
  41620e:	test   eax,eax
  416210:	jne    416358 <flatcc_builder_embed_buffer@@Base+0x198>
  416216:	mov    edx,DWORD PTR [rbx+0xf0]
  41621c:	movzx  ecx,WORD PTR [rsp+0xc]
  416221:	xor    esi,esi
  416223:	and    r13d,0x2
  416227:	mov    QWORD PTR [rsp+0x20],0x0
  416230:	mov    DWORD PTR [rsp+0x28],0x0
  416238:	setne  sil
  41623c:	xor    r8d,r8d
  41623f:	mov    eax,edx
  416241:	shl    esi,0x2
  416244:	sub    eax,r12d
  416247:	sub    ecx,0x1
  41624a:	sub    eax,esi
  41624c:	and    eax,ecx
  41624e:	lea    ecx,[rax+r12*1]
  416252:	mov    DWORD PTR [rsp+0x1c],ecx
  416256:	mov    ecx,DWORD PTR [rbx+0x100]
  41625c:	test   ecx,ecx
  41625e:	je     41628a <flatcc_builder_embed_buffer@@Base+0xca>
  416260:	lea    rcx,[rsp+0x1c]
  416265:	mov    QWORD PTR [rsp+0x20],0x4
  41626e:	mov    QWORD PTR [rsp+0x38],0x4
  416277:	mov    DWORD PTR [rsp+0x28],0x1
  41627f:	mov    r8d,0x4
  416285:	mov    QWORD PTR [rsp+0x30],rcx
  41628a:	test   r12,r12
  41628d:	je     4162b4 <flatcc_builder_embed_buffer@@Base+0xf4>
  41628f:	movsxd rsi,DWORD PTR [rsp+0x28]
  416294:	add    r8,r12
  416297:	mov    QWORD PTR [rsp+0x20],r8
  41629c:	mov    rcx,rsi
  41629f:	shl    rsi,0x4
  4162a3:	add    ecx,0x1
  4162a6:	mov    QWORD PTR [rsp+rsi*1+0x30],rbp
  4162ab:	mov    QWORD PTR [rsp+rsi*1+0x38],r12
  4162b0:	mov    DWORD PTR [rsp+0x28],ecx
  4162b4:	test   eax,eax
  4162b6:	jne    416320 <flatcc_builder_embed_buffer@@Base+0x160>
  4162b8:	mov    ebp,edx
  4162ba:	sub    ebp,r8d
  4162bd:	cmp    edx,ebp
  4162bf:	jle    41635c <flatcc_builder_embed_buffer@@Base+0x19c>
  4162c5:	movabs rax,0x10000000f
  4162cf:	cmp    r8,rax
  4162d2:	ja     41635c <flatcc_builder_embed_buffer@@Base+0x19c>
  4162d8:	lea    rsi,[rsp+0x30]
  4162dd:	mov    rdi,QWORD PTR [rbx+0x38]
  4162e1:	mov    ecx,ebp
  4162e3:	mov    edx,DWORD PTR [rsp+0x28]
  4162e7:	call   QWORD PTR [rbx+0x48]
  4162ea:	test   eax,eax
  4162ec:	jne    416380 <flatcc_builder_embed_buffer@@Base+0x1c0>
  4162f2:	mov    DWORD PTR [rbx+0xf0],ebp
  4162f8:	mov    rdi,QWORD PTR [rsp+0xb8]
  416300:	xor    rdi,QWORD PTR fs:0x28
  416309:	mov    eax,ebp
  41630b:	jne    41637b <flatcc_builder_embed_buffer@@Base+0x1bb>
  41630d:	add    rsp,0xc8
  416314:	pop    rbx
  416315:	pop    rbp
  416316:	pop    r12
  416318:	pop    r13
  41631a:	ret    
  41631b:	nop    DWORD PTR [rax+rax*1+0x0]
  416320:	movsxd rsi,DWORD PTR [rsp+0x28]
  416325:	mov    rdi,0x42fae0
  41632c:	add    r8,rax
  41632f:	mov    QWORD PTR [rsp+0x20],r8
  416334:	mov    rcx,rsi
  416337:	shl    rsi,0x4
  41633b:	add    ecx,0x1
  41633e:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  416343:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  416348:	mov    DWORD PTR [rsp+0x28],ecx
  41634c:	jmp    4162b8 <flatcc_builder_embed_buffer@@Base+0xf8>
  416351:	nop    DWORD PTR [rax+0x0]
  416358:	xor    ebp,ebp
  41635a:	jmp    4162f8 <flatcc_builder_embed_buffer@@Base+0x138>
  41635c:	lea    rcx,[rip+0x196cd]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  416363:	lea    rsi,[rip+0x18c96]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41636a:	lea    rdi,[rip+0x19026]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  416371:	mov    edx,0x287
  416376:	call   405080 <__assert_fail@plt>
  41637b:	call   405070 <__stack_chk_fail@plt>
  416380:	call   405313 <__sprintf_chk@plt+0x1c3>
  416385:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000416390 <flatcc_builder_create_buffer@@Base>:
  416390:	push   r14
  416392:	push   r13
  416394:	mov    r13d,r9d
  416397:	push   r12
  416399:	push   rbp
  41639a:	and    r13d,0x1
  41639e:	push   rbx
  41639f:	mov    r14,rsi
  4163a2:	mov    r12d,ecx
  4163a5:	movzx  edx,dx
  4163a8:	mov    ecx,r13d
  4163ab:	mov    rbp,rdi
  4163ae:	sub    rsp,0xc0
  4163b5:	mov    ebx,r9d
  4163b8:	lea    rsi,[rsp+0xc]
  4163bd:	mov    WORD PTR [rsp+0xc],r8w
  4163c3:	mov    DWORD PTR [rsp+0x1c],0x0
  4163cb:	mov    rax,QWORD PTR fs:0x28
  4163d4:	mov    QWORD PTR [rsp+0xb8],rax
  4163dc:	xor    eax,eax
  4163de:	call   415800 <flatcc_builder_default_alloc@@Base+0x120>
  4163e3:	test   eax,eax
  4163e5:	jne    4165a0 <flatcc_builder_create_buffer@@Base+0x210>
  4163eb:	movzx  ecx,WORD PTR [rsp+0xc]
  4163f0:	cmp    cx,WORD PTR [rbp+0xe8]
  4163f7:	ja     416590 <flatcc_builder_create_buffer@@Base+0x200>
  4163fd:	test   r14,r14
  416400:	mov    eax,DWORD PTR [rsp+0x1c]
  416404:	je     41640d <flatcc_builder_create_buffer@@Base+0x7d>
  416406:	mov    eax,DWORD PTR [r14]
  416409:	mov    DWORD PTR [rsp+0x1c],eax
  41640d:	xor    r10d,r10d
  416410:	test   eax,eax
  416412:	mov    edi,ebx
  416414:	setne  r10b
  416418:	and    edi,0x1
  41641b:	mov    edx,DWORD PTR [rbp+0xf0]
  416421:	shl    r10d,0x2
  416425:	and    ebx,0x2
  416428:	jne    416558 <flatcc_builder_create_buffer@@Base+0x1c8>
  41642e:	lea    eax,[rdx-0x4]
  416431:	sub    ecx,0x1
  416434:	sub    eax,r10d
  416437:	and    eax,ecx
  416439:	test   dil,dil
  41643c:	jne    416563 <flatcc_builder_create_buffer@@Base+0x1d3>
  416442:	mov    ecx,0x1
  416447:	mov    r8d,0x4
  41644d:	movsxd rsi,ebx
  416450:	lea    r9,[rsp+0x14]
  416455:	mov    QWORD PTR [rsp+0x20],r8
  41645a:	shl    rsi,0x4
  41645e:	test   r10d,r10d
  416461:	mov    DWORD PTR [rsp+0x28],ecx
  416465:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  41646a:	mov    QWORD PTR [rsp+rsi*1+0x38],0x4
  416473:	je     416497 <flatcc_builder_create_buffer@@Base+0x107>
  416475:	lea    rsi,[rsp+0x1c]
  41647a:	shl    rcx,0x4
  41647e:	add    r8,r10
  416481:	add    ebx,0x2
  416484:	mov    QWORD PTR [rsp+0x20],r8
  416489:	mov    QWORD PTR [rsp+rcx*1+0x38],r10
  41648e:	mov    QWORD PTR [rsp+rcx*1+0x30],rsi
  416493:	mov    DWORD PTR [rsp+0x28],ebx
  416497:	test   eax,eax
  416499:	je     4164c7 <flatcc_builder_create_buffer@@Base+0x137>
  41649b:	movsxd rsi,DWORD PTR [rsp+0x28]
  4164a0:	mov    r9,0x42fae0
  4164a7:	add    r8,rax
  4164aa:	mov    QWORD PTR [rsp+0x20],r8
  4164af:	mov    rcx,rsi
  4164b2:	shl    rsi,0x4
  4164b6:	add    ecx,0x1
  4164b9:	mov    QWORD PTR [rsp+rsi*1+0x30],r9
  4164be:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  4164c3:	mov    DWORD PTR [rsp+0x28],ecx
  4164c7:	mov    eax,edx
  4164c9:	sub    eax,r8d
  4164cc:	test   dil,dil
  4164cf:	je     4165a8 <flatcc_builder_create_buffer@@Base+0x218>
  4164d5:	add    eax,0x4
  4164d8:	test   r13d,r13d
  4164db:	je     4165a8 <flatcc_builder_create_buffer@@Base+0x218>
  4164e1:	mov    ecx,DWORD PTR [rbp+0xf8]
  4164e7:	sub    ecx,eax
  4164e9:	mov    DWORD PTR [rsp+0x18],ecx
  4164ed:	mov    ebx,edx
  4164ef:	sub    r12d,eax
  4164f2:	sub    ebx,r8d
  4164f5:	mov    DWORD PTR [rsp+0x14],r12d
  4164fa:	cmp    ebx,edx
  4164fc:	jge    4165b9 <flatcc_builder_create_buffer@@Base+0x229>
  416502:	lea    rsi,[rsp+0x30]
  416507:	mov    rdi,QWORD PTR [rbp+0x38]
  41650b:	mov    ecx,ebx
  41650d:	mov    edx,DWORD PTR [rsp+0x28]
  416511:	call   QWORD PTR [rbp+0x48]
  416514:	test   eax,eax
  416516:	jne    4165dd <flatcc_builder_create_buffer@@Base+0x24d>
  41651c:	test   ebx,ebx
  41651e:	mov    DWORD PTR [rbp+0xf0],ebx
  416524:	je     4165e2 <flatcc_builder_create_buffer@@Base+0x252>
  41652a:	mov    rdi,QWORD PTR [rsp+0xb8]
  416532:	xor    rdi,QWORD PTR fs:0x28
  41653b:	mov    eax,ebx
  41653d:	jne    4165d8 <flatcc_builder_create_buffer@@Base+0x248>
  416543:	add    rsp,0xc0
  41654a:	pop    rbx
  41654b:	pop    rbp
  41654c:	pop    r12
  41654e:	pop    r13
  416550:	pop    r14
  416552:	ret    
  416553:	nop    DWORD PTR [rax+rax*1+0x0]
  416558:	lea    eax,[rdx-0x8]
  41655b:	sub    ecx,0x1
  41655e:	sub    eax,r10d
  416561:	and    eax,ecx
  416563:	lea    rcx,[rsp+0x18]
  416568:	mov    QWORD PTR [rsp+0x38],0x4
  416571:	mov    ebx,0x1
  416576:	mov    r8d,0x8
  41657c:	mov    edi,0x1
  416581:	mov    QWORD PTR [rsp+0x30],rcx
  416586:	mov    ecx,0x2
  41658b:	jmp    41644d <flatcc_builder_create_buffer@@Base+0xbd>
  416590:	mov    WORD PTR [rbp+0xe8],cx
  416597:	jmp    4163fd <flatcc_builder_create_buffer@@Base+0x6d>
  41659c:	nop    DWORD PTR [rax+0x0]
  4165a0:	xor    ebx,ebx
  4165a2:	jmp    41652a <flatcc_builder_create_buffer@@Base+0x19a>
  4165a4:	nop    DWORD PTR [rax+0x0]
  4165a8:	mov    ecx,DWORD PTR [rbp+0xf4]
  4165ae:	sub    ecx,eax
  4165b0:	mov    DWORD PTR [rsp+0x18],ecx
  4165b4:	jmp    4164ed <flatcc_builder_create_buffer@@Base+0x15d>
  4165b9:	lea    rcx,[rip+0x19470]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  4165c0:	lea    rsi,[rip+0x18a39]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4165c7:	lea    rdi,[rip+0x18dc9]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  4165ce:	mov    edx,0x287
  4165d3:	call   405080 <__assert_fail@plt>
  4165d8:	call   405070 <__stack_chk_fail@plt>
  4165dd:	call   405313 <__sprintf_chk@plt+0x1c3>
  4165e2:	lea    rcx,[rip+0x19427]        # 42fa10 <_IO_stdin_used@@Base+0x4a10>
  4165e9:	lea    rsi,[rip+0x18a10]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4165f0:	lea    rdi,[rip+0x18da0]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  4165f7:	mov    edx,0x304
  4165fc:	call   405080 <__assert_fail@plt>
  416601:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41660c:	nop    DWORD PTR [rax+0x0]

0000000000416610 <flatcc_builder_create_struct@@Base>:
  416610:	push   rbp
  416611:	push   rbx
  416612:	sub    rsp,0xa8
  416619:	mov    rax,QWORD PTR fs:0x28
  416622:	mov    QWORD PTR [rsp+0x98],rax
  41662a:	xor    eax,eax
  41662c:	test   cx,cx
  41662f:	je     41673f <flatcc_builder_create_struct@@Base+0x12f>
  416635:	mov    rbx,rdi
  416638:	mov    r8,rdx
  41663b:	movzx  edi,cx
  41663e:	cmp    cx,WORD PTR [rbx+0xe8]
  416645:	jbe    41664e <flatcc_builder_create_struct@@Base+0x3e>
  416647:	mov    WORD PTR [rbx+0xe8],cx
  41664e:	mov    edx,DWORD PTR [rbx+0xf0]
  416654:	lea    ecx,[rdi-0x1]
  416657:	mov    QWORD PTR [rsp],0x0
  41665f:	mov    DWORD PTR [rsp+0x8],0x0
  416667:	mov    eax,edx
  416669:	sub    eax,r8d
  41666c:	and    eax,ecx
  41666e:	test   r8,r8
  416671:	jne    416700 <flatcc_builder_create_struct@@Base+0xf0>
  416677:	test   eax,eax
  416679:	je     4166a6 <flatcc_builder_create_struct@@Base+0x96>
  41667b:	movsxd rsi,DWORD PTR [rsp+0x8]
  416680:	mov    rdi,0x42fae0
  416687:	add    r8,rax
  41668a:	mov    QWORD PTR [rsp],r8
  41668e:	mov    rcx,rsi
  416691:	shl    rsi,0x4
  416695:	add    ecx,0x1
  416698:	mov    QWORD PTR [rsp+rsi*1+0x10],rdi
  41669d:	mov    QWORD PTR [rsp+rsi*1+0x18],rax
  4166a2:	mov    DWORD PTR [rsp+0x8],ecx
  4166a6:	mov    ebp,edx
  4166a8:	movabs rax,0x10000000f
  4166b2:	sub    ebp,r8d
  4166b5:	cmp    r8,rax
  4166b8:	ja     41671b <flatcc_builder_create_struct@@Base+0x10b>
  4166ba:	cmp    edx,ebp
  4166bc:	jle    41671b <flatcc_builder_create_struct@@Base+0x10b>
  4166be:	lea    rsi,[rsp+0x10]
  4166c3:	mov    rdi,QWORD PTR [rbx+0x38]
  4166c7:	mov    ecx,ebp
  4166c9:	mov    edx,DWORD PTR [rsp+0x8]
  4166cd:	call   QWORD PTR [rbx+0x48]
  4166d0:	test   eax,eax
  4166d2:	jne    41673a <flatcc_builder_create_struct@@Base+0x12a>
  4166d4:	mov    rdx,QWORD PTR [rsp+0x98]
  4166dc:	xor    rdx,QWORD PTR fs:0x28
  4166e5:	mov    DWORD PTR [rbx+0xf0],ebp
  4166eb:	mov    eax,ebp
  4166ed:	jne    41675e <flatcc_builder_create_struct@@Base+0x14e>
  4166ef:	add    rsp,0xa8
  4166f6:	pop    rbx
  4166f7:	pop    rbp
  4166f8:	ret    
  4166f9:	nop    DWORD PTR [rax+0x0]
  416700:	mov    QWORD PTR [rsp],r8
  416704:	mov    QWORD PTR [rsp+0x10],rsi
  416709:	mov    QWORD PTR [rsp+0x18],r8
  41670e:	mov    DWORD PTR [rsp+0x8],0x1
  416716:	jmp    416677 <flatcc_builder_create_struct@@Base+0x67>
  41671b:	lea    rcx,[rip+0x1930e]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  416722:	lea    rsi,[rip+0x188d7]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416729:	lea    rdi,[rip+0x18c67]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  416730:	mov    edx,0x287
  416735:	call   405080 <__assert_fail@plt>
  41673a:	call   405313 <__sprintf_chk@plt+0x1c3>
  41673f:	lea    rcx,[rip+0x192aa]        # 42f9f0 <_IO_stdin_used@@Base+0x49f0>
  416746:	lea    rsi,[rip+0x188b3]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41674d:	lea    rdi,[rip+0x18c7e]        # 42f3d2 <_IO_stdin_used@@Base+0x43d2>
  416754:	mov    edx,0x30f
  416759:	call   405080 <__assert_fail@plt>
  41675e:	call   405070 <__stack_chk_fail@plt>
  416763:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41676e:	xchg   ax,ax

0000000000416770 <flatcc_builder_start_buffer@@Base>:
  416770:	push   r13
  416772:	push   r12
  416774:	mov    r13d,edx
  416777:	push   rbp
  416778:	push   rbx
  416779:	mov    rbp,rsi
  41677c:	mov    rbx,rdi
  41677f:	mov    r12d,ecx
  416782:	sub    rsp,0x8
  416786:	movzx  esi,WORD PTR [rdi+0xe8]
  41678d:	call   415940 <flatcc_builder_default_alloc@@Base+0x260>
  416792:	test   eax,eax
  416794:	jne    416840 <flatcc_builder_start_buffer@@Base+0xd0>
  41679a:	movzx  edx,WORD PTR [rbx+0xec]
  4167a1:	mov    rdi,QWORD PTR [rbx+0x30]
  4167a5:	mov    ecx,0x1
  4167aa:	mov    WORD PTR [rbx+0xe8],cx
  4167b1:	test   rbp,rbp
  4167b4:	mov    rsi,rbp
  4167b7:	mov    WORD PTR [rdi+0x22],dx
  4167bb:	movzx  edx,WORD PTR [rbx+0x10c]
  4167c2:	mov    WORD PTR [rbx+0xec],r13w
  4167ca:	mov    WORD PTR [rdi+0x20],dx
  4167ce:	mov    edx,DWORD PTR [rbx+0xf8]
  4167d4:	mov    WORD PTR [rbx+0x10c],r12w
  4167dc:	mov    DWORD PTR [rdi+0x14],edx
  4167df:	mov    edx,DWORD PTR [rbx+0x100]
  4167e5:	mov    DWORD PTR [rdi+0x1c],edx
  4167e8:	mov    edx,DWORD PTR [rbx+0xf0]
  4167ee:	mov    DWORD PTR [rbx+0xf8],edx
  4167f4:	mov    edx,DWORD PTR [rbx+0xfc]
  4167fa:	lea    ecx,[rdx+0x1]
  4167fd:	mov    DWORD PTR [rbx+0x100],edx
  416803:	mov    edx,DWORD PTR [rbx+0x110]
  416809:	mov    DWORD PTR [rbx+0xfc],ecx
  41680f:	mov    DWORD PTR [rdi+0x10],edx
  416812:	je     416830 <flatcc_builder_start_buffer@@Base+0xc0>
  416814:	mov    edx,DWORD PTR [rsi]
  416816:	mov    DWORD PTR [rbx+0x110],edx
  41681c:	mov    edx,0x1
  416821:	mov    WORD PTR [rdi+0xe],dx
  416825:	add    rsp,0x8
  416829:	pop    rbx
  41682a:	pop    rbp
  41682b:	pop    r12
  41682d:	pop    r13
  41682f:	ret    
  416830:	mov    rsi,0x42fae0
  416837:	jmp    416814 <flatcc_builder_start_buffer@@Base+0xa4>
  416839:	nop    DWORD PTR [rax+0x0]
  416840:	mov    eax,0xffffffff
  416845:	jmp    416825 <flatcc_builder_start_buffer@@Base+0xb5>
  416847:	nop    WORD PTR [rax+rax*1+0x0]

0000000000416850 <flatcc_builder_end_buffer@@Base>:
  416850:	push   rbp
  416851:	push   rbx
  416852:	xor    eax,eax
  416854:	sub    rsp,0x8
  416858:	movzx  r9d,WORD PTR [rdi+0x10c]
  416860:	mov    edx,DWORD PTR [rdi+0x100]
  416866:	and    r9d,0x2
  41686a:	test   edx,edx
  41686c:	setne  al
  41686f:	or     r9d,eax
  416872:	mov    rax,QWORD PTR [rdi+0x30]
  416876:	cmp    WORD PTR [rax+0xe],0x1
  41687b:	jne    416971 <flatcc_builder_end_buffer@@Base+0x121>
  416881:	movzx  edx,WORD PTR [rdi+0xec]
  416888:	movzx  r8d,WORD PTR [rdi+0xe8]
  416890:	mov    rbx,rdi
  416893:	mov    ecx,esi
  416895:	cmp    dx,r8w
  416899:	ja     4168c0 <flatcc_builder_end_buffer@@Base+0x70>
  41689b:	lea    rsi,[rbx+0x110]
  4168a2:	mov    rdi,rbx
  4168a5:	call   416390 <flatcc_builder_create_buffer@@Base>
  4168aa:	test   eax,eax
  4168ac:	mov    ebp,eax
  4168ae:	jne    4168d0 <flatcc_builder_end_buffer@@Base+0x80>
  4168b0:	add    rsp,0x8
  4168b4:	mov    eax,ebp
  4168b6:	pop    rbx
  4168b7:	pop    rbp
  4168b8:	ret    
  4168b9:	nop    DWORD PTR [rax+0x0]
  4168c0:	mov    WORD PTR [rbx+0xe8],dx
  4168c7:	mov    r8d,edx
  4168ca:	jmp    41689b <flatcc_builder_end_buffer@@Base+0x4b>
  4168cc:	nop    DWORD PTR [rax+0x0]
  4168d0:	mov    rax,QWORD PTR [rbx+0x30]
  4168d4:	mov    rdi,QWORD PTR [rbx+0x18]
  4168d8:	xor    esi,esi
  4168da:	mov    edx,DWORD PTR [rax+0x14]
  4168dd:	mov    DWORD PTR [rbx+0xf8],edx
  4168e3:	mov    edx,DWORD PTR [rax+0x1c]
  4168e6:	mov    DWORD PTR [rbx+0x100],edx
  4168ec:	mov    edx,DWORD PTR [rax+0x10]
  4168ef:	mov    DWORD PTR [rbx+0x110],edx
  4168f5:	movzx  eax,WORD PTR [rax+0x20]
  4168f9:	mov    edx,DWORD PTR [rbx+0x20]
  4168fc:	mov    WORD PTR [rbx+0x10c],ax
  416903:	call   405090 <memset@plt>
  416908:	mov    rax,QWORD PTR [rbx+0x30]
  41690c:	mov    edi,DWORD PTR [rbx+0x70]
  41690f:	mov    esi,DWORD PTR [rax]
  416911:	mov    edx,DWORD PTR [rax+0x8]
  416914:	mov    ecx,DWORD PTR [rax+0x4]
  416917:	mov    DWORD PTR [rbx+0x20],edx
  41691a:	mov    rdx,rsi
  41691d:	mov    DWORD PTR [rbx+0x28],esi
  416920:	add    rsi,QWORD PTR [rbx+0x68]
  416924:	sub    edi,edx
  416926:	cmp    ecx,edi
  416928:	mov    edx,edi
  41692a:	cmovb  edx,ecx
  41692d:	mov    DWORD PTR [rbx+0x24],edx
  416930:	movzx  edx,WORD PTR [rbx+0xea]
  416937:	cmp    dx,WORD PTR [rbx+0xe8]
  41693e:	mov    QWORD PTR [rbx+0x18],rsi
  416942:	mov    DWORD PTR [rax+0x4],ecx
  416945:	jbe    41694e <flatcc_builder_end_buffer@@Base+0xfe>
  416947:	mov    WORD PTR [rbx+0xe8],dx
  41694e:	movzx  edx,WORD PTR [rax+0xc]
  416952:	sub    rax,0x24
  416956:	sub    DWORD PTR [rbx+0x104],0x1
  41695d:	mov    QWORD PTR [rbx+0x30],rax
  416961:	mov    eax,ebp
  416963:	mov    WORD PTR [rbx+0xea],dx
  41696a:	add    rsp,0x8
  41696e:	pop    rbx
  41696f:	pop    rbp
  416970:	ret    
  416971:	lea    rcx,[rip+0x19058]        # 42f9d0 <_IO_stdin_used@@Base+0x49d0>
  416978:	lea    rsi,[rip+0x18681]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41697f:	lea    rdi,[rip+0x186fa]        # 42f080 <_IO_stdin_used@@Base+0x4080>
  416986:	mov    edx,0x346
  41698b:	call   405080 <__assert_fail@plt>

0000000000416990 <flatcc_builder_start_struct@@Base>:
  416990:	push   r12
  416992:	push   rbp
  416993:	mov    rbp,rsi
  416996:	push   rbx
  416997:	movzx  esi,dx
  41699a:	mov    rbx,rdi
  41699d:	call   415940 <flatcc_builder_default_alloc@@Base+0x260>
  4169a2:	test   eax,eax
  4169a4:	jne    416a20 <flatcc_builder_start_struct@@Base+0x90>
  4169a6:	mov    rcx,QWORD PTR [rbx+0x30]
  4169aa:	mov    eax,0x2
  4169af:	mov    edi,DWORD PTR [rbx+0x70]
  4169b2:	mov    WORD PTR [rcx+0xe],ax
  4169b6:	mov    eax,DWORD PTR [rbx+0x28]
  4169b9:	mov    rdx,rax
  4169bc:	add    rax,QWORD PTR [rbx+0x68]
  4169c0:	sub    edi,edx
  4169c2:	cmp    edi,0xfffffffc
  4169c5:	mov    edx,edi
  4169c7:	mov    QWORD PTR [rbx+0x18],rax
  4169cb:	ja     4169f0 <flatcc_builder_start_struct@@Base+0x60>
  4169cd:	mov    DWORD PTR [rbx+0x24],edi
  4169d0:	mov    r12d,DWORD PTR [rbx+0x20]
  4169d4:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4169db:	mov    rsi,r12
  4169de:	add    esi,ebp
  4169e0:	cmp    esi,edx
  4169e2:	mov    DWORD PTR [rbx+0x20],esi
  4169e5:	jae    416a00 <flatcc_builder_start_struct@@Base+0x70>
  4169e7:	add    rax,r12
  4169ea:	pop    rbx
  4169eb:	pop    rbp
  4169ec:	pop    r12
  4169ee:	ret    
  4169ef:	nop
  4169f0:	mov    DWORD PTR [rbx+0x24],0xfffffffc
  4169f7:	mov    edx,0xfffffffc
  4169fc:	jmp    4169d0 <flatcc_builder_start_struct@@Base+0x40>
  4169fe:	xchg   ax,ax
  416a00:	add    esi,0x1
  416a03:	mov    edx,0xfffffffc
  416a08:	mov    rdi,rbx
  416a0b:	call   415680 <union_vector_tests@@Base+0x110>
  416a10:	test   eax,eax
  416a12:	jne    416a20 <flatcc_builder_start_struct@@Base+0x90>
  416a14:	mov    rax,QWORD PTR [rbx+0x18]
  416a18:	jmp    4169e7 <flatcc_builder_start_struct@@Base+0x57>
  416a1a:	nop    WORD PTR [rax+rax*1+0x0]
  416a20:	pop    rbx
  416a21:	xor    eax,eax
  416a23:	pop    rbp
  416a24:	pop    r12
  416a26:	ret    
  416a27:	nop    WORD PTR [rax+rax*1+0x0]

0000000000416a30 <flatcc_builder_struct_edit@@Base>:
  416a30:	mov    rax,QWORD PTR [rdi+0x18]
  416a34:	ret    
  416a35:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000416a40 <flatcc_builder_end_struct@@Base>:
  416a40:	push   rbp
  416a41:	push   rbx
  416a42:	sub    rsp,0x8
  416a46:	mov    rax,QWORD PTR [rdi+0x30]
  416a4a:	cmp    WORD PTR [rax+0xe],0x2
  416a4f:	jne    416af7 <flatcc_builder_end_struct@@Base+0xb7>
  416a55:	movzx  ecx,WORD PTR [rdi+0xea]
  416a5c:	mov    edx,DWORD PTR [rdi+0x20]
  416a5f:	mov    rbx,rdi
  416a62:	mov    rsi,QWORD PTR [rdi+0x18]
  416a66:	call   416610 <flatcc_builder_create_struct@@Base>
  416a6b:	test   eax,eax
  416a6d:	mov    ebp,eax
  416a6f:	jne    416a80 <flatcc_builder_end_struct@@Base+0x40>
  416a71:	add    rsp,0x8
  416a75:	mov    eax,ebp
  416a77:	pop    rbx
  416a78:	pop    rbp
  416a79:	ret    
  416a7a:	nop    WORD PTR [rax+rax*1+0x0]
  416a80:	mov    edx,DWORD PTR [rbx+0x20]
  416a83:	mov    rdi,QWORD PTR [rbx+0x18]
  416a87:	xor    esi,esi
  416a89:	call   405090 <memset@plt>
  416a8e:	mov    rax,QWORD PTR [rbx+0x30]
  416a92:	mov    edi,DWORD PTR [rbx+0x70]
  416a95:	mov    esi,DWORD PTR [rax]
  416a97:	mov    edx,DWORD PTR [rax+0x8]
  416a9a:	mov    ecx,DWORD PTR [rax+0x4]
  416a9d:	mov    DWORD PTR [rbx+0x20],edx
  416aa0:	mov    rdx,rsi
  416aa3:	mov    DWORD PTR [rbx+0x28],esi
  416aa6:	add    rsi,QWORD PTR [rbx+0x68]
  416aaa:	sub    edi,edx
  416aac:	cmp    ecx,edi
  416aae:	mov    edx,edi
  416ab0:	cmovb  edx,ecx
  416ab3:	mov    DWORD PTR [rbx+0x24],edx
  416ab6:	movzx  edx,WORD PTR [rbx+0xea]
  416abd:	cmp    dx,WORD PTR [rbx+0xe8]
  416ac4:	mov    QWORD PTR [rbx+0x18],rsi
  416ac8:	mov    DWORD PTR [rax+0x4],ecx
  416acb:	jbe    416ad4 <flatcc_builder_end_struct@@Base+0x94>
  416acd:	mov    WORD PTR [rbx+0xe8],dx
  416ad4:	movzx  edx,WORD PTR [rax+0xc]
  416ad8:	sub    rax,0x24
  416adc:	sub    DWORD PTR [rbx+0x104],0x1
  416ae3:	mov    QWORD PTR [rbx+0x30],rax
  416ae7:	mov    eax,ebp
  416ae9:	mov    WORD PTR [rbx+0xea],dx
  416af0:	add    rsp,0x8
  416af4:	pop    rbx
  416af5:	pop    rbp
  416af6:	ret    
  416af7:	lea    rcx,[rip+0x18eb2]        # 42f9b0 <_IO_stdin_used@@Base+0x49b0>
  416afe:	lea    rsi,[rip+0x184fb]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416b05:	lea    rdi,[rip+0x185a4]        # 42f0b0 <_IO_stdin_used@@Base+0x40b0>
  416b0c:	mov    edx,0x368
  416b11:	call   405080 <__assert_fail@plt>
  416b16:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000416b20 <flatcc_builder_extend_vector@@Base>:
  416b20:	push   rbp
  416b21:	push   rbx
  416b22:	mov    eax,esi
  416b24:	sub    rsp,0x8
  416b28:	mov    rdx,QWORD PTR [rdi+0x30]
  416b2c:	add    eax,DWORD PTR [rdx+0x14]
  416b2f:	setb   cl
  416b32:	cmp    DWORD PTR [rdx+0x18],eax
  416b35:	jb     416b7d <flatcc_builder_extend_vector@@Base+0x5d>
  416b37:	movzx  ecx,cl
  416b3a:	test   ecx,ecx
  416b3c:	jne    416b7d <flatcc_builder_extend_vector@@Base+0x5d>
  416b3e:	imul   esi,DWORD PTR [rdx+0x10]
  416b42:	mov    DWORD PTR [rdx+0x14],eax
  416b45:	mov    ebp,DWORD PTR [rdi+0x20]
  416b48:	mov    rbx,rdi
  416b4b:	add    esi,ebp
  416b4d:	cmp    esi,DWORD PTR [rdi+0x24]
  416b50:	mov    DWORD PTR [rdi+0x20],esi
  416b53:	jae    416b68 <flatcc_builder_extend_vector@@Base+0x48>
  416b55:	mov    rax,rbp
  416b58:	add    rax,QWORD PTR [rbx+0x18]
  416b5c:	add    rsp,0x8
  416b60:	pop    rbx
  416b61:	pop    rbp
  416b62:	ret    
  416b63:	nop    DWORD PTR [rax+rax*1+0x0]
  416b68:	add    esi,0x1
  416b6b:	mov    edx,0xfffffffc
  416b70:	call   415680 <union_vector_tests@@Base+0x110>
  416b75:	test   eax,eax
  416b77:	je     416b55 <flatcc_builder_extend_vector@@Base+0x35>
  416b79:	xor    eax,eax
  416b7b:	jmp    416b5c <flatcc_builder_extend_vector@@Base+0x3c>
  416b7d:	call   405336 <__sprintf_chk@plt+0x1e6>
  416b82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416b8d:	nop    DWORD PTR [rax]

0000000000416b90 <flatcc_builder_vector_push@@Base>:
  416b90:	push   r13
  416b92:	push   r12
  416b94:	push   rbp
  416b95:	push   rbx
  416b96:	sub    rsp,0x8
  416b9a:	mov    rax,QWORD PTR [rdi+0x30]
  416b9e:	cmp    WORD PTR [rax+0xe],0x4
  416ba3:	jne    416c24 <flatcc_builder_vector_push@@Base+0x94>
  416ba5:	mov    edx,DWORD PTR [rax+0x14]
  416ba8:	cmp    edx,DWORD PTR [rax+0x18]
  416bab:	ja     416c05 <flatcc_builder_vector_push@@Base+0x75>
  416bad:	add    edx,0x1
  416bb0:	mov    r12d,DWORD PTR [rax+0x10]
  416bb4:	mov    rbx,rdi
  416bb7:	mov    DWORD PTR [rax+0x14],edx
  416bba:	mov    ebp,DWORD PTR [rdi+0x20]
  416bbd:	mov    r13,rsi
  416bc0:	mov    rcx,rbp
  416bc3:	add    ecx,r12d
  416bc6:	cmp    ecx,DWORD PTR [rdi+0x24]
  416bc9:	mov    DWORD PTR [rdi+0x20],ecx
  416bcc:	jae    416bf0 <flatcc_builder_vector_push@@Base+0x60>
  416bce:	add    rbp,QWORD PTR [rbx+0x18]
  416bd2:	je     416be2 <flatcc_builder_vector_push@@Base+0x52>
  416bd4:	mov    edx,r12d
  416bd7:	mov    rsi,r13
  416bda:	mov    rdi,rbp
  416bdd:	call   4050e0 <memcpy@plt>
  416be2:	add    rsp,0x8
  416be6:	mov    rax,rbp
  416be9:	pop    rbx
  416bea:	pop    rbp
  416beb:	pop    r12
  416bed:	pop    r13
  416bef:	ret    
  416bf0:	lea    esi,[rcx+0x1]
  416bf3:	mov    edx,0xfffffffc
  416bf8:	call   415680 <union_vector_tests@@Base+0x110>
  416bfd:	test   eax,eax
  416bff:	je     416bce <flatcc_builder_vector_push@@Base+0x3e>
  416c01:	xor    ebp,ebp
  416c03:	jmp    416be2 <flatcc_builder_vector_push@@Base+0x52>
  416c05:	lea    rcx,[rip+0x18d64]        # 42f970 <_IO_stdin_used@@Base+0x4970>
  416c0c:	lea    rsi,[rip+0x183ed]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416c13:	lea    rdi,[rip+0x184f6]        # 42f110 <_IO_stdin_used@@Base+0x4110>
  416c1a:	mov    edx,0x38c
  416c1f:	call   405080 <__assert_fail@plt>
  416c24:	lea    rcx,[rip+0x18d45]        # 42f970 <_IO_stdin_used@@Base+0x4970>
  416c2b:	lea    rsi,[rip+0x183ce]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416c32:	lea    rdi,[rip+0x184a7]        # 42f0e0 <_IO_stdin_used@@Base+0x40e0>
  416c39:	mov    edx,0x38b
  416c3e:	call   405080 <__assert_fail@plt>
  416c43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416c4e:	xchg   ax,ax

0000000000416c50 <flatcc_builder_append_vector@@Base>:
  416c50:	push   r13
  416c52:	push   r12
  416c54:	push   rbp
  416c55:	push   rbx
  416c56:	sub    rsp,0x8
  416c5a:	mov    rax,QWORD PTR [rdi+0x30]
  416c5e:	cmp    WORD PTR [rax+0xe],0x4
  416c63:	jne    416cdb <flatcc_builder_append_vector@@Base+0x8b>
  416c65:	mov    r13,rsi
  416c68:	mov    ecx,edx
  416c6a:	xor    esi,esi
  416c6c:	add    ecx,DWORD PTR [rax+0x14]
  416c6f:	setb   sil
  416c73:	cmp    DWORD PTR [rax+0x18],ecx
  416c76:	jb     416cd6 <flatcc_builder_append_vector@@Base+0x86>
  416c78:	test   esi,esi
  416c7a:	jne    416cd6 <flatcc_builder_append_vector@@Base+0x86>
  416c7c:	mov    ebx,DWORD PTR [rax+0x10]
  416c7f:	mov    DWORD PTR [rax+0x14],ecx
  416c82:	mov    rbp,rdi
  416c85:	mov    r12d,DWORD PTR [rdi+0x20]
  416c89:	imul   ebx,edx
  416c8c:	mov    rdx,r12
  416c8f:	add    edx,ebx
  416c91:	cmp    edx,DWORD PTR [rdi+0x24]
  416c94:	mov    DWORD PTR [rdi+0x20],edx
  416c97:	jae    416cc0 <flatcc_builder_append_vector@@Base+0x70>
  416c99:	add    r12,QWORD PTR [rbp+0x18]
  416c9d:	je     416cac <flatcc_builder_append_vector@@Base+0x5c>
  416c9f:	mov    edx,ebx
  416ca1:	mov    rsi,r13
  416ca4:	mov    rdi,r12
  416ca7:	call   4050e0 <memcpy@plt>
  416cac:	add    rsp,0x8
  416cb0:	mov    rax,r12
  416cb3:	pop    rbx
  416cb4:	pop    rbp
  416cb5:	pop    r12
  416cb7:	pop    r13
  416cb9:	ret    
  416cba:	nop    WORD PTR [rax+rax*1+0x0]
  416cc0:	lea    esi,[rdx+0x1]
  416cc3:	mov    edx,0xfffffffc
  416cc8:	call   415680 <union_vector_tests@@Base+0x110>
  416ccd:	test   eax,eax
  416ccf:	je     416c99 <flatcc_builder_append_vector@@Base+0x49>
  416cd1:	xor    r12d,r12d
  416cd4:	jmp    416cac <flatcc_builder_append_vector@@Base+0x5c>
  416cd6:	call   405336 <__sprintf_chk@plt+0x1e6>
  416cdb:	lea    rcx,[rip+0x18c6e]        # 42f950 <_IO_stdin_used@@Base+0x4950>
  416ce2:	lea    rsi,[rip+0x18317]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416ce9:	lea    rdi,[rip+0x183f0]        # 42f0e0 <_IO_stdin_used@@Base+0x40e0>
  416cf0:	mov    edx,0x393
  416cf5:	call   405080 <__assert_fail@plt>
  416cfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000416d00 <flatcc_builder_extend_offset_vector@@Base>:
  416d00:	push   rbp
  416d01:	push   rbx
  416d02:	xor    edx,edx
  416d04:	mov    ecx,esi
  416d06:	sub    rsp,0x8
  416d0a:	mov    rax,QWORD PTR [rdi+0x30]
  416d0e:	add    ecx,DWORD PTR [rax+0x14]
  416d11:	setb   dl
  416d14:	test   edx,edx
  416d16:	jne    416d5d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  416d18:	cmp    ecx,0x3fffffff
  416d1e:	ja     416d5d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  416d20:	mov    DWORD PTR [rax+0x14],ecx
  416d23:	mov    ebp,DWORD PTR [rdi+0x20]
  416d26:	mov    rbx,rdi
  416d29:	lea    eax,[rbp+rsi*4+0x0]
  416d2d:	cmp    eax,DWORD PTR [rdi+0x24]
  416d30:	mov    DWORD PTR [rdi+0x20],eax
  416d33:	jae    416d48 <flatcc_builder_extend_offset_vector@@Base+0x48>
  416d35:	mov    rax,rbp
  416d38:	add    rax,QWORD PTR [rbx+0x18]
  416d3c:	add    rsp,0x8
  416d40:	pop    rbx
  416d41:	pop    rbp
  416d42:	ret    
  416d43:	nop    DWORD PTR [rax+rax*1+0x0]
  416d48:	lea    esi,[rax+0x1]
  416d4b:	mov    edx,0xfffffffc
  416d50:	call   415680 <union_vector_tests@@Base+0x110>
  416d55:	test   eax,eax
  416d57:	je     416d35 <flatcc_builder_extend_offset_vector@@Base+0x35>
  416d59:	xor    eax,eax
  416d5b:	jmp    416d3c <flatcc_builder_extend_offset_vector@@Base+0x3c>
  416d5d:	call   405336 <__sprintf_chk@plt+0x1e6>
  416d62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  416d6d:	nop    DWORD PTR [rax]

0000000000416d70 <flatcc_builder_offset_vector_push@@Base>:
  416d70:	push   r12
  416d72:	push   rbp
  416d73:	push   rbx
  416d74:	mov    rdx,QWORD PTR [rdi+0x30]
  416d78:	cmp    WORD PTR [rdx+0xe],0x5
  416d7d:	jne    416dd0 <flatcc_builder_offset_vector_push@@Base+0x60>
  416d7f:	mov    eax,DWORD PTR [rdx+0x14]
  416d82:	cmp    eax,0x3fffffff
  416d87:	je     416dc9 <flatcc_builder_offset_vector_push@@Base+0x59>
  416d89:	add    eax,0x1
  416d8c:	mov    rbp,rdi
  416d8f:	mov    r12d,esi
  416d92:	mov    DWORD PTR [rdx+0x14],eax
  416d95:	mov    ebx,DWORD PTR [rdi+0x20]
  416d98:	lea    edx,[rbx+0x4]
  416d9b:	cmp    edx,DWORD PTR [rdi+0x24]
  416d9e:	mov    DWORD PTR [rdi+0x20],edx
  416da1:	jae    416db8 <flatcc_builder_offset_vector_push@@Base+0x48>
  416da3:	mov    rax,rbx
  416da6:	add    rax,QWORD PTR [rbp+0x18]
  416daa:	je     416dc9 <flatcc_builder_offset_vector_push@@Base+0x59>
  416dac:	mov    DWORD PTR [rax],r12d
  416daf:	pop    rbx
  416db0:	pop    rbp
  416db1:	pop    r12
  416db3:	ret    
  416db4:	nop    DWORD PTR [rax+0x0]
  416db8:	lea    esi,[rbx+0x5]
  416dbb:	mov    edx,0xfffffffc
  416dc0:	call   415680 <union_vector_tests@@Base+0x110>
  416dc5:	test   eax,eax
  416dc7:	je     416da3 <flatcc_builder_offset_vector_push@@Base+0x33>
  416dc9:	pop    rbx
  416dca:	xor    eax,eax
  416dcc:	pop    rbp
  416dcd:	pop    r12
  416dcf:	ret    
  416dd0:	lea    rcx,[rip+0x18b49]        # 42f920 <_IO_stdin_used@@Base+0x4920>
  416dd7:	lea    rsi,[rip+0x18222]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416dde:	lea    rdi,[rip+0x1836b]        # 42f150 <_IO_stdin_used@@Base+0x4150>
  416de5:	mov    edx,0x3a6
  416dea:	call   405080 <__assert_fail@plt>
  416def:	nop

0000000000416df0 <flatcc_builder_append_offset_vector@@Base>:
  416df0:	push   r13
  416df2:	push   r12
  416df4:	push   rbp
  416df5:	push   rbx
  416df6:	sub    rsp,0x8
  416dfa:	mov    rax,QWORD PTR [rdi+0x30]
  416dfe:	cmp    WORD PTR [rax+0xe],0x5
  416e03:	jne    416e7b <flatcc_builder_append_offset_vector@@Base+0x8b>
  416e05:	mov    r13,rsi
  416e08:	mov    ecx,edx
  416e0a:	xor    esi,esi
  416e0c:	add    ecx,DWORD PTR [rax+0x14]
  416e0f:	setb   sil
  416e13:	test   esi,esi
  416e15:	jne    416e76 <flatcc_builder_append_offset_vector@@Base+0x86>
  416e17:	cmp    ecx,0x3fffffff
  416e1d:	ja     416e76 <flatcc_builder_append_offset_vector@@Base+0x86>
  416e1f:	mov    DWORD PTR [rax+0x14],ecx
  416e22:	mov    r12d,DWORD PTR [rdi+0x20]
  416e26:	lea    ebx,[rdx*4+0x0]
  416e2d:	mov    rbp,rdi
  416e30:	mov    rdx,r12
  416e33:	add    edx,ebx
  416e35:	cmp    edx,DWORD PTR [rdi+0x24]
  416e38:	mov    DWORD PTR [rdi+0x20],edx
  416e3b:	jae    416e60 <flatcc_builder_append_offset_vector@@Base+0x70>
  416e3d:	add    r12,QWORD PTR [rbp+0x18]
  416e41:	je     416e50 <flatcc_builder_append_offset_vector@@Base+0x60>
  416e43:	mov    edx,ebx
  416e45:	mov    rsi,r13
  416e48:	mov    rdi,r12
  416e4b:	call   4050e0 <memcpy@plt>
  416e50:	add    rsp,0x8
  416e54:	mov    rax,r12
  416e57:	pop    rbx
  416e58:	pop    rbp
  416e59:	pop    r12
  416e5b:	pop    r13
  416e5d:	ret    
  416e5e:	xchg   ax,ax
  416e60:	lea    esi,[rdx+0x1]
  416e63:	mov    edx,0xfffffffc
  416e68:	call   415680 <union_vector_tests@@Base+0x110>
  416e6d:	test   eax,eax
  416e6f:	je     416e3d <flatcc_builder_append_offset_vector@@Base+0x4d>
  416e71:	xor    r12d,r12d
  416e74:	jmp    416e50 <flatcc_builder_append_offset_vector@@Base+0x60>
  416e76:	call   405336 <__sprintf_chk@plt+0x1e6>
  416e7b:	lea    rcx,[rip+0x18a5e]        # 42f8e0 <_IO_stdin_used@@Base+0x48e0>
  416e82:	lea    rsi,[rip+0x18177]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416e89:	lea    rdi,[rip+0x182c0]        # 42f150 <_IO_stdin_used@@Base+0x4150>
  416e90:	mov    edx,0x3b4
  416e95:	call   405080 <__assert_fail@plt>
  416e9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000416ea0 <flatcc_builder_extend_string@@Base>:
  416ea0:	push   rbp
  416ea1:	push   rbx
  416ea2:	sub    rsp,0x8
  416ea6:	mov    rax,QWORD PTR [rdi+0x30]
  416eaa:	cmp    WORD PTR [rax+0xe],0x6
  416eaf:	jne    416efa <flatcc_builder_extend_string@@Base+0x5a>
  416eb1:	mov    edx,esi
  416eb3:	add    edx,DWORD PTR [rax+0x14]
  416eb6:	jb     416ef5 <flatcc_builder_extend_string@@Base+0x55>
  416eb8:	mov    DWORD PTR [rax+0x14],edx
  416ebb:	mov    ebp,DWORD PTR [rdi+0x20]
  416ebe:	mov    rbx,rdi
  416ec1:	add    esi,ebp
  416ec3:	cmp    esi,DWORD PTR [rdi+0x24]
  416ec6:	mov    DWORD PTR [rdi+0x20],esi
  416ec9:	jae    416ee0 <flatcc_builder_extend_string@@Base+0x40>
  416ecb:	mov    rax,rbp
  416ece:	add    rax,QWORD PTR [rbx+0x18]
  416ed2:	add    rsp,0x8
  416ed6:	pop    rbx
  416ed7:	pop    rbp
  416ed8:	ret    
  416ed9:	nop    DWORD PTR [rax+0x0]
  416ee0:	add    esi,0x1
  416ee3:	mov    edx,0xfffffffc
  416ee8:	call   415680 <union_vector_tests@@Base+0x110>
  416eed:	test   eax,eax
  416eef:	je     416ecb <flatcc_builder_extend_string@@Base+0x2b>
  416ef1:	xor    eax,eax
  416ef3:	jmp    416ed2 <flatcc_builder_extend_string@@Base+0x32>
  416ef5:	call   405336 <__sprintf_chk@plt+0x1e6>
  416efa:	lea    rcx,[rip+0x189af]        # 42f8b0 <_IO_stdin_used@@Base+0x48b0>
  416f01:	lea    rsi,[rip+0x180f8]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416f08:	lea    rdi,[rip+0x18279]        # 42f188 <_IO_stdin_used@@Base+0x4188>
  416f0f:	mov    edx,0x3bd
  416f14:	call   405080 <__assert_fail@plt>
  416f19:	nop    DWORD PTR [rax+0x0]

0000000000416f20 <flatcc_builder_append_string@@Base>:
  416f20:	push   r13
  416f22:	push   r12
  416f24:	push   rbp
  416f25:	push   rbx
  416f26:	sub    rsp,0x8
  416f2a:	mov    rax,QWORD PTR [rdi+0x30]
  416f2e:	cmp    WORD PTR [rax+0xe],0x6
  416f33:	jne    416f9b <flatcc_builder_append_string@@Base+0x7b>
  416f35:	mov    rbp,rdx
  416f38:	add    edx,DWORD PTR [rax+0x14]
  416f3b:	jb     416f96 <flatcc_builder_append_string@@Base+0x76>
  416f3d:	mov    DWORD PTR [rax+0x14],edx
  416f40:	mov    r12d,DWORD PTR [rdi+0x20]
  416f44:	mov    rbx,rdi
  416f47:	mov    r13,rsi
  416f4a:	mov    rdx,r12
  416f4d:	add    edx,ebp
  416f4f:	cmp    edx,DWORD PTR [rdi+0x24]
  416f52:	mov    DWORD PTR [rdi+0x20],edx
  416f55:	jae    416f80 <flatcc_builder_append_string@@Base+0x60>
  416f57:	add    r12,QWORD PTR [rbx+0x18]
  416f5b:	je     416f6a <flatcc_builder_append_string@@Base+0x4a>
  416f5d:	mov    edx,ebp
  416f5f:	mov    rsi,r13
  416f62:	mov    rdi,r12
  416f65:	call   4050e0 <memcpy@plt>
  416f6a:	add    rsp,0x8
  416f6e:	mov    rax,r12
  416f71:	pop    rbx
  416f72:	pop    rbp
  416f73:	pop    r12
  416f75:	pop    r13
  416f77:	ret    
  416f78:	nop    DWORD PTR [rax+rax*1+0x0]
  416f80:	lea    esi,[rdx+0x1]
  416f83:	mov    edx,0xfffffffc
  416f88:	call   415680 <union_vector_tests@@Base+0x110>
  416f8d:	test   eax,eax
  416f8f:	je     416f57 <flatcc_builder_append_string@@Base+0x37>
  416f91:	xor    r12d,r12d
  416f94:	jmp    416f6a <flatcc_builder_append_string@@Base+0x4a>
  416f96:	call   405336 <__sprintf_chk@plt+0x1e6>
  416f9b:	lea    rcx,[rip+0x188ee]        # 42f890 <_IO_stdin_used@@Base+0x4890>
  416fa2:	lea    rsi,[rip+0x18057]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  416fa9:	lea    rdi,[rip+0x181d8]        # 42f188 <_IO_stdin_used@@Base+0x4188>
  416fb0:	mov    edx,0x3c6
  416fb5:	call   405080 <__assert_fail@plt>
  416fba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000416fc0 <flatcc_builder_append_string_str@@Base>:
  416fc0:	push   rbp
  416fc1:	push   rbx
  416fc2:	mov    rbp,rdi
  416fc5:	mov    rdi,rsi
  416fc8:	mov    rbx,rsi
  416fcb:	sub    rsp,0x8
  416fcf:	call   405060 <strlen@plt>
  416fd4:	add    rsp,0x8
  416fd8:	mov    rsi,rbx
  416fdb:	mov    rdi,rbp
  416fde:	pop    rbx
  416fdf:	pop    rbp
  416fe0:	mov    rdx,rax
  416fe3:	jmp    416f20 <flatcc_builder_append_string@@Base>
  416fe8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000416ff0 <flatcc_builder_append_string_strn@@Base>:
  416ff0:	push   r12
  416ff2:	push   rbp
  416ff3:	mov    rbp,rsi
  416ff6:	push   rbx
  416ff7:	mov    r12,rdi
  416ffa:	xor    esi,esi
  416ffc:	mov    rdi,rbp
  416fff:	mov    rbx,rdx
  417002:	call   4050a0 <memchr@plt>
  417007:	mov    rdx,rax
  41700a:	mov    rsi,rbp
  41700d:	mov    rdi,r12
  417010:	sub    rdx,rbp
  417013:	test   rax,rax
  417016:	cmovne rbx,rdx
  41701a:	mov    rdx,rbx
  41701d:	pop    rbx
  41701e:	pop    rbp
  41701f:	pop    r12
  417021:	jmp    416f20 <flatcc_builder_append_string@@Base>
  417026:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000417030 <flatcc_builder_truncate_vector@@Base>:
  417030:	sub    rsp,0x8
  417034:	mov    rax,QWORD PTR [rdi+0x30]
  417038:	cmp    WORD PTR [rax+0xe],0x4
  41703d:	jne    417073 <flatcc_builder_truncate_vector@@Base+0x43>
  41703f:	mov    ecx,DWORD PTR [rax+0x14]
  417042:	cmp    rcx,rsi
  417045:	mov    rdx,rcx
  417048:	jb     417092 <flatcc_builder_truncate_vector@@Base+0x62>
  41704a:	sub    edx,esi
  41704c:	imul   esi,DWORD PTR [rax+0x10]
  417050:	mov    DWORD PTR [rax+0x14],edx
  417053:	mov    eax,DWORD PTR [rdi+0x20]
  417056:	mov    rcx,QWORD PTR [rdi+0x18]
  41705a:	sub    eax,esi
  41705c:	mov    edx,esi
  41705e:	xor    esi,esi
  417060:	mov    DWORD PTR [rdi+0x20],eax
  417063:	lea    rdi,[rcx+rax*1]
  417067:	call   405090 <memset@plt>
  41706c:	xor    eax,eax
  41706e:	add    rsp,0x8
  417072:	ret    
  417073:	lea    rcx,[rip+0x187f6]        # 42f870 <_IO_stdin_used@@Base+0x4870>
  41707a:	lea    rsi,[rip+0x17f7f]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417081:	lea    rdi,[rip+0x18058]        # 42f0e0 <_IO_stdin_used@@Base+0x40e0>
  417088:	mov    edx,0x3d9
  41708d:	call   405080 <__assert_fail@plt>
  417092:	lea    rcx,[rip+0x187d7]        # 42f870 <_IO_stdin_used@@Base+0x4870>
  417099:	lea    rsi,[rip+0x17f60]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4170a0:	lea    rdi,[rip+0x18111]        # 42f1b8 <_IO_stdin_used@@Base+0x41b8>
  4170a7:	mov    edx,0x3da
  4170ac:	call   405080 <__assert_fail@plt>
  4170b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4170bc:	nop    DWORD PTR [rax+0x0]

00000000004170c0 <flatcc_builder_truncate_offset_vector@@Base>:
  4170c0:	sub    rsp,0x8
  4170c4:	mov    rax,QWORD PTR [rdi+0x30]
  4170c8:	cmp    WORD PTR [rax+0xe],0x5
  4170cd:	jne    4170ff <flatcc_builder_truncate_offset_vector@@Base+0x3f>
  4170cf:	mov    edx,DWORD PTR [rax+0x14]
  4170d2:	cmp    edx,esi
  4170d4:	jb     41711e <flatcc_builder_truncate_offset_vector@@Base+0x5e>
  4170d6:	sub    edx,esi
  4170d8:	imul   esi,DWORD PTR [rax+0x10]
  4170dc:	mov    DWORD PTR [rax+0x14],edx
  4170df:	mov    eax,DWORD PTR [rdi+0x20]
  4170e2:	mov    rcx,QWORD PTR [rdi+0x18]
  4170e6:	sub    eax,esi
  4170e8:	mov    edx,esi
  4170ea:	xor    esi,esi
  4170ec:	mov    DWORD PTR [rdi+0x20],eax
  4170ef:	lea    rdi,[rcx+rax*1]
  4170f3:	call   405090 <memset@plt>
  4170f8:	xor    eax,eax
  4170fa:	add    rsp,0x8
  4170fe:	ret    
  4170ff:	lea    rcx,[rip+0x1873a]        # 42f840 <_IO_stdin_used@@Base+0x4840>
  417106:	lea    rsi,[rip+0x17ef3]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41710d:	lea    rdi,[rip+0x1803c]        # 42f150 <_IO_stdin_used@@Base+0x4150>
  417114:	mov    edx,0x3e2
  417119:	call   405080 <__assert_fail@plt>
  41711e:	lea    rcx,[rip+0x1871b]        # 42f840 <_IO_stdin_used@@Base+0x4840>
  417125:	lea    rsi,[rip+0x17ed4]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41712c:	lea    rdi,[rip+0x180ad]        # 42f1e0 <_IO_stdin_used@@Base+0x41e0>
  417133:	mov    edx,0x3e3
  417138:	call   405080 <__assert_fail@plt>
  41713d:	nop    DWORD PTR [rax]

0000000000417140 <flatcc_builder_truncate_string@@Base>:
  417140:	sub    rsp,0x8
  417144:	mov    rdx,QWORD PTR [rdi+0x30]
  417148:	cmp    WORD PTR [rdx+0xe],0x6
  41714d:	jne    417180 <flatcc_builder_truncate_string@@Base+0x40>
  41714f:	mov    ecx,DWORD PTR [rdx+0x14]
  417152:	cmp    rcx,rsi
  417155:	mov    rax,rcx
  417158:	jb     41719f <flatcc_builder_truncate_string@@Base+0x5f>
  41715a:	sub    eax,esi
  41715c:	mov    DWORD PTR [rdx+0x14],eax
  41715f:	mov    eax,DWORD PTR [rdi+0x20]
  417162:	mov    rdx,QWORD PTR [rdi+0x18]
  417166:	sub    eax,esi
  417168:	mov    DWORD PTR [rdi+0x20],eax
  41716b:	lea    rdi,[rdx+rax*1]
  41716f:	mov    rdx,rsi
  417172:	xor    esi,esi
  417174:	call   405090 <memset@plt>
  417179:	xor    eax,eax
  41717b:	add    rsp,0x8
  41717f:	ret    
  417180:	lea    rcx,[rip+0x18699]        # 42f820 <_IO_stdin_used@@Base+0x4820>
  417187:	lea    rsi,[rip+0x17e72]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41718e:	lea    rdi,[rip+0x17ff3]        # 42f188 <_IO_stdin_used@@Base+0x4188>
  417195:	mov    edx,0x3eb
  41719a:	call   405080 <__assert_fail@plt>
  41719f:	lea    rcx,[rip+0x1867a]        # 42f820 <_IO_stdin_used@@Base+0x4820>
  4171a6:	lea    rsi,[rip+0x17e53]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4171ad:	lea    rdi,[rip+0x1806c]        # 42f220 <_IO_stdin_used@@Base+0x4220>
  4171b4:	mov    edx,0x3ec
  4171b9:	call   405080 <__assert_fail@plt>
  4171be:	xchg   ax,ax

00000000004171c0 <flatcc_builder_start_vector@@Base>:
  4171c0:	push   r12
  4171c2:	cmp    dx,0x4
  4171c6:	push   rbp
  4171c7:	mov    rbp,rsi
  4171ca:	mov    esi,0x4
  4171cf:	push   rbx
  4171d0:	cmovb  edx,esi
  4171d3:	mov    rbx,rdi
  4171d6:	mov    r12,rcx
  4171d9:	movzx  esi,dx
  4171dc:	call   415940 <flatcc_builder_default_alloc@@Base+0x260>
  4171e1:	test   eax,eax
  4171e3:	jne    417230 <flatcc_builder_start_vector@@Base+0x70>
  4171e5:	mov    rsi,QWORD PTR [rbx+0x30]
  4171e9:	mov    edx,0x4
  4171ee:	mov    DWORD PTR [rsi+0x10],ebp
  4171f1:	mov    DWORD PTR [rsi+0x14],0x0
  4171f8:	mov    DWORD PTR [rsi+0x18],r12d
  4171fc:	mov    WORD PTR [rsi+0xe],dx
  417200:	mov    edx,DWORD PTR [rbx+0x28]
  417203:	mov    rcx,rdx
  417206:	add    rdx,QWORD PTR [rbx+0x68]
  41720a:	mov    QWORD PTR [rbx+0x18],rdx
  41720e:	mov    edx,DWORD PTR [rbx+0x70]
  417211:	sub    edx,ecx
  417213:	mov    ecx,0xfffffffc
  417218:	cmp    edx,ecx
  41721a:	cmova  edx,ecx
  41721d:	mov    DWORD PTR [rbx+0x24],edx
  417220:	mov    DWORD PTR [rsi+0x4],ecx
  417223:	pop    rbx
  417224:	pop    rbp
  417225:	pop    r12
  417227:	ret    
  417228:	nop    DWORD PTR [rax+rax*1+0x0]
  417230:	mov    eax,0xffffffff
  417235:	jmp    417223 <flatcc_builder_start_vector@@Base+0x63>
  417237:	nop    WORD PTR [rax+rax*1+0x0]

0000000000417240 <flatcc_builder_start_offset_vector@@Base>:
  417240:	push   rbx
  417241:	mov    esi,0x4
  417246:	mov    rbx,rdi
  417249:	call   415940 <flatcc_builder_default_alloc@@Base+0x260>
  41724e:	test   eax,eax
  417250:	jne    417298 <flatcc_builder_start_offset_vector@@Base+0x58>
  417252:	mov    rcx,QWORD PTR [rbx+0x30]
  417256:	mov    edx,0x5
  41725b:	mov    DWORD PTR [rcx+0x10],0x4
  417262:	mov    DWORD PTR [rcx+0x14],0x0
  417269:	mov    WORD PTR [rcx+0xe],dx
  41726d:	mov    edx,DWORD PTR [rbx+0x28]
  417270:	mov    rsi,rdx
  417273:	add    rdx,QWORD PTR [rbx+0x68]
  417277:	mov    QWORD PTR [rbx+0x18],rdx
  41727b:	mov    edx,DWORD PTR [rbx+0x70]
  41727e:	sub    edx,esi
  417280:	mov    esi,0xfffffffc
  417285:	cmp    edx,esi
  417287:	cmova  edx,esi
  41728a:	mov    DWORD PTR [rbx+0x24],edx
  41728d:	mov    DWORD PTR [rcx+0x4],esi
  417290:	pop    rbx
  417291:	ret    
  417292:	nop    WORD PTR [rax+rax*1+0x0]
  417298:	mov    eax,0xffffffff
  41729d:	pop    rbx
  41729e:	ret    
  41729f:	nop

00000000004172a0 <flatcc_builder_start_string@@Base>:
  4172a0:	push   rbx
  4172a1:	mov    esi,0x1
  4172a6:	mov    rbx,rdi
  4172a9:	call   415940 <flatcc_builder_default_alloc@@Base+0x260>
  4172ae:	test   eax,eax
  4172b0:	jne    4172f8 <flatcc_builder_start_string@@Base+0x58>
  4172b2:	mov    rcx,QWORD PTR [rbx+0x30]
  4172b6:	mov    edx,0x6
  4172bb:	mov    DWORD PTR [rcx+0x10],0x1
  4172c2:	mov    DWORD PTR [rcx+0x14],0x0
  4172c9:	mov    WORD PTR [rcx+0xe],dx
  4172cd:	mov    edx,DWORD PTR [rbx+0x28]
  4172d0:	mov    rsi,rdx
  4172d3:	add    rdx,QWORD PTR [rbx+0x68]
  4172d7:	mov    QWORD PTR [rbx+0x18],rdx
  4172db:	mov    edx,DWORD PTR [rbx+0x70]
  4172de:	sub    edx,esi
  4172e0:	mov    esi,0xfffffffc
  4172e5:	cmp    edx,esi
  4172e7:	cmova  edx,esi
  4172ea:	mov    DWORD PTR [rbx+0x24],edx
  4172ed:	mov    DWORD PTR [rcx+0x4],esi
  4172f0:	pop    rbx
  4172f1:	ret    
  4172f2:	nop    WORD PTR [rax+rax*1+0x0]
  4172f8:	mov    eax,0xffffffff
  4172fd:	pop    rbx
  4172fe:	ret    
  4172ff:	nop

0000000000417300 <flatcc_builder_reserve_table@@Base>:
  417300:	test   esi,esi
  417302:	push   r12
  417304:	push   rbp
  417305:	push   rbx
  417306:	js     4173bf <flatcc_builder_reserve_table@@Base+0xbf>
  41730c:	mov    rax,QWORD PTR [rdi+0x30]
  417310:	lea    r12d,[rsi+rsi*1+0x4]
  417315:	mov    rbx,rdi
  417318:	movzx  edx,WORD PTR [rax+0x1c]
  41731c:	mov    eax,DWORD PTR [rax+0x10]
  41731f:	lea    ebp,[rax+rdx*2]
  417322:	mov    edx,r12d
  417325:	add    rdx,rbp
  417328:	cmp    rdx,QWORD PTR [rdi+0x60]
  41732c:	ja     417370 <flatcc_builder_reserve_table@@Base+0x70>
  41732e:	add    rbp,QWORD PTR [rbx+0x58]
  417332:	je     4173b0 <flatcc_builder_reserve_table@@Base+0xb0>
  417334:	mov    rax,QWORD PTR [rbx+0x30]
  417338:	add    rbp,0x4
  41733c:	lea    edx,[r12-0x3]
  417341:	mov    QWORD PTR [rbx+0x8],rbp
  417345:	mov    ebp,DWORD PTR [rax+0x14]
  417348:	add    rdx,rbp
  41734b:	cmp    rdx,QWORD PTR [rbx+0x90]
  417352:	ja     417390 <flatcc_builder_reserve_table@@Base+0x90>
  417354:	add    rbp,QWORD PTR [rbx+0x88]
  41735b:	xor    eax,eax
  41735d:	test   rbp,rbp
  417360:	mov    QWORD PTR [rbx],rbp
  417363:	sete   al
  417366:	neg    eax
  417368:	pop    rbx
  417369:	pop    rbp
  41736a:	pop    r12
  41736c:	ret    
  41736d:	nop    DWORD PTR [rax]
  417370:	lea    rsi,[rdi+0x58]
  417374:	xor    r8d,r8d
  417377:	mov    rdi,QWORD PTR [rdi+0x40]
  41737b:	mov    ecx,0x1
  417380:	call   QWORD PTR [rbx+0x50]
  417383:	test   eax,eax
  417385:	je     41732e <flatcc_builder_reserve_table@@Base+0x2e>
  417387:	call   4052cd <__sprintf_chk@plt+0x17d>
  41738c:	nop    DWORD PTR [rax+0x0]
  417390:	xor    ecx,ecx
  417392:	lea    rsi,[rbx+0x88]
  417399:	mov    rdi,QWORD PTR [rbx+0x40]
  41739d:	mov    r8d,0x3
  4173a3:	call   QWORD PTR [rbx+0x50]
  4173a6:	test   eax,eax
  4173a8:	je     417354 <flatcc_builder_reserve_table@@Base+0x54>
  4173aa:	jmp    417387 <flatcc_builder_reserve_table@@Base+0x87>
  4173ac:	nop    DWORD PTR [rax+0x0]
  4173b0:	mov    QWORD PTR [rbx+0x8],0x0
  4173b8:	mov    eax,0xffffffff
  4173bd:	jmp    417368 <flatcc_builder_reserve_table@@Base+0x68>
  4173bf:	lea    rcx,[rip+0x1843a]        # 42f800 <_IO_stdin_used@@Base+0x4800>
  4173c6:	lea    rsi,[rip+0x17c33]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4173cd:	lea    rdi,[rip+0x1801f]        # 42f3f3 <_IO_stdin_used@@Base+0x43f3>
  4173d4:	mov    edx,0x429
  4173d9:	call   405080 <__assert_fail@plt>
  4173de:	xchg   ax,ax

00000000004173e0 <flatcc_builder_start_table@@Base>:
  4173e0:	push   r13
  4173e2:	push   r12
  4173e4:	mov    r12d,esi
  4173e7:	push   rbp
  4173e8:	push   rbx
  4173e9:	mov    esi,0x4
  4173ee:	mov    rbx,rdi
  4173f1:	sub    rsp,0x8
  4173f5:	call   415940 <flatcc_builder_default_alloc@@Base+0x260>
  4173fa:	test   eax,eax
  4173fc:	jne    417530 <flatcc_builder_start_table@@Base+0x150>
  417402:	mov    rcx,QWORD PTR [rbx+0x8]
  417406:	mov    ebp,eax
  417408:	mov    rax,QWORD PTR [rbx+0x58]
  41740c:	mov    rdx,QWORD PTR [rbx+0x30]
  417410:	xor    edi,edi
  417412:	mov    r8d,0x3
  417418:	sub    rcx,rax
  41741b:	mov    DWORD PTR [rdx+0x10],ecx
  41741e:	mov    rsi,QWORD PTR [rbx]
  417421:	sub    rsi,QWORD PTR [rbx+0x88]
  417428:	mov    DWORD PTR [rdx+0x14],esi
  41742b:	mov    esi,DWORD PTR [rbx+0x14]
  41742e:	mov    DWORD PTR [rdx+0x18],esi
  417431:	movzx  esi,WORD PTR [rbx+0x10]
  417435:	mov    WORD PTR [rdx+0x1c],si
  417439:	lea    r13d,[rcx+rsi*2]
  41743d:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  417444:	mov    WORD PTR [rbx+0x10],di
  417448:	mov    WORD PTR [rdx+0xe],r8w
  41744d:	lea    edx,[r12+r12*1+0x4]
  417452:	add    rdx,r13
  417455:	cmp    rdx,QWORD PTR [rbx+0x60]
  417459:	ja     4174d8 <flatcc_builder_start_table@@Base+0xf8>
  41745b:	add    rax,r13
  41745e:	je     417528 <flatcc_builder_start_table@@Base+0x148>
  417464:	add    rax,0x4
  417468:	lea    edx,[r12+r12*1+0x1]
  41746d:	mov    QWORD PTR [rbx+0x8],rax
  417471:	mov    rax,QWORD PTR [rbx+0x30]
  417475:	mov    r13d,DWORD PTR [rax+0x14]
  417479:	add    rdx,r13
  41747c:	cmp    rdx,QWORD PTR [rbx+0x90]
  417483:	ja     417500 <flatcc_builder_start_table@@Base+0x120>
  417485:	add    r13,QWORD PTR [rbx+0x88]
  41748c:	test   r13,r13
  41748f:	mov    QWORD PTR [rbx],r13
  417492:	je     417530 <flatcc_builder_start_table@@Base+0x150>
  417498:	mov    eax,DWORD PTR [rbx+0x28]
  41749b:	mov    rdx,rax
  41749e:	add    rax,QWORD PTR [rbx+0x68]
  4174a2:	mov    QWORD PTR [rbx+0x18],rax
  4174a6:	mov    eax,DWORD PTR [rbx+0x70]
  4174a9:	sub    eax,edx
  4174ab:	mov    edx,0xfffc
  4174b0:	cmp    eax,0xfffc
  4174b5:	cmova  eax,edx
  4174b8:	mov    DWORD PTR [rbx+0x24],eax
  4174bb:	mov    rax,QWORD PTR [rbx+0x30]
  4174bf:	mov    DWORD PTR [rax+0x4],0xfffc
  4174c6:	add    rsp,0x8
  4174ca:	mov    eax,ebp
  4174cc:	pop    rbx
  4174cd:	pop    rbp
  4174ce:	pop    r12
  4174d0:	pop    r13
  4174d2:	ret    
  4174d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4174d8:	xor    r8d,r8d
  4174db:	lea    rsi,[rbx+0x58]
  4174df:	mov    rdi,QWORD PTR [rbx+0x40]
  4174e3:	mov    ecx,0x1
  4174e8:	call   QWORD PTR [rbx+0x50]
  4174eb:	test   eax,eax
  4174ed:	jne    41751e <flatcc_builder_start_table@@Base+0x13e>
  4174ef:	mov    rax,QWORD PTR [rbx+0x58]
  4174f3:	jmp    41745b <flatcc_builder_start_table@@Base+0x7b>
  4174f8:	nop    DWORD PTR [rax+rax*1+0x0]
  417500:	xor    ecx,ecx
  417502:	lea    rsi,[rbx+0x88]
  417509:	mov    rdi,QWORD PTR [rbx+0x40]
  41750d:	mov    r8d,0x3
  417513:	call   QWORD PTR [rbx+0x50]
  417516:	test   eax,eax
  417518:	je     417485 <flatcc_builder_start_table@@Base+0xa5>
  41751e:	call   4052cd <__sprintf_chk@plt+0x17d>
  417523:	nop    DWORD PTR [rax+rax*1+0x0]
  417528:	mov    QWORD PTR [rbx+0x8],0x0
  417530:	add    rsp,0x8
  417534:	mov    ebp,0xffffffff
  417539:	pop    rbx
  41753a:	mov    eax,ebp
  41753c:	pop    rbp
  41753d:	pop    r12
  41753f:	pop    r13
  417541:	ret    
  417542:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41754d:	nop    DWORD PTR [rax]

0000000000417550 <flatcc_builder_create_vtable@@Base>:
  417550:	push   rbp
  417551:	push   rbx
  417552:	mov    rbp,rdi
  417555:	sub    rsp,0xa8
  41755c:	mov    rax,QWORD PTR fs:0x28
  417565:	mov    QWORD PTR [rsp+0x98],rax
  41756d:	xor    eax,eax
  41756f:	test   dx,dx
  417572:	mov    QWORD PTR [rsp],0x0
  41757a:	mov    DWORD PTR [rsp+0x8],0x0
  417582:	je     417610 <flatcc_builder_create_vtable@@Base+0xc0>
  417588:	mov    QWORD PTR [rsp+0x10],rsi
  41758d:	mov    esi,DWORD PTR [rdi+0x100]
  417593:	movzx  r8d,dx
  417597:	mov    QWORD PTR [rsp],r8
  41759b:	mov    QWORD PTR [rsp+0x18],r8
  4175a0:	movzx  edx,dx
  4175a3:	mov    DWORD PTR [rsp+0x8],0x1
  4175ab:	test   esi,esi
  4175ad:	je     417648 <flatcc_builder_create_vtable@@Base+0xf8>
  4175b3:	mov    eax,DWORD PTR [rbp+0xf0]
  4175b9:	mov    ebx,eax
  4175bb:	sub    ebx,edx
  4175bd:	cmp    eax,ebx
  4175bf:	jle    417624 <flatcc_builder_create_vtable@@Base+0xd4>
  4175c1:	lea    rsi,[rsp+0x10]
  4175c6:	mov    rdi,QWORD PTR [rbp+0x38]
  4175ca:	mov    ecx,ebx
  4175cc:	mov    edx,DWORD PTR [rsp+0x8]
  4175d0:	call   QWORD PTR [rbp+0x48]
  4175d3:	test   eax,eax
  4175d5:	jne    4176a0 <flatcc_builder_create_vtable@@Base+0x150>
  4175db:	cmp    ebx,0x1
  4175de:	mov    DWORD PTR [rbp+0xf0],ebx
  4175e4:	sbb    ebx,0xffffffff
  4175e7:	mov    rcx,QWORD PTR [rsp+0x98]
  4175ef:	xor    rcx,QWORD PTR fs:0x28
  4175f8:	mov    eax,ebx
  4175fa:	jne    41769b <flatcc_builder_create_vtable@@Base+0x14b>
  417600:	add    rsp,0xa8
  417607:	pop    rbx
  417608:	pop    rbp
  417609:	ret    
  41760a:	nop    WORD PTR [rax+rax*1+0x0]
  417610:	mov    edx,DWORD PTR [rdi+0x100]
  417616:	test   edx,edx
  417618:	jne    417624 <flatcc_builder_create_vtable@@Base+0xd4>
  41761a:	mov    eax,DWORD PTR [rdi+0x124]
  417620:	test   eax,eax
  417622:	je     417690 <flatcc_builder_create_vtable@@Base+0x140>
  417624:	lea    rcx,[rip+0x18405]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  41762b:	lea    rsi,[rip+0x179ce]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417632:	lea    rdi,[rip+0x17d5e]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  417639:	mov    edx,0x287
  41763e:	call   405080 <__assert_fail@plt>
  417643:	nop    DWORD PTR [rax+rax*1+0x0]
  417648:	mov    ecx,DWORD PTR [rdi+0x124]
  41764e:	test   ecx,ecx
  417650:	jne    4175b3 <flatcc_builder_create_vtable@@Base+0x63>
  417656:	mov    ebx,DWORD PTR [rdi+0xf4]
  41765c:	add    edx,ebx
  41765e:	cmp    ebx,edx
  417660:	mov    DWORD PTR [rdi+0xf4],edx
  417666:	jg     4176c4 <flatcc_builder_create_vtable@@Base+0x174>
  417668:	lea    rsi,[rsp+0x10]
  41766d:	mov    rdi,QWORD PTR [rbp+0x38]
  417671:	mov    ecx,ebx
  417673:	mov    edx,DWORD PTR [rsp+0x8]
  417677:	call   QWORD PTR [rbp+0x48]
  41767a:	test   eax,eax
  41767c:	jne    4176a5 <flatcc_builder_create_vtable@@Base+0x155>
  41767e:	add    ebx,0x1
  417681:	jmp    4175e7 <flatcc_builder_create_vtable@@Base+0x97>
  417686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417690:	mov    ebx,DWORD PTR [rbp+0xf4]
  417696:	xor    r8d,r8d
  417699:	jmp    417668 <flatcc_builder_create_vtable@@Base+0x118>
  41769b:	call   405070 <__stack_chk_fail@plt>
  4176a0:	call   405313 <__sprintf_chk@plt+0x1c3>
  4176a5:	lea    rcx,[rip+0x18394]        # 42fa40 <_IO_stdin_used@@Base+0x4a40>
  4176ac:	lea    rsi,[rip+0x1794d]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4176b3:	lea    rdi,[rip+0x17cdd]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  4176ba:	mov    edx,0x2a5
  4176bf:	call   405080 <__assert_fail@plt>
  4176c4:	call   4052f0 <__sprintf_chk@plt+0x1a0>
  4176c9:	nop    DWORD PTR [rax+0x0]

00000000004176d0 <flatcc_builder_create_cached_vtable@@Base>:
  4176d0:	push   r15
  4176d2:	push   r14
  4176d4:	mov    r15,rdi
  4176d7:	push   r13
  4176d9:	push   r12
  4176db:	movzx  r14d,dx
  4176df:	push   rbp
  4176e0:	push   rbx
  4176e1:	mov    ebp,ecx
  4176e3:	sub    rsp,0x38
  4176e7:	mov    rbx,QWORD PTR [rdi+0xd8]
  4176ee:	mov    QWORD PTR [rsp+0x10],rsi
  4176f3:	mov    DWORD PTR [rsp+0x2c],edx
  4176f7:	test   rbx,rbx
  4176fa:	je     417888 <flatcc_builder_create_cached_vtable@@Base+0x1b8>
  417700:	mov    eax,0x20
  417705:	sub    eax,ebx
  417707:	shrx   ebp,ebp,eax
  41770c:	mov    rax,QWORD PTR [r15+0xa8]
  417713:	lea    r12,[rax+rbp*4]
  417717:	test   r12,r12
  41771a:	je     417870 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  417720:	mov    ebp,DWORD PTR [r12]
  417724:	test   ebp,ebp
  417726:	je     417990 <flatcc_builder_create_cached_vtable@@Base+0x2c0>
  41772c:	movzx  eax,r14w
  417730:	mov    r11,QWORD PTR [r15+0xb8]
  417737:	mov    r8,QWORD PTR [r15+0x78]
  41773b:	mov    r13,r12
  41773e:	mov    QWORD PTR [rsp+0x20],0x0
  417747:	mov    QWORD PTR [rsp+0x18],rax
  41774c:	jmp    41775b <flatcc_builder_create_cached_vtable@@Base+0x8b>
  41774e:	xchg   ax,ax
  417750:	mov    ebp,DWORD PTR [rbx+0xc]
  417753:	lea    r13,[rbx+0xc]
  417757:	test   ebp,ebp
  417759:	je     4177b8 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  41775b:	mov    ebx,ebp
  41775d:	add    rbx,r11
  417760:	mov    esi,DWORD PTR [rbx+0x8]
  417763:	add    rsi,r8
  417766:	cmp    WORD PTR [rsi],r14w
  41776a:	jne    417750 <flatcc_builder_create_cached_vtable@@Base+0x80>
  41776c:	mov    rdx,QWORD PTR [rsp+0x18]
  417771:	mov    rdi,QWORD PTR [rsp+0x10]
  417776:	mov    QWORD PTR [rsp+0x8],r8
  41777b:	mov    QWORD PTR [rsp],r11
  41777f:	call   4050b0 <memcmp@plt>
  417784:	test   eax,eax
  417786:	mov    r11,QWORD PTR [rsp]
  41778a:	mov    r8,QWORD PTR [rsp+0x8]
  41778f:	jne    417750 <flatcc_builder_create_cached_vtable@@Base+0x80>
  417791:	mov    eax,DWORD PTR [r15+0x100]
  417798:	cmp    DWORD PTR [rbx+0x4],eax
  41779b:	je     417840 <flatcc_builder_create_cached_vtable@@Base+0x170>
  4177a1:	mov    ebp,DWORD PTR [rbx+0xc]
  4177a4:	lea    r13,[rbx+0xc]
  4177a8:	mov    QWORD PTR [rsp+0x20],rbx
  4177ad:	test   ebp,ebp
  4177af:	jne    41775b <flatcc_builder_create_cached_vtable@@Base+0x8b>
  4177b1:	nop    DWORD PTR [rax+0x0]
  4177b8:	mov    ebx,DWORD PTR [r15+0xe4]
  4177bf:	lea    rdx,[rbx+0x10]
  4177c3:	cmp    rdx,QWORD PTR [r15+0xc0]
  4177ca:	ja     417968 <flatcc_builder_create_cached_vtable@@Base+0x298>
  4177d0:	add    rbx,QWORD PTR [r15+0xb8]
  4177d7:	je     417870 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  4177dd:	mov    eax,DWORD PTR [r15+0xe4]
  4177e4:	movzx  ebp,WORD PTR [rsp+0x2c]
  4177e9:	mov    rdi,r15
  4177ec:	mov    rsi,QWORD PTR [rsp+0x10]
  4177f1:	lea    edx,[rax+0x10]
  4177f4:	mov    DWORD PTR [r15+0xe4],edx
  4177fb:	mov    edx,DWORD PTR [r15+0x100]
  417802:	mov    DWORD PTR [rbx+0x4],edx
  417805:	mov    edx,DWORD PTR [r12]
  417809:	mov    DWORD PTR [rbx+0xc],edx
  41780c:	mov    DWORD PTR [r12],eax
  417810:	mov    edx,ebp
  417812:	call   417550 <flatcc_builder_create_vtable@@Base>
  417817:	test   eax,eax
  417819:	mov    DWORD PTR [rbx],eax
  41781b:	je     417870 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  41781d:	mov    rdi,QWORD PTR [rsp+0x20]
  417822:	test   rdi,rdi
  417825:	je     41799e <flatcc_builder_create_cached_vtable@@Base+0x2ce>
  41782b:	mov    edx,DWORD PTR [rdi+0x8]
  41782e:	mov    DWORD PTR [rbx+0x8],edx
  417831:	add    rsp,0x38
  417835:	pop    rbx
  417836:	pop    rbp
  417837:	pop    r12
  417839:	pop    r13
  41783b:	pop    r14
  41783d:	pop    r15
  41783f:	ret    
  417840:	cmp    r12,r13
  417843:	je     417857 <flatcc_builder_create_cached_vtable@@Base+0x187>
  417845:	mov    eax,DWORD PTR [rbx+0xc]
  417848:	mov    DWORD PTR [r13+0x0],eax
  41784c:	mov    eax,DWORD PTR [r12]
  417850:	mov    DWORD PTR [rbx+0xc],eax
  417853:	mov    DWORD PTR [r12],ebp
  417857:	mov    eax,DWORD PTR [rbx]
  417859:	add    rsp,0x38
  41785d:	pop    rbx
  41785e:	pop    rbp
  41785f:	pop    r12
  417861:	pop    r13
  417863:	pop    r14
  417865:	pop    r15
  417867:	ret    
  417868:	nop    DWORD PTR [rax+rax*1+0x0]
  417870:	add    rsp,0x38
  417874:	xor    eax,eax
  417876:	pop    rbx
  417877:	pop    rbp
  417878:	pop    r12
  41787a:	pop    r13
  41787c:	pop    r14
  41787e:	pop    r15
  417880:	ret    
  417881:	nop    DWORD PTR [rax+0x0]
  417888:	mov    eax,DWORD PTR [rdi+0xe4]
  41788e:	lea    r12,[rdi+0xa8]
  417895:	test   eax,eax
  417897:	jne    417a2f <flatcc_builder_create_cached_vtable@@Base+0x35f>
  41789d:	cmp    QWORD PTR [rdi+0xc0],0xf
  4178a5:	jbe    417938 <flatcc_builder_create_cached_vtable@@Base+0x268>
  4178ab:	cmp    QWORD PTR [r15+0xb8],0x0
  4178b3:	je     417870 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  4178b5:	mov    DWORD PTR [r15+0xe4],0x10
  4178c0:	mov    rdi,QWORD PTR [r15+0x40]
  4178c4:	mov    r8d,0x5
  4178ca:	mov    ecx,0x1
  4178cf:	mov    edx,0x100
  4178d4:	mov    rsi,r12
  4178d7:	call   QWORD PTR [r15+0x50]
  4178db:	test   eax,eax
  4178dd:	jne    417870 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  4178df:	mov    rcx,QWORD PTR [r15+0xb0]
  4178e6:	mov    eax,0x100
  4178eb:	jmp    4178f3 <flatcc_builder_create_cached_vtable@@Base+0x223>
  4178ed:	nop    DWORD PTR [rax]
  4178f0:	mov    rax,rdx
  4178f3:	lea    rdx,[rax+rax*1]
  4178f7:	cmp    rdx,rcx
  4178fa:	jbe    4178f0 <flatcc_builder_create_cached_vtable@@Base+0x220>
  4178fc:	shr    rax,0x2
  417900:	cmp    rax,0x1
  417904:	jbe    4179f8 <flatcc_builder_create_cached_vtable@@Base+0x328>
  41790a:	mov    esi,0x1
  41790f:	nop
  417910:	add    rbx,0x1
  417914:	shlx   rdx,rsi,rbx
  417919:	cmp    rax,rdx
  41791c:	ja     417910 <flatcc_builder_create_cached_vtable@@Base+0x240>
  41791e:	mov    eax,0x20
  417923:	sub    eax,ebx
  417925:	mov    QWORD PTR [r15+0xd8],rbx
  41792c:	jmp    417707 <flatcc_builder_create_cached_vtable@@Base+0x37>
  417931:	nop    DWORD PTR [rax+0x0]
  417938:	lea    rsi,[rdi+0xb8]
  41793f:	xor    ecx,ecx
  417941:	mov    rdi,QWORD PTR [rdi+0x40]
  417945:	mov    r8d,0x6
  41794b:	mov    edx,0x10
  417950:	call   QWORD PTR [r15+0x50]
  417954:	test   eax,eax
  417956:	je     4178ab <flatcc_builder_create_cached_vtable@@Base+0x1db>
  41795c:	jmp    417a1a <flatcc_builder_create_cached_vtable@@Base+0x34a>
  417961:	nop    DWORD PTR [rax+0x0]
  417968:	xor    ecx,ecx
  41796a:	lea    rsi,[r15+0xb8]
  417971:	mov    rdi,QWORD PTR [r15+0x40]
  417975:	mov    r8d,0x6
  41797b:	call   QWORD PTR [r15+0x50]
  41797f:	test   eax,eax
  417981:	je     4177d0 <flatcc_builder_create_cached_vtable@@Base+0x100>
  417987:	jmp    417a1a <flatcc_builder_create_cached_vtable@@Base+0x34a>
  41798c:	nop    DWORD PTR [rax+0x0]
  417990:	mov    QWORD PTR [rsp+0x20],0x0
  417999:	jmp    4177b8 <flatcc_builder_create_cached_vtable@@Base+0xe8>
  41799e:	mov    rax,QWORD PTR [r15+0x118]
  4179a5:	mov    r12d,DWORD PTR [r15+0xe0]
  4179ac:	test   rax,rax
  4179af:	je     4179bb <flatcc_builder_create_cached_vtable@@Base+0x2eb>
  4179b1:	lea    edx,[rbp+r12*1+0x0]
  4179b6:	cmp    rax,rdx
  4179b9:	jb     417a20 <flatcc_builder_create_cached_vtable@@Base+0x350>
  4179bb:	lea    rdx,[r14+r12*1]
  4179bf:	cmp    rdx,QWORD PTR [r15+0x80]
  4179c6:	ja     417a02 <flatcc_builder_create_cached_vtable@@Base+0x332>
  4179c8:	mov    rdi,r12
  4179cb:	add    rdi,QWORD PTR [r15+0x78]
  4179cf:	je     417a4e <flatcc_builder_create_cached_vtable@@Base+0x37e>
  4179d1:	mov    eax,DWORD PTR [r15+0xe0]
  4179d8:	mov    rsi,QWORD PTR [rsp+0x10]
  4179dd:	mov    rdx,r14
  4179e0:	add    ebp,eax
  4179e2:	mov    DWORD PTR [rbx+0x8],eax
  4179e5:	mov    DWORD PTR [r15+0xe0],ebp
  4179ec:	call   4050e0 <memcpy@plt>
  4179f1:	mov    eax,DWORD PTR [rbx]
  4179f3:	jmp    417831 <flatcc_builder_create_cached_vtable@@Base+0x161>
  4179f8:	mov    eax,0x20
  4179fd:	jmp    417925 <flatcc_builder_create_cached_vtable@@Base+0x255>
  417a02:	xor    ecx,ecx
  417a04:	lea    rsi,[r15+0x78]
  417a08:	mov    rdi,QWORD PTR [r15+0x40]
  417a0c:	mov    r8d,0x2
  417a12:	call   QWORD PTR [r15+0x50]
  417a16:	test   eax,eax
  417a18:	je     4179c8 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
  417a1a:	call   4052cd <__sprintf_chk@plt+0x17d>
  417a1f:	nop
  417a20:	mov    rdi,r15
  417a23:	call   415ca0 <flatcc_builder_flush_vtable_cache@@Base>
  417a28:	mov    eax,DWORD PTR [rbx]
  417a2a:	jmp    417859 <flatcc_builder_create_cached_vtable@@Base+0x189>
  417a2f:	lea    rcx,[rip+0x17dba]        # 42f7f0 <_IO_stdin_used@@Base+0x47f0>
  417a36:	lea    rsi,[rip+0x175c3]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417a3d:	lea    rdi,[rip+0x17999]        # 42f3dd <_IO_stdin_used@@Base+0x43dd>
  417a44:	mov    edx,0x156
  417a49:	call   405080 <__assert_fail@plt>
  417a4e:	mov    eax,0xffffffff
  417a53:	jmp    417831 <flatcc_builder_create_cached_vtable@@Base+0x161>
  417a58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000417a60 <flatcc_builder_create_table@@Base>:
  417a60:	push   rbp
  417a61:	push   rbx
  417a62:	sub    rsp,0xb8
  417a69:	mov    rax,QWORD PTR fs:0x28
  417a72:	mov    QWORD PTR [rsp+0xa8],rax
  417a7a:	xor    eax,eax
  417a7c:	test   r9d,r9d
  417a7f:	mov    r11d,DWORD PTR [rsp+0xd0]
  417a87:	js     417c2d <flatcc_builder_create_table@@Base+0x1cd>
  417a8d:	test   r11b,0x1
  417a91:	je     417c0e <flatcc_builder_create_table@@Base+0x1ae>
  417a97:	cmp    cx,0x4
  417a9b:	mov    eax,0x4
  417aa0:	mov    rbx,rdi
  417aa3:	cmovb  ecx,eax
  417aa6:	cmp    WORD PTR [rdi+0xe8],cx
  417aad:	movzx  eax,cx
  417ab0:	jae    417ab9 <flatcc_builder_create_table@@Base+0x59>
  417ab2:	mov    WORD PTR [rdi+0xe8],cx
  417ab9:	mov    ecx,DWORD PTR [rbx+0xf0]
  417abf:	sub    eax,0x1
  417ac2:	mov    edi,0xfffffffc
  417ac7:	sub    r11d,0x1
  417acb:	mov    r10d,ecx
  417ace:	sub    r10d,edx
  417ad1:	and    r10d,eax
  417ad4:	mov    eax,edi
  417ad6:	sub    eax,edx
  417ad8:	add    eax,ecx
  417ada:	sub    eax,r10d
  417add:	mov    ebp,eax
  417adf:	sub    ebp,r11d
  417ae2:	test   r9d,r9d
  417ae5:	mov    DWORD PTR [rsp+0xc],ebp
  417ae9:	je     417b1d <flatcc_builder_create_table@@Base+0xbd>
  417aeb:	lea    ecx,[r9-0x1]
  417aef:	sub    edi,eax
  417af1:	lea    r9,[r8+rcx*2+0x2]
  417af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417b00:	movzx  ecx,WORD PTR [r8]
  417b04:	mov    r11d,edi
  417b07:	add    r8,0x2
  417b0b:	sub    r11d,ecx
  417b0e:	add    DWORD PTR [rsi+rcx*1],r11d
  417b12:	cmp    r9,r8
  417b15:	jne    417b00 <flatcc_builder_create_table@@Base+0xa0>
  417b17:	mov    ecx,DWORD PTR [rbx+0xf0]
  417b1d:	lea    rax,[rsp+0xc]
  417b22:	test   rdx,rdx
  417b25:	mov    QWORD PTR [rsp+0x10],0x4
  417b2e:	mov    QWORD PTR [rsp+0x28],0x4
  417b37:	mov    DWORD PTR [rsp+0x18],0x1
  417b3f:	mov    r8d,0x4
  417b45:	mov    QWORD PTR [rsp+0x20],rax
  417b4a:	je     417b67 <flatcc_builder_create_table@@Base+0x107>
  417b4c:	lea    r8,[rdx+0x4]
  417b50:	mov    QWORD PTR [rsp+0x30],rsi
  417b55:	mov    QWORD PTR [rsp+0x38],rdx
  417b5a:	mov    DWORD PTR [rsp+0x18],0x2
  417b62:	mov    QWORD PTR [rsp+0x10],r8
  417b67:	test   r10d,r10d
  417b6a:	je     417b98 <flatcc_builder_create_table@@Base+0x138>
  417b6c:	movsxd rdx,DWORD PTR [rsp+0x18]
  417b71:	mov    rsi,0x42fae0
  417b78:	add    r8,r10
  417b7b:	mov    QWORD PTR [rsp+0x10],r8
  417b80:	mov    rax,rdx
  417b83:	shl    rdx,0x4
  417b87:	add    eax,0x1
  417b8a:	mov    QWORD PTR [rsp+rdx*1+0x20],rsi
  417b8f:	mov    QWORD PTR [rsp+rdx*1+0x28],r10
  417b94:	mov    DWORD PTR [rsp+0x18],eax
  417b98:	mov    ebp,ecx
  417b9a:	movabs rax,0x10000000f
  417ba4:	sub    ebp,r8d
  417ba7:	cmp    r8,rax
  417baa:	ja     417bef <flatcc_builder_create_table@@Base+0x18f>
  417bac:	cmp    ebp,ecx
  417bae:	jge    417bef <flatcc_builder_create_table@@Base+0x18f>
  417bb0:	lea    rsi,[rsp+0x20]
  417bb5:	mov    rdi,QWORD PTR [rbx+0x38]
  417bb9:	mov    ecx,ebp
  417bbb:	mov    edx,DWORD PTR [rsp+0x18]
  417bbf:	call   QWORD PTR [rbx+0x48]
  417bc2:	test   eax,eax
  417bc4:	jne    417c51 <flatcc_builder_create_table@@Base+0x1f1>
  417bca:	mov    DWORD PTR [rbx+0xf0],ebp
  417bd0:	mov    eax,ebp
  417bd2:	mov    rbx,QWORD PTR [rsp+0xa8]
  417bda:	xor    rbx,QWORD PTR fs:0x28
  417be3:	jne    417c4c <flatcc_builder_create_table@@Base+0x1ec>
  417be5:	add    rsp,0xb8
  417bec:	pop    rbx
  417bed:	pop    rbp
  417bee:	ret    
  417bef:	lea    rcx,[rip+0x17e3a]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  417bf6:	lea    rsi,[rip+0x17403]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417bfd:	lea    rdi,[rip+0x17793]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  417c04:	mov    edx,0x287
  417c09:	call   405080 <__assert_fail@plt>
  417c0e:	lea    rcx,[rip+0x17bbb]        # 42f7d0 <_IO_stdin_used@@Base+0x47d0>
  417c15:	lea    rsi,[rip+0x173e4]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417c1c:	lea    rdi,[rip+0x177db]        # 42f3fe <_IO_stdin_used@@Base+0x43fe>
  417c23:	mov    edx,0x4db
  417c28:	call   405080 <__assert_fail@plt>
  417c2d:	lea    rcx,[rip+0x17b9c]        # 42f7d0 <_IO_stdin_used@@Base+0x47d0>
  417c34:	lea    rsi,[rip+0x173c5]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417c3b:	lea    rdi,[rip+0x177aa]        # 42f3ec <_IO_stdin_used@@Base+0x43ec>
  417c42:	mov    edx,0x4d5
  417c47:	call   405080 <__assert_fail@plt>
  417c4c:	call   405070 <__stack_chk_fail@plt>
  417c51:	call   405313 <__sprintf_chk@plt+0x1c3>
  417c56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000417c60 <flatcc_builder_check_required_field@@Base>:
  417c60:	mov    rax,QWORD PTR [rdi+0x30]
  417c64:	cmp    WORD PTR [rax+0xe],0x3
  417c69:	jne    417c86 <flatcc_builder_check_required_field@@Base+0x26>
  417c6b:	xor    eax,eax
  417c6d:	cmp    WORD PTR [rdi+0x10],si
  417c71:	jbe    417c82 <flatcc_builder_check_required_field@@Base+0x22>
  417c73:	mov    rax,QWORD PTR [rdi+0x8]
  417c77:	movzx  edx,si
  417c7a:	cmp    WORD PTR [rax+rdx*2],0x0
  417c7f:	setne  al
  417c82:	movzx  eax,al
  417c85:	ret    
  417c86:	lea    rcx,[rip+0x17b13]        # 42f7a0 <_IO_stdin_used@@Base+0x47a0>
  417c8d:	lea    rsi,[rip+0x1736c]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417c94:	lea    rdi,[rip+0x175ad]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  417c9b:	sub    rsp,0x8
  417c9f:	mov    edx,0x4f8
  417ca4:	call   405080 <__assert_fail@plt>
  417ca9:	nop    DWORD PTR [rax+0x0]

0000000000417cb0 <flatcc_builder_check_union_field@@Base>:
  417cb0:	mov    rax,QWORD PTR [rdi+0x30]
  417cb4:	cmp    WORD PTR [rax+0xe],0x3
  417cb9:	jne    417cfb <flatcc_builder_check_union_field@@Base+0x4b>
  417cbb:	xor    eax,eax
  417cbd:	test   si,si
  417cc0:	je     417ced <flatcc_builder_check_union_field@@Base+0x3d>
  417cc2:	cmp    si,WORD PTR [rdi+0x10]
  417cc6:	jae    417ced <flatcc_builder_check_union_field@@Base+0x3d>
  417cc8:	mov    rcx,QWORD PTR [rdi+0x8]
  417ccc:	movzx  edx,si
  417ccf:	movzx  eax,WORD PTR [rcx+rdx*2-0x2]
  417cd4:	test   ax,ax
  417cd7:	je     417ce3 <flatcc_builder_check_union_field@@Base+0x33>
  417cd9:	mov    rsi,QWORD PTR [rdi+0x18]
  417cdd:	cmp    BYTE PTR [rsi+rax*1],0x0
  417ce1:	jne    417cf0 <flatcc_builder_check_union_field@@Base+0x40>
  417ce3:	xor    eax,eax
  417ce5:	cmp    WORD PTR [rcx+rdx*2],0x0
  417cea:	sete   al
  417ced:	repz ret 
  417cef:	nop
  417cf0:	xor    eax,eax
  417cf2:	cmp    WORD PTR [rcx+rdx*2],0x0
  417cf7:	setne  al
  417cfa:	ret    
  417cfb:	lea    rcx,[rip+0x17a5e]        # 42f760 <_IO_stdin_used@@Base+0x4760>
  417d02:	lea    rsi,[rip+0x172f7]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417d09:	lea    rdi,[rip+0x17538]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  417d10:	sub    rsp,0x8
  417d14:	mov    edx,0x4ff
  417d19:	call   405080 <__assert_fail@plt>
  417d1e:	xchg   ax,ax

0000000000417d20 <flatcc_builder_check_required@@Base>:
  417d20:	mov    rax,QWORD PTR [rdi+0x30]
  417d24:	cmp    WORD PTR [rax+0xe],0x3
  417d29:	jne    417d7b <flatcc_builder_check_required@@Base+0x5b>
  417d2b:	movzx  ecx,WORD PTR [rdi+0x10]
  417d2f:	xor    eax,eax
  417d31:	cmp    ecx,edx
  417d33:	jl     417d70 <flatcc_builder_check_required@@Base+0x50>
  417d35:	test   edx,edx
  417d37:	jle    417d6b <flatcc_builder_check_required@@Base+0x4b>
  417d39:	mov    rcx,QWORD PTR [rdi+0x8]
  417d3d:	movzx  edi,WORD PTR [rsi]
  417d40:	cmp    WORD PTR [rcx+rdi*2],0x0
  417d45:	je     417d70 <flatcc_builder_check_required@@Base+0x50>
  417d47:	sub    edx,0x1
  417d4a:	lea    rax,[rsi+0x2]
  417d4e:	lea    rsi,[rsi+rdx*2+0x2]
  417d53:	jmp    417d66 <flatcc_builder_check_required@@Base+0x46>
  417d55:	nop    DWORD PTR [rax]
  417d58:	movzx  edx,WORD PTR [rax]
  417d5b:	add    rax,0x2
  417d5f:	cmp    WORD PTR [rcx+rdx*2],0x0
  417d64:	je     417d78 <flatcc_builder_check_required@@Base+0x58>
  417d66:	cmp    rax,rsi
  417d69:	jne    417d58 <flatcc_builder_check_required@@Base+0x38>
  417d6b:	mov    eax,0x1
  417d70:	repz ret 
  417d72:	nop    WORD PTR [rax+rax*1+0x0]
  417d78:	xor    eax,eax
  417d7a:	ret    
  417d7b:	lea    rcx,[rip+0x179ae]        # 42f730 <_IO_stdin_used@@Base+0x4730>
  417d82:	lea    rsi,[rip+0x17277]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417d89:	lea    rdi,[rip+0x174b8]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  417d90:	sub    rsp,0x8
  417d94:	mov    edx,0x511
  417d99:	call   405080 <__assert_fail@plt>
  417d9e:	xchg   ax,ax

0000000000417da0 <flatcc_builder_end_table@@Base>:
  417da0:	push   r13
  417da2:	push   r12
  417da4:	push   rbp
  417da5:	push   rbx
  417da6:	sub    rsp,0x8
  417daa:	mov    rax,QWORD PTR [rdi+0x30]
  417dae:	cmp    WORD PTR [rax+0xe],0x3
  417db3:	jne    417f0e <flatcc_builder_end_table@@Base+0x16e>
  417db9:	movzx  ebp,WORD PTR [rdi+0x10]
  417dbd:	movzx  eax,WORD PTR [rdi+0x20]
  417dc1:	mov    rbx,rdi
  417dc4:	mov    rcx,QWORD PTR [rdi+0x8]
  417dc8:	add    ebp,0x2
  417dcb:	add    eax,0x4
  417dce:	lea    r12,[rcx-0x4]
  417dd2:	add    ebp,ebp
  417dd4:	mov    WORD PTR [rcx-0x2],ax
  417dd8:	movzx  eax,ax
  417ddb:	mov    WORD PTR [rcx-0x4],bp
  417ddf:	mov    ecx,DWORD PTR [rdi+0x14]
  417de2:	movzx  edx,bp
  417de5:	mov    rsi,r12
  417de8:	xor    ecx,edx
  417dea:	imul   ecx,ecx,0x9e3779b1
  417df0:	xor    ecx,eax
  417df2:	imul   ecx,ecx,0x9e3779b1
  417df8:	mov    DWORD PTR [rdi+0x14],ecx
  417dfb:	call   4176d0 <flatcc_builder_create_cached_vtable@@Base>
  417e00:	test   eax,eax
  417e02:	mov    r13d,eax
  417e05:	jne    417e20 <flatcc_builder_end_table@@Base+0x80>
  417e07:	add    rsp,0x8
  417e0b:	xor    ebp,ebp
  417e0d:	pop    rbx
  417e0e:	mov    eax,ebp
  417e10:	pop    rbp
  417e11:	pop    r12
  417e13:	pop    r13
  417e15:	ret    
  417e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417e20:	movzx  edx,bp
  417e23:	xor    esi,esi
  417e25:	mov    rdi,r12
  417e28:	call   405090 <memset@plt>
  417e2d:	mov    rax,QWORD PTR [rbx+0x30]
  417e31:	mov    r9,QWORD PTR [rbx]
  417e34:	sub    rsp,0x8
  417e38:	mov    edx,DWORD PTR [rbx+0x20]
  417e3b:	movzx  ecx,WORD PTR [rbx+0xea]
  417e42:	mov    rdi,rbx
  417e45:	mov    rsi,QWORD PTR [rbx+0x18]
  417e49:	mov    r8d,DWORD PTR [rax+0x14]
  417e4d:	add    r8,QWORD PTR [rbx+0x88]
  417e54:	push   r13
  417e56:	sub    r9,r8
  417e59:	shr    r9,1
  417e5c:	call   417a60 <flatcc_builder_create_table@@Base>
  417e61:	mov    ebp,eax
  417e63:	test   ebp,ebp
  417e65:	pop    rax
  417e66:	pop    rdx
  417e67:	je     417e07 <flatcc_builder_end_table@@Base+0x67>
  417e69:	mov    rax,QWORD PTR [rbx+0x30]
  417e6d:	mov    rdi,QWORD PTR [rbx+0x18]
  417e71:	xor    esi,esi
  417e73:	mov    edx,DWORD PTR [rax+0x18]
  417e76:	mov    DWORD PTR [rbx+0x14],edx
  417e79:	movzx  edx,WORD PTR [rax+0x1c]
  417e7d:	mov    WORD PTR [rbx+0x10],dx
  417e81:	mov    edx,DWORD PTR [rax+0x10]
  417e84:	add    rdx,QWORD PTR [rbx+0x58]
  417e88:	mov    QWORD PTR [rbx+0x8],rdx
  417e8c:	mov    eax,DWORD PTR [rax+0x14]
  417e8f:	add    rax,QWORD PTR [rbx+0x88]
  417e96:	mov    edx,DWORD PTR [rbx+0x20]
  417e99:	mov    QWORD PTR [rbx],rax
  417e9c:	call   405090 <memset@plt>
  417ea1:	mov    rax,QWORD PTR [rbx+0x30]
  417ea5:	mov    edi,DWORD PTR [rbx+0x70]
  417ea8:	mov    esi,DWORD PTR [rax]
  417eaa:	mov    edx,DWORD PTR [rax+0x8]
  417ead:	mov    ecx,DWORD PTR [rax+0x4]
  417eb0:	mov    DWORD PTR [rbx+0x20],edx
  417eb3:	mov    rdx,rsi
  417eb6:	mov    DWORD PTR [rbx+0x28],esi
  417eb9:	add    rsi,QWORD PTR [rbx+0x68]
  417ebd:	sub    edi,edx
  417ebf:	cmp    ecx,edi
  417ec1:	mov    edx,edi
  417ec3:	cmovb  edx,ecx
  417ec6:	mov    DWORD PTR [rbx+0x24],edx
  417ec9:	movzx  edx,WORD PTR [rbx+0xea]
  417ed0:	cmp    dx,WORD PTR [rbx+0xe8]
  417ed7:	mov    QWORD PTR [rbx+0x18],rsi
  417edb:	mov    DWORD PTR [rax+0x4],ecx
  417ede:	jbe    417ee7 <flatcc_builder_end_table@@Base+0x147>
  417ee0:	mov    WORD PTR [rbx+0xe8],dx
  417ee7:	movzx  edx,WORD PTR [rax+0xc]
  417eeb:	sub    rax,0x24
  417eef:	sub    DWORD PTR [rbx+0x104],0x1
  417ef6:	mov    QWORD PTR [rbx+0x30],rax
  417efa:	mov    eax,ebp
  417efc:	mov    WORD PTR [rbx+0xea],dx
  417f03:	add    rsp,0x8
  417f07:	pop    rbx
  417f08:	pop    rbp
  417f09:	pop    r12
  417f0b:	pop    r13
  417f0d:	ret    
  417f0e:	lea    rcx,[rip+0x177fb]        # 42f710 <_IO_stdin_used@@Base+0x4710>
  417f15:	lea    rsi,[rip+0x170e4]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  417f1c:	lea    rdi,[rip+0x17325]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  417f23:	mov    edx,0x525
  417f28:	call   405080 <__assert_fail@plt>
  417f2d:	nop    DWORD PTR [rax]

0000000000417f30 <flatcc_builder_create_vector@@Base>:
  417f30:	push   rbp
  417f31:	push   rbx
  417f32:	sub    rsp,0xb8
  417f39:	mov    rax,QWORD PTR fs:0x28
  417f42:	mov    QWORD PTR [rsp+0xa8],rax
  417f4a:	xor    eax,eax
  417f4c:	cmp    rdx,r9
  417f4f:	ja     418094 <flatcc_builder_create_vector@@Base+0x164>
  417f55:	mov    rbx,rdi
  417f58:	cmp    r8w,0x4
  417f5d:	mov    eax,0x4
  417f62:	cmovb  r8d,eax
  417f66:	cmp    r8w,WORD PTR [rbx+0xe8]
  417f6e:	movzx  edi,r8w
  417f72:	jbe    417f7c <flatcc_builder_create_vector@@Base+0x4c>
  417f74:	mov    WORD PTR [rbx+0xe8],r8w
  417f7c:	imul   ecx,edx
  417f7f:	mov    DWORD PTR [rsp+0xc],edx
  417f83:	mov    edx,DWORD PTR [rbx+0xf0]
  417f89:	sub    edi,0x1
  417f8c:	mov    QWORD PTR [rsp+0x10],0x4
  417f95:	mov    QWORD PTR [rsp+0x28],0x4
  417f9e:	mov    DWORD PTR [rsp+0x18],0x1
  417fa6:	mov    r8d,0x4
  417fac:	mov    eax,edx
  417fae:	sub    eax,ecx
  417fb0:	and    eax,edi
  417fb2:	lea    rdi,[rsp+0xc]
  417fb7:	test   ecx,ecx
  417fb9:	mov    QWORD PTR [rsp+0x20],rdi
  417fbe:	jne    418050 <flatcc_builder_create_vector@@Base+0x120>
  417fc4:	test   eax,eax
  417fc6:	je     417ff4 <flatcc_builder_create_vector@@Base+0xc4>
  417fc8:	movsxd rsi,DWORD PTR [rsp+0x18]
  417fcd:	mov    rdi,0x42fae0
  417fd4:	add    r8,rax
  417fd7:	mov    QWORD PTR [rsp+0x10],r8
  417fdc:	mov    rcx,rsi
  417fdf:	shl    rsi,0x4
  417fe3:	add    ecx,0x1
  417fe6:	mov    QWORD PTR [rsp+rsi*1+0x20],rdi
  417feb:	mov    QWORD PTR [rsp+rsi*1+0x28],rax
  417ff0:	mov    DWORD PTR [rsp+0x18],ecx
  417ff4:	mov    ebp,edx
  417ff6:	movabs rax,0x10000000f
  418000:	sub    ebp,r8d
  418003:	cmp    r8,rax
  418006:	ja     418070 <flatcc_builder_create_vector@@Base+0x140>
  418008:	cmp    edx,ebp
  41800a:	jle    418070 <flatcc_builder_create_vector@@Base+0x140>
  41800c:	lea    rsi,[rsp+0x20]
  418011:	mov    rdi,QWORD PTR [rbx+0x38]
  418015:	mov    ecx,ebp
  418017:	mov    edx,DWORD PTR [rsp+0x18]
  41801b:	call   QWORD PTR [rbx+0x48]
  41801e:	test   eax,eax
  418020:	jne    41808f <flatcc_builder_create_vector@@Base+0x15f>
  418022:	mov    DWORD PTR [rbx+0xf0],ebp
  418028:	mov    eax,ebp
  41802a:	mov    rbx,QWORD PTR [rsp+0xa8]
  418032:	xor    rbx,QWORD PTR fs:0x28
  41803b:	jne    4180b3 <flatcc_builder_create_vector@@Base+0x183>
  41803d:	add    rsp,0xb8
  418044:	pop    rbx
  418045:	pop    rbp
  418046:	ret    
  418047:	nop    WORD PTR [rax+rax*1+0x0]
  418050:	lea    r8,[rcx+0x4]
  418054:	mov    QWORD PTR [rsp+0x30],rsi
  418059:	mov    QWORD PTR [rsp+0x38],rcx
  41805e:	mov    DWORD PTR [rsp+0x18],0x2
  418066:	mov    QWORD PTR [rsp+0x10],r8
  41806b:	jmp    417fc4 <flatcc_builder_create_vector@@Base+0x94>
  418070:	lea    rcx,[rip+0x179b9]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  418077:	lea    rsi,[rip+0x16f82]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41807e:	lea    rdi,[rip+0x17312]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  418085:	mov    edx,0x287
  41808a:	call   405080 <__assert_fail@plt>
  41808f:	call   405313 <__sprintf_chk@plt+0x1c3>
  418094:	lea    rcx,[rip+0x17655]        # 42f6f0 <_IO_stdin_used@@Base+0x46f0>
  41809b:	lea    rsi,[rip+0x16f5e]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4180a2:	lea    rdi,[rip+0x17360]        # 42f409 <_IO_stdin_used@@Base+0x4409>
  4180a9:	mov    edx,0x555
  4180ae:	call   405080 <__assert_fail@plt>
  4180b3:	call   405070 <__stack_chk_fail@plt>
  4180b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004180c0 <flatcc_builder_end_vector@@Base>:
  4180c0:	push   rbp
  4180c1:	push   rbx
  4180c2:	sub    rsp,0x8
  4180c6:	mov    rax,QWORD PTR [rdi+0x30]
  4180ca:	cmp    WORD PTR [rax+0xe],0x4
  4180cf:	jne    41817f <flatcc_builder_end_vector@@Base+0xbf>
  4180d5:	mov    ecx,DWORD PTR [rax+0x10]
  4180d8:	mov    edx,DWORD PTR [rax+0x14]
  4180db:	mov    rbx,rdi
  4180de:	mov    r9d,DWORD PTR [rax+0x18]
  4180e2:	movzx  r8d,WORD PTR [rdi+0xea]
  4180ea:	mov    rsi,QWORD PTR [rdi+0x18]
  4180ee:	call   417f30 <flatcc_builder_create_vector@@Base>
  4180f3:	test   eax,eax
  4180f5:	mov    ebp,eax
  4180f7:	jne    418108 <flatcc_builder_end_vector@@Base+0x48>
  4180f9:	add    rsp,0x8
  4180fd:	mov    eax,ebp
  4180ff:	pop    rbx
  418100:	pop    rbp
  418101:	ret    
  418102:	nop    WORD PTR [rax+rax*1+0x0]
  418108:	mov    edx,DWORD PTR [rbx+0x20]
  41810b:	mov    rdi,QWORD PTR [rbx+0x18]
  41810f:	xor    esi,esi
  418111:	call   405090 <memset@plt>
  418116:	mov    rax,QWORD PTR [rbx+0x30]
  41811a:	mov    edi,DWORD PTR [rbx+0x70]
  41811d:	mov    esi,DWORD PTR [rax]
  41811f:	mov    edx,DWORD PTR [rax+0x8]
  418122:	mov    ecx,DWORD PTR [rax+0x4]
  418125:	mov    DWORD PTR [rbx+0x20],edx
  418128:	mov    rdx,rsi
  41812b:	mov    DWORD PTR [rbx+0x28],esi
  41812e:	add    rsi,QWORD PTR [rbx+0x68]
  418132:	sub    edi,edx
  418134:	cmp    ecx,edi
  418136:	mov    edx,edi
  418138:	cmovb  edx,ecx
  41813b:	mov    DWORD PTR [rbx+0x24],edx
  41813e:	movzx  edx,WORD PTR [rbx+0xea]
  418145:	cmp    dx,WORD PTR [rbx+0xe8]
  41814c:	mov    QWORD PTR [rbx+0x18],rsi
  418150:	mov    DWORD PTR [rax+0x4],ecx
  418153:	jbe    41815c <flatcc_builder_end_vector@@Base+0x9c>
  418155:	mov    WORD PTR [rbx+0xe8],dx
  41815c:	movzx  edx,WORD PTR [rax+0xc]
  418160:	sub    rax,0x24
  418164:	sub    DWORD PTR [rbx+0x104],0x1
  41816b:	mov    QWORD PTR [rbx+0x30],rax
  41816f:	mov    eax,ebp
  418171:	mov    WORD PTR [rbx+0xea],dx
  418178:	add    rsp,0x8
  41817c:	pop    rbx
  41817d:	pop    rbp
  41817e:	ret    
  41817f:	lea    rcx,[rip+0x1754a]        # 42f6d0 <_IO_stdin_used@@Base+0x46d0>
  418186:	lea    rsi,[rip+0x16e73]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41818d:	lea    rdi,[rip+0x16f4c]        # 42f0e0 <_IO_stdin_used@@Base+0x40e0>
  418194:	mov    edx,0x578
  418199:	call   405080 <__assert_fail@plt>
  41819e:	xchg   ax,ax

00000000004181a0 <flatcc_builder_vector_count@@Base>:
  4181a0:	mov    rax,QWORD PTR [rdi+0x30]
  4181a4:	mov    eax,DWORD PTR [rax+0x14]
  4181a7:	ret    
  4181a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004181b0 <flatcc_builder_vector_edit@@Base>:
  4181b0:	mov    rax,QWORD PTR [rdi+0x18]
  4181b4:	ret    
  4181b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004181c0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4181c0:	xor    ecx,ecx
  4181c2:	jmp    415a70 <flatcc_builder_default_alloc@@Base+0x390>
  4181c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004181d0 <flatcc_builder_end_offset_vector@@Base>:
  4181d0:	push   rbp
  4181d1:	push   rbx
  4181d2:	sub    rsp,0x8
  4181d6:	mov    rax,QWORD PTR [rdi+0x30]
  4181da:	cmp    WORD PTR [rax+0xe],0x5
  4181df:	jne    41827f <flatcc_builder_end_offset_vector@@Base+0xaf>
  4181e5:	mov    edx,DWORD PTR [rax+0x14]
  4181e8:	mov    rsi,QWORD PTR [rdi+0x18]
  4181ec:	mov    rbx,rdi
  4181ef:	call   4181c0 <flatcc_builder_create_offset_vector_direct@@Base>
  4181f4:	test   eax,eax
  4181f6:	mov    ebp,eax
  4181f8:	jne    418208 <flatcc_builder_end_offset_vector@@Base+0x38>
  4181fa:	add    rsp,0x8
  4181fe:	mov    eax,ebp
  418200:	pop    rbx
  418201:	pop    rbp
  418202:	ret    
  418203:	nop    DWORD PTR [rax+rax*1+0x0]
  418208:	mov    edx,DWORD PTR [rbx+0x20]
  41820b:	mov    rdi,QWORD PTR [rbx+0x18]
  41820f:	xor    esi,esi
  418211:	call   405090 <memset@plt>
  418216:	mov    rax,QWORD PTR [rbx+0x30]
  41821a:	mov    edi,DWORD PTR [rbx+0x70]
  41821d:	mov    esi,DWORD PTR [rax]
  41821f:	mov    edx,DWORD PTR [rax+0x8]
  418222:	mov    ecx,DWORD PTR [rax+0x4]
  418225:	mov    DWORD PTR [rbx+0x20],edx
  418228:	mov    rdx,rsi
  41822b:	mov    DWORD PTR [rbx+0x28],esi
  41822e:	add    rsi,QWORD PTR [rbx+0x68]
  418232:	sub    edi,edx
  418234:	cmp    ecx,edi
  418236:	mov    edx,edi
  418238:	cmovb  edx,ecx
  41823b:	mov    DWORD PTR [rbx+0x24],edx
  41823e:	movzx  edx,WORD PTR [rbx+0xea]
  418245:	cmp    dx,WORD PTR [rbx+0xe8]
  41824c:	mov    QWORD PTR [rbx+0x18],rsi
  418250:	mov    DWORD PTR [rax+0x4],ecx
  418253:	jbe    41825c <flatcc_builder_end_offset_vector@@Base+0x8c>
  418255:	mov    WORD PTR [rbx+0xe8],dx
  41825c:	movzx  edx,WORD PTR [rax+0xc]
  418260:	sub    rax,0x24
  418264:	sub    DWORD PTR [rbx+0x104],0x1
  41826b:	mov    QWORD PTR [rbx+0x30],rax
  41826f:	mov    eax,ebp
  418271:	mov    WORD PTR [rbx+0xea],dx
  418278:	add    rsp,0x8
  41827c:	pop    rbx
  41827d:	pop    rbp
  41827e:	ret    
  41827f:	lea    rcx,[rip+0x173fa]        # 42f680 <_IO_stdin_used@@Base+0x4680>
  418286:	lea    rsi,[rip+0x16d73]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41828d:	lea    rdi,[rip+0x16ebc]        # 42f150 <_IO_stdin_used@@Base+0x4150>
  418294:	mov    edx,0x5c8
  418299:	call   405080 <__assert_fail@plt>
  41829e:	xchg   ax,ax

00000000004182a0 <flatcc_builder_create_offset_vector@@Base>:
  4182a0:	push   r12
  4182a2:	push   rbp
  4182a3:	mov    r12,rsi
  4182a6:	push   rbx
  4182a7:	mov    rbp,rdx
  4182aa:	mov    rbx,rdi
  4182ad:	call   417240 <flatcc_builder_start_offset_vector@@Base>
  4182b2:	test   eax,eax
  4182b4:	je     4182c0 <flatcc_builder_create_offset_vector@@Base+0x20>
  4182b6:	pop    rbx
  4182b7:	xor    eax,eax
  4182b9:	pop    rbp
  4182ba:	pop    r12
  4182bc:	ret    
  4182bd:	nop    DWORD PTR [rax]
  4182c0:	mov    rsi,rbp
  4182c3:	mov    rdi,rbx
  4182c6:	call   416d00 <flatcc_builder_extend_offset_vector@@Base>
  4182cb:	test   rax,rax
  4182ce:	je     4182b6 <flatcc_builder_create_offset_vector@@Base+0x16>
  4182d0:	lea    rdx,[rbp*4+0x0]
  4182d8:	mov    rsi,r12
  4182db:	mov    rdi,rax
  4182de:	call   4050e0 <memcpy@plt>
  4182e3:	mov    rdi,rbx
  4182e6:	pop    rbx
  4182e7:	pop    rbp
  4182e8:	pop    r12
  4182ea:	jmp    4181d0 <flatcc_builder_end_offset_vector@@Base>
  4182ef:	nop

00000000004182f0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4182f0:	push   rbp
  4182f1:	push   rbx
  4182f2:	sub    rsp,0x8
  4182f6:	mov    rax,QWORD PTR [rdi+0x30]
  4182fa:	cmp    WORD PTR [rax+0xe],0x5
  4182ff:	jne    4183a7 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb7>
  418305:	mov    edx,DWORD PTR [rax+0x14]
  418308:	mov    rcx,rsi
  41830b:	mov    rsi,QWORD PTR [rdi+0x18]
  41830f:	mov    rbx,rdi
  418312:	call   415a70 <flatcc_builder_default_alloc@@Base+0x390>
  418317:	test   eax,eax
  418319:	mov    ebp,eax
  41831b:	jne    418330 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
  41831d:	add    rsp,0x8
  418321:	mov    eax,ebp
  418323:	pop    rbx
  418324:	pop    rbp
  418325:	ret    
  418326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418330:	mov    edx,DWORD PTR [rbx+0x20]
  418333:	mov    rdi,QWORD PTR [rbx+0x18]
  418337:	xor    esi,esi
  418339:	call   405090 <memset@plt>
  41833e:	mov    rax,QWORD PTR [rbx+0x30]
  418342:	mov    edi,DWORD PTR [rbx+0x70]
  418345:	mov    esi,DWORD PTR [rax]
  418347:	mov    edx,DWORD PTR [rax+0x8]
  41834a:	mov    ecx,DWORD PTR [rax+0x4]
  41834d:	mov    DWORD PTR [rbx+0x20],edx
  418350:	mov    rdx,rsi
  418353:	mov    DWORD PTR [rbx+0x28],esi
  418356:	add    rsi,QWORD PTR [rbx+0x68]
  41835a:	sub    edi,edx
  41835c:	cmp    ecx,edi
  41835e:	mov    edx,edi
  418360:	cmovb  edx,ecx
  418363:	mov    DWORD PTR [rbx+0x24],edx
  418366:	movzx  edx,WORD PTR [rbx+0xea]
  41836d:	cmp    dx,WORD PTR [rbx+0xe8]
  418374:	mov    QWORD PTR [rbx+0x18],rsi
  418378:	mov    DWORD PTR [rax+0x4],ecx
  41837b:	jbe    418384 <flatcc_builder_end_offset_vector_for_unions@@Base+0x94>
  41837d:	mov    WORD PTR [rbx+0xe8],dx
  418384:	movzx  edx,WORD PTR [rax+0xc]
  418388:	sub    rax,0x24
  41838c:	sub    DWORD PTR [rbx+0x104],0x1
  418393:	mov    QWORD PTR [rbx+0x30],rax
  418397:	mov    eax,ebp
  418399:	mov    WORD PTR [rbx+0xea],dx
  4183a0:	add    rsp,0x8
  4183a4:	pop    rbx
  4183a5:	pop    rbp
  4183a6:	ret    
  4183a7:	lea    rcx,[rip+0x17292]        # 42f640 <_IO_stdin_used@@Base+0x4640>
  4183ae:	lea    rsi,[rip+0x16c4b]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4183b5:	lea    rdi,[rip+0x16d94]        # 42f150 <_IO_stdin_used@@Base+0x4150>
  4183bc:	mov    edx,0x5d5
  4183c1:	call   405080 <__assert_fail@plt>
  4183c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004183d0 <flatcc_builder_offset_vector_edit@@Base>:
  4183d0:	mov    rax,QWORD PTR [rdi+0x18]
  4183d4:	ret    
  4183d5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004183e0 <flatcc_builder_offset_vector_count@@Base>:
  4183e0:	mov    rax,QWORD PTR [rdi+0x30]
  4183e4:	mov    eax,DWORD PTR [rax+0x14]
  4183e7:	ret    
  4183e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004183f0 <flatcc_builder_create_union_vector_direct@@Base>:
  4183f0:	push   r13
  4183f2:	push   r12
  4183f4:	mov    r13,rcx
  4183f7:	push   rbp
  4183f8:	push   rbx
  4183f9:	mov    r12,rsi
  4183fc:	mov    rcx,r12
  4183ff:	mov    rsi,rdx
  418402:	mov    rdx,r13
  418405:	sub    rsp,0x8
  418409:	mov    rbp,rdi
  41840c:	call   415a70 <flatcc_builder_default_alloc@@Base+0x390>
  418411:	test   eax,eax
  418413:	jne    418428 <flatcc_builder_create_union_vector_direct@@Base+0x38>
  418415:	add    rsp,0x8
  418419:	xor    eax,eax
  41841b:	pop    rbx
  41841c:	pop    rbp
  41841d:	pop    r12
  41841f:	pop    r13
  418421:	ret    
  418422:	nop    WORD PTR [rax+rax*1+0x0]
  418428:	mov    ebx,eax
  41842a:	mov    rdx,r13
  41842d:	mov    ecx,0x1
  418432:	mov    rsi,r12
  418435:	mov    rdi,rbp
  418438:	mov    r9d,0xffffffff
  41843e:	mov    r8d,0x1
  418444:	call   417f30 <flatcc_builder_create_vector@@Base>
  418449:	mov    rcx,rbx
  41844c:	mov    edx,eax
  41844e:	shl    rcx,0x20
  418452:	mov    rbx,rcx
  418455:	or     rbx,rdx
  418458:	test   eax,eax
  41845a:	mov    rax,rcx
  41845d:	cmovne rax,rbx
  418461:	add    rsp,0x8
  418465:	pop    rbx
  418466:	pop    rbp
  418467:	pop    r12
  418469:	pop    r13
  41846b:	ret    
  41846c:	nop    DWORD PTR [rax+0x0]

0000000000418470 <flatcc_builder_create_union_vector@@Base>:
  418470:	push   r13
  418472:	push   r12
  418474:	mov    r12,rdx
  418477:	push   rbp
  418478:	push   rbx
  418479:	mov    rbp,rsi
  41847c:	mov    rbx,rdi
  41847f:	sub    rsp,0x8
  418483:	call   417240 <flatcc_builder_start_offset_vector@@Base>
  418488:	test   eax,eax
  41848a:	je     4184a0 <flatcc_builder_create_union_vector@@Base+0x30>
  41848c:	add    rsp,0x8
  418490:	xor    eax,eax
  418492:	pop    rbx
  418493:	pop    rbp
  418494:	pop    r12
  418496:	pop    r13
  418498:	ret    
  418499:	nop    DWORD PTR [rax+0x0]
  4184a0:	mov    rsi,r12
  4184a3:	mov    rdi,rbx
  4184a6:	call   416d00 <flatcc_builder_extend_offset_vector@@Base>
  4184ab:	test   rax,rax
  4184ae:	je     41848c <flatcc_builder_create_union_vector@@Base+0x1c>
  4184b0:	mov    r13d,DWORD PTR [rbx+0x20]
  4184b4:	mov    rax,r13
  4184b7:	add    eax,r12d
  4184ba:	cmp    eax,DWORD PTR [rbx+0x24]
  4184bd:	mov    DWORD PTR [rbx+0x20],eax
  4184c0:	jae    4185a0 <flatcc_builder_create_union_vector@@Base+0x130>
  4184c6:	add    r13,QWORD PTR [rbx+0x18]
  4184ca:	je     41848c <flatcc_builder_create_union_vector@@Base+0x1c>
  4184cc:	mov    rdi,rbx
  4184cf:	call   4183d0 <flatcc_builder_offset_vector_edit@@Base>
  4184d4:	xor    edi,edi
  4184d6:	test   r12,r12
  4184d9:	je     4184fd <flatcc_builder_create_union_vector@@Base+0x8d>
  4184db:	nop    DWORD PTR [rax+rax*1+0x0]
  4184e0:	movzx  r8d,BYTE PTR [rbp+rdi*8+0x0]
  4184e6:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  4184eb:	mov    r8d,DWORD PTR [rbp+rdi*8+0x4]
  4184f0:	mov    DWORD PTR [rax+rdi*4],r8d
  4184f4:	add    rdi,0x1
  4184f8:	cmp    r12,rdi
  4184fb:	jne    4184e0 <flatcc_builder_create_union_vector@@Base+0x70>
  4184fd:	mov    rcx,r12
  418500:	mov    rdx,rax
  418503:	mov    rsi,r13
  418506:	mov    rdi,rbx
  418509:	call   4183f0 <flatcc_builder_create_union_vector_direct@@Base>
  41850e:	mov    edx,DWORD PTR [rbx+0x20]
  418511:	mov    rdi,QWORD PTR [rbx+0x18]
  418515:	xor    esi,esi
  418517:	mov    r12,rax
  41851a:	mov    rbp,rax
  41851d:	sar    r12,0x20
  418521:	call   405090 <memset@plt>
  418526:	mov    rax,QWORD PTR [rbx+0x30]
  41852a:	mov    esi,DWORD PTR [rax]
  41852c:	mov    edx,DWORD PTR [rax+0x8]
  41852f:	mov    ecx,DWORD PTR [rax+0x4]
  418532:	mov    DWORD PTR [rbx+0x20],edx
  418535:	mov    DWORD PTR [rbx+0x28],esi
  418538:	mov    rdx,rsi
  41853b:	add    rsi,QWORD PTR [rbx+0x68]
  41853f:	mov    QWORD PTR [rbx+0x18],rsi
  418543:	mov    esi,DWORD PTR [rbx+0x70]
  418546:	sub    esi,edx
  418548:	cmp    ecx,esi
  41854a:	mov    edx,esi
  41854c:	cmovb  edx,ecx
  41854f:	mov    DWORD PTR [rbx+0x24],edx
  418552:	movzx  edx,WORD PTR [rbx+0xea]
  418559:	cmp    dx,WORD PTR [rbx+0xe8]
  418560:	mov    DWORD PTR [rax+0x4],ecx
  418563:	jbe    41856c <flatcc_builder_create_union_vector@@Base+0xfc>
  418565:	mov    WORD PTR [rbx+0xe8],dx
  41856c:	movzx  edx,WORD PTR [rax+0xc]
  418570:	sub    rax,0x24
  418574:	sub    DWORD PTR [rbx+0x104],0x1
  41857b:	mov    QWORD PTR [rbx+0x30],rax
  41857f:	shl    r12,0x20
  418583:	mov    eax,ebp
  418585:	or     rax,r12
  418588:	mov    WORD PTR [rbx+0xea],dx
  41858f:	add    rsp,0x8
  418593:	pop    rbx
  418594:	pop    rbp
  418595:	pop    r12
  418597:	pop    r13
  418599:	ret    
  41859a:	nop    WORD PTR [rax+rax*1+0x0]
  4185a0:	lea    esi,[rax+0x1]
  4185a3:	mov    edx,0xfffffffc
  4185a8:	mov    rdi,rbx
  4185ab:	call   415680 <union_vector_tests@@Base+0x110>
  4185b0:	test   eax,eax
  4185b2:	je     4184c6 <flatcc_builder_create_union_vector@@Base+0x56>
  4185b8:	jmp    41848c <flatcc_builder_create_union_vector@@Base+0x1c>
  4185bd:	nop    DWORD PTR [rax]

00000000004185c0 <flatcc_builder_start_union_vector@@Base>:
  4185c0:	push   rbx
  4185c1:	mov    esi,0x4
  4185c6:	mov    rbx,rdi
  4185c9:	call   415940 <flatcc_builder_default_alloc@@Base+0x260>
  4185ce:	test   eax,eax
  4185d0:	jne    418618 <flatcc_builder_start_union_vector@@Base+0x58>
  4185d2:	mov    rcx,QWORD PTR [rbx+0x30]
  4185d6:	mov    edx,0x7
  4185db:	mov    DWORD PTR [rcx+0x10],0x8
  4185e2:	mov    DWORD PTR [rcx+0x14],0x0
  4185e9:	mov    WORD PTR [rcx+0xe],dx
  4185ed:	mov    edx,DWORD PTR [rbx+0x28]
  4185f0:	mov    rsi,rdx
  4185f3:	add    rdx,QWORD PTR [rbx+0x68]
  4185f7:	mov    QWORD PTR [rbx+0x18],rdx
  4185fb:	mov    edx,DWORD PTR [rbx+0x70]
  4185fe:	sub    edx,esi
  418600:	mov    esi,0xfffffffc
  418605:	cmp    edx,esi
  418607:	cmova  edx,esi
  41860a:	mov    DWORD PTR [rbx+0x24],edx
  41860d:	mov    DWORD PTR [rcx+0x4],esi
  418610:	pop    rbx
  418611:	ret    
  418612:	nop    WORD PTR [rax+rax*1+0x0]
  418618:	mov    eax,0xffffffff
  41861d:	pop    rbx
  41861e:	ret    
  41861f:	nop

0000000000418620 <flatcc_builder_union_vector_edit@@Base>:
  418620:	mov    rax,QWORD PTR [rdi+0x18]
  418624:	ret    
  418625:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000418630 <flatcc_builder_union_vector_count@@Base>:
  418630:	mov    rax,QWORD PTR [rdi+0x30]
  418634:	mov    eax,DWORD PTR [rax+0x14]
  418637:	ret    
  418638:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418640 <flatcc_builder_end_union_vector@@Base>:
  418640:	push   r13
  418642:	push   r12
  418644:	push   rbp
  418645:	push   rbx
  418646:	sub    rsp,0x8
  41864a:	mov    rax,QWORD PTR [rdi+0x30]
  41864e:	cmp    WORD PTR [rax+0xe],0x7
  418653:	jne    418785 <flatcc_builder_end_union_vector@@Base+0x145>
  418659:	mov    rbx,rdi
  41865c:	call   418630 <flatcc_builder_union_vector_count@@Base>
  418661:	mov    ebp,DWORD PTR [rbx+0x20]
  418664:	mov    r12,rax
  418667:	lea    eax,[rax+rax*4]
  41866a:	add    eax,ebp
  41866c:	cmp    eax,DWORD PTR [rbx+0x24]
  41866f:	mov    DWORD PTR [rbx+0x20],eax
  418672:	jae    418760 <flatcc_builder_end_union_vector@@Base+0x120>
  418678:	add    rbp,QWORD PTR [rbx+0x18]
  41867c:	je     418778 <flatcc_builder_end_union_vector@@Base+0x138>
  418682:	mov    rdi,rbx
  418685:	lea    r13,[rbp+r12*4+0x0]
  41868a:	call   418620 <flatcc_builder_union_vector_edit@@Base>
  41868f:	xor    edi,edi
  418691:	test   r12,r12
  418694:	je     4186bd <flatcc_builder_end_union_vector@@Base+0x7d>
  418696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4186a0:	movzx  r8d,BYTE PTR [rax+rdi*8]
  4186a5:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  4186aa:	mov    r8d,DWORD PTR [rax+rdi*8+0x4]
  4186af:	mov    DWORD PTR [rbp+rdi*4+0x0],r8d
  4186b4:	add    rdi,0x1
  4186b8:	cmp    r12,rdi
  4186bb:	jne    4186a0 <flatcc_builder_end_union_vector@@Base+0x60>
  4186bd:	mov    rcx,r12
  4186c0:	mov    rdx,rbp
  4186c3:	mov    rsi,r13
  4186c6:	mov    rdi,rbx
  4186c9:	call   4183f0 <flatcc_builder_create_union_vector_direct@@Base>
  4186ce:	mov    edx,DWORD PTR [rbx+0x20]
  4186d1:	mov    rdi,QWORD PTR [rbx+0x18]
  4186d5:	xor    esi,esi
  4186d7:	mov    r12,rax
  4186da:	mov    rbp,rax
  4186dd:	sar    r12,0x20
  4186e1:	call   405090 <memset@plt>
  4186e6:	mov    rax,QWORD PTR [rbx+0x30]
  4186ea:	mov    esi,DWORD PTR [rax]
  4186ec:	mov    edx,DWORD PTR [rax+0x8]
  4186ef:	mov    ecx,DWORD PTR [rax+0x4]
  4186f2:	mov    DWORD PTR [rbx+0x20],edx
  4186f5:	mov    DWORD PTR [rbx+0x28],esi
  4186f8:	mov    rdx,rsi
  4186fb:	add    rsi,QWORD PTR [rbx+0x68]
  4186ff:	mov    QWORD PTR [rbx+0x18],rsi
  418703:	mov    esi,DWORD PTR [rbx+0x70]
  418706:	sub    esi,edx
  418708:	cmp    ecx,esi
  41870a:	mov    edx,esi
  41870c:	cmovb  edx,ecx
  41870f:	mov    DWORD PTR [rbx+0x24],edx
  418712:	movzx  edx,WORD PTR [rbx+0xea]
  418719:	cmp    dx,WORD PTR [rbx+0xe8]
  418720:	mov    DWORD PTR [rax+0x4],ecx
  418723:	jbe    41872c <flatcc_builder_end_union_vector@@Base+0xec>
  418725:	mov    WORD PTR [rbx+0xe8],dx
  41872c:	movzx  edx,WORD PTR [rax+0xc]
  418730:	sub    rax,0x24
  418734:	sub    DWORD PTR [rbx+0x104],0x1
  41873b:	mov    QWORD PTR [rbx+0x30],rax
  41873f:	shl    r12,0x20
  418743:	mov    eax,ebp
  418745:	or     rax,r12
  418748:	mov    WORD PTR [rbx+0xea],dx
  41874f:	add    rsp,0x8
  418753:	pop    rbx
  418754:	pop    rbp
  418755:	pop    r12
  418757:	pop    r13
  418759:	ret    
  41875a:	nop    WORD PTR [rax+rax*1+0x0]
  418760:	lea    esi,[rax+0x1]
  418763:	mov    edx,0xfffffffc
  418768:	mov    rdi,rbx
  41876b:	call   415680 <union_vector_tests@@Base+0x110>
  418770:	test   eax,eax
  418772:	je     418678 <flatcc_builder_end_union_vector@@Base+0x38>
  418778:	add    rsp,0x8
  41877c:	xor    eax,eax
  41877e:	pop    rbx
  41877f:	pop    rbp
  418780:	pop    r12
  418782:	pop    r13
  418784:	ret    
  418785:	lea    rcx,[rip+0x16e34]        # 42f5c0 <_IO_stdin_used@@Base+0x45c0>
  41878c:	lea    rsi,[rip+0x1686d]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418793:	lea    rdi,[rip+0x16ade]        # 42f278 <_IO_stdin_used@@Base+0x4278>
  41879a:	mov    edx,0x651
  41879f:	call   405080 <__assert_fail@plt>
  4187a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4187af:	nop

00000000004187b0 <flatcc_builder_extend_union_vector@@Base>:
  4187b0:	push   rbp
  4187b1:	push   rbx
  4187b2:	xor    edx,edx
  4187b4:	mov    ecx,esi
  4187b6:	sub    rsp,0x8
  4187ba:	mov    rax,QWORD PTR [rdi+0x30]
  4187be:	add    ecx,DWORD PTR [rax+0x14]
  4187c1:	setb   dl
  4187c4:	test   edx,edx
  4187c6:	jne    41880d <flatcc_builder_extend_union_vector@@Base+0x5d>
  4187c8:	cmp    ecx,0x1fffffff
  4187ce:	ja     41880d <flatcc_builder_extend_union_vector@@Base+0x5d>
  4187d0:	mov    DWORD PTR [rax+0x14],ecx
  4187d3:	mov    ebp,DWORD PTR [rdi+0x20]
  4187d6:	mov    rbx,rdi
  4187d9:	lea    eax,[rbp+rsi*8+0x0]
  4187dd:	cmp    eax,DWORD PTR [rdi+0x24]
  4187e0:	mov    DWORD PTR [rdi+0x20],eax
  4187e3:	jae    4187f8 <flatcc_builder_extend_union_vector@@Base+0x48>
  4187e5:	mov    rax,rbp
  4187e8:	add    rax,QWORD PTR [rbx+0x18]
  4187ec:	add    rsp,0x8
  4187f0:	pop    rbx
  4187f1:	pop    rbp
  4187f2:	ret    
  4187f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4187f8:	lea    esi,[rax+0x1]
  4187fb:	mov    edx,0xfffffffc
  418800:	call   415680 <union_vector_tests@@Base+0x110>
  418805:	test   eax,eax
  418807:	je     4187e5 <flatcc_builder_extend_union_vector@@Base+0x35>
  418809:	xor    eax,eax
  41880b:	jmp    4187ec <flatcc_builder_extend_union_vector@@Base+0x3c>
  41880d:	call   405336 <__sprintf_chk@plt+0x1e6>
  418812:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41881d:	nop    DWORD PTR [rax]

0000000000418820 <flatcc_builder_truncate_union_vector@@Base>:
  418820:	sub    rsp,0x8
  418824:	mov    rax,QWORD PTR [rdi+0x30]
  418828:	cmp    WORD PTR [rax+0xe],0x7
  41882d:	jne    41885f <flatcc_builder_truncate_union_vector@@Base+0x3f>
  41882f:	mov    edx,DWORD PTR [rax+0x14]
  418832:	cmp    edx,esi
  418834:	jb     41887e <flatcc_builder_truncate_union_vector@@Base+0x5e>
  418836:	sub    edx,esi
  418838:	imul   esi,DWORD PTR [rax+0x10]
  41883c:	mov    DWORD PTR [rax+0x14],edx
  41883f:	mov    eax,DWORD PTR [rdi+0x20]
  418842:	mov    rcx,QWORD PTR [rdi+0x18]
  418846:	sub    eax,esi
  418848:	mov    edx,esi
  41884a:	xor    esi,esi
  41884c:	mov    DWORD PTR [rdi+0x20],eax
  41884f:	lea    rdi,[rcx+rax*1]
  418853:	call   405090 <memset@plt>
  418858:	xor    eax,eax
  41885a:	add    rsp,0x8
  41885e:	ret    
  41885f:	lea    rcx,[rip+0x16d1a]        # 42f580 <_IO_stdin_used@@Base+0x4580>
  418866:	lea    rsi,[rip+0x16793]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41886d:	lea    rdi,[rip+0x16a04]        # 42f278 <_IO_stdin_used@@Base+0x4278>
  418874:	mov    edx,0x681
  418879:	call   405080 <__assert_fail@plt>
  41887e:	lea    rcx,[rip+0x16cfb]        # 42f580 <_IO_stdin_used@@Base+0x4580>
  418885:	lea    rsi,[rip+0x16774]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41888c:	lea    rdi,[rip+0x1694d]        # 42f1e0 <_IO_stdin_used@@Base+0x41e0>
  418893:	mov    edx,0x682
  418898:	call   405080 <__assert_fail@plt>
  41889d:	nop    DWORD PTR [rax]

00000000004188a0 <flatcc_builder_union_vector_push@@Base>:
  4188a0:	push   r12
  4188a2:	push   rbp
  4188a3:	push   rbx
  4188a4:	mov    rdx,QWORD PTR [rdi+0x30]
  4188a8:	cmp    WORD PTR [rdx+0xe],0x7
  4188ad:	jne    418900 <flatcc_builder_union_vector_push@@Base+0x60>
  4188af:	mov    eax,DWORD PTR [rdx+0x14]
  4188b2:	cmp    eax,0x1fffffff
  4188b7:	je     4188f9 <flatcc_builder_union_vector_push@@Base+0x59>
  4188b9:	add    eax,0x1
  4188bc:	mov    rbp,rdi
  4188bf:	mov    r12,rsi
  4188c2:	mov    DWORD PTR [rdx+0x14],eax
  4188c5:	mov    ebx,DWORD PTR [rdi+0x20]
  4188c8:	lea    edx,[rbx+0x8]
  4188cb:	cmp    edx,DWORD PTR [rdi+0x24]
  4188ce:	mov    DWORD PTR [rdi+0x20],edx
  4188d1:	jae    4188e8 <flatcc_builder_union_vector_push@@Base+0x48>
  4188d3:	mov    rax,rbx
  4188d6:	add    rax,QWORD PTR [rbp+0x18]
  4188da:	je     4188f9 <flatcc_builder_union_vector_push@@Base+0x59>
  4188dc:	mov    QWORD PTR [rax],r12
  4188df:	pop    rbx
  4188e0:	pop    rbp
  4188e1:	pop    r12
  4188e3:	ret    
  4188e4:	nop    DWORD PTR [rax+0x0]
  4188e8:	lea    esi,[rbx+0x9]
  4188eb:	mov    edx,0xfffffffc
  4188f0:	call   415680 <union_vector_tests@@Base+0x110>
  4188f5:	test   eax,eax
  4188f7:	je     4188d3 <flatcc_builder_union_vector_push@@Base+0x33>
  4188f9:	pop    rbx
  4188fa:	xor    eax,eax
  4188fc:	pop    rbp
  4188fd:	pop    r12
  4188ff:	ret    
  418900:	lea    rcx,[rip+0x16c39]        # 42f540 <_IO_stdin_used@@Base+0x4540>
  418907:	lea    rsi,[rip+0x166f2]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  41890e:	lea    rdi,[rip+0x16963]        # 42f278 <_IO_stdin_used@@Base+0x4278>
  418915:	mov    edx,0x68d
  41891a:	call   405080 <__assert_fail@plt>
  41891f:	nop

0000000000418920 <flatcc_builder_append_union_vector@@Base>:
  418920:	push   r13
  418922:	push   r12
  418924:	push   rbp
  418925:	push   rbx
  418926:	sub    rsp,0x8
  41892a:	mov    rax,QWORD PTR [rdi+0x30]
  41892e:	cmp    WORD PTR [rax+0xe],0x7
  418933:	jne    4189ab <flatcc_builder_append_union_vector@@Base+0x8b>
  418935:	mov    r13,rsi
  418938:	mov    ecx,edx
  41893a:	xor    esi,esi
  41893c:	add    ecx,DWORD PTR [rax+0x14]
  41893f:	setb   sil
  418943:	test   esi,esi
  418945:	jne    4189a6 <flatcc_builder_append_union_vector@@Base+0x86>
  418947:	cmp    ecx,0x1fffffff
  41894d:	ja     4189a6 <flatcc_builder_append_union_vector@@Base+0x86>
  41894f:	mov    DWORD PTR [rax+0x14],ecx
  418952:	mov    r12d,DWORD PTR [rdi+0x20]
  418956:	lea    ebx,[rdx*8+0x0]
  41895d:	mov    rbp,rdi
  418960:	mov    rdx,r12
  418963:	add    edx,ebx
  418965:	cmp    edx,DWORD PTR [rdi+0x24]
  418968:	mov    DWORD PTR [rdi+0x20],edx
  41896b:	jae    418990 <flatcc_builder_append_union_vector@@Base+0x70>
  41896d:	add    r12,QWORD PTR [rbp+0x18]
  418971:	je     418980 <flatcc_builder_append_union_vector@@Base+0x60>
  418973:	mov    edx,ebx
  418975:	mov    rsi,r13
  418978:	mov    rdi,r12
  41897b:	call   4050e0 <memcpy@plt>
  418980:	add    rsp,0x8
  418984:	mov    rax,r12
  418987:	pop    rbx
  418988:	pop    rbp
  418989:	pop    r12
  41898b:	pop    r13
  41898d:	ret    
  41898e:	xchg   ax,ax
  418990:	lea    esi,[rdx+0x1]
  418993:	mov    edx,0xfffffffc
  418998:	call   415680 <union_vector_tests@@Base+0x110>
  41899d:	test   eax,eax
  41899f:	je     41896d <flatcc_builder_append_union_vector@@Base+0x4d>
  4189a1:	xor    r12d,r12d
  4189a4:	jmp    418980 <flatcc_builder_append_union_vector@@Base+0x60>
  4189a6:	call   405336 <__sprintf_chk@plt+0x1e6>
  4189ab:	lea    rcx,[rip+0x16b4e]        # 42f500 <_IO_stdin_used@@Base+0x4500>
  4189b2:	lea    rsi,[rip+0x16647]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  4189b9:	lea    rdi,[rip+0x168b8]        # 42f278 <_IO_stdin_used@@Base+0x4278>
  4189c0:	mov    edx,0x69c
  4189c5:	call   405080 <__assert_fail@plt>
  4189ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004189d0 <flatcc_builder_create_string@@Base>:
  4189d0:	push   rbp
  4189d1:	push   rbx
  4189d2:	sub    rsp,0xb8
  4189d9:	mov    rax,QWORD PTR fs:0x28
  4189e2:	mov    QWORD PTR [rsp+0xa8],rax
  4189ea:	xor    eax,eax
  4189ec:	mov    eax,0xffffffff
  4189f1:	cmp    rdx,rax
  4189f4:	ja     418ac0 <flatcc_builder_create_string@@Base+0xf0>
  4189fa:	mov    rbx,rdi
  4189fd:	mov    edi,DWORD PTR [rdi+0xf0]
  418a03:	lea    rcx,[rsp+0xc]
  418a08:	mov    DWORD PTR [rsp+0xc],edx
  418a0c:	mov    QWORD PTR [rsp+0x28],0x4
  418a15:	mov    QWORD PTR [rsp+0x20],rcx
  418a1a:	lea    eax,[rdi-0x1]
  418a1d:	sub    eax,edx
  418a1f:	and    eax,0x3
  418a22:	add    eax,0x1
  418a25:	test   rdx,rdx
  418a28:	jne    418aa0 <flatcc_builder_create_string@@Base+0xd0>
  418a2a:	mov    edx,0x2
  418a2f:	mov    ecx,0x1
  418a34:	mov    r8d,0x4
  418a3a:	add    r8,rax
  418a3d:	mov    rsi,0x42fae0
  418a44:	mov    ebp,edi
  418a46:	sub    ebp,r8d
  418a49:	shl    rcx,0x4
  418a4d:	mov    QWORD PTR [rsp+0x10],r8
  418a52:	cmp    edi,ebp
  418a54:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  418a59:	mov    DWORD PTR [rsp+0x18],edx
  418a5d:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  418a62:	jle    418ac4 <flatcc_builder_create_string@@Base+0xf4>
  418a64:	lea    rsi,[rsp+0x20]
  418a69:	mov    rdi,QWORD PTR [rbx+0x38]
  418a6d:	mov    ecx,ebp
  418a6f:	call   QWORD PTR [rbx+0x48]
  418a72:	test   eax,eax
  418a74:	jne    418ae8 <flatcc_builder_create_string@@Base+0x118>
  418a76:	mov    DWORD PTR [rbx+0xf0],ebp
  418a7c:	mov    rbx,QWORD PTR [rsp+0xa8]
  418a84:	xor    rbx,QWORD PTR fs:0x28
  418a8d:	mov    eax,ebp
  418a8f:	jne    418ae3 <flatcc_builder_create_string@@Base+0x113>
  418a91:	add    rsp,0xb8
  418a98:	pop    rbx
  418a99:	pop    rbp
  418a9a:	ret    
  418a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  418aa0:	lea    r8,[rdx+0x4]
  418aa4:	mov    QWORD PTR [rsp+0x38],rdx
  418aa9:	mov    QWORD PTR [rsp+0x30],rsi
  418aae:	mov    edx,0x3
  418ab3:	mov    ecx,0x2
  418ab8:	jmp    418a3a <flatcc_builder_create_string@@Base+0x6a>
  418abd:	nop    DWORD PTR [rax]
  418ac0:	xor    ebp,ebp
  418ac2:	jmp    418a7c <flatcc_builder_create_string@@Base+0xac>
  418ac4:	lea    rcx,[rip+0x16f65]        # 42fa30 <_IO_stdin_used@@Base+0x4a30>
  418acb:	lea    rsi,[rip+0x1652e]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418ad2:	lea    rdi,[rip+0x168be]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  418ad9:	mov    edx,0x287
  418ade:	call   405080 <__assert_fail@plt>
  418ae3:	call   405070 <__stack_chk_fail@plt>
  418ae8:	call   405313 <__sprintf_chk@plt+0x1c3>
  418aed:	nop    DWORD PTR [rax]

0000000000418af0 <flatcc_builder_create_string_str@@Base>:
  418af0:	push   rbp
  418af1:	push   rbx
  418af2:	mov    rbp,rdi
  418af5:	mov    rdi,rsi
  418af8:	mov    rbx,rsi
  418afb:	sub    rsp,0x8
  418aff:	call   405060 <strlen@plt>
  418b04:	add    rsp,0x8
  418b08:	mov    rsi,rbx
  418b0b:	mov    rdi,rbp
  418b0e:	pop    rbx
  418b0f:	pop    rbp
  418b10:	mov    rdx,rax
  418b13:	jmp    4189d0 <flatcc_builder_create_string@@Base>
  418b18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418b20 <flatcc_builder_create_string_strn@@Base>:
  418b20:	push   r12
  418b22:	push   rbp
  418b23:	mov    rbp,rsi
  418b26:	push   rbx
  418b27:	mov    r12,rdi
  418b2a:	xor    esi,esi
  418b2c:	mov    rdi,rbp
  418b2f:	mov    rbx,rdx
  418b32:	call   4050a0 <memchr@plt>
  418b37:	mov    rdx,rax
  418b3a:	mov    rsi,rbp
  418b3d:	mov    rdi,r12
  418b40:	sub    rdx,rbp
  418b43:	test   rax,rax
  418b46:	cmovne rbx,rdx
  418b4a:	mov    rdx,rbx
  418b4d:	pop    rbx
  418b4e:	pop    rbp
  418b4f:	pop    r12
  418b51:	jmp    4189d0 <flatcc_builder_create_string@@Base>
  418b56:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000418b60 <flatcc_builder_end_string@@Base>:
  418b60:	push   rbp
  418b61:	push   rbx
  418b62:	sub    rsp,0x8
  418b66:	mov    rax,QWORD PTR [rdi+0x30]
  418b6a:	cmp    WORD PTR [rax+0xe],0x6
  418b6f:	jne    418c36 <flatcc_builder_end_string@@Base+0xd6>
  418b75:	mov    edx,DWORD PTR [rax+0x14]
  418b78:	mov    rbx,rdi
  418b7b:	cmp    edx,DWORD PTR [rdi+0x20]
  418b7e:	jne    418c17 <flatcc_builder_end_string@@Base+0xb7>
  418b84:	mov    rsi,QWORD PTR [rdi+0x18]
  418b88:	call   4189d0 <flatcc_builder_create_string@@Base>
  418b8d:	test   eax,eax
  418b8f:	mov    ebp,eax
  418b91:	jne    418ba0 <flatcc_builder_end_string@@Base+0x40>
  418b93:	add    rsp,0x8
  418b97:	mov    eax,ebp
  418b99:	pop    rbx
  418b9a:	pop    rbp
  418b9b:	ret    
  418b9c:	nop    DWORD PTR [rax+0x0]
  418ba0:	mov    edx,DWORD PTR [rbx+0x20]
  418ba3:	mov    rdi,QWORD PTR [rbx+0x18]
  418ba7:	xor    esi,esi
  418ba9:	call   405090 <memset@plt>
  418bae:	mov    rax,QWORD PTR [rbx+0x30]
  418bb2:	mov    edi,DWORD PTR [rbx+0x70]
  418bb5:	mov    esi,DWORD PTR [rax]
  418bb7:	mov    edx,DWORD PTR [rax+0x8]
  418bba:	mov    ecx,DWORD PTR [rax+0x4]
  418bbd:	mov    DWORD PTR [rbx+0x20],edx
  418bc0:	mov    rdx,rsi
  418bc3:	mov    DWORD PTR [rbx+0x28],esi
  418bc6:	add    rsi,QWORD PTR [rbx+0x68]
  418bca:	sub    edi,edx
  418bcc:	cmp    ecx,edi
  418bce:	mov    edx,edi
  418bd0:	cmovb  edx,ecx
  418bd3:	mov    DWORD PTR [rbx+0x24],edx
  418bd6:	movzx  edx,WORD PTR [rbx+0xea]
  418bdd:	cmp    dx,WORD PTR [rbx+0xe8]
  418be4:	mov    QWORD PTR [rbx+0x18],rsi
  418be8:	mov    DWORD PTR [rax+0x4],ecx
  418beb:	jbe    418bf4 <flatcc_builder_end_string@@Base+0x94>
  418bed:	mov    WORD PTR [rbx+0xe8],dx
  418bf4:	movzx  edx,WORD PTR [rax+0xc]
  418bf8:	sub    rax,0x24
  418bfc:	sub    DWORD PTR [rbx+0x104],0x1
  418c03:	mov    QWORD PTR [rbx+0x30],rax
  418c07:	mov    eax,ebp
  418c09:	mov    WORD PTR [rbx+0xea],dx
  418c10:	add    rsp,0x8
  418c14:	pop    rbx
  418c15:	pop    rbp
  418c16:	ret    
  418c17:	lea    rcx,[rip+0x168c2]        # 42f4e0 <_IO_stdin_used@@Base+0x44e0>
  418c1e:	lea    rsi,[rip+0x163db]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418c25:	lea    rdi,[rip+0x16684]        # 42f2b0 <_IO_stdin_used@@Base+0x42b0>
  418c2c:	mov    edx,0x6c5
  418c31:	call   405080 <__assert_fail@plt>
  418c36:	lea    rcx,[rip+0x168a3]        # 42f4e0 <_IO_stdin_used@@Base+0x44e0>
  418c3d:	lea    rsi,[rip+0x163bc]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418c44:	lea    rdi,[rip+0x1653d]        # 42f188 <_IO_stdin_used@@Base+0x4188>
  418c4b:	mov    edx,0x6c4
  418c50:	call   405080 <__assert_fail@plt>
  418c55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000418c60 <flatcc_builder_string_edit@@Base>:
  418c60:	mov    rax,QWORD PTR [rdi+0x18]
  418c64:	ret    
  418c65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000418c70 <flatcc_builder_string_len@@Base>:
  418c70:	mov    rax,QWORD PTR [rdi+0x30]
  418c74:	mov    eax,DWORD PTR [rax+0x14]
  418c77:	ret    
  418c78:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418c80 <flatcc_builder_table_add@@Base>:
  418c80:	push   r13
  418c82:	push   r12
  418c84:	push   rbp
  418c85:	push   rbx
  418c86:	sub    rsp,0x8
  418c8a:	mov    rax,QWORD PTR [rdi+0x30]
  418c8e:	cmp    WORD PTR [rax+0xe],0x3
  418c93:	jne    418da2 <flatcc_builder_table_add@@Base+0x122>
  418c99:	cmp    esi,0x7ffc
  418c9f:	mov    r12d,esi
  418ca2:	ja     418d83 <flatcc_builder_table_add@@Base+0x103>
  418ca8:	cmp    WORD PTR [rdi+0xea],cx
  418caf:	mov    rbx,rdi
  418cb2:	jb     418d20 <flatcc_builder_table_add@@Base+0xa0>
  418cb4:	movsxd r13,r12d
  418cb7:	add    r13,r13
  418cba:	mov    rsi,r13
  418cbd:	add    rsi,QWORD PTR [rbx+0x8]
  418cc1:	cmp    WORD PTR [rsi],0x0
  418cc5:	jne    418d64 <flatcc_builder_table_add@@Base+0xe4>
  418ccb:	mov    eax,DWORD PTR [rbx+0x14]
  418cce:	movzx  ecx,cx
  418cd1:	xor    eax,r12d
  418cd4:	imul   eax,eax,0x9e3779b1
  418cda:	xor    eax,edx
  418cdc:	imul   eax,eax,0x9e3779b1
  418ce2:	mov    DWORD PTR [rbx+0x14],eax
  418ce5:	mov    eax,DWORD PTR [rbx+0x20]
  418ce8:	lea    ebp,[rcx+rax*1-0x1]
  418cec:	neg    ecx
  418cee:	and    ebp,ecx
  418cf0:	add    edx,ebp
  418cf2:	cmp    edx,DWORD PTR [rbx+0x24]
  418cf5:	mov    DWORD PTR [rbx+0x20],edx
  418cf8:	jae    418d40 <flatcc_builder_table_add@@Base+0xc0>
  418cfa:	lea    eax,[rbp+0x4]
  418cfd:	mov    WORD PTR [rsi],ax
  418d00:	cmp    r12w,WORD PTR [rbx+0x10]
  418d05:	jae    418d30 <flatcc_builder_table_add@@Base+0xb0>
  418d07:	mov    eax,ebp
  418d09:	add    rax,QWORD PTR [rbx+0x18]
  418d0d:	add    rsp,0x8
  418d11:	pop    rbx
  418d12:	pop    rbp
  418d13:	pop    r12
  418d15:	pop    r13
  418d17:	ret    
  418d18:	nop    DWORD PTR [rax+rax*1+0x0]
  418d20:	mov    WORD PTR [rdi+0xea],cx
  418d27:	jmp    418cb4 <flatcc_builder_table_add@@Base+0x34>
  418d29:	nop    DWORD PTR [rax+0x0]
  418d30:	add    r12d,0x1
  418d34:	mov    WORD PTR [rbx+0x10],r12w
  418d39:	jmp    418d07 <flatcc_builder_table_add@@Base+0x87>
  418d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  418d40:	lea    esi,[rdx+0x1]
  418d43:	mov    rdi,rbx
  418d46:	mov    edx,0xfffc
  418d4b:	call   415680 <union_vector_tests@@Base+0x110>
  418d50:	test   eax,eax
  418d52:	jne    418d60 <flatcc_builder_table_add@@Base+0xe0>
  418d54:	mov    rsi,r13
  418d57:	add    rsi,QWORD PTR [rbx+0x8]
  418d5b:	jmp    418cfa <flatcc_builder_table_add@@Base+0x7a>
  418d5d:	nop    DWORD PTR [rax]
  418d60:	xor    eax,eax
  418d62:	jmp    418d0d <flatcc_builder_table_add@@Base+0x8d>
  418d64:	lea    rcx,[rip+0x16755]        # 42f4c0 <_IO_stdin_used@@Base+0x44c0>
  418d6b:	lea    rsi,[rip+0x1628e]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418d72:	lea    rdi,[rip+0x1661e]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  418d79:	mov    edx,0x6f8
  418d7e:	call   405080 <__assert_fail@plt>
  418d83:	lea    rcx,[rip+0x16736]        # 42f4c0 <_IO_stdin_used@@Base+0x44c0>
  418d8a:	lea    rsi,[rip+0x1626f]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418d91:	lea    rdi,[rip+0x16540]        # 42f2d8 <_IO_stdin_used@@Base+0x42d8>
  418d98:	mov    edx,0x6ee
  418d9d:	call   405080 <__assert_fail@plt>
  418da2:	lea    rcx,[rip+0x16717]        # 42f4c0 <_IO_stdin_used@@Base+0x44c0>
  418da9:	lea    rsi,[rip+0x16250]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418db0:	lea    rdi,[rip+0x16491]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  418db7:	mov    edx,0x6ed
  418dbc:	call   405080 <__assert_fail@plt>
  418dc1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418dcc:	nop    DWORD PTR [rax+0x0]

0000000000418dd0 <flatcc_builder_table_edit@@Base>:
  418dd0:	mov    rax,QWORD PTR [rdi+0x30]
  418dd4:	cmp    WORD PTR [rax+0xe],0x3
  418dd9:	jne    418de6 <flatcc_builder_table_edit@@Base+0x16>
  418ddb:	mov    eax,DWORD PTR [rdi+0x20]
  418dde:	sub    rax,rsi
  418de1:	add    rax,QWORD PTR [rdi+0x18]
  418de5:	ret    
  418de6:	lea    rcx,[rip+0x166b3]        # 42f4a0 <_IO_stdin_used@@Base+0x44a0>
  418ded:	lea    rsi,[rip+0x1620c]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418df4:	lea    rdi,[rip+0x1644d]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  418dfb:	sub    rsp,0x8
  418dff:	mov    edx,0x702
  418e04:	call   405080 <__assert_fail@plt>
  418e09:	nop    DWORD PTR [rax+0x0]

0000000000418e10 <flatcc_builder_table_add_copy@@Base>:
  418e10:	push   rbp
  418e11:	push   rbx
  418e12:	mov    rbx,rcx
  418e15:	mov    rbp,rdx
  418e18:	movzx  ecx,r8w
  418e1c:	mov    rdx,rbx
  418e1f:	sub    rsp,0x8
  418e23:	call   418c80 <flatcc_builder_table_add@@Base>
  418e28:	test   rax,rax
  418e2b:	mov    rcx,rax
  418e2e:	je     418e41 <flatcc_builder_table_add_copy@@Base+0x31>
  418e30:	mov    rdx,rbx
  418e33:	mov    rsi,rbp
  418e36:	mov    rdi,rax
  418e39:	call   4050e0 <memcpy@plt>
  418e3e:	mov    rcx,rax
  418e41:	add    rsp,0x8
  418e45:	mov    rax,rcx
  418e48:	pop    rbx
  418e49:	pop    rbp
  418e4a:	ret    
  418e4b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418e50 <flatcc_builder_table_add_offset@@Base>:
  418e50:	push   r13
  418e52:	push   r12
  418e54:	push   rbp
  418e55:	push   rbx
  418e56:	sub    rsp,0x8
  418e5a:	mov    rax,QWORD PTR [rdi+0x30]
  418e5e:	cmp    WORD PTR [rax+0xe],0x3
  418e63:	jne    418f62 <flatcc_builder_table_add_offset@@Base+0x112>
  418e69:	cmp    esi,0x7ffc
  418e6f:	mov    r12d,esi
  418e72:	ja     418f43 <flatcc_builder_table_add_offset@@Base+0xf3>
  418e78:	movsxd r13,esi
  418e7b:	mov    rbx,rdi
  418e7e:	add    r13,r13
  418e81:	mov    rdx,r13
  418e84:	add    rdx,QWORD PTR [rdi+0x8]
  418e88:	cmp    WORD PTR [rdx],0x0
  418e8c:	jne    418f24 <flatcc_builder_table_add_offset@@Base+0xd4>
  418e92:	mov    eax,DWORD PTR [rdi+0x14]
  418e95:	xor    eax,esi
  418e97:	imul   eax,eax,0x9e3779b1
  418e9d:	xor    eax,0x4
  418ea0:	imul   eax,eax,0x9e3779b1
  418ea6:	mov    DWORD PTR [rdi+0x14],eax
  418ea9:	mov    eax,DWORD PTR [rdi+0x20]
  418eac:	lea    ebp,[rax+0x3]
  418eaf:	and    ebp,0xfffffffc
  418eb2:	lea    esi,[rbp+0x4]
  418eb5:	cmp    esi,DWORD PTR [rdi+0x24]
  418eb8:	mov    DWORD PTR [rdi+0x20],esi
  418ebb:	ja     418f00 <flatcc_builder_table_add_offset@@Base+0xb0>
  418ebd:	lea    eax,[rbp+0x4]
  418ec0:	mov    WORD PTR [rdx],ax
  418ec3:	cmp    r12w,WORD PTR [rbx+0x10]
  418ec8:	jae    418ef0 <flatcc_builder_table_add_offset@@Base+0xa0>
  418eca:	mov    rax,QWORD PTR [rbx]
  418ecd:	lea    rdx,[rax+0x2]
  418ed1:	mov    QWORD PTR [rbx],rdx
  418ed4:	mov    WORD PTR [rax],bp
  418ed7:	mov    eax,ebp
  418ed9:	add    rax,QWORD PTR [rbx+0x18]
  418edd:	add    rsp,0x8
  418ee1:	pop    rbx
  418ee2:	pop    rbp
  418ee3:	pop    r12
  418ee5:	pop    r13
  418ee7:	ret    
  418ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  418ef0:	lea    esi,[r12+0x1]
  418ef5:	mov    WORD PTR [rbx+0x10],si
  418ef9:	jmp    418eca <flatcc_builder_table_add_offset@@Base+0x7a>
  418efb:	nop    DWORD PTR [rax+rax*1+0x0]
  418f00:	mov    edx,0xfffc
  418f05:	call   415680 <union_vector_tests@@Base+0x110>
  418f0a:	test   eax,eax
  418f0c:	jne    418f20 <flatcc_builder_table_add_offset@@Base+0xd0>
  418f0e:	mov    rdx,r13
  418f11:	add    rdx,QWORD PTR [rbx+0x8]
  418f15:	jmp    418ebd <flatcc_builder_table_add_offset@@Base+0x6d>
  418f17:	nop    WORD PTR [rax+rax*1+0x0]
  418f20:	xor    eax,eax
  418f22:	jmp    418edd <flatcc_builder_table_add_offset@@Base+0x8d>
  418f24:	lea    rcx,[rip+0x16555]        # 42f480 <_IO_stdin_used@@Base+0x4480>
  418f2b:	lea    rsi,[rip+0x160ce]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418f32:	lea    rdi,[rip+0x1645e]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  418f39:	mov    edx,0x71b
  418f3e:	call   405080 <__assert_fail@plt>
  418f43:	lea    rcx,[rip+0x16536]        # 42f480 <_IO_stdin_used@@Base+0x4480>
  418f4a:	lea    rsi,[rip+0x160af]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418f51:	lea    rdi,[rip+0x16380]        # 42f2d8 <_IO_stdin_used@@Base+0x42d8>
  418f58:	mov    edx,0x714
  418f5d:	call   405080 <__assert_fail@plt>
  418f62:	lea    rcx,[rip+0x16517]        # 42f480 <_IO_stdin_used@@Base+0x4480>
  418f69:	lea    rsi,[rip+0x16090]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  418f70:	lea    rdi,[rip+0x162d1]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  418f77:	mov    edx,0x713
  418f7c:	call   405080 <__assert_fail@plt>
  418f81:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418f8c:	nop    DWORD PTR [rax+0x0]

0000000000418f90 <flatcc_builder_table_add_union@@Base>:
  418f90:	push   r13
  418f92:	push   r12
  418f94:	mov    r13,rdx
  418f97:	push   rbp
  418f98:	push   rbx
  418f99:	sar    r13,0x20
  418f9d:	sub    rsp,0x8
  418fa1:	mov    rax,QWORD PTR [rdi+0x30]
  418fa5:	cmp    WORD PTR [rax+0xe],0x3
  418faa:	jne    419024 <flatcc_builder_table_add_union@@Base+0x94>
  418fac:	test   dl,dl
  418fae:	mov    r12,rdi
  418fb1:	mov    ebx,esi
  418fb3:	mov    rbp,rdx
  418fb6:	je     419000 <flatcc_builder_table_add_union@@Base+0x70>
  418fb8:	test   r13d,r13d
  418fbb:	je     418fce <flatcc_builder_table_add_union@@Base+0x3e>
  418fbd:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  418fc2:	test   rax,rax
  418fc5:	je     419062 <flatcc_builder_table_add_union@@Base+0xd2>
  418fcb:	mov    DWORD PTR [rax],r13d
  418fce:	lea    esi,[rbx-0x1]
  418fd1:	mov    ecx,0x1
  418fd6:	mov    edx,0x1
  418fdb:	mov    rdi,r12
  418fde:	call   418c80 <flatcc_builder_table_add@@Base>
  418fe3:	test   rax,rax
  418fe6:	je     419043 <flatcc_builder_table_add_union@@Base+0xb3>
  418fe8:	mov    BYTE PTR [rax],bpl
  418feb:	add    rsp,0x8
  418fef:	xor    eax,eax
  418ff1:	pop    rbx
  418ff2:	pop    rbp
  418ff3:	pop    r12
  418ff5:	pop    r13
  418ff7:	ret    
  418ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  419000:	test   r13d,r13d
  419003:	je     418fce <flatcc_builder_table_add_union@@Base+0x3e>
  419005:	lea    rcx,[rip+0x16604]        # 42f610 <_IO_stdin_used@@Base+0x4610>
  41900c:	lea    rsi,[rip+0x15fed]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419013:	lea    rdi,[rip+0x16306]        # 42f320 <_IO_stdin_used@@Base+0x4320>
  41901a:	mov    edx,0x5ef
  41901f:	call   405080 <__assert_fail@plt>
  419024:	lea    rcx,[rip+0x165e5]        # 42f610 <_IO_stdin_used@@Base+0x4610>
  41902b:	lea    rsi,[rip+0x15fce]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419032:	lea    rdi,[rip+0x1620f]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  419039:	mov    edx,0x5ee
  41903e:	call   405080 <__assert_fail@plt>
  419043:	lea    rcx,[rip+0x165c6]        # 42f610 <_IO_stdin_used@@Base+0x4610>
  41904a:	lea    rsi,[rip+0x15faf]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419051:	lea    rdi,[rip+0x163ce]        # 42f426 <_IO_stdin_used@@Base+0x4426>
  419058:	mov    edx,0x5f6
  41905d:	call   405080 <__assert_fail@plt>
  419062:	lea    rcx,[rip+0x165a7]        # 42f610 <_IO_stdin_used@@Base+0x4610>
  419069:	lea    rsi,[rip+0x15f90]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419070:	lea    rdi,[rip+0x163a5]        # 42f41c <_IO_stdin_used@@Base+0x441c>
  419077:	mov    edx,0x5f2
  41907c:	call   405080 <__assert_fail@plt>
  419081:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41908c:	nop    DWORD PTR [rax+0x0]

0000000000419090 <flatcc_builder_table_add_union_vector@@Base>:
  419090:	push   r13
  419092:	push   r12
  419094:	push   rbp
  419095:	push   rbx
  419096:	mov    rbp,rdx
  419099:	sar    rbp,0x20
  41909d:	sub    rsp,0x18
  4190a1:	mov    rax,QWORD PTR [rdi+0x30]
  4190a5:	cmp    WORD PTR [rax+0xe],0x3
  4190aa:	jne    419126 <flatcc_builder_table_add_union_vector@@Base+0x96>
  4190ac:	test   ebp,ebp
  4190ae:	sete   al
  4190b1:	test   edx,edx
  4190b3:	sete   cl
  4190b6:	cmp    cl,al
  4190b8:	je     4190e0 <flatcc_builder_table_add_union_vector@@Base+0x50>
  4190ba:	test   edx,edx
  4190bc:	setne  dl
  4190bf:	cmp    al,dl
  4190c1:	je     419145 <flatcc_builder_table_add_union_vector@@Base+0xb5>
  4190c7:	mov    r12d,0xffffffff
  4190cd:	add    rsp,0x18
  4190d1:	mov    eax,r12d
  4190d4:	pop    rbx
  4190d5:	pop    rbp
  4190d6:	pop    r12
  4190d8:	pop    r13
  4190da:	ret    
  4190db:	nop    DWORD PTR [rax+rax*1+0x0]
  4190e0:	xor    r12d,r12d
  4190e3:	test   edx,edx
  4190e5:	je     4190cd <flatcc_builder_table_add_union_vector@@Base+0x3d>
  4190e7:	mov    r13d,esi
  4190ea:	lea    esi,[rsi-0x1]
  4190ed:	mov    QWORD PTR [rsp+0x8],rdx
  4190f2:	mov    rbx,rdi
  4190f5:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  4190fa:	test   rax,rax
  4190fd:	mov    rdx,QWORD PTR [rsp+0x8]
  419102:	je     419183 <flatcc_builder_table_add_union_vector@@Base+0xf3>
  419104:	mov    DWORD PTR [rax],edx
  419106:	mov    esi,r13d
  419109:	mov    rdi,rbx
  41910c:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  419111:	test   rax,rax
  419114:	je     419164 <flatcc_builder_table_add_union_vector@@Base+0xd4>
  419116:	mov    DWORD PTR [rax],ebp
  419118:	add    rsp,0x18
  41911c:	mov    eax,r12d
  41911f:	pop    rbx
  419120:	pop    rbp
  419121:	pop    r12
  419123:	pop    r13
  419125:	ret    
  419126:	lea    rcx,[rip+0x164b3]        # 42f5e0 <_IO_stdin_used@@Base+0x45e0>
  41912d:	lea    rsi,[rip+0x15ecc]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419134:	lea    rdi,[rip+0x1610d]        # 42f248 <_IO_stdin_used@@Base+0x4248>
  41913b:	mov    edx,0x600
  419140:	call   405080 <__assert_fail@plt>
  419145:	lea    rcx,[rip+0x16494]        # 42f5e0 <_IO_stdin_used@@Base+0x45e0>
  41914c:	lea    rsi,[rip+0x15ead]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419153:	lea    rdi,[rip+0x161ee]        # 42f348 <_IO_stdin_used@@Base+0x4348>
  41915a:	mov    edx,0x601
  41915f:	call   405080 <__assert_fail@plt>
  419164:	lea    rcx,[rip+0x16475]        # 42f5e0 <_IO_stdin_used@@Base+0x45e0>
  41916b:	lea    rsi,[rip+0x15e8e]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419172:	lea    rdi,[rip+0x162a3]        # 42f41c <_IO_stdin_used@@Base+0x441c>
  419179:	mov    edx,0x608
  41917e:	call   405080 <__assert_fail@plt>
  419183:	lea    rcx,[rip+0x16456]        # 42f5e0 <_IO_stdin_used@@Base+0x45e0>
  41918a:	lea    rsi,[rip+0x15e6f]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419191:	lea    rdi,[rip+0x16284]        # 42f41c <_IO_stdin_used@@Base+0x441c>
  419198:	mov    edx,0x604
  41919d:	call   405080 <__assert_fail@plt>
  4191a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4191ad:	nop    DWORD PTR [rax]

00000000004191b0 <flatcc_builder_push_buffer_alignment@@Base>:
  4191b0:	mov    edx,0x4
  4191b5:	movzx  eax,WORD PTR [rdi+0xe8]
  4191bc:	mov    WORD PTR [rdi+0xe8],dx
  4191c3:	ret    
  4191c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4191cf:	nop

00000000004191d0 <flatcc_builder_pop_buffer_alignment@@Base>:
  4191d0:	cmp    si,WORD PTR [rdi+0xe8]
  4191d7:	jbe    4191e0 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  4191d9:	mov    WORD PTR [rdi+0xe8],si
  4191e0:	repz ret 
  4191e2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4191ed:	nop    DWORD PTR [rax]

00000000004191f0 <flatcc_builder_get_buffer_alignment@@Base>:
  4191f0:	movzx  eax,WORD PTR [rdi+0xe8]
  4191f7:	ret    
  4191f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419200 <flatcc_builder_set_vtable_clustering@@Base>:
  419200:	xor    eax,eax
  419202:	test   esi,esi
  419204:	sete   al
  419207:	mov    DWORD PTR [rdi+0x124],eax
  41920d:	ret    
  41920e:	xchg   ax,ax

0000000000419210 <flatcc_builder_set_block_align@@Base>:
  419210:	mov    WORD PTR [rdi+0xec],si
  419217:	ret    
  419218:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419220 <flatcc_builder_get_level@@Base>:
  419220:	mov    eax,DWORD PTR [rdi+0x104]
  419226:	ret    
  419227:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419230 <flatcc_builder_set_max_level@@Base>:
  419230:	cmp    esi,DWORD PTR [rdi+0x108]
  419236:	mov    DWORD PTR [rdi+0x120],esi
  41923c:	jle    419244 <flatcc_builder_set_max_level@@Base+0x14>
  41923e:	mov    DWORD PTR [rdi+0x108],esi
  419244:	repz ret 
  419246:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000419250 <flatcc_builder_get_buffer_size@@Base>:
  419250:	mov    eax,DWORD PTR [rdi+0xf4]
  419256:	sub    eax,DWORD PTR [rdi+0xf0]
  41925c:	cdqe   
  41925e:	ret    
  41925f:	nop

0000000000419260 <flatcc_builder_get_buffer_start@@Base>:
  419260:	mov    eax,DWORD PTR [rdi+0xf0]
  419266:	ret    
  419267:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419270 <flatcc_builder_get_buffer_end@@Base>:
  419270:	mov    eax,DWORD PTR [rdi+0xf4]
  419276:	ret    
  419277:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419280 <flatcc_builder_set_vtable_cache_limit@@Base>:
  419280:	mov    QWORD PTR [rdi+0x118],rsi
  419287:	ret    
  419288:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419290 <flatcc_builder_set_identifier@@Base>:
  419290:	test   rsi,rsi
  419293:	je     4192a0 <flatcc_builder_set_identifier@@Base+0x10>
  419295:	mov    eax,DWORD PTR [rsi]
  419297:	mov    DWORD PTR [rdi+0x110],eax
  41929d:	ret    
  41929e:	xchg   ax,ax
  4192a0:	mov    rsi,0x42fae0
  4192a7:	mov    eax,DWORD PTR [rsi]
  4192a9:	mov    DWORD PTR [rdi+0x110],eax
  4192af:	ret    

00000000004192b0 <flatcc_builder_get_type@@Base>:
  4192b0:	mov    rax,QWORD PTR [rdi+0x30]
  4192b4:	test   rax,rax
  4192b7:	je     4192c0 <flatcc_builder_get_type@@Base+0x10>
  4192b9:	movzx  eax,WORD PTR [rax+0xe]
  4192bd:	ret    
  4192be:	xchg   ax,ax
  4192c0:	xor    eax,eax
  4192c2:	ret    
  4192c3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4192ce:	xchg   ax,ax

00000000004192d0 <flatcc_builder_get_type_at@@Base>:
  4192d0:	test   esi,esi
  4192d2:	jle    419300 <flatcc_builder_get_type_at@@Base+0x30>
  4192d4:	mov    edx,DWORD PTR [rdi+0x104]
  4192da:	xor    eax,eax
  4192dc:	cmp    esi,edx
  4192de:	jg     419302 <flatcc_builder_get_type_at@@Base+0x32>
  4192e0:	sub    esi,edx
  4192e2:	mov    rdx,QWORD PTR [rdi+0x30]
  4192e6:	movsxd rsi,esi
  4192e9:	lea    rax,[rsi+rsi*8]
  4192ed:	lea    rax,[rdx+rax*4]
  4192f1:	movzx  eax,WORD PTR [rax+0xe]
  4192f5:	ret    
  4192f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419300:	xor    eax,eax
  419302:	repz ret 
  419304:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41930f:	nop

0000000000419310 <flatcc_builder_get_direct_buffer@@Base>:
  419310:	mov    eax,DWORD PTR [rdi+0x128]
  419316:	test   eax,eax
  419318:	je     41932a <flatcc_builder_get_direct_buffer@@Base+0x1a>
  41931a:	mov    rax,QWORD PTR [rdi+0x138]
  419321:	cmp    QWORD PTR [rdi+0x130],rax
  419328:	je     419340 <flatcc_builder_get_direct_buffer@@Base+0x30>
  41932a:	test   rsi,rsi
  41932d:	jne    419332 <flatcc_builder_get_direct_buffer@@Base+0x22>
  41932f:	xor    eax,eax
  419331:	ret    
  419332:	mov    QWORD PTR [rsi],0x0
  419339:	xor    eax,eax
  41933b:	ret    
  41933c:	nop    DWORD PTR [rax+0x0]
  419340:	test   rsi,rsi
  419343:	je     41934f <flatcc_builder_get_direct_buffer@@Base+0x3f>
  419345:	mov    rax,QWORD PTR [rdi+0x160]
  41934c:	mov    QWORD PTR [rsi],rax
  41934f:	mov    rax,QWORD PTR [rdi+0x140]
  419356:	ret    
  419357:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419360 <flatcc_builder_copy_buffer@@Base>:
  419360:	mov    eax,DWORD PTR [rdi+0x128]
  419366:	test   eax,eax
  419368:	je     419388 <flatcc_builder_copy_buffer@@Base+0x28>
  41936a:	sub    rsp,0x8
  41936e:	add    rdi,0x130
  419375:	call   419b60 <flatcc_emitter_copy_buffer@@Base>
  41937a:	test   rax,rax
  41937d:	je     41938b <flatcc_builder_copy_buffer@@Base+0x2b>
  41937f:	add    rsp,0x8
  419383:	ret    
  419384:	nop    DWORD PTR [rax+0x0]
  419388:	xor    eax,eax
  41938a:	ret    
  41938b:	lea    rcx,[rip+0x160ce]        # 42f460 <_IO_stdin_used@@Base+0x4460>
  419392:	lea    rsi,[rip+0x15c67]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419399:	lea    rdi,[rip+0x12207]        # 42b5a7 <_IO_stdin_used@@Base+0x5a7>
  4193a0:	mov    edx,0x786
  4193a5:	call   405080 <__assert_fail@plt>
  4193aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004193b0 <flatcc_builder_finalize_buffer@@Base>:
  4193b0:	push   r12
  4193b2:	push   rbp
  4193b3:	mov    r12,rdi
  4193b6:	push   rbx
  4193b7:	mov    rbx,rsi
  4193ba:	call   419250 <flatcc_builder_get_buffer_size@@Base>
  4193bf:	test   rbx,rbx
  4193c2:	mov    rbp,rax
  4193c5:	je     4193ca <flatcc_builder_finalize_buffer@@Base+0x1a>
  4193c7:	mov    QWORD PTR [rbx],rax
  4193ca:	mov    rdi,rbp
  4193cd:	call   4050f0 <malloc@plt>
  4193d2:	test   rax,rax
  4193d5:	mov    rbx,rax
  4193d8:	je     4193f5 <flatcc_builder_finalize_buffer@@Base+0x45>
  4193da:	mov    rdx,rbp
  4193dd:	mov    rsi,rax
  4193e0:	mov    rdi,r12
  4193e3:	call   419360 <flatcc_builder_copy_buffer@@Base>
  4193e8:	test   rax,rax
  4193eb:	je     419414 <flatcc_builder_finalize_buffer@@Base+0x64>
  4193ed:	mov    rax,rbx
  4193f0:	pop    rbx
  4193f1:	pop    rbp
  4193f2:	pop    r12
  4193f4:	ret    
  4193f5:	lea    rcx,[rip+0x16044]        # 42f440 <_IO_stdin_used@@Base+0x4440>
  4193fc:	lea    rsi,[rip+0x15bfd]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419403:	lea    rdi,[rip+0x15f8d]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  41940a:	mov    edx,0x798
  41940f:	call   405080 <__assert_fail@plt>
  419414:	lea    rcx,[rip+0x16025]        # 42f440 <_IO_stdin_used@@Base+0x4440>
  41941b:	lea    rsi,[rip+0x15bde]        # 42f000 <_IO_stdin_used@@Base+0x4000>
  419422:	lea    rdi,[rip+0x15f6e]        # 42f397 <_IO_stdin_used@@Base+0x4397>
  419429:	mov    edx,0x79c
  41942e:	call   405080 <__assert_fail@plt>
  419433:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41943e:	xchg   ax,ax

0000000000419440 <flatcc_builder_finalize_aligned_buffer@@Base>:
  419440:	push   r13
  419442:	push   r12
  419444:	mov    r12,rdi
  419447:	push   rbp
  419448:	push   rbx
  419449:	mov    rbp,rsi
  41944c:	sub    rsp,0x18
  419450:	mov    rax,QWORD PTR fs:0x28
  419459:	mov    QWORD PTR [rsp+0x8],rax
  41945e:	xor    eax,eax
  419460:	call   419250 <flatcc_builder_get_buffer_size@@Base>
  419465:	test   rbp,rbp
  419468:	mov    rbx,rax
  41946b:	je     419471 <flatcc_builder_finalize_aligned_buffer@@Base+0x31>
  41946d:	mov    QWORD PTR [rbp+0x0],rax
  419471:	mov    rdi,r12
  419474:	call   4191f0 <flatcc_builder_get_buffer_alignment@@Base>
  419479:	movzx  eax,ax
  41947c:	mov    esi,0x8
  419481:	mov    rdi,rsp
  419484:	lea    rdx,[rbx+rax*1-0x1]
  419489:	mov    rbx,rax
  41948c:	mov    QWORD PTR [rsp],0x0
  419494:	neg    rbx
  419497:	and    rbx,rdx
  41949a:	cmp    rax,0x8
  41949e:	cmovae rsi,rax
  4194a2:	mov    rdx,rbx
  4194a5:	call   405140 <posix_memalign@plt>
  4194aa:	test   eax,eax
  4194ac:	je     4194f0 <flatcc_builder_finalize_aligned_buffer@@Base+0xb0>
  4194ae:	mov    rdi,QWORD PTR [rsp]
  4194b2:	test   rdi,rdi
  4194b5:	je     4194bc <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  4194b7:	call   405030 <free@plt>
  4194bc:	test   rbp,rbp
  4194bf:	je     419516 <flatcc_builder_finalize_aligned_buffer@@Base+0xd6>
  4194c1:	mov    QWORD PTR [rbp+0x0],0x0
  4194c9:	xor    r13d,r13d
  4194cc:	mov    rcx,QWORD PTR [rsp+0x8]
  4194d1:	xor    rcx,QWORD PTR fs:0x28
  4194da:	mov    rax,r13
  4194dd:	jne    419511 <flatcc_builder_finalize_aligned_buffer@@Base+0xd1>
  4194df:	add    rsp,0x18
  4194e3:	pop    rbx
  4194e4:	pop    rbp
  4194e5:	pop    r12
  4194e7:	pop    r13
  4194e9:	ret    
  4194ea:	nop    WORD PTR [rax+rax*1+0x0]
  4194f0:	mov    r13,QWORD PTR [rsp]
  4194f4:	test   r13,r13
  4194f7:	je     4194bc <flatcc_builder_finalize_aligned_buffer@@Base+0x7c>
  4194f9:	mov    rdx,rbx
  4194fc:	mov    rsi,r13
  4194ff:	mov    rdi,r12
  419502:	call   419360 <flatcc_builder_copy_buffer@@Base>
  419507:	test   rax,rax
  41950a:	jne    4194cc <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  41950c:	mov    rdi,r13
  41950f:	jmp    4194b7 <flatcc_builder_finalize_aligned_buffer@@Base+0x77>
  419511:	call   405070 <__stack_chk_fail@plt>
  419516:	xor    r13d,r13d
  419519:	jmp    4194cc <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
  41951b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419520 <flatcc_builder_aligned_alloc@@Base>:
  419520:	sub    rsp,0x18
  419524:	mov    rdx,rsi
  419527:	mov    esi,0x8
  41952c:	mov    rax,QWORD PTR fs:0x28
  419535:	mov    QWORD PTR [rsp+0x8],rax
  41953a:	xor    eax,eax
  41953c:	cmp    rdi,0x8
  419540:	mov    QWORD PTR [rsp],0x0
  419548:	cmovae rsi,rdi
  41954c:	mov    rdi,rsp
  41954f:	call   405140 <posix_memalign@plt>
  419554:	test   eax,eax
  419556:	mov    rax,QWORD PTR [rsp]
  41955a:	je     41956b <flatcc_builder_aligned_alloc@@Base+0x4b>
  41955c:	test   rax,rax
  41955f:	je     41956b <flatcc_builder_aligned_alloc@@Base+0x4b>
  419561:	mov    rdi,rax
  419564:	call   405030 <free@plt>
  419569:	xor    eax,eax
  41956b:	mov    rcx,QWORD PTR [rsp+0x8]
  419570:	xor    rcx,QWORD PTR fs:0x28
  419579:	jne    419580 <flatcc_builder_aligned_alloc@@Base+0x60>
  41957b:	add    rsp,0x18
  41957f:	ret    
  419580:	call   405070 <__stack_chk_fail@plt>
  419585:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000419590 <flatcc_builder_aligned_free@@Base>:
  419590:	jmp    405030 <free@plt>
  419595:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004195a0 <flatcc_builder_get_emit_context@@Base>:
  4195a0:	mov    rax,QWORD PTR [rdi+0x38]
  4195a4:	ret    
  4195a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4195af:	nop

00000000004195b0 <flatcc_emitter_recycle_page@@Base>:
  4195b0:	mov    rax,QWORD PTR [rdi]
  4195b3:	cmp    rax,rsi
  4195b6:	je     419610 <flatcc_emitter_recycle_page@@Base+0x60>
  4195b8:	cmp    rsi,QWORD PTR [rdi+0x8]
  4195bc:	je     419610 <flatcc_emitter_recycle_page@@Base+0x60>
  4195be:	mov    rdx,QWORD PTR [rsi+0xb80]
  4195c5:	mov    rcx,QWORD PTR [rsi+0xb88]
  4195cc:	mov    QWORD PTR [rdx+0xb88],rcx
  4195d3:	mov    rcx,QWORD PTR [rsi+0xb88]
  4195da:	mov    QWORD PTR [rcx+0xb80],rdx
  4195e1:	mov    rdx,QWORD PTR [rax+0xb88]
  4195e8:	mov    QWORD PTR [rsi+0xb80],rax
  4195ef:	mov    QWORD PTR [rsi+0xb88],rdx
  4195f6:	mov    QWORD PTR [rdx+0xb80],rsi
  4195fd:	mov    rax,QWORD PTR [rsi+0xb80]
  419604:	mov    QWORD PTR [rax+0xb88],rsi
  41960b:	xor    eax,eax
  41960d:	ret    
  41960e:	xchg   ax,ax
  419610:	mov    eax,0xffffffff
  419615:	ret    
  419616:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000419620 <flatcc_emitter_reset@@Base>:
  419620:	mov    rax,QWORD PTR [rdi]
  419623:	test   rax,rax
  419626:	je     4196ed <flatcc_emitter_reset@@Base+0xcd>
  41962c:	lea    rdx,[rax+0x5c0]
  419633:	mov    QWORD PTR [rdi+0x8],rax
  419637:	mov    QWORD PTR [rdi+0x18],0x5c0
  41963f:	mov    QWORD PTR [rdi+0x28],0x5c0
  419647:	mov    rcx,QWORD PTR [rdi+0x30]
  41964b:	mov    QWORD PTR [rdi+0x10],rdx
  41964f:	mov    QWORD PTR [rdi+0x20],rdx
  419653:	mov    rdx,QWORD PTR [rdi+0x40]
  419657:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  419661:	test   rdx,rdx
  419664:	je     4196f0 <flatcc_emitter_reset@@Base+0xd0>
  41966a:	lea    rdx,[rdx+rdx*2]
  41966e:	shr    rcx,0x2
  419672:	mov    QWORD PTR [rdi+0x30],0x0
  41967a:	shr    rdx,0x2
  41967e:	add    rdx,rcx
  419681:	mov    QWORD PTR [rdi+0x40],rdx
  419685:	add    rdx,rdx
  419688:	cmp    QWORD PTR [rdi+0x38],rdx
  41968c:	jbe    4196ed <flatcc_emitter_reset@@Base+0xcd>
  41968e:	push   rbx
  41968f:	mov    rbx,rdi
  419692:	mov    rdi,QWORD PTR [rax+0xb80]
  419699:	cmp    rax,rdi
  41969c:	jne    4196b0 <flatcc_emitter_reset@@Base+0x90>
  41969e:	jmp    4196ec <flatcc_emitter_reset@@Base+0xcc>
  4196a0:	mov    rax,QWORD PTR [rbx+0x8]
  4196a4:	mov    rdi,QWORD PTR [rax+0xb80]
  4196ab:	cmp    rdi,QWORD PTR [rbx]
  4196ae:	je     4196ec <flatcc_emitter_reset@@Base+0xcc>
  4196b0:	mov    rdx,QWORD PTR [rdi+0xb80]
  4196b7:	mov    QWORD PTR [rax+0xb80],rdx
  4196be:	mov    rdx,QWORD PTR [rdi+0xb80]
  4196c5:	mov    QWORD PTR [rdx+0xb88],rax
  4196cc:	call   405030 <free@plt>
  4196d1:	mov    rsi,QWORD PTR [rbx+0x40]
  4196d5:	mov    rax,QWORD PTR [rbx+0x38]
  4196d9:	lea    rdx,[rsi+rsi*1]
  4196dd:	sub    rax,0xb80
  4196e3:	mov    QWORD PTR [rbx+0x38],rax
  4196e7:	cmp    rdx,rax
  4196ea:	jb     4196a0 <flatcc_emitter_reset@@Base+0x80>
  4196ec:	pop    rbx
  4196ed:	repz ret 
  4196ef:	nop
  4196f0:	mov    rdx,rcx
  4196f3:	jmp    41966a <flatcc_emitter_reset@@Base+0x4a>
  4196f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419700 <flatcc_emitter_clear@@Base>:
  419700:	mov    rax,QWORD PTR [rdi]
  419703:	test   rax,rax
  419706:	je     419787 <flatcc_emitter_clear@@Base+0x87>
  419708:	push   rbp
  419709:	push   rbx
  41970a:	mov    rbp,rdi
  41970d:	sub    rsp,0x8
  419711:	mov    rdx,QWORD PTR [rax+0xb88]
  419718:	mov    QWORD PTR [rdx+0xb80],0x0
  419723:	mov    rbx,QWORD PTR [rax+0xb80]
  41972a:	test   rbx,rbx
  41972d:	jne    41973b <flatcc_emitter_clear@@Base+0x3b>
  41972f:	jmp    419789 <flatcc_emitter_clear@@Base+0x89>
  419731:	nop    DWORD PTR [rax+0x0]
  419738:	mov    rbx,rax
  41973b:	mov    rdi,QWORD PTR [rbx+0xb88]
  419742:	call   405030 <free@plt>
  419747:	mov    rax,QWORD PTR [rbx+0xb80]
  41974e:	test   rax,rax
  419751:	jne    419738 <flatcc_emitter_clear@@Base+0x38>
  419753:	mov    rdi,rbx
  419756:	call   405030 <free@plt>
  41975b:	lea    rdi,[rbp+0x8]
  41975f:	mov    QWORD PTR [rbp+0x0],0x0
  419767:	mov    QWORD PTR [rbp+0x40],0x0
  41976f:	xor    eax,eax
  419771:	and    rdi,0xfffffffffffffff8
  419775:	sub    rbp,rdi
  419778:	lea    ecx,[rbp+0x48]
  41977b:	shr    ecx,0x3
  41977e:	rep stos QWORD PTR es:[rdi],rax
  419781:	add    rsp,0x8
  419785:	pop    rbx
  419786:	pop    rbp
  419787:	repz ret 
  419789:	mov    rbx,rax
  41978c:	jmp    419753 <flatcc_emitter_clear@@Base+0x53>
  41978e:	xchg   ax,ax

0000000000419790 <flatcc_emitter@@Base>:
  419790:	push   r15
  419792:	push   r14
  419794:	mov    r14,rsi
  419797:	push   r13
  419799:	push   r12
  41979b:	push   rbp
  41979c:	push   rbx
  41979d:	mov    rbx,rdi
  4197a0:	sub    rsp,0x18
  4197a4:	add    QWORD PTR [rdi+0x30],r8
  4197a8:	test   ecx,ecx
  4197aa:	js     41999e <flatcc_emitter@@Base+0x20e>
  4197b0:	mov    rax,QWORD PTR [rdi+0x28]
  4197b4:	cmp    r8,rax
  4197b7:	jbe    419844 <flatcc_emitter@@Base+0xb4>
  4197bd:	test   edx,edx
  4197bf:	je     419833 <flatcc_emitter@@Base+0xa3>
  4197c1:	lea    r15d,[rdx-0x1]
  4197c5:	add    r15,0x1
  4197c9:	shl    r15,0x4
  4197cd:	lea    rax,[rsi+r15*1]
  4197d1:	mov    QWORD PTR [rsp+0x8],rax
  4197d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197e0:	mov    r12,QWORD PTR [r14+0x8]
  4197e4:	mov    r13,QWORD PTR [r14]
  4197e7:	test   r12,r12
  4197ea:	je     419828 <flatcc_emitter@@Base+0x98>
  4197ec:	nop    DWORD PTR [rax+0x0]
  4197f0:	mov    rbp,QWORD PTR [rbx+0x28]
  4197f4:	cmp    rbp,r12
  4197f7:	jae    419898 <flatcc_emitter@@Base+0x108>
  4197fd:	test   rbp,rbp
  419800:	je     4198a8 <flatcc_emitter@@Base+0x118>
  419806:	sub    r12,rbp
  419809:	mov    rdi,QWORD PTR [rbx+0x20]
  41980d:	mov    rsi,r13
  419810:	mov    rdx,rbp
  419813:	add    r13,rbp
  419816:	call   4050e0 <memcpy@plt>
  41981b:	add    QWORD PTR [rbx+0x20],rbp
  41981f:	sub    QWORD PTR [rbx+0x28],rbp
  419823:	test   r12,r12
  419826:	jne    4197f0 <flatcc_emitter@@Base+0x60>
  419828:	add    r14,0x10
  41982c:	cmp    r14,QWORD PTR [rsp+0x8]
  419831:	jne    4197e0 <flatcc_emitter@@Base+0x50>
  419833:	add    rsp,0x18
  419837:	xor    eax,eax
  419839:	pop    rbx
  41983a:	pop    rbp
  41983b:	pop    r12
  41983d:	pop    r13
  41983f:	pop    r14
  419841:	pop    r15
  419843:	ret    
  419844:	mov    rcx,QWORD PTR [rdi+0x20]
  419848:	sub    rax,r8
  41984b:	mov    QWORD PTR [rdi+0x28],rax
  41984f:	lea    rsi,[rcx+r8*1]
  419853:	mov    QWORD PTR [rdi+0x20],rsi
  419857:	test   edx,edx
  419859:	je     419833 <flatcc_emitter@@Base+0xa3>
  41985b:	lea    ebx,[rdx-0x1]
  41985e:	add    rbx,0x1
  419862:	shl    rbx,0x4
  419866:	add    rbx,r14
  419869:	nop    DWORD PTR [rax+0x0]
  419870:	mov    rsi,QWORD PTR [r14]
  419873:	mov    rdx,QWORD PTR [r14+0x8]
  419877:	mov    rdi,rcx
  41987a:	add    r14,0x10
  41987e:	call   4050e0 <memcpy@plt>
  419883:	mov    rcx,rax
  419886:	add    rcx,QWORD PTR [r14-0x8]
  41988a:	cmp    rbx,r14
  41988d:	jne    419870 <flatcc_emitter@@Base+0xe0>
  41988f:	jmp    419833 <flatcc_emitter@@Base+0xa3>
  419891:	nop    DWORD PTR [rax+0x0]
  419898:	mov    rbp,r12
  41989b:	xor    r12d,r12d
  41989e:	jmp    419809 <flatcc_emitter@@Base+0x79>
  4198a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4198a8:	mov    r15,QWORD PTR [rbx+0x8]
  4198ac:	test   r15,r15
  4198af:	je     419930 <flatcc_emitter@@Base+0x1a0>
  4198b1:	mov    rbp,QWORD PTR [r15+0xb80]
  4198b8:	cmp    rbp,QWORD PTR [rbx]
  4198bb:	je     4198f0 <flatcc_emitter@@Base+0x160>
  4198bd:	mov    QWORD PTR [rbx+0x8],rbp
  4198c1:	mov    rax,QWORD PTR [rbp+0xb88]
  4198c8:	mov    QWORD PTR [rbx+0x20],rbp
  4198cc:	mov    QWORD PTR [rbx+0x28],0xb80
  4198d4:	mov    eax,DWORD PTR [rax+0xb90]
  4198da:	add    eax,0xb80
  4198df:	mov    DWORD PTR [rbp+0xb90],eax
  4198e5:	jmp    4197f0 <flatcc_emitter@@Base+0x60>
  4198ea:	nop    WORD PTR [rax+rax*1+0x0]
  4198f0:	mov    edi,0xb98
  4198f5:	call   4050f0 <malloc@plt>
  4198fa:	test   rax,rax
  4198fd:	je     41993f <flatcc_emitter@@Base+0x1af>
  4198ff:	mov    QWORD PTR [rax+0xb80],rbp
  419906:	add    QWORD PTR [rbx+0x38],0xb80
  41990e:	mov    QWORD PTR [rax+0xb88],r15
  419915:	mov    QWORD PTR [rbp+0xb88],rax
  41991c:	mov    rbp,rax
  41991f:	mov    QWORD PTR [r15+0xb80],rax
  419926:	mov    QWORD PTR [rbx+0x8],rax
  41992a:	jmp    4198c1 <flatcc_emitter@@Base+0x131>
  41992c:	nop    DWORD PTR [rax+0x0]
  419930:	mov    edi,0xb98
  419935:	call   4050f0 <malloc@plt>
  41993a:	test   rax,rax
  41993d:	jne    419953 <flatcc_emitter@@Base+0x1c3>
  41993f:	add    rsp,0x18
  419943:	mov    eax,0xffffffff
  419948:	pop    rbx
  419949:	pop    rbp
  41994a:	pop    r12
  41994c:	pop    r13
  41994e:	pop    r14
  419950:	pop    r15
  419952:	ret    
  419953:	lea    rdx,[rax+0x5c0]
  41995a:	add    QWORD PTR [rbx+0x38],0xb80
  419962:	mov    QWORD PTR [rbx],rax
  419965:	mov    QWORD PTR [rbx+0x8],rax
  419969:	mov    QWORD PTR [rax+0xb80],rax
  419970:	mov    QWORD PTR [rax+0xb88],rax
  419977:	mov    QWORD PTR [rbx+0x10],rdx
  41997b:	mov    QWORD PTR [rbx+0x20],rdx
  41997f:	mov    QWORD PTR [rbx+0x18],0x5c0
  419987:	mov    QWORD PTR [rbx+0x28],0x5c0
  41998f:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  419999:	jmp    4197f0 <flatcc_emitter@@Base+0x60>
  41999e:	mov    rax,QWORD PTR [rdi+0x18]
  4199a2:	cmp    r8,rax
  4199a5:	jbe    419a3c <flatcc_emitter@@Base+0x2ac>
  4199ab:	movsxd rax,edx
  4199ae:	shl    rax,0x4
  4199b2:	add    r14,rax
  4199b5:	mov    eax,edx
  4199b7:	shl    rax,0x4
  4199bb:	mov    rcx,r14
  4199be:	sub    rcx,rax
  4199c1:	mov    QWORD PTR [rsp+0x8],rcx
  4199c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4199d0:	cmp    r14,QWORD PTR [rsp+0x8]
  4199d5:	je     419833 <flatcc_emitter@@Base+0xa3>
  4199db:	sub    r14,0x10
  4199df:	mov    rbp,QWORD PTR [r14+0x8]
  4199e3:	mov    r12,rbp
  4199e6:	add    r12,QWORD PTR [r14]
  4199e9:	test   rbp,rbp
  4199ec:	je     4199d0 <flatcc_emitter@@Base+0x240>
  4199ee:	mov    rdx,QWORD PTR [rbx+0x18]
  4199f2:	cmp    rdx,rbp
  4199f5:	jae    419a2f <flatcc_emitter@@Base+0x29f>
  4199f7:	test   rdx,rdx
  4199fa:	je     419a58 <flatcc_emitter@@Base+0x2c8>
  4199fc:	sub    rbp,rdx
  4199ff:	xor    ecx,ecx
  419a01:	mov    rax,rdx
  419a04:	mov    QWORD PTR [rbx+0x18],rcx
  419a08:	neg    rax
  419a0b:	mov    rdi,rax
  419a0e:	add    rdi,QWORD PTR [rbx+0x10]
  419a12:	add    r12,rax
  419a15:	mov    rsi,r12
  419a18:	mov    QWORD PTR [rbx+0x10],rdi
  419a1c:	call   4050e0 <memcpy@plt>
  419a21:	test   rbp,rbp
  419a24:	je     4199d0 <flatcc_emitter@@Base+0x240>
  419a26:	mov    rdx,QWORD PTR [rbx+0x18]
  419a2a:	cmp    rdx,rbp
  419a2d:	jb     4199f7 <flatcc_emitter@@Base+0x267>
  419a2f:	mov    rcx,rdx
  419a32:	mov    rdx,rbp
  419a35:	sub    rcx,rbp
  419a38:	xor    ebp,ebp
  419a3a:	jmp    419a01 <flatcc_emitter@@Base+0x271>
  419a3c:	mov    rcx,QWORD PTR [rdi+0x10]
  419a40:	sub    rax,r8
  419a43:	mov    QWORD PTR [rdi+0x18],rax
  419a47:	sub    rcx,r8
  419a4a:	mov    QWORD PTR [rdi+0x10],rcx
  419a4e:	jmp    419857 <flatcc_emitter@@Base+0xc7>
  419a53:	nop    DWORD PTR [rax+rax*1+0x0]
  419a58:	mov    r13,QWORD PTR [rbx]
  419a5b:	test   r13,r13
  419a5e:	je     419aff <flatcc_emitter@@Base+0x36f>
  419a64:	mov    r15,QWORD PTR [r13+0xb88]
  419a6b:	cmp    r15,QWORD PTR [rbx+0x8]
  419a6f:	je     419ac0 <flatcc_emitter@@Base+0x330>
  419a71:	mov    eax,DWORD PTR [r13+0xb90]
  419a78:	sub    eax,0xb80
  419a7d:	mov    DWORD PTR [r15+0xb90],eax
  419a84:	mov    QWORD PTR [rbx],r15
  419a87:	lea    rax,[r15+0xb80]
  419a8e:	mov    QWORD PTR [rbx+0x18],0xb80
  419a96:	mov    QWORD PTR [rbx+0x10],rax
  419a9a:	mov    rax,QWORD PTR [r15+0xb80]
  419aa1:	mov    eax,DWORD PTR [rax+0xb90]
  419aa7:	sub    eax,0xb80
  419aac:	mov    DWORD PTR [r15+0xb90],eax
  419ab3:	jmp    4199ee <flatcc_emitter@@Base+0x25e>
  419ab8:	nop    DWORD PTR [rax+rax*1+0x0]
  419ac0:	mov    edi,0xb98
  419ac5:	call   4050f0 <malloc@plt>
  419aca:	test   rax,rax
  419acd:	je     41993f <flatcc_emitter@@Base+0x1af>
  419ad3:	mov    QWORD PTR [rax+0xb88],r15
  419ada:	add    QWORD PTR [rbx+0x38],0xb80
  419ae2:	mov    QWORD PTR [rax+0xb80],r13
  419ae9:	mov    QWORD PTR [r13+0xb88],rax
  419af0:	mov    QWORD PTR [r15+0xb80],rax
  419af7:	mov    QWORD PTR [rbx],rax
  419afa:	mov    r15,rax
  419afd:	jmp    419a87 <flatcc_emitter@@Base+0x2f7>
  419aff:	mov    edi,0xb98
  419b04:	call   4050f0 <malloc@plt>
  419b09:	test   rax,rax
  419b0c:	je     41993f <flatcc_emitter@@Base+0x1af>
  419b12:	lea    rdx,[rax+0x5c0]
  419b19:	add    QWORD PTR [rbx+0x38],0xb80
  419b21:	mov    QWORD PTR [rbx],rax
  419b24:	mov    QWORD PTR [rbx+0x8],rax
  419b28:	mov    QWORD PTR [rax+0xb80],rax
  419b2f:	mov    QWORD PTR [rax+0xb88],rax
  419b36:	mov    QWORD PTR [rbx+0x10],rdx
  419b3a:	mov    QWORD PTR [rbx+0x20],rdx
  419b3e:	mov    QWORD PTR [rbx+0x18],0x5c0
  419b46:	mov    QWORD PTR [rbx+0x28],0x5c0
  419b4e:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  419b58:	jmp    4199ee <flatcc_emitter@@Base+0x25e>
  419b5d:	nop    DWORD PTR [rax]

0000000000419b60 <flatcc_emitter_copy_buffer@@Base>:
  419b60:	push   rbp
  419b61:	push   rbx
  419b62:	sub    rsp,0x8
  419b66:	mov    r9,QWORD PTR [rdi+0x30]
  419b6a:	cmp    r9,rdx
  419b6d:	ja     419c30 <flatcc_emitter_copy_buffer@@Base+0xd0>
  419b73:	mov    rax,QWORD PTR [rdi]
  419b76:	test   rax,rax
  419b79:	je     419c30 <flatcc_emitter_copy_buffer@@Base+0xd0>
  419b7f:	cmp    rax,QWORD PTR [rdi+0x8]
  419b83:	mov    rcx,rsi
  419b86:	mov    rbx,rdi
  419b89:	je     419c40 <flatcc_emitter_copy_buffer@@Base+0xe0>
  419b8f:	mov    r8d,0xb80
  419b95:	sub    r8,QWORD PTR [rdi+0x18]
  419b99:	mov    rsi,QWORD PTR [rdi+0x10]
  419b9d:	mov    rdi,rcx
  419ba0:	mov    rbp,r8
  419ba3:	mov    rdx,r8
  419ba6:	call   4050e0 <memcpy@plt>
  419bab:	add    rbp,rax
  419bae:	mov    rax,QWORD PTR [rbx]
  419bb1:	mov    rsi,QWORD PTR [rbx+0x8]
  419bb5:	mov    rax,QWORD PTR [rax+0xb80]
  419bbc:	cmp    rax,rsi
  419bbf:	je     419c14 <flatcc_emitter_copy_buffer@@Base+0xb4>
  419bc1:	nop    DWORD PTR [rax+0x0]
  419bc8:	mov    rdx,QWORD PTR [rax]
  419bcb:	lea    rdi,[rbp+0x8]
  419bcf:	mov    rcx,rbp
  419bd2:	mov    rsi,rax
  419bd5:	add    rbp,0xb80
  419bdc:	and    rdi,0xfffffffffffffff8
  419be0:	mov    QWORD PTR [rbp-0xb80],rdx
  419be7:	mov    rdx,QWORD PTR [rax+0xb78]
  419bee:	sub    rcx,rdi
  419bf1:	sub    rsi,rcx
  419bf4:	add    ecx,0xb80
  419bfa:	shr    ecx,0x3
  419bfd:	mov    QWORD PTR [rbp-0x8],rdx
  419c01:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  419c04:	mov    rax,QWORD PTR [rax+0xb80]
  419c0b:	mov    rsi,QWORD PTR [rbx+0x8]
  419c0f:	cmp    rsi,rax
  419c12:	jne    419bc8 <flatcc_emitter_copy_buffer@@Base+0x68>
  419c14:	mov    edx,0xb80
  419c19:	sub    rdx,QWORD PTR [rbx+0x28]
  419c1d:	mov    rdi,rbp
  419c20:	call   4050e0 <memcpy@plt>
  419c25:	add    rsp,0x8
  419c29:	mov    rax,rbp
  419c2c:	pop    rbx
  419c2d:	pop    rbp
  419c2e:	ret    
  419c2f:	nop
  419c30:	xor    ebp,ebp
  419c32:	add    rsp,0x8
  419c36:	mov    rax,rbp
  419c39:	pop    rbx
  419c3a:	pop    rbp
  419c3b:	ret    
  419c3c:	nop    DWORD PTR [rax+0x0]
  419c40:	mov    rsi,QWORD PTR [rdi+0x10]
  419c44:	mov    rdx,r9
  419c47:	mov    rdi,rcx
  419c4a:	call   4050e0 <memcpy@plt>
  419c4f:	mov    rbp,rax
  419c52:	jmp    419c25 <flatcc_emitter_copy_buffer@@Base+0xc5>
  419c54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c5e:	xchg   ax,ax
  419c60:	mov    eax,0x4
  419c65:	lea    esi,[rax+rsi*2]
  419c68:	cmp    si,WORD PTR [rdi+0x1e]
  419c6c:	jae    419c98 <flatcc_emitter_copy_buffer@@Base+0x138>
  419c6e:	mov    rax,QWORD PTR [rdi+0x10]
  419c72:	movzx  esi,si
  419c75:	movzx  esi,WORD PTR [rax+rsi*1]
  419c79:	test   esi,esi
  419c7b:	je     419c98 <flatcc_emitter_copy_buffer@@Base+0x138>
  419c7d:	movzx  edx,WORD PTR [rdi+0x1c]
  419c81:	lea    r8d,[rsi+0x4]
  419c85:	mov    eax,0xd
  419c8a:	cmp    r8d,edx
  419c8d:	jbe    419cb0 <flatcc_emitter_copy_buffer@@Base+0x150>
  419c8f:	repz ret 
  419c91:	nop    DWORD PTR [rax+0x0]
  419c98:	xor    eax,eax
  419c9a:	test   edx,edx
  419c9c:	mov    DWORD PTR [rcx],0x0
  419ca2:	setne  al
  419ca5:	shl    eax,0x2
  419ca8:	ret    
  419ca9:	nop    DWORD PTR [rax+0x0]
  419cb0:	add    esi,DWORD PTR [rdi+0x18]
  419cb3:	mov    eax,0xc
  419cb8:	test   sil,0x3
  419cbc:	jne    419c8f <flatcc_emitter_copy_buffer@@Base+0x12f>
  419cbe:	mov    DWORD PTR [rcx],esi
  419cc0:	xor    eax,eax
  419cc2:	ret    
  419cc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419cce:	xchg   ax,ax

0000000000419cd0 <flatcc_verify_error_string@@Base>:
  419cd0:	cmp    edi,0x24
  419cd3:	ja     419f40 <flatcc_verify_error_string@@Base+0x270>
  419cd9:	lea    rdx,[rip+0x16498]        # 430178 <flatcc_builder_padding_base@@Base+0x698>
  419ce0:	mov    edi,edi
  419ce2:	movsxd rax,DWORD PTR [rdx+rdi*4]
  419ce6:	add    rax,rdx
  419ce9:	jmp    rax
  419ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  419cf0:	lea    rax,[rip+0x15fe9]        # 42fce0 <flatcc_builder_padding_base@@Base+0x200>
  419cf7:	ret    
  419cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  419d00:	lea    rax,[rip+0x16175]        # 42fe7c <flatcc_builder_padding_base@@Base+0x39c>
  419d07:	ret    
  419d08:	nop    DWORD PTR [rax+rax*1+0x0]
  419d10:	lea    rax,[rip+0x16439]        # 430150 <flatcc_builder_padding_base@@Base+0x670>
  419d17:	ret    
  419d18:	nop    DWORD PTR [rax+rax*1+0x0]
  419d20:	lea    rax,[rip+0x163f1]        # 430118 <flatcc_builder_padding_base@@Base+0x638>
  419d27:	ret    
  419d28:	nop    DWORD PTR [rax+rax*1+0x0]
  419d30:	lea    rax,[rip+0x163b9]        # 4300f0 <flatcc_builder_padding_base@@Base+0x610>
  419d37:	ret    
  419d38:	nop    DWORD PTR [rax+rax*1+0x0]
  419d40:	lea    rax,[rip+0x16381]        # 4300c8 <flatcc_builder_padding_base@@Base+0x5e8>
  419d47:	ret    
  419d48:	nop    DWORD PTR [rax+rax*1+0x0]
  419d50:	lea    rax,[rip+0x16110]        # 42fe67 <flatcc_builder_padding_base@@Base+0x387>
  419d57:	ret    
  419d58:	nop    DWORD PTR [rax+rax*1+0x0]
  419d60:	lea    rax,[rip+0x16339]        # 4300a0 <flatcc_builder_padding_base@@Base+0x5c0>
  419d67:	ret    
  419d68:	nop    DWORD PTR [rax+rax*1+0x0]
  419d70:	lea    rax,[rip+0x16301]        # 430078 <flatcc_builder_padding_base@@Base+0x598>
  419d77:	ret    
  419d78:	nop    DWORD PTR [rax+rax*1+0x0]
  419d80:	lea    rax,[rip+0x160c8]        # 42fe4f <flatcc_builder_padding_base@@Base+0x36f>
  419d87:	ret    
  419d88:	nop    DWORD PTR [rax+rax*1+0x0]
  419d90:	lea    rax,[rip+0x1609d]        # 42fe34 <flatcc_builder_padding_base@@Base+0x354>
  419d97:	ret    
  419d98:	nop    DWORD PTR [rax+rax*1+0x0]
  419da0:	lea    rax,[rip+0x16079]        # 42fe20 <flatcc_builder_padding_base@@Base+0x340>
  419da7:	ret    
  419da8:	nop    DWORD PTR [rax+rax*1+0x0]
  419db0:	lea    rax,[rip+0x16291]        # 430048 <flatcc_builder_padding_base@@Base+0x568>
  419db7:	ret    
  419db8:	nop    DWORD PTR [rax+rax*1+0x0]
  419dc0:	lea    rax,[rip+0x16251]        # 430018 <flatcc_builder_padding_base@@Base+0x538>
  419dc7:	ret    
  419dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  419dd0:	lea    rax,[rip+0x16211]        # 42ffe8 <flatcc_builder_padding_base@@Base+0x508>
  419dd7:	ret    
  419dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  419de0:	lea    rax,[rip+0x161c9]        # 42ffb0 <flatcc_builder_padding_base@@Base+0x4d0>
  419de7:	ret    
  419de8:	nop    DWORD PTR [rax+rax*1+0x0]
  419df0:	lea    rax,[rip+0x16189]        # 42ff80 <flatcc_builder_padding_base@@Base+0x4a0>
  419df7:	ret    
  419df8:	nop    DWORD PTR [rax+rax*1+0x0]
  419e00:	lea    rax,[rip+0x16001]        # 42fe08 <flatcc_builder_padding_base@@Base+0x328>
  419e07:	ret    
  419e08:	nop    DWORD PTR [rax+rax*1+0x0]
  419e10:	lea    rax,[rip+0x16141]        # 42ff58 <flatcc_builder_padding_base@@Base+0x478>
  419e17:	ret    
  419e18:	nop    DWORD PTR [rax+rax*1+0x0]
  419e20:	lea    rax,[rip+0x15fcd]        # 42fdf4 <flatcc_builder_padding_base@@Base+0x314>
  419e27:	ret    
  419e28:	nop    DWORD PTR [rax+rax*1+0x0]
  419e30:	lea    rax,[rip+0x160f9]        # 42ff30 <flatcc_builder_padding_base@@Base+0x450>
  419e37:	ret    
  419e38:	nop    DWORD PTR [rax+rax*1+0x0]
  419e40:	lea    rax,[rip+0x160c1]        # 42ff08 <flatcc_builder_padding_base@@Base+0x428>
  419e47:	ret    
  419e48:	nop    DWORD PTR [rax+rax*1+0x0]
  419e50:	lea    rax,[rip+0x16089]        # 42fee0 <flatcc_builder_padding_base@@Base+0x400>
  419e57:	ret    
  419e58:	nop    DWORD PTR [rax+rax*1+0x0]
  419e60:	lea    rax,[rip+0x15f73]        # 42fdda <flatcc_builder_padding_base@@Base+0x2fa>
  419e67:	ret    
  419e68:	nop    DWORD PTR [rax+rax*1+0x0]
  419e70:	lea    rax,[rip+0x15f4a]        # 42fdc1 <flatcc_builder_padding_base@@Base+0x2e1>
  419e77:	ret    
  419e78:	nop    DWORD PTR [rax+rax*1+0x0]
  419e80:	lea    rax,[rip+0x15f22]        # 42fda9 <flatcc_builder_padding_base@@Base+0x2c9>
  419e87:	ret    
  419e88:	nop    DWORD PTR [rax+rax*1+0x0]
  419e90:	lea    rax,[rip+0x15f01]        # 42fd98 <flatcc_builder_padding_base@@Base+0x2b8>
  419e97:	ret    
  419e98:	nop    DWORD PTR [rax+rax*1+0x0]
  419ea0:	lea    rax,[rip+0x15edc]        # 42fd83 <flatcc_builder_padding_base@@Base+0x2a3>
  419ea7:	ret    
  419ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  419eb0:	lea    rax,[rip+0x15eb8]        # 42fd6f <flatcc_builder_padding_base@@Base+0x28f>
  419eb7:	ret    
  419eb8:	nop    DWORD PTR [rax+rax*1+0x0]
  419ec0:	lea    rax,[rip+0x15e94]        # 42fd5b <flatcc_builder_padding_base@@Base+0x27b>
  419ec7:	ret    
  419ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  419ed0:	lea    rax,[rip+0x15e69]        # 42fd40 <flatcc_builder_padding_base@@Base+0x260>
  419ed7:	ret    
  419ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  419ee0:	lea    rax,[rip+0x15fd9]        # 42fec0 <flatcc_builder_padding_base@@Base+0x3e0>
  419ee7:	ret    
  419ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  419ef0:	lea    rax,[rip+0x15fa1]        # 42fe98 <flatcc_builder_padding_base@@Base+0x3b8>
  419ef7:	ret    
  419ef8:	nop    DWORD PTR [rax+rax*1+0x0]
  419f00:	lea    rax,[rip+0x15e22]        # 42fd29 <flatcc_builder_padding_base@@Base+0x249>
  419f07:	ret    
  419f08:	nop    DWORD PTR [rax+rax*1+0x0]
  419f10:	lea    rax,[rip+0x15df8]        # 42fd0f <flatcc_builder_padding_base@@Base+0x22f>
  419f17:	ret    
  419f18:	nop    DWORD PTR [rax+rax*1+0x0]
  419f20:	lea    rax,[rip+0x15dd4]        # 42fcfb <flatcc_builder_padding_base@@Base+0x21b>
  419f27:	ret    
  419f28:	nop    DWORD PTR [rax+rax*1+0x0]
  419f30:	lea    rax,[rip+0x15dac]        # 42fce3 <flatcc_builder_padding_base@@Base+0x203>
  419f37:	ret    
  419f38:	nop    DWORD PTR [rax+rax*1+0x0]
  419f40:	lea    rax,[rip+0x15f43]        # 42fe8a <flatcc_builder_padding_base@@Base+0x3aa>
  419f47:	ret    
  419f48:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419f50 <flatcc_verify_field@@Base>:
  419f50:	mov    eax,0x4
  419f55:	lea    esi,[rax+rsi*2]
  419f58:	xor    eax,eax
  419f5a:	cmp    si,WORD PTR [rdi+0x1e]
  419f5e:	jae    419f89 <flatcc_verify_field@@Base+0x39>
  419f60:	mov    r8,QWORD PTR [rdi+0x10]
  419f64:	movzx  esi,si
  419f67:	movzx  r8d,WORD PTR [r8+rsi*1]
  419f6c:	test   r8d,r8d
  419f6f:	je     419f89 <flatcc_verify_field@@Base+0x39>
  419f71:	movzx  r9d,WORD PTR [rdi+0x1c]
  419f76:	add    edx,r8d
  419f79:	movzx  ecx,cx
  419f7c:	mov    rsi,QWORD PTR [rdi]
  419f7f:	mov    eax,0xd
  419f84:	cmp    edx,r9d
  419f87:	jbe    419f90 <flatcc_verify_field@@Base+0x40>
  419f89:	repz ret 
  419f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  419f90:	add    esi,DWORD PTR [rdi+0x18]
  419f93:	sub    ecx,0x1
  419f96:	add    esi,r8d
  419f99:	and    ecx,esi
  419f9b:	cmp    ecx,0x1
  419f9e:	sbb    eax,eax
  419fa0:	not    eax
  419fa2:	and    eax,0xc
  419fa5:	ret    
  419fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000419fb0 <flatcc_verify_string_field@@Base>:
  419fb0:	sub    rsp,0x18
  419fb4:	movzx  esi,si
  419fb7:	mov    r9,rdi
  419fba:	lea    rcx,[rsp+0x4]
  419fbf:	mov    rax,QWORD PTR fs:0x28
  419fc8:	mov    QWORD PTR [rsp+0x8],rax
  419fcd:	xor    eax,eax
  419fcf:	call   419c60 <flatcc_emitter_copy_buffer@@Base+0x100>
  419fd4:	test   eax,eax
  419fd6:	jne    41a020 <flatcc_verify_string_field@@Base+0x70>
  419fd8:	mov    edx,DWORD PTR [rsp+0x4]
  419fdc:	test   edx,edx
  419fde:	je     41a020 <flatcc_verify_string_field@@Base+0x70>
  419fe0:	mov    rsi,QWORD PTR [rdi]
  419fe3:	mov    ecx,edx
  419fe5:	mov    edi,DWORD PTR [rsi+rcx*1]
  419fe8:	add    edi,edx
  419fea:	cmp    edx,edi
  419fec:	mov    ecx,edi
  419fee:	jae    41a038 <flatcc_verify_string_field@@Base+0x88>
  419ff0:	mov    r8d,DWORD PTR [r9+0x8]
  419ff4:	mov    edi,edi
  419ff6:	lea    r9,[rdi+0x4]
  419ffa:	cmp    r9,r8
  419ffd:	mov    rdx,r8
  41a000:	ja     41a038 <flatcc_verify_string_field@@Base+0x88>
  41a002:	test   cl,0x3
  41a005:	jne    41a038 <flatcc_verify_string_field@@Base+0x88>
  41a007:	mov    edi,DWORD PTR [rsi+rdi*1]
  41a00a:	add    ecx,0x4
  41a00d:	sub    edx,ecx
  41a00f:	lea    r8d,[rdi+0x1]
  41a013:	cmp    edx,r8d
  41a016:	jae    41a040 <flatcc_verify_string_field@@Base+0x90>
  41a018:	mov    eax,0x8
  41a01d:	nop    DWORD PTR [rax]
  41a020:	mov    rdi,QWORD PTR [rsp+0x8]
  41a025:	xor    rdi,QWORD PTR fs:0x28
  41a02e:	jne    41a051 <flatcc_verify_string_field@@Base+0xa1>
  41a030:	add    rsp,0x18
  41a034:	ret    
  41a035:	nop    DWORD PTR [rax]
  41a038:	mov    eax,0x11
  41a03d:	jmp    41a020 <flatcc_verify_string_field@@Base+0x70>
  41a03f:	nop
  41a040:	add    rcx,rsi
  41a043:	mov    edx,0x7
  41a048:	cmp    BYTE PTR [rcx+rdi*1],0x0
  41a04c:	cmovne eax,edx
  41a04f:	jmp    41a020 <flatcc_verify_string_field@@Base+0x70>
  41a051:	call   405070 <__stack_chk_fail@plt>
  41a056:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041a060 <flatcc_verify_vector_field@@Base>:
  41a060:	push   rbx
  41a061:	mov    rbx,rcx
  41a064:	movzx  esi,si
  41a067:	mov    r10,rdi
  41a06a:	mov    r11d,r8d
  41a06d:	sub    rsp,0x10
  41a071:	lea    rcx,[rsp+0x4]
  41a076:	mov    rax,QWORD PTR fs:0x28
  41a07f:	mov    QWORD PTR [rsp+0x8],rax
  41a084:	xor    eax,eax
  41a086:	call   419c60 <flatcc_emitter_copy_buffer@@Base+0x100>
  41a08b:	test   eax,eax
  41a08d:	jne    41a0f0 <flatcc_verify_vector_field@@Base+0x90>
  41a08f:	mov    edx,DWORD PTR [rsp+0x4]
  41a093:	test   edx,edx
  41a095:	je     41a0f0 <flatcc_verify_vector_field@@Base+0x90>
  41a097:	mov    rsi,QWORD PTR [rdi]
  41a09a:	mov    ecx,edx
  41a09c:	mov    edi,DWORD PTR [rsi+rcx*1]
  41a09f:	add    edi,edx
  41a0a1:	cmp    edx,edi
  41a0a3:	mov    ecx,edi
  41a0a5:	jae    41a110 <flatcc_verify_vector_field@@Base+0xb0>
  41a0a7:	mov    edx,DWORD PTR [r10+0x8]
  41a0ab:	mov    r10d,ecx
  41a0ae:	lea    r8,[r10+0x4]
  41a0b2:	cmp    r8,rdx
  41a0b5:	mov    rdi,rdx
  41a0b8:	ja     41a110 <flatcc_verify_vector_field@@Base+0xb0>
  41a0ba:	cmp    r11w,0x4
  41a0bf:	mov    edx,0x4
  41a0c4:	cmovae edx,r11d
  41a0c8:	movzx  edx,dx
  41a0cb:	sub    edx,0x1
  41a0ce:	or     edx,0x3
  41a0d1:	movsxd rdx,edx
  41a0d4:	test   rdx,r8
  41a0d7:	jne    41a110 <flatcc_verify_vector_field@@Base+0xb0>
  41a0d9:	mov    edx,DWORD PTR [rsi+r10*1]
  41a0dd:	cmp    edx,r9d
  41a0e0:	jbe    41a120 <flatcc_verify_vector_field@@Base+0xc0>
  41a0e2:	mov    eax,0x19
  41a0e7:	nop    WORD PTR [rax+rax*1+0x0]
  41a0f0:	mov    rbx,QWORD PTR [rsp+0x8]
  41a0f5:	xor    rbx,QWORD PTR fs:0x28
  41a0fe:	jne    41a134 <flatcc_verify_vector_field@@Base+0xd4>
  41a100:	add    rsp,0x10
  41a104:	pop    rbx
  41a105:	ret    
  41a106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a110:	mov    eax,0x10
  41a115:	jmp    41a0f0 <flatcc_verify_vector_field@@Base+0x90>
  41a117:	nop    WORD PTR [rax+rax*1+0x0]
  41a120:	imul   ebx,edx
  41a123:	sub    edi,0x4
  41a126:	mov    edx,0x1a
  41a12b:	sub    edi,ecx
  41a12d:	cmp    edi,ebx
  41a12f:	cmovb  eax,edx
  41a132:	jmp    41a0f0 <flatcc_verify_vector_field@@Base+0x90>
  41a134:	call   405070 <__stack_chk_fail@plt>
  41a139:	nop    DWORD PTR [rax+0x0]

000000000041a140 <flatcc_verify_string_vector_field@@Base>:
  41a140:	push   rbp
  41a141:	push   rbx
  41a142:	movzx  esi,si
  41a145:	mov    r9,rdi
  41a148:	sub    rsp,0x18
  41a14c:	lea    rcx,[rsp+0x4]
  41a151:	mov    rax,QWORD PTR fs:0x28
  41a15a:	mov    QWORD PTR [rsp+0x8],rax
  41a15f:	xor    eax,eax
  41a161:	call   419c60 <flatcc_emitter_copy_buffer@@Base+0x100>
  41a166:	test   eax,eax
  41a168:	jne    41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a16a:	mov    edx,DWORD PTR [rsp+0x4]
  41a16e:	test   edx,edx
  41a170:	je     41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a172:	mov    rsi,QWORD PTR [rdi]
  41a175:	mov    ecx,edx
  41a177:	mov    edi,DWORD PTR [rsi+rcx*1]
  41a17a:	add    edi,edx
  41a17c:	cmp    edx,edi
  41a17e:	mov    ecx,edi
  41a180:	jae    41a1e0 <flatcc_verify_string_vector_field@@Base+0xa0>
  41a182:	mov    r10d,DWORD PTR [r9+0x8]
  41a186:	mov    r9d,edi
  41a189:	lea    rbx,[r9+0x4]
  41a18d:	cmp    rbx,r10
  41a190:	mov    r11,r10
  41a193:	ja     41a1e0 <flatcc_verify_string_vector_field@@Base+0xa0>
  41a195:	test   bl,0x3
  41a198:	jne    41a1a6 <flatcc_verify_string_vector_field@@Base+0x66>
  41a19a:	mov    edi,DWORD PTR [rsi+r9*1]
  41a19e:	cmp    edi,0x3fffffff
  41a1a4:	jbe    41a1f0 <flatcc_verify_string_vector_field@@Base+0xb0>
  41a1a6:	and    ebx,0x3
  41a1a9:	jne    41a1e0 <flatcc_verify_string_vector_field@@Base+0xa0>
  41a1ab:	mov    edx,DWORD PTR [rsi+r9*1]
  41a1af:	cmp    edx,0x3fffffff
  41a1b5:	jbe    41a260 <flatcc_verify_string_vector_field@@Base+0x120>
  41a1bb:	mov    eax,0x19
  41a1c0:	mov    rdi,QWORD PTR [rsp+0x8]
  41a1c5:	xor    rdi,QWORD PTR fs:0x28
  41a1ce:	jne    41a2db <flatcc_verify_string_vector_field@@Base+0x19b>
  41a1d4:	add    rsp,0x18
  41a1d8:	pop    rbx
  41a1d9:	pop    rbp
  41a1da:	ret    
  41a1db:	nop    DWORD PTR [rax+rax*1+0x0]
  41a1e0:	mov    eax,0x10
  41a1e5:	jmp    41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a1e7:	nop    WORD PTR [rax+rax*1+0x0]
  41a1f0:	lea    edx,[rcx+0x4]
  41a1f3:	lea    r8d,[rdi*4+0x0]
  41a1fb:	mov    ebp,r11d
  41a1fe:	sub    ebp,edx
  41a200:	cmp    ebp,r8d
  41a203:	jb     41a1a6 <flatcc_verify_string_vector_field@@Base+0x66>
  41a205:	test   edi,edi
  41a207:	je     41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a209:	mov    ecx,edx
  41a20b:	mov    ebx,DWORD PTR [rsi+rcx*1]
  41a20e:	add    ebx,edx
  41a210:	cmp    edx,ebx
  41a212:	mov    ecx,ebx
  41a214:	jae    41a250 <flatcc_verify_string_vector_field@@Base+0x110>
  41a216:	mov    edi,ebx
  41a218:	lea    r9,[rdi+0x4]
  41a21c:	cmp    r10,r9
  41a21f:	jb     41a250 <flatcc_verify_string_vector_field@@Base+0x110>
  41a221:	test   bl,0x3
  41a224:	jne    41a250 <flatcc_verify_string_vector_field@@Base+0x110>
  41a226:	mov    edi,DWORD PTR [rsi+rdi*1]
  41a229:	add    ecx,0x4
  41a22c:	mov    ebx,r11d
  41a22f:	sub    ebx,ecx
  41a231:	lea    r9d,[rdi+0x1]
  41a235:	cmp    ebx,r9d
  41a238:	jae    41a27a <flatcc_verify_string_vector_field@@Base+0x13a>
  41a23a:	nop    WORD PTR [rax+rax*1+0x0]
  41a240:	mov    eax,0x8
  41a245:	jmp    41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a24a:	nop    WORD PTR [rax+rax*1+0x0]
  41a250:	mov    eax,0x11
  41a255:	jmp    41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a25a:	nop    WORD PTR [rax+rax*1+0x0]
  41a260:	sub    r11d,0x4
  41a264:	shl    edx,0x2
  41a267:	sub    r11d,ecx
  41a26a:	cmp    r11d,edx
  41a26d:	mov    edx,0x1a
  41a272:	cmovb  eax,edx
  41a275:	jmp    41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a27a:	add    r8d,edx
  41a27d:	nop    DWORD PTR [rax]
  41a280:	add    rcx,rsi
  41a283:	cmp    BYTE PTR [rcx+rdi*1],0x0
  41a287:	je     41a298 <flatcc_verify_string_vector_field@@Base+0x158>
  41a289:	mov    eax,0x7
  41a28e:	jmp    41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a293:	nop    DWORD PTR [rax+rax*1+0x0]
  41a298:	add    edx,0x4
  41a29b:	cmp    r8d,edx
  41a29e:	je     41a1c0 <flatcc_verify_string_vector_field@@Base+0x80>
  41a2a4:	mov    ecx,edx
  41a2a6:	mov    ebx,DWORD PTR [rsi+rcx*1]
  41a2a9:	add    ebx,edx
  41a2ab:	cmp    edx,ebx
  41a2ad:	mov    ecx,ebx
  41a2af:	jae    41a250 <flatcc_verify_string_vector_field@@Base+0x110>
  41a2b1:	mov    edi,ebx
  41a2b3:	lea    r9,[rdi+0x4]
  41a2b7:	cmp    r10,r9
  41a2ba:	jb     41a250 <flatcc_verify_string_vector_field@@Base+0x110>
  41a2bc:	test   bl,0x3
  41a2bf:	jne    41a250 <flatcc_verify_string_vector_field@@Base+0x110>
  41a2c1:	mov    edi,DWORD PTR [rsi+rdi*1]
  41a2c4:	add    ecx,0x4
  41a2c7:	mov    ebx,r11d
  41a2ca:	sub    ebx,ecx
  41a2cc:	lea    r9d,[rdi+0x1]
  41a2d0:	cmp    ebx,r9d
  41a2d3:	jb     41a240 <flatcc_verify_string_vector_field@@Base+0x100>
  41a2d9:	jmp    41a280 <flatcc_verify_string_vector_field@@Base+0x140>
  41a2db:	call   405070 <__stack_chk_fail@plt>

000000000041a2e0 <flatcc_verify_table_field@@Base>:
  41a2e0:	sub    rsp,0x48
  41a2e4:	mov    r10,rcx
  41a2e7:	movzx  esi,si
  41a2ea:	lea    rcx,[rsp+0xc]
  41a2ef:	mov    r9,rdi
  41a2f2:	mov    rax,QWORD PTR fs:0x28
  41a2fb:	mov    QWORD PTR [rsp+0x38],rax
  41a300:	xor    eax,eax
  41a302:	call   419c60 <flatcc_emitter_copy_buffer@@Base+0x100>
  41a307:	test   eax,eax
  41a309:	jne    41a313 <flatcc_verify_table_field@@Base+0x33>
  41a30b:	mov    edx,DWORD PTR [rsp+0xc]
  41a30f:	test   edx,edx
  41a311:	jne    41a330 <flatcc_verify_table_field@@Base+0x50>
  41a313:	mov    rdi,QWORD PTR [rsp+0x38]
  41a318:	xor    rdi,QWORD PTR fs:0x28
  41a321:	jne    41a422 <flatcc_verify_table_field@@Base+0x142>
  41a327:	add    rsp,0x48
  41a32b:	ret    
  41a32c:	nop    DWORD PTR [rax+0x0]
  41a330:	mov    ecx,DWORD PTR [r9+0xc]
  41a334:	mov    rdi,QWORD PTR [rdi]
  41a337:	mov    eax,edx
  41a339:	mov    r8d,DWORD PTR [r9+0x8]
  41a33d:	sub    ecx,0x1
  41a340:	mov    esi,DWORD PTR [rdi+rax*1]
  41a343:	mov    eax,0x3
  41a348:	test   ecx,ecx
  41a34a:	mov    DWORD PTR [rsp+0x1c],ecx
  41a34e:	je     41a313 <flatcc_verify_table_field@@Base+0x33>
  41a350:	add    esi,edx
  41a352:	mov    eax,0xf
  41a357:	cmp    edx,esi
  41a359:	jae    41a313 <flatcc_verify_table_field@@Base+0x33>
  41a35b:	mov    edx,esi
  41a35d:	mov    ecx,r8d
  41a360:	lea    r9,[rdx+0x4]
  41a364:	cmp    r9,rcx
  41a367:	ja     41a313 <flatcc_verify_table_field@@Base+0x33>
  41a369:	test   sil,0x3
  41a36d:	jne    41a313 <flatcc_verify_table_field@@Base+0x33>
  41a36f:	mov    DWORD PTR [rsp+0x28],esi
  41a373:	mov    eax,esi
  41a375:	sub    eax,DWORD PTR [rdi+rdx*1]
  41a378:	mov    edx,eax
  41a37a:	js     41a418 <flatcc_verify_table_field@@Base+0x138>
  41a380:	test   dl,0x1
  41a383:	jne    41a418 <flatcc_verify_table_field@@Base+0x138>
  41a389:	mov    r9d,edx
  41a38c:	mov    eax,0x1b
  41a391:	lea    r11,[r9+0x2]
  41a395:	cmp    rcx,r11
  41a398:	jb     41a313 <flatcc_verify_table_field@@Base+0x33>
  41a39e:	add    r9,rdi
  41a3a1:	mov    eax,0x1e
  41a3a6:	movzx  r11d,WORD PTR [r9]
  41a3aa:	mov    ecx,r11d
  41a3ad:	mov    WORD PTR [rsp+0x2e],r11w
  41a3b3:	add    r11d,edx
  41a3b6:	cmp    r8d,r11d
  41a3b9:	jb     41a313 <flatcc_verify_table_field@@Base+0x33>
  41a3bf:	test   cl,0x1
  41a3c2:	jne    41a313 <flatcc_verify_table_field@@Base+0x33>
  41a3c8:	cmp    cx,0x3
  41a3cc:	mov    eax,0x1c
  41a3d1:	jbe    41a313 <flatcc_verify_table_field@@Base+0x33>
  41a3d7:	lea    eax,[rdx+0x2]
  41a3da:	mov    ecx,r8d
  41a3dd:	sub    ecx,esi
  41a3df:	movzx  edx,WORD PTR [rdi+rax*1]
  41a3e3:	mov    eax,0x14
  41a3e8:	cmp    ecx,edx
  41a3ea:	mov    WORD PTR [rsp+0x2c],dx
  41a3ef:	jb     41a313 <flatcc_verify_table_field@@Base+0x33>
  41a3f5:	mov    QWORD PTR [rsp+0x10],rdi
  41a3fa:	mov    QWORD PTR [rsp+0x20],r9
  41a3ff:	lea    rdi,[rsp+0x10]
  41a404:	mov    DWORD PTR [rsp+0x18],r8d
  41a409:	call   r10
  41a40c:	jmp    41a313 <flatcc_verify_table_field@@Base+0x33>
  41a411:	nop    DWORD PTR [rax+0x0]
  41a418:	mov    eax,0x1d
  41a41d:	jmp    41a313 <flatcc_verify_table_field@@Base+0x33>
  41a422:	call   405070 <__stack_chk_fail@plt>
  41a427:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a430 <flatcc_verify_table_vector_field@@Base>:
  41a430:	push   r15
  41a432:	push   r14
  41a434:	movzx  esi,si
  41a437:	push   r13
  41a439:	push   r12
  41a43b:	mov    r12,rcx
  41a43e:	push   rbp
  41a43f:	push   rbx
  41a440:	mov    r9,rdi
  41a443:	sub    rsp,0x68
  41a447:	lea    rcx,[rsp+0x2c]
  41a44c:	mov    rax,QWORD PTR fs:0x28
  41a455:	mov    QWORD PTR [rsp+0x58],rax
  41a45a:	xor    eax,eax
  41a45c:	call   419c60 <flatcc_emitter_copy_buffer@@Base+0x100>
  41a461:	test   eax,eax
  41a463:	mov    ebp,eax
  41a465:	jne    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a467:	mov    eax,DWORD PTR [rsp+0x2c]
  41a46b:	test   eax,eax
  41a46d:	jne    41a498 <flatcc_verify_table_vector_field@@Base+0x68>
  41a46f:	mov    rdi,QWORD PTR [rsp+0x58]
  41a474:	xor    rdi,QWORD PTR fs:0x28
  41a47d:	mov    eax,ebp
  41a47f:	jne    41a756 <flatcc_verify_table_vector_field@@Base+0x326>
  41a485:	add    rsp,0x68
  41a489:	pop    rbx
  41a48a:	pop    rbp
  41a48b:	pop    r12
  41a48d:	pop    r13
  41a48f:	pop    r14
  41a491:	pop    r15
  41a493:	ret    
  41a494:	nop    DWORD PTR [rax+0x0]
  41a498:	mov    r14d,DWORD PTR [rdi+0xc]
  41a49c:	test   r14d,r14d
  41a49f:	jle    41a4e8 <flatcc_verify_table_vector_field@@Base+0xb8>
  41a4a1:	mov    r15,QWORD PTR [rdi]
  41a4a4:	mov    edx,eax
  41a4a6:	mov    edi,DWORD PTR [r15+rdx*1]
  41a4aa:	add    edi,eax
  41a4ac:	cmp    eax,edi
  41a4ae:	jae    41a4f0 <flatcc_verify_table_vector_field@@Base+0xc0>
  41a4b0:	mov    ecx,DWORD PTR [r9+0x8]
  41a4b4:	mov    r8d,edi
  41a4b7:	lea    r9,[r8+0x4]
  41a4bb:	cmp    r9,rcx
  41a4be:	mov    rsi,rcx
  41a4c1:	ja     41a4f0 <flatcc_verify_table_vector_field@@Base+0xc0>
  41a4c3:	test   r9b,0x3
  41a4c7:	je     41a500 <flatcc_verify_table_vector_field@@Base+0xd0>
  41a4c9:	and    r9d,0x3
  41a4cd:	jne    41a4f0 <flatcc_verify_table_vector_field@@Base+0xc0>
  41a4cf:	mov    eax,DWORD PTR [r15+r8*1]
  41a4d3:	cmp    eax,0x3fffffff
  41a4d8:	jbe    41a735 <flatcc_verify_table_vector_field@@Base+0x305>
  41a4de:	mov    ebp,0x19
  41a4e3:	jmp    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a4e5:	nop    DWORD PTR [rax]
  41a4e8:	mov    ebp,0x3
  41a4ed:	jmp    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a4ef:	nop
  41a4f0:	mov    ebp,0x10
  41a4f5:	jmp    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a4fa:	nop    WORD PTR [rax+rax*1+0x0]
  41a500:	mov    eax,DWORD PTR [r15+r8*1]
  41a504:	cmp    eax,0x3fffffff
  41a509:	ja     41a4c9 <flatcc_verify_table_vector_field@@Base+0x99>
  41a50b:	lea    ebx,[rdi+0x4]
  41a50e:	lea    edx,[rax*4+0x0]
  41a515:	mov    r10d,esi
  41a518:	sub    r10d,ebx
  41a51b:	cmp    r10d,edx
  41a51e:	jb     41a4c9 <flatcc_verify_table_vector_field@@Base+0x99>
  41a520:	test   eax,eax
  41a522:	je     41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a528:	sub    r14d,0x2
  41a52c:	mov    r13d,ebx
  41a52f:	add    r13,r15
  41a532:	test   r14d,r14d
  41a535:	mov    eax,DWORD PTR [r13+0x0]
  41a539:	mov    DWORD PTR [rsp+0x3c],r14d
  41a53e:	je     41a4e8 <flatcc_verify_table_vector_field@@Base+0xb8>
  41a540:	add    eax,ebx
  41a542:	cmp    ebx,eax
  41a544:	jae    41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a546:	mov    edi,eax
  41a548:	lea    r8,[rdi+0x4]
  41a54c:	cmp    rcx,r8
  41a54f:	jb     41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a551:	test   al,0x3
  41a553:	jne    41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a555:	lea    r8,[rsp+0x30]
  41a55a:	add    edx,ebx
  41a55c:	nop    DWORD PTR [rax+0x0]
  41a560:	mov    DWORD PTR [rsp+0x48],eax
  41a564:	mov    r11d,eax
  41a567:	sub    r11d,DWORD PTR [r15+rdi*1]
  41a56b:	mov    edi,r11d
  41a56e:	js     41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a570:	test   dil,0x1
  41a574:	jne    41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a576:	mov    r9d,edi
  41a579:	lea    r10,[r9+0x2]
  41a57d:	cmp    rcx,r10
  41a580:	jae    41a668 <flatcc_verify_table_vector_field@@Base+0x238>
  41a586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a590:	mov    eax,DWORD PTR [r13+0x0]
  41a594:	mov    ebp,0xf
  41a599:	mov    DWORD PTR [rsp+0x3c],r14d
  41a59e:	add    eax,ebx
  41a5a0:	cmp    ebx,eax
  41a5a2:	jae    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a5a8:	mov    edx,eax
  41a5aa:	lea    rdi,[rdx+0x4]
  41a5ae:	cmp    rcx,rdi
  41a5b1:	jb     41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a5b7:	test   al,0x3
  41a5b9:	jne    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a5bf:	mov    DWORD PTR [rsp+0x48],eax
  41a5c3:	mov    ebx,eax
  41a5c5:	sub    ebx,DWORD PTR [r15+rdx*1]
  41a5c9:	mov    edx,ebx
  41a5cb:	js     41a74c <flatcc_verify_table_vector_field@@Base+0x31c>
  41a5d1:	test   dl,0x1
  41a5d4:	jne    41a74c <flatcc_verify_table_vector_field@@Base+0x31c>
  41a5da:	mov    edi,edx
  41a5dc:	mov    ebp,0x1b
  41a5e1:	lea    r8,[rdi+0x2]
  41a5e5:	cmp    rcx,r8
  41a5e8:	jb     41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a5ee:	lea    rcx,[r15+rdi*1]
  41a5f2:	mov    ebp,0x1e
  41a5f7:	movzx  r8d,WORD PTR [rcx]
  41a5fb:	mov    edi,r8d
  41a5fe:	mov    WORD PTR [rsp+0x4e],r8w
  41a604:	add    r8d,edx
  41a607:	cmp    esi,r8d
  41a60a:	jb     41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a610:	test   dil,0x1
  41a614:	jne    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a61a:	cmp    di,0x3
  41a61e:	mov    ebp,0x1c
  41a623:	jbe    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a629:	add    edx,0x2
  41a62c:	mov    ebx,esi
  41a62e:	mov    ebp,0x14
  41a633:	movzx  edx,WORD PTR [r15+rdx*1]
  41a638:	sub    ebx,eax
  41a63a:	cmp    ebx,edx
  41a63c:	mov    WORD PTR [rsp+0x4c],dx
  41a641:	jb     41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a647:	mov    QWORD PTR [rsp+0x40],rcx
  41a64c:	mov    QWORD PTR [rsp+0x30],r15
  41a651:	lea    rdi,[rsp+0x30]
  41a656:	mov    DWORD PTR [rsp+0x38],esi
  41a65a:	call   r12
  41a65d:	mov    ebp,eax
  41a65f:	jmp    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a664:	nop    DWORD PTR [rax+0x0]
  41a668:	add    r9,r15
  41a66b:	movzx  r10d,WORD PTR [r9]
  41a66f:	mov    r11d,r10d
  41a672:	mov    WORD PTR [rsp+0x4e],r10w
  41a678:	add    r10d,edi
  41a67b:	cmp    esi,r10d
  41a67e:	jb     41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a684:	test   r11b,0x1
  41a688:	jne    41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a68e:	cmp    r11w,0x3
  41a693:	jbe    41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a699:	add    edi,0x2
  41a69c:	mov    r10d,esi
  41a69f:	movzx  edi,WORD PTR [r15+rdi*1]
  41a6a4:	sub    r10d,eax
  41a6a7:	cmp    r10d,edi
  41a6aa:	mov    WORD PTR [rsp+0x4c],di
  41a6af:	jb     41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a6b5:	mov    DWORD PTR [rsp+0x1c],edx
  41a6b9:	mov    QWORD PTR [rsp+0x10],rcx
  41a6be:	mov    rdi,r8
  41a6c1:	mov    DWORD PTR [rsp+0x38],esi
  41a6c5:	mov    DWORD PTR [rsp+0x18],esi
  41a6c9:	mov    QWORD PTR [rsp+0x8],r8
  41a6ce:	mov    QWORD PTR [rsp+0x40],r9
  41a6d3:	mov    QWORD PTR [rsp+0x30],r15
  41a6d8:	call   r12
  41a6db:	test   eax,eax
  41a6dd:	mov    r8,QWORD PTR [rsp+0x8]
  41a6e2:	mov    esi,DWORD PTR [rsp+0x18]
  41a6e6:	mov    rcx,QWORD PTR [rsp+0x10]
  41a6eb:	mov    edx,DWORD PTR [rsp+0x1c]
  41a6ef:	jne    41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a6f5:	add    ebx,0x4
  41a6f8:	cmp    ebx,edx
  41a6fa:	je     41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a700:	mov    r13d,ebx
  41a703:	add    r13,r15
  41a706:	mov    eax,DWORD PTR [r13+0x0]
  41a70a:	mov    DWORD PTR [rsp+0x3c],r14d
  41a70f:	add    eax,ebx
  41a711:	cmp    ebx,eax
  41a713:	jae    41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a719:	mov    edi,eax
  41a71b:	lea    r9,[rdi+0x4]
  41a71f:	cmp    rcx,r9
  41a722:	jb     41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a728:	test   al,0x3
  41a72a:	je     41a560 <flatcc_verify_table_vector_field@@Base+0x130>
  41a730:	jmp    41a590 <flatcc_verify_table_vector_field@@Base+0x160>
  41a735:	sub    esi,0x4
  41a738:	shl    eax,0x2
  41a73b:	sub    esi,edi
  41a73d:	cmp    esi,eax
  41a73f:	mov    eax,0x1a
  41a744:	cmovb  ebp,eax
  41a747:	jmp    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a74c:	mov    ebp,0x1d
  41a751:	jmp    41a46f <flatcc_verify_table_vector_field@@Base+0x3f>
  41a756:	call   405070 <__stack_chk_fail@plt>
  41a75b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a760 <flatcc_verify_union_table@@Base>:
  41a760:	sub    rsp,0x38
  41a764:	mov    edx,DWORD PTR [rdi+0xc]
  41a767:	mov    r8d,DWORD PTR [rdi+0x18]
  41a76b:	mov    rax,QWORD PTR fs:0x28
  41a774:	mov    QWORD PTR [rsp+0x28],rax
  41a779:	xor    eax,eax
  41a77b:	mov    ecx,DWORD PTR [rdi+0x14]
  41a77e:	mov    r10d,DWORD PTR [rdi+0x8]
  41a782:	mov    eax,0x3
  41a787:	sub    edx,0x1
  41a78a:	mov    r9,QWORD PTR [rdi]
  41a78d:	test   edx,edx
  41a78f:	mov    DWORD PTR [rsp+0xc],edx
  41a793:	jne    41a7b0 <flatcc_verify_union_table@@Base+0x50>
  41a795:	mov    rsi,QWORD PTR [rsp+0x28]
  41a79a:	xor    rsi,QWORD PTR fs:0x28
  41a7a3:	jne    41a87a <flatcc_verify_union_table@@Base+0x11a>
  41a7a9:	add    rsp,0x38
  41a7ad:	ret    
  41a7ae:	xchg   ax,ax
  41a7b0:	add    r8d,ecx
  41a7b3:	mov    eax,0xf
  41a7b8:	cmp    ecx,r8d
  41a7bb:	jae    41a795 <flatcc_verify_union_table@@Base+0x35>
  41a7bd:	mov    edx,r8d
  41a7c0:	mov    ecx,r10d
  41a7c3:	lea    rdi,[rdx+0x4]
  41a7c7:	cmp    rdi,rcx
  41a7ca:	ja     41a795 <flatcc_verify_union_table@@Base+0x35>
  41a7cc:	test   r8b,0x3
  41a7d0:	jne    41a795 <flatcc_verify_union_table@@Base+0x35>
  41a7d2:	mov    DWORD PTR [rsp+0x18],r8d
  41a7d7:	mov    eax,r8d
  41a7da:	sub    eax,DWORD PTR [r9+rdx*1]
  41a7de:	mov    edx,eax
  41a7e0:	js     41a870 <flatcc_verify_union_table@@Base+0x110>
  41a7e6:	test   dl,0x1
  41a7e9:	jne    41a870 <flatcc_verify_union_table@@Base+0x110>
  41a7ef:	mov    edi,edx
  41a7f1:	mov    eax,0x1b
  41a7f6:	lea    r11,[rdi+0x2]
  41a7fa:	cmp    rcx,r11
  41a7fd:	jb     41a795 <flatcc_verify_union_table@@Base+0x35>
  41a7ff:	add    rdi,r9
  41a802:	mov    eax,0x1e
  41a807:	movzx  ecx,WORD PTR [rdi]
  41a80a:	mov    r11d,ecx
  41a80d:	mov    WORD PTR [rsp+0x1e],cx
  41a812:	add    ecx,edx
  41a814:	cmp    r10d,ecx
  41a817:	jb     41a795 <flatcc_verify_union_table@@Base+0x35>
  41a81d:	test   r11b,0x1
  41a821:	jne    41a795 <flatcc_verify_union_table@@Base+0x35>
  41a827:	cmp    r11w,0x3
  41a82c:	mov    eax,0x1c
  41a831:	jbe    41a795 <flatcc_verify_union_table@@Base+0x35>
  41a837:	lea    eax,[rdx+0x2]
  41a83a:	mov    ecx,r10d
  41a83d:	sub    ecx,r8d
  41a840:	movzx  edx,WORD PTR [r9+rax*1]
  41a845:	mov    eax,0x14
  41a84a:	cmp    ecx,edx
  41a84c:	mov    WORD PTR [rsp+0x1c],dx
  41a851:	jb     41a795 <flatcc_verify_union_table@@Base+0x35>
  41a857:	mov    QWORD PTR [rsp+0x10],rdi
  41a85c:	mov    QWORD PTR [rsp],r9
  41a860:	mov    rdi,rsp
  41a863:	mov    DWORD PTR [rsp+0x8],r10d
  41a868:	call   rsi
  41a86a:	jmp    41a795 <flatcc_verify_union_table@@Base+0x35>
  41a86f:	nop
  41a870:	mov    eax,0x1d
  41a875:	jmp    41a795 <flatcc_verify_union_table@@Base+0x35>
  41a87a:	call   405070 <__stack_chk_fail@plt>
  41a87f:	nop

000000000041a880 <flatcc_verify_union_struct@@Base>:
  41a880:	mov    ecx,DWORD PTR [rdi+0x18]
  41a883:	mov    r8d,DWORD PTR [rdi+0x14]
  41a887:	mov    eax,0x12
  41a88c:	mov    edi,DWORD PTR [rdi+0x8]
  41a88f:	test   ecx,ecx
  41a891:	jne    41a898 <flatcc_verify_union_struct@@Base+0x18>
  41a893:	repz ret 
  41a895:	nop    DWORD PTR [rax]
  41a898:	add    ecx,r8d
  41a89b:	cmp    edi,ecx
  41a89d:	jb     41a893 <flatcc_verify_union_struct@@Base+0x13>
  41a89f:	add    esi,ecx
  41a8a1:	jb     41a8bf <flatcc_verify_union_struct@@Base+0x3f>
  41a8a3:	cmp    edi,esi
  41a8a5:	mov    eax,0x9
  41a8aa:	jb     41a893 <flatcc_verify_union_struct@@Base+0x13>
  41a8ac:	movzx  eax,dx
  41a8af:	sub    eax,0x1
  41a8b2:	and    ecx,eax
  41a8b4:	cmp    ecx,0x1
  41a8b7:	sbb    eax,eax
  41a8b9:	not    eax
  41a8bb:	and    eax,0xb
  41a8be:	ret    
  41a8bf:	mov    eax,0xa
  41a8c4:	ret    
  41a8c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041a8d0 <flatcc_verify_union_string@@Base>:
  41a8d0:	mov    ecx,DWORD PTR [rdi+0x14]
  41a8d3:	mov    edx,DWORD PTR [rdi+0x18]
  41a8d6:	mov    eax,0x11
  41a8db:	add    edx,ecx
  41a8dd:	cmp    ecx,edx
  41a8df:	jae    41a911 <flatcc_verify_union_string@@Base+0x41>
  41a8e1:	mov    r8d,DWORD PTR [rdi+0x8]
  41a8e5:	mov    esi,edx
  41a8e7:	lea    r9,[rsi+0x4]
  41a8eb:	cmp    r9,r8
  41a8ee:	mov    rcx,r8
  41a8f1:	ja     41a911 <flatcc_verify_union_string@@Base+0x41>
  41a8f3:	test   dl,0x3
  41a8f6:	jne    41a918 <flatcc_verify_union_string@@Base+0x48>
  41a8f8:	mov    rdi,QWORD PTR [rdi]
  41a8fb:	add    edx,0x4
  41a8fe:	mov    eax,0x8
  41a903:	sub    ecx,edx
  41a905:	mov    esi,DWORD PTR [rdi+rsi*1]
  41a908:	lea    r8d,[rsi+0x1]
  41a90c:	cmp    ecx,r8d
  41a90f:	jae    41a920 <flatcc_verify_union_string@@Base+0x50>
  41a911:	repz ret 
  41a913:	nop    DWORD PTR [rax+rax*1+0x0]
  41a918:	repz ret 
  41a91a:	nop    WORD PTR [rax+rax*1+0x0]
  41a920:	add    rdx,rdi
  41a923:	add    rdx,rsi
  41a926:	cmp    BYTE PTR [rdx],0x1
  41a929:	sbb    eax,eax
  41a92b:	not    eax
  41a92d:	and    eax,0x7
  41a930:	ret    
  41a931:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a93c:	nop    DWORD PTR [rax+0x0]

000000000041a940 <flatcc_verify_buffer_header@@Base>:
  41a940:	push   rbx
  41a941:	sub    rsp,0x10
  41a945:	mov    rax,QWORD PTR fs:0x28
  41a94e:	mov    QWORD PTR [rsp+0x8],rax
  41a953:	xor    eax,eax
  41a955:	test   dil,0x3
  41a959:	mov    eax,0x5
  41a95e:	je     41a980 <flatcc_verify_buffer_header@@Base+0x40>
  41a960:	mov    rcx,QWORD PTR [rsp+0x8]
  41a965:	xor    rcx,QWORD PTR fs:0x28
  41a96e:	jne    41a9d5 <flatcc_verify_buffer_header@@Base+0x95>
  41a970:	add    rsp,0x10
  41a974:	pop    rbx
  41a975:	ret    
  41a976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a980:	mov    rcx,rdx
  41a983:	mov    edx,0xfffffff7
  41a988:	mov    eax,0x6
  41a98d:	cmp    rsi,rdx
  41a990:	ja     41a960 <flatcc_verify_buffer_header@@Base+0x20>
  41a992:	cmp    rsi,0x7
  41a996:	mov    eax,0x1
  41a99b:	jbe    41a960 <flatcc_verify_buffer_header@@Base+0x20>
  41a99d:	test   rcx,rcx
  41a9a0:	je     41a9d1 <flatcc_verify_buffer_header@@Base+0x91>
  41a9a2:	mov    rbx,rdi
  41a9a5:	lea    rdi,[rsp+0x4]
  41a9aa:	mov    edx,0x4
  41a9af:	mov    rsi,rcx
  41a9b2:	mov    DWORD PTR [rsp+0x4],0x0
  41a9ba:	call   405040 <strncpy@plt>
  41a9bf:	mov    edx,DWORD PTR [rsp+0x4]
  41a9c3:	cmp    DWORD PTR [rbx+0x4],edx
  41a9c6:	je     41a9d1 <flatcc_verify_buffer_header@@Base+0x91>
  41a9c8:	test   edx,edx
  41a9ca:	mov    eax,0x2
  41a9cf:	jne    41a960 <flatcc_verify_buffer_header@@Base+0x20>
  41a9d1:	xor    eax,eax
  41a9d3:	jmp    41a960 <flatcc_verify_buffer_header@@Base+0x20>
  41a9d5:	call   405070 <__stack_chk_fail@plt>
  41a9da:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a9e0 <flatcc_verify_typed_buffer_header@@Base>:
  41a9e0:	test   dil,0x3
  41a9e4:	mov    eax,0x5
  41a9e9:	je     41a9f0 <flatcc_verify_typed_buffer_header@@Base+0x10>
  41a9eb:	repz ret 
  41a9ed:	nop    DWORD PTR [rax]
  41a9f0:	mov    ecx,0xfffffff7
  41a9f5:	mov    eax,0x6
  41a9fa:	cmp    rsi,rcx
  41a9fd:	ja     41a9eb <flatcc_verify_typed_buffer_header@@Base+0xb>
  41a9ff:	cmp    rsi,0x7
  41aa03:	mov    eax,0x1
  41aa08:	jbe    41a9eb <flatcc_verify_typed_buffer_header@@Base+0xb>
  41aa0a:	xor    eax,eax
  41aa0c:	test   edx,edx
  41aa0e:	je     41a9eb <flatcc_verify_typed_buffer_header@@Base+0xb>
  41aa10:	xor    eax,eax
  41aa12:	cmp    edx,DWORD PTR [rdi+0x4]
  41aa15:	setne  al
  41aa18:	add    eax,eax
  41aa1a:	ret    
  41aa1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041aa20 <flatcc_verify_struct_as_root@@Base>:
  41aa20:	push   r14
  41aa22:	push   r13
  41aa24:	mov    r14d,r8d
  41aa27:	push   r12
  41aa29:	push   rbp
  41aa2a:	mov    r12,rdx
  41aa2d:	push   rbx
  41aa2e:	mov    rbp,rdi
  41aa31:	mov    rbx,rsi
  41aa34:	mov    r13,rcx
  41aa37:	call   41a940 <flatcc_verify_buffer_header@@Base>
  41aa3c:	test   eax,eax
  41aa3e:	jne    41aa60 <flatcc_verify_struct_as_root@@Base+0x40>
  41aa40:	mov    edx,DWORD PTR [rbp+0x0]
  41aa43:	cmp    edx,ebx
  41aa45:	ja     41aa4b <flatcc_verify_struct_as_root@@Base+0x2b>
  41aa47:	test   edx,edx
  41aa49:	jne    41aa80 <flatcc_verify_struct_as_root@@Base+0x60>
  41aa4b:	mov    eax,0x12
  41aa50:	pop    rbx
  41aa51:	pop    rbp
  41aa52:	pop    r12
  41aa54:	pop    r13
  41aa56:	pop    r14
  41aa58:	ret    
  41aa59:	nop    DWORD PTR [rax+0x0]
  41aa60:	mov    rdx,r12
  41aa63:	mov    rsi,rbx
  41aa66:	mov    rdi,rbp
  41aa69:	pop    rbx
  41aa6a:	pop    rbp
  41aa6b:	pop    r12
  41aa6d:	pop    r13
  41aa6f:	pop    r14
  41aa71:	jmp    41a940 <flatcc_verify_buffer_header@@Base>
  41aa76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41aa80:	add    r13d,edx
  41aa83:	jb     41aaab <flatcc_verify_struct_as_root@@Base+0x8b>
  41aa85:	cmp    ebx,r13d
  41aa88:	jae    41aa98 <flatcc_verify_struct_as_root@@Base+0x78>
  41aa8a:	mov    eax,0x9
  41aa8f:	jmp    41aa50 <flatcc_verify_struct_as_root@@Base+0x30>
  41aa91:	nop    DWORD PTR [rax+0x0]
  41aa98:	movzx  ecx,r14w
  41aa9c:	sub    ecx,0x1
  41aa9f:	test   ecx,edx
  41aaa1:	mov    edx,0xb
  41aaa6:	cmovne eax,edx
  41aaa9:	jmp    41aa50 <flatcc_verify_struct_as_root@@Base+0x30>
  41aaab:	mov    eax,0xa
  41aab0:	jmp    41aa50 <flatcc_verify_struct_as_root@@Base+0x30>
  41aab2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41aabd:	nop    DWORD PTR [rax]

000000000041aac0 <flatcc_verify_struct_as_typed_root@@Base>:
  41aac0:	push   r14
  41aac2:	push   r13
  41aac4:	mov    r14d,r8d
  41aac7:	push   r12
  41aac9:	push   rbp
  41aaca:	mov    r12d,edx
  41aacd:	push   rbx
  41aace:	mov    rbp,rdi
  41aad1:	mov    rbx,rsi
  41aad4:	mov    r13,rcx
  41aad7:	call   41a9e0 <flatcc_verify_typed_buffer_header@@Base>
  41aadc:	test   eax,eax
  41aade:	jne    41ab00 <flatcc_verify_struct_as_typed_root@@Base+0x40>
  41aae0:	mov    edx,DWORD PTR [rbp+0x0]
  41aae3:	cmp    edx,ebx
  41aae5:	ja     41aaeb <flatcc_verify_struct_as_typed_root@@Base+0x2b>
  41aae7:	test   edx,edx
  41aae9:	jne    41ab20 <flatcc_verify_struct_as_typed_root@@Base+0x60>
  41aaeb:	mov    eax,0x12
  41aaf0:	pop    rbx
  41aaf1:	pop    rbp
  41aaf2:	pop    r12
  41aaf4:	pop    r13
  41aaf6:	pop    r14
  41aaf8:	ret    
  41aaf9:	nop    DWORD PTR [rax+0x0]
  41ab00:	mov    edx,r12d
  41ab03:	mov    rsi,rbx
  41ab06:	mov    rdi,rbp
  41ab09:	pop    rbx
  41ab0a:	pop    rbp
  41ab0b:	pop    r12
  41ab0d:	pop    r13
  41ab0f:	pop    r14
  41ab11:	jmp    41a9e0 <flatcc_verify_typed_buffer_header@@Base>
  41ab16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ab20:	add    r13d,edx
  41ab23:	jb     41ab4b <flatcc_verify_struct_as_typed_root@@Base+0x8b>
  41ab25:	cmp    ebx,r13d
  41ab28:	jae    41ab38 <flatcc_verify_struct_as_typed_root@@Base+0x78>
  41ab2a:	mov    eax,0x9
  41ab2f:	jmp    41aaf0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  41ab31:	nop    DWORD PTR [rax+0x0]
  41ab38:	movzx  ecx,r14w
  41ab3c:	sub    ecx,0x1
  41ab3f:	test   ecx,edx
  41ab41:	mov    edx,0xb
  41ab46:	cmovne eax,edx
  41ab49:	jmp    41aaf0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  41ab4b:	mov    eax,0xa
  41ab50:	jmp    41aaf0 <flatcc_verify_struct_as_typed_root@@Base+0x30>
  41ab52:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ab5d:	nop    DWORD PTR [rax]

000000000041ab60 <flatcc_verify_table_as_root@@Base>:
  41ab60:	push   r14
  41ab62:	push   r13
  41ab64:	mov    r13,rsi
  41ab67:	push   r12
  41ab69:	push   rbp
  41ab6a:	mov    ebp,esi
  41ab6c:	push   rbx
  41ab6d:	mov    rsi,rbp
  41ab70:	mov    rbx,rdi
  41ab73:	mov    r12,rdx
  41ab76:	mov    r14,rcx
  41ab79:	sub    rsp,0x30
  41ab7d:	mov    rax,QWORD PTR fs:0x28
  41ab86:	mov    QWORD PTR [rsp+0x28],rax
  41ab8b:	xor    eax,eax
  41ab8d:	call   41a940 <flatcc_verify_buffer_header@@Base>
  41ab92:	test   eax,eax
  41ab94:	jne    41abe8 <flatcc_verify_table_as_root@@Base+0x88>
  41ab96:	mov    edx,DWORD PTR [rbx]
  41ab98:	mov    DWORD PTR [rsp+0xc],0x63
  41aba0:	mov    eax,0xf
  41aba5:	test   edx,edx
  41aba7:	je     41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41aba9:	mov    ecx,edx
  41abab:	lea    rsi,[rcx+0x4]
  41abaf:	cmp    rbp,rsi
  41abb2:	jb     41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41abb4:	test   dl,0x3
  41abb7:	je     41ac00 <flatcc_verify_table_as_root@@Base+0xa0>
  41abb9:	nop    DWORD PTR [rax+0x0]
  41abc0:	mov    rcx,QWORD PTR [rsp+0x28]
  41abc5:	xor    rcx,QWORD PTR fs:0x28
  41abce:	jne    41acaa <flatcc_verify_table_as_root@@Base+0x14a>
  41abd4:	add    rsp,0x30
  41abd8:	pop    rbx
  41abd9:	pop    rbp
  41abda:	pop    r12
  41abdc:	pop    r13
  41abde:	pop    r14
  41abe0:	ret    
  41abe1:	nop    DWORD PTR [rax+0x0]
  41abe8:	mov    rdx,r12
  41abeb:	mov    rsi,rbp
  41abee:	mov    rdi,rbx
  41abf1:	call   41a940 <flatcc_verify_buffer_header@@Base>
  41abf6:	jmp    41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41abf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac00:	mov    eax,edx
  41ac02:	sub    eax,DWORD PTR [rbx+rcx*1]
  41ac05:	mov    DWORD PTR [rsp+0x18],edx
  41ac09:	mov    ecx,eax
  41ac0b:	js     41aca0 <flatcc_verify_table_as_root@@Base+0x140>
  41ac11:	test   cl,0x1
  41ac14:	jne    41aca0 <flatcc_verify_table_as_root@@Base+0x140>
  41ac1a:	mov    esi,ecx
  41ac1c:	mov    eax,0x1b
  41ac21:	lea    rdi,[rsi+0x2]
  41ac25:	cmp    rbp,rdi
  41ac28:	jb     41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41ac2a:	add    rsi,rbx
  41ac2d:	mov    eax,0x1e
  41ac32:	movzx  edi,WORD PTR [rsi]
  41ac35:	mov    r8d,edi
  41ac38:	mov    WORD PTR [rsp+0x1e],di
  41ac3d:	add    edi,ecx
  41ac3f:	cmp    r13d,edi
  41ac42:	jb     41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41ac48:	test   r8b,0x1
  41ac4c:	jne    41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41ac52:	cmp    r8w,0x3
  41ac57:	mov    eax,0x1c
  41ac5c:	jbe    41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41ac62:	lea    eax,[rcx+0x2]
  41ac65:	mov    ecx,r13d
  41ac68:	sub    ecx,edx
  41ac6a:	movzx  eax,WORD PTR [rbx+rax*1]
  41ac6e:	movzx  edx,ax
  41ac71:	mov    WORD PTR [rsp+0x1c],ax
  41ac76:	mov    eax,0x14
  41ac7b:	cmp    ecx,edx
  41ac7d:	jb     41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41ac83:	mov    QWORD PTR [rsp+0x10],rsi
  41ac88:	mov    QWORD PTR [rsp],rbx
  41ac8c:	mov    rdi,rsp
  41ac8f:	mov    DWORD PTR [rsp+0x8],r13d
  41ac94:	call   r14
  41ac97:	jmp    41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41ac9c:	nop    DWORD PTR [rax+0x0]
  41aca0:	mov    eax,0x1d
  41aca5:	jmp    41abc0 <flatcc_verify_table_as_root@@Base+0x60>
  41acaa:	call   405070 <__stack_chk_fail@plt>
  41acaf:	nop

000000000041acb0 <flatcc_verify_table_as_typed_root@@Base>:
  41acb0:	push   r14
  41acb2:	push   r13
  41acb4:	mov    r13,rsi
  41acb7:	push   r12
  41acb9:	push   rbp
  41acba:	mov    ebp,esi
  41acbc:	push   rbx
  41acbd:	mov    rsi,rbp
  41acc0:	mov    rbx,rdi
  41acc3:	mov    r12d,edx
  41acc6:	mov    r14,rcx
  41acc9:	sub    rsp,0x30
  41accd:	mov    rax,QWORD PTR fs:0x28
  41acd6:	mov    QWORD PTR [rsp+0x28],rax
  41acdb:	xor    eax,eax
  41acdd:	call   41a9e0 <flatcc_verify_typed_buffer_header@@Base>
  41ace2:	test   eax,eax
  41ace4:	jne    41ad38 <flatcc_verify_table_as_typed_root@@Base+0x88>
  41ace6:	mov    edx,DWORD PTR [rbx]
  41ace8:	mov    DWORD PTR [rsp+0xc],0x63
  41acf0:	mov    eax,0xf
  41acf5:	test   edx,edx
  41acf7:	je     41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41acf9:	mov    ecx,edx
  41acfb:	lea    rsi,[rcx+0x4]
  41acff:	cmp    rbp,rsi
  41ad02:	jb     41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41ad04:	test   dl,0x3
  41ad07:	je     41ad50 <flatcc_verify_table_as_typed_root@@Base+0xa0>
  41ad09:	nop    DWORD PTR [rax+0x0]
  41ad10:	mov    rcx,QWORD PTR [rsp+0x28]
  41ad15:	xor    rcx,QWORD PTR fs:0x28
  41ad1e:	jne    41adfa <flatcc_verify_table_as_typed_root@@Base+0x14a>
  41ad24:	add    rsp,0x30
  41ad28:	pop    rbx
  41ad29:	pop    rbp
  41ad2a:	pop    r12
  41ad2c:	pop    r13
  41ad2e:	pop    r14
  41ad30:	ret    
  41ad31:	nop    DWORD PTR [rax+0x0]
  41ad38:	mov    edx,r12d
  41ad3b:	mov    rsi,rbp
  41ad3e:	mov    rdi,rbx
  41ad41:	call   41a9e0 <flatcc_verify_typed_buffer_header@@Base>
  41ad46:	jmp    41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41ad48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad50:	mov    eax,edx
  41ad52:	sub    eax,DWORD PTR [rbx+rcx*1]
  41ad55:	mov    DWORD PTR [rsp+0x18],edx
  41ad59:	mov    ecx,eax
  41ad5b:	js     41adf0 <flatcc_verify_table_as_typed_root@@Base+0x140>
  41ad61:	test   cl,0x1
  41ad64:	jne    41adf0 <flatcc_verify_table_as_typed_root@@Base+0x140>
  41ad6a:	mov    esi,ecx
  41ad6c:	mov    eax,0x1b
  41ad71:	lea    rdi,[rsi+0x2]
  41ad75:	cmp    rbp,rdi
  41ad78:	jb     41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41ad7a:	add    rsi,rbx
  41ad7d:	mov    eax,0x1e
  41ad82:	movzx  edi,WORD PTR [rsi]
  41ad85:	mov    r8d,edi
  41ad88:	mov    WORD PTR [rsp+0x1e],di
  41ad8d:	add    edi,ecx
  41ad8f:	cmp    r13d,edi
  41ad92:	jb     41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41ad98:	test   r8b,0x1
  41ad9c:	jne    41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41ada2:	cmp    r8w,0x3
  41ada7:	mov    eax,0x1c
  41adac:	jbe    41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41adb2:	lea    eax,[rcx+0x2]
  41adb5:	mov    ecx,r13d
  41adb8:	sub    ecx,edx
  41adba:	movzx  eax,WORD PTR [rbx+rax*1]
  41adbe:	movzx  edx,ax
  41adc1:	mov    WORD PTR [rsp+0x1c],ax
  41adc6:	mov    eax,0x14
  41adcb:	cmp    ecx,edx
  41adcd:	jb     41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41add3:	mov    QWORD PTR [rsp+0x10],rsi
  41add8:	mov    QWORD PTR [rsp],rbx
  41addc:	mov    rdi,rsp
  41addf:	mov    DWORD PTR [rsp+0x8],r13d
  41ade4:	call   r14
  41ade7:	jmp    41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41adec:	nop    DWORD PTR [rax+0x0]
  41adf0:	mov    eax,0x1d
  41adf5:	jmp    41ad10 <flatcc_verify_table_as_typed_root@@Base+0x60>
  41adfa:	call   405070 <__stack_chk_fail@plt>
  41adff:	nop

000000000041ae00 <flatcc_verify_struct_as_nested_root@@Base>:
  41ae00:	push   r15
  41ae02:	push   r14
  41ae04:	mov    r14,r8
  41ae07:	push   r13
  41ae09:	push   r12
  41ae0b:	movzx  r12d,r9w
  41ae0f:	push   rbp
  41ae10:	push   rbx
  41ae11:	movzx  ebx,si
  41ae14:	mov    r13d,r9d
  41ae17:	mov    r8d,0x1
  41ae1d:	mov    r9d,0xffffffff
  41ae23:	sub    rsp,0x18
  41ae27:	mov    esi,ebx
  41ae29:	mov    r15,rdi
  41ae2c:	mov    QWORD PTR [rsp+0x8],rcx
  41ae31:	mov    rcx,r12
  41ae34:	mov    ebp,edx
  41ae36:	call   41a060 <flatcc_verify_vector_field@@Base>
  41ae3b:	test   eax,eax
  41ae3d:	jne    41ae98 <flatcc_verify_struct_as_nested_root@@Base+0x98>
  41ae3f:	add    ebx,0x2
  41ae42:	add    ebx,ebx
  41ae44:	cmp    bx,WORD PTR [r15+0x1e]
  41ae49:	jae    41aec8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  41ae4b:	mov    rax,QWORD PTR [r15+0x10]
  41ae4f:	movzx  ebx,bx
  41ae52:	movzx  eax,WORD PTR [rax+rbx*1]
  41ae56:	test   ax,ax
  41ae59:	je     41aec8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  41ae5b:	mov    edi,DWORD PTR [r15+0x18]
  41ae5f:	add    rdi,rax
  41ae62:	add    rdi,QWORD PTR [r15]
  41ae65:	je     41aec8 <flatcc_verify_struct_as_nested_root@@Base+0xc8>
  41ae67:	mov    eax,DWORD PTR [rdi]
  41ae69:	mov    rdx,QWORD PTR [rsp+0x8]
  41ae6e:	movzx  r8d,r13w
  41ae72:	mov    rcx,r14
  41ae75:	add    rdi,rax
  41ae78:	mov    esi,DWORD PTR [rdi]
  41ae7a:	add    rsp,0x18
  41ae7e:	add    rdi,0x4
  41ae82:	pop    rbx
  41ae83:	pop    rbp
  41ae84:	pop    r12
  41ae86:	pop    r13
  41ae88:	pop    r14
  41ae8a:	pop    r15
  41ae8c:	jmp    41aa20 <flatcc_verify_struct_as_root@@Base>
  41ae91:	nop    DWORD PTR [rax+0x0]
  41ae98:	add    rsp,0x18
  41ae9c:	mov    rcx,r12
  41ae9f:	mov    edx,ebp
  41aea1:	mov    esi,ebx
  41aea3:	mov    rdi,r15
  41aea6:	mov    r9d,0xffffffff
  41aeac:	pop    rbx
  41aead:	pop    rbp
  41aeae:	pop    r12
  41aeb0:	pop    r13
  41aeb2:	pop    r14
  41aeb4:	pop    r15
  41aeb6:	mov    r8d,0x1
  41aebc:	jmp    41a060 <flatcc_verify_vector_field@@Base>
  41aec1:	nop    DWORD PTR [rax+0x0]
  41aec8:	add    rsp,0x18
  41aecc:	xor    eax,eax
  41aece:	pop    rbx
  41aecf:	pop    rbp
  41aed0:	pop    r12
  41aed2:	pop    r13
  41aed4:	pop    r14
  41aed6:	pop    r15
  41aed8:	ret    
  41aed9:	nop    DWORD PTR [rax+0x0]

000000000041aee0 <flatcc_verify_table_as_nested_root@@Base>:
  41aee0:	push   r15
  41aee2:	push   r14
  41aee4:	movzx  r14d,r8w
  41aee8:	push   r13
  41aeea:	push   r12
  41aeec:	mov    r8d,0x1
  41aef2:	push   rbp
  41aef3:	push   rbx
  41aef4:	movzx  ebx,si
  41aef7:	mov    r12,rcx
  41aefa:	mov    esi,ebx
  41aefc:	mov    rcx,r14
  41aeff:	sub    rsp,0x48
  41af03:	mov    r15,rdi
  41af06:	mov    ebp,edx
  41af08:	mov    QWORD PTR [rsp+0x8],r9
  41af0d:	mov    r9d,0xffffffff
  41af13:	mov    rax,QWORD PTR fs:0x28
  41af1c:	mov    QWORD PTR [rsp+0x38],rax
  41af21:	xor    eax,eax
  41af23:	call   41a060 <flatcc_verify_vector_field@@Base>
  41af28:	test   eax,eax
  41af2a:	jne    41afd0 <flatcc_verify_table_as_nested_root@@Base+0xf0>
  41af30:	add    ebx,0x2
  41af33:	add    ebx,ebx
  41af35:	cmp    bx,WORD PTR [r15+0x1e]
  41af3a:	jae    41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41af3c:	mov    rdx,QWORD PTR [r15+0x10]
  41af40:	movzx  ebx,bx
  41af43:	movzx  edx,WORD PTR [rdx+rbx*1]
  41af47:	test   dx,dx
  41af4a:	je     41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41af4c:	mov    ebx,DWORD PTR [r15+0x18]
  41af50:	add    rbx,rdx
  41af53:	add    rbx,QWORD PTR [r15]
  41af56:	je     41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41af58:	mov    eax,DWORD PTR [rbx]
  41af5a:	mov    rdx,r12
  41af5d:	add    rbx,rax
  41af60:	mov    r14d,DWORD PTR [rbx]
  41af63:	lea    r13,[rbx+0x4]
  41af67:	mov    rdi,r13
  41af6a:	mov    rsi,r14
  41af6d:	mov    rbp,r14
  41af70:	call   41a940 <flatcc_verify_buffer_header@@Base>
  41af75:	test   eax,eax
  41af77:	jne    41afb8 <flatcc_verify_table_as_nested_root@@Base+0xd8>
  41af79:	mov    edx,DWORD PTR [r15+0xc]
  41af7d:	mov    esi,DWORD PTR [rbx+0x4]
  41af80:	mov    eax,0x3
  41af85:	sub    edx,0x1
  41af88:	test   edx,edx
  41af8a:	mov    DWORD PTR [rsp+0x1c],edx
  41af8e:	jne    41aff0 <flatcc_verify_table_as_nested_root@@Base+0x110>
  41af90:	mov    rcx,QWORD PTR [rsp+0x38]
  41af95:	xor    rcx,QWORD PTR fs:0x28
  41af9e:	jne    41b0c2 <flatcc_verify_table_as_nested_root@@Base+0x1e2>
  41afa4:	add    rsp,0x48
  41afa8:	pop    rbx
  41afa9:	pop    rbp
  41afaa:	pop    r12
  41afac:	pop    r13
  41afae:	pop    r14
  41afb0:	pop    r15
  41afb2:	ret    
  41afb3:	nop    DWORD PTR [rax+rax*1+0x0]
  41afb8:	mov    rdx,r12
  41afbb:	mov    rsi,r14
  41afbe:	mov    rdi,r13
  41afc1:	call   41a940 <flatcc_verify_buffer_header@@Base>
  41afc6:	jmp    41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41afc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41afd0:	mov    r9d,0xffffffff
  41afd6:	mov    r8d,0x1
  41afdc:	mov    rcx,r14
  41afdf:	mov    edx,ebp
  41afe1:	mov    esi,ebx
  41afe3:	mov    rdi,r15
  41afe6:	call   41a060 <flatcc_verify_vector_field@@Base>
  41afeb:	jmp    41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41afed:	nop    DWORD PTR [rax]
  41aff0:	test   esi,esi
  41aff2:	mov    eax,0xf
  41aff7:	je     41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41aff9:	mov    edx,esi
  41affb:	lea    rdi,[rdx+0x4]
  41afff:	cmp    r14,rdi
  41b002:	jb     41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b004:	test   sil,0x3
  41b008:	jne    41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b00a:	mov    DWORD PTR [rsp+0x28],esi
  41b00e:	mov    eax,esi
  41b010:	sub    eax,DWORD PTR [rbx+rdx*1+0x4]
  41b014:	mov    edx,eax
  41b016:	js     41b0b8 <flatcc_verify_table_as_nested_root@@Base+0x1d8>
  41b01c:	test   dl,0x1
  41b01f:	jne    41b0b8 <flatcc_verify_table_as_nested_root@@Base+0x1d8>
  41b025:	mov    edi,edx
  41b027:	mov    eax,0x1b
  41b02c:	lea    r8,[rdi+0x2]
  41b030:	cmp    r14,r8
  41b033:	jb     41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b039:	add    rdi,r13
  41b03c:	mov    eax,0x1e
  41b041:	movzx  r8d,WORD PTR [rdi]
  41b045:	mov    r9d,r8d
  41b048:	mov    WORD PTR [rsp+0x2e],r8w
  41b04e:	add    r8d,edx
  41b051:	cmp    ebp,r8d
  41b054:	jb     41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b05a:	test   r9b,0x1
  41b05e:	jne    41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b064:	cmp    r9w,0x3
  41b069:	mov    eax,0x1c
  41b06e:	jbe    41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b074:	lea    eax,[rdx+0x2]
  41b077:	mov    ecx,ebp
  41b079:	sub    ecx,esi
  41b07b:	movzx  edx,WORD PTR [rbx+rax*1+0x4]
  41b080:	mov    eax,0x14
  41b085:	cmp    ecx,edx
  41b087:	mov    WORD PTR [rsp+0x2c],dx
  41b08c:	jb     41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b092:	mov    QWORD PTR [rsp+0x20],rdi
  41b097:	mov    QWORD PTR [rsp+0x10],r13
  41b09c:	lea    rdi,[rsp+0x10]
  41b0a1:	mov    DWORD PTR [rsp+0x18],ebp
  41b0a5:	mov    rax,QWORD PTR [rsp+0x8]
  41b0aa:	call   rax
  41b0ac:	jmp    41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b0b1:	nop    DWORD PTR [rax+0x0]
  41b0b8:	mov    eax,0x1d
  41b0bd:	jmp    41af90 <flatcc_verify_table_as_nested_root@@Base+0xb0>
  41b0c2:	call   405070 <__stack_chk_fail@plt>
  41b0c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b0d0 <flatcc_verify_union_field@@Base>:
  41b0d0:	push   rbx
  41b0d1:	mov    r10,rcx
  41b0d4:	mov    r9,rdi
  41b0d7:	sub    rsp,0x40
  41b0db:	movzx  ecx,WORD PTR [rdi+0x1e]
  41b0df:	mov    rax,QWORD PTR fs:0x28
  41b0e8:	mov    QWORD PTR [rsp+0x38],rax
  41b0ed:	xor    eax,eax
  41b0ef:	lea    eax,[rsi+rsi*1]
  41b0f2:	add    eax,0x2
  41b0f5:	cmp    ax,cx
  41b0f8:	jae    41b140 <flatcc_verify_union_field@@Base+0x70>
  41b0fa:	mov    rbx,QWORD PTR [rdi+0x10]
  41b0fe:	movzx  eax,ax
  41b101:	movzx  eax,WORD PTR [rbx+rax*1]
  41b105:	test   eax,eax
  41b107:	mov    r8,rax
  41b10a:	je     41b140 <flatcc_verify_union_field@@Base+0x70>
  41b10c:	movzx  r11d,WORD PTR [r9+0x1c]
  41b111:	lea    edi,[rax+0x1]
  41b114:	mov    eax,0xd
  41b119:	cmp    edi,r11d
  41b11c:	jbe    41b168 <flatcc_verify_union_field@@Base+0x98>
  41b11e:	mov    rbx,QWORD PTR [rsp+0x38]
  41b123:	xor    rbx,QWORD PTR fs:0x28
  41b12c:	jne    41b220 <flatcc_verify_union_field@@Base+0x150>
  41b132:	add    rsp,0x40
  41b136:	pop    rbx
  41b137:	ret    
  41b138:	nop    DWORD PTR [rax+rax*1+0x0]
  41b140:	mov    eax,0x4
  41b145:	lea    esi,[rax+rsi*2]
  41b148:	cmp    cx,si
  41b14b:	jbe    41b1a0 <flatcc_verify_union_field@@Base+0xd0>
  41b14d:	mov    rax,QWORD PTR [r9+0x10]
  41b151:	movzx  esi,si
  41b154:	cmp    WORD PTR [rax+rsi*1],0x0
  41b159:	je     41b1a0 <flatcc_verify_union_field@@Base+0xd0>
  41b15b:	mov    eax,0x17
  41b160:	jmp    41b11e <flatcc_verify_union_field@@Base+0x4e>
  41b162:	nop    WORD PTR [rax+rax*1+0x0]
  41b168:	movzx  esi,si
  41b16b:	mov    rdi,QWORD PTR [r9]
  41b16e:	lea    eax,[rsi+0x2]
  41b171:	add    eax,eax
  41b173:	cmp    cx,ax
  41b176:	jbe    41b1b8 <flatcc_verify_union_field@@Base+0xe8>
  41b178:	mov    r11d,DWORD PTR [r9+0x18]
  41b17c:	movzx  eax,ax
  41b17f:	add    r11,r8
  41b182:	add    r11,rdi
  41b185:	cmp    WORD PTR [rbx+rax*1],0x0
  41b18a:	movzx  ecx,BYTE PTR [r11]
  41b18e:	je     41b1c7 <flatcc_verify_union_field@@Base+0xf7>
  41b190:	test   cl,cl
  41b192:	jne    41b1c7 <flatcc_verify_union_field@@Base+0xf7>
  41b194:	mov    eax,0x18
  41b199:	jmp    41b11e <flatcc_verify_union_field@@Base+0x4e>
  41b19b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1a0:	test   edx,edx
  41b1a2:	mov    eax,0x15
  41b1a7:	jne    41b11e <flatcc_verify_union_field@@Base+0x4e>
  41b1ad:	xor    eax,eax
  41b1af:	jmp    41b11e <flatcc_verify_union_field@@Base+0x4e>
  41b1b4:	nop    DWORD PTR [rax+0x0]
  41b1b8:	mov    r11d,DWORD PTR [r9+0x18]
  41b1bc:	add    r8,r11
  41b1bf:	lea    r11,[rdi+r8*1]
  41b1c3:	movzx  ecx,BYTE PTR [r11]
  41b1c7:	test   cl,cl
  41b1c9:	je     41b1ad <flatcc_verify_union_field@@Base+0xdd>
  41b1cb:	lea    rcx,[rsp+0xc]
  41b1d0:	mov    rdi,r9
  41b1d3:	call   419c60 <flatcc_emitter_copy_buffer@@Base+0x100>
  41b1d8:	test   eax,eax
  41b1da:	jne    41b11e <flatcc_verify_union_field@@Base+0x4e>
  41b1e0:	mov    eax,DWORD PTR [rsp+0xc]
  41b1e4:	test   eax,eax
  41b1e6:	je     41b1ad <flatcc_verify_union_field@@Base+0xdd>
  41b1e8:	mov    ecx,DWORD PTR [r9+0x8]
  41b1ec:	mov    rdx,QWORD PTR [r9]
  41b1ef:	lea    rdi,[rsp+0x10]
  41b1f4:	mov    DWORD PTR [rsp+0x24],eax
  41b1f8:	mov    DWORD PTR [rsp+0x18],ecx
  41b1fc:	mov    ecx,DWORD PTR [r9+0xc]
  41b200:	mov    QWORD PTR [rsp+0x10],rdx
  41b205:	mov    DWORD PTR [rsp+0x1c],ecx
  41b209:	mov    eax,DWORD PTR [rdx+rax*1]
  41b20c:	mov    DWORD PTR [rsp+0x28],eax
  41b210:	movzx  eax,BYTE PTR [r11]
  41b214:	mov    BYTE PTR [rsp+0x20],al
  41b218:	call   r10
  41b21b:	jmp    41b11e <flatcc_verify_union_field@@Base+0x4e>
  41b220:	call   405070 <__stack_chk_fail@plt>
  41b225:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041b230 <flatcc_verify_union_vector_field@@Base>:
  41b230:	push   r15
  41b232:	push   r14
  41b234:	mov    r15d,edx
  41b237:	push   r13
  41b239:	push   r12
  41b23b:	lea    r12d,[rsi-0x1]
  41b23f:	push   rbp
  41b240:	push   rbx
  41b241:	mov    r14d,esi
  41b244:	movzx  r12d,r12w
  41b248:	mov    rbx,rdi
  41b24b:	mov    r13,rcx
  41b24e:	sub    rsp,0x48
  41b252:	movzx  edx,WORD PTR [rdi+0x1e]
  41b256:	lea    ebp,[r12+0x2]
  41b25b:	mov    rax,QWORD PTR fs:0x28
  41b264:	mov    QWORD PTR [rsp+0x38],rax
  41b269:	xor    eax,eax
  41b26b:	add    ebp,ebp
  41b26d:	cmp    bp,dx
  41b270:	jae    41b330 <flatcc_verify_union_vector_field@@Base+0x100>
  41b276:	mov    rcx,QWORD PTR [rdi+0x10]
  41b27a:	movzx  eax,bp
  41b27d:	cmp    WORD PTR [rcx+rax*1],0x0
  41b282:	je     41b330 <flatcc_verify_union_vector_field@@Base+0x100>
  41b288:	mov    r9d,0xffffffff
  41b28e:	mov    r8d,0x1
  41b294:	mov    ecx,0x1
  41b299:	mov    edx,r15d
  41b29c:	mov    esi,r12d
  41b29f:	mov    rdi,rbx
  41b2a2:	call   41a060 <flatcc_verify_vector_field@@Base>
  41b2a7:	test   eax,eax
  41b2a9:	mov    r9d,eax
  41b2ac:	jne    41b400 <flatcc_verify_union_vector_field@@Base+0x1d0>
  41b2b2:	cmp    bp,WORD PTR [rbx+0x1e]
  41b2b6:	jae    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b2b8:	mov    rax,QWORD PTR [rbx+0x10]
  41b2bc:	movzx  ebp,bp
  41b2bf:	movzx  edx,WORD PTR [rax+rbp*1]
  41b2c3:	test   dx,dx
  41b2c6:	je     41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b2c8:	mov    eax,DWORD PTR [rbx+0x18]
  41b2cb:	add    rax,rdx
  41b2ce:	add    rax,QWORD PTR [rbx]
  41b2d1:	je     41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b2d3:	mov    r10d,DWORD PTR [rax]
  41b2d6:	lea    rcx,[rsp+0xc]
  41b2db:	movzx  esi,r14w
  41b2df:	mov    edx,r15d
  41b2e2:	mov    rdi,rbx
  41b2e5:	add    r10,rax
  41b2e8:	mov    r11d,DWORD PTR [r10]
  41b2eb:	call   419c60 <flatcc_emitter_copy_buffer@@Base+0x100>
  41b2f0:	test   eax,eax
  41b2f2:	jne    41b3f0 <flatcc_verify_union_vector_field@@Base+0x1c0>
  41b2f8:	mov    eax,DWORD PTR [rsp+0xc]
  41b2fc:	test   eax,eax
  41b2fe:	jne    41b368 <flatcc_verify_union_vector_field@@Base+0x138>
  41b300:	mov    rdi,QWORD PTR [rsp+0x38]
  41b305:	xor    rdi,QWORD PTR fs:0x28
  41b30e:	mov    eax,r9d
  41b311:	jne    41b4f2 <flatcc_verify_union_vector_field@@Base+0x2c2>
  41b317:	add    rsp,0x48
  41b31b:	pop    rbx
  41b31c:	pop    rbp
  41b31d:	pop    r12
  41b31f:	pop    r13
  41b321:	pop    r14
  41b323:	pop    r15
  41b325:	ret    
  41b326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b330:	lea    eax,[r14+r14*1]
  41b334:	add    eax,0x4
  41b337:	cmp    dx,ax
  41b33a:	ja     41b350 <flatcc_verify_union_vector_field@@Base+0x120>
  41b33c:	test   r15d,r15d
  41b33f:	mov    r9d,0x16
  41b345:	jne    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b347:	jmp    41b288 <flatcc_verify_union_vector_field@@Base+0x58>
  41b34c:	nop    DWORD PTR [rax+0x0]
  41b350:	mov    rdx,QWORD PTR [rbx+0x10]
  41b354:	movzx  eax,ax
  41b357:	cmp    WORD PTR [rdx+rax*1],0x0
  41b35c:	jne    41b288 <flatcc_verify_union_vector_field@@Base+0x58>
  41b362:	jmp    41b33c <flatcc_verify_union_vector_field@@Base+0x10c>
  41b364:	nop    DWORD PTR [rax+0x0]
  41b368:	mov    edx,DWORD PTR [rbx+0xc]
  41b36b:	mov    r9d,0x3
  41b371:	test   edx,edx
  41b373:	jle    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b375:	mov    r12,QWORD PTR [rbx]
  41b378:	mov    ecx,eax
  41b37a:	mov    r9d,0x10
  41b380:	mov    esi,DWORD PTR [r12+rcx*1]
  41b384:	add    esi,eax
  41b386:	cmp    eax,esi
  41b388:	mov    ecx,esi
  41b38a:	jae    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b390:	mov    eax,DWORD PTR [rbx+0x8]
  41b393:	mov    esi,esi
  41b395:	lea    r8,[rsi+0x4]
  41b399:	cmp    r8,rax
  41b39c:	mov    rdi,rax
  41b39f:	ja     41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b3a5:	test   r8b,0x3
  41b3a9:	je     41b427 <flatcc_verify_union_vector_field@@Base+0x1f7>
  41b3ab:	and    r8d,0x3
  41b3af:	mov    r9d,0x10
  41b3b5:	jne    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b3bb:	mov    eax,DWORD PTR [r12+rsi*1]
  41b3bf:	mov    r9d,0x19
  41b3c5:	cmp    eax,0x3fffffff
  41b3ca:	ja     41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b3d0:	sub    edi,0x4
  41b3d3:	shl    eax,0x2
  41b3d6:	mov    r9d,0x1a
  41b3dc:	sub    edi,ecx
  41b3de:	cmp    edi,eax
  41b3e0:	jb     41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b3e6:	xor    r9d,r9d
  41b3e9:	jmp    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b3ee:	xchg   ax,ax
  41b3f0:	mov    r9d,eax
  41b3f3:	jmp    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b400:	mov    r9d,0xffffffff
  41b406:	mov    r8d,0x1
  41b40c:	mov    ecx,0x1
  41b411:	mov    edx,r15d
  41b414:	mov    esi,r12d
  41b417:	mov    rdi,rbx
  41b41a:	call   41a060 <flatcc_verify_vector_field@@Base>
  41b41f:	mov    r9d,eax
  41b422:	jmp    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b427:	mov    eax,DWORD PTR [r12+rsi*1]
  41b42b:	cmp    eax,0x3fffffff
  41b430:	ja     41b3ab <flatcc_verify_union_vector_field@@Base+0x17b>
  41b436:	lea    ebx,[rcx+0x4]
  41b439:	lea    r14d,[rax*4+0x0]
  41b441:	mov    r9d,edi
  41b444:	sub    r9d,ebx
  41b447:	cmp    r9d,r14d
  41b44a:	jb     41b3ab <flatcc_verify_union_vector_field@@Base+0x17b>
  41b450:	cmp    r11d,eax
  41b453:	mov    r9d,0x22
  41b459:	jne    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b45f:	sub    edx,0x1
  41b462:	test   r11d,r11d
  41b465:	mov    QWORD PTR [rsp+0x10],r12
  41b46a:	mov    DWORD PTR [rsp+0x18],edi
  41b46e:	mov    DWORD PTR [rsp+0x1c],edx
  41b472:	je     41b3e6 <flatcc_verify_union_vector_field@@Base+0x1b6>
  41b478:	lea    rbp,[r10+0x4]
  41b47c:	add    r14d,ebx
  41b47f:	lea    r15,[rsp+0x10]
  41b484:	jmp    41b4a6 <flatcc_verify_union_vector_field@@Base+0x276>
  41b486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b490:	cmp    BYTE PTR [rbp+0x0],0x0
  41b494:	jne    41b4dc <flatcc_verify_union_vector_field@@Base+0x2ac>
  41b496:	add    ebx,0x4
  41b499:	add    rbp,0x1
  41b49d:	cmp    ebx,r14d
  41b4a0:	je     41b3e6 <flatcc_verify_union_vector_field@@Base+0x1b6>
  41b4a6:	mov    eax,ebx
  41b4a8:	mov    eax,DWORD PTR [r12+rax*1]
  41b4ac:	test   eax,eax
  41b4ae:	je     41b490 <flatcc_verify_union_vector_field@@Base+0x260>
  41b4b0:	movzx  edx,BYTE PTR [rbp+0x0]
  41b4b4:	test   dl,dl
  41b4b6:	je     41b4e7 <flatcc_verify_union_vector_field@@Base+0x2b7>
  41b4b8:	mov    BYTE PTR [rsp+0x20],dl
  41b4bc:	mov    DWORD PTR [rsp+0x24],ebx
  41b4c0:	mov    rdi,r15
  41b4c3:	mov    DWORD PTR [rsp+0x28],eax
  41b4c7:	call   r13
  41b4ca:	test   eax,eax
  41b4cc:	je     41b496 <flatcc_verify_union_vector_field@@Base+0x266>
  41b4ce:	mov    rdi,r15
  41b4d1:	call   r13
  41b4d4:	mov    r9d,eax
  41b4d7:	jmp    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b4dc:	mov    r9d,0x20
  41b4e2:	jmp    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b4e7:	mov    r9d,0x21
  41b4ed:	jmp    41b300 <flatcc_verify_union_vector_field@@Base+0xd0>
  41b4f2:	call   405070 <__stack_chk_fail@plt>
  41b4f7:	nop    WORD PTR [rax+rax*1+0x0]
  41b500:	mov    r9,rdi
  41b503:	mov    eax,edx
  41b505:	mov    edi,edi
  41b507:	shr    r9,0x20
  41b50b:	mov    r11,rdi
  41b50e:	mov    r10,rdx
  41b511:	imul   rdi,rax
  41b515:	mov    r8,r9
  41b518:	shr    r10,0x20
  41b51c:	imul   r8,rax
  41b520:	mov    QWORD PTR [rsp-0x10],0x0
  41b529:	imul   r11,r10
  41b52d:	mov    rax,rdi
  41b530:	shr    rax,0x20
  41b534:	mov    edi,r8d
  41b537:	add    rax,rdi
  41b53a:	mov    edi,0x80000000
  41b53f:	mov    edx,r11d
  41b542:	add    rax,rdi
  41b545:	shr    r11,0x20
  41b549:	imul   r9,r10
  41b54d:	add    rax,rdx
  41b550:	mov    rdx,r8
  41b553:	shr    rdx,0x20
  41b557:	shr    rax,0x20
  41b55b:	add    rdx,r11
  41b55e:	lea    r8,[rdx+r9*1]
  41b562:	add    rax,r8
  41b565:	mov    QWORD PTR [rsp-0x18],rax
  41b56a:	lea    eax,[rsi+rcx*1+0x40]
  41b56e:	vmovdqa xmm1,XMMWORD PTR [rsp-0x18]
  41b574:	vpinsrd xmm0,xmm1,eax,0x2
  41b57a:	vmovaps XMMWORD PTR [rsp-0x18],xmm0
  41b580:	mov    rax,QWORD PTR [rsp-0x18]
  41b585:	mov    rdx,QWORD PTR [rsp-0x10]
  41b58a:	ret    
  41b58b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b590:	sub    rsp,0x18
  41b594:	test   rdi,rdi
  41b597:	mov    QWORD PTR [rsp+0x8],rsi
  41b59c:	mov    QWORD PTR [rsp],rdi
  41b5a0:	mov    ecx,DWORD PTR [rsp+0x8]
  41b5a4:	je     41b60c <flatcc_verify_union_vector_field@@Base+0x3dc>
  41b5a6:	mov    rax,rdi
  41b5a9:	movabs rdi,0xffc0000000000000
  41b5b3:	lea    edx,[rcx-0xa]
  41b5b6:	test   rax,rdi
  41b5b9:	mov    rsi,rdi
  41b5bc:	jne    41b5ce <flatcc_verify_union_vector_field@@Base+0x39e>
  41b5be:	xchg   ax,ax
  41b5c0:	shl    rax,0xa
  41b5c4:	mov    ecx,edx
  41b5c6:	sub    edx,0xa
  41b5c9:	test   rax,rsi
  41b5cc:	je     41b5c0 <flatcc_verify_union_vector_field@@Base+0x390>
  41b5ce:	test   rax,rax
  41b5d1:	js     41b5ea <flatcc_verify_union_vector_field@@Base+0x3ba>
  41b5d3:	lea    edx,[rcx-0x1]
  41b5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b5e0:	mov    ecx,edx
  41b5e2:	sub    edx,0x1
  41b5e5:	add    rax,rax
  41b5e8:	jns    41b5e0 <flatcc_verify_union_vector_field@@Base+0x3b0>
  41b5ea:	mov    QWORD PTR [rsp],rax
  41b5ee:	vmovdqa xmm1,XMMWORD PTR [rsp]
  41b5f3:	vpinsrd xmm0,xmm1,ecx,0x2
  41b5f9:	vmovaps XMMWORD PTR [rsp],xmm0
  41b5fe:	mov    rax,QWORD PTR [rsp]
  41b602:	mov    rdx,QWORD PTR [rsp+0x8]
  41b607:	add    rsp,0x18
  41b60b:	ret    
  41b60c:	lea    rcx,[rip+0x1556d]        # 430b80 <flatcc_builder_padding_base@@Base+0x10a0>
  41b613:	lea    rsi,[rip+0x14bf6]        # 430210 <flatcc_builder_padding_base@@Base+0x730>
  41b61a:	lea    rdi,[rip+0x14dd3]        # 4303f4 <flatcc_builder_padding_base@@Base+0x914>
  41b621:	mov    edx,0x104
  41b626:	call   405080 <__assert_fail@plt>
  41b62b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b630 <grisu3_diy_fp_encode_double@@Base>:
  41b630:	push   r15
  41b632:	push   r14
  41b634:	mov    eax,0x4
  41b639:	push   r13
  41b63b:	push   r12
  41b63d:	mov    r12d,ecx
  41b640:	push   rbp
  41b641:	push   rbx
  41b642:	mov    r13d,edx
  41b645:	mov    rbx,r8
  41b648:	sub    rsp,0x18
  41b64c:	test   ecx,ecx
  41b64e:	mov    QWORD PTR [rsp+0x8],0x0
  41b657:	mov    QWORD PTR [rsp],rdi
  41b65b:	cmovne r12d,eax
  41b65f:	vmovdqa xmm2,XMMWORD PTR [rsp]
  41b664:	xor    eax,eax
  41b666:	sub    esi,edx
  41b668:	vpinsrd xmm1,xmm2,eax,0x2
  41b66e:	mov    ebp,esi
  41b670:	vmovaps XMMWORD PTR [rsp],xmm1
  41b675:	mov    rsi,QWORD PTR [rsp+0x8]
  41b67a:	mov    rdi,QWORD PTR [rsp]
  41b67e:	call   41b590 <flatcc_verify_union_vector_field@@Base+0x360>
  41b683:	mov    QWORD PTR [rsp+0x8],rdx
  41b688:	mov    esi,DWORD PTR [rsp+0x8]
  41b68c:	mov    QWORD PTR [rsp],rax
  41b690:	mov    rdi,QWORD PTR [rsp]
  41b694:	mov    ecx,esi
  41b696:	neg    ecx
  41b698:	cmp    ebp,0xfffffea4
  41b69e:	shlx   r12d,r12d,ecx
  41b6a3:	jl     41b990 <grisu3_diy_fp_encode_double@@Base+0x360>
  41b6a9:	cmp    ebp,0x15b
  41b6af:	jg     41b971 <grisu3_diy_fp_encode_double@@Base+0x341>
  41b6b5:	lea    eax,[rbp+0x15c]
  41b6bb:	lea    rdx,[rip+0x1551e]        # 430be0 <flatcc_builder_padding_base@@Base+0x1100>
  41b6c2:	sar    eax,0x3
  41b6c5:	cdqe   
  41b6c7:	shl    rax,0x4
  41b6cb:	add    rax,rdx
  41b6ce:	movsx  edx,WORD PTR [rax+0xa]
  41b6d2:	mov    r14,QWORD PTR [rax]
  41b6d5:	movsx  r15d,WORD PTR [rax+0x8]
  41b6da:	cmp    ebp,edx
  41b6dc:	jl     41b952 <grisu3_diy_fp_encode_double@@Base+0x322>
  41b6e2:	lea    eax,[rdx+0x7]
  41b6e5:	cmp    ebp,eax
  41b6e7:	jg     41b933 <grisu3_diy_fp_encode_double@@Base+0x303>
  41b6ed:	cmp    ebp,edx
  41b6ef:	je     41b741 <grisu3_diy_fp_encode_double@@Base+0x111>
  41b6f1:	sub    ebp,edx
  41b6f3:	sub    ebp,0x1
  41b6f6:	cmp    ebp,0x6
  41b6f9:	ja     41b914 <grisu3_diy_fp_encode_double@@Base+0x2e4>
  41b6ff:	lea    rdx,[rip+0x1e0da]        # 4397e0 <__data_start@@Base+0x720>
  41b706:	movsxd rax,ebp
  41b709:	mov    rdi,QWORD PTR [rsp]
  41b70d:	shl    rax,0x4
  41b711:	add    rax,rdx
  41b714:	mov    ecx,DWORD PTR [rax+0x8]
  41b717:	mov    rdx,QWORD PTR [rax]
  41b71a:	call   41b500 <flatcc_verify_union_vector_field@@Base+0x2d0>
  41b71f:	mov    QWORD PTR [rsp+0x8],rdx
  41b724:	lea    edx,[rbp+r13*1+0x1]
  41b729:	mov    QWORD PTR [rsp],rax
  41b72d:	mov    esi,DWORD PTR [rsp+0x8]
  41b731:	lea    eax,[r12+0x4]
  41b736:	mov    rdi,QWORD PTR [rsp]
  41b73a:	cmp    edx,0x14
  41b73d:	cmovge r12d,eax
  41b741:	mov    ecx,r15d
  41b744:	mov    rdx,r14
  41b747:	call   41b500 <flatcc_verify_union_vector_field@@Base+0x2d0>
  41b74c:	mov    QWORD PTR [rsp],rax
  41b750:	mov    QWORD PTR [rsp+0x8],rdx
  41b755:	xor    eax,eax
  41b757:	mov    rdi,QWORD PTR [rsp]
  41b75b:	mov    rsi,QWORD PTR [rsp+0x8]
  41b760:	test   r12d,r12d
  41b763:	setne  al
  41b766:	mov    ebp,DWORD PTR [rsp+0x8]
  41b76a:	lea    r12d,[r12+rax*1+0x8]
  41b76f:	call   41b590 <flatcc_verify_union_vector_field@@Base+0x360>
  41b774:	mov    QWORD PTR [rsp+0x8],rdx
  41b779:	mov    edx,DWORD PTR [rsp+0x8]
  41b77d:	mov    QWORD PTR [rsp],rax
  41b781:	mov    rax,QWORD PTR [rsp]
  41b785:	lea    ecx,[rdx+0x40]
  41b788:	sub    ebp,edx
  41b78a:	shlx   edi,r12d,ebp
  41b78f:	cmp    ecx,0xfffffc0e
  41b795:	jl     41b880 <grisu3_diy_fp_encode_double@@Base+0x250>
  41b79b:	mov    r8d,0x4
  41b7a1:	xor    r9d,r9d
  41b7a4:	xor    ecx,ecx
  41b7a6:	lea    r10d,[rdi+r8*1]
  41b7aa:	add    edx,ecx
  41b7ac:	shrx   rax,rax,rcx
  41b7b1:	cmp    ecx,r10d
  41b7b4:	jl     41b7c7 <grisu3_diy_fp_encode_double@@Base+0x197>
  41b7b6:	add    rax,0x1
  41b7ba:	bt     rax,0x35
  41b7bf:	jae    41b7c7 <grisu3_diy_fp_encode_double@@Base+0x197>
  41b7c1:	shr    rax,1
  41b7c4:	add    edx,0x1
  41b7c7:	movabs rcx,0x1fffffffffffff
  41b7d1:	cmp    rax,rcx
  41b7d4:	jbe    41b7eb <grisu3_diy_fp_encode_double@@Base+0x1bb>
  41b7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7e0:	shr    rax,1
  41b7e3:	add    edx,0x1
  41b7e6:	cmp    rax,rcx
  41b7e9:	ja     41b7e0 <grisu3_diy_fp_encode_double@@Base+0x1b0>
  41b7eb:	cmp    edx,0xfffffbce
  41b7f1:	vxorpd xmm0,xmm0,xmm0
  41b7f5:	jl     41b84f <grisu3_diy_fp_encode_double@@Base+0x21f>
  41b7f7:	je     41b829 <grisu3_diy_fp_encode_double@@Base+0x1f9>
  41b7f9:	bt     rax,0x34
  41b7fe:	movabs rsi,0x10000000000000
  41b808:	jae    41b81b <grisu3_diy_fp_encode_double@@Base+0x1eb>
  41b80a:	jmp    41b8d7 <grisu3_diy_fp_encode_double@@Base+0x2a7>
  41b80f:	nop
  41b810:	test   rax,rsi
  41b813:	jne    41b8c0 <grisu3_diy_fp_encode_double@@Base+0x290>
  41b819:	mov    edx,ecx
  41b81b:	lea    ecx,[rdx-0x1]
  41b81e:	add    rax,rax
  41b821:	cmp    ecx,0xfffffbce
  41b827:	jne    41b810 <grisu3_diy_fp_encode_double@@Base+0x1e0>
  41b829:	movabs rdx,0x10000000000000
  41b833:	and    rdx,rax
  41b836:	movabs rcx,0xfffffffffffff
  41b840:	and    rax,rcx
  41b843:	or     rdx,rax
  41b846:	mov    QWORD PTR [rsp],rdx
  41b84a:	vmovsd xmm0,QWORD PTR [rsp]
  41b84f:	sub    r8d,edi
  41b852:	vmovsd QWORD PTR [rbx],xmm0
  41b856:	cmp    r8d,r9d
  41b859:	setge  al
  41b85c:	cmp    r10d,r9d
  41b85f:	setle  dl
  41b862:	add    rsp,0x18
  41b866:	or     eax,edx
  41b868:	pop    rbx
  41b869:	movzx  eax,al
  41b86c:	pop    rbp
  41b86d:	pop    r12
  41b86f:	pop    r13
  41b871:	pop    r14
  41b873:	pop    r15
  41b875:	ret    
  41b876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b880:	cmp    ecx,0xfffffbcf
  41b886:	jl     41b8d0 <grisu3_diy_fp_encode_double@@Base+0x2a0>
  41b888:	lea    esi,[rdx+0x472]
  41b88e:	mov    ecx,0x40
  41b893:	sub    ecx,esi
  41b895:	cmp    ecx,0x3c
  41b898:	jle    41b8e6 <grisu3_diy_fp_encode_double@@Base+0x2b6>
  41b89a:	mov    ecx,0x2
  41b89f:	sub    ecx,esi
  41b8a1:	sarx   edi,edi,ecx
  41b8a6:	shrx   rax,rax,rcx
  41b8ab:	add    edx,ecx
  41b8ad:	add    edi,0x9
  41b8b0:	xor    r9d,r9d
  41b8b3:	xor    r8d,r8d
  41b8b6:	mov    ecx,0x3e
  41b8bb:	jmp    41b7a6 <grisu3_diy_fp_encode_double@@Base+0x176>
  41b8c0:	add    edx,0x432
  41b8c6:	shl    rdx,0x34
  41b8ca:	jmp    41b836 <grisu3_diy_fp_encode_double@@Base+0x206>
  41b8cf:	nop
  41b8d0:	mov    ecx,0x2
  41b8d5:	jmp    41b8a1 <grisu3_diy_fp_encode_double@@Base+0x271>
  41b8d7:	add    edx,0x433
  41b8dd:	shl    rdx,0x34
  41b8e1:	jmp    41b836 <grisu3_diy_fp_encode_double@@Base+0x206>
  41b8e6:	mov    r8d,0x3f
  41b8ec:	mov    r9d,0x1
  41b8f2:	sub    r8d,esi
  41b8f5:	mov    esi,r8d
  41b8f8:	mov    r8d,0x8
  41b8fe:	shlx   r9,r9,rsi
  41b903:	shlx   r8,r8,rsi
  41b908:	and    r9,rax
  41b90b:	shl    r9d,0x3
  41b90f:	jmp    41b7a6 <grisu3_diy_fp_encode_double@@Base+0x176>
  41b914:	lea    rcx,[rip+0x152a5]        # 430bc0 <flatcc_builder_padding_base@@Base+0x10e0>
  41b91b:	lea    rsi,[rip+0x1495e]        # 430280 <flatcc_builder_padding_base@@Base+0x7a0>
  41b922:	lea    rdi,[rip+0x14afe]        # 430427 <flatcc_builder_padding_base@@Base+0x947>
  41b929:	mov    edx,0xb9
  41b92e:	call   405080 <__assert_fail@plt>
  41b933:	lea    rcx,[rip+0x15266]        # 430ba0 <flatcc_builder_padding_base@@Base+0x10c0>
  41b93a:	lea    rsi,[rip+0x1493f]        # 430280 <flatcc_builder_padding_base@@Base+0x7a0>
  41b941:	lea    rdi,[rip+0x14ac4]        # 43040c <flatcc_builder_padding_base@@Base+0x92c>
  41b948:	mov    edx,0x59
  41b94d:	call   405080 <__assert_fail@plt>
  41b952:	lea    rcx,[rip+0x15247]        # 430ba0 <flatcc_builder_padding_base@@Base+0x10c0>
  41b959:	lea    rsi,[rip+0x14920]        # 430280 <flatcc_builder_padding_base@@Base+0x7a0>
  41b960:	lea    rdi,[rip+0x14a96]        # 4303fd <flatcc_builder_padding_base@@Base+0x91d>
  41b967:	mov    edx,0x58
  41b96c:	call   405080 <__assert_fail@plt>
  41b971:	lea    rcx,[rip+0x15228]        # 430ba0 <flatcc_builder_padding_base@@Base+0x10c0>
  41b978:	lea    rsi,[rip+0x14901]        # 430280 <flatcc_builder_padding_base@@Base+0x7a0>
  41b97f:	lea    rdi,[rip+0x14992]        # 430318 <flatcc_builder_padding_base@@Base+0x838>
  41b986:	mov    edx,0x51
  41b98b:	call   405080 <__assert_fail@plt>
  41b990:	lea    rcx,[rip+0x15209]        # 430ba0 <flatcc_builder_padding_base@@Base+0x10c0>
  41b997:	lea    rsi,[rip+0x148e2]        # 430280 <flatcc_builder_padding_base@@Base+0x7a0>
  41b99e:	lea    rdi,[rip+0x14953]        # 4302f8 <flatcc_builder_padding_base@@Base+0x818>
  41b9a5:	mov    edx,0x50
  41b9aa:	call   405080 <__assert_fail@plt>
  41b9af:	nop
  41b9b0:	push   r13
  41b9b2:	push   r12
  41b9b4:	lea    r8,[rdi+0x3e9]
  41b9bb:	push   rbp
  41b9bc:	push   rbx
  41b9bd:	sub    rsp,0x18
  41b9c1:	mov    QWORD PTR [rdx],0x0
  41b9c8:	mov    rax,QWORD PTR fs:0x28
  41b9d1:	mov    QWORD PTR [rsp+0x8],rax
  41b9d6:	xor    eax,eax
  41b9d8:	movsxd rax,esi
  41b9db:	cmp    esi,0x3e8
  41b9e1:	lea    rax,[rdi+rax*1+0x1]
  41b9e6:	cmovle r8,rax
  41b9ea:	cmp    r8,rdi
  41b9ed:	je     41bde0 <grisu3_diy_fp_encode_double@@Base+0x7b0>
  41b9f3:	movzx  eax,BYTE PTR [rdi]
  41b9f6:	xor    r13d,r13d
  41b9f9:	mov    r12,rdx
  41b9fc:	mov    rbp,rdi
  41b9ff:	mov    rdx,rdi
  41ba02:	cmp    al,0x2d
  41ba04:	je     41bb90 <grisu3_diy_fp_encode_double@@Base+0x560>
  41ba0a:	cmp    al,0x30
  41ba0c:	je     41bbab <grisu3_diy_fp_encode_double@@Base+0x57b>
  41ba12:	lea    ecx,[rax-0x31]
  41ba15:	cmp    cl,0x8
  41ba18:	ja     41bb20 <grisu3_diy_fp_encode_double@@Base+0x4f0>
  41ba1e:	lea    r9,[rdx+0x1]
  41ba22:	movsx  edi,al
  41ba25:	sub    edi,0x30
  41ba28:	cmp    r8,r9
  41ba2b:	movsxd rdi,edi
  41ba2e:	je     41c197 <grisu3_diy_fp_encode_double@@Base+0xb67>
  41ba34:	movsx  rax,BYTE PTR [rdx+0x1]
  41ba39:	lea    edx,[rax-0x30]
  41ba3c:	mov    rbx,r9
  41ba3f:	movabs rcx,0x1999999999999998
  41ba49:	cmp    dl,0x9
  41ba4c:	jbe    41ba61 <grisu3_diy_fp_encode_double@@Base+0x431>
  41ba4e:	jmp    41c190 <grisu3_diy_fp_encode_double@@Base+0xb60>
  41ba53:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba58:	cmp    rdi,rcx
  41ba5b:	ja     41bb50 <grisu3_diy_fp_encode_double@@Base+0x520>
  41ba61:	add    rbx,0x1
  41ba65:	lea    rdx,[rdi+rdi*4]
  41ba69:	cmp    r8,rbx
  41ba6c:	lea    rdi,[rax+rdx*2-0x30]
  41ba71:	je     41c12f <grisu3_diy_fp_encode_double@@Base+0xaff>
  41ba77:	movsx  rax,BYTE PTR [rbx]
  41ba7b:	lea    edx,[rax-0x30]
  41ba7e:	cmp    dl,0x9
  41ba81:	jbe    41ba58 <grisu3_diy_fp_encode_double@@Base+0x428>
  41ba83:	mov    edx,ebx
  41ba85:	sub    edx,r9d
  41ba88:	lea    r9d,[rax-0x31]
  41ba8c:	xor    ecx,ecx
  41ba8e:	xor    esi,esi
  41ba90:	cmp    r9b,0x8
  41ba94:	jbe    41bc03 <grisu3_diy_fp_encode_double@@Base+0x5d3>
  41ba9a:	cmp    al,0x2e
  41ba9c:	je     41bca0 <grisu3_diy_fp_encode_double@@Base+0x670>
  41baa2:	add    esi,edx
  41baa4:	cmp    r8,rbx
  41baa7:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41baad:	or     eax,0x20
  41bab0:	cmp    al,0x65
  41bab2:	je     41bd28 <grisu3_diy_fp_encode_double@@Base+0x6f8>
  41bab8:	test   rdi,rdi
  41babb:	je     41bc68 <grisu3_diy_fp_encode_double@@Base+0x638>
  41bac1:	cmp    esi,0xfffffebc
  41bac7:	jl     41bc68 <grisu3_diy_fp_encode_double@@Base+0x638>
  41bacd:	cmp    esi,0x136
  41bad3:	jg     41bc90 <grisu3_diy_fp_encode_double@@Base+0x660>
  41bad9:	movabs rax,0x1fffffffffffff
  41bae3:	cmp    rdi,rax
  41bae6:	ja     41be00 <grisu3_diy_fp_encode_double@@Base+0x7d0>
  41baec:	cmp    esi,0x16
  41baef:	ja     41be00 <grisu3_diy_fp_encode_double@@Base+0x7d0>
  41baf5:	sub    esi,edx
  41baf7:	vxorpd xmm0,xmm0,xmm0
  41bafb:	lea    eax,[rsi+0x16]
  41bafe:	cmp    eax,0x2c
  41bb01:	vcvtsi2sd xmm0,xmm0,rdi
  41bb06:	ja     41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bb0c:	lea    rdx,[rip+0x14b6d]        # 430680 <flatcc_builder_padding_base@@Base+0xba0>
  41bb13:	movsxd rax,DWORD PTR [rdx+rax*4]
  41bb17:	add    rax,rdx
  41bb1a:	jmp    rax
  41bb1c:	nop    DWORD PTR [rax+0x0]
  41bb20:	test   r13d,r13d
  41bb23:	mov    ebx,0x0
  41bb28:	cmove  rbx,rbp
  41bb2c:	mov    rcx,QWORD PTR [rsp+0x8]
  41bb31:	xor    rcx,QWORD PTR fs:0x28
  41bb3a:	mov    rax,rbx
  41bb3d:	jne    41c1aa <grisu3_diy_fp_encode_double@@Base+0xb7a>
  41bb43:	add    rsp,0x18
  41bb47:	pop    rbx
  41bb48:	pop    rbp
  41bb49:	pop    r12
  41bb4b:	pop    r13
  41bb4d:	ret    
  41bb4e:	xchg   ax,ax
  41bb50:	xor    edx,edx
  41bb52:	cmp    al,0x34
  41bb54:	setg   dl
  41bb57:	add    rdi,rdx
  41bb5a:	mov    edx,ebx
  41bb5c:	sub    edx,r9d
  41bb5f:	cmp    al,0x30
  41bb61:	jne    41c1af <grisu3_diy_fp_encode_double@@Base+0xb7f>
  41bb67:	xor    esi,esi
  41bb69:	jmp    41bb77 <grisu3_diy_fp_encode_double@@Base+0x547>
  41bb6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bb70:	movzx  eax,BYTE PTR [rbx]
  41bb73:	cmp    al,0x30
  41bb75:	jne    41bbf0 <grisu3_diy_fp_encode_double@@Base+0x5c0>
  41bb77:	add    rbx,0x1
  41bb7b:	add    esi,0x1
  41bb7e:	cmp    r8,rbx
  41bb81:	jne    41bb70 <grisu3_diy_fp_encode_double@@Base+0x540>
  41bb83:	xor    ebx,ebx
  41bb85:	jmp    41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41bb87:	nop    WORD PTR [rax+rax*1+0x0]
  41bb90:	lea    rdx,[rdi+0x1]
  41bb94:	cmp    r8,rdx
  41bb97:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41bb99:	movzx  eax,BYTE PTR [rdi+0x1]
  41bb9d:	mov    r13d,0x1
  41bba3:	cmp    al,0x30
  41bba5:	jne    41ba12 <grisu3_diy_fp_encode_double@@Base+0x3e2>
  41bbab:	lea    r9,[rdx+0x1]
  41bbaf:	cmp    r8,r9
  41bbb2:	je     41bdf3 <grisu3_diy_fp_encode_double@@Base+0x7c3>
  41bbb8:	movsx  rax,BYTE PTR [rdx+0x1]
  41bbbd:	mov    edx,eax
  41bbbf:	or     edx,0x20
  41bbc2:	cmp    dl,0x78
  41bbc5:	je     41be31 <grisu3_diy_fp_encode_double@@Base+0x801>
  41bbcb:	cmp    al,0x30
  41bbcd:	jne    41bbe5 <grisu3_diy_fp_encode_double@@Base+0x5b5>
  41bbcf:	nop
  41bbd0:	add    r9,0x1
  41bbd4:	cmp    r8,r9
  41bbd7:	je     41bdf0 <grisu3_diy_fp_encode_double@@Base+0x7c0>
  41bbdd:	movsx  rax,BYTE PTR [r9]
  41bbe1:	cmp    al,0x30
  41bbe3:	je     41bbd0 <grisu3_diy_fp_encode_double@@Base+0x5a0>
  41bbe5:	xor    edi,edi
  41bbe7:	jmp    41ba39 <grisu3_diy_fp_encode_double@@Base+0x409>
  41bbec:	nop    DWORD PTR [rax+0x0]
  41bbf0:	mov    ecx,0x1
  41bbf5:	lea    r9d,[rax-0x31]
  41bbf9:	cmp    r9b,0x8
  41bbfd:	ja     41ba9a <grisu3_diy_fp_encode_double@@Base+0x46a>
  41bc03:	lea    rcx,[rbx+0x1]
  41bc07:	add    esi,0x1
  41bc0a:	cmp    r8,rcx
  41bc0d:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41bc13:	movzx  eax,BYTE PTR [rbx+0x1]
  41bc17:	lea    r9d,[rax-0x30]
  41bc1b:	cmp    r9b,0x9
  41bc1f:	jbe    41bc41 <grisu3_diy_fp_encode_double@@Base+0x611>
  41bc21:	jmp    41c070 <grisu3_diy_fp_encode_double@@Base+0xa40>
  41bc26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc30:	movzx  eax,BYTE PTR [rcx]
  41bc33:	lea    r9d,[rax-0x30]
  41bc37:	cmp    r9b,0x9
  41bc3b:	ja     41c070 <grisu3_diy_fp_encode_double@@Base+0xa40>
  41bc41:	add    rcx,0x1
  41bc45:	add    esi,0x1
  41bc48:	cmp    r8,rcx
  41bc4b:	jne    41bc30 <grisu3_diy_fp_encode_double@@Base+0x600>
  41bc4d:	xor    ebx,ebx
  41bc4f:	jmp    41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41bc54:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15504]        # 431160 <flatcc_builder_padding_base@@Base+0x1680>
  41bc5c:	vmovsd QWORD PTR [r12],xmm0
  41bc62:	nop    WORD PTR [rax+rax*1+0x0]
  41bc68:	test   r13d,r13d
  41bc6b:	je     41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41bc71:	vmovsd xmm0,QWORD PTR [r12]
  41bc77:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x13371]        # 42eff0 <_IO_stdin_used@@Base+0x3ff0>
  41bc7f:	vmovsd QWORD PTR [r12],xmm0
  41bc85:	jmp    41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41bc8a:	nop    WORD PTR [rax+rax*1+0x0]
  41bc90:	vmovsd xmm1,QWORD PTR [rip+0x154b8]        # 431150 <flatcc_builder_padding_base@@Base+0x1670>
  41bc98:	vmovsd QWORD PTR [r12],xmm1
  41bc9e:	jmp    41bc68 <grisu3_diy_fp_encode_double@@Base+0x638>
  41bca0:	movsx  rax,BYTE PTR [rbx+0x1]
  41bca5:	lea    r9,[rbx+0x1]
  41bca9:	lea    r10d,[rax-0x30]
  41bcad:	cmp    r10b,0x9
  41bcb1:	ja     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41bcb7:	cmp    r8,r9
  41bcba:	je     41c1a3 <grisu3_diy_fp_encode_double@@Base+0xb73>
  41bcc0:	movabs r11,0x1999999999999998
  41bcca:	mov    rbx,r9
  41bccd:	cmp    rdi,r11
  41bcd0:	jbe    41bcfb <grisu3_diy_fp_encode_double@@Base+0x6cb>
  41bcd2:	jmp    41c19e <grisu3_diy_fp_encode_double@@Base+0xb6e>
  41bcd7:	nop    WORD PTR [rax+rax*1+0x0]
  41bce0:	movsx  rax,BYTE PTR [rbx]
  41bce4:	lea    r10d,[rax-0x30]
  41bce8:	cmp    r10b,0x9
  41bcec:	ja     41c0aa <grisu3_diy_fp_encode_double@@Base+0xa7a>
  41bcf2:	cmp    rdi,r11
  41bcf5:	ja     41c13d <grisu3_diy_fp_encode_double@@Base+0xb0d>
  41bcfb:	add    rbx,0x1
  41bcff:	lea    rdi,[rdi+rdi*4]
  41bd03:	sub    esi,0x1
  41bd06:	cmp    r8,rbx
  41bd09:	lea    rdi,[rax+rdi*2-0x30]
  41bd0e:	jne    41bce0 <grisu3_diy_fp_encode_double@@Base+0x6b0>
  41bd10:	mov    eax,r8d
  41bd13:	sub    eax,r9d
  41bd16:	mov    r9,r8
  41bd19:	add    edx,eax
  41bd1b:	add    esi,edx
  41bd1d:	jmp    41bdfb <grisu3_diy_fp_encode_double@@Base+0x7cb>
  41bd22:	nop    WORD PTR [rax+rax*1+0x0]
  41bd28:	mov    rax,r8
  41bd2b:	sub    rax,rbx
  41bd2e:	cmp    rax,0x1
  41bd32:	jle    41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41bd38:	movsx  r9d,BYTE PTR [rbx+0x1]
  41bd3d:	cmp    r9b,0x2b
  41bd41:	je     41c090 <grisu3_diy_fp_encode_double@@Base+0xa60>
  41bd47:	cmp    r9b,0x2d
  41bd4b:	je     41c173 <grisu3_diy_fp_encode_double@@Base+0xb43>
  41bd51:	lea    rax,[rbx+0x1]
  41bd55:	xor    r10d,r10d
  41bd58:	lea    r11d,[r9-0x30]
  41bd5c:	cmp    r11b,0x9
  41bd60:	ja     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41bd66:	lea    rbx,[rax+0x1]
  41bd6a:	sub    r9d,0x30
  41bd6e:	cmp    r8,rbx
  41bd71:	je     41bdbf <grisu3_diy_fp_encode_double@@Base+0x78f>
  41bd73:	movsx  eax,BYTE PTR [rax+0x1]
  41bd77:	lea    r11d,[rax-0x30]
  41bd7b:	cmp    r11b,0x9
  41bd7f:	jbe    41bda1 <grisu3_diy_fp_encode_double@@Base+0x771>
  41bd81:	jmp    41c07d <grisu3_diy_fp_encode_double@@Base+0xa4d>
  41bd86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd90:	movsx  eax,BYTE PTR [rbx]
  41bd93:	lea    r11d,[rax-0x30]
  41bd97:	cmp    r11b,0x9
  41bd9b:	ja     41c07d <grisu3_diy_fp_encode_double@@Base+0xa4d>
  41bda1:	cmp    r9d,0x7fff
  41bda8:	jg     41bdb3 <grisu3_diy_fp_encode_double@@Base+0x783>
  41bdaa:	lea    r9d,[r9+r9*4]
  41bdae:	lea    r9d,[rax+r9*2-0x30]
  41bdb3:	add    rbx,0x1
  41bdb7:	cmp    r8,rbx
  41bdba:	jne    41bd90 <grisu3_diy_fp_encode_double@@Base+0x760>
  41bdbc:	mov    rbx,r8
  41bdbf:	test   r10d,r10d
  41bdc2:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41bdc8:	sub    esi,r9d
  41bdcb:	cmp    r8,rbx
  41bdce:	jne    41bab8 <grisu3_diy_fp_encode_double@@Base+0x488>
  41bdd4:	xor    ebx,ebx
  41bdd6:	jmp    41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41bddb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bde0:	mov    rbx,r8
  41bde3:	jmp    41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41bde8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bdf0:	mov    r9,r8
  41bdf3:	xor    edx,edx
  41bdf5:	xor    edi,edi
  41bdf7:	mov    esi,edx
  41bdf9:	xor    ecx,ecx
  41bdfb:	mov    rbx,r9
  41bdfe:	jmp    41bdcb <grisu3_diy_fp_encode_double@@Base+0x79b>
  41be00:	mov    r8,r12
  41be03:	call   41b630 <grisu3_diy_fp_encode_double@@Base>
  41be08:	test   eax,eax
  41be0a:	jne    41bc68 <grisu3_diy_fp_encode_double@@Base+0x638>
  41be10:	mov    rsi,rsp
  41be13:	mov    rdi,rbp
  41be16:	call   405050 <strtod@plt>
  41be1b:	mov    rax,QWORD PTR [rsp]
  41be1f:	vmovsd QWORD PTR [r12],xmm0
  41be25:	cmp    rbx,rax
  41be28:	cmova  rbx,rax
  41be2c:	jmp    41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41be31:	mov    rbx,rbp
  41be34:	jmp    41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41be39:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15327]        # 431168 <flatcc_builder_padding_base@@Base+0x1688>
  41be41:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41be46:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15322]        # 431170 <flatcc_builder_padding_base@@Base+0x1690>
  41be4e:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41be53:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1531d]        # 431178 <flatcc_builder_padding_base@@Base+0x1698>
  41be5b:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41be60:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15318]        # 431180 <flatcc_builder_padding_base@@Base+0x16a0>
  41be68:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41be6d:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15313]        # 431188 <flatcc_builder_padding_base@@Base+0x16a8>
  41be75:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41be7a:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1530e]        # 431190 <flatcc_builder_padding_base@@Base+0x16b0>
  41be82:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41be87:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15309]        # 431198 <flatcc_builder_padding_base@@Base+0x16b8>
  41be8f:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41be94:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15304]        # 4311a0 <flatcc_builder_padding_base@@Base+0x16c0>
  41be9c:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bea1:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152ff]        # 4311a8 <flatcc_builder_padding_base@@Base+0x16c8>
  41bea9:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41beae:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152fa]        # 4311b0 <flatcc_builder_padding_base@@Base+0x16d0>
  41beb6:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bebb:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152f5]        # 4311b8 <flatcc_builder_padding_base@@Base+0x16d8>
  41bec3:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bec8:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152f0]        # 4311c0 <flatcc_builder_padding_base@@Base+0x16e0>
  41bed0:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bed5:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152eb]        # 4311c8 <flatcc_builder_padding_base@@Base+0x16e8>
  41bedd:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bee2:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152e6]        # 4311d0 <flatcc_builder_padding_base@@Base+0x16f0>
  41beea:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41beef:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152e1]        # 4311d8 <flatcc_builder_padding_base@@Base+0x16f8>
  41bef7:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41befc:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152dc]        # 4311e0 <flatcc_builder_padding_base@@Base+0x1700>
  41bf04:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf09:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152d7]        # 4311e8 <flatcc_builder_padding_base@@Base+0x1708>
  41bf11:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf16:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152d2]        # 4311f0 <flatcc_builder_padding_base@@Base+0x1710>
  41bf1e:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf23:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152cd]        # 4311f8 <flatcc_builder_padding_base@@Base+0x1718>
  41bf2b:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf30:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x152c8]        # 431200 <flatcc_builder_padding_base@@Base+0x1720>
  41bf38:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf3d:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15213]        # 431158 <flatcc_builder_padding_base@@Base+0x1678>
  41bf45:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf4a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x152ae]        # 431200 <flatcc_builder_padding_base@@Base+0x1720>
  41bf52:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf57:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15299]        # 4311f8 <flatcc_builder_padding_base@@Base+0x1718>
  41bf5f:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf64:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15284]        # 4311f0 <flatcc_builder_padding_base@@Base+0x1710>
  41bf6c:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf71:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1526f]        # 4311e8 <flatcc_builder_padding_base@@Base+0x1708>
  41bf79:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf7e:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1525a]        # 4311e0 <flatcc_builder_padding_base@@Base+0x1700>
  41bf86:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf8b:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15245]        # 4311d8 <flatcc_builder_padding_base@@Base+0x16f8>
  41bf93:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bf98:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15230]        # 4311d0 <flatcc_builder_padding_base@@Base+0x16f0>
  41bfa0:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bfa5:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1521b]        # 4311c8 <flatcc_builder_padding_base@@Base+0x16e8>
  41bfad:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bfb2:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15206]        # 4311c0 <flatcc_builder_padding_base@@Base+0x16e0>
  41bfba:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bfbf:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x151f1]        # 4311b8 <flatcc_builder_padding_base@@Base+0x16d8>
  41bfc7:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bfcc:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x151dc]        # 4311b0 <flatcc_builder_padding_base@@Base+0x16d0>
  41bfd4:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bfd9:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x151c7]        # 4311a8 <flatcc_builder_padding_base@@Base+0x16c8>
  41bfe1:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bfe6:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x151b2]        # 4311a0 <flatcc_builder_padding_base@@Base+0x16c0>
  41bfee:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41bff3:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1519d]        # 431198 <flatcc_builder_padding_base@@Base+0x16b8>
  41bffb:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c000:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15188]        # 431190 <flatcc_builder_padding_base@@Base+0x16b0>
  41c008:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c00d:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15173]        # 431188 <flatcc_builder_padding_base@@Base+0x16a8>
  41c015:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c01a:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1515e]        # 431180 <flatcc_builder_padding_base@@Base+0x16a0>
  41c022:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c027:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15149]        # 431178 <flatcc_builder_padding_base@@Base+0x1698>
  41c02f:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c034:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x15134]        # 431170 <flatcc_builder_padding_base@@Base+0x1690>
  41c03c:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c041:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1511f]        # 431168 <flatcc_builder_padding_base@@Base+0x1688>
  41c049:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c04e:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x1510a]        # 431160 <flatcc_builder_padding_base@@Base+0x1680>
  41c056:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c05b:	vdivsd xmm0,xmm0,QWORD PTR [rip+0x150f5]        # 431158 <flatcc_builder_padding_base@@Base+0x1678>
  41c063:	jmp    41bc5c <grisu3_diy_fp_encode_double@@Base+0x62c>
  41c068:	nop    DWORD PTR [rax+rax*1+0x0]
  41c070:	mov    rbx,rcx
  41c073:	mov    ecx,0x1
  41c078:	jmp    41ba9a <grisu3_diy_fp_encode_double@@Base+0x46a>
  41c07d:	test   r10d,r10d
  41c080:	jne    41bdc8 <grisu3_diy_fp_encode_double@@Base+0x798>
  41c086:	add    esi,r9d
  41c089:	jmp    41bab8 <grisu3_diy_fp_encode_double@@Base+0x488>
  41c08e:	xchg   ax,ax
  41c090:	lea    rax,[rbx+0x2]
  41c094:	cmp    r8,rax
  41c097:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41c09d:	movsx  r9d,BYTE PTR [rbx+0x2]
  41c0a2:	xor    r10d,r10d
  41c0a5:	jmp    41bd58 <grisu3_diy_fp_encode_double@@Base+0x728>
  41c0aa:	mov    rax,rbx
  41c0ad:	sub    rax,r9
  41c0b0:	add    edx,eax
  41c0b2:	jmp    41c0c8 <grisu3_diy_fp_encode_double@@Base+0xa98>
  41c0b4:	nop    DWORD PTR [rax+0x0]
  41c0b8:	add    rbx,0x1
  41c0bc:	add    esi,0x1
  41c0bf:	cmp    r8,rbx
  41c0c2:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41c0c8:	movzx  eax,BYTE PTR [rbx]
  41c0cb:	cmp    al,0x30
  41c0cd:	je     41c0b8 <grisu3_diy_fp_encode_double@@Base+0xa88>
  41c0cf:	lea    r9d,[rax-0x31]
  41c0d3:	cmp    r9b,0x8
  41c0d7:	ja     41c128 <grisu3_diy_fp_encode_double@@Base+0xaf8>
  41c0d9:	lea    rcx,[rbx+0x1]
  41c0dd:	cmp    r8,rcx
  41c0e0:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41c0e6:	movzx  eax,BYTE PTR [rbx+0x1]
  41c0ea:	lea    r9d,[rax-0x30]
  41c0ee:	cmp    r9b,0x9
  41c0f2:	jbe    41c10d <grisu3_diy_fp_encode_double@@Base+0xadd>
  41c0f4:	jmp    41c11d <grisu3_diy_fp_encode_double@@Base+0xaed>
  41c0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c100:	movzx  eax,BYTE PTR [rcx]
  41c103:	lea    r9d,[rax-0x30]
  41c107:	cmp    r9b,0x9
  41c10b:	ja     41c11d <grisu3_diy_fp_encode_double@@Base+0xaed>
  41c10d:	add    rcx,0x1
  41c111:	cmp    r8,rcx
  41c114:	jne    41c100 <grisu3_diy_fp_encode_double@@Base+0xad0>
  41c116:	xor    ebx,ebx
  41c118:	jmp    41bb2c <grisu3_diy_fp_encode_double@@Base+0x4fc>
  41c11d:	mov    rbx,rcx
  41c120:	mov    ecx,0x1
  41c125:	nop    DWORD PTR [rax]
  41c128:	add    esi,edx
  41c12a:	jmp    41baad <grisu3_diy_fp_encode_double@@Base+0x47d>
  41c12f:	mov    edx,r8d
  41c132:	sub    edx,r9d
  41c135:	mov    r9,r8
  41c138:	jmp    41bdf7 <grisu3_diy_fp_encode_double@@Base+0x7c7>
  41c13d:	mov    r10d,ebx
  41c140:	sub    r10d,r9d
  41c143:	mov    r9d,r10d
  41c146:	test   ecx,ecx
  41c148:	je     41c152 <grisu3_diy_fp_encode_double@@Base+0xb22>
  41c14a:	add    edx,r9d
  41c14d:	jmp    41c0c8 <grisu3_diy_fp_encode_double@@Base+0xa98>
  41c152:	cmp    al,0x34
  41c154:	setg   al
  41c157:	add    edx,r9d
  41c15a:	movzx  eax,al
  41c15d:	add    rdi,rax
  41c160:	cmp    r8,rbx
  41c163:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41c169:	mov    ecx,0x1
  41c16e:	jmp    41c0c8 <grisu3_diy_fp_encode_double@@Base+0xa98>
  41c173:	lea    rax,[rbx+0x2]
  41c177:	cmp    r8,rax
  41c17a:	je     41bb83 <grisu3_diy_fp_encode_double@@Base+0x553>
  41c180:	movsx  r9d,BYTE PTR [rbx+0x2]
  41c185:	mov    r10d,0x1
  41c18b:	jmp    41bd58 <grisu3_diy_fp_encode_double@@Base+0x728>
  41c190:	xor    edx,edx
  41c192:	jmp    41ba88 <grisu3_diy_fp_encode_double@@Base+0x458>
  41c197:	xor    edx,edx
  41c199:	jmp    41bdf7 <grisu3_diy_fp_encode_double@@Base+0x7c7>
  41c19e:	xor    r9d,r9d
  41c1a1:	jmp    41c146 <grisu3_diy_fp_encode_double@@Base+0xb16>
  41c1a3:	xor    eax,eax
  41c1a5:	jmp    41bd19 <grisu3_diy_fp_encode_double@@Base+0x6e9>
  41c1aa:	call   405070 <__stack_chk_fail@plt>
  41c1af:	mov    ecx,0x1
  41c1b4:	xor    esi,esi
  41c1b6:	jmp    41bbf5 <grisu3_diy_fp_encode_double@@Base+0x5c5>
  41c1bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c1c0 <flatcc_json_parser_error_string@@Base>:
  41c1c0:	cmp    edi,0x22
  41c1c3:	ja     41c410 <flatcc_json_parser_error_string@@Base+0x250>
  41c1c9:	lea    rdx,[rip+0x14564]        # 430734 <flatcc_builder_padding_base@@Base+0xc54>
  41c1d0:	mov    edi,edi
  41c1d2:	movsxd rax,DWORD PTR [rdx+rdi*4]
  41c1d6:	add    rax,rdx
  41c1d9:	jmp    rax
  41c1db:	nop    DWORD PTR [rax+rax*1+0x0]
  41c1e0:	lea    rax,[rip+0x13af9]        # 42fce0 <flatcc_builder_padding_base@@Base+0x200>
  41c1e7:	ret    
  41c1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c1f0:	lea    rax,[rip+0x13c85]        # 42fe7c <flatcc_builder_padding_base@@Base+0x39c>
  41c1f7:	ret    
  41c1f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c200:	lea    rax,[rip+0x1443d]        # 430644 <flatcc_builder_padding_base@@Base+0xb64>
  41c207:	ret    
  41c208:	nop    DWORD PTR [rax+rax*1+0x0]
  41c210:	lea    rax,[rip+0x14413]        # 43062a <flatcc_builder_padding_base@@Base+0xb4a>
  41c217:	ret    
  41c218:	nop    DWORD PTR [rax+rax*1+0x0]
  41c220:	lea    rax,[rip+0x143ec]        # 430613 <flatcc_builder_padding_base@@Base+0xb33>
  41c227:	ret    
  41c228:	nop    DWORD PTR [rax+rax*1+0x0]
  41c230:	lea    rax,[rip+0x143bf]        # 4305f6 <flatcc_builder_padding_base@@Base+0xb16>
  41c237:	ret    
  41c238:	nop    DWORD PTR [rax+rax*1+0x0]
  41c240:	lea    rax,[rip+0x13ae2]        # 42fd29 <flatcc_builder_padding_base@@Base+0x249>
  41c247:	ret    
  41c248:	nop    DWORD PTR [rax+rax*1+0x0]
  41c250:	lea    rax,[rip+0x14385]        # 4305dc <flatcc_builder_padding_base@@Base+0xafc>
  41c257:	ret    
  41c258:	nop    DWORD PTR [rax+rax*1+0x0]
  41c260:	lea    rax,[rip+0x1435a]        # 4305c1 <flatcc_builder_padding_base@@Base+0xae1>
  41c267:	ret    
  41c268:	nop    DWORD PTR [rax+rax*1+0x0]
  41c270:	lea    rax,[rip+0x140f9]        # 430370 <flatcc_builder_padding_base@@Base+0x890>
  41c277:	ret    
  41c278:	nop    DWORD PTR [rax+rax*1+0x0]
  41c280:	lea    rax,[rip+0x1431d]        # 4305a4 <flatcc_builder_padding_base@@Base+0xac4>
  41c287:	ret    
  41c288:	nop    DWORD PTR [rax+rax*1+0x0]
  41c290:	lea    rax,[rip+0x142f9]        # 430590 <flatcc_builder_padding_base@@Base+0xab0>
  41c297:	ret    
  41c298:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2a0:	lea    rax,[rip+0x140a1]        # 430348 <flatcc_builder_padding_base@@Base+0x868>
  41c2a7:	ret    
  41c2a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2b0:	lea    rax,[rip+0x142ca]        # 430581 <flatcc_builder_padding_base@@Base+0xaa1>
  41c2b7:	ret    
  41c2b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2c0:	lea    rax,[rip+0x142aa]        # 430571 <flatcc_builder_padding_base@@Base+0xa91>
  41c2c7:	ret    
  41c2c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2d0:	lea    rax,[rip+0x14286]        # 43055d <flatcc_builder_padding_base@@Base+0xa7d>
  41c2d7:	ret    
  41c2d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2e0:	lea    rax,[rip+0x14269]        # 430550 <flatcc_builder_padding_base@@Base+0xa70>
  41c2e7:	ret    
  41c2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c2f0:	lea    rax,[rip+0x1424a]        # 430541 <flatcc_builder_padding_base@@Base+0xa61>
  41c2f7:	ret    
  41c2f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c300:	lea    rax,[rip+0x14228]        # 43052f <flatcc_builder_padding_base@@Base+0xa4f>
  41c307:	ret    
  41c308:	nop    DWORD PTR [rax+rax*1+0x0]
  41c310:	lea    rax,[rip+0x14208]        # 43051f <flatcc_builder_padding_base@@Base+0xa3f>
  41c317:	ret    
  41c318:	nop    DWORD PTR [rax+rax*1+0x0]
  41c320:	lea    rax,[rip+0x141e5]        # 43050c <flatcc_builder_padding_base@@Base+0xa2c>
  41c327:	ret    
  41c328:	nop    DWORD PTR [rax+rax*1+0x0]
  41c330:	lea    rax,[rip+0x141bc]        # 4304f3 <flatcc_builder_padding_base@@Base+0xa13>
  41c337:	ret    
  41c338:	nop    DWORD PTR [rax+rax*1+0x0]
  41c340:	lea    rax,[rip+0x1419d]        # 4304e4 <flatcc_builder_padding_base@@Base+0xa04>
  41c347:	ret    
  41c348:	nop    DWORD PTR [rax+rax*1+0x0]
  41c350:	lea    rax,[rip+0x1417c]        # 4304d3 <flatcc_builder_padding_base@@Base+0x9f3>
  41c357:	ret    
  41c358:	nop    DWORD PTR [rax+rax*1+0x0]
  41c360:	lea    rax,[rip+0x1415d]        # 4304c4 <flatcc_builder_padding_base@@Base+0x9e4>
  41c367:	ret    
  41c368:	nop    DWORD PTR [rax+rax*1+0x0]
  41c370:	lea    rax,[rip+0x1413b]        # 4304b2 <flatcc_builder_padding_base@@Base+0x9d2>
  41c377:	ret    
  41c378:	nop    DWORD PTR [rax+rax*1+0x0]
  41c380:	lea    rax,[rip+0x1411a]        # 4304a1 <flatcc_builder_padding_base@@Base+0x9c1>
  41c387:	ret    
  41c388:	nop    DWORD PTR [rax+rax*1+0x0]
  41c390:	lea    rax,[rip+0x14100]        # 430497 <flatcc_builder_padding_base@@Base+0x9b7>
  41c397:	ret    
  41c398:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3a0:	lea    rax,[rip+0x13a44]        # 42fdeb <flatcc_builder_padding_base@@Base+0x30b>
  41c3a7:	ret    
  41c3a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3b0:	lea    rax,[rip+0x140d0]        # 430487 <flatcc_builder_padding_base@@Base+0x9a7>
  41c3b7:	ret    
  41c3b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3c0:	lea    rax,[rip+0x140ab]        # 430472 <flatcc_builder_padding_base@@Base+0x992>
  41c3c7:	ret    
  41c3c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3d0:	lea    rax,[rip+0x1408c]        # 430463 <flatcc_builder_padding_base@@Base+0x983>
  41c3d7:	ret    
  41c3d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3e0:	lea    rax,[rip+0x1406d]        # 430454 <flatcc_builder_padding_base@@Base+0x974>
  41c3e7:	ret    
  41c3e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3f0:	lea    rax,[rip+0x14050]        # 430447 <flatcc_builder_padding_base@@Base+0x967>
  41c3f7:	ret    
  41c3f8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c400:	lea    rax,[rip+0x1403c]        # 430443 <flatcc_builder_padding_base@@Base+0x963>
  41c407:	ret    
  41c408:	nop    DWORD PTR [rax+rax*1+0x0]
  41c410:	lea    rax,[rip+0x13a73]        # 42fe8a <flatcc_builder_padding_base@@Base+0x3aa>
  41c417:	ret    
  41c418:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c420 <flatcc_json_parser_set_error@@Base>:
  41c420:	mov    rax,rdx
  41c423:	mov    edx,DWORD PTR [rdi+0x20]
  41c426:	test   edx,edx
  41c428:	jne    41c43e <flatcc_json_parser_set_error@@Base+0x1e>
  41c42a:	mov    DWORD PTR [rdi+0x20],ecx
  41c42d:	mov    rcx,rsi
  41c430:	sub    rcx,QWORD PTR [rdi+0x8]
  41c434:	mov    QWORD PTR [rdi+0x38],rsi
  41c438:	add    ecx,0x1
  41c43b:	mov    DWORD PTR [rdi+0x1c],ecx
  41c43e:	repz ret 

000000000041c440 <flatcc_json_parser_string_part@@Base>:
  41c440:	cmp    rsi,rdx
  41c443:	mov    r8,rdx
  41c446:	je     41c478 <flatcc_json_parser_string_part@@Base+0x38>
  41c448:	movzx  eax,BYTE PTR [rsi]
  41c44b:	cmp    al,0x22
  41c44d:	je     41c4a8 <flatcc_json_parser_string_part@@Base+0x68>
  41c44f:	cmp    al,0x5c
  41c451:	je     41c490 <flatcc_json_parser_string_part@@Base+0x50>
  41c453:	cmp    al,0x1f
  41c455:	ja     41c46f <flatcc_json_parser_string_part@@Base+0x2f>
  41c457:	jmp    41c490 <flatcc_json_parser_string_part@@Base+0x50>
  41c459:	nop    DWORD PTR [rax+0x0]
  41c460:	movzx  eax,BYTE PTR [rsi]
  41c463:	cmp    al,0x22
  41c465:	je     41c4a8 <flatcc_json_parser_string_part@@Base+0x68>
  41c467:	cmp    al,0x1f
  41c469:	jbe    41c490 <flatcc_json_parser_string_part@@Base+0x50>
  41c46b:	cmp    al,0x5c
  41c46d:	je     41c490 <flatcc_json_parser_string_part@@Base+0x50>
  41c46f:	add    rsi,0x1
  41c473:	cmp    r8,rsi
  41c476:	jne    41c460 <flatcc_json_parser_string_part@@Base+0x20>
  41c478:	mov    ecx,0x14
  41c47d:	mov    rdx,r8
  41c480:	mov    rsi,r8
  41c483:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41c488:	nop    DWORD PTR [rax+rax*1+0x0]
  41c490:	cmp    al,0x1f
  41c492:	jg     41c4a8 <flatcc_json_parser_string_part@@Base+0x68>
  41c494:	mov    ecx,0x11
  41c499:	mov    rdx,r8
  41c49c:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41c4a1:	nop    DWORD PTR [rax+0x0]
  41c4a8:	mov    rax,rsi
  41c4ab:	ret    
  41c4ac:	nop    DWORD PTR [rax+0x0]

000000000041c4b0 <flatcc_json_parser_space_ext@@Base>:
  41c4b0:	mov    rax,rdx
  41c4b3:	sub    rax,rsi
  41c4b6:	cmp    rax,0xf
  41c4ba:	jle    41c4f4 <flatcc_json_parser_space_ext@@Base+0x44>
  41c4bc:	movzx  ecx,BYTE PTR [rsi]
  41c4bf:	cmp    cl,0x20
  41c4c2:	jg     41c554 <flatcc_json_parser_space_ext@@Base+0xa4>
  41c4c8:	cmp    WORD PTR [rsi],0x2020
  41c4cd:	je     41c570 <flatcc_json_parser_space_ext@@Base+0xc0>
  41c4d3:	cmp    cl,0x20
  41c4d6:	je     41c57c <flatcc_json_parser_space_ext@@Base+0xcc>
  41c4dc:	cmp    rsi,rdx
  41c4df:	jne    41c500 <flatcc_json_parser_space_ext@@Base+0x50>
  41c4e1:	mov    rax,rdx
  41c4e4:	ret    
  41c4e5:	nop    DWORD PTR [rax]
  41c4e8:	movzx  ecx,BYTE PTR [rsi]
  41c4eb:	cmp    cl,0x20
  41c4ee:	jne    41c500 <flatcc_json_parser_space_ext@@Base+0x50>
  41c4f0:	add    rsi,0x1
  41c4f4:	cmp    rdx,rsi
  41c4f7:	jne    41c4e8 <flatcc_json_parser_space_ext@@Base+0x38>
  41c4f9:	jmp    41c4e1 <flatcc_json_parser_space_ext@@Base+0x31>
  41c4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c500:	cmp    cl,0x20
  41c503:	jg     41c554 <flatcc_json_parser_space_ext@@Base+0xa4>
  41c505:	cmp    cl,0xa
  41c508:	je     41c53b <flatcc_json_parser_space_ext@@Base+0x8b>
  41c50a:	jle    41c560 <flatcc_json_parser_space_ext@@Base+0xb0>
  41c50c:	cmp    cl,0xd
  41c50f:	je     41c520 <flatcc_json_parser_space_ext@@Base+0x70>
  41c511:	cmp    cl,0x20
  41c514:	je     41c4b0 <flatcc_json_parser_space_ext@@Base>
  41c516:	mov    ecx,0x5
  41c51b:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41c520:	mov    rcx,rdx
  41c523:	xor    eax,eax
  41c525:	sub    rcx,rsi
  41c528:	cmp    rcx,0x1
  41c52c:	jle    41c535 <flatcc_json_parser_space_ext@@Base+0x85>
  41c52e:	cmp    BYTE PTR [rsi+0x1],0xa
  41c532:	sete   al
  41c535:	movzx  eax,al
  41c538:	add    rsi,rax
  41c53b:	add    DWORD PTR [rdi+0x18],0x1
  41c53f:	add    rsi,0x1
  41c543:	mov    QWORD PTR [rdi+0x8],rsi
  41c547:	cmp    rdx,rsi
  41c54a:	je     41c4e1 <flatcc_json_parser_space_ext@@Base+0x31>
  41c54c:	movzx  ecx,BYTE PTR [rsi]
  41c54f:	cmp    cl,0x20
  41c552:	jle    41c505 <flatcc_json_parser_space_ext@@Base+0x55>
  41c554:	mov    rdx,rsi
  41c557:	jmp    41c4e1 <flatcc_json_parser_space_ext@@Base+0x31>
  41c55c:	nop    DWORD PTR [rax+0x0]
  41c560:	cmp    cl,0x9
  41c563:	jne    41c516 <flatcc_json_parser_space_ext@@Base+0x66>
  41c565:	add    rsi,0x1
  41c569:	jmp    41c547 <flatcc_json_parser_space_ext@@Base+0x97>
  41c56b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c570:	movzx  eax,BYTE PTR [rsi+0x2]
  41c574:	add    rsi,0x2
  41c578:	cmp    al,0x20
  41c57a:	jne    41c584 <flatcc_json_parser_space_ext@@Base+0xd4>
  41c57c:	movzx  eax,BYTE PTR [rsi+0x1]
  41c580:	add    rsi,0x1
  41c584:	cmp    al,0x20
  41c586:	jle    41c4f4 <flatcc_json_parser_space_ext@@Base+0x44>
  41c58c:	jmp    41c554 <flatcc_json_parser_space_ext@@Base+0xa4>
  41c58e:	xchg   ax,ax
  41c590:	push   r15
  41c592:	push   r14
  41c594:	push   r13
  41c596:	push   r12
  41c598:	mov    r12,rdi
  41c59b:	push   rbp
  41c59c:	push   rbx
  41c59d:	mov    rbx,rdx
  41c5a0:	mov    rbp,rsi
  41c5a3:	sub    rsp,0x58
  41c5a7:	mov    BYTE PTR [r8],0x0
  41c5ab:	mov    rdx,QWORD PTR fs:0x28
  41c5b4:	mov    QWORD PTR [rsp+0x48],rdx
  41c5b9:	xor    edx,edx
  41c5bb:	cmp    rsi,rbx
  41c5be:	mov    QWORD PTR [rsp+0x10],rcx
  41c5c3:	mov    QWORD PTR [rsp+0x20],r8
  41c5c8:	je     41c73c <flatcc_json_parser_space_ext@@Base+0x28c>
  41c5ce:	movzx  eax,BYTE PTR [rsi]
  41c5d1:	cmp    al,0x22
  41c5d3:	je     41c6fe <flatcc_json_parser_space_ext@@Base+0x24e>
  41c5d9:	cmp    al,0x2e
  41c5db:	je     41c750 <flatcc_json_parser_space_ext@@Base+0x2a0>
  41c5e1:	mov    DWORD PTR [rdi+0x14],0x1
  41c5e8:	lea    rax,[rsp+0x38]
  41c5ed:	lea    r15,[rsp+0x3c]
  41c5f2:	lea    r14,[rsp+0x40]
  41c5f7:	mov    BYTE PTR [rsp+0x1f],0x0
  41c5fc:	mov    QWORD PTR [rsp+0x8],rax
  41c601:	mov    r13,QWORD PTR [rsp+0x10]
  41c606:	mov    rax,QWORD PTR [r13+0x0]
  41c60a:	jmp    41c626 <flatcc_json_parser_space_ext@@Base+0x176>
  41c60c:	nop    DWORD PTR [rax+0x0]
  41c610:	cmp    rbp,rax
  41c613:	jne    41c670 <flatcc_json_parser_space_ext@@Base+0x1c0>
  41c615:	add    r13,0x8
  41c619:	mov    rax,QWORD PTR [r13+0x0]
  41c61d:	test   rax,rax
  41c620:	je     41c6b0 <flatcc_json_parser_space_ext@@Base+0x200>
  41c626:	mov    r9,r15
  41c629:	mov    r8,r14
  41c62c:	mov    rcx,QWORD PTR [rsp+0x8]
  41c631:	mov    rdx,rbx
  41c634:	mov    rsi,rbp
  41c637:	mov    rdi,r12
  41c63a:	call   rax
  41c63c:	cmp    rbx,rax
  41c63f:	jne    41c610 <flatcc_json_parser_space_ext@@Base+0x160>
  41c641:	mov    rsi,QWORD PTR [rsp+0x48]
  41c646:	xor    rsi,QWORD PTR fs:0x28
  41c64f:	mov    rax,rbx
  41c652:	jne    41c785 <flatcc_json_parser_space_ext@@Base+0x2d5>
  41c658:	add    rsp,0x58
  41c65c:	pop    rbx
  41c65d:	pop    rbp
  41c65e:	pop    r12
  41c660:	pop    r13
  41c662:	pop    r14
  41c664:	pop    r15
  41c666:	ret    
  41c667:	nop    WORD PTR [rax+rax*1+0x0]
  41c670:	mov    r8,rax
  41c673:	mov    eax,DWORD PTR [rsp+0x38]
  41c677:	test   eax,eax
  41c679:	jne    41c6d0 <flatcc_json_parser_space_ext@@Base+0x220>
  41c67b:	mov    rax,QWORD PTR [rsp+0x40]
  41c680:	cmp    rax,0xff
  41c686:	ja     41c6f7 <flatcc_json_parser_space_ext@@Base+0x247>
  41c688:	mov    BYTE PTR [rsp+0x1f],al
  41c68c:	mov    rax,QWORD PTR [rsp+0x20]
  41c691:	movzx  ecx,BYTE PTR [rsp+0x1f]
  41c696:	add    BYTE PTR [rax],cl
  41c698:	mov    ecx,DWORD PTR [rsp+0x3c]
  41c69c:	test   ecx,ecx
  41c69e:	je     41c77d <flatcc_json_parser_space_ext@@Base+0x2cd>
  41c6a4:	mov    rbp,r8
  41c6a7:	jmp    41c601 <flatcc_json_parser_space_ext@@Base+0x151>
  41c6ac:	nop    DWORD PTR [rax+0x0]
  41c6b0:	mov    rdx,rbx
  41c6b3:	mov    ecx,0x17
  41c6b8:	mov    rsi,rbp
  41c6bb:	mov    rdi,r12
  41c6be:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41c6c3:	mov    rbx,rax
  41c6c6:	jmp    41c641 <flatcc_json_parser_space_ext@@Base+0x191>
  41c6cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41c6d0:	mov    ecx,0x8
  41c6d5:	mov    rsi,r8
  41c6d8:	mov    rdx,rbx
  41c6db:	mov    rdi,r12
  41c6de:	mov    QWORD PTR [rsp+0x28],r8
  41c6e3:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41c6e8:	cmp    rbx,rax
  41c6eb:	mov    r8,QWORD PTR [rsp+0x28]
  41c6f0:	jne    41c68c <flatcc_json_parser_space_ext@@Base+0x1dc>
  41c6f2:	jmp    41c641 <flatcc_json_parser_space_ext@@Base+0x191>
  41c6f7:	mov    ecx,0x7
  41c6fc:	jmp    41c6d5 <flatcc_json_parser_space_ext@@Base+0x225>
  41c6fe:	add    rbp,0x1
  41c702:	mov    rax,rbx
  41c705:	mov    DWORD PTR [rdi+0x14],0x0
  41c70c:	sub    rax,rbp
  41c70f:	cmp    rax,0x1
  41c713:	jle    41c71d <flatcc_json_parser_space_ext@@Base+0x26d>
  41c715:	cmp    BYTE PTR [rbp+0x0],0x20
  41c719:	jg     41c72e <flatcc_json_parser_space_ext@@Base+0x27e>
  41c71b:	je     41c771 <flatcc_json_parser_space_ext@@Base+0x2c1>
  41c71d:	mov    rsi,rbp
  41c720:	mov    rdx,rbx
  41c723:	mov    rdi,r12
  41c726:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41c72b:	mov    rbp,rax
  41c72e:	cmp    rbx,rbp
  41c731:	jne    41c5e8 <flatcc_json_parser_space_ext@@Base+0x138>
  41c737:	jmp    41c641 <flatcc_json_parser_space_ext@@Base+0x191>
  41c73c:	mov    edx,DWORD PTR [rdi+0x14]
  41c73f:	test   edx,edx
  41c741:	je     41c71d <flatcc_json_parser_space_ext@@Base+0x26d>
  41c743:	jmp    41c641 <flatcc_json_parser_space_ext@@Base+0x191>
  41c748:	nop    DWORD PTR [rax+rax*1+0x0]
  41c750:	mov    ecx,0x5
  41c755:	mov    rdx,rbx
  41c758:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41c75d:	mov    esi,DWORD PTR [r12+0x14]
  41c762:	mov    rbp,rax
  41c765:	test   esi,esi
  41c767:	jne    41c72e <flatcc_json_parser_space_ext@@Base+0x27e>
  41c769:	mov    rax,rbx
  41c76c:	sub    rax,rbp
  41c76f:	jmp    41c70f <flatcc_json_parser_space_ext@@Base+0x25f>
  41c771:	cmp    BYTE PTR [rbp+0x1],0x20
  41c775:	jle    41c71d <flatcc_json_parser_space_ext@@Base+0x26d>
  41c777:	add    rbp,0x1
  41c77b:	jmp    41c72e <flatcc_json_parser_space_ext@@Base+0x27e>
  41c77d:	mov    rbx,r8
  41c780:	jmp    41c641 <flatcc_json_parser_space_ext@@Base+0x191>
  41c785:	call   405070 <__stack_chk_fail@plt>
  41c78a:	nop    WORD PTR [rax+rax*1+0x0]
  41c790:	push   r15
  41c792:	push   r14
  41c794:	mov    r14,rsi
  41c797:	push   r13
  41c799:	push   r12
  41c79b:	mov    r12d,r8d
  41c79e:	push   rbp
  41c79f:	push   rbx
  41c7a0:	mov    rbp,rdi
  41c7a3:	mov    rbx,rdx
  41c7a6:	sub    rsp,0x38
  41c7aa:	mov    rdi,QWORD PTR [rdi]
  41c7ad:	mov    rax,QWORD PTR fs:0x28
  41c7b6:	mov    QWORD PTR [rsp+0x28],rax
  41c7bb:	xor    eax,eax
  41c7bd:	mov    QWORD PTR [rsp],rcx
  41c7c1:	mov    DWORD PTR [rsp+0x1c],r9d
  41c7c6:	mov    r15,QWORD PTR [rsp+0x70]
  41c7cb:	mov    DWORD PTR [rsp+0x24],0x0
  41c7d3:	call   417240 <flatcc_builder_start_offset_vector@@Base>
  41c7d8:	test   eax,eax
  41c7da:	jne    41c830 <flatcc_json_parser_space_ext@@Base+0x380>
  41c7dc:	cmp    r14,rbx
  41c7df:	je     41c7eb <flatcc_json_parser_space_ext@@Base+0x33b>
  41c7e1:	cmp    BYTE PTR [r14],0x5b
  41c7e5:	je     41c870 <flatcc_json_parser_space_ext@@Base+0x3c0>
  41c7eb:	mov    rsi,r14
  41c7ee:	mov    ecx,0x16
  41c7f3:	mov    rdx,rbx
  41c7f6:	mov    rdi,rbp
  41c7f9:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41c7fe:	mov    r14,rax
  41c801:	mov    eax,r12d
  41c804:	mov    QWORD PTR [rsp+0x8],rax
  41c809:	xor    eax,eax
  41c80b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c810:	cmp    rax,QWORD PTR [rsp+0x8]
  41c815:	je     41cae9 <flatcc_json_parser_space_ext@@Base+0x639>
  41c81b:	mov    ecx,0x1e
  41c820:	mov    rdx,rbx
  41c823:	mov    rsi,r14
  41c826:	mov    rdi,rbp
  41c829:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41c82e:	jmp    41c843 <flatcc_json_parser_space_ext@@Base+0x393>
  41c830:	mov    ecx,0x21
  41c835:	mov    rdx,rbx
  41c838:	mov    rsi,r14
  41c83b:	mov    rdi,rbp
  41c83e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41c843:	mov    rcx,QWORD PTR [rsp+0x28]
  41c848:	xor    rcx,QWORD PTR fs:0x28
  41c851:	jne    41cbcb <flatcc_json_parser_space_ext@@Base+0x71b>
  41c857:	add    rsp,0x38
  41c85b:	pop    rbx
  41c85c:	pop    rbp
  41c85d:	pop    r12
  41c85f:	pop    r13
  41c861:	pop    r14
  41c863:	pop    r15
  41c865:	ret    
  41c866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c870:	lea    r13,[r14+0x1]
  41c874:	mov    rax,rbx
  41c877:	sub    rax,r13
  41c87a:	cmp    rax,0x1
  41c87e:	jle    41c88d <flatcc_json_parser_space_ext@@Base+0x3dd>
  41c880:	cmp    BYTE PTR [r14+0x1],0x20
  41c885:	jg     41c89e <flatcc_json_parser_space_ext@@Base+0x3ee>
  41c887:	je     41cb33 <flatcc_json_parser_space_ext@@Base+0x683>
  41c88d:	mov    rsi,r13
  41c890:	mov    rdx,rbx
  41c893:	mov    rdi,rbp
  41c896:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41c89b:	mov    r13,rax
  41c89e:	cmp    rbx,r13
  41c8a1:	je     41c8ae <flatcc_json_parser_space_ext@@Base+0x3fe>
  41c8a3:	cmp    BYTE PTR [r13+0x0],0x5d
  41c8a8:	je     41cb7b <flatcc_json_parser_space_ext@@Base+0x6cb>
  41c8ae:	mov    eax,r12d
  41c8b1:	test   rax,rax
  41c8b4:	mov    QWORD PTR [rsp+0x8],rax
  41c8b9:	je     41ca3d <flatcc_json_parser_space_ext@@Base+0x58d>
  41c8bf:	lea    rax,[rsp+0x24]
  41c8c4:	xor    r12d,r12d
  41c8c7:	mov    QWORD PTR [rsp+0x10],rax
  41c8cc:	nop    DWORD PTR [rax+0x0]
  41c8d0:	mov    rsi,QWORD PTR [rsp]
  41c8d4:	mov    rdi,QWORD PTR [rbp+0x0]
  41c8d8:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41c8dd:	movzx  ecx,BYTE PTR [rax+r12*1]
  41c8e2:	mov    r8,QWORD PTR [rsp+0x10]
  41c8e7:	mov    rdx,rbx
  41c8ea:	mov    rsi,r13
  41c8ed:	mov    rdi,rbp
  41c8f0:	call   r15
  41c8f3:	cmp    rbx,rax
  41c8f6:	mov    r14,rax
  41c8f9:	je     41ca80 <flatcc_json_parser_space_ext@@Base+0x5d0>
  41c8ff:	mov    rdi,QWORD PTR [rbp+0x0]
  41c903:	mov    esi,0x1
  41c908:	call   416d00 <flatcc_builder_extend_offset_vector@@Base>
  41c90d:	test   rax,rax
  41c910:	je     41c830 <flatcc_json_parser_space_ext@@Base+0x380>
  41c916:	mov    edx,DWORD PTR [rsp+0x24]
  41c91a:	mov    DWORD PTR [rax],edx
  41c91c:	mov    rax,rbx
  41c91f:	sub    rax,r14
  41c922:	cmp    rax,0x1
  41c926:	jle    41c936 <flatcc_json_parser_space_ext@@Base+0x486>
  41c928:	movzx  eax,BYTE PTR [r14]
  41c92c:	cmp    al,0x20
  41c92e:	jg     41c954 <flatcc_json_parser_space_ext@@Base+0x4a4>
  41c930:	je     41c9c0 <flatcc_json_parser_space_ext@@Base+0x510>
  41c936:	mov    rsi,r14
  41c939:	mov    rdx,rbx
  41c93c:	mov    rdi,rbp
  41c93f:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41c944:	mov    r14,rax
  41c947:	cmp    rbx,r14
  41c94a:	je     41c9e0 <flatcc_json_parser_space_ext@@Base+0x530>
  41c950:	movzx  eax,BYTE PTR [r14]
  41c954:	cmp    al,0x2c
  41c956:	je     41c9f0 <flatcc_json_parser_space_ext@@Base+0x540>
  41c95c:	cmp    al,0x5d
  41c95e:	je     41c980 <flatcc_json_parser_space_ext@@Base+0x4d0>
  41c960:	mov    rsi,r14
  41c963:	mov    ecx,0x9
  41c968:	mov    rdx,rbx
  41c96b:	mov    rdi,rbp
  41c96e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41c973:	mov    r14,rax
  41c976:	lea    rax,[r12+0x1]
  41c97b:	jmp    41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41c980:	lea    rsi,[r14+0x1]
  41c984:	mov    rax,rbx
  41c987:	sub    rax,rsi
  41c98a:	cmp    rax,0x1
  41c98e:	jle    41c9a1 <flatcc_json_parser_space_ext@@Base+0x4f1>
  41c990:	cmp    BYTE PTR [r14+0x1],0x20
  41c995:	jg     41ca58 <flatcc_json_parser_space_ext@@Base+0x5a8>
  41c99b:	je     41ca68 <flatcc_json_parser_space_ext@@Base+0x5b8>
  41c9a1:	mov    rdx,rbx
  41c9a4:	mov    rdi,rbp
  41c9a7:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41c9ac:	mov    r14,rax
  41c9af:	lea    rax,[r12+0x1]
  41c9b4:	jmp    41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41c9b9:	nop    DWORD PTR [rax+0x0]
  41c9c0:	cmp    BYTE PTR [r14+0x1],0x20
  41c9c5:	jle    41c936 <flatcc_json_parser_space_ext@@Base+0x486>
  41c9cb:	add    r14,0x1
  41c9cf:	cmp    rbx,r14
  41c9d2:	jne    41c950 <flatcc_json_parser_space_ext@@Base+0x4a0>
  41c9d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c9e0:	lea    rax,[r12+0x1]
  41c9e5:	jmp    41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41c9ea:	nop    WORD PTR [rax+rax*1+0x0]
  41c9f0:	lea    r13,[r14+0x1]
  41c9f4:	mov    rax,rbx
  41c9f7:	sub    rax,r13
  41c9fa:	cmp    rax,0x1
  41c9fe:	jle    41ca0d <flatcc_json_parser_space_ext@@Base+0x55d>
  41ca00:	cmp    BYTE PTR [r14+0x1],0x20
  41ca05:	jg     41ca1e <flatcc_json_parser_space_ext@@Base+0x56e>
  41ca07:	je     41ca90 <flatcc_json_parser_space_ext@@Base+0x5e0>
  41ca0d:	mov    rsi,r13
  41ca10:	mov    rdx,rbx
  41ca13:	mov    rdi,rbp
  41ca16:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41ca1b:	mov    r13,rax
  41ca1e:	cmp    rbx,r13
  41ca21:	je     41cb47 <flatcc_json_parser_space_ext@@Base+0x697>
  41ca27:	cmp    BYTE PTR [r13+0x0],0x5d
  41ca2c:	je     41caa8 <flatcc_json_parser_space_ext@@Base+0x5f8>
  41ca2e:	add    r12,0x1
  41ca32:	cmp    QWORD PTR [rsp+0x8],r12
  41ca37:	jne    41c8d0 <flatcc_json_parser_space_ext@@Base+0x420>
  41ca3d:	mov    ecx,0x1e
  41ca42:	mov    rdx,rbx
  41ca45:	mov    rsi,r13
  41ca48:	mov    rdi,rbp
  41ca4b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41ca50:	jmp    41c843 <flatcc_json_parser_space_ext@@Base+0x393>
  41ca55:	nop    DWORD PTR [rax]
  41ca58:	lea    rax,[r12+0x1]
  41ca5d:	mov    r14,rsi
  41ca60:	jmp    41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41ca65:	nop    DWORD PTR [rax]
  41ca68:	cmp    BYTE PTR [r14+0x2],0x20
  41ca6d:	jle    41c9a1 <flatcc_json_parser_space_ext@@Base+0x4f1>
  41ca73:	add    r14,0x2
  41ca77:	jmp    41c9e0 <flatcc_json_parser_space_ext@@Base+0x530>
  41ca7c:	nop    DWORD PTR [rax+0x0]
  41ca80:	mov    rax,rbx
  41ca83:	jmp    41c843 <flatcc_json_parser_space_ext@@Base+0x393>
  41ca88:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca90:	cmp    BYTE PTR [r14+0x2],0x20
  41ca95:	jle    41ca0d <flatcc_json_parser_space_ext@@Base+0x55d>
  41ca9b:	lea    r13,[r14+0x2]
  41ca9f:	jmp    41ca1e <flatcc_json_parser_space_ext@@Base+0x56e>
  41caa4:	nop    DWORD PTR [rax+0x0]
  41caa8:	lea    r14,[r13+0x1]
  41caac:	mov    rax,rbx
  41caaf:	sub    rax,r14
  41cab2:	cmp    rax,0x1
  41cab6:	jle    41cace <flatcc_json_parser_space_ext@@Base+0x61e>
  41cab8:	cmp    BYTE PTR [r13+0x1],0x20
  41cabd:	lea    rax,[r12+0x1]
  41cac2:	jg     41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41cac8:	je     41cb67 <flatcc_json_parser_space_ext@@Base+0x6b7>
  41cace:	mov    rsi,r14
  41cad1:	mov    rdx,rbx
  41cad4:	mov    rdi,rbp
  41cad7:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41cadc:	mov    r14,rax
  41cadf:	lea    rax,[r12+0x1]
  41cae4:	jmp    41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41cae9:	mov    rsi,QWORD PTR [rsp]
  41caed:	mov    rdi,QWORD PTR [rbp+0x0]
  41caf1:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41caf6:	mov    rdi,QWORD PTR [rbp+0x0]
  41cafa:	mov    rsi,rax
  41cafd:	call   4182f0 <flatcc_builder_end_offset_vector_for_unions@@Base>
  41cb02:	test   eax,eax
  41cb04:	mov    DWORD PTR [rsp+0x24],eax
  41cb08:	je     41c830 <flatcc_json_parser_space_ext@@Base+0x380>
  41cb0e:	movzx  esi,WORD PTR [rsp+0x1c]
  41cb13:	mov    rdi,QWORD PTR [rbp+0x0]
  41cb17:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  41cb1c:	test   rax,rax
  41cb1f:	je     41c830 <flatcc_json_parser_space_ext@@Base+0x380>
  41cb25:	mov    edx,DWORD PTR [rsp+0x24]
  41cb29:	mov    DWORD PTR [rax],edx
  41cb2b:	mov    rax,r14
  41cb2e:	jmp    41c843 <flatcc_json_parser_space_ext@@Base+0x393>
  41cb33:	cmp    BYTE PTR [r14+0x2],0x20
  41cb38:	jle    41c88d <flatcc_json_parser_space_ext@@Base+0x3dd>
  41cb3e:	lea    r13,[r14+0x2]
  41cb42:	jmp    41c89e <flatcc_json_parser_space_ext@@Base+0x3ee>
  41cb47:	mov    ecx,0x9
  41cb4c:	mov    rdx,rbx
  41cb4f:	mov    rsi,rbx
  41cb52:	mov    rdi,rbp
  41cb55:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41cb5a:	mov    r14,rax
  41cb5d:	lea    rax,[r12+0x1]
  41cb62:	jmp    41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41cb67:	cmp    BYTE PTR [r13+0x2],0x20
  41cb6c:	jle    41cace <flatcc_json_parser_space_ext@@Base+0x61e>
  41cb72:	lea    r14,[r13+0x2]
  41cb76:	jmp    41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41cb7b:	lea    r14,[r13+0x1]
  41cb7f:	mov    rax,rbx
  41cb82:	sub    rax,r14
  41cb85:	cmp    rax,0x1
  41cb89:	jle    41cba2 <flatcc_json_parser_space_ext@@Base+0x6f2>
  41cb8b:	mov    eax,r12d
  41cb8e:	mov    QWORD PTR [rsp+0x8],rax
  41cb93:	xor    eax,eax
  41cb95:	cmp    BYTE PTR [r13+0x1],0x20
  41cb9a:	jg     41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41cba0:	je     41cbc2 <flatcc_json_parser_space_ext@@Base+0x712>
  41cba2:	mov    rsi,r14
  41cba5:	mov    rdx,rbx
  41cba8:	mov    rdi,rbp
  41cbab:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41cbb0:	mov    r14,rax
  41cbb3:	mov    eax,r12d
  41cbb6:	mov    QWORD PTR [rsp+0x8],rax
  41cbbb:	xor    eax,eax
  41cbbd:	jmp    41c810 <flatcc_json_parser_space_ext@@Base+0x360>
  41cbc2:	cmp    BYTE PTR [r13+0x2],0x20
  41cbc7:	jle    41cba2 <flatcc_json_parser_space_ext@@Base+0x6f2>
  41cbc9:	jmp    41cb72 <flatcc_json_parser_space_ext@@Base+0x6c2>
  41cbcb:	call   405070 <__stack_chk_fail@plt>

000000000041cbd0 <flatcc_json_parser_string_escape@@Base>:
  41cbd0:	mov    r8,rdx
  41cbd3:	sub    r8,rsi
  41cbd6:	cmp    r8,0x1
  41cbda:	jle    41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41cbdc:	cmp    BYTE PTR [rsi],0x5c
  41cbdf:	je     41cbf0 <flatcc_json_parser_string_escape@@Base+0x20>
  41cbe1:	mov    BYTE PTR [rcx],0x0
  41cbe4:	mov    ecx,0x12
  41cbe9:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41cbee:	xchg   ax,ax
  41cbf0:	movzx  eax,BYTE PTR [rsi+0x1]
  41cbf4:	sub    eax,0x22
  41cbf7:	cmp    al,0x56
  41cbf9:	ja     41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41cbfb:	lea    r9,[rip+0x13bbe]        # 4307c0 <flatcc_builder_padding_base@@Base+0xce0>
  41cc02:	movzx  eax,al
  41cc05:	movsxd rax,DWORD PTR [r9+rax*4]
  41cc09:	add    rax,r9
  41cc0c:	jmp    rax
  41cc0e:	xchg   ax,ax
  41cc10:	cmp    r8,0x3
  41cc14:	mov    BYTE PTR [rcx],0x1
  41cc17:	jle    41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41cc19:	movzx  eax,BYTE PTR [rsi+0x2]
  41cc1d:	lea    r8d,[rax-0x30]
  41cc21:	cmp    r8b,0x9
  41cc25:	ja     41cd60 <flatcc_json_parser_string_escape@@Base+0x190>
  41cc2b:	shl    eax,0x4
  41cc2e:	movzx  r8d,BYTE PTR [rsi+0x3]
  41cc33:	lea    r9d,[r8-0x30]
  41cc37:	cmp    r9b,0x9
  41cc3b:	ja     41cdc8 <flatcc_json_parser_string_escape@@Base+0x1f8>
  41cc41:	or     eax,r9d
  41cc44:	mov    BYTE PTR [rcx+0x1],al
  41cc47:	lea    rax,[rsi+0x4]
  41cc4b:	ret    
  41cc4c:	nop    DWORD PTR [rax+0x0]
  41cc50:	mov    BYTE PTR [rcx],0x1
  41cc53:	mov    BYTE PTR [rcx+0x1],0x22
  41cc57:	lea    rax,[rsi+0x2]
  41cc5b:	ret    
  41cc5c:	nop    DWORD PTR [rax+0x0]
  41cc60:	mov    BYTE PTR [rcx],0x1
  41cc63:	mov    BYTE PTR [rcx+0x1],0x2f
  41cc67:	lea    rax,[rsi+0x2]
  41cc6b:	ret    
  41cc6c:	nop    DWORD PTR [rax+0x0]
  41cc70:	mov    BYTE PTR [rcx],0x1
  41cc73:	mov    BYTE PTR [rcx+0x1],0x5c
  41cc77:	lea    rax,[rsi+0x2]
  41cc7b:	ret    
  41cc7c:	nop    DWORD PTR [rax+0x0]
  41cc80:	mov    BYTE PTR [rcx],0x1
  41cc83:	mov    BYTE PTR [rcx+0x1],0x8
  41cc87:	lea    rax,[rsi+0x2]
  41cc8b:	ret    
  41cc8c:	nop    DWORD PTR [rax+0x0]
  41cc90:	mov    BYTE PTR [rcx],0x1
  41cc93:	mov    BYTE PTR [rcx+0x1],0xc
  41cc97:	lea    rax,[rsi+0x2]
  41cc9b:	ret    
  41cc9c:	nop    DWORD PTR [rax+0x0]
  41cca0:	mov    BYTE PTR [rcx],0x1
  41cca3:	mov    BYTE PTR [rcx+0x1],0xa
  41cca7:	lea    rax,[rsi+0x2]
  41ccab:	ret    
  41ccac:	nop    DWORD PTR [rax+0x0]
  41ccb0:	mov    BYTE PTR [rcx],0x1
  41ccb3:	mov    BYTE PTR [rcx+0x1],0xd
  41ccb7:	lea    rax,[rsi+0x2]
  41ccbb:	ret    
  41ccbc:	nop    DWORD PTR [rax+0x0]
  41ccc0:	mov    BYTE PTR [rcx],0x1
  41ccc3:	mov    BYTE PTR [rcx+0x1],0x9
  41ccc7:	lea    rax,[rsi+0x2]
  41cccb:	ret    
  41cccc:	nop    DWORD PTR [rax+0x0]
  41ccd0:	cmp    r8,0x5
  41ccd4:	jle    41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41ccda:	movzx  eax,BYTE PTR [rsi+0x2]
  41ccde:	lea    r8d,[rax-0x30]
  41cce2:	cmp    r8b,0x9
  41cce6:	ja     41cd80 <flatcc_json_parser_string_escape@@Base+0x1b0>
  41ccec:	shl    eax,0xc
  41ccef:	movzx  r8d,BYTE PTR [rsi+0x3]
  41ccf4:	lea    r9d,[r8-0x30]
  41ccf8:	cmp    r9b,0x9
  41ccfc:	ja     41cda0 <flatcc_json_parser_string_escape@@Base+0x1d0>
  41cd02:	shl    r8d,0x8
  41cd06:	sub    r8w,0x3000
  41cd0c:	or     eax,r8d
  41cd0f:	movsx  r8w,BYTE PTR [rsi+0x4]
  41cd15:	lea    r9d,[r8-0x30]
  41cd19:	cmp    r9b,0x9
  41cd1d:	ja     41cde6 <flatcc_json_parser_string_escape@@Base+0x216>
  41cd23:	sub    r8d,0x30
  41cd27:	shl    r8d,0x4
  41cd2b:	or     eax,r8d
  41cd2e:	movzx  r8d,BYTE PTR [rsi+0x5]
  41cd33:	lea    r9d,[r8-0x30]
  41cd37:	cmp    r9b,0x9
  41cd3b:	ja     41ce0d <flatcc_json_parser_string_escape@@Base+0x23d>
  41cd41:	movsx  dx,r8b
  41cd46:	sub    edx,0x30
  41cd49:	or     eax,edx
  41cd4b:	cmp    ax,0x7f
  41cd4f:	ja     41ce2f <flatcc_json_parser_string_escape@@Base+0x25f>
  41cd55:	mov    BYTE PTR [rcx],0x1
  41cd58:	mov    BYTE PTR [rcx+0x1],al
  41cd5b:	lea    rax,[rsi+0x6]
  41cd5f:	ret    
  41cd60:	or     eax,0x20
  41cd63:	lea    r8d,[rax-0x61]
  41cd67:	cmp    r8b,0x5
  41cd6b:	ja     41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41cd71:	shl    eax,0x4
  41cd74:	sub    eax,0x70
  41cd77:	jmp    41cc2e <flatcc_json_parser_string_escape@@Base+0x5e>
  41cd7c:	nop    DWORD PTR [rax+0x0]
  41cd80:	or     eax,0x20
  41cd83:	lea    r8d,[rax-0x61]
  41cd87:	cmp    r8b,0x5
  41cd8b:	ja     41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41cd91:	shl    eax,0xc
  41cd94:	sub    ax,0x7000
  41cd98:	jmp    41ccef <flatcc_json_parser_string_escape@@Base+0x11f>
  41cd9d:	nop    DWORD PTR [rax]
  41cda0:	or     r8d,0x20
  41cda4:	lea    r9d,[r8-0x61]
  41cda8:	cmp    r9b,0x5
  41cdac:	ja     41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41cdb2:	shl    r8d,0x8
  41cdb6:	sub    r8w,0x5700
  41cdbc:	or     eax,r8d
  41cdbf:	jmp    41cd0f <flatcc_json_parser_string_escape@@Base+0x13f>
  41cdc4:	nop    DWORD PTR [rax+0x0]
  41cdc8:	or     r8d,0x20
  41cdcc:	lea    r9d,[r8-0x61]
  41cdd0:	cmp    r9b,0x5
  41cdd4:	ja     41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41cdda:	sub    r8d,0x57
  41cdde:	or     eax,r8d
  41cde1:	jmp    41cc44 <flatcc_json_parser_string_escape@@Base+0x74>
  41cde6:	or     r8d,0x20
  41cdea:	lea    r9d,[r8-0x61]
  41cdee:	cmp    r9b,0x5
  41cdf2:	ja     41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41cdf8:	movsx  r8w,r8b
  41cdfd:	sub    r8d,0x57
  41ce01:	shl    r8d,0x4
  41ce05:	or     eax,r8d
  41ce08:	jmp    41cd2e <flatcc_json_parser_string_escape@@Base+0x15e>
  41ce0d:	or     r8d,0x20
  41ce11:	lea    r9d,[r8-0x61]
  41ce15:	cmp    r9b,0x5
  41ce19:	ja     41cbe1 <flatcc_json_parser_string_escape@@Base+0x11>
  41ce1f:	movsx  r8w,r8b
  41ce24:	lea    edx,[r8-0x57]
  41ce28:	or     eax,edx
  41ce2a:	jmp    41cd4b <flatcc_json_parser_string_escape@@Base+0x17b>
  41ce2f:	cmp    ax,0x7ff
  41ce33:	ja     41ce52 <flatcc_json_parser_string_escape@@Base+0x282>
  41ce35:	mov    edx,eax
  41ce37:	and    eax,0x3f
  41ce3a:	mov    BYTE PTR [rcx],0x2
  41ce3d:	shr    dx,0x6
  41ce41:	or     eax,0xffffff80
  41ce44:	or     edx,0xffffffc0
  41ce47:	mov    BYTE PTR [rcx+0x2],al
  41ce4a:	mov    BYTE PTR [rcx+0x1],dl
  41ce4d:	jmp    41cd5b <flatcc_json_parser_string_escape@@Base+0x18b>
  41ce52:	mov    edx,eax
  41ce54:	mov    BYTE PTR [rcx],0x3
  41ce57:	shr    dx,0xc
  41ce5b:	or     edx,0xffffffe0
  41ce5e:	mov    BYTE PTR [rcx+0x1],dl
  41ce61:	mov    edx,eax
  41ce63:	and    eax,0x3f
  41ce66:	shr    dx,0x6
  41ce6a:	or     eax,0xffffff80
  41ce6d:	and    edx,0x3f
  41ce70:	mov    BYTE PTR [rcx+0x3],al
  41ce73:	or     edx,0xffffff80
  41ce76:	mov    BYTE PTR [rcx+0x2],dl
  41ce79:	jmp    41cd5b <flatcc_json_parser_string_escape@@Base+0x18b>
  41ce7e:	xchg   ax,ax

000000000041ce80 <flatcc_json_parser_skip_constant@@Base>:
  41ce80:	push   r13
  41ce82:	push   r12
  41ce84:	push   rbp
  41ce85:	push   rbx
  41ce86:	mov    rbp,rdx
  41ce89:	sub    rsp,0x8
  41ce8d:	cmp    rsi,rdx
  41ce90:	je     41cf10 <flatcc_json_parser_skip_constant@@Base+0x90>
  41ce92:	mov    r13,rdi
  41ce95:	mov    rbx,rsi
  41ce98:	movabs r12,0x2000000000ffd
  41cea2:	jmp    41cec1 <flatcc_json_parser_skip_constant@@Base+0x41>
  41cea4:	nop    DWORD PTR [rax+0x0]
  41cea8:	mov    edx,eax
  41ceaa:	or     edx,0x20
  41cead:	sub    edx,0x61
  41ceb0:	cmp    dl,0x19
  41ceb3:	ja     41cee3 <flatcc_json_parser_skip_constant@@Base+0x63>
  41ceb5:	nop    DWORD PTR [rax]
  41ceb8:	add    rbx,0x1
  41cebc:	cmp    rbp,rbx
  41cebf:	je     41cf10 <flatcc_json_parser_skip_constant@@Base+0x90>
  41cec1:	movzx  eax,BYTE PTR [rbx]
  41cec4:	test   al,al
  41cec6:	js     41ceb8 <flatcc_json_parser_skip_constant@@Base+0x38>
  41cec8:	lea    edx,[rax-0x2e]
  41cecb:	cmp    dl,0x31
  41cece:	ja     41cea8 <flatcc_json_parser_skip_constant@@Base+0x28>
  41ced0:	bt     r12,rdx
  41ced4:	jb     41ceb8 <flatcc_json_parser_skip_constant@@Base+0x38>
  41ced6:	mov    edx,eax
  41ced8:	or     edx,0x20
  41cedb:	sub    edx,0x61
  41cede:	cmp    dl,0x19
  41cee1:	jbe    41ceb8 <flatcc_json_parser_skip_constant@@Base+0x38>
  41cee3:	mov    rdx,rbp
  41cee6:	sub    rdx,rbx
  41cee9:	cmp    rdx,0x1
  41ceed:	jle    41cef5 <flatcc_json_parser_skip_constant@@Base+0x75>
  41ceef:	cmp    al,0x20
  41cef1:	jg     41cf20 <flatcc_json_parser_skip_constant@@Base+0xa0>
  41cef3:	je     41cf31 <flatcc_json_parser_skip_constant@@Base+0xb1>
  41cef5:	mov    rdx,rbp
  41cef8:	mov    rsi,rbx
  41cefb:	mov    rdi,r13
  41cefe:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41cf03:	cmp    rbx,rax
  41cf06:	je     41cf20 <flatcc_json_parser_skip_constant@@Base+0xa0>
  41cf08:	mov    rbx,rax
  41cf0b:	cmp    rbp,rbx
  41cf0e:	jne    41cec1 <flatcc_json_parser_skip_constant@@Base+0x41>
  41cf10:	add    rsp,0x8
  41cf14:	mov    rax,rbp
  41cf17:	pop    rbx
  41cf18:	pop    rbp
  41cf19:	pop    r12
  41cf1b:	pop    r13
  41cf1d:	ret    
  41cf1e:	xchg   ax,ax
  41cf20:	add    rsp,0x8
  41cf24:	mov    rbp,rbx
  41cf27:	mov    rax,rbp
  41cf2a:	pop    rbx
  41cf2b:	pop    rbp
  41cf2c:	pop    r12
  41cf2e:	pop    r13
  41cf30:	ret    
  41cf31:	cmp    BYTE PTR [rbx+0x1],0x20
  41cf35:	lea    rax,[rbx+0x1]
  41cf39:	jle    41cef5 <flatcc_json_parser_skip_constant@@Base+0x75>
  41cf3b:	jmp    41cf03 <flatcc_json_parser_skip_constant@@Base+0x83>
  41cf3d:	nop    DWORD PTR [rax]

000000000041cf40 <flatcc_json_parser_match_constant@@Base>:
  41cf40:	mov    rax,rdx
  41cf43:	movsxd rcx,ecx
  41cf46:	sub    rax,rsi
  41cf49:	cmp    rax,rcx
  41cf4c:	jle    41cfa8 <flatcc_json_parser_match_constant@@Base+0x68>
  41cf4e:	push   r13
  41cf50:	push   r12
  41cf52:	mov    r13,r8
  41cf55:	push   rbp
  41cf56:	push   rbx
  41cf57:	mov    rbp,rdx
  41cf5a:	mov    r12,rsi
  41cf5d:	lea    rbx,[rsi+rcx*1]
  41cf61:	sub    rsp,0x8
  41cf65:	mov    eax,DWORD PTR [rdi+0x14]
  41cf68:	test   eax,eax
  41cf6a:	jne    41cfb8 <flatcc_json_parser_match_constant@@Base+0x78>
  41cf6c:	movzx  eax,BYTE PTR [rbx]
  41cf6f:	cmp    al,0x20
  41cf71:	je     41d060 <flatcc_json_parser_match_constant@@Base+0x120>
  41cf77:	cmp    al,0x22
  41cf79:	je     41d0a0 <flatcc_json_parser_match_constant@@Base+0x160>
  41cf7f:	cmp    al,0x5c
  41cf81:	mov    DWORD PTR [r8],0x0
  41cf88:	jne    41d030 <flatcc_json_parser_match_constant@@Base+0xf0>
  41cf8e:	add    rsp,0x8
  41cf92:	mov    rsi,rbx
  41cf95:	mov    ecx,0x12
  41cf9a:	pop    rbx
  41cf9b:	pop    rbp
  41cf9c:	pop    r12
  41cf9e:	pop    r13
  41cfa0:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41cfa5:	nop    DWORD PTR [rax]
  41cfa8:	mov    DWORD PTR [r8],0x0
  41cfaf:	mov    rax,rsi
  41cfb2:	ret    
  41cfb3:	nop    DWORD PTR [rax+rax*1+0x0]
  41cfb8:	mov    rax,rdx
  41cfbb:	sub    rax,rbx
  41cfbe:	cmp    rax,0x1
  41cfc2:	jle    41cfd3 <flatcc_json_parser_match_constant@@Base+0x93>
  41cfc4:	cmp    BYTE PTR [rbx],0x20
  41cfc7:	jg     41d0d0 <flatcc_json_parser_match_constant@@Base+0x190>
  41cfcd:	je     41d0f0 <flatcc_json_parser_match_constant@@Base+0x1b0>
  41cfd3:	mov    rdx,rbp
  41cfd6:	mov    rsi,rbx
  41cfd9:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41cfde:	cmp    rbp,rax
  41cfe1:	je     41d089 <flatcc_json_parser_match_constant@@Base+0x149>
  41cfe7:	cmp    rbx,rax
  41cfea:	je     41d003 <flatcc_json_parser_match_constant@@Base+0xc3>
  41cfec:	movzx  edx,BYTE PTR [rax]
  41cfef:	cmp    dl,0x5f
  41cff2:	je     41d048 <flatcc_json_parser_match_constant@@Base+0x108>
  41cff4:	test   dl,dl
  41cff6:	js     41d048 <flatcc_json_parser_match_constant@@Base+0x108>
  41cff8:	or     edx,0x20
  41cffb:	sub    edx,0x61
  41cffe:	cmp    dl,0x19
  41d001:	jbe    41d048 <flatcc_json_parser_match_constant@@Base+0x108>
  41d003:	mov    DWORD PTR [r13+0x0],0x0
  41d00b:	movzx  edx,BYTE PTR [rax]
  41d00e:	mov    ecx,edx
  41d010:	and    ecx,0xffffffdf
  41d013:	cmp    cl,0x5d
  41d016:	je     41d01f <flatcc_json_parser_match_constant@@Base+0xdf>
  41d018:	cmp    dl,0x2c
  41d01b:	cmovne rax,r12
  41d01f:	add    rsp,0x8
  41d023:	pop    rbx
  41d024:	pop    rbp
  41d025:	pop    r12
  41d027:	pop    r13
  41d029:	ret    
  41d02a:	nop    WORD PTR [rax+rax*1+0x0]
  41d030:	add    rsp,0x8
  41d034:	mov    rax,rsi
  41d037:	pop    rbx
  41d038:	pop    rbp
  41d039:	pop    r12
  41d03b:	pop    r13
  41d03d:	ret    
  41d03e:	xchg   ax,ax
  41d040:	cmp    dl,0x22
  41d043:	mov    rbx,rax
  41d046:	je     41d0a0 <flatcc_json_parser_match_constant@@Base+0x160>
  41d048:	mov    DWORD PTR [r13+0x0],0x1
  41d050:	add    rsp,0x8
  41d054:	pop    rbx
  41d055:	pop    rbp
  41d056:	pop    r12
  41d058:	pop    r13
  41d05a:	ret    
  41d05b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d060:	lea    rax,[rbx+0x1]
  41d064:	cmp    rdx,rax
  41d067:	je     41d089 <flatcc_json_parser_match_constant@@Base+0x149>
  41d069:	movzx  edx,BYTE PTR [rbx+0x1]
  41d06d:	cmp    dl,0x20
  41d070:	je     41d080 <flatcc_json_parser_match_constant@@Base+0x140>
  41d072:	jmp    41d040 <flatcc_json_parser_match_constant@@Base+0x100>
  41d074:	nop    DWORD PTR [rax+0x0]
  41d078:	movzx  edx,BYTE PTR [rax]
  41d07b:	cmp    dl,0x20
  41d07e:	jne    41d040 <flatcc_json_parser_match_constant@@Base+0x100>
  41d080:	add    rax,0x1
  41d084:	cmp    rbp,rax
  41d087:	jne    41d078 <flatcc_json_parser_match_constant@@Base+0x138>
  41d089:	mov    DWORD PTR [r13+0x0],0x0
  41d091:	mov    rax,rbp
  41d094:	jmp    41d01f <flatcc_json_parser_match_constant@@Base+0xdf>
  41d096:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0a0:	lea    rax,[rbx+0x1]
  41d0a4:	cmp    rax,0xffffffffffffffff
  41d0a8:	jge    41d0b2 <flatcc_json_parser_match_constant@@Base+0x172>
  41d0aa:	cmp    BYTE PTR [rbx+0x1],0x20
  41d0ae:	jg     41d0bc <flatcc_json_parser_match_constant@@Base+0x17c>
  41d0b0:	je     41d0e0 <flatcc_json_parser_match_constant@@Base+0x1a0>
  41d0b2:	xor    edx,edx
  41d0b4:	mov    rsi,rax
  41d0b7:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d0bc:	mov    DWORD PTR [r13+0x0],0x0
  41d0c4:	add    rsp,0x8
  41d0c8:	pop    rbx
  41d0c9:	pop    rbp
  41d0ca:	pop    r12
  41d0cc:	pop    r13
  41d0ce:	ret    
  41d0cf:	nop
  41d0d0:	cmp    rbx,rdx
  41d0d3:	mov    rax,rbx
  41d0d6:	je     41d089 <flatcc_json_parser_match_constant@@Base+0x149>
  41d0d8:	jmp    41d003 <flatcc_json_parser_match_constant@@Base+0xc3>
  41d0dd:	nop    DWORD PTR [rax]
  41d0e0:	cmp    BYTE PTR [rbx+0x2],0x20
  41d0e4:	jle    41d0b2 <flatcc_json_parser_match_constant@@Base+0x172>
  41d0e6:	lea    rax,[rbx+0x2]
  41d0ea:	jmp    41d0bc <flatcc_json_parser_match_constant@@Base+0x17c>
  41d0ec:	nop    DWORD PTR [rax+0x0]
  41d0f0:	cmp    BYTE PTR [rbx+0x1],0x20
  41d0f4:	lea    rax,[rbx+0x1]
  41d0f8:	jle    41cfd3 <flatcc_json_parser_match_constant@@Base+0x93>
  41d0fe:	jmp    41cfde <flatcc_json_parser_match_constant@@Base+0x9e>
  41d103:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d10e:	xchg   ax,ax

000000000041d110 <flatcc_json_parser_double@@Base>:
  41d110:	cmp    rsi,rdx
  41d113:	mov    QWORD PTR [rcx],0x0
  41d11a:	je     41d1e8 <flatcc_json_parser_double@@Base+0xd8>
  41d120:	xor    eax,eax
  41d122:	cmp    BYTE PTR [rsi],0x2d
  41d125:	mov    r8,rdx
  41d128:	sete   al
  41d12b:	add    rax,rsi
  41d12e:	sub    r8,rax
  41d131:	cmp    r8,0x1
  41d135:	jle    41d14f <flatcc_json_parser_double@@Base+0x3f>
  41d137:	movzx  r8d,BYTE PTR [rax]
  41d13b:	cmp    r8b,0x2e
  41d13f:	je     41d1da <flatcc_json_parser_double@@Base+0xca>
  41d145:	cmp    r8b,0x30
  41d149:	je     41d1d0 <flatcc_json_parser_double@@Base+0xc0>
  41d14f:	push   r13
  41d151:	push   r12
  41d153:	mov    r13,rdi
  41d156:	push   rbp
  41d157:	push   rbx
  41d158:	mov    rbx,rsi
  41d15b:	mov    rsi,rdx
  41d15e:	mov    rbp,rdx
  41d161:	mov    rdi,rbx
  41d164:	sub    rsp,0x8
  41d168:	sub    rsi,rbx
  41d16b:	mov    rdx,rcx
  41d16e:	mov    r12,rcx
  41d171:	call   41b9b0 <grisu3_diy_fp_encode_double@@Base+0x380>
  41d176:	test   rax,rax
  41d179:	je     41d190 <flatcc_json_parser_double@@Base+0x80>
  41d17b:	cmp    rbx,rax
  41d17e:	je     41d190 <flatcc_json_parser_double@@Base+0x80>
  41d180:	add    rsp,0x8
  41d184:	pop    rbx
  41d185:	pop    rbp
  41d186:	pop    r12
  41d188:	pop    r13
  41d18a:	ret    
  41d18b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d190:	vmovsd xmm0,QWORD PTR [r12]
  41d196:	mov    ecx,0x6
  41d19b:	vandpd xmm0,xmm0,XMMWORD PTR [rip+0x1406d]        # 431210 <flatcc_builder_padding_base@@Base+0x1730>
  41d1a3:	vucomisd xmm0,QWORD PTR [rip+0x1405d]        # 431208 <flatcc_builder_padding_base@@Base+0x1728>
  41d1ab:	jbe    41d1b2 <flatcc_json_parser_double@@Base+0xa2>
  41d1ad:	mov    ecx,0x7
  41d1b2:	add    rsp,0x8
  41d1b6:	mov    rdx,rbp
  41d1b9:	mov    rsi,rbx
  41d1bc:	mov    rdi,r13
  41d1bf:	pop    rbx
  41d1c0:	pop    rbp
  41d1c1:	pop    r12
  41d1c3:	pop    r13
  41d1c5:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41d1ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d1d0:	cmp    BYTE PTR [rax+0x1],0x30
  41d1d4:	jne    41d14f <flatcc_json_parser_double@@Base+0x3f>
  41d1da:	mov    ecx,0x6
  41d1df:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41d1e4:	nop    DWORD PTR [rax+0x0]
  41d1e8:	mov    rax,rsi
  41d1eb:	ret    
  41d1ec:	nop    DWORD PTR [rax+0x0]

000000000041d1f0 <flatcc_json_parser_float@@Base>:
  41d1f0:	push   r13
  41d1f2:	push   r12
  41d1f4:	push   rbp
  41d1f5:	push   rbx
  41d1f6:	mov    rbx,rsi
  41d1f9:	sub    rsp,0x18
  41d1fd:	mov    DWORD PTR [rcx],0x0
  41d203:	mov    rax,QWORD PTR fs:0x28
  41d20c:	mov    QWORD PTR [rsp+0x8],rax
  41d211:	xor    eax,eax
  41d213:	cmp    rsi,rdx
  41d216:	je     41d318 <flatcc_json_parser_float@@Base+0x128>
  41d21c:	xor    eax,eax
  41d21e:	cmp    BYTE PTR [rsi],0x2d
  41d221:	mov    rbp,rdx
  41d224:	mov    r13,rdi
  41d227:	mov    r12,rcx
  41d22a:	sete   al
  41d22d:	add    rax,rsi
  41d230:	sub    rdx,rax
  41d233:	cmp    rdx,0x1
  41d237:	jle    41d24e <flatcc_json_parser_float@@Base+0x5e>
  41d239:	movzx  edx,BYTE PTR [rax]
  41d23c:	cmp    dl,0x2e
  41d23f:	je     41d2e0 <flatcc_json_parser_float@@Base+0xf0>
  41d245:	cmp    dl,0x30
  41d248:	je     41d2f8 <flatcc_json_parser_float@@Base+0x108>
  41d24e:	mov    rsi,rbp
  41d251:	mov    rdx,rsp
  41d254:	mov    rdi,rbx
  41d257:	sub    rsi,rbx
  41d25a:	call   41b9b0 <grisu3_diy_fp_encode_double@@Base+0x380>
  41d25f:	vxorps xmm0,xmm0,xmm0
  41d263:	vmovsd xmm1,QWORD PTR [rsp]
  41d268:	vcvtsd2ss xmm0,xmm0,xmm1
  41d26c:	vmovss DWORD PTR [r12],xmm0
  41d272:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x13fa6]        # 431220 <flatcc_builder_padding_base@@Base+0x1740>
  41d27a:	vucomiss xmm0,DWORD PTR [rip+0x13fb6]        # 431238 <flatcc_builder_padding_base@@Base+0x1758>
  41d282:	jbe    41d2d0 <flatcc_json_parser_float@@Base+0xe0>
  41d284:	vxorpd xmm0,xmm0,xmm0
  41d288:	vucomisd xmm0,xmm1
  41d28c:	ja     41d308 <flatcc_json_parser_float@@Base+0x118>
  41d28e:	vmovss xmm0,DWORD PTR [rip+0x13f9e]        # 431234 <flatcc_builder_padding_base@@Base+0x1754>
  41d296:	vmovss DWORD PTR [r12],xmm0
  41d29c:	mov    ecx,0x7
  41d2a1:	mov    rdx,rbp
  41d2a4:	mov    rsi,rbx
  41d2a7:	mov    rdi,r13
  41d2aa:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41d2af:	mov    rcx,QWORD PTR [rsp+0x8]
  41d2b4:	xor    rcx,QWORD PTR fs:0x28
  41d2bd:	jne    41d31d <flatcc_json_parser_float@@Base+0x12d>
  41d2bf:	add    rsp,0x18
  41d2c3:	pop    rbx
  41d2c4:	pop    rbp
  41d2c5:	pop    r12
  41d2c7:	pop    r13
  41d2c9:	ret    
  41d2ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d2d0:	test   rax,rax
  41d2d3:	je     41d2e0 <flatcc_json_parser_float@@Base+0xf0>
  41d2d5:	cmp    rbx,rax
  41d2d8:	jne    41d2af <flatcc_json_parser_float@@Base+0xbf>
  41d2da:	nop    WORD PTR [rax+rax*1+0x0]
  41d2e0:	mov    ecx,0x6
  41d2e5:	mov    rdx,rbp
  41d2e8:	mov    rsi,rbx
  41d2eb:	mov    rdi,r13
  41d2ee:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41d2f3:	jmp    41d2af <flatcc_json_parser_float@@Base+0xbf>
  41d2f5:	nop    DWORD PTR [rax]
  41d2f8:	cmp    BYTE PTR [rax+0x1],0x30
  41d2fc:	jne    41d24e <flatcc_json_parser_float@@Base+0x5e>
  41d302:	jmp    41d2e0 <flatcc_json_parser_float@@Base+0xf0>
  41d304:	nop    DWORD PTR [rax+0x0]
  41d308:	vmovss xmm0,DWORD PTR [rip+0x13f20]        # 431230 <flatcc_builder_padding_base@@Base+0x1750>
  41d310:	jmp    41d296 <flatcc_json_parser_float@@Base+0xa6>
  41d312:	nop    WORD PTR [rax+rax*1+0x0]
  41d318:	mov    rax,rsi
  41d31b:	jmp    41d2af <flatcc_json_parser_float@@Base+0xbf>
  41d31d:	call   405070 <__stack_chk_fail@plt>
  41d322:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d32d:	nop    DWORD PTR [rax]

000000000041d330 <flatcc_json_parser_generic_json@@Base>:
  41d330:	push   r15
  41d332:	push   r14
  41d334:	mov    r10,rsi
  41d337:	push   r13
  41d339:	push   r12
  41d33b:	push   rbp
  41d33c:	push   rbx
  41d33d:	sub    rsp,0x238
  41d344:	mov    rax,QWORD PTR fs:0x28
  41d34d:	mov    QWORD PTR [rsp+0x228],rax
  41d355:	xor    eax,eax
  41d357:	cmp    rsi,rdx
  41d35a:	je     41dcad <flatcc_json_parser_generic_json@@Base+0x97d>
  41d360:	lea    r12,[rsp+0x20]
  41d365:	mov    r15,rdx
  41d368:	movzx  edx,BYTE PTR [rsi]
  41d36b:	lea    r13,[rsp+0x1c]
  41d370:	mov    rbx,rdi
  41d373:	lea    rax,[r12+0x200]
  41d37b:	mov    r14,r12
  41d37e:	mov    QWORD PTR [rsp],rax
  41d382:	cmp    r14,r12
  41d385:	je     41d414 <flatcc_json_parser_generic_json@@Base+0xe4>
  41d38b:	cmp    BYTE PTR [r14-0x1],0x7d
  41d390:	je     41d800 <flatcc_json_parser_generic_json@@Base+0x4d0>
  41d396:	cmp    dl,0x39
  41d399:	jle    41d420 <flatcc_json_parser_generic_json@@Base+0xf0>
  41d39f:	cmp    dl,0x5b
  41d3a2:	je     41d798 <flatcc_json_parser_generic_json@@Base+0x468>
  41d3a8:	cmp    dl,0x7b
  41d3ab:	jne    41d500 <flatcc_json_parser_generic_json@@Base+0x1d0>
  41d3b1:	cmp    r14,QWORD PTR [rsp]
  41d3b5:	je     41dcbd <flatcc_json_parser_generic_json@@Base+0x98d>
  41d3bb:	lea    rsi,[r10+0x1]
  41d3bf:	mov    rax,r15
  41d3c2:	lea    rbp,[r14+0x1]
  41d3c6:	mov    BYTE PTR [r14],0x7d
  41d3ca:	sub    rax,rsi
  41d3cd:	cmp    rax,0x1
  41d3d1:	jle    41d3e4 <flatcc_json_parser_generic_json@@Base+0xb4>
  41d3d3:	cmp    BYTE PTR [r10+0x1],0x20
  41d3d8:	jg     41daa0 <flatcc_json_parser_generic_json@@Base+0x770>
  41d3de:	je     41d945 <flatcc_json_parser_generic_json@@Base+0x615>
  41d3e4:	mov    rdx,r15
  41d3e7:	mov    rdi,rbx
  41d3ea:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d3ef:	mov    r10,rax
  41d3f2:	cmp    r15,r10
  41d3f5:	je     41daa8 <flatcc_json_parser_generic_json@@Base+0x778>
  41d3fb:	movzx  edx,BYTE PTR [r10]
  41d3ff:	cmp    dl,0x7d
  41d402:	je     41d7ef <flatcc_json_parser_generic_json@@Base+0x4bf>
  41d408:	mov    r14,rbp
  41d40b:	cmp    r14,r12
  41d40e:	jne    41d38b <flatcc_json_parser_generic_json@@Base+0x5b>
  41d414:	cmp    dl,0x39
  41d417:	jg     41d910 <flatcc_json_parser_generic_json@@Base+0x5e0>
  41d41d:	nop    DWORD PTR [rax]
  41d420:	cmp    dl,0x30
  41d423:	jge    41d485 <flatcc_json_parser_generic_json@@Base+0x155>
  41d425:	cmp    dl,0x22
  41d428:	jne    41d480 <flatcc_json_parser_generic_json@@Base+0x150>
  41d42a:	lea    rax,[r10+0x1]
  41d42e:	cmp    r15,rax
  41d431:	jne    41d472 <flatcc_json_parser_generic_json@@Base+0x142>
  41d433:	jmp    41d99b <flatcc_json_parser_generic_json@@Base+0x66b>
  41d438:	nop    DWORD PTR [rax+rax*1+0x0]
  41d440:	mov    rdx,r15
  41d443:	mov    rsi,rax
  41d446:	mov    rdi,rbx
  41d449:	call   41c440 <flatcc_json_parser_string_part@@Base>
  41d44e:	cmp    r15,rax
  41d451:	je     41d458 <flatcc_json_parser_generic_json@@Base+0x128>
  41d453:	cmp    BYTE PTR [rax],0x22
  41d456:	je     41d477 <flatcc_json_parser_generic_json@@Base+0x147>
  41d458:	mov    rcx,r13
  41d45b:	mov    rdx,r15
  41d45e:	mov    rsi,rax
  41d461:	mov    rdi,rbx
  41d464:	call   41cbd0 <flatcc_json_parser_string_escape@@Base>
  41d469:	cmp    r15,rax
  41d46c:	je     41d998 <flatcc_json_parser_generic_json@@Base+0x668>
  41d472:	cmp    BYTE PTR [rax],0x22
  41d475:	jne    41d440 <flatcc_json_parser_generic_json@@Base+0x110>
  41d477:	add    rax,0x1
  41d47b:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41d480:	cmp    dl,0x2d
  41d483:	jne    41d500 <flatcc_json_parser_generic_json@@Base+0x1d0>
  41d485:	cmp    r15,r10
  41d488:	je     41dc16 <flatcc_json_parser_generic_json@@Base+0x8e6>
  41d48e:	cmp    dl,0x2d
  41d491:	je     41dab0 <flatcc_json_parser_generic_json@@Base+0x780>
  41d497:	movzx  eax,BYTE PTR [r10]
  41d49b:	cmp    al,0x30
  41d49d:	je     41d9b3 <flatcc_json_parser_generic_json@@Base+0x683>
  41d4a3:	sub    eax,0x31
  41d4a6:	cmp    al,0x8
  41d4a8:	ja     41db74 <flatcc_json_parser_generic_json@@Base+0x844>
  41d4ae:	lea    rax,[r10+0x1]
  41d4b2:	cmp    r15,rax
  41d4b5:	je     41d4eb <flatcc_json_parser_generic_json@@Base+0x1bb>
  41d4b7:	movzx  edx,BYTE PTR [r10+0x1]
  41d4bc:	lea    ecx,[rdx-0x30]
  41d4bf:	cmp    cl,0x9
  41d4c2:	jbe    41d4df <flatcc_json_parser_generic_json@@Base+0x1af>
  41d4c4:	jmp    41d9c5 <flatcc_json_parser_generic_json@@Base+0x695>
  41d4c9:	nop    DWORD PTR [rax+0x0]
  41d4d0:	movzx  edx,BYTE PTR [rax]
  41d4d3:	lea    ecx,[rdx-0x30]
  41d4d6:	cmp    cl,0x9
  41d4d9:	ja     41d9c5 <flatcc_json_parser_generic_json@@Base+0x695>
  41d4df:	add    rax,0x1
  41d4e3:	cmp    r15,rax
  41d4e6:	jne    41d4d0 <flatcc_json_parser_generic_json@@Base+0x1a0>
  41d4e8:	mov    rax,r15
  41d4eb:	mov    ecx,0x6
  41d4f0:	mov    rdx,r15
  41d4f3:	mov    rsi,rax
  41d4f6:	mov    rdi,rbx
  41d4f9:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41d4fe:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41d500:	mov    rsi,r10
  41d503:	mov    rdx,r15
  41d506:	mov    rdi,rbx
  41d509:	mov    QWORD PTR [rsp+0x8],r10
  41d50e:	call   41ce80 <flatcc_json_parser_skip_constant@@Base>
  41d513:	mov    r10,QWORD PTR [rsp+0x8]
  41d518:	cmp    rax,r10
  41d51b:	je     41dd06 <flatcc_json_parser_generic_json@@Base+0x9d6>
  41d521:	cmp    r15,rax
  41d524:	jne    41d58c <flatcc_json_parser_generic_json@@Base+0x25c>
  41d526:	jmp    41dc16 <flatcc_json_parser_generic_json@@Base+0x8e6>
  41d52b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d530:	cmp    rdx,0x1
  41d534:	jle    41d541 <flatcc_json_parser_generic_json@@Base+0x211>
  41d536:	cmp    BYTE PTR [rax],0x20
  41d539:	jg     41d54f <flatcc_json_parser_generic_json@@Base+0x21f>
  41d53b:	je     41d620 <flatcc_json_parser_generic_json@@Base+0x2f0>
  41d541:	mov    rdx,r15
  41d544:	mov    rsi,rax
  41d547:	mov    rdi,rbx
  41d54a:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d54f:	cmp    r15,rax
  41d552:	je     41d640 <flatcc_json_parser_generic_json@@Base+0x310>
  41d558:	movzx  edx,BYTE PTR [rax]
  41d55b:	cmp    dl,0x2c
  41d55e:	je     41d690 <flatcc_json_parser_generic_json@@Base+0x360>
  41d564:	cmp    dl,0x7d
  41d567:	je     41d5f0 <flatcc_json_parser_generic_json@@Base+0x2c0>
  41d56d:	mov    ecx,0xa
  41d572:	mov    rdx,r15
  41d575:	mov    rsi,rax
  41d578:	mov    rdi,rbx
  41d57b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41d580:	cmp    r15,rax
  41d583:	je     41d640 <flatcc_json_parser_generic_json@@Base+0x310>
  41d589:	mov    r14,rbp
  41d58c:	cmp    r14,r12
  41d58f:	je     41d662 <flatcc_json_parser_generic_json@@Base+0x332>
  41d595:	mov    rdx,r15
  41d598:	lea    rbp,[r14-0x1]
  41d59c:	sub    rdx,rax
  41d59f:	cmp    BYTE PTR [r14-0x1],0x5d
  41d5a4:	jne    41d530 <flatcc_json_parser_generic_json@@Base+0x200>
  41d5a6:	cmp    rdx,0x1
  41d5aa:	jle    41d5b7 <flatcc_json_parser_generic_json@@Base+0x287>
  41d5ac:	cmp    BYTE PTR [rax],0x20
  41d5af:	jg     41d5c5 <flatcc_json_parser_generic_json@@Base+0x295>
  41d5b1:	je     41d720 <flatcc_json_parser_generic_json@@Base+0x3f0>
  41d5b7:	mov    rdx,r15
  41d5ba:	mov    rsi,rax
  41d5bd:	mov    rdi,rbx
  41d5c0:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d5c5:	cmp    r15,rax
  41d5c8:	je     41d640 <flatcc_json_parser_generic_json@@Base+0x310>
  41d5ca:	movzx  edx,BYTE PTR [rax]
  41d5cd:	cmp    dl,0x2c
  41d5d0:	je     41d738 <flatcc_json_parser_generic_json@@Base+0x408>
  41d5d6:	cmp    dl,0x5d
  41d5d9:	je     41d5f0 <flatcc_json_parser_generic_json@@Base+0x2c0>
  41d5db:	mov    ecx,0x9
  41d5e0:	mov    rdx,r15
  41d5e3:	mov    rsi,rax
  41d5e6:	mov    rdi,rbx
  41d5e9:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41d5ee:	jmp    41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41d5f0:	lea    rsi,[rax+0x1]
  41d5f4:	mov    rdx,r15
  41d5f7:	sub    rdx,rsi
  41d5fa:	cmp    rdx,0x1
  41d5fe:	jle    41d610 <flatcc_json_parser_generic_json@@Base+0x2e0>
  41d600:	cmp    BYTE PTR [rax+0x1],0x20
  41d604:	jg     41d710 <flatcc_json_parser_generic_json@@Base+0x3e0>
  41d60a:	je     41d780 <flatcc_json_parser_generic_json@@Base+0x450>
  41d610:	mov    rdx,r15
  41d613:	mov    rdi,rbx
  41d616:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d61b:	jmp    41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41d620:	cmp    BYTE PTR [rax+0x1],0x20
  41d624:	jle    41d541 <flatcc_json_parser_generic_json@@Base+0x211>
  41d62a:	add    rax,0x1
  41d62e:	cmp    r15,rax
  41d631:	jne    41d558 <flatcc_json_parser_generic_json@@Base+0x228>
  41d637:	nop    WORD PTR [rax+rax*1+0x0]
  41d640:	mov    rax,r15
  41d643:	cmp    rbp,r12
  41d646:	je     41d662 <flatcc_json_parser_generic_json@@Base+0x332>
  41d648:	xor    ecx,ecx
  41d64a:	cmp    BYTE PTR [rbp-0x1],0x5d
  41d64e:	mov    rdx,r15
  41d651:	mov    rsi,r15
  41d654:	mov    rdi,rbx
  41d657:	setne  cl
  41d65a:	add    ecx,0x9
  41d65d:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41d662:	mov    rcx,QWORD PTR [rsp+0x228]
  41d66a:	xor    rcx,QWORD PTR fs:0x28
  41d673:	jne    41dd66 <flatcc_json_parser_generic_json@@Base+0xa36>
  41d679:	add    rsp,0x238
  41d680:	pop    rbx
  41d681:	pop    rbp
  41d682:	pop    r12
  41d684:	pop    r13
  41d686:	pop    r14
  41d688:	pop    r15
  41d68a:	ret    
  41d68b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d690:	lea    r10,[rax+0x1]
  41d694:	mov    rdx,r15
  41d697:	sub    rdx,r10
  41d69a:	cmp    rdx,0x1
  41d69e:	jle    41d6ac <flatcc_json_parser_generic_json@@Base+0x37c>
  41d6a0:	cmp    BYTE PTR [rax+0x1],0x20
  41d6a4:	jg     41d6bd <flatcc_json_parser_generic_json@@Base+0x38d>
  41d6a6:	je     41da50 <flatcc_json_parser_generic_json@@Base+0x720>
  41d6ac:	mov    rsi,r10
  41d6af:	mov    rdx,r15
  41d6b2:	mov    rdi,rbx
  41d6b5:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d6ba:	mov    r10,rax
  41d6bd:	cmp    r15,r10
  41d6c0:	je     41db5c <flatcc_json_parser_generic_json@@Base+0x82c>
  41d6c6:	movzx  edx,BYTE PTR [r10]
  41d6ca:	cmp    dl,0x7d
  41d6cd:	jne    41d382 <flatcc_json_parser_generic_json@@Base+0x52>
  41d6d3:	lea    rax,[r10+0x1]
  41d6d7:	mov    rdx,r15
  41d6da:	sub    rdx,rax
  41d6dd:	cmp    rdx,0x1
  41d6e1:	jle    41d6f4 <flatcc_json_parser_generic_json@@Base+0x3c4>
  41d6e3:	cmp    BYTE PTR [r10+0x1],0x20
  41d6e8:	jg     41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41d6ee:	je     41dc79 <flatcc_json_parser_generic_json@@Base+0x949>
  41d6f4:	mov    rdx,r15
  41d6f7:	mov    rsi,rax
  41d6fa:	mov    rdi,rbx
  41d6fd:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d702:	jmp    41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41d707:	nop    WORD PTR [rax+rax*1+0x0]
  41d710:	mov    rax,rsi
  41d713:	jmp    41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41d718:	nop    DWORD PTR [rax+rax*1+0x0]
  41d720:	cmp    BYTE PTR [rax+0x1],0x20
  41d724:	jle    41d5b7 <flatcc_json_parser_generic_json@@Base+0x287>
  41d72a:	add    rax,0x1
  41d72e:	jmp    41d5c5 <flatcc_json_parser_generic_json@@Base+0x295>
  41d733:	nop    DWORD PTR [rax+rax*1+0x0]
  41d738:	lea    r10,[rax+0x1]
  41d73c:	mov    rdx,r15
  41d73f:	sub    rdx,r10
  41d742:	cmp    rdx,0x1
  41d746:	jle    41d754 <flatcc_json_parser_generic_json@@Base+0x424>
  41d748:	cmp    BYTE PTR [rax+0x1],0x20
  41d74c:	jg     41d765 <flatcc_json_parser_generic_json@@Base+0x435>
  41d74e:	je     41d91e <flatcc_json_parser_generic_json@@Base+0x5ee>
  41d754:	mov    rsi,r10
  41d757:	mov    rdx,r15
  41d75a:	mov    rdi,rbx
  41d75d:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d762:	mov    r10,rax
  41d765:	cmp    r15,r10
  41d768:	je     41dc8d <flatcc_json_parser_generic_json@@Base+0x95d>
  41d76e:	movzx  edx,BYTE PTR [r10]
  41d772:	cmp    dl,0x5d
  41d775:	jne    41d382 <flatcc_json_parser_generic_json@@Base+0x52>
  41d77b:	jmp    41d6d3 <flatcc_json_parser_generic_json@@Base+0x3a3>
  41d780:	cmp    BYTE PTR [rax+0x2],0x20
  41d784:	jle    41d610 <flatcc_json_parser_generic_json@@Base+0x2e0>
  41d78a:	add    rax,0x2
  41d78e:	jmp    41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41d793:	nop    DWORD PTR [rax+rax*1+0x0]
  41d798:	cmp    r14,QWORD PTR [rsp]
  41d79c:	je     41dcbd <flatcc_json_parser_generic_json@@Base+0x98d>
  41d7a2:	lea    rsi,[r10+0x1]
  41d7a6:	mov    rax,r15
  41d7a9:	lea    rbp,[r14+0x1]
  41d7ad:	mov    BYTE PTR [r14],0x5d
  41d7b1:	sub    rax,rsi
  41d7b4:	cmp    rax,0x1
  41d7b8:	jle    41d7cb <flatcc_json_parser_generic_json@@Base+0x49b>
  41d7ba:	cmp    BYTE PTR [r10+0x1],0x20
  41d7bf:	jg     41da98 <flatcc_json_parser_generic_json@@Base+0x768>
  41d7c5:	je     41d931 <flatcc_json_parser_generic_json@@Base+0x601>
  41d7cb:	mov    rdx,r15
  41d7ce:	mov    rdi,rbx
  41d7d1:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d7d6:	mov    r10,rax
  41d7d9:	cmp    r15,r10
  41d7dc:	je     41daa8 <flatcc_json_parser_generic_json@@Base+0x778>
  41d7e2:	movzx  edx,BYTE PTR [r10]
  41d7e6:	cmp    dl,0x5d
  41d7e9:	jne    41d408 <flatcc_json_parser_generic_json@@Base+0xd8>
  41d7ef:	mov    r14,rbp
  41d7f2:	mov    rax,r10
  41d7f5:	jmp    41d58c <flatcc_json_parser_generic_json@@Base+0x25c>
  41d7fa:	nop    WORD PTR [rax+rax*1+0x0]
  41d800:	cmp    dl,0x22
  41d803:	je     41db8c <flatcc_json_parser_generic_json@@Base+0x85c>
  41d809:	cmp    dl,0x2e
  41d80c:	je     41dc21 <flatcc_json_parser_generic_json@@Base+0x8f1>
  41d812:	mov    DWORD PTR [rbx+0x14],0x1
  41d819:	cmp    r15,r10
  41d81c:	mov    rax,r15
  41d81f:	je     41d881 <flatcc_json_parser_generic_json@@Base+0x551>
  41d821:	movzx  ecx,BYTE PTR [r10]
  41d825:	lea    rdx,[r10+0x1]
  41d829:	cmp    cl,0x20
  41d82c:	jle    41dd4e <flatcc_json_parser_generic_json@@Base+0xa1e>
  41d832:	nop    WORD PTR [rax+rax*1+0x0]
  41d838:	lea    esi,[rcx-0x2e]
  41d83b:	lea    rax,[rdx-0x1]
  41d83f:	cmp    sil,0x31
  41d843:	jbe    41d960 <flatcc_json_parser_generic_json@@Base+0x630>
  41d849:	mov    esi,ecx
  41d84b:	or     esi,0x20
  41d84e:	sub    esi,0x61
  41d851:	cmp    sil,0x19
  41d855:	jbe    41d974 <flatcc_json_parser_generic_json@@Base+0x644>
  41d85b:	cmp    cl,0x2e
  41d85e:	je     41dcd5 <flatcc_json_parser_generic_json@@Base+0x9a5>
  41d864:	mov    rdx,r15
  41d867:	sub    rdx,rax
  41d86a:	cmp    rdx,0x1
  41d86e:	jle    41d881 <flatcc_json_parser_generic_json@@Base+0x551>
  41d870:	movzx  ecx,BYTE PTR [rax]
  41d873:	cmp    cl,0x20
  41d876:	jg     41d88f <flatcc_json_parser_generic_json@@Base+0x55f>
  41d878:	cmp    cl,0x20
  41d87b:	je     41dc50 <flatcc_json_parser_generic_json@@Base+0x920>
  41d881:	mov    rdx,r15
  41d884:	mov    rsi,rax
  41d887:	mov    rdi,rbx
  41d88a:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d88f:	cmp    r15,rax
  41d892:	je     41dd36 <flatcc_json_parser_generic_json@@Base+0xa06>
  41d898:	cmp    BYTE PTR [rax],0x3a
  41d89b:	jne    41dd1e <flatcc_json_parser_generic_json@@Base+0x9ee>
  41d8a1:	lea    r10,[rax+0x1]
  41d8a5:	mov    rdx,r15
  41d8a8:	sub    rdx,r10
  41d8ab:	cmp    rdx,0x1
  41d8af:	jle    41d8c0 <flatcc_json_parser_generic_json@@Base+0x590>
  41d8b1:	movzx  edx,BYTE PTR [rax+0x1]
  41d8b5:	cmp    dl,0x20
  41d8b8:	jg     41d8d4 <flatcc_json_parser_generic_json@@Base+0x5a4>
  41d8ba:	je     41dc63 <flatcc_json_parser_generic_json@@Base+0x933>
  41d8c0:	mov    rdx,r15
  41d8c3:	mov    rsi,r10
  41d8c6:	mov    rdi,rbx
  41d8c9:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41d8ce:	movzx  edx,BYTE PTR [rax]
  41d8d1:	mov    r10,rax
  41d8d4:	cmp    dl,0x39
  41d8d7:	jg     41d39f <flatcc_json_parser_generic_json@@Base+0x6f>
  41d8dd:	cmp    dl,0x30
  41d8e0:	jge    41d485 <flatcc_json_parser_generic_json@@Base+0x155>
  41d8e6:	cmp    dl,0x22
  41d8e9:	jne    41d480 <flatcc_json_parser_generic_json@@Base+0x150>
  41d8ef:	cmp    r10,r15
  41d8f2:	jne    41d42a <flatcc_json_parser_generic_json@@Base+0xfa>
  41d8f8:	mov    ecx,0x10
  41d8fd:	mov    rdx,r15
  41d900:	mov    rsi,r15
  41d903:	mov    rdi,rbx
  41d906:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41d90b:	jmp    41d42e <flatcc_json_parser_generic_json@@Base+0xfe>
  41d910:	cmp    dl,0x5b
  41d913:	jne    41d3a8 <flatcc_json_parser_generic_json@@Base+0x78>
  41d919:	jmp    41d7a2 <flatcc_json_parser_generic_json@@Base+0x472>
  41d91e:	cmp    BYTE PTR [rax+0x2],0x20
  41d922:	jle    41d754 <flatcc_json_parser_generic_json@@Base+0x424>
  41d928:	lea    r10,[rax+0x2]
  41d92c:	jmp    41d765 <flatcc_json_parser_generic_json@@Base+0x435>
  41d931:	cmp    BYTE PTR [r10+0x2],0x20
  41d936:	jle    41d7cb <flatcc_json_parser_generic_json@@Base+0x49b>
  41d93c:	add    r10,0x2
  41d940:	jmp    41d7d9 <flatcc_json_parser_generic_json@@Base+0x4a9>
  41d945:	cmp    BYTE PTR [r10+0x2],0x20
  41d94a:	jle    41d3e4 <flatcc_json_parser_generic_json@@Base+0xb4>
  41d950:	add    r10,0x2
  41d954:	jmp    41d3f2 <flatcc_json_parser_generic_json@@Base+0xc2>
  41d959:	nop    DWORD PTR [rax+0x0]
  41d960:	movabs rdi,0x2000000000ffd
  41d96a:	bt     rdi,rsi
  41d96e:	jae    41d849 <flatcc_json_parser_generic_json@@Base+0x519>
  41d974:	cmp    r15,rdx
  41d977:	mov    rax,rdx
  41d97a:	je     41dca5 <flatcc_json_parser_generic_json@@Base+0x975>
  41d980:	movzx  esi,BYTE PTR [rdx]
  41d983:	add    rdx,0x1
  41d987:	cmp    sil,0x20
  41d98b:	jle    41d85b <flatcc_json_parser_generic_json@@Base+0x52b>
  41d991:	mov    ecx,esi
  41d993:	jmp    41d838 <flatcc_json_parser_generic_json@@Base+0x508>
  41d998:	mov    rax,r15
  41d99b:	mov    ecx,0x14
  41d9a0:	mov    rdx,r15
  41d9a3:	mov    rsi,rax
  41d9a6:	mov    rdi,rbx
  41d9a9:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41d9ae:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41d9b3:	lea    rax,[r10+0x1]
  41d9b7:	cmp    r15,rax
  41d9ba:	je     41d4eb <flatcc_json_parser_generic_json@@Base+0x1bb>
  41d9c0:	movzx  edx,BYTE PTR [r10+0x1]
  41d9c5:	cmp    dl,0x2e
  41d9c8:	je     41db0a <flatcc_json_parser_generic_json@@Base+0x7da>
  41d9ce:	mov    ecx,edx
  41d9d0:	and    ecx,0xffffffdf
  41d9d3:	cmp    cl,0x45
  41d9d6:	jne    41da63 <flatcc_json_parser_generic_json@@Base+0x733>
  41d9dc:	lea    rsi,[rax+0x1]
  41d9e0:	cmp    r15,rsi
  41d9e3:	je     41dabd <flatcc_json_parser_generic_json@@Base+0x78d>
  41d9e9:	movzx  edx,BYTE PTR [rax+0x1]
  41d9ed:	lea    ecx,[rdx-0x2b]
  41d9f0:	and    ecx,0xfd
  41d9f6:	jne    41da09 <flatcc_json_parser_generic_json@@Base+0x6d9>
  41d9f8:	lea    rsi,[rax+0x2]
  41d9fc:	cmp    r15,rsi
  41d9ff:	je     41daf5 <flatcc_json_parser_generic_json@@Base+0x7c5>
  41da05:	movzx  edx,BYTE PTR [rax+0x2]
  41da09:	sub    edx,0x30
  41da0c:	cmp    dl,0x9
  41da0f:	ja     41daf5 <flatcc_json_parser_generic_json@@Base+0x7c5>
  41da15:	lea    rax,[rsi+0x1]
  41da19:	cmp    r15,rax
  41da1c:	je     41d4eb <flatcc_json_parser_generic_json@@Base+0x1bb>
  41da22:	movzx  edx,BYTE PTR [rsi+0x1]
  41da26:	lea    ecx,[rdx-0x30]
  41da29:	cmp    cl,0x9
  41da2c:	jbe    41da3b <flatcc_json_parser_generic_json@@Base+0x70b>
  41da2e:	jmp    41da63 <flatcc_json_parser_generic_json@@Base+0x733>
  41da30:	movzx  edx,BYTE PTR [rax]
  41da33:	lea    ecx,[rdx-0x30]
  41da36:	cmp    cl,0x9
  41da39:	ja     41da63 <flatcc_json_parser_generic_json@@Base+0x733>
  41da3b:	add    rax,0x1
  41da3f:	cmp    r15,rax
  41da42:	jne    41da30 <flatcc_json_parser_generic_json@@Base+0x700>
  41da44:	jmp    41d4e8 <flatcc_json_parser_generic_json@@Base+0x1b8>
  41da49:	nop    DWORD PTR [rax+0x0]
  41da50:	cmp    BYTE PTR [rax+0x2],0x20
  41da54:	jle    41d6ac <flatcc_json_parser_generic_json@@Base+0x37c>
  41da5a:	lea    r10,[rax+0x2]
  41da5e:	jmp    41d6bd <flatcc_json_parser_generic_json@@Base+0x38d>
  41da63:	cmp    dl,0x20
  41da66:	je     41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41da6c:	jle    41dad5 <flatcc_json_parser_generic_json@@Base+0x7a5>
  41da6e:	cmp    dl,0x3a
  41da71:	je     41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41da77:	jle    41dbdc <flatcc_json_parser_generic_json@@Base+0x8ac>
  41da7d:	cmp    dl,0x5d
  41da80:	je     41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41da86:	cmp    dl,0x7d
  41da89:	jne    41d4eb <flatcc_json_parser_generic_json@@Base+0x1bb>
  41da8f:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41da94:	nop    DWORD PTR [rax+0x0]
  41da98:	mov    r10,rsi
  41da9b:	jmp    41d7d9 <flatcc_json_parser_generic_json@@Base+0x4a9>
  41daa0:	mov    r10,rsi
  41daa3:	jmp    41d3f2 <flatcc_json_parser_generic_json@@Base+0xc2>
  41daa8:	mov    rax,r15
  41daab:	jmp    41d662 <flatcc_json_parser_generic_json@@Base+0x332>
  41dab0:	add    r10,0x1
  41dab4:	cmp    r15,r10
  41dab7:	jne    41d497 <flatcc_json_parser_generic_json@@Base+0x167>
  41dabd:	mov    ecx,0x6
  41dac2:	mov    rdx,r15
  41dac5:	mov    rsi,r15
  41dac8:	mov    rdi,rbx
  41dacb:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dad0:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41dad5:	cmp    dl,0x9
  41dad8:	jl     41d4eb <flatcc_json_parser_generic_json@@Base+0x1bb>
  41dade:	cmp    dl,0xb
  41dae1:	jle    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41dae7:	cmp    dl,0xd
  41daea:	jne    41d4eb <flatcc_json_parser_generic_json@@Base+0x1bb>
  41daf0:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41daf5:	mov    ecx,0x6
  41dafa:	mov    rdx,r15
  41dafd:	mov    rdi,rbx
  41db00:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41db05:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41db0a:	movzx  ecx,BYTE PTR [rax+0x1]
  41db0e:	lea    edx,[rcx-0x30]
  41db11:	cmp    dl,0x9
  41db14:	ja     41dced <flatcc_json_parser_generic_json@@Base+0x9bd>
  41db1a:	lea    rcx,[rax+0x2]
  41db1e:	cmp    r15,rcx
  41db21:	je     41d4e8 <flatcc_json_parser_generic_json@@Base+0x1b8>
  41db27:	movzx  edx,BYTE PTR [rax+0x2]
  41db2b:	lea    eax,[rdx-0x30]
  41db2e:	cmp    al,0x9
  41db30:	jbe    41db4e <flatcc_json_parser_generic_json@@Base+0x81e>
  41db32:	jmp    41dcb5 <flatcc_json_parser_generic_json@@Base+0x985>
  41db37:	nop    WORD PTR [rax+rax*1+0x0]
  41db40:	movzx  edx,BYTE PTR [rcx]
  41db43:	lea    eax,[rdx-0x30]
  41db46:	cmp    al,0x9
  41db48:	ja     41dcb5 <flatcc_json_parser_generic_json@@Base+0x985>
  41db4e:	add    rcx,0x1
  41db52:	cmp    r15,rcx
  41db55:	jne    41db40 <flatcc_json_parser_generic_json@@Base+0x810>
  41db57:	jmp    41d4e8 <flatcc_json_parser_generic_json@@Base+0x1b8>
  41db5c:	mov    ecx,0xa
  41db61:	mov    rdx,r15
  41db64:	mov    rsi,r15
  41db67:	mov    rdi,rbx
  41db6a:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41db6f:	jmp    41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41db74:	mov    ecx,0x6
  41db79:	mov    rdx,r15
  41db7c:	mov    rsi,r10
  41db7f:	mov    rdi,rbx
  41db82:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41db87:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41db8c:	add    r10,0x1
  41db90:	mov    DWORD PTR [rbx+0x14],0x0
  41db97:	cmp    r15,r10
  41db9a:	je     41dc08 <flatcc_json_parser_generic_json@@Base+0x8d8>
  41db9c:	movzx  edx,BYTE PTR [r10]
  41dba0:	cmp    dl,0x22
  41dba3:	jne    41dbc2 <flatcc_json_parser_generic_json@@Base+0x892>
  41dba5:	jmp    41dc0d <flatcc_json_parser_generic_json@@Base+0x8dd>
  41dba7:	nop    WORD PTR [rax+rax*1+0x0]
  41dbb0:	lea    r10,[rax+0x1]
  41dbb4:	cmp    r15,r10
  41dbb7:	je     41dc08 <flatcc_json_parser_generic_json@@Base+0x8d8>
  41dbb9:	movzx  edx,BYTE PTR [rax+0x1]
  41dbbd:	cmp    dl,0x22
  41dbc0:	je     41dc0d <flatcc_json_parser_generic_json@@Base+0x8dd>
  41dbc2:	cmp    dl,0x5c
  41dbc5:	mov    rax,r10
  41dbc8:	jne    41dbb0 <flatcc_json_parser_generic_json@@Base+0x880>
  41dbca:	mov    rdx,r15
  41dbcd:	sub    rdx,r10
  41dbd0:	cmp    rdx,0x1
  41dbd4:	jle    41dbea <flatcc_json_parser_generic_json@@Base+0x8ba>
  41dbd6:	add    rax,0x1
  41dbda:	jmp    41dbb0 <flatcc_json_parser_generic_json@@Base+0x880>
  41dbdc:	cmp    dl,0x2c
  41dbdf:	jne    41d4eb <flatcc_json_parser_generic_json@@Base+0x1bb>
  41dbe5:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41dbea:	cmp    BYTE PTR [r10],0x22
  41dbee:	je     41dc0d <flatcc_json_parser_generic_json@@Base+0x8dd>
  41dbf0:	mov    ecx,0x14
  41dbf5:	mov    rdx,r15
  41dbf8:	mov    rsi,r10
  41dbfb:	mov    rdi,rbx
  41dbfe:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dc03:	jmp    41d864 <flatcc_json_parser_generic_json@@Base+0x534>
  41dc08:	mov    r10,r15
  41dc0b:	jmp    41dbf0 <flatcc_json_parser_generic_json@@Base+0x8c0>
  41dc0d:	lea    rax,[r10+0x1]
  41dc11:	jmp    41d864 <flatcc_json_parser_generic_json@@Base+0x534>
  41dc16:	mov    rbp,r14
  41dc19:	mov    rax,r15
  41dc1c:	jmp    41d643 <flatcc_json_parser_generic_json@@Base+0x313>
  41dc21:	mov    rsi,r10
  41dc24:	mov    ecx,0x5
  41dc29:	mov    rdx,r15
  41dc2c:	mov    rdi,rbx
  41dc2f:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dc34:	mov    r10,rax
  41dc37:	mov    eax,DWORD PTR [rbx+0x14]
  41dc3a:	test   eax,eax
  41dc3c:	je     41db97 <flatcc_json_parser_generic_json@@Base+0x867>
  41dc42:	jmp    41d819 <flatcc_json_parser_generic_json@@Base+0x4e9>
  41dc47:	nop    WORD PTR [rax+rax*1+0x0]
  41dc50:	cmp    BYTE PTR [rax+0x1],0x20
  41dc54:	jle    41d881 <flatcc_json_parser_generic_json@@Base+0x551>
  41dc5a:	add    rax,0x1
  41dc5e:	jmp    41d88f <flatcc_json_parser_generic_json@@Base+0x55f>
  41dc63:	movzx  edx,BYTE PTR [rax+0x2]
  41dc67:	cmp    dl,0x20
  41dc6a:	jle    41d8c0 <flatcc_json_parser_generic_json@@Base+0x590>
  41dc70:	lea    r10,[rax+0x2]
  41dc74:	jmp    41d8d4 <flatcc_json_parser_generic_json@@Base+0x5a4>
  41dc79:	cmp    BYTE PTR [r10+0x2],0x20
  41dc7e:	jle    41d6f4 <flatcc_json_parser_generic_json@@Base+0x3c4>
  41dc84:	lea    rax,[r10+0x2]
  41dc88:	jmp    41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41dc8d:	mov    ecx,0x9
  41dc92:	mov    rdx,r15
  41dc95:	mov    rsi,r15
  41dc98:	mov    rdi,rbx
  41dc9b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dca0:	jmp    41d580 <flatcc_json_parser_generic_json@@Base+0x250>
  41dca5:	mov    rax,r15
  41dca8:	jmp    41d85b <flatcc_json_parser_generic_json@@Base+0x52b>
  41dcad:	mov    rax,rsi
  41dcb0:	jmp    41d662 <flatcc_json_parser_generic_json@@Base+0x332>
  41dcb5:	mov    rax,rcx
  41dcb8:	jmp    41d9ce <flatcc_json_parser_generic_json@@Base+0x69e>
  41dcbd:	mov    ecx,0x2
  41dcc2:	mov    rdx,r15
  41dcc5:	mov    rsi,r10
  41dcc8:	mov    rdi,rbx
  41dccb:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dcd0:	jmp    41d662 <flatcc_json_parser_generic_json@@Base+0x332>
  41dcd5:	mov    ecx,0x5
  41dcda:	mov    rdx,r15
  41dcdd:	mov    rsi,rax
  41dce0:	mov    rdi,rbx
  41dce3:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dce8:	jmp    41d864 <flatcc_json_parser_generic_json@@Base+0x534>
  41dced:	lea    rsi,[rax+0x1]
  41dcf1:	mov    ecx,0x6
  41dcf6:	mov    rdx,r15
  41dcf9:	mov    rdi,rbx
  41dcfc:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dd01:	jmp    41d521 <flatcc_json_parser_generic_json@@Base+0x1f1>
  41dd06:	mov    ecx,0x5
  41dd0b:	mov    rdx,r15
  41dd0e:	mov    rsi,r10
  41dd11:	mov    rdi,rbx
  41dd14:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dd19:	jmp    41d662 <flatcc_json_parser_generic_json@@Base+0x332>
  41dd1e:	mov    ecx,0x4
  41dd23:	mov    rdx,r15
  41dd26:	mov    rsi,rax
  41dd29:	mov    rdi,rbx
  41dd2c:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dd31:	jmp    41d662 <flatcc_json_parser_generic_json@@Base+0x332>
  41dd36:	mov    ecx,0xa
  41dd3b:	mov    rdx,r15
  41dd3e:	mov    rsi,r15
  41dd41:	mov    rdi,rbx
  41dd44:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41dd49:	jmp    41d662 <flatcc_json_parser_generic_json@@Base+0x332>
  41dd4e:	mov    rdx,r15
  41dd51:	mov    rax,r10
  41dd54:	sub    rdx,r10
  41dd57:	cmp    rdx,0x1
  41dd5b:	jg     41d878 <flatcc_json_parser_generic_json@@Base+0x548>
  41dd61:	jmp    41d881 <flatcc_json_parser_generic_json@@Base+0x551>
  41dd66:	call   405070 <__stack_chk_fail@plt>
  41dd6b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041dd70 <flatcc_json_parser_unmatched_symbol@@Base>:
  41dd70:	push   r12
  41dd72:	push   rbp
  41dd73:	mov    rbp,rdi
  41dd76:	push   rbx
  41dd77:	test   BYTE PTR [rdi+0x10],0x1
  41dd7b:	mov    rbx,rdx
  41dd7e:	je     41de28 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
  41dd84:	mov    eax,DWORD PTR [rdi+0x14]
  41dd87:	test   eax,eax
  41dd89:	je     41de40 <flatcc_json_parser_unmatched_symbol@@Base+0xd0>
  41dd8f:	cmp    rsi,rdx
  41dd92:	je     41ddda <flatcc_json_parser_unmatched_symbol@@Base+0x6a>
  41dd94:	movzx  ecx,BYTE PTR [rsi]
  41dd97:	cmp    cl,0x20
  41dd9a:	jle    41ddda <flatcc_json_parser_unmatched_symbol@@Base+0x6a>
  41dd9c:	lea    rax,[rsi+0x1]
  41dda0:	movabs rdi,0x2000000000ffd
  41ddaa:	nop    WORD PTR [rax+rax*1+0x0]
  41ddb0:	lea    edx,[rcx-0x2e]
  41ddb3:	lea    rsi,[rax-0x1]
  41ddb7:	cmp    dl,0x31
  41ddba:	jbe    41dea0 <flatcc_json_parser_unmatched_symbol@@Base+0x130>
  41ddc0:	mov    edx,ecx
  41ddc2:	or     edx,0x20
  41ddc5:	sub    edx,0x61
  41ddc8:	cmp    dl,0x19
  41ddcb:	jbe    41deaa <flatcc_json_parser_unmatched_symbol@@Base+0x13a>
  41ddd1:	cmp    cl,0x2e
  41ddd4:	je     41df58 <flatcc_json_parser_unmatched_symbol@@Base+0x1e8>
  41ddda:	mov    r12,rbx
  41dddd:	mov    rax,r12
  41dde0:	sub    rax,rsi
  41dde3:	cmp    rax,0x1
  41dde7:	jle    41ddf4 <flatcc_json_parser_unmatched_symbol@@Base+0x84>
  41dde9:	cmp    BYTE PTR [rsi],0x20
  41ddec:	jg     41de02 <flatcc_json_parser_unmatched_symbol@@Base+0x92>
  41ddee:	je     41ded0 <flatcc_json_parser_unmatched_symbol@@Base+0x160>
  41ddf4:	mov    rdx,rbx
  41ddf7:	mov    rdi,rbp
  41ddfa:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41ddff:	mov    rsi,rax
  41de02:	cmp    rbx,rsi
  41de05:	je     41de10 <flatcc_json_parser_unmatched_symbol@@Base+0xa0>
  41de07:	cmp    BYTE PTR [rsi],0x3a
  41de0a:	je     41df18 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
  41de10:	mov    rdx,rbx
  41de13:	mov    rdi,rbp
  41de16:	mov    ecx,0x4
  41de1b:	pop    rbx
  41de1c:	pop    rbp
  41de1d:	pop    r12
  41de1f:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41de24:	nop    DWORD PTR [rax+0x0]
  41de28:	mov    rdx,rbx
  41de2b:	mov    rdi,rbp
  41de2e:	mov    ecx,0xd
  41de33:	pop    rbx
  41de34:	pop    rbp
  41de35:	pop    r12
  41de37:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41de3c:	nop    DWORD PTR [rax+0x0]
  41de40:	cmp    rsi,rdx
  41de43:	je     41df7c <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
  41de49:	movzx  edx,BYTE PTR [rsi]
  41de4c:	mov    r12,rbx
  41de4f:	cmp    dl,0x22
  41de52:	jne    41de76 <flatcc_json_parser_unmatched_symbol@@Base+0x106>
  41de54:	jmp    41df00 <flatcc_json_parser_unmatched_symbol@@Base+0x190>
  41de59:	nop    DWORD PTR [rax+0x0]
  41de60:	lea    rsi,[rax+0x1]
  41de64:	cmp    rbx,rsi
  41de67:	je     41de97 <flatcc_json_parser_unmatched_symbol@@Base+0x127>
  41de69:	movzx  edx,BYTE PTR [rax+0x1]
  41de6d:	cmp    dl,0x22
  41de70:	je     41df08 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
  41de76:	cmp    dl,0x5c
  41de79:	mov    rax,rsi
  41de7c:	jne    41de60 <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
  41de7e:	mov    rdx,rbx
  41de81:	sub    rdx,rsi
  41de84:	cmp    rdx,0x1
  41de88:	jle    41dee3 <flatcc_json_parser_unmatched_symbol@@Base+0x173>
  41de8a:	add    rax,0x1
  41de8e:	lea    rsi,[rax+0x1]
  41de92:	cmp    rbx,rsi
  41de95:	jne    41de69 <flatcc_json_parser_unmatched_symbol@@Base+0xf9>
  41de97:	mov    rsi,rbx
  41de9a:	jmp    41dee8 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
  41de9c:	nop    DWORD PTR [rax+0x0]
  41dea0:	bt     rdi,rdx
  41dea4:	jae    41ddc0 <flatcc_json_parser_unmatched_symbol@@Base+0x50>
  41deaa:	cmp    rbx,rax
  41dead:	mov    rsi,rax
  41deb0:	je     41df50 <flatcc_json_parser_unmatched_symbol@@Base+0x1e0>
  41deb6:	movzx  edx,BYTE PTR [rax]
  41deb9:	add    rax,0x1
  41debd:	cmp    dl,0x20
  41dec0:	jle    41ddd1 <flatcc_json_parser_unmatched_symbol@@Base+0x61>
  41dec6:	mov    ecx,edx
  41dec8:	jmp    41ddb0 <flatcc_json_parser_unmatched_symbol@@Base+0x40>
  41decd:	nop    DWORD PTR [rax]
  41ded0:	cmp    BYTE PTR [rsi+0x1],0x20
  41ded4:	jle    41ddf4 <flatcc_json_parser_unmatched_symbol@@Base+0x84>
  41deda:	add    rsi,0x1
  41dede:	jmp    41de02 <flatcc_json_parser_unmatched_symbol@@Base+0x92>
  41dee3:	cmp    BYTE PTR [rsi],0x22
  41dee6:	je     41df08 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
  41dee8:	mov    ecx,0x14
  41deed:	mov    rdx,rbx
  41def0:	mov    rdi,rbp
  41def3:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41def8:	mov    rsi,rax
  41defb:	jmp    41dddd <flatcc_json_parser_unmatched_symbol@@Base+0x6d>
  41df00:	mov    r12,rbx
  41df03:	nop    DWORD PTR [rax+rax*1+0x0]
  41df08:	add    rsi,0x1
  41df0c:	jmp    41dddd <flatcc_json_parser_unmatched_symbol@@Base+0x6d>
  41df11:	nop    DWORD PTR [rax+0x0]
  41df18:	lea    rax,[rsi+0x1]
  41df1c:	sub    r12,rax
  41df1f:	cmp    r12,0x1
  41df23:	jle    41df2d <flatcc_json_parser_unmatched_symbol@@Base+0x1bd>
  41df25:	cmp    BYTE PTR [rsi+0x1],0x20
  41df29:	jg     41df3b <flatcc_json_parser_unmatched_symbol@@Base+0x1cb>
  41df2b:	je     41df70 <flatcc_json_parser_unmatched_symbol@@Base+0x200>
  41df2d:	mov    rdx,rbx
  41df30:	mov    rsi,rax
  41df33:	mov    rdi,rbp
  41df36:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41df3b:	mov    rdx,rbx
  41df3e:	mov    rdi,rbp
  41df41:	mov    rsi,rax
  41df44:	pop    rbx
  41df45:	pop    rbp
  41df46:	pop    r12
  41df48:	jmp    41d330 <flatcc_json_parser_generic_json@@Base>
  41df4d:	nop    DWORD PTR [rax]
  41df50:	mov    rsi,rbx
  41df53:	jmp    41ddd1 <flatcc_json_parser_unmatched_symbol@@Base+0x61>
  41df58:	mov    ecx,0x5
  41df5d:	mov    rdx,rbx
  41df60:	mov    rdi,rbp
  41df63:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41df68:	mov    rsi,rax
  41df6b:	jmp    41ddda <flatcc_json_parser_unmatched_symbol@@Base+0x6a>
  41df70:	cmp    BYTE PTR [rsi+0x2],0x20
  41df74:	jle    41df2d <flatcc_json_parser_unmatched_symbol@@Base+0x1bd>
  41df76:	lea    rax,[rsi+0x2]
  41df7a:	jmp    41df3b <flatcc_json_parser_unmatched_symbol@@Base+0x1cb>
  41df7c:	mov    r12,rsi
  41df7f:	jmp    41dee8 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
  41df84:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41df8f:	nop

000000000041df90 <flatcc_json_parser_integer@@Base>:
  41df90:	cmp    rsi,rdx
  41df93:	je     41e040 <flatcc_json_parser_integer@@Base+0xb0>
  41df99:	cmp    BYTE PTR [rsi],0x2d
  41df9c:	sete   al
  41df9f:	movzx  r9d,al
  41dfa3:	movzx  eax,al
  41dfa6:	add    rax,rsi
  41dfa9:	mov    DWORD PTR [rcx],r9d
  41dfac:	cmp    rdx,rax
  41dfaf:	je     41e046 <flatcc_json_parser_integer@@Base+0xb6>
  41dfb5:	movsx  r9,BYTE PTR [rax]
  41dfb9:	lea    ecx,[r9-0x30]
  41dfbd:	cmp    cl,0x9
  41dfc0:	ja     41dfff <flatcc_json_parser_integer@@Base+0x6f>
  41dfc2:	sub    r9,0x30
  41dfc6:	jmp    41dfef <flatcc_json_parser_integer@@Base+0x5f>
  41dfc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41dfd0:	movsx  rcx,BYTE PTR [rax]
  41dfd4:	lea    r10d,[rcx-0x30]
  41dfd8:	cmp    r10b,0x9
  41dfdc:	ja     41e008 <flatcc_json_parser_integer@@Base+0x78>
  41dfde:	lea    r10,[r9+r9*4]
  41dfe2:	lea    rcx,[rcx+r10*2-0x30]
  41dfe7:	cmp    rcx,r9
  41dfea:	jb     41e030 <flatcc_json_parser_integer@@Base+0xa0>
  41dfec:	mov    r9,rcx
  41dfef:	add    rax,0x1
  41dff3:	cmp    rdx,rax
  41dff6:	jne    41dfd0 <flatcc_json_parser_integer@@Base+0x40>
  41dff8:	mov    rax,rdx
  41dffb:	mov    QWORD PTR [r8],r9
  41dffe:	ret    
  41dfff:	xor    r9d,r9d
  41e002:	nop    WORD PTR [rax+rax*1+0x0]
  41e008:	cmp    rsi,rax
  41e00b:	je     41e044 <flatcc_json_parser_integer@@Base+0xb4>
  41e00d:	movzx  ecx,BYTE PTR [rax]
  41e010:	mov    esi,ecx
  41e012:	and    esi,0xffffffdf
  41e015:	cmp    sil,0x45
  41e019:	je     41e020 <flatcc_json_parser_integer@@Base+0x90>
  41e01b:	cmp    cl,0x2e
  41e01e:	jne    41dffb <flatcc_json_parser_integer@@Base+0x6b>
  41e020:	mov    ecx,0xc
  41e025:	mov    rsi,rax
  41e028:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41e02d:	nop    DWORD PTR [rax]
  41e030:	mov    ecx,0x8
  41e035:	mov    rsi,rax
  41e038:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41e03d:	nop    DWORD PTR [rax]
  41e040:	mov    rax,rsi
  41e043:	ret    
  41e044:	repz ret 
  41e046:	xor    r9d,r9d
  41e049:	jmp    41dff8 <flatcc_json_parser_integer@@Base+0x68>
  41e04b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e050 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
  41e050:	push   r15
  41e052:	push   r14
  41e054:	mov    r14,rdx
  41e057:	push   r13
  41e059:	push   r12
  41e05b:	mov    r13,rcx
  41e05e:	push   rbp
  41e05f:	push   rbx
  41e060:	mov    r12d,r8d
  41e063:	mov    rbx,rdi
  41e066:	sub    rsp,0x38
  41e06a:	mov    rax,QWORD PTR fs:0x28
  41e073:	mov    QWORD PTR [rsp+0x28],rax
  41e078:	xor    eax,eax
  41e07a:	test   r8d,r8d
  41e07d:	setne  BYTE PTR [rsp+0x8]
  41e082:	cmp    rsi,rdx
  41e085:	je     41e090 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
  41e087:	cmp    BYTE PTR [rsi],0x22
  41e08a:	lea    rbp,[rsi+0x1]
  41e08e:	je     41e0a3 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x53>
  41e090:	mov    ecx,0x10
  41e095:	mov    rdx,r14
  41e098:	mov    rdi,rbx
  41e09b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41e0a0:	mov    rbp,rax
  41e0a3:	mov    rdx,r14
  41e0a6:	mov    rsi,rbp
  41e0a9:	mov    rdi,rbx
  41e0ac:	call   41c440 <flatcc_json_parser_string_part@@Base>
  41e0b1:	cmp    r14,rax
  41e0b4:	mov    r15,rax
  41e0b7:	je     41e0be <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6e>
  41e0b9:	cmp    BYTE PTR [rax],0x22
  41e0bc:	je     41e108 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb8>
  41e0be:	xor    ecx,ecx
  41e0c0:	test   r12d,r12d
  41e0c3:	mov    DWORD PTR [r13+0x0],0x0
  41e0cb:	setne  cl
  41e0ce:	add    ecx,0x1f
  41e0d1:	mov    rax,QWORD PTR [rsp+0x28]
  41e0d6:	xor    rax,QWORD PTR fs:0x28
  41e0df:	jne    41e448 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
  41e0e5:	add    rsp,0x38
  41e0e9:	mov    rdx,r14
  41e0ec:	mov    rsi,r15
  41e0ef:	mov    rdi,rbx
  41e0f2:	pop    rbx
  41e0f3:	pop    rbp
  41e0f4:	pop    r12
  41e0f6:	pop    r13
  41e0f8:	pop    r14
  41e0fa:	pop    r15
  41e0fc:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41e101:	nop    DWORD PTR [rax+0x0]
  41e108:	sub    rax,rbp
  41e10b:	mov    rdx,rax
  41e10e:	mov    QWORD PTR [rsp+0x18],rax
  41e113:	shr    rax,0x2
  41e117:	lea    rax,[rax+rax*2]
  41e11b:	and    edx,0x3
  41e11e:	cmp    rdx,0x2
  41e122:	lea    rdi,[rax+0x1]
  41e126:	mov    QWORD PTR [rsp+0x10],rdi
  41e12b:	je     41e13e <flatcc_json_parser_build_uint8_vector_base64@@Base+0xee>
  41e12d:	lea    rsi,[rax+0x2]
  41e131:	cmp    rdx,0x3
  41e135:	cmove  rax,rsi
  41e139:	mov    QWORD PTR [rsp+0x10],rax
  41e13e:	mov    rdi,QWORD PTR [rbx]
  41e141:	mov    ecx,0xffffffff
  41e146:	mov    edx,0x1
  41e14b:	mov    esi,0x1
  41e150:	call   4171c0 <flatcc_builder_start_vector@@Base>
  41e155:	test   eax,eax
  41e157:	jne    41e218 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1c8>
  41e15d:	mov    rsi,QWORD PTR [rsp+0x10]
  41e162:	mov    rdi,QWORD PTR [rbx]
  41e165:	call   416b20 <flatcc_builder_extend_vector@@Base>
  41e16a:	test   rax,rax
  41e16d:	je     41e218 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1c8>
  41e173:	cmp    BYTE PTR [rsp+0x8],0x1
  41e178:	mov    rcx,QWORD PTR [rsp+0x10]
  41e17d:	lea    rdx,[rip+0x128fc]        # 430a80 <flatcc_builder_padding_base@@Base+0xfa0>
  41e184:	lea    rdi,[rip+0x127f5]        # 430980 <flatcc_builder_padding_base@@Base+0xea0>
  41e18b:	mov    r9,QWORD PTR [rsp+0x18]
  41e190:	mov    r11,rbp
  41e193:	mov    r8,rax
  41e196:	cmovne rdi,rdx
  41e19a:	test   rcx,rcx
  41e19d:	mov    rdx,0xffffffffffffffff
  41e1a4:	cmovne rdx,rcx
  41e1a8:	mov    QWORD PTR [rsp+0x8],rdx
  41e1ad:	test   r9,r9
  41e1b0:	je     41e360 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x310>
  41e1b6:	mov    r10,r9
  41e1b9:	xor    edx,edx
  41e1bb:	movzx  ecx,BYTE PTR [r11+rdx*1]
  41e1c0:	movzx  esi,BYTE PTR [rdi+rcx*1]
  41e1c4:	cmp    sil,0x3f
  41e1c8:	mov    BYTE PTR [rsp+rdx*1+0x24],sil
  41e1cd:	jbe    41e24c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fc>
  41e1cf:	cmp    sil,0x41
  41e1d3:	je     41e240 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
  41e1d5:	cmp    sil,0x42
  41e1d9:	mov    rcx,rdx
  41e1dc:	je     41e270 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
  41e1e2:	sub    r10,rcx
  41e1e5:	cmp    rdx,0x2
  41e1e9:	je     41e330 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e0>
  41e1ef:	cmp    rdx,0x3
  41e1f3:	je     41e2c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x270>
  41e1f9:	test   rdx,rdx
  41e1fc:	je     41e310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c0>
  41e202:	mov    r15,QWORD PTR [rsp+0x18]
  41e207:	sub    r15,r9
  41e20a:	add    r15,rbp
  41e20d:	jmp    41e0be <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6e>
  41e212:	nop    WORD PTR [rax+rax*1+0x0]
  41e218:	mov    rax,QWORD PTR [rsp+0x28]
  41e21d:	xor    rax,QWORD PTR fs:0x28
  41e226:	mov    DWORD PTR [r13+0x0],0x0
  41e22e:	jne    41e448 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
  41e234:	mov    ecx,0x21
  41e239:	jmp    41e0e5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x95>
  41e23e:	xchg   ax,ax
  41e240:	add    r11,0x1
  41e244:	sub    r10,0x1
  41e248:	sub    rdx,0x1
  41e24c:	add    rdx,0x1
  41e250:	cmp    rdx,0x3
  41e254:	ja     41e3be <flatcc_json_parser_build_uint8_vector_base64@@Base+0x36e>
  41e25a:	cmp    rdx,r10
  41e25d:	jne    41e1bb <flatcc_json_parser_build_uint8_vector_base64@@Base+0x16b>
  41e263:	xor    r10d,r10d
  41e266:	jmp    41e1e5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x195>
  41e26b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e270:	lea    rcx,[rdx+0x1]
  41e274:	cmp    rcx,0x7
  41e278:	ja     41e1e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41e27e:	cmp    r10,rcx
  41e281:	ja     41e2a7 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x257>
  41e283:	jmp    41e1e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41e288:	nop    DWORD PTR [rax+rax*1+0x0]
  41e290:	add    rcx,0x1
  41e294:	cmp    r10,rcx
  41e297:	jbe    41e1e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41e29d:	cmp    rcx,0x7
  41e2a1:	ja     41e1e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41e2a7:	movzx  esi,BYTE PTR [r11+rcx*1]
  41e2ac:	movzx  esi,BYTE PTR [rdi+rsi*1]
  41e2b0:	sub    esi,0x41
  41e2b3:	cmp    sil,0x1
  41e2b7:	jbe    41e290 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x240>
  41e2b9:	jmp    41e1e2 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x192>
  41e2be:	xchg   ax,ax
  41e2c0:	movzx  edx,BYTE PTR [rsp+0x26]
  41e2c5:	mov    ecx,edx
  41e2c7:	shl    ecx,0x6
  41e2ca:	and    ecx,0xc0
  41e2d0:	jne    41e202 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b2>
  41e2d6:	cmp    QWORD PTR [rsp+0x8],0x1
  41e2dc:	je     41e202 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b2>
  41e2e2:	movzx  ecx,BYTE PTR [rsp+0x25]
  41e2e7:	movzx  esi,BYTE PTR [rsp+0x24]
  41e2ec:	shr    dl,0x2
  41e2ef:	add    r8,0x2
  41e2f3:	lea    edi,[rsi*4+0x0]
  41e2fa:	mov    esi,ecx
  41e2fc:	shl    ecx,0x4
  41e2ff:	shr    sil,0x4
  41e303:	or     edx,ecx
  41e305:	or     esi,edi
  41e307:	mov    BYTE PTR [r8-0x1],dl
  41e30b:	mov    BYTE PTR [r8-0x2],sil
  41e30f:	nop
  41e310:	mov    rdi,QWORD PTR [rsp+0x18]
  41e315:	mov    rdx,rdi
  41e318:	sub    rdx,r10
  41e31b:	cmp    rdi,rdx
  41e31e:	je     41e360 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x310>
  41e320:	lea    r15,[rbp+rdx*1+0x0]
  41e325:	jmp    41e0be <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6e>
  41e32a:	nop    WORD PTR [rax+rax*1+0x0]
  41e330:	movzx  edx,BYTE PTR [rsp+0x25]
  41e335:	mov    ecx,edx
  41e337:	shl    ecx,0x4
  41e33a:	and    ecx,0xf0
  41e340:	jne    41e202 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b2>
  41e346:	movzx  ecx,BYTE PTR [rsp+0x24]
  41e34b:	shr    dl,0x4
  41e34e:	add    r8,0x1
  41e352:	shl    ecx,0x2
  41e355:	or     edx,ecx
  41e357:	mov    BYTE PTR [r8-0x1],dl
  41e35b:	jmp    41e310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c0>
  41e35d:	nop    DWORD PTR [rax]
  41e360:	sub    r8,rax
  41e363:	cmp    QWORD PTR [rsp+0x10],r8
  41e368:	jbe    41e382 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x332>
  41e36a:	mov    rsi,QWORD PTR [rsp+0x10]
  41e36f:	mov    rdi,QWORD PTR [rbx]
  41e372:	sub    rsi,r8
  41e375:	call   417030 <flatcc_builder_truncate_vector@@Base>
  41e37a:	test   eax,eax
  41e37c:	jne    41e218 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1c8>
  41e382:	mov    rdi,QWORD PTR [rbx]
  41e385:	call   4180c0 <flatcc_builder_end_vector@@Base>
  41e38a:	test   eax,eax
  41e38c:	mov    DWORD PTR [r13+0x0],eax
  41e390:	je     41e218 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1c8>
  41e396:	cmp    BYTE PTR [r15],0x22
  41e39a:	je     41e425 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d5>
  41e3a0:	mov    rax,QWORD PTR [rsp+0x28]
  41e3a5:	xor    rax,QWORD PTR fs:0x28
  41e3ae:	jne    41e448 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
  41e3b4:	mov    ecx,0x14
  41e3b9:	jmp    41e0e5 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x95>
  41e3be:	cmp    QWORD PTR [rsp+0x8],0x2
  41e3c4:	jbe    41e202 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b2>
  41e3ca:	movzx  ecx,BYTE PTR [rsp+0x25]
  41e3cf:	movzx  edx,BYTE PTR [rsp+0x24]
  41e3d4:	add    r8,0x3
  41e3d8:	add    r11,0x4
  41e3dc:	lea    r9,[r10-0x4]
  41e3e0:	lea    esi,[rdx*4+0x0]
  41e3e7:	mov    edx,ecx
  41e3e9:	shl    ecx,0x4
  41e3ec:	shr    dl,0x4
  41e3ef:	or     edx,esi
  41e3f1:	mov    BYTE PTR [r8-0x3],dl
  41e3f5:	movzx  edx,BYTE PTR [rsp+0x26]
  41e3fa:	mov    esi,edx
  41e3fc:	shl    edx,0x6
  41e3ff:	or     dl,BYTE PTR [rsp+0x27]
  41e403:	shr    sil,0x2
  41e407:	or     ecx,esi
  41e409:	mov    BYTE PTR [r8-0x2],cl
  41e40d:	mov    BYTE PTR [r8-0x1],dl
  41e411:	sub    QWORD PTR [rsp+0x8],0x3
  41e417:	jne    41e1ad <flatcc_json_parser_build_uint8_vector_base64@@Base+0x15d>
  41e41d:	mov    r10,r9
  41e420:	jmp    41e310 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c0>
  41e425:	mov    rbx,QWORD PTR [rsp+0x28]
  41e42a:	xor    rbx,QWORD PTR fs:0x28
  41e433:	lea    rax,[r15+0x1]
  41e437:	jne    41e448 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
  41e439:	add    rsp,0x38
  41e43d:	pop    rbx
  41e43e:	pop    rbp
  41e43f:	pop    r12
  41e441:	pop    r13
  41e443:	pop    r14
  41e445:	pop    r15
  41e447:	ret    
  41e448:	call   405070 <__stack_chk_fail@plt>
  41e44d:	nop    DWORD PTR [rax]

000000000041e450 <flatcc_json_parser_build_string@@Base>:
  41e450:	push   r15
  41e452:	push   r14
  41e454:	push   r13
  41e456:	push   r12
  41e458:	push   rbp
  41e459:	push   rbx
  41e45a:	mov    rbp,rdx
  41e45d:	mov    rbx,rdi
  41e460:	sub    rsp,0x28
  41e464:	mov    rax,QWORD PTR fs:0x28
  41e46d:	mov    QWORD PTR [rsp+0x18],rax
  41e472:	xor    eax,eax
  41e474:	cmp    rsi,rdx
  41e477:	mov    QWORD PTR [rsp+0x8],rcx
  41e47c:	je     41e487 <flatcc_json_parser_build_string@@Base+0x37>
  41e47e:	cmp    BYTE PTR [rsi],0x22
  41e481:	lea    r12,[rsi+0x1]
  41e485:	je     41e49a <flatcc_json_parser_build_string@@Base+0x4a>
  41e487:	mov    ecx,0x10
  41e48c:	mov    rdx,rbp
  41e48f:	mov    rdi,rbx
  41e492:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41e497:	mov    r12,rax
  41e49a:	mov    rdx,rbp
  41e49d:	mov    rsi,r12
  41e4a0:	mov    rdi,rbx
  41e4a3:	call   41c440 <flatcc_json_parser_string_part@@Base>
  41e4a8:	cmp    rbp,rax
  41e4ab:	mov    r15,rax
  41e4ae:	je     41e4b9 <flatcc_json_parser_build_string@@Base+0x69>
  41e4b0:	cmp    BYTE PTR [rax],0x22
  41e4b3:	je     41e5c8 <flatcc_json_parser_build_string@@Base+0x178>
  41e4b9:	mov    rdi,QWORD PTR [rbx]
  41e4bc:	call   4172a0 <flatcc_builder_start_string@@Base>
  41e4c1:	test   eax,eax
  41e4c3:	je     41e500 <flatcc_json_parser_build_string@@Base+0xb0>
  41e4c5:	mov    rax,QWORD PTR [rsp+0x8]
  41e4ca:	mov    DWORD PTR [rax],0x0
  41e4d0:	mov    rcx,QWORD PTR [rsp+0x18]
  41e4d5:	xor    rcx,QWORD PTR fs:0x28
  41e4de:	mov    rax,r15
  41e4e1:	jne    41e610 <flatcc_json_parser_build_string@@Base+0x1c0>
  41e4e7:	add    rsp,0x28
  41e4eb:	pop    rbx
  41e4ec:	pop    rbp
  41e4ed:	pop    r12
  41e4ef:	pop    r13
  41e4f1:	pop    r14
  41e4f3:	pop    r15
  41e4f5:	ret    
  41e4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e500:	mov    rdi,QWORD PTR [rbx]
  41e503:	mov    rdx,r15
  41e506:	mov    rsi,r12
  41e509:	sub    rdx,r12
  41e50c:	call   416f20 <flatcc_builder_append_string@@Base>
  41e511:	test   rax,rax
  41e514:	je     41e4c5 <flatcc_json_parser_build_string@@Base+0x75>
  41e516:	cmp    rbp,r15
  41e519:	je     41e598 <flatcc_json_parser_build_string@@Base+0x148>
  41e51b:	cmp    BYTE PTR [r15],0x22
  41e51f:	je     41e5f0 <flatcc_json_parser_build_string@@Base+0x1a0>
  41e525:	lea    r13,[rsp+0x14]
  41e52a:	lea    r14,[r13+0x1]
  41e52e:	jmp    41e554 <flatcc_json_parser_build_string@@Base+0x104>
  41e530:	mov    rdi,QWORD PTR [rbx]
  41e533:	mov    rdx,rax
  41e536:	mov    rsi,r12
  41e539:	sub    rdx,r12
  41e53c:	call   416f20 <flatcc_builder_append_string@@Base>
  41e541:	test   rax,rax
  41e544:	je     41e4c5 <flatcc_json_parser_build_string@@Base+0x75>
  41e54a:	cmp    BYTE PTR [r15],0x22
  41e54e:	je     41e5f0 <flatcc_json_parser_build_string@@Base+0x1a0>
  41e554:	mov    rcx,r13
  41e557:	mov    rdx,rbp
  41e55a:	mov    rsi,r15
  41e55d:	mov    rdi,rbx
  41e560:	call   41cbd0 <flatcc_json_parser_string_escape@@Base>
  41e565:	movsx  rdx,BYTE PTR [rsp+0x14]
  41e56b:	mov    rdi,QWORD PTR [rbx]
  41e56e:	mov    rsi,r14
  41e571:	mov    r12,rax
  41e574:	call   416f20 <flatcc_builder_append_string@@Base>
  41e579:	test   rax,rax
  41e57c:	je     41e608 <flatcc_json_parser_build_string@@Base+0x1b8>
  41e582:	mov    rdx,rbp
  41e585:	mov    rsi,r12
  41e588:	mov    rdi,rbx
  41e58b:	call   41c440 <flatcc_json_parser_string_part@@Base>
  41e590:	cmp    rbp,rax
  41e593:	mov    r15,rax
  41e596:	jne    41e530 <flatcc_json_parser_build_string@@Base+0xe0>
  41e598:	mov    rdi,QWORD PTR [rbx]
  41e59b:	call   418b60 <flatcc_builder_end_string@@Base>
  41e5a0:	mov    rcx,QWORD PTR [rsp+0x8]
  41e5a5:	mov    DWORD PTR [rcx],eax
  41e5a7:	mov    rsi,r15
  41e5aa:	mov    ecx,0x14
  41e5af:	mov    rdx,rbp
  41e5b2:	mov    rdi,rbx
  41e5b5:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41e5ba:	mov    r15,rax
  41e5bd:	jmp    41e4d0 <flatcc_json_parser_build_string@@Base+0x80>
  41e5c2:	nop    WORD PTR [rax+rax*1+0x0]
  41e5c8:	mov    rdi,QWORD PTR [rbx]
  41e5cb:	mov    rdx,rax
  41e5ce:	mov    rsi,r12
  41e5d1:	sub    rdx,r12
  41e5d4:	call   4189d0 <flatcc_builder_create_string@@Base>
  41e5d9:	mov    rcx,QWORD PTR [rsp+0x8]
  41e5de:	mov    DWORD PTR [rcx],eax
  41e5e0:	cmp    BYTE PTR [r15],0x22
  41e5e4:	jne    41e5a7 <flatcc_json_parser_build_string@@Base+0x157>
  41e5e6:	add    r15,0x1
  41e5ea:	jmp    41e4d0 <flatcc_json_parser_build_string@@Base+0x80>
  41e5ef:	nop
  41e5f0:	mov    rdi,QWORD PTR [rbx]
  41e5f3:	call   418b60 <flatcc_builder_end_string@@Base>
  41e5f8:	mov    rcx,QWORD PTR [rsp+0x8]
  41e5fd:	mov    DWORD PTR [rcx],eax
  41e5ff:	jmp    41e5e0 <flatcc_json_parser_build_string@@Base+0x190>
  41e601:	nop    DWORD PTR [rax+0x0]
  41e608:	mov    r15,r12
  41e60b:	jmp    41e4c5 <flatcc_json_parser_build_string@@Base+0x75>
  41e610:	call   405070 <__stack_chk_fail@plt>
  41e615:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041e620 <flatcc_json_parser_prepare_unions@@Base>:
  41e620:	lea    rax,[rcx+rcx*4]
  41e624:	push   r14
  41e626:	push   r13
  41e628:	push   r12
  41e62a:	push   rbp
  41e62b:	mov    rbp,rdi
  41e62e:	push   rbx
  41e62f:	mov    rdi,QWORD PTR [rdi]
  41e632:	mov    r12,rsi
  41e635:	lea    rsi,[rax*8+0x10]
  41e63d:	mov    r13,r8
  41e640:	mov    r14,rdx
  41e643:	mov    rbx,rcx
  41e646:	call   416070 <flatcc_builder_enter_user_frame@@Base>
  41e64b:	test   rax,rax
  41e64e:	mov    QWORD PTR [r13+0x0],rax
  41e652:	je     41e670 <flatcc_json_parser_prepare_unions@@Base+0x50>
  41e654:	mov    rdi,QWORD PTR [rbp+0x0]
  41e658:	mov    rsi,rax
  41e65b:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41e660:	mov    QWORD PTR [rax],rbx
  41e663:	mov    rax,r12
  41e666:	pop    rbx
  41e667:	pop    rbp
  41e668:	pop    r12
  41e66a:	pop    r13
  41e66c:	pop    r14
  41e66e:	ret    
  41e66f:	nop
  41e670:	pop    rbx
  41e671:	mov    rdx,r14
  41e674:	mov    rsi,r12
  41e677:	mov    rdi,rbp
  41e67a:	pop    rbp
  41e67b:	pop    r12
  41e67d:	pop    r13
  41e67f:	pop    r14
  41e681:	mov    ecx,0x21
  41e686:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41e68b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041e690 <flatcc_json_parser_finalize_unions@@Base>:
  41e690:	push   r13
  41e692:	push   r12
  41e694:	mov    r12,rsi
  41e697:	push   rbp
  41e698:	push   rbx
  41e699:	mov    rbx,rdi
  41e69c:	mov    rsi,rcx
  41e69f:	mov    r13,rdx
  41e6a2:	mov    rbp,rcx
  41e6a5:	sub    rsp,0x8
  41e6a9:	mov    rdi,QWORD PTR [rdi]
  41e6ac:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41e6b1:	cmp    QWORD PTR [rax+0x8],0x0
  41e6b6:	je     41e6ce <flatcc_json_parser_finalize_unions@@Base+0x3e>
  41e6b8:	mov    rsi,r12
  41e6bb:	mov    ecx,0x1b
  41e6c0:	mov    rdx,r13
  41e6c3:	mov    rdi,rbx
  41e6c6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41e6cb:	mov    r12,rax
  41e6ce:	mov    rdi,QWORD PTR [rbx]
  41e6d1:	mov    rsi,rbp
  41e6d4:	call   416160 <flatcc_builder_exit_user_frame_at@@Base>
  41e6d9:	add    rsp,0x8
  41e6dd:	mov    rax,r12
  41e6e0:	pop    rbx
  41e6e1:	pop    rbp
  41e6e2:	pop    r12
  41e6e4:	pop    r13
  41e6e6:	ret    
  41e6e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000041e6f0 <flatcc_json_parser_union@@Base>:
  41e6f0:	push   r15
  41e6f2:	push   r14
  41e6f4:	mov    r14d,r8d
  41e6f7:	push   r13
  41e6f9:	push   r12
  41e6fb:	mov    r13,rsi
  41e6fe:	push   rbp
  41e6ff:	push   rbx
  41e700:	mov    rbx,rdi
  41e703:	mov    rbp,rcx
  41e706:	mov    rsi,r9
  41e709:	mov    r12,rdx
  41e70c:	sub    rsp,0x18
  41e710:	mov    rdi,QWORD PTR [rdi]
  41e713:	mov    rax,QWORD PTR fs:0x28
  41e71c:	mov    QWORD PTR [rsp+0x8],rax
  41e721:	xor    eax,eax
  41e723:	mov    r15,QWORD PTR [rsp+0x50]
  41e728:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41e72d:	lea    rdx,[rbp+rbp*4+0x0]
  41e732:	mov    ecx,0x1c
  41e737:	lea    rdx,[rax+rdx*8]
  41e73b:	cmp    QWORD PTR [rdx+0x10],0x0
  41e740:	je     41e780 <flatcc_json_parser_union@@Base+0x90>
  41e742:	mov    rdx,r12
  41e745:	mov    rsi,r13
  41e748:	mov    rdi,rbx
  41e74b:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41e750:	mov    rbp,rax
  41e753:	mov    rdi,QWORD PTR [rsp+0x8]
  41e758:	xor    rdi,QWORD PTR fs:0x28
  41e761:	mov    rax,rbp
  41e764:	jne    41e81d <flatcc_json_parser_union@@Base+0x12d>
  41e76a:	add    rsp,0x18
  41e76e:	pop    rbx
  41e76f:	pop    rbp
  41e770:	pop    r12
  41e772:	pop    r13
  41e774:	pop    r14
  41e776:	pop    r15
  41e778:	ret    
  41e779:	nop    DWORD PTR [rax+0x0]
  41e780:	cmp    BYTE PTR [rdx+0x24],0x0
  41e784:	je     41e7f0 <flatcc_json_parser_union@@Base+0x100>
  41e786:	movzx  ecx,BYTE PTR [rdx+0x25]
  41e78a:	test   cl,cl
  41e78c:	mov    BYTE PTR [rsp],cl
  41e78f:	je     41e7e0 <flatcc_json_parser_union@@Base+0xf0>
  41e791:	sub    QWORD PTR [rax+0x8],0x1
  41e796:	lea    r8,[rsp+0x4]
  41e79b:	mov    rdx,r12
  41e79e:	mov    rsi,r13
  41e7a1:	mov    rdi,rbx
  41e7a4:	call   r15
  41e7a7:	cmp    r12,rax
  41e7aa:	mov    rbp,rax
  41e7ad:	je     41e753 <flatcc_json_parser_union@@Base+0x63>
  41e7af:	mov    rdx,QWORD PTR [rsp]
  41e7b3:	mov    rdi,QWORD PTR [rbx]
  41e7b6:	movzx  esi,r14w
  41e7ba:	call   418f90 <flatcc_builder_table_add_union@@Base>
  41e7bf:	test   eax,eax
  41e7c1:	je     41e753 <flatcc_json_parser_union@@Base+0x63>
  41e7c3:	mov    rsi,rbp
  41e7c6:	mov    ecx,0x1c
  41e7cb:	mov    rdx,r12
  41e7ce:	mov    rdi,rbx
  41e7d1:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41e7d6:	mov    rbp,rax
  41e7d9:	jmp    41e753 <flatcc_json_parser_union@@Base+0x63>
  41e7de:	xchg   ax,ax
  41e7e0:	mov    ecx,0x19
  41e7e5:	jmp    41e742 <flatcc_json_parser_union@@Base+0x52>
  41e7ea:	nop    WORD PTR [rax+rax*1+0x0]
  41e7f0:	add    QWORD PTR [rax+0x8],0x1
  41e7f5:	mov    eax,DWORD PTR [rbx+0x18]
  41e7f8:	mov    rsi,r13
  41e7fb:	mov    rdi,rbx
  41e7fe:	mov    DWORD PTR [rdx+0x20],eax
  41e801:	mov    rax,QWORD PTR [rbx+0x8]
  41e805:	mov    QWORD PTR [rdx+0x10],r13
  41e809:	mov    QWORD PTR [rdx+0x18],rax
  41e80d:	mov    rdx,r12
  41e810:	call   41d330 <flatcc_json_parser_generic_json@@Base>
  41e815:	mov    rbp,rax
  41e818:	jmp    41e753 <flatcc_json_parser_union@@Base+0x63>
  41e81d:	call   405070 <__stack_chk_fail@plt>
  41e822:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e82d:	nop    DWORD PTR [rax]

000000000041e830 <flatcc_json_parser_union_type@@Base>:
  41e830:	push   r15
  41e832:	push   r14
  41e834:	push   r13
  41e836:	push   r12
  41e838:	mov    r13,rcx
  41e83b:	push   rbp
  41e83c:	push   rbx
  41e83d:	mov    rbx,rdi
  41e840:	mov    r12,rsi
  41e843:	mov    rsi,r9
  41e846:	mov    rbp,rdx
  41e849:	sub    rsp,0x48
  41e84d:	mov    rdi,QWORD PTR [rdi]
  41e850:	mov    rax,QWORD PTR [rsp+0x80]
  41e858:	mov    DWORD PTR [rsp+0xc],r8d
  41e85d:	mov    r14,QWORD PTR [rsp+0x88]
  41e865:	mov    QWORD PTR [rsp+0x10],rax
  41e86a:	mov    rax,QWORD PTR fs:0x28
  41e873:	mov    QWORD PTR [rsp+0x38],rax
  41e878:	xor    eax,eax
  41e87a:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41e87f:	mov    r15,rax
  41e882:	lea    rax,[r13+r13*4+0x0]
  41e887:	lea    r9,[r15+rax*8+0x10]
  41e88c:	cmp    BYTE PTR [r9+0x14],0x0
  41e891:	jne    41e9b0 <flatcc_json_parser_union_type@@Base+0x180>
  41e897:	cmp    r12,rbp
  41e89a:	mov    BYTE PTR [r9+0x14],0x1
  41e89f:	mov    DWORD PTR [rsp+0x2c],0x0
  41e8a7:	mov    QWORD PTR [rsp+0x30],0x0
  41e8b0:	mov    BYTE PTR [r9+0x15],0x0
  41e8b5:	je     41e9d0 <flatcc_json_parser_union_type@@Base+0x1a0>
  41e8bb:	lea    rcx,[rsp+0x2c]
  41e8c0:	lea    r8,[rsp+0x30]
  41e8c5:	mov    rdx,rbp
  41e8c8:	mov    rsi,r12
  41e8cb:	mov    rdi,rbx
  41e8ce:	mov    QWORD PTR [rsp+0x18],r9
  41e8d3:	call   41df90 <flatcc_json_parser_integer@@Base>
  41e8d8:	cmp    r12,rax
  41e8db:	mov    r13,rax
  41e8de:	mov    r9,QWORD PTR [rsp+0x18]
  41e8e3:	je     41e9d3 <flatcc_json_parser_union_type@@Base+0x1a3>
  41e8e9:	mov    eax,DWORD PTR [rsp+0x2c]
  41e8ed:	mov    ecx,0x8
  41e8f2:	test   eax,eax
  41e8f4:	jne    41ea0a <flatcc_json_parser_union_type@@Base+0x1da>
  41e8fa:	mov    rax,QWORD PTR [rsp+0x30]
  41e8ff:	cmp    rax,0xff
  41e905:	ja     41ea00 <flatcc_json_parser_union_type@@Base+0x1d0>
  41e90b:	mov    BYTE PTR [r9+0x15],al
  41e90f:	mov    rsi,QWORD PTR [r9]
  41e912:	test   rsi,rsi
  41e915:	je     41ea60 <flatcc_json_parser_union_type@@Base+0x230>
  41e91b:	mov    rax,QWORD PTR [r15+0x8]
  41e91f:	test   rax,rax
  41e922:	je     41ea78 <flatcc_json_parser_union_type@@Base+0x248>
  41e928:	sub    rax,0x1
  41e92c:	mov    r12,QWORD PTR [rbx+0x8]
  41e930:	lea    r8,[rsp+0x34]
  41e935:	mov    QWORD PTR [r15+0x8],rax
  41e939:	mov    eax,DWORD PTR [r9+0x10]
  41e93d:	mov    rdx,rbp
  41e940:	mov    r15d,DWORD PTR [rbx+0x18]
  41e944:	mov    rdi,rbx
  41e947:	mov    DWORD PTR [rbx+0x18],eax
  41e94a:	mov    rax,QWORD PTR [r9+0x8]
  41e94e:	mov    QWORD PTR [rbx+0x8],rax
  41e952:	movzx  ecx,BYTE PTR [r9+0x15]
  41e957:	mov    BYTE PTR [rsp+0x30],cl
  41e95b:	call   r14
  41e95e:	cmp    rbp,rax
  41e961:	je     41ea30 <flatcc_json_parser_union_type@@Base+0x200>
  41e967:	movzx  esi,WORD PTR [rsp+0xc]
  41e96c:	mov    rdx,QWORD PTR [rsp+0x30]
  41e971:	mov    rdi,QWORD PTR [rbx]
  41e974:	call   418f90 <flatcc_builder_table_add_union@@Base>
  41e979:	test   eax,eax
  41e97b:	jne    41ea40 <flatcc_json_parser_union_type@@Base+0x210>
  41e981:	mov    DWORD PTR [rbx+0x18],r15d
  41e985:	mov    QWORD PTR [rbx+0x8],r12
  41e989:	mov    rdx,QWORD PTR [rsp+0x38]
  41e98e:	xor    rdx,QWORD PTR fs:0x28
  41e997:	mov    rax,r13
  41e99a:	jne    41ea73 <flatcc_json_parser_union_type@@Base+0x243>
  41e9a0:	add    rsp,0x48
  41e9a4:	pop    rbx
  41e9a5:	pop    rbp
  41e9a6:	pop    r12
  41e9a8:	pop    r13
  41e9aa:	pop    r14
  41e9ac:	pop    r15
  41e9ae:	ret    
  41e9af:	nop
  41e9b0:	mov    ecx,0x1c
  41e9b5:	mov    rdx,rbp
  41e9b8:	mov    rsi,r12
  41e9bb:	mov    rdi,rbx
  41e9be:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41e9c3:	mov    r13,rax
  41e9c6:	jmp    41e989 <flatcc_json_parser_union_type@@Base+0x159>
  41e9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9d0:	mov    r13,rbp
  41e9d3:	mov    rcx,QWORD PTR [rsp+0x10]
  41e9d8:	lea    r8,[r9+0x15]
  41e9dc:	mov    rsi,r13
  41e9df:	mov    rdx,rbp
  41e9e2:	mov    rdi,rbx
  41e9e5:	mov    QWORD PTR [rsp+0x18],r9
  41e9ea:	call   41c590 <flatcc_json_parser_space_ext@@Base+0xe0>
  41e9ef:	mov    r9,QWORD PTR [rsp+0x18]
  41e9f4:	mov    r13,rax
  41e9f7:	jmp    41e90f <flatcc_json_parser_union_type@@Base+0xdf>
  41e9fc:	nop    DWORD PTR [rax+0x0]
  41ea00:	mov    QWORD PTR [rsp+0x18],r9
  41ea05:	mov    ecx,0x7
  41ea0a:	mov    rsi,r13
  41ea0d:	mov    rdx,rbp
  41ea10:	mov    rdi,rbx
  41ea13:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41ea18:	cmp    r12,rax
  41ea1b:	mov    r13,rax
  41ea1e:	mov    r9,QWORD PTR [rsp+0x18]
  41ea23:	jne    41e90f <flatcc_json_parser_union_type@@Base+0xdf>
  41ea29:	jmp    41e9d3 <flatcc_json_parser_union_type@@Base+0x1a3>
  41ea2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ea30:	mov    r13,rbp
  41ea33:	jmp    41e989 <flatcc_json_parser_union_type@@Base+0x159>
  41ea38:	nop    DWORD PTR [rax+rax*1+0x0]
  41ea40:	mov    rsi,r13
  41ea43:	mov    ecx,0x1c
  41ea48:	mov    rdx,rbp
  41ea4b:	mov    rdi,rbx
  41ea4e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41ea53:	mov    r13,rax
  41ea56:	jmp    41e989 <flatcc_json_parser_union_type@@Base+0x159>
  41ea5b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ea60:	xor    eax,eax
  41ea62:	cmp    BYTE PTR [r9+0x15],0x0
  41ea67:	setne  al
  41ea6a:	add    QWORD PTR [r15+0x8],rax
  41ea6e:	jmp    41e989 <flatcc_json_parser_union_type@@Base+0x159>
  41ea73:	call   405070 <__stack_chk_fail@plt>
  41ea78:	lea    rcx,[rip+0x11ed1]        # 430950 <flatcc_builder_padding_base@@Base+0xe70>
  41ea7f:	lea    rsi,[rip+0x1190a]        # 430390 <flatcc_builder_padding_base@@Base+0x8b0>
  41ea86:	lea    rdi,[rip+0x11bc5]        # 430652 <flatcc_builder_padding_base@@Base+0xb72>
  41ea8d:	mov    edx,0x3c5
  41ea92:	call   405080 <__assert_fail@plt>
  41ea97:	nop    WORD PTR [rax+rax*1+0x0]

000000000041eaa0 <flatcc_json_parser_union_vector@@Base>:
  41eaa0:	push   r15
  41eaa2:	push   r14
  41eaa4:	mov    r15d,r8d
  41eaa7:	push   r13
  41eaa9:	push   r12
  41eaab:	mov    r12,rsi
  41eaae:	push   rbp
  41eaaf:	push   rbx
  41eab0:	mov    rbx,rdi
  41eab3:	mov    rbp,rcx
  41eab6:	mov    rsi,r9
  41eab9:	mov    r13,rdx
  41eabc:	sub    rsp,0x8
  41eac0:	mov    rdi,QWORD PTR [rdi]
  41eac3:	mov    r14,QWORD PTR [rsp+0x40]
  41eac8:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41eacd:	lea    rdx,[rbp+rbp*4+0x0]
  41ead2:	lea    rcx,[rax+rdx*8+0x10]
  41ead7:	cmp    QWORD PTR [rcx],0x0
  41eadb:	je     41eb00 <flatcc_json_parser_union_vector@@Base+0x60>
  41eadd:	add    rsp,0x8
  41eae1:	mov    rdx,r13
  41eae4:	mov    rsi,r12
  41eae7:	mov    rdi,rbx
  41eaea:	mov    ecx,0x1c
  41eaef:	pop    rbx
  41eaf0:	pop    rbp
  41eaf1:	pop    r12
  41eaf3:	pop    r13
  41eaf5:	pop    r14
  41eaf7:	pop    r15
  41eaf9:	jmp    41c420 <flatcc_json_parser_set_error@@Base>
  41eafe:	xchg   ax,ax
  41eb00:	cmp    BYTE PTR [rcx+0x14],0x0
  41eb04:	je     41eb40 <flatcc_json_parser_union_vector@@Base+0xa0>
  41eb06:	sub    QWORD PTR [rax+0x8],0x1
  41eb0b:	mov    r8d,DWORD PTR [rcx+0x18]
  41eb0f:	movzx  r9d,r15w
  41eb13:	mov    rcx,QWORD PTR [rcx+0x20]
  41eb17:	mov    QWORD PTR [rsp+0x40],r14
  41eb1c:	add    rsp,0x8
  41eb20:	mov    rdx,r13
  41eb23:	mov    rsi,r12
  41eb26:	mov    rdi,rbx
  41eb29:	pop    rbx
  41eb2a:	pop    rbp
  41eb2b:	pop    r12
  41eb2d:	pop    r13
  41eb2f:	pop    r14
  41eb31:	pop    r15
  41eb33:	jmp    41c790 <flatcc_json_parser_space_ext@@Base+0x2e0>
  41eb38:	nop    DWORD PTR [rax+rax*1+0x0]
  41eb40:	add    QWORD PTR [rax+0x8],0x1
  41eb45:	mov    eax,DWORD PTR [rbx+0x18]
  41eb48:	mov    rdx,r13
  41eb4b:	mov    rsi,r12
  41eb4e:	mov    rdi,rbx
  41eb51:	mov    DWORD PTR [rcx+0x10],eax
  41eb54:	mov    rax,QWORD PTR [rbx+0x8]
  41eb58:	mov    QWORD PTR [rcx],r12
  41eb5b:	mov    QWORD PTR [rcx+0x8],rax
  41eb5f:	add    rsp,0x8
  41eb63:	pop    rbx
  41eb64:	pop    rbp
  41eb65:	pop    r12
  41eb67:	pop    r13
  41eb69:	pop    r14
  41eb6b:	pop    r15
  41eb6d:	jmp    41d330 <flatcc_json_parser_generic_json@@Base>
  41eb72:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41eb7d:	nop    DWORD PTR [rax]

000000000041eb80 <flatcc_json_parser_union_type_vector@@Base>:
  41eb80:	push   r15
  41eb82:	push   r14
  41eb84:	push   r13
  41eb86:	push   r12
  41eb88:	mov    r12,rdi
  41eb8b:	push   rbp
  41eb8c:	push   rbx
  41eb8d:	mov    r13,rcx
  41eb90:	mov    rbp,rsi
  41eb93:	mov    rsi,r9
  41eb96:	mov    rbx,rdx
  41eb99:	sub    rsp,0x78
  41eb9d:	mov    rdi,QWORD PTR [rdi]
  41eba0:	mov    rax,QWORD PTR [rsp+0xb0]
  41eba8:	mov    DWORD PTR [rsp+0x2c],r8d
  41ebad:	mov    QWORD PTR [rsp+0x30],r9
  41ebb2:	mov    r14,QWORD PTR [rsp+0xc0]
  41ebba:	mov    QWORD PTR [rsp+0x20],rax
  41ebbf:	mov    rax,QWORD PTR [rsp+0xb8]
  41ebc7:	mov    QWORD PTR [rsp+0x38],rax
  41ebcc:	mov    rax,QWORD PTR fs:0x28
  41ebd5:	mov    QWORD PTR [rsp+0x68],rax
  41ebda:	xor    eax,eax
  41ebdc:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41ebe1:	lea    rdx,[r13+r13*4+0x0]
  41ebe6:	lea    rcx,[rdx*8+0x0]
  41ebee:	lea    rax,[rax+rcx*1+0x10]
  41ebf3:	mov    QWORD PTR [rsp+0x40],rcx
  41ebf8:	cmp    BYTE PTR [rax+0x14],0x0
  41ebfc:	mov    QWORD PTR [rsp+0x18],rax
  41ec01:	jne    41ed00 <flatcc_json_parser_union_type_vector@@Base+0x180>
  41ec07:	mov    rax,QWORD PTR [rsp+0x18]
  41ec0c:	mov    ecx,0xffffffff
  41ec11:	mov    edx,0x1
  41ec16:	mov    esi,0x1
  41ec1b:	mov    BYTE PTR [rax+0x14],0x1
  41ec1f:	mov    rdi,QWORD PTR [r12]
  41ec23:	call   4171c0 <flatcc_builder_start_vector@@Base>
  41ec28:	test   eax,eax
  41ec2a:	jne    41ecc0 <flatcc_json_parser_union_type_vector@@Base+0x140>
  41ec30:	cmp    rbp,rbx
  41ec33:	je     41ec3f <flatcc_json_parser_union_type_vector@@Base+0xbf>
  41ec35:	cmp    BYTE PTR [rbp+0x0],0x5b
  41ec39:	je     41ed18 <flatcc_json_parser_union_type_vector@@Base+0x198>
  41ec3f:	mov    rsi,rbp
  41ec42:	mov    ecx,0x16
  41ec47:	mov    rdx,rbx
  41ec4a:	mov    rdi,r12
  41ec4d:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41ec52:	mov    rbp,rax
  41ec55:	nop    DWORD PTR [rax]
  41ec58:	mov    rdi,QWORD PTR [r12]
  41ec5c:	call   4181a0 <flatcc_builder_vector_count@@Base>
  41ec61:	mov    r14,rax
  41ec64:	mov    rax,QWORD PTR [rsp+0x18]
  41ec69:	mov    rdi,QWORD PTR [r12]
  41ec6d:	mov    r15d,r14d
  41ec70:	mov    rsi,r15
  41ec73:	mov    DWORD PTR [rax+0x18],r14d
  41ec77:	call   416070 <flatcc_builder_enter_user_frame@@Base>
  41ec7c:	mov    rdi,QWORD PTR [r12]
  41ec80:	mov    rsi,rax
  41ec83:	mov    QWORD PTR [rsp+0x8],rax
  41ec88:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41ec8d:	mov    rdi,QWORD PTR [r12]
  41ec91:	mov    r13,rax
  41ec94:	call   4181b0 <flatcc_builder_vector_edit@@Base>
  41ec99:	mov    rdx,r15
  41ec9c:	mov    rsi,rax
  41ec9f:	mov    rdi,r13
  41eca2:	call   4050e0 <memcpy@plt>
  41eca7:	mov    rdi,QWORD PTR [r12]
  41ecab:	call   4180c0 <flatcc_builder_end_vector@@Base>
  41ecb0:	test   eax,eax
  41ecb2:	mov    r15d,eax
  41ecb5:	jne    41ee81 <flatcc_json_parser_union_type_vector@@Base+0x301>
  41ecbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41ecc0:	mov    ecx,0x21
  41ecc5:	mov    rdx,rbx
  41ecc8:	mov    rsi,rbp
  41eccb:	mov    rdi,r12
  41ecce:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41ecd3:	mov    rdx,QWORD PTR [rsp+0x68]
  41ecd8:	xor    rdx,QWORD PTR fs:0x28
  41ece1:	jne    41f126 <flatcc_json_parser_union_type_vector@@Base+0x5a6>
  41ece7:	add    rsp,0x78
  41eceb:	pop    rbx
  41ecec:	pop    rbp
  41eced:	pop    r12
  41ecef:	pop    r13
  41ecf1:	pop    r14
  41ecf3:	pop    r15
  41ecf5:	ret    
  41ecf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed00:	mov    ecx,0x1c
  41ed05:	mov    rdx,rbx
  41ed08:	mov    rsi,rbp
  41ed0b:	mov    rdi,r12
  41ed0e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41ed13:	jmp    41ecd3 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41ed15:	nop    DWORD PTR [rax]
  41ed18:	lea    rsi,[rbp+0x1]
  41ed1c:	mov    rax,rbx
  41ed1f:	sub    rax,rsi
  41ed22:	cmp    rax,0x1
  41ed26:	jle    41ed38 <flatcc_json_parser_union_type_vector@@Base+0x1b8>
  41ed28:	cmp    BYTE PTR [rbp+0x1],0x20
  41ed2c:	jg     41ef42 <flatcc_json_parser_union_type_vector@@Base+0x3c2>
  41ed32:	je     41f0f3 <flatcc_json_parser_union_type_vector@@Base+0x573>
  41ed38:	mov    rdx,rbx
  41ed3b:	mov    rdi,r12
  41ed3e:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41ed43:	mov    rbp,rax
  41ed46:	cmp    rbx,rbp
  41ed49:	je     41ed55 <flatcc_json_parser_union_type_vector@@Base+0x1d5>
  41ed4b:	cmp    BYTE PTR [rbp+0x0],0x5d
  41ed4f:	je     41f05d <flatcc_json_parser_union_type_vector@@Base+0x4dd>
  41ed55:	lea    rax,[rsp+0x5b]
  41ed5a:	mov    QWORD PTR [rsp+0x48],rax
  41ed5f:	lea    rax,[rsp+0x60]
  41ed64:	mov    QWORD PTR [rsp+0x8],rax
  41ed69:	lea    rax,[rsp+0x5c]
  41ed6e:	mov    QWORD PTR [rsp+0x10],rax
  41ed73:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed78:	mov    rdi,QWORD PTR [r12]
  41ed7c:	mov    esi,0x1
  41ed81:	call   416b20 <flatcc_builder_extend_vector@@Base>
  41ed86:	test   rax,rax
  41ed89:	mov    r13,rax
  41ed8c:	je     41ecc0 <flatcc_json_parser_union_type_vector@@Base+0x140>
  41ed92:	cmp    rbx,rbp
  41ed95:	mov    QWORD PTR [rsp+0x60],0x0
  41ed9e:	mov    DWORD PTR [rsp+0x5c],0x0
  41eda6:	mov    BYTE PTR [rsp+0x5b],0x0
  41edab:	je     41efc0 <flatcc_json_parser_union_type_vector@@Base+0x440>
  41edb1:	mov    r8,QWORD PTR [rsp+0x8]
  41edb6:	mov    rcx,QWORD PTR [rsp+0x10]
  41edbb:	mov    rdx,rbx
  41edbe:	mov    rsi,rbp
  41edc1:	mov    rdi,r12
  41edc4:	call   41df90 <flatcc_json_parser_integer@@Base>
  41edc9:	cmp    rax,rbp
  41edcc:	mov    r15,rax
  41edcf:	je     41efc0 <flatcc_json_parser_union_type_vector@@Base+0x440>
  41edd5:	mov    esi,DWORD PTR [rsp+0x5c]
  41edd9:	mov    ecx,0x8
  41edde:	test   esi,esi
  41ede0:	jne    41ef65 <flatcc_json_parser_union_type_vector@@Base+0x3e5>
  41ede6:	mov    rax,QWORD PTR [rsp+0x60]
  41edeb:	cmp    rax,0xff
  41edf1:	ja     41ef60 <flatcc_json_parser_union_type_vector@@Base+0x3e0>
  41edf7:	movzx  edi,al
  41edfa:	mov    BYTE PTR [rsp+0x5b],al
  41edfe:	call   r14
  41ee01:	test   eax,eax
  41ee03:	jne    41ef50 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
  41ee09:	test   BYTE PTR [r12+0x10],0x1
  41ee0f:	je     41f0b8 <flatcc_json_parser_union_type_vector@@Base+0x538>
  41ee15:	mov    BYTE PTR [rsp+0x5b],0x0
  41ee1a:	xor    eax,eax
  41ee1c:	mov    BYTE PTR [r13+0x0],al
  41ee20:	mov    rax,rbx
  41ee23:	sub    rax,r15
  41ee26:	cmp    rax,0x1
  41ee2a:	jle    41ee38 <flatcc_json_parser_union_type_vector@@Base+0x2b8>
  41ee2c:	cmp    BYTE PTR [r15],0x20
  41ee30:	jg     41ee49 <flatcc_json_parser_union_type_vector@@Base+0x2c9>
  41ee32:	je     41eff0 <flatcc_json_parser_union_type_vector@@Base+0x470>
  41ee38:	mov    rsi,r15
  41ee3b:	mov    rdx,rbx
  41ee3e:	mov    rdi,r12
  41ee41:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41ee46:	mov    r15,rax
  41ee49:	cmp    rbx,r15
  41ee4c:	je     41f010 <flatcc_json_parser_union_type_vector@@Base+0x490>
  41ee52:	movzx  eax,BYTE PTR [r15]
  41ee56:	cmp    al,0x2c
  41ee58:	je     41f020 <flatcc_json_parser_union_type_vector@@Base+0x4a0>
  41ee5e:	cmp    al,0x5d
  41ee60:	je     41ef88 <flatcc_json_parser_union_type_vector@@Base+0x408>
  41ee66:	mov    ecx,0x9
  41ee6b:	mov    rdx,rbx
  41ee6e:	mov    rsi,r15
  41ee71:	mov    rdi,r12
  41ee74:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41ee79:	mov    rbp,rax
  41ee7c:	jmp    41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41ee81:	movzx  r13d,WORD PTR [rsp+0x2c]
  41ee87:	mov    rdi,QWORD PTR [r12]
  41ee8b:	lea    esi,[r13-0x1]
  41ee8f:	call   418e50 <flatcc_builder_table_add_offset@@Base>
  41ee94:	test   rax,rax
  41ee97:	je     41ecc0 <flatcc_json_parser_union_type_vector@@Base+0x140>
  41ee9d:	mov    rsi,QWORD PTR [rsp+0x30]
  41eea2:	mov    rdi,QWORD PTR [r12]
  41eea6:	mov    DWORD PTR [rax],r15d
  41eea9:	call   4161b0 <flatcc_builder_get_user_frame_ptr@@Base>
  41eeae:	mov    rdx,QWORD PTR [rsp+0x40]
  41eeb3:	mov    rcx,QWORD PTR [rsp+0x8]
  41eeb8:	lea    rdx,[rax+rdx*1+0x10]
  41eebd:	mov    rsi,QWORD PTR [rdx]
  41eec0:	mov    QWORD PTR [rdx+0x20],rcx
  41eec4:	test   rsi,rsi
  41eec7:	je     41f119 <flatcc_json_parser_union_type_vector@@Base+0x599>
  41eecd:	mov    rcx,QWORD PTR [rax+0x8]
  41eed1:	test   rcx,rcx
  41eed4:	je     41f12b <flatcc_json_parser_union_type_vector@@Base+0x5ab>
  41eeda:	sub    rcx,0x1
  41eede:	sub    rsp,0x8
  41eee2:	mov    r15d,DWORD PTR [r12+0x18]
  41eee7:	mov    QWORD PTR [rax+0x8],rcx
  41eeeb:	mov    rax,QWORD PTR [r12+0x8]
  41eef0:	mov    r9d,r13d
  41eef3:	mov    r8d,r14d
  41eef6:	mov    rdi,r12
  41eef9:	mov    QWORD PTR [rsp+0x18],rax
  41eefe:	mov    eax,DWORD PTR [rdx+0x10]
  41ef01:	mov    DWORD PTR [r12+0x18],eax
  41ef06:	mov    rax,QWORD PTR [rdx+0x8]
  41ef0a:	mov    rdx,rbx
  41ef0d:	push   QWORD PTR [rsp+0x40]
  41ef11:	mov    rcx,QWORD PTR [rsp+0x18]
  41ef16:	mov    QWORD PTR [r12+0x8],rax
  41ef1b:	call   41c790 <flatcc_json_parser_space_ext@@Base+0x2e0>
  41ef20:	cmp    rbx,rax
  41ef23:	pop    rdx
  41ef24:	pop    rcx
  41ef25:	je     41ecd3 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41ef2b:	mov    rax,QWORD PTR [rsp+0x10]
  41ef30:	mov    DWORD PTR [r12+0x18],r15d
  41ef35:	mov    QWORD PTR [r12+0x8],rax
  41ef3a:	mov    rax,rbp
  41ef3d:	jmp    41ecd3 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41ef42:	mov    rbp,rsi
  41ef45:	jmp    41ed46 <flatcc_json_parser_union_type_vector@@Base+0x1c6>
  41ef4a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef50:	movzx  eax,BYTE PTR [rsp+0x5b]
  41ef55:	jmp    41ee1c <flatcc_json_parser_union_type_vector@@Base+0x29c>
  41ef5a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef60:	mov    ecx,0x7
  41ef65:	mov    rsi,r15
  41ef68:	mov    rdx,rbx
  41ef6b:	mov    rdi,r12
  41ef6e:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41ef73:	cmp    rax,rbp
  41ef76:	mov    r15,rax
  41ef79:	je     41efc0 <flatcc_json_parser_union_type_vector@@Base+0x440>
  41ef7b:	movzx  edi,BYTE PTR [rsp+0x5b]
  41ef80:	jmp    41edfe <flatcc_json_parser_union_type_vector@@Base+0x27e>
  41ef85:	nop    DWORD PTR [rax]
  41ef88:	lea    rbp,[r15+0x1]
  41ef8c:	mov    rax,rbx
  41ef8f:	sub    rax,rbp
  41ef92:	cmp    rax,0x1
  41ef96:	jle    41efa9 <flatcc_json_parser_union_type_vector@@Base+0x429>
  41ef98:	cmp    BYTE PTR [r15+0x1],0x20
  41ef9d:	jg     41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41efa3:	je     41f090 <flatcc_json_parser_union_type_vector@@Base+0x510>
  41efa9:	mov    rsi,rbp
  41efac:	mov    rdx,rbx
  41efaf:	mov    rdi,r12
  41efb2:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41efb7:	mov    rbp,rax
  41efba:	jmp    41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41efbf:	nop
  41efc0:	mov    r8,QWORD PTR [rsp+0x48]
  41efc5:	mov    rcx,QWORD PTR [rsp+0x20]
  41efca:	mov    rdx,rbx
  41efcd:	mov    rsi,rbp
  41efd0:	mov    rdi,r12
  41efd3:	call   41c590 <flatcc_json_parser_space_ext@@Base+0xe0>
  41efd8:	cmp    rax,rbp
  41efdb:	mov    r15,rax
  41efde:	je     41efe5 <flatcc_json_parser_union_type_vector@@Base+0x465>
  41efe0:	cmp    rbx,rax
  41efe3:	jne    41ef7b <flatcc_json_parser_union_type_vector@@Base+0x3fb>
  41efe5:	mov    rbp,r15
  41efe8:	jmp    41ecc0 <flatcc_json_parser_union_type_vector@@Base+0x140>
  41efed:	nop    DWORD PTR [rax]
  41eff0:	cmp    BYTE PTR [r15+0x1],0x20
  41eff5:	jle    41ee38 <flatcc_json_parser_union_type_vector@@Base+0x2b8>
  41effb:	add    r15,0x1
  41efff:	cmp    rbx,r15
  41f002:	jne    41ee52 <flatcc_json_parser_union_type_vector@@Base+0x2d2>
  41f008:	nop    DWORD PTR [rax+rax*1+0x0]
  41f010:	mov    rbp,rbx
  41f013:	jmp    41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41f018:	nop    DWORD PTR [rax+rax*1+0x0]
  41f020:	lea    rbp,[r15+0x1]
  41f024:	mov    rax,rbx
  41f027:	sub    rax,rbp
  41f02a:	cmp    rax,0x1
  41f02e:	jle    41f039 <flatcc_json_parser_union_type_vector@@Base+0x4b9>
  41f030:	cmp    BYTE PTR [r15+0x1],0x20
  41f035:	jg     41f04a <flatcc_json_parser_union_type_vector@@Base+0x4ca>
  41f037:	je     41f0a8 <flatcc_json_parser_union_type_vector@@Base+0x528>
  41f039:	mov    rsi,rbp
  41f03c:	mov    rdx,rbx
  41f03f:	mov    rdi,r12
  41f042:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41f047:	mov    rbp,rax
  41f04a:	cmp    rbx,rbp
  41f04d:	je     41f0d0 <flatcc_json_parser_union_type_vector@@Base+0x550>
  41f053:	cmp    BYTE PTR [rbp+0x0],0x5d
  41f057:	jne    41ed78 <flatcc_json_parser_union_type_vector@@Base+0x1f8>
  41f05d:	lea    rsi,[rbp+0x1]
  41f061:	mov    rax,rbx
  41f064:	sub    rax,rsi
  41f067:	cmp    rax,0x1
  41f06b:	jle    41f079 <flatcc_json_parser_union_type_vector@@Base+0x4f9>
  41f06d:	cmp    BYTE PTR [rbp+0x1],0x20
  41f071:	jg     41f0eb <flatcc_json_parser_union_type_vector@@Base+0x56b>
  41f073:	je     41f106 <flatcc_json_parser_union_type_vector@@Base+0x586>
  41f079:	mov    rdx,rbx
  41f07c:	mov    rdi,r12
  41f07f:	call   41c4b0 <flatcc_json_parser_space_ext@@Base>
  41f084:	mov    rbp,rax
  41f087:	jmp    41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41f08c:	nop    DWORD PTR [rax+0x0]
  41f090:	cmp    BYTE PTR [r15+0x2],0x20
  41f095:	jle    41efa9 <flatcc_json_parser_union_type_vector@@Base+0x429>
  41f09b:	lea    rbp,[r15+0x2]
  41f09f:	jmp    41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41f0a4:	nop    DWORD PTR [rax+0x0]
  41f0a8:	cmp    BYTE PTR [r15+0x2],0x20
  41f0ad:	jle    41f039 <flatcc_json_parser_union_type_vector@@Base+0x4b9>
  41f0af:	lea    rbp,[r15+0x2]
  41f0b3:	jmp    41f04a <flatcc_json_parser_union_type_vector@@Base+0x4ca>
  41f0b5:	nop    DWORD PTR [rax]
  41f0b8:	mov    ecx,0xf
  41f0bd:	mov    rdx,rbx
  41f0c0:	mov    rsi,r15
  41f0c3:	mov    rdi,r12
  41f0c6:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41f0cb:	jmp    41ecd3 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41f0d0:	mov    ecx,0x9
  41f0d5:	mov    rdx,rbx
  41f0d8:	mov    rsi,rbx
  41f0db:	mov    rdi,r12
  41f0de:	call   41c420 <flatcc_json_parser_set_error@@Base>
  41f0e3:	mov    rbp,rax
  41f0e6:	jmp    41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41f0eb:	mov    rbp,rsi
  41f0ee:	jmp    41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41f0f3:	cmp    BYTE PTR [rbp+0x2],0x20
  41f0f7:	jle    41ed38 <flatcc_json_parser_union_type_vector@@Base+0x1b8>
  41f0fd:	add    rbp,0x2
  41f101:	jmp    41ed46 <flatcc_json_parser_union_type_vector@@Base+0x1c6>
  41f106:	cmp    BYTE PTR [rbp+0x2],0x20
  41f10a:	jle    41f079 <flatcc_json_parser_union_type_vector@@Base+0x4f9>
  41f110:	add    rbp,0x2
  41f114:	jmp    41ec58 <flatcc_json_parser_union_type_vector@@Base+0xd8>
  41f119:	add    QWORD PTR [rax+0x8],0x1
  41f11e:	mov    rax,rbp
  41f121:	jmp    41ecd3 <flatcc_json_parser_union_type_vector@@Base+0x153>
  41f126:	call   405070 <__stack_chk_fail@plt>
  41f12b:	lea    rcx,[rip+0x117ee]        # 430920 <flatcc_builder_padding_base@@Base+0xe40>
  41f132:	lea    rsi,[rip+0x11257]        # 430390 <flatcc_builder_padding_base@@Base+0x8b0>
  41f139:	lea    rdi,[rip+0x11512]        # 430652 <flatcc_builder_padding_base@@Base+0xb72>
  41f140:	mov    edx,0x462
  41f145:	call   405080 <__assert_fail@plt>
  41f14a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f150 <flatcc_json_parser_struct_as_root@@Base>:
  41f150:	push   r14
  41f152:	push   r13
  41f154:	mov    r13,rdx
  41f157:	push   r12
  41f159:	push   rbp
  41f15a:	mov    edx,r8d
  41f15d:	push   rbx
  41f15e:	mov    rbx,rsi
  41f161:	mov    rbp,rdi
  41f164:	lea    r14,[r13+rcx*1+0x0]
  41f169:	sub    rsp,0x60
  41f16d:	mov    rax,QWORD PTR fs:0x28
  41f176:	mov    QWORD PTR [rsp+0x58],rax
  41f17b:	xor    eax,eax
  41f17d:	and    edx,0x4
  41f180:	mov    eax,0x2
  41f185:	mov    r12,QWORD PTR [rsp+0x90]
  41f18d:	cmovne edx,eax
  41f190:	lea    rax,[rsp+0x10]
  41f195:	test   rsi,rsi
  41f198:	mov    rsi,r9
  41f19b:	cmove  rbx,rax
  41f19f:	xor    eax,eax
  41f1a1:	lea    rdi,[rbx+0x8]
  41f1a5:	mov    rcx,rbx
  41f1a8:	mov    QWORD PTR [rbx+0x40],0x0
  41f1b0:	and    rdi,0xfffffffffffffff8
  41f1b4:	sub    rcx,rdi
  41f1b7:	add    ecx,0x48
  41f1ba:	shr    ecx,0x3
  41f1bd:	rep stos QWORD PTR es:[rdi],rax
  41f1c0:	mov    ecx,edx
  41f1c2:	mov    QWORD PTR [rbx],rbp
  41f1c5:	xor    edx,edx
  41f1c7:	mov    QWORD PTR [rbx+0x8],r13
  41f1cb:	mov    DWORD PTR [rbx+0x18],0x1
  41f1d2:	mov    rdi,rbp
  41f1d5:	mov    DWORD PTR [rbx+0x10],r8d
  41f1d9:	mov    QWORD PTR [rbx+0x28],r13
  41f1dd:	mov    QWORD PTR [rbx+0x30],r14
  41f1e1:	mov    QWORD PTR [rbx+0x38],r13
  41f1e5:	call   416770 <flatcc_builder_start_buffer@@Base>
  41f1ea:	test   eax,eax
  41f1ec:	jne    41f250 <flatcc_json_parser_struct_as_root@@Base+0x100>
  41f1ee:	lea    rcx,[rsp+0xc]
  41f1f3:	mov    rdx,r14
  41f1f6:	mov    rsi,r13
  41f1f9:	mov    rdi,rbx
  41f1fc:	call   r12
  41f1ff:	mov    r12d,DWORD PTR [rbx+0x20]
  41f203:	test   r12d,r12d
  41f206:	je     41f230 <flatcc_json_parser_struct_as_root@@Base+0xe0>
  41f208:	mov    rsi,QWORD PTR [rsp+0x58]
  41f20d:	xor    rsi,QWORD PTR fs:0x28
  41f216:	mov    eax,r12d
  41f219:	jne    41f258 <flatcc_json_parser_struct_as_root@@Base+0x108>
  41f21b:	add    rsp,0x60
  41f21f:	pop    rbx
  41f220:	pop    rbp
  41f221:	pop    r12
  41f223:	pop    r13
  41f225:	pop    r14
  41f227:	ret    
  41f228:	nop    DWORD PTR [rax+rax*1+0x0]
  41f230:	mov    esi,DWORD PTR [rsp+0xc]
  41f234:	mov    rdi,rbp
  41f237:	call   416850 <flatcc_builder_end_buffer@@Base>
  41f23c:	test   eax,eax
  41f23e:	je     41f250 <flatcc_json_parser_struct_as_root@@Base+0x100>
  41f240:	mov    QWORD PTR [rbx+0x40],r13
  41f244:	jmp    41f208 <flatcc_json_parser_struct_as_root@@Base+0xb8>
  41f246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f250:	mov    r12d,0xffffffff
  41f256:	jmp    41f208 <flatcc_json_parser_struct_as_root@@Base+0xb8>
  41f258:	call   405070 <__stack_chk_fail@plt>
  41f25d:	nop    DWORD PTR [rax]

000000000041f260 <flatcc_json_parser_table_as_root@@Base>:
  41f260:	jmp    41f150 <flatcc_json_parser_struct_as_root@@Base>
  41f265:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f26f:	nop
  41f270:	cmp    di,0x3e7
  41f275:	mov    edx,edi
  41f277:	jbe    41f2f0 <flatcc_json_parser_table_as_root@@Base+0x90>
  41f279:	cmp    di,0x270f
  41f27e:	ja     41f360 <flatcc_json_parser_table_as_root@@Base+0x100>
  41f284:	mov    edx,edi
  41f286:	lea    r9,[rip+0x12913]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f28d:	mov    BYTE PTR [rsi+0x4],0x0
  41f291:	shr    dx,0x2
  41f295:	lea    rcx,[rsi+0x2]
  41f299:	movzx  edx,dx
  41f29c:	imul   edx,edx,0x147b
  41f2a2:	shr    edx,0x11
  41f2a5:	lea    eax,[rdx*4+0x0]
  41f2ac:	add    eax,edx
  41f2ae:	lea    r8d,[rax*4+0x0]
  41f2b6:	add    eax,r8d
  41f2b9:	shl    eax,0x2
  41f2bc:	sub    edi,eax
  41f2be:	add    rdi,rdi
  41f2c1:	and    edi,0x1fffe
  41f2c7:	movzx  eax,WORD PTR [r9+rdi*1]
  41f2cc:	mov    WORD PTR [rsi+0x2],ax
  41f2d0:	mov    eax,0x4
  41f2d5:	add    rdx,rdx
  41f2d8:	and    edx,0x1fffe
  41f2de:	movzx  edx,WORD PTR [r9+rdx*1]
  41f2e3:	mov    WORD PTR [rcx-0x2],dx
  41f2e7:	ret    
  41f2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f2f0:	cmp    di,0x63
  41f2f4:	jbe    41f3b8 <flatcc_json_parser_table_as_root@@Base+0x158>
  41f2fa:	lea    r8,[rsi+0x3]
  41f2fe:	lea    r9,[rip+0x1289b]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f305:	mov    BYTE PTR [rsi+0x3],0x0
  41f309:	mov    eax,0x3
  41f30e:	mov    ecx,edx
  41f310:	lea    rdi,[r8-0x2]
  41f314:	shr    cx,0x2
  41f318:	movzx  ecx,cx
  41f31b:	imul   ecx,ecx,0x147b
  41f321:	shr    ecx,0x11
  41f324:	lea    esi,[rcx*4+0x0]
  41f32b:	add    esi,ecx
  41f32d:	lea    r10d,[rsi*4+0x0]
  41f335:	add    esi,r10d
  41f338:	shl    esi,0x2
  41f33b:	sub    edx,esi
  41f33d:	lea    rsi,[rdx+rdx*1]
  41f341:	mov    edx,ecx
  41f343:	and    esi,0x1fffe
  41f349:	movzx  ecx,WORD PTR [r9+rsi*1]
  41f34e:	mov    WORD PTR [r8-0x2],cx
  41f353:	add    edx,0x30
  41f356:	mov    BYTE PTR [rdi-0x1],dl
  41f359:	ret    
  41f35a:	nop    WORD PTR [rax+rax*1+0x0]
  41f360:	mov    edx,edi
  41f362:	lea    r9,[rip+0x12837]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f369:	mov    BYTE PTR [rsi+0x5],0x0
  41f36d:	shr    dx,0x2
  41f371:	lea    r8,[rsi+0x3]
  41f375:	movzx  edx,dx
  41f378:	imul   edx,edx,0x147b
  41f37e:	shr    edx,0x11
  41f381:	lea    eax,[rdx*4+0x0]
  41f388:	add    eax,edx
  41f38a:	lea    ecx,[rax*4+0x0]
  41f391:	add    eax,ecx
  41f393:	shl    eax,0x2
  41f396:	sub    edi,eax
  41f398:	add    rdi,rdi
  41f39b:	and    edi,0x1fffe
  41f3a1:	movzx  eax,WORD PTR [r9+rdi*1]
  41f3a6:	mov    WORD PTR [rsi+0x3],ax
  41f3aa:	mov    eax,0x5
  41f3af:	jmp    41f30e <flatcc_json_parser_table_as_root@@Base+0xae>
  41f3b4:	nop    DWORD PTR [rax+0x0]
  41f3b8:	cmp    di,0x9
  41f3bc:	jbe    41f3e0 <flatcc_json_parser_table_as_root@@Base+0x180>
  41f3be:	lea    rcx,[rsi+0x2]
  41f3c2:	mov    BYTE PTR [rsi+0x2],0x0
  41f3c6:	mov    eax,0x2
  41f3cb:	lea    r9,[rip+0x127ce]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f3d2:	jmp    41f2d5 <flatcc_json_parser_table_as_root@@Base+0x75>
  41f3d7:	nop    WORD PTR [rax+rax*1+0x0]
  41f3e0:	lea    rdi,[rsi+0x1]
  41f3e4:	mov    BYTE PTR [rsi+0x1],0x0
  41f3e8:	mov    eax,0x1
  41f3ed:	jmp    41f353 <flatcc_json_parser_table_as_root@@Base+0xf3>
  41f3f2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41f3fd:	nop    DWORD PTR [rax]
  41f400:	cmp    edi,0x270f
  41f406:	jbe    41f4d0 <flatcc_json_parser_table_as_root@@Base+0x270>
  41f40c:	cmp    edi,0x98967f
  41f412:	jbe    41f520 <flatcc_json_parser_table_as_root@@Base+0x2c0>
  41f418:	cmp    edi,0x3b9ac9ff
  41f41e:	jbe    41f5e0 <flatcc_json_parser_table_as_root@@Base+0x380>
  41f424:	mov    eax,edi
  41f426:	mov    edx,0x51eb851f
  41f42b:	lea    rcx,[rip+0x1276e]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f432:	mul    edx
  41f434:	mov    BYTE PTR [rsi+0xa],0x0
  41f438:	lea    r8,[rsi+0x8]
  41f43c:	shr    edx,0x5
  41f43f:	imul   eax,edx,0x64
  41f442:	sub    edi,eax
  41f444:	lea    eax,[rdi+rdi*1]
  41f447:	mov    edi,edx
  41f449:	movzx  eax,WORD PTR [rcx+rax*1]
  41f44d:	mov    WORD PTR [rsi+0x8],ax
  41f451:	mov    esi,0xa
  41f456:	mov    eax,edi
  41f458:	mov    edx,0x51eb851f
  41f45d:	lea    r9,[r8-0x2]
  41f461:	mul    edx
  41f463:	shr    edx,0x5
  41f466:	imul   eax,edx,0x64
  41f469:	sub    edi,eax
  41f46b:	lea    eax,[rdi+rdi*1]
  41f46e:	mov    edi,edx
  41f470:	movzx  eax,WORD PTR [rcx+rax*1]
  41f474:	mov    WORD PTR [r8-0x2],ax
  41f479:	mov    eax,edi
  41f47b:	mov    edx,0x51eb851f
  41f480:	lea    r8,[r9-0x2]
  41f484:	mul    edx
  41f486:	shr    edx,0x5
  41f489:	imul   eax,edx,0x64
  41f48c:	sub    edi,eax
  41f48e:	lea    eax,[rdi+rdi*1]
  41f491:	mov    edi,edx
  41f493:	movzx  eax,WORD PTR [rcx+rax*1]
  41f497:	mov    WORD PTR [r9-0x2],ax
  41f49c:	mov    eax,edi
  41f49e:	mov    edx,0x51eb851f
  41f4a3:	lea    r9,[r8-0x2]
  41f4a7:	mul    edx
  41f4a9:	shr    edx,0x5
  41f4ac:	imul   eax,edx,0x64
  41f4af:	sub    edi,eax
  41f4b1:	lea    eax,[rdi+rdi*1]
  41f4b4:	mov    edi,edx
  41f4b6:	movzx  eax,WORD PTR [rcx+rax*1]
  41f4ba:	mov    WORD PTR [r8-0x2],ax
  41f4bf:	add    edi,edi
  41f4c1:	movzx  eax,WORD PTR [rcx+rdi*1]
  41f4c5:	mov    WORD PTR [r9-0x2],ax
  41f4ca:	mov    eax,esi
  41f4cc:	ret    
  41f4cd:	nop    DWORD PTR [rax]
  41f4d0:	cmp    edi,0x63
  41f4d3:	jbe    41f500 <flatcc_json_parser_table_as_root@@Base+0x2a0>
  41f4d5:	cmp    edi,0x3e7
  41f4db:	jbe    41f5b8 <flatcc_json_parser_table_as_root@@Base+0x358>
  41f4e1:	lea    r8,[rsi+0x4]
  41f4e5:	mov    BYTE PTR [rsi+0x4],0x0
  41f4e9:	lea    rcx,[rip+0x126b0]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f4f0:	mov    esi,0x4
  41f4f5:	jmp    41f49c <flatcc_json_parser_table_as_root@@Base+0x23c>
  41f4f7:	nop    WORD PTR [rax+rax*1+0x0]
  41f500:	cmp    edi,0x9
  41f503:	jbe    41f5d0 <flatcc_json_parser_table_as_root@@Base+0x370>
  41f509:	lea    r9,[rsi+0x2]
  41f50d:	mov    BYTE PTR [rsi+0x2],0x0
  41f511:	lea    rcx,[rip+0x12688]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f518:	mov    esi,0x2
  41f51d:	jmp    41f4bf <flatcc_json_parser_table_as_root@@Base+0x25f>
  41f51f:	nop
  41f520:	cmp    edi,0xf423f
  41f526:	jbe    41f628 <flatcc_json_parser_table_as_root@@Base+0x3c8>
  41f52c:	lea    rcx,[rip+0x1266d]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f533:	lea    r8,[rsi+0x7]
  41f537:	mov    BYTE PTR [rsi+0x7],0x0
  41f53b:	mov    esi,0x7
  41f540:	mov    eax,edi
  41f542:	mov    edx,0x51eb851f
  41f547:	lea    r9,[r8-0x2]
  41f54b:	mul    edx
  41f54d:	shr    edx,0x5
  41f550:	imul   eax,edx,0x64
  41f553:	sub    edi,eax
  41f555:	lea    eax,[rdi+rdi*1]
  41f558:	mov    edi,edx
  41f55a:	movzx  eax,WORD PTR [rcx+rax*1]
  41f55e:	mov    WORD PTR [r8-0x2],ax
  41f563:	mov    eax,edi
  41f565:	mov    edx,0x51eb851f
  41f56a:	lea    r8,[r9-0x2]
  41f56e:	mul    edx
  41f570:	shr    edx,0x5
  41f573:	imul   eax,edx,0x64
  41f576:	sub    edi,eax
  41f578:	lea    eax,[rdi+rdi*1]
  41f57b:	mov    edi,edx
  41f57d:	movzx  eax,WORD PTR [rcx+rax*1]
  41f581:	mov    WORD PTR [r9-0x2],ax
  41f586:	mov    eax,edi
  41f588:	mov    edx,0x51eb851f
  41f58d:	lea    r9,[r8-0x2]
  41f591:	mul    edx
  41f593:	shr    edx,0x5
  41f596:	imul   eax,edx,0x64
  41f599:	sub    edi,eax
  41f59b:	lea    eax,[rdi+rdi*1]
  41f59e:	mov    edi,edx
  41f5a0:	movzx  eax,WORD PTR [rcx+rax*1]
  41f5a4:	mov    WORD PTR [r8-0x2],ax
  41f5a9:	add    edi,0x30
  41f5ac:	mov    eax,esi
  41f5ae:	mov    BYTE PTR [r9-0x1],dil
  41f5b2:	ret    
  41f5b3:	nop    DWORD PTR [rax+rax*1+0x0]
  41f5b8:	lea    r8,[rsi+0x3]
  41f5bc:	mov    BYTE PTR [rsi+0x3],0x0
  41f5c0:	lea    rcx,[rip+0x125d9]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f5c7:	mov    esi,0x3
  41f5cc:	jmp    41f586 <flatcc_json_parser_table_as_root@@Base+0x326>
  41f5ce:	xchg   ax,ax
  41f5d0:	lea    r9,[rsi+0x1]
  41f5d4:	mov    BYTE PTR [rsi+0x1],0x0
  41f5d8:	mov    esi,0x1
  41f5dd:	jmp    41f5a9 <flatcc_json_parser_table_as_root@@Base+0x349>
  41f5df:	nop
  41f5e0:	cmp    edi,0x5f5e0ff
  41f5e6:	jbe    41f670 <flatcc_json_parser_table_as_root@@Base+0x410>
  41f5ec:	mov    eax,edi
  41f5ee:	mov    edx,0x51eb851f
  41f5f3:	lea    rcx,[rip+0x125a6]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f5fa:	mul    edx
  41f5fc:	mov    BYTE PTR [rsi+0x9],0x0
  41f600:	lea    r8,[rsi+0x7]
  41f604:	shr    edx,0x5
  41f607:	imul   eax,edx,0x64
  41f60a:	sub    edi,eax
  41f60c:	lea    eax,[rdi+rdi*1]
  41f60f:	mov    edi,edx
  41f611:	movzx  eax,WORD PTR [rcx+rax*1]
  41f615:	mov    WORD PTR [rsi+0x7],ax
  41f619:	mov    esi,0x9
  41f61e:	jmp    41f540 <flatcc_json_parser_table_as_root@@Base+0x2e0>
  41f623:	nop    DWORD PTR [rax+rax*1+0x0]
  41f628:	cmp    edi,0x1869f
  41f62e:	jbe    41f650 <flatcc_json_parser_table_as_root@@Base+0x3f0>
  41f630:	lea    r9,[rsi+0x6]
  41f634:	mov    BYTE PTR [rsi+0x6],0x0
  41f638:	lea    rcx,[rip+0x12561]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f63f:	mov    esi,0x6
  41f644:	jmp    41f479 <flatcc_json_parser_table_as_root@@Base+0x219>
  41f649:	nop    DWORD PTR [rax+0x0]
  41f650:	lea    r9,[rsi+0x5]
  41f654:	mov    BYTE PTR [rsi+0x5],0x0
  41f658:	lea    rcx,[rip+0x12541]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f65f:	mov    esi,0x5
  41f664:	jmp    41f563 <flatcc_json_parser_table_as_root@@Base+0x303>
  41f669:	nop    DWORD PTR [rax+0x0]
  41f670:	lea    r8,[rsi+0x8]
  41f674:	mov    BYTE PTR [rsi+0x8],0x0
  41f678:	lea    rcx,[rip+0x12521]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f67f:	mov    esi,0x8
  41f684:	jmp    41f456 <flatcc_json_parser_table_as_root@@Base+0x1f6>
  41f689:	nop    DWORD PTR [rax+0x0]
  41f690:	cmp    rdi,0x3b9ac9ff
  41f697:	jbe    41f9f0 <flatcc_json_parser_table_as_root@@Base+0x790>
  41f69d:	movabs rax,0x9184e729fff
  41f6a7:	cmp    rdi,rax
  41f6aa:	jbe    41f870 <flatcc_json_parser_table_as_root@@Base+0x610>
  41f6b0:	movabs rax,0x2386f26fc0ffff
  41f6ba:	cmp    rdi,rax
  41f6bd:	jbe    41f9f8 <flatcc_json_parser_table_as_root@@Base+0x798>
  41f6c3:	movabs rax,0xde0b6b3a763ffff
  41f6cd:	cmp    rdi,rax
  41f6d0:	jbe    41fba0 <flatcc_json_parser_table_as_root@@Base+0x940>
  41f6d6:	movabs rax,0x8ac7230489e7ffff
  41f6e0:	cmp    rdi,rax
  41f6e3:	jbe    41fab0 <flatcc_json_parser_table_as_root@@Base+0x850>
  41f6e9:	mov    rdx,rdi
  41f6ec:	movabs rcx,0x28f5c28f5c28f5c3
  41f6f6:	lea    r8,[rip+0x124a3]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f6fd:	shr    rdx,0x2
  41f701:	mov    BYTE PTR [rsi+0x14],0x0
  41f705:	lea    r10,[rsi+0x12]
  41f709:	mov    rax,rdx
  41f70c:	mov    r9d,0x14
  41f712:	mul    rcx
  41f715:	shr    rdx,0x2
  41f719:	lea    rax,[rdx+rdx*4]
  41f71d:	lea    rax,[rax+rax*4]
  41f721:	shl    rax,0x2
  41f725:	sub    rdi,rax
  41f728:	mov    rax,rdi
  41f72b:	mov    rdi,rdx
  41f72e:	movzx  eax,WORD PTR [r8+rax*2]
  41f733:	mov    WORD PTR [rsi+0x12],ax
  41f737:	mov    rdx,rdi
  41f73a:	movabs rsi,0x28f5c28f5c28f5c3
  41f744:	lea    rcx,[r10-0x2]
  41f748:	shr    rdx,0x2
  41f74c:	mov    rax,rdx
  41f74f:	mul    rsi
  41f752:	shr    rdx,0x2
  41f756:	lea    rax,[rdx+rdx*4]
  41f75a:	lea    rax,[rax+rax*4]
  41f75e:	shl    rax,0x2
  41f762:	sub    rdi,rax
  41f765:	mov    rax,rdi
  41f768:	mov    rdi,rdx
  41f76b:	movzx  eax,WORD PTR [r8+rax*2]
  41f770:	mov    WORD PTR [r10-0x2],ax
  41f775:	mov    rdx,rdi
  41f778:	movabs rsi,0x28f5c28f5c28f5c3
  41f782:	lea    r10,[rcx-0x2]
  41f786:	shr    rdx,0x2
  41f78a:	mov    rax,rdx
  41f78d:	mul    rsi
  41f790:	shr    rdx,0x2
  41f794:	lea    rax,[rdx+rdx*4]
  41f798:	lea    rax,[rax+rax*4]
  41f79c:	shl    rax,0x2
  41f7a0:	sub    rdi,rax
  41f7a3:	mov    rax,rdi
  41f7a6:	mov    rdi,rdx
  41f7a9:	movzx  eax,WORD PTR [r8+rax*2]
  41f7ae:	mov    WORD PTR [rcx-0x2],ax
  41f7b2:	mov    rdx,rdi
  41f7b5:	movabs rsi,0x28f5c28f5c28f5c3
  41f7bf:	lea    rcx,[r10-0x2]
  41f7c3:	shr    rdx,0x2
  41f7c7:	mov    rax,rdx
  41f7ca:	mul    rsi
  41f7cd:	shr    rdx,0x2
  41f7d1:	lea    rax,[rdx+rdx*4]
  41f7d5:	lea    rax,[rax+rax*4]
  41f7d9:	shl    rax,0x2
  41f7dd:	sub    rdi,rax
  41f7e0:	mov    rax,rdi
  41f7e3:	mov    rdi,rdx
  41f7e6:	movzx  eax,WORD PTR [r8+rax*2]
  41f7eb:	mov    WORD PTR [r10-0x2],ax
  41f7f0:	mov    rdx,rdi
  41f7f3:	movabs rsi,0x28f5c28f5c28f5c3
  41f7fd:	lea    r10,[rcx-0x2]
  41f801:	shr    rdx,0x2
  41f805:	mov    rax,rdx
  41f808:	mul    rsi
  41f80b:	shr    rdx,0x2
  41f80f:	lea    rax,[rdx+rdx*4]
  41f813:	lea    rax,[rax+rax*4]
  41f817:	shl    rax,0x2
  41f81b:	sub    rdi,rax
  41f81e:	mov    rax,rdi
  41f821:	mov    rdi,rdx
  41f824:	movzx  eax,WORD PTR [r8+rax*2]
  41f829:	mov    WORD PTR [rcx-0x2],ax
  41f82d:	mov    rdx,rdi
  41f830:	movabs rcx,0x28f5c28f5c28f5c3
  41f83a:	lea    rsi,[r10-0x2]
  41f83e:	shr    rdx,0x2
  41f842:	mov    rax,rdx
  41f845:	mul    rcx
  41f848:	mov    rcx,rdx
  41f84b:	shr    rcx,0x2
  41f84f:	lea    rax,[rcx+rcx*4]
  41f853:	lea    rax,[rax+rax*4]
  41f857:	shl    rax,0x2
  41f85b:	sub    rdi,rax
  41f85e:	movzx  eax,WORD PTR [r8+rdi*2]
  41f863:	mov    WORD PTR [r10-0x2],ax
  41f868:	jmp    41f929 <flatcc_json_parser_table_as_root@@Base+0x6c9>
  41f86d:	nop    DWORD PTR [rax]
  41f870:	movabs rax,0x174876e7ff
  41f87a:	cmp    rdi,rax
  41f87d:	ja     41fa40 <flatcc_json_parser_table_as_root@@Base+0x7e0>
  41f883:	movabs rax,0x2540be3ff
  41f88d:	cmp    rdi,rax
  41f890:	jbe    41fbd0 <flatcc_json_parser_table_as_root@@Base+0x970>
  41f896:	lea    r10,[rsi+0xb]
  41f89a:	lea    r8,[rip+0x122ff]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41f8a1:	mov    BYTE PTR [rsi+0xb],0x0
  41f8a5:	mov    r9d,0xb
  41f8ab:	mov    rdx,rdi
  41f8ae:	movabs rcx,0x28f5c28f5c28f5c3
  41f8b8:	mov    rsi,rdi
  41f8bb:	shr    rdx,0x2
  41f8bf:	shr    rdi,0x3
  41f8c3:	mov    rax,rdx
  41f8c6:	mul    rcx
  41f8c9:	mov    rcx,rdx
  41f8cc:	movabs rdx,0xcccccccccccccccd
  41f8d6:	shr    rcx,0x2
  41f8da:	lea    rax,[rcx+rcx*4]
  41f8de:	lea    rax,[rax+rax*4]
  41f8e2:	shl    rax,0x2
  41f8e6:	sub    rsi,rax
  41f8e9:	movzx  eax,WORD PTR [r8+rsi*2]
  41f8ee:	lea    rsi,[r10-0x3]
  41f8f2:	mov    WORD PTR [r10-0x2],ax
  41f8f7:	mov    rax,rcx
  41f8fa:	mul    rdx
  41f8fd:	shr    rdx,0x3
  41f901:	lea    rax,[rdx+rdx*4]
  41f905:	movabs rdx,0x20c49ba5e353f7cf
  41f90f:	add    rax,rax
  41f912:	sub    rcx,rax
  41f915:	mov    rax,rdi
  41f918:	mul    rdx
  41f91b:	add    ecx,0x30
  41f91e:	mov    BYTE PTR [r10-0x3],cl
  41f922:	mov    rcx,rdx
  41f925:	shr    rcx,0x4
  41f929:	mov    rdx,rcx
  41f92c:	movabs rdi,0x28f5c28f5c28f5c3
  41f936:	mov    r11,rcx
  41f939:	shr    rdx,0x2
  41f93d:	mov    rax,rdx
  41f940:	mul    rdi
  41f943:	mov    r10,rdx
  41f946:	shr    rdx,0x4
  41f94a:	shr    r10,0x2
  41f94e:	lea    rax,[r10+r10*4]
  41f952:	lea    rax,[rax+rax*4]
  41f956:	shl    rax,0x2
  41f95a:	sub    r11,rax
  41f95d:	movzx  eax,WORD PTR [r8+r11*2]
  41f962:	mov    WORD PTR [rsi-0x2],ax
  41f966:	mov    rax,rdx
  41f969:	mul    rdi
  41f96c:	shr    rdx,0x2
  41f970:	lea    rax,[rdx+rdx*4]
  41f974:	movabs rdx,0x346dc5d63886594b
  41f97e:	lea    rax,[rax+rax*4]
  41f982:	shl    rax,0x2
  41f986:	sub    r10,rax
  41f989:	movzx  eax,WORD PTR [r8+r10*2]
  41f98e:	mov    WORD PTR [rsi-0x4],ax
  41f992:	mov    rax,rcx
  41f995:	mul    rdx
  41f998:	mov    r10,rdx
  41f99b:	shr    rdx,0xd
  41f99f:	mov    rax,rdx
  41f9a2:	shr    r10,0xb
  41f9a6:	mul    rdi
  41f9a9:	shr    rdx,0x2
  41f9ad:	lea    rax,[rdx+rdx*4]
  41f9b1:	movabs rdx,0x431bde82d7b634db
  41f9bb:	lea    rax,[rax+rax*4]
  41f9bf:	shl    rax,0x2
  41f9c3:	sub    r10,rax
  41f9c6:	movzx  eax,WORD PTR [r8+r10*2]
  41f9cb:	mov    WORD PTR [rsi-0x6],ax
  41f9cf:	mov    rax,rcx
  41f9d2:	mul    rdx
  41f9d5:	shr    rdx,0x12
  41f9d9:	movzx  eax,WORD PTR [r8+rdx*2]
  41f9de:	mov    WORD PTR [rsi-0x8],ax
  41f9e2:	mov    eax,r9d
  41f9e5:	ret    
  41f9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9f0:	jmp    41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  41f9f5:	nop    DWORD PTR [rax]
  41f9f8:	movabs rax,0x38d7ea4c67fff
  41fa02:	cmp    rdi,rax
  41fa05:	ja     41fb80 <flatcc_json_parser_table_as_root@@Base+0x920>
  41fa0b:	movabs rax,0x5af3107a3fff
  41fa15:	cmp    rdi,rax
  41fa18:	jbe    41fc30 <flatcc_json_parser_table_as_root@@Base+0x9d0>
  41fa1e:	lea    r10,[rsi+0xf]
  41fa22:	mov    BYTE PTR [rsi+0xf],0x0
  41fa26:	mov    r9d,0xf
  41fa2c:	lea    r8,[rip+0x1216d]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fa33:	jmp    41fb3b <flatcc_json_parser_table_as_root@@Base+0x8db>
  41fa38:	nop    DWORD PTR [rax+rax*1+0x0]
  41fa40:	movabs rax,0xe8d4a50fff
  41fa4a:	cmp    rdi,rax
  41fa4d:	jbe    41fbf0 <flatcc_json_parser_table_as_root@@Base+0x990>
  41fa53:	lea    rcx,[rsi+0xd]
  41fa57:	lea    r8,[rip+0x12142]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fa5e:	mov    BYTE PTR [rsi+0xd],0x0
  41fa62:	mov    r9d,0xd
  41fa68:	mov    rdx,rdi
  41fa6b:	movabs rsi,0x28f5c28f5c28f5c3
  41fa75:	lea    r10,[rcx-0x2]
  41fa79:	shr    rdx,0x2
  41fa7d:	mov    rax,rdx
  41fa80:	mul    rsi
  41fa83:	shr    rdx,0x2
  41fa87:	lea    rax,[rdx+rdx*4]
  41fa8b:	lea    rax,[rax+rax*4]
  41fa8f:	shl    rax,0x2
  41fa93:	sub    rdi,rax
  41fa96:	mov    rax,rdi
  41fa99:	mov    rdi,rdx
  41fa9c:	movzx  eax,WORD PTR [r8+rax*2]
  41faa1:	mov    WORD PTR [rcx-0x2],ax
  41faa5:	jmp    41f8ab <flatcc_json_parser_table_as_root@@Base+0x64b>
  41faaa:	nop    WORD PTR [rax+rax*1+0x0]
  41fab0:	mov    rdx,rdi
  41fab3:	movabs r8,0x28f5c28f5c28f5c3
  41fabd:	mov    BYTE PTR [rsi+0x13],0x0
  41fac1:	shr    rdx,0x2
  41fac5:	lea    rcx,[rsi+0x11]
  41fac9:	mov    r9d,0x13
  41facf:	mov    rax,rdx
  41fad2:	mul    r8
  41fad5:	lea    r8,[rip+0x120c4]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fadc:	shr    rdx,0x2
  41fae0:	lea    rax,[rdx+rdx*4]
  41fae4:	lea    rax,[rax+rax*4]
  41fae8:	shl    rax,0x2
  41faec:	sub    rdi,rax
  41faef:	mov    rax,rdi
  41faf2:	mov    rdi,rdx
  41faf5:	movzx  eax,WORD PTR [r8+rax*2]
  41fafa:	mov    WORD PTR [rsi+0x11],ax
  41fafe:	mov    rdx,rdi
  41fb01:	movabs rsi,0x28f5c28f5c28f5c3
  41fb0b:	lea    r10,[rcx-0x2]
  41fb0f:	shr    rdx,0x2
  41fb13:	mov    rax,rdx
  41fb16:	mul    rsi
  41fb19:	shr    rdx,0x2
  41fb1d:	lea    rax,[rdx+rdx*4]
  41fb21:	lea    rax,[rax+rax*4]
  41fb25:	shl    rax,0x2
  41fb29:	sub    rdi,rax
  41fb2c:	mov    rax,rdi
  41fb2f:	mov    rdi,rdx
  41fb32:	movzx  eax,WORD PTR [r8+rax*2]
  41fb37:	mov    WORD PTR [rcx-0x2],ax
  41fb3b:	mov    rdx,rdi
  41fb3e:	movabs rsi,0x28f5c28f5c28f5c3
  41fb48:	lea    rcx,[r10-0x2]
  41fb4c:	shr    rdx,0x2
  41fb50:	mov    rax,rdx
  41fb53:	mul    rsi
  41fb56:	shr    rdx,0x2
  41fb5a:	lea    rax,[rdx+rdx*4]
  41fb5e:	lea    rax,[rax+rax*4]
  41fb62:	shl    rax,0x2
  41fb66:	sub    rdi,rax
  41fb69:	mov    rax,rdi
  41fb6c:	mov    rdi,rdx
  41fb6f:	movzx  eax,WORD PTR [r8+rax*2]
  41fb74:	mov    WORD PTR [r10-0x2],ax
  41fb79:	jmp    41fa68 <flatcc_json_parser_table_as_root@@Base+0x808>
  41fb7e:	xchg   ax,ax
  41fb80:	lea    rcx,[rsi+0x10]
  41fb84:	mov    BYTE PTR [rsi+0x10],0x0
  41fb88:	mov    r9d,0x10
  41fb8e:	lea    r8,[rip+0x1200b]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fb95:	jmp    41f775 <flatcc_json_parser_table_as_root@@Base+0x515>
  41fb9a:	nop    WORD PTR [rax+rax*1+0x0]
  41fba0:	movabs rax,0x16345785d89ffff
  41fbaa:	cmp    rdi,rax
  41fbad:	jbe    41fc10 <flatcc_json_parser_table_as_root@@Base+0x9b0>
  41fbaf:	lea    r10,[rsi+0x12]
  41fbb3:	mov    BYTE PTR [rsi+0x12],0x0
  41fbb7:	mov    r9d,0x12
  41fbbd:	lea    r8,[rip+0x11fdc]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fbc4:	jmp    41f737 <flatcc_json_parser_table_as_root@@Base+0x4d7>
  41fbc9:	nop    DWORD PTR [rax+0x0]
  41fbd0:	lea    r10,[rsi+0xa]
  41fbd4:	mov    BYTE PTR [rsi+0xa],0x0
  41fbd8:	mov    r9d,0xa
  41fbde:	lea    r8,[rip+0x11fbb]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fbe5:	jmp    41f82d <flatcc_json_parser_table_as_root@@Base+0x5cd>
  41fbea:	nop    WORD PTR [rax+rax*1+0x0]
  41fbf0:	lea    rcx,[rsi+0xc]
  41fbf4:	mov    BYTE PTR [rsi+0xc],0x0
  41fbf8:	mov    r9d,0xc
  41fbfe:	lea    r8,[rip+0x11f9b]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fc05:	jmp    41f7f0 <flatcc_json_parser_table_as_root@@Base+0x590>
  41fc0a:	nop    WORD PTR [rax+rax*1+0x0]
  41fc10:	lea    rcx,[rsi+0x11]
  41fc14:	mov    BYTE PTR [rsi+0x11],0x0
  41fc18:	mov    r9d,0x11
  41fc1e:	lea    r8,[rip+0x11f7b]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fc25:	jmp    41fafe <flatcc_json_parser_table_as_root@@Base+0x89e>
  41fc2a:	nop    WORD PTR [rax+rax*1+0x0]
  41fc30:	lea    r10,[rsi+0xe]
  41fc34:	mov    BYTE PTR [rsi+0xe],0x0
  41fc38:	mov    r9d,0xe
  41fc3e:	lea    r8,[rip+0x11f5b]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  41fc45:	jmp    41f7b2 <flatcc_json_parser_table_as_root@@Base+0x552>
  41fc4a:	nop    WORD PTR [rax+rax*1+0x0]
  41fc50:	push   r12
  41fc52:	push   rbp
  41fc53:	mov    r11,rdx
  41fc56:	push   rbx
  41fc57:	mov    r12,QWORD PTR [rsp+0x20]
  41fc5c:	sub    r11,r12
  41fc5f:	cmp    r11,r8
  41fc62:	jbe    41fd30 <flatcc_json_parser_table_as_root@@Base+0xad0>
  41fc68:	mov    rax,rcx
  41fc6b:	sub    rax,r8
  41fc6e:	cmp    r9,rax
  41fc71:	ja     41fd38 <flatcc_json_parser_table_as_root@@Base+0xad8>
  41fc77:	mov    rax,rcx
  41fc7a:	movsxd r10,esi
  41fc7d:	sub    rax,r9
  41fc80:	lea    rbx,[rdi+r10*1-0x1]
  41fc85:	sub    rax,r8
  41fc88:	nop    DWORD PTR [rax+rax*1+0x0]
  41fc90:	lea    r10,[r9+r8*1]
  41fc94:	cmp    r11,r10
  41fc97:	ja     41fcf0 <flatcc_json_parser_table_as_root@@Base+0xa90>
  41fc99:	mov    rbx,r11
  41fc9c:	mov    rax,r10
  41fc9f:	sub    rbx,r8
  41fca2:	sub    rax,r11
  41fca5:	cmp    rbx,rax
  41fca8:	jb     41fd30 <flatcc_json_parser_table_as_root@@Base+0xad0>
  41fcae:	movsxd rsi,esi
  41fcb1:	sub    BYTE PTR [rdi+rsi*1-0x1],0x1
  41fcb6:	add    rdx,r12
  41fcb9:	cmp    rdx,r10
  41fcbc:	jbe    41fce0 <flatcc_json_parser_table_as_root@@Base+0xa80>
  41fcbe:	mov    rax,rcx
  41fcc1:	sub    rax,r10
  41fcc4:	cmp    r9,rax
  41fcc7:	ja     41fce0 <flatcc_json_parser_table_as_root@@Base+0xa80>
  41fcc9:	add    r9,r10
  41fccc:	cmp    rdx,r9
  41fccf:	ja     41fce9 <flatcc_json_parser_table_as_root@@Base+0xa89>
  41fcd1:	mov    rax,rdx
  41fcd4:	sub    r9,rdx
  41fcd7:	sub    rax,r10
  41fcda:	cmp    rax,r9
  41fcdd:	ja     41fce9 <flatcc_json_parser_table_as_root@@Base+0xa89>
  41fcdf:	nop
  41fce0:	lea    rax,[r12+r12*1]
  41fce4:	cmp    rax,r10
  41fce7:	jbe    41fd10 <flatcc_json_parser_table_as_root@@Base+0xab0>
  41fce9:	pop    rbx
  41fcea:	xor    eax,eax
  41fcec:	pop    rbp
  41fced:	pop    r12
  41fcef:	ret    
  41fcf0:	mov    rbp,rax
  41fcf3:	sub    BYTE PTR [rbx],0x1
  41fcf6:	mov    r8,r10
  41fcf9:	sub    rbp,r9
  41fcfc:	cmp    r9,rax
  41fcff:	ja     41fce0 <flatcc_json_parser_table_as_root@@Base+0xa80>
  41fd01:	mov    rax,rbp
  41fd04:	jmp    41fc90 <flatcc_json_parser_table_as_root@@Base+0xa30>
  41fd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd10:	shl    r12,0x2
  41fd14:	mov    eax,0x1
  41fd19:	sub    rcx,r12
  41fd1c:	cmp    rcx,r10
  41fd1f:	jb     41fce9 <flatcc_json_parser_table_as_root@@Base+0xa89>
  41fd21:	pop    rbx
  41fd22:	pop    rbp
  41fd23:	pop    r12
  41fd25:	ret    
  41fd26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd30:	mov    r10,r8
  41fd33:	jmp    41fcb6 <flatcc_json_parser_table_as_root@@Base+0xa56>
  41fd38:	mov    r10,r8
  41fd3b:	jmp    41fce0 <flatcc_json_parser_table_as_root@@Base+0xa80>
  41fd3d:	nop    DWORD PTR [rax]
  41fd40:	test   edi,edi
  41fd42:	mov    rcx,rsi
  41fd45:	js     41fdd8 <flatcc_json_parser_table_as_root@@Base+0xb78>
  41fd4b:	mov    r8,rcx
  41fd4e:	mov    r9d,0x66666667
  41fd54:	nop    DWORD PTR [rax+0x0]
  41fd58:	mov    eax,edi
  41fd5a:	add    r8,0x1
  41fd5e:	imul   r9d
  41fd61:	mov    eax,edi
  41fd63:	sar    eax,0x1f
  41fd66:	sar    edx,0x2
  41fd69:	sub    edx,eax
  41fd6b:	lea    eax,[rdx+rdx*4]
  41fd6e:	add    eax,eax
  41fd70:	sub    edi,eax
  41fd72:	add    edi,0x30
  41fd75:	test   edx,edx
  41fd77:	mov    BYTE PTR [r8-0x1],dil
  41fd7b:	mov    edi,edx
  41fd7d:	jne    41fd58 <flatcc_json_parser_table_as_root@@Base+0xaf8>
  41fd7f:	mov    rdi,r8
  41fd82:	mov    BYTE PTR [r8],0x0
  41fd86:	sub    rdi,rcx
  41fd89:	mov    eax,edi
  41fd8b:	shr    eax,0x1f
  41fd8e:	add    eax,edi
  41fd90:	sar    eax,1
  41fd92:	test   eax,eax
  41fd94:	jle    41fdca <flatcc_json_parser_table_as_root@@Base+0xb6a>
  41fd96:	mov    rdx,rcx
  41fd99:	lea    ecx,[rdi-0x1]
  41fd9c:	sub    eax,0x1
  41fd9f:	lea    r9,[rdx+rax*1+0x1]
  41fda4:	movsxd rcx,ecx
  41fda7:	add    rcx,rdx
  41fdaa:	nop    WORD PTR [rax+rax*1+0x0]
  41fdb0:	movzx  edi,BYTE PTR [rcx]
  41fdb3:	movzx  eax,BYTE PTR [rdx]
  41fdb6:	add    rdx,0x1
  41fdba:	sub    rcx,0x1
  41fdbe:	mov    BYTE PTR [rdx-0x1],dil
  41fdc2:	mov    BYTE PTR [rcx+0x1],al
  41fdc5:	cmp    r9,rdx
  41fdc8:	jne    41fdb0 <flatcc_json_parser_table_as_root@@Base+0xb50>
  41fdca:	mov    rax,r8
  41fdcd:	sub    rax,rsi
  41fdd0:	ret    
  41fdd1:	nop    DWORD PTR [rax+0x0]
  41fdd8:	lea    rcx,[rsi+0x1]
  41fddc:	mov    BYTE PTR [rsi],0x2d
  41fddf:	neg    edi
  41fde1:	jmp    41fd4b <flatcc_json_parser_table_as_root@@Base+0xaeb>
  41fde6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fdf0:	mov    rax,QWORD PTR [rdi+0x28]
  41fdf4:	cmp    rax,QWORD PTR [rdi+0x20]
  41fdf8:	jb     41fe12 <flatcc_json_parser_table_as_root@@Base+0xbb2>
  41fdfa:	mov    edx,DWORD PTR [rdi+0x3c]
  41fdfd:	test   edx,edx
  41fdff:	je     41fe20 <flatcc_json_parser_table_as_root@@Base+0xbc0>
  41fe01:	mov    rdx,rax
  41fe04:	mov    rax,QWORD PTR [rdi]
  41fe07:	sub    rdx,rax
  41fe0a:	add    QWORD PTR [rdi+0x18],rdx
  41fe0e:	mov    QWORD PTR [rdi+0x28],rax
  41fe12:	mov    BYTE PTR [rax],0x0
  41fe15:	ret    
  41fe16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe20:	mov    DWORD PTR [rdi+0x3c],0x3
  41fe27:	jmp    41fe01 <flatcc_json_parser_table_as_root@@Base+0xba1>
  41fe29:	nop    DWORD PTR [rax+0x0]
  41fe30:	push   r13
  41fe32:	push   r12
  41fe34:	mov    r13,rsi
  41fe37:	push   rbp
  41fe38:	push   rbx
  41fe39:	mov    rbp,rdi
  41fe3c:	mov    r12,rdx
  41fe3f:	sub    rsp,0x8
  41fe43:	mov    rdi,QWORD PTR [rdi+0x28]
  41fe47:	mov    rbx,QWORD PTR [rbp+0x20]
  41fe4b:	cmp    rdi,rbx
  41fe4e:	jae    41feb0 <flatcc_json_parser_table_as_root@@Base+0xc50>
  41fe50:	sub    rbx,rdi
  41fe53:	cmp    rbx,r12
  41fe56:	jae    41fe8d <flatcc_json_parser_table_as_root@@Base+0xc2d>
  41fe58:	nop    DWORD PTR [rax+rax*1+0x0]
  41fe60:	mov    rdx,rbx
  41fe63:	mov    rsi,r13
  41fe66:	sub    r12,rbx
  41fe69:	call   4050e0 <memcpy@plt>
  41fe6e:	add    QWORD PTR [rbp+0x28],rbx
  41fe72:	add    r13,rbx
  41fe75:	xor    esi,esi
  41fe77:	mov    rdi,rbp
  41fe7a:	call   QWORD PTR [rbp+0x48]
  41fe7d:	mov    rdi,QWORD PTR [rbp+0x28]
  41fe81:	mov    rbx,QWORD PTR [rbp+0x20]
  41fe85:	sub    rbx,rdi
  41fe88:	cmp    r12,rbx
  41fe8b:	ja     41fe60 <flatcc_json_parser_table_as_root@@Base+0xc00>
  41fe8d:	mov    rdx,r12
  41fe90:	mov    rsi,r13
  41fe93:	call   4050e0 <memcpy@plt>
  41fe98:	add    QWORD PTR [rbp+0x28],r12
  41fe9c:	add    rsp,0x8
  41fea0:	pop    rbx
  41fea1:	pop    rbp
  41fea2:	pop    r12
  41fea4:	pop    r13
  41fea6:	ret    
  41fea7:	nop    WORD PTR [rax+rax*1+0x0]
  41feb0:	mov    rdi,rbp
  41feb3:	xor    esi,esi
  41feb5:	call   QWORD PTR [rbp+0x48]
  41feb8:	mov    rbx,QWORD PTR [rbp+0x20]
  41febc:	mov    rdi,QWORD PTR [rbp+0x28]
  41fec0:	jmp    41fe50 <flatcc_json_parser_table_as_root@@Base+0xbf0>
  41fec2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41fecd:	nop    DWORD PTR [rax]
  41fed0:	push   r12
  41fed2:	push   rbp
  41fed3:	mov    rbp,rdi
  41fed6:	push   rbx
  41fed7:	mov    rdi,QWORD PTR [rdi+0x28]
  41fedb:	mov    r12,rsi
  41fede:	mov    rbx,QWORD PTR [rbp+0x20]
  41fee2:	cmp    rdi,rbx
  41fee5:	jae    41ff38 <flatcc_json_parser_table_as_root@@Base+0xcd8>
  41fee7:	sub    rbx,rdi
  41feea:	cmp    rbx,r12
  41feed:	jae    41ff1c <flatcc_json_parser_table_as_root@@Base+0xcbc>
  41feef:	nop
  41fef0:	mov    rdx,rbx
  41fef3:	mov    esi,0x20
  41fef8:	sub    r12,rbx
  41fefb:	call   405090 <memset@plt>
  41ff00:	add    QWORD PTR [rbp+0x28],rbx
  41ff04:	xor    esi,esi
  41ff06:	mov    rdi,rbp
  41ff09:	call   QWORD PTR [rbp+0x48]
  41ff0c:	mov    rdi,QWORD PTR [rbp+0x28]
  41ff10:	mov    rbx,QWORD PTR [rbp+0x20]
  41ff14:	sub    rbx,rdi
  41ff17:	cmp    r12,rbx
  41ff1a:	ja     41fef0 <flatcc_json_parser_table_as_root@@Base+0xc90>
  41ff1c:	mov    rdx,r12
  41ff1f:	mov    esi,0x20
  41ff24:	call   405090 <memset@plt>
  41ff29:	add    QWORD PTR [rbp+0x28],r12
  41ff2d:	pop    rbx
  41ff2e:	pop    rbp
  41ff2f:	pop    r12
  41ff31:	ret    
  41ff32:	nop    WORD PTR [rax+rax*1+0x0]
  41ff38:	mov    rdi,rbp
  41ff3b:	xor    esi,esi
  41ff3d:	call   QWORD PTR [rbp+0x48]
  41ff40:	mov    rbx,QWORD PTR [rbp+0x20]
  41ff44:	mov    rdi,QWORD PTR [rbp+0x28]
  41ff48:	jmp    41fee7 <flatcc_json_parser_table_as_root@@Base+0xc87>
  41ff4a:	nop    WORD PTR [rax+rax*1+0x0]
  41ff50:	push   rbp
  41ff51:	push   rbx
  41ff52:	sub    rsp,0x8
  41ff56:	movzx  ebp,BYTE PTR [rdi+0x31]
  41ff5a:	mov    rax,QWORD PTR [rdi+0x28]
  41ff5e:	imul   ebp,DWORD PTR [rdi+0x38]
  41ff62:	movsxd rbp,ebp
  41ff65:	lea    rdx,[rax+rbp*1]
  41ff69:	cmp    QWORD PTR [rdi+0x20],rdx
  41ff6d:	jb     41ff90 <flatcc_json_parser_table_as_root@@Base+0xd30>
  41ff6f:	mov    rbx,rdi
  41ff72:	mov    rdx,rbp
  41ff75:	mov    esi,0x20
  41ff7a:	mov    rdi,rax
  41ff7d:	call   405090 <memset@plt>
  41ff82:	add    QWORD PTR [rbx+0x28],rbp
  41ff86:	add    rsp,0x8
  41ff8a:	pop    rbx
  41ff8b:	pop    rbp
  41ff8c:	ret    
  41ff8d:	nop    DWORD PTR [rax]
  41ff90:	add    rsp,0x8
  41ff94:	mov    rsi,rbp
  41ff97:	pop    rbx
  41ff98:	pop    rbp
  41ff99:	jmp    41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  41ff9e:	xchg   ax,ax
  41ffa0:	push   rbp
  41ffa1:	push   rbx
  41ffa2:	mov    rbx,rdi
  41ffa5:	sub    rsp,0x8
  41ffa9:	test   esi,esi
  41ffab:	mov    rsi,QWORD PTR [rdi+0x28]
  41ffaf:	jne    41ffba <flatcc_json_parser_table_as_root@@Base+0xd5a>
  41ffb1:	mov    rax,QWORD PTR [rdi+0x20]
  41ffb5:	cmp    rsi,rax
  41ffb8:	jae    41fff0 <flatcc_json_parser_table_as_root@@Base+0xd90>
  41ffba:	mov    rdi,QWORD PTR [rbx]
  41ffbd:	mov    rcx,QWORD PTR [rbx+0x40]
  41ffc1:	mov    edx,0x1
  41ffc6:	sub    rsi,rdi
  41ffc9:	mov    rbp,rsi
  41ffcc:	call   405120 <fwrite@plt>
  41ffd1:	mov    rsi,QWORD PTR [rbx]
  41ffd4:	add    QWORD PTR [rbx+0x18],rbp
  41ffd8:	mov    QWORD PTR [rbx+0x28],rsi
  41ffdc:	mov    BYTE PTR [rsi],0x0
  41ffdf:	add    rsp,0x8
  41ffe3:	pop    rbx
  41ffe4:	pop    rbp
  41ffe5:	ret    
  41ffe6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fff0:	sub    rsi,rax
  41fff3:	mov    rcx,QWORD PTR [rdi+0x40]
  41fff7:	mov    edx,0x1
  41fffc:	mov    rbp,rsi
  41ffff:	mov    rsi,QWORD PTR [rdi+0x10]
  420003:	mov    rdi,QWORD PTR [rdi]
  420006:	call   405120 <fwrite@plt>
  42000b:	mov    rdi,QWORD PTR [rbx]
  42000e:	mov    rdx,rbp
  420011:	mov    rsi,rdi
  420014:	add    rsi,QWORD PTR [rbx+0x10]
  420018:	call   4050e0 <memcpy@plt>
  42001d:	mov    rsi,rbp
  420020:	add    rsi,QWORD PTR [rbx]
  420023:	mov    rax,QWORD PTR [rbx+0x10]
  420027:	add    QWORD PTR [rbx+0x18],rax
  42002b:	mov    QWORD PTR [rbx+0x28],rsi
  42002f:	mov    BYTE PTR [rsi],0x0
  420032:	add    rsp,0x8
  420036:	pop    rbx
  420037:	pop    rbp
  420038:	ret    
  420039:	nop    DWORD PTR [rax+0x0]
  420040:	mov    rax,QWORD PTR [rdi+0x28]
  420044:	mov    rdx,QWORD PTR [rdi]
  420047:	mov    BYTE PTR [rax],0x0
  42004a:	mov    rsi,QWORD PTR [rdi+0x20]
  42004e:	cmp    QWORD PTR [rdi+0x28],rsi
  420052:	jae    420058 <flatcc_json_parser_table_as_root@@Base+0xdf8>
  420054:	ret    
  420055:	nop    DWORD PTR [rax]
  420058:	push   rbp
  420059:	push   rbx
  42005a:	sub    rax,rdx
  42005d:	mov    rbp,rax
  420060:	mov    rbx,rdi
  420063:	sub    rsp,0x8
  420067:	mov    rax,QWORD PTR [rdi+0x8]
  42006b:	mov    rdi,QWORD PTR [rdi]
  42006e:	lea    rsi,[rax+rax*1]
  420072:	call   405100 <realloc@plt>
  420077:	test   rax,rax
  42007a:	je     4200b0 <flatcc_json_parser_table_as_root@@Base+0xe50>
  42007c:	mov    rcx,QWORD PTR [rbx+0x8]
  420080:	lea    rdx,[rax+rbp*1]
  420084:	mov    QWORD PTR [rbx],rax
  420087:	mov    QWORD PTR [rbx+0x28],rdx
  42008b:	add    rcx,rcx
  42008e:	mov    QWORD PTR [rbx+0x8],rcx
  420092:	sub    rcx,0x40
  420096:	add    rax,rcx
  420099:	mov    QWORD PTR [rbx+0x10],rcx
  42009d:	mov    QWORD PTR [rbx+0x20],rax
  4200a1:	mov    BYTE PTR [rdx],0x0
  4200a4:	add    rsp,0x8
  4200a8:	pop    rbx
  4200a9:	pop    rbp
  4200aa:	ret    
  4200ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4200b0:	mov    eax,DWORD PTR [rbx+0x3c]
  4200b3:	test   eax,eax
  4200b5:	jne    4200be <flatcc_json_parser_table_as_root@@Base+0xe5e>
  4200b7:	mov    DWORD PTR [rbx+0x3c],0x3
  4200be:	mov    rdx,QWORD PTR [rbx]
  4200c1:	add    QWORD PTR [rbx+0x18],rbp
  4200c5:	mov    QWORD PTR [rbx+0x28],rdx
  4200c9:	jmp    4200a1 <flatcc_json_parser_table_as_root@@Base+0xe41>
  4200cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4200d0:	test   edi,edi
  4200d2:	jne    4200f0 <flatcc_json_parser_table_as_root@@Base+0xe90>
  4200d4:	mov    eax,0x65
  4200d9:	mov    DWORD PTR [rsi],0x736c6166
  4200df:	mov    WORD PTR [rsi+0x4],ax
  4200e3:	mov    eax,0x5
  4200e8:	ret    
  4200e9:	nop    DWORD PTR [rax+0x0]
  4200f0:	mov    DWORD PTR [rsi],0x65757274
  4200f6:	mov    BYTE PTR [rsi+0x4],0x0
  4200fa:	mov    eax,0x4
  4200ff:	ret    
  420100:	cmp    dil,0x63
  420104:	jbe    420150 <flatcc_json_parser_table_as_root@@Base+0xef0>
  420106:	movzx  eax,dil
  42010a:	mov    BYTE PTR [rsi+0x3],0x0
  42010e:	lea    edx,[rax*4+0x0]
  420115:	mov    ecx,eax
  420117:	add    edx,eax
  420119:	lea    edx,[rcx+rdx*8]
  42011c:	mov    ecx,0x64
  420121:	mov    eax,ecx
  420123:	shr    dx,0xc
  420127:	imul   eax,edx
  42012a:	add    edx,0x30
  42012d:	sub    edi,eax
  42012f:	lea    rax,[rip+0x11a6a]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  420136:	add    rdi,rdi
  420139:	and    edi,0x1fe
  42013f:	movzx  eax,WORD PTR [rax+rdi*1]
  420143:	mov    BYTE PTR [rsi],dl
  420145:	mov    WORD PTR [rsi+0x1],ax
  420149:	mov    eax,0x3
  42014e:	ret    
  42014f:	nop
  420150:	cmp    dil,0x9
  420154:	jbe    420180 <flatcc_json_parser_table_as_root@@Base+0xf20>
  420156:	add    rdi,rdi
  420159:	lea    rax,[rip+0x11a40]        # 431ba0 <flatcc_builder_padding_base@@Base+0x20c0>
  420160:	mov    BYTE PTR [rsi+0x2],0x0
  420164:	and    edi,0x1fe
  42016a:	movzx  eax,WORD PTR [rax+rdi*1]
  42016e:	mov    WORD PTR [rsi],ax
  420171:	mov    eax,0x2
  420176:	ret    
  420177:	nop    WORD PTR [rax+rax*1+0x0]
  420180:	add    edi,0x30
  420183:	mov    BYTE PTR [rsi+0x1],0x0
  420187:	mov    eax,0x1
  42018c:	mov    BYTE PTR [rsi],dil
  42018f:	ret    
  420190:	mov    r9,rdi
  420193:	mov    eax,edx
  420195:	mov    edi,edi
  420197:	shr    r9,0x20
  42019b:	mov    r11,rdi
  42019e:	mov    r10,rdx
  4201a1:	imul   rdi,rax
  4201a5:	mov    r8,r9
  4201a8:	shr    r10,0x20
  4201ac:	imul   r8,rax
  4201b0:	mov    QWORD PTR [rsp-0x10],0x0
  4201b9:	imul   r11,r10
  4201bd:	mov    rax,rdi
  4201c0:	shr    rax,0x20
  4201c4:	mov    edi,r8d
  4201c7:	add    rax,rdi
  4201ca:	mov    edi,0x80000000
  4201cf:	mov    edx,r11d
  4201d2:	add    rax,rdi
  4201d5:	shr    r11,0x20
  4201d9:	imul   r9,r10
  4201dd:	add    rax,rdx
  4201e0:	mov    rdx,r8
  4201e3:	shr    rdx,0x20
  4201e7:	shr    rax,0x20
  4201eb:	add    rdx,r11
  4201ee:	lea    r8,[rdx+r9*1]
  4201f2:	add    rax,r8
  4201f5:	mov    QWORD PTR [rsp-0x18],rax
  4201fa:	lea    eax,[rsi+rcx*1+0x40]
  4201fe:	vmovdqa xmm1,XMMWORD PTR [rsp-0x18]
  420204:	vpinsrd xmm0,xmm1,eax,0x2
  42020a:	vmovaps XMMWORD PTR [rsp-0x18],xmm0
  420210:	mov    rax,QWORD PTR [rsp-0x18]
  420215:	mov    rdx,QWORD PTR [rsp-0x10]
  42021a:	ret    
  42021b:	nop    DWORD PTR [rax+rax*1+0x0]
  420220:	sub    rsp,0x18
  420224:	test   rdi,rdi
  420227:	mov    QWORD PTR [rsp+0x8],rsi
  42022c:	mov    QWORD PTR [rsp],rdi
  420230:	mov    ecx,DWORD PTR [rsp+0x8]
  420234:	je     42029c <flatcc_json_parser_table_as_root@@Base+0x103c>
  420236:	mov    rax,rdi
  420239:	movabs rdi,0xffc0000000000000
  420243:	lea    edx,[rcx-0xa]
  420246:	test   rax,rdi
  420249:	mov    rsi,rdi
  42024c:	jne    42025e <flatcc_json_parser_table_as_root@@Base+0xffe>
  42024e:	xchg   ax,ax
  420250:	shl    rax,0xa
  420254:	mov    ecx,edx
  420256:	sub    edx,0xa
  420259:	test   rax,rsi
  42025c:	je     420250 <flatcc_json_parser_table_as_root@@Base+0xff0>
  42025e:	test   rax,rax
  420261:	js     42027a <flatcc_json_parser_table_as_root@@Base+0x101a>
  420263:	lea    edx,[rcx-0x1]
  420266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420270:	mov    ecx,edx
  420272:	sub    edx,0x1
  420275:	add    rax,rax
  420278:	jns    420270 <flatcc_json_parser_table_as_root@@Base+0x1010>
  42027a:	mov    QWORD PTR [rsp],rax
  42027e:	vmovdqa xmm1,XMMWORD PTR [rsp]
  420283:	vpinsrd xmm0,xmm1,ecx,0x2
  420289:	vmovaps XMMWORD PTR [rsp],xmm0
  42028e:	mov    rax,QWORD PTR [rsp]
  420292:	mov    rdx,QWORD PTR [rsp+0x8]
  420297:	add    rsp,0x18
  42029b:	ret    
  42029c:	lea    rcx,[rip+0x112ed]        # 431590 <flatcc_builder_padding_base@@Base+0x1ab0>
  4202a3:	lea    rsi,[rip+0xff66]        # 430210 <flatcc_builder_padding_base@@Base+0x730>
  4202aa:	lea    rdi,[rip+0x10143]        # 4303f4 <flatcc_builder_padding_base@@Base+0x914>
  4202b1:	mov    edx,0x104
  4202b6:	call   405080 <__assert_fail@plt>
  4202bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4202c0:	lea    rcx,[rip+0x112a9]        # 431570 <flatcc_builder_padding_base@@Base+0x1a90>
  4202c7:	lea    rsi,[rip+0xff42]        # 430210 <flatcc_builder_padding_base@@Base+0x730>
  4202ce:	lea    rdi,[rip+0x1114c]        # 431421 <flatcc_builder_padding_base@@Base+0x1941>
  4202d5:	sub    rsp,0x8
  4202d9:	mov    edx,0xef
  4202de:	call   405080 <__assert_fail@plt>
  4202e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4202ee:	xchg   ax,ax
  4202f0:	push   r15
  4202f2:	push   r14
  4202f4:	push   r13
  4202f6:	push   r12
  4202f8:	push   rbp
  4202f9:	push   rbx
  4202fa:	sub    rsp,0x58
  4202fe:	test   rdi,rdi
  420301:	je     420a3e <flatcc_json_parser_table_as_root@@Base+0x17de>
  420307:	vmovq  r8,xmm0
  42030c:	movabs rax,0xffe0000000000000
  420316:	mov    r10,rdi
  420319:	lea    rdx,[r8+r8*1]
  42031d:	cmp    rdx,rax
  420320:	ja     4207b8 <flatcc_json_parser_table_as_root@@Base+0x1558>
  420326:	test   r8,r8
  420329:	mov    rbx,rdi
  42032c:	js     420790 <flatcc_json_parser_table_as_root@@Base+0x1530>
  420332:	test   r8,r8
  420335:	je     420770 <flatcc_json_parser_table_as_root@@Base+0x1510>
  42033b:	movabs r13,0x7ff0000000000000
  420345:	cmp    r8,r13
  420348:	je     420820 <flatcc_json_parser_table_as_root@@Base+0x15c0>
  42034e:	vmovq  rax,xmm0
  420353:	vmovq  QWORD PTR [rsp+0x28],xmm0
  420359:	and    r13,rax
  42035c:	je     4207f0 <flatcc_json_parser_table_as_root@@Base+0x1590>
  420362:	vmovq  rdi,xmm0
  420367:	vmovq  r12,xmm0
  42036c:	movabs rax,0xfffffffffffff
  420376:	movabs rdx,0x10000000000000
  420380:	and    rax,rdi
  420383:	shr    r12,0x34
  420387:	and    r12d,0x7ff
  42038e:	lea    r15,[rax+rdx*1]
  420392:	lea    r11d,[r12-0x433]
  42039a:	sub    r12d,0x434
  4203a1:	mov    QWORD PTR [rsp+0x8],0x0
  4203aa:	mov    QWORD PTR [rsp],r15
  4203ae:	lea    r14,[r15+r15*1]
  4203b2:	vmovdqa xmm5,XMMWORD PTR [rsp]
  4203b7:	mov    QWORD PTR [rsp+0x48],r10
  4203bc:	mov    DWORD PTR [rsp+0x38],r11d
  4203c1:	vpinsrd xmm4,xmm5,r11d,0x2
  4203c7:	vmovsd QWORD PTR [rsp+0x40],xmm0
  4203cd:	vmovaps XMMWORD PTR [rsp],xmm4
  4203d2:	mov    rsi,QWORD PTR [rsp+0x8]
  4203d7:	mov    rdi,QWORD PTR [rsp]
  4203db:	call   420220 <flatcc_json_parser_table_as_root@@Base+0xfc0>
  4203e0:	mov    QWORD PTR [rsp],rax
  4203e4:	lea    rax,[r14+0x1]
  4203e8:	mov    QWORD PTR [rsp+0x18],0x0
  4203f1:	mov    DWORD PTR [rsp+0x30],edx
  4203f5:	mov    QWORD PTR [rsp+0x10],rax
  4203fa:	vmovdqa xmm7,XMMWORD PTR [rsp+0x10]
  420400:	vpinsrd xmm6,xmm7,r12d,0x2
  420406:	vmovaps XMMWORD PTR [rsp+0x10],xmm6
  42040c:	mov    rsi,QWORD PTR [rsp+0x18]
  420411:	mov    rdi,QWORD PTR [rsp+0x10]
  420416:	call   420220 <flatcc_json_parser_table_as_root@@Base+0xfc0>
  42041b:	vxorpd xmm2,xmm2,xmm2
  42041f:	mov    r9,rax
  420422:	vmovsd xmm0,QWORD PTR [rsp+0x40]
  420428:	mov    ebp,edx
  42042a:	vucomisd xmm0,xmm2
  42042e:	jbe    420a1f <flatcc_json_parser_table_as_root@@Base+0x17bf>
  420434:	vmovsd xmm1,QWORD PTR [rip+0x10dcc]        # 431208 <flatcc_builder_padding_base@@Base+0x1728>
  42043c:	mov    r8d,DWORD PTR [rsp+0x30]
  420441:	mov    r11d,DWORD PTR [rsp+0x38]
  420446:	mov    r10,QWORD PTR [rsp+0x48]
  42044b:	vucomisd xmm1,xmm0
  42044f:	jb     420a1f <flatcc_json_parser_table_as_root@@Base+0x17bf>
  420455:	movabs rax,0xfffffffffffff
  42045f:	test   QWORD PTR [rsp+0x28],rax
  420464:	jne    420810 <flatcc_json_parser_table_as_root@@Base+0x15b0>
  42046a:	test   r13,r13
  42046d:	je     420810 <flatcc_json_parser_table_as_root@@Base+0x15b0>
  420473:	lea    rcx,[r15*4-0x1]
  42047b:	lea    r12d,[r11-0x2]
  42047f:	vxorpd xmm1,xmm1,xmm1
  420483:	mov    eax,0xffffffc3
  420488:	sub    r12d,ebp
  42048b:	sub    eax,r8d
  42048e:	shlx   r12,rcx,r12
  420493:	vcvtsi2sd xmm1,xmm1,eax
  420497:	vmulsd xmm1,xmm1,QWORD PTR [rip+0x117d1]        # 431c70 <flatcc_builder_padding_base@@Base+0x2190>
  42049f:	vucomisd xmm2,xmm1
  4204a3:	vcvttsd2si edx,xmm1
  4204a7:	ja     4204c0 <flatcc_json_parser_table_as_root@@Base+0x1260>
  4204a9:	vxorpd xmm3,xmm3,xmm3
  4204ad:	vcvtsi2sd xmm3,xmm3,edx
  4204b1:	vsubsd xmm1,xmm1,xmm3
  4204b5:	vucomisd xmm1,xmm2
  4204b9:	jp     4204bd <flatcc_json_parser_table_as_root@@Base+0x125d>
  4204bb:	je     4204c0 <flatcc_json_parser_table_as_root@@Base+0x1260>
  4204bd:	add    edx,0x1
  4204c0:	lea    eax,[rdx+0x162]
  4204c6:	add    edx,0x15b
  4204cc:	mov    rdi,QWORD PTR [rsp]
  4204d0:	mov    esi,r8d
  4204d3:	mov    QWORD PTR [rsp+0x28],r9
  4204d8:	mov    QWORD PTR [rsp+0x38],r10
  4204dd:	cmovns eax,edx
  4204e0:	lea    rdx,[rip+0x11139]        # 431620 <flatcc_builder_padding_base@@Base+0x1b40>
  4204e7:	vmovsd QWORD PTR [rsp+0x30],xmm0
  4204ed:	sar    eax,0x3
  4204f0:	add    eax,0x1
  4204f3:	cdqe   
  4204f5:	shl    rax,0x4
  4204f9:	add    rax,rdx
  4204fc:	movsx  r14d,WORD PTR [rax+0x8]
  420501:	mov    r13,QWORD PTR [rax]
  420504:	movsx  eax,WORD PTR [rax+0xa]
  420508:	mov    rdx,r13
  42050b:	mov    ecx,r14d
  42050e:	mov    DWORD PTR [rsp+0x40],eax
  420512:	call   420190 <flatcc_json_parser_table_as_root@@Base+0xf30>
  420517:	mov    rdi,r12
  42051a:	mov    DWORD PTR [rsp+0x10],edx
  42051e:	mov    ecx,r14d
  420521:	mov    esi,ebp
  420523:	mov    rdx,r13
  420526:	mov    QWORD PTR [rsp],rax
  42052a:	call   420190 <flatcc_json_parser_table_as_root@@Base+0xf30>
  42052f:	mov    r9,QWORD PTR [rsp+0x28]
  420534:	mov    ecx,r14d
  420537:	mov    r15,rdx
  42053a:	mov    esi,ebp
  42053c:	mov    rdx,r13
  42053f:	mov    r12,rax
  420542:	sub    r12,0x1
  420546:	mov    rdi,r9
  420549:	call   420190 <flatcc_json_parser_table_as_root@@Base+0xf30>
  42054e:	lea    rdi,[rax+0x1]
  420552:	mov    DWORD PTR [rsp+0x28],edx
  420556:	mov    rcx,rdi
  420559:	sub    rcx,r12
  42055c:	cmp    r12,rdi
  42055f:	ja     420a1a <flatcc_json_parser_table_as_root@@Base+0x17ba>
  420565:	cmp    r15d,edx
  420568:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  42056e:	mov    r10,QWORD PTR [rsp+0x38]
  420573:	jne    420a1a <flatcc_json_parser_table_as_root@@Base+0x17ba>
  420579:	mov    esi,DWORD PTR [rsp+0x10]
  42057d:	mov    eax,0x1
  420582:	mov    rbp,rdi
  420585:	lea    r13d,[rsi+0x41]
  420589:	mov    r9d,esi
  42058c:	lea    rsi,[rip+0x1104d]        # 4315e0 <flatcc_builder_padding_base@@Base+0x1b00>
  420593:	neg    r9d
  420596:	imul   r13d,r13d,0x4d1
  42059d:	shlx   rax,rax,r9
  4205a2:	shrx   rdx,rdi,r9
  4205a7:	mov    r15,rax
  4205aa:	mov    QWORD PTR [rsp+0x30],rax
  4205af:	mov    eax,edx
  4205b1:	lea    r8,[r15-0x1]
  4205b5:	sar    r13d,0xc
  4205b9:	lea    r12d,[r13+0x1]
  4205bd:	and    rbp,r8
  4205c0:	movsxd r11,r12d
  4205c3:	mov    r11d,DWORD PTR [rsi+r11*4]
  4205c7:	cmp    edx,r11d
  4205ca:	jae    4205d6 <flatcc_json_parser_table_as_root@@Base+0x1376>
  4205cc:	movsxd rdx,r13d
  4205cf:	mov    r12d,r13d
  4205d2:	mov    r11d,DWORD PTR [rsi+rdx*4]
  4205d6:	test   r12d,r12d
  4205d9:	jle    4209e2 <flatcc_json_parser_table_as_root@@Base+0x1782>
  4205df:	xor    edx,edx
  4205e1:	sub    r12d,0x1
  4205e5:	lea    r14,[rbx+0x1]
  4205e9:	div    r11d
  4205ec:	mov    r13d,0x1
  4205f2:	mov    r15d,0xcccccccd
  4205f8:	add    eax,0x30
  4205fb:	mov    BYTE PTR [rbx],al
  4205fd:	mov    eax,edx
  4205ff:	mov    rsi,rax
  420602:	shlx   rax,rax,r9
  420607:	add    rax,rbp
  42060a:	cmp    rax,rcx
  42060d:	jae    420647 <flatcc_json_parser_table_as_root@@Base+0x13e7>
  42060f:	jmp    420845 <flatcc_json_parser_table_as_root@@Base+0x15e5>
  420614:	nop    DWORD PTR [rax+0x0]
  420618:	mov    eax,esi
  42061a:	xor    edx,edx
  42061c:	add    r13d,0x1
  420620:	div    r11d
  420623:	sub    r12d,0x1
  420627:	add    r14,0x1
  42062b:	add    eax,0x30
  42062e:	mov    esi,edx
  420630:	mov    BYTE PTR [r14-0x1],al
  420634:	mov    eax,edx
  420636:	shlx   rax,rax,r9
  42063b:	add    rax,rbp
  42063e:	cmp    rcx,rax
  420641:	ja     420850 <flatcc_json_parser_table_as_root@@Base+0x15f0>
  420647:	mov    eax,r11d
  42064a:	mul    r15d
  42064d:	shr    edx,0x3
  420650:	test   r12d,r12d
  420653:	mov    r11d,edx
  420656:	jne    420618 <flatcc_json_parser_table_as_root@@Base+0x13b8>
  420658:	movsxd rdx,r13d
  42065b:	mov    eax,0x1
  420660:	add    rdx,rbx
  420663:	nop    DWORD PTR [rax+rax*1+0x0]
  420668:	lea    rbp,[rbp+rbp*4+0x0]
  42066d:	lea    rcx,[rcx+rcx*4]
  420671:	lea    rax,[rax+rax*4]
  420675:	add    r13d,0x1
  420679:	sub    r12d,0x1
  42067d:	add    rdx,0x1
  420681:	add    rbp,rbp
  420684:	add    rcx,rcx
  420687:	add    rax,rax
  42068a:	shrx   rsi,rbp,r9
  42068f:	and    rbp,r8
  420692:	add    esi,0x30
  420695:	mov    BYTE PTR [rdx-0x1],sil
  420699:	cmp    rcx,rbp
  42069c:	jbe    420668 <flatcc_json_parser_table_as_root@@Base+0x1408>
  42069e:	mov    rsi,QWORD PTR [rsp]
  4206a2:	mov    rdx,rdi
  4206a5:	vmovsd QWORD PTR [rsp+0x48],xmm0
  4206ab:	mov    QWORD PTR [rsp+0x38],r10
  4206b0:	sub    rdx,rsi
  4206b3:	cmp    rdi,rsi
  4206b6:	jb     420a1a <flatcc_json_parser_table_as_root@@Base+0x17ba>
  4206bc:	mov    esi,DWORD PTR [rsp+0x28]
  4206c0:	cmp    DWORD PTR [rsp+0x10],esi
  4206c4:	jne    420a1a <flatcc_json_parser_table_as_root@@Base+0x17ba>
  4206ca:	sub    rsp,0x8
  4206ce:	mov    r8,rbp
  4206d1:	mov    esi,r13d
  4206d4:	imul   rdx,rax
  4206d8:	push   rax
  4206d9:	mov    r9,QWORD PTR [rsp+0x40]
  4206de:	mov    rdi,rbx
  4206e1:	call   41fc50 <flatcc_json_parser_table_as_root@@Base+0x9f0>
  4206e6:	pop    rdx
  4206e7:	pop    rcx
  4206e8:	mov    r10,QWORD PTR [rsp+0x38]
  4206ed:	vmovsd xmm0,QWORD PTR [rsp+0x48]
  4206f3:	sub    r12d,DWORD PTR [rsp+0x40]
  4206f8:	test   eax,eax
  4206fa:	je     4209b0 <flatcc_json_parser_table_as_root@@Base+0x1750>
  420700:	lea    eax,[r13-0x1]
  420704:	cmp    r13d,0x3
  420708:	mov    edx,0x1
  42070d:	cmovl  eax,edx
  420710:	test   r12d,r12d
  420713:	js     4208b0 <flatcc_json_parser_table_as_root@@Base+0x1650>
  420719:	cmp    r12d,0x2
  42071d:	jg     420980 <flatcc_json_parser_table_as_root@@Base+0x1720>
  420723:	test   r12d,r12d
  420726:	je     420752 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  420728:	test   r12d,r12d
  42072b:	lea    esi,[r12-0x1]
  420730:	jle    420752 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  420732:	mov    ecx,esi
  420734:	movsxd rdx,r13d
  420737:	xor    eax,eax
  420739:	add    rcx,0x1
  42073d:	add    rdx,rbx
  420740:	mov    BYTE PTR [rdx+rax*1],0x30
  420744:	add    rax,0x1
  420748:	cmp    rcx,rax
  42074b:	jne    420740 <flatcc_json_parser_table_as_root@@Base+0x14e0>
  42074d:	lea    r13d,[r13+rsi*1+0x1]
  420752:	movsxd r13,r13d
  420755:	lea    rax,[rbx+r13*1]
  420759:	mov    BYTE PTR [rax],0x0
  42075c:	add    rsp,0x58
  420760:	sub    eax,r10d
  420763:	pop    rbx
  420764:	pop    rbp
  420765:	pop    r12
  420767:	pop    r13
  420769:	pop    r14
  42076b:	pop    r15
  42076d:	ret    
  42076e:	xchg   ax,ax
  420770:	lea    rax,[rbx+0x1]
  420774:	mov    BYTE PTR [rbx],0x30
  420777:	mov    BYTE PTR [rbx+0x1],0x0
  42077b:	sub    eax,r10d
  42077e:	add    rsp,0x58
  420782:	pop    rbx
  420783:	pop    rbp
  420784:	pop    r12
  420786:	pop    r13
  420788:	pop    r14
  42078a:	pop    r15
  42078c:	ret    
  42078d:	nop    DWORD PTR [rax]
  420790:	movabs rax,0x8000000000000000
  42079a:	lea    rbx,[rdi+0x1]
  42079e:	mov    BYTE PTR [rdi],0x2d
  4207a1:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0xe847]        # 42eff0 <_IO_stdin_used@@Base+0x3ff0>
  4207a9:	xor    r8,rax
  4207ac:	jmp    420332 <flatcc_json_parser_table_as_root@@Base+0x10d2>
  4207b1:	nop    DWORD PTR [rax+0x0]
  4207b8:	add    rsp,0x58
  4207bc:	vmovd  r9d,xmm0
  4207c1:	lea    rcx,[rip+0x10c76]        # 43143e <flatcc_builder_padding_base@@Base+0x195e>
  4207c8:	pop    rbx
  4207c9:	pop    rbp
  4207ca:	pop    r12
  4207cc:	pop    r13
  4207ce:	pop    r14
  4207d0:	pop    r15
  4207d2:	shr    r8,0x20
  4207d6:	mov    rdx,0xffffffffffffffff
  4207dd:	mov    esi,0x1
  4207e2:	xor    eax,eax
  4207e4:	jmp    405150 <__sprintf_chk@plt>
  4207e9:	nop    DWORD PTR [rax+0x0]
  4207f0:	movabs r15,0xfffffffffffff
  4207fa:	mov    r12d,0xfffffbcd
  420800:	mov    r11d,0xfffffbce
  420806:	and    r15,rax
  420809:	jmp    4203a1 <flatcc_json_parser_table_as_root@@Base+0x1141>
  42080e:	xchg   ax,ax
  420810:	lea    rcx,[r14-0x1]
  420814:	jmp    42047f <flatcc_json_parser_table_as_root@@Base+0x121f>
  420819:	nop    DWORD PTR [rax+0x0]
  420820:	lea    rax,[rbx+0x3]
  420824:	mov    BYTE PTR [rbx],0x69
  420827:	mov    BYTE PTR [rbx+0x1],0x6e
  42082b:	mov    BYTE PTR [rbx+0x2],0x66
  42082f:	mov    BYTE PTR [rbx+0x3],0x0
  420833:	add    rsp,0x58
  420837:	pop    rbx
  420838:	sub    eax,r10d
  42083b:	pop    rbp
  42083c:	pop    r12
  42083e:	pop    r13
  420840:	pop    r14
  420842:	pop    r15
  420844:	ret    
  420845:	mov    r13d,0x1
  42084b:	nop    DWORD PTR [rax+rax*1+0x0]
  420850:	mov    rsi,QWORD PTR [rsp]
  420854:	mov    rdx,rdi
  420857:	mov    QWORD PTR [rsp+0x38],r10
  42085c:	mov    r10d,DWORD PTR [rsp+0x28]
  420861:	vmovsd QWORD PTR [rsp+0x30],xmm0
  420867:	shlx   r9,r11,r9
  42086c:	sub    rdx,rsi
  42086f:	cmp    DWORD PTR [rsp+0x10],r10d
  420874:	jne    420a1a <flatcc_json_parser_table_as_root@@Base+0x17ba>
  42087a:	cmp    rdi,rsi
  42087d:	jb     420a1a <flatcc_json_parser_table_as_root@@Base+0x17ba>
  420883:	sub    rsp,0x8
  420887:	mov    esi,r13d
  42088a:	mov    rdi,rbx
  42088d:	push   0x1
  42088f:	mov    r8,rax
  420892:	call   41fc50 <flatcc_json_parser_table_as_root@@Base+0x9f0>
  420897:	pop    rsi
  420898:	pop    rdi
  420899:	mov    r10,QWORD PTR [rsp+0x38]
  42089e:	vmovsd xmm0,QWORD PTR [rsp+0x30]
  4208a4:	jmp    4206f3 <flatcc_json_parser_table_as_root@@Base+0x1493>
  4208a9:	nop    DWORD PTR [rax+0x0]
  4208b0:	lea    ecx,[r12+r13*1]
  4208b4:	mov    edx,r12d
  4208b7:	neg    edx
  4208b9:	cmp    ecx,0xfffffffe
  4208bc:	jl     420928 <flatcc_json_parser_table_as_root@@Base+0x16c8>
  4208be:	cmp    edx,r13d
  4208c1:	jl     420928 <flatcc_json_parser_table_as_root@@Base+0x16c8>
  4208c3:	movsxd rdx,r13d
  4208c6:	mov    edi,0x2
  4208cb:	movsxd rax,r12d
  4208ce:	sub    rdi,rdx
  4208d1:	mov    rsi,rbx
  4208d4:	mov    QWORD PTR [rsp],r10
  4208d8:	sub    rdi,rax
  4208db:	add    rdi,rbx
  4208de:	call   405110 <memmove@plt>
  4208e3:	mov    edx,0x2
  4208e8:	mov    BYTE PTR [rbx],0x30
  4208eb:	mov    BYTE PTR [rbx+0x1],0x2e
  4208ef:	sub    edx,r12d
  4208f2:	mov    r10,QWORD PTR [rsp]
  4208f6:	sub    edx,r13d
  4208f9:	cmp    edx,0x2
  4208fc:	jle    420a10 <flatcc_json_parser_table_as_root@@Base+0x17b0>
  420902:	mov    eax,0x2
  420907:	nop    WORD PTR [rax+rax*1+0x0]
  420910:	mov    BYTE PTR [rbx+rax*1],0x30
  420914:	add    rax,0x1
  420918:	cmp    edx,eax
  42091a:	jg     420910 <flatcc_json_parser_table_as_root@@Base+0x16b0>
  42091c:	add    r13d,edx
  42091f:	jmp    420752 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  420924:	nop    DWORD PTR [rax+0x0]
  420928:	cmp    r13d,0x1
  42092c:	je     420980 <flatcc_json_parser_table_as_root@@Base+0x1720>
  42092e:	cmp    eax,edx
  420930:	cmovle edx,eax
  420933:	test   edx,edx
  420935:	jle    420960 <flatcc_json_parser_table_as_root@@Base+0x1700>
  420937:	movsxd rcx,r13d
  42093a:	lea    esi,[rdx-0x1]
  42093d:	lea    rax,[rbx+rcx*1]
  420941:	sub    rcx,0x1
  420945:	sub    rcx,rsi
  420948:	lea    rsi,[rbx+rcx*1]
  42094c:	nop    DWORD PTR [rax+0x0]
  420950:	movzx  ecx,BYTE PTR [rax-0x1]
  420954:	sub    rax,0x1
  420958:	mov    BYTE PTR [rax+0x1],cl
  42095b:	cmp    rsi,rax
  42095e:	jne    420950 <flatcc_json_parser_table_as_root@@Base+0x16f0>
  420960:	mov    eax,r13d
  420963:	mov    edi,edx
  420965:	lea    ecx,[r13+0x1]
  420969:	sub    eax,edx
  42096b:	add    edi,r12d
  42096e:	cdqe   
  420970:	mov    BYTE PTR [rbx+rax*1],0x2e
  420974:	jne    4209ea <flatcc_json_parser_table_as_root@@Base+0x178a>
  420976:	mov    r13d,ecx
  420979:	jmp    420752 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  42097e:	xchg   ax,ax
  420980:	lea    r11d,[r13+0x1]
  420984:	movsxd r13,r13d
  420987:	mov    edi,r12d
  42098a:	mov    BYTE PTR [rbx+r13*1],0x65
  42098f:	mov    QWORD PTR [rsp],r10
  420993:	movsxd rsi,r11d
  420996:	add    rsi,rbx
  420999:	call   41fd40 <flatcc_json_parser_table_as_root@@Base+0xae0>
  42099e:	mov    r10,QWORD PTR [rsp]
  4209a2:	lea    r13d,[r11+rax*1]
  4209a6:	jmp    420752 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  4209ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4209b0:	lea    rcx,[rip+0x10a95]        # 43144c <flatcc_builder_padding_base@@Base+0x196c>
  4209b7:	mov    rdi,rbx
  4209ba:	mov    rdx,0xffffffffffffffff
  4209c1:	mov    esi,0x1
  4209c6:	mov    eax,0x1
  4209cb:	mov    QWORD PTR [rsp],r10
  4209cf:	call   405150 <__sprintf_chk@plt>
  4209d4:	mov    r10,QWORD PTR [rsp]
  4209d8:	sub    rbx,r10
  4209db:	add    eax,ebx
  4209dd:	jmp    42077e <flatcc_json_parser_table_as_root@@Base+0x151e>
  4209e2:	xor    r13d,r13d
  4209e5:	jmp    420658 <flatcc_json_parser_table_as_root@@Base+0x13f8>
  4209ea:	add    r13d,0x2
  4209ee:	movsxd rcx,ecx
  4209f1:	mov    QWORD PTR [rsp],r10
  4209f5:	movsxd rsi,r13d
  4209f8:	mov    BYTE PTR [rbx+rcx*1],0x65
  4209fc:	add    rsi,rbx
  4209ff:	call   41fd40 <flatcc_json_parser_table_as_root@@Base+0xae0>
  420a04:	mov    r10,QWORD PTR [rsp]
  420a08:	add    r13d,eax
  420a0b:	jmp    420752 <flatcc_json_parser_table_as_root@@Base+0x14f2>
  420a10:	mov    edx,0x2
  420a15:	jmp    42091c <flatcc_json_parser_table_as_root@@Base+0x16bc>
  420a1a:	call   4202c0 <flatcc_json_parser_table_as_root@@Base+0x1060>
  420a1f:	lea    rcx,[rip+0x10b82]        # 4315a8 <flatcc_builder_padding_base@@Base+0x1ac8>
  420a26:	lea    rsi,[rip+0x10813]        # 431240 <flatcc_builder_padding_base@@Base+0x1760>
  420a2d:	lea    rdi,[rip+0x10884]        # 4312b8 <flatcc_builder_padding_base@@Base+0x17d8>
  420a34:	mov    edx,0x8a
  420a39:	call   405080 <__assert_fail@plt>
  420a3e:	lea    rcx,[rip+0x10b6b]        # 4315b0 <flatcc_builder_padding_base@@Base+0x1ad0>
  420a45:	lea    rsi,[rip+0x107f4]        # 431240 <flatcc_builder_padding_base@@Base+0x1760>
  420a4c:	lea    rdi,[rip+0x109e7]        # 43143a <flatcc_builder_padding_base@@Base+0x195a>
  420a53:	mov    edx,0xbd
  420a58:	call   405080 <__assert_fail@plt>
  420a5d:	nop    DWORD PTR [rax]
  420a60:	push   rbp
  420a61:	push   rbx
  420a62:	mov    rbp,rdi
  420a65:	sub    rsp,0x18
  420a69:	mov    rax,QWORD PTR fs:0x28
  420a72:	mov    QWORD PTR [rsp+0x8],rax
  420a77:	xor    eax,eax
  420a79:	test   rsi,rsi
  420a7c:	mov    DWORD PTR [rsp+0x4],0x0
  420a84:	je     420afb <flatcc_json_parser_table_as_root@@Base+0x189b>
  420a86:	cmp    rdx,0x7
  420a8a:	jbe    420afb <flatcc_json_parser_table_as_root@@Base+0x189b>
  420a8c:	test   rcx,rcx
  420a8f:	je     420ab3 <flatcc_json_parser_table_as_root@@Base+0x1853>
  420a91:	lea    rdi,[rsp+0x4]
  420a96:	mov    rbx,rsi
  420a99:	mov    edx,0x4
  420a9e:	mov    rsi,rcx
  420aa1:	call   405040 <strncpy@plt>
  420aa6:	mov    eax,DWORD PTR [rsp+0x4]
  420aaa:	cmp    DWORD PTR [rbx+0x4],eax
  420aad:	je     420ab3 <flatcc_json_parser_table_as_root@@Base+0x1853>
  420aaf:	test   eax,eax
  420ab1:	jne    420acf <flatcc_json_parser_table_as_root@@Base+0x186f>
  420ab3:	mov    rsi,QWORD PTR [rsp+0x8]
  420ab8:	xor    rsi,QWORD PTR fs:0x28
  420ac1:	mov    eax,0x1
  420ac6:	jne    420b27 <flatcc_json_parser_table_as_root@@Base+0x18c7>
  420ac8:	add    rsp,0x18
  420acc:	pop    rbx
  420acd:	pop    rbp
  420ace:	ret    
  420acf:	cmp    DWORD PTR [rbp+0x3c],0x0
  420ad3:	jne    420adc <flatcc_json_parser_table_as_root@@Base+0x187c>
  420ad5:	mov    DWORD PTR [rbp+0x3c],0x1
  420adc:	lea    rcx,[rip+0x109fd]        # 4314e0 <flatcc_builder_padding_base@@Base+0x1a00>
  420ae3:	lea    rsi,[rip+0x107f6]        # 4312e0 <flatcc_builder_padding_base@@Base+0x1800>
  420aea:	lea    rdi,[rip+0x10961]        # 431452 <flatcc_builder_padding_base@@Base+0x1972>
  420af1:	mov    edx,0x404
  420af6:	call   405080 <__assert_fail@plt>
  420afb:	cmp    DWORD PTR [rbp+0x3c],0x0
  420aff:	jne    420b08 <flatcc_json_parser_table_as_root@@Base+0x18a8>
  420b01:	mov    DWORD PTR [rbp+0x3c],0x1
  420b08:	lea    rcx,[rip+0x109d1]        # 4314e0 <flatcc_builder_padding_base@@Base+0x1a00>
  420b0f:	lea    rsi,[rip+0x107ca]        # 4312e0 <flatcc_builder_padding_base@@Base+0x1800>
  420b16:	lea    rdi,[rip+0x1082b]        # 431348 <flatcc_builder_padding_base@@Base+0x1868>
  420b1d:	mov    edx,0x3fb
  420b22:	call   405080 <__assert_fail@plt>
  420b27:	call   405070 <__stack_chk_fail@plt>
  420b2c:	nop    DWORD PTR [rax+0x0]
  420b30:	test   rdx,rdx
  420b33:	mov    eax,0x2
  420b38:	je     420b64 <flatcc_json_parser_table_as_root@@Base+0x1904>
  420b3a:	mov    eax,ecx
  420b3c:	mov    r9,QWORD PTR [rdx]
  420b3f:	and    eax,0xffffff1f
  420b44:	je     420c58 <flatcc_json_parser_table_as_root@@Base+0x19f8>
  420b4a:	cmp    eax,0x1
  420b4d:	lea    r8,[rip+0x1085c]        # 4313b0 <flatcc_builder_padding_base@@Base+0x18d0>
  420b54:	je     420be4 <flatcc_json_parser_table_as_root@@Base+0x1984>
  420b5a:	xor    ecx,ecx
  420b5c:	mov    eax,0x3
  420b61:	mov    QWORD PTR [rdx],rcx
  420b64:	repz ret 
  420b66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420b70:	movzx  eax,BYTE PTR [rsi]
  420b73:	sub    r9,0x3
  420b77:	add    rdi,0x4
  420b7b:	add    rsi,0x3
  420b7f:	shr    al,0x2
  420b82:	movzx  eax,al
  420b85:	movzx  eax,BYTE PTR [r8+rax*1]
  420b8a:	mov    BYTE PTR [rdi-0x4],al
  420b8d:	movzx  eax,BYTE PTR [rsi-0x3]
  420b91:	movzx  r10d,BYTE PTR [rsi-0x2]
  420b96:	shl    eax,0x4
  420b99:	shr    r10b,0x4
  420b9d:	and    eax,0x30
  420ba0:	movzx  r10d,r10b
  420ba4:	or     eax,r10d
  420ba7:	cdqe   
  420ba9:	movzx  eax,BYTE PTR [r8+rax*1]
  420bae:	mov    BYTE PTR [rdi-0x3],al
  420bb1:	movzx  eax,BYTE PTR [rsi-0x2]
  420bb5:	movzx  r10d,BYTE PTR [rsi-0x1]
  420bba:	shl    eax,0x2
  420bbd:	shr    r10b,0x6
  420bc1:	and    eax,0x3c
  420bc4:	movzx  r10d,r10b
  420bc8:	or     eax,r10d
  420bcb:	cdqe   
  420bcd:	movzx  eax,BYTE PTR [r8+rax*1]
  420bd2:	mov    BYTE PTR [rdi-0x2],al
  420bd5:	movzx  eax,BYTE PTR [rsi-0x1]
  420bd9:	and    eax,0x3f
  420bdc:	movzx  eax,BYTE PTR [r8+rax*1]
  420be1:	mov    BYTE PTR [rdi-0x1],al
  420be4:	cmp    r9,0x2
  420be8:	ja     420b70 <flatcc_json_parser_table_as_root@@Base+0x1910>
  420bea:	mov    eax,ecx
  420bec:	and    eax,0x80
  420bf1:	cmp    r9,0x1
  420bf5:	je     420c68 <flatcc_json_parser_table_as_root@@Base+0x1a08>
  420bf7:	cmp    r9,0x2
  420bfb:	jne    420c4b <flatcc_json_parser_table_as_root@@Base+0x19eb>
  420bfd:	movzx  ecx,BYTE PTR [rsi]
  420c00:	shr    cl,0x2
  420c03:	movzx  ecx,cl
  420c06:	movzx  ecx,BYTE PTR [r8+rcx*1]
  420c0b:	mov    BYTE PTR [rdi],cl
  420c0d:	movzx  ecx,BYTE PTR [rsi]
  420c10:	movzx  r9d,BYTE PTR [rsi+0x1]
  420c15:	shl    ecx,0x4
  420c18:	shr    r9b,0x4
  420c1c:	and    ecx,0x30
  420c1f:	movzx  r9d,r9b
  420c23:	or     ecx,r9d
  420c26:	movsxd rcx,ecx
  420c29:	movzx  ecx,BYTE PTR [r8+rcx*1]
  420c2e:	mov    BYTE PTR [rdi+0x1],cl
  420c31:	movzx  ecx,BYTE PTR [rsi+0x1]
  420c35:	shl    ecx,0x2
  420c38:	and    ecx,0x3c
  420c3b:	test   eax,eax
  420c3d:	movzx  ecx,BYTE PTR [r8+rcx*1]
  420c42:	mov    BYTE PTR [rdi+0x2],cl
  420c45:	je     420c98 <flatcc_json_parser_table_as_root@@Base+0x1a38>
  420c47:	mov    BYTE PTR [rdi+0x3],0x3d
  420c4b:	mov    rcx,QWORD PTR [rdx]
  420c4e:	xor    eax,eax
  420c50:	jmp    420b61 <flatcc_json_parser_table_as_root@@Base+0x1901>
  420c55:	nop    DWORD PTR [rax]
  420c58:	lea    r8,[rip+0x10709]        # 431368 <flatcc_builder_padding_base@@Base+0x1888>
  420c5f:	jmp    420be4 <flatcc_json_parser_table_as_root@@Base+0x1984>
  420c61:	nop    DWORD PTR [rax+0x0]
  420c68:	movzx  ecx,BYTE PTR [rsi]
  420c6b:	shr    cl,0x2
  420c6e:	movzx  ecx,cl
  420c71:	movzx  ecx,BYTE PTR [r8+rcx*1]
  420c76:	mov    BYTE PTR [rdi],cl
  420c78:	movzx  ecx,BYTE PTR [rsi]
  420c7b:	shl    ecx,0x4
  420c7e:	and    ecx,0x30
  420c81:	test   eax,eax
  420c83:	movzx  ecx,BYTE PTR [r8+rcx*1]
  420c88:	mov    BYTE PTR [rdi+0x1],cl
  420c8b:	je     420c98 <flatcc_json_parser_table_as_root@@Base+0x1a38>
  420c8d:	mov    BYTE PTR [rdi+0x2],0x3d
  420c91:	jmp    420c47 <flatcc_json_parser_table_as_root@@Base+0x19e7>
  420c93:	nop    DWORD PTR [rax+rax*1+0x0]
  420c98:	mov    rcx,QWORD PTR [rdx]
  420c9b:	jmp    420b61 <flatcc_json_parser_table_as_root@@Base+0x1901>
  420ca0:	push   r14
  420ca2:	push   r13
  420ca4:	mov    r14,rdx
  420ca7:	push   r12
  420ca9:	push   rbp
  420caa:	mov    r12,rdi
  420cad:	push   rbx
  420cae:	mov    rax,QWORD PTR [rdi+0x28]
  420cb2:	mov    rbp,rsi
  420cb5:	lea    rdx,[rax+0x1]
  420cb9:	mov    QWORD PTR [rdi+0x28],rdx
  420cbd:	mov    BYTE PTR [rax],0x22
  420cc0:	movzx  ebx,BYTE PTR [rsi]
  420cc3:	cmp    bl,0x22
  420cc6:	je     420df7 <flatcc_json_parser_table_as_root@@Base+0x1b97>
  420ccc:	nop    DWORD PTR [rax+0x0]
  420cd0:	cmp    bl,0x1f
  420cd3:	jbe    420df7 <flatcc_json_parser_table_as_root@@Base+0x1b97>
  420cd9:	cmp    bl,0x5c
  420cdc:	je     420df7 <flatcc_json_parser_table_as_root@@Base+0x1b97>
  420ce2:	nop    WORD PTR [rax+rax*1+0x0]
  420ce8:	add    rbp,0x1
  420cec:	movzx  ebx,BYTE PTR [rbp+0x0]
  420cf0:	cmp    bl,0x1f
  420cf3:	jbe    420cff <flatcc_json_parser_table_as_root@@Base+0x1a9f>
  420cf5:	cmp    bl,0x22
  420cf8:	je     420cff <flatcc_json_parser_table_as_root@@Base+0x1a9f>
  420cfa:	cmp    bl,0x5c
  420cfd:	jne    420ce8 <flatcc_json_parser_table_as_root@@Base+0x1a88>
  420cff:	mov    r13,rbp
  420d02:	sub    r13,rsi
  420d05:	mov    rdi,QWORD PTR [r12+0x28]
  420d0a:	mov    rdx,r13
  420d0d:	lea    rax,[rdi+r13*1]
  420d11:	cmp    QWORD PTR [r12+0x20],rax
  420d16:	jbe    420e30 <flatcc_json_parser_table_as_root@@Base+0x1bd0>
  420d1c:	call   4050e0 <memcpy@plt>
  420d21:	mov    rax,r13
  420d24:	add    rax,QWORD PTR [r12+0x28]
  420d29:	sub    r14,r13
  420d2c:	lea    rdx,[rax+0x1]
  420d30:	mov    QWORD PTR [r12+0x28],rax
  420d35:	mov    QWORD PTR [r12+0x28],rdx
  420d3a:	je     420e4f <flatcc_json_parser_table_as_root@@Base+0x1bef>
  420d40:	cmp    bl,0xc
  420d43:	mov    BYTE PTR [rax],0x5c
  420d46:	je     420e60 <flatcc_json_parser_table_as_root@@Base+0x1c00>
  420d4c:	ja     420e00 <flatcc_json_parser_table_as_root@@Base+0x1ba0>
  420d52:	cmp    bl,0x9
  420d55:	je     420ef0 <flatcc_json_parser_table_as_root@@Base+0x1c90>
  420d5b:	cmp    bl,0xa
  420d5e:	je     420ed0 <flatcc_json_parser_table_as_root@@Base+0x1c70>
  420d64:	cmp    bl,0x8
  420d67:	je     420eb6 <flatcc_json_parser_table_as_root@@Base+0x1c56>
  420d6d:	mov    rax,QWORD PTR [r12+0x28]
  420d72:	mov    ecx,ebx
  420d74:	shr    cl,0x4
  420d77:	cmp    cl,0xa
  420d7a:	lea    rdx,[rax+0x1]
  420d7e:	mov    QWORD PTR [r12+0x28],rdx
  420d83:	mov    BYTE PTR [rax],0x75
  420d86:	mov    rax,QWORD PTR [r12+0x28]
  420d8b:	lea    rdx,[rax+0x1]
  420d8f:	mov    QWORD PTR [r12+0x28],rdx
  420d94:	mov    BYTE PTR [rax],0x30
  420d97:	mov    rax,QWORD PTR [r12+0x28]
  420d9c:	lea    rdx,[rax+0x1]
  420da0:	mov    QWORD PTR [r12+0x28],rdx
  420da5:	mov    BYTE PTR [rax],0x30
  420da8:	sbb    eax,eax
  420daa:	mov    rdx,QWORD PTR [r12+0x28]
  420daf:	and    eax,0xffffffd9
  420db2:	and    ebx,0xf
  420db5:	lea    eax,[rax+rcx*1+0x57]
  420db9:	cmp    bl,0xa
  420dbc:	lea    rsi,[rdx+0x1]
  420dc0:	mov    QWORD PTR [r12+0x28],rsi
  420dc5:	mov    BYTE PTR [rdx],al
  420dc7:	sbb    eax,eax
  420dc9:	mov    rdx,QWORD PTR [r12+0x28]
  420dce:	and    eax,0xffffffd9
  420dd1:	lea    ebx,[rax+rbx*1+0x57]
  420dd5:	lea    rcx,[rdx+0x1]
  420dd9:	mov    QWORD PTR [r12+0x28],rcx
  420dde:	mov    BYTE PTR [rdx],bl
  420de0:	lea    rsi,[rbp+0x1]
  420de4:	movzx  ebx,BYTE PTR [rsi]
  420de7:	sub    r14,0x1
  420deb:	mov    rbp,rsi
  420dee:	cmp    bl,0x22
  420df1:	jne    420cd0 <flatcc_json_parser_table_as_root@@Base+0x1a70>
  420df7:	xor    r13d,r13d
  420dfa:	jmp    420d05 <flatcc_json_parser_table_as_root@@Base+0x1aa5>
  420dff:	nop
  420e00:	cmp    bl,0x22
  420e03:	je     420ea0 <flatcc_json_parser_table_as_root@@Base+0x1c40>
  420e09:	cmp    bl,0x5c
  420e0c:	je     420e80 <flatcc_json_parser_table_as_root@@Base+0x1c20>
  420e0e:	cmp    bl,0xd
  420e11:	jne    420d6d <flatcc_json_parser_table_as_root@@Base+0x1b0d>
  420e17:	mov    rax,QWORD PTR [r12+0x28]
  420e1c:	lea    rdx,[rax+0x1]
  420e20:	mov    QWORD PTR [r12+0x28],rdx
  420e25:	mov    BYTE PTR [rax],0x72
  420e28:	jmp    420de0 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420e2a:	nop    WORD PTR [rax+rax*1+0x0]
  420e30:	mov    rdi,r12
  420e33:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  420e38:	mov    rax,QWORD PTR [r12+0x28]
  420e3d:	sub    r14,r13
  420e40:	lea    rdx,[rax+0x1]
  420e44:	mov    QWORD PTR [r12+0x28],rdx
  420e49:	jne    420d40 <flatcc_json_parser_table_as_root@@Base+0x1ae0>
  420e4f:	mov    BYTE PTR [rax],0x22
  420e52:	pop    rbx
  420e53:	pop    rbp
  420e54:	pop    r12
  420e56:	pop    r13
  420e58:	pop    r14
  420e5a:	ret    
  420e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  420e60:	mov    rax,QWORD PTR [r12+0x28]
  420e65:	lea    rdx,[rax+0x1]
  420e69:	mov    QWORD PTR [r12+0x28],rdx
  420e6e:	mov    BYTE PTR [rax],0x66
  420e71:	jmp    420de0 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420e76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420e80:	mov    rax,QWORD PTR [r12+0x28]
  420e85:	lea    rdx,[rax+0x1]
  420e89:	mov    QWORD PTR [r12+0x28],rdx
  420e8e:	mov    BYTE PTR [rax],0x5c
  420e91:	jmp    420de0 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ea0:	mov    rax,QWORD PTR [r12+0x28]
  420ea5:	lea    rdx,[rax+0x1]
  420ea9:	mov    QWORD PTR [r12+0x28],rdx
  420eae:	mov    BYTE PTR [rax],0x22
  420eb1:	jmp    420de0 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420eb6:	mov    rax,QWORD PTR [r12+0x28]
  420ebb:	lea    rdx,[rax+0x1]
  420ebf:	mov    QWORD PTR [r12+0x28],rdx
  420ec4:	mov    BYTE PTR [rax],0x62
  420ec7:	jmp    420de0 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420ecc:	nop    DWORD PTR [rax+0x0]
  420ed0:	mov    rax,QWORD PTR [r12+0x28]
  420ed5:	lea    rdx,[rax+0x1]
  420ed9:	mov    QWORD PTR [r12+0x28],rdx
  420ede:	mov    BYTE PTR [rax],0x6e
  420ee1:	jmp    420de0 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420ef0:	mov    rax,QWORD PTR [r12+0x28]
  420ef5:	lea    rdx,[rax+0x1]
  420ef9:	mov    QWORD PTR [r12+0x28],rdx
  420efe:	mov    BYTE PTR [rax],0x74
  420f01:	jmp    420de0 <flatcc_json_parser_table_as_root@@Base+0x1b80>
  420f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420f10:	push   r13
  420f12:	push   r12
  420f14:	mov    r13,rsi
  420f17:	push   rbp
  420f18:	push   rbx
  420f19:	mov    rbp,rdx
  420f1c:	mov    rbx,rdi
  420f1f:	sub    rsp,0x8
  420f23:	cmp    BYTE PTR [rdi+0x31],0x0
  420f27:	jne    420fd0 <flatcc_json_parser_table_as_root@@Base+0x1d70>
  420f2d:	mov    rsi,QWORD PTR [rdi+0x28]
  420f31:	cmp    rsi,QWORD PTR [rdi+0x20]
  420f35:	jae    420fa8 <flatcc_json_parser_table_as_root@@Base+0x1d48>
  420f37:	mov    BYTE PTR [rsi],0x22
  420f3a:	xor    edi,edi
  420f3c:	cmp    BYTE PTR [rbx+0x32],0x0
  420f40:	mov    rdx,rbp
  420f43:	mov    rsi,r13
  420f46:	sete   dil
  420f4a:	add    rdi,QWORD PTR [rbx+0x28]
  420f4e:	lea    rax,[rdi+rbp*1]
  420f52:	cmp    QWORD PTR [rbx+0x20],rax
  420f56:	mov    QWORD PTR [rbx+0x28],rdi
  420f5a:	ja     420fb8 <flatcc_json_parser_table_as_root@@Base+0x1d58>
  420f5c:	mov    rdi,rbx
  420f5f:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  420f64:	mov    rbp,QWORD PTR [rbx+0x28]
  420f68:	mov    BYTE PTR [rbp+0x0],0x22
  420f6c:	xor    eax,eax
  420f6e:	cmp    BYTE PTR [rbx+0x32],0x0
  420f72:	sete   al
  420f75:	add    rax,QWORD PTR [rbx+0x28]
  420f79:	lea    rdx,[rax+0x1]
  420f7d:	mov    QWORD PTR [rbx+0x28],rdx
  420f81:	mov    BYTE PTR [rax],0x3a
  420f84:	mov    rax,QWORD PTR [rbx+0x28]
  420f88:	mov    BYTE PTR [rax],0x20
  420f8b:	xor    eax,eax
  420f8d:	cmp    BYTE PTR [rbx+0x31],0x0
  420f91:	setne  al
  420f94:	add    QWORD PTR [rbx+0x28],rax
  420f98:	add    rsp,0x8
  420f9c:	pop    rbx
  420f9d:	pop    rbp
  420f9e:	pop    r12
  420fa0:	pop    r13
  420fa2:	ret    
  420fa3:	nop    DWORD PTR [rax+rax*1+0x0]
  420fa8:	xor    esi,esi
  420faa:	call   QWORD PTR [rdi+0x48]
  420fad:	mov    rsi,QWORD PTR [rbx+0x28]
  420fb1:	jmp    420f37 <flatcc_json_parser_table_as_root@@Base+0x1cd7>
  420fb3:	nop    DWORD PTR [rax+rax*1+0x0]
  420fb8:	call   4050e0 <memcpy@plt>
  420fbd:	add    rbp,QWORD PTR [rbx+0x28]
  420fc1:	mov    QWORD PTR [rbx+0x28],rbp
  420fc5:	jmp    420f68 <flatcc_json_parser_table_as_root@@Base+0x1d08>
  420fc7:	nop    WORD PTR [rax+rax*1+0x0]
  420fd0:	mov    rax,QWORD PTR [rdi+0x28]
  420fd4:	lea    rdx,[rax+0x1]
  420fd8:	mov    QWORD PTR [rdi+0x28],rdx
  420fdc:	mov    BYTE PTR [rax],0xa
  420fdf:	movzx  esi,BYTE PTR [rdi+0x31]
  420fe3:	imul   esi,DWORD PTR [rdi+0x38]
  420fe7:	mov    rdi,QWORD PTR [rdi+0x28]
  420feb:	movsxd r12,esi
  420fee:	lea    rax,[rdi+r12*1]
  420ff2:	cmp    QWORD PTR [rbx+0x20],rax
  420ff6:	jb     421018 <flatcc_json_parser_table_as_root@@Base+0x1db8>
  420ff8:	mov    esi,0x20
  420ffd:	mov    rdx,r12
  421000:	call   405090 <memset@plt>
  421005:	mov    rsi,r12
  421008:	add    rsi,QWORD PTR [rbx+0x28]
  42100c:	mov    QWORD PTR [rbx+0x28],rsi
  421010:	jmp    420f37 <flatcc_json_parser_table_as_root@@Base+0x1cd7>
  421015:	nop    DWORD PTR [rax]
  421018:	mov    rsi,r12
  42101b:	mov    rdi,rbx
  42101e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421023:	mov    rsi,QWORD PTR [rbx+0x28]
  421027:	jmp    420f37 <flatcc_json_parser_table_as_root@@Base+0x1cd7>
  42102c:	nop    DWORD PTR [rax+0x0]

0000000000421030 <flatcc_json_printer_error_string@@Base>:
  421030:	cmp    edi,0x1
  421033:	lea    rax,[rip+0x10433]        # 43146d <flatcc_builder_padding_base@@Base+0x198d>
  42103a:	je     421056 <flatcc_json_printer_error_string@@Base+0x26>
  42103c:	jle    421060 <flatcc_json_printer_error_string@@Base+0x30>
  42103e:	cmp    edi,0x2
  421041:	lea    rax,[rip+0x1042f]        # 431477 <flatcc_builder_padding_base@@Base+0x1997>
  421048:	je     421056 <flatcc_json_printer_error_string@@Base+0x26>
  42104a:	cmp    edi,0x3
  42104d:	lea    rax,[rip+0xed97]        # 42fdeb <flatcc_builder_padding_base@@Base+0x30b>
  421054:	jne    42106b <flatcc_json_printer_error_string@@Base+0x3b>
  421056:	repz ret 
  421058:	nop    DWORD PTR [rax+rax*1+0x0]
  421060:	test   edi,edi
  421062:	lea    rax,[rip+0xec77]        # 42fce0 <flatcc_builder_padding_base@@Base+0x200>
  421069:	je     421056 <flatcc_json_printer_error_string@@Base+0x26>
  42106b:	lea    rax,[rip+0xee18]        # 42fe8a <flatcc_builder_padding_base@@Base+0x3aa>
  421072:	ret    
  421073:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42107e:	xchg   ax,ax

0000000000421080 <flatcc_json_printer_fmt_float@@Base>:
  421080:	vcvtss2sd xmm0,xmm0,xmm0
  421084:	jmp    4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  421089:	nop    DWORD PTR [rax+0x0]

0000000000421090 <flatcc_json_printer_fmt_double@@Base>:
  421090:	jmp    4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  421095:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004210a0 <flatcc_json_printer_fmt_bool@@Base>:
  4210a0:	test   esi,esi
  4210a2:	jne    4210b8 <flatcc_json_printer_fmt_bool@@Base+0x18>
  4210a4:	mov    DWORD PTR [rdi],0x736c6166
  4210aa:	mov    BYTE PTR [rdi+0x4],0x65
  4210ae:	mov    eax,0x5
  4210b3:	ret    
  4210b4:	nop    DWORD PTR [rax+0x0]
  4210b8:	mov    DWORD PTR [rdi],0x65757274
  4210be:	mov    eax,0x4
  4210c3:	ret    
  4210c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4210cf:	nop

00000000004210d0 <flatcc_json_printer_string@@Base>:
  4210d0:	movsxd rdx,edx
  4210d3:	jmp    420ca0 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  4210d8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004210e0 <flatcc_json_printer_write@@Base>:
  4210e0:	push   rbp
  4210e1:	push   rbx
  4210e2:	movsxd rbp,edx
  4210e5:	sub    rsp,0x8
  4210e9:	mov    rax,QWORD PTR [rdi+0x28]
  4210ed:	lea    rdx,[rax+rbp*1]
  4210f1:	cmp    QWORD PTR [rdi+0x20],rdx
  4210f5:	jbe    421110 <flatcc_json_printer_write@@Base+0x30>
  4210f7:	mov    rbx,rdi
  4210fa:	mov    rdx,rbp
  4210fd:	mov    rdi,rax
  421100:	call   4050e0 <memcpy@plt>
  421105:	add    QWORD PTR [rbx+0x28],rbp
  421109:	add    rsp,0x8
  42110d:	pop    rbx
  42110e:	pop    rbp
  42110f:	ret    
  421110:	add    rsp,0x8
  421114:	mov    rdx,rbp
  421117:	pop    rbx
  421118:	pop    rbp
  421119:	jmp    41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42111e:	xchg   ax,ax

0000000000421120 <flatcc_json_printer_nl@@Base>:
  421120:	mov    rax,QWORD PTR [rdi+0x28]
  421124:	lea    rdx,[rax+0x1]
  421128:	mov    QWORD PTR [rdi+0x28],rdx
  42112c:	mov    BYTE PTR [rax],0xa
  42112f:	mov    rax,QWORD PTR [rdi+0x20]
  421133:	cmp    QWORD PTR [rdi+0x28],rax
  421137:	jae    421140 <flatcc_json_printer_nl@@Base+0x20>
  421139:	repz ret 
  42113b:	nop    DWORD PTR [rax+rax*1+0x0]
  421140:	mov    rax,QWORD PTR [rdi+0x48]
  421144:	xor    esi,esi
  421146:	jmp    rax
  421148:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421150 <flatcc_json_printer_char@@Base>:
  421150:	mov    rax,QWORD PTR [rdi+0x28]
  421154:	lea    rdx,[rax+0x1]
  421158:	mov    QWORD PTR [rdi+0x28],rdx
  42115c:	mov    BYTE PTR [rax],sil
  42115f:	ret    

0000000000421160 <flatcc_json_printer_indent@@Base>:
  421160:	push   rbp
  421161:	push   rbx
  421162:	sub    rsp,0x8
  421166:	movzx  ebp,BYTE PTR [rdi+0x31]
  42116a:	mov    rax,QWORD PTR [rdi+0x28]
  42116e:	imul   ebp,DWORD PTR [rdi+0x38]
  421172:	movsxd rbp,ebp
  421175:	lea    rdx,[rax+rbp*1]
  421179:	cmp    QWORD PTR [rdi+0x20],rdx
  42117d:	jb     4211a0 <flatcc_json_printer_indent@@Base+0x40>
  42117f:	mov    rbx,rdi
  421182:	mov    rdx,rbp
  421185:	mov    esi,0x20
  42118a:	mov    rdi,rax
  42118d:	call   405090 <memset@plt>
  421192:	add    QWORD PTR [rbx+0x28],rbp
  421196:	add    rsp,0x8
  42119a:	pop    rbx
  42119b:	pop    rbp
  42119c:	ret    
  42119d:	nop    DWORD PTR [rax]
  4211a0:	add    rsp,0x8
  4211a4:	mov    rsi,rbp
  4211a7:	pop    rbx
  4211a8:	pop    rbp
  4211a9:	jmp    41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4211ae:	xchg   ax,ax

00000000004211b0 <flatcc_json_printer_add_level@@Base>:
  4211b0:	add    DWORD PTR [rdi+0x38],esi
  4211b3:	ret    
  4211b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4211bf:	nop

00000000004211c0 <flatcc_json_printer_get_level@@Base>:
  4211c0:	mov    eax,DWORD PTR [rdi+0x38]
  4211c3:	ret    
  4211c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4211cf:	nop

00000000004211d0 <flatcc_json_printer_uint8@@Base>:
  4211d0:	push   rbx
  4211d1:	mov    rbx,rdi
  4211d4:	movzx  edi,sil
  4211d8:	mov    rsi,QWORD PTR [rbx+0x28]
  4211dc:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  4211e1:	cdqe   
  4211e3:	add    QWORD PTR [rbx+0x28],rax
  4211e7:	pop    rbx
  4211e8:	ret    
  4211e9:	nop    DWORD PTR [rax+0x0]

00000000004211f0 <flatcc_json_printer_uint16@@Base>:
  4211f0:	push   rbx
  4211f1:	mov    rbx,rdi
  4211f4:	movzx  edi,si
  4211f7:	mov    rsi,QWORD PTR [rbx+0x28]
  4211fb:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  421200:	cdqe   
  421202:	add    QWORD PTR [rbx+0x28],rax
  421206:	pop    rbx
  421207:	ret    
  421208:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421210 <flatcc_json_printer_uint32@@Base>:
  421210:	mov    r10,rdi
  421213:	mov    edi,esi
  421215:	mov    rsi,QWORD PTR [r10+0x28]
  421219:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  42121e:	cdqe   
  421220:	add    QWORD PTR [r10+0x28],rax
  421224:	ret    
  421225:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000421230 <flatcc_json_printer_uint64@@Base>:
  421230:	push   rbx
  421231:	mov    rbx,rdi
  421234:	mov    rdi,rsi
  421237:	mov    rsi,QWORD PTR [rbx+0x28]
  42123b:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  421240:	cdqe   
  421242:	add    QWORD PTR [rbx+0x28],rax
  421246:	pop    rbx
  421247:	ret    
  421248:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421250 <flatcc_json_printer_int8@@Base>:
  421250:	mov    eax,esi
  421252:	mov    r9,rdi
  421255:	mov    edi,esi
  421257:	movsx  r8d,al
  42125b:	mov    rsi,QWORD PTR [r9+0x28]
  42125f:	shr    r8d,0x1f
  421263:	test   al,al
  421265:	jns    421270 <flatcc_json_printer_int8@@Base+0x20>
  421267:	mov    BYTE PTR [rsi],0x2d
  42126a:	neg    edi
  42126c:	add    rsi,0x1
  421270:	movzx  edi,dil
  421274:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  421279:	add    r8d,eax
  42127c:	movsxd r8,r8d
  42127f:	add    QWORD PTR [r9+0x28],r8
  421283:	ret    
  421284:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42128f:	nop

0000000000421290 <flatcc_json_printer_int16@@Base>:
  421290:	mov    eax,esi
  421292:	push   rbx
  421293:	mov    rbx,rdi
  421296:	movsx  r11d,ax
  42129a:	mov    edi,esi
  42129c:	mov    rsi,QWORD PTR [rbx+0x28]
  4212a0:	shr    r11d,0x1f
  4212a4:	test   ax,ax
  4212a7:	jns    4212b2 <flatcc_json_printer_int16@@Base+0x22>
  4212a9:	mov    BYTE PTR [rsi],0x2d
  4212ac:	neg    edi
  4212ae:	add    rsi,0x1
  4212b2:	movzx  edi,di
  4212b5:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  4212ba:	add    r11d,eax
  4212bd:	movsxd r11,r11d
  4212c0:	add    QWORD PTR [rbx+0x28],r11
  4212c4:	pop    rbx
  4212c5:	ret    
  4212c6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004212d0 <flatcc_json_printer_int32@@Base>:
  4212d0:	mov    r11,rdi
  4212d3:	mov    edi,esi
  4212d5:	mov    r10d,edi
  4212d8:	mov    rsi,QWORD PTR [r11+0x28]
  4212dc:	shr    r10d,0x1f
  4212e0:	test   edi,edi
  4212e2:	jns    4212ed <flatcc_json_printer_int32@@Base+0x1d>
  4212e4:	mov    BYTE PTR [rsi],0x2d
  4212e7:	neg    edi
  4212e9:	add    rsi,0x1
  4212ed:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  4212f2:	add    r10d,eax
  4212f5:	movsxd r10,r10d
  4212f8:	add    QWORD PTR [r11+0x28],r10
  4212fc:	ret    
  4212fd:	nop    DWORD PTR [rax]

0000000000421300 <flatcc_json_printer_int64@@Base>:
  421300:	push   rbp
  421301:	push   rbx
  421302:	mov    rbx,rdi
  421305:	mov    rdi,rsi
  421308:	mov    rsi,QWORD PTR [rbx+0x28]
  42130c:	mov    rbp,rdi
  42130f:	shr    rbp,0x3f
  421313:	test   rdi,rdi
  421316:	jns    421322 <flatcc_json_printer_int64@@Base+0x22>
  421318:	mov    BYTE PTR [rsi],0x2d
  42131b:	neg    rdi
  42131e:	add    rsi,0x1
  421322:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  421327:	add    eax,ebp
  421329:	cdqe   
  42132b:	add    QWORD PTR [rbx+0x28],rax
  42132f:	pop    rbx
  421330:	pop    rbp
  421331:	ret    
  421332:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42133d:	nop    DWORD PTR [rax]

0000000000421340 <flatcc_json_printer_float@@Base>:
  421340:	push   rbx
  421341:	mov    rbx,rdi
  421344:	mov    rdi,QWORD PTR [rdi+0x28]
  421348:	vcvtss2sd xmm0,xmm0,xmm0
  42134c:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  421351:	cdqe   
  421353:	add    QWORD PTR [rbx+0x28],rax
  421357:	pop    rbx
  421358:	ret    
  421359:	nop    DWORD PTR [rax+0x0]

0000000000421360 <flatcc_json_printer_double@@Base>:
  421360:	push   rbx
  421361:	mov    rbx,rdi
  421364:	mov    rdi,QWORD PTR [rdi+0x28]
  421368:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  42136d:	cdqe   
  42136f:	add    QWORD PTR [rbx+0x28],rax
  421373:	pop    rbx
  421374:	ret    
  421375:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000421380 <flatcc_json_printer_enum@@Base>:
  421380:	push   rbp
  421381:	push   rbx
  421382:	mov    rbx,rdi
  421385:	movsxd rbp,edx
  421388:	sub    rsp,0x8
  42138c:	mov    rax,QWORD PTR [rdi+0x28]
  421390:	mov    rdx,rbp
  421393:	mov    BYTE PTR [rax],0x22
  421396:	cmp    BYTE PTR [rdi+0x32],0x0
  42139a:	sete   dil
  42139e:	movzx  edi,dil
  4213a2:	add    rdi,QWORD PTR [rbx+0x28]
  4213a6:	lea    rax,[rdi+rbp*1]
  4213aa:	cmp    QWORD PTR [rbx+0x20],rax
  4213ae:	mov    QWORD PTR [rbx+0x28],rdi
  4213b2:	ja     4213e0 <flatcc_json_printer_enum@@Base+0x60>
  4213b4:	mov    rdi,rbx
  4213b7:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4213bc:	mov    rbp,QWORD PTR [rbx+0x28]
  4213c0:	mov    BYTE PTR [rbp+0x0],0x22
  4213c4:	xor    eax,eax
  4213c6:	cmp    BYTE PTR [rbx+0x32],0x0
  4213ca:	sete   al
  4213cd:	add    QWORD PTR [rbx+0x28],rax
  4213d1:	add    rsp,0x8
  4213d5:	pop    rbx
  4213d6:	pop    rbp
  4213d7:	ret    
  4213d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4213e0:	call   4050e0 <memcpy@plt>
  4213e5:	add    rbp,QWORD PTR [rbx+0x28]
  4213e9:	mov    QWORD PTR [rbx+0x28],rbp
  4213ed:	jmp    4213c0 <flatcc_json_printer_enum@@Base+0x40>
  4213ef:	nop

00000000004213f0 <flatcc_json_printer_delimit_enum_flags@@Base>:
  4213f0:	cmp    BYTE PTR [rdi+0x32],0x0
  4213f4:	sete   al
  4213f7:	test   esi,esi
  4213f9:	setne  dl
  4213fc:	or     eax,edx
  4213fe:	mov    rdx,QWORD PTR [rdi+0x28]
  421402:	movzx  eax,al
  421405:	mov    BYTE PTR [rdx],0x22
  421408:	add    QWORD PTR [rdi+0x28],rax
  42140c:	ret    
  42140d:	nop    DWORD PTR [rax]

0000000000421410 <flatcc_json_printer_enum_flag@@Base>:
  421410:	push   rbp
  421411:	push   rbx
  421412:	movsxd rbp,ecx
  421415:	mov    r8,rdx
  421418:	sub    rsp,0x8
  42141c:	mov    rax,QWORD PTR [rdi+0x28]
  421420:	mov    BYTE PTR [rax],0x20
  421423:	xor    eax,eax
  421425:	test   esi,esi
  421427:	setg   al
  42142a:	add    rax,QWORD PTR [rdi+0x28]
  42142e:	lea    rdx,[rax+rbp*1]
  421432:	cmp    QWORD PTR [rdi+0x20],rdx
  421436:	mov    QWORD PTR [rdi+0x28],rax
  42143a:	jbe    421460 <flatcc_json_printer_enum_flag@@Base+0x50>
  42143c:	mov    rbx,rdi
  42143f:	mov    rdx,rbp
  421442:	mov    rsi,r8
  421445:	mov    rdi,rax
  421448:	call   4050e0 <memcpy@plt>
  42144d:	add    QWORD PTR [rbx+0x28],rbp
  421451:	add    rsp,0x8
  421455:	pop    rbx
  421456:	pop    rbp
  421457:	ret    
  421458:	nop    DWORD PTR [rax+rax*1+0x0]
  421460:	add    rsp,0x8
  421464:	mov    rdx,rbp
  421467:	mov    rsi,r8
  42146a:	pop    rbx
  42146b:	pop    rbp
  42146c:	jmp    41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421471:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42147c:	nop    DWORD PTR [rax+0x0]

0000000000421480 <flatcc_json_printer_string_field@@Base>:
  421480:	lea    eax,[rdx+rdx*1+0x4]
  421484:	cmp    eax,DWORD PTR [rsi+0x10]
  421487:	jl     421490 <flatcc_json_printer_string_field@@Base+0x10>
  421489:	ret    
  42148a:	nop    WORD PTR [rax+rax*1+0x0]
  421490:	push   r14
  421492:	push   r13
  421494:	push   r12
  421496:	push   rbp
  421497:	push   rbx
  421498:	mov    rdx,QWORD PTR [rsi+0x8]
  42149c:	movzx  r12d,WORD PTR [rdx+rax*1]
  4214a1:	test   r12w,r12w
  4214a5:	je     421590 <flatcc_json_printer_string_field@@Base+0x110>
  4214ab:	add    r12,QWORD PTR [rsi]
  4214ae:	je     421590 <flatcc_json_printer_string_field@@Base+0x110>
  4214b4:	mov    eax,DWORD PTR [rsi+0x18]
  4214b7:	lea    edx,[rax+0x1]
  4214ba:	test   eax,eax
  4214bc:	mov    DWORD PTR [rsi+0x18],edx
  4214bf:	je     4214d0 <flatcc_json_printer_string_field@@Base+0x50>
  4214c1:	mov    rax,QWORD PTR [rdi+0x28]
  4214c5:	lea    rdx,[rax+0x1]
  4214c9:	mov    QWORD PTR [rdi+0x28],rdx
  4214cd:	mov    BYTE PTR [rax],0x2c
  4214d0:	cmp    BYTE PTR [rdi+0x31],0x0
  4214d4:	mov    r14,rcx
  4214d7:	mov    rbx,rdi
  4214da:	movsxd rbp,r8d
  4214dd:	jne    4215a0 <flatcc_json_printer_string_field@@Base+0x120>
  4214e3:	mov    rsi,QWORD PTR [rdi+0x28]
  4214e7:	cmp    rsi,QWORD PTR [rdi+0x20]
  4214eb:	jb     4214f6 <flatcc_json_printer_string_field@@Base+0x76>
  4214ed:	xor    esi,esi
  4214ef:	call   QWORD PTR [rdi+0x48]
  4214f2:	mov    rsi,QWORD PTR [rbx+0x28]
  4214f6:	mov    BYTE PTR [rsi],0x22
  4214f9:	xor    edi,edi
  4214fb:	cmp    BYTE PTR [rbx+0x32],0x0
  4214ff:	mov    rdx,rbp
  421502:	mov    rsi,r14
  421505:	sete   dil
  421509:	add    rdi,QWORD PTR [rbx+0x28]
  42150d:	lea    rax,[rdi+rbp*1]
  421511:	cmp    QWORD PTR [rbx+0x20],rax
  421515:	mov    QWORD PTR [rbx+0x28],rdi
  421519:	ja     421578 <flatcc_json_printer_string_field@@Base+0xf8>
  42151b:	mov    rdi,rbx
  42151e:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421523:	mov    rbp,QWORD PTR [rbx+0x28]
  421527:	mov    BYTE PTR [rbp+0x0],0x22
  42152b:	xor    eax,eax
  42152d:	cmp    BYTE PTR [rbx+0x32],0x0
  421531:	mov    rdi,rbx
  421534:	sete   al
  421537:	add    rax,QWORD PTR [rbx+0x28]
  42153b:	lea    rdx,[rax+0x1]
  42153f:	mov    QWORD PTR [rbx+0x28],rdx
  421543:	mov    BYTE PTR [rax],0x3a
  421546:	mov    rax,QWORD PTR [rbx+0x28]
  42154a:	mov    BYTE PTR [rax],0x20
  42154d:	xor    eax,eax
  42154f:	mov    esi,DWORD PTR [r12]
  421553:	cmp    BYTE PTR [rbx+0x31],0x0
  421557:	setne  al
  42155a:	add    rsi,r12
  42155d:	add    QWORD PTR [rbx+0x28],rax
  421561:	pop    rbx
  421562:	mov    edx,DWORD PTR [rsi]
  421564:	add    rsi,0x4
  421568:	pop    rbp
  421569:	pop    r12
  42156b:	pop    r13
  42156d:	pop    r14
  42156f:	jmp    420ca0 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  421574:	nop    DWORD PTR [rax+0x0]
  421578:	call   4050e0 <memcpy@plt>
  42157d:	add    rbp,QWORD PTR [rbx+0x28]
  421581:	mov    QWORD PTR [rbx+0x28],rbp
  421585:	jmp    421527 <flatcc_json_printer_string_field@@Base+0xa7>
  421587:	nop    WORD PTR [rax+rax*1+0x0]
  421590:	pop    rbx
  421591:	pop    rbp
  421592:	pop    r12
  421594:	pop    r13
  421596:	pop    r14
  421598:	ret    
  421599:	nop    DWORD PTR [rax+0x0]
  4215a0:	mov    rax,QWORD PTR [rdi+0x28]
  4215a4:	lea    rdx,[rax+0x1]
  4215a8:	mov    QWORD PTR [rdi+0x28],rdx
  4215ac:	mov    BYTE PTR [rax],0xa
  4215af:	movzx  esi,BYTE PTR [rdi+0x31]
  4215b3:	imul   esi,DWORD PTR [rdi+0x38]
  4215b7:	mov    rdi,QWORD PTR [rdi+0x28]
  4215bb:	movsxd r13,esi
  4215be:	lea    rax,[rdi+r13*1]
  4215c2:	cmp    QWORD PTR [rbx+0x20],rax
  4215c6:	jb     4215e8 <flatcc_json_printer_string_field@@Base+0x168>
  4215c8:	mov    esi,0x20
  4215cd:	mov    rdx,r13
  4215d0:	call   405090 <memset@plt>
  4215d5:	mov    rsi,r13
  4215d8:	add    rsi,QWORD PTR [rbx+0x28]
  4215dc:	mov    QWORD PTR [rbx+0x28],rsi
  4215e0:	jmp    4214f6 <flatcc_json_printer_string_field@@Base+0x76>
  4215e5:	nop    DWORD PTR [rax]
  4215e8:	mov    rsi,r13
  4215eb:	mov    rdi,rbx
  4215ee:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4215f3:	mov    rsi,QWORD PTR [rbx+0x28]
  4215f7:	jmp    4214f6 <flatcc_json_printer_string_field@@Base+0x76>
  4215fc:	nop    DWORD PTR [rax+0x0]

0000000000421600 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
  421600:	push   r15
  421602:	push   r14
  421604:	push   r13
  421606:	push   r12
  421608:	push   rbp
  421609:	push   rbx
  42160a:	sub    rsp,0x38
  42160e:	mov    rax,QWORD PTR fs:0x28
  421617:	mov    QWORD PTR [rsp+0x28],rax
  42161c:	xor    eax,eax
  42161e:	lea    eax,[rdx+rdx*1+0x4]
  421622:	cmp    eax,DWORD PTR [rsi+0x10]
  421625:	jge    421780 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x180>
  42162b:	mov    rdx,QWORD PTR [rsi+0x8]
  42162f:	movzx  eax,WORD PTR [rdx+rax*1]
  421633:	test   ax,ax
  421636:	je     421780 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x180>
  42163c:	xor    r14d,r14d
  42163f:	test   r9d,r9d
  421642:	mov    r12,rcx
  421645:	setne  r14b
  421649:	mov    ecx,r14d
  42164c:	or     cl,0x80
  42164f:	add    rax,QWORD PTR [rsi]
  421652:	mov    DWORD PTR [rsp+0xc],ecx
  421656:	mov    rbp,rax
  421659:	je     421780 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x180>
  42165f:	mov    eax,DWORD PTR [rsi+0x18]
  421662:	mov    r15,rdi
  421665:	lea    edx,[rax+0x1]
  421668:	test   eax,eax
  42166a:	mov    DWORD PTR [rsi+0x18],edx
  42166d:	je     42167e <flatcc_json_printer_uint8_vector_base64_field@@Base+0x7e>
  42166f:	mov    rax,QWORD PTR [rdi+0x28]
  421673:	lea    rdx,[rax+0x1]
  421677:	mov    QWORD PTR [rdi+0x28],rdx
  42167b:	mov    BYTE PTR [rax],0x2c
  42167e:	cmp    BYTE PTR [r15+0x31],0x0
  421683:	movsxd rbx,r8d
  421686:	mov    rax,QWORD PTR [r15+0x28]
  42168a:	jne    421890 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x290>
  421690:	cmp    rax,QWORD PTR [r15+0x20]
  421694:	jb     4216a3 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa3>
  421696:	xor    esi,esi
  421698:	mov    rdi,r15
  42169b:	call   QWORD PTR [r15+0x48]
  42169f:	mov    rax,QWORD PTR [r15+0x28]
  4216a3:	mov    BYTE PTR [rax],0x22
  4216a6:	xor    edi,edi
  4216a8:	cmp    BYTE PTR [r15+0x32],0x0
  4216ad:	mov    rdx,rbx
  4216b0:	mov    rsi,r12
  4216b3:	sete   dil
  4216b7:	add    rdi,QWORD PTR [r15+0x28]
  4216bb:	lea    rax,[rdi+rbx*1]
  4216bf:	cmp    QWORD PTR [r15+0x20],rax
  4216c3:	mov    QWORD PTR [r15+0x28],rdi
  4216c7:	ja     4217a8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1a8>
  4216cd:	mov    rdi,r15
  4216d0:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4216d5:	mov    rbx,QWORD PTR [r15+0x28]
  4216d9:	mov    BYTE PTR [rbx],0x22
  4216dc:	xor    eax,eax
  4216de:	cmp    BYTE PTR [r15+0x32],0x0
  4216e3:	movabs r12,0xaaaaaaaaaaaaaaab
  4216ed:	sete   al
  4216f0:	add    rax,QWORD PTR [r15+0x28]
  4216f4:	lea    rdx,[rax+0x1]
  4216f8:	mov    QWORD PTR [r15+0x28],rdx
  4216fc:	mov    BYTE PTR [rax],0x3a
  4216ff:	mov    rax,QWORD PTR [r15+0x28]
  421703:	mov    BYTE PTR [rax],0x20
  421706:	xor    eax,eax
  421708:	cmp    BYTE PTR [r15+0x31],0x0
  42170d:	mov    edx,DWORD PTR [rbp+0x0]
  421710:	setne  al
  421713:	add    rax,QWORD PTR [r15+0x28]
  421717:	add    rbp,rdx
  42171a:	mov    ecx,DWORD PTR [rbp+0x0]
  42171d:	add    rbp,0x4
  421721:	lea    rdx,[rax+0x1]
  421725:	mov    QWORD PTR [rsp+0x18],rcx
  42172a:	mov    QWORD PTR [r15+0x28],rdx
  42172e:	mov    BYTE PTR [rax],0x22
  421731:	mov    rax,QWORD PTR [rsp+0x18]
  421736:	mov    rdi,QWORD PTR [r15+0x28]
  42173a:	lea    rdx,[rax*4+0x0]
  421742:	mov    rax,rdx
  421745:	mul    r12
  421748:	shr    rdx,1
  42174b:	mov    rbx,rdx
  42174e:	add    rbx,0x3
  421752:	and    rbx,0xfffffffffffffffc
  421756:	lea    rax,[rdi+rbx*1]
  42175a:	cmp    rax,QWORD PTR [r15+0x20]
  42175e:	jae    4217c0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
  421760:	mov    ecx,DWORD PTR [rsp+0xc]
  421764:	lea    rdx,[rsp+0x18]
  421769:	mov    rsi,rbp
  42176c:	call   420b30 <flatcc_json_parser_table_as_root@@Base+0x18d0>
  421771:	add    rbx,QWORD PTR [r15+0x28]
  421775:	lea    rax,[rbx+0x1]
  421779:	mov    QWORD PTR [r15+0x28],rax
  42177d:	mov    BYTE PTR [rbx],0x22
  421780:	mov    rax,QWORD PTR [rsp+0x28]
  421785:	xor    rax,QWORD PTR fs:0x28
  42178e:	jne    4218e7 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2e7>
  421794:	add    rsp,0x38
  421798:	pop    rbx
  421799:	pop    rbp
  42179a:	pop    r12
  42179c:	pop    r13
  42179e:	pop    r14
  4217a0:	pop    r15
  4217a2:	ret    
  4217a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4217a8:	call   4050e0 <memcpy@plt>
  4217ad:	add    rbx,QWORD PTR [r15+0x28]
  4217b1:	mov    QWORD PTR [r15+0x28],rbx
  4217b5:	jmp    4216d9 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xd9>
  4217ba:	nop    WORD PTR [rax+rax*1+0x0]
  4217c0:	xor    esi,esi
  4217c2:	mov    rdi,r15
  4217c5:	call   QWORD PTR [r15+0x48]
  4217c9:	mov    rdi,QWORD PTR [r15+0x28]
  4217cd:	mov    r11,QWORD PTR [r15+0x20]
  4217d1:	lea    rax,[rdi+rbx*1]
  4217d5:	cmp    rax,r11
  4217d8:	jbe    421760 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x160>
  4217da:	sub    r11,rdi
  4217dd:	and    r11,0xfffffffffffffffc
  4217e1:	lea    rbx,[r11+r11*2]
  4217e5:	shr    rbx,0x2
  4217e9:	test   rbx,rbx
  4217ec:	je     42186a <flatcc_json_printer_uint8_vector_base64_field@@Base+0x26a>
  4217ee:	lea    r13,[rsp+0x20]
  4217f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4217f8:	mov    rdx,r13
  4217fb:	mov    rsi,rbp
  4217fe:	mov    ecx,r14d
  421801:	mov    QWORD PTR [rsp+0x20],rbx
  421806:	add    rbp,rbx
  421809:	call   420b30 <flatcc_json_parser_table_as_root@@Base+0x18d0>
  42180e:	sub    QWORD PTR [rsp+0x18],rbx
  421813:	add    QWORD PTR [r15+0x28],r11
  421817:	xor    esi,esi
  421819:	mov    rdi,r15
  42181c:	call   QWORD PTR [r15+0x48]
  421820:	mov    rax,QWORD PTR [rsp+0x18]
  421825:	mov    rdi,QWORD PTR [r15+0x28]
  421829:	mov    r11,QWORD PTR [r15+0x20]
  42182d:	lea    rdx,[rax*4+0x0]
  421835:	mov    rax,rdx
  421838:	mul    r12
  42183b:	shr    rdx,1
  42183e:	mov    rbx,rdx
  421841:	add    rbx,0x3
  421845:	and    rbx,0xfffffffffffffffc
  421849:	lea    rax,[rdi+rbx*1]
  42184d:	cmp    r11,rax
  421850:	jae    421760 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x160>
  421856:	sub    r11,rdi
  421859:	and    r11,0xfffffffffffffffc
  42185d:	lea    rbx,[r11+r11*2]
  421861:	shr    rbx,0x2
  421865:	test   rbx,rbx
  421868:	jne    4217f8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f8>
  42186a:	lea    rcx,[rip+0xfccf]        # 431540 <flatcc_builder_padding_base@@Base+0x1a60>
  421871:	lea    rsi,[rip+0xfa68]        # 4312e0 <flatcc_builder_padding_base@@Base+0x1800>
  421878:	lea    rdi,[rip+0xfc07]        # 431486 <flatcc_builder_padding_base@@Base+0x19a6>
  42187f:	mov    edx,0x115
  421884:	call   405080 <__assert_fail@plt>
  421889:	nop    DWORD PTR [rax+0x0]
  421890:	lea    rdx,[rax+0x1]
  421894:	mov    QWORD PTR [r15+0x28],rdx
  421898:	mov    BYTE PTR [rax],0xa
  42189b:	movzx  eax,BYTE PTR [r15+0x31]
  4218a0:	mov    rdi,QWORD PTR [r15+0x28]
  4218a4:	imul   eax,DWORD PTR [r15+0x38]
  4218a9:	movsxd r13,eax
  4218ac:	lea    rax,[rdi+r13*1]
  4218b0:	cmp    QWORD PTR [r15+0x20],rax
  4218b4:	jb     4218d3 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x2d3>
  4218b6:	mov    rdx,r13
  4218b9:	mov    esi,0x20
  4218be:	call   405090 <memset@plt>
  4218c3:	mov    rax,r13
  4218c6:	add    rax,QWORD PTR [r15+0x28]
  4218ca:	mov    QWORD PTR [r15+0x28],rax
  4218ce:	jmp    4216a3 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa3>
  4218d3:	mov    rsi,r13
  4218d6:	mov    rdi,r15
  4218d9:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4218de:	mov    rax,QWORD PTR [r15+0x28]
  4218e2:	jmp    4216a3 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xa3>
  4218e7:	call   405070 <__stack_chk_fail@plt>
  4218ec:	nop    DWORD PTR [rax+0x0]

00000000004218f0 <flatcc_json_printer_uint8_field@@Base>:
  4218f0:	push   r14
  4218f2:	lea    eax,[rdx+rdx*1+0x4]
  4218f6:	push   r13
  4218f8:	push   r12
  4218fa:	push   rbp
  4218fb:	push   rbx
  4218fc:	cmp    eax,DWORD PTR [rsi+0x10]
  4218ff:	jl     421910 <flatcc_json_printer_uint8_field@@Base+0x20>
  421901:	cmp    BYTE PTR [rdi+0x35],0x0
  421905:	je     4219e6 <flatcc_json_printer_uint8_field@@Base+0xf6>
  42190b:	mov    r12d,r9d
  42190e:	jmp    42192f <flatcc_json_printer_uint8_field@@Base+0x3f>
  421910:	mov    rdx,QWORD PTR [rsi+0x8]
  421914:	movzx  eax,WORD PTR [rdx+rax*1]
  421918:	test   ax,ax
  42191b:	je     421901 <flatcc_json_printer_uint8_field@@Base+0x11>
  42191d:	add    rax,QWORD PTR [rsi]
  421920:	je     421901 <flatcc_json_printer_uint8_field@@Base+0x11>
  421922:	movzx  r12d,BYTE PTR [rax]
  421926:	cmp    r9b,r12b
  421929:	je     421a00 <flatcc_json_printer_uint8_field@@Base+0x110>
  42192f:	mov    eax,DWORD PTR [rsi+0x18]
  421932:	lea    edx,[rax+0x1]
  421935:	test   eax,eax
  421937:	mov    DWORD PTR [rsi+0x18],edx
  42193a:	je     42194b <flatcc_json_printer_uint8_field@@Base+0x5b>
  42193c:	mov    rax,QWORD PTR [rdi+0x28]
  421940:	lea    rdx,[rax+0x1]
  421944:	mov    QWORD PTR [rdi+0x28],rdx
  421948:	mov    BYTE PTR [rax],0x2c
  42194b:	cmp    BYTE PTR [rdi+0x31],0x0
  42194f:	mov    r14,rcx
  421952:	mov    rbx,rdi
  421955:	movsxd rbp,r8d
  421958:	jne    421a10 <flatcc_json_printer_uint8_field@@Base+0x120>
  42195e:	mov    rsi,QWORD PTR [rdi+0x28]
  421962:	cmp    rsi,QWORD PTR [rdi+0x20]
  421966:	jb     421971 <flatcc_json_printer_uint8_field@@Base+0x81>
  421968:	xor    esi,esi
  42196a:	call   QWORD PTR [rdi+0x48]
  42196d:	mov    rsi,QWORD PTR [rbx+0x28]
  421971:	mov    BYTE PTR [rsi],0x22
  421974:	xor    edi,edi
  421976:	cmp    BYTE PTR [rbx+0x32],0x0
  42197a:	mov    rdx,rbp
  42197d:	mov    rsi,r14
  421980:	sete   dil
  421984:	add    rdi,QWORD PTR [rbx+0x28]
  421988:	lea    rax,[rdi+rbp*1]
  42198c:	cmp    QWORD PTR [rbx+0x20],rax
  421990:	mov    QWORD PTR [rbx+0x28],rdi
  421994:	ja     4219f0 <flatcc_json_printer_uint8_field@@Base+0x100>
  421996:	mov    rdi,rbx
  421999:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42199e:	mov    rbp,QWORD PTR [rbx+0x28]
  4219a2:	mov    BYTE PTR [rbp+0x0],0x22
  4219a6:	xor    eax,eax
  4219a8:	cmp    BYTE PTR [rbx+0x32],0x0
  4219ac:	movzx  edi,r12b
  4219b0:	sete   al
  4219b3:	add    rax,QWORD PTR [rbx+0x28]
  4219b7:	xor    esi,esi
  4219b9:	lea    rdx,[rax+0x1]
  4219bd:	mov    QWORD PTR [rbx+0x28],rdx
  4219c1:	mov    BYTE PTR [rax],0x3a
  4219c4:	mov    rax,QWORD PTR [rbx+0x28]
  4219c8:	mov    BYTE PTR [rax],0x20
  4219cb:	cmp    BYTE PTR [rbx+0x31],0x0
  4219cf:	setne  sil
  4219d3:	add    rsi,QWORD PTR [rbx+0x28]
  4219d7:	mov    QWORD PTR [rbx+0x28],rsi
  4219db:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  4219e0:	cdqe   
  4219e2:	add    QWORD PTR [rbx+0x28],rax
  4219e6:	pop    rbx
  4219e7:	pop    rbp
  4219e8:	pop    r12
  4219ea:	pop    r13
  4219ec:	pop    r14
  4219ee:	ret    
  4219ef:	nop
  4219f0:	call   4050e0 <memcpy@plt>
  4219f5:	add    rbp,QWORD PTR [rbx+0x28]
  4219f9:	mov    QWORD PTR [rbx+0x28],rbp
  4219fd:	jmp    4219a2 <flatcc_json_printer_uint8_field@@Base+0xb2>
  4219ff:	nop
  421a00:	cmp    BYTE PTR [rdi+0x34],0x0
  421a04:	je     42192f <flatcc_json_printer_uint8_field@@Base+0x3f>
  421a0a:	jmp    4219e6 <flatcc_json_printer_uint8_field@@Base+0xf6>
  421a0c:	nop    DWORD PTR [rax+0x0]
  421a10:	mov    rax,QWORD PTR [rdi+0x28]
  421a14:	lea    rdx,[rax+0x1]
  421a18:	mov    QWORD PTR [rdi+0x28],rdx
  421a1c:	mov    BYTE PTR [rax],0xa
  421a1f:	movzx  esi,BYTE PTR [rdi+0x31]
  421a23:	imul   esi,DWORD PTR [rdi+0x38]
  421a27:	mov    rdi,QWORD PTR [rdi+0x28]
  421a2b:	movsxd r13,esi
  421a2e:	lea    rax,[rdi+r13*1]
  421a32:	cmp    QWORD PTR [rbx+0x20],rax
  421a36:	jb     421a58 <flatcc_json_printer_uint8_field@@Base+0x168>
  421a38:	mov    esi,0x20
  421a3d:	mov    rdx,r13
  421a40:	call   405090 <memset@plt>
  421a45:	mov    rsi,r13
  421a48:	add    rsi,QWORD PTR [rbx+0x28]
  421a4c:	mov    QWORD PTR [rbx+0x28],rsi
  421a50:	jmp    421971 <flatcc_json_printer_uint8_field@@Base+0x81>
  421a55:	nop    DWORD PTR [rax]
  421a58:	mov    rsi,r13
  421a5b:	mov    rdi,rbx
  421a5e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421a63:	mov    rsi,QWORD PTR [rbx+0x28]
  421a67:	jmp    421971 <flatcc_json_printer_uint8_field@@Base+0x81>
  421a6c:	nop    DWORD PTR [rax+0x0]

0000000000421a70 <flatcc_json_printer_uint16_field@@Base>:
  421a70:	push   r14
  421a72:	lea    eax,[rdx+rdx*1+0x4]
  421a76:	push   r13
  421a78:	push   r12
  421a7a:	push   rbp
  421a7b:	push   rbx
  421a7c:	cmp    eax,DWORD PTR [rsi+0x10]
  421a7f:	jl     421a90 <flatcc_json_printer_uint16_field@@Base+0x20>
  421a81:	cmp    BYTE PTR [rdi+0x35],0x0
  421a85:	je     421b67 <flatcc_json_printer_uint16_field@@Base+0xf7>
  421a8b:	mov    r12d,r9d
  421a8e:	jmp    421ab0 <flatcc_json_printer_uint16_field@@Base+0x40>
  421a90:	mov    rdx,QWORD PTR [rsi+0x8]
  421a94:	movzx  eax,WORD PTR [rdx+rax*1]
  421a98:	test   ax,ax
  421a9b:	je     421a81 <flatcc_json_printer_uint16_field@@Base+0x11>
  421a9d:	add    rax,QWORD PTR [rsi]
  421aa0:	je     421a81 <flatcc_json_printer_uint16_field@@Base+0x11>
  421aa2:	movzx  r12d,WORD PTR [rax]
  421aa6:	cmp    r9w,r12w
  421aaa:	je     421b80 <flatcc_json_printer_uint16_field@@Base+0x110>
  421ab0:	mov    eax,DWORD PTR [rsi+0x18]
  421ab3:	lea    edx,[rax+0x1]
  421ab6:	test   eax,eax
  421ab8:	mov    DWORD PTR [rsi+0x18],edx
  421abb:	je     421acc <flatcc_json_printer_uint16_field@@Base+0x5c>
  421abd:	mov    rax,QWORD PTR [rdi+0x28]
  421ac1:	lea    rdx,[rax+0x1]
  421ac5:	mov    QWORD PTR [rdi+0x28],rdx
  421ac9:	mov    BYTE PTR [rax],0x2c
  421acc:	cmp    BYTE PTR [rdi+0x31],0x0
  421ad0:	mov    r14,rcx
  421ad3:	mov    rbx,rdi
  421ad6:	movsxd rbp,r8d
  421ad9:	jne    421b90 <flatcc_json_printer_uint16_field@@Base+0x120>
  421adf:	mov    rsi,QWORD PTR [rdi+0x28]
  421ae3:	cmp    rsi,QWORD PTR [rdi+0x20]
  421ae7:	jb     421af2 <flatcc_json_printer_uint16_field@@Base+0x82>
  421ae9:	xor    esi,esi
  421aeb:	call   QWORD PTR [rdi+0x48]
  421aee:	mov    rsi,QWORD PTR [rbx+0x28]
  421af2:	mov    BYTE PTR [rsi],0x22
  421af5:	xor    edi,edi
  421af7:	cmp    BYTE PTR [rbx+0x32],0x0
  421afb:	mov    rdx,rbp
  421afe:	mov    rsi,r14
  421b01:	sete   dil
  421b05:	add    rdi,QWORD PTR [rbx+0x28]
  421b09:	lea    rax,[rdi+rbp*1]
  421b0d:	cmp    QWORD PTR [rbx+0x20],rax
  421b11:	mov    QWORD PTR [rbx+0x28],rdi
  421b15:	ja     421b70 <flatcc_json_printer_uint16_field@@Base+0x100>
  421b17:	mov    rdi,rbx
  421b1a:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421b1f:	mov    rbp,QWORD PTR [rbx+0x28]
  421b23:	mov    BYTE PTR [rbp+0x0],0x22
  421b27:	xor    eax,eax
  421b29:	cmp    BYTE PTR [rbx+0x32],0x0
  421b2d:	movzx  edi,r12w
  421b31:	sete   al
  421b34:	add    rax,QWORD PTR [rbx+0x28]
  421b38:	xor    esi,esi
  421b3a:	lea    rdx,[rax+0x1]
  421b3e:	mov    QWORD PTR [rbx+0x28],rdx
  421b42:	mov    BYTE PTR [rax],0x3a
  421b45:	mov    rax,QWORD PTR [rbx+0x28]
  421b49:	mov    BYTE PTR [rax],0x20
  421b4c:	cmp    BYTE PTR [rbx+0x31],0x0
  421b50:	setne  sil
  421b54:	add    rsi,QWORD PTR [rbx+0x28]
  421b58:	mov    QWORD PTR [rbx+0x28],rsi
  421b5c:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  421b61:	cdqe   
  421b63:	add    QWORD PTR [rbx+0x28],rax
  421b67:	pop    rbx
  421b68:	pop    rbp
  421b69:	pop    r12
  421b6b:	pop    r13
  421b6d:	pop    r14
  421b6f:	ret    
  421b70:	call   4050e0 <memcpy@plt>
  421b75:	add    rbp,QWORD PTR [rbx+0x28]
  421b79:	mov    QWORD PTR [rbx+0x28],rbp
  421b7d:	jmp    421b23 <flatcc_json_printer_uint16_field@@Base+0xb3>
  421b7f:	nop
  421b80:	cmp    BYTE PTR [rdi+0x34],0x0
  421b84:	je     421ab0 <flatcc_json_printer_uint16_field@@Base+0x40>
  421b8a:	jmp    421b67 <flatcc_json_printer_uint16_field@@Base+0xf7>
  421b8c:	nop    DWORD PTR [rax+0x0]
  421b90:	mov    rax,QWORD PTR [rdi+0x28]
  421b94:	lea    rdx,[rax+0x1]
  421b98:	mov    QWORD PTR [rdi+0x28],rdx
  421b9c:	mov    BYTE PTR [rax],0xa
  421b9f:	movzx  esi,BYTE PTR [rdi+0x31]
  421ba3:	imul   esi,DWORD PTR [rdi+0x38]
  421ba7:	mov    rdi,QWORD PTR [rdi+0x28]
  421bab:	movsxd r13,esi
  421bae:	lea    rax,[rdi+r13*1]
  421bb2:	cmp    QWORD PTR [rbx+0x20],rax
  421bb6:	jb     421bd8 <flatcc_json_printer_uint16_field@@Base+0x168>
  421bb8:	mov    esi,0x20
  421bbd:	mov    rdx,r13
  421bc0:	call   405090 <memset@plt>
  421bc5:	mov    rsi,r13
  421bc8:	add    rsi,QWORD PTR [rbx+0x28]
  421bcc:	mov    QWORD PTR [rbx+0x28],rsi
  421bd0:	jmp    421af2 <flatcc_json_printer_uint16_field@@Base+0x82>
  421bd5:	nop    DWORD PTR [rax]
  421bd8:	mov    rsi,r13
  421bdb:	mov    rdi,rbx
  421bde:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421be3:	mov    rsi,QWORD PTR [rbx+0x28]
  421be7:	jmp    421af2 <flatcc_json_printer_uint16_field@@Base+0x82>
  421bec:	nop    DWORD PTR [rax+0x0]

0000000000421bf0 <flatcc_json_printer_uint32_field@@Base>:
  421bf0:	push   r14
  421bf2:	lea    eax,[rdx+rdx*1+0x4]
  421bf6:	push   r13
  421bf8:	push   r12
  421bfa:	push   rbp
  421bfb:	push   rbx
  421bfc:	cmp    eax,DWORD PTR [rsi+0x10]
  421bff:	jl     421c10 <flatcc_json_printer_uint32_field@@Base+0x20>
  421c01:	cmp    BYTE PTR [rdi+0x35],0x0
  421c05:	je     421ce4 <flatcc_json_printer_uint32_field@@Base+0xf4>
  421c0b:	mov    r12d,r9d
  421c0e:	jmp    421c2e <flatcc_json_printer_uint32_field@@Base+0x3e>
  421c10:	mov    rdx,QWORD PTR [rsi+0x8]
  421c14:	movzx  eax,WORD PTR [rdx+rax*1]
  421c18:	test   ax,ax
  421c1b:	je     421c01 <flatcc_json_printer_uint32_field@@Base+0x11>
  421c1d:	add    rax,QWORD PTR [rsi]
  421c20:	je     421c01 <flatcc_json_printer_uint32_field@@Base+0x11>
  421c22:	mov    r12d,DWORD PTR [rax]
  421c25:	cmp    r9d,r12d
  421c28:	je     421d00 <flatcc_json_printer_uint32_field@@Base+0x110>
  421c2e:	mov    eax,DWORD PTR [rsi+0x18]
  421c31:	lea    edx,[rax+0x1]
  421c34:	test   eax,eax
  421c36:	mov    DWORD PTR [rsi+0x18],edx
  421c39:	je     421c4a <flatcc_json_printer_uint32_field@@Base+0x5a>
  421c3b:	mov    rax,QWORD PTR [rdi+0x28]
  421c3f:	lea    rdx,[rax+0x1]
  421c43:	mov    QWORD PTR [rdi+0x28],rdx
  421c47:	mov    BYTE PTR [rax],0x2c
  421c4a:	cmp    BYTE PTR [rdi+0x31],0x0
  421c4e:	mov    r14,rcx
  421c51:	mov    rbx,rdi
  421c54:	movsxd rbp,r8d
  421c57:	jne    421d10 <flatcc_json_printer_uint32_field@@Base+0x120>
  421c5d:	mov    rsi,QWORD PTR [rdi+0x28]
  421c61:	cmp    rsi,QWORD PTR [rdi+0x20]
  421c65:	jb     421c70 <flatcc_json_printer_uint32_field@@Base+0x80>
  421c67:	xor    esi,esi
  421c69:	call   QWORD PTR [rdi+0x48]
  421c6c:	mov    rsi,QWORD PTR [rbx+0x28]
  421c70:	mov    BYTE PTR [rsi],0x22
  421c73:	xor    edi,edi
  421c75:	cmp    BYTE PTR [rbx+0x32],0x0
  421c79:	mov    rdx,rbp
  421c7c:	mov    rsi,r14
  421c7f:	sete   dil
  421c83:	add    rdi,QWORD PTR [rbx+0x28]
  421c87:	lea    rax,[rdi+rbp*1]
  421c8b:	cmp    QWORD PTR [rbx+0x20],rax
  421c8f:	mov    QWORD PTR [rbx+0x28],rdi
  421c93:	ja     421cf0 <flatcc_json_printer_uint32_field@@Base+0x100>
  421c95:	mov    rdi,rbx
  421c98:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421c9d:	mov    rbp,QWORD PTR [rbx+0x28]
  421ca1:	mov    BYTE PTR [rbp+0x0],0x22
  421ca5:	xor    eax,eax
  421ca7:	cmp    BYTE PTR [rbx+0x32],0x0
  421cab:	mov    edi,r12d
  421cae:	sete   al
  421cb1:	add    rax,QWORD PTR [rbx+0x28]
  421cb5:	xor    esi,esi
  421cb7:	lea    rdx,[rax+0x1]
  421cbb:	mov    QWORD PTR [rbx+0x28],rdx
  421cbf:	mov    BYTE PTR [rax],0x3a
  421cc2:	mov    rax,QWORD PTR [rbx+0x28]
  421cc6:	mov    BYTE PTR [rax],0x20
  421cc9:	cmp    BYTE PTR [rbx+0x31],0x0
  421ccd:	setne  sil
  421cd1:	add    rsi,QWORD PTR [rbx+0x28]
  421cd5:	mov    QWORD PTR [rbx+0x28],rsi
  421cd9:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  421cde:	cdqe   
  421ce0:	add    QWORD PTR [rbx+0x28],rax
  421ce4:	pop    rbx
  421ce5:	pop    rbp
  421ce6:	pop    r12
  421ce8:	pop    r13
  421cea:	pop    r14
  421cec:	ret    
  421ced:	nop    DWORD PTR [rax]
  421cf0:	call   4050e0 <memcpy@plt>
  421cf5:	add    rbp,QWORD PTR [rbx+0x28]
  421cf9:	mov    QWORD PTR [rbx+0x28],rbp
  421cfd:	jmp    421ca1 <flatcc_json_printer_uint32_field@@Base+0xb1>
  421cff:	nop
  421d00:	cmp    BYTE PTR [rdi+0x34],0x0
  421d04:	je     421c2e <flatcc_json_printer_uint32_field@@Base+0x3e>
  421d0a:	jmp    421ce4 <flatcc_json_printer_uint32_field@@Base+0xf4>
  421d0c:	nop    DWORD PTR [rax+0x0]
  421d10:	mov    rax,QWORD PTR [rdi+0x28]
  421d14:	lea    rdx,[rax+0x1]
  421d18:	mov    QWORD PTR [rdi+0x28],rdx
  421d1c:	mov    BYTE PTR [rax],0xa
  421d1f:	movzx  esi,BYTE PTR [rdi+0x31]
  421d23:	imul   esi,DWORD PTR [rdi+0x38]
  421d27:	mov    rdi,QWORD PTR [rdi+0x28]
  421d2b:	movsxd r13,esi
  421d2e:	lea    rax,[rdi+r13*1]
  421d32:	cmp    QWORD PTR [rbx+0x20],rax
  421d36:	jb     421d58 <flatcc_json_printer_uint32_field@@Base+0x168>
  421d38:	mov    esi,0x20
  421d3d:	mov    rdx,r13
  421d40:	call   405090 <memset@plt>
  421d45:	mov    rsi,r13
  421d48:	add    rsi,QWORD PTR [rbx+0x28]
  421d4c:	mov    QWORD PTR [rbx+0x28],rsi
  421d50:	jmp    421c70 <flatcc_json_printer_uint32_field@@Base+0x80>
  421d55:	nop    DWORD PTR [rax]
  421d58:	mov    rsi,r13
  421d5b:	mov    rdi,rbx
  421d5e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421d63:	mov    rsi,QWORD PTR [rbx+0x28]
  421d67:	jmp    421c70 <flatcc_json_printer_uint32_field@@Base+0x80>
  421d6c:	nop    DWORD PTR [rax+0x0]

0000000000421d70 <flatcc_json_printer_uint64_field@@Base>:
  421d70:	push   r14
  421d72:	lea    eax,[rdx+rdx*1+0x4]
  421d76:	push   r13
  421d78:	push   r12
  421d7a:	push   rbp
  421d7b:	push   rbx
  421d7c:	cmp    eax,DWORD PTR [rsi+0x10]
  421d7f:	jl     421d90 <flatcc_json_printer_uint64_field@@Base+0x20>
  421d81:	cmp    BYTE PTR [rdi+0x35],0x0
  421d85:	je     421e64 <flatcc_json_printer_uint64_field@@Base+0xf4>
  421d8b:	mov    r12,r9
  421d8e:	jmp    421dae <flatcc_json_printer_uint64_field@@Base+0x3e>
  421d90:	mov    rdx,QWORD PTR [rsi+0x8]
  421d94:	movzx  eax,WORD PTR [rdx+rax*1]
  421d98:	test   ax,ax
  421d9b:	je     421d81 <flatcc_json_printer_uint64_field@@Base+0x11>
  421d9d:	add    rax,QWORD PTR [rsi]
  421da0:	je     421d81 <flatcc_json_printer_uint64_field@@Base+0x11>
  421da2:	mov    r12,QWORD PTR [rax]
  421da5:	cmp    r9,r12
  421da8:	je     421e80 <flatcc_json_printer_uint64_field@@Base+0x110>
  421dae:	mov    eax,DWORD PTR [rsi+0x18]
  421db1:	lea    edx,[rax+0x1]
  421db4:	test   eax,eax
  421db6:	mov    DWORD PTR [rsi+0x18],edx
  421db9:	je     421dca <flatcc_json_printer_uint64_field@@Base+0x5a>
  421dbb:	mov    rax,QWORD PTR [rdi+0x28]
  421dbf:	lea    rdx,[rax+0x1]
  421dc3:	mov    QWORD PTR [rdi+0x28],rdx
  421dc7:	mov    BYTE PTR [rax],0x2c
  421dca:	cmp    BYTE PTR [rdi+0x31],0x0
  421dce:	mov    r14,rcx
  421dd1:	mov    rbx,rdi
  421dd4:	movsxd rbp,r8d
  421dd7:	jne    421e90 <flatcc_json_printer_uint64_field@@Base+0x120>
  421ddd:	mov    rsi,QWORD PTR [rdi+0x28]
  421de1:	cmp    rsi,QWORD PTR [rdi+0x20]
  421de5:	jb     421df0 <flatcc_json_printer_uint64_field@@Base+0x80>
  421de7:	xor    esi,esi
  421de9:	call   QWORD PTR [rdi+0x48]
  421dec:	mov    rsi,QWORD PTR [rbx+0x28]
  421df0:	mov    BYTE PTR [rsi],0x22
  421df3:	xor    edi,edi
  421df5:	cmp    BYTE PTR [rbx+0x32],0x0
  421df9:	mov    rdx,rbp
  421dfc:	mov    rsi,r14
  421dff:	sete   dil
  421e03:	add    rdi,QWORD PTR [rbx+0x28]
  421e07:	lea    rax,[rdi+rbp*1]
  421e0b:	cmp    QWORD PTR [rbx+0x20],rax
  421e0f:	mov    QWORD PTR [rbx+0x28],rdi
  421e13:	ja     421e70 <flatcc_json_printer_uint64_field@@Base+0x100>
  421e15:	mov    rdi,rbx
  421e18:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421e1d:	mov    rbp,QWORD PTR [rbx+0x28]
  421e21:	mov    BYTE PTR [rbp+0x0],0x22
  421e25:	xor    eax,eax
  421e27:	cmp    BYTE PTR [rbx+0x32],0x0
  421e2b:	mov    rdi,r12
  421e2e:	sete   al
  421e31:	add    rax,QWORD PTR [rbx+0x28]
  421e35:	xor    esi,esi
  421e37:	lea    rdx,[rax+0x1]
  421e3b:	mov    QWORD PTR [rbx+0x28],rdx
  421e3f:	mov    BYTE PTR [rax],0x3a
  421e42:	mov    rax,QWORD PTR [rbx+0x28]
  421e46:	mov    BYTE PTR [rax],0x20
  421e49:	cmp    BYTE PTR [rbx+0x31],0x0
  421e4d:	setne  sil
  421e51:	add    rsi,QWORD PTR [rbx+0x28]
  421e55:	mov    QWORD PTR [rbx+0x28],rsi
  421e59:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  421e5e:	cdqe   
  421e60:	add    QWORD PTR [rbx+0x28],rax
  421e64:	pop    rbx
  421e65:	pop    rbp
  421e66:	pop    r12
  421e68:	pop    r13
  421e6a:	pop    r14
  421e6c:	ret    
  421e6d:	nop    DWORD PTR [rax]
  421e70:	call   4050e0 <memcpy@plt>
  421e75:	add    rbp,QWORD PTR [rbx+0x28]
  421e79:	mov    QWORD PTR [rbx+0x28],rbp
  421e7d:	jmp    421e21 <flatcc_json_printer_uint64_field@@Base+0xb1>
  421e7f:	nop
  421e80:	cmp    BYTE PTR [rdi+0x34],0x0
  421e84:	je     421dae <flatcc_json_printer_uint64_field@@Base+0x3e>
  421e8a:	jmp    421e64 <flatcc_json_printer_uint64_field@@Base+0xf4>
  421e8c:	nop    DWORD PTR [rax+0x0]
  421e90:	mov    rax,QWORD PTR [rdi+0x28]
  421e94:	lea    rdx,[rax+0x1]
  421e98:	mov    QWORD PTR [rdi+0x28],rdx
  421e9c:	mov    BYTE PTR [rax],0xa
  421e9f:	movzx  esi,BYTE PTR [rdi+0x31]
  421ea3:	imul   esi,DWORD PTR [rdi+0x38]
  421ea7:	mov    rdi,QWORD PTR [rdi+0x28]
  421eab:	movsxd r13,esi
  421eae:	lea    rax,[rdi+r13*1]
  421eb2:	cmp    QWORD PTR [rbx+0x20],rax
  421eb6:	jb     421ed8 <flatcc_json_printer_uint64_field@@Base+0x168>
  421eb8:	mov    esi,0x20
  421ebd:	mov    rdx,r13
  421ec0:	call   405090 <memset@plt>
  421ec5:	mov    rsi,r13
  421ec8:	add    rsi,QWORD PTR [rbx+0x28]
  421ecc:	mov    QWORD PTR [rbx+0x28],rsi
  421ed0:	jmp    421df0 <flatcc_json_printer_uint64_field@@Base+0x80>
  421ed5:	nop    DWORD PTR [rax]
  421ed8:	mov    rsi,r13
  421edb:	mov    rdi,rbx
  421ede:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  421ee3:	mov    rsi,QWORD PTR [rbx+0x28]
  421ee7:	jmp    421df0 <flatcc_json_printer_uint64_field@@Base+0x80>
  421eec:	nop    DWORD PTR [rax+0x0]

0000000000421ef0 <flatcc_json_printer_int8_field@@Base>:
  421ef0:	push   r14
  421ef2:	lea    eax,[rdx+rdx*1+0x4]
  421ef6:	push   r13
  421ef8:	push   r12
  421efa:	push   rbp
  421efb:	push   rbx
  421efc:	cmp    eax,DWORD PTR [rsi+0x10]
  421eff:	jl     421f10 <flatcc_json_printer_int8_field@@Base+0x20>
  421f01:	cmp    BYTE PTR [rdi+0x35],0x0
  421f05:	je     421ff7 <flatcc_json_printer_int8_field@@Base+0x107>
  421f0b:	mov    r12d,r9d
  421f0e:	jmp    421f2f <flatcc_json_printer_int8_field@@Base+0x3f>
  421f10:	mov    rdx,QWORD PTR [rsi+0x8]
  421f14:	movzx  eax,WORD PTR [rdx+rax*1]
  421f18:	test   ax,ax
  421f1b:	je     421f01 <flatcc_json_printer_int8_field@@Base+0x11>
  421f1d:	add    rax,QWORD PTR [rsi]
  421f20:	je     421f01 <flatcc_json_printer_int8_field@@Base+0x11>
  421f22:	movzx  r12d,BYTE PTR [rax]
  421f26:	cmp    r9b,r12b
  421f29:	je     422010 <flatcc_json_printer_int8_field@@Base+0x120>
  421f2f:	mov    eax,DWORD PTR [rsi+0x18]
  421f32:	lea    edx,[rax+0x1]
  421f35:	test   eax,eax
  421f37:	mov    DWORD PTR [rsi+0x18],edx
  421f3a:	je     421f4b <flatcc_json_printer_int8_field@@Base+0x5b>
  421f3c:	mov    rax,QWORD PTR [rdi+0x28]
  421f40:	lea    rdx,[rax+0x1]
  421f44:	mov    QWORD PTR [rdi+0x28],rdx
  421f48:	mov    BYTE PTR [rax],0x2c
  421f4b:	cmp    BYTE PTR [rdi+0x31],0x0
  421f4f:	mov    r14,rcx
  421f52:	mov    rbx,rdi
  421f55:	movsxd rbp,r8d
  421f58:	jne    422030 <flatcc_json_printer_int8_field@@Base+0x140>
  421f5e:	mov    rsi,QWORD PTR [rdi+0x28]
  421f62:	cmp    rsi,QWORD PTR [rdi+0x20]
  421f66:	jb     421f71 <flatcc_json_printer_int8_field@@Base+0x81>
  421f68:	xor    esi,esi
  421f6a:	call   QWORD PTR [rdi+0x48]
  421f6d:	mov    rsi,QWORD PTR [rbx+0x28]
  421f71:	mov    BYTE PTR [rsi],0x22
  421f74:	xor    edi,edi
  421f76:	cmp    BYTE PTR [rbx+0x32],0x0
  421f7a:	mov    rdx,rbp
  421f7d:	mov    rsi,r14
  421f80:	sete   dil
  421f84:	add    rdi,QWORD PTR [rbx+0x28]
  421f88:	lea    rax,[rdi+rbp*1]
  421f8c:	cmp    QWORD PTR [rbx+0x20],rax
  421f90:	mov    QWORD PTR [rbx+0x28],rdi
  421f94:	ja     422000 <flatcc_json_printer_int8_field@@Base+0x110>
  421f96:	mov    rdi,rbx
  421f99:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  421f9e:	mov    rbp,QWORD PTR [rbx+0x28]
  421fa2:	mov    BYTE PTR [rbp+0x0],0x22
  421fa6:	xor    eax,eax
  421fa8:	cmp    BYTE PTR [rbx+0x32],0x0
  421fac:	movsx  r8d,r12b
  421fb0:	sete   al
  421fb3:	add    rax,QWORD PTR [rbx+0x28]
  421fb7:	xor    esi,esi
  421fb9:	lea    rdx,[rax+0x1]
  421fbd:	mov    QWORD PTR [rbx+0x28],rdx
  421fc1:	mov    BYTE PTR [rax],0x3a
  421fc4:	mov    rax,QWORD PTR [rbx+0x28]
  421fc8:	mov    BYTE PTR [rax],0x20
  421fcb:	cmp    BYTE PTR [rbx+0x31],0x0
  421fcf:	setne  sil
  421fd3:	add    rsi,QWORD PTR [rbx+0x28]
  421fd7:	shr    r8d,0x1f
  421fdb:	test   r12b,r12b
  421fde:	mov    QWORD PTR [rbx+0x28],rsi
  421fe2:	js     422020 <flatcc_json_printer_int8_field@@Base+0x130>
  421fe4:	movzx  edi,r12b
  421fe8:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  421fed:	add    r8d,eax
  421ff0:	movsxd r8,r8d
  421ff3:	add    QWORD PTR [rbx+0x28],r8
  421ff7:	pop    rbx
  421ff8:	pop    rbp
  421ff9:	pop    r12
  421ffb:	pop    r13
  421ffd:	pop    r14
  421fff:	ret    
  422000:	call   4050e0 <memcpy@plt>
  422005:	add    rbp,QWORD PTR [rbx+0x28]
  422009:	mov    QWORD PTR [rbx+0x28],rbp
  42200d:	jmp    421fa2 <flatcc_json_printer_int8_field@@Base+0xb2>
  42200f:	nop
  422010:	cmp    BYTE PTR [rdi+0x34],0x0
  422014:	je     421f2f <flatcc_json_printer_int8_field@@Base+0x3f>
  42201a:	jmp    421ff7 <flatcc_json_printer_int8_field@@Base+0x107>
  42201c:	nop    DWORD PTR [rax+0x0]
  422020:	mov    BYTE PTR [rsi],0x2d
  422023:	neg    r12d
  422026:	add    rsi,0x1
  42202a:	jmp    421fe4 <flatcc_json_printer_int8_field@@Base+0xf4>
  42202c:	nop    DWORD PTR [rax+0x0]
  422030:	mov    rax,QWORD PTR [rdi+0x28]
  422034:	lea    rdx,[rax+0x1]
  422038:	mov    QWORD PTR [rdi+0x28],rdx
  42203c:	mov    BYTE PTR [rax],0xa
  42203f:	movzx  esi,BYTE PTR [rdi+0x31]
  422043:	imul   esi,DWORD PTR [rdi+0x38]
  422047:	mov    rdi,QWORD PTR [rdi+0x28]
  42204b:	movsxd r13,esi
  42204e:	lea    rax,[rdi+r13*1]
  422052:	cmp    QWORD PTR [rbx+0x20],rax
  422056:	jb     422078 <flatcc_json_printer_int8_field@@Base+0x188>
  422058:	mov    esi,0x20
  42205d:	mov    rdx,r13
  422060:	call   405090 <memset@plt>
  422065:	mov    rsi,r13
  422068:	add    rsi,QWORD PTR [rbx+0x28]
  42206c:	mov    QWORD PTR [rbx+0x28],rsi
  422070:	jmp    421f71 <flatcc_json_printer_int8_field@@Base+0x81>
  422075:	nop    DWORD PTR [rax]
  422078:	mov    rsi,r13
  42207b:	mov    rdi,rbx
  42207e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422083:	mov    rsi,QWORD PTR [rbx+0x28]
  422087:	jmp    421f71 <flatcc_json_printer_int8_field@@Base+0x81>
  42208c:	nop    DWORD PTR [rax+0x0]

0000000000422090 <flatcc_json_printer_int16_field@@Base>:
  422090:	push   r14
  422092:	lea    eax,[rdx+rdx*1+0x4]
  422096:	push   r13
  422098:	push   r12
  42209a:	push   rbp
  42209b:	push   rbx
  42209c:	cmp    eax,DWORD PTR [rsi+0x10]
  42209f:	jl     4220b0 <flatcc_json_printer_int16_field@@Base+0x20>
  4220a1:	cmp    BYTE PTR [rdi+0x35],0x0
  4220a5:	je     422199 <flatcc_json_printer_int16_field@@Base+0x109>
  4220ab:	mov    r12d,r9d
  4220ae:	jmp    4220d0 <flatcc_json_printer_int16_field@@Base+0x40>
  4220b0:	mov    rdx,QWORD PTR [rsi+0x8]
  4220b4:	movzx  eax,WORD PTR [rdx+rax*1]
  4220b8:	test   ax,ax
  4220bb:	je     4220a1 <flatcc_json_printer_int16_field@@Base+0x11>
  4220bd:	add    rax,QWORD PTR [rsi]
  4220c0:	je     4220a1 <flatcc_json_printer_int16_field@@Base+0x11>
  4220c2:	movzx  r12d,WORD PTR [rax]
  4220c6:	cmp    r9w,r12w
  4220ca:	je     4221c0 <flatcc_json_printer_int16_field@@Base+0x130>
  4220d0:	mov    eax,DWORD PTR [rsi+0x18]
  4220d3:	lea    edx,[rax+0x1]
  4220d6:	test   eax,eax
  4220d8:	mov    DWORD PTR [rsi+0x18],edx
  4220db:	je     4220ec <flatcc_json_printer_int16_field@@Base+0x5c>
  4220dd:	mov    rax,QWORD PTR [rdi+0x28]
  4220e1:	lea    rdx,[rax+0x1]
  4220e5:	mov    QWORD PTR [rdi+0x28],rdx
  4220e9:	mov    BYTE PTR [rax],0x2c
  4220ec:	cmp    BYTE PTR [rdi+0x31],0x0
  4220f0:	mov    r14,rcx
  4220f3:	mov    rbx,rdi
  4220f6:	movsxd rbp,r8d
  4220f9:	jne    4221e0 <flatcc_json_printer_int16_field@@Base+0x150>
  4220ff:	mov    rsi,QWORD PTR [rdi+0x28]
  422103:	cmp    rsi,QWORD PTR [rdi+0x20]
  422107:	jb     422112 <flatcc_json_printer_int16_field@@Base+0x82>
  422109:	xor    esi,esi
  42210b:	call   QWORD PTR [rdi+0x48]
  42210e:	mov    rsi,QWORD PTR [rbx+0x28]
  422112:	mov    BYTE PTR [rsi],0x22
  422115:	xor    edi,edi
  422117:	cmp    BYTE PTR [rbx+0x32],0x0
  42211b:	mov    rdx,rbp
  42211e:	mov    rsi,r14
  422121:	sete   dil
  422125:	add    rdi,QWORD PTR [rbx+0x28]
  422129:	lea    rax,[rdi+rbp*1]
  42212d:	cmp    QWORD PTR [rbx+0x20],rax
  422131:	mov    QWORD PTR [rbx+0x28],rdi
  422135:	ja     4221a8 <flatcc_json_printer_int16_field@@Base+0x118>
  422137:	mov    rdi,rbx
  42213a:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42213f:	mov    rbp,QWORD PTR [rbx+0x28]
  422143:	mov    BYTE PTR [rbp+0x0],0x22
  422147:	xor    eax,eax
  422149:	cmp    BYTE PTR [rbx+0x32],0x0
  42214d:	movsx  r11d,r12w
  422151:	sete   al
  422154:	add    rax,QWORD PTR [rbx+0x28]
  422158:	xor    esi,esi
  42215a:	lea    rdx,[rax+0x1]
  42215e:	mov    QWORD PTR [rbx+0x28],rdx
  422162:	mov    BYTE PTR [rax],0x3a
  422165:	mov    rax,QWORD PTR [rbx+0x28]
  422169:	mov    BYTE PTR [rax],0x20
  42216c:	cmp    BYTE PTR [rbx+0x31],0x0
  422170:	setne  sil
  422174:	add    rsi,QWORD PTR [rbx+0x28]
  422178:	shr    r11d,0x1f
  42217c:	test   r12w,r12w
  422180:	mov    QWORD PTR [rbx+0x28],rsi
  422184:	js     4221d0 <flatcc_json_printer_int16_field@@Base+0x140>
  422186:	movzx  edi,r12w
  42218a:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  42218f:	add    r11d,eax
  422192:	movsxd r11,r11d
  422195:	add    QWORD PTR [rbx+0x28],r11
  422199:	pop    rbx
  42219a:	pop    rbp
  42219b:	pop    r12
  42219d:	pop    r13
  42219f:	pop    r14
  4221a1:	ret    
  4221a2:	nop    WORD PTR [rax+rax*1+0x0]
  4221a8:	call   4050e0 <memcpy@plt>
  4221ad:	add    rbp,QWORD PTR [rbx+0x28]
  4221b1:	mov    QWORD PTR [rbx+0x28],rbp
  4221b5:	jmp    422143 <flatcc_json_printer_int16_field@@Base+0xb3>
  4221b7:	nop    WORD PTR [rax+rax*1+0x0]
  4221c0:	cmp    BYTE PTR [rdi+0x34],0x0
  4221c4:	je     4220d0 <flatcc_json_printer_int16_field@@Base+0x40>
  4221ca:	jmp    422199 <flatcc_json_printer_int16_field@@Base+0x109>
  4221cc:	nop    DWORD PTR [rax+0x0]
  4221d0:	mov    BYTE PTR [rsi],0x2d
  4221d3:	neg    r12d
  4221d6:	add    rsi,0x1
  4221da:	jmp    422186 <flatcc_json_printer_int16_field@@Base+0xf6>
  4221dc:	nop    DWORD PTR [rax+0x0]
  4221e0:	mov    rax,QWORD PTR [rdi+0x28]
  4221e4:	lea    rdx,[rax+0x1]
  4221e8:	mov    QWORD PTR [rdi+0x28],rdx
  4221ec:	mov    BYTE PTR [rax],0xa
  4221ef:	movzx  esi,BYTE PTR [rdi+0x31]
  4221f3:	imul   esi,DWORD PTR [rdi+0x38]
  4221f7:	mov    rdi,QWORD PTR [rdi+0x28]
  4221fb:	movsxd r13,esi
  4221fe:	lea    rax,[rdi+r13*1]
  422202:	cmp    QWORD PTR [rbx+0x20],rax
  422206:	jb     422228 <flatcc_json_printer_int16_field@@Base+0x198>
  422208:	mov    esi,0x20
  42220d:	mov    rdx,r13
  422210:	call   405090 <memset@plt>
  422215:	mov    rsi,r13
  422218:	add    rsi,QWORD PTR [rbx+0x28]
  42221c:	mov    QWORD PTR [rbx+0x28],rsi
  422220:	jmp    422112 <flatcc_json_printer_int16_field@@Base+0x82>
  422225:	nop    DWORD PTR [rax]
  422228:	mov    rsi,r13
  42222b:	mov    rdi,rbx
  42222e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422233:	mov    rsi,QWORD PTR [rbx+0x28]
  422237:	jmp    422112 <flatcc_json_printer_int16_field@@Base+0x82>
  42223c:	nop    DWORD PTR [rax+0x0]

0000000000422240 <flatcc_json_printer_int32_field@@Base>:
  422240:	push   r14
  422242:	lea    eax,[rdx+rdx*1+0x4]
  422246:	push   r13
  422248:	push   r12
  42224a:	push   rbp
  42224b:	push   rbx
  42224c:	cmp    eax,DWORD PTR [rsi+0x10]
  42224f:	jl     422260 <flatcc_json_printer_int32_field@@Base+0x20>
  422251:	cmp    BYTE PTR [rdi+0x35],0x0
  422255:	je     422344 <flatcc_json_printer_int32_field@@Base+0x104>
  42225b:	mov    r12d,r9d
  42225e:	jmp    42227e <flatcc_json_printer_int32_field@@Base+0x3e>
  422260:	mov    rdx,QWORD PTR [rsi+0x8]
  422264:	movzx  eax,WORD PTR [rdx+rax*1]
  422268:	test   ax,ax
  42226b:	je     422251 <flatcc_json_printer_int32_field@@Base+0x11>
  42226d:	add    rax,QWORD PTR [rsi]
  422270:	je     422251 <flatcc_json_printer_int32_field@@Base+0x11>
  422272:	mov    r12d,DWORD PTR [rax]
  422275:	cmp    r9d,r12d
  422278:	je     422360 <flatcc_json_printer_int32_field@@Base+0x120>
  42227e:	mov    eax,DWORD PTR [rsi+0x18]
  422281:	lea    edx,[rax+0x1]
  422284:	test   eax,eax
  422286:	mov    DWORD PTR [rsi+0x18],edx
  422289:	je     42229a <flatcc_json_printer_int32_field@@Base+0x5a>
  42228b:	mov    rax,QWORD PTR [rdi+0x28]
  42228f:	lea    rdx,[rax+0x1]
  422293:	mov    QWORD PTR [rdi+0x28],rdx
  422297:	mov    BYTE PTR [rax],0x2c
  42229a:	cmp    BYTE PTR [rdi+0x31],0x0
  42229e:	mov    r14,rcx
  4222a1:	mov    rbx,rdi
  4222a4:	movsxd rbp,r8d
  4222a7:	jne    422380 <flatcc_json_printer_int32_field@@Base+0x140>
  4222ad:	mov    rsi,QWORD PTR [rdi+0x28]
  4222b1:	cmp    rsi,QWORD PTR [rdi+0x20]
  4222b5:	jb     4222c0 <flatcc_json_printer_int32_field@@Base+0x80>
  4222b7:	xor    esi,esi
  4222b9:	call   QWORD PTR [rdi+0x48]
  4222bc:	mov    rsi,QWORD PTR [rbx+0x28]
  4222c0:	mov    BYTE PTR [rsi],0x22
  4222c3:	xor    edi,edi
  4222c5:	cmp    BYTE PTR [rbx+0x32],0x0
  4222c9:	mov    rdx,rbp
  4222cc:	mov    rsi,r14
  4222cf:	sete   dil
  4222d3:	add    rdi,QWORD PTR [rbx+0x28]
  4222d7:	lea    rax,[rdi+rbp*1]
  4222db:	cmp    QWORD PTR [rbx+0x20],rax
  4222df:	mov    QWORD PTR [rbx+0x28],rdi
  4222e3:	ja     422350 <flatcc_json_printer_int32_field@@Base+0x110>
  4222e5:	mov    rdi,rbx
  4222e8:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4222ed:	mov    rbp,QWORD PTR [rbx+0x28]
  4222f1:	mov    BYTE PTR [rbp+0x0],0x22
  4222f5:	xor    eax,eax
  4222f7:	cmp    BYTE PTR [rbx+0x32],0x0
  4222fb:	mov    r10d,r12d
  4222fe:	sete   al
  422301:	add    rax,QWORD PTR [rbx+0x28]
  422305:	xor    esi,esi
  422307:	lea    rdx,[rax+0x1]
  42230b:	mov    QWORD PTR [rbx+0x28],rdx
  42230f:	mov    BYTE PTR [rax],0x3a
  422312:	mov    rax,QWORD PTR [rbx+0x28]
  422316:	mov    BYTE PTR [rax],0x20
  422319:	cmp    BYTE PTR [rbx+0x31],0x0
  42231d:	setne  sil
  422321:	add    rsi,QWORD PTR [rbx+0x28]
  422325:	shr    r10d,0x1f
  422329:	test   r12d,r12d
  42232c:	mov    QWORD PTR [rbx+0x28],rsi
  422330:	js     422370 <flatcc_json_printer_int32_field@@Base+0x130>
  422332:	mov    edi,r12d
  422335:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  42233a:	add    r10d,eax
  42233d:	movsxd r10,r10d
  422340:	add    QWORD PTR [rbx+0x28],r10
  422344:	pop    rbx
  422345:	pop    rbp
  422346:	pop    r12
  422348:	pop    r13
  42234a:	pop    r14
  42234c:	ret    
  42234d:	nop    DWORD PTR [rax]
  422350:	call   4050e0 <memcpy@plt>
  422355:	add    rbp,QWORD PTR [rbx+0x28]
  422359:	mov    QWORD PTR [rbx+0x28],rbp
  42235d:	jmp    4222f1 <flatcc_json_printer_int32_field@@Base+0xb1>
  42235f:	nop
  422360:	cmp    BYTE PTR [rdi+0x34],0x0
  422364:	je     42227e <flatcc_json_printer_int32_field@@Base+0x3e>
  42236a:	jmp    422344 <flatcc_json_printer_int32_field@@Base+0x104>
  42236c:	nop    DWORD PTR [rax+0x0]
  422370:	mov    BYTE PTR [rsi],0x2d
  422373:	neg    r12d
  422376:	add    rsi,0x1
  42237a:	jmp    422332 <flatcc_json_printer_int32_field@@Base+0xf2>
  42237c:	nop    DWORD PTR [rax+0x0]
  422380:	mov    rax,QWORD PTR [rdi+0x28]
  422384:	lea    rdx,[rax+0x1]
  422388:	mov    QWORD PTR [rdi+0x28],rdx
  42238c:	mov    BYTE PTR [rax],0xa
  42238f:	movzx  esi,BYTE PTR [rdi+0x31]
  422393:	imul   esi,DWORD PTR [rdi+0x38]
  422397:	mov    rdi,QWORD PTR [rdi+0x28]
  42239b:	movsxd r13,esi
  42239e:	lea    rax,[rdi+r13*1]
  4223a2:	cmp    QWORD PTR [rbx+0x20],rax
  4223a6:	jb     4223c8 <flatcc_json_printer_int32_field@@Base+0x188>
  4223a8:	mov    esi,0x20
  4223ad:	mov    rdx,r13
  4223b0:	call   405090 <memset@plt>
  4223b5:	mov    rsi,r13
  4223b8:	add    rsi,QWORD PTR [rbx+0x28]
  4223bc:	mov    QWORD PTR [rbx+0x28],rsi
  4223c0:	jmp    4222c0 <flatcc_json_printer_int32_field@@Base+0x80>
  4223c5:	nop    DWORD PTR [rax]
  4223c8:	mov    rsi,r13
  4223cb:	mov    rdi,rbx
  4223ce:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4223d3:	mov    rsi,QWORD PTR [rbx+0x28]
  4223d7:	jmp    4222c0 <flatcc_json_printer_int32_field@@Base+0x80>
  4223dc:	nop    DWORD PTR [rax+0x0]

00000000004223e0 <flatcc_json_printer_int64_field@@Base>:
  4223e0:	push   r14
  4223e2:	lea    eax,[rdx+rdx*1+0x4]
  4223e6:	push   r13
  4223e8:	push   r12
  4223ea:	push   rbp
  4223eb:	push   rbx
  4223ec:	cmp    eax,DWORD PTR [rsi+0x10]
  4223ef:	jl     422400 <flatcc_json_printer_int64_field@@Base+0x20>
  4223f1:	cmp    BYTE PTR [rdi+0x35],0x0
  4223f5:	je     4224e2 <flatcc_json_printer_int64_field@@Base+0x102>
  4223fb:	mov    r12,r9
  4223fe:	jmp    42241e <flatcc_json_printer_int64_field@@Base+0x3e>
  422400:	mov    rdx,QWORD PTR [rsi+0x8]
  422404:	movzx  eax,WORD PTR [rdx+rax*1]
  422408:	test   ax,ax
  42240b:	je     4223f1 <flatcc_json_printer_int64_field@@Base+0x11>
  42240d:	add    rax,QWORD PTR [rsi]
  422410:	je     4223f1 <flatcc_json_printer_int64_field@@Base+0x11>
  422412:	mov    r12,QWORD PTR [rax]
  422415:	cmp    r9,r12
  422418:	je     422500 <flatcc_json_printer_int64_field@@Base+0x120>
  42241e:	mov    eax,DWORD PTR [rsi+0x18]
  422421:	lea    edx,[rax+0x1]
  422424:	test   eax,eax
  422426:	mov    DWORD PTR [rsi+0x18],edx
  422429:	je     42243a <flatcc_json_printer_int64_field@@Base+0x5a>
  42242b:	mov    rax,QWORD PTR [rdi+0x28]
  42242f:	lea    rdx,[rax+0x1]
  422433:	mov    QWORD PTR [rdi+0x28],rdx
  422437:	mov    BYTE PTR [rax],0x2c
  42243a:	cmp    BYTE PTR [rdi+0x31],0x0
  42243e:	mov    r14,rcx
  422441:	mov    rbx,rdi
  422444:	movsxd rbp,r8d
  422447:	jne    422520 <flatcc_json_printer_int64_field@@Base+0x140>
  42244d:	mov    rsi,QWORD PTR [rdi+0x28]
  422451:	cmp    rsi,QWORD PTR [rdi+0x20]
  422455:	jb     422460 <flatcc_json_printer_int64_field@@Base+0x80>
  422457:	xor    esi,esi
  422459:	call   QWORD PTR [rdi+0x48]
  42245c:	mov    rsi,QWORD PTR [rbx+0x28]
  422460:	mov    BYTE PTR [rsi],0x22
  422463:	xor    edi,edi
  422465:	cmp    BYTE PTR [rbx+0x32],0x0
  422469:	mov    rdx,rbp
  42246c:	mov    rsi,r14
  42246f:	sete   dil
  422473:	add    rdi,QWORD PTR [rbx+0x28]
  422477:	lea    rax,[rdi+rbp*1]
  42247b:	cmp    QWORD PTR [rbx+0x20],rax
  42247f:	mov    QWORD PTR [rbx+0x28],rdi
  422483:	ja     4224f0 <flatcc_json_printer_int64_field@@Base+0x110>
  422485:	mov    rdi,rbx
  422488:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42248d:	mov    rbp,QWORD PTR [rbx+0x28]
  422491:	mov    BYTE PTR [rbp+0x0],0x22
  422495:	xor    eax,eax
  422497:	cmp    BYTE PTR [rbx+0x32],0x0
  42249b:	mov    rbp,r12
  42249e:	sete   al
  4224a1:	add    rax,QWORD PTR [rbx+0x28]
  4224a5:	xor    esi,esi
  4224a7:	lea    rdx,[rax+0x1]
  4224ab:	mov    QWORD PTR [rbx+0x28],rdx
  4224af:	mov    BYTE PTR [rax],0x3a
  4224b2:	mov    rax,QWORD PTR [rbx+0x28]
  4224b6:	mov    BYTE PTR [rax],0x20
  4224b9:	cmp    BYTE PTR [rbx+0x31],0x0
  4224bd:	setne  sil
  4224c1:	add    rsi,QWORD PTR [rbx+0x28]
  4224c5:	shr    rbp,0x3f
  4224c9:	test   r12,r12
  4224cc:	mov    QWORD PTR [rbx+0x28],rsi
  4224d0:	js     422510 <flatcc_json_printer_int64_field@@Base+0x130>
  4224d2:	mov    rdi,r12
  4224d5:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  4224da:	add    eax,ebp
  4224dc:	cdqe   
  4224de:	add    QWORD PTR [rbx+0x28],rax
  4224e2:	pop    rbx
  4224e3:	pop    rbp
  4224e4:	pop    r12
  4224e6:	pop    r13
  4224e8:	pop    r14
  4224ea:	ret    
  4224eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4224f0:	call   4050e0 <memcpy@plt>
  4224f5:	add    rbp,QWORD PTR [rbx+0x28]
  4224f9:	mov    QWORD PTR [rbx+0x28],rbp
  4224fd:	jmp    422491 <flatcc_json_printer_int64_field@@Base+0xb1>
  4224ff:	nop
  422500:	cmp    BYTE PTR [rdi+0x34],0x0
  422504:	je     42241e <flatcc_json_printer_int64_field@@Base+0x3e>
  42250a:	jmp    4224e2 <flatcc_json_printer_int64_field@@Base+0x102>
  42250c:	nop    DWORD PTR [rax+0x0]
  422510:	mov    BYTE PTR [rsi],0x2d
  422513:	neg    r12
  422516:	add    rsi,0x1
  42251a:	jmp    4224d2 <flatcc_json_printer_int64_field@@Base+0xf2>
  42251c:	nop    DWORD PTR [rax+0x0]
  422520:	mov    rax,QWORD PTR [rdi+0x28]
  422524:	lea    rdx,[rax+0x1]
  422528:	mov    QWORD PTR [rdi+0x28],rdx
  42252c:	mov    BYTE PTR [rax],0xa
  42252f:	movzx  esi,BYTE PTR [rdi+0x31]
  422533:	imul   esi,DWORD PTR [rdi+0x38]
  422537:	mov    rdi,QWORD PTR [rdi+0x28]
  42253b:	movsxd r13,esi
  42253e:	lea    rax,[rdi+r13*1]
  422542:	cmp    QWORD PTR [rbx+0x20],rax
  422546:	jb     422568 <flatcc_json_printer_int64_field@@Base+0x188>
  422548:	mov    esi,0x20
  42254d:	mov    rdx,r13
  422550:	call   405090 <memset@plt>
  422555:	mov    rsi,r13
  422558:	add    rsi,QWORD PTR [rbx+0x28]
  42255c:	mov    QWORD PTR [rbx+0x28],rsi
  422560:	jmp    422460 <flatcc_json_printer_int64_field@@Base+0x80>
  422565:	nop    DWORD PTR [rax]
  422568:	mov    rsi,r13
  42256b:	mov    rdi,rbx
  42256e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422573:	mov    rsi,QWORD PTR [rbx+0x28]
  422577:	jmp    422460 <flatcc_json_printer_int64_field@@Base+0x80>
  42257c:	nop    DWORD PTR [rax+0x0]

0000000000422580 <flatcc_json_printer_bool_field@@Base>:
  422580:	push   r14
  422582:	lea    eax,[rdx+rdx*1+0x4]
  422586:	push   r13
  422588:	push   r12
  42258a:	push   rbp
  42258b:	push   rbx
  42258c:	cmp    eax,DWORD PTR [rsi+0x10]
  42258f:	jl     4225a0 <flatcc_json_printer_bool_field@@Base+0x20>
  422591:	cmp    BYTE PTR [rdi+0x35],0x0
  422595:	je     422676 <flatcc_json_printer_bool_field@@Base+0xf6>
  42259b:	mov    r12d,r9d
  42259e:	jmp    4225bf <flatcc_json_printer_bool_field@@Base+0x3f>
  4225a0:	mov    rdx,QWORD PTR [rsi+0x8]
  4225a4:	movzx  eax,WORD PTR [rdx+rax*1]
  4225a8:	test   ax,ax
  4225ab:	je     422591 <flatcc_json_printer_bool_field@@Base+0x11>
  4225ad:	add    rax,QWORD PTR [rsi]
  4225b0:	je     422591 <flatcc_json_printer_bool_field@@Base+0x11>
  4225b2:	movzx  r12d,BYTE PTR [rax]
  4225b6:	cmp    r9b,r12b
  4225b9:	je     422690 <flatcc_json_printer_bool_field@@Base+0x110>
  4225bf:	mov    eax,DWORD PTR [rsi+0x18]
  4225c2:	lea    edx,[rax+0x1]
  4225c5:	test   eax,eax
  4225c7:	mov    DWORD PTR [rsi+0x18],edx
  4225ca:	je     4225db <flatcc_json_printer_bool_field@@Base+0x5b>
  4225cc:	mov    rax,QWORD PTR [rdi+0x28]
  4225d0:	lea    rdx,[rax+0x1]
  4225d4:	mov    QWORD PTR [rdi+0x28],rdx
  4225d8:	mov    BYTE PTR [rax],0x2c
  4225db:	cmp    BYTE PTR [rdi+0x31],0x0
  4225df:	mov    r14,rcx
  4225e2:	mov    rbx,rdi
  4225e5:	movsxd rbp,r8d
  4225e8:	jne    4226a0 <flatcc_json_printer_bool_field@@Base+0x120>
  4225ee:	mov    rsi,QWORD PTR [rdi+0x28]
  4225f2:	cmp    rsi,QWORD PTR [rdi+0x20]
  4225f6:	jb     422601 <flatcc_json_printer_bool_field@@Base+0x81>
  4225f8:	xor    esi,esi
  4225fa:	call   QWORD PTR [rdi+0x48]
  4225fd:	mov    rsi,QWORD PTR [rbx+0x28]
  422601:	mov    BYTE PTR [rsi],0x22
  422604:	xor    edi,edi
  422606:	cmp    BYTE PTR [rbx+0x32],0x0
  42260a:	mov    rdx,rbp
  42260d:	mov    rsi,r14
  422610:	sete   dil
  422614:	add    rdi,QWORD PTR [rbx+0x28]
  422618:	lea    rax,[rdi+rbp*1]
  42261c:	cmp    QWORD PTR [rbx+0x20],rax
  422620:	mov    QWORD PTR [rbx+0x28],rdi
  422624:	ja     422680 <flatcc_json_printer_bool_field@@Base+0x100>
  422626:	mov    rdi,rbx
  422629:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42262e:	mov    rbp,QWORD PTR [rbx+0x28]
  422632:	mov    BYTE PTR [rbp+0x0],0x22
  422636:	xor    eax,eax
  422638:	cmp    BYTE PTR [rbx+0x32],0x0
  42263c:	movzx  edi,r12b
  422640:	sete   al
  422643:	add    rax,QWORD PTR [rbx+0x28]
  422647:	xor    esi,esi
  422649:	lea    rdx,[rax+0x1]
  42264d:	mov    QWORD PTR [rbx+0x28],rdx
  422651:	mov    BYTE PTR [rax],0x3a
  422654:	mov    rax,QWORD PTR [rbx+0x28]
  422658:	mov    BYTE PTR [rax],0x20
  42265b:	cmp    BYTE PTR [rbx+0x31],0x0
  42265f:	setne  sil
  422663:	add    rsi,QWORD PTR [rbx+0x28]
  422667:	mov    QWORD PTR [rbx+0x28],rsi
  42266b:	call   4200d0 <flatcc_json_parser_table_as_root@@Base+0xe70>
  422670:	cdqe   
  422672:	add    QWORD PTR [rbx+0x28],rax
  422676:	pop    rbx
  422677:	pop    rbp
  422678:	pop    r12
  42267a:	pop    r13
  42267c:	pop    r14
  42267e:	ret    
  42267f:	nop
  422680:	call   4050e0 <memcpy@plt>
  422685:	add    rbp,QWORD PTR [rbx+0x28]
  422689:	mov    QWORD PTR [rbx+0x28],rbp
  42268d:	jmp    422632 <flatcc_json_printer_bool_field@@Base+0xb2>
  42268f:	nop
  422690:	cmp    BYTE PTR [rdi+0x34],0x0
  422694:	je     4225bf <flatcc_json_printer_bool_field@@Base+0x3f>
  42269a:	jmp    422676 <flatcc_json_printer_bool_field@@Base+0xf6>
  42269c:	nop    DWORD PTR [rax+0x0]
  4226a0:	mov    rax,QWORD PTR [rdi+0x28]
  4226a4:	lea    rdx,[rax+0x1]
  4226a8:	mov    QWORD PTR [rdi+0x28],rdx
  4226ac:	mov    BYTE PTR [rax],0xa
  4226af:	movzx  esi,BYTE PTR [rdi+0x31]
  4226b3:	imul   esi,DWORD PTR [rdi+0x38]
  4226b7:	mov    rdi,QWORD PTR [rdi+0x28]
  4226bb:	movsxd r13,esi
  4226be:	lea    rax,[rdi+r13*1]
  4226c2:	cmp    QWORD PTR [rbx+0x20],rax
  4226c6:	jb     4226e8 <flatcc_json_printer_bool_field@@Base+0x168>
  4226c8:	mov    esi,0x20
  4226cd:	mov    rdx,r13
  4226d0:	call   405090 <memset@plt>
  4226d5:	mov    rsi,r13
  4226d8:	add    rsi,QWORD PTR [rbx+0x28]
  4226dc:	mov    QWORD PTR [rbx+0x28],rsi
  4226e0:	jmp    422601 <flatcc_json_printer_bool_field@@Base+0x81>
  4226e5:	nop    DWORD PTR [rax]
  4226e8:	mov    rsi,r13
  4226eb:	mov    rdi,rbx
  4226ee:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4226f3:	mov    rsi,QWORD PTR [rbx+0x28]
  4226f7:	jmp    422601 <flatcc_json_printer_bool_field@@Base+0x81>
  4226fc:	nop    DWORD PTR [rax+0x0]

0000000000422700 <flatcc_json_printer_float_field@@Base>:
  422700:	lea    eax,[rdx+rdx*1+0x4]
  422704:	cmp    eax,DWORD PTR [rsi+0x10]
  422707:	jl     422720 <flatcc_json_printer_float_field@@Base+0x20>
  422709:	cmp    BYTE PTR [rdi+0x35],0x0
  42270d:	je     42282f <flatcc_json_printer_float_field@@Base+0x12f>
  422713:	vmovaps xmm1,xmm0
  422717:	jmp    422748 <flatcc_json_printer_float_field@@Base+0x48>
  422719:	nop    DWORD PTR [rax+0x0]
  422720:	mov    rdx,QWORD PTR [rsi+0x8]
  422724:	movzx  eax,WORD PTR [rdx+rax*1]
  422728:	test   ax,ax
  42272b:	je     422709 <flatcc_json_printer_float_field@@Base+0x9>
  42272d:	add    rax,QWORD PTR [rsi]
  422730:	je     422709 <flatcc_json_printer_float_field@@Base+0x9>
  422732:	vmovss xmm1,DWORD PTR [rax]
  422736:	vucomiss xmm0,xmm1
  42273a:	jp     422748 <flatcc_json_printer_float_field@@Base+0x48>
  42273c:	jne    422748 <flatcc_json_printer_float_field@@Base+0x48>
  42273e:	cmp    BYTE PTR [rdi+0x34],0x0
  422742:	jne    422850 <flatcc_json_printer_float_field@@Base+0x150>
  422748:	push   r13
  42274a:	push   r12
  42274c:	push   rbp
  42274d:	push   rbx
  42274e:	sub    rsp,0x18
  422752:	mov    eax,DWORD PTR [rsi+0x18]
  422755:	lea    edx,[rax+0x1]
  422758:	test   eax,eax
  42275a:	mov    DWORD PTR [rsi+0x18],edx
  42275d:	je     42276e <flatcc_json_printer_float_field@@Base+0x6e>
  42275f:	mov    rax,QWORD PTR [rdi+0x28]
  422763:	lea    rdx,[rax+0x1]
  422767:	mov    QWORD PTR [rdi+0x28],rdx
  42276b:	mov    BYTE PTR [rax],0x2c
  42276e:	cmp    BYTE PTR [rdi+0x31],0x0
  422772:	mov    r13,rcx
  422775:	mov    rbx,rdi
  422778:	movsxd rbp,r8d
  42277b:	jne    422858 <flatcc_json_printer_float_field@@Base+0x158>
  422781:	mov    rsi,QWORD PTR [rdi+0x28]
  422785:	cmp    rsi,QWORD PTR [rdi+0x20]
  422789:	jb     4227a0 <flatcc_json_printer_float_field@@Base+0xa0>
  42278b:	vmovss DWORD PTR [rsp+0xc],xmm1
  422791:	xor    esi,esi
  422793:	call   QWORD PTR [rdi+0x48]
  422796:	mov    rsi,QWORD PTR [rbx+0x28]
  42279a:	vmovss xmm1,DWORD PTR [rsp+0xc]
  4227a0:	mov    BYTE PTR [rsi],0x22
  4227a3:	xor    edi,edi
  4227a5:	cmp    BYTE PTR [rbx+0x32],0x0
  4227a9:	vmovss DWORD PTR [rsp+0xc],xmm1
  4227af:	mov    rdx,rbp
  4227b2:	mov    rsi,r13
  4227b5:	sete   dil
  4227b9:	add    rdi,QWORD PTR [rbx+0x28]
  4227bd:	lea    rax,[rdi+rbp*1]
  4227c1:	cmp    QWORD PTR [rbx+0x20],rax
  4227c5:	mov    QWORD PTR [rbx+0x28],rdi
  4227c9:	ja     422838 <flatcc_json_printer_float_field@@Base+0x138>
  4227cb:	mov    rdi,rbx
  4227ce:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4227d3:	mov    rbp,QWORD PTR [rbx+0x28]
  4227d7:	vmovss xmm1,DWORD PTR [rsp+0xc]
  4227dd:	mov    BYTE PTR [rbp+0x0],0x22
  4227e1:	xor    eax,eax
  4227e3:	cmp    BYTE PTR [rbx+0x32],0x0
  4227e7:	vxorpd xmm0,xmm0,xmm0
  4227eb:	sete   al
  4227ee:	add    rax,QWORD PTR [rbx+0x28]
  4227f2:	xor    edi,edi
  4227f4:	vcvtss2sd xmm0,xmm0,xmm1
  4227f8:	lea    rdx,[rax+0x1]
  4227fc:	mov    QWORD PTR [rbx+0x28],rdx
  422800:	mov    BYTE PTR [rax],0x3a
  422803:	mov    rax,QWORD PTR [rbx+0x28]
  422807:	mov    BYTE PTR [rax],0x20
  42280a:	cmp    BYTE PTR [rbx+0x31],0x0
  42280e:	setne  dil
  422812:	add    rdi,QWORD PTR [rbx+0x28]
  422816:	mov    QWORD PTR [rbx+0x28],rdi
  42281a:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  42281f:	cdqe   
  422821:	add    QWORD PTR [rbx+0x28],rax
  422825:	add    rsp,0x18
  422829:	pop    rbx
  42282a:	pop    rbp
  42282b:	pop    r12
  42282d:	pop    r13
  42282f:	repz ret 
  422831:	nop    DWORD PTR [rax+0x0]
  422838:	call   4050e0 <memcpy@plt>
  42283d:	add    rbp,QWORD PTR [rbx+0x28]
  422841:	vmovss xmm1,DWORD PTR [rsp+0xc]
  422847:	mov    QWORD PTR [rbx+0x28],rbp
  42284b:	jmp    4227dd <flatcc_json_printer_float_field@@Base+0xdd>
  42284d:	nop    DWORD PTR [rax]
  422850:	repz ret 
  422852:	nop    WORD PTR [rax+rax*1+0x0]
  422858:	mov    rax,QWORD PTR [rdi+0x28]
  42285c:	vmovss DWORD PTR [rsp+0xc],xmm1
  422862:	lea    rdx,[rax+0x1]
  422866:	mov    QWORD PTR [rdi+0x28],rdx
  42286a:	mov    BYTE PTR [rax],0xa
  42286d:	movzx  esi,BYTE PTR [rdi+0x31]
  422871:	imul   esi,DWORD PTR [rdi+0x38]
  422875:	mov    rdi,QWORD PTR [rdi+0x28]
  422879:	movsxd r12,esi
  42287c:	lea    rax,[rdi+r12*1]
  422880:	cmp    QWORD PTR [rbx+0x20],rax
  422884:	jb     4228b0 <flatcc_json_printer_float_field@@Base+0x1b0>
  422886:	mov    esi,0x20
  42288b:	mov    rdx,r12
  42288e:	call   405090 <memset@plt>
  422893:	mov    rsi,r12
  422896:	add    rsi,QWORD PTR [rbx+0x28]
  42289a:	vmovss xmm1,DWORD PTR [rsp+0xc]
  4228a0:	mov    QWORD PTR [rbx+0x28],rsi
  4228a4:	jmp    4227a0 <flatcc_json_printer_float_field@@Base+0xa0>
  4228a9:	nop    DWORD PTR [rax+0x0]
  4228b0:	mov    rsi,r12
  4228b3:	mov    rdi,rbx
  4228b6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4228bb:	mov    rsi,QWORD PTR [rbx+0x28]
  4228bf:	vmovss xmm1,DWORD PTR [rsp+0xc]
  4228c5:	jmp    4227a0 <flatcc_json_printer_float_field@@Base+0xa0>
  4228ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004228d0 <flatcc_json_printer_double_field@@Base>:
  4228d0:	lea    eax,[rdx+rdx*1+0x4]
  4228d4:	cmp    eax,DWORD PTR [rsi+0x10]
  4228d7:	jl     4228f0 <flatcc_json_printer_double_field@@Base+0x20>
  4228d9:	cmp    BYTE PTR [rdi+0x35],0x0
  4228dd:	je     4229fb <flatcc_json_printer_double_field@@Base+0x12b>
  4228e3:	vmovapd xmm1,xmm0
  4228e7:	jmp    422918 <flatcc_json_printer_double_field@@Base+0x48>
  4228e9:	nop    DWORD PTR [rax+0x0]
  4228f0:	mov    rdx,QWORD PTR [rsi+0x8]
  4228f4:	movzx  eax,WORD PTR [rdx+rax*1]
  4228f8:	test   ax,ax
  4228fb:	je     4228d9 <flatcc_json_printer_double_field@@Base+0x9>
  4228fd:	add    rax,QWORD PTR [rsi]
  422900:	je     4228d9 <flatcc_json_printer_double_field@@Base+0x9>
  422902:	vmovsd xmm1,QWORD PTR [rax]
  422906:	vucomisd xmm0,xmm1
  42290a:	jp     422918 <flatcc_json_printer_double_field@@Base+0x48>
  42290c:	jne    422918 <flatcc_json_printer_double_field@@Base+0x48>
  42290e:	cmp    BYTE PTR [rdi+0x34],0x0
  422912:	jne    422a18 <flatcc_json_printer_double_field@@Base+0x148>
  422918:	push   r13
  42291a:	push   r12
  42291c:	push   rbp
  42291d:	push   rbx
  42291e:	sub    rsp,0x18
  422922:	mov    eax,DWORD PTR [rsi+0x18]
  422925:	lea    edx,[rax+0x1]
  422928:	test   eax,eax
  42292a:	mov    DWORD PTR [rsi+0x18],edx
  42292d:	je     42293e <flatcc_json_printer_double_field@@Base+0x6e>
  42292f:	mov    rax,QWORD PTR [rdi+0x28]
  422933:	lea    rdx,[rax+0x1]
  422937:	mov    QWORD PTR [rdi+0x28],rdx
  42293b:	mov    BYTE PTR [rax],0x2c
  42293e:	cmp    BYTE PTR [rdi+0x31],0x0
  422942:	mov    r13,rcx
  422945:	mov    rbx,rdi
  422948:	movsxd rbp,r8d
  42294b:	jne    422a20 <flatcc_json_printer_double_field@@Base+0x150>
  422951:	mov    rsi,QWORD PTR [rdi+0x28]
  422955:	cmp    rsi,QWORD PTR [rdi+0x20]
  422959:	jb     422970 <flatcc_json_printer_double_field@@Base+0xa0>
  42295b:	vmovsd QWORD PTR [rsp+0x8],xmm1
  422961:	xor    esi,esi
  422963:	call   QWORD PTR [rdi+0x48]
  422966:	mov    rsi,QWORD PTR [rbx+0x28]
  42296a:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  422970:	mov    BYTE PTR [rsi],0x22
  422973:	xor    edi,edi
  422975:	cmp    BYTE PTR [rbx+0x32],0x0
  422979:	vmovsd QWORD PTR [rsp+0x8],xmm1
  42297f:	mov    rdx,rbp
  422982:	mov    rsi,r13
  422985:	sete   dil
  422989:	add    rdi,QWORD PTR [rbx+0x28]
  42298d:	lea    rax,[rdi+rbp*1]
  422991:	cmp    QWORD PTR [rbx+0x20],rax
  422995:	mov    QWORD PTR [rbx+0x28],rdi
  422999:	ja     422a00 <flatcc_json_printer_double_field@@Base+0x130>
  42299b:	mov    rdi,rbx
  42299e:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4229a3:	mov    rbp,QWORD PTR [rbx+0x28]
  4229a7:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  4229ad:	mov    BYTE PTR [rbp+0x0],0x22
  4229b1:	xor    eax,eax
  4229b3:	cmp    BYTE PTR [rbx+0x32],0x0
  4229b7:	vmovapd xmm0,xmm1
  4229bb:	sete   al
  4229be:	add    rax,QWORD PTR [rbx+0x28]
  4229c2:	xor    edi,edi
  4229c4:	lea    rdx,[rax+0x1]
  4229c8:	mov    QWORD PTR [rbx+0x28],rdx
  4229cc:	mov    BYTE PTR [rax],0x3a
  4229cf:	mov    rax,QWORD PTR [rbx+0x28]
  4229d3:	mov    BYTE PTR [rax],0x20
  4229d6:	cmp    BYTE PTR [rbx+0x31],0x0
  4229da:	setne  dil
  4229de:	add    rdi,QWORD PTR [rbx+0x28]
  4229e2:	mov    QWORD PTR [rbx+0x28],rdi
  4229e6:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  4229eb:	cdqe   
  4229ed:	add    QWORD PTR [rbx+0x28],rax
  4229f1:	add    rsp,0x18
  4229f5:	pop    rbx
  4229f6:	pop    rbp
  4229f7:	pop    r12
  4229f9:	pop    r13
  4229fb:	repz ret 
  4229fd:	nop    DWORD PTR [rax]
  422a00:	call   4050e0 <memcpy@plt>
  422a05:	add    rbp,QWORD PTR [rbx+0x28]
  422a09:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  422a0f:	mov    QWORD PTR [rbx+0x28],rbp
  422a13:	jmp    4229ad <flatcc_json_printer_double_field@@Base+0xdd>
  422a15:	nop    DWORD PTR [rax]
  422a18:	repz ret 
  422a1a:	nop    WORD PTR [rax+rax*1+0x0]
  422a20:	mov    rax,QWORD PTR [rdi+0x28]
  422a24:	vmovsd QWORD PTR [rsp+0x8],xmm1
  422a2a:	lea    rdx,[rax+0x1]
  422a2e:	mov    QWORD PTR [rdi+0x28],rdx
  422a32:	mov    BYTE PTR [rax],0xa
  422a35:	movzx  esi,BYTE PTR [rdi+0x31]
  422a39:	imul   esi,DWORD PTR [rdi+0x38]
  422a3d:	mov    rdi,QWORD PTR [rdi+0x28]
  422a41:	movsxd r12,esi
  422a44:	lea    rax,[rdi+r12*1]
  422a48:	cmp    QWORD PTR [rbx+0x20],rax
  422a4c:	jb     422a78 <flatcc_json_printer_double_field@@Base+0x1a8>
  422a4e:	mov    esi,0x20
  422a53:	mov    rdx,r12
  422a56:	call   405090 <memset@plt>
  422a5b:	mov    rsi,r12
  422a5e:	add    rsi,QWORD PTR [rbx+0x28]
  422a62:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  422a68:	mov    QWORD PTR [rbx+0x28],rsi
  422a6c:	jmp    422970 <flatcc_json_printer_double_field@@Base+0xa0>
  422a71:	nop    DWORD PTR [rax+0x0]
  422a78:	mov    rsi,r12
  422a7b:	mov    rdi,rbx
  422a7e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422a83:	mov    rsi,QWORD PTR [rbx+0x28]
  422a87:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  422a8d:	jmp    422970 <flatcc_json_printer_double_field@@Base+0xa0>
  422a92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422a9d:	nop    DWORD PTR [rax]

0000000000422aa0 <flatcc_json_printer_uint8_enum_field@@Base>:
  422aa0:	push   r15
  422aa2:	push   r14
  422aa4:	lea    eax,[rdx+rdx*1+0x4]
  422aa8:	push   r13
  422aaa:	push   r12
  422aac:	push   rbp
  422aad:	push   rbx
  422aae:	sub    rsp,0x8
  422ab2:	cmp    eax,DWORD PTR [rsi+0x10]
  422ab5:	mov    r12,QWORD PTR [rsp+0x40]
  422aba:	jl     422ad0 <flatcc_json_printer_uint8_enum_field@@Base+0x30>
  422abc:	cmp    BYTE PTR [rdi+0x35],0x0
  422ac0:	je     422bcf <flatcc_json_printer_uint8_enum_field@@Base+0x12f>
  422ac6:	mov    r13d,r9d
  422ac9:	jmp    422aef <flatcc_json_printer_uint8_enum_field@@Base+0x4f>
  422acb:	nop    DWORD PTR [rax+rax*1+0x0]
  422ad0:	mov    rdx,QWORD PTR [rsi+0x8]
  422ad4:	movzx  eax,WORD PTR [rdx+rax*1]
  422ad8:	test   ax,ax
  422adb:	je     422abc <flatcc_json_printer_uint8_enum_field@@Base+0x1c>
  422add:	add    rax,QWORD PTR [rsi]
  422ae0:	je     422abc <flatcc_json_printer_uint8_enum_field@@Base+0x1c>
  422ae2:	movzx  r13d,BYTE PTR [rax]
  422ae6:	cmp    r9b,r13b
  422ae9:	je     422bf8 <flatcc_json_printer_uint8_enum_field@@Base+0x158>
  422aef:	mov    eax,DWORD PTR [rsi+0x18]
  422af2:	lea    edx,[rax+0x1]
  422af5:	test   eax,eax
  422af7:	mov    DWORD PTR [rsi+0x18],edx
  422afa:	je     422b0b <flatcc_json_printer_uint8_enum_field@@Base+0x6b>
  422afc:	mov    rax,QWORD PTR [rdi+0x28]
  422b00:	lea    rdx,[rax+0x1]
  422b04:	mov    QWORD PTR [rdi+0x28],rdx
  422b08:	mov    BYTE PTR [rax],0x2c
  422b0b:	cmp    BYTE PTR [rdi+0x31],0x0
  422b0f:	mov    r15,rcx
  422b12:	mov    rbx,rdi
  422b15:	movsxd rbp,r8d
  422b18:	jne    422c08 <flatcc_json_printer_uint8_enum_field@@Base+0x168>
  422b1e:	mov    rsi,QWORD PTR [rdi+0x28]
  422b22:	cmp    rsi,QWORD PTR [rdi+0x20]
  422b26:	jb     422b31 <flatcc_json_printer_uint8_enum_field@@Base+0x91>
  422b28:	xor    esi,esi
  422b2a:	call   QWORD PTR [rdi+0x48]
  422b2d:	mov    rsi,QWORD PTR [rbx+0x28]
  422b31:	mov    BYTE PTR [rsi],0x22
  422b34:	xor    edi,edi
  422b36:	cmp    BYTE PTR [rbx+0x32],0x0
  422b3a:	mov    rdx,rbp
  422b3d:	mov    rsi,r15
  422b40:	sete   dil
  422b44:	add    rdi,QWORD PTR [rbx+0x28]
  422b48:	lea    rax,[rdi+rbp*1]
  422b4c:	cmp    QWORD PTR [rbx+0x20],rax
  422b50:	mov    QWORD PTR [rbx+0x28],rdi
  422b54:	ja     422be0 <flatcc_json_printer_uint8_enum_field@@Base+0x140>
  422b5a:	mov    rdi,rbx
  422b5d:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422b62:	mov    rbp,QWORD PTR [rbx+0x28]
  422b66:	mov    BYTE PTR [rbp+0x0],0x22
  422b6a:	xor    eax,eax
  422b6c:	cmp    BYTE PTR [rbx+0x32],0x0
  422b70:	sete   al
  422b73:	add    rax,QWORD PTR [rbx+0x28]
  422b77:	xor    esi,esi
  422b79:	lea    rdx,[rax+0x1]
  422b7d:	mov    QWORD PTR [rbx+0x28],rdx
  422b81:	mov    BYTE PTR [rax],0x3a
  422b84:	mov    rax,QWORD PTR [rbx+0x28]
  422b88:	mov    BYTE PTR [rax],0x20
  422b8b:	cmp    BYTE PTR [rbx+0x31],0x0
  422b8f:	setne  sil
  422b93:	add    rsi,QWORD PTR [rbx+0x28]
  422b97:	cmp    BYTE PTR [rbx+0x33],0x0
  422b9b:	mov    QWORD PTR [rbx+0x28],rsi
  422b9f:	jne    422bc0 <flatcc_json_printer_uint8_enum_field@@Base+0x120>
  422ba1:	add    rsp,0x8
  422ba5:	movzx  esi,r13b
  422ba9:	mov    rdi,rbx
  422bac:	mov    rax,r12
  422baf:	pop    rbx
  422bb0:	pop    rbp
  422bb1:	pop    r12
  422bb3:	pop    r13
  422bb5:	pop    r14
  422bb7:	pop    r15
  422bb9:	jmp    rax
  422bbb:	nop    DWORD PTR [rax+rax*1+0x0]
  422bc0:	movzx  edi,r13b
  422bc4:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  422bc9:	cdqe   
  422bcb:	add    QWORD PTR [rbx+0x28],rax
  422bcf:	add    rsp,0x8
  422bd3:	pop    rbx
  422bd4:	pop    rbp
  422bd5:	pop    r12
  422bd7:	pop    r13
  422bd9:	pop    r14
  422bdb:	pop    r15
  422bdd:	ret    
  422bde:	xchg   ax,ax
  422be0:	call   4050e0 <memcpy@plt>
  422be5:	add    rbp,QWORD PTR [rbx+0x28]
  422be9:	mov    QWORD PTR [rbx+0x28],rbp
  422bed:	jmp    422b66 <flatcc_json_printer_uint8_enum_field@@Base+0xc6>
  422bf2:	nop    WORD PTR [rax+rax*1+0x0]
  422bf8:	cmp    BYTE PTR [rdi+0x34],0x0
  422bfc:	je     422aef <flatcc_json_printer_uint8_enum_field@@Base+0x4f>
  422c02:	jmp    422bcf <flatcc_json_printer_uint8_enum_field@@Base+0x12f>
  422c04:	nop    DWORD PTR [rax+0x0]
  422c08:	mov    rax,QWORD PTR [rdi+0x28]
  422c0c:	lea    rdx,[rax+0x1]
  422c10:	mov    QWORD PTR [rdi+0x28],rdx
  422c14:	mov    BYTE PTR [rax],0xa
  422c17:	movzx  esi,BYTE PTR [rdi+0x31]
  422c1b:	imul   esi,DWORD PTR [rdi+0x38]
  422c1f:	mov    rdi,QWORD PTR [rdi+0x28]
  422c23:	movsxd r14,esi
  422c26:	lea    rax,[rdi+r14*1]
  422c2a:	cmp    QWORD PTR [rbx+0x20],rax
  422c2e:	jb     422c50 <flatcc_json_printer_uint8_enum_field@@Base+0x1b0>
  422c30:	mov    esi,0x20
  422c35:	mov    rdx,r14
  422c38:	call   405090 <memset@plt>
  422c3d:	mov    rsi,r14
  422c40:	add    rsi,QWORD PTR [rbx+0x28]
  422c44:	mov    QWORD PTR [rbx+0x28],rsi
  422c48:	jmp    422b31 <flatcc_json_printer_uint8_enum_field@@Base+0x91>
  422c4d:	nop    DWORD PTR [rax]
  422c50:	mov    rsi,r14
  422c53:	mov    rdi,rbx
  422c56:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422c5b:	mov    rsi,QWORD PTR [rbx+0x28]
  422c5f:	jmp    422b31 <flatcc_json_printer_uint8_enum_field@@Base+0x91>
  422c64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422c6f:	nop

0000000000422c70 <flatcc_json_printer_uint16_enum_field@@Base>:
  422c70:	push   r15
  422c72:	push   r14
  422c74:	lea    eax,[rdx+rdx*1+0x4]
  422c78:	push   r13
  422c7a:	push   r12
  422c7c:	push   rbp
  422c7d:	push   rbx
  422c7e:	sub    rsp,0x8
  422c82:	cmp    eax,DWORD PTR [rsi+0x10]
  422c85:	mov    r12,QWORD PTR [rsp+0x40]
  422c8a:	jl     422ca0 <flatcc_json_printer_uint16_enum_field@@Base+0x30>
  422c8c:	cmp    BYTE PTR [rdi+0x35],0x0
  422c90:	je     422d9f <flatcc_json_printer_uint16_enum_field@@Base+0x12f>
  422c96:	mov    r13d,r9d
  422c99:	jmp    422cc0 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  422c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  422ca0:	mov    rdx,QWORD PTR [rsi+0x8]
  422ca4:	movzx  eax,WORD PTR [rdx+rax*1]
  422ca8:	test   ax,ax
  422cab:	je     422c8c <flatcc_json_printer_uint16_enum_field@@Base+0x1c>
  422cad:	add    rax,QWORD PTR [rsi]
  422cb0:	je     422c8c <flatcc_json_printer_uint16_enum_field@@Base+0x1c>
  422cb2:	movzx  r13d,WORD PTR [rax]
  422cb6:	cmp    r9w,r13w
  422cba:	je     422dc8 <flatcc_json_printer_uint16_enum_field@@Base+0x158>
  422cc0:	mov    eax,DWORD PTR [rsi+0x18]
  422cc3:	lea    edx,[rax+0x1]
  422cc6:	test   eax,eax
  422cc8:	mov    DWORD PTR [rsi+0x18],edx
  422ccb:	je     422cdc <flatcc_json_printer_uint16_enum_field@@Base+0x6c>
  422ccd:	mov    rax,QWORD PTR [rdi+0x28]
  422cd1:	lea    rdx,[rax+0x1]
  422cd5:	mov    QWORD PTR [rdi+0x28],rdx
  422cd9:	mov    BYTE PTR [rax],0x2c
  422cdc:	cmp    BYTE PTR [rdi+0x31],0x0
  422ce0:	mov    r15,rcx
  422ce3:	mov    rbx,rdi
  422ce6:	movsxd rbp,r8d
  422ce9:	jne    422dd8 <flatcc_json_printer_uint16_enum_field@@Base+0x168>
  422cef:	mov    rsi,QWORD PTR [rdi+0x28]
  422cf3:	cmp    rsi,QWORD PTR [rdi+0x20]
  422cf7:	jb     422d02 <flatcc_json_printer_uint16_enum_field@@Base+0x92>
  422cf9:	xor    esi,esi
  422cfb:	call   QWORD PTR [rdi+0x48]
  422cfe:	mov    rsi,QWORD PTR [rbx+0x28]
  422d02:	mov    BYTE PTR [rsi],0x22
  422d05:	xor    edi,edi
  422d07:	cmp    BYTE PTR [rbx+0x32],0x0
  422d0b:	mov    rdx,rbp
  422d0e:	mov    rsi,r15
  422d11:	sete   dil
  422d15:	add    rdi,QWORD PTR [rbx+0x28]
  422d19:	lea    rax,[rdi+rbp*1]
  422d1d:	cmp    QWORD PTR [rbx+0x20],rax
  422d21:	mov    QWORD PTR [rbx+0x28],rdi
  422d25:	ja     422db0 <flatcc_json_printer_uint16_enum_field@@Base+0x140>
  422d2b:	mov    rdi,rbx
  422d2e:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422d33:	mov    rbp,QWORD PTR [rbx+0x28]
  422d37:	mov    BYTE PTR [rbp+0x0],0x22
  422d3b:	xor    eax,eax
  422d3d:	cmp    BYTE PTR [rbx+0x32],0x0
  422d41:	sete   al
  422d44:	add    rax,QWORD PTR [rbx+0x28]
  422d48:	xor    esi,esi
  422d4a:	lea    rdx,[rax+0x1]
  422d4e:	mov    QWORD PTR [rbx+0x28],rdx
  422d52:	mov    BYTE PTR [rax],0x3a
  422d55:	mov    rax,QWORD PTR [rbx+0x28]
  422d59:	mov    BYTE PTR [rax],0x20
  422d5c:	cmp    BYTE PTR [rbx+0x31],0x0
  422d60:	setne  sil
  422d64:	add    rsi,QWORD PTR [rbx+0x28]
  422d68:	cmp    BYTE PTR [rbx+0x33],0x0
  422d6c:	mov    QWORD PTR [rbx+0x28],rsi
  422d70:	jne    422d90 <flatcc_json_printer_uint16_enum_field@@Base+0x120>
  422d72:	add    rsp,0x8
  422d76:	movzx  esi,r13w
  422d7a:	mov    rdi,rbx
  422d7d:	mov    rax,r12
  422d80:	pop    rbx
  422d81:	pop    rbp
  422d82:	pop    r12
  422d84:	pop    r13
  422d86:	pop    r14
  422d88:	pop    r15
  422d8a:	jmp    rax
  422d8c:	nop    DWORD PTR [rax+0x0]
  422d90:	movzx  edi,r13w
  422d94:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  422d99:	cdqe   
  422d9b:	add    QWORD PTR [rbx+0x28],rax
  422d9f:	add    rsp,0x8
  422da3:	pop    rbx
  422da4:	pop    rbp
  422da5:	pop    r12
  422da7:	pop    r13
  422da9:	pop    r14
  422dab:	pop    r15
  422dad:	ret    
  422dae:	xchg   ax,ax
  422db0:	call   4050e0 <memcpy@plt>
  422db5:	add    rbp,QWORD PTR [rbx+0x28]
  422db9:	mov    QWORD PTR [rbx+0x28],rbp
  422dbd:	jmp    422d37 <flatcc_json_printer_uint16_enum_field@@Base+0xc7>
  422dc2:	nop    WORD PTR [rax+rax*1+0x0]
  422dc8:	cmp    BYTE PTR [rdi+0x34],0x0
  422dcc:	je     422cc0 <flatcc_json_printer_uint16_enum_field@@Base+0x50>
  422dd2:	jmp    422d9f <flatcc_json_printer_uint16_enum_field@@Base+0x12f>
  422dd4:	nop    DWORD PTR [rax+0x0]
  422dd8:	mov    rax,QWORD PTR [rdi+0x28]
  422ddc:	lea    rdx,[rax+0x1]
  422de0:	mov    QWORD PTR [rdi+0x28],rdx
  422de4:	mov    BYTE PTR [rax],0xa
  422de7:	movzx  esi,BYTE PTR [rdi+0x31]
  422deb:	imul   esi,DWORD PTR [rdi+0x38]
  422def:	mov    rdi,QWORD PTR [rdi+0x28]
  422df3:	movsxd r14,esi
  422df6:	lea    rax,[rdi+r14*1]
  422dfa:	cmp    QWORD PTR [rbx+0x20],rax
  422dfe:	jb     422e20 <flatcc_json_printer_uint16_enum_field@@Base+0x1b0>
  422e00:	mov    esi,0x20
  422e05:	mov    rdx,r14
  422e08:	call   405090 <memset@plt>
  422e0d:	mov    rsi,r14
  422e10:	add    rsi,QWORD PTR [rbx+0x28]
  422e14:	mov    QWORD PTR [rbx+0x28],rsi
  422e18:	jmp    422d02 <flatcc_json_printer_uint16_enum_field@@Base+0x92>
  422e1d:	nop    DWORD PTR [rax]
  422e20:	mov    rsi,r14
  422e23:	mov    rdi,rbx
  422e26:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422e2b:	mov    rsi,QWORD PTR [rbx+0x28]
  422e2f:	jmp    422d02 <flatcc_json_printer_uint16_enum_field@@Base+0x92>
  422e34:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  422e3f:	nop

0000000000422e40 <flatcc_json_printer_uint32_enum_field@@Base>:
  422e40:	push   r15
  422e42:	push   r14
  422e44:	lea    eax,[rdx+rdx*1+0x4]
  422e48:	push   r13
  422e4a:	push   r12
  422e4c:	push   rbp
  422e4d:	push   rbx
  422e4e:	sub    rsp,0x8
  422e52:	cmp    eax,DWORD PTR [rsi+0x10]
  422e55:	mov    r12,QWORD PTR [rsp+0x40]
  422e5a:	jl     422e70 <flatcc_json_printer_uint32_enum_field@@Base+0x30>
  422e5c:	cmp    BYTE PTR [rdi+0x35],0x0
  422e60:	je     422f6e <flatcc_json_printer_uint32_enum_field@@Base+0x12e>
  422e66:	mov    r14d,r9d
  422e69:	jmp    422e8e <flatcc_json_printer_uint32_enum_field@@Base+0x4e>
  422e6b:	nop    DWORD PTR [rax+rax*1+0x0]
  422e70:	mov    rdx,QWORD PTR [rsi+0x8]
  422e74:	movzx  eax,WORD PTR [rdx+rax*1]
  422e78:	test   ax,ax
  422e7b:	je     422e5c <flatcc_json_printer_uint32_enum_field@@Base+0x1c>
  422e7d:	add    rax,QWORD PTR [rsi]
  422e80:	je     422e5c <flatcc_json_printer_uint32_enum_field@@Base+0x1c>
  422e82:	mov    r14d,DWORD PTR [rax]
  422e85:	cmp    r9d,r14d
  422e88:	je     422f98 <flatcc_json_printer_uint32_enum_field@@Base+0x158>
  422e8e:	mov    eax,DWORD PTR [rsi+0x18]
  422e91:	lea    edx,[rax+0x1]
  422e94:	test   eax,eax
  422e96:	mov    DWORD PTR [rsi+0x18],edx
  422e99:	je     422eaa <flatcc_json_printer_uint32_enum_field@@Base+0x6a>
  422e9b:	mov    rax,QWORD PTR [rdi+0x28]
  422e9f:	lea    rdx,[rax+0x1]
  422ea3:	mov    QWORD PTR [rdi+0x28],rdx
  422ea7:	mov    BYTE PTR [rax],0x2c
  422eaa:	cmp    BYTE PTR [rdi+0x31],0x0
  422eae:	mov    r15,rcx
  422eb1:	mov    rbx,rdi
  422eb4:	movsxd rbp,r8d
  422eb7:	jne    422fa8 <flatcc_json_printer_uint32_enum_field@@Base+0x168>
  422ebd:	mov    rsi,QWORD PTR [rdi+0x28]
  422ec1:	cmp    rsi,QWORD PTR [rdi+0x20]
  422ec5:	jb     422ed0 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
  422ec7:	xor    esi,esi
  422ec9:	call   QWORD PTR [rdi+0x48]
  422ecc:	mov    rsi,QWORD PTR [rbx+0x28]
  422ed0:	mov    BYTE PTR [rsi],0x22
  422ed3:	xor    edi,edi
  422ed5:	cmp    BYTE PTR [rbx+0x32],0x0
  422ed9:	mov    rdx,rbp
  422edc:	mov    rsi,r15
  422edf:	sete   dil
  422ee3:	add    rdi,QWORD PTR [rbx+0x28]
  422ee7:	lea    rax,[rdi+rbp*1]
  422eeb:	cmp    QWORD PTR [rbx+0x20],rax
  422eef:	mov    QWORD PTR [rbx+0x28],rdi
  422ef3:	ja     422f80 <flatcc_json_printer_uint32_enum_field@@Base+0x140>
  422ef9:	mov    rdi,rbx
  422efc:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  422f01:	mov    rbp,QWORD PTR [rbx+0x28]
  422f05:	mov    BYTE PTR [rbp+0x0],0x22
  422f09:	xor    eax,eax
  422f0b:	cmp    BYTE PTR [rbx+0x32],0x0
  422f0f:	sete   al
  422f12:	add    rax,QWORD PTR [rbx+0x28]
  422f16:	xor    esi,esi
  422f18:	lea    rdx,[rax+0x1]
  422f1c:	mov    QWORD PTR [rbx+0x28],rdx
  422f20:	mov    BYTE PTR [rax],0x3a
  422f23:	mov    rax,QWORD PTR [rbx+0x28]
  422f27:	mov    BYTE PTR [rax],0x20
  422f2a:	cmp    BYTE PTR [rbx+0x31],0x0
  422f2e:	setne  sil
  422f32:	add    rsi,QWORD PTR [rbx+0x28]
  422f36:	cmp    BYTE PTR [rbx+0x33],0x0
  422f3a:	mov    QWORD PTR [rbx+0x28],rsi
  422f3e:	jne    422f60 <flatcc_json_printer_uint32_enum_field@@Base+0x120>
  422f40:	add    rsp,0x8
  422f44:	mov    esi,r14d
  422f47:	mov    rdi,rbx
  422f4a:	mov    rax,r12
  422f4d:	pop    rbx
  422f4e:	pop    rbp
  422f4f:	pop    r12
  422f51:	pop    r13
  422f53:	pop    r14
  422f55:	pop    r15
  422f57:	jmp    rax
  422f59:	nop    DWORD PTR [rax+0x0]
  422f60:	mov    edi,r14d
  422f63:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  422f68:	cdqe   
  422f6a:	add    QWORD PTR [rbx+0x28],rax
  422f6e:	add    rsp,0x8
  422f72:	pop    rbx
  422f73:	pop    rbp
  422f74:	pop    r12
  422f76:	pop    r13
  422f78:	pop    r14
  422f7a:	pop    r15
  422f7c:	ret    
  422f7d:	nop    DWORD PTR [rax]
  422f80:	call   4050e0 <memcpy@plt>
  422f85:	add    rbp,QWORD PTR [rbx+0x28]
  422f89:	mov    QWORD PTR [rbx+0x28],rbp
  422f8d:	jmp    422f05 <flatcc_json_printer_uint32_enum_field@@Base+0xc5>
  422f92:	nop    WORD PTR [rax+rax*1+0x0]
  422f98:	cmp    BYTE PTR [rdi+0x34],0x0
  422f9c:	je     422e8e <flatcc_json_printer_uint32_enum_field@@Base+0x4e>
  422fa2:	jmp    422f6e <flatcc_json_printer_uint32_enum_field@@Base+0x12e>
  422fa4:	nop    DWORD PTR [rax+0x0]
  422fa8:	mov    rax,QWORD PTR [rdi+0x28]
  422fac:	lea    rdx,[rax+0x1]
  422fb0:	mov    QWORD PTR [rdi+0x28],rdx
  422fb4:	mov    BYTE PTR [rax],0xa
  422fb7:	movzx  esi,BYTE PTR [rdi+0x31]
  422fbb:	imul   esi,DWORD PTR [rdi+0x38]
  422fbf:	mov    rdi,QWORD PTR [rdi+0x28]
  422fc3:	movsxd r13,esi
  422fc6:	lea    rax,[rdi+r13*1]
  422fca:	cmp    QWORD PTR [rbx+0x20],rax
  422fce:	jb     422ff0 <flatcc_json_printer_uint32_enum_field@@Base+0x1b0>
  422fd0:	mov    esi,0x20
  422fd5:	mov    rdx,r13
  422fd8:	call   405090 <memset@plt>
  422fdd:	mov    rsi,r13
  422fe0:	add    rsi,QWORD PTR [rbx+0x28]
  422fe4:	mov    QWORD PTR [rbx+0x28],rsi
  422fe8:	jmp    422ed0 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
  422fed:	nop    DWORD PTR [rax]
  422ff0:	mov    rsi,r13
  422ff3:	mov    rdi,rbx
  422ff6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  422ffb:	mov    rsi,QWORD PTR [rbx+0x28]
  422fff:	jmp    422ed0 <flatcc_json_printer_uint32_enum_field@@Base+0x90>
  423004:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42300f:	nop

0000000000423010 <flatcc_json_printer_uint64_enum_field@@Base>:
  423010:	push   r15
  423012:	push   r14
  423014:	lea    eax,[rdx+rdx*1+0x4]
  423018:	push   r13
  42301a:	push   r12
  42301c:	push   rbp
  42301d:	push   rbx
  42301e:	sub    rsp,0x8
  423022:	cmp    eax,DWORD PTR [rsi+0x10]
  423025:	mov    r12,QWORD PTR [rsp+0x40]
  42302a:	jl     423040 <flatcc_json_printer_uint64_enum_field@@Base+0x30>
  42302c:	cmp    BYTE PTR [rdi+0x35],0x0
  423030:	je     42313e <flatcc_json_printer_uint64_enum_field@@Base+0x12e>
  423036:	mov    r14,r9
  423039:	jmp    42305e <flatcc_json_printer_uint64_enum_field@@Base+0x4e>
  42303b:	nop    DWORD PTR [rax+rax*1+0x0]
  423040:	mov    rdx,QWORD PTR [rsi+0x8]
  423044:	movzx  eax,WORD PTR [rdx+rax*1]
  423048:	test   ax,ax
  42304b:	je     42302c <flatcc_json_printer_uint64_enum_field@@Base+0x1c>
  42304d:	add    rax,QWORD PTR [rsi]
  423050:	je     42302c <flatcc_json_printer_uint64_enum_field@@Base+0x1c>
  423052:	mov    r14,QWORD PTR [rax]
  423055:	cmp    r9,r14
  423058:	je     423168 <flatcc_json_printer_uint64_enum_field@@Base+0x158>
  42305e:	mov    eax,DWORD PTR [rsi+0x18]
  423061:	lea    edx,[rax+0x1]
  423064:	test   eax,eax
  423066:	mov    DWORD PTR [rsi+0x18],edx
  423069:	je     42307a <flatcc_json_printer_uint64_enum_field@@Base+0x6a>
  42306b:	mov    rax,QWORD PTR [rdi+0x28]
  42306f:	lea    rdx,[rax+0x1]
  423073:	mov    QWORD PTR [rdi+0x28],rdx
  423077:	mov    BYTE PTR [rax],0x2c
  42307a:	cmp    BYTE PTR [rdi+0x31],0x0
  42307e:	mov    r15,rcx
  423081:	mov    rbx,rdi
  423084:	movsxd rbp,r8d
  423087:	jne    423178 <flatcc_json_printer_uint64_enum_field@@Base+0x168>
  42308d:	mov    rsi,QWORD PTR [rdi+0x28]
  423091:	cmp    rsi,QWORD PTR [rdi+0x20]
  423095:	jb     4230a0 <flatcc_json_printer_uint64_enum_field@@Base+0x90>
  423097:	xor    esi,esi
  423099:	call   QWORD PTR [rdi+0x48]
  42309c:	mov    rsi,QWORD PTR [rbx+0x28]
  4230a0:	mov    BYTE PTR [rsi],0x22
  4230a3:	xor    edi,edi
  4230a5:	cmp    BYTE PTR [rbx+0x32],0x0
  4230a9:	mov    rdx,rbp
  4230ac:	mov    rsi,r15
  4230af:	sete   dil
  4230b3:	add    rdi,QWORD PTR [rbx+0x28]
  4230b7:	lea    rax,[rdi+rbp*1]
  4230bb:	cmp    QWORD PTR [rbx+0x20],rax
  4230bf:	mov    QWORD PTR [rbx+0x28],rdi
  4230c3:	ja     423150 <flatcc_json_printer_uint64_enum_field@@Base+0x140>
  4230c9:	mov    rdi,rbx
  4230cc:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4230d1:	mov    rbp,QWORD PTR [rbx+0x28]
  4230d5:	mov    BYTE PTR [rbp+0x0],0x22
  4230d9:	xor    eax,eax
  4230db:	cmp    BYTE PTR [rbx+0x32],0x0
  4230df:	sete   al
  4230e2:	add    rax,QWORD PTR [rbx+0x28]
  4230e6:	xor    esi,esi
  4230e8:	lea    rdx,[rax+0x1]
  4230ec:	mov    QWORD PTR [rbx+0x28],rdx
  4230f0:	mov    BYTE PTR [rax],0x3a
  4230f3:	mov    rax,QWORD PTR [rbx+0x28]
  4230f7:	mov    BYTE PTR [rax],0x20
  4230fa:	cmp    BYTE PTR [rbx+0x31],0x0
  4230fe:	setne  sil
  423102:	add    rsi,QWORD PTR [rbx+0x28]
  423106:	cmp    BYTE PTR [rbx+0x33],0x0
  42310a:	mov    QWORD PTR [rbx+0x28],rsi
  42310e:	jne    423130 <flatcc_json_printer_uint64_enum_field@@Base+0x120>
  423110:	add    rsp,0x8
  423114:	mov    rsi,r14
  423117:	mov    rdi,rbx
  42311a:	mov    rax,r12
  42311d:	pop    rbx
  42311e:	pop    rbp
  42311f:	pop    r12
  423121:	pop    r13
  423123:	pop    r14
  423125:	pop    r15
  423127:	jmp    rax
  423129:	nop    DWORD PTR [rax+0x0]
  423130:	mov    rdi,r14
  423133:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  423138:	cdqe   
  42313a:	add    QWORD PTR [rbx+0x28],rax
  42313e:	add    rsp,0x8
  423142:	pop    rbx
  423143:	pop    rbp
  423144:	pop    r12
  423146:	pop    r13
  423148:	pop    r14
  42314a:	pop    r15
  42314c:	ret    
  42314d:	nop    DWORD PTR [rax]
  423150:	call   4050e0 <memcpy@plt>
  423155:	add    rbp,QWORD PTR [rbx+0x28]
  423159:	mov    QWORD PTR [rbx+0x28],rbp
  42315d:	jmp    4230d5 <flatcc_json_printer_uint64_enum_field@@Base+0xc5>
  423162:	nop    WORD PTR [rax+rax*1+0x0]
  423168:	cmp    BYTE PTR [rdi+0x34],0x0
  42316c:	je     42305e <flatcc_json_printer_uint64_enum_field@@Base+0x4e>
  423172:	jmp    42313e <flatcc_json_printer_uint64_enum_field@@Base+0x12e>
  423174:	nop    DWORD PTR [rax+0x0]
  423178:	mov    rax,QWORD PTR [rdi+0x28]
  42317c:	lea    rdx,[rax+0x1]
  423180:	mov    QWORD PTR [rdi+0x28],rdx
  423184:	mov    BYTE PTR [rax],0xa
  423187:	movzx  esi,BYTE PTR [rdi+0x31]
  42318b:	imul   esi,DWORD PTR [rdi+0x38]
  42318f:	mov    rdi,QWORD PTR [rdi+0x28]
  423193:	movsxd r13,esi
  423196:	lea    rax,[rdi+r13*1]
  42319a:	cmp    QWORD PTR [rbx+0x20],rax
  42319e:	jb     4231c0 <flatcc_json_printer_uint64_enum_field@@Base+0x1b0>
  4231a0:	mov    esi,0x20
  4231a5:	mov    rdx,r13
  4231a8:	call   405090 <memset@plt>
  4231ad:	mov    rsi,r13
  4231b0:	add    rsi,QWORD PTR [rbx+0x28]
  4231b4:	mov    QWORD PTR [rbx+0x28],rsi
  4231b8:	jmp    4230a0 <flatcc_json_printer_uint64_enum_field@@Base+0x90>
  4231bd:	nop    DWORD PTR [rax]
  4231c0:	mov    rsi,r13
  4231c3:	mov    rdi,rbx
  4231c6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4231cb:	mov    rsi,QWORD PTR [rbx+0x28]
  4231cf:	jmp    4230a0 <flatcc_json_printer_uint64_enum_field@@Base+0x90>
  4231d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4231df:	nop

00000000004231e0 <flatcc_json_printer_int8_enum_field@@Base>:
  4231e0:	push   r15
  4231e2:	push   r14
  4231e4:	lea    eax,[rdx+rdx*1+0x4]
  4231e8:	push   r13
  4231ea:	push   r12
  4231ec:	push   rbp
  4231ed:	push   rbx
  4231ee:	sub    rsp,0x8
  4231f2:	cmp    eax,DWORD PTR [rsi+0x10]
  4231f5:	mov    r12,QWORD PTR [rsp+0x40]
  4231fa:	jl     423210 <flatcc_json_printer_int8_enum_field@@Base+0x30>
  4231fc:	cmp    BYTE PTR [rdi+0x35],0x0
  423200:	je     42330b <flatcc_json_printer_int8_enum_field@@Base+0x12b>
  423206:	mov    r13d,r9d
  423209:	jmp    42322f <flatcc_json_printer_int8_enum_field@@Base+0x4f>
  42320b:	nop    DWORD PTR [rax+rax*1+0x0]
  423210:	mov    rdx,QWORD PTR [rsi+0x8]
  423214:	movzx  eax,WORD PTR [rdx+rax*1]
  423218:	test   ax,ax
  42321b:	je     4231fc <flatcc_json_printer_int8_enum_field@@Base+0x1c>
  42321d:	add    rax,QWORD PTR [rsi]
  423220:	je     4231fc <flatcc_json_printer_int8_enum_field@@Base+0x1c>
  423222:	movzx  r13d,BYTE PTR [rax]
  423226:	cmp    r9b,r13b
  423229:	je     423358 <flatcc_json_printer_int8_enum_field@@Base+0x178>
  42322f:	mov    eax,DWORD PTR [rsi+0x18]
  423232:	lea    edx,[rax+0x1]
  423235:	test   eax,eax
  423237:	mov    DWORD PTR [rsi+0x18],edx
  42323a:	je     42324b <flatcc_json_printer_int8_enum_field@@Base+0x6b>
  42323c:	mov    rax,QWORD PTR [rdi+0x28]
  423240:	lea    rdx,[rax+0x1]
  423244:	mov    QWORD PTR [rdi+0x28],rdx
  423248:	mov    BYTE PTR [rax],0x2c
  42324b:	cmp    BYTE PTR [rdi+0x31],0x0
  42324f:	mov    r15,rcx
  423252:	mov    rbx,rdi
  423255:	movsxd rbp,r8d
  423258:	jne    423368 <flatcc_json_printer_int8_enum_field@@Base+0x188>
  42325e:	mov    rsi,QWORD PTR [rdi+0x28]
  423262:	cmp    rsi,QWORD PTR [rdi+0x20]
  423266:	jb     423271 <flatcc_json_printer_int8_enum_field@@Base+0x91>
  423268:	xor    esi,esi
  42326a:	call   QWORD PTR [rdi+0x48]
  42326d:	mov    rsi,QWORD PTR [rbx+0x28]
  423271:	mov    BYTE PTR [rsi],0x22
  423274:	xor    edi,edi
  423276:	cmp    BYTE PTR [rbx+0x32],0x0
  42327a:	mov    rdx,rbp
  42327d:	mov    rsi,r15
  423280:	sete   dil
  423284:	add    rdi,QWORD PTR [rbx+0x28]
  423288:	lea    rax,[rdi+rbp*1]
  42328c:	cmp    QWORD PTR [rbx+0x20],rax
  423290:	mov    QWORD PTR [rbx+0x28],rdi
  423294:	ja     423320 <flatcc_json_printer_int8_enum_field@@Base+0x140>
  42329a:	mov    rdi,rbx
  42329d:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4232a2:	mov    rbp,QWORD PTR [rbx+0x28]
  4232a6:	mov    BYTE PTR [rbp+0x0],0x22
  4232aa:	xor    eax,eax
  4232ac:	cmp    BYTE PTR [rbx+0x32],0x0
  4232b0:	sete   al
  4232b3:	add    rax,QWORD PTR [rbx+0x28]
  4232b7:	xor    esi,esi
  4232b9:	lea    rdx,[rax+0x1]
  4232bd:	mov    QWORD PTR [rbx+0x28],rdx
  4232c1:	mov    BYTE PTR [rax],0x3a
  4232c4:	mov    rax,QWORD PTR [rbx+0x28]
  4232c8:	mov    BYTE PTR [rax],0x20
  4232cb:	cmp    BYTE PTR [rbx+0x31],0x0
  4232cf:	setne  sil
  4232d3:	add    rsi,QWORD PTR [rbx+0x28]
  4232d7:	cmp    BYTE PTR [rbx+0x33],0x0
  4232db:	mov    QWORD PTR [rbx+0x28],rsi
  4232df:	je     423338 <flatcc_json_printer_int8_enum_field@@Base+0x158>
  4232e1:	movsx  r8d,r13b
  4232e5:	shr    r8d,0x1f
  4232e9:	test   r13b,r13b
  4232ec:	jns    4232f8 <flatcc_json_printer_int8_enum_field@@Base+0x118>
  4232ee:	mov    BYTE PTR [rsi],0x2d
  4232f1:	neg    r13d
  4232f4:	add    rsi,0x1
  4232f8:	movzx  edi,r13b
  4232fc:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  423301:	add    r8d,eax
  423304:	movsxd r8,r8d
  423307:	add    QWORD PTR [rbx+0x28],r8
  42330b:	add    rsp,0x8
  42330f:	pop    rbx
  423310:	pop    rbp
  423311:	pop    r12
  423313:	pop    r13
  423315:	pop    r14
  423317:	pop    r15
  423319:	ret    
  42331a:	nop    WORD PTR [rax+rax*1+0x0]
  423320:	call   4050e0 <memcpy@plt>
  423325:	add    rbp,QWORD PTR [rbx+0x28]
  423329:	mov    QWORD PTR [rbx+0x28],rbp
  42332d:	jmp    4232a6 <flatcc_json_printer_int8_enum_field@@Base+0xc6>
  423332:	nop    WORD PTR [rax+rax*1+0x0]
  423338:	add    rsp,0x8
  42333c:	movsx  esi,r13b
  423340:	mov    rdi,rbx
  423343:	mov    rax,r12
  423346:	pop    rbx
  423347:	pop    rbp
  423348:	pop    r12
  42334a:	pop    r13
  42334c:	pop    r14
  42334e:	pop    r15
  423350:	jmp    rax
  423352:	nop    WORD PTR [rax+rax*1+0x0]
  423358:	cmp    BYTE PTR [rdi+0x34],0x0
  42335c:	je     42322f <flatcc_json_printer_int8_enum_field@@Base+0x4f>
  423362:	jmp    42330b <flatcc_json_printer_int8_enum_field@@Base+0x12b>
  423364:	nop    DWORD PTR [rax+0x0]
  423368:	mov    rax,QWORD PTR [rdi+0x28]
  42336c:	lea    rdx,[rax+0x1]
  423370:	mov    QWORD PTR [rdi+0x28],rdx
  423374:	mov    BYTE PTR [rax],0xa
  423377:	movzx  esi,BYTE PTR [rdi+0x31]
  42337b:	imul   esi,DWORD PTR [rdi+0x38]
  42337f:	mov    rdi,QWORD PTR [rdi+0x28]
  423383:	movsxd r14,esi
  423386:	lea    rax,[rdi+r14*1]
  42338a:	cmp    QWORD PTR [rbx+0x20],rax
  42338e:	jb     4233b0 <flatcc_json_printer_int8_enum_field@@Base+0x1d0>
  423390:	mov    esi,0x20
  423395:	mov    rdx,r14
  423398:	call   405090 <memset@plt>
  42339d:	mov    rsi,r14
  4233a0:	add    rsi,QWORD PTR [rbx+0x28]
  4233a4:	mov    QWORD PTR [rbx+0x28],rsi
  4233a8:	jmp    423271 <flatcc_json_printer_int8_enum_field@@Base+0x91>
  4233ad:	nop    DWORD PTR [rax]
  4233b0:	mov    rsi,r14
  4233b3:	mov    rdi,rbx
  4233b6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4233bb:	mov    rsi,QWORD PTR [rbx+0x28]
  4233bf:	jmp    423271 <flatcc_json_printer_int8_enum_field@@Base+0x91>
  4233c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4233cf:	nop

00000000004233d0 <flatcc_json_printer_int16_enum_field@@Base>:
  4233d0:	push   r15
  4233d2:	push   r14
  4233d4:	lea    eax,[rdx+rdx*1+0x4]
  4233d8:	push   r13
  4233da:	push   r12
  4233dc:	push   rbp
  4233dd:	push   rbx
  4233de:	sub    rsp,0x8
  4233e2:	cmp    eax,DWORD PTR [rsi+0x10]
  4233e5:	mov    r12,QWORD PTR [rsp+0x40]
  4233ea:	jl     423400 <flatcc_json_printer_int16_enum_field@@Base+0x30>
  4233ec:	cmp    BYTE PTR [rdi+0x35],0x0
  4233f0:	je     4234fd <flatcc_json_printer_int16_enum_field@@Base+0x12d>
  4233f6:	mov    r13d,r9d
  4233f9:	jmp    423420 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  4233fb:	nop    DWORD PTR [rax+rax*1+0x0]
  423400:	mov    rdx,QWORD PTR [rsi+0x8]
  423404:	movzx  eax,WORD PTR [rdx+rax*1]
  423408:	test   ax,ax
  42340b:	je     4233ec <flatcc_json_printer_int16_enum_field@@Base+0x1c>
  42340d:	add    rax,QWORD PTR [rsi]
  423410:	je     4233ec <flatcc_json_printer_int16_enum_field@@Base+0x1c>
  423412:	movzx  r13d,WORD PTR [rax]
  423416:	cmp    r9w,r13w
  42341a:	je     423548 <flatcc_json_printer_int16_enum_field@@Base+0x178>
  423420:	mov    eax,DWORD PTR [rsi+0x18]
  423423:	lea    edx,[rax+0x1]
  423426:	test   eax,eax
  423428:	mov    DWORD PTR [rsi+0x18],edx
  42342b:	je     42343c <flatcc_json_printer_int16_enum_field@@Base+0x6c>
  42342d:	mov    rax,QWORD PTR [rdi+0x28]
  423431:	lea    rdx,[rax+0x1]
  423435:	mov    QWORD PTR [rdi+0x28],rdx
  423439:	mov    BYTE PTR [rax],0x2c
  42343c:	cmp    BYTE PTR [rdi+0x31],0x0
  423440:	mov    r15,rcx
  423443:	mov    rbx,rdi
  423446:	movsxd rbp,r8d
  423449:	jne    423558 <flatcc_json_printer_int16_enum_field@@Base+0x188>
  42344f:	mov    rsi,QWORD PTR [rdi+0x28]
  423453:	cmp    rsi,QWORD PTR [rdi+0x20]
  423457:	jb     423462 <flatcc_json_printer_int16_enum_field@@Base+0x92>
  423459:	xor    esi,esi
  42345b:	call   QWORD PTR [rdi+0x48]
  42345e:	mov    rsi,QWORD PTR [rbx+0x28]
  423462:	mov    BYTE PTR [rsi],0x22
  423465:	xor    edi,edi
  423467:	cmp    BYTE PTR [rbx+0x32],0x0
  42346b:	mov    rdx,rbp
  42346e:	mov    rsi,r15
  423471:	sete   dil
  423475:	add    rdi,QWORD PTR [rbx+0x28]
  423479:	lea    rax,[rdi+rbp*1]
  42347d:	cmp    QWORD PTR [rbx+0x20],rax
  423481:	mov    QWORD PTR [rbx+0x28],rdi
  423485:	ja     423510 <flatcc_json_printer_int16_enum_field@@Base+0x140>
  42348b:	mov    rdi,rbx
  42348e:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423493:	mov    rbp,QWORD PTR [rbx+0x28]
  423497:	mov    BYTE PTR [rbp+0x0],0x22
  42349b:	xor    eax,eax
  42349d:	cmp    BYTE PTR [rbx+0x32],0x0
  4234a1:	sete   al
  4234a4:	add    rax,QWORD PTR [rbx+0x28]
  4234a8:	xor    esi,esi
  4234aa:	lea    rdx,[rax+0x1]
  4234ae:	mov    QWORD PTR [rbx+0x28],rdx
  4234b2:	mov    BYTE PTR [rax],0x3a
  4234b5:	mov    rax,QWORD PTR [rbx+0x28]
  4234b9:	mov    BYTE PTR [rax],0x20
  4234bc:	cmp    BYTE PTR [rbx+0x31],0x0
  4234c0:	setne  sil
  4234c4:	add    rsi,QWORD PTR [rbx+0x28]
  4234c8:	cmp    BYTE PTR [rbx+0x33],0x0
  4234cc:	mov    QWORD PTR [rbx+0x28],rsi
  4234d0:	je     423528 <flatcc_json_printer_int16_enum_field@@Base+0x158>
  4234d2:	movsx  r11d,r13w
  4234d6:	shr    r11d,0x1f
  4234da:	test   r13w,r13w
  4234de:	jns    4234ea <flatcc_json_printer_int16_enum_field@@Base+0x11a>
  4234e0:	mov    BYTE PTR [rsi],0x2d
  4234e3:	neg    r13d
  4234e6:	add    rsi,0x1
  4234ea:	movzx  edi,r13w
  4234ee:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  4234f3:	add    r11d,eax
  4234f6:	movsxd r11,r11d
  4234f9:	add    QWORD PTR [rbx+0x28],r11
  4234fd:	add    rsp,0x8
  423501:	pop    rbx
  423502:	pop    rbp
  423503:	pop    r12
  423505:	pop    r13
  423507:	pop    r14
  423509:	pop    r15
  42350b:	ret    
  42350c:	nop    DWORD PTR [rax+0x0]
  423510:	call   4050e0 <memcpy@plt>
  423515:	add    rbp,QWORD PTR [rbx+0x28]
  423519:	mov    QWORD PTR [rbx+0x28],rbp
  42351d:	jmp    423497 <flatcc_json_printer_int16_enum_field@@Base+0xc7>
  423522:	nop    WORD PTR [rax+rax*1+0x0]
  423528:	add    rsp,0x8
  42352c:	movsx  esi,r13w
  423530:	mov    rdi,rbx
  423533:	mov    rax,r12
  423536:	pop    rbx
  423537:	pop    rbp
  423538:	pop    r12
  42353a:	pop    r13
  42353c:	pop    r14
  42353e:	pop    r15
  423540:	jmp    rax
  423542:	nop    WORD PTR [rax+rax*1+0x0]
  423548:	cmp    BYTE PTR [rdi+0x34],0x0
  42354c:	je     423420 <flatcc_json_printer_int16_enum_field@@Base+0x50>
  423552:	jmp    4234fd <flatcc_json_printer_int16_enum_field@@Base+0x12d>
  423554:	nop    DWORD PTR [rax+0x0]
  423558:	mov    rax,QWORD PTR [rdi+0x28]
  42355c:	lea    rdx,[rax+0x1]
  423560:	mov    QWORD PTR [rdi+0x28],rdx
  423564:	mov    BYTE PTR [rax],0xa
  423567:	movzx  esi,BYTE PTR [rdi+0x31]
  42356b:	imul   esi,DWORD PTR [rdi+0x38]
  42356f:	mov    rdi,QWORD PTR [rdi+0x28]
  423573:	movsxd r14,esi
  423576:	lea    rax,[rdi+r14*1]
  42357a:	cmp    QWORD PTR [rbx+0x20],rax
  42357e:	jb     4235a0 <flatcc_json_printer_int16_enum_field@@Base+0x1d0>
  423580:	mov    esi,0x20
  423585:	mov    rdx,r14
  423588:	call   405090 <memset@plt>
  42358d:	mov    rsi,r14
  423590:	add    rsi,QWORD PTR [rbx+0x28]
  423594:	mov    QWORD PTR [rbx+0x28],rsi
  423598:	jmp    423462 <flatcc_json_printer_int16_enum_field@@Base+0x92>
  42359d:	nop    DWORD PTR [rax]
  4235a0:	mov    rsi,r14
  4235a3:	mov    rdi,rbx
  4235a6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4235ab:	mov    rsi,QWORD PTR [rbx+0x28]
  4235af:	jmp    423462 <flatcc_json_printer_int16_enum_field@@Base+0x92>
  4235b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4235bf:	nop

00000000004235c0 <flatcc_json_printer_int32_enum_field@@Base>:
  4235c0:	push   r15
  4235c2:	push   r14
  4235c4:	lea    eax,[rdx+rdx*1+0x4]
  4235c8:	push   r13
  4235ca:	push   r12
  4235cc:	push   rbp
  4235cd:	push   rbx
  4235ce:	sub    rsp,0x8
  4235d2:	cmp    eax,DWORD PTR [rsi+0x10]
  4235d5:	mov    r12,QWORD PTR [rsp+0x40]
  4235da:	jl     4235f0 <flatcc_json_printer_int32_enum_field@@Base+0x30>
  4235dc:	cmp    BYTE PTR [rdi+0x35],0x0
  4235e0:	je     4236e8 <flatcc_json_printer_int32_enum_field@@Base+0x128>
  4235e6:	mov    r13d,r9d
  4235e9:	jmp    42360e <flatcc_json_printer_int32_enum_field@@Base+0x4e>
  4235eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4235f0:	mov    rdx,QWORD PTR [rsi+0x8]
  4235f4:	movzx  eax,WORD PTR [rdx+rax*1]
  4235f8:	test   ax,ax
  4235fb:	je     4235dc <flatcc_json_printer_int32_enum_field@@Base+0x1c>
  4235fd:	add    rax,QWORD PTR [rsi]
  423600:	je     4235dc <flatcc_json_printer_int32_enum_field@@Base+0x1c>
  423602:	mov    r13d,DWORD PTR [rax]
  423605:	cmp    r9d,r13d
  423608:	je     423738 <flatcc_json_printer_int32_enum_field@@Base+0x178>
  42360e:	mov    eax,DWORD PTR [rsi+0x18]
  423611:	lea    edx,[rax+0x1]
  423614:	test   eax,eax
  423616:	mov    DWORD PTR [rsi+0x18],edx
  423619:	je     42362a <flatcc_json_printer_int32_enum_field@@Base+0x6a>
  42361b:	mov    rax,QWORD PTR [rdi+0x28]
  42361f:	lea    rdx,[rax+0x1]
  423623:	mov    QWORD PTR [rdi+0x28],rdx
  423627:	mov    BYTE PTR [rax],0x2c
  42362a:	cmp    BYTE PTR [rdi+0x31],0x0
  42362e:	mov    r15,rcx
  423631:	mov    rbx,rdi
  423634:	movsxd rbp,r8d
  423637:	jne    423748 <flatcc_json_printer_int32_enum_field@@Base+0x188>
  42363d:	mov    rsi,QWORD PTR [rdi+0x28]
  423641:	cmp    rsi,QWORD PTR [rdi+0x20]
  423645:	jb     423650 <flatcc_json_printer_int32_enum_field@@Base+0x90>
  423647:	xor    esi,esi
  423649:	call   QWORD PTR [rdi+0x48]
  42364c:	mov    rsi,QWORD PTR [rbx+0x28]
  423650:	mov    BYTE PTR [rsi],0x22
  423653:	xor    edi,edi
  423655:	cmp    BYTE PTR [rbx+0x32],0x0
  423659:	mov    rdx,rbp
  42365c:	mov    rsi,r15
  42365f:	sete   dil
  423663:	add    rdi,QWORD PTR [rbx+0x28]
  423667:	lea    rax,[rdi+rbp*1]
  42366b:	cmp    QWORD PTR [rbx+0x20],rax
  42366f:	mov    QWORD PTR [rbx+0x28],rdi
  423673:	ja     423700 <flatcc_json_printer_int32_enum_field@@Base+0x140>
  423679:	mov    rdi,rbx
  42367c:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423681:	mov    rbp,QWORD PTR [rbx+0x28]
  423685:	mov    BYTE PTR [rbp+0x0],0x22
  423689:	xor    eax,eax
  42368b:	cmp    BYTE PTR [rbx+0x32],0x0
  42368f:	sete   al
  423692:	add    rax,QWORD PTR [rbx+0x28]
  423696:	xor    esi,esi
  423698:	lea    rdx,[rax+0x1]
  42369c:	mov    QWORD PTR [rbx+0x28],rdx
  4236a0:	mov    BYTE PTR [rax],0x3a
  4236a3:	mov    rax,QWORD PTR [rbx+0x28]
  4236a7:	mov    BYTE PTR [rax],0x20
  4236aa:	cmp    BYTE PTR [rbx+0x31],0x0
  4236ae:	setne  sil
  4236b2:	add    rsi,QWORD PTR [rbx+0x28]
  4236b6:	cmp    BYTE PTR [rbx+0x33],0x0
  4236ba:	mov    QWORD PTR [rbx+0x28],rsi
  4236be:	je     423718 <flatcc_json_printer_int32_enum_field@@Base+0x158>
  4236c0:	mov    r10d,r13d
  4236c3:	shr    r10d,0x1f
  4236c7:	test   r13d,r13d
  4236ca:	jns    4236d6 <flatcc_json_printer_int32_enum_field@@Base+0x116>
  4236cc:	mov    BYTE PTR [rsi],0x2d
  4236cf:	neg    r13d
  4236d2:	add    rsi,0x1
  4236d6:	mov    edi,r13d
  4236d9:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  4236de:	add    r10d,eax
  4236e1:	movsxd r10,r10d
  4236e4:	add    QWORD PTR [rbx+0x28],r10
  4236e8:	add    rsp,0x8
  4236ec:	pop    rbx
  4236ed:	pop    rbp
  4236ee:	pop    r12
  4236f0:	pop    r13
  4236f2:	pop    r14
  4236f4:	pop    r15
  4236f6:	ret    
  4236f7:	nop    WORD PTR [rax+rax*1+0x0]
  423700:	call   4050e0 <memcpy@plt>
  423705:	add    rbp,QWORD PTR [rbx+0x28]
  423709:	mov    QWORD PTR [rbx+0x28],rbp
  42370d:	jmp    423685 <flatcc_json_printer_int32_enum_field@@Base+0xc5>
  423712:	nop    WORD PTR [rax+rax*1+0x0]
  423718:	add    rsp,0x8
  42371c:	mov    esi,r13d
  42371f:	mov    rdi,rbx
  423722:	mov    rax,r12
  423725:	pop    rbx
  423726:	pop    rbp
  423727:	pop    r12
  423729:	pop    r13
  42372b:	pop    r14
  42372d:	pop    r15
  42372f:	jmp    rax
  423731:	nop    DWORD PTR [rax+0x0]
  423738:	cmp    BYTE PTR [rdi+0x34],0x0
  42373c:	je     42360e <flatcc_json_printer_int32_enum_field@@Base+0x4e>
  423742:	jmp    4236e8 <flatcc_json_printer_int32_enum_field@@Base+0x128>
  423744:	nop    DWORD PTR [rax+0x0]
  423748:	mov    rax,QWORD PTR [rdi+0x28]
  42374c:	lea    rdx,[rax+0x1]
  423750:	mov    QWORD PTR [rdi+0x28],rdx
  423754:	mov    BYTE PTR [rax],0xa
  423757:	movzx  esi,BYTE PTR [rdi+0x31]
  42375b:	imul   esi,DWORD PTR [rdi+0x38]
  42375f:	mov    rdi,QWORD PTR [rdi+0x28]
  423763:	movsxd r14,esi
  423766:	lea    rax,[rdi+r14*1]
  42376a:	cmp    QWORD PTR [rbx+0x20],rax
  42376e:	jb     423790 <flatcc_json_printer_int32_enum_field@@Base+0x1d0>
  423770:	mov    esi,0x20
  423775:	mov    rdx,r14
  423778:	call   405090 <memset@plt>
  42377d:	mov    rsi,r14
  423780:	add    rsi,QWORD PTR [rbx+0x28]
  423784:	mov    QWORD PTR [rbx+0x28],rsi
  423788:	jmp    423650 <flatcc_json_printer_int32_enum_field@@Base+0x90>
  42378d:	nop    DWORD PTR [rax]
  423790:	mov    rsi,r14
  423793:	mov    rdi,rbx
  423796:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42379b:	mov    rsi,QWORD PTR [rbx+0x28]
  42379f:	jmp    423650 <flatcc_json_printer_int32_enum_field@@Base+0x90>
  4237a4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4237af:	nop

00000000004237b0 <flatcc_json_printer_int64_enum_field@@Base>:
  4237b0:	push   r15
  4237b2:	push   r14
  4237b4:	lea    eax,[rdx+rdx*1+0x4]
  4237b8:	push   r13
  4237ba:	push   r12
  4237bc:	push   rbp
  4237bd:	push   rbx
  4237be:	sub    rsp,0x8
  4237c2:	cmp    eax,DWORD PTR [rsi+0x10]
  4237c5:	mov    r12,QWORD PTR [rsp+0x40]
  4237ca:	jl     4237e0 <flatcc_json_printer_int64_enum_field@@Base+0x30>
  4237cc:	cmp    BYTE PTR [rdi+0x35],0x0
  4237d0:	je     4238d6 <flatcc_json_printer_int64_enum_field@@Base+0x126>
  4237d6:	mov    r13,r9
  4237d9:	jmp    4237fe <flatcc_json_printer_int64_enum_field@@Base+0x4e>
  4237db:	nop    DWORD PTR [rax+rax*1+0x0]
  4237e0:	mov    rdx,QWORD PTR [rsi+0x8]
  4237e4:	movzx  eax,WORD PTR [rdx+rax*1]
  4237e8:	test   ax,ax
  4237eb:	je     4237cc <flatcc_json_printer_int64_enum_field@@Base+0x1c>
  4237ed:	add    rax,QWORD PTR [rsi]
  4237f0:	je     4237cc <flatcc_json_printer_int64_enum_field@@Base+0x1c>
  4237f2:	mov    r13,QWORD PTR [rax]
  4237f5:	cmp    r9,r13
  4237f8:	je     423920 <flatcc_json_printer_int64_enum_field@@Base+0x170>
  4237fe:	mov    eax,DWORD PTR [rsi+0x18]
  423801:	lea    edx,[rax+0x1]
  423804:	test   eax,eax
  423806:	mov    DWORD PTR [rsi+0x18],edx
  423809:	je     42381a <flatcc_json_printer_int64_enum_field@@Base+0x6a>
  42380b:	mov    rax,QWORD PTR [rdi+0x28]
  42380f:	lea    rdx,[rax+0x1]
  423813:	mov    QWORD PTR [rdi+0x28],rdx
  423817:	mov    BYTE PTR [rax],0x2c
  42381a:	cmp    BYTE PTR [rdi+0x31],0x0
  42381e:	mov    r15,rcx
  423821:	mov    rbx,rdi
  423824:	movsxd rbp,r8d
  423827:	jne    423930 <flatcc_json_printer_int64_enum_field@@Base+0x180>
  42382d:	mov    rsi,QWORD PTR [rdi+0x28]
  423831:	cmp    rsi,QWORD PTR [rdi+0x20]
  423835:	jb     423840 <flatcc_json_printer_int64_enum_field@@Base+0x90>
  423837:	xor    esi,esi
  423839:	call   QWORD PTR [rdi+0x48]
  42383c:	mov    rsi,QWORD PTR [rbx+0x28]
  423840:	mov    BYTE PTR [rsi],0x22
  423843:	xor    edi,edi
  423845:	cmp    BYTE PTR [rbx+0x32],0x0
  423849:	mov    rdx,rbp
  42384c:	mov    rsi,r15
  42384f:	sete   dil
  423853:	add    rdi,QWORD PTR [rbx+0x28]
  423857:	lea    rax,[rdi+rbp*1]
  42385b:	cmp    QWORD PTR [rbx+0x20],rax
  42385f:	mov    QWORD PTR [rbx+0x28],rdi
  423863:	ja     4238e8 <flatcc_json_printer_int64_enum_field@@Base+0x138>
  423869:	mov    rdi,rbx
  42386c:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423871:	mov    rbp,QWORD PTR [rbx+0x28]
  423875:	mov    BYTE PTR [rbp+0x0],0x22
  423879:	xor    eax,eax
  42387b:	cmp    BYTE PTR [rbx+0x32],0x0
  42387f:	sete   al
  423882:	add    rax,QWORD PTR [rbx+0x28]
  423886:	xor    esi,esi
  423888:	lea    rdx,[rax+0x1]
  42388c:	mov    QWORD PTR [rbx+0x28],rdx
  423890:	mov    BYTE PTR [rax],0x3a
  423893:	mov    rax,QWORD PTR [rbx+0x28]
  423897:	mov    BYTE PTR [rax],0x20
  42389a:	cmp    BYTE PTR [rbx+0x31],0x0
  42389e:	setne  sil
  4238a2:	add    rsi,QWORD PTR [rbx+0x28]
  4238a6:	cmp    BYTE PTR [rbx+0x33],0x0
  4238aa:	mov    QWORD PTR [rbx+0x28],rsi
  4238ae:	je     423900 <flatcc_json_printer_int64_enum_field@@Base+0x150>
  4238b0:	mov    rbp,r13
  4238b3:	shr    rbp,0x3f
  4238b7:	test   r13,r13
  4238ba:	jns    4238c6 <flatcc_json_printer_int64_enum_field@@Base+0x116>
  4238bc:	mov    BYTE PTR [rsi],0x2d
  4238bf:	neg    r13
  4238c2:	add    rsi,0x1
  4238c6:	mov    rdi,r13
  4238c9:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  4238ce:	add    eax,ebp
  4238d0:	cdqe   
  4238d2:	add    QWORD PTR [rbx+0x28],rax
  4238d6:	add    rsp,0x8
  4238da:	pop    rbx
  4238db:	pop    rbp
  4238dc:	pop    r12
  4238de:	pop    r13
  4238e0:	pop    r14
  4238e2:	pop    r15
  4238e4:	ret    
  4238e5:	nop    DWORD PTR [rax]
  4238e8:	call   4050e0 <memcpy@plt>
  4238ed:	add    rbp,QWORD PTR [rbx+0x28]
  4238f1:	mov    QWORD PTR [rbx+0x28],rbp
  4238f5:	jmp    423875 <flatcc_json_printer_int64_enum_field@@Base+0xc5>
  4238fa:	nop    WORD PTR [rax+rax*1+0x0]
  423900:	add    rsp,0x8
  423904:	mov    rsi,r13
  423907:	mov    rdi,rbx
  42390a:	mov    rax,r12
  42390d:	pop    rbx
  42390e:	pop    rbp
  42390f:	pop    r12
  423911:	pop    r13
  423913:	pop    r14
  423915:	pop    r15
  423917:	jmp    rax
  423919:	nop    DWORD PTR [rax+0x0]
  423920:	cmp    BYTE PTR [rdi+0x34],0x0
  423924:	je     4237fe <flatcc_json_printer_int64_enum_field@@Base+0x4e>
  42392a:	jmp    4238d6 <flatcc_json_printer_int64_enum_field@@Base+0x126>
  42392c:	nop    DWORD PTR [rax+0x0]
  423930:	mov    rax,QWORD PTR [rdi+0x28]
  423934:	lea    rdx,[rax+0x1]
  423938:	mov    QWORD PTR [rdi+0x28],rdx
  42393c:	mov    BYTE PTR [rax],0xa
  42393f:	movzx  esi,BYTE PTR [rdi+0x31]
  423943:	imul   esi,DWORD PTR [rdi+0x38]
  423947:	mov    rdi,QWORD PTR [rdi+0x28]
  42394b:	movsxd r14,esi
  42394e:	lea    rax,[rdi+r14*1]
  423952:	cmp    QWORD PTR [rbx+0x20],rax
  423956:	jb     423978 <flatcc_json_printer_int64_enum_field@@Base+0x1c8>
  423958:	mov    esi,0x20
  42395d:	mov    rdx,r14
  423960:	call   405090 <memset@plt>
  423965:	mov    rsi,r14
  423968:	add    rsi,QWORD PTR [rbx+0x28]
  42396c:	mov    QWORD PTR [rbx+0x28],rsi
  423970:	jmp    423840 <flatcc_json_printer_int64_enum_field@@Base+0x90>
  423975:	nop    DWORD PTR [rax]
  423978:	mov    rsi,r14
  42397b:	mov    rdi,rbx
  42397e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423983:	mov    rsi,QWORD PTR [rbx+0x28]
  423987:	jmp    423840 <flatcc_json_printer_int64_enum_field@@Base+0x90>
  42398c:	nop    DWORD PTR [rax+0x0]

0000000000423990 <flatcc_json_printer_bool_enum_field@@Base>:
  423990:	push   r15
  423992:	push   r14
  423994:	lea    eax,[rdx+rdx*1+0x4]
  423998:	push   r13
  42399a:	push   r12
  42399c:	push   rbp
  42399d:	push   rbx
  42399e:	sub    rsp,0x8
  4239a2:	cmp    eax,DWORD PTR [rsi+0x10]
  4239a5:	mov    r12,QWORD PTR [rsp+0x40]
  4239aa:	jl     4239c0 <flatcc_json_printer_bool_enum_field@@Base+0x30>
  4239ac:	cmp    BYTE PTR [rdi+0x35],0x0
  4239b0:	je     423abf <flatcc_json_printer_bool_enum_field@@Base+0x12f>
  4239b6:	mov    r13d,r9d
  4239b9:	jmp    4239df <flatcc_json_printer_bool_enum_field@@Base+0x4f>
  4239bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4239c0:	mov    rdx,QWORD PTR [rsi+0x8]
  4239c4:	movzx  eax,WORD PTR [rdx+rax*1]
  4239c8:	test   ax,ax
  4239cb:	je     4239ac <flatcc_json_printer_bool_enum_field@@Base+0x1c>
  4239cd:	add    rax,QWORD PTR [rsi]
  4239d0:	je     4239ac <flatcc_json_printer_bool_enum_field@@Base+0x1c>
  4239d2:	movzx  r13d,BYTE PTR [rax]
  4239d6:	cmp    r9b,r13b
  4239d9:	je     423ae8 <flatcc_json_printer_bool_enum_field@@Base+0x158>
  4239df:	mov    eax,DWORD PTR [rsi+0x18]
  4239e2:	lea    edx,[rax+0x1]
  4239e5:	test   eax,eax
  4239e7:	mov    DWORD PTR [rsi+0x18],edx
  4239ea:	je     4239fb <flatcc_json_printer_bool_enum_field@@Base+0x6b>
  4239ec:	mov    rax,QWORD PTR [rdi+0x28]
  4239f0:	lea    rdx,[rax+0x1]
  4239f4:	mov    QWORD PTR [rdi+0x28],rdx
  4239f8:	mov    BYTE PTR [rax],0x2c
  4239fb:	cmp    BYTE PTR [rdi+0x31],0x0
  4239ff:	mov    r15,rcx
  423a02:	mov    rbx,rdi
  423a05:	movsxd rbp,r8d
  423a08:	jne    423af8 <flatcc_json_printer_bool_enum_field@@Base+0x168>
  423a0e:	mov    rsi,QWORD PTR [rdi+0x28]
  423a12:	cmp    rsi,QWORD PTR [rdi+0x20]
  423a16:	jb     423a21 <flatcc_json_printer_bool_enum_field@@Base+0x91>
  423a18:	xor    esi,esi
  423a1a:	call   QWORD PTR [rdi+0x48]
  423a1d:	mov    rsi,QWORD PTR [rbx+0x28]
  423a21:	mov    BYTE PTR [rsi],0x22
  423a24:	xor    edi,edi
  423a26:	cmp    BYTE PTR [rbx+0x32],0x0
  423a2a:	mov    rdx,rbp
  423a2d:	mov    rsi,r15
  423a30:	sete   dil
  423a34:	add    rdi,QWORD PTR [rbx+0x28]
  423a38:	lea    rax,[rdi+rbp*1]
  423a3c:	cmp    QWORD PTR [rbx+0x20],rax
  423a40:	mov    QWORD PTR [rbx+0x28],rdi
  423a44:	ja     423ad0 <flatcc_json_printer_bool_enum_field@@Base+0x140>
  423a4a:	mov    rdi,rbx
  423a4d:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423a52:	mov    rbp,QWORD PTR [rbx+0x28]
  423a56:	mov    BYTE PTR [rbp+0x0],0x22
  423a5a:	xor    eax,eax
  423a5c:	cmp    BYTE PTR [rbx+0x32],0x0
  423a60:	sete   al
  423a63:	add    rax,QWORD PTR [rbx+0x28]
  423a67:	xor    esi,esi
  423a69:	lea    rdx,[rax+0x1]
  423a6d:	mov    QWORD PTR [rbx+0x28],rdx
  423a71:	mov    BYTE PTR [rax],0x3a
  423a74:	mov    rax,QWORD PTR [rbx+0x28]
  423a78:	mov    BYTE PTR [rax],0x20
  423a7b:	cmp    BYTE PTR [rbx+0x31],0x0
  423a7f:	setne  sil
  423a83:	add    rsi,QWORD PTR [rbx+0x28]
  423a87:	cmp    BYTE PTR [rbx+0x33],0x0
  423a8b:	mov    QWORD PTR [rbx+0x28],rsi
  423a8f:	jne    423ab0 <flatcc_json_printer_bool_enum_field@@Base+0x120>
  423a91:	add    rsp,0x8
  423a95:	movzx  esi,r13b
  423a99:	mov    rdi,rbx
  423a9c:	mov    rax,r12
  423a9f:	pop    rbx
  423aa0:	pop    rbp
  423aa1:	pop    r12
  423aa3:	pop    r13
  423aa5:	pop    r14
  423aa7:	pop    r15
  423aa9:	jmp    rax
  423aab:	nop    DWORD PTR [rax+rax*1+0x0]
  423ab0:	movzx  edi,r13b
  423ab4:	call   4200d0 <flatcc_json_parser_table_as_root@@Base+0xe70>
  423ab9:	cdqe   
  423abb:	add    QWORD PTR [rbx+0x28],rax
  423abf:	add    rsp,0x8
  423ac3:	pop    rbx
  423ac4:	pop    rbp
  423ac5:	pop    r12
  423ac7:	pop    r13
  423ac9:	pop    r14
  423acb:	pop    r15
  423acd:	ret    
  423ace:	xchg   ax,ax
  423ad0:	call   4050e0 <memcpy@plt>
  423ad5:	add    rbp,QWORD PTR [rbx+0x28]
  423ad9:	mov    QWORD PTR [rbx+0x28],rbp
  423add:	jmp    423a56 <flatcc_json_printer_bool_enum_field@@Base+0xc6>
  423ae2:	nop    WORD PTR [rax+rax*1+0x0]
  423ae8:	cmp    BYTE PTR [rdi+0x34],0x0
  423aec:	je     4239df <flatcc_json_printer_bool_enum_field@@Base+0x4f>
  423af2:	jmp    423abf <flatcc_json_printer_bool_enum_field@@Base+0x12f>
  423af4:	nop    DWORD PTR [rax+0x0]
  423af8:	mov    rax,QWORD PTR [rdi+0x28]
  423afc:	lea    rdx,[rax+0x1]
  423b00:	mov    QWORD PTR [rdi+0x28],rdx
  423b04:	mov    BYTE PTR [rax],0xa
  423b07:	movzx  esi,BYTE PTR [rdi+0x31]
  423b0b:	imul   esi,DWORD PTR [rdi+0x38]
  423b0f:	mov    rdi,QWORD PTR [rdi+0x28]
  423b13:	movsxd r14,esi
  423b16:	lea    rax,[rdi+r14*1]
  423b1a:	cmp    QWORD PTR [rbx+0x20],rax
  423b1e:	jb     423b40 <flatcc_json_printer_bool_enum_field@@Base+0x1b0>
  423b20:	mov    esi,0x20
  423b25:	mov    rdx,r14
  423b28:	call   405090 <memset@plt>
  423b2d:	mov    rsi,r14
  423b30:	add    rsi,QWORD PTR [rbx+0x28]
  423b34:	mov    QWORD PTR [rbx+0x28],rsi
  423b38:	jmp    423a21 <flatcc_json_printer_bool_enum_field@@Base+0x91>
  423b3d:	nop    DWORD PTR [rax]
  423b40:	mov    rsi,r14
  423b43:	mov    rdi,rbx
  423b46:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423b4b:	mov    rsi,QWORD PTR [rbx+0x28]
  423b4f:	jmp    423a21 <flatcc_json_printer_bool_enum_field@@Base+0x91>
  423b54:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  423b5f:	nop

0000000000423b60 <flatcc_json_printer_uint8_struct_field@@Base>:
  423b60:	test   esi,esi
  423b62:	push   r14
  423b64:	mov    r14,r8
  423b67:	push   r13
  423b69:	push   r12
  423b6b:	push   rbp
  423b6c:	push   rbx
  423b6d:	mov    rbx,rdi
  423b70:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  423b75:	je     423b86 <flatcc_json_printer_uint8_struct_field@@Base+0x26>
  423b77:	mov    rax,QWORD PTR [rdi+0x28]
  423b7b:	lea    rdx,[rax+0x1]
  423b7f:	mov    QWORD PTR [rdi+0x28],rdx
  423b83:	mov    BYTE PTR [rax],0x2c
  423b86:	cmp    BYTE PTR [rbx+0x31],0x0
  423b8a:	movsxd rbp,r9d
  423b8d:	jne    423c50 <flatcc_json_printer_uint8_struct_field@@Base+0xf0>
  423b93:	mov    rsi,QWORD PTR [rbx+0x28]
  423b97:	cmp    rsi,QWORD PTR [rbx+0x20]
  423b9b:	jae    423c20 <flatcc_json_printer_uint8_struct_field@@Base+0xc0>
  423ba1:	mov    BYTE PTR [rsi],0x22
  423ba4:	xor    edi,edi
  423ba6:	cmp    BYTE PTR [rbx+0x32],0x0
  423baa:	mov    rdx,rbp
  423bad:	mov    rsi,r14
  423bb0:	sete   dil
  423bb4:	add    rdi,QWORD PTR [rbx+0x28]
  423bb8:	lea    rax,[rdi+rbp*1]
  423bbc:	cmp    QWORD PTR [rbx+0x20],rax
  423bc0:	mov    QWORD PTR [rbx+0x28],rdi
  423bc4:	ja     423c38 <flatcc_json_printer_uint8_struct_field@@Base+0xd8>
  423bc6:	mov    rdi,rbx
  423bc9:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423bce:	mov    rbp,QWORD PTR [rbx+0x28]
  423bd2:	mov    BYTE PTR [rbp+0x0],0x22
  423bd6:	xor    eax,eax
  423bd8:	cmp    BYTE PTR [rbx+0x32],0x0
  423bdc:	movzx  edi,r12b
  423be0:	sete   al
  423be3:	add    rax,QWORD PTR [rbx+0x28]
  423be7:	xor    esi,esi
  423be9:	lea    rdx,[rax+0x1]
  423bed:	mov    QWORD PTR [rbx+0x28],rdx
  423bf1:	mov    BYTE PTR [rax],0x3a
  423bf4:	mov    rax,QWORD PTR [rbx+0x28]
  423bf8:	mov    BYTE PTR [rax],0x20
  423bfb:	cmp    BYTE PTR [rbx+0x31],0x0
  423bff:	setne  sil
  423c03:	add    rsi,QWORD PTR [rbx+0x28]
  423c07:	mov    QWORD PTR [rbx+0x28],rsi
  423c0b:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  423c10:	cdqe   
  423c12:	add    QWORD PTR [rbx+0x28],rax
  423c16:	pop    rbx
  423c17:	pop    rbp
  423c18:	pop    r12
  423c1a:	pop    r13
  423c1c:	pop    r14
  423c1e:	ret    
  423c1f:	nop
  423c20:	xor    esi,esi
  423c22:	mov    rdi,rbx
  423c25:	call   QWORD PTR [rbx+0x48]
  423c28:	mov    rsi,QWORD PTR [rbx+0x28]
  423c2c:	jmp    423ba1 <flatcc_json_printer_uint8_struct_field@@Base+0x41>
  423c31:	nop    DWORD PTR [rax+0x0]
  423c38:	call   4050e0 <memcpy@plt>
  423c3d:	add    rbp,QWORD PTR [rbx+0x28]
  423c41:	mov    QWORD PTR [rbx+0x28],rbp
  423c45:	jmp    423bd2 <flatcc_json_printer_uint8_struct_field@@Base+0x72>
  423c47:	nop    WORD PTR [rax+rax*1+0x0]
  423c50:	mov    rax,QWORD PTR [rbx+0x28]
  423c54:	lea    rdx,[rax+0x1]
  423c58:	mov    QWORD PTR [rbx+0x28],rdx
  423c5c:	mov    BYTE PTR [rax],0xa
  423c5f:	movzx  esi,BYTE PTR [rbx+0x31]
  423c63:	mov    rdi,QWORD PTR [rbx+0x28]
  423c67:	imul   esi,DWORD PTR [rbx+0x38]
  423c6b:	movsxd r13,esi
  423c6e:	lea    rax,[rdi+r13*1]
  423c72:	cmp    QWORD PTR [rbx+0x20],rax
  423c76:	jb     423c98 <flatcc_json_printer_uint8_struct_field@@Base+0x138>
  423c78:	mov    esi,0x20
  423c7d:	mov    rdx,r13
  423c80:	call   405090 <memset@plt>
  423c85:	mov    rsi,r13
  423c88:	add    rsi,QWORD PTR [rbx+0x28]
  423c8c:	mov    QWORD PTR [rbx+0x28],rsi
  423c90:	jmp    423ba1 <flatcc_json_printer_uint8_struct_field@@Base+0x41>
  423c95:	nop    DWORD PTR [rax]
  423c98:	mov    rsi,r13
  423c9b:	mov    rdi,rbx
  423c9e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423ca3:	mov    rsi,QWORD PTR [rbx+0x28]
  423ca7:	jmp    423ba1 <flatcc_json_printer_uint8_struct_field@@Base+0x41>
  423cac:	nop    DWORD PTR [rax+0x0]

0000000000423cb0 <flatcc_json_printer_uint16_struct_field@@Base>:
  423cb0:	test   esi,esi
  423cb2:	push   r14
  423cb4:	mov    r14,r8
  423cb7:	push   r13
  423cb9:	push   r12
  423cbb:	push   rbp
  423cbc:	push   rbx
  423cbd:	mov    rbx,rdi
  423cc0:	movzx  r12d,WORD PTR [rdx+rcx*1]
  423cc5:	je     423cd6 <flatcc_json_printer_uint16_struct_field@@Base+0x26>
  423cc7:	mov    rax,QWORD PTR [rdi+0x28]
  423ccb:	lea    rdx,[rax+0x1]
  423ccf:	mov    QWORD PTR [rdi+0x28],rdx
  423cd3:	mov    BYTE PTR [rax],0x2c
  423cd6:	cmp    BYTE PTR [rbx+0x31],0x0
  423cda:	movsxd rbp,r9d
  423cdd:	jne    423da0 <flatcc_json_printer_uint16_struct_field@@Base+0xf0>
  423ce3:	mov    rsi,QWORD PTR [rbx+0x28]
  423ce7:	cmp    rsi,QWORD PTR [rbx+0x20]
  423ceb:	jae    423d70 <flatcc_json_printer_uint16_struct_field@@Base+0xc0>
  423cf1:	mov    BYTE PTR [rsi],0x22
  423cf4:	xor    edi,edi
  423cf6:	cmp    BYTE PTR [rbx+0x32],0x0
  423cfa:	mov    rdx,rbp
  423cfd:	mov    rsi,r14
  423d00:	sete   dil
  423d04:	add    rdi,QWORD PTR [rbx+0x28]
  423d08:	lea    rax,[rdi+rbp*1]
  423d0c:	cmp    QWORD PTR [rbx+0x20],rax
  423d10:	mov    QWORD PTR [rbx+0x28],rdi
  423d14:	ja     423d88 <flatcc_json_printer_uint16_struct_field@@Base+0xd8>
  423d16:	mov    rdi,rbx
  423d19:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423d1e:	mov    rbp,QWORD PTR [rbx+0x28]
  423d22:	mov    BYTE PTR [rbp+0x0],0x22
  423d26:	xor    eax,eax
  423d28:	cmp    BYTE PTR [rbx+0x32],0x0
  423d2c:	movzx  edi,r12w
  423d30:	sete   al
  423d33:	add    rax,QWORD PTR [rbx+0x28]
  423d37:	xor    esi,esi
  423d39:	lea    rdx,[rax+0x1]
  423d3d:	mov    QWORD PTR [rbx+0x28],rdx
  423d41:	mov    BYTE PTR [rax],0x3a
  423d44:	mov    rax,QWORD PTR [rbx+0x28]
  423d48:	mov    BYTE PTR [rax],0x20
  423d4b:	cmp    BYTE PTR [rbx+0x31],0x0
  423d4f:	setne  sil
  423d53:	add    rsi,QWORD PTR [rbx+0x28]
  423d57:	mov    QWORD PTR [rbx+0x28],rsi
  423d5b:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  423d60:	cdqe   
  423d62:	add    QWORD PTR [rbx+0x28],rax
  423d66:	pop    rbx
  423d67:	pop    rbp
  423d68:	pop    r12
  423d6a:	pop    r13
  423d6c:	pop    r14
  423d6e:	ret    
  423d6f:	nop
  423d70:	xor    esi,esi
  423d72:	mov    rdi,rbx
  423d75:	call   QWORD PTR [rbx+0x48]
  423d78:	mov    rsi,QWORD PTR [rbx+0x28]
  423d7c:	jmp    423cf1 <flatcc_json_printer_uint16_struct_field@@Base+0x41>
  423d81:	nop    DWORD PTR [rax+0x0]
  423d88:	call   4050e0 <memcpy@plt>
  423d8d:	add    rbp,QWORD PTR [rbx+0x28]
  423d91:	mov    QWORD PTR [rbx+0x28],rbp
  423d95:	jmp    423d22 <flatcc_json_printer_uint16_struct_field@@Base+0x72>
  423d97:	nop    WORD PTR [rax+rax*1+0x0]
  423da0:	mov    rax,QWORD PTR [rbx+0x28]
  423da4:	lea    rdx,[rax+0x1]
  423da8:	mov    QWORD PTR [rbx+0x28],rdx
  423dac:	mov    BYTE PTR [rax],0xa
  423daf:	movzx  esi,BYTE PTR [rbx+0x31]
  423db3:	mov    rdi,QWORD PTR [rbx+0x28]
  423db7:	imul   esi,DWORD PTR [rbx+0x38]
  423dbb:	movsxd r13,esi
  423dbe:	lea    rax,[rdi+r13*1]
  423dc2:	cmp    QWORD PTR [rbx+0x20],rax
  423dc6:	jb     423de8 <flatcc_json_printer_uint16_struct_field@@Base+0x138>
  423dc8:	mov    esi,0x20
  423dcd:	mov    rdx,r13
  423dd0:	call   405090 <memset@plt>
  423dd5:	mov    rsi,r13
  423dd8:	add    rsi,QWORD PTR [rbx+0x28]
  423ddc:	mov    QWORD PTR [rbx+0x28],rsi
  423de0:	jmp    423cf1 <flatcc_json_printer_uint16_struct_field@@Base+0x41>
  423de5:	nop    DWORD PTR [rax]
  423de8:	mov    rsi,r13
  423deb:	mov    rdi,rbx
  423dee:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423df3:	mov    rsi,QWORD PTR [rbx+0x28]
  423df7:	jmp    423cf1 <flatcc_json_printer_uint16_struct_field@@Base+0x41>
  423dfc:	nop    DWORD PTR [rax+0x0]

0000000000423e00 <flatcc_json_printer_uint32_struct_field@@Base>:
  423e00:	test   esi,esi
  423e02:	push   r14
  423e04:	mov    r14,r8
  423e07:	push   r13
  423e09:	push   r12
  423e0b:	push   rbp
  423e0c:	push   rbx
  423e0d:	mov    rbx,rdi
  423e10:	mov    r12d,DWORD PTR [rdx+rcx*1]
  423e14:	je     423e25 <flatcc_json_printer_uint32_struct_field@@Base+0x25>
  423e16:	mov    rax,QWORD PTR [rdi+0x28]
  423e1a:	lea    rdx,[rax+0x1]
  423e1e:	mov    QWORD PTR [rdi+0x28],rdx
  423e22:	mov    BYTE PTR [rax],0x2c
  423e25:	cmp    BYTE PTR [rbx+0x31],0x0
  423e29:	movsxd rbp,r9d
  423e2c:	jne    423ef0 <flatcc_json_printer_uint32_struct_field@@Base+0xf0>
  423e32:	mov    rsi,QWORD PTR [rbx+0x28]
  423e36:	cmp    rsi,QWORD PTR [rbx+0x20]
  423e3a:	jae    423ec0 <flatcc_json_printer_uint32_struct_field@@Base+0xc0>
  423e40:	mov    BYTE PTR [rsi],0x22
  423e43:	xor    edi,edi
  423e45:	cmp    BYTE PTR [rbx+0x32],0x0
  423e49:	mov    rdx,rbp
  423e4c:	mov    rsi,r14
  423e4f:	sete   dil
  423e53:	add    rdi,QWORD PTR [rbx+0x28]
  423e57:	lea    rax,[rdi+rbp*1]
  423e5b:	cmp    QWORD PTR [rbx+0x20],rax
  423e5f:	mov    QWORD PTR [rbx+0x28],rdi
  423e63:	ja     423ed8 <flatcc_json_printer_uint32_struct_field@@Base+0xd8>
  423e65:	mov    rdi,rbx
  423e68:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423e6d:	mov    rbp,QWORD PTR [rbx+0x28]
  423e71:	mov    BYTE PTR [rbp+0x0],0x22
  423e75:	xor    eax,eax
  423e77:	cmp    BYTE PTR [rbx+0x32],0x0
  423e7b:	mov    edi,r12d
  423e7e:	sete   al
  423e81:	add    rax,QWORD PTR [rbx+0x28]
  423e85:	xor    esi,esi
  423e87:	lea    rdx,[rax+0x1]
  423e8b:	mov    QWORD PTR [rbx+0x28],rdx
  423e8f:	mov    BYTE PTR [rax],0x3a
  423e92:	mov    rax,QWORD PTR [rbx+0x28]
  423e96:	mov    BYTE PTR [rax],0x20
  423e99:	cmp    BYTE PTR [rbx+0x31],0x0
  423e9d:	setne  sil
  423ea1:	add    rsi,QWORD PTR [rbx+0x28]
  423ea5:	mov    QWORD PTR [rbx+0x28],rsi
  423ea9:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  423eae:	cdqe   
  423eb0:	add    QWORD PTR [rbx+0x28],rax
  423eb4:	pop    rbx
  423eb5:	pop    rbp
  423eb6:	pop    r12
  423eb8:	pop    r13
  423eba:	pop    r14
  423ebc:	ret    
  423ebd:	nop    DWORD PTR [rax]
  423ec0:	xor    esi,esi
  423ec2:	mov    rdi,rbx
  423ec5:	call   QWORD PTR [rbx+0x48]
  423ec8:	mov    rsi,QWORD PTR [rbx+0x28]
  423ecc:	jmp    423e40 <flatcc_json_printer_uint32_struct_field@@Base+0x40>
  423ed1:	nop    DWORD PTR [rax+0x0]
  423ed8:	call   4050e0 <memcpy@plt>
  423edd:	add    rbp,QWORD PTR [rbx+0x28]
  423ee1:	mov    QWORD PTR [rbx+0x28],rbp
  423ee5:	jmp    423e71 <flatcc_json_printer_uint32_struct_field@@Base+0x71>
  423ee7:	nop    WORD PTR [rax+rax*1+0x0]
  423ef0:	mov    rax,QWORD PTR [rbx+0x28]
  423ef4:	lea    rdx,[rax+0x1]
  423ef8:	mov    QWORD PTR [rbx+0x28],rdx
  423efc:	mov    BYTE PTR [rax],0xa
  423eff:	movzx  esi,BYTE PTR [rbx+0x31]
  423f03:	mov    rdi,QWORD PTR [rbx+0x28]
  423f07:	imul   esi,DWORD PTR [rbx+0x38]
  423f0b:	movsxd r13,esi
  423f0e:	lea    rax,[rdi+r13*1]
  423f12:	cmp    QWORD PTR [rbx+0x20],rax
  423f16:	jb     423f38 <flatcc_json_printer_uint32_struct_field@@Base+0x138>
  423f18:	mov    esi,0x20
  423f1d:	mov    rdx,r13
  423f20:	call   405090 <memset@plt>
  423f25:	mov    rsi,r13
  423f28:	add    rsi,QWORD PTR [rbx+0x28]
  423f2c:	mov    QWORD PTR [rbx+0x28],rsi
  423f30:	jmp    423e40 <flatcc_json_printer_uint32_struct_field@@Base+0x40>
  423f35:	nop    DWORD PTR [rax]
  423f38:	mov    rsi,r13
  423f3b:	mov    rdi,rbx
  423f3e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  423f43:	mov    rsi,QWORD PTR [rbx+0x28]
  423f47:	jmp    423e40 <flatcc_json_printer_uint32_struct_field@@Base+0x40>
  423f4c:	nop    DWORD PTR [rax+0x0]

0000000000423f50 <flatcc_json_printer_uint64_struct_field@@Base>:
  423f50:	test   esi,esi
  423f52:	push   r14
  423f54:	mov    r14,r8
  423f57:	push   r13
  423f59:	push   r12
  423f5b:	push   rbp
  423f5c:	push   rbx
  423f5d:	mov    rbx,rdi
  423f60:	mov    r12,QWORD PTR [rdx+rcx*1]
  423f64:	je     423f75 <flatcc_json_printer_uint64_struct_field@@Base+0x25>
  423f66:	mov    rax,QWORD PTR [rdi+0x28]
  423f6a:	lea    rdx,[rax+0x1]
  423f6e:	mov    QWORD PTR [rdi+0x28],rdx
  423f72:	mov    BYTE PTR [rax],0x2c
  423f75:	cmp    BYTE PTR [rbx+0x31],0x0
  423f79:	movsxd rbp,r9d
  423f7c:	jne    424040 <flatcc_json_printer_uint64_struct_field@@Base+0xf0>
  423f82:	mov    rsi,QWORD PTR [rbx+0x28]
  423f86:	cmp    rsi,QWORD PTR [rbx+0x20]
  423f8a:	jae    424010 <flatcc_json_printer_uint64_struct_field@@Base+0xc0>
  423f90:	mov    BYTE PTR [rsi],0x22
  423f93:	xor    edi,edi
  423f95:	cmp    BYTE PTR [rbx+0x32],0x0
  423f99:	mov    rdx,rbp
  423f9c:	mov    rsi,r14
  423f9f:	sete   dil
  423fa3:	add    rdi,QWORD PTR [rbx+0x28]
  423fa7:	lea    rax,[rdi+rbp*1]
  423fab:	cmp    QWORD PTR [rbx+0x20],rax
  423faf:	mov    QWORD PTR [rbx+0x28],rdi
  423fb3:	ja     424028 <flatcc_json_printer_uint64_struct_field@@Base+0xd8>
  423fb5:	mov    rdi,rbx
  423fb8:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  423fbd:	mov    rbp,QWORD PTR [rbx+0x28]
  423fc1:	mov    BYTE PTR [rbp+0x0],0x22
  423fc5:	xor    eax,eax
  423fc7:	cmp    BYTE PTR [rbx+0x32],0x0
  423fcb:	mov    rdi,r12
  423fce:	sete   al
  423fd1:	add    rax,QWORD PTR [rbx+0x28]
  423fd5:	xor    esi,esi
  423fd7:	lea    rdx,[rax+0x1]
  423fdb:	mov    QWORD PTR [rbx+0x28],rdx
  423fdf:	mov    BYTE PTR [rax],0x3a
  423fe2:	mov    rax,QWORD PTR [rbx+0x28]
  423fe6:	mov    BYTE PTR [rax],0x20
  423fe9:	cmp    BYTE PTR [rbx+0x31],0x0
  423fed:	setne  sil
  423ff1:	add    rsi,QWORD PTR [rbx+0x28]
  423ff5:	mov    QWORD PTR [rbx+0x28],rsi
  423ff9:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  423ffe:	cdqe   
  424000:	add    QWORD PTR [rbx+0x28],rax
  424004:	pop    rbx
  424005:	pop    rbp
  424006:	pop    r12
  424008:	pop    r13
  42400a:	pop    r14
  42400c:	ret    
  42400d:	nop    DWORD PTR [rax]
  424010:	xor    esi,esi
  424012:	mov    rdi,rbx
  424015:	call   QWORD PTR [rbx+0x48]
  424018:	mov    rsi,QWORD PTR [rbx+0x28]
  42401c:	jmp    423f90 <flatcc_json_printer_uint64_struct_field@@Base+0x40>
  424021:	nop    DWORD PTR [rax+0x0]
  424028:	call   4050e0 <memcpy@plt>
  42402d:	add    rbp,QWORD PTR [rbx+0x28]
  424031:	mov    QWORD PTR [rbx+0x28],rbp
  424035:	jmp    423fc1 <flatcc_json_printer_uint64_struct_field@@Base+0x71>
  424037:	nop    WORD PTR [rax+rax*1+0x0]
  424040:	mov    rax,QWORD PTR [rbx+0x28]
  424044:	lea    rdx,[rax+0x1]
  424048:	mov    QWORD PTR [rbx+0x28],rdx
  42404c:	mov    BYTE PTR [rax],0xa
  42404f:	movzx  esi,BYTE PTR [rbx+0x31]
  424053:	mov    rdi,QWORD PTR [rbx+0x28]
  424057:	imul   esi,DWORD PTR [rbx+0x38]
  42405b:	movsxd r13,esi
  42405e:	lea    rax,[rdi+r13*1]
  424062:	cmp    QWORD PTR [rbx+0x20],rax
  424066:	jb     424088 <flatcc_json_printer_uint64_struct_field@@Base+0x138>
  424068:	mov    esi,0x20
  42406d:	mov    rdx,r13
  424070:	call   405090 <memset@plt>
  424075:	mov    rsi,r13
  424078:	add    rsi,QWORD PTR [rbx+0x28]
  42407c:	mov    QWORD PTR [rbx+0x28],rsi
  424080:	jmp    423f90 <flatcc_json_printer_uint64_struct_field@@Base+0x40>
  424085:	nop    DWORD PTR [rax]
  424088:	mov    rsi,r13
  42408b:	mov    rdi,rbx
  42408e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424093:	mov    rsi,QWORD PTR [rbx+0x28]
  424097:	jmp    423f90 <flatcc_json_printer_uint64_struct_field@@Base+0x40>
  42409c:	nop    DWORD PTR [rax+0x0]

00000000004240a0 <flatcc_json_printer_int8_struct_field@@Base>:
  4240a0:	test   esi,esi
  4240a2:	push   r14
  4240a4:	mov    r14,r8
  4240a7:	push   r13
  4240a9:	push   r12
  4240ab:	push   rbp
  4240ac:	push   rbx
  4240ad:	mov    rbx,rdi
  4240b0:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  4240b5:	je     4240c6 <flatcc_json_printer_int8_struct_field@@Base+0x26>
  4240b7:	mov    rax,QWORD PTR [rdi+0x28]
  4240bb:	lea    rdx,[rax+0x1]
  4240bf:	mov    QWORD PTR [rdi+0x28],rdx
  4240c3:	mov    BYTE PTR [rax],0x2c
  4240c6:	cmp    BYTE PTR [rbx+0x31],0x0
  4240ca:	movsxd rbp,r9d
  4240cd:	jne    4241b0 <flatcc_json_printer_int8_struct_field@@Base+0x110>
  4240d3:	mov    rsi,QWORD PTR [rbx+0x28]
  4240d7:	cmp    rsi,QWORD PTR [rbx+0x20]
  4240db:	jae    424180 <flatcc_json_printer_int8_struct_field@@Base+0xe0>
  4240e1:	mov    BYTE PTR [rsi],0x22
  4240e4:	xor    edi,edi
  4240e6:	cmp    BYTE PTR [rbx+0x32],0x0
  4240ea:	mov    rdx,rbp
  4240ed:	mov    rsi,r14
  4240f0:	sete   dil
  4240f4:	add    rdi,QWORD PTR [rbx+0x28]
  4240f8:	lea    rax,[rdi+rbp*1]
  4240fc:	cmp    QWORD PTR [rbx+0x20],rax
  424100:	mov    QWORD PTR [rbx+0x28],rdi
  424104:	ja     424198 <flatcc_json_printer_int8_struct_field@@Base+0xf8>
  42410a:	mov    rdi,rbx
  42410d:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424112:	mov    rbp,QWORD PTR [rbx+0x28]
  424116:	mov    BYTE PTR [rbp+0x0],0x22
  42411a:	xor    eax,eax
  42411c:	cmp    BYTE PTR [rbx+0x32],0x0
  424120:	movsx  r8d,r12b
  424124:	sete   al
  424127:	add    rax,QWORD PTR [rbx+0x28]
  42412b:	xor    esi,esi
  42412d:	lea    rdx,[rax+0x1]
  424131:	mov    QWORD PTR [rbx+0x28],rdx
  424135:	mov    BYTE PTR [rax],0x3a
  424138:	mov    rax,QWORD PTR [rbx+0x28]
  42413c:	mov    BYTE PTR [rax],0x20
  42413f:	cmp    BYTE PTR [rbx+0x31],0x0
  424143:	setne  sil
  424147:	add    rsi,QWORD PTR [rbx+0x28]
  42414b:	shr    r8d,0x1f
  42414f:	test   r12b,r12b
  424152:	mov    QWORD PTR [rbx+0x28],rsi
  424156:	jns    424162 <flatcc_json_printer_int8_struct_field@@Base+0xc2>
  424158:	mov    BYTE PTR [rsi],0x2d
  42415b:	neg    r12d
  42415e:	add    rsi,0x1
  424162:	movzx  edi,r12b
  424166:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  42416b:	add    r8d,eax
  42416e:	movsxd r8,r8d
  424171:	add    QWORD PTR [rbx+0x28],r8
  424175:	pop    rbx
  424176:	pop    rbp
  424177:	pop    r12
  424179:	pop    r13
  42417b:	pop    r14
  42417d:	ret    
  42417e:	xchg   ax,ax
  424180:	xor    esi,esi
  424182:	mov    rdi,rbx
  424185:	call   QWORD PTR [rbx+0x48]
  424188:	mov    rsi,QWORD PTR [rbx+0x28]
  42418c:	jmp    4240e1 <flatcc_json_printer_int8_struct_field@@Base+0x41>
  424191:	nop    DWORD PTR [rax+0x0]
  424198:	call   4050e0 <memcpy@plt>
  42419d:	add    rbp,QWORD PTR [rbx+0x28]
  4241a1:	mov    QWORD PTR [rbx+0x28],rbp
  4241a5:	jmp    424116 <flatcc_json_printer_int8_struct_field@@Base+0x76>
  4241aa:	nop    WORD PTR [rax+rax*1+0x0]
  4241b0:	mov    rax,QWORD PTR [rbx+0x28]
  4241b4:	lea    rdx,[rax+0x1]
  4241b8:	mov    QWORD PTR [rbx+0x28],rdx
  4241bc:	mov    BYTE PTR [rax],0xa
  4241bf:	movzx  esi,BYTE PTR [rbx+0x31]
  4241c3:	mov    rdi,QWORD PTR [rbx+0x28]
  4241c7:	imul   esi,DWORD PTR [rbx+0x38]
  4241cb:	movsxd r13,esi
  4241ce:	lea    rax,[rdi+r13*1]
  4241d2:	cmp    QWORD PTR [rbx+0x20],rax
  4241d6:	jb     4241f8 <flatcc_json_printer_int8_struct_field@@Base+0x158>
  4241d8:	mov    esi,0x20
  4241dd:	mov    rdx,r13
  4241e0:	call   405090 <memset@plt>
  4241e5:	mov    rsi,r13
  4241e8:	add    rsi,QWORD PTR [rbx+0x28]
  4241ec:	mov    QWORD PTR [rbx+0x28],rsi
  4241f0:	jmp    4240e1 <flatcc_json_printer_int8_struct_field@@Base+0x41>
  4241f5:	nop    DWORD PTR [rax]
  4241f8:	mov    rsi,r13
  4241fb:	mov    rdi,rbx
  4241fe:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424203:	mov    rsi,QWORD PTR [rbx+0x28]
  424207:	jmp    4240e1 <flatcc_json_printer_int8_struct_field@@Base+0x41>
  42420c:	nop    DWORD PTR [rax+0x0]

0000000000424210 <flatcc_json_printer_int16_struct_field@@Base>:
  424210:	test   esi,esi
  424212:	push   r14
  424214:	mov    r14,r8
  424217:	push   r13
  424219:	push   r12
  42421b:	push   rbp
  42421c:	push   rbx
  42421d:	mov    rbx,rdi
  424220:	movzx  r12d,WORD PTR [rdx+rcx*1]
  424225:	je     424236 <flatcc_json_printer_int16_struct_field@@Base+0x26>
  424227:	mov    rax,QWORD PTR [rdi+0x28]
  42422b:	lea    rdx,[rax+0x1]
  42422f:	mov    QWORD PTR [rdi+0x28],rdx
  424233:	mov    BYTE PTR [rax],0x2c
  424236:	cmp    BYTE PTR [rbx+0x31],0x0
  42423a:	movsxd rbp,r9d
  42423d:	jne    424320 <flatcc_json_printer_int16_struct_field@@Base+0x110>
  424243:	mov    rsi,QWORD PTR [rbx+0x28]
  424247:	cmp    rsi,QWORD PTR [rbx+0x20]
  42424b:	jae    4242f0 <flatcc_json_printer_int16_struct_field@@Base+0xe0>
  424251:	mov    BYTE PTR [rsi],0x22
  424254:	xor    edi,edi
  424256:	cmp    BYTE PTR [rbx+0x32],0x0
  42425a:	mov    rdx,rbp
  42425d:	mov    rsi,r14
  424260:	sete   dil
  424264:	add    rdi,QWORD PTR [rbx+0x28]
  424268:	lea    rax,[rdi+rbp*1]
  42426c:	cmp    QWORD PTR [rbx+0x20],rax
  424270:	mov    QWORD PTR [rbx+0x28],rdi
  424274:	ja     424308 <flatcc_json_printer_int16_struct_field@@Base+0xf8>
  42427a:	mov    rdi,rbx
  42427d:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424282:	mov    rbp,QWORD PTR [rbx+0x28]
  424286:	mov    BYTE PTR [rbp+0x0],0x22
  42428a:	xor    eax,eax
  42428c:	cmp    BYTE PTR [rbx+0x32],0x0
  424290:	movsx  r11d,r12w
  424294:	sete   al
  424297:	add    rax,QWORD PTR [rbx+0x28]
  42429b:	xor    esi,esi
  42429d:	lea    rdx,[rax+0x1]
  4242a1:	mov    QWORD PTR [rbx+0x28],rdx
  4242a5:	mov    BYTE PTR [rax],0x3a
  4242a8:	mov    rax,QWORD PTR [rbx+0x28]
  4242ac:	mov    BYTE PTR [rax],0x20
  4242af:	cmp    BYTE PTR [rbx+0x31],0x0
  4242b3:	setne  sil
  4242b7:	add    rsi,QWORD PTR [rbx+0x28]
  4242bb:	shr    r11d,0x1f
  4242bf:	test   r12w,r12w
  4242c3:	mov    QWORD PTR [rbx+0x28],rsi
  4242c7:	jns    4242d3 <flatcc_json_printer_int16_struct_field@@Base+0xc3>
  4242c9:	mov    BYTE PTR [rsi],0x2d
  4242cc:	neg    r12d
  4242cf:	add    rsi,0x1
  4242d3:	movzx  edi,r12w
  4242d7:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  4242dc:	add    r11d,eax
  4242df:	movsxd r11,r11d
  4242e2:	add    QWORD PTR [rbx+0x28],r11
  4242e6:	pop    rbx
  4242e7:	pop    rbp
  4242e8:	pop    r12
  4242ea:	pop    r13
  4242ec:	pop    r14
  4242ee:	ret    
  4242ef:	nop
  4242f0:	xor    esi,esi
  4242f2:	mov    rdi,rbx
  4242f5:	call   QWORD PTR [rbx+0x48]
  4242f8:	mov    rsi,QWORD PTR [rbx+0x28]
  4242fc:	jmp    424251 <flatcc_json_printer_int16_struct_field@@Base+0x41>
  424301:	nop    DWORD PTR [rax+0x0]
  424308:	call   4050e0 <memcpy@plt>
  42430d:	add    rbp,QWORD PTR [rbx+0x28]
  424311:	mov    QWORD PTR [rbx+0x28],rbp
  424315:	jmp    424286 <flatcc_json_printer_int16_struct_field@@Base+0x76>
  42431a:	nop    WORD PTR [rax+rax*1+0x0]
  424320:	mov    rax,QWORD PTR [rbx+0x28]
  424324:	lea    rdx,[rax+0x1]
  424328:	mov    QWORD PTR [rbx+0x28],rdx
  42432c:	mov    BYTE PTR [rax],0xa
  42432f:	movzx  esi,BYTE PTR [rbx+0x31]
  424333:	mov    rdi,QWORD PTR [rbx+0x28]
  424337:	imul   esi,DWORD PTR [rbx+0x38]
  42433b:	movsxd r13,esi
  42433e:	lea    rax,[rdi+r13*1]
  424342:	cmp    QWORD PTR [rbx+0x20],rax
  424346:	jb     424368 <flatcc_json_printer_int16_struct_field@@Base+0x158>
  424348:	mov    esi,0x20
  42434d:	mov    rdx,r13
  424350:	call   405090 <memset@plt>
  424355:	mov    rsi,r13
  424358:	add    rsi,QWORD PTR [rbx+0x28]
  42435c:	mov    QWORD PTR [rbx+0x28],rsi
  424360:	jmp    424251 <flatcc_json_printer_int16_struct_field@@Base+0x41>
  424365:	nop    DWORD PTR [rax]
  424368:	mov    rsi,r13
  42436b:	mov    rdi,rbx
  42436e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424373:	mov    rsi,QWORD PTR [rbx+0x28]
  424377:	jmp    424251 <flatcc_json_printer_int16_struct_field@@Base+0x41>
  42437c:	nop    DWORD PTR [rax+0x0]

0000000000424380 <flatcc_json_printer_int32_struct_field@@Base>:
  424380:	test   esi,esi
  424382:	push   r14
  424384:	mov    r14,r8
  424387:	push   r13
  424389:	push   r12
  42438b:	push   rbp
  42438c:	push   rbx
  42438d:	mov    rbx,rdi
  424390:	mov    r12d,DWORD PTR [rdx+rcx*1]
  424394:	je     4243a5 <flatcc_json_printer_int32_struct_field@@Base+0x25>
  424396:	mov    rax,QWORD PTR [rdi+0x28]
  42439a:	lea    rdx,[rax+0x1]
  42439e:	mov    QWORD PTR [rdi+0x28],rdx
  4243a2:	mov    BYTE PTR [rax],0x2c
  4243a5:	cmp    BYTE PTR [rbx+0x31],0x0
  4243a9:	movsxd rbp,r9d
  4243ac:	jne    424490 <flatcc_json_printer_int32_struct_field@@Base+0x110>
  4243b2:	mov    rsi,QWORD PTR [rbx+0x28]
  4243b6:	cmp    rsi,QWORD PTR [rbx+0x20]
  4243ba:	jae    424460 <flatcc_json_printer_int32_struct_field@@Base+0xe0>
  4243c0:	mov    BYTE PTR [rsi],0x22
  4243c3:	xor    edi,edi
  4243c5:	cmp    BYTE PTR [rbx+0x32],0x0
  4243c9:	mov    rdx,rbp
  4243cc:	mov    rsi,r14
  4243cf:	sete   dil
  4243d3:	add    rdi,QWORD PTR [rbx+0x28]
  4243d7:	lea    rax,[rdi+rbp*1]
  4243db:	cmp    QWORD PTR [rbx+0x20],rax
  4243df:	mov    QWORD PTR [rbx+0x28],rdi
  4243e3:	ja     424478 <flatcc_json_printer_int32_struct_field@@Base+0xf8>
  4243e9:	mov    rdi,rbx
  4243ec:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4243f1:	mov    rbp,QWORD PTR [rbx+0x28]
  4243f5:	mov    BYTE PTR [rbp+0x0],0x22
  4243f9:	xor    eax,eax
  4243fb:	cmp    BYTE PTR [rbx+0x32],0x0
  4243ff:	mov    r10d,r12d
  424402:	sete   al
  424405:	add    rax,QWORD PTR [rbx+0x28]
  424409:	xor    esi,esi
  42440b:	lea    rdx,[rax+0x1]
  42440f:	mov    QWORD PTR [rbx+0x28],rdx
  424413:	mov    BYTE PTR [rax],0x3a
  424416:	mov    rax,QWORD PTR [rbx+0x28]
  42441a:	mov    BYTE PTR [rax],0x20
  42441d:	cmp    BYTE PTR [rbx+0x31],0x0
  424421:	setne  sil
  424425:	add    rsi,QWORD PTR [rbx+0x28]
  424429:	shr    r10d,0x1f
  42442d:	test   r12d,r12d
  424430:	mov    QWORD PTR [rbx+0x28],rsi
  424434:	jns    424440 <flatcc_json_printer_int32_struct_field@@Base+0xc0>
  424436:	mov    BYTE PTR [rsi],0x2d
  424439:	neg    r12d
  42443c:	add    rsi,0x1
  424440:	mov    edi,r12d
  424443:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  424448:	add    r10d,eax
  42444b:	movsxd r10,r10d
  42444e:	add    QWORD PTR [rbx+0x28],r10
  424452:	pop    rbx
  424453:	pop    rbp
  424454:	pop    r12
  424456:	pop    r13
  424458:	pop    r14
  42445a:	ret    
  42445b:	nop    DWORD PTR [rax+rax*1+0x0]
  424460:	xor    esi,esi
  424462:	mov    rdi,rbx
  424465:	call   QWORD PTR [rbx+0x48]
  424468:	mov    rsi,QWORD PTR [rbx+0x28]
  42446c:	jmp    4243c0 <flatcc_json_printer_int32_struct_field@@Base+0x40>
  424471:	nop    DWORD PTR [rax+0x0]
  424478:	call   4050e0 <memcpy@plt>
  42447d:	add    rbp,QWORD PTR [rbx+0x28]
  424481:	mov    QWORD PTR [rbx+0x28],rbp
  424485:	jmp    4243f5 <flatcc_json_printer_int32_struct_field@@Base+0x75>
  42448a:	nop    WORD PTR [rax+rax*1+0x0]
  424490:	mov    rax,QWORD PTR [rbx+0x28]
  424494:	lea    rdx,[rax+0x1]
  424498:	mov    QWORD PTR [rbx+0x28],rdx
  42449c:	mov    BYTE PTR [rax],0xa
  42449f:	movzx  esi,BYTE PTR [rbx+0x31]
  4244a3:	mov    rdi,QWORD PTR [rbx+0x28]
  4244a7:	imul   esi,DWORD PTR [rbx+0x38]
  4244ab:	movsxd r13,esi
  4244ae:	lea    rax,[rdi+r13*1]
  4244b2:	cmp    QWORD PTR [rbx+0x20],rax
  4244b6:	jb     4244d8 <flatcc_json_printer_int32_struct_field@@Base+0x158>
  4244b8:	mov    esi,0x20
  4244bd:	mov    rdx,r13
  4244c0:	call   405090 <memset@plt>
  4244c5:	mov    rsi,r13
  4244c8:	add    rsi,QWORD PTR [rbx+0x28]
  4244cc:	mov    QWORD PTR [rbx+0x28],rsi
  4244d0:	jmp    4243c0 <flatcc_json_printer_int32_struct_field@@Base+0x40>
  4244d5:	nop    DWORD PTR [rax]
  4244d8:	mov    rsi,r13
  4244db:	mov    rdi,rbx
  4244de:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4244e3:	mov    rsi,QWORD PTR [rbx+0x28]
  4244e7:	jmp    4243c0 <flatcc_json_printer_int32_struct_field@@Base+0x40>
  4244ec:	nop    DWORD PTR [rax+0x0]

00000000004244f0 <flatcc_json_printer_int64_struct_field@@Base>:
  4244f0:	test   esi,esi
  4244f2:	push   r14
  4244f4:	mov    r14,r8
  4244f7:	push   r13
  4244f9:	push   r12
  4244fb:	push   rbp
  4244fc:	push   rbx
  4244fd:	mov    rbx,rdi
  424500:	mov    r12,QWORD PTR [rdx+rcx*1]
  424504:	je     424515 <flatcc_json_printer_int64_struct_field@@Base+0x25>
  424506:	mov    rax,QWORD PTR [rdi+0x28]
  42450a:	lea    rdx,[rax+0x1]
  42450e:	mov    QWORD PTR [rdi+0x28],rdx
  424512:	mov    BYTE PTR [rax],0x2c
  424515:	cmp    BYTE PTR [rbx+0x31],0x0
  424519:	movsxd rbp,r9d
  42451c:	jne    424600 <flatcc_json_printer_int64_struct_field@@Base+0x110>
  424522:	mov    rsi,QWORD PTR [rbx+0x28]
  424526:	cmp    rsi,QWORD PTR [rbx+0x20]
  42452a:	jae    4245d0 <flatcc_json_printer_int64_struct_field@@Base+0xe0>
  424530:	mov    BYTE PTR [rsi],0x22
  424533:	xor    edi,edi
  424535:	cmp    BYTE PTR [rbx+0x32],0x0
  424539:	mov    rdx,rbp
  42453c:	mov    rsi,r14
  42453f:	sete   dil
  424543:	add    rdi,QWORD PTR [rbx+0x28]
  424547:	lea    rax,[rdi+rbp*1]
  42454b:	cmp    QWORD PTR [rbx+0x20],rax
  42454f:	mov    QWORD PTR [rbx+0x28],rdi
  424553:	ja     4245e8 <flatcc_json_printer_int64_struct_field@@Base+0xf8>
  424559:	mov    rdi,rbx
  42455c:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424561:	mov    rbp,QWORD PTR [rbx+0x28]
  424565:	mov    BYTE PTR [rbp+0x0],0x22
  424569:	xor    eax,eax
  42456b:	cmp    BYTE PTR [rbx+0x32],0x0
  42456f:	mov    rbp,r12
  424572:	sete   al
  424575:	add    rax,QWORD PTR [rbx+0x28]
  424579:	xor    esi,esi
  42457b:	lea    rdx,[rax+0x1]
  42457f:	mov    QWORD PTR [rbx+0x28],rdx
  424583:	mov    BYTE PTR [rax],0x3a
  424586:	mov    rax,QWORD PTR [rbx+0x28]
  42458a:	mov    BYTE PTR [rax],0x20
  42458d:	cmp    BYTE PTR [rbx+0x31],0x0
  424591:	setne  sil
  424595:	add    rsi,QWORD PTR [rbx+0x28]
  424599:	shr    rbp,0x3f
  42459d:	test   r12,r12
  4245a0:	mov    QWORD PTR [rbx+0x28],rsi
  4245a4:	jns    4245b0 <flatcc_json_printer_int64_struct_field@@Base+0xc0>
  4245a6:	mov    BYTE PTR [rsi],0x2d
  4245a9:	neg    r12
  4245ac:	add    rsi,0x1
  4245b0:	mov    rdi,r12
  4245b3:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  4245b8:	add    eax,ebp
  4245ba:	cdqe   
  4245bc:	add    QWORD PTR [rbx+0x28],rax
  4245c0:	pop    rbx
  4245c1:	pop    rbp
  4245c2:	pop    r12
  4245c4:	pop    r13
  4245c6:	pop    r14
  4245c8:	ret    
  4245c9:	nop    DWORD PTR [rax+0x0]
  4245d0:	xor    esi,esi
  4245d2:	mov    rdi,rbx
  4245d5:	call   QWORD PTR [rbx+0x48]
  4245d8:	mov    rsi,QWORD PTR [rbx+0x28]
  4245dc:	jmp    424530 <flatcc_json_printer_int64_struct_field@@Base+0x40>
  4245e1:	nop    DWORD PTR [rax+0x0]
  4245e8:	call   4050e0 <memcpy@plt>
  4245ed:	add    rbp,QWORD PTR [rbx+0x28]
  4245f1:	mov    QWORD PTR [rbx+0x28],rbp
  4245f5:	jmp    424565 <flatcc_json_printer_int64_struct_field@@Base+0x75>
  4245fa:	nop    WORD PTR [rax+rax*1+0x0]
  424600:	mov    rax,QWORD PTR [rbx+0x28]
  424604:	lea    rdx,[rax+0x1]
  424608:	mov    QWORD PTR [rbx+0x28],rdx
  42460c:	mov    BYTE PTR [rax],0xa
  42460f:	movzx  esi,BYTE PTR [rbx+0x31]
  424613:	mov    rdi,QWORD PTR [rbx+0x28]
  424617:	imul   esi,DWORD PTR [rbx+0x38]
  42461b:	movsxd r13,esi
  42461e:	lea    rax,[rdi+r13*1]
  424622:	cmp    QWORD PTR [rbx+0x20],rax
  424626:	jb     424648 <flatcc_json_printer_int64_struct_field@@Base+0x158>
  424628:	mov    esi,0x20
  42462d:	mov    rdx,r13
  424630:	call   405090 <memset@plt>
  424635:	mov    rsi,r13
  424638:	add    rsi,QWORD PTR [rbx+0x28]
  42463c:	mov    QWORD PTR [rbx+0x28],rsi
  424640:	jmp    424530 <flatcc_json_printer_int64_struct_field@@Base+0x40>
  424645:	nop    DWORD PTR [rax]
  424648:	mov    rsi,r13
  42464b:	mov    rdi,rbx
  42464e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424653:	mov    rsi,QWORD PTR [rbx+0x28]
  424657:	jmp    424530 <flatcc_json_printer_int64_struct_field@@Base+0x40>
  42465c:	nop    DWORD PTR [rax+0x0]

0000000000424660 <flatcc_json_printer_bool_struct_field@@Base>:
  424660:	test   esi,esi
  424662:	push   r14
  424664:	mov    r14,r8
  424667:	push   r13
  424669:	push   r12
  42466b:	push   rbp
  42466c:	push   rbx
  42466d:	mov    rbx,rdi
  424670:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  424675:	je     424686 <flatcc_json_printer_bool_struct_field@@Base+0x26>
  424677:	mov    rax,QWORD PTR [rdi+0x28]
  42467b:	lea    rdx,[rax+0x1]
  42467f:	mov    QWORD PTR [rdi+0x28],rdx
  424683:	mov    BYTE PTR [rax],0x2c
  424686:	cmp    BYTE PTR [rbx+0x31],0x0
  42468a:	movsxd rbp,r9d
  42468d:	jne    424750 <flatcc_json_printer_bool_struct_field@@Base+0xf0>
  424693:	mov    rsi,QWORD PTR [rbx+0x28]
  424697:	cmp    rsi,QWORD PTR [rbx+0x20]
  42469b:	jae    424720 <flatcc_json_printer_bool_struct_field@@Base+0xc0>
  4246a1:	mov    BYTE PTR [rsi],0x22
  4246a4:	xor    edi,edi
  4246a6:	cmp    BYTE PTR [rbx+0x32],0x0
  4246aa:	mov    rdx,rbp
  4246ad:	mov    rsi,r14
  4246b0:	sete   dil
  4246b4:	add    rdi,QWORD PTR [rbx+0x28]
  4246b8:	lea    rax,[rdi+rbp*1]
  4246bc:	cmp    QWORD PTR [rbx+0x20],rax
  4246c0:	mov    QWORD PTR [rbx+0x28],rdi
  4246c4:	ja     424738 <flatcc_json_printer_bool_struct_field@@Base+0xd8>
  4246c6:	mov    rdi,rbx
  4246c9:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4246ce:	mov    rbp,QWORD PTR [rbx+0x28]
  4246d2:	mov    BYTE PTR [rbp+0x0],0x22
  4246d6:	xor    eax,eax
  4246d8:	cmp    BYTE PTR [rbx+0x32],0x0
  4246dc:	movzx  edi,r12b
  4246e0:	sete   al
  4246e3:	add    rax,QWORD PTR [rbx+0x28]
  4246e7:	xor    esi,esi
  4246e9:	lea    rdx,[rax+0x1]
  4246ed:	mov    QWORD PTR [rbx+0x28],rdx
  4246f1:	mov    BYTE PTR [rax],0x3a
  4246f4:	mov    rax,QWORD PTR [rbx+0x28]
  4246f8:	mov    BYTE PTR [rax],0x20
  4246fb:	cmp    BYTE PTR [rbx+0x31],0x0
  4246ff:	setne  sil
  424703:	add    rsi,QWORD PTR [rbx+0x28]
  424707:	mov    QWORD PTR [rbx+0x28],rsi
  42470b:	call   4200d0 <flatcc_json_parser_table_as_root@@Base+0xe70>
  424710:	cdqe   
  424712:	add    QWORD PTR [rbx+0x28],rax
  424716:	pop    rbx
  424717:	pop    rbp
  424718:	pop    r12
  42471a:	pop    r13
  42471c:	pop    r14
  42471e:	ret    
  42471f:	nop
  424720:	xor    esi,esi
  424722:	mov    rdi,rbx
  424725:	call   QWORD PTR [rbx+0x48]
  424728:	mov    rsi,QWORD PTR [rbx+0x28]
  42472c:	jmp    4246a1 <flatcc_json_printer_bool_struct_field@@Base+0x41>
  424731:	nop    DWORD PTR [rax+0x0]
  424738:	call   4050e0 <memcpy@plt>
  42473d:	add    rbp,QWORD PTR [rbx+0x28]
  424741:	mov    QWORD PTR [rbx+0x28],rbp
  424745:	jmp    4246d2 <flatcc_json_printer_bool_struct_field@@Base+0x72>
  424747:	nop    WORD PTR [rax+rax*1+0x0]
  424750:	mov    rax,QWORD PTR [rbx+0x28]
  424754:	lea    rdx,[rax+0x1]
  424758:	mov    QWORD PTR [rbx+0x28],rdx
  42475c:	mov    BYTE PTR [rax],0xa
  42475f:	movzx  esi,BYTE PTR [rbx+0x31]
  424763:	mov    rdi,QWORD PTR [rbx+0x28]
  424767:	imul   esi,DWORD PTR [rbx+0x38]
  42476b:	movsxd r13,esi
  42476e:	lea    rax,[rdi+r13*1]
  424772:	cmp    QWORD PTR [rbx+0x20],rax
  424776:	jb     424798 <flatcc_json_printer_bool_struct_field@@Base+0x138>
  424778:	mov    esi,0x20
  42477d:	mov    rdx,r13
  424780:	call   405090 <memset@plt>
  424785:	mov    rsi,r13
  424788:	add    rsi,QWORD PTR [rbx+0x28]
  42478c:	mov    QWORD PTR [rbx+0x28],rsi
  424790:	jmp    4246a1 <flatcc_json_printer_bool_struct_field@@Base+0x41>
  424795:	nop    DWORD PTR [rax]
  424798:	mov    rsi,r13
  42479b:	mov    rdi,rbx
  42479e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4247a3:	mov    rsi,QWORD PTR [rbx+0x28]
  4247a7:	jmp    4246a1 <flatcc_json_printer_bool_struct_field@@Base+0x41>
  4247ac:	nop    DWORD PTR [rax+0x0]

00000000004247b0 <flatcc_json_printer_float_struct_field@@Base>:
  4247b0:	push   r13
  4247b2:	push   r12
  4247b4:	mov    r13,r8
  4247b7:	push   rbp
  4247b8:	push   rbx
  4247b9:	mov    rbx,rdi
  4247bc:	sub    rsp,0x18
  4247c0:	test   esi,esi
  4247c2:	vmovss xmm1,DWORD PTR [rdx+rcx*1]
  4247c7:	vmovss DWORD PTR [rsp+0xc],xmm1
  4247cd:	je     4247de <flatcc_json_printer_float_struct_field@@Base+0x2e>
  4247cf:	mov    rax,QWORD PTR [rdi+0x28]
  4247d3:	lea    rdx,[rax+0x1]
  4247d7:	mov    QWORD PTR [rdi+0x28],rdx
  4247db:	mov    BYTE PTR [rax],0x2c
  4247de:	cmp    BYTE PTR [rbx+0x31],0x0
  4247e2:	movsxd rbp,r9d
  4247e5:	jne    4248b0 <flatcc_json_printer_float_struct_field@@Base+0x100>
  4247eb:	mov    rsi,QWORD PTR [rbx+0x28]
  4247ef:	cmp    rsi,QWORD PTR [rbx+0x20]
  4247f3:	jae    424880 <flatcc_json_printer_float_struct_field@@Base+0xd0>
  4247f9:	mov    BYTE PTR [rsi],0x22
  4247fc:	xor    edi,edi
  4247fe:	cmp    BYTE PTR [rbx+0x32],0x0
  424802:	mov    rdx,rbp
  424805:	mov    rsi,r13
  424808:	sete   dil
  42480c:	add    rdi,QWORD PTR [rbx+0x28]
  424810:	lea    rax,[rdi+rbp*1]
  424814:	cmp    QWORD PTR [rbx+0x20],rax
  424818:	mov    QWORD PTR [rbx+0x28],rdi
  42481c:	ja     424898 <flatcc_json_printer_float_struct_field@@Base+0xe8>
  42481e:	mov    rdi,rbx
  424821:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424826:	mov    rbp,QWORD PTR [rbx+0x28]
  42482a:	mov    BYTE PTR [rbp+0x0],0x22
  42482e:	xor    eax,eax
  424830:	cmp    BYTE PTR [rbx+0x32],0x0
  424834:	vxorpd xmm0,xmm0,xmm0
  424838:	sete   al
  42483b:	add    rax,QWORD PTR [rbx+0x28]
  42483f:	xor    edi,edi
  424841:	vcvtss2sd xmm0,xmm0,DWORD PTR [rsp+0xc]
  424847:	lea    rdx,[rax+0x1]
  42484b:	mov    QWORD PTR [rbx+0x28],rdx
  42484f:	mov    BYTE PTR [rax],0x3a
  424852:	mov    rax,QWORD PTR [rbx+0x28]
  424856:	mov    BYTE PTR [rax],0x20
  424859:	cmp    BYTE PTR [rbx+0x31],0x0
  42485d:	setne  dil
  424861:	add    rdi,QWORD PTR [rbx+0x28]
  424865:	mov    QWORD PTR [rbx+0x28],rdi
  424869:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  42486e:	cdqe   
  424870:	add    QWORD PTR [rbx+0x28],rax
  424874:	add    rsp,0x18
  424878:	pop    rbx
  424879:	pop    rbp
  42487a:	pop    r12
  42487c:	pop    r13
  42487e:	ret    
  42487f:	nop
  424880:	xor    esi,esi
  424882:	mov    rdi,rbx
  424885:	call   QWORD PTR [rbx+0x48]
  424888:	mov    rsi,QWORD PTR [rbx+0x28]
  42488c:	jmp    4247f9 <flatcc_json_printer_float_struct_field@@Base+0x49>
  424891:	nop    DWORD PTR [rax+0x0]
  424898:	call   4050e0 <memcpy@plt>
  42489d:	add    rbp,QWORD PTR [rbx+0x28]
  4248a1:	mov    QWORD PTR [rbx+0x28],rbp
  4248a5:	jmp    42482a <flatcc_json_printer_float_struct_field@@Base+0x7a>
  4248aa:	nop    WORD PTR [rax+rax*1+0x0]
  4248b0:	mov    rax,QWORD PTR [rbx+0x28]
  4248b4:	lea    rdx,[rax+0x1]
  4248b8:	mov    QWORD PTR [rbx+0x28],rdx
  4248bc:	mov    BYTE PTR [rax],0xa
  4248bf:	movzx  esi,BYTE PTR [rbx+0x31]
  4248c3:	mov    rdi,QWORD PTR [rbx+0x28]
  4248c7:	imul   esi,DWORD PTR [rbx+0x38]
  4248cb:	movsxd r12,esi
  4248ce:	lea    rax,[rdi+r12*1]
  4248d2:	cmp    QWORD PTR [rbx+0x20],rax
  4248d6:	jb     4248f8 <flatcc_json_printer_float_struct_field@@Base+0x148>
  4248d8:	mov    esi,0x20
  4248dd:	mov    rdx,r12
  4248e0:	call   405090 <memset@plt>
  4248e5:	mov    rsi,r12
  4248e8:	add    rsi,QWORD PTR [rbx+0x28]
  4248ec:	mov    QWORD PTR [rbx+0x28],rsi
  4248f0:	jmp    4247f9 <flatcc_json_printer_float_struct_field@@Base+0x49>
  4248f5:	nop    DWORD PTR [rax]
  4248f8:	mov    rsi,r12
  4248fb:	mov    rdi,rbx
  4248fe:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424903:	mov    rsi,QWORD PTR [rbx+0x28]
  424907:	jmp    4247f9 <flatcc_json_printer_float_struct_field@@Base+0x49>
  42490c:	nop    DWORD PTR [rax+0x0]

0000000000424910 <flatcc_json_printer_double_struct_field@@Base>:
  424910:	push   r13
  424912:	push   r12
  424914:	mov    r13,r8
  424917:	push   rbp
  424918:	push   rbx
  424919:	mov    rbx,rdi
  42491c:	sub    rsp,0x18
  424920:	test   esi,esi
  424922:	vmovsd xmm0,QWORD PTR [rdx+rcx*1]
  424927:	je     424938 <flatcc_json_printer_double_struct_field@@Base+0x28>
  424929:	mov    rax,QWORD PTR [rdi+0x28]
  42492d:	lea    rdx,[rax+0x1]
  424931:	mov    QWORD PTR [rdi+0x28],rdx
  424935:	mov    BYTE PTR [rax],0x2c
  424938:	cmp    BYTE PTR [rbx+0x31],0x0
  42493c:	movsxd rbp,r9d
  42493f:	jne    424a20 <flatcc_json_printer_double_struct_field@@Base+0x110>
  424945:	mov    rsi,QWORD PTR [rbx+0x28]
  424949:	cmp    rsi,QWORD PTR [rbx+0x20]
  42494d:	jae    4249e0 <flatcc_json_printer_double_struct_field@@Base+0xd0>
  424953:	mov    BYTE PTR [rsi],0x22
  424956:	xor    edi,edi
  424958:	cmp    BYTE PTR [rbx+0x32],0x0
  42495c:	vmovsd QWORD PTR [rsp+0x8],xmm0
  424962:	mov    rdx,rbp
  424965:	mov    rsi,r13
  424968:	sete   dil
  42496c:	add    rdi,QWORD PTR [rbx+0x28]
  424970:	lea    rax,[rdi+rbp*1]
  424974:	cmp    QWORD PTR [rbx+0x20],rax
  424978:	mov    QWORD PTR [rbx+0x28],rdi
  42497c:	ja     424a00 <flatcc_json_printer_double_struct_field@@Base+0xf0>
  424982:	mov    rdi,rbx
  424985:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42498a:	mov    rbp,QWORD PTR [rbx+0x28]
  42498e:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  424994:	mov    BYTE PTR [rbp+0x0],0x22
  424998:	xor    eax,eax
  42499a:	cmp    BYTE PTR [rbx+0x32],0x0
  42499e:	sete   al
  4249a1:	add    rax,QWORD PTR [rbx+0x28]
  4249a5:	xor    edi,edi
  4249a7:	lea    rdx,[rax+0x1]
  4249ab:	mov    QWORD PTR [rbx+0x28],rdx
  4249af:	mov    BYTE PTR [rax],0x3a
  4249b2:	mov    rax,QWORD PTR [rbx+0x28]
  4249b6:	mov    BYTE PTR [rax],0x20
  4249b9:	cmp    BYTE PTR [rbx+0x31],0x0
  4249bd:	setne  dil
  4249c1:	add    rdi,QWORD PTR [rbx+0x28]
  4249c5:	mov    QWORD PTR [rbx+0x28],rdi
  4249c9:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  4249ce:	cdqe   
  4249d0:	add    QWORD PTR [rbx+0x28],rax
  4249d4:	add    rsp,0x18
  4249d8:	pop    rbx
  4249d9:	pop    rbp
  4249da:	pop    r12
  4249dc:	pop    r13
  4249de:	ret    
  4249df:	nop
  4249e0:	vmovsd QWORD PTR [rsp+0x8],xmm0
  4249e6:	xor    esi,esi
  4249e8:	mov    rdi,rbx
  4249eb:	call   QWORD PTR [rbx+0x48]
  4249ee:	mov    rsi,QWORD PTR [rbx+0x28]
  4249f2:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  4249f8:	jmp    424953 <flatcc_json_printer_double_struct_field@@Base+0x43>
  4249fd:	nop    DWORD PTR [rax]
  424a00:	call   4050e0 <memcpy@plt>
  424a05:	add    rbp,QWORD PTR [rbx+0x28]
  424a09:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  424a0f:	mov    QWORD PTR [rbx+0x28],rbp
  424a13:	jmp    424994 <flatcc_json_printer_double_struct_field@@Base+0x84>
  424a18:	nop    DWORD PTR [rax+rax*1+0x0]
  424a20:	mov    rax,QWORD PTR [rbx+0x28]
  424a24:	vmovsd QWORD PTR [rsp+0x8],xmm0
  424a2a:	lea    rdx,[rax+0x1]
  424a2e:	mov    QWORD PTR [rbx+0x28],rdx
  424a32:	mov    BYTE PTR [rax],0xa
  424a35:	movzx  esi,BYTE PTR [rbx+0x31]
  424a39:	mov    rdi,QWORD PTR [rbx+0x28]
  424a3d:	imul   esi,DWORD PTR [rbx+0x38]
  424a41:	movsxd r12,esi
  424a44:	lea    rax,[rdi+r12*1]
  424a48:	cmp    QWORD PTR [rbx+0x20],rax
  424a4c:	jb     424a78 <flatcc_json_printer_double_struct_field@@Base+0x168>
  424a4e:	mov    esi,0x20
  424a53:	mov    rdx,r12
  424a56:	call   405090 <memset@plt>
  424a5b:	mov    rsi,r12
  424a5e:	add    rsi,QWORD PTR [rbx+0x28]
  424a62:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  424a68:	mov    QWORD PTR [rbx+0x28],rsi
  424a6c:	jmp    424953 <flatcc_json_printer_double_struct_field@@Base+0x43>
  424a71:	nop    DWORD PTR [rax+0x0]
  424a78:	mov    rsi,r12
  424a7b:	mov    rdi,rbx
  424a7e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424a83:	mov    rsi,QWORD PTR [rbx+0x28]
  424a87:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  424a8d:	jmp    424953 <flatcc_json_printer_double_struct_field@@Base+0x43>
  424a92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424a9d:	nop    DWORD PTR [rax]

0000000000424aa0 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
  424aa0:	push   r15
  424aa2:	push   r14
  424aa4:	mov    r15,r8
  424aa7:	push   r13
  424aa9:	push   r12
  424aab:	push   rbp
  424aac:	push   rbx
  424aad:	mov    rbx,rdi
  424ab0:	sub    rsp,0x8
  424ab4:	test   esi,esi
  424ab6:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  424abb:	mov    r13,QWORD PTR [rsp+0x40]
  424ac0:	je     424ad1 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x31>
  424ac2:	mov    rax,QWORD PTR [rdi+0x28]
  424ac6:	lea    rdx,[rax+0x1]
  424aca:	mov    QWORD PTR [rdi+0x28],rdx
  424ace:	mov    BYTE PTR [rax],0x2c
  424ad1:	cmp    BYTE PTR [rbx+0x31],0x0
  424ad5:	movsxd rbp,r9d
  424ad8:	jne    424bd8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x138>
  424ade:	mov    rsi,QWORD PTR [rbx+0x28]
  424ae2:	cmp    rsi,QWORD PTR [rbx+0x20]
  424ae6:	jae    424b80 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xe0>
  424aec:	mov    BYTE PTR [rsi],0x22
  424aef:	xor    edi,edi
  424af1:	cmp    BYTE PTR [rbx+0x32],0x0
  424af5:	mov    rdx,rbp
  424af8:	mov    rsi,r15
  424afb:	sete   dil
  424aff:	add    rdi,QWORD PTR [rbx+0x28]
  424b03:	lea    rax,[rdi+rbp*1]
  424b07:	cmp    QWORD PTR [rbx+0x20],rax
  424b0b:	mov    QWORD PTR [rbx+0x28],rdi
  424b0f:	ja     424bc0 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x120>
  424b15:	mov    rdi,rbx
  424b18:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424b1d:	mov    rbp,QWORD PTR [rbx+0x28]
  424b21:	mov    BYTE PTR [rbp+0x0],0x22
  424b25:	xor    eax,eax
  424b27:	cmp    BYTE PTR [rbx+0x32],0x0
  424b2b:	sete   al
  424b2e:	add    rax,QWORD PTR [rbx+0x28]
  424b32:	xor    esi,esi
  424b34:	lea    rdx,[rax+0x1]
  424b38:	mov    QWORD PTR [rbx+0x28],rdx
  424b3c:	mov    BYTE PTR [rax],0x3a
  424b3f:	mov    rax,QWORD PTR [rbx+0x28]
  424b43:	mov    BYTE PTR [rax],0x20
  424b46:	cmp    BYTE PTR [rbx+0x31],0x0
  424b4a:	setne  sil
  424b4e:	add    rsi,QWORD PTR [rbx+0x28]
  424b52:	cmp    BYTE PTR [rbx+0x33],0x0
  424b56:	mov    QWORD PTR [rbx+0x28],rsi
  424b5a:	jne    424b98 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf8>
  424b5c:	add    rsp,0x8
  424b60:	movzx  esi,r12b
  424b64:	mov    rdi,rbx
  424b67:	mov    rax,r13
  424b6a:	pop    rbx
  424b6b:	pop    rbp
  424b6c:	pop    r12
  424b6e:	pop    r13
  424b70:	pop    r14
  424b72:	pop    r15
  424b74:	jmp    rax
  424b76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b80:	xor    esi,esi
  424b82:	mov    rdi,rbx
  424b85:	call   QWORD PTR [rbx+0x48]
  424b88:	mov    rsi,QWORD PTR [rbx+0x28]
  424b8c:	jmp    424aec <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>
  424b91:	nop    DWORD PTR [rax+0x0]
  424b98:	movzx  edi,r12b
  424b9c:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  424ba1:	cdqe   
  424ba3:	add    QWORD PTR [rbx+0x28],rax
  424ba7:	add    rsp,0x8
  424bab:	pop    rbx
  424bac:	pop    rbp
  424bad:	pop    r12
  424baf:	pop    r13
  424bb1:	pop    r14
  424bb3:	pop    r15
  424bb5:	ret    
  424bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424bc0:	call   4050e0 <memcpy@plt>
  424bc5:	add    rbp,QWORD PTR [rbx+0x28]
  424bc9:	mov    QWORD PTR [rbx+0x28],rbp
  424bcd:	jmp    424b21 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x81>
  424bd2:	nop    WORD PTR [rax+rax*1+0x0]
  424bd8:	mov    rax,QWORD PTR [rbx+0x28]
  424bdc:	lea    rdx,[rax+0x1]
  424be0:	mov    QWORD PTR [rbx+0x28],rdx
  424be4:	mov    BYTE PTR [rax],0xa
  424be7:	movzx  esi,BYTE PTR [rbx+0x31]
  424beb:	mov    rdi,QWORD PTR [rbx+0x28]
  424bef:	imul   esi,DWORD PTR [rbx+0x38]
  424bf3:	movsxd r14,esi
  424bf6:	lea    rax,[rdi+r14*1]
  424bfa:	cmp    QWORD PTR [rbx+0x20],rax
  424bfe:	jb     424c20 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x180>
  424c00:	mov    esi,0x20
  424c05:	mov    rdx,r14
  424c08:	call   405090 <memset@plt>
  424c0d:	mov    rsi,r14
  424c10:	add    rsi,QWORD PTR [rbx+0x28]
  424c14:	mov    QWORD PTR [rbx+0x28],rsi
  424c18:	jmp    424aec <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>
  424c1d:	nop    DWORD PTR [rax]
  424c20:	mov    rsi,r14
  424c23:	mov    rdi,rbx
  424c26:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424c2b:	mov    rsi,QWORD PTR [rbx+0x28]
  424c2f:	jmp    424aec <flatcc_json_printer_uint8_enum_struct_field@@Base+0x4c>
  424c34:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424c3f:	nop

0000000000424c40 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
  424c40:	push   r15
  424c42:	push   r14
  424c44:	mov    r15,r8
  424c47:	push   r13
  424c49:	push   r12
  424c4b:	push   rbp
  424c4c:	push   rbx
  424c4d:	mov    rbx,rdi
  424c50:	sub    rsp,0x8
  424c54:	test   esi,esi
  424c56:	movzx  r12d,WORD PTR [rdx+rcx*1]
  424c5b:	mov    r13,QWORD PTR [rsp+0x40]
  424c60:	je     424c71 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x31>
  424c62:	mov    rax,QWORD PTR [rdi+0x28]
  424c66:	lea    rdx,[rax+0x1]
  424c6a:	mov    QWORD PTR [rdi+0x28],rdx
  424c6e:	mov    BYTE PTR [rax],0x2c
  424c71:	cmp    BYTE PTR [rbx+0x31],0x0
  424c75:	movsxd rbp,r9d
  424c78:	jne    424d78 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x138>
  424c7e:	mov    rsi,QWORD PTR [rbx+0x28]
  424c82:	cmp    rsi,QWORD PTR [rbx+0x20]
  424c86:	jae    424d20 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xe0>
  424c8c:	mov    BYTE PTR [rsi],0x22
  424c8f:	xor    edi,edi
  424c91:	cmp    BYTE PTR [rbx+0x32],0x0
  424c95:	mov    rdx,rbp
  424c98:	mov    rsi,r15
  424c9b:	sete   dil
  424c9f:	add    rdi,QWORD PTR [rbx+0x28]
  424ca3:	lea    rax,[rdi+rbp*1]
  424ca7:	cmp    QWORD PTR [rbx+0x20],rax
  424cab:	mov    QWORD PTR [rbx+0x28],rdi
  424caf:	ja     424d60 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x120>
  424cb5:	mov    rdi,rbx
  424cb8:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424cbd:	mov    rbp,QWORD PTR [rbx+0x28]
  424cc1:	mov    BYTE PTR [rbp+0x0],0x22
  424cc5:	xor    eax,eax
  424cc7:	cmp    BYTE PTR [rbx+0x32],0x0
  424ccb:	sete   al
  424cce:	add    rax,QWORD PTR [rbx+0x28]
  424cd2:	xor    esi,esi
  424cd4:	lea    rdx,[rax+0x1]
  424cd8:	mov    QWORD PTR [rbx+0x28],rdx
  424cdc:	mov    BYTE PTR [rax],0x3a
  424cdf:	mov    rax,QWORD PTR [rbx+0x28]
  424ce3:	mov    BYTE PTR [rax],0x20
  424ce6:	cmp    BYTE PTR [rbx+0x31],0x0
  424cea:	setne  sil
  424cee:	add    rsi,QWORD PTR [rbx+0x28]
  424cf2:	cmp    BYTE PTR [rbx+0x33],0x0
  424cf6:	mov    QWORD PTR [rbx+0x28],rsi
  424cfa:	jne    424d38 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xf8>
  424cfc:	add    rsp,0x8
  424d00:	movzx  esi,r12w
  424d04:	mov    rdi,rbx
  424d07:	mov    rax,r13
  424d0a:	pop    rbx
  424d0b:	pop    rbp
  424d0c:	pop    r12
  424d0e:	pop    r13
  424d10:	pop    r14
  424d12:	pop    r15
  424d14:	jmp    rax
  424d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d20:	xor    esi,esi
  424d22:	mov    rdi,rbx
  424d25:	call   QWORD PTR [rbx+0x48]
  424d28:	mov    rsi,QWORD PTR [rbx+0x28]
  424d2c:	jmp    424c8c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>
  424d31:	nop    DWORD PTR [rax+0x0]
  424d38:	movzx  edi,r12w
  424d3c:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  424d41:	cdqe   
  424d43:	add    QWORD PTR [rbx+0x28],rax
  424d47:	add    rsp,0x8
  424d4b:	pop    rbx
  424d4c:	pop    rbp
  424d4d:	pop    r12
  424d4f:	pop    r13
  424d51:	pop    r14
  424d53:	pop    r15
  424d55:	ret    
  424d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d60:	call   4050e0 <memcpy@plt>
  424d65:	add    rbp,QWORD PTR [rbx+0x28]
  424d69:	mov    QWORD PTR [rbx+0x28],rbp
  424d6d:	jmp    424cc1 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x81>
  424d72:	nop    WORD PTR [rax+rax*1+0x0]
  424d78:	mov    rax,QWORD PTR [rbx+0x28]
  424d7c:	lea    rdx,[rax+0x1]
  424d80:	mov    QWORD PTR [rbx+0x28],rdx
  424d84:	mov    BYTE PTR [rax],0xa
  424d87:	movzx  esi,BYTE PTR [rbx+0x31]
  424d8b:	mov    rdi,QWORD PTR [rbx+0x28]
  424d8f:	imul   esi,DWORD PTR [rbx+0x38]
  424d93:	movsxd r14,esi
  424d96:	lea    rax,[rdi+r14*1]
  424d9a:	cmp    QWORD PTR [rbx+0x20],rax
  424d9e:	jb     424dc0 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x180>
  424da0:	mov    esi,0x20
  424da5:	mov    rdx,r14
  424da8:	call   405090 <memset@plt>
  424dad:	mov    rsi,r14
  424db0:	add    rsi,QWORD PTR [rbx+0x28]
  424db4:	mov    QWORD PTR [rbx+0x28],rsi
  424db8:	jmp    424c8c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>
  424dbd:	nop    DWORD PTR [rax]
  424dc0:	mov    rsi,r14
  424dc3:	mov    rdi,rbx
  424dc6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424dcb:	mov    rsi,QWORD PTR [rbx+0x28]
  424dcf:	jmp    424c8c <flatcc_json_printer_uint16_enum_struct_field@@Base+0x4c>
  424dd4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424ddf:	nop

0000000000424de0 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
  424de0:	push   r15
  424de2:	push   r14
  424de4:	mov    r15,r8
  424de7:	push   r13
  424de9:	push   r12
  424deb:	push   rbp
  424dec:	push   rbx
  424ded:	mov    rbx,rdi
  424df0:	sub    rsp,0x8
  424df4:	test   esi,esi
  424df6:	mov    r12d,DWORD PTR [rdx+rcx*1]
  424dfa:	mov    r13,QWORD PTR [rsp+0x40]
  424dff:	je     424e10 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x30>
  424e01:	mov    rax,QWORD PTR [rdi+0x28]
  424e05:	lea    rdx,[rax+0x1]
  424e09:	mov    QWORD PTR [rdi+0x28],rdx
  424e0d:	mov    BYTE PTR [rax],0x2c
  424e10:	cmp    BYTE PTR [rbx+0x31],0x0
  424e14:	movsxd rbp,r9d
  424e17:	jne    424f08 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x128>
  424e1d:	mov    rsi,QWORD PTR [rbx+0x28]
  424e21:	cmp    rsi,QWORD PTR [rbx+0x20]
  424e25:	jae    424eb8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xd8>
  424e2b:	mov    BYTE PTR [rsi],0x22
  424e2e:	xor    edi,edi
  424e30:	cmp    BYTE PTR [rbx+0x32],0x0
  424e34:	mov    rdx,rbp
  424e37:	mov    rsi,r15
  424e3a:	sete   dil
  424e3e:	add    rdi,QWORD PTR [rbx+0x28]
  424e42:	lea    rax,[rdi+rbp*1]
  424e46:	cmp    QWORD PTR [rbx+0x20],rax
  424e4a:	mov    QWORD PTR [rbx+0x28],rdi
  424e4e:	ja     424ef0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x110>
  424e54:	mov    rdi,rbx
  424e57:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424e5c:	mov    rbp,QWORD PTR [rbx+0x28]
  424e60:	mov    BYTE PTR [rbp+0x0],0x22
  424e64:	xor    eax,eax
  424e66:	cmp    BYTE PTR [rbx+0x32],0x0
  424e6a:	sete   al
  424e6d:	add    rax,QWORD PTR [rbx+0x28]
  424e71:	xor    esi,esi
  424e73:	lea    rdx,[rax+0x1]
  424e77:	mov    QWORD PTR [rbx+0x28],rdx
  424e7b:	mov    BYTE PTR [rax],0x3a
  424e7e:	mov    rax,QWORD PTR [rbx+0x28]
  424e82:	mov    BYTE PTR [rax],0x20
  424e85:	cmp    BYTE PTR [rbx+0x31],0x0
  424e89:	setne  sil
  424e8d:	add    rsi,QWORD PTR [rbx+0x28]
  424e91:	cmp    BYTE PTR [rbx+0x33],0x0
  424e95:	mov    QWORD PTR [rbx+0x28],rsi
  424e99:	jne    424ed0 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xf0>
  424e9b:	add    rsp,0x8
  424e9f:	mov    esi,r12d
  424ea2:	mov    rdi,rbx
  424ea5:	mov    rax,r13
  424ea8:	pop    rbx
  424ea9:	pop    rbp
  424eaa:	pop    r12
  424eac:	pop    r13
  424eae:	pop    r14
  424eb0:	pop    r15
  424eb2:	jmp    rax
  424eb4:	nop    DWORD PTR [rax+0x0]
  424eb8:	xor    esi,esi
  424eba:	mov    rdi,rbx
  424ebd:	call   QWORD PTR [rbx+0x48]
  424ec0:	mov    rsi,QWORD PTR [rbx+0x28]
  424ec4:	jmp    424e2b <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4b>
  424ec9:	nop    DWORD PTR [rax+0x0]
  424ed0:	mov    edi,r12d
  424ed3:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  424ed8:	cdqe   
  424eda:	add    QWORD PTR [rbx+0x28],rax
  424ede:	add    rsp,0x8
  424ee2:	pop    rbx
  424ee3:	pop    rbp
  424ee4:	pop    r12
  424ee6:	pop    r13
  424ee8:	pop    r14
  424eea:	pop    r15
  424eec:	ret    
  424eed:	nop    DWORD PTR [rax]
  424ef0:	call   4050e0 <memcpy@plt>
  424ef5:	add    rbp,QWORD PTR [rbx+0x28]
  424ef9:	mov    QWORD PTR [rbx+0x28],rbp
  424efd:	jmp    424e60 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x80>
  424f02:	nop    WORD PTR [rax+rax*1+0x0]
  424f08:	mov    rax,QWORD PTR [rbx+0x28]
  424f0c:	lea    rdx,[rax+0x1]
  424f10:	mov    QWORD PTR [rbx+0x28],rdx
  424f14:	mov    BYTE PTR [rax],0xa
  424f17:	movzx  esi,BYTE PTR [rbx+0x31]
  424f1b:	mov    rdi,QWORD PTR [rbx+0x28]
  424f1f:	imul   esi,DWORD PTR [rbx+0x38]
  424f23:	movsxd r14,esi
  424f26:	lea    rax,[rdi+r14*1]
  424f2a:	cmp    QWORD PTR [rbx+0x20],rax
  424f2e:	jb     424f50 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x170>
  424f30:	mov    esi,0x20
  424f35:	mov    rdx,r14
  424f38:	call   405090 <memset@plt>
  424f3d:	mov    rsi,r14
  424f40:	add    rsi,QWORD PTR [rbx+0x28]
  424f44:	mov    QWORD PTR [rbx+0x28],rsi
  424f48:	jmp    424e2b <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4b>
  424f4d:	nop    DWORD PTR [rax]
  424f50:	mov    rsi,r14
  424f53:	mov    rdi,rbx
  424f56:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  424f5b:	mov    rsi,QWORD PTR [rbx+0x28]
  424f5f:	jmp    424e2b <flatcc_json_printer_uint32_enum_struct_field@@Base+0x4b>
  424f64:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424f6f:	nop

0000000000424f70 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
  424f70:	push   r15
  424f72:	push   r14
  424f74:	mov    r15,r8
  424f77:	push   r13
  424f79:	push   r12
  424f7b:	push   rbp
  424f7c:	push   rbx
  424f7d:	mov    rbx,rdi
  424f80:	sub    rsp,0x8
  424f84:	test   esi,esi
  424f86:	mov    r12,QWORD PTR [rdx+rcx*1]
  424f8a:	mov    r13,QWORD PTR [rsp+0x40]
  424f8f:	je     424fa0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x30>
  424f91:	mov    rax,QWORD PTR [rdi+0x28]
  424f95:	lea    rdx,[rax+0x1]
  424f99:	mov    QWORD PTR [rdi+0x28],rdx
  424f9d:	mov    BYTE PTR [rax],0x2c
  424fa0:	cmp    BYTE PTR [rbx+0x31],0x0
  424fa4:	movsxd rbp,r9d
  424fa7:	jne    425098 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x128>
  424fad:	mov    rsi,QWORD PTR [rbx+0x28]
  424fb1:	cmp    rsi,QWORD PTR [rbx+0x20]
  424fb5:	jae    425048 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xd8>
  424fbb:	mov    BYTE PTR [rsi],0x22
  424fbe:	xor    edi,edi
  424fc0:	cmp    BYTE PTR [rbx+0x32],0x0
  424fc4:	mov    rdx,rbp
  424fc7:	mov    rsi,r15
  424fca:	sete   dil
  424fce:	add    rdi,QWORD PTR [rbx+0x28]
  424fd2:	lea    rax,[rdi+rbp*1]
  424fd6:	cmp    QWORD PTR [rbx+0x20],rax
  424fda:	mov    QWORD PTR [rbx+0x28],rdi
  424fde:	ja     425080 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x110>
  424fe4:	mov    rdi,rbx
  424fe7:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  424fec:	mov    rbp,QWORD PTR [rbx+0x28]
  424ff0:	mov    BYTE PTR [rbp+0x0],0x22
  424ff4:	xor    eax,eax
  424ff6:	cmp    BYTE PTR [rbx+0x32],0x0
  424ffa:	sete   al
  424ffd:	add    rax,QWORD PTR [rbx+0x28]
  425001:	xor    esi,esi
  425003:	lea    rdx,[rax+0x1]
  425007:	mov    QWORD PTR [rbx+0x28],rdx
  42500b:	mov    BYTE PTR [rax],0x3a
  42500e:	mov    rax,QWORD PTR [rbx+0x28]
  425012:	mov    BYTE PTR [rax],0x20
  425015:	cmp    BYTE PTR [rbx+0x31],0x0
  425019:	setne  sil
  42501d:	add    rsi,QWORD PTR [rbx+0x28]
  425021:	cmp    BYTE PTR [rbx+0x33],0x0
  425025:	mov    QWORD PTR [rbx+0x28],rsi
  425029:	jne    425060 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xf0>
  42502b:	add    rsp,0x8
  42502f:	mov    rsi,r12
  425032:	mov    rdi,rbx
  425035:	mov    rax,r13
  425038:	pop    rbx
  425039:	pop    rbp
  42503a:	pop    r12
  42503c:	pop    r13
  42503e:	pop    r14
  425040:	pop    r15
  425042:	jmp    rax
  425044:	nop    DWORD PTR [rax+0x0]
  425048:	xor    esi,esi
  42504a:	mov    rdi,rbx
  42504d:	call   QWORD PTR [rbx+0x48]
  425050:	mov    rsi,QWORD PTR [rbx+0x28]
  425054:	jmp    424fbb <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4b>
  425059:	nop    DWORD PTR [rax+0x0]
  425060:	mov    rdi,r12
  425063:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  425068:	cdqe   
  42506a:	add    QWORD PTR [rbx+0x28],rax
  42506e:	add    rsp,0x8
  425072:	pop    rbx
  425073:	pop    rbp
  425074:	pop    r12
  425076:	pop    r13
  425078:	pop    r14
  42507a:	pop    r15
  42507c:	ret    
  42507d:	nop    DWORD PTR [rax]
  425080:	call   4050e0 <memcpy@plt>
  425085:	add    rbp,QWORD PTR [rbx+0x28]
  425089:	mov    QWORD PTR [rbx+0x28],rbp
  42508d:	jmp    424ff0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x80>
  425092:	nop    WORD PTR [rax+rax*1+0x0]
  425098:	mov    rax,QWORD PTR [rbx+0x28]
  42509c:	lea    rdx,[rax+0x1]
  4250a0:	mov    QWORD PTR [rbx+0x28],rdx
  4250a4:	mov    BYTE PTR [rax],0xa
  4250a7:	movzx  esi,BYTE PTR [rbx+0x31]
  4250ab:	mov    rdi,QWORD PTR [rbx+0x28]
  4250af:	imul   esi,DWORD PTR [rbx+0x38]
  4250b3:	movsxd r14,esi
  4250b6:	lea    rax,[rdi+r14*1]
  4250ba:	cmp    QWORD PTR [rbx+0x20],rax
  4250be:	jb     4250e0 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x170>
  4250c0:	mov    esi,0x20
  4250c5:	mov    rdx,r14
  4250c8:	call   405090 <memset@plt>
  4250cd:	mov    rsi,r14
  4250d0:	add    rsi,QWORD PTR [rbx+0x28]
  4250d4:	mov    QWORD PTR [rbx+0x28],rsi
  4250d8:	jmp    424fbb <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4b>
  4250dd:	nop    DWORD PTR [rax]
  4250e0:	mov    rsi,r14
  4250e3:	mov    rdi,rbx
  4250e6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4250eb:	mov    rsi,QWORD PTR [rbx+0x28]
  4250ef:	jmp    424fbb <flatcc_json_printer_uint64_enum_struct_field@@Base+0x4b>
  4250f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4250ff:	nop

0000000000425100 <flatcc_json_printer_int8_enum_struct_field@@Base>:
  425100:	push   r15
  425102:	push   r14
  425104:	mov    r15,r8
  425107:	push   r13
  425109:	push   r12
  42510b:	push   rbp
  42510c:	push   rbx
  42510d:	mov    rbx,rdi
  425110:	sub    rsp,0x8
  425114:	test   esi,esi
  425116:	movzx  r13d,BYTE PTR [rdx+rcx*1]
  42511b:	mov    r12,QWORD PTR [rsp+0x40]
  425120:	je     425131 <flatcc_json_printer_int8_enum_struct_field@@Base+0x31>
  425122:	mov    rax,QWORD PTR [rdi+0x28]
  425126:	lea    rdx,[rax+0x1]
  42512a:	mov    QWORD PTR [rdi+0x28],rdx
  42512e:	mov    BYTE PTR [rax],0x2c
  425131:	cmp    BYTE PTR [rbx+0x31],0x0
  425135:	movsxd rbp,r9d
  425138:	jne    425250 <flatcc_json_printer_int8_enum_struct_field@@Base+0x150>
  42513e:	mov    rsi,QWORD PTR [rbx+0x28]
  425142:	cmp    rsi,QWORD PTR [rbx+0x20]
  425146:	jae    4251f0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xf0>
  42514c:	mov    BYTE PTR [rsi],0x22
  42514f:	xor    edi,edi
  425151:	cmp    BYTE PTR [rbx+0x32],0x0
  425155:	mov    rdx,rbp
  425158:	mov    rsi,r15
  42515b:	sete   dil
  42515f:	add    rdi,QWORD PTR [rbx+0x28]
  425163:	lea    rax,[rdi+rbp*1]
  425167:	cmp    QWORD PTR [rbx+0x20],rax
  42516b:	mov    QWORD PTR [rbx+0x28],rdi
  42516f:	ja     425218 <flatcc_json_printer_int8_enum_struct_field@@Base+0x118>
  425175:	mov    rdi,rbx
  425178:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42517d:	mov    rbp,QWORD PTR [rbx+0x28]
  425181:	mov    BYTE PTR [rbp+0x0],0x22
  425185:	xor    eax,eax
  425187:	cmp    BYTE PTR [rbx+0x32],0x0
  42518b:	sete   al
  42518e:	add    rax,QWORD PTR [rbx+0x28]
  425192:	xor    esi,esi
  425194:	lea    rdx,[rax+0x1]
  425198:	mov    QWORD PTR [rbx+0x28],rdx
  42519c:	mov    BYTE PTR [rax],0x3a
  42519f:	mov    rax,QWORD PTR [rbx+0x28]
  4251a3:	mov    BYTE PTR [rax],0x20
  4251a6:	cmp    BYTE PTR [rbx+0x31],0x0
  4251aa:	setne  sil
  4251ae:	add    rsi,QWORD PTR [rbx+0x28]
  4251b2:	cmp    BYTE PTR [rbx+0x33],0x0
  4251b6:	mov    QWORD PTR [rbx+0x28],rsi
  4251ba:	je     425230 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
  4251bc:	movsx  r8d,r13b
  4251c0:	shr    r8d,0x1f
  4251c4:	test   r13b,r13b
  4251c7:	js     425208 <flatcc_json_printer_int8_enum_struct_field@@Base+0x108>
  4251c9:	movzx  edi,r13b
  4251cd:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  4251d2:	add    r8d,eax
  4251d5:	movsxd r8,r8d
  4251d8:	add    QWORD PTR [rbx+0x28],r8
  4251dc:	add    rsp,0x8
  4251e0:	pop    rbx
  4251e1:	pop    rbp
  4251e2:	pop    r12
  4251e4:	pop    r13
  4251e6:	pop    r14
  4251e8:	pop    r15
  4251ea:	ret    
  4251eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4251f0:	xor    esi,esi
  4251f2:	mov    rdi,rbx
  4251f5:	call   QWORD PTR [rbx+0x48]
  4251f8:	mov    rsi,QWORD PTR [rbx+0x28]
  4251fc:	jmp    42514c <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
  425201:	nop    DWORD PTR [rax+0x0]
  425208:	mov    BYTE PTR [rsi],0x2d
  42520b:	neg    r13d
  42520e:	add    rsi,0x1
  425212:	jmp    4251c9 <flatcc_json_printer_int8_enum_struct_field@@Base+0xc9>
  425214:	nop    DWORD PTR [rax+0x0]
  425218:	call   4050e0 <memcpy@plt>
  42521d:	add    rbp,QWORD PTR [rbx+0x28]
  425221:	mov    QWORD PTR [rbx+0x28],rbp
  425225:	jmp    425181 <flatcc_json_printer_int8_enum_struct_field@@Base+0x81>
  42522a:	nop    WORD PTR [rax+rax*1+0x0]
  425230:	add    rsp,0x8
  425234:	movsx  esi,r13b
  425238:	mov    rdi,rbx
  42523b:	mov    rax,r12
  42523e:	pop    rbx
  42523f:	pop    rbp
  425240:	pop    r12
  425242:	pop    r13
  425244:	pop    r14
  425246:	pop    r15
  425248:	jmp    rax
  42524a:	nop    WORD PTR [rax+rax*1+0x0]
  425250:	mov    rax,QWORD PTR [rbx+0x28]
  425254:	lea    rdx,[rax+0x1]
  425258:	mov    QWORD PTR [rbx+0x28],rdx
  42525c:	mov    BYTE PTR [rax],0xa
  42525f:	movzx  esi,BYTE PTR [rbx+0x31]
  425263:	mov    rdi,QWORD PTR [rbx+0x28]
  425267:	imul   esi,DWORD PTR [rbx+0x38]
  42526b:	movsxd r14,esi
  42526e:	lea    rax,[rdi+r14*1]
  425272:	cmp    QWORD PTR [rbx+0x20],rax
  425276:	jb     425298 <flatcc_json_printer_int8_enum_struct_field@@Base+0x198>
  425278:	mov    esi,0x20
  42527d:	mov    rdx,r14
  425280:	call   405090 <memset@plt>
  425285:	mov    rsi,r14
  425288:	add    rsi,QWORD PTR [rbx+0x28]
  42528c:	mov    QWORD PTR [rbx+0x28],rsi
  425290:	jmp    42514c <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
  425295:	nop    DWORD PTR [rax]
  425298:	mov    rsi,r14
  42529b:	mov    rdi,rbx
  42529e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4252a3:	mov    rsi,QWORD PTR [rbx+0x28]
  4252a7:	jmp    42514c <flatcc_json_printer_int8_enum_struct_field@@Base+0x4c>
  4252ac:	nop    DWORD PTR [rax+0x0]

00000000004252b0 <flatcc_json_printer_int16_enum_struct_field@@Base>:
  4252b0:	push   r15
  4252b2:	push   r14
  4252b4:	mov    r15,r8
  4252b7:	push   r13
  4252b9:	push   r12
  4252bb:	push   rbp
  4252bc:	push   rbx
  4252bd:	mov    rbx,rdi
  4252c0:	sub    rsp,0x8
  4252c4:	test   esi,esi
  4252c6:	movzx  r13d,WORD PTR [rdx+rcx*1]
  4252cb:	mov    r12,QWORD PTR [rsp+0x40]
  4252d0:	je     4252e1 <flatcc_json_printer_int16_enum_struct_field@@Base+0x31>
  4252d2:	mov    rax,QWORD PTR [rdi+0x28]
  4252d6:	lea    rdx,[rax+0x1]
  4252da:	mov    QWORD PTR [rdi+0x28],rdx
  4252de:	mov    BYTE PTR [rax],0x2c
  4252e1:	cmp    BYTE PTR [rbx+0x31],0x0
  4252e5:	movsxd rbp,r9d
  4252e8:	jne    425400 <flatcc_json_printer_int16_enum_struct_field@@Base+0x150>
  4252ee:	mov    rsi,QWORD PTR [rbx+0x28]
  4252f2:	cmp    rsi,QWORD PTR [rbx+0x20]
  4252f6:	jae    4253a0 <flatcc_json_printer_int16_enum_struct_field@@Base+0xf0>
  4252fc:	mov    BYTE PTR [rsi],0x22
  4252ff:	xor    edi,edi
  425301:	cmp    BYTE PTR [rbx+0x32],0x0
  425305:	mov    rdx,rbp
  425308:	mov    rsi,r15
  42530b:	sete   dil
  42530f:	add    rdi,QWORD PTR [rbx+0x28]
  425313:	lea    rax,[rdi+rbp*1]
  425317:	cmp    QWORD PTR [rbx+0x20],rax
  42531b:	mov    QWORD PTR [rbx+0x28],rdi
  42531f:	ja     4253c8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x118>
  425325:	mov    rdi,rbx
  425328:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42532d:	mov    rbp,QWORD PTR [rbx+0x28]
  425331:	mov    BYTE PTR [rbp+0x0],0x22
  425335:	xor    eax,eax
  425337:	cmp    BYTE PTR [rbx+0x32],0x0
  42533b:	sete   al
  42533e:	add    rax,QWORD PTR [rbx+0x28]
  425342:	xor    esi,esi
  425344:	lea    rdx,[rax+0x1]
  425348:	mov    QWORD PTR [rbx+0x28],rdx
  42534c:	mov    BYTE PTR [rax],0x3a
  42534f:	mov    rax,QWORD PTR [rbx+0x28]
  425353:	mov    BYTE PTR [rax],0x20
  425356:	cmp    BYTE PTR [rbx+0x31],0x0
  42535a:	setne  sil
  42535e:	add    rsi,QWORD PTR [rbx+0x28]
  425362:	cmp    BYTE PTR [rbx+0x33],0x0
  425366:	mov    QWORD PTR [rbx+0x28],rsi
  42536a:	je     4253e0 <flatcc_json_printer_int16_enum_struct_field@@Base+0x130>
  42536c:	movsx  r11d,r13w
  425370:	shr    r11d,0x1f
  425374:	test   r13w,r13w
  425378:	js     4253b8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x108>
  42537a:	movzx  edi,r13w
  42537e:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  425383:	add    r11d,eax
  425386:	movsxd r11,r11d
  425389:	add    QWORD PTR [rbx+0x28],r11
  42538d:	add    rsp,0x8
  425391:	pop    rbx
  425392:	pop    rbp
  425393:	pop    r12
  425395:	pop    r13
  425397:	pop    r14
  425399:	pop    r15
  42539b:	ret    
  42539c:	nop    DWORD PTR [rax+0x0]
  4253a0:	xor    esi,esi
  4253a2:	mov    rdi,rbx
  4253a5:	call   QWORD PTR [rbx+0x48]
  4253a8:	mov    rsi,QWORD PTR [rbx+0x28]
  4253ac:	jmp    4252fc <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>
  4253b1:	nop    DWORD PTR [rax+0x0]
  4253b8:	mov    BYTE PTR [rsi],0x2d
  4253bb:	neg    r13d
  4253be:	add    rsi,0x1
  4253c2:	jmp    42537a <flatcc_json_printer_int16_enum_struct_field@@Base+0xca>
  4253c4:	nop    DWORD PTR [rax+0x0]
  4253c8:	call   4050e0 <memcpy@plt>
  4253cd:	add    rbp,QWORD PTR [rbx+0x28]
  4253d1:	mov    QWORD PTR [rbx+0x28],rbp
  4253d5:	jmp    425331 <flatcc_json_printer_int16_enum_struct_field@@Base+0x81>
  4253da:	nop    WORD PTR [rax+rax*1+0x0]
  4253e0:	add    rsp,0x8
  4253e4:	movsx  esi,r13w
  4253e8:	mov    rdi,rbx
  4253eb:	mov    rax,r12
  4253ee:	pop    rbx
  4253ef:	pop    rbp
  4253f0:	pop    r12
  4253f2:	pop    r13
  4253f4:	pop    r14
  4253f6:	pop    r15
  4253f8:	jmp    rax
  4253fa:	nop    WORD PTR [rax+rax*1+0x0]
  425400:	mov    rax,QWORD PTR [rbx+0x28]
  425404:	lea    rdx,[rax+0x1]
  425408:	mov    QWORD PTR [rbx+0x28],rdx
  42540c:	mov    BYTE PTR [rax],0xa
  42540f:	movzx  esi,BYTE PTR [rbx+0x31]
  425413:	mov    rdi,QWORD PTR [rbx+0x28]
  425417:	imul   esi,DWORD PTR [rbx+0x38]
  42541b:	movsxd r14,esi
  42541e:	lea    rax,[rdi+r14*1]
  425422:	cmp    QWORD PTR [rbx+0x20],rax
  425426:	jb     425448 <flatcc_json_printer_int16_enum_struct_field@@Base+0x198>
  425428:	mov    esi,0x20
  42542d:	mov    rdx,r14
  425430:	call   405090 <memset@plt>
  425435:	mov    rsi,r14
  425438:	add    rsi,QWORD PTR [rbx+0x28]
  42543c:	mov    QWORD PTR [rbx+0x28],rsi
  425440:	jmp    4252fc <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>
  425445:	nop    DWORD PTR [rax]
  425448:	mov    rsi,r14
  42544b:	mov    rdi,rbx
  42544e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425453:	mov    rsi,QWORD PTR [rbx+0x28]
  425457:	jmp    4252fc <flatcc_json_printer_int16_enum_struct_field@@Base+0x4c>
  42545c:	nop    DWORD PTR [rax+0x0]

0000000000425460 <flatcc_json_printer_int32_enum_struct_field@@Base>:
  425460:	push   r15
  425462:	push   r14
  425464:	mov    r15,r8
  425467:	push   r13
  425469:	push   r12
  42546b:	push   rbp
  42546c:	push   rbx
  42546d:	mov    rbx,rdi
  425470:	sub    rsp,0x8
  425474:	test   esi,esi
  425476:	mov    r13d,DWORD PTR [rdx+rcx*1]
  42547a:	mov    r12,QWORD PTR [rsp+0x40]
  42547f:	je     425490 <flatcc_json_printer_int32_enum_struct_field@@Base+0x30>
  425481:	mov    rax,QWORD PTR [rdi+0x28]
  425485:	lea    rdx,[rax+0x1]
  425489:	mov    QWORD PTR [rdi+0x28],rdx
  42548d:	mov    BYTE PTR [rax],0x2c
  425490:	cmp    BYTE PTR [rbx+0x31],0x0
  425494:	movsxd rbp,r9d
  425497:	jne    4255b0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x150>
  42549d:	mov    rsi,QWORD PTR [rbx+0x28]
  4254a1:	cmp    rsi,QWORD PTR [rbx+0x20]
  4254a5:	jae    425550 <flatcc_json_printer_int32_enum_struct_field@@Base+0xf0>
  4254ab:	mov    BYTE PTR [rsi],0x22
  4254ae:	xor    edi,edi
  4254b0:	cmp    BYTE PTR [rbx+0x32],0x0
  4254b4:	mov    rdx,rbp
  4254b7:	mov    rsi,r15
  4254ba:	sete   dil
  4254be:	add    rdi,QWORD PTR [rbx+0x28]
  4254c2:	lea    rax,[rdi+rbp*1]
  4254c6:	cmp    QWORD PTR [rbx+0x20],rax
  4254ca:	mov    QWORD PTR [rbx+0x28],rdi
  4254ce:	ja     425578 <flatcc_json_printer_int32_enum_struct_field@@Base+0x118>
  4254d4:	mov    rdi,rbx
  4254d7:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  4254dc:	mov    rbp,QWORD PTR [rbx+0x28]
  4254e0:	mov    BYTE PTR [rbp+0x0],0x22
  4254e4:	xor    eax,eax
  4254e6:	cmp    BYTE PTR [rbx+0x32],0x0
  4254ea:	sete   al
  4254ed:	add    rax,QWORD PTR [rbx+0x28]
  4254f1:	xor    esi,esi
  4254f3:	lea    rdx,[rax+0x1]
  4254f7:	mov    QWORD PTR [rbx+0x28],rdx
  4254fb:	mov    BYTE PTR [rax],0x3a
  4254fe:	mov    rax,QWORD PTR [rbx+0x28]
  425502:	mov    BYTE PTR [rax],0x20
  425505:	cmp    BYTE PTR [rbx+0x31],0x0
  425509:	setne  sil
  42550d:	add    rsi,QWORD PTR [rbx+0x28]
  425511:	cmp    BYTE PTR [rbx+0x33],0x0
  425515:	mov    QWORD PTR [rbx+0x28],rsi
  425519:	je     425590 <flatcc_json_printer_int32_enum_struct_field@@Base+0x130>
  42551b:	mov    r10d,r13d
  42551e:	shr    r10d,0x1f
  425522:	test   r13d,r13d
  425525:	js     425568 <flatcc_json_printer_int32_enum_struct_field@@Base+0x108>
  425527:	mov    edi,r13d
  42552a:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  42552f:	add    r10d,eax
  425532:	movsxd r10,r10d
  425535:	add    QWORD PTR [rbx+0x28],r10
  425539:	add    rsp,0x8
  42553d:	pop    rbx
  42553e:	pop    rbp
  42553f:	pop    r12
  425541:	pop    r13
  425543:	pop    r14
  425545:	pop    r15
  425547:	ret    
  425548:	nop    DWORD PTR [rax+rax*1+0x0]
  425550:	xor    esi,esi
  425552:	mov    rdi,rbx
  425555:	call   QWORD PTR [rbx+0x48]
  425558:	mov    rsi,QWORD PTR [rbx+0x28]
  42555c:	jmp    4254ab <flatcc_json_printer_int32_enum_struct_field@@Base+0x4b>
  425561:	nop    DWORD PTR [rax+0x0]
  425568:	mov    BYTE PTR [rsi],0x2d
  42556b:	neg    r13d
  42556e:	add    rsi,0x1
  425572:	jmp    425527 <flatcc_json_printer_int32_enum_struct_field@@Base+0xc7>
  425574:	nop    DWORD PTR [rax+0x0]
  425578:	call   4050e0 <memcpy@plt>
  42557d:	add    rbp,QWORD PTR [rbx+0x28]
  425581:	mov    QWORD PTR [rbx+0x28],rbp
  425585:	jmp    4254e0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
  42558a:	nop    WORD PTR [rax+rax*1+0x0]
  425590:	add    rsp,0x8
  425594:	mov    esi,r13d
  425597:	mov    rdi,rbx
  42559a:	mov    rax,r12
  42559d:	pop    rbx
  42559e:	pop    rbp
  42559f:	pop    r12
  4255a1:	pop    r13
  4255a3:	pop    r14
  4255a5:	pop    r15
  4255a7:	jmp    rax
  4255a9:	nop    DWORD PTR [rax+0x0]
  4255b0:	mov    rax,QWORD PTR [rbx+0x28]
  4255b4:	lea    rdx,[rax+0x1]
  4255b8:	mov    QWORD PTR [rbx+0x28],rdx
  4255bc:	mov    BYTE PTR [rax],0xa
  4255bf:	movzx  esi,BYTE PTR [rbx+0x31]
  4255c3:	mov    rdi,QWORD PTR [rbx+0x28]
  4255c7:	imul   esi,DWORD PTR [rbx+0x38]
  4255cb:	movsxd r14,esi
  4255ce:	lea    rax,[rdi+r14*1]
  4255d2:	cmp    QWORD PTR [rbx+0x20],rax
  4255d6:	jb     4255f8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x198>
  4255d8:	mov    esi,0x20
  4255dd:	mov    rdx,r14
  4255e0:	call   405090 <memset@plt>
  4255e5:	mov    rsi,r14
  4255e8:	add    rsi,QWORD PTR [rbx+0x28]
  4255ec:	mov    QWORD PTR [rbx+0x28],rsi
  4255f0:	jmp    4254ab <flatcc_json_printer_int32_enum_struct_field@@Base+0x4b>
  4255f5:	nop    DWORD PTR [rax]
  4255f8:	mov    rsi,r14
  4255fb:	mov    rdi,rbx
  4255fe:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425603:	mov    rsi,QWORD PTR [rbx+0x28]
  425607:	jmp    4254ab <flatcc_json_printer_int32_enum_struct_field@@Base+0x4b>
  42560c:	nop    DWORD PTR [rax+0x0]

0000000000425610 <flatcc_json_printer_int64_enum_struct_field@@Base>:
  425610:	push   r15
  425612:	push   r14
  425614:	mov    r15,r8
  425617:	push   r13
  425619:	push   r12
  42561b:	push   rbp
  42561c:	push   rbx
  42561d:	mov    rbx,rdi
  425620:	sub    rsp,0x8
  425624:	test   esi,esi
  425626:	mov    r13,QWORD PTR [rdx+rcx*1]
  42562a:	mov    r12,QWORD PTR [rsp+0x40]
  42562f:	je     425640 <flatcc_json_printer_int64_enum_struct_field@@Base+0x30>
  425631:	mov    rax,QWORD PTR [rdi+0x28]
  425635:	lea    rdx,[rax+0x1]
  425639:	mov    QWORD PTR [rdi+0x28],rdx
  42563d:	mov    BYTE PTR [rax],0x2c
  425640:	cmp    BYTE PTR [rbx+0x31],0x0
  425644:	movsxd rbp,r9d
  425647:	jne    425760 <flatcc_json_printer_int64_enum_struct_field@@Base+0x150>
  42564d:	mov    rsi,QWORD PTR [rbx+0x28]
  425651:	cmp    rsi,QWORD PTR [rbx+0x20]
  425655:	jae    425700 <flatcc_json_printer_int64_enum_struct_field@@Base+0xf0>
  42565b:	mov    BYTE PTR [rsi],0x22
  42565e:	xor    edi,edi
  425660:	cmp    BYTE PTR [rbx+0x32],0x0
  425664:	mov    rdx,rbp
  425667:	mov    rsi,r15
  42566a:	sete   dil
  42566e:	add    rdi,QWORD PTR [rbx+0x28]
  425672:	lea    rax,[rdi+rbp*1]
  425676:	cmp    QWORD PTR [rbx+0x20],rax
  42567a:	mov    QWORD PTR [rbx+0x28],rdi
  42567e:	ja     425728 <flatcc_json_printer_int64_enum_struct_field@@Base+0x118>
  425684:	mov    rdi,rbx
  425687:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42568c:	mov    rbp,QWORD PTR [rbx+0x28]
  425690:	mov    BYTE PTR [rbp+0x0],0x22
  425694:	xor    eax,eax
  425696:	cmp    BYTE PTR [rbx+0x32],0x0
  42569a:	sete   al
  42569d:	add    rax,QWORD PTR [rbx+0x28]
  4256a1:	xor    esi,esi
  4256a3:	lea    rdx,[rax+0x1]
  4256a7:	mov    QWORD PTR [rbx+0x28],rdx
  4256ab:	mov    BYTE PTR [rax],0x3a
  4256ae:	mov    rax,QWORD PTR [rbx+0x28]
  4256b2:	mov    BYTE PTR [rax],0x20
  4256b5:	cmp    BYTE PTR [rbx+0x31],0x0
  4256b9:	setne  sil
  4256bd:	add    rsi,QWORD PTR [rbx+0x28]
  4256c1:	cmp    BYTE PTR [rbx+0x33],0x0
  4256c5:	mov    QWORD PTR [rbx+0x28],rsi
  4256c9:	je     425740 <flatcc_json_printer_int64_enum_struct_field@@Base+0x130>
  4256cb:	mov    rbp,r13
  4256ce:	shr    rbp,0x3f
  4256d2:	test   r13,r13
  4256d5:	js     425718 <flatcc_json_printer_int64_enum_struct_field@@Base+0x108>
  4256d7:	mov    rdi,r13
  4256da:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  4256df:	add    eax,ebp
  4256e1:	cdqe   
  4256e3:	add    QWORD PTR [rbx+0x28],rax
  4256e7:	add    rsp,0x8
  4256eb:	pop    rbx
  4256ec:	pop    rbp
  4256ed:	pop    r12
  4256ef:	pop    r13
  4256f1:	pop    r14
  4256f3:	pop    r15
  4256f5:	ret    
  4256f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425700:	xor    esi,esi
  425702:	mov    rdi,rbx
  425705:	call   QWORD PTR [rbx+0x48]
  425708:	mov    rsi,QWORD PTR [rbx+0x28]
  42570c:	jmp    42565b <flatcc_json_printer_int64_enum_struct_field@@Base+0x4b>
  425711:	nop    DWORD PTR [rax+0x0]
  425718:	mov    BYTE PTR [rsi],0x2d
  42571b:	neg    r13
  42571e:	add    rsi,0x1
  425722:	jmp    4256d7 <flatcc_json_printer_int64_enum_struct_field@@Base+0xc7>
  425724:	nop    DWORD PTR [rax+0x0]
  425728:	call   4050e0 <memcpy@plt>
  42572d:	add    rbp,QWORD PTR [rbx+0x28]
  425731:	mov    QWORD PTR [rbx+0x28],rbp
  425735:	jmp    425690 <flatcc_json_printer_int64_enum_struct_field@@Base+0x80>
  42573a:	nop    WORD PTR [rax+rax*1+0x0]
  425740:	add    rsp,0x8
  425744:	mov    rsi,r13
  425747:	mov    rdi,rbx
  42574a:	mov    rax,r12
  42574d:	pop    rbx
  42574e:	pop    rbp
  42574f:	pop    r12
  425751:	pop    r13
  425753:	pop    r14
  425755:	pop    r15
  425757:	jmp    rax
  425759:	nop    DWORD PTR [rax+0x0]
  425760:	mov    rax,QWORD PTR [rbx+0x28]
  425764:	lea    rdx,[rax+0x1]
  425768:	mov    QWORD PTR [rbx+0x28],rdx
  42576c:	mov    BYTE PTR [rax],0xa
  42576f:	movzx  esi,BYTE PTR [rbx+0x31]
  425773:	mov    rdi,QWORD PTR [rbx+0x28]
  425777:	imul   esi,DWORD PTR [rbx+0x38]
  42577b:	movsxd r14,esi
  42577e:	lea    rax,[rdi+r14*1]
  425782:	cmp    QWORD PTR [rbx+0x20],rax
  425786:	jb     4257a8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x198>
  425788:	mov    esi,0x20
  42578d:	mov    rdx,r14
  425790:	call   405090 <memset@plt>
  425795:	mov    rsi,r14
  425798:	add    rsi,QWORD PTR [rbx+0x28]
  42579c:	mov    QWORD PTR [rbx+0x28],rsi
  4257a0:	jmp    42565b <flatcc_json_printer_int64_enum_struct_field@@Base+0x4b>
  4257a5:	nop    DWORD PTR [rax]
  4257a8:	mov    rsi,r14
  4257ab:	mov    rdi,rbx
  4257ae:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4257b3:	mov    rsi,QWORD PTR [rbx+0x28]
  4257b7:	jmp    42565b <flatcc_json_printer_int64_enum_struct_field@@Base+0x4b>
  4257bc:	nop    DWORD PTR [rax+0x0]

00000000004257c0 <flatcc_json_printer_bool_enum_struct_field@@Base>:
  4257c0:	push   r15
  4257c2:	push   r14
  4257c4:	mov    r15,r8
  4257c7:	push   r13
  4257c9:	push   r12
  4257cb:	push   rbp
  4257cc:	push   rbx
  4257cd:	mov    rbx,rdi
  4257d0:	sub    rsp,0x8
  4257d4:	test   esi,esi
  4257d6:	movzx  r12d,BYTE PTR [rdx+rcx*1]
  4257db:	mov    r13,QWORD PTR [rsp+0x40]
  4257e0:	je     4257f1 <flatcc_json_printer_bool_enum_struct_field@@Base+0x31>
  4257e2:	mov    rax,QWORD PTR [rdi+0x28]
  4257e6:	lea    rdx,[rax+0x1]
  4257ea:	mov    QWORD PTR [rdi+0x28],rdx
  4257ee:	mov    BYTE PTR [rax],0x2c
  4257f1:	cmp    BYTE PTR [rbx+0x31],0x0
  4257f5:	movsxd rbp,r9d
  4257f8:	jne    4258f8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x138>
  4257fe:	mov    rsi,QWORD PTR [rbx+0x28]
  425802:	cmp    rsi,QWORD PTR [rbx+0x20]
  425806:	jae    4258a0 <flatcc_json_printer_bool_enum_struct_field@@Base+0xe0>
  42580c:	mov    BYTE PTR [rsi],0x22
  42580f:	xor    edi,edi
  425811:	cmp    BYTE PTR [rbx+0x32],0x0
  425815:	mov    rdx,rbp
  425818:	mov    rsi,r15
  42581b:	sete   dil
  42581f:	add    rdi,QWORD PTR [rbx+0x28]
  425823:	lea    rax,[rdi+rbp*1]
  425827:	cmp    QWORD PTR [rbx+0x20],rax
  42582b:	mov    QWORD PTR [rbx+0x28],rdi
  42582f:	ja     4258e0 <flatcc_json_printer_bool_enum_struct_field@@Base+0x120>
  425835:	mov    rdi,rbx
  425838:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42583d:	mov    rbp,QWORD PTR [rbx+0x28]
  425841:	mov    BYTE PTR [rbp+0x0],0x22
  425845:	xor    eax,eax
  425847:	cmp    BYTE PTR [rbx+0x32],0x0
  42584b:	sete   al
  42584e:	add    rax,QWORD PTR [rbx+0x28]
  425852:	xor    esi,esi
  425854:	lea    rdx,[rax+0x1]
  425858:	mov    QWORD PTR [rbx+0x28],rdx
  42585c:	mov    BYTE PTR [rax],0x3a
  42585f:	mov    rax,QWORD PTR [rbx+0x28]
  425863:	mov    BYTE PTR [rax],0x20
  425866:	cmp    BYTE PTR [rbx+0x31],0x0
  42586a:	setne  sil
  42586e:	add    rsi,QWORD PTR [rbx+0x28]
  425872:	cmp    BYTE PTR [rbx+0x33],0x0
  425876:	mov    QWORD PTR [rbx+0x28],rsi
  42587a:	jne    4258b8 <flatcc_json_printer_bool_enum_struct_field@@Base+0xf8>
  42587c:	add    rsp,0x8
  425880:	movzx  esi,r12b
  425884:	mov    rdi,rbx
  425887:	mov    rax,r13
  42588a:	pop    rbx
  42588b:	pop    rbp
  42588c:	pop    r12
  42588e:	pop    r13
  425890:	pop    r14
  425892:	pop    r15
  425894:	jmp    rax
  425896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258a0:	xor    esi,esi
  4258a2:	mov    rdi,rbx
  4258a5:	call   QWORD PTR [rbx+0x48]
  4258a8:	mov    rsi,QWORD PTR [rbx+0x28]
  4258ac:	jmp    42580c <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>
  4258b1:	nop    DWORD PTR [rax+0x0]
  4258b8:	movzx  edi,r12b
  4258bc:	call   4200d0 <flatcc_json_parser_table_as_root@@Base+0xe70>
  4258c1:	cdqe   
  4258c3:	add    QWORD PTR [rbx+0x28],rax
  4258c7:	add    rsp,0x8
  4258cb:	pop    rbx
  4258cc:	pop    rbp
  4258cd:	pop    r12
  4258cf:	pop    r13
  4258d1:	pop    r14
  4258d3:	pop    r15
  4258d5:	ret    
  4258d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258e0:	call   4050e0 <memcpy@plt>
  4258e5:	add    rbp,QWORD PTR [rbx+0x28]
  4258e9:	mov    QWORD PTR [rbx+0x28],rbp
  4258ed:	jmp    425841 <flatcc_json_printer_bool_enum_struct_field@@Base+0x81>
  4258f2:	nop    WORD PTR [rax+rax*1+0x0]
  4258f8:	mov    rax,QWORD PTR [rbx+0x28]
  4258fc:	lea    rdx,[rax+0x1]
  425900:	mov    QWORD PTR [rbx+0x28],rdx
  425904:	mov    BYTE PTR [rax],0xa
  425907:	movzx  esi,BYTE PTR [rbx+0x31]
  42590b:	mov    rdi,QWORD PTR [rbx+0x28]
  42590f:	imul   esi,DWORD PTR [rbx+0x38]
  425913:	movsxd r14,esi
  425916:	lea    rax,[rdi+r14*1]
  42591a:	cmp    QWORD PTR [rbx+0x20],rax
  42591e:	jb     425940 <flatcc_json_printer_bool_enum_struct_field@@Base+0x180>
  425920:	mov    esi,0x20
  425925:	mov    rdx,r14
  425928:	call   405090 <memset@plt>
  42592d:	mov    rsi,r14
  425930:	add    rsi,QWORD PTR [rbx+0x28]
  425934:	mov    QWORD PTR [rbx+0x28],rsi
  425938:	jmp    42580c <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>
  42593d:	nop    DWORD PTR [rax]
  425940:	mov    rsi,r14
  425943:	mov    rdi,rbx
  425946:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42594b:	mov    rsi,QWORD PTR [rbx+0x28]
  42594f:	jmp    42580c <flatcc_json_printer_bool_enum_struct_field@@Base+0x4c>
  425954:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42595f:	nop

0000000000425960 <flatcc_json_printer_uint8_vector_field@@Base>:
  425960:	lea    eax,[rdx+rdx*1+0x4]
  425964:	cmp    eax,DWORD PTR [rsi+0x10]
  425967:	jge    425a82 <flatcc_json_printer_uint8_vector_field@@Base+0x122>
  42596d:	push   r15
  42596f:	push   r14
  425971:	push   r13
  425973:	push   r12
  425975:	push   rbp
  425976:	push   rbx
  425977:	sub    rsp,0x8
  42597b:	mov    rdx,QWORD PTR [rsi+0x8]
  42597f:	movzx  ebp,WORD PTR [rdx+rax*1]
  425983:	test   bp,bp
  425986:	je     425a74 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
  42598c:	add    rbp,QWORD PTR [rsi]
  42598f:	je     425a74 <flatcc_json_printer_uint8_vector_field@@Base+0x114>
  425995:	mov    eax,DWORD PTR [rsi+0x18]
  425998:	lea    edx,[rax+0x1]
  42599b:	test   eax,eax
  42599d:	mov    DWORD PTR [rsi+0x18],edx
  4259a0:	je     4259b1 <flatcc_json_printer_uint8_vector_field@@Base+0x51>
  4259a2:	mov    rax,QWORD PTR [rdi+0x28]
  4259a6:	lea    rdx,[rax+0x1]
  4259aa:	mov    QWORD PTR [rdi+0x28],rdx
  4259ae:	mov    BYTE PTR [rax],0x2c
  4259b1:	mov    eax,DWORD PTR [rbp+0x0]
  4259b4:	mov    r15,rcx
  4259b7:	mov    rbx,rdi
  4259ba:	movsxd r13,r8d
  4259bd:	add    rbp,rax
  4259c0:	cmp    BYTE PTR [rdi+0x31],0x0
  4259c4:	mov    rax,QWORD PTR [rdi+0x28]
  4259c8:	mov    r12d,DWORD PTR [rbp+0x0]
  4259cc:	jne    425bf8 <flatcc_json_printer_uint8_vector_field@@Base+0x298>
  4259d2:	cmp    rax,QWORD PTR [rdi+0x20]
  4259d6:	jb     4259e1 <flatcc_json_printer_uint8_vector_field@@Base+0x81>
  4259d8:	xor    esi,esi
  4259da:	call   QWORD PTR [rdi+0x48]
  4259dd:	mov    rax,QWORD PTR [rbx+0x28]
  4259e1:	mov    BYTE PTR [rax],0x22
  4259e4:	xor    edi,edi
  4259e6:	cmp    BYTE PTR [rbx+0x32],0x0
  4259ea:	mov    rdx,r13
  4259ed:	mov    rsi,r15
  4259f0:	sete   dil
  4259f4:	add    rdi,QWORD PTR [rbx+0x28]
  4259f8:	lea    rax,[rdi+r13*1]
  4259fc:	cmp    QWORD PTR [rbx+0x20],rax
  425a00:	mov    QWORD PTR [rbx+0x28],rdi
  425a04:	ja     425b80 <flatcc_json_printer_uint8_vector_field@@Base+0x220>
  425a0a:	mov    rdi,rbx
  425a0d:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  425a12:	mov    r13,QWORD PTR [rbx+0x28]
  425a16:	mov    BYTE PTR [r13+0x0],0x22
  425a1b:	xor    eax,eax
  425a1d:	cmp    BYTE PTR [rbx+0x32],0x0
  425a21:	sete   al
  425a24:	add    rax,QWORD PTR [rbx+0x28]
  425a28:	lea    rdx,[rax+0x1]
  425a2c:	mov    QWORD PTR [rbx+0x28],rdx
  425a30:	mov    BYTE PTR [rax],0x3a
  425a33:	mov    rax,QWORD PTR [rbx+0x28]
  425a37:	mov    BYTE PTR [rax],0x20
  425a3a:	xor    eax,eax
  425a3c:	cmp    BYTE PTR [rbx+0x31],0x0
  425a40:	setne  al
  425a43:	add    rax,QWORD PTR [rbx+0x28]
  425a47:	add    DWORD PTR [rbx+0x38],0x1
  425a4b:	test   r12d,r12d
  425a4e:	lea    rdx,[rax+0x1]
  425a52:	mov    QWORD PTR [rbx+0x28],rdx
  425a56:	mov    BYTE PTR [rax],0x5b
  425a59:	jne    425a88 <flatcc_json_printer_uint8_vector_field@@Base+0x128>
  425a5b:	mov    rax,QWORD PTR [rbx+0x28]
  425a5f:	cmp    BYTE PTR [rbx+0x31],0x0
  425a63:	jne    425b98 <flatcc_json_printer_uint8_vector_field@@Base+0x238>
  425a69:	lea    rdx,[rax+0x1]
  425a6d:	mov    QWORD PTR [rbx+0x28],rdx
  425a71:	mov    BYTE PTR [rax],0x5d
  425a74:	add    rsp,0x8
  425a78:	pop    rbx
  425a79:	pop    rbp
  425a7a:	pop    r12
  425a7c:	pop    r13
  425a7e:	pop    r14
  425a80:	pop    r15
  425a82:	repz ret 
  425a84:	nop    DWORD PTR [rax+0x0]
  425a88:	cmp    BYTE PTR [rbx+0x31],0x0
  425a8c:	jne    425c40 <flatcc_json_printer_uint8_vector_field@@Base+0x2e0>
  425a92:	mov    rsi,QWORD PTR [rbx+0x28]
  425a96:	cmp    rsi,QWORD PTR [rbx+0x20]
  425a9a:	jae    425c60 <flatcc_json_printer_uint8_vector_field@@Base+0x300>
  425aa0:	movzx  edi,BYTE PTR [rbp+0x4]
  425aa4:	lea    r13,[rbp+0x5]
  425aa8:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  425aad:	cdqe   
  425aaf:	add    rax,QWORD PTR [rbx+0x28]
  425ab3:	cmp    r12d,0x1
  425ab7:	lea    edx,[r12-0x2]
  425abc:	mov    QWORD PTR [rbx+0x28],rax
  425ac0:	je     425a5f <flatcc_json_printer_uint8_vector_field@@Base+0xff>
  425ac2:	lea    rbp,[rbp+rdx*1+0x6]
  425ac7:	jmp    425afb <flatcc_json_printer_uint8_vector_field@@Base+0x19b>
  425ac9:	nop    DWORD PTR [rax+0x0]
  425ad0:	mov    rsi,QWORD PTR [rbx+0x28]
  425ad4:	cmp    rsi,QWORD PTR [rbx+0x20]
  425ad8:	jae    425b50 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
  425ada:	movzx  edi,BYTE PTR [r13+0x0]
  425adf:	add    r13,0x1
  425ae3:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  425ae8:	cdqe   
  425aea:	add    rax,QWORD PTR [rbx+0x28]
  425aee:	cmp    r13,rbp
  425af1:	mov    QWORD PTR [rbx+0x28],rax
  425af5:	je     425a5f <flatcc_json_printer_uint8_vector_field@@Base+0xff>
  425afb:	lea    rdx,[rax+0x1]
  425aff:	mov    QWORD PTR [rbx+0x28],rdx
  425b03:	mov    BYTE PTR [rax],0x2c
  425b06:	cmp    BYTE PTR [rbx+0x31],0x0
  425b0a:	je     425ad0 <flatcc_json_printer_uint8_vector_field@@Base+0x170>
  425b0c:	mov    rax,QWORD PTR [rbx+0x28]
  425b10:	lea    rdx,[rax+0x1]
  425b14:	mov    QWORD PTR [rbx+0x28],rdx
  425b18:	mov    BYTE PTR [rax],0xa
  425b1b:	movzx  esi,BYTE PTR [rbx+0x31]
  425b1f:	mov    rdi,QWORD PTR [rbx+0x28]
  425b23:	imul   esi,DWORD PTR [rbx+0x38]
  425b27:	movsxd r12,esi
  425b2a:	lea    rax,[rdi+r12*1]
  425b2e:	cmp    QWORD PTR [rbx+0x20],rax
  425b32:	jb     425b68 <flatcc_json_printer_uint8_vector_field@@Base+0x208>
  425b34:	mov    esi,0x20
  425b39:	mov    rdx,r12
  425b3c:	call   405090 <memset@plt>
  425b41:	mov    rsi,r12
  425b44:	add    rsi,QWORD PTR [rbx+0x28]
  425b48:	mov    QWORD PTR [rbx+0x28],rsi
  425b4c:	jmp    425ada <flatcc_json_printer_uint8_vector_field@@Base+0x17a>
  425b4e:	xchg   ax,ax
  425b50:	xor    esi,esi
  425b52:	mov    rdi,rbx
  425b55:	call   QWORD PTR [rbx+0x48]
  425b58:	mov    rsi,QWORD PTR [rbx+0x28]
  425b5c:	jmp    425ada <flatcc_json_printer_uint8_vector_field@@Base+0x17a>
  425b61:	nop    DWORD PTR [rax+0x0]
  425b68:	mov    rsi,r12
  425b6b:	mov    rdi,rbx
  425b6e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425b73:	mov    rsi,QWORD PTR [rbx+0x28]
  425b77:	jmp    425ada <flatcc_json_printer_uint8_vector_field@@Base+0x17a>
  425b7c:	nop    DWORD PTR [rax+0x0]
  425b80:	call   4050e0 <memcpy@plt>
  425b85:	add    r13,QWORD PTR [rbx+0x28]
  425b89:	mov    QWORD PTR [rbx+0x28],r13
  425b8d:	jmp    425a16 <flatcc_json_printer_uint8_vector_field@@Base+0xb6>
  425b92:	nop    WORD PTR [rax+rax*1+0x0]
  425b98:	lea    rdx,[rax+0x1]
  425b9c:	mov    QWORD PTR [rbx+0x28],rdx
  425ba0:	mov    BYTE PTR [rax],0xa
  425ba3:	mov    eax,DWORD PTR [rbx+0x38]
  425ba6:	mov    rdi,QWORD PTR [rbx+0x28]
  425baa:	lea    ebp,[rax-0x1]
  425bad:	movzx  eax,BYTE PTR [rbx+0x31]
  425bb1:	mov    DWORD PTR [rbx+0x38],ebp
  425bb4:	imul   eax,ebp
  425bb7:	movsxd rbp,eax
  425bba:	lea    rax,[rdi+rbp*1]
  425bbe:	cmp    QWORD PTR [rbx+0x20],rax
  425bc2:	jb     425be0 <flatcc_json_printer_uint8_vector_field@@Base+0x280>
  425bc4:	mov    rdx,rbp
  425bc7:	mov    esi,0x20
  425bcc:	call   405090 <memset@plt>
  425bd1:	mov    rax,rbp
  425bd4:	add    rax,QWORD PTR [rbx+0x28]
  425bd8:	jmp    425a69 <flatcc_json_printer_uint8_vector_field@@Base+0x109>
  425bdd:	nop    DWORD PTR [rax]
  425be0:	mov    rsi,rbp
  425be3:	mov    rdi,rbx
  425be6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425beb:	mov    rax,QWORD PTR [rbx+0x28]
  425bef:	jmp    425a69 <flatcc_json_printer_uint8_vector_field@@Base+0x109>
  425bf4:	nop    DWORD PTR [rax+0x0]
  425bf8:	lea    rdx,[rax+0x1]
  425bfc:	mov    QWORD PTR [rdi+0x28],rdx
  425c00:	mov    BYTE PTR [rax],0xa
  425c03:	movzx  eax,BYTE PTR [rdi+0x31]
  425c07:	imul   eax,DWORD PTR [rdi+0x38]
  425c0b:	mov    rdi,QWORD PTR [rdi+0x28]
  425c0f:	movsxd r14,eax
  425c12:	lea    rax,[rdi+r14*1]
  425c16:	cmp    QWORD PTR [rbx+0x20],rax
  425c1a:	jb     425c71 <flatcc_json_printer_uint8_vector_field@@Base+0x311>
  425c1c:	mov    rdx,r14
  425c1f:	mov    esi,0x20
  425c24:	call   405090 <memset@plt>
  425c29:	mov    rax,r14
  425c2c:	add    rax,QWORD PTR [rbx+0x28]
  425c30:	mov    QWORD PTR [rbx+0x28],rax
  425c34:	jmp    4259e1 <flatcc_json_printer_uint8_vector_field@@Base+0x81>
  425c39:	nop    DWORD PTR [rax+0x0]
  425c40:	mov    rax,QWORD PTR [rbx+0x28]
  425c44:	mov    rdi,rbx
  425c47:	lea    rdx,[rax+0x1]
  425c4b:	mov    QWORD PTR [rbx+0x28],rdx
  425c4f:	mov    BYTE PTR [rax],0xa
  425c52:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  425c57:	mov    rsi,QWORD PTR [rbx+0x28]
  425c5b:	jmp    425aa0 <flatcc_json_printer_uint8_vector_field@@Base+0x140>
  425c60:	xor    esi,esi
  425c62:	mov    rdi,rbx
  425c65:	call   QWORD PTR [rbx+0x48]
  425c68:	mov    rsi,QWORD PTR [rbx+0x28]
  425c6c:	jmp    425aa0 <flatcc_json_printer_uint8_vector_field@@Base+0x140>
  425c71:	mov    rsi,r14
  425c74:	mov    rdi,rbx
  425c77:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425c7c:	mov    rax,QWORD PTR [rbx+0x28]
  425c80:	jmp    4259e1 <flatcc_json_printer_uint8_vector_field@@Base+0x81>
  425c85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000425c90 <flatcc_json_printer_utype_vector_field@@Base>:
  425c90:	jmp    425960 <flatcc_json_printer_uint8_vector_field@@Base>
  425c95:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000425ca0 <flatcc_json_printer_uint16_vector_field@@Base>:
  425ca0:	lea    eax,[rdx+rdx*1+0x4]
  425ca4:	cmp    eax,DWORD PTR [rsi+0x10]
  425ca7:	jge    425d38 <flatcc_json_printer_uint16_vector_field@@Base+0x98>
  425cad:	push   r13
  425caf:	push   r12
  425cb1:	push   rbp
  425cb2:	push   rbx
  425cb3:	sub    rsp,0x8
  425cb7:	mov    rdx,QWORD PTR [rsi+0x8]
  425cbb:	movzx  ebp,WORD PTR [rdx+rax*1]
  425cbf:	test   bp,bp
  425cc2:	je     425d2e <flatcc_json_printer_uint16_vector_field@@Base+0x8e>
  425cc4:	add    rbp,QWORD PTR [rsi]
  425cc7:	je     425d2e <flatcc_json_printer_uint16_vector_field@@Base+0x8e>
  425cc9:	mov    eax,DWORD PTR [rsi+0x18]
  425ccc:	lea    edx,[rax+0x1]
  425ccf:	test   eax,eax
  425cd1:	mov    DWORD PTR [rsi+0x18],edx
  425cd4:	je     425ce5 <flatcc_json_printer_uint16_vector_field@@Base+0x45>
  425cd6:	mov    rax,QWORD PTR [rdi+0x28]
  425cda:	lea    rdx,[rax+0x1]
  425cde:	mov    QWORD PTR [rdi+0x28],rdx
  425ce2:	mov    BYTE PTR [rax],0x2c
  425ce5:	mov    eax,DWORD PTR [rbp+0x0]
  425ce8:	mov    rbx,rdi
  425ceb:	movsxd rdx,r8d
  425cee:	mov    rsi,rcx
  425cf1:	add    rbp,rax
  425cf4:	mov    r12d,DWORD PTR [rbp+0x0]
  425cf8:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  425cfd:	mov    rax,QWORD PTR [rbx+0x28]
  425d01:	add    DWORD PTR [rbx+0x38],0x1
  425d05:	test   r12d,r12d
  425d08:	lea    rdx,[rax+0x1]
  425d0c:	mov    QWORD PTR [rbx+0x28],rdx
  425d10:	mov    BYTE PTR [rax],0x5b
  425d13:	jne    425d40 <flatcc_json_printer_uint16_vector_field@@Base+0xa0>
  425d15:	mov    rax,QWORD PTR [rbx+0x28]
  425d19:	cmp    BYTE PTR [rbx+0x31],0x0
  425d1d:	jne    425e40 <flatcc_json_printer_uint16_vector_field@@Base+0x1a0>
  425d23:	lea    rdx,[rax+0x1]
  425d27:	mov    QWORD PTR [rbx+0x28],rdx
  425d2b:	mov    BYTE PTR [rax],0x5d
  425d2e:	add    rsp,0x8
  425d32:	pop    rbx
  425d33:	pop    rbp
  425d34:	pop    r12
  425d36:	pop    r13
  425d38:	repz ret 
  425d3a:	nop    WORD PTR [rax+rax*1+0x0]
  425d40:	cmp    BYTE PTR [rbx+0x31],0x0
  425d44:	jne    425ea0 <flatcc_json_printer_uint16_vector_field@@Base+0x200>
  425d4a:	mov    rsi,QWORD PTR [rbx+0x28]
  425d4e:	cmp    rsi,QWORD PTR [rbx+0x20]
  425d52:	jae    425ec0 <flatcc_json_printer_uint16_vector_field@@Base+0x220>
  425d58:	movzx  edi,WORD PTR [rbp+0x4]
  425d5c:	lea    r13,[rbp+0x6]
  425d60:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  425d65:	cdqe   
  425d67:	add    rax,QWORD PTR [rbx+0x28]
  425d6b:	cmp    r12d,0x1
  425d6f:	lea    edx,[r12-0x2]
  425d74:	mov    QWORD PTR [rbx+0x28],rax
  425d78:	je     425d19 <flatcc_json_printer_uint16_vector_field@@Base+0x79>
  425d7a:	lea    rbp,[rbp+rdx*2+0x8]
  425d7f:	jmp    425db3 <flatcc_json_printer_uint16_vector_field@@Base+0x113>
  425d81:	nop    DWORD PTR [rax+0x0]
  425d88:	mov    rsi,QWORD PTR [rbx+0x28]
  425d8c:	cmp    rsi,QWORD PTR [rbx+0x20]
  425d90:	jae    425e10 <flatcc_json_printer_uint16_vector_field@@Base+0x170>
  425d92:	movzx  edi,WORD PTR [r13+0x0]
  425d97:	add    r13,0x2
  425d9b:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  425da0:	cdqe   
  425da2:	add    rax,QWORD PTR [rbx+0x28]
  425da6:	cmp    r13,rbp
  425da9:	mov    QWORD PTR [rbx+0x28],rax
  425dad:	je     425d19 <flatcc_json_printer_uint16_vector_field@@Base+0x79>
  425db3:	lea    rdx,[rax+0x1]
  425db7:	mov    QWORD PTR [rbx+0x28],rdx
  425dbb:	mov    BYTE PTR [rax],0x2c
  425dbe:	cmp    BYTE PTR [rbx+0x31],0x0
  425dc2:	je     425d88 <flatcc_json_printer_uint16_vector_field@@Base+0xe8>
  425dc4:	mov    rax,QWORD PTR [rbx+0x28]
  425dc8:	lea    rdx,[rax+0x1]
  425dcc:	mov    QWORD PTR [rbx+0x28],rdx
  425dd0:	mov    BYTE PTR [rax],0xa
  425dd3:	movzx  esi,BYTE PTR [rbx+0x31]
  425dd7:	mov    rdi,QWORD PTR [rbx+0x28]
  425ddb:	imul   esi,DWORD PTR [rbx+0x38]
  425ddf:	movsxd r12,esi
  425de2:	lea    rax,[rdi+r12*1]
  425de6:	cmp    QWORD PTR [rbx+0x20],rax
  425dea:	jb     425e28 <flatcc_json_printer_uint16_vector_field@@Base+0x188>
  425dec:	mov    esi,0x20
  425df1:	mov    rdx,r12
  425df4:	call   405090 <memset@plt>
  425df9:	mov    rsi,r12
  425dfc:	add    rsi,QWORD PTR [rbx+0x28]
  425e00:	mov    QWORD PTR [rbx+0x28],rsi
  425e04:	jmp    425d92 <flatcc_json_printer_uint16_vector_field@@Base+0xf2>
  425e06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e10:	xor    esi,esi
  425e12:	mov    rdi,rbx
  425e15:	call   QWORD PTR [rbx+0x48]
  425e18:	mov    rsi,QWORD PTR [rbx+0x28]
  425e1c:	jmp    425d92 <flatcc_json_printer_uint16_vector_field@@Base+0xf2>
  425e21:	nop    DWORD PTR [rax+0x0]
  425e28:	mov    rsi,r12
  425e2b:	mov    rdi,rbx
  425e2e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425e33:	mov    rsi,QWORD PTR [rbx+0x28]
  425e37:	jmp    425d92 <flatcc_json_printer_uint16_vector_field@@Base+0xf2>
  425e3c:	nop    DWORD PTR [rax+0x0]
  425e40:	lea    rdx,[rax+0x1]
  425e44:	mov    QWORD PTR [rbx+0x28],rdx
  425e48:	mov    BYTE PTR [rax],0xa
  425e4b:	mov    eax,DWORD PTR [rbx+0x38]
  425e4e:	mov    rdi,QWORD PTR [rbx+0x28]
  425e52:	lea    ebp,[rax-0x1]
  425e55:	movzx  eax,BYTE PTR [rbx+0x31]
  425e59:	mov    DWORD PTR [rbx+0x38],ebp
  425e5c:	imul   eax,ebp
  425e5f:	movsxd rbp,eax
  425e62:	lea    rax,[rdi+rbp*1]
  425e66:	cmp    QWORD PTR [rbx+0x20],rax
  425e6a:	jb     425e88 <flatcc_json_printer_uint16_vector_field@@Base+0x1e8>
  425e6c:	mov    rdx,rbp
  425e6f:	mov    esi,0x20
  425e74:	call   405090 <memset@plt>
  425e79:	mov    rax,rbp
  425e7c:	add    rax,QWORD PTR [rbx+0x28]
  425e80:	jmp    425d23 <flatcc_json_printer_uint16_vector_field@@Base+0x83>
  425e85:	nop    DWORD PTR [rax]
  425e88:	mov    rsi,rbp
  425e8b:	mov    rdi,rbx
  425e8e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  425e93:	mov    rax,QWORD PTR [rbx+0x28]
  425e97:	jmp    425d23 <flatcc_json_printer_uint16_vector_field@@Base+0x83>
  425e9c:	nop    DWORD PTR [rax+0x0]
  425ea0:	mov    rax,QWORD PTR [rbx+0x28]
  425ea4:	mov    rdi,rbx
  425ea7:	lea    rdx,[rax+0x1]
  425eab:	mov    QWORD PTR [rbx+0x28],rdx
  425eaf:	mov    BYTE PTR [rax],0xa
  425eb2:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  425eb7:	mov    rsi,QWORD PTR [rbx+0x28]
  425ebb:	jmp    425d58 <flatcc_json_printer_uint16_vector_field@@Base+0xb8>
  425ec0:	xor    esi,esi
  425ec2:	mov    rdi,rbx
  425ec5:	call   QWORD PTR [rbx+0x48]
  425ec8:	mov    rsi,QWORD PTR [rbx+0x28]
  425ecc:	jmp    425d58 <flatcc_json_printer_uint16_vector_field@@Base+0xb8>
  425ed1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  425edc:	nop    DWORD PTR [rax+0x0]

0000000000425ee0 <flatcc_json_printer_uint32_vector_field@@Base>:
  425ee0:	lea    eax,[rdx+rdx*1+0x4]
  425ee4:	cmp    eax,DWORD PTR [rsi+0x10]
  425ee7:	jge    426002 <flatcc_json_printer_uint32_vector_field@@Base+0x122>
  425eed:	push   r15
  425eef:	push   r14
  425ef1:	push   r13
  425ef3:	push   r12
  425ef5:	push   rbp
  425ef6:	push   rbx
  425ef7:	sub    rsp,0x8
  425efb:	mov    rdx,QWORD PTR [rsi+0x8]
  425eff:	movzx  ebp,WORD PTR [rdx+rax*1]
  425f03:	test   bp,bp
  425f06:	je     425ff4 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
  425f0c:	add    rbp,QWORD PTR [rsi]
  425f0f:	je     425ff4 <flatcc_json_printer_uint32_vector_field@@Base+0x114>
  425f15:	mov    eax,DWORD PTR [rsi+0x18]
  425f18:	lea    edx,[rax+0x1]
  425f1b:	test   eax,eax
  425f1d:	mov    DWORD PTR [rsi+0x18],edx
  425f20:	je     425f31 <flatcc_json_printer_uint32_vector_field@@Base+0x51>
  425f22:	mov    rax,QWORD PTR [rdi+0x28]
  425f26:	lea    rdx,[rax+0x1]
  425f2a:	mov    QWORD PTR [rdi+0x28],rdx
  425f2e:	mov    BYTE PTR [rax],0x2c
  425f31:	mov    eax,DWORD PTR [rbp+0x0]
  425f34:	mov    r15,rcx
  425f37:	mov    rbx,rdi
  425f3a:	movsxd r13,r8d
  425f3d:	add    rbp,rax
  425f40:	cmp    BYTE PTR [rdi+0x31],0x0
  425f44:	mov    rax,QWORD PTR [rdi+0x28]
  425f48:	mov    r12d,DWORD PTR [rbp+0x0]
  425f4c:	jne    426178 <flatcc_json_printer_uint32_vector_field@@Base+0x298>
  425f52:	cmp    rax,QWORD PTR [rdi+0x20]
  425f56:	jb     425f61 <flatcc_json_printer_uint32_vector_field@@Base+0x81>
  425f58:	xor    esi,esi
  425f5a:	call   QWORD PTR [rdi+0x48]
  425f5d:	mov    rax,QWORD PTR [rbx+0x28]
  425f61:	mov    BYTE PTR [rax],0x22
  425f64:	xor    edi,edi
  425f66:	cmp    BYTE PTR [rbx+0x32],0x0
  425f6a:	mov    rdx,r13
  425f6d:	mov    rsi,r15
  425f70:	sete   dil
  425f74:	add    rdi,QWORD PTR [rbx+0x28]
  425f78:	lea    rax,[rdi+r13*1]
  425f7c:	cmp    QWORD PTR [rbx+0x20],rax
  425f80:	mov    QWORD PTR [rbx+0x28],rdi
  425f84:	ja     426100 <flatcc_json_printer_uint32_vector_field@@Base+0x220>
  425f8a:	mov    rdi,rbx
  425f8d:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  425f92:	mov    r13,QWORD PTR [rbx+0x28]
  425f96:	mov    BYTE PTR [r13+0x0],0x22
  425f9b:	xor    eax,eax
  425f9d:	cmp    BYTE PTR [rbx+0x32],0x0
  425fa1:	sete   al
  425fa4:	add    rax,QWORD PTR [rbx+0x28]
  425fa8:	lea    rdx,[rax+0x1]
  425fac:	mov    QWORD PTR [rbx+0x28],rdx
  425fb0:	mov    BYTE PTR [rax],0x3a
  425fb3:	mov    rax,QWORD PTR [rbx+0x28]
  425fb7:	mov    BYTE PTR [rax],0x20
  425fba:	xor    eax,eax
  425fbc:	cmp    BYTE PTR [rbx+0x31],0x0
  425fc0:	setne  al
  425fc3:	add    rax,QWORD PTR [rbx+0x28]
  425fc7:	add    DWORD PTR [rbx+0x38],0x1
  425fcb:	test   r12d,r12d
  425fce:	lea    rdx,[rax+0x1]
  425fd2:	mov    QWORD PTR [rbx+0x28],rdx
  425fd6:	mov    BYTE PTR [rax],0x5b
  425fd9:	jne    426008 <flatcc_json_printer_uint32_vector_field@@Base+0x128>
  425fdb:	mov    rax,QWORD PTR [rbx+0x28]
  425fdf:	cmp    BYTE PTR [rbx+0x31],0x0
  425fe3:	jne    426118 <flatcc_json_printer_uint32_vector_field@@Base+0x238>
  425fe9:	lea    rdx,[rax+0x1]
  425fed:	mov    QWORD PTR [rbx+0x28],rdx
  425ff1:	mov    BYTE PTR [rax],0x5d
  425ff4:	add    rsp,0x8
  425ff8:	pop    rbx
  425ff9:	pop    rbp
  425ffa:	pop    r12
  425ffc:	pop    r13
  425ffe:	pop    r14
  426000:	pop    r15
  426002:	repz ret 
  426004:	nop    DWORD PTR [rax+0x0]
  426008:	cmp    BYTE PTR [rbx+0x31],0x0
  42600c:	jne    4261c0 <flatcc_json_printer_uint32_vector_field@@Base+0x2e0>
  426012:	mov    rsi,QWORD PTR [rbx+0x28]
  426016:	cmp    rsi,QWORD PTR [rbx+0x20]
  42601a:	jae    4261e0 <flatcc_json_printer_uint32_vector_field@@Base+0x300>
  426020:	mov    edi,DWORD PTR [rbp+0x4]
  426023:	lea    r13,[rbp+0x8]
  426027:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  42602c:	cdqe   
  42602e:	add    rax,QWORD PTR [rbx+0x28]
  426032:	cmp    r12d,0x1
  426036:	lea    edx,[r12-0x2]
  42603b:	mov    QWORD PTR [rbx+0x28],rax
  42603f:	je     425fdf <flatcc_json_printer_uint32_vector_field@@Base+0xff>
  426041:	lea    rbp,[rbp+rdx*4+0xc]
  426046:	jmp    42607a <flatcc_json_printer_uint32_vector_field@@Base+0x19a>
  426048:	nop    DWORD PTR [rax+rax*1+0x0]
  426050:	mov    rsi,QWORD PTR [rbx+0x28]
  426054:	cmp    rsi,QWORD PTR [rbx+0x20]
  426058:	jae    4260d0 <flatcc_json_printer_uint32_vector_field@@Base+0x1f0>
  42605a:	mov    edi,DWORD PTR [r13+0x0]
  42605e:	add    r13,0x4
  426062:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  426067:	cdqe   
  426069:	add    rax,QWORD PTR [rbx+0x28]
  42606d:	cmp    r13,rbp
  426070:	mov    QWORD PTR [rbx+0x28],rax
  426074:	je     425fdf <flatcc_json_printer_uint32_vector_field@@Base+0xff>
  42607a:	lea    rdx,[rax+0x1]
  42607e:	mov    QWORD PTR [rbx+0x28],rdx
  426082:	mov    BYTE PTR [rax],0x2c
  426085:	cmp    BYTE PTR [rbx+0x31],0x0
  426089:	je     426050 <flatcc_json_printer_uint32_vector_field@@Base+0x170>
  42608b:	mov    rax,QWORD PTR [rbx+0x28]
  42608f:	lea    rdx,[rax+0x1]
  426093:	mov    QWORD PTR [rbx+0x28],rdx
  426097:	mov    BYTE PTR [rax],0xa
  42609a:	movzx  esi,BYTE PTR [rbx+0x31]
  42609e:	mov    rdi,QWORD PTR [rbx+0x28]
  4260a2:	imul   esi,DWORD PTR [rbx+0x38]
  4260a6:	movsxd r12,esi
  4260a9:	lea    rax,[rdi+r12*1]
  4260ad:	cmp    QWORD PTR [rbx+0x20],rax
  4260b1:	jb     4260e8 <flatcc_json_printer_uint32_vector_field@@Base+0x208>
  4260b3:	mov    esi,0x20
  4260b8:	mov    rdx,r12
  4260bb:	call   405090 <memset@plt>
  4260c0:	mov    rsi,r12
  4260c3:	add    rsi,QWORD PTR [rbx+0x28]
  4260c7:	mov    QWORD PTR [rbx+0x28],rsi
  4260cb:	jmp    42605a <flatcc_json_printer_uint32_vector_field@@Base+0x17a>
  4260cd:	nop    DWORD PTR [rax]
  4260d0:	xor    esi,esi
  4260d2:	mov    rdi,rbx
  4260d5:	call   QWORD PTR [rbx+0x48]
  4260d8:	mov    rsi,QWORD PTR [rbx+0x28]
  4260dc:	jmp    42605a <flatcc_json_printer_uint32_vector_field@@Base+0x17a>
  4260e1:	nop    DWORD PTR [rax+0x0]
  4260e8:	mov    rsi,r12
  4260eb:	mov    rdi,rbx
  4260ee:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4260f3:	mov    rsi,QWORD PTR [rbx+0x28]
  4260f7:	jmp    42605a <flatcc_json_printer_uint32_vector_field@@Base+0x17a>
  4260fc:	nop    DWORD PTR [rax+0x0]
  426100:	call   4050e0 <memcpy@plt>
  426105:	add    r13,QWORD PTR [rbx+0x28]
  426109:	mov    QWORD PTR [rbx+0x28],r13
  42610d:	jmp    425f96 <flatcc_json_printer_uint32_vector_field@@Base+0xb6>
  426112:	nop    WORD PTR [rax+rax*1+0x0]
  426118:	lea    rdx,[rax+0x1]
  42611c:	mov    QWORD PTR [rbx+0x28],rdx
  426120:	mov    BYTE PTR [rax],0xa
  426123:	mov    eax,DWORD PTR [rbx+0x38]
  426126:	mov    rdi,QWORD PTR [rbx+0x28]
  42612a:	lea    ebp,[rax-0x1]
  42612d:	movzx  eax,BYTE PTR [rbx+0x31]
  426131:	mov    DWORD PTR [rbx+0x38],ebp
  426134:	imul   eax,ebp
  426137:	movsxd rbp,eax
  42613a:	lea    rax,[rdi+rbp*1]
  42613e:	cmp    QWORD PTR [rbx+0x20],rax
  426142:	jb     426160 <flatcc_json_printer_uint32_vector_field@@Base+0x280>
  426144:	mov    rdx,rbp
  426147:	mov    esi,0x20
  42614c:	call   405090 <memset@plt>
  426151:	mov    rax,rbp
  426154:	add    rax,QWORD PTR [rbx+0x28]
  426158:	jmp    425fe9 <flatcc_json_printer_uint32_vector_field@@Base+0x109>
  42615d:	nop    DWORD PTR [rax]
  426160:	mov    rsi,rbp
  426163:	mov    rdi,rbx
  426166:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42616b:	mov    rax,QWORD PTR [rbx+0x28]
  42616f:	jmp    425fe9 <flatcc_json_printer_uint32_vector_field@@Base+0x109>
  426174:	nop    DWORD PTR [rax+0x0]
  426178:	lea    rdx,[rax+0x1]
  42617c:	mov    QWORD PTR [rdi+0x28],rdx
  426180:	mov    BYTE PTR [rax],0xa
  426183:	movzx  eax,BYTE PTR [rdi+0x31]
  426187:	imul   eax,DWORD PTR [rdi+0x38]
  42618b:	mov    rdi,QWORD PTR [rdi+0x28]
  42618f:	movsxd r14,eax
  426192:	lea    rax,[rdi+r14*1]
  426196:	cmp    QWORD PTR [rbx+0x20],rax
  42619a:	jb     4261f1 <flatcc_json_printer_uint32_vector_field@@Base+0x311>
  42619c:	mov    rdx,r14
  42619f:	mov    esi,0x20
  4261a4:	call   405090 <memset@plt>
  4261a9:	mov    rax,r14
  4261ac:	add    rax,QWORD PTR [rbx+0x28]
  4261b0:	mov    QWORD PTR [rbx+0x28],rax
  4261b4:	jmp    425f61 <flatcc_json_printer_uint32_vector_field@@Base+0x81>
  4261b9:	nop    DWORD PTR [rax+0x0]
  4261c0:	mov    rax,QWORD PTR [rbx+0x28]
  4261c4:	mov    rdi,rbx
  4261c7:	lea    rdx,[rax+0x1]
  4261cb:	mov    QWORD PTR [rbx+0x28],rdx
  4261cf:	mov    BYTE PTR [rax],0xa
  4261d2:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4261d7:	mov    rsi,QWORD PTR [rbx+0x28]
  4261db:	jmp    426020 <flatcc_json_printer_uint32_vector_field@@Base+0x140>
  4261e0:	xor    esi,esi
  4261e2:	mov    rdi,rbx
  4261e5:	call   QWORD PTR [rbx+0x48]
  4261e8:	mov    rsi,QWORD PTR [rbx+0x28]
  4261ec:	jmp    426020 <flatcc_json_printer_uint32_vector_field@@Base+0x140>
  4261f1:	mov    rsi,r14
  4261f4:	mov    rdi,rbx
  4261f7:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4261fc:	mov    rax,QWORD PTR [rbx+0x28]
  426200:	jmp    425f61 <flatcc_json_printer_uint32_vector_field@@Base+0x81>
  426205:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000426210 <flatcc_json_printer_uint64_vector_field@@Base>:
  426210:	lea    eax,[rdx+rdx*1+0x4]
  426214:	cmp    eax,DWORD PTR [rsi+0x10]
  426217:	jge    4262aa <flatcc_json_printer_uint64_vector_field@@Base+0x9a>
  42621d:	push   r13
  42621f:	push   r12
  426221:	push   rbp
  426222:	push   rbx
  426223:	sub    rsp,0x8
  426227:	mov    rdx,QWORD PTR [rsi+0x8]
  42622b:	movzx  r12d,WORD PTR [rdx+rax*1]
  426230:	test   r12w,r12w
  426234:	je     4262a0 <flatcc_json_printer_uint64_vector_field@@Base+0x90>
  426236:	add    r12,QWORD PTR [rsi]
  426239:	je     4262a0 <flatcc_json_printer_uint64_vector_field@@Base+0x90>
  42623b:	mov    eax,DWORD PTR [rsi+0x18]
  42623e:	lea    edx,[rax+0x1]
  426241:	test   eax,eax
  426243:	mov    DWORD PTR [rsi+0x18],edx
  426246:	je     426257 <flatcc_json_printer_uint64_vector_field@@Base+0x47>
  426248:	mov    rax,QWORD PTR [rdi+0x28]
  42624c:	lea    rdx,[rax+0x1]
  426250:	mov    QWORD PTR [rdi+0x28],rdx
  426254:	mov    BYTE PTR [rax],0x2c
  426257:	mov    eax,DWORD PTR [r12]
  42625b:	mov    rbx,rdi
  42625e:	movsxd rdx,r8d
  426261:	mov    rsi,rcx
  426264:	add    r12,rax
  426267:	mov    ebp,DWORD PTR [r12]
  42626b:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  426270:	mov    rax,QWORD PTR [rbx+0x28]
  426274:	add    DWORD PTR [rbx+0x38],0x1
  426278:	test   ebp,ebp
  42627a:	lea    rdx,[rax+0x1]
  42627e:	mov    QWORD PTR [rbx+0x28],rdx
  426282:	mov    BYTE PTR [rax],0x5b
  426285:	jne    4262b0 <flatcc_json_printer_uint64_vector_field@@Base+0xa0>
  426287:	mov    rax,QWORD PTR [rbx+0x28]
  42628b:	cmp    BYTE PTR [rbx+0x31],0x0
  42628f:	jne    4263a0 <flatcc_json_printer_uint64_vector_field@@Base+0x190>
  426295:	lea    rdx,[rax+0x1]
  426299:	mov    QWORD PTR [rbx+0x28],rdx
  42629d:	mov    BYTE PTR [rax],0x5d
  4262a0:	add    rsp,0x8
  4262a4:	pop    rbx
  4262a5:	pop    rbp
  4262a6:	pop    r12
  4262a8:	pop    r13
  4262aa:	repz ret 
  4262ac:	nop    DWORD PTR [rax+0x0]
  4262b0:	cmp    BYTE PTR [rbx+0x31],0x0
  4262b4:	jne    426400 <flatcc_json_printer_uint64_vector_field@@Base+0x1f0>
  4262ba:	mov    rsi,QWORD PTR [rbx+0x28]
  4262be:	cmp    rsi,QWORD PTR [rbx+0x20]
  4262c2:	jae    426420 <flatcc_json_printer_uint64_vector_field@@Base+0x210>
  4262c8:	mov    rdi,QWORD PTR [r12+0x4]
  4262cd:	lea    r13,[r12+0xc]
  4262d2:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  4262d7:	cdqe   
  4262d9:	add    rax,QWORD PTR [rbx+0x28]
  4262dd:	cmp    ebp,0x1
  4262e0:	lea    edx,[rbp-0x2]
  4262e3:	mov    QWORD PTR [rbx+0x28],rax
  4262e7:	je     42628b <flatcc_json_printer_uint64_vector_field@@Base+0x7b>
  4262e9:	lea    rbp,[r12+rdx*8+0x14]
  4262ee:	jmp    42631a <flatcc_json_printer_uint64_vector_field@@Base+0x10a>
  4262f0:	mov    rsi,QWORD PTR [rbx+0x28]
  4262f4:	cmp    rsi,QWORD PTR [rbx+0x20]
  4262f8:	jae    426370 <flatcc_json_printer_uint64_vector_field@@Base+0x160>
  4262fa:	mov    rdi,QWORD PTR [r13+0x0]
  4262fe:	add    r13,0x8
  426302:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  426307:	cdqe   
  426309:	add    rax,QWORD PTR [rbx+0x28]
  42630d:	cmp    r13,rbp
  426310:	mov    QWORD PTR [rbx+0x28],rax
  426314:	je     42628b <flatcc_json_printer_uint64_vector_field@@Base+0x7b>
  42631a:	lea    rdx,[rax+0x1]
  42631e:	mov    QWORD PTR [rbx+0x28],rdx
  426322:	mov    BYTE PTR [rax],0x2c
  426325:	cmp    BYTE PTR [rbx+0x31],0x0
  426329:	je     4262f0 <flatcc_json_printer_uint64_vector_field@@Base+0xe0>
  42632b:	mov    rax,QWORD PTR [rbx+0x28]
  42632f:	lea    rdx,[rax+0x1]
  426333:	mov    QWORD PTR [rbx+0x28],rdx
  426337:	mov    BYTE PTR [rax],0xa
  42633a:	movzx  esi,BYTE PTR [rbx+0x31]
  42633e:	mov    rdi,QWORD PTR [rbx+0x28]
  426342:	imul   esi,DWORD PTR [rbx+0x38]
  426346:	movsxd r12,esi
  426349:	lea    rax,[rdi+r12*1]
  42634d:	cmp    QWORD PTR [rbx+0x20],rax
  426351:	jb     426388 <flatcc_json_printer_uint64_vector_field@@Base+0x178>
  426353:	mov    esi,0x20
  426358:	mov    rdx,r12
  42635b:	call   405090 <memset@plt>
  426360:	mov    rsi,r12
  426363:	add    rsi,QWORD PTR [rbx+0x28]
  426367:	mov    QWORD PTR [rbx+0x28],rsi
  42636b:	jmp    4262fa <flatcc_json_printer_uint64_vector_field@@Base+0xea>
  42636d:	nop    DWORD PTR [rax]
  426370:	xor    esi,esi
  426372:	mov    rdi,rbx
  426375:	call   QWORD PTR [rbx+0x48]
  426378:	mov    rsi,QWORD PTR [rbx+0x28]
  42637c:	jmp    4262fa <flatcc_json_printer_uint64_vector_field@@Base+0xea>
  426381:	nop    DWORD PTR [rax+0x0]
  426388:	mov    rsi,r12
  42638b:	mov    rdi,rbx
  42638e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426393:	mov    rsi,QWORD PTR [rbx+0x28]
  426397:	jmp    4262fa <flatcc_json_printer_uint64_vector_field@@Base+0xea>
  42639c:	nop    DWORD PTR [rax+0x0]
  4263a0:	lea    rdx,[rax+0x1]
  4263a4:	mov    QWORD PTR [rbx+0x28],rdx
  4263a8:	mov    BYTE PTR [rax],0xa
  4263ab:	mov    eax,DWORD PTR [rbx+0x38]
  4263ae:	mov    rdi,QWORD PTR [rbx+0x28]
  4263b2:	lea    ebp,[rax-0x1]
  4263b5:	movzx  eax,BYTE PTR [rbx+0x31]
  4263b9:	mov    DWORD PTR [rbx+0x38],ebp
  4263bc:	imul   eax,ebp
  4263bf:	movsxd rbp,eax
  4263c2:	lea    rax,[rdi+rbp*1]
  4263c6:	cmp    QWORD PTR [rbx+0x20],rax
  4263ca:	jb     4263e8 <flatcc_json_printer_uint64_vector_field@@Base+0x1d8>
  4263cc:	mov    rdx,rbp
  4263cf:	mov    esi,0x20
  4263d4:	call   405090 <memset@plt>
  4263d9:	mov    rax,rbp
  4263dc:	add    rax,QWORD PTR [rbx+0x28]
  4263e0:	jmp    426295 <flatcc_json_printer_uint64_vector_field@@Base+0x85>
  4263e5:	nop    DWORD PTR [rax]
  4263e8:	mov    rsi,rbp
  4263eb:	mov    rdi,rbx
  4263ee:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4263f3:	mov    rax,QWORD PTR [rbx+0x28]
  4263f7:	jmp    426295 <flatcc_json_printer_uint64_vector_field@@Base+0x85>
  4263fc:	nop    DWORD PTR [rax+0x0]
  426400:	mov    rax,QWORD PTR [rbx+0x28]
  426404:	mov    rdi,rbx
  426407:	lea    rdx,[rax+0x1]
  42640b:	mov    QWORD PTR [rbx+0x28],rdx
  42640f:	mov    BYTE PTR [rax],0xa
  426412:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426417:	mov    rsi,QWORD PTR [rbx+0x28]
  42641b:	jmp    4262c8 <flatcc_json_printer_uint64_vector_field@@Base+0xb8>
  426420:	xor    esi,esi
  426422:	mov    rdi,rbx
  426425:	call   QWORD PTR [rbx+0x48]
  426428:	mov    rsi,QWORD PTR [rbx+0x28]
  42642c:	jmp    4262c8 <flatcc_json_printer_uint64_vector_field@@Base+0xb8>
  426431:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42643c:	nop    DWORD PTR [rax+0x0]

0000000000426440 <flatcc_json_printer_int8_vector_field@@Base>:
  426440:	lea    eax,[rdx+rdx*1+0x4]
  426444:	cmp    eax,DWORD PTR [rsi+0x10]
  426447:	jge    4264d6 <flatcc_json_printer_int8_vector_field@@Base+0x96>
  42644d:	push   r13
  42644f:	push   r12
  426451:	push   rbp
  426452:	push   rbx
  426453:	sub    rsp,0x8
  426457:	mov    rdx,QWORD PTR [rsi+0x8]
  42645b:	movzx  ebx,WORD PTR [rdx+rax*1]
  42645f:	test   bx,bx
  426462:	je     4264cc <flatcc_json_printer_int8_vector_field@@Base+0x8c>
  426464:	add    rbx,QWORD PTR [rsi]
  426467:	je     4264cc <flatcc_json_printer_int8_vector_field@@Base+0x8c>
  426469:	mov    eax,DWORD PTR [rsi+0x18]
  42646c:	lea    edx,[rax+0x1]
  42646f:	test   eax,eax
  426471:	mov    DWORD PTR [rsi+0x18],edx
  426474:	je     426485 <flatcc_json_printer_int8_vector_field@@Base+0x45>
  426476:	mov    rax,QWORD PTR [rdi+0x28]
  42647a:	lea    rdx,[rax+0x1]
  42647e:	mov    QWORD PTR [rdi+0x28],rdx
  426482:	mov    BYTE PTR [rax],0x2c
  426485:	mov    eax,DWORD PTR [rbx]
  426487:	mov    rbp,rdi
  42648a:	movsxd rdx,r8d
  42648d:	mov    rsi,rcx
  426490:	add    rbx,rax
  426493:	mov    r12d,DWORD PTR [rbx]
  426496:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  42649b:	mov    rax,QWORD PTR [rbp+0x28]
  42649f:	add    DWORD PTR [rbp+0x38],0x1
  4264a3:	test   r12d,r12d
  4264a6:	lea    rdx,[rax+0x1]
  4264aa:	mov    QWORD PTR [rbp+0x28],rdx
  4264ae:	mov    BYTE PTR [rax],0x5b
  4264b1:	jne    4264e0 <flatcc_json_printer_int8_vector_field@@Base+0xa0>
  4264b3:	mov    rax,QWORD PTR [rbp+0x28]
  4264b7:	cmp    BYTE PTR [rbp+0x31],0x0
  4264bb:	jne    426620 <flatcc_json_printer_int8_vector_field@@Base+0x1e0>
  4264c1:	lea    rdx,[rax+0x1]
  4264c5:	mov    QWORD PTR [rbp+0x28],rdx
  4264c9:	mov    BYTE PTR [rax],0x5d
  4264cc:	add    rsp,0x8
  4264d0:	pop    rbx
  4264d1:	pop    rbp
  4264d2:	pop    r12
  4264d4:	pop    r13
  4264d6:	repz ret 
  4264d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4264e0:	cmp    BYTE PTR [rbp+0x31],0x0
  4264e4:	jne    426680 <flatcc_json_printer_int8_vector_field@@Base+0x240>
  4264ea:	mov    rsi,QWORD PTR [rbp+0x28]
  4264ee:	cmp    rsi,QWORD PTR [rbp+0x20]
  4264f2:	jae    4266b0 <flatcc_json_printer_int8_vector_field@@Base+0x270>
  4264f8:	movsx  r8d,BYTE PTR [rbx+0x4]
  4264fd:	mov    edi,r8d
  426500:	shr    r8d,0x1f
  426504:	test   dil,dil
  426507:	mov    r13d,r8d
  42650a:	js     4266a0 <flatcc_json_printer_int8_vector_field@@Base+0x260>
  426510:	movzx  edi,dil
  426514:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  426519:	add    eax,r13d
  42651c:	lea    edx,[r12-0x2]
  426521:	lea    r13,[rbx+0x5]
  426525:	cdqe   
  426527:	add    rax,QWORD PTR [rbp+0x28]
  42652b:	cmp    r12d,0x1
  42652f:	mov    QWORD PTR [rbp+0x28],rax
  426533:	je     4264b7 <flatcc_json_printer_int8_vector_field@@Base+0x77>
  426535:	lea    rbx,[rbx+rdx*1+0x6]
  42653a:	jmp    426585 <flatcc_json_printer_int8_vector_field@@Base+0x145>
  42653c:	nop    DWORD PTR [rax+0x0]
  426540:	mov    rsi,QWORD PTR [rbp+0x28]
  426544:	cmp    rsi,QWORD PTR [rbp+0x20]
  426548:	jae    4265f0 <flatcc_json_printer_int8_vector_field@@Base+0x1b0>
  42654e:	movsx  r8d,BYTE PTR [r13+0x0]
  426553:	mov    edi,r8d
  426556:	shr    r8d,0x1f
  42655a:	test   dil,dil
  42655d:	mov    r12d,r8d
  426560:	js     4265e0 <flatcc_json_printer_int8_vector_field@@Base+0x1a0>
  426562:	movzx  edi,dil
  426566:	add    r13,0x1
  42656a:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  42656f:	add    eax,r12d
  426572:	cdqe   
  426574:	add    rax,QWORD PTR [rbp+0x28]
  426578:	cmp    r13,rbx
  42657b:	mov    QWORD PTR [rbp+0x28],rax
  42657f:	je     4264b7 <flatcc_json_printer_int8_vector_field@@Base+0x77>
  426585:	lea    rdx,[rax+0x1]
  426589:	mov    QWORD PTR [rbp+0x28],rdx
  42658d:	mov    BYTE PTR [rax],0x2c
  426590:	cmp    BYTE PTR [rbp+0x31],0x0
  426594:	je     426540 <flatcc_json_printer_int8_vector_field@@Base+0x100>
  426596:	mov    rax,QWORD PTR [rbp+0x28]
  42659a:	lea    rdx,[rax+0x1]
  42659e:	mov    QWORD PTR [rbp+0x28],rdx
  4265a2:	mov    BYTE PTR [rax],0xa
  4265a5:	movzx  esi,BYTE PTR [rbp+0x31]
  4265a9:	mov    rdi,QWORD PTR [rbp+0x28]
  4265ad:	imul   esi,DWORD PTR [rbp+0x38]
  4265b1:	movsxd r12,esi
  4265b4:	lea    rax,[rdi+r12*1]
  4265b8:	cmp    QWORD PTR [rbp+0x20],rax
  4265bc:	jb     426608 <flatcc_json_printer_int8_vector_field@@Base+0x1c8>
  4265be:	mov    esi,0x20
  4265c3:	mov    rdx,r12
  4265c6:	call   405090 <memset@plt>
  4265cb:	mov    rsi,r12
  4265ce:	add    rsi,QWORD PTR [rbp+0x28]
  4265d2:	mov    QWORD PTR [rbp+0x28],rsi
  4265d6:	jmp    42654e <flatcc_json_printer_int8_vector_field@@Base+0x10e>
  4265db:	nop    DWORD PTR [rax+rax*1+0x0]
  4265e0:	mov    BYTE PTR [rsi],0x2d
  4265e3:	neg    edi
  4265e5:	add    rsi,0x1
  4265e9:	jmp    426562 <flatcc_json_printer_int8_vector_field@@Base+0x122>
  4265ee:	xchg   ax,ax
  4265f0:	xor    esi,esi
  4265f2:	mov    rdi,rbp
  4265f5:	call   QWORD PTR [rbp+0x48]
  4265f8:	mov    rsi,QWORD PTR [rbp+0x28]
  4265fc:	jmp    42654e <flatcc_json_printer_int8_vector_field@@Base+0x10e>
  426601:	nop    DWORD PTR [rax+0x0]
  426608:	mov    rsi,r12
  42660b:	mov    rdi,rbp
  42660e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426613:	mov    rsi,QWORD PTR [rbp+0x28]
  426617:	jmp    42654e <flatcc_json_printer_int8_vector_field@@Base+0x10e>
  42661c:	nop    DWORD PTR [rax+0x0]
  426620:	lea    rdx,[rax+0x1]
  426624:	mov    QWORD PTR [rbp+0x28],rdx
  426628:	mov    BYTE PTR [rax],0xa
  42662b:	mov    eax,DWORD PTR [rbp+0x38]
  42662e:	mov    rdi,QWORD PTR [rbp+0x28]
  426632:	lea    ebx,[rax-0x1]
  426635:	movzx  eax,BYTE PTR [rbp+0x31]
  426639:	mov    DWORD PTR [rbp+0x38],ebx
  42663c:	imul   eax,ebx
  42663f:	movsxd rbx,eax
  426642:	lea    rax,[rdi+rbx*1]
  426646:	cmp    QWORD PTR [rbp+0x20],rax
  42664a:	jb     426668 <flatcc_json_printer_int8_vector_field@@Base+0x228>
  42664c:	mov    rdx,rbx
  42664f:	mov    esi,0x20
  426654:	call   405090 <memset@plt>
  426659:	mov    rax,rbx
  42665c:	add    rax,QWORD PTR [rbp+0x28]
  426660:	jmp    4264c1 <flatcc_json_printer_int8_vector_field@@Base+0x81>
  426665:	nop    DWORD PTR [rax]
  426668:	mov    rsi,rbx
  42666b:	mov    rdi,rbp
  42666e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426673:	mov    rax,QWORD PTR [rbp+0x28]
  426677:	jmp    4264c1 <flatcc_json_printer_int8_vector_field@@Base+0x81>
  42667c:	nop    DWORD PTR [rax+0x0]
  426680:	mov    rax,QWORD PTR [rbp+0x28]
  426684:	mov    rdi,rbp
  426687:	lea    rdx,[rax+0x1]
  42668b:	mov    QWORD PTR [rbp+0x28],rdx
  42668f:	mov    BYTE PTR [rax],0xa
  426692:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426697:	mov    rsi,QWORD PTR [rbp+0x28]
  42669b:	jmp    4264f8 <flatcc_json_printer_int8_vector_field@@Base+0xb8>
  4266a0:	mov    BYTE PTR [rsi],0x2d
  4266a3:	neg    edi
  4266a5:	add    rsi,0x1
  4266a9:	jmp    426510 <flatcc_json_printer_int8_vector_field@@Base+0xd0>
  4266ae:	xchg   ax,ax
  4266b0:	xor    esi,esi
  4266b2:	mov    rdi,rbp
  4266b5:	call   QWORD PTR [rbp+0x48]
  4266b8:	mov    rsi,QWORD PTR [rbp+0x28]
  4266bc:	jmp    4264f8 <flatcc_json_printer_int8_vector_field@@Base+0xb8>
  4266c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4266cc:	nop    DWORD PTR [rax+0x0]

00000000004266d0 <flatcc_json_printer_int16_vector_field@@Base>:
  4266d0:	lea    eax,[rdx+rdx*1+0x4]
  4266d4:	cmp    eax,DWORD PTR [rsi+0x10]
  4266d7:	jge    42676c <flatcc_json_printer_int16_vector_field@@Base+0x9c>
  4266dd:	push   r13
  4266df:	push   r12
  4266e1:	push   rbp
  4266e2:	push   rbx
  4266e3:	sub    rsp,0x8
  4266e7:	mov    rdx,QWORD PTR [rsi+0x8]
  4266eb:	movzx  ebx,WORD PTR [rdx+rax*1]
  4266ef:	test   bx,bx
  4266f2:	je     426762 <flatcc_json_printer_int16_vector_field@@Base+0x92>
  4266f4:	add    rbx,QWORD PTR [rsi]
  4266f7:	je     426762 <flatcc_json_printer_int16_vector_field@@Base+0x92>
  4266f9:	mov    eax,DWORD PTR [rsi+0x18]
  4266fc:	lea    edx,[rax+0x1]
  4266ff:	test   eax,eax
  426701:	mov    DWORD PTR [rsi+0x18],edx
  426704:	je     426715 <flatcc_json_printer_int16_vector_field@@Base+0x45>
  426706:	mov    rax,QWORD PTR [rdi+0x28]
  42670a:	lea    rdx,[rax+0x1]
  42670e:	mov    QWORD PTR [rdi+0x28],rdx
  426712:	mov    BYTE PTR [rax],0x2c
  426715:	mov    eax,DWORD PTR [rbx]
  426717:	mov    r12,rdi
  42671a:	movsxd rdx,r8d
  42671d:	mov    rsi,rcx
  426720:	add    rbx,rax
  426723:	mov    ebp,DWORD PTR [rbx]
  426725:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  42672a:	mov    rax,QWORD PTR [r12+0x28]
  42672f:	add    DWORD PTR [r12+0x38],0x1
  426735:	test   ebp,ebp
  426737:	lea    rdx,[rax+0x1]
  42673b:	mov    QWORD PTR [r12+0x28],rdx
  426740:	mov    BYTE PTR [rax],0x5b
  426743:	jne    426770 <flatcc_json_printer_int16_vector_field@@Base+0xa0>
  426745:	mov    rax,QWORD PTR [r12+0x28]
  42674a:	cmp    BYTE PTR [r12+0x31],0x0
  426750:	jne    4268c0 <flatcc_json_printer_int16_vector_field@@Base+0x1f0>
  426756:	lea    rdx,[rax+0x1]
  42675a:	mov    QWORD PTR [r12+0x28],rdx
  42675f:	mov    BYTE PTR [rax],0x5d
  426762:	add    rsp,0x8
  426766:	pop    rbx
  426767:	pop    rbp
  426768:	pop    r12
  42676a:	pop    r13
  42676c:	repz ret 
  42676e:	xchg   ax,ax
  426770:	cmp    BYTE PTR [r12+0x31],0x0
  426776:	jne    426928 <flatcc_json_printer_int16_vector_field@@Base+0x258>
  42677c:	mov    rsi,QWORD PTR [r12+0x28]
  426781:	cmp    rsi,QWORD PTR [r12+0x20]
  426786:	jae    426960 <flatcc_json_printer_int16_vector_field@@Base+0x290>
  42678c:	movsx  r11d,WORD PTR [rbx+0x4]
  426791:	mov    edi,r11d
  426794:	shr    r11d,0x1f
  426798:	test   di,di
  42679b:	mov    r13d,r11d
  42679e:	js     426950 <flatcc_json_printer_int16_vector_field@@Base+0x280>
  4267a4:	movzx  edi,di
  4267a7:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  4267ac:	add    eax,r13d
  4267af:	lea    edx,[rbp-0x2]
  4267b2:	lea    r13,[rbx+0x6]
  4267b6:	cdqe   
  4267b8:	add    rax,QWORD PTR [r12+0x28]
  4267bd:	cmp    ebp,0x1
  4267c0:	mov    QWORD PTR [r12+0x28],rax
  4267c5:	je     42674a <flatcc_json_printer_int16_vector_field@@Base+0x7a>
  4267c7:	lea    rbx,[rbx+rdx*2+0x8]
  4267cc:	jmp    42681b <flatcc_json_printer_int16_vector_field@@Base+0x14b>
  4267ce:	xchg   ax,ax
  4267d0:	mov    rsi,QWORD PTR [r12+0x28]
  4267d5:	cmp    rsi,QWORD PTR [r12+0x20]
  4267da:	jae    426890 <flatcc_json_printer_int16_vector_field@@Base+0x1c0>
  4267e0:	movsx  r11d,WORD PTR [r13+0x0]
  4267e5:	mov    edi,r11d
  4267e8:	shr    r11d,0x1f
  4267ec:	test   di,di
  4267ef:	mov    ebp,r11d
  4267f2:	js     426880 <flatcc_json_printer_int16_vector_field@@Base+0x1b0>
  4267f8:	movzx  edi,di
  4267fb:	add    r13,0x2
  4267ff:	call   41f270 <flatcc_json_parser_table_as_root@@Base+0x10>
  426804:	add    eax,ebp
  426806:	cdqe   
  426808:	add    rax,QWORD PTR [r12+0x28]
  42680d:	cmp    r13,rbx
  426810:	mov    QWORD PTR [r12+0x28],rax
  426815:	je     42674a <flatcc_json_printer_int16_vector_field@@Base+0x7a>
  42681b:	lea    rdx,[rax+0x1]
  42681f:	mov    QWORD PTR [r12+0x28],rdx
  426824:	mov    BYTE PTR [rax],0x2c
  426827:	cmp    BYTE PTR [r12+0x31],0x0
  42682d:	je     4267d0 <flatcc_json_printer_int16_vector_field@@Base+0x100>
  42682f:	mov    rax,QWORD PTR [r12+0x28]
  426834:	lea    rdx,[rax+0x1]
  426838:	mov    QWORD PTR [r12+0x28],rdx
  42683d:	mov    BYTE PTR [rax],0xa
  426840:	movzx  esi,BYTE PTR [r12+0x31]
  426846:	mov    rdi,QWORD PTR [r12+0x28]
  42684b:	imul   esi,DWORD PTR [r12+0x38]
  426851:	movsxd rbp,esi
  426854:	lea    rax,[rdi+rbp*1]
  426858:	cmp    QWORD PTR [r12+0x20],rax
  42685d:	jb     4268a8 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
  42685f:	mov    esi,0x20
  426864:	mov    rdx,rbp
  426867:	call   405090 <memset@plt>
  42686c:	mov    rsi,rbp
  42686f:	add    rsi,QWORD PTR [r12+0x28]
  426874:	mov    QWORD PTR [r12+0x28],rsi
  426879:	jmp    4267e0 <flatcc_json_printer_int16_vector_field@@Base+0x110>
  42687e:	xchg   ax,ax
  426880:	mov    BYTE PTR [rsi],0x2d
  426883:	neg    edi
  426885:	add    rsi,0x1
  426889:	jmp    4267f8 <flatcc_json_printer_int16_vector_field@@Base+0x128>
  42688e:	xchg   ax,ax
  426890:	xor    esi,esi
  426892:	mov    rdi,r12
  426895:	call   QWORD PTR [r12+0x48]
  42689a:	mov    rsi,QWORD PTR [r12+0x28]
  42689f:	jmp    4267e0 <flatcc_json_printer_int16_vector_field@@Base+0x110>
  4268a4:	nop    DWORD PTR [rax+0x0]
  4268a8:	mov    rsi,rbp
  4268ab:	mov    rdi,r12
  4268ae:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4268b3:	mov    rsi,QWORD PTR [r12+0x28]
  4268b8:	jmp    4267e0 <flatcc_json_printer_int16_vector_field@@Base+0x110>
  4268bd:	nop    DWORD PTR [rax]
  4268c0:	lea    rdx,[rax+0x1]
  4268c4:	mov    QWORD PTR [r12+0x28],rdx
  4268c9:	mov    BYTE PTR [rax],0xa
  4268cc:	mov    eax,DWORD PTR [r12+0x38]
  4268d1:	mov    rdi,QWORD PTR [r12+0x28]
  4268d6:	lea    ebx,[rax-0x1]
  4268d9:	movzx  eax,BYTE PTR [r12+0x31]
  4268df:	mov    DWORD PTR [r12+0x38],ebx
  4268e4:	imul   eax,ebx
  4268e7:	movsxd rbx,eax
  4268ea:	lea    rax,[rdi+rbx*1]
  4268ee:	cmp    QWORD PTR [r12+0x20],rax
  4268f3:	jb     426910 <flatcc_json_printer_int16_vector_field@@Base+0x240>
  4268f5:	mov    rdx,rbx
  4268f8:	mov    esi,0x20
  4268fd:	call   405090 <memset@plt>
  426902:	mov    rax,rbx
  426905:	add    rax,QWORD PTR [r12+0x28]
  42690a:	jmp    426756 <flatcc_json_printer_int16_vector_field@@Base+0x86>
  42690f:	nop
  426910:	mov    rsi,rbx
  426913:	mov    rdi,r12
  426916:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42691b:	mov    rax,QWORD PTR [r12+0x28]
  426920:	jmp    426756 <flatcc_json_printer_int16_vector_field@@Base+0x86>
  426925:	nop    DWORD PTR [rax]
  426928:	mov    rax,QWORD PTR [r12+0x28]
  42692d:	mov    rdi,r12
  426930:	lea    rdx,[rax+0x1]
  426934:	mov    QWORD PTR [r12+0x28],rdx
  426939:	mov    BYTE PTR [rax],0xa
  42693c:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426941:	mov    rsi,QWORD PTR [r12+0x28]
  426946:	jmp    42678c <flatcc_json_printer_int16_vector_field@@Base+0xbc>
  42694b:	nop    DWORD PTR [rax+rax*1+0x0]
  426950:	mov    BYTE PTR [rsi],0x2d
  426953:	neg    edi
  426955:	add    rsi,0x1
  426959:	jmp    4267a4 <flatcc_json_printer_int16_vector_field@@Base+0xd4>
  42695e:	xchg   ax,ax
  426960:	xor    esi,esi
  426962:	mov    rdi,r12
  426965:	call   QWORD PTR [r12+0x48]
  42696a:	mov    rsi,QWORD PTR [r12+0x28]
  42696f:	jmp    42678c <flatcc_json_printer_int16_vector_field@@Base+0xbc>
  426974:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42697f:	nop

0000000000426980 <flatcc_json_printer_int32_vector_field@@Base>:
  426980:	lea    eax,[rdx+rdx*1+0x4]
  426984:	cmp    eax,DWORD PTR [rsi+0x10]
  426987:	jge    426a1c <flatcc_json_printer_int32_vector_field@@Base+0x9c>
  42698d:	push   r13
  42698f:	push   r12
  426991:	push   rbp
  426992:	push   rbx
  426993:	sub    rsp,0x8
  426997:	mov    rdx,QWORD PTR [rsi+0x8]
  42699b:	movzx  ebx,WORD PTR [rdx+rax*1]
  42699f:	test   bx,bx
  4269a2:	je     426a12 <flatcc_json_printer_int32_vector_field@@Base+0x92>
  4269a4:	add    rbx,QWORD PTR [rsi]
  4269a7:	je     426a12 <flatcc_json_printer_int32_vector_field@@Base+0x92>
  4269a9:	mov    eax,DWORD PTR [rsi+0x18]
  4269ac:	lea    edx,[rax+0x1]
  4269af:	test   eax,eax
  4269b1:	mov    DWORD PTR [rsi+0x18],edx
  4269b4:	je     4269c5 <flatcc_json_printer_int32_vector_field@@Base+0x45>
  4269b6:	mov    rax,QWORD PTR [rdi+0x28]
  4269ba:	lea    rdx,[rax+0x1]
  4269be:	mov    QWORD PTR [rdi+0x28],rdx
  4269c2:	mov    BYTE PTR [rax],0x2c
  4269c5:	mov    eax,DWORD PTR [rbx]
  4269c7:	mov    r12,rdi
  4269ca:	movsxd rdx,r8d
  4269cd:	mov    rsi,rcx
  4269d0:	add    rbx,rax
  4269d3:	mov    ebp,DWORD PTR [rbx]
  4269d5:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  4269da:	mov    rax,QWORD PTR [r12+0x28]
  4269df:	add    DWORD PTR [r12+0x38],0x1
  4269e5:	test   ebp,ebp
  4269e7:	lea    rdx,[rax+0x1]
  4269eb:	mov    QWORD PTR [r12+0x28],rdx
  4269f0:	mov    BYTE PTR [rax],0x5b
  4269f3:	jne    426a20 <flatcc_json_printer_int32_vector_field@@Base+0xa0>
  4269f5:	mov    rax,QWORD PTR [r12+0x28]
  4269fa:	cmp    BYTE PTR [r12+0x31],0x0
  426a00:	jne    426b70 <flatcc_json_printer_int32_vector_field@@Base+0x1f0>
  426a06:	lea    rdx,[rax+0x1]
  426a0a:	mov    QWORD PTR [r12+0x28],rdx
  426a0f:	mov    BYTE PTR [rax],0x5d
  426a12:	add    rsp,0x8
  426a16:	pop    rbx
  426a17:	pop    rbp
  426a18:	pop    r12
  426a1a:	pop    r13
  426a1c:	repz ret 
  426a1e:	xchg   ax,ax
  426a20:	cmp    BYTE PTR [r12+0x31],0x0
  426a26:	jne    426bd8 <flatcc_json_printer_int32_vector_field@@Base+0x258>
  426a2c:	mov    rsi,QWORD PTR [r12+0x28]
  426a31:	cmp    rsi,QWORD PTR [r12+0x20]
  426a36:	jae    426c10 <flatcc_json_printer_int32_vector_field@@Base+0x290>
  426a3c:	mov    edi,DWORD PTR [rbx+0x4]
  426a3f:	mov    r10d,edi
  426a42:	shr    r10d,0x1f
  426a46:	test   edi,edi
  426a48:	mov    r13d,r10d
  426a4b:	js     426c00 <flatcc_json_printer_int32_vector_field@@Base+0x280>
  426a51:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  426a56:	add    eax,r13d
  426a59:	lea    edx,[rbp-0x2]
  426a5c:	lea    r13,[rbx+0x8]
  426a60:	cdqe   
  426a62:	add    rax,QWORD PTR [r12+0x28]
  426a67:	cmp    ebp,0x1
  426a6a:	mov    QWORD PTR [r12+0x28],rax
  426a6f:	je     4269fa <flatcc_json_printer_int32_vector_field@@Base+0x7a>
  426a71:	lea    rbx,[rbx+rdx*4+0xc]
  426a76:	jmp    426ac6 <flatcc_json_printer_int32_vector_field@@Base+0x146>
  426a78:	nop    DWORD PTR [rax+rax*1+0x0]
  426a80:	mov    rsi,QWORD PTR [r12+0x28]
  426a85:	cmp    rsi,QWORD PTR [r12+0x20]
  426a8a:	jae    426b40 <flatcc_json_printer_int32_vector_field@@Base+0x1c0>
  426a90:	mov    edi,DWORD PTR [r13+0x0]
  426a94:	mov    r10d,edi
  426a97:	shr    r10d,0x1f
  426a9b:	test   edi,edi
  426a9d:	mov    ebp,r10d
  426aa0:	js     426b30 <flatcc_json_printer_int32_vector_field@@Base+0x1b0>
  426aa6:	call   41f400 <flatcc_json_parser_table_as_root@@Base+0x1a0>
  426aab:	add    eax,ebp
  426aad:	add    r13,0x4
  426ab1:	cdqe   
  426ab3:	add    rax,QWORD PTR [r12+0x28]
  426ab8:	cmp    r13,rbx
  426abb:	mov    QWORD PTR [r12+0x28],rax
  426ac0:	je     4269fa <flatcc_json_printer_int32_vector_field@@Base+0x7a>
  426ac6:	lea    rdx,[rax+0x1]
  426aca:	mov    QWORD PTR [r12+0x28],rdx
  426acf:	mov    BYTE PTR [rax],0x2c
  426ad2:	cmp    BYTE PTR [r12+0x31],0x0
  426ad8:	je     426a80 <flatcc_json_printer_int32_vector_field@@Base+0x100>
  426ada:	mov    rax,QWORD PTR [r12+0x28]
  426adf:	lea    rdx,[rax+0x1]
  426ae3:	mov    QWORD PTR [r12+0x28],rdx
  426ae8:	mov    BYTE PTR [rax],0xa
  426aeb:	movzx  esi,BYTE PTR [r12+0x31]
  426af1:	mov    rdi,QWORD PTR [r12+0x28]
  426af6:	imul   esi,DWORD PTR [r12+0x38]
  426afc:	movsxd rbp,esi
  426aff:	lea    rax,[rdi+rbp*1]
  426b03:	cmp    QWORD PTR [r12+0x20],rax
  426b08:	jb     426b58 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
  426b0a:	mov    esi,0x20
  426b0f:	mov    rdx,rbp
  426b12:	call   405090 <memset@plt>
  426b17:	mov    rsi,rbp
  426b1a:	add    rsi,QWORD PTR [r12+0x28]
  426b1f:	mov    QWORD PTR [r12+0x28],rsi
  426b24:	jmp    426a90 <flatcc_json_printer_int32_vector_field@@Base+0x110>
  426b29:	nop    DWORD PTR [rax+0x0]
  426b30:	mov    BYTE PTR [rsi],0x2d
  426b33:	neg    edi
  426b35:	add    rsi,0x1
  426b39:	jmp    426aa6 <flatcc_json_printer_int32_vector_field@@Base+0x126>
  426b3e:	xchg   ax,ax
  426b40:	xor    esi,esi
  426b42:	mov    rdi,r12
  426b45:	call   QWORD PTR [r12+0x48]
  426b4a:	mov    rsi,QWORD PTR [r12+0x28]
  426b4f:	jmp    426a90 <flatcc_json_printer_int32_vector_field@@Base+0x110>
  426b54:	nop    DWORD PTR [rax+0x0]
  426b58:	mov    rsi,rbp
  426b5b:	mov    rdi,r12
  426b5e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426b63:	mov    rsi,QWORD PTR [r12+0x28]
  426b68:	jmp    426a90 <flatcc_json_printer_int32_vector_field@@Base+0x110>
  426b6d:	nop    DWORD PTR [rax]
  426b70:	lea    rdx,[rax+0x1]
  426b74:	mov    QWORD PTR [r12+0x28],rdx
  426b79:	mov    BYTE PTR [rax],0xa
  426b7c:	mov    eax,DWORD PTR [r12+0x38]
  426b81:	mov    rdi,QWORD PTR [r12+0x28]
  426b86:	lea    ebx,[rax-0x1]
  426b89:	movzx  eax,BYTE PTR [r12+0x31]
  426b8f:	mov    DWORD PTR [r12+0x38],ebx
  426b94:	imul   eax,ebx
  426b97:	movsxd rbx,eax
  426b9a:	lea    rax,[rdi+rbx*1]
  426b9e:	cmp    QWORD PTR [r12+0x20],rax
  426ba3:	jb     426bc0 <flatcc_json_printer_int32_vector_field@@Base+0x240>
  426ba5:	mov    rdx,rbx
  426ba8:	mov    esi,0x20
  426bad:	call   405090 <memset@plt>
  426bb2:	mov    rax,rbx
  426bb5:	add    rax,QWORD PTR [r12+0x28]
  426bba:	jmp    426a06 <flatcc_json_printer_int32_vector_field@@Base+0x86>
  426bbf:	nop
  426bc0:	mov    rsi,rbx
  426bc3:	mov    rdi,r12
  426bc6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426bcb:	mov    rax,QWORD PTR [r12+0x28]
  426bd0:	jmp    426a06 <flatcc_json_printer_int32_vector_field@@Base+0x86>
  426bd5:	nop    DWORD PTR [rax]
  426bd8:	mov    rax,QWORD PTR [r12+0x28]
  426bdd:	mov    rdi,r12
  426be0:	lea    rdx,[rax+0x1]
  426be4:	mov    QWORD PTR [r12+0x28],rdx
  426be9:	mov    BYTE PTR [rax],0xa
  426bec:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426bf1:	mov    rsi,QWORD PTR [r12+0x28]
  426bf6:	jmp    426a3c <flatcc_json_printer_int32_vector_field@@Base+0xbc>
  426bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  426c00:	mov    BYTE PTR [rsi],0x2d
  426c03:	neg    edi
  426c05:	add    rsi,0x1
  426c09:	jmp    426a51 <flatcc_json_printer_int32_vector_field@@Base+0xd1>
  426c0e:	xchg   ax,ax
  426c10:	xor    esi,esi
  426c12:	mov    rdi,r12
  426c15:	call   QWORD PTR [r12+0x48]
  426c1a:	mov    rsi,QWORD PTR [r12+0x28]
  426c1f:	jmp    426a3c <flatcc_json_printer_int32_vector_field@@Base+0xbc>
  426c24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426c2f:	nop

0000000000426c30 <flatcc_json_printer_int64_vector_field@@Base>:
  426c30:	lea    eax,[rdx+rdx*1+0x4]
  426c34:	cmp    eax,DWORD PTR [rsi+0x10]
  426c37:	jge    426ccc <flatcc_json_printer_int64_vector_field@@Base+0x9c>
  426c3d:	push   r13
  426c3f:	push   r12
  426c41:	push   rbp
  426c42:	push   rbx
  426c43:	sub    rsp,0x8
  426c47:	mov    rdx,QWORD PTR [rsi+0x8]
  426c4b:	movzx  ebx,WORD PTR [rdx+rax*1]
  426c4f:	test   bx,bx
  426c52:	je     426cc2 <flatcc_json_printer_int64_vector_field@@Base+0x92>
  426c54:	add    rbx,QWORD PTR [rsi]
  426c57:	je     426cc2 <flatcc_json_printer_int64_vector_field@@Base+0x92>
  426c59:	mov    eax,DWORD PTR [rsi+0x18]
  426c5c:	lea    edx,[rax+0x1]
  426c5f:	test   eax,eax
  426c61:	mov    DWORD PTR [rsi+0x18],edx
  426c64:	je     426c75 <flatcc_json_printer_int64_vector_field@@Base+0x45>
  426c66:	mov    rax,QWORD PTR [rdi+0x28]
  426c6a:	lea    rdx,[rax+0x1]
  426c6e:	mov    QWORD PTR [rdi+0x28],rdx
  426c72:	mov    BYTE PTR [rax],0x2c
  426c75:	mov    eax,DWORD PTR [rbx]
  426c77:	mov    r12,rdi
  426c7a:	movsxd rdx,r8d
  426c7d:	mov    rsi,rcx
  426c80:	add    rbx,rax
  426c83:	mov    ebp,DWORD PTR [rbx]
  426c85:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  426c8a:	mov    rax,QWORD PTR [r12+0x28]
  426c8f:	add    DWORD PTR [r12+0x38],0x1
  426c95:	test   ebp,ebp
  426c97:	lea    rdx,[rax+0x1]
  426c9b:	mov    QWORD PTR [r12+0x28],rdx
  426ca0:	mov    BYTE PTR [rax],0x5b
  426ca3:	jne    426cd0 <flatcc_json_printer_int64_vector_field@@Base+0xa0>
  426ca5:	mov    rax,QWORD PTR [r12+0x28]
  426caa:	cmp    BYTE PTR [r12+0x31],0x0
  426cb0:	jne    426e30 <flatcc_json_printer_int64_vector_field@@Base+0x200>
  426cb6:	lea    rdx,[rax+0x1]
  426cba:	mov    QWORD PTR [r12+0x28],rdx
  426cbf:	mov    BYTE PTR [rax],0x5d
  426cc2:	add    rsp,0x8
  426cc6:	pop    rbx
  426cc7:	pop    rbp
  426cc8:	pop    r12
  426cca:	pop    r13
  426ccc:	repz ret 
  426cce:	xchg   ax,ax
  426cd0:	cmp    BYTE PTR [r12+0x31],0x0
  426cd6:	jne    426e98 <flatcc_json_printer_int64_vector_field@@Base+0x268>
  426cdc:	mov    rsi,QWORD PTR [r12+0x28]
  426ce1:	cmp    rsi,QWORD PTR [r12+0x20]
  426ce6:	jae    426ee0 <flatcc_json_printer_int64_vector_field@@Base+0x2b0>
  426cec:	mov    rdi,QWORD PTR [rbx+0x4]
  426cf0:	mov    r13,rdi
  426cf3:	shr    r13,0x3f
  426cf7:	test   rdi,rdi
  426cfa:	js     426eca <flatcc_json_printer_int64_vector_field@@Base+0x29a>
  426d00:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  426d05:	add    eax,r13d
  426d08:	lea    edx,[rbp-0x2]
  426d0b:	lea    r13,[rbx+0xc]
  426d0f:	cdqe   
  426d11:	add    rax,QWORD PTR [r12+0x28]
  426d16:	cmp    ebp,0x1
  426d19:	mov    QWORD PTR [r12+0x28],rax
  426d1e:	je     426caa <flatcc_json_printer_int64_vector_field@@Base+0x7a>
  426d20:	lea    rbx,[rbx+rdx*8+0x14]
  426d25:	jmp    426d74 <flatcc_json_printer_int64_vector_field@@Base+0x144>
  426d27:	nop    WORD PTR [rax+rax*1+0x0]
  426d30:	mov    rsi,QWORD PTR [r12+0x28]
  426d35:	cmp    rsi,QWORD PTR [r12+0x20]
  426d3a:	jae    426e00 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
  426d40:	mov    rdi,QWORD PTR [r13+0x0]
  426d44:	mov    rbp,rdi
  426d47:	shr    rbp,0x3f
  426d4b:	test   rdi,rdi
  426d4e:	js     426df0 <flatcc_json_printer_int64_vector_field@@Base+0x1c0>
  426d54:	call   41f690 <flatcc_json_parser_table_as_root@@Base+0x430>
  426d59:	add    eax,ebp
  426d5b:	add    r13,0x8
  426d5f:	cdqe   
  426d61:	add    rax,QWORD PTR [r12+0x28]
  426d66:	cmp    r13,rbx
  426d69:	mov    QWORD PTR [r12+0x28],rax
  426d6e:	je     426caa <flatcc_json_printer_int64_vector_field@@Base+0x7a>
  426d74:	lea    rdx,[rax+0x1]
  426d78:	mov    QWORD PTR [r12+0x28],rdx
  426d7d:	mov    BYTE PTR [rax],0x2c
  426d80:	cmp    BYTE PTR [r12+0x31],0x0
  426d86:	je     426d30 <flatcc_json_printer_int64_vector_field@@Base+0x100>
  426d88:	mov    rax,QWORD PTR [r12+0x28]
  426d8d:	lea    rdx,[rax+0x1]
  426d91:	mov    QWORD PTR [r12+0x28],rdx
  426d96:	mov    BYTE PTR [rax],0xa
  426d99:	movzx  esi,BYTE PTR [r12+0x31]
  426d9f:	mov    rdi,QWORD PTR [r12+0x28]
  426da4:	imul   esi,DWORD PTR [r12+0x38]
  426daa:	movsxd rbp,esi
  426dad:	lea    rax,[rdi+rbp*1]
  426db1:	cmp    QWORD PTR [r12+0x20],rax
  426db6:	jb     426e18 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
  426db8:	mov    rdx,rbp
  426dbb:	mov    esi,0x20
  426dc0:	call   405090 <memset@plt>
  426dc5:	mov    rdi,QWORD PTR [r13+0x0]
  426dc9:	mov    rsi,rbp
  426dcc:	add    rsi,QWORD PTR [r12+0x28]
  426dd1:	mov    rbp,rdi
  426dd4:	shr    rbp,0x3f
  426dd8:	test   rdi,rdi
  426ddb:	mov    QWORD PTR [r12+0x28],rsi
  426de0:	jns    426d54 <flatcc_json_printer_int64_vector_field@@Base+0x124>
  426de6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426df0:	mov    BYTE PTR [rsi],0x2d
  426df3:	neg    rdi
  426df6:	add    rsi,0x1
  426dfa:	jmp    426d54 <flatcc_json_printer_int64_vector_field@@Base+0x124>
  426dff:	nop
  426e00:	xor    esi,esi
  426e02:	mov    rdi,r12
  426e05:	call   QWORD PTR [r12+0x48]
  426e0a:	mov    rsi,QWORD PTR [r12+0x28]
  426e0f:	jmp    426d40 <flatcc_json_printer_int64_vector_field@@Base+0x110>
  426e14:	nop    DWORD PTR [rax+0x0]
  426e18:	mov    rsi,rbp
  426e1b:	mov    rdi,r12
  426e1e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426e23:	mov    rsi,QWORD PTR [r12+0x28]
  426e28:	jmp    426d40 <flatcc_json_printer_int64_vector_field@@Base+0x110>
  426e2d:	nop    DWORD PTR [rax]
  426e30:	lea    rdx,[rax+0x1]
  426e34:	mov    QWORD PTR [r12+0x28],rdx
  426e39:	mov    BYTE PTR [rax],0xa
  426e3c:	mov    eax,DWORD PTR [r12+0x38]
  426e41:	mov    rdi,QWORD PTR [r12+0x28]
  426e46:	lea    ebx,[rax-0x1]
  426e49:	movzx  eax,BYTE PTR [r12+0x31]
  426e4f:	mov    DWORD PTR [r12+0x38],ebx
  426e54:	imul   eax,ebx
  426e57:	movsxd rbx,eax
  426e5a:	lea    rax,[rdi+rbx*1]
  426e5e:	cmp    QWORD PTR [r12+0x20],rax
  426e63:	jb     426e80 <flatcc_json_printer_int64_vector_field@@Base+0x250>
  426e65:	mov    rdx,rbx
  426e68:	mov    esi,0x20
  426e6d:	call   405090 <memset@plt>
  426e72:	mov    rax,rbx
  426e75:	add    rax,QWORD PTR [r12+0x28]
  426e7a:	jmp    426cb6 <flatcc_json_printer_int64_vector_field@@Base+0x86>
  426e7f:	nop
  426e80:	mov    rsi,rbx
  426e83:	mov    rdi,r12
  426e86:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  426e8b:	mov    rax,QWORD PTR [r12+0x28]
  426e90:	jmp    426cb6 <flatcc_json_printer_int64_vector_field@@Base+0x86>
  426e95:	nop    DWORD PTR [rax]
  426e98:	mov    rax,QWORD PTR [r12+0x28]
  426e9d:	mov    rdi,r12
  426ea0:	lea    rdx,[rax+0x1]
  426ea4:	mov    QWORD PTR [r12+0x28],rdx
  426ea9:	mov    BYTE PTR [rax],0xa
  426eac:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  426eb1:	mov    rdi,QWORD PTR [rbx+0x4]
  426eb5:	mov    rsi,QWORD PTR [r12+0x28]
  426eba:	mov    r13,rdi
  426ebd:	shr    r13,0x3f
  426ec1:	test   rdi,rdi
  426ec4:	jns    426d00 <flatcc_json_printer_int64_vector_field@@Base+0xd0>
  426eca:	mov    BYTE PTR [rsi],0x2d
  426ecd:	neg    rdi
  426ed0:	add    rsi,0x1
  426ed4:	jmp    426d00 <flatcc_json_printer_int64_vector_field@@Base+0xd0>
  426ed9:	nop    DWORD PTR [rax+0x0]
  426ee0:	xor    esi,esi
  426ee2:	mov    rdi,r12
  426ee5:	call   QWORD PTR [r12+0x48]
  426eea:	mov    rsi,QWORD PTR [r12+0x28]
  426eef:	jmp    426cec <flatcc_json_printer_int64_vector_field@@Base+0xbc>
  426ef4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  426eff:	nop

0000000000426f00 <flatcc_json_printer_bool_vector_field@@Base>:
  426f00:	lea    eax,[rdx+rdx*1+0x4]
  426f04:	cmp    eax,DWORD PTR [rsi+0x10]
  426f07:	jge    427022 <flatcc_json_printer_bool_vector_field@@Base+0x122>
  426f0d:	push   r15
  426f0f:	push   r14
  426f11:	push   r13
  426f13:	push   r12
  426f15:	push   rbp
  426f16:	push   rbx
  426f17:	sub    rsp,0x8
  426f1b:	mov    rdx,QWORD PTR [rsi+0x8]
  426f1f:	movzx  ebp,WORD PTR [rdx+rax*1]
  426f23:	test   bp,bp
  426f26:	je     427014 <flatcc_json_printer_bool_vector_field@@Base+0x114>
  426f2c:	add    rbp,QWORD PTR [rsi]
  426f2f:	je     427014 <flatcc_json_printer_bool_vector_field@@Base+0x114>
  426f35:	mov    eax,DWORD PTR [rsi+0x18]
  426f38:	lea    edx,[rax+0x1]
  426f3b:	test   eax,eax
  426f3d:	mov    DWORD PTR [rsi+0x18],edx
  426f40:	je     426f51 <flatcc_json_printer_bool_vector_field@@Base+0x51>
  426f42:	mov    rax,QWORD PTR [rdi+0x28]
  426f46:	lea    rdx,[rax+0x1]
  426f4a:	mov    QWORD PTR [rdi+0x28],rdx
  426f4e:	mov    BYTE PTR [rax],0x2c
  426f51:	mov    eax,DWORD PTR [rbp+0x0]
  426f54:	mov    r15,rcx
  426f57:	mov    rbx,rdi
  426f5a:	movsxd r13,r8d
  426f5d:	add    rbp,rax
  426f60:	cmp    BYTE PTR [rdi+0x31],0x0
  426f64:	mov    rax,QWORD PTR [rdi+0x28]
  426f68:	mov    r12d,DWORD PTR [rbp+0x0]
  426f6c:	jne    427198 <flatcc_json_printer_bool_vector_field@@Base+0x298>
  426f72:	cmp    rax,QWORD PTR [rdi+0x20]
  426f76:	jb     426f81 <flatcc_json_printer_bool_vector_field@@Base+0x81>
  426f78:	xor    esi,esi
  426f7a:	call   QWORD PTR [rdi+0x48]
  426f7d:	mov    rax,QWORD PTR [rbx+0x28]
  426f81:	mov    BYTE PTR [rax],0x22
  426f84:	xor    edi,edi
  426f86:	cmp    BYTE PTR [rbx+0x32],0x0
  426f8a:	mov    rdx,r13
  426f8d:	mov    rsi,r15
  426f90:	sete   dil
  426f94:	add    rdi,QWORD PTR [rbx+0x28]
  426f98:	lea    rax,[rdi+r13*1]
  426f9c:	cmp    QWORD PTR [rbx+0x20],rax
  426fa0:	mov    QWORD PTR [rbx+0x28],rdi
  426fa4:	ja     427120 <flatcc_json_printer_bool_vector_field@@Base+0x220>
  426faa:	mov    rdi,rbx
  426fad:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  426fb2:	mov    r13,QWORD PTR [rbx+0x28]
  426fb6:	mov    BYTE PTR [r13+0x0],0x22
  426fbb:	xor    eax,eax
  426fbd:	cmp    BYTE PTR [rbx+0x32],0x0
  426fc1:	sete   al
  426fc4:	add    rax,QWORD PTR [rbx+0x28]
  426fc8:	lea    rdx,[rax+0x1]
  426fcc:	mov    QWORD PTR [rbx+0x28],rdx
  426fd0:	mov    BYTE PTR [rax],0x3a
  426fd3:	mov    rax,QWORD PTR [rbx+0x28]
  426fd7:	mov    BYTE PTR [rax],0x20
  426fda:	xor    eax,eax
  426fdc:	cmp    BYTE PTR [rbx+0x31],0x0
  426fe0:	setne  al
  426fe3:	add    rax,QWORD PTR [rbx+0x28]
  426fe7:	add    DWORD PTR [rbx+0x38],0x1
  426feb:	test   r12d,r12d
  426fee:	lea    rdx,[rax+0x1]
  426ff2:	mov    QWORD PTR [rbx+0x28],rdx
  426ff6:	mov    BYTE PTR [rax],0x5b
  426ff9:	jne    427028 <flatcc_json_printer_bool_vector_field@@Base+0x128>
  426ffb:	mov    rax,QWORD PTR [rbx+0x28]
  426fff:	cmp    BYTE PTR [rbx+0x31],0x0
  427003:	jne    427138 <flatcc_json_printer_bool_vector_field@@Base+0x238>
  427009:	lea    rdx,[rax+0x1]
  42700d:	mov    QWORD PTR [rbx+0x28],rdx
  427011:	mov    BYTE PTR [rax],0x5d
  427014:	add    rsp,0x8
  427018:	pop    rbx
  427019:	pop    rbp
  42701a:	pop    r12
  42701c:	pop    r13
  42701e:	pop    r14
  427020:	pop    r15
  427022:	repz ret 
  427024:	nop    DWORD PTR [rax+0x0]
  427028:	cmp    BYTE PTR [rbx+0x31],0x0
  42702c:	jne    4271e0 <flatcc_json_printer_bool_vector_field@@Base+0x2e0>
  427032:	mov    rsi,QWORD PTR [rbx+0x28]
  427036:	cmp    rsi,QWORD PTR [rbx+0x20]
  42703a:	jae    427200 <flatcc_json_printer_bool_vector_field@@Base+0x300>
  427040:	movzx  edi,BYTE PTR [rbp+0x4]
  427044:	lea    r13,[rbp+0x5]
  427048:	call   4200d0 <flatcc_json_parser_table_as_root@@Base+0xe70>
  42704d:	cdqe   
  42704f:	add    rax,QWORD PTR [rbx+0x28]
  427053:	cmp    r12d,0x1
  427057:	lea    edx,[r12-0x2]
  42705c:	mov    QWORD PTR [rbx+0x28],rax
  427060:	je     426fff <flatcc_json_printer_bool_vector_field@@Base+0xff>
  427062:	lea    rbp,[rbp+rdx*1+0x6]
  427067:	jmp    42709b <flatcc_json_printer_bool_vector_field@@Base+0x19b>
  427069:	nop    DWORD PTR [rax+0x0]
  427070:	mov    rsi,QWORD PTR [rbx+0x28]
  427074:	cmp    rsi,QWORD PTR [rbx+0x20]
  427078:	jae    4270f0 <flatcc_json_printer_bool_vector_field@@Base+0x1f0>
  42707a:	movzx  edi,BYTE PTR [r13+0x0]
  42707f:	add    r13,0x1
  427083:	call   4200d0 <flatcc_json_parser_table_as_root@@Base+0xe70>
  427088:	cdqe   
  42708a:	add    rax,QWORD PTR [rbx+0x28]
  42708e:	cmp    r13,rbp
  427091:	mov    QWORD PTR [rbx+0x28],rax
  427095:	je     426fff <flatcc_json_printer_bool_vector_field@@Base+0xff>
  42709b:	lea    rdx,[rax+0x1]
  42709f:	mov    QWORD PTR [rbx+0x28],rdx
  4270a3:	mov    BYTE PTR [rax],0x2c
  4270a6:	cmp    BYTE PTR [rbx+0x31],0x0
  4270aa:	je     427070 <flatcc_json_printer_bool_vector_field@@Base+0x170>
  4270ac:	mov    rax,QWORD PTR [rbx+0x28]
  4270b0:	lea    rdx,[rax+0x1]
  4270b4:	mov    QWORD PTR [rbx+0x28],rdx
  4270b8:	mov    BYTE PTR [rax],0xa
  4270bb:	movzx  esi,BYTE PTR [rbx+0x31]
  4270bf:	mov    rdi,QWORD PTR [rbx+0x28]
  4270c3:	imul   esi,DWORD PTR [rbx+0x38]
  4270c7:	movsxd r12,esi
  4270ca:	lea    rax,[rdi+r12*1]
  4270ce:	cmp    QWORD PTR [rbx+0x20],rax
  4270d2:	jb     427108 <flatcc_json_printer_bool_vector_field@@Base+0x208>
  4270d4:	mov    esi,0x20
  4270d9:	mov    rdx,r12
  4270dc:	call   405090 <memset@plt>
  4270e1:	mov    rsi,r12
  4270e4:	add    rsi,QWORD PTR [rbx+0x28]
  4270e8:	mov    QWORD PTR [rbx+0x28],rsi
  4270ec:	jmp    42707a <flatcc_json_printer_bool_vector_field@@Base+0x17a>
  4270ee:	xchg   ax,ax
  4270f0:	xor    esi,esi
  4270f2:	mov    rdi,rbx
  4270f5:	call   QWORD PTR [rbx+0x48]
  4270f8:	mov    rsi,QWORD PTR [rbx+0x28]
  4270fc:	jmp    42707a <flatcc_json_printer_bool_vector_field@@Base+0x17a>
  427101:	nop    DWORD PTR [rax+0x0]
  427108:	mov    rsi,r12
  42710b:	mov    rdi,rbx
  42710e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427113:	mov    rsi,QWORD PTR [rbx+0x28]
  427117:	jmp    42707a <flatcc_json_printer_bool_vector_field@@Base+0x17a>
  42711c:	nop    DWORD PTR [rax+0x0]
  427120:	call   4050e0 <memcpy@plt>
  427125:	add    r13,QWORD PTR [rbx+0x28]
  427129:	mov    QWORD PTR [rbx+0x28],r13
  42712d:	jmp    426fb6 <flatcc_json_printer_bool_vector_field@@Base+0xb6>
  427132:	nop    WORD PTR [rax+rax*1+0x0]
  427138:	lea    rdx,[rax+0x1]
  42713c:	mov    QWORD PTR [rbx+0x28],rdx
  427140:	mov    BYTE PTR [rax],0xa
  427143:	mov    eax,DWORD PTR [rbx+0x38]
  427146:	mov    rdi,QWORD PTR [rbx+0x28]
  42714a:	lea    ebp,[rax-0x1]
  42714d:	movzx  eax,BYTE PTR [rbx+0x31]
  427151:	mov    DWORD PTR [rbx+0x38],ebp
  427154:	imul   eax,ebp
  427157:	movsxd rbp,eax
  42715a:	lea    rax,[rdi+rbp*1]
  42715e:	cmp    QWORD PTR [rbx+0x20],rax
  427162:	jb     427180 <flatcc_json_printer_bool_vector_field@@Base+0x280>
  427164:	mov    rdx,rbp
  427167:	mov    esi,0x20
  42716c:	call   405090 <memset@plt>
  427171:	mov    rax,rbp
  427174:	add    rax,QWORD PTR [rbx+0x28]
  427178:	jmp    427009 <flatcc_json_printer_bool_vector_field@@Base+0x109>
  42717d:	nop    DWORD PTR [rax]
  427180:	mov    rsi,rbp
  427183:	mov    rdi,rbx
  427186:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42718b:	mov    rax,QWORD PTR [rbx+0x28]
  42718f:	jmp    427009 <flatcc_json_printer_bool_vector_field@@Base+0x109>
  427194:	nop    DWORD PTR [rax+0x0]
  427198:	lea    rdx,[rax+0x1]
  42719c:	mov    QWORD PTR [rdi+0x28],rdx
  4271a0:	mov    BYTE PTR [rax],0xa
  4271a3:	movzx  eax,BYTE PTR [rdi+0x31]
  4271a7:	imul   eax,DWORD PTR [rdi+0x38]
  4271ab:	mov    rdi,QWORD PTR [rdi+0x28]
  4271af:	movsxd r14,eax
  4271b2:	lea    rax,[rdi+r14*1]
  4271b6:	cmp    QWORD PTR [rbx+0x20],rax
  4271ba:	jb     427211 <flatcc_json_printer_bool_vector_field@@Base+0x311>
  4271bc:	mov    rdx,r14
  4271bf:	mov    esi,0x20
  4271c4:	call   405090 <memset@plt>
  4271c9:	mov    rax,r14
  4271cc:	add    rax,QWORD PTR [rbx+0x28]
  4271d0:	mov    QWORD PTR [rbx+0x28],rax
  4271d4:	jmp    426f81 <flatcc_json_printer_bool_vector_field@@Base+0x81>
  4271d9:	nop    DWORD PTR [rax+0x0]
  4271e0:	mov    rax,QWORD PTR [rbx+0x28]
  4271e4:	mov    rdi,rbx
  4271e7:	lea    rdx,[rax+0x1]
  4271eb:	mov    QWORD PTR [rbx+0x28],rdx
  4271ef:	mov    BYTE PTR [rax],0xa
  4271f2:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4271f7:	mov    rsi,QWORD PTR [rbx+0x28]
  4271fb:	jmp    427040 <flatcc_json_printer_bool_vector_field@@Base+0x140>
  427200:	xor    esi,esi
  427202:	mov    rdi,rbx
  427205:	call   QWORD PTR [rbx+0x48]
  427208:	mov    rsi,QWORD PTR [rbx+0x28]
  42720c:	jmp    427040 <flatcc_json_printer_bool_vector_field@@Base+0x140>
  427211:	mov    rsi,r14
  427214:	mov    rdi,rbx
  427217:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42721c:	mov    rax,QWORD PTR [rbx+0x28]
  427220:	jmp    426f81 <flatcc_json_printer_bool_vector_field@@Base+0x81>
  427225:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000427230 <flatcc_json_printer_float_vector_field@@Base>:
  427230:	lea    eax,[rdx+rdx*1+0x4]
  427234:	cmp    eax,DWORD PTR [rsi+0x10]
  427237:	jge    4272c8 <flatcc_json_printer_float_vector_field@@Base+0x98>
  42723d:	push   r13
  42723f:	push   r12
  427241:	push   rbp
  427242:	push   rbx
  427243:	sub    rsp,0x8
  427247:	mov    rdx,QWORD PTR [rsi+0x8]
  42724b:	movzx  ebp,WORD PTR [rdx+rax*1]
  42724f:	test   bp,bp
  427252:	je     4272be <flatcc_json_printer_float_vector_field@@Base+0x8e>
  427254:	add    rbp,QWORD PTR [rsi]
  427257:	je     4272be <flatcc_json_printer_float_vector_field@@Base+0x8e>
  427259:	mov    eax,DWORD PTR [rsi+0x18]
  42725c:	lea    edx,[rax+0x1]
  42725f:	test   eax,eax
  427261:	mov    DWORD PTR [rsi+0x18],edx
  427264:	je     427275 <flatcc_json_printer_float_vector_field@@Base+0x45>
  427266:	mov    rax,QWORD PTR [rdi+0x28]
  42726a:	lea    rdx,[rax+0x1]
  42726e:	mov    QWORD PTR [rdi+0x28],rdx
  427272:	mov    BYTE PTR [rax],0x2c
  427275:	mov    eax,DWORD PTR [rbp+0x0]
  427278:	mov    rbx,rdi
  42727b:	movsxd rdx,r8d
  42727e:	mov    rsi,rcx
  427281:	add    rbp,rax
  427284:	mov    r12d,DWORD PTR [rbp+0x0]
  427288:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  42728d:	mov    rax,QWORD PTR [rbx+0x28]
  427291:	add    DWORD PTR [rbx+0x38],0x1
  427295:	test   r12d,r12d
  427298:	lea    rdx,[rax+0x1]
  42729c:	mov    QWORD PTR [rbx+0x28],rdx
  4272a0:	mov    BYTE PTR [rax],0x5b
  4272a3:	jne    4272d0 <flatcc_json_printer_float_vector_field@@Base+0xa0>
  4272a5:	mov    rax,QWORD PTR [rbx+0x28]
  4272a9:	cmp    BYTE PTR [rbx+0x31],0x0
  4272ad:	jne    4273d8 <flatcc_json_printer_float_vector_field@@Base+0x1a8>
  4272b3:	lea    rdx,[rax+0x1]
  4272b7:	mov    QWORD PTR [rbx+0x28],rdx
  4272bb:	mov    BYTE PTR [rax],0x5d
  4272be:	add    rsp,0x8
  4272c2:	pop    rbx
  4272c3:	pop    rbp
  4272c4:	pop    r12
  4272c6:	pop    r13
  4272c8:	repz ret 
  4272ca:	nop    WORD PTR [rax+rax*1+0x0]
  4272d0:	cmp    BYTE PTR [rbx+0x31],0x0
  4272d4:	jne    427438 <flatcc_json_printer_float_vector_field@@Base+0x208>
  4272da:	mov    rdi,QWORD PTR [rbx+0x28]
  4272de:	cmp    rdi,QWORD PTR [rbx+0x20]
  4272e2:	jae    427460 <flatcc_json_printer_float_vector_field@@Base+0x230>
  4272e8:	vxorpd xmm0,xmm0,xmm0
  4272ec:	lea    r13,[rbp+0x8]
  4272f0:	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp+0x4]
  4272f5:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  4272fa:	cdqe   
  4272fc:	add    rax,QWORD PTR [rbx+0x28]
  427300:	cmp    r12d,0x1
  427304:	lea    edx,[r12-0x2]
  427309:	mov    QWORD PTR [rbx+0x28],rax
  42730d:	je     4272a9 <flatcc_json_printer_float_vector_field@@Base+0x79>
  42730f:	lea    rbp,[rbp+rdx*4+0xc]
  427314:	jmp    427350 <flatcc_json_printer_float_vector_field@@Base+0x120>
  427316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427320:	mov    rdi,QWORD PTR [rbx+0x28]
  427324:	cmp    rdi,QWORD PTR [rbx+0x20]
  427328:	jae    4273a8 <flatcc_json_printer_float_vector_field@@Base+0x178>
  42732a:	vxorpd xmm0,xmm0,xmm0
  42732e:	add    r13,0x4
  427332:	vcvtss2sd xmm0,xmm0,DWORD PTR [r13-0x4]
  427338:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  42733d:	cdqe   
  42733f:	add    rax,QWORD PTR [rbx+0x28]
  427343:	cmp    r13,rbp
  427346:	mov    QWORD PTR [rbx+0x28],rax
  42734a:	je     4272a9 <flatcc_json_printer_float_vector_field@@Base+0x79>
  427350:	lea    rdx,[rax+0x1]
  427354:	mov    QWORD PTR [rbx+0x28],rdx
  427358:	mov    BYTE PTR [rax],0x2c
  42735b:	cmp    BYTE PTR [rbx+0x31],0x0
  42735f:	je     427320 <flatcc_json_printer_float_vector_field@@Base+0xf0>
  427361:	mov    rax,QWORD PTR [rbx+0x28]
  427365:	lea    rdx,[rax+0x1]
  427369:	mov    QWORD PTR [rbx+0x28],rdx
  42736d:	mov    BYTE PTR [rax],0xa
  427370:	movzx  edi,BYTE PTR [rbx+0x31]
  427374:	imul   edi,DWORD PTR [rbx+0x38]
  427378:	movsxd r12,edi
  42737b:	mov    rdi,QWORD PTR [rbx+0x28]
  42737f:	lea    rax,[rdi+r12*1]
  427383:	cmp    QWORD PTR [rbx+0x20],rax
  427387:	jb     4273c0 <flatcc_json_printer_float_vector_field@@Base+0x190>
  427389:	mov    rdx,r12
  42738c:	mov    esi,0x20
  427391:	call   405090 <memset@plt>
  427396:	mov    rdi,r12
  427399:	add    rdi,QWORD PTR [rbx+0x28]
  42739d:	mov    QWORD PTR [rbx+0x28],rdi
  4273a1:	jmp    42732a <flatcc_json_printer_float_vector_field@@Base+0xfa>
  4273a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4273a8:	mov    rdi,rbx
  4273ab:	xor    esi,esi
  4273ad:	call   QWORD PTR [rbx+0x48]
  4273b0:	mov    rdi,QWORD PTR [rbx+0x28]
  4273b4:	jmp    42732a <flatcc_json_printer_float_vector_field@@Base+0xfa>
  4273b9:	nop    DWORD PTR [rax+0x0]
  4273c0:	mov    rdi,rbx
  4273c3:	mov    rsi,r12
  4273c6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4273cb:	mov    rdi,QWORD PTR [rbx+0x28]
  4273cf:	jmp    42732a <flatcc_json_printer_float_vector_field@@Base+0xfa>
  4273d4:	nop    DWORD PTR [rax+0x0]
  4273d8:	lea    rdx,[rax+0x1]
  4273dc:	mov    QWORD PTR [rbx+0x28],rdx
  4273e0:	mov    BYTE PTR [rax],0xa
  4273e3:	mov    eax,DWORD PTR [rbx+0x38]
  4273e6:	mov    rdi,QWORD PTR [rbx+0x28]
  4273ea:	lea    ebp,[rax-0x1]
  4273ed:	movzx  eax,BYTE PTR [rbx+0x31]
  4273f1:	mov    DWORD PTR [rbx+0x38],ebp
  4273f4:	imul   eax,ebp
  4273f7:	movsxd rbp,eax
  4273fa:	lea    rax,[rdi+rbp*1]
  4273fe:	cmp    QWORD PTR [rbx+0x20],rax
  427402:	jb     427420 <flatcc_json_printer_float_vector_field@@Base+0x1f0>
  427404:	mov    rdx,rbp
  427407:	mov    esi,0x20
  42740c:	call   405090 <memset@plt>
  427411:	mov    rax,rbp
  427414:	add    rax,QWORD PTR [rbx+0x28]
  427418:	jmp    4272b3 <flatcc_json_printer_float_vector_field@@Base+0x83>
  42741d:	nop    DWORD PTR [rax]
  427420:	mov    rsi,rbp
  427423:	mov    rdi,rbx
  427426:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42742b:	mov    rax,QWORD PTR [rbx+0x28]
  42742f:	jmp    4272b3 <flatcc_json_printer_float_vector_field@@Base+0x83>
  427434:	nop    DWORD PTR [rax+0x0]
  427438:	mov    rax,QWORD PTR [rbx+0x28]
  42743c:	mov    rdi,rbx
  42743f:	lea    rdx,[rax+0x1]
  427443:	mov    QWORD PTR [rbx+0x28],rdx
  427447:	mov    BYTE PTR [rax],0xa
  42744a:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  42744f:	mov    rdi,QWORD PTR [rbx+0x28]
  427453:	jmp    4272e8 <flatcc_json_printer_float_vector_field@@Base+0xb8>
  427458:	nop    DWORD PTR [rax+rax*1+0x0]
  427460:	mov    rdi,rbx
  427463:	xor    esi,esi
  427465:	call   QWORD PTR [rbx+0x48]
  427468:	mov    rdi,QWORD PTR [rbx+0x28]
  42746c:	jmp    4272e8 <flatcc_json_printer_float_vector_field@@Base+0xb8>
  427471:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42747c:	nop    DWORD PTR [rax+0x0]

0000000000427480 <flatcc_json_printer_double_vector_field@@Base>:
  427480:	lea    eax,[rdx+rdx*1+0x4]
  427484:	cmp    eax,DWORD PTR [rsi+0x10]
  427487:	jge    42751a <flatcc_json_printer_double_vector_field@@Base+0x9a>
  42748d:	push   r13
  42748f:	push   r12
  427491:	push   rbp
  427492:	push   rbx
  427493:	sub    rsp,0x8
  427497:	mov    rdx,QWORD PTR [rsi+0x8]
  42749b:	movzx  r12d,WORD PTR [rdx+rax*1]
  4274a0:	test   r12w,r12w
  4274a4:	je     427510 <flatcc_json_printer_double_vector_field@@Base+0x90>
  4274a6:	add    r12,QWORD PTR [rsi]
  4274a9:	je     427510 <flatcc_json_printer_double_vector_field@@Base+0x90>
  4274ab:	mov    eax,DWORD PTR [rsi+0x18]
  4274ae:	lea    edx,[rax+0x1]
  4274b1:	test   eax,eax
  4274b3:	mov    DWORD PTR [rsi+0x18],edx
  4274b6:	je     4274c7 <flatcc_json_printer_double_vector_field@@Base+0x47>
  4274b8:	mov    rax,QWORD PTR [rdi+0x28]
  4274bc:	lea    rdx,[rax+0x1]
  4274c0:	mov    QWORD PTR [rdi+0x28],rdx
  4274c4:	mov    BYTE PTR [rax],0x2c
  4274c7:	mov    eax,DWORD PTR [r12]
  4274cb:	mov    rbx,rdi
  4274ce:	movsxd rdx,r8d
  4274d1:	mov    rsi,rcx
  4274d4:	add    r12,rax
  4274d7:	mov    ebp,DWORD PTR [r12]
  4274db:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  4274e0:	mov    rax,QWORD PTR [rbx+0x28]
  4274e4:	add    DWORD PTR [rbx+0x38],0x1
  4274e8:	test   ebp,ebp
  4274ea:	lea    rdx,[rax+0x1]
  4274ee:	mov    QWORD PTR [rbx+0x28],rdx
  4274f2:	mov    BYTE PTR [rax],0x5b
  4274f5:	jne    427520 <flatcc_json_printer_double_vector_field@@Base+0xa0>
  4274f7:	mov    rax,QWORD PTR [rbx+0x28]
  4274fb:	cmp    BYTE PTR [rbx+0x31],0x0
  4274ff:	jne    427620 <flatcc_json_printer_double_vector_field@@Base+0x1a0>
  427505:	lea    rdx,[rax+0x1]
  427509:	mov    QWORD PTR [rbx+0x28],rdx
  42750d:	mov    BYTE PTR [rax],0x5d
  427510:	add    rsp,0x8
  427514:	pop    rbx
  427515:	pop    rbp
  427516:	pop    r12
  427518:	pop    r13
  42751a:	repz ret 
  42751c:	nop    DWORD PTR [rax+0x0]
  427520:	cmp    BYTE PTR [rbx+0x31],0x0
  427524:	jne    427680 <flatcc_json_printer_double_vector_field@@Base+0x200>
  42752a:	mov    rdi,QWORD PTR [rbx+0x28]
  42752e:	cmp    rdi,QWORD PTR [rbx+0x20]
  427532:	jae    4276a0 <flatcc_json_printer_double_vector_field@@Base+0x220>
  427538:	vmovsd xmm0,QWORD PTR [r12+0x4]
  42753f:	lea    r13,[r12+0xc]
  427544:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  427549:	cdqe   
  42754b:	add    rax,QWORD PTR [rbx+0x28]
  42754f:	cmp    ebp,0x1
  427552:	lea    edx,[rbp-0x2]
  427555:	mov    QWORD PTR [rbx+0x28],rax
  427559:	je     4274fb <flatcc_json_printer_double_vector_field@@Base+0x7b>
  42755b:	lea    rbp,[r12+rdx*8+0x14]
  427560:	jmp    427594 <flatcc_json_printer_double_vector_field@@Base+0x114>
  427562:	nop    WORD PTR [rax+rax*1+0x0]
  427568:	mov    rdi,QWORD PTR [rbx+0x28]
  42756c:	cmp    rdi,QWORD PTR [rbx+0x20]
  427570:	jae    4275f0 <flatcc_json_printer_double_vector_field@@Base+0x170>
  427572:	vmovsd xmm0,QWORD PTR [r13+0x0]
  427578:	add    r13,0x8
  42757c:	call   4202f0 <flatcc_json_parser_table_as_root@@Base+0x1090>
  427581:	cdqe   
  427583:	add    rax,QWORD PTR [rbx+0x28]
  427587:	cmp    r13,rbp
  42758a:	mov    QWORD PTR [rbx+0x28],rax
  42758e:	je     4274fb <flatcc_json_printer_double_vector_field@@Base+0x7b>
  427594:	lea    rdx,[rax+0x1]
  427598:	mov    QWORD PTR [rbx+0x28],rdx
  42759c:	mov    BYTE PTR [rax],0x2c
  42759f:	cmp    BYTE PTR [rbx+0x31],0x0
  4275a3:	je     427568 <flatcc_json_printer_double_vector_field@@Base+0xe8>
  4275a5:	mov    rax,QWORD PTR [rbx+0x28]
  4275a9:	lea    rdx,[rax+0x1]
  4275ad:	mov    QWORD PTR [rbx+0x28],rdx
  4275b1:	mov    BYTE PTR [rax],0xa
  4275b4:	movzx  edi,BYTE PTR [rbx+0x31]
  4275b8:	imul   edi,DWORD PTR [rbx+0x38]
  4275bc:	movsxd r12,edi
  4275bf:	mov    rdi,QWORD PTR [rbx+0x28]
  4275c3:	lea    rax,[rdi+r12*1]
  4275c7:	cmp    QWORD PTR [rbx+0x20],rax
  4275cb:	jb     427608 <flatcc_json_printer_double_vector_field@@Base+0x188>
  4275cd:	mov    rdx,r12
  4275d0:	mov    esi,0x20
  4275d5:	call   405090 <memset@plt>
  4275da:	mov    rdi,r12
  4275dd:	add    rdi,QWORD PTR [rbx+0x28]
  4275e1:	mov    QWORD PTR [rbx+0x28],rdi
  4275e5:	jmp    427572 <flatcc_json_printer_double_vector_field@@Base+0xf2>
  4275e7:	nop    WORD PTR [rax+rax*1+0x0]
  4275f0:	mov    rdi,rbx
  4275f3:	xor    esi,esi
  4275f5:	call   QWORD PTR [rbx+0x48]
  4275f8:	mov    rdi,QWORD PTR [rbx+0x28]
  4275fc:	jmp    427572 <flatcc_json_printer_double_vector_field@@Base+0xf2>
  427601:	nop    DWORD PTR [rax+0x0]
  427608:	mov    rdi,rbx
  42760b:	mov    rsi,r12
  42760e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427613:	mov    rdi,QWORD PTR [rbx+0x28]
  427617:	jmp    427572 <flatcc_json_printer_double_vector_field@@Base+0xf2>
  42761c:	nop    DWORD PTR [rax+0x0]
  427620:	lea    rdx,[rax+0x1]
  427624:	mov    QWORD PTR [rbx+0x28],rdx
  427628:	mov    BYTE PTR [rax],0xa
  42762b:	mov    eax,DWORD PTR [rbx+0x38]
  42762e:	mov    rdi,QWORD PTR [rbx+0x28]
  427632:	lea    ebp,[rax-0x1]
  427635:	movzx  eax,BYTE PTR [rbx+0x31]
  427639:	mov    DWORD PTR [rbx+0x38],ebp
  42763c:	imul   eax,ebp
  42763f:	movsxd rbp,eax
  427642:	lea    rax,[rdi+rbp*1]
  427646:	cmp    QWORD PTR [rbx+0x20],rax
  42764a:	jb     427668 <flatcc_json_printer_double_vector_field@@Base+0x1e8>
  42764c:	mov    rdx,rbp
  42764f:	mov    esi,0x20
  427654:	call   405090 <memset@plt>
  427659:	mov    rax,rbp
  42765c:	add    rax,QWORD PTR [rbx+0x28]
  427660:	jmp    427505 <flatcc_json_printer_double_vector_field@@Base+0x85>
  427665:	nop    DWORD PTR [rax]
  427668:	mov    rsi,rbp
  42766b:	mov    rdi,rbx
  42766e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427673:	mov    rax,QWORD PTR [rbx+0x28]
  427677:	jmp    427505 <flatcc_json_printer_double_vector_field@@Base+0x85>
  42767c:	nop    DWORD PTR [rax+0x0]
  427680:	mov    rax,QWORD PTR [rbx+0x28]
  427684:	mov    rdi,rbx
  427687:	lea    rdx,[rax+0x1]
  42768b:	mov    QWORD PTR [rbx+0x28],rdx
  42768f:	mov    BYTE PTR [rax],0xa
  427692:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427697:	mov    rdi,QWORD PTR [rbx+0x28]
  42769b:	jmp    427538 <flatcc_json_printer_double_vector_field@@Base+0xb8>
  4276a0:	mov    rdi,rbx
  4276a3:	xor    esi,esi
  4276a5:	call   QWORD PTR [rbx+0x48]
  4276a8:	mov    rdi,QWORD PTR [rbx+0x28]
  4276ac:	jmp    427538 <flatcc_json_printer_double_vector_field@@Base+0xb8>
  4276b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4276bc:	nop    DWORD PTR [rax+0x0]

00000000004276c0 <flatcc_json_printer_utype_enum_vector_field@@Base>:
  4276c0:	cmp    BYTE PTR [rdi+0x33],0x0
  4276c4:	jne    427830 <flatcc_json_printer_utype_enum_vector_field@@Base+0x170>
  4276ca:	lea    eax,[rdx+rdx*1+0x4]
  4276ce:	cmp    eax,DWORD PTR [rsi+0x10]
  4276d1:	jl     4276d8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x18>
  4276d3:	ret    
  4276d4:	nop    DWORD PTR [rax+0x0]
  4276d8:	push   r14
  4276da:	push   r13
  4276dc:	push   r12
  4276de:	push   rbp
  4276df:	push   rbx
  4276e0:	mov    rdx,QWORD PTR [rsi+0x8]
  4276e4:	movzx  r12d,WORD PTR [rdx+rax*1]
  4276e9:	test   r12w,r12w
  4276ed:	je     42781d <flatcc_json_printer_utype_enum_vector_field@@Base+0x15d>
  4276f3:	add    r12,QWORD PTR [rsi]
  4276f6:	je     42781d <flatcc_json_printer_utype_enum_vector_field@@Base+0x15d>
  4276fc:	mov    eax,DWORD PTR [rsi+0x18]
  4276ff:	lea    edx,[rax+0x1]
  427702:	test   eax,eax
  427704:	mov    DWORD PTR [rsi+0x18],edx
  427707:	je     427718 <flatcc_json_printer_utype_enum_vector_field@@Base+0x58>
  427709:	mov    rax,QWORD PTR [rdi+0x28]
  42770d:	lea    rdx,[rax+0x1]
  427711:	mov    QWORD PTR [rdi+0x28],rdx
  427715:	mov    BYTE PTR [rax],0x2c
  427718:	mov    eax,DWORD PTR [r12]
  42771c:	mov    rbx,rdi
  42771f:	movsxd rdx,r8d
  427722:	mov    rsi,rcx
  427725:	mov    r13,r9
  427728:	add    r12,rax
  42772b:	mov    r14d,DWORD PTR [r12]
  42772f:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427734:	mov    rax,QWORD PTR [rbx+0x28]
  427738:	add    DWORD PTR [rbx+0x38],0x1
  42773c:	test   r14d,r14d
  42773f:	lea    rdx,[rax+0x1]
  427743:	mov    QWORD PTR [rbx+0x28],rdx
  427747:	mov    BYTE PTR [rax],0x5b
  42774a:	je     427808 <flatcc_json_printer_utype_enum_vector_field@@Base+0x148>
  427750:	cmp    BYTE PTR [rbx+0x31],0x0
  427754:	jne    4278b0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
  42775a:	mov    rax,QWORD PTR [rbx+0x20]
  42775e:	cmp    QWORD PTR [rbx+0x28],rax
  427762:	jae    4278e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x220>
  427768:	movzx  esi,BYTE PTR [r12+0x4]
  42776e:	mov    rdi,rbx
  427771:	lea    rbp,[r12+0x5]
  427776:	call   r13
  427779:	cmp    r14d,0x1
  42777d:	lea    eax,[r14-0x2]
  427781:	je     427808 <flatcc_json_printer_utype_enum_vector_field@@Base+0x148>
  427787:	lea    r14,[r12+rax*1+0x6]
  42778c:	jmp    4277b1 <flatcc_json_printer_utype_enum_vector_field@@Base+0xf1>
  42778e:	xchg   ax,ax
  427790:	mov    rax,QWORD PTR [rbx+0x20]
  427794:	cmp    QWORD PTR [rbx+0x28],rax
  427798:	jae    427838 <flatcc_json_printer_utype_enum_vector_field@@Base+0x178>
  42779e:	movzx  esi,BYTE PTR [rbp+0x0]
  4277a2:	add    rbp,0x1
  4277a6:	mov    rdi,rbx
  4277a9:	call   r13
  4277ac:	cmp    rbp,r14
  4277af:	je     427808 <flatcc_json_printer_utype_enum_vector_field@@Base+0x148>
  4277b1:	mov    rax,QWORD PTR [rbx+0x28]
  4277b5:	lea    rdx,[rax+0x1]
  4277b9:	mov    QWORD PTR [rbx+0x28],rdx
  4277bd:	mov    BYTE PTR [rax],0x2c
  4277c0:	cmp    BYTE PTR [rbx+0x31],0x0
  4277c4:	je     427790 <flatcc_json_printer_utype_enum_vector_field@@Base+0xd0>
  4277c6:	mov    rax,QWORD PTR [rbx+0x28]
  4277ca:	lea    rdx,[rax+0x1]
  4277ce:	mov    QWORD PTR [rbx+0x28],rdx
  4277d2:	mov    BYTE PTR [rax],0xa
  4277d5:	movzx  r12d,BYTE PTR [rbx+0x31]
  4277da:	mov    rdi,QWORD PTR [rbx+0x28]
  4277de:	imul   r12d,DWORD PTR [rbx+0x38]
  4277e3:	movsxd r12,r12d
  4277e6:	lea    rax,[rdi+r12*1]
  4277ea:	cmp    QWORD PTR [rbx+0x20],rax
  4277ee:	jb     427848 <flatcc_json_printer_utype_enum_vector_field@@Base+0x188>
  4277f0:	mov    rdx,r12
  4277f3:	mov    esi,0x20
  4277f8:	call   405090 <memset@plt>
  4277fd:	add    QWORD PTR [rbx+0x28],r12
  427801:	jmp    42779e <flatcc_json_printer_utype_enum_vector_field@@Base+0xde>
  427803:	nop    DWORD PTR [rax+rax*1+0x0]
  427808:	cmp    BYTE PTR [rbx+0x31],0x0
  42780c:	jne    427860 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1a0>
  42780e:	mov    rax,QWORD PTR [rbx+0x28]
  427812:	lea    rdx,[rax+0x1]
  427816:	mov    QWORD PTR [rbx+0x28],rdx
  42781a:	mov    BYTE PTR [rax],0x5d
  42781d:	pop    rbx
  42781e:	pop    rbp
  42781f:	pop    r12
  427821:	pop    r13
  427823:	pop    r14
  427825:	ret    
  427826:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427830:	jmp    425c90 <flatcc_json_printer_utype_vector_field@@Base>
  427835:	nop    DWORD PTR [rax]
  427838:	xor    esi,esi
  42783a:	mov    rdi,rbx
  42783d:	call   QWORD PTR [rbx+0x48]
  427840:	jmp    42779e <flatcc_json_printer_utype_enum_vector_field@@Base+0xde>
  427845:	nop    DWORD PTR [rax]
  427848:	mov    rsi,r12
  42784b:	mov    rdi,rbx
  42784e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427853:	jmp    42779e <flatcc_json_printer_utype_enum_vector_field@@Base+0xde>
  427858:	nop    DWORD PTR [rax+rax*1+0x0]
  427860:	mov    rax,QWORD PTR [rbx+0x28]
  427864:	lea    rdx,[rax+0x1]
  427868:	mov    QWORD PTR [rbx+0x28],rdx
  42786c:	mov    BYTE PTR [rax],0xa
  42786f:	mov    eax,DWORD PTR [rbx+0x38]
  427872:	mov    rdi,QWORD PTR [rbx+0x28]
  427876:	lea    ebp,[rax-0x1]
  427879:	movzx  eax,BYTE PTR [rbx+0x31]
  42787d:	mov    DWORD PTR [rbx+0x38],ebp
  427880:	imul   eax,ebp
  427883:	movsxd rbp,eax
  427886:	lea    rax,[rdi+rbp*1]
  42788a:	cmp    QWORD PTR [rbx+0x20],rax
  42788e:	jb     4278d0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x210>
  427890:	mov    rdx,rbp
  427893:	mov    esi,0x20
  427898:	call   405090 <memset@plt>
  42789d:	mov    rax,rbp
  4278a0:	add    rax,QWORD PTR [rbx+0x28]
  4278a4:	jmp    427812 <flatcc_json_printer_utype_enum_vector_field@@Base+0x152>
  4278a9:	nop    DWORD PTR [rax+0x0]
  4278b0:	mov    rax,QWORD PTR [rbx+0x28]
  4278b4:	mov    rdi,rbx
  4278b7:	lea    rdx,[rax+0x1]
  4278bb:	mov    QWORD PTR [rbx+0x28],rdx
  4278bf:	mov    BYTE PTR [rax],0xa
  4278c2:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4278c7:	jmp    427768 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa8>
  4278cc:	nop    DWORD PTR [rax+0x0]
  4278d0:	mov    rsi,rbp
  4278d3:	mov    rdi,rbx
  4278d6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4278db:	jmp    42780e <flatcc_json_printer_utype_enum_vector_field@@Base+0x14e>
  4278e0:	xor    esi,esi
  4278e2:	mov    rdi,rbx
  4278e5:	call   QWORD PTR [rbx+0x48]
  4278e8:	jmp    427768 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa8>
  4278ed:	nop    DWORD PTR [rax]

00000000004278f0 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
  4278f0:	cmp    BYTE PTR [rdi+0x33],0x0
  4278f4:	jne    427a60 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x170>
  4278fa:	lea    eax,[rdx+rdx*1+0x4]
  4278fe:	cmp    eax,DWORD PTR [rsi+0x10]
  427901:	jl     427908 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x18>
  427903:	ret    
  427904:	nop    DWORD PTR [rax+0x0]
  427908:	push   r14
  42790a:	push   r13
  42790c:	push   r12
  42790e:	push   rbp
  42790f:	push   rbx
  427910:	mov    rdx,QWORD PTR [rsi+0x8]
  427914:	movzx  r12d,WORD PTR [rdx+rax*1]
  427919:	test   r12w,r12w
  42791d:	je     427a4d <flatcc_json_printer_uint8_enum_vector_field@@Base+0x15d>
  427923:	add    r12,QWORD PTR [rsi]
  427926:	je     427a4d <flatcc_json_printer_uint8_enum_vector_field@@Base+0x15d>
  42792c:	mov    eax,DWORD PTR [rsi+0x18]
  42792f:	lea    edx,[rax+0x1]
  427932:	test   eax,eax
  427934:	mov    DWORD PTR [rsi+0x18],edx
  427937:	je     427948 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x58>
  427939:	mov    rax,QWORD PTR [rdi+0x28]
  42793d:	lea    rdx,[rax+0x1]
  427941:	mov    QWORD PTR [rdi+0x28],rdx
  427945:	mov    BYTE PTR [rax],0x2c
  427948:	mov    eax,DWORD PTR [r12]
  42794c:	mov    rbx,rdi
  42794f:	movsxd rdx,r8d
  427952:	mov    rsi,rcx
  427955:	mov    r13,r9
  427958:	add    r12,rax
  42795b:	mov    r14d,DWORD PTR [r12]
  42795f:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427964:	mov    rax,QWORD PTR [rbx+0x28]
  427968:	add    DWORD PTR [rbx+0x38],0x1
  42796c:	test   r14d,r14d
  42796f:	lea    rdx,[rax+0x1]
  427973:	mov    QWORD PTR [rbx+0x28],rdx
  427977:	mov    BYTE PTR [rax],0x5b
  42797a:	je     427a38 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x148>
  427980:	cmp    BYTE PTR [rbx+0x31],0x0
  427984:	jne    427ae0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
  42798a:	mov    rax,QWORD PTR [rbx+0x20]
  42798e:	cmp    QWORD PTR [rbx+0x28],rax
  427992:	jae    427b10 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x220>
  427998:	movzx  esi,BYTE PTR [r12+0x4]
  42799e:	mov    rdi,rbx
  4279a1:	lea    rbp,[r12+0x5]
  4279a6:	call   r13
  4279a9:	cmp    r14d,0x1
  4279ad:	lea    eax,[r14-0x2]
  4279b1:	je     427a38 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x148>
  4279b7:	lea    r14,[r12+rax*1+0x6]
  4279bc:	jmp    4279e1 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xf1>
  4279be:	xchg   ax,ax
  4279c0:	mov    rax,QWORD PTR [rbx+0x20]
  4279c4:	cmp    QWORD PTR [rbx+0x28],rax
  4279c8:	jae    427a68 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x178>
  4279ce:	movzx  esi,BYTE PTR [rbp+0x0]
  4279d2:	add    rbp,0x1
  4279d6:	mov    rdi,rbx
  4279d9:	call   r13
  4279dc:	cmp    rbp,r14
  4279df:	je     427a38 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x148>
  4279e1:	mov    rax,QWORD PTR [rbx+0x28]
  4279e5:	lea    rdx,[rax+0x1]
  4279e9:	mov    QWORD PTR [rbx+0x28],rdx
  4279ed:	mov    BYTE PTR [rax],0x2c
  4279f0:	cmp    BYTE PTR [rbx+0x31],0x0
  4279f4:	je     4279c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xd0>
  4279f6:	mov    rax,QWORD PTR [rbx+0x28]
  4279fa:	lea    rdx,[rax+0x1]
  4279fe:	mov    QWORD PTR [rbx+0x28],rdx
  427a02:	mov    BYTE PTR [rax],0xa
  427a05:	movzx  r12d,BYTE PTR [rbx+0x31]
  427a0a:	mov    rdi,QWORD PTR [rbx+0x28]
  427a0e:	imul   r12d,DWORD PTR [rbx+0x38]
  427a13:	movsxd r12,r12d
  427a16:	lea    rax,[rdi+r12*1]
  427a1a:	cmp    QWORD PTR [rbx+0x20],rax
  427a1e:	jb     427a78 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x188>
  427a20:	mov    rdx,r12
  427a23:	mov    esi,0x20
  427a28:	call   405090 <memset@plt>
  427a2d:	add    QWORD PTR [rbx+0x28],r12
  427a31:	jmp    4279ce <flatcc_json_printer_uint8_enum_vector_field@@Base+0xde>
  427a33:	nop    DWORD PTR [rax+rax*1+0x0]
  427a38:	cmp    BYTE PTR [rbx+0x31],0x0
  427a3c:	jne    427a90 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1a0>
  427a3e:	mov    rax,QWORD PTR [rbx+0x28]
  427a42:	lea    rdx,[rax+0x1]
  427a46:	mov    QWORD PTR [rbx+0x28],rdx
  427a4a:	mov    BYTE PTR [rax],0x5d
  427a4d:	pop    rbx
  427a4e:	pop    rbp
  427a4f:	pop    r12
  427a51:	pop    r13
  427a53:	pop    r14
  427a55:	ret    
  427a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a60:	jmp    425960 <flatcc_json_printer_uint8_vector_field@@Base>
  427a65:	nop    DWORD PTR [rax]
  427a68:	xor    esi,esi
  427a6a:	mov    rdi,rbx
  427a6d:	call   QWORD PTR [rbx+0x48]
  427a70:	jmp    4279ce <flatcc_json_printer_uint8_enum_vector_field@@Base+0xde>
  427a75:	nop    DWORD PTR [rax]
  427a78:	mov    rsi,r12
  427a7b:	mov    rdi,rbx
  427a7e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427a83:	jmp    4279ce <flatcc_json_printer_uint8_enum_vector_field@@Base+0xde>
  427a88:	nop    DWORD PTR [rax+rax*1+0x0]
  427a90:	mov    rax,QWORD PTR [rbx+0x28]
  427a94:	lea    rdx,[rax+0x1]
  427a98:	mov    QWORD PTR [rbx+0x28],rdx
  427a9c:	mov    BYTE PTR [rax],0xa
  427a9f:	mov    eax,DWORD PTR [rbx+0x38]
  427aa2:	mov    rdi,QWORD PTR [rbx+0x28]
  427aa6:	lea    ebp,[rax-0x1]
  427aa9:	movzx  eax,BYTE PTR [rbx+0x31]
  427aad:	mov    DWORD PTR [rbx+0x38],ebp
  427ab0:	imul   eax,ebp
  427ab3:	movsxd rbp,eax
  427ab6:	lea    rax,[rdi+rbp*1]
  427aba:	cmp    QWORD PTR [rbx+0x20],rax
  427abe:	jb     427b00 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x210>
  427ac0:	mov    rdx,rbp
  427ac3:	mov    esi,0x20
  427ac8:	call   405090 <memset@plt>
  427acd:	mov    rax,rbp
  427ad0:	add    rax,QWORD PTR [rbx+0x28]
  427ad4:	jmp    427a42 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x152>
  427ad9:	nop    DWORD PTR [rax+0x0]
  427ae0:	mov    rax,QWORD PTR [rbx+0x28]
  427ae4:	mov    rdi,rbx
  427ae7:	lea    rdx,[rax+0x1]
  427aeb:	mov    QWORD PTR [rbx+0x28],rdx
  427aef:	mov    BYTE PTR [rax],0xa
  427af2:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427af7:	jmp    427998 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa8>
  427afc:	nop    DWORD PTR [rax+0x0]
  427b00:	mov    rsi,rbp
  427b03:	mov    rdi,rbx
  427b06:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427b0b:	jmp    427a3e <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14e>
  427b10:	xor    esi,esi
  427b12:	mov    rdi,rbx
  427b15:	call   QWORD PTR [rbx+0x48]
  427b18:	jmp    427998 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa8>
  427b1d:	nop    DWORD PTR [rax]

0000000000427b20 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
  427b20:	cmp    BYTE PTR [rdi+0x33],0x0
  427b24:	jne    427c90 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x170>
  427b2a:	lea    eax,[rdx+rdx*1+0x4]
  427b2e:	cmp    eax,DWORD PTR [rsi+0x10]
  427b31:	jl     427b38 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x18>
  427b33:	ret    
  427b34:	nop    DWORD PTR [rax+0x0]
  427b38:	push   r14
  427b3a:	push   r13
  427b3c:	push   r12
  427b3e:	push   rbp
  427b3f:	push   rbx
  427b40:	mov    rdx,QWORD PTR [rsi+0x8]
  427b44:	movzx  r12d,WORD PTR [rdx+rax*1]
  427b49:	test   r12w,r12w
  427b4d:	je     427c7d <flatcc_json_printer_uint16_enum_vector_field@@Base+0x15d>
  427b53:	add    r12,QWORD PTR [rsi]
  427b56:	je     427c7d <flatcc_json_printer_uint16_enum_vector_field@@Base+0x15d>
  427b5c:	mov    eax,DWORD PTR [rsi+0x18]
  427b5f:	lea    edx,[rax+0x1]
  427b62:	test   eax,eax
  427b64:	mov    DWORD PTR [rsi+0x18],edx
  427b67:	je     427b78 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x58>
  427b69:	mov    rax,QWORD PTR [rdi+0x28]
  427b6d:	lea    rdx,[rax+0x1]
  427b71:	mov    QWORD PTR [rdi+0x28],rdx
  427b75:	mov    BYTE PTR [rax],0x2c
  427b78:	mov    eax,DWORD PTR [r12]
  427b7c:	mov    rbx,rdi
  427b7f:	movsxd rdx,r8d
  427b82:	mov    rsi,rcx
  427b85:	mov    r13,r9
  427b88:	add    r12,rax
  427b8b:	mov    r14d,DWORD PTR [r12]
  427b8f:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427b94:	mov    rax,QWORD PTR [rbx+0x28]
  427b98:	add    DWORD PTR [rbx+0x38],0x1
  427b9c:	test   r14d,r14d
  427b9f:	lea    rdx,[rax+0x1]
  427ba3:	mov    QWORD PTR [rbx+0x28],rdx
  427ba7:	mov    BYTE PTR [rax],0x5b
  427baa:	je     427c68 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x148>
  427bb0:	cmp    BYTE PTR [rbx+0x31],0x0
  427bb4:	jne    427d10 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1f0>
  427bba:	mov    rax,QWORD PTR [rbx+0x20]
  427bbe:	cmp    QWORD PTR [rbx+0x28],rax
  427bc2:	jae    427d40 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x220>
  427bc8:	movzx  esi,WORD PTR [r12+0x4]
  427bce:	mov    rdi,rbx
  427bd1:	lea    rbp,[r12+0x6]
  427bd6:	call   r13
  427bd9:	cmp    r14d,0x1
  427bdd:	lea    eax,[r14-0x2]
  427be1:	je     427c68 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x148>
  427be7:	lea    r14,[r12+rax*2+0x8]
  427bec:	jmp    427c11 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xf1>
  427bee:	xchg   ax,ax
  427bf0:	mov    rax,QWORD PTR [rbx+0x20]
  427bf4:	cmp    QWORD PTR [rbx+0x28],rax
  427bf8:	jae    427c98 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x178>
  427bfe:	movzx  esi,WORD PTR [rbp+0x0]
  427c02:	add    rbp,0x2
  427c06:	mov    rdi,rbx
  427c09:	call   r13
  427c0c:	cmp    rbp,r14
  427c0f:	je     427c68 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x148>
  427c11:	mov    rax,QWORD PTR [rbx+0x28]
  427c15:	lea    rdx,[rax+0x1]
  427c19:	mov    QWORD PTR [rbx+0x28],rdx
  427c1d:	mov    BYTE PTR [rax],0x2c
  427c20:	cmp    BYTE PTR [rbx+0x31],0x0
  427c24:	je     427bf0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xd0>
  427c26:	mov    rax,QWORD PTR [rbx+0x28]
  427c2a:	lea    rdx,[rax+0x1]
  427c2e:	mov    QWORD PTR [rbx+0x28],rdx
  427c32:	mov    BYTE PTR [rax],0xa
  427c35:	movzx  r12d,BYTE PTR [rbx+0x31]
  427c3a:	mov    rdi,QWORD PTR [rbx+0x28]
  427c3e:	imul   r12d,DWORD PTR [rbx+0x38]
  427c43:	movsxd r12,r12d
  427c46:	lea    rax,[rdi+r12*1]
  427c4a:	cmp    QWORD PTR [rbx+0x20],rax
  427c4e:	jb     427ca8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x188>
  427c50:	mov    rdx,r12
  427c53:	mov    esi,0x20
  427c58:	call   405090 <memset@plt>
  427c5d:	add    QWORD PTR [rbx+0x28],r12
  427c61:	jmp    427bfe <flatcc_json_printer_uint16_enum_vector_field@@Base+0xde>
  427c63:	nop    DWORD PTR [rax+rax*1+0x0]
  427c68:	cmp    BYTE PTR [rbx+0x31],0x0
  427c6c:	jne    427cc0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1a0>
  427c6e:	mov    rax,QWORD PTR [rbx+0x28]
  427c72:	lea    rdx,[rax+0x1]
  427c76:	mov    QWORD PTR [rbx+0x28],rdx
  427c7a:	mov    BYTE PTR [rax],0x5d
  427c7d:	pop    rbx
  427c7e:	pop    rbp
  427c7f:	pop    r12
  427c81:	pop    r13
  427c83:	pop    r14
  427c85:	ret    
  427c86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c90:	jmp    425ca0 <flatcc_json_printer_uint16_vector_field@@Base>
  427c95:	nop    DWORD PTR [rax]
  427c98:	xor    esi,esi
  427c9a:	mov    rdi,rbx
  427c9d:	call   QWORD PTR [rbx+0x48]
  427ca0:	jmp    427bfe <flatcc_json_printer_uint16_enum_vector_field@@Base+0xde>
  427ca5:	nop    DWORD PTR [rax]
  427ca8:	mov    rsi,r12
  427cab:	mov    rdi,rbx
  427cae:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427cb3:	jmp    427bfe <flatcc_json_printer_uint16_enum_vector_field@@Base+0xde>
  427cb8:	nop    DWORD PTR [rax+rax*1+0x0]
  427cc0:	mov    rax,QWORD PTR [rbx+0x28]
  427cc4:	lea    rdx,[rax+0x1]
  427cc8:	mov    QWORD PTR [rbx+0x28],rdx
  427ccc:	mov    BYTE PTR [rax],0xa
  427ccf:	mov    eax,DWORD PTR [rbx+0x38]
  427cd2:	mov    rdi,QWORD PTR [rbx+0x28]
  427cd6:	lea    ebp,[rax-0x1]
  427cd9:	movzx  eax,BYTE PTR [rbx+0x31]
  427cdd:	mov    DWORD PTR [rbx+0x38],ebp
  427ce0:	imul   eax,ebp
  427ce3:	movsxd rbp,eax
  427ce6:	lea    rax,[rdi+rbp*1]
  427cea:	cmp    QWORD PTR [rbx+0x20],rax
  427cee:	jb     427d30 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x210>
  427cf0:	mov    rdx,rbp
  427cf3:	mov    esi,0x20
  427cf8:	call   405090 <memset@plt>
  427cfd:	mov    rax,rbp
  427d00:	add    rax,QWORD PTR [rbx+0x28]
  427d04:	jmp    427c72 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x152>
  427d09:	nop    DWORD PTR [rax+0x0]
  427d10:	mov    rax,QWORD PTR [rbx+0x28]
  427d14:	mov    rdi,rbx
  427d17:	lea    rdx,[rax+0x1]
  427d1b:	mov    QWORD PTR [rbx+0x28],rdx
  427d1f:	mov    BYTE PTR [rax],0xa
  427d22:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427d27:	jmp    427bc8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa8>
  427d2c:	nop    DWORD PTR [rax+0x0]
  427d30:	mov    rsi,rbp
  427d33:	mov    rdi,rbx
  427d36:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427d3b:	jmp    427c6e <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14e>
  427d40:	xor    esi,esi
  427d42:	mov    rdi,rbx
  427d45:	call   QWORD PTR [rbx+0x48]
  427d48:	jmp    427bc8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa8>
  427d4d:	nop    DWORD PTR [rax]

0000000000427d50 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
  427d50:	cmp    BYTE PTR [rdi+0x33],0x0
  427d54:	jne    427ec0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x170>
  427d5a:	lea    eax,[rdx+rdx*1+0x4]
  427d5e:	cmp    eax,DWORD PTR [rsi+0x10]
  427d61:	jl     427d68 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18>
  427d63:	ret    
  427d64:	nop    DWORD PTR [rax+0x0]
  427d68:	push   r14
  427d6a:	push   r13
  427d6c:	push   r12
  427d6e:	push   rbp
  427d6f:	push   rbx
  427d70:	mov    rdx,QWORD PTR [rsi+0x8]
  427d74:	movzx  r12d,WORD PTR [rdx+rax*1]
  427d79:	test   r12w,r12w
  427d7d:	je     427ead <flatcc_json_printer_uint32_enum_vector_field@@Base+0x15d>
  427d83:	add    r12,QWORD PTR [rsi]
  427d86:	je     427ead <flatcc_json_printer_uint32_enum_vector_field@@Base+0x15d>
  427d8c:	mov    eax,DWORD PTR [rsi+0x18]
  427d8f:	lea    edx,[rax+0x1]
  427d92:	test   eax,eax
  427d94:	mov    DWORD PTR [rsi+0x18],edx
  427d97:	je     427da8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x58>
  427d99:	mov    rax,QWORD PTR [rdi+0x28]
  427d9d:	lea    rdx,[rax+0x1]
  427da1:	mov    QWORD PTR [rdi+0x28],rdx
  427da5:	mov    BYTE PTR [rax],0x2c
  427da8:	mov    eax,DWORD PTR [r12]
  427dac:	mov    rbx,rdi
  427daf:	movsxd rdx,r8d
  427db2:	mov    rsi,rcx
  427db5:	mov    r13,r9
  427db8:	add    r12,rax
  427dbb:	mov    r14d,DWORD PTR [r12]
  427dbf:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427dc4:	mov    rax,QWORD PTR [rbx+0x28]
  427dc8:	add    DWORD PTR [rbx+0x38],0x1
  427dcc:	test   r14d,r14d
  427dcf:	lea    rdx,[rax+0x1]
  427dd3:	mov    QWORD PTR [rbx+0x28],rdx
  427dd7:	mov    BYTE PTR [rax],0x5b
  427dda:	je     427e98 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x148>
  427de0:	cmp    BYTE PTR [rbx+0x31],0x0
  427de4:	jne    427f40 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1f0>
  427dea:	mov    rax,QWORD PTR [rbx+0x20]
  427dee:	cmp    QWORD PTR [rbx+0x28],rax
  427df2:	jae    427f70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x220>
  427df8:	mov    esi,DWORD PTR [r12+0x4]
  427dfd:	mov    rdi,rbx
  427e00:	lea    rbp,[r12+0x8]
  427e05:	call   r13
  427e08:	cmp    r14d,0x1
  427e0c:	lea    eax,[r14-0x2]
  427e10:	je     427e98 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x148>
  427e16:	lea    r14,[r12+rax*4+0xc]
  427e1b:	jmp    427e40 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xf0>
  427e1d:	nop    DWORD PTR [rax]
  427e20:	mov    rax,QWORD PTR [rbx+0x20]
  427e24:	cmp    QWORD PTR [rbx+0x28],rax
  427e28:	jae    427ec8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x178>
  427e2e:	mov    esi,DWORD PTR [rbp+0x0]
  427e31:	add    rbp,0x4
  427e35:	mov    rdi,rbx
  427e38:	call   r13
  427e3b:	cmp    rbp,r14
  427e3e:	je     427e98 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x148>
  427e40:	mov    rax,QWORD PTR [rbx+0x28]
  427e44:	lea    rdx,[rax+0x1]
  427e48:	mov    QWORD PTR [rbx+0x28],rdx
  427e4c:	mov    BYTE PTR [rax],0x2c
  427e4f:	cmp    BYTE PTR [rbx+0x31],0x0
  427e53:	je     427e20 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xd0>
  427e55:	mov    rax,QWORD PTR [rbx+0x28]
  427e59:	lea    rdx,[rax+0x1]
  427e5d:	mov    QWORD PTR [rbx+0x28],rdx
  427e61:	mov    BYTE PTR [rax],0xa
  427e64:	movzx  r12d,BYTE PTR [rbx+0x31]
  427e69:	mov    rdi,QWORD PTR [rbx+0x28]
  427e6d:	imul   r12d,DWORD PTR [rbx+0x38]
  427e72:	movsxd r12,r12d
  427e75:	lea    rax,[rdi+r12*1]
  427e79:	cmp    QWORD PTR [rbx+0x20],rax
  427e7d:	jb     427ed8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x188>
  427e7f:	mov    rdx,r12
  427e82:	mov    esi,0x20
  427e87:	call   405090 <memset@plt>
  427e8c:	add    QWORD PTR [rbx+0x28],r12
  427e90:	jmp    427e2e <flatcc_json_printer_uint32_enum_vector_field@@Base+0xde>
  427e92:	nop    WORD PTR [rax+rax*1+0x0]
  427e98:	cmp    BYTE PTR [rbx+0x31],0x0
  427e9c:	jne    427ef0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1a0>
  427e9e:	mov    rax,QWORD PTR [rbx+0x28]
  427ea2:	lea    rdx,[rax+0x1]
  427ea6:	mov    QWORD PTR [rbx+0x28],rdx
  427eaa:	mov    BYTE PTR [rax],0x5d
  427ead:	pop    rbx
  427eae:	pop    rbp
  427eaf:	pop    r12
  427eb1:	pop    r13
  427eb3:	pop    r14
  427eb5:	ret    
  427eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427ec0:	jmp    425ee0 <flatcc_json_printer_uint32_vector_field@@Base>
  427ec5:	nop    DWORD PTR [rax]
  427ec8:	xor    esi,esi
  427eca:	mov    rdi,rbx
  427ecd:	call   QWORD PTR [rbx+0x48]
  427ed0:	jmp    427e2e <flatcc_json_printer_uint32_enum_vector_field@@Base+0xde>
  427ed5:	nop    DWORD PTR [rax]
  427ed8:	mov    rsi,r12
  427edb:	mov    rdi,rbx
  427ede:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427ee3:	jmp    427e2e <flatcc_json_printer_uint32_enum_vector_field@@Base+0xde>
  427ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  427ef0:	mov    rax,QWORD PTR [rbx+0x28]
  427ef4:	lea    rdx,[rax+0x1]
  427ef8:	mov    QWORD PTR [rbx+0x28],rdx
  427efc:	mov    BYTE PTR [rax],0xa
  427eff:	mov    eax,DWORD PTR [rbx+0x38]
  427f02:	mov    rdi,QWORD PTR [rbx+0x28]
  427f06:	lea    ebp,[rax-0x1]
  427f09:	movzx  eax,BYTE PTR [rbx+0x31]
  427f0d:	mov    DWORD PTR [rbx+0x38],ebp
  427f10:	imul   eax,ebp
  427f13:	movsxd rbp,eax
  427f16:	lea    rax,[rdi+rbp*1]
  427f1a:	cmp    QWORD PTR [rbx+0x20],rax
  427f1e:	jb     427f60 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
  427f20:	mov    rdx,rbp
  427f23:	mov    esi,0x20
  427f28:	call   405090 <memset@plt>
  427f2d:	mov    rax,rbp
  427f30:	add    rax,QWORD PTR [rbx+0x28]
  427f34:	jmp    427ea2 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x152>
  427f39:	nop    DWORD PTR [rax+0x0]
  427f40:	mov    rax,QWORD PTR [rbx+0x28]
  427f44:	mov    rdi,rbx
  427f47:	lea    rdx,[rax+0x1]
  427f4b:	mov    QWORD PTR [rbx+0x28],rdx
  427f4f:	mov    BYTE PTR [rax],0xa
  427f52:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  427f57:	jmp    427df8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa8>
  427f5c:	nop    DWORD PTR [rax+0x0]
  427f60:	mov    rsi,rbp
  427f63:	mov    rdi,rbx
  427f66:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  427f6b:	jmp    427e9e <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14e>
  427f70:	xor    esi,esi
  427f72:	mov    rdi,rbx
  427f75:	call   QWORD PTR [rbx+0x48]
  427f78:	jmp    427df8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa8>
  427f7d:	nop    DWORD PTR [rax]

0000000000427f80 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
  427f80:	cmp    BYTE PTR [rdi+0x33],0x0
  427f84:	jne    4280f0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x170>
  427f8a:	lea    eax,[rdx+rdx*1+0x4]
  427f8e:	cmp    eax,DWORD PTR [rsi+0x10]
  427f91:	jl     427f98 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18>
  427f93:	ret    
  427f94:	nop    DWORD PTR [rax+0x0]
  427f98:	push   r14
  427f9a:	push   r13
  427f9c:	push   r12
  427f9e:	push   rbp
  427f9f:	push   rbx
  427fa0:	mov    rdx,QWORD PTR [rsi+0x8]
  427fa4:	movzx  r12d,WORD PTR [rdx+rax*1]
  427fa9:	test   r12w,r12w
  427fad:	je     4280dd <flatcc_json_printer_uint64_enum_vector_field@@Base+0x15d>
  427fb3:	add    r12,QWORD PTR [rsi]
  427fb6:	je     4280dd <flatcc_json_printer_uint64_enum_vector_field@@Base+0x15d>
  427fbc:	mov    eax,DWORD PTR [rsi+0x18]
  427fbf:	lea    edx,[rax+0x1]
  427fc2:	test   eax,eax
  427fc4:	mov    DWORD PTR [rsi+0x18],edx
  427fc7:	je     427fd8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x58>
  427fc9:	mov    rax,QWORD PTR [rdi+0x28]
  427fcd:	lea    rdx,[rax+0x1]
  427fd1:	mov    QWORD PTR [rdi+0x28],rdx
  427fd5:	mov    BYTE PTR [rax],0x2c
  427fd8:	mov    eax,DWORD PTR [r12]
  427fdc:	mov    rbx,rdi
  427fdf:	movsxd rdx,r8d
  427fe2:	mov    rsi,rcx
  427fe5:	mov    r13,r9
  427fe8:	add    r12,rax
  427feb:	mov    r14d,DWORD PTR [r12]
  427fef:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  427ff4:	mov    rax,QWORD PTR [rbx+0x28]
  427ff8:	add    DWORD PTR [rbx+0x38],0x1
  427ffc:	test   r14d,r14d
  427fff:	lea    rdx,[rax+0x1]
  428003:	mov    QWORD PTR [rbx+0x28],rdx
  428007:	mov    BYTE PTR [rax],0x5b
  42800a:	je     4280c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x148>
  428010:	cmp    BYTE PTR [rbx+0x31],0x0
  428014:	jne    428170 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1f0>
  42801a:	mov    rax,QWORD PTR [rbx+0x20]
  42801e:	cmp    QWORD PTR [rbx+0x28],rax
  428022:	jae    4281a0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x220>
  428028:	mov    rsi,QWORD PTR [r12+0x4]
  42802d:	mov    rdi,rbx
  428030:	lea    rbp,[r12+0xc]
  428035:	call   r13
  428038:	cmp    r14d,0x1
  42803c:	lea    eax,[r14-0x2]
  428040:	je     4280c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x148>
  428046:	lea    r14,[r12+rax*8+0x14]
  42804b:	jmp    428071 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xf1>
  42804d:	nop    DWORD PTR [rax]
  428050:	mov    rax,QWORD PTR [rbx+0x20]
  428054:	cmp    QWORD PTR [rbx+0x28],rax
  428058:	jae    4280f8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x178>
  42805e:	mov    rsi,QWORD PTR [rbp+0x0]
  428062:	add    rbp,0x8
  428066:	mov    rdi,rbx
  428069:	call   r13
  42806c:	cmp    rbp,r14
  42806f:	je     4280c8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x148>
  428071:	mov    rax,QWORD PTR [rbx+0x28]
  428075:	lea    rdx,[rax+0x1]
  428079:	mov    QWORD PTR [rbx+0x28],rdx
  42807d:	mov    BYTE PTR [rax],0x2c
  428080:	cmp    BYTE PTR [rbx+0x31],0x0
  428084:	je     428050 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xd0>
  428086:	mov    rax,QWORD PTR [rbx+0x28]
  42808a:	lea    rdx,[rax+0x1]
  42808e:	mov    QWORD PTR [rbx+0x28],rdx
  428092:	mov    BYTE PTR [rax],0xa
  428095:	movzx  r12d,BYTE PTR [rbx+0x31]
  42809a:	mov    rdi,QWORD PTR [rbx+0x28]
  42809e:	imul   r12d,DWORD PTR [rbx+0x38]
  4280a3:	movsxd r12,r12d
  4280a6:	lea    rax,[rdi+r12*1]
  4280aa:	cmp    QWORD PTR [rbx+0x20],rax
  4280ae:	jb     428108 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x188>
  4280b0:	mov    rdx,r12
  4280b3:	mov    esi,0x20
  4280b8:	call   405090 <memset@plt>
  4280bd:	add    QWORD PTR [rbx+0x28],r12
  4280c1:	jmp    42805e <flatcc_json_printer_uint64_enum_vector_field@@Base+0xde>
  4280c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4280c8:	cmp    BYTE PTR [rbx+0x31],0x0
  4280cc:	jne    428120 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1a0>
  4280ce:	mov    rax,QWORD PTR [rbx+0x28]
  4280d2:	lea    rdx,[rax+0x1]
  4280d6:	mov    QWORD PTR [rbx+0x28],rdx
  4280da:	mov    BYTE PTR [rax],0x5d
  4280dd:	pop    rbx
  4280de:	pop    rbp
  4280df:	pop    r12
  4280e1:	pop    r13
  4280e3:	pop    r14
  4280e5:	ret    
  4280e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280f0:	jmp    426210 <flatcc_json_printer_uint64_vector_field@@Base>
  4280f5:	nop    DWORD PTR [rax]
  4280f8:	xor    esi,esi
  4280fa:	mov    rdi,rbx
  4280fd:	call   QWORD PTR [rbx+0x48]
  428100:	jmp    42805e <flatcc_json_printer_uint64_enum_vector_field@@Base+0xde>
  428105:	nop    DWORD PTR [rax]
  428108:	mov    rsi,r12
  42810b:	mov    rdi,rbx
  42810e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428113:	jmp    42805e <flatcc_json_printer_uint64_enum_vector_field@@Base+0xde>
  428118:	nop    DWORD PTR [rax+rax*1+0x0]
  428120:	mov    rax,QWORD PTR [rbx+0x28]
  428124:	lea    rdx,[rax+0x1]
  428128:	mov    QWORD PTR [rbx+0x28],rdx
  42812c:	mov    BYTE PTR [rax],0xa
  42812f:	mov    eax,DWORD PTR [rbx+0x38]
  428132:	mov    rdi,QWORD PTR [rbx+0x28]
  428136:	lea    ebp,[rax-0x1]
  428139:	movzx  eax,BYTE PTR [rbx+0x31]
  42813d:	mov    DWORD PTR [rbx+0x38],ebp
  428140:	imul   eax,ebp
  428143:	movsxd rbp,eax
  428146:	lea    rax,[rdi+rbp*1]
  42814a:	cmp    QWORD PTR [rbx+0x20],rax
  42814e:	jb     428190 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
  428150:	mov    rdx,rbp
  428153:	mov    esi,0x20
  428158:	call   405090 <memset@plt>
  42815d:	mov    rax,rbp
  428160:	add    rax,QWORD PTR [rbx+0x28]
  428164:	jmp    4280d2 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x152>
  428169:	nop    DWORD PTR [rax+0x0]
  428170:	mov    rax,QWORD PTR [rbx+0x28]
  428174:	mov    rdi,rbx
  428177:	lea    rdx,[rax+0x1]
  42817b:	mov    QWORD PTR [rbx+0x28],rdx
  42817f:	mov    BYTE PTR [rax],0xa
  428182:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428187:	jmp    428028 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa8>
  42818c:	nop    DWORD PTR [rax+0x0]
  428190:	mov    rsi,rbp
  428193:	mov    rdi,rbx
  428196:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42819b:	jmp    4280ce <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14e>
  4281a0:	xor    esi,esi
  4281a2:	mov    rdi,rbx
  4281a5:	call   QWORD PTR [rbx+0x48]
  4281a8:	jmp    428028 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa8>
  4281ad:	nop    DWORD PTR [rax]

00000000004281b0 <flatcc_json_printer_int8_enum_vector_field@@Base>:
  4281b0:	cmp    BYTE PTR [rdi+0x33],0x0
  4281b4:	jne    428320 <flatcc_json_printer_int8_enum_vector_field@@Base+0x170>
  4281ba:	lea    eax,[rdx+rdx*1+0x4]
  4281be:	cmp    eax,DWORD PTR [rsi+0x10]
  4281c1:	jl     4281c8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x18>
  4281c3:	ret    
  4281c4:	nop    DWORD PTR [rax+0x0]
  4281c8:	push   r14
  4281ca:	push   r13
  4281cc:	push   r12
  4281ce:	push   rbp
  4281cf:	push   rbx
  4281d0:	mov    rdx,QWORD PTR [rsi+0x8]
  4281d4:	movzx  r12d,WORD PTR [rdx+rax*1]
  4281d9:	test   r12w,r12w
  4281dd:	je     42830d <flatcc_json_printer_int8_enum_vector_field@@Base+0x15d>
  4281e3:	add    r12,QWORD PTR [rsi]
  4281e6:	je     42830d <flatcc_json_printer_int8_enum_vector_field@@Base+0x15d>
  4281ec:	mov    eax,DWORD PTR [rsi+0x18]
  4281ef:	lea    edx,[rax+0x1]
  4281f2:	test   eax,eax
  4281f4:	mov    DWORD PTR [rsi+0x18],edx
  4281f7:	je     428208 <flatcc_json_printer_int8_enum_vector_field@@Base+0x58>
  4281f9:	mov    rax,QWORD PTR [rdi+0x28]
  4281fd:	lea    rdx,[rax+0x1]
  428201:	mov    QWORD PTR [rdi+0x28],rdx
  428205:	mov    BYTE PTR [rax],0x2c
  428208:	mov    eax,DWORD PTR [r12]
  42820c:	mov    rbx,rdi
  42820f:	movsxd rdx,r8d
  428212:	mov    rsi,rcx
  428215:	mov    r13,r9
  428218:	add    r12,rax
  42821b:	mov    r14d,DWORD PTR [r12]
  42821f:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  428224:	mov    rax,QWORD PTR [rbx+0x28]
  428228:	add    DWORD PTR [rbx+0x38],0x1
  42822c:	test   r14d,r14d
  42822f:	lea    rdx,[rax+0x1]
  428233:	mov    QWORD PTR [rbx+0x28],rdx
  428237:	mov    BYTE PTR [rax],0x5b
  42823a:	je     4282f8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x148>
  428240:	cmp    BYTE PTR [rbx+0x31],0x0
  428244:	jne    4283a0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
  42824a:	mov    rax,QWORD PTR [rbx+0x20]
  42824e:	cmp    QWORD PTR [rbx+0x28],rax
  428252:	jae    4283d0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x220>
  428258:	movsx  esi,BYTE PTR [r12+0x4]
  42825e:	mov    rdi,rbx
  428261:	lea    rbp,[r12+0x5]
  428266:	call   r13
  428269:	cmp    r14d,0x1
  42826d:	lea    eax,[r14-0x2]
  428271:	je     4282f8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x148>
  428277:	lea    r14,[r12+rax*1+0x6]
  42827c:	jmp    4282a1 <flatcc_json_printer_int8_enum_vector_field@@Base+0xf1>
  42827e:	xchg   ax,ax
  428280:	mov    rax,QWORD PTR [rbx+0x20]
  428284:	cmp    QWORD PTR [rbx+0x28],rax
  428288:	jae    428328 <flatcc_json_printer_int8_enum_vector_field@@Base+0x178>
  42828e:	movsx  esi,BYTE PTR [rbp+0x0]
  428292:	add    rbp,0x1
  428296:	mov    rdi,rbx
  428299:	call   r13
  42829c:	cmp    rbp,r14
  42829f:	je     4282f8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x148>
  4282a1:	mov    rax,QWORD PTR [rbx+0x28]
  4282a5:	lea    rdx,[rax+0x1]
  4282a9:	mov    QWORD PTR [rbx+0x28],rdx
  4282ad:	mov    BYTE PTR [rax],0x2c
  4282b0:	cmp    BYTE PTR [rbx+0x31],0x0
  4282b4:	je     428280 <flatcc_json_printer_int8_enum_vector_field@@Base+0xd0>
  4282b6:	mov    rax,QWORD PTR [rbx+0x28]
  4282ba:	lea    rdx,[rax+0x1]
  4282be:	mov    QWORD PTR [rbx+0x28],rdx
  4282c2:	mov    BYTE PTR [rax],0xa
  4282c5:	movzx  r12d,BYTE PTR [rbx+0x31]
  4282ca:	mov    rdi,QWORD PTR [rbx+0x28]
  4282ce:	imul   r12d,DWORD PTR [rbx+0x38]
  4282d3:	movsxd r12,r12d
  4282d6:	lea    rax,[rdi+r12*1]
  4282da:	cmp    QWORD PTR [rbx+0x20],rax
  4282de:	jb     428338 <flatcc_json_printer_int8_enum_vector_field@@Base+0x188>
  4282e0:	mov    rdx,r12
  4282e3:	mov    esi,0x20
  4282e8:	call   405090 <memset@plt>
  4282ed:	add    QWORD PTR [rbx+0x28],r12
  4282f1:	jmp    42828e <flatcc_json_printer_int8_enum_vector_field@@Base+0xde>
  4282f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4282f8:	cmp    BYTE PTR [rbx+0x31],0x0
  4282fc:	jne    428350 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1a0>
  4282fe:	mov    rax,QWORD PTR [rbx+0x28]
  428302:	lea    rdx,[rax+0x1]
  428306:	mov    QWORD PTR [rbx+0x28],rdx
  42830a:	mov    BYTE PTR [rax],0x5d
  42830d:	pop    rbx
  42830e:	pop    rbp
  42830f:	pop    r12
  428311:	pop    r13
  428313:	pop    r14
  428315:	ret    
  428316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428320:	jmp    426440 <flatcc_json_printer_int8_vector_field@@Base>
  428325:	nop    DWORD PTR [rax]
  428328:	xor    esi,esi
  42832a:	mov    rdi,rbx
  42832d:	call   QWORD PTR [rbx+0x48]
  428330:	jmp    42828e <flatcc_json_printer_int8_enum_vector_field@@Base+0xde>
  428335:	nop    DWORD PTR [rax]
  428338:	mov    rsi,r12
  42833b:	mov    rdi,rbx
  42833e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428343:	jmp    42828e <flatcc_json_printer_int8_enum_vector_field@@Base+0xde>
  428348:	nop    DWORD PTR [rax+rax*1+0x0]
  428350:	mov    rax,QWORD PTR [rbx+0x28]
  428354:	lea    rdx,[rax+0x1]
  428358:	mov    QWORD PTR [rbx+0x28],rdx
  42835c:	mov    BYTE PTR [rax],0xa
  42835f:	mov    eax,DWORD PTR [rbx+0x38]
  428362:	mov    rdi,QWORD PTR [rbx+0x28]
  428366:	lea    ebp,[rax-0x1]
  428369:	movzx  eax,BYTE PTR [rbx+0x31]
  42836d:	mov    DWORD PTR [rbx+0x38],ebp
  428370:	imul   eax,ebp
  428373:	movsxd rbp,eax
  428376:	lea    rax,[rdi+rbp*1]
  42837a:	cmp    QWORD PTR [rbx+0x20],rax
  42837e:	jb     4283c0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x210>
  428380:	mov    rdx,rbp
  428383:	mov    esi,0x20
  428388:	call   405090 <memset@plt>
  42838d:	mov    rax,rbp
  428390:	add    rax,QWORD PTR [rbx+0x28]
  428394:	jmp    428302 <flatcc_json_printer_int8_enum_vector_field@@Base+0x152>
  428399:	nop    DWORD PTR [rax+0x0]
  4283a0:	mov    rax,QWORD PTR [rbx+0x28]
  4283a4:	mov    rdi,rbx
  4283a7:	lea    rdx,[rax+0x1]
  4283ab:	mov    QWORD PTR [rbx+0x28],rdx
  4283af:	mov    BYTE PTR [rax],0xa
  4283b2:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4283b7:	jmp    428258 <flatcc_json_printer_int8_enum_vector_field@@Base+0xa8>
  4283bc:	nop    DWORD PTR [rax+0x0]
  4283c0:	mov    rsi,rbp
  4283c3:	mov    rdi,rbx
  4283c6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4283cb:	jmp    4282fe <flatcc_json_printer_int8_enum_vector_field@@Base+0x14e>
  4283d0:	xor    esi,esi
  4283d2:	mov    rdi,rbx
  4283d5:	call   QWORD PTR [rbx+0x48]
  4283d8:	jmp    428258 <flatcc_json_printer_int8_enum_vector_field@@Base+0xa8>
  4283dd:	nop    DWORD PTR [rax]

00000000004283e0 <flatcc_json_printer_int16_enum_vector_field@@Base>:
  4283e0:	cmp    BYTE PTR [rdi+0x33],0x0
  4283e4:	jne    428550 <flatcc_json_printer_int16_enum_vector_field@@Base+0x170>
  4283ea:	lea    eax,[rdx+rdx*1+0x4]
  4283ee:	cmp    eax,DWORD PTR [rsi+0x10]
  4283f1:	jl     4283f8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x18>
  4283f3:	ret    
  4283f4:	nop    DWORD PTR [rax+0x0]
  4283f8:	push   r14
  4283fa:	push   r13
  4283fc:	push   r12
  4283fe:	push   rbp
  4283ff:	push   rbx
  428400:	mov    rdx,QWORD PTR [rsi+0x8]
  428404:	movzx  r12d,WORD PTR [rdx+rax*1]
  428409:	test   r12w,r12w
  42840d:	je     42853d <flatcc_json_printer_int16_enum_vector_field@@Base+0x15d>
  428413:	add    r12,QWORD PTR [rsi]
  428416:	je     42853d <flatcc_json_printer_int16_enum_vector_field@@Base+0x15d>
  42841c:	mov    eax,DWORD PTR [rsi+0x18]
  42841f:	lea    edx,[rax+0x1]
  428422:	test   eax,eax
  428424:	mov    DWORD PTR [rsi+0x18],edx
  428427:	je     428438 <flatcc_json_printer_int16_enum_vector_field@@Base+0x58>
  428429:	mov    rax,QWORD PTR [rdi+0x28]
  42842d:	lea    rdx,[rax+0x1]
  428431:	mov    QWORD PTR [rdi+0x28],rdx
  428435:	mov    BYTE PTR [rax],0x2c
  428438:	mov    eax,DWORD PTR [r12]
  42843c:	mov    rbx,rdi
  42843f:	movsxd rdx,r8d
  428442:	mov    rsi,rcx
  428445:	mov    r13,r9
  428448:	add    r12,rax
  42844b:	mov    r14d,DWORD PTR [r12]
  42844f:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  428454:	mov    rax,QWORD PTR [rbx+0x28]
  428458:	add    DWORD PTR [rbx+0x38],0x1
  42845c:	test   r14d,r14d
  42845f:	lea    rdx,[rax+0x1]
  428463:	mov    QWORD PTR [rbx+0x28],rdx
  428467:	mov    BYTE PTR [rax],0x5b
  42846a:	je     428528 <flatcc_json_printer_int16_enum_vector_field@@Base+0x148>
  428470:	cmp    BYTE PTR [rbx+0x31],0x0
  428474:	jne    4285d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1f0>
  42847a:	mov    rax,QWORD PTR [rbx+0x20]
  42847e:	cmp    QWORD PTR [rbx+0x28],rax
  428482:	jae    428600 <flatcc_json_printer_int16_enum_vector_field@@Base+0x220>
  428488:	movsx  esi,WORD PTR [r12+0x4]
  42848e:	mov    rdi,rbx
  428491:	lea    rbp,[r12+0x6]
  428496:	call   r13
  428499:	cmp    r14d,0x1
  42849d:	lea    eax,[r14-0x2]
  4284a1:	je     428528 <flatcc_json_printer_int16_enum_vector_field@@Base+0x148>
  4284a7:	lea    r14,[r12+rax*2+0x8]
  4284ac:	jmp    4284d1 <flatcc_json_printer_int16_enum_vector_field@@Base+0xf1>
  4284ae:	xchg   ax,ax
  4284b0:	mov    rax,QWORD PTR [rbx+0x20]
  4284b4:	cmp    QWORD PTR [rbx+0x28],rax
  4284b8:	jae    428558 <flatcc_json_printer_int16_enum_vector_field@@Base+0x178>
  4284be:	movsx  esi,WORD PTR [rbp+0x0]
  4284c2:	add    rbp,0x2
  4284c6:	mov    rdi,rbx
  4284c9:	call   r13
  4284cc:	cmp    rbp,r14
  4284cf:	je     428528 <flatcc_json_printer_int16_enum_vector_field@@Base+0x148>
  4284d1:	mov    rax,QWORD PTR [rbx+0x28]
  4284d5:	lea    rdx,[rax+0x1]
  4284d9:	mov    QWORD PTR [rbx+0x28],rdx
  4284dd:	mov    BYTE PTR [rax],0x2c
  4284e0:	cmp    BYTE PTR [rbx+0x31],0x0
  4284e4:	je     4284b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0xd0>
  4284e6:	mov    rax,QWORD PTR [rbx+0x28]
  4284ea:	lea    rdx,[rax+0x1]
  4284ee:	mov    QWORD PTR [rbx+0x28],rdx
  4284f2:	mov    BYTE PTR [rax],0xa
  4284f5:	movzx  r12d,BYTE PTR [rbx+0x31]
  4284fa:	mov    rdi,QWORD PTR [rbx+0x28]
  4284fe:	imul   r12d,DWORD PTR [rbx+0x38]
  428503:	movsxd r12,r12d
  428506:	lea    rax,[rdi+r12*1]
  42850a:	cmp    QWORD PTR [rbx+0x20],rax
  42850e:	jb     428568 <flatcc_json_printer_int16_enum_vector_field@@Base+0x188>
  428510:	mov    rdx,r12
  428513:	mov    esi,0x20
  428518:	call   405090 <memset@plt>
  42851d:	add    QWORD PTR [rbx+0x28],r12
  428521:	jmp    4284be <flatcc_json_printer_int16_enum_vector_field@@Base+0xde>
  428523:	nop    DWORD PTR [rax+rax*1+0x0]
  428528:	cmp    BYTE PTR [rbx+0x31],0x0
  42852c:	jne    428580 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1a0>
  42852e:	mov    rax,QWORD PTR [rbx+0x28]
  428532:	lea    rdx,[rax+0x1]
  428536:	mov    QWORD PTR [rbx+0x28],rdx
  42853a:	mov    BYTE PTR [rax],0x5d
  42853d:	pop    rbx
  42853e:	pop    rbp
  42853f:	pop    r12
  428541:	pop    r13
  428543:	pop    r14
  428545:	ret    
  428546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428550:	jmp    4266d0 <flatcc_json_printer_int16_vector_field@@Base>
  428555:	nop    DWORD PTR [rax]
  428558:	xor    esi,esi
  42855a:	mov    rdi,rbx
  42855d:	call   QWORD PTR [rbx+0x48]
  428560:	jmp    4284be <flatcc_json_printer_int16_enum_vector_field@@Base+0xde>
  428565:	nop    DWORD PTR [rax]
  428568:	mov    rsi,r12
  42856b:	mov    rdi,rbx
  42856e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428573:	jmp    4284be <flatcc_json_printer_int16_enum_vector_field@@Base+0xde>
  428578:	nop    DWORD PTR [rax+rax*1+0x0]
  428580:	mov    rax,QWORD PTR [rbx+0x28]
  428584:	lea    rdx,[rax+0x1]
  428588:	mov    QWORD PTR [rbx+0x28],rdx
  42858c:	mov    BYTE PTR [rax],0xa
  42858f:	mov    eax,DWORD PTR [rbx+0x38]
  428592:	mov    rdi,QWORD PTR [rbx+0x28]
  428596:	lea    ebp,[rax-0x1]
  428599:	movzx  eax,BYTE PTR [rbx+0x31]
  42859d:	mov    DWORD PTR [rbx+0x38],ebp
  4285a0:	imul   eax,ebp
  4285a3:	movsxd rbp,eax
  4285a6:	lea    rax,[rdi+rbp*1]
  4285aa:	cmp    QWORD PTR [rbx+0x20],rax
  4285ae:	jb     4285f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x210>
  4285b0:	mov    rdx,rbp
  4285b3:	mov    esi,0x20
  4285b8:	call   405090 <memset@plt>
  4285bd:	mov    rax,rbp
  4285c0:	add    rax,QWORD PTR [rbx+0x28]
  4285c4:	jmp    428532 <flatcc_json_printer_int16_enum_vector_field@@Base+0x152>
  4285c9:	nop    DWORD PTR [rax+0x0]
  4285d0:	mov    rax,QWORD PTR [rbx+0x28]
  4285d4:	mov    rdi,rbx
  4285d7:	lea    rdx,[rax+0x1]
  4285db:	mov    QWORD PTR [rbx+0x28],rdx
  4285df:	mov    BYTE PTR [rax],0xa
  4285e2:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  4285e7:	jmp    428488 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa8>
  4285ec:	nop    DWORD PTR [rax+0x0]
  4285f0:	mov    rsi,rbp
  4285f3:	mov    rdi,rbx
  4285f6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4285fb:	jmp    42852e <flatcc_json_printer_int16_enum_vector_field@@Base+0x14e>
  428600:	xor    esi,esi
  428602:	mov    rdi,rbx
  428605:	call   QWORD PTR [rbx+0x48]
  428608:	jmp    428488 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa8>
  42860d:	nop    DWORD PTR [rax]

0000000000428610 <flatcc_json_printer_int32_enum_vector_field@@Base>:
  428610:	cmp    BYTE PTR [rdi+0x33],0x0
  428614:	jne    428780 <flatcc_json_printer_int32_enum_vector_field@@Base+0x170>
  42861a:	lea    eax,[rdx+rdx*1+0x4]
  42861e:	cmp    eax,DWORD PTR [rsi+0x10]
  428621:	jl     428628 <flatcc_json_printer_int32_enum_vector_field@@Base+0x18>
  428623:	ret    
  428624:	nop    DWORD PTR [rax+0x0]
  428628:	push   r14
  42862a:	push   r13
  42862c:	push   r12
  42862e:	push   rbp
  42862f:	push   rbx
  428630:	mov    rdx,QWORD PTR [rsi+0x8]
  428634:	movzx  r12d,WORD PTR [rdx+rax*1]
  428639:	test   r12w,r12w
  42863d:	je     42876d <flatcc_json_printer_int32_enum_vector_field@@Base+0x15d>
  428643:	add    r12,QWORD PTR [rsi]
  428646:	je     42876d <flatcc_json_printer_int32_enum_vector_field@@Base+0x15d>
  42864c:	mov    eax,DWORD PTR [rsi+0x18]
  42864f:	lea    edx,[rax+0x1]
  428652:	test   eax,eax
  428654:	mov    DWORD PTR [rsi+0x18],edx
  428657:	je     428668 <flatcc_json_printer_int32_enum_vector_field@@Base+0x58>
  428659:	mov    rax,QWORD PTR [rdi+0x28]
  42865d:	lea    rdx,[rax+0x1]
  428661:	mov    QWORD PTR [rdi+0x28],rdx
  428665:	mov    BYTE PTR [rax],0x2c
  428668:	mov    eax,DWORD PTR [r12]
  42866c:	mov    rbx,rdi
  42866f:	movsxd rdx,r8d
  428672:	mov    rsi,rcx
  428675:	mov    r13,r9
  428678:	add    r12,rax
  42867b:	mov    r14d,DWORD PTR [r12]
  42867f:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  428684:	mov    rax,QWORD PTR [rbx+0x28]
  428688:	add    DWORD PTR [rbx+0x38],0x1
  42868c:	test   r14d,r14d
  42868f:	lea    rdx,[rax+0x1]
  428693:	mov    QWORD PTR [rbx+0x28],rdx
  428697:	mov    BYTE PTR [rax],0x5b
  42869a:	je     428758 <flatcc_json_printer_int32_enum_vector_field@@Base+0x148>
  4286a0:	cmp    BYTE PTR [rbx+0x31],0x0
  4286a4:	jne    428800 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1f0>
  4286aa:	mov    rax,QWORD PTR [rbx+0x20]
  4286ae:	cmp    QWORD PTR [rbx+0x28],rax
  4286b2:	jae    428830 <flatcc_json_printer_int32_enum_vector_field@@Base+0x220>
  4286b8:	mov    esi,DWORD PTR [r12+0x4]
  4286bd:	mov    rdi,rbx
  4286c0:	lea    rbp,[r12+0x8]
  4286c5:	call   r13
  4286c8:	cmp    r14d,0x1
  4286cc:	lea    eax,[r14-0x2]
  4286d0:	je     428758 <flatcc_json_printer_int32_enum_vector_field@@Base+0x148>
  4286d6:	lea    r14,[r12+rax*4+0xc]
  4286db:	jmp    428700 <flatcc_json_printer_int32_enum_vector_field@@Base+0xf0>
  4286dd:	nop    DWORD PTR [rax]
  4286e0:	mov    rax,QWORD PTR [rbx+0x20]
  4286e4:	cmp    QWORD PTR [rbx+0x28],rax
  4286e8:	jae    428788 <flatcc_json_printer_int32_enum_vector_field@@Base+0x178>
  4286ee:	mov    esi,DWORD PTR [rbp+0x0]
  4286f1:	add    rbp,0x4
  4286f5:	mov    rdi,rbx
  4286f8:	call   r13
  4286fb:	cmp    rbp,r14
  4286fe:	je     428758 <flatcc_json_printer_int32_enum_vector_field@@Base+0x148>
  428700:	mov    rax,QWORD PTR [rbx+0x28]
  428704:	lea    rdx,[rax+0x1]
  428708:	mov    QWORD PTR [rbx+0x28],rdx
  42870c:	mov    BYTE PTR [rax],0x2c
  42870f:	cmp    BYTE PTR [rbx+0x31],0x0
  428713:	je     4286e0 <flatcc_json_printer_int32_enum_vector_field@@Base+0xd0>
  428715:	mov    rax,QWORD PTR [rbx+0x28]
  428719:	lea    rdx,[rax+0x1]
  42871d:	mov    QWORD PTR [rbx+0x28],rdx
  428721:	mov    BYTE PTR [rax],0xa
  428724:	movzx  r12d,BYTE PTR [rbx+0x31]
  428729:	mov    rdi,QWORD PTR [rbx+0x28]
  42872d:	imul   r12d,DWORD PTR [rbx+0x38]
  428732:	movsxd r12,r12d
  428735:	lea    rax,[rdi+r12*1]
  428739:	cmp    QWORD PTR [rbx+0x20],rax
  42873d:	jb     428798 <flatcc_json_printer_int32_enum_vector_field@@Base+0x188>
  42873f:	mov    rdx,r12
  428742:	mov    esi,0x20
  428747:	call   405090 <memset@plt>
  42874c:	add    QWORD PTR [rbx+0x28],r12
  428750:	jmp    4286ee <flatcc_json_printer_int32_enum_vector_field@@Base+0xde>
  428752:	nop    WORD PTR [rax+rax*1+0x0]
  428758:	cmp    BYTE PTR [rbx+0x31],0x0
  42875c:	jne    4287b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1a0>
  42875e:	mov    rax,QWORD PTR [rbx+0x28]
  428762:	lea    rdx,[rax+0x1]
  428766:	mov    QWORD PTR [rbx+0x28],rdx
  42876a:	mov    BYTE PTR [rax],0x5d
  42876d:	pop    rbx
  42876e:	pop    rbp
  42876f:	pop    r12
  428771:	pop    r13
  428773:	pop    r14
  428775:	ret    
  428776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428780:	jmp    426980 <flatcc_json_printer_int32_vector_field@@Base>
  428785:	nop    DWORD PTR [rax]
  428788:	xor    esi,esi
  42878a:	mov    rdi,rbx
  42878d:	call   QWORD PTR [rbx+0x48]
  428790:	jmp    4286ee <flatcc_json_printer_int32_enum_vector_field@@Base+0xde>
  428795:	nop    DWORD PTR [rax]
  428798:	mov    rsi,r12
  42879b:	mov    rdi,rbx
  42879e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4287a3:	jmp    4286ee <flatcc_json_printer_int32_enum_vector_field@@Base+0xde>
  4287a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4287b0:	mov    rax,QWORD PTR [rbx+0x28]
  4287b4:	lea    rdx,[rax+0x1]
  4287b8:	mov    QWORD PTR [rbx+0x28],rdx
  4287bc:	mov    BYTE PTR [rax],0xa
  4287bf:	mov    eax,DWORD PTR [rbx+0x38]
  4287c2:	mov    rdi,QWORD PTR [rbx+0x28]
  4287c6:	lea    ebp,[rax-0x1]
  4287c9:	movzx  eax,BYTE PTR [rbx+0x31]
  4287cd:	mov    DWORD PTR [rbx+0x38],ebp
  4287d0:	imul   eax,ebp
  4287d3:	movsxd rbp,eax
  4287d6:	lea    rax,[rdi+rbp*1]
  4287da:	cmp    QWORD PTR [rbx+0x20],rax
  4287de:	jb     428820 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
  4287e0:	mov    rdx,rbp
  4287e3:	mov    esi,0x20
  4287e8:	call   405090 <memset@plt>
  4287ed:	mov    rax,rbp
  4287f0:	add    rax,QWORD PTR [rbx+0x28]
  4287f4:	jmp    428762 <flatcc_json_printer_int32_enum_vector_field@@Base+0x152>
  4287f9:	nop    DWORD PTR [rax+0x0]
  428800:	mov    rax,QWORD PTR [rbx+0x28]
  428804:	mov    rdi,rbx
  428807:	lea    rdx,[rax+0x1]
  42880b:	mov    QWORD PTR [rbx+0x28],rdx
  42880f:	mov    BYTE PTR [rax],0xa
  428812:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428817:	jmp    4286b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa8>
  42881c:	nop    DWORD PTR [rax+0x0]
  428820:	mov    rsi,rbp
  428823:	mov    rdi,rbx
  428826:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42882b:	jmp    42875e <flatcc_json_printer_int32_enum_vector_field@@Base+0x14e>
  428830:	xor    esi,esi
  428832:	mov    rdi,rbx
  428835:	call   QWORD PTR [rbx+0x48]
  428838:	jmp    4286b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa8>
  42883d:	nop    DWORD PTR [rax]

0000000000428840 <flatcc_json_printer_int64_enum_vector_field@@Base>:
  428840:	cmp    BYTE PTR [rdi+0x33],0x0
  428844:	jne    4289b0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x170>
  42884a:	lea    eax,[rdx+rdx*1+0x4]
  42884e:	cmp    eax,DWORD PTR [rsi+0x10]
  428851:	jl     428858 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18>
  428853:	ret    
  428854:	nop    DWORD PTR [rax+0x0]
  428858:	push   r14
  42885a:	push   r13
  42885c:	push   r12
  42885e:	push   rbp
  42885f:	push   rbx
  428860:	mov    rdx,QWORD PTR [rsi+0x8]
  428864:	movzx  r12d,WORD PTR [rdx+rax*1]
  428869:	test   r12w,r12w
  42886d:	je     42899d <flatcc_json_printer_int64_enum_vector_field@@Base+0x15d>
  428873:	add    r12,QWORD PTR [rsi]
  428876:	je     42899d <flatcc_json_printer_int64_enum_vector_field@@Base+0x15d>
  42887c:	mov    eax,DWORD PTR [rsi+0x18]
  42887f:	lea    edx,[rax+0x1]
  428882:	test   eax,eax
  428884:	mov    DWORD PTR [rsi+0x18],edx
  428887:	je     428898 <flatcc_json_printer_int64_enum_vector_field@@Base+0x58>
  428889:	mov    rax,QWORD PTR [rdi+0x28]
  42888d:	lea    rdx,[rax+0x1]
  428891:	mov    QWORD PTR [rdi+0x28],rdx
  428895:	mov    BYTE PTR [rax],0x2c
  428898:	mov    eax,DWORD PTR [r12]
  42889c:	mov    rbx,rdi
  42889f:	movsxd rdx,r8d
  4288a2:	mov    rsi,rcx
  4288a5:	mov    r13,r9
  4288a8:	add    r12,rax
  4288ab:	mov    r14d,DWORD PTR [r12]
  4288af:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  4288b4:	mov    rax,QWORD PTR [rbx+0x28]
  4288b8:	add    DWORD PTR [rbx+0x38],0x1
  4288bc:	test   r14d,r14d
  4288bf:	lea    rdx,[rax+0x1]
  4288c3:	mov    QWORD PTR [rbx+0x28],rdx
  4288c7:	mov    BYTE PTR [rax],0x5b
  4288ca:	je     428988 <flatcc_json_printer_int64_enum_vector_field@@Base+0x148>
  4288d0:	cmp    BYTE PTR [rbx+0x31],0x0
  4288d4:	jne    428a30 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1f0>
  4288da:	mov    rax,QWORD PTR [rbx+0x20]
  4288de:	cmp    QWORD PTR [rbx+0x28],rax
  4288e2:	jae    428a60 <flatcc_json_printer_int64_enum_vector_field@@Base+0x220>
  4288e8:	mov    rsi,QWORD PTR [r12+0x4]
  4288ed:	mov    rdi,rbx
  4288f0:	lea    rbp,[r12+0xc]
  4288f5:	call   r13
  4288f8:	cmp    r14d,0x1
  4288fc:	lea    eax,[r14-0x2]
  428900:	je     428988 <flatcc_json_printer_int64_enum_vector_field@@Base+0x148>
  428906:	lea    r14,[r12+rax*8+0x14]
  42890b:	jmp    428931 <flatcc_json_printer_int64_enum_vector_field@@Base+0xf1>
  42890d:	nop    DWORD PTR [rax]
  428910:	mov    rax,QWORD PTR [rbx+0x20]
  428914:	cmp    QWORD PTR [rbx+0x28],rax
  428918:	jae    4289b8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x178>
  42891e:	mov    rsi,QWORD PTR [rbp+0x0]
  428922:	add    rbp,0x8
  428926:	mov    rdi,rbx
  428929:	call   r13
  42892c:	cmp    rbp,r14
  42892f:	je     428988 <flatcc_json_printer_int64_enum_vector_field@@Base+0x148>
  428931:	mov    rax,QWORD PTR [rbx+0x28]
  428935:	lea    rdx,[rax+0x1]
  428939:	mov    QWORD PTR [rbx+0x28],rdx
  42893d:	mov    BYTE PTR [rax],0x2c
  428940:	cmp    BYTE PTR [rbx+0x31],0x0
  428944:	je     428910 <flatcc_json_printer_int64_enum_vector_field@@Base+0xd0>
  428946:	mov    rax,QWORD PTR [rbx+0x28]
  42894a:	lea    rdx,[rax+0x1]
  42894e:	mov    QWORD PTR [rbx+0x28],rdx
  428952:	mov    BYTE PTR [rax],0xa
  428955:	movzx  r12d,BYTE PTR [rbx+0x31]
  42895a:	mov    rdi,QWORD PTR [rbx+0x28]
  42895e:	imul   r12d,DWORD PTR [rbx+0x38]
  428963:	movsxd r12,r12d
  428966:	lea    rax,[rdi+r12*1]
  42896a:	cmp    QWORD PTR [rbx+0x20],rax
  42896e:	jb     4289c8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x188>
  428970:	mov    rdx,r12
  428973:	mov    esi,0x20
  428978:	call   405090 <memset@plt>
  42897d:	add    QWORD PTR [rbx+0x28],r12
  428981:	jmp    42891e <flatcc_json_printer_int64_enum_vector_field@@Base+0xde>
  428983:	nop    DWORD PTR [rax+rax*1+0x0]
  428988:	cmp    BYTE PTR [rbx+0x31],0x0
  42898c:	jne    4289e0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1a0>
  42898e:	mov    rax,QWORD PTR [rbx+0x28]
  428992:	lea    rdx,[rax+0x1]
  428996:	mov    QWORD PTR [rbx+0x28],rdx
  42899a:	mov    BYTE PTR [rax],0x5d
  42899d:	pop    rbx
  42899e:	pop    rbp
  42899f:	pop    r12
  4289a1:	pop    r13
  4289a3:	pop    r14
  4289a5:	ret    
  4289a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4289b0:	jmp    426c30 <flatcc_json_printer_int64_vector_field@@Base>
  4289b5:	nop    DWORD PTR [rax]
  4289b8:	xor    esi,esi
  4289ba:	mov    rdi,rbx
  4289bd:	call   QWORD PTR [rbx+0x48]
  4289c0:	jmp    42891e <flatcc_json_printer_int64_enum_vector_field@@Base+0xde>
  4289c5:	nop    DWORD PTR [rax]
  4289c8:	mov    rsi,r12
  4289cb:	mov    rdi,rbx
  4289ce:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4289d3:	jmp    42891e <flatcc_json_printer_int64_enum_vector_field@@Base+0xde>
  4289d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4289e0:	mov    rax,QWORD PTR [rbx+0x28]
  4289e4:	lea    rdx,[rax+0x1]
  4289e8:	mov    QWORD PTR [rbx+0x28],rdx
  4289ec:	mov    BYTE PTR [rax],0xa
  4289ef:	mov    eax,DWORD PTR [rbx+0x38]
  4289f2:	mov    rdi,QWORD PTR [rbx+0x28]
  4289f6:	lea    ebp,[rax-0x1]
  4289f9:	movzx  eax,BYTE PTR [rbx+0x31]
  4289fd:	mov    DWORD PTR [rbx+0x38],ebp
  428a00:	imul   eax,ebp
  428a03:	movsxd rbp,eax
  428a06:	lea    rax,[rdi+rbp*1]
  428a0a:	cmp    QWORD PTR [rbx+0x20],rax
  428a0e:	jb     428a50 <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
  428a10:	mov    rdx,rbp
  428a13:	mov    esi,0x20
  428a18:	call   405090 <memset@plt>
  428a1d:	mov    rax,rbp
  428a20:	add    rax,QWORD PTR [rbx+0x28]
  428a24:	jmp    428992 <flatcc_json_printer_int64_enum_vector_field@@Base+0x152>
  428a29:	nop    DWORD PTR [rax+0x0]
  428a30:	mov    rax,QWORD PTR [rbx+0x28]
  428a34:	mov    rdi,rbx
  428a37:	lea    rdx,[rax+0x1]
  428a3b:	mov    QWORD PTR [rbx+0x28],rdx
  428a3f:	mov    BYTE PTR [rax],0xa
  428a42:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428a47:	jmp    4288e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa8>
  428a4c:	nop    DWORD PTR [rax+0x0]
  428a50:	mov    rsi,rbp
  428a53:	mov    rdi,rbx
  428a56:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428a5b:	jmp    42898e <flatcc_json_printer_int64_enum_vector_field@@Base+0x14e>
  428a60:	xor    esi,esi
  428a62:	mov    rdi,rbx
  428a65:	call   QWORD PTR [rbx+0x48]
  428a68:	jmp    4288e8 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa8>
  428a6d:	nop    DWORD PTR [rax]

0000000000428a70 <flatcc_json_printer_bool_enum_vector_field@@Base>:
  428a70:	cmp    BYTE PTR [rdi+0x33],0x0
  428a74:	jne    428be0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x170>
  428a7a:	lea    eax,[rdx+rdx*1+0x4]
  428a7e:	cmp    eax,DWORD PTR [rsi+0x10]
  428a81:	jl     428a88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x18>
  428a83:	ret    
  428a84:	nop    DWORD PTR [rax+0x0]
  428a88:	push   r14
  428a8a:	push   r13
  428a8c:	push   r12
  428a8e:	push   rbp
  428a8f:	push   rbx
  428a90:	mov    rdx,QWORD PTR [rsi+0x8]
  428a94:	movzx  r12d,WORD PTR [rdx+rax*1]
  428a99:	test   r12w,r12w
  428a9d:	je     428bcd <flatcc_json_printer_bool_enum_vector_field@@Base+0x15d>
  428aa3:	add    r12,QWORD PTR [rsi]
  428aa6:	je     428bcd <flatcc_json_printer_bool_enum_vector_field@@Base+0x15d>
  428aac:	mov    eax,DWORD PTR [rsi+0x18]
  428aaf:	lea    edx,[rax+0x1]
  428ab2:	test   eax,eax
  428ab4:	mov    DWORD PTR [rsi+0x18],edx
  428ab7:	je     428ac8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x58>
  428ab9:	mov    rax,QWORD PTR [rdi+0x28]
  428abd:	lea    rdx,[rax+0x1]
  428ac1:	mov    QWORD PTR [rdi+0x28],rdx
  428ac5:	mov    BYTE PTR [rax],0x2c
  428ac8:	mov    eax,DWORD PTR [r12]
  428acc:	mov    rbx,rdi
  428acf:	movsxd rdx,r8d
  428ad2:	mov    rsi,rcx
  428ad5:	mov    r13,r9
  428ad8:	add    r12,rax
  428adb:	mov    r14d,DWORD PTR [r12]
  428adf:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  428ae4:	mov    rax,QWORD PTR [rbx+0x28]
  428ae8:	add    DWORD PTR [rbx+0x38],0x1
  428aec:	test   r14d,r14d
  428aef:	lea    rdx,[rax+0x1]
  428af3:	mov    QWORD PTR [rbx+0x28],rdx
  428af7:	mov    BYTE PTR [rax],0x5b
  428afa:	je     428bb8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x148>
  428b00:	cmp    BYTE PTR [rbx+0x31],0x0
  428b04:	jne    428c60 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
  428b0a:	mov    rax,QWORD PTR [rbx+0x20]
  428b0e:	cmp    QWORD PTR [rbx+0x28],rax
  428b12:	jae    428c90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x220>
  428b18:	movzx  esi,BYTE PTR [r12+0x4]
  428b1e:	mov    rdi,rbx
  428b21:	lea    rbp,[r12+0x5]
  428b26:	call   r13
  428b29:	cmp    r14d,0x1
  428b2d:	lea    eax,[r14-0x2]
  428b31:	je     428bb8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x148>
  428b37:	lea    r14,[r12+rax*1+0x6]
  428b3c:	jmp    428b61 <flatcc_json_printer_bool_enum_vector_field@@Base+0xf1>
  428b3e:	xchg   ax,ax
  428b40:	mov    rax,QWORD PTR [rbx+0x20]
  428b44:	cmp    QWORD PTR [rbx+0x28],rax
  428b48:	jae    428be8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x178>
  428b4e:	movzx  esi,BYTE PTR [rbp+0x0]
  428b52:	add    rbp,0x1
  428b56:	mov    rdi,rbx
  428b59:	call   r13
  428b5c:	cmp    rbp,r14
  428b5f:	je     428bb8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x148>
  428b61:	mov    rax,QWORD PTR [rbx+0x28]
  428b65:	lea    rdx,[rax+0x1]
  428b69:	mov    QWORD PTR [rbx+0x28],rdx
  428b6d:	mov    BYTE PTR [rax],0x2c
  428b70:	cmp    BYTE PTR [rbx+0x31],0x0
  428b74:	je     428b40 <flatcc_json_printer_bool_enum_vector_field@@Base+0xd0>
  428b76:	mov    rax,QWORD PTR [rbx+0x28]
  428b7a:	lea    rdx,[rax+0x1]
  428b7e:	mov    QWORD PTR [rbx+0x28],rdx
  428b82:	mov    BYTE PTR [rax],0xa
  428b85:	movzx  r12d,BYTE PTR [rbx+0x31]
  428b8a:	mov    rdi,QWORD PTR [rbx+0x28]
  428b8e:	imul   r12d,DWORD PTR [rbx+0x38]
  428b93:	movsxd r12,r12d
  428b96:	lea    rax,[rdi+r12*1]
  428b9a:	cmp    QWORD PTR [rbx+0x20],rax
  428b9e:	jb     428bf8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x188>
  428ba0:	mov    rdx,r12
  428ba3:	mov    esi,0x20
  428ba8:	call   405090 <memset@plt>
  428bad:	add    QWORD PTR [rbx+0x28],r12
  428bb1:	jmp    428b4e <flatcc_json_printer_bool_enum_vector_field@@Base+0xde>
  428bb3:	nop    DWORD PTR [rax+rax*1+0x0]
  428bb8:	cmp    BYTE PTR [rbx+0x31],0x0
  428bbc:	jne    428c10 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1a0>
  428bbe:	mov    rax,QWORD PTR [rbx+0x28]
  428bc2:	lea    rdx,[rax+0x1]
  428bc6:	mov    QWORD PTR [rbx+0x28],rdx
  428bca:	mov    BYTE PTR [rax],0x5d
  428bcd:	pop    rbx
  428bce:	pop    rbp
  428bcf:	pop    r12
  428bd1:	pop    r13
  428bd3:	pop    r14
  428bd5:	ret    
  428bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428be0:	jmp    426f00 <flatcc_json_printer_bool_vector_field@@Base>
  428be5:	nop    DWORD PTR [rax]
  428be8:	xor    esi,esi
  428bea:	mov    rdi,rbx
  428bed:	call   QWORD PTR [rbx+0x48]
  428bf0:	jmp    428b4e <flatcc_json_printer_bool_enum_vector_field@@Base+0xde>
  428bf5:	nop    DWORD PTR [rax]
  428bf8:	mov    rsi,r12
  428bfb:	mov    rdi,rbx
  428bfe:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428c03:	jmp    428b4e <flatcc_json_printer_bool_enum_vector_field@@Base+0xde>
  428c08:	nop    DWORD PTR [rax+rax*1+0x0]
  428c10:	mov    rax,QWORD PTR [rbx+0x28]
  428c14:	lea    rdx,[rax+0x1]
  428c18:	mov    QWORD PTR [rbx+0x28],rdx
  428c1c:	mov    BYTE PTR [rax],0xa
  428c1f:	mov    eax,DWORD PTR [rbx+0x38]
  428c22:	mov    rdi,QWORD PTR [rbx+0x28]
  428c26:	lea    ebp,[rax-0x1]
  428c29:	movzx  eax,BYTE PTR [rbx+0x31]
  428c2d:	mov    DWORD PTR [rbx+0x38],ebp
  428c30:	imul   eax,ebp
  428c33:	movsxd rbp,eax
  428c36:	lea    rax,[rdi+rbp*1]
  428c3a:	cmp    QWORD PTR [rbx+0x20],rax
  428c3e:	jb     428c80 <flatcc_json_printer_bool_enum_vector_field@@Base+0x210>
  428c40:	mov    rdx,rbp
  428c43:	mov    esi,0x20
  428c48:	call   405090 <memset@plt>
  428c4d:	mov    rax,rbp
  428c50:	add    rax,QWORD PTR [rbx+0x28]
  428c54:	jmp    428bc2 <flatcc_json_printer_bool_enum_vector_field@@Base+0x152>
  428c59:	nop    DWORD PTR [rax+0x0]
  428c60:	mov    rax,QWORD PTR [rbx+0x28]
  428c64:	mov    rdi,rbx
  428c67:	lea    rdx,[rax+0x1]
  428c6b:	mov    QWORD PTR [rbx+0x28],rdx
  428c6f:	mov    BYTE PTR [rax],0xa
  428c72:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428c77:	jmp    428b18 <flatcc_json_printer_bool_enum_vector_field@@Base+0xa8>
  428c7c:	nop    DWORD PTR [rax+0x0]
  428c80:	mov    rsi,rbp
  428c83:	mov    rdi,rbx
  428c86:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428c8b:	jmp    428bbe <flatcc_json_printer_bool_enum_vector_field@@Base+0x14e>
  428c90:	xor    esi,esi
  428c92:	mov    rdi,rbx
  428c95:	call   QWORD PTR [rbx+0x48]
  428c98:	jmp    428b18 <flatcc_json_printer_bool_enum_vector_field@@Base+0xa8>
  428c9d:	nop    DWORD PTR [rax]

0000000000428ca0 <flatcc_json_printer_struct_vector_field@@Base>:
  428ca0:	push   r15
  428ca2:	push   r14
  428ca4:	lea    eax,[rdx+rdx*1+0x4]
  428ca8:	push   r13
  428caa:	push   r12
  428cac:	push   rbp
  428cad:	push   rbx
  428cae:	sub    rsp,0x18
  428cb2:	cmp    eax,DWORD PTR [rsi+0x10]
  428cb5:	mov    r15,QWORD PTR [rsp+0x50]
  428cba:	jge    428e69 <flatcc_json_printer_struct_vector_field@@Base+0x1c9>
  428cc0:	mov    rdx,QWORD PTR [rsi+0x8]
  428cc4:	movzx  ebp,WORD PTR [rdx+rax*1]
  428cc8:	test   bp,bp
  428ccb:	je     428e69 <flatcc_json_printer_struct_vector_field@@Base+0x1c9>
  428cd1:	add    rbp,QWORD PTR [rsi]
  428cd4:	je     428e69 <flatcc_json_printer_struct_vector_field@@Base+0x1c9>
  428cda:	mov    eax,DWORD PTR [rsi+0x18]
  428cdd:	lea    edx,[rax+0x1]
  428ce0:	test   eax,eax
  428ce2:	mov    DWORD PTR [rsi+0x18],edx
  428ce5:	je     428cf6 <flatcc_json_printer_struct_vector_field@@Base+0x56>
  428ce7:	mov    rax,QWORD PTR [rdi+0x28]
  428ceb:	lea    rdx,[rax+0x1]
  428cef:	mov    QWORD PTR [rdi+0x28],rdx
  428cf3:	mov    BYTE PTR [rax],0x2c
  428cf6:	mov    eax,DWORD PTR [rbp+0x0]
  428cf9:	mov    rbx,rdi
  428cfc:	movsxd rdx,r8d
  428cff:	mov    rsi,rcx
  428d02:	mov    r13,r9
  428d05:	add    rbp,rax
  428d08:	mov    r12d,DWORD PTR [rbp+0x0]
  428d0c:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  428d11:	mov    rax,QWORD PTR [rbx+0x28]
  428d15:	add    DWORD PTR [rbx+0x38],0x1
  428d19:	test   r12d,r12d
  428d1c:	lea    rdx,[rax+0x1]
  428d20:	mov    QWORD PTR [rbx+0x28],rdx
  428d24:	mov    BYTE PTR [rax],0x5b
  428d27:	je     428e50 <flatcc_json_printer_struct_vector_field@@Base+0x1b0>
  428d2d:	cmp    BYTE PTR [rbx+0x31],0x0
  428d31:	mov    rax,QWORD PTR [rbx+0x28]
  428d35:	jne    428fa0 <flatcc_json_printer_struct_vector_field@@Base+0x300>
  428d3b:	cmp    rax,QWORD PTR [rbx+0x20]
  428d3f:	jae    428fc0 <flatcc_json_printer_struct_vector_field@@Base+0x320>
  428d45:	lea    rdx,[rax+0x1]
  428d49:	add    DWORD PTR [rbx+0x38],0x1
  428d4d:	add    rbp,0x4
  428d51:	mov    rsi,rbp
  428d54:	mov    rdi,rbx
  428d57:	mov    QWORD PTR [rbx+0x28],rdx
  428d5b:	mov    BYTE PTR [rax],0x7b
  428d5e:	call   r15
  428d61:	cmp    BYTE PTR [rbx+0x31],0x0
  428d65:	jne    428f80 <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
  428d6b:	mov    rax,QWORD PTR [rbx+0x28]
  428d6f:	cmp    r12d,0x1
  428d73:	lea    r14d,[r12-0x2]
  428d78:	lea    rdx,[rax+0x1]
  428d7c:	mov    QWORD PTR [rbx+0x28],rdx
  428d80:	mov    BYTE PTR [rax],0x7d
  428d83:	je     428e50 <flatcc_json_printer_struct_vector_field@@Base+0x1b0>
  428d89:	add    r14,0x1
  428d8d:	xor    r12d,r12d
  428d90:	jmp    428de0 <flatcc_json_printer_struct_vector_field@@Base+0x140>
  428d92:	nop    WORD PTR [rax+rax*1+0x0]
  428d98:	mov    rsi,QWORD PTR [rbx+0x28]
  428d9c:	cmp    rsi,QWORD PTR [rbx+0x20]
  428da0:	jae    428ed8 <flatcc_json_printer_struct_vector_field@@Base+0x238>
  428da6:	lea    rax,[rsi+0x1]
  428daa:	add    DWORD PTR [rbx+0x38],0x1
  428dae:	mov    rdi,rbx
  428db1:	mov    QWORD PTR [rbx+0x28],rax
  428db5:	mov    BYTE PTR [rsi],0x7b
  428db8:	mov    rsi,rbp
  428dbb:	call   r15
  428dbe:	cmp    BYTE PTR [rbx+0x31],0x0
  428dc2:	jne    428e80 <flatcc_json_printer_struct_vector_field@@Base+0x1e0>
  428dc8:	mov    rsi,QWORD PTR [rbx+0x28]
  428dcc:	lea    rax,[rsi+0x1]
  428dd0:	add    r12,0x1
  428dd4:	cmp    r14,r12
  428dd7:	mov    QWORD PTR [rbx+0x28],rax
  428ddb:	mov    BYTE PTR [rsi],0x7d
  428dde:	je     428e50 <flatcc_json_printer_struct_vector_field@@Base+0x1b0>
  428de0:	mov    rax,QWORD PTR [rbx+0x28]
  428de4:	add    rbp,r13
  428de7:	lea    rdx,[rax+0x1]
  428deb:	mov    QWORD PTR [rbx+0x28],rdx
  428def:	mov    BYTE PTR [rax],0x2c
  428df2:	cmp    BYTE PTR [rbx+0x31],0x0
  428df6:	je     428d98 <flatcc_json_printer_struct_vector_field@@Base+0xf8>
  428df8:	mov    rax,QWORD PTR [rbx+0x28]
  428dfc:	lea    rdx,[rax+0x1]
  428e00:	mov    QWORD PTR [rbx+0x28],rdx
  428e04:	mov    BYTE PTR [rax],0xa
  428e07:	movzx  esi,BYTE PTR [rbx+0x31]
  428e0b:	mov    rdi,QWORD PTR [rbx+0x28]
  428e0f:	imul   esi,DWORD PTR [rbx+0x38]
  428e13:	movsxd rcx,esi
  428e16:	lea    rax,[rdi+rcx*1]
  428e1a:	cmp    QWORD PTR [rbx+0x20],rax
  428e1e:	jb     428ef0 <flatcc_json_printer_struct_vector_field@@Base+0x250>
  428e24:	mov    rdx,rcx
  428e27:	mov    esi,0x20
  428e2c:	mov    QWORD PTR [rsp+0x8],rcx
  428e31:	call   405090 <memset@plt>
  428e36:	mov    rcx,QWORD PTR [rsp+0x8]
  428e3b:	add    rcx,QWORD PTR [rbx+0x28]
  428e3f:	mov    rsi,rcx
  428e42:	jmp    428da6 <flatcc_json_printer_struct_vector_field@@Base+0x106>
  428e47:	nop    WORD PTR [rax+rax*1+0x0]
  428e50:	cmp    BYTE PTR [rbx+0x31],0x0
  428e54:	jne    428f20 <flatcc_json_printer_struct_vector_field@@Base+0x280>
  428e5a:	mov    rax,QWORD PTR [rbx+0x28]
  428e5e:	lea    rdx,[rax+0x1]
  428e62:	mov    QWORD PTR [rbx+0x28],rdx
  428e66:	mov    BYTE PTR [rax],0x5d
  428e69:	add    rsp,0x18
  428e6d:	pop    rbx
  428e6e:	pop    rbp
  428e6f:	pop    r12
  428e71:	pop    r13
  428e73:	pop    r14
  428e75:	pop    r15
  428e77:	ret    
  428e78:	nop    DWORD PTR [rax+rax*1+0x0]
  428e80:	mov    rax,QWORD PTR [rbx+0x28]
  428e84:	lea    rdx,[rax+0x1]
  428e88:	mov    QWORD PTR [rbx+0x28],rdx
  428e8c:	mov    BYTE PTR [rax],0xa
  428e8f:	mov    eax,DWORD PTR [rbx+0x38]
  428e92:	movzx  esi,BYTE PTR [rbx+0x31]
  428e96:	mov    rdi,QWORD PTR [rbx+0x28]
  428e9a:	lea    ecx,[rax-0x1]
  428e9d:	imul   esi,ecx
  428ea0:	mov    DWORD PTR [rbx+0x38],ecx
  428ea3:	movsxd rcx,esi
  428ea6:	lea    rax,[rdi+rcx*1]
  428eaa:	cmp    QWORD PTR [rbx+0x20],rax
  428eae:	jb     428f08 <flatcc_json_printer_struct_vector_field@@Base+0x268>
  428eb0:	mov    rdx,rcx
  428eb3:	mov    esi,0x20
  428eb8:	mov    QWORD PTR [rsp+0x8],rcx
  428ebd:	call   405090 <memset@plt>
  428ec2:	mov    rcx,QWORD PTR [rsp+0x8]
  428ec7:	add    rcx,QWORD PTR [rbx+0x28]
  428ecb:	mov    rsi,rcx
  428ece:	jmp    428dcc <flatcc_json_printer_struct_vector_field@@Base+0x12c>
  428ed3:	nop    DWORD PTR [rax+rax*1+0x0]
  428ed8:	xor    esi,esi
  428eda:	mov    rdi,rbx
  428edd:	call   QWORD PTR [rbx+0x48]
  428ee0:	mov    rsi,QWORD PTR [rbx+0x28]
  428ee4:	jmp    428da6 <flatcc_json_printer_struct_vector_field@@Base+0x106>
  428ee9:	nop    DWORD PTR [rax+0x0]
  428ef0:	mov    rsi,rcx
  428ef3:	mov    rdi,rbx
  428ef6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428efb:	mov    rsi,QWORD PTR [rbx+0x28]
  428eff:	jmp    428da6 <flatcc_json_printer_struct_vector_field@@Base+0x106>
  428f04:	nop    DWORD PTR [rax+0x0]
  428f08:	mov    rsi,rcx
  428f0b:	mov    rdi,rbx
  428f0e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428f13:	jmp    428dc8 <flatcc_json_printer_struct_vector_field@@Base+0x128>
  428f18:	nop    DWORD PTR [rax+rax*1+0x0]
  428f20:	mov    rax,QWORD PTR [rbx+0x28]
  428f24:	lea    rdx,[rax+0x1]
  428f28:	mov    QWORD PTR [rbx+0x28],rdx
  428f2c:	mov    BYTE PTR [rax],0xa
  428f2f:	mov    eax,DWORD PTR [rbx+0x38]
  428f32:	mov    rdi,QWORD PTR [rbx+0x28]
  428f36:	lea    ebp,[rax-0x1]
  428f39:	movzx  eax,BYTE PTR [rbx+0x31]
  428f3d:	mov    DWORD PTR [rbx+0x38],ebp
  428f40:	imul   eax,ebp
  428f43:	movsxd rbp,eax
  428f46:	lea    rax,[rdi+rbp*1]
  428f4a:	cmp    QWORD PTR [rbx+0x20],rax
  428f4e:	jb     428f70 <flatcc_json_printer_struct_vector_field@@Base+0x2d0>
  428f50:	mov    rdx,rbp
  428f53:	mov    esi,0x20
  428f58:	call   405090 <memset@plt>
  428f5d:	mov    rax,rbp
  428f60:	add    rax,QWORD PTR [rbx+0x28]
  428f64:	jmp    428e5e <flatcc_json_printer_struct_vector_field@@Base+0x1be>
  428f69:	nop    DWORD PTR [rax+0x0]
  428f70:	mov    rsi,rbp
  428f73:	mov    rdi,rbx
  428f76:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  428f7b:	jmp    428e5a <flatcc_json_printer_struct_vector_field@@Base+0x1ba>
  428f80:	mov    rax,QWORD PTR [rbx+0x28]
  428f84:	mov    rdi,rbx
  428f87:	lea    rdx,[rax+0x1]
  428f8b:	mov    QWORD PTR [rbx+0x28],rdx
  428f8f:	mov    BYTE PTR [rax],0xa
  428f92:	sub    DWORD PTR [rbx+0x38],0x1
  428f96:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428f9b:	jmp    428d6b <flatcc_json_printer_struct_vector_field@@Base+0xcb>
  428fa0:	lea    rdx,[rax+0x1]
  428fa4:	mov    rdi,rbx
  428fa7:	mov    QWORD PTR [rbx+0x28],rdx
  428fab:	mov    BYTE PTR [rax],0xa
  428fae:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  428fb3:	mov    rax,QWORD PTR [rbx+0x28]
  428fb7:	jmp    428d45 <flatcc_json_printer_struct_vector_field@@Base+0xa5>
  428fbc:	nop    DWORD PTR [rax+0x0]
  428fc0:	xor    esi,esi
  428fc2:	mov    rdi,rbx
  428fc5:	call   QWORD PTR [rbx+0x48]
  428fc8:	mov    rax,QWORD PTR [rbx+0x28]
  428fcc:	jmp    428d45 <flatcc_json_printer_struct_vector_field@@Base+0xa5>
  428fd1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428fdc:	nop    DWORD PTR [rax+0x0]

0000000000428fe0 <flatcc_json_printer_string_vector_field@@Base>:
  428fe0:	lea    eax,[rdx+rdx*1+0x4]
  428fe4:	cmp    eax,DWORD PTR [rsi+0x10]
  428fe7:	jge    4291d3 <flatcc_json_printer_string_vector_field@@Base+0x1f3>
  428fed:	push   r15
  428fef:	push   r14
  428ff1:	push   r13
  428ff3:	push   r12
  428ff5:	push   rbp
  428ff6:	push   rbx
  428ff7:	sub    rsp,0x8
  428ffb:	mov    rdx,QWORD PTR [rsi+0x8]
  428fff:	movzx  r12d,WORD PTR [rdx+rax*1]
  429004:	test   r12w,r12w
  429008:	je     4291c5 <flatcc_json_printer_string_vector_field@@Base+0x1e5>
  42900e:	add    r12,QWORD PTR [rsi]
  429011:	je     4291c5 <flatcc_json_printer_string_vector_field@@Base+0x1e5>
  429017:	mov    eax,DWORD PTR [rsi+0x18]
  42901a:	lea    edx,[rax+0x1]
  42901d:	test   eax,eax
  42901f:	mov    DWORD PTR [rsi+0x18],edx
  429022:	je     429033 <flatcc_json_printer_string_vector_field@@Base+0x53>
  429024:	mov    rax,QWORD PTR [rdi+0x28]
  429028:	lea    rdx,[rax+0x1]
  42902c:	mov    QWORD PTR [rdi+0x28],rdx
  429030:	mov    BYTE PTR [rax],0x2c
  429033:	mov    eax,DWORD PTR [r12]
  429037:	mov    r15,rcx
  42903a:	mov    rbx,rdi
  42903d:	movsxd rbp,r8d
  429040:	add    r12,rax
  429043:	cmp    BYTE PTR [rdi+0x31],0x0
  429047:	mov    rax,QWORD PTR [rdi+0x28]
  42904b:	mov    r13d,DWORD PTR [r12]
  42904f:	jne    429280 <flatcc_json_printer_string_vector_field@@Base+0x2a0>
  429055:	cmp    rax,QWORD PTR [rdi+0x20]
  429059:	jb     429064 <flatcc_json_printer_string_vector_field@@Base+0x84>
  42905b:	xor    esi,esi
  42905d:	call   QWORD PTR [rdi+0x48]
  429060:	mov    rax,QWORD PTR [rbx+0x28]
  429064:	mov    BYTE PTR [rax],0x22
  429067:	xor    edi,edi
  429069:	cmp    BYTE PTR [rbx+0x32],0x0
  42906d:	mov    rdx,rbp
  429070:	mov    rsi,r15
  429073:	sete   dil
  429077:	add    rdi,QWORD PTR [rbx+0x28]
  42907b:	lea    rax,[rdi+rbp*1]
  42907f:	cmp    QWORD PTR [rbx+0x20],rax
  429083:	mov    QWORD PTR [rbx+0x28],rdi
  429087:	ja     429200 <flatcc_json_printer_string_vector_field@@Base+0x220>
  42908d:	mov    rdi,rbx
  429090:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  429095:	mov    rbp,QWORD PTR [rbx+0x28]
  429099:	mov    BYTE PTR [rbp+0x0],0x22
  42909d:	xor    eax,eax
  42909f:	cmp    BYTE PTR [rbx+0x32],0x0
  4290a3:	sete   al
  4290a6:	add    rax,QWORD PTR [rbx+0x28]
  4290aa:	lea    rdx,[rax+0x1]
  4290ae:	mov    QWORD PTR [rbx+0x28],rdx
  4290b2:	mov    BYTE PTR [rax],0x3a
  4290b5:	mov    rax,QWORD PTR [rbx+0x28]
  4290b9:	mov    BYTE PTR [rax],0x20
  4290bc:	xor    eax,eax
  4290be:	cmp    BYTE PTR [rbx+0x31],0x0
  4290c2:	setne  al
  4290c5:	add    rax,QWORD PTR [rbx+0x28]
  4290c9:	add    DWORD PTR [rbx+0x38],0x1
  4290cd:	test   r13d,r13d
  4290d0:	lea    rdx,[rax+0x1]
  4290d4:	mov    QWORD PTR [rbx+0x28],rdx
  4290d8:	mov    BYTE PTR [rax],0x5b
  4290db:	je     4291b0 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  4290e1:	cmp    BYTE PTR [rbx+0x31],0x0
  4290e5:	jne    4292c8 <flatcc_json_printer_string_vector_field@@Base+0x2e8>
  4290eb:	mov    rax,QWORD PTR [rbx+0x20]
  4290ef:	cmp    QWORD PTR [rbx+0x28],rax
  4290f3:	jae    429310 <flatcc_json_printer_string_vector_field@@Base+0x330>
  4290f9:	mov    esi,DWORD PTR [r12+0x4]
  4290fe:	lea    rbp,[r12+0x4]
  429103:	mov    rdi,rbx
  429106:	add    rsi,rbp
  429109:	mov    edx,DWORD PTR [rsi]
  42910b:	add    rsi,0x4
  42910f:	call   420ca0 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  429114:	cmp    r13d,0x1
  429118:	lea    eax,[r13-0x2]
  42911c:	je     4291b0 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  429122:	lea    r12,[r12+rax*4+0x8]
  429127:	jmp    429157 <flatcc_json_printer_string_vector_field@@Base+0x177>
  429129:	nop    DWORD PTR [rax+0x0]
  429130:	mov    rax,QWORD PTR [rbx+0x20]
  429134:	cmp    QWORD PTR [rbx+0x28],rax
  429138:	jae    4291d8 <flatcc_json_printer_string_vector_field@@Base+0x1f8>
  42913e:	mov    esi,DWORD PTR [rbp+0x0]
  429141:	mov    rdi,rbx
  429144:	add    rsi,rbp
  429147:	mov    edx,DWORD PTR [rsi]
  429149:	add    rsi,0x4
  42914d:	call   420ca0 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  429152:	cmp    rbp,r12
  429155:	je     4291b0 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
  429157:	mov    rax,QWORD PTR [rbx+0x28]
  42915b:	add    rbp,0x4
  42915f:	lea    rdx,[rax+0x1]
  429163:	mov    QWORD PTR [rbx+0x28],rdx
  429167:	mov    BYTE PTR [rax],0x2c
  42916a:	cmp    BYTE PTR [rbx+0x31],0x0
  42916e:	je     429130 <flatcc_json_printer_string_vector_field@@Base+0x150>
  429170:	mov    rax,QWORD PTR [rbx+0x28]
  429174:	lea    rdx,[rax+0x1]
  429178:	mov    QWORD PTR [rbx+0x28],rdx
  42917c:	mov    BYTE PTR [rax],0xa
  42917f:	movzx  r13d,BYTE PTR [rbx+0x31]
  429184:	mov    rdi,QWORD PTR [rbx+0x28]
  429188:	imul   r13d,DWORD PTR [rbx+0x38]
  42918d:	movsxd r13,r13d
  429190:	lea    rax,[rdi+r13*1]
  429194:	cmp    QWORD PTR [rbx+0x20],rax
  429198:	jb     4291e8 <flatcc_json_printer_string_vector_field@@Base+0x208>
  42919a:	mov    rdx,r13
  42919d:	mov    esi,0x20
  4291a2:	call   405090 <memset@plt>
  4291a7:	add    QWORD PTR [rbx+0x28],r13
  4291ab:	jmp    42913e <flatcc_json_printer_string_vector_field@@Base+0x15e>
  4291ad:	nop    DWORD PTR [rax]
  4291b0:	cmp    BYTE PTR [rbx+0x31],0x0
  4291b4:	jne    429218 <flatcc_json_printer_string_vector_field@@Base+0x238>
  4291b6:	mov    rax,QWORD PTR [rbx+0x28]
  4291ba:	lea    rdx,[rax+0x1]
  4291be:	mov    QWORD PTR [rbx+0x28],rdx
  4291c2:	mov    BYTE PTR [rax],0x5d
  4291c5:	add    rsp,0x8
  4291c9:	pop    rbx
  4291ca:	pop    rbp
  4291cb:	pop    r12
  4291cd:	pop    r13
  4291cf:	pop    r14
  4291d1:	pop    r15
  4291d3:	repz ret 
  4291d5:	nop    DWORD PTR [rax]
  4291d8:	xor    esi,esi
  4291da:	mov    rdi,rbx
  4291dd:	call   QWORD PTR [rbx+0x48]
  4291e0:	jmp    42913e <flatcc_json_printer_string_vector_field@@Base+0x15e>
  4291e5:	nop    DWORD PTR [rax]
  4291e8:	mov    rsi,r13
  4291eb:	mov    rdi,rbx
  4291ee:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4291f3:	jmp    42913e <flatcc_json_printer_string_vector_field@@Base+0x15e>
  4291f8:	nop    DWORD PTR [rax+rax*1+0x0]
  429200:	call   4050e0 <memcpy@plt>
  429205:	add    rbp,QWORD PTR [rbx+0x28]
  429209:	mov    QWORD PTR [rbx+0x28],rbp
  42920d:	jmp    429099 <flatcc_json_printer_string_vector_field@@Base+0xb9>
  429212:	nop    WORD PTR [rax+rax*1+0x0]
  429218:	mov    rax,QWORD PTR [rbx+0x28]
  42921c:	lea    rdx,[rax+0x1]
  429220:	mov    QWORD PTR [rbx+0x28],rdx
  429224:	mov    BYTE PTR [rax],0xa
  429227:	mov    eax,DWORD PTR [rbx+0x38]
  42922a:	mov    rdi,QWORD PTR [rbx+0x28]
  42922e:	lea    ebp,[rax-0x1]
  429231:	movzx  eax,BYTE PTR [rbx+0x31]
  429235:	mov    DWORD PTR [rbx+0x38],ebp
  429238:	imul   eax,ebp
  42923b:	movsxd rbp,eax
  42923e:	lea    rax,[rdi+rbp*1]
  429242:	cmp    QWORD PTR [rbx+0x20],rax
  429246:	jb     429268 <flatcc_json_printer_string_vector_field@@Base+0x288>
  429248:	mov    rdx,rbp
  42924b:	mov    esi,0x20
  429250:	call   405090 <memset@plt>
  429255:	mov    rax,rbp
  429258:	add    rax,QWORD PTR [rbx+0x28]
  42925c:	jmp    4291ba <flatcc_json_printer_string_vector_field@@Base+0x1da>
  429261:	nop    DWORD PTR [rax+0x0]
  429268:	mov    rsi,rbp
  42926b:	mov    rdi,rbx
  42926e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429273:	jmp    4291b6 <flatcc_json_printer_string_vector_field@@Base+0x1d6>
  429278:	nop    DWORD PTR [rax+rax*1+0x0]
  429280:	lea    rdx,[rax+0x1]
  429284:	mov    QWORD PTR [rdi+0x28],rdx
  429288:	mov    BYTE PTR [rax],0xa
  42928b:	movzx  eax,BYTE PTR [rdi+0x31]
  42928f:	imul   eax,DWORD PTR [rdi+0x38]
  429293:	mov    rdi,QWORD PTR [rdi+0x28]
  429297:	movsxd r14,eax
  42929a:	lea    rax,[rdi+r14*1]
  42929e:	cmp    QWORD PTR [rbx+0x20],rax
  4292a2:	jb     42931d <flatcc_json_printer_string_vector_field@@Base+0x33d>
  4292a4:	mov    rdx,r14
  4292a7:	mov    esi,0x20
  4292ac:	call   405090 <memset@plt>
  4292b1:	mov    rax,r14
  4292b4:	add    rax,QWORD PTR [rbx+0x28]
  4292b8:	mov    QWORD PTR [rbx+0x28],rax
  4292bc:	jmp    429064 <flatcc_json_printer_string_vector_field@@Base+0x84>
  4292c1:	nop    DWORD PTR [rax+0x0]
  4292c8:	mov    rax,QWORD PTR [rbx+0x28]
  4292cc:	lea    rdx,[rax+0x1]
  4292d0:	mov    QWORD PTR [rbx+0x28],rdx
  4292d4:	mov    BYTE PTR [rax],0xa
  4292d7:	movzx  ebp,BYTE PTR [rbx+0x31]
  4292db:	mov    rdi,QWORD PTR [rbx+0x28]
  4292df:	imul   ebp,DWORD PTR [rbx+0x38]
  4292e3:	movsxd rbp,ebp
  4292e6:	lea    rax,[rdi+rbp*1]
  4292ea:	cmp    QWORD PTR [rbx+0x20],rax
  4292ee:	jb     429331 <flatcc_json_printer_string_vector_field@@Base+0x351>
  4292f0:	mov    rdx,rbp
  4292f3:	mov    esi,0x20
  4292f8:	call   405090 <memset@plt>
  4292fd:	add    QWORD PTR [rbx+0x28],rbp
  429301:	jmp    4290f9 <flatcc_json_printer_string_vector_field@@Base+0x119>
  429306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429310:	xor    esi,esi
  429312:	mov    rdi,rbx
  429315:	call   QWORD PTR [rbx+0x48]
  429318:	jmp    4290f9 <flatcc_json_printer_string_vector_field@@Base+0x119>
  42931d:	mov    rsi,r14
  429320:	mov    rdi,rbx
  429323:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429328:	mov    rax,QWORD PTR [rbx+0x28]
  42932c:	jmp    429064 <flatcc_json_printer_string_vector_field@@Base+0x84>
  429331:	mov    rsi,rbp
  429334:	mov    rdi,rbx
  429337:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42933c:	jmp    4290f9 <flatcc_json_printer_string_vector_field@@Base+0x119>
  429341:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42934c:	nop    DWORD PTR [rax+0x0]

0000000000429350 <flatcc_json_printer_table_vector_field@@Base>:
  429350:	push   r15
  429352:	push   r14
  429354:	push   r13
  429356:	push   r12
  429358:	push   rbp
  429359:	push   rbx
  42935a:	sub    rsp,0x68
  42935e:	mov    rax,QWORD PTR fs:0x28
  429367:	mov    QWORD PTR [rsp+0x58],rax
  42936c:	xor    eax,eax
  42936e:	lea    eax,[rdx+rdx*1+0x4]
  429372:	cmp    eax,DWORD PTR [rsi+0x10]
  429375:	jge    429484 <flatcc_json_printer_table_vector_field@@Base+0x134>
  42937b:	mov    rdx,QWORD PTR [rsi+0x8]
  42937f:	mov    r14,rsi
  429382:	movzx  r13d,WORD PTR [rdx+rax*1]
  429387:	test   r13w,r13w
  42938b:	je     429484 <flatcc_json_printer_table_vector_field@@Base+0x134>
  429391:	add    r13,QWORD PTR [rsi]
  429394:	je     429484 <flatcc_json_printer_table_vector_field@@Base+0x134>
  42939a:	mov    eax,DWORD PTR [rsi+0x18]
  42939d:	mov    rbx,rdi
  4293a0:	mov    r12,r9
  4293a3:	lea    edx,[rax+0x1]
  4293a6:	test   eax,eax
  4293a8:	mov    DWORD PTR [rsi+0x18],edx
  4293ab:	je     4293bc <flatcc_json_printer_table_vector_field@@Base+0x6c>
  4293ad:	mov    rax,QWORD PTR [rdi+0x28]
  4293b1:	lea    rdx,[rax+0x1]
  4293b5:	mov    QWORD PTR [rdi+0x28],rdx
  4293b9:	mov    BYTE PTR [rax],0x2c
  4293bc:	mov    eax,DWORD PTR [r13+0x0]
  4293c0:	movsxd rbp,r8d
  4293c3:	add    r13,rax
  4293c6:	cmp    BYTE PTR [rbx+0x31],0x0
  4293ca:	mov    rax,QWORD PTR [rbx+0x28]
  4293ce:	mov    r15d,DWORD PTR [r13+0x0]
  4293d2:	jne    4296d0 <flatcc_json_printer_table_vector_field@@Base+0x380>
  4293d8:	cmp    rax,QWORD PTR [rbx+0x20]
  4293dc:	jb     4293f2 <flatcc_json_printer_table_vector_field@@Base+0xa2>
  4293de:	mov    QWORD PTR [rsp],rcx
  4293e2:	xor    esi,esi
  4293e4:	mov    rdi,rbx
  4293e7:	call   QWORD PTR [rbx+0x48]
  4293ea:	mov    rax,QWORD PTR [rbx+0x28]
  4293ee:	mov    rcx,QWORD PTR [rsp]
  4293f2:	mov    BYTE PTR [rax],0x22
  4293f5:	xor    edi,edi
  4293f7:	cmp    BYTE PTR [rbx+0x32],0x0
  4293fb:	mov    rdx,rbp
  4293fe:	mov    rsi,rcx
  429401:	sete   dil
  429405:	add    rdi,QWORD PTR [rbx+0x28]
  429409:	lea    rax,[rdi+rbp*1]
  42940d:	cmp    QWORD PTR [rbx+0x20],rax
  429411:	mov    QWORD PTR [rbx+0x28],rdi
  429415:	ja     4294b0 <flatcc_json_printer_table_vector_field@@Base+0x160>
  42941b:	mov    rdi,rbx
  42941e:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  429423:	mov    rbp,QWORD PTR [rbx+0x28]
  429427:	mov    BYTE PTR [rbp+0x0],0x22
  42942b:	xor    eax,eax
  42942d:	cmp    BYTE PTR [rbx+0x32],0x0
  429431:	sete   al
  429434:	add    rax,QWORD PTR [rbx+0x28]
  429438:	lea    rdx,[rax+0x1]
  42943c:	mov    QWORD PTR [rbx+0x28],rdx
  429440:	mov    BYTE PTR [rax],0x3a
  429443:	mov    rax,QWORD PTR [rbx+0x28]
  429447:	mov    BYTE PTR [rax],0x20
  42944a:	xor    eax,eax
  42944c:	cmp    BYTE PTR [rbx+0x31],0x0
  429450:	setne  al
  429453:	add    rax,QWORD PTR [rbx+0x28]
  429457:	add    DWORD PTR [rbx+0x38],0x1
  42945b:	test   r15d,r15d
  42945e:	lea    rdx,[rax+0x1]
  429462:	mov    QWORD PTR [rbx+0x28],rdx
  429466:	mov    BYTE PTR [rax],0x5b
  429469:	jne    429518 <flatcc_json_printer_table_vector_field@@Base+0x1c8>
  42946f:	cmp    BYTE PTR [rbx+0x31],0x0
  429473:	jne    4294c8 <flatcc_json_printer_table_vector_field@@Base+0x178>
  429475:	mov    rax,QWORD PTR [rbx+0x28]
  429479:	lea    rdx,[rax+0x1]
  42947d:	mov    QWORD PTR [rbx+0x28],rdx
  429481:	mov    BYTE PTR [rax],0x5d
  429484:	mov    rax,QWORD PTR [rsp+0x58]
  429489:	xor    rax,QWORD PTR fs:0x28
  429492:	jne    42975f <flatcc_json_printer_table_vector_field@@Base+0x40f>
  429498:	add    rsp,0x68
  42949c:	pop    rbx
  42949d:	pop    rbp
  42949e:	pop    r12
  4294a0:	pop    r13
  4294a2:	pop    r14
  4294a4:	pop    r15
  4294a6:	ret    
  4294a7:	nop    WORD PTR [rax+rax*1+0x0]
  4294b0:	call   4050e0 <memcpy@plt>
  4294b5:	add    rbp,QWORD PTR [rbx+0x28]
  4294b9:	mov    QWORD PTR [rbx+0x28],rbp
  4294bd:	jmp    429427 <flatcc_json_printer_table_vector_field@@Base+0xd7>
  4294c2:	nop    WORD PTR [rax+rax*1+0x0]
  4294c8:	mov    rax,QWORD PTR [rbx+0x28]
  4294cc:	lea    rdx,[rax+0x1]
  4294d0:	mov    QWORD PTR [rbx+0x28],rdx
  4294d4:	mov    BYTE PTR [rax],0xa
  4294d7:	mov    eax,DWORD PTR [rbx+0x38]
  4294da:	mov    rdi,QWORD PTR [rbx+0x28]
  4294de:	lea    ebp,[rax-0x1]
  4294e1:	movzx  eax,BYTE PTR [rbx+0x31]
  4294e5:	mov    DWORD PTR [rbx+0x38],ebp
  4294e8:	imul   eax,ebp
  4294eb:	movsxd rbp,eax
  4294ee:	lea    rax,[rdi+rbp*1]
  4294f2:	cmp    QWORD PTR [rbx+0x20],rax
  4294f6:	jb     429590 <flatcc_json_printer_table_vector_field@@Base+0x240>
  4294fc:	mov    rdx,rbp
  4294ff:	mov    esi,0x20
  429504:	call   405090 <memset@plt>
  429509:	mov    rax,rbp
  42950c:	add    rax,QWORD PTR [rbx+0x28]
  429510:	jmp    429479 <flatcc_json_printer_table_vector_field@@Base+0x129>
  429515:	nop    DWORD PTR [rax]
  429518:	mov    eax,DWORD PTR [r14+0x14]
  42951c:	lea    rbp,[r13+0x4]
  429520:	sub    eax,0x1
  429523:	jne    4295a0 <flatcc_json_printer_table_vector_field@@Base+0x250>
  429525:	mov    edx,DWORD PTR [rbx+0x3c]
  429528:	test   edx,edx
  42952a:	jne    429533 <flatcc_json_printer_table_vector_field@@Base+0x1e3>
  42952c:	mov    DWORD PTR [rbx+0x3c],0x2
  429533:	lea    eax,[r15-0x1]
  429537:	lea    r15,[r13+rax*4+0x4]
  42953c:	lea    r13,[rsp+0x30]
  429541:	nop    DWORD PTR [rax+0x0]
  429548:	cmp    rbp,r15
  42954b:	je     42946f <flatcc_json_printer_table_vector_field@@Base+0x11f>
  429551:	mov    rax,QWORD PTR [rbx+0x28]
  429555:	add    rbp,0x4
  429559:	lea    rdx,[rax+0x1]
  42955d:	mov    QWORD PTR [rbx+0x28],rdx
  429561:	mov    BYTE PTR [rax],0x2c
  429564:	mov    eax,DWORD PTR [r14+0x14]
  429568:	sub    eax,0x1
  42956b:	jne    429610 <flatcc_json_printer_table_vector_field@@Base+0x2c0>
  429571:	mov    eax,DWORD PTR [rbx+0x3c]
  429574:	test   eax,eax
  429576:	jne    429548 <flatcc_json_printer_table_vector_field@@Base+0x1f8>
  429578:	cmp    rbp,r15
  42957b:	mov    DWORD PTR [rbx+0x3c],0x2
  429582:	jne    429551 <flatcc_json_printer_table_vector_field@@Base+0x201>
  429584:	jmp    42946f <flatcc_json_printer_table_vector_field@@Base+0x11f>
  429589:	nop    DWORD PTR [rax+0x0]
  429590:	mov    rsi,rbp
  429593:	mov    rdi,rbx
  429596:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42959b:	jmp    429475 <flatcc_json_printer_table_vector_field@@Base+0x125>
  4295a0:	mov    edx,DWORD PTR [r13+0x4]
  4295a4:	mov    rcx,QWORD PTR [rbx+0x28]
  4295a8:	mov    rdi,rbx
  4295ab:	add    DWORD PTR [rbx+0x38],0x1
  4295af:	lea    rsi,[rcx+0x1]
  4295b3:	add    rdx,rbp
  4295b6:	mov    QWORD PTR [rbx+0x28],rsi
  4295ba:	lea    rsi,[rsp+0x10]
  4295bf:	mov    BYTE PTR [rcx],0x7b
  4295c2:	mov    DWORD PTR [rsp+0x28],0x0
  4295ca:	mov    DWORD PTR [rsp+0x24],eax
  4295ce:	movsxd rax,DWORD PTR [rdx]
  4295d1:	mov    QWORD PTR [rsp+0x10],rdx
  4295d6:	sub    rdx,rax
  4295d9:	movzx  eax,WORD PTR [rdx]
  4295dc:	mov    QWORD PTR [rsp+0x18],rdx
  4295e1:	mov    DWORD PTR [rsp+0x20],eax
  4295e5:	call   r12
  4295e8:	cmp    BYTE PTR [rbx+0x31],0x0
  4295ec:	jne    42973f <flatcc_json_printer_table_vector_field@@Base+0x3ef>
  4295f2:	mov    rax,QWORD PTR [rbx+0x28]
  4295f6:	lea    rdx,[rax+0x1]
  4295fa:	mov    QWORD PTR [rbx+0x28],rdx
  4295fe:	mov    BYTE PTR [rax],0x7d
  429601:	jmp    429533 <flatcc_json_printer_table_vector_field@@Base+0x1e3>
  429606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429610:	mov    edx,DWORD PTR [rbp+0x0]
  429613:	mov    rcx,QWORD PTR [rbx+0x28]
  429617:	mov    rdi,rbx
  42961a:	add    DWORD PTR [rbx+0x38],0x1
  42961e:	lea    rsi,[rcx+0x1]
  429622:	add    rdx,rbp
  429625:	mov    QWORD PTR [rbx+0x28],rsi
  429629:	mov    rsi,r13
  42962c:	mov    BYTE PTR [rcx],0x7b
  42962f:	mov    DWORD PTR [rsp+0x48],0x0
  429637:	mov    DWORD PTR [rsp+0x44],eax
  42963b:	movsxd rax,DWORD PTR [rdx]
  42963e:	mov    QWORD PTR [rsp+0x30],rdx
  429643:	sub    rdx,rax
  429646:	movzx  eax,WORD PTR [rdx]
  429649:	mov    QWORD PTR [rsp+0x38],rdx
  42964e:	mov    DWORD PTR [rsp+0x40],eax
  429652:	call   r12
  429655:	cmp    BYTE PTR [rbx+0x31],0x0
  429659:	jne    429670 <flatcc_json_printer_table_vector_field@@Base+0x320>
  42965b:	mov    rsi,QWORD PTR [rbx+0x28]
  42965f:	lea    rax,[rsi+0x1]
  429663:	mov    QWORD PTR [rbx+0x28],rax
  429667:	mov    BYTE PTR [rsi],0x7d
  42966a:	jmp    429548 <flatcc_json_printer_table_vector_field@@Base+0x1f8>
  42966f:	nop
  429670:	mov    rax,QWORD PTR [rbx+0x28]
  429674:	lea    rdx,[rax+0x1]
  429678:	mov    QWORD PTR [rbx+0x28],rdx
  42967c:	mov    BYTE PTR [rax],0xa
  42967f:	mov    eax,DWORD PTR [rbx+0x38]
  429682:	movzx  esi,BYTE PTR [rbx+0x31]
  429686:	mov    rdi,QWORD PTR [rbx+0x28]
  42968a:	lea    ecx,[rax-0x1]
  42968d:	imul   esi,ecx
  429690:	mov    DWORD PTR [rbx+0x38],ecx
  429693:	movsxd rcx,esi
  429696:	lea    rax,[rdi+rcx*1]
  42969a:	cmp    QWORD PTR [rbx+0x20],rax
  42969e:	jb     4296c0 <flatcc_json_printer_table_vector_field@@Base+0x370>
  4296a0:	mov    rdx,rcx
  4296a3:	mov    esi,0x20
  4296a8:	mov    QWORD PTR [rsp],rcx
  4296ac:	call   405090 <memset@plt>
  4296b1:	mov    rcx,QWORD PTR [rsp]
  4296b5:	add    rcx,QWORD PTR [rbx+0x28]
  4296b9:	mov    rsi,rcx
  4296bc:	jmp    42965f <flatcc_json_printer_table_vector_field@@Base+0x30f>
  4296be:	xchg   ax,ax
  4296c0:	mov    rsi,rcx
  4296c3:	mov    rdi,rbx
  4296c6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  4296cb:	jmp    42965b <flatcc_json_printer_table_vector_field@@Base+0x30b>
  4296cd:	nop    DWORD PTR [rax]
  4296d0:	lea    rdx,[rax+0x1]
  4296d4:	mov    QWORD PTR [rbx+0x28],rdx
  4296d8:	mov    BYTE PTR [rax],0xa
  4296db:	movzx  eax,BYTE PTR [rbx+0x31]
  4296df:	mov    rdi,QWORD PTR [rbx+0x28]
  4296e3:	imul   eax,DWORD PTR [rbx+0x38]
  4296e7:	movsxd r8,eax
  4296ea:	lea    rax,[rdi+r8*1]
  4296ee:	cmp    QWORD PTR [rbx+0x20],rax
  4296f2:	jb     429723 <flatcc_json_printer_table_vector_field@@Base+0x3d3>
  4296f4:	mov    rdx,r8
  4296f7:	mov    esi,0x20
  4296fc:	mov    QWORD PTR [rsp+0x8],rcx
  429701:	mov    QWORD PTR [rsp],r8
  429705:	call   405090 <memset@plt>
  42970a:	mov    r8,QWORD PTR [rsp]
  42970e:	mov    rcx,QWORD PTR [rsp+0x8]
  429713:	mov    rax,r8
  429716:	add    rax,QWORD PTR [rbx+0x28]
  42971a:	mov    QWORD PTR [rbx+0x28],rax
  42971e:	jmp    4293f2 <flatcc_json_printer_table_vector_field@@Base+0xa2>
  429723:	mov    rsi,r8
  429726:	mov    rdi,rbx
  429729:	mov    QWORD PTR [rsp],rcx
  42972d:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429732:	mov    rax,QWORD PTR [rbx+0x28]
  429736:	mov    rcx,QWORD PTR [rsp]
  42973a:	jmp    4293f2 <flatcc_json_printer_table_vector_field@@Base+0xa2>
  42973f:	mov    rax,QWORD PTR [rbx+0x28]
  429743:	mov    rdi,rbx
  429746:	lea    rdx,[rax+0x1]
  42974a:	mov    QWORD PTR [rbx+0x28],rdx
  42974e:	mov    BYTE PTR [rax],0xa
  429751:	sub    DWORD PTR [rbx+0x38],0x1
  429755:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  42975a:	jmp    4295f2 <flatcc_json_printer_table_vector_field@@Base+0x2a2>
  42975f:	call   405070 <__stack_chk_fail@plt>
  429764:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42976f:	nop

0000000000429770 <flatcc_json_printer_union_vector_field@@Base>:
  429770:	push   r15
  429772:	push   r14
  429774:	mov    r15,rcx
  429777:	push   r13
  429779:	push   r12
  42977b:	mov    r12d,edx
  42977e:	push   rbp
  42977f:	push   rbx
  429780:	xor    r13d,r13d
  429783:	mov    rbx,rdi
  429786:	mov    rbp,rsi
  429789:	sub    rsp,0xb8
  429790:	mov    rax,QWORD PTR fs:0x28
  429799:	mov    QWORD PTR [rsp+0xa8],rax
  4297a1:	xor    eax,eax
  4297a3:	lea    eax,[rdx+rdx*1+0x2]
  4297a7:	mov    edx,DWORD PTR [rsi+0x10]
  4297aa:	mov    r14,QWORD PTR [rsp+0xf0]
  4297b2:	cmp    eax,edx
  4297b4:	jge    4297c7 <flatcc_json_printer_union_vector_field@@Base+0x57>
  4297b6:	mov    rcx,QWORD PTR [rsi+0x8]
  4297ba:	movzx  eax,WORD PTR [rcx+rax*1]
  4297be:	test   ax,ax
  4297c1:	jne    429a00 <flatcc_json_printer_union_vector_field@@Base+0x290>
  4297c7:	lea    eax,[r12+r12*1+0x4]
  4297cc:	cmp    eax,edx
  4297ce:	jge    4297dd <flatcc_json_printer_union_vector_field@@Base+0x6d>
  4297d0:	mov    rdx,QWORD PTR [rbp+0x8]
  4297d4:	movzx  eax,WORD PTR [rdx+rax*1]
  4297d8:	test   ax,ax
  4297db:	jne    429830 <flatcc_json_printer_union_vector_field@@Base+0xc0>
  4297dd:	mov    eax,DWORD PTR [rbp+0x14]
  4297e0:	cmp    r8d,0x64
  4297e4:	mov    DWORD PTR [rsp+0x28],eax
  4297e8:	jg     429a30 <flatcc_json_printer_union_vector_field@@Base+0x2c0>
  4297ee:	lea    rdi,[rsp+0x30]
  4297f3:	movsxd rdx,r8d
  4297f6:	mov    ecx,0x69
  4297fb:	mov    rsi,r15
  4297fe:	call   4050d0 <__memcpy_chk@plt>
  429803:	mov    rax,QWORD PTR [rsp+0xa8]
  42980b:	xor    rax,QWORD PTR fs:0x28
  429814:	jne    429a9f <flatcc_json_printer_union_vector_field@@Base+0x32f>
  42981a:	add    rsp,0xb8
  429821:	pop    rbx
  429822:	pop    rbp
  429823:	pop    r12
  429825:	pop    r13
  429827:	pop    r14
  429829:	pop    r15
  42982b:	ret    
  42982c:	nop    DWORD PTR [rax+0x0]
  429830:	add    rax,QWORD PTR [rbp+0x0]
  429834:	cmp    r8d,0x64
  429838:	mov    QWORD PTR [rsp+0x8],rax
  42983d:	mov    eax,DWORD PTR [rbp+0x14]
  429840:	mov    DWORD PTR [rsp+0x28],eax
  429844:	jg     429a30 <flatcc_json_printer_union_vector_field@@Base+0x2c0>
  42984a:	lea    r11,[rsp+0x30]
  42984f:	movsxd rax,r8d
  429852:	mov    ecx,0x69
  429857:	mov    rdx,rax
  42985a:	mov    rsi,r15
  42985d:	mov    QWORD PTR [rsp+0x18],r9
  429862:	mov    rdi,r11
  429865:	mov    DWORD PTR [rsp+0x14],r8d
  42986a:	mov    QWORD PTR [rsp],rax
  42986e:	call   4050d0 <__memcpy_chk@plt>
  429873:	mov    r11,rax
  429876:	mov    rax,QWORD PTR [rsp]
  42987a:	add    rax,r11
  42987d:	cmp    QWORD PTR [rsp+0x8],0x0
  429883:	mov    DWORD PTR [rax],0x7079745f
  429889:	mov    BYTE PTR [rax+0x4],0x65
  42988d:	je     429803 <flatcc_json_printer_union_vector_field@@Base+0x93>
  429893:	test   r13,r13
  429896:	je     429803 <flatcc_json_printer_union_vector_field@@Base+0x93>
  42989c:	mov    r8d,DWORD PTR [rsp+0x14]
  4298a1:	mov    r9,QWORD PTR [rsp+0x18]
  4298a6:	lea    edx,[r12-0x1]
  4298ab:	mov    rcx,r11
  4298ae:	mov    rsi,rbp
  4298b1:	mov    rdi,rbx
  4298b4:	add    r8d,0x5
  4298b8:	call   4276c0 <flatcc_json_printer_utype_enum_vector_field@@Base>
  4298bd:	mov    eax,DWORD PTR [rbp+0x18]
  4298c0:	lea    edx,[rax+0x1]
  4298c3:	test   eax,eax
  4298c5:	mov    DWORD PTR [rbp+0x18],edx
  4298c8:	je     4298d9 <flatcc_json_printer_union_vector_field@@Base+0x169>
  4298ca:	mov    rax,QWORD PTR [rbx+0x28]
  4298ce:	lea    rdx,[rax+0x1]
  4298d2:	mov    QWORD PTR [rbx+0x28],rdx
  4298d6:	mov    BYTE PTR [rax],0x2c
  4298d9:	mov    rax,QWORD PTR [rsp+0x8]
  4298de:	mov    rdx,QWORD PTR [rsp]
  4298e2:	mov    rsi,r15
  4298e5:	mov    rdi,rbx
  4298e8:	mov    ebp,DWORD PTR [r13+0x0]
  4298ec:	mov    r12d,DWORD PTR [rax]
  4298ef:	add    r12,rax
  4298f2:	mov    ecx,DWORD PTR [r12]
  4298f6:	mov    DWORD PTR [rsp+0x8],ecx
  4298fa:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  4298ff:	mov    rax,QWORD PTR [rbx+0x28]
  429903:	mov    ecx,DWORD PTR [rsp+0x8]
  429907:	add    DWORD PTR [rbx+0x38],0x1
  42990b:	lea    rdx,[rax+0x1]
  42990f:	test   ecx,ecx
  429911:	mov    QWORD PTR [rbx+0x28],rdx
  429915:	mov    BYTE PTR [rax],0x5b
  429918:	je     4299e6 <flatcc_json_printer_union_vector_field@@Base+0x276>
  42991e:	add    r13,rbp
  429921:	lea    rbp,[r12+0x4]
  429926:	movzx  eax,BYTE PTR [r13+0x4]
  42992b:	test   al,al
  42992d:	jne    429a80 <flatcc_json_printer_union_vector_field@@Base+0x310>
  429933:	mov    rax,QWORD PTR [rbx+0x28]
  429937:	lea    rdx,[rax+0x1]
  42993b:	mov    QWORD PTR [rbx+0x28],rdx
  42993f:	mov    BYTE PTR [rax],0x6e
  429942:	mov    rax,QWORD PTR [rbx+0x28]
  429946:	lea    rdx,[rax+0x1]
  42994a:	mov    QWORD PTR [rbx+0x28],rdx
  42994e:	mov    BYTE PTR [rax],0x75
  429951:	mov    rax,QWORD PTR [rbx+0x28]
  429955:	lea    rdx,[rax+0x1]
  429959:	mov    QWORD PTR [rbx+0x28],rdx
  42995d:	mov    BYTE PTR [rax],0x6c
  429960:	mov    rax,QWORD PTR [rbx+0x28]
  429964:	lea    rdx,[rax+0x1]
  429968:	mov    QWORD PTR [rbx+0x28],rdx
  42996c:	mov    BYTE PTR [rax],0x6c
  42996f:	lea    eax,[rcx-0x1]
  429972:	lea    r15,[r12+rax*4+0x4]
  429977:	lea    r12,[r13+0x4]
  42997b:	lea    r13,[rsp+0x20]
  429980:	cmp    rbp,r15
  429983:	je     4299e6 <flatcc_json_printer_union_vector_field@@Base+0x276>
  429985:	add    r12,0x1
  429989:	movzx  edx,BYTE PTR [r12]
  42998e:	mov    rax,QWORD PTR [rbx+0x28]
  429992:	add    rbp,0x4
  429996:	lea    rcx,[rax+0x1]
  42999a:	test   dl,dl
  42999c:	mov    QWORD PTR [rbx+0x28],rcx
  4299a0:	mov    BYTE PTR [rax],0x2c
  4299a3:	jne    429a10 <flatcc_json_printer_union_vector_field@@Base+0x2a0>
  4299a5:	mov    rax,QWORD PTR [rbx+0x28]
  4299a9:	cmp    rbp,r15
  4299ac:	lea    rdx,[rax+0x1]
  4299b0:	mov    QWORD PTR [rbx+0x28],rdx
  4299b4:	mov    BYTE PTR [rax],0x6e
  4299b7:	mov    rax,QWORD PTR [rbx+0x28]
  4299bb:	lea    rdx,[rax+0x1]
  4299bf:	mov    QWORD PTR [rbx+0x28],rdx
  4299c3:	mov    BYTE PTR [rax],0x75
  4299c6:	mov    rax,QWORD PTR [rbx+0x28]
  4299ca:	lea    rdx,[rax+0x1]
  4299ce:	mov    QWORD PTR [rbx+0x28],rdx
  4299d2:	mov    BYTE PTR [rax],0x6c
  4299d5:	mov    rax,QWORD PTR [rbx+0x28]
  4299d9:	lea    rdx,[rax+0x1]
  4299dd:	mov    QWORD PTR [rbx+0x28],rdx
  4299e1:	mov    BYTE PTR [rax],0x6c
  4299e4:	jne    429985 <flatcc_json_printer_union_vector_field@@Base+0x215>
  4299e6:	cmp    BYTE PTR [rbx+0x31],0x0
  4299ea:	jne    429a60 <flatcc_json_printer_union_vector_field@@Base+0x2f0>
  4299ec:	mov    rax,QWORD PTR [rbx+0x28]
  4299f0:	lea    rdx,[rax+0x1]
  4299f4:	mov    QWORD PTR [rbx+0x28],rdx
  4299f8:	mov    BYTE PTR [rax],0x5d
  4299fb:	jmp    429803 <flatcc_json_printer_union_vector_field@@Base+0x93>
  429a00:	movzx  r13d,ax
  429a04:	add    r13,QWORD PTR [rsi]
  429a07:	jmp    4297c7 <flatcc_json_printer_union_vector_field@@Base+0x57>
  429a0c:	nop    DWORD PTR [rax+0x0]
  429a10:	mov    BYTE PTR [rsp+0x2c],dl
  429a14:	mov    QWORD PTR [rsp+0x20],rbp
  429a19:	mov    rsi,r13
  429a1c:	mov    rdi,rbx
  429a1f:	call   r14
  429a22:	jmp    429980 <flatcc_json_printer_union_vector_field@@Base+0x210>
  429a27:	nop    WORD PTR [rax+rax*1+0x0]
  429a30:	mov    eax,DWORD PTR [rbx+0x3c]
  429a33:	test   eax,eax
  429a35:	jne    429a3e <flatcc_json_printer_union_vector_field@@Base+0x2ce>
  429a37:	mov    DWORD PTR [rbx+0x3c],0x1
  429a3e:	lea    rcx,[rip+0x7abb]        # 431500 <flatcc_builder_padding_base@@Base+0x1a20>
  429a45:	lea    rsi,[rip+0x7894]        # 4312e0 <flatcc_builder_padding_base@@Base+0x1800>
  429a4c:	lea    rdi,[rip+0x7a39]        # 43148c <flatcc_builder_padding_base@@Base+0x19ac>
  429a53:	mov    edx,0x34b
  429a58:	call   405080 <__assert_fail@plt>
  429a5d:	nop    DWORD PTR [rax]
  429a60:	mov    rax,QWORD PTR [rbx+0x28]
  429a64:	mov    rdi,rbx
  429a67:	lea    rdx,[rax+0x1]
  429a6b:	mov    QWORD PTR [rbx+0x28],rdx
  429a6f:	mov    BYTE PTR [rax],0xa
  429a72:	sub    DWORD PTR [rbx+0x38],0x1
  429a76:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  429a7b:	jmp    4299ec <flatcc_json_printer_union_vector_field@@Base+0x27c>
  429a80:	mov    DWORD PTR [rsp],ecx
  429a83:	mov    BYTE PTR [rsp+0x2c],al
  429a87:	lea    rsi,[rsp+0x20]
  429a8c:	mov    QWORD PTR [rsp+0x20],rbp
  429a91:	mov    rdi,rbx
  429a94:	call   r14
  429a97:	mov    ecx,DWORD PTR [rsp]
  429a9a:	jmp    42996f <flatcc_json_printer_union_vector_field@@Base+0x1ff>
  429a9f:	call   405070 <__stack_chk_fail@plt>
  429aa4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429aaf:	nop

0000000000429ab0 <flatcc_json_printer_table_field@@Base>:
  429ab0:	push   r15
  429ab2:	push   r14
  429ab4:	push   r13
  429ab6:	push   r12
  429ab8:	push   rbp
  429ab9:	push   rbx
  429aba:	sub    rsp,0x48
  429abe:	mov    rax,QWORD PTR fs:0x28
  429ac7:	mov    QWORD PTR [rsp+0x38],rax
  429acc:	xor    eax,eax
  429ace:	lea    eax,[rdx+rdx*1+0x4]
  429ad2:	cmp    eax,DWORD PTR [rsi+0x10]
  429ad5:	jge    429bc2 <flatcc_json_printer_table_field@@Base+0x112>
  429adb:	mov    rdx,QWORD PTR [rsi+0x8]
  429adf:	mov    r14,rsi
  429ae2:	movzx  r12d,WORD PTR [rdx+rax*1]
  429ae7:	test   r12w,r12w
  429aeb:	je     429bc2 <flatcc_json_printer_table_field@@Base+0x112>
  429af1:	add    r12,QWORD PTR [rsi]
  429af4:	je     429bc2 <flatcc_json_printer_table_field@@Base+0x112>
  429afa:	mov    eax,DWORD PTR [rsi+0x18]
  429afd:	mov    rbx,rdi
  429b00:	mov    r15,rcx
  429b03:	mov    r13,r9
  429b06:	lea    edx,[rax+0x1]
  429b09:	test   eax,eax
  429b0b:	mov    DWORD PTR [rsi+0x18],edx
  429b0e:	je     429b1f <flatcc_json_printer_table_field@@Base+0x6f>
  429b10:	mov    rax,QWORD PTR [rdi+0x28]
  429b14:	lea    rdx,[rax+0x1]
  429b18:	mov    QWORD PTR [rdi+0x28],rdx
  429b1c:	mov    BYTE PTR [rax],0x2c
  429b1f:	cmp    BYTE PTR [rbx+0x31],0x0
  429b23:	movsxd rbp,r8d
  429b26:	jne    429cb8 <flatcc_json_printer_table_field@@Base+0x208>
  429b2c:	mov    rsi,QWORD PTR [rbx+0x28]
  429b30:	cmp    rsi,QWORD PTR [rbx+0x20]
  429b34:	jb     429b42 <flatcc_json_printer_table_field@@Base+0x92>
  429b36:	xor    esi,esi
  429b38:	mov    rdi,rbx
  429b3b:	call   QWORD PTR [rbx+0x48]
  429b3e:	mov    rsi,QWORD PTR [rbx+0x28]
  429b42:	mov    BYTE PTR [rsi],0x22
  429b45:	xor    edi,edi
  429b47:	cmp    BYTE PTR [rbx+0x32],0x0
  429b4b:	mov    rdx,rbp
  429b4e:	mov    rsi,r15
  429b51:	sete   dil
  429b55:	add    rdi,QWORD PTR [rbx+0x28]
  429b59:	lea    rax,[rdi+rbp*1]
  429b5d:	cmp    QWORD PTR [rbx+0x20],rax
  429b61:	mov    QWORD PTR [rbx+0x28],rdi
  429b65:	ja     429be8 <flatcc_json_printer_table_field@@Base+0x138>
  429b6b:	mov    rdi,rbx
  429b6e:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  429b73:	mov    rbp,QWORD PTR [rbx+0x28]
  429b77:	mov    BYTE PTR [rbp+0x0],0x22
  429b7b:	xor    eax,eax
  429b7d:	cmp    BYTE PTR [rbx+0x32],0x0
  429b81:	sete   al
  429b84:	add    rax,QWORD PTR [rbx+0x28]
  429b88:	lea    rdx,[rax+0x1]
  429b8c:	mov    QWORD PTR [rbx+0x28],rdx
  429b90:	mov    BYTE PTR [rax],0x3a
  429b93:	mov    rax,QWORD PTR [rbx+0x28]
  429b97:	mov    BYTE PTR [rax],0x20
  429b9a:	xor    eax,eax
  429b9c:	cmp    BYTE PTR [rbx+0x31],0x0
  429ba0:	mov    edx,DWORD PTR [r14+0x14]
  429ba4:	setne  al
  429ba7:	add    rax,QWORD PTR [rbx+0x28]
  429bab:	sub    edx,0x1
  429bae:	mov    QWORD PTR [rbx+0x28],rax
  429bb2:	jne    429c00 <flatcc_json_printer_table_field@@Base+0x150>
  429bb4:	mov    eax,DWORD PTR [rbx+0x3c]
  429bb7:	test   eax,eax
  429bb9:	jne    429bc2 <flatcc_json_printer_table_field@@Base+0x112>
  429bbb:	mov    DWORD PTR [rbx+0x3c],0x2
  429bc2:	mov    rax,QWORD PTR [rsp+0x38]
  429bc7:	xor    rax,QWORD PTR fs:0x28
  429bd0:	jne    429d38 <flatcc_json_printer_table_field@@Base+0x288>
  429bd6:	add    rsp,0x48
  429bda:	pop    rbx
  429bdb:	pop    rbp
  429bdc:	pop    r12
  429bde:	pop    r13
  429be0:	pop    r14
  429be2:	pop    r15
  429be4:	ret    
  429be5:	nop    DWORD PTR [rax]
  429be8:	call   4050e0 <memcpy@plt>
  429bed:	add    rbp,QWORD PTR [rbx+0x28]
  429bf1:	mov    QWORD PTR [rbx+0x28],rbp
  429bf5:	jmp    429b77 <flatcc_json_printer_table_field@@Base+0xc7>
  429bfa:	nop    WORD PTR [rax+rax*1+0x0]
  429c00:	mov    ecx,DWORD PTR [r12]
  429c04:	add    DWORD PTR [rbx+0x38],0x1
  429c08:	lea    rsi,[rsp+0x10]
  429c0d:	mov    rdi,rbx
  429c10:	add    r12,rcx
  429c13:	lea    rcx,[rax+0x1]
  429c17:	mov    QWORD PTR [rbx+0x28],rcx
  429c1b:	mov    BYTE PTR [rax],0x7b
  429c1e:	mov    DWORD PTR [rsp+0x28],0x0
  429c26:	mov    DWORD PTR [rsp+0x24],edx
  429c2a:	movsxd rax,DWORD PTR [r12]
  429c2e:	mov    QWORD PTR [rsp+0x10],r12
  429c33:	sub    r12,rax
  429c36:	movzx  eax,WORD PTR [r12]
  429c3b:	mov    QWORD PTR [rsp+0x18],r12
  429c40:	mov    DWORD PTR [rsp+0x20],eax
  429c44:	call   r13
  429c47:	cmp    BYTE PTR [rbx+0x31],0x0
  429c4b:	jne    429c68 <flatcc_json_printer_table_field@@Base+0x1b8>
  429c4d:	mov    rsi,QWORD PTR [rbx+0x28]
  429c51:	lea    rax,[rsi+0x1]
  429c55:	mov    QWORD PTR [rbx+0x28],rax
  429c59:	mov    BYTE PTR [rsi],0x7d
  429c5c:	jmp    429bc2 <flatcc_json_printer_table_field@@Base+0x112>
  429c61:	nop    DWORD PTR [rax+0x0]
  429c68:	mov    rax,QWORD PTR [rbx+0x28]
  429c6c:	lea    rdx,[rax+0x1]
  429c70:	mov    QWORD PTR [rbx+0x28],rdx
  429c74:	mov    BYTE PTR [rax],0xa
  429c77:	mov    eax,DWORD PTR [rbx+0x38]
  429c7a:	movzx  esi,BYTE PTR [rbx+0x31]
  429c7e:	mov    rdi,QWORD PTR [rbx+0x28]
  429c82:	lea    ebp,[rax-0x1]
  429c85:	imul   esi,ebp
  429c88:	mov    DWORD PTR [rbx+0x38],ebp
  429c8b:	movsxd rbp,esi
  429c8e:	lea    rax,[rdi+rbp*1]
  429c92:	cmp    QWORD PTR [rbx+0x20],rax
  429c96:	jb     429d28 <flatcc_json_printer_table_field@@Base+0x278>
  429c9c:	mov    esi,0x20
  429ca1:	mov    rdx,rbp
  429ca4:	call   405090 <memset@plt>
  429ca9:	mov    rsi,rbp
  429cac:	add    rsi,QWORD PTR [rbx+0x28]
  429cb0:	jmp    429c51 <flatcc_json_printer_table_field@@Base+0x1a1>
  429cb2:	nop    WORD PTR [rax+rax*1+0x0]
  429cb8:	mov    rax,QWORD PTR [rbx+0x28]
  429cbc:	lea    rdx,[rax+0x1]
  429cc0:	mov    QWORD PTR [rbx+0x28],rdx
  429cc4:	mov    BYTE PTR [rax],0xa
  429cc7:	movzx  esi,BYTE PTR [rbx+0x31]
  429ccb:	mov    rdi,QWORD PTR [rbx+0x28]
  429ccf:	imul   esi,DWORD PTR [rbx+0x38]
  429cd3:	movsxd rcx,esi
  429cd6:	lea    rax,[rdi+rcx*1]
  429cda:	cmp    QWORD PTR [rbx+0x20],rax
  429cde:	jb     429d10 <flatcc_json_printer_table_field@@Base+0x260>
  429ce0:	mov    rdx,rcx
  429ce3:	mov    esi,0x20
  429ce8:	mov    QWORD PTR [rsp+0x8],rcx
  429ced:	call   405090 <memset@plt>
  429cf2:	mov    rcx,QWORD PTR [rsp+0x8]
  429cf7:	add    rcx,QWORD PTR [rbx+0x28]
  429cfb:	mov    rsi,rcx
  429cfe:	mov    QWORD PTR [rbx+0x28],rcx
  429d02:	jmp    429b42 <flatcc_json_printer_table_field@@Base+0x92>
  429d07:	nop    WORD PTR [rax+rax*1+0x0]
  429d10:	mov    rsi,rcx
  429d13:	mov    rdi,rbx
  429d16:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429d1b:	mov    rsi,QWORD PTR [rbx+0x28]
  429d1f:	jmp    429b42 <flatcc_json_printer_table_field@@Base+0x92>
  429d24:	nop    DWORD PTR [rax+0x0]
  429d28:	mov    rsi,rbp
  429d2b:	mov    rdi,rbx
  429d2e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  429d33:	jmp    429c4d <flatcc_json_printer_table_field@@Base+0x19d>
  429d38:	call   405070 <__stack_chk_fail@plt>
  429d3d:	nop    DWORD PTR [rax]

0000000000429d40 <flatcc_json_printer_union_field@@Base>:
  429d40:	push   r15
  429d42:	push   r14
  429d44:	mov    r14,rcx
  429d47:	push   r13
  429d49:	push   r12
  429d4b:	mov    r15,rsi
  429d4e:	push   rbp
  429d4f:	push   rbx
  429d50:	mov    rbx,rdi
  429d53:	sub    rsp,0x48
  429d57:	mov    ecx,DWORD PTR [rsi+0x10]
  429d5a:	xor    esi,esi
  429d5c:	mov    rax,QWORD PTR [rsp+0x80]
  429d64:	mov    QWORD PTR [rsp+0x8],rax
  429d69:	mov    rax,QWORD PTR fs:0x28
  429d72:	mov    QWORD PTR [rsp+0x38],rax
  429d77:	xor    eax,eax
  429d79:	lea    eax,[rdx+rdx*1+0x2]
  429d7d:	cmp    eax,ecx
  429d7f:	jge    429d92 <flatcc_json_printer_union_field@@Base+0x52>
  429d81:	mov    rdi,QWORD PTR [r15+0x8]
  429d85:	movzx  eax,WORD PTR [rdi+rax*1]
  429d89:	test   ax,ax
  429d8c:	jne    429ee8 <flatcc_json_printer_union_field@@Base+0x1a8>
  429d92:	lea    eax,[rdx+rdx*1+0x4]
  429d96:	cmp    eax,ecx
  429d98:	jge    429ec0 <flatcc_json_printer_union_field@@Base+0x180>
  429d9e:	mov    rdx,QWORD PTR [r15+0x8]
  429da2:	movzx  r12d,WORD PTR [rdx+rax*1]
  429da7:	test   r12w,r12w
  429dab:	je     429ec0 <flatcc_json_printer_union_field@@Base+0x180>
  429db1:	add    r12,QWORD PTR [r15]
  429db4:	je     429ec0 <flatcc_json_printer_union_field@@Base+0x180>
  429dba:	test   rsi,rsi
  429dbd:	je     429ec0 <flatcc_json_printer_union_field@@Base+0x180>
  429dc3:	mov    eax,DWORD PTR [r15+0x18]
  429dc7:	movzx  r13d,BYTE PTR [rsi]
  429dcb:	lea    edx,[rax+0x1]
  429dce:	test   eax,eax
  429dd0:	mov    DWORD PTR [r15+0x18],edx
  429dd4:	je     429de5 <flatcc_json_printer_union_field@@Base+0xa5>
  429dd6:	mov    rax,QWORD PTR [rbx+0x28]
  429dda:	lea    rdx,[rax+0x1]
  429dde:	mov    QWORD PTR [rbx+0x28],rdx
  429de2:	mov    BYTE PTR [rax],0x2c
  429de5:	cmp    BYTE PTR [rbx+0x31],0x0
  429de9:	jne    429fa0 <flatcc_json_printer_union_field@@Base+0x260>
  429def:	mov    rax,QWORD PTR [rbx+0x28]
  429df3:	cmp    rax,QWORD PTR [rbx+0x20]
  429df7:	jae    429fd8 <flatcc_json_printer_union_field@@Base+0x298>
  429dfd:	mov    BYTE PTR [rax],0x22
  429e00:	xor    edi,edi
  429e02:	cmp    BYTE PTR [rbx+0x32],0x0
  429e06:	movsxd rbp,r8d
  429e09:	mov    QWORD PTR [rsp+0x10],r9
  429e0e:	mov    rsi,r14
  429e11:	mov    rdx,rbp
  429e14:	sete   dil
  429e18:	add    rdi,QWORD PTR [rbx+0x28]
  429e1c:	lea    rax,[rdi+rbp*1]
  429e20:	cmp    QWORD PTR [rbx+0x20],rax
  429e24:	mov    QWORD PTR [rbx+0x28],rdi
  429e28:	ja     429ef8 <flatcc_json_printer_union_field@@Base+0x1b8>
  429e2e:	mov    rdi,rbx
  429e31:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  429e36:	mov    rax,QWORD PTR [rbx+0x28]
  429e3a:	mov    r9,QWORD PTR [rsp+0x10]
  429e3f:	lea    rdx,[rax+0x5]
  429e43:	cmp    QWORD PTR [rbx+0x20],rdx
  429e47:	jbe    429f1b <flatcc_json_printer_union_field@@Base+0x1db>
  429e4d:	mov    DWORD PTR [rax],0x7079745f
  429e53:	mov    BYTE PTR [rax+0x4],0x65
  429e57:	mov    rax,QWORD PTR [rbx+0x28]
  429e5b:	add    rax,0x5
  429e5f:	mov    QWORD PTR [rbx+0x28],rax
  429e63:	mov    BYTE PTR [rax],0x22
  429e66:	xor    eax,eax
  429e68:	cmp    BYTE PTR [rbx+0x32],0x0
  429e6c:	sete   al
  429e6f:	add    rax,QWORD PTR [rbx+0x28]
  429e73:	xor    esi,esi
  429e75:	lea    rdx,[rax+0x1]
  429e79:	mov    QWORD PTR [rbx+0x28],rdx
  429e7d:	mov    BYTE PTR [rax],0x3a
  429e80:	mov    rax,QWORD PTR [rbx+0x28]
  429e84:	mov    BYTE PTR [rax],0x20
  429e87:	cmp    BYTE PTR [rbx+0x31],0x0
  429e8b:	setne  sil
  429e8f:	add    rsi,QWORD PTR [rbx+0x28]
  429e93:	cmp    BYTE PTR [rbx+0x33],0x0
  429e97:	mov    QWORD PTR [rbx+0x28],rsi
  429e9b:	je     429f48 <flatcc_json_printer_union_field@@Base+0x208>
  429ea1:	movzx  edi,r13b
  429ea5:	call   420100 <flatcc_json_parser_table_as_root@@Base+0xea0>
  429eaa:	cdqe   
  429eac:	add    QWORD PTR [rbx+0x28],rax
  429eb0:	test   r13b,r13b
  429eb3:	jne    429f5b <flatcc_json_printer_union_field@@Base+0x21b>
  429eb9:	nop    DWORD PTR [rax+0x0]
  429ec0:	mov    rax,QWORD PTR [rsp+0x38]
  429ec5:	xor    rax,QWORD PTR fs:0x28
  429ece:	jne    429ffd <flatcc_json_printer_union_field@@Base+0x2bd>
  429ed4:	add    rsp,0x48
  429ed8:	pop    rbx
  429ed9:	pop    rbp
  429eda:	pop    r12
  429edc:	pop    r13
  429ede:	pop    r14
  429ee0:	pop    r15
  429ee2:	ret    
  429ee3:	nop    DWORD PTR [rax+rax*1+0x0]
  429ee8:	movzx  esi,ax
  429eeb:	add    rsi,QWORD PTR [r15]
  429eee:	jmp    429d92 <flatcc_json_printer_union_field@@Base+0x52>
  429ef3:	nop    DWORD PTR [rax+rax*1+0x0]
  429ef8:	call   4050e0 <memcpy@plt>
  429efd:	mov    rax,rbp
  429f00:	add    rax,QWORD PTR [rbx+0x28]
  429f04:	mov    r9,QWORD PTR [rsp+0x10]
  429f09:	lea    rdx,[rax+0x5]
  429f0d:	cmp    QWORD PTR [rbx+0x20],rdx
  429f11:	mov    QWORD PTR [rbx+0x28],rax
  429f15:	ja     429e4d <flatcc_json_printer_union_field@@Base+0x10d>
  429f1b:	lea    rsi,[rip+0x7585]        # 4314a7 <flatcc_builder_padding_base@@Base+0x19c7>
  429f22:	mov    edx,0x5
  429f27:	mov    rdi,rbx
  429f2a:	mov    QWORD PTR [rsp+0x10],r9
  429f2f:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  429f34:	mov    rax,QWORD PTR [rbx+0x28]
  429f38:	mov    r9,QWORD PTR [rsp+0x10]
  429f3d:	jmp    429e63 <flatcc_json_printer_union_field@@Base+0x123>
  429f42:	nop    WORD PTR [rax+rax*1+0x0]
  429f48:	movzx  esi,r13b
  429f4c:	mov    rdi,rbx
  429f4f:	call   r9
  429f52:	test   r13b,r13b
  429f55:	je     429ec0 <flatcc_json_printer_union_field@@Base+0x180>
  429f5b:	mov    rax,QWORD PTR [rbx+0x28]
  429f5f:	mov    rsi,r14
  429f62:	mov    rdi,rbx
  429f65:	lea    rdx,[rax+0x1]
  429f69:	mov    QWORD PTR [rbx+0x28],rdx
  429f6d:	mov    BYTE PTR [rax],0x2c
  429f70:	mov    rdx,rbp
  429f73:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  429f78:	mov    eax,DWORD PTR [r15+0x14]
  429f7c:	mov    BYTE PTR [rsp+0x2c],r13b
  429f81:	lea    rsi,[rsp+0x20]
  429f86:	mov    QWORD PTR [rsp+0x20],r12
  429f8b:	mov    rdi,rbx
  429f8e:	mov    DWORD PTR [rsp+0x28],eax
  429f92:	mov    rax,QWORD PTR [rsp+0x8]
  429f97:	call   rax
  429f99:	jmp    429ec0 <flatcc_json_printer_union_field@@Base+0x180>
  429f9e:	xchg   ax,ax
  429fa0:	mov    rax,QWORD PTR [rbx+0x28]
  429fa4:	mov    rdi,rbx
  429fa7:	mov    QWORD PTR [rsp+0x18],r9
  429fac:	mov    DWORD PTR [rsp+0x10],r8d
  429fb1:	lea    rdx,[rax+0x1]
  429fb5:	mov    QWORD PTR [rbx+0x28],rdx
  429fb9:	mov    BYTE PTR [rax],0xa
  429fbc:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  429fc1:	mov    rax,QWORD PTR [rbx+0x28]
  429fc5:	mov    r8d,DWORD PTR [rsp+0x10]
  429fca:	mov    r9,QWORD PTR [rsp+0x18]
  429fcf:	jmp    429dfd <flatcc_json_printer_union_field@@Base+0xbd>
  429fd4:	nop    DWORD PTR [rax+0x0]
  429fd8:	mov    QWORD PTR [rsp+0x18],r9
  429fdd:	mov    DWORD PTR [rsp+0x10],r8d
  429fe2:	xor    esi,esi
  429fe4:	mov    rdi,rbx
  429fe7:	call   QWORD PTR [rbx+0x48]
  429fea:	mov    rax,QWORD PTR [rbx+0x28]
  429fee:	mov    r9,QWORD PTR [rsp+0x18]
  429ff3:	mov    r8d,DWORD PTR [rsp+0x10]
  429ff8:	jmp    429dfd <flatcc_json_printer_union_field@@Base+0xbd>
  429ffd:	call   405070 <__stack_chk_fail@plt>
  42a002:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a00d:	nop    DWORD PTR [rax]

000000000042a010 <flatcc_json_printer_union_table@@Base>:
  42a010:	push   rbp
  42a011:	push   rbx
  42a012:	mov    rbx,rdi
  42a015:	sub    rsp,0x38
  42a019:	mov    rax,QWORD PTR fs:0x28
  42a022:	mov    QWORD PTR [rsp+0x28],rax
  42a027:	xor    eax,eax
  42a029:	mov    eax,DWORD PTR [rsi+0x8]
  42a02c:	sub    eax,0x1
  42a02f:	jne    42a060 <flatcc_json_printer_union_table@@Base+0x50>
  42a031:	mov    eax,DWORD PTR [rdi+0x3c]
  42a034:	test   eax,eax
  42a036:	jne    42a03f <flatcc_json_printer_union_table@@Base+0x2f>
  42a038:	mov    DWORD PTR [rdi+0x3c],0x2
  42a03f:	mov    rax,QWORD PTR [rsp+0x28]
  42a044:	xor    rax,QWORD PTR fs:0x28
  42a04d:	jne    42a11d <flatcc_json_printer_union_table@@Base+0x10d>
  42a053:	add    rsp,0x38
  42a057:	pop    rbx
  42a058:	pop    rbp
  42a059:	ret    
  42a05a:	nop    WORD PTR [rax+rax*1+0x0]
  42a060:	mov    rcx,QWORD PTR [rsi]
  42a063:	mov    esi,DWORD PTR [rcx]
  42a065:	add    DWORD PTR [rdi+0x38],0x1
  42a069:	add    rcx,rsi
  42a06c:	mov    rsi,QWORD PTR [rdi+0x28]
  42a070:	lea    rdi,[rsi+0x1]
  42a074:	mov    QWORD PTR [rbx+0x28],rdi
  42a078:	mov    BYTE PTR [rsi],0x7b
  42a07b:	mov    rdi,rbx
  42a07e:	mov    DWORD PTR [rsp+0x18],0x0
  42a086:	mov    DWORD PTR [rsp+0x14],eax
  42a08a:	mov    rsi,rsp
  42a08d:	movsxd rax,DWORD PTR [rcx]
  42a090:	mov    QWORD PTR [rsp],rcx
  42a094:	sub    rcx,rax
  42a097:	movzx  eax,WORD PTR [rcx]
  42a09a:	mov    QWORD PTR [rsp+0x8],rcx
  42a09f:	mov    DWORD PTR [rsp+0x10],eax
  42a0a3:	call   rdx
  42a0a5:	cmp    BYTE PTR [rbx+0x31],0x0
  42a0a9:	jne    42a0c0 <flatcc_json_printer_union_table@@Base+0xb0>
  42a0ab:	mov    rsi,QWORD PTR [rbx+0x28]
  42a0af:	lea    rax,[rsi+0x1]
  42a0b3:	mov    QWORD PTR [rbx+0x28],rax
  42a0b7:	mov    BYTE PTR [rsi],0x7d
  42a0ba:	jmp    42a03f <flatcc_json_printer_union_table@@Base+0x2f>
  42a0bc:	nop    DWORD PTR [rax+0x0]
  42a0c0:	mov    rax,QWORD PTR [rbx+0x28]
  42a0c4:	lea    rdx,[rax+0x1]
  42a0c8:	mov    QWORD PTR [rbx+0x28],rdx
  42a0cc:	mov    BYTE PTR [rax],0xa
  42a0cf:	mov    eax,DWORD PTR [rbx+0x38]
  42a0d2:	movzx  esi,BYTE PTR [rbx+0x31]
  42a0d6:	mov    rdi,QWORD PTR [rbx+0x28]
  42a0da:	lea    ebp,[rax-0x1]
  42a0dd:	imul   esi,ebp
  42a0e0:	mov    DWORD PTR [rbx+0x38],ebp
  42a0e3:	movsxd rbp,esi
  42a0e6:	lea    rax,[rdi+rbp*1]
  42a0ea:	cmp    QWORD PTR [rbx+0x20],rax
  42a0ee:	jb     42a110 <flatcc_json_printer_union_table@@Base+0x100>
  42a0f0:	mov    esi,0x20
  42a0f5:	mov    rdx,rbp
  42a0f8:	call   405090 <memset@plt>
  42a0fd:	mov    rsi,rbp
  42a100:	add    rsi,QWORD PTR [rbx+0x28]
  42a104:	jmp    42a0af <flatcc_json_printer_union_table@@Base+0x9f>
  42a106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a110:	mov    rsi,rbp
  42a113:	mov    rdi,rbx
  42a116:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a11b:	jmp    42a0ab <flatcc_json_printer_union_table@@Base+0x9b>
  42a11d:	call   405070 <__stack_chk_fail@plt>
  42a122:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a12d:	nop    DWORD PTR [rax]

000000000042a130 <flatcc_json_printer_union_struct@@Base>:
  42a130:	push   rbp
  42a131:	push   rbx
  42a132:	mov    rbx,rdi
  42a135:	sub    rsp,0x8
  42a139:	mov    rax,QWORD PTR [rdi+0x28]
  42a13d:	add    DWORD PTR [rdi+0x38],0x1
  42a141:	lea    rcx,[rax+0x1]
  42a145:	mov    QWORD PTR [rdi+0x28],rcx
  42a149:	mov    BYTE PTR [rax],0x7b
  42a14c:	mov    rsi,QWORD PTR [rsi]
  42a14f:	mov    eax,DWORD PTR [rsi]
  42a151:	add    rsi,rax
  42a154:	call   rdx
  42a156:	cmp    BYTE PTR [rbx+0x31],0x0
  42a15a:	jne    42a178 <flatcc_json_printer_union_struct@@Base+0x48>
  42a15c:	mov    rsi,QWORD PTR [rbx+0x28]
  42a160:	lea    rax,[rsi+0x1]
  42a164:	mov    QWORD PTR [rbx+0x28],rax
  42a168:	mov    BYTE PTR [rsi],0x7d
  42a16b:	add    rsp,0x8
  42a16f:	pop    rbx
  42a170:	pop    rbp
  42a171:	ret    
  42a172:	nop    WORD PTR [rax+rax*1+0x0]
  42a178:	mov    rax,QWORD PTR [rbx+0x28]
  42a17c:	lea    rdx,[rax+0x1]
  42a180:	mov    QWORD PTR [rbx+0x28],rdx
  42a184:	mov    BYTE PTR [rax],0xa
  42a187:	mov    eax,DWORD PTR [rbx+0x38]
  42a18a:	movzx  esi,BYTE PTR [rbx+0x31]
  42a18e:	mov    rdi,QWORD PTR [rbx+0x28]
  42a192:	lea    ebp,[rax-0x1]
  42a195:	imul   esi,ebp
  42a198:	mov    DWORD PTR [rbx+0x38],ebp
  42a19b:	movsxd rbp,esi
  42a19e:	lea    rax,[rdi+rbp*1]
  42a1a2:	cmp    QWORD PTR [rbx+0x20],rax
  42a1a6:	jb     42a1c0 <flatcc_json_printer_union_struct@@Base+0x90>
  42a1a8:	mov    esi,0x20
  42a1ad:	mov    rdx,rbp
  42a1b0:	call   405090 <memset@plt>
  42a1b5:	mov    rsi,rbp
  42a1b8:	add    rsi,QWORD PTR [rbx+0x28]
  42a1bc:	jmp    42a160 <flatcc_json_printer_union_struct@@Base+0x30>
  42a1be:	xchg   ax,ax
  42a1c0:	mov    rsi,rbp
  42a1c3:	mov    rdi,rbx
  42a1c6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a1cb:	jmp    42a15c <flatcc_json_printer_union_struct@@Base+0x2c>
  42a1cd:	nop    DWORD PTR [rax]

000000000042a1d0 <flatcc_json_printer_union_string@@Base>:
  42a1d0:	mov    rsi,QWORD PTR [rsi]
  42a1d3:	mov    eax,DWORD PTR [rsi]
  42a1d5:	add    rsi,rax
  42a1d8:	mov    edx,DWORD PTR [rsi]
  42a1da:	add    rsi,0x4
  42a1de:	jmp    420ca0 <flatcc_json_parser_table_as_root@@Base+0x1a40>
  42a1e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42a1ee:	xchg   ax,ax

000000000042a1f0 <flatcc_json_printer_embedded_struct_field@@Base>:
  42a1f0:	push   r15
  42a1f2:	push   r14
  42a1f4:	mov    r15,r8
  42a1f7:	push   r13
  42a1f9:	push   r12
  42a1fb:	mov    r13,rcx
  42a1fe:	push   rbp
  42a1ff:	push   rbx
  42a200:	mov    r12,rdx
  42a203:	mov    rbx,rdi
  42a206:	sub    rsp,0x8
  42a20a:	test   esi,esi
  42a20c:	je     42a21d <flatcc_json_printer_embedded_struct_field@@Base+0x2d>
  42a20e:	mov    rax,QWORD PTR [rdi+0x28]
  42a212:	lea    rdx,[rax+0x1]
  42a216:	mov    QWORD PTR [rdi+0x28],rdx
  42a21a:	mov    BYTE PTR [rax],0x2c
  42a21d:	cmp    BYTE PTR [rbx+0x31],0x0
  42a221:	movsxd rbp,r9d
  42a224:	jne    42a360 <flatcc_json_printer_embedded_struct_field@@Base+0x170>
  42a22a:	mov    rsi,QWORD PTR [rbx+0x28]
  42a22e:	cmp    rsi,QWORD PTR [rbx+0x20]
  42a232:	jae    42a2e0 <flatcc_json_printer_embedded_struct_field@@Base+0xf0>
  42a238:	mov    BYTE PTR [rsi],0x22
  42a23b:	xor    edi,edi
  42a23d:	cmp    BYTE PTR [rbx+0x32],0x0
  42a241:	mov    rdx,rbp
  42a244:	mov    rsi,r15
  42a247:	sete   dil
  42a24b:	add    rdi,QWORD PTR [rbx+0x28]
  42a24f:	lea    rax,[rdi+rbp*1]
  42a253:	cmp    QWORD PTR [rbx+0x20],rax
  42a257:	mov    QWORD PTR [rbx+0x28],rdi
  42a25b:	ja     42a2f8 <flatcc_json_printer_embedded_struct_field@@Base+0x108>
  42a261:	mov    rdi,rbx
  42a264:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42a269:	mov    rbp,QWORD PTR [rbx+0x28]
  42a26d:	mov    BYTE PTR [rbp+0x0],0x22
  42a271:	xor    eax,eax
  42a273:	cmp    BYTE PTR [rbx+0x32],0x0
  42a277:	lea    rsi,[r12+r13*1]
  42a27b:	mov    rdi,rbx
  42a27e:	sete   al
  42a281:	add    rax,QWORD PTR [rbx+0x28]
  42a285:	lea    rdx,[rax+0x1]
  42a289:	mov    QWORD PTR [rbx+0x28],rdx
  42a28d:	mov    BYTE PTR [rax],0x3a
  42a290:	mov    rax,QWORD PTR [rbx+0x28]
  42a294:	mov    BYTE PTR [rax],0x20
  42a297:	xor    eax,eax
  42a299:	cmp    BYTE PTR [rbx+0x31],0x0
  42a29d:	setne  al
  42a2a0:	add    rax,QWORD PTR [rbx+0x28]
  42a2a4:	add    DWORD PTR [rbx+0x38],0x1
  42a2a8:	lea    rdx,[rax+0x1]
  42a2ac:	mov    QWORD PTR [rbx+0x28],rdx
  42a2b0:	mov    BYTE PTR [rax],0x7b
  42a2b3:	call   QWORD PTR [rsp+0x40]
  42a2b7:	cmp    BYTE PTR [rbx+0x31],0x0
  42a2bb:	jne    42a310 <flatcc_json_printer_embedded_struct_field@@Base+0x120>
  42a2bd:	mov    rsi,QWORD PTR [rbx+0x28]
  42a2c1:	lea    rax,[rsi+0x1]
  42a2c5:	mov    QWORD PTR [rbx+0x28],rax
  42a2c9:	mov    BYTE PTR [rsi],0x7d
  42a2cc:	add    rsp,0x8
  42a2d0:	pop    rbx
  42a2d1:	pop    rbp
  42a2d2:	pop    r12
  42a2d4:	pop    r13
  42a2d6:	pop    r14
  42a2d8:	pop    r15
  42a2da:	ret    
  42a2db:	nop    DWORD PTR [rax+rax*1+0x0]
  42a2e0:	xor    esi,esi
  42a2e2:	mov    rdi,rbx
  42a2e5:	call   QWORD PTR [rbx+0x48]
  42a2e8:	mov    rsi,QWORD PTR [rbx+0x28]
  42a2ec:	jmp    42a238 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
  42a2f1:	nop    DWORD PTR [rax+0x0]
  42a2f8:	call   4050e0 <memcpy@plt>
  42a2fd:	add    rbp,QWORD PTR [rbx+0x28]
  42a301:	mov    QWORD PTR [rbx+0x28],rbp
  42a305:	jmp    42a26d <flatcc_json_printer_embedded_struct_field@@Base+0x7d>
  42a30a:	nop    WORD PTR [rax+rax*1+0x0]
  42a310:	mov    rax,QWORD PTR [rbx+0x28]
  42a314:	lea    rdx,[rax+0x1]
  42a318:	mov    QWORD PTR [rbx+0x28],rdx
  42a31c:	mov    BYTE PTR [rax],0xa
  42a31f:	mov    eax,DWORD PTR [rbx+0x38]
  42a322:	movzx  esi,BYTE PTR [rbx+0x31]
  42a326:	mov    rdi,QWORD PTR [rbx+0x28]
  42a32a:	lea    ebp,[rax-0x1]
  42a32d:	imul   esi,ebp
  42a330:	mov    DWORD PTR [rbx+0x38],ebp
  42a333:	movsxd rbp,esi
  42a336:	lea    rax,[rdi+rbp*1]
  42a33a:	cmp    QWORD PTR [rbx+0x20],rax
  42a33e:	jb     42a3c0 <flatcc_json_printer_embedded_struct_field@@Base+0x1d0>
  42a344:	mov    esi,0x20
  42a349:	mov    rdx,rbp
  42a34c:	call   405090 <memset@plt>
  42a351:	mov    rsi,rbp
  42a354:	add    rsi,QWORD PTR [rbx+0x28]
  42a358:	jmp    42a2c1 <flatcc_json_printer_embedded_struct_field@@Base+0xd1>
  42a35d:	nop    DWORD PTR [rax]
  42a360:	mov    rax,QWORD PTR [rbx+0x28]
  42a364:	lea    rdx,[rax+0x1]
  42a368:	mov    QWORD PTR [rbx+0x28],rdx
  42a36c:	mov    BYTE PTR [rax],0xa
  42a36f:	movzx  esi,BYTE PTR [rbx+0x31]
  42a373:	mov    rdi,QWORD PTR [rbx+0x28]
  42a377:	imul   esi,DWORD PTR [rbx+0x38]
  42a37b:	movsxd r14,esi
  42a37e:	lea    rax,[rdi+r14*1]
  42a382:	cmp    QWORD PTR [rbx+0x20],rax
  42a386:	jb     42a3a8 <flatcc_json_printer_embedded_struct_field@@Base+0x1b8>
  42a388:	mov    esi,0x20
  42a38d:	mov    rdx,r14
  42a390:	call   405090 <memset@plt>
  42a395:	mov    rsi,r14
  42a398:	add    rsi,QWORD PTR [rbx+0x28]
  42a39c:	mov    QWORD PTR [rbx+0x28],rsi
  42a3a0:	jmp    42a238 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
  42a3a5:	nop    DWORD PTR [rax]
  42a3a8:	mov    rsi,r14
  42a3ab:	mov    rdi,rbx
  42a3ae:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a3b3:	mov    rsi,QWORD PTR [rbx+0x28]
  42a3b7:	jmp    42a238 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
  42a3bc:	nop    DWORD PTR [rax+0x0]
  42a3c0:	mov    rsi,rbp
  42a3c3:	mov    rdi,rbx
  42a3c6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a3cb:	jmp    42a2bd <flatcc_json_printer_embedded_struct_field@@Base+0xcd>

000000000042a3d0 <flatcc_json_printer_struct_field@@Base>:
  42a3d0:	lea    eax,[rdx+rdx*1+0x4]
  42a3d4:	cmp    eax,DWORD PTR [rsi+0x10]
  42a3d7:	jge    42a4e8 <flatcc_json_printer_struct_field@@Base+0x118>
  42a3dd:	push   r15
  42a3df:	push   r14
  42a3e1:	push   r13
  42a3e3:	push   r12
  42a3e5:	push   rbp
  42a3e6:	push   rbx
  42a3e7:	sub    rsp,0x8
  42a3eb:	mov    rdx,QWORD PTR [rsi+0x8]
  42a3ef:	movzx  r13d,WORD PTR [rdx+rax*1]
  42a3f4:	test   r13w,r13w
  42a3f8:	je     42a4da <flatcc_json_printer_struct_field@@Base+0x10a>
  42a3fe:	add    r13,QWORD PTR [rsi]
  42a401:	je     42a4da <flatcc_json_printer_struct_field@@Base+0x10a>
  42a407:	mov    eax,DWORD PTR [rsi+0x18]
  42a40a:	lea    edx,[rax+0x1]
  42a40d:	test   eax,eax
  42a40f:	mov    DWORD PTR [rsi+0x18],edx
  42a412:	je     42a423 <flatcc_json_printer_struct_field@@Base+0x53>
  42a414:	mov    rax,QWORD PTR [rdi+0x28]
  42a418:	lea    rdx,[rax+0x1]
  42a41c:	mov    QWORD PTR [rdi+0x28],rdx
  42a420:	mov    BYTE PTR [rax],0x2c
  42a423:	cmp    BYTE PTR [rdi+0x31],0x0
  42a427:	mov    r12,r9
  42a42a:	mov    r15,rcx
  42a42d:	mov    rbx,rdi
  42a430:	movsxd rbp,r8d
  42a433:	jne    42a570 <flatcc_json_printer_struct_field@@Base+0x1a0>
  42a439:	mov    rsi,QWORD PTR [rdi+0x28]
  42a43d:	cmp    rsi,QWORD PTR [rdi+0x20]
  42a441:	jb     42a44c <flatcc_json_printer_struct_field@@Base+0x7c>
  42a443:	xor    esi,esi
  42a445:	call   QWORD PTR [rdi+0x48]
  42a448:	mov    rsi,QWORD PTR [rbx+0x28]
  42a44c:	mov    BYTE PTR [rsi],0x22
  42a44f:	xor    edi,edi
  42a451:	cmp    BYTE PTR [rbx+0x32],0x0
  42a455:	mov    rdx,rbp
  42a458:	mov    rsi,r15
  42a45b:	sete   dil
  42a45f:	add    rdi,QWORD PTR [rbx+0x28]
  42a463:	lea    rax,[rdi+rbp*1]
  42a467:	cmp    QWORD PTR [rbx+0x20],rax
  42a46b:	mov    QWORD PTR [rbx+0x28],rdi
  42a46f:	ja     42a4f0 <flatcc_json_printer_struct_field@@Base+0x120>
  42a471:	mov    rdi,rbx
  42a474:	call   41fe30 <flatcc_json_parser_table_as_root@@Base+0xbd0>
  42a479:	mov    rbp,QWORD PTR [rbx+0x28]
  42a47d:	mov    BYTE PTR [rbp+0x0],0x22
  42a481:	xor    eax,eax
  42a483:	cmp    BYTE PTR [rbx+0x32],0x0
  42a487:	mov    rsi,r13
  42a48a:	mov    rdi,rbx
  42a48d:	sete   al
  42a490:	add    rax,QWORD PTR [rbx+0x28]
  42a494:	lea    rdx,[rax+0x1]
  42a498:	mov    QWORD PTR [rbx+0x28],rdx
  42a49c:	mov    BYTE PTR [rax],0x3a
  42a49f:	mov    rax,QWORD PTR [rbx+0x28]
  42a4a3:	mov    BYTE PTR [rax],0x20
  42a4a6:	xor    eax,eax
  42a4a8:	cmp    BYTE PTR [rbx+0x31],0x0
  42a4ac:	setne  al
  42a4af:	add    rax,QWORD PTR [rbx+0x28]
  42a4b3:	add    DWORD PTR [rbx+0x38],0x1
  42a4b7:	lea    rdx,[rax+0x1]
  42a4bb:	mov    QWORD PTR [rbx+0x28],rdx
  42a4bf:	mov    BYTE PTR [rax],0x7b
  42a4c2:	call   r12
  42a4c5:	cmp    BYTE PTR [rbx+0x31],0x0
  42a4c9:	jne    42a508 <flatcc_json_printer_struct_field@@Base+0x138>
  42a4cb:	mov    rsi,QWORD PTR [rbx+0x28]
  42a4cf:	lea    rax,[rsi+0x1]
  42a4d3:	mov    QWORD PTR [rbx+0x28],rax
  42a4d7:	mov    BYTE PTR [rsi],0x7d
  42a4da:	add    rsp,0x8
  42a4de:	pop    rbx
  42a4df:	pop    rbp
  42a4e0:	pop    r12
  42a4e2:	pop    r13
  42a4e4:	pop    r14
  42a4e6:	pop    r15
  42a4e8:	repz ret 
  42a4ea:	nop    WORD PTR [rax+rax*1+0x0]
  42a4f0:	call   4050e0 <memcpy@plt>
  42a4f5:	add    rbp,QWORD PTR [rbx+0x28]
  42a4f9:	mov    QWORD PTR [rbx+0x28],rbp
  42a4fd:	jmp    42a47d <flatcc_json_printer_struct_field@@Base+0xad>
  42a502:	nop    WORD PTR [rax+rax*1+0x0]
  42a508:	mov    rax,QWORD PTR [rbx+0x28]
  42a50c:	lea    rdx,[rax+0x1]
  42a510:	mov    QWORD PTR [rbx+0x28],rdx
  42a514:	mov    BYTE PTR [rax],0xa
  42a517:	mov    eax,DWORD PTR [rbx+0x38]
  42a51a:	movzx  esi,BYTE PTR [rbx+0x31]
  42a51e:	mov    rdi,QWORD PTR [rbx+0x28]
  42a522:	lea    ebp,[rax-0x1]
  42a525:	imul   esi,ebp
  42a528:	mov    DWORD PTR [rbx+0x38],ebp
  42a52b:	movsxd rbp,esi
  42a52e:	lea    rax,[rdi+rbp*1]
  42a532:	cmp    QWORD PTR [rbx+0x20],rax
  42a536:	jb     42a558 <flatcc_json_printer_struct_field@@Base+0x188>
  42a538:	mov    esi,0x20
  42a53d:	mov    rdx,rbp
  42a540:	call   405090 <memset@plt>
  42a545:	mov    rsi,rbp
  42a548:	add    rsi,QWORD PTR [rbx+0x28]
  42a54c:	jmp    42a4cf <flatcc_json_printer_struct_field@@Base+0xff>
  42a551:	nop    DWORD PTR [rax+0x0]
  42a558:	mov    rsi,rbp
  42a55b:	mov    rdi,rbx
  42a55e:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a563:	jmp    42a4cb <flatcc_json_printer_struct_field@@Base+0xfb>
  42a568:	nop    DWORD PTR [rax+rax*1+0x0]
  42a570:	mov    rax,QWORD PTR [rdi+0x28]
  42a574:	lea    rdx,[rax+0x1]
  42a578:	mov    QWORD PTR [rdi+0x28],rdx
  42a57c:	mov    BYTE PTR [rax],0xa
  42a57f:	movzx  esi,BYTE PTR [rdi+0x31]
  42a583:	imul   esi,DWORD PTR [rdi+0x38]
  42a587:	mov    rdi,QWORD PTR [rdi+0x28]
  42a58b:	movsxd r14,esi
  42a58e:	lea    rax,[rdi+r14*1]
  42a592:	cmp    QWORD PTR [rbx+0x20],rax
  42a596:	jb     42a5b8 <flatcc_json_printer_struct_field@@Base+0x1e8>
  42a598:	mov    esi,0x20
  42a59d:	mov    rdx,r14
  42a5a0:	call   405090 <memset@plt>
  42a5a5:	mov    rsi,r14
  42a5a8:	add    rsi,QWORD PTR [rbx+0x28]
  42a5ac:	mov    QWORD PTR [rbx+0x28],rsi
  42a5b0:	jmp    42a44c <flatcc_json_printer_struct_field@@Base+0x7c>
  42a5b5:	nop    DWORD PTR [rax]
  42a5b8:	mov    rsi,r14
  42a5bb:	mov    rdi,rbx
  42a5be:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a5c3:	mov    rsi,QWORD PTR [rbx+0x28]
  42a5c7:	jmp    42a44c <flatcc_json_printer_struct_field@@Base+0x7c>
  42a5cc:	nop    DWORD PTR [rax+0x0]

000000000042a5d0 <flatcc_json_printer_struct_as_root@@Base>:
  42a5d0:	push   r12
  42a5d2:	push   rbp
  42a5d3:	mov    r12,r8
  42a5d6:	push   rbx
  42a5d7:	mov    rbp,rsi
  42a5da:	mov    rbx,rdi
  42a5dd:	call   420a60 <flatcc_json_parser_table_as_root@@Base+0x1800>
  42a5e2:	test   eax,eax
  42a5e4:	je     42a6d0 <flatcc_json_printer_struct_as_root@@Base+0x100>
  42a5ea:	mov    rax,QWORD PTR [rbx+0x28]
  42a5ee:	add    DWORD PTR [rbx+0x38],0x1
  42a5f2:	mov    rdi,rbx
  42a5f5:	lea    rdx,[rax+0x1]
  42a5f9:	mov    QWORD PTR [rbx+0x28],rdx
  42a5fd:	mov    BYTE PTR [rax],0x7b
  42a600:	mov    esi,DWORD PTR [rbp+0x0]
  42a603:	add    rsi,rbp
  42a606:	call   r12
  42a609:	cmp    BYTE PTR [rbx+0x31],0x0
  42a60d:	jne    42a670 <flatcc_json_printer_struct_as_root@@Base+0xa0>
  42a60f:	mov    rsi,QWORD PTR [rbx+0x28]
  42a613:	lea    rax,[rsi+0x1]
  42a617:	mov    QWORD PTR [rbx+0x28],rax
  42a61b:	mov    BYTE PTR [rsi],0x7d
  42a61e:	cmp    BYTE PTR [rbx+0x31],0x0
  42a622:	jne    42a650 <flatcc_json_printer_struct_as_root@@Base+0x80>
  42a624:	mov    esi,0x1
  42a629:	mov    rdi,rbx
  42a62c:	call   QWORD PTR [rbx+0x48]
  42a62f:	mov    eax,DWORD PTR [rbx+0x3c]
  42a632:	test   eax,eax
  42a634:	jne    42a6d0 <flatcc_json_printer_struct_as_root@@Base+0x100>
  42a63a:	mov    rax,QWORD PTR [rbx+0x28]
  42a63e:	sub    rax,QWORD PTR [rbx]
  42a641:	add    eax,DWORD PTR [rbx+0x18]
  42a644:	pop    rbx
  42a645:	pop    rbp
  42a646:	pop    r12
  42a648:	ret    
  42a649:	nop    DWORD PTR [rax+0x0]
  42a650:	mov    edx,DWORD PTR [rbx+0x38]
  42a653:	test   edx,edx
  42a655:	jne    42a624 <flatcc_json_printer_struct_as_root@@Base+0x54>
  42a657:	mov    rax,QWORD PTR [rbx+0x28]
  42a65b:	lea    rdx,[rax+0x1]
  42a65f:	mov    QWORD PTR [rbx+0x28],rdx
  42a663:	mov    BYTE PTR [rax],0xa
  42a666:	jmp    42a624 <flatcc_json_printer_struct_as_root@@Base+0x54>
  42a668:	nop    DWORD PTR [rax+rax*1+0x0]
  42a670:	mov    rax,QWORD PTR [rbx+0x28]
  42a674:	lea    rdx,[rax+0x1]
  42a678:	mov    QWORD PTR [rbx+0x28],rdx
  42a67c:	mov    BYTE PTR [rax],0xa
  42a67f:	mov    eax,DWORD PTR [rbx+0x38]
  42a682:	movzx  esi,BYTE PTR [rbx+0x31]
  42a686:	mov    rdi,QWORD PTR [rbx+0x28]
  42a68a:	lea    ebp,[rax-0x1]
  42a68d:	imul   esi,ebp
  42a690:	mov    DWORD PTR [rbx+0x38],ebp
  42a693:	movsxd rbp,esi
  42a696:	lea    rax,[rdi+rbp*1]
  42a69a:	cmp    QWORD PTR [rbx+0x20],rax
  42a69e:	jb     42a6c0 <flatcc_json_printer_struct_as_root@@Base+0xf0>
  42a6a0:	mov    esi,0x20
  42a6a5:	mov    rdx,rbp
  42a6a8:	call   405090 <memset@plt>
  42a6ad:	mov    rsi,rbp
  42a6b0:	add    rsi,QWORD PTR [rbx+0x28]
  42a6b4:	jmp    42a613 <flatcc_json_printer_struct_as_root@@Base+0x43>
  42a6b9:	nop    DWORD PTR [rax+0x0]
  42a6c0:	mov    rsi,rbp
  42a6c3:	mov    rdi,rbx
  42a6c6:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a6cb:	jmp    42a60f <flatcc_json_printer_struct_as_root@@Base+0x3f>
  42a6d0:	pop    rbx
  42a6d1:	mov    eax,0xffffffff
  42a6d6:	pop    rbp
  42a6d7:	pop    r12
  42a6d9:	ret    
  42a6da:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a6e0 <flatcc_json_printer_table_as_root@@Base>:
  42a6e0:	push   r12
  42a6e2:	push   rbp
  42a6e3:	mov    r12,r8
  42a6e6:	push   rbx
  42a6e7:	mov    rbp,rsi
  42a6ea:	mov    rbx,rdi
  42a6ed:	sub    rsp,0x30
  42a6f1:	mov    rax,QWORD PTR fs:0x28
  42a6fa:	mov    QWORD PTR [rsp+0x28],rax
  42a6ff:	xor    eax,eax
  42a701:	call   420a60 <flatcc_json_parser_table_as_root@@Base+0x1800>
  42a706:	test   eax,eax
  42a708:	je     42a7d0 <flatcc_json_printer_table_as_root@@Base+0xf0>
  42a70e:	mov    eax,DWORD PTR [rbp+0x0]
  42a711:	add    DWORD PTR [rbx+0x38],0x1
  42a715:	mov    rsi,rsp
  42a718:	mov    rdi,rbx
  42a71b:	add    rbp,rax
  42a71e:	mov    rax,QWORD PTR [rbx+0x28]
  42a722:	lea    rdx,[rax+0x1]
  42a726:	mov    QWORD PTR [rbx+0x28],rdx
  42a72a:	mov    BYTE PTR [rax],0x7b
  42a72d:	mov    DWORD PTR [rsp+0x18],0x0
  42a735:	mov    DWORD PTR [rsp+0x14],0x63
  42a73d:	movsxd rax,DWORD PTR [rbp+0x0]
  42a741:	mov    QWORD PTR [rsp],rbp
  42a745:	sub    rbp,rax
  42a748:	movzx  eax,WORD PTR [rbp+0x0]
  42a74c:	mov    QWORD PTR [rsp+0x8],rbp
  42a751:	mov    DWORD PTR [rsp+0x10],eax
  42a755:	call   r12
  42a758:	cmp    BYTE PTR [rbx+0x31],0x0
  42a75c:	jne    42a7e0 <flatcc_json_printer_table_as_root@@Base+0x100>
  42a762:	mov    rsi,QWORD PTR [rbx+0x28]
  42a766:	lea    rax,[rsi+0x1]
  42a76a:	mov    QWORD PTR [rbx+0x28],rax
  42a76e:	mov    BYTE PTR [rsi],0x7d
  42a771:	cmp    BYTE PTR [rbx+0x31],0x0
  42a775:	jne    42a7b0 <flatcc_json_printer_table_as_root@@Base+0xd0>
  42a777:	mov    esi,0x1
  42a77c:	mov    rdi,rbx
  42a77f:	call   QWORD PTR [rbx+0x48]
  42a782:	mov    eax,DWORD PTR [rbx+0x3c]
  42a785:	test   eax,eax
  42a787:	jne    42a7d0 <flatcc_json_printer_table_as_root@@Base+0xf0>
  42a789:	mov    rax,QWORD PTR [rbx+0x28]
  42a78d:	sub    rax,QWORD PTR [rbx]
  42a790:	add    eax,DWORD PTR [rbx+0x18]
  42a793:	mov    rcx,QWORD PTR [rsp+0x28]
  42a798:	xor    rcx,QWORD PTR fs:0x28
  42a7a1:	jne    42a840 <flatcc_json_printer_table_as_root@@Base+0x160>
  42a7a7:	add    rsp,0x30
  42a7ab:	pop    rbx
  42a7ac:	pop    rbp
  42a7ad:	pop    r12
  42a7af:	ret    
  42a7b0:	mov    edx,DWORD PTR [rbx+0x38]
  42a7b3:	test   edx,edx
  42a7b5:	jne    42a777 <flatcc_json_printer_table_as_root@@Base+0x97>
  42a7b7:	mov    rax,QWORD PTR [rbx+0x28]
  42a7bb:	lea    rdx,[rax+0x1]
  42a7bf:	mov    QWORD PTR [rbx+0x28],rdx
  42a7c3:	mov    BYTE PTR [rax],0xa
  42a7c6:	jmp    42a777 <flatcc_json_printer_table_as_root@@Base+0x97>
  42a7c8:	nop    DWORD PTR [rax+rax*1+0x0]
  42a7d0:	mov    eax,0xffffffff
  42a7d5:	jmp    42a793 <flatcc_json_printer_table_as_root@@Base+0xb3>
  42a7d7:	nop    WORD PTR [rax+rax*1+0x0]
  42a7e0:	mov    rax,QWORD PTR [rbx+0x28]
  42a7e4:	lea    rdx,[rax+0x1]
  42a7e8:	mov    QWORD PTR [rbx+0x28],rdx
  42a7ec:	mov    BYTE PTR [rax],0xa
  42a7ef:	mov    eax,DWORD PTR [rbx+0x38]
  42a7f2:	movzx  esi,BYTE PTR [rbx+0x31]
  42a7f6:	mov    rdi,QWORD PTR [rbx+0x28]
  42a7fa:	lea    ebp,[rax-0x1]
  42a7fd:	imul   esi,ebp
  42a800:	mov    DWORD PTR [rbx+0x38],ebp
  42a803:	movsxd rbp,esi
  42a806:	lea    rax,[rdi+rbp*1]
  42a80a:	cmp    QWORD PTR [rbx+0x20],rax
  42a80e:	jb     42a830 <flatcc_json_printer_table_as_root@@Base+0x150>
  42a810:	mov    esi,0x20
  42a815:	mov    rdx,rbp
  42a818:	call   405090 <memset@plt>
  42a81d:	mov    rsi,rbp
  42a820:	add    rsi,QWORD PTR [rbx+0x28]
  42a824:	jmp    42a766 <flatcc_json_printer_table_as_root@@Base+0x86>
  42a829:	nop    DWORD PTR [rax+0x0]
  42a830:	mov    rsi,rbp
  42a833:	mov    rdi,rbx
  42a836:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a83b:	jmp    42a762 <flatcc_json_printer_table_as_root@@Base+0x82>
  42a840:	call   405070 <__stack_chk_fail@plt>
  42a845:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042a850 <flatcc_json_printer_struct_as_nested_root@@Base>:
  42a850:	lea    eax,[rdx+rdx*1+0x4]
  42a854:	cmp    eax,DWORD PTR [rsi+0x10]
  42a857:	jge    42a909 <flatcc_json_printer_struct_as_nested_root@@Base+0xb9>
  42a85d:	push   r14
  42a85f:	push   r13
  42a861:	push   r12
  42a863:	push   rbp
  42a864:	push   rbx
  42a865:	mov    rdx,QWORD PTR [rsi+0x8]
  42a869:	movzx  ebx,WORD PTR [rdx+rax*1]
  42a86d:	test   bx,bx
  42a870:	je     42a901 <flatcc_json_printer_struct_as_nested_root@@Base+0xb1>
  42a876:	add    rbx,QWORD PTR [rsi]
  42a879:	je     42a901 <flatcc_json_printer_struct_as_nested_root@@Base+0xb1>
  42a87f:	mov    r14,rsi
  42a882:	mov    esi,DWORD PTR [rbx]
  42a884:	mov    r13,rcx
  42a887:	mov    rcx,r9
  42a88a:	mov    r12d,r8d
  42a88d:	mov    rbp,rdi
  42a890:	add    rbx,rsi
  42a893:	mov    edx,DWORD PTR [rbx]
  42a895:	mov    rsi,rbx
  42a898:	call   420a60 <flatcc_json_parser_table_as_root@@Base+0x1800>
  42a89d:	test   eax,eax
  42a89f:	je     42a901 <flatcc_json_printer_struct_as_nested_root@@Base+0xb1>
  42a8a1:	mov    eax,DWORD PTR [r14+0x18]
  42a8a5:	lea    edx,[rax+0x1]
  42a8a8:	test   eax,eax
  42a8aa:	mov    DWORD PTR [r14+0x18],edx
  42a8ae:	je     42a8bf <flatcc_json_printer_struct_as_nested_root@@Base+0x6f>
  42a8b0:	mov    rax,QWORD PTR [rbp+0x28]
  42a8b4:	lea    rdx,[rax+0x1]
  42a8b8:	mov    QWORD PTR [rbp+0x28],rdx
  42a8bc:	mov    BYTE PTR [rax],0x2c
  42a8bf:	movsxd rdx,r12d
  42a8c2:	mov    rsi,r13
  42a8c5:	mov    rdi,rbp
  42a8c8:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  42a8cd:	mov    rax,QWORD PTR [rbp+0x28]
  42a8d1:	add    DWORD PTR [rbp+0x38],0x1
  42a8d5:	mov    rdi,rbp
  42a8d8:	lea    rdx,[rax+0x1]
  42a8dc:	mov    QWORD PTR [rbp+0x28],rdx
  42a8e0:	mov    BYTE PTR [rax],0x7b
  42a8e3:	mov    esi,DWORD PTR [rbx]
  42a8e5:	add    rsi,rbx
  42a8e8:	call   QWORD PTR [rsp+0x30]
  42a8ec:	cmp    BYTE PTR [rbp+0x31],0x0
  42a8f0:	jne    42a910 <flatcc_json_printer_struct_as_nested_root@@Base+0xc0>
  42a8f2:	mov    rsi,QWORD PTR [rbp+0x28]
  42a8f6:	lea    rax,[rsi+0x1]
  42a8fa:	mov    QWORD PTR [rbp+0x28],rax
  42a8fe:	mov    BYTE PTR [rsi],0x7d
  42a901:	pop    rbx
  42a902:	pop    rbp
  42a903:	pop    r12
  42a905:	pop    r13
  42a907:	pop    r14
  42a909:	repz ret 
  42a90b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a910:	mov    rax,QWORD PTR [rbp+0x28]
  42a914:	lea    rdx,[rax+0x1]
  42a918:	mov    QWORD PTR [rbp+0x28],rdx
  42a91c:	mov    BYTE PTR [rax],0xa
  42a91f:	mov    eax,DWORD PTR [rbp+0x38]
  42a922:	movzx  esi,BYTE PTR [rbp+0x31]
  42a926:	mov    rdi,QWORD PTR [rbp+0x28]
  42a92a:	lea    ebx,[rax-0x1]
  42a92d:	imul   esi,ebx
  42a930:	mov    DWORD PTR [rbp+0x38],ebx
  42a933:	movsxd rbx,esi
  42a936:	lea    rax,[rdi+rbx*1]
  42a93a:	cmp    QWORD PTR [rbp+0x20],rax
  42a93e:	jb     42a960 <flatcc_json_printer_struct_as_nested_root@@Base+0x110>
  42a940:	mov    rdx,rbx
  42a943:	mov    esi,0x20
  42a948:	call   405090 <memset@plt>
  42a94d:	add    rbx,QWORD PTR [rbp+0x28]
  42a951:	mov    rsi,rbx
  42a954:	jmp    42a8f6 <flatcc_json_printer_struct_as_nested_root@@Base+0xa6>
  42a956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a960:	mov    rsi,rbx
  42a963:	mov    rdi,rbp
  42a966:	call   41fed0 <flatcc_json_parser_table_as_root@@Base+0xc70>
  42a96b:	jmp    42a8f2 <flatcc_json_printer_struct_as_nested_root@@Base+0xa2>
  42a96d:	nop    DWORD PTR [rax]

000000000042a970 <flatcc_json_printer_table_as_nested_root@@Base>:
  42a970:	push   r15
  42a972:	push   r14
  42a974:	push   r13
  42a976:	push   r12
  42a978:	push   rbp
  42a979:	push   rbx
  42a97a:	sub    rsp,0x48
  42a97e:	mov    rax,QWORD PTR fs:0x28
  42a987:	mov    QWORD PTR [rsp+0x38],rax
  42a98c:	xor    eax,eax
  42a98e:	lea    eax,[rdx+rdx*1+0x4]
  42a992:	cmp    eax,DWORD PTR [rsi+0x10]
  42a995:	mov    DWORD PTR [rsp+0xc],r8d
  42a99a:	mov    r15,QWORD PTR [rsp+0x80]
  42a9a2:	jge    42aa30 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  42a9a8:	mov    rdx,QWORD PTR [rsi+0x8]
  42a9ac:	mov    r12,rsi
  42a9af:	movzx  ebx,WORD PTR [rdx+rax*1]
  42a9b3:	test   bx,bx
  42a9b6:	je     42aa30 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  42a9b8:	add    rbx,QWORD PTR [rsi]
  42a9bb:	je     42aa30 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  42a9bd:	mov    eax,DWORD PTR [rbx]
  42a9bf:	mov    r14,rcx
  42a9c2:	mov    rcx,r9
  42a9c5:	mov    rbp,rdi
  42a9c8:	add    rbx,rax
  42a9cb:	mov    edx,DWORD PTR [rbx]
  42a9cd:	lea    r13,[rbx+0x4]
  42a9d1:	mov    rsi,r13
  42a9d4:	call   420a60 <flatcc_json_parser_table_as_root@@Base+0x1800>
  42a9d9:	test   eax,eax
  42a9db:	je     42aa30 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  42a9dd:	mov    eax,DWORD PTR [r12+0x18]
  42a9e2:	mov    r8d,DWORD PTR [rsp+0xc]
  42a9e7:	lea    edx,[rax+0x1]
  42a9ea:	test   eax,eax
  42a9ec:	mov    DWORD PTR [r12+0x18],edx
  42a9f1:	je     42aa02 <flatcc_json_printer_table_as_nested_root@@Base+0x92>
  42a9f3:	mov    rax,QWORD PTR [rbp+0x28]
  42a9f7:	lea    rdx,[rax+0x1]
  42a9fb:	mov    QWORD PTR [rbp+0x28],rdx
  42a9ff:	mov    BYTE PTR [rax],0x2c
  42aa02:	movsxd rdx,r8d
  42aa05:	mov    rsi,r14
  42aa08:	mov    rdi,rbp
  42aa0b:	call   420f10 <flatcc_json_parser_table_as_root@@Base+0x1cb0>
  42aa10:	mov    eax,DWORD PTR [r12+0x14]
  42aa15:	sub    eax,0x1
  42aa18:	jne    42aa58 <flatcc_json_printer_table_as_nested_root@@Base+0xe8>
  42aa1a:	mov    eax,DWORD PTR [rbp+0x3c]
  42aa1d:	test   eax,eax
  42aa1f:	jne    42aa30 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  42aa21:	mov    DWORD PTR [rbp+0x3c],0x2
  42aa28:	nop    DWORD PTR [rax+rax*1+0x0]
  42aa30:	mov    rax,QWORD PTR [rsp+0x38]
  42aa35:	xor    rax,QWORD PTR fs:0x28
  42aa3e:	jne    42aadd <flatcc_json_printer_table_as_nested_root@@Base+0x16d>
  42aa44:	add    rsp,0x48
  42aa48:	pop    rbx
  42aa49:	pop    rbp
  42aa4a:	pop    r12
  42aa4c:	pop    r13
  42aa4e:	pop    r14
  42aa50:	pop    r15
  42aa52:	ret    
  42aa53:	nop    DWORD PTR [rax+rax*1+0x0]
  42aa58:	mov    edx,DWORD PTR [rbx+0x4]
  42aa5b:	add    DWORD PTR [rbp+0x38],0x1
  42aa5f:	lea    rsi,[rsp+0x10]
  42aa64:	mov    rdi,rbp
  42aa67:	add    r13,rdx
  42aa6a:	mov    rdx,QWORD PTR [rbp+0x28]
  42aa6e:	lea    rcx,[rdx+0x1]
  42aa72:	mov    QWORD PTR [rbp+0x28],rcx
  42aa76:	mov    BYTE PTR [rdx],0x7b
  42aa79:	mov    DWORD PTR [rsp+0x28],0x0
  42aa81:	mov    DWORD PTR [rsp+0x24],eax
  42aa85:	movsxd rax,DWORD PTR [r13+0x0]
  42aa89:	mov    QWORD PTR [rsp+0x10],r13
  42aa8e:	sub    r13,rax
  42aa91:	movzx  eax,WORD PTR [r13+0x0]
  42aa96:	mov    QWORD PTR [rsp+0x18],r13
  42aa9b:	mov    DWORD PTR [rsp+0x20],eax
  42aa9f:	call   r15
  42aaa2:	cmp    BYTE PTR [rbp+0x31],0x0
  42aaa6:	jne    42aac0 <flatcc_json_printer_table_as_nested_root@@Base+0x150>
  42aaa8:	mov    rax,QWORD PTR [rbp+0x28]
  42aaac:	lea    rdx,[rax+0x1]
  42aab0:	mov    QWORD PTR [rbp+0x28],rdx
  42aab4:	mov    BYTE PTR [rax],0x7d
  42aab7:	jmp    42aa30 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
  42aabc:	nop    DWORD PTR [rax+0x0]
  42aac0:	mov    rax,QWORD PTR [rbp+0x28]
  42aac4:	mov    rdi,rbp
  42aac7:	lea    rdx,[rax+0x1]
  42aacb:	mov    QWORD PTR [rbp+0x28],rdx
  42aacf:	mov    BYTE PTR [rax],0xa
  42aad2:	sub    DWORD PTR [rbp+0x38],0x1
  42aad6:	call   41ff50 <flatcc_json_parser_table_as_root@@Base+0xcf0>
  42aadb:	jmp    42aaa8 <flatcc_json_printer_table_as_nested_root@@Base+0x138>
  42aadd:	call   405070 <__stack_chk_fail@plt>
  42aae2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42aaed:	nop    DWORD PTR [rax]

000000000042aaf0 <flatcc_json_printer_init@@Base>:
  42aaf0:	push   rbx
  42aaf1:	mov    QWORD PTR [rdi],0x0
  42aaf8:	mov    rbx,rdi
  42aafb:	mov    QWORD PTR [rdi+0x48],0x0
  42ab03:	add    rdi,0x8
  42ab07:	mov    rcx,rbx
  42ab0a:	and    rdi,0xfffffffffffffff8
  42ab0e:	xor    eax,eax
  42ab10:	sub    rcx,rdi
  42ab13:	add    ecx,0x50
  42ab16:	shr    ecx,0x3
  42ab19:	test   rsi,rsi
  42ab1c:	rep stos QWORD PTR es:[rdi],rax
  42ab1f:	je     42ab70 <flatcc_json_printer_init@@Base+0x80>
  42ab21:	lea    rax,[rip+0xffffffffffff5478]        # 41ffa0 <flatcc_json_parser_table_as_root@@Base+0xd40>
  42ab28:	mov    QWORD PTR [rbx+0x40],rsi
  42ab2c:	mov    edi,0x4040
  42ab31:	mov    QWORD PTR [rbx+0x48],rax
  42ab35:	call   4050f0 <malloc@plt>
  42ab3a:	test   rax,rax
  42ab3d:	mov    QWORD PTR [rbx],rax
  42ab40:	je     42ab7c <flatcc_json_printer_init@@Base+0x8c>
  42ab42:	mov    QWORD PTR [rbx+0x28],rax
  42ab46:	add    rax,0x4000
  42ab4c:	mov    BYTE PTR [rbx+0x30],0x1
  42ab50:	mov    QWORD PTR [rbx+0x20],rax
  42ab54:	mov    QWORD PTR [rbx+0x8],0x4040
  42ab5c:	xor    eax,eax
  42ab5e:	mov    QWORD PTR [rbx+0x10],0x4000
  42ab66:	pop    rbx
  42ab67:	ret    
  42ab68:	nop    DWORD PTR [rax+rax*1+0x0]
  42ab70:	mov    rax,QWORD PTR [rip+0xe459]        # 438fd0 <stdout@GLIBC_2.2.5>
  42ab77:	mov    rsi,QWORD PTR [rax]
  42ab7a:	jmp    42ab21 <flatcc_json_printer_init@@Base+0x31>
  42ab7c:	mov    eax,0xffffffff
  42ab81:	pop    rbx
  42ab82:	ret    
  42ab83:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ab8e:	xchg   ax,ax

000000000042ab90 <flatcc_json_printer_init_buffer@@Base>:
  42ab90:	cmp    rdx,0x3f
  42ab94:	jbe    42abda <flatcc_json_printer_init_buffer@@Base+0x4a>
  42ab96:	mov    r8,rdi
  42ab99:	lea    rdi,[rdi+0x8]
  42ab9d:	xor    eax,eax
  42ab9f:	mov    rcx,r8
  42aba2:	and    rdi,0xfffffffffffffff8
  42aba6:	sub    rcx,rdi
  42aba9:	add    ecx,0x50
  42abac:	shr    ecx,0x3
  42abaf:	rep stos QWORD PTR es:[rdi],rax
  42abb2:	mov    QWORD PTR [r8+0x8],rdx
  42abb6:	lea    rax,[rip+0xffffffffffff5233]        # 41fdf0 <flatcc_json_parser_table_as_root@@Base+0xb90>
  42abbd:	sub    rdx,0x40
  42abc1:	mov    QWORD PTR [r8+0x10],rdx
  42abc5:	add    rdx,rsi
  42abc8:	mov    QWORD PTR [r8],rsi
  42abcb:	mov    QWORD PTR [r8+0x48],rax
  42abcf:	mov    QWORD PTR [r8+0x28],rsi
  42abd3:	xor    eax,eax
  42abd5:	mov    QWORD PTR [r8+0x20],rdx
  42abd9:	ret    
  42abda:	lea    rcx,[rip+0x68df]        # 4314c0 <flatcc_builder_padding_base@@Base+0x19e0>
  42abe1:	lea    rsi,[rip+0x66f8]        # 4312e0 <flatcc_builder_padding_base@@Base+0x1800>
  42abe8:	lea    rdi,[rip+0x6809]        # 4313f8 <flatcc_builder_padding_base@@Base+0x1918>
  42abef:	sub    rsp,0x8
  42abf3:	mov    edx,0x48d
  42abf8:	call   405080 <__assert_fail@plt>
  42abfd:	nop    DWORD PTR [rax]

000000000042ac00 <flatcc_json_printer_init_dynamic_buffer@@Base>:
  42ac00:	test   rsi,rsi
  42ac03:	push   r12
  42ac05:	push   rbp
  42ac06:	push   rbx
  42ac07:	mov    rbx,rdi
  42ac0a:	je     42ac88 <flatcc_json_printer_init_dynamic_buffer@@Base+0x88>
  42ac0c:	cmp    rsi,0x40
  42ac10:	mov    ebp,0x40
  42ac15:	cmovae rbp,rsi
  42ac19:	lea    r12,[rbp-0x40]
  42ac1d:	lea    rdi,[rbx+0x8]
  42ac21:	mov    rcx,rbx
  42ac24:	xor    eax,eax
  42ac26:	mov    QWORD PTR [rbx],0x0
  42ac2d:	mov    QWORD PTR [rbx+0x48],0x0
  42ac35:	and    rdi,0xfffffffffffffff8
  42ac39:	sub    rcx,rdi
  42ac3c:	add    ecx,0x50
  42ac3f:	shr    ecx,0x3
  42ac42:	rep stos QWORD PTR es:[rdi],rax
  42ac45:	mov    rdi,rbp
  42ac48:	call   4050f0 <malloc@plt>
  42ac4d:	mov    QWORD PTR [rbx+0x10],r12
  42ac51:	mov    rdx,rax
  42ac54:	add    r12,rax
  42ac57:	mov    QWORD PTR [rbx],rax
  42ac5a:	mov    QWORD PTR [rbx+0x28],rax
  42ac5e:	lea    rax,[rip+0xffffffffffff53db]        # 420040 <flatcc_json_parser_table_as_root@@Base+0xde0>
  42ac65:	mov    BYTE PTR [rbx+0x30],0x1
  42ac69:	mov    QWORD PTR [rbx+0x8],rbp
  42ac6d:	mov    QWORD PTR [rbx+0x48],rax
  42ac71:	xor    eax,eax
  42ac73:	test   rdx,rdx
  42ac76:	mov    QWORD PTR [rbx+0x20],r12
  42ac7a:	je     42ac98 <flatcc_json_printer_init_dynamic_buffer@@Base+0x98>
  42ac7c:	pop    rbx
  42ac7d:	pop    rbp
  42ac7e:	pop    r12
  42ac80:	ret    
  42ac81:	nop    DWORD PTR [rax+0x0]
  42ac88:	mov    r12d,0xfc0
  42ac8e:	mov    ebp,0x1000
  42ac93:	jmp    42ac1d <flatcc_json_printer_init_dynamic_buffer@@Base+0x1d>
  42ac95:	nop    DWORD PTR [rax]
  42ac98:	mov    edx,DWORD PTR [rbx+0x3c]
  42ac9b:	mov    eax,0xffffffff
  42aca0:	test   edx,edx
  42aca2:	jne    42ac7c <flatcc_json_printer_init_dynamic_buffer@@Base+0x7c>
  42aca4:	mov    DWORD PTR [rbx+0x3c],0x3
  42acab:	pop    rbx
  42acac:	pop    rbp
  42acad:	pop    r12
  42acaf:	ret    

000000000042acb0 <flatcc_json_printer_get_buffer@@Base>:
  42acb0:	push   rbp
  42acb1:	push   rbx
  42acb2:	mov    rbp,rsi
  42acb5:	mov    rbx,rdi
  42acb8:	xor    esi,esi
  42acba:	sub    rsp,0x8
  42acbe:	call   QWORD PTR [rdi+0x48]
  42acc1:	test   rbp,rbp
  42acc4:	mov    rax,QWORD PTR [rbx]
  42acc7:	je     42acd4 <flatcc_json_printer_get_buffer@@Base+0x24>
  42acc9:	mov    rdx,QWORD PTR [rbx+0x28]
  42accd:	sub    rdx,rax
  42acd0:	mov    QWORD PTR [rbp+0x0],rdx
  42acd4:	add    rsp,0x8
  42acd8:	pop    rbx
  42acd9:	pop    rbp
  42acda:	ret    
  42acdb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ace0 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
  42ace0:	push   rbx
  42ace1:	mov    rbx,rdi
  42ace4:	call   42acb0 <flatcc_json_printer_get_buffer@@Base>
  42ace9:	lea    rdi,[rbx+0x8]
  42aced:	mov    QWORD PTR [rbx],0x0
  42acf4:	mov    QWORD PTR [rbx+0x48],0x0
  42acfc:	mov    rdx,rax
  42acff:	xor    eax,eax
  42ad01:	and    rdi,0xfffffffffffffff8
  42ad05:	sub    rbx,rdi
  42ad08:	lea    ecx,[rbx+0x50]
  42ad0b:	shr    ecx,0x3
  42ad0e:	rep stos QWORD PTR es:[rdi],rax
  42ad11:	mov    rax,rdx
  42ad14:	pop    rbx
  42ad15:	ret    
  42ad16:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042ad20 <flatcc_json_printer_clear@@Base>:
  42ad20:	push   rbx
  42ad21:	cmp    BYTE PTR [rdi+0x30],0x0
  42ad25:	mov    rbx,rdi
  42ad28:	je     42ad37 <flatcc_json_printer_clear@@Base+0x17>
  42ad2a:	mov    rdi,QWORD PTR [rdi]
  42ad2d:	test   rdi,rdi
  42ad30:	je     42ad37 <flatcc_json_printer_clear@@Base+0x17>
  42ad32:	call   405030 <free@plt>
  42ad37:	lea    rdi,[rbx+0x8]
  42ad3b:	mov    QWORD PTR [rbx],0x0
  42ad42:	mov    QWORD PTR [rbx+0x48],0x0
  42ad4a:	xor    eax,eax
  42ad4c:	and    rdi,0xfffffffffffffff8
  42ad50:	sub    rbx,rdi
  42ad53:	lea    ecx,[rbx+0x50]
  42ad56:	shr    ecx,0x3
  42ad59:	rep stos QWORD PTR es:[rdi],rax
  42ad5c:	pop    rbx
  42ad5d:	ret    
  42ad5e:	xchg   ax,ax

000000000042ad60 <__libc_csu_init@@Base>:
  42ad60:	endbr64 
  42ad64:	push   r15
  42ad66:	lea    r15,[rip+0xe01b]        # 438d88 <flatcc_builder_padding_base@@Base+0x92a8>
  42ad6d:	push   r14
  42ad6f:	mov    r14,rdx
  42ad72:	push   r13
  42ad74:	mov    r13,rsi
  42ad77:	push   r12
  42ad79:	mov    r12d,edi
  42ad7c:	push   rbp
  42ad7d:	lea    rbp,[rip+0xe00c]        # 438d90 <flatcc_builder_padding_base@@Base+0x92b0>
  42ad84:	push   rbx
  42ad85:	sub    rbp,r15
  42ad88:	sub    rsp,0x8
  42ad8c:	call   405000 <free@plt-0x30>
  42ad91:	sar    rbp,0x3
  42ad95:	je     42adb6 <__libc_csu_init@@Base+0x56>
  42ad97:	xor    ebx,ebx
  42ad99:	nop    DWORD PTR [rax+0x0]
  42ada0:	mov    rdx,r14
  42ada3:	mov    rsi,r13
  42ada6:	mov    edi,r12d
  42ada9:	call   QWORD PTR [r15+rbx*8]
  42adad:	add    rbx,0x1
  42adb1:	cmp    rbp,rbx
  42adb4:	jne    42ada0 <__libc_csu_init@@Base+0x40>
  42adb6:	add    rsp,0x8
  42adba:	pop    rbx
  42adbb:	pop    rbp
  42adbc:	pop    r12
  42adbe:	pop    r13
  42adc0:	pop    r14
  42adc2:	pop    r15
  42adc4:	ret    
  42adc5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042add0 <__libc_csu_fini@@Base>:
  42add0:	endbr64 
  42add4:	ret    

Disassembly of section .fini:

000000000042add8 <.fini>:
  42add8:	endbr64 
  42addc:	sub    rsp,0x8
  42ade0:	add    rsp,0x8
  42ade4:	ret    
