
../repos/dvidelabs-flatcc-3b39ef7/test/emit_test/emit_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xcfe1]        # 40fff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x12a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <.plt>:
  403020:	push   QWORD PTR [rip+0xcfe2]        # 410008 <flatcc_builder_padding_base@@Base+0x4b28>
  403026:	bnd jmp QWORD PTR [rip+0xcfe3]        # 410010 <flatcc_builder_padding_base@@Base+0x4b30>
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   0x0
  403039:	bnd jmp 403020 <free@plt-0x120>
  40303f:	nop
  403040:	endbr64 
  403044:	push   0x1
  403049:	bnd jmp 403020 <free@plt-0x120>
  40304f:	nop
  403050:	endbr64 
  403054:	push   0x2
  403059:	bnd jmp 403020 <free@plt-0x120>
  40305f:	nop
  403060:	endbr64 
  403064:	push   0x3
  403069:	bnd jmp 403020 <free@plt-0x120>
  40306f:	nop
  403070:	endbr64 
  403074:	push   0x4
  403079:	bnd jmp 403020 <free@plt-0x120>
  40307f:	nop
  403080:	endbr64 
  403084:	push   0x5
  403089:	bnd jmp 403020 <free@plt-0x120>
  40308f:	nop
  403090:	endbr64 
  403094:	push   0x6
  403099:	bnd jmp 403020 <free@plt-0x120>
  40309f:	nop
  4030a0:	endbr64 
  4030a4:	push   0x7
  4030a9:	bnd jmp 403020 <free@plt-0x120>
  4030af:	nop
  4030b0:	endbr64 
  4030b4:	push   0x8
  4030b9:	bnd jmp 403020 <free@plt-0x120>
  4030bf:	nop
  4030c0:	endbr64 
  4030c4:	push   0x9
  4030c9:	bnd jmp 403020 <free@plt-0x120>
  4030cf:	nop
  4030d0:	endbr64 
  4030d4:	push   0xa
  4030d9:	bnd jmp 403020 <free@plt-0x120>
  4030df:	nop
  4030e0:	endbr64 
  4030e4:	push   0xb
  4030e9:	bnd jmp 403020 <free@plt-0x120>
  4030ef:	nop
  4030f0:	endbr64 
  4030f4:	push   0xc
  4030f9:	bnd jmp 403020 <free@plt-0x120>
  4030ff:	nop
  403100:	endbr64 
  403104:	push   0xd
  403109:	bnd jmp 403020 <free@plt-0x120>
  40310f:	nop
  403110:	endbr64 
  403114:	push   0xe
  403119:	bnd jmp 403020 <free@plt-0x120>
  40311f:	nop
  403120:	endbr64 
  403124:	push   0xf
  403129:	bnd jmp 403020 <free@plt-0x120>
  40312f:	nop
  403130:	endbr64 
  403134:	push   0x10
  403139:	bnd jmp 403020 <free@plt-0x120>
  40313f:	nop

Disassembly of section .plt.sec:

0000000000403140 <free@plt>:
  403140:	endbr64 
  403144:	bnd jmp QWORD PTR [rip+0xcecd]        # 410018 <free@GLIBC_2.2.5>
  40314b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403150 <strncpy@plt>:
  403150:	endbr64 
  403154:	bnd jmp QWORD PTR [rip+0xcec5]        # 410020 <strncpy@GLIBC_2.2.5>
  40315b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403160 <puts@plt>:
  403160:	endbr64 
  403164:	bnd jmp QWORD PTR [rip+0xcebd]        # 410028 <puts@GLIBC_2.2.5>
  40316b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403170 <strlen@plt>:
  403170:	endbr64 
  403174:	bnd jmp QWORD PTR [rip+0xceb5]        # 410030 <strlen@GLIBC_2.2.5>
  40317b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403180 <__stack_chk_fail@plt>:
  403180:	endbr64 
  403184:	bnd jmp QWORD PTR [rip+0xcead]        # 410038 <__stack_chk_fail@GLIBC_2.4>
  40318b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403190 <printf@plt>:
  403190:	endbr64 
  403194:	bnd jmp QWORD PTR [rip+0xcea5]        # 410040 <printf@GLIBC_2.2.5>
  40319b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031a0 <__assert_fail@plt>:
  4031a0:	endbr64 
  4031a4:	bnd jmp QWORD PTR [rip+0xce9d]        # 410048 <__assert_fail@GLIBC_2.2.5>
  4031ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031b0 <memset@plt>:
  4031b0:	endbr64 
  4031b4:	bnd jmp QWORD PTR [rip+0xce95]        # 410050 <memset@GLIBC_2.2.5>
  4031bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031c0 <fputc@plt>:
  4031c0:	endbr64 
  4031c4:	bnd jmp QWORD PTR [rip+0xce8d]        # 410058 <fputc@GLIBC_2.2.5>
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <memchr@plt>:
  4031d0:	endbr64 
  4031d4:	bnd jmp QWORD PTR [rip+0xce85]        # 410060 <memchr@GLIBC_2.2.5>
  4031db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031e0 <memcmp@plt>:
  4031e0:	endbr64 
  4031e4:	bnd jmp QWORD PTR [rip+0xce7d]        # 410068 <memcmp@GLIBC_2.2.5>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031f0 <fprintf@plt>:
  4031f0:	endbr64 
  4031f4:	bnd jmp QWORD PTR [rip+0xce75]        # 410070 <fprintf@GLIBC_2.2.5>
  4031fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403200 <memcpy@plt>:
  403200:	endbr64 
  403204:	bnd jmp QWORD PTR [rip+0xce6d]        # 410078 <memcpy@GLIBC_2.14>
  40320b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403210 <malloc@plt>:
  403210:	endbr64 
  403214:	bnd jmp QWORD PTR [rip+0xce65]        # 410080 <malloc@GLIBC_2.2.5>
  40321b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403220 <realloc@plt>:
  403220:	endbr64 
  403224:	bnd jmp QWORD PTR [rip+0xce5d]        # 410088 <realloc@GLIBC_2.2.5>
  40322b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403230 <fwrite@plt>:
  403230:	endbr64 
  403234:	bnd jmp QWORD PTR [rip+0xce55]        # 410090 <fwrite@GLIBC_2.2.5>
  40323b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403240 <posix_memalign@plt>:
  403240:	endbr64 
  403244:	bnd jmp QWORD PTR [rip+0xce4d]        # 410098 <posix_memalign@GLIBC_2.2.5>
  40324b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000403250 <_start@@Base>:
  403250:	endbr64 
  403254:	xor    ebp,ebp
  403256:	mov    r9,rdx
  403259:	pop    rsi
  40325a:	mov    rdx,rsp
  40325d:	and    rsp,0xfffffffffffffff0
  403261:	push   rax
  403262:	push   rsp
  403263:	mov    r8,0x40a740
  40326a:	mov    rcx,0x40a6d0
  403271:	mov    rdi,0x4043ff
  403278:	call   QWORD PTR [rip+0xcd6a]        # 40ffe8 <__libc_start_main@GLIBC_2.2.5>
  40327e:	hlt    
  40327f:	nop
  403280:	endbr64 
  403284:	ret    
  403285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40328f:	nop
  403290:	mov    eax,0x4100c0
  403295:	cmp    rax,0x4100c0
  40329b:	je     4032b0 <_start@@Base+0x60>
  40329d:	mov    eax,0x0
  4032a2:	test   rax,rax
  4032a5:	je     4032b0 <_start@@Base+0x60>
  4032a7:	mov    edi,0x4100c0
  4032ac:	jmp    rax
  4032ae:	xchg   ax,ax
  4032b0:	ret    
  4032b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032bc:	nop    DWORD PTR [rax+0x0]
  4032c0:	mov    esi,0x4100c0
  4032c5:	sub    rsi,0x4100c0
  4032cc:	sar    rsi,0x3
  4032d0:	mov    rax,rsi
  4032d3:	shr    rax,0x3f
  4032d7:	add    rsi,rax
  4032da:	sar    rsi,1
  4032dd:	je     4032f0 <_start@@Base+0xa0>
  4032df:	mov    eax,0x0
  4032e4:	test   rax,rax
  4032e7:	je     4032f0 <_start@@Base+0xa0>
  4032e9:	mov    edi,0x4100c0
  4032ee:	jmp    rax
  4032f0:	ret    
  4032f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032fc:	nop    DWORD PTR [rax+0x0]
  403300:	endbr64 
  403304:	cmp    BYTE PTR [rip+0xcdb5],0x0        # 4100c0 <__bss_start@@Base>
  40330b:	jne    403320 <_start@@Base+0xd0>
  40330d:	push   rbp
  40330e:	mov    rbp,rsp
  403311:	call   403290 <_start@@Base+0x40>
  403316:	mov    BYTE PTR [rip+0xcda3],0x1        # 4100c0 <__bss_start@@Base>
  40331d:	pop    rbp
  40331e:	ret    
  40331f:	nop
  403320:	ret    
  403321:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40332c:	nop    DWORD PTR [rax+0x0]
  403330:	endbr64 
  403334:	jmp    4032c0 <_start@@Base+0x70>
  403336:	push   rbp
  403337:	mov    rbp,rsp
  40333a:	mov    eax,edi
  40333c:	mov    BYTE PTR [rbp-0x4],al
  40333f:	movzx  eax,BYTE PTR [rbp-0x4]
  403343:	pop    rbp
  403344:	ret    
  403345:	push   rbp
  403346:	mov    rbp,rsp
  403349:	mov    eax,edi
  40334b:	mov    BYTE PTR [rbp-0x4],al
  40334e:	movzx  eax,BYTE PTR [rbp-0x4]
  403352:	pop    rbp
  403353:	ret    
  403354:	push   rbp
  403355:	mov    rbp,rsp
  403358:	sub    rsp,0x8
  40335c:	mov    QWORD PTR [rbp-0x8],rdi
  403360:	mov    rax,QWORD PTR [rbp-0x8]
  403364:	movzx  eax,BYTE PTR [rax]
  403367:	movzx  eax,al
  40336a:	mov    edi,eax
  40336c:	call   403336 <_start@@Base+0xe6>
  403371:	leave  
  403372:	ret    
  403373:	push   rbp
  403374:	mov    rbp,rsp
  403377:	mov    QWORD PTR [rbp-0x8],rdi
  40337b:	mov    rax,QWORD PTR [rbp-0x8]
  40337f:	pop    rbp
  403380:	ret    
  403381:	push   rbp
  403382:	mov    rbp,rsp
  403385:	mov    QWORD PTR [rbp-0x8],rdi
  403389:	mov    rax,QWORD PTR [rbp-0x8]
  40338d:	pop    rbp
  40338e:	ret    
  40338f:	push   rbp
  403390:	mov    rbp,rsp
  403393:	sub    rsp,0x8
  403397:	mov    QWORD PTR [rbp-0x8],rdi
  40339b:	mov    rax,QWORD PTR [rbp-0x8]
  40339f:	mov    rax,QWORD PTR [rax]
  4033a2:	mov    rdi,rax
  4033a5:	call   403373 <_start@@Base+0x123>
  4033aa:	leave  
  4033ab:	ret    
  4033ac:	push   rbp
  4033ad:	mov    rbp,rsp
  4033b0:	vmovss DWORD PTR [rbp-0x14],xmm0
  4033b5:	vmovss xmm0,DWORD PTR [rbp-0x14]
  4033ba:	vmovss DWORD PTR [rbp-0x4],xmm0
  4033bf:	mov    eax,DWORD PTR [rbp-0x4]
  4033c2:	mov    DWORD PTR [rbp-0x4],eax
  4033c5:	vmovss xmm0,DWORD PTR [rbp-0x4]
  4033ca:	pop    rbp
  4033cb:	ret    
  4033cc:	push   rbp
  4033cd:	mov    rbp,rsp
  4033d0:	sub    rsp,0x8
  4033d4:	mov    QWORD PTR [rbp-0x8],rdi
  4033d8:	mov    rax,QWORD PTR [rbp-0x8]
  4033dc:	mov    eax,DWORD PTR [rax]
  4033de:	vmovd  xmm0,eax
  4033e2:	call   4033ac <_start@@Base+0x15c>
  4033e7:	leave  
  4033e8:	ret    
  4033e9:	push   rbp
  4033ea:	mov    rbp,rsp
  4033ed:	mov    DWORD PTR [rbp-0x4],edi
  4033f0:	mov    eax,DWORD PTR [rbp-0x4]
  4033f3:	pop    rbp
  4033f4:	ret    
  4033f5:	push   rbp
  4033f6:	mov    rbp,rsp
  4033f9:	sub    rsp,0x8
  4033fd:	mov    QWORD PTR [rbp-0x8],rdi
  403401:	mov    rax,QWORD PTR [rbp-0x8]
  403405:	mov    eax,DWORD PTR [rax]
  403407:	mov    edi,eax
  403409:	call   4033e9 <_start@@Base+0x199>
  40340e:	leave  
  40340f:	ret    
  403410:	push   rbp
  403411:	mov    rbp,rsp
  403414:	mov    DWORD PTR [rbp-0x4],edi
  403417:	mov    eax,DWORD PTR [rbp-0x4]
  40341a:	pop    rbp
  40341b:	ret    
  40341c:	push   rbp
  40341d:	mov    rbp,rsp
  403420:	sub    rsp,0x8
  403424:	mov    QWORD PTR [rbp-0x8],rdi
  403428:	mov    rax,QWORD PTR [rbp-0x8]
  40342c:	mov    eax,DWORD PTR [rax]
  40342e:	mov    edi,eax
  403430:	call   403410 <_start@@Base+0x1c0>
  403435:	leave  
  403436:	ret    
  403437:	push   rbp
  403438:	mov    rbp,rsp
  40343b:	mov    eax,edi
  40343d:	mov    WORD PTR [rbp-0x4],ax
  403441:	movzx  eax,WORD PTR [rbp-0x4]
  403445:	pop    rbp
  403446:	ret    
  403447:	push   rbp
  403448:	mov    rbp,rsp
  40344b:	sub    rsp,0x8
  40344f:	mov    QWORD PTR [rbp-0x8],rdi
  403453:	mov    rax,QWORD PTR [rbp-0x8]
  403457:	movzx  eax,WORD PTR [rax]
  40345a:	movzx  eax,ax
  40345d:	mov    edi,eax
  40345f:	call   403437 <_start@@Base+0x1e7>
  403464:	leave  
  403465:	ret    
  403466:	push   rbp
  403467:	mov    rbp,rsp
  40346a:	mov    DWORD PTR [rbp-0x4],edi
  40346d:	mov    eax,DWORD PTR [rbp-0x4]
  403470:	pop    rbp
  403471:	ret    
  403472:	push   rbp
  403473:	mov    rbp,rsp
  403476:	mov    DWORD PTR [rbp-0x4],edi
  403479:	mov    eax,DWORD PTR [rbp-0x4]
  40347c:	pop    rbp
  40347d:	ret    
  40347e:	push   rbp
  40347f:	mov    rbp,rsp
  403482:	sub    rsp,0x8
  403486:	mov    QWORD PTR [rbp-0x8],rdi
  40348a:	mov    rax,QWORD PTR [rbp-0x8]
  40348e:	mov    eax,DWORD PTR [rax]
  403490:	mov    edi,eax
  403492:	call   403466 <_start@@Base+0x216>
  403497:	leave  
  403498:	ret    
  403499:	push   rbp
  40349a:	mov    rbp,rsp
  40349d:	sub    rsp,0x8
  4034a1:	mov    QWORD PTR [rbp-0x8],rdi
  4034a5:	cmp    QWORD PTR [rbp-0x8],0x0
  4034aa:	je     4034c0 <_start@@Base+0x270>
  4034ac:	mov    rax,QWORD PTR [rbp-0x8]
  4034b0:	sub    rax,0x4
  4034b4:	mov    rdi,rax
  4034b7:	call   4033f5 <_start@@Base+0x1a5>
  4034bc:	mov    eax,eax
  4034be:	jmp    4034c5 <_start@@Base+0x275>
  4034c0:	mov    eax,0x0
  4034c5:	leave  
  4034c6:	ret    
  4034c7:	push   rbp
  4034c8:	mov    rbp,rsp
  4034cb:	sub    rsp,0x8
  4034cf:	mov    QWORD PTR [rbp-0x8],rdi
  4034d3:	mov    rax,QWORD PTR [rbp-0x8]
  4034d7:	mov    rdi,rax
  4034da:	call   403499 <_start@@Base+0x249>
  4034df:	leave  
  4034e0:	ret    
  4034e1:	push   rbp
  4034e2:	mov    rbp,rsp
  4034e5:	sub    rsp,0x10
  4034e9:	mov    QWORD PTR [rbp-0x8],rdi
  4034ed:	mov    QWORD PTR [rbp-0x10],rsi
  4034f1:	mov    rax,QWORD PTR [rbp-0x8]
  4034f5:	mov    rdi,rax
  4034f8:	call   403499 <_start@@Base+0x249>
  4034fd:	cmp    QWORD PTR [rbp-0x10],rax
  403501:	jb     403522 <_start@@Base+0x2d2>
  403503:	lea    rcx,[rip+0x7f76]        # 40b480 <_IO_stdin_used@@Base+0x480>
  40350a:	mov    edx,0x193
  40350f:	lea    rsi,[rip+0x7b02]        # 40b018 <_IO_stdin_used@@Base+0x18>
  403516:	lea    rdi,[rip+0x7b7b]        # 40b098 <_IO_stdin_used@@Base+0x98>
  40351d:	call   4031a0 <__assert_fail@plt>
  403522:	mov    rax,QWORD PTR [rbp-0x10]
  403526:	lea    rdx,[rax*4+0x0]
  40352e:	mov    rax,QWORD PTR [rbp-0x8]
  403532:	add    rax,rdx
  403535:	mov    rdi,rax
  403538:	call   4033cc <_start@@Base+0x17c>
  40353d:	leave  
  40353e:	ret    
  40353f:	push   rbp
  403540:	mov    rbp,rsp
  403543:	sub    rsp,0x20
  403547:	mov    QWORD PTR [rbp-0x18],rdi
  40354b:	mov    QWORD PTR [rbp-0x20],rsi
  40354f:	mov    rax,QWORD PTR fs:0x28
  403558:	mov    QWORD PTR [rbp-0x8],rax
  40355c:	xor    eax,eax
  40355e:	mov    DWORD PTR [rbp-0x10],0x0
  403565:	cmp    QWORD PTR [rbp-0x20],0x0
  40356a:	jne    403573 <_start@@Base+0x323>
  40356c:	mov    eax,0x1
  403571:	jmp    4035c6 <_start@@Base+0x376>
  403573:	mov    rcx,QWORD PTR [rbp-0x20]
  403577:	lea    rax,[rbp-0x10]
  40357b:	mov    edx,0x4
  403580:	mov    rsi,rcx
  403583:	mov    rdi,rax
  403586:	call   403150 <strncpy@plt>
  40358b:	mov    eax,DWORD PTR [rbp-0x10]
  40358e:	mov    edi,eax
  403590:	call   403472 <_start@@Base+0x222>
  403595:	mov    DWORD PTR [rbp-0x10],eax
  403598:	mov    rax,QWORD PTR [rbp-0x18]
  40359c:	add    rax,0x4
  4035a0:	mov    rdi,rax
  4035a3:	call   40347e <_start@@Base+0x22e>
  4035a8:	mov    DWORD PTR [rbp-0xc],eax
  4035ab:	mov    eax,DWORD PTR [rbp-0x10]
  4035ae:	test   eax,eax
  4035b0:	je     4035ba <_start@@Base+0x36a>
  4035b2:	mov    eax,DWORD PTR [rbp-0x10]
  4035b5:	cmp    DWORD PTR [rbp-0xc],eax
  4035b8:	jne    4035c1 <_start@@Base+0x371>
  4035ba:	mov    eax,0x1
  4035bf:	jmp    4035c6 <_start@@Base+0x376>
  4035c1:	mov    eax,0x0
  4035c6:	mov    rdx,QWORD PTR [rbp-0x8]
  4035ca:	xor    rdx,QWORD PTR fs:0x28
  4035d3:	je     4035da <_start@@Base+0x38a>
  4035d5:	call   403180 <__stack_chk_fail@plt>
  4035da:	leave  
  4035db:	ret    
  4035dc:	push   rbp
  4035dd:	mov    rbp,rsp
  4035e0:	sub    rsp,0x20
  4035e4:	mov    QWORD PTR [rbp-0x18],rdi
  4035e8:	mov    QWORD PTR [rbp-0x8],0x0
  4035f0:	cmp    QWORD PTR [rbp-0x18],0x0
  4035f5:	je     403625 <_start@@Base+0x3d5>
  4035f7:	mov    rdx,QWORD PTR [rbp-0x8]
  4035fb:	mov    rax,QWORD PTR [rbp-0x18]
  4035ff:	mov    rsi,rdx
  403602:	mov    rdi,rax
  403605:	call   40353f <_start@@Base+0x2ef>
  40360a:	test   eax,eax
  40360c:	je     403625 <_start@@Base+0x3d5>
  40360e:	mov    rax,QWORD PTR [rbp-0x18]
  403612:	mov    rdi,rax
  403615:	call   4033f5 <_start@@Base+0x1a5>
  40361a:	mov    edx,eax
  40361c:	mov    rax,QWORD PTR [rbp-0x18]
  403620:	add    rax,rdx
  403623:	jmp    40362a <_start@@Base+0x3da>
  403625:	mov    eax,0x0
  40362a:	leave  
  40362b:	ret    
  40362c:	push   rbp
  40362d:	mov    rbp,rsp
  403630:	sub    rsp,0x20
  403634:	mov    QWORD PTR [rbp-0x18],rdi
  403638:	mov    WORD PTR [rbp-0xc],0x0
  40363e:	cmp    QWORD PTR [rbp-0x18],0x0
  403643:	jne    403664 <_start@@Base+0x414>
  403645:	lea    rcx,[rip+0x7dfc]        # 40b448 <_IO_stdin_used@@Base+0x448>
  40364c:	mov    edx,0x29
  403651:	lea    rsi,[rip+0x7a78]        # 40b0d0 <_IO_stdin_used@@Base+0xd0>
  403658:	lea    rdi,[rip+0x7ae9]        # 40b148 <_IO_stdin_used@@Base+0x148>
  40365f:	call   4031a0 <__assert_fail@plt>
  403664:	mov    WORD PTR [rbp-0xa],0x0
  40366a:	mov    rax,QWORD PTR [rbp-0x18]
  40366e:	mov    rdi,rax
  403671:	call   40341c <_start@@Base+0x1cc>
  403676:	cdqe   
  403678:	neg    rax
  40367b:	mov    rdx,rax
  40367e:	mov    rax,QWORD PTR [rbp-0x18]
  403682:	add    rax,rdx
  403685:	mov    QWORD PTR [rbp-0x8],rax
  403689:	mov    rax,QWORD PTR [rbp-0x8]
  40368d:	mov    rdi,rax
  403690:	call   403447 <_start@@Base+0x1f7>
  403695:	movzx  eax,ax
  403698:	movzx  edx,WORD PTR [rbp-0xa]
  40369c:	add    edx,0x3
  40369f:	movsxd rdx,edx
  4036a2:	add    rdx,rdx
  4036a5:	cmp    rax,rdx
  4036a8:	jb     4036c9 <_start@@Base+0x479>
  4036aa:	movzx  eax,WORD PTR [rbp-0xa]
  4036ae:	add    rax,0x2
  4036b2:	lea    rdx,[rax+rax*1]
  4036b6:	mov    rax,QWORD PTR [rbp-0x8]
  4036ba:	add    rax,rdx
  4036bd:	mov    rdi,rax
  4036c0:	call   403447 <_start@@Base+0x1f7>
  4036c5:	mov    WORD PTR [rbp-0xc],ax
  4036c9:	cmp    WORD PTR [rbp-0xc],0x0
  4036ce:	je     4036e5 <_start@@Base+0x495>
  4036d0:	movzx  edx,WORD PTR [rbp-0xc]
  4036d4:	mov    rax,QWORD PTR [rbp-0x18]
  4036d8:	add    rax,rdx
  4036db:	mov    rdi,rax
  4036de:	call   40338f <_start@@Base+0x13f>
  4036e3:	jmp    4036ea <_start@@Base+0x49a>
  4036e5:	mov    eax,0x0
  4036ea:	leave  
  4036eb:	ret    
  4036ec:	push   rbp
  4036ed:	mov    rbp,rsp
  4036f0:	sub    rsp,0x20
  4036f4:	mov    QWORD PTR [rbp-0x18],rdi
  4036f8:	mov    WORD PTR [rbp-0xc],0x0
  4036fe:	cmp    QWORD PTR [rbp-0x18],0x0
  403703:	jne    403724 <_start@@Base+0x4d4>
  403705:	lea    rcx,[rip+0x7d4c]        # 40b458 <_IO_stdin_used@@Base+0x458>
  40370c:	mov    edx,0x2a
  403711:	lea    rsi,[rip+0x79b8]        # 40b0d0 <_IO_stdin_used@@Base+0xd0>
  403718:	lea    rdi,[rip+0x7a29]        # 40b148 <_IO_stdin_used@@Base+0x148>
  40371f:	call   4031a0 <__assert_fail@plt>
  403724:	mov    WORD PTR [rbp-0xa],0x1
  40372a:	mov    rax,QWORD PTR [rbp-0x18]
  40372e:	mov    rdi,rax
  403731:	call   40341c <_start@@Base+0x1cc>
  403736:	cdqe   
  403738:	neg    rax
  40373b:	mov    rdx,rax
  40373e:	mov    rax,QWORD PTR [rbp-0x18]
  403742:	add    rax,rdx
  403745:	mov    QWORD PTR [rbp-0x8],rax
  403749:	mov    rax,QWORD PTR [rbp-0x8]
  40374d:	mov    rdi,rax
  403750:	call   403447 <_start@@Base+0x1f7>
  403755:	movzx  eax,ax
  403758:	movzx  edx,WORD PTR [rbp-0xa]
  40375c:	add    edx,0x3
  40375f:	movsxd rdx,edx
  403762:	add    rdx,rdx
  403765:	cmp    rax,rdx
  403768:	jb     403789 <_start@@Base+0x539>
  40376a:	movzx  eax,WORD PTR [rbp-0xa]
  40376e:	add    rax,0x2
  403772:	lea    rdx,[rax+rax*1]
  403776:	mov    rax,QWORD PTR [rbp-0x8]
  40377a:	add    rax,rdx
  40377d:	mov    rdi,rax
  403780:	call   403447 <_start@@Base+0x1f7>
  403785:	mov    WORD PTR [rbp-0xc],ax
  403789:	cmp    WORD PTR [rbp-0xc],0x0
  40378e:	je     4037a5 <_start@@Base+0x555>
  403790:	movzx  edx,WORD PTR [rbp-0xc]
  403794:	mov    rax,QWORD PTR [rbp-0x18]
  403798:	add    rax,rdx
  40379b:	mov    rdi,rax
  40379e:	call   403354 <_start@@Base+0x104>
  4037a3:	jmp    4037aa <_start@@Base+0x55a>
  4037a5:	mov    eax,0x0
  4037aa:	leave  
  4037ab:	ret    
  4037ac:	push   rbp
  4037ad:	mov    rbp,rsp
  4037b0:	sub    rsp,0x30
  4037b4:	mov    QWORD PTR [rbp-0x28],rdi
  4037b8:	mov    WORD PTR [rbp-0x14],0x0
  4037be:	cmp    QWORD PTR [rbp-0x28],0x0
  4037c3:	jne    4037e4 <_start@@Base+0x594>
  4037c5:	lea    rcx,[rip+0x7c9c]        # 40b468 <_IO_stdin_used@@Base+0x468>
  4037cc:	mov    edx,0x2b
  4037d1:	lea    rsi,[rip+0x78f8]        # 40b0d0 <_IO_stdin_used@@Base+0xd0>
  4037d8:	lea    rdi,[rip+0x7969]        # 40b148 <_IO_stdin_used@@Base+0x148>
  4037df:	call   4031a0 <__assert_fail@plt>
  4037e4:	mov    WORD PTR [rbp-0x12],0x2
  4037ea:	mov    rax,QWORD PTR [rbp-0x28]
  4037ee:	mov    rdi,rax
  4037f1:	call   40341c <_start@@Base+0x1cc>
  4037f6:	cdqe   
  4037f8:	neg    rax
  4037fb:	mov    rdx,rax
  4037fe:	mov    rax,QWORD PTR [rbp-0x28]
  403802:	add    rax,rdx
  403805:	mov    QWORD PTR [rbp-0x10],rax
  403809:	mov    rax,QWORD PTR [rbp-0x10]
  40380d:	mov    rdi,rax
  403810:	call   403447 <_start@@Base+0x1f7>
  403815:	movzx  eax,ax
  403818:	movzx  edx,WORD PTR [rbp-0x12]
  40381c:	add    edx,0x3
  40381f:	movsxd rdx,edx
  403822:	add    rdx,rdx
  403825:	cmp    rax,rdx
  403828:	jb     403849 <_start@@Base+0x5f9>
  40382a:	movzx  eax,WORD PTR [rbp-0x12]
  40382e:	add    rax,0x2
  403832:	lea    rdx,[rax+rax*1]
  403836:	mov    rax,QWORD PTR [rbp-0x10]
  40383a:	add    rax,rdx
  40383d:	mov    rdi,rax
  403840:	call   403447 <_start@@Base+0x1f7>
  403845:	mov    WORD PTR [rbp-0x14],ax
  403849:	cmp    WORD PTR [rbp-0x14],0x0
  40384e:	je     40387a <_start@@Base+0x62a>
  403850:	movzx  edx,WORD PTR [rbp-0x14]
  403854:	mov    rax,QWORD PTR [rbp-0x28]
  403858:	add    rax,rdx
  40385b:	mov    QWORD PTR [rbp-0x8],rax
  40385f:	mov    rax,QWORD PTR [rbp-0x8]
  403863:	mov    rdi,rax
  403866:	call   4033f5 <_start@@Base+0x1a5>
  40386b:	mov    eax,eax
  40386d:	lea    rdx,[rax+0x4]
  403871:	mov    rax,QWORD PTR [rbp-0x8]
  403875:	add    rax,rdx
  403878:	jmp    40387f <_start@@Base+0x62f>
  40387a:	mov    eax,0x0
  40387f:	leave  
  403880:	ret    
  403881:	push   rbp
  403882:	mov    rbp,rsp
  403885:	mov    QWORD PTR [rbp-0x8],rdi
  403889:	mov    rax,QWORD PTR [rbp-0x8]
  40388d:	mov    rax,QWORD PTR [rax+0x30]
  403891:	pop    rbp
  403892:	ret    
  403893:	push   rbp
  403894:	mov    rbp,rsp
  403897:	mov    QWORD PTR [rbp-0x8],rdi
  40389b:	mov    QWORD PTR [rbp-0x10],rsi
  40389f:	mov    rax,QWORD PTR [rbp-0x8]
  4038a3:	mov    rdx,QWORD PTR [rax]
  4038a6:	mov    rax,QWORD PTR [rbp-0x8]
  4038aa:	mov    rax,QWORD PTR [rax+0x8]
  4038ae:	cmp    rdx,rax
  4038b1:	jne    4038d3 <_start@@Base+0x683>
  4038b3:	cmp    QWORD PTR [rbp-0x10],0x0
  4038b8:	je     4038c9 <_start@@Base+0x679>
  4038ba:	mov    rax,QWORD PTR [rbp-0x8]
  4038be:	mov    rdx,QWORD PTR [rax+0x30]
  4038c2:	mov    rax,QWORD PTR [rbp-0x10]
  4038c6:	mov    QWORD PTR [rax],rdx
  4038c9:	mov    rax,QWORD PTR [rbp-0x8]
  4038cd:	mov    rax,QWORD PTR [rax+0x10]
  4038d1:	jmp    4038ea <_start@@Base+0x69a>
  4038d3:	cmp    QWORD PTR [rbp-0x10],0x0
  4038d8:	je     4038e5 <_start@@Base+0x695>
  4038da:	mov    rax,QWORD PTR [rbp-0x10]
  4038de:	mov    QWORD PTR [rax],0x0
  4038e5:	mov    eax,0x0
  4038ea:	pop    rbp
  4038eb:	ret    
  4038ec:	push   rbp
  4038ed:	mov    rbp,rsp
  4038f0:	sub    rsp,0x10
  4038f4:	mov    QWORD PTR [rbp-0x8],rdi
  4038f8:	mov    eax,esi
  4038fa:	mov    BYTE PTR [rbp-0xc],al
  4038fd:	movzx  eax,BYTE PTR [rbp-0xc]
  403901:	mov    edi,eax
  403903:	call   403345 <_start@@Base+0xf5>
  403908:	mov    rdx,QWORD PTR [rbp-0x8]
  40390c:	mov    BYTE PTR [rdx],al
  40390e:	mov    rax,QWORD PTR [rbp-0x8]
  403912:	leave  
  403913:	ret    
  403914:	push   rbp
  403915:	mov    rbp,rsp
  403918:	sub    rsp,0x10
  40391c:	mov    QWORD PTR [rbp-0x8],rdi
  403920:	mov    QWORD PTR [rbp-0x10],rsi
  403924:	mov    rax,QWORD PTR [rbp-0x10]
  403928:	mov    rdi,rax
  40392b:	call   403381 <_start@@Base+0x131>
  403930:	mov    rdx,rax
  403933:	mov    rax,QWORD PTR [rbp-0x8]
  403937:	mov    QWORD PTR [rax],rdx
  40393a:	mov    rax,QWORD PTR [rbp-0x8]
  40393e:	leave  
  40393f:	ret    
  403940:	push   rbp
  403941:	mov    rbp,rsp
  403944:	sub    rsp,0x20
  403948:	mov    QWORD PTR [rbp-0x8],rdi
  40394c:	mov    QWORD PTR [rbp-0x10],rsi
  403950:	mov    QWORD PTR [rbp-0x18],rdx
  403954:	mov    rdx,QWORD PTR [rbp-0x18]
  403958:	mov    rsi,QWORD PTR [rbp-0x10]
  40395c:	mov    rax,QWORD PTR [rbp-0x8]
  403960:	mov    r9d,0x3fffffff
  403966:	mov    r8d,0x4
  40396c:	mov    ecx,0x4
  403971:	mov    rdi,rax
  403974:	call   407ecd <flatcc_builder_create_vector@@Base>
  403979:	leave  
  40397a:	ret    
  40397b:	push   rbp
  40397c:	mov    rbp,rsp
  40397f:	sub    rsp,0x10
  403983:	mov    QWORD PTR [rbp-0x8],rdi
  403987:	mov    QWORD PTR [rbp-0x10],rsi
  40398b:	mov    rsi,QWORD PTR [rbp-0x10]
  40398f:	mov    rax,QWORD PTR [rbp-0x8]
  403993:	mov    ecx,0x0
  403998:	mov    edx,0x0
  40399d:	mov    rdi,rax
  4039a0:	call   4063f3 <flatcc_builder_start_buffer@@Base>
  4039a5:	leave  
  4039a6:	ret    
  4039a7:	push   rbp
  4039a8:	mov    rbp,rsp
  4039ab:	sub    rsp,0x10
  4039af:	mov    QWORD PTR [rbp-0x8],rdi
  4039b3:	mov    DWORD PTR [rbp-0xc],esi
  4039b6:	mov    edx,DWORD PTR [rbp-0xc]
  4039b9:	mov    rax,QWORD PTR [rbp-0x8]
  4039bd:	mov    esi,edx
  4039bf:	mov    rdi,rax
  4039c2:	call   406540 <flatcc_builder_end_buffer@@Base>
  4039c7:	leave  
  4039c8:	ret    
  4039c9:	push   rbp
  4039ca:	mov    rbp,rsp
  4039cd:	sub    rsp,0x10
  4039d1:	mov    QWORD PTR [rbp-0x8],rdi
  4039d5:	mov    rax,QWORD PTR [rbp-0x8]
  4039d9:	mov    esi,0x3
  4039de:	mov    rdi,rax
  4039e1:	call   4071b8 <flatcc_builder_start_table@@Base>
  4039e6:	leave  
  4039e7:	ret    
  4039e8:	push   rbp
  4039e9:	mov    rbp,rsp
  4039ec:	sub    rsp,0x10
  4039f0:	mov    QWORD PTR [rbp-0x8],rdi
  4039f4:	mov    rax,QWORD PTR [rbp-0x8]
  4039f8:	mov    edx,0x0
  4039fd:	lea    rsi,[rip+0x776a]        # 40b16e <_IO_stdin_used@@Base+0x16e>
  403a04:	mov    rdi,rax
  403a07:	call   407c1a <flatcc_builder_check_required@@Base>
  403a0c:	test   eax,eax
  403a0e:	jne    403a2f <_start@@Base+0x7df>
  403a10:	lea    rcx,[rip+0x7a11]        # 40b428 <_IO_stdin_used@@Base+0x428>
  403a17:	mov    edx,0x15
  403a1c:	lea    rsi,[rip+0x774d]        # 40b170 <_IO_stdin_used@@Base+0x170>
  403a23:	lea    rdi,[rip+0x77be]        # 40b1e8 <_IO_stdin_used@@Base+0x1e8>
  403a2a:	call   4031a0 <__assert_fail@plt>
  403a2f:	mov    rax,QWORD PTR [rbp-0x8]
  403a33:	mov    rdi,rax
  403a36:	call   407cc7 <flatcc_builder_end_table@@Base>
  403a3b:	leave  
  403a3c:	ret    
  403a3d:	push   rbp
  403a3e:	mov    rbp,rsp
  403a41:	sub    rsp,0x20
  403a45:	mov    QWORD PTR [rbp-0x18],rdi
  403a49:	mov    QWORD PTR [rbp-0x20],rsi
  403a4d:	cmp    QWORD PTR [rbp-0x20],0x0
  403a52:	jne    403a5b <_start@@Base+0x80b>
  403a54:	mov    eax,0x0
  403a59:	jmp    403aa0 <_start@@Base+0x850>
  403a5b:	mov    rax,QWORD PTR [rbp-0x18]
  403a5f:	mov    ecx,0x8
  403a64:	mov    edx,0x8
  403a69:	mov    esi,0x0
  403a6e:	mov    rdi,rax
  403a71:	call   409368 <flatcc_builder_table_add@@Base>
  403a76:	mov    QWORD PTR [rbp-0x8],rax
  403a7a:	cmp    QWORD PTR [rbp-0x8],0x0
  403a7f:	jne    403a88 <_start@@Base+0x838>
  403a81:	mov    eax,0xffffffff
  403a86:	jmp    403aa0 <_start@@Base+0x850>
  403a88:	mov    rdx,QWORD PTR [rbp-0x20]
  403a8c:	mov    rax,QWORD PTR [rbp-0x8]
  403a90:	mov    rsi,rdx
  403a93:	mov    rdi,rax
  403a96:	call   403914 <_start@@Base+0x6c4>
  403a9b:	mov    eax,0x0
  403aa0:	leave  
  403aa1:	ret    
  403aa2:	push   rbp
  403aa3:	mov    rbp,rsp
  403aa6:	sub    rsp,0x20
  403aaa:	mov    QWORD PTR [rbp-0x18],rdi
  403aae:	mov    eax,esi
  403ab0:	mov    BYTE PTR [rbp-0x1c],al
  403ab3:	cmp    BYTE PTR [rbp-0x1c],0x0
  403ab7:	jne    403ac0 <_start@@Base+0x870>
  403ab9:	mov    eax,0x0
  403abe:	jmp    403b04 <_start@@Base+0x8b4>
  403ac0:	mov    rax,QWORD PTR [rbp-0x18]
  403ac4:	mov    ecx,0x1
  403ac9:	mov    edx,0x1
  403ace:	mov    esi,0x1
  403ad3:	mov    rdi,rax
  403ad6:	call   409368 <flatcc_builder_table_add@@Base>
  403adb:	mov    QWORD PTR [rbp-0x8],rax
  403adf:	cmp    QWORD PTR [rbp-0x8],0x0
  403ae4:	jne    403aed <_start@@Base+0x89d>
  403ae6:	mov    eax,0xffffffff
  403aeb:	jmp    403b04 <_start@@Base+0x8b4>
  403aed:	movzx  edx,BYTE PTR [rbp-0x1c]
  403af1:	mov    rax,QWORD PTR [rbp-0x8]
  403af5:	mov    esi,edx
  403af7:	mov    rdi,rax
  403afa:	call   4038ec <_start@@Base+0x69c>
  403aff:	mov    eax,0x0
  403b04:	leave  
  403b05:	ret    
  403b06:	push   rbp
  403b07:	mov    rbp,rsp
  403b0a:	sub    rsp,0x20
  403b0e:	mov    QWORD PTR [rbp-0x18],rdi
  403b12:	mov    DWORD PTR [rbp-0x1c],esi
  403b15:	cmp    DWORD PTR [rbp-0x1c],0x0
  403b19:	je     403b47 <_start@@Base+0x8f7>
  403b1b:	mov    rax,QWORD PTR [rbp-0x18]
  403b1f:	mov    esi,0x2
  403b24:	mov    rdi,rax
  403b27:	call   409542 <flatcc_builder_table_add_offset@@Base>
  403b2c:	mov    QWORD PTR [rbp-0x8],rax
  403b30:	cmp    QWORD PTR [rbp-0x8],0x0
  403b35:	je     403b47 <_start@@Base+0x8f7>
  403b37:	mov    rax,QWORD PTR [rbp-0x8]
  403b3b:	mov    edx,DWORD PTR [rbp-0x1c]
  403b3e:	mov    DWORD PTR [rax],edx
  403b40:	mov    eax,0x0
  403b45:	jmp    403b4c <_start@@Base+0x8fc>
  403b47:	mov    eax,0xffffffff
  403b4c:	leave  
  403b4d:	ret    
  403b4e:	push   rbp
  403b4f:	mov    rbp,rsp
  403b52:	sub    rsp,0x20
  403b56:	mov    QWORD PTR [rbp-0x8],rdi
  403b5a:	mov    QWORD PTR [rbp-0x10],rsi
  403b5e:	mov    eax,edx
  403b60:	mov    DWORD PTR [rbp-0x18],ecx
  403b63:	mov    BYTE PTR [rbp-0x14],al
  403b66:	mov    rax,QWORD PTR [rbp-0x8]
  403b6a:	mov    rdi,rax
  403b6d:	call   4039c9 <_start@@Base+0x779>
  403b72:	test   eax,eax
  403b74:	jne    403bb8 <_start@@Base+0x968>
  403b76:	mov    rdx,QWORD PTR [rbp-0x10]
  403b7a:	mov    rax,QWORD PTR [rbp-0x8]
  403b7e:	mov    rsi,rdx
  403b81:	mov    rdi,rax
  403b84:	call   403a3d <_start@@Base+0x7ed>
  403b89:	test   eax,eax
  403b8b:	jne    403bb8 <_start@@Base+0x968>
  403b8d:	mov    edx,DWORD PTR [rbp-0x18]
  403b90:	mov    rax,QWORD PTR [rbp-0x8]
  403b94:	mov    esi,edx
  403b96:	mov    rdi,rax
  403b99:	call   403b06 <_start@@Base+0x8b6>
  403b9e:	test   eax,eax
  403ba0:	jne    403bb8 <_start@@Base+0x968>
  403ba2:	movzx  edx,BYTE PTR [rbp-0x14]
  403ba6:	mov    rax,QWORD PTR [rbp-0x8]
  403baa:	mov    esi,edx
  403bac:	mov    rdi,rax
  403baf:	call   403aa2 <_start@@Base+0x852>
  403bb4:	test   eax,eax
  403bb6:	je     403bbf <_start@@Base+0x96f>
  403bb8:	mov    eax,0x0
  403bbd:	jmp    403bcb <_start@@Base+0x97b>
  403bbf:	mov    rax,QWORD PTR [rbp-0x8]
  403bc3:	mov    rdi,rax
  403bc6:	call   4039e8 <_start@@Base+0x798>
  403bcb:	leave  
  403bcc:	ret    
  403bcd:	push   rbp
  403bce:	mov    rbp,rsp
  403bd1:	sub    rsp,0x20
  403bd5:	mov    QWORD PTR [rbp-0x8],rdi
  403bd9:	mov    QWORD PTR [rbp-0x10],rsi
  403bdd:	mov    eax,edx
  403bdf:	mov    DWORD PTR [rbp-0x18],ecx
  403be2:	mov    BYTE PTR [rbp-0x14],al
  403be5:	mov    rax,QWORD PTR [rbp-0x8]
  403be9:	mov    esi,0x0
  403bee:	mov    rdi,rax
  403bf1:	call   40397b <_start@@Base+0x72b>
  403bf6:	test   eax,eax
  403bf8:	je     403c01 <_start@@Base+0x9b1>
  403bfa:	mov    eax,0x0
  403bff:	jmp    403c28 <_start@@Base+0x9d8>
  403c01:	movzx  edx,BYTE PTR [rbp-0x14]
  403c05:	mov    ecx,DWORD PTR [rbp-0x18]
  403c08:	mov    rsi,QWORD PTR [rbp-0x10]
  403c0c:	mov    rax,QWORD PTR [rbp-0x8]
  403c10:	mov    rdi,rax
  403c13:	call   403b4e <_start@@Base+0x8fe>
  403c18:	mov    edx,eax
  403c1a:	mov    rax,QWORD PTR [rbp-0x8]
  403c1e:	mov    esi,edx
  403c20:	mov    rdi,rax
  403c23:	call   4039a7 <_start@@Base+0x757>
  403c28:	leave  
  403c29:	ret    
  403c2a:	endbr64 
  403c2e:	push   rbp
  403c2f:	mov    rbp,rsp
  403c32:	sub    rsp,0x50
  403c36:	mov    QWORD PTR [rbp-0x38],rdi
  403c3a:	mov    QWORD PTR [rbp-0x40],rsi
  403c3e:	mov    QWORD PTR [rbp-0x48],rdx
  403c42:	mov    QWORD PTR [rbp-0x50],rcx
  403c46:	mov    rax,QWORD PTR fs:0x28
  403c4f:	mov    QWORD PTR [rbp-0x8],rax
  403c53:	xor    eax,eax
  403c55:	mov    rax,QWORD PTR [rbp-0x40]
  403c59:	mov    QWORD PTR [rbp-0x28],rax
  403c5d:	cmp    QWORD PTR [rbp-0x38],0x0
  403c62:	je     403c80 <_start@@Base+0xa30>
  403c64:	mov    rdx,QWORD PTR [rbp-0x38]
  403c68:	mov    rax,QWORD PTR [rbp-0x50]
  403c6c:	lea    rsi,[rip+0x75e1]        # 40b254 <_IO_stdin_used@@Base+0x254>
  403c73:	mov    rdi,rax
  403c76:	mov    eax,0x0
  403c7b:	call   4031f0 <fprintf@plt>
  403c80:	mov    DWORD PTR [rbp-0x2c],0x0
  403c87:	jmp    403d74 <_start@@Base+0xb24>
  403c8c:	mov    eax,DWORD PTR [rbp-0x2c]
  403c8f:	and    eax,0xf
  403c92:	test   eax,eax
  403c94:	jne    403cd5 <_start@@Base+0xa85>
  403c96:	cmp    DWORD PTR [rbp-0x2c],0x0
  403c9a:	je     403cb8 <_start@@Base+0xa68>
  403c9c:	lea    rdx,[rbp-0x20]
  403ca0:	mov    rax,QWORD PTR [rbp-0x50]
  403ca4:	lea    rsi,[rip+0x75ae]        # 40b259 <_IO_stdin_used@@Base+0x259>
  403cab:	mov    rdi,rax
  403cae:	mov    eax,0x0
  403cb3:	call   4031f0 <fprintf@plt>
  403cb8:	mov    edx,DWORD PTR [rbp-0x2c]
  403cbb:	mov    rax,QWORD PTR [rbp-0x50]
  403cbf:	lea    rsi,[rip+0x7599]        # 40b25f <_IO_stdin_used@@Base+0x25f>
  403cc6:	mov    rdi,rax
  403cc9:	mov    eax,0x0
  403cce:	call   4031f0 <fprintf@plt>
  403cd3:	jmp    403cf0 <_start@@Base+0xaa0>
  403cd5:	mov    eax,DWORD PTR [rbp-0x2c]
  403cd8:	and    eax,0x7
  403cdb:	test   eax,eax
  403cdd:	jne    403cf0 <_start@@Base+0xaa0>
  403cdf:	mov    rax,QWORD PTR [rbp-0x50]
  403ce3:	mov    rsi,rax
  403ce6:	mov    edi,0x20
  403ceb:	call   4031c0 <fputc@plt>
  403cf0:	mov    edx,DWORD PTR [rbp-0x2c]
  403cf3:	mov    rax,QWORD PTR [rbp-0x28]
  403cf7:	add    rax,rdx
  403cfa:	movzx  eax,BYTE PTR [rax]
  403cfd:	movzx  edx,al
  403d00:	mov    rax,QWORD PTR [rbp-0x50]
  403d04:	lea    rsi,[rip+0x755c]        # 40b267 <_IO_stdin_used@@Base+0x267>
  403d0b:	mov    rdi,rax
  403d0e:	mov    eax,0x0
  403d13:	call   4031f0 <fprintf@plt>
  403d18:	mov    edx,DWORD PTR [rbp-0x2c]
  403d1b:	mov    rax,QWORD PTR [rbp-0x28]
  403d1f:	add    rax,rdx
  403d22:	movzx  eax,BYTE PTR [rax]
  403d25:	cmp    al,0x1f
  403d27:	jbe    403d3a <_start@@Base+0xaea>
  403d29:	mov    edx,DWORD PTR [rbp-0x2c]
  403d2c:	mov    rax,QWORD PTR [rbp-0x28]
  403d30:	add    rax,rdx
  403d33:	movzx  eax,BYTE PTR [rax]
  403d36:	cmp    al,0x7e
  403d38:	jbe    403d49 <_start@@Base+0xaf9>
  403d3a:	mov    eax,DWORD PTR [rbp-0x2c]
  403d3d:	and    eax,0xf
  403d40:	mov    eax,eax
  403d42:	mov    BYTE PTR [rbp+rax*1-0x20],0x2e
  403d47:	jmp    403d62 <_start@@Base+0xb12>
  403d49:	mov    edx,DWORD PTR [rbp-0x2c]
  403d4c:	mov    rax,QWORD PTR [rbp-0x28]
  403d50:	add    rax,rdx
  403d53:	mov    edx,DWORD PTR [rbp-0x2c]
  403d56:	and    edx,0xf
  403d59:	movzx  eax,BYTE PTR [rax]
  403d5c:	mov    edx,edx
  403d5e:	mov    BYTE PTR [rbp+rdx*1-0x20],al
  403d62:	mov    eax,DWORD PTR [rbp-0x2c]
  403d65:	and    eax,0xf
  403d68:	inc    eax
  403d6a:	mov    eax,eax
  403d6c:	mov    BYTE PTR [rbp+rax*1-0x20],0x0
  403d71:	inc    DWORD PTR [rbp-0x2c]
  403d74:	mov    rax,QWORD PTR [rbp-0x48]
  403d78:	cmp    DWORD PTR [rbp-0x2c],eax
  403d7b:	jb     403c8c <_start@@Base+0xa3c>
  403d81:	jmp    403da3 <_start@@Base+0xb53>
  403d83:	mov    rax,QWORD PTR [rbp-0x50]
  403d87:	mov    rcx,rax
  403d8a:	mov    edx,0x3
  403d8f:	mov    esi,0x1
  403d94:	lea    rdi,[rip+0x74d2]        # 40b26d <_IO_stdin_used@@Base+0x26d>
  403d9b:	call   403230 <fwrite@plt>
  403da0:	inc    DWORD PTR [rbp-0x2c]
  403da3:	mov    eax,DWORD PTR [rbp-0x2c]
  403da6:	and    eax,0xf
  403da9:	test   eax,eax
  403dab:	jne    403d83 <_start@@Base+0xb33>
  403dad:	lea    rdx,[rbp-0x20]
  403db1:	mov    rax,QWORD PTR [rbp-0x50]
  403db5:	lea    rsi,[rip+0x749d]        # 40b259 <_IO_stdin_used@@Base+0x259>
  403dbc:	mov    rdi,rax
  403dbf:	mov    eax,0x0
  403dc4:	call   4031f0 <fprintf@plt>
  403dc9:	nop
  403dca:	mov    rax,QWORD PTR [rbp-0x8]
  403dce:	xor    rax,QWORD PTR fs:0x28
  403dd7:	je     403dde <_start@@Base+0xb8e>
  403dd9:	call   403180 <__stack_chk_fail@plt>
  403dde:	leave  
  403ddf:	ret    

0000000000403de0 <dbg_emitter@@Base>:
  403de0:	endbr64 
  403de4:	push   rbp
  403de5:	mov    rbp,rsp
  403de8:	sub    rsp,0x30
  403dec:	mov    QWORD PTR [rbp-0x18],rdi
  403df0:	mov    QWORD PTR [rbp-0x20],rsi
  403df4:	mov    DWORD PTR [rbp-0x24],edx
  403df7:	mov    DWORD PTR [rbp-0x28],ecx
  403dfa:	mov    QWORD PTR [rbp-0x30],r8
  403dfe:	mov    rcx,QWORD PTR [rbp-0x30]
  403e02:	mov    eax,DWORD PTR [rbp-0x28]
  403e05:	movsxd rdx,eax
  403e08:	mov    eax,DWORD PTR [rbp-0x24]
  403e0b:	mov    esi,eax
  403e0d:	lea    rdi,[rip+0x7464]        # 40b278 <_IO_stdin_used@@Base+0x278>
  403e14:	mov    eax,0x0
  403e19:	call   403190 <printf@plt>
  403e1e:	mov    DWORD PTR [rbp-0x4],0x0
  403e25:	jmp    403eea <dbg_emitter@@Base+0x10a>
  403e2a:	mov    eax,DWORD PTR [rbp-0x4]
  403e2d:	cdqe   
  403e2f:	shl    rax,0x4
  403e33:	mov    rdx,rax
  403e36:	mov    rax,QWORD PTR [rbp-0x20]
  403e3a:	add    rax,rdx
  403e3d:	mov    rax,QWORD PTR [rax]
  403e40:	mov    rdx,0x40b4e0
  403e47:	cmp    rax,rdx
  403e4a:	jne    403e7f <dbg_emitter@@Base+0x9f>
  403e4c:	mov    eax,DWORD PTR [rbp-0x4]
  403e4f:	cdqe   
  403e51:	shl    rax,0x4
  403e55:	mov    rdx,rax
  403e58:	mov    rax,QWORD PTR [rbp-0x20]
  403e5c:	add    rax,rdx
  403e5f:	mov    rax,QWORD PTR [rax+0x8]
  403e63:	mov    rdx,rax
  403e66:	mov    eax,DWORD PTR [rbp-0x28]
  403e69:	cdqe   
  403e6b:	mov    rsi,rax
  403e6e:	lea    rdi,[rip+0x743b]        # 40b2b0 <_IO_stdin_used@@Base+0x2b0>
  403e75:	mov    eax,0x0
  403e7a:	call   403190 <printf@plt>
  403e7f:	mov    eax,DWORD PTR [rbp-0x4]
  403e82:	cdqe   
  403e84:	shl    rax,0x4
  403e88:	mov    rdx,rax
  403e8b:	mov    rax,QWORD PTR [rbp-0x20]
  403e8f:	add    rax,rdx
  403e92:	mov    rax,QWORD PTR [rax]
  403e95:	test   rax,rax
  403e98:	jne    403ecd <dbg_emitter@@Base+0xed>
  403e9a:	mov    eax,DWORD PTR [rbp-0x4]
  403e9d:	cdqe   
  403e9f:	shl    rax,0x4
  403ea3:	mov    rdx,rax
  403ea6:	mov    rax,QWORD PTR [rbp-0x20]
  403eaa:	add    rax,rdx
  403ead:	mov    rax,QWORD PTR [rax+0x8]
  403eb1:	mov    rdx,rax
  403eb4:	mov    eax,DWORD PTR [rbp-0x28]
  403eb7:	cdqe   
  403eb9:	mov    rsi,rax
  403ebc:	lea    rdi,[rip+0x7415]        # 40b2d8 <_IO_stdin_used@@Base+0x2d8>
  403ec3:	mov    eax,0x0
  403ec8:	call   403190 <printf@plt>
  403ecd:	mov    eax,DWORD PTR [rbp-0x4]
  403ed0:	cdqe   
  403ed2:	shl    rax,0x4
  403ed6:	mov    rdx,rax
  403ed9:	mov    rax,QWORD PTR [rbp-0x20]
  403edd:	add    rax,rdx
  403ee0:	mov    rax,QWORD PTR [rax+0x8]
  403ee4:	add    DWORD PTR [rbp-0x28],eax
  403ee7:	inc    DWORD PTR [rbp-0x4]
  403eea:	mov    eax,DWORD PTR [rbp-0x4]
  403eed:	cmp    eax,DWORD PTR [rbp-0x24]
  403ef0:	jl     403e2a <dbg_emitter@@Base+0x4a>
  403ef6:	mov    eax,0x0
  403efb:	leave  
  403efc:	ret    

0000000000403efd <debug_test@@Base>:
  403efd:	endbr64 
  403f01:	push   rbp
  403f02:	mov    rbp,rsp
  403f05:	sub    rsp,0x1d0
  403f0c:	mov    rax,QWORD PTR fs:0x28
  403f15:	mov    QWORD PTR [rbp-0x8],rax
  403f19:	xor    eax,eax
  403f1b:	mov    QWORD PTR [rbp-0x1c0],0x0
  403f26:	mov    QWORD PTR [rbp-0x1b8],0x0
  403f31:	mov    QWORD PTR [rbp-0x1b0],0x0
  403f3c:	mov    QWORD PTR [rbp-0x1a8],0x0
  403f47:	mov    QWORD PTR [rbp-0x1a0],0x0
  403f52:	lea    rax,[rbp-0x190]
  403f59:	mov    QWORD PTR [rbp-0x1c8],rax
  403f60:	lea    rdi,[rip+0x73a1]        # 40b308 <_IO_stdin_used@@Base+0x308>
  403f67:	call   403160 <puts@plt>
  403f6c:	mov    rax,QWORD PTR [rbp-0x1c8]
  403f73:	mov    r8d,0x0
  403f79:	mov    ecx,0x0
  403f7e:	mov    edx,0x0
  403f83:	mov    rsi,0x403de0
  403f8a:	mov    rdi,rax
  403f8d:	call   404e3c <flatcc_builder_custom_init@@Base>
  403f92:	lea    rcx,[rbp-0x1c0]
  403f99:	mov    rax,QWORD PTR [rbp-0x1c8]
  403fa0:	mov    edx,0xa
  403fa5:	mov    rsi,rcx
  403fa8:	mov    rdi,rax
  403fab:	call   403940 <_start@@Base+0x6f0>
  403fb0:	mov    edx,eax
  403fb2:	mov    rax,QWORD PTR [rbp-0x1c8]
  403fb9:	mov    ecx,edx
  403fbb:	mov    edx,0x1
  403fc0:	mov    esi,0x2a
  403fc5:	mov    rdi,rax
  403fc8:	call   403bcd <_start@@Base+0x97d>
  403fcd:	mov    rax,QWORD PTR [rbp-0x1c8]
  403fd4:	mov    rdi,rax
  403fd7:	call   405158 <flatcc_builder_clear@@Base>
  403fdc:	mov    eax,0x0
  403fe1:	mov    rcx,QWORD PTR [rbp-0x8]
  403fe5:	xor    rcx,QWORD PTR fs:0x28
  403fee:	je     403ff5 <debug_test@@Base+0xf8>
  403ff0:	call   403180 <__stack_chk_fail@plt>
  403ff5:	leave  
  403ff6:	ret    

0000000000403ff7 <emit_test@@Base>:
  403ff7:	endbr64 
  403ffb:	push   rbp
  403ffc:	mov    rbp,rsp
  403fff:	sub    rsp,0x230
  404006:	mov    rax,QWORD PTR fs:0x28
  40400f:	mov    QWORD PTR [rbp-0x8],rax
  404013:	xor    eax,eax
  404015:	mov    rax,QWORD PTR [rip+0x73cc]        # 40b3e8 <_IO_stdin_used@@Base+0x3e8>
  40401c:	mov    rdx,QWORD PTR [rip+0x73cd]        # 40b3f0 <_IO_stdin_used@@Base+0x3f0>
  404023:	mov    QWORD PTR [rbp-0x50],rax
  404027:	mov    QWORD PTR [rbp-0x48],rdx
  40402b:	mov    rax,QWORD PTR [rip+0x73c6]        # 40b3f8 <_IO_stdin_used@@Base+0x3f8>
  404032:	mov    rdx,QWORD PTR [rip+0x73c7]        # 40b400 <_IO_stdin_used@@Base+0x400>
  404039:	mov    QWORD PTR [rbp-0x40],rax
  40403d:	mov    QWORD PTR [rbp-0x38],rdx
  404041:	mov    rax,QWORD PTR [rip+0x73c0]        # 40b408 <_IO_stdin_used@@Base+0x408>
  404048:	mov    rdx,QWORD PTR [rip+0x73c1]        # 40b410 <_IO_stdin_used@@Base+0x410>
  40404f:	mov    QWORD PTR [rbp-0x30],rax
  404053:	mov    QWORD PTR [rbp-0x28],rdx
  404057:	mov    rax,QWORD PTR [rip+0x73ba]        # 40b418 <_IO_stdin_used@@Base+0x418>
  40405e:	mov    QWORD PTR [rbp-0x20],rax
  404062:	movzx  eax,WORD PTR [rip+0x73b7]        # 40b420 <_IO_stdin_used@@Base+0x420>
  404069:	mov    WORD PTR [rbp-0x18],ax
  40406d:	movzx  eax,BYTE PTR [rip+0x73ae]        # 40b422 <_IO_stdin_used@@Base+0x422>
  404074:	mov    BYTE PTR [rbp-0x16],al
  404077:	vmovss xmm0,DWORD PTR [rip+0x741d]        # 40b49c <_IO_stdin_used@@Base+0x49c>
  40407f:	vmovss DWORD PTR [rbp-0x1f0],xmm0
  404087:	vmovss xmm0,DWORD PTR [rip+0x7411]        # 40b4a0 <_IO_stdin_used@@Base+0x4a0>
  40408f:	vmovss DWORD PTR [rbp-0x1ec],xmm0
  404097:	vmovss xmm0,DWORD PTR [rip+0x7405]        # 40b4a4 <_IO_stdin_used@@Base+0x4a4>
  40409f:	vmovss DWORD PTR [rbp-0x1e8],xmm0
  4040a7:	vmovss xmm0,DWORD PTR [rip+0x73f9]        # 40b4a8 <_IO_stdin_used@@Base+0x4a8>
  4040af:	vmovss DWORD PTR [rbp-0x1e4],xmm0
  4040b7:	lea    rax,[rbp-0x1e0]
  4040be:	mov    QWORD PTR [rbp-0x218],rax
  4040c5:	mov    rax,QWORD PTR [rbp-0x218]
  4040cc:	mov    rdi,rax
  4040cf:	call   404ee9 <flatcc_builder_init@@Base>
  4040d4:	mov    rax,QWORD PTR [rbp-0x218]
  4040db:	mov    rdi,rax
  4040de:	call   409b46 <flatcc_builder_get_emit_context@@Base>
  4040e3:	mov    QWORD PTR [rbp-0x210],rax
  4040ea:	lea    rcx,[rbp-0x1f0]
  4040f1:	mov    rax,QWORD PTR [rbp-0x218]
  4040f8:	mov    edx,0x4
  4040fd:	mov    rsi,rcx
  404100:	mov    rdi,rax
  404103:	call   403940 <_start@@Base+0x6f0>
  404108:	mov    DWORD PTR [rbp-0x224],eax
  40410e:	mov    edx,DWORD PTR [rbp-0x224]
  404114:	mov    rax,QWORD PTR [rbp-0x218]
  40411b:	mov    ecx,edx
  40411d:	mov    edx,0x1
  404122:	mov    esi,0x2a
  404127:	mov    rdi,rax
  40412a:	call   403bcd <_start@@Base+0x97d>
  40412f:	lea    rdx,[rbp-0x220]
  404136:	mov    rax,QWORD PTR [rbp-0x210]
  40413d:	mov    rsi,rdx
  404140:	mov    rdi,rax
  404143:	call   403893 <_start@@Base+0x643>
  404148:	mov    QWORD PTR [rbp-0x208],rax
  40414f:	cmp    QWORD PTR [rbp-0x208],0x0
  404157:	jne    404163 <emit_test@@Base+0x16c>
  404159:	mov    eax,0xffffffff
  40415e:	jmp    4043e9 <emit_test@@Base+0x3f2>
  404163:	mov    rax,QWORD PTR [rbp-0x210]
  40416a:	mov    rdi,rax
  40416d:	call   403881 <_start@@Base+0x631>
  404172:	mov    rdx,rax
  404175:	mov    rax,QWORD PTR [rbp-0x220]
  40417c:	cmp    rdx,rax
  40417f:	je     4041a0 <emit_test@@Base+0x1a9>
  404181:	lea    rcx,[rip+0x72b0]        # 40b438 <_IO_stdin_used@@Base+0x438>
  404188:	mov    edx,0x64
  40418d:	lea    rsi,[rip+0x71cc]        # 40b360 <_IO_stdin_used@@Base+0x360>
  404194:	lea    rdi,[rip+0x722a]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  40419b:	call   4031a0 <__assert_fail@plt>
  4041a0:	mov    rax,QWORD PTR [rbp-0x218]
  4041a7:	mov    rdi,rax
  4041aa:	call   409746 <flatcc_builder_get_buffer_size@@Base>
  4041af:	mov    rdx,rax
  4041b2:	mov    rax,QWORD PTR [rbp-0x220]
  4041b9:	cmp    rdx,rax
  4041bc:	je     4041dd <emit_test@@Base+0x1e6>
  4041be:	lea    rcx,[rip+0x7273]        # 40b438 <_IO_stdin_used@@Base+0x438>
  4041c5:	mov    edx,0x65
  4041ca:	lea    rsi,[rip+0x718f]        # 40b360 <_IO_stdin_used@@Base+0x360>
  4041d1:	lea    rdi,[rip+0x71ed]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  4041d8:	call   4031a0 <__assert_fail@plt>
  4041dd:	mov    rax,QWORD PTR [rbp-0x220]
  4041e4:	mov    edx,eax
  4041e6:	mov    rax,QWORD PTR [rip+0xbe0b]        # 40fff8 <stderr@GLIBC_2.2.5>
  4041ed:	mov    rax,QWORD PTR [rax]
  4041f0:	lea    rsi,[rip+0x71d0]        # 40b3c7 <_IO_stdin_used@@Base+0x3c7>
  4041f7:	mov    rdi,rax
  4041fa:	mov    eax,0x0
  4041ff:	call   4031f0 <fprintf@plt>
  404204:	mov    rax,QWORD PTR [rip+0xbded]        # 40fff8 <stderr@GLIBC_2.2.5>
  40420b:	mov    rcx,QWORD PTR [rax]
  40420e:	mov    rdx,QWORD PTR [rbp-0x220]
  404215:	mov    rax,QWORD PTR [rbp-0x208]
  40421c:	mov    rsi,rax
  40421f:	lea    rdi,[rip+0x71b2]        # 40b3d8 <_IO_stdin_used@@Base+0x3d8>
  404226:	call   403c2a <_start@@Base+0x9da>
  40422b:	mov    rax,QWORD PTR [rbp-0x220]
  404232:	cmp    rax,0x3a
  404236:	je     404257 <emit_test@@Base+0x260>
  404238:	lea    rcx,[rip+0x71f9]        # 40b438 <_IO_stdin_used@@Base+0x438>
  40423f:	mov    edx,0x6a
  404244:	lea    rsi,[rip+0x7115]        # 40b360 <_IO_stdin_used@@Base+0x360>
  40424b:	lea    rdi,[rip+0x7173]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  404252:	call   4031a0 <__assert_fail@plt>
  404257:	mov    rax,QWORD PTR [rbp-0x220]
  40425e:	cmp    rax,0x3a
  404262:	je     404283 <emit_test@@Base+0x28c>
  404264:	lea    rcx,[rip+0x71cd]        # 40b438 <_IO_stdin_used@@Base+0x438>
  40426b:	mov    edx,0x6b
  404270:	lea    rsi,[rip+0x70e9]        # 40b360 <_IO_stdin_used@@Base+0x360>
  404277:	lea    rdi,[rip+0x7147]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  40427e:	call   4031a0 <__assert_fail@plt>
  404283:	mov    rdx,QWORD PTR [rbp-0x220]
  40428a:	lea    rcx,[rbp-0x50]
  40428e:	mov    rax,QWORD PTR [rbp-0x208]
  404295:	mov    rsi,rcx
  404298:	mov    rdi,rax
  40429b:	call   4031e0 <memcmp@plt>
  4042a0:	test   eax,eax
  4042a2:	je     4042c3 <emit_test@@Base+0x2cc>
  4042a4:	lea    rcx,[rip+0x718d]        # 40b438 <_IO_stdin_used@@Base+0x438>
  4042ab:	mov    edx,0x6c
  4042b0:	lea    rsi,[rip+0x70a9]        # 40b360 <_IO_stdin_used@@Base+0x360>
  4042b7:	lea    rdi,[rip+0x7107]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  4042be:	call   4031a0 <__assert_fail@plt>
  4042c3:	mov    rax,QWORD PTR [rbp-0x208]
  4042ca:	mov    rdi,rax
  4042cd:	call   4035dc <_start@@Base+0x38c>
  4042d2:	mov    QWORD PTR [rbp-0x200],rax
  4042d9:	mov    rax,QWORD PTR [rbp-0x200]
  4042e0:	mov    rdi,rax
  4042e3:	call   40362c <_start@@Base+0x3dc>
  4042e8:	mov    QWORD PTR [rbp-0x1f8],rax
  4042ef:	cmp    QWORD PTR [rbp-0x1f8],0x2a
  4042f7:	je     404318 <emit_test@@Base+0x321>
  4042f9:	lea    rcx,[rip+0x7138]        # 40b438 <_IO_stdin_used@@Base+0x438>
  404300:	mov    edx,0x70
  404305:	lea    rsi,[rip+0x7054]        # 40b360 <_IO_stdin_used@@Base+0x360>
  40430c:	lea    rdi,[rip+0x70b2]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  404313:	call   4031a0 <__assert_fail@plt>
  404318:	mov    rax,QWORD PTR [rbp-0x200]
  40431f:	mov    rdi,rax
  404322:	call   4036ec <_start@@Base+0x49c>
  404327:	cmp    al,0x1
  404329:	je     40434a <emit_test@@Base+0x353>
  40432b:	lea    rcx,[rip+0x7106]        # 40b438 <_IO_stdin_used@@Base+0x438>
  404332:	mov    edx,0x71
  404337:	lea    rsi,[rip+0x7022]        # 40b360 <_IO_stdin_used@@Base+0x360>
  40433e:	lea    rdi,[rip+0x7080]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  404345:	call   4031a0 <__assert_fail@plt>
  40434a:	mov    rax,QWORD PTR [rbp-0x200]
  404351:	mov    rdi,rax
  404354:	call   4037ac <_start@@Base+0x55c>
  404359:	mov    rdi,rax
  40435c:	call   4034c7 <_start@@Base+0x277>
  404361:	cmp    rax,0x4
  404365:	je     404386 <emit_test@@Base+0x38f>
  404367:	lea    rcx,[rip+0x70ca]        # 40b438 <_IO_stdin_used@@Base+0x438>
  40436e:	mov    edx,0x72
  404373:	lea    rsi,[rip+0x6fe6]        # 40b360 <_IO_stdin_used@@Base+0x360>
  40437a:	lea    rdi,[rip+0x7044]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  404381:	call   4031a0 <__assert_fail@plt>
  404386:	mov    rax,QWORD PTR [rbp-0x200]
  40438d:	mov    rdi,rax
  404390:	call   4037ac <_start@@Base+0x55c>
  404395:	mov    esi,0x2
  40439a:	mov    rdi,rax
  40439d:	call   4034e1 <_start@@Base+0x291>
  4043a2:	vucomiss xmm0,DWORD PTR [rip+0x70fa]        # 40b4a4 <_IO_stdin_used@@Base+0x4a4>
  4043aa:	jp     4043b6 <emit_test@@Base+0x3bf>
  4043ac:	vucomiss xmm0,DWORD PTR [rip+0x70f0]        # 40b4a4 <_IO_stdin_used@@Base+0x4a4>
  4043b4:	je     4043d5 <emit_test@@Base+0x3de>
  4043b6:	lea    rcx,[rip+0x707b]        # 40b438 <_IO_stdin_used@@Base+0x438>
  4043bd:	mov    edx,0x73
  4043c2:	lea    rsi,[rip+0x6f97]        # 40b360 <_IO_stdin_used@@Base+0x360>
  4043c9:	lea    rdi,[rip+0x6ff5]        # 40b3c5 <_IO_stdin_used@@Base+0x3c5>
  4043d0:	call   4031a0 <__assert_fail@plt>
  4043d5:	mov    rax,QWORD PTR [rbp-0x218]
  4043dc:	mov    rdi,rax
  4043df:	call   405158 <flatcc_builder_clear@@Base>
  4043e4:	mov    eax,0x0
  4043e9:	mov    rsi,QWORD PTR [rbp-0x8]
  4043ed:	xor    rsi,QWORD PTR fs:0x28
  4043f6:	je     4043fd <emit_test@@Base+0x406>
  4043f8:	call   403180 <__stack_chk_fail@plt>
  4043fd:	leave  
  4043fe:	ret    

00000000004043ff <main@@Base>:
  4043ff:	endbr64 
  404403:	push   rbp
  404404:	mov    rbp,rsp
  404407:	sub    rsp,0x20
  40440b:	mov    DWORD PTR [rbp-0x14],edi
  40440e:	mov    QWORD PTR [rbp-0x20],rsi
  404412:	mov    DWORD PTR [rbp-0x4],0x0
  404419:	mov    eax,0x0
  40441e:	call   403efd <debug_test@@Base>
  404423:	or     DWORD PTR [rbp-0x4],eax
  404426:	mov    eax,0x0
  40442b:	call   403ff7 <emit_test@@Base>
  404430:	or     DWORD PTR [rbp-0x4],eax
  404433:	mov    eax,DWORD PTR [rbp-0x4]
  404436:	leave  
  404437:	ret    
  404438:	push   rbp
  404439:	mov    rbp,rsp
  40443c:	sub    rsp,0x30
  404440:	mov    QWORD PTR [rbp-0x28],rdi
  404444:	mov    QWORD PTR [rbp-0x30],rsi
  404448:	mov    rax,QWORD PTR fs:0x28
  404451:	mov    QWORD PTR [rbp-0x8],rax
  404455:	xor    eax,eax
  404457:	mov    QWORD PTR [rbp-0x10],0x0
  40445f:	cmp    QWORD PTR [rbp-0x28],0x7
  404464:	ja     40446e <main@@Base+0x6f>
  404466:	mov    QWORD PTR [rbp-0x28],0x8
  40446e:	mov    rdx,QWORD PTR [rbp-0x30]
  404472:	mov    rcx,QWORD PTR [rbp-0x28]
  404476:	lea    rax,[rbp-0x10]
  40447a:	mov    rsi,rcx
  40447d:	mov    rdi,rax
  404480:	call   403240 <posix_memalign@plt>
  404485:	mov    DWORD PTR [rbp-0x14],eax
  404488:	cmp    DWORD PTR [rbp-0x14],0x0
  40448c:	je     4044ab <main@@Base+0xac>
  40448e:	mov    rax,QWORD PTR [rbp-0x10]
  404492:	test   rax,rax
  404495:	je     4044ab <main@@Base+0xac>
  404497:	mov    rax,QWORD PTR [rbp-0x10]
  40449b:	mov    rdi,rax
  40449e:	call   403140 <free@plt>
  4044a3:	mov    QWORD PTR [rbp-0x10],0x0
  4044ab:	mov    rax,QWORD PTR [rbp-0x10]
  4044af:	mov    rcx,QWORD PTR [rbp-0x8]
  4044b3:	xor    rcx,QWORD PTR fs:0x28
  4044bc:	je     4044c3 <main@@Base+0xc4>
  4044be:	call   403180 <__stack_chk_fail@plt>
  4044c3:	leave  
  4044c4:	ret    
  4044c5:	push   rbp
  4044c6:	mov    rbp,rsp
  4044c9:	mov    DWORD PTR [rbp-0x4],edi
  4044cc:	mov    eax,DWORD PTR [rbp-0x4]
  4044cf:	pop    rbp
  4044d0:	ret    
  4044d1:	push   rbp
  4044d2:	mov    rbp,rsp
  4044d5:	mov    eax,edi
  4044d7:	mov    BYTE PTR [rbp-0x4],al
  4044da:	movzx  eax,BYTE PTR [rbp-0x4]
  4044de:	pop    rbp
  4044df:	ret    
  4044e0:	push   rbp
  4044e1:	mov    rbp,rsp
  4044e4:	mov    DWORD PTR [rbp-0x4],edi
  4044e7:	mov    eax,DWORD PTR [rbp-0x4]
  4044ea:	pop    rbp
  4044eb:	ret    
  4044ec:	push   rbp
  4044ed:	mov    rbp,rsp
  4044f0:	mov    QWORD PTR [rbp-0x8],rdi
  4044f4:	mov    QWORD PTR [rbp-0x10],rsi
  4044f8:	mov    rax,QWORD PTR [rbp-0x8]
  4044fc:	mov    rdx,QWORD PTR [rax]
  4044ff:	mov    rax,QWORD PTR [rbp-0x8]
  404503:	mov    rax,QWORD PTR [rax+0x8]
  404507:	cmp    rdx,rax
  40450a:	jne    40452c <main@@Base+0x12d>
  40450c:	cmp    QWORD PTR [rbp-0x10],0x0
  404511:	je     404522 <main@@Base+0x123>
  404513:	mov    rax,QWORD PTR [rbp-0x8]
  404517:	mov    rdx,QWORD PTR [rax+0x30]
  40451b:	mov    rax,QWORD PTR [rbp-0x10]
  40451f:	mov    QWORD PTR [rax],rdx
  404522:	mov    rax,QWORD PTR [rbp-0x8]
  404526:	mov    rax,QWORD PTR [rax+0x10]
  40452a:	jmp    404543 <main@@Base+0x144>
  40452c:	cmp    QWORD PTR [rbp-0x10],0x0
  404531:	je     40453e <main@@Base+0x13f>
  404533:	mov    rax,QWORD PTR [rbp-0x10]
  404537:	mov    QWORD PTR [rax],0x0
  40453e:	mov    eax,0x0
  404543:	pop    rbp
  404544:	ret    
  404545:	push   rbp
  404546:	mov    rbp,rsp
  404549:	sub    rsp,0x20
  40454d:	mov    QWORD PTR [rbp-0x18],rdi
  404551:	mov    QWORD PTR [rbp-0x20],rsi
  404555:	mov    rdx,QWORD PTR [rbp-0x20]
  404559:	mov    rax,QWORD PTR [rbp-0x18]
  40455d:	mov    esi,0x0
  404562:	mov    rdi,rax
  404565:	call   4031d0 <memchr@plt>
  40456a:	mov    QWORD PTR [rbp-0x8],rax
  40456e:	cmp    QWORD PTR [rbp-0x8],0x0
  404573:	je     40457f <main@@Base+0x180>
  404575:	mov    rax,QWORD PTR [rbp-0x8]
  404579:	sub    rax,QWORD PTR [rbp-0x18]
  40457d:	jmp    404583 <main@@Base+0x184>
  40457f:	mov    rax,QWORD PTR [rbp-0x20]
  404583:	leave  
  404584:	ret    

0000000000404585 <flatcc_builder_default_alloc@@Base>:
  404585:	endbr64 
  404589:	push   rbp
  40458a:	mov    rbp,rsp
  40458d:	sub    rsp,0x30
  404591:	mov    QWORD PTR [rbp-0x18],rdi
  404595:	mov    QWORD PTR [rbp-0x20],rsi
  404599:	mov    QWORD PTR [rbp-0x28],rdx
  40459d:	mov    DWORD PTR [rbp-0x2c],ecx
  4045a0:	mov    DWORD PTR [rbp-0x30],r8d
  4045a4:	cmp    QWORD PTR [rbp-0x28],0x0
  4045a9:	jne    4045e7 <flatcc_builder_default_alloc@@Base+0x62>
  4045ab:	mov    rax,QWORD PTR [rbp-0x20]
  4045af:	mov    rax,QWORD PTR [rax]
  4045b2:	test   rax,rax
  4045b5:	je     4045dd <flatcc_builder_default_alloc@@Base+0x58>
  4045b7:	mov    rax,QWORD PTR [rbp-0x20]
  4045bb:	mov    rax,QWORD PTR [rax]
  4045be:	mov    rdi,rax
  4045c1:	call   403140 <free@plt>
  4045c6:	mov    rax,QWORD PTR [rbp-0x20]
  4045ca:	mov    QWORD PTR [rax],0x0
  4045d1:	mov    rax,QWORD PTR [rbp-0x20]
  4045d5:	mov    QWORD PTR [rax+0x8],0x0
  4045dd:	mov    eax,0x0
  4045e2:	jmp    4046f6 <flatcc_builder_default_alloc@@Base+0x171>
  4045e7:	cmp    DWORD PTR [rbp-0x30],0x4
  4045eb:	je     40461d <flatcc_builder_default_alloc@@Base+0x98>
  4045ed:	cmp    DWORD PTR [rbp-0x30],0x4
  4045f1:	jg     4045fb <flatcc_builder_default_alloc@@Base+0x76>
  4045f3:	cmp    DWORD PTR [rbp-0x30],0x1
  4045f7:	je     404609 <flatcc_builder_default_alloc@@Base+0x84>
  4045f9:	jmp    404631 <flatcc_builder_default_alloc@@Base+0xac>
  4045fb:	cmp    DWORD PTR [rbp-0x30],0x5
  4045ff:	je     404613 <flatcc_builder_default_alloc@@Base+0x8e>
  404601:	cmp    DWORD PTR [rbp-0x30],0x7
  404605:	je     404627 <flatcc_builder_default_alloc@@Base+0xa2>
  404607:	jmp    404631 <flatcc_builder_default_alloc@@Base+0xac>
  404609:	mov    QWORD PTR [rbp-0x10],0x100
  404611:	jmp    40463a <flatcc_builder_default_alloc@@Base+0xb5>
  404613:	mov    rax,QWORD PTR [rbp-0x28]
  404617:	mov    QWORD PTR [rbp-0x10],rax
  40461b:	jmp    40463a <flatcc_builder_default_alloc@@Base+0xb5>
  40461d:	mov    QWORD PTR [rbp-0x10],0x120
  404625:	jmp    40463a <flatcc_builder_default_alloc@@Base+0xb5>
  404627:	mov    QWORD PTR [rbp-0x10],0x40
  40462f:	jmp    40463a <flatcc_builder_default_alloc@@Base+0xb5>
  404631:	mov    QWORD PTR [rbp-0x10],0x20
  404639:	nop
  40463a:	jmp    404640 <flatcc_builder_default_alloc@@Base+0xbb>
  40463c:	shl    QWORD PTR [rbp-0x10],1
  404640:	mov    rax,QWORD PTR [rbp-0x10]
  404644:	cmp    rax,QWORD PTR [rbp-0x28]
  404648:	jb     40463c <flatcc_builder_default_alloc@@Base+0xb7>
  40464a:	mov    rax,QWORD PTR [rbp-0x20]
  40464e:	mov    rax,QWORD PTR [rax+0x8]
  404652:	cmp    QWORD PTR [rbp-0x28],rax
  404656:	ja     404673 <flatcc_builder_default_alloc@@Base+0xee>
  404658:	mov    rax,QWORD PTR [rbp-0x20]
  40465c:	mov    rax,QWORD PTR [rax+0x8]
  404660:	shr    rax,1
  404663:	cmp    QWORD PTR [rbp-0x10],rax
  404667:	ja     404673 <flatcc_builder_default_alloc@@Base+0xee>
  404669:	mov    eax,0x0
  40466e:	jmp    4046f6 <flatcc_builder_default_alloc@@Base+0x171>
  404673:	mov    rax,QWORD PTR [rbp-0x20]
  404677:	mov    rax,QWORD PTR [rax]
  40467a:	mov    rdx,QWORD PTR [rbp-0x10]
  40467e:	mov    rsi,rdx
  404681:	mov    rdi,rax
  404684:	call   403220 <realloc@plt>
  404689:	mov    QWORD PTR [rbp-0x8],rax
  40468d:	cmp    QWORD PTR [rbp-0x8],0x0
  404692:	jne    40469b <flatcc_builder_default_alloc@@Base+0x116>
  404694:	mov    eax,0xffffffff
  404699:	jmp    4046f6 <flatcc_builder_default_alloc@@Base+0x171>
  40469b:	cmp    DWORD PTR [rbp-0x2c],0x0
  40469f:	je     4046da <flatcc_builder_default_alloc@@Base+0x155>
  4046a1:	mov    rax,QWORD PTR [rbp-0x20]
  4046a5:	mov    rax,QWORD PTR [rax+0x8]
  4046a9:	cmp    QWORD PTR [rbp-0x10],rax
  4046ad:	jbe    4046da <flatcc_builder_default_alloc@@Base+0x155>
  4046af:	mov    rax,QWORD PTR [rbp-0x20]
  4046b3:	mov    rax,QWORD PTR [rax+0x8]
  4046b7:	mov    rdx,QWORD PTR [rbp-0x10]
  4046bb:	sub    rdx,rax
  4046be:	mov    rax,QWORD PTR [rbp-0x20]
  4046c2:	mov    rcx,QWORD PTR [rax+0x8]
  4046c6:	mov    rax,QWORD PTR [rbp-0x8]
  4046ca:	add    rax,rcx
  4046cd:	mov    esi,0x0
  4046d2:	mov    rdi,rax
  4046d5:	call   4031b0 <memset@plt>
  4046da:	mov    rax,QWORD PTR [rbp-0x20]
  4046de:	mov    rdx,QWORD PTR [rbp-0x8]
  4046e2:	mov    QWORD PTR [rax],rdx
  4046e5:	mov    rax,QWORD PTR [rbp-0x20]
  4046e9:	mov    rdx,QWORD PTR [rbp-0x10]
  4046ed:	mov    QWORD PTR [rax+0x8],rdx
  4046f1:	mov    eax,0x0
  4046f6:	leave  
  4046f7:	ret    
  4046f8:	push   rbp
  4046f9:	mov    rbp,rsp
  4046fc:	mov    QWORD PTR [rbp-0x18],rdi
  404700:	mov    DWORD PTR [rbp-0x1c],esi
  404703:	mov    rax,QWORD PTR [rbp-0x18]
  404707:	add    rax,0x58
  40470b:	add    rax,0x10
  40470f:	mov    QWORD PTR [rbp-0x8],rax
  404713:	mov    rax,QWORD PTR [rbp-0x18]
  404717:	mov    rdx,QWORD PTR [rax+0x68]
  40471b:	mov    rax,QWORD PTR [rbp-0x18]
  40471f:	mov    eax,DWORD PTR [rax+0x28]
  404722:	mov    eax,eax
  404724:	add    rdx,rax
  404727:	mov    rax,QWORD PTR [rbp-0x18]
  40472b:	mov    QWORD PTR [rax+0x18],rdx
  40472f:	mov    rax,QWORD PTR [rbp-0x8]
  404733:	mov    rax,QWORD PTR [rax+0x8]
  404737:	mov    edx,eax
  404739:	mov    rax,QWORD PTR [rbp-0x18]
  40473d:	mov    eax,DWORD PTR [rax+0x28]
  404740:	sub    edx,eax
  404742:	mov    rax,QWORD PTR [rbp-0x18]
  404746:	mov    DWORD PTR [rax+0x24],edx
  404749:	mov    rax,QWORD PTR [rbp-0x18]
  40474d:	mov    eax,DWORD PTR [rax+0x24]
  404750:	cmp    DWORD PTR [rbp-0x1c],eax
  404753:	jae    40475f <flatcc_builder_default_alloc@@Base+0x1da>
  404755:	mov    rax,QWORD PTR [rbp-0x18]
  404759:	mov    edx,DWORD PTR [rbp-0x1c]
  40475c:	mov    DWORD PTR [rax+0x24],edx
  40475f:	mov    rax,QWORD PTR [rbp-0x18]
  404763:	mov    rax,QWORD PTR [rax+0x30]
  404767:	mov    edx,DWORD PTR [rbp-0x1c]
  40476a:	mov    DWORD PTR [rax+0x4],edx
  40476d:	nop
  40476e:	pop    rbp
  40476f:	ret    
  404770:	endbr64 
  404774:	push   rbp
  404775:	mov    rbp,rsp
  404778:	sub    rsp,0x30
  40477c:	mov    QWORD PTR [rbp-0x18],rdi
  404780:	mov    QWORD PTR [rbp-0x20],rsi
  404784:	mov    DWORD PTR [rbp-0x24],edx
  404787:	mov    rax,QWORD PTR [rbp-0x18]
  40478b:	add    rax,0x58
  40478f:	add    rax,0x10
  404793:	mov    QWORD PTR [rbp-0x8],rax
  404797:	mov    rax,QWORD PTR [rbp-0x18]
  40479b:	mov    rax,QWORD PTR [rax+0x50]
  40479f:	mov    rdx,QWORD PTR [rbp-0x18]
  4047a3:	mov    edx,DWORD PTR [rdx+0x28]
  4047a6:	mov    ecx,edx
  4047a8:	mov    rdx,QWORD PTR [rbp-0x20]
  4047ac:	lea    r9,[rcx+rdx*1]
  4047b0:	mov    rdx,QWORD PTR [rbp-0x18]
  4047b4:	mov    rdi,QWORD PTR [rdx+0x40]
  4047b8:	mov    rsi,QWORD PTR [rbp-0x8]
  4047bc:	mov    r8d,0x1
  4047c2:	mov    ecx,0x1
  4047c7:	mov    rdx,r9
  4047ca:	call   rax
  4047cc:	test   eax,eax
  4047ce:	je     4047d7 <flatcc_builder_default_alloc@@Base+0x252>
  4047d0:	mov    eax,0xffffffff
  4047d5:	jmp    4047ed <flatcc_builder_default_alloc@@Base+0x268>
  4047d7:	mov    edx,DWORD PTR [rbp-0x24]
  4047da:	mov    rax,QWORD PTR [rbp-0x18]
  4047de:	mov    esi,edx
  4047e0:	mov    rdi,rax
  4047e3:	call   4046f8 <flatcc_builder_default_alloc@@Base+0x173>
  4047e8:	mov    eax,0x0
  4047ed:	leave  
  4047ee:	ret    
  4047ef:	push   rbp
  4047f0:	mov    rbp,rsp
  4047f3:	sub    rsp,0x20
  4047f7:	mov    QWORD PTR [rbp-0x18],rdi
  4047fb:	mov    DWORD PTR [rbp-0x1c],esi
  4047fe:	mov    rax,QWORD PTR [rbp-0x18]
  404802:	mov    eax,DWORD PTR [rax+0x20]
  404805:	mov    eax,eax
  404807:	mov    QWORD PTR [rbp-0x8],rax
  40480b:	mov    rax,QWORD PTR [rbp-0x18]
  40480f:	mov    edx,DWORD PTR [rax+0x20]
  404812:	mov    eax,DWORD PTR [rbp-0x1c]
  404815:	add    edx,eax
  404817:	mov    rax,QWORD PTR [rbp-0x18]
  40481b:	mov    DWORD PTR [rax+0x20],edx
  40481e:	mov    rax,QWORD PTR [rbp-0x18]
  404822:	mov    edx,DWORD PTR [rax+0x20]
  404825:	mov    rax,QWORD PTR [rbp-0x18]
  404829:	mov    eax,DWORD PTR [rax+0x24]
  40482c:	cmp    edx,eax
  40482e:	jb     40485a <flatcc_builder_default_alloc@@Base+0x2d5>
  404830:	mov    rax,QWORD PTR [rbp-0x18]
  404834:	mov    eax,DWORD PTR [rax+0x20]
  404837:	inc    eax
  404839:	mov    ecx,eax
  40483b:	mov    rax,QWORD PTR [rbp-0x18]
  40483f:	mov    edx,0xfffffffc
  404844:	mov    rsi,rcx
  404847:	mov    rdi,rax
  40484a:	call   404770 <flatcc_builder_default_alloc@@Base+0x1eb>
  40484f:	test   eax,eax
  404851:	je     40485a <flatcc_builder_default_alloc@@Base+0x2d5>
  404853:	mov    eax,0x0
  404858:	jmp    404869 <flatcc_builder_default_alloc@@Base+0x2e4>
  40485a:	mov    rax,QWORD PTR [rbp-0x18]
  40485e:	mov    rdx,QWORD PTR [rax+0x18]
  404862:	mov    rax,QWORD PTR [rbp-0x8]
  404866:	add    rax,rdx
  404869:	leave  
  40486a:	ret    
  40486b:	push   rbp
  40486c:	mov    rbp,rsp
  40486f:	sub    rsp,0x10
  404873:	mov    QWORD PTR [rbp-0x8],rdi
  404877:	mov    DWORD PTR [rbp-0xc],esi
  40487a:	mov    rax,QWORD PTR [rbp-0x8]
  40487e:	mov    eax,DWORD PTR [rax+0x20]
  404881:	sub    eax,DWORD PTR [rbp-0xc]
  404884:	mov    edx,eax
  404886:	mov    rax,QWORD PTR [rbp-0x8]
  40488a:	mov    DWORD PTR [rax+0x20],edx
  40488d:	mov    eax,DWORD PTR [rbp-0xc]
  404890:	mov    rdx,QWORD PTR [rbp-0x8]
  404894:	mov    rcx,QWORD PTR [rdx+0x18]
  404898:	mov    rdx,QWORD PTR [rbp-0x8]
  40489c:	mov    edx,DWORD PTR [rdx+0x20]
  40489f:	mov    edx,edx
  4048a1:	add    rcx,rdx
  4048a4:	mov    rdx,rax
  4048a7:	mov    esi,0x0
  4048ac:	mov    rdi,rcx
  4048af:	call   4031b0 <memset@plt>
  4048b4:	nop
  4048b5:	leave  
  4048b6:	ret    
  4048b7:	push   rbp
  4048b8:	mov    rbp,rsp
  4048bb:	sub    rsp,0x30
  4048bf:	mov    QWORD PTR [rbp-0x18],rdi
  4048c3:	mov    QWORD PTR [rbp-0x20],rsi
  4048c7:	mov    DWORD PTR [rbp-0x24],edx
  4048ca:	mov    edx,DWORD PTR [rbp-0x24]
  4048cd:	mov    rax,QWORD PTR [rbp-0x18]
  4048d1:	mov    esi,edx
  4048d3:	mov    rdi,rax
  4048d6:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  4048db:	mov    QWORD PTR [rbp-0x8],rax
  4048df:	cmp    QWORD PTR [rbp-0x8],0x0
  4048e4:	jne    4048ed <flatcc_builder_default_alloc@@Base+0x368>
  4048e6:	mov    eax,0x0
  4048eb:	jmp    404907 <flatcc_builder_default_alloc@@Base+0x382>
  4048ed:	mov    edx,DWORD PTR [rbp-0x24]
  4048f0:	mov    rcx,QWORD PTR [rbp-0x20]
  4048f4:	mov    rax,QWORD PTR [rbp-0x8]
  4048f8:	mov    rsi,rcx
  4048fb:	mov    rdi,rax
  4048fe:	call   403200 <memcpy@plt>
  404903:	mov    rax,QWORD PTR [rbp-0x8]
  404907:	leave  
  404908:	ret    
  404909:	push   rbp
  40490a:	mov    rbp,rsp
  40490d:	sub    rsp,0x30
  404911:	mov    QWORD PTR [rbp-0x18],rdi
  404915:	mov    DWORD PTR [rbp-0x1c],esi
  404918:	mov    eax,ecx
  40491a:	mov    WORD PTR [rbp-0x20],dx
  40491e:	mov    WORD PTR [rbp-0x24],ax
  404922:	mov    rax,QWORD PTR [rbp-0x18]
  404926:	mov    edx,DWORD PTR [rax+0x20]
  404929:	movzx  eax,WORD PTR [rbp-0x20]
  40492d:	add    eax,edx
  40492f:	lea    edx,[rax-0x1]
  404932:	movzx  eax,WORD PTR [rbp-0x20]
  404936:	neg    eax
  404938:	and    eax,edx
  40493a:	mov    DWORD PTR [rbp-0x4],eax
  40493d:	mov    edx,DWORD PTR [rbp-0x4]
  404940:	mov    eax,DWORD PTR [rbp-0x1c]
  404943:	add    edx,eax
  404945:	mov    rax,QWORD PTR [rbp-0x18]
  404949:	mov    DWORD PTR [rax+0x20],edx
  40494c:	mov    rax,QWORD PTR [rbp-0x18]
  404950:	mov    edx,DWORD PTR [rax+0x20]
  404953:	mov    rax,QWORD PTR [rbp-0x18]
  404957:	mov    eax,DWORD PTR [rax+0x24]
  40495a:	cmp    edx,eax
  40495c:	jb     404988 <flatcc_builder_default_alloc@@Base+0x403>
  40495e:	mov    rax,QWORD PTR [rbp-0x18]
  404962:	mov    eax,DWORD PTR [rax+0x20]
  404965:	inc    eax
  404967:	mov    ecx,eax
  404969:	mov    rax,QWORD PTR [rbp-0x18]
  40496d:	mov    edx,0xfffc
  404972:	mov    rsi,rcx
  404975:	mov    rdi,rax
  404978:	call   404770 <flatcc_builder_default_alloc@@Base+0x1eb>
  40497d:	test   eax,eax
  40497f:	je     404988 <flatcc_builder_default_alloc@@Base+0x403>
  404981:	mov    eax,0x0
  404986:	jmp    4049cf <flatcc_builder_default_alloc@@Base+0x44a>
  404988:	mov    eax,DWORD PTR [rbp-0x4]
  40498b:	mov    ecx,eax
  40498d:	mov    rax,QWORD PTR [rbp-0x18]
  404991:	mov    rax,QWORD PTR [rax+0x8]
  404995:	movzx  edx,WORD PTR [rbp-0x24]
  404999:	add    rdx,rdx
  40499c:	add    rdx,rax
  40499f:	lea    eax,[rcx+0x4]
  4049a2:	mov    WORD PTR [rdx],ax
  4049a5:	mov    rax,QWORD PTR [rbp-0x18]
  4049a9:	movzx  eax,WORD PTR [rax+0x10]
  4049ad:	cmp    WORD PTR [rbp-0x24],ax
  4049b1:	jb     4049c1 <flatcc_builder_default_alloc@@Base+0x43c>
  4049b3:	movzx  eax,WORD PTR [rbp-0x24]
  4049b7:	inc    eax
  4049b9:	mov    rdx,QWORD PTR [rbp-0x18]
  4049bd:	mov    WORD PTR [rdx+0x10],ax
  4049c1:	mov    rax,QWORD PTR [rbp-0x18]
  4049c5:	mov    rdx,QWORD PTR [rax+0x18]
  4049c9:	mov    eax,DWORD PTR [rbp-0x4]
  4049cc:	add    rax,rdx
  4049cf:	leave  
  4049d0:	ret    
  4049d1:	push   rbp
  4049d2:	mov    rbp,rsp
  4049d5:	sub    rsp,0x20
  4049d9:	mov    QWORD PTR [rbp-0x18],rdi
  4049dd:	mov    eax,esi
  4049df:	mov    WORD PTR [rbp-0x1c],ax
  4049e3:	mov    rax,QWORD PTR [rbp-0x18]
  4049e7:	mov    eax,DWORD PTR [rax+0x20]
  4049ea:	add    eax,0x3
  4049ed:	and    eax,0xfffffffc
  4049f0:	mov    DWORD PTR [rbp-0x4],eax
  4049f3:	mov    eax,DWORD PTR [rbp-0x4]
  4049f6:	lea    edx,[rax+0x4]
  4049f9:	mov    rax,QWORD PTR [rbp-0x18]
  4049fd:	mov    DWORD PTR [rax+0x20],edx
  404a00:	mov    rax,QWORD PTR [rbp-0x18]
  404a04:	mov    edx,DWORD PTR [rax+0x20]
  404a07:	mov    rax,QWORD PTR [rbp-0x18]
  404a0b:	mov    eax,DWORD PTR [rax+0x24]
  404a0e:	cmp    edx,eax
  404a10:	jbe    404a3a <flatcc_builder_default_alloc@@Base+0x4b5>
  404a12:	mov    rax,QWORD PTR [rbp-0x18]
  404a16:	mov    eax,DWORD PTR [rax+0x20]
  404a19:	mov    ecx,eax
  404a1b:	mov    rax,QWORD PTR [rbp-0x18]
  404a1f:	mov    edx,0xfffc
  404a24:	mov    rsi,rcx
  404a27:	mov    rdi,rax
  404a2a:	call   404770 <flatcc_builder_default_alloc@@Base+0x1eb>
  404a2f:	test   eax,eax
  404a31:	je     404a3a <flatcc_builder_default_alloc@@Base+0x4b5>
  404a33:	mov    eax,0x0
  404a38:	jmp    404a99 <flatcc_builder_default_alloc@@Base+0x514>
  404a3a:	mov    eax,DWORD PTR [rbp-0x4]
  404a3d:	mov    ecx,eax
  404a3f:	mov    rax,QWORD PTR [rbp-0x18]
  404a43:	mov    rax,QWORD PTR [rax+0x8]
  404a47:	movzx  edx,WORD PTR [rbp-0x1c]
  404a4b:	add    rdx,rdx
  404a4e:	add    rdx,rax
  404a51:	lea    eax,[rcx+0x4]
  404a54:	mov    WORD PTR [rdx],ax
  404a57:	mov    rax,QWORD PTR [rbp-0x18]
  404a5b:	movzx  eax,WORD PTR [rax+0x10]
  404a5f:	cmp    WORD PTR [rbp-0x1c],ax
  404a63:	jb     404a73 <flatcc_builder_default_alloc@@Base+0x4ee>
  404a65:	movzx  eax,WORD PTR [rbp-0x1c]
  404a69:	inc    eax
  404a6b:	mov    rdx,QWORD PTR [rbp-0x18]
  404a6f:	mov    WORD PTR [rdx+0x10],ax
  404a73:	mov    rax,QWORD PTR [rbp-0x18]
  404a77:	mov    rax,QWORD PTR [rax]
  404a7a:	lea    rcx,[rax+0x2]
  404a7e:	mov    rdx,QWORD PTR [rbp-0x18]
  404a82:	mov    QWORD PTR [rdx],rcx
  404a85:	mov    edx,DWORD PTR [rbp-0x4]
  404a88:	mov    WORD PTR [rax],dx
  404a8b:	mov    rax,QWORD PTR [rbp-0x18]
  404a8f:	mov    rdx,QWORD PTR [rax+0x18]
  404a93:	mov    eax,DWORD PTR [rbp-0x4]
  404a96:	add    rax,rdx
  404a99:	leave  
  404a9a:	ret    
  404a9b:	push   rbp
  404a9c:	mov    rbp,rsp
  404a9f:	sub    rsp,0x30
  404aa3:	mov    QWORD PTR [rbp-0x18],rdi
  404aa7:	mov    DWORD PTR [rbp-0x1c],esi
  404aaa:	mov    QWORD PTR [rbp-0x28],rdx
  404aae:	mov    QWORD PTR [rbp-0x30],rcx
  404ab2:	mov    DWORD PTR [rbp-0x20],r8d
  404ab6:	mov    rax,QWORD PTR [rbp-0x18]
  404aba:	lea    rdx,[rax+0x58]
  404abe:	mov    eax,DWORD PTR [rbp-0x1c]
  404ac1:	cdqe   
  404ac3:	shl    rax,0x4
  404ac7:	add    rax,rdx
  404aca:	mov    QWORD PTR [rbp-0x8],rax
  404ace:	mov    rdx,QWORD PTR [rbp-0x28]
  404ad2:	mov    rax,QWORD PTR [rbp-0x30]
  404ad6:	add    rdx,rax
  404ad9:	mov    rax,QWORD PTR [rbp-0x8]
  404add:	mov    rax,QWORD PTR [rax+0x8]
  404ae1:	cmp    rdx,rax
  404ae4:	jbe    404b39 <flatcc_builder_default_alloc@@Base+0x5b4>
  404ae6:	mov    rax,QWORD PTR [rbp-0x18]
  404aea:	mov    rax,QWORD PTR [rax+0x50]
  404aee:	mov    rcx,QWORD PTR [rbp-0x28]
  404af2:	mov    rdx,QWORD PTR [rbp-0x30]
  404af6:	lea    r9,[rcx+rdx*1]
  404afa:	mov    rdx,QWORD PTR [rbp-0x18]
  404afe:	mov    rdi,QWORD PTR [rdx+0x40]
  404b02:	mov    ecx,DWORD PTR [rbp-0x1c]
  404b05:	mov    edx,DWORD PTR [rbp-0x20]
  404b08:	mov    rsi,QWORD PTR [rbp-0x8]
  404b0c:	mov    r8d,ecx
  404b0f:	mov    ecx,edx
  404b11:	mov    rdx,r9
  404b14:	call   rax
  404b16:	test   eax,eax
  404b18:	je     404b39 <flatcc_builder_default_alloc@@Base+0x5b4>
  404b1a:	lea    rcx,[rip+0x7017]        # 40bb38 <flatcc_builder_padding_base@@Base+0x658>
  404b21:	mov    edx,0x134
  404b26:	lea    rsi,[rip+0x6bb3]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  404b2d:	lea    rdi,[rip+0x6c0c]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  404b34:	call   4031a0 <__assert_fail@plt>
  404b39:	mov    rax,QWORD PTR [rbp-0x8]
  404b3d:	mov    rax,QWORD PTR [rax]
  404b40:	mov    rdx,rax
  404b43:	mov    rax,QWORD PTR [rbp-0x28]
  404b47:	add    rax,rdx
  404b4a:	leave  
  404b4b:	ret    
  404b4c:	push   rbp
  404b4d:	mov    rbp,rsp
  404b50:	sub    rsp,0x20
  404b54:	mov    QWORD PTR [rbp-0x18],rdi
  404b58:	mov    DWORD PTR [rbp-0x1c],esi
  404b5b:	mov    rax,QWORD PTR [rbp-0x18]
  404b5f:	mov    rax,QWORD PTR [rax+0x30]
  404b63:	mov    edx,DWORD PTR [rax+0x10]
  404b66:	mov    rax,QWORD PTR [rbp-0x18]
  404b6a:	mov    rax,QWORD PTR [rax+0x30]
  404b6e:	movzx  eax,WORD PTR [rax+0x1c]
  404b72:	movzx  eax,ax
  404b75:	add    eax,eax
  404b77:	add    eax,edx
  404b79:	mov    DWORD PTR [rbp-0x8],eax
  404b7c:	mov    eax,DWORD PTR [rbp-0x1c]
  404b7f:	add    eax,0x2
  404b82:	cdqe   
  404b84:	add    eax,eax
  404b86:	mov    DWORD PTR [rbp-0x4],eax
  404b89:	mov    ecx,DWORD PTR [rbp-0x4]
  404b8c:	mov    edx,DWORD PTR [rbp-0x8]
  404b8f:	mov    rax,QWORD PTR [rbp-0x18]
  404b93:	mov    r8d,0x1
  404b99:	mov    esi,0x0
  404b9e:	mov    rdi,rax
  404ba1:	call   404a9b <flatcc_builder_default_alloc@@Base+0x516>
  404ba6:	mov    rdx,rax
  404ba9:	mov    rax,QWORD PTR [rbp-0x18]
  404bad:	mov    QWORD PTR [rax+0x8],rdx
  404bb1:	mov    rax,QWORD PTR [rbp-0x18]
  404bb5:	mov    rax,QWORD PTR [rax+0x8]
  404bb9:	test   rax,rax
  404bbc:	jne    404bc5 <flatcc_builder_default_alloc@@Base+0x640>
  404bbe:	mov    eax,0xffffffff
  404bc3:	jmp    404c32 <flatcc_builder_default_alloc@@Base+0x6ad>
  404bc5:	mov    rax,QWORD PTR [rbp-0x18]
  404bc9:	mov    rax,QWORD PTR [rax+0x8]
  404bcd:	lea    rdx,[rax+0x4]
  404bd1:	mov    rax,QWORD PTR [rbp-0x18]
  404bd5:	mov    QWORD PTR [rax+0x8],rdx
  404bd9:	mov    rax,QWORD PTR [rbp-0x18]
  404bdd:	mov    rax,QWORD PTR [rax+0x30]
  404be1:	mov    eax,DWORD PTR [rax+0x14]
  404be4:	mov    DWORD PTR [rbp-0x8],eax
  404be7:	mov    eax,DWORD PTR [rbp-0x1c]
  404bea:	cdqe   
  404bec:	add    eax,eax
  404bee:	inc    eax
  404bf0:	mov    DWORD PTR [rbp-0x4],eax
  404bf3:	mov    ecx,DWORD PTR [rbp-0x4]
  404bf6:	mov    edx,DWORD PTR [rbp-0x8]
  404bf9:	mov    rax,QWORD PTR [rbp-0x18]
  404bfd:	mov    r8d,0x0
  404c03:	mov    esi,0x3
  404c08:	mov    rdi,rax
  404c0b:	call   404a9b <flatcc_builder_default_alloc@@Base+0x516>
  404c10:	mov    rdx,rax
  404c13:	mov    rax,QWORD PTR [rbp-0x18]
  404c17:	mov    QWORD PTR [rax],rdx
  404c1a:	mov    rax,QWORD PTR [rbp-0x18]
  404c1e:	mov    rax,QWORD PTR [rax]
  404c21:	test   rax,rax
  404c24:	jne    404c2d <flatcc_builder_default_alloc@@Base+0x6a8>
  404c26:	mov    eax,0xffffffff
  404c2b:	jmp    404c32 <flatcc_builder_default_alloc@@Base+0x6ad>
  404c2d:	mov    eax,0x0
  404c32:	leave  
  404c33:	ret    
  404c34:	endbr64 
  404c38:	push   rbp
  404c39:	mov    rbp,rsp
  404c3c:	sub    rsp,0x30
  404c40:	mov    QWORD PTR [rbp-0x28],rdi
  404c44:	mov    rax,QWORD PTR [rbp-0x28]
  404c48:	add    rax,0x58
  404c4c:	add    rax,0x50
  404c50:	mov    QWORD PTR [rbp-0x8],rax
  404c54:	mov    rax,QWORD PTR [rbp-0x28]
  404c58:	mov    eax,DWORD PTR [rax+0xe4]
  404c5e:	test   eax,eax
  404c60:	je     404c81 <flatcc_builder_default_alloc@@Base+0x6fc>
  404c62:	lea    rcx,[rip+0x6ebf]        # 40bb28 <flatcc_builder_padding_base@@Base+0x648>
  404c69:	mov    edx,0x156
  404c6e:	lea    rsi,[rip+0x6a6b]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  404c75:	lea    rdi,[rip+0x6ac6]        # 40b742 <flatcc_builder_padding_base@@Base+0x262>
  404c7c:	call   4031a0 <__assert_fail@plt>
  404c81:	mov    rax,QWORD PTR [rbp-0x28]
  404c85:	mov    eax,DWORD PTR [rax+0xe4]
  404c8b:	mov    edx,eax
  404c8d:	mov    rax,QWORD PTR [rbp-0x28]
  404c91:	mov    r8d,0x0
  404c97:	mov    ecx,0x10
  404c9c:	mov    esi,0x6
  404ca1:	mov    rdi,rax
  404ca4:	call   404a9b <flatcc_builder_default_alloc@@Base+0x516>
  404ca9:	test   rax,rax
  404cac:	jne    404cb8 <flatcc_builder_default_alloc@@Base+0x733>
  404cae:	mov    eax,0xffffffff
  404cb3:	jmp    404d59 <flatcc_builder_default_alloc@@Base+0x7d4>
  404cb8:	mov    rax,QWORD PTR [rbp-0x28]
  404cbc:	mov    DWORD PTR [rax+0xe4],0x10
  404cc6:	mov    QWORD PTR [rbp-0x18],0x100
  404cce:	mov    rax,QWORD PTR [rbp-0x28]
  404cd2:	mov    rax,QWORD PTR [rax+0x50]
  404cd6:	mov    rdx,QWORD PTR [rbp-0x28]
  404cda:	mov    rdi,QWORD PTR [rdx+0x40]
  404cde:	mov    rdx,QWORD PTR [rbp-0x18]
  404ce2:	mov    rsi,QWORD PTR [rbp-0x8]
  404ce6:	mov    r8d,0x5
  404cec:	mov    ecx,0x1
  404cf1:	call   rax
  404cf3:	test   eax,eax
  404cf5:	je     404d02 <flatcc_builder_default_alloc@@Base+0x77d>
  404cf7:	mov    eax,0xffffffff
  404cfc:	jmp    404d59 <flatcc_builder_default_alloc@@Base+0x7d4>
  404cfe:	shl    QWORD PTR [rbp-0x18],1
  404d02:	mov    rax,QWORD PTR [rbp-0x18]
  404d06:	lea    rdx,[rax+rax*1]
  404d0a:	mov    rax,QWORD PTR [rbp-0x8]
  404d0e:	mov    rax,QWORD PTR [rax+0x8]
  404d12:	cmp    rdx,rax
  404d15:	jbe    404cfe <flatcc_builder_default_alloc@@Base+0x779>
  404d17:	mov    rax,QWORD PTR [rbp-0x18]
  404d1b:	shr    rax,0x2
  404d1f:	mov    QWORD PTR [rbp-0x18],rax
  404d23:	mov    QWORD PTR [rbp-0x10],0x0
  404d2b:	jmp    404d31 <flatcc_builder_default_alloc@@Base+0x7ac>
  404d2d:	inc    QWORD PTR [rbp-0x10]
  404d31:	mov    rax,QWORD PTR [rbp-0x10]
  404d35:	mov    edx,0x1
  404d3a:	shlx   rax,rdx,rax
  404d3f:	cmp    QWORD PTR [rbp-0x18],rax
  404d43:	ja     404d2d <flatcc_builder_default_alloc@@Base+0x7a8>
  404d45:	mov    rax,QWORD PTR [rbp-0x28]
  404d49:	mov    rdx,QWORD PTR [rbp-0x10]
  404d4d:	mov    QWORD PTR [rax+0xd8],rdx
  404d54:	mov    eax,0x0
  404d59:	leave  
  404d5a:	ret    
  404d5b:	push   rbp
  404d5c:	mov    rbp,rsp
  404d5f:	sub    rsp,0x20
  404d63:	mov    QWORD PTR [rbp-0x18],rdi
  404d67:	mov    DWORD PTR [rbp-0x1c],esi
  404d6a:	mov    rax,QWORD PTR [rbp-0x18]
  404d6e:	mov    rax,QWORD PTR [rax+0xd8]
  404d75:	test   rax,rax
  404d78:	jne    404d91 <flatcc_builder_default_alloc@@Base+0x80c>
  404d7a:	mov    rax,QWORD PTR [rbp-0x18]
  404d7e:	mov    rdi,rax
  404d81:	call   404c34 <flatcc_builder_default_alloc@@Base+0x6af>
  404d86:	test   eax,eax
  404d88:	je     404d91 <flatcc_builder_default_alloc@@Base+0x80c>
  404d8a:	mov    eax,0x0
  404d8f:	jmp    404dcd <flatcc_builder_default_alloc@@Base+0x848>
  404d91:	mov    rax,QWORD PTR [rbp-0x18]
  404d95:	mov    rax,QWORD PTR [rax+0xa8]
  404d9c:	mov    QWORD PTR [rbp-0x8],rax
  404da0:	mov    rax,QWORD PTR [rbp-0x18]
  404da4:	mov    rax,QWORD PTR [rax+0xd8]
  404dab:	mov    edx,0x20
  404db0:	sub    edx,eax
  404db2:	mov    eax,edx
  404db4:	mov    edx,DWORD PTR [rbp-0x1c]
  404db7:	shrx   eax,edx,eax
  404dbc:	mov    eax,eax
  404dbe:	lea    rdx,[rax*4+0x0]
  404dc6:	mov    rax,QWORD PTR [rbp-0x8]
  404dca:	add    rax,rdx
  404dcd:	leave  
  404dce:	ret    

0000000000404dcf <flatcc_builder_flush_vtable_cache@@Base>:
  404dcf:	endbr64 
  404dd3:	push   rbp
  404dd4:	mov    rbp,rsp
  404dd7:	sub    rsp,0x20
  404ddb:	mov    QWORD PTR [rbp-0x18],rdi
  404ddf:	mov    rax,QWORD PTR [rbp-0x18]
  404de3:	add    rax,0x58
  404de7:	add    rax,0x50
  404deb:	mov    QWORD PTR [rbp-0x8],rax
  404def:	mov    rax,QWORD PTR [rbp-0x18]
  404df3:	mov    rax,QWORD PTR [rax+0xd8]
  404dfa:	test   rax,rax
  404dfd:	je     404e39 <flatcc_builder_flush_vtable_cache@@Base+0x6a>
  404dff:	mov    rax,QWORD PTR [rbp-0x8]
  404e03:	mov    rdx,QWORD PTR [rax+0x8]
  404e07:	mov    rax,QWORD PTR [rbp-0x8]
  404e0b:	mov    rax,QWORD PTR [rax]
  404e0e:	mov    esi,0x0
  404e13:	mov    rdi,rax
  404e16:	call   4031b0 <memset@plt>
  404e1b:	mov    rax,QWORD PTR [rbp-0x18]
  404e1f:	mov    DWORD PTR [rax+0xe4],0x10
  404e29:	mov    rax,QWORD PTR [rbp-0x18]
  404e2d:	mov    DWORD PTR [rax+0xe0],0x0
  404e37:	jmp    404e3a <flatcc_builder_flush_vtable_cache@@Base+0x6b>
  404e39:	nop
  404e3a:	leave  
  404e3b:	ret    

0000000000404e3c <flatcc_builder_custom_init@@Base>:
  404e3c:	endbr64 
  404e40:	push   rbp
  404e41:	mov    rbp,rsp
  404e44:	sub    rsp,0x30
  404e48:	mov    QWORD PTR [rbp-0x8],rdi
  404e4c:	mov    QWORD PTR [rbp-0x10],rsi
  404e50:	mov    QWORD PTR [rbp-0x18],rdx
  404e54:	mov    QWORD PTR [rbp-0x20],rcx
  404e58:	mov    QWORD PTR [rbp-0x28],r8
  404e5c:	mov    rax,QWORD PTR [rbp-0x8]
  404e60:	mov    edx,0x188
  404e65:	mov    esi,0x0
  404e6a:	mov    rdi,rax
  404e6d:	call   4031b0 <memset@plt>
  404e72:	cmp    QWORD PTR [rbp-0x10],0x0
  404e77:	jne    404ea0 <flatcc_builder_custom_init@@Base+0x64>
  404e79:	mov    rax,QWORD PTR [rbp-0x8]
  404e7d:	mov    DWORD PTR [rax+0x128],0x1
  404e87:	mov    rax,0x40a3d9
  404e8e:	mov    QWORD PTR [rbp-0x10],rax
  404e92:	mov    rax,QWORD PTR [rbp-0x8]
  404e96:	add    rax,0x130
  404e9c:	mov    QWORD PTR [rbp-0x18],rax
  404ea0:	cmp    QWORD PTR [rbp-0x20],0x0
  404ea5:	jne    404eb2 <flatcc_builder_custom_init@@Base+0x76>
  404ea7:	mov    rax,0x404585
  404eae:	mov    QWORD PTR [rbp-0x20],rax
  404eb2:	mov    rax,QWORD PTR [rbp-0x8]
  404eb6:	mov    rdx,QWORD PTR [rbp-0x28]
  404eba:	mov    QWORD PTR [rax+0x40],rdx
  404ebe:	mov    rax,QWORD PTR [rbp-0x8]
  404ec2:	mov    rdx,QWORD PTR [rbp-0x20]
  404ec6:	mov    QWORD PTR [rax+0x50],rdx
  404eca:	mov    rax,QWORD PTR [rbp-0x8]
  404ece:	mov    rdx,QWORD PTR [rbp-0x18]
  404ed2:	mov    QWORD PTR [rax+0x38],rdx
  404ed6:	mov    rax,QWORD PTR [rbp-0x8]
  404eda:	mov    rdx,QWORD PTR [rbp-0x10]
  404ede:	mov    QWORD PTR [rax+0x48],rdx
  404ee2:	mov    eax,0x0
  404ee7:	leave  
  404ee8:	ret    

0000000000404ee9 <flatcc_builder_init@@Base>:
  404ee9:	endbr64 
  404eed:	push   rbp
  404eee:	mov    rbp,rsp
  404ef1:	sub    rsp,0x10
  404ef5:	mov    QWORD PTR [rbp-0x8],rdi
  404ef9:	mov    rax,QWORD PTR [rbp-0x8]
  404efd:	mov    r8d,0x0
  404f03:	mov    ecx,0x0
  404f08:	mov    edx,0x0
  404f0d:	mov    esi,0x0
  404f12:	mov    rdi,rax
  404f15:	call   404e3c <flatcc_builder_custom_init@@Base>
  404f1a:	leave  
  404f1b:	ret    

0000000000404f1c <flatcc_builder_custom_reset@@Base>:
  404f1c:	endbr64 
  404f20:	push   rbp
  404f21:	mov    rbp,rsp
  404f24:	sub    rsp,0x20
  404f28:	mov    QWORD PTR [rbp-0x18],rdi
  404f2c:	mov    DWORD PTR [rbp-0x1c],esi
  404f2f:	mov    DWORD PTR [rbp-0x20],edx
  404f32:	mov    DWORD PTR [rbp-0xc],0x0
  404f39:	jmp    404fef <flatcc_builder_custom_reset@@Base+0xd3>
  404f3e:	mov    rax,QWORD PTR [rbp-0x18]
  404f42:	lea    rdx,[rax+0x58]
  404f46:	mov    eax,DWORD PTR [rbp-0xc]
  404f49:	cdqe   
  404f4b:	shl    rax,0x4
  404f4f:	add    rax,rdx
  404f52:	mov    QWORD PTR [rbp-0x8],rax
  404f56:	mov    rax,QWORD PTR [rbp-0x8]
  404f5a:	mov    rax,QWORD PTR [rax]
  404f5d:	test   rax,rax
  404f60:	je     404fc0 <flatcc_builder_custom_reset@@Base+0xa4>
  404f62:	cmp    DWORD PTR [rbp-0xc],0x5
  404f66:	je     404fa2 <flatcc_builder_custom_reset@@Base+0x86>
  404f68:	cmp    DWORD PTR [rbp-0x20],0x0
  404f6c:	je     404fa2 <flatcc_builder_custom_reset@@Base+0x86>
  404f6e:	mov    rax,QWORD PTR [rbp-0x18]
  404f72:	mov    rax,QWORD PTR [rax+0x50]
  404f76:	mov    rdx,QWORD PTR [rbp-0x18]
  404f7a:	mov    rdi,QWORD PTR [rdx+0x40]
  404f7e:	mov    edx,DWORD PTR [rbp-0xc]
  404f81:	mov    rsi,QWORD PTR [rbp-0x8]
  404f85:	mov    r8d,edx
  404f88:	mov    ecx,0x1
  404f8d:	mov    edx,0x1
  404f92:	call   rax
  404f94:	test   eax,eax
  404f96:	je     404fa2 <flatcc_builder_custom_reset@@Base+0x86>
  404f98:	mov    eax,0xffffffff
  404f9d:	jmp    40512e <flatcc_builder_custom_reset@@Base+0x212>
  404fa2:	mov    rax,QWORD PTR [rbp-0x8]
  404fa6:	mov    rdx,QWORD PTR [rax+0x8]
  404faa:	mov    rax,QWORD PTR [rbp-0x8]
  404fae:	mov    rax,QWORD PTR [rax]
  404fb1:	mov    esi,0x0
  404fb6:	mov    rdi,rax
  404fb9:	call   4031b0 <memset@plt>
  404fbe:	jmp    404fec <flatcc_builder_custom_reset@@Base+0xd0>
  404fc0:	mov    rax,QWORD PTR [rbp-0x8]
  404fc4:	mov    rax,QWORD PTR [rax+0x8]
  404fc8:	test   rax,rax
  404fcb:	je     404fec <flatcc_builder_custom_reset@@Base+0xd0>
  404fcd:	lea    rcx,[rip+0x6b7c]        # 40bb50 <flatcc_builder_padding_base@@Base+0x670>
  404fd4:	mov    edx,0x1b2
  404fd9:	lea    rsi,[rip+0x6700]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  404fe0:	lea    rdi,[rip+0x676a]        # 40b751 <flatcc_builder_padding_base@@Base+0x271>
  404fe7:	call   4031a0 <__assert_fail@plt>
  404fec:	inc    DWORD PTR [rbp-0xc]
  404fef:	cmp    DWORD PTR [rbp-0xc],0x7
  404ff3:	jle    404f3e <flatcc_builder_custom_reset@@Base+0x22>
  404ff9:	mov    rax,QWORD PTR [rbp-0x18]
  404ffd:	mov    DWORD PTR [rax+0xe0],0x0
  405007:	mov    rax,QWORD PTR [rbp-0x18]
  40500b:	mov    eax,DWORD PTR [rax+0xe4]
  405011:	test   eax,eax
  405013:	je     405023 <flatcc_builder_custom_reset@@Base+0x107>
  405015:	mov    rax,QWORD PTR [rbp-0x18]
  405019:	mov    DWORD PTR [rax+0xe4],0x10
  405023:	mov    rax,QWORD PTR [rbp-0x18]
  405027:	mov    WORD PTR [rax+0xe8],0x0
  405030:	mov    rax,QWORD PTR [rbp-0x18]
  405034:	mov    DWORD PTR [rax+0xf0],0x0
  40503e:	mov    rax,QWORD PTR [rbp-0x18]
  405042:	mov    DWORD PTR [rax+0xf4],0x0
  40504c:	mov    rax,QWORD PTR [rbp-0x18]
  405050:	mov    DWORD PTR [rax+0x104],0x0
  40505a:	mov    rax,QWORD PTR [rbp-0x18]
  40505e:	mov    DWORD PTR [rax+0x108],0x0
  405068:	mov    rax,QWORD PTR [rbp-0x18]
  40506c:	mov    DWORD PTR [rax+0x20],0x0
  405073:	mov    rax,QWORD PTR [rbp-0x18]
  405077:	mov    DWORD PTR [rax+0x24],0x0
  40507e:	mov    rax,QWORD PTR [rbp-0x18]
  405082:	mov    DWORD PTR [rax+0xfc],0x0
  40508c:	mov    rax,QWORD PTR [rbp-0x18]
  405090:	mov    DWORD PTR [rax+0x100],0x0
  40509a:	mov    rax,QWORD PTR [rbp-0x18]
  40509e:	mov    rdx,QWORD PTR [rax+0x68]
  4050a2:	mov    rax,QWORD PTR [rbp-0x18]
  4050a6:	mov    QWORD PTR [rax+0x18],rdx
  4050aa:	mov    rax,QWORD PTR [rbp-0x18]
  4050ae:	mov    rdx,QWORD PTR [rax+0x88]
  4050b5:	mov    rax,QWORD PTR [rbp-0x18]
  4050b9:	mov    QWORD PTR [rax],rdx
  4050bc:	mov    rax,QWORD PTR [rbp-0x18]
  4050c0:	mov    rdx,QWORD PTR [rax+0x58]
  4050c4:	mov    rax,QWORD PTR [rbp-0x18]
  4050c8:	mov    QWORD PTR [rax+0x8],rdx
  4050cc:	mov    rax,QWORD PTR [rbp-0x18]
  4050d0:	mov    QWORD PTR [rax+0x30],0x0
  4050d8:	cmp    DWORD PTR [rbp-0x1c],0x0
  4050dc:	je     405109 <flatcc_builder_custom_reset@@Base+0x1ed>
  4050de:	mov    rax,QWORD PTR [rbp-0x18]
  4050e2:	mov    QWORD PTR [rax+0x118],0x0
  4050ed:	mov    rax,QWORD PTR [rbp-0x18]
  4050f1:	mov    DWORD PTR [rax+0x120],0x0
  4050fb:	mov    rax,QWORD PTR [rbp-0x18]
  4050ff:	mov    DWORD PTR [rax+0x124],0x0
  405109:	mov    rax,QWORD PTR [rbp-0x18]
  40510d:	mov    eax,DWORD PTR [rax+0x128]
  405113:	test   eax,eax
  405115:	je     405129 <flatcc_builder_custom_reset@@Base+0x20d>
  405117:	mov    rax,QWORD PTR [rbp-0x18]
  40511b:	add    rax,0x130
  405121:	mov    rdi,rax
  405124:	call   40a1b4 <flatcc_emitter_reset@@Base>
  405129:	mov    eax,0x0
  40512e:	leave  
  40512f:	ret    

0000000000405130 <flatcc_builder_reset@@Base>:
  405130:	endbr64 
  405134:	push   rbp
  405135:	mov    rbp,rsp
  405138:	sub    rsp,0x10
  40513c:	mov    QWORD PTR [rbp-0x8],rdi
  405140:	mov    rax,QWORD PTR [rbp-0x8]
  405144:	mov    edx,0x0
  405149:	mov    esi,0x0
  40514e:	mov    rdi,rax
  405151:	call   404f1c <flatcc_builder_custom_reset@@Base>
  405156:	leave  
  405157:	ret    

0000000000405158 <flatcc_builder_clear@@Base>:
  405158:	endbr64 
  40515c:	push   rbp
  40515d:	mov    rbp,rsp
  405160:	sub    rsp,0x20
  405164:	mov    QWORD PTR [rbp-0x18],rdi
  405168:	mov    DWORD PTR [rbp-0xc],0x0
  40516f:	jmp    4051b2 <flatcc_builder_clear@@Base+0x5a>
  405171:	mov    rax,QWORD PTR [rbp-0x18]
  405175:	lea    rdx,[rax+0x58]
  405179:	mov    eax,DWORD PTR [rbp-0xc]
  40517c:	cdqe   
  40517e:	shl    rax,0x4
  405182:	add    rax,rdx
  405185:	mov    QWORD PTR [rbp-0x8],rax
  405189:	mov    rax,QWORD PTR [rbp-0x18]
  40518d:	mov    rax,QWORD PTR [rax+0x50]
  405191:	mov    rdx,QWORD PTR [rbp-0x18]
  405195:	mov    rdi,QWORD PTR [rdx+0x40]
  405199:	mov    edx,DWORD PTR [rbp-0xc]
  40519c:	mov    rsi,QWORD PTR [rbp-0x8]
  4051a0:	mov    r8d,edx
  4051a3:	mov    ecx,0x0
  4051a8:	mov    edx,0x0
  4051ad:	call   rax
  4051af:	inc    DWORD PTR [rbp-0xc]
  4051b2:	cmp    DWORD PTR [rbp-0xc],0x7
  4051b6:	jle    405171 <flatcc_builder_clear@@Base+0x19>
  4051b8:	mov    rax,QWORD PTR [rbp-0x18]
  4051bc:	mov    eax,DWORD PTR [rax+0x128]
  4051c2:	test   eax,eax
  4051c4:	je     4051d8 <flatcc_builder_clear@@Base+0x80>
  4051c6:	mov    rax,QWORD PTR [rbp-0x18]
  4051ca:	add    rax,0x130
  4051d0:	mov    rdi,rax
  4051d3:	call   40a346 <flatcc_emitter_clear@@Base>
  4051d8:	mov    rax,QWORD PTR [rbp-0x18]
  4051dc:	mov    edx,0x188
  4051e1:	mov    esi,0x0
  4051e6:	mov    rdi,rax
  4051e9:	call   4031b0 <memset@plt>
  4051ee:	nop
  4051ef:	leave  
  4051f0:	ret    
  4051f1:	push   rbp
  4051f2:	mov    rbp,rsp
  4051f5:	mov    QWORD PTR [rbp-0x8],rdi
  4051f9:	mov    eax,esi
  4051fb:	mov    WORD PTR [rbp-0xc],ax
  4051ff:	mov    rax,QWORD PTR [rbp-0x8]
  405203:	movzx  eax,WORD PTR [rax+0xe8]
  40520a:	cmp    WORD PTR [rbp-0xc],ax
  40520e:	jbe    40521f <flatcc_builder_clear@@Base+0xc7>
  405210:	mov    rdx,QWORD PTR [rbp-0x8]
  405214:	movzx  eax,WORD PTR [rbp-0xc]
  405218:	mov    WORD PTR [rdx+0xe8],ax
  40521f:	nop
  405220:	pop    rbp
  405221:	ret    
  405222:	push   rbp
  405223:	mov    rbp,rsp
  405226:	mov    QWORD PTR [rbp-0x8],rdi
  40522a:	mov    eax,esi
  40522c:	mov    WORD PTR [rbp-0xc],ax
  405230:	mov    rax,QWORD PTR [rbp-0x8]
  405234:	movzx  eax,WORD PTR [rax]
  405237:	cmp    WORD PTR [rbp-0xc],ax
  40523b:	jbe    405248 <flatcc_builder_clear@@Base+0xf0>
  40523d:	mov    rdx,QWORD PTR [rbp-0x8]
  405241:	movzx  eax,WORD PTR [rbp-0xc]
  405245:	mov    WORD PTR [rdx],ax
  405248:	nop
  405249:	pop    rbp
  40524a:	ret    

000000000040524b <flatcc_builder_enter_user_frame_ptr@@Base>:
  40524b:	endbr64 
  40524f:	push   rbp
  405250:	mov    rbp,rsp
  405253:	sub    rsp,0x20
  405257:	mov    QWORD PTR [rbp-0x18],rdi
  40525b:	mov    QWORD PTR [rbp-0x20],rsi
  40525f:	mov    rax,QWORD PTR [rbp-0x20]
  405263:	add    rax,0x7
  405267:	and    rax,0xfffffffffffffff8
  40526b:	add    rax,0x8
  40526f:	mov    QWORD PTR [rbp-0x20],rax
  405273:	mov    rax,QWORD PTR [rbp-0x18]
  405277:	mov    rdx,QWORD PTR [rax+0x180]
  40527e:	mov    rcx,QWORD PTR [rbp-0x20]
  405282:	mov    rax,QWORD PTR [rbp-0x18]
  405286:	mov    r8d,0x0
  40528c:	mov    esi,0x7
  405291:	mov    rdi,rax
  405294:	call   404a9b <flatcc_builder_default_alloc@@Base+0x516>
  405299:	mov    QWORD PTR [rbp-0x8],rax
  40529d:	cmp    QWORD PTR [rbp-0x8],0x0
  4052a2:	jne    4052ab <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
  4052a4:	mov    eax,0x0
  4052a9:	jmp    405315 <flatcc_builder_enter_user_frame_ptr@@Base+0xca>
  4052ab:	mov    rdx,QWORD PTR [rbp-0x20]
  4052af:	mov    rax,QWORD PTR [rbp-0x8]
  4052b3:	mov    esi,0x0
  4052b8:	mov    rdi,rax
  4052bb:	call   4031b0 <memset@plt>
  4052c0:	mov    rax,QWORD PTR [rbp-0x8]
  4052c4:	lea    rdx,[rax+0x8]
  4052c8:	mov    QWORD PTR [rbp-0x8],rdx
  4052cc:	mov    rdx,QWORD PTR [rbp-0x18]
  4052d0:	mov    rdx,QWORD PTR [rdx+0x178]
  4052d7:	mov    QWORD PTR [rax],rdx
  4052da:	mov    rax,QWORD PTR [rbp-0x18]
  4052de:	mov    rax,QWORD PTR [rax+0x180]
  4052e5:	lea    rdx,[rax+0x8]
  4052e9:	mov    rax,QWORD PTR [rbp-0x18]
  4052ed:	mov    QWORD PTR [rax+0x178],rdx
  4052f4:	mov    rax,QWORD PTR [rbp-0x18]
  4052f8:	mov    rdx,QWORD PTR [rax+0x180]
  4052ff:	mov    rax,QWORD PTR [rbp-0x20]
  405303:	add    rdx,rax
  405306:	mov    rax,QWORD PTR [rbp-0x18]
  40530a:	mov    QWORD PTR [rax+0x180],rdx
  405311:	mov    rax,QWORD PTR [rbp-0x8]
  405315:	leave  
  405316:	ret    

0000000000405317 <flatcc_builder_enter_user_frame@@Base>:
  405317:	endbr64 
  40531b:	push   rbp
  40531c:	mov    rbp,rsp
  40531f:	sub    rsp,0x20
  405323:	mov    QWORD PTR [rbp-0x18],rdi
  405327:	mov    QWORD PTR [rbp-0x20],rsi
  40532b:	mov    rax,QWORD PTR [rbp-0x20]
  40532f:	add    rax,0x7
  405333:	and    rax,0xfffffffffffffff8
  405337:	add    rax,0x8
  40533b:	mov    QWORD PTR [rbp-0x20],rax
  40533f:	mov    rax,QWORD PTR [rbp-0x18]
  405343:	mov    rdx,QWORD PTR [rax+0x180]
  40534a:	mov    rcx,QWORD PTR [rbp-0x20]
  40534e:	mov    rax,QWORD PTR [rbp-0x18]
  405352:	mov    r8d,0x0
  405358:	mov    esi,0x7
  40535d:	mov    rdi,rax
  405360:	call   404a9b <flatcc_builder_default_alloc@@Base+0x516>
  405365:	mov    QWORD PTR [rbp-0x8],rax
  405369:	cmp    QWORD PTR [rbp-0x8],0x0
  40536e:	jne    405377 <flatcc_builder_enter_user_frame@@Base+0x60>
  405370:	mov    eax,0x0
  405375:	jmp    4053e8 <flatcc_builder_enter_user_frame@@Base+0xd1>
  405377:	mov    rdx,QWORD PTR [rbp-0x20]
  40537b:	mov    rax,QWORD PTR [rbp-0x8]
  40537f:	mov    esi,0x0
  405384:	mov    rdi,rax
  405387:	call   4031b0 <memset@plt>
  40538c:	mov    rax,QWORD PTR [rbp-0x8]
  405390:	lea    rdx,[rax+0x8]
  405394:	mov    QWORD PTR [rbp-0x8],rdx
  405398:	mov    rdx,QWORD PTR [rbp-0x18]
  40539c:	mov    rdx,QWORD PTR [rdx+0x178]
  4053a3:	mov    QWORD PTR [rax],rdx
  4053a6:	mov    rax,QWORD PTR [rbp-0x18]
  4053aa:	mov    rax,QWORD PTR [rax+0x180]
  4053b1:	lea    rdx,[rax+0x8]
  4053b5:	mov    rax,QWORD PTR [rbp-0x18]
  4053b9:	mov    QWORD PTR [rax+0x178],rdx
  4053c0:	mov    rax,QWORD PTR [rbp-0x18]
  4053c4:	mov    rdx,QWORD PTR [rax+0x180]
  4053cb:	mov    rax,QWORD PTR [rbp-0x20]
  4053cf:	add    rdx,rax
  4053d2:	mov    rax,QWORD PTR [rbp-0x18]
  4053d6:	mov    QWORD PTR [rax+0x180],rdx
  4053dd:	mov    rax,QWORD PTR [rbp-0x18]
  4053e1:	mov    rax,QWORD PTR [rax+0x178]
  4053e8:	leave  
  4053e9:	ret    

00000000004053ea <flatcc_builder_exit_user_frame@@Base>:
  4053ea:	endbr64 
  4053ee:	push   rbp
  4053ef:	mov    rbp,rsp
  4053f2:	sub    rsp,0x20
  4053f6:	mov    QWORD PTR [rbp-0x18],rdi
  4053fa:	mov    rax,QWORD PTR [rbp-0x18]
  4053fe:	mov    rax,QWORD PTR [rax+0x178]
  405405:	test   rax,rax
  405408:	jne    405429 <flatcc_builder_exit_user_frame@@Base+0x3f>
  40540a:	lea    rcx,[rip+0x675f]        # 40bb70 <flatcc_builder_padding_base@@Base+0x690>
  405411:	mov    edx,0x21e
  405416:	lea    rsi,[rip+0x62c3]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40541d:	lea    rdi,[rip+0x633f]        # 40b763 <flatcc_builder_padding_base@@Base+0x283>
  405424:	call   4031a0 <__assert_fail@plt>
  405429:	mov    rax,QWORD PTR [rbp-0x18]
  40542d:	mov    rdx,QWORD PTR [rax+0xc8]
  405434:	mov    rax,QWORD PTR [rbp-0x18]
  405438:	mov    rax,QWORD PTR [rax+0x178]
  40543f:	mov    eax,eax
  405441:	add    rax,rdx
  405444:	mov    QWORD PTR [rbp-0x8],rax
  405448:	mov    rax,QWORD PTR [rbp-0x18]
  40544c:	mov    rax,QWORD PTR [rax+0x178]
  405453:	lea    rdx,[rax-0x8]
  405457:	mov    rax,QWORD PTR [rbp-0x18]
  40545b:	mov    QWORD PTR [rax+0x180],rdx
  405462:	mov    rax,QWORD PTR [rbp-0x8]
  405466:	mov    rdx,QWORD PTR [rax-0x8]
  40546a:	mov    rax,QWORD PTR [rbp-0x18]
  40546e:	mov    QWORD PTR [rax+0x178],rdx
  405475:	mov    rax,QWORD PTR [rbp-0x18]
  405479:	mov    rax,QWORD PTR [rax+0x178]
  405480:	leave  
  405481:	ret    

0000000000405482 <flatcc_builder_exit_user_frame_at@@Base>:
  405482:	endbr64 
  405486:	push   rbp
  405487:	mov    rbp,rsp
  40548a:	sub    rsp,0x10
  40548e:	mov    QWORD PTR [rbp-0x8],rdi
  405492:	mov    QWORD PTR [rbp-0x10],rsi
  405496:	mov    rax,QWORD PTR [rbp-0x8]
  40549a:	mov    rax,QWORD PTR [rax+0x178]
  4054a1:	cmp    QWORD PTR [rbp-0x10],rax
  4054a5:	jbe    4054c6 <flatcc_builder_exit_user_frame_at@@Base+0x44>
  4054a7:	lea    rcx,[rip+0x66f2]        # 40bba0 <flatcc_builder_padding_base@@Base+0x6c0>
  4054ae:	mov    edx,0x227
  4054b3:	lea    rsi,[rip+0x6226]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4054ba:	lea    rdi,[rip+0x62bf]        # 40b780 <flatcc_builder_padding_base@@Base+0x2a0>
  4054c1:	call   4031a0 <__assert_fail@plt>
  4054c6:	mov    rax,QWORD PTR [rbp-0x8]
  4054ca:	mov    rdx,QWORD PTR [rbp-0x10]
  4054ce:	mov    QWORD PTR [rax+0x178],rdx
  4054d5:	mov    rax,QWORD PTR [rbp-0x8]
  4054d9:	mov    rdi,rax
  4054dc:	call   4053ea <flatcc_builder_exit_user_frame@@Base>
  4054e1:	leave  
  4054e2:	ret    

00000000004054e3 <flatcc_builder_get_current_user_frame@@Base>:
  4054e3:	endbr64 
  4054e7:	push   rbp
  4054e8:	mov    rbp,rsp
  4054eb:	mov    QWORD PTR [rbp-0x8],rdi
  4054ef:	mov    rax,QWORD PTR [rbp-0x8]
  4054f3:	mov    rax,QWORD PTR [rax+0x178]
  4054fa:	pop    rbp
  4054fb:	ret    

00000000004054fc <flatcc_builder_get_user_frame_ptr@@Base>:
  4054fc:	endbr64 
  405500:	push   rbp
  405501:	mov    rbp,rsp
  405504:	mov    QWORD PTR [rbp-0x8],rdi
  405508:	mov    QWORD PTR [rbp-0x10],rsi
  40550c:	mov    rax,QWORD PTR [rbp-0x8]
  405510:	mov    rax,QWORD PTR [rax+0xc8]
  405517:	mov    rdx,QWORD PTR [rbp-0x10]
  40551b:	mov    edx,edx
  40551d:	add    rax,rdx
  405520:	pop    rbp
  405521:	ret    
  405522:	endbr64 
  405526:	push   rbp
  405527:	mov    rbp,rsp
  40552a:	sub    rsp,0x10
  40552e:	mov    QWORD PTR [rbp-0x8],rdi
  405532:	mov    eax,esi
  405534:	mov    WORD PTR [rbp-0xc],ax
  405538:	mov    rax,QWORD PTR [rbp-0x8]
  40553c:	mov    eax,DWORD PTR [rax+0x104]
  405542:	lea    edx,[rax+0x1]
  405545:	mov    rax,QWORD PTR [rbp-0x8]
  405549:	mov    DWORD PTR [rax+0x104],edx
  40554f:	mov    rax,QWORD PTR [rbp-0x8]
  405553:	mov    edx,DWORD PTR [rax+0x104]
  405559:	mov    rax,QWORD PTR [rbp-0x8]
  40555d:	mov    eax,DWORD PTR [rax+0x108]
  405563:	cmp    edx,eax
  405565:	jle    405660 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
  40556b:	mov    rax,QWORD PTR [rbp-0x8]
  40556f:	mov    eax,DWORD PTR [rax+0x120]
  405575:	test   eax,eax
  405577:	jle    40559b <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  405579:	mov    rax,QWORD PTR [rbp-0x8]
  40557d:	mov    edx,DWORD PTR [rax+0x104]
  405583:	mov    rax,QWORD PTR [rbp-0x8]
  405587:	mov    eax,DWORD PTR [rax+0x120]
  40558d:	cmp    edx,eax
  40558f:	jle    40559b <flatcc_builder_get_user_frame_ptr@@Base+0x9f>
  405591:	mov    eax,0xffffffff
  405596:	jmp    4056fb <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  40559b:	mov    rax,QWORD PTR [rbp-0x8]
  40559f:	mov    eax,DWORD PTR [rax+0x104]
  4055a5:	dec    eax
  4055a7:	movsxd rdx,eax
  4055aa:	mov    rax,rdx
  4055ad:	shl    rax,0x3
  4055b1:	add    rax,rdx
  4055b4:	shl    rax,0x2
  4055b8:	mov    rdx,rax
  4055bb:	mov    rax,QWORD PTR [rbp-0x8]
  4055bf:	mov    r8d,0x0
  4055c5:	mov    ecx,0x24
  4055ca:	mov    esi,0x4
  4055cf:	mov    rdi,rax
  4055d2:	call   404a9b <flatcc_builder_default_alloc@@Base+0x516>
  4055d7:	mov    rdx,rax
  4055da:	mov    rax,QWORD PTR [rbp-0x8]
  4055de:	mov    QWORD PTR [rax+0x30],rdx
  4055e2:	mov    rax,QWORD PTR [rbp-0x8]
  4055e6:	mov    rax,QWORD PTR [rax+0x30]
  4055ea:	test   rax,rax
  4055ed:	jne    4055f9 <flatcc_builder_get_user_frame_ptr@@Base+0xfd>
  4055ef:	mov    eax,0xffffffff
  4055f4:	jmp    4056fb <flatcc_builder_get_user_frame_ptr@@Base+0x1ff>
  4055f9:	mov    rax,QWORD PTR [rbp-0x8]
  4055fd:	mov    rax,QWORD PTR [rax+0xa0]
  405604:	movabs rdx,0xe38e38e38e38e38f
  40560e:	mul    rdx
  405611:	mov    rax,rdx
  405614:	shr    rax,0x5
  405618:	mov    edx,eax
  40561a:	mov    rax,QWORD PTR [rbp-0x8]
  40561e:	mov    DWORD PTR [rax+0x108],edx
  405624:	mov    rax,QWORD PTR [rbp-0x8]
  405628:	mov    eax,DWORD PTR [rax+0x120]
  40562e:	test   eax,eax
  405630:	jle    405674 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  405632:	mov    rax,QWORD PTR [rbp-0x8]
  405636:	mov    edx,DWORD PTR [rax+0x120]
  40563c:	mov    rax,QWORD PTR [rbp-0x8]
  405640:	mov    eax,DWORD PTR [rax+0x108]
  405646:	cmp    edx,eax
  405648:	jge    405674 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  40564a:	mov    rax,QWORD PTR [rbp-0x8]
  40564e:	mov    edx,DWORD PTR [rax+0x120]
  405654:	mov    rax,QWORD PTR [rbp-0x8]
  405658:	mov    DWORD PTR [rax+0x108],edx
  40565e:	jmp    405674 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
  405660:	mov    rax,QWORD PTR [rbp-0x8]
  405664:	mov    rax,QWORD PTR [rax+0x30]
  405668:	lea    rdx,[rax+0x24]
  40566c:	mov    rax,QWORD PTR [rbp-0x8]
  405670:	mov    QWORD PTR [rax+0x30],rdx
  405674:	mov    rax,QWORD PTR [rbp-0x8]
  405678:	mov    rax,QWORD PTR [rax+0x30]
  40567c:	mov    rdx,QWORD PTR [rbp-0x8]
  405680:	mov    edx,DWORD PTR [rdx+0x20]
  405683:	mov    DWORD PTR [rax+0x8],edx
  405686:	mov    rax,QWORD PTR [rbp-0x8]
  40568a:	mov    rdx,QWORD PTR [rax+0x30]
  40568e:	mov    rax,QWORD PTR [rbp-0x8]
  405692:	movzx  eax,WORD PTR [rax+0xea]
  405699:	mov    WORD PTR [rdx+0xc],ax
  40569d:	mov    rdx,QWORD PTR [rbp-0x8]
  4056a1:	movzx  eax,WORD PTR [rbp-0xc]
  4056a5:	mov    WORD PTR [rdx+0xea],ax
  4056ac:	mov    rax,QWORD PTR [rbp-0x8]
  4056b0:	mov    rax,QWORD PTR [rax+0x30]
  4056b4:	mov    rdx,QWORD PTR [rbp-0x8]
  4056b8:	mov    edx,DWORD PTR [rdx+0x28]
  4056bb:	mov    DWORD PTR [rax],edx
  4056bd:	mov    rax,QWORD PTR [rbp-0x8]
  4056c1:	mov    rax,QWORD PTR [rax+0x30]
  4056c5:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4056cc:	mov    rax,QWORD PTR [rbp-0x8]
  4056d0:	mov    edx,DWORD PTR [rax+0x28]
  4056d3:	mov    rax,QWORD PTR [rbp-0x8]
  4056d7:	mov    eax,DWORD PTR [rax+0x20]
  4056da:	add    eax,edx
  4056dc:	add    eax,0x7
  4056df:	and    eax,0xfffffff8
  4056e2:	mov    edx,eax
  4056e4:	mov    rax,QWORD PTR [rbp-0x8]
  4056e8:	mov    DWORD PTR [rax+0x28],edx
  4056eb:	mov    rax,QWORD PTR [rbp-0x8]
  4056ef:	mov    DWORD PTR [rax+0x20],0x0
  4056f6:	mov    eax,0x0
  4056fb:	leave  
  4056fc:	ret    
  4056fd:	push   rbp
  4056fe:	mov    rbp,rsp
  405701:	sub    rsp,0x10
  405705:	mov    QWORD PTR [rbp-0x8],rdi
  405709:	mov    rax,QWORD PTR [rbp-0x8]
  40570d:	mov    eax,DWORD PTR [rax+0x20]
  405710:	mov    edx,eax
  405712:	mov    rax,QWORD PTR [rbp-0x8]
  405716:	mov    rax,QWORD PTR [rax+0x18]
  40571a:	mov    esi,0x0
  40571f:	mov    rdi,rax
  405722:	call   4031b0 <memset@plt>
  405727:	mov    rax,QWORD PTR [rbp-0x8]
  40572b:	mov    rax,QWORD PTR [rax+0x30]
  40572f:	mov    edx,DWORD PTR [rax+0x8]
  405732:	mov    rax,QWORD PTR [rbp-0x8]
  405736:	mov    DWORD PTR [rax+0x20],edx
  405739:	mov    rax,QWORD PTR [rbp-0x8]
  40573d:	mov    rax,QWORD PTR [rax+0x30]
  405741:	mov    edx,DWORD PTR [rax]
  405743:	mov    rax,QWORD PTR [rbp-0x8]
  405747:	mov    DWORD PTR [rax+0x28],edx
  40574a:	mov    rax,QWORD PTR [rbp-0x8]
  40574e:	mov    rax,QWORD PTR [rax+0x30]
  405752:	mov    edx,DWORD PTR [rax+0x4]
  405755:	mov    rax,QWORD PTR [rbp-0x8]
  405759:	mov    esi,edx
  40575b:	mov    rdi,rax
  40575e:	call   4046f8 <flatcc_builder_default_alloc@@Base+0x173>
  405763:	mov    rax,QWORD PTR [rbp-0x8]
  405767:	movzx  eax,WORD PTR [rax+0xea]
  40576e:	movzx  edx,ax
  405771:	mov    rax,QWORD PTR [rbp-0x8]
  405775:	mov    esi,edx
  405777:	mov    rdi,rax
  40577a:	call   4051f1 <flatcc_builder_clear@@Base+0x99>
  40577f:	mov    rax,QWORD PTR [rbp-0x8]
  405783:	mov    rax,QWORD PTR [rax+0x30]
  405787:	movzx  eax,WORD PTR [rax+0xc]
  40578b:	mov    rdx,QWORD PTR [rbp-0x8]
  40578f:	mov    WORD PTR [rdx+0xea],ax
  405796:	mov    rax,QWORD PTR [rbp-0x8]
  40579a:	mov    rax,QWORD PTR [rax+0x30]
  40579e:	lea    rdx,[rax-0x24]
  4057a2:	mov    rax,QWORD PTR [rbp-0x8]
  4057a6:	mov    QWORD PTR [rax+0x30],rdx
  4057aa:	mov    rax,QWORD PTR [rbp-0x8]
  4057ae:	mov    eax,DWORD PTR [rax+0x104]
  4057b4:	lea    edx,[rax-0x1]
  4057b7:	mov    rax,QWORD PTR [rbp-0x8]
  4057bb:	mov    DWORD PTR [rax+0x104],edx
  4057c1:	nop
  4057c2:	leave  
  4057c3:	ret    
  4057c4:	push   rbp
  4057c5:	mov    rbp,rsp
  4057c8:	mov    QWORD PTR [rbp-0x8],rdi
  4057cc:	mov    DWORD PTR [rbp-0xc],esi
  4057cf:	mov    eax,edx
  4057d1:	mov    WORD PTR [rbp-0x10],ax
  4057d5:	mov    rax,QWORD PTR [rbp-0x8]
  4057d9:	mov    eax,DWORD PTR [rax+0xf0]
  4057df:	sub    eax,DWORD PTR [rbp-0xc]
  4057e2:	movzx  edx,WORD PTR [rbp-0x10]
  4057e6:	dec    edx
  4057e8:	and    eax,edx
  4057ea:	pop    rbp
  4057eb:	ret    
  4057ec:	push   rbp
  4057ed:	mov    rbp,rsp
  4057f0:	mov    QWORD PTR [rbp-0x8],rdi
  4057f4:	mov    eax,esi
  4057f6:	mov    WORD PTR [rbp-0xc],ax
  4057fa:	mov    rax,QWORD PTR [rbp-0x8]
  4057fe:	mov    eax,DWORD PTR [rax+0xf4]
  405804:	movzx  edx,WORD PTR [rbp-0xc]
  405808:	dec    edx
  40580a:	and    eax,edx
  40580c:	pop    rbp
  40580d:	ret    
  40580e:	push   rbp
  40580f:	mov    rbp,rsp
  405812:	sub    rsp,0x20
  405816:	mov    QWORD PTR [rbp-0x18],rdi
  40581a:	mov    QWORD PTR [rbp-0x20],rsi
  40581e:	mov    rax,QWORD PTR [rbp-0x18]
  405822:	mov    edx,DWORD PTR [rax+0xf0]
  405828:	mov    rax,QWORD PTR [rbp-0x20]
  40582c:	mov    rax,QWORD PTR [rax]
  40582f:	sub    edx,eax
  405831:	mov    eax,edx
  405833:	mov    DWORD PTR [rbp-0x4],eax
  405836:	mov    rax,QWORD PTR [rbp-0x20]
  40583a:	mov    rax,QWORD PTR [rax]
  40583d:	cmp    rax,0x10
  405841:	jbe    405858 <flatcc_builder_get_user_frame_ptr@@Base+0x35c>
  405843:	mov    rax,QWORD PTR [rbp-0x20]
  405847:	mov    rax,QWORD PTR [rax]
  40584a:	lea    rdx,[rax-0x10]
  40584e:	mov    eax,0xffffffff
  405853:	cmp    rdx,rax
  405856:	ja     405867 <flatcc_builder_get_user_frame_ptr@@Base+0x36b>
  405858:	mov    rax,QWORD PTR [rbp-0x18]
  40585c:	mov    eax,DWORD PTR [rax+0xf0]
  405862:	cmp    DWORD PTR [rbp-0x4],eax
  405865:	jl     405886 <flatcc_builder_get_user_frame_ptr@@Base+0x38a>
  405867:	lea    rcx,[rip+0x637a]        # 40bbe8 <flatcc_builder_padding_base@@Base+0x708>
  40586e:	mov    edx,0x287
  405873:	lea    rsi,[rip+0x5e66]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40587a:	lea    rdi,[rip+0x5ebf]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  405881:	call   4031a0 <__assert_fail@plt>
  405886:	mov    rax,QWORD PTR [rbp-0x18]
  40588a:	mov    rax,QWORD PTR [rax+0x48]
  40588e:	mov    rdx,QWORD PTR [rbp-0x20]
  405892:	mov    r8,QWORD PTR [rdx]
  405895:	mov    rdx,QWORD PTR [rbp-0x20]
  405899:	mov    edx,DWORD PTR [rdx+0x8]
  40589c:	mov    rcx,QWORD PTR [rbp-0x20]
  4058a0:	lea    rsi,[rcx+0x10]
  4058a4:	mov    rcx,QWORD PTR [rbp-0x18]
  4058a8:	mov    rdi,QWORD PTR [rcx+0x38]
  4058ac:	mov    ecx,DWORD PTR [rbp-0x4]
  4058af:	call   rax
  4058b1:	test   eax,eax
  4058b3:	je     4058d4 <flatcc_builder_get_user_frame_ptr@@Base+0x3d8>
  4058b5:	lea    rcx,[rip+0x632c]        # 40bbe8 <flatcc_builder_padding_base@@Base+0x708>
  4058bc:	mov    edx,0x28b
  4058c1:	lea    rsi,[rip+0x5e18]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4058c8:	lea    rdi,[rip+0x5e71]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4058cf:	call   4031a0 <__assert_fail@plt>
  4058d4:	mov    rax,QWORD PTR [rbp-0x18]
  4058d8:	mov    edx,DWORD PTR [rbp-0x4]
  4058db:	mov    DWORD PTR [rax+0xf0],edx
  4058e1:	mov    rax,QWORD PTR [rbp-0x18]
  4058e5:	mov    eax,DWORD PTR [rax+0xf0]
  4058eb:	leave  
  4058ec:	ret    
  4058ed:	push   rbp
  4058ee:	mov    rbp,rsp
  4058f1:	sub    rsp,0x20
  4058f5:	mov    QWORD PTR [rbp-0x18],rdi
  4058f9:	mov    QWORD PTR [rbp-0x20],rsi
  4058fd:	mov    rax,QWORD PTR [rbp-0x18]
  405901:	mov    eax,DWORD PTR [rax+0xf4]
  405907:	mov    DWORD PTR [rbp-0x4],eax
  40590a:	mov    rax,QWORD PTR [rbp-0x20]
  40590e:	mov    rax,QWORD PTR [rax]
  405911:	mov    edx,eax
  405913:	mov    eax,DWORD PTR [rbp-0x4]
  405916:	add    edx,eax
  405918:	mov    rax,QWORD PTR [rbp-0x18]
  40591c:	mov    DWORD PTR [rax+0xf4],edx
  405922:	mov    rax,QWORD PTR [rbp-0x18]
  405926:	mov    eax,DWORD PTR [rax+0xf4]
  40592c:	cmp    DWORD PTR [rbp-0x4],eax
  40592f:	jle    405950 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
  405931:	lea    rcx,[rip+0x62a0]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x6f8>
  405938:	mov    edx,0x2a1
  40593d:	lea    rsi,[rip+0x5d9c]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  405944:	lea    rdi,[rip+0x5df5]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  40594b:	call   4031a0 <__assert_fail@plt>
  405950:	mov    rax,QWORD PTR [rbp-0x18]
  405954:	mov    rax,QWORD PTR [rax+0x48]
  405958:	mov    rdx,QWORD PTR [rbp-0x20]
  40595c:	mov    r8,QWORD PTR [rdx]
  40595f:	mov    rdx,QWORD PTR [rbp-0x20]
  405963:	mov    edx,DWORD PTR [rdx+0x8]
  405966:	mov    rcx,QWORD PTR [rbp-0x20]
  40596a:	lea    rsi,[rcx+0x10]
  40596e:	mov    rcx,QWORD PTR [rbp-0x18]
  405972:	mov    rdi,QWORD PTR [rcx+0x38]
  405976:	mov    ecx,DWORD PTR [rbp-0x4]
  405979:	call   rax
  40597b:	test   eax,eax
  40597d:	je     40599e <flatcc_builder_get_user_frame_ptr@@Base+0x4a2>
  40597f:	lea    rcx,[rip+0x6252]        # 40bbd8 <flatcc_builder_padding_base@@Base+0x6f8>
  405986:	mov    edx,0x2a5
  40598b:	lea    rsi,[rip+0x5d4e]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  405992:	lea    rdi,[rip+0x5da7]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  405999:	call   4031a0 <__assert_fail@plt>
  40599e:	mov    eax,DWORD PTR [rbp-0x4]
  4059a1:	inc    eax
  4059a3:	leave  
  4059a4:	ret    
  4059a5:	endbr64 
  4059a9:	push   rbp
  4059aa:	mov    rbp,rsp
  4059ad:	sub    rsp,0xd0
  4059b4:	mov    QWORD PTR [rbp-0xb8],rdi
  4059bb:	mov    QWORD PTR [rbp-0xc0],rsi
  4059c2:	mov    eax,edx
  4059c4:	mov    DWORD PTR [rbp-0xc8],ecx
  4059ca:	mov    WORD PTR [rbp-0xc4],ax
  4059d1:	mov    rax,QWORD PTR fs:0x28
  4059da:	mov    QWORD PTR [rbp-0x8],rax
  4059de:	xor    eax,eax
  4059e0:	cmp    WORD PTR [rbp-0xc4],0x0
  4059e8:	jne    405a14 <flatcc_builder_get_user_frame_ptr@@Base+0x518>
  4059ea:	mov    rax,QWORD PTR [rbp-0xb8]
  4059f1:	movzx  eax,WORD PTR [rax+0xec]
  4059f8:	test   ax,ax
  4059fb:	je     405a0d <flatcc_builder_get_user_frame_ptr@@Base+0x511>
  4059fd:	mov    rax,QWORD PTR [rbp-0xb8]
  405a04:	movzx  eax,WORD PTR [rax+0xec]
  405a0b:	jmp    405a1b <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  405a0d:	mov    eax,0x1
  405a12:	jmp    405a1b <flatcc_builder_get_user_frame_ptr@@Base+0x51f>
  405a14:	movzx  eax,WORD PTR [rbp-0xc4]
  405a1b:	mov    WORD PTR [rbp-0xc4],ax
  405a22:	mov    rax,QWORD PTR [rbp-0xc0]
  405a29:	mov    esi,0x4
  405a2e:	mov    rdi,rax
  405a31:	call   405222 <flatcc_builder_clear@@Base+0xca>
  405a36:	movzx  edx,WORD PTR [rbp-0xc4]
  405a3d:	mov    rax,QWORD PTR [rbp-0xc0]
  405a44:	mov    esi,edx
  405a46:	mov    rdi,rax
  405a49:	call   405222 <flatcc_builder_clear@@Base+0xca>
  405a4e:	cmp    DWORD PTR [rbp-0xc8],0x0
  405a55:	jne    405b4a <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405a5b:	movzx  edx,WORD PTR [rbp-0xc4]
  405a62:	mov    rax,QWORD PTR [rbp-0xb8]
  405a69:	mov    esi,edx
  405a6b:	mov    rdi,rax
  405a6e:	call   4057ec <flatcc_builder_get_user_frame_ptr@@Base+0x2f0>
  405a73:	mov    eax,eax
  405a75:	mov    QWORD PTR [rbp-0xa8],rax
  405a7c:	cmp    QWORD PTR [rbp-0xa8],0x0
  405a84:	je     405b4a <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405a8a:	mov    QWORD PTR [rbp-0xa0],0x0
  405a95:	mov    DWORD PTR [rbp-0x98],0x0
  405a9f:	cmp    QWORD PTR [rbp-0xa8],0x0
  405aa7:	je     405b0e <flatcc_builder_get_user_frame_ptr@@Base+0x612>
  405aa9:	mov    rdx,QWORD PTR [rbp-0xa0]
  405ab0:	mov    rax,QWORD PTR [rbp-0xa8]
  405ab7:	add    rax,rdx
  405aba:	mov    QWORD PTR [rbp-0xa0],rax
  405ac1:	mov    eax,DWORD PTR [rbp-0x98]
  405ac7:	cdqe   
  405ac9:	shl    rax,0x4
  405acd:	add    rax,rbp
  405ad0:	sub    rax,0x90
  405ad6:	mov    rdx,0x40b4e0
  405add:	mov    QWORD PTR [rax],rdx
  405ae0:	mov    eax,DWORD PTR [rbp-0x98]
  405ae6:	cdqe   
  405ae8:	shl    rax,0x4
  405aec:	add    rax,rbp
  405aef:	lea    rdx,[rax-0x88]
  405af6:	mov    rax,QWORD PTR [rbp-0xa8]
  405afd:	mov    QWORD PTR [rdx],rax
  405b00:	mov    eax,DWORD PTR [rbp-0x98]
  405b06:	inc    eax
  405b08:	mov    DWORD PTR [rbp-0x98],eax
  405b0e:	lea    rdx,[rbp-0xa0]
  405b15:	mov    rax,QWORD PTR [rbp-0xb8]
  405b1c:	mov    rsi,rdx
  405b1f:	mov    rdi,rax
  405b22:	call   4058ed <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  405b27:	test   eax,eax
  405b29:	jne    405b4a <flatcc_builder_get_user_frame_ptr@@Base+0x64e>
  405b2b:	lea    rcx,[rip+0x6096]        # 40bbc8 <flatcc_builder_padding_base@@Base+0x6e8>
  405b32:	mov    edx,0x2be
  405b37:	lea    rsi,[rip+0x5ba2]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  405b3e:	lea    rdi,[rip+0x5bfb]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  405b45:	call   4031a0 <__assert_fail@plt>
  405b4a:	mov    eax,0x0
  405b4f:	mov    rcx,QWORD PTR [rbp-0x8]
  405b53:	xor    rcx,QWORD PTR fs:0x28
  405b5c:	je     405b63 <flatcc_builder_get_user_frame_ptr@@Base+0x667>
  405b5e:	call   403180 <__stack_chk_fail@plt>
  405b63:	leave  
  405b64:	ret    

0000000000405b65 <flatcc_builder_embed_buffer@@Base>:
  405b65:	endbr64 
  405b69:	push   rbp
  405b6a:	mov    rbp,rsp
  405b6d:	sub    rsp,0xe0
  405b74:	mov    QWORD PTR [rbp-0xb8],rdi
  405b7b:	mov    eax,esi
  405b7d:	mov    QWORD PTR [rbp-0xc8],rdx
  405b84:	mov    QWORD PTR [rbp-0xd0],rcx
  405b8b:	mov    edx,r8d
  405b8e:	mov    DWORD PTR [rbp-0xd4],r9d
  405b95:	mov    WORD PTR [rbp-0xbc],ax
  405b9c:	mov    eax,edx
  405b9e:	mov    WORD PTR [rbp-0xc0],ax
  405ba5:	mov    rax,QWORD PTR fs:0x28
  405bae:	mov    QWORD PTR [rbp-0x8],rax
  405bb2:	xor    eax,eax
  405bb4:	mov    eax,DWORD PTR [rbp-0xd4]
  405bba:	and    eax,0x2
  405bbd:	mov    DWORD PTR [rbp-0xa8],eax
  405bc3:	mov    rax,QWORD PTR [rbp-0xb8]
  405bca:	mov    eax,DWORD PTR [rax+0x100]
  405bd0:	test   eax,eax
  405bd2:	setne  al
  405bd5:	movzx  ecx,al
  405bd8:	movzx  edx,WORD PTR [rbp-0xbc]
  405bdf:	lea    rsi,[rbp-0xc0]
  405be6:	mov    rax,QWORD PTR [rbp-0xb8]
  405bed:	mov    rdi,rax
  405bf0:	call   4059a5 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  405bf5:	test   eax,eax
  405bf7:	je     405c03 <flatcc_builder_embed_buffer@@Base+0x9e>
  405bf9:	mov    eax,0x0
  405bfe:	jmp    405dda <flatcc_builder_embed_buffer@@Base+0x275>
  405c03:	movzx  eax,WORD PTR [rbp-0xc0]
  405c0a:	movzx  edx,ax
  405c0d:	mov    rax,QWORD PTR [rbp-0xd0]
  405c14:	mov    ecx,eax
  405c16:	cmp    DWORD PTR [rbp-0xa8],0x0
  405c1d:	je     405c26 <flatcc_builder_embed_buffer@@Base+0xc1>
  405c1f:	mov    eax,0x4
  405c24:	jmp    405c2b <flatcc_builder_embed_buffer@@Base+0xc6>
  405c26:	mov    eax,0x0
  405c2b:	add    ecx,eax
  405c2d:	mov    rax,QWORD PTR [rbp-0xb8]
  405c34:	mov    esi,ecx
  405c36:	mov    rdi,rax
  405c39:	call   4057c4 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  405c3e:	mov    DWORD PTR [rbp-0xa4],eax
  405c44:	mov    rax,QWORD PTR [rbp-0xd0]
  405c4b:	mov    edx,eax
  405c4d:	mov    eax,DWORD PTR [rbp-0xa4]
  405c53:	add    eax,edx
  405c55:	mov    edi,eax
  405c57:	call   4044c5 <main@@Base+0xc6>
  405c5c:	mov    DWORD PTR [rbp-0xac],eax
  405c62:	mov    QWORD PTR [rbp-0xa0],0x0
  405c6d:	mov    DWORD PTR [rbp-0x98],0x0
  405c77:	mov    rax,QWORD PTR [rbp-0xb8]
  405c7e:	mov    eax,DWORD PTR [rax+0x100]
  405c84:	test   eax,eax
  405c86:	je     405ce4 <flatcc_builder_embed_buffer@@Base+0x17f>
  405c88:	mov    rax,QWORD PTR [rbp-0xa0]
  405c8f:	add    rax,0x4
  405c93:	mov    QWORD PTR [rbp-0xa0],rax
  405c9a:	mov    eax,DWORD PTR [rbp-0x98]
  405ca0:	cdqe   
  405ca2:	shl    rax,0x4
  405ca6:	add    rax,rbp
  405ca9:	lea    rdx,[rax-0x90]
  405cb0:	lea    rax,[rbp-0xac]
  405cb7:	mov    QWORD PTR [rdx],rax
  405cba:	mov    eax,DWORD PTR [rbp-0x98]
  405cc0:	cdqe   
  405cc2:	shl    rax,0x4
  405cc6:	add    rax,rbp
  405cc9:	sub    rax,0x88
  405ccf:	mov    QWORD PTR [rax],0x4
  405cd6:	mov    eax,DWORD PTR [rbp-0x98]
  405cdc:	inc    eax
  405cde:	mov    DWORD PTR [rbp-0x98],eax
  405ce4:	cmp    QWORD PTR [rbp-0xd0],0x0
  405cec:	je     405d54 <flatcc_builder_embed_buffer@@Base+0x1ef>
  405cee:	mov    rdx,QWORD PTR [rbp-0xa0]
  405cf5:	mov    rax,QWORD PTR [rbp-0xd0]
  405cfc:	add    rax,rdx
  405cff:	mov    QWORD PTR [rbp-0xa0],rax
  405d06:	mov    eax,DWORD PTR [rbp-0x98]
  405d0c:	cdqe   
  405d0e:	shl    rax,0x4
  405d12:	add    rax,rbp
  405d15:	lea    rdx,[rax-0x90]
  405d1c:	mov    rax,QWORD PTR [rbp-0xc8]
  405d23:	mov    QWORD PTR [rdx],rax
  405d26:	mov    eax,DWORD PTR [rbp-0x98]
  405d2c:	cdqe   
  405d2e:	shl    rax,0x4
  405d32:	add    rax,rbp
  405d35:	lea    rdx,[rax-0x88]
  405d3c:	mov    rax,QWORD PTR [rbp-0xd0]
  405d43:	mov    QWORD PTR [rdx],rax
  405d46:	mov    eax,DWORD PTR [rbp-0x98]
  405d4c:	inc    eax
  405d4e:	mov    DWORD PTR [rbp-0x98],eax
  405d54:	cmp    DWORD PTR [rbp-0xa4],0x0
  405d5b:	je     405dc1 <flatcc_builder_embed_buffer@@Base+0x25c>
  405d5d:	mov    rdx,QWORD PTR [rbp-0xa0]
  405d64:	mov    eax,DWORD PTR [rbp-0xa4]
  405d6a:	add    rax,rdx
  405d6d:	mov    QWORD PTR [rbp-0xa0],rax
  405d74:	mov    eax,DWORD PTR [rbp-0x98]
  405d7a:	cdqe   
  405d7c:	shl    rax,0x4
  405d80:	add    rax,rbp
  405d83:	sub    rax,0x90
  405d89:	mov    rdx,0x40b4e0
  405d90:	mov    QWORD PTR [rax],rdx
  405d93:	mov    edx,DWORD PTR [rbp-0x98]
  405d99:	mov    eax,DWORD PTR [rbp-0xa4]
  405d9f:	movsxd rdx,edx
  405da2:	shl    rdx,0x4
  405da6:	add    rdx,rbp
  405da9:	sub    rdx,0x88
  405db0:	mov    QWORD PTR [rdx],rax
  405db3:	mov    eax,DWORD PTR [rbp-0x98]
  405db9:	inc    eax
  405dbb:	mov    DWORD PTR [rbp-0x98],eax
  405dc1:	lea    rdx,[rbp-0xa0]
  405dc8:	mov    rax,QWORD PTR [rbp-0xb8]
  405dcf:	mov    rsi,rdx
  405dd2:	mov    rdi,rax
  405dd5:	call   40580e <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  405dda:	mov    rdi,QWORD PTR [rbp-0x8]
  405dde:	xor    rdi,QWORD PTR fs:0x28
  405de7:	je     405dee <flatcc_builder_embed_buffer@@Base+0x289>
  405de9:	call   403180 <__stack_chk_fail@plt>
  405dee:	leave  
  405def:	ret    

0000000000405df0 <flatcc_builder_create_buffer@@Base>:
  405df0:	endbr64 
  405df4:	push   rbp
  405df5:	mov    rbp,rsp
  405df8:	sub    rsp,0xf0
  405dff:	mov    QWORD PTR [rbp-0xd8],rdi
  405e06:	mov    QWORD PTR [rbp-0xe0],rsi
  405e0d:	mov    eax,edx
  405e0f:	mov    DWORD PTR [rbp-0xe8],ecx
  405e15:	mov    edx,r8d
  405e18:	mov    DWORD PTR [rbp-0xf0],r9d
  405e1f:	mov    WORD PTR [rbp-0xe4],ax
  405e26:	mov    eax,edx
  405e28:	mov    WORD PTR [rbp-0xec],ax
  405e2f:	mov    rax,QWORD PTR fs:0x28
  405e38:	mov    QWORD PTR [rbp-0x8],rax
  405e3c:	xor    eax,eax
  405e3e:	mov    DWORD PTR [rbp-0xb8],0x0
  405e48:	mov    DWORD PTR [rbp-0xbc],0x0
  405e52:	mov    eax,DWORD PTR [rbp-0xf0]
  405e58:	and    eax,0x1
  405e5b:	test   eax,eax
  405e5d:	setne  al
  405e60:	movzx  eax,al
  405e63:	mov    DWORD PTR [rbp-0xb4],eax
  405e69:	mov    eax,DWORD PTR [rbp-0xf0]
  405e6f:	and    eax,0x2
  405e72:	test   eax,eax
  405e74:	setne  al
  405e77:	movzx  eax,al
  405e7a:	mov    DWORD PTR [rbp-0xb0],eax
  405e80:	movzx  edx,WORD PTR [rbp-0xe4]
  405e87:	mov    ecx,DWORD PTR [rbp-0xb4]
  405e8d:	lea    rsi,[rbp-0xec]
  405e94:	mov    rax,QWORD PTR [rbp-0xd8]
  405e9b:	mov    rdi,rax
  405e9e:	call   4059a5 <flatcc_builder_get_user_frame_ptr@@Base+0x4a9>
  405ea3:	test   eax,eax
  405ea5:	je     405eb1 <flatcc_builder_create_buffer@@Base+0xc1>
  405ea7:	mov    eax,0x0
  405eac:	jmp    406213 <flatcc_builder_create_buffer@@Base+0x423>
  405eb1:	movzx  eax,WORD PTR [rbp-0xec]
  405eb8:	movzx  edx,ax
  405ebb:	mov    rax,QWORD PTR [rbp-0xd8]
  405ec2:	mov    esi,edx
  405ec4:	mov    rdi,rax
  405ec7:	call   4051f1 <flatcc_builder_clear@@Base+0x99>
  405ecc:	cmp    QWORD PTR [rbp-0xe0],0x0
  405ed4:	je     405f0b <flatcc_builder_create_buffer@@Base+0x11b>
  405ed6:	mov    rax,QWORD PTR [rbp-0xe0]
  405edd:	mov    eax,DWORD PTR [rax]
  405edf:	mov    DWORD PTR [rbp-0xbc],eax
  405ee5:	mov    eax,DWORD PTR [rbp-0xbc]
  405eeb:	mov    edi,eax
  405eed:	call   4044e0 <main@@Base+0xe1>
  405ef2:	mov    DWORD PTR [rbp-0xbc],eax
  405ef8:	mov    eax,DWORD PTR [rbp-0xbc]
  405efe:	mov    edi,eax
  405f00:	call   4044c5 <main@@Base+0xc6>
  405f05:	mov    DWORD PTR [rbp-0xbc],eax
  405f0b:	mov    eax,DWORD PTR [rbp-0xbc]
  405f11:	test   eax,eax
  405f13:	je     405f1c <flatcc_builder_create_buffer@@Base+0x12c>
  405f15:	mov    eax,0x4
  405f1a:	jmp    405f21 <flatcc_builder_create_buffer@@Base+0x131>
  405f1c:	mov    eax,0x0
  405f21:	mov    DWORD PTR [rbp-0xb8],eax
  405f27:	movzx  eax,WORD PTR [rbp-0xec]
  405f2e:	movzx  edx,ax
  405f31:	cmp    DWORD PTR [rbp-0xb0],0x0
  405f38:	je     405f41 <flatcc_builder_create_buffer@@Base+0x151>
  405f3a:	mov    ecx,0x4
  405f3f:	jmp    405f46 <flatcc_builder_create_buffer@@Base+0x156>
  405f41:	mov    ecx,0x0
  405f46:	mov    eax,DWORD PTR [rbp-0xb8]
  405f4c:	add    eax,ecx
  405f4e:	lea    ecx,[rax+0x4]
  405f51:	mov    rax,QWORD PTR [rbp-0xd8]
  405f58:	mov    esi,ecx
  405f5a:	mov    rdi,rax
  405f5d:	call   4057c4 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  405f62:	mov    DWORD PTR [rbp-0xac],eax
  405f68:	mov    QWORD PTR [rbp-0xa0],0x0
  405f73:	mov    DWORD PTR [rbp-0x98],0x0
  405f7d:	cmp    DWORD PTR [rbp-0xb4],0x0
  405f84:	jne    405f8f <flatcc_builder_create_buffer@@Base+0x19f>
  405f86:	cmp    DWORD PTR [rbp-0xb0],0x0
  405f8d:	je     405feb <flatcc_builder_create_buffer@@Base+0x1fb>
  405f8f:	mov    rax,QWORD PTR [rbp-0xa0]
  405f96:	add    rax,0x4
  405f9a:	mov    QWORD PTR [rbp-0xa0],rax
  405fa1:	mov    eax,DWORD PTR [rbp-0x98]
  405fa7:	cdqe   
  405fa9:	shl    rax,0x4
  405fad:	add    rax,rbp
  405fb0:	lea    rdx,[rax-0x90]
  405fb7:	lea    rax,[rbp-0xc0]
  405fbe:	mov    QWORD PTR [rdx],rax
  405fc1:	mov    eax,DWORD PTR [rbp-0x98]
  405fc7:	cdqe   
  405fc9:	shl    rax,0x4
  405fcd:	add    rax,rbp
  405fd0:	sub    rax,0x88
  405fd6:	mov    QWORD PTR [rax],0x4
  405fdd:	mov    eax,DWORD PTR [rbp-0x98]
  405fe3:	inc    eax
  405fe5:	mov    DWORD PTR [rbp-0x98],eax
  405feb:	mov    rax,QWORD PTR [rbp-0xa0]
  405ff2:	add    rax,0x4
  405ff6:	mov    QWORD PTR [rbp-0xa0],rax
  405ffd:	mov    eax,DWORD PTR [rbp-0x98]
  406003:	cdqe   
  406005:	shl    rax,0x4
  406009:	add    rax,rbp
  40600c:	lea    rdx,[rax-0x90]
  406013:	lea    rax,[rbp-0xc4]
  40601a:	mov    QWORD PTR [rdx],rax
  40601d:	mov    eax,DWORD PTR [rbp-0x98]
  406023:	cdqe   
  406025:	shl    rax,0x4
  406029:	add    rax,rbp
  40602c:	sub    rax,0x88
  406032:	mov    QWORD PTR [rax],0x4
  406039:	mov    eax,DWORD PTR [rbp-0x98]
  40603f:	inc    eax
  406041:	mov    DWORD PTR [rbp-0x98],eax
  406047:	cmp    DWORD PTR [rbp-0xb8],0x0
  40604e:	je     4060b5 <flatcc_builder_create_buffer@@Base+0x2c5>
  406050:	mov    rdx,QWORD PTR [rbp-0xa0]
  406057:	mov    eax,DWORD PTR [rbp-0xb8]
  40605d:	add    rax,rdx
  406060:	mov    QWORD PTR [rbp-0xa0],rax
  406067:	mov    eax,DWORD PTR [rbp-0x98]
  40606d:	cdqe   
  40606f:	shl    rax,0x4
  406073:	add    rax,rbp
  406076:	lea    rdx,[rax-0x90]
  40607d:	lea    rax,[rbp-0xbc]
  406084:	mov    QWORD PTR [rdx],rax
  406087:	mov    edx,DWORD PTR [rbp-0x98]
  40608d:	mov    eax,DWORD PTR [rbp-0xb8]
  406093:	movsxd rdx,edx
  406096:	shl    rdx,0x4
  40609a:	add    rdx,rbp
  40609d:	sub    rdx,0x88
  4060a4:	mov    QWORD PTR [rdx],rax
  4060a7:	mov    eax,DWORD PTR [rbp-0x98]
  4060ad:	inc    eax
  4060af:	mov    DWORD PTR [rbp-0x98],eax
  4060b5:	cmp    DWORD PTR [rbp-0xac],0x0
  4060bc:	je     406122 <flatcc_builder_create_buffer@@Base+0x332>
  4060be:	mov    rdx,QWORD PTR [rbp-0xa0]
  4060c5:	mov    eax,DWORD PTR [rbp-0xac]
  4060cb:	add    rax,rdx
  4060ce:	mov    QWORD PTR [rbp-0xa0],rax
  4060d5:	mov    eax,DWORD PTR [rbp-0x98]
  4060db:	cdqe   
  4060dd:	shl    rax,0x4
  4060e1:	add    rax,rbp
  4060e4:	sub    rax,0x90
  4060ea:	mov    rdx,0x40b4e0
  4060f1:	mov    QWORD PTR [rax],rdx
  4060f4:	mov    edx,DWORD PTR [rbp-0x98]
  4060fa:	mov    eax,DWORD PTR [rbp-0xac]
  406100:	movsxd rdx,edx
  406103:	shl    rdx,0x4
  406107:	add    rdx,rbp
  40610a:	sub    rdx,0x88
  406111:	mov    QWORD PTR [rdx],rax
  406114:	mov    eax,DWORD PTR [rbp-0x98]
  40611a:	inc    eax
  40611c:	mov    DWORD PTR [rbp-0x98],eax
  406122:	mov    rax,QWORD PTR [rbp-0xd8]
  406129:	mov    eax,DWORD PTR [rax+0xf0]
  40612f:	mov    edx,eax
  406131:	mov    rax,QWORD PTR [rbp-0xa0]
  406138:	sub    edx,eax
  40613a:	mov    eax,edx
  40613c:	cmp    DWORD PTR [rbp-0xb4],0x0
  406143:	jne    40614e <flatcc_builder_create_buffer@@Base+0x35e>
  406145:	cmp    DWORD PTR [rbp-0xb0],0x0
  40614c:	je     406155 <flatcc_builder_create_buffer@@Base+0x365>
  40614e:	mov    edx,0x4
  406153:	jmp    40615a <flatcc_builder_create_buffer@@Base+0x36a>
  406155:	mov    edx,0x0
  40615a:	add    eax,edx
  40615c:	mov    DWORD PTR [rbp-0xa8],eax
  406162:	cmp    DWORD PTR [rbp-0xb4],0x0
  406169:	je     40618d <flatcc_builder_create_buffer@@Base+0x39d>
  40616b:	mov    rax,QWORD PTR [rbp-0xd8]
  406172:	mov    eax,DWORD PTR [rax+0xf8]
  406178:	sub    eax,DWORD PTR [rbp-0xa8]
  40617e:	mov    edi,eax
  406180:	call   4044c5 <main@@Base+0xc6>
  406185:	mov    DWORD PTR [rbp-0xc0],eax
  40618b:	jmp    4061ad <flatcc_builder_create_buffer@@Base+0x3bd>
  40618d:	mov    rax,QWORD PTR [rbp-0xd8]
  406194:	mov    eax,DWORD PTR [rax+0xf4]
  40619a:	sub    eax,DWORD PTR [rbp-0xa8]
  4061a0:	mov    edi,eax
  4061a2:	call   4044c5 <main@@Base+0xc6>
  4061a7:	mov    DWORD PTR [rbp-0xc0],eax
  4061ad:	mov    eax,DWORD PTR [rbp-0xe8]
  4061b3:	sub    eax,DWORD PTR [rbp-0xa8]
  4061b9:	mov    edi,eax
  4061bb:	call   4044c5 <main@@Base+0xc6>
  4061c0:	mov    DWORD PTR [rbp-0xc4],eax
  4061c6:	lea    rdx,[rbp-0xa0]
  4061cd:	mov    rax,QWORD PTR [rbp-0xd8]
  4061d4:	mov    rsi,rdx
  4061d7:	mov    rdi,rax
  4061da:	call   40580e <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4061df:	mov    DWORD PTR [rbp-0xa4],eax
  4061e5:	cmp    DWORD PTR [rbp-0xa4],0x0
  4061ec:	jne    40620d <flatcc_builder_create_buffer@@Base+0x41d>
  4061ee:	lea    rcx,[rip+0x5a0b]        # 40bc00 <flatcc_builder_padding_base@@Base+0x720>
  4061f5:	mov    edx,0x304
  4061fa:	lea    rsi,[rip+0x54df]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406201:	lea    rdi,[rip+0x5538]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  406208:	call   4031a0 <__assert_fail@plt>
  40620d:	mov    eax,DWORD PTR [rbp-0xa4]
  406213:	mov    rsi,QWORD PTR [rbp-0x8]
  406217:	xor    rsi,QWORD PTR fs:0x28
  406220:	je     406227 <flatcc_builder_create_buffer@@Base+0x437>
  406222:	call   403180 <__stack_chk_fail@plt>
  406227:	leave  
  406228:	ret    

0000000000406229 <flatcc_builder_create_struct@@Base>:
  406229:	endbr64 
  40622d:	push   rbp
  40622e:	mov    rbp,rsp
  406231:	sub    rsp,0xd0
  406238:	mov    QWORD PTR [rbp-0xb8],rdi
  40623f:	mov    QWORD PTR [rbp-0xc0],rsi
  406246:	mov    QWORD PTR [rbp-0xc8],rdx
  40624d:	mov    eax,ecx
  40624f:	mov    WORD PTR [rbp-0xcc],ax
  406256:	mov    rax,QWORD PTR fs:0x28
  40625f:	mov    QWORD PTR [rbp-0x8],rax
  406263:	xor    eax,eax
  406265:	cmp    WORD PTR [rbp-0xcc],0x0
  40626d:	jne    40628e <flatcc_builder_create_struct@@Base+0x65>
  40626f:	lea    rcx,[rip+0x59aa]        # 40bc20 <flatcc_builder_padding_base@@Base+0x740>
  406276:	mov    edx,0x30f
  40627b:	lea    rsi,[rip+0x545e]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406282:	lea    rdi,[rip+0x5516]        # 40b79f <flatcc_builder_padding_base@@Base+0x2bf>
  406289:	call   4031a0 <__assert_fail@plt>
  40628e:	movzx  edx,WORD PTR [rbp-0xcc]
  406295:	mov    rax,QWORD PTR [rbp-0xb8]
  40629c:	mov    esi,edx
  40629e:	mov    rdi,rax
  4062a1:	call   4051f1 <flatcc_builder_clear@@Base+0x99>
  4062a6:	movzx  edx,WORD PTR [rbp-0xcc]
  4062ad:	mov    rax,QWORD PTR [rbp-0xc8]
  4062b4:	mov    ecx,eax
  4062b6:	mov    rax,QWORD PTR [rbp-0xb8]
  4062bd:	mov    esi,ecx
  4062bf:	mov    rdi,rax
  4062c2:	call   4057c4 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4062c7:	mov    eax,eax
  4062c9:	mov    QWORD PTR [rbp-0xa8],rax
  4062d0:	mov    QWORD PTR [rbp-0xa0],0x0
  4062db:	mov    DWORD PTR [rbp-0x98],0x0
  4062e5:	cmp    QWORD PTR [rbp-0xc8],0x0
  4062ed:	je     406355 <flatcc_builder_create_struct@@Base+0x12c>
  4062ef:	mov    rdx,QWORD PTR [rbp-0xa0]
  4062f6:	mov    rax,QWORD PTR [rbp-0xc8]
  4062fd:	add    rax,rdx
  406300:	mov    QWORD PTR [rbp-0xa0],rax
  406307:	mov    eax,DWORD PTR [rbp-0x98]
  40630d:	cdqe   
  40630f:	shl    rax,0x4
  406313:	add    rax,rbp
  406316:	lea    rdx,[rax-0x90]
  40631d:	mov    rax,QWORD PTR [rbp-0xc0]
  406324:	mov    QWORD PTR [rdx],rax
  406327:	mov    eax,DWORD PTR [rbp-0x98]
  40632d:	cdqe   
  40632f:	shl    rax,0x4
  406333:	add    rax,rbp
  406336:	lea    rdx,[rax-0x88]
  40633d:	mov    rax,QWORD PTR [rbp-0xc8]
  406344:	mov    QWORD PTR [rdx],rax
  406347:	mov    eax,DWORD PTR [rbp-0x98]
  40634d:	inc    eax
  40634f:	mov    DWORD PTR [rbp-0x98],eax
  406355:	cmp    QWORD PTR [rbp-0xa8],0x0
  40635d:	je     4063c4 <flatcc_builder_create_struct@@Base+0x19b>
  40635f:	mov    rdx,QWORD PTR [rbp-0xa0]
  406366:	mov    rax,QWORD PTR [rbp-0xa8]
  40636d:	add    rax,rdx
  406370:	mov    QWORD PTR [rbp-0xa0],rax
  406377:	mov    eax,DWORD PTR [rbp-0x98]
  40637d:	cdqe   
  40637f:	shl    rax,0x4
  406383:	add    rax,rbp
  406386:	sub    rax,0x90
  40638c:	mov    rdx,0x40b4e0
  406393:	mov    QWORD PTR [rax],rdx
  406396:	mov    eax,DWORD PTR [rbp-0x98]
  40639c:	cdqe   
  40639e:	shl    rax,0x4
  4063a2:	add    rax,rbp
  4063a5:	lea    rdx,[rax-0x88]
  4063ac:	mov    rax,QWORD PTR [rbp-0xa8]
  4063b3:	mov    QWORD PTR [rdx],rax
  4063b6:	mov    eax,DWORD PTR [rbp-0x98]
  4063bc:	inc    eax
  4063be:	mov    DWORD PTR [rbp-0x98],eax
  4063c4:	lea    rdx,[rbp-0xa0]
  4063cb:	mov    rax,QWORD PTR [rbp-0xb8]
  4063d2:	mov    rsi,rdx
  4063d5:	mov    rdi,rax
  4063d8:	call   40580e <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4063dd:	mov    rcx,QWORD PTR [rbp-0x8]
  4063e1:	xor    rcx,QWORD PTR fs:0x28
  4063ea:	je     4063f1 <flatcc_builder_create_struct@@Base+0x1c8>
  4063ec:	call   403180 <__stack_chk_fail@plt>
  4063f1:	leave  
  4063f2:	ret    

00000000004063f3 <flatcc_builder_start_buffer@@Base>:
  4063f3:	endbr64 
  4063f7:	push   rbp
  4063f8:	mov    rbp,rsp
  4063fb:	sub    rsp,0x20
  4063ff:	mov    QWORD PTR [rbp-0x8],rdi
  406403:	mov    QWORD PTR [rbp-0x10],rsi
  406407:	mov    eax,edx
  406409:	mov    DWORD PTR [rbp-0x18],ecx
  40640c:	mov    WORD PTR [rbp-0x14],ax
  406410:	mov    rax,QWORD PTR [rbp-0x8]
  406414:	movzx  eax,WORD PTR [rax+0xe8]
  40641b:	movzx  edx,ax
  40641e:	mov    rax,QWORD PTR [rbp-0x8]
  406422:	mov    esi,edx
  406424:	mov    rdi,rax
  406427:	call   405522 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40642c:	test   eax,eax
  40642e:	je     40643a <flatcc_builder_start_buffer@@Base+0x47>
  406430:	mov    eax,0xffffffff
  406435:	jmp    40653e <flatcc_builder_start_buffer@@Base+0x14b>
  40643a:	mov    rax,QWORD PTR [rbp-0x8]
  40643e:	mov    WORD PTR [rax+0xe8],0x1
  406447:	mov    rax,QWORD PTR [rbp-0x8]
  40644b:	mov    rdx,QWORD PTR [rax+0x30]
  40644f:	mov    rax,QWORD PTR [rbp-0x8]
  406453:	movzx  eax,WORD PTR [rax+0xec]
  40645a:	mov    WORD PTR [rdx+0x22],ax
  40645e:	mov    rdx,QWORD PTR [rbp-0x8]
  406462:	movzx  eax,WORD PTR [rbp-0x14]
  406466:	mov    WORD PTR [rdx+0xec],ax
  40646d:	mov    rax,QWORD PTR [rbp-0x8]
  406471:	mov    rdx,QWORD PTR [rax+0x30]
  406475:	mov    rax,QWORD PTR [rbp-0x8]
  406479:	movzx  eax,WORD PTR [rax+0x10c]
  406480:	mov    WORD PTR [rdx+0x20],ax
  406484:	mov    eax,DWORD PTR [rbp-0x18]
  406487:	mov    edx,eax
  406489:	mov    rax,QWORD PTR [rbp-0x8]
  40648d:	mov    WORD PTR [rax+0x10c],dx
  406494:	mov    rax,QWORD PTR [rbp-0x8]
  406498:	mov    rax,QWORD PTR [rax+0x30]
  40649c:	mov    rdx,QWORD PTR [rbp-0x8]
  4064a0:	mov    edx,DWORD PTR [rdx+0xf8]
  4064a6:	mov    DWORD PTR [rax+0x14],edx
  4064a9:	mov    rax,QWORD PTR [rbp-0x8]
  4064ad:	mov    rax,QWORD PTR [rax+0x30]
  4064b1:	mov    rdx,QWORD PTR [rbp-0x8]
  4064b5:	mov    edx,DWORD PTR [rdx+0x100]
  4064bb:	mov    DWORD PTR [rax+0x1c],edx
  4064be:	mov    rax,QWORD PTR [rbp-0x8]
  4064c2:	mov    edx,DWORD PTR [rax+0xf0]
  4064c8:	mov    rax,QWORD PTR [rbp-0x8]
  4064cc:	mov    DWORD PTR [rax+0xf8],edx
  4064d2:	mov    rax,QWORD PTR [rbp-0x8]
  4064d6:	mov    eax,DWORD PTR [rax+0xfc]
  4064dc:	lea    ecx,[rax+0x1]
  4064df:	mov    rdx,QWORD PTR [rbp-0x8]
  4064e3:	mov    DWORD PTR [rdx+0xfc],ecx
  4064e9:	mov    rdx,QWORD PTR [rbp-0x8]
  4064ed:	mov    DWORD PTR [rdx+0x100],eax
  4064f3:	mov    rax,QWORD PTR [rbp-0x8]
  4064f7:	mov    rax,QWORD PTR [rax+0x30]
  4064fb:	mov    rdx,QWORD PTR [rbp-0x8]
  4064ff:	mov    edx,DWORD PTR [rdx+0x110]
  406505:	mov    DWORD PTR [rax+0x10],edx
  406508:	cmp    QWORD PTR [rbp-0x10],0x0
  40650d:	je     406515 <flatcc_builder_start_buffer@@Base+0x122>
  40650f:	mov    rax,QWORD PTR [rbp-0x10]
  406513:	jmp    40651c <flatcc_builder_start_buffer@@Base+0x129>
  406515:	mov    rax,0x40b4e0
  40651c:	mov    rdx,QWORD PTR [rbp-0x8]
  406520:	add    rdx,0x110
  406527:	mov    eax,DWORD PTR [rax]
  406529:	mov    DWORD PTR [rdx],eax
  40652b:	mov    rax,QWORD PTR [rbp-0x8]
  40652f:	mov    rax,QWORD PTR [rax+0x30]
  406533:	mov    WORD PTR [rax+0xe],0x1
  406539:	mov    eax,0x0
  40653e:	leave  
  40653f:	ret    

0000000000406540 <flatcc_builder_end_buffer@@Base>:
  406540:	endbr64 
  406544:	push   rbp
  406545:	mov    rbp,rsp
  406548:	sub    rsp,0x20
  40654c:	mov    QWORD PTR [rbp-0x18],rdi
  406550:	mov    DWORD PTR [rbp-0x1c],esi
  406553:	mov    rax,QWORD PTR [rbp-0x18]
  406557:	movzx  eax,WORD PTR [rax+0x10c]
  40655e:	movzx  eax,ax
  406561:	and    eax,0x2
  406564:	mov    DWORD PTR [rbp-0x8],eax
  406567:	mov    rax,QWORD PTR [rbp-0x18]
  40656b:	mov    eax,DWORD PTR [rax+0x100]
  406571:	test   eax,eax
  406573:	setne  al
  406576:	movzx  eax,al
  406579:	or     DWORD PTR [rbp-0x8],eax
  40657c:	mov    rax,QWORD PTR [rbp-0x18]
  406580:	mov    rax,QWORD PTR [rax+0x30]
  406584:	movzx  eax,WORD PTR [rax+0xe]
  406588:	cmp    ax,0x1
  40658c:	je     4065ad <flatcc_builder_end_buffer@@Base+0x6d>
  40658e:	lea    rcx,[rip+0x56ab]        # 40bc40 <flatcc_builder_padding_base@@Base+0x760>
  406595:	mov    edx,0x346
  40659a:	lea    rsi,[rip+0x513f]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4065a1:	lea    rdi,[rip+0x5208]        # 40b7b0 <flatcc_builder_padding_base@@Base+0x2d0>
  4065a8:	call   4031a0 <__assert_fail@plt>
  4065ad:	mov    rax,QWORD PTR [rbp-0x18]
  4065b1:	movzx  eax,WORD PTR [rax+0xec]
  4065b8:	movzx  edx,ax
  4065bb:	mov    rax,QWORD PTR [rbp-0x18]
  4065bf:	mov    esi,edx
  4065c1:	mov    rdi,rax
  4065c4:	call   4051f1 <flatcc_builder_clear@@Base+0x99>
  4065c9:	mov    rax,QWORD PTR [rbp-0x18]
  4065cd:	movzx  eax,WORD PTR [rax+0xe8]
  4065d4:	movzx  edi,ax
  4065d7:	mov    rax,QWORD PTR [rbp-0x18]
  4065db:	movzx  eax,WORD PTR [rax+0xec]
  4065e2:	movzx  edx,ax
  4065e5:	mov    rax,QWORD PTR [rbp-0x18]
  4065e9:	lea    rsi,[rax+0x110]
  4065f0:	mov    r8d,DWORD PTR [rbp-0x8]
  4065f4:	mov    ecx,DWORD PTR [rbp-0x1c]
  4065f7:	mov    rax,QWORD PTR [rbp-0x18]
  4065fb:	mov    r9d,r8d
  4065fe:	mov    r8d,edi
  406601:	mov    rdi,rax
  406604:	call   405df0 <flatcc_builder_create_buffer@@Base>
  406609:	mov    DWORD PTR [rbp-0x4],eax
  40660c:	cmp    DWORD PTR [rbp-0x4],0x0
  406610:	jne    406619 <flatcc_builder_end_buffer@@Base+0xd9>
  406612:	mov    eax,0x0
  406617:	jmp    40667e <flatcc_builder_end_buffer@@Base+0x13e>
  406619:	mov    rax,QWORD PTR [rbp-0x18]
  40661d:	mov    rax,QWORD PTR [rax+0x30]
  406621:	mov    edx,DWORD PTR [rax+0x14]
  406624:	mov    rax,QWORD PTR [rbp-0x18]
  406628:	mov    DWORD PTR [rax+0xf8],edx
  40662e:	mov    rax,QWORD PTR [rbp-0x18]
  406632:	mov    rax,QWORD PTR [rax+0x30]
  406636:	mov    edx,DWORD PTR [rax+0x1c]
  406639:	mov    rax,QWORD PTR [rbp-0x18]
  40663d:	mov    DWORD PTR [rax+0x100],edx
  406643:	mov    rax,QWORD PTR [rbp-0x18]
  406647:	mov    rax,QWORD PTR [rax+0x30]
  40664b:	mov    edx,DWORD PTR [rax+0x10]
  40664e:	mov    rax,QWORD PTR [rbp-0x18]
  406652:	mov    DWORD PTR [rax+0x110],edx
  406658:	mov    rax,QWORD PTR [rbp-0x18]
  40665c:	mov    rax,QWORD PTR [rax+0x30]
  406660:	movzx  eax,WORD PTR [rax+0x20]
  406664:	mov    rdx,QWORD PTR [rbp-0x18]
  406668:	mov    WORD PTR [rdx+0x10c],ax
  40666f:	mov    rax,QWORD PTR [rbp-0x18]
  406673:	mov    rdi,rax
  406676:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40667b:	mov    eax,DWORD PTR [rbp-0x4]
  40667e:	leave  
  40667f:	ret    

0000000000406680 <flatcc_builder_start_struct@@Base>:
  406680:	endbr64 
  406684:	push   rbp
  406685:	mov    rbp,rsp
  406688:	sub    rsp,0x20
  40668c:	mov    QWORD PTR [rbp-0x8],rdi
  406690:	mov    QWORD PTR [rbp-0x10],rsi
  406694:	mov    eax,edx
  406696:	mov    WORD PTR [rbp-0x14],ax
  40669a:	movzx  edx,WORD PTR [rbp-0x14]
  40669e:	mov    rax,QWORD PTR [rbp-0x8]
  4066a2:	mov    esi,edx
  4066a4:	mov    rdi,rax
  4066a7:	call   405522 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4066ac:	test   eax,eax
  4066ae:	je     4066b7 <flatcc_builder_start_struct@@Base+0x37>
  4066b0:	mov    eax,0x0
  4066b5:	jmp    4066ea <flatcc_builder_start_struct@@Base+0x6a>
  4066b7:	mov    rax,QWORD PTR [rbp-0x8]
  4066bb:	mov    rax,QWORD PTR [rax+0x30]
  4066bf:	mov    WORD PTR [rax+0xe],0x2
  4066c5:	mov    rax,QWORD PTR [rbp-0x8]
  4066c9:	mov    esi,0xfffffffc
  4066ce:	mov    rdi,rax
  4066d1:	call   4046f8 <flatcc_builder_default_alloc@@Base+0x173>
  4066d6:	mov    rax,QWORD PTR [rbp-0x10]
  4066da:	mov    edx,eax
  4066dc:	mov    rax,QWORD PTR [rbp-0x8]
  4066e0:	mov    esi,edx
  4066e2:	mov    rdi,rax
  4066e5:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  4066ea:	leave  
  4066eb:	ret    

00000000004066ec <flatcc_builder_struct_edit@@Base>:
  4066ec:	endbr64 
  4066f0:	push   rbp
  4066f1:	mov    rbp,rsp
  4066f4:	mov    QWORD PTR [rbp-0x8],rdi
  4066f8:	mov    rax,QWORD PTR [rbp-0x8]
  4066fc:	mov    rax,QWORD PTR [rax+0x18]
  406700:	pop    rbp
  406701:	ret    

0000000000406702 <flatcc_builder_end_struct@@Base>:
  406702:	endbr64 
  406706:	push   rbp
  406707:	mov    rbp,rsp
  40670a:	sub    rsp,0x20
  40670e:	mov    QWORD PTR [rbp-0x18],rdi
  406712:	mov    rax,QWORD PTR [rbp-0x18]
  406716:	mov    rax,QWORD PTR [rax+0x30]
  40671a:	movzx  eax,WORD PTR [rax+0xe]
  40671e:	cmp    ax,0x2
  406722:	je     406743 <flatcc_builder_end_struct@@Base+0x41>
  406724:	lea    rcx,[rip+0x5535]        # 40bc60 <flatcc_builder_padding_base@@Base+0x780>
  40672b:	mov    edx,0x368
  406730:	lea    rsi,[rip+0x4fa9]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406737:	lea    rdi,[rip+0x50a2]        # 40b7e0 <flatcc_builder_padding_base@@Base+0x300>
  40673e:	call   4031a0 <__assert_fail@plt>
  406743:	mov    rax,QWORD PTR [rbp-0x18]
  406747:	movzx  eax,WORD PTR [rax+0xea]
  40674e:	movzx  edx,ax
  406751:	mov    rax,QWORD PTR [rbp-0x18]
  406755:	mov    eax,DWORD PTR [rax+0x20]
  406758:	mov    edi,eax
  40675a:	mov    rax,QWORD PTR [rbp-0x18]
  40675e:	mov    rsi,QWORD PTR [rax+0x18]
  406762:	mov    rax,QWORD PTR [rbp-0x18]
  406766:	mov    ecx,edx
  406768:	mov    rdx,rdi
  40676b:	mov    rdi,rax
  40676e:	call   406229 <flatcc_builder_create_struct@@Base>
  406773:	mov    DWORD PTR [rbp-0x4],eax
  406776:	cmp    DWORD PTR [rbp-0x4],0x0
  40677a:	jne    406783 <flatcc_builder_end_struct@@Base+0x81>
  40677c:	mov    eax,0x0
  406781:	jmp    406792 <flatcc_builder_end_struct@@Base+0x90>
  406783:	mov    rax,QWORD PTR [rbp-0x18]
  406787:	mov    rdi,rax
  40678a:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40678f:	mov    eax,DWORD PTR [rbp-0x4]
  406792:	leave  
  406793:	ret    
  406794:	push   rbp
  406795:	mov    rbp,rsp
  406798:	sub    rsp,0x20
  40679c:	mov    QWORD PTR [rbp-0x18],rdi
  4067a0:	mov    DWORD PTR [rbp-0x1c],esi
  4067a3:	mov    DWORD PTR [rbp-0x20],edx
  4067a6:	mov    rax,QWORD PTR [rbp-0x18]
  4067aa:	mov    rax,QWORD PTR [rax+0x30]
  4067ae:	mov    eax,DWORD PTR [rax+0x14]
  4067b1:	mov    DWORD PTR [rbp-0x8],eax
  4067b4:	mov    edx,DWORD PTR [rbp-0x8]
  4067b7:	mov    eax,DWORD PTR [rbp-0x1c]
  4067ba:	add    eax,edx
  4067bc:	mov    DWORD PTR [rbp-0x4],eax
  4067bf:	mov    eax,DWORD PTR [rbp-0x8]
  4067c2:	cmp    eax,DWORD PTR [rbp-0x4]
  4067c5:	ja     4067cf <flatcc_builder_end_struct@@Base+0xcd>
  4067c7:	mov    eax,DWORD PTR [rbp-0x4]
  4067ca:	cmp    eax,DWORD PTR [rbp-0x20]
  4067cd:	jbe    406805 <flatcc_builder_end_struct@@Base+0x103>
  4067cf:	mov    eax,DWORD PTR [rbp-0x8]
  4067d2:	cmp    eax,DWORD PTR [rbp-0x4]
  4067d5:	ja     4067df <flatcc_builder_end_struct@@Base+0xdd>
  4067d7:	mov    eax,DWORD PTR [rbp-0x4]
  4067da:	cmp    eax,DWORD PTR [rbp-0x20]
  4067dd:	jbe    4067fe <flatcc_builder_end_struct@@Base+0xfc>
  4067df:	lea    rcx,[rip+0x549a]        # 40bc80 <flatcc_builder_padding_base@@Base+0x7a0>
  4067e6:	mov    edx,0x37c
  4067eb:	lea    rsi,[rip+0x4eee]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4067f2:	lea    rdi,[rip+0x5013]        # 40b80c <flatcc_builder_padding_base@@Base+0x32c>
  4067f9:	call   4031a0 <__assert_fail@plt>
  4067fe:	mov    eax,0xffffffff
  406803:	jmp    406818 <flatcc_builder_end_struct@@Base+0x116>
  406805:	mov    rax,QWORD PTR [rbp-0x18]
  406809:	mov    rax,QWORD PTR [rax+0x30]
  40680d:	mov    edx,DWORD PTR [rbp-0x4]
  406810:	mov    DWORD PTR [rax+0x14],edx
  406813:	mov    eax,0x0
  406818:	leave  
  406819:	ret    

000000000040681a <flatcc_builder_extend_vector@@Base>:
  40681a:	endbr64 
  40681e:	push   rbp
  40681f:	mov    rbp,rsp
  406822:	sub    rsp,0x10
  406826:	mov    QWORD PTR [rbp-0x8],rdi
  40682a:	mov    QWORD PTR [rbp-0x10],rsi
  40682e:	mov    rax,QWORD PTR [rbp-0x8]
  406832:	mov    rax,QWORD PTR [rax+0x30]
  406836:	mov    edx,DWORD PTR [rax+0x18]
  406839:	mov    rax,QWORD PTR [rbp-0x10]
  40683d:	mov    ecx,eax
  40683f:	mov    rax,QWORD PTR [rbp-0x8]
  406843:	mov    esi,ecx
  406845:	mov    rdi,rax
  406848:	call   406794 <flatcc_builder_end_struct@@Base+0x92>
  40684d:	test   eax,eax
  40684f:	je     406858 <flatcc_builder_extend_vector@@Base+0x3e>
  406851:	mov    eax,0x0
  406856:	jmp    406878 <flatcc_builder_extend_vector@@Base+0x5e>
  406858:	mov    rax,QWORD PTR [rbp-0x8]
  40685c:	mov    rax,QWORD PTR [rax+0x30]
  406860:	mov    eax,DWORD PTR [rax+0x10]
  406863:	mov    rdx,QWORD PTR [rbp-0x10]
  406867:	imul   edx,eax
  40686a:	mov    rax,QWORD PTR [rbp-0x8]
  40686e:	mov    esi,edx
  406870:	mov    rdi,rax
  406873:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  406878:	leave  
  406879:	ret    

000000000040687a <flatcc_builder_vector_push@@Base>:
  40687a:	endbr64 
  40687e:	push   rbp
  40687f:	mov    rbp,rsp
  406882:	sub    rsp,0x10
  406886:	mov    QWORD PTR [rbp-0x8],rdi
  40688a:	mov    QWORD PTR [rbp-0x10],rsi
  40688e:	mov    rax,QWORD PTR [rbp-0x8]
  406892:	mov    rax,QWORD PTR [rax+0x30]
  406896:	movzx  eax,WORD PTR [rax+0xe]
  40689a:	cmp    ax,0x4
  40689e:	je     4068bf <flatcc_builder_vector_push@@Base+0x45>
  4068a0:	lea    rcx,[rip+0x53f9]        # 40bca0 <flatcc_builder_padding_base@@Base+0x7c0>
  4068a7:	mov    edx,0x38b
  4068ac:	lea    rsi,[rip+0x4e2d]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4068b3:	lea    rdi,[rip+0x4f6e]        # 40b828 <flatcc_builder_padding_base@@Base+0x348>
  4068ba:	call   4031a0 <__assert_fail@plt>
  4068bf:	mov    rax,QWORD PTR [rbp-0x8]
  4068c3:	mov    rax,QWORD PTR [rax+0x30]
  4068c7:	mov    edx,DWORD PTR [rax+0x14]
  4068ca:	mov    rax,QWORD PTR [rbp-0x8]
  4068ce:	mov    rax,QWORD PTR [rax+0x30]
  4068d2:	mov    eax,DWORD PTR [rax+0x18]
  4068d5:	cmp    edx,eax
  4068d7:	jbe    406919 <flatcc_builder_vector_push@@Base+0x9f>
  4068d9:	mov    rax,QWORD PTR [rbp-0x8]
  4068dd:	mov    rax,QWORD PTR [rax+0x30]
  4068e1:	mov    edx,DWORD PTR [rax+0x14]
  4068e4:	mov    rax,QWORD PTR [rbp-0x8]
  4068e8:	mov    rax,QWORD PTR [rax+0x30]
  4068ec:	mov    eax,DWORD PTR [rax+0x18]
  4068ef:	cmp    edx,eax
  4068f1:	jbe    406912 <flatcc_builder_vector_push@@Base+0x98>
  4068f3:	lea    rcx,[rip+0x53a6]        # 40bca0 <flatcc_builder_padding_base@@Base+0x7c0>
  4068fa:	mov    edx,0x38c
  4068ff:	lea    rsi,[rip+0x4dda]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406906:	lea    rdi,[rip+0x4f4b]        # 40b858 <flatcc_builder_padding_base@@Base+0x378>
  40690d:	call   4031a0 <__assert_fail@plt>
  406912:	mov    eax,0x0
  406917:	jmp    40694f <flatcc_builder_vector_push@@Base+0xd5>
  406919:	mov    rax,QWORD PTR [rbp-0x8]
  40691d:	mov    rax,QWORD PTR [rax+0x30]
  406921:	mov    edx,DWORD PTR [rax+0x14]
  406924:	mov    rax,QWORD PTR [rbp-0x8]
  406928:	mov    rax,QWORD PTR [rax+0x30]
  40692c:	inc    edx
  40692e:	mov    DWORD PTR [rax+0x14],edx
  406931:	mov    rax,QWORD PTR [rbp-0x8]
  406935:	mov    rax,QWORD PTR [rax+0x30]
  406939:	mov    edx,DWORD PTR [rax+0x10]
  40693c:	mov    rcx,QWORD PTR [rbp-0x10]
  406940:	mov    rax,QWORD PTR [rbp-0x8]
  406944:	mov    rsi,rcx
  406947:	mov    rdi,rax
  40694a:	call   4048b7 <flatcc_builder_default_alloc@@Base+0x332>
  40694f:	leave  
  406950:	ret    

0000000000406951 <flatcc_builder_append_vector@@Base>:
  406951:	endbr64 
  406955:	push   rbp
  406956:	mov    rbp,rsp
  406959:	sub    rsp,0x20
  40695d:	mov    QWORD PTR [rbp-0x8],rdi
  406961:	mov    QWORD PTR [rbp-0x10],rsi
  406965:	mov    QWORD PTR [rbp-0x18],rdx
  406969:	mov    rax,QWORD PTR [rbp-0x8]
  40696d:	mov    rax,QWORD PTR [rax+0x30]
  406971:	movzx  eax,WORD PTR [rax+0xe]
  406975:	cmp    ax,0x4
  406979:	je     40699a <flatcc_builder_append_vector@@Base+0x49>
  40697b:	lea    rcx,[rip+0x533e]        # 40bcc0 <flatcc_builder_padding_base@@Base+0x7e0>
  406982:	mov    edx,0x393
  406987:	lea    rsi,[rip+0x4d52]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40698e:	lea    rdi,[rip+0x4e93]        # 40b828 <flatcc_builder_padding_base@@Base+0x348>
  406995:	call   4031a0 <__assert_fail@plt>
  40699a:	mov    rax,QWORD PTR [rbp-0x8]
  40699e:	mov    rax,QWORD PTR [rax+0x30]
  4069a2:	mov    edx,DWORD PTR [rax+0x18]
  4069a5:	mov    rax,QWORD PTR [rbp-0x18]
  4069a9:	mov    ecx,eax
  4069ab:	mov    rax,QWORD PTR [rbp-0x8]
  4069af:	mov    esi,ecx
  4069b1:	mov    rdi,rax
  4069b4:	call   406794 <flatcc_builder_end_struct@@Base+0x92>
  4069b9:	test   eax,eax
  4069bb:	je     4069c4 <flatcc_builder_append_vector@@Base+0x73>
  4069bd:	mov    eax,0x0
  4069c2:	jmp    4069e9 <flatcc_builder_append_vector@@Base+0x98>
  4069c4:	mov    rax,QWORD PTR [rbp-0x8]
  4069c8:	mov    rax,QWORD PTR [rax+0x30]
  4069cc:	mov    eax,DWORD PTR [rax+0x10]
  4069cf:	mov    rdx,QWORD PTR [rbp-0x18]
  4069d3:	imul   edx,eax
  4069d6:	mov    rcx,QWORD PTR [rbp-0x10]
  4069da:	mov    rax,QWORD PTR [rbp-0x8]
  4069de:	mov    rsi,rcx
  4069e1:	mov    rdi,rax
  4069e4:	call   4048b7 <flatcc_builder_default_alloc@@Base+0x332>
  4069e9:	leave  
  4069ea:	ret    

00000000004069eb <flatcc_builder_extend_offset_vector@@Base>:
  4069eb:	endbr64 
  4069ef:	push   rbp
  4069f0:	mov    rbp,rsp
  4069f3:	sub    rsp,0x10
  4069f7:	mov    QWORD PTR [rbp-0x8],rdi
  4069fb:	mov    QWORD PTR [rbp-0x10],rsi
  4069ff:	mov    rax,QWORD PTR [rbp-0x10]
  406a03:	mov    ecx,eax
  406a05:	mov    rax,QWORD PTR [rbp-0x8]
  406a09:	mov    edx,0x3fffffff
  406a0e:	mov    esi,ecx
  406a10:	mov    rdi,rax
  406a13:	call   406794 <flatcc_builder_end_struct@@Base+0x92>
  406a18:	test   eax,eax
  406a1a:	je     406a23 <flatcc_builder_extend_offset_vector@@Base+0x38>
  406a1c:	mov    eax,0x0
  406a21:	jmp    406a3c <flatcc_builder_extend_offset_vector@@Base+0x51>
  406a23:	mov    rax,QWORD PTR [rbp-0x10]
  406a27:	lea    edx,[rax*4+0x0]
  406a2e:	mov    rax,QWORD PTR [rbp-0x8]
  406a32:	mov    esi,edx
  406a34:	mov    rdi,rax
  406a37:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  406a3c:	leave  
  406a3d:	ret    

0000000000406a3e <flatcc_builder_offset_vector_push@@Base>:
  406a3e:	endbr64 
  406a42:	push   rbp
  406a43:	mov    rbp,rsp
  406a46:	sub    rsp,0x20
  406a4a:	mov    QWORD PTR [rbp-0x18],rdi
  406a4e:	mov    DWORD PTR [rbp-0x1c],esi
  406a51:	mov    rax,QWORD PTR [rbp-0x18]
  406a55:	mov    rax,QWORD PTR [rax+0x30]
  406a59:	movzx  eax,WORD PTR [rax+0xe]
  406a5d:	cmp    ax,0x5
  406a61:	je     406a82 <flatcc_builder_offset_vector_push@@Base+0x44>
  406a63:	lea    rcx,[rip+0x5276]        # 40bce0 <flatcc_builder_padding_base@@Base+0x800>
  406a6a:	mov    edx,0x3a6
  406a6f:	lea    rsi,[rip+0x4c6a]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406a76:	lea    rdi,[rip+0x4e1b]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  406a7d:	call   4031a0 <__assert_fail@plt>
  406a82:	mov    rax,QWORD PTR [rbp-0x18]
  406a86:	mov    rax,QWORD PTR [rax+0x30]
  406a8a:	mov    eax,DWORD PTR [rax+0x14]
  406a8d:	cmp    eax,0x3fffffff
  406a92:	jne    406a9b <flatcc_builder_offset_vector_push@@Base+0x5d>
  406a94:	mov    eax,0x0
  406a99:	jmp    406ae3 <flatcc_builder_offset_vector_push@@Base+0xa5>
  406a9b:	mov    rax,QWORD PTR [rbp-0x18]
  406a9f:	mov    rax,QWORD PTR [rax+0x30]
  406aa3:	mov    edx,DWORD PTR [rax+0x14]
  406aa6:	mov    rax,QWORD PTR [rbp-0x18]
  406aaa:	mov    rax,QWORD PTR [rax+0x30]
  406aae:	inc    edx
  406ab0:	mov    DWORD PTR [rax+0x14],edx
  406ab3:	mov    rax,QWORD PTR [rbp-0x18]
  406ab7:	mov    esi,0x4
  406abc:	mov    rdi,rax
  406abf:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  406ac4:	mov    QWORD PTR [rbp-0x8],rax
  406ac8:	cmp    QWORD PTR [rbp-0x8],0x0
  406acd:	jne    406ad6 <flatcc_builder_offset_vector_push@@Base+0x98>
  406acf:	mov    eax,0x0
  406ad4:	jmp    406ae3 <flatcc_builder_offset_vector_push@@Base+0xa5>
  406ad6:	mov    rax,QWORD PTR [rbp-0x8]
  406ada:	mov    edx,DWORD PTR [rbp-0x1c]
  406add:	mov    DWORD PTR [rax],edx
  406adf:	mov    rax,QWORD PTR [rbp-0x8]
  406ae3:	leave  
  406ae4:	ret    

0000000000406ae5 <flatcc_builder_append_offset_vector@@Base>:
  406ae5:	endbr64 
  406ae9:	push   rbp
  406aea:	mov    rbp,rsp
  406aed:	sub    rsp,0x20
  406af1:	mov    QWORD PTR [rbp-0x8],rdi
  406af5:	mov    QWORD PTR [rbp-0x10],rsi
  406af9:	mov    QWORD PTR [rbp-0x18],rdx
  406afd:	mov    rax,QWORD PTR [rbp-0x8]
  406b01:	mov    rax,QWORD PTR [rax+0x30]
  406b05:	movzx  eax,WORD PTR [rax+0xe]
  406b09:	cmp    ax,0x5
  406b0d:	je     406b2e <flatcc_builder_append_offset_vector@@Base+0x49>
  406b0f:	lea    rcx,[rip+0x520a]        # 40bd20 <flatcc_builder_padding_base@@Base+0x840>
  406b16:	mov    edx,0x3b4
  406b1b:	lea    rsi,[rip+0x4bbe]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406b22:	lea    rdi,[rip+0x4d6f]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  406b29:	call   4031a0 <__assert_fail@plt>
  406b2e:	mov    rax,QWORD PTR [rbp-0x18]
  406b32:	mov    ecx,eax
  406b34:	mov    rax,QWORD PTR [rbp-0x8]
  406b38:	mov    edx,0x3fffffff
  406b3d:	mov    esi,ecx
  406b3f:	mov    rdi,rax
  406b42:	call   406794 <flatcc_builder_end_struct@@Base+0x92>
  406b47:	test   eax,eax
  406b49:	je     406b52 <flatcc_builder_append_offset_vector@@Base+0x6d>
  406b4b:	mov    eax,0x0
  406b50:	jmp    406b70 <flatcc_builder_append_offset_vector@@Base+0x8b>
  406b52:	mov    rax,QWORD PTR [rbp-0x18]
  406b56:	lea    edx,[rax*4+0x0]
  406b5d:	mov    rcx,QWORD PTR [rbp-0x10]
  406b61:	mov    rax,QWORD PTR [rbp-0x8]
  406b65:	mov    rsi,rcx
  406b68:	mov    rdi,rax
  406b6b:	call   4048b7 <flatcc_builder_default_alloc@@Base+0x332>
  406b70:	leave  
  406b71:	ret    

0000000000406b72 <flatcc_builder_extend_string@@Base>:
  406b72:	endbr64 
  406b76:	push   rbp
  406b77:	mov    rbp,rsp
  406b7a:	sub    rsp,0x10
  406b7e:	mov    QWORD PTR [rbp-0x8],rdi
  406b82:	mov    QWORD PTR [rbp-0x10],rsi
  406b86:	mov    rax,QWORD PTR [rbp-0x8]
  406b8a:	mov    rax,QWORD PTR [rax+0x30]
  406b8e:	movzx  eax,WORD PTR [rax+0xe]
  406b92:	cmp    ax,0x6
  406b96:	je     406bb7 <flatcc_builder_extend_string@@Base+0x45>
  406b98:	lea    rcx,[rip+0x51b1]        # 40bd50 <flatcc_builder_padding_base@@Base+0x870>
  406b9f:	mov    edx,0x3bd
  406ba4:	lea    rsi,[rip+0x4b35]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406bab:	lea    rdi,[rip+0x4d1e]        # 40b8d0 <flatcc_builder_padding_base@@Base+0x3f0>
  406bb2:	call   4031a0 <__assert_fail@plt>
  406bb7:	mov    rax,QWORD PTR [rbp-0x10]
  406bbb:	mov    ecx,eax
  406bbd:	mov    rax,QWORD PTR [rbp-0x8]
  406bc1:	mov    edx,0xffffffff
  406bc6:	mov    esi,ecx
  406bc8:	mov    rdi,rax
  406bcb:	call   406794 <flatcc_builder_end_struct@@Base+0x92>
  406bd0:	test   eax,eax
  406bd2:	je     406bdb <flatcc_builder_extend_string@@Base+0x69>
  406bd4:	mov    eax,0x0
  406bd9:	jmp    406bef <flatcc_builder_extend_string@@Base+0x7d>
  406bdb:	mov    rax,QWORD PTR [rbp-0x10]
  406bdf:	mov    edx,eax
  406be1:	mov    rax,QWORD PTR [rbp-0x8]
  406be5:	mov    esi,edx
  406be7:	mov    rdi,rax
  406bea:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  406bef:	leave  
  406bf0:	ret    

0000000000406bf1 <flatcc_builder_append_string@@Base>:
  406bf1:	endbr64 
  406bf5:	push   rbp
  406bf6:	mov    rbp,rsp
  406bf9:	sub    rsp,0x20
  406bfd:	mov    QWORD PTR [rbp-0x8],rdi
  406c01:	mov    QWORD PTR [rbp-0x10],rsi
  406c05:	mov    QWORD PTR [rbp-0x18],rdx
  406c09:	mov    rax,QWORD PTR [rbp-0x8]
  406c0d:	mov    rax,QWORD PTR [rax+0x30]
  406c11:	movzx  eax,WORD PTR [rax+0xe]
  406c15:	cmp    ax,0x6
  406c19:	je     406c3a <flatcc_builder_append_string@@Base+0x49>
  406c1b:	lea    rcx,[rip+0x514e]        # 40bd70 <flatcc_builder_padding_base@@Base+0x890>
  406c22:	mov    edx,0x3c6
  406c27:	lea    rsi,[rip+0x4ab2]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406c2e:	lea    rdi,[rip+0x4c9b]        # 40b8d0 <flatcc_builder_padding_base@@Base+0x3f0>
  406c35:	call   4031a0 <__assert_fail@plt>
  406c3a:	mov    rax,QWORD PTR [rbp-0x18]
  406c3e:	mov    ecx,eax
  406c40:	mov    rax,QWORD PTR [rbp-0x8]
  406c44:	mov    edx,0xffffffff
  406c49:	mov    esi,ecx
  406c4b:	mov    rdi,rax
  406c4e:	call   406794 <flatcc_builder_end_struct@@Base+0x92>
  406c53:	test   eax,eax
  406c55:	je     406c5e <flatcc_builder_append_string@@Base+0x6d>
  406c57:	mov    eax,0x0
  406c5c:	jmp    406c77 <flatcc_builder_append_string@@Base+0x86>
  406c5e:	mov    rax,QWORD PTR [rbp-0x18]
  406c62:	mov    edx,eax
  406c64:	mov    rcx,QWORD PTR [rbp-0x10]
  406c68:	mov    rax,QWORD PTR [rbp-0x8]
  406c6c:	mov    rsi,rcx
  406c6f:	mov    rdi,rax
  406c72:	call   4048b7 <flatcc_builder_default_alloc@@Base+0x332>
  406c77:	leave  
  406c78:	ret    

0000000000406c79 <flatcc_builder_append_string_str@@Base>:
  406c79:	endbr64 
  406c7d:	push   rbp
  406c7e:	mov    rbp,rsp
  406c81:	sub    rsp,0x10
  406c85:	mov    QWORD PTR [rbp-0x8],rdi
  406c89:	mov    QWORD PTR [rbp-0x10],rsi
  406c8d:	mov    rax,QWORD PTR [rbp-0x10]
  406c91:	mov    rdi,rax
  406c94:	call   403170 <strlen@plt>
  406c99:	mov    rdx,rax
  406c9c:	mov    rcx,QWORD PTR [rbp-0x10]
  406ca0:	mov    rax,QWORD PTR [rbp-0x8]
  406ca4:	mov    rsi,rcx
  406ca7:	mov    rdi,rax
  406caa:	call   406bf1 <flatcc_builder_append_string@@Base>
  406caf:	leave  
  406cb0:	ret    

0000000000406cb1 <flatcc_builder_append_string_strn@@Base>:
  406cb1:	endbr64 
  406cb5:	push   rbp
  406cb6:	mov    rbp,rsp
  406cb9:	sub    rsp,0x20
  406cbd:	mov    QWORD PTR [rbp-0x8],rdi
  406cc1:	mov    QWORD PTR [rbp-0x10],rsi
  406cc5:	mov    QWORD PTR [rbp-0x18],rdx
  406cc9:	mov    rdx,QWORD PTR [rbp-0x18]
  406ccd:	mov    rax,QWORD PTR [rbp-0x10]
  406cd1:	mov    rsi,rdx
  406cd4:	mov    rdi,rax
  406cd7:	call   404545 <main@@Base+0x146>
  406cdc:	mov    rdx,rax
  406cdf:	mov    rcx,QWORD PTR [rbp-0x10]
  406ce3:	mov    rax,QWORD PTR [rbp-0x8]
  406ce7:	mov    rsi,rcx
  406cea:	mov    rdi,rax
  406ced:	call   406bf1 <flatcc_builder_append_string@@Base>
  406cf2:	leave  
  406cf3:	ret    

0000000000406cf4 <flatcc_builder_truncate_vector@@Base>:
  406cf4:	endbr64 
  406cf8:	push   rbp
  406cf9:	mov    rbp,rsp
  406cfc:	sub    rsp,0x10
  406d00:	mov    QWORD PTR [rbp-0x8],rdi
  406d04:	mov    QWORD PTR [rbp-0x10],rsi
  406d08:	mov    rax,QWORD PTR [rbp-0x8]
  406d0c:	mov    rax,QWORD PTR [rax+0x30]
  406d10:	movzx  eax,WORD PTR [rax+0xe]
  406d14:	cmp    ax,0x4
  406d18:	je     406d39 <flatcc_builder_truncate_vector@@Base+0x45>
  406d1a:	lea    rcx,[rip+0x506f]        # 40bd90 <flatcc_builder_padding_base@@Base+0x8b0>
  406d21:	mov    edx,0x3d9
  406d26:	lea    rsi,[rip+0x49b3]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406d2d:	lea    rdi,[rip+0x4af4]        # 40b828 <flatcc_builder_padding_base@@Base+0x348>
  406d34:	call   4031a0 <__assert_fail@plt>
  406d39:	mov    rax,QWORD PTR [rbp-0x8]
  406d3d:	mov    rax,QWORD PTR [rax+0x30]
  406d41:	mov    eax,DWORD PTR [rax+0x14]
  406d44:	mov    eax,eax
  406d46:	cmp    QWORD PTR [rbp-0x10],rax
  406d4a:	jbe    406d85 <flatcc_builder_truncate_vector@@Base+0x91>
  406d4c:	mov    rax,QWORD PTR [rbp-0x8]
  406d50:	mov    rax,QWORD PTR [rax+0x30]
  406d54:	mov    eax,DWORD PTR [rax+0x14]
  406d57:	mov    eax,eax
  406d59:	cmp    QWORD PTR [rbp-0x10],rax
  406d5d:	jbe    406d7e <flatcc_builder_truncate_vector@@Base+0x8a>
  406d5f:	lea    rcx,[rip+0x502a]        # 40bd90 <flatcc_builder_padding_base@@Base+0x8b0>
  406d66:	mov    edx,0x3da
  406d6b:	lea    rsi,[rip+0x496e]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406d72:	lea    rdi,[rip+0x4b87]        # 40b900 <flatcc_builder_padding_base@@Base+0x420>
  406d79:	call   4031a0 <__assert_fail@plt>
  406d7e:	mov    eax,0xffffffff
  406d83:	jmp    406dc8 <flatcc_builder_truncate_vector@@Base+0xd4>
  406d85:	mov    rax,QWORD PTR [rbp-0x8]
  406d89:	mov    rax,QWORD PTR [rax+0x30]
  406d8d:	mov    edx,DWORD PTR [rax+0x14]
  406d90:	mov    rax,QWORD PTR [rbp-0x10]
  406d94:	mov    ecx,eax
  406d96:	mov    rax,QWORD PTR [rbp-0x8]
  406d9a:	mov    rax,QWORD PTR [rax+0x30]
  406d9e:	sub    edx,ecx
  406da0:	mov    DWORD PTR [rax+0x14],edx
  406da3:	mov    rax,QWORD PTR [rbp-0x8]
  406da7:	mov    rax,QWORD PTR [rax+0x30]
  406dab:	mov    eax,DWORD PTR [rax+0x10]
  406dae:	mov    rdx,QWORD PTR [rbp-0x10]
  406db2:	imul   edx,eax
  406db5:	mov    rax,QWORD PTR [rbp-0x8]
  406db9:	mov    esi,edx
  406dbb:	mov    rdi,rax
  406dbe:	call   40486b <flatcc_builder_default_alloc@@Base+0x2e6>
  406dc3:	mov    eax,0x0
  406dc8:	leave  
  406dc9:	ret    

0000000000406dca <flatcc_builder_truncate_offset_vector@@Base>:
  406dca:	endbr64 
  406dce:	push   rbp
  406dcf:	mov    rbp,rsp
  406dd2:	sub    rsp,0x10
  406dd6:	mov    QWORD PTR [rbp-0x8],rdi
  406dda:	mov    QWORD PTR [rbp-0x10],rsi
  406dde:	mov    rax,QWORD PTR [rbp-0x8]
  406de2:	mov    rax,QWORD PTR [rax+0x30]
  406de6:	movzx  eax,WORD PTR [rax+0xe]
  406dea:	cmp    ax,0x5
  406dee:	je     406e0f <flatcc_builder_truncate_offset_vector@@Base+0x45>
  406df0:	lea    rcx,[rip+0x4fc9]        # 40bdc0 <flatcc_builder_padding_base@@Base+0x8e0>
  406df7:	mov    edx,0x3e2
  406dfc:	lea    rsi,[rip+0x48dd]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406e03:	lea    rdi,[rip+0x4a8e]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  406e0a:	call   4031a0 <__assert_fail@plt>
  406e0f:	mov    rax,QWORD PTR [rbp-0x8]
  406e13:	mov    rax,QWORD PTR [rax+0x30]
  406e17:	mov    eax,DWORD PTR [rax+0x14]
  406e1a:	mov    rdx,QWORD PTR [rbp-0x10]
  406e1e:	cmp    eax,edx
  406e20:	jae    406e5b <flatcc_builder_truncate_offset_vector@@Base+0x91>
  406e22:	mov    rax,QWORD PTR [rbp-0x8]
  406e26:	mov    rax,QWORD PTR [rax+0x30]
  406e2a:	mov    eax,DWORD PTR [rax+0x14]
  406e2d:	mov    rdx,QWORD PTR [rbp-0x10]
  406e31:	cmp    eax,edx
  406e33:	jae    406e54 <flatcc_builder_truncate_offset_vector@@Base+0x8a>
  406e35:	lea    rcx,[rip+0x4f84]        # 40bdc0 <flatcc_builder_padding_base@@Base+0x8e0>
  406e3c:	mov    edx,0x3e3
  406e41:	lea    rsi,[rip+0x4898]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406e48:	lea    rdi,[rip+0x4ad9]        # 40b928 <flatcc_builder_padding_base@@Base+0x448>
  406e4f:	call   4031a0 <__assert_fail@plt>
  406e54:	mov    eax,0xffffffff
  406e59:	jmp    406e9e <flatcc_builder_truncate_offset_vector@@Base+0xd4>
  406e5b:	mov    rax,QWORD PTR [rbp-0x8]
  406e5f:	mov    rax,QWORD PTR [rax+0x30]
  406e63:	mov    edx,DWORD PTR [rax+0x14]
  406e66:	mov    rax,QWORD PTR [rbp-0x10]
  406e6a:	mov    ecx,eax
  406e6c:	mov    rax,QWORD PTR [rbp-0x8]
  406e70:	mov    rax,QWORD PTR [rax+0x30]
  406e74:	sub    edx,ecx
  406e76:	mov    DWORD PTR [rax+0x14],edx
  406e79:	mov    rax,QWORD PTR [rbp-0x8]
  406e7d:	mov    rax,QWORD PTR [rax+0x30]
  406e81:	mov    eax,DWORD PTR [rax+0x10]
  406e84:	mov    rdx,QWORD PTR [rbp-0x10]
  406e88:	imul   edx,eax
  406e8b:	mov    rax,QWORD PTR [rbp-0x8]
  406e8f:	mov    esi,edx
  406e91:	mov    rdi,rax
  406e94:	call   40486b <flatcc_builder_default_alloc@@Base+0x2e6>
  406e99:	mov    eax,0x0
  406e9e:	leave  
  406e9f:	ret    

0000000000406ea0 <flatcc_builder_truncate_string@@Base>:
  406ea0:	endbr64 
  406ea4:	push   rbp
  406ea5:	mov    rbp,rsp
  406ea8:	sub    rsp,0x10
  406eac:	mov    QWORD PTR [rbp-0x8],rdi
  406eb0:	mov    QWORD PTR [rbp-0x10],rsi
  406eb4:	mov    rax,QWORD PTR [rbp-0x8]
  406eb8:	mov    rax,QWORD PTR [rax+0x30]
  406ebc:	movzx  eax,WORD PTR [rax+0xe]
  406ec0:	cmp    ax,0x6
  406ec4:	je     406ee5 <flatcc_builder_truncate_string@@Base+0x45>
  406ec6:	lea    rcx,[rip+0x4f23]        # 40bdf0 <flatcc_builder_padding_base@@Base+0x910>
  406ecd:	mov    edx,0x3eb
  406ed2:	lea    rsi,[rip+0x4807]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406ed9:	lea    rdi,[rip+0x49f0]        # 40b8d0 <flatcc_builder_padding_base@@Base+0x3f0>
  406ee0:	call   4031a0 <__assert_fail@plt>
  406ee5:	mov    rax,QWORD PTR [rbp-0x8]
  406ee9:	mov    rax,QWORD PTR [rax+0x30]
  406eed:	mov    eax,DWORD PTR [rax+0x14]
  406ef0:	mov    eax,eax
  406ef2:	cmp    QWORD PTR [rbp-0x10],rax
  406ef6:	jbe    406f31 <flatcc_builder_truncate_string@@Base+0x91>
  406ef8:	mov    rax,QWORD PTR [rbp-0x8]
  406efc:	mov    rax,QWORD PTR [rax+0x30]
  406f00:	mov    eax,DWORD PTR [rax+0x14]
  406f03:	mov    eax,eax
  406f05:	cmp    QWORD PTR [rbp-0x10],rax
  406f09:	jbe    406f2a <flatcc_builder_truncate_string@@Base+0x8a>
  406f0b:	lea    rcx,[rip+0x4ede]        # 40bdf0 <flatcc_builder_padding_base@@Base+0x910>
  406f12:	mov    edx,0x3ec
  406f17:	lea    rsi,[rip+0x47c2]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  406f1e:	lea    rdi,[rip+0x4a43]        # 40b968 <flatcc_builder_padding_base@@Base+0x488>
  406f25:	call   4031a0 <__assert_fail@plt>
  406f2a:	mov    eax,0xffffffff
  406f2f:	jmp    406f68 <flatcc_builder_truncate_string@@Base+0xc8>
  406f31:	mov    rax,QWORD PTR [rbp-0x8]
  406f35:	mov    rax,QWORD PTR [rax+0x30]
  406f39:	mov    edx,DWORD PTR [rax+0x14]
  406f3c:	mov    rax,QWORD PTR [rbp-0x10]
  406f40:	mov    ecx,eax
  406f42:	mov    rax,QWORD PTR [rbp-0x8]
  406f46:	mov    rax,QWORD PTR [rax+0x30]
  406f4a:	sub    edx,ecx
  406f4c:	mov    DWORD PTR [rax+0x14],edx
  406f4f:	mov    rax,QWORD PTR [rbp-0x10]
  406f53:	mov    edx,eax
  406f55:	mov    rax,QWORD PTR [rbp-0x8]
  406f59:	mov    esi,edx
  406f5b:	mov    rdi,rax
  406f5e:	call   40486b <flatcc_builder_default_alloc@@Base+0x2e6>
  406f63:	mov    eax,0x0
  406f68:	leave  
  406f69:	ret    

0000000000406f6a <flatcc_builder_start_vector@@Base>:
  406f6a:	endbr64 
  406f6e:	push   rbp
  406f6f:	mov    rbp,rsp
  406f72:	sub    rsp,0x20
  406f76:	mov    QWORD PTR [rbp-0x8],rdi
  406f7a:	mov    QWORD PTR [rbp-0x10],rsi
  406f7e:	mov    eax,edx
  406f80:	mov    QWORD PTR [rbp-0x20],rcx
  406f84:	mov    WORD PTR [rbp-0x14],ax
  406f88:	lea    rax,[rbp-0x14]
  406f8c:	mov    esi,0x4
  406f91:	mov    rdi,rax
  406f94:	call   405222 <flatcc_builder_clear@@Base+0xca>
  406f99:	movzx  eax,WORD PTR [rbp-0x14]
  406f9d:	movzx  edx,ax
  406fa0:	mov    rax,QWORD PTR [rbp-0x8]
  406fa4:	mov    esi,edx
  406fa6:	mov    rdi,rax
  406fa9:	call   405522 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  406fae:	test   eax,eax
  406fb0:	je     406fb9 <flatcc_builder_start_vector@@Base+0x4f>
  406fb2:	mov    eax,0xffffffff
  406fb7:	jmp    40700a <flatcc_builder_start_vector@@Base+0xa0>
  406fb9:	mov    rax,QWORD PTR [rbp-0x8]
  406fbd:	mov    rax,QWORD PTR [rax+0x30]
  406fc1:	mov    rdx,QWORD PTR [rbp-0x10]
  406fc5:	mov    DWORD PTR [rax+0x10],edx
  406fc8:	mov    rax,QWORD PTR [rbp-0x8]
  406fcc:	mov    rax,QWORD PTR [rax+0x30]
  406fd0:	mov    DWORD PTR [rax+0x14],0x0
  406fd7:	mov    rax,QWORD PTR [rbp-0x8]
  406fdb:	mov    rax,QWORD PTR [rax+0x30]
  406fdf:	mov    rdx,QWORD PTR [rbp-0x20]
  406fe3:	mov    DWORD PTR [rax+0x18],edx
  406fe6:	mov    rax,QWORD PTR [rbp-0x8]
  406fea:	mov    rax,QWORD PTR [rax+0x30]
  406fee:	mov    WORD PTR [rax+0xe],0x4
  406ff4:	mov    rax,QWORD PTR [rbp-0x8]
  406ff8:	mov    esi,0xfffffffc
  406ffd:	mov    rdi,rax
  407000:	call   4046f8 <flatcc_builder_default_alloc@@Base+0x173>
  407005:	mov    eax,0x0
  40700a:	leave  
  40700b:	ret    

000000000040700c <flatcc_builder_start_offset_vector@@Base>:
  40700c:	endbr64 
  407010:	push   rbp
  407011:	mov    rbp,rsp
  407014:	sub    rsp,0x10
  407018:	mov    QWORD PTR [rbp-0x8],rdi
  40701c:	mov    rax,QWORD PTR [rbp-0x8]
  407020:	mov    esi,0x4
  407025:	mov    rdi,rax
  407028:	call   405522 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40702d:	test   eax,eax
  40702f:	je     407038 <flatcc_builder_start_offset_vector@@Base+0x2c>
  407031:	mov    eax,0xffffffff
  407036:	jmp    40707a <flatcc_builder_start_offset_vector@@Base+0x6e>
  407038:	mov    rax,QWORD PTR [rbp-0x8]
  40703c:	mov    rax,QWORD PTR [rax+0x30]
  407040:	mov    DWORD PTR [rax+0x10],0x4
  407047:	mov    rax,QWORD PTR [rbp-0x8]
  40704b:	mov    rax,QWORD PTR [rax+0x30]
  40704f:	mov    DWORD PTR [rax+0x14],0x0
  407056:	mov    rax,QWORD PTR [rbp-0x8]
  40705a:	mov    rax,QWORD PTR [rax+0x30]
  40705e:	mov    WORD PTR [rax+0xe],0x5
  407064:	mov    rax,QWORD PTR [rbp-0x8]
  407068:	mov    esi,0xfffffffc
  40706d:	mov    rdi,rax
  407070:	call   4046f8 <flatcc_builder_default_alloc@@Base+0x173>
  407075:	mov    eax,0x0
  40707a:	leave  
  40707b:	ret    

000000000040707c <flatcc_builder_create_offset_vector@@Base>:
  40707c:	endbr64 
  407080:	push   rbp
  407081:	mov    rbp,rsp
  407084:	sub    rsp,0x30
  407088:	mov    QWORD PTR [rbp-0x18],rdi
  40708c:	mov    QWORD PTR [rbp-0x20],rsi
  407090:	mov    QWORD PTR [rbp-0x28],rdx
  407094:	mov    rax,QWORD PTR [rbp-0x18]
  407098:	mov    rdi,rax
  40709b:	call   40700c <flatcc_builder_start_offset_vector@@Base>
  4070a0:	test   eax,eax
  4070a2:	je     4070ab <flatcc_builder_create_offset_vector@@Base+0x2f>
  4070a4:	mov    eax,0x0
  4070a9:	jmp    4070fb <flatcc_builder_create_offset_vector@@Base+0x7f>
  4070ab:	mov    rdx,QWORD PTR [rbp-0x28]
  4070af:	mov    rax,QWORD PTR [rbp-0x18]
  4070b3:	mov    rsi,rdx
  4070b6:	mov    rdi,rax
  4070b9:	call   4069eb <flatcc_builder_extend_offset_vector@@Base>
  4070be:	mov    QWORD PTR [rbp-0x8],rax
  4070c2:	cmp    QWORD PTR [rbp-0x8],0x0
  4070c7:	jne    4070d0 <flatcc_builder_create_offset_vector@@Base+0x54>
  4070c9:	mov    eax,0x0
  4070ce:	jmp    4070fb <flatcc_builder_create_offset_vector@@Base+0x7f>
  4070d0:	mov    rax,QWORD PTR [rbp-0x28]
  4070d4:	lea    rdx,[rax*4+0x0]
  4070dc:	mov    rcx,QWORD PTR [rbp-0x20]
  4070e0:	mov    rax,QWORD PTR [rbp-0x8]
  4070e4:	mov    rsi,rcx
  4070e7:	mov    rdi,rax
  4070ea:	call   403200 <memcpy@plt>
  4070ef:	mov    rax,QWORD PTR [rbp-0x18]
  4070f3:	mov    rdi,rax
  4070f6:	call   408609 <flatcc_builder_end_offset_vector@@Base>
  4070fb:	leave  
  4070fc:	ret    

00000000004070fd <flatcc_builder_start_string@@Base>:
  4070fd:	endbr64 
  407101:	push   rbp
  407102:	mov    rbp,rsp
  407105:	sub    rsp,0x10
  407109:	mov    QWORD PTR [rbp-0x8],rdi
  40710d:	mov    rax,QWORD PTR [rbp-0x8]
  407111:	mov    esi,0x1
  407116:	mov    rdi,rax
  407119:	call   405522 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  40711e:	test   eax,eax
  407120:	je     407129 <flatcc_builder_start_string@@Base+0x2c>
  407122:	mov    eax,0xffffffff
  407127:	jmp    40716b <flatcc_builder_start_string@@Base+0x6e>
  407129:	mov    rax,QWORD PTR [rbp-0x8]
  40712d:	mov    rax,QWORD PTR [rax+0x30]
  407131:	mov    DWORD PTR [rax+0x10],0x1
  407138:	mov    rax,QWORD PTR [rbp-0x8]
  40713c:	mov    rax,QWORD PTR [rax+0x30]
  407140:	mov    DWORD PTR [rax+0x14],0x0
  407147:	mov    rax,QWORD PTR [rbp-0x8]
  40714b:	mov    rax,QWORD PTR [rax+0x30]
  40714f:	mov    WORD PTR [rax+0xe],0x6
  407155:	mov    rax,QWORD PTR [rbp-0x8]
  407159:	mov    esi,0xfffffffc
  40715e:	mov    rdi,rax
  407161:	call   4046f8 <flatcc_builder_default_alloc@@Base+0x173>
  407166:	mov    eax,0x0
  40716b:	leave  
  40716c:	ret    

000000000040716d <flatcc_builder_reserve_table@@Base>:
  40716d:	endbr64 
  407171:	push   rbp
  407172:	mov    rbp,rsp
  407175:	sub    rsp,0x10
  407179:	mov    QWORD PTR [rbp-0x8],rdi
  40717d:	mov    DWORD PTR [rbp-0xc],esi
  407180:	cmp    DWORD PTR [rbp-0xc],0x0
  407184:	jns    4071a5 <flatcc_builder_reserve_table@@Base+0x38>
  407186:	lea    rcx,[rip+0x4c83]        # 40be10 <flatcc_builder_padding_base@@Base+0x930>
  40718d:	mov    edx,0x429
  407192:	lea    rsi,[rip+0x4547]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407199:	lea    rdi,[rip+0x47ea]        # 40b98a <flatcc_builder_padding_base@@Base+0x4aa>
  4071a0:	call   4031a0 <__assert_fail@plt>
  4071a5:	mov    edx,DWORD PTR [rbp-0xc]
  4071a8:	mov    rax,QWORD PTR [rbp-0x8]
  4071ac:	mov    esi,edx
  4071ae:	mov    rdi,rax
  4071b1:	call   404b4c <flatcc_builder_default_alloc@@Base+0x5c7>
  4071b6:	leave  
  4071b7:	ret    

00000000004071b8 <flatcc_builder_start_table@@Base>:
  4071b8:	endbr64 
  4071bc:	push   rbp
  4071bd:	mov    rbp,rsp
  4071c0:	sub    rsp,0x10
  4071c4:	mov    QWORD PTR [rbp-0x8],rdi
  4071c8:	mov    DWORD PTR [rbp-0xc],esi
  4071cb:	mov    rax,QWORD PTR [rbp-0x8]
  4071cf:	mov    esi,0x4
  4071d4:	mov    rdi,rax
  4071d7:	call   405522 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  4071dc:	test   eax,eax
  4071de:	je     4071ea <flatcc_builder_start_table@@Base+0x32>
  4071e0:	mov    eax,0xffffffff
  4071e5:	jmp    4072b4 <flatcc_builder_start_table@@Base+0xfc>
  4071ea:	mov    rax,QWORD PTR [rbp-0x8]
  4071ee:	mov    rax,QWORD PTR [rax+0x8]
  4071f2:	mov    rdx,rax
  4071f5:	mov    rax,QWORD PTR [rbp-0x8]
  4071f9:	mov    rax,QWORD PTR [rax+0x58]
  4071fd:	sub    rdx,rax
  407200:	mov    rax,QWORD PTR [rbp-0x8]
  407204:	mov    rax,QWORD PTR [rax+0x30]
  407208:	mov    DWORD PTR [rax+0x10],edx
  40720b:	mov    rax,QWORD PTR [rbp-0x8]
  40720f:	mov    rax,QWORD PTR [rax]
  407212:	mov    rdx,rax
  407215:	mov    rax,QWORD PTR [rbp-0x8]
  407219:	mov    rax,QWORD PTR [rax+0x88]
  407220:	sub    rdx,rax
  407223:	mov    rax,QWORD PTR [rbp-0x8]
  407227:	mov    rax,QWORD PTR [rax+0x30]
  40722b:	mov    DWORD PTR [rax+0x14],edx
  40722e:	mov    rax,QWORD PTR [rbp-0x8]
  407232:	mov    rax,QWORD PTR [rax+0x30]
  407236:	mov    rdx,QWORD PTR [rbp-0x8]
  40723a:	mov    edx,DWORD PTR [rdx+0x14]
  40723d:	mov    DWORD PTR [rax+0x18],edx
  407240:	mov    rax,QWORD PTR [rbp-0x8]
  407244:	mov    rdx,QWORD PTR [rax+0x30]
  407248:	mov    rax,QWORD PTR [rbp-0x8]
  40724c:	movzx  eax,WORD PTR [rax+0x10]
  407250:	mov    WORD PTR [rdx+0x1c],ax
  407254:	mov    rax,QWORD PTR [rbp-0x8]
  407258:	mov    DWORD PTR [rax+0x14],0x0
  40725f:	mov    rax,QWORD PTR [rbp-0x8]
  407263:	mov    DWORD PTR [rax+0x14],0x2f693b52
  40726a:	mov    rax,QWORD PTR [rbp-0x8]
  40726e:	mov    WORD PTR [rax+0x10],0x0
  407274:	mov    rax,QWORD PTR [rbp-0x8]
  407278:	mov    rax,QWORD PTR [rax+0x30]
  40727c:	mov    WORD PTR [rax+0xe],0x3
  407282:	mov    edx,DWORD PTR [rbp-0xc]
  407285:	mov    rax,QWORD PTR [rbp-0x8]
  407289:	mov    esi,edx
  40728b:	mov    rdi,rax
  40728e:	call   404b4c <flatcc_builder_default_alloc@@Base+0x5c7>
  407293:	test   eax,eax
  407295:	je     40729e <flatcc_builder_start_table@@Base+0xe6>
  407297:	mov    eax,0xffffffff
  40729c:	jmp    4072b4 <flatcc_builder_start_table@@Base+0xfc>
  40729e:	mov    rax,QWORD PTR [rbp-0x8]
  4072a2:	mov    esi,0xfffc
  4072a7:	mov    rdi,rax
  4072aa:	call   4046f8 <flatcc_builder_default_alloc@@Base+0x173>
  4072af:	mov    eax,0x0
  4072b4:	leave  
  4072b5:	ret    

00000000004072b6 <flatcc_builder_create_vtable@@Base>:
  4072b6:	endbr64 
  4072ba:	push   rbp
  4072bb:	mov    rbp,rsp
  4072be:	sub    rsp,0xd0
  4072c5:	mov    QWORD PTR [rbp-0xb8],rdi
  4072cc:	mov    QWORD PTR [rbp-0xc0],rsi
  4072d3:	mov    eax,edx
  4072d5:	mov    WORD PTR [rbp-0xc4],ax
  4072dc:	mov    rax,QWORD PTR fs:0x28
  4072e5:	mov    QWORD PTR [rbp-0x8],rax
  4072e9:	xor    eax,eax
  4072eb:	mov    QWORD PTR [rbp-0xa0],0x0
  4072f6:	mov    DWORD PTR [rbp-0x98],0x0
  407300:	cmp    WORD PTR [rbp-0xc4],0x0
  407308:	je     407371 <flatcc_builder_create_vtable@@Base+0xbb>
  40730a:	mov    rdx,QWORD PTR [rbp-0xa0]
  407311:	movzx  eax,WORD PTR [rbp-0xc4]
  407318:	add    rax,rdx
  40731b:	mov    QWORD PTR [rbp-0xa0],rax
  407322:	mov    eax,DWORD PTR [rbp-0x98]
  407328:	cdqe   
  40732a:	shl    rax,0x4
  40732e:	add    rax,rbp
  407331:	lea    rdx,[rax-0x90]
  407338:	mov    rax,QWORD PTR [rbp-0xc0]
  40733f:	mov    QWORD PTR [rdx],rax
  407342:	mov    edx,DWORD PTR [rbp-0x98]
  407348:	movzx  eax,WORD PTR [rbp-0xc4]
  40734f:	movsxd rdx,edx
  407352:	shl    rdx,0x4
  407356:	add    rdx,rbp
  407359:	sub    rdx,0x88
  407360:	mov    QWORD PTR [rdx],rax
  407363:	mov    eax,DWORD PTR [rbp-0x98]
  407369:	inc    eax
  40736b:	mov    DWORD PTR [rbp-0x98],eax
  407371:	mov    rax,QWORD PTR [rbp-0xb8]
  407378:	mov    eax,DWORD PTR [rax+0x100]
  40737e:	test   eax,eax
  407380:	jne    4073c2 <flatcc_builder_create_vtable@@Base+0x10c>
  407382:	mov    rax,QWORD PTR [rbp-0xb8]
  407389:	mov    eax,DWORD PTR [rax+0x124]
  40738f:	test   eax,eax
  407391:	jne    4073c2 <flatcc_builder_create_vtable@@Base+0x10c>
  407393:	lea    rdx,[rbp-0xa0]
  40739a:	mov    rax,QWORD PTR [rbp-0xb8]
  4073a1:	mov    rsi,rdx
  4073a4:	mov    rdi,rax
  4073a7:	call   4058ed <flatcc_builder_get_user_frame_ptr@@Base+0x3f1>
  4073ac:	mov    DWORD PTR [rbp-0xa4],eax
  4073b2:	cmp    DWORD PTR [rbp-0xa4],0x0
  4073b9:	jne    4073f7 <flatcc_builder_create_vtable@@Base+0x141>
  4073bb:	mov    eax,0x0
  4073c0:	jmp    4073fd <flatcc_builder_create_vtable@@Base+0x147>
  4073c2:	lea    rdx,[rbp-0xa0]
  4073c9:	mov    rax,QWORD PTR [rbp-0xb8]
  4073d0:	mov    rsi,rdx
  4073d3:	mov    rdi,rax
  4073d6:	call   40580e <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4073db:	mov    DWORD PTR [rbp-0xa4],eax
  4073e1:	cmp    DWORD PTR [rbp-0xa4],0x0
  4073e8:	jne    4073f1 <flatcc_builder_create_vtable@@Base+0x13b>
  4073ea:	mov    eax,0x0
  4073ef:	jmp    4073fd <flatcc_builder_create_vtable@@Base+0x147>
  4073f1:	inc    DWORD PTR [rbp-0xa4]
  4073f7:	mov    eax,DWORD PTR [rbp-0xa4]
  4073fd:	mov    rcx,QWORD PTR [rbp-0x8]
  407401:	xor    rcx,QWORD PTR fs:0x28
  40740a:	je     407411 <flatcc_builder_create_vtable@@Base+0x15b>
  40740c:	call   403180 <__stack_chk_fail@plt>
  407411:	leave  
  407412:	ret    

0000000000407413 <flatcc_builder_create_cached_vtable@@Base>:
  407413:	endbr64 
  407417:	push   rbp
  407418:	mov    rbp,rsp
  40741b:	sub    rsp,0x50
  40741f:	mov    QWORD PTR [rbp-0x38],rdi
  407423:	mov    QWORD PTR [rbp-0x40],rsi
  407427:	mov    eax,edx
  407429:	mov    DWORD PTR [rbp-0x48],ecx
  40742c:	mov    WORD PTR [rbp-0x44],ax
  407430:	mov    edx,DWORD PTR [rbp-0x48]
  407433:	mov    rax,QWORD PTR [rbp-0x38]
  407437:	mov    esi,edx
  407439:	mov    rdi,rax
  40743c:	call   404d5b <flatcc_builder_default_alloc@@Base+0x7d6>
  407441:	mov    QWORD PTR [rbp-0x18],rax
  407445:	cmp    QWORD PTR [rbp-0x18],0x0
  40744a:	jne    407456 <flatcc_builder_create_cached_vtable@@Base+0x43>
  40744c:	mov    eax,0x0
  407451:	jmp    4076f7 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407456:	mov    rax,QWORD PTR [rbp-0x18]
  40745a:	mov    QWORD PTR [rbp-0x20],rax
  40745e:	mov    rax,QWORD PTR [rbp-0x20]
  407462:	mov    eax,DWORD PTR [rax]
  407464:	mov    DWORD PTR [rbp-0x2c],eax
  407467:	mov    QWORD PTR [rbp-0x28],0x0
  40746f:	jmp    40754e <flatcc_builder_create_cached_vtable@@Base+0x13b>
  407474:	mov    rax,QWORD PTR [rbp-0x38]
  407478:	mov    rdx,QWORD PTR [rax+0xb8]
  40747f:	mov    eax,DWORD PTR [rbp-0x2c]
  407482:	add    rax,rdx
  407485:	mov    QWORD PTR [rbp-0x10],rax
  407489:	mov    rax,QWORD PTR [rbp-0x38]
  40748d:	mov    rdx,QWORD PTR [rax+0x78]
  407491:	mov    rax,QWORD PTR [rbp-0x10]
  407495:	mov    eax,DWORD PTR [rax+0x8]
  407498:	mov    eax,eax
  40749a:	add    rax,rdx
  40749d:	mov    QWORD PTR [rbp-0x8],rax
  4074a1:	mov    rax,QWORD PTR [rbp-0x8]
  4074a5:	movzx  eax,WORD PTR [rax]
  4074a8:	cmp    WORD PTR [rbp-0x44],ax
  4074ac:	jne    4074c9 <flatcc_builder_create_cached_vtable@@Base+0xb6>
  4074ae:	movzx  edx,WORD PTR [rbp-0x44]
  4074b2:	mov    rcx,QWORD PTR [rbp-0x8]
  4074b6:	mov    rax,QWORD PTR [rbp-0x40]
  4074ba:	mov    rsi,rcx
  4074bd:	mov    rdi,rax
  4074c0:	call   4031e0 <memcmp@plt>
  4074c5:	test   eax,eax
  4074c7:	je     4074e1 <flatcc_builder_create_cached_vtable@@Base+0xce>
  4074c9:	mov    rax,QWORD PTR [rbp-0x10]
  4074cd:	add    rax,0xc
  4074d1:	mov    QWORD PTR [rbp-0x20],rax
  4074d5:	mov    rax,QWORD PTR [rbp-0x10]
  4074d9:	mov    eax,DWORD PTR [rax+0xc]
  4074dc:	mov    DWORD PTR [rbp-0x2c],eax
  4074df:	jmp    40754e <flatcc_builder_create_cached_vtable@@Base+0x13b>
  4074e1:	mov    rax,QWORD PTR [rbp-0x10]
  4074e5:	mov    edx,DWORD PTR [rax+0x4]
  4074e8:	mov    rax,QWORD PTR [rbp-0x38]
  4074ec:	mov    eax,DWORD PTR [rax+0x100]
  4074f2:	cmp    edx,eax
  4074f4:	je     407516 <flatcc_builder_create_cached_vtable@@Base+0x103>
  4074f6:	mov    rax,QWORD PTR [rbp-0x10]
  4074fa:	mov    QWORD PTR [rbp-0x28],rax
  4074fe:	mov    rax,QWORD PTR [rbp-0x10]
  407502:	add    rax,0xc
  407506:	mov    QWORD PTR [rbp-0x20],rax
  40750a:	mov    rax,QWORD PTR [rbp-0x10]
  40750e:	mov    eax,DWORD PTR [rax+0xc]
  407511:	mov    DWORD PTR [rbp-0x2c],eax
  407514:	jmp    40754e <flatcc_builder_create_cached_vtable@@Base+0x13b>
  407516:	mov    rax,QWORD PTR [rbp-0x20]
  40751a:	cmp    rax,QWORD PTR [rbp-0x18]
  40751e:	je     407543 <flatcc_builder_create_cached_vtable@@Base+0x130>
  407520:	mov    rax,QWORD PTR [rbp-0x10]
  407524:	mov    edx,DWORD PTR [rax+0xc]
  407527:	mov    rax,QWORD PTR [rbp-0x20]
  40752b:	mov    DWORD PTR [rax],edx
  40752d:	mov    rax,QWORD PTR [rbp-0x18]
  407531:	mov    edx,DWORD PTR [rax]
  407533:	mov    rax,QWORD PTR [rbp-0x10]
  407537:	mov    DWORD PTR [rax+0xc],edx
  40753a:	mov    rax,QWORD PTR [rbp-0x18]
  40753e:	mov    edx,DWORD PTR [rbp-0x2c]
  407541:	mov    DWORD PTR [rax],edx
  407543:	mov    rax,QWORD PTR [rbp-0x10]
  407547:	mov    eax,DWORD PTR [rax]
  407549:	jmp    4076f7 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  40754e:	cmp    DWORD PTR [rbp-0x2c],0x0
  407552:	jne    407474 <flatcc_builder_create_cached_vtable@@Base+0x61>
  407558:	mov    rax,QWORD PTR [rbp-0x38]
  40755c:	mov    eax,DWORD PTR [rax+0xe4]
  407562:	mov    edx,eax
  407564:	mov    rax,QWORD PTR [rbp-0x38]
  407568:	mov    r8d,0x0
  40756e:	mov    ecx,0x10
  407573:	mov    esi,0x6
  407578:	mov    rdi,rax
  40757b:	call   404a9b <flatcc_builder_default_alloc@@Base+0x516>
  407580:	mov    QWORD PTR [rbp-0x10],rax
  407584:	cmp    QWORD PTR [rbp-0x10],0x0
  407589:	jne    407595 <flatcc_builder_create_cached_vtable@@Base+0x182>
  40758b:	mov    eax,0x0
  407590:	jmp    4076f7 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407595:	mov    rax,QWORD PTR [rbp-0x38]
  407599:	mov    eax,DWORD PTR [rax+0xe4]
  40759f:	mov    DWORD PTR [rbp-0x2c],eax
  4075a2:	mov    rax,QWORD PTR [rbp-0x38]
  4075a6:	mov    eax,DWORD PTR [rax+0xe4]
  4075ac:	lea    edx,[rax+0x10]
  4075af:	mov    rax,QWORD PTR [rbp-0x38]
  4075b3:	mov    DWORD PTR [rax+0xe4],edx
  4075b9:	mov    rax,QWORD PTR [rbp-0x38]
  4075bd:	mov    edx,DWORD PTR [rax+0x100]
  4075c3:	mov    rax,QWORD PTR [rbp-0x10]
  4075c7:	mov    DWORD PTR [rax+0x4],edx
  4075ca:	mov    rax,QWORD PTR [rbp-0x18]
  4075ce:	mov    edx,DWORD PTR [rax]
  4075d0:	mov    rax,QWORD PTR [rbp-0x10]
  4075d4:	mov    DWORD PTR [rax+0xc],edx
  4075d7:	mov    rax,QWORD PTR [rbp-0x18]
  4075db:	mov    edx,DWORD PTR [rbp-0x2c]
  4075de:	mov    DWORD PTR [rax],edx
  4075e0:	movzx  edx,WORD PTR [rbp-0x44]
  4075e4:	mov    rcx,QWORD PTR [rbp-0x40]
  4075e8:	mov    rax,QWORD PTR [rbp-0x38]
  4075ec:	mov    rsi,rcx
  4075ef:	mov    rdi,rax
  4075f2:	call   4072b6 <flatcc_builder_create_vtable@@Base>
  4075f7:	mov    edx,eax
  4075f9:	mov    rax,QWORD PTR [rbp-0x10]
  4075fd:	mov    DWORD PTR [rax],edx
  4075ff:	mov    rax,QWORD PTR [rbp-0x10]
  407603:	mov    eax,DWORD PTR [rax]
  407605:	test   eax,eax
  407607:	jne    407613 <flatcc_builder_create_cached_vtable@@Base+0x200>
  407609:	mov    eax,0x0
  40760e:	jmp    4076f7 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  407613:	cmp    QWORD PTR [rbp-0x28],0x0
  407618:	je     40762d <flatcc_builder_create_cached_vtable@@Base+0x21a>
  40761a:	mov    rax,QWORD PTR [rbp-0x28]
  40761e:	mov    edx,DWORD PTR [rax+0x8]
  407621:	mov    rax,QWORD PTR [rbp-0x10]
  407625:	mov    DWORD PTR [rax+0x8],edx
  407628:	jmp    4076f1 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  40762d:	mov    rax,QWORD PTR [rbp-0x38]
  407631:	mov    rax,QWORD PTR [rax+0x118]
  407638:	test   rax,rax
  40763b:	je     407670 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  40763d:	mov    rax,QWORD PTR [rbp-0x38]
  407641:	mov    rdx,QWORD PTR [rax+0x118]
  407648:	mov    rax,QWORD PTR [rbp-0x38]
  40764c:	mov    ecx,DWORD PTR [rax+0xe0]
  407652:	movzx  eax,WORD PTR [rbp-0x44]
  407656:	add    eax,ecx
  407658:	mov    eax,eax
  40765a:	cmp    rdx,rax
  40765d:	jae    407670 <flatcc_builder_create_cached_vtable@@Base+0x25d>
  40765f:	mov    rax,QWORD PTR [rbp-0x38]
  407663:	mov    rdi,rax
  407666:	call   404dcf <flatcc_builder_flush_vtable_cache@@Base>
  40766b:	jmp    4076f1 <flatcc_builder_create_cached_vtable@@Base+0x2de>
  407670:	movzx  edx,WORD PTR [rbp-0x44]
  407674:	mov    rax,QWORD PTR [rbp-0x38]
  407678:	mov    eax,DWORD PTR [rax+0xe0]
  40767e:	mov    esi,eax
  407680:	mov    rax,QWORD PTR [rbp-0x38]
  407684:	mov    r8d,0x0
  40768a:	mov    rcx,rdx
  40768d:	mov    rdx,rsi
  407690:	mov    esi,0x2
  407695:	mov    rdi,rax
  407698:	call   404a9b <flatcc_builder_default_alloc@@Base+0x516>
  40769d:	mov    QWORD PTR [rbp-0x8],rax
  4076a1:	cmp    QWORD PTR [rbp-0x8],0x0
  4076a6:	jne    4076af <flatcc_builder_create_cached_vtable@@Base+0x29c>
  4076a8:	mov    eax,0xffffffff
  4076ad:	jmp    4076f7 <flatcc_builder_create_cached_vtable@@Base+0x2e4>
  4076af:	mov    rax,QWORD PTR [rbp-0x38]
  4076b3:	mov    edx,DWORD PTR [rax+0xe0]
  4076b9:	mov    rax,QWORD PTR [rbp-0x10]
  4076bd:	mov    DWORD PTR [rax+0x8],edx
  4076c0:	mov    rax,QWORD PTR [rbp-0x38]
  4076c4:	mov    edx,DWORD PTR [rax+0xe0]
  4076ca:	movzx  eax,WORD PTR [rbp-0x44]
  4076ce:	add    edx,eax
  4076d0:	mov    rax,QWORD PTR [rbp-0x38]
  4076d4:	mov    DWORD PTR [rax+0xe0],edx
  4076da:	movzx  edx,WORD PTR [rbp-0x44]
  4076de:	mov    rcx,QWORD PTR [rbp-0x40]
  4076e2:	mov    rax,QWORD PTR [rbp-0x8]
  4076e6:	mov    rsi,rcx
  4076e9:	mov    rdi,rax
  4076ec:	call   403200 <memcpy@plt>
  4076f1:	mov    rax,QWORD PTR [rbp-0x10]
  4076f5:	mov    eax,DWORD PTR [rax]
  4076f7:	leave  
  4076f8:	ret    

00000000004076f9 <flatcc_builder_create_table@@Base>:
  4076f9:	endbr64 
  4076fd:	push   rbp
  4076fe:	mov    rbp,rsp
  407701:	sub    rsp,0x100
  407708:	mov    QWORD PTR [rbp-0xd8],rdi
  40770f:	mov    QWORD PTR [rbp-0xe0],rsi
  407716:	mov    QWORD PTR [rbp-0xe8],rdx
  40771d:	mov    eax,ecx
  40771f:	mov    QWORD PTR [rbp-0xf8],r8
  407726:	mov    DWORD PTR [rbp-0xf0],r9d
  40772d:	mov    WORD PTR [rbp-0xec],ax
  407734:	mov    rax,QWORD PTR fs:0x28
  40773d:	mov    QWORD PTR [rbp-0x8],rax
  407741:	xor    eax,eax
  407743:	cmp    DWORD PTR [rbp-0xf0],0x0
  40774a:	jns    40776b <flatcc_builder_create_table@@Base+0x72>
  40774c:	lea    rcx,[rip+0x46dd]        # 40be30 <flatcc_builder_padding_base@@Base+0x950>
  407753:	mov    edx,0x4d5
  407758:	lea    rsi,[rip+0x3f81]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40775f:	lea    rdi,[rip+0x422f]        # 40b995 <flatcc_builder_padding_base@@Base+0x4b5>
  407766:	call   4031a0 <__assert_fail@plt>
  40776b:	mov    eax,DWORD PTR [rbp+0x10]
  40776e:	and    eax,0x1
  407771:	test   eax,eax
  407773:	jne    407794 <flatcc_builder_create_table@@Base+0x9b>
  407775:	lea    rcx,[rip+0x46b4]        # 40be30 <flatcc_builder_padding_base@@Base+0x950>
  40777c:	mov    edx,0x4db
  407781:	lea    rsi,[rip+0x3f58]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407788:	lea    rdi,[rip+0x4218]        # 40b9a7 <flatcc_builder_padding_base@@Base+0x4c7>
  40778f:	call   4031a0 <__assert_fail@plt>
  407794:	lea    rax,[rbp-0xec]
  40779b:	mov    esi,0x4
  4077a0:	mov    rdi,rax
  4077a3:	call   405222 <flatcc_builder_clear@@Base+0xca>
  4077a8:	movzx  eax,WORD PTR [rbp-0xec]
  4077af:	movzx  edx,ax
  4077b2:	mov    rax,QWORD PTR [rbp-0xd8]
  4077b9:	mov    esi,edx
  4077bb:	mov    rdi,rax
  4077be:	call   4051f1 <flatcc_builder_clear@@Base+0x99>
  4077c3:	movzx  eax,WORD PTR [rbp-0xec]
  4077ca:	movzx  edx,ax
  4077cd:	mov    rax,QWORD PTR [rbp-0xe8]
  4077d4:	mov    ecx,eax
  4077d6:	mov    rax,QWORD PTR [rbp-0xd8]
  4077dd:	mov    esi,ecx
  4077df:	mov    rdi,rax
  4077e2:	call   4057c4 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4077e7:	mov    DWORD PTR [rbp-0xbc],eax
  4077ed:	mov    rax,QWORD PTR [rbp-0xd8]
  4077f4:	mov    eax,DWORD PTR [rax+0xf0]
  4077fa:	mov    edx,eax
  4077fc:	mov    rax,QWORD PTR [rbp-0xe8]
  407803:	mov    ecx,eax
  407805:	mov    eax,DWORD PTR [rbp-0xbc]
  40780b:	add    eax,ecx
  40780d:	sub    edx,eax
  40780f:	mov    eax,edx
  407811:	sub    eax,0x4
  407814:	mov    DWORD PTR [rbp-0xb8],eax
  40781a:	mov    eax,DWORD PTR [rbp+0x10]
  40781d:	dec    eax
  40781f:	mov    DWORD PTR [rbp-0xb4],eax
  407825:	mov    eax,DWORD PTR [rbp-0xb8]
  40782b:	sub    eax,DWORD PTR [rbp-0xb4]
  407831:	mov    DWORD PTR [rbp-0xb0],eax
  407837:	mov    eax,DWORD PTR [rbp-0xb8]
  40783d:	sub    eax,DWORD PTR [rbp-0xb0]
  407843:	cmp    DWORD PTR [rbp-0xb4],eax
  407849:	je     407855 <flatcc_builder_create_table@@Base+0x15c>
  40784b:	mov    eax,0xffffffff
  407850:	jmp    407a75 <flatcc_builder_create_table@@Base+0x37c>
  407855:	mov    eax,DWORD PTR [rbp-0xb0]
  40785b:	mov    edi,eax
  40785d:	call   4044c5 <main@@Base+0xc6>
  407862:	mov    DWORD PTR [rbp-0xc4],eax
  407868:	mov    DWORD PTR [rbp-0xc0],0x0
  407872:	jmp    4078fc <flatcc_builder_create_table@@Base+0x203>
  407877:	mov    eax,DWORD PTR [rbp-0xc0]
  40787d:	cdqe   
  40787f:	lea    rdx,[rax+rax*1]
  407883:	mov    rax,QWORD PTR [rbp-0xf8]
  40788a:	add    rax,rdx
  40788d:	movzx  eax,WORD PTR [rax]
  407890:	movzx  edx,ax
  407893:	mov    rax,QWORD PTR [rbp-0xe0]
  40789a:	add    rax,rdx
  40789d:	mov    QWORD PTR [rbp-0xa8],rax
  4078a4:	mov    rax,QWORD PTR [rbp-0xa8]
  4078ab:	mov    eax,DWORD PTR [rax]
  4078ad:	sub    eax,DWORD PTR [rbp-0xb8]
  4078b3:	mov    edx,eax
  4078b5:	mov    eax,DWORD PTR [rbp-0xc0]
  4078bb:	cdqe   
  4078bd:	lea    rcx,[rax+rax*1]
  4078c1:	mov    rax,QWORD PTR [rbp-0xf8]
  4078c8:	add    rax,rcx
  4078cb:	movzx  eax,WORD PTR [rax]
  4078ce:	movzx  eax,ax
  4078d1:	sub    edx,eax
  4078d3:	mov    eax,edx
  4078d5:	sub    eax,0x4
  4078d8:	mov    DWORD PTR [rbp-0xac],eax
  4078de:	mov    eax,DWORD PTR [rbp-0xac]
  4078e4:	mov    edi,eax
  4078e6:	call   4044c5 <main@@Base+0xc6>
  4078eb:	mov    edx,eax
  4078ed:	mov    rax,QWORD PTR [rbp-0xa8]
  4078f4:	mov    DWORD PTR [rax],edx
  4078f6:	inc    DWORD PTR [rbp-0xc0]
  4078fc:	mov    eax,DWORD PTR [rbp-0xc0]
  407902:	cmp    eax,DWORD PTR [rbp-0xf0]
  407908:	jl     407877 <flatcc_builder_create_table@@Base+0x17e>
  40790e:	mov    QWORD PTR [rbp-0xa0],0x0
  407919:	mov    DWORD PTR [rbp-0x98],0x0
  407923:	mov    rax,QWORD PTR [rbp-0xa0]
  40792a:	add    rax,0x4
  40792e:	mov    QWORD PTR [rbp-0xa0],rax
  407935:	mov    eax,DWORD PTR [rbp-0x98]
  40793b:	cdqe   
  40793d:	shl    rax,0x4
  407941:	add    rax,rbp
  407944:	lea    rdx,[rax-0x90]
  40794b:	lea    rax,[rbp-0xc4]
  407952:	mov    QWORD PTR [rdx],rax
  407955:	mov    eax,DWORD PTR [rbp-0x98]
  40795b:	cdqe   
  40795d:	shl    rax,0x4
  407961:	add    rax,rbp
  407964:	sub    rax,0x88
  40796a:	mov    QWORD PTR [rax],0x4
  407971:	mov    eax,DWORD PTR [rbp-0x98]
  407977:	inc    eax
  407979:	mov    DWORD PTR [rbp-0x98],eax
  40797f:	cmp    QWORD PTR [rbp-0xe8],0x0
  407987:	je     4079ef <flatcc_builder_create_table@@Base+0x2f6>
  407989:	mov    rdx,QWORD PTR [rbp-0xa0]
  407990:	mov    rax,QWORD PTR [rbp-0xe8]
  407997:	add    rax,rdx
  40799a:	mov    QWORD PTR [rbp-0xa0],rax
  4079a1:	mov    eax,DWORD PTR [rbp-0x98]
  4079a7:	cdqe   
  4079a9:	shl    rax,0x4
  4079ad:	add    rax,rbp
  4079b0:	lea    rdx,[rax-0x90]
  4079b7:	mov    rax,QWORD PTR [rbp-0xe0]
  4079be:	mov    QWORD PTR [rdx],rax
  4079c1:	mov    eax,DWORD PTR [rbp-0x98]
  4079c7:	cdqe   
  4079c9:	shl    rax,0x4
  4079cd:	add    rax,rbp
  4079d0:	lea    rdx,[rax-0x88]
  4079d7:	mov    rax,QWORD PTR [rbp-0xe8]
  4079de:	mov    QWORD PTR [rdx],rax
  4079e1:	mov    eax,DWORD PTR [rbp-0x98]
  4079e7:	inc    eax
  4079e9:	mov    DWORD PTR [rbp-0x98],eax
  4079ef:	cmp    DWORD PTR [rbp-0xbc],0x0
  4079f6:	je     407a5c <flatcc_builder_create_table@@Base+0x363>
  4079f8:	mov    rdx,QWORD PTR [rbp-0xa0]
  4079ff:	mov    eax,DWORD PTR [rbp-0xbc]
  407a05:	add    rax,rdx
  407a08:	mov    QWORD PTR [rbp-0xa0],rax
  407a0f:	mov    eax,DWORD PTR [rbp-0x98]
  407a15:	cdqe   
  407a17:	shl    rax,0x4
  407a1b:	add    rax,rbp
  407a1e:	sub    rax,0x90
  407a24:	mov    rdx,0x40b4e0
  407a2b:	mov    QWORD PTR [rax],rdx
  407a2e:	mov    edx,DWORD PTR [rbp-0x98]
  407a34:	mov    eax,DWORD PTR [rbp-0xbc]
  407a3a:	movsxd rdx,edx
  407a3d:	shl    rdx,0x4
  407a41:	add    rdx,rbp
  407a44:	sub    rdx,0x88
  407a4b:	mov    QWORD PTR [rdx],rax
  407a4e:	mov    eax,DWORD PTR [rbp-0x98]
  407a54:	inc    eax
  407a56:	mov    DWORD PTR [rbp-0x98],eax
  407a5c:	lea    rdx,[rbp-0xa0]
  407a63:	mov    rax,QWORD PTR [rbp-0xd8]
  407a6a:	mov    rsi,rdx
  407a6d:	mov    rdi,rax
  407a70:	call   40580e <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  407a75:	mov    rsi,QWORD PTR [rbp-0x8]
  407a79:	xor    rsi,QWORD PTR fs:0x28
  407a82:	je     407a89 <flatcc_builder_create_table@@Base+0x390>
  407a84:	call   403180 <__stack_chk_fail@plt>
  407a89:	leave  
  407a8a:	ret    

0000000000407a8b <flatcc_builder_check_required_field@@Base>:
  407a8b:	endbr64 
  407a8f:	push   rbp
  407a90:	mov    rbp,rsp
  407a93:	sub    rsp,0x10
  407a97:	mov    QWORD PTR [rbp-0x8],rdi
  407a9b:	mov    eax,esi
  407a9d:	mov    WORD PTR [rbp-0xc],ax
  407aa1:	mov    rax,QWORD PTR [rbp-0x8]
  407aa5:	mov    rax,QWORD PTR [rax+0x30]
  407aa9:	movzx  eax,WORD PTR [rax+0xe]
  407aad:	cmp    ax,0x3
  407ab1:	je     407ad2 <flatcc_builder_check_required_field@@Base+0x47>
  407ab3:	lea    rcx,[rip+0x43a6]        # 40be60 <flatcc_builder_padding_base@@Base+0x980>
  407aba:	mov    edx,0x4f8
  407abf:	lea    rsi,[rip+0x3c1a]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407ac6:	lea    rdi,[rip+0x3eeb]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  407acd:	call   4031a0 <__assert_fail@plt>
  407ad2:	mov    rax,QWORD PTR [rbp-0x8]
  407ad6:	movzx  eax,WORD PTR [rax+0x10]
  407ada:	cmp    WORD PTR [rbp-0xc],ax
  407ade:	jae    407b01 <flatcc_builder_check_required_field@@Base+0x76>
  407ae0:	mov    rax,QWORD PTR [rbp-0x8]
  407ae4:	mov    rax,QWORD PTR [rax+0x8]
  407ae8:	movzx  edx,WORD PTR [rbp-0xc]
  407aec:	add    rdx,rdx
  407aef:	add    rax,rdx
  407af2:	movzx  eax,WORD PTR [rax]
  407af5:	test   ax,ax
  407af8:	je     407b01 <flatcc_builder_check_required_field@@Base+0x76>
  407afa:	mov    eax,0x1
  407aff:	jmp    407b06 <flatcc_builder_check_required_field@@Base+0x7b>
  407b01:	mov    eax,0x0
  407b06:	leave  
  407b07:	ret    

0000000000407b08 <flatcc_builder_check_union_field@@Base>:
  407b08:	endbr64 
  407b0c:	push   rbp
  407b0d:	mov    rbp,rsp
  407b10:	sub    rsp,0x10
  407b14:	mov    QWORD PTR [rbp-0x8],rdi
  407b18:	mov    eax,esi
  407b1a:	mov    WORD PTR [rbp-0xc],ax
  407b1e:	mov    rax,QWORD PTR [rbp-0x8]
  407b22:	mov    rax,QWORD PTR [rax+0x30]
  407b26:	movzx  eax,WORD PTR [rax+0xe]
  407b2a:	cmp    ax,0x3
  407b2e:	je     407b4f <flatcc_builder_check_union_field@@Base+0x47>
  407b30:	lea    rcx,[rip+0x4369]        # 40bea0 <flatcc_builder_padding_base@@Base+0x9c0>
  407b37:	mov    edx,0x4ff
  407b3c:	lea    rsi,[rip+0x3b9d]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407b43:	lea    rdi,[rip+0x3e6e]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  407b4a:	call   4031a0 <__assert_fail@plt>
  407b4f:	cmp    WORD PTR [rbp-0xc],0x0
  407b54:	je     407b64 <flatcc_builder_check_union_field@@Base+0x5c>
  407b56:	mov    rax,QWORD PTR [rbp-0x8]
  407b5a:	movzx  eax,WORD PTR [rax+0x10]
  407b5e:	cmp    WORD PTR [rbp-0xc],ax
  407b62:	jb     407b6e <flatcc_builder_check_union_field@@Base+0x66>
  407b64:	mov    eax,0x0
  407b69:	jmp    407c18 <flatcc_builder_check_union_field@@Base+0x110>
  407b6e:	mov    rax,QWORD PTR [rbp-0x8]
  407b72:	mov    rax,QWORD PTR [rax+0x8]
  407b76:	movzx  edx,WORD PTR [rbp-0xc]
  407b7a:	add    rdx,rdx
  407b7d:	sub    rdx,0x2
  407b81:	add    rax,rdx
  407b84:	movzx  eax,WORD PTR [rax]
  407b87:	test   ax,ax
  407b8a:	jne    407bac <flatcc_builder_check_union_field@@Base+0xa4>
  407b8c:	mov    rax,QWORD PTR [rbp-0x8]
  407b90:	mov    rax,QWORD PTR [rax+0x8]
  407b94:	movzx  edx,WORD PTR [rbp-0xc]
  407b98:	add    rdx,rdx
  407b9b:	add    rax,rdx
  407b9e:	movzx  eax,WORD PTR [rax]
  407ba1:	test   ax,ax
  407ba4:	sete   al
  407ba7:	movzx  eax,al
  407baa:	jmp    407c18 <flatcc_builder_check_union_field@@Base+0x110>
  407bac:	mov    rax,QWORD PTR [rbp-0x8]
  407bb0:	mov    rdx,QWORD PTR [rax+0x18]
  407bb4:	mov    rax,QWORD PTR [rbp-0x8]
  407bb8:	mov    rax,QWORD PTR [rax+0x8]
  407bbc:	movzx  ecx,WORD PTR [rbp-0xc]
  407bc0:	add    rcx,rcx
  407bc3:	sub    rcx,0x2
  407bc7:	add    rax,rcx
  407bca:	movzx  eax,WORD PTR [rax]
  407bcd:	movzx  eax,ax
  407bd0:	add    rax,rdx
  407bd3:	movzx  eax,BYTE PTR [rax]
  407bd6:	test   al,al
  407bd8:	je     407bfa <flatcc_builder_check_union_field@@Base+0xf2>
  407bda:	mov    rax,QWORD PTR [rbp-0x8]
  407bde:	mov    rax,QWORD PTR [rax+0x8]
  407be2:	movzx  edx,WORD PTR [rbp-0xc]
  407be6:	add    rdx,rdx
  407be9:	add    rax,rdx
  407bec:	movzx  eax,WORD PTR [rax]
  407bef:	test   ax,ax
  407bf2:	setne  al
  407bf5:	movzx  eax,al
  407bf8:	jmp    407c18 <flatcc_builder_check_union_field@@Base+0x110>
  407bfa:	mov    rax,QWORD PTR [rbp-0x8]
  407bfe:	mov    rax,QWORD PTR [rax+0x8]
  407c02:	movzx  edx,WORD PTR [rbp-0xc]
  407c06:	add    rdx,rdx
  407c09:	add    rax,rdx
  407c0c:	movzx  eax,WORD PTR [rax]
  407c0f:	test   ax,ax
  407c12:	sete   al
  407c15:	movzx  eax,al
  407c18:	leave  
  407c19:	ret    

0000000000407c1a <flatcc_builder_check_required@@Base>:
  407c1a:	endbr64 
  407c1e:	push   rbp
  407c1f:	mov    rbp,rsp
  407c22:	sub    rsp,0x30
  407c26:	mov    QWORD PTR [rbp-0x18],rdi
  407c2a:	mov    QWORD PTR [rbp-0x20],rsi
  407c2e:	mov    DWORD PTR [rbp-0x24],edx
  407c31:	mov    rax,QWORD PTR [rbp-0x18]
  407c35:	mov    rax,QWORD PTR [rax+0x30]
  407c39:	movzx  eax,WORD PTR [rax+0xe]
  407c3d:	cmp    ax,0x3
  407c41:	je     407c62 <flatcc_builder_check_required@@Base+0x48>
  407c43:	lea    rcx,[rip+0x4286]        # 40bed0 <flatcc_builder_padding_base@@Base+0x9f0>
  407c4a:	mov    edx,0x511
  407c4f:	lea    rsi,[rip+0x3a8a]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407c56:	lea    rdi,[rip+0x3d5b]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  407c5d:	call   4031a0 <__assert_fail@plt>
  407c62:	mov    rax,QWORD PTR [rbp-0x18]
  407c66:	movzx  eax,WORD PTR [rax+0x10]
  407c6a:	movzx  eax,ax
  407c6d:	cmp    DWORD PTR [rbp-0x24],eax
  407c70:	jle    407c79 <flatcc_builder_check_required@@Base+0x5f>
  407c72:	mov    eax,0x0
  407c77:	jmp    407cc5 <flatcc_builder_check_required@@Base+0xab>
  407c79:	mov    DWORD PTR [rbp-0x4],0x0
  407c80:	jmp    407cb8 <flatcc_builder_check_required@@Base+0x9e>
  407c82:	mov    rax,QWORD PTR [rbp-0x18]
  407c86:	mov    rdx,QWORD PTR [rax+0x8]
  407c8a:	mov    eax,DWORD PTR [rbp-0x4]
  407c8d:	cdqe   
  407c8f:	lea    rcx,[rax+rax*1]
  407c93:	mov    rax,QWORD PTR [rbp-0x20]
  407c97:	add    rax,rcx
  407c9a:	movzx  eax,WORD PTR [rax]
  407c9d:	movzx  eax,ax
  407ca0:	add    rax,rax
  407ca3:	add    rax,rdx
  407ca6:	movzx  eax,WORD PTR [rax]
  407ca9:	test   ax,ax
  407cac:	jne    407cb5 <flatcc_builder_check_required@@Base+0x9b>
  407cae:	mov    eax,0x0
  407cb3:	jmp    407cc5 <flatcc_builder_check_required@@Base+0xab>
  407cb5:	inc    DWORD PTR [rbp-0x4]
  407cb8:	mov    eax,DWORD PTR [rbp-0x4]
  407cbb:	cmp    eax,DWORD PTR [rbp-0x24]
  407cbe:	jl     407c82 <flatcc_builder_check_required@@Base+0x68>
  407cc0:	mov    eax,0x1
  407cc5:	leave  
  407cc6:	ret    

0000000000407cc7 <flatcc_builder_end_table@@Base>:
  407cc7:	endbr64 
  407ccb:	push   rbp
  407ccc:	mov    rbp,rsp
  407ccf:	sub    rsp,0x30
  407cd3:	mov    QWORD PTR [rbp-0x28],rdi
  407cd7:	mov    rax,QWORD PTR [rbp-0x28]
  407cdb:	mov    rax,QWORD PTR [rax+0x30]
  407cdf:	movzx  eax,WORD PTR [rax+0xe]
  407ce3:	cmp    ax,0x3
  407ce7:	je     407d08 <flatcc_builder_end_table@@Base+0x41>
  407ce9:	lea    rcx,[rip+0x4200]        # 40bef0 <flatcc_builder_padding_base@@Base+0xa10>
  407cf0:	mov    edx,0x525
  407cf5:	lea    rsi,[rip+0x39e4]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407cfc:	lea    rdi,[rip+0x3cb5]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  407d03:	call   4031a0 <__assert_fail@plt>
  407d08:	mov    rax,QWORD PTR [rbp-0x28]
  407d0c:	mov    rax,QWORD PTR [rax+0x8]
  407d10:	sub    rax,0x4
  407d14:	mov    QWORD PTR [rbp-0x10],rax
  407d18:	mov    rax,QWORD PTR [rbp-0x28]
  407d1c:	movzx  eax,WORD PTR [rax+0x10]
  407d20:	movzx  eax,ax
  407d23:	add    eax,0x2
  407d26:	cdqe   
  407d28:	add    eax,eax
  407d2a:	mov    WORD PTR [rbp-0x1e],ax
  407d2e:	mov    rdx,QWORD PTR [rbp-0x10]
  407d32:	movzx  eax,WORD PTR [rbp-0x1e]
  407d36:	mov    WORD PTR [rdx],ax
  407d39:	mov    rax,QWORD PTR [rbp-0x28]
  407d3d:	mov    eax,DWORD PTR [rax+0x20]
  407d40:	mov    ecx,eax
  407d42:	mov    rax,QWORD PTR [rbp-0x10]
  407d46:	lea    rdx,[rax+0x2]
  407d4a:	lea    eax,[rcx+0x4]
  407d4d:	mov    WORD PTR [rdx],ax
  407d50:	mov    rax,QWORD PTR [rbp-0x10]
  407d54:	movzx  eax,WORD PTR [rax]
  407d57:	movzx  edx,ax
  407d5a:	mov    rax,QWORD PTR [rbp-0x28]
  407d5e:	mov    eax,DWORD PTR [rax+0x14]
  407d61:	xor    eax,edx
  407d63:	imul   edx,eax,0x9e3779b1
  407d69:	mov    rax,QWORD PTR [rbp-0x10]
  407d6d:	add    rax,0x2
  407d71:	movzx  eax,WORD PTR [rax]
  407d74:	movzx  eax,ax
  407d77:	xor    eax,edx
  407d79:	imul   edx,eax,0x9e3779b1
  407d7f:	mov    rax,QWORD PTR [rbp-0x28]
  407d83:	mov    DWORD PTR [rax+0x14],edx
  407d86:	mov    rax,QWORD PTR [rbp-0x28]
  407d8a:	mov    ecx,DWORD PTR [rax+0x14]
  407d8d:	movzx  edx,WORD PTR [rbp-0x1e]
  407d91:	mov    rsi,QWORD PTR [rbp-0x10]
  407d95:	mov    rax,QWORD PTR [rbp-0x28]
  407d99:	mov    rdi,rax
  407d9c:	call   407413 <flatcc_builder_create_cached_vtable@@Base>
  407da1:	mov    DWORD PTR [rbp-0x1c],eax
  407da4:	cmp    DWORD PTR [rbp-0x1c],0x0
  407da8:	jne    407db4 <flatcc_builder_end_table@@Base+0xed>
  407daa:	mov    eax,0x0
  407daf:	jmp    407ecb <flatcc_builder_end_table@@Base+0x204>
  407db4:	movzx  edx,WORD PTR [rbp-0x1e]
  407db8:	mov    rax,QWORD PTR [rbp-0x10]
  407dbc:	mov    esi,0x0
  407dc1:	mov    rdi,rax
  407dc4:	call   4031b0 <memset@plt>
  407dc9:	mov    rax,QWORD PTR [rbp-0x28]
  407dcd:	mov    rdx,QWORD PTR [rax+0x88]
  407dd4:	mov    rax,QWORD PTR [rbp-0x28]
  407dd8:	mov    rax,QWORD PTR [rax+0x30]
  407ddc:	mov    eax,DWORD PTR [rax+0x14]
  407ddf:	mov    eax,eax
  407de1:	add    rax,rdx
  407de4:	mov    QWORD PTR [rbp-0x8],rax
  407de8:	mov    rax,QWORD PTR [rbp-0x28]
  407dec:	mov    rax,QWORD PTR [rax]
  407def:	sub    rax,QWORD PTR [rbp-0x8]
  407df3:	sar    rax,1
  407df6:	mov    DWORD PTR [rbp-0x18],eax
  407df9:	mov    rax,QWORD PTR [rbp-0x28]
  407dfd:	movzx  eax,WORD PTR [rax+0xea]
  407e04:	movzx  edx,ax
  407e07:	mov    rax,QWORD PTR [rbp-0x28]
  407e0b:	mov    eax,DWORD PTR [rax+0x20]
  407e0e:	mov    r10d,eax
  407e11:	mov    rax,QWORD PTR [rbp-0x28]
  407e15:	mov    rsi,QWORD PTR [rax+0x18]
  407e19:	mov    r8d,DWORD PTR [rbp-0x18]
  407e1d:	mov    rdi,QWORD PTR [rbp-0x8]
  407e21:	mov    rax,QWORD PTR [rbp-0x28]
  407e25:	sub    rsp,0x8
  407e29:	mov    ecx,DWORD PTR [rbp-0x1c]
  407e2c:	push   rcx
  407e2d:	mov    r9d,r8d
  407e30:	mov    r8,rdi
  407e33:	mov    ecx,edx
  407e35:	mov    rdx,r10
  407e38:	mov    rdi,rax
  407e3b:	call   4076f9 <flatcc_builder_create_table@@Base>
  407e40:	add    rsp,0x10
  407e44:	mov    DWORD PTR [rbp-0x14],eax
  407e47:	cmp    DWORD PTR [rbp-0x14],0x0
  407e4b:	jne    407e54 <flatcc_builder_end_table@@Base+0x18d>
  407e4d:	mov    eax,0x0
  407e52:	jmp    407ecb <flatcc_builder_end_table@@Base+0x204>
  407e54:	mov    rax,QWORD PTR [rbp-0x28]
  407e58:	mov    rax,QWORD PTR [rax+0x30]
  407e5c:	mov    edx,DWORD PTR [rax+0x18]
  407e5f:	mov    rax,QWORD PTR [rbp-0x28]
  407e63:	mov    DWORD PTR [rax+0x14],edx
  407e66:	mov    rax,QWORD PTR [rbp-0x28]
  407e6a:	mov    rax,QWORD PTR [rax+0x30]
  407e6e:	movzx  eax,WORD PTR [rax+0x1c]
  407e72:	mov    rdx,QWORD PTR [rbp-0x28]
  407e76:	mov    WORD PTR [rdx+0x10],ax
  407e7a:	mov    rax,QWORD PTR [rbp-0x28]
  407e7e:	mov    rdx,QWORD PTR [rax+0x58]
  407e82:	mov    rax,QWORD PTR [rbp-0x28]
  407e86:	mov    rax,QWORD PTR [rax+0x30]
  407e8a:	mov    eax,DWORD PTR [rax+0x10]
  407e8d:	mov    eax,eax
  407e8f:	add    rdx,rax
  407e92:	mov    rax,QWORD PTR [rbp-0x28]
  407e96:	mov    QWORD PTR [rax+0x8],rdx
  407e9a:	mov    rax,QWORD PTR [rbp-0x28]
  407e9e:	mov    rdx,QWORD PTR [rax+0x88]
  407ea5:	mov    rax,QWORD PTR [rbp-0x28]
  407ea9:	mov    rax,QWORD PTR [rax+0x30]
  407ead:	mov    eax,DWORD PTR [rax+0x14]
  407eb0:	mov    eax,eax
  407eb2:	add    rdx,rax
  407eb5:	mov    rax,QWORD PTR [rbp-0x28]
  407eb9:	mov    QWORD PTR [rax],rdx
  407ebc:	mov    rax,QWORD PTR [rbp-0x28]
  407ec0:	mov    rdi,rax
  407ec3:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  407ec8:	mov    eax,DWORD PTR [rbp-0x14]
  407ecb:	leave  
  407ecc:	ret    

0000000000407ecd <flatcc_builder_create_vector@@Base>:
  407ecd:	endbr64 
  407ed1:	push   rbp
  407ed2:	mov    rbp,rsp
  407ed5:	sub    rsp,0xe0
  407edc:	mov    QWORD PTR [rbp-0xb8],rdi
  407ee3:	mov    QWORD PTR [rbp-0xc0],rsi
  407eea:	mov    QWORD PTR [rbp-0xc8],rdx
  407ef1:	mov    QWORD PTR [rbp-0xd0],rcx
  407ef8:	mov    eax,r8d
  407efb:	mov    QWORD PTR [rbp-0xe0],r9
  407f02:	mov    WORD PTR [rbp-0xd4],ax
  407f09:	mov    rax,QWORD PTR fs:0x28
  407f12:	mov    QWORD PTR [rbp-0x8],rax
  407f16:	xor    eax,eax
  407f18:	mov    rax,QWORD PTR [rbp-0xc8]
  407f1f:	cmp    rax,QWORD PTR [rbp-0xe0]
  407f26:	jbe    407f61 <flatcc_builder_create_vector@@Base+0x94>
  407f28:	mov    rax,QWORD PTR [rbp-0xc8]
  407f2f:	cmp    rax,QWORD PTR [rbp-0xe0]
  407f36:	jbe    407f57 <flatcc_builder_create_vector@@Base+0x8a>
  407f38:	lea    rcx,[rip+0x3fd1]        # 40bf10 <flatcc_builder_padding_base@@Base+0xa30>
  407f3f:	mov    edx,0x555
  407f44:	lea    rsi,[rip+0x3795]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  407f4b:	lea    rdi,[rip+0x3a91]        # 40b9e3 <flatcc_builder_padding_base@@Base+0x503>
  407f52:	call   4031a0 <__assert_fail@plt>
  407f57:	mov    eax,0x0
  407f5c:	jmp    408149 <flatcc_builder_create_vector@@Base+0x27c>
  407f61:	lea    rax,[rbp-0xd4]
  407f68:	mov    esi,0x4
  407f6d:	mov    rdi,rax
  407f70:	call   405222 <flatcc_builder_clear@@Base+0xca>
  407f75:	movzx  eax,WORD PTR [rbp-0xd4]
  407f7c:	movzx  edx,ax
  407f7f:	mov    rax,QWORD PTR [rbp-0xb8]
  407f86:	mov    esi,edx
  407f88:	mov    rdi,rax
  407f8b:	call   4051f1 <flatcc_builder_clear@@Base+0x99>
  407f90:	mov    rax,QWORD PTR [rbp-0xc8]
  407f97:	mov    edx,eax
  407f99:	mov    rax,QWORD PTR [rbp-0xd0]
  407fa0:	imul   eax,edx
  407fa3:	mov    DWORD PTR [rbp-0xa8],eax
  407fa9:	mov    rax,QWORD PTR [rbp-0xc8]
  407fb0:	mov    edi,eax
  407fb2:	call   4044c5 <main@@Base+0xc6>
  407fb7:	mov    DWORD PTR [rbp-0xac],eax
  407fbd:	movzx  eax,WORD PTR [rbp-0xd4]
  407fc4:	movzx  edx,ax
  407fc7:	mov    ecx,DWORD PTR [rbp-0xa8]
  407fcd:	mov    rax,QWORD PTR [rbp-0xb8]
  407fd4:	mov    esi,ecx
  407fd6:	mov    rdi,rax
  407fd9:	call   4057c4 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  407fde:	mov    DWORD PTR [rbp-0xa4],eax
  407fe4:	mov    QWORD PTR [rbp-0xa0],0x0
  407fef:	mov    DWORD PTR [rbp-0x98],0x0
  407ff9:	mov    rax,QWORD PTR [rbp-0xa0]
  408000:	add    rax,0x4
  408004:	mov    QWORD PTR [rbp-0xa0],rax
  40800b:	mov    eax,DWORD PTR [rbp-0x98]
  408011:	cdqe   
  408013:	shl    rax,0x4
  408017:	add    rax,rbp
  40801a:	lea    rdx,[rax-0x90]
  408021:	lea    rax,[rbp-0xac]
  408028:	mov    QWORD PTR [rdx],rax
  40802b:	mov    eax,DWORD PTR [rbp-0x98]
  408031:	cdqe   
  408033:	shl    rax,0x4
  408037:	add    rax,rbp
  40803a:	sub    rax,0x88
  408040:	mov    QWORD PTR [rax],0x4
  408047:	mov    eax,DWORD PTR [rbp-0x98]
  40804d:	inc    eax
  40804f:	mov    DWORD PTR [rbp-0x98],eax
  408055:	cmp    DWORD PTR [rbp-0xa8],0x0
  40805c:	je     4080c3 <flatcc_builder_create_vector@@Base+0x1f6>
  40805e:	mov    rdx,QWORD PTR [rbp-0xa0]
  408065:	mov    eax,DWORD PTR [rbp-0xa8]
  40806b:	add    rax,rdx
  40806e:	mov    QWORD PTR [rbp-0xa0],rax
  408075:	mov    eax,DWORD PTR [rbp-0x98]
  40807b:	cdqe   
  40807d:	shl    rax,0x4
  408081:	add    rax,rbp
  408084:	lea    rdx,[rax-0x90]
  40808b:	mov    rax,QWORD PTR [rbp-0xc0]
  408092:	mov    QWORD PTR [rdx],rax
  408095:	mov    edx,DWORD PTR [rbp-0x98]
  40809b:	mov    eax,DWORD PTR [rbp-0xa8]
  4080a1:	movsxd rdx,edx
  4080a4:	shl    rdx,0x4
  4080a8:	add    rdx,rbp
  4080ab:	sub    rdx,0x88
  4080b2:	mov    QWORD PTR [rdx],rax
  4080b5:	mov    eax,DWORD PTR [rbp-0x98]
  4080bb:	inc    eax
  4080bd:	mov    DWORD PTR [rbp-0x98],eax
  4080c3:	cmp    DWORD PTR [rbp-0xa4],0x0
  4080ca:	je     408130 <flatcc_builder_create_vector@@Base+0x263>
  4080cc:	mov    rdx,QWORD PTR [rbp-0xa0]
  4080d3:	mov    eax,DWORD PTR [rbp-0xa4]
  4080d9:	add    rax,rdx
  4080dc:	mov    QWORD PTR [rbp-0xa0],rax
  4080e3:	mov    eax,DWORD PTR [rbp-0x98]
  4080e9:	cdqe   
  4080eb:	shl    rax,0x4
  4080ef:	add    rax,rbp
  4080f2:	sub    rax,0x90
  4080f8:	mov    rdx,0x40b4e0
  4080ff:	mov    QWORD PTR [rax],rdx
  408102:	mov    edx,DWORD PTR [rbp-0x98]
  408108:	mov    eax,DWORD PTR [rbp-0xa4]
  40810e:	movsxd rdx,edx
  408111:	shl    rdx,0x4
  408115:	add    rdx,rbp
  408118:	sub    rdx,0x88
  40811f:	mov    QWORD PTR [rdx],rax
  408122:	mov    eax,DWORD PTR [rbp-0x98]
  408128:	inc    eax
  40812a:	mov    DWORD PTR [rbp-0x98],eax
  408130:	lea    rdx,[rbp-0xa0]
  408137:	mov    rax,QWORD PTR [rbp-0xb8]
  40813e:	mov    rsi,rdx
  408141:	mov    rdi,rax
  408144:	call   40580e <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  408149:	mov    rcx,QWORD PTR [rbp-0x8]
  40814d:	xor    rcx,QWORD PTR fs:0x28
  408156:	je     40815d <flatcc_builder_create_vector@@Base+0x290>
  408158:	call   403180 <__stack_chk_fail@plt>
  40815d:	leave  
  40815e:	ret    

000000000040815f <flatcc_builder_end_vector@@Base>:
  40815f:	endbr64 
  408163:	push   rbp
  408164:	mov    rbp,rsp
  408167:	sub    rsp,0x20
  40816b:	mov    QWORD PTR [rbp-0x18],rdi
  40816f:	mov    rax,QWORD PTR [rbp-0x18]
  408173:	mov    rax,QWORD PTR [rax+0x30]
  408177:	movzx  eax,WORD PTR [rax+0xe]
  40817b:	cmp    ax,0x4
  40817f:	je     4081a0 <flatcc_builder_end_vector@@Base+0x41>
  408181:	lea    rcx,[rip+0x3da8]        # 40bf30 <flatcc_builder_padding_base@@Base+0xa50>
  408188:	mov    edx,0x578
  40818d:	lea    rsi,[rip+0x354c]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408194:	lea    rdi,[rip+0x368d]        # 40b828 <flatcc_builder_padding_base@@Base+0x348>
  40819b:	call   4031a0 <__assert_fail@plt>
  4081a0:	mov    rax,QWORD PTR [rbp-0x18]
  4081a4:	mov    rax,QWORD PTR [rax+0x30]
  4081a8:	mov    eax,DWORD PTR [rax+0x18]
  4081ab:	mov    r8d,eax
  4081ae:	mov    rax,QWORD PTR [rbp-0x18]
  4081b2:	movzx  eax,WORD PTR [rax+0xea]
  4081b9:	movzx  edx,ax
  4081bc:	mov    rax,QWORD PTR [rbp-0x18]
  4081c0:	mov    rax,QWORD PTR [rax+0x30]
  4081c4:	mov    eax,DWORD PTR [rax+0x10]
  4081c7:	mov    ecx,eax
  4081c9:	mov    rax,QWORD PTR [rbp-0x18]
  4081cd:	mov    rax,QWORD PTR [rax+0x30]
  4081d1:	mov    eax,DWORD PTR [rax+0x14]
  4081d4:	mov    edi,eax
  4081d6:	mov    rax,QWORD PTR [rbp-0x18]
  4081da:	mov    rsi,QWORD PTR [rax+0x18]
  4081de:	mov    rax,QWORD PTR [rbp-0x18]
  4081e2:	mov    r9,r8
  4081e5:	mov    r8d,edx
  4081e8:	mov    rdx,rdi
  4081eb:	mov    rdi,rax
  4081ee:	call   407ecd <flatcc_builder_create_vector@@Base>
  4081f3:	mov    DWORD PTR [rbp-0x4],eax
  4081f6:	cmp    DWORD PTR [rbp-0x4],0x0
  4081fa:	jne    408203 <flatcc_builder_end_vector@@Base+0xa4>
  4081fc:	mov    eax,0x0
  408201:	jmp    408212 <flatcc_builder_end_vector@@Base+0xb3>
  408203:	mov    rax,QWORD PTR [rbp-0x18]
  408207:	mov    rdi,rax
  40820a:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40820f:	mov    eax,DWORD PTR [rbp-0x4]
  408212:	leave  
  408213:	ret    

0000000000408214 <flatcc_builder_vector_count@@Base>:
  408214:	endbr64 
  408218:	push   rbp
  408219:	mov    rbp,rsp
  40821c:	mov    QWORD PTR [rbp-0x8],rdi
  408220:	mov    rax,QWORD PTR [rbp-0x8]
  408224:	mov    rax,QWORD PTR [rax+0x30]
  408228:	mov    eax,DWORD PTR [rax+0x14]
  40822b:	mov    eax,eax
  40822d:	pop    rbp
  40822e:	ret    

000000000040822f <flatcc_builder_vector_edit@@Base>:
  40822f:	endbr64 
  408233:	push   rbp
  408234:	mov    rbp,rsp
  408237:	mov    QWORD PTR [rbp-0x8],rdi
  40823b:	mov    rax,QWORD PTR [rbp-0x8]
  40823f:	mov    rax,QWORD PTR [rax+0x18]
  408243:	pop    rbp
  408244:	ret    
  408245:	endbr64 
  408249:	push   rbp
  40824a:	mov    rbp,rsp
  40824d:	sub    rsp,0xe0
  408254:	mov    QWORD PTR [rbp-0xc8],rdi
  40825b:	mov    QWORD PTR [rbp-0xd0],rsi
  408262:	mov    QWORD PTR [rbp-0xd8],rdx
  408269:	mov    QWORD PTR [rbp-0xe0],rcx
  408270:	mov    rax,QWORD PTR fs:0x28
  408279:	mov    QWORD PTR [rbp-0x8],rax
  40827d:	xor    eax,eax
  40827f:	mov    rax,QWORD PTR [rbp-0xd8]
  408286:	cmp    eax,0x3fffffff
  40828b:	jbe    408297 <flatcc_builder_vector_edit@@Base+0x68>
  40828d:	mov    eax,0x0
  408292:	jmp    4085c0 <flatcc_builder_vector_edit@@Base+0x391>
  408297:	mov    rax,QWORD PTR [rbp-0xc8]
  40829e:	mov    esi,0x4
  4082a3:	mov    rdi,rax
  4082a6:	call   4051f1 <flatcc_builder_clear@@Base+0x99>
  4082ab:	mov    rax,QWORD PTR [rbp-0xd8]
  4082b2:	shl    eax,0x2
  4082b5:	mov    DWORD PTR [rbp-0xb0],eax
  4082bb:	mov    rax,QWORD PTR [rbp-0xd8]
  4082c2:	mov    edi,eax
  4082c4:	call   4044c5 <main@@Base+0xc6>
  4082c9:	mov    DWORD PTR [rbp-0xb8],eax
  4082cf:	mov    ecx,DWORD PTR [rbp-0xb0]
  4082d5:	mov    rax,QWORD PTR [rbp-0xc8]
  4082dc:	mov    edx,0x4
  4082e1:	mov    esi,ecx
  4082e3:	mov    rdi,rax
  4082e6:	call   4057c4 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  4082eb:	mov    DWORD PTR [rbp-0xac],eax
  4082f1:	mov    QWORD PTR [rbp-0xa0],0x0
  4082fc:	mov    DWORD PTR [rbp-0x98],0x0
  408306:	mov    rax,QWORD PTR [rbp-0xa0]
  40830d:	add    rax,0x4
  408311:	mov    QWORD PTR [rbp-0xa0],rax
  408318:	mov    eax,DWORD PTR [rbp-0x98]
  40831e:	cdqe   
  408320:	shl    rax,0x4
  408324:	add    rax,rbp
  408327:	lea    rdx,[rax-0x90]
  40832e:	lea    rax,[rbp-0xb8]
  408335:	mov    QWORD PTR [rdx],rax
  408338:	mov    eax,DWORD PTR [rbp-0x98]
  40833e:	cdqe   
  408340:	shl    rax,0x4
  408344:	add    rax,rbp
  408347:	sub    rax,0x88
  40834d:	mov    QWORD PTR [rax],0x4
  408354:	mov    eax,DWORD PTR [rbp-0x98]
  40835a:	inc    eax
  40835c:	mov    DWORD PTR [rbp-0x98],eax
  408362:	cmp    DWORD PTR [rbp-0xb0],0x0
  408369:	je     4083d0 <flatcc_builder_vector_edit@@Base+0x1a1>
  40836b:	mov    rdx,QWORD PTR [rbp-0xa0]
  408372:	mov    eax,DWORD PTR [rbp-0xb0]
  408378:	add    rax,rdx
  40837b:	mov    QWORD PTR [rbp-0xa0],rax
  408382:	mov    eax,DWORD PTR [rbp-0x98]
  408388:	cdqe   
  40838a:	shl    rax,0x4
  40838e:	add    rax,rbp
  408391:	lea    rdx,[rax-0x90]
  408398:	mov    rax,QWORD PTR [rbp-0xd0]
  40839f:	mov    QWORD PTR [rdx],rax
  4083a2:	mov    edx,DWORD PTR [rbp-0x98]
  4083a8:	mov    eax,DWORD PTR [rbp-0xb0]
  4083ae:	movsxd rdx,edx
  4083b1:	shl    rdx,0x4
  4083b5:	add    rdx,rbp
  4083b8:	sub    rdx,0x88
  4083bf:	mov    QWORD PTR [rdx],rax
  4083c2:	mov    eax,DWORD PTR [rbp-0x98]
  4083c8:	inc    eax
  4083ca:	mov    DWORD PTR [rbp-0x98],eax
  4083d0:	cmp    DWORD PTR [rbp-0xac],0x0
  4083d7:	je     40843d <flatcc_builder_vector_edit@@Base+0x20e>
  4083d9:	mov    rdx,QWORD PTR [rbp-0xa0]
  4083e0:	mov    eax,DWORD PTR [rbp-0xac]
  4083e6:	add    rax,rdx
  4083e9:	mov    QWORD PTR [rbp-0xa0],rax
  4083f0:	mov    eax,DWORD PTR [rbp-0x98]
  4083f6:	cdqe   
  4083f8:	shl    rax,0x4
  4083fc:	add    rax,rbp
  4083ff:	sub    rax,0x90
  408405:	mov    rdx,0x40b4e0
  40840c:	mov    QWORD PTR [rax],rdx
  40840f:	mov    edx,DWORD PTR [rbp-0x98]
  408415:	mov    eax,DWORD PTR [rbp-0xac]
  40841b:	movsxd rdx,edx
  40841e:	shl    rdx,0x4
  408422:	add    rdx,rbp
  408425:	sub    rdx,0x88
  40842c:	mov    QWORD PTR [rdx],rax
  40842f:	mov    eax,DWORD PTR [rbp-0x98]
  408435:	inc    eax
  408437:	mov    DWORD PTR [rbp-0x98],eax
  40843d:	mov    rax,QWORD PTR [rbp-0xc8]
  408444:	mov    eax,DWORD PTR [rax+0xf0]
  40844a:	mov    edx,eax
  40844c:	mov    rax,QWORD PTR [rbp-0xa0]
  408453:	sub    edx,eax
  408455:	mov    eax,edx
  408457:	mov    DWORD PTR [rbp-0xa8],eax
  40845d:	mov    DWORD PTR [rbp-0xb4],0x0
  408467:	jmp    408594 <flatcc_builder_vector_edit@@Base+0x365>
  40846c:	mov    eax,DWORD PTR [rbp-0xb4]
  408472:	lea    rdx,[rax*4+0x0]
  40847a:	mov    rax,QWORD PTR [rbp-0xd0]
  408481:	add    rax,rdx
  408484:	mov    eax,DWORD PTR [rax]
  408486:	test   eax,eax
  408488:	je     40852f <flatcc_builder_vector_edit@@Base+0x300>
  40848e:	mov    eax,DWORD PTR [rbp-0xb4]
  408494:	lea    rdx,[rax*4+0x0]
  40849c:	mov    rax,QWORD PTR [rbp-0xd0]
  4084a3:	add    rax,rdx
  4084a6:	mov    eax,DWORD PTR [rax]
  4084a8:	sub    eax,DWORD PTR [rbp-0xa8]
  4084ae:	mov    edx,DWORD PTR [rbp-0xb4]
  4084b4:	shl    edx,0x2
  4084b7:	sub    eax,edx
  4084b9:	sub    eax,0x4
  4084bc:	mov    DWORD PTR [rbp-0xa4],eax
  4084c2:	mov    eax,DWORD PTR [rbp-0xa4]
  4084c8:	mov    edi,eax
  4084ca:	call   4044c5 <main@@Base+0xc6>
  4084cf:	mov    edx,eax
  4084d1:	mov    eax,DWORD PTR [rbp-0xb4]
  4084d7:	lea    rcx,[rax*4+0x0]
  4084df:	mov    rax,QWORD PTR [rbp-0xd0]
  4084e6:	add    rax,rcx
  4084e9:	mov    DWORD PTR [rax],edx
  4084eb:	cmp    QWORD PTR [rbp-0xe0],0x0
  4084f3:	je     40858e <flatcc_builder_vector_edit@@Base+0x35f>
  4084f9:	mov    edx,DWORD PTR [rbp-0xb4]
  4084ff:	mov    rax,QWORD PTR [rbp-0xe0]
  408506:	add    rax,rdx
  408509:	movzx  eax,BYTE PTR [rax]
  40850c:	test   al,al
  40850e:	jne    40858e <flatcc_builder_vector_edit@@Base+0x35f>
  408510:	lea    rcx,[rip+0x3a39]        # 40bf50 <flatcc_builder_padding_base@@Base+0xa70>
  408517:	mov    edx,0x5b1
  40851c:	lea    rsi,[rip+0x31bd]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408523:	lea    rdi,[rip+0x34cc]        # 40b9f6 <flatcc_builder_padding_base@@Base+0x516>
  40852a:	call   4031a0 <__assert_fail@plt>
  40852f:	cmp    QWORD PTR [rbp-0xe0],0x0
  408537:	je     40856f <flatcc_builder_vector_edit@@Base+0x340>
  408539:	mov    edx,DWORD PTR [rbp-0xb4]
  40853f:	mov    rax,QWORD PTR [rbp-0xe0]
  408546:	add    rax,rdx
  408549:	movzx  eax,BYTE PTR [rax]
  40854c:	test   al,al
  40854e:	je     40858e <flatcc_builder_vector_edit@@Base+0x35f>
  408550:	lea    rcx,[rip+0x39f9]        # 40bf50 <flatcc_builder_padding_base@@Base+0xa70>
  408557:	mov    edx,0x5b5
  40855c:	lea    rsi,[rip+0x317d]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408563:	lea    rdi,[rip+0x349a]        # 40ba04 <flatcc_builder_padding_base@@Base+0x524>
  40856a:	call   4031a0 <__assert_fail@plt>
  40856f:	lea    rcx,[rip+0x39da]        # 40bf50 <flatcc_builder_padding_base@@Base+0xa70>
  408576:	mov    edx,0x5b7
  40857b:	lea    rsi,[rip+0x315e]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408582:	lea    rdi,[rip+0x31b7]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  408589:	call   4031a0 <__assert_fail@plt>
  40858e:	inc    DWORD PTR [rbp-0xb4]
  408594:	mov    rax,QWORD PTR [rbp-0xd8]
  40859b:	cmp    DWORD PTR [rbp-0xb4],eax
  4085a1:	jb     40846c <flatcc_builder_vector_edit@@Base+0x23d>
  4085a7:	lea    rdx,[rbp-0xa0]
  4085ae:	mov    rax,QWORD PTR [rbp-0xc8]
  4085b5:	mov    rsi,rdx
  4085b8:	mov    rdi,rax
  4085bb:	call   40580e <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4085c0:	mov    rsi,QWORD PTR [rbp-0x8]
  4085c4:	xor    rsi,QWORD PTR fs:0x28
  4085cd:	je     4085d4 <flatcc_builder_vector_edit@@Base+0x3a5>
  4085cf:	call   403180 <__stack_chk_fail@plt>
  4085d4:	leave  
  4085d5:	ret    

00000000004085d6 <flatcc_builder_create_offset_vector_direct@@Base>:
  4085d6:	endbr64 
  4085da:	push   rbp
  4085db:	mov    rbp,rsp
  4085de:	sub    rsp,0x20
  4085e2:	mov    QWORD PTR [rbp-0x8],rdi
  4085e6:	mov    QWORD PTR [rbp-0x10],rsi
  4085ea:	mov    QWORD PTR [rbp-0x18],rdx
  4085ee:	mov    rdx,QWORD PTR [rbp-0x18]
  4085f2:	mov    rsi,QWORD PTR [rbp-0x10]
  4085f6:	mov    rax,QWORD PTR [rbp-0x8]
  4085fa:	mov    ecx,0x0
  4085ff:	mov    rdi,rax
  408602:	call   408245 <flatcc_builder_vector_edit@@Base+0x16>
  408607:	leave  
  408608:	ret    

0000000000408609 <flatcc_builder_end_offset_vector@@Base>:
  408609:	endbr64 
  40860d:	push   rbp
  40860e:	mov    rbp,rsp
  408611:	sub    rsp,0x20
  408615:	mov    QWORD PTR [rbp-0x18],rdi
  408619:	mov    rax,QWORD PTR [rbp-0x18]
  40861d:	mov    rax,QWORD PTR [rax+0x30]
  408621:	movzx  eax,WORD PTR [rax+0xe]
  408625:	cmp    ax,0x5
  408629:	je     40864a <flatcc_builder_end_offset_vector@@Base+0x41>
  40862b:	lea    rcx,[rip+0x394e]        # 40bf80 <flatcc_builder_padding_base@@Base+0xaa0>
  408632:	mov    edx,0x5c8
  408637:	lea    rsi,[rip+0x30a2]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40863e:	lea    rdi,[rip+0x3253]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  408645:	call   4031a0 <__assert_fail@plt>
  40864a:	mov    rax,QWORD PTR [rbp-0x18]
  40864e:	mov    rax,QWORD PTR [rax+0x30]
  408652:	mov    eax,DWORD PTR [rax+0x14]
  408655:	mov    edx,eax
  408657:	mov    rax,QWORD PTR [rbp-0x18]
  40865b:	mov    rcx,QWORD PTR [rax+0x18]
  40865f:	mov    rax,QWORD PTR [rbp-0x18]
  408663:	mov    rsi,rcx
  408666:	mov    rdi,rax
  408669:	call   4085d6 <flatcc_builder_create_offset_vector_direct@@Base>
  40866e:	mov    DWORD PTR [rbp-0x4],eax
  408671:	cmp    DWORD PTR [rbp-0x4],0x0
  408675:	jne    40867e <flatcc_builder_end_offset_vector@@Base+0x75>
  408677:	mov    eax,0x0
  40867c:	jmp    40868d <flatcc_builder_end_offset_vector@@Base+0x84>
  40867e:	mov    rax,QWORD PTR [rbp-0x18]
  408682:	mov    rdi,rax
  408685:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40868a:	mov    eax,DWORD PTR [rbp-0x4]
  40868d:	leave  
  40868e:	ret    

000000000040868f <flatcc_builder_end_offset_vector_for_unions@@Base>:
  40868f:	endbr64 
  408693:	push   rbp
  408694:	mov    rbp,rsp
  408697:	sub    rsp,0x20
  40869b:	mov    QWORD PTR [rbp-0x18],rdi
  40869f:	mov    QWORD PTR [rbp-0x20],rsi
  4086a3:	mov    rax,QWORD PTR [rbp-0x18]
  4086a7:	mov    rax,QWORD PTR [rax+0x30]
  4086ab:	movzx  eax,WORD PTR [rax+0xe]
  4086af:	cmp    ax,0x5
  4086b3:	je     4086d4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x45>
  4086b5:	lea    rcx,[rip+0x3904]        # 40bfc0 <flatcc_builder_padding_base@@Base+0xae0>
  4086bc:	mov    edx,0x5d5
  4086c1:	lea    rsi,[rip+0x3018]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4086c8:	lea    rdi,[rip+0x31c9]        # 40b898 <flatcc_builder_padding_base@@Base+0x3b8>
  4086cf:	call   4031a0 <__assert_fail@plt>
  4086d4:	mov    rax,QWORD PTR [rbp-0x18]
  4086d8:	mov    rax,QWORD PTR [rax+0x30]
  4086dc:	mov    eax,DWORD PTR [rax+0x14]
  4086df:	mov    edi,eax
  4086e1:	mov    rax,QWORD PTR [rbp-0x18]
  4086e5:	mov    rsi,QWORD PTR [rax+0x18]
  4086e9:	mov    rdx,QWORD PTR [rbp-0x20]
  4086ed:	mov    rax,QWORD PTR [rbp-0x18]
  4086f1:	mov    rcx,rdx
  4086f4:	mov    rdx,rdi
  4086f7:	mov    rdi,rax
  4086fa:	call   408245 <flatcc_builder_vector_edit@@Base+0x16>
  4086ff:	mov    DWORD PTR [rbp-0x4],eax
  408702:	cmp    DWORD PTR [rbp-0x4],0x0
  408706:	jne    40870f <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
  408708:	mov    eax,0x0
  40870d:	jmp    40871e <flatcc_builder_end_offset_vector_for_unions@@Base+0x8f>
  40870f:	mov    rax,QWORD PTR [rbp-0x18]
  408713:	mov    rdi,rax
  408716:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  40871b:	mov    eax,DWORD PTR [rbp-0x4]
  40871e:	leave  
  40871f:	ret    

0000000000408720 <flatcc_builder_offset_vector_edit@@Base>:
  408720:	endbr64 
  408724:	push   rbp
  408725:	mov    rbp,rsp
  408728:	mov    QWORD PTR [rbp-0x8],rdi
  40872c:	mov    rax,QWORD PTR [rbp-0x8]
  408730:	mov    rax,QWORD PTR [rax+0x18]
  408734:	pop    rbp
  408735:	ret    

0000000000408736 <flatcc_builder_offset_vector_count@@Base>:
  408736:	endbr64 
  40873a:	push   rbp
  40873b:	mov    rbp,rsp
  40873e:	mov    QWORD PTR [rbp-0x8],rdi
  408742:	mov    rax,QWORD PTR [rbp-0x8]
  408746:	mov    rax,QWORD PTR [rax+0x30]
  40874a:	mov    eax,DWORD PTR [rax+0x14]
  40874d:	mov    eax,eax
  40874f:	pop    rbp
  408750:	ret    

0000000000408751 <flatcc_builder_table_add_union@@Base>:
  408751:	endbr64 
  408755:	push   rbp
  408756:	mov    rbp,rsp
  408759:	sub    rsp,0x30
  40875d:	mov    QWORD PTR [rbp-0x18],rdi
  408761:	mov    DWORD PTR [rbp-0x1c],esi
  408764:	mov    QWORD PTR [rbp-0x24],rdx
  408768:	mov    rax,QWORD PTR [rbp-0x18]
  40876c:	mov    rax,QWORD PTR [rax+0x30]
  408770:	movzx  eax,WORD PTR [rax+0xe]
  408774:	cmp    ax,0x3
  408778:	je     408799 <flatcc_builder_table_add_union@@Base+0x48>
  40877a:	lea    rcx,[rip+0x386f]        # 40bff0 <flatcc_builder_padding_base@@Base+0xb10>
  408781:	mov    edx,0x5ee
  408786:	lea    rsi,[rip+0x2f53]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40878d:	lea    rdi,[rip+0x3224]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  408794:	call   4031a0 <__assert_fail@plt>
  408799:	movzx  eax,BYTE PTR [rbp-0x24]
  40879d:	test   al,al
  40879f:	jne    4087e0 <flatcc_builder_table_add_union@@Base+0x8f>
  4087a1:	mov    eax,DWORD PTR [rbp-0x20]
  4087a4:	test   eax,eax
  4087a6:	je     4087e0 <flatcc_builder_table_add_union@@Base+0x8f>
  4087a8:	movzx  eax,BYTE PTR [rbp-0x24]
  4087ac:	test   al,al
  4087ae:	jne    4087d6 <flatcc_builder_table_add_union@@Base+0x85>
  4087b0:	mov    eax,DWORD PTR [rbp-0x20]
  4087b3:	test   eax,eax
  4087b5:	je     4087d6 <flatcc_builder_table_add_union@@Base+0x85>
  4087b7:	lea    rcx,[rip+0x3832]        # 40bff0 <flatcc_builder_padding_base@@Base+0xb10>
  4087be:	mov    edx,0x5ef
  4087c3:	lea    rsi,[rip+0x2f16]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4087ca:	lea    rdi,[rip+0x3247]        # 40ba18 <flatcc_builder_padding_base@@Base+0x538>
  4087d1:	call   4031a0 <__assert_fail@plt>
  4087d6:	mov    eax,0xffffffff
  4087db:	jmp    4088a6 <flatcc_builder_table_add_union@@Base+0x155>
  4087e0:	mov    eax,DWORD PTR [rbp-0x20]
  4087e3:	test   eax,eax
  4087e5:	je     408839 <flatcc_builder_table_add_union@@Base+0xe8>
  4087e7:	mov    edx,DWORD PTR [rbp-0x1c]
  4087ea:	mov    rax,QWORD PTR [rbp-0x18]
  4087ee:	mov    esi,edx
  4087f0:	mov    rdi,rax
  4087f3:	call   409542 <flatcc_builder_table_add_offset@@Base>
  4087f8:	mov    QWORD PTR [rbp-0x10],rax
  4087fc:	cmp    QWORD PTR [rbp-0x10],0x0
  408801:	jne    408830 <flatcc_builder_table_add_union@@Base+0xdf>
  408803:	cmp    QWORD PTR [rbp-0x10],0x0
  408808:	jne    408829 <flatcc_builder_table_add_union@@Base+0xd8>
  40880a:	lea    rcx,[rip+0x37df]        # 40bff0 <flatcc_builder_padding_base@@Base+0xb10>
  408811:	mov    edx,0x5f2
  408816:	lea    rsi,[rip+0x2ec3]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40881d:	lea    rdi,[rip+0x3216]        # 40ba3a <flatcc_builder_padding_base@@Base+0x55a>
  408824:	call   4031a0 <__assert_fail@plt>
  408829:	mov    eax,0xffffffff
  40882e:	jmp    4088a6 <flatcc_builder_table_add_union@@Base+0x155>
  408830:	mov    edx,DWORD PTR [rbp-0x20]
  408833:	mov    rax,QWORD PTR [rbp-0x10]
  408837:	mov    DWORD PTR [rax],edx
  408839:	mov    eax,DWORD PTR [rbp-0x1c]
  40883c:	lea    esi,[rax-0x1]
  40883f:	mov    rax,QWORD PTR [rbp-0x18]
  408843:	mov    ecx,0x1
  408848:	mov    edx,0x1
  40884d:	mov    rdi,rax
  408850:	call   409368 <flatcc_builder_table_add@@Base>
  408855:	mov    QWORD PTR [rbp-0x8],rax
  408859:	cmp    QWORD PTR [rbp-0x8],0x0
  40885e:	jne    40888d <flatcc_builder_table_add_union@@Base+0x13c>
  408860:	cmp    QWORD PTR [rbp-0x8],0x0
  408865:	jne    408886 <flatcc_builder_table_add_union@@Base+0x135>
  408867:	lea    rcx,[rip+0x3782]        # 40bff0 <flatcc_builder_padding_base@@Base+0xb10>
  40886e:	mov    edx,0x5f6
  408873:	lea    rsi,[rip+0x2e66]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40887a:	lea    rdi,[rip+0x31c3]        # 40ba44 <flatcc_builder_padding_base@@Base+0x564>
  408881:	call   4031a0 <__assert_fail@plt>
  408886:	mov    eax,0xffffffff
  40888b:	jmp    4088a6 <flatcc_builder_table_add_union@@Base+0x155>
  40888d:	movzx  eax,BYTE PTR [rbp-0x24]
  408891:	movzx  eax,al
  408894:	mov    edi,eax
  408896:	call   4044d1 <main@@Base+0xd2>
  40889b:	mov    rdx,QWORD PTR [rbp-0x8]
  40889f:	mov    BYTE PTR [rdx],al
  4088a1:	mov    eax,0x0
  4088a6:	leave  
  4088a7:	ret    

00000000004088a8 <flatcc_builder_table_add_union_vector@@Base>:
  4088a8:	endbr64 
  4088ac:	push   rbp
  4088ad:	mov    rbp,rsp
  4088b0:	sub    rsp,0x30
  4088b4:	mov    QWORD PTR [rbp-0x18],rdi
  4088b8:	mov    DWORD PTR [rbp-0x1c],esi
  4088bb:	mov    QWORD PTR [rbp-0x24],rdx
  4088bf:	mov    rax,QWORD PTR [rbp-0x18]
  4088c3:	mov    rax,QWORD PTR [rax+0x30]
  4088c7:	movzx  eax,WORD PTR [rax+0xe]
  4088cb:	cmp    ax,0x3
  4088cf:	je     4088f0 <flatcc_builder_table_add_union_vector@@Base+0x48>
  4088d1:	lea    rcx,[rip+0x3748]        # 40c020 <flatcc_builder_padding_base@@Base+0xb40>
  4088d8:	mov    edx,0x600
  4088dd:	lea    rsi,[rip+0x2dfc]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4088e4:	lea    rdi,[rip+0x30cd]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  4088eb:	call   4031a0 <__assert_fail@plt>
  4088f0:	mov    eax,DWORD PTR [rbp-0x24]
  4088f3:	test   eax,eax
  4088f5:	sete   dl
  4088f8:	mov    eax,DWORD PTR [rbp-0x20]
  4088fb:	test   eax,eax
  4088fd:	sete   al
  408900:	xor    eax,edx
  408902:	test   al,al
  408904:	je     408945 <flatcc_builder_table_add_union_vector@@Base+0x9d>
  408906:	mov    eax,DWORD PTR [rbp-0x24]
  408909:	test   eax,eax
  40890b:	setne  dl
  40890e:	mov    eax,DWORD PTR [rbp-0x20]
  408911:	test   eax,eax
  408913:	sete   al
  408916:	xor    eax,edx
  408918:	test   al,al
  40891a:	jne    40893b <flatcc_builder_table_add_union_vector@@Base+0x93>
  40891c:	lea    rcx,[rip+0x36fd]        # 40c020 <flatcc_builder_padding_base@@Base+0xb40>
  408923:	mov    edx,0x601
  408928:	lea    rsi,[rip+0x2db1]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40892f:	lea    rdi,[rip+0x311a]        # 40ba50 <flatcc_builder_padding_base@@Base+0x570>
  408936:	call   4031a0 <__assert_fail@plt>
  40893b:	mov    eax,0xffffffff
  408940:	jmp    4089fc <flatcc_builder_table_add_union_vector@@Base+0x154>
  408945:	mov    eax,DWORD PTR [rbp-0x24]
  408948:	test   eax,eax
  40894a:	je     4089f7 <flatcc_builder_table_add_union_vector@@Base+0x14f>
  408950:	mov    eax,DWORD PTR [rbp-0x1c]
  408953:	lea    edx,[rax-0x1]
  408956:	mov    rax,QWORD PTR [rbp-0x18]
  40895a:	mov    esi,edx
  40895c:	mov    rdi,rax
  40895f:	call   409542 <flatcc_builder_table_add_offset@@Base>
  408964:	mov    QWORD PTR [rbp-0x8],rax
  408968:	cmp    QWORD PTR [rbp-0x8],0x0
  40896d:	jne    40899c <flatcc_builder_table_add_union_vector@@Base+0xf4>
  40896f:	cmp    QWORD PTR [rbp-0x8],0x0
  408974:	jne    408995 <flatcc_builder_table_add_union_vector@@Base+0xed>
  408976:	lea    rcx,[rip+0x36a3]        # 40c020 <flatcc_builder_padding_base@@Base+0xb40>
  40897d:	mov    edx,0x604
  408982:	lea    rsi,[rip+0x2d57]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408989:	lea    rdi,[rip+0x30aa]        # 40ba3a <flatcc_builder_padding_base@@Base+0x55a>
  408990:	call   4031a0 <__assert_fail@plt>
  408995:	mov    eax,0xffffffff
  40899a:	jmp    4089fc <flatcc_builder_table_add_union_vector@@Base+0x154>
  40899c:	mov    edx,DWORD PTR [rbp-0x24]
  40899f:	mov    rax,QWORD PTR [rbp-0x8]
  4089a3:	mov    DWORD PTR [rax],edx
  4089a5:	mov    edx,DWORD PTR [rbp-0x1c]
  4089a8:	mov    rax,QWORD PTR [rbp-0x18]
  4089ac:	mov    esi,edx
  4089ae:	mov    rdi,rax
  4089b1:	call   409542 <flatcc_builder_table_add_offset@@Base>
  4089b6:	mov    QWORD PTR [rbp-0x8],rax
  4089ba:	cmp    QWORD PTR [rbp-0x8],0x0
  4089bf:	jne    4089ee <flatcc_builder_table_add_union_vector@@Base+0x146>
  4089c1:	cmp    QWORD PTR [rbp-0x8],0x0
  4089c6:	jne    4089e7 <flatcc_builder_table_add_union_vector@@Base+0x13f>
  4089c8:	lea    rcx,[rip+0x3651]        # 40c020 <flatcc_builder_padding_base@@Base+0xb40>
  4089cf:	mov    edx,0x608
  4089d4:	lea    rsi,[rip+0x2d05]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4089db:	lea    rdi,[rip+0x3058]        # 40ba3a <flatcc_builder_padding_base@@Base+0x55a>
  4089e2:	call   4031a0 <__assert_fail@plt>
  4089e7:	mov    eax,0xffffffff
  4089ec:	jmp    4089fc <flatcc_builder_table_add_union_vector@@Base+0x154>
  4089ee:	mov    edx,DWORD PTR [rbp-0x20]
  4089f1:	mov    rax,QWORD PTR [rbp-0x8]
  4089f5:	mov    DWORD PTR [rax],edx
  4089f7:	mov    eax,0x0
  4089fc:	leave  
  4089fd:	ret    

00000000004089fe <flatcc_builder_create_union_vector@@Base>:
  4089fe:	endbr64 
  408a02:	push   rbp
  408a03:	mov    rbp,rsp
  408a06:	sub    rsp,0x40
  408a0a:	mov    QWORD PTR [rbp-0x28],rdi
  408a0e:	mov    QWORD PTR [rbp-0x30],rsi
  408a12:	mov    QWORD PTR [rbp-0x38],rdx
  408a16:	mov    DWORD PTR [rbp-0x8],0x0
  408a1d:	mov    DWORD PTR [rbp-0x4],0x0
  408a24:	mov    rax,QWORD PTR [rbp-0x28]
  408a28:	mov    rdi,rax
  408a2b:	call   40700c <flatcc_builder_start_offset_vector@@Base>
  408a30:	test   eax,eax
  408a32:	je     408a3d <flatcc_builder_create_union_vector@@Base+0x3f>
  408a34:	mov    rax,QWORD PTR [rbp-0x8]
  408a38:	jmp    408b28 <flatcc_builder_create_union_vector@@Base+0x12a>
  408a3d:	mov    rdx,QWORD PTR [rbp-0x38]
  408a41:	mov    rax,QWORD PTR [rbp-0x28]
  408a45:	mov    rsi,rdx
  408a48:	mov    rdi,rax
  408a4b:	call   4069eb <flatcc_builder_extend_offset_vector@@Base>
  408a50:	test   rax,rax
  408a53:	jne    408a5e <flatcc_builder_create_union_vector@@Base+0x60>
  408a55:	mov    rax,QWORD PTR [rbp-0x8]
  408a59:	jmp    408b28 <flatcc_builder_create_union_vector@@Base+0x12a>
  408a5e:	mov    rax,QWORD PTR [rbp-0x38]
  408a62:	mov    edx,eax
  408a64:	mov    rax,QWORD PTR [rbp-0x28]
  408a68:	mov    esi,edx
  408a6a:	mov    rdi,rax
  408a6d:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  408a72:	mov    QWORD PTR [rbp-0x18],rax
  408a76:	cmp    QWORD PTR [rbp-0x18],0x0
  408a7b:	jne    408a86 <flatcc_builder_create_union_vector@@Base+0x88>
  408a7d:	mov    rax,QWORD PTR [rbp-0x8]
  408a81:	jmp    408b28 <flatcc_builder_create_union_vector@@Base+0x12a>
  408a86:	mov    rax,QWORD PTR [rbp-0x28]
  408a8a:	mov    rdi,rax
  408a8d:	call   408720 <flatcc_builder_offset_vector_edit@@Base>
  408a92:	mov    QWORD PTR [rbp-0x10],rax
  408a96:	mov    QWORD PTR [rbp-0x20],0x0
  408a9e:	jmp    408af2 <flatcc_builder_create_union_vector@@Base+0xf4>
  408aa0:	mov    rax,QWORD PTR [rbp-0x20]
  408aa4:	lea    rdx,[rax*8+0x0]
  408aac:	mov    rax,QWORD PTR [rbp-0x30]
  408ab0:	add    rax,rdx
  408ab3:	mov    rcx,QWORD PTR [rbp-0x18]
  408ab7:	mov    rdx,QWORD PTR [rbp-0x20]
  408abb:	add    rdx,rcx
  408abe:	movzx  eax,BYTE PTR [rax]
  408ac1:	mov    BYTE PTR [rdx],al
  408ac3:	mov    rax,QWORD PTR [rbp-0x20]
  408ac7:	lea    rdx,[rax*8+0x0]
  408acf:	mov    rax,QWORD PTR [rbp-0x30]
  408ad3:	add    rax,rdx
  408ad6:	mov    rdx,QWORD PTR [rbp-0x20]
  408ada:	lea    rcx,[rdx*4+0x0]
  408ae2:	mov    rdx,QWORD PTR [rbp-0x10]
  408ae6:	add    rdx,rcx
  408ae9:	mov    eax,DWORD PTR [rax+0x4]
  408aec:	mov    DWORD PTR [rdx],eax
  408aee:	inc    QWORD PTR [rbp-0x20]
  408af2:	mov    rax,QWORD PTR [rbp-0x20]
  408af6:	cmp    rax,QWORD PTR [rbp-0x38]
  408afa:	jb     408aa0 <flatcc_builder_create_union_vector@@Base+0xa2>
  408afc:	mov    rcx,QWORD PTR [rbp-0x38]
  408b00:	mov    rdx,QWORD PTR [rbp-0x10]
  408b04:	mov    rsi,QWORD PTR [rbp-0x18]
  408b08:	mov    rax,QWORD PTR [rbp-0x28]
  408b0c:	mov    rdi,rax
  408b0f:	call   408b2a <flatcc_builder_create_union_vector_direct@@Base>
  408b14:	mov    QWORD PTR [rbp-0x8],rax
  408b18:	mov    rax,QWORD PTR [rbp-0x28]
  408b1c:	mov    rdi,rax
  408b1f:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408b24:	mov    rax,QWORD PTR [rbp-0x8]
  408b28:	leave  
  408b29:	ret    

0000000000408b2a <flatcc_builder_create_union_vector_direct@@Base>:
  408b2a:	endbr64 
  408b2e:	push   rbp
  408b2f:	mov    rbp,rsp
  408b32:	sub    rsp,0x30
  408b36:	mov    QWORD PTR [rbp-0x18],rdi
  408b3a:	mov    QWORD PTR [rbp-0x20],rsi
  408b3e:	mov    QWORD PTR [rbp-0x28],rdx
  408b42:	mov    QWORD PTR [rbp-0x30],rcx
  408b46:	mov    DWORD PTR [rbp-0x8],0x0
  408b4d:	mov    DWORD PTR [rbp-0x4],0x0
  408b54:	mov    rcx,QWORD PTR [rbp-0x20]
  408b58:	mov    rdx,QWORD PTR [rbp-0x30]
  408b5c:	mov    rsi,QWORD PTR [rbp-0x28]
  408b60:	mov    rax,QWORD PTR [rbp-0x18]
  408b64:	mov    rdi,rax
  408b67:	call   408245 <flatcc_builder_vector_edit@@Base+0x16>
  408b6c:	mov    DWORD PTR [rbp-0x4],eax
  408b6f:	mov    eax,DWORD PTR [rbp-0x4]
  408b72:	test   eax,eax
  408b74:	jne    408b7c <flatcc_builder_create_union_vector_direct@@Base+0x52>
  408b76:	mov    rax,QWORD PTR [rbp-0x8]
  408b7a:	jmp    408bb5 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  408b7c:	mov    rdx,QWORD PTR [rbp-0x30]
  408b80:	mov    rsi,QWORD PTR [rbp-0x20]
  408b84:	mov    rax,QWORD PTR [rbp-0x18]
  408b88:	mov    r9d,0xffffffff
  408b8e:	mov    r8d,0x1
  408b94:	mov    ecx,0x1
  408b99:	mov    rdi,rax
  408b9c:	call   407ecd <flatcc_builder_create_vector@@Base>
  408ba1:	mov    DWORD PTR [rbp-0x8],eax
  408ba4:	mov    eax,DWORD PTR [rbp-0x8]
  408ba7:	test   eax,eax
  408ba9:	jne    408bb1 <flatcc_builder_create_union_vector_direct@@Base+0x87>
  408bab:	mov    rax,QWORD PTR [rbp-0x8]
  408baf:	jmp    408bb5 <flatcc_builder_create_union_vector_direct@@Base+0x8b>
  408bb1:	mov    rax,QWORD PTR [rbp-0x8]
  408bb5:	leave  
  408bb6:	ret    

0000000000408bb7 <flatcc_builder_start_union_vector@@Base>:
  408bb7:	endbr64 
  408bbb:	push   rbp
  408bbc:	mov    rbp,rsp
  408bbf:	sub    rsp,0x10
  408bc3:	mov    QWORD PTR [rbp-0x8],rdi
  408bc7:	mov    rax,QWORD PTR [rbp-0x8]
  408bcb:	mov    esi,0x4
  408bd0:	mov    rdi,rax
  408bd3:	call   405522 <flatcc_builder_get_user_frame_ptr@@Base+0x26>
  408bd8:	test   eax,eax
  408bda:	je     408be3 <flatcc_builder_start_union_vector@@Base+0x2c>
  408bdc:	mov    eax,0xffffffff
  408be1:	jmp    408c25 <flatcc_builder_start_union_vector@@Base+0x6e>
  408be3:	mov    rax,QWORD PTR [rbp-0x8]
  408be7:	mov    rax,QWORD PTR [rax+0x30]
  408beb:	mov    DWORD PTR [rax+0x10],0x8
  408bf2:	mov    rax,QWORD PTR [rbp-0x8]
  408bf6:	mov    rax,QWORD PTR [rax+0x30]
  408bfa:	mov    DWORD PTR [rax+0x14],0x0
  408c01:	mov    rax,QWORD PTR [rbp-0x8]
  408c05:	mov    rax,QWORD PTR [rax+0x30]
  408c09:	mov    WORD PTR [rax+0xe],0x7
  408c0f:	mov    rax,QWORD PTR [rbp-0x8]
  408c13:	mov    esi,0xfffffffc
  408c18:	mov    rdi,rax
  408c1b:	call   4046f8 <flatcc_builder_default_alloc@@Base+0x173>
  408c20:	mov    eax,0x0
  408c25:	leave  
  408c26:	ret    

0000000000408c27 <flatcc_builder_end_union_vector@@Base>:
  408c27:	endbr64 
  408c2b:	push   rbp
  408c2c:	mov    rbp,rsp
  408c2f:	sub    rsp,0x40
  408c33:	mov    QWORD PTR [rbp-0x38],rdi
  408c37:	mov    DWORD PTR [rbp-0x8],0x0
  408c3e:	mov    DWORD PTR [rbp-0x4],0x0
  408c45:	mov    rax,QWORD PTR [rbp-0x38]
  408c49:	mov    rax,QWORD PTR [rax+0x30]
  408c4d:	movzx  eax,WORD PTR [rax+0xe]
  408c51:	cmp    ax,0x7
  408c55:	je     408c76 <flatcc_builder_end_union_vector@@Base+0x4f>
  408c57:	lea    rcx,[rip+0x3402]        # 40c060 <flatcc_builder_padding_base@@Base+0xb80>
  408c5e:	mov    edx,0x651
  408c63:	lea    rsi,[rip+0x2a76]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408c6a:	lea    rdi,[rip+0x2e07]        # 40ba78 <flatcc_builder_padding_base@@Base+0x598>
  408c71:	call   4031a0 <__assert_fail@plt>
  408c76:	mov    rax,QWORD PTR [rbp-0x38]
  408c7a:	mov    rdi,rax
  408c7d:	call   408d86 <flatcc_builder_union_vector_count@@Base>
  408c82:	mov    QWORD PTR [rbp-0x28],rax
  408c86:	mov    rax,QWORD PTR [rbp-0x28]
  408c8a:	mov    edx,eax
  408c8c:	mov    eax,edx
  408c8e:	shl    eax,0x2
  408c91:	add    edx,eax
  408c93:	mov    rax,QWORD PTR [rbp-0x38]
  408c97:	mov    esi,edx
  408c99:	mov    rdi,rax
  408c9c:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  408ca1:	mov    QWORD PTR [rbp-0x20],rax
  408ca5:	cmp    QWORD PTR [rbp-0x20],0x0
  408caa:	jne    408cb5 <flatcc_builder_end_union_vector@@Base+0x8e>
  408cac:	mov    rax,QWORD PTR [rbp-0x8]
  408cb0:	jmp    408d6e <flatcc_builder_end_union_vector@@Base+0x147>
  408cb5:	mov    rax,QWORD PTR [rbp-0x28]
  408cb9:	lea    rdx,[rax*4+0x0]
  408cc1:	mov    rax,QWORD PTR [rbp-0x20]
  408cc5:	add    rax,rdx
  408cc8:	mov    QWORD PTR [rbp-0x18],rax
  408ccc:	mov    rax,QWORD PTR [rbp-0x38]
  408cd0:	mov    rdi,rax
  408cd3:	call   408d70 <flatcc_builder_union_vector_edit@@Base>
  408cd8:	mov    QWORD PTR [rbp-0x10],rax
  408cdc:	mov    QWORD PTR [rbp-0x30],0x0
  408ce4:	jmp    408d38 <flatcc_builder_end_union_vector@@Base+0x111>
  408ce6:	mov    rax,QWORD PTR [rbp-0x30]
  408cea:	lea    rdx,[rax*8+0x0]
  408cf2:	mov    rax,QWORD PTR [rbp-0x10]
  408cf6:	add    rax,rdx
  408cf9:	mov    rcx,QWORD PTR [rbp-0x18]
  408cfd:	mov    rdx,QWORD PTR [rbp-0x30]
  408d01:	add    rdx,rcx
  408d04:	movzx  eax,BYTE PTR [rax]
  408d07:	mov    BYTE PTR [rdx],al
  408d09:	mov    rax,QWORD PTR [rbp-0x30]
  408d0d:	lea    rdx,[rax*8+0x0]
  408d15:	mov    rax,QWORD PTR [rbp-0x10]
  408d19:	add    rax,rdx
  408d1c:	mov    rdx,QWORD PTR [rbp-0x30]
  408d20:	lea    rcx,[rdx*4+0x0]
  408d28:	mov    rdx,QWORD PTR [rbp-0x20]
  408d2c:	add    rdx,rcx
  408d2f:	mov    eax,DWORD PTR [rax+0x4]
  408d32:	mov    DWORD PTR [rdx],eax
  408d34:	inc    QWORD PTR [rbp-0x30]
  408d38:	mov    rax,QWORD PTR [rbp-0x30]
  408d3c:	cmp    rax,QWORD PTR [rbp-0x28]
  408d40:	jb     408ce6 <flatcc_builder_end_union_vector@@Base+0xbf>
  408d42:	mov    rcx,QWORD PTR [rbp-0x28]
  408d46:	mov    rdx,QWORD PTR [rbp-0x20]
  408d4a:	mov    rsi,QWORD PTR [rbp-0x18]
  408d4e:	mov    rax,QWORD PTR [rbp-0x38]
  408d52:	mov    rdi,rax
  408d55:	call   408b2a <flatcc_builder_create_union_vector_direct@@Base>
  408d5a:	mov    QWORD PTR [rbp-0x8],rax
  408d5e:	mov    rax,QWORD PTR [rbp-0x38]
  408d62:	mov    rdi,rax
  408d65:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  408d6a:	mov    rax,QWORD PTR [rbp-0x8]
  408d6e:	leave  
  408d6f:	ret    

0000000000408d70 <flatcc_builder_union_vector_edit@@Base>:
  408d70:	endbr64 
  408d74:	push   rbp
  408d75:	mov    rbp,rsp
  408d78:	mov    QWORD PTR [rbp-0x8],rdi
  408d7c:	mov    rax,QWORD PTR [rbp-0x8]
  408d80:	mov    rax,QWORD PTR [rax+0x18]
  408d84:	pop    rbp
  408d85:	ret    

0000000000408d86 <flatcc_builder_union_vector_count@@Base>:
  408d86:	endbr64 
  408d8a:	push   rbp
  408d8b:	mov    rbp,rsp
  408d8e:	mov    QWORD PTR [rbp-0x8],rdi
  408d92:	mov    rax,QWORD PTR [rbp-0x8]
  408d96:	mov    rax,QWORD PTR [rax+0x30]
  408d9a:	mov    eax,DWORD PTR [rax+0x14]
  408d9d:	mov    eax,eax
  408d9f:	pop    rbp
  408da0:	ret    

0000000000408da1 <flatcc_builder_extend_union_vector@@Base>:
  408da1:	endbr64 
  408da5:	push   rbp
  408da6:	mov    rbp,rsp
  408da9:	sub    rsp,0x10
  408dad:	mov    QWORD PTR [rbp-0x8],rdi
  408db1:	mov    QWORD PTR [rbp-0x10],rsi
  408db5:	mov    rax,QWORD PTR [rbp-0x10]
  408db9:	mov    ecx,eax
  408dbb:	mov    rax,QWORD PTR [rbp-0x8]
  408dbf:	mov    edx,0x1fffffff
  408dc4:	mov    esi,ecx
  408dc6:	mov    rdi,rax
  408dc9:	call   406794 <flatcc_builder_end_struct@@Base+0x92>
  408dce:	test   eax,eax
  408dd0:	je     408dd9 <flatcc_builder_extend_union_vector@@Base+0x38>
  408dd2:	mov    eax,0x0
  408dd7:	jmp    408df2 <flatcc_builder_extend_union_vector@@Base+0x51>
  408dd9:	mov    rax,QWORD PTR [rbp-0x10]
  408ddd:	lea    edx,[rax*8+0x0]
  408de4:	mov    rax,QWORD PTR [rbp-0x8]
  408de8:	mov    esi,edx
  408dea:	mov    rdi,rax
  408ded:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  408df2:	leave  
  408df3:	ret    

0000000000408df4 <flatcc_builder_truncate_union_vector@@Base>:
  408df4:	endbr64 
  408df8:	push   rbp
  408df9:	mov    rbp,rsp
  408dfc:	sub    rsp,0x10
  408e00:	mov    QWORD PTR [rbp-0x8],rdi
  408e04:	mov    QWORD PTR [rbp-0x10],rsi
  408e08:	mov    rax,QWORD PTR [rbp-0x8]
  408e0c:	mov    rax,QWORD PTR [rax+0x30]
  408e10:	movzx  eax,WORD PTR [rax+0xe]
  408e14:	cmp    ax,0x7
  408e18:	je     408e39 <flatcc_builder_truncate_union_vector@@Base+0x45>
  408e1a:	lea    rcx,[rip+0x325f]        # 40c080 <flatcc_builder_padding_base@@Base+0xba0>
  408e21:	mov    edx,0x681
  408e26:	lea    rsi,[rip+0x28b3]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408e2d:	lea    rdi,[rip+0x2c44]        # 40ba78 <flatcc_builder_padding_base@@Base+0x598>
  408e34:	call   4031a0 <__assert_fail@plt>
  408e39:	mov    rax,QWORD PTR [rbp-0x8]
  408e3d:	mov    rax,QWORD PTR [rax+0x30]
  408e41:	mov    eax,DWORD PTR [rax+0x14]
  408e44:	mov    rdx,QWORD PTR [rbp-0x10]
  408e48:	cmp    eax,edx
  408e4a:	jae    408e85 <flatcc_builder_truncate_union_vector@@Base+0x91>
  408e4c:	mov    rax,QWORD PTR [rbp-0x8]
  408e50:	mov    rax,QWORD PTR [rax+0x30]
  408e54:	mov    eax,DWORD PTR [rax+0x14]
  408e57:	mov    rdx,QWORD PTR [rbp-0x10]
  408e5b:	cmp    eax,edx
  408e5d:	jae    408e7e <flatcc_builder_truncate_union_vector@@Base+0x8a>
  408e5f:	lea    rcx,[rip+0x321a]        # 40c080 <flatcc_builder_padding_base@@Base+0xba0>
  408e66:	mov    edx,0x682
  408e6b:	lea    rsi,[rip+0x286e]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408e72:	lea    rdi,[rip+0x2aaf]        # 40b928 <flatcc_builder_padding_base@@Base+0x448>
  408e79:	call   4031a0 <__assert_fail@plt>
  408e7e:	mov    eax,0xffffffff
  408e83:	jmp    408ec8 <flatcc_builder_truncate_union_vector@@Base+0xd4>
  408e85:	mov    rax,QWORD PTR [rbp-0x8]
  408e89:	mov    rax,QWORD PTR [rax+0x30]
  408e8d:	mov    edx,DWORD PTR [rax+0x14]
  408e90:	mov    rax,QWORD PTR [rbp-0x10]
  408e94:	mov    ecx,eax
  408e96:	mov    rax,QWORD PTR [rbp-0x8]
  408e9a:	mov    rax,QWORD PTR [rax+0x30]
  408e9e:	sub    edx,ecx
  408ea0:	mov    DWORD PTR [rax+0x14],edx
  408ea3:	mov    rax,QWORD PTR [rbp-0x8]
  408ea7:	mov    rax,QWORD PTR [rax+0x30]
  408eab:	mov    eax,DWORD PTR [rax+0x10]
  408eae:	mov    rdx,QWORD PTR [rbp-0x10]
  408eb2:	imul   edx,eax
  408eb5:	mov    rax,QWORD PTR [rbp-0x8]
  408eb9:	mov    esi,edx
  408ebb:	mov    rdi,rax
  408ebe:	call   40486b <flatcc_builder_default_alloc@@Base+0x2e6>
  408ec3:	mov    eax,0x0
  408ec8:	leave  
  408ec9:	ret    

0000000000408eca <flatcc_builder_union_vector_push@@Base>:
  408eca:	endbr64 
  408ece:	push   rbp
  408ecf:	mov    rbp,rsp
  408ed2:	sub    rsp,0x20
  408ed6:	mov    QWORD PTR [rbp-0x18],rdi
  408eda:	mov    QWORD PTR [rbp-0x20],rsi
  408ede:	mov    rax,QWORD PTR [rbp-0x18]
  408ee2:	mov    rax,QWORD PTR [rax+0x30]
  408ee6:	movzx  eax,WORD PTR [rax+0xe]
  408eea:	cmp    ax,0x7
  408eee:	je     408f0f <flatcc_builder_union_vector_push@@Base+0x45>
  408ef0:	lea    rcx,[rip+0x31c9]        # 40c0c0 <flatcc_builder_padding_base@@Base+0xbe0>
  408ef7:	mov    edx,0x68d
  408efc:	lea    rsi,[rip+0x27dd]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408f03:	lea    rdi,[rip+0x2b6e]        # 40ba78 <flatcc_builder_padding_base@@Base+0x598>
  408f0a:	call   4031a0 <__assert_fail@plt>
  408f0f:	mov    rax,QWORD PTR [rbp-0x18]
  408f13:	mov    rax,QWORD PTR [rax+0x30]
  408f17:	mov    eax,DWORD PTR [rax+0x14]
  408f1a:	cmp    eax,0x1fffffff
  408f1f:	jne    408f28 <flatcc_builder_union_vector_push@@Base+0x5e>
  408f21:	mov    eax,0x0
  408f26:	jmp    408f72 <flatcc_builder_union_vector_push@@Base+0xa8>
  408f28:	mov    rax,QWORD PTR [rbp-0x18]
  408f2c:	mov    rax,QWORD PTR [rax+0x30]
  408f30:	mov    edx,DWORD PTR [rax+0x14]
  408f33:	mov    rax,QWORD PTR [rbp-0x18]
  408f37:	mov    rax,QWORD PTR [rax+0x30]
  408f3b:	inc    edx
  408f3d:	mov    DWORD PTR [rax+0x14],edx
  408f40:	mov    rax,QWORD PTR [rbp-0x18]
  408f44:	mov    esi,0x8
  408f49:	mov    rdi,rax
  408f4c:	call   4047ef <flatcc_builder_default_alloc@@Base+0x26a>
  408f51:	mov    QWORD PTR [rbp-0x8],rax
  408f55:	cmp    QWORD PTR [rbp-0x8],0x0
  408f5a:	jne    408f63 <flatcc_builder_union_vector_push@@Base+0x99>
  408f5c:	mov    eax,0x0
  408f61:	jmp    408f72 <flatcc_builder_union_vector_push@@Base+0xa8>
  408f63:	mov    rax,QWORD PTR [rbp-0x8]
  408f67:	mov    rdx,QWORD PTR [rbp-0x20]
  408f6b:	mov    QWORD PTR [rax],rdx
  408f6e:	mov    rax,QWORD PTR [rbp-0x8]
  408f72:	leave  
  408f73:	ret    

0000000000408f74 <flatcc_builder_append_union_vector@@Base>:
  408f74:	endbr64 
  408f78:	push   rbp
  408f79:	mov    rbp,rsp
  408f7c:	sub    rsp,0x20
  408f80:	mov    QWORD PTR [rbp-0x8],rdi
  408f84:	mov    QWORD PTR [rbp-0x10],rsi
  408f88:	mov    QWORD PTR [rbp-0x18],rdx
  408f8c:	mov    rax,QWORD PTR [rbp-0x8]
  408f90:	mov    rax,QWORD PTR [rax+0x30]
  408f94:	movzx  eax,WORD PTR [rax+0xe]
  408f98:	cmp    ax,0x7
  408f9c:	je     408fbd <flatcc_builder_append_union_vector@@Base+0x49>
  408f9e:	lea    rcx,[rip+0x315b]        # 40c100 <flatcc_builder_padding_base@@Base+0xc20>
  408fa5:	mov    edx,0x69c
  408faa:	lea    rsi,[rip+0x272f]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  408fb1:	lea    rdi,[rip+0x2ac0]        # 40ba78 <flatcc_builder_padding_base@@Base+0x598>
  408fb8:	call   4031a0 <__assert_fail@plt>
  408fbd:	mov    rax,QWORD PTR [rbp-0x18]
  408fc1:	mov    ecx,eax
  408fc3:	mov    rax,QWORD PTR [rbp-0x8]
  408fc7:	mov    edx,0x1fffffff
  408fcc:	mov    esi,ecx
  408fce:	mov    rdi,rax
  408fd1:	call   406794 <flatcc_builder_end_struct@@Base+0x92>
  408fd6:	test   eax,eax
  408fd8:	je     408fe1 <flatcc_builder_append_union_vector@@Base+0x6d>
  408fda:	mov    eax,0x0
  408fdf:	jmp    408fff <flatcc_builder_append_union_vector@@Base+0x8b>
  408fe1:	mov    rax,QWORD PTR [rbp-0x18]
  408fe5:	lea    edx,[rax*8+0x0]
  408fec:	mov    rcx,QWORD PTR [rbp-0x10]
  408ff0:	mov    rax,QWORD PTR [rbp-0x8]
  408ff4:	mov    rsi,rcx
  408ff7:	mov    rdi,rax
  408ffa:	call   4048b7 <flatcc_builder_default_alloc@@Base+0x332>
  408fff:	leave  
  409000:	ret    

0000000000409001 <flatcc_builder_create_string@@Base>:
  409001:	endbr64 
  409005:	push   rbp
  409006:	mov    rbp,rsp
  409009:	sub    rsp,0xd0
  409010:	mov    QWORD PTR [rbp-0xb8],rdi
  409017:	mov    QWORD PTR [rbp-0xc0],rsi
  40901e:	mov    QWORD PTR [rbp-0xc8],rdx
  409025:	mov    rax,QWORD PTR fs:0x28
  40902e:	mov    QWORD PTR [rbp-0x8],rax
  409032:	xor    eax,eax
  409034:	mov    eax,0xffffffff
  409039:	cmp    QWORD PTR [rbp-0xc8],rax
  409040:	jbe    40904c <flatcc_builder_create_string@@Base+0x4b>
  409042:	mov    eax,0x0
  409047:	jmp    4091ef <flatcc_builder_create_string@@Base+0x1ee>
  40904c:	mov    rax,QWORD PTR [rbp-0xc8]
  409053:	mov    edi,eax
  409055:	call   4044c5 <main@@Base+0xc6>
  40905a:	mov    DWORD PTR [rbp-0xa8],eax
  409060:	mov    rax,QWORD PTR [rbp-0xc8]
  409067:	lea    ecx,[rax+0x1]
  40906a:	mov    rax,QWORD PTR [rbp-0xb8]
  409071:	mov    edx,0x4
  409076:	mov    esi,ecx
  409078:	mov    rdi,rax
  40907b:	call   4057c4 <flatcc_builder_get_user_frame_ptr@@Base+0x2c8>
  409080:	inc    eax
  409082:	mov    DWORD PTR [rbp-0xa4],eax
  409088:	mov    QWORD PTR [rbp-0xa0],0x0
  409093:	mov    DWORD PTR [rbp-0x98],0x0
  40909d:	mov    rax,QWORD PTR [rbp-0xa0]
  4090a4:	add    rax,0x4
  4090a8:	mov    QWORD PTR [rbp-0xa0],rax
  4090af:	mov    eax,DWORD PTR [rbp-0x98]
  4090b5:	cdqe   
  4090b7:	shl    rax,0x4
  4090bb:	add    rax,rbp
  4090be:	lea    rdx,[rax-0x90]
  4090c5:	lea    rax,[rbp-0xa8]
  4090cc:	mov    QWORD PTR [rdx],rax
  4090cf:	mov    eax,DWORD PTR [rbp-0x98]
  4090d5:	cdqe   
  4090d7:	shl    rax,0x4
  4090db:	add    rax,rbp
  4090de:	sub    rax,0x88
  4090e4:	mov    QWORD PTR [rax],0x4
  4090eb:	mov    eax,DWORD PTR [rbp-0x98]
  4090f1:	inc    eax
  4090f3:	mov    DWORD PTR [rbp-0x98],eax
  4090f9:	cmp    QWORD PTR [rbp-0xc8],0x0
  409101:	je     409169 <flatcc_builder_create_string@@Base+0x168>
  409103:	mov    rdx,QWORD PTR [rbp-0xa0]
  40910a:	mov    rax,QWORD PTR [rbp-0xc8]
  409111:	add    rax,rdx
  409114:	mov    QWORD PTR [rbp-0xa0],rax
  40911b:	mov    eax,DWORD PTR [rbp-0x98]
  409121:	cdqe   
  409123:	shl    rax,0x4
  409127:	add    rax,rbp
  40912a:	lea    rdx,[rax-0x90]
  409131:	mov    rax,QWORD PTR [rbp-0xc0]
  409138:	mov    QWORD PTR [rdx],rax
  40913b:	mov    eax,DWORD PTR [rbp-0x98]
  409141:	cdqe   
  409143:	shl    rax,0x4
  409147:	add    rax,rbp
  40914a:	lea    rdx,[rax-0x88]
  409151:	mov    rax,QWORD PTR [rbp-0xc8]
  409158:	mov    QWORD PTR [rdx],rax
  40915b:	mov    eax,DWORD PTR [rbp-0x98]
  409161:	inc    eax
  409163:	mov    DWORD PTR [rbp-0x98],eax
  409169:	cmp    DWORD PTR [rbp-0xa4],0x0
  409170:	je     4091d6 <flatcc_builder_create_string@@Base+0x1d5>
  409172:	mov    rdx,QWORD PTR [rbp-0xa0]
  409179:	mov    eax,DWORD PTR [rbp-0xa4]
  40917f:	add    rax,rdx
  409182:	mov    QWORD PTR [rbp-0xa0],rax
  409189:	mov    eax,DWORD PTR [rbp-0x98]
  40918f:	cdqe   
  409191:	shl    rax,0x4
  409195:	add    rax,rbp
  409198:	sub    rax,0x90
  40919e:	mov    rdx,0x40b4e0
  4091a5:	mov    QWORD PTR [rax],rdx
  4091a8:	mov    edx,DWORD PTR [rbp-0x98]
  4091ae:	mov    eax,DWORD PTR [rbp-0xa4]
  4091b4:	movsxd rdx,edx
  4091b7:	shl    rdx,0x4
  4091bb:	add    rdx,rbp
  4091be:	sub    rdx,0x88
  4091c5:	mov    QWORD PTR [rdx],rax
  4091c8:	mov    eax,DWORD PTR [rbp-0x98]
  4091ce:	inc    eax
  4091d0:	mov    DWORD PTR [rbp-0x98],eax
  4091d6:	lea    rdx,[rbp-0xa0]
  4091dd:	mov    rax,QWORD PTR [rbp-0xb8]
  4091e4:	mov    rsi,rdx
  4091e7:	mov    rdi,rax
  4091ea:	call   40580e <flatcc_builder_get_user_frame_ptr@@Base+0x312>
  4091ef:	mov    rcx,QWORD PTR [rbp-0x8]
  4091f3:	xor    rcx,QWORD PTR fs:0x28
  4091fc:	je     409203 <flatcc_builder_create_string@@Base+0x202>
  4091fe:	call   403180 <__stack_chk_fail@plt>
  409203:	leave  
  409204:	ret    

0000000000409205 <flatcc_builder_create_string_str@@Base>:
  409205:	endbr64 
  409209:	push   rbp
  40920a:	mov    rbp,rsp
  40920d:	sub    rsp,0x10
  409211:	mov    QWORD PTR [rbp-0x8],rdi
  409215:	mov    QWORD PTR [rbp-0x10],rsi
  409219:	mov    rax,QWORD PTR [rbp-0x10]
  40921d:	mov    rdi,rax
  409220:	call   403170 <strlen@plt>
  409225:	mov    rdx,rax
  409228:	mov    rcx,QWORD PTR [rbp-0x10]
  40922c:	mov    rax,QWORD PTR [rbp-0x8]
  409230:	mov    rsi,rcx
  409233:	mov    rdi,rax
  409236:	call   409001 <flatcc_builder_create_string@@Base>
  40923b:	leave  
  40923c:	ret    

000000000040923d <flatcc_builder_create_string_strn@@Base>:
  40923d:	endbr64 
  409241:	push   rbp
  409242:	mov    rbp,rsp
  409245:	sub    rsp,0x20
  409249:	mov    QWORD PTR [rbp-0x8],rdi
  40924d:	mov    QWORD PTR [rbp-0x10],rsi
  409251:	mov    QWORD PTR [rbp-0x18],rdx
  409255:	mov    rdx,QWORD PTR [rbp-0x18]
  409259:	mov    rax,QWORD PTR [rbp-0x10]
  40925d:	mov    rsi,rdx
  409260:	mov    rdi,rax
  409263:	call   404545 <main@@Base+0x146>
  409268:	mov    rdx,rax
  40926b:	mov    rcx,QWORD PTR [rbp-0x10]
  40926f:	mov    rax,QWORD PTR [rbp-0x8]
  409273:	mov    rsi,rcx
  409276:	mov    rdi,rax
  409279:	call   409001 <flatcc_builder_create_string@@Base>
  40927e:	leave  
  40927f:	ret    

0000000000409280 <flatcc_builder_end_string@@Base>:
  409280:	endbr64 
  409284:	push   rbp
  409285:	mov    rbp,rsp
  409288:	sub    rsp,0x20
  40928c:	mov    QWORD PTR [rbp-0x18],rdi
  409290:	mov    rax,QWORD PTR [rbp-0x18]
  409294:	mov    rax,QWORD PTR [rax+0x30]
  409298:	movzx  eax,WORD PTR [rax+0xe]
  40929c:	cmp    ax,0x6
  4092a0:	je     4092c1 <flatcc_builder_end_string@@Base+0x41>
  4092a2:	lea    rcx,[rip+0x2e87]        # 40c130 <flatcc_builder_padding_base@@Base+0xc50>
  4092a9:	mov    edx,0x6c4
  4092ae:	lea    rsi,[rip+0x242b]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4092b5:	lea    rdi,[rip+0x2614]        # 40b8d0 <flatcc_builder_padding_base@@Base+0x3f0>
  4092bc:	call   4031a0 <__assert_fail@plt>
  4092c1:	mov    rax,QWORD PTR [rbp-0x18]
  4092c5:	mov    rax,QWORD PTR [rax+0x30]
  4092c9:	mov    edx,DWORD PTR [rax+0x14]
  4092cc:	mov    rax,QWORD PTR [rbp-0x18]
  4092d0:	mov    eax,DWORD PTR [rax+0x20]
  4092d3:	cmp    edx,eax
  4092d5:	je     4092f6 <flatcc_builder_end_string@@Base+0x76>
  4092d7:	lea    rcx,[rip+0x2e52]        # 40c130 <flatcc_builder_padding_base@@Base+0xc50>
  4092de:	mov    edx,0x6c5
  4092e3:	lea    rsi,[rip+0x23f6]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4092ea:	lea    rdi,[rip+0x27bf]        # 40bab0 <flatcc_builder_padding_base@@Base+0x5d0>
  4092f1:	call   4031a0 <__assert_fail@plt>
  4092f6:	mov    rax,QWORD PTR [rbp-0x18]
  4092fa:	mov    eax,DWORD PTR [rax+0x20]
  4092fd:	mov    edx,eax
  4092ff:	mov    rax,QWORD PTR [rbp-0x18]
  409303:	mov    rcx,QWORD PTR [rax+0x18]
  409307:	mov    rax,QWORD PTR [rbp-0x18]
  40930b:	mov    rsi,rcx
  40930e:	mov    rdi,rax
  409311:	call   409001 <flatcc_builder_create_string@@Base>
  409316:	mov    DWORD PTR [rbp-0x4],eax
  409319:	cmp    DWORD PTR [rbp-0x4],0x0
  40931d:	jne    409326 <flatcc_builder_end_string@@Base+0xa6>
  40931f:	mov    eax,0x0
  409324:	jmp    409335 <flatcc_builder_end_string@@Base+0xb5>
  409326:	mov    rax,QWORD PTR [rbp-0x18]
  40932a:	mov    rdi,rax
  40932d:	call   4056fd <flatcc_builder_get_user_frame_ptr@@Base+0x201>
  409332:	mov    eax,DWORD PTR [rbp-0x4]
  409335:	leave  
  409336:	ret    

0000000000409337 <flatcc_builder_string_edit@@Base>:
  409337:	endbr64 
  40933b:	push   rbp
  40933c:	mov    rbp,rsp
  40933f:	mov    QWORD PTR [rbp-0x8],rdi
  409343:	mov    rax,QWORD PTR [rbp-0x8]
  409347:	mov    rax,QWORD PTR [rax+0x18]
  40934b:	pop    rbp
  40934c:	ret    

000000000040934d <flatcc_builder_string_len@@Base>:
  40934d:	endbr64 
  409351:	push   rbp
  409352:	mov    rbp,rsp
  409355:	mov    QWORD PTR [rbp-0x8],rdi
  409359:	mov    rax,QWORD PTR [rbp-0x8]
  40935d:	mov    rax,QWORD PTR [rax+0x30]
  409361:	mov    eax,DWORD PTR [rax+0x14]
  409364:	mov    eax,eax
  409366:	pop    rbp
  409367:	ret    

0000000000409368 <flatcc_builder_table_add@@Base>:
  409368:	endbr64 
  40936c:	push   rbp
  40936d:	mov    rbp,rsp
  409370:	sub    rsp,0x20
  409374:	mov    QWORD PTR [rbp-0x8],rdi
  409378:	mov    DWORD PTR [rbp-0xc],esi
  40937b:	mov    QWORD PTR [rbp-0x18],rdx
  40937f:	mov    eax,ecx
  409381:	mov    WORD PTR [rbp-0x10],ax
  409385:	mov    rax,QWORD PTR [rbp-0x8]
  409389:	mov    rax,QWORD PTR [rax+0x30]
  40938d:	movzx  eax,WORD PTR [rax+0xe]
  409391:	cmp    ax,0x3
  409395:	je     4093b6 <flatcc_builder_table_add@@Base+0x4e>
  409397:	lea    rcx,[rip+0x2db2]        # 40c150 <flatcc_builder_padding_base@@Base+0xc70>
  40939e:	mov    edx,0x6ed
  4093a3:	lea    rsi,[rip+0x2336]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4093aa:	lea    rdi,[rip+0x2607]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  4093b1:	call   4031a0 <__assert_fail@plt>
  4093b6:	cmp    DWORD PTR [rbp-0xc],0x0
  4093ba:	js     4093c5 <flatcc_builder_table_add@@Base+0x5d>
  4093bc:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  4093c3:	jle    4093e4 <flatcc_builder_table_add@@Base+0x7c>
  4093c5:	lea    rcx,[rip+0x2d84]        # 40c150 <flatcc_builder_padding_base@@Base+0xc70>
  4093cc:	mov    edx,0x6ee
  4093d1:	lea    rsi,[rip+0x2308]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4093d8:	lea    rdi,[rip+0x26f9]        # 40bad8 <flatcc_builder_padding_base@@Base+0x5f8>
  4093df:	call   4031a0 <__assert_fail@plt>
  4093e4:	mov    rax,QWORD PTR [rbp-0x8]
  4093e8:	movzx  eax,WORD PTR [rax+0xea]
  4093ef:	cmp    WORD PTR [rbp-0x10],ax
  4093f3:	jbe    409404 <flatcc_builder_table_add@@Base+0x9c>
  4093f5:	mov    rdx,QWORD PTR [rbp-0x8]
  4093f9:	movzx  eax,WORD PTR [rbp-0x10]
  4093fd:	mov    WORD PTR [rdx+0xea],ax
  409404:	mov    rax,QWORD PTR [rbp-0x8]
  409408:	mov    rax,QWORD PTR [rax+0x8]
  40940c:	mov    edx,DWORD PTR [rbp-0xc]
  40940f:	movsxd rdx,edx
  409412:	add    rdx,rdx
  409415:	add    rax,rdx
  409418:	movzx  eax,WORD PTR [rax]
  40941b:	test   ax,ax
  40941e:	je     40943f <flatcc_builder_table_add@@Base+0xd7>
  409420:	lea    rcx,[rip+0x2d29]        # 40c150 <flatcc_builder_padding_base@@Base+0xc70>
  409427:	mov    edx,0x6f8
  40942c:	lea    rsi,[rip+0x22ad]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  409433:	lea    rdi,[rip+0x2306]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  40943a:	call   4031a0 <__assert_fail@plt>
  40943f:	mov    rax,QWORD PTR [rbp-0x8]
  409443:	mov    edx,DWORD PTR [rax+0x14]
  409446:	mov    eax,DWORD PTR [rbp-0xc]
  409449:	xor    eax,edx
  40944b:	imul   eax,eax,0x9e3779b1
  409451:	mov    rdx,QWORD PTR [rbp-0x18]
  409455:	xor    eax,edx
  409457:	imul   edx,eax,0x9e3779b1
  40945d:	mov    rax,QWORD PTR [rbp-0x8]
  409461:	mov    DWORD PTR [rax+0x14],edx
  409464:	mov    eax,DWORD PTR [rbp-0xc]
  409467:	movzx  ecx,ax
  40946a:	movzx  edx,WORD PTR [rbp-0x10]
  40946e:	mov    rax,QWORD PTR [rbp-0x18]
  409472:	mov    esi,eax
  409474:	mov    rax,QWORD PTR [rbp-0x8]
  409478:	mov    rdi,rax
  40947b:	call   404909 <flatcc_builder_default_alloc@@Base+0x384>
  409480:	leave  
  409481:	ret    

0000000000409482 <flatcc_builder_table_edit@@Base>:
  409482:	endbr64 
  409486:	push   rbp
  409487:	mov    rbp,rsp
  40948a:	sub    rsp,0x10
  40948e:	mov    QWORD PTR [rbp-0x8],rdi
  409492:	mov    QWORD PTR [rbp-0x10],rsi
  409496:	mov    rax,QWORD PTR [rbp-0x8]
  40949a:	mov    rax,QWORD PTR [rax+0x30]
  40949e:	movzx  eax,WORD PTR [rax+0xe]
  4094a2:	cmp    ax,0x3
  4094a6:	je     4094c7 <flatcc_builder_table_edit@@Base+0x45>
  4094a8:	lea    rcx,[rip+0x2cc1]        # 40c170 <flatcc_builder_padding_base@@Base+0xc90>
  4094af:	mov    edx,0x702
  4094b4:	lea    rsi,[rip+0x2225]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4094bb:	lea    rdi,[rip+0x24f6]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  4094c2:	call   4031a0 <__assert_fail@plt>
  4094c7:	mov    rax,QWORD PTR [rbp-0x8]
  4094cb:	mov    rdx,QWORD PTR [rax+0x18]
  4094cf:	mov    rax,QWORD PTR [rbp-0x8]
  4094d3:	mov    eax,DWORD PTR [rax+0x20]
  4094d6:	mov    eax,eax
  4094d8:	sub    rax,QWORD PTR [rbp-0x10]
  4094dc:	add    rax,rdx
  4094df:	leave  
  4094e0:	ret    

00000000004094e1 <flatcc_builder_table_add_copy@@Base>:
  4094e1:	endbr64 
  4094e5:	push   rbp
  4094e6:	mov    rbp,rsp
  4094e9:	sub    rsp,0x30
  4094ed:	mov    QWORD PTR [rbp-0x18],rdi
  4094f1:	mov    DWORD PTR [rbp-0x1c],esi
  4094f4:	mov    QWORD PTR [rbp-0x28],rdx
  4094f8:	mov    QWORD PTR [rbp-0x30],rcx
  4094fc:	mov    eax,r8d
  4094ff:	mov    WORD PTR [rbp-0x20],ax
  409503:	movzx  ecx,WORD PTR [rbp-0x20]
  409507:	mov    rdx,QWORD PTR [rbp-0x30]
  40950b:	mov    esi,DWORD PTR [rbp-0x1c]
  40950e:	mov    rax,QWORD PTR [rbp-0x18]
  409512:	mov    rdi,rax
  409515:	call   409368 <flatcc_builder_table_add@@Base>
  40951a:	mov    QWORD PTR [rbp-0x8],rax
  40951e:	cmp    QWORD PTR [rbp-0x8],0x0
  409523:	je     40953c <flatcc_builder_table_add_copy@@Base+0x5b>
  409525:	mov    rdx,QWORD PTR [rbp-0x30]
  409529:	mov    rcx,QWORD PTR [rbp-0x28]
  40952d:	mov    rax,QWORD PTR [rbp-0x8]
  409531:	mov    rsi,rcx
  409534:	mov    rdi,rax
  409537:	call   403200 <memcpy@plt>
  40953c:	mov    rax,QWORD PTR [rbp-0x8]
  409540:	leave  
  409541:	ret    

0000000000409542 <flatcc_builder_table_add_offset@@Base>:
  409542:	endbr64 
  409546:	push   rbp
  409547:	mov    rbp,rsp
  40954a:	sub    rsp,0x10
  40954e:	mov    QWORD PTR [rbp-0x8],rdi
  409552:	mov    DWORD PTR [rbp-0xc],esi
  409555:	mov    rax,QWORD PTR [rbp-0x8]
  409559:	mov    rax,QWORD PTR [rax+0x30]
  40955d:	movzx  eax,WORD PTR [rax+0xe]
  409561:	cmp    ax,0x3
  409565:	je     409586 <flatcc_builder_table_add_offset@@Base+0x44>
  409567:	lea    rcx,[rip+0x2c32]        # 40c1a0 <flatcc_builder_padding_base@@Base+0xcc0>
  40956e:	mov    edx,0x713
  409573:	lea    rsi,[rip+0x2166]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  40957a:	lea    rdi,[rip+0x2437]        # 40b9b8 <flatcc_builder_padding_base@@Base+0x4d8>
  409581:	call   4031a0 <__assert_fail@plt>
  409586:	cmp    DWORD PTR [rbp-0xc],0x0
  40958a:	js     409595 <flatcc_builder_table_add_offset@@Base+0x53>
  40958c:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  409593:	jle    4095b4 <flatcc_builder_table_add_offset@@Base+0x72>
  409595:	lea    rcx,[rip+0x2c04]        # 40c1a0 <flatcc_builder_padding_base@@Base+0xcc0>
  40959c:	mov    edx,0x714
  4095a1:	lea    rsi,[rip+0x2138]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4095a8:	lea    rdi,[rip+0x2529]        # 40bad8 <flatcc_builder_padding_base@@Base+0x5f8>
  4095af:	call   4031a0 <__assert_fail@plt>
  4095b4:	mov    rax,QWORD PTR [rbp-0x8]
  4095b8:	mov    rax,QWORD PTR [rax+0x8]
  4095bc:	mov    edx,DWORD PTR [rbp-0xc]
  4095bf:	movsxd rdx,edx
  4095c2:	add    rdx,rdx
  4095c5:	add    rax,rdx
  4095c8:	movzx  eax,WORD PTR [rax]
  4095cb:	test   ax,ax
  4095ce:	je     4095ef <flatcc_builder_table_add_offset@@Base+0xad>
  4095d0:	lea    rcx,[rip+0x2bc9]        # 40c1a0 <flatcc_builder_padding_base@@Base+0xcc0>
  4095d7:	mov    edx,0x71b
  4095dc:	lea    rsi,[rip+0x20fd]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4095e3:	lea    rdi,[rip+0x2156]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4095ea:	call   4031a0 <__assert_fail@plt>
  4095ef:	mov    rax,QWORD PTR [rbp-0x8]
  4095f3:	mov    edx,DWORD PTR [rax+0x14]
  4095f6:	mov    eax,DWORD PTR [rbp-0xc]
  4095f9:	xor    eax,edx
  4095fb:	imul   eax,eax,0x9e3779b1
  409601:	xor    eax,0x4
  409604:	imul   edx,eax,0x9e3779b1
  40960a:	mov    rax,QWORD PTR [rbp-0x8]
  40960e:	mov    DWORD PTR [rax+0x14],edx
  409611:	mov    eax,DWORD PTR [rbp-0xc]
  409614:	movzx  edx,ax
  409617:	mov    rax,QWORD PTR [rbp-0x8]
  40961b:	mov    esi,edx
  40961d:	mov    rdi,rax
  409620:	call   4049d1 <flatcc_builder_default_alloc@@Base+0x44c>
  409625:	leave  
  409626:	ret    

0000000000409627 <flatcc_builder_push_buffer_alignment@@Base>:
  409627:	endbr64 
  40962b:	push   rbp
  40962c:	mov    rbp,rsp
  40962f:	mov    QWORD PTR [rbp-0x18],rdi
  409633:	mov    rax,QWORD PTR [rbp-0x18]
  409637:	movzx  eax,WORD PTR [rax+0xe8]
  40963e:	mov    WORD PTR [rbp-0x2],ax
  409642:	mov    rax,QWORD PTR [rbp-0x18]
  409646:	mov    WORD PTR [rax+0xe8],0x4
  40964f:	movzx  eax,WORD PTR [rbp-0x2]
  409653:	pop    rbp
  409654:	ret    

0000000000409655 <flatcc_builder_pop_buffer_alignment@@Base>:
  409655:	endbr64 
  409659:	push   rbp
  40965a:	mov    rbp,rsp
  40965d:	sub    rsp,0x10
  409661:	mov    QWORD PTR [rbp-0x8],rdi
  409665:	mov    eax,esi
  409667:	mov    WORD PTR [rbp-0xc],ax
  40966b:	movzx  edx,WORD PTR [rbp-0xc]
  40966f:	mov    rax,QWORD PTR [rbp-0x8]
  409673:	mov    esi,edx
  409675:	mov    rdi,rax
  409678:	call   4051f1 <flatcc_builder_clear@@Base+0x99>
  40967d:	nop
  40967e:	leave  
  40967f:	ret    

0000000000409680 <flatcc_builder_get_buffer_alignment@@Base>:
  409680:	endbr64 
  409684:	push   rbp
  409685:	mov    rbp,rsp
  409688:	mov    QWORD PTR [rbp-0x8],rdi
  40968c:	mov    rax,QWORD PTR [rbp-0x8]
  409690:	movzx  eax,WORD PTR [rax+0xe8]
  409697:	pop    rbp
  409698:	ret    

0000000000409699 <flatcc_builder_set_vtable_clustering@@Base>:
  409699:	endbr64 
  40969d:	push   rbp
  40969e:	mov    rbp,rsp
  4096a1:	mov    QWORD PTR [rbp-0x8],rdi
  4096a5:	mov    DWORD PTR [rbp-0xc],esi
  4096a8:	cmp    DWORD PTR [rbp-0xc],0x0
  4096ac:	sete   al
  4096af:	movzx  edx,al
  4096b2:	mov    rax,QWORD PTR [rbp-0x8]
  4096b6:	mov    DWORD PTR [rax+0x124],edx
  4096bc:	nop
  4096bd:	pop    rbp
  4096be:	ret    

00000000004096bf <flatcc_builder_set_block_align@@Base>:
  4096bf:	endbr64 
  4096c3:	push   rbp
  4096c4:	mov    rbp,rsp
  4096c7:	mov    QWORD PTR [rbp-0x8],rdi
  4096cb:	mov    eax,esi
  4096cd:	mov    WORD PTR [rbp-0xc],ax
  4096d1:	mov    rdx,QWORD PTR [rbp-0x8]
  4096d5:	movzx  eax,WORD PTR [rbp-0xc]
  4096d9:	mov    WORD PTR [rdx+0xec],ax
  4096e0:	nop
  4096e1:	pop    rbp
  4096e2:	ret    

00000000004096e3 <flatcc_builder_get_level@@Base>:
  4096e3:	endbr64 
  4096e7:	push   rbp
  4096e8:	mov    rbp,rsp
  4096eb:	mov    QWORD PTR [rbp-0x8],rdi
  4096ef:	mov    rax,QWORD PTR [rbp-0x8]
  4096f3:	mov    eax,DWORD PTR [rax+0x104]
  4096f9:	pop    rbp
  4096fa:	ret    

00000000004096fb <flatcc_builder_set_max_level@@Base>:
  4096fb:	endbr64 
  4096ff:	push   rbp
  409700:	mov    rbp,rsp
  409703:	mov    QWORD PTR [rbp-0x8],rdi
  409707:	mov    DWORD PTR [rbp-0xc],esi
  40970a:	mov    rax,QWORD PTR [rbp-0x8]
  40970e:	mov    edx,DWORD PTR [rbp-0xc]
  409711:	mov    DWORD PTR [rax+0x120],edx
  409717:	mov    rax,QWORD PTR [rbp-0x8]
  40971b:	mov    edx,DWORD PTR [rax+0x108]
  409721:	mov    rax,QWORD PTR [rbp-0x8]
  409725:	mov    eax,DWORD PTR [rax+0x120]
  40972b:	cmp    edx,eax
  40972d:	jge    409743 <flatcc_builder_set_max_level@@Base+0x48>
  40972f:	mov    rax,QWORD PTR [rbp-0x8]
  409733:	mov    edx,DWORD PTR [rax+0x120]
  409739:	mov    rax,QWORD PTR [rbp-0x8]
  40973d:	mov    DWORD PTR [rax+0x108],edx
  409743:	nop
  409744:	pop    rbp
  409745:	ret    

0000000000409746 <flatcc_builder_get_buffer_size@@Base>:
  409746:	endbr64 
  40974a:	push   rbp
  40974b:	mov    rbp,rsp
  40974e:	mov    QWORD PTR [rbp-0x8],rdi
  409752:	mov    rax,QWORD PTR [rbp-0x8]
  409756:	mov    edx,DWORD PTR [rax+0xf4]
  40975c:	mov    rax,QWORD PTR [rbp-0x8]
  409760:	mov    eax,DWORD PTR [rax+0xf0]
  409766:	sub    edx,eax
  409768:	mov    eax,edx
  40976a:	cdqe   
  40976c:	pop    rbp
  40976d:	ret    

000000000040976e <flatcc_builder_get_buffer_start@@Base>:
  40976e:	endbr64 
  409772:	push   rbp
  409773:	mov    rbp,rsp
  409776:	mov    QWORD PTR [rbp-0x8],rdi
  40977a:	mov    rax,QWORD PTR [rbp-0x8]
  40977e:	mov    eax,DWORD PTR [rax+0xf0]
  409784:	pop    rbp
  409785:	ret    

0000000000409786 <flatcc_builder_get_buffer_end@@Base>:
  409786:	endbr64 
  40978a:	push   rbp
  40978b:	mov    rbp,rsp
  40978e:	mov    QWORD PTR [rbp-0x8],rdi
  409792:	mov    rax,QWORD PTR [rbp-0x8]
  409796:	mov    eax,DWORD PTR [rax+0xf4]
  40979c:	pop    rbp
  40979d:	ret    

000000000040979e <flatcc_builder_set_vtable_cache_limit@@Base>:
  40979e:	endbr64 
  4097a2:	push   rbp
  4097a3:	mov    rbp,rsp
  4097a6:	mov    QWORD PTR [rbp-0x8],rdi
  4097aa:	mov    QWORD PTR [rbp-0x10],rsi
  4097ae:	mov    rax,QWORD PTR [rbp-0x8]
  4097b2:	mov    rdx,QWORD PTR [rbp-0x10]
  4097b6:	mov    QWORD PTR [rax+0x118],rdx
  4097bd:	nop
  4097be:	pop    rbp
  4097bf:	ret    

00000000004097c0 <flatcc_builder_set_identifier@@Base>:
  4097c0:	endbr64 
  4097c4:	push   rbp
  4097c5:	mov    rbp,rsp
  4097c8:	mov    QWORD PTR [rbp-0x8],rdi
  4097cc:	mov    QWORD PTR [rbp-0x10],rsi
  4097d0:	cmp    QWORD PTR [rbp-0x10],0x0
  4097d5:	je     4097dd <flatcc_builder_set_identifier@@Base+0x1d>
  4097d7:	mov    rax,QWORD PTR [rbp-0x10]
  4097db:	jmp    4097e4 <flatcc_builder_set_identifier@@Base+0x24>
  4097dd:	mov    rax,0x40b4e0
  4097e4:	mov    rdx,QWORD PTR [rbp-0x8]
  4097e8:	add    rdx,0x110
  4097ef:	mov    eax,DWORD PTR [rax]
  4097f1:	mov    DWORD PTR [rdx],eax
  4097f3:	nop
  4097f4:	pop    rbp
  4097f5:	ret    

00000000004097f6 <flatcc_builder_get_type@@Base>:
  4097f6:	endbr64 
  4097fa:	push   rbp
  4097fb:	mov    rbp,rsp
  4097fe:	mov    QWORD PTR [rbp-0x8],rdi
  409802:	mov    rax,QWORD PTR [rbp-0x8]
  409806:	mov    rax,QWORD PTR [rax+0x30]
  40980a:	test   rax,rax
  40980d:	je     409820 <flatcc_builder_get_type@@Base+0x2a>
  40980f:	mov    rax,QWORD PTR [rbp-0x8]
  409813:	mov    rax,QWORD PTR [rax+0x30]
  409817:	movzx  eax,WORD PTR [rax+0xe]
  40981b:	movzx  eax,ax
  40981e:	jmp    409825 <flatcc_builder_get_type@@Base+0x2f>
  409820:	mov    eax,0x0
  409825:	pop    rbp
  409826:	ret    

0000000000409827 <flatcc_builder_get_type_at@@Base>:
  409827:	endbr64 
  40982b:	push   rbp
  40982c:	mov    rbp,rsp
  40982f:	mov    QWORD PTR [rbp-0x8],rdi
  409833:	mov    DWORD PTR [rbp-0xc],esi
  409836:	cmp    DWORD PTR [rbp-0xc],0x0
  40983a:	jle    40984b <flatcc_builder_get_type_at@@Base+0x24>
  40983c:	mov    rax,QWORD PTR [rbp-0x8]
  409840:	mov    eax,DWORD PTR [rax+0x104]
  409846:	cmp    DWORD PTR [rbp-0xc],eax
  409849:	jle    409852 <flatcc_builder_get_type_at@@Base+0x2b>
  40984b:	mov    eax,0x0
  409850:	jmp    409886 <flatcc_builder_get_type_at@@Base+0x5f>
  409852:	mov    rax,QWORD PTR [rbp-0x8]
  409856:	mov    rcx,QWORD PTR [rax+0x30]
  40985a:	mov    rax,QWORD PTR [rbp-0x8]
  40985e:	mov    eax,DWORD PTR [rax+0x104]
  409864:	mov    edx,DWORD PTR [rbp-0xc]
  409867:	sub    edx,eax
  409869:	mov    eax,edx
  40986b:	movsxd rdx,eax
  40986e:	mov    rax,rdx
  409871:	shl    rax,0x3
  409875:	add    rax,rdx
  409878:	shl    rax,0x2
  40987c:	add    rax,rcx
  40987f:	movzx  eax,WORD PTR [rax+0xe]
  409883:	movzx  eax,ax
  409886:	pop    rbp
  409887:	ret    

0000000000409888 <flatcc_builder_get_direct_buffer@@Base>:
  409888:	endbr64 
  40988c:	push   rbp
  40988d:	mov    rbp,rsp
  409890:	sub    rsp,0x10
  409894:	mov    QWORD PTR [rbp-0x8],rdi
  409898:	mov    QWORD PTR [rbp-0x10],rsi
  40989c:	mov    rax,QWORD PTR [rbp-0x8]
  4098a0:	mov    eax,DWORD PTR [rax+0x128]
  4098a6:	test   eax,eax
  4098a8:	je     4098c6 <flatcc_builder_get_direct_buffer@@Base+0x3e>
  4098aa:	mov    rax,QWORD PTR [rbp-0x8]
  4098ae:	lea    rdx,[rax+0x130]
  4098b5:	mov    rax,QWORD PTR [rbp-0x10]
  4098b9:	mov    rsi,rax
  4098bc:	mov    rdi,rdx
  4098bf:	call   4044ec <main@@Base+0xed>
  4098c4:	jmp    4098dd <flatcc_builder_get_direct_buffer@@Base+0x55>
  4098c6:	cmp    QWORD PTR [rbp-0x10],0x0
  4098cb:	je     4098d8 <flatcc_builder_get_direct_buffer@@Base+0x50>
  4098cd:	mov    rax,QWORD PTR [rbp-0x10]
  4098d1:	mov    QWORD PTR [rax],0x0
  4098d8:	mov    eax,0x0
  4098dd:	leave  
  4098de:	ret    

00000000004098df <flatcc_builder_copy_buffer@@Base>:
  4098df:	endbr64 
  4098e3:	push   rbp
  4098e4:	mov    rbp,rsp
  4098e7:	sub    rsp,0x20
  4098eb:	mov    QWORD PTR [rbp-0x8],rdi
  4098ef:	mov    QWORD PTR [rbp-0x10],rsi
  4098f3:	mov    QWORD PTR [rbp-0x18],rdx
  4098f7:	mov    rax,QWORD PTR [rbp-0x8]
  4098fb:	mov    eax,DWORD PTR [rax+0x128]
  409901:	test   eax,eax
  409903:	jne    40990c <flatcc_builder_copy_buffer@@Base+0x2d>
  409905:	mov    eax,0x0
  40990a:	jmp    409958 <flatcc_builder_copy_buffer@@Base+0x79>
  40990c:	mov    rax,QWORD PTR [rbp-0x8]
  409910:	lea    rcx,[rax+0x130]
  409917:	mov    rdx,QWORD PTR [rbp-0x18]
  40991b:	mov    rax,QWORD PTR [rbp-0x10]
  40991f:	mov    rsi,rax
  409922:	mov    rdi,rcx
  409925:	call   40a593 <flatcc_emitter_copy_buffer@@Base>
  40992a:	mov    QWORD PTR [rbp-0x10],rax
  40992e:	cmp    QWORD PTR [rbp-0x10],0x0
  409933:	jne    409954 <flatcc_builder_copy_buffer@@Base+0x75>
  409935:	lea    rcx,[rip+0x2884]        # 40c1c0 <flatcc_builder_padding_base@@Base+0xce0>
  40993c:	mov    edx,0x786
  409941:	lea    rsi,[rip+0x1d98]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  409948:	lea    rdi,[rip+0x21cd]        # 40bb1c <flatcc_builder_padding_base@@Base+0x63c>
  40994f:	call   4031a0 <__assert_fail@plt>
  409954:	mov    rax,QWORD PTR [rbp-0x10]
  409958:	leave  
  409959:	ret    

000000000040995a <flatcc_builder_finalize_buffer@@Base>:
  40995a:	endbr64 
  40995e:	push   rbp
  40995f:	mov    rbp,rsp
  409962:	sub    rsp,0x20
  409966:	mov    QWORD PTR [rbp-0x18],rdi
  40996a:	mov    QWORD PTR [rbp-0x20],rsi
  40996e:	mov    rax,QWORD PTR [rbp-0x18]
  409972:	mov    rdi,rax
  409975:	call   409746 <flatcc_builder_get_buffer_size@@Base>
  40997a:	mov    QWORD PTR [rbp-0x10],rax
  40997e:	cmp    QWORD PTR [rbp-0x20],0x0
  409983:	je     409990 <flatcc_builder_finalize_buffer@@Base+0x36>
  409985:	mov    rax,QWORD PTR [rbp-0x20]
  409989:	mov    rdx,QWORD PTR [rbp-0x10]
  40998d:	mov    QWORD PTR [rax],rdx
  409990:	mov    rax,QWORD PTR [rbp-0x10]
  409994:	mov    rdi,rax
  409997:	call   403210 <malloc@plt>
  40999c:	mov    QWORD PTR [rbp-0x8],rax
  4099a0:	cmp    QWORD PTR [rbp-0x8],0x0
  4099a5:	jne    4099c6 <flatcc_builder_finalize_buffer@@Base+0x6c>
  4099a7:	lea    rcx,[rip+0x2832]        # 40c1e0 <flatcc_builder_padding_base@@Base+0xd00>
  4099ae:	mov    edx,0x798
  4099b3:	lea    rsi,[rip+0x1d26]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4099ba:	lea    rdi,[rip+0x1d7f]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4099c1:	call   4031a0 <__assert_fail@plt>
  4099c6:	mov    rdx,QWORD PTR [rbp-0x10]
  4099ca:	mov    rcx,QWORD PTR [rbp-0x8]
  4099ce:	mov    rax,QWORD PTR [rbp-0x18]
  4099d2:	mov    rsi,rcx
  4099d5:	mov    rdi,rax
  4099d8:	call   4098df <flatcc_builder_copy_buffer@@Base>
  4099dd:	test   rax,rax
  4099e0:	jne    409a01 <flatcc_builder_finalize_buffer@@Base+0xa7>
  4099e2:	lea    rcx,[rip+0x27f7]        # 40c1e0 <flatcc_builder_padding_base@@Base+0xd00>
  4099e9:	mov    edx,0x79c
  4099ee:	lea    rsi,[rip+0x1ceb]        # 40b6e0 <flatcc_builder_padding_base@@Base+0x200>
  4099f5:	lea    rdi,[rip+0x1d44]        # 40b740 <flatcc_builder_padding_base@@Base+0x260>
  4099fc:	call   4031a0 <__assert_fail@plt>
  409a01:	nop
  409a02:	endbr64 
  409a06:	cmp    QWORD PTR [rbp-0x8],0x0
  409a0b:	jne    409a1f <flatcc_builder_finalize_buffer@@Base+0xc5>
  409a0d:	cmp    QWORD PTR [rbp-0x20],0x0
  409a12:	je     409a1f <flatcc_builder_finalize_buffer@@Base+0xc5>
  409a14:	mov    rax,QWORD PTR [rbp-0x20]
  409a18:	mov    QWORD PTR [rax],0x0
  409a1f:	mov    rax,QWORD PTR [rbp-0x8]
  409a23:	leave  
  409a24:	ret    

0000000000409a25 <flatcc_builder_finalize_aligned_buffer@@Base>:
  409a25:	endbr64 
  409a29:	push   rbp
  409a2a:	mov    rbp,rsp
  409a2d:	sub    rsp,0x30
  409a31:	mov    QWORD PTR [rbp-0x28],rdi
  409a35:	mov    QWORD PTR [rbp-0x30],rsi
  409a39:	mov    rax,QWORD PTR [rbp-0x28]
  409a3d:	mov    rdi,rax
  409a40:	call   409746 <flatcc_builder_get_buffer_size@@Base>
  409a45:	mov    QWORD PTR [rbp-0x10],rax
  409a49:	cmp    QWORD PTR [rbp-0x30],0x0
  409a4e:	je     409a5b <flatcc_builder_finalize_aligned_buffer@@Base+0x36>
  409a50:	mov    rax,QWORD PTR [rbp-0x30]
  409a54:	mov    rdx,QWORD PTR [rbp-0x10]
  409a58:	mov    QWORD PTR [rax],rdx
  409a5b:	mov    rax,QWORD PTR [rbp-0x28]
  409a5f:	mov    rdi,rax
  409a62:	call   409680 <flatcc_builder_get_buffer_alignment@@Base>
  409a67:	movzx  eax,ax
  409a6a:	mov    QWORD PTR [rbp-0x8],rax
  409a6e:	mov    rdx,QWORD PTR [rbp-0x10]
  409a72:	mov    rax,QWORD PTR [rbp-0x8]
  409a76:	add    rax,rdx
  409a79:	lea    rdx,[rax-0x1]
  409a7d:	mov    rax,QWORD PTR [rbp-0x8]
  409a81:	neg    rax
  409a84:	and    rax,rdx
  409a87:	mov    QWORD PTR [rbp-0x10],rax
  409a8b:	mov    rdx,QWORD PTR [rbp-0x10]
  409a8f:	mov    rax,QWORD PTR [rbp-0x8]
  409a93:	mov    rsi,rdx
  409a96:	mov    rdi,rax
  409a99:	call   404438 <main@@Base+0x39>
  409a9e:	mov    QWORD PTR [rbp-0x18],rax
  409aa2:	cmp    QWORD PTR [rbp-0x18],0x0
  409aa7:	je     409adb <flatcc_builder_finalize_aligned_buffer@@Base+0xb6>
  409aa9:	mov    rdx,QWORD PTR [rbp-0x10]
  409aad:	mov    rcx,QWORD PTR [rbp-0x18]
  409ab1:	mov    rax,QWORD PTR [rbp-0x28]
  409ab5:	mov    rsi,rcx
  409ab8:	mov    rdi,rax
  409abb:	call   4098df <flatcc_builder_copy_buffer@@Base>
  409ac0:	test   rax,rax
  409ac3:	jne    409ade <flatcc_builder_finalize_aligned_buffer@@Base+0xb9>
  409ac5:	mov    rax,QWORD PTR [rbp-0x18]
  409ac9:	mov    rdi,rax
  409acc:	call   403140 <free@plt>
  409ad1:	mov    QWORD PTR [rbp-0x18],0x0
  409ad9:	jmp    409adf <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  409adb:	nop
  409adc:	jmp    409adf <flatcc_builder_finalize_aligned_buffer@@Base+0xba>
  409ade:	nop
  409adf:	cmp    QWORD PTR [rbp-0x18],0x0
  409ae4:	jne    409af8 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  409ae6:	cmp    QWORD PTR [rbp-0x30],0x0
  409aeb:	je     409af8 <flatcc_builder_finalize_aligned_buffer@@Base+0xd3>
  409aed:	mov    rax,QWORD PTR [rbp-0x30]
  409af1:	mov    QWORD PTR [rax],0x0
  409af8:	mov    rax,QWORD PTR [rbp-0x18]
  409afc:	leave  
  409afd:	ret    

0000000000409afe <flatcc_builder_aligned_alloc@@Base>:
  409afe:	endbr64 
  409b02:	push   rbp
  409b03:	mov    rbp,rsp
  409b06:	sub    rsp,0x10
  409b0a:	mov    QWORD PTR [rbp-0x8],rdi
  409b0e:	mov    QWORD PTR [rbp-0x10],rsi
  409b12:	mov    rdx,QWORD PTR [rbp-0x10]
  409b16:	mov    rax,QWORD PTR [rbp-0x8]
  409b1a:	mov    rsi,rdx
  409b1d:	mov    rdi,rax
  409b20:	call   404438 <main@@Base+0x39>
  409b25:	leave  
  409b26:	ret    

0000000000409b27 <flatcc_builder_aligned_free@@Base>:
  409b27:	endbr64 
  409b2b:	push   rbp
  409b2c:	mov    rbp,rsp
  409b2f:	sub    rsp,0x10
  409b33:	mov    QWORD PTR [rbp-0x8],rdi
  409b37:	mov    rax,QWORD PTR [rbp-0x8]
  409b3b:	mov    rdi,rax
  409b3e:	call   403140 <free@plt>
  409b43:	nop
  409b44:	leave  
  409b45:	ret    

0000000000409b46 <flatcc_builder_get_emit_context@@Base>:
  409b46:	endbr64 
  409b4a:	push   rbp
  409b4b:	mov    rbp,rsp
  409b4e:	mov    QWORD PTR [rbp-0x8],rdi
  409b52:	mov    rax,QWORD PTR [rbp-0x8]
  409b56:	mov    rax,QWORD PTR [rax+0x38]
  409b5a:	pop    rbp
  409b5b:	ret    
  409b5c:	endbr64 
  409b60:	push   rbp
  409b61:	mov    rbp,rsp
  409b64:	sub    rsp,0x20
  409b68:	mov    QWORD PTR [rbp-0x18],rdi
  409b6c:	mov    QWORD PTR [rbp-0x8],0x0
  409b74:	mov    rax,QWORD PTR [rbp-0x18]
  409b78:	mov    rax,QWORD PTR [rax]
  409b7b:	test   rax,rax
  409b7e:	je     409bdc <flatcc_builder_get_emit_context@@Base+0x96>
  409b80:	mov    rax,QWORD PTR [rbp-0x18]
  409b84:	mov    rax,QWORD PTR [rax]
  409b87:	mov    rdx,QWORD PTR [rax+0xb88]
  409b8e:	mov    rax,QWORD PTR [rbp-0x18]
  409b92:	mov    rax,QWORD PTR [rax+0x8]
  409b96:	cmp    rdx,rax
  409b99:	je     409bdc <flatcc_builder_get_emit_context@@Base+0x96>
  409b9b:	mov    rax,QWORD PTR [rbp-0x18]
  409b9f:	mov    rax,QWORD PTR [rax]
  409ba2:	mov    edx,DWORD PTR [rax+0xb90]
  409ba8:	mov    rax,QWORD PTR [rbp-0x18]
  409bac:	mov    rax,QWORD PTR [rax]
  409baf:	mov    rax,QWORD PTR [rax+0xb88]
  409bb6:	sub    edx,0xb80
  409bbc:	mov    DWORD PTR [rax+0xb90],edx
  409bc2:	mov    rax,QWORD PTR [rbp-0x18]
  409bc6:	mov    rax,QWORD PTR [rax]
  409bc9:	mov    rdx,QWORD PTR [rax+0xb88]
  409bd0:	mov    rax,QWORD PTR [rbp-0x18]
  409bd4:	mov    QWORD PTR [rax],rdx
  409bd7:	jmp    409d14 <flatcc_builder_get_emit_context@@Base+0x1ce>
  409bdc:	mov    edi,0xb98
  409be1:	call   403210 <malloc@plt>
  409be6:	mov    QWORD PTR [rbp-0x8],rax
  409bea:	cmp    QWORD PTR [rbp-0x8],0x0
  409bef:	jne    409bfb <flatcc_builder_get_emit_context@@Base+0xb5>
  409bf1:	mov    eax,0xffffffff
  409bf6:	jmp    409d62 <flatcc_builder_get_emit_context@@Base+0x21c>
  409bfb:	mov    rax,QWORD PTR [rbp-0x18]
  409bff:	mov    rax,QWORD PTR [rax+0x38]
  409c03:	lea    rdx,[rax+0xb80]
  409c0a:	mov    rax,QWORD PTR [rbp-0x18]
  409c0e:	mov    QWORD PTR [rax+0x38],rdx
  409c12:	mov    rax,QWORD PTR [rbp-0x18]
  409c16:	mov    rax,QWORD PTR [rax]
  409c19:	test   rax,rax
  409c1c:	je     409c78 <flatcc_builder_get_emit_context@@Base+0x132>
  409c1e:	mov    rax,QWORD PTR [rbp-0x18]
  409c22:	mov    rdx,QWORD PTR [rax+0x8]
  409c26:	mov    rax,QWORD PTR [rbp-0x8]
  409c2a:	mov    QWORD PTR [rax+0xb88],rdx
  409c31:	mov    rax,QWORD PTR [rbp-0x18]
  409c35:	mov    rdx,QWORD PTR [rax]
  409c38:	mov    rax,QWORD PTR [rbp-0x8]
  409c3c:	mov    QWORD PTR [rax+0xb80],rdx
  409c43:	mov    rax,QWORD PTR [rbp-0x18]
  409c47:	mov    rax,QWORD PTR [rax]
  409c4a:	mov    rdx,QWORD PTR [rbp-0x8]
  409c4e:	mov    QWORD PTR [rax+0xb88],rdx
  409c55:	mov    rax,QWORD PTR [rbp-0x18]
  409c59:	mov    rax,QWORD PTR [rax+0x8]
  409c5d:	mov    rdx,QWORD PTR [rbp-0x8]
  409c61:	mov    QWORD PTR [rax+0xb80],rdx
  409c68:	mov    rax,QWORD PTR [rbp-0x18]
  409c6c:	mov    rdx,QWORD PTR [rbp-0x8]
  409c70:	mov    QWORD PTR [rax],rdx
  409c73:	jmp    409d14 <flatcc_builder_get_emit_context@@Base+0x1ce>
  409c78:	mov    rax,QWORD PTR [rbp-0x18]
  409c7c:	mov    rdx,QWORD PTR [rbp-0x8]
  409c80:	mov    QWORD PTR [rax],rdx
  409c83:	mov    rax,QWORD PTR [rbp-0x18]
  409c87:	mov    rdx,QWORD PTR [rbp-0x8]
  409c8b:	mov    QWORD PTR [rax+0x8],rdx
  409c8f:	mov    rax,QWORD PTR [rbp-0x8]
  409c93:	mov    rdx,QWORD PTR [rbp-0x8]
  409c97:	mov    QWORD PTR [rax+0xb80],rdx
  409c9e:	mov    rax,QWORD PTR [rbp-0x8]
  409ca2:	mov    rdx,QWORD PTR [rbp-0x8]
  409ca6:	mov    QWORD PTR [rax+0xb88],rdx
  409cad:	mov    rax,QWORD PTR [rbp-0x18]
  409cb1:	mov    rax,QWORD PTR [rax]
  409cb4:	lea    rdx,[rax+0x5c0]
  409cbb:	mov    rax,QWORD PTR [rbp-0x18]
  409cbf:	mov    QWORD PTR [rax+0x10],rdx
  409cc3:	mov    rax,QWORD PTR [rbp-0x18]
  409cc7:	mov    rdx,QWORD PTR [rax+0x10]
  409ccb:	mov    rax,QWORD PTR [rbp-0x18]
  409ccf:	mov    QWORD PTR [rax+0x20],rdx
  409cd3:	mov    rax,QWORD PTR [rbp-0x18]
  409cd7:	mov    QWORD PTR [rax+0x18],0x5c0
  409cdf:	mov    rax,QWORD PTR [rbp-0x18]
  409ce3:	mov    rax,QWORD PTR [rax+0x18]
  409ce7:	mov    edx,0xb80
  409cec:	sub    rdx,rax
  409cef:	mov    rax,QWORD PTR [rbp-0x18]
  409cf3:	mov    QWORD PTR [rax+0x28],rdx
  409cf7:	mov    rax,QWORD PTR [rbp-0x18]
  409cfb:	mov    rax,QWORD PTR [rax+0x18]
  409cff:	neg    eax
  409d01:	mov    edx,eax
  409d03:	mov    rax,QWORD PTR [rbp-0x8]
  409d07:	mov    DWORD PTR [rax+0xb90],edx
  409d0d:	mov    eax,0x0
  409d12:	jmp    409d62 <flatcc_builder_get_emit_context@@Base+0x21c>
  409d14:	mov    rax,QWORD PTR [rbp-0x18]
  409d18:	mov    rax,QWORD PTR [rax]
  409d1b:	lea    rdx,[rax+0xb80]
  409d22:	mov    rax,QWORD PTR [rbp-0x18]
  409d26:	mov    QWORD PTR [rax+0x10],rdx
  409d2a:	mov    rax,QWORD PTR [rbp-0x18]
  409d2e:	mov    QWORD PTR [rax+0x18],0xb80
  409d36:	mov    rax,QWORD PTR [rbp-0x18]
  409d3a:	mov    rax,QWORD PTR [rax]
  409d3d:	mov    rax,QWORD PTR [rax+0xb80]
  409d44:	mov    edx,DWORD PTR [rax+0xb90]
  409d4a:	mov    rax,QWORD PTR [rbp-0x18]
  409d4e:	mov    rax,QWORD PTR [rax]
  409d51:	sub    edx,0xb80
  409d57:	mov    DWORD PTR [rax+0xb90],edx
  409d5d:	mov    eax,0x0
  409d62:	leave  
  409d63:	ret    
  409d64:	endbr64 
  409d68:	push   rbp
  409d69:	mov    rbp,rsp
  409d6c:	sub    rsp,0x20
  409d70:	mov    QWORD PTR [rbp-0x18],rdi
  409d74:	mov    QWORD PTR [rbp-0x8],0x0
  409d7c:	mov    rax,QWORD PTR [rbp-0x18]
  409d80:	mov    rax,QWORD PTR [rax+0x8]
  409d84:	test   rax,rax
  409d87:	je     409dc0 <flatcc_builder_get_emit_context@@Base+0x27a>
  409d89:	mov    rax,QWORD PTR [rbp-0x18]
  409d8d:	mov    rax,QWORD PTR [rax+0x8]
  409d91:	mov    rdx,QWORD PTR [rax+0xb80]
  409d98:	mov    rax,QWORD PTR [rbp-0x18]
  409d9c:	mov    rax,QWORD PTR [rax]
  409d9f:	cmp    rdx,rax
  409da2:	je     409dc0 <flatcc_builder_get_emit_context@@Base+0x27a>
  409da4:	mov    rax,QWORD PTR [rbp-0x18]
  409da8:	mov    rax,QWORD PTR [rax+0x8]
  409dac:	mov    rdx,QWORD PTR [rax+0xb80]
  409db3:	mov    rax,QWORD PTR [rbp-0x18]
  409db7:	mov    QWORD PTR [rax+0x8],rdx
  409dbb:	jmp    409efa <flatcc_builder_get_emit_context@@Base+0x3b4>
  409dc0:	mov    edi,0xb98
  409dc5:	call   403210 <malloc@plt>
  409dca:	mov    QWORD PTR [rbp-0x8],rax
  409dce:	cmp    QWORD PTR [rbp-0x8],0x0
  409dd3:	jne    409ddf <flatcc_builder_get_emit_context@@Base+0x299>
  409dd5:	mov    eax,0xffffffff
  409dda:	jmp    409f47 <flatcc_builder_get_emit_context@@Base+0x401>
  409ddf:	mov    rax,QWORD PTR [rbp-0x18]
  409de3:	mov    rax,QWORD PTR [rax+0x38]
  409de7:	lea    rdx,[rax+0xb80]
  409dee:	mov    rax,QWORD PTR [rbp-0x18]
  409df2:	mov    QWORD PTR [rax+0x38],rdx
  409df6:	mov    rax,QWORD PTR [rbp-0x18]
  409dfa:	mov    rax,QWORD PTR [rax+0x8]
  409dfe:	test   rax,rax
  409e01:	je     409e5e <flatcc_builder_get_emit_context@@Base+0x318>
  409e03:	mov    rax,QWORD PTR [rbp-0x18]
  409e07:	mov    rdx,QWORD PTR [rax+0x8]
  409e0b:	mov    rax,QWORD PTR [rbp-0x8]
  409e0f:	mov    QWORD PTR [rax+0xb88],rdx
  409e16:	mov    rax,QWORD PTR [rbp-0x18]
  409e1a:	mov    rdx,QWORD PTR [rax]
  409e1d:	mov    rax,QWORD PTR [rbp-0x8]
  409e21:	mov    QWORD PTR [rax+0xb80],rdx
  409e28:	mov    rax,QWORD PTR [rbp-0x18]
  409e2c:	mov    rax,QWORD PTR [rax]
  409e2f:	mov    rdx,QWORD PTR [rbp-0x8]
  409e33:	mov    QWORD PTR [rax+0xb88],rdx
  409e3a:	mov    rax,QWORD PTR [rbp-0x18]
  409e3e:	mov    rax,QWORD PTR [rax+0x8]
  409e42:	mov    rdx,QWORD PTR [rbp-0x8]
  409e46:	mov    QWORD PTR [rax+0xb80],rdx
  409e4d:	mov    rax,QWORD PTR [rbp-0x18]
  409e51:	mov    rdx,QWORD PTR [rbp-0x8]
  409e55:	mov    QWORD PTR [rax+0x8],rdx
  409e59:	jmp    409efa <flatcc_builder_get_emit_context@@Base+0x3b4>
  409e5e:	mov    rax,QWORD PTR [rbp-0x18]
  409e62:	mov    rdx,QWORD PTR [rbp-0x8]
  409e66:	mov    QWORD PTR [rax],rdx
  409e69:	mov    rax,QWORD PTR [rbp-0x18]
  409e6d:	mov    rdx,QWORD PTR [rbp-0x8]
  409e71:	mov    QWORD PTR [rax+0x8],rdx
  409e75:	mov    rax,QWORD PTR [rbp-0x8]
  409e79:	mov    rdx,QWORD PTR [rbp-0x8]
  409e7d:	mov    QWORD PTR [rax+0xb80],rdx
  409e84:	mov    rax,QWORD PTR [rbp-0x8]
  409e88:	mov    rdx,QWORD PTR [rbp-0x8]
  409e8c:	mov    QWORD PTR [rax+0xb88],rdx
  409e93:	mov    rax,QWORD PTR [rbp-0x18]
  409e97:	mov    rax,QWORD PTR [rax]
  409e9a:	lea    rdx,[rax+0x5c0]
  409ea1:	mov    rax,QWORD PTR [rbp-0x18]
  409ea5:	mov    QWORD PTR [rax+0x10],rdx
  409ea9:	mov    rax,QWORD PTR [rbp-0x18]
  409ead:	mov    rdx,QWORD PTR [rax+0x10]
  409eb1:	mov    rax,QWORD PTR [rbp-0x18]
  409eb5:	mov    QWORD PTR [rax+0x20],rdx
  409eb9:	mov    rax,QWORD PTR [rbp-0x18]
  409ebd:	mov    QWORD PTR [rax+0x18],0x5c0
  409ec5:	mov    rax,QWORD PTR [rbp-0x18]
  409ec9:	mov    rax,QWORD PTR [rax+0x18]
  409ecd:	mov    edx,0xb80
  409ed2:	sub    rdx,rax
  409ed5:	mov    rax,QWORD PTR [rbp-0x18]
  409ed9:	mov    QWORD PTR [rax+0x28],rdx
  409edd:	mov    rax,QWORD PTR [rbp-0x18]
  409ee1:	mov    rax,QWORD PTR [rax+0x18]
  409ee5:	neg    eax
  409ee7:	mov    edx,eax
  409ee9:	mov    rax,QWORD PTR [rbp-0x8]
  409eed:	mov    DWORD PTR [rax+0xb90],edx
  409ef3:	mov    eax,0x0
  409ef8:	jmp    409f47 <flatcc_builder_get_emit_context@@Base+0x401>
  409efa:	mov    rax,QWORD PTR [rbp-0x18]
  409efe:	mov    rax,QWORD PTR [rax+0x8]
  409f02:	mov    rdx,rax
  409f05:	mov    rax,QWORD PTR [rbp-0x18]
  409f09:	mov    QWORD PTR [rax+0x20],rdx
  409f0d:	mov    rax,QWORD PTR [rbp-0x18]
  409f11:	mov    QWORD PTR [rax+0x28],0xb80
  409f19:	mov    rax,QWORD PTR [rbp-0x18]
  409f1d:	mov    rax,QWORD PTR [rax+0x8]
  409f21:	mov    rax,QWORD PTR [rax+0xb88]
  409f28:	mov    edx,DWORD PTR [rax+0xb90]
  409f2e:	mov    rax,QWORD PTR [rbp-0x18]
  409f32:	mov    rax,QWORD PTR [rax+0x8]
  409f36:	add    edx,0xb80
  409f3c:	mov    DWORD PTR [rax+0xb90],edx
  409f42:	mov    eax,0x0
  409f47:	leave  
  409f48:	ret    
  409f49:	endbr64 
  409f4d:	push   rbp
  409f4e:	mov    rbp,rsp
  409f51:	sub    rsp,0x30
  409f55:	mov    QWORD PTR [rbp-0x18],rdi
  409f59:	mov    QWORD PTR [rbp-0x20],rsi
  409f5d:	mov    QWORD PTR [rbp-0x28],rdx
  409f61:	mov    rax,QWORD PTR [rbp-0x28]
  409f65:	add    QWORD PTR [rbp-0x20],rax
  409f69:	jmp    40a00d <flatcc_builder_get_emit_context@@Base+0x4c7>
  409f6e:	mov    rax,QWORD PTR [rbp-0x28]
  409f72:	mov    QWORD PTR [rbp-0x8],rax
  409f76:	mov    rax,QWORD PTR [rbp-0x18]
  409f7a:	mov    rax,QWORD PTR [rax+0x18]
  409f7e:	cmp    QWORD PTR [rbp-0x8],rax
  409f82:	jbe    409fae <flatcc_builder_get_emit_context@@Base+0x468>
  409f84:	mov    rax,QWORD PTR [rbp-0x18]
  409f88:	mov    rax,QWORD PTR [rax+0x18]
  409f8c:	mov    QWORD PTR [rbp-0x8],rax
  409f90:	cmp    QWORD PTR [rbp-0x8],0x0
  409f95:	jne    409fae <flatcc_builder_get_emit_context@@Base+0x468>
  409f97:	mov    rax,QWORD PTR [rbp-0x18]
  409f9b:	mov    rdi,rax
  409f9e:	call   409b5c <flatcc_builder_get_emit_context@@Base+0x16>
  409fa3:	test   eax,eax
  409fa5:	je     40a00d <flatcc_builder_get_emit_context@@Base+0x4c7>
  409fa7:	mov    eax,0xffffffff
  409fac:	jmp    40a01d <flatcc_builder_get_emit_context@@Base+0x4d7>
  409fae:	mov    rax,QWORD PTR [rbp-0x18]
  409fb2:	mov    rax,QWORD PTR [rax+0x10]
  409fb6:	mov    rdx,QWORD PTR [rbp-0x8]
  409fba:	neg    rdx
  409fbd:	add    rdx,rax
  409fc0:	mov    rax,QWORD PTR [rbp-0x18]
  409fc4:	mov    QWORD PTR [rax+0x10],rdx
  409fc8:	mov    rax,QWORD PTR [rbp-0x18]
  409fcc:	mov    rax,QWORD PTR [rax+0x18]
  409fd0:	sub    rax,QWORD PTR [rbp-0x8]
  409fd4:	mov    rdx,rax
  409fd7:	mov    rax,QWORD PTR [rbp-0x18]
  409fdb:	mov    QWORD PTR [rax+0x18],rdx
  409fdf:	mov    rax,QWORD PTR [rbp-0x8]
  409fe3:	neg    rax
  409fe6:	add    QWORD PTR [rbp-0x20],rax
  409fea:	mov    rax,QWORD PTR [rbp-0x8]
  409fee:	sub    QWORD PTR [rbp-0x28],rax
  409ff2:	mov    rax,QWORD PTR [rbp-0x18]
  409ff6:	mov    rax,QWORD PTR [rax+0x10]
  409ffa:	mov    rdx,QWORD PTR [rbp-0x8]
  409ffe:	mov    rcx,QWORD PTR [rbp-0x20]
  40a002:	mov    rsi,rcx
  40a005:	mov    rdi,rax
  40a008:	call   403200 <memcpy@plt>
  40a00d:	cmp    QWORD PTR [rbp-0x28],0x0
  40a012:	jne    409f6e <flatcc_builder_get_emit_context@@Base+0x428>
  40a018:	mov    eax,0x0
  40a01d:	leave  
  40a01e:	ret    
  40a01f:	endbr64 
  40a023:	push   rbp
  40a024:	mov    rbp,rsp
  40a027:	sub    rsp,0x30
  40a02b:	mov    QWORD PTR [rbp-0x18],rdi
  40a02f:	mov    QWORD PTR [rbp-0x20],rsi
  40a033:	mov    QWORD PTR [rbp-0x28],rdx
  40a037:	jmp    40a0d5 <flatcc_builder_get_emit_context@@Base+0x58f>
  40a03c:	mov    rax,QWORD PTR [rbp-0x28]
  40a040:	mov    QWORD PTR [rbp-0x8],rax
  40a044:	mov    rax,QWORD PTR [rbp-0x18]
  40a048:	mov    rax,QWORD PTR [rax+0x28]
  40a04c:	cmp    QWORD PTR [rbp-0x8],rax
  40a050:	jbe    40a07c <flatcc_builder_get_emit_context@@Base+0x536>
  40a052:	mov    rax,QWORD PTR [rbp-0x18]
  40a056:	mov    rax,QWORD PTR [rax+0x28]
  40a05a:	mov    QWORD PTR [rbp-0x8],rax
  40a05e:	cmp    QWORD PTR [rbp-0x8],0x0
  40a063:	jne    40a07c <flatcc_builder_get_emit_context@@Base+0x536>
  40a065:	mov    rax,QWORD PTR [rbp-0x18]
  40a069:	mov    rdi,rax
  40a06c:	call   409d64 <flatcc_builder_get_emit_context@@Base+0x21e>
  40a071:	test   eax,eax
  40a073:	je     40a0d5 <flatcc_builder_get_emit_context@@Base+0x58f>
  40a075:	mov    eax,0xffffffff
  40a07a:	jmp    40a0e5 <flatcc_builder_get_emit_context@@Base+0x59f>
  40a07c:	mov    rax,QWORD PTR [rbp-0x18]
  40a080:	mov    rax,QWORD PTR [rax+0x20]
  40a084:	mov    rdx,QWORD PTR [rbp-0x8]
  40a088:	mov    rcx,QWORD PTR [rbp-0x20]
  40a08c:	mov    rsi,rcx
  40a08f:	mov    rdi,rax
  40a092:	call   403200 <memcpy@plt>
  40a097:	mov    rax,QWORD PTR [rbp-0x8]
  40a09b:	sub    QWORD PTR [rbp-0x28],rax
  40a09f:	mov    rax,QWORD PTR [rbp-0x8]
  40a0a3:	add    QWORD PTR [rbp-0x20],rax
  40a0a7:	mov    rax,QWORD PTR [rbp-0x18]
  40a0ab:	mov    rdx,QWORD PTR [rax+0x20]
  40a0af:	mov    rax,QWORD PTR [rbp-0x8]
  40a0b3:	add    rdx,rax
  40a0b6:	mov    rax,QWORD PTR [rbp-0x18]
  40a0ba:	mov    QWORD PTR [rax+0x20],rdx
  40a0be:	mov    rax,QWORD PTR [rbp-0x18]
  40a0c2:	mov    rax,QWORD PTR [rax+0x28]
  40a0c6:	sub    rax,QWORD PTR [rbp-0x8]
  40a0ca:	mov    rdx,rax
  40a0cd:	mov    rax,QWORD PTR [rbp-0x18]
  40a0d1:	mov    QWORD PTR [rax+0x28],rdx
  40a0d5:	cmp    QWORD PTR [rbp-0x28],0x0
  40a0da:	jne    40a03c <flatcc_builder_get_emit_context@@Base+0x4f6>
  40a0e0:	mov    eax,0x0
  40a0e5:	leave  
  40a0e6:	ret    

000000000040a0e7 <flatcc_emitter_recycle_page@@Base>:
  40a0e7:	endbr64 
  40a0eb:	push   rbp
  40a0ec:	mov    rbp,rsp
  40a0ef:	mov    QWORD PTR [rbp-0x8],rdi
  40a0f3:	mov    QWORD PTR [rbp-0x10],rsi
  40a0f7:	mov    rax,QWORD PTR [rbp-0x8]
  40a0fb:	mov    rax,QWORD PTR [rax]
  40a0fe:	cmp    QWORD PTR [rbp-0x10],rax
  40a102:	je     40a112 <flatcc_emitter_recycle_page@@Base+0x2b>
  40a104:	mov    rax,QWORD PTR [rbp-0x8]
  40a108:	mov    rax,QWORD PTR [rax+0x8]
  40a10c:	cmp    QWORD PTR [rbp-0x10],rax
  40a110:	jne    40a11c <flatcc_emitter_recycle_page@@Base+0x35>
  40a112:	mov    eax,0xffffffff
  40a117:	jmp    40a1b2 <flatcc_emitter_recycle_page@@Base+0xcb>
  40a11c:	mov    rax,QWORD PTR [rbp-0x10]
  40a120:	mov    rax,QWORD PTR [rax+0xb80]
  40a127:	mov    rdx,QWORD PTR [rbp-0x10]
  40a12b:	mov    rdx,QWORD PTR [rdx+0xb88]
  40a132:	mov    QWORD PTR [rax+0xb88],rdx
  40a139:	mov    rax,QWORD PTR [rbp-0x10]
  40a13d:	mov    rax,QWORD PTR [rax+0xb88]
  40a144:	mov    rdx,QWORD PTR [rbp-0x10]
  40a148:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a14f:	mov    QWORD PTR [rax+0xb80],rdx
  40a156:	mov    rax,QWORD PTR [rbp-0x8]
  40a15a:	mov    rax,QWORD PTR [rax]
  40a15d:	mov    rdx,QWORD PTR [rax+0xb88]
  40a164:	mov    rax,QWORD PTR [rbp-0x10]
  40a168:	mov    QWORD PTR [rax+0xb88],rdx
  40a16f:	mov    rax,QWORD PTR [rbp-0x8]
  40a173:	mov    rdx,QWORD PTR [rax]
  40a176:	mov    rax,QWORD PTR [rbp-0x10]
  40a17a:	mov    QWORD PTR [rax+0xb80],rdx
  40a181:	mov    rax,QWORD PTR [rbp-0x10]
  40a185:	mov    rax,QWORD PTR [rax+0xb88]
  40a18c:	mov    rdx,QWORD PTR [rbp-0x10]
  40a190:	mov    QWORD PTR [rax+0xb80],rdx
  40a197:	mov    rax,QWORD PTR [rbp-0x10]
  40a19b:	mov    rax,QWORD PTR [rax+0xb80]
  40a1a2:	mov    rdx,QWORD PTR [rbp-0x10]
  40a1a6:	mov    QWORD PTR [rax+0xb88],rdx
  40a1ad:	mov    eax,0x0
  40a1b2:	pop    rbp
  40a1b3:	ret    

000000000040a1b4 <flatcc_emitter_reset@@Base>:
  40a1b4:	endbr64 
  40a1b8:	push   rbp
  40a1b9:	mov    rbp,rsp
  40a1bc:	sub    rsp,0x20
  40a1c0:	mov    QWORD PTR [rbp-0x18],rdi
  40a1c4:	mov    rax,QWORD PTR [rbp-0x18]
  40a1c8:	mov    rax,QWORD PTR [rax]
  40a1cb:	mov    QWORD PTR [rbp-0x8],rax
  40a1cf:	mov    rax,QWORD PTR [rbp-0x18]
  40a1d3:	mov    rax,QWORD PTR [rax]
  40a1d6:	test   rax,rax
  40a1d9:	je     40a343 <flatcc_emitter_reset@@Base+0x18f>
  40a1df:	mov    rax,QWORD PTR [rbp-0x18]
  40a1e3:	mov    rdx,QWORD PTR [rax]
  40a1e6:	mov    rax,QWORD PTR [rbp-0x18]
  40a1ea:	mov    QWORD PTR [rax+0x8],rdx
  40a1ee:	mov    rax,QWORD PTR [rbp-0x18]
  40a1f2:	mov    rax,QWORD PTR [rax]
  40a1f5:	lea    rdx,[rax+0x5c0]
  40a1fc:	mov    rax,QWORD PTR [rbp-0x18]
  40a200:	mov    QWORD PTR [rax+0x10],rdx
  40a204:	mov    rax,QWORD PTR [rbp-0x18]
  40a208:	mov    rdx,QWORD PTR [rax+0x10]
  40a20c:	mov    rax,QWORD PTR [rbp-0x18]
  40a210:	mov    QWORD PTR [rax+0x20],rdx
  40a214:	mov    rax,QWORD PTR [rbp-0x18]
  40a218:	mov    QWORD PTR [rax+0x18],0x5c0
  40a220:	mov    rax,QWORD PTR [rbp-0x18]
  40a224:	mov    QWORD PTR [rax+0x28],0x5c0
  40a22c:	mov    rax,QWORD PTR [rbp-0x18]
  40a230:	mov    rax,QWORD PTR [rax+0x18]
  40a234:	mov    edx,eax
  40a236:	mov    rax,QWORD PTR [rbp-0x18]
  40a23a:	mov    rax,QWORD PTR [rax]
  40a23d:	neg    edx
  40a23f:	mov    DWORD PTR [rax+0xb90],edx
  40a245:	mov    rax,QWORD PTR [rbp-0x18]
  40a249:	mov    rax,QWORD PTR [rax+0x40]
  40a24d:	test   rax,rax
  40a250:	jne    40a262 <flatcc_emitter_reset@@Base+0xae>
  40a252:	mov    rax,QWORD PTR [rbp-0x18]
  40a256:	mov    rdx,QWORD PTR [rax+0x30]
  40a25a:	mov    rax,QWORD PTR [rbp-0x18]
  40a25e:	mov    QWORD PTR [rax+0x40],rdx
  40a262:	mov    rax,QWORD PTR [rbp-0x18]
  40a266:	mov    rdx,QWORD PTR [rax+0x40]
  40a26a:	mov    rax,rdx
  40a26d:	add    rax,rax
  40a270:	add    rax,rdx
  40a273:	shr    rax,0x2
  40a277:	mov    rdx,rax
  40a27a:	mov    rax,QWORD PTR [rbp-0x18]
  40a27e:	mov    rax,QWORD PTR [rax+0x30]
  40a282:	shr    rax,0x2
  40a286:	add    rdx,rax
  40a289:	mov    rax,QWORD PTR [rbp-0x18]
  40a28d:	mov    QWORD PTR [rax+0x40],rdx
  40a291:	mov    rax,QWORD PTR [rbp-0x18]
  40a295:	mov    QWORD PTR [rax+0x30],0x0
  40a29d:	jmp    40a309 <flatcc_emitter_reset@@Base+0x155>
  40a29f:	mov    rax,QWORD PTR [rbp-0x18]
  40a2a3:	mov    rax,QWORD PTR [rax+0x8]
  40a2a7:	mov    rax,QWORD PTR [rax+0xb80]
  40a2ae:	mov    QWORD PTR [rbp-0x8],rax
  40a2b2:	mov    rax,QWORD PTR [rbp-0x18]
  40a2b6:	mov    rax,QWORD PTR [rax+0x8]
  40a2ba:	mov    rdx,QWORD PTR [rbp-0x8]
  40a2be:	mov    rdx,QWORD PTR [rdx+0xb80]
  40a2c5:	mov    QWORD PTR [rax+0xb80],rdx
  40a2cc:	mov    rax,QWORD PTR [rbp-0x8]
  40a2d0:	mov    rax,QWORD PTR [rax+0xb80]
  40a2d7:	mov    rdx,QWORD PTR [rbp-0x18]
  40a2db:	mov    rdx,QWORD PTR [rdx+0x8]
  40a2df:	mov    QWORD PTR [rax+0xb88],rdx
  40a2e6:	mov    rax,QWORD PTR [rbp-0x8]
  40a2ea:	mov    rdi,rax
  40a2ed:	call   403140 <free@plt>
  40a2f2:	mov    rax,QWORD PTR [rbp-0x18]
  40a2f6:	mov    rax,QWORD PTR [rax+0x38]
  40a2fa:	lea    rdx,[rax-0xb80]
  40a301:	mov    rax,QWORD PTR [rbp-0x18]
  40a305:	mov    QWORD PTR [rax+0x38],rdx
  40a309:	mov    rax,QWORD PTR [rbp-0x18]
  40a30d:	mov    rax,QWORD PTR [rax+0x40]
  40a311:	lea    rdx,[rax+rax*1]
  40a315:	mov    rax,QWORD PTR [rbp-0x18]
  40a319:	mov    rax,QWORD PTR [rax+0x38]
  40a31d:	cmp    rdx,rax
  40a320:	jae    40a344 <flatcc_emitter_reset@@Base+0x190>
  40a322:	mov    rax,QWORD PTR [rbp-0x18]
  40a326:	mov    rax,QWORD PTR [rax+0x8]
  40a32a:	mov    rdx,QWORD PTR [rax+0xb80]
  40a331:	mov    rax,QWORD PTR [rbp-0x18]
  40a335:	mov    rax,QWORD PTR [rax]
  40a338:	cmp    rdx,rax
  40a33b:	jne    40a29f <flatcc_emitter_reset@@Base+0xeb>
  40a341:	jmp    40a344 <flatcc_emitter_reset@@Base+0x190>
  40a343:	nop
  40a344:	leave  
  40a345:	ret    

000000000040a346 <flatcc_emitter_clear@@Base>:
  40a346:	endbr64 
  40a34a:	push   rbp
  40a34b:	mov    rbp,rsp
  40a34e:	sub    rsp,0x20
  40a352:	mov    QWORD PTR [rbp-0x18],rdi
  40a356:	mov    rax,QWORD PTR [rbp-0x18]
  40a35a:	mov    rax,QWORD PTR [rax]
  40a35d:	mov    QWORD PTR [rbp-0x8],rax
  40a361:	cmp    QWORD PTR [rbp-0x8],0x0
  40a366:	je     40a3d6 <flatcc_emitter_clear@@Base+0x90>
  40a368:	mov    rax,QWORD PTR [rbp-0x8]
  40a36c:	mov    rax,QWORD PTR [rax+0xb88]
  40a373:	mov    QWORD PTR [rax+0xb80],0x0
  40a37e:	jmp    40a3a2 <flatcc_emitter_clear@@Base+0x5c>
  40a380:	mov    rax,QWORD PTR [rbp-0x8]
  40a384:	mov    rax,QWORD PTR [rax+0xb80]
  40a38b:	mov    QWORD PTR [rbp-0x8],rax
  40a38f:	mov    rax,QWORD PTR [rbp-0x8]
  40a393:	mov    rax,QWORD PTR [rax+0xb88]
  40a39a:	mov    rdi,rax
  40a39d:	call   403140 <free@plt>
  40a3a2:	mov    rax,QWORD PTR [rbp-0x8]
  40a3a6:	mov    rax,QWORD PTR [rax+0xb80]
  40a3ad:	test   rax,rax
  40a3b0:	jne    40a380 <flatcc_emitter_clear@@Base+0x3a>
  40a3b2:	mov    rax,QWORD PTR [rbp-0x8]
  40a3b6:	mov    rdi,rax
  40a3b9:	call   403140 <free@plt>
  40a3be:	mov    rax,QWORD PTR [rbp-0x18]
  40a3c2:	mov    edx,0x48
  40a3c7:	mov    esi,0x0
  40a3cc:	mov    rdi,rax
  40a3cf:	call   4031b0 <memset@plt>
  40a3d4:	jmp    40a3d7 <flatcc_emitter_clear@@Base+0x91>
  40a3d6:	nop
  40a3d7:	leave  
  40a3d8:	ret    

000000000040a3d9 <flatcc_emitter@@Base>:
  40a3d9:	endbr64 
  40a3dd:	push   rbp
  40a3de:	mov    rbp,rsp
  40a3e1:	sub    rsp,0x30
  40a3e5:	mov    QWORD PTR [rbp-0x18],rdi
  40a3e9:	mov    QWORD PTR [rbp-0x20],rsi
  40a3ed:	mov    DWORD PTR [rbp-0x24],edx
  40a3f0:	mov    DWORD PTR [rbp-0x28],ecx
  40a3f3:	mov    QWORD PTR [rbp-0x30],r8
  40a3f7:	mov    rax,QWORD PTR [rbp-0x18]
  40a3fb:	mov    QWORD PTR [rbp-0x8],rax
  40a3ff:	mov    rax,QWORD PTR [rbp-0x8]
  40a403:	mov    rdx,QWORD PTR [rax+0x30]
  40a407:	mov    rax,QWORD PTR [rbp-0x30]
  40a40b:	add    rdx,rax
  40a40e:	mov    rax,QWORD PTR [rbp-0x8]
  40a412:	mov    QWORD PTR [rax+0x30],rdx
  40a416:	cmp    DWORD PTR [rbp-0x28],0x0
  40a41a:	jns    40a4c2 <flatcc_emitter@@Base+0xe9>
  40a420:	mov    rax,QWORD PTR [rbp-0x8]
  40a424:	mov    rax,QWORD PTR [rax+0x18]
  40a428:	cmp    QWORD PTR [rbp-0x30],rax
  40a42c:	ja     40a470 <flatcc_emitter@@Base+0x97>
  40a42e:	mov    rax,QWORD PTR [rbp-0x8]
  40a432:	mov    rax,QWORD PTR [rax+0x10]
  40a436:	mov    rdx,QWORD PTR [rbp-0x30]
  40a43a:	neg    rdx
  40a43d:	add    rdx,rax
  40a440:	mov    rax,QWORD PTR [rbp-0x8]
  40a444:	mov    QWORD PTR [rax+0x10],rdx
  40a448:	mov    rax,QWORD PTR [rbp-0x8]
  40a44c:	mov    rax,QWORD PTR [rax+0x18]
  40a450:	sub    rax,QWORD PTR [rbp-0x30]
  40a454:	mov    rdx,rax
  40a457:	mov    rax,QWORD PTR [rbp-0x8]
  40a45b:	mov    QWORD PTR [rax+0x18],rdx
  40a45f:	mov    rax,QWORD PTR [rbp-0x8]
  40a463:	mov    rax,QWORD PTR [rax+0x10]
  40a467:	mov    QWORD PTR [rbp-0x10],rax
  40a46b:	jmp    40a54e <flatcc_emitter@@Base+0x175>
  40a470:	mov    eax,DWORD PTR [rbp-0x24]
  40a473:	cdqe   
  40a475:	shl    rax,0x4
  40a479:	add    QWORD PTR [rbp-0x20],rax
  40a47d:	jmp    40a4b0 <flatcc_emitter@@Base+0xd7>
  40a47f:	sub    QWORD PTR [rbp-0x20],0x10
  40a484:	mov    rax,QWORD PTR [rbp-0x20]
  40a488:	mov    rdx,QWORD PTR [rax+0x8]
  40a48c:	mov    rax,QWORD PTR [rbp-0x20]
  40a490:	mov    rcx,QWORD PTR [rax]
  40a493:	mov    rax,QWORD PTR [rbp-0x8]
  40a497:	mov    rsi,rcx
  40a49a:	mov    rdi,rax
  40a49d:	call   409f49 <flatcc_builder_get_emit_context@@Base+0x403>
  40a4a2:	test   eax,eax
  40a4a4:	je     40a4b0 <flatcc_emitter@@Base+0xd7>
  40a4a6:	mov    eax,0xffffffff
  40a4ab:	jmp    40a591 <flatcc_emitter@@Base+0x1b8>
  40a4b0:	mov    eax,DWORD PTR [rbp-0x24]
  40a4b3:	lea    edx,[rax-0x1]
  40a4b6:	mov    DWORD PTR [rbp-0x24],edx
  40a4b9:	test   eax,eax
  40a4bb:	jne    40a47f <flatcc_emitter@@Base+0xa6>
  40a4bd:	jmp    40a547 <flatcc_emitter@@Base+0x16e>
  40a4c2:	mov    rax,QWORD PTR [rbp-0x8]
  40a4c6:	mov    rax,QWORD PTR [rax+0x28]
  40a4ca:	cmp    QWORD PTR [rbp-0x30],rax
  40a4ce:	ja     40a53a <flatcc_emitter@@Base+0x161>
  40a4d0:	mov    rax,QWORD PTR [rbp-0x8]
  40a4d4:	mov    rax,QWORD PTR [rax+0x20]
  40a4d8:	mov    QWORD PTR [rbp-0x10],rax
  40a4dc:	mov    rax,QWORD PTR [rbp-0x8]
  40a4e0:	mov    rdx,QWORD PTR [rax+0x20]
  40a4e4:	mov    rax,QWORD PTR [rbp-0x30]
  40a4e8:	add    rdx,rax
  40a4eb:	mov    rax,QWORD PTR [rbp-0x8]
  40a4ef:	mov    QWORD PTR [rax+0x20],rdx
  40a4f3:	mov    rax,QWORD PTR [rbp-0x8]
  40a4f7:	mov    rax,QWORD PTR [rax+0x28]
  40a4fb:	sub    rax,QWORD PTR [rbp-0x30]
  40a4ff:	mov    rdx,rax
  40a502:	mov    rax,QWORD PTR [rbp-0x8]
  40a506:	mov    QWORD PTR [rax+0x28],rdx
  40a50a:	jmp    40a54e <flatcc_emitter@@Base+0x175>
  40a50c:	mov    rax,QWORD PTR [rbp-0x20]
  40a510:	mov    rdx,QWORD PTR [rax+0x8]
  40a514:	mov    rax,QWORD PTR [rbp-0x20]
  40a518:	mov    rcx,QWORD PTR [rax]
  40a51b:	mov    rax,QWORD PTR [rbp-0x8]
  40a51f:	mov    rsi,rcx
  40a522:	mov    rdi,rax
  40a525:	call   40a01f <flatcc_builder_get_emit_context@@Base+0x4d9>
  40a52a:	test   eax,eax
  40a52c:	je     40a535 <flatcc_emitter@@Base+0x15c>
  40a52e:	mov    eax,0xffffffff
  40a533:	jmp    40a591 <flatcc_emitter@@Base+0x1b8>
  40a535:	add    QWORD PTR [rbp-0x20],0x10
  40a53a:	mov    eax,DWORD PTR [rbp-0x24]
  40a53d:	lea    edx,[rax-0x1]
  40a540:	mov    DWORD PTR [rbp-0x24],edx
  40a543:	test   eax,eax
  40a545:	jne    40a50c <flatcc_emitter@@Base+0x133>
  40a547:	mov    eax,0x0
  40a54c:	jmp    40a591 <flatcc_emitter@@Base+0x1b8>
  40a54e:	jmp    40a57f <flatcc_emitter@@Base+0x1a6>
  40a550:	mov    rax,QWORD PTR [rbp-0x20]
  40a554:	mov    rdx,QWORD PTR [rax+0x8]
  40a558:	mov    rax,QWORD PTR [rbp-0x20]
  40a55c:	mov    rcx,QWORD PTR [rax]
  40a55f:	mov    rax,QWORD PTR [rbp-0x10]
  40a563:	mov    rsi,rcx
  40a566:	mov    rdi,rax
  40a569:	call   403200 <memcpy@plt>
  40a56e:	mov    rax,QWORD PTR [rbp-0x20]
  40a572:	mov    rax,QWORD PTR [rax+0x8]
  40a576:	add    QWORD PTR [rbp-0x10],rax
  40a57a:	add    QWORD PTR [rbp-0x20],0x10
  40a57f:	mov    eax,DWORD PTR [rbp-0x24]
  40a582:	lea    edx,[rax-0x1]
  40a585:	mov    DWORD PTR [rbp-0x24],edx
  40a588:	test   eax,eax
  40a58a:	jne    40a550 <flatcc_emitter@@Base+0x177>
  40a58c:	mov    eax,0x0
  40a591:	leave  
  40a592:	ret    

000000000040a593 <flatcc_emitter_copy_buffer@@Base>:
  40a593:	endbr64 
  40a597:	push   rbp
  40a598:	mov    rbp,rsp
  40a59b:	sub    rsp,0x30
  40a59f:	mov    QWORD PTR [rbp-0x18],rdi
  40a5a3:	mov    QWORD PTR [rbp-0x20],rsi
  40a5a7:	mov    QWORD PTR [rbp-0x28],rdx
  40a5ab:	mov    rax,QWORD PTR [rbp-0x18]
  40a5af:	mov    rax,QWORD PTR [rax+0x30]
  40a5b3:	cmp    QWORD PTR [rbp-0x28],rax
  40a5b7:	jae    40a5c3 <flatcc_emitter_copy_buffer@@Base+0x30>
  40a5b9:	mov    eax,0x0
  40a5be:	jmp    40a6c7 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a5c3:	mov    rax,QWORD PTR [rbp-0x18]
  40a5c7:	mov    rax,QWORD PTR [rax]
  40a5ca:	test   rax,rax
  40a5cd:	jne    40a5d9 <flatcc_emitter_copy_buffer@@Base+0x46>
  40a5cf:	mov    eax,0x0
  40a5d4:	jmp    40a6c7 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a5d9:	mov    rax,QWORD PTR [rbp-0x18]
  40a5dd:	mov    rdx,QWORD PTR [rax]
  40a5e0:	mov    rax,QWORD PTR [rbp-0x18]
  40a5e4:	mov    rax,QWORD PTR [rax+0x8]
  40a5e8:	cmp    rdx,rax
  40a5eb:	jne    40a615 <flatcc_emitter_copy_buffer@@Base+0x82>
  40a5ed:	mov    rax,QWORD PTR [rbp-0x18]
  40a5f1:	mov    rdx,QWORD PTR [rax+0x30]
  40a5f5:	mov    rax,QWORD PTR [rbp-0x18]
  40a5f9:	mov    rcx,QWORD PTR [rax+0x10]
  40a5fd:	mov    rax,QWORD PTR [rbp-0x20]
  40a601:	mov    rsi,rcx
  40a604:	mov    rdi,rax
  40a607:	call   403200 <memcpy@plt>
  40a60c:	mov    rax,QWORD PTR [rbp-0x20]
  40a610:	jmp    40a6c7 <flatcc_emitter_copy_buffer@@Base+0x134>
  40a615:	mov    rax,QWORD PTR [rbp-0x18]
  40a619:	mov    rax,QWORD PTR [rax+0x18]
  40a61d:	mov    edx,0xb80
  40a622:	sub    rdx,rax
  40a625:	mov    rax,rdx
  40a628:	mov    QWORD PTR [rbp-0x8],rax
  40a62c:	mov    rax,QWORD PTR [rbp-0x18]
  40a630:	mov    rcx,QWORD PTR [rax+0x10]
  40a634:	mov    rdx,QWORD PTR [rbp-0x8]
  40a638:	mov    rax,QWORD PTR [rbp-0x20]
  40a63c:	mov    rsi,rcx
  40a63f:	mov    rdi,rax
  40a642:	call   403200 <memcpy@plt>
  40a647:	mov    rax,QWORD PTR [rbp-0x8]
  40a64b:	add    QWORD PTR [rbp-0x20],rax
  40a64f:	mov    rax,QWORD PTR [rbp-0x18]
  40a653:	mov    rax,QWORD PTR [rax]
  40a656:	mov    rax,QWORD PTR [rax+0xb80]
  40a65d:	mov    QWORD PTR [rbp-0x10],rax
  40a661:	jmp    40a692 <flatcc_emitter_copy_buffer@@Base+0xff>
  40a663:	mov    rcx,QWORD PTR [rbp-0x10]
  40a667:	mov    rax,QWORD PTR [rbp-0x20]
  40a66b:	mov    edx,0xb80
  40a670:	mov    rsi,rcx
  40a673:	mov    rdi,rax
  40a676:	call   403200 <memcpy@plt>
  40a67b:	add    QWORD PTR [rbp-0x20],0xb80
  40a683:	mov    rax,QWORD PTR [rbp-0x10]
  40a687:	mov    rax,QWORD PTR [rax+0xb80]
  40a68e:	mov    QWORD PTR [rbp-0x10],rax
  40a692:	mov    rax,QWORD PTR [rbp-0x18]
  40a696:	mov    rax,QWORD PTR [rax+0x8]
  40a69a:	cmp    QWORD PTR [rbp-0x10],rax
  40a69e:	jne    40a663 <flatcc_emitter_copy_buffer@@Base+0xd0>
  40a6a0:	mov    rax,QWORD PTR [rbp-0x18]
  40a6a4:	mov    rax,QWORD PTR [rax+0x28]
  40a6a8:	mov    edx,0xb80
  40a6ad:	sub    rdx,rax
  40a6b0:	mov    rcx,QWORD PTR [rbp-0x10]
  40a6b4:	mov    rax,QWORD PTR [rbp-0x20]
  40a6b8:	mov    rsi,rcx
  40a6bb:	mov    rdi,rax
  40a6be:	call   403200 <memcpy@plt>
  40a6c3:	mov    rax,QWORD PTR [rbp-0x20]
  40a6c7:	leave  
  40a6c8:	ret    
  40a6c9:	nop    DWORD PTR [rax+0x0]

000000000040a6d0 <__libc_csu_init@@Base>:
  40a6d0:	endbr64 
  40a6d4:	push   r15
  40a6d6:	lea    r15,[rip+0x572b]        # 40fe08 <flatcc_builder_padding_base@@Base+0x4928>
  40a6dd:	push   r14
  40a6df:	mov    r14,rdx
  40a6e2:	push   r13
  40a6e4:	mov    r13,rsi
  40a6e7:	push   r12
  40a6e9:	mov    r12d,edi
  40a6ec:	push   rbp
  40a6ed:	lea    rbp,[rip+0x571c]        # 40fe10 <flatcc_builder_padding_base@@Base+0x4930>
  40a6f4:	push   rbx
  40a6f5:	sub    rbp,r15
  40a6f8:	sub    rsp,0x8
  40a6fc:	call   403000 <free@plt-0x140>
  40a701:	sar    rbp,0x3
  40a705:	je     40a726 <__libc_csu_init@@Base+0x56>
  40a707:	xor    ebx,ebx
  40a709:	nop    DWORD PTR [rax+0x0]
  40a710:	mov    rdx,r14
  40a713:	mov    rsi,r13
  40a716:	mov    edi,r12d
  40a719:	call   QWORD PTR [r15+rbx*8]
  40a71d:	add    rbx,0x1
  40a721:	cmp    rbp,rbx
  40a724:	jne    40a710 <__libc_csu_init@@Base+0x40>
  40a726:	add    rsp,0x8
  40a72a:	pop    rbx
  40a72b:	pop    rbp
  40a72c:	pop    r12
  40a72e:	pop    r13
  40a730:	pop    r14
  40a732:	pop    r15
  40a734:	ret    
  40a735:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040a740 <__libc_csu_fini@@Base>:
  40a740:	endbr64 
  40a744:	ret    

Disassembly of section .fini:

000000000040a748 <.fini>:
  40a748:	endbr64 
  40a74c:	sub    rsp,0x8
  40a750:	add    rsp,0x8
  40a754:	ret    
