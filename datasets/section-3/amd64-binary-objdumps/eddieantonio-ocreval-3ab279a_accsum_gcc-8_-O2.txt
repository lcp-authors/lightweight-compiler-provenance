
../repos/eddieantonio-ocreval-3ab279a/accsum/accsum:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x5fd9]        # 406fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1da>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x5fe2]        # 407008 <error@@Base+0x3f18>
  401026:	bnd jmp QWORD PTR [rip+0x5fe3]        # 407010 <error@@Base+0x3f20>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1d0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1d0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1d0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1d0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1d0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1d0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1d0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1d0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1d0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1d0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1d0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1d0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1d0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1d0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1d0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1d0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1d0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1d0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1d0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1d0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1d0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1d0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1d0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1d0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1d0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1d0>
  4011ef:	nop

Disassembly of section .plt.sec:

00000000004011f0 <free@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x5e1d]        # 407018 <free@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <unlink@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x5e15]        # 407020 <unlink@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <utf8proc_get_property@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x5e0d]        # 407028 <utf8proc_get_property>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <utf8proc_encode_char@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x5e05]        # 407030 <utf8proc_encode_char>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <getpid@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x5dfd]        # 407038 <getpid@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <fclose@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x5df5]        # 407040 <fclose@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <strlen@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x5ded]        # 407048 <strlen@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <__stack_chk_fail@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x5de5]        # 407050 <__stack_chk_fail@GLIBC_2.4>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <rewind@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x5ddd]        # 407058 <rewind@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <utf8proc_tolower@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x5dd5]        # 407060 <utf8proc_tolower>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <fputs@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x5dcd]        # 407068 <fputs@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fgets@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x5dc5]        # 407070 <fgets@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <utf8proc_iterate@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x5dbd]        # 407078 <utf8proc_iterate>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <calloc@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x5db5]        # 407080 <calloc@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <strcmp@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x5dad]        # 407088 <strcmp@GLIBC_2.2.5>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <__sysv_signal@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x5da5]        # 407090 <__sysv_signal@GLIBC_2.2.5>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <utf8proc_category@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x5d9d]        # 407098 <utf8proc_category>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__xstat@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x5d95]        # 4070a0 <__xstat@GLIBC_2.2.5>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <__isoc99_sscanf@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x5d8d]        # 4070a8 <__isoc99_sscanf@GLIBC_2.7>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__fread_chk@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x5d85]        # 4070b0 <__fread_chk@GLIBC_2.7>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <fopen@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x5d7d]        # 4070b8 <fopen@GLIBC_2.2.5>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <exit@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x5d75]        # 4070c0 <exit@GLIBC_2.2.5>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <fwrite@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x5d6d]        # 4070c8 <fwrite@GLIBC_2.2.5>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <__fprintf_chk@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x5d65]        # 4070d0 <__fprintf_chk@GLIBC_2.3.4>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <utf8proc_errmsg@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x5d5d]        # 4070d8 <utf8proc_errmsg>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <strdup@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x5d55]        # 4070e0 <strdup@GLIBC_2.2.5>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <getc@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x5d4d]        # 4070e8 <getc@GLIBC_2.2.5>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <__sprintf_chk@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x5d45]        # 4070f0 <__sprintf_chk@GLIBC_2.3.4>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013b0 <error@@Base-0x1d40>:
  4013b0:	endbr64 
  4013b4:	push   r12
  4013b6:	xor    ecx,ecx
  4013b8:	xor    eax,eax
  4013ba:	push   rbp
  4013bb:	lea    rdx,[rip+0x2c46]        # 404008 <error@@Base+0xf18>
  4013c2:	mov    rbp,rsi
  4013c5:	push   rbx
  4013c6:	sub    rsp,0x10
  4013ca:	mov    DWORD PTR [rsp+0xc],edi
  4013ce:	lea    rdi,[rsp+0xc]
  4013d3:	call   403270 <error@@Base+0x180>
  4013d8:	cmp    DWORD PTR [rsp+0xc],0x1
  4013dd:	jle    40141b <__sprintf_chk@plt+0x7b>
  4013df:	mov    r12,0x5179e0
  4013e6:	xor    ebx,ebx
  4013e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4013f0:	mov    rsi,QWORD PTR [rbp+rbx*8+0x0]
  4013f5:	mov    rdi,r12
  4013f8:	xor    eax,eax
  4013fa:	inc    rbx
  4013fd:	call   401900 <__sprintf_chk@plt+0x560>
  401402:	cmp    DWORD PTR [rsp+0xc],ebx
  401406:	jg     4013f0 <__sprintf_chk@plt+0x50>
  401408:	xor    eax,eax
  40140a:	xor    esi,esi
  40140c:	mov    rdi,r12
  40140f:	call   401cd0 <__sprintf_chk@plt+0x930>
  401414:	xor    eax,eax
  401416:	call   403080 <__sprintf_chk@plt+0x1ce0>
  40141b:	lea    rdi,[rip+0x2c1d]        # 40403f <error@@Base+0xf4f>
  401422:	xor    eax,eax
  401424:	call   4030f0 <error@@Base>
  401429:	nop    DWORD PTR [rax+0x0]
  401430:	endbr64 
  401434:	xor    ebp,ebp
  401436:	mov    r9,rdx
  401439:	pop    rsi
  40143a:	mov    rdx,rsp
  40143d:	and    rsp,0xfffffffffffffff0
  401441:	push   rax
  401442:	push   rsp
  401443:	mov    r8,0x403830
  40144a:	mov    rcx,0x4037c0
  401451:	mov    rdi,0x4013b0
  401458:	call   QWORD PTR [rip+0x5b82]        # 406fe0 <error@@Base+0x3ef0>
  40145e:	hlt    
  40145f:	nop
  401460:	endbr64 
  401464:	ret    
  401465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40146f:	nop
  401470:	mov    eax,0x407110
  401475:	cmp    rax,0x407110
  40147b:	je     401490 <__sprintf_chk@plt+0xf0>
  40147d:	mov    eax,0x0
  401482:	test   rax,rax
  401485:	je     401490 <__sprintf_chk@plt+0xf0>
  401487:	mov    edi,0x407110
  40148c:	jmp    rax
  40148e:	xchg   ax,ax
  401490:	ret    
  401491:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40149c:	nop    DWORD PTR [rax+0x0]
  4014a0:	mov    esi,0x407110
  4014a5:	sub    rsi,0x407110
  4014ac:	sar    rsi,0x3
  4014b0:	mov    rax,rsi
  4014b3:	shr    rax,0x3f
  4014b7:	add    rsi,rax
  4014ba:	sar    rsi,1
  4014bd:	je     4014d0 <__sprintf_chk@plt+0x130>
  4014bf:	mov    eax,0x0
  4014c4:	test   rax,rax
  4014c7:	je     4014d0 <__sprintf_chk@plt+0x130>
  4014c9:	mov    edi,0x407110
  4014ce:	jmp    rax
  4014d0:	ret    
  4014d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014dc:	nop    DWORD PTR [rax+0x0]
  4014e0:	endbr64 
  4014e4:	cmp    BYTE PTR [rip+0x5c35],0x0        # 407120 <error@@Base+0x4030>
  4014eb:	jne    401500 <__sprintf_chk@plt+0x160>
  4014ed:	push   rbp
  4014ee:	mov    rbp,rsp
  4014f1:	call   401470 <__sprintf_chk@plt+0xd0>
  4014f6:	mov    BYTE PTR [rip+0x5c23],0x1        # 407120 <error@@Base+0x4030>
  4014fd:	pop    rbp
  4014fe:	ret    
  4014ff:	nop
  401500:	ret    
  401501:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40150c:	nop    DWORD PTR [rax+0x0]
  401510:	endbr64 
  401514:	jmp    4014a0 <__sprintf_chk@plt+0x100>
  401516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401520:	push   rbp
  401521:	mov    rbp,rdx
  401524:	mov    rdx,rdi
  401527:	push   rbx
  401528:	lea    rdi,[rip+0x5c11]        # 407140 <error@@Base+0x4050>
  40152f:	mov    rbx,rsi
  401532:	sub    rsp,0x8
  401536:	mov    esi,0x63
  40153b:	call   4012a0 <fgets@plt>
  401540:	test   rax,rax
  401543:	je     401562 <__sprintf_chk@plt+0x1c2>
  401545:	xor    eax,eax
  401547:	mov    rdx,rbx
  40154a:	lea    rsi,[rip+0x2b11]        # 404062 <error@@Base+0xf72>
  401551:	lea    rdi,[rip+0x5be8]        # 407140 <error@@Base+0x4050>
  401558:	call   401310 <__isoc99_sscanf@plt>
  40155d:	cmp    eax,0x1
  401560:	je     401570 <__sprintf_chk@plt+0x1d0>
  401562:	add    rsp,0x8
  401566:	pop    rbx
  401567:	xor    eax,eax
  401569:	pop    rbp
  40156a:	ret    
  40156b:	nop    DWORD PTR [rax+rax*1+0x0]
  401570:	mov    rax,QWORD PTR [rbx]
  401573:	add    QWORD PTR [rbp+0x0],rax
  401577:	add    rsp,0x8
  40157b:	pop    rbx
  40157c:	mov    eax,0x1
  401581:	pop    rbp
  401582:	ret    
  401583:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40158e:	xchg   ax,ax
  401590:	push   rbx
  401591:	mov    rdx,rdi
  401594:	mov    rbx,rsi
  401597:	sub    rsp,0x30
  40159b:	mov    esi,0x63
  4015a0:	lea    rdi,[rip+0x5b99]        # 407140 <error@@Base+0x4050>
  4015a7:	mov    rax,QWORD PTR fs:0x28
  4015b0:	mov    QWORD PTR [rsp+0x28],rax
  4015b5:	xor    eax,eax
  4015b7:	call   4012a0 <fgets@plt>
  4015bc:	test   rax,rax
  4015bf:	je     4015ea <__sprintf_chk@plt+0x24a>
  4015c1:	mov    rdx,rsp
  4015c4:	xor    eax,eax
  4015c6:	lea    rcx,[rdx+0x8]
  4015ca:	lea    r9,[rdx+0x18]
  4015ce:	lea    r8,[rdx+0x10]
  4015d2:	lea    rsi,[rip+0x2a7d]        # 404056 <error@@Base+0xf66>
  4015d9:	lea    rdi,[rip+0x5b60]        # 407140 <error@@Base+0x4050>
  4015e0:	call   401310 <__isoc99_sscanf@plt>
  4015e5:	cmp    eax,0x4
  4015e8:	je     401608 <__sprintf_chk@plt+0x268>
  4015ea:	xor    eax,eax
  4015ec:	mov    rbx,QWORD PTR [rsp+0x28]
  4015f1:	xor    rbx,QWORD PTR fs:0x28
  4015fa:	jne    401631 <__sprintf_chk@plt+0x291>
  4015fc:	add    rsp,0x30
  401600:	pop    rbx
  401601:	ret    
  401602:	nop    WORD PTR [rax+rax*1+0x0]
  401608:	mov    rax,QWORD PTR [rsp]
  40160c:	add    QWORD PTR [rbx],rax
  40160f:	mov    rax,QWORD PTR [rsp+0x8]
  401614:	add    QWORD PTR [rbx+0x8],rax
  401618:	mov    rax,QWORD PTR [rsp+0x10]
  40161d:	add    QWORD PTR [rbx+0x10],rax
  401621:	mov    rax,QWORD PTR [rsp+0x18]
  401626:	add    QWORD PTR [rbx+0x18],rax
  40162a:	mov    eax,0x1
  40162f:	jmp    4015ec <__sprintf_chk@plt+0x24c>
  401631:	call   401260 <__stack_chk_fail@plt>
  401636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401640:	push   rbp
  401641:	mov    rbp,rdx
  401644:	mov    rdx,rdi
  401647:	push   rbx
  401648:	lea    rdi,[rip+0x5af1]        # 407140 <error@@Base+0x4050>
  40164f:	mov    rbx,rsi
  401652:	sub    rsp,0x8
  401656:	mov    esi,0x63
  40165b:	call   4012a0 <fgets@plt>
  401660:	xor    edx,edx
  401662:	test   rax,rax
  401665:	je     401688 <__sprintf_chk@plt+0x2e8>
  401667:	mov    rdx,rbx
  40166a:	xor    eax,eax
  40166c:	mov    rcx,rbp
  40166f:	lea    rsi,[rip+0x29e8]        # 40405e <error@@Base+0xf6e>
  401676:	lea    rdi,[rip+0x5ac3]        # 407140 <error@@Base+0x4050>
  40167d:	call   401310 <__isoc99_sscanf@plt>
  401682:	cmp    eax,0x2
  401685:	sete   dl
  401688:	add    rsp,0x8
  40168c:	pop    rbx
  40168d:	mov    eax,edx
  40168f:	pop    rbp
  401690:	ret    
  401691:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40169c:	nop    DWORD PTR [rax+0x0]
  4016a0:	test   rdx,rdx
  4016a3:	jne    4016c0 <__sprintf_chk@plt+0x320>
  4016a5:	lea    rdx,[rip+0x29ba]        # 404066 <error@@Base+0xf76>
  4016ac:	mov    esi,0x1
  4016b1:	xor    eax,eax
  4016b3:	jmp    401360 <__fprintf_chk@plt>
  4016b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4016c0:	vxorpd xmm0,xmm0,xmm0
  4016c4:	vcvtsi2sd xmm0,xmm0,rsi
  4016c9:	vxorpd xmm1,xmm1,xmm1
  4016cd:	vcvtsi2sd xmm1,xmm1,rdx
  4016d2:	mov    esi,0x1
  4016d7:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x2b59]        # 404238 <error@@Base+0x1148>
  4016df:	lea    rdx,[rip+0x2989]        # 40406f <error@@Base+0xf7f>
  4016e6:	mov    eax,0x1
  4016eb:	vdivsd xmm0,xmm0,xmm1
  4016ef:	jmp    401360 <__fprintf_chk@plt>
  4016f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4016ff:	nop
  401700:	endbr64 
  401704:	mov    rdx,QWORD PTR [rdi+0x18]
  401708:	mov    rax,QWORD PTR [rsi+0x18]
  40170c:	cmp    rdx,rax
  40170f:	jne    40171e <__sprintf_chk@plt+0x37e>
  401711:	mov    rdx,QWORD PTR [rdi+0x20]
  401715:	mov    rax,QWORD PTR [rsi+0x20]
  401719:	cmp    rdx,rax
  40171c:	je     401728 <__sprintf_chk@plt+0x388>
  40171e:	sub    eax,edx
  401720:	ret    
  401721:	nop    DWORD PTR [rax+0x0]
  401728:	mov    rsi,QWORD PTR [rsi+0x10]
  40172c:	mov    rdi,QWORD PTR [rdi+0x10]
  401730:	xor    eax,eax
  401732:	jmp    402f10 <__sprintf_chk@plt+0x1b70>
  401737:	nop    WORD PTR [rax+rax*1+0x0]
  401740:	push   r13
  401742:	mov    r13d,ecx
  401745:	push   r12
  401747:	mov    r12,rdx
  40174a:	lea    rdx,[rip+0x2924]        # 404075 <error@@Base+0xf85>
  401751:	push   rbp
  401752:	mov    rbp,rdi
  401755:	push   rbx
  401756:	mov    rbx,rsi
  401759:	sub    rsp,0x28
  40175d:	mov    rax,QWORD PTR fs:0x28
  401766:	mov    QWORD PTR [rsp+0x18],rax
  40176b:	xor    eax,eax
  40176d:	mov    r8,QWORD PTR [rsi+0x8]
  401771:	mov    rcx,QWORD PTR [rsi]
  401774:	mov    esi,0x1
  401779:	call   401360 <__fprintf_chk@plt>
  40177e:	mov    rdx,QWORD PTR [rbx]
  401781:	xor    eax,eax
  401783:	mov    rsi,rdx
  401786:	sub    rsi,QWORD PTR [rbx+0x8]
  40178a:	mov    rdi,rbp
  40178d:	call   4016a0 <__sprintf_chk@plt+0x300>
  401792:	test   r12,r12
  401795:	je     4017d0 <__sprintf_chk@plt+0x430>
  401797:	mov    rcx,r12
  40179a:	lea    rdx,[rip+0x2977]        # 404118 <error@@Base+0x1028>
  4017a1:	mov    esi,0x1
  4017a6:	mov    rdi,rbp
  4017a9:	xor    eax,eax
  4017ab:	call   401360 <__fprintf_chk@plt>
  4017b0:	mov    rax,QWORD PTR [rsp+0x18]
  4017b5:	xor    rax,QWORD PTR fs:0x28
  4017be:	jne    401804 <__sprintf_chk@plt+0x464>
  4017c0:	add    rsp,0x28
  4017c4:	pop    rbx
  4017c5:	pop    rbp
  4017c6:	pop    r12
  4017c8:	pop    r13
  4017ca:	ret    
  4017cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4017d0:	lea    rbx,[rsp+0xf]
  4017d5:	mov    rdx,rbx
  4017d8:	mov    esi,r13d
  4017db:	xor    edi,edi
  4017dd:	xor    eax,eax
  4017df:	mov    ecx,0x1
  4017e4:	call   402b30 <__sprintf_chk@plt+0x1790>
  4017e9:	mov    rcx,rbx
  4017ec:	lea    rdx,[rip+0x288d]        # 404080 <error@@Base+0xf90>
  4017f3:	mov    esi,0x1
  4017f8:	mov    rdi,rbp
  4017fb:	xor    eax,eax
  4017fd:	call   401360 <__fprintf_chk@plt>
  401802:	jmp    4017b0 <__sprintf_chk@plt+0x410>
  401804:	call   401260 <__stack_chk_fail@plt>
  401809:	nop    DWORD PTR [rax+0x0]
  401810:	endbr64 
  401814:	push   r13
  401816:	xor    eax,eax
  401818:	mov    r13,rdx
  40181b:	push   r12
  40181d:	mov    r12,rcx
  401820:	push   rbp
  401821:	mov    rbp,rdi
  401824:	push   rbx
  401825:	mov    ebx,esi
  401827:	mov    edi,ebx
  401829:	sub    rsp,0x8
  40182d:	call   402180 <__sprintf_chk@plt+0xde0>
  401832:	movzx  eax,al
  401835:	shl    rax,0x4
  401839:	lea    rax,[rbp+rax*1+0x88]
  401841:	add    QWORD PTR [rax],r13
  401844:	add    QWORD PTR [rax+0x8],r12
  401848:	shl    rbx,0x4
  40184c:	lea    rax,[rbp+rbx*1+0x4f88]
  401854:	add    QWORD PTR [rbp+0x1088],r13
  40185b:	add    QWORD PTR [rbp+0x1090],r12
  401862:	add    QWORD PTR [rax],r13
  401865:	add    QWORD PTR [rax+0x8],r12
  401869:	add    rsp,0x8
  40186d:	pop    rbx
  40186e:	pop    rbp
  40186f:	pop    r12
  401871:	pop    r13
  401873:	ret    
  401874:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40187f:	nop
  401880:	endbr64 
  401884:	push   r14
  401886:	xor    eax,eax
  401888:	push   r13
  40188a:	mov    r13,rdx
  40188d:	push   r12
  40188f:	mov    r12,rcx
  401892:	push   rbp
  401893:	mov    rbp,rsi
  401896:	push   rbx
  401897:	lea    rbx,[rdi+0x1098]
  40189e:	mov    rdi,rbx
  4018a1:	call   402420 <__sprintf_chk@plt+0x1080>
  4018a6:	test   rax,rax
  4018a9:	je     4018c0 <__sprintf_chk@plt+0x520>
  4018ab:	add    QWORD PTR [rax+0x18],r13
  4018af:	add    QWORD PTR [rax+0x20],r12
  4018b3:	pop    rbx
  4018b4:	pop    rbp
  4018b5:	pop    r12
  4018b7:	pop    r13
  4018b9:	pop    r14
  4018bb:	ret    
  4018bc:	nop    DWORD PTR [rax+0x0]
  4018c0:	mov    esi,0x28
  4018c5:	mov    edi,0x1
  4018ca:	xor    eax,eax
  4018cc:	call   403140 <error@@Base+0x50>
  4018d1:	mov    rdi,rbp
  4018d4:	mov    r14,rax
  4018d7:	call   401380 <strdup@plt>
  4018dc:	mov    QWORD PTR [r14+0x10],rax
  4018e0:	mov    QWORD PTR [r14+0x18],r13
  4018e4:	mov    QWORD PTR [r14+0x20],r12
  4018e8:	mov    rdi,rbx
  4018eb:	mov    rsi,r14
  4018ee:	pop    rbx
  4018ef:	pop    rbp
  4018f0:	pop    r12
  4018f2:	pop    r13
  4018f4:	xor    eax,eax
  4018f6:	pop    r14
  4018f8:	jmp    4024b0 <__sprintf_chk@plt+0x1110>
  4018fd:	nop    DWORD PTR [rax]
  401900:	endbr64 
  401904:	push   r14
  401906:	push   r13
  401908:	mov    r13,rsi
  40190b:	lea    rsi,[rip+0x2f46]        # 404858 <error@@Base+0x1768>
  401912:	push   r12
  401914:	mov    r12,rdi
  401917:	mov    rdi,r13
  40191a:	push   rbp
  40191b:	push   rbx
  40191c:	sub    rsp,0x30
  401920:	mov    rax,QWORD PTR fs:0x28
  401929:	mov    QWORD PTR [rsp+0x28],rax
  40192e:	xor    eax,eax
  401930:	call   4031f0 <error@@Base+0x100>
  401935:	mov    rdx,rax
  401938:	mov    esi,0x63
  40193d:	lea    rdi,[rip+0x57fc]        # 407140 <error@@Base+0x4050>
  401944:	mov    rbx,rax
  401947:	call   4012a0 <fgets@plt>
  40194c:	test   rax,rax
  40194f:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401955:	lea    rbp,[rip+0x57e4]        # 407140 <error@@Base+0x4050>
  40195c:	mov    ecx,0x28
  401961:	lea    rdi,[rip+0x2800]        # 404168 <error@@Base+0x1078>
  401968:	mov    rsi,rbp
  40196b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40196d:	seta   al
  401970:	sbb    al,0x0
  401972:	test   al,al
  401974:	jne    401c9f <__sprintf_chk@plt+0x8ff>
  40197a:	mov    rdx,rbx
  40197d:	mov    esi,0x63
  401982:	mov    rdi,rbp
  401985:	call   4012a0 <fgets@plt>
  40198a:	test   rax,rax
  40198d:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401993:	mov    ecx,0x2b
  401998:	lea    rdi,[rip+0x27f9]        # 404198 <error@@Base+0x10a8>
  40199f:	mov    rsi,rbp
  4019a2:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  4019a4:	seta   al
  4019a7:	sbb    al,0x0
  4019a9:	test   al,al
  4019ab:	jne    401c9f <__sprintf_chk@plt+0x8ff>
  4019b1:	mov    rsi,rsp
  4019b4:	mov    rdx,r12
  4019b7:	mov    rdi,rbx
  4019ba:	call   401520 <__sprintf_chk@plt+0x180>
  4019bf:	test   al,al
  4019c1:	je     401c9f <__sprintf_chk@plt+0x8ff>
  4019c7:	xor    eax,eax
  4019c9:	lea    rdx,[r12+0x8]
  4019ce:	lea    rsi,[rsp+0x8]
  4019d3:	mov    rdi,rbx
  4019d6:	call   401520 <__sprintf_chk@plt+0x180>
  4019db:	test   al,al
  4019dd:	je     401c9f <__sprintf_chk@plt+0x8ff>
  4019e3:	mov    rdx,rbx
  4019e6:	mov    esi,0x63
  4019eb:	mov    rdi,rbp
  4019ee:	call   4012a0 <fgets@plt>
  4019f3:	test   rax,rax
  4019f6:	je     401c9f <__sprintf_chk@plt+0x8ff>
  4019fc:	mov    rdx,rbx
  4019ff:	mov    esi,0x63
  401a04:	mov    rdi,rbp
  401a07:	call   4012a0 <fgets@plt>
  401a0c:	test   rax,rax
  401a0f:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401a15:	lea    r14,[rsp+0x10]
  401a1a:	xor    eax,eax
  401a1c:	lea    rdx,[r12+0x10]
  401a21:	mov    rsi,r14
  401a24:	mov    rdi,rbx
  401a27:	call   401520 <__sprintf_chk@plt+0x180>
  401a2c:	test   al,al
  401a2e:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401a34:	xor    eax,eax
  401a36:	lea    rdx,[r12+0x18]
  401a3b:	mov    rsi,r14
  401a3e:	mov    rdi,rbx
  401a41:	call   401520 <__sprintf_chk@plt+0x180>
  401a46:	test   al,al
  401a48:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401a4e:	xor    eax,eax
  401a50:	lea    rdx,[r12+0x20]
  401a55:	mov    rsi,r14
  401a58:	mov    rdi,rbx
  401a5b:	call   401520 <__sprintf_chk@plt+0x180>
  401a60:	test   al,al
  401a62:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401a68:	mov    rdx,rbx
  401a6b:	mov    esi,0x63
  401a70:	mov    rdi,rbp
  401a73:	call   4012a0 <fgets@plt>
  401a78:	test   rax,rax
  401a7b:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401a81:	mov    rdx,rbx
  401a84:	mov    esi,0x63
  401a89:	mov    rdi,rbp
  401a8c:	call   4012a0 <fgets@plt>
  401a91:	test   rax,rax
  401a94:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401a9a:	mov    rdx,rbx
  401a9d:	mov    esi,0x63
  401aa2:	mov    rdi,rbp
  401aa5:	call   4012a0 <fgets@plt>
  401aaa:	test   rax,rax
  401aad:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401ab3:	mov    rdx,rbx
  401ab6:	mov    esi,0x63
  401abb:	mov    rdi,rbp
  401abe:	call   4012a0 <fgets@plt>
  401ac3:	test   rax,rax
  401ac6:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401acc:	xor    eax,eax
  401ace:	lea    rsi,[r12+0x28]
  401ad3:	mov    rdi,rbx
  401ad6:	call   401590 <__sprintf_chk@plt+0x1f0>
  401adb:	test   al,al
  401add:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401ae3:	xor    eax,eax
  401ae5:	lea    rsi,[r12+0x48]
  401aea:	mov    rdi,rbx
  401aed:	call   401590 <__sprintf_chk@plt+0x1f0>
  401af2:	test   al,al
  401af4:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401afa:	xor    eax,eax
  401afc:	lea    rsi,[r12+0x68]
  401b01:	mov    rdi,rbx
  401b04:	call   401590 <__sprintf_chk@plt+0x1f0>
  401b09:	test   al,al
  401b0b:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401b11:	mov    rdx,rbx
  401b14:	mov    esi,0x63
  401b19:	mov    rdi,rbp
  401b1c:	call   4012a0 <fgets@plt>
  401b21:	test   rax,rax
  401b24:	je     401c9f <__sprintf_chk@plt+0x8ff>
  401b2a:	mov    r13,rbp
  401b2d:	jmp    401b36 <__sprintf_chk@plt+0x796>
  401b2f:	nop
  401b30:	cmp    BYTE PTR [rbp+0x0],0xa
  401b34:	je     401b4b <__sprintf_chk@plt+0x7ab>
  401b36:	mov    rdx,rbx
  401b39:	mov    esi,0x63
  401b3e:	mov    rdi,r13
  401b41:	call   4012a0 <fgets@plt>
  401b46:	test   rax,rax
  401b49:	jne    401b30 <__sprintf_chk@plt+0x790>
  401b4b:	cmp    QWORD PTR [rsp+0x8],0x0
  401b51:	jg     401b90 <__sprintf_chk@plt+0x7f0>
  401b53:	cmp    QWORD PTR [rsp],0x0
  401b58:	jg     401bf6 <__sprintf_chk@plt+0x856>
  401b5e:	xor    eax,eax
  401b60:	mov    rdi,rbx
  401b63:	call   402f60 <__sprintf_chk@plt+0x1bc0>
  401b68:	mov    rax,QWORD PTR [rsp+0x28]
  401b6d:	xor    rax,QWORD PTR fs:0x28
  401b76:	jne    401cbe <__sprintf_chk@plt+0x91e>
  401b7c:	add    rsp,0x30
  401b80:	pop    rbx
  401b81:	pop    rbp
  401b82:	pop    r12
  401b84:	pop    r13
  401b86:	pop    r14
  401b88:	ret    
  401b89:	nop    DWORD PTR [rax+0x0]
  401b90:	mov    rdx,rbx
  401b93:	mov    esi,0x63
  401b98:	lea    rdi,[rip+0x55a1]        # 407140 <error@@Base+0x4050>
  401b9f:	call   4012a0 <fgets@plt>
  401ba4:	lea    rbp,[rsp+0x18]
  401ba9:	lea    r13,[rip+0x55a4]        # 407154 <error@@Base+0x4064>
  401bb0:	test   rax,rax
  401bb3:	jne    401bd7 <__sprintf_chk@plt+0x837>
  401bb5:	jmp    401b53 <__sprintf_chk@plt+0x7b3>
  401bb7:	nop    WORD PTR [rax+rax*1+0x0]
  401bc0:	mov    rcx,QWORD PTR [rsp+0x18]
  401bc5:	mov    rdx,QWORD PTR [rsp+0x10]
  401bca:	mov    rsi,r13
  401bcd:	mov    rdi,r12
  401bd0:	xor    eax,eax
  401bd2:	call   401880 <__sprintf_chk@plt+0x4e0>
  401bd7:	xor    eax,eax
  401bd9:	mov    rdx,rbp
  401bdc:	mov    rsi,r14
  401bdf:	mov    rdi,rbx
  401be2:	call   401640 <__sprintf_chk@plt+0x2a0>
  401be7:	test   al,al
  401be9:	jne    401bc0 <__sprintf_chk@plt+0x820>
  401beb:	cmp    QWORD PTR [rsp],0x0
  401bf0:	jle    401b5e <__sprintf_chk@plt+0x7be>
  401bf6:	mov    rdx,rbx
  401bf9:	mov    esi,0x63
  401bfe:	lea    rdi,[rip+0x553b]        # 407140 <error@@Base+0x4050>
  401c05:	call   4012a0 <fgets@plt>
  401c0a:	lea    rbp,[rsp+0x18]
  401c0f:	lea    r13,[rsp+0x20]
  401c14:	test   rax,rax
  401c17:	jne    401c46 <__sprintf_chk@plt+0x8a6>
  401c19:	jmp    401b5e <__sprintf_chk@plt+0x7be>
  401c1e:	xchg   ax,ax
  401c20:	cmp    al,0x5c
  401c22:	jne    401c80 <__sprintf_chk@plt+0x8e0>
  401c24:	mov    QWORD PTR [rsp+0x20],0xa
  401c2d:	mov    esi,0xa
  401c32:	mov    rcx,QWORD PTR [rsp+0x18]
  401c37:	mov    rdx,QWORD PTR [rsp+0x10]
  401c3c:	mov    rdi,r12
  401c3f:	xor    eax,eax
  401c41:	call   401810 <__sprintf_chk@plt+0x470>
  401c46:	xor    eax,eax
  401c48:	mov    rdx,rbp
  401c4b:	mov    rsi,r14
  401c4e:	mov    rdi,rbx
  401c51:	call   401640 <__sprintf_chk@plt+0x2a0>
  401c56:	test   al,al
  401c58:	je     401b5e <__sprintf_chk@plt+0x7be>
  401c5e:	movzx  eax,BYTE PTR [rip+0x54fa]        # 40715f <error@@Base+0x406f>
  401c65:	cmp    al,0x7d
  401c67:	jne    401c20 <__sprintf_chk@plt+0x880>
  401c69:	movsx  rsi,BYTE PTR [rip+0x54ed]        # 40715e <error@@Base+0x406e>
  401c71:	mov    QWORD PTR [rsp+0x20],rsi
  401c76:	jmp    401c32 <__sprintf_chk@plt+0x892>
  401c78:	nop    DWORD PTR [rax+rax*1+0x0]
  401c80:	lea    rsi,[rip+0x2408]        # 40408f <error@@Base+0xf9f>
  401c87:	mov    rdx,r13
  401c8a:	lea    rdi,[rip+0x54ce]        # 40715f <error@@Base+0x406f>
  401c91:	xor    eax,eax
  401c93:	call   401310 <__isoc99_sscanf@plt>
  401c98:	mov    rsi,QWORD PTR [rsp+0x20]
  401c9d:	jmp    401c32 <__sprintf_chk@plt+0x892>
  401c9f:	test   r13,r13
  401ca2:	lea    rax,[rip+0x23e0]        # 404089 <error@@Base+0xf99>
  401ca9:	cmove  r13,rax
  401cad:	lea    rdi,[rip+0x23df]        # 404093 <error@@Base+0xfa3>
  401cb4:	mov    rsi,r13
  401cb7:	xor    eax,eax
  401cb9:	call   4031a0 <error@@Base+0xb0>
  401cbe:	call   401260 <__stack_chk_fail@plt>
  401cc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401cce:	xchg   ax,ax
  401cd0:	endbr64 
  401cd4:	push   r13
  401cd6:	xor    eax,eax
  401cd8:	push   r12
  401cda:	mov    r12,rdi
  401cdd:	mov    rdi,rsi
  401ce0:	push   rbp
  401ce1:	lea    rsi,[rip+0x2748]        # 404430 <error@@Base+0x1340>
  401ce8:	lea    rbp,[r12+0x88]
  401cf0:	push   rbx
  401cf1:	sub    rsp,0x8
  401cf5:	call   4031f0 <error@@Base+0x100>
  401cfa:	mov    r13,rax
  401cfd:	mov    rdi,rax
  401d00:	lea    r8,[rip+0x2491]        # 404198 <error@@Base+0x10a8>
  401d07:	lea    rcx,[rip+0x245a]        # 404168 <error@@Base+0x1078>
  401d0e:	lea    rdx,[rip+0x2390]        # 4040a5 <error@@Base+0xfb5>
  401d15:	mov    esi,0x1
  401d1a:	xor    eax,eax
  401d1c:	call   401360 <__fprintf_chk@plt>
  401d21:	mov    rcx,QWORD PTR [r12]
  401d25:	lea    r8,[rip+0x25f6]        # 404322 <error@@Base+0x1232>
  401d2c:	lea    rdx,[rip+0x23e1]        # 404114 <error@@Base+0x1024>
  401d33:	mov    esi,0x1
  401d38:	mov    rdi,r13
  401d3b:	xor    eax,eax
  401d3d:	call   401360 <__fprintf_chk@plt>
  401d42:	mov    rcx,QWORD PTR [r12+0x8]
  401d47:	lea    r8,[rip+0x235c]        # 4040aa <error@@Base+0xfba>
  401d4e:	lea    rdx,[rip+0x23bf]        # 404114 <error@@Base+0x1024>
  401d55:	mov    esi,0x1
  401d5a:	mov    rdi,r13
  401d5d:	xor    eax,eax
  401d5f:	call   401360 <__fprintf_chk@plt>
  401d64:	mov    rdx,QWORD PTR [r12]
  401d68:	xor    eax,eax
  401d6a:	mov    rsi,rdx
  401d6d:	sub    rsi,QWORD PTR [r12+0x8]
  401d72:	mov    rdi,r13
  401d75:	call   4016a0 <__sprintf_chk@plt+0x300>
  401d7a:	lea    rdx,[rip+0x2330]        # 4040b1 <error@@Base+0xfc1>
  401d81:	mov    esi,0x1
  401d86:	mov    rdi,r13
  401d89:	xor    eax,eax
  401d8b:	call   401360 <__fprintf_chk@plt>
  401d90:	mov    rcx,QWORD PTR [r12+0x10]
  401d95:	lea    r8,[rip+0x2324]        # 4040c0 <error@@Base+0xfd0>
  401d9c:	lea    rdx,[rip+0x2371]        # 404114 <error@@Base+0x1024>
  401da3:	mov    esi,0x1
  401da8:	mov    rdi,r13
  401dab:	xor    eax,eax
  401dad:	call   401360 <__fprintf_chk@plt>
  401db2:	mov    rcx,QWORD PTR [r12+0x18]
  401db7:	lea    r8,[rip+0x2314]        # 4040d2 <error@@Base+0xfe2>
  401dbe:	lea    rdx,[rip+0x234f]        # 404114 <error@@Base+0x1024>
  401dc5:	mov    esi,0x1
  401dca:	mov    rdi,r13
  401dcd:	xor    eax,eax
  401dcf:	call   401360 <__fprintf_chk@plt>
  401dd4:	mov    rcx,QWORD PTR [r12+0x20]
  401dd9:	lea    r8,[rip+0x2302]        # 4040e2 <error@@Base+0xff2>
  401de0:	lea    rdx,[rip+0x232d]        # 404114 <error@@Base+0x1024>
  401de7:	mov    esi,0x1
  401dec:	mov    rdi,r13
  401def:	xor    eax,eax
  401df1:	call   401360 <__fprintf_chk@plt>
  401df6:	mov    rsi,QWORD PTR [r12+0x18]
  401dfb:	mov    rdx,QWORD PTR [r12]
  401dff:	add    rsi,QWORD PTR [r12+0x10]
  401e04:	xor    eax,eax
  401e06:	mov    rdi,r13
  401e09:	call   4016a0 <__sprintf_chk@plt+0x300>
  401e0e:	lea    rdx,[rip+0x22d9]        # 4040ee <error@@Base+0xffe>
  401e15:	mov    esi,0x1
  401e1a:	mov    rdi,r13
  401e1d:	xor    eax,eax
  401e1f:	call   401360 <__fprintf_chk@plt>
  401e24:	mov    rdx,QWORD PTR [r12]
  401e28:	xor    eax,eax
  401e2a:	mov    rsi,rdx
  401e2d:	sub    rsi,QWORD PTR [r12+0x60]
  401e32:	mov    rdi,r13
  401e35:	call   4016a0 <__sprintf_chk@plt+0x300>
  401e3a:	lea    rdx,[rip+0x2387]        # 4041c8 <error@@Base+0x10d8>
  401e41:	mov    esi,0x1
  401e46:	mov    rdi,r13
  401e49:	xor    eax,eax
  401e4b:	call   401360 <__fprintf_chk@plt>
  401e50:	lea    rdx,[rip+0x2391]        # 4041e8 <error@@Base+0x10f8>
  401e57:	mov    esi,0x1
  401e5c:	mov    rdi,r13
  401e5f:	xor    eax,eax
  401e61:	call   401360 <__fprintf_chk@plt>
  401e66:	lea    rax,[rip+0x22b2]        # 40411f <error@@Base+0x102f>
  401e6d:	mov    rcx,QWORD PTR [r12+0x28]
  401e72:	push   rax
  401e73:	lea    rdx,[rip+0x228b]        # 404105 <error@@Base+0x1015>
  401e7a:	xor    eax,eax
  401e7c:	push   QWORD PTR [r12+0x40]
  401e81:	mov    esi,0x1
  401e86:	mov    rdi,r13
  401e89:	mov    r9,QWORD PTR [r12+0x38]
  401e8e:	mov    r8,QWORD PTR [r12+0x30]
  401e93:	xor    ebx,ebx
  401e95:	call   401360 <__fprintf_chk@plt>
  401e9a:	lea    rax,[rip+0x2285]        # 404126 <error@@Base+0x1036>
  401ea1:	mov    rcx,QWORD PTR [r12+0x48]
  401ea6:	push   rax
  401ea7:	lea    rdx,[rip+0x2257]        # 404105 <error@@Base+0x1015>
  401eae:	mov    esi,0x1
  401eb3:	push   QWORD PTR [r12+0x60]
  401eb8:	mov    rdi,r13
  401ebb:	xor    eax,eax
  401ebd:	mov    r9,QWORD PTR [r12+0x58]
  401ec2:	mov    r8,QWORD PTR [r12+0x50]
  401ec7:	call   401360 <__fprintf_chk@plt>
  401ecc:	add    rsp,0x20
  401ed0:	lea    rax,[rip+0x2258]        # 40412f <error@@Base+0x103f>
  401ed7:	mov    rcx,QWORD PTR [r12+0x68]
  401edc:	push   rax
  401edd:	lea    rdx,[rip+0x2221]        # 404105 <error@@Base+0x1015>
  401ee4:	mov    esi,0x1
  401ee9:	push   QWORD PTR [r12+0x80]
  401ef1:	mov    rdi,r13
  401ef4:	xor    eax,eax
  401ef6:	mov    r9,QWORD PTR [r12+0x78]
  401efb:	mov    r8,QWORD PTR [r12+0x70]
  401f00:	call   401360 <__fprintf_chk@plt>
  401f05:	lea    rdx,[rip+0x2229]        # 404135 <error@@Base+0x1045>
  401f0c:	mov    esi,0x1
  401f11:	mov    rdi,r13
  401f14:	xor    eax,eax
  401f16:	call   401360 <__fprintf_chk@plt>
  401f1b:	pop    rax
  401f1c:	pop    rdx
  401f1d:	nop    DWORD PTR [rax]
  401f20:	cmp    QWORD PTR [rbp+0x0],0x0
  401f25:	jle    401f43 <__sprintf_chk@plt+0xba3>
  401f27:	mov    rdi,rbx
  401f2a:	xor    eax,eax
  401f2c:	call   4021d0 <__sprintf_chk@plt+0xe30>
  401f31:	mov    rdx,rax
  401f34:	xor    ecx,ecx
  401f36:	mov    rsi,rbp
  401f39:	mov    rdi,r13
  401f3c:	xor    eax,eax
  401f3e:	call   401740 <__sprintf_chk@plt+0x3a0>
  401f43:	inc    rbx
  401f46:	add    rbp,0x10
  401f4a:	cmp    rbx,0x100
  401f51:	jne    401f20 <__sprintf_chk@plt+0xb80>
  401f53:	xor    ecx,ecx
  401f55:	xor    eax,eax
  401f57:	lea    rsi,[r12+0x1088]
  401f5f:	lea    rdx,[rip+0x21c9]        # 40412f <error@@Base+0x103f>
  401f66:	mov    rdi,r13
  401f69:	call   401740 <__sprintf_chk@plt+0x3a0>
  401f6e:	cmp    QWORD PTR [r12+0x8],0x0
  401f74:	jg     401f95 <__sprintf_chk@plt+0xbf5>
  401f76:	cmp    QWORD PTR [r12],0x0
  401f7b:	jg     402032 <__sprintf_chk@plt+0xc92>
  401f81:	add    rsp,0x8
  401f85:	pop    rbx
  401f86:	pop    rbp
  401f87:	pop    r12
  401f89:	mov    rdi,r13
  401f8c:	xor    eax,eax
  401f8e:	pop    r13
  401f90:	jmp    402f60 <__sprintf_chk@plt+0x1bc0>
  401f95:	xor    eax,eax
  401f97:	lea    rdi,[r12+0x1098]
  401f9f:	call   4025b0 <__sprintf_chk@plt+0x1210>
  401fa4:	mov    rsi,QWORD PTR [r12+0x4f78]
  401fac:	mov    rdi,QWORD PTR [r12+0x4f80]
  401fb4:	xor    eax,eax
  401fb6:	lea    rdx,[rip+0xfffffffffffff743]        # 401700 <__sprintf_chk@plt+0x360>
  401fbd:	call   4023a0 <__sprintf_chk@plt+0x1000>
  401fc2:	xor    eax,eax
  401fc4:	lea    rdx,[rip+0x2245]        # 404210 <error@@Base+0x1120>
  401fcb:	mov    esi,0x1
  401fd0:	mov    rdi,r13
  401fd3:	call   401360 <__fprintf_chk@plt>
  401fd8:	cmp    QWORD PTR [r12+0x4f80],0x0
  401fe1:	jle    401f76 <__sprintf_chk@plt+0xbd6>
  401fe3:	xor    ebx,ebx
  401fe5:	lea    rbp,[rip+0x2167]        # 404153 <error@@Base+0x1063>
  401fec:	nop    DWORD PTR [rax+0x0]
  401ff0:	mov    rax,QWORD PTR [r12+0x4f78]
  401ff8:	mov    rdx,rbp
  401ffb:	mov    rax,QWORD PTR [rax+rbx*8]
  401fff:	mov    esi,0x1
  402004:	mov    rcx,QWORD PTR [rax+0x18]
  402008:	mov    r9,QWORD PTR [rax+0x10]
  40200c:	mov    r8,QWORD PTR [rax+0x20]
  402010:	mov    rdi,r13
  402013:	xor    eax,eax
  402015:	inc    rbx
  402018:	call   401360 <__fprintf_chk@plt>
  40201d:	cmp    QWORD PTR [r12+0x4f80],rbx
  402025:	jg     401ff0 <__sprintf_chk@plt+0xc50>
  402027:	cmp    QWORD PTR [r12],0x0
  40202c:	jle    401f81 <__sprintf_chk@plt+0xbe1>
  402032:	lea    rdx,[rip+0x20fc]        # 404135 <error@@Base+0x1045>
  402039:	mov    esi,0x1
  40203e:	mov    rdi,r13
  402041:	xor    eax,eax
  402043:	call   401360 <__fprintf_chk@plt>
  402048:	add    r12,0x4f88
  40204f:	xor    ebp,ebp
  402051:	nop    DWORD PTR [rax+0x0]
  402058:	cmp    QWORD PTR [r12],0x0
  40205d:	jle    402071 <__sprintf_chk@plt+0xcd1>
  40205f:	mov    rcx,rbp
  402062:	xor    edx,edx
  402064:	mov    rsi,r12
  402067:	mov    rdi,r13
  40206a:	xor    eax,eax
  40206c:	call   401740 <__sprintf_chk@plt+0x3a0>
  402071:	inc    rbp
  402074:	add    r12,0x10
  402078:	cmp    rbp,0x10ffff
  40207f:	jne    402058 <__sprintf_chk@plt+0xcb8>
  402081:	jmp    401f81 <__sprintf_chk@plt+0xbe1>
  402086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402090:	push   r15
  402092:	lea    r15,[rip+0x115127]        # 5171c0 <error@@Base+0x1140d0>
  402099:	push   r14
  40209b:	push   r13
  40209d:	push   r12
  40209f:	lea    r12,[rip+0x479a]        # 406840 <error@@Base+0x3750>
  4020a6:	push   rbp
  4020a7:	push   rbx
  4020a8:	sub    rsp,0x8
  4020ac:	nop    DWORD PTR [rax+0x0]
  4020b0:	movsx  rbx,WORD PTR [rip+0x115908]        # 5179c0 <error@@Base+0x1148d0>
  4020b8:	mov    r13,rbx
  4020bb:	test   rbx,rbx
  4020be:	jle    402139 <__sprintf_chk@plt+0xd99>
  4020c0:	mov    rbp,QWORD PTR [r12+0x8]
  4020c5:	xor    r14d,r14d
  4020c8:	jmp    4020d8 <__sprintf_chk@plt+0xd38>
  4020ca:	nop    WORD PTR [rax+rax*1+0x0]
  4020d0:	inc    r14
  4020d3:	cmp    rbx,r14
  4020d6:	je     402148 <__sprintf_chk@plt+0xda8>
  4020d8:	mov    rsi,QWORD PTR [r15+r14*8]
  4020dc:	mov    rdi,rbp
  4020df:	call   4012d0 <strcmp@plt>
  4020e4:	test   eax,eax
  4020e6:	jne    4020d0 <__sprintf_chk@plt+0xd30>
  4020e8:	mov    eax,DWORD PTR [r12]
  4020ec:	mov    esi,DWORD PTR [r12+0x4]
  4020f1:	cmp    eax,esi
  4020f3:	ja     40211a <__sprintf_chk@plt+0xd7a>
  4020f5:	lea    rcx,[rip+0x50c4]        # 4071c0 <error@@Base+0x40d0>
  4020fc:	add    rax,rcx
  4020ff:	inc    rcx
  402102:	mov    edx,r14d
  402105:	add    rsi,rcx
  402108:	nop    DWORD PTR [rax+rax*1+0x0]
  402110:	mov    BYTE PTR [rax],dl
  402112:	inc    rax
  402115:	cmp    rsi,rax
  402118:	jne    402110 <__sprintf_chk@plt+0xd70>
  40211a:	add    r12,0x10
  40211e:	lea    rax,[rip+0x4ccb]        # 406df0 <error@@Base+0x3d00>
  402125:	cmp    r12,rax
  402128:	jne    4020b0 <__sprintf_chk@plt+0xd10>
  40212a:	add    rsp,0x8
  40212e:	pop    rbx
  40212f:	pop    rbp
  402130:	pop    r12
  402132:	pop    r13
  402134:	pop    r14
  402136:	pop    r15
  402138:	ret    
  402139:	mov    r14d,0x0
  40213f:	jne    4020e8 <__sprintf_chk@plt+0xd48>
  402141:	nop    DWORD PTR [rax+0x0]
  402148:	cmp    r13w,0x100
  40214e:	je     402166 <__sprintf_chk@plt+0xdc6>
  402150:	mov    rax,QWORD PTR [r12+0x8]
  402155:	inc    r13d
  402158:	mov    WORD PTR [rip+0x115860],r13w        # 5179c0 <error@@Base+0x1148d0>
  402160:	mov    QWORD PTR [r15+r14*8],rax
  402164:	jmp    4020e8 <__sprintf_chk@plt+0xd48>
  402166:	lea    rdi,[rip+0x20d3]        # 404240 <error@@Base+0x1150>
  40216d:	xor    eax,eax
  40216f:	call   4030f0 <error@@Base>
  402174:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40217f:	nop
  402180:	endbr64 
  402184:	cmp    WORD PTR [rip+0x115834],0x0        # 5179c0 <error@@Base+0x1148d0>
  40218c:	je     4021a0 <__sprintf_chk@plt+0xe00>
  40218e:	mov    edi,edi
  402190:	lea    rax,[rip+0x5029]        # 4071c0 <error@@Base+0x40d0>
  402197:	movzx  eax,BYTE PTR [rax+rdi*1]
  40219b:	ret    
  40219c:	nop    DWORD PTR [rax+0x0]
  4021a0:	sub    rsp,0x18
  4021a4:	xor    eax,eax
  4021a6:	mov    DWORD PTR [rsp+0xc],edi
  4021aa:	call   402090 <__sprintf_chk@plt+0xcf0>
  4021af:	mov    edi,DWORD PTR [rsp+0xc]
  4021b3:	lea    rax,[rip+0x5006]        # 4071c0 <error@@Base+0x40d0>
  4021ba:	mov    edi,edi
  4021bc:	movzx  eax,BYTE PTR [rax+rdi*1]
  4021c0:	add    rsp,0x18
  4021c4:	ret    
  4021c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021d0:	endbr64 
  4021d4:	sub    rsp,0x18
  4021d8:	movsx  eax,WORD PTR [rip+0x1157e1]        # 5179c0 <error@@Base+0x1148d0>
  4021df:	test   ax,ax
  4021e2:	je     402200 <__sprintf_chk@plt+0xe60>
  4021e4:	movzx  edi,dil
  4021e8:	cmp    edi,eax
  4021ea:	jge    402216 <__sprintf_chk@plt+0xe76>
  4021ec:	lea    rax,[rip+0x114fcd]        # 5171c0 <error@@Base+0x1140d0>
  4021f3:	mov    rax,QWORD PTR [rax+rdi*8]
  4021f7:	add    rsp,0x18
  4021fb:	ret    
  4021fc:	nop    DWORD PTR [rax+0x0]
  402200:	mov    DWORD PTR [rsp+0xc],edi
  402204:	call   402090 <__sprintf_chk@plt+0xcf0>
  402209:	movsx  eax,WORD PTR [rip+0x1157b0]        # 5179c0 <error@@Base+0x1148d0>
  402210:	mov    edi,DWORD PTR [rsp+0xc]
  402214:	jmp    4021e4 <__sprintf_chk@plt+0xe44>
  402216:	lea    rdi,[rip+0x203e]        # 40425b <error@@Base+0x116b>
  40221d:	xor    eax,eax
  40221f:	call   4030f0 <error@@Base>
  402224:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40222e:	xchg   ax,ax
  402230:	push   r15
  402232:	mov    rax,rsi
  402235:	shl    rax,0x3
  402239:	push   r14
  40223b:	push   r13
  40223d:	mov    r13,rdi
  402240:	push   r12
  402242:	push   rbp
  402243:	push   rbx
  402244:	sub    rsp,0x18
  402248:	mov    QWORD PTR [rsp],rsi
  40224c:	mov    QWORD PTR [rsp+0x8],rax
  402251:	mov    rax,QWORD PTR [rip+0x115778]        # 5179d0 <error@@Base+0x1148e0>
  402258:	mov    rdx,QWORD PTR [rsp]
  40225c:	mov    rbx,QWORD PTR [rax+r13*8]
  402260:	mov    r15,rdx
  402263:	mov    rbp,r13
  402266:	cmp    r13,rdx
  402269:	jge    402383 <__sprintf_chk@plt+0xfe3>
  40226f:	nop
  402270:	mov    rsi,QWORD PTR [rax+r15*8]
  402274:	mov    rdi,rbx
  402277:	xor    eax,eax
  402279:	lea    r12,[r15*8+0x0]
  402281:	call   QWORD PTR [rip+0x115741]        # 5179c8 <error@@Base+0x1148d8>
  402287:	test   eax,eax
  402289:	jns    402328 <__sprintf_chk@plt+0xf88>
  40228f:	dec    r15
  402292:	mov    rax,QWORD PTR [rip+0x115737]        # 5179d0 <error@@Base+0x1148e0>
  402299:	lea    r12,[r15*8+0x0]
  4022a1:	cmp    rbp,r15
  4022a4:	jl     402270 <__sprintf_chk@plt+0xed0>
  4022a6:	lea    rsi,[rax+r12*1]
  4022aa:	cmp    r15,rbp
  4022ad:	je     40233f <__sprintf_chk@plt+0xf9f>
  4022b3:	mov    rsi,QWORD PTR [rsi]
  4022b6:	lea    r14,[rbp+0x1]
  4022ba:	lea    rdi,[rbp*8+0x0]
  4022c2:	mov    QWORD PTR [rax+rbp*8],rsi
  4022c6:	cmp    r15,r14
  4022c9:	jg     4022df <__sprintf_chk@plt+0xf3f>
  4022cb:	jmp    40236b <__sprintf_chk@plt+0xfcb>
  4022d0:	inc    r14
  4022d3:	mov    rax,QWORD PTR [rip+0x1156f6]        # 5179d0 <error@@Base+0x1148e0>
  4022da:	cmp    r15,r14
  4022dd:	je     402338 <__sprintf_chk@plt+0xf98>
  4022df:	mov    rsi,QWORD PTR [rax+r14*8]
  4022e3:	mov    rdi,rbx
  4022e6:	xor    eax,eax
  4022e8:	lea    rbp,[r14*8+0x0]
  4022f0:	call   QWORD PTR [rip+0x1156d2]        # 5179c8 <error@@Base+0x1148d8>
  4022f6:	test   eax,eax
  4022f8:	jg     4022d0 <__sprintf_chk@plt+0xf30>
  4022fa:	mov    rax,QWORD PTR [rip+0x1156cf]        # 5179d0 <error@@Base+0x1148e0>
  402301:	lea    rsi,[rax+rbp*1]
  402305:	mov    rbp,r14
  402308:	mov    rsi,QWORD PTR [rsi]
  40230b:	dec    r15
  40230e:	mov    QWORD PTR [rax+r12*1],rsi
  402312:	cmp    r15,r14
  402315:	jg     402270 <__sprintf_chk@plt+0xed0>
  40231b:	lea    rsi,[rax+r15*8]
  40231f:	jmp    402342 <__sprintf_chk@plt+0xfa2>
  402321:	nop    DWORD PTR [rax+0x0]
  402328:	mov    rax,QWORD PTR [rip+0x1156a1]        # 5179d0 <error@@Base+0x1148e0>
  40232f:	jmp    4022a6 <__sprintf_chk@plt+0xf06>
  402334:	nop    DWORD PTR [rax+0x0]
  402338:	lea    rsi,[rax+r15*8]
  40233c:	mov    rbp,r15
  40233f:	mov    r15,rbp
  402342:	mov    QWORD PTR [rsi],rbx
  402345:	lea    rsi,[r15-0x1]
  402349:	cmp    r13,rsi
  40234c:	jl     402377 <__sprintf_chk@plt+0xfd7>
  40234e:	lea    r13,[rbp+0x1]
  402352:	cmp    r13,QWORD PTR [rsp]
  402356:	jl     402251 <__sprintf_chk@plt+0xeb1>
  40235c:	add    rsp,0x18
  402360:	pop    rbx
  402361:	pop    rbp
  402362:	pop    r12
  402364:	pop    r13
  402366:	pop    r14
  402368:	pop    r15
  40236a:	ret    
  40236b:	lea    rsi,[rax+rdi*1+0x8]
  402370:	je     40233c <__sprintf_chk@plt+0xf9c>
  402372:	mov    rbp,r14
  402375:	jmp    402308 <__sprintf_chk@plt+0xf68>
  402377:	mov    rdi,r13
  40237a:	xor    eax,eax
  40237c:	call   402230 <__sprintf_chk@plt+0xe90>
  402381:	jmp    40234e <__sprintf_chk@plt+0xfae>
  402383:	mov    rcx,QWORD PTR [rsp+0x8]
  402388:	mov    r15,QWORD PTR [rsp]
  40238c:	lea    rsi,[rax+rcx*1]
  402390:	jmp    402342 <__sprintf_chk@plt+0xfa2>
  402392:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40239d:	nop    DWORD PTR [rax]
  4023a0:	endbr64 
  4023a4:	cmp    rdi,0x1
  4023a8:	jle    4023c8 <__sprintf_chk@plt+0x1028>
  4023aa:	mov    QWORD PTR [rip+0x11561f],rsi        # 5179d0 <error@@Base+0x1148e0>
  4023b1:	xor    eax,eax
  4023b3:	lea    rsi,[rdi-0x1]
  4023b7:	xor    edi,edi
  4023b9:	mov    QWORD PTR [rip+0x115608],rdx        # 5179c8 <error@@Base+0x1148d8>
  4023c0:	jmp    402230 <__sprintf_chk@plt+0xe90>
  4023c5:	nop    DWORD PTR [rax]
  4023c8:	ret    
  4023c9:	nop    DWORD PTR [rax+0x0]
  4023d0:	endbr64 
  4023d4:	push   r12
  4023d6:	mov    r12,rdi
  4023d9:	push   rbp
  4023da:	lea    rbp,[rdi+0x3ee0]
  4023e1:	push   rbx
  4023e2:	mov    rbx,rdi
  4023e5:	nop    DWORD PTR [rax]
  4023e8:	mov    rdi,rbx
  4023eb:	xor    eax,eax
  4023ed:	add    rbx,0x20
  4023f1:	call   403540 <error@@Base+0x450>
  4023f6:	cmp    rbx,rbp
  4023f9:	jne    4023e8 <__sprintf_chk@plt+0x1048>
  4023fb:	pop    rbx
  4023fc:	pop    rbp
  4023fd:	mov    QWORD PTR [r12+0x3ee0],0x0
  402409:	mov    QWORD PTR [r12+0x3ee8],0x0
  402415:	pop    r12
  402417:	ret    
  402418:	nop    DWORD PTR [rax+rax*1+0x0]
  402420:	endbr64 
  402424:	push   rbp
  402425:	mov    rbp,rsi
  402428:	push   rbx
  402429:	sub    rsp,0x8
  40242d:	movzx  eax,BYTE PTR [rsi]
  402430:	test   al,al
  402432:	je     4024a8 <__sprintf_chk@plt+0x1108>
  402434:	lea    rdx,[rsi+0x1]
  402438:	xor    ecx,ecx
  40243a:	nop    WORD PTR [rax+rax*1+0x0]
  402440:	inc    rdx
  402443:	add    rcx,rax
  402446:	movzx  eax,BYTE PTR [rdx-0x1]
  40244a:	test   al,al
  40244c:	jne    402440 <__sprintf_chk@plt+0x10a0>
  40244e:	mov    rax,rcx
  402451:	movabs rdx,0x824a4e60b3262bc5
  40245b:	mul    rdx
  40245e:	shr    rdx,0x8
  402462:	imul   rdx,rdx,0x1f7
  402469:	sub    ecx,edx
  40246b:	movsxd rcx,ecx
  40246e:	shl    rcx,0x5
  402472:	mov    rbx,QWORD PTR [rdi+rcx*1]
  402476:	test   rbx,rbx
  402479:	jne    402489 <__sprintf_chk@plt+0x10e9>
  40247b:	jmp    402499 <__sprintf_chk@plt+0x10f9>
  40247d:	nop    DWORD PTR [rax]
  402480:	mov    rbx,QWORD PTR [rbx+0x8]
  402484:	test   rbx,rbx
  402487:	je     402499 <__sprintf_chk@plt+0x10f9>
  402489:	mov    rsi,QWORD PTR [rbx+0x10]
  40248d:	mov    rdi,rbp
  402490:	call   4012d0 <strcmp@plt>
  402495:	test   eax,eax
  402497:	jne    402480 <__sprintf_chk@plt+0x10e0>
  402499:	add    rsp,0x8
  40249d:	mov    rax,rbx
  4024a0:	pop    rbx
  4024a1:	pop    rbp
  4024a2:	ret    
  4024a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4024a8:	xor    ecx,ecx
  4024aa:	jmp    40246b <__sprintf_chk@plt+0x10cb>
  4024ac:	nop    DWORD PTR [rax+0x0]
  4024b0:	endbr64 
  4024b4:	push   rbx
  4024b5:	mov    rdx,QWORD PTR [rsi+0x10]
  4024b9:	mov    rbx,rdi
  4024bc:	movzx  eax,BYTE PTR [rdx]
  4024bf:	test   al,al
  4024c1:	je     402503 <__sprintf_chk@plt+0x1163>
  4024c3:	inc    rdx
  4024c6:	xor    edi,edi
  4024c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4024d0:	inc    rdx
  4024d3:	add    rdi,rax
  4024d6:	movzx  eax,BYTE PTR [rdx-0x1]
  4024da:	test   al,al
  4024dc:	jne    4024d0 <__sprintf_chk@plt+0x1130>
  4024de:	mov    rax,rdi
  4024e1:	movabs rdx,0x824a4e60b3262bc5
  4024eb:	mul    rdx
  4024ee:	shr    rdx,0x8
  4024f2:	imul   rdx,rdx,0x1f7
  4024f9:	sub    rdi,rdx
  4024fc:	shl    rdi,0x5
  402500:	add    rdi,rbx
  402503:	xor    eax,eax
  402505:	call   403570 <error@@Base+0x480>
  40250a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402511:	test   rdi,rdi
  402514:	je     402526 <__sprintf_chk@plt+0x1186>
  402516:	call   4011f0 <free@plt>
  40251b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  402526:	inc    QWORD PTR [rbx+0x3ee8]
  40252d:	pop    rbx
  40252e:	ret    
  40252f:	nop
  402530:	endbr64 
  402534:	push   rbx
  402535:	mov    rdx,QWORD PTR [rsi+0x10]
  402539:	mov    rbx,rdi
  40253c:	movzx  eax,BYTE PTR [rdx]
  40253f:	test   al,al
  402541:	je     402583 <__sprintf_chk@plt+0x11e3>
  402543:	inc    rdx
  402546:	xor    edi,edi
  402548:	nop    DWORD PTR [rax+rax*1+0x0]
  402550:	inc    rdx
  402553:	add    rdi,rax
  402556:	movzx  eax,BYTE PTR [rdx-0x1]
  40255a:	test   al,al
  40255c:	jne    402550 <__sprintf_chk@plt+0x11b0>
  40255e:	mov    rax,rdi
  402561:	movabs rdx,0x824a4e60b3262bc5
  40256b:	mul    rdx
  40256e:	shr    rdx,0x8
  402572:	imul   rdx,rdx,0x1f7
  402579:	sub    rdi,rdx
  40257c:	shl    rdi,0x5
  402580:	add    rdi,rbx
  402583:	xor    eax,eax
  402585:	call   4036b0 <error@@Base+0x5c0>
  40258a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  402591:	test   rdi,rdi
  402594:	je     4025a6 <__sprintf_chk@plt+0x1206>
  402596:	call   4011f0 <free@plt>
  40259b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  4025a6:	dec    QWORD PTR [rbx+0x3ee8]
  4025ad:	pop    rbx
  4025ae:	ret    
  4025af:	nop
  4025b0:	endbr64 
  4025b4:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  4025bc:	je     4025bf <__sprintf_chk@plt+0x121f>
  4025be:	ret    
  4025bf:	mov    rax,QWORD PTR [rdi+0x3ee8]
  4025c6:	test   rax,rax
  4025c9:	je     4025be <__sprintf_chk@plt+0x121e>
  4025cb:	push   rbx
  4025cc:	mov    esi,0x8
  4025d1:	mov    rbx,rdi
  4025d4:	mov    rdi,rax
  4025d7:	xor    eax,eax
  4025d9:	call   403140 <error@@Base+0x50>
  4025de:	mov    QWORD PTR [rbx+0x3ee0],rax
  4025e5:	mov    rsi,rbx
  4025e8:	lea    rdi,[rbx+0x3ee0]
  4025ef:	xor    ecx,ecx
  4025f1:	nop    DWORD PTR [rax+0x0]
  4025f8:	mov    rdx,QWORD PTR [rsi]
  4025fb:	test   rdx,rdx
  4025fe:	je     402611 <__sprintf_chk@plt+0x1271>
  402600:	inc    rcx
  402603:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  402608:	mov    rdx,QWORD PTR [rdx+0x8]
  40260c:	test   rdx,rdx
  40260f:	jne    402600 <__sprintf_chk@plt+0x1260>
  402611:	add    rsi,0x20
  402615:	cmp    rsi,rdi
  402618:	jne    4025f8 <__sprintf_chk@plt+0x1258>
  40261a:	pop    rbx
  40261b:	ret    
  40261c:	nop    DWORD PTR [rax+0x0]
  402620:	endbr64 
  402624:	push   r13
  402626:	mov    r13,rdi
  402629:	push   r12
  40262b:	mov    r12,rsi
  40262e:	push   rbp
  40262f:	lea    rbp,[rdi+0x3ee0]
  402636:	push   rbx
  402637:	mov    rbx,rdi
  40263a:	sub    rsp,0x8
  40263e:	xchg   ax,ax
  402640:	mov    rdi,rbx
  402643:	mov    rsi,r12
  402646:	xor    eax,eax
  402648:	add    rbx,0x20
  40264c:	call   403770 <error@@Base+0x680>
  402651:	cmp    rbx,rbp
  402654:	jne    402640 <__sprintf_chk@plt+0x12a0>
  402656:	mov    rdi,QWORD PTR [r13+0x3ee0]
  40265d:	test   rdi,rdi
  402660:	je     402672 <__sprintf_chk@plt+0x12d2>
  402662:	call   4011f0 <free@plt>
  402667:	mov    QWORD PTR [r13+0x3ee0],0x0
  402672:	mov    QWORD PTR [r13+0x3ee8],0x0
  40267d:	add    rsp,0x8
  402681:	pop    rbx
  402682:	pop    rbp
  402683:	pop    r12
  402685:	pop    r13
  402687:	ret    
  402688:	nop    DWORD PTR [rax+rax*1+0x0]
  402690:	endbr64 
  402694:	push   r12
  402696:	xor    eax,eax
  402698:	mov    r12d,esi
  40269b:	push   rbp
  40269c:	mov    esi,0x18
  4026a1:	mov    ebp,edx
  4026a3:	push   rbx
  4026a4:	mov    rbx,rdi
  4026a7:	mov    edi,0x1
  4026ac:	call   403140 <error@@Base+0x50>
  4026b1:	mov    BYTE PTR [rax+0x10],r12b
  4026b5:	mov    DWORD PTR [rax+0x14],ebp
  4026b8:	mov    rdi,rbx
  4026bb:	mov    rsi,rax
  4026be:	pop    rbx
  4026bf:	pop    rbp
  4026c0:	xor    eax,eax
  4026c2:	pop    r12
  4026c4:	jmp    4035c0 <error@@Base+0x4d0>
  4026c9:	nop    DWORD PTR [rax+0x0]
  4026d0:	endbr64 
  4026d4:	push   r15
  4026d6:	push   r14
  4026d8:	push   r13
  4026da:	push   r12
  4026dc:	push   rbp
  4026dd:	push   rbx
  4026de:	sub    rsp,0xb8
  4026e5:	mov    QWORD PTR [rsp+0x8],rdi
  4026ea:	mov    QWORD PTR [rsp+0x20],rdx
  4026ef:	mov    rdi,rsi
  4026f2:	mov    rsi,QWORD PTR fs:0x28
  4026fb:	mov    QWORD PTR [rsp+0xa8],rsi
  402703:	xor    esi,esi
  402705:	cmp    BYTE PTR [rdx],0x0
  402708:	je     402713 <__sprintf_chk@plt+0x1373>
  40270a:	test   rdi,rdi
  40270d:	je     402aa5 <__sprintf_chk@plt+0x1705>
  402713:	mov    rax,QWORD PTR [rsp+0x8]
  402718:	lea    rsi,[rip+0x2139]        # 404858 <error@@Base+0x1768>
  40271f:	mov    rax,QWORD PTR [rax+0x8]
  402723:	mov    QWORD PTR [rsp+0x28],rax
  402728:	xor    eax,eax
  40272a:	call   4031f0 <error@@Base+0x100>
  40272f:	mov    r12,rax
  402732:	mov    rax,QWORD PTR [rsp+0x20]
  402737:	cmp    BYTE PTR [rax],0x0
  40273a:	jne    4029e8 <__sprintf_chk@plt+0x1648>
  402740:	mov    rsi,QWORD PTR [rsp+0x20]
  402745:	mov    eax,0x5e
  40274a:	mov    ecx,DWORD PTR [rsi+0x4]
  40274d:	mov    rdi,r12
  402750:	test   ecx,ecx
  402752:	cmovne eax,ecx
  402755:	movzx  r15d,BYTE PTR [rsi+0x1]
  40275a:	mov    DWORD PTR [rsp+0x14],eax
  40275e:	call   401390 <getc@plt>
  402763:	cmp    eax,0xffffffff
  402766:	je     402857 <__sprintf_chk@plt+0x14b7>
  40276c:	mov    rsi,QWORD PTR [rip+0x487d]        # 406ff0 <error@@Base+0x3f00>
  402773:	movsxd rdx,eax
  402776:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  40277b:	mov    rbx,rcx
  40277e:	test   rcx,rcx
  402781:	jle    402ad2 <__sprintf_chk@plt+0x1732>
  402787:	lea    rsi,[rsp+0x3c]
  40278c:	xor    ebp,ebp
  40278e:	lea    r13,[rsp+0x40]
  402793:	mov    QWORD PTR [rsp+0x18],rsi
  402798:	jmp    4027de <__sprintf_chk@plt+0x143e>
  40279a:	nop    WORD PTR [rax+rax*1+0x0]
  4027a0:	mov    rdi,QWORD PTR [rsp+0x8]
  4027a5:	movsx  esi,bpl
  4027a9:	xor    eax,eax
  4027ab:	call   402690 <__sprintf_chk@plt+0x12f0>
  4027b0:	mov    rdi,r12
  4027b3:	xor    ebp,ebp
  4027b5:	call   401390 <getc@plt>
  4027ba:	cmp    eax,0xffffffff
  4027bd:	je     402857 <__sprintf_chk@plt+0x14b7>
  4027c3:	mov    rcx,QWORD PTR [rip+0x4826]        # 406ff0 <error@@Base+0x3f00>
  4027ca:	movsxd rdx,eax
  4027cd:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  4027d2:	mov    rbx,rcx
  4027d5:	test   rcx,rcx
  4027d8:	jle    402ad2 <__sprintf_chk@plt+0x1732>
  4027de:	mov    BYTE PTR [rsp+0x40],al
  4027e2:	cmp    rcx,0x1
  4027e6:	je     402810 <__sprintf_chk@plt+0x1470>
  4027e8:	lea    r14,[rcx-0x1]
  4027ec:	lea    rdi,[r13+0x1]
  4027f0:	mov    r8,r12
  4027f3:	mov    rcx,r14
  4027f6:	mov    edx,0x1
  4027fb:	mov    esi,0x3
  402800:	call   401320 <__fread_chk@plt>
  402805:	cdqe   
  402807:	cmp    r14,rax
  40280a:	jne    402ae0 <__sprintf_chk@plt+0x1740>
  402810:	mov    rdx,QWORD PTR [rsp+0x18]
  402815:	mov    esi,0x4
  40281a:	mov    rdi,r13
  40281d:	call   4012b0 <utf8proc_iterate@plt>
  402822:	cmp    eax,ebx
  402824:	jne    402ac0 <__sprintf_chk@plt+0x1720>
  40282a:	mov    edx,DWORD PTR [rsp+0x3c]
  40282e:	test   r15b,r15b
  402831:	je     4027a0 <__sprintf_chk@plt+0x1400>
  402837:	cmp    DWORD PTR [rsp+0x14],edx
  40283b:	jne    4027a0 <__sprintf_chk@plt+0x1400>
  402841:	mov    rdi,r12
  402844:	mov    ebp,0x1
  402849:	call   401390 <getc@plt>
  40284e:	cmp    eax,0xffffffff
  402851:	jne    4027c3 <__sprintf_chk@plt+0x1423>
  402857:	xor    eax,eax
  402859:	mov    rdi,r12
  40285c:	call   402f60 <__sprintf_chk@plt+0x1bc0>
  402861:	mov    rax,QWORD PTR [rsp+0x20]
  402866:	cmp    BYTE PTR [rax+0x9],0x0
  40286a:	je     402970 <__sprintf_chk@plt+0x15d0>
  402870:	mov    rax,QWORD PTR [rsp+0x28]
  402875:	test   rax,rax
  402878:	je     402a98 <__sprintf_chk@plt+0x16f8>
  40287e:	mov    rbp,QWORD PTR [rax+0x8]
  402882:	test   rbp,rbp
  402885:	je     402970 <__sprintf_chk@plt+0x15d0>
  40288b:	mov    r12,rbp
  40288e:	jmp    40289a <__sprintf_chk@plt+0x14fa>
  402890:	mov    r12,QWORD PTR [r12+0x8]
  402895:	test   r12,r12
  402898:	je     4028e3 <__sprintf_chk@plt+0x1543>
  40289a:	mov    ebx,DWORD PTR [r12+0x14]
  40289f:	mov    edi,ebx
  4028a1:	call   401210 <utf8proc_get_property@plt>
  4028a6:	cmp    ebx,0xd
  4028a9:	ja     4029d0 <__sprintf_chk@plt+0x1630>
  4028af:	cmp    ebx,0xb
  4028b2:	jae    4028d0 <__sprintf_chk@plt+0x1530>
  4028b4:	cmp    ebx,0x9
  4028b7:	je     4028d0 <__sprintf_chk@plt+0x1530>
  4028b9:	cmp    ebx,0xa
  4028bc:	je     402890 <__sprintf_chk@plt+0x14f0>
  4028be:	movsx  eax,WORD PTR [rax]
  4028c1:	sub    eax,0x17
  4028c4:	cmp    eax,0x2
  4028c7:	ja     402890 <__sprintf_chk@plt+0x14f0>
  4028c9:	nop    DWORD PTR [rax+0x0]
  4028d0:	mov    DWORD PTR [r12+0x14],0x20
  4028d9:	mov    r12,QWORD PTR [r12+0x8]
  4028de:	test   r12,r12
  4028e1:	jne    40289a <__sprintf_chk@plt+0x14fa>
  4028e3:	mov    r13,QWORD PTR [rsp+0x8]
  4028e8:	jmp    402909 <__sprintf_chk@plt+0x1569>
  4028ea:	nop    WORD PTR [rax+rax*1+0x0]
  4028f0:	test   r12b,r12b
  4028f3:	jne    4028fa <__sprintf_chk@plt+0x155a>
  4028f5:	cmp    eax,0xa
  4028f8:	je     402950 <__sprintf_chk@plt+0x15b0>
  4028fa:	cmp    eax,0xa
  4028fd:	setne  r12b
  402901:	mov    rbp,rbx
  402904:	test   rbx,rbx
  402907:	je     402970 <__sprintf_chk@plt+0x15d0>
  402909:	mov    eax,DWORD PTR [rbp+0x14]
  40290c:	mov    rbx,QWORD PTR [rbp+0x8]
  402910:	cmp    eax,0x20
  402913:	jne    4028f0 <__sprintf_chk@plt+0x1550>
  402915:	test   r12b,r12b
  402918:	je     402930 <__sprintf_chk@plt+0x1590>
  40291a:	test   rbx,rbx
  40291d:	je     402930 <__sprintf_chk@plt+0x1590>
  40291f:	mov    edx,DWORD PTR [rbx+0x14]
  402922:	cmp    edx,0x20
  402925:	je     402930 <__sprintf_chk@plt+0x1590>
  402927:	cmp    edx,0xa
  40292a:	jne    4028fa <__sprintf_chk@plt+0x155a>
  40292c:	nop    DWORD PTR [rax+0x0]
  402930:	test   rbx,rbx
  402933:	je     402950 <__sprintf_chk@plt+0x15b0>
  402935:	test   r12b,r12b
  402938:	je     402950 <__sprintf_chk@plt+0x15b0>
  40293a:	cmp    DWORD PTR [rbx+0x14],0x20
  40293e:	jne    402950 <__sprintf_chk@plt+0x15b0>
  402940:	movzx  eax,BYTE PTR [rbp+0x10]
  402944:	or     BYTE PTR [rbx+0x10],al
  402947:	nop    WORD PTR [rax+rax*1+0x0]
  402950:	mov    rsi,rbp
  402953:	mov    rdi,r13
  402956:	xor    eax,eax
  402958:	call   4036b0 <error@@Base+0x5c0>
  40295d:	mov    rdi,rbp
  402960:	call   4011f0 <free@plt>
  402965:	mov    rbp,rbx
  402968:	test   rbx,rbx
  40296b:	jne    402909 <__sprintf_chk@plt+0x1569>
  40296d:	nop    DWORD PTR [rax]
  402970:	mov    rax,QWORD PTR [rsp+0x20]
  402975:	cmp    BYTE PTR [rax+0xa],0x0
  402979:	je     4029a4 <__sprintf_chk@plt+0x1604>
  40297b:	mov    rax,QWORD PTR [rsp+0x28]
  402980:	test   rax,rax
  402983:	je     402a88 <__sprintf_chk@plt+0x16e8>
  402989:	mov    rbx,QWORD PTR [rax+0x8]
  40298d:	jmp    40299f <__sprintf_chk@plt+0x15ff>
  40298f:	nop
  402990:	mov    edi,DWORD PTR [rbx+0x14]
  402993:	call   401280 <utf8proc_tolower@plt>
  402998:	mov    DWORD PTR [rbx+0x14],eax
  40299b:	mov    rbx,QWORD PTR [rbx+0x8]
  40299f:	test   rbx,rbx
  4029a2:	jne    402990 <__sprintf_chk@plt+0x15f0>
  4029a4:	mov    rax,QWORD PTR [rsp+0xa8]
  4029ac:	xor    rax,QWORD PTR fs:0x28
  4029b5:	jne    402aee <__sprintf_chk@plt+0x174e>
  4029bb:	add    rsp,0xb8
  4029c2:	pop    rbx
  4029c3:	pop    rbp
  4029c4:	pop    r12
  4029c6:	pop    r13
  4029c8:	pop    r14
  4029ca:	pop    r15
  4029cc:	ret    
  4029cd:	nop    DWORD PTR [rax]
  4029d0:	cmp    ebx,0xa0
  4029d6:	jne    4028be <__sprintf_chk@plt+0x151e>
  4029dc:	jmp    4028d0 <__sprintf_chk@plt+0x1530>
  4029e1:	nop    DWORD PTR [rax+0x0]
  4029e8:	lea    r13,[rsp+0x40]
  4029ed:	mov    rdx,r12
  4029f0:	mov    esi,0x63
  4029f5:	mov    rdi,r13
  4029f8:	call   4012a0 <fgets@plt>
  4029fd:	test   rax,rax
  402a00:	je     402a1c <__sprintf_chk@plt+0x167c>
  402a02:	mov    ecx,0x33
  402a07:	lea    rdi,[rip+0x1e92]        # 4048a0 <error@@Base+0x17b0>
  402a0e:	mov    rsi,r13
  402a11:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402a13:	seta   al
  402a16:	sbb    al,0x0
  402a18:	test   al,al
  402a1a:	je     402a38 <__sprintf_chk@plt+0x1698>
  402a1c:	mov    rdi,r12
  402a1f:	call   401270 <rewind@plt>
  402a24:	xor    eax,eax
  402a26:	mov    rsi,QWORD PTR [rsp+0x20]
  402a2b:	mov    BYTE PTR [rsi+0xb],al
  402a2e:	jmp    402740 <__sprintf_chk@plt+0x13a0>
  402a33:	nop    DWORD PTR [rax+rax*1+0x0]
  402a38:	xor    ebx,ebx
  402a3a:	lea    rbp,[rip+0x1e97]        # 4048d8 <error@@Base+0x17e8>
  402a41:	nop    DWORD PTR [rax+0x0]
  402a48:	mov    rdx,r12
  402a4b:	mov    esi,0x63
  402a50:	mov    rdi,r13
  402a53:	call   4012a0 <fgets@plt>
  402a58:	test   rax,rax
  402a5b:	je     402a7b <__sprintf_chk@plt+0x16db>
  402a5d:	mov    ecx,0x38
  402a62:	mov    rsi,r13
  402a65:	mov    rdi,rbp
  402a68:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402a6a:	seta   al
  402a6d:	sbb    al,0x0
  402a6f:	test   al,al
  402a71:	jne    402a48 <__sprintf_chk@plt+0x16a8>
  402a73:	inc    ebx
  402a75:	cmp    bx,0x2
  402a79:	jne    402a48 <__sprintf_chk@plt+0x16a8>
  402a7b:	mov    eax,0x1
  402a80:	jmp    402a26 <__sprintf_chk@plt+0x1686>
  402a82:	nop    WORD PTR [rax+rax*1+0x0]
  402a88:	mov    rax,QWORD PTR [rsp+0x8]
  402a8d:	mov    rbx,QWORD PTR [rax]
  402a90:	jmp    40299f <__sprintf_chk@plt+0x15ff>
  402a95:	nop    DWORD PTR [rax]
  402a98:	mov    rax,QWORD PTR [rsp+0x8]
  402a9d:	mov    rbp,QWORD PTR [rax]
  402aa0:	jmp    402882 <__sprintf_chk@plt+0x14e2>
  402aa5:	lea    rsi,[rip+0x1d7c]        # 404828 <error@@Base+0x1738>
  402aac:	lea    rdi,[rip+0x1d7f]        # 404832 <error@@Base+0x1742>
  402ab3:	xor    eax,eax
  402ab5:	call   4031a0 <error@@Base+0xb0>
  402aba:	nop    WORD PTR [rax+rax*1+0x0]
  402ac0:	movsxd rdi,eax
  402ac3:	call   401370 <utf8proc_errmsg@plt>
  402ac8:	mov    rdi,rax
  402acb:	xor    eax,eax
  402acd:	call   4030f0 <error@@Base>
  402ad2:	lea    rdi,[rip+0x1d69]        # 404842 <error@@Base+0x1752>
  402ad9:	xor    eax,eax
  402adb:	call   4030f0 <error@@Base>
  402ae0:	lea    rdi,[rip+0x1d73]        # 40485a <error@@Base+0x176a>
  402ae7:	xor    eax,eax
  402ae9:	call   4030f0 <error@@Base>
  402aee:	call   401260 <__stack_chk_fail@plt>
  402af3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402afe:	xchg   ax,ax
  402b00:	endbr64 
  402b04:	sub    rsp,0x8
  402b08:	call   401220 <utf8proc_encode_char@plt>
  402b0d:	test   rax,rax
  402b10:	jle    402b17 <__sprintf_chk@plt+0x1777>
  402b12:	add    rsp,0x8
  402b16:	ret    
  402b17:	lea    rdi,[rip+0x1d54]        # 404872 <error@@Base+0x1782>
  402b1e:	xor    eax,eax
  402b20:	call   4030f0 <error@@Base>
  402b25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402b30:	endbr64 
  402b34:	push   r13
  402b36:	xor    r13d,r13d
  402b39:	push   r12
  402b3b:	mov    r12,rdx
  402b3e:	push   rbp
  402b3f:	mov    ebp,esi
  402b41:	push   rbx
  402b42:	mov    rbx,rdx
  402b45:	sub    rsp,0x18
  402b49:	test   dil,dil
  402b4c:	jne    402c48 <__sprintf_chk@plt+0x18a8>
  402b52:	cmp    ebp,0xa
  402b55:	jne    402b90 <__sprintf_chk@plt+0x17f0>
  402b57:	test   cl,cl
  402b59:	lea    rax,[rip+0x155e]        # 4040be <error@@Base+0xfce>
  402b60:	lea    rcx,[rip+0x1d22]        # 404889 <error@@Base+0x1799>
  402b67:	cmove  rcx,rax
  402b6b:	add    rsp,0x18
  402b6f:	mov    rdi,rbx
  402b72:	pop    rbx
  402b73:	pop    rbp
  402b74:	pop    r12
  402b76:	mov    rdx,0xffffffffffffffff
  402b7d:	mov    esi,0x1
  402b82:	xor    eax,eax
  402b84:	pop    r13
  402b86:	jmp    4013a0 <__sprintf_chk@plt>
  402b8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402b90:	mov    edi,ebp
  402b92:	call   401210 <utf8proc_get_property@plt>
  402b97:	cmp    ebp,0x20
  402b9a:	je     402bb6 <__sprintf_chk@plt+0x1816>
  402b9c:	movzx  eax,WORD PTR [rax]
  402b9f:	cmp    ax,0x1d
  402ba3:	ja     402c08 <__sprintf_chk@plt+0x1868>
  402ba5:	mov    edx,0x1
  402baa:	shlx   rax,rdx,rax
  402baf:	test   eax,0x207ffffe
  402bb4:	je     402c08 <__sprintf_chk@plt+0x1868>
  402bb6:	mov    edi,ebp
  402bb8:	call   4012f0 <utf8proc_category@plt>
  402bbd:	sub    eax,0x6
  402bc0:	cmp    eax,0x2
  402bc3:	ja     402be0 <__sprintf_chk@plt+0x1840>
  402bc5:	mov    rsi,rbx
  402bc8:	mov    edi,0x25cc
  402bcd:	xor    eax,eax
  402bcf:	call   402b00 <__sprintf_chk@plt+0x1760>
  402bd4:	cbw    
  402bd6:	add    r13d,eax
  402bd9:	movsx  rbx,r13w
  402bdd:	add    rbx,r12
  402be0:	mov    rsi,rbx
  402be3:	mov    edi,ebp
  402be5:	xor    eax,eax
  402be7:	call   402b00 <__sprintf_chk@plt+0x1760>
  402bec:	cbw    
  402bee:	add    r13d,eax
  402bf1:	movsx  r13,r13w
  402bf5:	mov    BYTE PTR [r12+r13*1],0x0
  402bfa:	add    rsp,0x18
  402bfe:	pop    rbx
  402bff:	pop    rbp
  402c00:	pop    r12
  402c02:	pop    r13
  402c04:	ret    
  402c05:	nop    DWORD PTR [rax]
  402c08:	mov    r8d,ebp
  402c0b:	lea    rcx,[rip+0x1c7c]        # 40488e <error@@Base+0x179e>
  402c12:	cmp    ebp,0xff
  402c18:	jbe    402c21 <__sprintf_chk@plt+0x1881>
  402c1a:	lea    rcx,[rip+0x1c74]        # 404895 <error@@Base+0x17a5>
  402c21:	add    rsp,0x18
  402c25:	mov    rdi,rbx
  402c28:	pop    rbx
  402c29:	pop    rbp
  402c2a:	pop    r12
  402c2c:	mov    rdx,0xffffffffffffffff
  402c33:	mov    esi,0x1
  402c38:	xor    eax,eax
  402c3a:	pop    r13
  402c3c:	jmp    4013a0 <__sprintf_chk@plt>
  402c41:	nop    DWORD PTR [rax+0x0]
  402c48:	mov    rsi,rdx
  402c4b:	mov    edi,0x5e
  402c50:	xor    eax,eax
  402c52:	mov    DWORD PTR [rsp+0xc],ecx
  402c56:	call   402b00 <__sprintf_chk@plt+0x1760>
  402c5b:	movsx  r13w,al
  402c60:	movsx  rax,al
  402c64:	lea    rbx,[r12+rax*1]
  402c68:	mov    ecx,DWORD PTR [rsp+0xc]
  402c6c:	jmp    402b52 <__sprintf_chk@plt+0x17b2>
  402c71:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402c7c:	nop    DWORD PTR [rax+0x0]
  402c80:	endbr64 
  402c84:	push   r12
  402c86:	push   rbp
  402c87:	mov    rbp,rdi
  402c8a:	mov    rdi,rsi
  402c8d:	push   rbx
  402c8e:	lea    rsi,[rip+0x179b]        # 404430 <error@@Base+0x1340>
  402c95:	mov    rbx,rdx
  402c98:	sub    rsp,0x20
  402c9c:	mov    rax,QWORD PTR fs:0x28
  402ca5:	mov    QWORD PTR [rsp+0x18],rax
  402caa:	xor    eax,eax
  402cac:	call   4031f0 <error@@Base+0x100>
  402cb1:	mov    r12,rax
  402cb4:	test   rbx,rbx
  402cb7:	je     402d0b <__sprintf_chk@plt+0x196b>
  402cb9:	mov    rcx,rax
  402cbc:	mov    edx,0x37
  402cc1:	mov    esi,0x1
  402cc6:	lea    rdi,[rip+0x1bd3]        # 4048a0 <error@@Base+0x17b0>
  402ccd:	call   401350 <fwrite@plt>
  402cd2:	mov    rcx,r12
  402cd5:	mov    edx,0x37
  402cda:	mov    esi,0x1
  402cdf:	lea    rdi,[rip+0x1bf2]        # 4048d8 <error@@Base+0x17e8>
  402ce6:	call   401350 <fwrite@plt>
  402ceb:	mov    rdi,r12
  402cee:	xor    eax,eax
  402cf0:	call   rbx
  402cf2:	mov    rcx,r12
  402cf5:	mov    edx,0x37
  402cfa:	mov    esi,0x1
  402cff:	lea    rdi,[rip+0x1bd2]        # 4048d8 <error@@Base+0x17e8>
  402d06:	call   401350 <fwrite@plt>
  402d0b:	mov    rbx,QWORD PTR [rbp+0x0]
  402d0f:	test   rbx,rbx
  402d12:	je     402d47 <__sprintf_chk@plt+0x19a7>
  402d14:	lea    rbp,[rsp+0xf]
  402d19:	nop    DWORD PTR [rax+0x0]
  402d20:	mov    esi,DWORD PTR [rbx+0x14]
  402d23:	movsx  edi,BYTE PTR [rbx+0x10]
  402d27:	xor    ecx,ecx
  402d29:	mov    rdx,rbp
  402d2c:	xor    eax,eax
  402d2e:	call   402b30 <__sprintf_chk@plt+0x1790>
  402d33:	mov    rsi,r12
  402d36:	mov    rdi,rbp
  402d39:	call   401290 <fputs@plt>
  402d3e:	mov    rbx,QWORD PTR [rbx+0x8]
  402d42:	test   rbx,rbx
  402d45:	jne    402d20 <__sprintf_chk@plt+0x1980>
  402d47:	xor    eax,eax
  402d49:	mov    rdi,r12
  402d4c:	call   402f60 <__sprintf_chk@plt+0x1bc0>
  402d51:	mov    rax,QWORD PTR [rsp+0x18]
  402d56:	xor    rax,QWORD PTR fs:0x28
  402d5f:	jne    402d6a <__sprintf_chk@plt+0x19ca>
  402d61:	add    rsp,0x20
  402d65:	pop    rbx
  402d66:	pop    rbp
  402d67:	pop    r12
  402d69:	ret    
  402d6a:	call   401260 <__stack_chk_fail@plt>
  402d6f:	nop
  402d70:	endbr64 
  402d74:	push   r14
  402d76:	push   r13
  402d78:	push   r12
  402d7a:	push   rbp
  402d7b:	push   rbx
  402d7c:	sub    rsp,0x10
  402d80:	mov    rax,QWORD PTR fs:0x28
  402d89:	mov    QWORD PTR [rsp+0x8],rax
  402d8e:	xor    eax,eax
  402d90:	cmp    BYTE PTR [rsi],0x0
  402d93:	mov    DWORD PTR [rsp+0x4],0x0
  402d9b:	je     402df0 <__sprintf_chk@plt+0x1a50>
  402d9d:	mov    r14,rdi
  402da0:	mov    rbp,rsi
  402da3:	lea    r13,[rsp+0x4]
  402da8:	mov    r12,0xffffffffffffffff
  402daf:	jmp    402dd4 <__sprintf_chk@plt+0x1a34>
  402db1:	nop    DWORD PTR [rax+0x0]
  402db8:	mov    edx,DWORD PTR [rsp+0x4]
  402dbc:	movsxd rbx,ebx
  402dbf:	xor    esi,esi
  402dc1:	xor    eax,eax
  402dc3:	mov    rdi,r14
  402dc6:	add    rbp,rbx
  402dc9:	call   402690 <__sprintf_chk@plt+0x12f0>
  402dce:	cmp    BYTE PTR [rbp+0x0],0x0
  402dd2:	je     402df0 <__sprintf_chk@plt+0x1a50>
  402dd4:	mov    rdx,r13
  402dd7:	mov    rsi,r12
  402dda:	mov    rdi,rbp
  402ddd:	call   4012b0 <utf8proc_iterate@plt>
  402de2:	mov    rbx,rax
  402de5:	test   eax,eax
  402de7:	jg     402db8 <__sprintf_chk@plt+0x1a18>
  402de9:	xor    eax,eax
  402deb:	jmp    402df5 <__sprintf_chk@plt+0x1a55>
  402ded:	nop    DWORD PTR [rax]
  402df0:	mov    eax,0x1
  402df5:	mov    rcx,QWORD PTR [rsp+0x8]
  402dfa:	xor    rcx,QWORD PTR fs:0x28
  402e03:	jne    402e12 <__sprintf_chk@plt+0x1a72>
  402e05:	add    rsp,0x10
  402e09:	pop    rbx
  402e0a:	pop    rbp
  402e0b:	pop    r12
  402e0d:	pop    r13
  402e0f:	pop    r14
  402e11:	ret    
  402e12:	call   401260 <__stack_chk_fail@plt>
  402e17:	nop    WORD PTR [rax+rax*1+0x0]
  402e20:	push   rbp
  402e21:	push   rbx
  402e22:	mov    ebx,edi
  402e24:	movsx  ebx,bx
  402e27:	sub    rsp,0x78
  402e2b:	mov    rax,QWORD PTR fs:0x28
  402e34:	mov    QWORD PTR [rsp+0x68],rax
  402e39:	xor    eax,eax
  402e3b:	mov    rbp,rsp
  402e3e:	call   401230 <getpid@plt>
  402e43:	mov    r9d,eax
  402e46:	sub    rsp,0x8
  402e4a:	mov    rax,0x161c960
  402e51:	push   rbx
  402e52:	mov    r8,QWORD PTR [rax]
  402e55:	lea    rcx,[rip+0x1ab4]        # 404910 <error@@Base+0x1820>
  402e5c:	mov    edx,0x64
  402e61:	mov    esi,0x1
  402e66:	mov    rdi,rbp
  402e69:	xor    eax,eax
  402e6b:	call   4013a0 <__sprintf_chk@plt>
  402e70:	mov    rdi,rbp
  402e73:	call   401380 <strdup@plt>
  402e78:	pop    rdx
  402e79:	pop    rcx
  402e7a:	mov    rdx,QWORD PTR [rsp+0x68]
  402e7f:	xor    rdx,QWORD PTR fs:0x28
  402e88:	jne    402e91 <__sprintf_chk@plt+0x1af1>
  402e8a:	add    rsp,0x78
  402e8e:	pop    rbx
  402e8f:	pop    rbp
  402e90:	ret    
  402e91:	call   401260 <__stack_chk_fail@plt>
  402e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ea0:	push   r12
  402ea2:	mov    rax,0x161c968
  402ea9:	mov    r12d,edi
  402eac:	push   rbp
  402ead:	push   rbx
  402eae:	mov    rdx,QWORD PTR [rax]
  402eb1:	test   rdx,rdx
  402eb4:	je     402eba <__sprintf_chk@plt+0x1b1a>
  402eb6:	xor    eax,eax
  402eb8:	call   rdx
  402eba:	cmp    WORD PTR [rip+0x114b18],0x0        # 5179da <error@@Base+0x1148ea>
  402ec2:	jle    402efa <__sprintf_chk@plt+0x1b5a>
  402ec4:	mov    ebx,0x1
  402ec9:	nop    DWORD PTR [rax+0x0]
  402ed0:	movsx  edi,bx
  402ed3:	xor    eax,eax
  402ed5:	call   402e20 <__sprintf_chk@plt+0x1a80>
  402eda:	mov    rdi,rax
  402edd:	mov    rbp,rax
  402ee0:	xor    eax,eax
  402ee2:	call   401200 <unlink@plt>
  402ee7:	inc    ebx
  402ee9:	mov    rdi,rbp
  402eec:	call   4011f0 <free@plt>
  402ef1:	cmp    bx,WORD PTR [rip+0x114ae2]        # 5179da <error@@Base+0x1148ea>
  402ef8:	jle    402ed0 <__sprintf_chk@plt+0x1b30>
  402efa:	mov    edi,r12d
  402efd:	call   401340 <exit@plt>
  402f02:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f0d:	nop    DWORD PTR [rax]
  402f10:	endbr64 
  402f14:	movzx  edx,BYTE PTR [rdi]
  402f17:	movzx  ecx,BYTE PTR [rsi]
  402f1a:	test   dl,dl
  402f1c:	je     402f43 <__sprintf_chk@plt+0x1ba3>
  402f1e:	cmp    cl,dl
  402f20:	jne    402f49 <__sprintf_chk@plt+0x1ba9>
  402f22:	xor    eax,eax
  402f24:	jmp    402f34 <__sprintf_chk@plt+0x1b94>
  402f26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402f30:	cmp    dl,cl
  402f32:	jne    402f49 <__sprintf_chk@plt+0x1ba9>
  402f34:	inc    rax
  402f37:	movzx  edx,BYTE PTR [rdi+rax*1]
  402f3b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  402f3f:	test   dl,dl
  402f41:	jne    402f30 <__sprintf_chk@plt+0x1b90>
  402f43:	test   cl,cl
  402f45:	je     402f58 <__sprintf_chk@plt+0x1bb8>
  402f47:	xor    edx,edx
  402f49:	cmp    dl,cl
  402f4b:	sbb    eax,eax
  402f4d:	or     eax,0x1
  402f50:	ret    
  402f51:	nop    DWORD PTR [rax+0x0]
  402f58:	xor    eax,eax
  402f5a:	ret    
  402f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f60:	endbr64 
  402f64:	mov    rax,QWORD PTR [rip+0x406d]        # 406fd8 <error@@Base+0x3ee8>
  402f6b:	cmp    QWORD PTR [rax],rdi
  402f6e:	je     402f88 <__sprintf_chk@plt+0x1be8>
  402f70:	mov    rax,QWORD PTR [rip+0x4059]        # 406fd0 <error@@Base+0x3ee0>
  402f77:	cmp    QWORD PTR [rax],rdi
  402f7a:	je     402f88 <__sprintf_chk@plt+0x1be8>
  402f7c:	jmp    401240 <fclose@plt>
  402f81:	nop    DWORD PTR [rax+0x0]
  402f88:	ret    
  402f89:	nop    DWORD PTR [rax+0x0]
  402f90:	endbr64 
  402f94:	sub    rsp,0xa8
  402f9b:	mov    rsi,rdi
  402f9e:	mov    rdx,rsp
  402fa1:	mov    edi,0x1
  402fa6:	mov    rax,QWORD PTR fs:0x28
  402faf:	mov    QWORD PTR [rsp+0x98],rax
  402fb7:	xor    eax,eax
  402fb9:	call   401300 <__xstat@plt>
  402fbe:	test   eax,eax
  402fc0:	sete   al
  402fc3:	mov    rcx,QWORD PTR [rsp+0x98]
  402fcb:	xor    rcx,QWORD PTR fs:0x28
  402fd4:	jne    402fde <__sprintf_chk@plt+0x1c3e>
  402fd6:	add    rsp,0xa8
  402fdd:	ret    
  402fde:	call   401260 <__stack_chk_fail@plt>
  402fe3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402fee:	xchg   ax,ax
  402ff0:	endbr64 
  402ff4:	movzx  eax,WORD PTR [rip+0x1149df]        # 5179da <error@@Base+0x1148ea>
  402ffb:	push   rbx
  402ffc:	lea    edi,[rax+0x1]
  402fff:	mov    WORD PTR [rip+0x1149d4],di        # 5179da <error@@Base+0x1148ea>
  403006:	xor    eax,eax
  403008:	movsx  edi,di
  40300b:	call   402e20 <__sprintf_chk@plt+0x1a80>
  403010:	mov    rbx,rax
  403013:	mov    rdi,rax
  403016:	xor    eax,eax
  403018:	call   401200 <unlink@plt>
  40301d:	mov    rax,rbx
  403020:	pop    rbx
  403021:	ret    
  403022:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40302d:	nop    DWORD PTR [rax]
  403030:	endbr64 
  403034:	push   rbx
  403035:	mov    rbx,rdi
  403038:	call   401250 <strlen@plt>
  40303d:	lea    ecx,[rax-0x1]
  403040:	movsx  rdx,cx
  403044:	test   cx,cx
  403047:	js     403073 <__sprintf_chk@plt+0x1cd3>
  403049:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  40304d:	je     403073 <__sprintf_chk@plt+0x1cd3>
  40304f:	sub    eax,0x2
  403052:	movsx  rdx,ax
  403056:	jmp    40306e <__sprintf_chk@plt+0x1cce>
  403058:	nop    DWORD PTR [rax+rax*1+0x0]
  403060:	lea    rax,[rdx-0x1]
  403064:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  403069:	je     403073 <__sprintf_chk@plt+0x1cd3>
  40306b:	mov    rdx,rax
  40306e:	test   dx,dx
  403071:	jns    403060 <__sprintf_chk@plt+0x1cc0>
  403073:	lea    rax,[rbx+rdx*1+0x1]
  403078:	pop    rbx
  403079:	ret    
  40307a:	nop    WORD PTR [rax+rax*1+0x0]
  403080:	endbr64 
  403084:	push   rax
  403085:	pop    rax
  403086:	xor    edi,edi
  403088:	xor    eax,eax
  40308a:	sub    rsp,0x8
  40308e:	call   402ea0 <__sprintf_chk@plt+0x1b00>
  403093:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40309e:	xchg   ax,ax
  4030a0:	push   rax
  4030a1:	pop    rax
  4030a2:	sub    rsp,0x8
  4030a6:	mov    rax,0x161c958
  4030ad:	mov    rdx,QWORD PTR [rax]
  4030b0:	test   rdx,rdx
  4030b3:	je     4030c0 <__sprintf_chk@plt+0x1d20>
  4030b5:	xor    eax,eax
  4030b7:	call   rdx
  4030b9:	xor    eax,eax
  4030bb:	call   403080 <__sprintf_chk@plt+0x1ce0>
  4030c0:	mov    rax,0x161c960
  4030c7:	mov    r8,rdi
  4030ca:	mov    rcx,QWORD PTR [rax]
  4030cd:	mov    rax,QWORD PTR [rip+0x3f24]        # 406ff8 <error@@Base+0x3f08>
  4030d4:	lea    rdx,[rip+0x1843]        # 40491e <error@@Base+0x182e>
  4030db:	mov    rdi,QWORD PTR [rax]
  4030de:	mov    esi,0x1
  4030e3:	xor    eax,eax
  4030e5:	call   401360 <__fprintf_chk@plt>
  4030ea:	jmp    4030b9 <__sprintf_chk@plt+0x1d19>
  4030ec:	nop    DWORD PTR [rax+0x0]

00000000004030f0 <error@@Base>:
  4030f0:	endbr64 
  4030f4:	push   rax
  4030f5:	pop    rax
  4030f6:	lea    rdx,[rip+0x1830]        # 40492d <error@@Base+0x183d>
  4030fd:	mov    esi,0x1
  403102:	sub    rsp,0x8
  403106:	mov    rax,0x161c960
  40310d:	mov    r8,rdi
  403110:	mov    rcx,QWORD PTR [rax]
  403113:	mov    rax,QWORD PTR [rip+0x3ede]        # 406ff8 <error@@Base+0x3f08>
  40311a:	mov    rdi,QWORD PTR [rax]
  40311d:	xor    eax,eax
  40311f:	call   401360 <__fprintf_chk@plt>
  403124:	mov    rax,0x407108
  40312b:	mov    edi,DWORD PTR [rax]
  40312d:	xor    eax,eax
  40312f:	call   402ea0 <__sprintf_chk@plt+0x1b00>
  403134:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40313f:	nop
  403140:	endbr64 
  403144:	sub    rsp,0x8
  403148:	call   4012c0 <calloc@plt>
  40314d:	test   rax,rax
  403150:	je     403157 <error@@Base+0x67>
  403152:	add    rsp,0x8
  403156:	ret    
  403157:	lea    rdi,[rip+0x17d7]        # 404935 <error@@Base+0x1845>
  40315e:	call   4030f0 <error@@Base>
  403163:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40316e:	xchg   ax,ax
  403170:	endbr64 
  403174:	cmp    BYTE PTR [rip+0x11485d],0x0        # 5179d8 <error@@Base+0x1148e8>
  40317b:	je     40317e <error@@Base+0x8e>
  40317d:	ret    
  40317e:	push   rax
  40317f:	lea    rdi,[rip+0x17c9]        # 40494f <error@@Base+0x185f>
  403186:	xor    eax,eax
  403188:	mov    BYTE PTR [rip+0x114849],0x1        # 5179d8 <error@@Base+0x1148e8>
  40318f:	call   4030f0 <error@@Base>
  403194:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40319f:	nop
  4031a0:	endbr64 
  4031a4:	push   rax
  4031a5:	pop    rax
  4031a6:	lea    rdx,[rip+0x17b1]        # 40495e <error@@Base+0x186e>
  4031ad:	sub    rsp,0x8
  4031b1:	mov    rax,0x161c960
  4031b8:	mov    r8,rdi
  4031bb:	mov    rcx,QWORD PTR [rax]
  4031be:	mov    rax,QWORD PTR [rip+0x3e33]        # 406ff8 <error@@Base+0x3f08>
  4031c5:	mov    r9,rsi
  4031c8:	mov    rdi,QWORD PTR [rax]
  4031cb:	mov    esi,0x1
  4031d0:	xor    eax,eax
  4031d2:	call   401360 <__fprintf_chk@plt>
  4031d7:	mov    rax,0x407108
  4031de:	mov    edi,DWORD PTR [rax]
  4031e0:	xor    eax,eax
  4031e2:	call   402ea0 <__sprintf_chk@plt+0x1b00>
  4031e7:	nop    WORD PTR [rax+rax*1+0x0]
  4031f0:	endbr64 
  4031f4:	test   rdi,rdi
  4031f7:	je     403240 <error@@Base+0x150>
  4031f9:	push   rbp
  4031fa:	mov    rbp,rsi
  4031fd:	push   rbx
  4031fe:	mov    rbx,rdi
  403201:	sub    rsp,0x8
  403205:	call   401330 <fopen@plt>
  40320a:	test   rax,rax
  40320d:	je     403220 <error@@Base+0x130>
  40320f:	add    rsp,0x8
  403213:	pop    rbx
  403214:	pop    rbp
  403215:	ret    
  403216:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403220:	cmp    BYTE PTR [rbp+0x0],0x77
  403224:	mov    rsi,rbx
  403227:	je     403250 <error@@Base+0x160>
  403229:	lea    rdi,[rip+0x1751]        # 404981 <error@@Base+0x1891>
  403230:	xor    eax,eax
  403232:	call   4031a0 <error@@Base+0xb0>
  403237:	nop    WORD PTR [rax+rax*1+0x0]
  403240:	cmp    BYTE PTR [rsi],0x72
  403243:	je     403260 <error@@Base+0x170>
  403245:	mov    rax,QWORD PTR [rip+0x3d84]        # 406fd0 <error@@Base+0x3ee0>
  40324c:	mov    rax,QWORD PTR [rax]
  40324f:	ret    
  403250:	lea    rdi,[rip+0x1714]        # 40496b <error@@Base+0x187b>
  403257:	call   4031a0 <error@@Base+0xb0>
  40325c:	nop    DWORD PTR [rax+0x0]
  403260:	mov    rax,QWORD PTR [rip+0x3d71]        # 406fd8 <error@@Base+0x3ee8>
  403267:	mov    rax,QWORD PTR [rax]
  40326a:	ret    
  40326b:	nop    DWORD PTR [rax+rax*1+0x0]
  403270:	endbr64 
  403274:	push   r15
  403276:	xor    eax,eax
  403278:	push   r14
  40327a:	mov    r14,rsi
  40327d:	push   r13
  40327f:	push   r12
  403281:	push   rbp
  403282:	push   rbx
  403283:	sub    rsp,0x38
  403287:	mov    QWORD PTR [rsp+0x8],rdi
  40328c:	mov    rdi,QWORD PTR [rsi]
  40328f:	mov    QWORD PTR [rsp+0x28],rdx
  403294:	mov    QWORD PTR [rsp+0x10],rcx
  403299:	call   403030 <__sprintf_chk@plt+0x1c90>
  40329e:	mov    rcx,0x161c960
  4032a5:	lea    rsi,[rip+0xfffffffffffffec4]        # 403170 <error@@Base+0x80>
  4032ac:	mov    edi,0x2
  4032b1:	mov    QWORD PTR [rcx],rax
  4032b4:	call   4012e0 <__sysv_signal@plt>
  4032b9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 403170 <error@@Base+0x80>
  4032c0:	mov    edi,0xf
  4032c5:	call   4012e0 <__sysv_signal@plt>
  4032ca:	mov    r9,QWORD PTR [rsp+0x8]
  4032cf:	mov    r15d,DWORD PTR [r9]
  4032d2:	cmp    r15d,0x1
  4032d6:	je     4034a0 <error@@Base+0x3b0>
  4032dc:	mov    rdx,QWORD PTR [rsp+0x10]
  4032e1:	jle    4034ac <error@@Base+0x3bc>
  4032e7:	mov    r8d,r15d
  4032ea:	xor    r12d,r12d
  4032ed:	mov    r15,rdx
  4032f0:	mov    r13d,0x1
  4032f6:	mov    ebx,0x1
  4032fb:	mov    rdx,r14
  4032fe:	jmp    40331a <error@@Base+0x22a>
  403300:	movsx  rax,r12w
  403304:	mov    QWORD PTR [rdx+rax*8],rbp
  403308:	inc    ebx
  40330a:	inc    r12d
  40330d:	movsx  r13d,bx
  403311:	cmp    r13d,r8d
  403314:	jge    403440 <error@@Base+0x350>
  40331a:	movsx  rax,bx
  40331e:	mov    rbp,QWORD PTR [rdx+rax*8]
  403322:	lea    r10,[rax*8+0x0]
  40332a:	cmp    BYTE PTR [rbp+0x0],0x2d
  40332e:	jne    403300 <error@@Base+0x210>
  403330:	movzx  r14d,BYTE PTR [rbp+0x1]
  403335:	mov    QWORD PTR [rsp+0x20],r10
  40333a:	test   r14b,r14b
  40333d:	je     403300 <error@@Base+0x210>
  40333f:	mov    rdi,rbp
  403342:	mov    DWORD PTR [rsp+0x1c],r8d
  403347:	mov    QWORD PTR [rsp+0x10],rdx
  40334c:	mov    QWORD PTR [rsp+0x8],r9
  403351:	call   401250 <strlen@plt>
  403356:	cmp    rax,0x6
  40335a:	mov    ecx,0x6
  40335f:	cmovle rcx,rax
  403363:	lea    rsi,[rip+0x162b]        # 404995 <error@@Base+0x18a5>
  40336a:	cmp    rcx,rcx
  40336d:	mov    rdi,rbp
  403370:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403372:	seta   al
  403375:	sbb    al,0x0
  403377:	test   al,al
  403379:	je     4034d0 <error@@Base+0x3e0>
  40337f:	mov    r8d,DWORD PTR [rsp+0x1c]
  403384:	inc    r13d
  403387:	xor    eax,eax
  403389:	cmp    r13d,r8d
  40338c:	mov    r9,QWORD PTR [rsp+0x8]
  403391:	mov    rdx,QWORD PTR [rsp+0x10]
  403396:	jge    4033a2 <error@@Base+0x2b2>
  403398:	mov    r10,QWORD PTR [rsp+0x20]
  40339d:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  4033a2:	test   r15,r15
  4033a5:	je     4033db <error@@Base+0x2eb>
  4033a7:	movzx  ecx,BYTE PTR [r15]
  4033ab:	test   cl,cl
  4033ad:	je     4033db <error@@Base+0x2eb>
  4033af:	cmp    r14b,cl
  4033b2:	je     4033f0 <error@@Base+0x300>
  4033b4:	xor    ecx,ecx
  4033b6:	jmp    4033c5 <error@@Base+0x2d5>
  4033b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4033c0:	cmp    r14b,dil
  4033c3:	je     4033f8 <error@@Base+0x308>
  4033c5:	inc    ecx
  4033c7:	movsx  rsi,cx
  4033cb:	lea    rsi,[rsi+rsi*2]
  4033cf:	lea    rsi,[r15+rsi*8]
  4033d3:	movzx  edi,BYTE PTR [rsi]
  4033d6:	test   dil,dil
  4033d9:	jne    4033c0 <error@@Base+0x2d0>
  4033db:	mov    rsi,rbp
  4033de:	lea    rdi,[rip+0x15b6]        # 40499b <error@@Base+0x18ab>
  4033e5:	xor    eax,eax
  4033e7:	call   4031a0 <error@@Base+0xb0>
  4033ec:	nop    DWORD PTR [rax+0x0]
  4033f0:	mov    rsi,r15
  4033f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4033f8:	mov    rcx,QWORD PTR [rsi+0x8]
  4033fc:	test   rcx,rcx
  4033ff:	je     403470 <error@@Base+0x380>
  403401:	cmp    BYTE PTR [rbp+0x2],0x0
  403405:	jne    403460 <error@@Base+0x370>
  403407:	test   rax,rax
  40340a:	je     4034b8 <error@@Base+0x3c8>
  403410:	cmp    QWORD PTR [rcx],0x0
  403414:	jne    4034e0 <error@@Base+0x3f0>
  40341a:	mov    QWORD PTR [rcx],rax
  40341d:	mov    eax,ebx
  40341f:	inc    ebx
  403421:	cmp    BYTE PTR [rbp+0x2],0x0
  403425:	jne    40330d <error@@Base+0x21d>
  40342b:	lea    ebx,[rax+0x2]
  40342e:	movsx  r13d,bx
  403432:	cmp    r13d,r8d
  403435:	jl     40331a <error@@Base+0x22a>
  40343b:	nop    DWORD PTR [rax+rax*1+0x0]
  403440:	movsx  r12d,r12w
  403444:	mov    DWORD PTR [r9],r12d
  403447:	add    rsp,0x38
  40344b:	pop    rbx
  40344c:	pop    rbp
  40344d:	pop    r12
  40344f:	pop    r13
  403451:	pop    r14
  403453:	pop    r15
  403455:	ret    
  403456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403460:	cmp    QWORD PTR [rcx],0x0
  403464:	jne    4034e0 <error@@Base+0x3f0>
  403466:	lea    rax,[rbp+0x2]
  40346a:	jmp    40341a <error@@Base+0x32a>
  40346c:	nop    DWORD PTR [rax+0x0]
  403470:	mov    rax,QWORD PTR [rsi+0x10]
  403474:	test   rax,rax
  403477:	je     4033db <error@@Base+0x2eb>
  40347d:	cmp    BYTE PTR [rbp+0x2],0x0
  403481:	jne    4033db <error@@Base+0x2eb>
  403487:	cmp    BYTE PTR [rax],0x0
  40348a:	jne    4034e0 <error@@Base+0x3f0>
  40348c:	mov    BYTE PTR [rax],0x1
  40348f:	inc    ebx
  403491:	mov    r8d,DWORD PTR [r9]
  403494:	jmp    40330d <error@@Base+0x21d>
  403499:	nop    DWORD PTR [rax+0x0]
  4034a0:	mov    rax,0x40710c
  4034a7:	cmp    BYTE PTR [rax],0x0
  4034aa:	jne    4034d0 <error@@Base+0x3e0>
  4034ac:	xor    r12d,r12d
  4034af:	jmp    403444 <error@@Base+0x354>
  4034b1:	nop    DWORD PTR [rax+0x0]
  4034b8:	mov    rax,QWORD PTR [rsi+0x10]
  4034bc:	test   rax,rax
  4034bf:	jne    403487 <error@@Base+0x397>
  4034c1:	jmp    4033db <error@@Base+0x2eb>
  4034c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034d0:	mov    rdi,QWORD PTR [rsp+0x28]
  4034d5:	xor    eax,eax
  4034d7:	call   4030a0 <__sprintf_chk@plt+0x1d00>
  4034dc:	nop    DWORD PTR [rax+0x0]
  4034e0:	mov    rsi,rbp
  4034e3:	lea    rdi,[rip+0x14c0]        # 4049aa <error@@Base+0x18ba>
  4034ea:	xor    eax,eax
  4034ec:	call   4031a0 <error@@Base+0xb0>
  4034f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4034fc:	nop    DWORD PTR [rax+0x0]
  403500:	endbr64 
  403504:	mov    rax,0x161c960
  40350b:	mov    r8,rdi
  40350e:	mov    rcx,QWORD PTR [rax]
  403511:	mov    rax,QWORD PTR [rip+0x3ae0]        # 406ff8 <error@@Base+0x3f08>
  403518:	mov    r9,rsi
  40351b:	mov    rdi,QWORD PTR [rax]
  40351e:	lea    rdx,[rip+0x1439]        # 40495e <error@@Base+0x186e>
  403525:	mov    esi,0x1
  40352a:	xor    eax,eax
  40352c:	jmp    401360 <__fprintf_chk@plt>
  403531:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40353b:	nop    DWORD PTR [rax+rax*1+0x0]
  403540:	endbr64 
  403544:	mov    QWORD PTR [rdi+0x8],0x0
  40354c:	mov    QWORD PTR [rdi],0x0
  403553:	mov    QWORD PTR [rdi+0x10],0x0
  40355b:	mov    QWORD PTR [rdi+0x18],0x0
  403563:	ret    
  403564:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40356f:	nop
  403570:	endbr64 
  403574:	push   rbx
  403575:	mov    rbx,rdi
  403578:	mov    rax,QWORD PTR [rdi]
  40357b:	mov    QWORD PTR [rsi],0x0
  403582:	mov    QWORD PTR [rsi+0x8],rax
  403586:	mov    QWORD PTR [rdi],rsi
  403589:	test   rax,rax
  40358c:	je     4035b0 <error@@Base+0x4c0>
  40358e:	mov    QWORD PTR [rax],rsi
  403591:	mov    rdi,QWORD PTR [rbx+0x10]
  403595:	test   rdi,rdi
  403598:	je     4035a7 <error@@Base+0x4b7>
  40359a:	call   4011f0 <free@plt>
  40359f:	mov    QWORD PTR [rbx+0x10],0x0
  4035a7:	inc    QWORD PTR [rbx+0x18]
  4035ab:	pop    rbx
  4035ac:	ret    
  4035ad:	nop    DWORD PTR [rax]
  4035b0:	mov    QWORD PTR [rdi+0x8],rsi
  4035b4:	jmp    403591 <error@@Base+0x4a1>
  4035b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4035c0:	endbr64 
  4035c4:	push   rbx
  4035c5:	mov    rbx,rdi
  4035c8:	mov    rax,QWORD PTR [rdi+0x8]
  4035cc:	mov    QWORD PTR [rsi+0x8],0x0
  4035d4:	mov    QWORD PTR [rsi],rax
  4035d7:	test   rax,rax
  4035da:	je     403600 <error@@Base+0x510>
  4035dc:	mov    QWORD PTR [rax+0x8],rsi
  4035e0:	mov    rdi,QWORD PTR [rbx+0x10]
  4035e4:	mov    QWORD PTR [rbx+0x8],rsi
  4035e8:	test   rdi,rdi
  4035eb:	je     4035fa <error@@Base+0x50a>
  4035ed:	call   4011f0 <free@plt>
  4035f2:	mov    QWORD PTR [rbx+0x10],0x0
  4035fa:	inc    QWORD PTR [rbx+0x18]
  4035fe:	pop    rbx
  4035ff:	ret    
  403600:	mov    QWORD PTR [rdi],rsi
  403603:	jmp    4035e0 <error@@Base+0x4f0>
  403605:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403610:	endbr64 
  403614:	mov    rax,QWORD PTR [rdx]
  403617:	push   rbx
  403618:	mov    QWORD PTR [rsi],rax
  40361b:	mov    rbx,rdi
  40361e:	mov    QWORD PTR [rsi+0x8],rdx
  403622:	test   rax,rax
  403625:	je     403650 <error@@Base+0x560>
  403627:	mov    QWORD PTR [rax+0x8],rsi
  40362b:	mov    rdi,QWORD PTR [rbx+0x10]
  40362f:	mov    QWORD PTR [rdx],rsi
  403632:	test   rdi,rdi
  403635:	je     403644 <error@@Base+0x554>
  403637:	call   4011f0 <free@plt>
  40363c:	mov    QWORD PTR [rbx+0x10],0x0
  403644:	inc    QWORD PTR [rbx+0x18]
  403648:	pop    rbx
  403649:	ret    
  40364a:	nop    WORD PTR [rax+rax*1+0x0]
  403650:	mov    QWORD PTR [rdi],rsi
  403653:	jmp    40362b <error@@Base+0x53b>
  403655:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403660:	endbr64 
  403664:	mov    rax,QWORD PTR [rsi+0x8]
  403668:	push   rbx
  403669:	mov    QWORD PTR [rdx],rsi
  40366c:	mov    QWORD PTR [rdx+0x8],rax
  403670:	mov    rbx,rdi
  403673:	mov    QWORD PTR [rsi+0x8],rdx
  403677:	test   rax,rax
  40367a:	je     4036a0 <error@@Base+0x5b0>
  40367c:	mov    QWORD PTR [rax],rdx
  40367f:	mov    rdi,QWORD PTR [rbx+0x10]
  403683:	test   rdi,rdi
  403686:	je     403695 <error@@Base+0x5a5>
  403688:	call   4011f0 <free@plt>
  40368d:	mov    QWORD PTR [rbx+0x10],0x0
  403695:	inc    QWORD PTR [rbx+0x18]
  403699:	pop    rbx
  40369a:	ret    
  40369b:	nop    DWORD PTR [rax+rax*1+0x0]
  4036a0:	mov    QWORD PTR [rdi+0x8],rdx
  4036a4:	jmp    40367f <error@@Base+0x58f>
  4036a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036b0:	endbr64 
  4036b4:	mov    rdx,QWORD PTR [rsi]
  4036b7:	push   rbx
  4036b8:	mov    rax,QWORD PTR [rsi+0x8]
  4036bc:	mov    rbx,rdi
  4036bf:	test   rdx,rdx
  4036c2:	je     403700 <error@@Base+0x610>
  4036c4:	mov    QWORD PTR [rdx+0x8],rax
  4036c8:	mov    rax,QWORD PTR [rsi+0x8]
  4036cc:	test   rax,rax
  4036cf:	je     403708 <error@@Base+0x618>
  4036d1:	mov    QWORD PTR [rax],rdx
  4036d4:	mov    rdi,QWORD PTR [rbx+0x10]
  4036d8:	mov    QWORD PTR [rsi+0x8],0x0
  4036e0:	mov    QWORD PTR [rsi],0x0
  4036e7:	test   rdi,rdi
  4036ea:	je     4036f9 <error@@Base+0x609>
  4036ec:	call   4011f0 <free@plt>
  4036f1:	mov    QWORD PTR [rbx+0x10],0x0
  4036f9:	dec    QWORD PTR [rbx+0x18]
  4036fd:	pop    rbx
  4036fe:	ret    
  4036ff:	nop
  403700:	mov    QWORD PTR [rdi],rax
  403703:	test   rax,rax
  403706:	jne    4036d1 <error@@Base+0x5e1>
  403708:	mov    QWORD PTR [rbx+0x8],rdx
  40370c:	jmp    4036d4 <error@@Base+0x5e4>
  40370e:	xchg   ax,ax
  403710:	endbr64 
  403714:	cmp    QWORD PTR [rdi+0x10],0x0
  403719:	je     403720 <error@@Base+0x630>
  40371b:	ret    
  40371c:	nop    DWORD PTR [rax+0x0]
  403720:	mov    rax,QWORD PTR [rdi+0x18]
  403724:	test   rax,rax
  403727:	je     40371b <error@@Base+0x62b>
  403729:	push   rbx
  40372a:	mov    esi,0x8
  40372f:	mov    rbx,rdi
  403732:	mov    rdi,rax
  403735:	xor    eax,eax
  403737:	call   403140 <error@@Base+0x50>
  40373c:	mov    rdx,QWORD PTR [rbx]
  40373f:	mov    QWORD PTR [rbx+0x10],rax
  403743:	test   rdx,rdx
  403746:	je     403760 <error@@Base+0x670>
  403748:	nop    DWORD PTR [rax+rax*1+0x0]
  403750:	mov    QWORD PTR [rax],rdx
  403753:	add    rax,0x8
  403757:	mov    rdx,QWORD PTR [rdx+0x8]
  40375b:	test   rdx,rdx
  40375e:	jne    403750 <error@@Base+0x660>
  403760:	pop    rbx
  403761:	ret    
  403762:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40376d:	nop    DWORD PTR [rax]
  403770:	endbr64 
  403774:	push   r12
  403776:	push   rbp
  403777:	push   rbx
  403778:	mov    rbx,QWORD PTR [rdi]
  40377b:	test   rbx,rbx
  40377e:	je     4037ae <error@@Base+0x6be>
  403780:	mov    rbp,rdi
  403783:	mov    r12,rsi
  403786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403790:	mov    rsi,rbx
  403793:	mov    rdi,rbp
  403796:	xor    eax,eax
  403798:	call   4036b0 <error@@Base+0x5c0>
  40379d:	mov    rdi,rbx
  4037a0:	xor    eax,eax
  4037a2:	call   r12
  4037a5:	mov    rbx,QWORD PTR [rbp+0x0]
  4037a9:	test   rbx,rbx
  4037ac:	jne    403790 <error@@Base+0x6a0>
  4037ae:	pop    rbx
  4037af:	pop    rbp
  4037b0:	pop    r12
  4037b2:	ret    
  4037b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037bd:	nop    DWORD PTR [rax]
  4037c0:	endbr64 
  4037c4:	push   r15
  4037c6:	lea    r15,[rip+0x3063]        # 406830 <error@@Base+0x3740>
  4037cd:	push   r14
  4037cf:	mov    r14,rdx
  4037d2:	push   r13
  4037d4:	mov    r13,rsi
  4037d7:	push   r12
  4037d9:	mov    r12d,edi
  4037dc:	push   rbp
  4037dd:	lea    rbp,[rip+0x3054]        # 406838 <error@@Base+0x3748>
  4037e4:	push   rbx
  4037e5:	sub    rbp,r15
  4037e8:	sub    rsp,0x8
  4037ec:	call   401000 <free@plt-0x1f0>
  4037f1:	sar    rbp,0x3
  4037f5:	je     403816 <error@@Base+0x726>
  4037f7:	xor    ebx,ebx
  4037f9:	nop    DWORD PTR [rax+0x0]
  403800:	mov    rdx,r14
  403803:	mov    rsi,r13
  403806:	mov    edi,r12d
  403809:	call   QWORD PTR [r15+rbx*8]
  40380d:	add    rbx,0x1
  403811:	cmp    rbp,rbx
  403814:	jne    403800 <error@@Base+0x710>
  403816:	add    rsp,0x8
  40381a:	pop    rbx
  40381b:	pop    rbp
  40381c:	pop    r12
  40381e:	pop    r13
  403820:	pop    r14
  403822:	pop    r15
  403824:	ret    
  403825:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403830:	endbr64 
  403834:	ret    

Disassembly of section .fini:

0000000000403838 <.fini>:
  403838:	endbr64 
  40383c:	sub    rsp,0x8
  403840:	add    rsp,0x8
  403844:	ret    
