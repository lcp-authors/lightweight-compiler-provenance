
../repos/prog2/0.7:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x4a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40105f:	nop

Disassembly of section .plt.sec:

0000000000401060 <__stack_chk_fail@plt>:
  401060:	endbr64 
  401064:	bnd jmp QWORD PTR [rip+0x2fad]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  40106b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401070 <printf@plt>:
  401070:	endbr64 
  401074:	bnd jmp QWORD PTR [rip+0x2fa5]        # 404020 <printf@GLIBC_2.2.5>
  40107b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401080 <__isoc99_scanf@plt>:
  401080:	endbr64 
  401084:	bnd jmp QWORD PTR [rip+0x2f9d]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  40108b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401090 <_start@@Base>:
  401090:	endbr64 
  401094:	xor    ebp,ebp
  401096:	mov    r9,rdx
  401099:	pop    rsi
  40109a:	mov    rdx,rsp
  40109d:	and    rsp,0xfffffffffffffff0
  4010a1:	push   rax
  4010a2:	push   rsp
  4010a3:	mov    r8,0x401400
  4010aa:	mov    rcx,0x401390
  4010b1:	mov    rdi,0x4012f2
  4010b8:	call   QWORD PTR [rip+0x2f32]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010be:	hlt    
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	ret    
  4010c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010cf:	nop
  4010d0:	mov    eax,0x404040
  4010d5:	cmp    rax,0x404040
  4010db:	je     4010f0 <_start@@Base+0x60>
  4010dd:	mov    eax,0x0
  4010e2:	test   rax,rax
  4010e5:	je     4010f0 <_start@@Base+0x60>
  4010e7:	mov    edi,0x404040
  4010ec:	jmp    rax
  4010ee:	xchg   ax,ax
  4010f0:	ret    
  4010f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010fc:	nop    DWORD PTR [rax+0x0]
  401100:	mov    esi,0x404040
  401105:	sub    rsi,0x404040
  40110c:	sar    rsi,0x3
  401110:	mov    rax,rsi
  401113:	shr    rax,0x3f
  401117:	add    rsi,rax
  40111a:	sar    rsi,1
  40111d:	je     401130 <_start@@Base+0xa0>
  40111f:	mov    eax,0x0
  401124:	test   rax,rax
  401127:	je     401130 <_start@@Base+0xa0>
  401129:	mov    edi,0x404040
  40112e:	jmp    rax
  401130:	ret    
  401131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40113c:	nop    DWORD PTR [rax+0x0]
  401140:	endbr64 
  401144:	cmp    BYTE PTR [rip+0x2ef5],0x0        # 404040 <__bss_start@@Base>
  40114b:	jne    401160 <_start@@Base+0xd0>
  40114d:	push   rbp
  40114e:	mov    rbp,rsp
  401151:	call   4010d0 <_start@@Base+0x40>
  401156:	mov    BYTE PTR [rip+0x2ee3],0x1        # 404040 <__bss_start@@Base>
  40115d:	pop    rbp
  40115e:	ret    
  40115f:	nop
  401160:	ret    
  401161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40116c:	nop    DWORD PTR [rax+0x0]
  401170:	endbr64 
  401174:	jmp    401100 <_start@@Base+0x70>

0000000000401176 <media@@Base>:
  401176:	endbr64 
  40117a:	push   rbp
  40117b:	mov    rbp,rsp
  40117e:	mov    QWORD PTR [rbp-0x18],rdi
  401182:	mov    DWORD PTR [rbp-0x1c],esi
  401185:	vxorps xmm0,xmm0,xmm0
  401189:	vmovss DWORD PTR [rbp-0x4],xmm0
  40118e:	mov    DWORD PTR [rbp-0x8],0x0
  401195:	jmp    401227 <media@@Base+0xb1>
  40119a:	mov    eax,DWORD PTR [rbp-0x8]
  40119d:	cdqe   
  40119f:	lea    rdx,[rax*4+0x0]
  4011a7:	mov    rax,QWORD PTR [rbp-0x18]
  4011ab:	add    rax,rdx
  4011ae:	vmovss xmm0,DWORD PTR [rax]
  4011b2:	vcvtss2sd xmm0,xmm0,xmm0
  4011b6:	vcomisd xmm0,QWORD PTR [rip+0xe7a]        # 402038 <_IO_stdin_used@@Base+0x38>
  4011be:	jb     4011fe <media@@Base+0x88>
  4011c0:	mov    eax,DWORD PTR [rbp-0x8]
  4011c3:	cdqe   
  4011c5:	lea    rdx,[rax*4+0x0]
  4011cd:	mov    rax,QWORD PTR [rbp-0x18]
  4011d1:	add    rax,rdx
  4011d4:	vmovss xmm1,DWORD PTR [rax]
  4011d8:	vmovss xmm0,DWORD PTR [rip+0xe60]        # 402040 <_IO_stdin_used@@Base+0x40>
  4011e0:	vcomiss xmm0,xmm1
  4011e4:	jbe    4011fe <media@@Base+0x88>
  4011e6:	vmovss xmm1,DWORD PTR [rbp-0x4]
  4011eb:	vmovss xmm0,DWORD PTR [rip+0xe4d]        # 402040 <_IO_stdin_used@@Base+0x40>
  4011f3:	vaddss xmm0,xmm1,xmm0
  4011f7:	vmovss DWORD PTR [rbp-0x4],xmm0
  4011fc:	jmp    401224 <media@@Base+0xae>
  4011fe:	mov    eax,DWORD PTR [rbp-0x8]
  401201:	cdqe   
  401203:	lea    rdx,[rax*4+0x0]
  40120b:	mov    rax,QWORD PTR [rbp-0x18]
  40120f:	add    rax,rdx
  401212:	vmovss xmm0,DWORD PTR [rax]
  401216:	vmovss xmm1,DWORD PTR [rbp-0x4]
  40121b:	vaddss xmm0,xmm1,xmm0
  40121f:	vmovss DWORD PTR [rbp-0x4],xmm0
  401224:	inc    DWORD PTR [rbp-0x8]
  401227:	mov    eax,DWORD PTR [rbp-0x8]
  40122a:	cmp    eax,DWORD PTR [rbp-0x1c]
  40122d:	jl     40119a <media@@Base+0x24>
  401233:	vcvtsi2ss xmm0,xmm0,DWORD PTR [rbp-0x1c]
  401238:	vmovss xmm1,DWORD PTR [rbp-0x4]
  40123d:	vdivss xmm0,xmm1,xmm0
  401241:	pop    rbp
  401242:	ret    

0000000000401243 <lernotas@@Base>:
  401243:	endbr64 
  401247:	push   rbp
  401248:	mov    rbp,rsp
  40124b:	sub    rsp,0x30
  40124f:	mov    QWORD PTR [rbp-0x28],rdi
  401253:	mov    rax,QWORD PTR fs:0x28
  40125c:	mov    QWORD PTR [rbp-0x8],rax
  401260:	xor    eax,eax
  401262:	mov    DWORD PTR [rbp-0xc],0x0
  401269:	jmp    4012b8 <lernotas@@Base+0x75>
  40126b:	vmovss xmm0,DWORD PTR [rbp-0x14]
  401270:	vcvtss2sd xmm0,xmm0,xmm0
  401274:	vmovsd xmm1,QWORD PTR [rip+0xdcc]        # 402048 <_IO_stdin_used@@Base+0x48>
  40127c:	vmulsd xmm1,xmm0,xmm1
  401280:	vmovss xmm0,DWORD PTR [rbp-0x10]
  401285:	vcvtss2sd xmm0,xmm0,xmm0
  401289:	vmovsd xmm2,QWORD PTR [rip+0xdbf]        # 402050 <_IO_stdin_used@@Base+0x50>
  401291:	vmulsd xmm0,xmm0,xmm2
  401295:	vaddsd xmm0,xmm1,xmm0
  401299:	mov    eax,DWORD PTR [rbp-0xc]
  40129c:	cdqe   
  40129e:	lea    rdx,[rax*4+0x0]
  4012a6:	mov    rax,QWORD PTR [rbp-0x28]
  4012aa:	add    rax,rdx
  4012ad:	vcvtsd2ss xmm0,xmm0,xmm0
  4012b1:	vmovss DWORD PTR [rax],xmm0
  4012b5:	inc    DWORD PTR [rbp-0xc]
  4012b8:	lea    rdx,[rbp-0x10]
  4012bc:	lea    rax,[rbp-0x14]
  4012c0:	mov    rsi,rax
  4012c3:	lea    rdi,[rip+0xd3e]        # 402008 <_IO_stdin_used@@Base+0x8>
  4012ca:	mov    eax,0x0
  4012cf:	call   401080 <__isoc99_scanf@plt>
  4012d4:	cmp    eax,0x2
  4012d7:	je     40126b <lernotas@@Base+0x28>
  4012d9:	mov    eax,DWORD PTR [rbp-0xc]
  4012dc:	mov    rcx,QWORD PTR [rbp-0x8]
  4012e0:	xor    rcx,QWORD PTR fs:0x28
  4012e9:	je     4012f0 <lernotas@@Base+0xad>
  4012eb:	call   401060 <__stack_chk_fail@plt>
  4012f0:	leave  
  4012f1:	ret    

00000000004012f2 <main@@Base>:
  4012f2:	endbr64 
  4012f6:	push   rbp
  4012f7:	mov    rbp,rsp
  4012fa:	sub    rsp,0x1b0
  401301:	mov    rax,QWORD PTR fs:0x28
  40130a:	mov    QWORD PTR [rbp-0x8],rax
  40130e:	xor    eax,eax
  401310:	lea    rdx,[rbp-0x1a0]
  401317:	mov    eax,0x0
  40131c:	mov    ecx,0x32
  401321:	mov    rdi,rdx
  401324:	rep stos QWORD PTR es:[rdi],rax
  401327:	lea    rax,[rbp-0x1a0]
  40132e:	mov    rdi,rax
  401331:	call   401243 <lernotas@@Base>
  401336:	mov    DWORD PTR [rbp-0x1a4],eax
  40133c:	mov    edx,DWORD PTR [rbp-0x1a4]
  401342:	lea    rax,[rbp-0x1a0]
  401349:	mov    esi,edx
  40134b:	mov    rdi,rax
  40134e:	call   401176 <media@@Base>
  401353:	vcvtss2sd xmm1,xmm1,xmm0
  401357:	vmovq  rax,xmm1
  40135c:	vmovq  xmm0,rax
  401361:	lea    rdi,[rip+0xca8]        # 402010 <_IO_stdin_used@@Base+0x10>
  401368:	mov    eax,0x1
  40136d:	call   401070 <printf@plt>
  401372:	mov    eax,0x0
  401377:	mov    rsi,QWORD PTR [rbp-0x8]
  40137b:	xor    rsi,QWORD PTR fs:0x28
  401384:	je     40138b <main@@Base+0x99>
  401386:	call   401060 <__stack_chk_fail@plt>
  40138b:	leave  
  40138c:	ret    
  40138d:	nop    DWORD PTR [rax]

0000000000401390 <__libc_csu_init@@Base>:
  401390:	endbr64 
  401394:	push   r15
  401396:	lea    r15,[rip+0x2a73]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  40139d:	push   r14
  40139f:	mov    r14,rdx
  4013a2:	push   r13
  4013a4:	mov    r13,rsi
  4013a7:	push   r12
  4013a9:	mov    r12d,edi
  4013ac:	push   rbp
  4013ad:	lea    rbp,[rip+0x2a64]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  4013b4:	push   rbx
  4013b5:	sub    rbp,r15
  4013b8:	sub    rsp,0x8
  4013bc:	call   401000 <__stack_chk_fail@plt-0x60>
  4013c1:	sar    rbp,0x3
  4013c5:	je     4013e6 <__libc_csu_init@@Base+0x56>
  4013c7:	xor    ebx,ebx
  4013c9:	nop    DWORD PTR [rax+0x0]
  4013d0:	mov    rdx,r14
  4013d3:	mov    rsi,r13
  4013d6:	mov    edi,r12d
  4013d9:	call   QWORD PTR [r15+rbx*8]
  4013dd:	add    rbx,0x1
  4013e1:	cmp    rbp,rbx
  4013e4:	jne    4013d0 <__libc_csu_init@@Base+0x40>
  4013e6:	add    rsp,0x8
  4013ea:	pop    rbx
  4013eb:	pop    rbp
  4013ec:	pop    r12
  4013ee:	pop    r13
  4013f0:	pop    r14
  4013f2:	pop    r15
  4013f4:	ret    
  4013f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401400 <__libc_csu_fini@@Base>:
  401400:	endbr64 
  401404:	ret    

Disassembly of section .fini:

0000000000401408 <.fini>:
  401408:	endbr64 
  40140c:	sub    rsp,0x8
  401410:	add    rsp,0x8
  401414:	ret    
