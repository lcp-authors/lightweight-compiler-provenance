
../repos/xmidt-org-trower-base64-20eecf3/tests/simple:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x6fe1]        # 408ff0 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <CU_basic_set_mode@plt-0x28a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <.plt>:
  402020:	push   QWORD PTR [rip+0x6fe2]        # 409008 <_IO_stdin_used@@Base+0x3008>
  402026:	bnd jmp QWORD PTR [rip+0x6fe3]        # 409010 <_IO_stdin_used@@Base+0x3010>
  40202d:	nop    DWORD PTR [rax]
  402030:	endbr64 
  402034:	push   0x0
  402039:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40203f:	nop
  402040:	endbr64 
  402044:	push   0x1
  402049:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40204f:	nop
  402050:	endbr64 
  402054:	push   0x2
  402059:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40205f:	nop
  402060:	endbr64 
  402064:	push   0x3
  402069:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40206f:	nop
  402070:	endbr64 
  402074:	push   0x4
  402079:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40207f:	nop
  402080:	endbr64 
  402084:	push   0x5
  402089:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40208f:	nop
  402090:	endbr64 
  402094:	push   0x6
  402099:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40209f:	nop
  4020a0:	endbr64 
  4020a4:	push   0x7
  4020a9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4020af:	nop
  4020b0:	endbr64 
  4020b4:	push   0x8
  4020b9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4020bf:	nop
  4020c0:	endbr64 
  4020c4:	push   0x9
  4020c9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4020cf:	nop
  4020d0:	endbr64 
  4020d4:	push   0xa
  4020d9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4020df:	nop
  4020e0:	endbr64 
  4020e4:	push   0xb
  4020e9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4020ef:	nop
  4020f0:	endbr64 
  4020f4:	push   0xc
  4020f9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4020ff:	nop
  402100:	endbr64 
  402104:	push   0xd
  402109:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40210f:	nop
  402110:	endbr64 
  402114:	push   0xe
  402119:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40211f:	nop
  402120:	endbr64 
  402124:	push   0xf
  402129:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40212f:	nop
  402130:	endbr64 
  402134:	push   0x10
  402139:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40213f:	nop
  402140:	endbr64 
  402144:	push   0x11
  402149:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40214f:	nop
  402150:	endbr64 
  402154:	push   0x12
  402159:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40215f:	nop
  402160:	endbr64 
  402164:	push   0x13
  402169:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40216f:	nop
  402170:	endbr64 
  402174:	push   0x14
  402179:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40217f:	nop
  402180:	endbr64 
  402184:	push   0x15
  402189:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40218f:	nop
  402190:	endbr64 
  402194:	push   0x16
  402199:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40219f:	nop
  4021a0:	endbr64 
  4021a4:	push   0x17
  4021a9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4021af:	nop
  4021b0:	endbr64 
  4021b4:	push   0x18
  4021b9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4021bf:	nop
  4021c0:	endbr64 
  4021c4:	push   0x19
  4021c9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4021cf:	nop
  4021d0:	endbr64 
  4021d4:	push   0x1a
  4021d9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4021df:	nop
  4021e0:	endbr64 
  4021e4:	push   0x1b
  4021e9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4021ef:	nop
  4021f0:	endbr64 
  4021f4:	push   0x1c
  4021f9:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  4021ff:	nop
  402200:	endbr64 
  402204:	push   0x1d
  402209:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40220f:	nop
  402210:	endbr64 
  402214:	push   0x1e
  402219:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40221f:	nop
  402220:	endbr64 
  402224:	push   0x1f
  402229:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40222f:	nop
  402230:	endbr64 
  402234:	push   0x20
  402239:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40223f:	nop
  402240:	endbr64 
  402244:	push   0x21
  402249:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40224f:	nop
  402250:	endbr64 
  402254:	push   0x22
  402259:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40225f:	nop
  402260:	endbr64 
  402264:	push   0x23
  402269:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40226f:	nop
  402270:	endbr64 
  402274:	push   0x24
  402279:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40227f:	nop
  402280:	endbr64 
  402284:	push   0x25
  402289:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40228f:	nop
  402290:	endbr64 
  402294:	push   0x26
  402299:	bnd jmp 402020 <CU_basic_set_mode@plt-0x280>
  40229f:	nop

Disassembly of section .plt.sec:

00000000004022a0 <CU_basic_set_mode@plt>:
  4022a0:	endbr64 
  4022a4:	bnd jmp QWORD PTR [rip+0x6d6d]        # 409018 <CU_basic_set_mode>
  4022ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022b0 <getenv@plt>:
  4022b0:	endbr64 
  4022b4:	bnd jmp QWORD PTR [rip+0x6d65]        # 409020 <getenv@GLIBC_2.2.5>
  4022bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022c0 <free@plt>:
  4022c0:	endbr64 
  4022c4:	bnd jmp QWORD PTR [rip+0x6d5d]        # 409028 <free@GLIBC_2.2.5>
  4022cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022d0 <CU_initialize_registry@plt>:
  4022d0:	endbr64 
  4022d4:	bnd jmp QWORD PTR [rip+0x6d55]        # 409030 <CU_initialize_registry>
  4022db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022e0 <putchar@plt>:
  4022e0:	endbr64 
  4022e4:	bnd jmp QWORD PTR [rip+0x6d4d]        # 409038 <putchar@GLIBC_2.2.5>
  4022eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004022f0 <__vfprintf_chk@plt>:
  4022f0:	endbr64 
  4022f4:	bnd jmp QWORD PTR [rip+0x6d45]        # 409040 <__vfprintf_chk@GLIBC_2.3.4>
  4022fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402300 <abort@plt>:
  402300:	endbr64 
  402304:	bnd jmp QWORD PTR [rip+0x6d3d]        # 409048 <abort@GLIBC_2.2.5>
  40230b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402310 <__errno_location@plt>:
  402310:	endbr64 
  402314:	bnd jmp QWORD PTR [rip+0x6d35]        # 409050 <__errno_location@GLIBC_2.2.5>
  40231b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402320 <strcpy@plt>:
  402320:	endbr64 
  402324:	bnd jmp QWORD PTR [rip+0x6d2d]        # 409058 <strcpy@GLIBC_2.2.5>
  40232b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402330 <mkdir@plt>:
  402330:	endbr64 
  402334:	bnd jmp QWORD PTR [rip+0x6d25]        # 409060 <mkdir@GLIBC_2.2.5>
  40233b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402340 <puts@plt>:
  402340:	endbr64 
  402344:	bnd jmp QWORD PTR [rip+0x6d1d]        # 409068 <puts@GLIBC_2.2.5>
  40234b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402350 <CU_get_number_of_tests_failed@plt>:
  402350:	endbr64 
  402354:	bnd jmp QWORD PTR [rip+0x6d15]        # 409070 <CU_get_number_of_tests_failed>
  40235b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402360 <fread@plt>:
  402360:	endbr64 
  402364:	bnd jmp QWORD PTR [rip+0x6d0d]        # 409078 <fread@GLIBC_2.2.5>
  40236b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402370 <CU_cleanup_registry@plt>:
  402370:	endbr64 
  402374:	bnd jmp QWORD PTR [rip+0x6d05]        # 409080 <CU_cleanup_registry>
  40237b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402380 <fcntl@plt>:
  402380:	endbr64 
  402384:	bnd jmp QWORD PTR [rip+0x6cfd]        # 409088 <fcntl@GLIBC_2.2.5>
  40238b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402390 <CU_add_suite@plt>:
  402390:	endbr64 
  402394:	bnd jmp QWORD PTR [rip+0x6cf5]        # 409090 <CU_add_suite>
  40239b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023a0 <CU_basic_run_tests@plt>:
  4023a0:	endbr64 
  4023a4:	bnd jmp QWORD PTR [rip+0x6ced]        # 409098 <CU_basic_run_tests>
  4023ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023b0 <getpid@plt>:
  4023b0:	endbr64 
  4023b4:	bnd jmp QWORD PTR [rip+0x6ce5]        # 4090a0 <getpid@GLIBC_2.2.5>
  4023bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023c0 <CU_basic_show_failures@plt>:
  4023c0:	endbr64 
  4023c4:	bnd jmp QWORD PTR [rip+0x6cdd]        # 4090a8 <CU_basic_show_failures>
  4023cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023d0 <fclose@plt>:
  4023d0:	endbr64 
  4023d4:	bnd jmp QWORD PTR [rip+0x6cd5]        # 4090b0 <fclose@GLIBC_2.2.5>
  4023db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023e0 <strlen@plt>:
  4023e0:	endbr64 
  4023e4:	bnd jmp QWORD PTR [rip+0x6ccd]        # 4090b8 <strlen@GLIBC_2.2.5>
  4023eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004023f0 <__stack_chk_fail@plt>:
  4023f0:	endbr64 
  4023f4:	bnd jmp QWORD PTR [rip+0x6cc5]        # 4090c0 <__stack_chk_fail@GLIBC_2.4>
  4023fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402400 <setbuf@plt>:
  402400:	endbr64 
  402404:	bnd jmp QWORD PTR [rip+0x6cbd]        # 4090c8 <setbuf@GLIBC_2.2.5>
  40240b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402410 <printf@plt>:
  402410:	endbr64 
  402414:	bnd jmp QWORD PTR [rip+0x6cb5]        # 4090d0 <printf@GLIBC_2.2.5>
  40241b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402420 <close@plt>:
  402420:	endbr64 
  402424:	bnd jmp QWORD PTR [rip+0x6cad]        # 4090d8 <close@GLIBC_2.2.5>
  40242b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402430 <ftell@plt>:
  402430:	endbr64 
  402434:	bnd jmp QWORD PTR [rip+0x6ca5]        # 4090e0 <ftell@GLIBC_2.2.5>
  40243b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402440 <CU_assertImplementation@plt>:
  402440:	endbr64 
  402444:	bnd jmp QWORD PTR [rip+0x6c9d]        # 4090e8 <CU_assertImplementation>
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402450 <strtol@plt>:
  402450:	endbr64 
  402454:	bnd jmp QWORD PTR [rip+0x6c95]        # 4090f0 <strtol@GLIBC_2.2.5>
  40245b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402460 <memcpy@plt>:
  402460:	endbr64 
  402464:	bnd jmp QWORD PTR [rip+0x6c8d]        # 4090f8 <memcpy@GLIBC_2.14>
  40246b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402470 <malloc@plt>:
  402470:	endbr64 
  402474:	bnd jmp QWORD PTR [rip+0x6c85]        # 409100 <malloc@GLIBC_2.2.5>
  40247b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402480 <fseek@plt>:
  402480:	endbr64 
  402484:	bnd jmp QWORD PTR [rip+0x6c7d]        # 409108 <fseek@GLIBC_2.2.5>
  40248b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402490 <CU_add_test@plt>:
  402490:	endbr64 
  402494:	bnd jmp QWORD PTR [rip+0x6c75]        # 409110 <CU_add_test>
  40249b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024a0 <fdopen@plt>:
  4024a0:	endbr64 
  4024a4:	bnd jmp QWORD PTR [rip+0x6c6d]        # 409118 <fdopen@GLIBC_2.2.5>
  4024ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024b0 <open@plt>:
  4024b0:	endbr64 
  4024b4:	bnd jmp QWORD PTR [rip+0x6c65]        # 409120 <open@GLIBC_2.2.5>
  4024bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024c0 <access@plt>:
  4024c0:	endbr64 
  4024c4:	bnd jmp QWORD PTR [rip+0x6c5d]        # 409128 <access@GLIBC_2.2.5>
  4024cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024d0 <fopen@plt>:
  4024d0:	endbr64 
  4024d4:	bnd jmp QWORD PTR [rip+0x6c55]        # 409130 <fopen@GLIBC_2.2.5>
  4024db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024e0 <CU_get_failure_list@plt>:
  4024e0:	endbr64 
  4024e4:	bnd jmp QWORD PTR [rip+0x6c4d]        # 409138 <CU_get_failure_list>
  4024eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004024f0 <fwrite@plt>:
  4024f0:	endbr64 
  4024f4:	bnd jmp QWORD PTR [rip+0x6c45]        # 409140 <fwrite@GLIBC_2.2.5>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402500 <__fprintf_chk@plt>:
  402500:	endbr64 
  402504:	bnd jmp QWORD PTR [rip+0x6c3d]        # 409148 <__fprintf_chk@GLIBC_2.3.4>
  40250b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000402510 <_start@@Base-0x10>:
  402510:	call   402300 <abort@plt>
  402515:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40251f:	nop

0000000000402520 <_start@@Base>:
  402520:	endbr64 
  402524:	xor    ebp,ebp
  402526:	mov    r9,rdx
  402529:	pop    rsi
  40252a:	mov    rdx,rsp
  40252d:	and    rsp,0xfffffffffffffff0
  402531:	push   rax
  402532:	push   rsp
  402533:	mov    r8,0x405e30
  40253a:	mov    rcx,0x405dc0
  402541:	mov    rdi,0x40342f
  402548:	call   QWORD PTR [rip+0x6a9a]        # 408fe8 <__libc_start_main@GLIBC_2.2.5>
  40254e:	hlt    
  40254f:	nop
  402550:	endbr64 
  402554:	ret    
  402555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40255f:	nop
  402560:	mov    eax,0x4096b0
  402565:	cmp    rax,0x4096b0
  40256b:	je     402580 <_start@@Base+0x60>
  40256d:	mov    eax,0x0
  402572:	test   rax,rax
  402575:	je     402580 <_start@@Base+0x60>
  402577:	mov    edi,0x4096b0
  40257c:	jmp    rax
  40257e:	xchg   ax,ax
  402580:	ret    
  402581:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40258c:	nop    DWORD PTR [rax+0x0]
  402590:	mov    esi,0x4096b0
  402595:	sub    rsi,0x4096b0
  40259c:	sar    rsi,0x3
  4025a0:	mov    rax,rsi
  4025a3:	shr    rax,0x3f
  4025a7:	add    rsi,rax
  4025aa:	sar    rsi,1
  4025ad:	je     4025c0 <_start@@Base+0xa0>
  4025af:	mov    eax,0x0
  4025b4:	test   rax,rax
  4025b7:	je     4025c0 <_start@@Base+0xa0>
  4025b9:	mov    edi,0x4096b0
  4025be:	jmp    rax
  4025c0:	ret    
  4025c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025cc:	nop    DWORD PTR [rax+0x0]
  4025d0:	endbr64 
  4025d4:	cmp    BYTE PTR [rip+0x70e5],0x0        # 4096c0 <__bss_start@@Base+0x10>
  4025db:	jne    4025f0 <_start@@Base+0xd0>
  4025dd:	push   rbp
  4025de:	mov    rbp,rsp
  4025e1:	call   402560 <_start@@Base+0x40>
  4025e6:	mov    BYTE PTR [rip+0x70d3],0x1        # 4096c0 <__bss_start@@Base+0x10>
  4025ed:	pop    rbp
  4025ee:	ret    
  4025ef:	nop
  4025f0:	ret    
  4025f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025fc:	nop    DWORD PTR [rax+0x0]
  402600:	endbr64 
  402604:	jmp    402590 <_start@@Base+0x70>

0000000000402606 <test_encoded_size@@Base>:
  402606:	endbr64 
  40260a:	push   rbp
  40260b:	mov    rbp,rsp
  40260e:	mov    rax,QWORD PTR [rip+0x736b]        # 409980 <__bss_start@@Base+0x2d0>
  402615:	inc    rax
  402618:	mov    QWORD PTR [rip+0x7361],rax        # 409980 <__bss_start@@Base+0x2d0>
  40261f:	mov    edi,0x0
  402624:	call   4035fc <b64_get_encoded_buffer_size@@Base>
  402629:	mov    rdx,QWORD PTR [rip+0x7358]        # 409988 <__bss_start@@Base+0x2d8>
  402630:	inc    rdx
  402633:	mov    QWORD PTR [rip+0x734e],rdx        # 409988 <__bss_start@@Base+0x2d8>
  40263a:	test   rax,rax
  40263d:	sete   al
  402640:	movzx  eax,al
  402643:	mov    r9d,0x0
  402649:	lea    r8,[rip+0x39b8]        # 406008 <_IO_stdin_used@@Base+0x8>
  402650:	lea    rcx,[rip+0x39b9]        # 406010 <_IO_stdin_used@@Base+0x10>
  402657:	lea    rdx,[rip+0x3a12]        # 406070 <_IO_stdin_used@@Base+0x70>
  40265e:	mov    esi,0x1d
  402663:	mov    edi,eax
  402665:	call   402440 <CU_assertImplementation@plt>
  40266a:	mov    rax,QWORD PTR [rip+0x731f]        # 409990 <__bss_start@@Base+0x2e0>
  402671:	inc    rax
  402674:	mov    QWORD PTR [rip+0x7315],rax        # 409990 <__bss_start@@Base+0x2e0>
  40267b:	mov    edi,0x1
  402680:	call   4035fc <b64_get_encoded_buffer_size@@Base>
  402685:	mov    rdx,rax
  402688:	mov    rax,QWORD PTR [rip+0x7309]        # 409998 <__bss_start@@Base+0x2e8>
  40268f:	inc    rax
  402692:	mov    QWORD PTR [rip+0x72ff],rax        # 409998 <__bss_start@@Base+0x2e8>
  402699:	cmp    rdx,0x4
  40269d:	sete   al
  4026a0:	movzx  eax,al
  4026a3:	mov    r9d,0x0
  4026a9:	lea    r8,[rip+0x3958]        # 406008 <_IO_stdin_used@@Base+0x8>
  4026b0:	lea    rcx,[rip+0x3959]        # 406010 <_IO_stdin_used@@Base+0x10>
  4026b7:	lea    rdx,[rip+0x39ea]        # 4060a8 <_IO_stdin_used@@Base+0xa8>
  4026be:	mov    esi,0x1e
  4026c3:	mov    edi,eax
  4026c5:	call   402440 <CU_assertImplementation@plt>
  4026ca:	mov    rax,QWORD PTR [rip+0x72cf]        # 4099a0 <__bss_start@@Base+0x2f0>
  4026d1:	inc    rax
  4026d4:	mov    QWORD PTR [rip+0x72c5],rax        # 4099a0 <__bss_start@@Base+0x2f0>
  4026db:	mov    edi,0x2
  4026e0:	call   4035fc <b64_get_encoded_buffer_size@@Base>
  4026e5:	mov    rdx,rax
  4026e8:	mov    rax,QWORD PTR [rip+0x72b9]        # 4099a8 <__bss_start@@Base+0x2f8>
  4026ef:	inc    rax
  4026f2:	mov    QWORD PTR [rip+0x72af],rax        # 4099a8 <__bss_start@@Base+0x2f8>
  4026f9:	cmp    rdx,0x4
  4026fd:	sete   al
  402700:	movzx  eax,al
  402703:	mov    r9d,0x0
  402709:	lea    r8,[rip+0x38f8]        # 406008 <_IO_stdin_used@@Base+0x8>
  402710:	lea    rcx,[rip+0x38f9]        # 406010 <_IO_stdin_used@@Base+0x10>
  402717:	lea    rdx,[rip+0x39c2]        # 4060e0 <_IO_stdin_used@@Base+0xe0>
  40271e:	mov    esi,0x1f
  402723:	mov    edi,eax
  402725:	call   402440 <CU_assertImplementation@plt>
  40272a:	mov    rax,QWORD PTR [rip+0x727f]        # 4099b0 <__bss_start@@Base+0x300>
  402731:	inc    rax
  402734:	mov    QWORD PTR [rip+0x7275],rax        # 4099b0 <__bss_start@@Base+0x300>
  40273b:	mov    edi,0x3
  402740:	call   4035fc <b64_get_encoded_buffer_size@@Base>
  402745:	mov    rdx,rax
  402748:	mov    rax,QWORD PTR [rip+0x7269]        # 4099b8 <__bss_start@@Base+0x308>
  40274f:	inc    rax
  402752:	mov    QWORD PTR [rip+0x725f],rax        # 4099b8 <__bss_start@@Base+0x308>
  402759:	cmp    rdx,0x4
  40275d:	sete   al
  402760:	movzx  eax,al
  402763:	mov    r9d,0x0
  402769:	lea    r8,[rip+0x3898]        # 406008 <_IO_stdin_used@@Base+0x8>
  402770:	lea    rcx,[rip+0x3899]        # 406010 <_IO_stdin_used@@Base+0x10>
  402777:	lea    rdx,[rip+0x399a]        # 406118 <_IO_stdin_used@@Base+0x118>
  40277e:	mov    esi,0x20
  402783:	mov    edi,eax
  402785:	call   402440 <CU_assertImplementation@plt>
  40278a:	mov    rax,QWORD PTR [rip+0x722f]        # 4099c0 <__bss_start@@Base+0x310>
  402791:	inc    rax
  402794:	mov    QWORD PTR [rip+0x7225],rax        # 4099c0 <__bss_start@@Base+0x310>
  40279b:	mov    edi,0x4
  4027a0:	call   4035fc <b64_get_encoded_buffer_size@@Base>
  4027a5:	mov    rdx,rax
  4027a8:	mov    rax,QWORD PTR [rip+0x7219]        # 4099c8 <__bss_start@@Base+0x318>
  4027af:	inc    rax
  4027b2:	mov    QWORD PTR [rip+0x720f],rax        # 4099c8 <__bss_start@@Base+0x318>
  4027b9:	cmp    rdx,0x8
  4027bd:	sete   al
  4027c0:	movzx  eax,al
  4027c3:	mov    r9d,0x0
  4027c9:	lea    r8,[rip+0x3838]        # 406008 <_IO_stdin_used@@Base+0x8>
  4027d0:	lea    rcx,[rip+0x3839]        # 406010 <_IO_stdin_used@@Base+0x10>
  4027d7:	lea    rdx,[rip+0x3972]        # 406150 <_IO_stdin_used@@Base+0x150>
  4027de:	mov    esi,0x21
  4027e3:	mov    edi,eax
  4027e5:	call   402440 <CU_assertImplementation@plt>
  4027ea:	mov    rax,QWORD PTR [rip+0x71df]        # 4099d0 <__bss_start@@Base+0x320>
  4027f1:	inc    rax
  4027f4:	mov    QWORD PTR [rip+0x71d5],rax        # 4099d0 <__bss_start@@Base+0x320>
  4027fb:	mov    edi,0x12c
  402800:	call   4035fc <b64_get_encoded_buffer_size@@Base>
  402805:	mov    rdx,rax
  402808:	mov    rax,QWORD PTR [rip+0x71c9]        # 4099d8 <__bss_start@@Base+0x328>
  40280f:	inc    rax
  402812:	mov    QWORD PTR [rip+0x71bf],rax        # 4099d8 <__bss_start@@Base+0x328>
  402819:	cmp    rdx,0x190
  402820:	sete   al
  402823:	movzx  eax,al
  402826:	mov    r9d,0x0
  40282c:	lea    r8,[rip+0x37d5]        # 406008 <_IO_stdin_used@@Base+0x8>
  402833:	lea    rcx,[rip+0x37d6]        # 406010 <_IO_stdin_used@@Base+0x10>
  40283a:	lea    rdx,[rip+0x3947]        # 406188 <_IO_stdin_used@@Base+0x188>
  402841:	mov    esi,0x22
  402846:	mov    edi,eax
  402848:	call   402440 <CU_assertImplementation@plt>
  40284d:	mov    rax,QWORD PTR [rip+0x718c]        # 4099e0 <__bss_start@@Base+0x330>
  402854:	inc    rax
  402857:	mov    QWORD PTR [rip+0x7182],rax        # 4099e0 <__bss_start@@Base+0x330>
  40285e:	nop
  40285f:	pop    rbp
  402860:	ret    

0000000000402861 <test_decoded_size@@Base>:
  402861:	endbr64 
  402865:	push   rbp
  402866:	mov    rbp,rsp
  402869:	mov    rax,QWORD PTR [rip+0x7090]        # 409900 <__bss_start@@Base+0x250>
  402870:	inc    rax
  402873:	mov    QWORD PTR [rip+0x7086],rax        # 409900 <__bss_start@@Base+0x250>
  40287a:	mov    edi,0x0
  40287f:	call   4038ae <b64_get_decoded_buffer_size@@Base>
  402884:	mov    rdx,QWORD PTR [rip+0x707d]        # 409908 <__bss_start@@Base+0x258>
  40288b:	inc    rdx
  40288e:	mov    QWORD PTR [rip+0x7073],rdx        # 409908 <__bss_start@@Base+0x258>
  402895:	test   rax,rax
  402898:	sete   al
  40289b:	movzx  eax,al
  40289e:	mov    r9d,0x0
  4028a4:	lea    r8,[rip+0x375d]        # 406008 <_IO_stdin_used@@Base+0x8>
  4028ab:	lea    rcx,[rip+0x375e]        # 406010 <_IO_stdin_used@@Base+0x10>
  4028b2:	lea    rdx,[rip+0x3907]        # 4061c0 <_IO_stdin_used@@Base+0x1c0>
  4028b9:	mov    esi,0x26
  4028be:	mov    edi,eax
  4028c0:	call   402440 <CU_assertImplementation@plt>
  4028c5:	mov    rax,QWORD PTR [rip+0x7044]        # 409910 <__bss_start@@Base+0x260>
  4028cc:	inc    rax
  4028cf:	mov    QWORD PTR [rip+0x703a],rax        # 409910 <__bss_start@@Base+0x260>
  4028d6:	mov    edi,0x1
  4028db:	call   4038ae <b64_get_decoded_buffer_size@@Base>
  4028e0:	mov    rdx,QWORD PTR [rip+0x7031]        # 409918 <__bss_start@@Base+0x268>
  4028e7:	inc    rdx
  4028ea:	mov    QWORD PTR [rip+0x7027],rdx        # 409918 <__bss_start@@Base+0x268>
  4028f1:	test   rax,rax
  4028f4:	sete   al
  4028f7:	movzx  eax,al
  4028fa:	mov    r9d,0x0
  402900:	lea    r8,[rip+0x3701]        # 406008 <_IO_stdin_used@@Base+0x8>
  402907:	lea    rcx,[rip+0x3702]        # 406010 <_IO_stdin_used@@Base+0x10>
  40290e:	lea    rdx,[rip+0x38e3]        # 4061f8 <_IO_stdin_used@@Base+0x1f8>
  402915:	mov    esi,0x27
  40291a:	mov    edi,eax
  40291c:	call   402440 <CU_assertImplementation@plt>
  402921:	mov    rax,QWORD PTR [rip+0x6ff8]        # 409920 <__bss_start@@Base+0x270>
  402928:	inc    rax
  40292b:	mov    QWORD PTR [rip+0x6fee],rax        # 409920 <__bss_start@@Base+0x270>
  402932:	mov    edi,0x2
  402937:	call   4038ae <b64_get_decoded_buffer_size@@Base>
  40293c:	mov    rdx,QWORD PTR [rip+0x6fe5]        # 409928 <__bss_start@@Base+0x278>
  402943:	inc    rdx
  402946:	mov    QWORD PTR [rip+0x6fdb],rdx        # 409928 <__bss_start@@Base+0x278>
  40294d:	test   rax,rax
  402950:	sete   al
  402953:	movzx  eax,al
  402956:	mov    r9d,0x0
  40295c:	lea    r8,[rip+0x36a5]        # 406008 <_IO_stdin_used@@Base+0x8>
  402963:	lea    rcx,[rip+0x36a6]        # 406010 <_IO_stdin_used@@Base+0x10>
  40296a:	lea    rdx,[rip+0x38bf]        # 406230 <_IO_stdin_used@@Base+0x230>
  402971:	mov    esi,0x28
  402976:	mov    edi,eax
  402978:	call   402440 <CU_assertImplementation@plt>
  40297d:	mov    rax,QWORD PTR [rip+0x6fac]        # 409930 <__bss_start@@Base+0x280>
  402984:	inc    rax
  402987:	mov    QWORD PTR [rip+0x6fa2],rax        # 409930 <__bss_start@@Base+0x280>
  40298e:	mov    edi,0x3
  402993:	call   4038ae <b64_get_decoded_buffer_size@@Base>
  402998:	mov    rdx,QWORD PTR [rip+0x6f99]        # 409938 <__bss_start@@Base+0x288>
  40299f:	inc    rdx
  4029a2:	mov    QWORD PTR [rip+0x6f8f],rdx        # 409938 <__bss_start@@Base+0x288>
  4029a9:	test   rax,rax
  4029ac:	sete   al
  4029af:	movzx  eax,al
  4029b2:	mov    r9d,0x0
  4029b8:	lea    r8,[rip+0x3649]        # 406008 <_IO_stdin_used@@Base+0x8>
  4029bf:	lea    rcx,[rip+0x364a]        # 406010 <_IO_stdin_used@@Base+0x10>
  4029c6:	lea    rdx,[rip+0x389b]        # 406268 <_IO_stdin_used@@Base+0x268>
  4029cd:	mov    esi,0x29
  4029d2:	mov    edi,eax
  4029d4:	call   402440 <CU_assertImplementation@plt>
  4029d9:	mov    rax,QWORD PTR [rip+0x6f60]        # 409940 <__bss_start@@Base+0x290>
  4029e0:	inc    rax
  4029e3:	mov    QWORD PTR [rip+0x6f56],rax        # 409940 <__bss_start@@Base+0x290>
  4029ea:	mov    edi,0x4
  4029ef:	call   4038ae <b64_get_decoded_buffer_size@@Base>
  4029f4:	mov    rdx,rax
  4029f7:	mov    rax,QWORD PTR [rip+0x6f4a]        # 409948 <__bss_start@@Base+0x298>
  4029fe:	inc    rax
  402a01:	mov    QWORD PTR [rip+0x6f40],rax        # 409948 <__bss_start@@Base+0x298>
  402a08:	cmp    rdx,0x3
  402a0c:	sete   al
  402a0f:	movzx  eax,al
  402a12:	mov    r9d,0x0
  402a18:	lea    r8,[rip+0x35e9]        # 406008 <_IO_stdin_used@@Base+0x8>
  402a1f:	lea    rcx,[rip+0x35ea]        # 406010 <_IO_stdin_used@@Base+0x10>
  402a26:	lea    rdx,[rip+0x3873]        # 4062a0 <_IO_stdin_used@@Base+0x2a0>
  402a2d:	mov    esi,0x2a
  402a32:	mov    edi,eax
  402a34:	call   402440 <CU_assertImplementation@plt>
  402a39:	mov    rax,QWORD PTR [rip+0x6f10]        # 409950 <__bss_start@@Base+0x2a0>
  402a40:	inc    rax
  402a43:	mov    QWORD PTR [rip+0x6f06],rax        # 409950 <__bss_start@@Base+0x2a0>
  402a4a:	mov    edi,0x8
  402a4f:	call   4038ae <b64_get_decoded_buffer_size@@Base>
  402a54:	mov    rdx,rax
  402a57:	mov    rax,QWORD PTR [rip+0x6efa]        # 409958 <__bss_start@@Base+0x2a8>
  402a5e:	inc    rax
  402a61:	mov    QWORD PTR [rip+0x6ef0],rax        # 409958 <__bss_start@@Base+0x2a8>
  402a68:	cmp    rdx,0x6
  402a6c:	sete   al
  402a6f:	movzx  eax,al
  402a72:	mov    r9d,0x0
  402a78:	lea    r8,[rip+0x3589]        # 406008 <_IO_stdin_used@@Base+0x8>
  402a7f:	lea    rcx,[rip+0x358a]        # 406010 <_IO_stdin_used@@Base+0x10>
  402a86:	lea    rdx,[rip+0x384b]        # 4062d8 <_IO_stdin_used@@Base+0x2d8>
  402a8d:	mov    esi,0x2b
  402a92:	mov    edi,eax
  402a94:	call   402440 <CU_assertImplementation@plt>
  402a99:	mov    rax,QWORD PTR [rip+0x6ec0]        # 409960 <__bss_start@@Base+0x2b0>
  402aa0:	inc    rax
  402aa3:	mov    QWORD PTR [rip+0x6eb6],rax        # 409960 <__bss_start@@Base+0x2b0>
  402aaa:	nop
  402aab:	pop    rbp
  402aac:	ret    

0000000000402aad <test_encode@@Base>:
  402aad:	endbr64 
  402ab1:	push   rbp
  402ab2:	mov    rbp,rsp
  402ab5:	mov    rax,QWORD PTR [rip+0x6de4]        # 4098a0 <__bss_start@@Base+0x1f0>
  402abc:	inc    rax
  402abf:	mov    QWORD PTR [rip+0x6dda],rax        # 4098a0 <__bss_start@@Base+0x1f0>
  402ac6:	mov    ecx,0xc
  402acb:	lea    rdx,[rip+0x3838]        # 40630a <_IO_stdin_used@@Base+0x30a>
  402ad2:	mov    esi,0x8
  402ad7:	lea    rdi,[rip+0x3839]        # 406317 <_IO_stdin_used@@Base+0x317>
  402ade:	call   402c89 <test_encoded_stuff@@Base>
  402ae3:	mov    edx,eax
  402ae5:	mov    rax,QWORD PTR [rip+0x6dbc]        # 4098a8 <__bss_start@@Base+0x1f8>
  402aec:	inc    rax
  402aef:	mov    QWORD PTR [rip+0x6db2],rax        # 4098a8 <__bss_start@@Base+0x1f8>
  402af6:	mov    eax,edx
  402af8:	xor    eax,0x1
  402afb:	movzx  eax,al
  402afe:	mov    r9d,0x0
  402b04:	lea    r8,[rip+0x34fd]        # 406008 <_IO_stdin_used@@Base+0x8>
  402b0b:	lea    rcx,[rip+0x34fe]        # 406010 <_IO_stdin_used@@Base+0x10>
  402b12:	lea    rdx,[rip+0x3807]        # 406320 <_IO_stdin_used@@Base+0x320>
  402b19:	mov    esi,0x2f
  402b1e:	mov    edi,eax
  402b20:	call   402440 <CU_assertImplementation@plt>
  402b25:	mov    rax,QWORD PTR [rip+0x6d84]        # 4098b0 <__bss_start@@Base+0x200>
  402b2c:	inc    rax
  402b2f:	mov    QWORD PTR [rip+0x6d7a],rax        # 4098b0 <__bss_start@@Base+0x200>
  402b36:	mov    ecx,0xc
  402b3b:	lea    rdx,[rip+0x383b]        # 40637d <_IO_stdin_used@@Base+0x37d>
  402b42:	mov    esi,0x7
  402b47:	lea    rdi,[rip+0x383c]        # 40638a <_IO_stdin_used@@Base+0x38a>
  402b4e:	call   402c89 <test_encoded_stuff@@Base>
  402b53:	mov    edx,eax
  402b55:	mov    rax,QWORD PTR [rip+0x6d5c]        # 4098b8 <__bss_start@@Base+0x208>
  402b5c:	inc    rax
  402b5f:	mov    QWORD PTR [rip+0x6d52],rax        # 4098b8 <__bss_start@@Base+0x208>
  402b66:	mov    eax,edx
  402b68:	xor    eax,0x1
  402b6b:	movzx  eax,al
  402b6e:	mov    r9d,0x0
  402b74:	lea    r8,[rip+0x348d]        # 406008 <_IO_stdin_used@@Base+0x8>
  402b7b:	lea    rcx,[rip+0x348e]        # 406010 <_IO_stdin_used@@Base+0x10>
  402b82:	lea    rdx,[rip+0x380f]        # 406398 <_IO_stdin_used@@Base+0x398>
  402b89:	mov    esi,0x30
  402b8e:	mov    edi,eax
  402b90:	call   402440 <CU_assertImplementation@plt>
  402b95:	mov    rax,QWORD PTR [rip+0x6d24]        # 4098c0 <__bss_start@@Base+0x210>
  402b9c:	inc    rax
  402b9f:	mov    QWORD PTR [rip+0x6d1a],rax        # 4098c0 <__bss_start@@Base+0x210>
  402ba6:	mov    ecx,0x8
  402bab:	lea    rdx,[rip+0x3842]        # 4063f4 <_IO_stdin_used@@Base+0x3f4>
  402bb2:	mov    esi,0x6
  402bb7:	lea    rdi,[rip+0x383f]        # 4063fd <_IO_stdin_used@@Base+0x3fd>
  402bbe:	call   402c89 <test_encoded_stuff@@Base>
  402bc3:	mov    edx,eax
  402bc5:	mov    rax,QWORD PTR [rip+0x6cfc]        # 4098c8 <__bss_start@@Base+0x218>
  402bcc:	inc    rax
  402bcf:	mov    QWORD PTR [rip+0x6cf2],rax        # 4098c8 <__bss_start@@Base+0x218>
  402bd6:	mov    eax,edx
  402bd8:	xor    eax,0x1
  402bdb:	movzx  eax,al
  402bde:	mov    r9d,0x0
  402be4:	lea    r8,[rip+0x341d]        # 406008 <_IO_stdin_used@@Base+0x8>
  402beb:	lea    rcx,[rip+0x341e]        # 406010 <_IO_stdin_used@@Base+0x10>
  402bf2:	lea    rdx,[rip+0x380f]        # 406408 <_IO_stdin_used@@Base+0x408>
  402bf9:	mov    esi,0x31
  402bfe:	mov    edi,eax
  402c00:	call   402440 <CU_assertImplementation@plt>
  402c05:	mov    rax,QWORD PTR [rip+0x6cc4]        # 4098d0 <__bss_start@@Base+0x220>
  402c0c:	inc    rax
  402c0f:	mov    QWORD PTR [rip+0x6cba],rax        # 4098d0 <__bss_start@@Base+0x220>
  402c16:	mov    ecx,0x8
  402c1b:	lea    rdx,[rip+0x383c]        # 40645e <_IO_stdin_used@@Base+0x45e>
  402c22:	mov    esi,0x5
  402c27:	lea    rdi,[rip+0x3839]        # 406467 <_IO_stdin_used@@Base+0x467>
  402c2e:	call   402c89 <test_encoded_stuff@@Base>
  402c33:	mov    edx,eax
  402c35:	mov    rax,QWORD PTR [rip+0x6c9c]        # 4098d8 <__bss_start@@Base+0x228>
  402c3c:	inc    rax
  402c3f:	mov    QWORD PTR [rip+0x6c92],rax        # 4098d8 <__bss_start@@Base+0x228>
  402c46:	mov    eax,edx
  402c48:	xor    eax,0x1
  402c4b:	movzx  eax,al
  402c4e:	mov    r9d,0x0
  402c54:	lea    r8,[rip+0x33ad]        # 406008 <_IO_stdin_used@@Base+0x8>
  402c5b:	lea    rcx,[rip+0x33ae]        # 406010 <_IO_stdin_used@@Base+0x10>
  402c62:	lea    rdx,[rip+0x3807]        # 406470 <_IO_stdin_used@@Base+0x470>
  402c69:	mov    esi,0x32
  402c6e:	mov    edi,eax
  402c70:	call   402440 <CU_assertImplementation@plt>
  402c75:	mov    rax,QWORD PTR [rip+0x6c64]        # 4098e0 <__bss_start@@Base+0x230>
  402c7c:	inc    rax
  402c7f:	mov    QWORD PTR [rip+0x6c5a],rax        # 4098e0 <__bss_start@@Base+0x230>
  402c86:	nop
  402c87:	pop    rbp
  402c88:	ret    

0000000000402c89 <test_encoded_stuff@@Base>:
  402c89:	endbr64 
  402c8d:	push   rbp
  402c8e:	mov    rbp,rsp
  402c91:	sub    rsp,0x40
  402c95:	mov    QWORD PTR [rbp-0x28],rdi
  402c99:	mov    QWORD PTR [rbp-0x30],rsi
  402c9d:	mov    QWORD PTR [rbp-0x38],rdx
  402ca1:	mov    QWORD PTR [rbp-0x40],rcx
  402ca5:	mov    rax,QWORD PTR [rip+0x6bb4]        # 409860 <__bss_start@@Base+0x1b0>
  402cac:	inc    rax
  402caf:	mov    QWORD PTR [rip+0x6baa],rax        # 409860 <__bss_start@@Base+0x1b0>
  402cb6:	mov    BYTE PTR [rbp-0x19],0x0
  402cba:	mov    rax,QWORD PTR [rbp-0x30]
  402cbe:	mov    rdi,rax
  402cc1:	call   4035fc <b64_get_encoded_buffer_size@@Base>
  402cc6:	mov    QWORD PTR [rbp-0x10],rax
  402cca:	mov    rax,QWORD PTR [rip+0x6b97]        # 409868 <__bss_start@@Base+0x1b8>
  402cd1:	inc    rax
  402cd4:	mov    QWORD PTR [rip+0x6b8d],rax        # 409868 <__bss_start@@Base+0x1b8>
  402cdb:	mov    rax,QWORD PTR [rbp-0x10]
  402cdf:	mov    rdi,rax
  402ce2:	call   402470 <malloc@plt>
  402ce7:	mov    QWORD PTR [rbp-0x8],rax
  402ceb:	mov    rdx,QWORD PTR [rbp-0x8]
  402cef:	mov    rcx,QWORD PTR [rbp-0x30]
  402cf3:	mov    rax,QWORD PTR [rbp-0x28]
  402cf7:	mov    rsi,rcx
  402cfa:	mov    rdi,rax
  402cfd:	call   40363a <b64_encode@@Base>
  402d02:	mov    rax,QWORD PTR [rip+0x6b67]        # 409870 <__bss_start@@Base+0x1c0>
  402d09:	inc    rax
  402d0c:	mov    QWORD PTR [rip+0x6b5d],rax        # 409870 <__bss_start@@Base+0x1c0>
  402d13:	mov    rax,QWORD PTR [rbp-0x40]
  402d17:	cmp    rax,QWORD PTR [rbp-0x10]
  402d1b:	sete   al
  402d1e:	movzx  eax,al
  402d21:	mov    r9d,0x0
  402d27:	lea    r8,[rip+0x32da]        # 406008 <_IO_stdin_used@@Base+0x8>
  402d2e:	lea    rcx,[rip+0x32db]        # 406010 <_IO_stdin_used@@Base+0x10>
  402d35:	lea    rdx,[rip+0x378c]        # 4064c8 <_IO_stdin_used@@Base+0x4c8>
  402d3c:	mov    esi,0x3e
  402d41:	mov    edi,eax
  402d43:	call   402440 <CU_assertImplementation@plt>
  402d48:	movzx  edx,BYTE PTR [rbp-0x19]
  402d4c:	mov    rax,QWORD PTR [rbp-0x40]
  402d50:	cmp    rax,QWORD PTR [rbp-0x10]
  402d54:	setne  al
  402d57:	movzx  eax,al
  402d5a:	or     eax,edx
  402d5c:	test   eax,eax
  402d5e:	setne  al
  402d61:	mov    BYTE PTR [rbp-0x19],al
  402d64:	mov    QWORD PTR [rbp-0x18],0x0
  402d6c:	jmp    402e8f <test_encoded_stuff@@Base+0x206>
  402d71:	mov    rax,QWORD PTR [rip+0x6b18]        # 409890 <__bss_start@@Base+0x1e0>
  402d78:	inc    rax
  402d7b:	mov    QWORD PTR [rip+0x6b0e],rax        # 409890 <__bss_start@@Base+0x1e0>
  402d82:	mov    rdx,QWORD PTR [rbp-0x8]
  402d86:	mov    rax,QWORD PTR [rbp-0x18]
  402d8a:	add    rax,rdx
  402d8d:	movzx  edx,BYTE PTR [rax]
  402d90:	mov    rcx,QWORD PTR [rbp-0x38]
  402d94:	mov    rax,QWORD PTR [rbp-0x18]
  402d98:	add    rax,rcx
  402d9b:	movzx  eax,BYTE PTR [rax]
  402d9e:	cmp    dl,al
  402da0:	sete   al
  402da3:	movzx  eax,al
  402da6:	mov    r9d,0x0
  402dac:	lea    r8,[rip+0x3255]        # 406008 <_IO_stdin_used@@Base+0x8>
  402db3:	lea    rcx,[rip+0x3256]        # 406010 <_IO_stdin_used@@Base+0x10>
  402dba:	lea    rdx,[rip+0x3737]        # 4064f8 <_IO_stdin_used@@Base+0x4f8>
  402dc1:	mov    esi,0x41
  402dc6:	mov    edi,eax
  402dc8:	call   402440 <CU_assertImplementation@plt>
  402dcd:	mov    rax,QWORD PTR [rip+0x6aa4]        # 409878 <__bss_start@@Base+0x1c8>
  402dd4:	inc    rax
  402dd7:	mov    QWORD PTR [rip+0x6a9a],rax        # 409878 <__bss_start@@Base+0x1c8>
  402dde:	mov    rdx,QWORD PTR [rbp-0x8]
  402de2:	mov    rax,QWORD PTR [rbp-0x18]
  402de6:	add    rax,rdx
  402de9:	movzx  edx,BYTE PTR [rax]
  402dec:	mov    rcx,QWORD PTR [rbp-0x38]
  402df0:	mov    rax,QWORD PTR [rbp-0x18]
  402df4:	add    rax,rcx
  402df7:	movzx  eax,BYTE PTR [rax]
  402dfa:	cmp    dl,al
  402dfc:	je     402e7a <test_encoded_stuff@@Base+0x1f1>
  402dfe:	mov    rax,QWORD PTR [rip+0x6a7b]        # 409880 <__bss_start@@Base+0x1d0>
  402e05:	inc    rax
  402e08:	mov    QWORD PTR [rip+0x6a71],rax        # 409880 <__bss_start@@Base+0x1d0>
  402e0f:	mov    BYTE PTR [rbp-0x19],0x1
  402e13:	mov    rax,QWORD PTR [rbp-0x10]
  402e17:	mov    r8d,eax
  402e1a:	mov    rdx,QWORD PTR [rbp-0x8]
  402e1e:	mov    rax,QWORD PTR [rbp-0x18]
  402e22:	add    rax,rdx
  402e25:	movzx  eax,BYTE PTR [rax]
  402e28:	movzx  ecx,al
  402e2b:	mov    rax,QWORD PTR [rbp-0x40]
  402e2f:	mov    r10d,eax
  402e32:	mov    rdx,QWORD PTR [rbp-0x38]
  402e36:	mov    rax,QWORD PTR [rbp-0x18]
  402e3a:	add    rax,rdx
  402e3d:	movzx  eax,BYTE PTR [rax]
  402e40:	movzx  edx,al
  402e43:	mov    rdi,QWORD PTR [rbp-0x18]
  402e47:	mov    rsi,QWORD PTR [rbp-0x38]
  402e4b:	mov    rax,QWORD PTR [rbp-0x18]
  402e4f:	sub    rsp,0x8
  402e53:	push   QWORD PTR [rbp-0x8]
  402e56:	push   r8
  402e58:	push   rcx
  402e59:	mov    r9,rdi
  402e5c:	mov    r8,rsi
  402e5f:	mov    ecx,r10d
  402e62:	mov    rsi,rax
  402e65:	lea    rdi,[rip+0x36bc]        # 406528 <_IO_stdin_used@@Base+0x528>
  402e6c:	mov    eax,0x0
  402e71:	call   402410 <printf@plt>
  402e76:	add    rsp,0x20
  402e7a:	inc    QWORD PTR [rbp-0x18]
  402e7e:	mov    rax,QWORD PTR [rip+0x6a03]        # 409888 <__bss_start@@Base+0x1d8>
  402e85:	inc    rax
  402e88:	mov    QWORD PTR [rip+0x69f9],rax        # 409888 <__bss_start@@Base+0x1d8>
  402e8f:	mov    rax,QWORD PTR [rbp-0x18]
  402e93:	cmp    rax,QWORD PTR [rbp-0x40]
  402e97:	jb     402d71 <test_encoded_stuff@@Base+0xe8>
  402e9d:	mov    rax,QWORD PTR [rip+0x69f4]        # 409898 <__bss_start@@Base+0x1e8>
  402ea4:	inc    rax
  402ea7:	mov    QWORD PTR [rip+0x69ea],rax        # 409898 <__bss_start@@Base+0x1e8>
  402eae:	mov    rax,QWORD PTR [rbp-0x8]
  402eb2:	mov    rdi,rax
  402eb5:	call   4022c0 <free@plt>
  402eba:	movzx  eax,BYTE PTR [rbp-0x19]
  402ebe:	leave  
  402ebf:	ret    

0000000000402ec0 <test_decode@@Base>:
  402ec0:	endbr64 
  402ec4:	push   rbp
  402ec5:	mov    rbp,rsp
  402ec8:	mov    rax,QWORD PTR [rip+0x6931]        # 409800 <__bss_start@@Base+0x150>
  402ecf:	inc    rax
  402ed2:	mov    QWORD PTR [rip+0x6927],rax        # 409800 <__bss_start@@Base+0x150>
  402ed9:	mov    ecx,0x8
  402ede:	lea    rdx,[rip+0x3432]        # 406317 <_IO_stdin_used@@Base+0x317>
  402ee5:	mov    esi,0xc
  402eea:	lea    rdi,[rip+0x3419]        # 40630a <_IO_stdin_used@@Base+0x30a>
  402ef1:	call   40309c <test_decoded_stuff@@Base>
  402ef6:	mov    edx,eax
  402ef8:	mov    rax,QWORD PTR [rip+0x6909]        # 409808 <__bss_start@@Base+0x158>
  402eff:	inc    rax
  402f02:	mov    QWORD PTR [rip+0x68ff],rax        # 409808 <__bss_start@@Base+0x158>
  402f09:	mov    eax,edx
  402f0b:	xor    eax,0x1
  402f0e:	movzx  eax,al
  402f11:	mov    r9d,0x0
  402f17:	lea    r8,[rip+0x30ea]        # 406008 <_IO_stdin_used@@Base+0x8>
  402f1e:	lea    rcx,[rip+0x30eb]        # 406010 <_IO_stdin_used@@Base+0x10>
  402f25:	lea    rdx,[rip+0x362c]        # 406558 <_IO_stdin_used@@Base+0x558>
  402f2c:	mov    esi,0x4e
  402f31:	mov    edi,eax
  402f33:	call   402440 <CU_assertImplementation@plt>
  402f38:	mov    rax,QWORD PTR [rip+0x68d1]        # 409810 <__bss_start@@Base+0x160>
  402f3f:	inc    rax
  402f42:	mov    QWORD PTR [rip+0x68c7],rax        # 409810 <__bss_start@@Base+0x160>
  402f49:	mov    ecx,0x7
  402f4e:	lea    rdx,[rip+0x3435]        # 40638a <_IO_stdin_used@@Base+0x38a>
  402f55:	mov    esi,0xc
  402f5a:	lea    rdi,[rip+0x341c]        # 40637d <_IO_stdin_used@@Base+0x37d>
  402f61:	call   40309c <test_decoded_stuff@@Base>
  402f66:	mov    edx,eax
  402f68:	mov    rax,QWORD PTR [rip+0x68a9]        # 409818 <__bss_start@@Base+0x168>
  402f6f:	inc    rax
  402f72:	mov    QWORD PTR [rip+0x689f],rax        # 409818 <__bss_start@@Base+0x168>
  402f79:	mov    eax,edx
  402f7b:	xor    eax,0x1
  402f7e:	movzx  eax,al
  402f81:	mov    r9d,0x0
  402f87:	lea    r8,[rip+0x307a]        # 406008 <_IO_stdin_used@@Base+0x8>
  402f8e:	lea    rcx,[rip+0x307b]        # 406010 <_IO_stdin_used@@Base+0x10>
  402f95:	lea    rdx,[rip+0x361c]        # 4065b8 <_IO_stdin_used@@Base+0x5b8>
  402f9c:	mov    esi,0x4f
  402fa1:	mov    edi,eax
  402fa3:	call   402440 <CU_assertImplementation@plt>
  402fa8:	mov    rax,QWORD PTR [rip+0x6871]        # 409820 <__bss_start@@Base+0x170>
  402faf:	inc    rax
  402fb2:	mov    QWORD PTR [rip+0x6867],rax        # 409820 <__bss_start@@Base+0x170>
  402fb9:	mov    ecx,0x6
  402fbe:	lea    rdx,[rip+0x3438]        # 4063fd <_IO_stdin_used@@Base+0x3fd>
  402fc5:	mov    esi,0x8
  402fca:	lea    rdi,[rip+0x3423]        # 4063f4 <_IO_stdin_used@@Base+0x3f4>
  402fd1:	call   40309c <test_decoded_stuff@@Base>
  402fd6:	mov    edx,eax
  402fd8:	mov    rax,QWORD PTR [rip+0x6849]        # 409828 <__bss_start@@Base+0x178>
  402fdf:	inc    rax
  402fe2:	mov    QWORD PTR [rip+0x683f],rax        # 409828 <__bss_start@@Base+0x178>
  402fe9:	mov    eax,edx
  402feb:	xor    eax,0x1
  402fee:	movzx  eax,al
  402ff1:	mov    r9d,0x0
  402ff7:	lea    r8,[rip+0x300a]        # 406008 <_IO_stdin_used@@Base+0x8>
  402ffe:	lea    rcx,[rip+0x300b]        # 406010 <_IO_stdin_used@@Base+0x10>
  403005:	lea    rdx,[rip+0x360c]        # 406618 <_IO_stdin_used@@Base+0x618>
  40300c:	mov    esi,0x50
  403011:	mov    edi,eax
  403013:	call   402440 <CU_assertImplementation@plt>
  403018:	mov    rax,QWORD PTR [rip+0x6811]        # 409830 <__bss_start@@Base+0x180>
  40301f:	inc    rax
  403022:	mov    QWORD PTR [rip+0x6807],rax        # 409830 <__bss_start@@Base+0x180>
  403029:	mov    ecx,0x5
  40302e:	lea    rdx,[rip+0x3432]        # 406467 <_IO_stdin_used@@Base+0x467>
  403035:	mov    esi,0x8
  40303a:	lea    rdi,[rip+0x341d]        # 40645e <_IO_stdin_used@@Base+0x45e>
  403041:	call   40309c <test_decoded_stuff@@Base>
  403046:	mov    edx,eax
  403048:	mov    rax,QWORD PTR [rip+0x67e9]        # 409838 <__bss_start@@Base+0x188>
  40304f:	inc    rax
  403052:	mov    QWORD PTR [rip+0x67df],rax        # 409838 <__bss_start@@Base+0x188>
  403059:	mov    eax,edx
  40305b:	xor    eax,0x1
  40305e:	movzx  eax,al
  403061:	mov    r9d,0x0
  403067:	lea    r8,[rip+0x2f9a]        # 406008 <_IO_stdin_used@@Base+0x8>
  40306e:	lea    rcx,[rip+0x2f9b]        # 406010 <_IO_stdin_used@@Base+0x10>
  403075:	lea    rdx,[rip+0x35f4]        # 406670 <_IO_stdin_used@@Base+0x670>
  40307c:	mov    esi,0x51
  403081:	mov    edi,eax
  403083:	call   402440 <CU_assertImplementation@plt>
  403088:	mov    rax,QWORD PTR [rip+0x67b1]        # 409840 <__bss_start@@Base+0x190>
  40308f:	inc    rax
  403092:	mov    QWORD PTR [rip+0x67a7],rax        # 409840 <__bss_start@@Base+0x190>
  403099:	nop
  40309a:	pop    rbp
  40309b:	ret    

000000000040309c <test_decoded_stuff@@Base>:
  40309c:	endbr64 
  4030a0:	push   rbp
  4030a1:	mov    rbp,rsp
  4030a4:	sub    rsp,0x50
  4030a8:	mov    QWORD PTR [rbp-0x38],rdi
  4030ac:	mov    QWORD PTR [rbp-0x40],rsi
  4030b0:	mov    QWORD PTR [rbp-0x48],rdx
  4030b4:	mov    QWORD PTR [rbp-0x50],rcx
  4030b8:	mov    rax,QWORD PTR [rip+0x66e1]        # 4097a0 <__bss_start@@Base+0xf0>
  4030bf:	inc    rax
  4030c2:	mov    QWORD PTR [rip+0x66d7],rax        # 4097a0 <__bss_start@@Base+0xf0>
  4030c9:	mov    BYTE PTR [rbp-0x21],0x0
  4030cd:	mov    rax,QWORD PTR [rbp-0x40]
  4030d1:	mov    rdi,rax
  4030d4:	call   4038ae <b64_get_decoded_buffer_size@@Base>
  4030d9:	mov    QWORD PTR [rbp-0x18],rax
  4030dd:	mov    rax,QWORD PTR [rip+0x66c4]        # 4097a8 <__bss_start@@Base+0xf8>
  4030e4:	inc    rax
  4030e7:	mov    QWORD PTR [rip+0x66ba],rax        # 4097a8 <__bss_start@@Base+0xf8>
  4030ee:	mov    rax,QWORD PTR [rbp-0x18]
  4030f2:	mov    rdi,rax
  4030f5:	call   402470 <malloc@plt>
  4030fa:	mov    QWORD PTR [rbp-0x10],rax
  4030fe:	mov    rdx,QWORD PTR [rbp-0x10]
  403102:	mov    rcx,QWORD PTR [rbp-0x40]
  403106:	mov    rax,QWORD PTR [rbp-0x38]
  40310a:	mov    rsi,rcx
  40310d:	mov    rdi,rax
  403110:	call   403926 <b64_decode@@Base>
  403115:	mov    QWORD PTR [rbp-0x8],rax
  403119:	mov    rax,QWORD PTR [rip+0x6690]        # 4097b0 <__bss_start@@Base+0x100>
  403120:	inc    rax
  403123:	mov    QWORD PTR [rip+0x6686],rax        # 4097b0 <__bss_start@@Base+0x100>
  40312a:	mov    rax,QWORD PTR [rbp-0x50]
  40312e:	cmp    rax,QWORD PTR [rbp-0x8]
  403132:	sete   al
  403135:	movzx  eax,al
  403138:	mov    r9d,0x0
  40313e:	lea    r8,[rip+0x2ec3]        # 406008 <_IO_stdin_used@@Base+0x8>
  403145:	lea    rcx,[rip+0x2ec4]        # 406010 <_IO_stdin_used@@Base+0x10>
  40314c:	lea    rdx,[rip+0x3575]        # 4066c8 <_IO_stdin_used@@Base+0x6c8>
  403153:	mov    esi,0x5c
  403158:	mov    edi,eax
  40315a:	call   402440 <CU_assertImplementation@plt>
  40315f:	mov    rax,QWORD PTR [rip+0x6652]        # 4097b8 <__bss_start@@Base+0x108>
  403166:	inc    rax
  403169:	mov    QWORD PTR [rip+0x6648],rax        # 4097b8 <__bss_start@@Base+0x108>
  403170:	movzx  edx,BYTE PTR [rbp-0x21]
  403174:	mov    rax,QWORD PTR [rbp-0x50]
  403178:	cmp    rax,QWORD PTR [rbp-0x8]
  40317c:	setne  al
  40317f:	movzx  eax,al
  403182:	or     eax,edx
  403184:	test   eax,eax
  403186:	setne  al
  403189:	mov    BYTE PTR [rbp-0x21],al
  40318c:	cmp    BYTE PTR [rbp-0x21],0x0
  403190:	je     4031c7 <test_decoded_stuff@@Base+0x12b>
  403192:	mov    rax,QWORD PTR [rip+0x6627]        # 4097c0 <__bss_start@@Base+0x110>
  403199:	inc    rax
  40319c:	mov    QWORD PTR [rip+0x661d],rax        # 4097c0 <__bss_start@@Base+0x110>
  4031a3:	mov    rax,QWORD PTR [rbp-0x8]
  4031a7:	mov    ecx,eax
  4031a9:	mov    rax,QWORD PTR [rbp-0x50]
  4031ad:	mov    edx,eax
  4031af:	mov    rax,QWORD PTR [rbp-0x48]
  4031b3:	mov    rsi,rax
  4031b6:	lea    rdi,[rip+0x3534]        # 4066f1 <_IO_stdin_used@@Base+0x6f1>
  4031bd:	mov    eax,0x0
  4031c2:	call   402410 <printf@plt>
  4031c7:	mov    QWORD PTR [rbp-0x20],0x0
  4031cf:	mov    rax,QWORD PTR [rip+0x65f2]        # 4097c8 <__bss_start@@Base+0x118>
  4031d6:	inc    rax
  4031d9:	mov    QWORD PTR [rip+0x65e8],rax        # 4097c8 <__bss_start@@Base+0x118>
  4031e0:	jmp    403302 <test_decoded_stuff@@Base+0x266>
  4031e5:	mov    rax,QWORD PTR [rip+0x65fc]        # 4097e8 <__bss_start@@Base+0x138>
  4031ec:	inc    rax
  4031ef:	mov    QWORD PTR [rip+0x65f2],rax        # 4097e8 <__bss_start@@Base+0x138>
  4031f6:	mov    rdx,QWORD PTR [rbp-0x10]
  4031fa:	mov    rax,QWORD PTR [rbp-0x20]
  4031fe:	add    rax,rdx
  403201:	movzx  edx,BYTE PTR [rax]
  403204:	mov    rcx,QWORD PTR [rbp-0x48]
  403208:	mov    rax,QWORD PTR [rbp-0x20]
  40320c:	add    rax,rcx
  40320f:	movzx  eax,BYTE PTR [rax]
  403212:	cmp    dl,al
  403214:	sete   al
  403217:	movzx  eax,al
  40321a:	mov    r9d,0x0
  403220:	lea    r8,[rip+0x2de1]        # 406008 <_IO_stdin_used@@Base+0x8>
  403227:	lea    rcx,[rip+0x2de2]        # 406010 <_IO_stdin_used@@Base+0x10>
  40322e:	lea    rdx,[rip+0x32c3]        # 4064f8 <_IO_stdin_used@@Base+0x4f8>
  403235:	mov    esi,0x63
  40323a:	mov    edi,eax
  40323c:	call   402440 <CU_assertImplementation@plt>
  403241:	mov    rax,QWORD PTR [rip+0x6588]        # 4097d0 <__bss_start@@Base+0x120>
  403248:	inc    rax
  40324b:	mov    QWORD PTR [rip+0x657e],rax        # 4097d0 <__bss_start@@Base+0x120>
  403252:	mov    rdx,QWORD PTR [rbp-0x10]
  403256:	mov    rax,QWORD PTR [rbp-0x20]
  40325a:	add    rax,rdx
  40325d:	movzx  edx,BYTE PTR [rax]
  403260:	mov    rcx,QWORD PTR [rbp-0x48]
  403264:	mov    rax,QWORD PTR [rbp-0x20]
  403268:	add    rax,rcx
  40326b:	movzx  eax,BYTE PTR [rax]
  40326e:	cmp    dl,al
  403270:	je     4032ed <test_decoded_stuff@@Base+0x251>
  403272:	mov    rax,QWORD PTR [rip+0x655f]        # 4097d8 <__bss_start@@Base+0x128>
  403279:	inc    rax
  40327c:	mov    QWORD PTR [rip+0x6555],rax        # 4097d8 <__bss_start@@Base+0x128>
  403283:	mov    BYTE PTR [rbp-0x21],0x1
  403287:	mov    rax,QWORD PTR [rbp-0x8]
  40328b:	mov    r8d,eax
  40328e:	mov    rdx,QWORD PTR [rbp-0x10]
  403292:	mov    rax,QWORD PTR [rbp-0x20]
  403296:	add    rax,rdx
  403299:	movzx  eax,BYTE PTR [rax]
  40329c:	movzx  edx,al
  40329f:	mov    rax,QWORD PTR [rbp-0x20]
  4032a3:	mov    r9d,eax
  4032a6:	mov    rax,QWORD PTR [rbp-0x50]
  4032aa:	mov    edi,eax
  4032ac:	mov    rcx,QWORD PTR [rbp-0x48]
  4032b0:	mov    rax,QWORD PTR [rbp-0x20]
  4032b4:	add    rax,rcx
  4032b7:	movzx  eax,BYTE PTR [rax]
  4032ba:	movzx  eax,al
  4032bd:	mov    rcx,QWORD PTR [rbp-0x20]
  4032c1:	mov    esi,ecx
  4032c3:	mov    rcx,QWORD PTR [rbp-0x48]
  4032c7:	sub    rsp,0x8
  4032cb:	push   QWORD PTR [rbp-0x10]
  4032ce:	push   r8
  4032d0:	push   rdx
  4032d1:	mov    r8,rcx
  4032d4:	mov    ecx,edi
  4032d6:	mov    edx,eax
  4032d8:	lea    rdi,[rip+0x3431]        # 406710 <_IO_stdin_used@@Base+0x710>
  4032df:	mov    eax,0x0
  4032e4:	call   402410 <printf@plt>
  4032e9:	add    rsp,0x20
  4032ed:	inc    QWORD PTR [rbp-0x20]
  4032f1:	mov    rax,QWORD PTR [rip+0x64e8]        # 4097e0 <__bss_start@@Base+0x130>
  4032f8:	inc    rax
  4032fb:	mov    QWORD PTR [rip+0x64de],rax        # 4097e0 <__bss_start@@Base+0x130>
  403302:	mov    rax,QWORD PTR [rbp-0x20]
  403306:	cmp    rax,QWORD PTR [rbp-0x50]
  40330a:	jb     4031e5 <test_decoded_stuff@@Base+0x149>
  403310:	mov    rax,QWORD PTR [rbp-0x10]
  403314:	mov    rdi,rax
  403317:	call   4022c0 <free@plt>
  40331c:	movzx  eax,BYTE PTR [rbp-0x21]
  403320:	leave  
  403321:	ret    

0000000000403322 <add_suites@@Base>:
  403322:	endbr64 
  403326:	push   rbp
  403327:	mov    rbp,rsp
  40332a:	sub    rsp,0x10
  40332e:	mov    QWORD PTR [rbp-0x8],rdi
  403332:	mov    rax,QWORD PTR [rip+0x6427]        # 409760 <__bss_start@@Base+0xb0>
  403339:	inc    rax
  40333c:	mov    QWORD PTR [rip+0x641d],rax        # 409760 <__bss_start@@Base+0xb0>
  403343:	mov    edx,0x0
  403348:	mov    esi,0x0
  40334d:	lea    rdi,[rip+0x33e5]        # 406739 <_IO_stdin_used@@Base+0x739>
  403354:	call   402390 <CU_add_suite@plt>
  403359:	mov    rdx,rax
  40335c:	mov    rax,QWORD PTR [rip+0x6405]        # 409768 <__bss_start@@Base+0xb8>
  403363:	inc    rax
  403366:	mov    QWORD PTR [rip+0x63fb],rax        # 409768 <__bss_start@@Base+0xb8>
  40336d:	mov    rax,QWORD PTR [rbp-0x8]
  403371:	mov    QWORD PTR [rax],rdx
  403374:	mov    rax,QWORD PTR [rbp-0x8]
  403378:	mov    rax,QWORD PTR [rax]
  40337b:	mov    rdx,0x402606
  403382:	lea    rsi,[rip+0x33c6]        # 40674f <_IO_stdin_used@@Base+0x74f>
  403389:	mov    rdi,rax
  40338c:	call   402490 <CU_add_test@plt>
  403391:	mov    rax,QWORD PTR [rip+0x63d8]        # 409770 <__bss_start@@Base+0xc0>
  403398:	inc    rax
  40339b:	mov    QWORD PTR [rip+0x63ce],rax        # 409770 <__bss_start@@Base+0xc0>
  4033a2:	mov    rax,QWORD PTR [rbp-0x8]
  4033a6:	mov    rax,QWORD PTR [rax]
  4033a9:	mov    rdx,0x402861
  4033b0:	lea    rsi,[rip+0x33b2]        # 406769 <_IO_stdin_used@@Base+0x769>
  4033b7:	mov    rdi,rax
  4033ba:	call   402490 <CU_add_test@plt>
  4033bf:	mov    rax,QWORD PTR [rip+0x63b2]        # 409778 <__bss_start@@Base+0xc8>
  4033c6:	inc    rax
  4033c9:	mov    QWORD PTR [rip+0x63a8],rax        # 409778 <__bss_start@@Base+0xc8>
  4033d0:	mov    rax,QWORD PTR [rbp-0x8]
  4033d4:	mov    rax,QWORD PTR [rax]
  4033d7:	mov    rdx,0x402aad
  4033de:	lea    rsi,[rip+0x339e]        # 406783 <_IO_stdin_used@@Base+0x783>
  4033e5:	mov    rdi,rax
  4033e8:	call   402490 <CU_add_test@plt>
  4033ed:	mov    rax,QWORD PTR [rip+0x638c]        # 409780 <__bss_start@@Base+0xd0>
  4033f4:	inc    rax
  4033f7:	mov    QWORD PTR [rip+0x6382],rax        # 409780 <__bss_start@@Base+0xd0>
  4033fe:	mov    rax,QWORD PTR [rbp-0x8]
  403402:	mov    rax,QWORD PTR [rax]
  403405:	mov    rdx,0x402ec0
  40340c:	lea    rsi,[rip+0x338a]        # 40679d <_IO_stdin_used@@Base+0x79d>
  403413:	mov    rdi,rax
  403416:	call   402490 <CU_add_test@plt>
  40341b:	mov    rax,QWORD PTR [rip+0x6366]        # 409788 <__bss_start@@Base+0xd8>
  403422:	inc    rax
  403425:	mov    QWORD PTR [rip+0x635c],rax        # 409788 <__bss_start@@Base+0xd8>
  40342c:	nop
  40342d:	leave  
  40342e:	ret    

000000000040342f <main@@Base>:
  40342f:	endbr64 
  403433:	push   rbp
  403434:	mov    rbp,rsp
  403437:	sub    rsp,0x20
  40343b:	mov    rax,QWORD PTR fs:0x28
  403444:	mov    QWORD PTR [rbp-0x8],rax
  403448:	xor    eax,eax
  40344a:	mov    rax,QWORD PTR [rip+0x628f]        # 4096e0 <__bss_start@@Base+0x30>
  403451:	inc    rax
  403454:	mov    QWORD PTR [rip+0x6285],rax        # 4096e0 <__bss_start@@Base+0x30>
  40345b:	mov    DWORD PTR [rbp-0x14],0x1
  403462:	mov    QWORD PTR [rbp-0x10],0x0
  40346a:	call   4022d0 <CU_initialize_registry@plt>
  40346f:	mov    rdx,QWORD PTR [rip+0x6272]        # 4096e8 <__bss_start@@Base+0x38>
  403476:	inc    rdx
  403479:	mov    QWORD PTR [rip+0x6268],rdx        # 4096e8 <__bss_start@@Base+0x38>
  403480:	test   eax,eax
  403482:	jne    40358d <main@@Base+0x15e>
  403488:	mov    rax,QWORD PTR [rip+0x6261]        # 4096f0 <__bss_start@@Base+0x40>
  40348f:	inc    rax
  403492:	mov    QWORD PTR [rip+0x6257],rax        # 4096f0 <__bss_start@@Base+0x40>
  403499:	lea    rax,[rbp-0x10]
  40349d:	mov    rdi,rax
  4034a0:	call   403322 <add_suites@@Base>
  4034a5:	mov    rax,QWORD PTR [rip+0x624c]        # 4096f8 <__bss_start@@Base+0x48>
  4034ac:	inc    rax
  4034af:	mov    QWORD PTR [rip+0x6242],rax        # 4096f8 <__bss_start@@Base+0x48>
  4034b6:	mov    rax,QWORD PTR [rbp-0x10]
  4034ba:	test   rax,rax
  4034bd:	je     403588 <main@@Base+0x159>
  4034c3:	mov    rax,QWORD PTR [rip+0x6236]        # 409700 <__bss_start@@Base+0x50>
  4034ca:	inc    rax
  4034cd:	mov    QWORD PTR [rip+0x622c],rax        # 409700 <__bss_start@@Base+0x50>
  4034d4:	mov    edi,0x2
  4034d9:	call   4022a0 <CU_basic_set_mode@plt>
  4034de:	mov    rax,QWORD PTR [rip+0x6223]        # 409708 <__bss_start@@Base+0x58>
  4034e5:	inc    rax
  4034e8:	mov    QWORD PTR [rip+0x6219],rax        # 409708 <__bss_start@@Base+0x58>
  4034ef:	call   4023a0 <CU_basic_run_tests@plt>
  4034f4:	mov    rax,QWORD PTR [rip+0x6215]        # 409710 <__bss_start@@Base+0x60>
  4034fb:	inc    rax
  4034fe:	mov    QWORD PTR [rip+0x620b],rax        # 409710 <__bss_start@@Base+0x60>
  403505:	mov    edi,0xa
  40350a:	call   4022e0 <putchar@plt>
  40350f:	mov    rax,QWORD PTR [rip+0x6202]        # 409718 <__bss_start@@Base+0x68>
  403516:	inc    rax
  403519:	mov    QWORD PTR [rip+0x61f8],rax        # 409718 <__bss_start@@Base+0x68>
  403520:	call   4024e0 <CU_get_failure_list@plt>
  403525:	mov    rdx,rax
  403528:	mov    rax,QWORD PTR [rip+0x61f1]        # 409720 <__bss_start@@Base+0x70>
  40352f:	inc    rax
  403532:	mov    QWORD PTR [rip+0x61e7],rax        # 409720 <__bss_start@@Base+0x70>
  403539:	mov    rdi,rdx
  40353c:	call   4023c0 <CU_basic_show_failures@plt>
  403541:	mov    rax,QWORD PTR [rip+0x61e0]        # 409728 <__bss_start@@Base+0x78>
  403548:	inc    rax
  40354b:	mov    QWORD PTR [rip+0x61d6],rax        # 409728 <__bss_start@@Base+0x78>
  403552:	lea    rdi,[rip+0x325e]        # 4067b7 <_IO_stdin_used@@Base+0x7b7>
  403559:	call   402340 <puts@plt>
  40355e:	mov    rax,QWORD PTR [rip+0x61cb]        # 409730 <__bss_start@@Base+0x80>
  403565:	inc    rax
  403568:	mov    QWORD PTR [rip+0x61c1],rax        # 409730 <__bss_start@@Base+0x80>
  40356f:	call   402350 <CU_get_number_of_tests_failed@plt>
  403574:	mov    DWORD PTR [rbp-0x14],eax
  403577:	mov    rax,QWORD PTR [rip+0x61ba]        # 409738 <__bss_start@@Base+0x88>
  40357e:	inc    rax
  403581:	mov    QWORD PTR [rip+0x61b0],rax        # 409738 <__bss_start@@Base+0x88>
  403588:	call   402370 <CU_cleanup_registry@plt>
  40358d:	cmp    DWORD PTR [rbp-0x14],0x0
  403591:	je     4035ab <main@@Base+0x17c>
  403593:	mov    rax,QWORD PTR [rip+0x61a6]        # 409740 <__bss_start@@Base+0x90>
  40359a:	inc    rax
  40359d:	mov    QWORD PTR [rip+0x619c],rax        # 409740 <__bss_start@@Base+0x90>
  4035a4:	mov    eax,0x1
  4035a9:	jmp    4035c1 <main@@Base+0x192>
  4035ab:	mov    rax,QWORD PTR [rip+0x6196]        # 409748 <__bss_start@@Base+0x98>
  4035b2:	inc    rax
  4035b5:	mov    QWORD PTR [rip+0x618c],rax        # 409748 <__bss_start@@Base+0x98>
  4035bc:	mov    eax,0x0
  4035c1:	mov    rcx,QWORD PTR [rbp-0x8]
  4035c5:	xor    rcx,QWORD PTR fs:0x28
  4035ce:	je     4035d5 <main@@Base+0x1a6>
  4035d0:	call   4023f0 <__stack_chk_fail@plt>
  4035d5:	leave  
  4035d6:	ret    
  4035d7:	endbr64 
  4035db:	push   rbp
  4035dc:	mov    rbp,rsp
  4035df:	lea    rdi,[rip+0x5dda]        # 4093c0 <__data_start@@Base+0x260>
  4035e6:	call   405cb0 <__gcov_sort_n_vals@@Base+0x1700>
  4035eb:	pop    rbp
  4035ec:	ret    
  4035ed:	endbr64 
  4035f1:	push   rbp
  4035f2:	mov    rbp,rsp
  4035f5:	call   405c20 <__gcov_sort_n_vals@@Base+0x1670>
  4035fa:	pop    rbp
  4035fb:	ret    

00000000004035fc <b64_get_encoded_buffer_size@@Base>:
  4035fc:	endbr64 
  403600:	push   rbp
  403601:	mov    rbp,rsp
  403604:	mov    QWORD PTR [rbp-0x8],rdi
  403608:	mov    rax,QWORD PTR [rip+0x6439]        # 409a48 <__bss_start@@Base+0x398>
  40360f:	inc    rax
  403612:	mov    QWORD PTR [rip+0x642f],rax        # 409a48 <__bss_start@@Base+0x398>
  403619:	mov    rax,QWORD PTR [rbp-0x8]
  40361d:	add    rax,0x2
  403621:	movabs rdx,0xaaaaaaaaaaaaaaab
  40362b:	mul    rdx
  40362e:	mov    rax,rdx
  403631:	shr    rax,1
  403634:	shl    rax,0x2
  403638:	pop    rbp
  403639:	ret    

000000000040363a <b64_encode@@Base>:
  40363a:	endbr64 
  40363e:	push   rbp
  40363f:	mov    rbp,rsp
  403642:	mov    QWORD PTR [rbp-0x28],rdi
  403646:	mov    QWORD PTR [rbp-0x30],rsi
  40364a:	mov    QWORD PTR [rbp-0x38],rdx
  40364e:	mov    rax,QWORD PTR [rip+0x63ab]        # 409a00 <__bss_start@@Base+0x350>
  403655:	inc    rax
  403658:	mov    QWORD PTR [rip+0x63a1],rax        # 409a00 <__bss_start@@Base+0x350>
  40365f:	mov    rax,QWORD PTR [rbp-0x30]
  403663:	mov    QWORD PTR [rbp-0x8],rax
  403667:	jmp    4037d0 <b64_encode@@Base+0x196>
  40366c:	mov    eax,0x3
  403671:	cmp    QWORD PTR [rbp-0x8],0x3
  403676:	cmovbe rax,QWORD PTR [rbp-0x8]
  40367b:	mov    DWORD PTR [rbp-0x10],eax
  40367e:	mov    eax,DWORD PTR [rbp-0x10]
  403681:	cdqe   
  403683:	sub    QWORD PTR [rbp-0x8],rax
  403687:	mov    DWORD PTR [rbp-0x14],0x0
  40368e:	mov    DWORD PTR [rbp-0x18],0x0
  403695:	mov    rax,QWORD PTR [rip+0x636c]        # 409a08 <__bss_start@@Base+0x358>
  40369c:	inc    rax
  40369f:	mov    QWORD PTR [rip+0x6362],rax        # 409a08 <__bss_start@@Base+0x358>
  4036a6:	jmp    4036db <b64_encode@@Base+0xa1>
  4036a8:	mov    eax,DWORD PTR [rbp-0x14]
  4036ab:	shl    eax,0x8
  4036ae:	mov    ecx,eax
  4036b0:	mov    rax,QWORD PTR [rbp-0x28]
  4036b4:	lea    rdx,[rax+0x1]
  4036b8:	mov    QWORD PTR [rbp-0x28],rdx
  4036bc:	movzx  eax,BYTE PTR [rax]
  4036bf:	movzx  eax,al
  4036c2:	or     eax,ecx
  4036c4:	mov    DWORD PTR [rbp-0x14],eax
  4036c7:	inc    DWORD PTR [rbp-0x18]
  4036ca:	mov    rax,QWORD PTR [rip+0x633f]        # 409a10 <__bss_start@@Base+0x360>
  4036d1:	inc    rax
  4036d4:	mov    QWORD PTR [rip+0x6335],rax        # 409a10 <__bss_start@@Base+0x360>
  4036db:	cmp    DWORD PTR [rbp-0x18],0x2
  4036df:	jle    4036a8 <b64_encode@@Base+0x6e>
  4036e1:	mov    DWORD PTR [rbp-0x18],0x4
  4036e8:	jmp    4037be <b64_encode@@Base+0x184>
  4036ed:	mov    eax,DWORD PTR [rbp-0x14]
  4036f0:	and    eax,0x3f
  4036f3:	mov    DWORD PTR [rbp-0xc],eax
  4036f6:	mov    eax,DWORD PTR [rbp-0x18]
  4036f9:	cmp    eax,DWORD PTR [rbp-0x10]
  4036fc:	jg     403795 <b64_encode@@Base+0x15b>
  403702:	mov    rax,QWORD PTR [rip+0x630f]        # 409a18 <__bss_start@@Base+0x368>
  403709:	inc    rax
  40370c:	mov    QWORD PTR [rip+0x6305],rax        # 409a18 <__bss_start@@Base+0x368>
  403713:	cmp    DWORD PTR [rbp-0xc],0x19
  403717:	jg     403732 <b64_encode@@Base+0xf8>
  403719:	mov    rax,QWORD PTR [rip+0x6308]        # 409a28 <__bss_start@@Base+0x378>
  403720:	inc    rax
  403723:	mov    QWORD PTR [rip+0x62fe],rax        # 409a28 <__bss_start@@Base+0x378>
  40372a:	mov    eax,DWORD PTR [rbp-0xc]
  40372d:	add    eax,0x41
  403730:	jmp    4037ab <b64_encode@@Base+0x171>
  403732:	cmp    DWORD PTR [rbp-0xc],0x33
  403736:	jg     403751 <b64_encode@@Base+0x117>
  403738:	mov    rax,QWORD PTR [rip+0x62f1]        # 409a30 <__bss_start@@Base+0x380>
  40373f:	inc    rax
  403742:	mov    QWORD PTR [rip+0x62e7],rax        # 409a30 <__bss_start@@Base+0x380>
  403749:	mov    eax,DWORD PTR [rbp-0xc]
  40374c:	add    eax,0x47
  40374f:	jmp    4037ab <b64_encode@@Base+0x171>
  403751:	cmp    DWORD PTR [rbp-0xc],0x3d
  403755:	jg     403770 <b64_encode@@Base+0x136>
  403757:	mov    rax,QWORD PTR [rip+0x62da]        # 409a38 <__bss_start@@Base+0x388>
  40375e:	inc    rax
  403761:	mov    QWORD PTR [rip+0x62d0],rax        # 409a38 <__bss_start@@Base+0x388>
  403768:	mov    eax,DWORD PTR [rbp-0xc]
  40376b:	sub    eax,0x4
  40376e:	jmp    4037ab <b64_encode@@Base+0x171>
  403770:	cmp    DWORD PTR [rbp-0xc],0x3e
  403774:	jne    40378e <b64_encode@@Base+0x154>
  403776:	mov    rax,QWORD PTR [rip+0x62c3]        # 409a40 <__bss_start@@Base+0x390>
  40377d:	inc    rax
  403780:	mov    QWORD PTR [rip+0x62b9],rax        # 409a40 <__bss_start@@Base+0x390>
  403787:	mov    eax,0x2b
  40378c:	jmp    4037ab <b64_encode@@Base+0x171>
  40378e:	mov    eax,0x2f
  403793:	jmp    4037ab <b64_encode@@Base+0x171>
  403795:	mov    rax,QWORD PTR [rip+0x6284]        # 409a20 <__bss_start@@Base+0x370>
  40379c:	inc    rax
  40379f:	mov    QWORD PTR [rip+0x627a],rax        # 409a20 <__bss_start@@Base+0x370>
  4037a6:	mov    eax,0x3d
  4037ab:	mov    edx,DWORD PTR [rbp-0x18]
  4037ae:	movsxd rcx,edx
  4037b1:	mov    rdx,QWORD PTR [rbp-0x38]
  4037b5:	add    rdx,rcx
  4037b8:	mov    BYTE PTR [rdx],al
  4037ba:	shr    DWORD PTR [rbp-0x14],0x6
  4037be:	dec    DWORD PTR [rbp-0x18]
  4037c1:	cmp    DWORD PTR [rbp-0x18],0x0
  4037c5:	jns    4036ed <b64_encode@@Base+0xb3>
  4037cb:	add    QWORD PTR [rbp-0x38],0x4
  4037d0:	cmp    QWORD PTR [rbp-0x8],0x0
  4037d5:	jne    40366c <b64_encode@@Base+0x32>
  4037db:	nop
  4037dc:	pop    rbp
  4037dd:	ret    
  4037de:	endbr64 
  4037e2:	push   rbp
  4037e3:	mov    rbp,rsp
  4037e6:	lea    rdi,[rip+0x5cd3]        # 4094c0 <__data_start@@Base+0x360>
  4037ed:	call   405cb0 <__gcov_sort_n_vals@@Base+0x1700>
  4037f2:	pop    rbp
  4037f3:	ret    
  4037f4:	endbr64 
  4037f8:	push   rbp
  4037f9:	mov    rbp,rsp
  4037fc:	call   405c20 <__gcov_sort_n_vals@@Base+0x1670>
  403801:	pop    rbp
  403802:	ret    
  403803:	endbr64 
  403807:	push   rbp
  403808:	mov    rbp,rsp
  40380b:	mov    QWORD PTR [rbp-0x8],rdi
  40380f:	mov    QWORD PTR [rbp-0x10],rsi
  403813:	mov    rax,QWORD PTR [rip+0x62ce]        # 409ae8 <__bss_start@@Base+0x438>
  40381a:	inc    rax
  40381d:	mov    QWORD PTR [rip+0x62c4],rax        # 409ae8 <__bss_start@@Base+0x438>
  403824:	mov    rax,QWORD PTR [rbp-0x8]
  403828:	movzx  eax,BYTE PTR [rax]
  40382b:	movzx  eax,al
  40382e:	shl    eax,0x2
  403831:	mov    edx,eax
  403833:	mov    rax,QWORD PTR [rbp-0x8]
  403837:	inc    rax
  40383a:	movzx  eax,BYTE PTR [rax]
  40383d:	shr    al,0x4
  403840:	or     eax,edx
  403842:	mov    edx,eax
  403844:	mov    rax,QWORD PTR [rbp-0x10]
  403848:	mov    BYTE PTR [rax],dl
  40384a:	mov    rax,QWORD PTR [rbp-0x8]
  40384e:	inc    rax
  403851:	movzx  eax,BYTE PTR [rax]
  403854:	movzx  eax,al
  403857:	shl    eax,0x4
  40385a:	mov    edx,eax
  40385c:	mov    rax,QWORD PTR [rbp-0x8]
  403860:	add    rax,0x2
  403864:	movzx  eax,BYTE PTR [rax]
  403867:	shr    al,0x2
  40386a:	mov    ecx,edx
  40386c:	or     ecx,eax
  40386e:	mov    rax,QWORD PTR [rbp-0x10]
  403872:	lea    rdx,[rax+0x1]
  403876:	mov    eax,ecx
  403878:	mov    BYTE PTR [rdx],al
  40387a:	mov    rax,QWORD PTR [rbp-0x8]
  40387e:	add    rax,0x2
  403882:	movzx  eax,BYTE PTR [rax]
  403885:	movzx  eax,al
  403888:	shl    eax,0x6
  40388b:	and    eax,0xffffffc0
  40388e:	mov    edx,eax
  403890:	mov    rax,QWORD PTR [rbp-0x8]
  403894:	add    rax,0x3
  403898:	movzx  eax,BYTE PTR [rax]
  40389b:	mov    ecx,edx
  40389d:	or     ecx,eax
  40389f:	mov    rax,QWORD PTR [rbp-0x10]
  4038a3:	lea    rdx,[rax+0x2]
  4038a7:	mov    eax,ecx
  4038a9:	mov    BYTE PTR [rdx],al
  4038ab:	nop
  4038ac:	pop    rbp
  4038ad:	ret    

00000000004038ae <b64_get_decoded_buffer_size@@Base>:
  4038ae:	endbr64 
  4038b2:	push   rbp
  4038b3:	mov    rbp,rsp
  4038b6:	mov    QWORD PTR [rbp-0x18],rdi
  4038ba:	mov    rax,QWORD PTR [rip+0x620f]        # 409ad0 <__bss_start@@Base+0x420>
  4038c1:	inc    rax
  4038c4:	mov    QWORD PTR [rip+0x6205],rax        # 409ad0 <__bss_start@@Base+0x420>
  4038cb:	cmp    QWORD PTR [rbp-0x18],0x0
  4038d0:	je     4038f0 <b64_get_decoded_buffer_size@@Base+0x42>
  4038d2:	mov    rax,QWORD PTR [rip+0x61ff]        # 409ad8 <__bss_start@@Base+0x428>
  4038d9:	inc    rax
  4038dc:	mov    QWORD PTR [rip+0x61f5],rax        # 409ad8 <__bss_start@@Base+0x428>
  4038e3:	mov    rax,QWORD PTR [rbp-0x18]
  4038e7:	shr    rax,0x2
  4038eb:	test   rax,rax
  4038ee:	jne    4038f7 <b64_get_decoded_buffer_size@@Base+0x49>
  4038f0:	mov    eax,0x0
  4038f5:	jmp    403924 <b64_get_decoded_buffer_size@@Base+0x76>
  4038f7:	mov    rax,QWORD PTR [rip+0x61e2]        # 409ae0 <__bss_start@@Base+0x430>
  4038fe:	inc    rax
  403901:	mov    QWORD PTR [rip+0x61d8],rax        # 409ae0 <__bss_start@@Base+0x430>
  403908:	mov    rax,QWORD PTR [rbp-0x18]
  40390c:	shr    rax,0x2
  403910:	mov    rdx,rax
  403913:	mov    rax,rdx
  403916:	add    rax,rax
  403919:	add    rax,rdx
  40391c:	mov    QWORD PTR [rbp-0x8],rax
  403920:	mov    rax,QWORD PTR [rbp-0x8]
  403924:	pop    rbp
  403925:	ret    

0000000000403926 <b64_decode@@Base>:
  403926:	endbr64 
  40392a:	push   rbp
  40392b:	mov    rbp,rsp
  40392e:	sub    rsp,0x50
  403932:	mov    QWORD PTR [rbp-0x38],rdi
  403936:	mov    QWORD PTR [rbp-0x40],rsi
  40393a:	mov    QWORD PTR [rbp-0x48],rdx
  40393e:	mov    rax,QWORD PTR fs:0x28
  403947:	mov    QWORD PTR [rbp-0x8],rax
  40394b:	xor    eax,eax
  40394d:	mov    rax,QWORD PTR [rip+0x610c]        # 409a60 <__bss_start@@Base+0x3b0>
  403954:	inc    rax
  403957:	mov    QWORD PTR [rip+0x6102],rax        # 409a60 <__bss_start@@Base+0x3b0>
  40395e:	mov    rax,QWORD PTR [rbp-0x48]
  403962:	mov    QWORD PTR [rbp-0x20],rax
  403966:	mov    QWORD PTR [rbp-0x18],0x0
  40396e:	jmp    403b4f <b64_decode@@Base+0x229>
  403973:	mov    DWORD PTR [rbp-0x28],0x0
  40397a:	mov    DWORD PTR [rbp-0x2c],0x0
  403981:	mov    rax,QWORD PTR [rip+0x60e0]        # 409a68 <__bss_start@@Base+0x3b8>
  403988:	inc    rax
  40398b:	mov    QWORD PTR [rip+0x60d6],rax        # 409a68 <__bss_start@@Base+0x3b8>
  403992:	jmp    403ae3 <b64_decode@@Base+0x1bd>
  403997:	mov    BYTE PTR [rbp-0x2d],0x0
  40399b:	mov    rax,QWORD PTR [rip+0x60ce]        # 409a70 <__bss_start@@Base+0x3c0>
  4039a2:	inc    rax
  4039a5:	mov    QWORD PTR [rip+0x60c4],rax        # 409a70 <__bss_start@@Base+0x3c0>
  4039ac:	jmp    403a53 <b64_decode@@Base+0x12d>
  4039b1:	mov    rax,QWORD PTR [rbp-0x18]
  4039b5:	lea    rdx,[rax+0x1]
  4039b9:	mov    QWORD PTR [rbp-0x18],rdx
  4039bd:	mov    rdx,QWORD PTR [rbp-0x38]
  4039c1:	add    rax,rdx
  4039c4:	movzx  eax,BYTE PTR [rax]
  4039c7:	mov    BYTE PTR [rbp-0x2d],al
  4039ca:	movzx  eax,BYTE PTR [rbp-0x2d]
  4039ce:	sub    eax,0x2b
  4039d1:	mov    DWORD PTR [rbp-0x24],eax
  4039d4:	cmp    DWORD PTR [rbp-0x24],0x4f
  4039d8:	ja     4039fb <b64_decode@@Base+0xd5>
  4039da:	mov    rax,QWORD PTR [rip+0x6097]        # 409a78 <__bss_start@@Base+0x3c8>
  4039e1:	inc    rax
  4039e4:	mov    QWORD PTR [rip+0x608d],rax        # 409a78 <__bss_start@@Base+0x3c8>
  4039eb:	mov    edx,DWORD PTR [rbp-0x24]
  4039ee:	lea    rax,[rip+0x2ecb]        # 4068c0 <_IO_stdin_used@@Base+0x8c0>
  4039f5:	movzx  eax,BYTE PTR [rdx+rax*1]
  4039f9:	jmp    403a11 <b64_decode@@Base+0xeb>
  4039fb:	mov    rax,QWORD PTR [rip+0x607e]        # 409a80 <__bss_start@@Base+0x3d0>
  403a02:	inc    rax
  403a05:	mov    QWORD PTR [rip+0x6074],rax        # 409a80 <__bss_start@@Base+0x3d0>
  403a0c:	mov    eax,0x0
  403a11:	mov    BYTE PTR [rbp-0x2d],al
  403a14:	cmp    BYTE PTR [rbp-0x2d],0x0
  403a18:	je     403a53 <b64_decode@@Base+0x12d>
  403a1a:	mov    rax,QWORD PTR [rip+0x6067]        # 409a88 <__bss_start@@Base+0x3d8>
  403a21:	inc    rax
  403a24:	mov    QWORD PTR [rip+0x605d],rax        # 409a88 <__bss_start@@Base+0x3d8>
  403a2b:	cmp    BYTE PTR [rbp-0x2d],0x24
  403a2f:	je     403a4b <b64_decode@@Base+0x125>
  403a31:	mov    rax,QWORD PTR [rip+0x6058]        # 409a90 <__bss_start@@Base+0x3e0>
  403a38:	inc    rax
  403a3b:	mov    QWORD PTR [rip+0x604e],rax        # 409a90 <__bss_start@@Base+0x3e0>
  403a42:	movzx  eax,BYTE PTR [rbp-0x2d]
  403a46:	sub    eax,0x3d
  403a49:	jmp    403a50 <b64_decode@@Base+0x12a>
  403a4b:	mov    eax,0x0
  403a50:	mov    BYTE PTR [rbp-0x2d],al
  403a53:	mov    rax,QWORD PTR [rbp-0x18]
  403a57:	cmp    rax,QWORD PTR [rbp-0x40]
  403a5b:	jae    403a78 <b64_decode@@Base+0x152>
  403a5d:	mov    rax,QWORD PTR [rip+0x6034]        # 409a98 <__bss_start@@Base+0x3e8>
  403a64:	inc    rax
  403a67:	mov    QWORD PTR [rip+0x602a],rax        # 409a98 <__bss_start@@Base+0x3e8>
  403a6e:	cmp    BYTE PTR [rbp-0x2d],0x0
  403a72:	je     4039b1 <b64_decode@@Base+0x8b>
  403a78:	mov    rax,QWORD PTR [rbp-0x18]
  403a7c:	cmp    rax,QWORD PTR [rbp-0x40]
  403a80:	jb     403a99 <b64_decode@@Base+0x173>
  403a82:	mov    rax,QWORD PTR [rip+0x6017]        # 409aa0 <__bss_start@@Base+0x3f0>
  403a89:	inc    rax
  403a8c:	mov    QWORD PTR [rip+0x600d],rax        # 409aa0 <__bss_start@@Base+0x3f0>
  403a93:	cmp    BYTE PTR [rbp-0x2d],0x0
  403a97:	je     403ac5 <b64_decode@@Base+0x19f>
  403a99:	inc    DWORD PTR [rbp-0x28]
  403a9c:	cmp    BYTE PTR [rbp-0x2d],0x0
  403aa0:	je     403ae0 <b64_decode@@Base+0x1ba>
  403aa2:	mov    rax,QWORD PTR [rip+0x6007]        # 409ab0 <__bss_start@@Base+0x400>
  403aa9:	inc    rax
  403aac:	mov    QWORD PTR [rip+0x5ffd],rax        # 409ab0 <__bss_start@@Base+0x400>
  403ab3:	movzx  eax,BYTE PTR [rbp-0x2d]
  403ab7:	dec    eax
  403ab9:	mov    edx,DWORD PTR [rbp-0x2c]
  403abc:	movsxd rdx,edx
  403abf:	mov    BYTE PTR [rbp+rdx*1-0xc],al
  403ac3:	jmp    403ae0 <b64_decode@@Base+0x1ba>
  403ac5:	mov    rax,QWORD PTR [rip+0x5fdc]        # 409aa8 <__bss_start@@Base+0x3f8>
  403acc:	inc    rax
  403acf:	mov    QWORD PTR [rip+0x5fd2],rax        # 409aa8 <__bss_start@@Base+0x3f8>
  403ad6:	mov    eax,DWORD PTR [rbp-0x2c]
  403ad9:	cdqe   
  403adb:	mov    BYTE PTR [rbp+rax*1-0xc],0x0
  403ae0:	inc    DWORD PTR [rbp-0x2c]
  403ae3:	cmp    DWORD PTR [rbp-0x2c],0x3
  403ae7:	jg     403b08 <b64_decode@@Base+0x1e2>
  403ae9:	mov    rax,QWORD PTR [rip+0x5fc8]        # 409ab8 <__bss_start@@Base+0x408>
  403af0:	inc    rax
  403af3:	mov    QWORD PTR [rip+0x5fbe],rax        # 409ab8 <__bss_start@@Base+0x408>
  403afa:	mov    rax,QWORD PTR [rbp-0x18]
  403afe:	cmp    rax,QWORD PTR [rbp-0x40]
  403b02:	jb     403997 <b64_decode@@Base+0x71>
  403b08:	cmp    DWORD PTR [rbp-0x28],0x0
  403b0c:	je     403b4f <b64_decode@@Base+0x229>
  403b0e:	mov    rax,QWORD PTR [rip+0x5fab]        # 409ac0 <__bss_start@@Base+0x410>
  403b15:	inc    rax
  403b18:	mov    QWORD PTR [rip+0x5fa1],rax        # 409ac0 <__bss_start@@Base+0x410>
  403b1f:	mov    rdx,QWORD PTR [rbp-0x20]
  403b23:	lea    rax,[rbp-0xc]
  403b27:	mov    rsi,rdx
  403b2a:	mov    rdi,rax
  403b2d:	call   403803 <b64_encode@@Base+0x1c9>
  403b32:	mov    rax,QWORD PTR [rip+0x5f8f]        # 409ac8 <__bss_start@@Base+0x418>
  403b39:	inc    rax
  403b3c:	mov    QWORD PTR [rip+0x5f85],rax        # 409ac8 <__bss_start@@Base+0x418>
  403b43:	mov    eax,DWORD PTR [rbp-0x28]
  403b46:	cdqe   
  403b48:	dec    rax
  403b4b:	add    QWORD PTR [rbp-0x20],rax
  403b4f:	mov    rax,QWORD PTR [rbp-0x18]
  403b53:	cmp    rax,QWORD PTR [rbp-0x40]
  403b57:	jb     403973 <b64_decode@@Base+0x4d>
  403b5d:	mov    rax,QWORD PTR [rbp-0x20]
  403b61:	sub    rax,QWORD PTR [rbp-0x48]
  403b65:	mov    rcx,QWORD PTR [rbp-0x8]
  403b69:	xor    rcx,QWORD PTR fs:0x28
  403b72:	je     403b79 <b64_decode@@Base+0x253>
  403b74:	call   4023f0 <__stack_chk_fail@plt>
  403b79:	leave  
  403b7a:	ret    
  403b7b:	endbr64 
  403b7f:	push   rbp
  403b80:	mov    rbp,rsp
  403b83:	lea    rdi,[rip+0x5a96]        # 409620 <__data_start@@Base+0x4c0>
  403b8a:	call   405cb0 <__gcov_sort_n_vals@@Base+0x1700>
  403b8f:	pop    rbp
  403b90:	ret    
  403b91:	endbr64 
  403b95:	push   rbp
  403b96:	mov    rbp,rsp
  403b99:	call   405c20 <__gcov_sort_n_vals@@Base+0x1670>
  403b9e:	pop    rbp
  403b9f:	ret    
  403ba0:	endbr64 
  403ba4:	test   esi,esi
  403ba6:	je     403be0 <b64_decode@@Base+0x2ba>
  403ba8:	push   rbp
  403ba9:	lea    eax,[rsi-0x1]
  403bac:	push   rbx
  403bad:	lea    rbp,[rdi+rax*8+0x8]
  403bb2:	mov    rbx,rdi
  403bb5:	sub    rsp,0x8
  403bb9:	nop    DWORD PTR [rax+0x0]
  403bc0:	call   404290 <b64_decode@@Base+0x96a>
  403bc5:	add    QWORD PTR [rbx],rax
  403bc8:	add    rbx,0x8
  403bcc:	cmp    rbx,rbp
  403bcf:	jne    403bc0 <b64_decode@@Base+0x29a>
  403bd1:	add    rsp,0x8
  403bd5:	pop    rbx
  403bd6:	pop    rbp
  403bd7:	ret    
  403bd8:	nop    DWORD PTR [rax+rax*1+0x0]
  403be0:	ret    
  403be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403beb:	nop    DWORD PTR [rax+rax*1+0x0]
  403bf0:	push   rbp
  403bf1:	lea    esi,[rdi*4+0x0]
  403bf8:	mov    ebp,edi
  403bfa:	mov    edx,0x1
  403bff:	push   rbx
  403c00:	sub    rsp,0x8
  403c04:	mov    rbx,0x409b40
  403c0b:	mov    rcx,QWORD PTR [rbx]
  403c0e:	lea    rdi,[rbx+0x20]
  403c12:	call   4024f0 <fwrite@plt>
  403c17:	cmp    rax,0x1
  403c1b:	je     403c24 <b64_decode@@Base+0x2fe>
  403c1d:	mov    DWORD PTR [rbx+0x18],0x1
  403c24:	add    DWORD PTR [rbx+0x8],ebp
  403c27:	sub    DWORD PTR [rbx+0xc],ebp
  403c2a:	add    rsp,0x8
  403c2e:	pop    rbx
  403c2f:	pop    rbp
  403c30:	ret    
  403c31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403c3c:	nop    DWORD PTR [rax+0x0]
  403c40:	push   rbp
  403c41:	mov    ebp,edi
  403c43:	push   rbx
  403c44:	sub    rsp,0x8
  403c48:	mov    rbx,0x409b40
  403c4f:	mov    eax,DWORD PTR [rbx+0xc]
  403c52:	cmp    eax,0x3ff
  403c57:	ja     403c70 <b64_decode@@Base+0x34a>
  403c59:	add    ebp,eax
  403c5b:	lea    rax,[rbx+rax*4+0x20]
  403c60:	mov    DWORD PTR [rbx+0xc],ebp
  403c63:	add    rsp,0x8
  403c67:	pop    rbx
  403c68:	pop    rbp
  403c69:	ret    
  403c6a:	nop    WORD PTR [rax+rax*1+0x0]
  403c70:	mov    edi,0x400
  403c75:	call   403bf0 <b64_decode@@Base+0x2ca>
  403c7a:	mov    eax,DWORD PTR [rbx+0xc]
  403c7d:	test   eax,eax
  403c7f:	je     403c59 <b64_decode@@Base+0x333>
  403c81:	mov    edx,DWORD PTR [rbx+0x1020]
  403c87:	mov    DWORD PTR [rbx+0x20],edx
  403c8a:	jmp    403c59 <b64_decode@@Base+0x333>
  403c8c:	nop    DWORD PTR [rax+0x0]
  403c90:	push   rbp
  403c91:	push   rbx
  403c92:	sub    rsp,0x8
  403c96:	mov    rbx,0x409b40
  403c9d:	mov    edx,DWORD PTR [rbx+0xc]
  403ca0:	mov    eax,DWORD PTR [rbx+0x10]
  403ca3:	mov    ecx,DWORD PTR [rbx+0x1c]
  403ca6:	sub    eax,edx
  403ca8:	test   ecx,ecx
  403caa:	jle    403d08 <b64_decode@@Base+0x3e2>
  403cac:	mov    ebp,edi
  403cae:	cmp    eax,edi
  403cb0:	jae    403cf2 <b64_decode@@Base+0x3cc>
  403cb2:	add    DWORD PTR [rbx+0x8],edx
  403cb5:	test   eax,eax
  403cb7:	je     403cc0 <b64_decode@@Base+0x39a>
  403cb9:	mov    edx,DWORD PTR [rbx+rdx*4+0x20]
  403cbd:	mov    DWORD PTR [rbx+0x20],edx
  403cc0:	mov    rcx,QWORD PTR [rbx]
  403cc3:	lea    rdi,[rbx+rax*4+0x20]
  403cc8:	mov    edx,0x1000
  403ccd:	mov    DWORD PTR [rbx+0x10],eax
  403cd0:	mov    esi,0x1
  403cd5:	mov    DWORD PTR [rbx+0xc],0x0
  403cdc:	call   402360 <fread@plt>
  403ce1:	shr    rax,0x2
  403ce5:	add    eax,DWORD PTR [rbx+0x10]
  403ce8:	mov    DWORD PTR [rbx+0x10],eax
  403ceb:	cmp    eax,ebp
  403ced:	jb     403d18 <b64_decode@@Base+0x3f2>
  403cef:	mov    edx,DWORD PTR [rbx+0xc]
  403cf2:	add    ebp,edx
  403cf4:	mov    eax,edx
  403cf6:	mov    DWORD PTR [rbx+0xc],ebp
  403cf9:	lea    rax,[rbx+rax*4+0x20]
  403cfe:	add    rsp,0x8
  403d02:	pop    rbx
  403d03:	pop    rbp
  403d04:	ret    
  403d05:	nop    DWORD PTR [rax]
  403d08:	add    rsp,0x8
  403d0c:	xor    eax,eax
  403d0e:	pop    rbx
  403d0f:	pop    rbp
  403d10:	ret    
  403d11:	nop    DWORD PTR [rax+0x0]
  403d18:	sub    ebp,eax
  403d1a:	mov    DWORD PTR [rbx+0x10],0x0
  403d21:	xor    eax,eax
  403d23:	add    DWORD PTR [rbx+0x14],ebp
  403d26:	jmp    403cfe <b64_decode@@Base+0x3d8>
  403d28:	nop    DWORD PTR [rax+rax*1+0x0]
  403d30:	push   rbp
  403d31:	mov    rbp,rdi
  403d34:	push   rbx
  403d35:	sub    rsp,0xd8
  403d3c:	mov    QWORD PTR [rsp+0x28],rsi
  403d41:	mov    QWORD PTR [rsp+0x30],rdx
  403d46:	mov    QWORD PTR [rsp+0x38],rcx
  403d4b:	mov    QWORD PTR [rsp+0x40],r8
  403d50:	mov    QWORD PTR [rsp+0x48],r9
  403d55:	test   al,al
  403d57:	je     403d90 <b64_decode@@Base+0x46a>
  403d59:	movaps XMMWORD PTR [rsp+0x50],xmm0
  403d5e:	movaps XMMWORD PTR [rsp+0x60],xmm1
  403d63:	movaps XMMWORD PTR [rsp+0x70],xmm2
  403d68:	movaps XMMWORD PTR [rsp+0x80],xmm3
  403d70:	movaps XMMWORD PTR [rsp+0x90],xmm4
  403d78:	movaps XMMWORD PTR [rsp+0xa0],xmm5
  403d80:	movaps XMMWORD PTR [rsp+0xb0],xmm6
  403d88:	movaps XMMWORD PTR [rsp+0xc0],xmm7
  403d90:	mov    rbx,0x409af0
  403d97:	lea    rax,[rsp+0xf0]
  403d9f:	mov    DWORD PTR [rsp+0x8],0x8
  403da7:	mov    QWORD PTR [rsp+0x10],rax
  403dac:	lea    rax,[rsp+0x20]
  403db1:	mov    rdi,QWORD PTR [rbx]
  403db4:	mov    DWORD PTR [rsp+0xc],0x30
  403dbc:	mov    QWORD PTR [rsp+0x18],rax
  403dc1:	test   rdi,rdi
  403dc4:	je     403de8 <b64_decode@@Base+0x4c2>
  403dc6:	lea    rcx,[rsp+0x8]
  403dcb:	mov    rdx,rbp
  403dce:	mov    esi,0x1
  403dd3:	call   4022f0 <__vfprintf_chk@plt>
  403dd8:	add    rsp,0xd8
  403ddf:	pop    rbx
  403de0:	pop    rbp
  403de1:	ret    
  403de2:	nop    WORD PTR [rax+rax*1+0x0]
  403de8:	lea    rdi,[rip+0x2baf]        # 40699e <_IO_stdin_used@@Base+0x99e>
  403def:	call   4022b0 <getenv@plt>
  403df4:	test   rax,rax
  403df7:	je     403e28 <b64_decode@@Base+0x502>
  403df9:	mov    rdi,rax
  403dfc:	lea    rsi,[rip+0x2bab]        # 4069ae <_IO_stdin_used@@Base+0x9ae>
  403e03:	call   4024d0 <fopen@plt>
  403e08:	mov    QWORD PTR [rbx],rax
  403e0b:	mov    rdi,rax
  403e0e:	test   rdi,rdi
  403e11:	jne    403dc6 <b64_decode@@Base+0x4a0>
  403e13:	mov    rax,QWORD PTR [rip+0x51de]        # 408ff8 <stderr@GLIBC_2.2.5>
  403e1a:	mov    rdi,QWORD PTR [rax]
  403e1d:	mov    QWORD PTR [rbx],rdi
  403e20:	jmp    403dc6 <b64_decode@@Base+0x4a0>
  403e22:	nop    WORD PTR [rax+rax*1+0x0]
  403e28:	mov    rdi,QWORD PTR [rbx]
  403e2b:	jmp    403e0e <b64_decode@@Base+0x4e8>
  403e2d:	nop    DWORD PTR [rax]
  403e30:	push   r14
  403e32:	push   r13
  403e34:	push   r12
  403e36:	push   rbp
  403e37:	push   rbx
  403e38:	test   rsi,rsi
  403e3b:	je     403e94 <b64_decode@@Base+0x56e>
  403e3d:	mov    rbx,rsi
  403e40:	mov    r13,QWORD PTR [rsi]
  403e43:	test   edx,edx
  403e45:	je     403e80 <b64_decode@@Base+0x55a>
  403e47:	lea    eax,[rdx-0x1]
  403e4a:	lea    r14,[rdi+0x20]
  403e4e:	lea    rbp,[rdi+rax*8+0x28]
  403e53:	xor    eax,eax
  403e55:	nop    DWORD PTR [rax]
  403e58:	cmp    QWORD PTR [r14],0x0
  403e5c:	je     403e77 <b64_decode@@Base+0x551>
  403e5e:	lea    r12d,[rax+0x1]
  403e62:	add    rax,0x2
  403e66:	shl    rax,0x4
  403e6a:	mov    rdi,QWORD PTR [rbx+rax*1+0x10]
  403e6f:	call   4022c0 <free@plt>
  403e74:	mov    eax,r12d
  403e77:	add    r14,0x8
  403e7b:	cmp    r14,rbp
  403e7e:	jne    403e58 <b64_decode@@Base+0x532>
  403e80:	mov    rdi,rbx
  403e83:	call   4022c0 <free@plt>
  403e88:	pop    rbx
  403e89:	mov    rax,r13
  403e8c:	pop    rbp
  403e8d:	pop    r12
  403e8f:	pop    r13
  403e91:	pop    r14
  403e93:	ret    
  403e94:	xor    r13d,r13d
  403e97:	jmp    403e88 <b64_decode@@Base+0x562>
  403e99:	nop    DWORD PTR [rax+0x0]
  403ea0:	sub    rsp,0x18
  403ea4:	bswap  esi
  403ea6:	mov    rax,rdx
  403ea9:	mov    DWORD PTR [rsp+0x8],esi
  403ead:	mov    DWORD PTR [rsp+0xc],0x2a343841
  403eb5:	test   rdx,rdx
  403eb8:	je     403ee0 <b64_decode@@Base+0x5ba>
  403eba:	lea    rcx,[rsp+0x8]
  403ebf:	lea    rdx,[rsp+0xc]
  403ec4:	mov    rsi,rax
  403ec7:	xor    eax,eax
  403ec9:	lea    rdi,[rip+0x2ba8]        # 406a78 <_IO_stdin_used@@Base+0xa78>
  403ed0:	call   403d30 <b64_decode@@Base+0x40a>
  403ed5:	xor    eax,eax
  403ed7:	add    rsp,0x18
  403edb:	ret    
  403edc:	nop    DWORD PTR [rax+0x0]
  403ee0:	mov    rax,QWORD PTR [rdi]
  403ee3:	jmp    403eba <b64_decode@@Base+0x594>
  403ee5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403ef0:	endbr64 
  403ef4:	mov    rax,0x409b40
  403efb:	xor    edx,edx
  403efd:	xor    esi,esi
  403eff:	mov    QWORD PTR [rax+0x8],0x0
  403f07:	mov    rdi,QWORD PTR [rax]
  403f0a:	mov    DWORD PTR [rax+0x1c],0xffffffff
  403f11:	jmp    402480 <fseek@plt>
  403f16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f20:	endbr64 
  403f24:	push   r12
  403f26:	xor    eax,eax
  403f28:	push   rbp
  403f29:	mov    rbp,rdi
  403f2c:	push   rbx
  403f2d:	sub    rsp,0x20
  403f31:	mov    WORD PTR [rsp+0x2],ax
  403f36:	mov    QWORD PTR [rsp+0x8],0x0
  403f3f:	mov    QWORD PTR [rsp+0x10],0x0
  403f48:	call   4023b0 <getpid@plt>
  403f4d:	mov    rbx,0x409b40
  403f54:	mov    edx,0x1
  403f59:	mov    rdi,rbp
  403f5c:	mov    DWORD PTR [rsp+0x18],eax
  403f60:	mov    esi,0x42
  403f65:	movabs rax,0xffffffff00000000
  403f6f:	mov    QWORD PTR [rbx+0x10],rax
  403f73:	xor    eax,eax
  403f75:	mov    QWORD PTR [rbx+0x8],0x0
  403f7d:	mov    WORD PTR [rsp],dx
  403f81:	mov    edx,0x1b6
  403f86:	mov    DWORD PTR [rbx+0x18],0x0
  403f8d:	call   4024b0 <open@plt>
  403f92:	mov    ebp,eax
  403f94:	xor    eax,eax
  403f96:	test   ebp,ebp
  403f98:	js     403fe8 <b64_decode@@Base+0x6c2>
  403f9a:	mov    r12,rsp
  403f9d:	xor    eax,eax
  403f9f:	mov    rdx,r12
  403fa2:	mov    esi,0x7
  403fa7:	mov    edi,ebp
  403fa9:	call   402380 <fcntl@plt>
  403fae:	test   eax,eax
  403fb0:	je     403fbc <b64_decode@@Base+0x696>
  403fb2:	call   402310 <__errno_location@plt>
  403fb7:	cmp    DWORD PTR [rax],0x4
  403fba:	je     403f9d <b64_decode@@Base+0x677>
  403fbc:	lea    rsi,[rip+0x29ed]        # 4069b0 <_IO_stdin_used@@Base+0x9b0>
  403fc3:	mov    edi,ebp
  403fc5:	call   4024a0 <fdopen@plt>
  403fca:	mov    QWORD PTR [rbx],rax
  403fcd:	test   rax,rax
  403fd0:	je     403ff8 <b64_decode@@Base+0x6d2>
  403fd2:	mov    rdi,rax
  403fd5:	xor    esi,esi
  403fd7:	mov    DWORD PTR [rbx+0x1c],0x1
  403fde:	call   402400 <setbuf@plt>
  403fe3:	mov    eax,0x1
  403fe8:	add    rsp,0x20
  403fec:	pop    rbx
  403fed:	pop    rbp
  403fee:	pop    r12
  403ff0:	ret    
  403ff1:	nop    DWORD PTR [rax+0x0]
  403ff8:	mov    edi,ebp
  403ffa:	call   402420 <close@plt>
  403fff:	add    rsp,0x20
  404003:	xor    eax,eax
  404005:	pop    rbx
  404006:	pop    rbp
  404007:	pop    r12
  404009:	ret    
  40400a:	nop    WORD PTR [rax+rax*1+0x0]
  404010:	endbr64 
  404014:	push   rbx
  404015:	mov    rbx,0x409b40
  40401c:	mov    rdi,QWORD PTR [rbx]
  40401f:	test   rdi,rdi
  404022:	je     40403e <b64_decode@@Base+0x718>
  404024:	mov    eax,DWORD PTR [rbx+0xc]
  404027:	test   eax,eax
  404029:	jne    404050 <b64_decode@@Base+0x72a>
  40402b:	call   4023d0 <fclose@plt>
  404030:	mov    QWORD PTR [rbx],0x0
  404037:	mov    DWORD PTR [rbx+0x10],0x0
  40403e:	mov    eax,DWORD PTR [rbx+0x18]
  404041:	mov    DWORD PTR [rbx+0x1c],0x0
  404048:	pop    rbx
  404049:	ret    
  40404a:	nop    WORD PTR [rax+rax*1+0x0]
  404050:	mov    edx,DWORD PTR [rbx+0x1c]
  404053:	test   edx,edx
  404055:	jns    40402b <b64_decode@@Base+0x705>
  404057:	mov    edi,eax
  404059:	call   403bf0 <b64_decode@@Base+0x2ca>
  40405e:	mov    rdi,QWORD PTR [rbx]
  404061:	jmp    40402b <b64_decode@@Base+0x705>
  404063:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40406e:	xchg   ax,ax
  404070:	endbr64 
  404074:	push   rbx
  404075:	mov    ebx,edi
  404077:	mov    edi,0x1
  40407c:	call   403c40 <b64_decode@@Base+0x31a>
  404081:	mov    DWORD PTR [rax],ebx
  404083:	pop    rbx
  404084:	ret    
  404085:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404090:	endbr64 
  404094:	push   rbx
  404095:	mov    rbx,rdi
  404098:	mov    edi,0x2
  40409d:	call   403c40 <b64_decode@@Base+0x31a>
  4040a2:	mov    QWORD PTR [rax],rbx
  4040a5:	pop    rbx
  4040a6:	ret    
  4040a7:	nop    WORD PTR [rax+rax*1+0x0]
  4040b0:	endbr64 
  4040b4:	push   rbp
  4040b5:	mov    ebp,edi
  4040b7:	mov    edi,0x2
  4040bc:	push   rbx
  4040bd:	mov    ebx,esi
  4040bf:	sub    rsp,0x8
  4040c3:	call   403c40 <b64_decode@@Base+0x31a>
  4040c8:	mov    DWORD PTR [rax],ebp
  4040ca:	mov    DWORD PTR [rax+0x4],ebx
  4040cd:	add    rsp,0x8
  4040d1:	pop    rbx
  4040d2:	pop    rbp
  4040d3:	ret    
  4040d4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4040df:	nop
  4040e0:	endbr64 
  4040e4:	push   r14
  4040e6:	xor    ecx,ecx
  4040e8:	push   r13
  4040ea:	mov    r13d,edi
  4040ed:	mov    edi,0x1
  4040f2:	push   r12
  4040f4:	xor    r12d,r12d
  4040f7:	push   rbp
  4040f8:	mov    rbp,rsi
  4040fb:	push   rbx
  4040fc:	lea    rbx,[rsi+0x28]
  404100:	mov    rax,rbx
  404103:	sub    rsp,0x20
  404107:	mov    QWORD PTR [rsp],0x0
  40410f:	mov    QWORD PTR [rsp+0x8],0x0
  404118:	mov    QWORD PTR [rsp+0x10],0x0
  404121:	mov    QWORD PTR [rsp+0x18],0x0
  40412a:	nop    WORD PTR [rax+rax*1+0x0]
  404130:	mov    edx,DWORD PTR [rax]
  404132:	test   edx,edx
  404134:	je     404146 <b64_decode@@Base+0x820>
  404136:	mov    edx,ecx
  404138:	mov    esi,edi
  40413a:	add    r12d,0x1
  40413e:	shr    edx,0x5
  404141:	shl    esi,cl
  404143:	or     DWORD PTR [rsp+rdx*4],esi
  404146:	add    ecx,0x1
  404149:	add    rax,0x18
  40414d:	cmp    ecx,0xfc
  404153:	jne    404130 <b64_decode@@Base+0x80a>
  404155:	mov    edi,0x2
  40415a:	lea    r14,[rsp+0x20]
  40415f:	call   403c40 <b64_decode@@Base+0x31a>
  404164:	lea    edx,[r12+r12*4+0x11]
  404169:	mov    edi,0x1
  40416e:	mov    DWORD PTR [rax+0x4],edx
  404171:	mov    DWORD PTR [rax],r13d
  404174:	mov    r12d,DWORD PTR [rbp+0x0]
  404178:	call   403c40 <b64_decode@@Base+0x31a>
  40417d:	mov    edi,0x1
  404182:	mov    DWORD PTR [rax],r12d
  404185:	mov    r12d,DWORD PTR [rbp+0x8]
  404189:	call   403c40 <b64_decode@@Base+0x31a>
  40418e:	mov    edi,0x1
  404193:	mov    DWORD PTR [rax],r12d
  404196:	mov    r12d,DWORD PTR [rbp+0xc]
  40419a:	call   403c40 <b64_decode@@Base+0x31a>
  40419f:	mov    edi,0x2
  4041a4:	mov    DWORD PTR [rax],r12d
  4041a7:	mov    r12,QWORD PTR [rbp+0x10]
  4041ab:	call   403c40 <b64_decode@@Base+0x31a>
  4041b0:	mov    edi,0x2
  4041b5:	mov    QWORD PTR [rax],r12
  4041b8:	mov    r12,QWORD PTR [rbp+0x18]
  4041bc:	call   403c40 <b64_decode@@Base+0x31a>
  4041c1:	mov    edi,0x2
  4041c6:	mov    QWORD PTR [rax],r12
  4041c9:	mov    r12,QWORD PTR [rbp+0x20]
  4041cd:	call   403c40 <b64_decode@@Base+0x31a>
  4041d2:	mov    QWORD PTR [rax],r12
  4041d5:	mov    r12,rsp
  4041d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4041e0:	mov    r13d,DWORD PTR [r12]
  4041e4:	mov    edi,0x1
  4041e9:	add    r12,0x4
  4041ed:	call   403c40 <b64_decode@@Base+0x31a>
  4041f2:	mov    DWORD PTR [rax],r13d
  4041f5:	cmp    r14,r12
  4041f8:	jne    4041e0 <b64_decode@@Base+0x8ba>
  4041fa:	lea    r12,[rbp+0x17c8]
  404201:	nop    DWORD PTR [rax+0x0]
  404208:	mov    ebp,DWORD PTR [rbx]
  40420a:	test   ebp,ebp
  40420c:	je     40423c <b64_decode@@Base+0x916>
  40420e:	mov    edi,0x1
  404213:	call   403c40 <b64_decode@@Base+0x31a>
  404218:	mov    edi,0x2
  40421d:	mov    DWORD PTR [rax],ebp
  40421f:	mov    rbp,QWORD PTR [rbx+0x8]
  404223:	call   403c40 <b64_decode@@Base+0x31a>
  404228:	mov    edi,0x2
  40422d:	mov    QWORD PTR [rax],rbp
  404230:	mov    rbp,QWORD PTR [rbx+0x10]
  404234:	call   403c40 <b64_decode@@Base+0x31a>
  404239:	mov    QWORD PTR [rax],rbp
  40423c:	add    rbx,0x18
  404240:	cmp    rbx,r12
  404243:	jne    404208 <b64_decode@@Base+0x8e2>
  404245:	add    rsp,0x20
  404249:	pop    rbx
  40424a:	pop    rbp
  40424b:	pop    r12
  40424d:	pop    r13
  40424f:	pop    r14
  404251:	ret    
  404252:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40425d:	nop    DWORD PTR [rax]
  404260:	endbr64 
  404264:	sub    rsp,0x8
  404268:	mov    edi,0x1
  40426d:	call   403c90 <b64_decode@@Base+0x36a>
  404272:	test   rax,rax
  404275:	je     404280 <b64_decode@@Base+0x95a>
  404277:	mov    eax,DWORD PTR [rax]
  404279:	add    rsp,0x8
  40427d:	ret    
  40427e:	xchg   ax,ax
  404280:	xor    eax,eax
  404282:	add    rsp,0x8
  404286:	ret    
  404287:	nop    WORD PTR [rax+rax*1+0x0]
  404290:	endbr64 
  404294:	sub    rsp,0x8
  404298:	mov    edi,0x2
  40429d:	call   403c90 <b64_decode@@Base+0x36a>
  4042a2:	test   rax,rax
  4042a5:	je     4042b0 <b64_decode@@Base+0x98a>
  4042a7:	mov    rax,QWORD PTR [rax]
  4042aa:	add    rsp,0x8
  4042ae:	ret    
  4042af:	nop
  4042b0:	xor    eax,eax
  4042b2:	add    rsp,0x8
  4042b6:	ret    
  4042b7:	nop    WORD PTR [rax+rax*1+0x0]
  4042c0:	endbr64 
  4042c4:	push   r15
  4042c6:	push   r14
  4042c8:	push   r13
  4042ca:	push   r12
  4042cc:	mov    r12,rdi
  4042cf:	mov    edi,0x1
  4042d4:	push   rbp
  4042d5:	push   rbx
  4042d6:	sub    rsp,0x28
  4042da:	call   403c90 <b64_decode@@Base+0x36a>
  4042df:	test   rax,rax
  4042e2:	je     40452f <b64_decode@@Base+0xc09>
  4042e8:	mov    eax,DWORD PTR [rax]
  4042ea:	mov    DWORD PTR [r12],eax
  4042ee:	mov    edi,0x1
  4042f3:	call   403c90 <b64_decode@@Base+0x36a>
  4042f8:	test   rax,rax
  4042fb:	je     404536 <b64_decode@@Base+0xc10>
  404301:	mov    eax,DWORD PTR [rax]
  404303:	mov    DWORD PTR [r12+0x8],eax
  404308:	mov    edi,0x1
  40430d:	call   403c90 <b64_decode@@Base+0x36a>
  404312:	test   rax,rax
  404315:	je     40453d <b64_decode@@Base+0xc17>
  40431b:	mov    eax,DWORD PTR [rax]
  40431d:	mov    DWORD PTR [r12+0xc],eax
  404322:	mov    edi,0x2
  404327:	call   403c90 <b64_decode@@Base+0x36a>
  40432c:	test   rax,rax
  40432f:	je     404544 <b64_decode@@Base+0xc1e>
  404335:	mov    rax,QWORD PTR [rax]
  404338:	mov    QWORD PTR [r12+0x10],rax
  40433d:	mov    edi,0x2
  404342:	call   403c90 <b64_decode@@Base+0x36a>
  404347:	test   rax,rax
  40434a:	je     40454b <b64_decode@@Base+0xc25>
  404350:	mov    rax,QWORD PTR [rax]
  404353:	mov    QWORD PTR [r12+0x18],rax
  404358:	mov    edi,0x2
  40435d:	call   403c90 <b64_decode@@Base+0x36a>
  404362:	test   rax,rax
  404365:	je     404552 <b64_decode@@Base+0xc2c>
  40436b:	mov    rax,QWORD PTR [rax]
  40436e:	lea    rdi,[r12+0x30]
  404373:	mov    QWORD PTR [r12+0x20],rax
  404378:	mov    eax,r12d
  40437b:	mov    rbx,rsp
  40437e:	and    rdi,0xfffffffffffffff8
  404382:	lea    r13,[rsp+0x20]
  404387:	xor    r15d,r15d
  40438a:	mov    QWORD PTR [r12+0x28],0x0
  404393:	mov    QWORD PTR [r12+0x17c0],0x0
  40439f:	sub    eax,edi
  4043a1:	lea    ecx,[rax+0x17c8]
  4043a7:	xor    eax,eax
  4043a9:	shr    ecx,0x3
  4043ac:	rep stos QWORD PTR es:[rdi],rax
  4043af:	jmp    4043d1 <b64_decode@@Base+0xaab>
  4043b1:	nop    DWORD PTR [rax+0x0]
  4043b8:	mov    edi,DWORD PTR [rax]
  4043ba:	add    rbx,0x4
  4043be:	mov    rbp,rdi
  4043c1:	call   405d60 <__gcov_sort_n_vals@@Base+0x17b0>
  4043c6:	mov    DWORD PTR [rbx-0x4],ebp
  4043c9:	add    r15d,eax
  4043cc:	cmp    r13,rbx
  4043cf:	je     4043f0 <b64_decode@@Base+0xaca>
  4043d1:	mov    edi,0x1
  4043d6:	call   403c90 <b64_decode@@Base+0x36a>
  4043db:	test   rax,rax
  4043de:	jne    4043b8 <b64_decode@@Base+0xa92>
  4043e0:	xor    ebp,ebp
  4043e2:	add    rbx,0x4
  4043e6:	mov    DWORD PTR [rbx-0x4],ebp
  4043e9:	cmp    r13,rbx
  4043ec:	jne    4043d1 <b64_decode@@Base+0xaab>
  4043ee:	xchg   ax,ax
  4043f0:	lea    r13d,[r15-0x1]
  4043f4:	xor    ebx,ebx
  4043f6:	xor    ebp,ebp
  4043f8:	xor    r14d,r14d
  4043fb:	test   r15d,r15d
  4043fe:	je     4044d7 <b64_decode@@Base+0xbb1>
  404404:	nop    DWORD PTR [rax+0x0]
  404408:	test   ebx,ebx
  40440a:	je     40441e <b64_decode@@Base+0xaf8>
  40440c:	jmp    404456 <b64_decode@@Base+0xb30>
  40440e:	xchg   ax,ax
  404410:	mov    eax,ebp
  404412:	lea    ecx,[rbp+0x1]
  404415:	mov    ebx,DWORD PTR [rsp+rax*4]
  404418:	test   ebx,ebx
  40441a:	jne    40443d <b64_decode@@Base+0xb17>
  40441c:	mov    ebp,ecx
  40441e:	cmp    ebp,0x7
  404421:	jbe    404410 <b64_decode@@Base+0xaea>
  404423:	lea    rdi,[rip+0x2686]        # 406ab0 <_IO_stdin_used@@Base+0xab0>
  40442a:	xor    eax,eax
  40442c:	call   403d30 <b64_decode@@Base+0x40a>
  404431:	mov    eax,ebp
  404433:	lea    ecx,[rbp+0x1]
  404436:	mov    ebx,DWORD PTR [rsp+rax*4]
  404439:	test   ebx,ebx
  40443b:	je     40441c <b64_decode@@Base+0xaf6>
  40443d:	mov    r14d,ebp
  404440:	mov    ebp,ecx
  404442:	shl    r14d,0x5
  404446:	test   bl,0x1
  404449:	jne    40445b <b64_decode@@Base+0xb35>
  40444b:	nop    DWORD PTR [rax+rax*1+0x0]
  404450:	add    r14d,0x1
  404454:	shr    ebx,1
  404456:	test   bl,0x1
  404459:	je     404450 <b64_decode@@Base+0xb2a>
  40445b:	cmp    r14d,0xfb
  404462:	ja     4044f0 <b64_decode@@Base+0xbca>
  404468:	mov    edi,0x1
  40446d:	call   403c90 <b64_decode@@Base+0x36a>
  404472:	test   rax,rax
  404475:	je     404511 <b64_decode@@Base+0xbeb>
  40447b:	mov    ecx,DWORD PTR [rax]
  40447d:	mov    r15d,r14d
  404480:	mov    edi,0x2
  404485:	lea    rax,[r15+r15*2]
  404489:	mov    DWORD PTR [r12+rax*8+0x28],ecx
  40448e:	call   403c90 <b64_decode@@Base+0x36a>
  404493:	test   rax,rax
  404496:	je     404528 <b64_decode@@Base+0xc02>
  40449c:	mov    rcx,QWORD PTR [rax]
  40449f:	lea    rax,[r15+r15*2]
  4044a3:	mov    edi,0x2
  4044a8:	mov    QWORD PTR [r12+rax*8+0x30],rcx
  4044ad:	call   403c90 <b64_decode@@Base+0x36a>
  4044b2:	test   rax,rax
  4044b5:	je     404520 <b64_decode@@Base+0xbfa>
  4044b7:	mov    rcx,QWORD PTR [rax]
  4044ba:	lea    rax,[r15+r15*2]
  4044be:	sub    r13d,0x1
  4044c2:	shr    ebx,1
  4044c4:	add    r14d,0x1
  4044c8:	mov    QWORD PTR [r12+rax*8+0x38],rcx
  4044cd:	cmp    r13d,0xffffffff
  4044d1:	jne    404408 <b64_decode@@Base+0xae2>
  4044d7:	add    rsp,0x28
  4044db:	pop    rbx
  4044dc:	pop    rbp
  4044dd:	pop    r12
  4044df:	pop    r13
  4044e1:	pop    r14
  4044e3:	pop    r15
  4044e5:	ret    
  4044e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044f0:	lea    rdi,[rip+0x25f9]        # 406af0 <_IO_stdin_used@@Base+0xaf0>
  4044f7:	xor    eax,eax
  4044f9:	call   403d30 <b64_decode@@Base+0x40a>
  4044fe:	mov    edi,0x1
  404503:	call   403c90 <b64_decode@@Base+0x36a>
  404508:	test   rax,rax
  40450b:	jne    40447b <b64_decode@@Base+0xb55>
  404511:	xor    ecx,ecx
  404513:	jmp    40447d <b64_decode@@Base+0xb57>
  404518:	nop    DWORD PTR [rax+rax*1+0x0]
  404520:	xor    ecx,ecx
  404522:	jmp    4044ba <b64_decode@@Base+0xb94>
  404524:	nop    DWORD PTR [rax+0x0]
  404528:	xor    ecx,ecx
  40452a:	jmp    40449f <b64_decode@@Base+0xb79>
  40452f:	xor    eax,eax
  404531:	jmp    4042ea <b64_decode@@Base+0x9c4>
  404536:	xor    eax,eax
  404538:	jmp    404303 <b64_decode@@Base+0x9dd>
  40453d:	xor    eax,eax
  40453f:	jmp    40431d <b64_decode@@Base+0x9f7>
  404544:	xor    eax,eax
  404546:	jmp    404338 <b64_decode@@Base+0xa12>
  40454b:	xor    eax,eax
  40454d:	jmp    404353 <b64_decode@@Base+0xa2d>
  404552:	xor    eax,eax
  404554:	jmp    40436e <b64_decode@@Base+0xa48>
  404559:	nop    DWORD PTR [rax+0x0]
  404560:	endbr64 
  404564:	push   rbp
  404565:	push   rbx
  404566:	mov    ebx,edi
  404568:	sub    rsp,0x8
  40456c:	mov    rbp,0x409b40
  404573:	mov    edi,DWORD PTR [rbp+0xc]
  404576:	test   edi,edi
  404578:	jne    4045a8 <b64_decode@@Base+0xc82>
  40457a:	mov    rdi,QWORD PTR [rbp+0x0]
  40457e:	lea    esi,[rbx*4+0x0]
  404585:	xor    edx,edx
  404587:	call   402480 <fseek@plt>
  40458c:	mov    rdi,QWORD PTR [rbp+0x0]
  404590:	call   402430 <ftell@plt>
  404595:	sar    rax,0x2
  404599:	mov    DWORD PTR [rbp+0x8],eax
  40459c:	add    rsp,0x8
  4045a0:	pop    rbx
  4045a1:	pop    rbp
  4045a2:	ret    
  4045a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4045a8:	call   403bf0 <b64_decode@@Base+0x2ca>
  4045ad:	jmp    40457a <b64_decode@@Base+0xc54>
  4045af:	nop

00000000004045b0 <__gcov_sort_n_vals@@Base>:
  4045b0:	endbr64 
  4045b4:	cmp    esi,0x2
  4045b7:	jle    404651 <__gcov_sort_n_vals@@Base+0xa1>
  4045bd:	sub    esi,0x3
  4045c0:	push   rbp
  4045c1:	lea    r9,[rdi+0x8]
  4045c5:	mov    r11,0xfffffffffffffff0
  4045cc:	shr    esi,1
  4045ce:	push   rbx
  4045cf:	xor    r10d,r10d
  4045d2:	mov    eax,esi
  4045d4:	lea    rbp,[rax+rax*1+0x2]
  4045d9:	nop    DWORD PTR [rax+0x0]
  4045e0:	mov    rbx,QWORD PTR [r9+0x8]
  4045e4:	mov    rsi,QWORD PTR [r9+0x10]
  4045e8:	cmp    rsi,QWORD PTR [r9]
  4045eb:	jle    40464c <__gcov_sort_n_vals@@Base+0x9c>
  4045ed:	mov    eax,r10d
  4045f0:	lea    rcx,[r10-0x2]
  4045f4:	lea    r8,[r9+r11*1]
  4045f8:	shr    eax,1
  4045fa:	add    rax,rax
  4045fd:	sub    rcx,rax
  404600:	mov    rax,r10
  404603:	jmp    40460f <__gcov_sort_n_vals@@Base+0x5f>
  404605:	nop    DWORD PTR [rax]
  404608:	cmp    rsi,QWORD PTR [rdi+rax*8+0x8]
  40460d:	jle    40462b <__gcov_sort_n_vals@@Base+0x7b>
  40460f:	mov    rdx,QWORD PTR [rdi+rax*8]
  404613:	mov    QWORD PTR [rdi+rax*8+0x10],rdx
  404618:	mov    rdx,QWORD PTR [r8+rax*8+0x10]
  40461d:	mov    QWORD PTR [rdi+rax*8+0x18],rdx
  404622:	sub    rax,0x2
  404626:	cmp    rax,rcx
  404629:	jne    404608 <__gcov_sort_n_vals@@Base+0x58>
  40462b:	add    rax,0x2
  40462f:	add    r10,0x2
  404633:	add    r9,0x10
  404637:	sub    r11,0x10
  40463b:	mov    QWORD PTR [rdi+rax*8],rbx
  40463f:	mov    QWORD PTR [rdi+rax*8+0x8],rsi
  404644:	cmp    rbp,r10
  404647:	jne    4045e0 <__gcov_sort_n_vals@@Base+0x30>
  404649:	pop    rbx
  40464a:	pop    rbp
  40464b:	ret    
  40464c:	mov    rax,r10
  40464f:	jmp    40462b <__gcov_sort_n_vals@@Base+0x7b>
  404651:	ret    
  404652:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40465d:	nop    DWORD PTR [rax]
  404660:	push   r15
  404662:	push   r14
  404664:	push   r13
  404666:	push   r12
  404668:	push   rbp
  404669:	push   rbx
  40466a:	lea    r11,[rsp-0x4000]
  404672:	sub    rsp,0x1000
  404679:	or     QWORD PTR [rsp],0x0
  40467e:	cmp    rsp,r11
  404681:	jne    404672 <__gcov_sort_n_vals@@Base+0xc2>
  404683:	sub    rsp,0x7e8
  40468a:	mov    ecx,0x2f9
  40468f:	xor    eax,eax
  404691:	mov    r13,rdi
  404694:	lea    rdi,[rsp+0x70]
  404699:	mov    DWORD PTR [rsp+0x3c],esi
  40469d:	mov    QWORD PTR [rsp+0x8],rdi
  4046a2:	rep stos QWORD PTR es:[rdi],rax
  4046a5:	test   r13,r13
  4046a8:	je     405ab0 <__gcov_sort_n_vals@@Base+0x1500>
  4046ae:	mov    DWORD PTR [rsp+0x10],0x0
  4046b6:	mov    rbx,r13
  4046b9:	xor    ebp,ebp
  4046bb:	xor    r12d,r12d
  4046be:	mov    QWORD PTR [rsp+0x18],r13
  4046c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4046c8:	mov    rdi,QWORD PTR [rbx+0x18]
  4046cc:	call   4023e0 <strlen@plt>
  4046d1:	mov    ecx,DWORD PTR [rbx+0x10]
  4046d4:	mov    edx,0x20
  4046d9:	cmp    rbp,rax
  4046dc:	cmovb  rbp,rax
  4046e0:	mov    eax,ecx
  4046e2:	add    ecx,ecx
  4046e4:	xor    eax,r12d
  4046e7:	add    r12d,r12d
  4046ea:	sar    eax,0x1f
  4046ed:	and    eax,0x4c11db7
  4046f2:	xor    r12d,eax
  4046f5:	sub    edx,0x1
  4046f8:	jne    4046e0 <__gcov_sort_n_vals@@Base+0x130>
  4046fa:	mov    esi,DWORD PTR [rbx+0x68]
  4046fd:	mov    edx,0x20
  404702:	mov    ecx,esi
  404704:	nop    DWORD PTR [rax+0x0]
  404708:	mov    eax,r12d
  40470b:	add    r12d,r12d
  40470e:	xor    eax,ecx
  404710:	add    ecx,ecx
  404712:	sar    eax,0x1f
  404715:	and    eax,0x4c11db7
  40471a:	xor    r12d,eax
  40471d:	sub    edx,0x1
  404720:	jne    404708 <__gcov_sort_n_vals@@Base+0x158>
  404722:	test   esi,esi
  404724:	je     4048a7 <__gcov_sort_n_vals@@Base+0x2f7>
  40472a:	mov    rax,QWORD PTR [rbx+0x70]
  40472e:	lea    edx,[rsi-0x1]
  404731:	mov    edi,DWORD PTR [rsp+0x10]
  404735:	xor    r11d,r11d
  404738:	mov    r8,QWORD PTR [rsp+0x80]
  404740:	mov    r9,QWORD PTR [rsp+0x88]
  404748:	xor    r10d,r10d
  40474b:	xor    r14d,r14d
  40474e:	lea    rcx,[rax+0x8]
  404752:	lea    r13,[rcx+rdx*8]
  404756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404760:	mov    rax,QWORD PTR [rax]
  404763:	xor    esi,esi
  404765:	test   rax,rax
  404768:	je     404775 <__gcov_sort_n_vals@@Base+0x1c5>
  40476a:	cmp    QWORD PTR [rax],rbx
  40476d:	je     404870 <__gcov_sort_n_vals@@Base+0x2c0>
  404773:	xor    eax,eax
  404775:	mov    r15d,0x20
  40477b:	nop    DWORD PTR [rax+rax*1+0x0]
  404780:	mov    edx,r12d
  404783:	add    r12d,r12d
  404786:	xor    edx,esi
  404788:	add    esi,esi
  40478a:	sar    edx,0x1f
  40478d:	and    edx,0x4c11db7
  404793:	xor    r12d,edx
  404796:	sub    r15d,0x1
  40479a:	jne    404780 <__gcov_sort_n_vals@@Base+0x1d0>
  40479c:	xor    esi,esi
  40479e:	test   rax,rax
  4047a1:	je     4047a6 <__gcov_sort_n_vals@@Base+0x1f6>
  4047a3:	mov    esi,DWORD PTR [rax+0xc]
  4047a6:	mov    r15d,0x20
  4047ac:	nop    DWORD PTR [rax+0x0]
  4047b0:	mov    edx,esi
  4047b2:	add    esi,esi
  4047b4:	xor    edx,r12d
  4047b7:	add    r12d,r12d
  4047ba:	sar    edx,0x1f
  4047bd:	and    edx,0x4c11db7
  4047c3:	xor    r12d,edx
  4047c6:	sub    r15d,0x1
  4047ca:	jne    4047b0 <__gcov_sort_n_vals@@Base+0x200>
  4047cc:	test   rax,rax
  4047cf:	je     40485c <__gcov_sort_n_vals@@Base+0x2ac>
  4047d5:	cmp    QWORD PTR [rbx+0x20],0x0
  4047da:	je     40485c <__gcov_sort_n_vals@@Base+0x2ac>
  4047e0:	mov    esi,DWORD PTR [rax+0x18]
  4047e3:	mov    r14d,0x20
  4047e9:	add    edi,esi
  4047eb:	mov    r15d,esi
  4047ee:	xchg   ax,ax
  4047f0:	mov    edx,r15d
  4047f3:	add    r15d,r15d
  4047f6:	xor    edx,r12d
  4047f9:	add    r12d,r12d
  4047fc:	sar    edx,0x1f
  4047ff:	and    edx,0x4c11db7
  404805:	xor    r12d,edx
  404808:	sub    r14d,0x1
  40480c:	jne    4047f0 <__gcov_sort_n_vals@@Base+0x240>
  40480e:	test   esi,esi
  404810:	je     404c50 <__gcov_sort_n_vals@@Base+0x6a0>
  404816:	mov    rdx,QWORD PTR [rax+0x20]
  40481a:	sub    esi,0x1
  40481d:	lea    rax,[rdx+0x8]
  404821:	lea    rsi,[rax+rsi*8]
  404825:	jmp    404834 <__gcov_sort_n_vals@@Base+0x284>
  404827:	nop    WORD PTR [rax+rax*1+0x0]
  404830:	add    rax,0x8
  404834:	mov    rdx,QWORD PTR [rdx]
  404837:	add    r8,rdx
  40483a:	cmp    rdx,r9
  40483d:	jle    404848 <__gcov_sort_n_vals@@Base+0x298>
  40483f:	mov    r9,rdx
  404842:	mov    r11d,0x1
  404848:	mov    rdx,rax
  40484b:	cmp    rax,rsi
  40484e:	jne    404830 <__gcov_sort_n_vals@@Base+0x280>
  404850:	mov    r10d,0x1
  404856:	mov    r14d,0x1
  40485c:	mov    rax,rcx
  40485f:	cmp    rcx,r13
  404862:	je     404880 <__gcov_sort_n_vals@@Base+0x2d0>
  404864:	add    rcx,0x8
  404868:	jmp    404760 <__gcov_sort_n_vals@@Base+0x1b0>
  40486d:	nop    DWORD PTR [rax]
  404870:	mov    esi,DWORD PTR [rax+0x10]
  404873:	jmp    404775 <__gcov_sort_n_vals@@Base+0x1c5>
  404878:	nop    DWORD PTR [rax+rax*1+0x0]
  404880:	test   r14b,r14b
  404883:	je     40488d <__gcov_sort_n_vals@@Base+0x2dd>
  404885:	mov    DWORD PTR [rsp+0x78],edi
  404889:	mov    DWORD PTR [rsp+0x10],edi
  40488d:	test   r10b,r10b
  404890:	je     40489a <__gcov_sort_n_vals@@Base+0x2ea>
  404892:	mov    QWORD PTR [rsp+0x80],r8
  40489a:	test   r11b,r11b
  40489d:	je     4048a7 <__gcov_sort_n_vals@@Base+0x2f7>
  40489f:	mov    QWORD PTR [rsp+0x88],r9
  4048a7:	mov    rbx,QWORD PTR [rbx+0x8]
  4048ab:	test   rbx,rbx
  4048ae:	jne    4046c8 <__gcov_sort_n_vals@@Base+0x118>
  4048b4:	mov    r14d,DWORD PTR [rsp+0x10]
  4048b9:	mov    DWORD PTR [rsp+0x48],r12d
  4048be:	add    rbp,0x2
  4048c2:	mov    r13,QWORD PTR [rsp+0x18]
  4048c7:	test   r14d,r14d
  4048ca:	je     404a0d <__gcov_sort_n_vals@@Base+0x45d>
  4048d0:	mov    rbx,QWORD PTR [rsp+0x8]
  4048d5:	mov    rcx,QWORD PTR [rsp+0x88]
  4048dd:	lea    rax,[rbx+0x28]
  4048e1:	lea    rdx,[rbx+0x17c8]
  4048e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4048f0:	mov    DWORD PTR [rax],0x0
  4048f6:	add    rax,0x18
  4048fa:	mov    QWORD PTR [rax-0x10],rcx
  4048fe:	mov    QWORD PTR [rax-0x8],0x0
  404906:	cmp    rdx,rax
  404909:	jne    4048f0 <__gcov_sort_n_vals@@Base+0x340>
  40490b:	mov    rax,QWORD PTR [rsp+0x8]
  404910:	mov    r8,r13
  404913:	mov    ebx,0x4000003e
  404918:	mov    r14d,0x3f
  40491e:	mov    r12d,0x3d
  404924:	lea    r11,[rax+0x28]
  404928:	nop    DWORD PTR [rax+rax*1+0x0]
  404930:	cmp    QWORD PTR [r8+0x20],0x0
  404935:	je     404a00 <__gcov_sort_n_vals@@Base+0x450>
  40493b:	mov    edx,DWORD PTR [r8+0x68]
  40493f:	test   edx,edx
  404941:	je     404a00 <__gcov_sort_n_vals@@Base+0x450>
  404947:	mov    rax,QWORD PTR [r8+0x70]
  40494b:	sub    edx,0x1
  40494e:	lea    rdi,[rax+0x8]
  404952:	lea    r10,[rdi+rdx*8]
  404956:	jmp    404970 <__gcov_sort_n_vals@@Base+0x3c0>
  404958:	nop    DWORD PTR [rax+rax*1+0x0]
  404960:	mov    rax,rdi
  404963:	cmp    r10,rdi
  404966:	je     404a00 <__gcov_sort_n_vals@@Base+0x450>
  40496c:	add    rdi,0x8
  404970:	mov    rax,QWORD PTR [rax]
  404973:	test   rax,rax
  404976:	je     404960 <__gcov_sort_n_vals@@Base+0x3b0>
  404978:	cmp    r8,QWORD PTR [rax]
  40497b:	jne    404960 <__gcov_sort_n_vals@@Base+0x3b0>
  40497d:	mov    edx,DWORD PTR [rax+0x18]
  404980:	test   edx,edx
  404982:	je     404960 <__gcov_sort_n_vals@@Base+0x3b0>
  404984:	mov    rax,QWORD PTR [rax+0x20]
  404988:	sub    edx,0x1
  40498b:	lea    rsi,[rax+0x8]
  40498f:	lea    r9,[rsi+rdx*8]
  404993:	jmp    4049ee <__gcov_sort_n_vals@@Base+0x43e>
  404995:	nop    DWORD PTR [rax]
  404998:	bsr    rdx,rax
  40499c:	mov    ecx,r14d
  40499f:	xor    rdx,0x3f
  4049a3:	sub    ecx,edx
  4049a5:	cmp    ecx,0x1
  4049a8:	jbe    4049f6 <__gcov_sort_n_vals@@Base+0x446>
  4049aa:	mov    ecx,r12d
  4049ad:	mov    r15,rax
  4049b0:	sub    ecx,edx
  4049b2:	shr    r15,cl
  4049b5:	mov    rcx,r15
  4049b8:	mov    r15d,ebx
  4049bb:	and    ecx,0x3
  4049be:	sub    r15d,edx
  4049c1:	lea    edx,[rcx+r15*4]
  4049c5:	lea    rdx,[rdx+rdx*2]
  4049c9:	lea    rdx,[r11+rdx*8]
  4049cd:	add    DWORD PTR [rdx],0x1
  4049d0:	add    QWORD PTR [rdx+0x10],rax
  4049d4:	cmp    rax,QWORD PTR [rdx+0x8]
  4049d8:	jge    4049de <__gcov_sort_n_vals@@Base+0x42e>
  4049da:	mov    QWORD PTR [rdx+0x8],rax
  4049de:	mov    rax,rsi
  4049e1:	cmp    r9,rsi
  4049e4:	je     404960 <__gcov_sort_n_vals@@Base+0x3b0>
  4049ea:	add    rsi,0x8
  4049ee:	mov    rax,QWORD PTR [rax]
  4049f1:	test   rax,rax
  4049f4:	jne    404998 <__gcov_sort_n_vals@@Base+0x3e8>
  4049f6:	mov    edx,eax
  4049f8:	jmp    4049c5 <__gcov_sort_n_vals@@Base+0x415>
  4049fa:	nop    WORD PTR [rax+rax*1+0x0]
  404a00:	mov    r8,QWORD PTR [r8+0x8]
  404a04:	test   r8,r8
  404a07:	jne    404930 <__gcov_sort_n_vals@@Base+0x380>
  404a0d:	lea    rdi,[rip+0x1fee]        # 406a02 <_IO_stdin_used@@Base+0xa02>
  404a14:	call   4022b0 <getenv@plt>
  404a19:	test   rax,rax
  404a1c:	je     4055c8 <__gcov_sort_n_vals@@Base+0x1018>
  404a22:	xor    esi,esi
  404a24:	mov    edx,0xa
  404a29:	mov    rdi,rax
  404a2c:	call   402450 <strtol@plt>
  404a31:	mov    edx,0x0
  404a36:	lea    rdi,[rip+0x1fd7]        # 406a14 <_IO_stdin_used@@Base+0xa14>
  404a3d:	test   eax,eax
  404a3f:	cmovns edx,eax
  404a42:	mov    DWORD PTR [rsp+0x38],edx
  404a46:	call   4022b0 <getenv@plt>
  404a4b:	mov    rbx,rax
  404a4e:	test   rax,rax
  404a51:	je     405610 <__gcov_sort_n_vals@@Base+0x1060>
  404a57:	mov    rdi,rax
  404a5a:	call   4023e0 <strlen@plt>
  404a5f:	test   rax,rax
  404a62:	je     405610 <__gcov_sort_n_vals@@Base+0x1060>
  404a68:	lea    rsi,[rax-0x1]
  404a6c:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
  404a71:	mov    QWORD PTR [rsp+0x30],rsi
  404a76:	je     405605 <__gcov_sort_n_vals@@Base+0x1055>
  404a7c:	mov    QWORD PTR [rsp+0x30],rax
  404a81:	mov    r14,QWORD PTR [rsp+0x30]
  404a86:	lea    rdi,[rbp+r14*1+0x0]
  404a8b:	call   402470 <malloc@plt>
  404a90:	mov    rdx,r14
  404a93:	mov    rsi,rbx
  404a96:	mov    rdi,rax
  404a99:	mov    QWORD PTR [rsp+0x10],rax
  404a9e:	call   402460 <memcpy@plt>
  404aa3:	test   r13,r13
  404aa6:	je     404c30 <__gcov_sort_n_vals@@Base+0x680>
  404aac:	nop    DWORD PTR [rax+0x0]
  404ab0:	mov    QWORD PTR [rip+0x5045],0x0        # 409b00 <__gcov_error_file@@Base+0x10>
  404abb:	cmp    QWORD PTR [r13+0x60],0x0
  404ac0:	mov    QWORD PTR [rip+0x502d],0x0        # 409af8 <__gcov_error_file@@Base+0x8>
  404acb:	je     404b18 <__gcov_sort_n_vals@@Base+0x568>
  404acd:	mov    r11d,DWORD PTR [r13+0x68]
  404ad1:	test   r11d,r11d
  404ad4:	je     404b18 <__gcov_sort_n_vals@@Base+0x568>
  404ad6:	xor    r15d,r15d
  404ad9:	mov    ebx,0x38e38e39
  404ade:	xchg   ax,ax
  404ae0:	mov    rax,QWORD PTR [r13+0x70]
  404ae4:	mov    rcx,QWORD PTR [rax+r15*8]
  404ae8:	xor    eax,eax
  404aea:	add    rcx,0x18
  404aee:	cmp    QWORD PTR [r13+rax*8+0x20],0x0
  404af4:	je     404b04 <__gcov_sort_n_vals@@Base+0x554>
  404af6:	cmp    rax,0x8
  404afa:	je     404c60 <__gcov_sort_n_vals@@Base+0x6b0>
  404b00:	add    rcx,0x10
  404b04:	add    rax,0x1
  404b08:	cmp    rax,0x9
  404b0c:	jne    404aee <__gcov_sort_n_vals@@Base+0x53e>
  404b0e:	add    r15,0x1
  404b12:	cmp    DWORD PTR [r13+0x68],r15d
  404b16:	jne    404ae0 <__gcov_sort_n_vals@@Base+0x530>
  404b18:	mov    ebx,DWORD PTR [rsp+0x38]
  404b1c:	mov    rdi,QWORD PTR [rsp+0x10]
  404b21:	mov    rsi,QWORD PTR [r13+0x18]
  404b25:	add    rdi,QWORD PTR [rsp+0x30]
  404b2a:	test   ebx,ebx
  404b2c:	je     404b69 <__gcov_sort_n_vals@@Base+0x5b9>
  404b2e:	movzx  eax,BYTE PTR [rsi]
  404b31:	mov    rdx,rsi
  404b34:	cmp    al,0x2f
  404b36:	jne    404b40 <__gcov_sort_n_vals@@Base+0x590>
  404b38:	movzx  eax,BYTE PTR [rsi+0x1]
  404b3c:	lea    rdx,[rsi+0x1]
  404b40:	mov    ecx,DWORD PTR [rsp+0x38]
  404b44:	jmp    404b65 <__gcov_sort_n_vals@@Base+0x5b5>
  404b46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b50:	cmp    al,0x2f
  404b52:	jne    404b5a <__gcov_sort_n_vals@@Base+0x5aa>
  404b54:	sub    ecx,0x1
  404b57:	mov    rsi,rdx
  404b5a:	add    rdx,0x1
  404b5e:	movzx  eax,BYTE PTR [rdx]
  404b61:	test   ecx,ecx
  404b63:	je     404b69 <__gcov_sort_n_vals@@Base+0x5b9>
  404b65:	test   al,al
  404b67:	jne    404b50 <__gcov_sort_n_vals@@Base+0x5a0>
  404b69:	cmp    QWORD PTR [rsp+0x30],0x0
  404b6f:	je     404b7d <__gcov_sort_n_vals@@Base+0x5cd>
  404b71:	cmp    BYTE PTR [rsi],0x2f
  404b74:	je     404b7d <__gcov_sort_n_vals@@Base+0x5cd>
  404b76:	mov    BYTE PTR [rdi],0x2f
  404b79:	add    rdi,0x1
  404b7d:	call   402320 <strcpy@plt>
  404b82:	mov    rdi,QWORD PTR [rsp+0x10]
  404b87:	call   403f20 <b64_decode@@Base+0x5fa>
  404b8c:	test   eax,eax
  404b8e:	je     4052e0 <__gcov_sort_n_vals@@Base+0xd30>
  404b94:	mov    edi,0x1
  404b99:	call   403c90 <b64_decode@@Base+0x36a>
  404b9e:	test   rax,rax
  404ba1:	je     404cc8 <__gcov_sort_n_vals@@Base+0x718>
  404ba7:	mov    eax,DWORD PTR [rax]
  404ba9:	test   eax,eax
  404bab:	je     404cc8 <__gcov_sort_n_vals@@Base+0x718>
  404bb1:	cmp    eax,0x67636461
  404bb6:	je     405440 <__gcov_sort_n_vals@@Base+0xe90>
  404bbc:	mov    rsi,QWORD PTR [rsp+0x10]
  404bc1:	lea    rdi,[rip+0x1fb0]        # 406b78 <_IO_stdin_used@@Base+0xb78>
  404bc8:	xor    eax,eax
  404bca:	call   403d30 <b64_decode@@Base+0x40a>
  404bcf:	mov    rax,QWORD PTR [rip+0x4f2a]        # 409b00 <__gcov_error_file@@Base+0x10>
  404bd6:	test   rax,rax
  404bd9:	je     404bfc <__gcov_sort_n_vals@@Base+0x64c>
  404bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  404be0:	mov    edx,0x9
  404be5:	mov    rsi,rax
  404be8:	mov    rdi,r13
  404beb:	call   403e30 <b64_decode@@Base+0x50a>
  404bf0:	mov    QWORD PTR [rip+0x4f09],rax        # 409b00 <__gcov_error_file@@Base+0x10>
  404bf7:	test   rax,rax
  404bfa:	jne    404be0 <__gcov_sort_n_vals@@Base+0x630>
  404bfc:	call   404010 <b64_decode@@Base+0x6ea>
  404c01:	test   eax,eax
  404c03:	je     404c23 <__gcov_sort_n_vals@@Base+0x673>
  404c05:	lea    rax,[rip+0x1f24]        # 406b30 <_IO_stdin_used@@Base+0xb30>
  404c0c:	lea    rdi,[rip+0x1dd1]        # 4069e4 <_IO_stdin_used@@Base+0x9e4>
  404c13:	mov    rsi,QWORD PTR [rsp+0x10]
  404c18:	cmovs  rdi,rax
  404c1c:	xor    eax,eax
  404c1e:	call   403d30 <b64_decode@@Base+0x40a>
  404c23:	mov    r13,QWORD PTR [r13+0x8]
  404c27:	test   r13,r13
  404c2a:	jne    404ab0 <__gcov_sort_n_vals@@Base+0x500>
  404c30:	mov    rdi,QWORD PTR [rsp+0x10]
  404c35:	add    rsp,0x47e8
  404c3c:	pop    rbx
  404c3d:	pop    rbp
  404c3e:	pop    r12
  404c40:	pop    r13
  404c42:	pop    r14
  404c44:	pop    r15
  404c46:	jmp    4022c0 <free@plt>
  404c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c50:	mov    r14d,0x1
  404c56:	jmp    40485c <__gcov_sort_n_vals@@Base+0x2ac>
  404c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  404c60:	mov    r12d,DWORD PTR [rcx]
  404c63:	mov    eax,r12d
  404c66:	mov    ebp,r12d
  404c69:	imul   ebx
  404c6b:	mov    eax,r12d
  404c6e:	sar    eax,0x1f
  404c71:	sar    edx,1
  404c73:	sub    edx,eax
  404c75:	lea    eax,[rdx+rdx*8]
  404c78:	sub    ebp,eax
  404c7a:	jne    402510 <__fprintf_chk@plt+0x10>
  404c80:	mov    r14,QWORD PTR [rcx+0x8]
  404c84:	add    r14,0x8
  404c88:	test   r12d,r12d
  404c8b:	jle    404b0e <__gcov_sort_n_vals@@Base+0x55e>
  404c91:	nop    DWORD PTR [rax+0x0]
  404c98:	mov    rdi,r14
  404c9b:	mov    esi,0x8
  404ca0:	add    ebp,0x9
  404ca3:	add    r14,0x48
  404ca7:	call   4045b0 <__gcov_sort_n_vals@@Base>
  404cac:	cmp    r12d,ebp
  404caf:	jg     404c98 <__gcov_sort_n_vals@@Base+0x6e8>
  404cb1:	add    r15,0x1
  404cb5:	cmp    DWORD PTR [r13+0x68],r15d
  404cb9:	jne    404ae0 <__gcov_sort_n_vals@@Base+0x530>
  404cbf:	jmp    404b18 <__gcov_sort_n_vals@@Base+0x568>
  404cc4:	nop    DWORD PTR [rax+0x0]
  404cc8:	mov    r15,0x409b40
  404ccf:	xor    edx,edx
  404cd1:	xor    esi,esi
  404cd3:	mov    QWORD PTR [r15+0x8],0x0
  404cdb:	mov    rdi,QWORD PTR [r15]
  404cde:	mov    DWORD PTR [r15+0x1c],0xffffffff
  404ce6:	lea    r15,[rsp+0x1840]
  404cee:	call   402480 <fseek@plt>
  404cf3:	xor    eax,eax
  404cf5:	mov    ecx,0x2f9
  404cfa:	mov    rdi,r15
  404cfd:	rep stos QWORD PTR es:[rdi],rax
  404d00:	cmp    QWORD PTR [r13+0x20],0x0
  404d05:	je     405581 <__gcov_sort_n_vals@@Base+0xfd1>
  404d0b:	mov    DWORD PTR [rsp+0x44],0x0
  404d13:	mov    DWORD PTR [rsp+0x40],0x0
  404d1b:	mov    eax,DWORD PTR [rsp+0x3c]
  404d1f:	xor    esi,esi
  404d21:	test   eax,eax
  404d23:	je     404f9b <__gcov_sort_n_vals@@Base+0x9eb>
  404d29:	mov    rax,QWORD PTR [rsp+0x88]
  404d31:	mov    rcx,QWORD PTR [rsp+0x1860]
  404d39:	mov    rdi,QWORD PTR [rsp+0x1858]
  404d41:	mov    rdx,QWORD PTR [rsp+0x80]
  404d49:	add    rcx,rax
  404d4c:	add    rdx,QWORD PTR [rsp+0x1850]
  404d54:	nop    DWORD PTR [rax+0x0]
  404d58:	mov    esi,DWORD PTR [rsp+0x78]
  404d5c:	mov    QWORD PTR [rsp+0x1850],rdx
  404d64:	mov    DWORD PTR [rsp+0x1848],esi
  404d6b:	cmp    rax,rdi
  404d6e:	jle    404d78 <__gcov_sort_n_vals@@Base+0x7c8>
  404d70:	mov    QWORD PTR [rsp+0x1858],rax
  404d78:	mov    rbx,QWORD PTR [rsp+0x8]
  404d7d:	lea    rax,[r15+0x28]
  404d81:	mov    QWORD PTR [rsp+0x1860],rcx
  404d89:	mov    ecx,0x2f4
  404d8e:	mov    rdi,rax
  404d91:	lea    rsi,[rbx+0x28]
  404d95:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  404d98:	mov    eax,DWORD PTR [rsp+0x48]
  404d9c:	cmp    DWORD PTR [rsp+0x44],0x0
  404da1:	mov    DWORD PTR [rsp+0x1840],eax
  404da8:	je     405598 <__gcov_sort_n_vals@@Base+0xfe8>
  404dae:	xchg   ax,ax
  404db0:	mov    edi,DWORD PTR [rsp+0x40]
  404db4:	test   edi,edi
  404db6:	jne    405573 <__gcov_sort_n_vals@@Base+0xfc3>
  404dbc:	mov    rsi,r15
  404dbf:	mov    edi,0xa3000000
  404dc4:	mov    ebx,0xa3000000
  404dc9:	call   4040e0 <b64_decode@@Base+0x7ba>
  404dce:	mov    rbp,QWORD PTR [rip+0x4d23]        # 409af8 <__gcov_error_file@@Base+0x8>
  404dd5:	test   rbp,rbp
  404dd8:	je     404e06 <__gcov_sort_n_vals@@Base+0x856>
  404dda:	nop    WORD PTR [rax+rax*1+0x0]
  404de0:	lea    rsi,[rbp+0x8]
  404de4:	mov    edi,ebx
  404de6:	call   4040e0 <b64_decode@@Base+0x7ba>
  404deb:	mov    rdi,QWORD PTR [rip+0x4d06]        # 409af8 <__gcov_error_file@@Base+0x8>
  404df2:	mov    rbp,QWORD PTR [rdi]
  404df5:	call   4022c0 <free@plt>
  404dfa:	mov    QWORD PTR [rip+0x4cf7],rbp        # 409af8 <__gcov_error_file@@Base+0x8>
  404e01:	test   rbp,rbp
  404e04:	jne    404de0 <__gcov_sort_n_vals@@Base+0x830>
  404e06:	mov    esi,DWORD PTR [r13+0x68]
  404e0a:	xor    ebx,ebx
  404e0c:	test   esi,esi
  404e0e:	jne    404e4f <__gcov_sort_n_vals@@Base+0x89f>
  404e10:	jmp    405400 <__gcov_sort_n_vals@@Base+0xe50>
  404e15:	nop    DWORD PTR [rax]
  404e18:	mov    rdx,QWORD PTR [r13+0x70]
  404e1c:	mov    eax,ebx
  404e1e:	mov    edi,0x2
  404e23:	mov    rbp,QWORD PTR [rdx+rax*8]
  404e27:	test   rbp,rbp
  404e2a:	je     404e36 <__gcov_sort_n_vals@@Base+0x886>
  404e2c:	cmp    QWORD PTR [rbp+0x0],r13
  404e30:	je     405418 <__gcov_sort_n_vals@@Base+0xe68>
  404e36:	call   403c40 <b64_decode@@Base+0x31a>
  404e3b:	mov    QWORD PTR [rax],0x1000000
  404e42:	add    ebx,0x1
  404e45:	cmp    ebx,DWORD PTR [r13+0x68]
  404e49:	je     405400 <__gcov_sort_n_vals@@Base+0xe50>
  404e4f:	mov    rbp,QWORD PTR [rip+0x4caa]        # 409b00 <__gcov_error_file@@Base+0x10>
  404e56:	test   rbp,rbp
  404e59:	je     404e18 <__gcov_sort_n_vals@@Base+0x868>
  404e5b:	cmp    DWORD PTR [rbp+0x8],ebx
  404e5e:	jne    404e18 <__gcov_sort_n_vals@@Base+0x868>
  404e60:	mov    edi,0x2
  404e65:	add    rbp,0x10
  404e69:	call   403c40 <b64_decode@@Base+0x31a>
  404e6e:	mov    DWORD PTR [rsp+0x18],0x1
  404e76:	movabs rsi,0x301000000
  404e80:	mov    QWORD PTR [rax],rsi
  404e83:	mov    r12d,DWORD PTR [rbp+0x8]
  404e87:	mov    edi,0x1
  404e8c:	mov    r14d,0x1a10000
  404e92:	add    rbp,0x18
  404e96:	call   403c40 <b64_decode@@Base+0x31a>
  404e9b:	mov    edi,0x1
  404ea0:	mov    DWORD PTR [rax],r12d
  404ea3:	mov    r12d,DWORD PTR [rbp-0xc]
  404ea7:	call   403c40 <b64_decode@@Base+0x31a>
  404eac:	mov    edi,0x1
  404eb1:	mov    DWORD PTR [rax],r12d
  404eb4:	mov    r12d,DWORD PTR [rbp-0x8]
  404eb8:	call   403c40 <b64_decode@@Base+0x31a>
  404ebd:	mov    DWORD PTR [rsp+0x20],ebx
  404ec1:	mov    ebx,r14d
  404ec4:	mov    DWORD PTR [rax],r12d
  404ec7:	lea    r12,[r13+0x20]
  404ecb:	mov    QWORD PTR [rsp+0x28],r13
  404ed0:	jmp    404eee <__gcov_sort_n_vals@@Base+0x93e>
  404ed2:	nop    WORD PTR [rax+rax*1+0x0]
  404ed8:	add    ebx,0x20000
  404ede:	add    r12,0x8
  404ee2:	cmp    ebx,0x1b30000
  404ee8:	je     4053c0 <__gcov_sort_n_vals@@Base+0xe10>
  404eee:	cmp    QWORD PTR [r12],0x0
  404ef3:	je     404ed8 <__gcov_sort_n_vals@@Base+0x928>
  404ef5:	mov    r13d,DWORD PTR [rbp+0x0]
  404ef9:	mov    edi,0x2
  404efe:	call   403c40 <b64_decode@@Base+0x31a>
  404f03:	mov    r15,QWORD PTR [rbp+0x8]
  404f07:	lea    esi,[r13+r13*1+0x0]
  404f0c:	mov    DWORD PTR [rax],ebx
  404f0e:	mov    DWORD PTR [rax+0x4],esi
  404f11:	lea    eax,[r13-0x1]
  404f15:	lea    r14,[r15+rax*8+0x8]
  404f1a:	test   r13d,r13d
  404f1d:	je     404f3a <__gcov_sort_n_vals@@Base+0x98a>
  404f1f:	nop
  404f20:	add    r15,0x8
  404f24:	mov    r13,QWORD PTR [r15-0x8]
  404f28:	mov    edi,0x2
  404f2d:	call   403c40 <b64_decode@@Base+0x31a>
  404f32:	mov    QWORD PTR [rax],r13
  404f35:	cmp    r15,r14
  404f38:	jne    404f20 <__gcov_sort_n_vals@@Base+0x970>
  404f3a:	add    rbp,0x10
  404f3e:	jmp    404ed8 <__gcov_sort_n_vals@@Base+0x928>
  404f40:	mov    r15,QWORD PTR [rsp+0x68]
  404f45:	test   eax,eax
  404f47:	jne    405998 <__gcov_sort_n_vals@@Base+0x13e8>
  404f4d:	mov    QWORD PTR [r15+0x8],0x0
  404f55:	mov    rdi,QWORD PTR [r15]
  404f58:	xor    edx,edx
  404f5a:	xor    esi,esi
  404f5c:	mov    DWORD PTR [r15+0x1c],0xffffffff
  404f64:	call   402480 <fseek@plt>
  404f69:	mov    r9d,DWORD PTR [rsp+0x40]
  404f6e:	test   r9d,r9d
  404f71:	je     405bb7 <__gcov_sort_n_vals@@Base+0x1607>
  404f77:	cmp    QWORD PTR [r13+0x20],0x0
  404f7c:	mov    esi,DWORD PTR [rsp+0x184c]
  404f83:	je     405550 <__gcov_sort_n_vals@@Base+0xfa0>
  404f89:	mov    r8d,DWORD PTR [rsp+0x3c]
  404f8e:	lea    r15,[rsp+0x1840]
  404f96:	test   r8d,r8d
  404f99:	jne    404fa5 <__gcov_sort_n_vals@@Base+0x9f5>
  404f9b:	lea    eax,[rsi+0x1]
  404f9e:	mov    DWORD PTR [rsp+0x184c],eax
  404fa5:	mov    rax,QWORD PTR [rsp+0x88]
  404fad:	mov    rcx,QWORD PTR [rsp+0x1860]
  404fb5:	mov    rdx,QWORD PTR [rsp+0x80]
  404fbd:	mov    rdi,QWORD PTR [rsp+0x1858]
  404fc5:	add    rdx,QWORD PTR [rsp+0x1850]
  404fcd:	add    rcx,rax
  404fd0:	test   esi,esi
  404fd2:	je     404d58 <__gcov_sort_n_vals@@Base+0x7a8>
  404fd8:	mov    QWORD PTR [rsp+0x1850],rdx
  404fe0:	cmp    rax,rdi
  404fe3:	jle    404fed <__gcov_sort_n_vals@@Base+0xa3d>
  404fe5:	mov    QWORD PTR [rsp+0x1858],rax
  404fed:	lea    rdi,[rsp+0x3010]
  404ff5:	xor    eax,eax
  404ff7:	xor    r10d,r10d
  404ffa:	xor    esi,esi
  404ffc:	mov    QWORD PTR [rsp+0x1860],rcx
  405004:	mov    ecx,0x2f4
  405009:	lea    rbx,[r15+0x17b0]
  405010:	xor    edx,edx
  405012:	mov    QWORD PTR [rsp+0x18],rdi
  405017:	mov    r8d,0xfb
  40501d:	rep stos QWORD PTR es:[rdi],rax
  405020:	mov    rax,QWORD PTR [rsp+0x8]
  405025:	mov    edi,0xfb
  40502a:	add    rax,0x28
  40502e:	mov    QWORD PTR [rsp+0x20],rax
  405033:	nop    DWORD PTR [rax+rax*1+0x0]
  405038:	mov    r9d,DWORD PTR [rbx]
  40503b:	mov    rcx,QWORD PTR [rbx+0x10]
  40503f:	test   r9d,r9d
  405042:	je     40517d <__gcov_sort_n_vals@@Base+0xbcd>
  405048:	mov    rbp,QWORD PTR [rbx+0x8]
  40504c:	mov    QWORD PTR [rsp+0x28],rbx
  405051:	jmp    405113 <__gcov_sort_n_vals@@Base+0xb63>
  405056:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405060:	jbe    405baf <__gcov_sort_n_vals@@Base+0x15ff>
  405066:	mov    eax,r9d
  405069:	mov    r12d,esi
  40506c:	imul   rax,r10
  405070:	cqo    
  405072:	idiv   r12
  405075:	mov    r11,rax
  405078:	sub    esi,r9d
  40507b:	mov    r14d,r9d
  40507e:	sub    r10,r11
  405081:	xor    r9d,r9d
  405084:	xor    r12d,r12d
  405087:	lea    rax,[r11+rcx*1]
  40508b:	test   rbx,rbx
  40508e:	je     40516d <__gcov_sort_n_vals@@Base+0xbbd>
  405094:	bsr    rdx,rbx
  405098:	mov    ecx,0x3f
  40509d:	xor    rdx,0x3f
  4050a1:	sub    ecx,edx
  4050a3:	cmp    ecx,0x1
  4050a6:	jbe    40516d <__gcov_sort_n_vals@@Base+0xbbd>
  4050ac:	mov    ecx,0x3d
  4050b1:	mov    r11,rbx
  4050b4:	sub    ecx,edx
  4050b6:	shr    r11,cl
  4050b9:	mov    rcx,r11
  4050bc:	mov    r11d,0x4000003e
  4050c2:	and    ecx,0x3
  4050c5:	sub    r11d,edx
  4050c8:	lea    edx,[rcx+r11*4]
  4050cc:	movsxd rcx,edx
  4050cf:	lea    r11,[rcx+rcx*2]
  4050d3:	shl    r11,0x3
  4050d7:	add    QWORD PTR [rsp+r11*1+0x3020],rax
  4050df:	mov    rax,QWORD PTR [rsp+r11*1+0x3018]
  4050e7:	add    DWORD PTR [rsp+r11*1+0x3010],r14d
  4050ef:	cmp    rax,rbx
  4050f2:	jg     4050f9 <__gcov_sort_n_vals@@Base+0xb49>
  4050f4:	test   rax,rax
  4050f7:	jne    405105 <__gcov_sort_n_vals@@Base+0xb55>
  4050f9:	lea    rax,[rcx+rcx*2]
  4050fd:	mov    QWORD PTR [rsp+rax*8+0x3018],rbx
  405105:	cmp    esi,0x1
  405108:	mov    rcx,r12
  40510b:	sbb    edi,0x0
  40510e:	test   r9d,r9d
  405111:	je     405178 <__gcov_sort_n_vals@@Base+0xbc8>
  405113:	test   esi,esi
  405115:	je     4051f0 <__gcov_sort_n_vals@@Base+0xc40>
  40511b:	movsxd rax,edi
  40511e:	mov    rbx,QWORD PTR [rsp+0x20]
  405123:	lea    rax,[rax+rax*2]
  405127:	lea    rax,[rbx+rax*8]
  40512b:	mov    rbx,QWORD PTR [rax+0x8]
  40512f:	add    rbx,rbp
  405132:	cmp    esi,r9d
  405135:	jae    405060 <__gcov_sort_n_vals@@Base+0xab0>
  40513b:	mov    eax,esi
  40513d:	mov    r11d,r9d
  405140:	mov    r14d,esi
  405143:	sub    r9d,esi
  405146:	imul   rax,rcx
  40514a:	xor    esi,esi
  40514c:	cqo    
  40514e:	idiv   r11
  405151:	mov    r11,r10
  405154:	xor    r10d,r10d
  405157:	sub    rcx,rax
  40515a:	mov    r12,rcx
  40515d:	mov    rcx,rax
  405160:	lea    rax,[r11+rcx*1]
  405164:	test   rbx,rbx
  405167:	jne    405094 <__gcov_sort_n_vals@@Base+0xae4>
  40516d:	mov    edx,ebx
  40516f:	jmp    4050cc <__gcov_sort_n_vals@@Base+0xb1c>
  405174:	nop    DWORD PTR [rax+0x0]
  405178:	mov    rbx,QWORD PTR [rsp+0x28]
  40517d:	sub    r8d,0x1
  405181:	sub    rbx,0x18
  405185:	cmp    r8d,0xffffffff
  405189:	jne    405038 <__gcov_sort_n_vals@@Base+0xa88>
  40518f:	cmp    esi,0x1
  405192:	adc    edi,0xffffffff
  405195:	test   edi,edi
  405197:	js     4051bd <__gcov_sort_n_vals@@Base+0xc0d>
  405199:	movsxd rdi,edi
  40519c:	mov    rbx,QWORD PTR [rsp+0x8]
  4051a1:	lea    rcx,[rsp+0x58]
  4051a6:	lea    rax,[rdi+rdi*2]
  4051aa:	lea    rax,[rbx+rax*8]
  4051ae:	xchg   ax,ax
  4051b0:	add    r10,QWORD PTR [rax+0x38]
  4051b4:	sub    rax,0x18
  4051b8:	cmp    rcx,rax
  4051bb:	jne    4051b0 <__gcov_sort_n_vals@@Base+0xc00>
  4051bd:	movsxd rdx,edx
  4051c0:	mov    ecx,0x2f4
  4051c5:	mov    rsi,QWORD PTR [rsp+0x18]
  4051ca:	lea    rdi,[rsp+0x1868]
  4051d2:	lea    rax,[rdx+rdx*2]
  4051d6:	add    QWORD PTR [rsp+rax*8+0x3020],r10
  4051de:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  4051e1:	jmp    404d98 <__gcov_sort_n_vals@@Base+0x7e8>
  4051e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051f0:	test   edi,edi
  4051f2:	js     40523b <__gcov_sort_n_vals@@Base+0xc8b>
  4051f4:	movsxd rax,edi
  4051f7:	lea    r11,[rax+rax*2]
  4051fb:	mov    rax,QWORD PTR [rsp+0x20]
  405200:	shl    r11,0x3
  405204:	add    rax,r11
  405207:	mov    esi,DWORD PTR [rax]
  405209:	test   esi,esi
  40520b:	jne    4052d0 <__gcov_sort_n_vals@@Base+0xd20>
  405211:	mov    rax,QWORD PTR [rsp+0x8]
  405216:	lea    r11,[rax+r11*1+0x10]
  40521b:	jmp    405233 <__gcov_sort_n_vals@@Base+0xc83>
  40521d:	nop    DWORD PTR [rax]
  405220:	mov    rax,r11
  405223:	sub    r11,0x18
  405227:	mov    esi,DWORD PTR [r11+0x18]
  40522b:	test   esi,esi
  40522d:	jne    4052d0 <__gcov_sort_n_vals@@Base+0xd20>
  405233:	sub    edi,0x1
  405236:	cmp    edi,0xffffffff
  405239:	jne    405220 <__gcov_sort_n_vals@@Base+0xc70>
  40523b:	movsxd r8,r8d
  40523e:	lea    rax,[r8+r8*2]
  405242:	shl    rax,0x3
  405246:	add    DWORD PTR [rsp+rax*1+0x3010],r9d
  40524e:	add    QWORD PTR [rsp+rax*1+0x3020],rcx
  405256:	mov    rax,QWORD PTR [rsp+rax*1+0x3018]
  40525e:	test   rax,rax
  405261:	je     405268 <__gcov_sort_n_vals@@Base+0xcb8>
  405263:	cmp    rbp,rax
  405266:	jge    405274 <__gcov_sort_n_vals@@Base+0xcc4>
  405268:	lea    rax,[r8+r8*2]
  40526c:	mov    QWORD PTR [rsp+rax*8+0x3018],rbp
  405274:	lea    rax,[r8+r8*2]
  405278:	mov    rbx,QWORD PTR [rsp+0x18]
  40527d:	shl    rax,0x3
  405281:	lea    rcx,[rbx+rax*1]
  405285:	lea    rsi,[r15+rax*1]
  405289:	mov    r8,rcx
  40528c:	sub    r8,rax
  40528f:	jmp    4052c4 <__gcov_sort_n_vals@@Base+0xd14>
  405291:	nop    DWORD PTR [rax+0x0]
  405298:	mov    rdi,QWORD PTR [rcx-0x10]
  40529c:	mov    eax,DWORD PTR [rsi+0x10]
  40529f:	add    DWORD PTR [rcx-0x18],eax
  4052a2:	mov    rax,QWORD PTR [rsi+0x20]
  4052a6:	add    QWORD PTR [rcx-0x8],rax
  4052aa:	mov    rax,QWORD PTR [rsi+0x18]
  4052ae:	test   rdi,rdi
  4052b1:	je     4052b8 <__gcov_sort_n_vals@@Base+0xd08>
  4052b3:	cmp    rdi,rax
  4052b6:	jle    4052bc <__gcov_sort_n_vals@@Base+0xd0c>
  4052b8:	mov    QWORD PTR [rcx-0x10],rax
  4052bc:	sub    rcx,0x18
  4052c0:	sub    rsi,0x18
  4052c4:	cmp    r8,rcx
  4052c7:	jne    405298 <__gcov_sort_n_vals@@Base+0xce8>
  4052c9:	jmp    4051bd <__gcov_sort_n_vals@@Base+0xc0d>
  4052ce:	xchg   ax,ax
  4052d0:	mov    r10,QWORD PTR [rax+0x10]
  4052d4:	jmp    40512b <__gcov_sort_n_vals@@Base+0xb7b>
  4052d9:	nop    DWORD PTR [rax+0x0]
  4052e0:	mov    rbx,QWORD PTR [rsp+0x10]
  4052e5:	movzx  eax,BYTE PTR [rbx]
  4052e8:	cmp    al,0x2f
  4052ea:	jne    4052f7 <__gcov_sort_n_vals@@Base+0xd47>
  4052ec:	mov    rax,rbx
  4052ef:	lea    rbx,[rbx+0x1]
  4052f3:	movzx  eax,BYTE PTR [rax+0x1]
  4052f7:	mov    rbp,QWORD PTR [rsp+0x10]
  4052fc:	test   al,al
  4052fe:	jne    405313 <__gcov_sort_n_vals@@Base+0xd63>
  405300:	jmp    405340 <__gcov_sort_n_vals@@Base+0xd90>
  405302:	nop    WORD PTR [rax+rax*1+0x0]
  405308:	add    rbx,0x1
  40530c:	movzx  eax,BYTE PTR [rbx]
  40530f:	test   al,al
  405311:	je     405340 <__gcov_sort_n_vals@@Base+0xd90>
  405313:	cmp    al,0x2f
  405315:	jne    405308 <__gcov_sort_n_vals@@Base+0xd58>
  405317:	mov    BYTE PTR [rbx],0x0
  40531a:	xor    esi,esi
  40531c:	mov    rdi,rbp
  40531f:	call   4024c0 <access@plt>
  405324:	cmp    eax,0xffffffff
  405327:	je     405360 <__gcov_sort_n_vals@@Base+0xdb0>
  405329:	mov    BYTE PTR [rbx],0x2f
  40532c:	add    rbx,0x1
  405330:	movzx  eax,BYTE PTR [rbx]
  405333:	test   al,al
  405335:	jne    405313 <__gcov_sort_n_vals@@Base+0xd63>
  405337:	nop    WORD PTR [rax+rax*1+0x0]
  405340:	mov    rdi,QWORD PTR [rsp+0x10]
  405345:	call   403f20 <b64_decode@@Base+0x5fa>
  40534a:	test   eax,eax
  40534c:	jne    404b94 <__gcov_sort_n_vals@@Base+0x5e4>
  405352:	mov    rcx,QWORD PTR [rsp+0x10]
  405357:	lea    rdx,[rip+0x16d5]        # 406a33 <_IO_stdin_used@@Base+0xa33>
  40535e:	jmp    40539f <__gcov_sort_n_vals@@Base+0xdef>
  405360:	mov    esi,0x1ed
  405365:	mov    rdi,rbp
  405368:	call   402330 <mkdir@plt>
  40536d:	cmp    eax,0xffffffff
  405370:	jne    405329 <__gcov_sort_n_vals@@Base+0xd79>
  405372:	call   402310 <__errno_location@plt>
  405377:	cmp    DWORD PTR [rax],0x11
  40537a:	je     405329 <__gcov_sort_n_vals@@Base+0xd79>
  40537c:	mov    r14,QWORD PTR [rsp+0x10]
  405381:	lea    rdi,[rip+0x17c8]        # 406b50 <_IO_stdin_used@@Base+0xb50>
  405388:	xor    eax,eax
  40538a:	mov    rsi,r14
  40538d:	call   403d30 <b64_decode@@Base+0x40a>
  405392:	mov    BYTE PTR [rbx],0x2f
  405395:	mov    rcx,r14
  405398:	lea    rdx,[rip+0x1681]        # 406a20 <_IO_stdin_used@@Base+0xa20>
  40539f:	mov    rax,QWORD PTR [rip+0x3c52]        # 408ff8 <stderr@GLIBC_2.2.5>
  4053a6:	mov    esi,0x1
  4053ab:	mov    rdi,QWORD PTR [rax]
  4053ae:	xor    eax,eax
  4053b0:	call   402500 <__fprintf_chk@plt>
  4053b5:	jmp    404c23 <__gcov_sort_n_vals@@Base+0x673>
  4053ba:	nop    WORD PTR [rax+rax*1+0x0]
  4053c0:	mov    ecx,DWORD PTR [rsp+0x18]
  4053c4:	mov    ebx,DWORD PTR [rsp+0x20]
  4053c8:	mov    r13,QWORD PTR [rsp+0x28]
  4053cd:	test   ecx,ecx
  4053cf:	je     404e42 <__gcov_sort_n_vals@@Base+0x892>
  4053d5:	mov    rsi,QWORD PTR [rip+0x4724]        # 409b00 <__gcov_error_file@@Base+0x10>
  4053dc:	mov    edx,0x9
  4053e1:	mov    rdi,r13
  4053e4:	add    ebx,0x1
  4053e7:	call   403e30 <b64_decode@@Base+0x50a>
  4053ec:	mov    QWORD PTR [rip+0x470d],rax        # 409b00 <__gcov_error_file@@Base+0x10>
  4053f3:	cmp    ebx,DWORD PTR [r13+0x68]
  4053f7:	jne    404e4f <__gcov_sort_n_vals@@Base+0x89f>
  4053fd:	nop    DWORD PTR [rax]
  405400:	mov    edi,0x1
  405405:	call   403c40 <b64_decode@@Base+0x31a>
  40540a:	mov    DWORD PTR [rax],0x0
  405410:	jmp    404bcf <__gcov_sort_n_vals@@Base+0x61f>
  405415:	nop    DWORD PTR [rax]
  405418:	call   403c40 <b64_decode@@Base+0x31a>
  40541d:	mov    DWORD PTR [rsp+0x18],0x0
  405425:	movabs rsi,0x301000000
  40542f:	mov    QWORD PTR [rax],rsi
  405432:	jmp    404e83 <__gcov_sort_n_vals@@Base+0x8d3>
  405437:	nop    WORD PTR [rax+rax*1+0x0]
  405440:	mov    edi,0x1
  405445:	call   403c90 <b64_decode@@Base+0x36a>
  40544a:	test   rax,rax
  40544d:	je     405a60 <__gcov_sort_n_vals@@Base+0x14b0>
  405453:	mov    esi,DWORD PTR [rax]
  405455:	cmp    esi,0x4138342a
  40545b:	je     405473 <__gcov_sort_n_vals@@Base+0xec3>
  40545d:	mov    rdx,QWORD PTR [rsp+0x10]
  405462:	lea    rdi,[r13+0x18]
  405466:	call   403ea0 <b64_decode@@Base+0x57a>
  40546b:	test   eax,eax
  40546d:	je     404bcf <__gcov_sort_n_vals@@Base+0x61f>
  405473:	mov    edi,0x1
  405478:	call   403c90 <b64_decode@@Base+0x36a>
  40547d:	test   rax,rax
  405480:	je     405a70 <__gcov_sort_n_vals@@Base+0x14c0>
  405486:	mov    eax,DWORD PTR [rax]
  405488:	cmp    DWORD PTR [r13+0x10],eax
  40548c:	jne    404cc8 <__gcov_sort_n_vals@@Base+0x718>
  405492:	mov    DWORD PTR [rsp+0x40],0x0
  40549a:	mov    r15,0x409b40
  4054a1:	lea    rbp,[rip+0x4650]        # 409af8 <__gcov_error_file@@Base+0x8>
  4054a8:	lea    rbx,[rsp+0x3010]
  4054b0:	lea    r12,[rsp+0x1840]
  4054b8:	mov    edi,0x1
  4054bd:	mov    r14d,DWORD PTR [r15+0xc]
  4054c1:	add    r14d,DWORD PTR [r15+0x8]
  4054c5:	call   403c90 <b64_decode@@Base+0x36a>
  4054ca:	test   rax,rax
  4054cd:	je     4056f0 <__gcov_sort_n_vals@@Base+0x1140>
  4054d3:	mov    eax,DWORD PTR [rax]
  4054d5:	cmp    eax,0xa3000000
  4054da:	jne    405b90 <__gcov_sort_n_vals@@Base+0x15e0>
  4054e0:	mov    edi,0x1
  4054e5:	call   403c90 <b64_decode@@Base+0x36a>
  4054ea:	mov    rdi,rbx
  4054ed:	call   4042c0 <b64_decode@@Base+0x99a>
  4054f2:	cmp    QWORD PTR [r15],0x0
  4054f6:	je     4056d1 <__gcov_sort_n_vals@@Base+0x1121>
  4054fc:	mov    eax,DWORD PTR [r15+0x18]
  405500:	test   eax,eax
  405502:	jne    4056c9 <__gcov_sort_n_vals@@Base+0x1119>
  405508:	mov    r10d,DWORD PTR [rsp+0x40]
  40550d:	test   r10d,r10d
  405510:	jne    405a80 <__gcov_sort_n_vals@@Base+0x14d0>
  405516:	mov    eax,DWORD PTR [rsp+0x48]
  40551a:	cmp    eax,DWORD PTR [rsp+0x3010]
  405521:	jne    4054b8 <__gcov_sort_n_vals@@Base+0xf08>
  405523:	mov    eax,DWORD PTR [rsp+0x3018]
  40552a:	cmp    DWORD PTR [rsp+0x78],eax
  40552e:	jne    4054b8 <__gcov_sort_n_vals@@Base+0xf08>
  405530:	endbr64 
  405534:	mov    ecx,0x2f9
  405539:	mov    rdi,r12
  40553c:	mov    rsi,rbx
  40553f:	mov    DWORD PTR [rsp+0x40],r14d
  405544:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  405547:	jmp    4054b8 <__gcov_sort_n_vals@@Base+0xf08>
  40554c:	nop    DWORD PTR [rax+0x0]
  405550:	test   esi,esi
  405552:	jne    405b78 <__gcov_sort_n_vals@@Base+0x15c8>
  405558:	mov    eax,DWORD PTR [rsp+0x48]
  40555c:	mov    edx,DWORD PTR [rsp+0x44]
  405560:	lea    r15,[rsp+0x1840]
  405568:	mov    DWORD PTR [rsp+0x1840],eax
  40556f:	test   edx,edx
  405571:	je     405598 <__gcov_sort_n_vals@@Base+0xfe8>
  405573:	mov    edi,DWORD PTR [rsp+0x40]
  405577:	call   404560 <b64_decode@@Base+0xc3a>
  40557c:	jmp    404dbc <__gcov_sort_n_vals@@Base+0x80c>
  405581:	mov    eax,DWORD PTR [rsp+0x48]
  405585:	mov    DWORD PTR [rsp+0x40],0x0
  40558d:	mov    DWORD PTR [rsp+0x1840],eax
  405594:	nop    DWORD PTR [rax+0x0]
  405598:	movabs rbx,0x4138342a67636461
  4055a2:	mov    edi,0x2
  4055a7:	call   403c40 <b64_decode@@Base+0x31a>
  4055ac:	mov    edi,0x1
  4055b1:	mov    QWORD PTR [rax],rbx
  4055b4:	mov    ebx,DWORD PTR [r13+0x10]
  4055b8:	call   403c40 <b64_decode@@Base+0x31a>
  4055bd:	mov    DWORD PTR [rax],ebx
  4055bf:	jmp    404db0 <__gcov_sort_n_vals@@Base+0x800>
  4055c4:	nop    DWORD PTR [rax+0x0]
  4055c8:	lea    rdi,[rip+0x1445]        # 406a14 <_IO_stdin_used@@Base+0xa14>
  4055cf:	call   4022b0 <getenv@plt>
  4055d4:	mov    rbx,rax
  4055d7:	test   rax,rax
  4055da:	je     405630 <__gcov_sort_n_vals@@Base+0x1080>
  4055dc:	mov    rdi,rax
  4055df:	call   4023e0 <strlen@plt>
  4055e4:	test   rax,rax
  4055e7:	je     405630 <__gcov_sort_n_vals@@Base+0x1080>
  4055e9:	lea    rsi,[rax-0x1]
  4055ed:	cmp    BYTE PTR [rbx+rax*1-0x1],0x2f
  4055f2:	mov    DWORD PTR [rsp+0x38],0x0
  4055fa:	mov    QWORD PTR [rsp+0x30],rsi
  4055ff:	jne    404a7c <__gcov_sort_n_vals@@Base+0x4cc>
  405605:	test   rsi,rsi
  405608:	jne    404a81 <__gcov_sort_n_vals@@Base+0x4d1>
  40560e:	xchg   ax,ax
  405610:	mov    r12d,DWORD PTR [rsp+0x38]
  405615:	lea    rbx,[rip+0x13e4]        # 406a00 <_IO_stdin_used@@Base+0xa00>
  40561c:	mov    QWORD PTR [rsp+0x30],0x1
  405625:	test   r12d,r12d
  405628:	jne    404a81 <__gcov_sort_n_vals@@Base+0x4d1>
  40562e:	xchg   ax,ax
  405630:	mov    rdi,rbp
  405633:	call   402470 <malloc@plt>
  405638:	mov    DWORD PTR [rsp+0x38],0x0
  405640:	mov    QWORD PTR [rsp+0x10],rax
  405645:	mov    QWORD PTR [rsp+0x30],0x0
  40564e:	jmp    404aa3 <__gcov_sort_n_vals@@Base+0x4f3>
  405653:	mov    edi,0x1
  405658:	call   403c90 <b64_decode@@Base+0x36a>
  40565d:	test   rax,rax
  405660:	je     405998 <__gcov_sort_n_vals@@Base+0x13e8>
  405666:	xor    r15d,r15d
  405669:	nop    DWORD PTR [rax+0x0]
  405670:	mov    ecx,DWORD PTR [rax]
  405672:	cmp    ebp,r15d
  405675:	jne    405998 <__gcov_sort_n_vals@@Base+0x13e8>
  40567b:	mov    esi,DWORD PTR [rbx]
  40567d:	lea    eax,[rsi+rsi*1]
  405680:	cmp    eax,ecx
  405682:	jne    405998 <__gcov_sort_n_vals@@Base+0x13e8>
  405688:	mov    rdi,QWORD PTR [rbx+0x8]
  40568c:	add    rbx,0x10
  405690:	call   r14
  405693:	add    ebp,0x20000
  405699:	add    r12,0x8
  40569d:	cmp    ebp,0x1b30000
  4056a3:	jne    405b38 <__gcov_sort_n_vals@@Base+0x1588>
  4056a9:	mov    rax,QWORD PTR [rsp+0x68]
  4056ae:	mov    r15,QWORD PTR [rsp+0x18]
  4056b3:	cmp    QWORD PTR [rax],0x0
  4056b7:	je     4056d1 <__gcov_sort_n_vals@@Base+0x1121>
  4056b9:	mov    rax,QWORD PTR [rsp+0x68]
  4056be:	mov    eax,DWORD PTR [rax+0x18]
  4056c1:	test   eax,eax
  4056c3:	je     405929 <__gcov_sort_n_vals@@Base+0x1379>
  4056c9:	test   eax,eax
  4056cb:	js     405a50 <__gcov_sort_n_vals@@Base+0x14a0>
  4056d1:	lea    rdx,[rip+0x12fd]        # 4069d5 <_IO_stdin_used@@Base+0x9d5>
  4056d8:	mov    rsi,QWORD PTR [rsp+0x10]
  4056dd:	lea    rdi,[rip+0x1372]        # 406a56 <_IO_stdin_used@@Base+0xa56>
  4056e4:	xor    eax,eax
  4056e6:	call   403d30 <b64_decode@@Base+0x40a>
  4056eb:	jmp    404bcf <__gcov_sort_n_vals@@Base+0x61f>
  4056f0:	mov    DWORD PTR [rsp+0x44],r14d
  4056f5:	xor    eax,eax
  4056f7:	lea    rbx,[rip+0x4402]        # 409b00 <__gcov_error_file@@Base+0x10>
  4056fe:	xor    r14d,r14d
  405701:	mov    QWORD PTR [rsp+0x68],r15
  405706:	mov    QWORD PTR [rsp+0x58],rbx
  40570b:	lea    rbx,[r13+0x18]
  40570f:	mov    r15,r14
  405712:	mov    QWORD PTR [rsp+0x60],rbx
  405717:	nop    WORD PTR [rax+rax*1+0x0]
  405720:	mov    DWORD PTR [rsp+0x20],r15d
  405725:	mov    DWORD PTR [rsp+0x4c],r15d
  40572a:	cmp    DWORD PTR [r13+0x68],r15d
  40572e:	je     404f40 <__gcov_sort_n_vals@@Base+0x990>
  405734:	mov    rdx,QWORD PTR [r13+0x70]
  405738:	mov    rbx,QWORD PTR [rdx+r15*8]
  40573c:	cmp    eax,0x1000000
  405741:	jne    405998 <__gcov_sort_n_vals@@Base+0x13e8>
  405747:	mov    edi,0x1
  40574c:	call   403c90 <b64_decode@@Base+0x36a>
  405751:	test   rax,rax
  405754:	je     405929 <__gcov_sort_n_vals@@Base+0x1379>
  40575a:	mov    eax,DWORD PTR [rax]
  40575c:	test   eax,eax
  40575e:	je     405929 <__gcov_sort_n_vals@@Base+0x1379>
  405764:	cmp    eax,0x3
  405767:	jne    405998 <__gcov_sort_n_vals@@Base+0x13e8>
  40576d:	test   rbx,rbx
  405770:	je     40577b <__gcov_sort_n_vals@@Base+0x11cb>
  405772:	cmp    QWORD PTR [rbx],r13
  405775:	je     405ac8 <__gcov_sort_n_vals@@Base+0x1518>
  40577b:	mov    rdx,QWORD PTR [rsp+0x60]
  405780:	lea    rax,[r13+0x60]
  405784:	xor    ebp,ebp
  405786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405790:	cmp    QWORD PTR [rax],0x1
  405794:	sbb    ebp,0xffffffff
  405797:	sub    rax,0x8
  40579b:	cmp    rdx,rax
  40579e:	jne    405790 <__gcov_sort_n_vals@@Base+0x11e0>
  4057a0:	shl    ebp,0x4
  4057a3:	lea    edi,[rbp+0x38]
  4057a6:	mov    rbp,rdi
  4057a9:	call   402470 <malloc@plt>
  4057ae:	mov    r12,rax
  4057b1:	test   rax,rax
  4057b4:	je     405a00 <__gcov_sort_n_vals@@Base+0x1450>
  4057ba:	mov    QWORD PTR [rax],0x0
  4057c1:	mov    eax,DWORD PTR [rsp+0x20]
  4057c5:	mov    edi,0x1
  4057ca:	mov    DWORD PTR [r12+0x8],eax
  4057cf:	call   403c90 <b64_decode@@Base+0x36a>
  4057d4:	test   rax,rax
  4057d7:	je     405a30 <__gcov_sort_n_vals@@Base+0x1480>
  4057dd:	mov    eax,DWORD PTR [rax]
  4057df:	mov    DWORD PTR [r12+0x18],eax
  4057e4:	mov    edi,0x1
  4057e9:	call   403c90 <b64_decode@@Base+0x36a>
  4057ee:	test   rax,rax
  4057f1:	je     405a28 <__gcov_sort_n_vals@@Base+0x1478>
  4057f7:	mov    eax,DWORD PTR [rax]
  4057f9:	mov    DWORD PTR [r12+0x1c],eax
  4057fe:	mov    edi,0x1
  405803:	call   403c90 <b64_decode@@Base+0x36a>
  405808:	test   rax,rax
  40580b:	je     405a40 <__gcov_sort_n_vals@@Base+0x1490>
  405811:	mov    eax,DWORD PTR [rax]
  405813:	mov    DWORD PTR [r12+0x20],eax
  405818:	xor    ebx,ebx
  40581a:	xor    r14d,r14d
  40581d:	mov    QWORD PTR [rsp+0x18],r12
  405822:	mov    QWORD PTR [rsp+0x50],r15
  405827:	jmp    40583e <__gcov_sort_n_vals@@Base+0x128e>
  405829:	nop    DWORD PTR [rax+0x0]
  405830:	add    rbx,0x1
  405834:	cmp    rbx,0x9
  405838:	je     405912 <__gcov_sort_n_vals@@Base+0x1362>
  40583e:	cmp    QWORD PTR [r13+rbx*8+0x20],0x0
  405844:	mov    ebp,ebx
  405846:	je     405830 <__gcov_sort_n_vals@@Base+0x1280>
  405848:	mov    edi,0x1
  40584d:	call   403c90 <b64_decode@@Base+0x36a>
  405852:	test   rax,rax
  405855:	je     405950 <__gcov_sort_n_vals@@Base+0x13a0>
  40585b:	mov    edx,ebx
  40585d:	shl    edx,0x11
  405860:	add    edx,0x1a10000
  405866:	cmp    edx,DWORD PTR [rax]
  405868:	jne    405950 <__gcov_sort_n_vals@@Base+0x13a0>
  40586e:	mov    edi,0x1
  405873:	call   403c90 <b64_decode@@Base+0x36a>
  405878:	test   rax,rax
  40587b:	je     4059c0 <__gcov_sort_n_vals@@Base+0x1410>
  405881:	mov    ecx,DWORD PTR [rax]
  405883:	shr    ecx,1
  405885:	lea    edi,[rcx*8+0x0]
  40588c:	mov    r12d,ecx
  40588f:	mov    DWORD PTR [rsp+0x28],edi
  405893:	call   402470 <malloc@plt>
  405898:	mov    r15,rax
  40589b:	test   rax,rax
  40589e:	je     4059e0 <__gcov_sort_n_vals@@Base+0x1430>
  4058a4:	mov    eax,r14d
  4058a7:	shl    rax,0x4
  4058ab:	add    rax,QWORD PTR [rsp+0x18]
  4058b0:	mov    DWORD PTR [rax+0x28],r12d
  4058b4:	mov    QWORD PTR [rax+0x30],r15
  4058b8:	lea    eax,[r12-0x1]
  4058bd:	lea    rbp,[r15+rax*8+0x8]
  4058c2:	test   r12d,r12d
  4058c5:	jne    4058dc <__gcov_sort_n_vals@@Base+0x132c>
  4058c7:	jmp    405900 <__gcov_sort_n_vals@@Base+0x1350>
  4058c9:	nop    DWORD PTR [rax+0x0]
  4058d0:	mov    rax,QWORD PTR [rax]
  4058d3:	mov    QWORD PTR [r15-0x8],rax
  4058d7:	cmp    rbp,r15
  4058da:	je     405900 <__gcov_sort_n_vals@@Base+0x1350>
  4058dc:	mov    edi,0x2
  4058e1:	add    r15,0x8
  4058e5:	call   403c90 <b64_decode@@Base+0x36a>
  4058ea:	test   rax,rax
  4058ed:	jne    4058d0 <__gcov_sort_n_vals@@Base+0x1320>
  4058ef:	xor    eax,eax
  4058f1:	mov    QWORD PTR [r15-0x8],rax
  4058f5:	cmp    rbp,r15
  4058f8:	jne    4058dc <__gcov_sort_n_vals@@Base+0x132c>
  4058fa:	nop    WORD PTR [rax+rax*1+0x0]
  405900:	add    rbx,0x1
  405904:	add    r14d,0x1
  405908:	cmp    rbx,0x9
  40590c:	jne    40583e <__gcov_sort_n_vals@@Base+0x128e>
  405912:	mov    r12,QWORD PTR [rsp+0x18]
  405917:	mov    rax,QWORD PTR [rsp+0x58]
  40591c:	mov    r15,QWORD PTR [rsp+0x50]
  405921:	mov    QWORD PTR [rax],r12
  405924:	mov    QWORD PTR [rsp+0x58],r12
  405929:	mov    edi,0x1
  40592e:	call   403c90 <b64_decode@@Base+0x36a>
  405933:	test   rax,rax
  405936:	je     4059f8 <__gcov_sort_n_vals@@Base+0x1448>
  40593c:	mov    eax,DWORD PTR [rax]
  40593e:	add    r15,0x1
  405942:	jmp    405720 <__gcov_sort_n_vals@@Base+0x1170>
  405947:	nop    WORD PTR [rax+rax*1+0x0]
  405950:	mov    r12,QWORD PTR [rsp+0x18]
  405955:	mov    r15,QWORD PTR [rsp+0x50]
  40595a:	lea    rcx,[rip+0x1053]        # 4069b4 <_IO_stdin_used@@Base+0x9b4>
  405961:	mov    edx,DWORD PTR [rsp+0x20]
  405965:	mov    rsi,QWORD PTR [rsp+0x10]
  40596a:	mov    r8d,ebp
  40596d:	xor    eax,eax
  40596f:	lea    rdi,[rip+0x1252]        # 406bc8 <_IO_stdin_used@@Base+0xbc8>
  405976:	call   403d30 <b64_decode@@Base+0x40a>
  40597b:	mov    edx,ebx
  40597d:	mov    rsi,r12
  405980:	mov    rdi,r13
  405983:	call   403e30 <b64_decode@@Base+0x50a>
  405988:	mov    QWORD PTR [rsp+0x58],rax
  40598d:	test   rax,rax
  405990:	jne    405929 <__gcov_sort_n_vals@@Base+0x1379>
  405992:	nop    WORD PTR [rax+rax*1+0x0]
  405998:	mov    ecx,DWORD PTR [rsp+0x4c]
  40599c:	mov    rsi,QWORD PTR [rsp+0x10]
  4059a1:	lea    rdx,[rip+0x10a5]        # 406a4d <_IO_stdin_used@@Base+0xa4d>
  4059a8:	xor    eax,eax
  4059aa:	lea    rdi,[rip+0x11ef]        # 406ba0 <_IO_stdin_used@@Base+0xba0>
  4059b1:	call   403d30 <b64_decode@@Base+0x40a>
  4059b6:	jmp    404bcf <__gcov_sort_n_vals@@Base+0x61f>
  4059bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4059c0:	xor    edi,edi
  4059c2:	mov    DWORD PTR [rsp+0x28],0x0
  4059ca:	xor    r12d,r12d
  4059cd:	call   402470 <malloc@plt>
  4059d2:	mov    r15,rax
  4059d5:	test   rax,rax
  4059d8:	jne    4058a4 <__gcov_sort_n_vals@@Base+0x12f4>
  4059de:	xchg   ax,ax
  4059e0:	mov    ebx,ebp
  4059e2:	mov    r12,QWORD PTR [rsp+0x18]
  4059e7:	mov    r15,QWORD PTR [rsp+0x50]
  4059ec:	mov    ebp,DWORD PTR [rsp+0x28]
  4059f0:	jmp    405a05 <__gcov_sort_n_vals@@Base+0x1455>
  4059f2:	nop    WORD PTR [rax+rax*1+0x0]
  4059f8:	xor    eax,eax
  4059fa:	jmp    40593e <__gcov_sort_n_vals@@Base+0x138e>
  4059ff:	nop
  405a00:	mov    ebx,0xffffffff
  405a05:	lea    rcx,[rip+0xfb9]        # 4069c5 <_IO_stdin_used@@Base+0x9c5>
  405a0c:	test   ebp,ebp
  405a0e:	jne    405961 <__gcov_sort_n_vals@@Base+0x13b1>
  405a14:	mov    ebp,ebx
  405a16:	lea    rcx,[rip+0xf97]        # 4069b4 <_IO_stdin_used@@Base+0x9b4>
  405a1d:	jmp    405961 <__gcov_sort_n_vals@@Base+0x13b1>
  405a22:	nop    WORD PTR [rax+rax*1+0x0]
  405a28:	xor    eax,eax
  405a2a:	jmp    4057f9 <__gcov_sort_n_vals@@Base+0x1249>
  405a2f:	nop
  405a30:	xor    eax,eax
  405a32:	jmp    4057df <__gcov_sort_n_vals@@Base+0x122f>
  405a37:	nop    WORD PTR [rax+rax*1+0x0]
  405a40:	xor    eax,eax
  405a42:	jmp    405813 <__gcov_sort_n_vals@@Base+0x1263>
  405a47:	nop    WORD PTR [rax+rax*1+0x0]
  405a50:	lea    rdx,[rip+0xf84]        # 4069db <_IO_stdin_used@@Base+0x9db>
  405a57:	jmp    4056d8 <__gcov_sort_n_vals@@Base+0x1128>
  405a5c:	nop    DWORD PTR [rax+0x0]
  405a60:	xor    esi,esi
  405a62:	jmp    40545d <__gcov_sort_n_vals@@Base+0xead>
  405a67:	nop    WORD PTR [rax+rax*1+0x0]
  405a70:	xor    eax,eax
  405a72:	jmp    405488 <__gcov_sort_n_vals@@Base+0xed8>
  405a77:	nop    WORD PTR [rax+rax*1+0x0]
  405a80:	mov    edi,0x17d0
  405a85:	call   402470 <malloc@plt>
  405a8a:	mov    ecx,0x2f9
  405a8f:	mov    rsi,rbx
  405a92:	mov    QWORD PTR [rbp+0x0],rax
  405a96:	lea    rdi,[rax+0x8]
  405a9a:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  405a9d:	mov    QWORD PTR [rax],0x0
  405aa4:	mov    rbp,QWORD PTR [rbp+0x0]
  405aa8:	jmp    4054b8 <__gcov_sort_n_vals@@Base+0xf08>
  405aad:	nop    DWORD PTR [rax]
  405ab0:	mov    ebp,0x2
  405ab5:	mov    DWORD PTR [rsp+0x48],0x0
  405abd:	jmp    404a0d <__gcov_sort_n_vals@@Base+0x45d>
  405ac2:	nop    WORD PTR [rax+rax*1+0x0]
  405ac8:	mov    edi,0x1
  405acd:	call   403c90 <b64_decode@@Base+0x36a>
  405ad2:	test   rax,rax
  405ad5:	je     405b9a <__gcov_sort_n_vals@@Base+0x15ea>
  405adb:	mov    eax,DWORD PTR [rax]
  405add:	cmp    DWORD PTR [rbx+0x8],eax
  405ae0:	jne    405998 <__gcov_sort_n_vals@@Base+0x13e8>
  405ae6:	mov    edi,0x1
  405aeb:	call   403c90 <b64_decode@@Base+0x36a>
  405af0:	test   rax,rax
  405af3:	je     405ba8 <__gcov_sort_n_vals@@Base+0x15f8>
  405af9:	mov    eax,DWORD PTR [rax]
  405afb:	cmp    DWORD PTR [rbx+0xc],eax
  405afe:	jne    405998 <__gcov_sort_n_vals@@Base+0x13e8>
  405b04:	mov    edi,0x1
  405b09:	call   403c90 <b64_decode@@Base+0x36a>
  405b0e:	test   rax,rax
  405b11:	je     405ba1 <__gcov_sort_n_vals@@Base+0x15f1>
  405b17:	mov    eax,DWORD PTR [rax]
  405b19:	cmp    DWORD PTR [rbx+0x10],eax
  405b1c:	jne    405998 <__gcov_sort_n_vals@@Base+0x13e8>
  405b22:	mov    QWORD PTR [rsp+0x18],r15
  405b27:	add    rbx,0x18
  405b2b:	lea    r12,[r13+0x20]
  405b2f:	mov    ebp,0x1a10000
  405b34:	nop    DWORD PTR [rax+0x0]
  405b38:	mov    r14,QWORD PTR [r12]
  405b3c:	test   r14,r14
  405b3f:	je     405693 <__gcov_sort_n_vals@@Base+0x10e3>
  405b45:	mov    edi,0x1
  405b4a:	call   403c90 <b64_decode@@Base+0x36a>
  405b4f:	test   rax,rax
  405b52:	je     405653 <__gcov_sort_n_vals@@Base+0x10a3>
  405b58:	mov    edi,0x1
  405b5d:	mov    r15d,DWORD PTR [rax]
  405b60:	call   403c90 <b64_decode@@Base+0x36a>
  405b65:	test   rax,rax
  405b68:	jne    405670 <__gcov_sort_n_vals@@Base+0x10c0>
  405b6e:	xor    ecx,ecx
  405b70:	jmp    405672 <__gcov_sort_n_vals@@Base+0x10c2>
  405b75:	nop    DWORD PTR [rax]
  405b78:	mov    rsi,QWORD PTR [rsp+0x10]
  405b7d:	lea    rdi,[rip+0x106c]        # 406bf0 <_IO_stdin_used@@Base+0xbf0>
  405b84:	xor    eax,eax
  405b86:	call   403d30 <b64_decode@@Base+0x40a>
  405b8b:	jmp    404bcf <__gcov_sort_n_vals@@Base+0x61f>
  405b90:	mov    DWORD PTR [rsp+0x44],r14d
  405b95:	jmp    4056f7 <__gcov_sort_n_vals@@Base+0x1147>
  405b9a:	xor    eax,eax
  405b9c:	jmp    405add <__gcov_sort_n_vals@@Base+0x152d>
  405ba1:	xor    eax,eax
  405ba3:	jmp    405b19 <__gcov_sort_n_vals@@Base+0x1569>
  405ba8:	xor    eax,eax
  405baa:	jmp    405afb <__gcov_sort_n_vals@@Base+0x154b>
  405baf:	mov    r11,r10
  405bb2:	jmp    405078 <__gcov_sort_n_vals@@Base+0xac8>
  405bb7:	lea    r15,[rsp+0x1840]
  405bbf:	xor    eax,eax
  405bc1:	mov    ecx,0x2f9
  405bc6:	mov    rdi,r15
  405bc9:	rep stos QWORD PTR es:[rdi],rax
  405bcc:	mov    eax,DWORD PTR [rsp+0x44]
  405bd0:	cmp    QWORD PTR [r13+0x20],0x0
  405bd5:	mov    DWORD PTR [rsp+0x40],eax
  405bd9:	jne    404d1b <__gcov_sort_n_vals@@Base+0x76b>
  405bdf:	jmp    404d98 <__gcov_sort_n_vals@@Base+0x7e8>
  405be4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405bef:	nop
  405bf0:	endbr64 
  405bf4:	movzx  esi,BYTE PTR [rdi+0x8]
  405bf8:	test   sil,0x1
  405bfc:	je     405c00 <__gcov_sort_n_vals@@Base+0x1650>
  405bfe:	ret    
  405bff:	nop
  405c00:	push   rbx
  405c01:	shr    sil,1
  405c04:	mov    rbx,rdi
  405c07:	mov    rdi,QWORD PTR [rdi]
  405c0a:	and    esi,0x1
  405c0d:	call   404660 <__gcov_sort_n_vals@@Base+0xb0>
  405c12:	or     BYTE PTR [rbx+0x8],0x3
  405c16:	pop    rbx
  405c17:	ret    
  405c18:	nop    DWORD PTR [rax+rax*1+0x0]
  405c20:	endbr64 
  405c24:	movzx  esi,BYTE PTR [rip+0x3efd]        # 409b28 <__gcov_error_file@@Base+0x38>
  405c2b:	push   rbx
  405c2c:	test   sil,0x1
  405c30:	jne    405c4b <__gcov_sort_n_vals@@Base+0x169b>
  405c32:	shr    sil,1
  405c35:	mov    rdi,QWORD PTR [rip+0x3ee4]        # 409b20 <__gcov_error_file@@Base+0x30>
  405c3c:	and    esi,0x1
  405c3f:	call   404660 <__gcov_sort_n_vals@@Base+0xb0>
  405c44:	or     BYTE PTR [rip+0x3edd],0x3        # 409b28 <__gcov_error_file@@Base+0x38>
  405c4b:	mov    rdx,QWORD PTR [rip+0x3ede]        # 409b30 <__gcov_error_file@@Base+0x40>
  405c52:	mov    rax,QWORD PTR [rip+0x3edf]        # 409b38 <__gcov_error_file@@Base+0x48>
  405c59:	test   rdx,rdx
  405c5c:	je     405c69 <__gcov_sort_n_vals@@Base+0x16b9>
  405c5e:	mov    QWORD PTR [rdx+0x18],rax
  405c62:	mov    rax,QWORD PTR [rip+0x3ecf]        # 409b38 <__gcov_error_file@@Base+0x48>
  405c69:	test   rax,rax
  405c6c:	je     405ca0 <__gcov_sort_n_vals@@Base+0x16f0>
  405c6e:	mov    QWORD PTR [rax+0x10],rdx
  405c72:	mov    rbx,0x409af0
  405c79:	mov    rdi,QWORD PTR [rbx]
  405c7c:	test   rdi,rdi
  405c7f:	je     405c99 <__gcov_sort_n_vals@@Base+0x16e9>
  405c81:	mov    rax,QWORD PTR [rip+0x3370]        # 408ff8 <stderr@GLIBC_2.2.5>
  405c88:	cmp    rdi,QWORD PTR [rax]
  405c8b:	je     405c99 <__gcov_sort_n_vals@@Base+0x16e9>
  405c8d:	call   4023d0 <fclose@plt>
  405c92:	mov    QWORD PTR [rbx],0x0
  405c99:	pop    rbx
  405c9a:	ret    
  405c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  405ca0:	mov    rax,0x4096a0
  405ca7:	mov    QWORD PTR [rax+0x8],rdx
  405cab:	jmp    405c72 <__gcov_sort_n_vals@@Base+0x16c2>
  405cad:	nop    DWORD PTR [rax]
  405cb0:	endbr64 
  405cb4:	mov    esi,DWORD PTR [rdi]
  405cb6:	test   esi,esi
  405cb8:	je     405d00 <__gcov_sort_n_vals@@Base+0x1750>
  405cba:	mov    eax,DWORD PTR [rdi+0x68]
  405cbd:	test   eax,eax
  405cbf:	je     405d00 <__gcov_sort_n_vals@@Base+0x1750>
  405cc1:	push   rbp
  405cc2:	push   rbx
  405cc3:	mov    rbx,rdi
  405cc6:	sub    rsp,0x8
  405cca:	cmp    esi,0x4138342a
  405cd0:	je     405ce1 <__gcov_sort_n_vals@@Base+0x1731>
  405cd2:	xor    edx,edx
  405cd4:	lea    rdi,[rdi+0x18]
  405cd8:	call   403ea0 <b64_decode@@Base+0x57a>
  405cdd:	test   eax,eax
  405cdf:	je     405cf8 <__gcov_sort_n_vals@@Base+0x1748>
  405ce1:	mov    rax,QWORD PTR [rip+0x3e38]        # 409b20 <__gcov_error_file@@Base+0x30>
  405ce8:	test   rax,rax
  405ceb:	je     405d08 <__gcov_sort_n_vals@@Base+0x1758>
  405ced:	mov    QWORD PTR [rbx+0x8],rax
  405cf1:	mov    QWORD PTR [rip+0x3e28],rbx        # 409b20 <__gcov_error_file@@Base+0x30>
  405cf8:	add    rsp,0x8
  405cfc:	pop    rbx
  405cfd:	pop    rbp
  405cfe:	ret    
  405cff:	nop
  405d00:	ret    
  405d01:	nop    DWORD PTR [rax+0x0]
  405d08:	mov    rbp,0x4096a0
  405d0f:	mov    esi,DWORD PTR [rbp+0x0]
  405d12:	cmp    esi,0x4138342a
  405d18:	jne    405d40 <__gcov_sort_n_vals@@Base+0x1790>
  405d1a:	mov    rdx,QWORD PTR [rbp+0x8]
  405d1e:	lea    rcx,[rip+0x3dfb]        # 409b20 <__gcov_error_file@@Base+0x30>
  405d25:	mov    QWORD PTR [rip+0x3e04],rdx        # 409b30 <__gcov_error_file@@Base+0x40>
  405d2c:	test   rdx,rdx
  405d2f:	je     405d35 <__gcov_sort_n_vals@@Base+0x1785>
  405d31:	mov    QWORD PTR [rdx+0x18],rcx
  405d35:	mov    QWORD PTR [rbp+0x8],rcx
  405d39:	jmp    405ced <__gcov_sort_n_vals@@Base+0x173d>
  405d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d40:	lea    rdx,[rip+0xd28]        # 406a6f <_IO_stdin_used@@Base+0xa6f>
  405d47:	mov    edi,0x18
  405d4c:	call   403ea0 <b64_decode@@Base+0x57a>
  405d51:	test   eax,eax
  405d53:	mov    rax,QWORD PTR [rip+0x3dc6]        # 409b20 <__gcov_error_file@@Base+0x30>
  405d5a:	jne    405d1a <__gcov_sort_n_vals@@Base+0x176a>
  405d5c:	jmp    405ced <__gcov_sort_n_vals@@Base+0x173d>
  405d5e:	xchg   ax,ax
  405d60:	endbr64 
  405d64:	movabs rdx,0x5555555555555555
  405d6e:	mov    rax,rdi
  405d71:	shr    rax,1
  405d74:	and    rax,rdx
  405d77:	movabs rdx,0x3333333333333333
  405d81:	sub    rdi,rax
  405d84:	mov    rax,rdi
  405d87:	shr    rdi,0x2
  405d8b:	and    rax,rdx
  405d8e:	and    rdi,rdx
  405d91:	movabs rdx,0xf0f0f0f0f0f0f0f
  405d9b:	add    rdi,rax
  405d9e:	mov    rax,rdi
  405da1:	shr    rax,0x4
  405da5:	add    rax,rdi
  405da8:	and    rax,rdx
  405dab:	movabs rdx,0x101010101010101
  405db5:	imul   rax,rdx
  405db9:	shr    rax,0x38
  405dbd:	ret    
  405dbe:	xchg   ax,ax

0000000000405dc0 <__libc_csu_init@@Base>:
  405dc0:	endbr64 
  405dc4:	push   r15
  405dc6:	lea    r15,[rip+0x2ffb]        # 408dc8 <_IO_stdin_used@@Base+0x2dc8>
  405dcd:	push   r14
  405dcf:	mov    r14,rdx
  405dd2:	push   r13
  405dd4:	mov    r13,rsi
  405dd7:	push   r12
  405dd9:	mov    r12d,edi
  405ddc:	push   rbp
  405ddd:	lea    rbp,[rip+0x3004]        # 408de8 <_IO_stdin_used@@Base+0x2de8>
  405de4:	push   rbx
  405de5:	sub    rbp,r15
  405de8:	sub    rsp,0x8
  405dec:	call   402000 <CU_basic_set_mode@plt-0x2a0>
  405df1:	sar    rbp,0x3
  405df5:	je     405e16 <__libc_csu_init@@Base+0x56>
  405df7:	xor    ebx,ebx
  405df9:	nop    DWORD PTR [rax+0x0]
  405e00:	mov    rdx,r14
  405e03:	mov    rsi,r13
  405e06:	mov    edi,r12d
  405e09:	call   QWORD PTR [r15+rbx*8]
  405e0d:	add    rbx,0x1
  405e11:	cmp    rbp,rbx
  405e14:	jne    405e00 <__libc_csu_init@@Base+0x40>
  405e16:	add    rsp,0x8
  405e1a:	pop    rbx
  405e1b:	pop    rbp
  405e1c:	pop    r12
  405e1e:	pop    r13
  405e20:	pop    r14
  405e22:	pop    r15
  405e24:	ret    
  405e25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000405e30 <__libc_csu_fini@@Base>:
  405e30:	endbr64 
  405e34:	ret    

Disassembly of section .fini:

0000000000405e38 <.fini>:
  405e38:	endbr64 
  405e3c:	sub    rsp,0x8
  405e40:	add    rsp,0x8
  405e44:	ret    
