
../repos/prog2/0.11.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <__stack_chk_fail@plt-0x4a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <__stack_chk_fail@plt-0x40>
  40105f:	nop

Disassembly of section .plt.sec:

0000000000401060 <__stack_chk_fail@plt>:
  401060:	endbr64 
  401064:	bnd jmp QWORD PTR [rip+0x2fad]        # 404018 <__stack_chk_fail@GLIBC_2.4>
  40106b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401070 <printf@plt>:
  401070:	endbr64 
  401074:	bnd jmp QWORD PTR [rip+0x2fa5]        # 404020 <printf@GLIBC_2.2.5>
  40107b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401080 <__isoc99_scanf@plt>:
  401080:	endbr64 
  401084:	bnd jmp QWORD PTR [rip+0x2f9d]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  40108b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000401090 <_start@@Base>:
  401090:	endbr64 
  401094:	xor    ebp,ebp
  401096:	mov    r9,rdx
  401099:	pop    rsi
  40109a:	mov    rdx,rsp
  40109d:	and    rsp,0xfffffffffffffff0
  4010a1:	push   rax
  4010a2:	push   rsp
  4010a3:	mov    r8,0x401310
  4010aa:	mov    rcx,0x4012a0
  4010b1:	mov    rdi,0x4011e5
  4010b8:	call   QWORD PTR [rip+0x2f32]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010be:	hlt    
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	ret    
  4010c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010cf:	nop
  4010d0:	mov    eax,0x404040
  4010d5:	cmp    rax,0x404040
  4010db:	je     4010f0 <_start@@Base+0x60>
  4010dd:	mov    eax,0x0
  4010e2:	test   rax,rax
  4010e5:	je     4010f0 <_start@@Base+0x60>
  4010e7:	mov    edi,0x404040
  4010ec:	jmp    rax
  4010ee:	xchg   ax,ax
  4010f0:	ret    
  4010f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4010fc:	nop    DWORD PTR [rax+0x0]
  401100:	mov    esi,0x404040
  401105:	sub    rsi,0x404040
  40110c:	sar    rsi,0x3
  401110:	mov    rax,rsi
  401113:	shr    rax,0x3f
  401117:	add    rsi,rax
  40111a:	sar    rsi,1
  40111d:	je     401130 <_start@@Base+0xa0>
  40111f:	mov    eax,0x0
  401124:	test   rax,rax
  401127:	je     401130 <_start@@Base+0xa0>
  401129:	mov    edi,0x404040
  40112e:	jmp    rax
  401130:	ret    
  401131:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40113c:	nop    DWORD PTR [rax+0x0]
  401140:	endbr64 
  401144:	cmp    BYTE PTR [rip+0x2ef5],0x0        # 404040 <__bss_start@@Base>
  40114b:	jne    401160 <_start@@Base+0xd0>
  40114d:	push   rbp
  40114e:	mov    rbp,rsp
  401151:	call   4010d0 <_start@@Base+0x40>
  401156:	mov    BYTE PTR [rip+0x2ee3],0x1        # 404040 <__bss_start@@Base>
  40115d:	pop    rbp
  40115e:	ret    
  40115f:	nop
  401160:	ret    
  401161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40116c:	nop    DWORD PTR [rax+0x0]
  401170:	endbr64 
  401174:	jmp    401100 <_start@@Base+0x70>

0000000000401176 <invert@@Base>:
  401176:	endbr64 
  40117a:	push   rbp
  40117b:	mov    rbp,rsp
  40117e:	mov    DWORD PTR [rbp-0x14],edi
  401181:	mov    DWORD PTR [rbp-0x4],0x0
  401188:	jmp    4011da <invert@@Base+0x64>
  40118a:	mov    edx,DWORD PTR [rbp-0x4]
  40118d:	mov    eax,edx
  40118f:	shl    eax,0x2
  401192:	add    eax,edx
  401194:	add    eax,eax
  401196:	mov    DWORD PTR [rbp-0x4],eax
  401199:	mov    ecx,DWORD PTR [rbp-0x14]
  40119c:	mov    edx,0x66666667
  4011a1:	mov    eax,ecx
  4011a3:	imul   edx
  4011a5:	sar    edx,0x2
  4011a8:	mov    eax,ecx
  4011aa:	sar    eax,0x1f
  4011ad:	sub    edx,eax
  4011af:	mov    eax,edx
  4011b1:	shl    eax,0x2
  4011b4:	add    eax,edx
  4011b6:	add    eax,eax
  4011b8:	sub    ecx,eax
  4011ba:	mov    edx,ecx
  4011bc:	add    DWORD PTR [rbp-0x4],edx
  4011bf:	mov    ecx,DWORD PTR [rbp-0x14]
  4011c2:	mov    edx,0x66666667
  4011c7:	mov    eax,ecx
  4011c9:	imul   edx
  4011cb:	sar    edx,0x2
  4011ce:	mov    eax,ecx
  4011d0:	sar    eax,0x1f
  4011d3:	sub    edx,eax
  4011d5:	mov    eax,edx
  4011d7:	mov    DWORD PTR [rbp-0x14],eax
  4011da:	cmp    DWORD PTR [rbp-0x14],0x0
  4011de:	jne    40118a <invert@@Base+0x14>
  4011e0:	mov    eax,DWORD PTR [rbp-0x4]
  4011e3:	pop    rbp
  4011e4:	ret    

00000000004011e5 <main@@Base>:
  4011e5:	endbr64 
  4011e9:	push   rbp
  4011ea:	mov    rbp,rsp
  4011ed:	push   rbx
  4011ee:	sub    rsp,0x28
  4011f2:	mov    rax,QWORD PTR fs:0x28
  4011fb:	mov    QWORD PTR [rbp-0x18],rax
  4011ff:	xor    eax,eax
  401201:	lea    rax,[rbp-0x28]
  401205:	mov    rsi,rax
  401208:	lea    rdi,[rip+0xdf5]        # 402004 <_IO_stdin_used@@Base+0x4>
  40120f:	mov    eax,0x0
  401214:	call   401080 <__isoc99_scanf@plt>
  401219:	mov    DWORD PTR [rbp-0x1c],0x0
  401220:	jmp    401273 <main@@Base+0x8e>
  401222:	lea    rdx,[rbp-0x20]
  401226:	lea    rax,[rbp-0x24]
  40122a:	mov    rsi,rax
  40122d:	lea    rdi,[rip+0xdd3]        # 402007 <_IO_stdin_used@@Base+0x7>
  401234:	mov    eax,0x0
  401239:	call   401080 <__isoc99_scanf@plt>
  40123e:	mov    eax,DWORD PTR [rbp-0x24]
  401241:	mov    edi,eax
  401243:	call   401176 <invert@@Base>
  401248:	mov    ebx,eax
  40124a:	mov    eax,DWORD PTR [rbp-0x20]
  40124d:	mov    edi,eax
  40124f:	call   401176 <invert@@Base>
  401254:	add    eax,ebx
  401256:	mov    edi,eax
  401258:	call   401176 <invert@@Base>
  40125d:	mov    esi,eax
  40125f:	lea    rdi,[rip+0xda7]        # 40200d <_IO_stdin_used@@Base+0xd>
  401266:	mov    eax,0x0
  40126b:	call   401070 <printf@plt>
  401270:	inc    DWORD PTR [rbp-0x1c]
  401273:	mov    eax,DWORD PTR [rbp-0x28]
  401276:	cmp    DWORD PTR [rbp-0x1c],eax
  401279:	jl     401222 <main@@Base+0x3d>
  40127b:	mov    eax,0x0
  401280:	mov    rcx,QWORD PTR [rbp-0x18]
  401284:	xor    rcx,QWORD PTR fs:0x28
  40128d:	je     401294 <main@@Base+0xaf>
  40128f:	call   401060 <__stack_chk_fail@plt>
  401294:	add    rsp,0x28
  401298:	pop    rbx
  401299:	pop    rbp
  40129a:	ret    
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <__libc_csu_init@@Base>:
  4012a0:	endbr64 
  4012a4:	push   r15
  4012a6:	lea    r15,[rip+0x2b63]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4012ad:	push   r14
  4012af:	mov    r14,rdx
  4012b2:	push   r13
  4012b4:	mov    r13,rsi
  4012b7:	push   r12
  4012b9:	mov    r12d,edi
  4012bc:	push   rbp
  4012bd:	lea    rbp,[rip+0x2b54]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  4012c4:	push   rbx
  4012c5:	sub    rbp,r15
  4012c8:	sub    rsp,0x8
  4012cc:	call   401000 <__stack_chk_fail@plt-0x60>
  4012d1:	sar    rbp,0x3
  4012d5:	je     4012f6 <__libc_csu_init@@Base+0x56>
  4012d7:	xor    ebx,ebx
  4012d9:	nop    DWORD PTR [rax+0x0]
  4012e0:	mov    rdx,r14
  4012e3:	mov    rsi,r13
  4012e6:	mov    edi,r12d
  4012e9:	call   QWORD PTR [r15+rbx*8]
  4012ed:	add    rbx,0x1
  4012f1:	cmp    rbp,rbx
  4012f4:	jne    4012e0 <__libc_csu_init@@Base+0x40>
  4012f6:	add    rsp,0x8
  4012fa:	pop    rbx
  4012fb:	pop    rbp
  4012fc:	pop    r12
  4012fe:	pop    r13
  401300:	pop    r14
  401302:	pop    r15
  401304:	ret    
  401305:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401310 <__libc_csu_fini@@Base>:
  401310:	endbr64 
  401314:	ret    

Disassembly of section .fini:

0000000000401318 <.fini>:
  401318:	endbr64 
  40131c:	sub    rsp,0x8
  401320:	add    rsp,0x8
  401324:	ret    
