
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x6fe9]        # 409ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x6fe2]        # 40a008 <_IO_stdin_used@@Base+0x3008>
  403026:	jmp    QWORD PTR [rip+0x6fe4]        # 40a010 <_IO_stdin_used@@Base+0x3010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0x6fe2]        # 40a018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0x6fda]        # 40a020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strcpy@plt>:
  403050:	jmp    QWORD PTR [rip+0x6fd2]        # 40a028 <strcpy@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <strlen@plt>:
  403060:	jmp    QWORD PTR [rip+0x6fca]        # 40a030 <strlen@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <printf@plt>:
  403070:	jmp    QWORD PTR [rip+0x6fc2]        # 40a038 <printf@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <snprintf@plt>:
  403080:	jmp    QWORD PTR [rip+0x6fba]        # 40a040 <snprintf@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <srand@plt>:
  403090:	jmp    QWORD PTR [rip+0x6fb2]        # 40a048 <srand@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <strcmp@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x6faa]        # 40a050 <strcmp@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <time@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x6fa2]        # 40a058 <time@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <malloc@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x6f9a]        # 40a060 <malloc@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <__isoc99_sscanf@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x6f92]        # 40a068 <__isoc99_sscanf@GLIBC_2.7>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <realloc@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x6f8a]        # 40a070 <realloc@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <rand@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x6f82]        # 40a078 <rand@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403100 <_start@@Base>:
  403100:	endbr64 
  403104:	xor    ebp,ebp
  403106:	mov    r9,rdx
  403109:	pop    rsi
  40310a:	mov    rdx,rsp
  40310d:	and    rsp,0xfffffffffffffff0
  403111:	push   rax
  403112:	push   rsp
  403113:	mov    r8,0x406ef0
  40311a:	mov    rcx,0x406e80
  403121:	mov    rdi,0x4031f0
  403128:	call   QWORD PTR [rip+0x6ec2]        # 409ff0 <__libc_start_main@GLIBC_2.2.5>
  40312e:	hlt    
  40312f:	nop
  403130:	endbr64 
  403134:	ret    
  403135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40313f:	nop
  403140:	mov    eax,0x40a090
  403145:	cmp    rax,0x40a090
  40314b:	je     403160 <_start@@Base+0x60>
  40314d:	mov    eax,0x0
  403152:	test   rax,rax
  403155:	je     403160 <_start@@Base+0x60>
  403157:	mov    edi,0x40a090
  40315c:	jmp    rax
  40315e:	xchg   ax,ax
  403160:	ret    
  403161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40316c:	nop    DWORD PTR [rax+0x0]
  403170:	mov    esi,0x40a090
  403175:	sub    rsi,0x40a090
  40317c:	mov    rax,rsi
  40317f:	shr    rsi,0x3f
  403183:	sar    rax,0x3
  403187:	add    rsi,rax
  40318a:	sar    rsi,1
  40318d:	je     4031a0 <_start@@Base+0xa0>
  40318f:	mov    eax,0x0
  403194:	test   rax,rax
  403197:	je     4031a0 <_start@@Base+0xa0>
  403199:	mov    edi,0x40a090
  40319e:	jmp    rax
  4031a0:	ret    
  4031a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ac:	nop    DWORD PTR [rax+0x0]
  4031b0:	endbr64 
  4031b4:	cmp    BYTE PTR [rip+0x6ed5],0x0        # 40a090 <__bss_start@@Base>
  4031bb:	jne    4031d0 <_start@@Base+0xd0>
  4031bd:	push   rbp
  4031be:	mov    rbp,rsp
  4031c1:	call   403140 <_start@@Base+0x40>
  4031c6:	mov    BYTE PTR [rip+0x6ec3],0x1        # 40a090 <__bss_start@@Base>
  4031cd:	pop    rbp
  4031ce:	ret    
  4031cf:	nop
  4031d0:	ret    
  4031d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031dc:	nop    DWORD PTR [rax+0x0]
  4031e0:	endbr64 
  4031e4:	jmp    403170 <_start@@Base+0x70>
  4031e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031f0 <main@@Base>:
  4031f0:	push   rbp
  4031f1:	push   r15
  4031f3:	push   r14
  4031f5:	push   r13
  4031f7:	push   r12
  4031f9:	push   rbx
  4031fa:	sub    rsp,0x18738
  403201:	lea    rdi,[rsp+0x18]
  403206:	call   4030b0 <time@plt>
  40320b:	mov    edi,eax
  40320d:	call   403090 <srand@plt>
  403212:	call   4030f0 <rand@plt>
  403217:	movsxd r14,eax
  40321a:	imul   rax,r14,0x51eb851f
  403221:	mov    rcx,rax
  403224:	shr    rcx,0x3f
  403228:	sar    rax,0x25
  40322c:	add    eax,ecx
  40322e:	imul   eax,eax,0x64
  403231:	sub    r14d,eax
  403234:	lea    rbx,[rsp+0x20]
  403239:	mov    rdi,rbx
  40323c:	call   403850 <table_init@@Base>
  403241:	lea    rsi,[rip+0x3e1c]        # 407064 <_IO_stdin_used@@Base+0x64>
  403248:	mov    DWORD PTR [rsp],0x0
  40324f:	mov    rdi,rbx
  403252:	xor    edx,edx
  403254:	call   404280 <table_add_column@@Base>
  403259:	mov    r15d,eax
  40325c:	lea    rsi,[rip+0x3e04]        # 407067 <_IO_stdin_used@@Base+0x67>
  403263:	mov    rdi,rbx
  403266:	mov    edx,0x15
  40326b:	call   404280 <table_add_column@@Base>
  403270:	add    r14d,0x64
  403274:	jle    4032d6 <main@@Base+0xe6>
  403276:	mov    r12d,eax
  403279:	lea    r13,[rsp+0x90]
  403281:	lea    rbp,[rsp+0x20]
  403286:	xor    ebx,ebx
  403288:	nop    DWORD PTR [rax+rax*1+0x0]
  403290:	mov    esi,0xff
  403295:	mov    rdi,r13
  403298:	lea    rdx,[rip+0x3e44]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  40329f:	mov    ecx,ebx
  4032a1:	xor    eax,eax
  4032a3:	call   403080 <snprintf@plt>
  4032a8:	mov    rdi,rbp
  4032ab:	call   404e50 <table_add_row@@Base>
  4032b0:	mov    rdi,rbp
  4032b3:	mov    esi,ebx
  4032b5:	mov    edx,r15d
  4032b8:	mov    ecx,ebx
  4032ba:	call   405410 <table_set_int@@Base>
  4032bf:	mov    rdi,rbp
  4032c2:	mov    esi,ebx
  4032c4:	mov    edx,r12d
  4032c7:	mov    rcx,r13
  4032ca:	call   405dd0 <table_set_string@@Base>
  4032cf:	inc    ebx
  4032d1:	cmp    r14d,ebx
  4032d4:	jne    403290 <main@@Base+0xa0>
  4032d6:	lea    rbx,[rsp+0x20]
  4032db:	lea    rbp,[rsp+0x90]
  4032e3:	mov    edx,0x186a0
  4032e8:	mov    rdi,rbx
  4032eb:	mov    rsi,rbp
  4032ee:	call   405f40 <table_serialize@@Base>
  4032f3:	mov    esi,0x186a0
  4032f8:	mov    rdi,rbp
  4032fb:	call   406160 <table_deserialize@@Base>
  403300:	mov    r15,rax
  403303:	mov    rdi,rbx
  403306:	call   404e40 <table_get_row_length@@Base>
  40330b:	mov    ebp,eax
  40330d:	mov    rdi,r15
  403310:	call   404e40 <table_get_row_length@@Base>
  403315:	mov    ebx,eax
  403317:	mov    DWORD PTR [rsp+0x4],ebp
  40331b:	cmp    eax,ebp
  40331d:	je     40333a <main@@Base+0x14a>
  40331f:	lea    rdi,[rip+0x3d47]        # 40706d <_IO_stdin_used@@Base+0x6d>
  403326:	mov    esi,DWORD PTR [rsp+0x4]
  40332a:	mov    edx,ebx
  40332c:	xor    eax,eax
  40332e:	call   403070 <printf@plt>
  403333:	mov    DWORD PTR [rsp],0xffffffff
  40333a:	lea    rdi,[rsp+0x20]
  40333f:	call   4041f0 <table_get_column_length@@Base>
  403344:	mov    ebp,eax
  403346:	mov    rdi,r15
  403349:	call   4041f0 <table_get_column_length@@Base>
  40334e:	cmp    eax,ebp
  403350:	jne    4037a0 <main@@Base+0x5b0>
  403356:	cmp    ebx,DWORD PTR [rsp+0x4]
  40335a:	jne    4037b9 <main@@Base+0x5c9>
  403360:	test   ebx,ebx
  403362:	jle    4037b9 <main@@Base+0x5c9>
  403368:	lea    r12,[rsp+0x20]
  40336d:	xor    r13d,r13d
  403370:	test   ebp,ebp
  403372:	jg     4033ad <main@@Base+0x1bd>
  403374:	jmp    40339b <main@@Base+0x1ab>
  403376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403380:	lea    rdi,[rip+0x3d5f]        # 4070e6 <_IO_stdin_used@@Base+0xe6>
  403387:	mov    esi,r13d
  40338a:	mov    edx,r14d
  40338d:	xor    eax,eax
  40338f:	call   403070 <printf@plt>
  403394:	mov    DWORD PTR [rsp],0xffffffff
  40339b:	inc    r13d
  40339e:	cmp    r13d,DWORD PTR [rsp+0x4]
  4033a3:	je     4037b9 <main@@Base+0x5c9>
  4033a9:	test   ebp,ebp
  4033ab:	jle    40339b <main@@Base+0x1ab>
  4033ad:	xor    r14d,r14d
  4033b0:	jmp    4033ed <main@@Base+0x1fd>
  4033b2:	mov    rdi,r12
  4033b5:	mov    esi,r13d
  4033b8:	mov    edx,r14d
  4033bb:	call   404ca0 <table_get_int64@@Base>
  4033c0:	mov    rbx,rax
  4033c3:	mov    rdi,r15
  4033c6:	mov    esi,r13d
  4033c9:	mov    edx,r14d
  4033cc:	call   404ca0 <table_get_int64@@Base>
  4033d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4033db:	nop    DWORD PTR [rax+rax*1+0x0]
  4033e0:	cmp    rbx,rax
  4033e3:	jne    403380 <main@@Base+0x190>
  4033e5:	inc    r14d
  4033e8:	cmp    ebp,r14d
  4033eb:	je     40339b <main@@Base+0x1ab>
  4033ed:	mov    rdi,r12
  4033f0:	mov    esi,r14d
  4033f3:	call   404270 <table_get_column_data_type@@Base>
  4033f8:	cmp    eax,0x17
  4033fb:	ja     4033e5 <main@@Base+0x1f5>
  4033fd:	mov    eax,eax
  4033ff:	lea    rcx,[rip+0x3bfe]        # 407004 <_IO_stdin_used@@Base+0x4>
  403406:	movsxd rax,DWORD PTR [rcx+rax*4]
  40340a:	add    rax,rcx
  40340d:	jmp    rax
  40340f:	mov    rdi,r12
  403412:	mov    esi,r13d
  403415:	mov    edx,r14d
  403418:	call   404c20 <table_get_int@@Base>
  40341d:	mov    rbx,r15
  403420:	mov    r15d,eax
  403423:	mov    rdi,rbx
  403426:	mov    esi,r13d
  403429:	mov    edx,r14d
  40342c:	call   404c20 <table_get_int@@Base>
  403431:	cmp    r15d,eax
  403434:	mov    r15,rbx
  403437:	je     4033e5 <main@@Base+0x1f5>
  403439:	jmp    403380 <main@@Base+0x190>
  40343e:	mov    rdi,r12
  403441:	mov    esi,r13d
  403444:	mov    edx,r14d
  403447:	call   404c30 <table_get_uint@@Base>
  40344c:	mov    ebx,eax
  40344e:	mov    rdi,r15
  403451:	mov    esi,r13d
  403454:	mov    edx,r14d
  403457:	call   404c30 <table_get_uint@@Base>
  40345c:	jmp    40352b <main@@Base+0x33b>
  403461:	mov    rdi,r12
  403464:	mov    esi,r13d
  403467:	mov    edx,r14d
  40346a:	call   404c40 <table_get_int8@@Base>
  40346f:	mov    ebx,eax
  403471:	mov    rdi,r15
  403474:	mov    esi,r13d
  403477:	mov    edx,r14d
  40347a:	call   404c40 <table_get_int8@@Base>
  40347f:	jmp    40370b <main@@Base+0x51b>
  403484:	mov    rdi,r12
  403487:	mov    esi,r13d
  40348a:	mov    edx,r14d
  40348d:	call   404c50 <table_get_uint8@@Base>
  403492:	mov    ebx,eax
  403494:	mov    rdi,r15
  403497:	mov    esi,r13d
  40349a:	mov    edx,r14d
  40349d:	call   404c50 <table_get_uint8@@Base>
  4034a2:	jmp    40370b <main@@Base+0x51b>
  4034a7:	mov    rdi,r12
  4034aa:	mov    esi,r13d
  4034ad:	mov    edx,r14d
  4034b0:	call   404c60 <table_get_int16@@Base>
  4034b5:	mov    ebx,eax
  4034b7:	mov    rdi,r15
  4034ba:	mov    esi,r13d
  4034bd:	mov    edx,r14d
  4034c0:	call   404c60 <table_get_int16@@Base>
  4034c5:	jmp    40359a <main@@Base+0x3aa>
  4034ca:	mov    rdi,r12
  4034cd:	mov    esi,r13d
  4034d0:	mov    edx,r14d
  4034d3:	call   404c70 <table_get_uint16@@Base>
  4034d8:	mov    ebx,eax
  4034da:	mov    rdi,r15
  4034dd:	mov    esi,r13d
  4034e0:	mov    edx,r14d
  4034e3:	call   404c70 <table_get_uint16@@Base>
  4034e8:	jmp    40359a <main@@Base+0x3aa>
  4034ed:	mov    rdi,r12
  4034f0:	mov    esi,r13d
  4034f3:	mov    edx,r14d
  4034f6:	call   404c80 <table_get_int32@@Base>
  4034fb:	mov    ebx,eax
  4034fd:	mov    rdi,r15
  403500:	mov    esi,r13d
  403503:	mov    edx,r14d
  403506:	call   404c80 <table_get_int32@@Base>
  40350b:	jmp    40352b <main@@Base+0x33b>
  40350d:	mov    rdi,r12
  403510:	mov    esi,r13d
  403513:	mov    edx,r14d
  403516:	call   404c90 <table_get_uint32@@Base>
  40351b:	mov    ebx,eax
  40351d:	mov    rdi,r15
  403520:	mov    esi,r13d
  403523:	mov    edx,r14d
  403526:	call   404c90 <table_get_uint32@@Base>
  40352b:	cmp    ebx,eax
  40352d:	je     4033e5 <main@@Base+0x1f5>
  403533:	jmp    403380 <main@@Base+0x190>
  403538:	mov    rdi,r12
  40353b:	mov    esi,r13d
  40353e:	mov    edx,r14d
  403541:	call   404cb0 <table_get_uint64@@Base>
  403546:	mov    rbx,rax
  403549:	mov    rdi,r15
  40354c:	mov    esi,r13d
  40354f:	mov    edx,r14d
  403552:	call   404cb0 <table_get_uint64@@Base>
  403557:	jmp    4033e0 <main@@Base+0x1f0>
  40355c:	mov    rdi,r12
  40355f:	mov    esi,r13d
  403562:	mov    edx,r14d
  403565:	call   404cc0 <table_get_short@@Base>
  40356a:	mov    ebx,eax
  40356c:	mov    rdi,r15
  40356f:	mov    esi,r13d
  403572:	mov    edx,r14d
  403575:	call   404cc0 <table_get_short@@Base>
  40357a:	jmp    40359a <main@@Base+0x3aa>
  40357c:	mov    rdi,r12
  40357f:	mov    esi,r13d
  403582:	mov    edx,r14d
  403585:	call   404cd0 <table_get_ushort@@Base>
  40358a:	mov    ebx,eax
  40358c:	mov    rdi,r15
  40358f:	mov    esi,r13d
  403592:	mov    edx,r14d
  403595:	call   404cd0 <table_get_ushort@@Base>
  40359a:	cmp    bx,ax
  40359d:	je     4033e5 <main@@Base+0x1f5>
  4035a3:	jmp    403380 <main@@Base+0x190>
  4035a8:	mov    rdi,r12
  4035ab:	mov    esi,r13d
  4035ae:	mov    edx,r14d
  4035b1:	call   404ce0 <table_get_long@@Base>
  4035b6:	mov    rbx,rax
  4035b9:	mov    rdi,r15
  4035bc:	mov    esi,r13d
  4035bf:	mov    edx,r14d
  4035c2:	call   404ce0 <table_get_long@@Base>
  4035c7:	jmp    4033e0 <main@@Base+0x1f0>
  4035cc:	mov    rdi,r12
  4035cf:	mov    esi,r13d
  4035d2:	mov    edx,r14d
  4035d5:	call   404cf0 <table_get_ulong@@Base>
  4035da:	mov    rbx,rax
  4035dd:	mov    rdi,r15
  4035e0:	mov    esi,r13d
  4035e3:	mov    edx,r14d
  4035e6:	call   404cf0 <table_get_ulong@@Base>
  4035eb:	jmp    4033e0 <main@@Base+0x1f0>
  4035f0:	mov    rdi,r12
  4035f3:	mov    esi,r13d
  4035f6:	mov    edx,r14d
  4035f9:	call   404d00 <table_get_llong@@Base>
  4035fe:	mov    rbx,rax
  403601:	mov    rdi,r15
  403604:	mov    esi,r13d
  403607:	mov    edx,r14d
  40360a:	call   404d00 <table_get_llong@@Base>
  40360f:	jmp    4033e0 <main@@Base+0x1f0>
  403614:	mov    rdi,r12
  403617:	mov    esi,r13d
  40361a:	mov    edx,r14d
  40361d:	call   404d10 <table_get_ullong@@Base>
  403622:	mov    rbx,rax
  403625:	mov    rdi,r15
  403628:	mov    esi,r13d
  40362b:	mov    edx,r14d
  40362e:	call   404d10 <table_get_ullong@@Base>
  403633:	jmp    4033e0 <main@@Base+0x1f0>
  403638:	mov    rdi,r12
  40363b:	mov    esi,r13d
  40363e:	mov    edx,r14d
  403641:	call   404d20 <table_get_float@@Base>
  403646:	vmovss DWORD PTR [rsp+0x8],xmm0
  40364c:	mov    rdi,r15
  40364f:	mov    esi,r13d
  403652:	mov    edx,r14d
  403655:	call   404d20 <table_get_float@@Base>
  40365a:	vmovss xmm1,DWORD PTR [rsp+0x8]
  403660:	vucomiss xmm1,xmm0
  403664:	jmp    4036bc <main@@Base+0x4cc>
  403666:	mov    rdi,r12
  403669:	mov    esi,r13d
  40366c:	mov    edx,r14d
  40366f:	call   404d30 <table_get_double@@Base>
  403674:	vmovsd QWORD PTR [rsp+0x8],xmm0
  40367a:	mov    rdi,r15
  40367d:	mov    esi,r13d
  403680:	mov    edx,r14d
  403683:	call   404d30 <table_get_double@@Base>
  403688:	vmovsd xmm1,QWORD PTR [rsp+0x8]
  40368e:	vucomisd xmm1,xmm0
  403692:	jmp    4036bc <main@@Base+0x4cc>
  403694:	mov    rdi,r12
  403697:	mov    esi,r13d
  40369a:	mov    edx,r14d
  40369d:	call   404d40 <table_get_ldouble@@Base>
  4036a2:	fstp   TBYTE PTR [rsp+0x8]
  4036a6:	mov    rdi,r15
  4036a9:	mov    esi,r13d
  4036ac:	mov    edx,r14d
  4036af:	call   404d40 <table_get_ldouble@@Base>
  4036b4:	fld    TBYTE PTR [rsp+0x8]
  4036b8:	fucomip st,st(1)
  4036ba:	fstp   st(0)
  4036bc:	jne    403380 <main@@Base+0x190>
  4036c2:	jnp    4033e5 <main@@Base+0x1f5>
  4036c8:	jmp    403380 <main@@Base+0x190>
  4036cd:	mov    rdi,r12
  4036d0:	mov    esi,r13d
  4036d3:	mov    edx,r14d
  4036d6:	call   404d50 <table_get_char@@Base>
  4036db:	mov    ebx,eax
  4036dd:	mov    rdi,r15
  4036e0:	mov    esi,r13d
  4036e3:	mov    edx,r14d
  4036e6:	call   404d50 <table_get_char@@Base>
  4036eb:	jmp    40370b <main@@Base+0x51b>
  4036ed:	mov    rdi,r12
  4036f0:	mov    esi,r13d
  4036f3:	mov    edx,r14d
  4036f6:	call   404d60 <table_get_uchar@@Base>
  4036fb:	mov    ebx,eax
  4036fd:	mov    rdi,r15
  403700:	mov    esi,r13d
  403703:	mov    edx,r14d
  403706:	call   404d60 <table_get_uchar@@Base>
  40370b:	cmp    bl,al
  40370d:	je     4033e5 <main@@Base+0x1f5>
  403713:	jmp    403380 <main@@Base+0x190>
  403718:	mov    rdi,r12
  40371b:	mov    esi,r13d
  40371e:	mov    edx,r14d
  403721:	call   404d70 <table_get_string@@Base>
  403726:	mov    rbx,rax
  403729:	mov    rdi,r15
  40372c:	mov    esi,r13d
  40372f:	mov    edx,r14d
  403732:	call   404d70 <table_get_string@@Base>
  403737:	mov    rdi,rbx
  40373a:	mov    rsi,rax
  40373d:	call   4030a0 <strcmp@plt>
  403742:	test   eax,eax
  403744:	je     4033e5 <main@@Base+0x1f5>
  40374a:	jmp    403380 <main@@Base+0x190>
  40374f:	mov    rdi,r12
  403752:	mov    esi,r13d
  403755:	mov    edx,r14d
  403758:	call   404c10 <table_get_bool@@Base>
  40375d:	mov    ebx,eax
  40375f:	mov    rdi,r15
  403762:	mov    esi,r13d
  403765:	mov    edx,r14d
  403768:	call   404c10 <table_get_bool@@Base>
  40376d:	xor    al,bl
  40376f:	cmp    al,0x1
  403771:	jne    4033e5 <main@@Base+0x1f5>
  403777:	jmp    403380 <main@@Base+0x190>
  40377c:	mov    rdi,r12
  40377f:	mov    esi,r13d
  403782:	mov    edx,r14d
  403785:	call   404d80 <table_get_ptr@@Base>
  40378a:	mov    rbx,rax
  40378d:	mov    rdi,r15
  403790:	mov    esi,r13d
  403793:	mov    edx,r14d
  403796:	call   404d80 <table_get_ptr@@Base>
  40379b:	jmp    4033e0 <main@@Base+0x1f0>
  4037a0:	lea    rdi,[rip+0x3901]        # 4070a8 <_IO_stdin_used@@Base+0xa8>
  4037a7:	mov    esi,ebp
  4037a9:	mov    edx,eax
  4037ab:	xor    eax,eax
  4037ad:	call   403070 <printf@plt>
  4037b2:	mov    DWORD PTR [rsp],0xffffffff
  4037b9:	lea    rdi,[rsp+0x20]
  4037be:	call   4038e0 <table_destroy@@Base>
  4037c3:	mov    rdi,r15
  4037c6:	call   4038c0 <table_delete@@Base>
  4037cb:	mov    eax,DWORD PTR [rsp]
  4037ce:	add    rsp,0x18738
  4037d5:	pop    rbx
  4037d6:	pop    r12
  4037d8:	pop    r13
  4037da:	pop    r14
  4037dc:	pop    r15
  4037de:	pop    rbp
  4037df:	ret    

00000000004037e0 <table_new@@Base>:
  4037e0:	push   rax
  4037e1:	mov    edi,0x70
  4037e6:	call   4030c0 <malloc@plt>
  4037eb:	mov    QWORD PTR [rax],0x0
  4037f2:	mov    DWORD PTR [rax+0x8],0x0
  4037f9:	mov    ecx,0xa
  4037fe:	vmovq  xmm0,rcx
  403803:	vmovdqu XMMWORD PTR [rax+0x10],xmm0
  403808:	mov    QWORD PTR [rax+0x20],0x0
  403810:	mov    DWORD PTR [rax+0x28],0x0
  403817:	mov    ecx,0x14
  40381c:	vmovq  xmm0,rcx
  403821:	vmovdqu XMMWORD PTR [rax+0x30],xmm0
  403826:	mov    DWORD PTR [rax+0x40],0x0
  40382d:	mov    QWORD PTR [rax+0x68],0x0
  403835:	vpxor  xmm0,xmm0,xmm0
  403839:	vmovdqu XMMWORD PTR [rax+0x48],xmm0
  40383e:	mov    QWORD PTR [rax+0x58],0x0
  403846:	mov    QWORD PTR [rax+0x60],0xa
  40384e:	pop    rcx
  40384f:	ret    

0000000000403850 <table_init@@Base>:
  403850:	mov    QWORD PTR [rdi],0x0
  403857:	mov    DWORD PTR [rdi+0x8],0x0
  40385e:	mov    eax,0xa
  403863:	vmovq  xmm0,rax
  403868:	vmovdqu XMMWORD PTR [rdi+0x10],xmm0
  40386d:	mov    QWORD PTR [rdi+0x20],0x0
  403875:	mov    DWORD PTR [rdi+0x28],0x0
  40387c:	mov    eax,0x14
  403881:	vmovq  xmm0,rax
  403886:	vmovdqu XMMWORD PTR [rdi+0x30],xmm0
  40388b:	mov    DWORD PTR [rdi+0x40],0x0
  403892:	mov    QWORD PTR [rdi+0x68],0x0
  40389a:	vpxor  xmm0,xmm0,xmm0
  40389e:	vmovdqu XMMWORD PTR [rdi+0x48],xmm0
  4038a3:	mov    QWORD PTR [rdi+0x58],0x0
  4038ab:	mov    QWORD PTR [rdi+0x60],0xa
  4038b3:	ret    
  4038b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038be:	xchg   ax,ax

00000000004038c0 <table_delete@@Base>:
  4038c0:	push   rbx
  4038c1:	mov    rbx,rdi
  4038c4:	call   4038e0 <table_destroy@@Base>
  4038c9:	mov    rdi,rbx
  4038cc:	pop    rbx
  4038cd:	jmp    403030 <free@plt>
  4038d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038dc:	nop    DWORD PTR [rax+0x0]

00000000004038e0 <table_destroy@@Base>:
  4038e0:	test   rdi,rdi
  4038e3:	je     40399b <table_destroy@@Base+0xbb>
  4038e9:	push   rbp
  4038ea:	push   r14
  4038ec:	push   rbx
  4038ed:	mov    r14,rdi
  4038f0:	mov    esi,0xffffffff
  4038f5:	mov    edx,0xffffffff
  4038fa:	mov    ecx,0x40
  4038ff:	call   404100 <table_notify@@Base>
  403904:	mov    rdi,r14
  403907:	call   404e40 <table_get_row_length@@Base>
  40390c:	test   eax,eax
  40390e:	jle    403930 <table_destroy@@Base+0x50>
  403910:	mov    ebp,eax
  403912:	xor    ebx,ebx
  403914:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40391e:	xchg   ax,ax
  403920:	mov    rdi,r14
  403923:	mov    esi,ebx
  403925:	call   404dd0 <table_row_destroy@@Base>
  40392a:	inc    ebx
  40392c:	cmp    ebp,ebx
  40392e:	jne    403920 <table_destroy@@Base+0x40>
  403930:	mov    rdi,QWORD PTR [r14+0x20]
  403934:	test   rdi,rdi
  403937:	je     40393e <table_destroy@@Base+0x5e>
  403939:	call   403030 <free@plt>
  40393e:	mov    rdi,r14
  403941:	call   4041f0 <table_get_column_length@@Base>
  403946:	test   eax,eax
  403948:	jle    403960 <table_destroy@@Base+0x80>
  40394a:	mov    ebp,eax
  40394c:	xor    ebx,ebx
  40394e:	xchg   ax,ax
  403950:	mov    rdi,r14
  403953:	mov    esi,ebx
  403955:	call   4041d0 <table_column_destroy@@Base>
  40395a:	inc    ebx
  40395c:	cmp    ebp,ebx
  40395e:	jne    403950 <table_destroy@@Base+0x70>
  403960:	mov    rdi,QWORD PTR [r14]
  403963:	test   rdi,rdi
  403966:	je     40396d <table_destroy@@Base+0x8d>
  403968:	call   403030 <free@plt>
  40396d:	mov    rdi,QWORD PTR [r14+0x48]
  403971:	test   rdi,rdi
  403974:	je     40397b <table_destroy@@Base+0x9b>
  403976:	call   403030 <free@plt>
  40397b:	mov    rdi,QWORD PTR [r14+0x50]
  40397f:	test   rdi,rdi
  403982:	je     403989 <table_destroy@@Base+0xa9>
  403984:	call   403030 <free@plt>
  403989:	mov    rdi,QWORD PTR [r14+0x58]
  40398d:	test   rdi,rdi
  403990:	pop    rbx
  403991:	pop    r14
  403993:	pop    rbp
  403994:	je     40399b <table_destroy@@Base+0xbb>
  403996:	jmp    403030 <free@plt>
  40399b:	ret    
  40399c:	nop    DWORD PTR [rax+0x0]

00000000004039a0 <table_dupe@@Base>:
  4039a0:	push   rbp
  4039a1:	push   r15
  4039a3:	push   r14
  4039a5:	push   r13
  4039a7:	push   r12
  4039a9:	push   rbx
  4039aa:	sub    rsp,0x28
  4039ae:	mov    rbx,rdi
  4039b1:	call   404e40 <table_get_row_length@@Base>
  4039b6:	mov    DWORD PTR [rsp+0x1c],eax
  4039ba:	mov    rdi,rbx
  4039bd:	call   4041f0 <table_get_column_length@@Base>
  4039c2:	mov    r12d,eax
  4039c5:	mov    edi,0x70
  4039ca:	call   4030c0 <malloc@plt>
  4039cf:	mov    r15,rax
  4039d2:	mov    QWORD PTR [rax],0x0
  4039d9:	mov    DWORD PTR [rax+0x8],0x0
  4039e0:	mov    eax,0xa
  4039e5:	vmovq  xmm0,rax
  4039ea:	vmovdqu XMMWORD PTR [r15+0x10],xmm0
  4039f0:	mov    QWORD PTR [r15+0x20],0x0
  4039f8:	mov    DWORD PTR [r15+0x28],0x0
  403a00:	mov    eax,0x14
  403a05:	vmovq  xmm0,rax
  403a0a:	vmovdqu XMMWORD PTR [r15+0x30],xmm0
  403a10:	mov    DWORD PTR [r15+0x40],0x0
  403a18:	mov    QWORD PTR [r15+0x68],0x0
  403a20:	vpxor  xmm0,xmm0,xmm0
  403a24:	vmovdqu XMMWORD PTR [r15+0x48],xmm0
  403a2a:	mov    QWORD PTR [r15+0x58],0x0
  403a32:	mov    QWORD PTR [r15+0x60],0xa
  403a3a:	test   r12d,r12d
  403a3d:	jle    403a7b <table_dupe@@Base+0xdb>
  403a3f:	xor    ebp,ebp
  403a41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  403a50:	mov    rdi,rbx
  403a53:	mov    esi,ebp
  403a55:	call   404260 <table_get_column_name@@Base>
  403a5a:	mov    r13,rax
  403a5d:	mov    rdi,rbx
  403a60:	mov    esi,ebp
  403a62:	call   404270 <table_get_column_data_type@@Base>
  403a67:	mov    rdi,r15
  403a6a:	mov    rsi,r13
  403a6d:	mov    edx,eax
  403a6f:	call   404280 <table_add_column@@Base>
  403a74:	inc    ebp
  403a76:	cmp    r12d,ebp
  403a79:	jne    403a50 <table_dupe@@Base+0xb0>
  403a7b:	cmp    DWORD PTR [rsp+0x1c],0x0
  403a80:	jle    403e0e <table_dupe@@Base+0x46e>
  403a86:	xor    ebp,ebp
  403a88:	lea    r14,[rip+0x368d]        # 40711c <_IO_stdin_used@@Base+0x11c>
  403a8f:	jmp    403aac <table_dupe@@Base+0x10c>
  403a91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403aa0:	inc    ebp
  403aa2:	cmp    ebp,DWORD PTR [rsp+0x1c]
  403aa6:	je     403e0e <table_dupe@@Base+0x46e>
  403aac:	mov    rdi,r15
  403aaf:	call   404e50 <table_add_row@@Base>
  403ab4:	test   r12d,r12d
  403ab7:	jle    403aa0 <table_dupe@@Base+0x100>
  403ab9:	xor    r13d,r13d
  403abc:	jmp    403af8 <table_dupe@@Base+0x158>
  403abe:	mov    rdi,rbx
  403ac1:	mov    esi,ebp
  403ac3:	mov    edx,r13d
  403ac6:	call   404d80 <table_get_ptr@@Base>
  403acb:	mov    QWORD PTR [rsp+0x20],rax
  403ad0:	mov    rdi,r15
  403ad3:	mov    esi,ebp
  403ad5:	mov    edx,r13d
  403ad8:	lea    rcx,[rsp+0x20]
  403add:	call   405ee0 <table_set_ptr@@Base>
  403ae2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403aec:	nop    DWORD PTR [rax+0x0]
  403af0:	inc    r13d
  403af3:	cmp    r12d,r13d
  403af6:	je     403aa0 <table_dupe@@Base+0x100>
  403af8:	mov    rdi,rbx
  403afb:	mov    esi,r13d
  403afe:	call   404270 <table_get_column_data_type@@Base>
  403b03:	cmp    eax,0x17
  403b06:	ja     403af0 <table_dupe@@Base+0x150>
  403b08:	mov    eax,eax
  403b0a:	movsxd rax,DWORD PTR [r14+rax*4]
  403b0e:	add    rax,r14
  403b11:	jmp    rax
  403b13:	mov    rdi,rbx
  403b16:	mov    esi,ebp
  403b18:	mov    edx,r13d
  403b1b:	call   404c20 <table_get_int@@Base>
  403b20:	mov    rdi,r15
  403b23:	mov    esi,ebp
  403b25:	mov    edx,r13d
  403b28:	mov    ecx,eax
  403b2a:	call   405410 <table_set_int@@Base>
  403b2f:	jmp    403af0 <table_dupe@@Base+0x150>
  403b31:	mov    rdi,rbx
  403b34:	mov    esi,ebp
  403b36:	mov    edx,r13d
  403b39:	call   404c30 <table_get_uint@@Base>
  403b3e:	mov    rdi,r15
  403b41:	mov    esi,ebp
  403b43:	mov    edx,r13d
  403b46:	mov    ecx,eax
  403b48:	call   405490 <table_set_uint@@Base>
  403b4d:	jmp    403af0 <table_dupe@@Base+0x150>
  403b4f:	mov    rdi,rbx
  403b52:	mov    esi,ebp
  403b54:	mov    edx,r13d
  403b57:	call   404c40 <table_get_int8@@Base>
  403b5c:	movsx  ecx,al
  403b5f:	mov    rdi,r15
  403b62:	mov    esi,ebp
  403b64:	mov    edx,r13d
  403b67:	call   405510 <table_set_int8@@Base>
  403b6c:	jmp    403af0 <table_dupe@@Base+0x150>
  403b6e:	mov    rdi,rbx
  403b71:	mov    esi,ebp
  403b73:	mov    edx,r13d
  403b76:	call   404c50 <table_get_uint8@@Base>
  403b7b:	movzx  ecx,al
  403b7e:	mov    rdi,r15
  403b81:	mov    esi,ebp
  403b83:	mov    edx,r13d
  403b86:	call   405590 <table_set_uint8@@Base>
  403b8b:	jmp    403af0 <table_dupe@@Base+0x150>
  403b90:	mov    rdi,rbx
  403b93:	mov    esi,ebp
  403b95:	mov    edx,r13d
  403b98:	call   404c60 <table_get_int16@@Base>
  403b9d:	movsx  ecx,ax
  403ba0:	mov    rdi,r15
  403ba3:	mov    esi,ebp
  403ba5:	mov    edx,r13d
  403ba8:	call   405610 <table_set_int16@@Base>
  403bad:	jmp    403af0 <table_dupe@@Base+0x150>
  403bb2:	mov    rdi,rbx
  403bb5:	mov    esi,ebp
  403bb7:	mov    edx,r13d
  403bba:	call   404c70 <table_get_uint16@@Base>
  403bbf:	movzx  ecx,ax
  403bc2:	mov    rdi,r15
  403bc5:	mov    esi,ebp
  403bc7:	mov    edx,r13d
  403bca:	call   405690 <table_set_uint16@@Base>
  403bcf:	jmp    403af0 <table_dupe@@Base+0x150>
  403bd4:	mov    rdi,rbx
  403bd7:	mov    esi,ebp
  403bd9:	mov    edx,r13d
  403bdc:	call   404c80 <table_get_int32@@Base>
  403be1:	mov    rdi,r15
  403be4:	mov    esi,ebp
  403be6:	mov    edx,r13d
  403be9:	mov    ecx,eax
  403beb:	call   405710 <table_set_int32@@Base>
  403bf0:	jmp    403af0 <table_dupe@@Base+0x150>
  403bf5:	mov    rdi,rbx
  403bf8:	mov    esi,ebp
  403bfa:	mov    edx,r13d
  403bfd:	call   404c90 <table_get_uint32@@Base>
  403c02:	mov    rdi,r15
  403c05:	mov    esi,ebp
  403c07:	mov    edx,r13d
  403c0a:	mov    ecx,eax
  403c0c:	call   405790 <table_set_uint32@@Base>
  403c11:	jmp    403af0 <table_dupe@@Base+0x150>
  403c16:	mov    rdi,rbx
  403c19:	mov    esi,ebp
  403c1b:	mov    edx,r13d
  403c1e:	call   404ca0 <table_get_int64@@Base>
  403c23:	mov    rdi,r15
  403c26:	mov    esi,ebp
  403c28:	mov    edx,r13d
  403c2b:	mov    rcx,rax
  403c2e:	call   405810 <table_set_int64@@Base>
  403c33:	jmp    403af0 <table_dupe@@Base+0x150>
  403c38:	mov    rdi,rbx
  403c3b:	mov    esi,ebp
  403c3d:	mov    edx,r13d
  403c40:	call   404cb0 <table_get_uint64@@Base>
  403c45:	mov    rdi,r15
  403c48:	mov    esi,ebp
  403c4a:	mov    edx,r13d
  403c4d:	mov    rcx,rax
  403c50:	call   405890 <table_set_uint64@@Base>
  403c55:	jmp    403af0 <table_dupe@@Base+0x150>
  403c5a:	mov    rdi,rbx
  403c5d:	mov    esi,ebp
  403c5f:	mov    edx,r13d
  403c62:	call   404cc0 <table_get_short@@Base>
  403c67:	movsx  ecx,ax
  403c6a:	mov    rdi,r15
  403c6d:	mov    esi,ebp
  403c6f:	mov    edx,r13d
  403c72:	call   405910 <table_set_short@@Base>
  403c77:	jmp    403af0 <table_dupe@@Base+0x150>
  403c7c:	mov    rdi,rbx
  403c7f:	mov    esi,ebp
  403c81:	mov    edx,r13d
  403c84:	call   404cd0 <table_get_ushort@@Base>
  403c89:	movzx  ecx,ax
  403c8c:	mov    rdi,r15
  403c8f:	mov    esi,ebp
  403c91:	mov    edx,r13d
  403c94:	call   405990 <table_set_ushort@@Base>
  403c99:	jmp    403af0 <table_dupe@@Base+0x150>
  403c9e:	mov    rdi,rbx
  403ca1:	mov    esi,ebp
  403ca3:	mov    edx,r13d
  403ca6:	call   404ce0 <table_get_long@@Base>
  403cab:	mov    rdi,r15
  403cae:	mov    esi,ebp
  403cb0:	mov    edx,r13d
  403cb3:	mov    rcx,rax
  403cb6:	call   405a10 <table_set_long@@Base>
  403cbb:	jmp    403af0 <table_dupe@@Base+0x150>
  403cc0:	mov    rdi,rbx
  403cc3:	mov    esi,ebp
  403cc5:	mov    edx,r13d
  403cc8:	call   404cf0 <table_get_ulong@@Base>
  403ccd:	mov    rdi,r15
  403cd0:	mov    esi,ebp
  403cd2:	mov    edx,r13d
  403cd5:	mov    rcx,rax
  403cd8:	call   405a90 <table_set_ulong@@Base>
  403cdd:	jmp    403af0 <table_dupe@@Base+0x150>
  403ce2:	mov    rdi,rbx
  403ce5:	mov    esi,ebp
  403ce7:	mov    edx,r13d
  403cea:	call   404d00 <table_get_llong@@Base>
  403cef:	mov    rdi,r15
  403cf2:	mov    esi,ebp
  403cf4:	mov    edx,r13d
  403cf7:	mov    rcx,rax
  403cfa:	call   405b10 <table_set_llong@@Base>
  403cff:	jmp    403af0 <table_dupe@@Base+0x150>
  403d04:	mov    rdi,rbx
  403d07:	mov    esi,ebp
  403d09:	mov    edx,r13d
  403d0c:	call   404d10 <table_get_ullong@@Base>
  403d11:	mov    rdi,r15
  403d14:	mov    esi,ebp
  403d16:	mov    edx,r13d
  403d19:	mov    rcx,rax
  403d1c:	call   405b90 <table_set_ullong@@Base>
  403d21:	jmp    403af0 <table_dupe@@Base+0x150>
  403d26:	mov    rdi,rbx
  403d29:	mov    esi,ebp
  403d2b:	mov    edx,r13d
  403d2e:	call   404d20 <table_get_float@@Base>
  403d33:	mov    rdi,r15
  403d36:	mov    esi,ebp
  403d38:	mov    edx,r13d
  403d3b:	call   405c10 <table_set_float@@Base>
  403d40:	jmp    403af0 <table_dupe@@Base+0x150>
  403d45:	mov    rdi,rbx
  403d48:	mov    esi,ebp
  403d4a:	mov    edx,r13d
  403d4d:	call   404d30 <table_get_double@@Base>
  403d52:	mov    rdi,r15
  403d55:	mov    esi,ebp
  403d57:	mov    edx,r13d
  403d5a:	call   405ca0 <table_set_double@@Base>
  403d5f:	jmp    403af0 <table_dupe@@Base+0x150>
  403d64:	mov    rdi,rbx
  403d67:	mov    esi,ebp
  403d69:	mov    edx,r13d
  403d6c:	call   404d40 <table_get_ldouble@@Base>
  403d71:	fstp   TBYTE PTR [rsp]
  403d74:	mov    rdi,r15
  403d77:	mov    esi,ebp
  403d79:	mov    edx,r13d
  403d7c:	call   405d30 <table_set_ldouble@@Base>
  403d81:	jmp    403af0 <table_dupe@@Base+0x150>
  403d86:	mov    rdi,rbx
  403d89:	mov    esi,ebp
  403d8b:	mov    edx,r13d
  403d8e:	call   404d50 <table_get_char@@Base>
  403d93:	movsx  ecx,al
  403d96:	mov    rdi,r15
  403d99:	mov    esi,ebp
  403d9b:	mov    edx,r13d
  403d9e:	call   405de0 <table_set_char@@Base>
  403da3:	jmp    403af0 <table_dupe@@Base+0x150>
  403da8:	mov    rdi,rbx
  403dab:	mov    esi,ebp
  403dad:	mov    edx,r13d
  403db0:	call   404d60 <table_get_uchar@@Base>
  403db5:	movzx  ecx,al
  403db8:	mov    rdi,r15
  403dbb:	mov    esi,ebp
  403dbd:	mov    edx,r13d
  403dc0:	call   405e60 <table_set_uchar@@Base>
  403dc5:	jmp    403af0 <table_dupe@@Base+0x150>
  403dca:	mov    rdi,rbx
  403dcd:	mov    esi,ebp
  403dcf:	mov    edx,r13d
  403dd2:	call   404d70 <table_get_string@@Base>
  403dd7:	mov    rdi,r15
  403dda:	mov    esi,ebp
  403ddc:	mov    edx,r13d
  403ddf:	mov    rcx,rax
  403de2:	call   405dd0 <table_set_string@@Base>
  403de7:	jmp    403af0 <table_dupe@@Base+0x150>
  403dec:	mov    rdi,rbx
  403def:	mov    esi,ebp
  403df1:	mov    edx,r13d
  403df4:	call   404c10 <table_get_bool@@Base>
  403df9:	movzx  ecx,al
  403dfc:	mov    rdi,r15
  403dff:	mov    esi,ebp
  403e01:	mov    edx,r13d
  403e04:	call   405390 <table_set_bool@@Base>
  403e09:	jmp    403af0 <table_dupe@@Base+0x150>
  403e0e:	mov    rax,r15
  403e11:	add    rsp,0x28
  403e15:	pop    rbx
  403e16:	pop    r12
  403e18:	pop    r13
  403e1a:	pop    r14
  403e1c:	pop    r15
  403e1e:	pop    rbp
  403e1f:	ret    

0000000000403e20 <table_get_major_version@@Base>:
  403e20:	xor    eax,eax
  403e22:	ret    
  403e23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e2d:	nop    DWORD PTR [rax]

0000000000403e30 <table_get_minor_version@@Base>:
  403e30:	xor    eax,eax
  403e32:	ret    
  403e33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e3d:	nop    DWORD PTR [rax]

0000000000403e40 <table_get_patch_version@@Base>:
  403e40:	xor    eax,eax
  403e42:	ret    
  403e43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e4d:	nop    DWORD PTR [rax]

0000000000403e50 <table_get_version@@Base>:
  403e50:	lea    rax,[rip+0x32c2]        # 407119 <_IO_stdin_used@@Base+0x119>
  403e57:	ret    
  403e58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403e60 <table_get_callback_length@@Base>:
  403e60:	mov    eax,DWORD PTR [rdi+0x40]
  403e63:	ret    
  403e64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403e6e:	xchg   ax,ax

0000000000403e70 <table_register_callback@@Base>:
  403e70:	push   rbp
  403e71:	push   r15
  403e73:	push   r14
  403e75:	push   r12
  403e77:	push   rbx
  403e78:	mov    r14d,ecx
  403e7b:	mov    r15,rdx
  403e7e:	mov    rbp,rsi
  403e81:	mov    r12,rdi
  403e84:	movsxd rcx,DWORD PTR [rdi+0x40]
  403e88:	test   rcx,rcx
  403e8b:	jle    403ee2 <table_register_callback@@Base+0x72>
  403e8d:	mov    rdx,QWORD PTR [r12+0x48]
  403e92:	xor    eax,eax
  403e94:	movabs rdi,0x100000000
  403e9e:	xor    esi,esi
  403ea0:	cmp    QWORD PTR [rdx+rsi*8],rbp
  403ea4:	je     403ec1 <table_register_callback@@Base+0x51>
  403ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403eb0:	inc    rsi
  403eb3:	add    rax,rdi
  403eb6:	cmp    rcx,rsi
  403eb9:	je     403ee2 <table_register_callback@@Base+0x72>
  403ebb:	cmp    QWORD PTR [rdx+rsi*8],rbp
  403ebf:	jne    403eb0 <table_register_callback@@Base+0x40>
  403ec1:	mov    rbx,QWORD PTR [r12+0x50]
  403ec6:	cmp    QWORD PTR [rbx+rsi*8],r15
  403eca:	jne    403eb0 <table_register_callback@@Base+0x40>
  403ecc:	test   esi,esi
  403ece:	jle    403ee2 <table_register_callback@@Base+0x72>
  403ed0:	mov    rcx,QWORD PTR [r12+0x58]
  403ed5:	sar    rax,0x1e
  403ed9:	or     DWORD PTR [rcx+rax*1],r14d
  403edd:	jmp    403f76 <table_register_callback@@Base+0x106>
  403ee2:	mov    rsi,QWORD PTR [r12+0x60]
  403ee7:	mov    rax,rcx
  403eea:	or     rax,rsi
  403eed:	shr    rax,0x20
  403ef1:	je     403f7f <table_register_callback@@Base+0x10f>
  403ef7:	mov    rax,rcx
  403efa:	xor    edx,edx
  403efc:	div    rsi
  403eff:	test   rdx,rdx
  403f02:	jne    403f56 <table_register_callback@@Base+0xe6>
  403f04:	add    rsi,QWORD PTR [r12+0x68]
  403f09:	mov    QWORD PTR [r12+0x68],rsi
  403f0e:	mov    rdi,QWORD PTR [r12+0x48]
  403f13:	shl    rsi,0x3
  403f17:	call   4030e0 <realloc@plt>
  403f1c:	mov    QWORD PTR [r12+0x48],rax
  403f21:	mov    rdi,QWORD PTR [r12+0x50]
  403f26:	mov    rsi,QWORD PTR [r12+0x68]
  403f2b:	shl    rsi,0x3
  403f2f:	call   4030e0 <realloc@plt>
  403f34:	mov    QWORD PTR [r12+0x50],rax
  403f39:	mov    rdi,QWORD PTR [r12+0x58]
  403f3e:	mov    rsi,QWORD PTR [r12+0x68]
  403f43:	shl    rsi,0x2
  403f47:	call   4030e0 <realloc@plt>
  403f4c:	mov    QWORD PTR [r12+0x58],rax
  403f51:	movsxd rcx,DWORD PTR [r12+0x40]
  403f56:	mov    rax,QWORD PTR [r12+0x48]
  403f5b:	mov    QWORD PTR [rax+rcx*8],rbp
  403f5f:	mov    rax,QWORD PTR [r12+0x50]
  403f64:	mov    QWORD PTR [rax+rcx*8],r15
  403f68:	mov    rax,QWORD PTR [r12+0x58]
  403f6d:	mov    DWORD PTR [rax+rcx*4],r14d
  403f71:	inc    DWORD PTR [r12+0x40]
  403f76:	pop    rbx
  403f77:	pop    r12
  403f79:	pop    r14
  403f7b:	pop    r15
  403f7d:	pop    rbp
  403f7e:	ret    
  403f7f:	mov    eax,ecx
  403f81:	xor    edx,edx
  403f83:	div    esi
  403f85:	test   rdx,rdx
  403f88:	jne    403f56 <table_register_callback@@Base+0xe6>
  403f8a:	jmp    403f04 <table_register_callback@@Base+0x94>
  403f8f:	nop

0000000000403f90 <table_unregister_callback@@Base>:
  403f90:	push   r15
  403f92:	push   r14
  403f94:	push   rbx
  403f95:	movsxd rcx,DWORD PTR [rdi+0x40]
  403f99:	test   rcx,rcx
  403f9c:	jle    4040f6 <table_unregister_callback@@Base+0x166>
  403fa2:	mov    r15,rdi
  403fa5:	lea    r14,[rdi+0x48]
  403fa9:	mov    rdi,QWORD PTR [rdi+0x48]
  403fad:	xor    eax,eax
  403faf:	cmp    QWORD PTR [rdi+rax*8],rsi
  403fb3:	je     403fd2 <table_unregister_callback@@Base+0x42>
  403fb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403fbf:	nop
  403fc0:	inc    rax
  403fc3:	cmp    rcx,rax
  403fc6:	je     4040f6 <table_unregister_callback@@Base+0x166>
  403fcc:	cmp    QWORD PTR [rdi+rax*8],rsi
  403fd0:	jne    403fc0 <table_unregister_callback@@Base+0x30>
  403fd2:	mov    rbx,QWORD PTR [r15+0x50]
  403fd6:	cmp    QWORD PTR [rbx+rax*8],rdx
  403fda:	jne    403fc0 <table_unregister_callback@@Base+0x30>
  403fdc:	cmp    eax,0xffffffff
  403fdf:	je     4040f6 <table_unregister_callback@@Base+0x166>
  403fe5:	dec    ecx
  403fe7:	cmp    ecx,eax
  403fe9:	jle    404058 <table_unregister_callback@@Base+0xc8>
  403feb:	mov    rcx,QWORD PTR [rdi+rax*8+0x8]
  403ff0:	mov    QWORD PTR [rdi+rax*8],rcx
  403ff4:	mov    rcx,QWORD PTR [r15+0x50]
  403ff8:	mov    rdx,QWORD PTR [rcx+rax*8+0x8]
  403ffd:	mov    QWORD PTR [rcx+rax*8],rdx
  404001:	mov    rcx,QWORD PTR [r15+0x58]
  404005:	mov    edx,DWORD PTR [rcx+rax*4+0x4]
  404009:	mov    DWORD PTR [rcx+rax*4],edx
  40400c:	lea    rdx,[rax+0x1]
  404010:	movsxd rax,DWORD PTR [r15+0x40]
  404014:	dec    rax
  404017:	mov    ecx,eax
  404019:	cmp    rdx,rax
  40401c:	jge    40405b <table_unregister_callback@@Base+0xcb>
  40401e:	xchg   ax,ax
  404020:	mov    rax,QWORD PTR [r15+0x48]
  404024:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  404029:	mov    QWORD PTR [rax+rdx*8],rcx
  40402d:	mov    rax,QWORD PTR [r15+0x50]
  404031:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  404036:	mov    QWORD PTR [rax+rdx*8],rcx
  40403a:	mov    rax,QWORD PTR [r15+0x58]
  40403e:	mov    ecx,DWORD PTR [rax+rdx*4+0x4]
  404042:	mov    DWORD PTR [rax+rdx*4],ecx
  404045:	inc    rdx
  404048:	movsxd rax,DWORD PTR [r15+0x40]
  40404c:	dec    rax
  40404f:	cmp    rdx,rax
  404052:	jl     404020 <table_unregister_callback@@Base+0x90>
  404054:	mov    ecx,eax
  404056:	jmp    40405b <table_unregister_callback@@Base+0xcb>
  404058:	movsxd rax,ecx
  40405b:	mov    DWORD PTR [r15+0x40],ecx
  40405f:	mov    rcx,QWORD PTR [r15+0x60]
  404063:	mov    rdx,rax
  404066:	or     rdx,rcx
  404069:	shr    rdx,0x20
  40406d:	je     40407b <table_unregister_callback@@Base+0xeb>
  40406f:	xor    edx,edx
  404071:	div    rcx
  404074:	test   rdx,rdx
  404077:	jne    4040f6 <table_unregister_callback@@Base+0x166>
  404079:	jmp    404084 <table_unregister_callback@@Base+0xf4>
  40407b:	xor    edx,edx
  40407d:	div    ecx
  40407f:	test   rdx,rdx
  404082:	jne    4040f6 <table_unregister_callback@@Base+0x166>
  404084:	mov    rdi,QWORD PTR [r15+0x48]
  404088:	mov    rsi,QWORD PTR [r15+0x68]
  40408c:	sub    rsi,rcx
  40408f:	mov    QWORD PTR [r15+0x68],rsi
  404093:	je     4040ce <table_unregister_callback@@Base+0x13e>
  404095:	shl    rsi,0x3
  404099:	call   4030e0 <realloc@plt>
  40409e:	mov    QWORD PTR [r15+0x48],rax
  4040a2:	mov    rdi,QWORD PTR [r15+0x50]
  4040a6:	mov    rsi,QWORD PTR [r15+0x68]
  4040aa:	shl    rsi,0x3
  4040ae:	call   4030e0 <realloc@plt>
  4040b3:	mov    QWORD PTR [r15+0x50],rax
  4040b7:	mov    rdi,QWORD PTR [r15+0x58]
  4040bb:	mov    rsi,QWORD PTR [r15+0x68]
  4040bf:	shl    rsi,0x2
  4040c3:	call   4030e0 <realloc@plt>
  4040c8:	mov    QWORD PTR [r15+0x58],rax
  4040cc:	jmp    4040f6 <table_unregister_callback@@Base+0x166>
  4040ce:	call   403030 <free@plt>
  4040d3:	mov    rdi,QWORD PTR [r15+0x50]
  4040d7:	call   403030 <free@plt>
  4040dc:	mov    rdi,QWORD PTR [r15+0x58]
  4040e0:	call   403030 <free@plt>
  4040e5:	vxorps xmm0,xmm0,xmm0
  4040e9:	vmovups XMMWORD PTR [r14],xmm0
  4040ee:	mov    QWORD PTR [r14+0x10],0x0
  4040f6:	pop    rbx
  4040f7:	pop    r14
  4040f9:	pop    r15
  4040fb:	ret    
  4040fc:	nop    DWORD PTR [rax+0x0]

0000000000404100 <table_notify@@Base>:
  404100:	push   rbp
  404101:	push   r15
  404103:	push   r14
  404105:	push   r12
  404107:	push   rbx
  404108:	mov    eax,DWORD PTR [rdi+0x40]
  40410b:	test   eax,eax
  40410d:	jle    404155 <table_notify@@Base+0x55>
  40410f:	mov    r12d,ecx
  404112:	mov    r14d,edx
  404115:	mov    r15d,esi
  404118:	mov    rbp,rdi
  40411b:	xor    ebx,ebx
  40411d:	jmp    40412b <table_notify@@Base+0x2b>
  40411f:	nop
  404120:	inc    rbx
  404123:	movsxd rcx,eax
  404126:	cmp    rbx,rcx
  404129:	jge    404155 <table_notify@@Base+0x55>
  40412b:	mov    rcx,QWORD PTR [rbp+0x58]
  40412f:	test   DWORD PTR [rcx+rbx*4],r12d
  404133:	je     404120 <table_notify@@Base+0x20>
  404135:	mov    rax,QWORD PTR [rbp+0x48]
  404139:	mov    rcx,QWORD PTR [rbp+0x50]
  40413d:	mov    r8,QWORD PTR [rcx+rbx*8]
  404141:	mov    rdi,rbp
  404144:	mov    esi,r15d
  404147:	mov    edx,r14d
  40414a:	mov    ecx,r12d
  40414d:	call   QWORD PTR [rax+rbx*8]
  404150:	mov    eax,DWORD PTR [rbp+0x40]
  404153:	jmp    404120 <table_notify@@Base+0x20>
  404155:	pop    rbx
  404156:	pop    r12
  404158:	pop    r14
  40415a:	pop    r15
  40415c:	pop    rbp
  40415d:	ret    
  40415e:	xchg   ax,ax

0000000000404160 <table_column_init@@Base>:
  404160:	push   rbp
  404161:	push   r15
  404163:	push   r14
  404165:	push   r12
  404167:	push   rbx
  404168:	mov    r14,r8
  40416b:	mov    r15d,ecx
  40416e:	mov    r12,rdx
  404171:	mov    rbp,QWORD PTR [rdi]
  404174:	movsxd rbx,esi
  404177:	mov    rdi,rdx
  40417a:	call   403060 <strlen@plt>
  40417f:	lea    rdi,[rax+0x1]
  404183:	call   4030c0 <malloc@plt>
  404188:	lea    rbx,[rbx+rbx*2]
  40418c:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  404191:	test   rax,rax
  404194:	je     4041a1 <table_column_init@@Base+0x41>
  404196:	mov    rdi,rax
  404199:	mov    rsi,r12
  40419c:	call   403050 <strcpy@plt>
  4041a1:	mov    DWORD PTR [rbp+rbx*8+0x8],r15d
  4041a6:	mov    QWORD PTR [rbp+rbx*8+0x10],r14
  4041ab:	pop    rbx
  4041ac:	pop    r12
  4041ae:	pop    r14
  4041b0:	pop    r15
  4041b2:	pop    rbp
  4041b3:	ret    
  4041b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041be:	xchg   ax,ax

00000000004041c0 <table_get_col_ptr@@Base>:
  4041c0:	movsxd rax,esi
  4041c3:	lea    rax,[rax+rax*2]
  4041c7:	shl    rax,0x3
  4041cb:	add    rax,QWORD PTR [rdi]
  4041ce:	ret    
  4041cf:	nop

00000000004041d0 <table_column_destroy@@Base>:
  4041d0:	mov    rax,QWORD PTR [rdi]
  4041d3:	movsxd rcx,esi
  4041d6:	lea    rcx,[rcx+rcx*2]
  4041da:	mov    rdi,QWORD PTR [rax+rcx*8]
  4041de:	test   rdi,rdi
  4041e1:	je     4041e8 <table_column_destroy@@Base+0x18>
  4041e3:	jmp    403030 <free@plt>
  4041e8:	ret    
  4041e9:	nop    DWORD PTR [rax+0x0]

00000000004041f0 <table_get_column_length@@Base>:
  4041f0:	mov    eax,DWORD PTR [rdi+0x8]
  4041f3:	ret    
  4041f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041fe:	xchg   ax,ax

0000000000404200 <table_get_column@@Base>:
  404200:	push   r15
  404202:	push   r14
  404204:	push   r12
  404206:	push   rbx
  404207:	push   rax
  404208:	mov    r14d,DWORD PTR [rdi+0x8]
  40420c:	test   r14d,r14d
  40420f:	jle    40423d <table_get_column@@Base+0x3d>
  404211:	mov    r15,rsi
  404214:	mov    rbx,QWORD PTR [rdi]
  404217:	xor    r12d,r12d
  40421a:	nop    WORD PTR [rax+rax*1+0x0]
  404220:	mov    rdi,QWORD PTR [rbx]
  404223:	mov    rsi,r15
  404226:	call   4030a0 <strcmp@plt>
  40422b:	test   eax,eax
  40422d:	je     404240 <table_get_column@@Base+0x40>
  40422f:	inc    r12
  404232:	add    rbx,0x18
  404236:	cmp    r14,r12
  404239:	jne    404220 <table_get_column@@Base+0x20>
  40423b:	jmp    404240 <table_get_column@@Base+0x40>
  40423d:	xor    r12d,r12d
  404240:	cmp    r12d,r14d
  404243:	mov    eax,0xffffffff
  404248:	cmovne eax,r12d
  40424c:	add    rsp,0x8
  404250:	pop    rbx
  404251:	pop    r12
  404253:	pop    r14
  404255:	pop    r15
  404257:	ret    
  404258:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404260 <table_get_column_name@@Base>:
  404260:	mov    rax,QWORD PTR [rdi]
  404263:	movsxd rcx,esi
  404266:	lea    rcx,[rcx+rcx*2]
  40426a:	mov    rax,QWORD PTR [rax+rcx*8]
  40426e:	ret    
  40426f:	nop

0000000000404270 <table_get_column_data_type@@Base>:
  404270:	mov    rax,QWORD PTR [rdi]
  404273:	movsxd rcx,esi
  404276:	lea    rcx,[rcx+rcx*2]
  40427a:	mov    eax,DWORD PTR [rax+rcx*8+0x8]
  40427e:	ret    
  40427f:	nop

0000000000404280 <table_add_column@@Base>:
  404280:	push   rbp
  404281:	push   r15
  404283:	push   r14
  404285:	push   r13
  404287:	push   r12
  404289:	push   rbx
  40428a:	sub    rsp,0x18
  40428e:	mov    r15d,edx
  404291:	mov    r13,rsi
  404294:	mov    r12,rdi
  404297:	movsxd rax,DWORD PTR [rdi+0x8]
  40429b:	mov    rcx,QWORD PTR [rdi+0x10]
  40429f:	mov    rdx,rax
  4042a2:	or     rdx,rcx
  4042a5:	shr    rdx,0x20
  4042a9:	je     4042b7 <table_add_column@@Base+0x37>
  4042ab:	xor    edx,edx
  4042ad:	div    rcx
  4042b0:	test   rdx,rdx
  4042b3:	jne    404318 <table_add_column@@Base+0x98>
  4042b5:	jmp    4042c0 <table_add_column@@Base+0x40>
  4042b7:	xor    edx,edx
  4042b9:	div    ecx
  4042bb:	test   rdx,rdx
  4042be:	jne    404318 <table_add_column@@Base+0x98>
  4042c0:	add    rcx,QWORD PTR [r12+0x18]
  4042c5:	mov    QWORD PTR [r12+0x18],rcx
  4042ca:	mov    rdi,QWORD PTR [r12]
  4042ce:	shl    rcx,0x3
  4042d2:	lea    rsi,[rcx+rcx*2]
  4042d6:	call   4030e0 <realloc@plt>
  4042db:	mov    QWORD PTR [r12],rax
  4042df:	mov    rdi,r12
  4042e2:	call   404e40 <table_get_row_length@@Base>
  4042e7:	test   eax,eax
  4042e9:	jle    404318 <table_add_column@@Base+0x98>
  4042eb:	mov    r14d,eax
  4042ee:	xor    ebp,ebp
  4042f0:	mov    rdi,r12
  4042f3:	mov    esi,ebp
  4042f5:	call   404dc0 <table_get_row_ptr@@Base>
  4042fa:	mov    rbx,rax
  4042fd:	mov    rdi,QWORD PTR [rax]
  404300:	mov    rsi,QWORD PTR [r12+0x18]
  404305:	shl    rsi,0x3
  404309:	call   4030e0 <realloc@plt>
  40430e:	mov    QWORD PTR [rbx],rax
  404311:	inc    ebp
  404313:	cmp    r14d,ebp
  404316:	jne    4042f0 <table_add_column@@Base+0x70>
  404318:	mov    rdi,r12
  40431b:	call   404e40 <table_get_row_length@@Base>
  404320:	mov    r14d,eax
  404323:	movsxd rbx,DWORD PTR [r12+0x8]
  404328:	mov    DWORD PTR [rsp+0xc],r15d
  40432d:	mov    edi,r15d
  404330:	call   404be0 <table_get_default_compare_function_for_data_type@@Base>
  404335:	mov    QWORD PTR [rsp+0x10],rax
  40433a:	mov    rbp,QWORD PTR [r12]
  40433e:	mov    rdi,r13
  404341:	call   403060 <strlen@plt>
  404346:	lea    rdi,[rax+0x1]
  40434a:	call   4030c0 <malloc@plt>
  40434f:	lea    r15,[rbx+rbx*2]
  404353:	mov    QWORD PTR [rbp+r15*8+0x0],rax
  404358:	test   rax,rax
  40435b:	je     404368 <table_add_column@@Base+0xe8>
  40435d:	mov    rdi,rax
  404360:	mov    rsi,r13
  404363:	call   403050 <strcpy@plt>
  404368:	mov    eax,DWORD PTR [rsp+0xc]
  40436c:	mov    DWORD PTR [rbp+r15*8+0x8],eax
  404371:	mov    rax,QWORD PTR [rsp+0x10]
  404376:	mov    QWORD PTR [rbp+r15*8+0x10],rax
  40437b:	test   r14d,r14d
  40437e:	jle    4043a3 <table_add_column@@Base+0x123>
  404380:	xor    ebp,ebp
  404382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40438c:	nop    DWORD PTR [rax+0x0]
  404390:	mov    rdi,r12
  404393:	mov    esi,ebp
  404395:	mov    edx,ebx
  404397:	call   4064e0 <table_cell_init@@Base>
  40439c:	inc    ebp
  40439e:	cmp    r14d,ebp
  4043a1:	jne    404390 <table_add_column@@Base+0x110>
  4043a3:	mov    edx,DWORD PTR [r12+0x8]
  4043a8:	mov    rdi,r12
  4043ab:	mov    esi,0xffffffff
  4043b0:	mov    ecx,0x8
  4043b5:	call   404100 <table_notify@@Base>
  4043ba:	mov    eax,DWORD PTR [r12+0x8]
  4043bf:	lea    ecx,[rax+0x1]
  4043c2:	mov    DWORD PTR [r12+0x8],ecx
  4043c7:	add    rsp,0x18
  4043cb:	pop    rbx
  4043cc:	pop    r12
  4043ce:	pop    r13
  4043d0:	pop    r14
  4043d2:	pop    r15
  4043d4:	pop    rbp
  4043d5:	ret    
  4043d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004043e0 <table_remove_column@@Base>:
  4043e0:	push   rbp
  4043e1:	push   r15
  4043e3:	push   r14
  4043e5:	push   r13
  4043e7:	push   r12
  4043e9:	push   rbx
  4043ea:	sub    rsp,0x18
  4043ee:	mov    r14d,esi
  4043f1:	mov    r12,rdi
  4043f4:	mov    rdx,QWORD PTR [rdi]
  4043f7:	movsxd rax,esi
  4043fa:	lea    rcx,[rax+rax*2]
  4043fe:	mov    rdi,QWORD PTR [rdx+rcx*8]
  404402:	test   rdi,rdi
  404405:	mov    QWORD PTR [rsp+0x10],rax
  40440a:	je     404416 <table_remove_column@@Base+0x36>
  40440c:	call   403030 <free@plt>
  404411:	mov    rax,QWORD PTR [rsp+0x10]
  404416:	mov    ebx,DWORD PTR [r12+0x8]
  40441b:	dec    ebx
  40441d:	mov    ecx,ebx
  40441f:	movsxd r13,ebx
  404422:	mov    rdx,rax
  404425:	not    rdx
  404428:	mov    QWORD PTR [rsp+0x8],rdx
  40442d:	sub    ecx,eax
  40442f:	mov    QWORD PTR [rsp],rcx
  404433:	jle    404521 <table_remove_column@@Base+0x141>
  404439:	mov    rcx,QWORD PTR [rsp+0x8]
  40443e:	lea    r8,[rcx+r13*1]
  404442:	mov    rcx,QWORD PTR [rsp]
  404446:	mov    rdx,rax
  404449:	and    rcx,0x3
  40444d:	je     40448b <table_remove_column@@Base+0xab>
  40444f:	lea    rdx,[rax*8+0x0]
  404457:	lea    rdx,[rdx+rdx*2]
  40445b:	neg    rcx
  40445e:	xor    esi,esi
  404460:	mov    rdi,QWORD PTR [r12]
  404464:	mov    rbp,QWORD PTR [rdi+rdx*1+0x28]
  404469:	mov    QWORD PTR [rdi+rdx*1+0x10],rbp
  40446e:	vmovups xmm0,XMMWORD PTR [rdi+rdx*1+0x18]
  404474:	vmovups XMMWORD PTR [rdi+rdx*1],xmm0
  404479:	dec    rsi
  40447c:	add    rdx,0x18
  404480:	cmp    rcx,rsi
  404483:	jne    404460 <table_remove_column@@Base+0x80>
  404485:	mov    rdx,rax
  404488:	sub    rdx,rsi
  40448b:	cmp    r8,0x3
  40448f:	jb     404521 <table_remove_column@@Base+0x141>
  404495:	mov    rax,r13
  404498:	sub    rax,rdx
  40449b:	shl    rdx,0x3
  40449f:	lea    rcx,[rdx+rdx*2]
  4044a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044ad:	nop    DWORD PTR [rax]
  4044b0:	mov    rdx,QWORD PTR [r12]
  4044b4:	mov    rsi,QWORD PTR [rdx+rcx*1+0x28]
  4044b9:	mov    QWORD PTR [rdx+rcx*1+0x10],rsi
  4044be:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x18]
  4044c4:	vmovups XMMWORD PTR [rdx+rcx*1],xmm0
  4044c9:	mov    rdx,QWORD PTR [r12]
  4044cd:	mov    rsi,QWORD PTR [rdx+rcx*1+0x40]
  4044d2:	mov    QWORD PTR [rdx+rcx*1+0x28],rsi
  4044d7:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
  4044dd:	vmovups XMMWORD PTR [rdx+rcx*1+0x18],xmm0
  4044e3:	mov    rdx,QWORD PTR [r12]
  4044e7:	mov    rsi,QWORD PTR [rdx+rcx*1+0x58]
  4044ec:	mov    QWORD PTR [rdx+rcx*1+0x40],rsi
  4044f1:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x48]
  4044f7:	vmovups XMMWORD PTR [rdx+rcx*1+0x30],xmm0
  4044fd:	mov    rdx,QWORD PTR [r12]
  404501:	mov    rsi,QWORD PTR [rdx+rcx*1+0x70]
  404506:	mov    QWORD PTR [rdx+rcx*1+0x58],rsi
  40450b:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x60]
  404511:	vmovups XMMWORD PTR [rdx+rcx*1+0x48],xmm0
  404517:	add    rcx,0x60
  40451b:	add    rax,0xfffffffffffffffc
  40451f:	jne    4044b0 <table_remove_column@@Base+0xd0>
  404521:	mov    rdi,r12
  404524:	call   404e40 <table_get_row_length@@Base>
  404529:	test   eax,eax
  40452b:	jle    404625 <table_remove_column@@Base+0x245>
  404531:	mov    r15d,eax
  404534:	add    QWORD PTR [rsp+0x8],r13
  404539:	mov    rax,QWORD PTR [rsp]
  40453d:	and    eax,0x7
  404540:	mov    QWORD PTR [rsp],rax
  404544:	xor    ebp,ebp
  404546:	jmp    40455b <table_remove_column@@Base+0x17b>
  404548:	nop    DWORD PTR [rax+rax*1+0x0]
  404550:	inc    ebp
  404552:	cmp    ebp,r15d
  404555:	je     404625 <table_remove_column@@Base+0x245>
  40455b:	mov    rdi,r12
  40455e:	mov    esi,ebp
  404560:	mov    edx,r14d
  404563:	call   406520 <table_cell_destroy@@Base>
  404568:	mov    rdi,r12
  40456b:	mov    esi,ebp
  40456d:	call   404dc0 <table_get_row_ptr@@Base>
  404572:	cmp    ebx,r14d
  404575:	jle    404550 <table_remove_column@@Base+0x170>
  404577:	mov    rdx,QWORD PTR [rsp+0x10]
  40457c:	mov    rcx,rdx
  40457f:	cmp    QWORD PTR [rsp],0x0
  404584:	je     4045a4 <table_remove_column@@Base+0x1c4>
  404586:	mov    rcx,rdx
  404589:	mov    rdx,QWORD PTR [rsp]
  40458d:	nop    DWORD PTR [rax]
  404590:	mov    rsi,QWORD PTR [rax]
  404593:	mov    rdi,QWORD PTR [rsi+rcx*8+0x8]
  404598:	mov    QWORD PTR [rsi+rcx*8],rdi
  40459c:	inc    rcx
  40459f:	dec    rdx
  4045a2:	jne    404590 <table_remove_column@@Base+0x1b0>
  4045a4:	cmp    QWORD PTR [rsp+0x8],0x7
  4045aa:	jb     404550 <table_remove_column@@Base+0x170>
  4045ac:	nop    DWORD PTR [rax+0x0]
  4045b0:	mov    rdx,QWORD PTR [rax]
  4045b3:	mov    rsi,QWORD PTR [rdx+rcx*8+0x8]
  4045b8:	mov    QWORD PTR [rdx+rcx*8],rsi
  4045bc:	mov    rdx,QWORD PTR [rax]
  4045bf:	mov    rsi,QWORD PTR [rdx+rcx*8+0x10]
  4045c4:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  4045c9:	mov    rdx,QWORD PTR [rax]
  4045cc:	mov    rsi,QWORD PTR [rdx+rcx*8+0x18]
  4045d1:	mov    QWORD PTR [rdx+rcx*8+0x10],rsi
  4045d6:	mov    rdx,QWORD PTR [rax]
  4045d9:	mov    rsi,QWORD PTR [rdx+rcx*8+0x20]
  4045de:	mov    QWORD PTR [rdx+rcx*8+0x18],rsi
  4045e3:	mov    rdx,QWORD PTR [rax]
  4045e6:	mov    rsi,QWORD PTR [rdx+rcx*8+0x28]
  4045eb:	mov    QWORD PTR [rdx+rcx*8+0x20],rsi
  4045f0:	mov    rdx,QWORD PTR [rax]
  4045f3:	mov    rsi,QWORD PTR [rdx+rcx*8+0x30]
  4045f8:	mov    QWORD PTR [rdx+rcx*8+0x28],rsi
  4045fd:	mov    rdx,QWORD PTR [rax]
  404600:	mov    rsi,QWORD PTR [rdx+rcx*8+0x38]
  404605:	mov    QWORD PTR [rdx+rcx*8+0x30],rsi
  40460a:	mov    rdx,QWORD PTR [rax]
  40460d:	mov    rsi,QWORD PTR [rdx+rcx*8+0x40]
  404612:	mov    QWORD PTR [rdx+rcx*8+0x38],rsi
  404617:	add    rcx,0x8
  40461b:	cmp    r13,rcx
  40461e:	jne    4045b0 <table_remove_column@@Base+0x1d0>
  404620:	jmp    404550 <table_remove_column@@Base+0x170>
  404625:	movsxd rax,DWORD PTR [r12+0x8]
  40462a:	dec    rax
  40462d:	mov    DWORD PTR [r12+0x8],eax
  404632:	mov    rcx,QWORD PTR [r12+0x10]
  404637:	mov    rdx,rax
  40463a:	or     rdx,rcx
  40463d:	shr    rdx,0x20
  404641:	je     40464f <table_remove_column@@Base+0x26f>
  404643:	xor    edx,edx
  404645:	div    rcx
  404648:	test   rdx,rdx
  40464b:	jne    4046b8 <table_remove_column@@Base+0x2d8>
  40464d:	jmp    404658 <table_remove_column@@Base+0x278>
  40464f:	xor    edx,edx
  404651:	div    ecx
  404653:	test   rdx,rdx
  404656:	jne    4046b8 <table_remove_column@@Base+0x2d8>
  404658:	mov    rdi,QWORD PTR [r12]
  40465c:	mov    rax,QWORD PTR [r12+0x18]
  404661:	sub    rax,rcx
  404664:	mov    QWORD PTR [r12+0x18],rax
  404669:	shl    rax,0x3
  40466d:	lea    rsi,[rax+rax*2]
  404671:	call   4030e0 <realloc@plt>
  404676:	mov    QWORD PTR [r12],rax
  40467a:	mov    rdi,r12
  40467d:	call   404e40 <table_get_row_length@@Base>
  404682:	test   eax,eax
  404684:	jle    4046b8 <table_remove_column@@Base+0x2d8>
  404686:	mov    r15d,eax
  404689:	xor    ebp,ebp
  40468b:	nop    DWORD PTR [rax+rax*1+0x0]
  404690:	mov    rdi,r12
  404693:	mov    esi,ebp
  404695:	call   404dc0 <table_get_row_ptr@@Base>
  40469a:	mov    rbx,rax
  40469d:	mov    rdi,QWORD PTR [rax]
  4046a0:	mov    rsi,QWORD PTR [r12+0x18]
  4046a5:	shl    rsi,0x3
  4046a9:	call   4030e0 <realloc@plt>
  4046ae:	mov    QWORD PTR [rbx],rax
  4046b1:	inc    ebp
  4046b3:	cmp    r15d,ebp
  4046b6:	jne    404690 <table_remove_column@@Base+0x2b0>
  4046b8:	mov    rdi,r12
  4046bb:	mov    esi,0xffffffff
  4046c0:	mov    edx,r14d
  4046c3:	mov    ecx,0x10
  4046c8:	call   404100 <table_notify@@Base>
  4046cd:	xor    eax,eax
  4046cf:	add    rsp,0x18
  4046d3:	pop    rbx
  4046d4:	pop    r12
  4046d6:	pop    r13
  4046d8:	pop    r14
  4046da:	pop    r15
  4046dc:	pop    rbp
  4046dd:	ret    
  4046de:	xchg   ax,ax

00000000004046e0 <table_get_column_compare_function@@Base>:
  4046e0:	mov    rax,QWORD PTR [rdi]
  4046e3:	movsxd rcx,esi
  4046e6:	lea    rcx,[rcx+rcx*2]
  4046ea:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  4046ef:	ret    

00000000004046f0 <table_set_column_compare_function@@Base>:
  4046f0:	mov    rax,QWORD PTR [rdi]
  4046f3:	movsxd rcx,esi
  4046f6:	lea    rcx,[rcx+rcx*2]
  4046fa:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  4046ff:	ret    

0000000000404700 <table_compare_bool@@Base>:
  404700:	test   rdi,rdi
  404703:	je     40471d <table_compare_bool@@Base+0x1d>
  404705:	test   rsi,rsi
  404708:	je     404723 <table_compare_bool@@Base+0x23>
  40470a:	mov    al,BYTE PTR [rdi]
  40470c:	mov    cl,BYTE PTR [rsi]
  40470e:	cmp    al,cl
  404710:	sbb    edx,edx
  404712:	cmp    al,cl
  404714:	mov    eax,0x1
  404719:	cmovbe eax,edx
  40471c:	ret    
  40471d:	neg    rsi
  404720:	sbb    eax,eax
  404722:	ret    
  404723:	mov    eax,0x1
  404728:	ret    
  404729:	nop    DWORD PTR [rax+0x0]

0000000000404730 <table_compare_int@@Base>:
  404730:	test   rdi,rdi
  404733:	je     404752 <table_compare_int@@Base+0x22>
  404735:	test   rsi,rsi
  404738:	je     404758 <table_compare_int@@Base+0x28>
  40473a:	mov    eax,DWORD PTR [rdi]
  40473c:	mov    ecx,DWORD PTR [rsi]
  40473e:	xor    edx,edx
  404740:	cmp    eax,ecx
  404742:	setl   dl
  404745:	neg    edx
  404747:	cmp    eax,ecx
  404749:	mov    eax,0x1
  40474e:	cmovle eax,edx
  404751:	ret    
  404752:	neg    rsi
  404755:	sbb    eax,eax
  404757:	ret    
  404758:	mov    eax,0x1
  40475d:	ret    
  40475e:	xchg   ax,ax

0000000000404760 <table_compare_uint@@Base>:
  404760:	test   rdi,rdi
  404763:	je     40477d <table_compare_uint@@Base+0x1d>
  404765:	test   rsi,rsi
  404768:	je     404783 <table_compare_uint@@Base+0x23>
  40476a:	mov    eax,DWORD PTR [rdi]
  40476c:	mov    ecx,DWORD PTR [rsi]
  40476e:	cmp    eax,ecx
  404770:	sbb    edx,edx
  404772:	cmp    eax,ecx
  404774:	mov    eax,0x1
  404779:	cmovbe eax,edx
  40477c:	ret    
  40477d:	neg    rsi
  404780:	sbb    eax,eax
  404782:	ret    
  404783:	mov    eax,0x1
  404788:	ret    
  404789:	nop    DWORD PTR [rax+0x0]

0000000000404790 <table_compare_int8@@Base>:
  404790:	test   rdi,rdi
  404793:	je     4047b2 <table_compare_int8@@Base+0x22>
  404795:	test   rsi,rsi
  404798:	je     4047b8 <table_compare_int8@@Base+0x28>
  40479a:	mov    al,BYTE PTR [rdi]
  40479c:	mov    cl,BYTE PTR [rsi]
  40479e:	xor    edx,edx
  4047a0:	cmp    al,cl
  4047a2:	setl   dl
  4047a5:	neg    edx
  4047a7:	cmp    al,cl
  4047a9:	mov    eax,0x1
  4047ae:	cmovle eax,edx
  4047b1:	ret    
  4047b2:	neg    rsi
  4047b5:	sbb    eax,eax
  4047b7:	ret    
  4047b8:	mov    eax,0x1
  4047bd:	ret    
  4047be:	xchg   ax,ax

00000000004047c0 <table_compare_uint8@@Base>:
  4047c0:	test   rdi,rdi
  4047c3:	je     4047dd <table_compare_uint8@@Base+0x1d>
  4047c5:	test   rsi,rsi
  4047c8:	je     4047e3 <table_compare_uint8@@Base+0x23>
  4047ca:	mov    al,BYTE PTR [rdi]
  4047cc:	mov    cl,BYTE PTR [rsi]
  4047ce:	cmp    al,cl
  4047d0:	sbb    edx,edx
  4047d2:	cmp    al,cl
  4047d4:	mov    eax,0x1
  4047d9:	cmovbe eax,edx
  4047dc:	ret    
  4047dd:	neg    rsi
  4047e0:	sbb    eax,eax
  4047e2:	ret    
  4047e3:	mov    eax,0x1
  4047e8:	ret    
  4047e9:	nop    DWORD PTR [rax+0x0]

00000000004047f0 <table_compare_int16@@Base>:
  4047f0:	test   rdi,rdi
  4047f3:	je     404816 <table_compare_int16@@Base+0x26>
  4047f5:	test   rsi,rsi
  4047f8:	je     40481c <table_compare_int16@@Base+0x2c>
  4047fa:	movzx  eax,WORD PTR [rdi]
  4047fd:	movzx  ecx,WORD PTR [rsi]
  404800:	xor    edx,edx
  404802:	cmp    ax,cx
  404805:	setl   dl
  404808:	neg    edx
  40480a:	cmp    ax,cx
  40480d:	mov    eax,0x1
  404812:	cmovle eax,edx
  404815:	ret    
  404816:	neg    rsi
  404819:	sbb    eax,eax
  40481b:	ret    
  40481c:	mov    eax,0x1
  404821:	ret    
  404822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40482c:	nop    DWORD PTR [rax+0x0]

0000000000404830 <table_compare_uint16@@Base>:
  404830:	test   rdi,rdi
  404833:	je     404851 <table_compare_uint16@@Base+0x21>
  404835:	test   rsi,rsi
  404838:	je     404857 <table_compare_uint16@@Base+0x27>
  40483a:	movzx  eax,WORD PTR [rdi]
  40483d:	movzx  ecx,WORD PTR [rsi]
  404840:	cmp    ax,cx
  404843:	sbb    edx,edx
  404845:	cmp    ax,cx
  404848:	mov    eax,0x1
  40484d:	cmovbe eax,edx
  404850:	ret    
  404851:	neg    rsi
  404854:	sbb    eax,eax
  404856:	ret    
  404857:	mov    eax,0x1
  40485c:	ret    
  40485d:	nop    DWORD PTR [rax]

0000000000404860 <table_compare_int32@@Base>:
  404860:	test   rdi,rdi
  404863:	je     404882 <table_compare_int32@@Base+0x22>
  404865:	test   rsi,rsi
  404868:	je     404888 <table_compare_int32@@Base+0x28>
  40486a:	mov    eax,DWORD PTR [rdi]
  40486c:	mov    ecx,DWORD PTR [rsi]
  40486e:	xor    edx,edx
  404870:	cmp    eax,ecx
  404872:	setl   dl
  404875:	neg    edx
  404877:	cmp    eax,ecx
  404879:	mov    eax,0x1
  40487e:	cmovle eax,edx
  404881:	ret    
  404882:	neg    rsi
  404885:	sbb    eax,eax
  404887:	ret    
  404888:	mov    eax,0x1
  40488d:	ret    
  40488e:	xchg   ax,ax

0000000000404890 <table_compare_uint32@@Base>:
  404890:	test   rdi,rdi
  404893:	je     4048ad <table_compare_uint32@@Base+0x1d>
  404895:	test   rsi,rsi
  404898:	je     4048b3 <table_compare_uint32@@Base+0x23>
  40489a:	mov    eax,DWORD PTR [rdi]
  40489c:	mov    ecx,DWORD PTR [rsi]
  40489e:	cmp    eax,ecx
  4048a0:	sbb    edx,edx
  4048a2:	cmp    eax,ecx
  4048a4:	mov    eax,0x1
  4048a9:	cmovbe eax,edx
  4048ac:	ret    
  4048ad:	neg    rsi
  4048b0:	sbb    eax,eax
  4048b2:	ret    
  4048b3:	mov    eax,0x1
  4048b8:	ret    
  4048b9:	nop    DWORD PTR [rax+0x0]

00000000004048c0 <table_compare_int64@@Base>:
  4048c0:	test   rdi,rdi
  4048c3:	je     4048e6 <table_compare_int64@@Base+0x26>
  4048c5:	test   rsi,rsi
  4048c8:	je     4048ec <table_compare_int64@@Base+0x2c>
  4048ca:	mov    rax,QWORD PTR [rdi]
  4048cd:	mov    rcx,QWORD PTR [rsi]
  4048d0:	xor    edx,edx
  4048d2:	cmp    rax,rcx
  4048d5:	setl   dl
  4048d8:	neg    edx
  4048da:	cmp    rax,rcx
  4048dd:	mov    eax,0x1
  4048e2:	cmovle eax,edx
  4048e5:	ret    
  4048e6:	neg    rsi
  4048e9:	sbb    eax,eax
  4048eb:	ret    
  4048ec:	mov    eax,0x1
  4048f1:	ret    
  4048f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048fc:	nop    DWORD PTR [rax+0x0]

0000000000404900 <table_compare_uint64@@Base>:
  404900:	test   rdi,rdi
  404903:	je     404921 <table_compare_uint64@@Base+0x21>
  404905:	test   rsi,rsi
  404908:	je     404927 <table_compare_uint64@@Base+0x27>
  40490a:	mov    rax,QWORD PTR [rdi]
  40490d:	mov    rcx,QWORD PTR [rsi]
  404910:	cmp    rax,rcx
  404913:	sbb    edx,edx
  404915:	cmp    rax,rcx
  404918:	mov    eax,0x1
  40491d:	cmovbe eax,edx
  404920:	ret    
  404921:	neg    rsi
  404924:	sbb    eax,eax
  404926:	ret    
  404927:	mov    eax,0x1
  40492c:	ret    
  40492d:	nop    DWORD PTR [rax]

0000000000404930 <table_compare_short@@Base>:
  404930:	test   rdi,rdi
  404933:	je     404956 <table_compare_short@@Base+0x26>
  404935:	test   rsi,rsi
  404938:	je     40495c <table_compare_short@@Base+0x2c>
  40493a:	movzx  eax,WORD PTR [rdi]
  40493d:	movzx  ecx,WORD PTR [rsi]
  404940:	xor    edx,edx
  404942:	cmp    ax,cx
  404945:	setl   dl
  404948:	neg    edx
  40494a:	cmp    ax,cx
  40494d:	mov    eax,0x1
  404952:	cmovle eax,edx
  404955:	ret    
  404956:	neg    rsi
  404959:	sbb    eax,eax
  40495b:	ret    
  40495c:	mov    eax,0x1
  404961:	ret    
  404962:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40496c:	nop    DWORD PTR [rax+0x0]

0000000000404970 <table_compare_ushort@@Base>:
  404970:	test   rdi,rdi
  404973:	je     404991 <table_compare_ushort@@Base+0x21>
  404975:	test   rsi,rsi
  404978:	je     404997 <table_compare_ushort@@Base+0x27>
  40497a:	movzx  eax,WORD PTR [rdi]
  40497d:	movzx  ecx,WORD PTR [rsi]
  404980:	cmp    ax,cx
  404983:	sbb    edx,edx
  404985:	cmp    ax,cx
  404988:	mov    eax,0x1
  40498d:	cmovbe eax,edx
  404990:	ret    
  404991:	neg    rsi
  404994:	sbb    eax,eax
  404996:	ret    
  404997:	mov    eax,0x1
  40499c:	ret    
  40499d:	nop    DWORD PTR [rax]

00000000004049a0 <table_compare_long@@Base>:
  4049a0:	test   rdi,rdi
  4049a3:	je     4049c6 <table_compare_long@@Base+0x26>
  4049a5:	test   rsi,rsi
  4049a8:	je     4049cc <table_compare_long@@Base+0x2c>
  4049aa:	mov    rax,QWORD PTR [rdi]
  4049ad:	mov    rcx,QWORD PTR [rsi]
  4049b0:	xor    edx,edx
  4049b2:	cmp    rax,rcx
  4049b5:	setl   dl
  4049b8:	neg    edx
  4049ba:	cmp    rax,rcx
  4049bd:	mov    eax,0x1
  4049c2:	cmovle eax,edx
  4049c5:	ret    
  4049c6:	neg    rsi
  4049c9:	sbb    eax,eax
  4049cb:	ret    
  4049cc:	mov    eax,0x1
  4049d1:	ret    
  4049d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049dc:	nop    DWORD PTR [rax+0x0]

00000000004049e0 <table_compare_ulong@@Base>:
  4049e0:	test   rdi,rdi
  4049e3:	je     404a01 <table_compare_ulong@@Base+0x21>
  4049e5:	test   rsi,rsi
  4049e8:	je     404a07 <table_compare_ulong@@Base+0x27>
  4049ea:	mov    rax,QWORD PTR [rdi]
  4049ed:	mov    rcx,QWORD PTR [rsi]
  4049f0:	cmp    rax,rcx
  4049f3:	sbb    edx,edx
  4049f5:	cmp    rax,rcx
  4049f8:	mov    eax,0x1
  4049fd:	cmovbe eax,edx
  404a00:	ret    
  404a01:	neg    rsi
  404a04:	sbb    eax,eax
  404a06:	ret    
  404a07:	mov    eax,0x1
  404a0c:	ret    
  404a0d:	nop    DWORD PTR [rax]

0000000000404a10 <table_compare_llong@@Base>:
  404a10:	test   rdi,rdi
  404a13:	je     404a36 <table_compare_llong@@Base+0x26>
  404a15:	test   rsi,rsi
  404a18:	je     404a3c <table_compare_llong@@Base+0x2c>
  404a1a:	mov    rax,QWORD PTR [rdi]
  404a1d:	mov    rcx,QWORD PTR [rsi]
  404a20:	xor    edx,edx
  404a22:	cmp    rax,rcx
  404a25:	setl   dl
  404a28:	neg    edx
  404a2a:	cmp    rax,rcx
  404a2d:	mov    eax,0x1
  404a32:	cmovle eax,edx
  404a35:	ret    
  404a36:	neg    rsi
  404a39:	sbb    eax,eax
  404a3b:	ret    
  404a3c:	mov    eax,0x1
  404a41:	ret    
  404a42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a4c:	nop    DWORD PTR [rax+0x0]

0000000000404a50 <table_compare_ullong@@Base>:
  404a50:	test   rdi,rdi
  404a53:	je     404a71 <table_compare_ullong@@Base+0x21>
  404a55:	test   rsi,rsi
  404a58:	je     404a77 <table_compare_ullong@@Base+0x27>
  404a5a:	mov    rax,QWORD PTR [rdi]
  404a5d:	mov    rcx,QWORD PTR [rsi]
  404a60:	cmp    rax,rcx
  404a63:	sbb    edx,edx
  404a65:	cmp    rax,rcx
  404a68:	mov    eax,0x1
  404a6d:	cmovbe eax,edx
  404a70:	ret    
  404a71:	neg    rsi
  404a74:	sbb    eax,eax
  404a76:	ret    
  404a77:	mov    eax,0x1
  404a7c:	ret    
  404a7d:	nop    DWORD PTR [rax]

0000000000404a80 <table_compare_float@@Base>:
  404a80:	test   rdi,rdi
  404a83:	je     404aaa <table_compare_float@@Base+0x2a>
  404a85:	test   rsi,rsi
  404a88:	je     404ab0 <table_compare_float@@Base+0x30>
  404a8a:	vmovss xmm0,DWORD PTR [rdi]
  404a8e:	vmovss xmm1,DWORD PTR [rsi]
  404a92:	xor    ecx,ecx
  404a94:	vucomiss xmm1,xmm0
  404a98:	seta   cl
  404a9b:	neg    ecx
  404a9d:	vucomiss xmm0,xmm1
  404aa1:	mov    eax,0x1
  404aa6:	cmovbe eax,ecx
  404aa9:	ret    
  404aaa:	neg    rsi
  404aad:	sbb    eax,eax
  404aaf:	ret    
  404ab0:	mov    eax,0x1
  404ab5:	ret    
  404ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404ac0 <table_compare_double@@Base>:
  404ac0:	test   rdi,rdi
  404ac3:	je     404aea <table_compare_double@@Base+0x2a>
  404ac5:	test   rsi,rsi
  404ac8:	je     404af0 <table_compare_double@@Base+0x30>
  404aca:	vmovsd xmm0,QWORD PTR [rdi]
  404ace:	vmovsd xmm1,QWORD PTR [rsi]
  404ad2:	xor    ecx,ecx
  404ad4:	vucomisd xmm1,xmm0
  404ad8:	seta   cl
  404adb:	neg    ecx
  404add:	vucomisd xmm0,xmm1
  404ae1:	mov    eax,0x1
  404ae6:	cmovbe eax,ecx
  404ae9:	ret    
  404aea:	neg    rsi
  404aed:	sbb    eax,eax
  404aef:	ret    
  404af0:	mov    eax,0x1
  404af5:	ret    
  404af6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000404b00 <table_compare_ldouble@@Base>:
  404b00:	test   rdi,rdi
  404b03:	je     404b26 <table_compare_ldouble@@Base+0x26>
  404b05:	test   rsi,rsi
  404b08:	je     404b2c <table_compare_ldouble@@Base+0x2c>
  404b0a:	fld    TBYTE PTR [rdi]
  404b0c:	fld    TBYTE PTR [rsi]
  404b0e:	xor    ecx,ecx
  404b10:	fucomi st,st(1)
  404b12:	seta   cl
  404b15:	neg    ecx
  404b17:	fxch   st(1)
  404b19:	fucomip st,st(1)
  404b1b:	fstp   st(0)
  404b1d:	mov    eax,0x1
  404b22:	cmovbe eax,ecx
  404b25:	ret    
  404b26:	neg    rsi
  404b29:	sbb    eax,eax
  404b2b:	ret    
  404b2c:	mov    eax,0x1
  404b31:	ret    
  404b32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b3c:	nop    DWORD PTR [rax+0x0]

0000000000404b40 <table_compare_char@@Base>:
  404b40:	test   rdi,rdi
  404b43:	je     404b62 <table_compare_char@@Base+0x22>
  404b45:	test   rsi,rsi
  404b48:	je     404b68 <table_compare_char@@Base+0x28>
  404b4a:	mov    al,BYTE PTR [rdi]
  404b4c:	mov    cl,BYTE PTR [rsi]
  404b4e:	xor    edx,edx
  404b50:	cmp    al,cl
  404b52:	setl   dl
  404b55:	neg    edx
  404b57:	cmp    al,cl
  404b59:	mov    eax,0x1
  404b5e:	cmovle eax,edx
  404b61:	ret    
  404b62:	neg    rsi
  404b65:	sbb    eax,eax
  404b67:	ret    
  404b68:	mov    eax,0x1
  404b6d:	ret    
  404b6e:	xchg   ax,ax

0000000000404b70 <table_compare_uchar@@Base>:
  404b70:	test   rdi,rdi
  404b73:	je     404b8d <table_compare_uchar@@Base+0x1d>
  404b75:	test   rsi,rsi
  404b78:	je     404b93 <table_compare_uchar@@Base+0x23>
  404b7a:	mov    al,BYTE PTR [rdi]
  404b7c:	mov    cl,BYTE PTR [rsi]
  404b7e:	cmp    al,cl
  404b80:	sbb    edx,edx
  404b82:	cmp    al,cl
  404b84:	mov    eax,0x1
  404b89:	cmovbe eax,edx
  404b8c:	ret    
  404b8d:	neg    rsi
  404b90:	sbb    eax,eax
  404b92:	ret    
  404b93:	mov    eax,0x1
  404b98:	ret    
  404b99:	nop    DWORD PTR [rax+0x0]

0000000000404ba0 <table_compare_string@@Base>:
  404ba0:	test   rdi,rdi
  404ba3:	je     404baf <table_compare_string@@Base+0xf>
  404ba5:	test   rsi,rsi
  404ba8:	je     404bb5 <table_compare_string@@Base+0x15>
  404baa:	jmp    4030a0 <strcmp@plt>
  404baf:	neg    rsi
  404bb2:	sbb    eax,eax
  404bb4:	ret    
  404bb5:	mov    eax,0x1
  404bba:	ret    
  404bbb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404bc0 <table_compare_ptr@@Base>:
  404bc0:	cmp    rdi,rsi
  404bc3:	sbb    ecx,ecx
  404bc5:	cmp    rdi,rsi
  404bc8:	mov    eax,0x1
  404bcd:	cmovbe eax,ecx
  404bd0:	ret    
  404bd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bdb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404be0 <table_get_default_compare_function_for_data_type@@Base>:
  404be0:	cmp    edi,0x17
  404be3:	ja     404bf4 <table_get_default_compare_function_for_data_type@@Base+0x14>
  404be5:	movsxd rax,edi
  404be8:	lea    rcx,[rip+0x5161]        # 409d50 <_IO_stdin_used@@Base+0x2d50>
  404bef:	mov    rax,QWORD PTR [rcx+rax*8]
  404bf3:	ret    
  404bf4:	xor    eax,eax
  404bf6:	ret    
  404bf7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404c00 <table_get@@Base>:
  404c00:	push   rax
  404c01:	call   406500 <table_get_cell_ptr@@Base>
  404c06:	mov    rax,QWORD PTR [rax]
  404c09:	pop    rcx
  404c0a:	ret    
  404c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404c10 <table_get_bool@@Base>:
  404c10:	push   rax
  404c11:	call   406500 <table_get_cell_ptr@@Base>
  404c16:	mov    rax,QWORD PTR [rax]
  404c19:	mov    al,BYTE PTR [rax]
  404c1b:	pop    rcx
  404c1c:	ret    
  404c1d:	nop    DWORD PTR [rax]

0000000000404c20 <table_get_int@@Base>:
  404c20:	push   rax
  404c21:	call   406500 <table_get_cell_ptr@@Base>
  404c26:	mov    rax,QWORD PTR [rax]
  404c29:	mov    eax,DWORD PTR [rax]
  404c2b:	pop    rcx
  404c2c:	ret    
  404c2d:	nop    DWORD PTR [rax]

0000000000404c30 <table_get_uint@@Base>:
  404c30:	push   rax
  404c31:	call   406500 <table_get_cell_ptr@@Base>
  404c36:	mov    rax,QWORD PTR [rax]
  404c39:	mov    eax,DWORD PTR [rax]
  404c3b:	pop    rcx
  404c3c:	ret    
  404c3d:	nop    DWORD PTR [rax]

0000000000404c40 <table_get_int8@@Base>:
  404c40:	push   rax
  404c41:	call   406500 <table_get_cell_ptr@@Base>
  404c46:	mov    rax,QWORD PTR [rax]
  404c49:	mov    al,BYTE PTR [rax]
  404c4b:	pop    rcx
  404c4c:	ret    
  404c4d:	nop    DWORD PTR [rax]

0000000000404c50 <table_get_uint8@@Base>:
  404c50:	push   rax
  404c51:	call   406500 <table_get_cell_ptr@@Base>
  404c56:	mov    rax,QWORD PTR [rax]
  404c59:	mov    al,BYTE PTR [rax]
  404c5b:	pop    rcx
  404c5c:	ret    
  404c5d:	nop    DWORD PTR [rax]

0000000000404c60 <table_get_int16@@Base>:
  404c60:	push   rax
  404c61:	call   406500 <table_get_cell_ptr@@Base>
  404c66:	mov    rax,QWORD PTR [rax]
  404c69:	movzx  eax,WORD PTR [rax]
  404c6c:	pop    rcx
  404c6d:	ret    
  404c6e:	xchg   ax,ax

0000000000404c70 <table_get_uint16@@Base>:
  404c70:	push   rax
  404c71:	call   406500 <table_get_cell_ptr@@Base>
  404c76:	mov    rax,QWORD PTR [rax]
  404c79:	movzx  eax,WORD PTR [rax]
  404c7c:	pop    rcx
  404c7d:	ret    
  404c7e:	xchg   ax,ax

0000000000404c80 <table_get_int32@@Base>:
  404c80:	push   rax
  404c81:	call   406500 <table_get_cell_ptr@@Base>
  404c86:	mov    rax,QWORD PTR [rax]
  404c89:	mov    eax,DWORD PTR [rax]
  404c8b:	pop    rcx
  404c8c:	ret    
  404c8d:	nop    DWORD PTR [rax]

0000000000404c90 <table_get_uint32@@Base>:
  404c90:	push   rax
  404c91:	call   406500 <table_get_cell_ptr@@Base>
  404c96:	mov    rax,QWORD PTR [rax]
  404c99:	mov    eax,DWORD PTR [rax]
  404c9b:	pop    rcx
  404c9c:	ret    
  404c9d:	nop    DWORD PTR [rax]

0000000000404ca0 <table_get_int64@@Base>:
  404ca0:	push   rax
  404ca1:	call   406500 <table_get_cell_ptr@@Base>
  404ca6:	mov    rax,QWORD PTR [rax]
  404ca9:	mov    rax,QWORD PTR [rax]
  404cac:	pop    rcx
  404cad:	ret    
  404cae:	xchg   ax,ax

0000000000404cb0 <table_get_uint64@@Base>:
  404cb0:	push   rax
  404cb1:	call   406500 <table_get_cell_ptr@@Base>
  404cb6:	mov    rax,QWORD PTR [rax]
  404cb9:	mov    rax,QWORD PTR [rax]
  404cbc:	pop    rcx
  404cbd:	ret    
  404cbe:	xchg   ax,ax

0000000000404cc0 <table_get_short@@Base>:
  404cc0:	push   rax
  404cc1:	call   406500 <table_get_cell_ptr@@Base>
  404cc6:	mov    rax,QWORD PTR [rax]
  404cc9:	movzx  eax,WORD PTR [rax]
  404ccc:	pop    rcx
  404ccd:	ret    
  404cce:	xchg   ax,ax

0000000000404cd0 <table_get_ushort@@Base>:
  404cd0:	push   rax
  404cd1:	call   406500 <table_get_cell_ptr@@Base>
  404cd6:	mov    rax,QWORD PTR [rax]
  404cd9:	movzx  eax,WORD PTR [rax]
  404cdc:	pop    rcx
  404cdd:	ret    
  404cde:	xchg   ax,ax

0000000000404ce0 <table_get_long@@Base>:
  404ce0:	push   rax
  404ce1:	call   406500 <table_get_cell_ptr@@Base>
  404ce6:	mov    rax,QWORD PTR [rax]
  404ce9:	mov    rax,QWORD PTR [rax]
  404cec:	pop    rcx
  404ced:	ret    
  404cee:	xchg   ax,ax

0000000000404cf0 <table_get_ulong@@Base>:
  404cf0:	push   rax
  404cf1:	call   406500 <table_get_cell_ptr@@Base>
  404cf6:	mov    rax,QWORD PTR [rax]
  404cf9:	mov    rax,QWORD PTR [rax]
  404cfc:	pop    rcx
  404cfd:	ret    
  404cfe:	xchg   ax,ax

0000000000404d00 <table_get_llong@@Base>:
  404d00:	push   rax
  404d01:	call   406500 <table_get_cell_ptr@@Base>
  404d06:	mov    rax,QWORD PTR [rax]
  404d09:	mov    rax,QWORD PTR [rax]
  404d0c:	pop    rcx
  404d0d:	ret    
  404d0e:	xchg   ax,ax

0000000000404d10 <table_get_ullong@@Base>:
  404d10:	push   rax
  404d11:	call   406500 <table_get_cell_ptr@@Base>
  404d16:	mov    rax,QWORD PTR [rax]
  404d19:	mov    rax,QWORD PTR [rax]
  404d1c:	pop    rcx
  404d1d:	ret    
  404d1e:	xchg   ax,ax

0000000000404d20 <table_get_float@@Base>:
  404d20:	push   rax
  404d21:	call   406500 <table_get_cell_ptr@@Base>
  404d26:	mov    rax,QWORD PTR [rax]
  404d29:	vmovss xmm0,DWORD PTR [rax]
  404d2d:	pop    rax
  404d2e:	ret    
  404d2f:	nop

0000000000404d30 <table_get_double@@Base>:
  404d30:	push   rax
  404d31:	call   406500 <table_get_cell_ptr@@Base>
  404d36:	mov    rax,QWORD PTR [rax]
  404d39:	vmovsd xmm0,QWORD PTR [rax]
  404d3d:	pop    rax
  404d3e:	ret    
  404d3f:	nop

0000000000404d40 <table_get_ldouble@@Base>:
  404d40:	push   rax
  404d41:	call   406500 <table_get_cell_ptr@@Base>
  404d46:	mov    rax,QWORD PTR [rax]
  404d49:	fld    TBYTE PTR [rax]
  404d4b:	pop    rax
  404d4c:	ret    
  404d4d:	nop    DWORD PTR [rax]

0000000000404d50 <table_get_char@@Base>:
  404d50:	push   rax
  404d51:	call   406500 <table_get_cell_ptr@@Base>
  404d56:	mov    rax,QWORD PTR [rax]
  404d59:	mov    al,BYTE PTR [rax]
  404d5b:	pop    rcx
  404d5c:	ret    
  404d5d:	nop    DWORD PTR [rax]

0000000000404d60 <table_get_uchar@@Base>:
  404d60:	push   rax
  404d61:	call   406500 <table_get_cell_ptr@@Base>
  404d66:	mov    rax,QWORD PTR [rax]
  404d69:	mov    al,BYTE PTR [rax]
  404d6b:	pop    rcx
  404d6c:	ret    
  404d6d:	nop    DWORD PTR [rax]

0000000000404d70 <table_get_string@@Base>:
  404d70:	push   rax
  404d71:	call   406500 <table_get_cell_ptr@@Base>
  404d76:	mov    rax,QWORD PTR [rax]
  404d79:	pop    rcx
  404d7a:	ret    
  404d7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404d80 <table_get_ptr@@Base>:
  404d80:	push   rax
  404d81:	call   406500 <table_get_cell_ptr@@Base>
  404d86:	mov    rax,QWORD PTR [rax]
  404d89:	pop    rcx
  404d8a:	ret    
  404d8b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404d90 <table_row_init@@Base>:
  404d90:	push   r14
  404d92:	push   rbx
  404d93:	push   rax
  404d94:	mov    rax,QWORD PTR [rdi+0x18]
  404d98:	mov    r14,QWORD PTR [rdi+0x20]
  404d9c:	movsxd rbx,esi
  404d9f:	shl    rax,0x3
  404da3:	mov    rdi,rax
  404da6:	call   4030c0 <malloc@plt>
  404dab:	mov    QWORD PTR [r14+rbx*8],rax
  404daf:	add    rsp,0x8
  404db3:	pop    rbx
  404db4:	pop    r14
  404db6:	ret    
  404db7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404dc0 <table_get_row_ptr@@Base>:
  404dc0:	movsxd rax,esi
  404dc3:	shl    rax,0x3
  404dc7:	add    rax,QWORD PTR [rdi+0x20]
  404dcb:	ret    
  404dcc:	nop    DWORD PTR [rax+0x0]

0000000000404dd0 <table_row_destroy@@Base>:
  404dd0:	push   rbp
  404dd1:	push   r15
  404dd3:	push   r14
  404dd5:	push   r13
  404dd7:	push   r12
  404dd9:	push   rbx
  404dda:	push   rax
  404ddb:	mov    r14d,esi
  404dde:	mov    r15,rdi
  404de1:	call   4041f0 <table_get_column_length@@Base>
  404de6:	mov    r12,QWORD PTR [r15+0x20]
  404dea:	movsxd r13,r14d
  404ded:	test   eax,eax
  404def:	jle    404e13 <table_row_destroy@@Base+0x43>
  404df1:	mov    ebp,eax
  404df3:	xor    ebx,ebx
  404df5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dff:	nop
  404e00:	mov    rdi,r15
  404e03:	mov    esi,r14d
  404e06:	mov    edx,ebx
  404e08:	call   406520 <table_cell_destroy@@Base>
  404e0d:	inc    ebx
  404e0f:	cmp    ebp,ebx
  404e11:	jne    404e00 <table_row_destroy@@Base+0x30>
  404e13:	mov    rdi,QWORD PTR [r12+r13*8]
  404e17:	add    rsp,0x8
  404e1b:	test   rdi,rdi
  404e1e:	je     404e2f <table_row_destroy@@Base+0x5f>
  404e20:	pop    rbx
  404e21:	pop    r12
  404e23:	pop    r13
  404e25:	pop    r14
  404e27:	pop    r15
  404e29:	pop    rbp
  404e2a:	jmp    403030 <free@plt>
  404e2f:	pop    rbx
  404e30:	pop    r12
  404e32:	pop    r13
  404e34:	pop    r14
  404e36:	pop    r15
  404e38:	pop    rbp
  404e39:	ret    
  404e3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404e40 <table_get_row_length@@Base>:
  404e40:	mov    eax,DWORD PTR [rdi+0x28]
  404e43:	ret    
  404e44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e4e:	xchg   ax,ax

0000000000404e50 <table_add_row@@Base>:
  404e50:	push   rbp
  404e51:	push   r15
  404e53:	push   r14
  404e55:	push   r12
  404e57:	push   rbx
  404e58:	mov    r12,rdi
  404e5b:	mov    r15d,DWORD PTR [rdi+0x28]
  404e5f:	movsxd r14,r15d
  404e62:	mov    rsi,QWORD PTR [rdi+0x30]
  404e66:	mov    rax,r14
  404e69:	or     rax,rsi
  404e6c:	shr    rax,0x20
  404e70:	je     404f10 <table_add_row@@Base+0xc0>
  404e76:	mov    rax,r14
  404e79:	xor    edx,edx
  404e7b:	div    rsi
  404e7e:	test   rdx,rdx
  404e81:	jne    404ea8 <table_add_row@@Base+0x58>
  404e83:	add    rsi,QWORD PTR [r12+0x38]
  404e88:	mov    QWORD PTR [r12+0x38],rsi
  404e8d:	mov    rdi,QWORD PTR [r12+0x20]
  404e92:	shl    rsi,0x3
  404e96:	call   4030e0 <realloc@plt>
  404e9b:	mov    QWORD PTR [r12+0x20],rax
  404ea0:	mov    r15d,DWORD PTR [r12+0x28]
  404ea5:	movsxd r14,r15d
  404ea8:	mov    rdi,r12
  404eab:	call   4041f0 <table_get_column_length@@Base>
  404eb0:	mov    ebp,eax
  404eb2:	mov    rdi,QWORD PTR [r12+0x18]
  404eb7:	mov    rbx,QWORD PTR [r12+0x20]
  404ebc:	shl    rdi,0x3
  404ec0:	call   4030c0 <malloc@plt>
  404ec5:	mov    QWORD PTR [rbx+r14*8],rax
  404ec9:	test   ebp,ebp
  404ecb:	jle    404ee3 <table_add_row@@Base+0x93>
  404ecd:	xor    ebx,ebx
  404ecf:	nop
  404ed0:	mov    rdi,r12
  404ed3:	mov    esi,r15d
  404ed6:	mov    edx,ebx
  404ed8:	call   4064e0 <table_cell_init@@Base>
  404edd:	inc    ebx
  404edf:	cmp    ebp,ebx
  404ee1:	jne    404ed0 <table_add_row@@Base+0x80>
  404ee3:	mov    esi,DWORD PTR [r12+0x28]
  404ee8:	mov    rdi,r12
  404eeb:	mov    edx,0xffffffff
  404ef0:	mov    ecx,0x2
  404ef5:	call   404100 <table_notify@@Base>
  404efa:	mov    eax,DWORD PTR [r12+0x28]
  404eff:	lea    ecx,[rax+0x1]
  404f02:	mov    DWORD PTR [r12+0x28],ecx
  404f07:	pop    rbx
  404f08:	pop    r12
  404f0a:	pop    r14
  404f0c:	pop    r15
  404f0e:	pop    rbp
  404f0f:	ret    
  404f10:	mov    eax,r15d
  404f13:	xor    edx,edx
  404f15:	div    esi
  404f17:	test   rdx,rdx
  404f1a:	jne    404ea8 <table_add_row@@Base+0x58>
  404f1c:	jmp    404e83 <table_add_row@@Base+0x33>
  404f21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404f30 <table_remove_row@@Base>:
  404f30:	push   rbp
  404f31:	push   r15
  404f33:	push   r14
  404f35:	push   r12
  404f37:	push   rbx
  404f38:	mov    r14d,esi
  404f3b:	mov    rbx,rdi
  404f3e:	mov    r12d,DWORD PTR [rdi+0x28]
  404f42:	call   4041f0 <table_get_column_length@@Base>
  404f47:	test   eax,eax
  404f49:	jle    404f92 <table_remove_row@@Base+0x62>
  404f4b:	mov    r15d,eax
  404f4e:	xor    ebp,ebp
  404f50:	jmp    404f67 <table_remove_row@@Base+0x37>
  404f52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f5c:	nop    DWORD PTR [rax+0x0]
  404f60:	inc    ebp
  404f62:	cmp    r15d,ebp
  404f65:	je     404f92 <table_remove_row@@Base+0x62>
  404f67:	mov    rdi,rbx
  404f6a:	mov    esi,ebp
  404f6c:	call   404270 <table_get_column_data_type@@Base>
  404f71:	cmp    eax,0x17
  404f74:	je     404f60 <table_remove_row@@Base+0x30>
  404f76:	mov    rdi,rbx
  404f79:	mov    esi,r14d
  404f7c:	mov    edx,ebp
  404f7e:	call   406500 <table_get_cell_ptr@@Base>
  404f83:	mov    rdi,QWORD PTR [rax]
  404f86:	test   rdi,rdi
  404f89:	je     404f60 <table_remove_row@@Base+0x30>
  404f8b:	call   403030 <free@plt>
  404f90:	jmp    404f60 <table_remove_row@@Base+0x30>
  404f92:	mov    rax,QWORD PTR [rbx+0x20]
  404f96:	movsxd rbp,r14d
  404f99:	mov    rdi,QWORD PTR [rax+rbp*8]
  404f9d:	test   rdi,rdi
  404fa0:	je     404fa7 <table_remove_row@@Base+0x77>
  404fa2:	call   403030 <free@plt>
  404fa7:	dec    r12d
  404faa:	mov    ecx,r12d
  404fad:	sub    ecx,r14d
  404fb0:	jle    405068 <table_remove_row@@Base+0x138>
  404fb6:	movsxd rax,r12d
  404fb9:	mov    rdx,rbp
  404fbc:	not    rdx
  404fbf:	add    rdx,rax
  404fc2:	and    rcx,0x7
  404fc6:	je     404fe5 <table_remove_row@@Base+0xb5>
  404fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  404fd0:	mov    rsi,QWORD PTR [rbx+0x20]
  404fd4:	mov    rdi,QWORD PTR [rsi+rbp*8+0x8]
  404fd9:	mov    QWORD PTR [rsi+rbp*8],rdi
  404fdd:	inc    rbp
  404fe0:	dec    rcx
  404fe3:	jne    404fd0 <table_remove_row@@Base+0xa0>
  404fe5:	cmp    rdx,0x7
  404fe9:	jb     405068 <table_remove_row@@Base+0x138>
  404feb:	nop    DWORD PTR [rax+rax*1+0x0]
  404ff0:	mov    rcx,QWORD PTR [rbx+0x20]
  404ff4:	mov    rdx,QWORD PTR [rcx+rbp*8+0x8]
  404ff9:	mov    QWORD PTR [rcx+rbp*8],rdx
  404ffd:	mov    rcx,QWORD PTR [rbx+0x20]
  405001:	mov    rdx,QWORD PTR [rcx+rbp*8+0x10]
  405006:	mov    QWORD PTR [rcx+rbp*8+0x8],rdx
  40500b:	mov    rcx,QWORD PTR [rbx+0x20]
  40500f:	mov    rdx,QWORD PTR [rcx+rbp*8+0x18]
  405014:	mov    QWORD PTR [rcx+rbp*8+0x10],rdx
  405019:	mov    rcx,QWORD PTR [rbx+0x20]
  40501d:	mov    rdx,QWORD PTR [rcx+rbp*8+0x20]
  405022:	mov    QWORD PTR [rcx+rbp*8+0x18],rdx
  405027:	mov    rcx,QWORD PTR [rbx+0x20]
  40502b:	mov    rdx,QWORD PTR [rcx+rbp*8+0x28]
  405030:	mov    QWORD PTR [rcx+rbp*8+0x20],rdx
  405035:	mov    rcx,QWORD PTR [rbx+0x20]
  405039:	mov    rdx,QWORD PTR [rcx+rbp*8+0x30]
  40503e:	mov    QWORD PTR [rcx+rbp*8+0x28],rdx
  405043:	mov    rcx,QWORD PTR [rbx+0x20]
  405047:	mov    rdx,QWORD PTR [rcx+rbp*8+0x38]
  40504c:	mov    QWORD PTR [rcx+rbp*8+0x30],rdx
  405051:	mov    rcx,QWORD PTR [rbx+0x20]
  405055:	mov    rdx,QWORD PTR [rcx+rbp*8+0x40]
  40505a:	mov    QWORD PTR [rcx+rbp*8+0x38],rdx
  40505f:	add    rbp,0x8
  405063:	cmp    rax,rbp
  405066:	jne    404ff0 <table_remove_row@@Base+0xc0>
  405068:	movsxd rax,DWORD PTR [rbx+0x28]
  40506c:	dec    rax
  40506f:	mov    DWORD PTR [rbx+0x28],eax
  405072:	mov    rcx,QWORD PTR [rbx+0x30]
  405076:	mov    rdx,rax
  405079:	or     rdx,rcx
  40507c:	shr    rdx,0x20
  405080:	je     4050c8 <table_remove_row@@Base+0x198>
  405082:	xor    edx,edx
  405084:	div    rcx
  405087:	test   rdx,rdx
  40508a:	jne    4050a8 <table_remove_row@@Base+0x178>
  40508c:	mov    rdi,QWORD PTR [rbx+0x20]
  405090:	mov    rsi,QWORD PTR [rbx+0x38]
  405094:	sub    rsi,rcx
  405097:	mov    QWORD PTR [rbx+0x38],rsi
  40509b:	shl    rsi,0x3
  40509f:	call   4030e0 <realloc@plt>
  4050a4:	mov    QWORD PTR [rbx+0x20],rax
  4050a8:	mov    rdi,rbx
  4050ab:	mov    esi,r14d
  4050ae:	mov    edx,0xffffffff
  4050b3:	mov    ecx,0x4
  4050b8:	call   404100 <table_notify@@Base>
  4050bd:	xor    eax,eax
  4050bf:	pop    rbx
  4050c0:	pop    r12
  4050c2:	pop    r14
  4050c4:	pop    r15
  4050c6:	pop    rbp
  4050c7:	ret    
  4050c8:	xor    edx,edx
  4050ca:	div    ecx
  4050cc:	test   rdx,rdx
  4050cf:	jne    4050a8 <table_remove_row@@Base+0x178>
  4050d1:	jmp    40508c <table_remove_row@@Base+0x15c>
  4050d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050dd:	nop    DWORD PTR [rax]

00000000004050e0 <table_set_row_ptr@@Base>:
  4050e0:	mov    rax,QWORD PTR [rdi+0x20]
  4050e4:	movsxd rcx,esi
  4050e7:	mov    rdx,QWORD PTR [rdx]
  4050ea:	mov    QWORD PTR [rax+rcx*8],rdx
  4050ee:	ret    
  4050ef:	nop

00000000004050f0 <table_set@@Base>:
  4050f0:	push   rbp
  4050f1:	push   r15
  4050f3:	push   r14
  4050f5:	push   r13
  4050f7:	push   r12
  4050f9:	push   rbx
  4050fa:	push   rax
  4050fb:	mov    r12d,r8d
  4050fe:	mov    QWORD PTR [rsp],rcx
  405102:	mov    ebx,edx
  405104:	mov    r14d,esi
  405107:	mov    rbp,rdi
  40510a:	call   406500 <table_get_cell_ptr@@Base>
  40510f:	mov    r13,rax
  405112:	mov    rdi,rbp
  405115:	mov    esi,ebx
  405117:	call   4041c0 <table_get_col_ptr@@Base>
  40511c:	mov    r15d,0xffffffff
  405122:	cmp    r12d,0x17
  405126:	ja     405367 <table_set@@Base+0x277>
  40512c:	mov    ecx,r12d
  40512f:	lea    rdx,[rip+0x2046]        # 40717c <_IO_stdin_used@@Base+0x17c>
  405136:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40513a:	add    rcx,rdx
  40513d:	jmp    rcx
  40513f:	cmp    DWORD PTR [rax+0x8],0x0
  405143:	jne    405367 <table_set@@Base+0x277>
  405149:	jmp    405247 <table_set@@Base+0x157>
  40514e:	cmp    DWORD PTR [rax+0x8],0x1
  405152:	je     405247 <table_set@@Base+0x157>
  405158:	jmp    405367 <table_set@@Base+0x277>
  40515d:	cmp    DWORD PTR [rax+0x8],0x2
  405161:	je     40532e <table_set@@Base+0x23e>
  405167:	jmp    405367 <table_set@@Base+0x277>
  40516c:	cmp    DWORD PTR [rax+0x8],0x3
  405170:	je     40532e <table_set@@Base+0x23e>
  405176:	jmp    405367 <table_set@@Base+0x277>
  40517b:	cmp    DWORD PTR [rax+0x8],0x4
  40517f:	je     4051e2 <table_set@@Base+0xf2>
  405181:	jmp    405367 <table_set@@Base+0x277>
  405186:	cmp    DWORD PTR [rax+0x8],0x5
  40518a:	je     4051e2 <table_set@@Base+0xf2>
  40518c:	jmp    405367 <table_set@@Base+0x277>
  405191:	cmp    DWORD PTR [rax+0x8],0x6
  405195:	je     405247 <table_set@@Base+0x157>
  40519b:	jmp    405367 <table_set@@Base+0x277>
  4051a0:	cmp    DWORD PTR [rax+0x8],0x7
  4051a4:	je     405247 <table_set@@Base+0x157>
  4051aa:	jmp    405367 <table_set@@Base+0x277>
  4051af:	cmp    DWORD PTR [rax+0x8],0x8
  4051b3:	je     40527e <table_set@@Base+0x18e>
  4051b9:	jmp    405367 <table_set@@Base+0x277>
  4051be:	cmp    DWORD PTR [rax+0x8],0x9
  4051c2:	je     40527e <table_set@@Base+0x18e>
  4051c8:	jmp    405367 <table_set@@Base+0x277>
  4051cd:	cmp    DWORD PTR [rax+0x8],0xa
  4051d1:	je     4051e2 <table_set@@Base+0xf2>
  4051d3:	jmp    405367 <table_set@@Base+0x277>
  4051d8:	cmp    DWORD PTR [rax+0x8],0xb
  4051dc:	jne    405367 <table_set@@Base+0x277>
  4051e2:	mov    rax,QWORD PTR [r13+0x0]
  4051e6:	test   rax,rax
  4051e9:	jne    405202 <table_set@@Base+0x112>
  4051eb:	mov    edi,0x2
  4051f0:	call   4030c0 <malloc@plt>
  4051f5:	mov    QWORD PTR [r13+0x0],rax
  4051f9:	test   rax,rax
  4051fc:	je     405367 <table_set@@Base+0x277>
  405202:	mov    rcx,QWORD PTR [rsp]
  405206:	movzx  ecx,WORD PTR [rcx]
  405209:	mov    WORD PTR [rax],cx
  40520c:	jmp    405352 <table_set@@Base+0x262>
  405211:	cmp    DWORD PTR [rax+0x8],0xc
  405215:	je     40527e <table_set@@Base+0x18e>
  405217:	jmp    405367 <table_set@@Base+0x277>
  40521c:	cmp    DWORD PTR [rax+0x8],0xd
  405220:	je     40527e <table_set@@Base+0x18e>
  405222:	jmp    405367 <table_set@@Base+0x277>
  405227:	cmp    DWORD PTR [rax+0x8],0xe
  40522b:	je     40527e <table_set@@Base+0x18e>
  40522d:	jmp    405367 <table_set@@Base+0x277>
  405232:	cmp    DWORD PTR [rax+0x8],0xf
  405236:	je     40527e <table_set@@Base+0x18e>
  405238:	jmp    405367 <table_set@@Base+0x277>
  40523d:	cmp    DWORD PTR [rax+0x8],0x10
  405241:	jne    405367 <table_set@@Base+0x277>
  405247:	mov    rax,QWORD PTR [r13+0x0]
  40524b:	test   rax,rax
  40524e:	jne    405267 <table_set@@Base+0x177>
  405250:	mov    edi,0x4
  405255:	call   4030c0 <malloc@plt>
  40525a:	mov    QWORD PTR [r13+0x0],rax
  40525e:	test   rax,rax
  405261:	je     405367 <table_set@@Base+0x277>
  405267:	mov    rcx,QWORD PTR [rsp]
  40526b:	mov    ecx,DWORD PTR [rcx]
  40526d:	mov    DWORD PTR [rax],ecx
  40526f:	jmp    405352 <table_set@@Base+0x262>
  405274:	cmp    DWORD PTR [rax+0x8],0x11
  405278:	jne    405367 <table_set@@Base+0x277>
  40527e:	mov    rax,QWORD PTR [r13+0x0]
  405282:	test   rax,rax
  405285:	jne    40529e <table_set@@Base+0x1ae>
  405287:	mov    edi,0x8
  40528c:	call   4030c0 <malloc@plt>
  405291:	mov    QWORD PTR [r13+0x0],rax
  405295:	test   rax,rax
  405298:	je     405367 <table_set@@Base+0x277>
  40529e:	mov    rcx,QWORD PTR [rsp]
  4052a2:	mov    rcx,QWORD PTR [rcx]
  4052a5:	mov    QWORD PTR [rax],rcx
  4052a8:	jmp    405352 <table_set@@Base+0x262>
  4052ad:	cmp    DWORD PTR [rax+0x8],0x12
  4052b1:	jne    405367 <table_set@@Base+0x277>
  4052b7:	mov    rax,QWORD PTR [r13+0x0]
  4052bb:	test   rax,rax
  4052be:	jne    4052d7 <table_set@@Base+0x1e7>
  4052c0:	mov    edi,0x10
  4052c5:	call   4030c0 <malloc@plt>
  4052ca:	mov    QWORD PTR [r13+0x0],rax
  4052ce:	test   rax,rax
  4052d1:	je     405367 <table_set@@Base+0x277>
  4052d7:	mov    rcx,QWORD PTR [rsp]
  4052db:	vmovups xmm0,XMMWORD PTR [rcx]
  4052df:	vmovups XMMWORD PTR [rax],xmm0
  4052e3:	jmp    405352 <table_set@@Base+0x262>
  4052e5:	cmp    DWORD PTR [rax+0x8],0x13
  4052e9:	je     40532e <table_set@@Base+0x23e>
  4052eb:	jmp    405367 <table_set@@Base+0x277>
  4052ed:	cmp    DWORD PTR [rax+0x8],0x14
  4052f1:	je     40532e <table_set@@Base+0x23e>
  4052f3:	jmp    405367 <table_set@@Base+0x277>
  4052f5:	cmp    DWORD PTR [rax+0x8],0x15
  4052f9:	jne    405367 <table_set@@Base+0x277>
  4052fb:	mov    rdi,QWORD PTR [rsp]
  4052ff:	call   403060 <strlen@plt>
  405304:	mov    rdi,QWORD PTR [r13+0x0]
  405308:	lea    rsi,[rax+0x1]
  40530c:	call   4030e0 <realloc@plt>
  405311:	mov    QWORD PTR [r13+0x0],rax
  405315:	test   rax,rax
  405318:	je     405367 <table_set@@Base+0x277>
  40531a:	mov    rdi,rax
  40531d:	mov    rsi,QWORD PTR [rsp]
  405321:	call   403050 <strcpy@plt>
  405326:	jmp    405352 <table_set@@Base+0x262>
  405328:	cmp    DWORD PTR [rax+0x8],0x16
  40532c:	jne    405367 <table_set@@Base+0x277>
  40532e:	mov    rax,QWORD PTR [r13+0x0]
  405332:	test   rax,rax
  405335:	jne    40534a <table_set@@Base+0x25a>
  405337:	mov    edi,0x1
  40533c:	call   4030c0 <malloc@plt>
  405341:	mov    QWORD PTR [r13+0x0],rax
  405345:	test   rax,rax
  405348:	je     405367 <table_set@@Base+0x277>
  40534a:	mov    rcx,QWORD PTR [rsp]
  40534e:	mov    cl,BYTE PTR [rcx]
  405350:	mov    BYTE PTR [rax],cl
  405352:	mov    rdi,rbp
  405355:	mov    esi,r14d
  405358:	mov    edx,ebx
  40535a:	mov    ecx,0x1
  40535f:	call   404100 <table_notify@@Base>
  405364:	xor    r15d,r15d
  405367:	mov    eax,r15d
  40536a:	add    rsp,0x8
  40536e:	pop    rbx
  40536f:	pop    r12
  405371:	pop    r13
  405373:	pop    r14
  405375:	pop    r15
  405377:	pop    rbp
  405378:	ret    
  405379:	cmp    DWORD PTR [rax+0x8],0x17
  40537d:	jne    405367 <table_set@@Base+0x277>
  40537f:	mov    rax,QWORD PTR [rsp]
  405383:	mov    QWORD PTR [r13+0x0],rax
  405387:	jmp    405352 <table_set@@Base+0x262>
  405389:	nop    DWORD PTR [rax+0x0]

0000000000405390 <table_set_bool@@Base>:
  405390:	push   rbp
  405391:	push   r15
  405393:	push   r14
  405395:	push   r13
  405397:	push   r12
  405399:	push   rbx
  40539a:	push   rax
  40539b:	mov    r15d,ecx
  40539e:	mov    ebx,edx
  4053a0:	mov    r14d,esi
  4053a3:	mov    rbp,rdi
  4053a6:	call   406500 <table_get_cell_ptr@@Base>
  4053ab:	mov    r13,rax
  4053ae:	mov    rdi,rbp
  4053b1:	mov    esi,ebx
  4053b3:	call   4041c0 <table_get_col_ptr@@Base>
  4053b8:	mov    r12d,0xffffffff
  4053be:	cmp    DWORD PTR [rax+0x8],0x16
  4053c2:	jne    4053f8 <table_set_bool@@Base+0x68>
  4053c4:	mov    rax,QWORD PTR [r13+0x0]
  4053c8:	test   rax,rax
  4053cb:	jne    4053e0 <table_set_bool@@Base+0x50>
  4053cd:	mov    edi,0x1
  4053d2:	call   4030c0 <malloc@plt>
  4053d7:	mov    QWORD PTR [r13+0x0],rax
  4053db:	test   rax,rax
  4053de:	je     4053f8 <table_set_bool@@Base+0x68>
  4053e0:	mov    BYTE PTR [rax],r15b
  4053e3:	mov    rdi,rbp
  4053e6:	mov    esi,r14d
  4053e9:	mov    edx,ebx
  4053eb:	mov    ecx,0x1
  4053f0:	call   404100 <table_notify@@Base>
  4053f5:	xor    r12d,r12d
  4053f8:	mov    eax,r12d
  4053fb:	add    rsp,0x8
  4053ff:	pop    rbx
  405400:	pop    r12
  405402:	pop    r13
  405404:	pop    r14
  405406:	pop    r15
  405408:	pop    rbp
  405409:	ret    
  40540a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405410 <table_set_int@@Base>:
  405410:	push   rbp
  405411:	push   r15
  405413:	push   r14
  405415:	push   r13
  405417:	push   r12
  405419:	push   rbx
  40541a:	push   rax
  40541b:	mov    r15d,ecx
  40541e:	mov    ebx,edx
  405420:	mov    r14d,esi
  405423:	mov    rbp,rdi
  405426:	call   406500 <table_get_cell_ptr@@Base>
  40542b:	mov    r13,rax
  40542e:	mov    rdi,rbp
  405431:	mov    esi,ebx
  405433:	call   4041c0 <table_get_col_ptr@@Base>
  405438:	mov    r12d,0xffffffff
  40543e:	cmp    DWORD PTR [rax+0x8],0x0
  405442:	jne    405478 <table_set_int@@Base+0x68>
  405444:	mov    rax,QWORD PTR [r13+0x0]
  405448:	test   rax,rax
  40544b:	jne    405460 <table_set_int@@Base+0x50>
  40544d:	mov    edi,0x4
  405452:	call   4030c0 <malloc@plt>
  405457:	mov    QWORD PTR [r13+0x0],rax
  40545b:	test   rax,rax
  40545e:	je     405478 <table_set_int@@Base+0x68>
  405460:	mov    DWORD PTR [rax],r15d
  405463:	mov    rdi,rbp
  405466:	mov    esi,r14d
  405469:	mov    edx,ebx
  40546b:	mov    ecx,0x1
  405470:	call   404100 <table_notify@@Base>
  405475:	xor    r12d,r12d
  405478:	mov    eax,r12d
  40547b:	add    rsp,0x8
  40547f:	pop    rbx
  405480:	pop    r12
  405482:	pop    r13
  405484:	pop    r14
  405486:	pop    r15
  405488:	pop    rbp
  405489:	ret    
  40548a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405490 <table_set_uint@@Base>:
  405490:	push   rbp
  405491:	push   r15
  405493:	push   r14
  405495:	push   r13
  405497:	push   r12
  405499:	push   rbx
  40549a:	push   rax
  40549b:	mov    r15d,ecx
  40549e:	mov    ebx,edx
  4054a0:	mov    r14d,esi
  4054a3:	mov    rbp,rdi
  4054a6:	call   406500 <table_get_cell_ptr@@Base>
  4054ab:	mov    r13,rax
  4054ae:	mov    rdi,rbp
  4054b1:	mov    esi,ebx
  4054b3:	call   4041c0 <table_get_col_ptr@@Base>
  4054b8:	mov    r12d,0xffffffff
  4054be:	cmp    DWORD PTR [rax+0x8],0x1
  4054c2:	jne    4054f8 <table_set_uint@@Base+0x68>
  4054c4:	mov    rax,QWORD PTR [r13+0x0]
  4054c8:	test   rax,rax
  4054cb:	jne    4054e0 <table_set_uint@@Base+0x50>
  4054cd:	mov    edi,0x4
  4054d2:	call   4030c0 <malloc@plt>
  4054d7:	mov    QWORD PTR [r13+0x0],rax
  4054db:	test   rax,rax
  4054de:	je     4054f8 <table_set_uint@@Base+0x68>
  4054e0:	mov    DWORD PTR [rax],r15d
  4054e3:	mov    rdi,rbp
  4054e6:	mov    esi,r14d
  4054e9:	mov    edx,ebx
  4054eb:	mov    ecx,0x1
  4054f0:	call   404100 <table_notify@@Base>
  4054f5:	xor    r12d,r12d
  4054f8:	mov    eax,r12d
  4054fb:	add    rsp,0x8
  4054ff:	pop    rbx
  405500:	pop    r12
  405502:	pop    r13
  405504:	pop    r14
  405506:	pop    r15
  405508:	pop    rbp
  405509:	ret    
  40550a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405510 <table_set_int8@@Base>:
  405510:	push   rbp
  405511:	push   r15
  405513:	push   r14
  405515:	push   r13
  405517:	push   r12
  405519:	push   rbx
  40551a:	push   rax
  40551b:	mov    r15d,ecx
  40551e:	mov    ebx,edx
  405520:	mov    r14d,esi
  405523:	mov    rbp,rdi
  405526:	call   406500 <table_get_cell_ptr@@Base>
  40552b:	mov    r13,rax
  40552e:	mov    rdi,rbp
  405531:	mov    esi,ebx
  405533:	call   4041c0 <table_get_col_ptr@@Base>
  405538:	mov    r12d,0xffffffff
  40553e:	cmp    DWORD PTR [rax+0x8],0x2
  405542:	jne    405578 <table_set_int8@@Base+0x68>
  405544:	mov    rax,QWORD PTR [r13+0x0]
  405548:	test   rax,rax
  40554b:	jne    405560 <table_set_int8@@Base+0x50>
  40554d:	mov    edi,0x1
  405552:	call   4030c0 <malloc@plt>
  405557:	mov    QWORD PTR [r13+0x0],rax
  40555b:	test   rax,rax
  40555e:	je     405578 <table_set_int8@@Base+0x68>
  405560:	mov    BYTE PTR [rax],r15b
  405563:	mov    rdi,rbp
  405566:	mov    esi,r14d
  405569:	mov    edx,ebx
  40556b:	mov    ecx,0x1
  405570:	call   404100 <table_notify@@Base>
  405575:	xor    r12d,r12d
  405578:	mov    eax,r12d
  40557b:	add    rsp,0x8
  40557f:	pop    rbx
  405580:	pop    r12
  405582:	pop    r13
  405584:	pop    r14
  405586:	pop    r15
  405588:	pop    rbp
  405589:	ret    
  40558a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405590 <table_set_uint8@@Base>:
  405590:	push   rbp
  405591:	push   r15
  405593:	push   r14
  405595:	push   r13
  405597:	push   r12
  405599:	push   rbx
  40559a:	push   rax
  40559b:	mov    r15d,ecx
  40559e:	mov    ebx,edx
  4055a0:	mov    r14d,esi
  4055a3:	mov    rbp,rdi
  4055a6:	call   406500 <table_get_cell_ptr@@Base>
  4055ab:	mov    r13,rax
  4055ae:	mov    rdi,rbp
  4055b1:	mov    esi,ebx
  4055b3:	call   4041c0 <table_get_col_ptr@@Base>
  4055b8:	mov    r12d,0xffffffff
  4055be:	cmp    DWORD PTR [rax+0x8],0x3
  4055c2:	jne    4055f8 <table_set_uint8@@Base+0x68>
  4055c4:	mov    rax,QWORD PTR [r13+0x0]
  4055c8:	test   rax,rax
  4055cb:	jne    4055e0 <table_set_uint8@@Base+0x50>
  4055cd:	mov    edi,0x1
  4055d2:	call   4030c0 <malloc@plt>
  4055d7:	mov    QWORD PTR [r13+0x0],rax
  4055db:	test   rax,rax
  4055de:	je     4055f8 <table_set_uint8@@Base+0x68>
  4055e0:	mov    BYTE PTR [rax],r15b
  4055e3:	mov    rdi,rbp
  4055e6:	mov    esi,r14d
  4055e9:	mov    edx,ebx
  4055eb:	mov    ecx,0x1
  4055f0:	call   404100 <table_notify@@Base>
  4055f5:	xor    r12d,r12d
  4055f8:	mov    eax,r12d
  4055fb:	add    rsp,0x8
  4055ff:	pop    rbx
  405600:	pop    r12
  405602:	pop    r13
  405604:	pop    r14
  405606:	pop    r15
  405608:	pop    rbp
  405609:	ret    
  40560a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405610 <table_set_int16@@Base>:
  405610:	push   rbp
  405611:	push   r15
  405613:	push   r14
  405615:	push   r13
  405617:	push   r12
  405619:	push   rbx
  40561a:	push   rax
  40561b:	mov    r15d,ecx
  40561e:	mov    ebx,edx
  405620:	mov    r14d,esi
  405623:	mov    rbp,rdi
  405626:	call   406500 <table_get_cell_ptr@@Base>
  40562b:	mov    r13,rax
  40562e:	mov    rdi,rbp
  405631:	mov    esi,ebx
  405633:	call   4041c0 <table_get_col_ptr@@Base>
  405638:	mov    r12d,0xffffffff
  40563e:	cmp    DWORD PTR [rax+0x8],0x4
  405642:	jne    405679 <table_set_int16@@Base+0x69>
  405644:	mov    rax,QWORD PTR [r13+0x0]
  405648:	test   rax,rax
  40564b:	jne    405660 <table_set_int16@@Base+0x50>
  40564d:	mov    edi,0x2
  405652:	call   4030c0 <malloc@plt>
  405657:	mov    QWORD PTR [r13+0x0],rax
  40565b:	test   rax,rax
  40565e:	je     405679 <table_set_int16@@Base+0x69>
  405660:	mov    WORD PTR [rax],r15w
  405664:	mov    rdi,rbp
  405667:	mov    esi,r14d
  40566a:	mov    edx,ebx
  40566c:	mov    ecx,0x1
  405671:	call   404100 <table_notify@@Base>
  405676:	xor    r12d,r12d
  405679:	mov    eax,r12d
  40567c:	add    rsp,0x8
  405680:	pop    rbx
  405681:	pop    r12
  405683:	pop    r13
  405685:	pop    r14
  405687:	pop    r15
  405689:	pop    rbp
  40568a:	ret    
  40568b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405690 <table_set_uint16@@Base>:
  405690:	push   rbp
  405691:	push   r15
  405693:	push   r14
  405695:	push   r13
  405697:	push   r12
  405699:	push   rbx
  40569a:	push   rax
  40569b:	mov    r15d,ecx
  40569e:	mov    ebx,edx
  4056a0:	mov    r14d,esi
  4056a3:	mov    rbp,rdi
  4056a6:	call   406500 <table_get_cell_ptr@@Base>
  4056ab:	mov    r13,rax
  4056ae:	mov    rdi,rbp
  4056b1:	mov    esi,ebx
  4056b3:	call   4041c0 <table_get_col_ptr@@Base>
  4056b8:	mov    r12d,0xffffffff
  4056be:	cmp    DWORD PTR [rax+0x8],0x5
  4056c2:	jne    4056f9 <table_set_uint16@@Base+0x69>
  4056c4:	mov    rax,QWORD PTR [r13+0x0]
  4056c8:	test   rax,rax
  4056cb:	jne    4056e0 <table_set_uint16@@Base+0x50>
  4056cd:	mov    edi,0x2
  4056d2:	call   4030c0 <malloc@plt>
  4056d7:	mov    QWORD PTR [r13+0x0],rax
  4056db:	test   rax,rax
  4056de:	je     4056f9 <table_set_uint16@@Base+0x69>
  4056e0:	mov    WORD PTR [rax],r15w
  4056e4:	mov    rdi,rbp
  4056e7:	mov    esi,r14d
  4056ea:	mov    edx,ebx
  4056ec:	mov    ecx,0x1
  4056f1:	call   404100 <table_notify@@Base>
  4056f6:	xor    r12d,r12d
  4056f9:	mov    eax,r12d
  4056fc:	add    rsp,0x8
  405700:	pop    rbx
  405701:	pop    r12
  405703:	pop    r13
  405705:	pop    r14
  405707:	pop    r15
  405709:	pop    rbp
  40570a:	ret    
  40570b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405710 <table_set_int32@@Base>:
  405710:	push   rbp
  405711:	push   r15
  405713:	push   r14
  405715:	push   r13
  405717:	push   r12
  405719:	push   rbx
  40571a:	push   rax
  40571b:	mov    r15d,ecx
  40571e:	mov    ebx,edx
  405720:	mov    r14d,esi
  405723:	mov    rbp,rdi
  405726:	call   406500 <table_get_cell_ptr@@Base>
  40572b:	mov    r13,rax
  40572e:	mov    rdi,rbp
  405731:	mov    esi,ebx
  405733:	call   4041c0 <table_get_col_ptr@@Base>
  405738:	mov    r12d,0xffffffff
  40573e:	cmp    DWORD PTR [rax+0x8],0x6
  405742:	jne    405778 <table_set_int32@@Base+0x68>
  405744:	mov    rax,QWORD PTR [r13+0x0]
  405748:	test   rax,rax
  40574b:	jne    405760 <table_set_int32@@Base+0x50>
  40574d:	mov    edi,0x4
  405752:	call   4030c0 <malloc@plt>
  405757:	mov    QWORD PTR [r13+0x0],rax
  40575b:	test   rax,rax
  40575e:	je     405778 <table_set_int32@@Base+0x68>
  405760:	mov    DWORD PTR [rax],r15d
  405763:	mov    rdi,rbp
  405766:	mov    esi,r14d
  405769:	mov    edx,ebx
  40576b:	mov    ecx,0x1
  405770:	call   404100 <table_notify@@Base>
  405775:	xor    r12d,r12d
  405778:	mov    eax,r12d
  40577b:	add    rsp,0x8
  40577f:	pop    rbx
  405780:	pop    r12
  405782:	pop    r13
  405784:	pop    r14
  405786:	pop    r15
  405788:	pop    rbp
  405789:	ret    
  40578a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405790 <table_set_uint32@@Base>:
  405790:	push   rbp
  405791:	push   r15
  405793:	push   r14
  405795:	push   r13
  405797:	push   r12
  405799:	push   rbx
  40579a:	push   rax
  40579b:	mov    r15d,ecx
  40579e:	mov    ebx,edx
  4057a0:	mov    r14d,esi
  4057a3:	mov    rbp,rdi
  4057a6:	call   406500 <table_get_cell_ptr@@Base>
  4057ab:	mov    r13,rax
  4057ae:	mov    rdi,rbp
  4057b1:	mov    esi,ebx
  4057b3:	call   4041c0 <table_get_col_ptr@@Base>
  4057b8:	mov    r12d,0xffffffff
  4057be:	cmp    DWORD PTR [rax+0x8],0x7
  4057c2:	jne    4057f8 <table_set_uint32@@Base+0x68>
  4057c4:	mov    rax,QWORD PTR [r13+0x0]
  4057c8:	test   rax,rax
  4057cb:	jne    4057e0 <table_set_uint32@@Base+0x50>
  4057cd:	mov    edi,0x4
  4057d2:	call   4030c0 <malloc@plt>
  4057d7:	mov    QWORD PTR [r13+0x0],rax
  4057db:	test   rax,rax
  4057de:	je     4057f8 <table_set_uint32@@Base+0x68>
  4057e0:	mov    DWORD PTR [rax],r15d
  4057e3:	mov    rdi,rbp
  4057e6:	mov    esi,r14d
  4057e9:	mov    edx,ebx
  4057eb:	mov    ecx,0x1
  4057f0:	call   404100 <table_notify@@Base>
  4057f5:	xor    r12d,r12d
  4057f8:	mov    eax,r12d
  4057fb:	add    rsp,0x8
  4057ff:	pop    rbx
  405800:	pop    r12
  405802:	pop    r13
  405804:	pop    r14
  405806:	pop    r15
  405808:	pop    rbp
  405809:	ret    
  40580a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405810 <table_set_int64@@Base>:
  405810:	push   rbp
  405811:	push   r15
  405813:	push   r14
  405815:	push   r13
  405817:	push   r12
  405819:	push   rbx
  40581a:	push   rax
  40581b:	mov    r15,rcx
  40581e:	mov    ebx,edx
  405820:	mov    r14d,esi
  405823:	mov    rbp,rdi
  405826:	call   406500 <table_get_cell_ptr@@Base>
  40582b:	mov    r13,rax
  40582e:	mov    rdi,rbp
  405831:	mov    esi,ebx
  405833:	call   4041c0 <table_get_col_ptr@@Base>
  405838:	mov    r12d,0xffffffff
  40583e:	cmp    DWORD PTR [rax+0x8],0x8
  405842:	jne    405878 <table_set_int64@@Base+0x68>
  405844:	mov    rax,QWORD PTR [r13+0x0]
  405848:	test   rax,rax
  40584b:	jne    405860 <table_set_int64@@Base+0x50>
  40584d:	mov    edi,0x8
  405852:	call   4030c0 <malloc@plt>
  405857:	mov    QWORD PTR [r13+0x0],rax
  40585b:	test   rax,rax
  40585e:	je     405878 <table_set_int64@@Base+0x68>
  405860:	mov    QWORD PTR [rax],r15
  405863:	mov    rdi,rbp
  405866:	mov    esi,r14d
  405869:	mov    edx,ebx
  40586b:	mov    ecx,0x1
  405870:	call   404100 <table_notify@@Base>
  405875:	xor    r12d,r12d
  405878:	mov    eax,r12d
  40587b:	add    rsp,0x8
  40587f:	pop    rbx
  405880:	pop    r12
  405882:	pop    r13
  405884:	pop    r14
  405886:	pop    r15
  405888:	pop    rbp
  405889:	ret    
  40588a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405890 <table_set_uint64@@Base>:
  405890:	push   rbp
  405891:	push   r15
  405893:	push   r14
  405895:	push   r13
  405897:	push   r12
  405899:	push   rbx
  40589a:	push   rax
  40589b:	mov    r15,rcx
  40589e:	mov    ebx,edx
  4058a0:	mov    r14d,esi
  4058a3:	mov    rbp,rdi
  4058a6:	call   406500 <table_get_cell_ptr@@Base>
  4058ab:	mov    r13,rax
  4058ae:	mov    rdi,rbp
  4058b1:	mov    esi,ebx
  4058b3:	call   4041c0 <table_get_col_ptr@@Base>
  4058b8:	mov    r12d,0xffffffff
  4058be:	cmp    DWORD PTR [rax+0x8],0x9
  4058c2:	jne    4058f8 <table_set_uint64@@Base+0x68>
  4058c4:	mov    rax,QWORD PTR [r13+0x0]
  4058c8:	test   rax,rax
  4058cb:	jne    4058e0 <table_set_uint64@@Base+0x50>
  4058cd:	mov    edi,0x8
  4058d2:	call   4030c0 <malloc@plt>
  4058d7:	mov    QWORD PTR [r13+0x0],rax
  4058db:	test   rax,rax
  4058de:	je     4058f8 <table_set_uint64@@Base+0x68>
  4058e0:	mov    QWORD PTR [rax],r15
  4058e3:	mov    rdi,rbp
  4058e6:	mov    esi,r14d
  4058e9:	mov    edx,ebx
  4058eb:	mov    ecx,0x1
  4058f0:	call   404100 <table_notify@@Base>
  4058f5:	xor    r12d,r12d
  4058f8:	mov    eax,r12d
  4058fb:	add    rsp,0x8
  4058ff:	pop    rbx
  405900:	pop    r12
  405902:	pop    r13
  405904:	pop    r14
  405906:	pop    r15
  405908:	pop    rbp
  405909:	ret    
  40590a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405910 <table_set_short@@Base>:
  405910:	push   rbp
  405911:	push   r15
  405913:	push   r14
  405915:	push   r13
  405917:	push   r12
  405919:	push   rbx
  40591a:	push   rax
  40591b:	mov    r15d,ecx
  40591e:	mov    ebx,edx
  405920:	mov    r14d,esi
  405923:	mov    rbp,rdi
  405926:	call   406500 <table_get_cell_ptr@@Base>
  40592b:	mov    r13,rax
  40592e:	mov    rdi,rbp
  405931:	mov    esi,ebx
  405933:	call   4041c0 <table_get_col_ptr@@Base>
  405938:	mov    r12d,0xffffffff
  40593e:	cmp    DWORD PTR [rax+0x8],0xa
  405942:	jne    405979 <table_set_short@@Base+0x69>
  405944:	mov    rax,QWORD PTR [r13+0x0]
  405948:	test   rax,rax
  40594b:	jne    405960 <table_set_short@@Base+0x50>
  40594d:	mov    edi,0x2
  405952:	call   4030c0 <malloc@plt>
  405957:	mov    QWORD PTR [r13+0x0],rax
  40595b:	test   rax,rax
  40595e:	je     405979 <table_set_short@@Base+0x69>
  405960:	mov    WORD PTR [rax],r15w
  405964:	mov    rdi,rbp
  405967:	mov    esi,r14d
  40596a:	mov    edx,ebx
  40596c:	mov    ecx,0x1
  405971:	call   404100 <table_notify@@Base>
  405976:	xor    r12d,r12d
  405979:	mov    eax,r12d
  40597c:	add    rsp,0x8
  405980:	pop    rbx
  405981:	pop    r12
  405983:	pop    r13
  405985:	pop    r14
  405987:	pop    r15
  405989:	pop    rbp
  40598a:	ret    
  40598b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405990 <table_set_ushort@@Base>:
  405990:	push   rbp
  405991:	push   r15
  405993:	push   r14
  405995:	push   r13
  405997:	push   r12
  405999:	push   rbx
  40599a:	push   rax
  40599b:	mov    r15d,ecx
  40599e:	mov    ebx,edx
  4059a0:	mov    r14d,esi
  4059a3:	mov    rbp,rdi
  4059a6:	call   406500 <table_get_cell_ptr@@Base>
  4059ab:	mov    r13,rax
  4059ae:	mov    rdi,rbp
  4059b1:	mov    esi,ebx
  4059b3:	call   4041c0 <table_get_col_ptr@@Base>
  4059b8:	mov    r12d,0xffffffff
  4059be:	cmp    DWORD PTR [rax+0x8],0xb
  4059c2:	jne    4059f9 <table_set_ushort@@Base+0x69>
  4059c4:	mov    rax,QWORD PTR [r13+0x0]
  4059c8:	test   rax,rax
  4059cb:	jne    4059e0 <table_set_ushort@@Base+0x50>
  4059cd:	mov    edi,0x2
  4059d2:	call   4030c0 <malloc@plt>
  4059d7:	mov    QWORD PTR [r13+0x0],rax
  4059db:	test   rax,rax
  4059de:	je     4059f9 <table_set_ushort@@Base+0x69>
  4059e0:	mov    WORD PTR [rax],r15w
  4059e4:	mov    rdi,rbp
  4059e7:	mov    esi,r14d
  4059ea:	mov    edx,ebx
  4059ec:	mov    ecx,0x1
  4059f1:	call   404100 <table_notify@@Base>
  4059f6:	xor    r12d,r12d
  4059f9:	mov    eax,r12d
  4059fc:	add    rsp,0x8
  405a00:	pop    rbx
  405a01:	pop    r12
  405a03:	pop    r13
  405a05:	pop    r14
  405a07:	pop    r15
  405a09:	pop    rbp
  405a0a:	ret    
  405a0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405a10 <table_set_long@@Base>:
  405a10:	push   rbp
  405a11:	push   r15
  405a13:	push   r14
  405a15:	push   r13
  405a17:	push   r12
  405a19:	push   rbx
  405a1a:	push   rax
  405a1b:	mov    r15,rcx
  405a1e:	mov    ebx,edx
  405a20:	mov    r14d,esi
  405a23:	mov    rbp,rdi
  405a26:	call   406500 <table_get_cell_ptr@@Base>
  405a2b:	mov    r13,rax
  405a2e:	mov    rdi,rbp
  405a31:	mov    esi,ebx
  405a33:	call   4041c0 <table_get_col_ptr@@Base>
  405a38:	mov    r12d,0xffffffff
  405a3e:	cmp    DWORD PTR [rax+0x8],0xc
  405a42:	jne    405a78 <table_set_long@@Base+0x68>
  405a44:	mov    rax,QWORD PTR [r13+0x0]
  405a48:	test   rax,rax
  405a4b:	jne    405a60 <table_set_long@@Base+0x50>
  405a4d:	mov    edi,0x8
  405a52:	call   4030c0 <malloc@plt>
  405a57:	mov    QWORD PTR [r13+0x0],rax
  405a5b:	test   rax,rax
  405a5e:	je     405a78 <table_set_long@@Base+0x68>
  405a60:	mov    QWORD PTR [rax],r15
  405a63:	mov    rdi,rbp
  405a66:	mov    esi,r14d
  405a69:	mov    edx,ebx
  405a6b:	mov    ecx,0x1
  405a70:	call   404100 <table_notify@@Base>
  405a75:	xor    r12d,r12d
  405a78:	mov    eax,r12d
  405a7b:	add    rsp,0x8
  405a7f:	pop    rbx
  405a80:	pop    r12
  405a82:	pop    r13
  405a84:	pop    r14
  405a86:	pop    r15
  405a88:	pop    rbp
  405a89:	ret    
  405a8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405a90 <table_set_ulong@@Base>:
  405a90:	push   rbp
  405a91:	push   r15
  405a93:	push   r14
  405a95:	push   r13
  405a97:	push   r12
  405a99:	push   rbx
  405a9a:	push   rax
  405a9b:	mov    r15,rcx
  405a9e:	mov    ebx,edx
  405aa0:	mov    r14d,esi
  405aa3:	mov    rbp,rdi
  405aa6:	call   406500 <table_get_cell_ptr@@Base>
  405aab:	mov    r13,rax
  405aae:	mov    rdi,rbp
  405ab1:	mov    esi,ebx
  405ab3:	call   4041c0 <table_get_col_ptr@@Base>
  405ab8:	mov    r12d,0xffffffff
  405abe:	cmp    DWORD PTR [rax+0x8],0xd
  405ac2:	jne    405af8 <table_set_ulong@@Base+0x68>
  405ac4:	mov    rax,QWORD PTR [r13+0x0]
  405ac8:	test   rax,rax
  405acb:	jne    405ae0 <table_set_ulong@@Base+0x50>
  405acd:	mov    edi,0x8
  405ad2:	call   4030c0 <malloc@plt>
  405ad7:	mov    QWORD PTR [r13+0x0],rax
  405adb:	test   rax,rax
  405ade:	je     405af8 <table_set_ulong@@Base+0x68>
  405ae0:	mov    QWORD PTR [rax],r15
  405ae3:	mov    rdi,rbp
  405ae6:	mov    esi,r14d
  405ae9:	mov    edx,ebx
  405aeb:	mov    ecx,0x1
  405af0:	call   404100 <table_notify@@Base>
  405af5:	xor    r12d,r12d
  405af8:	mov    eax,r12d
  405afb:	add    rsp,0x8
  405aff:	pop    rbx
  405b00:	pop    r12
  405b02:	pop    r13
  405b04:	pop    r14
  405b06:	pop    r15
  405b08:	pop    rbp
  405b09:	ret    
  405b0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405b10 <table_set_llong@@Base>:
  405b10:	push   rbp
  405b11:	push   r15
  405b13:	push   r14
  405b15:	push   r13
  405b17:	push   r12
  405b19:	push   rbx
  405b1a:	push   rax
  405b1b:	mov    r15,rcx
  405b1e:	mov    ebx,edx
  405b20:	mov    r14d,esi
  405b23:	mov    rbp,rdi
  405b26:	call   406500 <table_get_cell_ptr@@Base>
  405b2b:	mov    r13,rax
  405b2e:	mov    rdi,rbp
  405b31:	mov    esi,ebx
  405b33:	call   4041c0 <table_get_col_ptr@@Base>
  405b38:	mov    r12d,0xffffffff
  405b3e:	cmp    DWORD PTR [rax+0x8],0xe
  405b42:	jne    405b78 <table_set_llong@@Base+0x68>
  405b44:	mov    rax,QWORD PTR [r13+0x0]
  405b48:	test   rax,rax
  405b4b:	jne    405b60 <table_set_llong@@Base+0x50>
  405b4d:	mov    edi,0x8
  405b52:	call   4030c0 <malloc@plt>
  405b57:	mov    QWORD PTR [r13+0x0],rax
  405b5b:	test   rax,rax
  405b5e:	je     405b78 <table_set_llong@@Base+0x68>
  405b60:	mov    QWORD PTR [rax],r15
  405b63:	mov    rdi,rbp
  405b66:	mov    esi,r14d
  405b69:	mov    edx,ebx
  405b6b:	mov    ecx,0x1
  405b70:	call   404100 <table_notify@@Base>
  405b75:	xor    r12d,r12d
  405b78:	mov    eax,r12d
  405b7b:	add    rsp,0x8
  405b7f:	pop    rbx
  405b80:	pop    r12
  405b82:	pop    r13
  405b84:	pop    r14
  405b86:	pop    r15
  405b88:	pop    rbp
  405b89:	ret    
  405b8a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405b90 <table_set_ullong@@Base>:
  405b90:	push   rbp
  405b91:	push   r15
  405b93:	push   r14
  405b95:	push   r13
  405b97:	push   r12
  405b99:	push   rbx
  405b9a:	push   rax
  405b9b:	mov    r15,rcx
  405b9e:	mov    ebx,edx
  405ba0:	mov    r14d,esi
  405ba3:	mov    rbp,rdi
  405ba6:	call   406500 <table_get_cell_ptr@@Base>
  405bab:	mov    r13,rax
  405bae:	mov    rdi,rbp
  405bb1:	mov    esi,ebx
  405bb3:	call   4041c0 <table_get_col_ptr@@Base>
  405bb8:	mov    r12d,0xffffffff
  405bbe:	cmp    DWORD PTR [rax+0x8],0xf
  405bc2:	jne    405bf8 <table_set_ullong@@Base+0x68>
  405bc4:	mov    rax,QWORD PTR [r13+0x0]
  405bc8:	test   rax,rax
  405bcb:	jne    405be0 <table_set_ullong@@Base+0x50>
  405bcd:	mov    edi,0x8
  405bd2:	call   4030c0 <malloc@plt>
  405bd7:	mov    QWORD PTR [r13+0x0],rax
  405bdb:	test   rax,rax
  405bde:	je     405bf8 <table_set_ullong@@Base+0x68>
  405be0:	mov    QWORD PTR [rax],r15
  405be3:	mov    rdi,rbp
  405be6:	mov    esi,r14d
  405be9:	mov    edx,ebx
  405beb:	mov    ecx,0x1
  405bf0:	call   404100 <table_notify@@Base>
  405bf5:	xor    r12d,r12d
  405bf8:	mov    eax,r12d
  405bfb:	add    rsp,0x8
  405bff:	pop    rbx
  405c00:	pop    r12
  405c02:	pop    r13
  405c04:	pop    r14
  405c06:	pop    r15
  405c08:	pop    rbp
  405c09:	ret    
  405c0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405c10 <table_set_float@@Base>:
  405c10:	push   rbp
  405c11:	push   r15
  405c13:	push   r14
  405c15:	push   r12
  405c17:	push   rbx
  405c18:	sub    rsp,0x10
  405c1c:	vmovss DWORD PTR [rsp+0xc],xmm0
  405c22:	mov    ebx,edx
  405c24:	mov    r14d,esi
  405c27:	mov    rbp,rdi
  405c2a:	call   406500 <table_get_cell_ptr@@Base>
  405c2f:	mov    r12,rax
  405c32:	mov    rdi,rbp
  405c35:	mov    esi,ebx
  405c37:	call   4041c0 <table_get_col_ptr@@Base>
  405c3c:	mov    r15d,0xffffffff
  405c42:	cmp    DWORD PTR [rax+0x8],0x10
  405c46:	jne    405c83 <table_set_float@@Base+0x73>
  405c48:	mov    rax,QWORD PTR [r12]
  405c4c:	test   rax,rax
  405c4f:	jne    405c64 <table_set_float@@Base+0x54>
  405c51:	mov    edi,0x4
  405c56:	call   4030c0 <malloc@plt>
  405c5b:	mov    QWORD PTR [r12],rax
  405c5f:	test   rax,rax
  405c62:	je     405c83 <table_set_float@@Base+0x73>
  405c64:	vmovss xmm0,DWORD PTR [rsp+0xc]
  405c6a:	vmovss DWORD PTR [rax],xmm0
  405c6e:	mov    rdi,rbp
  405c71:	mov    esi,r14d
  405c74:	mov    edx,ebx
  405c76:	mov    ecx,0x1
  405c7b:	call   404100 <table_notify@@Base>
  405c80:	xor    r15d,r15d
  405c83:	mov    eax,r15d
  405c86:	add    rsp,0x10
  405c8a:	pop    rbx
  405c8b:	pop    r12
  405c8d:	pop    r14
  405c8f:	pop    r15
  405c91:	pop    rbp
  405c92:	ret    
  405c93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c9d:	nop    DWORD PTR [rax]

0000000000405ca0 <table_set_double@@Base>:
  405ca0:	push   rbp
  405ca1:	push   r15
  405ca3:	push   r14
  405ca5:	push   r12
  405ca7:	push   rbx
  405ca8:	sub    rsp,0x10
  405cac:	vmovsd QWORD PTR [rsp+0x8],xmm0
  405cb2:	mov    ebx,edx
  405cb4:	mov    r14d,esi
  405cb7:	mov    rbp,rdi
  405cba:	call   406500 <table_get_cell_ptr@@Base>
  405cbf:	mov    r12,rax
  405cc2:	mov    rdi,rbp
  405cc5:	mov    esi,ebx
  405cc7:	call   4041c0 <table_get_col_ptr@@Base>
  405ccc:	mov    r15d,0xffffffff
  405cd2:	cmp    DWORD PTR [rax+0x8],0x11
  405cd6:	jne    405d13 <table_set_double@@Base+0x73>
  405cd8:	mov    rax,QWORD PTR [r12]
  405cdc:	test   rax,rax
  405cdf:	jne    405cf4 <table_set_double@@Base+0x54>
  405ce1:	mov    edi,0x8
  405ce6:	call   4030c0 <malloc@plt>
  405ceb:	mov    QWORD PTR [r12],rax
  405cef:	test   rax,rax
  405cf2:	je     405d13 <table_set_double@@Base+0x73>
  405cf4:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  405cfa:	vmovsd QWORD PTR [rax],xmm0
  405cfe:	mov    rdi,rbp
  405d01:	mov    esi,r14d
  405d04:	mov    edx,ebx
  405d06:	mov    ecx,0x1
  405d0b:	call   404100 <table_notify@@Base>
  405d10:	xor    r15d,r15d
  405d13:	mov    eax,r15d
  405d16:	add    rsp,0x10
  405d1a:	pop    rbx
  405d1b:	pop    r12
  405d1d:	pop    r14
  405d1f:	pop    r15
  405d21:	pop    rbp
  405d22:	ret    
  405d23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d2d:	nop    DWORD PTR [rax]

0000000000405d30 <table_set_ldouble@@Base>:
  405d30:	push   rbp
  405d31:	push   r15
  405d33:	push   r14
  405d35:	push   r12
  405d37:	push   rbx
  405d38:	sub    rsp,0x20
  405d3c:	mov    ebx,edx
  405d3e:	mov    r14d,esi
  405d41:	mov    rbp,rdi
  405d44:	fld    TBYTE PTR [rsp+0x50]
  405d48:	fstp   TBYTE PTR [rsp+0x14]
  405d4c:	call   406500 <table_get_cell_ptr@@Base>
  405d51:	mov    r12,rax
  405d54:	mov    rdi,rbp
  405d57:	mov    esi,ebx
  405d59:	call   4041c0 <table_get_col_ptr@@Base>
  405d5e:	mov    r15d,0xffffffff
  405d64:	cmp    DWORD PTR [rax+0x8],0x12
  405d68:	jne    405db1 <table_set_ldouble@@Base+0x81>
  405d6a:	mov    rax,QWORD PTR [r12]
  405d6e:	test   rax,rax
  405d71:	jne    405d86 <table_set_ldouble@@Base+0x56>
  405d73:	mov    edi,0x10
  405d78:	call   4030c0 <malloc@plt>
  405d7d:	mov    QWORD PTR [r12],rax
  405d81:	test   rax,rax
  405d84:	je     405db1 <table_set_ldouble@@Base+0x81>
  405d86:	fld    TBYTE PTR [rsp+0x14]
  405d8a:	fstp   TBYTE PTR [rax]
  405d8c:	mov    ecx,DWORD PTR [rsp+0xe]
  405d90:	mov    DWORD PTR [rax+0xa],ecx
  405d93:	movzx  ecx,WORD PTR [rsp+0x12]
  405d98:	mov    WORD PTR [rax+0xe],cx
  405d9c:	mov    rdi,rbp
  405d9f:	mov    esi,r14d
  405da2:	mov    edx,ebx
  405da4:	mov    ecx,0x1
  405da9:	call   404100 <table_notify@@Base>
  405dae:	xor    r15d,r15d
  405db1:	mov    eax,r15d
  405db4:	add    rsp,0x20
  405db8:	pop    rbx
  405db9:	pop    r12
  405dbb:	pop    r14
  405dbd:	pop    r15
  405dbf:	pop    rbp
  405dc0:	ret    
  405dc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405dd0 <table_set_string@@Base>:
  405dd0:	mov    r8d,0x15
  405dd6:	jmp    4050f0 <table_set@@Base>
  405ddb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405de0 <table_set_char@@Base>:
  405de0:	push   rbp
  405de1:	push   r15
  405de3:	push   r14
  405de5:	push   r13
  405de7:	push   r12
  405de9:	push   rbx
  405dea:	push   rax
  405deb:	mov    r15d,ecx
  405dee:	mov    ebx,edx
  405df0:	mov    r14d,esi
  405df3:	mov    rbp,rdi
  405df6:	call   406500 <table_get_cell_ptr@@Base>
  405dfb:	mov    r13,rax
  405dfe:	mov    rdi,rbp
  405e01:	mov    esi,ebx
  405e03:	call   4041c0 <table_get_col_ptr@@Base>
  405e08:	mov    r12d,0xffffffff
  405e0e:	cmp    DWORD PTR [rax+0x8],0x13
  405e12:	jne    405e48 <table_set_char@@Base+0x68>
  405e14:	mov    rax,QWORD PTR [r13+0x0]
  405e18:	test   rax,rax
  405e1b:	jne    405e30 <table_set_char@@Base+0x50>
  405e1d:	mov    edi,0x1
  405e22:	call   4030c0 <malloc@plt>
  405e27:	mov    QWORD PTR [r13+0x0],rax
  405e2b:	test   rax,rax
  405e2e:	je     405e48 <table_set_char@@Base+0x68>
  405e30:	mov    BYTE PTR [rax],r15b
  405e33:	mov    rdi,rbp
  405e36:	mov    esi,r14d
  405e39:	mov    edx,ebx
  405e3b:	mov    ecx,0x1
  405e40:	call   404100 <table_notify@@Base>
  405e45:	xor    r12d,r12d
  405e48:	mov    eax,r12d
  405e4b:	add    rsp,0x8
  405e4f:	pop    rbx
  405e50:	pop    r12
  405e52:	pop    r13
  405e54:	pop    r14
  405e56:	pop    r15
  405e58:	pop    rbp
  405e59:	ret    
  405e5a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405e60 <table_set_uchar@@Base>:
  405e60:	push   rbp
  405e61:	push   r15
  405e63:	push   r14
  405e65:	push   r13
  405e67:	push   r12
  405e69:	push   rbx
  405e6a:	push   rax
  405e6b:	mov    r15d,ecx
  405e6e:	mov    ebx,edx
  405e70:	mov    r14d,esi
  405e73:	mov    rbp,rdi
  405e76:	call   406500 <table_get_cell_ptr@@Base>
  405e7b:	mov    r13,rax
  405e7e:	mov    rdi,rbp
  405e81:	mov    esi,ebx
  405e83:	call   4041c0 <table_get_col_ptr@@Base>
  405e88:	mov    r12d,0xffffffff
  405e8e:	cmp    DWORD PTR [rax+0x8],0x14
  405e92:	jne    405ec8 <table_set_uchar@@Base+0x68>
  405e94:	mov    rax,QWORD PTR [r13+0x0]
  405e98:	test   rax,rax
  405e9b:	jne    405eb0 <table_set_uchar@@Base+0x50>
  405e9d:	mov    edi,0x1
  405ea2:	call   4030c0 <malloc@plt>
  405ea7:	mov    QWORD PTR [r13+0x0],rax
  405eab:	test   rax,rax
  405eae:	je     405ec8 <table_set_uchar@@Base+0x68>
  405eb0:	mov    BYTE PTR [rax],r15b
  405eb3:	mov    rdi,rbp
  405eb6:	mov    esi,r14d
  405eb9:	mov    edx,ebx
  405ebb:	mov    ecx,0x1
  405ec0:	call   404100 <table_notify@@Base>
  405ec5:	xor    r12d,r12d
  405ec8:	mov    eax,r12d
  405ecb:	add    rsp,0x8
  405ecf:	pop    rbx
  405ed0:	pop    r12
  405ed2:	pop    r13
  405ed4:	pop    r14
  405ed6:	pop    r15
  405ed8:	pop    rbp
  405ed9:	ret    
  405eda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405ee0 <table_set_ptr@@Base>:
  405ee0:	push   rbp
  405ee1:	push   r15
  405ee3:	push   r14
  405ee5:	push   r12
  405ee7:	push   rbx
  405ee8:	mov    r15,rcx
  405eeb:	mov    ebx,edx
  405eed:	mov    r14d,esi
  405ef0:	mov    rbp,rdi
  405ef3:	call   406500 <table_get_cell_ptr@@Base>
  405ef8:	mov    r12,rax
  405efb:	mov    rdi,rbp
  405efe:	mov    esi,ebx
  405f00:	call   4041c0 <table_get_col_ptr@@Base>
  405f05:	mov    rcx,rax
  405f08:	mov    eax,0xffffffff
  405f0d:	cmp    DWORD PTR [rcx+0x8],0x17
  405f11:	jne    405f2b <table_set_ptr@@Base+0x4b>
  405f13:	mov    QWORD PTR [r12],r15
  405f17:	mov    rdi,rbp
  405f1a:	mov    esi,r14d
  405f1d:	mov    edx,ebx
  405f1f:	mov    ecx,0x1
  405f24:	call   404100 <table_notify@@Base>
  405f29:	xor    eax,eax
  405f2b:	pop    rbx
  405f2c:	pop    r12
  405f2e:	pop    r14
  405f30:	pop    r15
  405f32:	pop    rbp
  405f33:	ret    
  405f34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f3e:	xchg   ax,ax

0000000000405f40 <table_serialize@@Base>:
  405f40:	push   rbp
  405f41:	push   r15
  405f43:	push   r14
  405f45:	push   r13
  405f47:	push   r12
  405f49:	push   rbx
  405f4a:	push   rax
  405f4b:	mov    rbx,rsi
  405f4e:	mov    r14,rdi
  405f51:	call   404e40 <table_get_row_length@@Base>
  405f56:	mov    DWORD PTR [rsp],eax
  405f59:	mov    rdi,r14
  405f5c:	call   4041f0 <table_get_column_length@@Base>
  405f61:	mov    r15d,eax
  405f64:	mov    DWORD PTR [rbx],eax
  405f66:	mov    rax,QWORD PTR [r14+0x10]
  405f6a:	mov    QWORD PTR [rbx+0x4],rax
  405f6e:	add    rbx,0xc
  405f72:	test   r15d,r15d
  405f75:	mov    DWORD PTR [rsp+0x4],r15d
  405f7a:	jle    405fca <table_serialize@@Base+0x8a>
  405f7c:	xor    ebp,ebp
  405f7e:	xchg   ax,ax
  405f80:	mov    rdi,r14
  405f83:	mov    esi,ebp
  405f85:	call   404260 <table_get_column_name@@Base>
  405f8a:	mov    r13,rax
  405f8d:	mov    rdi,rax
  405f90:	call   403060 <strlen@plt>
  405f95:	mov    r15,rax
  405f98:	lea    r12,[rax+0x1]
  405f9c:	mov    rdi,r14
  405f9f:	mov    esi,ebp
  405fa1:	call   404270 <table_get_column_data_type@@Base>
  405fa6:	mov    DWORD PTR [rbx],eax
  405fa8:	lea    rdi,[rbx+0x4]
  405fac:	mov    rsi,r13
  405faf:	mov    rdx,r12
  405fb2:	call   403040 <strncpy@plt>
  405fb7:	add    rbx,r15
  405fba:	add    rbx,0x5
  405fbe:	mov    r15d,DWORD PTR [rsp+0x4]
  405fc3:	inc    ebp
  405fc5:	cmp    r15d,ebp
  405fc8:	jne    405f80 <table_serialize@@Base+0x40>
  405fca:	mov    ecx,DWORD PTR [rsp]
  405fcd:	mov    DWORD PTR [rbx],ecx
  405fcf:	mov    rax,QWORD PTR [r14+0x30]
  405fd3:	mov    QWORD PTR [rbx+0x4],rax
  405fd7:	add    rbx,0xc
  405fdb:	test   ecx,ecx
  405fdd:	jle    4060fc <table_serialize@@Base+0x1bc>
  405fe3:	xor    r13d,r13d
  405fe6:	lea    r12,[rip+0x11ef]        # 4071dc <_IO_stdin_used@@Base+0x1dc>
  405fed:	test   r15d,r15d
  405ff0:	jg     406012 <table_serialize@@Base+0xd2>
  405ff2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ffc:	nop    DWORD PTR [rax+0x0]
  406000:	inc    r13d
  406003:	cmp    r13d,DWORD PTR [rsp]
  406007:	je     4060fc <table_serialize@@Base+0x1bc>
  40600d:	test   r15d,r15d
  406010:	jle    406000 <table_serialize@@Base+0xc0>
  406012:	xor    ebp,ebp
  406014:	jmp    40603c <table_serialize@@Base+0xfc>
  406016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406020:	mov    rdi,r14
  406023:	mov    esi,r13d
  406026:	mov    edx,ebp
  406028:	call   404c00 <table_get@@Base>
  40602d:	mov    eax,DWORD PTR [rax]
  40602f:	mov    DWORD PTR [rbx],eax
  406031:	add    rbx,0x4
  406035:	inc    ebp
  406037:	cmp    r15d,ebp
  40603a:	je     406000 <table_serialize@@Base+0xc0>
  40603c:	mov    rdi,r14
  40603f:	mov    esi,ebp
  406041:	call   404270 <table_get_column_data_type@@Base>
  406046:	cmp    eax,0x17
  406049:	ja     406035 <table_serialize@@Base+0xf5>
  40604b:	mov    eax,eax
  40604d:	movsxd rax,DWORD PTR [r12+rax*4]
  406051:	add    rax,r12
  406054:	jmp    rax
  406056:	mov    rdi,r14
  406059:	mov    esi,r13d
  40605c:	mov    edx,ebp
  40605e:	call   404c00 <table_get@@Base>
  406063:	mov    rax,QWORD PTR [rax]
  406066:	mov    QWORD PTR [rbx],rax
  406069:	add    rbx,0x8
  40606d:	jmp    406035 <table_serialize@@Base+0xf5>
  40606f:	nop
  406070:	mov    rdi,r14
  406073:	mov    esi,r13d
  406076:	mov    edx,ebp
  406078:	call   404c00 <table_get@@Base>
  40607d:	movzx  eax,BYTE PTR [rax]
  406080:	mov    BYTE PTR [rbx],al
  406082:	inc    rbx
  406085:	jmp    406035 <table_serialize@@Base+0xf5>
  406087:	mov    rdi,r14
  40608a:	mov    esi,r13d
  40608d:	mov    edx,ebp
  40608f:	call   404c00 <table_get@@Base>
  406094:	movzx  eax,WORD PTR [rax]
  406097:	mov    WORD PTR [rbx],ax
  40609a:	add    rbx,0x2
  40609e:	jmp    406035 <table_serialize@@Base+0xf5>
  4060a0:	mov    rdi,r14
  4060a3:	mov    esi,r13d
  4060a6:	mov    edx,ebp
  4060a8:	call   404c00 <table_get@@Base>
  4060ad:	fld    TBYTE PTR [rax]
  4060af:	fstp   TBYTE PTR [rbx]
  4060b1:	add    rbx,0x10
  4060b5:	jmp    406035 <table_serialize@@Base+0xf5>
  4060ba:	mov    rdi,r14
  4060bd:	mov    esi,r13d
  4060c0:	mov    edx,ebp
  4060c2:	call   404d70 <table_get_string@@Base>
  4060c7:	mov    r15,rax
  4060ca:	mov    rdi,rax
  4060cd:	call   403060 <strlen@plt>
  4060d2:	mov    r12,rax
  4060d5:	lea    rdx,[rax+0x1]
  4060d9:	mov    rdi,rbx
  4060dc:	mov    rsi,r15
  4060df:	mov    r15d,DWORD PTR [rsp+0x4]
  4060e4:	call   403040 <strncpy@plt>
  4060e9:	add    rbx,r12
  4060ec:	add    rbx,0x1
  4060f0:	lea    r12,[rip+0x10e5]        # 4071dc <_IO_stdin_used@@Base+0x1dc>
  4060f7:	jmp    406035 <table_serialize@@Base+0xf5>
  4060fc:	mov    eax,DWORD PTR [r14+0x40]
  406100:	mov    DWORD PTR [rbx],eax
  406102:	mov    rax,QWORD PTR [r14+0x60]
  406106:	mov    QWORD PTR [rbx+0x4],rax
  40610a:	cmp    DWORD PTR [r14+0x40],0x0
  40610f:	jle    406151 <table_serialize@@Base+0x211>
  406111:	add    rbx,0xc
  406115:	xor    eax,eax
  406117:	nop    WORD PTR [rax+rax*1+0x0]
  406120:	mov    rcx,QWORD PTR [r14+0x48]
  406124:	mov    rcx,QWORD PTR [rcx+rax*8]
  406128:	mov    QWORD PTR [rbx],rcx
  40612b:	mov    rcx,QWORD PTR [r14+0x50]
  40612f:	mov    rcx,QWORD PTR [rcx+rax*8]
  406133:	mov    QWORD PTR [rbx+0x8],rcx
  406137:	mov    rcx,QWORD PTR [r14+0x58]
  40613b:	mov    ecx,DWORD PTR [rcx+rax*4]
  40613e:	mov    DWORD PTR [rbx+0x10],ecx
  406141:	inc    rax
  406144:	movsxd rcx,DWORD PTR [r14+0x40]
  406148:	add    rbx,0x14
  40614c:	cmp    rax,rcx
  40614f:	jl     406120 <table_serialize@@Base+0x1e0>
  406151:	add    rsp,0x8
  406155:	pop    rbx
  406156:	pop    r12
  406158:	pop    r13
  40615a:	pop    r14
  40615c:	pop    r15
  40615e:	pop    rbp
  40615f:	ret    

0000000000406160 <table_deserialize@@Base>:
  406160:	push   rbp
  406161:	push   r15
  406163:	push   r14
  406165:	push   r13
  406167:	push   r12
  406169:	push   rbx
  40616a:	sub    rsp,0x18
  40616e:	mov    rbx,rdi
  406171:	call   4037e0 <table_new@@Base>
  406176:	mov    r14,rax
  406179:	mov    r13d,DWORD PTR [rbx]
  40617c:	mov    rax,QWORD PTR [rbx+0x4]
  406180:	mov    QWORD PTR [r14+0x10],rax
  406184:	mov    edx,DWORD PTR [rbx+0xc]
  406187:	lea    rbp,[rbx+0xc]
  40618b:	lea    r15,[rbx+0x10]
  40618f:	test   r13d,r13d
  406192:	jle    4061d1 <table_deserialize@@Base+0x71>
  406194:	mov    r12d,r13d
  406197:	nop    WORD PTR [rax+rax*1+0x0]
  4061a0:	mov    rdi,r14
  4061a3:	mov    rsi,r15
  4061a6:	call   404280 <table_add_column@@Base>
  4061ab:	mov    rdi,r15
  4061ae:	call   403060 <strlen@plt>
  4061b3:	lea    rbx,[rax+rbp*1]
  4061b7:	add    rbx,0x5
  4061bb:	mov    edx,DWORD PTR [rbp+rax*1+0x5]
  4061bf:	lea    r15,[rax+rbp*1]
  4061c3:	add    r15,0x9
  4061c7:	mov    rbp,rbx
  4061ca:	dec    r12d
  4061cd:	jne    4061a0 <table_deserialize@@Base+0x40>
  4061cf:	jmp    4061d4 <table_deserialize@@Base+0x74>
  4061d1:	mov    rbx,rbp
  4061d4:	mov    rax,QWORD PTR [r15]
  4061d7:	mov    QWORD PTR [r14+0x30],rax
  4061db:	add    rbx,0xc
  4061df:	test   edx,edx
  4061e1:	jle    40649a <table_deserialize@@Base+0x33a>
  4061e7:	xor    r12d,r12d
  4061ea:	lea    r15,[rip+0x104b]        # 40723c <_IO_stdin_used@@Base+0x23c>
  4061f1:	mov    DWORD PTR [rsp+0x14],edx
  4061f5:	jmp    40620e <table_deserialize@@Base+0xae>
  4061f7:	nop    WORD PTR [rax+rax*1+0x0]
  406200:	inc    r12d
  406203:	cmp    r12d,DWORD PTR [rsp+0x14]
  406208:	je     40649a <table_deserialize@@Base+0x33a>
  40620e:	mov    rdi,r14
  406211:	call   404e50 <table_add_row@@Base>
  406216:	test   r13d,r13d
  406219:	jle    406200 <table_deserialize@@Base+0xa0>
  40621b:	xor    ebp,ebp
  40621d:	jmp    406247 <table_deserialize@@Base+0xe7>
  40621f:	mov    rcx,QWORD PTR [rbx]
  406222:	add    rbx,0x8
  406226:	mov    rdi,r14
  406229:	mov    esi,r12d
  40622c:	mov    edx,ebp
  40622e:	call   405ee0 <table_set_ptr@@Base>
  406233:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40623d:	nop    DWORD PTR [rax]
  406240:	inc    ebp
  406242:	cmp    r13d,ebp
  406245:	je     406200 <table_deserialize@@Base+0xa0>
  406247:	mov    rdi,r14
  40624a:	mov    esi,ebp
  40624c:	call   404270 <table_get_column_data_type@@Base>
  406251:	cmp    eax,0x17
  406254:	ja     406240 <table_deserialize@@Base+0xe0>
  406256:	mov    eax,eax
  406258:	movsxd rax,DWORD PTR [r15+rax*4]
  40625c:	add    rax,r15
  40625f:	jmp    rax
  406261:	mov    ecx,DWORD PTR [rbx]
  406263:	add    rbx,0x4
  406267:	mov    rdi,r14
  40626a:	mov    esi,r12d
  40626d:	mov    edx,ebp
  40626f:	call   405410 <table_set_int@@Base>
  406274:	jmp    406240 <table_deserialize@@Base+0xe0>
  406276:	mov    ecx,DWORD PTR [rbx]
  406278:	add    rbx,0x4
  40627c:	mov    rdi,r14
  40627f:	mov    esi,r12d
  406282:	mov    edx,ebp
  406284:	call   405490 <table_set_uint@@Base>
  406289:	jmp    406240 <table_deserialize@@Base+0xe0>
  40628b:	movsx  ecx,BYTE PTR [rbx]
  40628e:	inc    rbx
  406291:	mov    rdi,r14
  406294:	mov    esi,r12d
  406297:	mov    edx,ebp
  406299:	call   405510 <table_set_int8@@Base>
  40629e:	jmp    406240 <table_deserialize@@Base+0xe0>
  4062a0:	movzx  ecx,BYTE PTR [rbx]
  4062a3:	inc    rbx
  4062a6:	mov    rdi,r14
  4062a9:	mov    esi,r12d
  4062ac:	mov    edx,ebp
  4062ae:	call   405590 <table_set_uint8@@Base>
  4062b3:	jmp    406240 <table_deserialize@@Base+0xe0>
  4062b5:	movsx  ecx,WORD PTR [rbx]
  4062b8:	add    rbx,0x2
  4062bc:	mov    rdi,r14
  4062bf:	mov    esi,r12d
  4062c2:	mov    edx,ebp
  4062c4:	call   405610 <table_set_int16@@Base>
  4062c9:	jmp    406240 <table_deserialize@@Base+0xe0>
  4062ce:	movzx  ecx,WORD PTR [rbx]
  4062d1:	add    rbx,0x2
  4062d5:	mov    rdi,r14
  4062d8:	mov    esi,r12d
  4062db:	mov    edx,ebp
  4062dd:	call   405690 <table_set_uint16@@Base>
  4062e2:	jmp    406240 <table_deserialize@@Base+0xe0>
  4062e7:	mov    ecx,DWORD PTR [rbx]
  4062e9:	add    rbx,0x4
  4062ed:	mov    rdi,r14
  4062f0:	mov    esi,r12d
  4062f3:	mov    edx,ebp
  4062f5:	call   405710 <table_set_int32@@Base>
  4062fa:	jmp    406240 <table_deserialize@@Base+0xe0>
  4062ff:	mov    ecx,DWORD PTR [rbx]
  406301:	add    rbx,0x4
  406305:	mov    rdi,r14
  406308:	mov    esi,r12d
  40630b:	mov    edx,ebp
  40630d:	call   405790 <table_set_uint32@@Base>
  406312:	jmp    406240 <table_deserialize@@Base+0xe0>
  406317:	mov    rcx,QWORD PTR [rbx]
  40631a:	add    rbx,0x8
  40631e:	mov    rdi,r14
  406321:	mov    esi,r12d
  406324:	mov    edx,ebp
  406326:	call   405810 <table_set_int64@@Base>
  40632b:	jmp    406240 <table_deserialize@@Base+0xe0>
  406330:	mov    rcx,QWORD PTR [rbx]
  406333:	add    rbx,0x8
  406337:	mov    rdi,r14
  40633a:	mov    esi,r12d
  40633d:	mov    edx,ebp
  40633f:	call   405890 <table_set_uint64@@Base>
  406344:	jmp    406240 <table_deserialize@@Base+0xe0>
  406349:	movsx  ecx,WORD PTR [rbx]
  40634c:	add    rbx,0x2
  406350:	mov    rdi,r14
  406353:	mov    esi,r12d
  406356:	mov    edx,ebp
  406358:	call   405910 <table_set_short@@Base>
  40635d:	jmp    406240 <table_deserialize@@Base+0xe0>
  406362:	movzx  ecx,WORD PTR [rbx]
  406365:	add    rbx,0x2
  406369:	mov    rdi,r14
  40636c:	mov    esi,r12d
  40636f:	mov    edx,ebp
  406371:	call   405990 <table_set_ushort@@Base>
  406376:	jmp    406240 <table_deserialize@@Base+0xe0>
  40637b:	mov    rcx,QWORD PTR [rbx]
  40637e:	add    rbx,0x8
  406382:	mov    rdi,r14
  406385:	mov    esi,r12d
  406388:	mov    edx,ebp
  40638a:	call   405a10 <table_set_long@@Base>
  40638f:	jmp    406240 <table_deserialize@@Base+0xe0>
  406394:	mov    rcx,QWORD PTR [rbx]
  406397:	add    rbx,0x8
  40639b:	mov    rdi,r14
  40639e:	mov    esi,r12d
  4063a1:	mov    edx,ebp
  4063a3:	call   405a90 <table_set_ulong@@Base>
  4063a8:	jmp    406240 <table_deserialize@@Base+0xe0>
  4063ad:	mov    rcx,QWORD PTR [rbx]
  4063b0:	add    rbx,0x8
  4063b4:	mov    rdi,r14
  4063b7:	mov    esi,r12d
  4063ba:	mov    edx,ebp
  4063bc:	call   405b10 <table_set_llong@@Base>
  4063c1:	jmp    406240 <table_deserialize@@Base+0xe0>
  4063c6:	mov    rcx,QWORD PTR [rbx]
  4063c9:	add    rbx,0x8
  4063cd:	mov    rdi,r14
  4063d0:	mov    esi,r12d
  4063d3:	mov    edx,ebp
  4063d5:	call   405b90 <table_set_ullong@@Base>
  4063da:	jmp    406240 <table_deserialize@@Base+0xe0>
  4063df:	vmovss xmm0,DWORD PTR [rbx]
  4063e3:	add    rbx,0x4
  4063e7:	mov    rdi,r14
  4063ea:	mov    esi,r12d
  4063ed:	mov    edx,ebp
  4063ef:	call   405c10 <table_set_float@@Base>
  4063f4:	jmp    406240 <table_deserialize@@Base+0xe0>
  4063f9:	vmovsd xmm0,QWORD PTR [rbx]
  4063fd:	add    rbx,0x8
  406401:	mov    rdi,r14
  406404:	mov    esi,r12d
  406407:	mov    edx,ebp
  406409:	call   405ca0 <table_set_double@@Base>
  40640e:	jmp    406240 <table_deserialize@@Base+0xe0>
  406413:	fld    TBYTE PTR [rbx]
  406415:	add    rbx,0x10
  406419:	fstp   TBYTE PTR [rsp]
  40641c:	mov    rdi,r14
  40641f:	mov    esi,r12d
  406422:	mov    edx,ebp
  406424:	call   405d30 <table_set_ldouble@@Base>
  406429:	jmp    406240 <table_deserialize@@Base+0xe0>
  40642e:	movsx  ecx,BYTE PTR [rbx]
  406431:	inc    rbx
  406434:	mov    rdi,r14
  406437:	mov    esi,r12d
  40643a:	mov    edx,ebp
  40643c:	call   405de0 <table_set_char@@Base>
  406441:	jmp    406240 <table_deserialize@@Base+0xe0>
  406446:	movzx  ecx,BYTE PTR [rbx]
  406449:	inc    rbx
  40644c:	mov    rdi,r14
  40644f:	mov    esi,r12d
  406452:	mov    edx,ebp
  406454:	call   405e60 <table_set_uchar@@Base>
  406459:	jmp    406240 <table_deserialize@@Base+0xe0>
  40645e:	mov    rdi,r14
  406461:	mov    esi,r12d
  406464:	mov    edx,ebp
  406466:	mov    rcx,rbx
  406469:	call   405dd0 <table_set_string@@Base>
  40646e:	mov    rdi,rbx
  406471:	call   403060 <strlen@plt>
  406476:	add    rbx,rax
  406479:	add    rbx,0x1
  40647d:	jmp    406240 <table_deserialize@@Base+0xe0>
  406482:	movzx  ecx,BYTE PTR [rbx]
  406485:	inc    rbx
  406488:	mov    rdi,r14
  40648b:	mov    esi,r12d
  40648e:	mov    edx,ebp
  406490:	call   405390 <table_set_bool@@Base>
  406495:	jmp    406240 <table_deserialize@@Base+0xe0>
  40649a:	mov    ebp,DWORD PTR [rbx]
  40649c:	mov    rax,QWORD PTR [rbx+0x4]
  4064a0:	mov    QWORD PTR [r14+0x60],rax
  4064a4:	test   ebp,ebp
  4064a6:	jle    4064ca <table_deserialize@@Base+0x36a>
  4064a8:	add    rbx,0xc
  4064ac:	nop    DWORD PTR [rax+0x0]
  4064b0:	mov    rsi,QWORD PTR [rbx]
  4064b3:	mov    rdx,QWORD PTR [rbx+0x8]
  4064b7:	mov    ecx,DWORD PTR [rbx+0x10]
  4064ba:	mov    rdi,r14
  4064bd:	call   403e70 <table_register_callback@@Base>
  4064c2:	add    rbx,0x14
  4064c6:	dec    ebp
  4064c8:	jne    4064b0 <table_deserialize@@Base+0x350>
  4064ca:	mov    rax,r14
  4064cd:	add    rsp,0x18
  4064d1:	pop    rbx
  4064d2:	pop    r12
  4064d4:	pop    r13
  4064d6:	pop    r14
  4064d8:	pop    r15
  4064da:	pop    rbp
  4064db:	ret    
  4064dc:	nop    DWORD PTR [rax+0x0]

00000000004064e0 <table_cell_init@@Base>:
  4064e0:	push   rbx
  4064e1:	mov    ebx,edx
  4064e3:	call   404dc0 <table_get_row_ptr@@Base>
  4064e8:	mov    rax,QWORD PTR [rax]
  4064eb:	movsxd rcx,ebx
  4064ee:	mov    QWORD PTR [rax+rcx*8],0x0
  4064f6:	pop    rbx
  4064f7:	ret    
  4064f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406500 <table_get_cell_ptr@@Base>:
  406500:	push   rbx
  406501:	mov    ebx,edx
  406503:	call   404dc0 <table_get_row_ptr@@Base>
  406508:	movsxd rcx,ebx
  40650b:	shl    rcx,0x3
  40650f:	add    rcx,QWORD PTR [rax]
  406512:	mov    rax,rcx
  406515:	pop    rbx
  406516:	ret    
  406517:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406520 <table_cell_destroy@@Base>:
  406520:	push   rbp
  406521:	push   r14
  406523:	push   rbx
  406524:	mov    ebx,edx
  406526:	mov    r14d,esi
  406529:	mov    rbp,rdi
  40652c:	mov    esi,edx
  40652e:	call   404270 <table_get_column_data_type@@Base>
  406533:	cmp    eax,0x17
  406536:	je     40655b <table_cell_destroy@@Base+0x3b>
  406538:	mov    rdi,rbp
  40653b:	mov    esi,r14d
  40653e:	call   404dc0 <table_get_row_ptr@@Base>
  406543:	mov    rax,QWORD PTR [rax]
  406546:	movsxd rcx,ebx
  406549:	mov    rdi,QWORD PTR [rax+rcx*8]
  40654d:	test   rdi,rdi
  406550:	je     40655b <table_cell_destroy@@Base+0x3b>
  406552:	pop    rbx
  406553:	pop    r14
  406555:	pop    rbp
  406556:	jmp    403030 <free@plt>
  40655b:	pop    rbx
  40655c:	pop    r14
  40655e:	pop    rbp
  40655f:	ret    

0000000000406560 <table_cell_to_buffer@@Base>:
  406560:	push   rbp
  406561:	push   r15
  406563:	push   r14
  406565:	push   r12
  406567:	push   rbx
  406568:	sub    rsp,0x10
  40656c:	mov    r14,r8
  40656f:	mov    r15,rcx
  406572:	mov    ebp,edx
  406574:	mov    r12d,esi
  406577:	mov    rbx,rdi
  40657a:	mov    esi,edx
  40657c:	call   404270 <table_get_column_data_type@@Base>
  406581:	cmp    eax,0x17
  406584:	ja     406822 <table_cell_to_buffer@@Base+0x2c2>
  40658a:	mov    eax,eax
  40658c:	lea    rcx,[rip+0xd09]        # 40729c <_IO_stdin_used@@Base+0x29c>
  406593:	movsxd rax,DWORD PTR [rcx+rax*4]
  406597:	add    rax,rcx
  40659a:	jmp    rax
  40659c:	mov    rdi,rbx
  40659f:	mov    esi,r12d
  4065a2:	mov    edx,ebp
  4065a4:	call   404c20 <table_get_int@@Base>
  4065a9:	jmp    40662f <table_cell_to_buffer@@Base+0xcf>
  4065ae:	mov    rdi,rbx
  4065b1:	mov    esi,r12d
  4065b4:	mov    edx,ebp
  4065b6:	call   404c30 <table_get_uint@@Base>
  4065bb:	jmp    406645 <table_cell_to_buffer@@Base+0xe5>
  4065c0:	mov    rdi,rbx
  4065c3:	mov    esi,r12d
  4065c6:	mov    edx,ebp
  4065c8:	call   404c40 <table_get_int8@@Base>
  4065cd:	movsx  ecx,al
  4065d0:	jmp    4067e8 <table_cell_to_buffer@@Base+0x288>
  4065d5:	mov    rdi,rbx
  4065d8:	mov    esi,r12d
  4065db:	mov    edx,ebp
  4065dd:	call   404c50 <table_get_uint8@@Base>
  4065e2:	movzx  ecx,al
  4065e5:	lea    rdx,[rip+0xd70]        # 40735c <_IO_stdin_used@@Base+0x35c>
  4065ec:	jmp    4067ef <table_cell_to_buffer@@Base+0x28f>
  4065f1:	mov    rdi,rbx
  4065f4:	mov    esi,r12d
  4065f7:	mov    edx,ebp
  4065f9:	call   404c60 <table_get_int16@@Base>
  4065fe:	movsx  ecx,ax
  406601:	jmp    4067e8 <table_cell_to_buffer@@Base+0x288>
  406606:	mov    rdi,rbx
  406609:	mov    esi,r12d
  40660c:	mov    edx,ebp
  40660e:	call   404c70 <table_get_uint16@@Base>
  406613:	movzx  ecx,ax
  406616:	lea    rdx,[rip+0xd3f]        # 40735c <_IO_stdin_used@@Base+0x35c>
  40661d:	jmp    4067ef <table_cell_to_buffer@@Base+0x28f>
  406622:	mov    rdi,rbx
  406625:	mov    esi,r12d
  406628:	mov    edx,ebp
  40662a:	call   404c80 <table_get_int32@@Base>
  40662f:	lea    rdx,[rip+0xaad]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  406636:	jmp    40664c <table_cell_to_buffer@@Base+0xec>
  406638:	mov    rdi,rbx
  40663b:	mov    esi,r12d
  40663e:	mov    edx,ebp
  406640:	call   404c90 <table_get_uint32@@Base>
  406645:	lea    rdx,[rip+0xd10]        # 40735c <_IO_stdin_used@@Base+0x35c>
  40664c:	mov    rdi,r15
  40664f:	mov    rsi,r14
  406652:	mov    ecx,eax
  406654:	jmp    4067f5 <table_cell_to_buffer@@Base+0x295>
  406659:	mov    rdi,rbx
  40665c:	mov    esi,r12d
  40665f:	mov    edx,ebp
  406661:	call   404ca0 <table_get_int64@@Base>
  406666:	lea    rdx,[rip+0xcf2]        # 40735f <_IO_stdin_used@@Base+0x35f>
  40666d:	jmp    406812 <table_cell_to_buffer@@Base+0x2b2>
  406672:	mov    rdi,rbx
  406675:	mov    esi,r12d
  406678:	mov    edx,ebp
  40667a:	call   404cb0 <table_get_uint64@@Base>
  40667f:	lea    rdx,[rip+0xcdd]        # 407363 <_IO_stdin_used@@Base+0x363>
  406686:	jmp    406812 <table_cell_to_buffer@@Base+0x2b2>
  40668b:	mov    rdi,rbx
  40668e:	mov    esi,r12d
  406691:	mov    edx,ebp
  406693:	call   404cc0 <table_get_short@@Base>
  406698:	movsx  ecx,ax
  40669b:	lea    rdx,[rip+0xcc5]        # 407367 <_IO_stdin_used@@Base+0x367>
  4066a2:	jmp    4067ef <table_cell_to_buffer@@Base+0x28f>
  4066a7:	mov    rdi,rbx
  4066aa:	mov    esi,r12d
  4066ad:	mov    edx,ebp
  4066af:	call   404cd0 <table_get_ushort@@Base>
  4066b4:	movzx  ecx,ax
  4066b7:	lea    rdx,[rip+0xcad]        # 40736b <_IO_stdin_used@@Base+0x36b>
  4066be:	jmp    4067ef <table_cell_to_buffer@@Base+0x28f>
  4066c3:	mov    rdi,rbx
  4066c6:	mov    esi,r12d
  4066c9:	mov    edx,ebp
  4066cb:	call   404ce0 <table_get_long@@Base>
  4066d0:	lea    rdx,[rip+0xc88]        # 40735f <_IO_stdin_used@@Base+0x35f>
  4066d7:	jmp    406812 <table_cell_to_buffer@@Base+0x2b2>
  4066dc:	mov    rdi,rbx
  4066df:	mov    esi,r12d
  4066e2:	mov    edx,ebp
  4066e4:	call   404cf0 <table_get_ulong@@Base>
  4066e9:	lea    rdx,[rip+0xc73]        # 407363 <_IO_stdin_used@@Base+0x363>
  4066f0:	jmp    406812 <table_cell_to_buffer@@Base+0x2b2>
  4066f5:	mov    rdi,rbx
  4066f8:	mov    esi,r12d
  4066fb:	mov    edx,ebp
  4066fd:	call   404d00 <table_get_llong@@Base>
  406702:	lea    rdx,[rip+0xc66]        # 40736f <_IO_stdin_used@@Base+0x36f>
  406709:	jmp    406812 <table_cell_to_buffer@@Base+0x2b2>
  40670e:	mov    rdi,rbx
  406711:	mov    esi,r12d
  406714:	mov    edx,ebp
  406716:	call   404d10 <table_get_ullong@@Base>
  40671b:	lea    rdx,[rip+0xc52]        # 407374 <_IO_stdin_used@@Base+0x374>
  406722:	jmp    406812 <table_cell_to_buffer@@Base+0x2b2>
  406727:	mov    rdi,rbx
  40672a:	mov    esi,r12d
  40672d:	mov    edx,ebp
  40672f:	call   404d20 <table_get_float@@Base>
  406734:	vcvtss2sd xmm0,xmm0,xmm0
  406738:	lea    rdx,[rip+0xc3d]        # 40737c <_IO_stdin_used@@Base+0x37c>
  40673f:	jmp    406755 <table_cell_to_buffer@@Base+0x1f5>
  406741:	mov    rdi,rbx
  406744:	mov    esi,r12d
  406747:	mov    edx,ebp
  406749:	call   404d30 <table_get_double@@Base>
  40674e:	lea    rdx,[rip+0xc2a]        # 40737f <_IO_stdin_used@@Base+0x37f>
  406755:	mov    rdi,r15
  406758:	mov    rsi,r14
  40675b:	mov    al,0x1
  40675d:	call   403080 <snprintf@plt>
  406762:	jmp    406822 <table_cell_to_buffer@@Base+0x2c2>
  406767:	mov    rdi,rbx
  40676a:	mov    esi,r12d
  40676d:	mov    edx,ebp
  40676f:	call   404d40 <table_get_ldouble@@Base>
  406774:	fstp   TBYTE PTR [rsp]
  406777:	lea    rdx,[rip+0xc05]        # 407383 <_IO_stdin_used@@Base+0x383>
  40677e:	mov    rdi,r15
  406781:	mov    rsi,r14
  406784:	xor    eax,eax
  406786:	call   403080 <snprintf@plt>
  40678b:	jmp    406822 <table_cell_to_buffer@@Base+0x2c2>
  406790:	mov    rdi,rbx
  406793:	mov    esi,r12d
  406796:	mov    edx,ebp
  406798:	call   404d50 <table_get_char@@Base>
  40679d:	movsx  ecx,al
  4067a0:	lea    rdx,[rip+0xbe0]        # 407387 <_IO_stdin_used@@Base+0x387>
  4067a7:	jmp    4067ef <table_cell_to_buffer@@Base+0x28f>
  4067a9:	mov    rdi,rbx
  4067ac:	mov    esi,r12d
  4067af:	mov    edx,ebp
  4067b1:	call   404d60 <table_get_uchar@@Base>
  4067b6:	movzx  ecx,al
  4067b9:	lea    rdx,[rip+0xbc7]        # 407387 <_IO_stdin_used@@Base+0x387>
  4067c0:	jmp    4067ef <table_cell_to_buffer@@Base+0x28f>
  4067c2:	mov    rdi,rbx
  4067c5:	mov    esi,r12d
  4067c8:	mov    edx,ebp
  4067ca:	call   404d70 <table_get_string@@Base>
  4067cf:	lea    rdx,[rip+0xba3]        # 407379 <_IO_stdin_used@@Base+0x379>
  4067d6:	jmp    406812 <table_cell_to_buffer@@Base+0x2b2>
  4067d8:	mov    rdi,rbx
  4067db:	mov    esi,r12d
  4067de:	mov    edx,ebp
  4067e0:	call   404c10 <table_get_bool@@Base>
  4067e5:	movzx  ecx,al
  4067e8:	lea    rdx,[rip+0x8f4]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  4067ef:	mov    rdi,r15
  4067f2:	mov    rsi,r14
  4067f5:	xor    eax,eax
  4067f7:	call   403080 <snprintf@plt>
  4067fc:	jmp    406822 <table_cell_to_buffer@@Base+0x2c2>
  4067fe:	mov    rdi,rbx
  406801:	mov    esi,r12d
  406804:	mov    edx,ebp
  406806:	call   404d80 <table_get_ptr@@Base>
  40680b:	lea    rdx,[rip+0xb78]        # 40738a <_IO_stdin_used@@Base+0x38a>
  406812:	mov    rdi,r15
  406815:	mov    rsi,r14
  406818:	mov    rcx,rax
  40681b:	xor    eax,eax
  40681d:	call   403080 <snprintf@plt>
  406822:	xor    eax,eax
  406824:	add    rsp,0x10
  406828:	pop    rbx
  406829:	pop    r12
  40682b:	pop    r14
  40682d:	pop    r15
  40682f:	pop    rbp
  406830:	ret    
  406831:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40683b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406840 <table_cell_from_buffer@@Base>:
  406840:	push   rbp
  406841:	push   r15
  406843:	push   r14
  406845:	push   rbx
  406846:	sub    rsp,0x118
  40684d:	mov    rbx,rcx
  406850:	mov    r15d,edx
  406853:	mov    r14d,esi
  406856:	mov    rbp,rdi
  406859:	mov    esi,edx
  40685b:	call   404270 <table_get_column_data_type@@Base>
  406860:	cmp    eax,0x17
  406863:	ja     406e3d <table_cell_from_buffer@@Base+0x5fd>
  406869:	mov    eax,eax
  40686b:	lea    rcx,[rip+0xa8a]        # 4072fc <_IO_stdin_used@@Base+0x2fc>
  406872:	movsxd rax,DWORD PTR [rcx+rax*4]
  406876:	add    rax,rcx
  406879:	jmp    rax
  40687b:	lea    rsi,[rip+0x861]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  406882:	lea    rdx,[rsp+0x10]
  406887:	mov    rdi,rbx
  40688a:	xor    eax,eax
  40688c:	call   4030d0 <__isoc99_sscanf@plt>
  406891:	mov    ecx,eax
  406893:	mov    eax,0xffffffff
  406898:	cmp    ecx,0x1
  40689b:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  4068a1:	mov    ecx,DWORD PTR [rsp+0x10]
  4068a5:	mov    rdi,rbp
  4068a8:	mov    esi,r14d
  4068ab:	mov    edx,r15d
  4068ae:	call   405410 <table_set_int@@Base>
  4068b3:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  4068b8:	lea    rsi,[rip+0xa9d]        # 40735c <_IO_stdin_used@@Base+0x35c>
  4068bf:	lea    rdx,[rsp+0x10]
  4068c4:	mov    rdi,rbx
  4068c7:	xor    eax,eax
  4068c9:	call   4030d0 <__isoc99_sscanf@plt>
  4068ce:	mov    ecx,eax
  4068d0:	mov    eax,0xffffffff
  4068d5:	cmp    ecx,0x1
  4068d8:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  4068de:	mov    ecx,DWORD PTR [rsp+0x10]
  4068e2:	mov    rdi,rbp
  4068e5:	mov    esi,r14d
  4068e8:	mov    edx,r15d
  4068eb:	call   405490 <table_set_uint@@Base>
  4068f0:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  4068f5:	lea    rsi,[rip+0xa91]        # 40738d <_IO_stdin_used@@Base+0x38d>
  4068fc:	lea    rdx,[rsp+0x10]
  406901:	mov    rdi,rbx
  406904:	xor    eax,eax
  406906:	call   4030d0 <__isoc99_sscanf@plt>
  40690b:	mov    ecx,eax
  40690d:	mov    eax,0xffffffff
  406912:	cmp    ecx,0x1
  406915:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  40691b:	movsx  ecx,BYTE PTR [rsp+0x10]
  406920:	mov    rdi,rbp
  406923:	mov    esi,r14d
  406926:	mov    edx,r15d
  406929:	call   405510 <table_set_int8@@Base>
  40692e:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406933:	lea    rsi,[rip+0xa58]        # 407392 <_IO_stdin_used@@Base+0x392>
  40693a:	lea    rdx,[rsp+0x10]
  40693f:	mov    rdi,rbx
  406942:	xor    eax,eax
  406944:	call   4030d0 <__isoc99_sscanf@plt>
  406949:	mov    ecx,eax
  40694b:	mov    eax,0xffffffff
  406950:	cmp    ecx,0x1
  406953:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406959:	movzx  ecx,BYTE PTR [rsp+0x10]
  40695e:	mov    rdi,rbp
  406961:	mov    esi,r14d
  406964:	mov    edx,r15d
  406967:	call   405590 <table_set_uint8@@Base>
  40696c:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406971:	lea    rsi,[rip+0x9ef]        # 407367 <_IO_stdin_used@@Base+0x367>
  406978:	lea    rdx,[rsp+0x10]
  40697d:	mov    rdi,rbx
  406980:	xor    eax,eax
  406982:	call   4030d0 <__isoc99_sscanf@plt>
  406987:	mov    ecx,eax
  406989:	mov    eax,0xffffffff
  40698e:	cmp    ecx,0x1
  406991:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406997:	movsx  ecx,WORD PTR [rsp+0x10]
  40699c:	mov    rdi,rbp
  40699f:	mov    esi,r14d
  4069a2:	mov    edx,r15d
  4069a5:	call   405610 <table_set_int16@@Base>
  4069aa:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  4069af:	lea    rsi,[rip+0x9b5]        # 40736b <_IO_stdin_used@@Base+0x36b>
  4069b6:	lea    rdx,[rsp+0x10]
  4069bb:	mov    rdi,rbx
  4069be:	xor    eax,eax
  4069c0:	call   4030d0 <__isoc99_sscanf@plt>
  4069c5:	mov    ecx,eax
  4069c7:	mov    eax,0xffffffff
  4069cc:	cmp    ecx,0x1
  4069cf:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  4069d5:	movzx  ecx,WORD PTR [rsp+0x10]
  4069da:	mov    rdi,rbp
  4069dd:	mov    esi,r14d
  4069e0:	mov    edx,r15d
  4069e3:	call   405690 <table_set_uint16@@Base>
  4069e8:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  4069ed:	lea    rsi,[rip+0x6ef]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  4069f4:	lea    rdx,[rsp+0x10]
  4069f9:	mov    rdi,rbx
  4069fc:	xor    eax,eax
  4069fe:	call   4030d0 <__isoc99_sscanf@plt>
  406a03:	mov    ecx,eax
  406a05:	mov    eax,0xffffffff
  406a0a:	cmp    ecx,0x1
  406a0d:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406a13:	mov    ecx,DWORD PTR [rsp+0x10]
  406a17:	mov    rdi,rbp
  406a1a:	mov    esi,r14d
  406a1d:	mov    edx,r15d
  406a20:	call   405710 <table_set_int32@@Base>
  406a25:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406a2a:	lea    rsi,[rip+0x92b]        # 40735c <_IO_stdin_used@@Base+0x35c>
  406a31:	lea    rdx,[rsp+0x10]
  406a36:	mov    rdi,rbx
  406a39:	xor    eax,eax
  406a3b:	call   4030d0 <__isoc99_sscanf@plt>
  406a40:	mov    ecx,eax
  406a42:	mov    eax,0xffffffff
  406a47:	cmp    ecx,0x1
  406a4a:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406a50:	mov    ecx,DWORD PTR [rsp+0x10]
  406a54:	mov    rdi,rbp
  406a57:	mov    esi,r14d
  406a5a:	mov    edx,r15d
  406a5d:	call   405790 <table_set_uint32@@Base>
  406a62:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406a67:	lea    rsi,[rip+0x8f1]        # 40735f <_IO_stdin_used@@Base+0x35f>
  406a6e:	lea    rdx,[rsp+0x10]
  406a73:	mov    rdi,rbx
  406a76:	xor    eax,eax
  406a78:	call   4030d0 <__isoc99_sscanf@plt>
  406a7d:	mov    ecx,eax
  406a7f:	mov    eax,0xffffffff
  406a84:	cmp    ecx,0x1
  406a87:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406a8d:	mov    rcx,QWORD PTR [rsp+0x10]
  406a92:	mov    rdi,rbp
  406a95:	mov    esi,r14d
  406a98:	mov    edx,r15d
  406a9b:	call   405810 <table_set_int64@@Base>
  406aa0:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406aa5:	lea    rsi,[rip+0x8b7]        # 407363 <_IO_stdin_used@@Base+0x363>
  406aac:	lea    rdx,[rsp+0x10]
  406ab1:	mov    rdi,rbx
  406ab4:	xor    eax,eax
  406ab6:	call   4030d0 <__isoc99_sscanf@plt>
  406abb:	mov    ecx,eax
  406abd:	mov    eax,0xffffffff
  406ac2:	cmp    ecx,0x1
  406ac5:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406acb:	mov    rcx,QWORD PTR [rsp+0x10]
  406ad0:	mov    rdi,rbp
  406ad3:	mov    esi,r14d
  406ad6:	mov    edx,r15d
  406ad9:	call   405890 <table_set_uint64@@Base>
  406ade:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406ae3:	lea    rsi,[rip+0x87d]        # 407367 <_IO_stdin_used@@Base+0x367>
  406aea:	lea    rdx,[rsp+0x10]
  406aef:	mov    rdi,rbx
  406af2:	xor    eax,eax
  406af4:	call   4030d0 <__isoc99_sscanf@plt>
  406af9:	mov    ecx,eax
  406afb:	mov    eax,0xffffffff
  406b00:	cmp    ecx,0x1
  406b03:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406b09:	movsx  ecx,WORD PTR [rsp+0x10]
  406b0e:	mov    rdi,rbp
  406b11:	mov    esi,r14d
  406b14:	mov    edx,r15d
  406b17:	call   405910 <table_set_short@@Base>
  406b1c:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406b21:	lea    rsi,[rip+0x843]        # 40736b <_IO_stdin_used@@Base+0x36b>
  406b28:	lea    rdx,[rsp+0x10]
  406b2d:	mov    rdi,rbx
  406b30:	xor    eax,eax
  406b32:	call   4030d0 <__isoc99_sscanf@plt>
  406b37:	mov    ecx,eax
  406b39:	mov    eax,0xffffffff
  406b3e:	cmp    ecx,0x1
  406b41:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406b47:	movzx  ecx,WORD PTR [rsp+0x10]
  406b4c:	mov    rdi,rbp
  406b4f:	mov    esi,r14d
  406b52:	mov    edx,r15d
  406b55:	call   405990 <table_set_ushort@@Base>
  406b5a:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406b5f:	lea    rsi,[rip+0x7f9]        # 40735f <_IO_stdin_used@@Base+0x35f>
  406b66:	lea    rdx,[rsp+0x10]
  406b6b:	mov    rdi,rbx
  406b6e:	xor    eax,eax
  406b70:	call   4030d0 <__isoc99_sscanf@plt>
  406b75:	mov    ecx,eax
  406b77:	mov    eax,0xffffffff
  406b7c:	cmp    ecx,0x1
  406b7f:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406b85:	mov    rcx,QWORD PTR [rsp+0x10]
  406b8a:	mov    rdi,rbp
  406b8d:	mov    esi,r14d
  406b90:	mov    edx,r15d
  406b93:	call   405a10 <table_set_long@@Base>
  406b98:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406b9d:	lea    rsi,[rip+0x7bf]        # 407363 <_IO_stdin_used@@Base+0x363>
  406ba4:	lea    rdx,[rsp+0x10]
  406ba9:	mov    rdi,rbx
  406bac:	xor    eax,eax
  406bae:	call   4030d0 <__isoc99_sscanf@plt>
  406bb3:	mov    ecx,eax
  406bb5:	mov    eax,0xffffffff
  406bba:	cmp    ecx,0x1
  406bbd:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406bc3:	mov    rcx,QWORD PTR [rsp+0x10]
  406bc8:	mov    rdi,rbp
  406bcb:	mov    esi,r14d
  406bce:	mov    edx,r15d
  406bd1:	call   405a90 <table_set_ulong@@Base>
  406bd6:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406bdb:	lea    rsi,[rip+0x78d]        # 40736f <_IO_stdin_used@@Base+0x36f>
  406be2:	lea    rdx,[rsp+0x10]
  406be7:	mov    rdi,rbx
  406bea:	xor    eax,eax
  406bec:	call   4030d0 <__isoc99_sscanf@plt>
  406bf1:	mov    ecx,eax
  406bf3:	mov    eax,0xffffffff
  406bf8:	cmp    ecx,0x1
  406bfb:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406c01:	mov    rcx,QWORD PTR [rsp+0x10]
  406c06:	mov    rdi,rbp
  406c09:	mov    esi,r14d
  406c0c:	mov    edx,r15d
  406c0f:	call   405b10 <table_set_llong@@Base>
  406c14:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406c19:	lea    rsi,[rip+0x754]        # 407374 <_IO_stdin_used@@Base+0x374>
  406c20:	lea    rdx,[rsp+0x10]
  406c25:	mov    rdi,rbx
  406c28:	xor    eax,eax
  406c2a:	call   4030d0 <__isoc99_sscanf@plt>
  406c2f:	mov    ecx,eax
  406c31:	mov    eax,0xffffffff
  406c36:	cmp    ecx,0x1
  406c39:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406c3f:	mov    rcx,QWORD PTR [rsp+0x10]
  406c44:	mov    rdi,rbp
  406c47:	mov    esi,r14d
  406c4a:	mov    edx,r15d
  406c4d:	call   405b90 <table_set_ullong@@Base>
  406c52:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406c57:	lea    rsi,[rip+0x71e]        # 40737c <_IO_stdin_used@@Base+0x37c>
  406c5e:	lea    rdx,[rsp+0x10]
  406c63:	mov    rdi,rbx
  406c66:	xor    eax,eax
  406c68:	call   4030d0 <__isoc99_sscanf@plt>
  406c6d:	mov    ecx,eax
  406c6f:	mov    eax,0xffffffff
  406c74:	cmp    ecx,0x1
  406c77:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406c7d:	vmovss xmm0,DWORD PTR [rsp+0x10]
  406c83:	mov    rdi,rbp
  406c86:	mov    esi,r14d
  406c89:	mov    edx,r15d
  406c8c:	call   405c10 <table_set_float@@Base>
  406c91:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406c96:	lea    rsi,[rip+0x6e2]        # 40737f <_IO_stdin_used@@Base+0x37f>
  406c9d:	lea    rdx,[rsp+0x10]
  406ca2:	mov    rdi,rbx
  406ca5:	xor    eax,eax
  406ca7:	call   4030d0 <__isoc99_sscanf@plt>
  406cac:	mov    ecx,eax
  406cae:	mov    eax,0xffffffff
  406cb3:	cmp    ecx,0x1
  406cb6:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406cbc:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  406cc2:	mov    rdi,rbp
  406cc5:	mov    esi,r14d
  406cc8:	mov    edx,r15d
  406ccb:	call   405ca0 <table_set_double@@Base>
  406cd0:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406cd5:	lea    rsi,[rip+0x6a7]        # 407383 <_IO_stdin_used@@Base+0x383>
  406cdc:	lea    rdx,[rsp+0x10]
  406ce1:	mov    rdi,rbx
  406ce4:	xor    eax,eax
  406ce6:	call   4030d0 <__isoc99_sscanf@plt>
  406ceb:	mov    ecx,eax
  406ced:	mov    eax,0xffffffff
  406cf2:	cmp    ecx,0x1
  406cf5:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406cfb:	fld    TBYTE PTR [rsp+0x10]
  406cff:	fstp   TBYTE PTR [rsp]
  406d02:	mov    rdi,rbp
  406d05:	mov    esi,r14d
  406d08:	mov    edx,r15d
  406d0b:	call   405d30 <table_set_ldouble@@Base>
  406d10:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406d15:	lea    rsi,[rip+0x66b]        # 407387 <_IO_stdin_used@@Base+0x387>
  406d1c:	lea    rdx,[rsp+0x10]
  406d21:	mov    rdi,rbx
  406d24:	xor    eax,eax
  406d26:	call   4030d0 <__isoc99_sscanf@plt>
  406d2b:	mov    ecx,eax
  406d2d:	mov    eax,0xffffffff
  406d32:	cmp    ecx,0x1
  406d35:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406d3b:	movsx  ecx,BYTE PTR [rsp+0x10]
  406d40:	mov    rdi,rbp
  406d43:	mov    esi,r14d
  406d46:	mov    edx,r15d
  406d49:	call   405de0 <table_set_char@@Base>
  406d4e:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406d53:	lea    rsi,[rip+0x62d]        # 407387 <_IO_stdin_used@@Base+0x387>
  406d5a:	lea    rdx,[rsp+0x10]
  406d5f:	mov    rdi,rbx
  406d62:	xor    eax,eax
  406d64:	call   4030d0 <__isoc99_sscanf@plt>
  406d69:	mov    ecx,eax
  406d6b:	mov    eax,0xffffffff
  406d70:	cmp    ecx,0x1
  406d73:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406d79:	movzx  ecx,BYTE PTR [rsp+0x10]
  406d7e:	mov    rdi,rbp
  406d81:	mov    esi,r14d
  406d84:	mov    edx,r15d
  406d87:	call   405e60 <table_set_uchar@@Base>
  406d8c:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406d91:	lea    rsi,[rip+0x5e1]        # 407379 <_IO_stdin_used@@Base+0x379>
  406d98:	lea    rdx,[rsp+0x10]
  406d9d:	mov    rdi,rbx
  406da0:	xor    eax,eax
  406da2:	call   4030d0 <__isoc99_sscanf@plt>
  406da7:	mov    ecx,eax
  406da9:	mov    eax,0xffffffff
  406dae:	cmp    ecx,0x1
  406db1:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406db7:	lea    rcx,[rsp+0x10]
  406dbc:	mov    rdi,rbp
  406dbf:	mov    esi,r14d
  406dc2:	mov    edx,r15d
  406dc5:	call   405dd0 <table_set_string@@Base>
  406dca:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406dcc:	lea    rsi,[rip+0x310]        # 4070e3 <_IO_stdin_used@@Base+0xe3>
  406dd3:	lea    rdx,[rsp+0x10]
  406dd8:	mov    rdi,rbx
  406ddb:	xor    eax,eax
  406ddd:	call   4030d0 <__isoc99_sscanf@plt>
  406de2:	mov    ecx,eax
  406de4:	mov    eax,0xffffffff
  406de9:	cmp    ecx,0x1
  406dec:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406dee:	xor    ecx,ecx
  406df0:	cmp    DWORD PTR [rsp+0x10],0x0
  406df5:	setne  cl
  406df8:	mov    rdi,rbp
  406dfb:	mov    esi,r14d
  406dfe:	mov    edx,r15d
  406e01:	call   405390 <table_set_bool@@Base>
  406e06:	jmp    406e3d <table_cell_from_buffer@@Base+0x5fd>
  406e08:	lea    rsi,[rip+0x57b]        # 40738a <_IO_stdin_used@@Base+0x38a>
  406e0f:	lea    rdx,[rsp+0x10]
  406e14:	mov    rdi,rbx
  406e17:	xor    eax,eax
  406e19:	call   4030d0 <__isoc99_sscanf@plt>
  406e1e:	mov    ecx,eax
  406e20:	mov    eax,0xffffffff
  406e25:	cmp    ecx,0x1
  406e28:	jne    406e3f <table_cell_from_buffer@@Base+0x5ff>
  406e2a:	mov    rcx,QWORD PTR [rsp+0x10]
  406e2f:	mov    rdi,rbp
  406e32:	mov    esi,r14d
  406e35:	mov    edx,r15d
  406e38:	call   405ee0 <table_set_ptr@@Base>
  406e3d:	xor    eax,eax
  406e3f:	add    rsp,0x118
  406e46:	pop    rbx
  406e47:	pop    r14
  406e49:	pop    r15
  406e4b:	pop    rbp
  406e4c:	ret    
  406e4d:	nop    DWORD PTR [rax]

0000000000406e50 <table_cell_nullify@@Base>:
  406e50:	push   rbp
  406e51:	push   rbx
  406e52:	push   rax
  406e53:	mov    ebp,edx
  406e55:	call   404dc0 <table_get_row_ptr@@Base>
  406e5a:	mov    rbx,QWORD PTR [rax]
  406e5d:	movsxd rbp,ebp
  406e60:	mov    rdi,QWORD PTR [rbx+rbp*8]
  406e64:	test   rdi,rdi
  406e67:	je     406e76 <table_cell_nullify@@Base+0x26>
  406e69:	call   403030 <free@plt>
  406e6e:	mov    QWORD PTR [rbx+rbp*8],0x0
  406e76:	xor    eax,eax
  406e78:	add    rsp,0x8
  406e7c:	pop    rbx
  406e7d:	pop    rbp
  406e7e:	ret    
  406e7f:	nop

0000000000406e80 <__libc_csu_init@@Base>:
  406e80:	endbr64 
  406e84:	push   r15
  406e86:	lea    r15,[rip+0x2eb3]        # 409d40 <_IO_stdin_used@@Base+0x2d40>
  406e8d:	push   r14
  406e8f:	mov    r14,rdx
  406e92:	push   r13
  406e94:	mov    r13,rsi
  406e97:	push   r12
  406e99:	mov    r12d,edi
  406e9c:	push   rbp
  406e9d:	lea    rbp,[rip+0x2ea4]        # 409d48 <_IO_stdin_used@@Base+0x2d48>
  406ea4:	push   rbx
  406ea5:	sub    rbp,r15
  406ea8:	sub    rsp,0x8
  406eac:	call   403000 <free@plt-0x30>
  406eb1:	sar    rbp,0x3
  406eb5:	je     406ed6 <__libc_csu_init@@Base+0x56>
  406eb7:	xor    ebx,ebx
  406eb9:	nop    DWORD PTR [rax+0x0]
  406ec0:	mov    rdx,r14
  406ec3:	mov    rsi,r13
  406ec6:	mov    edi,r12d
  406ec9:	call   QWORD PTR [r15+rbx*8]
  406ecd:	add    rbx,0x1
  406ed1:	cmp    rbp,rbx
  406ed4:	jne    406ec0 <__libc_csu_init@@Base+0x40>
  406ed6:	add    rsp,0x8
  406eda:	pop    rbx
  406edb:	pop    rbp
  406edc:	pop    r12
  406ede:	pop    r13
  406ee0:	pop    r14
  406ee2:	pop    r15
  406ee4:	ret    
  406ee5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406ef0 <__libc_csu_fini@@Base>:
  406ef0:	endbr64 
  406ef4:	ret    

Disassembly of section .fini:

0000000000406ef8 <.fini>:
  406ef8:	endbr64 
  406efc:	sub    rsp,0x8
  406f00:	add    rsp,0x8
  406f04:	ret    
