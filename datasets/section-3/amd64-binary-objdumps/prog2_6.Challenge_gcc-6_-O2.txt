
../repos/prog2/6.Challenge:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <malloc@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <malloc@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <malloc@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <malloc@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <malloc@plt-0x10>

0000000000401040 <__printf_chk@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <__printf_chk@GLIBC_2.3.4>
  401046:	push   0x1
  40104b:	jmp    401020 <malloc@plt-0x10>

0000000000401050 <__isoc99_scanf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <__isoc99_scanf@GLIBC_2.7>
  401056:	push   0x2
  40105b:	jmp    401020 <malloc@plt-0x10>

0000000000401060 <exit@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <exit@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <malloc@plt-0x10>

Disassembly of section .text:

0000000000401070 <main@@Base>:
  401070:	push   r15
  401072:	push   r14
  401074:	push   r13
  401076:	push   r12
  401078:	lea    r12,[rip+0xf9a]        # 402019 <_IO_stdin_used@@Base+0x19>
  40107f:	push   rbp
  401080:	push   rbx
  401081:	sub    rsp,0x28
  401085:	mov    rax,QWORD PTR fs:0x28
  40108e:	mov    QWORD PTR [rsp+0x18],rax
  401093:	xor    eax,eax
  401095:	lea    rax,[rsp+0x14]
  40109a:	mov    QWORD PTR [rsp+0x8],rax
  40109f:	nop
  4010a0:	mov    rsi,QWORD PTR [rsp+0x8]
  4010a5:	lea    rdi,[rip+0xf58]        # 402004 <_IO_stdin_used@@Base+0x4>
  4010ac:	xor    eax,eax
  4010ae:	call   401050 <__isoc99_scanf@plt>
  4010b3:	mov    eax,DWORD PTR [rsp+0x14]
  4010b7:	test   eax,eax
  4010b9:	je     4011ab <main@@Base+0x13b>
  4010bf:	lea    edi,[rax+rax*1]
  4010c2:	movsxd rdi,edi
  4010c5:	shl    rdi,0x2
  4010c9:	call   401030 <malloc@plt>
  4010ce:	mov    r13d,DWORD PTR [rsp+0x14]
  4010d3:	mov    rbp,rax
  4010d6:	mov    eax,0x1
  4010db:	lea    edx,[r13-0x1]
  4010df:	mov    rbx,rdx
  4010e2:	add    rdx,0x2
  4010e6:	test   r13d,r13d
  4010e9:	jle    4011b2 <main@@Base+0x142>
  4010ef:	nop
  4010f0:	mov    DWORD PTR [rbp+rax*4-0x4],eax
  4010f4:	add    rax,0x1
  4010f8:	cmp    rdx,rax
  4010fb:	jne    4010f0 <main@@Base+0x80>
  4010fd:	lea    rsi,[rip+0xf03]        # 402007 <_IO_stdin_used@@Base+0x7>
  401104:	xor    eax,eax
  401106:	mov    edi,0x1
  40110b:	call   401040 <__printf_chk@plt>
  401110:	cmp    r13d,0x2
  401114:	jle    4011c5 <main@@Base+0x155>
  40111a:	lea    eax,[r13-0x3]
  40111e:	movsxd rbx,ebx
  401121:	lea    r14,[rbp+rbx*4+0x4]
  401126:	lea    rbx,[rbp+0x4]
  40112a:	lea    r15,[rbp+rax*8+0xc]
  40112f:	nop
  401130:	mov    edx,DWORD PTR [rbx-0x4]
  401133:	xor    eax,eax
  401135:	mov    rsi,r12
  401138:	mov    edi,0x1
  40113d:	add    rbx,0x8
  401141:	add    r14,0x4
  401145:	call   401040 <__printf_chk@plt>
  40114a:	mov    eax,DWORD PTR [rbx-0x8]
  40114d:	mov    DWORD PTR [r14-0x4],eax
  401151:	cmp    rbx,r15
  401154:	jne    401130 <main@@Base+0xc0>
  401156:	lea    eax,[r13+r13*1-0x4]
  40115b:	cdqe   
  40115d:	shl    rax,0x2
  401161:	lea    rbx,[rax+0x4]
  401165:	mov    edx,DWORD PTR [rbp+rax*1+0x0]
  401169:	lea    rsi,[rip+0xe94]        # 402004 <_IO_stdin_used@@Base+0x4>
  401170:	mov    edi,0x1
  401175:	xor    eax,eax
  401177:	call   401040 <__printf_chk@plt>
  40117c:	lea    rsi,[rip+0xe9b]        # 40201e <_IO_stdin_used@@Base+0x1e>
  401183:	mov    edi,0x1
  401188:	xor    eax,eax
  40118a:	call   401040 <__printf_chk@plt>
  40118f:	mov    edx,DWORD PTR [rbp+rbx*1+0x0]
  401193:	lea    rsi,[rip+0xe96]        # 402030 <_IO_stdin_used@@Base+0x30>
  40119a:	mov    edi,0x1
  40119f:	xor    eax,eax
  4011a1:	call   401040 <__printf_chk@plt>
  4011a6:	jmp    4010a0 <main@@Base+0x30>
  4011ab:	xor    edi,edi
  4011ad:	call   401060 <exit@plt>
  4011b2:	lea    rsi,[rip+0xe4e]        # 402007 <_IO_stdin_used@@Base+0x7>
  4011b9:	mov    edi,0x1
  4011be:	xor    eax,eax
  4011c0:	call   401040 <__printf_chk@plt>
  4011c5:	mov    ebx,0x4
  4011ca:	xor    eax,eax
  4011cc:	jmp    401165 <main@@Base+0xf5>
  4011ce:	xchg   ax,ax

00000000004011d0 <_start@@Base>:
  4011d0:	endbr64 
  4011d4:	xor    ebp,ebp
  4011d6:	mov    r9,rdx
  4011d9:	pop    rsi
  4011da:	mov    rdx,rsp
  4011dd:	and    rsp,0xfffffffffffffff0
  4011e1:	push   rax
  4011e2:	push   rsp
  4011e3:	mov    r8,0x401350
  4011ea:	mov    rcx,0x4012e0
  4011f1:	mov    rdi,0x401070
  4011f8:	call   QWORD PTR [rip+0x2df2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4011fe:	hlt    
  4011ff:	nop
  401200:	endbr64 
  401204:	ret    
  401205:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40120f:	nop
  401210:	mov    eax,0x40404f
  401215:	push   rbp
  401216:	sub    rax,0x404048
  40121c:	cmp    rax,0xe
  401220:	mov    rbp,rsp
  401223:	jbe    401240 <_start@@Base+0x70>
  401225:	mov    eax,0x0
  40122a:	test   rax,rax
  40122d:	je     401240 <_start@@Base+0x70>
  40122f:	pop    rbp
  401230:	mov    edi,0x404048
  401235:	jmp    rax
  401237:	nop    WORD PTR [rax+rax*1+0x0]
  401240:	pop    rbp
  401241:	ret    
  401242:	nop    DWORD PTR [rax+0x0]
  401246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401250:	mov    esi,0x404048
  401255:	push   rbp
  401256:	sub    rsi,0x404048
  40125d:	sar    rsi,0x3
  401261:	mov    rbp,rsp
  401264:	mov    rax,rsi
  401267:	shr    rax,0x3f
  40126b:	add    rsi,rax
  40126e:	sar    rsi,1
  401271:	je     401288 <_start@@Base+0xb8>
  401273:	mov    eax,0x0
  401278:	test   rax,rax
  40127b:	je     401288 <_start@@Base+0xb8>
  40127d:	pop    rbp
  40127e:	mov    edi,0x404048
  401283:	jmp    rax
  401285:	nop    DWORD PTR [rax]
  401288:	pop    rbp
  401289:	ret    
  40128a:	nop    WORD PTR [rax+rax*1+0x0]
  401290:	cmp    BYTE PTR [rip+0x2db1],0x0        # 404048 <__bss_start@@Base>
  401297:	jne    4012aa <_start@@Base+0xda>
  401299:	push   rbp
  40129a:	mov    rbp,rsp
  40129d:	call   401210 <_start@@Base+0x40>
  4012a2:	pop    rbp
  4012a3:	mov    BYTE PTR [rip+0x2d9e],0x1        # 404048 <__bss_start@@Base>
  4012aa:	repz ret 
  4012ac:	nop    DWORD PTR [rax+0x0]
  4012b0:	mov    edi,0x403e18
  4012b5:	cmp    QWORD PTR [rdi],0x0
  4012b9:	jne    4012c0 <_start@@Base+0xf0>
  4012bb:	jmp    401250 <_start@@Base+0x80>
  4012bd:	nop    DWORD PTR [rax]
  4012c0:	mov    eax,0x0
  4012c5:	test   rax,rax
  4012c8:	je     4012bb <_start@@Base+0xeb>
  4012ca:	push   rbp
  4012cb:	mov    rbp,rsp
  4012ce:	call   rax
  4012d0:	pop    rbp
  4012d1:	jmp    401250 <_start@@Base+0x80>
  4012d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004012e0 <__libc_csu_init@@Base>:
  4012e0:	endbr64 
  4012e4:	push   r15
  4012e6:	lea    r15,[rip+0x2b1b]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  4012ed:	push   r14
  4012ef:	mov    r14,rdx
  4012f2:	push   r13
  4012f4:	mov    r13,rsi
  4012f7:	push   r12
  4012f9:	mov    r12d,edi
  4012fc:	push   rbp
  4012fd:	lea    rbp,[rip+0x2b0c]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  401304:	push   rbx
  401305:	sub    rbp,r15
  401308:	sub    rsp,0x8
  40130c:	call   401000 <malloc@plt-0x30>
  401311:	sar    rbp,0x3
  401315:	je     401336 <__libc_csu_init@@Base+0x56>
  401317:	xor    ebx,ebx
  401319:	nop    DWORD PTR [rax+0x0]
  401320:	mov    rdx,r14
  401323:	mov    rsi,r13
  401326:	mov    edi,r12d
  401329:	call   QWORD PTR [r15+rbx*8]
  40132d:	add    rbx,0x1
  401331:	cmp    rbp,rbx
  401334:	jne    401320 <__libc_csu_init@@Base+0x40>
  401336:	add    rsp,0x8
  40133a:	pop    rbx
  40133b:	pop    rbp
  40133c:	pop    r12
  40133e:	pop    r13
  401340:	pop    r14
  401342:	pop    r15
  401344:	ret    
  401345:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401350 <__libc_csu_fini@@Base>:
  401350:	endbr64 
  401354:	ret    

Disassembly of section .fini:

0000000000401358 <.fini>:
  401358:	endbr64 
  40135c:	sub    rsp,0x8
  401360:	add    rsp,0x8
  401364:	ret    
