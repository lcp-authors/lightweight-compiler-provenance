
../repos/maitesin-acc-4891b9a/bin/grammar_tests:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xefe1]        # 411ff0 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <getenv@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <getenv@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xefe2]        # 412008 <_IO_stdin_used@@Base+0x5008>
  403026:	jmp    QWORD PTR [rip+0xefe4]        # 412010 <_IO_stdin_used@@Base+0x5010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <getenv@plt>:
  403030:	jmp    QWORD PTR [rip+0xefe2]        # 412018 <getenv@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <getenv@plt-0x10>

0000000000403040 <free@plt>:
  403040:	jmp    QWORD PTR [rip+0xefda]        # 412020 <free@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <getenv@plt-0x10>

0000000000403050 <__errno_location@plt>:
  403050:	jmp    QWORD PTR [rip+0xefd2]        # 412028 <__errno_location@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <getenv@plt-0x10>

0000000000403060 <strncpy@plt>:
  403060:	jmp    QWORD PTR [rip+0xefca]        # 412030 <strncpy@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <getenv@plt-0x10>

0000000000403070 <strncmp@plt>:
  403070:	jmp    QWORD PTR [rip+0xefc2]        # 412038 <strncmp@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <getenv@plt-0x10>

0000000000403080 <mkdir@plt>:
  403080:	jmp    QWORD PTR [rip+0xefba]        # 412040 <mkdir@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <getenv@plt-0x10>

0000000000403090 <fcntl@plt>:
  403090:	jmp    QWORD PTR [rip+0xefb2]        # 412048 <fcntl@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <getenv@plt-0x10>

00000000004030a0 <getpid@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xefaa]        # 412050 <getpid@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <getenv@plt-0x10>

00000000004030b0 <fclose@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xefa2]        # 412058 <fclose@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <getenv@plt-0x10>

00000000004030c0 <msync@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xef9a]        # 412060 <msync@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <getenv@plt-0x10>

00000000004030d0 <strlen@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xef92]        # 412068 <strlen@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <getenv@plt-0x10>

00000000004030e0 <mmap@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xef8a]        # 412070 <mmap@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <getenv@plt-0x10>

00000000004030f0 <setbuf@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xef82]        # 412078 <setbuf@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <getenv@plt-0x10>

0000000000403100 <strchr@plt>:
  403100:	jmp    QWORD PTR [rip+0xef7a]        # 412080 <strchr@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <getenv@plt-0x10>

0000000000403110 <printf@plt>:
  403110:	jmp    QWORD PTR [rip+0xef72]        # 412088 <printf@GLIBC_2.2.5>
  403116:	push   0xe
  40311b:	jmp    403020 <getenv@plt-0x10>

0000000000403120 <strrchr@plt>:
  403120:	jmp    QWORD PTR [rip+0xef6a]        # 412090 <strrchr@GLIBC_2.2.5>
  403126:	push   0xf
  40312b:	jmp    403020 <getenv@plt-0x10>

0000000000403130 <uname@plt>:
  403130:	jmp    QWORD PTR [rip+0xef62]        # 412098 <uname@GLIBC_2.2.5>
  403136:	push   0x10
  40313b:	jmp    403020 <getenv@plt-0x10>

0000000000403140 <__assert_fail@plt>:
  403140:	jmp    QWORD PTR [rip+0xef5a]        # 4120a0 <__assert_fail@GLIBC_2.2.5>
  403146:	push   0x11
  40314b:	jmp    403020 <getenv@plt-0x10>

0000000000403150 <memset@plt>:
  403150:	jmp    QWORD PTR [rip+0xef52]        # 4120a8 <memset@GLIBC_2.2.5>
  403156:	push   0x12
  40315b:	jmp    403020 <getenv@plt-0x10>

0000000000403160 <strnlen@plt>:
  403160:	jmp    QWORD PTR [rip+0xef4a]        # 4120b0 <strnlen@GLIBC_2.2.5>
  403166:	push   0x13
  40316b:	jmp    403020 <getenv@plt-0x10>

0000000000403170 <fprintf@plt>:
  403170:	jmp    QWORD PTR [rip+0xef42]        # 4120b8 <fprintf@GLIBC_2.2.5>
  403176:	push   0x14
  40317b:	jmp    403020 <getenv@plt-0x10>

0000000000403180 <ftell@plt>:
  403180:	jmp    QWORD PTR [rip+0xef3a]        # 4120c0 <ftell@GLIBC_2.2.5>
  403186:	push   0x15
  40318b:	jmp    403020 <getenv@plt-0x10>

0000000000403190 <strtol@plt>:
  403190:	jmp    QWORD PTR [rip+0xef32]        # 4120c8 <strtol@GLIBC_2.2.5>
  403196:	push   0x16
  40319b:	jmp    403020 <getenv@plt-0x10>

00000000004031a0 <memcpy@plt>:
  4031a0:	jmp    QWORD PTR [rip+0xef2a]        # 4120d0 <memcpy@GLIBC_2.14>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <getenv@plt-0x10>

00000000004031b0 <prctl@plt>:
  4031b0:	jmp    QWORD PTR [rip+0xef22]        # 4120d8 <prctl@GLIBC_2.2.5>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <getenv@plt-0x10>

00000000004031c0 <malloc@plt>:
  4031c0:	jmp    QWORD PTR [rip+0xef1a]        # 4120e0 <malloc@GLIBC_2.2.5>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <getenv@plt-0x10>

00000000004031d0 <fflush@plt>:
  4031d0:	jmp    QWORD PTR [rip+0xef12]        # 4120e8 <fflush@GLIBC_2.2.5>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <getenv@plt-0x10>

00000000004031e0 <fseek@plt>:
  4031e0:	jmp    QWORD PTR [rip+0xef0a]        # 4120f0 <fseek@GLIBC_2.2.5>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <getenv@plt-0x10>

00000000004031f0 <realloc@plt>:
  4031f0:	jmp    QWORD PTR [rip+0xef02]        # 4120f8 <realloc@GLIBC_2.2.5>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <getenv@plt-0x10>

0000000000403200 <fdopen@plt>:
  403200:	jmp    QWORD PTR [rip+0xeefa]        # 412100 <fdopen@GLIBC_2.2.5>
  403206:	push   0x1d
  40320b:	jmp    403020 <getenv@plt-0x10>

0000000000403210 <munmap@plt>:
  403210:	jmp    QWORD PTR [rip+0xeef2]        # 412108 <munmap@GLIBC_2.2.5>
  403216:	push   0x1e
  40321b:	jmp    403020 <getenv@plt-0x10>

0000000000403220 <open@plt>:
  403220:	jmp    QWORD PTR [rip+0xeeea]        # 412110 <open@GLIBC_2.2.5>
  403226:	push   0x1f
  40322b:	jmp    403020 <getenv@plt-0x10>

0000000000403230 <__cxa_atexit@plt>:
  403230:	jmp    QWORD PTR [rip+0xeee2]        # 412118 <__cxa_atexit@GLIBC_2.2.5>
  403236:	push   0x20
  40323b:	jmp    403020 <getenv@plt-0x10>

0000000000403240 <exit@plt>:
  403240:	jmp    QWORD PTR [rip+0xeeda]        # 412120 <exit@GLIBC_2.2.5>
  403246:	push   0x21
  40324b:	jmp    403020 <getenv@plt-0x10>

0000000000403250 <fwrite@plt>:
  403250:	jmp    QWORD PTR [rip+0xeed2]        # 412128 <fwrite@GLIBC_2.2.5>
  403256:	push   0x22
  40325b:	jmp    403020 <getenv@plt-0x10>

0000000000403260 <strdup@plt>:
  403260:	jmp    QWORD PTR [rip+0xeeca]        # 412130 <strdup@GLIBC_2.2.5>
  403266:	push   0x23
  40326b:	jmp    403020 <getenv@plt-0x10>

0000000000403270 <strerror@plt>:
  403270:	jmp    QWORD PTR [rip+0xeec2]        # 412138 <strerror@GLIBC_2.2.5>
  403276:	push   0x24
  40327b:	jmp    403020 <getenv@plt-0x10>

Disassembly of section .text:

0000000000403280 <_start@@Base>:
  403280:	endbr64 
  403284:	xor    ebp,ebp
  403286:	mov    r9,rdx
  403289:	pop    rsi
  40328a:	mov    rdx,rsp
  40328d:	and    rsp,0xfffffffffffffff0
  403291:	push   rax
  403292:	push   rsp
  403293:	mov    r8,0x40c930
  40329a:	mov    rcx,0x40c8c0
  4032a1:	mov    rdi,0x406430
  4032a8:	call   QWORD PTR [rip+0xed3a]        # 411fe8 <__libc_start_main@GLIBC_2.2.5>
  4032ae:	hlt    
  4032af:	nop
  4032b0:	endbr64 
  4032b4:	ret    
  4032b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032bf:	nop
  4032c0:	mov    eax,0x412168
  4032c5:	cmp    rax,0x412168
  4032cb:	je     4032e0 <_start@@Base+0x60>
  4032cd:	mov    eax,0x0
  4032d2:	test   rax,rax
  4032d5:	je     4032e0 <_start@@Base+0x60>
  4032d7:	mov    edi,0x412168
  4032dc:	jmp    rax
  4032de:	xchg   ax,ax
  4032e0:	ret    
  4032e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4032ec:	nop    DWORD PTR [rax+0x0]
  4032f0:	mov    esi,0x412168
  4032f5:	sub    rsi,0x412168
  4032fc:	mov    rax,rsi
  4032ff:	shr    rsi,0x3f
  403303:	sar    rax,0x3
  403307:	add    rsi,rax
  40330a:	sar    rsi,1
  40330d:	je     403320 <_start@@Base+0xa0>
  40330f:	mov    eax,0x0
  403314:	test   rax,rax
  403317:	je     403320 <_start@@Base+0xa0>
  403319:	mov    edi,0x412168
  40331e:	jmp    rax
  403320:	ret    
  403321:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40332c:	nop    DWORD PTR [rax+0x0]
  403330:	endbr64 
  403334:	cmp    BYTE PTR [rip+0xee35],0x0        # 412170 <__bss_start@@Base+0x8>
  40333b:	jne    403350 <_start@@Base+0xd0>
  40333d:	push   rbp
  40333e:	mov    rbp,rsp
  403341:	call   4032c0 <_start@@Base+0x40>
  403346:	mov    BYTE PTR [rip+0xee23],0x1        # 412170 <__bss_start@@Base+0x8>
  40334d:	pop    rbp
  40334e:	ret    
  40334f:	nop
  403350:	ret    
  403351:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40335c:	nop    DWORD PTR [rax+0x0]
  403360:	endbr64 
  403364:	jmp    4032f0 <_start@@Base+0x70>
  403366:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403370 <next@@Base>:
  403370:	push   rbp
  403371:	mov    rbp,rsp
  403374:	sub    rsp,0x20
  403378:	mov    rax,QWORD PTR [rip+0xee01]        # 412180 <__bss_start@@Base+0x18>
  40337f:	add    rax,0x1
  403383:	mov    QWORD PTR [rip+0xedf6],rax        # 412180 <__bss_start@@Base+0x18>
  40338a:	mov    QWORD PTR [rbp-0x18],rdi
  40338e:	mov    eax,0x2
  403393:	mov    ecx,eax
  403395:	mov    eax,0x1
  40339a:	mov    edx,eax
  40339c:	lea    rsi,[rip+0xffbd]        # 413360 <next_fake@@Base>
  4033a3:	mov    rdi,QWORD PTR [rbp-0x18]
  4033a7:	mov    QWORD PTR [rbp-0x10],rdi
  4033ab:	mov    r8,QWORD PTR [rbp-0x10]
  4033af:	mov    QWORD PTR [rsi],r8
  4033b2:	mov    eax,DWORD PTR [rsi+0x198]
  4033b8:	cmp    eax,0x32
  4033bb:	setb   r9b
  4033bf:	cmp    eax,0x32
  4033c2:	cmovb  rcx,rdx
  4033c6:	lea    rdx,[rip+0xedb3]        # 412180 <__bss_start@@Base+0x18>
  4033cd:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4033d1:	add    rsi,0x1
  4033d5:	mov    QWORD PTR [rdx+rcx*8],rsi
  4033d9:	test   r9b,0x1
  4033dd:	jne    4033e8 <next@@Base+0x78>
  4033e3:	jmp    403417 <next@@Base+0xa7>
  4033e8:	lea    rax,[rip+0xff71]        # 413360 <next_fake@@Base>
  4033ef:	mov    rcx,QWORD PTR [rip+0xeda2]        # 412198 <__bss_start@@Base+0x30>
  4033f6:	add    rcx,0x1
  4033fa:	mov    QWORD PTR [rip+0xed97],rcx        # 412198 <__bss_start@@Base+0x30>
  403401:	mov    edx,DWORD PTR [rax+0x198]
  403407:	mov    ecx,edx
  403409:	mov    rsi,QWORD PTR [rbp-0x10]
  40340d:	mov    QWORD PTR [rax+rcx*8+0x8],rsi
  403412:	jmp    40343f <next@@Base+0xcf>
  403417:	lea    rax,[rip+0xff42]        # 413360 <next_fake@@Base>
  40341e:	mov    rcx,QWORD PTR [rip+0xed7b]        # 4121a0 <__bss_start@@Base+0x38>
  403425:	add    rcx,0x1
  403429:	mov    QWORD PTR [rip+0xed70],rcx        # 4121a0 <__bss_start@@Base+0x38>
  403430:	mov    edx,DWORD PTR [rax+0x1a0]
  403436:	add    edx,0x1
  403439:	mov    DWORD PTR [rax+0x1a0],edx
  40343f:	mov    eax,0x6
  403444:	mov    ecx,eax
  403446:	mov    eax,0x5
  40344b:	mov    edx,eax
  40344d:	lea    rsi,[rip+0x100d4]        # 413528 <fff@@Base>
  403454:	lea    rdi,[rip+0xff05]        # 413360 <next_fake@@Base>
  40345b:	mov    eax,DWORD PTR [rdi+0x198]
  403461:	add    eax,0x1
  403464:	mov    DWORD PTR [rdi+0x198],eax
  40346a:	mov    eax,DWORD PTR [rsi+0x190]
  403470:	cmp    eax,0x32
  403473:	setb   r8b
  403477:	cmp    eax,0x32
  40347a:	cmovb  rcx,rdx
  40347e:	lea    rdx,[rip+0xecfb]        # 412180 <__bss_start@@Base+0x18>
  403485:	mov    rsi,QWORD PTR [rdx+rcx*8]
  403489:	add    rsi,0x1
  40348d:	mov    QWORD PTR [rdx+rcx*8],rsi
  403491:	test   r8b,0x1
  403495:	jne    4034a0 <next@@Base+0x130>
  40349b:	jmp    4034d9 <next@@Base+0x169>
  4034a0:	lea    rax,[rip+0x10081]        # 413528 <fff@@Base>
  4034a7:	lea    rcx,[rip+0xfffffffffffffec2]        # 403370 <next@@Base>
  4034ae:	mov    rdx,QWORD PTR [rip+0xed03]        # 4121b8 <__bss_start@@Base+0x50>
  4034b5:	add    rdx,0x1
  4034b9:	mov    QWORD PTR [rip+0xecf8],rdx        # 4121b8 <__bss_start@@Base+0x50>
  4034c0:	mov    esi,DWORD PTR [rax+0x190]
  4034c6:	mov    edi,esi
  4034c8:	add    edi,0x1
  4034cb:	mov    DWORD PTR [rax+0x190],edi
  4034d1:	mov    esi,esi
  4034d3:	mov    edx,esi
  4034d5:	mov    QWORD PTR [rax+rdx*8],rcx
  4034d9:	mov    eax,0x9
  4034de:	mov    ecx,eax
  4034e0:	mov    eax,0x8
  4034e5:	mov    edx,eax
  4034e7:	lea    rsi,[rip+0xfe72]        # 413360 <next_fake@@Base>
  4034ee:	mov    rsi,QWORD PTR [rsi+0x1c0]
  4034f5:	cmp    rsi,0x0
  4034f9:	setne  dil
  4034fd:	cmp    rsi,0x0
  403501:	cmovne rcx,rdx
  403505:	lea    rdx,[rip+0xec74]        # 412180 <__bss_start@@Base+0x18>
  40350c:	mov    rsi,QWORD PTR [rdx+rcx*8]
  403510:	add    rsi,0x1
  403514:	mov    QWORD PTR [rdx+rcx*8],rsi
  403518:	test   dil,0x1
  40351c:	jne    403527 <next@@Base+0x1b7>
  403522:	jmp    403556 <next@@Base+0x1e6>
  403527:	lea    rax,[rip+0xfe32]        # 413360 <next_fake@@Base>
  40352e:	mov    rcx,QWORD PTR [rip+0xec9b]        # 4121d0 <__bss_start@@Base+0x68>
  403535:	add    rcx,0x1
  403539:	mov    QWORD PTR [rip+0xec90],rcx        # 4121d0 <__bss_start@@Base+0x68>
  403540:	mov    rax,QWORD PTR [rax+0x1c0]
  403547:	mov    rdi,QWORD PTR [rbp-0x10]
  40354b:	call   rax
  40354d:	mov    QWORD PTR [rbp-0x8],rax
  403551:	jmp    40368e <next@@Base+0x31e>
  403556:	mov    eax,0xc
  40355b:	mov    ecx,eax
  40355d:	mov    eax,0xb
  403562:	mov    edx,eax
  403564:	lea    rsi,[rip+0xfdf5]        # 413360 <next_fake@@Base>
  40356b:	mov    eax,DWORD PTR [rsi+0x1b0]
  403571:	cmp    eax,0x0
  403574:	setne  dil
  403578:	cmp    eax,0x0
  40357b:	cmovne rcx,rdx
  40357f:	lea    rdx,[rip+0xebfa]        # 412180 <__bss_start@@Base+0x18>
  403586:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40358a:	add    rsi,0x1
  40358e:	mov    QWORD PTR [rdx+rcx*8],rsi
  403592:	test   dil,0x1
  403596:	jne    4035a1 <next@@Base+0x231>
  40359c:	jmp    40366a <next@@Base+0x2fa>
  4035a1:	mov    eax,0xe
  4035a6:	mov    ecx,eax
  4035a8:	mov    eax,0xd
  4035ad:	mov    edx,eax
  4035af:	lea    rsi,[rip+0xfdaa]        # 413360 <next_fake@@Base>
  4035b6:	mov    eax,DWORD PTR [rsi+0x1b4]
  4035bc:	mov    edi,DWORD PTR [rsi+0x1b0]
  4035c2:	cmp    eax,edi
  4035c4:	setl   r8b
  4035c8:	cmp    eax,edi
  4035ca:	cmovl  rcx,rdx
  4035ce:	lea    rdx,[rip+0xebab]        # 412180 <__bss_start@@Base+0x18>
  4035d5:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4035d9:	add    rsi,0x1
  4035dd:	mov    QWORD PTR [rdx+rcx*8],rsi
  4035e1:	test   r8b,0x1
  4035e5:	jne    4035f0 <next@@Base+0x280>
  4035eb:	jmp    403631 <next@@Base+0x2c1>
  4035f0:	lea    rax,[rip+0xfd69]        # 413360 <next_fake@@Base>
  4035f7:	mov    rcx,QWORD PTR [rip+0xebfa]        # 4121f8 <__bss_start@@Base+0x90>
  4035fe:	add    rcx,0x1
  403602:	mov    QWORD PTR [rip+0xebef],rcx        # 4121f8 <__bss_start@@Base+0x90>
  403609:	mov    rcx,QWORD PTR [rax+0x1b8]
  403610:	mov    edx,DWORD PTR [rax+0x1b4]
  403616:	mov    esi,edx
  403618:	add    esi,0x1
  40361b:	mov    DWORD PTR [rax+0x1b4],esi
  403621:	movsxd rax,edx
  403624:	mov    rax,QWORD PTR [rcx+rax*8]
  403628:	mov    QWORD PTR [rbp-0x8],rax
  40362c:	jmp    40368e <next@@Base+0x31e>
  403631:	lea    rax,[rip+0xfd28]        # 413360 <next_fake@@Base>
  403638:	mov    rcx,QWORD PTR [rip+0xebc1]        # 412200 <__bss_start@@Base+0x98>
  40363f:	add    rcx,0x1
  403643:	mov    QWORD PTR [rip+0xebb6],rcx        # 412200 <__bss_start@@Base+0x98>
  40364a:	mov    rcx,QWORD PTR [rax+0x1b8]
  403651:	mov    edx,DWORD PTR [rax+0x1b0]
  403657:	sub    edx,0x1
  40365a:	movsxd rax,edx
  40365d:	mov    rax,QWORD PTR [rcx+rax*8]
  403661:	mov    QWORD PTR [rbp-0x8],rax
  403665:	jmp    40368e <next@@Base+0x31e>
  40366a:	lea    rax,[rip+0xfcef]        # 413360 <next_fake@@Base>
  403671:	mov    rcx,QWORD PTR [rip+0xeb90]        # 412208 <__bss_start@@Base+0xa0>
  403678:	add    rcx,0x1
  40367c:	mov    QWORD PTR [rip+0xeb85],rcx        # 412208 <__bss_start@@Base+0xa0>
  403683:	mov    rax,QWORD PTR [rax+0x1a8]
  40368a:	mov    QWORD PTR [rbp-0x8],rax
  40368e:	mov    rax,QWORD PTR [rip+0xeb7b]        # 412210 <__bss_start@@Base+0xa8>
  403695:	add    rax,0x1
  403699:	mov    QWORD PTR [rip+0xeb70],rax        # 412210 <__bss_start@@Base+0xa8>
  4036a0:	mov    rax,QWORD PTR [rbp-0x8]
  4036a4:	add    rsp,0x20
  4036a8:	pop    rbp
  4036a9:	ret    
  4036aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004036b0 <next_reset@@Base>:
  4036b0:	push   rbp
  4036b1:	mov    rbp,rsp
  4036b4:	sub    rsp,0x10
  4036b8:	mov    rax,QWORD PTR [rip+0xeb59]        # 412218 <__bss_start@@Base+0xb0>
  4036bf:	add    rax,0x1
  4036c3:	mov    QWORD PTR [rip+0xeb4e],rax        # 412218 <__bss_start@@Base+0xb0>
  4036ca:	lea    rax,[rip+0xfc8f]        # 413360 <next_fake@@Base>
  4036d1:	mov    rcx,rax
  4036d4:	xor    esi,esi
  4036d6:	mov    edx,0x1c8
  4036db:	mov    rdi,QWORD PTR [rip+0xeb3e]        # 412220 <__bss_start@@Base+0xb8>
  4036e2:	add    rdi,0x1
  4036e6:	mov    QWORD PTR [rip+0xeb33],rdi        # 412220 <__bss_start@@Base+0xb8>
  4036ed:	mov    rdi,rcx
  4036f0:	mov    QWORD PTR [rbp-0x8],rax
  4036f4:	call   403150 <memset@plt>
  4036f9:	mov    rax,QWORD PTR [rbp-0x8]
  4036fd:	mov    DWORD PTR [rax+0x19c],0x32
  403707:	add    rsp,0x10
  40370b:	pop    rbp
  40370c:	ret    
  40370d:	nop    DWORD PTR [rax]

0000000000403710 <push_back@@Base>:
  403710:	push   rbp
  403711:	mov    rbp,rsp
  403714:	sub    rsp,0x20
  403718:	mov    rax,QWORD PTR [rip+0xeb11]        # 412230 <__bss_start@@Base+0xc8>
  40371f:	add    rax,0x1
  403723:	mov    QWORD PTR [rip+0xeb06],rax        # 412230 <__bss_start@@Base+0xc8>
  40372a:	mov    QWORD PTR [rbp-0x18],rdi
  40372e:	mov    QWORD PTR [rbp-0x20],rsi
  403732:	mov    eax,0x2
  403737:	mov    ecx,eax
  403739:	mov    eax,0x1
  40373e:	mov    edx,eax
  403740:	lea    rsi,[rip+0xf8d1]        # 413018 <push_back_fake@@Base>
  403747:	mov    rdi,QWORD PTR [rbp-0x18]
  40374b:	mov    QWORD PTR [rbp-0x8],rdi
  40374f:	mov    r8,QWORD PTR [rbp-0x20]
  403753:	mov    QWORD PTR [rbp-0x10],r8
  403757:	mov    r9,QWORD PTR [rbp-0x8]
  40375b:	mov    QWORD PTR [rsi],r9
  40375e:	mov    r9,QWORD PTR [rbp-0x10]
  403762:	mov    QWORD PTR [rsi+0x198],r9
  403769:	mov    eax,DWORD PTR [rsi+0x330]
  40376f:	cmp    eax,0x32
  403772:	setb   r10b
  403776:	cmp    eax,0x32
  403779:	cmovb  rcx,rdx
  40377d:	lea    rdx,[rip+0xeaac]        # 412230 <__bss_start@@Base+0xc8>
  403784:	mov    rsi,QWORD PTR [rdx+rcx*8]
  403788:	add    rsi,0x1
  40378c:	mov    QWORD PTR [rdx+rcx*8],rsi
  403790:	test   r10b,0x1
  403794:	jne    40379f <push_back@@Base+0x8f>
  40379a:	jmp    4037e2 <push_back@@Base+0xd2>
  40379f:	lea    rax,[rip+0xf872]        # 413018 <push_back_fake@@Base>
  4037a6:	mov    rcx,QWORD PTR [rip+0xea9b]        # 412248 <__bss_start@@Base+0xe0>
  4037ad:	add    rcx,0x1
  4037b1:	mov    QWORD PTR [rip+0xea90],rcx        # 412248 <__bss_start@@Base+0xe0>
  4037b8:	mov    edx,DWORD PTR [rax+0x330]
  4037be:	mov    ecx,edx
  4037c0:	mov    rsi,QWORD PTR [rbp-0x8]
  4037c4:	mov    QWORD PTR [rax+rcx*8+0x8],rsi
  4037c9:	mov    edx,DWORD PTR [rax+0x330]
  4037cf:	mov    ecx,edx
  4037d1:	mov    rsi,QWORD PTR [rbp-0x10]
  4037d5:	mov    QWORD PTR [rax+rcx*8+0x1a0],rsi
  4037dd:	jmp    40380a <push_back@@Base+0xfa>
  4037e2:	lea    rax,[rip+0xf82f]        # 413018 <push_back_fake@@Base>
  4037e9:	mov    rcx,QWORD PTR [rip+0xea60]        # 412250 <__bss_start@@Base+0xe8>
  4037f0:	add    rcx,0x1
  4037f4:	mov    QWORD PTR [rip+0xea55],rcx        # 412250 <__bss_start@@Base+0xe8>
  4037fb:	mov    edx,DWORD PTR [rax+0x338]
  403801:	add    edx,0x1
  403804:	mov    DWORD PTR [rax+0x338],edx
  40380a:	mov    eax,0x6
  40380f:	mov    ecx,eax
  403811:	mov    eax,0x5
  403816:	mov    edx,eax
  403818:	lea    rsi,[rip+0xfd09]        # 413528 <fff@@Base>
  40381f:	lea    rdi,[rip+0xf7f2]        # 413018 <push_back_fake@@Base>
  403826:	mov    eax,DWORD PTR [rdi+0x330]
  40382c:	add    eax,0x1
  40382f:	mov    DWORD PTR [rdi+0x330],eax
  403835:	mov    eax,DWORD PTR [rsi+0x190]
  40383b:	cmp    eax,0x32
  40383e:	setb   r8b
  403842:	cmp    eax,0x32
  403845:	cmovb  rcx,rdx
  403849:	lea    rdx,[rip+0xe9e0]        # 412230 <__bss_start@@Base+0xc8>
  403850:	mov    rsi,QWORD PTR [rdx+rcx*8]
  403854:	add    rsi,0x1
  403858:	mov    QWORD PTR [rdx+rcx*8],rsi
  40385c:	test   r8b,0x1
  403860:	jne    40386b <push_back@@Base+0x15b>
  403866:	jmp    4038a4 <push_back@@Base+0x194>
  40386b:	lea    rax,[rip+0xfcb6]        # 413528 <fff@@Base>
  403872:	lea    rcx,[rip+0xfffffffffffffe97]        # 403710 <push_back@@Base>
  403879:	mov    rdx,QWORD PTR [rip+0xe9e8]        # 412268 <__bss_start@@Base+0x100>
  403880:	add    rdx,0x1
  403884:	mov    QWORD PTR [rip+0xe9dd],rdx        # 412268 <__bss_start@@Base+0x100>
  40388b:	mov    esi,DWORD PTR [rax+0x190]
  403891:	mov    edi,esi
  403893:	add    edi,0x1
  403896:	mov    DWORD PTR [rax+0x190],edi
  40389c:	mov    esi,esi
  40389e:	mov    edx,esi
  4038a0:	mov    QWORD PTR [rax+rdx*8],rcx
  4038a4:	mov    eax,0x9
  4038a9:	mov    ecx,eax
  4038ab:	mov    eax,0x8
  4038b0:	mov    edx,eax
  4038b2:	lea    rsi,[rip+0xf75f]        # 413018 <push_back_fake@@Base>
  4038b9:	mov    rsi,QWORD PTR [rsi+0x340]
  4038c0:	cmp    rsi,0x0
  4038c4:	setne  dil
  4038c8:	cmp    rsi,0x0
  4038cc:	cmovne rcx,rdx
  4038d0:	lea    rdx,[rip+0xe959]        # 412230 <__bss_start@@Base+0xc8>
  4038d7:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4038db:	add    rsi,0x1
  4038df:	mov    QWORD PTR [rdx+rcx*8],rsi
  4038e3:	test   dil,0x1
  4038e7:	jne    4038f2 <push_back@@Base+0x1e2>
  4038ed:	jmp    40391c <push_back@@Base+0x20c>
  4038f2:	lea    rax,[rip+0xf71f]        # 413018 <push_back_fake@@Base>
  4038f9:	mov    rcx,QWORD PTR [rip+0xe980]        # 412280 <__bss_start@@Base+0x118>
  403900:	add    rcx,0x1
  403904:	mov    QWORD PTR [rip+0xe975],rcx        # 412280 <__bss_start@@Base+0x118>
  40390b:	mov    rax,QWORD PTR [rax+0x340]
  403912:	mov    rdi,QWORD PTR [rbp-0x8]
  403916:	mov    rsi,QWORD PTR [rbp-0x10]
  40391a:	call   rax
  40391c:	mov    rax,QWORD PTR [rip+0xe965]        # 412288 <__bss_start@@Base+0x120>
  403923:	add    rax,0x1
  403927:	mov    QWORD PTR [rip+0xe95a],rax        # 412288 <__bss_start@@Base+0x120>
  40392e:	add    rsp,0x20
  403932:	pop    rbp
  403933:	ret    
  403934:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40393e:	xchg   ax,ax

0000000000403940 <push_back_reset@@Base>:
  403940:	push   rbp
  403941:	mov    rbp,rsp
  403944:	sub    rsp,0x10
  403948:	mov    rax,QWORD PTR [rip+0xe941]        # 412290 <__bss_start@@Base+0x128>
  40394f:	add    rax,0x1
  403953:	mov    QWORD PTR [rip+0xe936],rax        # 412290 <__bss_start@@Base+0x128>
  40395a:	lea    rax,[rip+0xf6b7]        # 413018 <push_back_fake@@Base>
  403961:	mov    rcx,rax
  403964:	xor    esi,esi
  403966:	mov    edx,0x348
  40396b:	mov    rdi,QWORD PTR [rip+0xe926]        # 412298 <__bss_start@@Base+0x130>
  403972:	add    rdi,0x1
  403976:	mov    QWORD PTR [rip+0xe91b],rdi        # 412298 <__bss_start@@Base+0x130>
  40397d:	mov    rdi,rcx
  403980:	mov    QWORD PTR [rbp-0x8],rax
  403984:	call   403150 <memset@plt>
  403989:	mov    rax,QWORD PTR [rbp-0x8]
  40398d:	mov    DWORD PTR [rax+0x334],0x32
  403997:	add    rsp,0x10
  40399b:	pop    rbp
  40399c:	ret    
  40399d:	nop    DWORD PTR [rax]

00000000004039a0 <setup@@Base>:
  4039a0:	push   rbp
  4039a1:	mov    rbp,rsp
  4039a4:	mov    rax,QWORD PTR [rip+0xe8f5]        # 4122a0 <__bss_start@@Base+0x138>
  4039ab:	add    rax,0x1
  4039af:	mov    QWORD PTR [rip+0xe8ea],rax        # 4122a0 <__bss_start@@Base+0x138>
  4039b6:	mov    rax,QWORD PTR [rip+0xe8eb]        # 4122a8 <__bss_start@@Base+0x140>
  4039bd:	add    rax,0x1
  4039c1:	mov    QWORD PTR [rip+0xe8e0],rax        # 4122a8 <__bss_start@@Base+0x140>
  4039c8:	call   4036b0 <next_reset@@Base>
  4039cd:	call   403940 <push_back_reset@@Base>
  4039d2:	pop    rbp
  4039d3:	ret    
  4039d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039de:	xchg   ax,ax

00000000004039e0 <no_int_as_first_stuff@@Base>:
  4039e0:	push   rbp
  4039e1:	mov    rbp,rsp
  4039e4:	sub    rsp,0x30
  4039e8:	mov    rax,QWORD PTR [rip+0xe8c1]        # 4122b0 <__bss_start@@Base+0x148>
  4039ef:	add    rax,0x1
  4039f3:	mov    QWORD PTR [rip+0xe8b6],rax        # 4122b0 <__bss_start@@Base+0x148>
  4039fa:	lea    rdi,[rbp-0x20]
  4039fe:	lea    rsi,[rbp-0x18]
  403a02:	call   409190 <init_grammar@@Base>
  403a07:	mov    eax,0x4
  403a0c:	mov    edi,eax
  403a0e:	mov    QWORD PTR [rbp-0x28],0x0
  403a16:	call   4031c0 <malloc@plt>
  403a1b:	mov    QWORD PTR [rbp-0x30],rax
  403a1f:	mov    rax,QWORD PTR [rbp-0x30]
  403a23:	mov    rdi,rax
  403a26:	call   4071f0 <init_token_opar@@Base>
  403a2b:	lea    rax,[rip+0xf92e]        # 413360 <next_fake@@Base>
  403a32:	mov    rsi,QWORD PTR [rbp-0x30]
  403a36:	mov    QWORD PTR [rax+0x1a8],rsi
  403a3d:	lea    rdi,[rbp-0x20]
  403a41:	call   409270 <read_function_ast_node@@Base>
  403a46:	mov    ecx,0x2
  403a4b:	mov    esi,ecx
  403a4d:	mov    ecx,0x1
  403a52:	mov    edi,ecx
  403a54:	lea    rdx,[rip+0xf905]        # 413360 <next_fake@@Base>
  403a5b:	mov    QWORD PTR [rbp-0x28],rax
  403a5f:	mov    ecx,DWORD PTR [rdx+0x198]
  403a65:	cmp    ecx,0x1
  403a68:	sete   r8b
  403a6c:	cmp    ecx,0x1
  403a6f:	cmove  rsi,rdi
  403a73:	lea    rax,[rip+0xe836]        # 4122b0 <__bss_start@@Base+0x148>
  403a7a:	mov    rdx,QWORD PTR [rax+rsi*8]
  403a7e:	add    rdx,0x1
  403a82:	mov    QWORD PTR [rax+rsi*8],rdx
  403a86:	test   r8b,0x1
  403a8a:	jne    403a95 <no_int_as_first_stuff@@Base+0xb5>
  403a90:	jmp    403aac <no_int_as_first_stuff@@Base+0xcc>
  403a95:	mov    rax,QWORD PTR [rip+0xe82c]        # 4122c8 <__bss_start@@Base+0x160>
  403a9c:	add    rax,0x1
  403aa0:	mov    QWORD PTR [rip+0xe821],rax        # 4122c8 <__bss_start@@Base+0x160>
  403aa7:	jmp    403acb <no_int_as_first_stuff@@Base+0xeb>
  403aac:	lea    rdi,[rip+0x9551]        # 40d004 <_IO_stdin_used@@Base+0x4>
  403ab3:	lea    rsi,[rip+0x9564]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403aba:	mov    edx,0x29
  403abf:	lea    rcx,[rip+0x95b6]        # 40d07c <_IO_stdin_used@@Base+0x7c>
  403ac6:	call   403140 <__assert_fail@plt>
  403acb:	mov    eax,0x5
  403ad0:	mov    ecx,eax
  403ad2:	mov    eax,0x4
  403ad7:	mov    edx,eax
  403ad9:	mov    rsi,QWORD PTR [rbp-0x28]
  403add:	cmp    rsi,0x0
  403ae1:	sete   dil
  403ae5:	cmp    rsi,0x0
  403ae9:	cmove  rcx,rdx
  403aed:	lea    rdx,[rip+0xe7bc]        # 4122b0 <__bss_start@@Base+0x148>
  403af4:	mov    rsi,QWORD PTR [rdx+rcx*8]
  403af8:	add    rsi,0x1
  403afc:	mov    QWORD PTR [rdx+rcx*8],rsi
  403b00:	test   dil,0x1
  403b04:	jne    403b0f <no_int_as_first_stuff@@Base+0x12f>
  403b0a:	jmp    403b26 <no_int_as_first_stuff@@Base+0x146>
  403b0f:	mov    rax,QWORD PTR [rip+0xe7ca]        # 4122e0 <__bss_start@@Base+0x178>
  403b16:	add    rax,0x1
  403b1a:	mov    QWORD PTR [rip+0xe7bf],rax        # 4122e0 <__bss_start@@Base+0x178>
  403b21:	jmp    403b45 <no_int_as_first_stuff@@Base+0x165>
  403b26:	lea    rdi,[rip+0x956c]        # 40d099 <_IO_stdin_used@@Base+0x99>
  403b2d:	lea    rsi,[rip+0x94ea]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403b34:	mov    edx,0x2a
  403b39:	lea    rcx,[rip+0x953c]        # 40d07c <_IO_stdin_used@@Base+0x7c>
  403b40:	call   403140 <__assert_fail@plt>
  403b45:	mov    rax,QWORD PTR [rip+0xe79c]        # 4122e8 <__bss_start@@Base+0x180>
  403b4c:	add    rax,0x1
  403b50:	mov    QWORD PTR [rip+0xe791],rax        # 4122e8 <__bss_start@@Base+0x180>
  403b57:	add    rsp,0x30
  403b5b:	pop    rbp
  403b5c:	ret    
  403b5d:	nop    DWORD PTR [rax]

0000000000403b60 <int_but_not_followed_by_function@@Base>:
  403b60:	push   rbp
  403b61:	mov    rbp,rsp
  403b64:	sub    rsp,0x30
  403b68:	mov    rax,QWORD PTR [rip+0xe781]        # 4122f0 <__bss_start@@Base+0x188>
  403b6f:	add    rax,0x1
  403b73:	mov    QWORD PTR [rip+0xe776],rax        # 4122f0 <__bss_start@@Base+0x188>
  403b7a:	mov    QWORD PTR [rbp-0x30],0x0
  403b82:	lea    rdi,[rbp-0x20]
  403b86:	lea    rsi,[rbp-0x18]
  403b8a:	call   409190 <init_grammar@@Base>
  403b8f:	mov    eax,0x10
  403b94:	mov    edi,eax
  403b96:	call   4031c0 <malloc@plt>
  403b9b:	mov    ecx,0x4
  403ba0:	mov    edi,ecx
  403ba2:	mov    QWORD PTR [rbp-0x28],rax
  403ba6:	call   4031c0 <malloc@plt>
  403bab:	mov    rsi,QWORD PTR [rbp-0x28]
  403baf:	mov    QWORD PTR [rsi],rax
  403bb2:	mov    rax,QWORD PTR [rbp-0x28]
  403bb6:	mov    rax,QWORD PTR [rax]
  403bb9:	mov    rdi,rax
  403bbc:	call   4070f0 <init_token_int_type@@Base>
  403bc1:	mov    ecx,0x4
  403bc6:	mov    edi,ecx
  403bc8:	call   4031c0 <malloc@plt>
  403bcd:	mov    rsi,QWORD PTR [rbp-0x28]
  403bd1:	mov    QWORD PTR [rsi+0x8],rax
  403bd5:	mov    rax,QWORD PTR [rbp-0x28]
  403bd9:	mov    rax,QWORD PTR [rax+0x8]
  403bdd:	mov    rdi,rax
  403be0:	call   4071f0 <init_token_opar@@Base>
  403be5:	lea    rax,[rip+0xf774]        # 413360 <next_fake@@Base>
  403bec:	mov    rsi,QWORD PTR [rbp-0x28]
  403bf0:	mov    QWORD PTR [rax+0x1b8],rsi
  403bf7:	mov    DWORD PTR [rax+0x1b0],0x2
  403c01:	lea    rdi,[rbp-0x20]
  403c05:	call   409270 <read_function_ast_node@@Base>
  403c0a:	mov    ecx,0x2
  403c0f:	mov    esi,ecx
  403c11:	mov    ecx,0x1
  403c16:	mov    edi,ecx
  403c18:	lea    rdx,[rip+0xf741]        # 413360 <next_fake@@Base>
  403c1f:	mov    QWORD PTR [rbp-0x30],rax
  403c23:	mov    ecx,DWORD PTR [rdx+0x198]
  403c29:	cmp    ecx,0x2
  403c2c:	sete   r8b
  403c30:	cmp    ecx,0x2
  403c33:	cmove  rsi,rdi
  403c37:	lea    rax,[rip+0xe6b2]        # 4122f0 <__bss_start@@Base+0x188>
  403c3e:	mov    rdx,QWORD PTR [rax+rsi*8]
  403c42:	add    rdx,0x1
  403c46:	mov    QWORD PTR [rax+rsi*8],rdx
  403c4a:	test   r8b,0x1
  403c4e:	jne    403c59 <int_but_not_followed_by_function@@Base+0xf9>
  403c54:	jmp    403c70 <int_but_not_followed_by_function@@Base+0x110>
  403c59:	mov    rax,QWORD PTR [rip+0xe6a8]        # 412308 <__bss_start@@Base+0x1a0>
  403c60:	add    rax,0x1
  403c64:	mov    QWORD PTR [rip+0xe69d],rax        # 412308 <__bss_start@@Base+0x1a0>
  403c6b:	jmp    403c8f <int_but_not_followed_by_function@@Base+0x12f>
  403c70:	lea    rdi,[rip+0x942e]        # 40d0a5 <_IO_stdin_used@@Base+0xa5>
  403c77:	lea    rsi,[rip+0x93a0]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403c7e:	mov    edx,0x43
  403c83:	lea    rcx,[rip+0x9435]        # 40d0bf <_IO_stdin_used@@Base+0xbf>
  403c8a:	call   403140 <__assert_fail@plt>
  403c8f:	mov    eax,0x5
  403c94:	mov    ecx,eax
  403c96:	mov    eax,0x4
  403c9b:	mov    edx,eax
  403c9d:	mov    rsi,QWORD PTR [rbp-0x30]
  403ca1:	cmp    rsi,0x0
  403ca5:	sete   dil
  403ca9:	cmp    rsi,0x0
  403cad:	cmove  rcx,rdx
  403cb1:	lea    rdx,[rip+0xe638]        # 4122f0 <__bss_start@@Base+0x188>
  403cb8:	mov    rsi,QWORD PTR [rdx+rcx*8]
  403cbc:	add    rsi,0x1
  403cc0:	mov    QWORD PTR [rdx+rcx*8],rsi
  403cc4:	test   dil,0x1
  403cc8:	jne    403cd3 <int_but_not_followed_by_function@@Base+0x173>
  403cce:	jmp    403cea <int_but_not_followed_by_function@@Base+0x18a>
  403cd3:	mov    rax,QWORD PTR [rip+0xe646]        # 412320 <__bss_start@@Base+0x1b8>
  403cda:	add    rax,0x1
  403cde:	mov    QWORD PTR [rip+0xe63b],rax        # 412320 <__bss_start@@Base+0x1b8>
  403ce5:	jmp    403d09 <int_but_not_followed_by_function@@Base+0x1a9>
  403cea:	lea    rdi,[rip+0x93a8]        # 40d099 <_IO_stdin_used@@Base+0x99>
  403cf1:	lea    rsi,[rip+0x9326]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403cf8:	mov    edx,0x44
  403cfd:	lea    rcx,[rip+0x93bb]        # 40d0bf <_IO_stdin_used@@Base+0xbf>
  403d04:	call   403140 <__assert_fail@plt>
  403d09:	mov    rax,QWORD PTR [rip+0xe618]        # 412328 <__bss_start@@Base+0x1c0>
  403d10:	add    rax,0x1
  403d14:	mov    QWORD PTR [rip+0xe60d],rax        # 412328 <__bss_start@@Base+0x1c0>
  403d1b:	add    rsp,0x30
  403d1f:	pop    rbp
  403d20:	ret    
  403d21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d30 <boolean_expression_is_read_properly@@Base>:
  403d30:	push   rbp
  403d31:	mov    rbp,rsp
  403d34:	sub    rsp,0x40
  403d38:	mov    rax,QWORD PTR [rip+0xe5f1]        # 412330 <__bss_start@@Base+0x1c8>
  403d3f:	add    rax,0x1
  403d43:	mov    QWORD PTR [rip+0xe5e6],rax        # 412330 <__bss_start@@Base+0x1c8>
  403d4a:	mov    eax,0x3
  403d4f:	mov    edi,eax
  403d51:	mov    QWORD PTR [rbp-0x30],0x0
  403d59:	mov    QWORD PTR [rbp-0x38],0x0
  403d61:	call   4031c0 <malloc@plt>
  403d66:	mov    QWORD PTR [rbp-0x40],rax
  403d6a:	mov    rax,QWORD PTR [rbp-0x40]
  403d6e:	mov    BYTE PTR [rax],0x21
  403d71:	mov    rax,QWORD PTR [rbp-0x40]
  403d75:	mov    BYTE PTR [rax+0x1],0x3d
  403d79:	mov    rax,QWORD PTR [rbp-0x40]
  403d7d:	mov    BYTE PTR [rax+0x2],0x0
  403d81:	lea    rdi,[rbp-0x20]
  403d85:	lea    rsi,[rbp-0x18]
  403d89:	call   409190 <init_grammar@@Base>
  403d8e:	mov    ecx,0x28
  403d93:	mov    edi,ecx
  403d95:	call   4031c0 <malloc@plt>
  403d9a:	mov    ecx,0x8
  403d9f:	mov    edi,ecx
  403da1:	mov    QWORD PTR [rbp-0x28],rax
  403da5:	call   4031c0 <malloc@plt>
  403daa:	mov    rsi,QWORD PTR [rbp-0x28]
  403dae:	mov    QWORD PTR [rsi],rax
  403db1:	mov    rax,QWORD PTR [rbp-0x28]
  403db5:	mov    rax,QWORD PTR [rax]
  403db8:	mov    rdi,rax
  403dbb:	mov    esi,0x2
  403dc0:	call   407130 <init_token_int_value@@Base>
  403dc5:	mov    ecx,0x8
  403dca:	mov    edi,ecx
  403dcc:	call   4031c0 <malloc@plt>
  403dd1:	mov    rdi,QWORD PTR [rbp-0x28]
  403dd5:	mov    QWORD PTR [rdi+0x8],rax
  403dd9:	mov    rax,QWORD PTR [rbp-0x28]
  403ddd:	mov    rax,QWORD PTR [rax+0x8]
  403de1:	mov    rdi,rax
  403de4:	mov    esi,0x2
  403de9:	call   407130 <init_token_int_value@@Base>
  403dee:	mov    ecx,0x10
  403df3:	mov    edi,ecx
  403df5:	call   4031c0 <malloc@plt>
  403dfa:	mov    rdi,QWORD PTR [rbp-0x28]
  403dfe:	mov    QWORD PTR [rdi+0x10],rax
  403e02:	mov    rax,QWORD PTR [rbp-0x28]
  403e06:	mov    rax,QWORD PTR [rax+0x10]
  403e0a:	mov    rsi,QWORD PTR [rbp-0x40]
  403e0e:	mov    rdi,rax
  403e11:	call   407430 <init_token_boolean_op@@Base>
  403e16:	mov    ecx,0x8
  403e1b:	mov    edi,ecx
  403e1d:	call   4031c0 <malloc@plt>
  403e22:	mov    rsi,QWORD PTR [rbp-0x28]
  403e26:	mov    QWORD PTR [rsi+0x18],rax
  403e2a:	mov    rax,QWORD PTR [rbp-0x28]
  403e2e:	mov    rax,QWORD PTR [rax+0x18]
  403e32:	mov    rdi,rax
  403e35:	mov    esi,0x1
  403e3a:	call   407130 <init_token_int_value@@Base>
  403e3f:	mov    ecx,0x4
  403e44:	mov    edi,ecx
  403e46:	call   4031c0 <malloc@plt>
  403e4b:	mov    rdi,QWORD PTR [rbp-0x28]
  403e4f:	mov    QWORD PTR [rdi+0x20],rax
  403e53:	mov    rax,QWORD PTR [rbp-0x28]
  403e57:	mov    rax,QWORD PTR [rax+0x20]
  403e5b:	mov    rdi,rax
  403e5e:	call   407230 <init_token_cpar@@Base>
  403e63:	lea    rax,[rip+0xf4f6]        # 413360 <next_fake@@Base>
  403e6a:	mov    rdi,QWORD PTR [rbp-0x28]
  403e6e:	mov    QWORD PTR [rax+0x1b8],rdi
  403e75:	mov    DWORD PTR [rax+0x1b0],0x5
  403e7f:	lea    rdi,[rbp-0x20]
  403e83:	call   409c30 <read_boolean_expression@@Base>
  403e88:	mov    ecx,0x2
  403e8d:	mov    edi,ecx
  403e8f:	mov    ecx,0x1
  403e94:	mov    edx,ecx
  403e96:	lea    r8,[rip+0xf4c3]        # 413360 <next_fake@@Base>
  403e9d:	mov    QWORD PTR [rbp-0x30],rax
  403ea1:	mov    ecx,DWORD PTR [r8+0x198]
  403ea8:	cmp    ecx,0x5
  403eab:	sete   r9b
  403eaf:	cmp    ecx,0x5
  403eb2:	cmove  rdi,rdx
  403eb6:	lea    rax,[rip+0xe473]        # 412330 <__bss_start@@Base+0x1c8>
  403ebd:	mov    rdx,QWORD PTR [rax+rdi*8]
  403ec1:	add    rdx,0x1
  403ec5:	mov    QWORD PTR [rax+rdi*8],rdx
  403ec9:	test   r9b,0x1
  403ecd:	jne    403ed8 <boolean_expression_is_read_properly@@Base+0x1a8>
  403ed3:	jmp    403eef <boolean_expression_is_read_properly@@Base+0x1bf>
  403ed8:	mov    rax,QWORD PTR [rip+0xe469]        # 412348 <__bss_start@@Base+0x1e0>
  403edf:	add    rax,0x1
  403ee3:	mov    QWORD PTR [rip+0xe45e],rax        # 412348 <__bss_start@@Base+0x1e0>
  403eea:	jmp    403f0e <boolean_expression_is_read_properly@@Base+0x1de>
  403eef:	lea    rdi,[rip+0x91f1]        # 40d0e7 <_IO_stdin_used@@Base+0xe7>
  403ef6:	lea    rsi,[rip+0x9121]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403efd:	mov    edx,0x69
  403f02:	lea    rcx,[rip+0x91f8]        # 40d101 <_IO_stdin_used@@Base+0x101>
  403f09:	call   403140 <__assert_fail@plt>
  403f0e:	mov    eax,0x5
  403f13:	mov    ecx,eax
  403f15:	mov    eax,0x4
  403f1a:	mov    edx,eax
  403f1c:	lea    rsi,[rip+0xf0f5]        # 413018 <push_back_fake@@Base>
  403f23:	mov    eax,DWORD PTR [rsi+0x330]
  403f29:	cmp    eax,0x1
  403f2c:	sete   dil
  403f30:	cmp    eax,0x1
  403f33:	cmove  rcx,rdx
  403f37:	lea    rdx,[rip+0xe3f2]        # 412330 <__bss_start@@Base+0x1c8>
  403f3e:	mov    rsi,QWORD PTR [rdx+rcx*8]
  403f42:	add    rsi,0x1
  403f46:	mov    QWORD PTR [rdx+rcx*8],rsi
  403f4a:	test   dil,0x1
  403f4e:	jne    403f59 <boolean_expression_is_read_properly@@Base+0x229>
  403f54:	jmp    403f70 <boolean_expression_is_read_properly@@Base+0x240>
  403f59:	mov    rax,QWORD PTR [rip+0xe400]        # 412360 <__bss_start@@Base+0x1f8>
  403f60:	add    rax,0x1
  403f64:	mov    QWORD PTR [rip+0xe3f5],rax        # 412360 <__bss_start@@Base+0x1f8>
  403f6b:	jmp    403f8f <boolean_expression_is_read_properly@@Base+0x25f>
  403f70:	lea    rdi,[rip+0x91b5]        # 40d12c <_IO_stdin_used@@Base+0x12c>
  403f77:	lea    rsi,[rip+0x90a0]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403f7e:	mov    edx,0x6a
  403f83:	lea    rcx,[rip+0x9177]        # 40d101 <_IO_stdin_used@@Base+0x101>
  403f8a:	call   403140 <__assert_fail@plt>
  403f8f:	mov    eax,0x8
  403f94:	mov    ecx,eax
  403f96:	mov    eax,0x7
  403f9b:	mov    edx,eax
  403f9d:	mov    rsi,QWORD PTR [rbp-0x30]
  403fa1:	mov    eax,DWORD PTR [rsi]
  403fa3:	cmp    eax,0x5
  403fa6:	sete   dil
  403faa:	cmp    eax,0x5
  403fad:	cmove  rcx,rdx
  403fb1:	lea    rdx,[rip+0xe378]        # 412330 <__bss_start@@Base+0x1c8>
  403fb8:	mov    rsi,QWORD PTR [rdx+rcx*8]
  403fbc:	add    rsi,0x1
  403fc0:	mov    QWORD PTR [rdx+rcx*8],rsi
  403fc4:	test   dil,0x1
  403fc8:	jne    403fd3 <boolean_expression_is_read_properly@@Base+0x2a3>
  403fce:	jmp    403fea <boolean_expression_is_read_properly@@Base+0x2ba>
  403fd3:	mov    rax,QWORD PTR [rip+0xe39e]        # 412378 <__bss_start@@Base+0x210>
  403fda:	add    rax,0x1
  403fde:	mov    QWORD PTR [rip+0xe393],rax        # 412378 <__bss_start@@Base+0x210>
  403fe5:	jmp    404009 <boolean_expression_is_read_properly@@Base+0x2d9>
  403fea:	lea    rdi,[rip+0x915a]        # 40d14b <_IO_stdin_used@@Base+0x14b>
  403ff1:	lea    rsi,[rip+0x9026]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403ff8:	mov    edx,0x6b
  403ffd:	lea    rcx,[rip+0x90fd]        # 40d101 <_IO_stdin_used@@Base+0x101>
  404004:	call   403140 <__assert_fail@plt>
  404009:	mov    rax,QWORD PTR [rip+0xe370]        # 412380 <__bss_start@@Base+0x218>
  404010:	add    rax,0x1
  404014:	mov    QWORD PTR [rip+0xe365],rax        # 412380 <__bss_start@@Base+0x218>
  40401b:	add    rsp,0x40
  40401f:	pop    rbp
  404020:	ret    
  404021:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40402b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404030 <boolean_expression_complex@@Base>:
  404030:	push   rbp
  404031:	mov    rbp,rsp
  404034:	sub    rsp,0x50
  404038:	mov    rax,QWORD PTR [rip+0xe351]        # 412390 <__bss_start@@Base+0x228>
  40403f:	add    rax,0x1
  404043:	mov    QWORD PTR [rip+0xe346],rax        # 412390 <__bss_start@@Base+0x228>
  40404a:	mov    eax,0x3
  40404f:	mov    edi,eax
  404051:	mov    QWORD PTR [rbp-0x30],0x0
  404059:	mov    QWORD PTR [rbp-0x38],0x0
  404061:	call   4031c0 <malloc@plt>
  404066:	mov    ecx,0x3
  40406b:	mov    edi,ecx
  40406d:	mov    QWORD PTR [rbp-0x40],rax
  404071:	call   4031c0 <malloc@plt>
  404076:	mov    ecx,0x3
  40407b:	mov    edi,ecx
  40407d:	mov    QWORD PTR [rbp-0x48],rax
  404081:	call   4031c0 <malloc@plt>
  404086:	mov    QWORD PTR [rbp-0x50],rax
  40408a:	mov    rax,QWORD PTR [rbp-0x40]
  40408e:	mov    BYTE PTR [rax],0x3c
  404091:	mov    rax,QWORD PTR [rbp-0x40]
  404095:	mov    BYTE PTR [rax+0x1],0x3d
  404099:	mov    rax,QWORD PTR [rbp-0x40]
  40409d:	mov    BYTE PTR [rax+0x2],0x0
  4040a1:	mov    rax,QWORD PTR [rbp-0x48]
  4040a5:	mov    BYTE PTR [rax],0x26
  4040a8:	mov    rax,QWORD PTR [rbp-0x48]
  4040ac:	mov    BYTE PTR [rax+0x1],0x26
  4040b0:	mov    rax,QWORD PTR [rbp-0x48]
  4040b4:	mov    BYTE PTR [rax+0x2],0x0
  4040b8:	mov    rax,QWORD PTR [rbp-0x50]
  4040bc:	mov    BYTE PTR [rax],0x3d
  4040bf:	mov    rax,QWORD PTR [rbp-0x50]
  4040c3:	mov    BYTE PTR [rax+0x1],0x3d
  4040c7:	mov    rax,QWORD PTR [rbp-0x50]
  4040cb:	mov    BYTE PTR [rax+0x2],0x0
  4040cf:	lea    rdi,[rbp-0x20]
  4040d3:	lea    rsi,[rbp-0x18]
  4040d7:	call   409190 <init_grammar@@Base>
  4040dc:	mov    ecx,0x50
  4040e1:	mov    edi,ecx
  4040e3:	call   4031c0 <malloc@plt>
  4040e8:	mov    ecx,0x8
  4040ed:	mov    edi,ecx
  4040ef:	mov    QWORD PTR [rbp-0x28],rax
  4040f3:	call   4031c0 <malloc@plt>
  4040f8:	mov    rsi,QWORD PTR [rbp-0x28]
  4040fc:	mov    QWORD PTR [rsi],rax
  4040ff:	mov    rax,QWORD PTR [rbp-0x28]
  404103:	mov    rax,QWORD PTR [rax]
  404106:	mov    rdi,rax
  404109:	mov    esi,0x2
  40410e:	call   407130 <init_token_int_value@@Base>
  404113:	mov    ecx,0x8
  404118:	mov    edi,ecx
  40411a:	call   4031c0 <malloc@plt>
  40411f:	mov    rdi,QWORD PTR [rbp-0x28]
  404123:	mov    QWORD PTR [rdi+0x8],rax
  404127:	mov    rax,QWORD PTR [rbp-0x28]
  40412b:	mov    rax,QWORD PTR [rax+0x8]
  40412f:	mov    rdi,rax
  404132:	mov    esi,0x2
  404137:	call   407130 <init_token_int_value@@Base>
  40413c:	mov    ecx,0x10
  404141:	mov    edi,ecx
  404143:	call   4031c0 <malloc@plt>
  404148:	mov    rdi,QWORD PTR [rbp-0x28]
  40414c:	mov    QWORD PTR [rdi+0x10],rax
  404150:	mov    rax,QWORD PTR [rbp-0x28]
  404154:	mov    rax,QWORD PTR [rax+0x10]
  404158:	mov    rsi,QWORD PTR [rbp-0x40]
  40415c:	mov    rdi,rax
  40415f:	call   407430 <init_token_boolean_op@@Base>
  404164:	mov    ecx,0x8
  404169:	mov    edi,ecx
  40416b:	call   4031c0 <malloc@plt>
  404170:	mov    rsi,QWORD PTR [rbp-0x28]
  404174:	mov    QWORD PTR [rsi+0x18],rax
  404178:	mov    rax,QWORD PTR [rbp-0x28]
  40417c:	mov    rax,QWORD PTR [rax+0x18]
  404180:	mov    rdi,rax
  404183:	mov    esi,0x1
  404188:	call   407130 <init_token_int_value@@Base>
  40418d:	mov    ecx,0x10
  404192:	mov    edi,ecx
  404194:	call   4031c0 <malloc@plt>
  404199:	mov    rdi,QWORD PTR [rbp-0x28]
  40419d:	mov    QWORD PTR [rdi+0x20],rax
  4041a1:	mov    rax,QWORD PTR [rbp-0x28]
  4041a5:	mov    rax,QWORD PTR [rax+0x20]
  4041a9:	mov    rsi,QWORD PTR [rbp-0x48]
  4041ad:	mov    rdi,rax
  4041b0:	call   407430 <init_token_boolean_op@@Base>
  4041b5:	mov    ecx,0x8
  4041ba:	mov    edi,ecx
  4041bc:	call   4031c0 <malloc@plt>
  4041c1:	mov    rsi,QWORD PTR [rbp-0x28]
  4041c5:	mov    QWORD PTR [rsi+0x28],rax
  4041c9:	mov    rax,QWORD PTR [rbp-0x28]
  4041cd:	mov    rax,QWORD PTR [rax+0x28]
  4041d1:	mov    rdi,rax
  4041d4:	mov    esi,0x4
  4041d9:	call   407130 <init_token_int_value@@Base>
  4041de:	mov    ecx,0x8
  4041e3:	mov    edi,ecx
  4041e5:	call   4031c0 <malloc@plt>
  4041ea:	mov    rdi,QWORD PTR [rbp-0x28]
  4041ee:	mov    QWORD PTR [rdi+0x30],rax
  4041f2:	mov    rax,QWORD PTR [rbp-0x28]
  4041f6:	mov    rax,QWORD PTR [rax+0x30]
  4041fa:	mov    rdi,rax
  4041fd:	mov    esi,0x4
  404202:	call   407130 <init_token_int_value@@Base>
  404207:	mov    ecx,0x10
  40420c:	mov    edi,ecx
  40420e:	call   4031c0 <malloc@plt>
  404213:	mov    rdi,QWORD PTR [rbp-0x28]
  404217:	mov    QWORD PTR [rdi+0x38],rax
  40421b:	mov    rax,QWORD PTR [rbp-0x28]
  40421f:	mov    rax,QWORD PTR [rax+0x38]
  404223:	mov    rsi,QWORD PTR [rbp-0x50]
  404227:	mov    rdi,rax
  40422a:	call   407430 <init_token_boolean_op@@Base>
  40422f:	mov    ecx,0x8
  404234:	mov    edi,ecx
  404236:	call   4031c0 <malloc@plt>
  40423b:	mov    rsi,QWORD PTR [rbp-0x28]
  40423f:	mov    QWORD PTR [rsi+0x40],rax
  404243:	mov    rax,QWORD PTR [rbp-0x28]
  404247:	mov    rax,QWORD PTR [rax+0x40]
  40424b:	mov    rdi,rax
  40424e:	mov    esi,0x4
  404253:	call   407130 <init_token_int_value@@Base>
  404258:	mov    ecx,0x4
  40425d:	mov    edi,ecx
  40425f:	call   4031c0 <malloc@plt>
  404264:	mov    rdi,QWORD PTR [rbp-0x28]
  404268:	mov    QWORD PTR [rdi+0x48],rax
  40426c:	mov    rax,QWORD PTR [rbp-0x28]
  404270:	mov    rax,QWORD PTR [rax+0x48]
  404274:	mov    rdi,rax
  404277:	call   407230 <init_token_cpar@@Base>
  40427c:	lea    rax,[rip+0xf0dd]        # 413360 <next_fake@@Base>
  404283:	mov    rdi,QWORD PTR [rbp-0x28]
  404287:	mov    QWORD PTR [rax+0x1b8],rdi
  40428e:	mov    DWORD PTR [rax+0x1b0],0xa
  404298:	lea    rdi,[rbp-0x20]
  40429c:	call   409c30 <read_boolean_expression@@Base>
  4042a1:	mov    ecx,0x2
  4042a6:	mov    edi,ecx
  4042a8:	mov    ecx,0x1
  4042ad:	mov    edx,ecx
  4042af:	lea    r8,[rip+0xf0aa]        # 413360 <next_fake@@Base>
  4042b6:	mov    QWORD PTR [rbp-0x30],rax
  4042ba:	mov    ecx,DWORD PTR [r8+0x198]
  4042c1:	cmp    ecx,0xa
  4042c4:	sete   r9b
  4042c8:	cmp    ecx,0xa
  4042cb:	cmove  rdi,rdx
  4042cf:	lea    rax,[rip+0xe0ba]        # 412390 <__bss_start@@Base+0x228>
  4042d6:	mov    rdx,QWORD PTR [rax+rdi*8]
  4042da:	add    rdx,0x1
  4042de:	mov    QWORD PTR [rax+rdi*8],rdx
  4042e2:	test   r9b,0x1
  4042e6:	jne    4042f1 <boolean_expression_complex@@Base+0x2c1>
  4042ec:	jmp    404308 <boolean_expression_complex@@Base+0x2d8>
  4042f1:	mov    rax,QWORD PTR [rip+0xe0b0]        # 4123a8 <__bss_start@@Base+0x240>
  4042f8:	add    rax,0x1
  4042fc:	mov    QWORD PTR [rip+0xe0a5],rax        # 4123a8 <__bss_start@@Base+0x240>
  404303:	jmp    404327 <boolean_expression_complex@@Base+0x2f7>
  404308:	lea    rdi,[rip+0x8e5c]        # 40d16b <_IO_stdin_used@@Base+0x16b>
  40430f:	lea    rsi,[rip+0x8d08]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404316:	mov    edx,0xa6
  40431b:	lea    rcx,[rip+0x8e64]        # 40d186 <_IO_stdin_used@@Base+0x186>
  404322:	call   403140 <__assert_fail@plt>
  404327:	mov    eax,0x5
  40432c:	mov    ecx,eax
  40432e:	mov    eax,0x4
  404333:	mov    edx,eax
  404335:	mov    rsi,QWORD PTR [rbp-0x30]
  404339:	mov    eax,DWORD PTR [rsi]
  40433b:	cmp    eax,0x5
  40433e:	sete   dil
  404342:	cmp    eax,0x5
  404345:	cmove  rcx,rdx
  404349:	lea    rdx,[rip+0xe040]        # 412390 <__bss_start@@Base+0x228>
  404350:	mov    rsi,QWORD PTR [rdx+rcx*8]
  404354:	add    rsi,0x1
  404358:	mov    QWORD PTR [rdx+rcx*8],rsi
  40435c:	test   dil,0x1
  404360:	jne    40436b <boolean_expression_complex@@Base+0x33b>
  404366:	jmp    404382 <boolean_expression_complex@@Base+0x352>
  40436b:	mov    rax,QWORD PTR [rip+0xe04e]        # 4123c0 <__bss_start@@Base+0x258>
  404372:	add    rax,0x1
  404376:	mov    QWORD PTR [rip+0xe043],rax        # 4123c0 <__bss_start@@Base+0x258>
  40437d:	jmp    4043a1 <boolean_expression_complex@@Base+0x371>
  404382:	lea    rdi,[rip+0x8dc2]        # 40d14b <_IO_stdin_used@@Base+0x14b>
  404389:	lea    rsi,[rip+0x8c8e]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404390:	mov    edx,0xa7
  404395:	lea    rcx,[rip+0x8dea]        # 40d186 <_IO_stdin_used@@Base+0x186>
  40439c:	call   403140 <__assert_fail@plt>
  4043a1:	mov    rax,QWORD PTR [rip+0xe020]        # 4123c8 <__bss_start@@Base+0x260>
  4043a8:	add    rax,0x1
  4043ac:	mov    QWORD PTR [rip+0xe015],rax        # 4123c8 <__bss_start@@Base+0x260>
  4043b3:	add    rsp,0x50
  4043b7:	pop    rbp
  4043b8:	ret    
  4043b9:	nop    DWORD PTR [rax+0x0]

00000000004043c0 <boolean_binary_operator_is_read_properly@@Base>:
  4043c0:	push   rbp
  4043c1:	mov    rbp,rsp
  4043c4:	sub    rsp,0x40
  4043c8:	mov    rax,QWORD PTR [rip+0xe001]        # 4123d0 <__bss_start@@Base+0x268>
  4043cf:	add    rax,0x1
  4043d3:	mov    QWORD PTR [rip+0xdff6],rax        # 4123d0 <__bss_start@@Base+0x268>
  4043da:	mov    eax,0x3
  4043df:	mov    edi,eax
  4043e1:	mov    QWORD PTR [rbp-0x30],0x0
  4043e9:	mov    QWORD PTR [rbp-0x38],0x0
  4043f1:	call   4031c0 <malloc@plt>
  4043f6:	mov    QWORD PTR [rbp-0x40],rax
  4043fa:	mov    rax,QWORD PTR [rbp-0x40]
  4043fe:	mov    BYTE PTR [rax],0x21
  404401:	mov    rax,QWORD PTR [rbp-0x40]
  404405:	mov    BYTE PTR [rax+0x1],0x3d
  404409:	mov    rax,QWORD PTR [rbp-0x40]
  40440d:	mov    BYTE PTR [rax+0x2],0x0
  404411:	lea    rdi,[rbp-0x20]
  404415:	lea    rsi,[rbp-0x18]
  404419:	call   409190 <init_grammar@@Base>
  40441e:	mov    ecx,0x18
  404423:	mov    edi,ecx
  404425:	call   4031c0 <malloc@plt>
  40442a:	mov    ecx,0x8
  40442f:	mov    edi,ecx
  404431:	mov    QWORD PTR [rbp-0x28],rax
  404435:	call   4031c0 <malloc@plt>
  40443a:	mov    rsi,QWORD PTR [rbp-0x28]
  40443e:	mov    QWORD PTR [rsi],rax
  404441:	mov    rax,QWORD PTR [rbp-0x28]
  404445:	mov    rax,QWORD PTR [rax]
  404448:	mov    rdi,rax
  40444b:	mov    esi,0x2
  404450:	call   407130 <init_token_int_value@@Base>
  404455:	mov    ecx,0x10
  40445a:	mov    edi,ecx
  40445c:	call   4031c0 <malloc@plt>
  404461:	mov    rdi,QWORD PTR [rbp-0x28]
  404465:	mov    QWORD PTR [rdi+0x8],rax
  404469:	mov    rax,QWORD PTR [rbp-0x28]
  40446d:	mov    rax,QWORD PTR [rax+0x8]
  404471:	mov    rsi,QWORD PTR [rbp-0x40]
  404475:	mov    rdi,rax
  404478:	call   407430 <init_token_boolean_op@@Base>
  40447d:	mov    ecx,0x8
  404482:	mov    edi,ecx
  404484:	call   4031c0 <malloc@plt>
  404489:	mov    rsi,QWORD PTR [rbp-0x28]
  40448d:	mov    QWORD PTR [rsi+0x10],rax
  404491:	mov    rax,QWORD PTR [rbp-0x28]
  404495:	mov    rax,QWORD PTR [rax+0x10]
  404499:	mov    rdi,rax
  40449c:	mov    esi,0x1
  4044a1:	call   407130 <init_token_int_value@@Base>
  4044a6:	lea    rax,[rip+0xeeb3]        # 413360 <next_fake@@Base>
  4044ad:	mov    rdi,QWORD PTR [rbp-0x28]
  4044b1:	mov    QWORD PTR [rax+0x1b8],rdi
  4044b8:	mov    DWORD PTR [rax+0x1b0],0x3
  4044c2:	lea    rdi,[rbp-0x20]
  4044c6:	call   40a080 <read_boolean_binary_expression@@Base>
  4044cb:	mov    ecx,0x2
  4044d0:	mov    edi,ecx
  4044d2:	mov    ecx,0x1
  4044d7:	mov    edx,ecx
  4044d9:	lea    r8,[rip+0xee80]        # 413360 <next_fake@@Base>
  4044e0:	mov    QWORD PTR [rbp-0x30],rax
  4044e4:	mov    ecx,DWORD PTR [r8+0x198]
  4044eb:	cmp    ecx,0x3
  4044ee:	sete   r9b
  4044f2:	cmp    ecx,0x3
  4044f5:	cmove  rdi,rdx
  4044f9:	lea    rax,[rip+0xded0]        # 4123d0 <__bss_start@@Base+0x268>
  404500:	mov    rdx,QWORD PTR [rax+rdi*8]
  404504:	add    rdx,0x1
  404508:	mov    QWORD PTR [rax+rdi*8],rdx
  40450c:	test   r9b,0x1
  404510:	jne    40451b <boolean_binary_operator_is_read_properly@@Base+0x15b>
  404516:	jmp    404532 <boolean_binary_operator_is_read_properly@@Base+0x172>
  40451b:	mov    rax,QWORD PTR [rip+0xdec6]        # 4123e8 <__bss_start@@Base+0x280>
  404522:	add    rax,0x1
  404526:	mov    QWORD PTR [rip+0xdebb],rax        # 4123e8 <__bss_start@@Base+0x280>
  40452d:	jmp    404551 <boolean_binary_operator_is_read_properly@@Base+0x191>
  404532:	lea    rdi,[rip+0x8c6f]        # 40d1a8 <_IO_stdin_used@@Base+0x1a8>
  404539:	lea    rsi,[rip+0x8ade]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404540:	mov    edx,0xc8
  404545:	lea    rcx,[rip+0x8c76]        # 40d1c2 <_IO_stdin_used@@Base+0x1c2>
  40454c:	call   403140 <__assert_fail@plt>
  404551:	mov    eax,0x5
  404556:	mov    ecx,eax
  404558:	mov    eax,0x4
  40455d:	mov    edx,eax
  40455f:	mov    rsi,QWORD PTR [rbp-0x30]
  404563:	mov    eax,DWORD PTR [rsi]
  404565:	cmp    eax,0x5
  404568:	sete   dil
  40456c:	cmp    eax,0x5
  40456f:	cmove  rcx,rdx
  404573:	lea    rdx,[rip+0xde56]        # 4123d0 <__bss_start@@Base+0x268>
  40457a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40457e:	add    rsi,0x1
  404582:	mov    QWORD PTR [rdx+rcx*8],rsi
  404586:	test   dil,0x1
  40458a:	jne    404595 <boolean_binary_operator_is_read_properly@@Base+0x1d5>
  404590:	jmp    4045ac <boolean_binary_operator_is_read_properly@@Base+0x1ec>
  404595:	mov    rax,QWORD PTR [rip+0xde64]        # 412400 <__bss_start@@Base+0x298>
  40459c:	add    rax,0x1
  4045a0:	mov    QWORD PTR [rip+0xde59],rax        # 412400 <__bss_start@@Base+0x298>
  4045a7:	jmp    4045cb <boolean_binary_operator_is_read_properly@@Base+0x20b>
  4045ac:	lea    rdi,[rip+0x8b98]        # 40d14b <_IO_stdin_used@@Base+0x14b>
  4045b3:	lea    rsi,[rip+0x8a64]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4045ba:	mov    edx,0xc9
  4045bf:	lea    rcx,[rip+0x8bfc]        # 40d1c2 <_IO_stdin_used@@Base+0x1c2>
  4045c6:	call   403140 <__assert_fail@plt>
  4045cb:	mov    eax,0x8
  4045d0:	mov    ecx,eax
  4045d2:	mov    eax,0x7
  4045d7:	mov    edx,eax
  4045d9:	mov    rsi,QWORD PTR [rbp-0x30]
  4045dd:	mov    QWORD PTR [rbp-0x38],rsi
  4045e1:	mov    rsi,QWORD PTR [rbp-0x38]
  4045e5:	mov    rsi,QWORD PTR [rsi+0x10]
  4045e9:	mov    eax,DWORD PTR [rsi]
  4045eb:	cmp    eax,0x1
  4045ee:	sete   dil
  4045f2:	cmp    eax,0x1
  4045f5:	cmove  rcx,rdx
  4045f9:	lea    rdx,[rip+0xddd0]        # 4123d0 <__bss_start@@Base+0x268>
  404600:	mov    rsi,QWORD PTR [rdx+rcx*8]
  404604:	add    rsi,0x1
  404608:	mov    QWORD PTR [rdx+rcx*8],rsi
  40460c:	test   dil,0x1
  404610:	jne    40461b <boolean_binary_operator_is_read_properly@@Base+0x25b>
  404616:	jmp    404632 <boolean_binary_operator_is_read_properly@@Base+0x272>
  40461b:	mov    rax,QWORD PTR [rip+0xddf6]        # 412418 <__bss_start@@Base+0x2b0>
  404622:	add    rax,0x1
  404626:	mov    QWORD PTR [rip+0xddeb],rax        # 412418 <__bss_start@@Base+0x2b0>
  40462d:	jmp    404651 <boolean_binary_operator_is_read_properly@@Base+0x291>
  404632:	lea    rdi,[rip+0x8bb9]        # 40d1f2 <_IO_stdin_used@@Base+0x1f2>
  404639:	lea    rsi,[rip+0x89de]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404640:	mov    edx,0xcb
  404645:	lea    rcx,[rip+0x8b76]        # 40d1c2 <_IO_stdin_used@@Base+0x1c2>
  40464c:	call   403140 <__assert_fail@plt>
  404651:	mov    eax,0xb
  404656:	mov    ecx,eax
  404658:	mov    eax,0xa
  40465d:	mov    edx,eax
  40465f:	mov    rsi,QWORD PTR [rbp-0x38]
  404663:	mov    eax,DWORD PTR [rsi+0x20]
  404666:	cmp    eax,0x1
  404669:	sete   dil
  40466d:	cmp    eax,0x1
  404670:	cmove  rcx,rdx
  404674:	lea    rdx,[rip+0xdd55]        # 4123d0 <__bss_start@@Base+0x268>
  40467b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40467f:	add    rsi,0x1
  404683:	mov    QWORD PTR [rdx+rcx*8],rsi
  404687:	test   dil,0x1
  40468b:	jne    404696 <boolean_binary_operator_is_read_properly@@Base+0x2d6>
  404691:	jmp    4046ad <boolean_binary_operator_is_read_properly@@Base+0x2ed>
  404696:	mov    rax,QWORD PTR [rip+0xdd93]        # 412430 <__bss_start@@Base+0x2c8>
  40469d:	add    rax,0x1
  4046a1:	mov    QWORD PTR [rip+0xdd88],rax        # 412430 <__bss_start@@Base+0x2c8>
  4046a8:	jmp    4046cc <boolean_binary_operator_is_read_properly@@Base+0x30c>
  4046ad:	lea    rdi,[rip+0x8b59]        # 40d20d <_IO_stdin_used@@Base+0x20d>
  4046b4:	lea    rsi,[rip+0x8963]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4046bb:	mov    edx,0xcc
  4046c0:	lea    rcx,[rip+0x8afb]        # 40d1c2 <_IO_stdin_used@@Base+0x1c2>
  4046c7:	call   403140 <__assert_fail@plt>
  4046cc:	mov    eax,0xe
  4046d1:	mov    ecx,eax
  4046d3:	mov    eax,0xd
  4046d8:	mov    edx,eax
  4046da:	mov    rsi,QWORD PTR [rbp-0x38]
  4046de:	mov    rsi,QWORD PTR [rsi+0x18]
  4046e2:	mov    eax,DWORD PTR [rsi]
  4046e4:	cmp    eax,0x1
  4046e7:	sete   dil
  4046eb:	cmp    eax,0x1
  4046ee:	cmove  rcx,rdx
  4046f2:	lea    rdx,[rip+0xdcd7]        # 4123d0 <__bss_start@@Base+0x268>
  4046f9:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4046fd:	add    rsi,0x1
  404701:	mov    QWORD PTR [rdx+rcx*8],rsi
  404705:	test   dil,0x1
  404709:	jne    404714 <boolean_binary_operator_is_read_properly@@Base+0x354>
  40470f:	jmp    40472b <boolean_binary_operator_is_read_properly@@Base+0x36b>
  404714:	mov    rax,QWORD PTR [rip+0xdd2d]        # 412448 <__bss_start@@Base+0x2e0>
  40471b:	add    rax,0x1
  40471f:	mov    QWORD PTR [rip+0xdd22],rax        # 412448 <__bss_start@@Base+0x2e0>
  404726:	jmp    40474a <boolean_binary_operator_is_read_properly@@Base+0x38a>
  40472b:	lea    rdi,[rip+0x8af4]        # 40d226 <_IO_stdin_used@@Base+0x226>
  404732:	lea    rsi,[rip+0x88e5]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404739:	mov    edx,0xcd
  40473e:	lea    rcx,[rip+0x8a7d]        # 40d1c2 <_IO_stdin_used@@Base+0x1c2>
  404745:	call   403140 <__assert_fail@plt>
  40474a:	mov    rax,QWORD PTR [rip+0xdcff]        # 412450 <__bss_start@@Base+0x2e8>
  404751:	add    rax,0x1
  404755:	mov    QWORD PTR [rip+0xdcf4],rax        # 412450 <__bss_start@@Base+0x2e8>
  40475c:	add    rsp,0x40
  404760:	pop    rbp
  404761:	ret    
  404762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40476c:	nop    DWORD PTR [rax+0x0]

0000000000404770 <boolean_unary_operator_is_read_properly@@Base>:
  404770:	push   rbp
  404771:	mov    rbp,rsp
  404774:	sub    rsp,0x40
  404778:	mov    rax,QWORD PTR [rip+0xdce1]        # 412460 <__bss_start@@Base+0x2f8>
  40477f:	add    rax,0x1
  404783:	mov    QWORD PTR [rip+0xdcd6],rax        # 412460 <__bss_start@@Base+0x2f8>
  40478a:	mov    eax,0x2
  40478f:	mov    edi,eax
  404791:	mov    QWORD PTR [rbp-0x30],0x0
  404799:	mov    QWORD PTR [rbp-0x38],0x0
  4047a1:	call   4031c0 <malloc@plt>
  4047a6:	mov    QWORD PTR [rbp-0x40],rax
  4047aa:	mov    rax,QWORD PTR [rbp-0x40]
  4047ae:	mov    BYTE PTR [rax],0x21
  4047b1:	mov    rax,QWORD PTR [rbp-0x40]
  4047b5:	mov    BYTE PTR [rax+0x1],0x0
  4047b9:	lea    rdi,[rbp-0x20]
  4047bd:	lea    rsi,[rbp-0x18]
  4047c1:	call   409190 <init_grammar@@Base>
  4047c6:	mov    ecx,0x10
  4047cb:	mov    edi,ecx
  4047cd:	call   4031c0 <malloc@plt>
  4047d2:	mov    ecx,0x10
  4047d7:	mov    edi,ecx
  4047d9:	mov    QWORD PTR [rbp-0x28],rax
  4047dd:	call   4031c0 <malloc@plt>
  4047e2:	mov    rsi,QWORD PTR [rbp-0x28]
  4047e6:	mov    QWORD PTR [rsi],rax
  4047e9:	mov    rax,QWORD PTR [rbp-0x28]
  4047ed:	mov    rax,QWORD PTR [rax]
  4047f0:	mov    rsi,QWORD PTR [rbp-0x40]
  4047f4:	mov    rdi,rax
  4047f7:	call   407430 <init_token_boolean_op@@Base>
  4047fc:	mov    ecx,0x8
  404801:	mov    edi,ecx
  404803:	call   4031c0 <malloc@plt>
  404808:	mov    rsi,QWORD PTR [rbp-0x28]
  40480c:	mov    QWORD PTR [rsi+0x8],rax
  404810:	mov    rax,QWORD PTR [rbp-0x28]
  404814:	mov    rax,QWORD PTR [rax+0x8]
  404818:	mov    rdi,rax
  40481b:	mov    esi,0x1
  404820:	call   407130 <init_token_int_value@@Base>
  404825:	lea    rax,[rip+0xeb34]        # 413360 <next_fake@@Base>
  40482c:	mov    rdi,QWORD PTR [rbp-0x28]
  404830:	mov    QWORD PTR [rax+0x1b8],rdi
  404837:	mov    DWORD PTR [rax+0x1b0],0x2
  404841:	lea    rdi,[rbp-0x20]
  404845:	call   40a3c0 <read_boolean_unary_expression@@Base>
  40484a:	mov    ecx,0x2
  40484f:	mov    edi,ecx
  404851:	mov    ecx,0x1
  404856:	mov    edx,ecx
  404858:	lea    r8,[rip+0xeb01]        # 413360 <next_fake@@Base>
  40485f:	mov    QWORD PTR [rbp-0x30],rax
  404863:	mov    ecx,DWORD PTR [r8+0x198]
  40486a:	cmp    ecx,0x2
  40486d:	sete   r9b
  404871:	cmp    ecx,0x2
  404874:	cmove  rdi,rdx
  404878:	lea    rax,[rip+0xdbe1]        # 412460 <__bss_start@@Base+0x2f8>
  40487f:	mov    rdx,QWORD PTR [rax+rdi*8]
  404883:	add    rdx,0x1
  404887:	mov    QWORD PTR [rax+rdi*8],rdx
  40488b:	test   r9b,0x1
  40488f:	jne    40489a <boolean_unary_operator_is_read_properly@@Base+0x12a>
  404895:	jmp    4048b1 <boolean_unary_operator_is_read_properly@@Base+0x141>
  40489a:	mov    rax,QWORD PTR [rip+0xdbd7]        # 412478 <__bss_start@@Base+0x310>
  4048a1:	add    rax,0x1
  4048a5:	mov    QWORD PTR [rip+0xdbcc],rax        # 412478 <__bss_start@@Base+0x310>
  4048ac:	jmp    4048d0 <boolean_unary_operator_is_read_properly@@Base+0x160>
  4048b1:	lea    rdi,[rip+0x87ed]        # 40d0a5 <_IO_stdin_used@@Base+0xa5>
  4048b8:	lea    rsi,[rip+0x875f]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4048bf:	mov    edx,0xeb
  4048c4:	lea    rcx,[rip+0x8977]        # 40d242 <_IO_stdin_used@@Base+0x242>
  4048cb:	call   403140 <__assert_fail@plt>
  4048d0:	mov    eax,0x5
  4048d5:	mov    ecx,eax
  4048d7:	mov    eax,0x4
  4048dc:	mov    edx,eax
  4048de:	mov    rsi,QWORD PTR [rbp-0x30]
  4048e2:	mov    eax,DWORD PTR [rsi]
  4048e4:	cmp    eax,0x5
  4048e7:	sete   dil
  4048eb:	cmp    eax,0x5
  4048ee:	cmove  rcx,rdx
  4048f2:	lea    rdx,[rip+0xdb67]        # 412460 <__bss_start@@Base+0x2f8>
  4048f9:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4048fd:	add    rsi,0x1
  404901:	mov    QWORD PTR [rdx+rcx*8],rsi
  404905:	test   dil,0x1
  404909:	jne    404914 <boolean_unary_operator_is_read_properly@@Base+0x1a4>
  40490f:	jmp    40492b <boolean_unary_operator_is_read_properly@@Base+0x1bb>
  404914:	mov    rax,QWORD PTR [rip+0xdb75]        # 412490 <__bss_start@@Base+0x328>
  40491b:	add    rax,0x1
  40491f:	mov    QWORD PTR [rip+0xdb6a],rax        # 412490 <__bss_start@@Base+0x328>
  404926:	jmp    40494a <boolean_unary_operator_is_read_properly@@Base+0x1da>
  40492b:	lea    rdi,[rip+0x8819]        # 40d14b <_IO_stdin_used@@Base+0x14b>
  404932:	lea    rsi,[rip+0x86e5]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404939:	mov    edx,0xec
  40493e:	lea    rcx,[rip+0x88fd]        # 40d242 <_IO_stdin_used@@Base+0x242>
  404945:	call   403140 <__assert_fail@plt>
  40494a:	mov    eax,0x8
  40494f:	mov    ecx,eax
  404951:	mov    eax,0x7
  404956:	mov    edx,eax
  404958:	mov    rsi,QWORD PTR [rbp-0x30]
  40495c:	mov    QWORD PTR [rbp-0x38],rsi
  404960:	mov    rsi,QWORD PTR [rbp-0x38]
  404964:	mov    rsi,QWORD PTR [rsi+0x10]
  404968:	mov    eax,DWORD PTR [rsi]
  40496a:	cmp    eax,0x1
  40496d:	sete   dil
  404971:	cmp    eax,0x1
  404974:	cmove  rcx,rdx
  404978:	lea    rdx,[rip+0xdae1]        # 412460 <__bss_start@@Base+0x2f8>
  40497f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  404983:	add    rsi,0x1
  404987:	mov    QWORD PTR [rdx+rcx*8],rsi
  40498b:	test   dil,0x1
  40498f:	jne    40499a <boolean_unary_operator_is_read_properly@@Base+0x22a>
  404995:	jmp    4049b1 <boolean_unary_operator_is_read_properly@@Base+0x241>
  40499a:	mov    rax,QWORD PTR [rip+0xdb07]        # 4124a8 <__bss_start@@Base+0x340>
  4049a1:	add    rax,0x1
  4049a5:	mov    QWORD PTR [rip+0xdafc],rax        # 4124a8 <__bss_start@@Base+0x340>
  4049ac:	jmp    4049d0 <boolean_unary_operator_is_read_properly@@Base+0x260>
  4049b1:	lea    rdi,[rip+0x883a]        # 40d1f2 <_IO_stdin_used@@Base+0x1f2>
  4049b8:	lea    rsi,[rip+0x865f]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4049bf:	mov    edx,0xee
  4049c4:	lea    rcx,[rip+0x8877]        # 40d242 <_IO_stdin_used@@Base+0x242>
  4049cb:	call   403140 <__assert_fail@plt>
  4049d0:	mov    eax,0xb
  4049d5:	mov    ecx,eax
  4049d7:	mov    eax,0xa
  4049dc:	mov    edx,eax
  4049de:	mov    rsi,QWORD PTR [rbp-0x38]
  4049e2:	mov    eax,DWORD PTR [rsi+0x20]
  4049e5:	cmp    eax,0x8
  4049e8:	sete   dil
  4049ec:	cmp    eax,0x8
  4049ef:	cmove  rcx,rdx
  4049f3:	lea    rdx,[rip+0xda66]        # 412460 <__bss_start@@Base+0x2f8>
  4049fa:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4049fe:	add    rsi,0x1
  404a02:	mov    QWORD PTR [rdx+rcx*8],rsi
  404a06:	test   dil,0x1
  404a0a:	jne    404a15 <boolean_unary_operator_is_read_properly@@Base+0x2a5>
  404a10:	jmp    404a2c <boolean_unary_operator_is_read_properly@@Base+0x2bc>
  404a15:	mov    rax,QWORD PTR [rip+0xdaa4]        # 4124c0 <__bss_start@@Base+0x358>
  404a1c:	add    rax,0x1
  404a20:	mov    QWORD PTR [rip+0xda99],rax        # 4124c0 <__bss_start@@Base+0x358>
  404a27:	jmp    404a4b <boolean_unary_operator_is_read_properly@@Base+0x2db>
  404a2c:	lea    rdi,[rip+0x883e]        # 40d271 <_IO_stdin_used@@Base+0x271>
  404a33:	lea    rsi,[rip+0x85e4]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404a3a:	mov    edx,0xef
  404a3f:	lea    rcx,[rip+0x87fc]        # 40d242 <_IO_stdin_used@@Base+0x242>
  404a46:	call   403140 <__assert_fail@plt>
  404a4b:	mov    eax,0xe
  404a50:	mov    ecx,eax
  404a52:	mov    eax,0xd
  404a57:	mov    edx,eax
  404a59:	mov    rsi,QWORD PTR [rbp-0x38]
  404a5d:	mov    rsi,QWORD PTR [rsi+0x18]
  404a61:	cmp    rsi,0x0
  404a65:	sete   dil
  404a69:	cmp    rsi,0x0
  404a6d:	cmove  rcx,rdx
  404a71:	lea    rdx,[rip+0xd9e8]        # 412460 <__bss_start@@Base+0x2f8>
  404a78:	mov    rsi,QWORD PTR [rdx+rcx*8]
  404a7c:	add    rsi,0x1
  404a80:	mov    QWORD PTR [rdx+rcx*8],rsi
  404a84:	test   dil,0x1
  404a88:	jne    404a93 <boolean_unary_operator_is_read_properly@@Base+0x323>
  404a8e:	jmp    404aaa <boolean_unary_operator_is_read_properly@@Base+0x33a>
  404a93:	mov    rax,QWORD PTR [rip+0xda3e]        # 4124d8 <__bss_start@@Base+0x370>
  404a9a:	add    rax,0x1
  404a9e:	mov    QWORD PTR [rip+0xda33],rax        # 4124d8 <__bss_start@@Base+0x370>
  404aa5:	jmp    404ac9 <boolean_unary_operator_is_read_properly@@Base+0x359>
  404aaa:	lea    rdi,[rip+0x87d4]        # 40d285 <_IO_stdin_used@@Base+0x285>
  404ab1:	lea    rsi,[rip+0x8566]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404ab8:	mov    edx,0xf0
  404abd:	lea    rcx,[rip+0x877e]        # 40d242 <_IO_stdin_used@@Base+0x242>
  404ac4:	call   403140 <__assert_fail@plt>
  404ac9:	mov    rax,QWORD PTR [rip+0xda10]        # 4124e0 <__bss_start@@Base+0x378>
  404ad0:	add    rax,0x1
  404ad4:	mov    QWORD PTR [rip+0xda05],rax        # 4124e0 <__bss_start@@Base+0x378>
  404adb:	add    rsp,0x40
  404adf:	pop    rbp
  404ae0:	ret    
  404ae1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404aeb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000404af0 <if_statement_only@@Base>:
  404af0:	push   rbp
  404af1:	mov    rbp,rsp
  404af4:	sub    rsp,0x40
  404af8:	mov    rax,QWORD PTR [rip+0xd9f1]        # 4124f0 <__bss_start@@Base+0x388>
  404aff:	add    rax,0x1
  404b03:	mov    QWORD PTR [rip+0xd9e6],rax        # 4124f0 <__bss_start@@Base+0x388>
  404b0a:	mov    QWORD PTR [rbp-0x30],0x0
  404b12:	lea    rdi,[rbp-0x20]
  404b16:	lea    rsi,[rbp-0x18]
  404b1a:	call   409190 <init_grammar@@Base>
  404b1f:	mov    eax,0x3
  404b24:	mov    edi,eax
  404b26:	call   4031c0 <malloc@plt>
  404b2b:	mov    ecx,0x48
  404b30:	mov    edi,ecx
  404b32:	mov    QWORD PTR [rbp-0x38],rax
  404b36:	mov    rax,QWORD PTR [rbp-0x38]
  404b3a:	mov    BYTE PTR [rax],0x21
  404b3d:	mov    rax,QWORD PTR [rbp-0x38]
  404b41:	mov    BYTE PTR [rax+0x1],0x3d
  404b45:	mov    rax,QWORD PTR [rbp-0x38]
  404b49:	mov    BYTE PTR [rax+0x2],0x0
  404b4d:	call   4031c0 <malloc@plt>
  404b52:	mov    ecx,0x4
  404b57:	mov    edi,ecx
  404b59:	mov    QWORD PTR [rbp-0x28],rax
  404b5d:	call   4031c0 <malloc@plt>
  404b62:	mov    rsi,QWORD PTR [rbp-0x28]
  404b66:	mov    QWORD PTR [rsi],rax
  404b69:	mov    rax,QWORD PTR [rbp-0x28]
  404b6d:	mov    rax,QWORD PTR [rax]
  404b70:	mov    rdi,rax
  404b73:	call   4071f0 <init_token_opar@@Base>
  404b78:	mov    ecx,0x8
  404b7d:	mov    edi,ecx
  404b7f:	call   4031c0 <malloc@plt>
  404b84:	mov    rsi,QWORD PTR [rbp-0x28]
  404b88:	mov    QWORD PTR [rsi+0x8],rax
  404b8c:	mov    rax,QWORD PTR [rbp-0x28]
  404b90:	mov    rax,QWORD PTR [rax+0x8]
  404b94:	mov    rdi,rax
  404b97:	mov    esi,0x1
  404b9c:	call   407130 <init_token_int_value@@Base>
  404ba1:	mov    ecx,0x8
  404ba6:	mov    edi,ecx
  404ba8:	call   4031c0 <malloc@plt>
  404bad:	mov    rdi,QWORD PTR [rbp-0x28]
  404bb1:	mov    QWORD PTR [rdi+0x10],rax
  404bb5:	mov    rax,QWORD PTR [rbp-0x28]
  404bb9:	mov    rax,QWORD PTR [rax+0x10]
  404bbd:	mov    rdi,rax
  404bc0:	mov    esi,0x1
  404bc5:	call   407130 <init_token_int_value@@Base>
  404bca:	mov    ecx,0x10
  404bcf:	mov    edi,ecx
  404bd1:	call   4031c0 <malloc@plt>
  404bd6:	mov    rdi,QWORD PTR [rbp-0x28]
  404bda:	mov    QWORD PTR [rdi+0x18],rax
  404bde:	mov    rax,QWORD PTR [rbp-0x28]
  404be2:	mov    rax,QWORD PTR [rax+0x18]
  404be6:	mov    rsi,QWORD PTR [rbp-0x38]
  404bea:	mov    rdi,rax
  404bed:	call   407430 <init_token_boolean_op@@Base>
  404bf2:	mov    ecx,0x8
  404bf7:	mov    edi,ecx
  404bf9:	call   4031c0 <malloc@plt>
  404bfe:	mov    rsi,QWORD PTR [rbp-0x28]
  404c02:	mov    QWORD PTR [rsi+0x20],rax
  404c06:	mov    rax,QWORD PTR [rbp-0x28]
  404c0a:	mov    rax,QWORD PTR [rax+0x20]
  404c0e:	mov    rdi,rax
  404c11:	mov    esi,0x1
  404c16:	call   407130 <init_token_int_value@@Base>
  404c1b:	mov    ecx,0x4
  404c20:	mov    edi,ecx
  404c22:	call   4031c0 <malloc@plt>
  404c27:	mov    rdi,QWORD PTR [rbp-0x28]
  404c2b:	mov    QWORD PTR [rdi+0x28],rax
  404c2f:	mov    rax,QWORD PTR [rbp-0x28]
  404c33:	mov    rax,QWORD PTR [rax+0x28]
  404c37:	mov    rdi,rax
  404c3a:	call   407230 <init_token_cpar@@Base>
  404c3f:	mov    ecx,0x4
  404c44:	mov    edi,ecx
  404c46:	call   4031c0 <malloc@plt>
  404c4b:	mov    rdi,QWORD PTR [rbp-0x28]
  404c4f:	mov    QWORD PTR [rdi+0x30],rax
  404c53:	mov    rax,QWORD PTR [rbp-0x28]
  404c57:	mov    rax,QWORD PTR [rax+0x30]
  404c5b:	mov    rdi,rax
  404c5e:	call   407270 <init_token_obra@@Base>
  404c63:	mov    ecx,0x4
  404c68:	mov    edi,ecx
  404c6a:	call   4031c0 <malloc@plt>
  404c6f:	mov    rdi,QWORD PTR [rbp-0x28]
  404c73:	mov    QWORD PTR [rdi+0x38],rax
  404c77:	mov    rax,QWORD PTR [rbp-0x28]
  404c7b:	mov    rax,QWORD PTR [rax+0x38]
  404c7f:	mov    rdi,rax
  404c82:	call   4072b0 <init_token_cbra@@Base>
  404c87:	mov    ecx,0x4
  404c8c:	mov    edi,ecx
  404c8e:	call   4031c0 <malloc@plt>
  404c93:	mov    rdi,QWORD PTR [rbp-0x28]
  404c97:	mov    QWORD PTR [rdi+0x40],rax
  404c9b:	mov    rax,QWORD PTR [rbp-0x28]
  404c9f:	mov    rax,QWORD PTR [rax+0x40]
  404ca3:	mov    rdi,rax
  404ca6:	call   407370 <init_token_eof@@Base>
  404cab:	lea    rax,[rip+0xe6ae]        # 413360 <next_fake@@Base>
  404cb2:	mov    rdi,QWORD PTR [rbp-0x28]
  404cb6:	mov    QWORD PTR [rax+0x1b8],rdi
  404cbd:	mov    DWORD PTR [rax+0x1b0],0x9
  404cc7:	lea    rdi,[rbp-0x20]
  404ccb:	call   409a40 <read_if_statement@@Base>
  404cd0:	mov    ecx,0x2
  404cd5:	mov    edi,ecx
  404cd7:	mov    ecx,0x1
  404cdc:	mov    edx,ecx
  404cde:	lea    r8,[rip+0xe67b]        # 413360 <next_fake@@Base>
  404ce5:	mov    QWORD PTR [rbp-0x30],rax
  404ce9:	mov    ecx,DWORD PTR [r8+0x198]
  404cf0:	cmp    ecx,0x9
  404cf3:	sete   r9b
  404cf7:	cmp    ecx,0x9
  404cfa:	cmove  rdi,rdx
  404cfe:	lea    rax,[rip+0xd7eb]        # 4124f0 <__bss_start@@Base+0x388>
  404d05:	mov    rdx,QWORD PTR [rax+rdi*8]
  404d09:	add    rdx,0x1
  404d0d:	mov    QWORD PTR [rax+rdi*8],rdx
  404d11:	test   r9b,0x1
  404d15:	jne    404d20 <if_statement_only@@Base+0x230>
  404d1b:	jmp    404d37 <if_statement_only@@Base+0x247>
  404d20:	mov    rax,QWORD PTR [rip+0xd7e1]        # 412508 <__bss_start@@Base+0x3a0>
  404d27:	add    rax,0x1
  404d2b:	mov    QWORD PTR [rip+0xd7d6],rax        # 412508 <__bss_start@@Base+0x3a0>
  404d32:	jmp    404d56 <if_statement_only@@Base+0x266>
  404d37:	lea    rdi,[rip+0x855c]        # 40d29a <_IO_stdin_used@@Base+0x29a>
  404d3e:	lea    rsi,[rip+0x82d9]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404d45:	mov    edx,0x11b
  404d4a:	lea    rcx,[rip+0x8563]        # 40d2b4 <_IO_stdin_used@@Base+0x2b4>
  404d51:	call   403140 <__assert_fail@plt>
  404d56:	mov    eax,0x5
  404d5b:	mov    ecx,eax
  404d5d:	mov    eax,0x4
  404d62:	mov    edx,eax
  404d64:	mov    rsi,QWORD PTR [rbp-0x30]
  404d68:	cmp    rsi,0x0
  404d6c:	setne  dil
  404d70:	cmp    rsi,0x0
  404d74:	cmovne rcx,rdx
  404d78:	lea    rdx,[rip+0xd771]        # 4124f0 <__bss_start@@Base+0x388>
  404d7f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  404d83:	add    rsi,0x1
  404d87:	mov    QWORD PTR [rdx+rcx*8],rsi
  404d8b:	test   dil,0x1
  404d8f:	jne    404d9a <if_statement_only@@Base+0x2aa>
  404d95:	jmp    404db1 <if_statement_only@@Base+0x2c1>
  404d9a:	mov    rax,QWORD PTR [rip+0xd77f]        # 412520 <__bss_start@@Base+0x3b8>
  404da1:	add    rax,0x1
  404da5:	mov    QWORD PTR [rip+0xd774],rax        # 412520 <__bss_start@@Base+0x3b8>
  404dac:	jmp    404dd0 <if_statement_only@@Base+0x2e0>
  404db1:	lea    rdi,[rip+0x8515]        # 40d2cd <_IO_stdin_used@@Base+0x2cd>
  404db8:	lea    rsi,[rip+0x825f]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404dbf:	mov    edx,0x11c
  404dc4:	lea    rcx,[rip+0x84e9]        # 40d2b4 <_IO_stdin_used@@Base+0x2b4>
  404dcb:	call   403140 <__assert_fail@plt>
  404dd0:	mov    eax,0x8
  404dd5:	mov    ecx,eax
  404dd7:	mov    eax,0x7
  404ddc:	mov    edx,eax
  404dde:	mov    rsi,QWORD PTR [rbp-0x30]
  404de2:	mov    eax,DWORD PTR [rsi]
  404de4:	cmp    eax,0x4
  404de7:	sete   dil
  404deb:	cmp    eax,0x4
  404dee:	cmove  rcx,rdx
  404df2:	lea    rdx,[rip+0xd6f7]        # 4124f0 <__bss_start@@Base+0x388>
  404df9:	mov    rsi,QWORD PTR [rdx+rcx*8]
  404dfd:	add    rsi,0x1
  404e01:	mov    QWORD PTR [rdx+rcx*8],rsi
  404e05:	test   dil,0x1
  404e09:	jne    404e14 <if_statement_only@@Base+0x324>
  404e0f:	jmp    404e2b <if_statement_only@@Base+0x33b>
  404e14:	mov    rax,QWORD PTR [rip+0xd71d]        # 412538 <__bss_start@@Base+0x3d0>
  404e1b:	add    rax,0x1
  404e1f:	mov    QWORD PTR [rip+0xd712],rax        # 412538 <__bss_start@@Base+0x3d0>
  404e26:	jmp    404e4a <if_statement_only@@Base+0x35a>
  404e2b:	lea    rdi,[rip+0x84a7]        # 40d2d9 <_IO_stdin_used@@Base+0x2d9>
  404e32:	lea    rsi,[rip+0x81e5]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404e39:	mov    edx,0x11d
  404e3e:	lea    rcx,[rip+0x846f]        # 40d2b4 <_IO_stdin_used@@Base+0x2b4>
  404e45:	call   403140 <__assert_fail@plt>
  404e4a:	mov    rax,QWORD PTR [rip+0xd6ef]        # 412540 <__bss_start@@Base+0x3d8>
  404e51:	add    rax,0x1
  404e55:	mov    QWORD PTR [rip+0xd6e4],rax        # 412540 <__bss_start@@Base+0x3d8>
  404e5c:	add    rsp,0x40
  404e60:	pop    rbp
  404e61:	ret    
  404e62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e6c:	nop    DWORD PTR [rax+0x0]

0000000000404e70 <if_else_statements@@Base>:
  404e70:	push   rbp
  404e71:	mov    rbp,rsp
  404e74:	sub    rsp,0x40
  404e78:	mov    rax,QWORD PTR [rip+0xd6d1]        # 412550 <__bss_start@@Base+0x3e8>
  404e7f:	add    rax,0x1
  404e83:	mov    QWORD PTR [rip+0xd6c6],rax        # 412550 <__bss_start@@Base+0x3e8>
  404e8a:	mov    QWORD PTR [rbp-0x30],0x0
  404e92:	lea    rdi,[rbp-0x20]
  404e96:	lea    rsi,[rbp-0x18]
  404e9a:	call   409190 <init_grammar@@Base>
  404e9f:	mov    eax,0x3
  404ea4:	mov    edi,eax
  404ea6:	call   4031c0 <malloc@plt>
  404eab:	mov    ecx,0x58
  404eb0:	mov    edi,ecx
  404eb2:	mov    QWORD PTR [rbp-0x38],rax
  404eb6:	mov    rax,QWORD PTR [rbp-0x38]
  404eba:	mov    BYTE PTR [rax],0x21
  404ebd:	mov    rax,QWORD PTR [rbp-0x38]
  404ec1:	mov    BYTE PTR [rax+0x1],0x3d
  404ec5:	mov    rax,QWORD PTR [rbp-0x38]
  404ec9:	mov    BYTE PTR [rax+0x2],0x0
  404ecd:	call   4031c0 <malloc@plt>
  404ed2:	mov    ecx,0x4
  404ed7:	mov    edi,ecx
  404ed9:	mov    QWORD PTR [rbp-0x28],rax
  404edd:	call   4031c0 <malloc@plt>
  404ee2:	mov    rsi,QWORD PTR [rbp-0x28]
  404ee6:	mov    QWORD PTR [rsi],rax
  404ee9:	mov    rax,QWORD PTR [rbp-0x28]
  404eed:	mov    rax,QWORD PTR [rax]
  404ef0:	mov    rdi,rax
  404ef3:	call   4071f0 <init_token_opar@@Base>
  404ef8:	mov    ecx,0x8
  404efd:	mov    edi,ecx
  404eff:	call   4031c0 <malloc@plt>
  404f04:	mov    rsi,QWORD PTR [rbp-0x28]
  404f08:	mov    QWORD PTR [rsi+0x8],rax
  404f0c:	mov    rax,QWORD PTR [rbp-0x28]
  404f10:	mov    rax,QWORD PTR [rax+0x8]
  404f14:	mov    rdi,rax
  404f17:	mov    esi,0x1
  404f1c:	call   407130 <init_token_int_value@@Base>
  404f21:	mov    ecx,0x8
  404f26:	mov    edi,ecx
  404f28:	call   4031c0 <malloc@plt>
  404f2d:	mov    rdi,QWORD PTR [rbp-0x28]
  404f31:	mov    QWORD PTR [rdi+0x10],rax
  404f35:	mov    rax,QWORD PTR [rbp-0x28]
  404f39:	mov    rax,QWORD PTR [rax+0x10]
  404f3d:	mov    rdi,rax
  404f40:	mov    esi,0x1
  404f45:	call   407130 <init_token_int_value@@Base>
  404f4a:	mov    ecx,0x10
  404f4f:	mov    edi,ecx
  404f51:	call   4031c0 <malloc@plt>
  404f56:	mov    rdi,QWORD PTR [rbp-0x28]
  404f5a:	mov    QWORD PTR [rdi+0x18],rax
  404f5e:	mov    rax,QWORD PTR [rbp-0x28]
  404f62:	mov    rax,QWORD PTR [rax+0x18]
  404f66:	mov    rsi,QWORD PTR [rbp-0x38]
  404f6a:	mov    rdi,rax
  404f6d:	call   407430 <init_token_boolean_op@@Base>
  404f72:	mov    ecx,0x8
  404f77:	mov    edi,ecx
  404f79:	call   4031c0 <malloc@plt>
  404f7e:	mov    rsi,QWORD PTR [rbp-0x28]
  404f82:	mov    QWORD PTR [rsi+0x20],rax
  404f86:	mov    rax,QWORD PTR [rbp-0x28]
  404f8a:	mov    rax,QWORD PTR [rax+0x20]
  404f8e:	mov    rdi,rax
  404f91:	mov    esi,0x1
  404f96:	call   407130 <init_token_int_value@@Base>
  404f9b:	mov    ecx,0x4
  404fa0:	mov    edi,ecx
  404fa2:	call   4031c0 <malloc@plt>
  404fa7:	mov    rdi,QWORD PTR [rbp-0x28]
  404fab:	mov    QWORD PTR [rdi+0x28],rax
  404faf:	mov    rax,QWORD PTR [rbp-0x28]
  404fb3:	mov    rax,QWORD PTR [rax+0x28]
  404fb7:	mov    rdi,rax
  404fba:	call   407230 <init_token_cpar@@Base>
  404fbf:	mov    ecx,0x4
  404fc4:	mov    edi,ecx
  404fc6:	call   4031c0 <malloc@plt>
  404fcb:	mov    rdi,QWORD PTR [rbp-0x28]
  404fcf:	mov    QWORD PTR [rdi+0x30],rax
  404fd3:	mov    rax,QWORD PTR [rbp-0x28]
  404fd7:	mov    rax,QWORD PTR [rax+0x30]
  404fdb:	mov    rdi,rax
  404fde:	call   407270 <init_token_obra@@Base>
  404fe3:	mov    ecx,0x4
  404fe8:	mov    edi,ecx
  404fea:	call   4031c0 <malloc@plt>
  404fef:	mov    rdi,QWORD PTR [rbp-0x28]
  404ff3:	mov    QWORD PTR [rdi+0x38],rax
  404ff7:	mov    rax,QWORD PTR [rbp-0x28]
  404ffb:	mov    rax,QWORD PTR [rax+0x38]
  404fff:	mov    rdi,rax
  405002:	call   4072b0 <init_token_cbra@@Base>
  405007:	mov    ecx,0x4
  40500c:	mov    edi,ecx
  40500e:	call   4031c0 <malloc@plt>
  405013:	mov    rdi,QWORD PTR [rbp-0x28]
  405017:	mov    QWORD PTR [rdi+0x40],rax
  40501b:	mov    rax,QWORD PTR [rbp-0x28]
  40501f:	mov    rax,QWORD PTR [rax+0x40]
  405023:	mov    rdi,rax
  405026:	call   4073f0 <init_token_else@@Base>
  40502b:	mov    ecx,0x4
  405030:	mov    edi,ecx
  405032:	call   4031c0 <malloc@plt>
  405037:	mov    rdi,QWORD PTR [rbp-0x28]
  40503b:	mov    QWORD PTR [rdi+0x48],rax
  40503f:	mov    rax,QWORD PTR [rbp-0x28]
  405043:	mov    rax,QWORD PTR [rax+0x48]
  405047:	mov    rdi,rax
  40504a:	call   407270 <init_token_obra@@Base>
  40504f:	mov    ecx,0x4
  405054:	mov    edi,ecx
  405056:	call   4031c0 <malloc@plt>
  40505b:	mov    rdi,QWORD PTR [rbp-0x28]
  40505f:	mov    QWORD PTR [rdi+0x50],rax
  405063:	mov    rax,QWORD PTR [rbp-0x28]
  405067:	mov    rax,QWORD PTR [rax+0x50]
  40506b:	mov    rdi,rax
  40506e:	call   4072b0 <init_token_cbra@@Base>
  405073:	lea    rax,[rip+0xe2e6]        # 413360 <next_fake@@Base>
  40507a:	mov    rdi,QWORD PTR [rbp-0x28]
  40507e:	mov    QWORD PTR [rax+0x1b8],rdi
  405085:	mov    DWORD PTR [rax+0x1b0],0xb
  40508f:	lea    rdi,[rbp-0x20]
  405093:	call   409a40 <read_if_statement@@Base>
  405098:	mov    ecx,0x2
  40509d:	mov    edi,ecx
  40509f:	mov    ecx,0x1
  4050a4:	mov    edx,ecx
  4050a6:	lea    r8,[rip+0xe2b3]        # 413360 <next_fake@@Base>
  4050ad:	mov    QWORD PTR [rbp-0x30],rax
  4050b1:	mov    ecx,DWORD PTR [r8+0x198]
  4050b8:	cmp    ecx,0xb
  4050bb:	sete   r9b
  4050bf:	cmp    ecx,0xb
  4050c2:	cmove  rdi,rdx
  4050c6:	lea    rax,[rip+0xd483]        # 412550 <__bss_start@@Base+0x3e8>
  4050cd:	mov    rdx,QWORD PTR [rax+rdi*8]
  4050d1:	add    rdx,0x1
  4050d5:	mov    QWORD PTR [rax+rdi*8],rdx
  4050d9:	test   r9b,0x1
  4050dd:	jne    4050e8 <if_else_statements@@Base+0x278>
  4050e3:	jmp    4050ff <if_else_statements@@Base+0x28f>
  4050e8:	mov    rax,QWORD PTR [rip+0xd479]        # 412568 <__bss_start@@Base+0x400>
  4050ef:	add    rax,0x1
  4050f3:	mov    QWORD PTR [rip+0xd46e],rax        # 412568 <__bss_start@@Base+0x400>
  4050fa:	jmp    40511e <if_else_statements@@Base+0x2ae>
  4050ff:	lea    rdi,[rip+0x81e5]        # 40d2eb <_IO_stdin_used@@Base+0x2eb>
  405106:	lea    rsi,[rip+0x7f11]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  40510d:	mov    edx,0x14c
  405112:	lea    rcx,[rip+0x81ed]        # 40d306 <_IO_stdin_used@@Base+0x306>
  405119:	call   403140 <__assert_fail@plt>
  40511e:	mov    eax,0x5
  405123:	mov    ecx,eax
  405125:	mov    eax,0x4
  40512a:	mov    edx,eax
  40512c:	mov    rsi,QWORD PTR [rbp-0x30]
  405130:	cmp    rsi,0x0
  405134:	setne  dil
  405138:	cmp    rsi,0x0
  40513c:	cmovne rcx,rdx
  405140:	lea    rdx,[rip+0xd409]        # 412550 <__bss_start@@Base+0x3e8>
  405147:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40514b:	add    rsi,0x1
  40514f:	mov    QWORD PTR [rdx+rcx*8],rsi
  405153:	test   dil,0x1
  405157:	jne    405162 <if_else_statements@@Base+0x2f2>
  40515d:	jmp    405179 <if_else_statements@@Base+0x309>
  405162:	mov    rax,QWORD PTR [rip+0xd417]        # 412580 <__bss_start@@Base+0x418>
  405169:	add    rax,0x1
  40516d:	mov    QWORD PTR [rip+0xd40c],rax        # 412580 <__bss_start@@Base+0x418>
  405174:	jmp    405198 <if_else_statements@@Base+0x328>
  405179:	lea    rdi,[rip+0x814d]        # 40d2cd <_IO_stdin_used@@Base+0x2cd>
  405180:	lea    rsi,[rip+0x7e97]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405187:	mov    edx,0x14d
  40518c:	lea    rcx,[rip+0x8173]        # 40d306 <_IO_stdin_used@@Base+0x306>
  405193:	call   403140 <__assert_fail@plt>
  405198:	mov    eax,0x8
  40519d:	mov    ecx,eax
  40519f:	mov    eax,0x7
  4051a4:	mov    edx,eax
  4051a6:	mov    rsi,QWORD PTR [rbp-0x30]
  4051aa:	mov    eax,DWORD PTR [rsi]
  4051ac:	cmp    eax,0x4
  4051af:	sete   dil
  4051b3:	cmp    eax,0x4
  4051b6:	cmove  rcx,rdx
  4051ba:	lea    rdx,[rip+0xd38f]        # 412550 <__bss_start@@Base+0x3e8>
  4051c1:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4051c5:	add    rsi,0x1
  4051c9:	mov    QWORD PTR [rdx+rcx*8],rsi
  4051cd:	test   dil,0x1
  4051d1:	jne    4051dc <if_else_statements@@Base+0x36c>
  4051d7:	jmp    4051f3 <if_else_statements@@Base+0x383>
  4051dc:	mov    rax,QWORD PTR [rip+0xd3b5]        # 412598 <__bss_start@@Base+0x430>
  4051e3:	add    rax,0x1
  4051e7:	mov    QWORD PTR [rip+0xd3aa],rax        # 412598 <__bss_start@@Base+0x430>
  4051ee:	jmp    405212 <if_else_statements@@Base+0x3a2>
  4051f3:	lea    rdi,[rip+0x80df]        # 40d2d9 <_IO_stdin_used@@Base+0x2d9>
  4051fa:	lea    rsi,[rip+0x7e1d]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405201:	mov    edx,0x14e
  405206:	lea    rcx,[rip+0x80f9]        # 40d306 <_IO_stdin_used@@Base+0x306>
  40520d:	call   403140 <__assert_fail@plt>
  405212:	mov    rax,QWORD PTR [rip+0xd387]        # 4125a0 <__bss_start@@Base+0x438>
  405219:	add    rax,0x1
  40521d:	mov    QWORD PTR [rip+0xd37c],rax        # 4125a0 <__bss_start@@Base+0x438>
  405224:	add    rsp,0x40
  405228:	pop    rbp
  405229:	ret    
  40522a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405230 <body_with_two_returns@@Base>:
  405230:	push   rbp
  405231:	mov    rbp,rsp
  405234:	sub    rsp,0x30
  405238:	mov    rax,QWORD PTR [rip+0xd371]        # 4125b0 <__bss_start@@Base+0x448>
  40523f:	add    rax,0x1
  405243:	mov    QWORD PTR [rip+0xd366],rax        # 4125b0 <__bss_start@@Base+0x448>
  40524a:	mov    QWORD PTR [rbp-0x30],0x0
  405252:	lea    rdi,[rbp-0x20]
  405256:	lea    rsi,[rbp-0x18]
  40525a:	call   409190 <init_grammar@@Base>
  40525f:	mov    eax,0x40
  405264:	mov    edi,eax
  405266:	call   4031c0 <malloc@plt>
  40526b:	mov    ecx,0x4
  405270:	mov    edi,ecx
  405272:	mov    QWORD PTR [rbp-0x28],rax
  405276:	call   4031c0 <malloc@plt>
  40527b:	mov    rsi,QWORD PTR [rbp-0x28]
  40527f:	mov    QWORD PTR [rsi],rax
  405282:	mov    rax,QWORD PTR [rbp-0x28]
  405286:	mov    rax,QWORD PTR [rax]
  405289:	mov    rdi,rax
  40528c:	call   407270 <init_token_obra@@Base>
  405291:	mov    ecx,0x4
  405296:	mov    edi,ecx
  405298:	call   4031c0 <malloc@plt>
  40529d:	mov    rsi,QWORD PTR [rbp-0x28]
  4052a1:	mov    QWORD PTR [rsi+0x8],rax
  4052a5:	mov    rax,QWORD PTR [rbp-0x28]
  4052a9:	mov    rax,QWORD PTR [rax+0x8]
  4052ad:	mov    rdi,rax
  4052b0:	call   4072f0 <init_token_return@@Base>
  4052b5:	mov    ecx,0x8
  4052ba:	mov    edi,ecx
  4052bc:	call   4031c0 <malloc@plt>
  4052c1:	mov    rsi,QWORD PTR [rbp-0x28]
  4052c5:	mov    QWORD PTR [rsi+0x10],rax
  4052c9:	mov    rax,QWORD PTR [rbp-0x28]
  4052cd:	mov    rax,QWORD PTR [rax+0x10]
  4052d1:	mov    rdi,rax
  4052d4:	mov    esi,0x1
  4052d9:	call   407130 <init_token_int_value@@Base>
  4052de:	mov    ecx,0x4
  4052e3:	mov    edi,ecx
  4052e5:	call   4031c0 <malloc@plt>
  4052ea:	mov    rdi,QWORD PTR [rbp-0x28]
  4052ee:	mov    QWORD PTR [rdi+0x18],rax
  4052f2:	mov    rax,QWORD PTR [rbp-0x28]
  4052f6:	mov    rax,QWORD PTR [rax+0x18]
  4052fa:	mov    rdi,rax
  4052fd:	call   407330 <init_token_semicolon@@Base>
  405302:	mov    ecx,0x4
  405307:	mov    edi,ecx
  405309:	call   4031c0 <malloc@plt>
  40530e:	mov    rdi,QWORD PTR [rbp-0x28]
  405312:	mov    QWORD PTR [rdi+0x20],rax
  405316:	mov    rax,QWORD PTR [rbp-0x28]
  40531a:	mov    rax,QWORD PTR [rax+0x20]
  40531e:	mov    rdi,rax
  405321:	call   4072f0 <init_token_return@@Base>
  405326:	mov    ecx,0x8
  40532b:	mov    edi,ecx
  40532d:	call   4031c0 <malloc@plt>
  405332:	mov    rdi,QWORD PTR [rbp-0x28]
  405336:	mov    QWORD PTR [rdi+0x28],rax
  40533a:	mov    rax,QWORD PTR [rbp-0x28]
  40533e:	mov    rax,QWORD PTR [rax+0x28]
  405342:	mov    rdi,rax
  405345:	mov    esi,0x1
  40534a:	call   407130 <init_token_int_value@@Base>
  40534f:	mov    ecx,0x4
  405354:	mov    edi,ecx
  405356:	call   4031c0 <malloc@plt>
  40535b:	mov    rdi,QWORD PTR [rbp-0x28]
  40535f:	mov    QWORD PTR [rdi+0x30],rax
  405363:	mov    rax,QWORD PTR [rbp-0x28]
  405367:	mov    rax,QWORD PTR [rax+0x30]
  40536b:	mov    rdi,rax
  40536e:	call   407330 <init_token_semicolon@@Base>
  405373:	mov    ecx,0x4
  405378:	mov    edi,ecx
  40537a:	call   4031c0 <malloc@plt>
  40537f:	mov    rdi,QWORD PTR [rbp-0x28]
  405383:	mov    QWORD PTR [rdi+0x38],rax
  405387:	mov    rax,QWORD PTR [rbp-0x28]
  40538b:	mov    rax,QWORD PTR [rax+0x38]
  40538f:	mov    rdi,rax
  405392:	call   4072b0 <init_token_cbra@@Base>
  405397:	lea    rax,[rip+0xdfc2]        # 413360 <next_fake@@Base>
  40539e:	mov    rdi,QWORD PTR [rbp-0x28]
  4053a2:	mov    QWORD PTR [rax+0x1b8],rdi
  4053a9:	mov    DWORD PTR [rax+0x1b0],0x8
  4053b3:	lea    rdi,[rbp-0x20]
  4053b7:	call   409530 <read_body@@Base>
  4053bc:	mov    ecx,0x2
  4053c1:	mov    edi,ecx
  4053c3:	mov    ecx,0x1
  4053c8:	mov    edx,ecx
  4053ca:	lea    r8,[rip+0xdf8f]        # 413360 <next_fake@@Base>
  4053d1:	mov    QWORD PTR [rbp-0x30],rax
  4053d5:	mov    ecx,DWORD PTR [r8+0x198]
  4053dc:	cmp    ecx,0x8
  4053df:	sete   r9b
  4053e3:	cmp    ecx,0x8
  4053e6:	cmove  rdi,rdx
  4053ea:	lea    rax,[rip+0xd1bf]        # 4125b0 <__bss_start@@Base+0x448>
  4053f1:	mov    rdx,QWORD PTR [rax+rdi*8]
  4053f5:	add    rdx,0x1
  4053f9:	mov    QWORD PTR [rax+rdi*8],rdx
  4053fd:	test   r9b,0x1
  405401:	jne    40540c <body_with_two_returns@@Base+0x1dc>
  405407:	jmp    405423 <body_with_two_returns@@Base+0x1f3>
  40540c:	mov    rax,QWORD PTR [rip+0xd1b5]        # 4125c8 <__bss_start@@Base+0x460>
  405413:	add    rax,0x1
  405417:	mov    QWORD PTR [rip+0xd1aa],rax        # 4125c8 <__bss_start@@Base+0x460>
  40541e:	jmp    405442 <body_with_two_returns@@Base+0x212>
  405423:	lea    rdi,[rip+0x7ef6]        # 40d320 <_IO_stdin_used@@Base+0x320>
  40542a:	lea    rsi,[rip+0x7bed]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405431:	mov    edx,0x173
  405436:	lea    rcx,[rip+0x7efd]        # 40d33a <_IO_stdin_used@@Base+0x33a>
  40543d:	call   403140 <__assert_fail@plt>
  405442:	mov    eax,0x5
  405447:	mov    ecx,eax
  405449:	mov    eax,0x4
  40544e:	mov    edx,eax
  405450:	mov    rsi,QWORD PTR [rbp-0x30]
  405454:	cmp    rsi,0x0
  405458:	setne  dil
  40545c:	cmp    rsi,0x0
  405460:	cmovne rcx,rdx
  405464:	lea    rdx,[rip+0xd145]        # 4125b0 <__bss_start@@Base+0x448>
  40546b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40546f:	add    rsi,0x1
  405473:	mov    QWORD PTR [rdx+rcx*8],rsi
  405477:	test   dil,0x1
  40547b:	jne    405486 <body_with_two_returns@@Base+0x256>
  405481:	jmp    40549d <body_with_two_returns@@Base+0x26d>
  405486:	mov    rax,QWORD PTR [rip+0xd153]        # 4125e0 <__bss_start@@Base+0x478>
  40548d:	add    rax,0x1
  405491:	mov    QWORD PTR [rip+0xd148],rax        # 4125e0 <__bss_start@@Base+0x478>
  405498:	jmp    4054bc <body_with_two_returns@@Base+0x28c>
  40549d:	lea    rdi,[rip+0x7e29]        # 40d2cd <_IO_stdin_used@@Base+0x2cd>
  4054a4:	lea    rsi,[rip+0x7b73]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4054ab:	mov    edx,0x174
  4054b0:	lea    rcx,[rip+0x7e83]        # 40d33a <_IO_stdin_used@@Base+0x33a>
  4054b7:	call   403140 <__assert_fail@plt>
  4054bc:	mov    eax,0x8
  4054c1:	mov    ecx,eax
  4054c3:	mov    eax,0x7
  4054c8:	mov    edx,eax
  4054ca:	mov    rsi,QWORD PTR [rbp-0x30]
  4054ce:	mov    eax,DWORD PTR [rsi]
  4054d0:	cmp    eax,0x3
  4054d3:	sete   dil
  4054d7:	cmp    eax,0x3
  4054da:	cmove  rcx,rdx
  4054de:	lea    rdx,[rip+0xd0cb]        # 4125b0 <__bss_start@@Base+0x448>
  4054e5:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4054e9:	add    rsi,0x1
  4054ed:	mov    QWORD PTR [rdx+rcx*8],rsi
  4054f1:	test   dil,0x1
  4054f5:	jne    405500 <body_with_two_returns@@Base+0x2d0>
  4054fb:	jmp    405517 <body_with_two_returns@@Base+0x2e7>
  405500:	mov    rax,QWORD PTR [rip+0xd0f1]        # 4125f8 <__bss_start@@Base+0x490>
  405507:	add    rax,0x1
  40550b:	mov    QWORD PTR [rip+0xd0e6],rax        # 4125f8 <__bss_start@@Base+0x490>
  405512:	jmp    405536 <body_with_two_returns@@Base+0x306>
  405517:	lea    rdi,[rip+0x7e39]        # 40d357 <_IO_stdin_used@@Base+0x357>
  40551e:	lea    rsi,[rip+0x7af9]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405525:	mov    edx,0x175
  40552a:	lea    rcx,[rip+0x7e09]        # 40d33a <_IO_stdin_used@@Base+0x33a>
  405531:	call   403140 <__assert_fail@plt>
  405536:	mov    eax,0xb
  40553b:	mov    ecx,eax
  40553d:	mov    eax,0xa
  405542:	mov    edx,eax
  405544:	mov    rsi,QWORD PTR [rbp-0x30]
  405548:	mov    rsi,QWORD PTR [rsi+0x8]
  40554c:	mov    eax,DWORD PTR [rsi]
  40554e:	cmp    eax,0x3
  405551:	sete   dil
  405555:	cmp    eax,0x3
  405558:	cmove  rcx,rdx
  40555c:	lea    rdx,[rip+0xd04d]        # 4125b0 <__bss_start@@Base+0x448>
  405563:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405567:	add    rsi,0x1
  40556b:	mov    QWORD PTR [rdx+rcx*8],rsi
  40556f:	test   dil,0x1
  405573:	jne    40557e <body_with_two_returns@@Base+0x34e>
  405579:	jmp    405595 <body_with_two_returns@@Base+0x365>
  40557e:	mov    rax,QWORD PTR [rip+0xd08b]        # 412610 <__bss_start@@Base+0x4a8>
  405585:	add    rax,0x1
  405589:	mov    QWORD PTR [rip+0xd080],rax        # 412610 <__bss_start@@Base+0x4a8>
  405590:	jmp    4055b4 <body_with_two_returns@@Base+0x384>
  405595:	lea    rdi,[rip+0x7dd1]        # 40d36d <_IO_stdin_used@@Base+0x36d>
  40559c:	lea    rsi,[rip+0x7a7b]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4055a3:	mov    edx,0x176
  4055a8:	lea    rcx,[rip+0x7d8b]        # 40d33a <_IO_stdin_used@@Base+0x33a>
  4055af:	call   403140 <__assert_fail@plt>
  4055b4:	mov    eax,0xe
  4055b9:	mov    ecx,eax
  4055bb:	mov    eax,0xd
  4055c0:	mov    edx,eax
  4055c2:	mov    rsi,QWORD PTR [rbp-0x30]
  4055c6:	mov    rsi,QWORD PTR [rsi+0x8]
  4055ca:	mov    rsi,QWORD PTR [rsi+0x8]
  4055ce:	cmp    rsi,0x0
  4055d2:	sete   dil
  4055d6:	cmp    rsi,0x0
  4055da:	cmove  rcx,rdx
  4055de:	lea    rdx,[rip+0xcfcb]        # 4125b0 <__bss_start@@Base+0x448>
  4055e5:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4055e9:	add    rsi,0x1
  4055ed:	mov    QWORD PTR [rdx+rcx*8],rsi
  4055f1:	test   dil,0x1
  4055f5:	jne    405600 <body_with_two_returns@@Base+0x3d0>
  4055fb:	jmp    405617 <body_with_two_returns@@Base+0x3e7>
  405600:	mov    rax,QWORD PTR [rip+0xd021]        # 412628 <__bss_start@@Base+0x4c0>
  405607:	add    rax,0x1
  40560b:	mov    QWORD PTR [rip+0xd016],rax        # 412628 <__bss_start@@Base+0x4c0>
  405612:	jmp    405636 <body_with_two_returns@@Base+0x406>
  405617:	lea    rdi,[rip+0x7d6b]        # 40d389 <_IO_stdin_used@@Base+0x389>
  40561e:	lea    rsi,[rip+0x79f9]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405625:	mov    edx,0x177
  40562a:	lea    rcx,[rip+0x7d09]        # 40d33a <_IO_stdin_used@@Base+0x33a>
  405631:	call   403140 <__assert_fail@plt>
  405636:	mov    rax,QWORD PTR [rip+0xcff3]        # 412630 <__bss_start@@Base+0x4c8>
  40563d:	add    rax,0x1
  405641:	mov    QWORD PTR [rip+0xcfe8],rax        # 412630 <__bss_start@@Base+0x4c8>
  405648:	add    rsp,0x30
  40564c:	pop    rbp
  40564d:	ret    
  40564e:	xchg   ax,ax

0000000000405650 <body_with_one_return@@Base>:
  405650:	push   rbp
  405651:	mov    rbp,rsp
  405654:	sub    rsp,0x30
  405658:	mov    rax,QWORD PTR [rip+0xcfe1]        # 412640 <__bss_start@@Base+0x4d8>
  40565f:	add    rax,0x1
  405663:	mov    QWORD PTR [rip+0xcfd6],rax        # 412640 <__bss_start@@Base+0x4d8>
  40566a:	mov    QWORD PTR [rbp-0x30],0x0
  405672:	lea    rdi,[rbp-0x20]
  405676:	lea    rsi,[rbp-0x18]
  40567a:	call   409190 <init_grammar@@Base>
  40567f:	mov    eax,0x28
  405684:	mov    edi,eax
  405686:	call   4031c0 <malloc@plt>
  40568b:	mov    ecx,0x4
  405690:	mov    edi,ecx
  405692:	mov    QWORD PTR [rbp-0x28],rax
  405696:	call   4031c0 <malloc@plt>
  40569b:	mov    rsi,QWORD PTR [rbp-0x28]
  40569f:	mov    QWORD PTR [rsi],rax
  4056a2:	mov    rax,QWORD PTR [rbp-0x28]
  4056a6:	mov    rax,QWORD PTR [rax]
  4056a9:	mov    rdi,rax
  4056ac:	call   407270 <init_token_obra@@Base>
  4056b1:	mov    ecx,0x4
  4056b6:	mov    edi,ecx
  4056b8:	call   4031c0 <malloc@plt>
  4056bd:	mov    rsi,QWORD PTR [rbp-0x28]
  4056c1:	mov    QWORD PTR [rsi+0x8],rax
  4056c5:	mov    rax,QWORD PTR [rbp-0x28]
  4056c9:	mov    rax,QWORD PTR [rax+0x8]
  4056cd:	mov    rdi,rax
  4056d0:	call   4072f0 <init_token_return@@Base>
  4056d5:	mov    ecx,0x8
  4056da:	mov    edi,ecx
  4056dc:	call   4031c0 <malloc@plt>
  4056e1:	mov    rsi,QWORD PTR [rbp-0x28]
  4056e5:	mov    QWORD PTR [rsi+0x10],rax
  4056e9:	mov    rax,QWORD PTR [rbp-0x28]
  4056ed:	mov    rax,QWORD PTR [rax+0x10]
  4056f1:	mov    rdi,rax
  4056f4:	mov    esi,0x1
  4056f9:	call   407130 <init_token_int_value@@Base>
  4056fe:	mov    ecx,0x4
  405703:	mov    edi,ecx
  405705:	call   4031c0 <malloc@plt>
  40570a:	mov    rdi,QWORD PTR [rbp-0x28]
  40570e:	mov    QWORD PTR [rdi+0x18],rax
  405712:	mov    rax,QWORD PTR [rbp-0x28]
  405716:	mov    rax,QWORD PTR [rax+0x18]
  40571a:	mov    rdi,rax
  40571d:	call   407330 <init_token_semicolon@@Base>
  405722:	mov    ecx,0x4
  405727:	mov    edi,ecx
  405729:	call   4031c0 <malloc@plt>
  40572e:	mov    rdi,QWORD PTR [rbp-0x28]
  405732:	mov    QWORD PTR [rdi+0x20],rax
  405736:	mov    rax,QWORD PTR [rbp-0x28]
  40573a:	mov    rax,QWORD PTR [rax+0x20]
  40573e:	mov    rdi,rax
  405741:	call   4072b0 <init_token_cbra@@Base>
  405746:	lea    rax,[rip+0xdc13]        # 413360 <next_fake@@Base>
  40574d:	mov    rdi,QWORD PTR [rbp-0x28]
  405751:	mov    QWORD PTR [rax+0x1b8],rdi
  405758:	mov    DWORD PTR [rax+0x1b0],0x5
  405762:	lea    rdi,[rbp-0x20]
  405766:	call   409530 <read_body@@Base>
  40576b:	mov    ecx,0x2
  405770:	mov    edi,ecx
  405772:	mov    ecx,0x1
  405777:	mov    edx,ecx
  405779:	lea    r8,[rip+0xdbe0]        # 413360 <next_fake@@Base>
  405780:	mov    QWORD PTR [rbp-0x30],rax
  405784:	mov    ecx,DWORD PTR [r8+0x198]
  40578b:	cmp    ecx,0x5
  40578e:	sete   r9b
  405792:	cmp    ecx,0x5
  405795:	cmove  rdi,rdx
  405799:	lea    rax,[rip+0xcea0]        # 412640 <__bss_start@@Base+0x4d8>
  4057a0:	mov    rdx,QWORD PTR [rax+rdi*8]
  4057a4:	add    rdx,0x1
  4057a8:	mov    QWORD PTR [rax+rdi*8],rdx
  4057ac:	test   r9b,0x1
  4057b0:	jne    4057bb <body_with_one_return@@Base+0x16b>
  4057b6:	jmp    4057d2 <body_with_one_return@@Base+0x182>
  4057bb:	mov    rax,QWORD PTR [rip+0xce96]        # 412658 <__bss_start@@Base+0x4f0>
  4057c2:	add    rax,0x1
  4057c6:	mov    QWORD PTR [rip+0xce8b],rax        # 412658 <__bss_start@@Base+0x4f0>
  4057cd:	jmp    4057f1 <body_with_one_return@@Base+0x1a1>
  4057d2:	lea    rdi,[rip+0x790e]        # 40d0e7 <_IO_stdin_used@@Base+0xe7>
  4057d9:	lea    rsi,[rip+0x783e]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4057e0:	mov    edx,0x196
  4057e5:	lea    rcx,[rip+0x7bb5]        # 40d3a1 <_IO_stdin_used@@Base+0x3a1>
  4057ec:	call   403140 <__assert_fail@plt>
  4057f1:	mov    eax,0x5
  4057f6:	mov    ecx,eax
  4057f8:	mov    eax,0x4
  4057fd:	mov    edx,eax
  4057ff:	mov    rsi,QWORD PTR [rbp-0x30]
  405803:	cmp    rsi,0x0
  405807:	setne  dil
  40580b:	cmp    rsi,0x0
  40580f:	cmovne rcx,rdx
  405813:	lea    rdx,[rip+0xce26]        # 412640 <__bss_start@@Base+0x4d8>
  40581a:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40581e:	add    rsi,0x1
  405822:	mov    QWORD PTR [rdx+rcx*8],rsi
  405826:	test   dil,0x1
  40582a:	jne    405835 <body_with_one_return@@Base+0x1e5>
  405830:	jmp    40584c <body_with_one_return@@Base+0x1fc>
  405835:	mov    rax,QWORD PTR [rip+0xce34]        # 412670 <__bss_start@@Base+0x508>
  40583c:	add    rax,0x1
  405840:	mov    QWORD PTR [rip+0xce29],rax        # 412670 <__bss_start@@Base+0x508>
  405847:	jmp    40586b <body_with_one_return@@Base+0x21b>
  40584c:	lea    rdi,[rip+0x7a7a]        # 40d2cd <_IO_stdin_used@@Base+0x2cd>
  405853:	lea    rsi,[rip+0x77c4]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  40585a:	mov    edx,0x197
  40585f:	lea    rcx,[rip+0x7b3b]        # 40d3a1 <_IO_stdin_used@@Base+0x3a1>
  405866:	call   403140 <__assert_fail@plt>
  40586b:	mov    eax,0x8
  405870:	mov    ecx,eax
  405872:	mov    eax,0x7
  405877:	mov    edx,eax
  405879:	mov    rsi,QWORD PTR [rbp-0x30]
  40587d:	mov    eax,DWORD PTR [rsi]
  40587f:	cmp    eax,0x3
  405882:	sete   dil
  405886:	cmp    eax,0x3
  405889:	cmove  rcx,rdx
  40588d:	lea    rdx,[rip+0xcdac]        # 412640 <__bss_start@@Base+0x4d8>
  405894:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405898:	add    rsi,0x1
  40589c:	mov    QWORD PTR [rdx+rcx*8],rsi
  4058a0:	test   dil,0x1
  4058a4:	jne    4058af <body_with_one_return@@Base+0x25f>
  4058aa:	jmp    4058c6 <body_with_one_return@@Base+0x276>
  4058af:	mov    rax,QWORD PTR [rip+0xcdd2]        # 412688 <__bss_start@@Base+0x520>
  4058b6:	add    rax,0x1
  4058ba:	mov    QWORD PTR [rip+0xcdc7],rax        # 412688 <__bss_start@@Base+0x520>
  4058c1:	jmp    4058e5 <body_with_one_return@@Base+0x295>
  4058c6:	lea    rdi,[rip+0x7a8a]        # 40d357 <_IO_stdin_used@@Base+0x357>
  4058cd:	lea    rsi,[rip+0x774a]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4058d4:	mov    edx,0x198
  4058d9:	lea    rcx,[rip+0x7ac1]        # 40d3a1 <_IO_stdin_used@@Base+0x3a1>
  4058e0:	call   403140 <__assert_fail@plt>
  4058e5:	mov    eax,0xb
  4058ea:	mov    ecx,eax
  4058ec:	mov    eax,0xa
  4058f1:	mov    edx,eax
  4058f3:	mov    rsi,QWORD PTR [rbp-0x30]
  4058f7:	mov    rsi,QWORD PTR [rsi+0x8]
  4058fb:	cmp    rsi,0x0
  4058ff:	sete   dil
  405903:	cmp    rsi,0x0
  405907:	cmove  rcx,rdx
  40590b:	lea    rdx,[rip+0xcd2e]        # 412640 <__bss_start@@Base+0x4d8>
  405912:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405916:	add    rsi,0x1
  40591a:	mov    QWORD PTR [rdx+rcx*8],rsi
  40591e:	test   dil,0x1
  405922:	jne    40592d <body_with_one_return@@Base+0x2dd>
  405928:	jmp    405944 <body_with_one_return@@Base+0x2f4>
  40592d:	mov    rax,QWORD PTR [rip+0xcd6c]        # 4126a0 <__bss_start@@Base+0x538>
  405934:	add    rax,0x1
  405938:	mov    QWORD PTR [rip+0xcd61],rax        # 4126a0 <__bss_start@@Base+0x538>
  40593f:	jmp    405963 <body_with_one_return@@Base+0x313>
  405944:	lea    rdi,[rip+0x7a72]        # 40d3bd <_IO_stdin_used@@Base+0x3bd>
  40594b:	lea    rsi,[rip+0x76cc]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405952:	mov    edx,0x199
  405957:	lea    rcx,[rip+0x7a43]        # 40d3a1 <_IO_stdin_used@@Base+0x3a1>
  40595e:	call   403140 <__assert_fail@plt>
  405963:	mov    rax,QWORD PTR [rip+0xcd3e]        # 4126a8 <__bss_start@@Base+0x540>
  40596a:	add    rax,0x1
  40596e:	mov    QWORD PTR [rip+0xcd33],rax        # 4126a8 <__bss_start@@Base+0x540>
  405975:	add    rsp,0x30
  405979:	pop    rbp
  40597a:	ret    
  40597b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405980 <if_statement_inside_if_statement@@Base>:
  405980:	push   rbp
  405981:	mov    rbp,rsp
  405984:	sub    rsp,0x40
  405988:	mov    rax,QWORD PTR [rip+0xcd21]        # 4126b0 <__bss_start@@Base+0x548>
  40598f:	add    rax,0x1
  405993:	mov    QWORD PTR [rip+0xcd16],rax        # 4126b0 <__bss_start@@Base+0x548>
  40599a:	mov    QWORD PTR [rbp-0x30],0x0
  4059a2:	lea    rdi,[rbp-0x20]
  4059a6:	lea    rsi,[rbp-0x18]
  4059aa:	call   409190 <init_grammar@@Base>
  4059af:	mov    eax,0x3
  4059b4:	mov    edi,eax
  4059b6:	call   4031c0 <malloc@plt>
  4059bb:	mov    ecx,0x3
  4059c0:	mov    edi,ecx
  4059c2:	mov    QWORD PTR [rbp-0x38],rax
  4059c6:	call   4031c0 <malloc@plt>
  4059cb:	mov    ecx,0x98
  4059d0:	mov    edi,ecx
  4059d2:	mov    QWORD PTR [rbp-0x40],rax
  4059d6:	mov    rax,QWORD PTR [rbp-0x38]
  4059da:	mov    BYTE PTR [rax],0x21
  4059dd:	mov    rax,QWORD PTR [rbp-0x38]
  4059e1:	mov    BYTE PTR [rax+0x1],0x3d
  4059e5:	mov    rax,QWORD PTR [rbp-0x38]
  4059e9:	mov    BYTE PTR [rax+0x2],0x0
  4059ed:	mov    rax,QWORD PTR [rbp-0x40]
  4059f1:	mov    BYTE PTR [rax],0x21
  4059f4:	mov    rax,QWORD PTR [rbp-0x40]
  4059f8:	mov    BYTE PTR [rax+0x1],0x3d
  4059fc:	mov    rax,QWORD PTR [rbp-0x40]
  405a00:	mov    BYTE PTR [rax+0x2],0x0
  405a04:	call   4031c0 <malloc@plt>
  405a09:	mov    ecx,0x4
  405a0e:	mov    edi,ecx
  405a10:	mov    QWORD PTR [rbp-0x28],rax
  405a14:	call   4031c0 <malloc@plt>
  405a19:	mov    rsi,QWORD PTR [rbp-0x28]
  405a1d:	mov    QWORD PTR [rsi],rax
  405a20:	mov    rax,QWORD PTR [rbp-0x28]
  405a24:	mov    rax,QWORD PTR [rax]
  405a27:	mov    rdi,rax
  405a2a:	call   4071f0 <init_token_opar@@Base>
  405a2f:	mov    ecx,0x8
  405a34:	mov    edi,ecx
  405a36:	call   4031c0 <malloc@plt>
  405a3b:	mov    rsi,QWORD PTR [rbp-0x28]
  405a3f:	mov    QWORD PTR [rsi+0x8],rax
  405a43:	mov    rax,QWORD PTR [rbp-0x28]
  405a47:	mov    rax,QWORD PTR [rax+0x8]
  405a4b:	mov    rdi,rax
  405a4e:	mov    esi,0x1
  405a53:	call   407130 <init_token_int_value@@Base>
  405a58:	mov    ecx,0x8
  405a5d:	mov    edi,ecx
  405a5f:	call   4031c0 <malloc@plt>
  405a64:	mov    rdi,QWORD PTR [rbp-0x28]
  405a68:	mov    QWORD PTR [rdi+0x10],rax
  405a6c:	mov    rax,QWORD PTR [rbp-0x28]
  405a70:	mov    rax,QWORD PTR [rax+0x10]
  405a74:	mov    rdi,rax
  405a77:	mov    esi,0x1
  405a7c:	call   407130 <init_token_int_value@@Base>
  405a81:	mov    ecx,0x10
  405a86:	mov    edi,ecx
  405a88:	call   4031c0 <malloc@plt>
  405a8d:	mov    rdi,QWORD PTR [rbp-0x28]
  405a91:	mov    QWORD PTR [rdi+0x18],rax
  405a95:	mov    rax,QWORD PTR [rbp-0x28]
  405a99:	mov    rax,QWORD PTR [rax+0x18]
  405a9d:	mov    rsi,QWORD PTR [rbp-0x38]
  405aa1:	mov    rdi,rax
  405aa4:	call   407430 <init_token_boolean_op@@Base>
  405aa9:	mov    ecx,0x8
  405aae:	mov    edi,ecx
  405ab0:	call   4031c0 <malloc@plt>
  405ab5:	mov    rsi,QWORD PTR [rbp-0x28]
  405ab9:	mov    QWORD PTR [rsi+0x20],rax
  405abd:	mov    rax,QWORD PTR [rbp-0x28]
  405ac1:	mov    rax,QWORD PTR [rax+0x20]
  405ac5:	mov    rdi,rax
  405ac8:	mov    esi,0x1
  405acd:	call   407130 <init_token_int_value@@Base>
  405ad2:	mov    ecx,0x4
  405ad7:	mov    edi,ecx
  405ad9:	call   4031c0 <malloc@plt>
  405ade:	mov    rdi,QWORD PTR [rbp-0x28]
  405ae2:	mov    QWORD PTR [rdi+0x28],rax
  405ae6:	mov    rax,QWORD PTR [rbp-0x28]
  405aea:	mov    rax,QWORD PTR [rax+0x28]
  405aee:	mov    rdi,rax
  405af1:	call   407230 <init_token_cpar@@Base>
  405af6:	mov    ecx,0x4
  405afb:	mov    edi,ecx
  405afd:	call   4031c0 <malloc@plt>
  405b02:	mov    rdi,QWORD PTR [rbp-0x28]
  405b06:	mov    QWORD PTR [rdi+0x30],rax
  405b0a:	mov    rax,QWORD PTR [rbp-0x28]
  405b0e:	mov    rax,QWORD PTR [rax+0x30]
  405b12:	mov    rdi,rax
  405b15:	call   407270 <init_token_obra@@Base>
  405b1a:	mov    ecx,0x4
  405b1f:	mov    edi,ecx
  405b21:	call   4031c0 <malloc@plt>
  405b26:	mov    rdi,QWORD PTR [rbp-0x28]
  405b2a:	mov    QWORD PTR [rdi+0x38],rax
  405b2e:	mov    rax,QWORD PTR [rbp-0x28]
  405b32:	mov    rax,QWORD PTR [rax+0x38]
  405b36:	mov    rdi,rax
  405b39:	call   4073b0 <init_token_if@@Base>
  405b3e:	mov    ecx,0x4
  405b43:	mov    edi,ecx
  405b45:	call   4031c0 <malloc@plt>
  405b4a:	mov    rdi,QWORD PTR [rbp-0x28]
  405b4e:	mov    QWORD PTR [rdi+0x40],rax
  405b52:	mov    rax,QWORD PTR [rbp-0x28]
  405b56:	mov    rax,QWORD PTR [rax+0x40]
  405b5a:	mov    rdi,rax
  405b5d:	call   4071f0 <init_token_opar@@Base>
  405b62:	mov    ecx,0x8
  405b67:	mov    edi,ecx
  405b69:	call   4031c0 <malloc@plt>
  405b6e:	mov    rdi,QWORD PTR [rbp-0x28]
  405b72:	mov    QWORD PTR [rdi+0x48],rax
  405b76:	mov    rax,QWORD PTR [rbp-0x28]
  405b7a:	mov    rax,QWORD PTR [rax+0x48]
  405b7e:	mov    rdi,rax
  405b81:	mov    esi,0x1
  405b86:	call   407130 <init_token_int_value@@Base>
  405b8b:	mov    ecx,0x8
  405b90:	mov    edi,ecx
  405b92:	call   4031c0 <malloc@plt>
  405b97:	mov    rdi,QWORD PTR [rbp-0x28]
  405b9b:	mov    QWORD PTR [rdi+0x50],rax
  405b9f:	mov    rax,QWORD PTR [rbp-0x28]
  405ba3:	mov    rax,QWORD PTR [rax+0x50]
  405ba7:	mov    rdi,rax
  405baa:	mov    esi,0x1
  405baf:	call   407130 <init_token_int_value@@Base>
  405bb4:	mov    ecx,0x10
  405bb9:	mov    edi,ecx
  405bbb:	call   4031c0 <malloc@plt>
  405bc0:	mov    rdi,QWORD PTR [rbp-0x28]
  405bc4:	mov    QWORD PTR [rdi+0x58],rax
  405bc8:	mov    rax,QWORD PTR [rbp-0x28]
  405bcc:	mov    rax,QWORD PTR [rax+0x58]
  405bd0:	mov    rsi,QWORD PTR [rbp-0x40]
  405bd4:	mov    rdi,rax
  405bd7:	call   407430 <init_token_boolean_op@@Base>
  405bdc:	mov    ecx,0x8
  405be1:	mov    edi,ecx
  405be3:	call   4031c0 <malloc@plt>
  405be8:	mov    rsi,QWORD PTR [rbp-0x28]
  405bec:	mov    QWORD PTR [rsi+0x60],rax
  405bf0:	mov    rax,QWORD PTR [rbp-0x28]
  405bf4:	mov    rax,QWORD PTR [rax+0x60]
  405bf8:	mov    rdi,rax
  405bfb:	mov    esi,0x1
  405c00:	call   407130 <init_token_int_value@@Base>
  405c05:	mov    ecx,0x4
  405c0a:	mov    edi,ecx
  405c0c:	call   4031c0 <malloc@plt>
  405c11:	mov    rdi,QWORD PTR [rbp-0x28]
  405c15:	mov    QWORD PTR [rdi+0x68],rax
  405c19:	mov    rax,QWORD PTR [rbp-0x28]
  405c1d:	mov    rax,QWORD PTR [rax+0x68]
  405c21:	mov    rdi,rax
  405c24:	call   407230 <init_token_cpar@@Base>
  405c29:	mov    ecx,0x4
  405c2e:	mov    edi,ecx
  405c30:	call   4031c0 <malloc@plt>
  405c35:	mov    rdi,QWORD PTR [rbp-0x28]
  405c39:	mov    QWORD PTR [rdi+0x70],rax
  405c3d:	mov    rax,QWORD PTR [rbp-0x28]
  405c41:	mov    rax,QWORD PTR [rax+0x70]
  405c45:	mov    rdi,rax
  405c48:	call   407270 <init_token_obra@@Base>
  405c4d:	mov    ecx,0x4
  405c52:	mov    edi,ecx
  405c54:	call   4031c0 <malloc@plt>
  405c59:	mov    rdi,QWORD PTR [rbp-0x28]
  405c5d:	mov    QWORD PTR [rdi+0x78],rax
  405c61:	mov    rax,QWORD PTR [rbp-0x28]
  405c65:	mov    rax,QWORD PTR [rax+0x78]
  405c69:	mov    rdi,rax
  405c6c:	call   4072b0 <init_token_cbra@@Base>
  405c71:	mov    ecx,0x4
  405c76:	mov    edi,ecx
  405c78:	call   4031c0 <malloc@plt>
  405c7d:	mov    rdi,QWORD PTR [rbp-0x28]
  405c81:	mov    QWORD PTR [rdi+0x80],rax
  405c88:	mov    rax,QWORD PTR [rbp-0x28]
  405c8c:	mov    rax,QWORD PTR [rax+0x80]
  405c93:	mov    rdi,rax
  405c96:	call   4072b0 <init_token_cbra@@Base>
  405c9b:	mov    ecx,0x4
  405ca0:	mov    edi,ecx
  405ca2:	call   4031c0 <malloc@plt>
  405ca7:	mov    rdi,QWORD PTR [rbp-0x28]
  405cab:	mov    QWORD PTR [rdi+0x88],rax
  405cb2:	mov    rax,QWORD PTR [rbp-0x28]
  405cb6:	mov    rax,QWORD PTR [rax+0x88]
  405cbd:	mov    rdi,rax
  405cc0:	call   4072b0 <init_token_cbra@@Base>
  405cc5:	mov    ecx,0x4
  405cca:	mov    edi,ecx
  405ccc:	call   4031c0 <malloc@plt>
  405cd1:	mov    rdi,QWORD PTR [rbp-0x28]
  405cd5:	mov    QWORD PTR [rdi+0x90],rax
  405cdc:	mov    rax,QWORD PTR [rbp-0x28]
  405ce0:	mov    rax,QWORD PTR [rax+0x90]
  405ce7:	mov    rdi,rax
  405cea:	call   407370 <init_token_eof@@Base>
  405cef:	lea    rax,[rip+0xd66a]        # 413360 <next_fake@@Base>
  405cf6:	mov    rdi,QWORD PTR [rbp-0x28]
  405cfa:	mov    QWORD PTR [rax+0x1b8],rdi
  405d01:	mov    DWORD PTR [rax+0x1b0],0x13
  405d0b:	lea    rdi,[rbp-0x20]
  405d0f:	call   409a40 <read_if_statement@@Base>
  405d14:	mov    ecx,0x2
  405d19:	mov    edi,ecx
  405d1b:	mov    ecx,0x1
  405d20:	mov    edx,ecx
  405d22:	lea    r8,[rip+0xd637]        # 413360 <next_fake@@Base>
  405d29:	mov    QWORD PTR [rbp-0x30],rax
  405d2d:	mov    ecx,DWORD PTR [r8+0x198]
  405d34:	cmp    ecx,0x13
  405d37:	sete   r9b
  405d3b:	cmp    ecx,0x13
  405d3e:	cmove  rdi,rdx
  405d42:	lea    rax,[rip+0xc967]        # 4126b0 <__bss_start@@Base+0x548>
  405d49:	mov    rdx,QWORD PTR [rax+rdi*8]
  405d4d:	add    rdx,0x1
  405d51:	mov    QWORD PTR [rax+rdi*8],rdx
  405d55:	test   r9b,0x1
  405d59:	jne    405d64 <if_statement_inside_if_statement@@Base+0x3e4>
  405d5f:	jmp    405d7b <if_statement_inside_if_statement@@Base+0x3fb>
  405d64:	mov    rax,QWORD PTR [rip+0xc95d]        # 4126c8 <__bss_start@@Base+0x560>
  405d6b:	add    rax,0x1
  405d6f:	mov    QWORD PTR [rip+0xc952],rax        # 4126c8 <__bss_start@@Base+0x560>
  405d76:	jmp    405d9a <if_statement_inside_if_statement@@Base+0x41a>
  405d7b:	lea    rdi,[rip+0x764d]        # 40d3cf <_IO_stdin_used@@Base+0x3cf>
  405d82:	lea    rsi,[rip+0x7295]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405d89:	mov    edx,0x1e0
  405d8e:	lea    rcx,[rip+0x7655]        # 40d3ea <_IO_stdin_used@@Base+0x3ea>
  405d95:	call   403140 <__assert_fail@plt>
  405d9a:	mov    eax,0x5
  405d9f:	mov    ecx,eax
  405da1:	mov    eax,0x4
  405da6:	mov    edx,eax
  405da8:	mov    rsi,QWORD PTR [rbp-0x30]
  405dac:	cmp    rsi,0x0
  405db0:	setne  dil
  405db4:	cmp    rsi,0x0
  405db8:	cmovne rcx,rdx
  405dbc:	lea    rdx,[rip+0xc8ed]        # 4126b0 <__bss_start@@Base+0x548>
  405dc3:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405dc7:	add    rsi,0x1
  405dcb:	mov    QWORD PTR [rdx+rcx*8],rsi
  405dcf:	test   dil,0x1
  405dd3:	jne    405dde <if_statement_inside_if_statement@@Base+0x45e>
  405dd9:	jmp    405df5 <if_statement_inside_if_statement@@Base+0x475>
  405dde:	mov    rax,QWORD PTR [rip+0xc8fb]        # 4126e0 <__bss_start@@Base+0x578>
  405de5:	add    rax,0x1
  405de9:	mov    QWORD PTR [rip+0xc8f0],rax        # 4126e0 <__bss_start@@Base+0x578>
  405df0:	jmp    405e14 <if_statement_inside_if_statement@@Base+0x494>
  405df5:	lea    rdi,[rip+0x74d1]        # 40d2cd <_IO_stdin_used@@Base+0x2cd>
  405dfc:	lea    rsi,[rip+0x721b]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405e03:	mov    edx,0x1e1
  405e08:	lea    rcx,[rip+0x75db]        # 40d3ea <_IO_stdin_used@@Base+0x3ea>
  405e0f:	call   403140 <__assert_fail@plt>
  405e14:	mov    eax,0x8
  405e19:	mov    ecx,eax
  405e1b:	mov    eax,0x7
  405e20:	mov    edx,eax
  405e22:	mov    rsi,QWORD PTR [rbp-0x30]
  405e26:	mov    eax,DWORD PTR [rsi]
  405e28:	cmp    eax,0x4
  405e2b:	sete   dil
  405e2f:	cmp    eax,0x4
  405e32:	cmove  rcx,rdx
  405e36:	lea    rdx,[rip+0xc873]        # 4126b0 <__bss_start@@Base+0x548>
  405e3d:	mov    rsi,QWORD PTR [rdx+rcx*8]
  405e41:	add    rsi,0x1
  405e45:	mov    QWORD PTR [rdx+rcx*8],rsi
  405e49:	test   dil,0x1
  405e4d:	jne    405e58 <if_statement_inside_if_statement@@Base+0x4d8>
  405e53:	jmp    405e6f <if_statement_inside_if_statement@@Base+0x4ef>
  405e58:	mov    rax,QWORD PTR [rip+0xc899]        # 4126f8 <__bss_start@@Base+0x590>
  405e5f:	add    rax,0x1
  405e63:	mov    QWORD PTR [rip+0xc88e],rax        # 4126f8 <__bss_start@@Base+0x590>
  405e6a:	jmp    405e8e <if_statement_inside_if_statement@@Base+0x50e>
  405e6f:	lea    rdi,[rip+0x7463]        # 40d2d9 <_IO_stdin_used@@Base+0x2d9>
  405e76:	lea    rsi,[rip+0x71a1]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  405e7d:	mov    edx,0x1e2
  405e82:	lea    rcx,[rip+0x7561]        # 40d3ea <_IO_stdin_used@@Base+0x3ea>
  405e89:	call   403140 <__assert_fail@plt>
  405e8e:	mov    rax,QWORD PTR [rip+0xc86b]        # 412700 <__bss_start@@Base+0x598>
  405e95:	add    rax,0x1
  405e99:	mov    QWORD PTR [rip+0xc860],rax        # 412700 <__bss_start@@Base+0x598>
  405ea0:	add    rsp,0x40
  405ea4:	pop    rbp
  405ea5:	ret    
  405ea6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405eb0 <if_statement_inside_else_statement@@Base>:
  405eb0:	push   rbp
  405eb1:	mov    rbp,rsp
  405eb4:	sub    rsp,0x40
  405eb8:	mov    rax,QWORD PTR [rip+0xc851]        # 412710 <__bss_start@@Base+0x5a8>
  405ebf:	add    rax,0x1
  405ec3:	mov    QWORD PTR [rip+0xc846],rax        # 412710 <__bss_start@@Base+0x5a8>
  405eca:	mov    QWORD PTR [rbp-0x30],0x0
  405ed2:	lea    rdi,[rbp-0x20]
  405ed6:	lea    rsi,[rbp-0x18]
  405eda:	call   409190 <init_grammar@@Base>
  405edf:	mov    eax,0x3
  405ee4:	mov    edi,eax
  405ee6:	call   4031c0 <malloc@plt>
  405eeb:	mov    ecx,0x3
  405ef0:	mov    edi,ecx
  405ef2:	mov    QWORD PTR [rbp-0x38],rax
  405ef6:	call   4031c0 <malloc@plt>
  405efb:	mov    ecx,0xa8
  405f00:	mov    edi,ecx
  405f02:	mov    QWORD PTR [rbp-0x40],rax
  405f06:	mov    rax,QWORD PTR [rbp-0x38]
  405f0a:	mov    BYTE PTR [rax],0x21
  405f0d:	mov    rax,QWORD PTR [rbp-0x38]
  405f11:	mov    BYTE PTR [rax+0x1],0x3d
  405f15:	mov    rax,QWORD PTR [rbp-0x38]
  405f19:	mov    BYTE PTR [rax+0x2],0x0
  405f1d:	mov    rax,QWORD PTR [rbp-0x40]
  405f21:	mov    BYTE PTR [rax],0x21
  405f24:	mov    rax,QWORD PTR [rbp-0x40]
  405f28:	mov    BYTE PTR [rax+0x1],0x3d
  405f2c:	mov    rax,QWORD PTR [rbp-0x40]
  405f30:	mov    BYTE PTR [rax+0x2],0x0
  405f34:	call   4031c0 <malloc@plt>
  405f39:	mov    ecx,0x4
  405f3e:	mov    edi,ecx
  405f40:	mov    QWORD PTR [rbp-0x28],rax
  405f44:	call   4031c0 <malloc@plt>
  405f49:	mov    rsi,QWORD PTR [rbp-0x28]
  405f4d:	mov    QWORD PTR [rsi],rax
  405f50:	mov    rax,QWORD PTR [rbp-0x28]
  405f54:	mov    rax,QWORD PTR [rax]
  405f57:	mov    rdi,rax
  405f5a:	call   4071f0 <init_token_opar@@Base>
  405f5f:	mov    ecx,0x8
  405f64:	mov    edi,ecx
  405f66:	call   4031c0 <malloc@plt>
  405f6b:	mov    rsi,QWORD PTR [rbp-0x28]
  405f6f:	mov    QWORD PTR [rsi+0x8],rax
  405f73:	mov    rax,QWORD PTR [rbp-0x28]
  405f77:	mov    rax,QWORD PTR [rax+0x8]
  405f7b:	mov    rdi,rax
  405f7e:	mov    esi,0x1
  405f83:	call   407130 <init_token_int_value@@Base>
  405f88:	mov    ecx,0x8
  405f8d:	mov    edi,ecx
  405f8f:	call   4031c0 <malloc@plt>
  405f94:	mov    rdi,QWORD PTR [rbp-0x28]
  405f98:	mov    QWORD PTR [rdi+0x10],rax
  405f9c:	mov    rax,QWORD PTR [rbp-0x28]
  405fa0:	mov    rax,QWORD PTR [rax+0x10]
  405fa4:	mov    rdi,rax
  405fa7:	mov    esi,0x1
  405fac:	call   407130 <init_token_int_value@@Base>
  405fb1:	mov    ecx,0x10
  405fb6:	mov    edi,ecx
  405fb8:	call   4031c0 <malloc@plt>
  405fbd:	mov    rdi,QWORD PTR [rbp-0x28]
  405fc1:	mov    QWORD PTR [rdi+0x18],rax
  405fc5:	mov    rax,QWORD PTR [rbp-0x28]
  405fc9:	mov    rax,QWORD PTR [rax+0x18]
  405fcd:	mov    rsi,QWORD PTR [rbp-0x38]
  405fd1:	mov    rdi,rax
  405fd4:	call   407430 <init_token_boolean_op@@Base>
  405fd9:	mov    ecx,0x8
  405fde:	mov    edi,ecx
  405fe0:	call   4031c0 <malloc@plt>
  405fe5:	mov    rsi,QWORD PTR [rbp-0x28]
  405fe9:	mov    QWORD PTR [rsi+0x20],rax
  405fed:	mov    rax,QWORD PTR [rbp-0x28]
  405ff1:	mov    rax,QWORD PTR [rax+0x20]
  405ff5:	mov    rdi,rax
  405ff8:	mov    esi,0x1
  405ffd:	call   407130 <init_token_int_value@@Base>
  406002:	mov    ecx,0x4
  406007:	mov    edi,ecx
  406009:	call   4031c0 <malloc@plt>
  40600e:	mov    rdi,QWORD PTR [rbp-0x28]
  406012:	mov    QWORD PTR [rdi+0x28],rax
  406016:	mov    rax,QWORD PTR [rbp-0x28]
  40601a:	mov    rax,QWORD PTR [rax+0x28]
  40601e:	mov    rdi,rax
  406021:	call   407230 <init_token_cpar@@Base>
  406026:	mov    ecx,0x4
  40602b:	mov    edi,ecx
  40602d:	call   4031c0 <malloc@plt>
  406032:	mov    rdi,QWORD PTR [rbp-0x28]
  406036:	mov    QWORD PTR [rdi+0x30],rax
  40603a:	mov    rax,QWORD PTR [rbp-0x28]
  40603e:	mov    rax,QWORD PTR [rax+0x30]
  406042:	mov    rdi,rax
  406045:	call   407270 <init_token_obra@@Base>
  40604a:	mov    ecx,0x4
  40604f:	mov    edi,ecx
  406051:	call   4031c0 <malloc@plt>
  406056:	mov    rdi,QWORD PTR [rbp-0x28]
  40605a:	mov    QWORD PTR [rdi+0x38],rax
  40605e:	mov    rax,QWORD PTR [rbp-0x28]
  406062:	mov    rax,QWORD PTR [rax+0x38]
  406066:	mov    rdi,rax
  406069:	call   4072b0 <init_token_cbra@@Base>
  40606e:	mov    ecx,0x4
  406073:	mov    edi,ecx
  406075:	call   4031c0 <malloc@plt>
  40607a:	mov    rdi,QWORD PTR [rbp-0x28]
  40607e:	mov    QWORD PTR [rdi+0x40],rax
  406082:	mov    rax,QWORD PTR [rbp-0x28]
  406086:	mov    rax,QWORD PTR [rax+0x40]
  40608a:	mov    rdi,rax
  40608d:	call   4073f0 <init_token_else@@Base>
  406092:	mov    ecx,0x4
  406097:	mov    edi,ecx
  406099:	call   4031c0 <malloc@plt>
  40609e:	mov    rdi,QWORD PTR [rbp-0x28]
  4060a2:	mov    QWORD PTR [rdi+0x48],rax
  4060a6:	mov    rax,QWORD PTR [rbp-0x28]
  4060aa:	mov    rax,QWORD PTR [rax+0x48]
  4060ae:	mov    rdi,rax
  4060b1:	call   407270 <init_token_obra@@Base>
  4060b6:	mov    ecx,0x4
  4060bb:	mov    edi,ecx
  4060bd:	call   4031c0 <malloc@plt>
  4060c2:	mov    rdi,QWORD PTR [rbp-0x28]
  4060c6:	mov    QWORD PTR [rdi+0x50],rax
  4060ca:	mov    rax,QWORD PTR [rbp-0x28]
  4060ce:	mov    rax,QWORD PTR [rax+0x50]
  4060d2:	mov    rdi,rax
  4060d5:	call   4073b0 <init_token_if@@Base>
  4060da:	mov    ecx,0x4
  4060df:	mov    edi,ecx
  4060e1:	call   4031c0 <malloc@plt>
  4060e6:	mov    rdi,QWORD PTR [rbp-0x28]
  4060ea:	mov    QWORD PTR [rdi+0x58],rax
  4060ee:	mov    rax,QWORD PTR [rbp-0x28]
  4060f2:	mov    rax,QWORD PTR [rax+0x58]
  4060f6:	mov    rdi,rax
  4060f9:	call   4071f0 <init_token_opar@@Base>
  4060fe:	mov    ecx,0x8
  406103:	mov    edi,ecx
  406105:	call   4031c0 <malloc@plt>
  40610a:	mov    rdi,QWORD PTR [rbp-0x28]
  40610e:	mov    QWORD PTR [rdi+0x60],rax
  406112:	mov    rax,QWORD PTR [rbp-0x28]
  406116:	mov    rax,QWORD PTR [rax+0x60]
  40611a:	mov    rdi,rax
  40611d:	mov    esi,0x1
  406122:	call   407130 <init_token_int_value@@Base>
  406127:	mov    ecx,0x8
  40612c:	mov    edi,ecx
  40612e:	call   4031c0 <malloc@plt>
  406133:	mov    rdi,QWORD PTR [rbp-0x28]
  406137:	mov    QWORD PTR [rdi+0x68],rax
  40613b:	mov    rax,QWORD PTR [rbp-0x28]
  40613f:	mov    rax,QWORD PTR [rax+0x68]
  406143:	mov    rdi,rax
  406146:	mov    esi,0x1
  40614b:	call   407130 <init_token_int_value@@Base>
  406150:	mov    ecx,0x10
  406155:	mov    edi,ecx
  406157:	call   4031c0 <malloc@plt>
  40615c:	mov    rdi,QWORD PTR [rbp-0x28]
  406160:	mov    QWORD PTR [rdi+0x70],rax
  406164:	mov    rax,QWORD PTR [rbp-0x28]
  406168:	mov    rax,QWORD PTR [rax+0x70]
  40616c:	mov    rsi,QWORD PTR [rbp-0x40]
  406170:	mov    rdi,rax
  406173:	call   407430 <init_token_boolean_op@@Base>
  406178:	mov    ecx,0x8
  40617d:	mov    edi,ecx
  40617f:	call   4031c0 <malloc@plt>
  406184:	mov    rsi,QWORD PTR [rbp-0x28]
  406188:	mov    QWORD PTR [rsi+0x78],rax
  40618c:	mov    rax,QWORD PTR [rbp-0x28]
  406190:	mov    rax,QWORD PTR [rax+0x78]
  406194:	mov    rdi,rax
  406197:	mov    esi,0x1
  40619c:	call   407130 <init_token_int_value@@Base>
  4061a1:	mov    ecx,0x4
  4061a6:	mov    edi,ecx
  4061a8:	call   4031c0 <malloc@plt>
  4061ad:	mov    rdi,QWORD PTR [rbp-0x28]
  4061b1:	mov    QWORD PTR [rdi+0x80],rax
  4061b8:	mov    rax,QWORD PTR [rbp-0x28]
  4061bc:	mov    rax,QWORD PTR [rax+0x80]
  4061c3:	mov    rdi,rax
  4061c6:	call   407230 <init_token_cpar@@Base>
  4061cb:	mov    ecx,0x4
  4061d0:	mov    edi,ecx
  4061d2:	call   4031c0 <malloc@plt>
  4061d7:	mov    rdi,QWORD PTR [rbp-0x28]
  4061db:	mov    QWORD PTR [rdi+0x88],rax
  4061e2:	mov    rax,QWORD PTR [rbp-0x28]
  4061e6:	mov    rax,QWORD PTR [rax+0x88]
  4061ed:	mov    rdi,rax
  4061f0:	call   407270 <init_token_obra@@Base>
  4061f5:	mov    ecx,0x4
  4061fa:	mov    edi,ecx
  4061fc:	call   4031c0 <malloc@plt>
  406201:	mov    rdi,QWORD PTR [rbp-0x28]
  406205:	mov    QWORD PTR [rdi+0x90],rax
  40620c:	mov    rax,QWORD PTR [rbp-0x28]
  406210:	mov    rax,QWORD PTR [rax+0x90]
  406217:	mov    rdi,rax
  40621a:	call   4072b0 <init_token_cbra@@Base>
  40621f:	mov    ecx,0x4
  406224:	mov    edi,ecx
  406226:	call   4031c0 <malloc@plt>
  40622b:	mov    rdi,QWORD PTR [rbp-0x28]
  40622f:	mov    QWORD PTR [rdi+0x98],rax
  406236:	mov    rax,QWORD PTR [rbp-0x28]
  40623a:	mov    rax,QWORD PTR [rax+0x98]
  406241:	mov    rdi,rax
  406244:	call   4072b0 <init_token_cbra@@Base>
  406249:	mov    ecx,0x4
  40624e:	mov    edi,ecx
  406250:	call   4031c0 <malloc@plt>
  406255:	mov    rdi,QWORD PTR [rbp-0x28]
  406259:	mov    QWORD PTR [rdi+0xa0],rax
  406260:	mov    rax,QWORD PTR [rbp-0x28]
  406264:	mov    rax,QWORD PTR [rax+0xa0]
  40626b:	mov    rdi,rax
  40626e:	call   4072b0 <init_token_cbra@@Base>
  406273:	lea    rax,[rip+0xd0e6]        # 413360 <next_fake@@Base>
  40627a:	mov    rdi,QWORD PTR [rbp-0x28]
  40627e:	mov    QWORD PTR [rax+0x1b8],rdi
  406285:	mov    DWORD PTR [rax+0x1b0],0x15
  40628f:	lea    rdi,[rbp-0x20]
  406293:	call   409a40 <read_if_statement@@Base>
  406298:	mov    ecx,0x2
  40629d:	mov    edi,ecx
  40629f:	mov    ecx,0x1
  4062a4:	mov    edx,ecx
  4062a6:	lea    r8,[rip+0xd0b3]        # 413360 <next_fake@@Base>
  4062ad:	mov    QWORD PTR [rbp-0x30],rax
  4062b1:	mov    ecx,DWORD PTR [r8+0x198]
  4062b8:	cmp    ecx,0x15
  4062bb:	sete   r9b
  4062bf:	cmp    ecx,0x15
  4062c2:	cmove  rdi,rdx
  4062c6:	lea    rax,[rip+0xc443]        # 412710 <__bss_start@@Base+0x5a8>
  4062cd:	mov    rdx,QWORD PTR [rax+rdi*8]
  4062d1:	add    rdx,0x1
  4062d5:	mov    QWORD PTR [rax+rdi*8],rdx
  4062d9:	test   r9b,0x1
  4062dd:	jne    4062e8 <if_statement_inside_else_statement@@Base+0x438>
  4062e3:	jmp    4062ff <if_statement_inside_else_statement@@Base+0x44f>
  4062e8:	mov    rax,QWORD PTR [rip+0xc439]        # 412728 <__bss_start@@Base+0x5c0>
  4062ef:	add    rax,0x1
  4062f3:	mov    QWORD PTR [rip+0xc42e],rax        # 412728 <__bss_start@@Base+0x5c0>
  4062fa:	jmp    40631e <if_statement_inside_else_statement@@Base+0x46e>
  4062ff:	lea    rdi,[rip+0x710c]        # 40d412 <_IO_stdin_used@@Base+0x412>
  406306:	lea    rsi,[rip+0x6d11]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  40630d:	mov    edx,0x22e
  406312:	lea    rcx,[rip+0x7114]        # 40d42d <_IO_stdin_used@@Base+0x42d>
  406319:	call   403140 <__assert_fail@plt>
  40631e:	mov    eax,0x5
  406323:	mov    ecx,eax
  406325:	mov    eax,0x4
  40632a:	mov    edx,eax
  40632c:	mov    rsi,QWORD PTR [rbp-0x30]
  406330:	cmp    rsi,0x0
  406334:	setne  dil
  406338:	cmp    rsi,0x0
  40633c:	cmovne rcx,rdx
  406340:	lea    rdx,[rip+0xc3c9]        # 412710 <__bss_start@@Base+0x5a8>
  406347:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40634b:	add    rsi,0x1
  40634f:	mov    QWORD PTR [rdx+rcx*8],rsi
  406353:	test   dil,0x1
  406357:	jne    406362 <if_statement_inside_else_statement@@Base+0x4b2>
  40635d:	jmp    406379 <if_statement_inside_else_statement@@Base+0x4c9>
  406362:	mov    rax,QWORD PTR [rip+0xc3d7]        # 412740 <__bss_start@@Base+0x5d8>
  406369:	add    rax,0x1
  40636d:	mov    QWORD PTR [rip+0xc3cc],rax        # 412740 <__bss_start@@Base+0x5d8>
  406374:	jmp    406398 <if_statement_inside_else_statement@@Base+0x4e8>
  406379:	lea    rdi,[rip+0x6f4d]        # 40d2cd <_IO_stdin_used@@Base+0x2cd>
  406380:	lea    rsi,[rip+0x6c97]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  406387:	mov    edx,0x22f
  40638c:	lea    rcx,[rip+0x709a]        # 40d42d <_IO_stdin_used@@Base+0x42d>
  406393:	call   403140 <__assert_fail@plt>
  406398:	mov    eax,0x8
  40639d:	mov    ecx,eax
  40639f:	mov    eax,0x7
  4063a4:	mov    edx,eax
  4063a6:	mov    rsi,QWORD PTR [rbp-0x30]
  4063aa:	mov    eax,DWORD PTR [rsi]
  4063ac:	cmp    eax,0x4
  4063af:	sete   dil
  4063b3:	cmp    eax,0x4
  4063b6:	cmove  rcx,rdx
  4063ba:	lea    rdx,[rip+0xc34f]        # 412710 <__bss_start@@Base+0x5a8>
  4063c1:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4063c5:	add    rsi,0x1
  4063c9:	mov    QWORD PTR [rdx+rcx*8],rsi
  4063cd:	test   dil,0x1
  4063d1:	jne    4063dc <if_statement_inside_else_statement@@Base+0x52c>
  4063d7:	jmp    4063f3 <if_statement_inside_else_statement@@Base+0x543>
  4063dc:	mov    rax,QWORD PTR [rip+0xc375]        # 412758 <__bss_start@@Base+0x5f0>
  4063e3:	add    rax,0x1
  4063e7:	mov    QWORD PTR [rip+0xc36a],rax        # 412758 <__bss_start@@Base+0x5f0>
  4063ee:	jmp    406412 <if_statement_inside_else_statement@@Base+0x562>
  4063f3:	lea    rdi,[rip+0x6edf]        # 40d2d9 <_IO_stdin_used@@Base+0x2d9>
  4063fa:	lea    rsi,[rip+0x6c1d]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  406401:	mov    edx,0x230
  406406:	lea    rcx,[rip+0x7020]        # 40d42d <_IO_stdin_used@@Base+0x42d>
  40640d:	call   403140 <__assert_fail@plt>
  406412:	mov    rax,QWORD PTR [rip+0xc347]        # 412760 <__bss_start@@Base+0x5f8>
  406419:	add    rax,0x1
  40641d:	mov    QWORD PTR [rip+0xc33c],rax        # 412760 <__bss_start@@Base+0x5f8>
  406424:	add    rsp,0x40
  406428:	pop    rbp
  406429:	ret    
  40642a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406430 <main@@Base>:
  406430:	push   rbp
  406431:	mov    rbp,rsp
  406434:	sub    rsp,0x80
  40643b:	mov    rax,QWORD PTR [rip+0xc326]        # 412768 <__bss_start@@Base+0x600>
  406442:	add    rax,0x1
  406446:	mov    QWORD PTR [rip+0xc31b],rax        # 412768 <__bss_start@@Base+0x600>
  40644d:	xor    eax,eax
  40644f:	mov    esi,eax
  406451:	mov    rcx,QWORD PTR [rip+0xbb88]        # 411fe0 <stdout@GLIBC_2.2.5>
  406458:	mov    rdx,QWORD PTR [rip+0xc311]        # 412770 <__bss_start@@Base+0x608>
  40645f:	add    rdx,0x1
  406463:	mov    QWORD PTR [rip+0xc306],rdx        # 412770 <__bss_start@@Base+0x608>
  40646a:	mov    DWORD PTR [rbp-0x4],0x0
  406471:	mov    rdi,QWORD PTR [rcx]
  406474:	call   4030f0 <setbuf@plt>
  406479:	mov    rcx,QWORD PTR [rip+0xbb60]        # 411fe0 <stdout@GLIBC_2.2.5>
  406480:	mov    rdi,QWORD PTR [rcx]
  406483:	lea    rsi,[rip+0x7170]        # 40d5fa <_IO_stdin_used@@Base+0x5fa>
  40648a:	mov    al,0x0
  40648c:	call   403170 <fprintf@plt>
  406491:	mov    rcx,QWORD PTR [rip+0xbb48]        # 411fe0 <stdout@GLIBC_2.2.5>
  406498:	mov    rdi,QWORD PTR [rcx]
  40649b:	lea    rsi,[rip+0x6fb5]        # 40d457 <_IO_stdin_used@@Base+0x457>
  4064a2:	mov    DWORD PTR [rbp-0x8],eax
  4064a5:	mov    al,0x0
  4064a7:	call   403170 <fprintf@plt>
  4064ac:	mov    rcx,QWORD PTR [rip+0xbb2d]        # 411fe0 <stdout@GLIBC_2.2.5>
  4064b3:	mov    rdi,QWORD PTR [rcx]
  4064b6:	lea    rsi,[rip+0x6fa9]        # 40d466 <_IO_stdin_used@@Base+0x466>
  4064bd:	mov    DWORD PTR [rbp-0xc],eax
  4064c0:	mov    al,0x0
  4064c2:	call   403170 <fprintf@plt>
  4064c7:	xor    r8d,r8d
  4064ca:	mov    edi,r8d
  4064cd:	mov    DWORD PTR [rbp-0x10],eax
  4064d0:	call   4031d0 <fflush@plt>
  4064d5:	lea    rdi,[rip+0x6f9a]        # 40d476 <_IO_stdin_used@@Base+0x476>
  4064dc:	lea    rsi,[rip+0x6fa5]        # 40d488 <_IO_stdin_used@@Base+0x488>
  4064e3:	lea    rdx,[rip+0x6faa]        # 40d494 <_IO_stdin_used@@Base+0x494>
  4064ea:	mov    DWORD PTR [rbp-0x14],eax
  4064ed:	mov    al,0x0
  4064ef:	call   403110 <printf@plt>
  4064f4:	mov    DWORD PTR [rbp-0x18],eax
  4064f7:	call   4039a0 <setup@@Base>
  4064fc:	call   4039e0 <no_int_as_first_stuff@@Base>
  406501:	lea    rdi,[rip+0x6fa2]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  406508:	mov    al,0x0
  40650a:	call   403110 <printf@plt>
  40650f:	lea    rdi,[rip+0x6f60]        # 40d476 <_IO_stdin_used@@Base+0x476>
  406516:	lea    rsi,[rip+0x6f6b]        # 40d488 <_IO_stdin_used@@Base+0x488>
  40651d:	lea    rdx,[rip+0x6f90]        # 40d4b4 <_IO_stdin_used@@Base+0x4b4>
  406524:	mov    DWORD PTR [rbp-0x1c],eax
  406527:	mov    al,0x0
  406529:	call   403110 <printf@plt>
  40652e:	mov    DWORD PTR [rbp-0x20],eax
  406531:	call   4039a0 <setup@@Base>
  406536:	call   403b60 <int_but_not_followed_by_function@@Base>
  40653b:	lea    rdi,[rip+0x6f68]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  406542:	mov    al,0x0
  406544:	call   403110 <printf@plt>
  406549:	lea    rdi,[rip+0x6f26]        # 40d476 <_IO_stdin_used@@Base+0x476>
  406550:	lea    rsi,[rip+0x6f31]        # 40d488 <_IO_stdin_used@@Base+0x488>
  406557:	lea    rdx,[rip+0x6f77]        # 40d4d5 <_IO_stdin_used@@Base+0x4d5>
  40655e:	mov    DWORD PTR [rbp-0x24],eax
  406561:	mov    al,0x0
  406563:	call   403110 <printf@plt>
  406568:	mov    DWORD PTR [rbp-0x28],eax
  40656b:	call   4039a0 <setup@@Base>
  406570:	call   404770 <boolean_unary_operator_is_read_properly@@Base>
  406575:	lea    rdi,[rip+0x6f2e]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  40657c:	mov    al,0x0
  40657e:	call   403110 <printf@plt>
  406583:	lea    rdi,[rip+0x6eec]        # 40d476 <_IO_stdin_used@@Base+0x476>
  40658a:	lea    rsi,[rip+0x6ef7]        # 40d488 <_IO_stdin_used@@Base+0x488>
  406591:	lea    rdx,[rip+0x6f65]        # 40d4fd <_IO_stdin_used@@Base+0x4fd>
  406598:	mov    DWORD PTR [rbp-0x2c],eax
  40659b:	mov    al,0x0
  40659d:	call   403110 <printf@plt>
  4065a2:	mov    DWORD PTR [rbp-0x30],eax
  4065a5:	call   4039a0 <setup@@Base>
  4065aa:	call   4043c0 <boolean_binary_operator_is_read_properly@@Base>
  4065af:	lea    rdi,[rip+0x6ef4]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  4065b6:	mov    al,0x0
  4065b8:	call   403110 <printf@plt>
  4065bd:	lea    rdi,[rip+0x6eb2]        # 40d476 <_IO_stdin_used@@Base+0x476>
  4065c4:	lea    rsi,[rip+0x6ebd]        # 40d488 <_IO_stdin_used@@Base+0x488>
  4065cb:	lea    rdx,[rip+0x6f54]        # 40d526 <_IO_stdin_used@@Base+0x526>
  4065d2:	mov    DWORD PTR [rbp-0x34],eax
  4065d5:	mov    al,0x0
  4065d7:	call   403110 <printf@plt>
  4065dc:	mov    DWORD PTR [rbp-0x38],eax
  4065df:	call   4039a0 <setup@@Base>
  4065e4:	call   403d30 <boolean_expression_is_read_properly@@Base>
  4065e9:	lea    rdi,[rip+0x6eba]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  4065f0:	mov    al,0x0
  4065f2:	call   403110 <printf@plt>
  4065f7:	lea    rdi,[rip+0x6e78]        # 40d476 <_IO_stdin_used@@Base+0x476>
  4065fe:	lea    rsi,[rip+0x6e83]        # 40d488 <_IO_stdin_used@@Base+0x488>
  406605:	lea    rdx,[rip+0x6f3e]        # 40d54a <_IO_stdin_used@@Base+0x54a>
  40660c:	mov    DWORD PTR [rbp-0x3c],eax
  40660f:	mov    al,0x0
  406611:	call   403110 <printf@plt>
  406616:	mov    DWORD PTR [rbp-0x40],eax
  406619:	call   4039a0 <setup@@Base>
  40661e:	call   404030 <boolean_expression_complex@@Base>
  406623:	lea    rdi,[rip+0x6e80]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  40662a:	mov    al,0x0
  40662c:	call   403110 <printf@plt>
  406631:	lea    rdi,[rip+0x6e3e]        # 40d476 <_IO_stdin_used@@Base+0x476>
  406638:	lea    rsi,[rip+0x6e49]        # 40d488 <_IO_stdin_used@@Base+0x488>
  40663f:	lea    rdx,[rip+0x6f1f]        # 40d565 <_IO_stdin_used@@Base+0x565>
  406646:	mov    DWORD PTR [rbp-0x44],eax
  406649:	mov    al,0x0
  40664b:	call   403110 <printf@plt>
  406650:	mov    DWORD PTR [rbp-0x48],eax
  406653:	call   4039a0 <setup@@Base>
  406658:	call   404af0 <if_statement_only@@Base>
  40665d:	lea    rdi,[rip+0x6e46]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  406664:	mov    al,0x0
  406666:	call   403110 <printf@plt>
  40666b:	lea    rdi,[rip+0x6e04]        # 40d476 <_IO_stdin_used@@Base+0x476>
  406672:	lea    rsi,[rip+0x6e0f]        # 40d488 <_IO_stdin_used@@Base+0x488>
  406679:	lea    rdx,[rip+0x6ef7]        # 40d577 <_IO_stdin_used@@Base+0x577>
  406680:	mov    DWORD PTR [rbp-0x4c],eax
  406683:	mov    al,0x0
  406685:	call   403110 <printf@plt>
  40668a:	mov    DWORD PTR [rbp-0x50],eax
  40668d:	call   4039a0 <setup@@Base>
  406692:	call   404e70 <if_else_statements@@Base>
  406697:	lea    rdi,[rip+0x6e0c]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  40669e:	mov    al,0x0
  4066a0:	call   403110 <printf@plt>
  4066a5:	lea    rdi,[rip+0x6dca]        # 40d476 <_IO_stdin_used@@Base+0x476>
  4066ac:	lea    rsi,[rip+0x6dd5]        # 40d488 <_IO_stdin_used@@Base+0x488>
  4066b3:	lea    rdx,[rip+0x6ed0]        # 40d58a <_IO_stdin_used@@Base+0x58a>
  4066ba:	mov    DWORD PTR [rbp-0x54],eax
  4066bd:	mov    al,0x0
  4066bf:	call   403110 <printf@plt>
  4066c4:	mov    DWORD PTR [rbp-0x58],eax
  4066c7:	call   4039a0 <setup@@Base>
  4066cc:	call   405980 <if_statement_inside_if_statement@@Base>
  4066d1:	lea    rdi,[rip+0x6dd2]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  4066d8:	mov    al,0x0
  4066da:	call   403110 <printf@plt>
  4066df:	lea    rdi,[rip+0x6d90]        # 40d476 <_IO_stdin_used@@Base+0x476>
  4066e6:	lea    rsi,[rip+0x6d9b]        # 40d488 <_IO_stdin_used@@Base+0x488>
  4066ed:	lea    rdx,[rip+0x6eb7]        # 40d5ab <_IO_stdin_used@@Base+0x5ab>
  4066f4:	mov    DWORD PTR [rbp-0x5c],eax
  4066f7:	mov    al,0x0
  4066f9:	call   403110 <printf@plt>
  4066fe:	mov    DWORD PTR [rbp-0x60],eax
  406701:	call   4039a0 <setup@@Base>
  406706:	call   405eb0 <if_statement_inside_else_statement@@Base>
  40670b:	lea    rdi,[rip+0x6d98]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  406712:	mov    al,0x0
  406714:	call   403110 <printf@plt>
  406719:	lea    rdi,[rip+0x6d56]        # 40d476 <_IO_stdin_used@@Base+0x476>
  406720:	lea    rsi,[rip+0x6d61]        # 40d488 <_IO_stdin_used@@Base+0x488>
  406727:	lea    rdx,[rip+0x6ea0]        # 40d5ce <_IO_stdin_used@@Base+0x5ce>
  40672e:	mov    DWORD PTR [rbp-0x64],eax
  406731:	mov    al,0x0
  406733:	call   403110 <printf@plt>
  406738:	mov    DWORD PTR [rbp-0x68],eax
  40673b:	call   4039a0 <setup@@Base>
  406740:	call   405650 <body_with_one_return@@Base>
  406745:	lea    rdi,[rip+0x6d5e]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  40674c:	mov    al,0x0
  40674e:	call   403110 <printf@plt>
  406753:	lea    rdi,[rip+0x6d1c]        # 40d476 <_IO_stdin_used@@Base+0x476>
  40675a:	lea    rsi,[rip+0x6d27]        # 40d488 <_IO_stdin_used@@Base+0x488>
  406761:	lea    rdx,[rip+0x6e7b]        # 40d5e3 <_IO_stdin_used@@Base+0x5e3>
  406768:	mov    DWORD PTR [rbp-0x6c],eax
  40676b:	mov    al,0x0
  40676d:	call   403110 <printf@plt>
  406772:	mov    DWORD PTR [rbp-0x70],eax
  406775:	call   4039a0 <setup@@Base>
  40677a:	call   405230 <body_with_two_returns@@Base>
  40677f:	lea    rdi,[rip+0x6d24]        # 40d4aa <_IO_stdin_used@@Base+0x4aa>
  406786:	mov    al,0x0
  406788:	call   403110 <printf@plt>
  40678d:	lea    rdi,[rip+0x6e65]        # 40d5f9 <_IO_stdin_used@@Base+0x5f9>
  406794:	mov    DWORD PTR [rbp-0x74],eax
  406797:	mov    al,0x0
  406799:	call   403110 <printf@plt>
  40679e:	lea    rdi,[rip+0x6e64]        # 40d609 <_IO_stdin_used@@Base+0x609>
  4067a5:	mov    DWORD PTR [rbp-0x78],eax
  4067a8:	mov    al,0x0
  4067aa:	call   403110 <printf@plt>
  4067af:	lea    rdi,[rip+0x6cb0]        # 40d466 <_IO_stdin_used@@Base+0x466>
  4067b6:	mov    DWORD PTR [rbp-0x7c],eax
  4067b9:	mov    al,0x0
  4067bb:	call   403110 <printf@plt>
  4067c0:	xor    r8d,r8d
  4067c3:	mov    DWORD PTR [rbp-0x80],eax
  4067c6:	mov    eax,r8d
  4067c9:	add    rsp,0x80
  4067d0:	pop    rbp
  4067d1:	ret    
  4067d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067dc:	nop    DWORD PTR [rax+0x0]
  4067e0:	sub    rsp,0x38
  4067e4:	xor    eax,eax
  4067e6:	mov    DWORD PTR [rsp+0x34],eax
  4067ea:	jmp    4067ef <main@@Base+0x3bf>
  4067ef:	mov    eax,DWORD PTR [rsp+0x34]
  4067f3:	movsxd rcx,eax
  4067f6:	imul   rcx,rcx,0x30
  4067fa:	lea    rdx,[rip+0xaaaf]        # 4112b0 <_IO_stdin_used@@Base+0x42b0>
  406801:	add    rdx,rcx
  406804:	mov    rdi,QWORD PTR [rdx]
  406807:	mov    rsi,QWORD PTR [rdx+0x8]
  40680b:	mov    r8d,DWORD PTR [rdx+0x10]
  40680f:	mov    QWORD PTR [rsp+0x28],rdx
  406814:	mov    edx,r8d
  406817:	mov    DWORD PTR [rsp+0x24],eax
  40681b:	call   40abd0 <read_boolean_unary_expression@@Base+0x810>
  406820:	xor    eax,eax
  406822:	mov    rcx,QWORD PTR [rsp+0x28]
  406827:	mov    edx,DWORD PTR [rcx+0x18]
  40682a:	mov    rsi,QWORD PTR [rcx+0x20]
  40682e:	mov    rdi,QWORD PTR [rcx+0x28]
  406832:	cmp    eax,edx
  406834:	mov    QWORD PTR [rsp+0x18],rdi
  406839:	mov    DWORD PTR [rsp+0x14],edx
  40683d:	mov    QWORD PTR [rsp+0x8],rsi
  406842:	mov    DWORD PTR [rsp+0x4],eax
  406846:	jge    4068b7 <main@@Base+0x487>
  40684c:	mov    eax,DWORD PTR [rsp+0x4]
  406850:	movsxd rcx,eax
  406853:	shl    rcx,0x5
  406857:	mov    rdx,QWORD PTR [rsp+0x8]
  40685c:	add    rdx,rcx
  40685f:	mov    edi,DWORD PTR [rdx]
  406861:	mov    rsi,QWORD PTR [rdx+0x8]
  406865:	mov    r8d,DWORD PTR [rdx+0x10]
  406869:	mov    r9b,BYTE PTR [rdx+0x14]
  40686d:	mov    r10d,DWORD PTR [rdx+0x18]
  406871:	mov    edx,r8d
  406874:	movzx  ecx,r9b
  406878:	mov    r8d,r10d
  40687b:	mov    DWORD PTR [rsp],eax
  40687e:	call   40b020 <read_boolean_unary_expression@@Base+0xc60>
  406883:	mov    eax,DWORD PTR [rsp]
  406886:	movsxd rsi,eax
  406889:	shl    rsi,0x4
  40688d:	mov    r11,QWORD PTR [rsp+0x18]
  406892:	add    r11,rsi
  406895:	mov    edi,DWORD PTR [r11]
  406898:	mov    rsi,QWORD PTR [r11+0x8]
  40689c:	call   40b450 <read_boolean_unary_expression@@Base+0x1090>
  4068a1:	mov    eax,DWORD PTR [rsp]
  4068a4:	add    eax,0x1
  4068a7:	mov    ecx,DWORD PTR [rsp+0x14]
  4068ab:	cmp    eax,ecx
  4068ad:	mov    DWORD PTR [rsp+0x4],eax
  4068b1:	jl     40684c <main@@Base+0x41c>
  4068b7:	call   40b870 <read_boolean_unary_expression@@Base+0x14b0>
  4068bc:	call   40c010 <read_boolean_unary_expression@@Base+0x1c50>
  4068c1:	mov    eax,DWORD PTR [rsp+0x24]
  4068c5:	add    eax,0x1
  4068c8:	cmp    eax,0x1
  4068cb:	mov    DWORD PTR [rsp+0x34],eax
  4068cf:	jl     4067ef <main@@Base+0x3bf>
  4068d5:	add    rsp,0x38
  4068d9:	ret    
  4068da:	nop    WORD PTR [rax+rax*1+0x0]
  4068e0:	push   rax
  4068e1:	call   4067e0 <main@@Base+0x3b0>
  4068e6:	mov    QWORD PTR [rip+0xb91f],0x0        # 412210 <__bss_start@@Base+0xa8>
  4068f1:	mov    QWORD PTR [rip+0xb90c],0x0        # 412208 <__bss_start@@Base+0xa0>
  4068fc:	mov    QWORD PTR [rip+0xb8f9],0x0        # 412200 <__bss_start@@Base+0x98>
  406907:	mov    QWORD PTR [rip+0xb8e6],0x0        # 4121f8 <__bss_start@@Base+0x90>
  406912:	mov    QWORD PTR [rip+0xb8d3],0x0        # 4121f0 <__bss_start@@Base+0x88>
  40691d:	mov    QWORD PTR [rip+0xb8c0],0x0        # 4121e8 <__bss_start@@Base+0x80>
  406928:	mov    QWORD PTR [rip+0xb8ad],0x0        # 4121e0 <__bss_start@@Base+0x78>
  406933:	mov    QWORD PTR [rip+0xb89a],0x0        # 4121d8 <__bss_start@@Base+0x70>
  40693e:	mov    QWORD PTR [rip+0xb887],0x0        # 4121d0 <__bss_start@@Base+0x68>
  406949:	mov    QWORD PTR [rip+0xb874],0x0        # 4121c8 <__bss_start@@Base+0x60>
  406954:	mov    QWORD PTR [rip+0xb861],0x0        # 4121c0 <__bss_start@@Base+0x58>
  40695f:	mov    QWORD PTR [rip+0xb84e],0x0        # 4121b8 <__bss_start@@Base+0x50>
  40696a:	mov    QWORD PTR [rip+0xb83b],0x0        # 4121b0 <__bss_start@@Base+0x48>
  406975:	mov    QWORD PTR [rip+0xb828],0x0        # 4121a8 <__bss_start@@Base+0x40>
  406980:	mov    QWORD PTR [rip+0xb815],0x0        # 4121a0 <__bss_start@@Base+0x38>
  40698b:	mov    QWORD PTR [rip+0xb802],0x0        # 412198 <__bss_start@@Base+0x30>
  406996:	mov    QWORD PTR [rip+0xb7ef],0x0        # 412190 <__bss_start@@Base+0x28>
  4069a1:	mov    QWORD PTR [rip+0xb7dc],0x0        # 412188 <__bss_start@@Base+0x20>
  4069ac:	mov    QWORD PTR [rip+0xb7c9],0x0        # 412180 <__bss_start@@Base+0x18>
  4069b7:	mov    QWORD PTR [rip+0xb85e],0x0        # 412220 <__bss_start@@Base+0xb8>
  4069c2:	mov    QWORD PTR [rip+0xb84b],0x0        # 412218 <__bss_start@@Base+0xb0>
  4069cd:	mov    QWORD PTR [rip+0xb8b0],0x0        # 412288 <__bss_start@@Base+0x120>
  4069d8:	mov    QWORD PTR [rip+0xb89d],0x0        # 412280 <__bss_start@@Base+0x118>
  4069e3:	mov    QWORD PTR [rip+0xb88a],0x0        # 412278 <__bss_start@@Base+0x110>
  4069ee:	mov    QWORD PTR [rip+0xb877],0x0        # 412270 <__bss_start@@Base+0x108>
  4069f9:	mov    QWORD PTR [rip+0xb864],0x0        # 412268 <__bss_start@@Base+0x100>
  406a04:	mov    QWORD PTR [rip+0xb851],0x0        # 412260 <__bss_start@@Base+0xf8>
  406a0f:	mov    QWORD PTR [rip+0xb83e],0x0        # 412258 <__bss_start@@Base+0xf0>
  406a1a:	mov    QWORD PTR [rip+0xb82b],0x0        # 412250 <__bss_start@@Base+0xe8>
  406a25:	mov    QWORD PTR [rip+0xb818],0x0        # 412248 <__bss_start@@Base+0xe0>
  406a30:	mov    QWORD PTR [rip+0xb805],0x0        # 412240 <__bss_start@@Base+0xd8>
  406a3b:	mov    QWORD PTR [rip+0xb7f2],0x0        # 412238 <__bss_start@@Base+0xd0>
  406a46:	mov    QWORD PTR [rip+0xb7df],0x0        # 412230 <__bss_start@@Base+0xc8>
  406a51:	mov    QWORD PTR [rip+0xb83c],0x0        # 412298 <__bss_start@@Base+0x130>
  406a5c:	mov    QWORD PTR [rip+0xb829],0x0        # 412290 <__bss_start@@Base+0x128>
  406a67:	mov    QWORD PTR [rip+0xb836],0x0        # 4122a8 <__bss_start@@Base+0x140>
  406a72:	mov    QWORD PTR [rip+0xb823],0x0        # 4122a0 <__bss_start@@Base+0x138>
  406a7d:	mov    QWORD PTR [rip+0xb860],0x0        # 4122e8 <__bss_start@@Base+0x180>
  406a88:	mov    QWORD PTR [rip+0xb84d],0x0        # 4122e0 <__bss_start@@Base+0x178>
  406a93:	mov    QWORD PTR [rip+0xb83a],0x0        # 4122d8 <__bss_start@@Base+0x170>
  406a9e:	mov    QWORD PTR [rip+0xb827],0x0        # 4122d0 <__bss_start@@Base+0x168>
  406aa9:	mov    QWORD PTR [rip+0xb814],0x0        # 4122c8 <__bss_start@@Base+0x160>
  406ab4:	mov    QWORD PTR [rip+0xb801],0x0        # 4122c0 <__bss_start@@Base+0x158>
  406abf:	mov    QWORD PTR [rip+0xb7ee],0x0        # 4122b8 <__bss_start@@Base+0x150>
  406aca:	mov    QWORD PTR [rip+0xb7db],0x0        # 4122b0 <__bss_start@@Base+0x148>
  406ad5:	mov    QWORD PTR [rip+0xb848],0x0        # 412328 <__bss_start@@Base+0x1c0>
  406ae0:	mov    QWORD PTR [rip+0xb835],0x0        # 412320 <__bss_start@@Base+0x1b8>
  406aeb:	mov    QWORD PTR [rip+0xb822],0x0        # 412318 <__bss_start@@Base+0x1b0>
  406af6:	mov    QWORD PTR [rip+0xb80f],0x0        # 412310 <__bss_start@@Base+0x1a8>
  406b01:	mov    QWORD PTR [rip+0xb7fc],0x0        # 412308 <__bss_start@@Base+0x1a0>
  406b0c:	mov    QWORD PTR [rip+0xb7e9],0x0        # 412300 <__bss_start@@Base+0x198>
  406b17:	mov    QWORD PTR [rip+0xb7d6],0x0        # 4122f8 <__bss_start@@Base+0x190>
  406b22:	mov    QWORD PTR [rip+0xb7c3],0x0        # 4122f0 <__bss_start@@Base+0x188>
  406b2d:	mov    QWORD PTR [rip+0xb848],0x0        # 412380 <__bss_start@@Base+0x218>
  406b38:	mov    QWORD PTR [rip+0xb835],0x0        # 412378 <__bss_start@@Base+0x210>
  406b43:	mov    QWORD PTR [rip+0xb822],0x0        # 412370 <__bss_start@@Base+0x208>
  406b4e:	mov    QWORD PTR [rip+0xb80f],0x0        # 412368 <__bss_start@@Base+0x200>
  406b59:	mov    QWORD PTR [rip+0xb7fc],0x0        # 412360 <__bss_start@@Base+0x1f8>
  406b64:	mov    QWORD PTR [rip+0xb7e9],0x0        # 412358 <__bss_start@@Base+0x1f0>
  406b6f:	mov    QWORD PTR [rip+0xb7d6],0x0        # 412350 <__bss_start@@Base+0x1e8>
  406b7a:	mov    QWORD PTR [rip+0xb7c3],0x0        # 412348 <__bss_start@@Base+0x1e0>
  406b85:	mov    QWORD PTR [rip+0xb7b0],0x0        # 412340 <__bss_start@@Base+0x1d8>
  406b90:	mov    QWORD PTR [rip+0xb79d],0x0        # 412338 <__bss_start@@Base+0x1d0>
  406b9b:	mov    QWORD PTR [rip+0xb78a],0x0        # 412330 <__bss_start@@Base+0x1c8>
  406ba6:	mov    QWORD PTR [rip+0xb817],0x0        # 4123c8 <__bss_start@@Base+0x260>
  406bb1:	mov    QWORD PTR [rip+0xb804],0x0        # 4123c0 <__bss_start@@Base+0x258>
  406bbc:	mov    QWORD PTR [rip+0xb7f1],0x0        # 4123b8 <__bss_start@@Base+0x250>
  406bc7:	mov    QWORD PTR [rip+0xb7de],0x0        # 4123b0 <__bss_start@@Base+0x248>
  406bd2:	mov    QWORD PTR [rip+0xb7cb],0x0        # 4123a8 <__bss_start@@Base+0x240>
  406bdd:	mov    QWORD PTR [rip+0xb7b8],0x0        # 4123a0 <__bss_start@@Base+0x238>
  406be8:	mov    QWORD PTR [rip+0xb7a5],0x0        # 412398 <__bss_start@@Base+0x230>
  406bf3:	mov    QWORD PTR [rip+0xb792],0x0        # 412390 <__bss_start@@Base+0x228>
  406bfe:	mov    QWORD PTR [rip+0xb847],0x0        # 412450 <__bss_start@@Base+0x2e8>
  406c09:	mov    QWORD PTR [rip+0xb834],0x0        # 412448 <__bss_start@@Base+0x2e0>
  406c14:	mov    QWORD PTR [rip+0xb821],0x0        # 412440 <__bss_start@@Base+0x2d8>
  406c1f:	mov    QWORD PTR [rip+0xb80e],0x0        # 412438 <__bss_start@@Base+0x2d0>
  406c2a:	mov    QWORD PTR [rip+0xb7fb],0x0        # 412430 <__bss_start@@Base+0x2c8>
  406c35:	mov    QWORD PTR [rip+0xb7e8],0x0        # 412428 <__bss_start@@Base+0x2c0>
  406c40:	mov    QWORD PTR [rip+0xb7d5],0x0        # 412420 <__bss_start@@Base+0x2b8>
  406c4b:	mov    QWORD PTR [rip+0xb7c2],0x0        # 412418 <__bss_start@@Base+0x2b0>
  406c56:	mov    QWORD PTR [rip+0xb7af],0x0        # 412410 <__bss_start@@Base+0x2a8>
  406c61:	mov    QWORD PTR [rip+0xb79c],0x0        # 412408 <__bss_start@@Base+0x2a0>
  406c6c:	mov    QWORD PTR [rip+0xb789],0x0        # 412400 <__bss_start@@Base+0x298>
  406c77:	mov    QWORD PTR [rip+0xb776],0x0        # 4123f8 <__bss_start@@Base+0x290>
  406c82:	mov    QWORD PTR [rip+0xb763],0x0        # 4123f0 <__bss_start@@Base+0x288>
  406c8d:	mov    QWORD PTR [rip+0xb750],0x0        # 4123e8 <__bss_start@@Base+0x280>
  406c98:	mov    QWORD PTR [rip+0xb73d],0x0        # 4123e0 <__bss_start@@Base+0x278>
  406ca3:	mov    QWORD PTR [rip+0xb72a],0x0        # 4123d8 <__bss_start@@Base+0x270>
  406cae:	mov    QWORD PTR [rip+0xb717],0x0        # 4123d0 <__bss_start@@Base+0x268>
  406cb9:	mov    QWORD PTR [rip+0xb81c],0x0        # 4124e0 <__bss_start@@Base+0x378>
  406cc4:	mov    QWORD PTR [rip+0xb809],0x0        # 4124d8 <__bss_start@@Base+0x370>
  406ccf:	mov    QWORD PTR [rip+0xb7f6],0x0        # 4124d0 <__bss_start@@Base+0x368>
  406cda:	mov    QWORD PTR [rip+0xb7e3],0x0        # 4124c8 <__bss_start@@Base+0x360>
  406ce5:	mov    QWORD PTR [rip+0xb7d0],0x0        # 4124c0 <__bss_start@@Base+0x358>
  406cf0:	mov    QWORD PTR [rip+0xb7bd],0x0        # 4124b8 <__bss_start@@Base+0x350>
  406cfb:	mov    QWORD PTR [rip+0xb7aa],0x0        # 4124b0 <__bss_start@@Base+0x348>
  406d06:	mov    QWORD PTR [rip+0xb797],0x0        # 4124a8 <__bss_start@@Base+0x340>
  406d11:	mov    QWORD PTR [rip+0xb784],0x0        # 4124a0 <__bss_start@@Base+0x338>
  406d1c:	mov    QWORD PTR [rip+0xb771],0x0        # 412498 <__bss_start@@Base+0x330>
  406d27:	mov    QWORD PTR [rip+0xb75e],0x0        # 412490 <__bss_start@@Base+0x328>
  406d32:	mov    QWORD PTR [rip+0xb74b],0x0        # 412488 <__bss_start@@Base+0x320>
  406d3d:	mov    QWORD PTR [rip+0xb738],0x0        # 412480 <__bss_start@@Base+0x318>
  406d48:	mov    QWORD PTR [rip+0xb725],0x0        # 412478 <__bss_start@@Base+0x310>
  406d53:	mov    QWORD PTR [rip+0xb712],0x0        # 412470 <__bss_start@@Base+0x308>
  406d5e:	mov    QWORD PTR [rip+0xb6ff],0x0        # 412468 <__bss_start@@Base+0x300>
  406d69:	mov    QWORD PTR [rip+0xb6ec],0x0        # 412460 <__bss_start@@Base+0x2f8>
  406d74:	mov    QWORD PTR [rip+0xb7c1],0x0        # 412540 <__bss_start@@Base+0x3d8>
  406d7f:	mov    QWORD PTR [rip+0xb7ae],0x0        # 412538 <__bss_start@@Base+0x3d0>
  406d8a:	mov    QWORD PTR [rip+0xb79b],0x0        # 412530 <__bss_start@@Base+0x3c8>
  406d95:	mov    QWORD PTR [rip+0xb788],0x0        # 412528 <__bss_start@@Base+0x3c0>
  406da0:	mov    QWORD PTR [rip+0xb775],0x0        # 412520 <__bss_start@@Base+0x3b8>
  406dab:	mov    QWORD PTR [rip+0xb762],0x0        # 412518 <__bss_start@@Base+0x3b0>
  406db6:	mov    QWORD PTR [rip+0xb74f],0x0        # 412510 <__bss_start@@Base+0x3a8>
  406dc1:	mov    QWORD PTR [rip+0xb73c],0x0        # 412508 <__bss_start@@Base+0x3a0>
  406dcc:	mov    QWORD PTR [rip+0xb729],0x0        # 412500 <__bss_start@@Base+0x398>
  406dd7:	mov    QWORD PTR [rip+0xb716],0x0        # 4124f8 <__bss_start@@Base+0x390>
  406de2:	mov    QWORD PTR [rip+0xb703],0x0        # 4124f0 <__bss_start@@Base+0x388>
  406ded:	mov    QWORD PTR [rip+0xb7a8],0x0        # 4125a0 <__bss_start@@Base+0x438>
  406df8:	mov    QWORD PTR [rip+0xb795],0x0        # 412598 <__bss_start@@Base+0x430>
  406e03:	mov    QWORD PTR [rip+0xb782],0x0        # 412590 <__bss_start@@Base+0x428>
  406e0e:	mov    QWORD PTR [rip+0xb76f],0x0        # 412588 <__bss_start@@Base+0x420>
  406e19:	mov    QWORD PTR [rip+0xb75c],0x0        # 412580 <__bss_start@@Base+0x418>
  406e24:	mov    QWORD PTR [rip+0xb749],0x0        # 412578 <__bss_start@@Base+0x410>
  406e2f:	mov    QWORD PTR [rip+0xb736],0x0        # 412570 <__bss_start@@Base+0x408>
  406e3a:	mov    QWORD PTR [rip+0xb723],0x0        # 412568 <__bss_start@@Base+0x400>
  406e45:	mov    QWORD PTR [rip+0xb710],0x0        # 412560 <__bss_start@@Base+0x3f8>
  406e50:	mov    QWORD PTR [rip+0xb6fd],0x0        # 412558 <__bss_start@@Base+0x3f0>
  406e5b:	mov    QWORD PTR [rip+0xb6ea],0x0        # 412550 <__bss_start@@Base+0x3e8>
  406e66:	mov    QWORD PTR [rip+0xb7bf],0x0        # 412630 <__bss_start@@Base+0x4c8>
  406e71:	mov    QWORD PTR [rip+0xb7ac],0x0        # 412628 <__bss_start@@Base+0x4c0>
  406e7c:	mov    QWORD PTR [rip+0xb799],0x0        # 412620 <__bss_start@@Base+0x4b8>
  406e87:	mov    QWORD PTR [rip+0xb786],0x0        # 412618 <__bss_start@@Base+0x4b0>
  406e92:	mov    QWORD PTR [rip+0xb773],0x0        # 412610 <__bss_start@@Base+0x4a8>
  406e9d:	mov    QWORD PTR [rip+0xb760],0x0        # 412608 <__bss_start@@Base+0x4a0>
  406ea8:	mov    QWORD PTR [rip+0xb74d],0x0        # 412600 <__bss_start@@Base+0x498>
  406eb3:	mov    QWORD PTR [rip+0xb73a],0x0        # 4125f8 <__bss_start@@Base+0x490>
  406ebe:	mov    QWORD PTR [rip+0xb727],0x0        # 4125f0 <__bss_start@@Base+0x488>
  406ec9:	mov    QWORD PTR [rip+0xb714],0x0        # 4125e8 <__bss_start@@Base+0x480>
  406ed4:	mov    QWORD PTR [rip+0xb701],0x0        # 4125e0 <__bss_start@@Base+0x478>
  406edf:	mov    QWORD PTR [rip+0xb6ee],0x0        # 4125d8 <__bss_start@@Base+0x470>
  406eea:	mov    QWORD PTR [rip+0xb6db],0x0        # 4125d0 <__bss_start@@Base+0x468>
  406ef5:	mov    QWORD PTR [rip+0xb6c8],0x0        # 4125c8 <__bss_start@@Base+0x460>
  406f00:	mov    QWORD PTR [rip+0xb6b5],0x0        # 4125c0 <__bss_start@@Base+0x458>
  406f0b:	mov    QWORD PTR [rip+0xb6a2],0x0        # 4125b8 <__bss_start@@Base+0x450>
  406f16:	mov    QWORD PTR [rip+0xb68f],0x0        # 4125b0 <__bss_start@@Base+0x448>
  406f21:	mov    QWORD PTR [rip+0xb77c],0x0        # 4126a8 <__bss_start@@Base+0x540>
  406f2c:	mov    QWORD PTR [rip+0xb769],0x0        # 4126a0 <__bss_start@@Base+0x538>
  406f37:	mov    QWORD PTR [rip+0xb756],0x0        # 412698 <__bss_start@@Base+0x530>
  406f42:	mov    QWORD PTR [rip+0xb743],0x0        # 412690 <__bss_start@@Base+0x528>
  406f4d:	mov    QWORD PTR [rip+0xb730],0x0        # 412688 <__bss_start@@Base+0x520>
  406f58:	mov    QWORD PTR [rip+0xb71d],0x0        # 412680 <__bss_start@@Base+0x518>
  406f63:	mov    QWORD PTR [rip+0xb70a],0x0        # 412678 <__bss_start@@Base+0x510>
  406f6e:	mov    QWORD PTR [rip+0xb6f7],0x0        # 412670 <__bss_start@@Base+0x508>
  406f79:	mov    QWORD PTR [rip+0xb6e4],0x0        # 412668 <__bss_start@@Base+0x500>
  406f84:	mov    QWORD PTR [rip+0xb6d1],0x0        # 412660 <__bss_start@@Base+0x4f8>
  406f8f:	mov    QWORD PTR [rip+0xb6be],0x0        # 412658 <__bss_start@@Base+0x4f0>
  406f9a:	mov    QWORD PTR [rip+0xb6ab],0x0        # 412650 <__bss_start@@Base+0x4e8>
  406fa5:	mov    QWORD PTR [rip+0xb698],0x0        # 412648 <__bss_start@@Base+0x4e0>
  406fb0:	mov    QWORD PTR [rip+0xb685],0x0        # 412640 <__bss_start@@Base+0x4d8>
  406fbb:	mov    QWORD PTR [rip+0xb73a],0x0        # 412700 <__bss_start@@Base+0x598>
  406fc6:	mov    QWORD PTR [rip+0xb727],0x0        # 4126f8 <__bss_start@@Base+0x590>
  406fd1:	mov    QWORD PTR [rip+0xb714],0x0        # 4126f0 <__bss_start@@Base+0x588>
  406fdc:	mov    QWORD PTR [rip+0xb701],0x0        # 4126e8 <__bss_start@@Base+0x580>
  406fe7:	mov    QWORD PTR [rip+0xb6ee],0x0        # 4126e0 <__bss_start@@Base+0x578>
  406ff2:	mov    QWORD PTR [rip+0xb6db],0x0        # 4126d8 <__bss_start@@Base+0x570>
  406ffd:	mov    QWORD PTR [rip+0xb6c8],0x0        # 4126d0 <__bss_start@@Base+0x568>
  407008:	mov    QWORD PTR [rip+0xb6b5],0x0        # 4126c8 <__bss_start@@Base+0x560>
  407013:	mov    QWORD PTR [rip+0xb6a2],0x0        # 4126c0 <__bss_start@@Base+0x558>
  40701e:	mov    QWORD PTR [rip+0xb68f],0x0        # 4126b8 <__bss_start@@Base+0x550>
  407029:	mov    QWORD PTR [rip+0xb67c],0x0        # 4126b0 <__bss_start@@Base+0x548>
  407034:	mov    QWORD PTR [rip+0xb721],0x0        # 412760 <__bss_start@@Base+0x5f8>
  40703f:	mov    QWORD PTR [rip+0xb70e],0x0        # 412758 <__bss_start@@Base+0x5f0>
  40704a:	mov    QWORD PTR [rip+0xb6fb],0x0        # 412750 <__bss_start@@Base+0x5e8>
  407055:	mov    QWORD PTR [rip+0xb6e8],0x0        # 412748 <__bss_start@@Base+0x5e0>
  407060:	mov    QWORD PTR [rip+0xb6d5],0x0        # 412740 <__bss_start@@Base+0x5d8>
  40706b:	mov    QWORD PTR [rip+0xb6c2],0x0        # 412738 <__bss_start@@Base+0x5d0>
  407076:	mov    QWORD PTR [rip+0xb6af],0x0        # 412730 <__bss_start@@Base+0x5c8>
  407081:	mov    QWORD PTR [rip+0xb69c],0x0        # 412728 <__bss_start@@Base+0x5c0>
  40708c:	mov    QWORD PTR [rip+0xb689],0x0        # 412720 <__bss_start@@Base+0x5b8>
  407097:	mov    QWORD PTR [rip+0xb676],0x0        # 412718 <__bss_start@@Base+0x5b0>
  4070a2:	mov    QWORD PTR [rip+0xb663],0x0        # 412710 <__bss_start@@Base+0x5a8>
  4070ad:	mov    QWORD PTR [rip+0xb6b8],0x0        # 412770 <__bss_start@@Base+0x608>
  4070b8:	mov    QWORD PTR [rip+0xb6a5],0x0        # 412768 <__bss_start@@Base+0x600>
  4070c3:	pop    rax
  4070c4:	ret    
  4070c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070cf:	nop
  4070d0:	push   rax
  4070d1:	lea    rdi,[rip+0xfffffffffffff708]        # 4067e0 <main@@Base+0x3b0>
  4070d8:	lea    rsi,[rip+0xfffffffffffff801]        # 4068e0 <main@@Base+0x4b0>
  4070df:	call   40c3d0 <__gcov_flush@@Base+0xa0>
  4070e4:	pop    rax
  4070e5:	ret    
  4070e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004070f0 <init_token_int_type@@Base>:
  4070f0:	push   rbp
  4070f1:	mov    rbp,rsp
  4070f4:	mov    rax,QWORD PTR [rip+0xb685]        # 412780 <__bss_start@@Base+0x618>
  4070fb:	add    rax,0x1
  4070ff:	mov    QWORD PTR [rip+0xb67a],rax        # 412780 <__bss_start@@Base+0x618>
  407106:	mov    QWORD PTR [rbp-0x10],rdi
  40710a:	mov    rax,QWORD PTR [rip+0xb677]        # 412788 <__bss_start@@Base+0x620>
  407111:	add    rax,0x1
  407115:	mov    QWORD PTR [rip+0xb66c],rax        # 412788 <__bss_start@@Base+0x620>
  40711c:	mov    rax,QWORD PTR [rbp-0x10]
  407120:	mov    QWORD PTR [rbp-0x8],rax
  407124:	mov    rcx,QWORD PTR [rbp-0x8]
  407128:	mov    DWORD PTR [rcx],0x0
  40712e:	pop    rbp
  40712f:	ret    

0000000000407130 <init_token_int_value@@Base>:
  407130:	push   rbp
  407131:	mov    rbp,rsp
  407134:	mov    rax,QWORD PTR [rip+0xb655]        # 412790 <__bss_start@@Base+0x628>
  40713b:	add    rax,0x1
  40713f:	mov    QWORD PTR [rip+0xb64a],rax        # 412790 <__bss_start@@Base+0x628>
  407146:	mov    QWORD PTR [rbp-0x18],rdi
  40714a:	mov    DWORD PTR [rbp-0x1c],esi
  40714d:	mov    rax,QWORD PTR [rip+0xb644]        # 412798 <__bss_start@@Base+0x630>
  407154:	add    rax,0x1
  407158:	mov    QWORD PTR [rip+0xb639],rax        # 412798 <__bss_start@@Base+0x630>
  40715f:	mov    rax,QWORD PTR [rbp-0x18]
  407163:	mov    QWORD PTR [rbp-0x8],rax
  407167:	mov    ecx,DWORD PTR [rbp-0x1c]
  40716a:	mov    DWORD PTR [rbp-0xc],ecx
  40716d:	mov    rdx,QWORD PTR [rbp-0x8]
  407171:	mov    DWORD PTR [rdx],0x1
  407177:	mov    esi,DWORD PTR [rbp-0xc]
  40717a:	mov    rdx,QWORD PTR [rbp-0x8]
  40717e:	mov    DWORD PTR [rdx+0x4],esi
  407181:	pop    rbp
  407182:	ret    
  407183:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40718d:	nop    DWORD PTR [rax]

0000000000407190 <init_token_function@@Base>:
  407190:	push   rbp
  407191:	mov    rbp,rsp
  407194:	mov    rax,QWORD PTR [rip+0xb605]        # 4127a0 <__bss_start@@Base+0x638>
  40719b:	add    rax,0x1
  40719f:	mov    QWORD PTR [rip+0xb5fa],rax        # 4127a0 <__bss_start@@Base+0x638>
  4071a6:	mov    QWORD PTR [rbp-0x18],rdi
  4071aa:	mov    QWORD PTR [rbp-0x20],rsi
  4071ae:	mov    rax,QWORD PTR [rip+0xb5f3]        # 4127a8 <__bss_start@@Base+0x640>
  4071b5:	add    rax,0x1
  4071b9:	mov    QWORD PTR [rip+0xb5e8],rax        # 4127a8 <__bss_start@@Base+0x640>
  4071c0:	mov    rax,QWORD PTR [rbp-0x18]
  4071c4:	mov    QWORD PTR [rbp-0x8],rax
  4071c8:	mov    rcx,QWORD PTR [rbp-0x20]
  4071cc:	mov    QWORD PTR [rbp-0x10],rcx
  4071d0:	mov    rdx,QWORD PTR [rbp-0x8]
  4071d4:	mov    DWORD PTR [rdx],0x2
  4071da:	mov    rdx,QWORD PTR [rbp-0x10]
  4071de:	mov    rsi,QWORD PTR [rbp-0x8]
  4071e2:	mov    QWORD PTR [rsi+0x8],rdx
  4071e6:	pop    rbp
  4071e7:	ret    
  4071e8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004071f0 <init_token_opar@@Base>:
  4071f0:	push   rbp
  4071f1:	mov    rbp,rsp
  4071f4:	mov    rax,QWORD PTR [rip+0xb5b5]        # 4127b0 <__bss_start@@Base+0x648>
  4071fb:	add    rax,0x1
  4071ff:	mov    QWORD PTR [rip+0xb5aa],rax        # 4127b0 <__bss_start@@Base+0x648>
  407206:	mov    QWORD PTR [rbp-0x10],rdi
  40720a:	mov    rax,QWORD PTR [rip+0xb5a7]        # 4127b8 <__bss_start@@Base+0x650>
  407211:	add    rax,0x1
  407215:	mov    QWORD PTR [rip+0xb59c],rax        # 4127b8 <__bss_start@@Base+0x650>
  40721c:	mov    rax,QWORD PTR [rbp-0x10]
  407220:	mov    QWORD PTR [rbp-0x8],rax
  407224:	mov    rcx,QWORD PTR [rbp-0x8]
  407228:	mov    DWORD PTR [rcx],0x3
  40722e:	pop    rbp
  40722f:	ret    

0000000000407230 <init_token_cpar@@Base>:
  407230:	push   rbp
  407231:	mov    rbp,rsp
  407234:	mov    rax,QWORD PTR [rip+0xb585]        # 4127c0 <__bss_start@@Base+0x658>
  40723b:	add    rax,0x1
  40723f:	mov    QWORD PTR [rip+0xb57a],rax        # 4127c0 <__bss_start@@Base+0x658>
  407246:	mov    QWORD PTR [rbp-0x10],rdi
  40724a:	mov    rax,QWORD PTR [rip+0xb577]        # 4127c8 <__bss_start@@Base+0x660>
  407251:	add    rax,0x1
  407255:	mov    QWORD PTR [rip+0xb56c],rax        # 4127c8 <__bss_start@@Base+0x660>
  40725c:	mov    rax,QWORD PTR [rbp-0x10]
  407260:	mov    QWORD PTR [rbp-0x8],rax
  407264:	mov    rcx,QWORD PTR [rbp-0x8]
  407268:	mov    DWORD PTR [rcx],0x4
  40726e:	pop    rbp
  40726f:	ret    

0000000000407270 <init_token_obra@@Base>:
  407270:	push   rbp
  407271:	mov    rbp,rsp
  407274:	mov    rax,QWORD PTR [rip+0xb555]        # 4127d0 <__bss_start@@Base+0x668>
  40727b:	add    rax,0x1
  40727f:	mov    QWORD PTR [rip+0xb54a],rax        # 4127d0 <__bss_start@@Base+0x668>
  407286:	mov    QWORD PTR [rbp-0x10],rdi
  40728a:	mov    rax,QWORD PTR [rip+0xb547]        # 4127d8 <__bss_start@@Base+0x670>
  407291:	add    rax,0x1
  407295:	mov    QWORD PTR [rip+0xb53c],rax        # 4127d8 <__bss_start@@Base+0x670>
  40729c:	mov    rax,QWORD PTR [rbp-0x10]
  4072a0:	mov    QWORD PTR [rbp-0x8],rax
  4072a4:	mov    rcx,QWORD PTR [rbp-0x8]
  4072a8:	mov    DWORD PTR [rcx],0x5
  4072ae:	pop    rbp
  4072af:	ret    

00000000004072b0 <init_token_cbra@@Base>:
  4072b0:	push   rbp
  4072b1:	mov    rbp,rsp
  4072b4:	mov    rax,QWORD PTR [rip+0xb525]        # 4127e0 <__bss_start@@Base+0x678>
  4072bb:	add    rax,0x1
  4072bf:	mov    QWORD PTR [rip+0xb51a],rax        # 4127e0 <__bss_start@@Base+0x678>
  4072c6:	mov    QWORD PTR [rbp-0x10],rdi
  4072ca:	mov    rax,QWORD PTR [rip+0xb517]        # 4127e8 <__bss_start@@Base+0x680>
  4072d1:	add    rax,0x1
  4072d5:	mov    QWORD PTR [rip+0xb50c],rax        # 4127e8 <__bss_start@@Base+0x680>
  4072dc:	mov    rax,QWORD PTR [rbp-0x10]
  4072e0:	mov    QWORD PTR [rbp-0x8],rax
  4072e4:	mov    rcx,QWORD PTR [rbp-0x8]
  4072e8:	mov    DWORD PTR [rcx],0x6
  4072ee:	pop    rbp
  4072ef:	ret    

00000000004072f0 <init_token_return@@Base>:
  4072f0:	push   rbp
  4072f1:	mov    rbp,rsp
  4072f4:	mov    rax,QWORD PTR [rip+0xb4f5]        # 4127f0 <__bss_start@@Base+0x688>
  4072fb:	add    rax,0x1
  4072ff:	mov    QWORD PTR [rip+0xb4ea],rax        # 4127f0 <__bss_start@@Base+0x688>
  407306:	mov    QWORD PTR [rbp-0x10],rdi
  40730a:	mov    rax,QWORD PTR [rip+0xb4e7]        # 4127f8 <__bss_start@@Base+0x690>
  407311:	add    rax,0x1
  407315:	mov    QWORD PTR [rip+0xb4dc],rax        # 4127f8 <__bss_start@@Base+0x690>
  40731c:	mov    rax,QWORD PTR [rbp-0x10]
  407320:	mov    QWORD PTR [rbp-0x8],rax
  407324:	mov    rcx,QWORD PTR [rbp-0x8]
  407328:	mov    DWORD PTR [rcx],0x7
  40732e:	pop    rbp
  40732f:	ret    

0000000000407330 <init_token_semicolon@@Base>:
  407330:	push   rbp
  407331:	mov    rbp,rsp
  407334:	mov    rax,QWORD PTR [rip+0xb4c5]        # 412800 <__bss_start@@Base+0x698>
  40733b:	add    rax,0x1
  40733f:	mov    QWORD PTR [rip+0xb4ba],rax        # 412800 <__bss_start@@Base+0x698>
  407346:	mov    QWORD PTR [rbp-0x10],rdi
  40734a:	mov    rax,QWORD PTR [rip+0xb4b7]        # 412808 <__bss_start@@Base+0x6a0>
  407351:	add    rax,0x1
  407355:	mov    QWORD PTR [rip+0xb4ac],rax        # 412808 <__bss_start@@Base+0x6a0>
  40735c:	mov    rax,QWORD PTR [rbp-0x10]
  407360:	mov    QWORD PTR [rbp-0x8],rax
  407364:	mov    rcx,QWORD PTR [rbp-0x8]
  407368:	mov    DWORD PTR [rcx],0x8
  40736e:	pop    rbp
  40736f:	ret    

0000000000407370 <init_token_eof@@Base>:
  407370:	push   rbp
  407371:	mov    rbp,rsp
  407374:	mov    rax,QWORD PTR [rip+0xb495]        # 412810 <__bss_start@@Base+0x6a8>
  40737b:	add    rax,0x1
  40737f:	mov    QWORD PTR [rip+0xb48a],rax        # 412810 <__bss_start@@Base+0x6a8>
  407386:	mov    QWORD PTR [rbp-0x10],rdi
  40738a:	mov    rax,QWORD PTR [rip+0xb487]        # 412818 <__bss_start@@Base+0x6b0>
  407391:	add    rax,0x1
  407395:	mov    QWORD PTR [rip+0xb47c],rax        # 412818 <__bss_start@@Base+0x6b0>
  40739c:	mov    rax,QWORD PTR [rbp-0x10]
  4073a0:	mov    QWORD PTR [rbp-0x8],rax
  4073a4:	mov    rcx,QWORD PTR [rbp-0x8]
  4073a8:	mov    DWORD PTR [rcx],0x9
  4073ae:	pop    rbp
  4073af:	ret    

00000000004073b0 <init_token_if@@Base>:
  4073b0:	push   rbp
  4073b1:	mov    rbp,rsp
  4073b4:	mov    rax,QWORD PTR [rip+0xb465]        # 412820 <__bss_start@@Base+0x6b8>
  4073bb:	add    rax,0x1
  4073bf:	mov    QWORD PTR [rip+0xb45a],rax        # 412820 <__bss_start@@Base+0x6b8>
  4073c6:	mov    QWORD PTR [rbp-0x10],rdi
  4073ca:	mov    rax,QWORD PTR [rip+0xb457]        # 412828 <__bss_start@@Base+0x6c0>
  4073d1:	add    rax,0x1
  4073d5:	mov    QWORD PTR [rip+0xb44c],rax        # 412828 <__bss_start@@Base+0x6c0>
  4073dc:	mov    rax,QWORD PTR [rbp-0x10]
  4073e0:	mov    QWORD PTR [rbp-0x8],rax
  4073e4:	mov    rcx,QWORD PTR [rbp-0x8]
  4073e8:	mov    DWORD PTR [rcx],0xa
  4073ee:	pop    rbp
  4073ef:	ret    

00000000004073f0 <init_token_else@@Base>:
  4073f0:	push   rbp
  4073f1:	mov    rbp,rsp
  4073f4:	mov    rax,QWORD PTR [rip+0xb435]        # 412830 <__bss_start@@Base+0x6c8>
  4073fb:	add    rax,0x1
  4073ff:	mov    QWORD PTR [rip+0xb42a],rax        # 412830 <__bss_start@@Base+0x6c8>
  407406:	mov    QWORD PTR [rbp-0x10],rdi
  40740a:	mov    rax,QWORD PTR [rip+0xb427]        # 412838 <__bss_start@@Base+0x6d0>
  407411:	add    rax,0x1
  407415:	mov    QWORD PTR [rip+0xb41c],rax        # 412838 <__bss_start@@Base+0x6d0>
  40741c:	mov    rax,QWORD PTR [rbp-0x10]
  407420:	mov    QWORD PTR [rbp-0x8],rax
  407424:	mov    rcx,QWORD PTR [rbp-0x8]
  407428:	mov    DWORD PTR [rcx],0xb
  40742e:	pop    rbp
  40742f:	ret    

0000000000407430 <init_token_boolean_op@@Base>:
  407430:	push   rbp
  407431:	mov    rbp,rsp
  407434:	mov    rax,QWORD PTR [rip+0xb405]        # 412840 <__bss_start@@Base+0x6d8>
  40743b:	add    rax,0x1
  40743f:	mov    QWORD PTR [rip+0xb3fa],rax        # 412840 <__bss_start@@Base+0x6d8>
  407446:	mov    QWORD PTR [rbp-0x18],rdi
  40744a:	mov    QWORD PTR [rbp-0x20],rsi
  40744e:	mov    rax,QWORD PTR [rip+0xb3f3]        # 412848 <__bss_start@@Base+0x6e0>
  407455:	add    rax,0x1
  407459:	mov    QWORD PTR [rip+0xb3e8],rax        # 412848 <__bss_start@@Base+0x6e0>
  407460:	mov    rax,QWORD PTR [rbp-0x18]
  407464:	mov    QWORD PTR [rbp-0x8],rax
  407468:	mov    rcx,QWORD PTR [rbp-0x20]
  40746c:	mov    QWORD PTR [rbp-0x10],rcx
  407470:	mov    rdx,QWORD PTR [rbp-0x8]
  407474:	mov    DWORD PTR [rdx],0xc
  40747a:	mov    rdx,QWORD PTR [rbp-0x10]
  40747e:	mov    rsi,QWORD PTR [rbp-0x8]
  407482:	mov    QWORD PTR [rsi+0x8],rdx
  407486:	pop    rbp
  407487:	ret    
  407488:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407490 <free_token_int_type@@Base>:
  407490:	push   rbp
  407491:	mov    rbp,rsp
  407494:	sub    rsp,0x10
  407498:	mov    rax,QWORD PTR [rip+0xb3b1]        # 412850 <__bss_start@@Base+0x6e8>
  40749f:	add    rax,0x1
  4074a3:	mov    QWORD PTR [rip+0xb3a6],rax        # 412850 <__bss_start@@Base+0x6e8>
  4074aa:	mov    QWORD PTR [rbp-0x10],rdi
  4074ae:	mov    rax,QWORD PTR [rip+0xb3a3]        # 412858 <__bss_start@@Base+0x6f0>
  4074b5:	add    rax,0x1
  4074b9:	mov    QWORD PTR [rip+0xb398],rax        # 412858 <__bss_start@@Base+0x6f0>
  4074c0:	mov    rax,QWORD PTR [rbp-0x10]
  4074c4:	mov    QWORD PTR [rbp-0x8],rax
  4074c8:	mov    rcx,QWORD PTR [rbp-0x8]
  4074cc:	mov    rdi,rcx
  4074cf:	call   403040 <free@plt>
  4074d4:	add    rsp,0x10
  4074d8:	pop    rbp
  4074d9:	ret    
  4074da:	nop    WORD PTR [rax+rax*1+0x0]

00000000004074e0 <free_token_int_value@@Base>:
  4074e0:	push   rbp
  4074e1:	mov    rbp,rsp
  4074e4:	sub    rsp,0x10
  4074e8:	mov    rax,QWORD PTR [rip+0xb371]        # 412860 <__bss_start@@Base+0x6f8>
  4074ef:	add    rax,0x1
  4074f3:	mov    QWORD PTR [rip+0xb366],rax        # 412860 <__bss_start@@Base+0x6f8>
  4074fa:	mov    QWORD PTR [rbp-0x10],rdi
  4074fe:	mov    rax,QWORD PTR [rip+0xb363]        # 412868 <__bss_start@@Base+0x700>
  407505:	add    rax,0x1
  407509:	mov    QWORD PTR [rip+0xb358],rax        # 412868 <__bss_start@@Base+0x700>
  407510:	mov    rax,QWORD PTR [rbp-0x10]
  407514:	mov    QWORD PTR [rbp-0x8],rax
  407518:	mov    rcx,QWORD PTR [rbp-0x8]
  40751c:	mov    rdi,rcx
  40751f:	call   403040 <free@plt>
  407524:	add    rsp,0x10
  407528:	pop    rbp
  407529:	ret    
  40752a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407530 <free_token_function@@Base>:
  407530:	push   rbp
  407531:	mov    rbp,rsp
  407534:	sub    rsp,0x10
  407538:	mov    rax,QWORD PTR [rip+0xb331]        # 412870 <__bss_start@@Base+0x708>
  40753f:	add    rax,0x1
  407543:	mov    QWORD PTR [rip+0xb326],rax        # 412870 <__bss_start@@Base+0x708>
  40754a:	mov    QWORD PTR [rbp-0x10],rdi
  40754e:	mov    rax,QWORD PTR [rip+0xb323]        # 412878 <__bss_start@@Base+0x710>
  407555:	add    rax,0x1
  407559:	mov    QWORD PTR [rip+0xb318],rax        # 412878 <__bss_start@@Base+0x710>
  407560:	mov    rax,QWORD PTR [rbp-0x10]
  407564:	mov    QWORD PTR [rbp-0x8],rax
  407568:	mov    rcx,QWORD PTR [rbp-0x8]
  40756c:	mov    rdi,rcx
  40756f:	call   403040 <free@plt>
  407574:	add    rsp,0x10
  407578:	pop    rbp
  407579:	ret    
  40757a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407580 <free_token_opar@@Base>:
  407580:	push   rbp
  407581:	mov    rbp,rsp
  407584:	sub    rsp,0x10
  407588:	mov    rax,QWORD PTR [rip+0xb2f1]        # 412880 <__bss_start@@Base+0x718>
  40758f:	add    rax,0x1
  407593:	mov    QWORD PTR [rip+0xb2e6],rax        # 412880 <__bss_start@@Base+0x718>
  40759a:	mov    QWORD PTR [rbp-0x10],rdi
  40759e:	mov    rax,QWORD PTR [rip+0xb2e3]        # 412888 <__bss_start@@Base+0x720>
  4075a5:	add    rax,0x1
  4075a9:	mov    QWORD PTR [rip+0xb2d8],rax        # 412888 <__bss_start@@Base+0x720>
  4075b0:	mov    rax,QWORD PTR [rbp-0x10]
  4075b4:	mov    QWORD PTR [rbp-0x8],rax
  4075b8:	mov    rcx,QWORD PTR [rbp-0x8]
  4075bc:	mov    rdi,rcx
  4075bf:	call   403040 <free@plt>
  4075c4:	add    rsp,0x10
  4075c8:	pop    rbp
  4075c9:	ret    
  4075ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004075d0 <free_token_cpar@@Base>:
  4075d0:	push   rbp
  4075d1:	mov    rbp,rsp
  4075d4:	sub    rsp,0x10
  4075d8:	mov    rax,QWORD PTR [rip+0xb2b1]        # 412890 <__bss_start@@Base+0x728>
  4075df:	add    rax,0x1
  4075e3:	mov    QWORD PTR [rip+0xb2a6],rax        # 412890 <__bss_start@@Base+0x728>
  4075ea:	mov    QWORD PTR [rbp-0x10],rdi
  4075ee:	mov    rax,QWORD PTR [rip+0xb2a3]        # 412898 <__bss_start@@Base+0x730>
  4075f5:	add    rax,0x1
  4075f9:	mov    QWORD PTR [rip+0xb298],rax        # 412898 <__bss_start@@Base+0x730>
  407600:	mov    rax,QWORD PTR [rbp-0x10]
  407604:	mov    QWORD PTR [rbp-0x8],rax
  407608:	mov    rcx,QWORD PTR [rbp-0x8]
  40760c:	mov    rdi,rcx
  40760f:	call   403040 <free@plt>
  407614:	add    rsp,0x10
  407618:	pop    rbp
  407619:	ret    
  40761a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407620 <free_token_obra@@Base>:
  407620:	push   rbp
  407621:	mov    rbp,rsp
  407624:	sub    rsp,0x10
  407628:	mov    rax,QWORD PTR [rip+0xb271]        # 4128a0 <__bss_start@@Base+0x738>
  40762f:	add    rax,0x1
  407633:	mov    QWORD PTR [rip+0xb266],rax        # 4128a0 <__bss_start@@Base+0x738>
  40763a:	mov    QWORD PTR [rbp-0x10],rdi
  40763e:	mov    rax,QWORD PTR [rip+0xb263]        # 4128a8 <__bss_start@@Base+0x740>
  407645:	add    rax,0x1
  407649:	mov    QWORD PTR [rip+0xb258],rax        # 4128a8 <__bss_start@@Base+0x740>
  407650:	mov    rax,QWORD PTR [rbp-0x10]
  407654:	mov    QWORD PTR [rbp-0x8],rax
  407658:	mov    rcx,QWORD PTR [rbp-0x8]
  40765c:	mov    rdi,rcx
  40765f:	call   403040 <free@plt>
  407664:	add    rsp,0x10
  407668:	pop    rbp
  407669:	ret    
  40766a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407670 <free_token_cbra@@Base>:
  407670:	push   rbp
  407671:	mov    rbp,rsp
  407674:	sub    rsp,0x10
  407678:	mov    rax,QWORD PTR [rip+0xb231]        # 4128b0 <__bss_start@@Base+0x748>
  40767f:	add    rax,0x1
  407683:	mov    QWORD PTR [rip+0xb226],rax        # 4128b0 <__bss_start@@Base+0x748>
  40768a:	mov    QWORD PTR [rbp-0x10],rdi
  40768e:	mov    rax,QWORD PTR [rip+0xb223]        # 4128b8 <__bss_start@@Base+0x750>
  407695:	add    rax,0x1
  407699:	mov    QWORD PTR [rip+0xb218],rax        # 4128b8 <__bss_start@@Base+0x750>
  4076a0:	mov    rax,QWORD PTR [rbp-0x10]
  4076a4:	mov    QWORD PTR [rbp-0x8],rax
  4076a8:	mov    rcx,QWORD PTR [rbp-0x8]
  4076ac:	mov    rdi,rcx
  4076af:	call   403040 <free@plt>
  4076b4:	add    rsp,0x10
  4076b8:	pop    rbp
  4076b9:	ret    
  4076ba:	nop    WORD PTR [rax+rax*1+0x0]

00000000004076c0 <free_token_return@@Base>:
  4076c0:	push   rbp
  4076c1:	mov    rbp,rsp
  4076c4:	sub    rsp,0x10
  4076c8:	mov    rax,QWORD PTR [rip+0xb1f1]        # 4128c0 <__bss_start@@Base+0x758>
  4076cf:	add    rax,0x1
  4076d3:	mov    QWORD PTR [rip+0xb1e6],rax        # 4128c0 <__bss_start@@Base+0x758>
  4076da:	mov    QWORD PTR [rbp-0x10],rdi
  4076de:	mov    rax,QWORD PTR [rip+0xb1e3]        # 4128c8 <__bss_start@@Base+0x760>
  4076e5:	add    rax,0x1
  4076e9:	mov    QWORD PTR [rip+0xb1d8],rax        # 4128c8 <__bss_start@@Base+0x760>
  4076f0:	mov    rax,QWORD PTR [rbp-0x10]
  4076f4:	mov    QWORD PTR [rbp-0x8],rax
  4076f8:	mov    rcx,QWORD PTR [rbp-0x8]
  4076fc:	mov    rdi,rcx
  4076ff:	call   403040 <free@plt>
  407704:	add    rsp,0x10
  407708:	pop    rbp
  407709:	ret    
  40770a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407710 <free_token_semicolon@@Base>:
  407710:	push   rbp
  407711:	mov    rbp,rsp
  407714:	sub    rsp,0x10
  407718:	mov    rax,QWORD PTR [rip+0xb1b1]        # 4128d0 <__bss_start@@Base+0x768>
  40771f:	add    rax,0x1
  407723:	mov    QWORD PTR [rip+0xb1a6],rax        # 4128d0 <__bss_start@@Base+0x768>
  40772a:	mov    QWORD PTR [rbp-0x10],rdi
  40772e:	mov    rax,QWORD PTR [rip+0xb1a3]        # 4128d8 <__bss_start@@Base+0x770>
  407735:	add    rax,0x1
  407739:	mov    QWORD PTR [rip+0xb198],rax        # 4128d8 <__bss_start@@Base+0x770>
  407740:	mov    rax,QWORD PTR [rbp-0x10]
  407744:	mov    QWORD PTR [rbp-0x8],rax
  407748:	mov    rcx,QWORD PTR [rbp-0x8]
  40774c:	mov    rdi,rcx
  40774f:	call   403040 <free@plt>
  407754:	add    rsp,0x10
  407758:	pop    rbp
  407759:	ret    
  40775a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407760 <free_token_eof@@Base>:
  407760:	push   rbp
  407761:	mov    rbp,rsp
  407764:	sub    rsp,0x10
  407768:	mov    rax,QWORD PTR [rip+0xb171]        # 4128e0 <__bss_start@@Base+0x778>
  40776f:	add    rax,0x1
  407773:	mov    QWORD PTR [rip+0xb166],rax        # 4128e0 <__bss_start@@Base+0x778>
  40777a:	mov    QWORD PTR [rbp-0x10],rdi
  40777e:	mov    rax,QWORD PTR [rip+0xb163]        # 4128e8 <__bss_start@@Base+0x780>
  407785:	add    rax,0x1
  407789:	mov    QWORD PTR [rip+0xb158],rax        # 4128e8 <__bss_start@@Base+0x780>
  407790:	mov    rax,QWORD PTR [rbp-0x10]
  407794:	mov    QWORD PTR [rbp-0x8],rax
  407798:	mov    rcx,QWORD PTR [rbp-0x8]
  40779c:	mov    rdi,rcx
  40779f:	call   403040 <free@plt>
  4077a4:	add    rsp,0x10
  4077a8:	pop    rbp
  4077a9:	ret    
  4077aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004077b0 <free_token_if@@Base>:
  4077b0:	push   rbp
  4077b1:	mov    rbp,rsp
  4077b4:	sub    rsp,0x10
  4077b8:	mov    rax,QWORD PTR [rip+0xb131]        # 4128f0 <__bss_start@@Base+0x788>
  4077bf:	add    rax,0x1
  4077c3:	mov    QWORD PTR [rip+0xb126],rax        # 4128f0 <__bss_start@@Base+0x788>
  4077ca:	mov    QWORD PTR [rbp-0x10],rdi
  4077ce:	mov    rax,QWORD PTR [rip+0xb123]        # 4128f8 <__bss_start@@Base+0x790>
  4077d5:	add    rax,0x1
  4077d9:	mov    QWORD PTR [rip+0xb118],rax        # 4128f8 <__bss_start@@Base+0x790>
  4077e0:	mov    rax,QWORD PTR [rbp-0x10]
  4077e4:	mov    QWORD PTR [rbp-0x8],rax
  4077e8:	mov    rcx,QWORD PTR [rbp-0x8]
  4077ec:	mov    rdi,rcx
  4077ef:	call   403040 <free@plt>
  4077f4:	add    rsp,0x10
  4077f8:	pop    rbp
  4077f9:	ret    
  4077fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407800 <free_token_else@@Base>:
  407800:	push   rbp
  407801:	mov    rbp,rsp
  407804:	sub    rsp,0x10
  407808:	mov    rax,QWORD PTR [rip+0xb0f1]        # 412900 <__bss_start@@Base+0x798>
  40780f:	add    rax,0x1
  407813:	mov    QWORD PTR [rip+0xb0e6],rax        # 412900 <__bss_start@@Base+0x798>
  40781a:	mov    QWORD PTR [rbp-0x10],rdi
  40781e:	mov    rax,QWORD PTR [rip+0xb0e3]        # 412908 <__bss_start@@Base+0x7a0>
  407825:	add    rax,0x1
  407829:	mov    QWORD PTR [rip+0xb0d8],rax        # 412908 <__bss_start@@Base+0x7a0>
  407830:	mov    rax,QWORD PTR [rbp-0x10]
  407834:	mov    QWORD PTR [rbp-0x8],rax
  407838:	mov    rcx,QWORD PTR [rbp-0x8]
  40783c:	mov    rdi,rcx
  40783f:	call   403040 <free@plt>
  407844:	add    rsp,0x10
  407848:	pop    rbp
  407849:	ret    
  40784a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407850 <free_token_boolean_op@@Base>:
  407850:	push   rbp
  407851:	mov    rbp,rsp
  407854:	sub    rsp,0x10
  407858:	mov    rax,QWORD PTR [rip+0xb0b1]        # 412910 <__bss_start@@Base+0x7a8>
  40785f:	add    rax,0x1
  407863:	mov    QWORD PTR [rip+0xb0a6],rax        # 412910 <__bss_start@@Base+0x7a8>
  40786a:	mov    QWORD PTR [rbp-0x10],rdi
  40786e:	mov    eax,0x2
  407873:	mov    ecx,eax
  407875:	mov    eax,0x1
  40787a:	mov    edx,eax
  40787c:	mov    rsi,QWORD PTR [rbp-0x10]
  407880:	mov    QWORD PTR [rbp-0x8],rsi
  407884:	mov    rdi,QWORD PTR [rbp-0x8]
  407888:	mov    rdi,QWORD PTR [rdi+0x8]
  40788c:	cmp    rdi,0x0
  407890:	setne  r8b
  407894:	cmp    rdi,0x0
  407898:	cmovne rcx,rdx
  40789c:	lea    rdx,[rip+0xb06d]        # 412910 <__bss_start@@Base+0x7a8>
  4078a3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4078a7:	add    rdi,0x1
  4078ab:	mov    QWORD PTR [rdx+rcx*8],rdi
  4078af:	test   r8b,0x1
  4078b3:	jne    4078be <free_token_boolean_op@@Base+0x6e>
  4078b9:	jmp    4078dd <free_token_boolean_op@@Base+0x8d>
  4078be:	mov    rax,QWORD PTR [rip+0xb063]        # 412928 <__bss_start@@Base+0x7c0>
  4078c5:	add    rax,0x1
  4078c9:	mov    QWORD PTR [rip+0xb058],rax        # 412928 <__bss_start@@Base+0x7c0>
  4078d0:	mov    rax,QWORD PTR [rbp-0x8]
  4078d4:	mov    rdi,QWORD PTR [rax+0x8]
  4078d8:	call   403040 <free@plt>
  4078dd:	mov    rax,QWORD PTR [rip+0xb04c]        # 412930 <__bss_start@@Base+0x7c8>
  4078e4:	add    rax,0x1
  4078e8:	mov    QWORD PTR [rip+0xb041],rax        # 412930 <__bss_start@@Base+0x7c8>
  4078ef:	mov    rax,QWORD PTR [rbp-0x8]
  4078f3:	mov    rdi,rax
  4078f6:	call   403040 <free@plt>
  4078fb:	add    rsp,0x10
  4078ff:	pop    rbp
  407900:	ret    
  407901:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40790b:	nop    DWORD PTR [rax+rax*1+0x0]
  407910:	sub    rsp,0x38
  407914:	xor    eax,eax
  407916:	mov    DWORD PTR [rsp+0x34],eax
  40791a:	jmp    40791f <free_token_boolean_op@@Base+0xcf>
  40791f:	mov    eax,DWORD PTR [rsp+0x34]
  407923:	movsxd rcx,eax
  407926:	imul   rcx,rcx,0x30
  40792a:	lea    rdx,[rip+0x9e8f]        # 4117c0 <_IO_stdin_used@@Base+0x47c0>
  407931:	add    rdx,rcx
  407934:	mov    rdi,QWORD PTR [rdx]
  407937:	mov    rsi,QWORD PTR [rdx+0x8]
  40793b:	mov    r8d,DWORD PTR [rdx+0x10]
  40793f:	mov    QWORD PTR [rsp+0x28],rdx
  407944:	mov    edx,r8d
  407947:	mov    DWORD PTR [rsp+0x24],eax
  40794b:	call   40abd0 <read_boolean_unary_expression@@Base+0x810>
  407950:	xor    eax,eax
  407952:	mov    rcx,QWORD PTR [rsp+0x28]
  407957:	mov    edx,DWORD PTR [rcx+0x18]
  40795a:	mov    rsi,QWORD PTR [rcx+0x20]
  40795e:	mov    rdi,QWORD PTR [rcx+0x28]
  407962:	cmp    eax,edx
  407964:	mov    QWORD PTR [rsp+0x18],rdi
  407969:	mov    DWORD PTR [rsp+0x14],edx
  40796d:	mov    QWORD PTR [rsp+0x8],rsi
  407972:	mov    DWORD PTR [rsp+0x4],eax
  407976:	jge    4079e7 <free_token_boolean_op@@Base+0x197>
  40797c:	mov    eax,DWORD PTR [rsp+0x4]
  407980:	movsxd rcx,eax
  407983:	shl    rcx,0x5
  407987:	mov    rdx,QWORD PTR [rsp+0x8]
  40798c:	add    rdx,rcx
  40798f:	mov    edi,DWORD PTR [rdx]
  407991:	mov    rsi,QWORD PTR [rdx+0x8]
  407995:	mov    r8d,DWORD PTR [rdx+0x10]
  407999:	mov    r9b,BYTE PTR [rdx+0x14]
  40799d:	mov    r10d,DWORD PTR [rdx+0x18]
  4079a1:	mov    edx,r8d
  4079a4:	movzx  ecx,r9b
  4079a8:	mov    r8d,r10d
  4079ab:	mov    DWORD PTR [rsp],eax
  4079ae:	call   40b020 <read_boolean_unary_expression@@Base+0xc60>
  4079b3:	mov    eax,DWORD PTR [rsp]
  4079b6:	movsxd rsi,eax
  4079b9:	shl    rsi,0x4
  4079bd:	mov    r11,QWORD PTR [rsp+0x18]
  4079c2:	add    r11,rsi
  4079c5:	mov    edi,DWORD PTR [r11]
  4079c8:	mov    rsi,QWORD PTR [r11+0x8]
  4079cc:	call   40b450 <read_boolean_unary_expression@@Base+0x1090>
  4079d1:	mov    eax,DWORD PTR [rsp]
  4079d4:	add    eax,0x1
  4079d7:	mov    ecx,DWORD PTR [rsp+0x14]
  4079db:	cmp    eax,ecx
  4079dd:	mov    DWORD PTR [rsp+0x4],eax
  4079e1:	jl     40797c <free_token_boolean_op@@Base+0x12c>
  4079e7:	call   40b870 <read_boolean_unary_expression@@Base+0x14b0>
  4079ec:	call   40c010 <read_boolean_unary_expression@@Base+0x1c50>
  4079f1:	mov    eax,DWORD PTR [rsp+0x24]
  4079f5:	add    eax,0x1
  4079f8:	cmp    eax,0x1
  4079fb:	mov    DWORD PTR [rsp+0x34],eax
  4079ff:	jl     40791f <free_token_boolean_op@@Base+0xcf>
  407a05:	add    rsp,0x38
  407a09:	ret    
  407a0a:	nop    WORD PTR [rax+rax*1+0x0]
  407a10:	push   rax
  407a11:	call   407910 <free_token_boolean_op@@Base+0xc0>
  407a16:	mov    QWORD PTR [rip+0xad67],0x0        # 412788 <__bss_start@@Base+0x620>
  407a21:	mov    QWORD PTR [rip+0xad54],0x0        # 412780 <__bss_start@@Base+0x618>
  407a2c:	mov    QWORD PTR [rip+0xad61],0x0        # 412798 <__bss_start@@Base+0x630>
  407a37:	mov    QWORD PTR [rip+0xad4e],0x0        # 412790 <__bss_start@@Base+0x628>
  407a42:	mov    QWORD PTR [rip+0xad5b],0x0        # 4127a8 <__bss_start@@Base+0x640>
  407a4d:	mov    QWORD PTR [rip+0xad48],0x0        # 4127a0 <__bss_start@@Base+0x638>
  407a58:	mov    QWORD PTR [rip+0xad55],0x0        # 4127b8 <__bss_start@@Base+0x650>
  407a63:	mov    QWORD PTR [rip+0xad42],0x0        # 4127b0 <__bss_start@@Base+0x648>
  407a6e:	mov    QWORD PTR [rip+0xad4f],0x0        # 4127c8 <__bss_start@@Base+0x660>
  407a79:	mov    QWORD PTR [rip+0xad3c],0x0        # 4127c0 <__bss_start@@Base+0x658>
  407a84:	mov    QWORD PTR [rip+0xad49],0x0        # 4127d8 <__bss_start@@Base+0x670>
  407a8f:	mov    QWORD PTR [rip+0xad36],0x0        # 4127d0 <__bss_start@@Base+0x668>
  407a9a:	mov    QWORD PTR [rip+0xad43],0x0        # 4127e8 <__bss_start@@Base+0x680>
  407aa5:	mov    QWORD PTR [rip+0xad30],0x0        # 4127e0 <__bss_start@@Base+0x678>
  407ab0:	mov    QWORD PTR [rip+0xad3d],0x0        # 4127f8 <__bss_start@@Base+0x690>
  407abb:	mov    QWORD PTR [rip+0xad2a],0x0        # 4127f0 <__bss_start@@Base+0x688>
  407ac6:	mov    QWORD PTR [rip+0xad37],0x0        # 412808 <__bss_start@@Base+0x6a0>
  407ad1:	mov    QWORD PTR [rip+0xad24],0x0        # 412800 <__bss_start@@Base+0x698>
  407adc:	mov    QWORD PTR [rip+0xad31],0x0        # 412818 <__bss_start@@Base+0x6b0>
  407ae7:	mov    QWORD PTR [rip+0xad1e],0x0        # 412810 <__bss_start@@Base+0x6a8>
  407af2:	mov    QWORD PTR [rip+0xad2b],0x0        # 412828 <__bss_start@@Base+0x6c0>
  407afd:	mov    QWORD PTR [rip+0xad18],0x0        # 412820 <__bss_start@@Base+0x6b8>
  407b08:	mov    QWORD PTR [rip+0xad25],0x0        # 412838 <__bss_start@@Base+0x6d0>
  407b13:	mov    QWORD PTR [rip+0xad12],0x0        # 412830 <__bss_start@@Base+0x6c8>
  407b1e:	mov    QWORD PTR [rip+0xad1f],0x0        # 412848 <__bss_start@@Base+0x6e0>
  407b29:	mov    QWORD PTR [rip+0xad0c],0x0        # 412840 <__bss_start@@Base+0x6d8>
  407b34:	mov    QWORD PTR [rip+0xad19],0x0        # 412858 <__bss_start@@Base+0x6f0>
  407b3f:	mov    QWORD PTR [rip+0xad06],0x0        # 412850 <__bss_start@@Base+0x6e8>
  407b4a:	mov    QWORD PTR [rip+0xad13],0x0        # 412868 <__bss_start@@Base+0x700>
  407b55:	mov    QWORD PTR [rip+0xad00],0x0        # 412860 <__bss_start@@Base+0x6f8>
  407b60:	mov    QWORD PTR [rip+0xad0d],0x0        # 412878 <__bss_start@@Base+0x710>
  407b6b:	mov    QWORD PTR [rip+0xacfa],0x0        # 412870 <__bss_start@@Base+0x708>
  407b76:	mov    QWORD PTR [rip+0xad07],0x0        # 412888 <__bss_start@@Base+0x720>
  407b81:	mov    QWORD PTR [rip+0xacf4],0x0        # 412880 <__bss_start@@Base+0x718>
  407b8c:	mov    QWORD PTR [rip+0xad01],0x0        # 412898 <__bss_start@@Base+0x730>
  407b97:	mov    QWORD PTR [rip+0xacee],0x0        # 412890 <__bss_start@@Base+0x728>
  407ba2:	mov    QWORD PTR [rip+0xacfb],0x0        # 4128a8 <__bss_start@@Base+0x740>
  407bad:	mov    QWORD PTR [rip+0xace8],0x0        # 4128a0 <__bss_start@@Base+0x738>
  407bb8:	mov    QWORD PTR [rip+0xacf5],0x0        # 4128b8 <__bss_start@@Base+0x750>
  407bc3:	mov    QWORD PTR [rip+0xace2],0x0        # 4128b0 <__bss_start@@Base+0x748>
  407bce:	mov    QWORD PTR [rip+0xacef],0x0        # 4128c8 <__bss_start@@Base+0x760>
  407bd9:	mov    QWORD PTR [rip+0xacdc],0x0        # 4128c0 <__bss_start@@Base+0x758>
  407be4:	mov    QWORD PTR [rip+0xace9],0x0        # 4128d8 <__bss_start@@Base+0x770>
  407bef:	mov    QWORD PTR [rip+0xacd6],0x0        # 4128d0 <__bss_start@@Base+0x768>
  407bfa:	mov    QWORD PTR [rip+0xace3],0x0        # 4128e8 <__bss_start@@Base+0x780>
  407c05:	mov    QWORD PTR [rip+0xacd0],0x0        # 4128e0 <__bss_start@@Base+0x778>
  407c10:	mov    QWORD PTR [rip+0xacdd],0x0        # 4128f8 <__bss_start@@Base+0x790>
  407c1b:	mov    QWORD PTR [rip+0xacca],0x0        # 4128f0 <__bss_start@@Base+0x788>
  407c26:	mov    QWORD PTR [rip+0xacd7],0x0        # 412908 <__bss_start@@Base+0x7a0>
  407c31:	mov    QWORD PTR [rip+0xacc4],0x0        # 412900 <__bss_start@@Base+0x798>
  407c3c:	mov    QWORD PTR [rip+0xace9],0x0        # 412930 <__bss_start@@Base+0x7c8>
  407c47:	mov    QWORD PTR [rip+0xacd6],0x0        # 412928 <__bss_start@@Base+0x7c0>
  407c52:	mov    QWORD PTR [rip+0xacc3],0x0        # 412920 <__bss_start@@Base+0x7b8>
  407c5d:	mov    QWORD PTR [rip+0xacb0],0x0        # 412918 <__bss_start@@Base+0x7b0>
  407c68:	mov    QWORD PTR [rip+0xac9d],0x0        # 412910 <__bss_start@@Base+0x7a8>
  407c73:	pop    rax
  407c74:	ret    
  407c75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c7f:	nop
  407c80:	push   rax
  407c81:	lea    rdi,[rip+0xfffffffffffffc88]        # 407910 <free_token_boolean_op@@Base+0xc0>
  407c88:	lea    rsi,[rip+0xfffffffffffffd81]        # 407a10 <free_token_boolean_op@@Base+0x1c0>
  407c8f:	call   40c3d0 <__gcov_flush@@Base+0xa0>
  407c94:	pop    rax
  407c95:	ret    
  407c96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000407ca0 <init_ast_base@@Base>:
  407ca0:	push   rbp
  407ca1:	mov    rbp,rsp
  407ca4:	mov    rax,QWORD PTR [rip+0xac95]        # 412940 <__bss_start@@Base+0x7d8>
  407cab:	add    rax,0x1
  407caf:	mov    QWORD PTR [rip+0xac8a],rax        # 412940 <__bss_start@@Base+0x7d8>
  407cb6:	mov    DWORD PTR [rbp-0x1c],esi
  407cb9:	mov    QWORD PTR [rbp-0x28],rdi
  407cbd:	mov    QWORD PTR [rbp-0x30],rdx
  407cc1:	mov    rax,QWORD PTR [rip+0xac80]        # 412948 <__bss_start@@Base+0x7e0>
  407cc8:	add    rax,0x1
  407ccc:	mov    QWORD PTR [rip+0xac75],rax        # 412948 <__bss_start@@Base+0x7e0>
  407cd3:	mov    rax,QWORD PTR [rbp-0x28]
  407cd7:	mov    QWORD PTR [rbp-0x8],rax
  407cdb:	mov    ecx,DWORD PTR [rbp-0x1c]
  407cde:	mov    DWORD PTR [rbp-0xc],ecx
  407ce1:	mov    rdx,QWORD PTR [rbp-0x30]
  407ce5:	mov    QWORD PTR [rbp-0x18],rdx
  407ce9:	mov    esi,DWORD PTR [rbp-0xc]
  407cec:	mov    rdi,QWORD PTR [rbp-0x8]
  407cf0:	mov    DWORD PTR [rdi],esi
  407cf2:	mov    rdi,QWORD PTR [rbp-0x18]
  407cf6:	mov    r8,QWORD PTR [rbp-0x8]
  407cfa:	mov    QWORD PTR [r8+0x8],rdi
  407cfe:	pop    rbp
  407cff:	ret    

0000000000407d00 <init_ast_base_single@@Base>:
  407d00:	push   rbp
  407d01:	mov    rbp,rsp
  407d04:	sub    rsp,0x20
  407d08:	mov    rax,QWORD PTR [rip+0xac41]        # 412950 <__bss_start@@Base+0x7e8>
  407d0f:	add    rax,0x1
  407d13:	mov    QWORD PTR [rip+0xac36],rax        # 412950 <__bss_start@@Base+0x7e8>
  407d1a:	mov    QWORD PTR [rbp-0x18],rdi
  407d1e:	mov    DWORD PTR [rbp-0x1c],esi
  407d21:	xor    eax,eax
  407d23:	mov    edx,eax
  407d25:	mov    rcx,QWORD PTR [rip+0xac2c]        # 412958 <__bss_start@@Base+0x7f0>
  407d2c:	add    rcx,0x1
  407d30:	mov    QWORD PTR [rip+0xac21],rcx        # 412958 <__bss_start@@Base+0x7f0>
  407d37:	mov    rcx,QWORD PTR [rbp-0x18]
  407d3b:	mov    QWORD PTR [rbp-0x8],rcx
  407d3f:	mov    eax,DWORD PTR [rbp-0x1c]
  407d42:	mov    DWORD PTR [rbp-0xc],eax
  407d45:	mov    rdi,QWORD PTR [rbp-0x8]
  407d49:	mov    esi,DWORD PTR [rbp-0xc]
  407d4c:	call   407ca0 <init_ast_base@@Base>
  407d51:	add    rsp,0x20
  407d55:	pop    rbp
  407d56:	ret    
  407d57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407d60 <init_node_id@@Base>:
  407d60:	push   rbp
  407d61:	mov    rbp,rsp
  407d64:	sub    rsp,0x20
  407d68:	mov    rax,QWORD PTR [rip+0xabf1]        # 412960 <__bss_start@@Base+0x7f8>
  407d6f:	add    rax,0x1
  407d73:	mov    QWORD PTR [rip+0xabe6],rax        # 412960 <__bss_start@@Base+0x7f8>
  407d7a:	mov    QWORD PTR [rbp-0x18],rdi
  407d7e:	mov    QWORD PTR [rbp-0x20],rsi
  407d82:	xor    esi,esi
  407d84:	mov    rax,QWORD PTR [rip+0xabdd]        # 412968 <__bss_start@@Base+0x800>
  407d8b:	add    rax,0x1
  407d8f:	mov    QWORD PTR [rip+0xabd2],rax        # 412968 <__bss_start@@Base+0x800>
  407d96:	mov    rax,QWORD PTR [rbp-0x18]
  407d9a:	mov    QWORD PTR [rbp-0x8],rax
  407d9e:	mov    rcx,QWORD PTR [rbp-0x20]
  407da2:	mov    QWORD PTR [rbp-0x10],rcx
  407da6:	mov    rdi,QWORD PTR [rbp-0x8]
  407daa:	call   407d00 <init_ast_base_single@@Base>
  407daf:	mov    rax,QWORD PTR [rbp-0x10]
  407db3:	mov    rcx,QWORD PTR [rbp-0x8]
  407db7:	mov    QWORD PTR [rcx+0x10],rax
  407dbb:	add    rsp,0x20
  407dbf:	pop    rbp
  407dc0:	ret    
  407dc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407dcb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407dd0 <init_node_int@@Base>:
  407dd0:	push   rbp
  407dd1:	mov    rbp,rsp
  407dd4:	sub    rsp,0x20
  407dd8:	mov    rax,QWORD PTR [rip+0xab91]        # 412970 <__bss_start@@Base+0x808>
  407ddf:	add    rax,0x1
  407de3:	mov    QWORD PTR [rip+0xab86],rax        # 412970 <__bss_start@@Base+0x808>
  407dea:	mov    QWORD PTR [rbp-0x18],rdi
  407dee:	mov    DWORD PTR [rbp-0x1c],esi
  407df1:	mov    rax,QWORD PTR [rip+0xab80]        # 412978 <__bss_start@@Base+0x810>
  407df8:	add    rax,0x1
  407dfc:	mov    QWORD PTR [rip+0xab75],rax        # 412978 <__bss_start@@Base+0x810>
  407e03:	mov    rax,QWORD PTR [rbp-0x18]
  407e07:	mov    QWORD PTR [rbp-0x8],rax
  407e0b:	mov    ecx,DWORD PTR [rbp-0x1c]
  407e0e:	mov    DWORD PTR [rbp-0xc],ecx
  407e11:	mov    rdi,QWORD PTR [rbp-0x8]
  407e15:	mov    esi,0x1
  407e1a:	call   407d00 <init_ast_base_single@@Base>
  407e1f:	mov    ecx,DWORD PTR [rbp-0xc]
  407e22:	mov    rax,QWORD PTR [rbp-0x8]
  407e26:	mov    DWORD PTR [rax+0x10],ecx
  407e29:	add    rsp,0x20
  407e2d:	pop    rbp
  407e2e:	ret    
  407e2f:	nop

0000000000407e30 <init_node_function@@Base>:
  407e30:	push   rbp
  407e31:	mov    rbp,rsp
  407e34:	sub    rsp,0x30
  407e38:	mov    rax,QWORD PTR [rip+0xab41]        # 412980 <__bss_start@@Base+0x818>
  407e3f:	add    rax,0x1
  407e43:	mov    QWORD PTR [rip+0xab36],rax        # 412980 <__bss_start@@Base+0x818>
  407e4a:	mov    QWORD PTR [rbp-0x20],rsi
  407e4e:	mov    QWORD PTR [rbp-0x28],rdi
  407e52:	mov    QWORD PTR [rbp-0x30],rdx
  407e56:	mov    rax,QWORD PTR [rip+0xab2b]        # 412988 <__bss_start@@Base+0x820>
  407e5d:	add    rax,0x1
  407e61:	mov    QWORD PTR [rip+0xab20],rax        # 412988 <__bss_start@@Base+0x820>
  407e68:	mov    rax,QWORD PTR [rbp-0x28]
  407e6c:	mov    QWORD PTR [rbp-0x8],rax
  407e70:	mov    rcx,QWORD PTR [rbp-0x20]
  407e74:	mov    QWORD PTR [rbp-0x10],rcx
  407e78:	mov    rdx,QWORD PTR [rbp-0x30]
  407e7c:	mov    QWORD PTR [rbp-0x18],rdx
  407e80:	mov    rdi,QWORD PTR [rbp-0x8]
  407e84:	mov    esi,0x2
  407e89:	call   407d00 <init_ast_base_single@@Base>
  407e8e:	mov    rax,QWORD PTR [rbp-0x10]
  407e92:	mov    rcx,QWORD PTR [rbp-0x8]
  407e96:	mov    QWORD PTR [rcx+0x10],rax
  407e9a:	mov    rax,QWORD PTR [rbp-0x18]
  407e9e:	mov    rcx,QWORD PTR [rbp-0x8]
  407ea2:	mov    QWORD PTR [rcx+0x18],rax
  407ea6:	add    rsp,0x30
  407eaa:	pop    rbp
  407eab:	ret    
  407eac:	nop    DWORD PTR [rax+0x0]

0000000000407eb0 <init_node_return@@Base>:
  407eb0:	push   rbp
  407eb1:	mov    rbp,rsp
  407eb4:	sub    rsp,0x20
  407eb8:	mov    rax,QWORD PTR [rip+0xaad1]        # 412990 <__bss_start@@Base+0x828>
  407ebf:	add    rax,0x1
  407ec3:	mov    QWORD PTR [rip+0xaac6],rax        # 412990 <__bss_start@@Base+0x828>
  407eca:	mov    QWORD PTR [rbp-0x18],rdi
  407ece:	mov    QWORD PTR [rbp-0x20],rsi
  407ed2:	mov    rax,QWORD PTR [rip+0xaabf]        # 412998 <__bss_start@@Base+0x830>
  407ed9:	add    rax,0x1
  407edd:	mov    QWORD PTR [rip+0xaab4],rax        # 412998 <__bss_start@@Base+0x830>
  407ee4:	mov    rax,QWORD PTR [rbp-0x18]
  407ee8:	mov    QWORD PTR [rbp-0x8],rax
  407eec:	mov    rcx,QWORD PTR [rbp-0x20]
  407ef0:	mov    QWORD PTR [rbp-0x10],rcx
  407ef4:	mov    rdi,QWORD PTR [rbp-0x8]
  407ef8:	mov    esi,0x3
  407efd:	call   407d00 <init_ast_base_single@@Base>
  407f02:	mov    rax,QWORD PTR [rbp-0x10]
  407f06:	mov    rcx,QWORD PTR [rbp-0x8]
  407f0a:	mov    QWORD PTR [rcx+0x10],rax
  407f0e:	add    rsp,0x20
  407f12:	pop    rbp
  407f13:	ret    
  407f14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f1e:	xchg   ax,ax

0000000000407f20 <init_node_if@@Base>:
  407f20:	push   rbp
  407f21:	mov    rbp,rsp
  407f24:	sub    rsp,0x40
  407f28:	mov    rax,QWORD PTR [rip+0xaa71]        # 4129a0 <__bss_start@@Base+0x838>
  407f2f:	add    rax,0x1
  407f33:	mov    QWORD PTR [rip+0xaa66],rax        # 4129a0 <__bss_start@@Base+0x838>
  407f3a:	mov    QWORD PTR [rbp-0x28],rdx
  407f3e:	mov    QWORD PTR [rbp-0x30],rsi
  407f42:	mov    QWORD PTR [rbp-0x38],rdi
  407f46:	mov    QWORD PTR [rbp-0x40],rcx
  407f4a:	mov    rax,QWORD PTR [rip+0xaa57]        # 4129a8 <__bss_start@@Base+0x840>
  407f51:	add    rax,0x1
  407f55:	mov    QWORD PTR [rip+0xaa4c],rax        # 4129a8 <__bss_start@@Base+0x840>
  407f5c:	mov    rax,QWORD PTR [rbp-0x38]
  407f60:	mov    QWORD PTR [rbp-0x8],rax
  407f64:	mov    rcx,QWORD PTR [rbp-0x30]
  407f68:	mov    QWORD PTR [rbp-0x10],rcx
  407f6c:	mov    rdx,QWORD PTR [rbp-0x28]
  407f70:	mov    QWORD PTR [rbp-0x18],rdx
  407f74:	mov    rsi,QWORD PTR [rbp-0x40]
  407f78:	mov    QWORD PTR [rbp-0x20],rsi
  407f7c:	mov    rdi,QWORD PTR [rbp-0x8]
  407f80:	mov    esi,0x4
  407f85:	call   407d00 <init_ast_base_single@@Base>
  407f8a:	mov    rax,QWORD PTR [rbp-0x10]
  407f8e:	mov    rcx,QWORD PTR [rbp-0x8]
  407f92:	mov    QWORD PTR [rcx+0x10],rax
  407f96:	mov    rax,QWORD PTR [rbp-0x18]
  407f9a:	mov    rcx,QWORD PTR [rbp-0x8]
  407f9e:	mov    QWORD PTR [rcx+0x18],rax
  407fa2:	mov    rax,QWORD PTR [rbp-0x20]
  407fa6:	mov    rcx,QWORD PTR [rbp-0x8]
  407faa:	mov    QWORD PTR [rcx+0x20],rax
  407fae:	add    rsp,0x40
  407fb2:	pop    rbp
  407fb3:	ret    
  407fb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407fbe:	xchg   ax,ax

0000000000407fc0 <init_node_boolean_operator@@Base>:
  407fc0:	push   rbp
  407fc1:	mov    rbp,rsp
  407fc4:	sub    rsp,0x40
  407fc8:	mov    rax,QWORD PTR [rip+0xa9e1]        # 4129b0 <__bss_start@@Base+0x848>
  407fcf:	add    rax,0x1
  407fd3:	mov    QWORD PTR [rip+0xa9d6],rax        # 4129b0 <__bss_start@@Base+0x848>
  407fda:	mov    QWORD PTR [rbp-0x28],rdx
  407fde:	mov    DWORD PTR [rbp-0x2c],esi
  407fe1:	mov    QWORD PTR [rbp-0x38],rdi
  407fe5:	mov    QWORD PTR [rbp-0x40],rcx
  407fe9:	xor    esi,esi
  407feb:	mov    rax,QWORD PTR [rip+0xa9c6]        # 4129b8 <__bss_start@@Base+0x850>
  407ff2:	add    rax,0x1
  407ff6:	mov    QWORD PTR [rip+0xa9bb],rax        # 4129b8 <__bss_start@@Base+0x850>
  407ffd:	mov    rax,QWORD PTR [rbp-0x38]
  408001:	mov    QWORD PTR [rbp-0x8],rax
  408005:	mov    ecx,DWORD PTR [rbp-0x2c]
  408008:	mov    DWORD PTR [rbp-0xc],ecx
  40800b:	mov    rdx,QWORD PTR [rbp-0x28]
  40800f:	mov    QWORD PTR [rbp-0x18],rdx
  408013:	mov    rdi,QWORD PTR [rbp-0x40]
  408017:	mov    QWORD PTR [rbp-0x20],rdi
  40801b:	mov    rdi,QWORD PTR [rbp-0x8]
  40801f:	call   407d00 <init_ast_base_single@@Base>
  408024:	mov    rax,QWORD PTR [rbp-0x8]
  408028:	mov    DWORD PTR [rax],0x5
  40802e:	mov    ecx,DWORD PTR [rbp-0xc]
  408031:	mov    rax,QWORD PTR [rbp-0x8]
  408035:	mov    DWORD PTR [rax+0x20],ecx
  408038:	mov    rax,QWORD PTR [rbp-0x18]
  40803c:	mov    rdx,QWORD PTR [rbp-0x8]
  408040:	mov    QWORD PTR [rdx+0x10],rax
  408044:	mov    rax,QWORD PTR [rbp-0x20]
  408048:	mov    rdx,QWORD PTR [rbp-0x8]
  40804c:	mov    QWORD PTR [rdx+0x18],rax
  408050:	add    rsp,0x40
  408054:	pop    rbp
  408055:	ret    
  408056:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408060 <free_node@@Base>:
  408060:	push   rbp
  408061:	mov    rbp,rsp
  408064:	sub    rsp,0x30
  408068:	mov    rax,QWORD PTR [rip+0xa951]        # 4129c0 <__bss_start@@Base+0x858>
  40806f:	add    rax,0x1
  408073:	mov    QWORD PTR [rip+0xa946],rax        # 4129c0 <__bss_start@@Base+0x858>
  40807a:	mov    QWORD PTR [rbp-0x10],rdi
  40807e:	mov    DWORD PTR [rip+0xa0c8],0x0        # 412150 <__data_start@@Base+0x10>
  408088:	mov    rax,QWORD PTR [rbp-0x10]
  40808c:	mov    QWORD PTR [rbp-0x8],rax
  408090:	mov    rcx,QWORD PTR [rbp-0x8]
  408094:	mov    edx,DWORD PTR [rcx]
  408096:	mov    ecx,edx
  408098:	mov    rsi,rcx
  40809b:	sub    rsi,0x5
  40809f:	mov    QWORD PTR [rbp-0x18],rcx
  4080a3:	mov    QWORD PTR [rbp-0x20],rsi
  4080a7:	ja     40822f <free_node@@Base+0x1cf>
  4080ad:	lea    rax,[rip+0x5acc]        # 40db80 <_IO_stdin_used@@Base+0xb80>
  4080b4:	mov    rcx,QWORD PTR [rbp-0x18]
  4080b8:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4080bc:	add    rdx,rax
  4080bf:	jmp    rdx
  4080c1:	lea    rax,[rip+0x9728]        # 4117f0 <_IO_stdin_used@@Base+0x47f0>
  4080c8:	add    rax,0x8
  4080cc:	lea    rdi,[rip+0xa07d]        # 412150 <__data_start@@Base+0x10>
  4080d3:	mov    rsi,rax
  4080d6:	call   408c30 <get_boolean_op_value@@Base+0x500>
  4080db:	mov    rax,QWORD PTR [rip+0xa91e]        # 412a00 <__bss_start@@Base+0x898>
  4080e2:	add    rax,0x1
  4080e6:	mov    QWORD PTR [rip+0xa913],rax        # 412a00 <__bss_start@@Base+0x898>
  4080ed:	mov    rax,QWORD PTR [rbp-0x8]
  4080f1:	mov    rdi,rax
  4080f4:	call   408280 <free_node_id@@Base>
  4080f9:	jmp    408267 <free_node@@Base+0x207>
  4080fe:	lea    rax,[rip+0x96eb]        # 4117f0 <_IO_stdin_used@@Base+0x47f0>
  408105:	add    rax,0x10
  408109:	lea    rdi,[rip+0xa040]        # 412150 <__data_start@@Base+0x10>
  408110:	mov    rsi,rax
  408113:	call   408c30 <get_boolean_op_value@@Base+0x500>
  408118:	mov    rax,QWORD PTR [rip+0xa8e9]        # 412a08 <__bss_start@@Base+0x8a0>
  40811f:	add    rax,0x1
  408123:	mov    QWORD PTR [rip+0xa8de],rax        # 412a08 <__bss_start@@Base+0x8a0>
  40812a:	mov    rax,QWORD PTR [rbp-0x8]
  40812e:	mov    rdi,rax
  408131:	call   408340 <free_node_int@@Base>
  408136:	jmp    408267 <free_node@@Base+0x207>
  40813b:	lea    rax,[rip+0x96ae]        # 4117f0 <_IO_stdin_used@@Base+0x47f0>
  408142:	add    rax,0x18
  408146:	lea    rdi,[rip+0xa003]        # 412150 <__data_start@@Base+0x10>
  40814d:	mov    rsi,rax
  408150:	call   408c30 <get_boolean_op_value@@Base+0x500>
  408155:	mov    rax,QWORD PTR [rip+0xa8b4]        # 412a10 <__bss_start@@Base+0x8a8>
  40815c:	add    rax,0x1
  408160:	mov    QWORD PTR [rip+0xa8a9],rax        # 412a10 <__bss_start@@Base+0x8a8>
  408167:	mov    rax,QWORD PTR [rbp-0x8]
  40816b:	mov    rdi,rax
  40816e:	call   408400 <free_node_function@@Base>
  408173:	jmp    408267 <free_node@@Base+0x207>
  408178:	lea    rax,[rip+0x9671]        # 4117f0 <_IO_stdin_used@@Base+0x47f0>
  40817f:	add    rax,0x20
  408183:	lea    rdi,[rip+0x9fc6]        # 412150 <__data_start@@Base+0x10>
  40818a:	mov    rsi,rax
  40818d:	call   408c30 <get_boolean_op_value@@Base+0x500>
  408192:	mov    rax,QWORD PTR [rip+0xa87f]        # 412a18 <__bss_start@@Base+0x8b0>
  408199:	add    rax,0x1
  40819d:	mov    QWORD PTR [rip+0xa874],rax        # 412a18 <__bss_start@@Base+0x8b0>
  4081a4:	mov    rax,QWORD PTR [rbp-0x8]
  4081a8:	mov    rdi,rax
  4081ab:	call   4084c0 <free_node_return@@Base>
  4081b0:	jmp    408267 <free_node@@Base+0x207>
  4081b5:	lea    rax,[rip+0x9634]        # 4117f0 <_IO_stdin_used@@Base+0x47f0>
  4081bc:	add    rax,0x28
  4081c0:	lea    rdi,[rip+0x9f89]        # 412150 <__data_start@@Base+0x10>
  4081c7:	mov    rsi,rax
  4081ca:	call   408c30 <get_boolean_op_value@@Base+0x500>
  4081cf:	mov    rax,QWORD PTR [rip+0xa84a]        # 412a20 <__bss_start@@Base+0x8b8>
  4081d6:	add    rax,0x1
  4081da:	mov    QWORD PTR [rip+0xa83f],rax        # 412a20 <__bss_start@@Base+0x8b8>
  4081e1:	mov    rax,QWORD PTR [rbp-0x8]
  4081e5:	mov    rdi,rax
  4081e8:	call   408580 <free_node_if@@Base>
  4081ed:	jmp    408267 <free_node@@Base+0x207>
  4081f2:	lea    rax,[rip+0x95f7]        # 4117f0 <_IO_stdin_used@@Base+0x47f0>
  4081f9:	add    rax,0x30
  4081fd:	lea    rdi,[rip+0x9f4c]        # 412150 <__data_start@@Base+0x10>
  408204:	mov    rsi,rax
  408207:	call   408c30 <get_boolean_op_value@@Base+0x500>
  40820c:	mov    rax,QWORD PTR [rip+0xa815]        # 412a28 <__bss_start@@Base+0x8c0>
  408213:	add    rax,0x1
  408217:	mov    QWORD PTR [rip+0xa80a],rax        # 412a28 <__bss_start@@Base+0x8c0>
  40821e:	mov    rax,QWORD PTR [rbp-0x8]
  408222:	mov    rdi,rax
  408225:	call   408660 <free_node_boolean_operator@@Base>
  40822a:	jmp    408267 <free_node@@Base+0x207>
  40822f:	lea    rdi,[rip+0x9f1a]        # 412150 <__data_start@@Base+0x10>
  408236:	lea    rsi,[rip+0x95b3]        # 4117f0 <_IO_stdin_used@@Base+0x47f0>
  40823d:	call   408c30 <get_boolean_op_value@@Base+0x500>
  408242:	mov    rsi,QWORD PTR [rip+0x9daf]        # 411ff8 <stderr@GLIBC_2.2.5>
  408249:	mov    rdi,QWORD PTR [rsi]
  40824c:	lea    rsi,[rip+0x5945]        # 40db98 <_IO_stdin_used@@Base+0xb98>
  408253:	mov    al,0x0
  408255:	call   403170 <fprintf@plt>
  40825a:	mov    edi,0x1
  40825f:	mov    DWORD PTR [rbp-0x24],eax
  408262:	call   403240 <exit@plt>
  408267:	mov    rax,QWORD PTR [rip+0xa7c2]        # 412a30 <__bss_start@@Base+0x8c8>
  40826e:	add    rax,0x1
  408272:	mov    QWORD PTR [rip+0xa7b7],rax        # 412a30 <__bss_start@@Base+0x8c8>
  408279:	add    rsp,0x30
  40827d:	pop    rbp
  40827e:	ret    
  40827f:	nop

0000000000408280 <free_node_id@@Base>:
  408280:	push   rbp
  408281:	mov    rbp,rsp
  408284:	sub    rsp,0x10
  408288:	mov    rax,QWORD PTR [rip+0xa7b1]        # 412a40 <__bss_start@@Base+0x8d8>
  40828f:	add    rax,0x1
  408293:	mov    QWORD PTR [rip+0xa7a6],rax        # 412a40 <__bss_start@@Base+0x8d8>
  40829a:	mov    QWORD PTR [rbp-0x10],rdi
  40829e:	mov    eax,0x2
  4082a3:	mov    ecx,eax
  4082a5:	mov    eax,0x1
  4082aa:	mov    edx,eax
  4082ac:	mov    rsi,QWORD PTR [rbp-0x10]
  4082b0:	mov    QWORD PTR [rbp-0x8],rsi
  4082b4:	mov    rdi,QWORD PTR [rbp-0x8]
  4082b8:	mov    rdi,QWORD PTR [rdi+0x8]
  4082bc:	cmp    rdi,0x0
  4082c0:	setne  r8b
  4082c4:	cmp    rdi,0x0
  4082c8:	cmovne rcx,rdx
  4082cc:	lea    rdx,[rip+0xa76d]        # 412a40 <__bss_start@@Base+0x8d8>
  4082d3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4082d7:	add    rdi,0x1
  4082db:	mov    QWORD PTR [rdx+rcx*8],rdi
  4082df:	test   r8b,0x1
  4082e3:	jne    4082ee <free_node_id@@Base+0x6e>
  4082e9:	jmp    40830d <free_node_id@@Base+0x8d>
  4082ee:	mov    rax,QWORD PTR [rip+0xa763]        # 412a58 <__bss_start@@Base+0x8f0>
  4082f5:	add    rax,0x1
  4082f9:	mov    QWORD PTR [rip+0xa758],rax        # 412a58 <__bss_start@@Base+0x8f0>
  408300:	mov    rax,QWORD PTR [rbp-0x8]
  408304:	mov    rdi,QWORD PTR [rax+0x8]
  408308:	call   408060 <free_node@@Base>
  40830d:	mov    rax,QWORD PTR [rip+0xa74c]        # 412a60 <__bss_start@@Base+0x8f8>
  408314:	add    rax,0x1
  408318:	mov    QWORD PTR [rip+0xa741],rax        # 412a60 <__bss_start@@Base+0x8f8>
  40831f:	mov    rax,QWORD PTR [rbp-0x8]
  408323:	mov    rdi,rax
  408326:	call   403040 <free@plt>
  40832b:	add    rsp,0x10
  40832f:	pop    rbp
  408330:	ret    
  408331:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40833b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408340 <free_node_int@@Base>:
  408340:	push   rbp
  408341:	mov    rbp,rsp
  408344:	sub    rsp,0x10
  408348:	mov    rax,QWORD PTR [rip+0xa721]        # 412a70 <__bss_start@@Base+0x908>
  40834f:	add    rax,0x1
  408353:	mov    QWORD PTR [rip+0xa716],rax        # 412a70 <__bss_start@@Base+0x908>
  40835a:	mov    QWORD PTR [rbp-0x10],rdi
  40835e:	mov    eax,0x2
  408363:	mov    ecx,eax
  408365:	mov    eax,0x1
  40836a:	mov    edx,eax
  40836c:	mov    rsi,QWORD PTR [rbp-0x10]
  408370:	mov    QWORD PTR [rbp-0x8],rsi
  408374:	mov    rdi,QWORD PTR [rbp-0x8]
  408378:	mov    rdi,QWORD PTR [rdi+0x8]
  40837c:	cmp    rdi,0x0
  408380:	setne  r8b
  408384:	cmp    rdi,0x0
  408388:	cmovne rcx,rdx
  40838c:	lea    rdx,[rip+0xa6dd]        # 412a70 <__bss_start@@Base+0x908>
  408393:	mov    rdi,QWORD PTR [rdx+rcx*8]
  408397:	add    rdi,0x1
  40839b:	mov    QWORD PTR [rdx+rcx*8],rdi
  40839f:	test   r8b,0x1
  4083a3:	jne    4083ae <free_node_int@@Base+0x6e>
  4083a9:	jmp    4083cd <free_node_int@@Base+0x8d>
  4083ae:	mov    rax,QWORD PTR [rip+0xa6d3]        # 412a88 <__bss_start@@Base+0x920>
  4083b5:	add    rax,0x1
  4083b9:	mov    QWORD PTR [rip+0xa6c8],rax        # 412a88 <__bss_start@@Base+0x920>
  4083c0:	mov    rax,QWORD PTR [rbp-0x8]
  4083c4:	mov    rdi,QWORD PTR [rax+0x8]
  4083c8:	call   408060 <free_node@@Base>
  4083cd:	mov    rax,QWORD PTR [rip+0xa6bc]        # 412a90 <__bss_start@@Base+0x928>
  4083d4:	add    rax,0x1
  4083d8:	mov    QWORD PTR [rip+0xa6b1],rax        # 412a90 <__bss_start@@Base+0x928>
  4083df:	mov    rax,QWORD PTR [rbp-0x8]
  4083e3:	mov    rdi,rax
  4083e6:	call   403040 <free@plt>
  4083eb:	add    rsp,0x10
  4083ef:	pop    rbp
  4083f0:	ret    
  4083f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408400 <free_node_function@@Base>:
  408400:	push   rbp
  408401:	mov    rbp,rsp
  408404:	sub    rsp,0x10
  408408:	mov    rax,QWORD PTR [rip+0xa691]        # 412aa0 <__bss_start@@Base+0x938>
  40840f:	add    rax,0x1
  408413:	mov    QWORD PTR [rip+0xa686],rax        # 412aa0 <__bss_start@@Base+0x938>
  40841a:	mov    QWORD PTR [rbp-0x10],rdi
  40841e:	mov    eax,0x2
  408423:	mov    ecx,eax
  408425:	mov    eax,0x1
  40842a:	mov    edx,eax
  40842c:	mov    rsi,QWORD PTR [rbp-0x10]
  408430:	mov    QWORD PTR [rbp-0x8],rsi
  408434:	mov    rdi,QWORD PTR [rbp-0x8]
  408438:	mov    rdi,QWORD PTR [rdi+0x8]
  40843c:	cmp    rdi,0x0
  408440:	setne  r8b
  408444:	cmp    rdi,0x0
  408448:	cmovne rcx,rdx
  40844c:	lea    rdx,[rip+0xa64d]        # 412aa0 <__bss_start@@Base+0x938>
  408453:	mov    rdi,QWORD PTR [rdx+rcx*8]
  408457:	add    rdi,0x1
  40845b:	mov    QWORD PTR [rdx+rcx*8],rdi
  40845f:	test   r8b,0x1
  408463:	jne    40846e <free_node_function@@Base+0x6e>
  408469:	jmp    40848d <free_node_function@@Base+0x8d>
  40846e:	mov    rax,QWORD PTR [rip+0xa643]        # 412ab8 <__bss_start@@Base+0x950>
  408475:	add    rax,0x1
  408479:	mov    QWORD PTR [rip+0xa638],rax        # 412ab8 <__bss_start@@Base+0x950>
  408480:	mov    rax,QWORD PTR [rbp-0x8]
  408484:	mov    rdi,QWORD PTR [rax+0x8]
  408488:	call   408060 <free_node@@Base>
  40848d:	mov    rax,QWORD PTR [rip+0xa62c]        # 412ac0 <__bss_start@@Base+0x958>
  408494:	add    rax,0x1
  408498:	mov    QWORD PTR [rip+0xa621],rax        # 412ac0 <__bss_start@@Base+0x958>
  40849f:	mov    rax,QWORD PTR [rbp-0x8]
  4084a3:	mov    rdi,QWORD PTR [rax+0x10]
  4084a7:	call   403040 <free@plt>
  4084ac:	mov    rax,QWORD PTR [rbp-0x8]
  4084b0:	mov    rdi,rax
  4084b3:	call   403040 <free@plt>
  4084b8:	add    rsp,0x10
  4084bc:	pop    rbp
  4084bd:	ret    
  4084be:	xchg   ax,ax

00000000004084c0 <free_node_return@@Base>:
  4084c0:	push   rbp
  4084c1:	mov    rbp,rsp
  4084c4:	sub    rsp,0x10
  4084c8:	mov    rax,QWORD PTR [rip+0xa601]        # 412ad0 <__bss_start@@Base+0x968>
  4084cf:	add    rax,0x1
  4084d3:	mov    QWORD PTR [rip+0xa5f6],rax        # 412ad0 <__bss_start@@Base+0x968>
  4084da:	mov    QWORD PTR [rbp-0x10],rdi
  4084de:	mov    eax,0x2
  4084e3:	mov    ecx,eax
  4084e5:	mov    eax,0x1
  4084ea:	mov    edx,eax
  4084ec:	mov    rsi,QWORD PTR [rbp-0x10]
  4084f0:	mov    QWORD PTR [rbp-0x8],rsi
  4084f4:	mov    rdi,QWORD PTR [rbp-0x8]
  4084f8:	mov    rdi,QWORD PTR [rdi+0x8]
  4084fc:	cmp    rdi,0x0
  408500:	setne  r8b
  408504:	cmp    rdi,0x0
  408508:	cmovne rcx,rdx
  40850c:	lea    rdx,[rip+0xa5bd]        # 412ad0 <__bss_start@@Base+0x968>
  408513:	mov    rdi,QWORD PTR [rdx+rcx*8]
  408517:	add    rdi,0x1
  40851b:	mov    QWORD PTR [rdx+rcx*8],rdi
  40851f:	test   r8b,0x1
  408523:	jne    40852e <free_node_return@@Base+0x6e>
  408529:	jmp    40854d <free_node_return@@Base+0x8d>
  40852e:	mov    rax,QWORD PTR [rip+0xa5b3]        # 412ae8 <__bss_start@@Base+0x980>
  408535:	add    rax,0x1
  408539:	mov    QWORD PTR [rip+0xa5a8],rax        # 412ae8 <__bss_start@@Base+0x980>
  408540:	mov    rax,QWORD PTR [rbp-0x8]
  408544:	mov    rdi,QWORD PTR [rax+0x8]
  408548:	call   408060 <free_node@@Base>
  40854d:	mov    rax,QWORD PTR [rip+0xa59c]        # 412af0 <__bss_start@@Base+0x988>
  408554:	add    rax,0x1
  408558:	mov    QWORD PTR [rip+0xa591],rax        # 412af0 <__bss_start@@Base+0x988>
  40855f:	mov    rax,QWORD PTR [rbp-0x8]
  408563:	mov    rdi,rax
  408566:	call   403040 <free@plt>
  40856b:	add    rsp,0x10
  40856f:	pop    rbp
  408570:	ret    
  408571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40857b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408580 <free_node_if@@Base>:
  408580:	push   rbp
  408581:	mov    rbp,rsp
  408584:	sub    rsp,0x10
  408588:	mov    rax,QWORD PTR [rip+0xa571]        # 412b00 <__bss_start@@Base+0x998>
  40858f:	add    rax,0x1
  408593:	mov    QWORD PTR [rip+0xa566],rax        # 412b00 <__bss_start@@Base+0x998>
  40859a:	mov    QWORD PTR [rbp-0x10],rdi
  40859e:	mov    eax,0x2
  4085a3:	mov    ecx,eax
  4085a5:	mov    eax,0x1
  4085aa:	mov    edx,eax
  4085ac:	mov    rsi,QWORD PTR [rbp-0x10]
  4085b0:	mov    QWORD PTR [rbp-0x8],rsi
  4085b4:	mov    rdi,QWORD PTR [rbp-0x8]
  4085b8:	mov    rdi,QWORD PTR [rdi+0x8]
  4085bc:	cmp    rdi,0x0
  4085c0:	setne  r8b
  4085c4:	cmp    rdi,0x0
  4085c8:	cmovne rcx,rdx
  4085cc:	lea    rdx,[rip+0xa52d]        # 412b00 <__bss_start@@Base+0x998>
  4085d3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4085d7:	add    rdi,0x1
  4085db:	mov    QWORD PTR [rdx+rcx*8],rdi
  4085df:	test   r8b,0x1
  4085e3:	jne    4085ee <free_node_if@@Base+0x6e>
  4085e9:	jmp    40860d <free_node_if@@Base+0x8d>
  4085ee:	mov    rax,QWORD PTR [rip+0xa523]        # 412b18 <__bss_start@@Base+0x9b0>
  4085f5:	add    rax,0x1
  4085f9:	mov    QWORD PTR [rip+0xa518],rax        # 412b18 <__bss_start@@Base+0x9b0>
  408600:	mov    rax,QWORD PTR [rbp-0x8]
  408604:	mov    rdi,QWORD PTR [rax+0x8]
  408608:	call   408060 <free_node@@Base>
  40860d:	mov    rax,QWORD PTR [rip+0xa50c]        # 412b20 <__bss_start@@Base+0x9b8>
  408614:	add    rax,0x1
  408618:	mov    QWORD PTR [rip+0xa501],rax        # 412b20 <__bss_start@@Base+0x9b8>
  40861f:	mov    rax,QWORD PTR [rbp-0x8]
  408623:	mov    rdi,QWORD PTR [rax+0x10]
  408627:	call   408060 <free_node@@Base>
  40862c:	mov    rax,QWORD PTR [rbp-0x8]
  408630:	mov    rdi,QWORD PTR [rax+0x18]
  408634:	call   408060 <free_node@@Base>
  408639:	mov    rax,QWORD PTR [rbp-0x8]
  40863d:	mov    rdi,QWORD PTR [rax+0x20]
  408641:	call   408060 <free_node@@Base>
  408646:	mov    rax,QWORD PTR [rbp-0x8]
  40864a:	mov    rdi,rax
  40864d:	call   403040 <free@plt>
  408652:	add    rsp,0x10
  408656:	pop    rbp
  408657:	ret    
  408658:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408660 <free_node_boolean_operator@@Base>:
  408660:	push   rbp
  408661:	mov    rbp,rsp
  408664:	sub    rsp,0x10
  408668:	mov    rax,QWORD PTR [rip+0xa4c1]        # 412b30 <__bss_start@@Base+0x9c8>
  40866f:	add    rax,0x1
  408673:	mov    QWORD PTR [rip+0xa4b6],rax        # 412b30 <__bss_start@@Base+0x9c8>
  40867a:	mov    QWORD PTR [rbp-0x10],rdi
  40867e:	mov    eax,0x2
  408683:	mov    ecx,eax
  408685:	mov    eax,0x1
  40868a:	mov    edx,eax
  40868c:	mov    rsi,QWORD PTR [rbp-0x10]
  408690:	mov    QWORD PTR [rbp-0x8],rsi
  408694:	mov    rdi,QWORD PTR [rbp-0x8]
  408698:	mov    rdi,QWORD PTR [rdi+0x8]
  40869c:	cmp    rdi,0x0
  4086a0:	setne  r8b
  4086a4:	cmp    rdi,0x0
  4086a8:	cmovne rcx,rdx
  4086ac:	lea    rdx,[rip+0xa47d]        # 412b30 <__bss_start@@Base+0x9c8>
  4086b3:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4086b7:	add    rdi,0x1
  4086bb:	mov    QWORD PTR [rdx+rcx*8],rdi
  4086bf:	test   r8b,0x1
  4086c3:	jne    4086ce <free_node_boolean_operator@@Base+0x6e>
  4086c9:	jmp    4086ed <free_node_boolean_operator@@Base+0x8d>
  4086ce:	mov    rax,QWORD PTR [rip+0xa473]        # 412b48 <__bss_start@@Base+0x9e0>
  4086d5:	add    rax,0x1
  4086d9:	mov    QWORD PTR [rip+0xa468],rax        # 412b48 <__bss_start@@Base+0x9e0>
  4086e0:	mov    rax,QWORD PTR [rbp-0x8]
  4086e4:	mov    rdi,QWORD PTR [rax+0x8]
  4086e8:	call   408060 <free_node@@Base>
  4086ed:	mov    rax,QWORD PTR [rip+0xa45c]        # 412b50 <__bss_start@@Base+0x9e8>
  4086f4:	add    rax,0x1
  4086f8:	mov    QWORD PTR [rip+0xa451],rax        # 412b50 <__bss_start@@Base+0x9e8>
  4086ff:	mov    rax,QWORD PTR [rbp-0x8]
  408703:	mov    rdi,QWORD PTR [rax+0x10]
  408707:	call   408060 <free_node@@Base>
  40870c:	mov    rax,QWORD PTR [rbp-0x8]
  408710:	mov    rdi,QWORD PTR [rax+0x18]
  408714:	call   408060 <free_node@@Base>
  408719:	mov    rax,QWORD PTR [rbp-0x8]
  40871d:	mov    rdi,rax
  408720:	call   403040 <free@plt>
  408725:	add    rsp,0x10
  408729:	pop    rbp
  40872a:	ret    
  40872b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408730 <get_boolean_op_value@@Base>:
  408730:	push   rbp
  408731:	mov    rbp,rsp
  408734:	sub    rsp,0x50
  408738:	mov    rax,QWORD PTR [rip+0xa421]        # 412b60 <__bss_start@@Base+0x9f8>
  40873f:	add    rax,0x1
  408743:	mov    QWORD PTR [rip+0xa416],rax        # 412b60 <__bss_start@@Base+0x9f8>
  40874a:	mov    QWORD PTR [rbp-0x20],rdi
  40874e:	mov    eax,0x2
  408753:	mov    ecx,eax
  408755:	mov    eax,0x1
  40875a:	mov    edx,eax
  40875c:	mov    rsi,QWORD PTR [rbp-0x20]
  408760:	mov    QWORD PTR [rbp-0x10],rsi
  408764:	mov    rdi,QWORD PTR [rbp-0x10]
  408768:	mov    rdi,QWORD PTR [rdi+0x8]
  40876c:	mov    eax,0x2
  408771:	mov    esi,eax
  408773:	mov    QWORD PTR [rbp-0x28],rcx
  408777:	mov    QWORD PTR [rbp-0x30],rdx
  40877b:	call   403160 <strnlen@plt>
  408780:	mov    QWORD PTR [rbp-0x18],rax
  408784:	mov    rax,QWORD PTR [rbp-0x18]
  408788:	cmp    rax,0x2
  40878c:	sete   r8b
  408790:	cmp    rax,0x2
  408794:	mov    rax,QWORD PTR [rbp-0x28]
  408798:	mov    rcx,QWORD PTR [rbp-0x30]
  40879c:	cmove  rax,rcx
  4087a0:	lea    rdx,[rip+0xa3b9]        # 412b60 <__bss_start@@Base+0x9f8>
  4087a7:	mov    rsi,QWORD PTR [rdx+rax*8]
  4087ab:	add    rsi,0x1
  4087af:	mov    QWORD PTR [rdx+rax*8],rsi
  4087b3:	test   r8b,0x1
  4087b7:	jne    4087c2 <get_boolean_op_value@@Base+0x92>
  4087bd:	jmp    408ad1 <get_boolean_op_value@@Base+0x3a1>
  4087c2:	mov    eax,0x2
  4087c7:	mov    edx,eax
  4087c9:	mov    rcx,QWORD PTR [rbp-0x10]
  4087cd:	mov    rdi,QWORD PTR [rcx+0x8]
  4087d1:	lea    rsi,[rip+0x53e0]        # 40dbb8 <_IO_stdin_used@@Base+0xbb8>
  4087d8:	call   403070 <strncmp@plt>
  4087dd:	mov    r8d,0x4
  4087e3:	mov    ecx,r8d
  4087e6:	mov    r8d,0x3
  4087ec:	mov    edx,r8d
  4087ef:	cmp    eax,0x0
  4087f2:	sete   r9b
  4087f6:	cmp    eax,0x0
  4087f9:	cmove  rcx,rdx
  4087fd:	lea    rdx,[rip+0xa35c]        # 412b60 <__bss_start@@Base+0x9f8>
  408804:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408808:	add    rsi,0x1
  40880c:	mov    QWORD PTR [rdx+rcx*8],rsi
  408810:	test   r9b,0x1
  408814:	jne    40881f <get_boolean_op_value@@Base+0xef>
  40881a:	jmp    40883d <get_boolean_op_value@@Base+0x10d>
  40881f:	mov    rax,QWORD PTR [rip+0xa362]        # 412b88 <__bss_start@@Base+0xa20>
  408826:	add    rax,0x1
  40882a:	mov    QWORD PTR [rip+0xa357],rax        # 412b88 <__bss_start@@Base+0xa20>
  408831:	mov    DWORD PTR [rbp-0x4],0x0
  408838:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  40883d:	mov    eax,0x2
  408842:	mov    edx,eax
  408844:	mov    rcx,QWORD PTR [rbp-0x10]
  408848:	mov    rdi,QWORD PTR [rcx+0x8]
  40884c:	lea    rsi,[rip+0x5368]        # 40dbbb <_IO_stdin_used@@Base+0xbbb>
  408853:	call   403070 <strncmp@plt>
  408858:	mov    r8d,0x7
  40885e:	mov    ecx,r8d
  408861:	mov    r8d,0x6
  408867:	mov    edx,r8d
  40886a:	cmp    eax,0x0
  40886d:	sete   r9b
  408871:	cmp    eax,0x0
  408874:	cmove  rcx,rdx
  408878:	lea    rdx,[rip+0xa2e1]        # 412b60 <__bss_start@@Base+0x9f8>
  40887f:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408883:	add    rsi,0x1
  408887:	mov    QWORD PTR [rdx+rcx*8],rsi
  40888b:	test   r9b,0x1
  40888f:	jne    40889a <get_boolean_op_value@@Base+0x16a>
  408895:	jmp    4088b8 <get_boolean_op_value@@Base+0x188>
  40889a:	mov    rax,QWORD PTR [rip+0xa2ff]        # 412ba0 <__bss_start@@Base+0xa38>
  4088a1:	add    rax,0x1
  4088a5:	mov    QWORD PTR [rip+0xa2f4],rax        # 412ba0 <__bss_start@@Base+0xa38>
  4088ac:	mov    DWORD PTR [rbp-0x4],0x1
  4088b3:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  4088b8:	mov    eax,0x2
  4088bd:	mov    edx,eax
  4088bf:	mov    rcx,QWORD PTR [rbp-0x10]
  4088c3:	mov    rdi,QWORD PTR [rcx+0x8]
  4088c7:	lea    rsi,[rip+0x52f0]        # 40dbbe <_IO_stdin_used@@Base+0xbbe>
  4088ce:	call   403070 <strncmp@plt>
  4088d3:	mov    r8d,0xa
  4088d9:	mov    ecx,r8d
  4088dc:	mov    r8d,0x9
  4088e2:	mov    edx,r8d
  4088e5:	cmp    eax,0x0
  4088e8:	sete   r9b
  4088ec:	cmp    eax,0x0
  4088ef:	cmove  rcx,rdx
  4088f3:	lea    rdx,[rip+0xa266]        # 412b60 <__bss_start@@Base+0x9f8>
  4088fa:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4088fe:	add    rsi,0x1
  408902:	mov    QWORD PTR [rdx+rcx*8],rsi
  408906:	test   r9b,0x1
  40890a:	jne    408915 <get_boolean_op_value@@Base+0x1e5>
  408910:	jmp    408933 <get_boolean_op_value@@Base+0x203>
  408915:	mov    rax,QWORD PTR [rip+0xa29c]        # 412bb8 <__bss_start@@Base+0xa50>
  40891c:	add    rax,0x1
  408920:	mov    QWORD PTR [rip+0xa291],rax        # 412bb8 <__bss_start@@Base+0xa50>
  408927:	mov    DWORD PTR [rbp-0x4],0x2
  40892e:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  408933:	mov    eax,0x2
  408938:	mov    edx,eax
  40893a:	mov    rcx,QWORD PTR [rbp-0x10]
  40893e:	mov    rdi,QWORD PTR [rcx+0x8]
  408942:	lea    rsi,[rip+0x5278]        # 40dbc1 <_IO_stdin_used@@Base+0xbc1>
  408949:	call   403070 <strncmp@plt>
  40894e:	mov    r8d,0xd
  408954:	mov    ecx,r8d
  408957:	mov    r8d,0xc
  40895d:	mov    edx,r8d
  408960:	cmp    eax,0x0
  408963:	sete   r9b
  408967:	cmp    eax,0x0
  40896a:	cmove  rcx,rdx
  40896e:	lea    rdx,[rip+0xa1eb]        # 412b60 <__bss_start@@Base+0x9f8>
  408975:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408979:	add    rsi,0x1
  40897d:	mov    QWORD PTR [rdx+rcx*8],rsi
  408981:	test   r9b,0x1
  408985:	jne    408990 <get_boolean_op_value@@Base+0x260>
  40898b:	jmp    4089ae <get_boolean_op_value@@Base+0x27e>
  408990:	mov    rax,QWORD PTR [rip+0xa239]        # 412bd0 <__bss_start@@Base+0xa68>
  408997:	add    rax,0x1
  40899b:	mov    QWORD PTR [rip+0xa22e],rax        # 412bd0 <__bss_start@@Base+0xa68>
  4089a2:	mov    DWORD PTR [rbp-0x4],0x3
  4089a9:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  4089ae:	mov    eax,0x2
  4089b3:	mov    edx,eax
  4089b5:	mov    rcx,QWORD PTR [rbp-0x10]
  4089b9:	mov    rdi,QWORD PTR [rcx+0x8]
  4089bd:	lea    rsi,[rip+0x5200]        # 40dbc4 <_IO_stdin_used@@Base+0xbc4>
  4089c4:	call   403070 <strncmp@plt>
  4089c9:	mov    r8d,0x10
  4089cf:	mov    ecx,r8d
  4089d2:	mov    r8d,0xf
  4089d8:	mov    edx,r8d
  4089db:	cmp    eax,0x0
  4089de:	sete   r9b
  4089e2:	cmp    eax,0x0
  4089e5:	cmove  rcx,rdx
  4089e9:	lea    rdx,[rip+0xa170]        # 412b60 <__bss_start@@Base+0x9f8>
  4089f0:	mov    rsi,QWORD PTR [rdx+rcx*8]
  4089f4:	add    rsi,0x1
  4089f8:	mov    QWORD PTR [rdx+rcx*8],rsi
  4089fc:	test   r9b,0x1
  408a00:	jne    408a0b <get_boolean_op_value@@Base+0x2db>
  408a06:	jmp    408a29 <get_boolean_op_value@@Base+0x2f9>
  408a0b:	mov    rax,QWORD PTR [rip+0xa1d6]        # 412be8 <__bss_start@@Base+0xa80>
  408a12:	add    rax,0x1
  408a16:	mov    QWORD PTR [rip+0xa1cb],rax        # 412be8 <__bss_start@@Base+0xa80>
  408a1d:	mov    DWORD PTR [rbp-0x4],0x4
  408a24:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  408a29:	mov    eax,0x2
  408a2e:	mov    edx,eax
  408a30:	mov    rcx,QWORD PTR [rbp-0x10]
  408a34:	mov    rdi,QWORD PTR [rcx+0x8]
  408a38:	lea    rsi,[rip+0x5188]        # 40dbc7 <_IO_stdin_used@@Base+0xbc7>
  408a3f:	call   403070 <strncmp@plt>
  408a44:	mov    r8d,0x13
  408a4a:	mov    ecx,r8d
  408a4d:	mov    r8d,0x12
  408a53:	mov    edx,r8d
  408a56:	cmp    eax,0x0
  408a59:	sete   r9b
  408a5d:	cmp    eax,0x0
  408a60:	cmove  rcx,rdx
  408a64:	lea    rdx,[rip+0xa0f5]        # 412b60 <__bss_start@@Base+0x9f8>
  408a6b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  408a6f:	add    rsi,0x1
  408a73:	mov    QWORD PTR [rdx+rcx*8],rsi
  408a77:	test   r9b,0x1
  408a7b:	jne    408a86 <get_boolean_op_value@@Base+0x356>
  408a81:	jmp    408aa4 <get_boolean_op_value@@Base+0x374>
  408a86:	mov    rax,QWORD PTR [rip+0xa173]        # 412c00 <__bss_start@@Base+0xa98>
  408a8d:	add    rax,0x1
  408a91:	mov    QWORD PTR [rip+0xa168],rax        # 412c00 <__bss_start@@Base+0xa98>
  408a98:	mov    DWORD PTR [rbp-0x4],0x5
  408a9f:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  408aa4:	mov    rax,QWORD PTR [rip+0x954d]        # 411ff8 <stderr@GLIBC_2.2.5>
  408aab:	mov    rdi,QWORD PTR [rax]
  408aae:	mov    rax,QWORD PTR [rbp-0x10]
  408ab2:	mov    rdx,QWORD PTR [rax+0x8]
  408ab6:	lea    rsi,[rip+0x510d]        # 40dbca <_IO_stdin_used@@Base+0xbca>
  408abd:	mov    al,0x0
  408abf:	call   403170 <fprintf@plt>
  408ac4:	mov    edi,0x1
  408ac9:	mov    DWORD PTR [rbp-0x34],eax
  408acc:	call   403240 <exit@plt>
  408ad1:	mov    DWORD PTR [rip+0x9679],0x0        # 412154 <__data_start@@Base+0x14>
  408adb:	mov    rax,QWORD PTR [rbp-0x10]
  408adf:	mov    rax,QWORD PTR [rax+0x8]
  408ae3:	movsx  ecx,BYTE PTR [rax]
  408ae6:	mov    edx,ecx
  408ae8:	sub    edx,0x21
  408aeb:	mov    DWORD PTR [rbp-0x38],ecx
  408aee:	mov    DWORD PTR [rbp-0x3c],edx
  408af1:	je     408b24 <get_boolean_op_value@@Base+0x3f4>
  408af7:	jmp    408afc <get_boolean_op_value@@Base+0x3cc>
  408afc:	mov    eax,DWORD PTR [rbp-0x38]
  408aff:	sub    eax,0x3c
  408b02:	mov    DWORD PTR [rbp-0x40],eax
  408b05:	je     408b5c <get_boolean_op_value@@Base+0x42c>
  408b0b:	jmp    408b10 <get_boolean_op_value@@Base+0x3e0>
  408b10:	mov    eax,DWORD PTR [rbp-0x38]
  408b13:	sub    eax,0x3e
  408b16:	mov    DWORD PTR [rbp-0x44],eax
  408b19:	je     408b94 <get_boolean_op_value@@Base+0x464>
  408b1f:	jmp    408bcc <get_boolean_op_value@@Base+0x49c>
  408b24:	lea    rax,[rip+0x8d05]        # 411830 <_IO_stdin_used@@Base+0x4830>
  408b2b:	add    rax,0x8
  408b2f:	lea    rdi,[rip+0x961e]        # 412154 <__data_start@@Base+0x14>
  408b36:	mov    rsi,rax
  408b39:	call   408c30 <get_boolean_op_value@@Base+0x500>
  408b3e:	mov    rax,QWORD PTR [rip+0xa0e3]        # 412c28 <__bss_start@@Base+0xac0>
  408b45:	add    rax,0x1
  408b49:	mov    QWORD PTR [rip+0xa0d8],rax        # 412c28 <__bss_start@@Base+0xac0>
  408b50:	mov    DWORD PTR [rbp-0x4],0x8
  408b57:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  408b5c:	lea    rax,[rip+0x8ccd]        # 411830 <_IO_stdin_used@@Base+0x4830>
  408b63:	add    rax,0x10
  408b67:	lea    rdi,[rip+0x95e6]        # 412154 <__data_start@@Base+0x14>
  408b6e:	mov    rsi,rax
  408b71:	call   408c30 <get_boolean_op_value@@Base+0x500>
  408b76:	mov    rax,QWORD PTR [rip+0xa0b3]        # 412c30 <__bss_start@@Base+0xac8>
  408b7d:	add    rax,0x1
  408b81:	mov    QWORD PTR [rip+0xa0a8],rax        # 412c30 <__bss_start@@Base+0xac8>
  408b88:	mov    DWORD PTR [rbp-0x4],0x6
  408b8f:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  408b94:	lea    rax,[rip+0x8c95]        # 411830 <_IO_stdin_used@@Base+0x4830>
  408b9b:	add    rax,0x18
  408b9f:	lea    rdi,[rip+0x95ae]        # 412154 <__data_start@@Base+0x14>
  408ba6:	mov    rsi,rax
  408ba9:	call   408c30 <get_boolean_op_value@@Base+0x500>
  408bae:	mov    rax,QWORD PTR [rip+0xa083]        # 412c38 <__bss_start@@Base+0xad0>
  408bb5:	add    rax,0x1
  408bb9:	mov    QWORD PTR [rip+0xa078],rax        # 412c38 <__bss_start@@Base+0xad0>
  408bc0:	mov    DWORD PTR [rbp-0x4],0x7
  408bc7:	jmp    408c0c <get_boolean_op_value@@Base+0x4dc>
  408bcc:	lea    rdi,[rip+0x9581]        # 412154 <__data_start@@Base+0x14>
  408bd3:	lea    rsi,[rip+0x8c56]        # 411830 <_IO_stdin_used@@Base+0x4830>
  408bda:	call   408c30 <get_boolean_op_value@@Base+0x500>
  408bdf:	mov    rsi,QWORD PTR [rip+0x9412]        # 411ff8 <stderr@GLIBC_2.2.5>
  408be6:	mov    rdi,QWORD PTR [rsi]
  408be9:	mov    rsi,QWORD PTR [rbp-0x10]
  408bed:	mov    rdx,QWORD PTR [rsi+0x8]
  408bf1:	lea    rsi,[rip+0x4fd2]        # 40dbca <_IO_stdin_used@@Base+0xbca>
  408bf8:	mov    al,0x0
  408bfa:	call   403170 <fprintf@plt>
  408bff:	mov    edi,0x1
  408c04:	mov    DWORD PTR [rbp-0x48],eax
  408c07:	call   403240 <exit@plt>
  408c0c:	mov    rax,QWORD PTR [rip+0xa02d]        # 412c40 <__bss_start@@Base+0xad8>
  408c13:	add    rax,0x1
  408c17:	mov    QWORD PTR [rip+0xa022],rax        # 412c40 <__bss_start@@Base+0xad8>
  408c1e:	mov    eax,DWORD PTR [rbp-0x4]
  408c21:	add    rsp,0x50
  408c25:	pop    rbp
  408c26:	ret    
  408c27:	nop    WORD PTR [rax+rax*1+0x0]
  408c30:	mov    eax,DWORD PTR [rdi]
  408c32:	cmp    eax,0xffffffff
  408c35:	mov    QWORD PTR [rsp-0x8],rsi
  408c3a:	mov    DWORD PTR [rsp-0xc],eax
  408c3e:	je     408c73 <get_boolean_op_value@@Base+0x543>
  408c44:	mov    eax,DWORD PTR [rsp-0xc]
  408c48:	mov    ecx,eax
  408c4a:	mov    edx,ecx
  408c4c:	mov    rsi,QWORD PTR [rsp-0x8]
  408c51:	mov    rdx,QWORD PTR [rsi+rdx*8]
  408c55:	cmp    rdx,0x0
  408c59:	mov    QWORD PTR [rsp-0x18],rdx
  408c5e:	je     408c73 <get_boolean_op_value@@Base+0x543>
  408c64:	mov    rax,QWORD PTR [rsp-0x18]
  408c69:	mov    rcx,QWORD PTR [rax]
  408c6c:	add    rcx,0x1
  408c70:	mov    QWORD PTR [rax],rcx
  408c73:	ret    
  408c74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c7e:	xchg   ax,ax
  408c80:	sub    rsp,0x38
  408c84:	xor    eax,eax
  408c86:	mov    DWORD PTR [rsp+0x34],eax
  408c8a:	jmp    408c8f <get_boolean_op_value@@Base+0x55f>
  408c8f:	mov    eax,DWORD PTR [rsp+0x34]
  408c93:	movsxd rcx,eax
  408c96:	imul   rcx,rcx,0x30
  408c9a:	lea    rdx,[rip+0x8eaf]        # 411b50 <_IO_stdin_used@@Base+0x4b50>
  408ca1:	add    rdx,rcx
  408ca4:	mov    rdi,QWORD PTR [rdx]
  408ca7:	mov    rsi,QWORD PTR [rdx+0x8]
  408cab:	mov    r8d,DWORD PTR [rdx+0x10]
  408caf:	mov    QWORD PTR [rsp+0x28],rdx
  408cb4:	mov    edx,r8d
  408cb7:	mov    DWORD PTR [rsp+0x24],eax
  408cbb:	call   40abd0 <read_boolean_unary_expression@@Base+0x810>
  408cc0:	xor    eax,eax
  408cc2:	mov    rcx,QWORD PTR [rsp+0x28]
  408cc7:	mov    edx,DWORD PTR [rcx+0x18]
  408cca:	mov    rsi,QWORD PTR [rcx+0x20]
  408cce:	mov    rdi,QWORD PTR [rcx+0x28]
  408cd2:	cmp    eax,edx
  408cd4:	mov    QWORD PTR [rsp+0x18],rdi
  408cd9:	mov    DWORD PTR [rsp+0x14],edx
  408cdd:	mov    QWORD PTR [rsp+0x8],rsi
  408ce2:	mov    DWORD PTR [rsp+0x4],eax
  408ce6:	jge    408d57 <get_boolean_op_value@@Base+0x627>
  408cec:	mov    eax,DWORD PTR [rsp+0x4]
  408cf0:	movsxd rcx,eax
  408cf3:	shl    rcx,0x5
  408cf7:	mov    rdx,QWORD PTR [rsp+0x8]
  408cfc:	add    rdx,rcx
  408cff:	mov    edi,DWORD PTR [rdx]
  408d01:	mov    rsi,QWORD PTR [rdx+0x8]
  408d05:	mov    r8d,DWORD PTR [rdx+0x10]
  408d09:	mov    r9b,BYTE PTR [rdx+0x14]
  408d0d:	mov    r10d,DWORD PTR [rdx+0x18]
  408d11:	mov    edx,r8d
  408d14:	movzx  ecx,r9b
  408d18:	mov    r8d,r10d
  408d1b:	mov    DWORD PTR [rsp],eax
  408d1e:	call   40b020 <read_boolean_unary_expression@@Base+0xc60>
  408d23:	mov    eax,DWORD PTR [rsp]
  408d26:	movsxd rsi,eax
  408d29:	shl    rsi,0x4
  408d2d:	mov    r11,QWORD PTR [rsp+0x18]
  408d32:	add    r11,rsi
  408d35:	mov    edi,DWORD PTR [r11]
  408d38:	mov    rsi,QWORD PTR [r11+0x8]
  408d3c:	call   40b450 <read_boolean_unary_expression@@Base+0x1090>
  408d41:	mov    eax,DWORD PTR [rsp]
  408d44:	add    eax,0x1
  408d47:	mov    ecx,DWORD PTR [rsp+0x14]
  408d4b:	cmp    eax,ecx
  408d4d:	mov    DWORD PTR [rsp+0x4],eax
  408d51:	jl     408cec <get_boolean_op_value@@Base+0x5bc>
  408d57:	call   40b870 <read_boolean_unary_expression@@Base+0x14b0>
  408d5c:	call   40c010 <read_boolean_unary_expression@@Base+0x1c50>
  408d61:	mov    eax,DWORD PTR [rsp+0x24]
  408d65:	add    eax,0x1
  408d68:	cmp    eax,0x1
  408d6b:	mov    DWORD PTR [rsp+0x34],eax
  408d6f:	jl     408c8f <get_boolean_op_value@@Base+0x55f>
  408d75:	add    rsp,0x38
  408d79:	ret    
  408d7a:	nop    WORD PTR [rax+rax*1+0x0]
  408d80:	push   rax
  408d81:	call   408c80 <get_boolean_op_value@@Base+0x550>
  408d86:	mov    QWORD PTR [rip+0x9bb7],0x0        # 412948 <__bss_start@@Base+0x7e0>
  408d91:	mov    QWORD PTR [rip+0x9ba4],0x0        # 412940 <__bss_start@@Base+0x7d8>
  408d9c:	mov    QWORD PTR [rip+0x9bb1],0x0        # 412958 <__bss_start@@Base+0x7f0>
  408da7:	mov    QWORD PTR [rip+0x9b9e],0x0        # 412950 <__bss_start@@Base+0x7e8>
  408db2:	mov    QWORD PTR [rip+0x9bab],0x0        # 412968 <__bss_start@@Base+0x800>
  408dbd:	mov    QWORD PTR [rip+0x9b98],0x0        # 412960 <__bss_start@@Base+0x7f8>
  408dc8:	mov    QWORD PTR [rip+0x9ba5],0x0        # 412978 <__bss_start@@Base+0x810>
  408dd3:	mov    QWORD PTR [rip+0x9b92],0x0        # 412970 <__bss_start@@Base+0x808>
  408dde:	mov    QWORD PTR [rip+0x9b9f],0x0        # 412988 <__bss_start@@Base+0x820>
  408de9:	mov    QWORD PTR [rip+0x9b8c],0x0        # 412980 <__bss_start@@Base+0x818>
  408df4:	mov    QWORD PTR [rip+0x9b99],0x0        # 412998 <__bss_start@@Base+0x830>
  408dff:	mov    QWORD PTR [rip+0x9b86],0x0        # 412990 <__bss_start@@Base+0x828>
  408e0a:	mov    QWORD PTR [rip+0x9b93],0x0        # 4129a8 <__bss_start@@Base+0x840>
  408e15:	mov    QWORD PTR [rip+0x9b80],0x0        # 4129a0 <__bss_start@@Base+0x838>
  408e20:	mov    QWORD PTR [rip+0x9b8d],0x0        # 4129b8 <__bss_start@@Base+0x850>
  408e2b:	mov    QWORD PTR [rip+0x9b7a],0x0        # 4129b0 <__bss_start@@Base+0x848>
  408e36:	mov    QWORD PTR [rip+0x9bef],0x0        # 412a30 <__bss_start@@Base+0x8c8>
  408e41:	mov    QWORD PTR [rip+0x9bdc],0x0        # 412a28 <__bss_start@@Base+0x8c0>
  408e4c:	mov    QWORD PTR [rip+0x9bc9],0x0        # 412a20 <__bss_start@@Base+0x8b8>
  408e57:	mov    QWORD PTR [rip+0x9bb6],0x0        # 412a18 <__bss_start@@Base+0x8b0>
  408e62:	mov    QWORD PTR [rip+0x9ba3],0x0        # 412a10 <__bss_start@@Base+0x8a8>
  408e6d:	mov    QWORD PTR [rip+0x9b90],0x0        # 412a08 <__bss_start@@Base+0x8a0>
  408e78:	mov    QWORD PTR [rip+0x9b7d],0x0        # 412a00 <__bss_start@@Base+0x898>
  408e83:	mov    QWORD PTR [rip+0x9b6a],0x0        # 4129f8 <__bss_start@@Base+0x890>
  408e8e:	mov    QWORD PTR [rip+0x9b57],0x0        # 4129f0 <__bss_start@@Base+0x888>
  408e99:	mov    QWORD PTR [rip+0x9b44],0x0        # 4129e8 <__bss_start@@Base+0x880>
  408ea4:	mov    QWORD PTR [rip+0x9b31],0x0        # 4129e0 <__bss_start@@Base+0x878>
  408eaf:	mov    QWORD PTR [rip+0x9b1e],0x0        # 4129d8 <__bss_start@@Base+0x870>
  408eba:	mov    QWORD PTR [rip+0x9b0b],0x0        # 4129d0 <__bss_start@@Base+0x868>
  408ec5:	mov    QWORD PTR [rip+0x9af8],0x0        # 4129c8 <__bss_start@@Base+0x860>
  408ed0:	mov    QWORD PTR [rip+0x9ae5],0x0        # 4129c0 <__bss_start@@Base+0x858>
  408edb:	mov    QWORD PTR [rip+0x9b7a],0x0        # 412a60 <__bss_start@@Base+0x8f8>
  408ee6:	mov    QWORD PTR [rip+0x9b67],0x0        # 412a58 <__bss_start@@Base+0x8f0>
  408ef1:	mov    QWORD PTR [rip+0x9b54],0x0        # 412a50 <__bss_start@@Base+0x8e8>
  408efc:	mov    QWORD PTR [rip+0x9b41],0x0        # 412a48 <__bss_start@@Base+0x8e0>
  408f07:	mov    QWORD PTR [rip+0x9b2e],0x0        # 412a40 <__bss_start@@Base+0x8d8>
  408f12:	mov    QWORD PTR [rip+0x9b73],0x0        # 412a90 <__bss_start@@Base+0x928>
  408f1d:	mov    QWORD PTR [rip+0x9b60],0x0        # 412a88 <__bss_start@@Base+0x920>
  408f28:	mov    QWORD PTR [rip+0x9b4d],0x0        # 412a80 <__bss_start@@Base+0x918>
  408f33:	mov    QWORD PTR [rip+0x9b3a],0x0        # 412a78 <__bss_start@@Base+0x910>
  408f3e:	mov    QWORD PTR [rip+0x9b27],0x0        # 412a70 <__bss_start@@Base+0x908>
  408f49:	mov    QWORD PTR [rip+0x9b6c],0x0        # 412ac0 <__bss_start@@Base+0x958>
  408f54:	mov    QWORD PTR [rip+0x9b59],0x0        # 412ab8 <__bss_start@@Base+0x950>
  408f5f:	mov    QWORD PTR [rip+0x9b46],0x0        # 412ab0 <__bss_start@@Base+0x948>
  408f6a:	mov    QWORD PTR [rip+0x9b33],0x0        # 412aa8 <__bss_start@@Base+0x940>
  408f75:	mov    QWORD PTR [rip+0x9b20],0x0        # 412aa0 <__bss_start@@Base+0x938>
  408f80:	mov    QWORD PTR [rip+0x9b65],0x0        # 412af0 <__bss_start@@Base+0x988>
  408f8b:	mov    QWORD PTR [rip+0x9b52],0x0        # 412ae8 <__bss_start@@Base+0x980>
  408f96:	mov    QWORD PTR [rip+0x9b3f],0x0        # 412ae0 <__bss_start@@Base+0x978>
  408fa1:	mov    QWORD PTR [rip+0x9b2c],0x0        # 412ad8 <__bss_start@@Base+0x970>
  408fac:	mov    QWORD PTR [rip+0x9b19],0x0        # 412ad0 <__bss_start@@Base+0x968>
  408fb7:	mov    QWORD PTR [rip+0x9b5e],0x0        # 412b20 <__bss_start@@Base+0x9b8>
  408fc2:	mov    QWORD PTR [rip+0x9b4b],0x0        # 412b18 <__bss_start@@Base+0x9b0>
  408fcd:	mov    QWORD PTR [rip+0x9b38],0x0        # 412b10 <__bss_start@@Base+0x9a8>
  408fd8:	mov    QWORD PTR [rip+0x9b25],0x0        # 412b08 <__bss_start@@Base+0x9a0>
  408fe3:	mov    QWORD PTR [rip+0x9b12],0x0        # 412b00 <__bss_start@@Base+0x998>
  408fee:	mov    QWORD PTR [rip+0x9b57],0x0        # 412b50 <__bss_start@@Base+0x9e8>
  408ff9:	mov    QWORD PTR [rip+0x9b44],0x0        # 412b48 <__bss_start@@Base+0x9e0>
  409004:	mov    QWORD PTR [rip+0x9b31],0x0        # 412b40 <__bss_start@@Base+0x9d8>
  40900f:	mov    QWORD PTR [rip+0x9b1e],0x0        # 412b38 <__bss_start@@Base+0x9d0>
  40901a:	mov    QWORD PTR [rip+0x9b0b],0x0        # 412b30 <__bss_start@@Base+0x9c8>
  409025:	mov    QWORD PTR [rip+0x9c10],0x0        # 412c40 <__bss_start@@Base+0xad8>
  409030:	mov    QWORD PTR [rip+0x9bfd],0x0        # 412c38 <__bss_start@@Base+0xad0>
  40903b:	mov    QWORD PTR [rip+0x9bea],0x0        # 412c30 <__bss_start@@Base+0xac8>
  409046:	mov    QWORD PTR [rip+0x9bd7],0x0        # 412c28 <__bss_start@@Base+0xac0>
  409051:	mov    QWORD PTR [rip+0x9bc4],0x0        # 412c20 <__bss_start@@Base+0xab8>
  40905c:	mov    QWORD PTR [rip+0x9bb1],0x0        # 412c18 <__bss_start@@Base+0xab0>
  409067:	mov    QWORD PTR [rip+0x9b9e],0x0        # 412c10 <__bss_start@@Base+0xaa8>
  409072:	mov    QWORD PTR [rip+0x9b8b],0x0        # 412c08 <__bss_start@@Base+0xaa0>
  40907d:	mov    QWORD PTR [rip+0x9b78],0x0        # 412c00 <__bss_start@@Base+0xa98>
  409088:	mov    QWORD PTR [rip+0x9b65],0x0        # 412bf8 <__bss_start@@Base+0xa90>
  409093:	mov    QWORD PTR [rip+0x9b52],0x0        # 412bf0 <__bss_start@@Base+0xa88>
  40909e:	mov    QWORD PTR [rip+0x9b3f],0x0        # 412be8 <__bss_start@@Base+0xa80>
  4090a9:	mov    QWORD PTR [rip+0x9b2c],0x0        # 412be0 <__bss_start@@Base+0xa78>
  4090b4:	mov    QWORD PTR [rip+0x9b19],0x0        # 412bd8 <__bss_start@@Base+0xa70>
  4090bf:	mov    QWORD PTR [rip+0x9b06],0x0        # 412bd0 <__bss_start@@Base+0xa68>
  4090ca:	mov    QWORD PTR [rip+0x9af3],0x0        # 412bc8 <__bss_start@@Base+0xa60>
  4090d5:	mov    QWORD PTR [rip+0x9ae0],0x0        # 412bc0 <__bss_start@@Base+0xa58>
  4090e0:	mov    QWORD PTR [rip+0x9acd],0x0        # 412bb8 <__bss_start@@Base+0xa50>
  4090eb:	mov    QWORD PTR [rip+0x9aba],0x0        # 412bb0 <__bss_start@@Base+0xa48>
  4090f6:	mov    QWORD PTR [rip+0x9aa7],0x0        # 412ba8 <__bss_start@@Base+0xa40>
  409101:	mov    QWORD PTR [rip+0x9a94],0x0        # 412ba0 <__bss_start@@Base+0xa38>
  40910c:	mov    QWORD PTR [rip+0x9a81],0x0        # 412b98 <__bss_start@@Base+0xa30>
  409117:	mov    QWORD PTR [rip+0x9a6e],0x0        # 412b90 <__bss_start@@Base+0xa28>
  409122:	mov    QWORD PTR [rip+0x9a5b],0x0        # 412b88 <__bss_start@@Base+0xa20>
  40912d:	mov    QWORD PTR [rip+0x9a48],0x0        # 412b80 <__bss_start@@Base+0xa18>
  409138:	mov    QWORD PTR [rip+0x9a35],0x0        # 412b78 <__bss_start@@Base+0xa10>
  409143:	mov    QWORD PTR [rip+0x9a22],0x0        # 412b70 <__bss_start@@Base+0xa08>
  40914e:	mov    QWORD PTR [rip+0x9a0f],0x0        # 412b68 <__bss_start@@Base+0xa00>
  409159:	mov    QWORD PTR [rip+0x99fc],0x0        # 412b60 <__bss_start@@Base+0x9f8>
  409164:	pop    rax
  409165:	ret    
  409166:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409170:	push   rax
  409171:	lea    rdi,[rip+0xfffffffffffffb08]        # 408c80 <get_boolean_op_value@@Base+0x550>
  409178:	lea    rsi,[rip+0xfffffffffffffc01]        # 408d80 <get_boolean_op_value@@Base+0x650>
  40917f:	call   40c3d0 <__gcov_flush@@Base+0xa0>
  409184:	pop    rax
  409185:	ret    
  409186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409190 <init_grammar@@Base>:
  409190:	push   rbp
  409191:	mov    rbp,rsp
  409194:	mov    rax,QWORD PTR [rip+0x9ab5]        # 412c50 <__bss_start@@Base+0xae8>
  40919b:	add    rax,0x1
  40919f:	mov    QWORD PTR [rip+0x9aaa],rax        # 412c50 <__bss_start@@Base+0xae8>
  4091a6:	mov    QWORD PTR [rbp-0x18],rdi
  4091aa:	mov    QWORD PTR [rbp-0x20],rsi
  4091ae:	mov    rax,QWORD PTR [rip+0x9aa3]        # 412c58 <__bss_start@@Base+0xaf0>
  4091b5:	add    rax,0x1
  4091b9:	mov    QWORD PTR [rip+0x9a98],rax        # 412c58 <__bss_start@@Base+0xaf0>
  4091c0:	mov    rax,QWORD PTR [rbp-0x18]
  4091c4:	mov    QWORD PTR [rbp-0x8],rax
  4091c8:	mov    rcx,QWORD PTR [rbp-0x20]
  4091cc:	mov    QWORD PTR [rbp-0x10],rcx
  4091d0:	mov    rdx,QWORD PTR [rbp-0x10]
  4091d4:	mov    rsi,QWORD PTR [rbp-0x8]
  4091d8:	mov    QWORD PTR [rsi],rdx
  4091db:	pop    rbp
  4091dc:	ret    
  4091dd:	nop    DWORD PTR [rax]

00000000004091e0 <destroy_grammar@@Base>:
  4091e0:	push   rbp
  4091e1:	mov    rbp,rsp
  4091e4:	mov    rax,QWORD PTR [rip+0x9a75]        # 412c60 <__bss_start@@Base+0xaf8>
  4091eb:	add    rax,0x1
  4091ef:	mov    QWORD PTR [rip+0x9a6a],rax        # 412c60 <__bss_start@@Base+0xaf8>
  4091f6:	mov    QWORD PTR [rbp-0x10],rdi
  4091fa:	mov    rax,QWORD PTR [rip+0x9a67]        # 412c68 <__bss_start@@Base+0xb00>
  409201:	add    rax,0x1
  409205:	mov    QWORD PTR [rip+0x9a5c],rax        # 412c68 <__bss_start@@Base+0xb00>
  40920c:	mov    rax,QWORD PTR [rbp-0x10]
  409210:	mov    QWORD PTR [rbp-0x8],rax
  409214:	pop    rbp
  409215:	ret    
  409216:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000409220 <build_ast@@Base>:
  409220:	push   rbp
  409221:	mov    rbp,rsp
  409224:	sub    rsp,0x10
  409228:	mov    rax,QWORD PTR [rip+0x9a41]        # 412c70 <__bss_start@@Base+0xb08>
  40922f:	add    rax,0x1
  409233:	mov    QWORD PTR [rip+0x9a36],rax        # 412c70 <__bss_start@@Base+0xb08>
  40923a:	mov    QWORD PTR [rbp-0x10],rdi
  40923e:	mov    rax,QWORD PTR [rip+0x9a33]        # 412c78 <__bss_start@@Base+0xb10>
  409245:	add    rax,0x1
  409249:	mov    QWORD PTR [rip+0x9a28],rax        # 412c78 <__bss_start@@Base+0xb10>
  409250:	mov    rax,QWORD PTR [rbp-0x10]
  409254:	mov    QWORD PTR [rbp-0x8],rax
  409258:	mov    rdi,QWORD PTR [rbp-0x8]
  40925c:	call   409270 <read_function_ast_node@@Base>
  409261:	add    rsp,0x10
  409265:	pop    rbp
  409266:	ret    
  409267:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409270 <read_function_ast_node@@Base>:
  409270:	push   rbp
  409271:	mov    rbp,rsp
  409274:	sub    rsp,0x40
  409278:	mov    rax,QWORD PTR [rip+0x9a01]        # 412c80 <__bss_start@@Base+0xb18>
  40927f:	add    rax,0x1
  409283:	mov    QWORD PTR [rip+0x99f6],rax        # 412c80 <__bss_start@@Base+0xb18>
  40928a:	mov    QWORD PTR [rbp-0x38],rdi
  40928e:	mov    rax,QWORD PTR [rbp-0x38]
  409292:	mov    QWORD PTR [rbp-0x10],rax
  409296:	mov    QWORD PTR [rbp-0x18],0x0
  40929e:	mov    QWORD PTR [rbp-0x20],0x0
  4092a6:	mov    QWORD PTR [rbp-0x28],0x0
  4092ae:	mov    QWORD PTR [rbp-0x30],0x0
  4092b6:	mov    rcx,QWORD PTR [rbp-0x10]
  4092ba:	mov    rdi,QWORD PTR [rcx]
  4092bd:	call   403370 <next@@Base>
  4092c2:	mov    edx,0x2
  4092c7:	mov    ecx,edx
  4092c9:	mov    edx,0x1
  4092ce:	mov    edi,edx
  4092d0:	mov    QWORD PTR [rbp-0x28],rax
  4092d4:	mov    rax,QWORD PTR [rbp-0x28]
  4092d8:	mov    edx,DWORD PTR [rax]
  4092da:	cmp    edx,0x0
  4092dd:	setne  sil
  4092e1:	cmp    edx,0x0
  4092e4:	cmovne rcx,rdi
  4092e8:	lea    rax,[rip+0x9991]        # 412c80 <__bss_start@@Base+0xb18>
  4092ef:	mov    rdi,QWORD PTR [rax+rcx*8]
  4092f3:	add    rdi,0x1
  4092f7:	mov    QWORD PTR [rax+rcx*8],rdi
  4092fb:	test   sil,0x1
  4092ff:	jne    40930a <read_function_ast_node@@Base+0x9a>
  409305:	jmp    409329 <read_function_ast_node@@Base+0xb9>
  40930a:	mov    rax,QWORD PTR [rip+0x9987]        # 412c98 <__bss_start@@Base+0xb30>
  409311:	add    rax,0x1
  409315:	mov    QWORD PTR [rip+0x997c],rax        # 412c98 <__bss_start@@Base+0xb30>
  40931c:	mov    QWORD PTR [rbp-0x8],0x0
  409324:	jmp    409506 <read_function_ast_node@@Base+0x296>
  409329:	mov    rax,QWORD PTR [rbp-0x28]
  40932d:	mov    rdi,rax
  409330:	call   407490 <free_token_int_type@@Base>
  409335:	mov    rax,QWORD PTR [rbp-0x10]
  409339:	mov    rdi,QWORD PTR [rax]
  40933c:	call   403370 <next@@Base>
  409341:	mov    ecx,0x5
  409346:	mov    edi,ecx
  409348:	mov    ecx,0x4
  40934d:	mov    edx,ecx
  40934f:	mov    QWORD PTR [rbp-0x28],rax
  409353:	mov    rax,QWORD PTR [rbp-0x28]
  409357:	mov    ecx,DWORD PTR [rax]
  409359:	cmp    ecx,0x2
  40935c:	setne  sil
  409360:	cmp    ecx,0x2
  409363:	cmovne rdi,rdx
  409367:	lea    rax,[rip+0x9912]        # 412c80 <__bss_start@@Base+0xb18>
  40936e:	mov    rdx,QWORD PTR [rax+rdi*8]
  409372:	add    rdx,0x1
  409376:	mov    QWORD PTR [rax+rdi*8],rdx
  40937a:	test   sil,0x1
  40937e:	jne    409389 <read_function_ast_node@@Base+0x119>
  409384:	jmp    4093a8 <read_function_ast_node@@Base+0x138>
  409389:	mov    rax,QWORD PTR [rip+0x9920]        # 412cb0 <__bss_start@@Base+0xb48>
  409390:	add    rax,0x1
  409394:	mov    QWORD PTR [rip+0x9915],rax        # 412cb0 <__bss_start@@Base+0xb48>
  40939b:	mov    QWORD PTR [rbp-0x8],0x0
  4093a3:	jmp    409506 <read_function_ast_node@@Base+0x296>
  4093a8:	mov    rax,QWORD PTR [rbp-0x28]
  4093ac:	mov    QWORD PTR [rbp-0x30],rax
  4093b0:	mov    rax,QWORD PTR [rbp-0x10]
  4093b4:	mov    rdi,QWORD PTR [rax]
  4093b7:	call   403370 <next@@Base>
  4093bc:	mov    ecx,0x8
  4093c1:	mov    edi,ecx
  4093c3:	mov    ecx,0x7
  4093c8:	mov    edx,ecx
  4093ca:	mov    QWORD PTR [rbp-0x28],rax
  4093ce:	mov    rax,QWORD PTR [rbp-0x28]
  4093d2:	mov    ecx,DWORD PTR [rax]
  4093d4:	cmp    ecx,0x3
  4093d7:	setne  sil
  4093db:	cmp    ecx,0x3
  4093de:	cmovne rdi,rdx
  4093e2:	lea    rax,[rip+0x9897]        # 412c80 <__bss_start@@Base+0xb18>
  4093e9:	mov    rdx,QWORD PTR [rax+rdi*8]
  4093ed:	add    rdx,0x1
  4093f1:	mov    QWORD PTR [rax+rdi*8],rdx
  4093f5:	test   sil,0x1
  4093f9:	jne    409404 <read_function_ast_node@@Base+0x194>
  4093ff:	jmp    409423 <read_function_ast_node@@Base+0x1b3>
  409404:	mov    rax,QWORD PTR [rip+0x98bd]        # 412cc8 <__bss_start@@Base+0xb60>
  40940b:	add    rax,0x1
  40940f:	mov    QWORD PTR [rip+0x98b2],rax        # 412cc8 <__bss_start@@Base+0xb60>
  409416:	mov    QWORD PTR [rbp-0x8],0x0
  40941e:	jmp    409506 <read_function_ast_node@@Base+0x296>
  409423:	mov    rax,QWORD PTR [rbp-0x28]
  409427:	mov    rdi,rax
  40942a:	call   407580 <free_token_opar@@Base>
  40942f:	mov    rax,QWORD PTR [rbp-0x10]
  409433:	mov    rdi,QWORD PTR [rax]
  409436:	call   403370 <next@@Base>
  40943b:	mov    ecx,0xb
  409440:	mov    edi,ecx
  409442:	mov    ecx,0xa
  409447:	mov    edx,ecx
  409449:	mov    QWORD PTR [rbp-0x28],rax
  40944d:	mov    rax,QWORD PTR [rbp-0x28]
  409451:	mov    ecx,DWORD PTR [rax]
  409453:	cmp    ecx,0x4
  409456:	setne  sil
  40945a:	cmp    ecx,0x4
  40945d:	cmovne rdi,rdx
  409461:	lea    rax,[rip+0x9818]        # 412c80 <__bss_start@@Base+0xb18>
  409468:	mov    rdx,QWORD PTR [rax+rdi*8]
  40946c:	add    rdx,0x1
  409470:	mov    QWORD PTR [rax+rdi*8],rdx
  409474:	test   sil,0x1
  409478:	jne    409483 <read_function_ast_node@@Base+0x213>
  40947e:	jmp    4094a2 <read_function_ast_node@@Base+0x232>
  409483:	mov    rax,QWORD PTR [rip+0x9856]        # 412ce0 <__bss_start@@Base+0xb78>
  40948a:	add    rax,0x1
  40948e:	mov    QWORD PTR [rip+0x984b],rax        # 412ce0 <__bss_start@@Base+0xb78>
  409495:	mov    QWORD PTR [rbp-0x8],0x0
  40949d:	jmp    409506 <read_function_ast_node@@Base+0x296>
  4094a2:	mov    rax,QWORD PTR [rip+0x983f]        # 412ce8 <__bss_start@@Base+0xb80>
  4094a9:	add    rax,0x1
  4094ad:	mov    QWORD PTR [rip+0x9834],rax        # 412ce8 <__bss_start@@Base+0xb80>
  4094b4:	mov    rax,QWORD PTR [rbp-0x28]
  4094b8:	mov    rdi,rax
  4094bb:	call   4075d0 <free_token_cpar@@Base>
  4094c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4094c4:	call   409530 <read_body@@Base>
  4094c9:	mov    ecx,0x20
  4094ce:	mov    edi,ecx
  4094d0:	mov    QWORD PTR [rbp-0x20],rax
  4094d4:	call   4031c0 <malloc@plt>
  4094d9:	mov    QWORD PTR [rbp-0x18],rax
  4094dd:	mov    rax,QWORD PTR [rbp-0x18]
  4094e1:	mov    rdi,QWORD PTR [rbp-0x30]
  4094e5:	mov    rsi,QWORD PTR [rdi+0x8]
  4094e9:	mov    rdx,QWORD PTR [rbp-0x20]
  4094ed:	mov    rdi,rax
  4094f0:	call   407e30 <init_node_function@@Base>
  4094f5:	mov    rdi,QWORD PTR [rbp-0x30]
  4094f9:	call   407530 <free_token_function@@Base>
  4094fe:	mov    rax,QWORD PTR [rbp-0x18]
  409502:	mov    QWORD PTR [rbp-0x8],rax
  409506:	mov    rax,QWORD PTR [rip+0x97e3]        # 412cf0 <__bss_start@@Base+0xb88>
  40950d:	add    rax,0x1
  409511:	mov    QWORD PTR [rip+0x97d8],rax        # 412cf0 <__bss_start@@Base+0xb88>
  409518:	mov    rax,QWORD PTR [rbp-0x8]
  40951c:	add    rsp,0x40
  409520:	pop    rbp
  409521:	ret    
  409522:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40952c:	nop    DWORD PTR [rax+0x0]

0000000000409530 <read_body@@Base>:
  409530:	push   rbp
  409531:	mov    rbp,rsp
  409534:	sub    rsp,0x50
  409538:	mov    rax,QWORD PTR [rip+0x97c1]        # 412d00 <__bss_start@@Base+0xb98>
  40953f:	add    rax,0x1
  409543:	mov    QWORD PTR [rip+0x97b6],rax        # 412d00 <__bss_start@@Base+0xb98>
  40954a:	mov    QWORD PTR [rbp-0x38],rdi
  40954e:	mov    rax,QWORD PTR [rbp-0x38]
  409552:	mov    QWORD PTR [rbp-0x10],rax
  409556:	mov    QWORD PTR [rbp-0x18],0x0
  40955e:	mov    QWORD PTR [rbp-0x20],0x0
  409566:	mov    QWORD PTR [rbp-0x28],0x0
  40956e:	mov    QWORD PTR [rbp-0x30],0x0
  409576:	mov    rcx,QWORD PTR [rbp-0x10]
  40957a:	mov    rdi,QWORD PTR [rcx]
  40957d:	call   403370 <next@@Base>
  409582:	mov    edx,0x2
  409587:	mov    ecx,edx
  409589:	mov    edx,0x1
  40958e:	mov    edi,edx
  409590:	mov    QWORD PTR [rbp-0x30],rax
  409594:	mov    rax,QWORD PTR [rbp-0x30]
  409598:	mov    edx,DWORD PTR [rax]
  40959a:	cmp    edx,0x5
  40959d:	setne  sil
  4095a1:	cmp    edx,0x5
  4095a4:	cmovne rcx,rdi
  4095a8:	lea    rax,[rip+0x9751]        # 412d00 <__bss_start@@Base+0xb98>
  4095af:	mov    rdi,QWORD PTR [rax+rcx*8]
  4095b3:	add    rdi,0x1
  4095b7:	mov    QWORD PTR [rax+rcx*8],rdi
  4095bb:	test   sil,0x1
  4095bf:	jne    4095ca <read_body@@Base+0x9a>
  4095c5:	jmp    4095e9 <read_body@@Base+0xb9>
  4095ca:	mov    rax,QWORD PTR [rip+0x9747]        # 412d18 <__bss_start@@Base+0xbb0>
  4095d1:	add    rax,0x1
  4095d5:	mov    QWORD PTR [rip+0x973c],rax        # 412d18 <__bss_start@@Base+0xbb0>
  4095dc:	mov    QWORD PTR [rbp-0x8],0x0
  4095e4:	jmp    409849 <read_body@@Base+0x319>
  4095e9:	mov    rax,QWORD PTR [rip+0x9730]        # 412d20 <__bss_start@@Base+0xbb8>
  4095f0:	add    rax,0x1
  4095f4:	mov    QWORD PTR [rip+0x9725],rax        # 412d20 <__bss_start@@Base+0xbb8>
  4095fb:	mov    rax,QWORD PTR [rbp-0x30]
  4095ff:	mov    rdi,rax
  409602:	call   407620 <free_token_obra@@Base>
  409607:	mov    rax,QWORD PTR [rbp-0x10]
  40960b:	mov    rdi,QWORD PTR [rax]
  40960e:	call   403370 <next@@Base>
  409613:	mov    QWORD PTR [rbp-0x30],rax
  409617:	mov    eax,0x6
  40961c:	mov    ecx,eax
  40961e:	mov    eax,0x5
  409623:	mov    edx,eax
  409625:	mov    rsi,QWORD PTR [rbp-0x30]
  409629:	mov    eax,DWORD PTR [rsi]
  40962b:	cmp    eax,0x6
  40962e:	setne  dil
  409632:	cmp    eax,0x6
  409635:	cmovne rcx,rdx
  409639:	lea    rdx,[rip+0x96c0]        # 412d00 <__bss_start@@Base+0xb98>
  409640:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409644:	add    rsi,0x1
  409648:	mov    QWORD PTR [rdx+rcx*8],rsi
  40964c:	test   dil,0x1
  409650:	jne    40965b <read_body@@Base+0x12b>
  409656:	jmp    409823 <read_body@@Base+0x2f3>
  40965b:	mov    DWORD PTR [rip+0x8af3],0x0        # 412158 <__data_start@@Base+0x18>
  409665:	mov    rax,QWORD PTR [rbp-0x30]
  409669:	mov    ecx,DWORD PTR [rax]
  40966b:	mov    edx,ecx
  40966d:	sub    edx,0x7
  409670:	mov    DWORD PTR [rbp-0x3c],ecx
  409673:	mov    DWORD PTR [rbp-0x40],edx
  409676:	je     409695 <read_body@@Base+0x165>
  40967c:	jmp    409681 <read_body@@Base+0x151>
  409681:	mov    eax,DWORD PTR [rbp-0x3c]
  409684:	sub    eax,0xa
  409687:	mov    DWORD PTR [rbp-0x44],eax
  40968a:	je     4096df <read_body@@Base+0x1af>
  409690:	jmp    409729 <read_body@@Base+0x1f9>
  409695:	lea    rax,[rip+0x84e4]        # 411b80 <_IO_stdin_used@@Base+0x4b80>
  40969c:	add    rax,0x8
  4096a0:	lea    rdi,[rip+0x8ab1]        # 412158 <__data_start@@Base+0x18>
  4096a7:	mov    rsi,rax
  4096aa:	call   40a5c0 <read_boolean_unary_expression@@Base+0x200>
  4096af:	mov    rax,QWORD PTR [rip+0x969a]        # 412d50 <__bss_start@@Base+0xbe8>
  4096b6:	add    rax,0x1
  4096ba:	mov    QWORD PTR [rip+0x968f],rax        # 412d50 <__bss_start@@Base+0xbe8>
  4096c1:	mov    rax,QWORD PTR [rbp-0x30]
  4096c5:	mov    rdi,rax
  4096c8:	call   4076c0 <free_token_return@@Base>
  4096cd:	mov    rdi,QWORD PTR [rbp-0x10]
  4096d1:	call   409870 <read_return_expression@@Base>
  4096d6:	mov    QWORD PTR [rbp-0x20],rax
  4096da:	jmp    40976b <read_body@@Base+0x23b>
  4096df:	lea    rax,[rip+0x849a]        # 411b80 <_IO_stdin_used@@Base+0x4b80>
  4096e6:	add    rax,0x10
  4096ea:	lea    rdi,[rip+0x8a67]        # 412158 <__data_start@@Base+0x18>
  4096f1:	mov    rsi,rax
  4096f4:	call   40a5c0 <read_boolean_unary_expression@@Base+0x200>
  4096f9:	mov    rax,QWORD PTR [rip+0x9658]        # 412d58 <__bss_start@@Base+0xbf0>
  409700:	add    rax,0x1
  409704:	mov    QWORD PTR [rip+0x964d],rax        # 412d58 <__bss_start@@Base+0xbf0>
  40970b:	mov    rax,QWORD PTR [rbp-0x30]
  40970f:	mov    rdi,rax
  409712:	call   4077b0 <free_token_if@@Base>
  409717:	mov    rdi,QWORD PTR [rbp-0x10]
  40971b:	call   409a40 <read_if_statement@@Base>
  409720:	mov    QWORD PTR [rbp-0x20],rax
  409724:	jmp    40976b <read_body@@Base+0x23b>
  409729:	lea    rdi,[rip+0x8a28]        # 412158 <__data_start@@Base+0x18>
  409730:	lea    rsi,[rip+0x8449]        # 411b80 <_IO_stdin_used@@Base+0x4b80>
  409737:	call   40a5c0 <read_boolean_unary_expression@@Base+0x200>
  40973c:	mov    rsi,QWORD PTR [rip+0x961d]        # 412d60 <__bss_start@@Base+0xbf8>
  409743:	add    rsi,0x1
  409747:	mov    QWORD PTR [rip+0x9612],rsi        # 412d60 <__bss_start@@Base+0xbf8>
  40974e:	mov    rsi,QWORD PTR [rbp-0x10]
  409752:	mov    rdi,QWORD PTR [rsi]
  409755:	mov    rsi,QWORD PTR [rbp-0x30]
  409759:	call   403710 <push_back@@Base>
  40975e:	mov    rsi,QWORD PTR [rbp-0x18]
  409762:	mov    QWORD PTR [rbp-0x8],rsi
  409766:	jmp    409849 <read_body@@Base+0x319>
  40976b:	mov    eax,0xe
  409770:	mov    ecx,eax
  409772:	mov    eax,0xd
  409777:	mov    edx,eax
  409779:	mov    rsi,QWORD PTR [rbp-0x18]
  40977d:	cmp    rsi,0x0
  409781:	setne  dil
  409785:	cmp    rsi,0x0
  409789:	cmovne rcx,rdx
  40978d:	lea    rdx,[rip+0x956c]        # 412d00 <__bss_start@@Base+0xb98>
  409794:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409798:	add    rsi,0x1
  40979c:	mov    QWORD PTR [rdx+rcx*8],rsi
  4097a0:	test   dil,0x1
  4097a4:	jne    4097af <read_body@@Base+0x27f>
  4097aa:	jmp    4097da <read_body@@Base+0x2aa>
  4097af:	mov    rax,QWORD PTR [rip+0x95c2]        # 412d78 <__bss_start@@Base+0xc10>
  4097b6:	add    rax,0x1
  4097ba:	mov    QWORD PTR [rip+0x95b7],rax        # 412d78 <__bss_start@@Base+0xc10>
  4097c1:	mov    rax,QWORD PTR [rbp-0x20]
  4097c5:	mov    rcx,QWORD PTR [rbp-0x28]
  4097c9:	mov    QWORD PTR [rcx+0x8],rax
  4097cd:	mov    rax,QWORD PTR [rbp-0x20]
  4097d1:	mov    QWORD PTR [rbp-0x28],rax
  4097d5:	jmp    4097fc <read_body@@Base+0x2cc>
  4097da:	mov    rax,QWORD PTR [rip+0x959f]        # 412d80 <__bss_start@@Base+0xc18>
  4097e1:	add    rax,0x1
  4097e5:	mov    QWORD PTR [rip+0x9594],rax        # 412d80 <__bss_start@@Base+0xc18>
  4097ec:	mov    rax,QWORD PTR [rbp-0x20]
  4097f0:	mov    QWORD PTR [rbp-0x18],rax
  4097f4:	mov    rax,QWORD PTR [rbp-0x20]
  4097f8:	mov    QWORD PTR [rbp-0x28],rax
  4097fc:	mov    rax,QWORD PTR [rip+0x9585]        # 412d88 <__bss_start@@Base+0xc20>
  409803:	add    rax,0x1
  409807:	mov    QWORD PTR [rip+0x957a],rax        # 412d88 <__bss_start@@Base+0xc20>
  40980e:	mov    rax,QWORD PTR [rbp-0x10]
  409812:	mov    rdi,QWORD PTR [rax]
  409815:	call   403370 <next@@Base>
  40981a:	mov    QWORD PTR [rbp-0x30],rax
  40981e:	jmp    409617 <read_body@@Base+0xe7>
  409823:	mov    rax,QWORD PTR [rip+0x9566]        # 412d90 <__bss_start@@Base+0xc28>
  40982a:	add    rax,0x1
  40982e:	mov    QWORD PTR [rip+0x955b],rax        # 412d90 <__bss_start@@Base+0xc28>
  409835:	mov    rax,QWORD PTR [rbp-0x30]
  409839:	mov    rdi,rax
  40983c:	call   407670 <free_token_cbra@@Base>
  409841:	mov    rax,QWORD PTR [rbp-0x18]
  409845:	mov    QWORD PTR [rbp-0x8],rax
  409849:	mov    rax,QWORD PTR [rip+0x9548]        # 412d98 <__bss_start@@Base+0xc30>
  409850:	add    rax,0x1
  409854:	mov    QWORD PTR [rip+0x953d],rax        # 412d98 <__bss_start@@Base+0xc30>
  40985b:	mov    rax,QWORD PTR [rbp-0x8]
  40985f:	add    rsp,0x50
  409863:	pop    rbp
  409864:	ret    
  409865:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40986f:	nop

0000000000409870 <read_return_expression@@Base>:
  409870:	push   rbp
  409871:	mov    rbp,rsp
  409874:	sub    rsp,0x40
  409878:	mov    rax,QWORD PTR [rip+0x9521]        # 412da0 <__bss_start@@Base+0xc38>
  40987f:	add    rax,0x1
  409883:	mov    QWORD PTR [rip+0x9516],rax        # 412da0 <__bss_start@@Base+0xc38>
  40988a:	mov    QWORD PTR [rbp-0x38],rdi
  40988e:	mov    rax,QWORD PTR [rbp-0x38]
  409892:	mov    QWORD PTR [rbp-0x10],rax
  409896:	mov    QWORD PTR [rbp-0x18],0x0
  40989e:	mov    QWORD PTR [rbp-0x20],0x0
  4098a6:	mov    QWORD PTR [rbp-0x28],0x0
  4098ae:	mov    QWORD PTR [rbp-0x30],0x0
  4098b6:	mov    rcx,QWORD PTR [rbp-0x10]
  4098ba:	mov    rdi,QWORD PTR [rcx]
  4098bd:	call   403370 <next@@Base>
  4098c2:	mov    edx,0x2
  4098c7:	mov    ecx,edx
  4098c9:	mov    edx,0x1
  4098ce:	mov    edi,edx
  4098d0:	mov    QWORD PTR [rbp-0x28],rax
  4098d4:	mov    rax,QWORD PTR [rbp-0x28]
  4098d8:	mov    edx,DWORD PTR [rax]
  4098da:	cmp    edx,0x1
  4098dd:	setne  sil
  4098e1:	cmp    edx,0x1
  4098e4:	cmovne rcx,rdi
  4098e8:	lea    rax,[rip+0x94b1]        # 412da0 <__bss_start@@Base+0xc38>
  4098ef:	mov    rdi,QWORD PTR [rax+rcx*8]
  4098f3:	add    rdi,0x1
  4098f7:	mov    QWORD PTR [rax+rcx*8],rdi
  4098fb:	test   sil,0x1
  4098ff:	jne    40990a <read_return_expression@@Base+0x9a>
  409905:	jmp    409929 <read_return_expression@@Base+0xb9>
  40990a:	mov    rax,QWORD PTR [rip+0x94a7]        # 412db8 <__bss_start@@Base+0xc50>
  409911:	add    rax,0x1
  409915:	mov    QWORD PTR [rip+0x949c],rax        # 412db8 <__bss_start@@Base+0xc50>
  40991c:	mov    QWORD PTR [rbp-0x8],0x0
  409924:	jmp    409a16 <read_return_expression@@Base+0x1a6>
  409929:	mov    eax,0x18
  40992e:	mov    edi,eax
  409930:	mov    rcx,QWORD PTR [rbp-0x28]
  409934:	mov    QWORD PTR [rbp-0x30],rcx
  409938:	call   4031c0 <malloc@plt>
  40993d:	mov    QWORD PTR [rbp-0x20],rax
  409941:	mov    rax,QWORD PTR [rbp-0x20]
  409945:	mov    rcx,QWORD PTR [rbp-0x30]
  409949:	mov    esi,DWORD PTR [rcx+0x4]
  40994c:	mov    rdi,rax
  40994f:	call   407dd0 <init_node_int@@Base>
  409954:	mov    rdi,QWORD PTR [rbp-0x30]
  409958:	call   4074e0 <free_token_int_value@@Base>
  40995d:	mov    esi,0x18
  409962:	mov    edi,esi
  409964:	call   4031c0 <malloc@plt>
  409969:	mov    QWORD PTR [rbp-0x18],rax
  40996d:	mov    rax,QWORD PTR [rbp-0x18]
  409971:	mov    rsi,QWORD PTR [rbp-0x20]
  409975:	mov    rdi,rax
  409978:	call   407eb0 <init_node_return@@Base>
  40997d:	mov    rax,QWORD PTR [rbp-0x10]
  409981:	mov    rdi,QWORD PTR [rax]
  409984:	call   403370 <next@@Base>
  409989:	mov    edx,0x5
  40998e:	mov    ecx,edx
  409990:	mov    edx,0x4
  409995:	mov    esi,edx
  409997:	mov    QWORD PTR [rbp-0x28],rax
  40999b:	mov    rax,QWORD PTR [rbp-0x28]
  40999f:	mov    edx,DWORD PTR [rax]
  4099a1:	cmp    edx,0x8
  4099a4:	setne  r8b
  4099a8:	cmp    edx,0x8
  4099ab:	cmovne rcx,rsi
  4099af:	lea    rax,[rip+0x93ea]        # 412da0 <__bss_start@@Base+0xc38>
  4099b6:	mov    rsi,QWORD PTR [rax+rcx*8]
  4099ba:	add    rsi,0x1
  4099be:	mov    QWORD PTR [rax+rcx*8],rsi
  4099c2:	test   r8b,0x1
  4099c6:	jne    4099d1 <read_return_expression@@Base+0x161>
  4099cc:	jmp    4099f0 <read_return_expression@@Base+0x180>
  4099d1:	mov    rax,QWORD PTR [rip+0x93f8]        # 412dd0 <__bss_start@@Base+0xc68>
  4099d8:	add    rax,0x1
  4099dc:	mov    QWORD PTR [rip+0x93ed],rax        # 412dd0 <__bss_start@@Base+0xc68>
  4099e3:	mov    QWORD PTR [rbp-0x8],0x0
  4099eb:	jmp    409a16 <read_return_expression@@Base+0x1a6>
  4099f0:	mov    rax,QWORD PTR [rip+0x93e1]        # 412dd8 <__bss_start@@Base+0xc70>
  4099f7:	add    rax,0x1
  4099fb:	mov    QWORD PTR [rip+0x93d6],rax        # 412dd8 <__bss_start@@Base+0xc70>
  409a02:	mov    rax,QWORD PTR [rbp-0x28]
  409a06:	mov    rdi,rax
  409a09:	call   407710 <free_token_semicolon@@Base>
  409a0e:	mov    rax,QWORD PTR [rbp-0x18]
  409a12:	mov    QWORD PTR [rbp-0x8],rax
  409a16:	mov    rax,QWORD PTR [rip+0x93c3]        # 412de0 <__bss_start@@Base+0xc78>
  409a1d:	add    rax,0x1
  409a21:	mov    QWORD PTR [rip+0x93b8],rax        # 412de0 <__bss_start@@Base+0xc78>
  409a28:	mov    rax,QWORD PTR [rbp-0x8]
  409a2c:	add    rsp,0x40
  409a30:	pop    rbp
  409a31:	ret    
  409a32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a3c:	nop    DWORD PTR [rax+0x0]

0000000000409a40 <read_if_statement@@Base>:
  409a40:	push   rbp
  409a41:	mov    rbp,rsp
  409a44:	sub    rsp,0x40
  409a48:	mov    rax,QWORD PTR [rip+0x93a1]        # 412df0 <__bss_start@@Base+0xc88>
  409a4f:	add    rax,0x1
  409a53:	mov    QWORD PTR [rip+0x9396],rax        # 412df0 <__bss_start@@Base+0xc88>
  409a5a:	mov    QWORD PTR [rbp-0x40],rdi
  409a5e:	mov    rax,QWORD PTR [rbp-0x40]
  409a62:	mov    QWORD PTR [rbp-0x10],rax
  409a66:	mov    QWORD PTR [rbp-0x18],0x0
  409a6e:	mov    QWORD PTR [rbp-0x20],0x0
  409a76:	mov    QWORD PTR [rbp-0x28],0x0
  409a7e:	mov    QWORD PTR [rbp-0x30],0x0
  409a86:	mov    QWORD PTR [rbp-0x38],0x0
  409a8e:	mov    rcx,QWORD PTR [rbp-0x10]
  409a92:	mov    rdi,QWORD PTR [rcx]
  409a95:	call   403370 <next@@Base>
  409a9a:	mov    edx,0x2
  409a9f:	mov    ecx,edx
  409aa1:	mov    edx,0x1
  409aa6:	mov    edi,edx
  409aa8:	mov    QWORD PTR [rbp-0x38],rax
  409aac:	mov    rax,QWORD PTR [rbp-0x38]
  409ab0:	mov    edx,DWORD PTR [rax]
  409ab2:	cmp    edx,0x3
  409ab5:	setne  sil
  409ab9:	cmp    edx,0x3
  409abc:	cmovne rcx,rdi
  409ac0:	lea    rax,[rip+0x9329]        # 412df0 <__bss_start@@Base+0xc88>
  409ac7:	mov    rdi,QWORD PTR [rax+rcx*8]
  409acb:	add    rdi,0x1
  409acf:	mov    QWORD PTR [rax+rcx*8],rdi
  409ad3:	test   sil,0x1
  409ad7:	jne    409ae2 <read_if_statement@@Base+0xa2>
  409add:	jmp    409b01 <read_if_statement@@Base+0xc1>
  409ae2:	mov    rax,QWORD PTR [rip+0x931f]        # 412e08 <__bss_start@@Base+0xca0>
  409ae9:	add    rax,0x1
  409aed:	mov    QWORD PTR [rip+0x9314],rax        # 412e08 <__bss_start@@Base+0xca0>
  409af4:	mov    QWORD PTR [rbp-0x8],0x0
  409afc:	jmp    409c0f <read_if_statement@@Base+0x1cf>
  409b01:	mov    rax,QWORD PTR [rbp-0x38]
  409b05:	mov    rdi,rax
  409b08:	call   407580 <free_token_opar@@Base>
  409b0d:	mov    rdi,QWORD PTR [rbp-0x10]
  409b11:	call   409c30 <read_boolean_expression@@Base>
  409b16:	mov    QWORD PTR [rbp-0x20],rax
  409b1a:	mov    rdi,QWORD PTR [rbp-0x10]
  409b1e:	call   409530 <read_body@@Base>
  409b23:	mov    QWORD PTR [rbp-0x28],rax
  409b27:	mov    rax,QWORD PTR [rbp-0x10]
  409b2b:	mov    rdi,QWORD PTR [rax]
  409b2e:	call   403370 <next@@Base>
  409b33:	mov    ecx,0x5
  409b38:	mov    edi,ecx
  409b3a:	mov    ecx,0x4
  409b3f:	mov    edx,ecx
  409b41:	mov    QWORD PTR [rbp-0x38],rax
  409b45:	mov    rax,QWORD PTR [rbp-0x38]
  409b49:	mov    ecx,DWORD PTR [rax]
  409b4b:	cmp    ecx,0xb
  409b4e:	sete   sil
  409b52:	cmp    ecx,0xb
  409b55:	cmove  rdi,rdx
  409b59:	lea    rax,[rip+0x9290]        # 412df0 <__bss_start@@Base+0xc88>
  409b60:	mov    rdx,QWORD PTR [rax+rdi*8]
  409b64:	add    rdx,0x1
  409b68:	mov    QWORD PTR [rax+rdi*8],rdx
  409b6c:	test   sil,0x1
  409b70:	jne    409b7b <read_if_statement@@Base+0x13b>
  409b76:	jmp    409bab <read_if_statement@@Base+0x16b>
  409b7b:	mov    rax,QWORD PTR [rip+0x929e]        # 412e20 <__bss_start@@Base+0xcb8>
  409b82:	add    rax,0x1
  409b86:	mov    QWORD PTR [rip+0x9293],rax        # 412e20 <__bss_start@@Base+0xcb8>
  409b8d:	mov    rax,QWORD PTR [rbp-0x38]
  409b91:	mov    rdi,rax
  409b94:	call   407800 <free_token_else@@Base>
  409b99:	mov    rdi,QWORD PTR [rbp-0x10]
  409b9d:	call   409530 <read_body@@Base>
  409ba2:	mov    QWORD PTR [rbp-0x30],rax
  409ba6:	jmp    409bcd <read_if_statement@@Base+0x18d>
  409bab:	mov    rax,QWORD PTR [rip+0x9276]        # 412e28 <__bss_start@@Base+0xcc0>
  409bb2:	add    rax,0x1
  409bb6:	mov    QWORD PTR [rip+0x926b],rax        # 412e28 <__bss_start@@Base+0xcc0>
  409bbd:	mov    rax,QWORD PTR [rbp-0x10]
  409bc1:	mov    rdi,QWORD PTR [rax]
  409bc4:	mov    rsi,QWORD PTR [rbp-0x38]
  409bc8:	call   403710 <push_back@@Base>
  409bcd:	mov    eax,0x28
  409bd2:	mov    edi,eax
  409bd4:	mov    rcx,QWORD PTR [rip+0x9255]        # 412e30 <__bss_start@@Base+0xcc8>
  409bdb:	add    rcx,0x1
  409bdf:	mov    QWORD PTR [rip+0x924a],rcx        # 412e30 <__bss_start@@Base+0xcc8>
  409be6:	call   4031c0 <malloc@plt>
  409beb:	mov    QWORD PTR [rbp-0x18],rax
  409bef:	mov    rax,QWORD PTR [rbp-0x18]
  409bf3:	mov    rsi,QWORD PTR [rbp-0x20]
  409bf7:	mov    rdx,QWORD PTR [rbp-0x28]
  409bfb:	mov    rcx,QWORD PTR [rbp-0x30]
  409bff:	mov    rdi,rax
  409c02:	call   407f20 <init_node_if@@Base>
  409c07:	mov    rax,QWORD PTR [rbp-0x18]
  409c0b:	mov    QWORD PTR [rbp-0x8],rax
  409c0f:	mov    rax,QWORD PTR [rip+0x9222]        # 412e38 <__bss_start@@Base+0xcd0>
  409c16:	add    rax,0x1
  409c1a:	mov    QWORD PTR [rip+0x9217],rax        # 412e38 <__bss_start@@Base+0xcd0>
  409c21:	mov    rax,QWORD PTR [rbp-0x8]
  409c25:	add    rsp,0x40
  409c29:	pop    rbp
  409c2a:	ret    
  409c2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409c30 <read_boolean_expression@@Base>:
  409c30:	push   rbp
  409c31:	mov    rbp,rsp
  409c34:	sub    rsp,0x40
  409c38:	mov    rax,QWORD PTR [rip+0x9201]        # 412e40 <__bss_start@@Base+0xcd8>
  409c3f:	add    rax,0x1
  409c43:	mov    QWORD PTR [rip+0x91f6],rax        # 412e40 <__bss_start@@Base+0xcd8>
  409c4a:	mov    QWORD PTR [rbp-0x28],rdi
  409c4e:	mov    rax,QWORD PTR [rip+0x91f3]        # 412e48 <__bss_start@@Base+0xce0>
  409c55:	add    rax,0x1
  409c59:	mov    QWORD PTR [rip+0x91e8],rax        # 412e48 <__bss_start@@Base+0xce0>
  409c60:	mov    rax,QWORD PTR [rbp-0x28]
  409c64:	mov    QWORD PTR [rbp-0x8],rax
  409c68:	mov    QWORD PTR [rbp-0x10],0x0
  409c70:	mov    QWORD PTR [rbp-0x18],0x0
  409c78:	mov    DWORD PTR [rbp-0x20],0x0
  409c7f:	mov    rcx,QWORD PTR [rbp-0x8]
  409c83:	mov    rdi,QWORD PTR [rcx]
  409c86:	call   403370 <next@@Base>
  409c8b:	mov    QWORD PTR [rbp-0x18],rax
  409c8f:	mov    eax,0x3
  409c94:	mov    ecx,eax
  409c96:	mov    eax,0x2
  409c9b:	mov    edx,eax
  409c9d:	mov    rsi,QWORD PTR [rbp-0x18]
  409ca1:	mov    eax,DWORD PTR [rsi]
  409ca3:	cmp    eax,0x4
  409ca6:	setne  dil
  409caa:	cmp    eax,0x4
  409cad:	cmovne rcx,rdx
  409cb1:	lea    rdx,[rip+0x9188]        # 412e40 <__bss_start@@Base+0xcd8>
  409cb8:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409cbc:	add    rsi,0x1
  409cc0:	mov    QWORD PTR [rdx+rcx*8],rsi
  409cc4:	test   dil,0x1
  409cc8:	jne    409cd3 <read_boolean_expression@@Base+0xa3>
  409cce:	jmp    409e69 <read_boolean_expression@@Base+0x239>
  409cd3:	mov    DWORD PTR [rip+0x847f],0x0        # 41215c <__data_start@@Base+0x1c>
  409cdd:	mov    rax,QWORD PTR [rbp-0x18]
  409ce1:	mov    ecx,DWORD PTR [rax]
  409ce3:	mov    edx,ecx
  409ce5:	sub    edx,0x1
  409ce8:	mov    DWORD PTR [rbp-0x2c],ecx
  409ceb:	mov    DWORD PTR [rbp-0x30],edx
  409cee:	je     409d21 <read_boolean_expression@@Base+0xf1>
  409cf4:	jmp    409cf9 <read_boolean_expression@@Base+0xc9>
  409cf9:	mov    eax,DWORD PTR [rbp-0x2c]
  409cfc:	sub    eax,0x3
  409cff:	mov    DWORD PTR [rbp-0x34],eax
  409d02:	je     409dc1 <read_boolean_expression@@Base+0x191>
  409d08:	jmp    409d0d <read_boolean_expression@@Base+0xdd>
  409d0d:	mov    eax,DWORD PTR [rbp-0x2c]
  409d10:	sub    eax,0xc
  409d13:	mov    DWORD PTR [rbp-0x38],eax
  409d16:	je     409d7a <read_boolean_expression@@Base+0x14a>
  409d1c:	jmp    409e0a <read_boolean_expression@@Base+0x1da>
  409d21:	lea    rax,[rip+0x7e78]        # 411ba0 <_IO_stdin_used@@Base+0x4ba0>
  409d28:	add    rax,0x8
  409d2c:	lea    rdi,[rip+0x8429]        # 41215c <__data_start@@Base+0x1c>
  409d33:	mov    rsi,rax
  409d36:	call   40a5c0 <read_boolean_unary_expression@@Base+0x200>
  409d3b:	mov    rax,QWORD PTR [rip+0x913e]        # 412e80 <__bss_start@@Base+0xd18>
  409d42:	add    rax,0x1
  409d46:	mov    QWORD PTR [rip+0x9133],rax        # 412e80 <__bss_start@@Base+0xd18>
  409d4d:	mov    rax,QWORD PTR [rbp-0x8]
  409d51:	mov    rdi,QWORD PTR [rax]
  409d54:	mov    rsi,QWORD PTR [rbp-0x18]
  409d58:	call   403710 <push_back@@Base>
  409d5d:	mov    rdi,QWORD PTR [rbp-0x8]
  409d61:	mov    rsi,QWORD PTR [rbp-0x10]
  409d65:	mov    ecx,DWORD PTR [rbp-0x1c]
  409d68:	lea    rdx,[rbp-0x20]
  409d6c:	call   409ea0 <read_single_boolean_expression@@Base>
  409d71:	mov    QWORD PTR [rbp-0x10],rax
  409d75:	jmp    409e42 <read_boolean_expression@@Base+0x212>
  409d7a:	lea    rax,[rip+0x7e1f]        # 411ba0 <_IO_stdin_used@@Base+0x4ba0>
  409d81:	add    rax,0x10
  409d85:	lea    rdi,[rip+0x83d0]        # 41215c <__data_start@@Base+0x1c>
  409d8c:	mov    rsi,rax
  409d8f:	call   40a5c0 <read_boolean_unary_expression@@Base+0x200>
  409d94:	mov    rax,QWORD PTR [rip+0x90ed]        # 412e88 <__bss_start@@Base+0xd20>
  409d9b:	add    rax,0x1
  409d9f:	mov    QWORD PTR [rip+0x90e2],rax        # 412e88 <__bss_start@@Base+0xd20>
  409da6:	mov    rax,QWORD PTR [rbp-0x18]
  409daa:	mov    rdi,rax
  409dad:	call   408730 <get_boolean_op_value@@Base>
  409db2:	mov    DWORD PTR [rbp-0x1c],eax
  409db5:	mov    DWORD PTR [rbp-0x20],0x1
  409dbc:	jmp    409e42 <read_boolean_expression@@Base+0x212>
  409dc1:	lea    rax,[rip+0x7dd8]        # 411ba0 <_IO_stdin_used@@Base+0x4ba0>
  409dc8:	add    rax,0x18
  409dcc:	lea    rdi,[rip+0x8389]        # 41215c <__data_start@@Base+0x1c>
  409dd3:	mov    rsi,rax
  409dd6:	call   40a5c0 <read_boolean_unary_expression@@Base+0x200>
  409ddb:	mov    rax,QWORD PTR [rip+0x90ae]        # 412e90 <__bss_start@@Base+0xd28>
  409de2:	add    rax,0x1
  409de6:	mov    QWORD PTR [rip+0x90a3],rax        # 412e90 <__bss_start@@Base+0xd28>
  409ded:	mov    rdi,QWORD PTR [rbp-0x8]
  409df1:	mov    rsi,QWORD PTR [rbp-0x10]
  409df5:	mov    ecx,DWORD PTR [rbp-0x1c]
  409df8:	lea    rdx,[rbp-0x20]
  409dfc:	call   409ea0 <read_single_boolean_expression@@Base>
  409e01:	mov    QWORD PTR [rbp-0x10],rax
  409e05:	jmp    409e42 <read_boolean_expression@@Base+0x212>
  409e0a:	lea    rdi,[rip+0x834b]        # 41215c <__data_start@@Base+0x1c>
  409e11:	lea    rsi,[rip+0x7d88]        # 411ba0 <_IO_stdin_used@@Base+0x4ba0>
  409e18:	call   40a5c0 <read_boolean_unary_expression@@Base+0x200>
  409e1d:	mov    rsi,QWORD PTR [rip+0x81d4]        # 411ff8 <stderr@GLIBC_2.2.5>
  409e24:	mov    rdi,QWORD PTR [rsi]
  409e27:	lea    rsi,[rip+0x3fb7]        # 40dde5 <_IO_stdin_used@@Base+0xde5>
  409e2e:	mov    al,0x0
  409e30:	call   403170 <fprintf@plt>
  409e35:	mov    edi,0x1
  409e3a:	mov    DWORD PTR [rbp-0x3c],eax
  409e3d:	call   403240 <exit@plt>
  409e42:	mov    rax,QWORD PTR [rip+0x904f]        # 412e98 <__bss_start@@Base+0xd30>
  409e49:	add    rax,0x1
  409e4d:	mov    QWORD PTR [rip+0x9044],rax        # 412e98 <__bss_start@@Base+0xd30>
  409e54:	mov    rax,QWORD PTR [rbp-0x8]
  409e58:	mov    rdi,QWORD PTR [rax]
  409e5b:	call   403370 <next@@Base>
  409e60:	mov    QWORD PTR [rbp-0x18],rax
  409e64:	jmp    409c8f <read_boolean_expression@@Base+0x5f>
  409e69:	mov    rax,QWORD PTR [rip+0x9030]        # 412ea0 <__bss_start@@Base+0xd38>
  409e70:	add    rax,0x1
  409e74:	mov    QWORD PTR [rip+0x9025],rax        # 412ea0 <__bss_start@@Base+0xd38>
  409e7b:	mov    rax,QWORD PTR [rbp-0x18]
  409e7f:	mov    rdi,rax
  409e82:	call   4075d0 <free_token_cpar@@Base>
  409e87:	mov    rax,QWORD PTR [rbp-0x10]
  409e8b:	add    rsp,0x40
  409e8f:	pop    rbp
  409e90:	ret    
  409e91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409e9b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409ea0 <read_single_boolean_expression@@Base>:
  409ea0:	push   rbp
  409ea1:	mov    rbp,rsp
  409ea4:	sub    rsp,0x70
  409ea8:	mov    rax,QWORD PTR [rip+0x9001]        # 412eb0 <__bss_start@@Base+0xd48>
  409eaf:	add    rax,0x1
  409eb3:	mov    QWORD PTR [rip+0x8ff6],rax        # 412eb0 <__bss_start@@Base+0xd48>
  409eba:	mov    QWORD PTR [rbp-0x50],rdx
  409ebe:	mov    QWORD PTR [rbp-0x58],rsi
  409ec2:	mov    QWORD PTR [rbp-0x60],rdi
  409ec6:	mov    DWORD PTR [rbp-0x64],ecx
  409ec9:	mov    eax,0x2
  409ece:	mov    ecx,eax
  409ed0:	mov    eax,0x1
  409ed5:	mov    edx,eax
  409ed7:	mov    rsi,QWORD PTR [rbp-0x60]
  409edb:	mov    QWORD PTR [rbp-0x8],rsi
  409edf:	mov    rdi,QWORD PTR [rbp-0x58]
  409ee3:	mov    QWORD PTR [rbp-0x10],rdi
  409ee7:	mov    r8,QWORD PTR [rbp-0x50]
  409eeb:	mov    QWORD PTR [rbp-0x18],r8
  409eef:	mov    eax,DWORD PTR [rbp-0x64]
  409ef2:	mov    DWORD PTR [rbp-0x1c],eax
  409ef5:	mov    QWORD PTR [rbp-0x28],0x0
  409efd:	mov    QWORD PTR [rbp-0x30],0x0
  409f05:	mov    QWORD PTR [rbp-0x38],0x0
  409f0d:	mov    QWORD PTR [rbp-0x40],0x0
  409f15:	mov    QWORD PTR [rbp-0x48],0x0
  409f1d:	mov    r9,QWORD PTR [rbp-0x10]
  409f21:	cmp    r9,0x0
  409f25:	sete   r10b
  409f29:	cmp    r9,0x0
  409f2d:	cmove  rcx,rdx
  409f31:	lea    rdx,[rip+0x8f78]        # 412eb0 <__bss_start@@Base+0xd48>
  409f38:	mov    r9,QWORD PTR [rdx+rcx*8]
  409f3c:	add    r9,0x1
  409f40:	mov    QWORD PTR [rdx+rcx*8],r9
  409f44:	test   r10b,0x1
  409f48:	jne    409f53 <read_single_boolean_expression@@Base+0xb3>
  409f4e:	jmp    409f77 <read_single_boolean_expression@@Base+0xd7>
  409f53:	mov    rax,QWORD PTR [rip+0x8f6e]        # 412ec8 <__bss_start@@Base+0xd60>
  409f5a:	add    rax,0x1
  409f5e:	mov    QWORD PTR [rip+0x8f63],rax        # 412ec8 <__bss_start@@Base+0xd60>
  409f65:	mov    rdi,QWORD PTR [rbp-0x8]
  409f69:	call   40a080 <read_boolean_binary_expression@@Base>
  409f6e:	mov    QWORD PTR [rbp-0x30],rax
  409f72:	jmp    40a05e <read_single_boolean_expression@@Base+0x1be>
  409f77:	mov    eax,0x5
  409f7c:	mov    ecx,eax
  409f7e:	mov    eax,0x4
  409f83:	mov    edx,eax
  409f85:	mov    rsi,QWORD PTR [rbp-0x18]
  409f89:	mov    eax,DWORD PTR [rsi]
  409f8b:	cmp    eax,0x0
  409f8e:	setne  dil
  409f92:	cmp    eax,0x0
  409f95:	cmovne rcx,rdx
  409f99:	lea    rdx,[rip+0x8f10]        # 412eb0 <__bss_start@@Base+0xd48>
  409fa0:	mov    rsi,QWORD PTR [rdx+rcx*8]
  409fa4:	add    rsi,0x1
  409fa8:	mov    QWORD PTR [rdx+rcx*8],rsi
  409fac:	test   dil,0x1
  409fb0:	jne    409fbb <read_single_boolean_expression@@Base+0x11b>
  409fb6:	jmp    40a020 <read_single_boolean_expression@@Base+0x180>
  409fbb:	mov    rax,QWORD PTR [rip+0x8f1e]        # 412ee0 <__bss_start@@Base+0xd78>
  409fc2:	add    rax,0x1
  409fc6:	mov    QWORD PTR [rip+0x8f13],rax        # 412ee0 <__bss_start@@Base+0xd78>
  409fcd:	mov    rdi,QWORD PTR [rbp-0x8]
  409fd1:	call   40a080 <read_boolean_binary_expression@@Base>
  409fd6:	mov    ecx,0x28
  409fdb:	mov    edi,ecx
  409fdd:	mov    QWORD PTR [rbp-0x38],rax
  409fe1:	mov    rax,QWORD PTR [rbp-0x30]
  409fe5:	mov    QWORD PTR [rbp-0x40],rax
  409fe9:	mov    rax,QWORD PTR [rbp-0x38]
  409fed:	mov    QWORD PTR [rbp-0x48],rax
  409ff1:	call   4031c0 <malloc@plt>
  409ff6:	mov    QWORD PTR [rbp-0x30],rax
  409ffa:	mov    rax,QWORD PTR [rbp-0x30]
  409ffe:	mov    esi,DWORD PTR [rbp-0x1c]
  40a001:	mov    rdx,QWORD PTR [rbp-0x40]
  40a005:	mov    rcx,QWORD PTR [rbp-0x48]
  40a009:	mov    rdi,rax
  40a00c:	call   407fc0 <init_node_boolean_operator@@Base>
  40a011:	mov    rax,QWORD PTR [rbp-0x18]
  40a015:	mov    DWORD PTR [rax],0x0
  40a01b:	jmp    40a04c <read_single_boolean_expression@@Base+0x1ac>
  40a020:	mov    rax,QWORD PTR [rip+0x7fd1]        # 411ff8 <stderr@GLIBC_2.2.5>
  40a027:	mov    rdi,QWORD PTR [rax]
  40a02a:	mov    rax,QWORD PTR [rbp-0x28]
  40a02e:	mov    edx,DWORD PTR [rax+0x4]
  40a031:	lea    rsi,[rip+0x3dcf]        # 40de07 <_IO_stdin_used@@Base+0xe07>
  40a038:	mov    al,0x0
  40a03a:	call   403170 <fprintf@plt>
  40a03f:	mov    edi,0x1
  40a044:	mov    DWORD PTR [rbp-0x68],eax
  40a047:	call   403240 <exit@plt>
  40a04c:	mov    rax,QWORD PTR [rip+0x8e95]        # 412ee8 <__bss_start@@Base+0xd80>
  40a053:	add    rax,0x1
  40a057:	mov    QWORD PTR [rip+0x8e8a],rax        # 412ee8 <__bss_start@@Base+0xd80>
  40a05e:	mov    rax,QWORD PTR [rip+0x8e8b]        # 412ef0 <__bss_start@@Base+0xd88>
  40a065:	add    rax,0x1
  40a069:	mov    QWORD PTR [rip+0x8e80],rax        # 412ef0 <__bss_start@@Base+0xd88>
  40a070:	mov    rax,QWORD PTR [rbp-0x30]
  40a074:	add    rsp,0x70
  40a078:	pop    rbp
  40a079:	ret    
  40a07a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a080 <read_boolean_binary_expression@@Base>:
  40a080:	push   rbp
  40a081:	mov    rbp,rsp
  40a084:	sub    rsp,0x60
  40a088:	mov    rax,QWORD PTR [rip+0x8e71]        # 412f00 <__bss_start@@Base+0xd98>
  40a08f:	add    rax,0x1
  40a093:	mov    QWORD PTR [rip+0x8e66],rax        # 412f00 <__bss_start@@Base+0xd98>
  40a09a:	mov    QWORD PTR [rbp-0x58],rdi
  40a09e:	mov    rax,QWORD PTR [rbp-0x58]
  40a0a2:	mov    QWORD PTR [rbp-0x10],rax
  40a0a6:	mov    QWORD PTR [rbp-0x18],0x0
  40a0ae:	mov    QWORD PTR [rbp-0x20],0x0
  40a0b6:	mov    QWORD PTR [rbp-0x28],0x0
  40a0be:	mov    QWORD PTR [rbp-0x30],0x0
  40a0c6:	mov    QWORD PTR [rbp-0x38],0x0
  40a0ce:	mov    QWORD PTR [rbp-0x40],0x0
  40a0d6:	mov    QWORD PTR [rbp-0x48],0x0
  40a0de:	mov    rcx,QWORD PTR [rbp-0x10]
  40a0e2:	mov    rdi,QWORD PTR [rcx]
  40a0e5:	call   403370 <next@@Base>
  40a0ea:	mov    edx,0x2
  40a0ef:	mov    ecx,edx
  40a0f1:	mov    edx,0x1
  40a0f6:	mov    edi,edx
  40a0f8:	mov    QWORD PTR [rbp-0x38],rax
  40a0fc:	mov    rax,QWORD PTR [rbp-0x38]
  40a100:	mov    edx,DWORD PTR [rax]
  40a102:	cmp    edx,0x1
  40a105:	setne  sil
  40a109:	cmp    edx,0x1
  40a10c:	cmovne rcx,rdi
  40a110:	lea    rax,[rip+0x8de9]        # 412f00 <__bss_start@@Base+0xd98>
  40a117:	mov    rdi,QWORD PTR [rax+rcx*8]
  40a11b:	add    rdi,0x1
  40a11f:	mov    QWORD PTR [rax+rcx*8],rdi
  40a123:	test   sil,0x1
  40a127:	jne    40a132 <read_boolean_binary_expression@@Base+0xb2>
  40a12d:	jmp    40a1c9 <read_boolean_binary_expression@@Base+0x149>
  40a132:	mov    eax,0x4
  40a137:	mov    ecx,eax
  40a139:	mov    eax,0x3
  40a13e:	mov    edx,eax
  40a140:	mov    rsi,QWORD PTR [rbp-0x38]
  40a144:	mov    eax,DWORD PTR [rsi]
  40a146:	cmp    eax,0xc
  40a149:	sete   dil
  40a14d:	cmp    eax,0xc
  40a150:	cmove  rcx,rdx
  40a154:	lea    rdx,[rip+0x8da5]        # 412f00 <__bss_start@@Base+0xd98>
  40a15b:	mov    rsi,QWORD PTR [rdx+rcx*8]
  40a15f:	add    rsi,0x1
  40a163:	mov    QWORD PTR [rdx+rcx*8],rsi
  40a167:	test   dil,0x1
  40a16b:	jne    40a176 <read_boolean_binary_expression@@Base+0xf6>
  40a171:	jmp    40a1aa <read_boolean_binary_expression@@Base+0x12a>
  40a176:	mov    rax,QWORD PTR [rip+0x8dab]        # 412f28 <__bss_start@@Base+0xdc0>
  40a17d:	add    rax,0x1
  40a181:	mov    QWORD PTR [rip+0x8da0],rax        # 412f28 <__bss_start@@Base+0xdc0>
  40a188:	mov    rax,QWORD PTR [rbp-0x10]
  40a18c:	mov    rdi,QWORD PTR [rax]
  40a18f:	mov    rsi,QWORD PTR [rbp-0x38]
  40a193:	call   403710 <push_back@@Base>
  40a198:	mov    rdi,QWORD PTR [rbp-0x10]
  40a19c:	call   40a3c0 <read_boolean_unary_expression@@Base>
  40a1a1:	mov    QWORD PTR [rbp-0x8],rax
  40a1a5:	jmp    40a395 <read_boolean_binary_expression@@Base+0x315>
  40a1aa:	mov    rax,QWORD PTR [rip+0x8d7f]        # 412f30 <__bss_start@@Base+0xdc8>
  40a1b1:	add    rax,0x1
  40a1b5:	mov    QWORD PTR [rip+0x8d74],rax        # 412f30 <__bss_start@@Base+0xdc8>
  40a1bc:	mov    QWORD PTR [rbp-0x8],0x0
  40a1c4:	jmp    40a395 <read_boolean_binary_expression@@Base+0x315>
  40a1c9:	mov    eax,0x18
  40a1ce:	mov    edi,eax
  40a1d0:	mov    rcx,QWORD PTR [rbp-0x38]
  40a1d4:	mov    QWORD PTR [rbp-0x40],rcx
  40a1d8:	call   4031c0 <malloc@plt>
  40a1dd:	mov    QWORD PTR [rbp-0x20],rax
  40a1e1:	mov    rax,QWORD PTR [rbp-0x20]
  40a1e5:	mov    rcx,QWORD PTR [rbp-0x40]
  40a1e9:	mov    esi,DWORD PTR [rcx+0x4]
  40a1ec:	mov    rdi,rax
  40a1ef:	call   407dd0 <init_node_int@@Base>
  40a1f4:	mov    rdi,QWORD PTR [rbp-0x40]
  40a1f8:	call   4074e0 <free_token_int_value@@Base>
  40a1fd:	mov    rax,QWORD PTR [rbp-0x20]
  40a201:	mov    QWORD PTR [rbp-0x28],rax
  40a205:	mov    rax,QWORD PTR [rbp-0x10]
  40a209:	mov    rdi,QWORD PTR [rax]
  40a20c:	call   403370 <next@@Base>
  40a211:	mov    esi,0x8
  40a216:	mov    ecx,esi
  40a218:	mov    esi,0x7
  40a21d:	mov    edi,esi
  40a21f:	mov    QWORD PTR [rbp-0x38],rax
  40a223:	mov    rax,QWORD PTR [rbp-0x38]
  40a227:	mov    esi,DWORD PTR [rax]
  40a229:	cmp    esi,0xc
  40a22c:	setne  dl
  40a22f:	cmp    esi,0xc
  40a232:	cmovne rcx,rdi
  40a236:	lea    rax,[rip+0x8cc3]        # 412f00 <__bss_start@@Base+0xd98>
  40a23d:	mov    rdi,QWORD PTR [rax+rcx*8]
  40a241:	add    rdi,0x1
  40a245:	mov    QWORD PTR [rax+rcx*8],rdi
  40a249:	test   dl,0x1
  40a24c:	jne    40a257 <read_boolean_binary_expression@@Base+0x1d7>
  40a252:	jmp    40a27f <read_boolean_binary_expression@@Base+0x1ff>
  40a257:	mov    rax,QWORD PTR [rip+0x8cea]        # 412f48 <__bss_start@@Base+0xde0>
  40a25e:	add    rax,0x1
  40a262:	mov    QWORD PTR [rip+0x8cdf],rax        # 412f48 <__bss_start@@Base+0xde0>
  40a269:	mov    rdi,QWORD PTR [rbp-0x28]
  40a26d:	call   408060 <free_node@@Base>
  40a272:	mov    QWORD PTR [rbp-0x8],0x0
  40a27a:	jmp    40a395 <read_boolean_binary_expression@@Base+0x315>
  40a27f:	mov    rax,QWORD PTR [rbp-0x38]
  40a283:	mov    QWORD PTR [rbp-0x48],rax
  40a287:	mov    rdi,QWORD PTR [rbp-0x48]
  40a28b:	call   408730 <get_boolean_op_value@@Base>
  40a290:	mov    DWORD PTR [rbp-0x4c],eax
  40a293:	mov    rdi,QWORD PTR [rbp-0x48]
  40a297:	call   407850 <free_token_boolean_op@@Base>
  40a29c:	mov    rdi,QWORD PTR [rbp-0x10]
  40a2a0:	mov    rdi,QWORD PTR [rdi]
  40a2a3:	call   403370 <next@@Base>
  40a2a8:	mov    ecx,0xb
  40a2ad:	mov    edi,ecx
  40a2af:	mov    ecx,0xa
  40a2b4:	mov    edx,ecx
  40a2b6:	mov    QWORD PTR [rbp-0x38],rax
  40a2ba:	mov    rax,QWORD PTR [rbp-0x38]
  40a2be:	mov    ecx,DWORD PTR [rax]
  40a2c0:	cmp    ecx,0x1
  40a2c3:	setne  sil
  40a2c7:	cmp    ecx,0x1
  40a2ca:	cmovne rdi,rdx
  40a2ce:	lea    rax,[rip+0x8c2b]        # 412f00 <__bss_start@@Base+0xd98>
  40a2d5:	mov    rdx,QWORD PTR [rax+rdi*8]
  40a2d9:	add    rdx,0x1
  40a2dd:	mov    QWORD PTR [rax+rdi*8],rdx
  40a2e1:	test   sil,0x1
  40a2e5:	jne    40a2f0 <read_boolean_binary_expression@@Base+0x270>
  40a2eb:	jmp    40a318 <read_boolean_binary_expression@@Base+0x298>
  40a2f0:	mov    rax,QWORD PTR [rip+0x8c69]        # 412f60 <__bss_start@@Base+0xdf8>
  40a2f7:	add    rax,0x1
  40a2fb:	mov    QWORD PTR [rip+0x8c5e],rax        # 412f60 <__bss_start@@Base+0xdf8>
  40a302:	mov    rdi,QWORD PTR [rbp-0x28]
  40a306:	call   408060 <free_node@@Base>
  40a30b:	mov    QWORD PTR [rbp-0x8],0x0
  40a313:	jmp    40a395 <read_boolean_binary_expression@@Base+0x315>
  40a318:	mov    eax,0x18
  40a31d:	mov    edi,eax
  40a31f:	mov    rcx,QWORD PTR [rip+0x8c42]        # 412f68 <__bss_start@@Base+0xe00>
  40a326:	add    rcx,0x1
  40a32a:	mov    QWORD PTR [rip+0x8c37],rcx        # 412f68 <__bss_start@@Base+0xe00>
  40a331:	mov    rcx,QWORD PTR [rbp-0x38]
  40a335:	mov    QWORD PTR [rbp-0x40],rcx
  40a339:	call   4031c0 <malloc@plt>
  40a33e:	mov    QWORD PTR [rbp-0x20],rax
  40a342:	mov    rax,QWORD PTR [rbp-0x20]
  40a346:	mov    rcx,QWORD PTR [rbp-0x40]
  40a34a:	mov    esi,DWORD PTR [rcx+0x4]
  40a34d:	mov    rdi,rax
  40a350:	call   407dd0 <init_node_int@@Base>
  40a355:	mov    rdi,QWORD PTR [rbp-0x40]
  40a359:	call   4074e0 <free_token_int_value@@Base>
  40a35e:	mov    esi,0x28
  40a363:	mov    edi,esi
  40a365:	mov    rax,QWORD PTR [rbp-0x20]
  40a369:	mov    QWORD PTR [rbp-0x30],rax
  40a36d:	call   4031c0 <malloc@plt>
  40a372:	mov    QWORD PTR [rbp-0x18],rax
  40a376:	mov    rax,QWORD PTR [rbp-0x18]
  40a37a:	mov    esi,DWORD PTR [rbp-0x4c]
  40a37d:	mov    rdx,QWORD PTR [rbp-0x28]
  40a381:	mov    rcx,QWORD PTR [rbp-0x30]
  40a385:	mov    rdi,rax
  40a388:	call   407fc0 <init_node_boolean_operator@@Base>
  40a38d:	mov    rax,QWORD PTR [rbp-0x18]
  40a391:	mov    QWORD PTR [rbp-0x8],rax
  40a395:	mov    rax,QWORD PTR [rip+0x8bd4]        # 412f70 <__bss_start@@Base+0xe08>
  40a39c:	add    rax,0x1
  40a3a0:	mov    QWORD PTR [rip+0x8bc9],rax        # 412f70 <__bss_start@@Base+0xe08>
  40a3a7:	mov    rax,QWORD PTR [rbp-0x8]
  40a3ab:	add    rsp,0x60
  40a3af:	pop    rbp
  40a3b0:	ret    
  40a3b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040a3c0 <read_boolean_unary_expression@@Base>:
  40a3c0:	push   rbp
  40a3c1:	mov    rbp,rsp
  40a3c4:	sub    rsp,0x50
  40a3c8:	mov    rax,QWORD PTR [rip+0x8bb1]        # 412f80 <__bss_start@@Base+0xe18>
  40a3cf:	add    rax,0x1
  40a3d3:	mov    QWORD PTR [rip+0x8ba6],rax        # 412f80 <__bss_start@@Base+0xe18>
  40a3da:	mov    QWORD PTR [rbp-0x48],rdi
  40a3de:	mov    eax,0x28
  40a3e3:	mov    edi,eax
  40a3e5:	mov    rcx,QWORD PTR [rbp-0x48]
  40a3e9:	mov    QWORD PTR [rbp-0x10],rcx
  40a3ed:	mov    QWORD PTR [rbp-0x18],0x0
  40a3f5:	mov    QWORD PTR [rbp-0x20],0x0
  40a3fd:	mov    QWORD PTR [rbp-0x28],0x0
  40a405:	mov    QWORD PTR [rbp-0x30],0x0
  40a40d:	mov    QWORD PTR [rbp-0x38],0x0
  40a415:	call   4031c0 <malloc@plt>
  40a41a:	mov    QWORD PTR [rbp-0x18],rax
  40a41e:	mov    rax,QWORD PTR [rbp-0x10]
  40a422:	mov    rdi,QWORD PTR [rax]
  40a425:	call   403370 <next@@Base>
  40a42a:	mov    edx,0x2
  40a42f:	mov    ecx,edx
  40a431:	mov    edx,0x1
  40a436:	mov    edi,edx
  40a438:	mov    QWORD PTR [rbp-0x30],rax
  40a43c:	mov    rax,QWORD PTR [rbp-0x30]
  40a440:	mov    edx,DWORD PTR [rax]
  40a442:	cmp    edx,0xc
  40a445:	setne  sil
  40a449:	cmp    edx,0xc
  40a44c:	cmovne rcx,rdi
  40a450:	lea    rax,[rip+0x8b29]        # 412f80 <__bss_start@@Base+0xe18>
  40a457:	mov    rdi,QWORD PTR [rax+rcx*8]
  40a45b:	add    rdi,0x1
  40a45f:	mov    QWORD PTR [rax+rcx*8],rdi
  40a463:	test   sil,0x1
  40a467:	jne    40a472 <read_boolean_unary_expression@@Base+0xb2>
  40a46d:	jmp    40a49d <read_boolean_unary_expression@@Base+0xdd>
  40a472:	mov    rax,QWORD PTR [rip+0x8b1f]        # 412f98 <__bss_start@@Base+0xe30>
  40a479:	add    rax,0x1
  40a47d:	mov    QWORD PTR [rip+0x8b14],rax        # 412f98 <__bss_start@@Base+0xe30>
  40a484:	mov    rax,QWORD PTR [rbp-0x18]
  40a488:	mov    rdi,rax
  40a48b:	call   408660 <free_node_boolean_operator@@Base>
  40a490:	mov    QWORD PTR [rbp-0x8],0x0
  40a498:	jmp    40a5a1 <read_boolean_unary_expression@@Base+0x1e1>
  40a49d:	mov    rax,QWORD PTR [rbp-0x30]
  40a4a1:	mov    rdi,rax
  40a4a4:	call   408730 <get_boolean_op_value@@Base>
  40a4a9:	mov    DWORD PTR [rbp-0x3c],eax
  40a4ac:	mov    rdi,QWORD PTR [rbp-0x30]
  40a4b0:	call   407850 <free_token_boolean_op@@Base>
  40a4b5:	mov    rdi,QWORD PTR [rbp-0x10]
  40a4b9:	mov    rdi,QWORD PTR [rdi]
  40a4bc:	call   403370 <next@@Base>
  40a4c1:	mov    ecx,0x5
  40a4c6:	mov    edi,ecx
  40a4c8:	mov    ecx,0x4
  40a4cd:	mov    edx,ecx
  40a4cf:	mov    QWORD PTR [rbp-0x30],rax
  40a4d3:	mov    rax,QWORD PTR [rbp-0x30]
  40a4d7:	mov    ecx,DWORD PTR [rax]
  40a4d9:	cmp    ecx,0x1
  40a4dc:	setne  sil
  40a4e0:	cmp    ecx,0x1
  40a4e3:	cmovne rdi,rdx
  40a4e7:	lea    rax,[rip+0x8a92]        # 412f80 <__bss_start@@Base+0xe18>
  40a4ee:	mov    rdx,QWORD PTR [rax+rdi*8]
  40a4f2:	add    rdx,0x1
  40a4f6:	mov    QWORD PTR [rax+rdi*8],rdx
  40a4fa:	test   sil,0x1
  40a4fe:	jne    40a509 <read_boolean_unary_expression@@Base+0x149>
  40a504:	jmp    40a534 <read_boolean_unary_expression@@Base+0x174>
  40a509:	mov    rax,QWORD PTR [rip+0x8aa0]        # 412fb0 <__bss_start@@Base+0xe48>
  40a510:	add    rax,0x1
  40a514:	mov    QWORD PTR [rip+0x8a95],rax        # 412fb0 <__bss_start@@Base+0xe48>
  40a51b:	mov    rax,QWORD PTR [rbp-0x18]
  40a51f:	mov    rdi,rax
  40a522:	call   408660 <free_node_boolean_operator@@Base>
  40a527:	mov    QWORD PTR [rbp-0x8],0x0
  40a52f:	jmp    40a5a1 <read_boolean_unary_expression@@Base+0x1e1>
  40a534:	mov    eax,0x18
  40a539:	mov    edi,eax
  40a53b:	mov    rcx,QWORD PTR [rip+0x8a76]        # 412fb8 <__bss_start@@Base+0xe50>
  40a542:	add    rcx,0x1
  40a546:	mov    QWORD PTR [rip+0x8a6b],rcx        # 412fb8 <__bss_start@@Base+0xe50>
  40a54d:	mov    rcx,QWORD PTR [rbp-0x30]
  40a551:	mov    QWORD PTR [rbp-0x38],rcx
  40a555:	call   4031c0 <malloc@plt>
  40a55a:	mov    QWORD PTR [rbp-0x20],rax
  40a55e:	mov    rax,QWORD PTR [rbp-0x20]
  40a562:	mov    rcx,QWORD PTR [rbp-0x38]
  40a566:	mov    esi,DWORD PTR [rcx+0x4]
  40a569:	mov    rdi,rax
  40a56c:	call   407dd0 <init_node_int@@Base>
  40a571:	mov    rdi,QWORD PTR [rbp-0x38]
  40a575:	call   4074e0 <free_token_int_value@@Base>
  40a57a:	xor    esi,esi
  40a57c:	mov    ecx,esi
  40a57e:	mov    rax,QWORD PTR [rbp-0x20]
  40a582:	mov    QWORD PTR [rbp-0x28],rax
  40a586:	mov    rax,QWORD PTR [rbp-0x18]
  40a58a:	mov    esi,DWORD PTR [rbp-0x3c]
  40a58d:	mov    rdx,QWORD PTR [rbp-0x28]
  40a591:	mov    rdi,rax
  40a594:	call   407fc0 <init_node_boolean_operator@@Base>
  40a599:	mov    rax,QWORD PTR [rbp-0x18]
  40a59d:	mov    QWORD PTR [rbp-0x8],rax
  40a5a1:	mov    rax,QWORD PTR [rip+0x8a18]        # 412fc0 <__bss_start@@Base+0xe58>
  40a5a8:	add    rax,0x1
  40a5ac:	mov    QWORD PTR [rip+0x8a0d],rax        # 412fc0 <__bss_start@@Base+0xe58>
  40a5b3:	mov    rax,QWORD PTR [rbp-0x8]
  40a5b7:	add    rsp,0x50
  40a5bb:	pop    rbp
  40a5bc:	ret    
  40a5bd:	nop    DWORD PTR [rax]
  40a5c0:	mov    eax,DWORD PTR [rdi]
  40a5c2:	cmp    eax,0xffffffff
  40a5c5:	mov    QWORD PTR [rsp-0x8],rsi
  40a5ca:	mov    DWORD PTR [rsp-0xc],eax
  40a5ce:	je     40a603 <read_boolean_unary_expression@@Base+0x243>
  40a5d4:	mov    eax,DWORD PTR [rsp-0xc]
  40a5d8:	mov    ecx,eax
  40a5da:	mov    edx,ecx
  40a5dc:	mov    rsi,QWORD PTR [rsp-0x8]
  40a5e1:	mov    rdx,QWORD PTR [rsi+rdx*8]
  40a5e5:	cmp    rdx,0x0
  40a5e9:	mov    QWORD PTR [rsp-0x18],rdx
  40a5ee:	je     40a603 <read_boolean_unary_expression@@Base+0x243>
  40a5f4:	mov    rax,QWORD PTR [rsp-0x18]
  40a5f9:	mov    rcx,QWORD PTR [rax]
  40a5fc:	add    rcx,0x1
  40a600:	mov    QWORD PTR [rax],rcx
  40a603:	ret    
  40a604:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a60e:	xchg   ax,ax
  40a610:	sub    rsp,0x38
  40a614:	xor    eax,eax
  40a616:	mov    DWORD PTR [rsp+0x34],eax
  40a61a:	jmp    40a61f <read_boolean_unary_expression@@Base+0x25f>
  40a61f:	mov    eax,DWORD PTR [rsp+0x34]
  40a623:	movsxd rcx,eax
  40a626:	imul   rcx,rcx,0x30
  40a62a:	lea    rdx,[rip+0x779f]        # 411dd0 <_IO_stdin_used@@Base+0x4dd0>
  40a631:	add    rdx,rcx
  40a634:	mov    rdi,QWORD PTR [rdx]
  40a637:	mov    rsi,QWORD PTR [rdx+0x8]
  40a63b:	mov    r8d,DWORD PTR [rdx+0x10]
  40a63f:	mov    QWORD PTR [rsp+0x28],rdx
  40a644:	mov    edx,r8d
  40a647:	mov    DWORD PTR [rsp+0x24],eax
  40a64b:	call   40abd0 <read_boolean_unary_expression@@Base+0x810>
  40a650:	xor    eax,eax
  40a652:	mov    rcx,QWORD PTR [rsp+0x28]
  40a657:	mov    edx,DWORD PTR [rcx+0x18]
  40a65a:	mov    rsi,QWORD PTR [rcx+0x20]
  40a65e:	mov    rdi,QWORD PTR [rcx+0x28]
  40a662:	cmp    eax,edx
  40a664:	mov    QWORD PTR [rsp+0x18],rdi
  40a669:	mov    DWORD PTR [rsp+0x14],edx
  40a66d:	mov    QWORD PTR [rsp+0x8],rsi
  40a672:	mov    DWORD PTR [rsp+0x4],eax
  40a676:	jge    40a6e7 <read_boolean_unary_expression@@Base+0x327>
  40a67c:	mov    eax,DWORD PTR [rsp+0x4]
  40a680:	movsxd rcx,eax
  40a683:	shl    rcx,0x5
  40a687:	mov    rdx,QWORD PTR [rsp+0x8]
  40a68c:	add    rdx,rcx
  40a68f:	mov    edi,DWORD PTR [rdx]
  40a691:	mov    rsi,QWORD PTR [rdx+0x8]
  40a695:	mov    r8d,DWORD PTR [rdx+0x10]
  40a699:	mov    r9b,BYTE PTR [rdx+0x14]
  40a69d:	mov    r10d,DWORD PTR [rdx+0x18]
  40a6a1:	mov    edx,r8d
  40a6a4:	movzx  ecx,r9b
  40a6a8:	mov    r8d,r10d
  40a6ab:	mov    DWORD PTR [rsp],eax
  40a6ae:	call   40b020 <read_boolean_unary_expression@@Base+0xc60>
  40a6b3:	mov    eax,DWORD PTR [rsp]
  40a6b6:	movsxd rsi,eax
  40a6b9:	shl    rsi,0x4
  40a6bd:	mov    r11,QWORD PTR [rsp+0x18]
  40a6c2:	add    r11,rsi
  40a6c5:	mov    edi,DWORD PTR [r11]
  40a6c8:	mov    rsi,QWORD PTR [r11+0x8]
  40a6cc:	call   40b450 <read_boolean_unary_expression@@Base+0x1090>
  40a6d1:	mov    eax,DWORD PTR [rsp]
  40a6d4:	add    eax,0x1
  40a6d7:	mov    ecx,DWORD PTR [rsp+0x14]
  40a6db:	cmp    eax,ecx
  40a6dd:	mov    DWORD PTR [rsp+0x4],eax
  40a6e1:	jl     40a67c <read_boolean_unary_expression@@Base+0x2bc>
  40a6e7:	call   40b870 <read_boolean_unary_expression@@Base+0x14b0>
  40a6ec:	call   40c010 <read_boolean_unary_expression@@Base+0x1c50>
  40a6f1:	mov    eax,DWORD PTR [rsp+0x24]
  40a6f5:	add    eax,0x1
  40a6f8:	cmp    eax,0x1
  40a6fb:	mov    DWORD PTR [rsp+0x34],eax
  40a6ff:	jl     40a61f <read_boolean_unary_expression@@Base+0x25f>
  40a705:	add    rsp,0x38
  40a709:	ret    
  40a70a:	nop    WORD PTR [rax+rax*1+0x0]
  40a710:	push   rax
  40a711:	call   40a610 <read_boolean_unary_expression@@Base+0x250>
  40a716:	mov    QWORD PTR [rip+0x8537],0x0        # 412c58 <__bss_start@@Base+0xaf0>
  40a721:	mov    QWORD PTR [rip+0x8524],0x0        # 412c50 <__bss_start@@Base+0xae8>
  40a72c:	mov    QWORD PTR [rip+0x8531],0x0        # 412c68 <__bss_start@@Base+0xb00>
  40a737:	mov    QWORD PTR [rip+0x851e],0x0        # 412c60 <__bss_start@@Base+0xaf8>
  40a742:	mov    QWORD PTR [rip+0x852b],0x0        # 412c78 <__bss_start@@Base+0xb10>
  40a74d:	mov    QWORD PTR [rip+0x8518],0x0        # 412c70 <__bss_start@@Base+0xb08>
  40a758:	mov    QWORD PTR [rip+0x858d],0x0        # 412cf0 <__bss_start@@Base+0xb88>
  40a763:	mov    QWORD PTR [rip+0x857a],0x0        # 412ce8 <__bss_start@@Base+0xb80>
  40a76e:	mov    QWORD PTR [rip+0x8567],0x0        # 412ce0 <__bss_start@@Base+0xb78>
  40a779:	mov    QWORD PTR [rip+0x8554],0x0        # 412cd8 <__bss_start@@Base+0xb70>
  40a784:	mov    QWORD PTR [rip+0x8541],0x0        # 412cd0 <__bss_start@@Base+0xb68>
  40a78f:	mov    QWORD PTR [rip+0x852e],0x0        # 412cc8 <__bss_start@@Base+0xb60>
  40a79a:	mov    QWORD PTR [rip+0x851b],0x0        # 412cc0 <__bss_start@@Base+0xb58>
  40a7a5:	mov    QWORD PTR [rip+0x8508],0x0        # 412cb8 <__bss_start@@Base+0xb50>
  40a7b0:	mov    QWORD PTR [rip+0x84f5],0x0        # 412cb0 <__bss_start@@Base+0xb48>
  40a7bb:	mov    QWORD PTR [rip+0x84e2],0x0        # 412ca8 <__bss_start@@Base+0xb40>
  40a7c6:	mov    QWORD PTR [rip+0x84cf],0x0        # 412ca0 <__bss_start@@Base+0xb38>
  40a7d1:	mov    QWORD PTR [rip+0x84bc],0x0        # 412c98 <__bss_start@@Base+0xb30>
  40a7dc:	mov    QWORD PTR [rip+0x84a9],0x0        # 412c90 <__bss_start@@Base+0xb28>
  40a7e7:	mov    QWORD PTR [rip+0x8496],0x0        # 412c88 <__bss_start@@Base+0xb20>
  40a7f2:	mov    QWORD PTR [rip+0x8483],0x0        # 412c80 <__bss_start@@Base+0xb18>
  40a7fd:	mov    QWORD PTR [rip+0x8590],0x0        # 412d98 <__bss_start@@Base+0xc30>
  40a808:	mov    QWORD PTR [rip+0x857d],0x0        # 412d90 <__bss_start@@Base+0xc28>
  40a813:	mov    QWORD PTR [rip+0x856a],0x0        # 412d88 <__bss_start@@Base+0xc20>
  40a81e:	mov    QWORD PTR [rip+0x8557],0x0        # 412d80 <__bss_start@@Base+0xc18>
  40a829:	mov    QWORD PTR [rip+0x8544],0x0        # 412d78 <__bss_start@@Base+0xc10>
  40a834:	mov    QWORD PTR [rip+0x8531],0x0        # 412d70 <__bss_start@@Base+0xc08>
  40a83f:	mov    QWORD PTR [rip+0x851e],0x0        # 412d68 <__bss_start@@Base+0xc00>
  40a84a:	mov    QWORD PTR [rip+0x850b],0x0        # 412d60 <__bss_start@@Base+0xbf8>
  40a855:	mov    QWORD PTR [rip+0x84f8],0x0        # 412d58 <__bss_start@@Base+0xbf0>
  40a860:	mov    QWORD PTR [rip+0x84e5],0x0        # 412d50 <__bss_start@@Base+0xbe8>
  40a86b:	mov    QWORD PTR [rip+0x84d2],0x0        # 412d48 <__bss_start@@Base+0xbe0>
  40a876:	mov    QWORD PTR [rip+0x84bf],0x0        # 412d40 <__bss_start@@Base+0xbd8>
  40a881:	mov    QWORD PTR [rip+0x84ac],0x0        # 412d38 <__bss_start@@Base+0xbd0>
  40a88c:	mov    QWORD PTR [rip+0x8499],0x0        # 412d30 <__bss_start@@Base+0xbc8>
  40a897:	mov    QWORD PTR [rip+0x8486],0x0        # 412d28 <__bss_start@@Base+0xbc0>
  40a8a2:	mov    QWORD PTR [rip+0x8473],0x0        # 412d20 <__bss_start@@Base+0xbb8>
  40a8ad:	mov    QWORD PTR [rip+0x8460],0x0        # 412d18 <__bss_start@@Base+0xbb0>
  40a8b8:	mov    QWORD PTR [rip+0x844d],0x0        # 412d10 <__bss_start@@Base+0xba8>
  40a8c3:	mov    QWORD PTR [rip+0x843a],0x0        # 412d08 <__bss_start@@Base+0xba0>
  40a8ce:	mov    QWORD PTR [rip+0x8427],0x0        # 412d00 <__bss_start@@Base+0xb98>
  40a8d9:	mov    QWORD PTR [rip+0x84fc],0x0        # 412de0 <__bss_start@@Base+0xc78>
  40a8e4:	mov    QWORD PTR [rip+0x84e9],0x0        # 412dd8 <__bss_start@@Base+0xc70>
  40a8ef:	mov    QWORD PTR [rip+0x84d6],0x0        # 412dd0 <__bss_start@@Base+0xc68>
  40a8fa:	mov    QWORD PTR [rip+0x84c3],0x0        # 412dc8 <__bss_start@@Base+0xc60>
  40a905:	mov    QWORD PTR [rip+0x84b0],0x0        # 412dc0 <__bss_start@@Base+0xc58>
  40a910:	mov    QWORD PTR [rip+0x849d],0x0        # 412db8 <__bss_start@@Base+0xc50>
  40a91b:	mov    QWORD PTR [rip+0x848a],0x0        # 412db0 <__bss_start@@Base+0xc48>
  40a926:	mov    QWORD PTR [rip+0x8477],0x0        # 412da8 <__bss_start@@Base+0xc40>
  40a931:	mov    QWORD PTR [rip+0x8464],0x0        # 412da0 <__bss_start@@Base+0xc38>
  40a93c:	mov    QWORD PTR [rip+0x84f1],0x0        # 412e38 <__bss_start@@Base+0xcd0>
  40a947:	mov    QWORD PTR [rip+0x84de],0x0        # 412e30 <__bss_start@@Base+0xcc8>
  40a952:	mov    QWORD PTR [rip+0x84cb],0x0        # 412e28 <__bss_start@@Base+0xcc0>
  40a95d:	mov    QWORD PTR [rip+0x84b8],0x0        # 412e20 <__bss_start@@Base+0xcb8>
  40a968:	mov    QWORD PTR [rip+0x84a5],0x0        # 412e18 <__bss_start@@Base+0xcb0>
  40a973:	mov    QWORD PTR [rip+0x8492],0x0        # 412e10 <__bss_start@@Base+0xca8>
  40a97e:	mov    QWORD PTR [rip+0x847f],0x0        # 412e08 <__bss_start@@Base+0xca0>
  40a989:	mov    QWORD PTR [rip+0x846c],0x0        # 412e00 <__bss_start@@Base+0xc98>
  40a994:	mov    QWORD PTR [rip+0x8459],0x0        # 412df8 <__bss_start@@Base+0xc90>
  40a99f:	mov    QWORD PTR [rip+0x8446],0x0        # 412df0 <__bss_start@@Base+0xc88>
  40a9aa:	mov    QWORD PTR [rip+0x84eb],0x0        # 412ea0 <__bss_start@@Base+0xd38>
  40a9b5:	mov    QWORD PTR [rip+0x84d8],0x0        # 412e98 <__bss_start@@Base+0xd30>
  40a9c0:	mov    QWORD PTR [rip+0x84c5],0x0        # 412e90 <__bss_start@@Base+0xd28>
  40a9cb:	mov    QWORD PTR [rip+0x84b2],0x0        # 412e88 <__bss_start@@Base+0xd20>
  40a9d6:	mov    QWORD PTR [rip+0x849f],0x0        # 412e80 <__bss_start@@Base+0xd18>
  40a9e1:	mov    QWORD PTR [rip+0x848c],0x0        # 412e78 <__bss_start@@Base+0xd10>
  40a9ec:	mov    QWORD PTR [rip+0x8479],0x0        # 412e70 <__bss_start@@Base+0xd08>
  40a9f7:	mov    QWORD PTR [rip+0x8466],0x0        # 412e68 <__bss_start@@Base+0xd00>
  40aa02:	mov    QWORD PTR [rip+0x8453],0x0        # 412e60 <__bss_start@@Base+0xcf8>
  40aa0d:	mov    QWORD PTR [rip+0x8440],0x0        # 412e58 <__bss_start@@Base+0xcf0>
  40aa18:	mov    QWORD PTR [rip+0x842d],0x0        # 412e50 <__bss_start@@Base+0xce8>
  40aa23:	mov    QWORD PTR [rip+0x841a],0x0        # 412e48 <__bss_start@@Base+0xce0>
  40aa2e:	mov    QWORD PTR [rip+0x8407],0x0        # 412e40 <__bss_start@@Base+0xcd8>
  40aa39:	mov    QWORD PTR [rip+0x84ac],0x0        # 412ef0 <__bss_start@@Base+0xd88>
  40aa44:	mov    QWORD PTR [rip+0x8499],0x0        # 412ee8 <__bss_start@@Base+0xd80>
  40aa4f:	mov    QWORD PTR [rip+0x8486],0x0        # 412ee0 <__bss_start@@Base+0xd78>
  40aa5a:	mov    QWORD PTR [rip+0x8473],0x0        # 412ed8 <__bss_start@@Base+0xd70>
  40aa65:	mov    QWORD PTR [rip+0x8460],0x0        # 412ed0 <__bss_start@@Base+0xd68>
  40aa70:	mov    QWORD PTR [rip+0x844d],0x0        # 412ec8 <__bss_start@@Base+0xd60>
  40aa7b:	mov    QWORD PTR [rip+0x843a],0x0        # 412ec0 <__bss_start@@Base+0xd58>
  40aa86:	mov    QWORD PTR [rip+0x8427],0x0        # 412eb8 <__bss_start@@Base+0xd50>
  40aa91:	mov    QWORD PTR [rip+0x8414],0x0        # 412eb0 <__bss_start@@Base+0xd48>
  40aa9c:	mov    QWORD PTR [rip+0x84c9],0x0        # 412f70 <__bss_start@@Base+0xe08>
  40aaa7:	mov    QWORD PTR [rip+0x84b6],0x0        # 412f68 <__bss_start@@Base+0xe00>
  40aab2:	mov    QWORD PTR [rip+0x84a3],0x0        # 412f60 <__bss_start@@Base+0xdf8>
  40aabd:	mov    QWORD PTR [rip+0x8490],0x0        # 412f58 <__bss_start@@Base+0xdf0>
  40aac8:	mov    QWORD PTR [rip+0x847d],0x0        # 412f50 <__bss_start@@Base+0xde8>
  40aad3:	mov    QWORD PTR [rip+0x846a],0x0        # 412f48 <__bss_start@@Base+0xde0>
  40aade:	mov    QWORD PTR [rip+0x8457],0x0        # 412f40 <__bss_start@@Base+0xdd8>
  40aae9:	mov    QWORD PTR [rip+0x8444],0x0        # 412f38 <__bss_start@@Base+0xdd0>
  40aaf4:	mov    QWORD PTR [rip+0x8431],0x0        # 412f30 <__bss_start@@Base+0xdc8>
  40aaff:	mov    QWORD PTR [rip+0x841e],0x0        # 412f28 <__bss_start@@Base+0xdc0>
  40ab0a:	mov    QWORD PTR [rip+0x840b],0x0        # 412f20 <__bss_start@@Base+0xdb8>
  40ab15:	mov    QWORD PTR [rip+0x83f8],0x0        # 412f18 <__bss_start@@Base+0xdb0>
  40ab20:	mov    QWORD PTR [rip+0x83e5],0x0        # 412f10 <__bss_start@@Base+0xda8>
  40ab2b:	mov    QWORD PTR [rip+0x83d2],0x0        # 412f08 <__bss_start@@Base+0xda0>
  40ab36:	mov    QWORD PTR [rip+0x83bf],0x0        # 412f00 <__bss_start@@Base+0xd98>
  40ab41:	mov    QWORD PTR [rip+0x8474],0x0        # 412fc0 <__bss_start@@Base+0xe58>
  40ab4c:	mov    QWORD PTR [rip+0x8461],0x0        # 412fb8 <__bss_start@@Base+0xe50>
  40ab57:	mov    QWORD PTR [rip+0x844e],0x0        # 412fb0 <__bss_start@@Base+0xe48>
  40ab62:	mov    QWORD PTR [rip+0x843b],0x0        # 412fa8 <__bss_start@@Base+0xe40>
  40ab6d:	mov    QWORD PTR [rip+0x8428],0x0        # 412fa0 <__bss_start@@Base+0xe38>
  40ab78:	mov    QWORD PTR [rip+0x8415],0x0        # 412f98 <__bss_start@@Base+0xe30>
  40ab83:	mov    QWORD PTR [rip+0x8402],0x0        # 412f90 <__bss_start@@Base+0xe28>
  40ab8e:	mov    QWORD PTR [rip+0x83ef],0x0        # 412f88 <__bss_start@@Base+0xe20>
  40ab99:	mov    QWORD PTR [rip+0x83dc],0x0        # 412f80 <__bss_start@@Base+0xe18>
  40aba4:	pop    rax
  40aba5:	ret    
  40aba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40abb0:	push   rax
  40abb1:	lea    rdi,[rip+0xfffffffffffffa58]        # 40a610 <read_boolean_unary_expression@@Base+0x250>
  40abb8:	lea    rsi,[rip+0xfffffffffffffb51]        # 40a710 <read_boolean_unary_expression@@Base+0x350>
  40abbf:	call   40c3d0 <__gcov_flush@@Base+0xa0>
  40abc4:	pop    rax
  40abc5:	ret    
  40abc6:	xchg   ax,ax
  40abc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40abd0:	push   rbp
  40abd1:	push   r15
  40abd3:	push   r14
  40abd5:	push   r13
  40abd7:	push   r12
  40abd9:	push   rbx
  40abda:	sub    rsp,0x18
  40abde:	mov    r14d,edx
  40abe1:	mov    r15,rsi
  40abe4:	mov    r12,rdi
  40abe7:	lea    rdi,[rsp+0xc]
  40abec:	lea    rsi,[rsp+0x10]
  40abf1:	call   40c710 <__gcov_flush@@Base+0x3e0>
  40abf6:	test   rax,rax
  40abf9:	je     40ac33 <read_boolean_unary_expression@@Base+0x873>
  40abfb:	mov    rbx,rax
  40abfe:	mov    r13,QWORD PTR [rsp+0x10]
  40ac03:	mov    rdi,r12
  40ac06:	call   4030d0 <strlen@plt>
  40ac0b:	lea    rdi,[rax+r13*1]
  40ac0f:	add    rdi,0x2
  40ac13:	call   4031c0 <malloc@plt>
  40ac18:	mov    rbp,rax
  40ac1b:	mov    r8d,DWORD PTR [rsp+0xc]
  40ac20:	mov    rdi,rax
  40ac23:	mov    rsi,r12
  40ac26:	mov    rdx,rbx
  40ac29:	mov    rcx,r13
  40ac2c:	call   40c7a0 <__gcov_flush@@Base+0x470>
  40ac31:	jmp    40ac3e <read_boolean_unary_expression@@Base+0x87e>
  40ac33:	mov    rdi,r12
  40ac36:	call   403260 <strdup@plt>
  40ac3b:	mov    rbp,rax
  40ac3e:	mov    QWORD PTR [rip+0x8383],rbp        # 412fc8 <__bss_start@@Base+0xe60>
  40ac45:	mov    BYTE PTR [rip+0x8384],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40ac4c:	mov    esi,0x2
  40ac51:	xor    eax,eax
  40ac53:	mov    rdi,rbp
  40ac56:	call   403220 <open@plt>
  40ac5b:	mov    DWORD PTR [rip+0x74ff],eax        # 412160 <__data_start@@Base+0x20>
  40ac61:	cmp    eax,0xffffffff
  40ac64:	je     40ac6f <read_boolean_unary_expression@@Base+0x8af>
  40ac66:	lea    rbx,[rip+0x3361]        # 40dfce <_IO_stdin_used@@Base+0xfce>
  40ac6d:	jmp    40acd3 <read_boolean_unary_expression@@Base+0x913>
  40ac6f:	mov    BYTE PTR [rip+0x835a],0x1        # 412fd0 <__bss_start@@Base+0xe68>
  40ac76:	mov    rdi,QWORD PTR [rip+0x834b]        # 412fc8 <__bss_start@@Base+0xe60>
  40ac7d:	mov    esi,0x42
  40ac82:	mov    edx,0x1a4
  40ac87:	xor    eax,eax
  40ac89:	call   403220 <open@plt>
  40ac8e:	mov    DWORD PTR [rip+0x74cc],eax        # 412160 <__data_start@@Base+0x20>
  40ac94:	lea    rbx,[rip+0x3337]        # 40dfd2 <_IO_stdin_used@@Base+0xfd2>
  40ac9b:	cmp    eax,0xffffffff
  40ac9e:	jne    40acd3 <read_boolean_unary_expression@@Base+0x913>
  40aca0:	mov    rdi,QWORD PTR [rip+0x8321]        # 412fc8 <__bss_start@@Base+0xe60>
  40aca7:	call   40c4c0 <__gcov_flush@@Base+0x190>
  40acac:	mov    rdi,QWORD PTR [rip+0x8315]        # 412fc8 <__bss_start@@Base+0xe60>
  40acb3:	mov    esi,0x42
  40acb8:	mov    edx,0x1a4
  40acbd:	xor    eax,eax
  40acbf:	call   403220 <open@plt>
  40acc4:	mov    DWORD PTR [rip+0x7496],eax        # 412160 <__data_start@@Base+0x20>
  40acca:	cmp    eax,0xffffffff
  40accd:	je     40afc9 <read_boolean_unary_expression@@Base+0xc09>
  40acd3:	mov    edi,eax
  40acd5:	call   40c580 <__gcov_flush@@Base+0x250>
  40acda:	mov    edi,DWORD PTR [rip+0x7480]        # 412160 <__data_start@@Base+0x20>
  40ace0:	mov    rsi,rbx
  40ace3:	call   403200 <fdopen@plt>
  40ace8:	mov    QWORD PTR [rip+0x82e9],rax        # 412fd8 <__bss_start@@Base+0xe70>
  40acef:	mov    QWORD PTR [rip+0x82e6],0x0        # 412fe0 <__bss_start@@Base+0xe78>
  40acfa:	mov    QWORD PTR [rip+0x82e3],0x0        # 412fe8 <__bss_start@@Base+0xe80>
  40ad05:	mov    QWORD PTR [rip+0x82e0],0x0        # 412ff0 <__bss_start@@Base+0xe88>
  40ad10:	cmp    BYTE PTR [rip+0x82b9],0x1        # 412fd0 <__bss_start@@Base+0xe68>
  40ad17:	jne    40ad47 <read_boolean_unary_expression@@Base+0x987>
  40ad19:	mov    edi,0x20000
  40ad1e:	call   4031c0 <malloc@plt>
  40ad23:	mov    r12,rax
  40ad26:	mov    QWORD PTR [rip+0x82b3],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40ad2d:	mov    QWORD PTR [rip+0x82b0],0x20000        # 412fe8 <__bss_start@@Base+0xe80>
  40ad38:	xor    esi,esi
  40ad3a:	mov    edx,0x20000
  40ad3f:	mov    rdi,rax
  40ad42:	jmp    40ae63 <read_boolean_unary_expression@@Base+0xaa3>
  40ad47:	xor    esi,esi
  40ad49:	mov    edx,0x2
  40ad4e:	mov    rdi,rax
  40ad51:	call   4031e0 <fseek@plt>
  40ad56:	mov    rdi,QWORD PTR [rip+0x827b]        # 412fd8 <__bss_start@@Base+0xe70>
  40ad5d:	call   403180 <ftell@plt>
  40ad62:	mov    QWORD PTR [rip+0x82a7],rax        # 413010 <__bss_start@@Base+0xea8>
  40ad69:	test   rax,rax
  40ad6c:	je     40ae00 <read_boolean_unary_expression@@Base+0xa40>
  40ad72:	mov    r8d,DWORD PTR [rip+0x73e7]        # 412160 <__data_start@@Base+0x20>
  40ad79:	xor    edi,edi
  40ad7b:	mov    edx,0x3
  40ad80:	mov    ecx,0x1
  40ad85:	xor    r9d,r9d
  40ad88:	mov    rsi,rax
  40ad8b:	call   4030e0 <mmap@plt>
  40ad90:	mov    QWORD PTR [rip+0x8249],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40ad97:	cmp    rax,0xffffffffffffffff
  40ad9b:	je     40adcc <read_boolean_unary_expression@@Base+0xa0c>
  40ad9d:	mov    r12,rax
  40ada0:	cmp    BYTE PTR [rip+0x8229],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40ada7:	jne    40ae68 <read_boolean_unary_expression@@Base+0xaa8>
  40adad:	mov    rbx,QWORD PTR [rip+0x823c]        # 412ff0 <__bss_start@@Base+0xe88>
  40adb4:	mov    DWORD PTR [r12+rbx*1],0x67636461
  40adbc:	add    rbx,0x4
  40adc0:	mov    QWORD PTR [rip+0x8229],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40adc7:	jmp    40aeca <read_boolean_unary_expression@@Base+0xb0a>
  40adcc:	call   403050 <__errno_location@plt>
  40add1:	mov    edi,DWORD PTR [rax]
  40add3:	mov    rax,QWORD PTR [rip+0x721e]        # 411ff8 <stderr@GLIBC_2.2.5>
  40adda:	mov    rbx,QWORD PTR [rax]
  40addd:	mov    rbp,QWORD PTR [rip+0x81e4]        # 412fc8 <__bss_start@@Base+0xe60>
  40ade4:	call   403270 <strerror@plt>
  40ade9:	mov    rcx,rax
  40adec:	lea    rsi,[rip+0x333d]        # 40e130 <_IO_stdin_used@@Base+0x1130>
  40adf3:	xor    eax,eax
  40adf5:	mov    rdi,rbx
  40adf8:	mov    rdx,rbp
  40adfb:	call   403170 <fprintf@plt>
  40ae00:	mov    BYTE PTR [rip+0x81c9],0x1        # 412fd0 <__bss_start@@Base+0xe68>
  40ae07:	mov    QWORD PTR [rip+0x81ce],0x0        # 412fe0 <__bss_start@@Base+0xe78>
  40ae12:	mov    QWORD PTR [rip+0x81cb],0x0        # 412fe8 <__bss_start@@Base+0xe80>
  40ae1d:	mov    rbx,QWORD PTR [rip+0x81cc]        # 412ff0 <__bss_start@@Base+0xe88>
  40ae24:	cmp    rbx,0xfffffffffffe0000
  40ae2b:	jne    40ae32 <read_boolean_unary_expression@@Base+0xa72>
  40ae2d:	xor    r12d,r12d
  40ae30:	jmp    40ae59 <read_boolean_unary_expression@@Base+0xa99>
  40ae32:	add    rbx,0x3ffff
  40ae39:	and    rbx,0xfffffffffffe0000
  40ae40:	mov    rdi,rbx
  40ae43:	call   4031c0 <malloc@plt>
  40ae48:	mov    r12,rax
  40ae4b:	mov    QWORD PTR [rip+0x818e],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40ae52:	mov    QWORD PTR [rip+0x818f],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40ae59:	xor    esi,esi
  40ae5b:	mov    edx,0x20000
  40ae60:	mov    rdi,r12
  40ae63:	call   403150 <memset@plt>
  40ae68:	mov    rbx,QWORD PTR [rip+0x8181]        # 412ff0 <__bss_start@@Base+0xe88>
  40ae6f:	lea    rax,[rbx+0x4]
  40ae73:	cmp    rax,QWORD PTR [rip+0x816e]        # 412fe8 <__bss_start@@Base+0xe80>
  40ae7a:	jbe    40aee4 <read_boolean_unary_expression@@Base+0xb24>
  40ae7c:	add    rbx,0x20003
  40ae83:	and    rbx,0xfffffffffffe0000
  40ae8a:	mov    rdi,r12
  40ae8d:	mov    rsi,rbx
  40ae90:	call   4031f0 <realloc@plt>
  40ae95:	mov    r12,rax
  40ae98:	mov    QWORD PTR [rip+0x8141],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40ae9f:	mov    QWORD PTR [rip+0x8142],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40aea6:	mov    al,BYTE PTR [rip+0x8124]        # 412fd0 <__bss_start@@Base+0xe68>
  40aeac:	mov    rbp,QWORD PTR [rip+0x813d]        # 412ff0 <__bss_start@@Base+0xe88>
  40aeb3:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40aebb:	lea    rbx,[rbp+0x4]
  40aebf:	mov    QWORD PTR [rip+0x812a],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40aec6:	cmp    al,0x1
  40aec8:	je     40aefe <read_boolean_unary_expression@@Base+0xb3e>
  40aeca:	mov    eax,DWORD PTR [r15]
  40aecd:	mov    DWORD PTR [r12+rbx*1],eax
  40aed1:	add    rbx,0x4
  40aed5:	mov    QWORD PTR [rip+0x8114],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40aedc:	mov    rax,rbx
  40aedf:	jmp    40afab <read_boolean_unary_expression@@Base+0xbeb>
  40aee4:	mov    rbp,QWORD PTR [rip+0x8105]        # 412ff0 <__bss_start@@Base+0xe88>
  40aeeb:	mov    DWORD PTR [r12+rbp*1],0x67636461
  40aef3:	lea    rbx,[rbp+0x4]
  40aef7:	mov    QWORD PTR [rip+0x80f2],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40aefe:	lea    rax,[rbp+0x8]
  40af02:	cmp    rax,QWORD PTR [rip+0x80df]        # 412fe8 <__bss_start@@Base+0xe80>
  40af09:	jbe    40af5b <read_boolean_unary_expression@@Base+0xb9b>
  40af0b:	add    rbp,0x20007
  40af12:	and    rbp,0xfffffffffffe0000
  40af19:	mov    rdi,r12
  40af1c:	mov    rsi,rbp
  40af1f:	call   4031f0 <realloc@plt>
  40af24:	mov    r12,rax
  40af27:	mov    QWORD PTR [rip+0x80b2],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40af2e:	mov    QWORD PTR [rip+0x80b3],rbp        # 412fe8 <__bss_start@@Base+0xe80>
  40af35:	mov    rbx,QWORD PTR [rip+0x80b4]        # 412ff0 <__bss_start@@Base+0xe88>
  40af3c:	mov    cl,BYTE PTR [rip+0x808e]        # 412fd0 <__bss_start@@Base+0xe68>
  40af42:	mov    eax,DWORD PTR [r15]
  40af45:	mov    DWORD PTR [r12+rbx*1],eax
  40af49:	lea    rax,[rbx+0x4]
  40af4d:	mov    QWORD PTR [rip+0x809c],rax        # 412ff0 <__bss_start@@Base+0xe88>
  40af54:	cmp    cl,0x1
  40af57:	je     40af6d <read_boolean_unary_expression@@Base+0xbad>
  40af59:	jmp    40afab <read_boolean_unary_expression@@Base+0xbeb>
  40af5b:	mov    eax,DWORD PTR [r15]
  40af5e:	mov    DWORD PTR [r12+rbx*1],eax
  40af62:	lea    rax,[rbx+0x4]
  40af66:	mov    QWORD PTR [rip+0x8083],rax        # 412ff0 <__bss_start@@Base+0xe88>
  40af6d:	lea    rcx,[rbx+0x8]
  40af71:	cmp    rcx,QWORD PTR [rip+0x8070]        # 412fe8 <__bss_start@@Base+0xe80>
  40af78:	jbe    40afab <read_boolean_unary_expression@@Base+0xbeb>
  40af7a:	add    rbx,0x20007
  40af81:	and    rbx,0xfffffffffffe0000
  40af88:	mov    rdi,r12
  40af8b:	mov    rsi,rbx
  40af8e:	call   4031f0 <realloc@plt>
  40af93:	mov    r12,rax
  40af96:	mov    QWORD PTR [rip+0x8043],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40af9d:	mov    QWORD PTR [rip+0x8044],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40afa4:	mov    rax,QWORD PTR [rip+0x8045]        # 412ff0 <__bss_start@@Base+0xe88>
  40afab:	mov    DWORD PTR [r12+rax*1],r14d
  40afaf:	add    rax,0x4
  40afb3:	mov    QWORD PTR [rip+0x8036],rax        # 412ff0 <__bss_start@@Base+0xe88>
  40afba:	add    rsp,0x18
  40afbe:	pop    rbx
  40afbf:	pop    r12
  40afc1:	pop    r13
  40afc3:	pop    r14
  40afc5:	pop    r15
  40afc7:	pop    rbp
  40afc8:	ret    
  40afc9:	call   403050 <__errno_location@plt>
  40afce:	mov    edi,DWORD PTR [rax]
  40afd0:	mov    rax,QWORD PTR [rip+0x7021]        # 411ff8 <stderr@GLIBC_2.2.5>
  40afd7:	mov    rbx,QWORD PTR [rax]
  40afda:	mov    rbp,QWORD PTR [rip+0x7fe7]        # 412fc8 <__bss_start@@Base+0xe60>
  40afe1:	call   403270 <strerror@plt>
  40afe6:	mov    rcx,rax
  40afe9:	lea    rsi,[rip+0x2fe6]        # 40dfd6 <_IO_stdin_used@@Base+0xfd6>
  40aff0:	xor    eax,eax
  40aff2:	mov    rdi,rbx
  40aff5:	mov    rdx,rbp
  40aff8:	call   403170 <fprintf@plt>
  40affd:	jmp    40afba <read_boolean_unary_expression@@Base+0xbfa>
  40afff:	nop
  40b000:	mov    eax,DWORD PTR [rdi]
  40b002:	mov    ecx,0xffffffff
  40b007:	cmp    rax,rcx
  40b00a:	je     40b019 <read_boolean_unary_expression@@Base+0xc59>
  40b00c:	mov    rax,QWORD PTR [rsi+rax*8]
  40b010:	test   rax,rax
  40b013:	je     40b019 <read_boolean_unary_expression@@Base+0xc59>
  40b015:	add    QWORD PTR [rax],0x1
  40b019:	ret    
  40b01a:	nop    WORD PTR [rax+rax*1+0x0]
  40b020:	push   rbp
  40b021:	push   r15
  40b023:	push   r14
  40b025:	push   r13
  40b027:	push   r12
  40b029:	push   rbx
  40b02a:	sub    rsp,0x18
  40b02e:	xor    r14d,r14d
  40b031:	test   cl,cl
  40b033:	setne  al
  40b036:	cmp    QWORD PTR [rip+0x7f9a],0x0        # 412fd8 <__bss_start@@Base+0xe70>
  40b03e:	je     40b356 <read_boolean_unary_expression@@Base+0xf96>
  40b044:	mov    DWORD PTR [rsp+0xc],edi
  40b048:	mov    DWORD PTR [rsp+0x10],edx
  40b04c:	mov    DWORD PTR [rsp+0x14],ecx
  40b050:	mov    DWORD PTR [rsp+0x8],r8d
  40b055:	mov    r15,rsi
  40b058:	mov    r14b,al
  40b05b:	cmp    BYTE PTR [rip+0x7f6e],0x1        # 412fd0 <__bss_start@@Base+0xe68>
  40b062:	jne    40b0a3 <read_boolean_unary_expression@@Base+0xce3>
  40b064:	mov    rbx,QWORD PTR [rip+0x7f85]        # 412ff0 <__bss_start@@Base+0xe88>
  40b06b:	lea    rax,[rbx+0x4]
  40b06f:	cmp    rax,QWORD PTR [rip+0x7f72]        # 412fe8 <__bss_start@@Base+0xe80>
  40b076:	jbe    40b0a3 <read_boolean_unary_expression@@Base+0xce3>
  40b078:	add    rbx,0x20003
  40b07f:	and    rbx,0xfffffffffffe0000
  40b086:	mov    rdi,QWORD PTR [rip+0x7f53]        # 412fe0 <__bss_start@@Base+0xe78>
  40b08d:	mov    rsi,rbx
  40b090:	call   4031f0 <realloc@plt>
  40b095:	mov    QWORD PTR [rip+0x7f44],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b09c:	mov    QWORD PTR [rip+0x7f45],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40b0a3:	or     r14d,0x2
  40b0a7:	mov    r12,QWORD PTR [rip+0x7f32]        # 412fe0 <__bss_start@@Base+0xe78>
  40b0ae:	mov    r13,QWORD PTR [rip+0x7f3b]        # 412ff0 <__bss_start@@Base+0xe88>
  40b0b5:	mov    DWORD PTR [r12+r13*1],0x1000000
  40b0bd:	lea    rbx,[r13+0x4]
  40b0c1:	mov    QWORD PTR [rip+0x7f28],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b0c8:	test   r15,r15
  40b0cb:	je     40b0e1 <read_boolean_unary_expression@@Base+0xd21>
  40b0cd:	mov    rdi,r15
  40b0d0:	call   4030d0 <strlen@plt>
  40b0d5:	shr    rax,0x2
  40b0d9:	lea    r14d,[r14+rax*1]
  40b0dd:	add    r14d,0x2
  40b0e1:	cmp    BYTE PTR [rip+0x7ee8],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40b0e8:	je     40b14a <read_boolean_unary_expression@@Base+0xd8a>
  40b0ea:	lea    rbp,[r13+0x8]
  40b0ee:	cmp    rbp,QWORD PTR [rip+0x7ef3]        # 412fe8 <__bss_start@@Base+0xe80>
  40b0f5:	jbe    40b365 <read_boolean_unary_expression@@Base+0xfa5>
  40b0fb:	add    r13,0x20007
  40b102:	and    r13,0xfffffffffffe0000
  40b109:	mov    rdi,r12
  40b10c:	mov    rsi,r13
  40b10f:	call   4031f0 <realloc@plt>
  40b114:	mov    r12,rax
  40b117:	mov    QWORD PTR [rip+0x7ec2],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b11e:	mov    QWORD PTR [rip+0x7ec3],r13        # 412fe8 <__bss_start@@Base+0xe80>
  40b125:	mov    rbx,QWORD PTR [rip+0x7ec4]        # 412ff0 <__bss_start@@Base+0xe88>
  40b12c:	mov    al,BYTE PTR [rip+0x7e9e]        # 412fd0 <__bss_start@@Base+0xe68>
  40b132:	mov    DWORD PTR [r12+rbx*1],r14d
  40b136:	lea    rbp,[rbx+0x4]
  40b13a:	mov    QWORD PTR [rip+0x7eaf],rbp        # 412ff0 <__bss_start@@Base+0xe88>
  40b141:	cmp    al,0x1
  40b143:	jne    40b15d <read_boolean_unary_expression@@Base+0xd9d>
  40b145:	jmp    40b371 <read_boolean_unary_expression@@Base+0xfb1>
  40b14a:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  40b14f:	add    r13,0x8
  40b153:	mov    QWORD PTR [rip+0x7e96],r13        # 412ff0 <__bss_start@@Base+0xe88>
  40b15a:	mov    rbp,r13
  40b15d:	mov    eax,DWORD PTR [rsp+0xc]
  40b161:	mov    DWORD PTR [r12+rbp*1],eax
  40b165:	add    rbp,0x4
  40b169:	mov    QWORD PTR [rip+0x7e80],rbp        # 412ff0 <__bss_start@@Base+0xe88>
  40b170:	mov    rbx,rbp
  40b173:	mov    r13,r15
  40b176:	mov    r14d,DWORD PTR [rsp+0x14]
  40b17b:	mov    r15d,DWORD PTR [rsp+0x10]
  40b180:	lea    rbp,[rbx+0x4]
  40b184:	mov    DWORD PTR [r12+rbx*1],r15d
  40b188:	mov    QWORD PTR [rip+0x7e61],rbp        # 412ff0 <__bss_start@@Base+0xe88>
  40b18f:	test   r14b,r14b
  40b192:	je     40b1ee <read_boolean_unary_expression@@Base+0xe2e>
  40b194:	cmp    BYTE PTR [rip+0x7e35],0x1        # 412fd0 <__bss_start@@Base+0xe68>
  40b19b:	jne    40b1db <read_boolean_unary_expression@@Base+0xe1b>
  40b19d:	lea    rax,[rbx+0x8]
  40b1a1:	cmp    rax,QWORD PTR [rip+0x7e40]        # 412fe8 <__bss_start@@Base+0xe80>
  40b1a8:	jbe    40b1db <read_boolean_unary_expression@@Base+0xe1b>
  40b1aa:	add    rbx,0x20007
  40b1b1:	and    rbx,0xfffffffffffe0000
  40b1b8:	mov    rdi,r12
  40b1bb:	mov    rsi,rbx
  40b1be:	call   4031f0 <realloc@plt>
  40b1c3:	mov    r12,rax
  40b1c6:	mov    QWORD PTR [rip+0x7e13],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b1cd:	mov    QWORD PTR [rip+0x7e14],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40b1d4:	mov    rbp,QWORD PTR [rip+0x7e15]        # 412ff0 <__bss_start@@Base+0xe88>
  40b1db:	mov    eax,DWORD PTR [rsp+0x8]
  40b1df:	mov    DWORD PTR [r12+rbp*1],eax
  40b1e3:	add    rbp,0x4
  40b1e7:	mov    QWORD PTR [rip+0x7e02],rbp        # 412ff0 <__bss_start@@Base+0xe88>
  40b1ee:	test   r13,r13
  40b1f1:	je     40b356 <read_boolean_unary_expression@@Base+0xf96>
  40b1f7:	mov    rdi,r13
  40b1fa:	call   4030d0 <strlen@plt>
  40b1ff:	mov    rbx,rax
  40b202:	shr    rbx,0x2
  40b206:	add    ebx,0x1
  40b209:	cmp    BYTE PTR [rip+0x7dc0],0x1        # 412fd0 <__bss_start@@Base+0xe68>
  40b210:	jne    40b25c <read_boolean_unary_expression@@Base+0xe9c>
  40b212:	lea    rax,[rbp+0x4]
  40b216:	mov    r14b,0x1
  40b219:	cmp    rax,QWORD PTR [rip+0x7dc8]        # 412fe8 <__bss_start@@Base+0xe80>
  40b220:	jbe    40b25f <read_boolean_unary_expression@@Base+0xe9f>
  40b222:	add    rbp,0x20003
  40b229:	and    rbp,0xfffffffffffe0000
  40b230:	mov    rdi,r12
  40b233:	mov    rsi,rbp
  40b236:	call   4031f0 <realloc@plt>
  40b23b:	mov    r12,rax
  40b23e:	mov    QWORD PTR [rip+0x7d9b],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b245:	mov    QWORD PTR [rip+0x7d9c],rbp        # 412fe8 <__bss_start@@Base+0xe80>
  40b24c:	mov    r14b,BYTE PTR [rip+0x7d7d]        # 412fd0 <__bss_start@@Base+0xe68>
  40b253:	mov    rbp,QWORD PTR [rip+0x7d96]        # 412ff0 <__bss_start@@Base+0xe88>
  40b25a:	jmp    40b25f <read_boolean_unary_expression@@Base+0xe9f>
  40b25c:	xor    r14d,r14d
  40b25f:	mov    DWORD PTR [r12+rbp*1],ebx
  40b263:	add    rbp,0x4
  40b267:	mov    QWORD PTR [rip+0x7d82],rbp        # 412ff0 <__bss_start@@Base+0xe88>
  40b26e:	mov    rdi,r13
  40b271:	call   4030d0 <strlen@plt>
  40b276:	mov    rbx,rax
  40b279:	test   r14b,0x1
  40b27d:	je     40b2c9 <read_boolean_unary_expression@@Base+0xf09>
  40b27f:	lea    r15,[rbx+rbp*1]
  40b283:	mov    r14b,0x1
  40b286:	cmp    r15,QWORD PTR [rip+0x7d5b]        # 412fe8 <__bss_start@@Base+0xe80>
  40b28d:	jbe    40b2cc <read_boolean_unary_expression@@Base+0xf0c>
  40b28f:	add    r15,0x1ffff
  40b296:	and    r15,0xfffffffffffe0000
  40b29d:	mov    rdi,r12
  40b2a0:	mov    rsi,r15
  40b2a3:	call   4031f0 <realloc@plt>
  40b2a8:	mov    r12,rax
  40b2ab:	mov    QWORD PTR [rip+0x7d2e],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b2b2:	mov    QWORD PTR [rip+0x7d2f],r15        # 412fe8 <__bss_start@@Base+0xe80>
  40b2b9:	mov    rbp,QWORD PTR [rip+0x7d30]        # 412ff0 <__bss_start@@Base+0xe88>
  40b2c0:	mov    r14b,BYTE PTR [rip+0x7d09]        # 412fd0 <__bss_start@@Base+0xe68>
  40b2c7:	jmp    40b2cc <read_boolean_unary_expression@@Base+0xf0c>
  40b2c9:	xor    r14d,r14d
  40b2cc:	lea    rdi,[r12+rbp*1]
  40b2d0:	mov    rsi,r13
  40b2d3:	mov    rdx,rbx
  40b2d6:	call   4031a0 <memcpy@plt>
  40b2db:	add    rbx,rbp
  40b2de:	mov    QWORD PTR [rip+0x7d0b],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b2e5:	mov    rdi,r13
  40b2e8:	call   4030d0 <strlen@plt>
  40b2ed:	and    eax,0x3
  40b2f0:	mov    ebp,0x4
  40b2f5:	sub    rbp,rax
  40b2f8:	test   r14b,0x1
  40b2fc:	je     40b33c <read_boolean_unary_expression@@Base+0xf7c>
  40b2fe:	lea    r14,[rbx+rbp*1]
  40b302:	cmp    r14,QWORD PTR [rip+0x7cdf]        # 412fe8 <__bss_start@@Base+0xe80>
  40b309:	jbe    40b33c <read_boolean_unary_expression@@Base+0xf7c>
  40b30b:	add    r14,0x1ffff
  40b312:	and    r14,0xfffffffffffe0000
  40b319:	mov    rdi,r12
  40b31c:	mov    rsi,r14
  40b31f:	call   4031f0 <realloc@plt>
  40b324:	mov    r12,rax
  40b327:	mov    QWORD PTR [rip+0x7cb2],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b32e:	mov    QWORD PTR [rip+0x7cb3],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40b335:	mov    rbx,QWORD PTR [rip+0x7cb4]        # 412ff0 <__bss_start@@Base+0xe88>
  40b33c:	add    r12,rbx
  40b33f:	xor    esi,esi
  40b341:	mov    rdi,r12
  40b344:	mov    rdx,rbp
  40b347:	call   403150 <memset@plt>
  40b34c:	add    rbx,rbp
  40b34f:	mov    QWORD PTR [rip+0x7c9a],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b356:	add    rsp,0x18
  40b35a:	pop    rbx
  40b35b:	pop    r12
  40b35d:	pop    r13
  40b35f:	pop    r14
  40b361:	pop    r15
  40b363:	pop    rbp
  40b364:	ret    
  40b365:	mov    DWORD PTR [r12+r13*1+0x4],r14d
  40b36a:	mov    QWORD PTR [rip+0x7c7f],rbp        # 412ff0 <__bss_start@@Base+0xe88>
  40b371:	lea    rax,[rbx+0x8]
  40b375:	cmp    rax,QWORD PTR [rip+0x7c6c]        # 412fe8 <__bss_start@@Base+0xe80>
  40b37c:	mov    r13,r15
  40b37f:	jbe    40b3df <read_boolean_unary_expression@@Base+0x101f>
  40b381:	add    rbx,0x20007
  40b388:	and    rbx,0xfffffffffffe0000
  40b38f:	mov    rdi,r12
  40b392:	mov    rsi,rbx
  40b395:	call   4031f0 <realloc@plt>
  40b39a:	mov    r12,rax
  40b39d:	mov    QWORD PTR [rip+0x7c3c],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b3a4:	mov    QWORD PTR [rip+0x7c3d],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40b3ab:	mov    rbp,QWORD PTR [rip+0x7c3e]        # 412ff0 <__bss_start@@Base+0xe88>
  40b3b2:	mov    al,BYTE PTR [rip+0x7c18]        # 412fd0 <__bss_start@@Base+0xe68>
  40b3b8:	mov    ecx,DWORD PTR [rsp+0xc]
  40b3bc:	mov    DWORD PTR [r12+rbp*1],ecx
  40b3c0:	lea    rbx,[rbp+0x4]
  40b3c4:	mov    QWORD PTR [rip+0x7c25],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b3cb:	cmp    al,0x1
  40b3cd:	mov    r14d,DWORD PTR [rsp+0x14]
  40b3d2:	mov    r15d,DWORD PTR [rsp+0x10]
  40b3d7:	jne    40b180 <read_boolean_unary_expression@@Base+0xdc0>
  40b3dd:	jmp    40b3fc <read_boolean_unary_expression@@Base+0x103c>
  40b3df:	mov    eax,DWORD PTR [rsp+0xc]
  40b3e3:	mov    DWORD PTR [r12+rbp*1],eax
  40b3e7:	lea    rbx,[rbp+0x4]
  40b3eb:	mov    QWORD PTR [rip+0x7bfe],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b3f2:	mov    r14d,DWORD PTR [rsp+0x14]
  40b3f7:	mov    r15d,DWORD PTR [rsp+0x10]
  40b3fc:	lea    rax,[rbp+0x8]
  40b400:	cmp    rax,QWORD PTR [rip+0x7be1]        # 412fe8 <__bss_start@@Base+0xe80>
  40b407:	jbe    40b180 <read_boolean_unary_expression@@Base+0xdc0>
  40b40d:	add    rbp,0x20007
  40b414:	and    rbp,0xfffffffffffe0000
  40b41b:	mov    rdi,r12
  40b41e:	mov    rsi,rbp
  40b421:	call   4031f0 <realloc@plt>
  40b426:	mov    r12,rax
  40b429:	mov    QWORD PTR [rip+0x7bb0],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b430:	mov    QWORD PTR [rip+0x7bb1],rbp        # 412fe8 <__bss_start@@Base+0xe80>
  40b437:	mov    rbx,QWORD PTR [rip+0x7bb2]        # 412ff0 <__bss_start@@Base+0xe88>
  40b43e:	jmp    40b180 <read_boolean_unary_expression@@Base+0xdc0>
  40b443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b44d:	nop    DWORD PTR [rax]
  40b450:	push   rbp
  40b451:	push   r15
  40b453:	push   r14
  40b455:	push   r13
  40b457:	push   r12
  40b459:	push   rbx
  40b45a:	sub    rsp,0x18
  40b45e:	cmp    QWORD PTR [rip+0x7b72],0x0        # 412fd8 <__bss_start@@Base+0xe70>
  40b466:	je     40b50a <read_boolean_unary_expression@@Base+0x114a>
  40b46c:	mov    r13d,edi
  40b46f:	mov    r14,QWORD PTR [rip+0x7b7a]        # 412ff0 <__bss_start@@Base+0xe88>
  40b476:	cmp    BYTE PTR [rip+0x7b53],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40b47d:	mov    QWORD PTR [rsp+0x8],rsi
  40b482:	je     40b519 <read_boolean_unary_expression@@Base+0x1159>
  40b488:	lea    rbx,[r14+0x4]
  40b48c:	cmp    rbx,QWORD PTR [rip+0x7b55]        # 412fe8 <__bss_start@@Base+0xe80>
  40b493:	jbe    40b5a1 <read_boolean_unary_expression@@Base+0x11e1>
  40b499:	add    r14,0x20003
  40b4a0:	and    r14,0xfffffffffffe0000
  40b4a7:	mov    rdi,QWORD PTR [rip+0x7b32]        # 412fe0 <__bss_start@@Base+0xe78>
  40b4ae:	mov    rsi,r14
  40b4b1:	call   4031f0 <realloc@plt>
  40b4b6:	mov    rsi,QWORD PTR [rsp+0x8]
  40b4bb:	mov    r15,rax
  40b4be:	mov    QWORD PTR [rip+0x7b1b],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b4c5:	mov    QWORD PTR [rip+0x7b1c],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40b4cc:	mov    r14,QWORD PTR [rip+0x7b1d]        # 412ff0 <__bss_start@@Base+0xe88>
  40b4d3:	mov    al,BYTE PTR [rip+0x7af7]        # 412fd0 <__bss_start@@Base+0xe68>
  40b4d9:	lea    rbx,[r14+0x4]
  40b4dd:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40b4e5:	mov    QWORD PTR [rip+0x7b04],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b4ec:	lea    ebp,[r13+r13*1+0x0]
  40b4f1:	xor    ecx,ecx
  40b4f3:	mov    QWORD PTR [rsp],rcx
  40b4f7:	mov    r12d,0x0
  40b4fd:	cmp    al,0x1
  40b4ff:	je     40b5bc <read_boolean_unary_expression@@Base+0x11fc>
  40b505:	jmp    40b6ef <read_boolean_unary_expression@@Base+0x132f>
  40b50a:	add    rsp,0x18
  40b50e:	pop    rbx
  40b50f:	pop    r12
  40b511:	pop    r13
  40b513:	pop    r14
  40b515:	pop    r15
  40b517:	pop    rbp
  40b518:	ret    
  40b519:	mov    r15,QWORD PTR [rip+0x7ac0]        # 412fe0 <__bss_start@@Base+0xe78>
  40b520:	mov    ecx,DWORD PTR [r15+r14*1]
  40b524:	lea    rbx,[r14+0x4]
  40b528:	mov    QWORD PTR [rip+0x7ac1],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b52f:	cmp    ecx,0xffffffff
  40b532:	je     40b615 <read_boolean_unary_expression@@Base+0x1255>
  40b538:	cmp    ecx,0x1a10000
  40b53e:	jne    40b623 <read_boolean_unary_expression@@Base+0x1263>
  40b544:	mov    ecx,DWORD PTR [r15+r14*1+0x4]
  40b549:	lea    rbp,[r14+0x8]
  40b54d:	mov    QWORD PTR [rip+0x7a9c],rbp        # 412ff0 <__bss_start@@Base+0xe88>
  40b554:	cmp    ecx,0xffffffff
  40b557:	je     40b63d <read_boolean_unary_expression@@Base+0x127d>
  40b55d:	mov    eax,ecx
  40b55f:	shr    eax,1
  40b561:	cmp    eax,r13d
  40b564:	jne    40b63d <read_boolean_unary_expression@@Base+0x127d>
  40b56a:	mov    r12d,r13d
  40b56d:	lea    rdi,[r12*8+0x0]
  40b575:	call   4031c0 <malloc@plt>
  40b57a:	test   r13d,r13d
  40b57d:	mov    rcx,rax
  40b580:	mov    QWORD PTR [rsp],rax
  40b584:	je     40b66a <read_boolean_unary_expression@@Base+0x12aa>
  40b58a:	mov    eax,r12d
  40b58d:	and    eax,0x1
  40b590:	cmp    r13d,0x1
  40b594:	jne    40b674 <read_boolean_unary_expression@@Base+0x12b4>
  40b59a:	xor    ecx,ecx
  40b59c:	jmp    40b6b3 <read_boolean_unary_expression@@Base+0x12f3>
  40b5a1:	mov    r15,QWORD PTR [rip+0x7a38]        # 412fe0 <__bss_start@@Base+0xe78>
  40b5a8:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40b5b0:	mov    QWORD PTR [rip+0x7a39],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b5b7:	lea    ebp,[r13+r13*1+0x0]
  40b5bc:	lea    rax,[r14+0x8]
  40b5c0:	cmp    rax,QWORD PTR [rip+0x7a21]        # 412fe8 <__bss_start@@Base+0xe80>
  40b5c7:	jbe    40b607 <read_boolean_unary_expression@@Base+0x1247>
  40b5c9:	add    r14,0x20007
  40b5d0:	and    r14,0xfffffffffffe0000
  40b5d7:	mov    rdi,r15
  40b5da:	mov    rsi,r14
  40b5dd:	call   4031f0 <realloc@plt>
  40b5e2:	mov    rsi,QWORD PTR [rsp+0x8]
  40b5e7:	mov    r15,rax
  40b5ea:	mov    QWORD PTR [rip+0x79ef],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b5f1:	mov    QWORD PTR [rip+0x79f0],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40b5f8:	xor    eax,eax
  40b5fa:	mov    QWORD PTR [rsp],rax
  40b5fe:	mov    rbx,QWORD PTR [rip+0x79eb]        # 412ff0 <__bss_start@@Base+0xe88>
  40b605:	jmp    40b60d <read_boolean_unary_expression@@Base+0x124d>
  40b607:	xor    eax,eax
  40b609:	mov    QWORD PTR [rsp],rax
  40b60d:	xor    r12d,r12d
  40b610:	jmp    40b6ef <read_boolean_unary_expression@@Base+0x132f>
  40b615:	xor    r12d,r12d
  40b618:	xor    eax,eax
  40b61a:	mov    QWORD PTR [rsp],rax
  40b61e:	jmp    40b6d4 <read_boolean_unary_expression@@Base+0x1314>
  40b623:	mov    rax,QWORD PTR [rip+0x69ce]        # 411ff8 <stderr@GLIBC_2.2.5>
  40b62a:	mov    rdi,QWORD PTR [rax]
  40b62d:	mov    rdx,QWORD PTR [rip+0x7994]        # 412fc8 <__bss_start@@Base+0xe60>
  40b634:	lea    rsi,[rip+0x29bb]        # 40dff6 <_IO_stdin_used@@Base+0xff6>
  40b63b:	jmp    40b655 <read_boolean_unary_expression@@Base+0x1295>
  40b63d:	mov    rax,QWORD PTR [rip+0x69b4]        # 411ff8 <stderr@GLIBC_2.2.5>
  40b644:	mov    rdi,QWORD PTR [rax]
  40b647:	mov    rdx,QWORD PTR [rip+0x797a]        # 412fc8 <__bss_start@@Base+0xe60>
  40b64e:	lea    rsi,[rip+0x29eb]        # 40e040 <_IO_stdin_used@@Base+0x1040>
  40b655:	xor    eax,eax
  40b657:	add    rsp,0x18
  40b65b:	pop    rbx
  40b65c:	pop    r12
  40b65e:	pop    r13
  40b660:	pop    r14
  40b662:	pop    r15
  40b664:	pop    rbp
  40b665:	jmp    403170 <fprintf@plt>
  40b66a:	mov    r12,rax
  40b66d:	mov    rsi,QWORD PTR [rsp+0x8]
  40b672:	jmp    40b6d4 <read_boolean_unary_expression@@Base+0x1314>
  40b674:	mov    rbp,0xfffffffffffffff8
  40b67b:	sub    rbp,r14
  40b67e:	lea    rdx,[r15+r14*1]
  40b682:	add    rdx,0x14
  40b686:	sub    r12,rax
  40b689:	xor    ecx,ecx
  40b68b:	mov    rdi,QWORD PTR [rsp]
  40b68f:	nop
  40b690:	mov    rsi,QWORD PTR [rdx+rcx*8-0xc]
  40b695:	mov    QWORD PTR [rdi+rcx*8],rsi
  40b699:	mov    rsi,QWORD PTR [rdx+rcx*8-0x4]
  40b69e:	mov    QWORD PTR [rdi+rcx*8+0x8],rsi
  40b6a3:	add    rcx,0x2
  40b6a7:	add    rbp,0xfffffffffffffff0
  40b6ab:	cmp    r12,rcx
  40b6ae:	jne    40b690 <read_boolean_unary_expression@@Base+0x12d0>
  40b6b0:	neg    rbp
  40b6b3:	mov    rsi,QWORD PTR [rsp+0x8]
  40b6b8:	test   rax,rax
  40b6bb:	mov    r12,QWORD PTR [rsp]
  40b6bf:	je     40b6cd <read_boolean_unary_expression@@Base+0x130d>
  40b6c1:	mov    rax,QWORD PTR [r15+rbp*1]
  40b6c5:	mov    QWORD PTR [r12+rcx*8],rax
  40b6c9:	add    rbp,0x8
  40b6cd:	mov    QWORD PTR [rip+0x791c],rbp        # 412ff0 <__bss_start@@Base+0xe88>
  40b6d4:	mov    QWORD PTR [rip+0x7915],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40b6db:	mov    DWORD PTR [r15+r14*1],0x1a10000
  40b6e3:	mov    QWORD PTR [rip+0x7906],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b6ea:	lea    ebp,[r13+r13*1+0x0]
  40b6ef:	mov    DWORD PTR [r15+rbx*1],ebp
  40b6f3:	add    rbx,0x4
  40b6f7:	mov    QWORD PTR [rip+0x78f2],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b6fe:	test   r13d,r13d
  40b701:	je     40b84f <read_boolean_unary_expression@@Base+0x148f>
  40b707:	mov    edi,r13d
  40b70a:	shl    rdi,0x3
  40b70e:	xor    ebp,ebp
  40b710:	mov    QWORD PTR [rsp+0x10],rdi
  40b715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b71f:	nop
  40b720:	test   r12,r12
  40b723:	je     40b730 <read_boolean_unary_expression@@Base+0x1370>
  40b725:	mov    r14,QWORD PTR [r12+rbp*1]
  40b729:	jmp    40b733 <read_boolean_unary_expression@@Base+0x1373>
  40b72b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b730:	xor    r14d,r14d
  40b733:	add    r14,QWORD PTR [rsi+rbp*1]
  40b737:	mov    QWORD PTR [rsi+rbp*1],r14
  40b73b:	mov    r13,r14
  40b73e:	shr    r13,0x20
  40b742:	cmp    BYTE PTR [rip+0x7887],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40b749:	je     40b7c0 <read_boolean_unary_expression@@Base+0x1400>
  40b74b:	lea    rax,[rbx+0x4]
  40b74f:	mov    rcx,QWORD PTR [rip+0x7892]        # 412fe8 <__bss_start@@Base+0xe80>
  40b756:	cmp    rax,rcx
  40b759:	jbe    40b7e0 <read_boolean_unary_expression@@Base+0x1420>
  40b75f:	add    rbx,0x20003
  40b766:	and    rbx,0xfffffffffffe0000
  40b76d:	mov    rdi,r15
  40b770:	mov    rsi,rbx
  40b773:	call   4031f0 <realloc@plt>
  40b778:	mov    rdi,QWORD PTR [rsp+0x10]
  40b77d:	mov    rsi,QWORD PTR [rsp+0x8]
  40b782:	mov    r15,rax
  40b785:	mov    QWORD PTR [rip+0x7854],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b78c:	mov    QWORD PTR [rip+0x7855],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40b793:	movzx  edx,BYTE PTR [rip+0x7836]        # 412fd0 <__bss_start@@Base+0xe68>
  40b79a:	mov    rcx,rbx
  40b79d:	mov    rbx,QWORD PTR [rip+0x784c]        # 412ff0 <__bss_start@@Base+0xe88>
  40b7a4:	mov    DWORD PTR [rax+rbx*1],r14d
  40b7a8:	lea    rax,[rbx+0x4]
  40b7ac:	mov    QWORD PTR [rip+0x783d],rax        # 412ff0 <__bss_start@@Base+0xe88>
  40b7b3:	cmp    dl,0x1
  40b7b6:	je     40b7eb <read_boolean_unary_expression@@Base+0x142b>
  40b7b8:	jmp    40b830 <read_boolean_unary_expression@@Base+0x1470>
  40b7ba:	nop    WORD PTR [rax+rax*1+0x0]
  40b7c0:	mov    DWORD PTR [r15+rbx*1],r14d
  40b7c4:	add    rbx,0x4
  40b7c8:	mov    QWORD PTR [rip+0x7821],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b7cf:	mov    rax,rbx
  40b7d2:	jmp    40b830 <read_boolean_unary_expression@@Base+0x1470>
  40b7d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7de:	xchg   ax,ax
  40b7e0:	mov    DWORD PTR [r15+rbx*1],r14d
  40b7e4:	mov    QWORD PTR [rip+0x7805],rax        # 412ff0 <__bss_start@@Base+0xe88>
  40b7eb:	lea    rdx,[rbx+0x8]
  40b7ef:	cmp    rdx,rcx
  40b7f2:	jbe    40b830 <read_boolean_unary_expression@@Base+0x1470>
  40b7f4:	add    rbx,0x20007
  40b7fb:	and    rbx,0xfffffffffffe0000
  40b802:	mov    rdi,r15
  40b805:	mov    rsi,rbx
  40b808:	call   4031f0 <realloc@plt>
  40b80d:	mov    rdi,QWORD PTR [rsp+0x10]
  40b812:	mov    rsi,QWORD PTR [rsp+0x8]
  40b817:	mov    r15,rax
  40b81a:	mov    QWORD PTR [rip+0x77bf],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b821:	mov    QWORD PTR [rip+0x77c0],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40b828:	mov    rax,QWORD PTR [rip+0x77c1]        # 412ff0 <__bss_start@@Base+0xe88>
  40b82f:	nop
  40b830:	mov    DWORD PTR [r15+rax*1],r13d
  40b834:	add    rax,0x4
  40b838:	mov    QWORD PTR [rip+0x77b1],rax        # 412ff0 <__bss_start@@Base+0xe88>
  40b83f:	add    rbp,0x8
  40b843:	mov    rbx,rax
  40b846:	cmp    rdi,rbp
  40b849:	jne    40b720 <read_boolean_unary_expression@@Base+0x1360>
  40b84f:	mov    rdi,QWORD PTR [rsp]
  40b853:	add    rsp,0x18
  40b857:	pop    rbx
  40b858:	pop    r12
  40b85a:	pop    r13
  40b85c:	pop    r14
  40b85e:	pop    r15
  40b860:	pop    rbp
  40b861:	jmp    403040 <free@plt>
  40b866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b870:	push   rbp
  40b871:	push   r15
  40b873:	push   r14
  40b875:	push   rbx
  40b876:	push   rax
  40b877:	cmp    QWORD PTR [rip+0x7759],0x0        # 412fd8 <__bss_start@@Base+0xe70>
  40b87f:	je     40bbf6 <read_boolean_unary_expression@@Base+0x1836>
  40b885:	mov    rbx,QWORD PTR [rip+0x7764]        # 412ff0 <__bss_start@@Base+0xe88>
  40b88c:	cmp    BYTE PTR [rip+0x773d],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40b893:	je     40b8ff <read_boolean_unary_expression@@Base+0x153f>
  40b895:	lea    r14,[rbx+0x4]
  40b899:	cmp    r14,QWORD PTR [rip+0x7748]        # 412fe8 <__bss_start@@Base+0xe80>
  40b8a0:	jbe    40b94b <read_boolean_unary_expression@@Base+0x158b>
  40b8a6:	add    rbx,0x20003
  40b8ad:	and    rbx,0xfffffffffffe0000
  40b8b4:	mov    rdi,QWORD PTR [rip+0x7725]        # 412fe0 <__bss_start@@Base+0xe78>
  40b8bb:	mov    rsi,rbx
  40b8be:	call   4031f0 <realloc@plt>
  40b8c3:	mov    QWORD PTR [rip+0x7716],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b8ca:	mov    QWORD PTR [rip+0x7717],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40b8d1:	mov    rbx,QWORD PTR [rip+0x7718]        # 412ff0 <__bss_start@@Base+0xe88>
  40b8d8:	mov    cl,BYTE PTR [rip+0x76f2]        # 412fd0 <__bss_start@@Base+0xe68>
  40b8de:	lea    r14,[rbx+0x4]
  40b8e2:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40b8e9:	mov    QWORD PTR [rip+0x7700],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40b8f0:	mov    ebp,0x1
  40b8f5:	cmp    cl,0x1
  40b8f8:	je     40b960 <read_boolean_unary_expression@@Base+0x15a0>
  40b8fa:	jmp    40ba7b <read_boolean_unary_expression@@Base+0x16bb>
  40b8ff:	mov    rax,QWORD PTR [rip+0x76da]        # 412fe0 <__bss_start@@Base+0xe78>
  40b906:	mov    ecx,DWORD PTR [rax+rbx*1]
  40b909:	lea    r14,[rbx+0x4]
  40b90d:	mov    QWORD PTR [rip+0x76dc],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40b914:	cmp    ecx,0xa1000000
  40b91a:	je     40ba3c <read_boolean_unary_expression@@Base+0x167c>
  40b920:	mov    ebp,0x1
  40b925:	cmp    ecx,0xffffffff
  40b928:	je     40ba6d <read_boolean_unary_expression@@Base+0x16ad>
  40b92e:	mov    rax,QWORD PTR [rip+0x66c3]        # 411ff8 <stderr@GLIBC_2.2.5>
  40b935:	mov    rdi,QWORD PTR [rax]
  40b938:	mov    rdx,QWORD PTR [rip+0x7689]        # 412fc8 <__bss_start@@Base+0xe60>
  40b93f:	lea    rsi,[rip+0x274e]        # 40e094 <_IO_stdin_used@@Base+0x1094>
  40b946:	jmp    40be55 <read_boolean_unary_expression@@Base+0x1a95>
  40b94b:	mov    rax,QWORD PTR [rip+0x768e]        # 412fe0 <__bss_start@@Base+0xe78>
  40b952:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40b959:	mov    QWORD PTR [rip+0x7690],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40b960:	lea    rcx,[rbx+0x8]
  40b964:	cmp    rcx,QWORD PTR [rip+0x767d]        # 412fe8 <__bss_start@@Base+0xe80>
  40b96b:	jbe    40b9c3 <read_boolean_unary_expression@@Base+0x1603>
  40b96d:	add    rbx,0x20007
  40b974:	and    rbx,0xfffffffffffe0000
  40b97b:	mov    rdi,rax
  40b97e:	mov    rsi,rbx
  40b981:	call   4031f0 <realloc@plt>
  40b986:	mov    QWORD PTR [rip+0x7653],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40b98d:	mov    QWORD PTR [rip+0x7654],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40b994:	mov    r14,QWORD PTR [rip+0x7655]        # 412ff0 <__bss_start@@Base+0xe88>
  40b99b:	mov    cl,BYTE PTR [rip+0x762f]        # 412fd0 <__bss_start@@Base+0xe68>
  40b9a1:	mov    DWORD PTR [rax+r14*1],0x9
  40b9a9:	lea    rbx,[r14+0x4]
  40b9ad:	mov    QWORD PTR [rip+0x763c],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b9b4:	mov    ebp,0x1
  40b9b9:	cmp    cl,0x1
  40b9bc:	je     40b9d6 <read_boolean_unary_expression@@Base+0x1616>
  40b9be:	jmp    40ba91 <read_boolean_unary_expression@@Base+0x16d1>
  40b9c3:	mov    DWORD PTR [rax+r14*1],0x9
  40b9cb:	lea    rbx,[r14+0x4]
  40b9cf:	mov    QWORD PTR [rip+0x761a],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40b9d6:	lea    rcx,[r14+0x8]
  40b9da:	cmp    rcx,QWORD PTR [rip+0x7607]        # 412fe8 <__bss_start@@Base+0xe80>
  40b9e1:	jbe    40bc7d <read_boolean_unary_expression@@Base+0x18bd>
  40b9e7:	add    r14,0x20007
  40b9ee:	and    r14,0xfffffffffffe0000
  40b9f5:	mov    rdi,rax
  40b9f8:	mov    rsi,r14
  40b9fb:	call   4031f0 <realloc@plt>
  40ba00:	mov    QWORD PTR [rip+0x75d9],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40ba07:	mov    QWORD PTR [rip+0x75da],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40ba0e:	mov    rbx,QWORD PTR [rip+0x75db]        # 412ff0 <__bss_start@@Base+0xe88>
  40ba15:	mov    cl,BYTE PTR [rip+0x75b5]        # 412fd0 <__bss_start@@Base+0xe68>
  40ba1b:	mov    DWORD PTR [rax+rbx*1],0x0
  40ba22:	lea    r14,[rbx+0x4]
  40ba26:	mov    QWORD PTR [rip+0x75c3],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40ba2d:	mov    ebp,0x1
  40ba32:	cmp    cl,0x1
  40ba35:	jne    40baa6 <read_boolean_unary_expression@@Base+0x16e6>
  40ba37:	jmp    40bc8f <read_boolean_unary_expression@@Base+0x18cf>
  40ba3c:	mov    ecx,DWORD PTR [rax+rbx*1+0x4]
  40ba40:	lea    rdx,[rbx+0x8]
  40ba44:	mov    QWORD PTR [rip+0x75a5],rdx        # 412ff0 <__bss_start@@Base+0xe88>
  40ba4b:	cmp    ecx,0x9
  40ba4e:	jne    40be3d <read_boolean_unary_expression@@Base+0x1a7d>
  40ba54:	lea    rcx,[rbx+0x14]
  40ba58:	movzx  ebp,BYTE PTR [rip+0x7599]        # 412ff8 <__bss_start@@Base+0xe90>
  40ba5f:	xor    ebp,0x1
  40ba62:	add    ebp,DWORD PTR [rax+rbx*1+0x10]
  40ba66:	mov    QWORD PTR [rip+0x7583],rcx        # 412ff0 <__bss_start@@Base+0xe88>
  40ba6d:	mov    DWORD PTR [rax+rbx*1],0xa1000000
  40ba74:	mov    QWORD PTR [rip+0x7575],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40ba7b:	mov    DWORD PTR [rax+r14*1],0x9
  40ba83:	add    r14,0x4
  40ba87:	mov    QWORD PTR [rip+0x7562],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40ba8e:	mov    rbx,r14
  40ba91:	mov    DWORD PTR [rax+rbx*1],0x0
  40ba98:	add    rbx,0x4
  40ba9c:	mov    QWORD PTR [rip+0x754d],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40baa3:	mov    r14,rbx
  40baa6:	mov    DWORD PTR [rax+r14*1],0x0
  40baae:	add    r14,0x4
  40bab2:	mov    QWORD PTR [rip+0x7537],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bab9:	mov    rbx,r14
  40babc:	mov    DWORD PTR [rax+rbx*1],ebp
  40babf:	lea    r14,[rbx+0x4]
  40bac3:	mov    QWORD PTR [rip+0x7526],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40baca:	cmp    BYTE PTR [rip+0x74ff],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40bad1:	je     40bb37 <read_boolean_unary_expression@@Base+0x1777>
  40bad3:	lea    r15,[rbx+0x8]
  40bad7:	cmp    r15,QWORD PTR [rip+0x750a]        # 412fe8 <__bss_start@@Base+0xe80>
  40bade:	jbe    40bc01 <read_boolean_unary_expression@@Base+0x1841>
  40bae4:	add    rbx,0x20007
  40baeb:	and    rbx,0xfffffffffffe0000
  40baf2:	mov    rdi,QWORD PTR [rip+0x74e7]        # 412fe0 <__bss_start@@Base+0xe78>
  40baf9:	mov    rsi,rbx
  40bafc:	call   4031f0 <realloc@plt>
  40bb01:	mov    QWORD PTR [rip+0x74d8],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bb08:	mov    QWORD PTR [rip+0x74d9],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40bb0f:	mov    r14,QWORD PTR [rip+0x74da]        # 412ff0 <__bss_start@@Base+0xe88>
  40bb16:	lea    r15,[r14+0x4]
  40bb1a:	cmp    BYTE PTR [rip+0x74af],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40bb21:	mov    DWORD PTR [rax+r14*1],0x0
  40bb29:	mov    QWORD PTR [rip+0x74c0],r15        # 412ff0 <__bss_start@@Base+0xe88>
  40bb30:	je     40bb54 <read_boolean_unary_expression@@Base+0x1794>
  40bb32:	jmp    40bc17 <read_boolean_unary_expression@@Base+0x1857>
  40bb37:	mov    rax,QWORD PTR [rip+0x74a2]        # 412fe0 <__bss_start@@Base+0xe78>
  40bb3e:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40bb46:	add    rbx,0x8
  40bb4a:	mov    QWORD PTR [rip+0x749f],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40bb51:	mov    r15,rbx
  40bb54:	mov    DWORD PTR [rax+r15*1],0x0
  40bb5c:	add    r15,0x4
  40bb60:	mov    QWORD PTR [rip+0x7489],r15        # 412ff0 <__bss_start@@Base+0xe88>
  40bb67:	mov    r14,r15
  40bb6a:	mov    DWORD PTR [rax+r14*1],0x0
  40bb72:	add    r14,0x4
  40bb76:	mov    QWORD PTR [rip+0x7473],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bb7d:	mov    rbx,r14
  40bb80:	mov    DWORD PTR [rax+rbx*1],0x0
  40bb87:	add    rbx,0x4
  40bb8b:	mov    QWORD PTR [rip+0x745e],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40bb92:	mov    r14,rbx
  40bb95:	mov    DWORD PTR [rax+r14*1],0x0
  40bb9d:	add    r14,0x4
  40bba1:	mov    QWORD PTR [rip+0x7448],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bba8:	mov    rbx,r14
  40bbab:	mov    DWORD PTR [rax+rbx*1],0x0
  40bbb2:	add    rbx,0x4
  40bbb6:	mov    QWORD PTR [rip+0x7433],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40bbbd:	mov    r14,rbx
  40bbc0:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40bbc8:	add    r14,0x4
  40bbcc:	mov    QWORD PTR [rip+0x741d],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bbd3:	mov    rcx,r14
  40bbd6:	mov    rax,QWORD PTR [rip+0x7403]        # 412fe0 <__bss_start@@Base+0xe78>
  40bbdd:	mov    DWORD PTR [rax+rcx*1],0x0
  40bbe4:	add    rcx,0x4
  40bbe8:	mov    QWORD PTR [rip+0x7401],rcx        # 412ff0 <__bss_start@@Base+0xe88>
  40bbef:	mov    BYTE PTR [rip+0x7402],0x1        # 412ff8 <__bss_start@@Base+0xe90>
  40bbf6:	add    rsp,0x8
  40bbfa:	pop    rbx
  40bbfb:	pop    r14
  40bbfd:	pop    r15
  40bbff:	pop    rbp
  40bc00:	ret    
  40bc01:	mov    rax,QWORD PTR [rip+0x73d8]        # 412fe0 <__bss_start@@Base+0xe78>
  40bc08:	mov    DWORD PTR [rax+rbx*1+0x4],0x0
  40bc10:	mov    QWORD PTR [rip+0x73d9],r15        # 412ff0 <__bss_start@@Base+0xe88>
  40bc17:	lea    rcx,[r14+0x8]
  40bc1b:	cmp    rcx,QWORD PTR [rip+0x73c6]        # 412fe8 <__bss_start@@Base+0xe80>
  40bc22:	jbe    40bcfa <read_boolean_unary_expression@@Base+0x193a>
  40bc28:	add    r14,0x20007
  40bc2f:	and    r14,0xfffffffffffe0000
  40bc36:	mov    rdi,rax
  40bc39:	mov    rsi,r14
  40bc3c:	call   4031f0 <realloc@plt>
  40bc41:	mov    QWORD PTR [rip+0x7398],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bc48:	mov    QWORD PTR [rip+0x7399],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40bc4f:	mov    r15,QWORD PTR [rip+0x739a]        # 412ff0 <__bss_start@@Base+0xe88>
  40bc56:	mov    cl,BYTE PTR [rip+0x7374]        # 412fd0 <__bss_start@@Base+0xe68>
  40bc5c:	mov    DWORD PTR [rax+r15*1],0x0
  40bc64:	lea    r14,[r15+0x4]
  40bc68:	mov    QWORD PTR [rip+0x7381],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bc6f:	cmp    cl,0x1
  40bc72:	jne    40bb6a <read_boolean_unary_expression@@Base+0x17aa>
  40bc78:	jmp    40bd0d <read_boolean_unary_expression@@Base+0x194d>
  40bc7d:	mov    DWORD PTR [rax+rbx*1],0x0
  40bc84:	lea    r14,[rbx+0x4]
  40bc88:	mov    QWORD PTR [rip+0x7361],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bc8f:	lea    rcx,[rbx+0x8]
  40bc93:	cmp    rcx,QWORD PTR [rip+0x734e]        # 412fe8 <__bss_start@@Base+0xe80>
  40bc9a:	jbe    40bd70 <read_boolean_unary_expression@@Base+0x19b0>
  40bca0:	add    rbx,0x20007
  40bca7:	and    rbx,0xfffffffffffe0000
  40bcae:	mov    rdi,rax
  40bcb1:	mov    rsi,rbx
  40bcb4:	call   4031f0 <realloc@plt>
  40bcb9:	mov    QWORD PTR [rip+0x7320],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bcc0:	mov    QWORD PTR [rip+0x7321],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40bcc7:	mov    r14,QWORD PTR [rip+0x7322]        # 412ff0 <__bss_start@@Base+0xe88>
  40bcce:	mov    cl,BYTE PTR [rip+0x72fc]        # 412fd0 <__bss_start@@Base+0xe68>
  40bcd4:	mov    DWORD PTR [rax+r14*1],0x0
  40bcdc:	lea    rbx,[r14+0x4]
  40bce0:	mov    QWORD PTR [rip+0x7309],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40bce7:	mov    ebp,0x1
  40bcec:	cmp    cl,0x1
  40bcef:	jne    40babc <read_boolean_unary_expression@@Base+0x16fc>
  40bcf5:	jmp    40bd83 <read_boolean_unary_expression@@Base+0x19c3>
  40bcfa:	mov    DWORD PTR [rax+r15*1],0x0
  40bd02:	lea    r14,[r15+0x4]
  40bd06:	mov    QWORD PTR [rip+0x72e3],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bd0d:	lea    rcx,[r15+0x8]
  40bd11:	cmp    rcx,QWORD PTR [rip+0x72d0]        # 412fe8 <__bss_start@@Base+0xe80>
  40bd18:	jbe    40bdcc <read_boolean_unary_expression@@Base+0x1a0c>
  40bd1e:	add    r15,0x20007
  40bd25:	and    r15,0xfffffffffffe0000
  40bd2c:	mov    rdi,rax
  40bd2f:	mov    rsi,r15
  40bd32:	call   4031f0 <realloc@plt>
  40bd37:	mov    QWORD PTR [rip+0x72a2],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bd3e:	mov    QWORD PTR [rip+0x72a3],r15        # 412fe8 <__bss_start@@Base+0xe80>
  40bd45:	mov    r14,QWORD PTR [rip+0x72a4]        # 412ff0 <__bss_start@@Base+0xe88>
  40bd4c:	mov    cl,BYTE PTR [rip+0x727e]        # 412fd0 <__bss_start@@Base+0xe68>
  40bd52:	mov    DWORD PTR [rax+r14*1],0x0
  40bd5a:	lea    rbx,[r14+0x4]
  40bd5e:	mov    QWORD PTR [rip+0x728b],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40bd65:	cmp    cl,0x1
  40bd68:	jne    40bb80 <read_boolean_unary_expression@@Base+0x17c0>
  40bd6e:	jmp    40bddf <read_boolean_unary_expression@@Base+0x1a1f>
  40bd70:	mov    DWORD PTR [rax+r14*1],0x0
  40bd78:	lea    rbx,[r14+0x4]
  40bd7c:	mov    QWORD PTR [rip+0x726d],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40bd83:	lea    rcx,[r14+0x8]
  40bd87:	mov    ebp,0x1
  40bd8c:	cmp    rcx,QWORD PTR [rip+0x7255]        # 412fe8 <__bss_start@@Base+0xe80>
  40bd93:	jbe    40babc <read_boolean_unary_expression@@Base+0x16fc>
  40bd99:	add    r14,0x20007
  40bda0:	and    r14,0xfffffffffffe0000
  40bda7:	mov    rdi,rax
  40bdaa:	mov    rsi,r14
  40bdad:	call   4031f0 <realloc@plt>
  40bdb2:	mov    QWORD PTR [rip+0x7227],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bdb9:	mov    QWORD PTR [rip+0x7228],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40bdc0:	mov    rbx,QWORD PTR [rip+0x7229]        # 412ff0 <__bss_start@@Base+0xe88>
  40bdc7:	jmp    40babc <read_boolean_unary_expression@@Base+0x16fc>
  40bdcc:	mov    DWORD PTR [rax+r14*1],0x0
  40bdd4:	lea    rbx,[r14+0x4]
  40bdd8:	mov    QWORD PTR [rip+0x7211],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40bddf:	lea    rcx,[r14+0x8]
  40bde3:	cmp    rcx,QWORD PTR [rip+0x71fe]        # 412fe8 <__bss_start@@Base+0xe80>
  40bdea:	jbe    40be66 <read_boolean_unary_expression@@Base+0x1aa6>
  40bdec:	add    r14,0x20007
  40bdf3:	and    r14,0xfffffffffffe0000
  40bdfa:	mov    rdi,rax
  40bdfd:	mov    rsi,r14
  40be00:	call   4031f0 <realloc@plt>
  40be05:	mov    QWORD PTR [rip+0x71d4],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40be0c:	mov    QWORD PTR [rip+0x71d5],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40be13:	mov    rbx,QWORD PTR [rip+0x71d6]        # 412ff0 <__bss_start@@Base+0xe88>
  40be1a:	mov    cl,BYTE PTR [rip+0x71b0]        # 412fd0 <__bss_start@@Base+0xe68>
  40be20:	mov    DWORD PTR [rax+rbx*1],0x0
  40be27:	lea    r14,[rbx+0x4]
  40be2b:	mov    QWORD PTR [rip+0x71be],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40be32:	cmp    cl,0x1
  40be35:	jne    40bb95 <read_boolean_unary_expression@@Base+0x17d5>
  40be3b:	jmp    40be78 <read_boolean_unary_expression@@Base+0x1ab8>
  40be3d:	mov    rax,QWORD PTR [rip+0x61b4]        # 411ff8 <stderr@GLIBC_2.2.5>
  40be44:	mov    rdi,QWORD PTR [rax]
  40be47:	mov    rdx,QWORD PTR [rip+0x717a]        # 412fc8 <__bss_start@@Base+0xe60>
  40be4e:	lea    rsi,[rip+0x228c]        # 40e0e1 <_IO_stdin_used@@Base+0x10e1>
  40be55:	xor    eax,eax
  40be57:	add    rsp,0x8
  40be5b:	pop    rbx
  40be5c:	pop    r14
  40be5e:	pop    r15
  40be60:	pop    rbp
  40be61:	jmp    403170 <fprintf@plt>
  40be66:	mov    DWORD PTR [rax+rbx*1],0x0
  40be6d:	lea    r14,[rbx+0x4]
  40be71:	mov    QWORD PTR [rip+0x7178],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40be78:	lea    rcx,[rbx+0x8]
  40be7c:	cmp    rcx,QWORD PTR [rip+0x7165]        # 412fe8 <__bss_start@@Base+0xe80>
  40be83:	jbe    40bed7 <read_boolean_unary_expression@@Base+0x1b17>
  40be85:	add    rbx,0x20007
  40be8c:	and    rbx,0xfffffffffffe0000
  40be93:	mov    rdi,rax
  40be96:	mov    rsi,rbx
  40be99:	call   4031f0 <realloc@plt>
  40be9e:	mov    QWORD PTR [rip+0x713b],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bea5:	mov    QWORD PTR [rip+0x713c],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40beac:	mov    r14,QWORD PTR [rip+0x713d]        # 412ff0 <__bss_start@@Base+0xe88>
  40beb3:	mov    cl,BYTE PTR [rip+0x7117]        # 412fd0 <__bss_start@@Base+0xe68>
  40beb9:	mov    DWORD PTR [rax+r14*1],0x0
  40bec1:	lea    rbx,[r14+0x4]
  40bec5:	mov    QWORD PTR [rip+0x7124],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40becc:	cmp    cl,0x1
  40becf:	jne    40bbab <read_boolean_unary_expression@@Base+0x17eb>
  40bed5:	jmp    40beea <read_boolean_unary_expression@@Base+0x1b2a>
  40bed7:	mov    DWORD PTR [rax+r14*1],0x0
  40bedf:	lea    rbx,[r14+0x4]
  40bee3:	mov    QWORD PTR [rip+0x7106],rbx        # 412ff0 <__bss_start@@Base+0xe88>
  40beea:	lea    rcx,[r14+0x8]
  40beee:	cmp    rcx,QWORD PTR [rip+0x70f3]        # 412fe8 <__bss_start@@Base+0xe80>
  40bef5:	jbe    40bf46 <read_boolean_unary_expression@@Base+0x1b86>
  40bef7:	add    r14,0x20007
  40befe:	and    r14,0xfffffffffffe0000
  40bf05:	mov    rdi,rax
  40bf08:	mov    rsi,r14
  40bf0b:	call   4031f0 <realloc@plt>
  40bf10:	mov    QWORD PTR [rip+0x70c9],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bf17:	mov    QWORD PTR [rip+0x70ca],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40bf1e:	mov    rbx,QWORD PTR [rip+0x70cb]        # 412ff0 <__bss_start@@Base+0xe88>
  40bf25:	lea    r14,[rbx+0x4]
  40bf29:	cmp    BYTE PTR [rip+0x70a0],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40bf30:	mov    DWORD PTR [rax+rbx*1],0x0
  40bf37:	mov    QWORD PTR [rip+0x70b2],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bf3e:	je     40bbc0 <read_boolean_unary_expression@@Base+0x1800>
  40bf44:	jmp    40bf58 <read_boolean_unary_expression@@Base+0x1b98>
  40bf46:	mov    DWORD PTR [rax+rbx*1],0x0
  40bf4d:	lea    r14,[rbx+0x4]
  40bf51:	mov    QWORD PTR [rip+0x7098],r14        # 412ff0 <__bss_start@@Base+0xe88>
  40bf58:	lea    rcx,[rbx+0x8]
  40bf5c:	cmp    rcx,QWORD PTR [rip+0x7085]        # 412fe8 <__bss_start@@Base+0xe80>
  40bf63:	jbe    40bfb7 <read_boolean_unary_expression@@Base+0x1bf7>
  40bf65:	add    rbx,0x20007
  40bf6c:	and    rbx,0xfffffffffffe0000
  40bf73:	mov    rdi,rax
  40bf76:	mov    rsi,rbx
  40bf79:	call   4031f0 <realloc@plt>
  40bf7e:	mov    QWORD PTR [rip+0x705b],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bf85:	mov    QWORD PTR [rip+0x705c],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40bf8c:	mov    dl,BYTE PTR [rip+0x703e]        # 412fd0 <__bss_start@@Base+0xe68>
  40bf92:	mov    r14,QWORD PTR [rip+0x7057]        # 412ff0 <__bss_start@@Base+0xe88>
  40bf99:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40bfa1:	lea    rcx,[r14+0x4]
  40bfa5:	mov    QWORD PTR [rip+0x7044],rcx        # 412ff0 <__bss_start@@Base+0xe88>
  40bfac:	cmp    dl,0x1
  40bfaf:	jne    40bbd6 <read_boolean_unary_expression@@Base+0x1816>
  40bfb5:	jmp    40bfca <read_boolean_unary_expression@@Base+0x1c0a>
  40bfb7:	mov    DWORD PTR [rax+r14*1],0xa3000000
  40bfbf:	lea    rcx,[r14+0x4]
  40bfc3:	mov    QWORD PTR [rip+0x7026],rcx        # 412ff0 <__bss_start@@Base+0xe88>
  40bfca:	lea    rdx,[r14+0x8]
  40bfce:	cmp    rdx,QWORD PTR [rip+0x7013]        # 412fe8 <__bss_start@@Base+0xe80>
  40bfd5:	jbe    40bbd6 <read_boolean_unary_expression@@Base+0x1816>
  40bfdb:	add    r14,0x20007
  40bfe2:	and    r14,0xfffffffffffe0000
  40bfe9:	mov    rdi,rax
  40bfec:	mov    rsi,r14
  40bfef:	call   4031f0 <realloc@plt>
  40bff4:	mov    QWORD PTR [rip+0x6fe5],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40bffb:	mov    QWORD PTR [rip+0x6fe6],r14        # 412fe8 <__bss_start@@Base+0xe80>
  40c002:	mov    rcx,QWORD PTR [rip+0x6fe7]        # 412ff0 <__bss_start@@Base+0xe88>
  40c009:	jmp    40bbd6 <read_boolean_unary_expression@@Base+0x1816>
  40c00e:	xchg   ax,ax
  40c010:	cmp    QWORD PTR [rip+0x6fc0],0x0        # 412fd8 <__bss_start@@Base+0xe70>
  40c018:	je     40c17e <read_boolean_unary_expression@@Base+0x1dbe>
  40c01e:	push   r14
  40c020:	push   rbx
  40c021:	push   rax
  40c022:	cmp    BYTE PTR [rip+0x6fa7],0x0        # 412fd0 <__bss_start@@Base+0xe68>
  40c029:	je     40c09a <read_boolean_unary_expression@@Base+0x1cda>
  40c02b:	mov    rbx,QWORD PTR [rip+0x6fbe]        # 412ff0 <__bss_start@@Base+0xe88>
  40c032:	lea    rax,[rbx+0x8]
  40c036:	cmp    rax,QWORD PTR [rip+0x6fab]        # 412fe8 <__bss_start@@Base+0xe80>
  40c03d:	jbe    40c100 <read_boolean_unary_expression@@Base+0x1d40>
  40c043:	add    rbx,0x20007
  40c04a:	and    rbx,0xfffffffffffe0000
  40c051:	mov    rdi,QWORD PTR [rip+0x6f88]        # 412fe0 <__bss_start@@Base+0xe78>
  40c058:	mov    rsi,rbx
  40c05b:	call   4031f0 <realloc@plt>
  40c060:	mov    rdi,rax
  40c063:	mov    QWORD PTR [rip+0x6f76],rax        # 412fe0 <__bss_start@@Base+0xe78>
  40c06a:	mov    QWORD PTR [rip+0x6f77],rbx        # 412fe8 <__bss_start@@Base+0xe80>
  40c071:	mov    al,BYTE PTR [rip+0x6f59]        # 412fd0 <__bss_start@@Base+0xe68>
  40c077:	mov    rsi,QWORD PTR [rip+0x6f72]        # 412ff0 <__bss_start@@Base+0xe88>
  40c07e:	mov    QWORD PTR [rdi+rsi*1],0x0
  40c086:	add    rsi,0x8
  40c08a:	mov    QWORD PTR [rip+0x6f5f],rsi        # 412ff0 <__bss_start@@Base+0xe88>
  40c091:	cmp    al,0x1
  40c093:	jne    40c0bb <read_boolean_unary_expression@@Base+0x1cfb>
  40c095:	jmp    40c121 <read_boolean_unary_expression@@Base+0x1d61>
  40c09a:	mov    rdi,QWORD PTR [rip+0x6f3f]        # 412fe0 <__bss_start@@Base+0xe78>
  40c0a1:	mov    rax,QWORD PTR [rip+0x6f48]        # 412ff0 <__bss_start@@Base+0xe88>
  40c0a8:	mov    QWORD PTR [rdi+rax*1],0x0
  40c0b0:	add    rax,0x8
  40c0b4:	mov    QWORD PTR [rip+0x6f35],rax        # 412ff0 <__bss_start@@Base+0xe88>
  40c0bb:	mov    rsi,QWORD PTR [rip+0x6f4e]        # 413010 <__bss_start@@Base+0xea8>
  40c0c2:	mov    edx,0x4
  40c0c7:	call   4030c0 <msync@plt>
  40c0cc:	cmp    eax,0xffffffff
  40c0cf:	je     40c18a <read_boolean_unary_expression@@Base+0x1dca>
  40c0d5:	mov    rdi,QWORD PTR [rip+0x6f04]        # 412fe0 <__bss_start@@Base+0xe78>
  40c0dc:	mov    rsi,QWORD PTR [rip+0x6f2d]        # 413010 <__bss_start@@Base+0xea8>
  40c0e3:	call   403210 <munmap@plt>
  40c0e8:	mov    QWORD PTR [rip+0x6eed],0x0        # 412fe0 <__bss_start@@Base+0xe78>
  40c0f3:	mov    QWORD PTR [rip+0x6f12],0x0        # 413010 <__bss_start@@Base+0xea8>
  40c0fe:	jmp    40c13e <read_boolean_unary_expression@@Base+0x1d7e>
  40c100:	mov    rdi,QWORD PTR [rip+0x6ed9]        # 412fe0 <__bss_start@@Base+0xe78>
  40c107:	mov    rsi,QWORD PTR [rip+0x6ee2]        # 412ff0 <__bss_start@@Base+0xe88>
  40c10e:	mov    QWORD PTR [rdi+rsi*1],0x0
  40c116:	add    rsi,0x8
  40c11a:	mov    QWORD PTR [rip+0x6ecf],rsi        # 412ff0 <__bss_start@@Base+0xe88>
  40c121:	mov    rcx,QWORD PTR [rip+0x6eb0]        # 412fd8 <__bss_start@@Base+0xe70>
  40c128:	mov    edx,0x1
  40c12d:	call   403250 <fwrite@plt>
  40c132:	mov    rdi,QWORD PTR [rip+0x6ea7]        # 412fe0 <__bss_start@@Base+0xe78>
  40c139:	call   403040 <free@plt>
  40c13e:	mov    rdi,QWORD PTR [rip+0x6e93]        # 412fd8 <__bss_start@@Base+0xe70>
  40c145:	call   4031d0 <fflush@plt>
  40c14a:	mov    edi,DWORD PTR [rip+0x6010]        # 412160 <__data_start@@Base+0x20>
  40c150:	call   40c5f0 <__gcov_flush@@Base+0x2c0>
  40c155:	mov    rdi,QWORD PTR [rip+0x6e7c]        # 412fd8 <__bss_start@@Base+0xe70>
  40c15c:	call   4030b0 <fclose@plt>
  40c161:	mov    QWORD PTR [rip+0x6e6c],0x0        # 412fd8 <__bss_start@@Base+0xe70>
  40c16c:	mov    QWORD PTR [rip+0x6e69],0x0        # 412fe0 <__bss_start@@Base+0xe78>
  40c177:	add    rsp,0x8
  40c17b:	pop    rbx
  40c17c:	pop    r14
  40c17e:	mov    rdi,QWORD PTR [rip+0x6e43]        # 412fc8 <__bss_start@@Base+0xe60>
  40c185:	jmp    403040 <free@plt>
  40c18a:	call   403050 <__errno_location@plt>
  40c18f:	mov    edi,DWORD PTR [rax]
  40c191:	mov    rax,QWORD PTR [rip+0x5e60]        # 411ff8 <stderr@GLIBC_2.2.5>
  40c198:	mov    r14,QWORD PTR [rax]
  40c19b:	mov    rbx,QWORD PTR [rip+0x6e26]        # 412fc8 <__bss_start@@Base+0xe60>
  40c1a2:	call   403270 <strerror@plt>
  40c1a7:	mov    rcx,rax
  40c1aa:	lea    rsi,[rip+0x1f9e]        # 40e14f <_IO_stdin_used@@Base+0x114f>
  40c1b1:	xor    eax,eax
  40c1b3:	mov    rdi,r14
  40c1b6:	mov    rdx,rbx
  40c1b9:	call   403170 <fprintf@plt>
  40c1be:	jmp    40c0d5 <read_boolean_unary_expression@@Base+0x1d15>
  40c1c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c1cd:	nop    DWORD PTR [rax]
  40c1d0:	push   rbx
  40c1d1:	mov    rbx,rdi
  40c1d4:	mov    edi,0x18
  40c1d9:	call   4031c0 <malloc@plt>
  40c1de:	mov    QWORD PTR [rax+0x8],rbx
  40c1e2:	mov    QWORD PTR [rax+0x10],0x0
  40c1ea:	lea    rcx,[rip+0x6e0f]        # 413000 <__bss_start@@Base+0xe98>
  40c1f1:	mov    QWORD PTR [rax],rcx
  40c1f4:	lea    rcx,[rip+0x74d5]        # 4136d0 <writeout_fn_list@@Base>
  40c1fb:	lea    rdx,[rcx+0x8]
  40c1ff:	mov    rsi,QWORD PTR [rcx+0x8]
  40c203:	add    rsi,0x10
  40c207:	xor    edi,edi
  40c209:	cmp    QWORD PTR [rcx],0x0
  40c20d:	setne  dil
  40c211:	cmove  rsi,rdx
  40c215:	mov    QWORD PTR [rsi],rax
  40c218:	mov    QWORD PTR [rcx+rdi*8],rax
  40c21c:	pop    rbx
  40c21d:	ret    
  40c21e:	xchg   ax,ax
  40c220:	push   r14
  40c222:	push   rbx
  40c223:	push   rax
  40c224:	lea    rax,[rip+0x74a5]        # 4136d0 <writeout_fn_list@@Base>
  40c22b:	mov    rbx,QWORD PTR [rax]
  40c22e:	test   rbx,rbx
  40c231:	je     40c253 <read_boolean_unary_expression@@Base+0x1e93>
  40c233:	lea    r14,[rip+0x6dc6]        # 413000 <__bss_start@@Base+0xe98>
  40c23a:	nop    WORD PTR [rax+rax*1+0x0]
  40c240:	cmp    QWORD PTR [rbx],r14
  40c243:	jne    40c24a <read_boolean_unary_expression@@Base+0x1e8a>
  40c245:	xor    eax,eax
  40c247:	call   QWORD PTR [rbx+0x8]
  40c24a:	mov    rbx,QWORD PTR [rbx+0x10]
  40c24e:	test   rbx,rbx
  40c251:	jne    40c240 <read_boolean_unary_expression@@Base+0x1e80>
  40c253:	add    rsp,0x8
  40c257:	pop    rbx
  40c258:	pop    r14
  40c25a:	ret    
  40c25b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c260:	push   r15
  40c262:	push   r14
  40c264:	push   r12
  40c266:	push   rbx
  40c267:	push   rax
  40c268:	lea    r14,[rip+0x7461]        # 4136d0 <writeout_fn_list@@Base>
  40c26f:	mov    rdi,QWORD PTR [r14]
  40c272:	test   rdi,rdi
  40c275:	je     40c2d2 <read_boolean_unary_expression@@Base+0x1f12>
  40c277:	xor    r12d,r12d
  40c27a:	lea    r15,[rip+0x6d7f]        # 413000 <__bss_start@@Base+0xe98>
  40c281:	jmp    40c2a0 <read_boolean_unary_expression@@Base+0x1ee0>
  40c283:	mov    QWORD PTR [r14],rbx
  40c286:	cmp    rdi,QWORD PTR [r14+0x8]
  40c28a:	jne    40c2bb <read_boolean_unary_expression@@Base+0x1efb>
  40c28c:	mov    QWORD PTR [r14+0x8],r12
  40c290:	test   r12,r12
  40c293:	jne    40c2c0 <read_boolean_unary_expression@@Base+0x1f00>
  40c295:	jmp    40c2c5 <read_boolean_unary_expression@@Base+0x1f05>
  40c297:	nop    WORD PTR [rax+rax*1+0x0]
  40c2a0:	mov    rbx,QWORD PTR [rdi+0x10]
  40c2a4:	cmp    QWORD PTR [rdi],r15
  40c2a7:	je     40c2b0 <read_boolean_unary_expression@@Base+0x1ef0>
  40c2a9:	mov    r12,rdi
  40c2ac:	jmp    40c2ca <read_boolean_unary_expression@@Base+0x1f0a>
  40c2ae:	xchg   ax,ax
  40c2b0:	cmp    rdi,QWORD PTR [r14]
  40c2b3:	je     40c283 <read_boolean_unary_expression@@Base+0x1ec3>
  40c2b5:	cmp    rdi,QWORD PTR [r14+0x8]
  40c2b9:	je     40c28c <read_boolean_unary_expression@@Base+0x1ecc>
  40c2bb:	test   r12,r12
  40c2be:	je     40c2c5 <read_boolean_unary_expression@@Base+0x1f05>
  40c2c0:	mov    QWORD PTR [r12+0x10],rbx
  40c2c5:	call   403040 <free@plt>
  40c2ca:	mov    rdi,rbx
  40c2cd:	test   rbx,rbx
  40c2d0:	jne    40c2a0 <read_boolean_unary_expression@@Base+0x1ee0>
  40c2d2:	add    rsp,0x8
  40c2d6:	pop    rbx
  40c2d7:	pop    r12
  40c2d9:	pop    r14
  40c2db:	pop    r15
  40c2dd:	ret    
  40c2de:	xchg   ax,ax
  40c2e0:	push   rbx
  40c2e1:	mov    rbx,rdi
  40c2e4:	mov    edi,0x18
  40c2e9:	call   4031c0 <malloc@plt>
  40c2ee:	mov    QWORD PTR [rax+0x8],rbx
  40c2f2:	mov    QWORD PTR [rax+0x10],0x0
  40c2fa:	lea    rcx,[rip+0x6cff]        # 413000 <__bss_start@@Base+0xe98>
  40c301:	mov    QWORD PTR [rax],rcx
  40c304:	lea    rcx,[rip+0x73b5]        # 4136c0 <flush_fn_list@@Base>
  40c30b:	lea    rdx,[rcx+0x8]
  40c30f:	mov    rsi,QWORD PTR [rcx+0x8]
  40c313:	add    rsi,0x10
  40c317:	xor    edi,edi
  40c319:	cmp    QWORD PTR [rcx],0x0
  40c31d:	setne  dil
  40c321:	cmove  rsi,rdx
  40c325:	mov    QWORD PTR [rsi],rax
  40c328:	mov    QWORD PTR [rcx+rdi*8],rax
  40c32c:	pop    rbx
  40c32d:	ret    
  40c32e:	xchg   ax,ax

000000000040c330 <__gcov_flush@@Base>:
  40c330:	push   rbx
  40c331:	lea    rax,[rip+0x7388]        # 4136c0 <flush_fn_list@@Base>
  40c338:	mov    rbx,QWORD PTR [rax]
  40c33b:	test   rbx,rbx
  40c33e:	je     40c34e <__gcov_flush@@Base+0x1e>
  40c340:	xor    eax,eax
  40c342:	call   QWORD PTR [rbx+0x8]
  40c345:	mov    rbx,QWORD PTR [rbx+0x10]
  40c349:	test   rbx,rbx
  40c34c:	jne    40c340 <__gcov_flush@@Base+0x10>
  40c34e:	pop    rbx
  40c34f:	ret    
  40c350:	push   r15
  40c352:	push   r14
  40c354:	push   r12
  40c356:	push   rbx
  40c357:	push   rax
  40c358:	lea    r14,[rip+0x7361]        # 4136c0 <flush_fn_list@@Base>
  40c35f:	mov    rdi,QWORD PTR [r14]
  40c362:	test   rdi,rdi
  40c365:	je     40c3c2 <__gcov_flush@@Base+0x92>
  40c367:	xor    r12d,r12d
  40c36a:	lea    r15,[rip+0x6c8f]        # 413000 <__bss_start@@Base+0xe98>
  40c371:	jmp    40c390 <__gcov_flush@@Base+0x60>
  40c373:	mov    QWORD PTR [r14],rbx
  40c376:	cmp    rdi,QWORD PTR [r14+0x8]
  40c37a:	jne    40c3ab <__gcov_flush@@Base+0x7b>
  40c37c:	mov    QWORD PTR [r14+0x8],r12
  40c380:	test   r12,r12
  40c383:	jne    40c3b0 <__gcov_flush@@Base+0x80>
  40c385:	jmp    40c3b5 <__gcov_flush@@Base+0x85>
  40c387:	nop    WORD PTR [rax+rax*1+0x0]
  40c390:	mov    rbx,QWORD PTR [rdi+0x10]
  40c394:	cmp    QWORD PTR [rdi],r15
  40c397:	je     40c3a0 <__gcov_flush@@Base+0x70>
  40c399:	mov    r12,rdi
  40c39c:	jmp    40c3ba <__gcov_flush@@Base+0x8a>
  40c39e:	xchg   ax,ax
  40c3a0:	cmp    rdi,QWORD PTR [r14]
  40c3a3:	je     40c373 <__gcov_flush@@Base+0x43>
  40c3a5:	cmp    rdi,QWORD PTR [r14+0x8]
  40c3a9:	je     40c37c <__gcov_flush@@Base+0x4c>
  40c3ab:	test   r12,r12
  40c3ae:	je     40c3b5 <__gcov_flush@@Base+0x85>
  40c3b0:	mov    QWORD PTR [r12+0x10],rbx
  40c3b5:	call   403040 <free@plt>
  40c3ba:	mov    rdi,rbx
  40c3bd:	test   rbx,rbx
  40c3c0:	jne    40c390 <__gcov_flush@@Base+0x60>
  40c3c2:	add    rsp,0x8
  40c3c6:	pop    rbx
  40c3c7:	pop    r12
  40c3c9:	pop    r14
  40c3cb:	pop    r15
  40c3cd:	ret    
  40c3ce:	xchg   ax,ax
  40c3d0:	push   r14
  40c3d2:	push   rbx
  40c3d3:	push   rax
  40c3d4:	mov    r14,rsi
  40c3d7:	test   rdi,rdi
  40c3da:	je     40c427 <__gcov_flush@@Base+0xf7>
  40c3dc:	mov    rbx,rdi
  40c3df:	mov    edi,0x18
  40c3e4:	call   4031c0 <malloc@plt>
  40c3e9:	mov    QWORD PTR [rax+0x8],rbx
  40c3ed:	mov    QWORD PTR [rax+0x10],0x0
  40c3f5:	lea    rcx,[rip+0x6c04]        # 413000 <__bss_start@@Base+0xe98>
  40c3fc:	mov    QWORD PTR [rax],rcx
  40c3ff:	lea    rcx,[rip+0x72ca]        # 4136d0 <writeout_fn_list@@Base>
  40c406:	lea    rdx,[rcx+0x8]
  40c40a:	mov    rsi,QWORD PTR [rcx+0x8]
  40c40e:	add    rsi,0x10
  40c412:	xor    edi,edi
  40c414:	cmp    QWORD PTR [rcx],0x0
  40c418:	setne  dil
  40c41c:	cmove  rsi,rdx
  40c420:	mov    QWORD PTR [rsi],rax
  40c423:	mov    QWORD PTR [rcx+rdi*8],rax
  40c427:	test   r14,r14
  40c42a:	je     40c474 <__gcov_flush@@Base+0x144>
  40c42c:	mov    edi,0x18
  40c431:	call   4031c0 <malloc@plt>
  40c436:	mov    QWORD PTR [rax+0x8],r14
  40c43a:	mov    QWORD PTR [rax+0x10],0x0
  40c442:	lea    rcx,[rip+0x6bb7]        # 413000 <__bss_start@@Base+0xe98>
  40c449:	mov    QWORD PTR [rax],rcx
  40c44c:	lea    rcx,[rip+0x726d]        # 4136c0 <flush_fn_list@@Base>
  40c453:	lea    rdx,[rcx+0x8]
  40c457:	mov    rsi,QWORD PTR [rcx+0x8]
  40c45b:	add    rsi,0x10
  40c45f:	xor    edi,edi
  40c461:	cmp    QWORD PTR [rcx],0x0
  40c465:	setne  dil
  40c469:	cmove  rsi,rdx
  40c46d:	mov    QWORD PTR [rsi],rax
  40c470:	mov    QWORD PTR [rcx+rdi*8],rax
  40c474:	cmp    BYTE PTR [rip+0x6b8d],0x0        # 413008 <__bss_start@@Base+0xea0>
  40c47b:	je     40c485 <__gcov_flush@@Base+0x155>
  40c47d:	add    rsp,0x8
  40c481:	pop    rbx
  40c482:	pop    r14
  40c484:	ret    
  40c485:	mov    BYTE PTR [rip+0x6b7c],0x1        # 413008 <__bss_start@@Base+0xea0>
  40c48c:	lea    rdi,[rip+0xfffffffffffffebd]        # 40c350 <__gcov_flush@@Base+0x20>
  40c493:	call   40c940 <__libc_csu_fini@@Base+0x10>
  40c498:	lea    rdi,[rip+0xfffffffffffffdc1]        # 40c260 <read_boolean_unary_expression@@Base+0x1ea0>
  40c49f:	call   40c940 <__libc_csu_fini@@Base+0x10>
  40c4a4:	lea    rdi,[rip+0xfffffffffffffd75]        # 40c220 <read_boolean_unary_expression@@Base+0x1e60>
  40c4ab:	add    rsp,0x8
  40c4af:	pop    rbx
  40c4b0:	pop    r14
  40c4b2:	jmp    40c940 <__libc_csu_fini@@Base+0x10>
  40c4b7:	nop
  40c4b8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c4c0:	push   r15
  40c4c2:	push   r14
  40c4c4:	push   rbx
  40c4c5:	mov    r14,rdi
  40c4c8:	lea    rbx,[rdi+0x1]
  40c4cc:	lea    r15,[rip+0x5c91]        # 412164 <lprofDirMode@@Base>
  40c4d3:	jmp    40c4e4 <__gcov_flush@@Base+0x1b4>
  40c4d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4df:	nop
  40c4e0:	add    rbx,0x1
  40c4e4:	movzx  eax,BYTE PTR [rbx]
  40c4e7:	cmp    al,0x2f
  40c4e9:	je     40c500 <__gcov_flush@@Base+0x1d0>
  40c4eb:	test   al,al
  40c4ed:	jne    40c4e0 <__gcov_flush@@Base+0x1b0>
  40c4ef:	jmp    40c513 <__gcov_flush@@Base+0x1e3>
  40c4f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  40c500:	mov    BYTE PTR [rbx],0x0
  40c503:	mov    esi,DWORD PTR [r15]
  40c506:	mov    rdi,r14
  40c509:	call   403080 <mkdir@plt>
  40c50e:	mov    BYTE PTR [rbx],0x2f
  40c511:	jmp    40c4e0 <__gcov_flush@@Base+0x1b0>
  40c513:	pop    rbx
  40c514:	pop    r14
  40c516:	pop    r15
  40c518:	ret    
  40c519:	nop    DWORD PTR [rax+0x0]
  40c520:	lea    rax,[rip+0x5c3d]        # 412164 <lprofDirMode@@Base>
  40c527:	mov    eax,DWORD PTR [rax]
  40c529:	ret    
  40c52a:	nop    WORD PTR [rax+rax*1+0x0]
  40c530:	lea    rax,[rip+0x5c2d]        # 412164 <lprofDirMode@@Base>
  40c537:	mov    DWORD PTR [rax],edi
  40c539:	ret    
  40c53a:	nop    WORD PTR [rax+rax*1+0x0]
  40c540:	push   rbp
  40c541:	push   rbx
  40c542:	sub    rsp,0x188
  40c549:	mov    ebp,esi
  40c54b:	mov    rbx,rdi
  40c54e:	mov    rdi,rsp
  40c551:	call   403130 <uname@plt>
  40c556:	test   eax,eax
  40c558:	js     40c56c <__gcov_flush@@Base+0x23c>
  40c55a:	lea    rsi,[rsp+0x41]
  40c55f:	movsxd rdx,ebp
  40c562:	mov    rdi,rbx
  40c565:	call   403060 <strncpy@plt>
  40c56a:	xor    eax,eax
  40c56c:	add    rsp,0x188
  40c573:	pop    rbx
  40c574:	pop    rbp
  40c575:	ret    
  40c576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c580:	push   rbp
  40c581:	push   r14
  40c583:	push   rbx
  40c584:	sub    rsp,0x20
  40c588:	mov    ebx,edi
  40c58a:	mov    WORD PTR [rsp+0x2],0x0
  40c591:	xorps  xmm0,xmm0
  40c594:	movups XMMWORD PTR [rsp+0x8],xmm0
  40c599:	call   4030a0 <getpid@plt>
  40c59e:	mov    DWORD PTR [rsp+0x18],eax
  40c5a2:	mov    WORD PTR [rsp],0x1
  40c5a8:	mov    r14,rsp
  40c5ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40c5b0:	xor    ebp,ebp
  40c5b2:	mov    esi,0x7
  40c5b7:	xor    eax,eax
  40c5b9:	mov    edi,ebx
  40c5bb:	mov    rdx,r14
  40c5be:	call   403090 <fcntl@plt>
  40c5c3:	cmp    eax,0xffffffff
  40c5c6:	jne    40c5de <__gcov_flush@@Base+0x2ae>
  40c5c8:	call   403050 <__errno_location@plt>
  40c5cd:	mov    eax,DWORD PTR [rax]
  40c5cf:	cmp    eax,0x4
  40c5d2:	je     40c5b0 <__gcov_flush@@Base+0x280>
  40c5d4:	cmp    eax,0x25
  40c5d7:	jne    40c5de <__gcov_flush@@Base+0x2ae>
  40c5d9:	mov    ebp,0xffffffff
  40c5de:	mov    eax,ebp
  40c5e0:	add    rsp,0x20
  40c5e4:	pop    rbx
  40c5e5:	pop    r14
  40c5e7:	pop    rbp
  40c5e8:	ret    
  40c5e9:	nop    DWORD PTR [rax+0x0]
  40c5f0:	push   rbp
  40c5f1:	push   r14
  40c5f3:	push   rbx
  40c5f4:	sub    rsp,0x20
  40c5f8:	mov    ebx,edi
  40c5fa:	mov    WORD PTR [rsp+0x2],0x0
  40c601:	xorps  xmm0,xmm0
  40c604:	movups XMMWORD PTR [rsp+0x8],xmm0
  40c609:	call   4030a0 <getpid@plt>
  40c60e:	mov    DWORD PTR [rsp+0x18],eax
  40c612:	mov    WORD PTR [rsp],0x2
  40c618:	mov    r14,rsp
  40c61b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c620:	xor    ebp,ebp
  40c622:	mov    esi,0x7
  40c627:	xor    eax,eax
  40c629:	mov    edi,ebx
  40c62b:	mov    rdx,r14
  40c62e:	call   403090 <fcntl@plt>
  40c633:	cmp    eax,0xffffffff
  40c636:	jne    40c64e <__gcov_flush@@Base+0x31e>
  40c638:	call   403050 <__errno_location@plt>
  40c63d:	mov    eax,DWORD PTR [rax]
  40c63f:	cmp    eax,0x4
  40c642:	je     40c620 <__gcov_flush@@Base+0x2f0>
  40c644:	cmp    eax,0x25
  40c647:	jne    40c64e <__gcov_flush@@Base+0x31e>
  40c649:	mov    ebp,0xffffffff
  40c64e:	mov    eax,ebp
  40c650:	add    rsp,0x20
  40c654:	pop    rbx
  40c655:	pop    r14
  40c657:	pop    rbp
  40c658:	ret    
  40c659:	nop    DWORD PTR [rax+0x0]
  40c660:	push   rbp
  40c661:	push   r14
  40c663:	push   rbx
  40c664:	sub    rsp,0x20
  40c668:	xor    ebx,ebx
  40c66a:	mov    esi,0x42
  40c66f:	mov    edx,0x1b6
  40c674:	xor    eax,eax
  40c676:	call   403220 <open@plt>
  40c67b:	test   eax,eax
  40c67d:	js     40c6da <__gcov_flush@@Base+0x3aa>
  40c67f:	mov    ebp,eax
  40c681:	mov    WORD PTR [rsp+0x2],0x0
  40c688:	xorps  xmm0,xmm0
  40c68b:	movups XMMWORD PTR [rsp+0x8],xmm0
  40c690:	call   4030a0 <getpid@plt>
  40c695:	mov    DWORD PTR [rsp+0x18],eax
  40c699:	mov    WORD PTR [rsp],0x1
  40c69f:	mov    r14,rsp
  40c6a2:	mov    esi,0x7
  40c6a7:	xor    eax,eax
  40c6a9:	mov    edi,ebp
  40c6ab:	mov    rdx,r14
  40c6ae:	call   403090 <fcntl@plt>
  40c6b3:	cmp    eax,0xffffffff
  40c6b6:	jne    40c6c9 <__gcov_flush@@Base+0x399>
  40c6b8:	call   403050 <__errno_location@plt>
  40c6bd:	mov    eax,DWORD PTR [rax]
  40c6bf:	cmp    eax,0x4
  40c6c2:	je     40c6a2 <__gcov_flush@@Base+0x372>
  40c6c4:	cmp    eax,0x25
  40c6c7:	je     40c6e6 <__gcov_flush@@Base+0x3b6>
  40c6c9:	lea    rsi,[rip+0x18fe]        # 40dfce <_IO_stdin_used@@Base+0xfce>
  40c6d0:	mov    edi,ebp
  40c6d2:	call   403200 <fdopen@plt>
  40c6d7:	mov    rbx,rax
  40c6da:	mov    rax,rbx
  40c6dd:	add    rsp,0x20
  40c6e1:	pop    rbx
  40c6e2:	pop    r14
  40c6e4:	pop    rbp
  40c6e5:	ret    
  40c6e6:	mov    rax,QWORD PTR [rip+0x590b]        # 411ff8 <stderr@GLIBC_2.2.5>
  40c6ed:	mov    rdi,QWORD PTR [rax]
  40c6f0:	lea    rsi,[rip+0x1a79]        # 40e170 <_IO_stdin_used@@Base+0x1170>
  40c6f7:	lea    rdx,[rip+0x1abb]        # 40e1b9 <_IO_stdin_used@@Base+0x11b9>
  40c6fe:	xor    eax,eax
  40c700:	call   403170 <fprintf@plt>
  40c705:	jmp    40c6c9 <__gcov_flush@@Base+0x399>
  40c707:	nop    WORD PTR [rax+rax*1+0x0]
  40c710:	push   r15
  40c712:	push   r14
  40c714:	push   r12
  40c716:	push   rbx
  40c717:	push   rax
  40c718:	mov    r14,rsi
  40c71b:	mov    r15,rdi
  40c71e:	lea    rdi,[rip+0x1ac2]        # 40e1e7 <_IO_stdin_used@@Base+0x11e7>
  40c725:	call   403030 <getenv@plt>
  40c72a:	mov    rbx,rax
  40c72d:	lea    rdi,[rip+0x1abf]        # 40e1f3 <_IO_stdin_used@@Base+0x11f3>
  40c734:	call   403030 <getenv@plt>
  40c739:	mov    QWORD PTR [r14],0x0
  40c740:	mov    DWORD PTR [r15],0x0
  40c747:	test   rbx,rbx
  40c74a:	je     40c781 <__gcov_flush@@Base+0x451>
  40c74c:	xor    r12d,r12d
  40c74f:	cmp    BYTE PTR [rbx],0x0
  40c752:	je     40c781 <__gcov_flush@@Base+0x451>
  40c754:	test   rax,rax
  40c757:	je     40c771 <__gcov_flush@@Base+0x441>
  40c759:	xor    r12d,r12d
  40c75c:	xor    esi,esi
  40c75e:	mov    edx,0xa
  40c763:	mov    rdi,rax
  40c766:	call   403190 <strtol@plt>
  40c76b:	test   eax,eax
  40c76d:	cmovns r12d,eax
  40c771:	mov    DWORD PTR [r15],r12d
  40c774:	mov    rdi,rbx
  40c777:	call   4030d0 <strlen@plt>
  40c77c:	mov    QWORD PTR [r14],rax
  40c77f:	jmp    40c783 <__gcov_flush@@Base+0x453>
  40c781:	xor    ebx,ebx
  40c783:	mov    rax,rbx
  40c786:	add    rsp,0x8
  40c78a:	pop    rbx
  40c78b:	pop    r12
  40c78d:	pop    r14
  40c78f:	pop    r15
  40c791:	ret    
  40c792:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c79c:	nop    DWORD PTR [rax+0x0]
  40c7a0:	push   r15
  40c7a2:	push   r14
  40c7a4:	push   r12
  40c7a6:	push   rbx
  40c7a7:	push   rax
  40c7a8:	mov    r15,rcx
  40c7ab:	mov    r12,rdx
  40c7ae:	mov    rbx,rsi
  40c7b1:	mov    r14,rdi
  40c7b4:	test   r8d,r8d
  40c7b7:	jle    40c7df <__gcov_flush@@Base+0x4af>
  40c7b9:	lea    rax,[rbx+0x1]
  40c7bd:	xor    ecx,ecx
  40c7bf:	nop
  40c7c0:	movzx  edx,BYTE PTR [rax]
  40c7c3:	cmp    dl,0x2f
  40c7c6:	je     40c7d0 <__gcov_flush@@Base+0x4a0>
  40c7c8:	test   dl,dl
  40c7ca:	jne    40c7d6 <__gcov_flush@@Base+0x4a6>
  40c7cc:	jmp    40c7df <__gcov_flush@@Base+0x4af>
  40c7ce:	xchg   ax,ax
  40c7d0:	add    ecx,0x1
  40c7d3:	mov    rbx,rax
  40c7d6:	add    rax,0x1
  40c7da:	cmp    ecx,r8d
  40c7dd:	jl     40c7c0 <__gcov_flush@@Base+0x490>
  40c7df:	mov    rdi,r14
  40c7e2:	mov    rsi,r12
  40c7e5:	mov    rdx,r15
  40c7e8:	call   4031a0 <memcpy@plt>
  40c7ed:	cmp    BYTE PTR [r12+r15*1-0x1],0x2f
  40c7f3:	je     40c7fe <__gcov_flush@@Base+0x4ce>
  40c7f5:	mov    BYTE PTR [r14+r15*1],0x2f
  40c7fa:	add    r15,0x1
  40c7fe:	add    r14,r15
  40c801:	mov    rdi,rbx
  40c804:	call   4030d0 <strlen@plt>
  40c809:	lea    rdx,[rax+0x1]
  40c80d:	mov    rdi,r14
  40c810:	mov    rsi,rbx
  40c813:	add    rsp,0x8
  40c817:	pop    rbx
  40c818:	pop    r12
  40c81a:	pop    r14
  40c81c:	pop    r15
  40c81e:	jmp    4031a0 <memcpy@plt>
  40c823:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c82d:	nop    DWORD PTR [rax]
  40c830:	mov    esi,0x2f
  40c835:	jmp    403100 <strchr@plt>
  40c83a:	nop    WORD PTR [rax+rax*1+0x0]
  40c840:	mov    esi,0x2f
  40c845:	jmp    403120 <strrchr@plt>
  40c84a:	nop    WORD PTR [rax+rax*1+0x0]
  40c850:	push   rax
  40c851:	mov    DWORD PTR [rsp+0x4],0x0
  40c859:	lea    rsi,[rsp+0x4]
  40c85e:	mov    edi,0x2
  40c863:	xor    eax,eax
  40c865:	call   4031b0 <prctl@plt>
  40c86a:	mov    ecx,DWORD PTR [rsp+0x4]
  40c86e:	test   eax,eax
  40c870:	jne    40c889 <__gcov_flush@@Base+0x559>
  40c872:	cmp    ecx,0x9
  40c875:	jne    40c889 <__gcov_flush@@Base+0x559>
  40c877:	mov    edi,0x1
  40c87c:	xor    esi,esi
  40c87e:	xor    eax,eax
  40c880:	call   4031b0 <prctl@plt>
  40c885:	mov    ecx,DWORD PTR [rsp+0x4]
  40c889:	xor    eax,eax
  40c88b:	cmp    ecx,0x9
  40c88e:	sete   al
  40c891:	pop    rcx
  40c892:	ret    
  40c893:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c89d:	nop    DWORD PTR [rax]
  40c8a0:	mov    edi,0x1
  40c8a5:	mov    esi,0x9
  40c8aa:	xor    eax,eax
  40c8ac:	jmp    4031b0 <prctl@plt>
  40c8b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c8bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c8c0 <__libc_csu_init@@Base>:
  40c8c0:	endbr64 
  40c8c4:	push   r15
  40c8c6:	lea    r15,[rip+0x4653]        # 410f20 <_IO_stdin_used@@Base+0x3f20>
  40c8cd:	push   r14
  40c8cf:	mov    r14,rdx
  40c8d2:	push   r13
  40c8d4:	mov    r13,rsi
  40c8d7:	push   r12
  40c8d9:	mov    r12d,edi
  40c8dc:	push   rbp
  40c8dd:	lea    rbp,[rip+0x4664]        # 410f48 <_IO_stdin_used@@Base+0x3f48>
  40c8e4:	push   rbx
  40c8e5:	sub    rbp,r15
  40c8e8:	sub    rsp,0x8
  40c8ec:	call   403000 <getenv@plt-0x30>
  40c8f1:	sar    rbp,0x3
  40c8f5:	je     40c916 <__libc_csu_init@@Base+0x56>
  40c8f7:	xor    ebx,ebx
  40c8f9:	nop    DWORD PTR [rax+0x0]
  40c900:	mov    rdx,r14
  40c903:	mov    rsi,r13
  40c906:	mov    edi,r12d
  40c909:	call   QWORD PTR [r15+rbx*8]
  40c90d:	add    rbx,0x1
  40c911:	cmp    rbp,rbx
  40c914:	jne    40c900 <__libc_csu_init@@Base+0x40>
  40c916:	add    rsp,0x8
  40c91a:	pop    rbx
  40c91b:	pop    rbp
  40c91c:	pop    r12
  40c91e:	pop    r13
  40c920:	pop    r14
  40c922:	pop    r15
  40c924:	ret    
  40c925:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040c930 <__libc_csu_fini@@Base>:
  40c930:	endbr64 
  40c934:	ret    
  40c935:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c93f:	nop
  40c940:	endbr64 
  40c944:	mov    rdx,QWORD PTR [rip+0x57fd]        # 412148 <__data_start@@Base+0x8>
  40c94b:	xor    esi,esi
  40c94d:	jmp    403230 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000040c954 <.fini>:
  40c954:	endbr64 
  40c958:	sub    rsp,0x8
  40c95c:	add    rsp,0x8
  40c960:	ret    
