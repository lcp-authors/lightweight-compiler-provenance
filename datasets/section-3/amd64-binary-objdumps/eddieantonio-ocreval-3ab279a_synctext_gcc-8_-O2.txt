
../repos/eddieantonio-ocreval-3ab279a/synctext/synctext:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x4fd9]        # 405fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1da>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x4fe2]        # 406008 <error@@Base+0x2b18>
  401026:	bnd jmp QWORD PTR [rip+0x4fe3]        # 406010 <error@@Base+0x2b20>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1d0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1d0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1d0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1d0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1d0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1d0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1d0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1d0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1d0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1d0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1d0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1d0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1d0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1d0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1d0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1d0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1d0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1d0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1d0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1d0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1d0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1d0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1d0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1d0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1d0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1d0>
  4011ef:	nop

Disassembly of section .plt.sec:

00000000004011f0 <free@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x4e1d]        # 406018 <free@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <unlink@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x4e15]        # 406020 <unlink@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <utf8proc_get_property@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x4e0d]        # 406028 <utf8proc_get_property>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <utf8proc_encode_char@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x4e05]        # 406030 <utf8proc_encode_char>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <getpid@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x4dfd]        # 406038 <getpid@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <fclose@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x4df5]        # 406040 <fclose@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <strlen@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x4ded]        # 406048 <strlen@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <__stack_chk_fail@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x4de5]        # 406050 <__stack_chk_fail@GLIBC_2.4>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <rewind@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x4ddd]        # 406058 <rewind@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <utf8proc_tolower@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x4dd5]        # 406060 <utf8proc_tolower>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <fputs@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x4dcd]        # 406068 <fputs@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fgets@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x4dc5]        # 406070 <fgets@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <utf8proc_iterate@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x4dbd]        # 406078 <utf8proc_iterate>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <calloc@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x4db5]        # 406080 <calloc@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <putc@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x4dad]        # 406088 <putc@GLIBC_2.2.5>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <__sysv_signal@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x4da5]        # 406090 <__sysv_signal@GLIBC_2.2.5>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <utf8proc_category@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x4d9d]        # 406098 <utf8proc_category>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__xstat@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x4d95]        # 4060a0 <__xstat@GLIBC_2.2.5>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <__printf_chk@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x4d8d]        # 4060a8 <__printf_chk@GLIBC_2.3.4>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__fread_chk@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x4d85]        # 4060b0 <__fread_chk@GLIBC_2.7>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <fopen@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x4d7d]        # 4060b8 <fopen@GLIBC_2.2.5>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <exit@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x4d75]        # 4060c0 <exit@GLIBC_2.2.5>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <fwrite@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x4d6d]        # 4060c8 <fwrite@GLIBC_2.2.5>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <__fprintf_chk@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x4d65]        # 4060d0 <__fprintf_chk@GLIBC_2.3.4>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <utf8proc_errmsg@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x4d5d]        # 4060d8 <utf8proc_errmsg>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <strdup@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x4d55]        # 4060e0 <strdup@GLIBC_2.2.5>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <getc@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x4d4d]        # 4060e8 <getc@GLIBC_2.2.5>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <__sprintf_chk@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x4d45]        # 4060f0 <__sprintf_chk@GLIBC_2.3.4>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013b0 <error@@Base-0x2140>:
  4013b0:	endbr64 
  4013b4:	push   r15
  4013b6:	lea    rdx,[rip+0x2c8b]        # 404048 <error@@Base+0xb58>
  4013bd:	push   r14
  4013bf:	push   r13
  4013c1:	push   r12
  4013c3:	mov    r12,rsi
  4013c6:	push   rbp
  4013c7:	push   rbx
  4013c8:	sub    rsp,0x68
  4013cc:	mov    DWORD PTR [rsp+0xc],edi
  4013d0:	mov    rcx,0x406120
  4013d7:	lea    rdi,[rsp+0xc]
  4013dc:	mov    rax,QWORD PTR fs:0x28
  4013e5:	mov    QWORD PTR [rsp+0x58],rax
  4013ea:	xor    eax,eax
  4013ec:	call   403670 <error@@Base+0x180>
  4013f1:	movsxd rdi,DWORD PTR [rsp+0xc]
  4013f6:	cmp    edi,0x1
  4013f9:	jle    4014bc <__sprintf_chk@plt+0x11c>
  4013ff:	mov    r15,0x406245
  401406:	cmp    BYTE PTR [r15],0x0
  40140a:	je     401415 <__sprintf_chk@plt+0x75>
  40140c:	cmp    edi,0x2
  40140f:	jne    4014bc <__sprintf_chk@plt+0x11c>
  401415:	mov    esi,0x20
  40141a:	xor    eax,eax
  40141c:	call   403540 <error@@Base+0x50>
  401421:	mov    esi,DWORD PTR [rsp+0xc]
  401425:	mov    r14,rax
  401428:	test   esi,esi
  40142a:	jle    401460 <__sprintf_chk@plt+0xc0>
  40142c:	mov    r13,0x406110
  401433:	mov    rbp,rax
  401436:	xor    ebx,ebx
  401438:	nop    DWORD PTR [rax+rax*1+0x0]
  401440:	mov    rsi,QWORD PTR [r12+rbx*8]
  401444:	mov    rdi,rbp
  401447:	mov    rdx,r13
  40144a:	xor    eax,eax
  40144c:	call   402ad0 <__sprintf_chk@plt+0x1730>
  401451:	mov    esi,DWORD PTR [rsp+0xc]
  401455:	inc    rbx
  401458:	add    rbp,0x20
  40145c:	cmp    esi,ebx
  40145e:	jg     401440 <__sprintf_chk@plt+0xa0>
  401460:	cmp    BYTE PTR [r15],0x0
  401464:	jne    4014d9 <__sprintf_chk@plt+0x139>
  401466:	mov    rax,0x406246
  40146d:	lea    rbx,[rsp+0x10]
  401472:	cmp    BYTE PTR [rax],0x0
  401475:	jne    40147c <__sprintf_chk@plt+0xdc>
  401477:	cmp    esi,0x2
  40147a:	jle    4014ca <__sprintf_chk@plt+0x12a>
  40147c:	mov    rdx,r14
  40147f:	mov    rdi,rbx
  401482:	xor    eax,eax
  401484:	call   402480 <__sprintf_chk@plt+0x10e0>
  401489:	mov    esi,DWORD PTR [rsp+0xc]
  40148d:	mov    rdx,r14
  401490:	mov    rdi,rbx
  401493:	xor    eax,eax
  401495:	call   4017a0 <__sprintf_chk@plt+0x400>
  40149a:	mov    esi,DWORD PTR [rsp+0xc]
  40149e:	mov    rcx,r12
  4014a1:	mov    rdx,r14
  4014a4:	mov    rdi,rbx
  4014a7:	xor    eax,eax
  4014a9:	call   401940 <__sprintf_chk@plt+0x5a0>
  4014ae:	xor    eax,eax
  4014b0:	call   401610 <__sprintf_chk@plt+0x270>
  4014b5:	xor    eax,eax
  4014b7:	call   403480 <__sprintf_chk@plt+0x20e0>
  4014bc:	lea    rdi,[rip+0x2b65]        # 404028 <error@@Base+0xb38>
  4014c3:	xor    eax,eax
  4014c5:	call   4034f0 <error@@Base>
  4014ca:	mov    rsi,r14
  4014cd:	mov    rdi,rbx
  4014d0:	xor    eax,eax
  4014d2:	call   4026e0 <__sprintf_chk@plt+0x1340>
  4014d7:	jmp    401489 <__sprintf_chk@plt+0xe9>
  4014d9:	lea    rbp,[r14+0x20]
  4014dd:	lea    rbx,[rsp+0x30]
  4014e2:	lea    r12,[rsp+0x10]
  4014e7:	mov    rcx,rbp
  4014ea:	mov    rdx,r14
  4014ed:	mov    rsi,rbx
  4014f0:	mov    rdi,r12
  4014f3:	xor    eax,eax
  4014f5:	call   402500 <__sprintf_chk@plt+0x1160>
  4014fa:	mov    rsi,r14
  4014fd:	mov    rdi,r12
  401500:	xor    eax,eax
  401502:	call   401660 <__sprintf_chk@plt+0x2c0>
  401507:	mov    rsi,rbp
  40150a:	mov    rdi,rbx
  40150d:	xor    eax,eax
  40150f:	call   401660 <__sprintf_chk@plt+0x2c0>
  401514:	jmp    4014ae <__sprintf_chk@plt+0x10e>
  401516:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401520:	endbr64 
  401524:	xor    ebp,ebp
  401526:	mov    r9,rdx
  401529:	pop    rsi
  40152a:	mov    rdx,rsp
  40152d:	and    rsp,0xfffffffffffffff0
  401531:	push   rax
  401532:	push   rsp
  401533:	mov    r8,0x403c30
  40153a:	mov    rcx,0x403bc0
  401541:	mov    rdi,0x4013b0
  401548:	call   QWORD PTR [rip+0x4a92]        # 405fe0 <error@@Base+0x2af0>
  40154e:	hlt    
  40154f:	nop
  401550:	endbr64 
  401554:	ret    
  401555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40155f:	nop
  401560:	mov    eax,0x4061a0
  401565:	cmp    rax,0x4061a0
  40156b:	je     401580 <__sprintf_chk@plt+0x1e0>
  40156d:	mov    eax,0x0
  401572:	test   rax,rax
  401575:	je     401580 <__sprintf_chk@plt+0x1e0>
  401577:	mov    edi,0x4061a0
  40157c:	jmp    rax
  40157e:	xchg   ax,ax
  401580:	ret    
  401581:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40158c:	nop    DWORD PTR [rax+0x0]
  401590:	mov    esi,0x4061a0
  401595:	sub    rsi,0x4061a0
  40159c:	sar    rsi,0x3
  4015a0:	mov    rax,rsi
  4015a3:	shr    rax,0x3f
  4015a7:	add    rsi,rax
  4015aa:	sar    rsi,1
  4015ad:	je     4015c0 <__sprintf_chk@plt+0x220>
  4015af:	mov    eax,0x0
  4015b4:	test   rax,rax
  4015b7:	je     4015c0 <__sprintf_chk@plt+0x220>
  4015b9:	mov    edi,0x4061a0
  4015be:	jmp    rax
  4015c0:	ret    
  4015c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015cc:	nop    DWORD PTR [rax+0x0]
  4015d0:	endbr64 
  4015d4:	cmp    BYTE PTR [rip+0x4bc5],0x0        # 4061a0 <error@@Base+0x2cb0>
  4015db:	jne    4015f0 <__sprintf_chk@plt+0x250>
  4015dd:	push   rbp
  4015de:	mov    rbp,rsp
  4015e1:	call   401560 <__sprintf_chk@plt+0x1c0>
  4015e6:	mov    BYTE PTR [rip+0x4bb3],0x1        # 4061a0 <error@@Base+0x2cb0>
  4015ed:	pop    rbp
  4015ee:	ret    
  4015ef:	nop
  4015f0:	ret    
  4015f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4015fc:	nop    DWORD PTR [rax+0x0]
  401600:	endbr64 
  401604:	jmp    401590 <__sprintf_chk@plt+0x1f0>
  401606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401610:	endbr64 
  401614:	push   rbp
  401615:	push   rbx
  401616:	mov    ebx,0x4f
  40161b:	sub    rsp,0x8
  40161f:	mov    rbp,QWORD PTR [rip+0x49aa]        # 405fd0 <error@@Base+0x2ae0>
  401626:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401630:	mov    rsi,QWORD PTR [rbp+0x0]
  401634:	mov    edi,0x3d
  401639:	call   4012d0 <putc@plt>
  40163e:	dec    bx
  401641:	jne    401630 <__sprintf_chk@plt+0x290>
  401643:	mov    rsi,QWORD PTR [rbp+0x0]
  401647:	add    rsp,0x8
  40164b:	pop    rbx
  40164c:	mov    edi,0xa
  401651:	pop    rbp
  401652:	jmp    4012d0 <putc@plt>
  401657:	nop    WORD PTR [rax+rax*1+0x0]
  401660:	endbr64 
  401664:	push   r15
  401666:	push   r14
  401668:	push   r13
  40166a:	mov    r13,rsi
  40166d:	push   r12
  40166f:	push   rbp
  401670:	push   rbx
  401671:	mov    rbx,rdi
  401674:	sub    rsp,0x28
  401678:	mov    rax,QWORD PTR fs:0x28
  401681:	mov    QWORD PTR [rsp+0x18],rax
  401686:	xor    eax,eax
  401688:	call   401610 <__sprintf_chk@plt+0x270>
  40168d:	mov    rax,QWORD PTR [rip+0x493c]        # 405fd0 <error@@Base+0x2ae0>
  401694:	mov    edi,0xa
  401699:	mov    rsi,QWORD PTR [rax]
  40169c:	call   4012d0 <putc@plt>
  4016a1:	mov    r14,QWORD PTR [rbx]
  4016a4:	test   r14,r14
  4016a7:	je     401762 <__sprintf_chk@plt+0x3c2>
  4016ad:	lea    rbx,[rsp+0xf]
  4016b2:	lea    r12,[rip+0x2951]        # 40400a <error@@Base+0xb1a>
  4016b9:	nop    DWORD PTR [rax+0x0]
  4016c0:	mov    rax,QWORD PTR [r14+0x18]
  4016c4:	test   rax,rax
  4016c7:	je     4016df <__sprintf_chk@plt+0x33f>
  4016c9:	mov    rdx,QWORD PTR [rax]
  4016cc:	lea    rsi,[rip+0x2931]        # 404004 <error@@Base+0xb14>
  4016d3:	mov    edi,0x1
  4016d8:	xor    eax,eax
  4016da:	call   401310 <__printf_chk@plt>
  4016df:	mov    rax,QWORD PTR [r14+0x10]
  4016e3:	mov    r15,QWORD PTR [rax]
  4016e6:	cmp    r15,QWORD PTR [rax+0x8]
  4016ea:	jg     40173a <__sprintf_chk@plt+0x39a>
  4016ec:	mov    rbp,0x406244
  4016f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4016f8:	mov    rax,QWORD PTR [r13+0x10]
  4016fc:	xor    ecx,ecx
  4016fe:	mov    rax,QWORD PTR [rax+r15*8]
  401702:	mov    rdx,rbx
  401705:	movzx  edi,BYTE PTR [rax+0x10]
  401709:	mov    esi,DWORD PTR [rax+0x14]
  40170c:	and    dil,BYTE PTR [rbp+0x0]
  401710:	movsx  edi,dil
  401714:	xor    eax,eax
  401716:	call   402f30 <__sprintf_chk@plt+0x1b90>
  40171b:	mov    rdx,rbx
  40171e:	mov    rsi,r12
  401721:	mov    edi,0x1
  401726:	xor    eax,eax
  401728:	call   401310 <__printf_chk@plt>
  40172d:	mov    rax,QWORD PTR [r14+0x10]
  401731:	inc    r15
  401734:	cmp    QWORD PTR [rax+0x8],r15
  401738:	jge    4016f8 <__sprintf_chk@plt+0x358>
  40173a:	cmp    QWORD PTR [r14+0x18],0x0
  40173f:	je     401755 <__sprintf_chk@plt+0x3b5>
  401741:	mov    rax,QWORD PTR [rip+0x4888]        # 405fd0 <error@@Base+0x2ae0>
  401748:	mov    edi,0x7d
  40174d:	mov    rsi,QWORD PTR [rax]
  401750:	call   4012d0 <putc@plt>
  401755:	mov    r14,QWORD PTR [r14+0x8]
  401759:	test   r14,r14
  40175c:	jne    4016c0 <__sprintf_chk@plt+0x320>
  401762:	mov    rax,QWORD PTR [rip+0x4867]        # 405fd0 <error@@Base+0x2ae0>
  401769:	mov    edi,0xa
  40176e:	mov    rsi,QWORD PTR [rax]
  401771:	call   4012d0 <putc@plt>
  401776:	mov    rax,QWORD PTR [rsp+0x18]
  40177b:	xor    rax,QWORD PTR fs:0x28
  401784:	jne    401795 <__sprintf_chk@plt+0x3f5>
  401786:	add    rsp,0x28
  40178a:	pop    rbx
  40178b:	pop    rbp
  40178c:	pop    r12
  40178e:	pop    r13
  401790:	pop    r14
  401792:	pop    r15
  401794:	ret    
  401795:	call   401260 <__stack_chk_fail@plt>
  40179a:	nop    WORD PTR [rax+rax*1+0x0]
  4017a0:	endbr64 
  4017a4:	push   r15
  4017a6:	push   r14
  4017a8:	mov    r14,rdx
  4017ab:	push   r13
  4017ad:	push   r12
  4017af:	push   rbp
  4017b0:	movsx  rbp,si
  4017b4:	push   rbx
  4017b5:	mov    rbx,rdi
  4017b8:	sub    rsp,0x38
  4017bc:	mov    rax,QWORD PTR fs:0x28
  4017c5:	mov    QWORD PTR [rsp+0x28],rax
  4017ca:	xor    eax,eax
  4017cc:	call   401610 <__sprintf_chk@plt+0x270>
  4017d1:	mov    rax,QWORD PTR [rip+0x47f8]        # 405fd0 <error@@Base+0x2ae0>
  4017d8:	mov    edi,0xa
  4017dd:	mov    rsi,QWORD PTR [rax]
  4017e0:	call   4012d0 <putc@plt>
  4017e5:	mov    r15,QWORD PTR [rbx]
  4017e8:	mov    QWORD PTR [rsp+0x8],0x0
  4017f1:	test   r15,r15
  4017f4:	je     401876 <__sprintf_chk@plt+0x4d6>
  4017fa:	lea    rbx,[rsp+0x1f]
  4017ff:	nop
  401800:	cmp    QWORD PTR [r15+0x18],0x0
  401805:	je     401900 <__sprintf_chk@plt+0x560>
  40180b:	mov    r11,QWORD PTR [r15+0x10]
  40180f:	cmp    QWORD PTR [r11+0x10],0x0
  401814:	jle    40186d <__sprintf_chk@plt+0x4cd>
  401816:	mov    r12,0x406244
  40181d:	xor    r13d,r13d
  401820:	cmp    BYTE PTR [r12],0x0
  401825:	jne    4018b0 <__sprintf_chk@plt+0x510>
  40182b:	xor    edi,edi
  40182d:	mov    rdx,QWORD PTR [r11]
  401830:	mov    rax,QWORD PTR [r14+0x10]
  401834:	add    rdx,r13
  401837:	mov    rax,QWORD PTR [rax+rdx*8]
  40183b:	xor    ecx,ecx
  40183d:	mov    esi,DWORD PTR [rax+0x14]
  401840:	mov    rdx,rbx
  401843:	xor    eax,eax
  401845:	call   402f30 <__sprintf_chk@plt+0x1b90>
  40184a:	mov    rdx,rbx
  40184d:	lea    rsi,[rip+0x27b6]        # 40400a <error@@Base+0xb1a>
  401854:	mov    edi,0x1
  401859:	xor    eax,eax
  40185b:	call   401310 <__printf_chk@plt>
  401860:	mov    r11,QWORD PTR [r15+0x10]
  401864:	inc    r13
  401867:	cmp    QWORD PTR [r11+0x10],r13
  40186b:	jg     401820 <__sprintf_chk@plt+0x480>
  40186d:	mov    r15,QWORD PTR [r15+0x8]
  401871:	test   r15,r15
  401874:	jne    401800 <__sprintf_chk@plt+0x460>
  401876:	mov    rax,QWORD PTR [rip+0x4753]        # 405fd0 <error@@Base+0x2ae0>
  40187d:	mov    edi,0xa
  401882:	mov    rsi,QWORD PTR [rax]
  401885:	call   4012d0 <putc@plt>
  40188a:	mov    rax,QWORD PTR [rsp+0x28]
  40188f:	xor    rax,QWORD PTR fs:0x28
  401898:	jne    401932 <__sprintf_chk@plt+0x592>
  40189e:	add    rsp,0x38
  4018a2:	pop    rbx
  4018a3:	pop    rbp
  4018a4:	pop    r12
  4018a6:	pop    r13
  4018a8:	pop    r14
  4018aa:	pop    r15
  4018ac:	ret    
  4018ad:	nop    DWORD PTR [rax]
  4018b0:	mov    rdx,r11
  4018b3:	xor    eax,eax
  4018b5:	test   rbp,rbp
  4018b8:	jle    40182b <__sprintf_chk@plt+0x48b>
  4018be:	xchg   ax,ax
  4018c0:	mov    rcx,rax
  4018c3:	shl    rcx,0x5
  4018c7:	mov    rsi,QWORD PTR [rdx]
  4018ca:	mov    rcx,QWORD PTR [r14+rcx*1+0x10]
  4018cf:	add    rsi,r13
  4018d2:	mov    rcx,QWORD PTR [rcx+rsi*8]
  4018d6:	cmp    BYTE PTR [rcx+0x10],0x0
  4018da:	jne    4018f0 <__sprintf_chk@plt+0x550>
  4018dc:	inc    rax
  4018df:	add    rdx,0x18
  4018e3:	cmp    rbp,rax
  4018e6:	jne    4018c0 <__sprintf_chk@plt+0x520>
  4018e8:	jmp    40182b <__sprintf_chk@plt+0x48b>
  4018ed:	nop    DWORD PTR [rax]
  4018f0:	mov    edi,0x1
  4018f5:	jmp    40182d <__sprintf_chk@plt+0x48d>
  4018fa:	nop    WORD PTR [rax+rax*1+0x0]
  401900:	inc    QWORD PTR [rsp+0x8]
  401905:	lea    rsi,[rip+0x2701]        # 40400d <error@@Base+0xb1d>
  40190c:	mov    edi,0x1
  401911:	mov    rax,QWORD PTR [rsp+0x8]
  401916:	mov    rdx,rax
  401919:	xor    eax,eax
  40191b:	call   401310 <__printf_chk@plt>
  401920:	mov    r15,QWORD PTR [r15+0x8]
  401924:	test   r15,r15
  401927:	jne    401800 <__sprintf_chk@plt+0x460>
  40192d:	jmp    401876 <__sprintf_chk@plt+0x4d6>
  401932:	call   401260 <__stack_chk_fail@plt>
  401937:	nop    WORD PTR [rax+rax*1+0x0]
  401940:	endbr64 
  401944:	push   r15
  401946:	push   r14
  401948:	push   r13
  40194a:	push   r12
  40194c:	push   rbp
  40194d:	mov    rbp,rdi
  401950:	push   rbx
  401951:	sub    rsp,0x78
  401955:	mov    QWORD PTR [rsp+0x38],rdx
  40195a:	mov    QWORD PTR [rsp+0x30],rcx
  40195f:	mov    rax,QWORD PTR fs:0x28
  401968:	mov    QWORD PTR [rsp+0x68],rax
  40196d:	xor    eax,eax
  40196f:	movsx  rax,si
  401973:	mov    QWORD PTR [rsp+0x28],rax
  401978:	test   rax,rax
  40197b:	jle    401b96 <__sprintf_chk@plt+0x7f6>
  401981:	mov    rbx,rcx
  401984:	lea    r12,[rcx+rax*8]
  401988:	xor    r13d,r13d
  40198b:	nop    DWORD PTR [rax+rax*1+0x0]
  401990:	mov    rdi,QWORD PTR [rbx]
  401993:	call   401250 <strlen@plt>
  401998:	cmp    rax,r13
  40199b:	cmovae r13,rax
  40199f:	add    rbx,0x8
  4019a3:	cmp    r12,rbx
  4019a6:	jne    401990 <__sprintf_chk@plt+0x5f0>
  4019a8:	lea    rax,[rsp+0x50]
  4019ad:	mov    QWORD PTR [rsp+0x10],rax
  4019b2:	mov    rdi,rax
  4019b5:	mov    r8,r13
  4019b8:	lea    rcx,[rip+0x2654]        # 404013 <error@@Base+0xb23>
  4019bf:	mov    edx,0x14
  4019c4:	mov    esi,0x1
  4019c9:	xor    eax,eax
  4019cb:	call   4013a0 <__sprintf_chk@plt>
  4019d0:	mov    r15,QWORD PTR [rbp+0x0]
  4019d4:	test   r15,r15
  4019d7:	je     401a08 <__sprintf_chk@plt+0x668>
  4019d9:	mov    rax,QWORD PTR [rsp+0x30]
  4019de:	mov    rcx,QWORD PTR [rsp+0x28]
  4019e3:	mov    QWORD PTR [rsp+0x20],0x0
  4019ec:	lea    rax,[rax+rcx*8]
  4019f0:	mov    QWORD PTR [rsp+0x18],rax
  4019f5:	nop    DWORD PTR [rax]
  4019f8:	cmp    QWORD PTR [r15+0x18],0x0
  4019fd:	je     401a30 <__sprintf_chk@plt+0x690>
  4019ff:	mov    r15,QWORD PTR [r15+0x8]
  401a03:	test   r15,r15
  401a06:	jne    4019f8 <__sprintf_chk@plt+0x658>
  401a08:	mov    rax,QWORD PTR [rsp+0x68]
  401a0d:	xor    rax,QWORD PTR fs:0x28
  401a16:	jne    401b9e <__sprintf_chk@plt+0x7fe>
  401a1c:	add    rsp,0x78
  401a20:	pop    rbx
  401a21:	pop    rbp
  401a22:	pop    r12
  401a24:	pop    r13
  401a26:	pop    r14
  401a28:	pop    r15
  401a2a:	ret    
  401a2b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a30:	xor    eax,eax
  401a32:	call   401610 <__sprintf_chk@plt+0x270>
  401a37:	inc    QWORD PTR [rsp+0x20]
  401a3c:	lea    rsi,[rip+0x25d8]        # 40401b <error@@Base+0xb2b>
  401a43:	mov    edi,0x1
  401a48:	mov    rax,QWORD PTR [rsp+0x20]
  401a4d:	mov    rdx,rax
  401a50:	xor    eax,eax
  401a52:	call   401310 <__printf_chk@plt>
  401a57:	cmp    QWORD PTR [rsp+0x28],0x0
  401a5d:	jle    4019ff <__sprintf_chk@plt+0x65f>
  401a5f:	mov    rax,QWORD PTR [rsp+0x38]
  401a64:	xor    ebp,ebp
  401a66:	lea    r14,[rax+0x10]
  401a6a:	mov    rax,QWORD PTR [rsp+0x30]
  401a6f:	lea    rbx,[rsp+0x47]
  401a74:	mov    QWORD PTR [rsp+0x8],rax
  401a79:	nop    DWORD PTR [rax+0x0]
  401a80:	mov    rax,QWORD PTR [rsp+0x8]
  401a85:	mov    rsi,QWORD PTR [rsp+0x10]
  401a8a:	mov    rdx,QWORD PTR [rax]
  401a8d:	mov    edi,0x1
  401a92:	xor    eax,eax
  401a94:	call   401310 <__printf_chk@plt>
  401a99:	lea    rsi,[rip+0x2582]        # 404022 <error@@Base+0xb32>
  401aa0:	mov    edi,0x1
  401aa5:	xor    eax,eax
  401aa7:	call   401310 <__printf_chk@plt>
  401aac:	mov    rax,QWORD PTR [r15+0x10]
  401ab0:	add    rax,rbp
  401ab3:	mov    r13,QWORD PTR [rax]
  401ab6:	cmp    r13,QWORD PTR [rax+0x8]
  401aba:	jg     401b60 <__sprintf_chk@plt+0x7c0>
  401ac0:	mov    r12,0x406244
  401ac7:	jmp    401ae2 <__sprintf_chk@plt+0x742>
  401ac9:	nop    DWORD PTR [rax+0x0]
  401ad0:	mov    rax,QWORD PTR [r15+0x10]
  401ad4:	inc    r13
  401ad7:	cmp    QWORD PTR [rax+rbp*1+0x8],r13
  401adc:	jl     401b60 <__sprintf_chk@plt+0x7c0>
  401ae2:	mov    rax,QWORD PTR [r14]
  401ae5:	xor    ecx,ecx
  401ae7:	mov    rax,QWORD PTR [rax+r13*8]
  401aeb:	mov    rdx,rbx
  401aee:	movzx  edi,BYTE PTR [rax+0x10]
  401af2:	mov    esi,DWORD PTR [rax+0x14]
  401af5:	and    dil,BYTE PTR [r12]
  401af9:	xor    eax,eax
  401afb:	movsx  edi,dil
  401aff:	call   402f30 <__sprintf_chk@plt+0x1b90>
  401b04:	xor    eax,eax
  401b06:	mov    rdx,rbx
  401b09:	lea    rsi,[rip+0x24fa]        # 40400a <error@@Base+0xb1a>
  401b10:	mov    edi,0x1
  401b15:	call   401310 <__printf_chk@plt>
  401b1a:	mov    rax,QWORD PTR [r14]
  401b1d:	mov    rax,QWORD PTR [rax+r13*8]
  401b21:	cmp    DWORD PTR [rax+0x14],0xa
  401b25:	jne    401ad0 <__sprintf_chk@plt+0x730>
  401b27:	mov    rsi,QWORD PTR [rsp+0x10]
  401b2c:	lea    rdx,[rip+0x26e7]        # 40421a <error@@Base+0xd2a>
  401b33:	mov    edi,0x1
  401b38:	xor    eax,eax
  401b3a:	call   401310 <__printf_chk@plt>
  401b3f:	lea    rsi,[rip+0x24df]        # 404025 <error@@Base+0xb35>
  401b46:	mov    edi,0x1
  401b4b:	xor    eax,eax
  401b4d:	call   401310 <__printf_chk@plt>
  401b52:	mov    rax,QWORD PTR [r15+0x10]
  401b56:	inc    r13
  401b59:	cmp    QWORD PTR [rax+rbp*1+0x8],r13
  401b5e:	jge    401ae2 <__sprintf_chk@plt+0x742>
  401b60:	lea    rsi,[rip+0x24b8]        # 40401f <error@@Base+0xb2f>
  401b67:	mov    edi,0x1
  401b6c:	xor    eax,eax
  401b6e:	call   401310 <__printf_chk@plt>
  401b73:	add    QWORD PTR [rsp+0x8],0x8
  401b79:	add    rbp,0x18
  401b7d:	add    r14,0x20
  401b81:	mov    rax,QWORD PTR [rsp+0x8]
  401b86:	cmp    QWORD PTR [rsp+0x18],rax
  401b8b:	jne    401a80 <__sprintf_chk@plt+0x6e0>
  401b91:	jmp    4019ff <__sprintf_chk@plt+0x65f>
  401b96:	xor    r13d,r13d
  401b99:	jmp    4019a8 <__sprintf_chk@plt+0x608>
  401b9e:	call   401260 <__stack_chk_fail@plt>
  401ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401bad:	nop    DWORD PTR [rax]
  401bb0:	push   r15
  401bb2:	mov    rax,rcx
  401bb5:	sub    rax,rdi
  401bb8:	push   r14
  401bba:	mov    r15,rdi
  401bbd:	push   r13
  401bbf:	push   r12
  401bc1:	mov    r12,rdi
  401bc4:	push   rbp
  401bc5:	push   rbx
  401bc6:	mov    rbx,QWORD PTR [rsp+0x38]
  401bcb:	mov    QWORD PTR [rsp-0x10],r9
  401bd0:	mov    rbp,rbx
  401bd3:	mov    QWORD PTR [rsp-0x8],rax
  401bd8:	sub    rbp,rdi
  401bdb:	cmp    rax,rdx
  401bde:	jl     401cf1 <__sprintf_chk@plt+0x951>
  401be4:	nop    DWORD PTR [rax+0x0]
  401be8:	lea    r15,[rdx+0x1]
  401bec:	cmp    QWORD PTR [rsp-0x10],rbp
  401bf1:	jg     401ce0 <__sprintf_chk@plt+0x940>
  401bf7:	mov    rax,QWORD PTR [rsi+rdx*8]
  401bfb:	lea    r15,[rdx+0x1]
  401bff:	mov    r13d,DWORD PTR [rax+0x14]
  401c03:	mov    r9,QWORD PTR [rsp-0x10]
  401c08:	cmp    r13d,0x7e
  401c0c:	setne  r14b
  401c10:	jmp    401c24 <__sprintf_chk@plt+0x884>
  401c12:	nop    WORD PTR [rax+rax*1+0x0]
  401c18:	mov    r9,r11
  401c1b:	cmp    rbp,r11
  401c1e:	jl     401ce0 <__sprintf_chk@plt+0x940>
  401c24:	mov    rax,QWORD PTR [r8+r9*8]
  401c28:	lea    r11,[r9+0x1]
  401c2c:	cmp    DWORD PTR [rax+0x14],r13d
  401c30:	jne    401c18 <__sprintf_chk@plt+0x878>
  401c32:	test   r14b,r14b
  401c35:	je     401c18 <__sprintf_chk@plt+0x878>
  401c37:	cmp    r15,rcx
  401c3a:	jg     401d00 <__sprintf_chk@plt+0x960>
  401c40:	cmp    rbx,r11
  401c43:	jl     401d00 <__sprintf_chk@plt+0x960>
  401c49:	mov    rax,QWORD PTR [rsi+rdx*8+0x8]
  401c4e:	mov    rdi,QWORD PTR [r8+r11*8]
  401c52:	mov    eax,DWORD PTR [rax+0x14]
  401c55:	cmp    DWORD PTR [rdi+0x14],eax
  401c58:	jne    401d00 <__sprintf_chk@plt+0x960>
  401c5e:	cmp    eax,0x7e
  401c61:	je     401d00 <__sprintf_chk@plt+0x960>
  401c67:	mov    rdi,r11
  401c6a:	mov    rax,r15
  401c6d:	mov    QWORD PTR [rsp-0x18],rdx
  401c72:	jmp    401c7e <__sprintf_chk@plt+0x8de>
  401c74:	nop    DWORD PTR [rax+0x0]
  401c78:	cmp    r10d,0x7e
  401c7c:	je     401ca0 <__sprintf_chk@plt+0x900>
  401c7e:	inc    rax
  401c81:	inc    rdi
  401c84:	cmp    rcx,rax
  401c87:	jl     401ca0 <__sprintf_chk@plt+0x900>
  401c89:	cmp    rbx,rdi
  401c8c:	jl     401ca0 <__sprintf_chk@plt+0x900>
  401c8e:	mov    r10,QWORD PTR [rsi+rax*8]
  401c92:	mov    rdx,QWORD PTR [r8+rdi*8]
  401c96:	mov    r10d,DWORD PTR [r10+0x14]
  401c9a:	cmp    DWORD PTR [rdx+0x14],r10d
  401c9e:	je     401c78 <__sprintf_chk@plt+0x8d8>
  401ca0:	mov    rdx,QWORD PTR [rsp-0x18]
  401ca5:	sub    rax,rdx
  401ca8:	mov    rdi,rax
  401cab:	sub    rdi,r12
  401cae:	test   rdi,rdi
  401cb1:	jle    401c18 <__sprintf_chk@plt+0x878>
  401cb7:	sub    QWORD PTR [rsp-0x8],rdi
  401cbc:	sub    rbp,rdi
  401cbf:	mov    rdi,QWORD PTR [rsp+0x40]
  401cc4:	mov    r12,rax
  401cc7:	mov    QWORD PTR [rdi],rdx
  401cca:	mov    rdi,QWORD PTR [rsp+0x48]
  401ccf:	mov    QWORD PTR [rdi],r9
  401cd2:	mov    r9,r11
  401cd5:	cmp    rbp,r11
  401cd8:	jge    401c24 <__sprintf_chk@plt+0x884>
  401cde:	xchg   ax,ax
  401ce0:	mov    rdx,r15
  401ce3:	cmp    r15,QWORD PTR [rsp-0x8]
  401ce8:	jle    401be8 <__sprintf_chk@plt+0x848>
  401cee:	mov    r15,r12
  401cf1:	pop    rbx
  401cf2:	pop    rbp
  401cf3:	pop    r12
  401cf5:	pop    r13
  401cf7:	pop    r14
  401cf9:	mov    rax,r15
  401cfc:	pop    r15
  401cfe:	ret    
  401cff:	nop
  401d00:	mov    rax,r15
  401d03:	jmp    401ca5 <__sprintf_chk@plt+0x905>
  401d05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d10:	test   rsi,rsi
  401d13:	je     401d80 <__sprintf_chk@plt+0x9e0>
  401d15:	mov    r8,QWORD PTR [rsi+0x18]
  401d19:	lea    rcx,[rdi-0x1]
  401d1d:	cmp    rcx,r8
  401d20:	lea    r10,[rdi+0x1]
  401d24:	cmovl  rcx,r8
  401d28:	cmp    QWORD PTR [rsi+0x20],r10
  401d2c:	cmovle r10,QWORD PTR [rsi+0x20]
  401d31:	cmp    rcx,r10
  401d34:	jg     401d83 <__sprintf_chk@plt+0x9e3>
  401d36:	mov    r11,QWORD PTR [rsi+0x28]
  401d3a:	inc    r10
  401d3d:	xor    eax,eax
  401d3f:	jmp    401d4c <__sprintf_chk@plt+0x9ac>
  401d41:	nop    DWORD PTR [rax+0x0]
  401d48:	mov    r8,QWORD PTR [rsi+0x18]
  401d4c:	mov    r9,rcx
  401d4f:	sub    r9,r8
  401d52:	movzx  r8d,WORD PTR [r11+r9*2]
  401d57:	xor    r9d,r9d
  401d5a:	cmp    rdi,rcx
  401d5d:	setle  r9b
  401d61:	add    r8,r9
  401d64:	cmp    r8,rax
  401d67:	jl     401d6f <__sprintf_chk@plt+0x9cf>
  401d69:	mov    QWORD PTR [rdx],rcx
  401d6c:	mov    rax,r8
  401d6f:	inc    rcx
  401d72:	cmp    rcx,r10
  401d75:	jne    401d48 <__sprintf_chk@plt+0x9a8>
  401d77:	ret    
  401d78:	nop    DWORD PTR [rax+rax*1+0x0]
  401d80:	xor    eax,eax
  401d82:	ret    
  401d83:	push   rax
  401d84:	lea    rdi,[rip+0x22f5]        # 404080 <error@@Base+0xb90>
  401d8b:	xor    eax,eax
  401d8d:	call   4034f0 <error@@Base>
  401d92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d9d:	nop    DWORD PTR [rax]
  401da0:	push   rbp
  401da1:	mov    esi,0x20
  401da6:	xor    eax,eax
  401da8:	push   rbx
  401da9:	mov    ebx,edi
  401dab:	mov    edi,0x1
  401db0:	sub    rsp,0x8
  401db4:	call   403540 <error@@Base+0x50>
  401db9:	mov    rbp,rax
  401dbc:	movsx  rdi,bx
  401dc0:	mov    esi,0x18
  401dc5:	xor    eax,eax
  401dc7:	call   403540 <error@@Base+0x50>
  401dcc:	mov    QWORD PTR [rbp+0x10],rax
  401dd0:	add    rsp,0x8
  401dd4:	mov    rax,rbp
  401dd7:	pop    rbx
  401dd8:	pop    rbp
  401dd9:	ret    
  401dda:	nop    WORD PTR [rax+rax*1+0x0]
  401de0:	push   r15
  401de2:	xor    eax,eax
  401de4:	xor    r15d,r15d
  401de7:	push   r14
  401de9:	push   r13
  401deb:	mov    r13d,esi
  401dee:	push   r12
  401df0:	mov    r12,rdi
  401df3:	push   rbp
  401df4:	push   rbx
  401df5:	mov    rbx,rdx
  401df8:	sub    rsp,0x8
  401dfc:	call   403940 <error@@Base+0x450>
  401e01:	movsx  edi,r13w
  401e05:	xor    eax,eax
  401e07:	dec    r13d
  401e0a:	call   401da0 <__sprintf_chk@plt+0xa00>
  401e0f:	movzx  r13d,r13w
  401e13:	mov    rbp,rax
  401e16:	mov    rax,r13
  401e19:	shl    rax,0x5
  401e1d:	lea    r14,[rbx+rax*1+0x20]
  401e22:	nop    WORD PTR [rax+rax*1+0x0]
  401e28:	mov    rdi,rbx
  401e2b:	xor    eax,eax
  401e2d:	call   403b10 <error@@Base+0x620>
  401e32:	mov    rdi,QWORD PTR [rbp+0x10]
  401e36:	add    rbx,0x20
  401e3a:	lea    rax,[rdi+r15*1]
  401e3e:	mov    QWORD PTR [rax],0x0
  401e45:	add    r15,0x18
  401e49:	mov    rdx,QWORD PTR [rbx-0x8]
  401e4d:	lea    rcx,[rdx-0x1]
  401e51:	mov    QWORD PTR [rax+0x8],rcx
  401e55:	mov    QWORD PTR [rax+0x10],rdx
  401e59:	cmp    rbx,r14
  401e5c:	jne    401e28 <__sprintf_chk@plt+0xa88>
  401e5e:	lea    rdx,[r13+r13*2+0x0]
  401e63:	lea    rax,[rdi+0x10]
  401e67:	lea    rdx,[rdi+rdx*8+0x28]
  401e6c:	nop    DWORD PTR [rax+0x0]
  401e70:	cmp    QWORD PTR [rax],0x0
  401e74:	jg     401ea0 <__sprintf_chk@plt+0xb00>
  401e76:	add    rax,0x18
  401e7a:	cmp    rdx,rax
  401e7d:	jne    401e70 <__sprintf_chk@plt+0xad0>
  401e7f:	call   4011f0 <free@plt>
  401e84:	add    rsp,0x8
  401e88:	pop    rbx
  401e89:	mov    rdi,rbp
  401e8c:	pop    rbp
  401e8d:	pop    r12
  401e8f:	pop    r13
  401e91:	pop    r14
  401e93:	pop    r15
  401e95:	jmp    4011f0 <free@plt>
  401e9a:	nop    WORD PTR [rax+rax*1+0x0]
  401ea0:	add    rsp,0x8
  401ea4:	pop    rbx
  401ea5:	mov    rsi,rbp
  401ea8:	pop    rbp
  401ea9:	mov    rdi,r12
  401eac:	pop    r12
  401eae:	pop    r13
  401eb0:	pop    r14
  401eb2:	xor    eax,eax
  401eb4:	pop    r15
  401eb6:	jmp    403970 <error@@Base+0x480>
  401ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  401ec0:	push   r15
  401ec2:	xor    eax,eax
  401ec4:	mov    r15,rcx
  401ec7:	push   r14
  401ec9:	mov    r14,r8
  401ecc:	push   r13
  401ece:	movsx  r13d,si
  401ed2:	push   r12
  401ed4:	mov    r12d,esi
  401ed7:	push   rbp
  401ed8:	mov    ebp,esi
  401eda:	push   rbx
  401edb:	mov    rbx,rdx
  401ede:	sub    rsp,0x28
  401ee2:	mov    QWORD PTR [rsp+0x8],rdi
  401ee7:	mov    edi,r13d
  401eea:	mov    QWORD PTR [rsp+0x10],r9
  401eef:	call   401da0 <__sprintf_chk@plt+0xa00>
  401ef4:	mov    QWORD PTR [rsp],rax
  401ef8:	mov    edi,r13d
  401efb:	xor    eax,eax
  401efd:	call   401da0 <__sprintf_chk@plt+0xa00>
  401f02:	mov    r13,rax
  401f05:	test   bp,bp
  401f08:	jle    402070 <__sprintf_chk@plt+0xcd0>
  401f0e:	mov    rax,QWORD PTR [rsp]
  401f12:	dec    ebp
  401f14:	mov    rdi,QWORD PTR [rax+0x10]
  401f18:	movzx  edx,bp
  401f1b:	mov    rax,QWORD PTR [rbx+0x10]
  401f1f:	mov    r9,QWORD PTR [r13+0x10]
  401f23:	mov    rcx,r15
  401f26:	mov    QWORD PTR [rsp+0x18],rdx
  401f2b:	lea    r15,[r15+rdx*8+0x8]
  401f30:	mov    r10,rdi
  401f33:	mov    rdx,rdi
  401f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401f40:	mov    rbp,QWORD PTR [rax]
  401f43:	mov    r11,QWORD PTR [rcx]
  401f46:	mov    QWORD PTR [rdx],rbp
  401f49:	add    r11,r14
  401f4c:	lea    r8,[r11-0x1]
  401f50:	mov    rsi,QWORD PTR [rcx]
  401f53:	add    rcx,0x8
  401f57:	dec    rsi
  401f5a:	mov    QWORD PTR [rdx+0x8],rsi
  401f5e:	add    rax,0x18
  401f62:	add    rdx,0x18
  401f66:	mov    rsi,QWORD PTR [rcx-0x8]
  401f6a:	add    r9,0x18
  401f6e:	sub    rsi,rbp
  401f71:	mov    QWORD PTR [rdx-0x8],rsi
  401f75:	mov    QWORD PTR [r9-0x18],r11
  401f79:	mov    rsi,QWORD PTR [rax-0x10]
  401f7d:	mov    QWORD PTR [r9-0x10],rsi
  401f81:	mov    rsi,QWORD PTR [rax-0x10]
  401f85:	sub    rsi,r8
  401f88:	mov    QWORD PTR [r9-0x8],rsi
  401f8c:	mov    rsi,QWORD PTR [rcx-0x8]
  401f90:	mov    QWORD PTR [rax-0x10],r8
  401f94:	mov    QWORD PTR [rax-0x18],rsi
  401f98:	mov    QWORD PTR [rax-0x8],r14
  401f9c:	cmp    rcx,r15
  401f9f:	jne    401f40 <__sprintf_chk@plt+0xba0>
  401fa1:	mov    rax,QWORD PTR [rsp+0x10]
  401fa6:	cmp    QWORD PTR [rdi+0x10],0x0
  401fab:	mov    QWORD PTR [rbx+0x18],rax
  401faf:	jg     402050 <__sprintf_chk@plt+0xcb0>
  401fb5:	mov    rax,QWORD PTR [rsp+0x18]
  401fba:	lea    rax,[rax+rax*2]
  401fbe:	lea    rax,[rdi+rax*8]
  401fc2:	jmp    401fd3 <__sprintf_chk@plt+0xc33>
  401fc4:	nop    DWORD PTR [rax+0x0]
  401fc8:	add    r10,0x18
  401fcc:	cmp    QWORD PTR [r10+0x10],0x0
  401fd1:	jg     402050 <__sprintf_chk@plt+0xcb0>
  401fd3:	cmp    rax,r10
  401fd6:	jne    401fc8 <__sprintf_chk@plt+0xc28>
  401fd8:	call   4011f0 <free@plt>
  401fdd:	mov    rdi,QWORD PTR [rsp]
  401fe1:	call   4011f0 <free@plt>
  401fe6:	mov    rdi,QWORD PTR [r13+0x10]
  401fea:	cmp    QWORD PTR [rdi+0x10],0x0
  401fef:	jg     402030 <__sprintf_chk@plt+0xc90>
  401ff1:	lea    rdx,[rdi+0x28]
  401ff5:	xor    eax,eax
  401ff7:	jmp    40200b <__sprintf_chk@plt+0xc6b>
  401ff9:	nop    DWORD PTR [rax+0x0]
  402000:	add    rdx,0x18
  402004:	cmp    QWORD PTR [rdx-0x18],0x0
  402009:	jg     402030 <__sprintf_chk@plt+0xc90>
  40200b:	inc    eax
  40200d:	cmp    r12w,ax
  402011:	jg     402000 <__sprintf_chk@plt+0xc60>
  402013:	call   4011f0 <free@plt>
  402018:	add    rsp,0x28
  40201c:	pop    rbx
  40201d:	pop    rbp
  40201e:	pop    r12
  402020:	mov    rdi,r13
  402023:	pop    r13
  402025:	pop    r14
  402027:	pop    r15
  402029:	jmp    4011f0 <free@plt>
  40202e:	xchg   ax,ax
  402030:	mov    rdi,QWORD PTR [rsp+0x8]
  402035:	add    rsp,0x28
  402039:	mov    rsi,rbx
  40203c:	pop    rbx
  40203d:	pop    rbp
  40203e:	pop    r12
  402040:	mov    rdx,r13
  402043:	pop    r13
  402045:	pop    r14
  402047:	xor    eax,eax
  402049:	pop    r15
  40204b:	jmp    403a60 <error@@Base+0x570>
  402050:	mov    rsi,QWORD PTR [rsp]
  402054:	mov    rdi,QWORD PTR [rsp+0x8]
  402059:	mov    rdx,rbx
  40205c:	xor    eax,eax
  40205e:	call   403a10 <error@@Base+0x520>
  402063:	jmp    401fe6 <__sprintf_chk@plt+0xc46>
  402068:	nop    DWORD PTR [rax+rax*1+0x0]
  402070:	mov    rax,QWORD PTR [rsp+0x10]
  402075:	mov    QWORD PTR [rbx+0x18],rax
  402079:	mov    rbx,QWORD PTR [rsp]
  40207d:	mov    rdi,QWORD PTR [rbx+0x10]
  402081:	call   4011f0 <free@plt>
  402086:	mov    rdi,rbx
  402089:	call   4011f0 <free@plt>
  40208e:	mov    rdi,QWORD PTR [r13+0x10]
  402092:	jmp    402013 <__sprintf_chk@plt+0xc73>
  402097:	nop    WORD PTR [rax+rax*1+0x0]
  4020a0:	push   r15
  4020a2:	mov    r15,rdx
  4020a5:	push   r14
  4020a7:	push   r13
  4020a9:	push   r12
  4020ab:	push   rbp
  4020ac:	mov    rbp,rcx
  4020af:	push   rbx
  4020b0:	sub    rsp,0xc8
  4020b7:	mov    QWORD PTR [rsp+0x10],rdi
  4020bc:	mov    DWORD PTR [rsp+0xc],esi
  4020c0:	mov    rcx,QWORD PTR [rcx+0x10]
  4020c4:	mov    rax,QWORD PTR fs:0x28
  4020cd:	mov    QWORD PTR [rsp+0xb8],rax
  4020d5:	xor    eax,eax
  4020d7:	mov    r8,QWORD PTR [rcx+0x10]
  4020db:	test   si,si
  4020de:	jle    40228d <__sprintf_chk@plt+0xeed>
  4020e4:	test   r8,r8
  4020e7:	je     402268 <__sprintf_chk@plt+0xec8>
  4020ed:	mov    ebx,esi
  4020ef:	lea    edx,[rbx-0x1]
  4020f2:	movzx  edx,dx
  4020f5:	lea    rdx,[rdx+rdx*2]
  4020f9:	mov    rax,rcx
  4020fc:	lea    rdx,[rcx+rdx*8]
  402100:	jmp    402117 <__sprintf_chk@plt+0xd77>
  402102:	nop    WORD PTR [rax+rax*1+0x0]
  402108:	add    rax,0x18
  40210c:	cmp    QWORD PTR [rax+0x10],0x0
  402111:	je     402268 <__sprintf_chk@plt+0xec8>
  402117:	cmp    rax,rdx
  40211a:	jne    402108 <__sprintf_chk@plt+0xd68>
  40211c:	mov    rdx,QWORD PTR [rcx]
  40211f:	lea    rax,[rsp+0x30]
  402124:	cmp    WORD PTR [rsp+0xc],0x1
  40212a:	mov    QWORD PTR [rsp+0x30],rdx
  40212f:	mov    QWORD PTR [rsp],rax
  402133:	jle    4021f1 <__sprintf_chk@plt+0xe51>
  402139:	movzx  eax,WORD PTR [rsp+0xc]
  40213e:	lea    r14,[rsp+0x38]
  402143:	lea    r12d,[rax-0x2]
  402147:	mov    rdi,r15
  40214a:	movzx  r12d,r12w
  40214e:	mov    r15,r14
  402151:	shl    r12,0x3
  402155:	xor    ebx,ebx
  402157:	lea    r13,[rsp+0x28]
  40215c:	mov    rax,r8
  40215f:	mov    r14,rdi
  402162:	jmp    40217e <__sprintf_chk@plt+0xdde>
  402164:	nop    DWORD PTR [rax+0x0]
  402168:	add    r15,0x8
  40216c:	cmp    r12,rbx
  40216f:	je     4021eb <__sprintf_chk@plt+0xe4b>
  402171:	mov    rcx,QWORD PTR [rbp+0x10]
  402175:	mov    rdx,QWORD PTR [rsp+0x30]
  40217a:	add    rbx,0x8
  40217e:	mov    r8,QWORD PTR [r14+rbx*4+0x30]
  402183:	mov    rsi,QWORD PTR [r14+0x10]
  402187:	push   r15
  402189:	lea    rdi,[rbx+rbx*2+0x18]
  40218e:	add    rdi,rcx
  402191:	push   r13
  402193:	lea    rcx,[rax+rdx*1-0x1]
  402198:	xor    eax,eax
  40219a:	push   QWORD PTR [rdi+0x8]
  40219d:	mov    r9,QWORD PTR [rdi]
  4021a0:	xor    edi,edi
  4021a2:	call   401bb0 <__sprintf_chk@plt+0x810>
  4021a7:	add    rsp,0x18
  4021ab:	test   rax,rax
  4021ae:	je     402268 <__sprintf_chk@plt+0xec8>
  4021b4:	mov    rcx,QWORD PTR [rsp+0x30]
  4021b9:	mov    rsi,QWORD PTR [rsp+0x28]
  4021be:	sub    rsi,rcx
  4021c1:	test   rsi,rsi
  4021c4:	jle    402168 <__sprintf_chk@plt+0xdc8>
  4021c6:	mov    rdx,QWORD PTR [rsp]
  4021ca:	jmp    4021d3 <__sprintf_chk@plt+0xe33>
  4021cc:	nop    DWORD PTR [rax+0x0]
  4021d0:	mov    rcx,QWORD PTR [rdx]
  4021d3:	add    rcx,rsi
  4021d6:	mov    QWORD PTR [rdx],rcx
  4021d9:	add    rdx,0x8
  4021dd:	cmp    r15,rdx
  4021e0:	jne    4021d0 <__sprintf_chk@plt+0xe30>
  4021e2:	add    r15,0x8
  4021e6:	cmp    r12,rbx
  4021e9:	jne    402171 <__sprintf_chk@plt+0xdd1>
  4021eb:	mov    r8,rax
  4021ee:	mov    r15,r14
  4021f1:	mov    esi,0x8
  4021f6:	mov    edi,0x1
  4021fb:	xor    eax,eax
  4021fd:	mov    QWORD PTR [rsp+0x18],r8
  402202:	call   403540 <error@@Base+0x50>
  402207:	movsx  r14d,WORD PTR [rsp+0xc]
  40220d:	mov    rbx,QWORD PTR [rsp+0x10]
  402212:	mov    rcx,QWORD PTR [rsp]
  402216:	mov    r8,QWORD PTR [rsp+0x18]
  40221b:	mov    r9,rax
  40221e:	mov    rdx,rbp
  402221:	mov    esi,r14d
  402224:	mov    rdi,rbx
  402227:	xor    eax,eax
  402229:	call   401ec0 <__sprintf_chk@plt+0xb20>
  40222e:	mov    rcx,QWORD PTR [rbp+0x0]
  402232:	test   rcx,rcx
  402235:	je     402247 <__sprintf_chk@plt+0xea7>
  402237:	mov    rdx,r15
  40223a:	mov    esi,r14d
  40223d:	mov    rdi,rbx
  402240:	xor    eax,eax
  402242:	call   4020a0 <__sprintf_chk@plt+0xd00>
  402247:	mov    rcx,QWORD PTR [rbp+0x8]
  40224b:	test   rcx,rcx
  40224e:	je     402268 <__sprintf_chk@plt+0xec8>
  402250:	mov    rdi,QWORD PTR [rsp+0x10]
  402255:	mov    rdx,r15
  402258:	mov    esi,r14d
  40225b:	xor    eax,eax
  40225d:	call   4020a0 <__sprintf_chk@plt+0xd00>
  402262:	nop    WORD PTR [rax+rax*1+0x0]
  402268:	mov    rax,QWORD PTR [rsp+0xb8]
  402270:	xor    rax,QWORD PTR fs:0x28
  402279:	jne    4022a3 <__sprintf_chk@plt+0xf03>
  40227b:	add    rsp,0xc8
  402282:	pop    rbx
  402283:	pop    rbp
  402284:	pop    r12
  402286:	pop    r13
  402288:	pop    r14
  40228a:	pop    r15
  40228c:	ret    
  40228d:	mov    rax,QWORD PTR [rcx]
  402290:	mov    QWORD PTR [rsp+0x30],rax
  402295:	lea    rax,[rsp+0x30]
  40229a:	mov    QWORD PTR [rsp],rax
  40229e:	jmp    4021f1 <__sprintf_chk@plt+0xe51>
  4022a3:	call   401260 <__stack_chk_fail@plt>
  4022a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4022b0:	push   r12
  4022b2:	mov    r12,rsi
  4022b5:	push   rbp
  4022b6:	mov    rbp,rdi
  4022b9:	push   rbx
  4022ba:	sub    rsp,0x10
  4022be:	mov    rax,QWORD PTR fs:0x28
  4022c7:	mov    QWORD PTR [rsp+0x8],rax
  4022cc:	xor    eax,eax
  4022ce:	mov    rsi,QWORD PTR [rsi]
  4022d1:	mov    rdx,rsp
  4022d4:	call   401d10 <__sprintf_chk@plt+0x970>
  4022d9:	mov    rdi,QWORD PTR [rip+0x3f00]        # 4061e0 <error@@Base+0x2cf0>
  4022e0:	mov    rbx,rax
  4022e3:	mov    rsi,QWORD PTR [rip+0x3eee]        # 4061d8 <error@@Base+0x2ce8>
  4022ea:	add    rax,rbp
  4022ed:	cmp    rbx,rdi
  4022f0:	jge    402430 <__sprintf_chk@plt+0x1090>
  4022f6:	cmp    rax,rsi
  4022f9:	jge    402341 <__sprintf_chk@plt+0xfa1>
  4022fb:	lea    r8,[rsi+rbx*1]
  4022ff:	mov    r10,QWORD PTR [rip+0x3eea]        # 4061f0 <error@@Base+0x2d00>
  402306:	mov    r9,QWORD PTR [rip+0x3edb]        # 4061e8 <error@@Base+0x2cf8>
  40230d:	sub    r8,rax
  402310:	jmp    402331 <__sprintf_chk@plt+0xf91>
  402312:	nop    WORD PTR [rax+rax*1+0x0]
  402318:	cmp    edx,0x7e
  40231b:	je     402341 <__sprintf_chk@plt+0xfa1>
  40231d:	inc    rbx
  402320:	inc    rax
  402323:	cmp    rbx,rdi
  402326:	je     402436 <__sprintf_chk@plt+0x1096>
  40232c:	cmp    rbx,r8
  40232f:	je     402341 <__sprintf_chk@plt+0xfa1>
  402331:	mov    rdx,QWORD PTR [r10+rbx*8]
  402335:	mov    rcx,QWORD PTR [r9+rax*8]
  402339:	mov    edx,DWORD PTR [rdx+0x14]
  40233c:	cmp    DWORD PTR [rcx+0x14],edx
  40233f:	je     402318 <__sprintf_chk@plt+0xf78>
  402341:	mov    r8,QWORD PTR [rip+0x3e80]        # 4061c8 <error@@Base+0x2cd8>
  402348:	cmp    rax,rsi
  40234b:	je     402420 <__sprintf_chk@plt+0x1080>
  402351:	mov    rcx,QWORD PTR [rip+0x3e68]        # 4061c0 <error@@Base+0x2cd0>
  402358:	sub    rsi,rbp
  40235b:	cmp    rsi,rdi
  40235e:	cmovl  rsi,rdi
  402362:	mov    rax,QWORD PTR [rip+0x3e67]        # 4061d0 <error@@Base+0x2ce0>
  402369:	add    rsi,QWORD PTR [r12+0x10]
  40236e:	sub    rsi,rbx
  402371:	mov    rdx,rax
  402374:	sub    rdx,rsi
  402377:	inc    rdx
  40237a:	sar    rdx,1
  40237d:	cmp    rdx,r8
  402380:	jle    402389 <__sprintf_chk@plt+0xfe9>
  402382:	mov    QWORD PTR [rip+0x3e3f],rdx        # 4061c8 <error@@Base+0x2cd8>
  402389:	add    rsi,rax
  40238c:	sar    rsi,1
  40238f:	mov    QWORD PTR [rsp],rsi
  402393:	cmp    rsi,rcx
  402396:	jge    40239f <__sprintf_chk@plt+0xfff>
  402398:	mov    QWORD PTR [rip+0x3e21],rsi        # 4061c0 <error@@Base+0x2cd0>
  40239f:	xor    eax,eax
  4023a1:	mov    esi,0x18
  4023a6:	mov    edi,0x1
  4023ab:	call   403540 <error@@Base+0x50>
  4023b0:	cmp    QWORD PTR [rip+0x3e80],0x0        # 406238 <error@@Base+0x2d48>
  4023b8:	mov    WORD PTR [rax+0x10],bx
  4023bc:	je     402450 <__sprintf_chk@plt+0x10b0>
  4023c2:	cmp    QWORD PTR [r12+0x18],rbp
  4023c7:	jg     402400 <__sprintf_chk@plt+0x1060>
  4023c9:	mov    QWORD PTR [r12+0x20],rbp
  4023ce:	mov    rsi,rax
  4023d1:	lea    rdi,[rip+0x3e48]        # 406220 <error@@Base+0x2d30>
  4023d8:	xor    eax,eax
  4023da:	call   4039c0 <error@@Base+0x4d0>
  4023df:	mov    rax,QWORD PTR [rsp+0x8]
  4023e4:	xor    rax,QWORD PTR fs:0x28
  4023ed:	jne    402470 <__sprintf_chk@plt+0x10d0>
  4023f3:	add    rsp,0x10
  4023f7:	pop    rbx
  4023f8:	pop    rbp
  4023f9:	pop    r12
  4023fb:	ret    
  4023fc:	nop    DWORD PTR [rax+0x0]
  402400:	mov    QWORD PTR [r12+0x18],rbp
  402405:	mov    rsi,rax
  402408:	lea    rdi,[rip+0x3e11]        # 406220 <error@@Base+0x2d30>
  40240f:	xor    eax,eax
  402411:	call   403970 <error@@Base+0x480>
  402416:	jmp    4023df <__sprintf_chk@plt+0x103f>
  402418:	nop    DWORD PTR [rax+rax*1+0x0]
  402420:	lea    rcx,[rbp-0x1]
  402424:	mov    QWORD PTR [rip+0x3d95],rcx        # 4061c0 <error@@Base+0x2cd0>
  40242b:	jmp    402358 <__sprintf_chk@plt+0xfb8>
  402430:	jne    402341 <__sprintf_chk@plt+0xfa1>
  402436:	lea    r8,[rbp+0x1]
  40243a:	mov    QWORD PTR [rip+0x3d87],r8        # 4061c8 <error@@Base+0x2cd8>
  402441:	jmp    402348 <__sprintf_chk@plt+0xfa8>
  402446:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402450:	mov    QWORD PTR [r12+0x20],rbp
  402455:	mov    QWORD PTR [r12+0x18],rbp
  40245a:	mov    rsi,rax
  40245d:	lea    rdi,[rip+0x3dbc]        # 406220 <error@@Base+0x2d30>
  402464:	xor    eax,eax
  402466:	call   4039c0 <error@@Base+0x4d0>
  40246b:	jmp    4023df <__sprintf_chk@plt+0x103f>
  402470:	call   401260 <__stack_chk_fail@plt>
  402475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402480:	endbr64 
  402484:	push   r12
  402486:	lea    eax,[rsi-0x2]
  402489:	push   rbp
  40248a:	push   rbx
  40248b:	cmp    ax,0xe
  40248f:	ja     4024ed <__sprintf_chk@plt+0x114d>
  402491:	movsx  ebx,si
  402494:	mov    rbp,rdi
  402497:	mov    esi,ebx
  402499:	xor    eax,eax
  40249b:	mov    r12,rdx
  40249e:	call   401de0 <__sprintf_chk@plt+0xa40>
  4024a3:	mov    rcx,QWORD PTR [rbp+0x0]
  4024a7:	test   rcx,rcx
  4024aa:	je     4024e8 <__sprintf_chk@plt+0x1148>
  4024ac:	xor    eax,eax
  4024ae:	mov    rdx,r12
  4024b1:	mov    esi,ebx
  4024b3:	mov    rdi,rbp
  4024b6:	call   4020a0 <__sprintf_chk@plt+0xd00>
  4024bb:	mov    rax,QWORD PTR [rbp+0x0]
  4024bf:	test   rax,rax
  4024c2:	je     4024e8 <__sprintf_chk@plt+0x1148>
  4024c4:	xor    ecx,ecx
  4024c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4024d0:	mov    rdx,QWORD PTR [rax+0x18]
  4024d4:	test   rdx,rdx
  4024d7:	je     4024df <__sprintf_chk@plt+0x113f>
  4024d9:	inc    rcx
  4024dc:	mov    QWORD PTR [rdx],rcx
  4024df:	mov    rax,QWORD PTR [rax+0x8]
  4024e3:	test   rax,rax
  4024e6:	jne    4024d0 <__sprintf_chk@plt+0x1130>
  4024e8:	pop    rbx
  4024e9:	pop    rbp
  4024ea:	pop    r12
  4024ec:	ret    
  4024ed:	lea    rdi,[rip+0x1bac]        # 4040a0 <error@@Base+0xbb0>
  4024f4:	xor    eax,eax
  4024f6:	call   4034f0 <error@@Base>
  4024fb:	nop    DWORD PTR [rax+rax*1+0x0]
  402500:	endbr64 
  402504:	push   r15
  402506:	push   r14
  402508:	push   r13
  40250a:	push   r12
  40250c:	mov    r12,rsi
  40250f:	mov    esi,0x1
  402514:	push   rbp
  402515:	mov    rbp,rdi
  402518:	push   rbx
  402519:	mov    rbx,rcx
  40251c:	sub    rsp,0x58
  402520:	mov    QWORD PTR [rsp+0x20],rdx
  402525:	mov    QWORD PTR [rsp+0x28],rcx
  40252a:	lea    r14,[rsp+0x40]
  40252f:	lea    r13,[rsp+0x38]
  402534:	mov    rax,QWORD PTR fs:0x28
  40253d:	mov    QWORD PTR [rsp+0x48],rax
  402542:	xor    eax,eax
  402544:	call   401de0 <__sprintf_chk@plt+0xa40>
  402549:	mov    rdx,rbx
  40254c:	mov    esi,0x1
  402551:	mov    rdi,r12
  402554:	xor    eax,eax
  402556:	call   401de0 <__sprintf_chk@plt+0xa40>
  40255b:	mov    rbx,QWORD PTR [rbp+0x0]
  40255f:	test   rbx,rbx
  402562:	je     40268b <__sprintf_chk@plt+0x12eb>
  402568:	nop    DWORD PTR [rax+rax*1+0x0]
  402570:	xor    r15d,r15d
  402573:	mov    r10,rbp
  402576:	jmp    40258d <__sprintf_chk@plt+0x11ed>
  402578:	nop    DWORD PTR [rax+rax*1+0x0]
  402580:	mov    rbx,QWORD PTR [rbx+0x8]
  402584:	test   rbx,rbx
  402587:	je     402628 <__sprintf_chk@plt+0x1288>
  40258d:	cmp    QWORD PTR [rbx+0x18],0x0
  402592:	jne    402580 <__sprintf_chk@plt+0x11e0>
  402594:	mov    rax,QWORD PTR [rbx+0x10]
  402598:	cmp    QWORD PTR [rax+0x10],r15
  40259c:	jle    402580 <__sprintf_chk@plt+0x11e0>
  40259e:	mov    rbp,QWORD PTR [r12]
  4025a2:	test   rbp,rbp
  4025a5:	jne    4025b9 <__sprintf_chk@plt+0x1219>
  4025a7:	jmp    402580 <__sprintf_chk@plt+0x11e0>
  4025a9:	nop    DWORD PTR [rax+0x0]
  4025b0:	mov    rbp,QWORD PTR [rbp+0x8]
  4025b4:	test   rbp,rbp
  4025b7:	je     402580 <__sprintf_chk@plt+0x11e0>
  4025b9:	cmp    QWORD PTR [rbp+0x18],0x0
  4025be:	jne    4025b0 <__sprintf_chk@plt+0x1210>
  4025c0:	mov    rax,QWORD PTR [rbp+0x10]
  4025c4:	cmp    QWORD PTR [rax+0x10],r15
  4025c8:	jle    4025b0 <__sprintf_chk@plt+0x1210>
  4025ca:	mov    rdi,QWORD PTR [rsp+0x20]
  4025cf:	mov    rdx,QWORD PTR [rbx+0x10]
  4025d3:	mov    QWORD PTR [rsp+0x18],r10
  4025d8:	sub    rsp,0x8
  4025dc:	mov    rcx,QWORD PTR [rdx+0x8]
  4025e0:	mov    rsi,QWORD PTR [rdi+0x10]
  4025e4:	push   r14
  4025e6:	mov    rdi,r15
  4025e9:	push   r13
  4025eb:	push   QWORD PTR [rax+0x8]
  4025ee:	mov    r9,QWORD PTR [rax]
  4025f1:	mov    rax,QWORD PTR [rsp+0x48]
  4025f6:	mov    rdx,QWORD PTR [rdx]
  4025f9:	mov    r8,QWORD PTR [rax+0x10]
  4025fd:	xor    eax,eax
  4025ff:	call   401bb0 <__sprintf_chk@plt+0x810>
  402604:	add    rsp,0x20
  402608:	cmp    rax,r15
  40260b:	mov    r10,QWORD PTR [rsp+0x18]
  402610:	jle    4025b0 <__sprintf_chk@plt+0x1210>
  402612:	mov    QWORD PTR [rsp+0x10],rbp
  402617:	mov    QWORD PTR [rsp+0x8],rbx
  40261c:	mov    r15,rax
  40261f:	jmp    4025b0 <__sprintf_chk@plt+0x1210>
  402621:	nop    DWORD PTR [rax+0x0]
  402628:	mov    rbp,r10
  40262b:	test   r15,r15
  40262e:	je     4026aa <__sprintf_chk@plt+0x130a>
  402630:	mov    esi,0x8
  402635:	mov    edi,0x1
  40263a:	xor    eax,eax
  40263c:	call   403540 <error@@Base+0x50>
  402641:	mov    rdx,QWORD PTR [rsp+0x8]
  402646:	mov    rbx,rax
  402649:	mov    r9,rax
  40264c:	mov    r8,r15
  40264f:	mov    rcx,r13
  402652:	mov    esi,0x1
  402657:	mov    rdi,rbp
  40265a:	xor    eax,eax
  40265c:	call   401ec0 <__sprintf_chk@plt+0xb20>
  402661:	mov    rdx,QWORD PTR [rsp+0x10]
  402666:	mov    r9,rbx
  402669:	mov    r8,r15
  40266c:	mov    rcx,r14
  40266f:	mov    esi,0x1
  402674:	mov    rdi,r12
  402677:	xor    eax,eax
  402679:	call   401ec0 <__sprintf_chk@plt+0xb20>
  40267e:	mov    rbx,QWORD PTR [rbp+0x0]
  402682:	test   rbx,rbx
  402685:	jne    402570 <__sprintf_chk@plt+0x11d0>
  40268b:	mov    rax,QWORD PTR [rsp+0x48]
  402690:	xor    rax,QWORD PTR fs:0x28
  402699:	jne    4026d2 <__sprintf_chk@plt+0x1332>
  40269b:	add    rsp,0x58
  40269f:	pop    rbx
  4026a0:	pop    rbp
  4026a1:	pop    r12
  4026a3:	pop    r13
  4026a5:	pop    r14
  4026a7:	pop    r15
  4026a9:	ret    
  4026aa:	mov    rax,QWORD PTR [r10]
  4026ad:	test   rax,rax
  4026b0:	je     40268b <__sprintf_chk@plt+0x12eb>
  4026b2:	nop    WORD PTR [rax+rax*1+0x0]
  4026b8:	mov    rdx,QWORD PTR [rax+0x18]
  4026bc:	test   rdx,rdx
  4026bf:	je     4026c7 <__sprintf_chk@plt+0x1327>
  4026c1:	inc    r15
  4026c4:	mov    QWORD PTR [rdx],r15
  4026c7:	mov    rax,QWORD PTR [rax+0x8]
  4026cb:	test   rax,rax
  4026ce:	jne    4026b8 <__sprintf_chk@plt+0x1318>
  4026d0:	jmp    40268b <__sprintf_chk@plt+0x12eb>
  4026d2:	call   401260 <__stack_chk_fail@plt>
  4026d7:	nop    WORD PTR [rax+rax*1+0x0]
  4026e0:	endbr64 
  4026e4:	push   r15
  4026e6:	push   r14
  4026e8:	push   r13
  4026ea:	push   r12
  4026ec:	push   rbp
  4026ed:	push   rbx
  4026ee:	sub    rsp,0x48
  4026f2:	mov    QWORD PTR [rsp+0x8],rdi
  4026f7:	mov    rax,QWORD PTR fs:0x28
  402700:	mov    QWORD PTR [rsp+0x38],rax
  402705:	xor    eax,eax
  402707:	cmp    QWORD PTR [rsi+0x18],0xffff
  40270f:	jg     402a77 <__sprintf_chk@plt+0x16d7>
  402715:	mov    rdi,QWORD PTR [rsp+0x8]
  40271a:	mov    rbx,rsi
  40271d:	mov    rdx,rsi
  402720:	xor    eax,eax
  402722:	mov    esi,0x2
  402727:	call   401de0 <__sprintf_chk@plt+0xa40>
  40272c:	mov    rax,QWORD PTR [rbx+0x10]
  402730:	mov    rdx,QWORD PTR [rbx+0x38]
  402734:	mov    QWORD PTR [rip+0x3ab5],rax        # 4061f0 <error@@Base+0x2d00>
  40273b:	mov    rax,QWORD PTR [rbx+0x30]
  40273f:	mov    rbp,rdx
  402742:	mov    QWORD PTR [rip+0x3a9f],rax        # 4061e8 <error@@Base+0x2cf8>
  402749:	mov    rax,QWORD PTR [rbx+0x18]
  40274d:	mov    QWORD PTR [rip+0x3a84],rdx        # 4061d8 <error@@Base+0x2ce8>
  402754:	sub    rbp,rax
  402757:	mov    QWORD PTR [rip+0x3a82],rax        # 4061e0 <error@@Base+0x2cf0>
  40275e:	neg    rax
  402761:	mov    QWORD PTR [rip+0x3a68],rbp        # 4061d0 <error@@Base+0x2ce0>
  402768:	mov    QWORD PTR [rip+0x3a59],rax        # 4061c8 <error@@Base+0x2cd8>
  40276f:	mov    QWORD PTR [rip+0x3a4a],rdx        # 4061c0 <error@@Base+0x2cd0>
  402776:	mov    rbx,0xffffffffffffffff
  40277d:	cmp    rbp,rax
  402780:	jl     4028d7 <__sprintf_chk@plt+0x1537>
  402786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402790:	mov    esi,0x30
  402795:	mov    edi,0x1
  40279a:	xor    eax,eax
  40279c:	call   403540 <error@@Base+0x50>
  4027a1:	inc    rbx
  4027a4:	mov    QWORD PTR [rax+0x10],rbx
  4027a8:	mov    rsi,rax
  4027ab:	mov    rbp,rax
  4027ae:	lea    rdi,[rip+0x3a4b]        # 406200 <error@@Base+0x2d10>
  4027b5:	xor    eax,eax
  4027b7:	call   4039c0 <error@@Base+0x4d0>
  4027bc:	mov    rax,QWORD PTR [rip+0x3a15]        # 4061d8 <error@@Base+0x2ce8>
  4027c3:	mov    r12,rbx
  4027c6:	neg    r12
  4027c9:	cmp    QWORD PTR [rip+0x3a10],rax        # 4061e0 <error@@Base+0x2cf0>
  4027d0:	jg     4029a0 <__sprintf_chk@plt+0x1600>
  4027d6:	mov    rax,QWORD PTR [rip+0x39f3]        # 4061d0 <error@@Base+0x2ce0>
  4027dd:	mov    rdx,r12
  4027e0:	cmp    rbx,rax
  4027e3:	mov    r13,rax
  4027e6:	cmovle r13,rbx
  4027ea:	cmp    QWORD PTR [rip+0x39d7],r12        # 4061c8 <error@@Base+0x2cd8>
  4027f1:	cmovge rdx,QWORD PTR [rip+0x39cf]        # 4061c8 <error@@Base+0x2cd8>
  4027f9:	cmp    r13,rdx
  4027fc:	jl     40282e <__sprintf_chk@plt+0x148e>
  4027fe:	xchg   ax,ax
  402800:	xor    eax,eax
  402802:	mov    rdi,r13
  402805:	mov    rsi,rbp
  402808:	call   4022b0 <__sprintf_chk@plt+0xf10>
  40280d:	dec    r13
  402810:	mov    rax,r12
  402813:	cmp    QWORD PTR [rip+0x39ae],r12        # 4061c8 <error@@Base+0x2cd8>
  40281a:	cmovge rax,QWORD PTR [rip+0x39a6]        # 4061c8 <error@@Base+0x2cd8>
  402822:	cmp    r13,rax
  402825:	jge    402800 <__sprintf_chk@plt+0x1460>
  402827:	mov    rax,QWORD PTR [rip+0x39a2]        # 4061d0 <error@@Base+0x2ce0>
  40282e:	lea    r12,[rax+0x1]
  402832:	jmp    402848 <__sprintf_chk@plt+0x14a8>
  402834:	nop    DWORD PTR [rax+0x0]
  402838:	mov    rdi,r12
  40283b:	mov    rsi,rbp
  40283e:	xor    eax,eax
  402840:	call   4022b0 <__sprintf_chk@plt+0xf10>
  402845:	inc    r12
  402848:	cmp    QWORD PTR [rip+0x3971],rbx        # 4061c0 <error@@Base+0x2cd0>
  40284f:	mov    rax,rbx
  402852:	cmovle rax,QWORD PTR [rip+0x3966]        # 4061c0 <error@@Base+0x2cd0>
  40285a:	cmp    r12,rax
  40285d:	jle    402838 <__sprintf_chk@plt+0x1498>
  40285f:	mov    rdi,QWORD PTR [rip+0x39d2]        # 406238 <error@@Base+0x2d48>
  402866:	mov    esi,0x2
  40286b:	xor    eax,eax
  40286d:	call   403540 <error@@Base+0x50>
  402872:	mov    r15,QWORD PTR [rip+0x39a7]        # 406220 <error@@Base+0x2d30>
  402879:	lea    r13,[rip+0x39a0]        # 406220 <error@@Base+0x2d30>
  402880:	mov    QWORD PTR [rbp+0x28],rax
  402884:	xor    r12d,r12d
  402887:	mov    r14,r13
  40288a:	test   r15,r15
  40288d:	je     4028c0 <__sprintf_chk@plt+0x1520>
  40288f:	nop
  402890:	mov    rsi,r15
  402893:	mov    rdi,r14
  402896:	xor    eax,eax
  402898:	call   403ab0 <error@@Base+0x5c0>
  40289d:	movzx  ecx,WORD PTR [r15+0x10]
  4028a2:	mov    rax,QWORD PTR [rbp+0x28]
  4028a6:	mov    rdi,r15
  4028a9:	mov    WORD PTR [rax+r12*1],cx
  4028ae:	add    r12,0x2
  4028b2:	call   4011f0 <free@plt>
  4028b7:	mov    r15,QWORD PTR [r13+0x0]
  4028bb:	test   r15,r15
  4028be:	jne    402890 <__sprintf_chk@plt+0x14f0>
  4028c0:	mov    rax,QWORD PTR [rip+0x3901]        # 4061c8 <error@@Base+0x2cd8>
  4028c7:	mov    rbp,QWORD PTR [rip+0x3902]        # 4061d0 <error@@Base+0x2ce0>
  4028ce:	cmp    rbp,rax
  4028d1:	jge    402790 <__sprintf_chk@plt+0x13f0>
  4028d7:	mov    rbx,QWORD PTR [rip+0x392a]        # 406208 <error@@Base+0x2d18>
  4028de:	lea    r13,[rsp+0x18]
  4028e3:	lea    r14,[rsp+0x20]
  4028e8:	test   rbx,rbx
  4028eb:	jne    40292f <__sprintf_chk@plt+0x158f>
  4028ed:	jmp    402a30 <__sprintf_chk@plt+0x1690>
  4028f2:	nop    WORD PTR [rax+rax*1+0x0]
  4028f8:	mov    rsi,rbx
  4028fb:	xor    eax,eax
  4028fd:	lea    rdi,[rip+0x38fc]        # 406200 <error@@Base+0x2d10>
  402904:	call   403ab0 <error@@Base+0x5c0>
  402909:	mov    rdi,QWORD PTR [rbx+0x28]
  40290d:	call   4011f0 <free@plt>
  402912:	mov    rdi,rbx
  402915:	call   4011f0 <free@plt>
  40291a:	mov    rbx,QWORD PTR [rip+0x38e7]        # 406208 <error@@Base+0x2d18>
  402921:	mov    rbp,QWORD PTR [rsp+0x18]
  402926:	test   rbx,rbx
  402929:	je     402a30 <__sprintf_chk@plt+0x1690>
  40292f:	mov    rax,QWORD PTR [rbx+0x28]
  402933:	mov    rdx,rbp
  402936:	sub    rdx,QWORD PTR [rbx+0x18]
  40293a:	mov    rsi,QWORD PTR [rbx]
  40293d:	movzx  r12d,WORD PTR [rax+rdx*2]
  402942:	mov    rdi,rbp
  402945:	mov    rdx,r13
  402948:	xor    eax,eax
  40294a:	call   401d10 <__sprintf_chk@plt+0x970>
  40294f:	mov    QWORD PTR [rsp+0x20],rax
  402954:	cmp    r12,rax
  402957:	jle    4028f8 <__sprintf_chk@plt+0x1558>
  402959:	add    rax,rbp
  40295c:	mov    QWORD PTR [rsp+0x28],rax
  402961:	mov    esi,0x8
  402966:	mov    edi,0x1
  40296b:	xor    eax,eax
  40296d:	call   403540 <error@@Base+0x50>
  402972:	mov    r9,rax
  402975:	mov    rax,QWORD PTR [rsp+0x8]
  40297a:	mov    r8,r12
  40297d:	mov    rdx,QWORD PTR [rax]
  402980:	mov    rdi,rax
  402983:	sub    r8,QWORD PTR [rsp+0x20]
  402988:	mov    rcx,r14
  40298b:	mov    esi,0x2
  402990:	xor    eax,eax
  402992:	call   401ec0 <__sprintf_chk@plt+0xb20>
  402997:	jmp    4028f8 <__sprintf_chk@plt+0x1558>
  40299c:	nop    DWORD PTR [rax+0x0]
  4029a0:	mov    r13,QWORD PTR [rip+0x3829]        # 4061d0 <error@@Base+0x2ce0>
  4029a7:	mov    rax,rbx
  4029aa:	cmp    r12,r13
  4029ad:	mov    r14,r13
  4029b0:	cmovge r14,r12
  4029b4:	cmp    QWORD PTR [rip+0x3805],rbx        # 4061c0 <error@@Base+0x2cd0>
  4029bb:	cmovle rax,QWORD PTR [rip+0x37fd]        # 4061c0 <error@@Base+0x2cd0>
  4029c3:	cmp    r14,rax
  4029c6:	jg     402a0d <__sprintf_chk@plt+0x166d>
  4029c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	xor    eax,eax
  4029d2:	mov    rdi,r14
  4029d5:	mov    rsi,rbp
  4029d8:	call   4022b0 <__sprintf_chk@plt+0xf10>
  4029dd:	inc    r14
  4029e0:	mov    rax,rbx
  4029e3:	cmp    QWORD PTR [rip+0x37d6],rbx        # 4061c0 <error@@Base+0x2cd0>
  4029ea:	cmovle rax,QWORD PTR [rip+0x37ce]        # 4061c0 <error@@Base+0x2cd0>
  4029f2:	cmp    r14,rax
  4029f5:	jle    4029d0 <__sprintf_chk@plt+0x1630>
  4029f7:	mov    r13,QWORD PTR [rip+0x37d2]        # 4061d0 <error@@Base+0x2ce0>
  4029fe:	jmp    402a0d <__sprintf_chk@plt+0x166d>
  402a00:	mov    rsi,rbp
  402a03:	mov    rdi,r13
  402a06:	xor    eax,eax
  402a08:	call   4022b0 <__sprintf_chk@plt+0xf10>
  402a0d:	dec    r13
  402a10:	mov    rax,r12
  402a13:	cmp    QWORD PTR [rip+0x37ae],r12        # 4061c8 <error@@Base+0x2cd8>
  402a1a:	cmovge rax,QWORD PTR [rip+0x37a6]        # 4061c8 <error@@Base+0x2cd8>
  402a22:	cmp    r13,rax
  402a25:	jge    402a00 <__sprintf_chk@plt+0x1660>
  402a27:	jmp    40285f <__sprintf_chk@plt+0x14bf>
  402a2c:	nop    DWORD PTR [rax+0x0]
  402a30:	mov    rax,QWORD PTR [rsp+0x8]
  402a35:	xor    ecx,ecx
  402a37:	mov    rax,QWORD PTR [rax]
  402a3a:	test   rax,rax
  402a3d:	je     402a58 <__sprintf_chk@plt+0x16b8>
  402a3f:	nop
  402a40:	mov    rdx,QWORD PTR [rax+0x18]
  402a44:	test   rdx,rdx
  402a47:	je     402a4f <__sprintf_chk@plt+0x16af>
  402a49:	inc    rcx
  402a4c:	mov    QWORD PTR [rdx],rcx
  402a4f:	mov    rax,QWORD PTR [rax+0x8]
  402a53:	test   rax,rax
  402a56:	jne    402a40 <__sprintf_chk@plt+0x16a0>
  402a58:	mov    rax,QWORD PTR [rsp+0x38]
  402a5d:	xor    rax,QWORD PTR fs:0x28
  402a66:	jne    402a83 <__sprintf_chk@plt+0x16e3>
  402a68:	add    rsp,0x48
  402a6c:	pop    rbx
  402a6d:	pop    rbp
  402a6e:	pop    r12
  402a70:	pop    r13
  402a72:	pop    r14
  402a74:	pop    r15
  402a76:	ret    
  402a77:	lea    rdi,[rip+0x1641]        # 4040bf <error@@Base+0xbcf>
  402a7e:	call   4034f0 <error@@Base>
  402a83:	call   401260 <__stack_chk_fail@plt>
  402a88:	nop    DWORD PTR [rax+rax*1+0x0]
  402a90:	endbr64 
  402a94:	push   r12
  402a96:	xor    eax,eax
  402a98:	mov    r12d,esi
  402a9b:	push   rbp
  402a9c:	mov    esi,0x18
  402aa1:	mov    ebp,edx
  402aa3:	push   rbx
  402aa4:	mov    rbx,rdi
  402aa7:	mov    edi,0x1
  402aac:	call   403540 <error@@Base+0x50>
  402ab1:	mov    BYTE PTR [rax+0x10],r12b
  402ab5:	mov    DWORD PTR [rax+0x14],ebp
  402ab8:	mov    rdi,rbx
  402abb:	mov    rsi,rax
  402abe:	pop    rbx
  402abf:	pop    rbp
  402ac0:	xor    eax,eax
  402ac2:	pop    r12
  402ac4:	jmp    4039c0 <error@@Base+0x4d0>
  402ac9:	nop    DWORD PTR [rax+0x0]
  402ad0:	endbr64 
  402ad4:	push   r15
  402ad6:	push   r14
  402ad8:	push   r13
  402ada:	push   r12
  402adc:	push   rbp
  402add:	push   rbx
  402ade:	sub    rsp,0xb8
  402ae5:	mov    QWORD PTR [rsp+0x8],rdi
  402aea:	mov    QWORD PTR [rsp+0x20],rdx
  402aef:	mov    rdi,rsi
  402af2:	mov    rsi,QWORD PTR fs:0x28
  402afb:	mov    QWORD PTR [rsp+0xa8],rsi
  402b03:	xor    esi,esi
  402b05:	cmp    BYTE PTR [rdx],0x0
  402b08:	je     402b13 <__sprintf_chk@plt+0x1773>
  402b0a:	test   rdi,rdi
  402b0d:	je     402ea5 <__sprintf_chk@plt+0x1b05>
  402b13:	mov    rax,QWORD PTR [rsp+0x8]
  402b18:	lea    rsi,[rip+0x15e8]        # 404107 <error@@Base+0xc17>
  402b1f:	mov    rax,QWORD PTR [rax+0x8]
  402b23:	mov    QWORD PTR [rsp+0x28],rax
  402b28:	xor    eax,eax
  402b2a:	call   4035f0 <error@@Base+0x100>
  402b2f:	mov    r12,rax
  402b32:	mov    rax,QWORD PTR [rsp+0x20]
  402b37:	cmp    BYTE PTR [rax],0x0
  402b3a:	jne    402de8 <__sprintf_chk@plt+0x1a48>
  402b40:	mov    rsi,QWORD PTR [rsp+0x20]
  402b45:	mov    eax,0x5e
  402b4a:	mov    ecx,DWORD PTR [rsi+0x4]
  402b4d:	mov    rdi,r12
  402b50:	test   ecx,ecx
  402b52:	cmovne eax,ecx
  402b55:	movzx  r15d,BYTE PTR [rsi+0x1]
  402b5a:	mov    DWORD PTR [rsp+0x14],eax
  402b5e:	call   401390 <getc@plt>
  402b63:	cmp    eax,0xffffffff
  402b66:	je     402c57 <__sprintf_chk@plt+0x18b7>
  402b6c:	mov    rsi,QWORD PTR [rip+0x347d]        # 405ff0 <error@@Base+0x2b00>
  402b73:	movsxd rdx,eax
  402b76:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  402b7b:	mov    rbx,rcx
  402b7e:	test   rcx,rcx
  402b81:	jle    402ed2 <__sprintf_chk@plt+0x1b32>
  402b87:	lea    rsi,[rsp+0x3c]
  402b8c:	xor    ebp,ebp
  402b8e:	lea    r13,[rsp+0x40]
  402b93:	mov    QWORD PTR [rsp+0x18],rsi
  402b98:	jmp    402bde <__sprintf_chk@plt+0x183e>
  402b9a:	nop    WORD PTR [rax+rax*1+0x0]
  402ba0:	mov    rdi,QWORD PTR [rsp+0x8]
  402ba5:	movsx  esi,bpl
  402ba9:	xor    eax,eax
  402bab:	call   402a90 <__sprintf_chk@plt+0x16f0>
  402bb0:	mov    rdi,r12
  402bb3:	xor    ebp,ebp
  402bb5:	call   401390 <getc@plt>
  402bba:	cmp    eax,0xffffffff
  402bbd:	je     402c57 <__sprintf_chk@plt+0x18b7>
  402bc3:	mov    rcx,QWORD PTR [rip+0x3426]        # 405ff0 <error@@Base+0x2b00>
  402bca:	movsxd rdx,eax
  402bcd:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  402bd2:	mov    rbx,rcx
  402bd5:	test   rcx,rcx
  402bd8:	jle    402ed2 <__sprintf_chk@plt+0x1b32>
  402bde:	mov    BYTE PTR [rsp+0x40],al
  402be2:	cmp    rcx,0x1
  402be6:	je     402c10 <__sprintf_chk@plt+0x1870>
  402be8:	lea    r14,[rcx-0x1]
  402bec:	lea    rdi,[r13+0x1]
  402bf0:	mov    r8,r12
  402bf3:	mov    rcx,r14
  402bf6:	mov    edx,0x1
  402bfb:	mov    esi,0x3
  402c00:	call   401320 <__fread_chk@plt>
  402c05:	cdqe   
  402c07:	cmp    r14,rax
  402c0a:	jne    402ee0 <__sprintf_chk@plt+0x1b40>
  402c10:	mov    rdx,QWORD PTR [rsp+0x18]
  402c15:	mov    esi,0x4
  402c1a:	mov    rdi,r13
  402c1d:	call   4012b0 <utf8proc_iterate@plt>
  402c22:	cmp    eax,ebx
  402c24:	jne    402ec0 <__sprintf_chk@plt+0x1b20>
  402c2a:	mov    edx,DWORD PTR [rsp+0x3c]
  402c2e:	test   r15b,r15b
  402c31:	je     402ba0 <__sprintf_chk@plt+0x1800>
  402c37:	cmp    DWORD PTR [rsp+0x14],edx
  402c3b:	jne    402ba0 <__sprintf_chk@plt+0x1800>
  402c41:	mov    rdi,r12
  402c44:	mov    ebp,0x1
  402c49:	call   401390 <getc@plt>
  402c4e:	cmp    eax,0xffffffff
  402c51:	jne    402bc3 <__sprintf_chk@plt+0x1823>
  402c57:	xor    eax,eax
  402c59:	mov    rdi,r12
  402c5c:	call   403360 <__sprintf_chk@plt+0x1fc0>
  402c61:	mov    rax,QWORD PTR [rsp+0x20]
  402c66:	cmp    BYTE PTR [rax+0x9],0x0
  402c6a:	je     402d70 <__sprintf_chk@plt+0x19d0>
  402c70:	mov    rax,QWORD PTR [rsp+0x28]
  402c75:	test   rax,rax
  402c78:	je     402e98 <__sprintf_chk@plt+0x1af8>
  402c7e:	mov    rbp,QWORD PTR [rax+0x8]
  402c82:	test   rbp,rbp
  402c85:	je     402d70 <__sprintf_chk@plt+0x19d0>
  402c8b:	mov    r12,rbp
  402c8e:	jmp    402c9a <__sprintf_chk@plt+0x18fa>
  402c90:	mov    r12,QWORD PTR [r12+0x8]
  402c95:	test   r12,r12
  402c98:	je     402ce3 <__sprintf_chk@plt+0x1943>
  402c9a:	mov    ebx,DWORD PTR [r12+0x14]
  402c9f:	mov    edi,ebx
  402ca1:	call   401210 <utf8proc_get_property@plt>
  402ca6:	cmp    ebx,0xd
  402ca9:	ja     402dd0 <__sprintf_chk@plt+0x1a30>
  402caf:	cmp    ebx,0xb
  402cb2:	jae    402cd0 <__sprintf_chk@plt+0x1930>
  402cb4:	cmp    ebx,0x9
  402cb7:	je     402cd0 <__sprintf_chk@plt+0x1930>
  402cb9:	cmp    ebx,0xa
  402cbc:	je     402c90 <__sprintf_chk@plt+0x18f0>
  402cbe:	movsx  eax,WORD PTR [rax]
  402cc1:	sub    eax,0x17
  402cc4:	cmp    eax,0x2
  402cc7:	ja     402c90 <__sprintf_chk@plt+0x18f0>
  402cc9:	nop    DWORD PTR [rax+0x0]
  402cd0:	mov    DWORD PTR [r12+0x14],0x20
  402cd9:	mov    r12,QWORD PTR [r12+0x8]
  402cde:	test   r12,r12
  402ce1:	jne    402c9a <__sprintf_chk@plt+0x18fa>
  402ce3:	mov    r13,QWORD PTR [rsp+0x8]
  402ce8:	jmp    402d09 <__sprintf_chk@plt+0x1969>
  402cea:	nop    WORD PTR [rax+rax*1+0x0]
  402cf0:	test   r12b,r12b
  402cf3:	jne    402cfa <__sprintf_chk@plt+0x195a>
  402cf5:	cmp    eax,0xa
  402cf8:	je     402d50 <__sprintf_chk@plt+0x19b0>
  402cfa:	cmp    eax,0xa
  402cfd:	setne  r12b
  402d01:	mov    rbp,rbx
  402d04:	test   rbx,rbx
  402d07:	je     402d70 <__sprintf_chk@plt+0x19d0>
  402d09:	mov    eax,DWORD PTR [rbp+0x14]
  402d0c:	mov    rbx,QWORD PTR [rbp+0x8]
  402d10:	cmp    eax,0x20
  402d13:	jne    402cf0 <__sprintf_chk@plt+0x1950>
  402d15:	test   r12b,r12b
  402d18:	je     402d30 <__sprintf_chk@plt+0x1990>
  402d1a:	test   rbx,rbx
  402d1d:	je     402d30 <__sprintf_chk@plt+0x1990>
  402d1f:	mov    edx,DWORD PTR [rbx+0x14]
  402d22:	cmp    edx,0x20
  402d25:	je     402d30 <__sprintf_chk@plt+0x1990>
  402d27:	cmp    edx,0xa
  402d2a:	jne    402cfa <__sprintf_chk@plt+0x195a>
  402d2c:	nop    DWORD PTR [rax+0x0]
  402d30:	test   rbx,rbx
  402d33:	je     402d50 <__sprintf_chk@plt+0x19b0>
  402d35:	test   r12b,r12b
  402d38:	je     402d50 <__sprintf_chk@plt+0x19b0>
  402d3a:	cmp    DWORD PTR [rbx+0x14],0x20
  402d3e:	jne    402d50 <__sprintf_chk@plt+0x19b0>
  402d40:	movzx  eax,BYTE PTR [rbp+0x10]
  402d44:	or     BYTE PTR [rbx+0x10],al
  402d47:	nop    WORD PTR [rax+rax*1+0x0]
  402d50:	mov    rsi,rbp
  402d53:	mov    rdi,r13
  402d56:	xor    eax,eax
  402d58:	call   403ab0 <error@@Base+0x5c0>
  402d5d:	mov    rdi,rbp
  402d60:	call   4011f0 <free@plt>
  402d65:	mov    rbp,rbx
  402d68:	test   rbx,rbx
  402d6b:	jne    402d09 <__sprintf_chk@plt+0x1969>
  402d6d:	nop    DWORD PTR [rax]
  402d70:	mov    rax,QWORD PTR [rsp+0x20]
  402d75:	cmp    BYTE PTR [rax+0xa],0x0
  402d79:	je     402da4 <__sprintf_chk@plt+0x1a04>
  402d7b:	mov    rax,QWORD PTR [rsp+0x28]
  402d80:	test   rax,rax
  402d83:	je     402e88 <__sprintf_chk@plt+0x1ae8>
  402d89:	mov    rbx,QWORD PTR [rax+0x8]
  402d8d:	jmp    402d9f <__sprintf_chk@plt+0x19ff>
  402d8f:	nop
  402d90:	mov    edi,DWORD PTR [rbx+0x14]
  402d93:	call   401280 <utf8proc_tolower@plt>
  402d98:	mov    DWORD PTR [rbx+0x14],eax
  402d9b:	mov    rbx,QWORD PTR [rbx+0x8]
  402d9f:	test   rbx,rbx
  402da2:	jne    402d90 <__sprintf_chk@plt+0x19f0>
  402da4:	mov    rax,QWORD PTR [rsp+0xa8]
  402dac:	xor    rax,QWORD PTR fs:0x28
  402db5:	jne    402eee <__sprintf_chk@plt+0x1b4e>
  402dbb:	add    rsp,0xb8
  402dc2:	pop    rbx
  402dc3:	pop    rbp
  402dc4:	pop    r12
  402dc6:	pop    r13
  402dc8:	pop    r14
  402dca:	pop    r15
  402dcc:	ret    
  402dcd:	nop    DWORD PTR [rax]
  402dd0:	cmp    ebx,0xa0
  402dd6:	jne    402cbe <__sprintf_chk@plt+0x191e>
  402ddc:	jmp    402cd0 <__sprintf_chk@plt+0x1930>
  402de1:	nop    DWORD PTR [rax+0x0]
  402de8:	lea    r13,[rsp+0x40]
  402ded:	mov    rdx,r12
  402df0:	mov    esi,0x63
  402df5:	mov    rdi,r13
  402df8:	call   4012a0 <fgets@plt>
  402dfd:	test   rax,rax
  402e00:	je     402e1c <__sprintf_chk@plt+0x1a7c>
  402e02:	mov    ecx,0x33
  402e07:	lea    rdi,[rip+0x1342]        # 404150 <error@@Base+0xc60>
  402e0e:	mov    rsi,r13
  402e11:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e13:	seta   al
  402e16:	sbb    al,0x0
  402e18:	test   al,al
  402e1a:	je     402e38 <__sprintf_chk@plt+0x1a98>
  402e1c:	mov    rdi,r12
  402e1f:	call   401270 <rewind@plt>
  402e24:	xor    eax,eax
  402e26:	mov    rsi,QWORD PTR [rsp+0x20]
  402e2b:	mov    BYTE PTR [rsi+0xb],al
  402e2e:	jmp    402b40 <__sprintf_chk@plt+0x17a0>
  402e33:	nop    DWORD PTR [rax+rax*1+0x0]
  402e38:	xor    ebx,ebx
  402e3a:	lea    rbp,[rip+0x1347]        # 404188 <error@@Base+0xc98>
  402e41:	nop    DWORD PTR [rax+0x0]
  402e48:	mov    rdx,r12
  402e4b:	mov    esi,0x63
  402e50:	mov    rdi,r13
  402e53:	call   4012a0 <fgets@plt>
  402e58:	test   rax,rax
  402e5b:	je     402e7b <__sprintf_chk@plt+0x1adb>
  402e5d:	mov    ecx,0x38
  402e62:	mov    rsi,r13
  402e65:	mov    rdi,rbp
  402e68:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  402e6a:	seta   al
  402e6d:	sbb    al,0x0
  402e6f:	test   al,al
  402e71:	jne    402e48 <__sprintf_chk@plt+0x1aa8>
  402e73:	inc    ebx
  402e75:	cmp    bx,0x2
  402e79:	jne    402e48 <__sprintf_chk@plt+0x1aa8>
  402e7b:	mov    eax,0x1
  402e80:	jmp    402e26 <__sprintf_chk@plt+0x1a86>
  402e82:	nop    WORD PTR [rax+rax*1+0x0]
  402e88:	mov    rax,QWORD PTR [rsp+0x8]
  402e8d:	mov    rbx,QWORD PTR [rax]
  402e90:	jmp    402d9f <__sprintf_chk@plt+0x19ff>
  402e95:	nop    DWORD PTR [rax]
  402e98:	mov    rax,QWORD PTR [rsp+0x8]
  402e9d:	mov    rbp,QWORD PTR [rax]
  402ea0:	jmp    402c82 <__sprintf_chk@plt+0x18e2>
  402ea5:	lea    rsi,[rip+0x122b]        # 4040d7 <error@@Base+0xbe7>
  402eac:	lea    rdi,[rip+0x122e]        # 4040e1 <error@@Base+0xbf1>
  402eb3:	xor    eax,eax
  402eb5:	call   4035a0 <error@@Base+0xb0>
  402eba:	nop    WORD PTR [rax+rax*1+0x0]
  402ec0:	movsxd rdi,eax
  402ec3:	call   401370 <utf8proc_errmsg@plt>
  402ec8:	mov    rdi,rax
  402ecb:	xor    eax,eax
  402ecd:	call   4034f0 <error@@Base>
  402ed2:	lea    rdi,[rip+0x1218]        # 4040f1 <error@@Base+0xc01>
  402ed9:	xor    eax,eax
  402edb:	call   4034f0 <error@@Base>
  402ee0:	lea    rdi,[rip+0x1222]        # 404109 <error@@Base+0xc19>
  402ee7:	xor    eax,eax
  402ee9:	call   4034f0 <error@@Base>
  402eee:	call   401260 <__stack_chk_fail@plt>
  402ef3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402efe:	xchg   ax,ax
  402f00:	endbr64 
  402f04:	sub    rsp,0x8
  402f08:	call   401220 <utf8proc_encode_char@plt>
  402f0d:	test   rax,rax
  402f10:	jle    402f17 <__sprintf_chk@plt+0x1b77>
  402f12:	add    rsp,0x8
  402f16:	ret    
  402f17:	lea    rdi,[rip+0x1203]        # 404121 <error@@Base+0xc31>
  402f1e:	xor    eax,eax
  402f20:	call   4034f0 <error@@Base>
  402f25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402f30:	endbr64 
  402f34:	push   r13
  402f36:	xor    r13d,r13d
  402f39:	push   r12
  402f3b:	mov    r12,rdx
  402f3e:	push   rbp
  402f3f:	mov    ebp,esi
  402f41:	push   rbx
  402f42:	mov    rbx,rdx
  402f45:	sub    rsp,0x18
  402f49:	test   dil,dil
  402f4c:	jne    403048 <__sprintf_chk@plt+0x1ca8>
  402f52:	cmp    ebp,0xa
  402f55:	jne    402f90 <__sprintf_chk@plt+0x1bf0>
  402f57:	test   cl,cl
  402f59:	lea    rax,[rip+0x12b9]        # 404219 <error@@Base+0xd29>
  402f60:	lea    rcx,[rip+0x11d1]        # 404138 <error@@Base+0xc48>
  402f67:	cmove  rcx,rax
  402f6b:	add    rsp,0x18
  402f6f:	mov    rdi,rbx
  402f72:	pop    rbx
  402f73:	pop    rbp
  402f74:	pop    r12
  402f76:	mov    rdx,0xffffffffffffffff
  402f7d:	mov    esi,0x1
  402f82:	xor    eax,eax
  402f84:	pop    r13
  402f86:	jmp    4013a0 <__sprintf_chk@plt>
  402f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  402f90:	mov    edi,ebp
  402f92:	call   401210 <utf8proc_get_property@plt>
  402f97:	cmp    ebp,0x20
  402f9a:	je     402fb6 <__sprintf_chk@plt+0x1c16>
  402f9c:	movzx  eax,WORD PTR [rax]
  402f9f:	cmp    ax,0x1d
  402fa3:	ja     403008 <__sprintf_chk@plt+0x1c68>
  402fa5:	mov    edx,0x1
  402faa:	shlx   rax,rdx,rax
  402faf:	test   eax,0x207ffffe
  402fb4:	je     403008 <__sprintf_chk@plt+0x1c68>
  402fb6:	mov    edi,ebp
  402fb8:	call   4012f0 <utf8proc_category@plt>
  402fbd:	sub    eax,0x6
  402fc0:	cmp    eax,0x2
  402fc3:	ja     402fe0 <__sprintf_chk@plt+0x1c40>
  402fc5:	mov    rsi,rbx
  402fc8:	mov    edi,0x25cc
  402fcd:	xor    eax,eax
  402fcf:	call   402f00 <__sprintf_chk@plt+0x1b60>
  402fd4:	cbw    
  402fd6:	add    r13d,eax
  402fd9:	movsx  rbx,r13w
  402fdd:	add    rbx,r12
  402fe0:	mov    rsi,rbx
  402fe3:	mov    edi,ebp
  402fe5:	xor    eax,eax
  402fe7:	call   402f00 <__sprintf_chk@plt+0x1b60>
  402fec:	cbw    
  402fee:	add    r13d,eax
  402ff1:	movsx  r13,r13w
  402ff5:	mov    BYTE PTR [r12+r13*1],0x0
  402ffa:	add    rsp,0x18
  402ffe:	pop    rbx
  402fff:	pop    rbp
  403000:	pop    r12
  403002:	pop    r13
  403004:	ret    
  403005:	nop    DWORD PTR [rax]
  403008:	mov    r8d,ebp
  40300b:	lea    rcx,[rip+0x112b]        # 40413d <error@@Base+0xc4d>
  403012:	cmp    ebp,0xff
  403018:	jbe    403021 <__sprintf_chk@plt+0x1c81>
  40301a:	lea    rcx,[rip+0x1123]        # 404144 <error@@Base+0xc54>
  403021:	add    rsp,0x18
  403025:	mov    rdi,rbx
  403028:	pop    rbx
  403029:	pop    rbp
  40302a:	pop    r12
  40302c:	mov    rdx,0xffffffffffffffff
  403033:	mov    esi,0x1
  403038:	xor    eax,eax
  40303a:	pop    r13
  40303c:	jmp    4013a0 <__sprintf_chk@plt>
  403041:	nop    DWORD PTR [rax+0x0]
  403048:	mov    rsi,rdx
  40304b:	mov    edi,0x5e
  403050:	xor    eax,eax
  403052:	mov    DWORD PTR [rsp+0xc],ecx
  403056:	call   402f00 <__sprintf_chk@plt+0x1b60>
  40305b:	movsx  r13w,al
  403060:	movsx  rax,al
  403064:	lea    rbx,[r12+rax*1]
  403068:	mov    ecx,DWORD PTR [rsp+0xc]
  40306c:	jmp    402f52 <__sprintf_chk@plt+0x1bb2>
  403071:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40307c:	nop    DWORD PTR [rax+0x0]
  403080:	endbr64 
  403084:	push   r12
  403086:	push   rbp
  403087:	mov    rbp,rdi
  40308a:	mov    rdi,rsi
  40308d:	push   rbx
  40308e:	lea    rsi,[rip+0x10b6]        # 40414b <error@@Base+0xc5b>
  403095:	mov    rbx,rdx
  403098:	sub    rsp,0x20
  40309c:	mov    rax,QWORD PTR fs:0x28
  4030a5:	mov    QWORD PTR [rsp+0x18],rax
  4030aa:	xor    eax,eax
  4030ac:	call   4035f0 <error@@Base+0x100>
  4030b1:	mov    r12,rax
  4030b4:	test   rbx,rbx
  4030b7:	je     40310b <__sprintf_chk@plt+0x1d6b>
  4030b9:	mov    rcx,rax
  4030bc:	mov    edx,0x37
  4030c1:	mov    esi,0x1
  4030c6:	lea    rdi,[rip+0x1083]        # 404150 <error@@Base+0xc60>
  4030cd:	call   401350 <fwrite@plt>
  4030d2:	mov    rcx,r12
  4030d5:	mov    edx,0x37
  4030da:	mov    esi,0x1
  4030df:	lea    rdi,[rip+0x10a2]        # 404188 <error@@Base+0xc98>
  4030e6:	call   401350 <fwrite@plt>
  4030eb:	mov    rdi,r12
  4030ee:	xor    eax,eax
  4030f0:	call   rbx
  4030f2:	mov    rcx,r12
  4030f5:	mov    edx,0x37
  4030fa:	mov    esi,0x1
  4030ff:	lea    rdi,[rip+0x1082]        # 404188 <error@@Base+0xc98>
  403106:	call   401350 <fwrite@plt>
  40310b:	mov    rbx,QWORD PTR [rbp+0x0]
  40310f:	test   rbx,rbx
  403112:	je     403147 <__sprintf_chk@plt+0x1da7>
  403114:	lea    rbp,[rsp+0xf]
  403119:	nop    DWORD PTR [rax+0x0]
  403120:	mov    esi,DWORD PTR [rbx+0x14]
  403123:	movsx  edi,BYTE PTR [rbx+0x10]
  403127:	xor    ecx,ecx
  403129:	mov    rdx,rbp
  40312c:	xor    eax,eax
  40312e:	call   402f30 <__sprintf_chk@plt+0x1b90>
  403133:	mov    rsi,r12
  403136:	mov    rdi,rbp
  403139:	call   401290 <fputs@plt>
  40313e:	mov    rbx,QWORD PTR [rbx+0x8]
  403142:	test   rbx,rbx
  403145:	jne    403120 <__sprintf_chk@plt+0x1d80>
  403147:	xor    eax,eax
  403149:	mov    rdi,r12
  40314c:	call   403360 <__sprintf_chk@plt+0x1fc0>
  403151:	mov    rax,QWORD PTR [rsp+0x18]
  403156:	xor    rax,QWORD PTR fs:0x28
  40315f:	jne    40316a <__sprintf_chk@plt+0x1dca>
  403161:	add    rsp,0x20
  403165:	pop    rbx
  403166:	pop    rbp
  403167:	pop    r12
  403169:	ret    
  40316a:	call   401260 <__stack_chk_fail@plt>
  40316f:	nop
  403170:	endbr64 
  403174:	push   r14
  403176:	push   r13
  403178:	push   r12
  40317a:	push   rbp
  40317b:	push   rbx
  40317c:	sub    rsp,0x10
  403180:	mov    rax,QWORD PTR fs:0x28
  403189:	mov    QWORD PTR [rsp+0x8],rax
  40318e:	xor    eax,eax
  403190:	cmp    BYTE PTR [rsi],0x0
  403193:	mov    DWORD PTR [rsp+0x4],0x0
  40319b:	je     4031f0 <__sprintf_chk@plt+0x1e50>
  40319d:	mov    r14,rdi
  4031a0:	mov    rbp,rsi
  4031a3:	lea    r13,[rsp+0x4]
  4031a8:	mov    r12,0xffffffffffffffff
  4031af:	jmp    4031d4 <__sprintf_chk@plt+0x1e34>
  4031b1:	nop    DWORD PTR [rax+0x0]
  4031b8:	mov    edx,DWORD PTR [rsp+0x4]
  4031bc:	movsxd rbx,ebx
  4031bf:	xor    esi,esi
  4031c1:	xor    eax,eax
  4031c3:	mov    rdi,r14
  4031c6:	add    rbp,rbx
  4031c9:	call   402a90 <__sprintf_chk@plt+0x16f0>
  4031ce:	cmp    BYTE PTR [rbp+0x0],0x0
  4031d2:	je     4031f0 <__sprintf_chk@plt+0x1e50>
  4031d4:	mov    rdx,r13
  4031d7:	mov    rsi,r12
  4031da:	mov    rdi,rbp
  4031dd:	call   4012b0 <utf8proc_iterate@plt>
  4031e2:	mov    rbx,rax
  4031e5:	test   eax,eax
  4031e7:	jg     4031b8 <__sprintf_chk@plt+0x1e18>
  4031e9:	xor    eax,eax
  4031eb:	jmp    4031f5 <__sprintf_chk@plt+0x1e55>
  4031ed:	nop    DWORD PTR [rax]
  4031f0:	mov    eax,0x1
  4031f5:	mov    rcx,QWORD PTR [rsp+0x8]
  4031fa:	xor    rcx,QWORD PTR fs:0x28
  403203:	jne    403212 <__sprintf_chk@plt+0x1e72>
  403205:	add    rsp,0x10
  403209:	pop    rbx
  40320a:	pop    rbp
  40320b:	pop    r12
  40320d:	pop    r13
  40320f:	pop    r14
  403211:	ret    
  403212:	call   401260 <__stack_chk_fail@plt>
  403217:	nop    WORD PTR [rax+rax*1+0x0]
  403220:	push   rbp
  403221:	push   rbx
  403222:	mov    ebx,edi
  403224:	movsx  ebx,bx
  403227:	sub    rsp,0x78
  40322b:	mov    rax,QWORD PTR fs:0x28
  403234:	mov    QWORD PTR [rsp+0x68],rax
  403239:	xor    eax,eax
  40323b:	mov    rbp,rsp
  40323e:	call   401230 <getpid@plt>
  403243:	mov    r9d,eax
  403246:	sub    rsp,0x8
  40324a:	mov    rax,0x406250
  403251:	push   rbx
  403252:	mov    r8,QWORD PTR [rax]
  403255:	lea    rcx,[rip+0xf64]        # 4041c0 <error@@Base+0xcd0>
  40325c:	mov    edx,0x64
  403261:	mov    esi,0x1
  403266:	mov    rdi,rbp
  403269:	xor    eax,eax
  40326b:	call   4013a0 <__sprintf_chk@plt>
  403270:	mov    rdi,rbp
  403273:	call   401380 <strdup@plt>
  403278:	pop    rdx
  403279:	pop    rcx
  40327a:	mov    rdx,QWORD PTR [rsp+0x68]
  40327f:	xor    rdx,QWORD PTR fs:0x28
  403288:	jne    403291 <__sprintf_chk@plt+0x1ef1>
  40328a:	add    rsp,0x78
  40328e:	pop    rbx
  40328f:	pop    rbp
  403290:	ret    
  403291:	call   401260 <__stack_chk_fail@plt>
  403296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032a0:	push   r12
  4032a2:	mov    rax,0x406258
  4032a9:	mov    r12d,edi
  4032ac:	push   rbp
  4032ad:	push   rbx
  4032ae:	mov    rdx,QWORD PTR [rax]
  4032b1:	test   rdx,rdx
  4032b4:	je     4032ba <__sprintf_chk@plt+0x1f1a>
  4032b6:	xor    eax,eax
  4032b8:	call   rdx
  4032ba:	cmp    WORD PTR [rip+0x2f80],0x0        # 406242 <error@@Base+0x2d52>
  4032c2:	jle    4032fa <__sprintf_chk@plt+0x1f5a>
  4032c4:	mov    ebx,0x1
  4032c9:	nop    DWORD PTR [rax+0x0]
  4032d0:	movsx  edi,bx
  4032d3:	xor    eax,eax
  4032d5:	call   403220 <__sprintf_chk@plt+0x1e80>
  4032da:	mov    rdi,rax
  4032dd:	mov    rbp,rax
  4032e0:	xor    eax,eax
  4032e2:	call   401200 <unlink@plt>
  4032e7:	inc    ebx
  4032e9:	mov    rdi,rbp
  4032ec:	call   4011f0 <free@plt>
  4032f1:	cmp    bx,WORD PTR [rip+0x2f4a]        # 406242 <error@@Base+0x2d52>
  4032f8:	jle    4032d0 <__sprintf_chk@plt+0x1f30>
  4032fa:	mov    edi,r12d
  4032fd:	call   401340 <exit@plt>
  403302:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40330d:	nop    DWORD PTR [rax]
  403310:	endbr64 
  403314:	movzx  edx,BYTE PTR [rdi]
  403317:	movzx  ecx,BYTE PTR [rsi]
  40331a:	test   dl,dl
  40331c:	je     403343 <__sprintf_chk@plt+0x1fa3>
  40331e:	cmp    cl,dl
  403320:	jne    403349 <__sprintf_chk@plt+0x1fa9>
  403322:	xor    eax,eax
  403324:	jmp    403334 <__sprintf_chk@plt+0x1f94>
  403326:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403330:	cmp    dl,cl
  403332:	jne    403349 <__sprintf_chk@plt+0x1fa9>
  403334:	inc    rax
  403337:	movzx  edx,BYTE PTR [rdi+rax*1]
  40333b:	movzx  ecx,BYTE PTR [rsi+rax*1]
  40333f:	test   dl,dl
  403341:	jne    403330 <__sprintf_chk@plt+0x1f90>
  403343:	test   cl,cl
  403345:	je     403358 <__sprintf_chk@plt+0x1fb8>
  403347:	xor    edx,edx
  403349:	cmp    dl,cl
  40334b:	sbb    eax,eax
  40334d:	or     eax,0x1
  403350:	ret    
  403351:	nop    DWORD PTR [rax+0x0]
  403358:	xor    eax,eax
  40335a:	ret    
  40335b:	nop    DWORD PTR [rax+rax*1+0x0]
  403360:	endbr64 
  403364:	mov    rax,QWORD PTR [rip+0x2c6d]        # 405fd8 <error@@Base+0x2ae8>
  40336b:	cmp    QWORD PTR [rax],rdi
  40336e:	je     403388 <__sprintf_chk@plt+0x1fe8>
  403370:	mov    rax,QWORD PTR [rip+0x2c59]        # 405fd0 <error@@Base+0x2ae0>
  403377:	cmp    QWORD PTR [rax],rdi
  40337a:	je     403388 <__sprintf_chk@plt+0x1fe8>
  40337c:	jmp    401240 <fclose@plt>
  403381:	nop    DWORD PTR [rax+0x0]
  403388:	ret    
  403389:	nop    DWORD PTR [rax+0x0]
  403390:	endbr64 
  403394:	sub    rsp,0xa8
  40339b:	mov    rsi,rdi
  40339e:	mov    rdx,rsp
  4033a1:	mov    edi,0x1
  4033a6:	mov    rax,QWORD PTR fs:0x28
  4033af:	mov    QWORD PTR [rsp+0x98],rax
  4033b7:	xor    eax,eax
  4033b9:	call   401300 <__xstat@plt>
  4033be:	test   eax,eax
  4033c0:	sete   al
  4033c3:	mov    rcx,QWORD PTR [rsp+0x98]
  4033cb:	xor    rcx,QWORD PTR fs:0x28
  4033d4:	jne    4033de <__sprintf_chk@plt+0x203e>
  4033d6:	add    rsp,0xa8
  4033dd:	ret    
  4033de:	call   401260 <__stack_chk_fail@plt>
  4033e3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4033ee:	xchg   ax,ax
  4033f0:	endbr64 
  4033f4:	movzx  eax,WORD PTR [rip+0x2e47]        # 406242 <error@@Base+0x2d52>
  4033fb:	push   rbx
  4033fc:	lea    edi,[rax+0x1]
  4033ff:	mov    WORD PTR [rip+0x2e3c],di        # 406242 <error@@Base+0x2d52>
  403406:	xor    eax,eax
  403408:	movsx  edi,di
  40340b:	call   403220 <__sprintf_chk@plt+0x1e80>
  403410:	mov    rbx,rax
  403413:	mov    rdi,rax
  403416:	xor    eax,eax
  403418:	call   401200 <unlink@plt>
  40341d:	mov    rax,rbx
  403420:	pop    rbx
  403421:	ret    
  403422:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40342d:	nop    DWORD PTR [rax]
  403430:	endbr64 
  403434:	push   rbx
  403435:	mov    rbx,rdi
  403438:	call   401250 <strlen@plt>
  40343d:	lea    ecx,[rax-0x1]
  403440:	movsx  rdx,cx
  403444:	test   cx,cx
  403447:	js     403473 <__sprintf_chk@plt+0x20d3>
  403449:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  40344d:	je     403473 <__sprintf_chk@plt+0x20d3>
  40344f:	sub    eax,0x2
  403452:	movsx  rdx,ax
  403456:	jmp    40346e <__sprintf_chk@plt+0x20ce>
  403458:	nop    DWORD PTR [rax+rax*1+0x0]
  403460:	lea    rax,[rdx-0x1]
  403464:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  403469:	je     403473 <__sprintf_chk@plt+0x20d3>
  40346b:	mov    rdx,rax
  40346e:	test   dx,dx
  403471:	jns    403460 <__sprintf_chk@plt+0x20c0>
  403473:	lea    rax,[rbx+rdx*1+0x1]
  403478:	pop    rbx
  403479:	ret    
  40347a:	nop    WORD PTR [rax+rax*1+0x0]
  403480:	endbr64 
  403484:	push   rax
  403485:	pop    rax
  403486:	xor    edi,edi
  403488:	xor    eax,eax
  40348a:	sub    rsp,0x8
  40348e:	call   4032a0 <__sprintf_chk@plt+0x1f00>
  403493:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40349e:	xchg   ax,ax
  4034a0:	push   rax
  4034a1:	pop    rax
  4034a2:	sub    rsp,0x8
  4034a6:	mov    rax,0x406248
  4034ad:	mov    rdx,QWORD PTR [rax]
  4034b0:	test   rdx,rdx
  4034b3:	je     4034c0 <__sprintf_chk@plt+0x2120>
  4034b5:	xor    eax,eax
  4034b7:	call   rdx
  4034b9:	xor    eax,eax
  4034bb:	call   403480 <__sprintf_chk@plt+0x20e0>
  4034c0:	mov    rax,0x406250
  4034c7:	mov    r8,rdi
  4034ca:	mov    rcx,QWORD PTR [rax]
  4034cd:	mov    rax,QWORD PTR [rip+0x2b24]        # 405ff8 <error@@Base+0x2b08>
  4034d4:	lea    rdx,[rip+0xcf3]        # 4041ce <error@@Base+0xcde>
  4034db:	mov    rdi,QWORD PTR [rax]
  4034de:	mov    esi,0x1
  4034e3:	xor    eax,eax
  4034e5:	call   401360 <__fprintf_chk@plt>
  4034ea:	jmp    4034b9 <__sprintf_chk@plt+0x2119>
  4034ec:	nop    DWORD PTR [rax+0x0]

00000000004034f0 <error@@Base>:
  4034f0:	endbr64 
  4034f4:	push   rax
  4034f5:	pop    rax
  4034f6:	lea    rdx,[rip+0xce0]        # 4041dd <error@@Base+0xced>
  4034fd:	mov    esi,0x1
  403502:	sub    rsp,0x8
  403506:	mov    rax,0x406250
  40350d:	mov    r8,rdi
  403510:	mov    rcx,QWORD PTR [rax]
  403513:	mov    rax,QWORD PTR [rip+0x2ade]        # 405ff8 <error@@Base+0x2b08>
  40351a:	mov    rdi,QWORD PTR [rax]
  40351d:	xor    eax,eax
  40351f:	call   401360 <__fprintf_chk@plt>
  403524:	mov    rax,0x406198
  40352b:	mov    edi,DWORD PTR [rax]
  40352d:	xor    eax,eax
  40352f:	call   4032a0 <__sprintf_chk@plt+0x1f00>
  403534:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40353f:	nop
  403540:	endbr64 
  403544:	sub    rsp,0x8
  403548:	call   4012c0 <calloc@plt>
  40354d:	test   rax,rax
  403550:	je     403557 <error@@Base+0x67>
  403552:	add    rsp,0x8
  403556:	ret    
  403557:	lea    rdi,[rip+0xc87]        # 4041e5 <error@@Base+0xcf5>
  40355e:	call   4034f0 <error@@Base>
  403563:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40356e:	xchg   ax,ax
  403570:	endbr64 
  403574:	cmp    BYTE PTR [rip+0x2cc5],0x0        # 406240 <error@@Base+0x2d50>
  40357b:	je     40357e <error@@Base+0x8e>
  40357d:	ret    
  40357e:	push   rax
  40357f:	lea    rdi,[rip+0xc79]        # 4041ff <error@@Base+0xd0f>
  403586:	xor    eax,eax
  403588:	mov    BYTE PTR [rip+0x2cb1],0x1        # 406240 <error@@Base+0x2d50>
  40358f:	call   4034f0 <error@@Base>
  403594:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40359f:	nop
  4035a0:	endbr64 
  4035a4:	push   rax
  4035a5:	pop    rax
  4035a6:	lea    rdx,[rip+0xc61]        # 40420e <error@@Base+0xd1e>
  4035ad:	sub    rsp,0x8
  4035b1:	mov    rax,0x406250
  4035b8:	mov    r8,rdi
  4035bb:	mov    rcx,QWORD PTR [rax]
  4035be:	mov    rax,QWORD PTR [rip+0x2a33]        # 405ff8 <error@@Base+0x2b08>
  4035c5:	mov    r9,rsi
  4035c8:	mov    rdi,QWORD PTR [rax]
  4035cb:	mov    esi,0x1
  4035d0:	xor    eax,eax
  4035d2:	call   401360 <__fprintf_chk@plt>
  4035d7:	mov    rax,0x406198
  4035de:	mov    edi,DWORD PTR [rax]
  4035e0:	xor    eax,eax
  4035e2:	call   4032a0 <__sprintf_chk@plt+0x1f00>
  4035e7:	nop    WORD PTR [rax+rax*1+0x0]
  4035f0:	endbr64 
  4035f4:	test   rdi,rdi
  4035f7:	je     403640 <error@@Base+0x150>
  4035f9:	push   rbp
  4035fa:	mov    rbp,rsi
  4035fd:	push   rbx
  4035fe:	mov    rbx,rdi
  403601:	sub    rsp,0x8
  403605:	call   401330 <fopen@plt>
  40360a:	test   rax,rax
  40360d:	je     403620 <error@@Base+0x130>
  40360f:	add    rsp,0x8
  403613:	pop    rbx
  403614:	pop    rbp
  403615:	ret    
  403616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403620:	cmp    BYTE PTR [rbp+0x0],0x77
  403624:	mov    rsi,rbx
  403627:	je     403650 <error@@Base+0x160>
  403629:	lea    rdi,[rip+0xc01]        # 404231 <error@@Base+0xd41>
  403630:	xor    eax,eax
  403632:	call   4035a0 <error@@Base+0xb0>
  403637:	nop    WORD PTR [rax+rax*1+0x0]
  403640:	cmp    BYTE PTR [rsi],0x72
  403643:	je     403660 <error@@Base+0x170>
  403645:	mov    rax,QWORD PTR [rip+0x2984]        # 405fd0 <error@@Base+0x2ae0>
  40364c:	mov    rax,QWORD PTR [rax]
  40364f:	ret    
  403650:	lea    rdi,[rip+0xbc4]        # 40421b <error@@Base+0xd2b>
  403657:	call   4035a0 <error@@Base+0xb0>
  40365c:	nop    DWORD PTR [rax+0x0]
  403660:	mov    rax,QWORD PTR [rip+0x2971]        # 405fd8 <error@@Base+0x2ae8>
  403667:	mov    rax,QWORD PTR [rax]
  40366a:	ret    
  40366b:	nop    DWORD PTR [rax+rax*1+0x0]
  403670:	endbr64 
  403674:	push   r15
  403676:	xor    eax,eax
  403678:	push   r14
  40367a:	mov    r14,rsi
  40367d:	push   r13
  40367f:	push   r12
  403681:	push   rbp
  403682:	push   rbx
  403683:	sub    rsp,0x38
  403687:	mov    QWORD PTR [rsp+0x8],rdi
  40368c:	mov    rdi,QWORD PTR [rsi]
  40368f:	mov    QWORD PTR [rsp+0x28],rdx
  403694:	mov    QWORD PTR [rsp+0x10],rcx
  403699:	call   403430 <__sprintf_chk@plt+0x2090>
  40369e:	mov    rcx,0x406250
  4036a5:	lea    rsi,[rip+0xfffffffffffffec4]        # 403570 <error@@Base+0x80>
  4036ac:	mov    edi,0x2
  4036b1:	mov    QWORD PTR [rcx],rax
  4036b4:	call   4012e0 <__sysv_signal@plt>
  4036b9:	lea    rsi,[rip+0xfffffffffffffeb0]        # 403570 <error@@Base+0x80>
  4036c0:	mov    edi,0xf
  4036c5:	call   4012e0 <__sysv_signal@plt>
  4036ca:	mov    r9,QWORD PTR [rsp+0x8]
  4036cf:	mov    r15d,DWORD PTR [r9]
  4036d2:	cmp    r15d,0x1
  4036d6:	je     4038a0 <error@@Base+0x3b0>
  4036dc:	mov    rdx,QWORD PTR [rsp+0x10]
  4036e1:	jle    4038ac <error@@Base+0x3bc>
  4036e7:	mov    r8d,r15d
  4036ea:	xor    r12d,r12d
  4036ed:	mov    r15,rdx
  4036f0:	mov    r13d,0x1
  4036f6:	mov    ebx,0x1
  4036fb:	mov    rdx,r14
  4036fe:	jmp    40371a <error@@Base+0x22a>
  403700:	movsx  rax,r12w
  403704:	mov    QWORD PTR [rdx+rax*8],rbp
  403708:	inc    ebx
  40370a:	inc    r12d
  40370d:	movsx  r13d,bx
  403711:	cmp    r13d,r8d
  403714:	jge    403840 <error@@Base+0x350>
  40371a:	movsx  rax,bx
  40371e:	mov    rbp,QWORD PTR [rdx+rax*8]
  403722:	lea    r10,[rax*8+0x0]
  40372a:	cmp    BYTE PTR [rbp+0x0],0x2d
  40372e:	jne    403700 <error@@Base+0x210>
  403730:	movzx  r14d,BYTE PTR [rbp+0x1]
  403735:	mov    QWORD PTR [rsp+0x20],r10
  40373a:	test   r14b,r14b
  40373d:	je     403700 <error@@Base+0x210>
  40373f:	mov    rdi,rbp
  403742:	mov    DWORD PTR [rsp+0x1c],r8d
  403747:	mov    QWORD PTR [rsp+0x10],rdx
  40374c:	mov    QWORD PTR [rsp+0x8],r9
  403751:	call   401250 <strlen@plt>
  403756:	cmp    rax,0x6
  40375a:	mov    ecx,0x6
  40375f:	cmovle rcx,rax
  403763:	lea    rsi,[rip+0xadb]        # 404245 <error@@Base+0xd55>
  40376a:	cmp    rcx,rcx
  40376d:	mov    rdi,rbp
  403770:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403772:	seta   al
  403775:	sbb    al,0x0
  403777:	test   al,al
  403779:	je     4038d0 <error@@Base+0x3e0>
  40377f:	mov    r8d,DWORD PTR [rsp+0x1c]
  403784:	inc    r13d
  403787:	xor    eax,eax
  403789:	cmp    r13d,r8d
  40378c:	mov    r9,QWORD PTR [rsp+0x8]
  403791:	mov    rdx,QWORD PTR [rsp+0x10]
  403796:	jge    4037a2 <error@@Base+0x2b2>
  403798:	mov    r10,QWORD PTR [rsp+0x20]
  40379d:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  4037a2:	test   r15,r15
  4037a5:	je     4037db <error@@Base+0x2eb>
  4037a7:	movzx  ecx,BYTE PTR [r15]
  4037ab:	test   cl,cl
  4037ad:	je     4037db <error@@Base+0x2eb>
  4037af:	cmp    r14b,cl
  4037b2:	je     4037f0 <error@@Base+0x300>
  4037b4:	xor    ecx,ecx
  4037b6:	jmp    4037c5 <error@@Base+0x2d5>
  4037b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037c0:	cmp    r14b,dil
  4037c3:	je     4037f8 <error@@Base+0x308>
  4037c5:	inc    ecx
  4037c7:	movsx  rsi,cx
  4037cb:	lea    rsi,[rsi+rsi*2]
  4037cf:	lea    rsi,[r15+rsi*8]
  4037d3:	movzx  edi,BYTE PTR [rsi]
  4037d6:	test   dil,dil
  4037d9:	jne    4037c0 <error@@Base+0x2d0>
  4037db:	mov    rsi,rbp
  4037de:	lea    rdi,[rip+0xa66]        # 40424b <error@@Base+0xd5b>
  4037e5:	xor    eax,eax
  4037e7:	call   4035a0 <error@@Base+0xb0>
  4037ec:	nop    DWORD PTR [rax+0x0]
  4037f0:	mov    rsi,r15
  4037f3:	nop    DWORD PTR [rax+rax*1+0x0]
  4037f8:	mov    rcx,QWORD PTR [rsi+0x8]
  4037fc:	test   rcx,rcx
  4037ff:	je     403870 <error@@Base+0x380>
  403801:	cmp    BYTE PTR [rbp+0x2],0x0
  403805:	jne    403860 <error@@Base+0x370>
  403807:	test   rax,rax
  40380a:	je     4038b8 <error@@Base+0x3c8>
  403810:	cmp    QWORD PTR [rcx],0x0
  403814:	jne    4038e0 <error@@Base+0x3f0>
  40381a:	mov    QWORD PTR [rcx],rax
  40381d:	mov    eax,ebx
  40381f:	inc    ebx
  403821:	cmp    BYTE PTR [rbp+0x2],0x0
  403825:	jne    40370d <error@@Base+0x21d>
  40382b:	lea    ebx,[rax+0x2]
  40382e:	movsx  r13d,bx
  403832:	cmp    r13d,r8d
  403835:	jl     40371a <error@@Base+0x22a>
  40383b:	nop    DWORD PTR [rax+rax*1+0x0]
  403840:	movsx  r12d,r12w
  403844:	mov    DWORD PTR [r9],r12d
  403847:	add    rsp,0x38
  40384b:	pop    rbx
  40384c:	pop    rbp
  40384d:	pop    r12
  40384f:	pop    r13
  403851:	pop    r14
  403853:	pop    r15
  403855:	ret    
  403856:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403860:	cmp    QWORD PTR [rcx],0x0
  403864:	jne    4038e0 <error@@Base+0x3f0>
  403866:	lea    rax,[rbp+0x2]
  40386a:	jmp    40381a <error@@Base+0x32a>
  40386c:	nop    DWORD PTR [rax+0x0]
  403870:	mov    rax,QWORD PTR [rsi+0x10]
  403874:	test   rax,rax
  403877:	je     4037db <error@@Base+0x2eb>
  40387d:	cmp    BYTE PTR [rbp+0x2],0x0
  403881:	jne    4037db <error@@Base+0x2eb>
  403887:	cmp    BYTE PTR [rax],0x0
  40388a:	jne    4038e0 <error@@Base+0x3f0>
  40388c:	mov    BYTE PTR [rax],0x1
  40388f:	inc    ebx
  403891:	mov    r8d,DWORD PTR [r9]
  403894:	jmp    40370d <error@@Base+0x21d>
  403899:	nop    DWORD PTR [rax+0x0]
  4038a0:	mov    rax,0x40619c
  4038a7:	cmp    BYTE PTR [rax],0x0
  4038aa:	jne    4038d0 <error@@Base+0x3e0>
  4038ac:	xor    r12d,r12d
  4038af:	jmp    403844 <error@@Base+0x354>
  4038b1:	nop    DWORD PTR [rax+0x0]
  4038b8:	mov    rax,QWORD PTR [rsi+0x10]
  4038bc:	test   rax,rax
  4038bf:	jne    403887 <error@@Base+0x397>
  4038c1:	jmp    4037db <error@@Base+0x2eb>
  4038c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038d0:	mov    rdi,QWORD PTR [rsp+0x28]
  4038d5:	xor    eax,eax
  4038d7:	call   4034a0 <__sprintf_chk@plt+0x2100>
  4038dc:	nop    DWORD PTR [rax+0x0]
  4038e0:	mov    rsi,rbp
  4038e3:	lea    rdi,[rip+0x970]        # 40425a <error@@Base+0xd6a>
  4038ea:	xor    eax,eax
  4038ec:	call   4035a0 <error@@Base+0xb0>
  4038f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4038fc:	nop    DWORD PTR [rax+0x0]
  403900:	endbr64 
  403904:	mov    rax,0x406250
  40390b:	mov    r8,rdi
  40390e:	mov    rcx,QWORD PTR [rax]
  403911:	mov    rax,QWORD PTR [rip+0x26e0]        # 405ff8 <error@@Base+0x2b08>
  403918:	mov    r9,rsi
  40391b:	mov    rdi,QWORD PTR [rax]
  40391e:	lea    rdx,[rip+0x8e9]        # 40420e <error@@Base+0xd1e>
  403925:	mov    esi,0x1
  40392a:	xor    eax,eax
  40392c:	jmp    401360 <__fprintf_chk@plt>
  403931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40393b:	nop    DWORD PTR [rax+rax*1+0x0]
  403940:	endbr64 
  403944:	mov    QWORD PTR [rdi+0x8],0x0
  40394c:	mov    QWORD PTR [rdi],0x0
  403953:	mov    QWORD PTR [rdi+0x10],0x0
  40395b:	mov    QWORD PTR [rdi+0x18],0x0
  403963:	ret    
  403964:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40396f:	nop
  403970:	endbr64 
  403974:	push   rbx
  403975:	mov    rbx,rdi
  403978:	mov    rax,QWORD PTR [rdi]
  40397b:	mov    QWORD PTR [rsi],0x0
  403982:	mov    QWORD PTR [rsi+0x8],rax
  403986:	mov    QWORD PTR [rdi],rsi
  403989:	test   rax,rax
  40398c:	je     4039b0 <error@@Base+0x4c0>
  40398e:	mov    QWORD PTR [rax],rsi
  403991:	mov    rdi,QWORD PTR [rbx+0x10]
  403995:	test   rdi,rdi
  403998:	je     4039a7 <error@@Base+0x4b7>
  40399a:	call   4011f0 <free@plt>
  40399f:	mov    QWORD PTR [rbx+0x10],0x0
  4039a7:	inc    QWORD PTR [rbx+0x18]
  4039ab:	pop    rbx
  4039ac:	ret    
  4039ad:	nop    DWORD PTR [rax]
  4039b0:	mov    QWORD PTR [rdi+0x8],rsi
  4039b4:	jmp    403991 <error@@Base+0x4a1>
  4039b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039c0:	endbr64 
  4039c4:	push   rbx
  4039c5:	mov    rbx,rdi
  4039c8:	mov    rax,QWORD PTR [rdi+0x8]
  4039cc:	mov    QWORD PTR [rsi+0x8],0x0
  4039d4:	mov    QWORD PTR [rsi],rax
  4039d7:	test   rax,rax
  4039da:	je     403a00 <error@@Base+0x510>
  4039dc:	mov    QWORD PTR [rax+0x8],rsi
  4039e0:	mov    rdi,QWORD PTR [rbx+0x10]
  4039e4:	mov    QWORD PTR [rbx+0x8],rsi
  4039e8:	test   rdi,rdi
  4039eb:	je     4039fa <error@@Base+0x50a>
  4039ed:	call   4011f0 <free@plt>
  4039f2:	mov    QWORD PTR [rbx+0x10],0x0
  4039fa:	inc    QWORD PTR [rbx+0x18]
  4039fe:	pop    rbx
  4039ff:	ret    
  403a00:	mov    QWORD PTR [rdi],rsi
  403a03:	jmp    4039e0 <error@@Base+0x4f0>
  403a05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a10:	endbr64 
  403a14:	mov    rax,QWORD PTR [rdx]
  403a17:	push   rbx
  403a18:	mov    QWORD PTR [rsi],rax
  403a1b:	mov    rbx,rdi
  403a1e:	mov    QWORD PTR [rsi+0x8],rdx
  403a22:	test   rax,rax
  403a25:	je     403a50 <error@@Base+0x560>
  403a27:	mov    QWORD PTR [rax+0x8],rsi
  403a2b:	mov    rdi,QWORD PTR [rbx+0x10]
  403a2f:	mov    QWORD PTR [rdx],rsi
  403a32:	test   rdi,rdi
  403a35:	je     403a44 <error@@Base+0x554>
  403a37:	call   4011f0 <free@plt>
  403a3c:	mov    QWORD PTR [rbx+0x10],0x0
  403a44:	inc    QWORD PTR [rbx+0x18]
  403a48:	pop    rbx
  403a49:	ret    
  403a4a:	nop    WORD PTR [rax+rax*1+0x0]
  403a50:	mov    QWORD PTR [rdi],rsi
  403a53:	jmp    403a2b <error@@Base+0x53b>
  403a55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403a60:	endbr64 
  403a64:	mov    rax,QWORD PTR [rsi+0x8]
  403a68:	push   rbx
  403a69:	mov    QWORD PTR [rdx],rsi
  403a6c:	mov    QWORD PTR [rdx+0x8],rax
  403a70:	mov    rbx,rdi
  403a73:	mov    QWORD PTR [rsi+0x8],rdx
  403a77:	test   rax,rax
  403a7a:	je     403aa0 <error@@Base+0x5b0>
  403a7c:	mov    QWORD PTR [rax],rdx
  403a7f:	mov    rdi,QWORD PTR [rbx+0x10]
  403a83:	test   rdi,rdi
  403a86:	je     403a95 <error@@Base+0x5a5>
  403a88:	call   4011f0 <free@plt>
  403a8d:	mov    QWORD PTR [rbx+0x10],0x0
  403a95:	inc    QWORD PTR [rbx+0x18]
  403a99:	pop    rbx
  403a9a:	ret    
  403a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  403aa0:	mov    QWORD PTR [rdi+0x8],rdx
  403aa4:	jmp    403a7f <error@@Base+0x58f>
  403aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ab0:	endbr64 
  403ab4:	mov    rdx,QWORD PTR [rsi]
  403ab7:	push   rbx
  403ab8:	mov    rax,QWORD PTR [rsi+0x8]
  403abc:	mov    rbx,rdi
  403abf:	test   rdx,rdx
  403ac2:	je     403b00 <error@@Base+0x610>
  403ac4:	mov    QWORD PTR [rdx+0x8],rax
  403ac8:	mov    rax,QWORD PTR [rsi+0x8]
  403acc:	test   rax,rax
  403acf:	je     403b08 <error@@Base+0x618>
  403ad1:	mov    QWORD PTR [rax],rdx
  403ad4:	mov    rdi,QWORD PTR [rbx+0x10]
  403ad8:	mov    QWORD PTR [rsi+0x8],0x0
  403ae0:	mov    QWORD PTR [rsi],0x0
  403ae7:	test   rdi,rdi
  403aea:	je     403af9 <error@@Base+0x609>
  403aec:	call   4011f0 <free@plt>
  403af1:	mov    QWORD PTR [rbx+0x10],0x0
  403af9:	dec    QWORD PTR [rbx+0x18]
  403afd:	pop    rbx
  403afe:	ret    
  403aff:	nop
  403b00:	mov    QWORD PTR [rdi],rax
  403b03:	test   rax,rax
  403b06:	jne    403ad1 <error@@Base+0x5e1>
  403b08:	mov    QWORD PTR [rbx+0x8],rdx
  403b0c:	jmp    403ad4 <error@@Base+0x5e4>
  403b0e:	xchg   ax,ax
  403b10:	endbr64 
  403b14:	cmp    QWORD PTR [rdi+0x10],0x0
  403b19:	je     403b20 <error@@Base+0x630>
  403b1b:	ret    
  403b1c:	nop    DWORD PTR [rax+0x0]
  403b20:	mov    rax,QWORD PTR [rdi+0x18]
  403b24:	test   rax,rax
  403b27:	je     403b1b <error@@Base+0x62b>
  403b29:	push   rbx
  403b2a:	mov    esi,0x8
  403b2f:	mov    rbx,rdi
  403b32:	mov    rdi,rax
  403b35:	xor    eax,eax
  403b37:	call   403540 <error@@Base+0x50>
  403b3c:	mov    rdx,QWORD PTR [rbx]
  403b3f:	mov    QWORD PTR [rbx+0x10],rax
  403b43:	test   rdx,rdx
  403b46:	je     403b60 <error@@Base+0x670>
  403b48:	nop    DWORD PTR [rax+rax*1+0x0]
  403b50:	mov    QWORD PTR [rax],rdx
  403b53:	add    rax,0x8
  403b57:	mov    rdx,QWORD PTR [rdx+0x8]
  403b5b:	test   rdx,rdx
  403b5e:	jne    403b50 <error@@Base+0x660>
  403b60:	pop    rbx
  403b61:	ret    
  403b62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403b6d:	nop    DWORD PTR [rax]
  403b70:	endbr64 
  403b74:	push   r12
  403b76:	push   rbp
  403b77:	push   rbx
  403b78:	mov    rbx,QWORD PTR [rdi]
  403b7b:	test   rbx,rbx
  403b7e:	je     403bae <error@@Base+0x6be>
  403b80:	mov    rbp,rdi
  403b83:	mov    r12,rsi
  403b86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403b90:	mov    rsi,rbx
  403b93:	mov    rdi,rbp
  403b96:	xor    eax,eax
  403b98:	call   403ab0 <error@@Base+0x5c0>
  403b9d:	mov    rdi,rbx
  403ba0:	xor    eax,eax
  403ba2:	call   r12
  403ba5:	mov    rbx,QWORD PTR [rbp+0x0]
  403ba9:	test   rbx,rbx
  403bac:	jne    403b90 <error@@Base+0x6a0>
  403bae:	pop    rbx
  403baf:	pop    rbp
  403bb0:	pop    r12
  403bb2:	ret    
  403bb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bbd:	nop    DWORD PTR [rax]
  403bc0:	endbr64 
  403bc4:	push   r15
  403bc6:	lea    r15,[rip+0x2213]        # 405de0 <error@@Base+0x28f0>
  403bcd:	push   r14
  403bcf:	mov    r14,rdx
  403bd2:	push   r13
  403bd4:	mov    r13,rsi
  403bd7:	push   r12
  403bd9:	mov    r12d,edi
  403bdc:	push   rbp
  403bdd:	lea    rbp,[rip+0x2204]        # 405de8 <error@@Base+0x28f8>
  403be4:	push   rbx
  403be5:	sub    rbp,r15
  403be8:	sub    rsp,0x8
  403bec:	call   401000 <free@plt-0x1f0>
  403bf1:	sar    rbp,0x3
  403bf5:	je     403c16 <error@@Base+0x726>
  403bf7:	xor    ebx,ebx
  403bf9:	nop    DWORD PTR [rax+0x0]
  403c00:	mov    rdx,r14
  403c03:	mov    rsi,r13
  403c06:	mov    edi,r12d
  403c09:	call   QWORD PTR [r15+rbx*8]
  403c0d:	add    rbx,0x1
  403c11:	cmp    rbp,rbx
  403c14:	jne    403c00 <error@@Base+0x710>
  403c16:	add    rsp,0x8
  403c1a:	pop    rbx
  403c1b:	pop    rbp
  403c1c:	pop    r12
  403c1e:	pop    r13
  403c20:	pop    r14
  403c22:	pop    r15
  403c24:	ret    
  403c25:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403c30:	endbr64 
  403c34:	ret    

Disassembly of section .fini:

0000000000403c38 <.fini>:
  403c38:	endbr64 
  403c3c:	sub    rsp,0x8
  403c40:	add    rsp,0x8
  403c44:	ret    
