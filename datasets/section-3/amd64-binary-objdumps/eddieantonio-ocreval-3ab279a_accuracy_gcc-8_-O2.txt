
../repos/eddieantonio-ocreval-3ab279a/accuracy/accuracy:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x7fd9]        # 408fe8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1da>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x7fe2]        # 409008 <error@@Base+0x4b68>
  401026:	bnd jmp QWORD PTR [rip+0x7fe3]        # 409010 <error@@Base+0x4b70>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <free@plt-0x1d0>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <free@plt-0x1d0>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <free@plt-0x1d0>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <free@plt-0x1d0>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <free@plt-0x1d0>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <free@plt-0x1d0>
  40108f:	nop
  401090:	endbr64 
  401094:	push   0x6
  401099:	bnd jmp 401020 <free@plt-0x1d0>
  40109f:	nop
  4010a0:	endbr64 
  4010a4:	push   0x7
  4010a9:	bnd jmp 401020 <free@plt-0x1d0>
  4010af:	nop
  4010b0:	endbr64 
  4010b4:	push   0x8
  4010b9:	bnd jmp 401020 <free@plt-0x1d0>
  4010bf:	nop
  4010c0:	endbr64 
  4010c4:	push   0x9
  4010c9:	bnd jmp 401020 <free@plt-0x1d0>
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	push   0xa
  4010d9:	bnd jmp 401020 <free@plt-0x1d0>
  4010df:	nop
  4010e0:	endbr64 
  4010e4:	push   0xb
  4010e9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ef:	nop
  4010f0:	endbr64 
  4010f4:	push   0xc
  4010f9:	bnd jmp 401020 <free@plt-0x1d0>
  4010ff:	nop
  401100:	endbr64 
  401104:	push   0xd
  401109:	bnd jmp 401020 <free@plt-0x1d0>
  40110f:	nop
  401110:	endbr64 
  401114:	push   0xe
  401119:	bnd jmp 401020 <free@plt-0x1d0>
  40111f:	nop
  401120:	endbr64 
  401124:	push   0xf
  401129:	bnd jmp 401020 <free@plt-0x1d0>
  40112f:	nop
  401130:	endbr64 
  401134:	push   0x10
  401139:	bnd jmp 401020 <free@plt-0x1d0>
  40113f:	nop
  401140:	endbr64 
  401144:	push   0x11
  401149:	bnd jmp 401020 <free@plt-0x1d0>
  40114f:	nop
  401150:	endbr64 
  401154:	push   0x12
  401159:	bnd jmp 401020 <free@plt-0x1d0>
  40115f:	nop
  401160:	endbr64 
  401164:	push   0x13
  401169:	bnd jmp 401020 <free@plt-0x1d0>
  40116f:	nop
  401170:	endbr64 
  401174:	push   0x14
  401179:	bnd jmp 401020 <free@plt-0x1d0>
  40117f:	nop
  401180:	endbr64 
  401184:	push   0x15
  401189:	bnd jmp 401020 <free@plt-0x1d0>
  40118f:	nop
  401190:	endbr64 
  401194:	push   0x16
  401199:	bnd jmp 401020 <free@plt-0x1d0>
  40119f:	nop
  4011a0:	endbr64 
  4011a4:	push   0x17
  4011a9:	bnd jmp 401020 <free@plt-0x1d0>
  4011af:	nop
  4011b0:	endbr64 
  4011b4:	push   0x18
  4011b9:	bnd jmp 401020 <free@plt-0x1d0>
  4011bf:	nop
  4011c0:	endbr64 
  4011c4:	push   0x19
  4011c9:	bnd jmp 401020 <free@plt-0x1d0>
  4011cf:	nop
  4011d0:	endbr64 
  4011d4:	push   0x1a
  4011d9:	bnd jmp 401020 <free@plt-0x1d0>
  4011df:	nop
  4011e0:	endbr64 
  4011e4:	push   0x1b
  4011e9:	bnd jmp 401020 <free@plt-0x1d0>
  4011ef:	nop

Disassembly of section .plt.sec:

00000000004011f0 <free@plt>:
  4011f0:	endbr64 
  4011f4:	bnd jmp QWORD PTR [rip+0x7e1d]        # 409018 <free@GLIBC_2.2.5>
  4011fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401200 <unlink@plt>:
  401200:	endbr64 
  401204:	bnd jmp QWORD PTR [rip+0x7e15]        # 409020 <unlink@GLIBC_2.2.5>
  40120b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401210 <utf8proc_get_property@plt>:
  401210:	endbr64 
  401214:	bnd jmp QWORD PTR [rip+0x7e0d]        # 409028 <utf8proc_get_property>
  40121b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401220 <utf8proc_encode_char@plt>:
  401220:	endbr64 
  401224:	bnd jmp QWORD PTR [rip+0x7e05]        # 409030 <utf8proc_encode_char>
  40122b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401230 <getpid@plt>:
  401230:	endbr64 
  401234:	bnd jmp QWORD PTR [rip+0x7dfd]        # 409038 <getpid@GLIBC_2.2.5>
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401240 <fclose@plt>:
  401240:	endbr64 
  401244:	bnd jmp QWORD PTR [rip+0x7df5]        # 409040 <fclose@GLIBC_2.2.5>
  40124b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401250 <strlen@plt>:
  401250:	endbr64 
  401254:	bnd jmp QWORD PTR [rip+0x7ded]        # 409048 <strlen@GLIBC_2.2.5>
  40125b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401260 <__stack_chk_fail@plt>:
  401260:	endbr64 
  401264:	bnd jmp QWORD PTR [rip+0x7de5]        # 409050 <__stack_chk_fail@GLIBC_2.4>
  40126b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401270 <rewind@plt>:
  401270:	endbr64 
  401274:	bnd jmp QWORD PTR [rip+0x7ddd]        # 409058 <rewind@GLIBC_2.2.5>
  40127b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401280 <utf8proc_tolower@plt>:
  401280:	endbr64 
  401284:	bnd jmp QWORD PTR [rip+0x7dd5]        # 409060 <utf8proc_tolower>
  40128b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401290 <fputs@plt>:
  401290:	endbr64 
  401294:	bnd jmp QWORD PTR [rip+0x7dcd]        # 409068 <fputs@GLIBC_2.2.5>
  40129b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012a0 <fgets@plt>:
  4012a0:	endbr64 
  4012a4:	bnd jmp QWORD PTR [rip+0x7dc5]        # 409070 <fgets@GLIBC_2.2.5>
  4012ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012b0 <utf8proc_iterate@plt>:
  4012b0:	endbr64 
  4012b4:	bnd jmp QWORD PTR [rip+0x7dbd]        # 409078 <utf8proc_iterate>
  4012bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012c0 <calloc@plt>:
  4012c0:	endbr64 
  4012c4:	bnd jmp QWORD PTR [rip+0x7db5]        # 409080 <calloc@GLIBC_2.2.5>
  4012cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012d0 <strcmp@plt>:
  4012d0:	endbr64 
  4012d4:	bnd jmp QWORD PTR [rip+0x7dad]        # 409088 <strcmp@GLIBC_2.2.5>
  4012db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012e0 <__sysv_signal@plt>:
  4012e0:	endbr64 
  4012e4:	bnd jmp QWORD PTR [rip+0x7da5]        # 409090 <__sysv_signal@GLIBC_2.2.5>
  4012eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004012f0 <utf8proc_category@plt>:
  4012f0:	endbr64 
  4012f4:	bnd jmp QWORD PTR [rip+0x7d9d]        # 409098 <utf8proc_category>
  4012fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401300 <__xstat@plt>:
  401300:	endbr64 
  401304:	bnd jmp QWORD PTR [rip+0x7d95]        # 4090a0 <__xstat@GLIBC_2.2.5>
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <__isoc99_sscanf@plt>:
  401310:	endbr64 
  401314:	bnd jmp QWORD PTR [rip+0x7d8d]        # 4090a8 <__isoc99_sscanf@GLIBC_2.7>
  40131b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401320 <__fread_chk@plt>:
  401320:	endbr64 
  401324:	bnd jmp QWORD PTR [rip+0x7d85]        # 4090b0 <__fread_chk@GLIBC_2.7>
  40132b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401330 <fopen@plt>:
  401330:	endbr64 
  401334:	bnd jmp QWORD PTR [rip+0x7d7d]        # 4090b8 <fopen@GLIBC_2.2.5>
  40133b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401340 <exit@plt>:
  401340:	endbr64 
  401344:	bnd jmp QWORD PTR [rip+0x7d75]        # 4090c0 <exit@GLIBC_2.2.5>
  40134b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401350 <fwrite@plt>:
  401350:	endbr64 
  401354:	bnd jmp QWORD PTR [rip+0x7d6d]        # 4090c8 <fwrite@GLIBC_2.2.5>
  40135b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401360 <__fprintf_chk@plt>:
  401360:	endbr64 
  401364:	bnd jmp QWORD PTR [rip+0x7d65]        # 4090d0 <__fprintf_chk@GLIBC_2.3.4>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401370 <utf8proc_errmsg@plt>:
  401370:	endbr64 
  401374:	bnd jmp QWORD PTR [rip+0x7d5d]        # 4090d8 <utf8proc_errmsg>
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401380 <strdup@plt>:
  401380:	endbr64 
  401384:	bnd jmp QWORD PTR [rip+0x7d55]        # 4090e0 <strdup@GLIBC_2.2.5>
  40138b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401390 <getc@plt>:
  401390:	endbr64 
  401394:	bnd jmp QWORD PTR [rip+0x7d4d]        # 4090e8 <getc@GLIBC_2.2.5>
  40139b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013a0 <__sprintf_chk@plt>:
  4013a0:	endbr64 
  4013a4:	bnd jmp QWORD PTR [rip+0x7d45]        # 4090f0 <__sprintf_chk@GLIBC_2.3.4>
  4013ab:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004013b0 <error@@Base-0x30f0>:
  4013b0:	endbr64 
  4013b4:	push   r12
  4013b6:	xor    ecx,ecx
  4013b8:	lea    rdx,[rip+0x3c89]        # 405048 <error@@Base+0xba8>
  4013bf:	push   rbp
  4013c0:	push   rbx
  4013c1:	mov    rbx,rsi
  4013c4:	sub    rsp,0x40
  4013c8:	mov    DWORD PTR [rsp+0xc],edi
  4013cc:	lea    rdi,[rsp+0xc]
  4013d1:	mov    rax,QWORD PTR fs:0x28
  4013da:	mov    QWORD PTR [rsp+0x38],rax
  4013df:	xor    eax,eax
  4013e1:	call   404620 <error@@Base+0x180>
  4013e6:	mov    eax,DWORD PTR [rsp+0xc]
  4013ea:	sub    eax,0x2
  4013ed:	cmp    eax,0x1
  4013f0:	jbe    401400 <__sprintf_chk@plt+0x60>
  4013f2:	lea    rdi,[rip+0x3c16]        # 40500f <error@@Base+0xb6f>
  4013f9:	xor    eax,eax
  4013fb:	call   4044a0 <error@@Base>
  401400:	mov    rbp,0x409108
  401407:	mov    r12,0x519a80
  40140e:	mov    rsi,QWORD PTR [rbx]
  401411:	xor    eax,eax
  401413:	mov    rdx,rbp
  401416:	mov    rdi,r12
  401419:	call   403a80 <__sprintf_chk@plt+0x26e0>
  40141e:	cmp    BYTE PTR [rbp+0xb],0x0
  401422:	je     401432 <__sprintf_chk@plt+0x92>
  401424:	lea    rdi,[rip+0x3bfc]        # 405027 <error@@Base+0xb87>
  40142b:	xor    eax,eax
  40142d:	call   4044a0 <error@@Base>
  401432:	mov    rsi,QWORD PTR [rbx+0x8]
  401436:	mov    rdx,rbp
  401439:	xor    eax,eax
  40143b:	lea    rdi,[r12+0x20]
  401440:	lea    rbp,[rsp+0x10]
  401445:	call   403a80 <__sprintf_chk@plt+0x26e0>
  40144a:	mov    rsi,r12
  40144d:	xor    eax,eax
  40144f:	mov    rdi,rbp
  401452:	call   4033d0 <__sprintf_chk@plt+0x2030>
  401457:	xor    eax,eax
  401459:	mov    rdi,rbp
  40145c:	call   401790 <__sprintf_chk@plt+0x3f0>
  401461:	xor    esi,esi
  401463:	cmp    DWORD PTR [rsp+0xc],0x3
  401468:	je     40147f <__sprintf_chk@plt+0xdf>
  40146a:	mov    rdi,0x519ac0
  401471:	xor    eax,eax
  401473:	call   4021a0 <__sprintf_chk@plt+0xe00>
  401478:	xor    eax,eax
  40147a:	call   404430 <__sprintf_chk@plt+0x3090>
  40147f:	mov    rsi,QWORD PTR [rbx+0x10]
  401483:	jmp    40146a <__sprintf_chk@plt+0xca>
  401485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40148f:	nop
  401490:	endbr64 
  401494:	xor    ebp,ebp
  401496:	mov    r9,rdx
  401499:	pop    rsi
  40149a:	mov    rdx,rsp
  40149d:	and    rsp,0xfffffffffffffff0
  4014a1:	push   rax
  4014a2:	push   rsp
  4014a3:	mov    r8,0x404be0
  4014aa:	mov    rcx,0x404b70
  4014b1:	mov    rdi,0x4013b0
  4014b8:	call   QWORD PTR [rip+0x7b22]        # 408fe0 <error@@Base+0x4b40>
  4014be:	hlt    
  4014bf:	nop
  4014c0:	endbr64 
  4014c4:	ret    
  4014c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014cf:	nop
  4014d0:	mov    eax,0x409120
  4014d5:	cmp    rax,0x409120
  4014db:	je     4014f0 <__sprintf_chk@plt+0x150>
  4014dd:	mov    eax,0x0
  4014e2:	test   rax,rax
  4014e5:	je     4014f0 <__sprintf_chk@plt+0x150>
  4014e7:	mov    edi,0x409120
  4014ec:	jmp    rax
  4014ee:	xchg   ax,ax
  4014f0:	ret    
  4014f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4014fc:	nop    DWORD PTR [rax+0x0]
  401500:	mov    esi,0x409120
  401505:	sub    rsi,0x409120
  40150c:	sar    rsi,0x3
  401510:	mov    rax,rsi
  401513:	shr    rax,0x3f
  401517:	add    rsi,rax
  40151a:	sar    rsi,1
  40151d:	je     401530 <__sprintf_chk@plt+0x190>
  40151f:	mov    eax,0x0
  401524:	test   rax,rax
  401527:	je     401530 <__sprintf_chk@plt+0x190>
  401529:	mov    edi,0x409120
  40152e:	jmp    rax
  401530:	ret    
  401531:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40153c:	nop    DWORD PTR [rax+0x0]
  401540:	endbr64 
  401544:	cmp    BYTE PTR [rip+0x7bd5],0x0        # 409120 <error@@Base+0x4c80>
  40154b:	jne    401560 <__sprintf_chk@plt+0x1c0>
  40154d:	push   rbp
  40154e:	mov    rbp,rsp
  401551:	call   4014d0 <__sprintf_chk@plt+0x130>
  401556:	mov    BYTE PTR [rip+0x7bc3],0x1        # 409120 <error@@Base+0x4c80>
  40155d:	pop    rbp
  40155e:	ret    
  40155f:	nop
  401560:	ret    
  401561:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40156c:	nop    DWORD PTR [rax+0x0]
  401570:	endbr64 
  401574:	jmp    401500 <__sprintf_chk@plt+0x160>
  401576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401580:	endbr64 
  401584:	push   r15
  401586:	push   r14
  401588:	push   r13
  40158a:	push   r12
  40158c:	mov    r12,rsi
  40158f:	push   rbp
  401590:	push   rbx
  401591:	sub    rsp,0x78
  401595:	mov    QWORD PTR [rsp+0x10],rdi
  40159a:	lea    rbx,[rsp+0x20]
  40159f:	mov    r14,0x519a80
  4015a6:	mov    rax,QWORD PTR fs:0x28
  4015af:	mov    QWORD PTR [rsp+0x68],rax
  4015b4:	xor    eax,eax
  4015b6:	mov    QWORD PTR [rsp+0x18],rbx
  4015bb:	mov    QWORD PTR [rsp+0x8],0x0
  4015c4:	lea    r15,[rsp+0x5f]
  4015c9:	mov    BYTE PTR [rbx],0x0
  4015cc:	mov    rax,QWORD PTR [rsp+0x8]
  4015d1:	add    rax,QWORD PTR [r12+0x10]
  4015d6:	mov    rbp,QWORD PTR [rax]
  4015d9:	cmp    rbp,QWORD PTR [rax+0x8]
  4015dd:	jg     40165c <__sprintf_chk@plt+0x2bc>
  4015df:	nop
  4015e0:	mov    rax,QWORD PTR [r14+0x10]
  4015e4:	mov    ecx,0x1
  4015e9:	mov    rax,QWORD PTR [rax+rbp*8]
  4015ed:	mov    rdx,r15
  4015f0:	mov    esi,DWORD PTR [rax+0x14]
  4015f3:	xor    edi,edi
  4015f5:	xor    eax,eax
  4015f7:	call   403ee0 <__sprintf_chk@plt+0x2b40>
  4015fc:	mov    rdi,rbx
  4015ff:	call   401250 <strlen@plt>
  401604:	mov    rdi,r15
  401607:	mov    r13,rax
  40160a:	call   401250 <strlen@plt>
  40160f:	lea    rcx,[r13+rax*1+0x0]
  401614:	cmp    rcx,0x18
  401618:	ja     401720 <__sprintf_chk@plt+0x380>
  40161e:	inc    rax
  401621:	lea    rdx,[rbx+r13*1]
  401625:	cmp    eax,0x8
  401628:	jae    4016d0 <__sprintf_chk@plt+0x330>
  40162e:	test   al,0x4
  401630:	jne    401730 <__sprintf_chk@plt+0x390>
  401636:	test   eax,eax
  401638:	je     401648 <__sprintf_chk@plt+0x2a8>
  40163a:	movzx  ecx,BYTE PTR [r15]
  40163e:	mov    BYTE PTR [rdx],cl
  401640:	test   al,0x2
  401642:	jne    401748 <__sprintf_chk@plt+0x3a8>
  401648:	mov    rax,QWORD PTR [r12+0x10]
  40164d:	mov    rsi,QWORD PTR [rsp+0x8]
  401652:	inc    rbp
  401655:	cmp    QWORD PTR [rax+rsi*1+0x8],rbp
  40165a:	jge    4015e0 <__sprintf_chk@plt+0x240>
  40165c:	add    QWORD PTR [rsp+0x8],0x18
  401662:	add    rbx,0x1c
  401666:	add    r14,0x20
  40166a:	mov    rax,QWORD PTR [rsp+0x8]
  40166f:	cmp    rax,0x30
  401673:	jne    4015c9 <__sprintf_chk@plt+0x229>
  401679:	mov    rax,QWORD PTR [rsp+0x18]
  40167e:	mov    rdi,QWORD PTR [rsp+0x10]
  401683:	lea    r9,[rax+0x1c]
  401687:	mov    r8,rax
  40168a:	lea    rcx,[rip+0x3973]        # 405004 <error@@Base+0xb64>
  401691:	xor    eax,eax
  401693:	mov    rdx,0xffffffffffffffff
  40169a:	mov    esi,0x1
  40169f:	call   4013a0 <__sprintf_chk@plt>
  4016a4:	mov    rax,QWORD PTR [rsp+0x68]
  4016a9:	xor    rax,QWORD PTR fs:0x28
  4016b2:	jne    40175a <__sprintf_chk@plt+0x3ba>
  4016b8:	add    rsp,0x78
  4016bc:	pop    rbx
  4016bd:	pop    rbp
  4016be:	pop    r12
  4016c0:	pop    r13
  4016c2:	pop    r14
  4016c4:	pop    r15
  4016c6:	ret    
  4016c7:	nop    WORD PTR [rax+rax*1+0x0]
  4016d0:	mov    rcx,QWORD PTR [r15]
  4016d3:	mov    QWORD PTR [rdx],rcx
  4016d6:	mov    ecx,eax
  4016d8:	mov    rsi,QWORD PTR [r15+rcx*1-0x8]
  4016dd:	mov    QWORD PTR [rdx+rcx*1-0x8],rsi
  4016e2:	lea    rcx,[rdx+0x8]
  4016e6:	and    rcx,0xfffffffffffffff8
  4016ea:	sub    rdx,rcx
  4016ed:	add    eax,edx
  4016ef:	mov    rsi,r15
  4016f2:	and    eax,0xfffffff8
  4016f5:	sub    rsi,rdx
  4016f8:	cmp    eax,0x8
  4016fb:	jb     401648 <__sprintf_chk@plt+0x2a8>
  401701:	and    eax,0xfffffff8
  401704:	xor    edx,edx
  401706:	mov    edi,edx
  401708:	mov    r10,QWORD PTR [rsi+rdi*1]
  40170c:	add    edx,0x8
  40170f:	mov    QWORD PTR [rcx+rdi*1],r10
  401713:	cmp    edx,eax
  401715:	jb     401706 <__sprintf_chk@plt+0x366>
  401717:	jmp    401648 <__sprintf_chk@plt+0x2a8>
  40171c:	nop    DWORD PTR [rax+0x0]
  401720:	mov    DWORD PTR [rbx+r13*1],0x2e2e2e
  401728:	jmp    40165c <__sprintf_chk@plt+0x2bc>
  40172d:	nop    DWORD PTR [rax]
  401730:	mov    ecx,DWORD PTR [r15]
  401733:	mov    eax,eax
  401735:	mov    DWORD PTR [rdx],ecx
  401737:	mov    ecx,DWORD PTR [r15+rax*1-0x4]
  40173c:	mov    DWORD PTR [rdx+rax*1-0x4],ecx
  401740:	jmp    401648 <__sprintf_chk@plt+0x2a8>
  401745:	nop    DWORD PTR [rax]
  401748:	mov    eax,eax
  40174a:	movzx  ecx,WORD PTR [r15+rax*1-0x2]
  401750:	mov    WORD PTR [rdx+rax*1-0x2],cx
  401755:	jmp    401648 <__sprintf_chk@plt+0x2a8>
  40175a:	call   401260 <__stack_chk_fail@plt>
  40175f:	nop
  401760:	endbr64 
  401764:	mov    rax,QWORD PTR [rsi]
  401767:	add    QWORD PTR [rdi],rax
  40176a:	mov    rax,QWORD PTR [rsi+0x8]
  40176e:	add    QWORD PTR [rdi+0x8],rax
  401772:	mov    rax,QWORD PTR [rsi+0x10]
  401776:	add    QWORD PTR [rdi+0x10],rax
  40177a:	mov    rax,QWORD PTR [rsi+0x18]
  40177e:	add    QWORD PTR [rdi+0x18],rax
  401782:	ret    
  401783:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40178e:	xchg   ax,ax
  401790:	endbr64 
  401794:	push   r15
  401796:	push   r14
  401798:	push   r13
  40179a:	push   r12
  40179c:	push   rbp
  40179d:	push   rbx
  40179e:	sub    rsp,0xc8
  4017a5:	mov    r14,QWORD PTR [rdi]
  4017a8:	mov    rax,QWORD PTR fs:0x28
  4017b1:	mov    QWORD PTR [rsp+0xb8],rax
  4017b9:	xor    eax,eax
  4017bb:	test   r14,r14
  4017be:	je     4018dc <__sprintf_chk@plt+0x53c>
  4017c4:	mov    r15,0x519ac0
  4017cb:	lea    rax,[rsp+0x50]
  4017d0:	mov    QWORD PTR [rsp+0x18],rax
  4017d5:	lea    rax,[r15+0x68]
  4017d9:	mov    QWORD PTR [rsp+0x20],rax
  4017de:	lea    rax,[rsp+0x30]
  4017e3:	mov    QWORD PTR [rsp+0x10],rax
  4017e8:	lea    rax,[r15+0x48]
  4017ec:	mov    QWORD PTR [rsp+0x28],rax
  4017f1:	nop    DWORD PTR [rax+0x0]
  4017f8:	mov    rdx,QWORD PTR [r14+0x10]
  4017fc:	mov    rdi,QWORD PTR [r14+0x18]
  401800:	mov    rbx,QWORD PTR [rdx]
  401803:	xor    ebp,ebp
  401805:	xor    r12d,r12d
  401808:	cmp    rbx,QWORD PTR [rdx+0x8]
  40180c:	jg     401867 <__sprintf_chk@plt+0x4c7>
  40180e:	mov    r13,0x519a80
  401815:	jmp    40182c <__sprintf_chk@plt+0x48c>
  401817:	nop    WORD PTR [rax+rax*1+0x0]
  401820:	inc    rbx
  401823:	inc    rbp
  401826:	cmp    QWORD PTR [rdx+0x8],rbx
  40182a:	jl     401867 <__sprintf_chk@plt+0x4c7>
  40182c:	mov    rax,QWORD PTR [r13+0x10]
  401830:	mov    rax,QWORD PTR [rax+rbx*8]
  401834:	mov    esi,DWORD PTR [rax+0x14]
  401837:	cmp    esi,0x7e
  40183a:	je     401820 <__sprintf_chk@plt+0x480>
  40183c:	xor    ecx,ecx
  40183e:	inc    r12
  401841:	test   rdi,rdi
  401844:	sete   cl
  401847:	mov    edx,0x1
  40184c:	mov    rdi,r15
  40184f:	xor    eax,eax
  401851:	call   401ce0 <__sprintf_chk@plt+0x940>
  401856:	mov    rdx,QWORD PTR [r14+0x10]
  40185a:	inc    rbx
  40185d:	mov    rdi,QWORD PTR [r14+0x18]
  401861:	cmp    QWORD PTR [rdx+0x8],rbx
  401865:	jge    40182c <__sprintf_chk@plt+0x48c>
  401867:	mov    rax,QWORD PTR [rdx+0x18]
  40186b:	mov    rcx,QWORD PTR [rdx+0x20]
  40186f:	add    QWORD PTR [r15],r12
  401872:	cmp    rax,rcx
  401875:	jg     4019b8 <__sprintf_chk@plt+0x618>
  40187b:	mov    r13,0x519a80
  401882:	xor    ebx,ebx
  401884:	mov    rsi,QWORD PTR [r13+0x30]
  401888:	lea    r11,[rsi+rcx*8+0x8]
  40188d:	lea    rax,[rsi+rax*8]
  401891:	xor    ecx,ecx
  401893:	jmp    4018a9 <__sprintf_chk@plt+0x509>
  401895:	nop    DWORD PTR [rax]
  401898:	cmp    BYTE PTR [rsi+0x10],0x1
  40189c:	sbb    rbx,0xffffffffffffffff
  4018a0:	add    rax,0x8
  4018a4:	cmp    r11,rax
  4018a7:	je     4018be <__sprintf_chk@plt+0x51e>
  4018a9:	mov    rsi,QWORD PTR [rax]
  4018ac:	cmp    DWORD PTR [rsi+0x14],0x7e
  4018b0:	jne    401898 <__sprintf_chk@plt+0x4f8>
  4018b2:	add    rax,0x8
  4018b6:	inc    rcx
  4018b9:	cmp    r11,rax
  4018bc:	jne    4018a9 <__sprintf_chk@plt+0x509>
  4018be:	add    QWORD PTR [r15+0x10],rcx
  4018c2:	add    QWORD PTR [r15+0x18],rbx
  4018c6:	test   rdi,rdi
  4018c9:	je     401908 <__sprintf_chk@plt+0x568>
  4018cb:	add    QWORD PTR [r15+0x20],rbx
  4018cf:	mov    r14,QWORD PTR [r14+0x8]
  4018d3:	test   r14,r14
  4018d6:	jne    4017f8 <__sprintf_chk@plt+0x458>
  4018dc:	mov    rax,QWORD PTR [rsp+0xb8]
  4018e4:	xor    rax,QWORD PTR fs:0x28
  4018ed:	jne    4019e5 <__sprintf_chk@plt+0x645>
  4018f3:	add    rsp,0xc8
  4018fa:	pop    rbx
  4018fb:	pop    rbp
  4018fc:	pop    r12
  4018fe:	pop    r13
  401900:	pop    r14
  401902:	pop    r15
  401904:	ret    
  401905:	nop    DWORD PTR [rax]
  401908:	mov    rax,QWORD PTR [rdx+0x28]
  40190c:	mov    rdx,r12
  40190f:	sub    rax,rbp
  401912:	cmovs  rax,rdi
  401916:	mov    QWORD PTR [rsp+0x8],rcx
  40191b:	cmp    rax,r12
  40191e:	cmovge rdx,rax
  401922:	mov    QWORD PTR [rsp+0x48],rdx
  401927:	test   rdx,rdx
  40192a:	je     4018cf <__sprintf_chk@plt+0x52f>
  40192c:	add    QWORD PTR [r15+0x8],rdx
  401930:	mov    rdx,r12
  401933:	sub    rdx,rax
  401936:	cmovs  rdx,rdi
  40193a:	cmp    rax,r12
  40193d:	mov    QWORD PTR [rsp+0x30],rdx
  401942:	mov    rdx,r12
  401945:	cmovle rdx,rax
  401949:	sub    rax,r12
  40194c:	cmovns rdi,rax
  401950:	mov    rbp,QWORD PTR [rsp+0x18]
  401955:	mov    QWORD PTR [rsp+0x40],rdi
  40195a:	mov    rsi,r14
  40195d:	xor    eax,eax
  40195f:	mov    rdi,rbp
  401962:	mov    QWORD PTR [rsp+0x38],rdx
  401967:	call   401580 <__sprintf_chk@plt+0x1e0>
  40196c:	mov    rcx,QWORD PTR [rsp+0x8]
  401971:	mov    rsi,QWORD PTR [rsp+0x10]
  401976:	add    rcx,rbx
  401979:	je     4019c1 <__sprintf_chk@plt+0x621>
  40197b:	lea    rdi,[r15+0x28]
  40197f:	xor    eax,eax
  401981:	call   401760 <__sprintf_chk@plt+0x3c0>
  401986:	mov    rdx,QWORD PTR [rsp+0x48]
  40198b:	mov    rsi,rbp
  40198e:	mov    rcx,rdx
  401991:	mov    rdi,r15
  401994:	xor    eax,eax
  401996:	call   401d50 <__sprintf_chk@plt+0x9b0>
  40199b:	mov    rsi,QWORD PTR [rsp+0x10]
  4019a0:	mov    rdi,QWORD PTR [rsp+0x20]
  4019a5:	xor    eax,eax
  4019a7:	call   401760 <__sprintf_chk@plt+0x3c0>
  4019ac:	jmp    4018cf <__sprintf_chk@plt+0x52f>
  4019b1:	nop    DWORD PTR [rax+0x0]
  4019b8:	xor    ebx,ebx
  4019ba:	xor    ecx,ecx
  4019bc:	jmp    4018be <__sprintf_chk@plt+0x51e>
  4019c1:	mov    rdi,QWORD PTR [rsp+0x28]
  4019c6:	xor    eax,eax
  4019c8:	call   401760 <__sprintf_chk@plt+0x3c0>
  4019cd:	mov    rdx,QWORD PTR [rsp+0x48]
  4019d2:	mov    rsi,QWORD PTR [rsp+0x18]
  4019d7:	xor    ecx,ecx
  4019d9:	mov    rdi,r15
  4019dc:	xor    eax,eax
  4019de:	call   401d50 <__sprintf_chk@plt+0x9b0>
  4019e3:	jmp    40199b <__sprintf_chk@plt+0x5fb>
  4019e5:	call   401260 <__stack_chk_fail@plt>
  4019ea:	nop    WORD PTR [rax+rax*1+0x0]
  4019f0:	push   rbp
  4019f1:	mov    rbp,rdx
  4019f4:	mov    rdx,rdi
  4019f7:	push   rbx
  4019f8:	lea    rdi,[rip+0x7741]        # 409140 <error@@Base+0x4ca0>
  4019ff:	mov    rbx,rsi
  401a02:	sub    rsp,0x8
  401a06:	mov    esi,0x63
  401a0b:	call   4012a0 <fgets@plt>
  401a10:	test   rax,rax
  401a13:	je     401a32 <__sprintf_chk@plt+0x692>
  401a15:	xor    eax,eax
  401a17:	mov    rdx,rbx
  401a1a:	lea    rsi,[rip+0x365f]        # 405080 <error@@Base+0xbe0>
  401a21:	lea    rdi,[rip+0x7718]        # 409140 <error@@Base+0x4ca0>
  401a28:	call   401310 <__isoc99_sscanf@plt>
  401a2d:	cmp    eax,0x1
  401a30:	je     401a40 <__sprintf_chk@plt+0x6a0>
  401a32:	add    rsp,0x8
  401a36:	pop    rbx
  401a37:	xor    eax,eax
  401a39:	pop    rbp
  401a3a:	ret    
  401a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  401a40:	mov    rax,QWORD PTR [rbx]
  401a43:	add    QWORD PTR [rbp+0x0],rax
  401a47:	add    rsp,0x8
  401a4b:	pop    rbx
  401a4c:	mov    eax,0x1
  401a51:	pop    rbp
  401a52:	ret    
  401a53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401a5e:	xchg   ax,ax
  401a60:	push   rbx
  401a61:	mov    rdx,rdi
  401a64:	mov    rbx,rsi
  401a67:	sub    rsp,0x30
  401a6b:	mov    esi,0x63
  401a70:	lea    rdi,[rip+0x76c9]        # 409140 <error@@Base+0x4ca0>
  401a77:	mov    rax,QWORD PTR fs:0x28
  401a80:	mov    QWORD PTR [rsp+0x28],rax
  401a85:	xor    eax,eax
  401a87:	call   4012a0 <fgets@plt>
  401a8c:	test   rax,rax
  401a8f:	je     401aba <__sprintf_chk@plt+0x71a>
  401a91:	mov    rdx,rsp
  401a94:	xor    eax,eax
  401a96:	lea    rcx,[rdx+0x8]
  401a9a:	lea    r9,[rdx+0x18]
  401a9e:	lea    r8,[rdx+0x10]
  401aa2:	lea    rsi,[rip+0x35cb]        # 405074 <error@@Base+0xbd4>
  401aa9:	lea    rdi,[rip+0x7690]        # 409140 <error@@Base+0x4ca0>
  401ab0:	call   401310 <__isoc99_sscanf@plt>
  401ab5:	cmp    eax,0x4
  401ab8:	je     401ad8 <__sprintf_chk@plt+0x738>
  401aba:	xor    eax,eax
  401abc:	mov    rbx,QWORD PTR [rsp+0x28]
  401ac1:	xor    rbx,QWORD PTR fs:0x28
  401aca:	jne    401b01 <__sprintf_chk@plt+0x761>
  401acc:	add    rsp,0x30
  401ad0:	pop    rbx
  401ad1:	ret    
  401ad2:	nop    WORD PTR [rax+rax*1+0x0]
  401ad8:	mov    rax,QWORD PTR [rsp]
  401adc:	add    QWORD PTR [rbx],rax
  401adf:	mov    rax,QWORD PTR [rsp+0x8]
  401ae4:	add    QWORD PTR [rbx+0x8],rax
  401ae8:	mov    rax,QWORD PTR [rsp+0x10]
  401aed:	add    QWORD PTR [rbx+0x10],rax
  401af1:	mov    rax,QWORD PTR [rsp+0x18]
  401af6:	add    QWORD PTR [rbx+0x18],rax
  401afa:	mov    eax,0x1
  401aff:	jmp    401abc <__sprintf_chk@plt+0x71c>
  401b01:	call   401260 <__stack_chk_fail@plt>
  401b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b10:	push   rbp
  401b11:	mov    rbp,rdx
  401b14:	mov    rdx,rdi
  401b17:	push   rbx
  401b18:	lea    rdi,[rip+0x7621]        # 409140 <error@@Base+0x4ca0>
  401b1f:	mov    rbx,rsi
  401b22:	sub    rsp,0x8
  401b26:	mov    esi,0x63
  401b2b:	call   4012a0 <fgets@plt>
  401b30:	xor    edx,edx
  401b32:	test   rax,rax
  401b35:	je     401b58 <__sprintf_chk@plt+0x7b8>
  401b37:	mov    rdx,rbx
  401b3a:	xor    eax,eax
  401b3c:	mov    rcx,rbp
  401b3f:	lea    rsi,[rip+0x3536]        # 40507c <error@@Base+0xbdc>
  401b46:	lea    rdi,[rip+0x75f3]        # 409140 <error@@Base+0x4ca0>
  401b4d:	call   401310 <__isoc99_sscanf@plt>
  401b52:	cmp    eax,0x2
  401b55:	sete   dl
  401b58:	add    rsp,0x8
  401b5c:	pop    rbx
  401b5d:	mov    eax,edx
  401b5f:	pop    rbp
  401b60:	ret    
  401b61:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401b6c:	nop    DWORD PTR [rax+0x0]
  401b70:	test   rdx,rdx
  401b73:	jne    401b90 <__sprintf_chk@plt+0x7f0>
  401b75:	lea    rdx,[rip+0x3508]        # 405084 <error@@Base+0xbe4>
  401b7c:	mov    esi,0x1
  401b81:	xor    eax,eax
  401b83:	jmp    401360 <__fprintf_chk@plt>
  401b88:	nop    DWORD PTR [rax+rax*1+0x0]
  401b90:	vxorpd xmm0,xmm0,xmm0
  401b94:	vcvtsi2sd xmm0,xmm0,rsi
  401b99:	vxorpd xmm1,xmm1,xmm1
  401b9d:	vcvtsi2sd xmm1,xmm1,rdx
  401ba2:	mov    esi,0x1
  401ba7:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x36a1]        # 405250 <error@@Base+0xdb0>
  401baf:	lea    rdx,[rip+0x34d7]        # 40508d <error@@Base+0xbed>
  401bb6:	mov    eax,0x1
  401bbb:	vdivsd xmm0,xmm0,xmm1
  401bbf:	jmp    401360 <__fprintf_chk@plt>
  401bc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401bcf:	nop
  401bd0:	endbr64 
  401bd4:	mov    rdx,QWORD PTR [rdi+0x18]
  401bd8:	mov    rax,QWORD PTR [rsi+0x18]
  401bdc:	cmp    rdx,rax
  401bdf:	jne    401bee <__sprintf_chk@plt+0x84e>
  401be1:	mov    rdx,QWORD PTR [rdi+0x20]
  401be5:	mov    rax,QWORD PTR [rsi+0x20]
  401be9:	cmp    rdx,rax
  401bec:	je     401bf8 <__sprintf_chk@plt+0x858>
  401bee:	sub    eax,edx
  401bf0:	ret    
  401bf1:	nop    DWORD PTR [rax+0x0]
  401bf8:	mov    rsi,QWORD PTR [rsi+0x10]
  401bfc:	mov    rdi,QWORD PTR [rdi+0x10]
  401c00:	xor    eax,eax
  401c02:	jmp    4042c0 <__sprintf_chk@plt+0x2f20>
  401c07:	nop    WORD PTR [rax+rax*1+0x0]
  401c10:	push   r13
  401c12:	mov    r13d,ecx
  401c15:	push   r12
  401c17:	mov    r12,rdx
  401c1a:	lea    rdx,[rip+0x3472]        # 405093 <error@@Base+0xbf3>
  401c21:	push   rbp
  401c22:	mov    rbp,rdi
  401c25:	push   rbx
  401c26:	mov    rbx,rsi
  401c29:	sub    rsp,0x28
  401c2d:	mov    rax,QWORD PTR fs:0x28
  401c36:	mov    QWORD PTR [rsp+0x18],rax
  401c3b:	xor    eax,eax
  401c3d:	mov    r8,QWORD PTR [rsi+0x8]
  401c41:	mov    rcx,QWORD PTR [rsi]
  401c44:	mov    esi,0x1
  401c49:	call   401360 <__fprintf_chk@plt>
  401c4e:	mov    rdx,QWORD PTR [rbx]
  401c51:	xor    eax,eax
  401c53:	mov    rsi,rdx
  401c56:	sub    rsi,QWORD PTR [rbx+0x8]
  401c5a:	mov    rdi,rbp
  401c5d:	call   401b70 <__sprintf_chk@plt+0x7d0>
  401c62:	test   r12,r12
  401c65:	je     401ca0 <__sprintf_chk@plt+0x900>
  401c67:	mov    rcx,r12
  401c6a:	lea    rdx,[rip+0x34c5]        # 405136 <error@@Base+0xc96>
  401c71:	mov    esi,0x1
  401c76:	mov    rdi,rbp
  401c79:	xor    eax,eax
  401c7b:	call   401360 <__fprintf_chk@plt>
  401c80:	mov    rax,QWORD PTR [rsp+0x18]
  401c85:	xor    rax,QWORD PTR fs:0x28
  401c8e:	jne    401cd4 <__sprintf_chk@plt+0x934>
  401c90:	add    rsp,0x28
  401c94:	pop    rbx
  401c95:	pop    rbp
  401c96:	pop    r12
  401c98:	pop    r13
  401c9a:	ret    
  401c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  401ca0:	lea    rbx,[rsp+0xf]
  401ca5:	mov    rdx,rbx
  401ca8:	mov    esi,r13d
  401cab:	xor    edi,edi
  401cad:	xor    eax,eax
  401caf:	mov    ecx,0x1
  401cb4:	call   403ee0 <__sprintf_chk@plt+0x2b40>
  401cb9:	mov    rcx,rbx
  401cbc:	lea    rdx,[rip+0x33db]        # 40509e <error@@Base+0xbfe>
  401cc3:	mov    esi,0x1
  401cc8:	mov    rdi,rbp
  401ccb:	xor    eax,eax
  401ccd:	call   401360 <__fprintf_chk@plt>
  401cd2:	jmp    401c80 <__sprintf_chk@plt+0x8e0>
  401cd4:	call   401260 <__stack_chk_fail@plt>
  401cd9:	nop    DWORD PTR [rax+0x0]
  401ce0:	endbr64 
  401ce4:	push   r13
  401ce6:	xor    eax,eax
  401ce8:	mov    r13,rdx
  401ceb:	push   r12
  401ced:	mov    r12,rcx
  401cf0:	push   rbp
  401cf1:	mov    rbp,rdi
  401cf4:	push   rbx
  401cf5:	mov    ebx,esi
  401cf7:	mov    edi,ebx
  401cf9:	sub    rsp,0x8
  401cfd:	call   402650 <__sprintf_chk@plt+0x12b0>
  401d02:	movzx  eax,al
  401d05:	shl    rax,0x4
  401d09:	lea    rax,[rbp+rax*1+0x88]
  401d11:	add    QWORD PTR [rax],r13
  401d14:	add    QWORD PTR [rax+0x8],r12
  401d18:	shl    rbx,0x4
  401d1c:	lea    rax,[rbp+rbx*1+0x4f88]
  401d24:	add    QWORD PTR [rbp+0x1088],r13
  401d2b:	add    QWORD PTR [rbp+0x1090],r12
  401d32:	add    QWORD PTR [rax],r13
  401d35:	add    QWORD PTR [rax+0x8],r12
  401d39:	add    rsp,0x8
  401d3d:	pop    rbx
  401d3e:	pop    rbp
  401d3f:	pop    r12
  401d41:	pop    r13
  401d43:	ret    
  401d44:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  401d4f:	nop
  401d50:	endbr64 
  401d54:	push   r14
  401d56:	xor    eax,eax
  401d58:	push   r13
  401d5a:	mov    r13,rdx
  401d5d:	push   r12
  401d5f:	mov    r12,rcx
  401d62:	push   rbp
  401d63:	mov    rbp,rsi
  401d66:	push   rbx
  401d67:	lea    rbx,[rdi+0x1098]
  401d6e:	mov    rdi,rbx
  401d71:	call   4037d0 <__sprintf_chk@plt+0x2430>
  401d76:	test   rax,rax
  401d79:	je     401d90 <__sprintf_chk@plt+0x9f0>
  401d7b:	add    QWORD PTR [rax+0x18],r13
  401d7f:	add    QWORD PTR [rax+0x20],r12
  401d83:	pop    rbx
  401d84:	pop    rbp
  401d85:	pop    r12
  401d87:	pop    r13
  401d89:	pop    r14
  401d8b:	ret    
  401d8c:	nop    DWORD PTR [rax+0x0]
  401d90:	mov    esi,0x28
  401d95:	mov    edi,0x1
  401d9a:	xor    eax,eax
  401d9c:	call   4044f0 <error@@Base+0x50>
  401da1:	mov    rdi,rbp
  401da4:	mov    r14,rax
  401da7:	call   401380 <strdup@plt>
  401dac:	mov    QWORD PTR [r14+0x10],rax
  401db0:	mov    QWORD PTR [r14+0x18],r13
  401db4:	mov    QWORD PTR [r14+0x20],r12
  401db8:	mov    rdi,rbx
  401dbb:	mov    rsi,r14
  401dbe:	pop    rbx
  401dbf:	pop    rbp
  401dc0:	pop    r12
  401dc2:	pop    r13
  401dc4:	xor    eax,eax
  401dc6:	pop    r14
  401dc8:	jmp    403860 <__sprintf_chk@plt+0x24c0>
  401dcd:	nop    DWORD PTR [rax]
  401dd0:	endbr64 
  401dd4:	push   r14
  401dd6:	push   r13
  401dd8:	mov    r13,rsi
  401ddb:	lea    rsi,[rip+0x3ae5]        # 4058c7 <error@@Base+0x1427>
  401de2:	push   r12
  401de4:	mov    r12,rdi
  401de7:	mov    rdi,r13
  401dea:	push   rbp
  401deb:	push   rbx
  401dec:	sub    rsp,0x30
  401df0:	mov    rax,QWORD PTR fs:0x28
  401df9:	mov    QWORD PTR [rsp+0x28],rax
  401dfe:	xor    eax,eax
  401e00:	call   4045a0 <error@@Base+0x100>
  401e05:	mov    rdx,rax
  401e08:	mov    esi,0x63
  401e0d:	lea    rdi,[rip+0x732c]        # 409140 <error@@Base+0x4ca0>
  401e14:	mov    rbx,rax
  401e17:	call   4012a0 <fgets@plt>
  401e1c:	test   rax,rax
  401e1f:	je     40216f <__sprintf_chk@plt+0xdcf>
  401e25:	lea    rbp,[rip+0x7314]        # 409140 <error@@Base+0x4ca0>
  401e2c:	mov    ecx,0x28
  401e31:	lea    rdi,[rip+0x3348]        # 405180 <error@@Base+0xce0>
  401e38:	mov    rsi,rbp
  401e3b:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e3d:	seta   al
  401e40:	sbb    al,0x0
  401e42:	test   al,al
  401e44:	jne    40216f <__sprintf_chk@plt+0xdcf>
  401e4a:	mov    rdx,rbx
  401e4d:	mov    esi,0x63
  401e52:	mov    rdi,rbp
  401e55:	call   4012a0 <fgets@plt>
  401e5a:	test   rax,rax
  401e5d:	je     40216f <__sprintf_chk@plt+0xdcf>
  401e63:	mov    ecx,0x2b
  401e68:	lea    rdi,[rip+0x3341]        # 4051b0 <error@@Base+0xd10>
  401e6f:	mov    rsi,rbp
  401e72:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  401e74:	seta   al
  401e77:	sbb    al,0x0
  401e79:	test   al,al
  401e7b:	jne    40216f <__sprintf_chk@plt+0xdcf>
  401e81:	mov    rsi,rsp
  401e84:	mov    rdx,r12
  401e87:	mov    rdi,rbx
  401e8a:	call   4019f0 <__sprintf_chk@plt+0x650>
  401e8f:	test   al,al
  401e91:	je     40216f <__sprintf_chk@plt+0xdcf>
  401e97:	xor    eax,eax
  401e99:	lea    rdx,[r12+0x8]
  401e9e:	lea    rsi,[rsp+0x8]
  401ea3:	mov    rdi,rbx
  401ea6:	call   4019f0 <__sprintf_chk@plt+0x650>
  401eab:	test   al,al
  401ead:	je     40216f <__sprintf_chk@plt+0xdcf>
  401eb3:	mov    rdx,rbx
  401eb6:	mov    esi,0x63
  401ebb:	mov    rdi,rbp
  401ebe:	call   4012a0 <fgets@plt>
  401ec3:	test   rax,rax
  401ec6:	je     40216f <__sprintf_chk@plt+0xdcf>
  401ecc:	mov    rdx,rbx
  401ecf:	mov    esi,0x63
  401ed4:	mov    rdi,rbp
  401ed7:	call   4012a0 <fgets@plt>
  401edc:	test   rax,rax
  401edf:	je     40216f <__sprintf_chk@plt+0xdcf>
  401ee5:	lea    r14,[rsp+0x10]
  401eea:	xor    eax,eax
  401eec:	lea    rdx,[r12+0x10]
  401ef1:	mov    rsi,r14
  401ef4:	mov    rdi,rbx
  401ef7:	call   4019f0 <__sprintf_chk@plt+0x650>
  401efc:	test   al,al
  401efe:	je     40216f <__sprintf_chk@plt+0xdcf>
  401f04:	xor    eax,eax
  401f06:	lea    rdx,[r12+0x18]
  401f0b:	mov    rsi,r14
  401f0e:	mov    rdi,rbx
  401f11:	call   4019f0 <__sprintf_chk@plt+0x650>
  401f16:	test   al,al
  401f18:	je     40216f <__sprintf_chk@plt+0xdcf>
  401f1e:	xor    eax,eax
  401f20:	lea    rdx,[r12+0x20]
  401f25:	mov    rsi,r14
  401f28:	mov    rdi,rbx
  401f2b:	call   4019f0 <__sprintf_chk@plt+0x650>
  401f30:	test   al,al
  401f32:	je     40216f <__sprintf_chk@plt+0xdcf>
  401f38:	mov    rdx,rbx
  401f3b:	mov    esi,0x63
  401f40:	mov    rdi,rbp
  401f43:	call   4012a0 <fgets@plt>
  401f48:	test   rax,rax
  401f4b:	je     40216f <__sprintf_chk@plt+0xdcf>
  401f51:	mov    rdx,rbx
  401f54:	mov    esi,0x63
  401f59:	mov    rdi,rbp
  401f5c:	call   4012a0 <fgets@plt>
  401f61:	test   rax,rax
  401f64:	je     40216f <__sprintf_chk@plt+0xdcf>
  401f6a:	mov    rdx,rbx
  401f6d:	mov    esi,0x63
  401f72:	mov    rdi,rbp
  401f75:	call   4012a0 <fgets@plt>
  401f7a:	test   rax,rax
  401f7d:	je     40216f <__sprintf_chk@plt+0xdcf>
  401f83:	mov    rdx,rbx
  401f86:	mov    esi,0x63
  401f8b:	mov    rdi,rbp
  401f8e:	call   4012a0 <fgets@plt>
  401f93:	test   rax,rax
  401f96:	je     40216f <__sprintf_chk@plt+0xdcf>
  401f9c:	xor    eax,eax
  401f9e:	lea    rsi,[r12+0x28]
  401fa3:	mov    rdi,rbx
  401fa6:	call   401a60 <__sprintf_chk@plt+0x6c0>
  401fab:	test   al,al
  401fad:	je     40216f <__sprintf_chk@plt+0xdcf>
  401fb3:	xor    eax,eax
  401fb5:	lea    rsi,[r12+0x48]
  401fba:	mov    rdi,rbx
  401fbd:	call   401a60 <__sprintf_chk@plt+0x6c0>
  401fc2:	test   al,al
  401fc4:	je     40216f <__sprintf_chk@plt+0xdcf>
  401fca:	xor    eax,eax
  401fcc:	lea    rsi,[r12+0x68]
  401fd1:	mov    rdi,rbx
  401fd4:	call   401a60 <__sprintf_chk@plt+0x6c0>
  401fd9:	test   al,al
  401fdb:	je     40216f <__sprintf_chk@plt+0xdcf>
  401fe1:	mov    rdx,rbx
  401fe4:	mov    esi,0x63
  401fe9:	mov    rdi,rbp
  401fec:	call   4012a0 <fgets@plt>
  401ff1:	test   rax,rax
  401ff4:	je     40216f <__sprintf_chk@plt+0xdcf>
  401ffa:	mov    r13,rbp
  401ffd:	jmp    402006 <__sprintf_chk@plt+0xc66>
  401fff:	nop
  402000:	cmp    BYTE PTR [rbp+0x0],0xa
  402004:	je     40201b <__sprintf_chk@plt+0xc7b>
  402006:	mov    rdx,rbx
  402009:	mov    esi,0x63
  40200e:	mov    rdi,r13
  402011:	call   4012a0 <fgets@plt>
  402016:	test   rax,rax
  402019:	jne    402000 <__sprintf_chk@plt+0xc60>
  40201b:	cmp    QWORD PTR [rsp+0x8],0x0
  402021:	jg     402060 <__sprintf_chk@plt+0xcc0>
  402023:	cmp    QWORD PTR [rsp],0x0
  402028:	jg     4020c6 <__sprintf_chk@plt+0xd26>
  40202e:	xor    eax,eax
  402030:	mov    rdi,rbx
  402033:	call   404310 <__sprintf_chk@plt+0x2f70>
  402038:	mov    rax,QWORD PTR [rsp+0x28]
  40203d:	xor    rax,QWORD PTR fs:0x28
  402046:	jne    40218e <__sprintf_chk@plt+0xdee>
  40204c:	add    rsp,0x30
  402050:	pop    rbx
  402051:	pop    rbp
  402052:	pop    r12
  402054:	pop    r13
  402056:	pop    r14
  402058:	ret    
  402059:	nop    DWORD PTR [rax+0x0]
  402060:	mov    rdx,rbx
  402063:	mov    esi,0x63
  402068:	lea    rdi,[rip+0x70d1]        # 409140 <error@@Base+0x4ca0>
  40206f:	call   4012a0 <fgets@plt>
  402074:	lea    rbp,[rsp+0x18]
  402079:	lea    r13,[rip+0x70d4]        # 409154 <error@@Base+0x4cb4>
  402080:	test   rax,rax
  402083:	jne    4020a7 <__sprintf_chk@plt+0xd07>
  402085:	jmp    402023 <__sprintf_chk@plt+0xc83>
  402087:	nop    WORD PTR [rax+rax*1+0x0]
  402090:	mov    rcx,QWORD PTR [rsp+0x18]
  402095:	mov    rdx,QWORD PTR [rsp+0x10]
  40209a:	mov    rsi,r13
  40209d:	mov    rdi,r12
  4020a0:	xor    eax,eax
  4020a2:	call   401d50 <__sprintf_chk@plt+0x9b0>
  4020a7:	xor    eax,eax
  4020a9:	mov    rdx,rbp
  4020ac:	mov    rsi,r14
  4020af:	mov    rdi,rbx
  4020b2:	call   401b10 <__sprintf_chk@plt+0x770>
  4020b7:	test   al,al
  4020b9:	jne    402090 <__sprintf_chk@plt+0xcf0>
  4020bb:	cmp    QWORD PTR [rsp],0x0
  4020c0:	jle    40202e <__sprintf_chk@plt+0xc8e>
  4020c6:	mov    rdx,rbx
  4020c9:	mov    esi,0x63
  4020ce:	lea    rdi,[rip+0x706b]        # 409140 <error@@Base+0x4ca0>
  4020d5:	call   4012a0 <fgets@plt>
  4020da:	lea    rbp,[rsp+0x18]
  4020df:	lea    r13,[rsp+0x20]
  4020e4:	test   rax,rax
  4020e7:	jne    402116 <__sprintf_chk@plt+0xd76>
  4020e9:	jmp    40202e <__sprintf_chk@plt+0xc8e>
  4020ee:	xchg   ax,ax
  4020f0:	cmp    al,0x5c
  4020f2:	jne    402150 <__sprintf_chk@plt+0xdb0>
  4020f4:	mov    QWORD PTR [rsp+0x20],0xa
  4020fd:	mov    esi,0xa
  402102:	mov    rcx,QWORD PTR [rsp+0x18]
  402107:	mov    rdx,QWORD PTR [rsp+0x10]
  40210c:	mov    rdi,r12
  40210f:	xor    eax,eax
  402111:	call   401ce0 <__sprintf_chk@plt+0x940>
  402116:	xor    eax,eax
  402118:	mov    rdx,rbp
  40211b:	mov    rsi,r14
  40211e:	mov    rdi,rbx
  402121:	call   401b10 <__sprintf_chk@plt+0x770>
  402126:	test   al,al
  402128:	je     40202e <__sprintf_chk@plt+0xc8e>
  40212e:	movzx  eax,BYTE PTR [rip+0x702a]        # 40915f <error@@Base+0x4cbf>
  402135:	cmp    al,0x7d
  402137:	jne    4020f0 <__sprintf_chk@plt+0xd50>
  402139:	movsx  rsi,BYTE PTR [rip+0x701d]        # 40915e <error@@Base+0x4cbe>
  402141:	mov    QWORD PTR [rsp+0x20],rsi
  402146:	jmp    402102 <__sprintf_chk@plt+0xd62>
  402148:	nop    DWORD PTR [rax+rax*1+0x0]
  402150:	lea    rsi,[rip+0x2f56]        # 4050ad <error@@Base+0xc0d>
  402157:	mov    rdx,r13
  40215a:	lea    rdi,[rip+0x6ffe]        # 40915f <error@@Base+0x4cbf>
  402161:	xor    eax,eax
  402163:	call   401310 <__isoc99_sscanf@plt>
  402168:	mov    rsi,QWORD PTR [rsp+0x20]
  40216d:	jmp    402102 <__sprintf_chk@plt+0xd62>
  40216f:	test   r13,r13
  402172:	lea    rax,[rip+0x2f2e]        # 4050a7 <error@@Base+0xc07>
  402179:	cmove  r13,rax
  40217d:	lea    rdi,[rip+0x2f2d]        # 4050b1 <error@@Base+0xc11>
  402184:	mov    rsi,r13
  402187:	xor    eax,eax
  402189:	call   404550 <error@@Base+0xb0>
  40218e:	call   401260 <__stack_chk_fail@plt>
  402193:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40219e:	xchg   ax,ax
  4021a0:	endbr64 
  4021a4:	push   r13
  4021a6:	xor    eax,eax
  4021a8:	push   r12
  4021aa:	mov    r12,rdi
  4021ad:	mov    rdi,rsi
  4021b0:	push   rbp
  4021b1:	lea    rsi,[rip+0x3290]        # 405448 <error@@Base+0xfa8>
  4021b8:	lea    rbp,[r12+0x88]
  4021c0:	push   rbx
  4021c1:	sub    rsp,0x8
  4021c5:	call   4045a0 <error@@Base+0x100>
  4021ca:	mov    r13,rax
  4021cd:	mov    rdi,rax
  4021d0:	lea    r8,[rip+0x2fd9]        # 4051b0 <error@@Base+0xd10>
  4021d7:	lea    rcx,[rip+0x2fa2]        # 405180 <error@@Base+0xce0>
  4021de:	lea    rdx,[rip+0x2ede]        # 4050c3 <error@@Base+0xc23>
  4021e5:	mov    esi,0x1
  4021ea:	xor    eax,eax
  4021ec:	call   401360 <__fprintf_chk@plt>
  4021f1:	mov    rcx,QWORD PTR [r12]
  4021f5:	lea    r8,[rip+0x313e]        # 40533a <error@@Base+0xe9a>
  4021fc:	lea    rdx,[rip+0x2f2f]        # 405132 <error@@Base+0xc92>
  402203:	mov    esi,0x1
  402208:	mov    rdi,r13
  40220b:	xor    eax,eax
  40220d:	call   401360 <__fprintf_chk@plt>
  402212:	mov    rcx,QWORD PTR [r12+0x8]
  402217:	lea    r8,[rip+0x2eaa]        # 4050c8 <error@@Base+0xc28>
  40221e:	lea    rdx,[rip+0x2f0d]        # 405132 <error@@Base+0xc92>
  402225:	mov    esi,0x1
  40222a:	mov    rdi,r13
  40222d:	xor    eax,eax
  40222f:	call   401360 <__fprintf_chk@plt>
  402234:	mov    rdx,QWORD PTR [r12]
  402238:	xor    eax,eax
  40223a:	mov    rsi,rdx
  40223d:	sub    rsi,QWORD PTR [r12+0x8]
  402242:	mov    rdi,r13
  402245:	call   401b70 <__sprintf_chk@plt+0x7d0>
  40224a:	lea    rdx,[rip+0x2e7e]        # 4050cf <error@@Base+0xc2f>
  402251:	mov    esi,0x1
  402256:	mov    rdi,r13
  402259:	xor    eax,eax
  40225b:	call   401360 <__fprintf_chk@plt>
  402260:	mov    rcx,QWORD PTR [r12+0x10]
  402265:	lea    r8,[rip+0x2e72]        # 4050de <error@@Base+0xc3e>
  40226c:	lea    rdx,[rip+0x2ebf]        # 405132 <error@@Base+0xc92>
  402273:	mov    esi,0x1
  402278:	mov    rdi,r13
  40227b:	xor    eax,eax
  40227d:	call   401360 <__fprintf_chk@plt>
  402282:	mov    rcx,QWORD PTR [r12+0x18]
  402287:	lea    r8,[rip+0x2e62]        # 4050f0 <error@@Base+0xc50>
  40228e:	lea    rdx,[rip+0x2e9d]        # 405132 <error@@Base+0xc92>
  402295:	mov    esi,0x1
  40229a:	mov    rdi,r13
  40229d:	xor    eax,eax
  40229f:	call   401360 <__fprintf_chk@plt>
  4022a4:	mov    rcx,QWORD PTR [r12+0x20]
  4022a9:	lea    r8,[rip+0x2e50]        # 405100 <error@@Base+0xc60>
  4022b0:	lea    rdx,[rip+0x2e7b]        # 405132 <error@@Base+0xc92>
  4022b7:	mov    esi,0x1
  4022bc:	mov    rdi,r13
  4022bf:	xor    eax,eax
  4022c1:	call   401360 <__fprintf_chk@plt>
  4022c6:	mov    rsi,QWORD PTR [r12+0x18]
  4022cb:	mov    rdx,QWORD PTR [r12]
  4022cf:	add    rsi,QWORD PTR [r12+0x10]
  4022d4:	xor    eax,eax
  4022d6:	mov    rdi,r13
  4022d9:	call   401b70 <__sprintf_chk@plt+0x7d0>
  4022de:	lea    rdx,[rip+0x2e27]        # 40510c <error@@Base+0xc6c>
  4022e5:	mov    esi,0x1
  4022ea:	mov    rdi,r13
  4022ed:	xor    eax,eax
  4022ef:	call   401360 <__fprintf_chk@plt>
  4022f4:	mov    rdx,QWORD PTR [r12]
  4022f8:	xor    eax,eax
  4022fa:	mov    rsi,rdx
  4022fd:	sub    rsi,QWORD PTR [r12+0x60]
  402302:	mov    rdi,r13
  402305:	call   401b70 <__sprintf_chk@plt+0x7d0>
  40230a:	lea    rdx,[rip+0x2ecf]        # 4051e0 <error@@Base+0xd40>
  402311:	mov    esi,0x1
  402316:	mov    rdi,r13
  402319:	xor    eax,eax
  40231b:	call   401360 <__fprintf_chk@plt>
  402320:	lea    rdx,[rip+0x2ed9]        # 405200 <error@@Base+0xd60>
  402327:	mov    esi,0x1
  40232c:	mov    rdi,r13
  40232f:	xor    eax,eax
  402331:	call   401360 <__fprintf_chk@plt>
  402336:	lea    rax,[rip+0x2e00]        # 40513d <error@@Base+0xc9d>
  40233d:	mov    rcx,QWORD PTR [r12+0x28]
  402342:	push   rax
  402343:	lea    rdx,[rip+0x2dd9]        # 405123 <error@@Base+0xc83>
  40234a:	xor    eax,eax
  40234c:	push   QWORD PTR [r12+0x40]
  402351:	mov    esi,0x1
  402356:	mov    rdi,r13
  402359:	mov    r9,QWORD PTR [r12+0x38]
  40235e:	mov    r8,QWORD PTR [r12+0x30]
  402363:	xor    ebx,ebx
  402365:	call   401360 <__fprintf_chk@plt>
  40236a:	lea    rax,[rip+0x2dd3]        # 405144 <error@@Base+0xca4>
  402371:	mov    rcx,QWORD PTR [r12+0x48]
  402376:	push   rax
  402377:	lea    rdx,[rip+0x2da5]        # 405123 <error@@Base+0xc83>
  40237e:	mov    esi,0x1
  402383:	push   QWORD PTR [r12+0x60]
  402388:	mov    rdi,r13
  40238b:	xor    eax,eax
  40238d:	mov    r9,QWORD PTR [r12+0x58]
  402392:	mov    r8,QWORD PTR [r12+0x50]
  402397:	call   401360 <__fprintf_chk@plt>
  40239c:	add    rsp,0x20
  4023a0:	lea    rax,[rip+0x2da6]        # 40514d <error@@Base+0xcad>
  4023a7:	mov    rcx,QWORD PTR [r12+0x68]
  4023ac:	push   rax
  4023ad:	lea    rdx,[rip+0x2d6f]        # 405123 <error@@Base+0xc83>
  4023b4:	mov    esi,0x1
  4023b9:	push   QWORD PTR [r12+0x80]
  4023c1:	mov    rdi,r13
  4023c4:	xor    eax,eax
  4023c6:	mov    r9,QWORD PTR [r12+0x78]
  4023cb:	mov    r8,QWORD PTR [r12+0x70]
  4023d0:	call   401360 <__fprintf_chk@plt>
  4023d5:	lea    rdx,[rip+0x2d77]        # 405153 <error@@Base+0xcb3>
  4023dc:	mov    esi,0x1
  4023e1:	mov    rdi,r13
  4023e4:	xor    eax,eax
  4023e6:	call   401360 <__fprintf_chk@plt>
  4023eb:	pop    rax
  4023ec:	pop    rdx
  4023ed:	nop    DWORD PTR [rax]
  4023f0:	cmp    QWORD PTR [rbp+0x0],0x0
  4023f5:	jle    402413 <__sprintf_chk@plt+0x1073>
  4023f7:	mov    rdi,rbx
  4023fa:	xor    eax,eax
  4023fc:	call   4026a0 <__sprintf_chk@plt+0x1300>
  402401:	mov    rdx,rax
  402404:	xor    ecx,ecx
  402406:	mov    rsi,rbp
  402409:	mov    rdi,r13
  40240c:	xor    eax,eax
  40240e:	call   401c10 <__sprintf_chk@plt+0x870>
  402413:	inc    rbx
  402416:	add    rbp,0x10
  40241a:	cmp    rbx,0x100
  402421:	jne    4023f0 <__sprintf_chk@plt+0x1050>
  402423:	xor    ecx,ecx
  402425:	xor    eax,eax
  402427:	lea    rsi,[r12+0x1088]
  40242f:	lea    rdx,[rip+0x2d17]        # 40514d <error@@Base+0xcad>
  402436:	mov    rdi,r13
  402439:	call   401c10 <__sprintf_chk@plt+0x870>
  40243e:	cmp    QWORD PTR [r12+0x8],0x0
  402444:	jg     402465 <__sprintf_chk@plt+0x10c5>
  402446:	cmp    QWORD PTR [r12],0x0
  40244b:	jg     402502 <__sprintf_chk@plt+0x1162>
  402451:	add    rsp,0x8
  402455:	pop    rbx
  402456:	pop    rbp
  402457:	pop    r12
  402459:	mov    rdi,r13
  40245c:	xor    eax,eax
  40245e:	pop    r13
  402460:	jmp    404310 <__sprintf_chk@plt+0x2f70>
  402465:	xor    eax,eax
  402467:	lea    rdi,[r12+0x1098]
  40246f:	call   403960 <__sprintf_chk@plt+0x25c0>
  402474:	mov    rsi,QWORD PTR [r12+0x4f78]
  40247c:	mov    rdi,QWORD PTR [r12+0x4f80]
  402484:	xor    eax,eax
  402486:	lea    rdx,[rip+0xfffffffffffff743]        # 401bd0 <__sprintf_chk@plt+0x830>
  40248d:	call   402870 <__sprintf_chk@plt+0x14d0>
  402492:	xor    eax,eax
  402494:	lea    rdx,[rip+0x2d8d]        # 405228 <error@@Base+0xd88>
  40249b:	mov    esi,0x1
  4024a0:	mov    rdi,r13
  4024a3:	call   401360 <__fprintf_chk@plt>
  4024a8:	cmp    QWORD PTR [r12+0x4f80],0x0
  4024b1:	jle    402446 <__sprintf_chk@plt+0x10a6>
  4024b3:	xor    ebx,ebx
  4024b5:	lea    rbp,[rip+0x2cb5]        # 405171 <error@@Base+0xcd1>
  4024bc:	nop    DWORD PTR [rax+0x0]
  4024c0:	mov    rax,QWORD PTR [r12+0x4f78]
  4024c8:	mov    rdx,rbp
  4024cb:	mov    rax,QWORD PTR [rax+rbx*8]
  4024cf:	mov    esi,0x1
  4024d4:	mov    rcx,QWORD PTR [rax+0x18]
  4024d8:	mov    r9,QWORD PTR [rax+0x10]
  4024dc:	mov    r8,QWORD PTR [rax+0x20]
  4024e0:	mov    rdi,r13
  4024e3:	xor    eax,eax
  4024e5:	inc    rbx
  4024e8:	call   401360 <__fprintf_chk@plt>
  4024ed:	cmp    QWORD PTR [r12+0x4f80],rbx
  4024f5:	jg     4024c0 <__sprintf_chk@plt+0x1120>
  4024f7:	cmp    QWORD PTR [r12],0x0
  4024fc:	jle    402451 <__sprintf_chk@plt+0x10b1>
  402502:	lea    rdx,[rip+0x2c4a]        # 405153 <error@@Base+0xcb3>
  402509:	mov    esi,0x1
  40250e:	mov    rdi,r13
  402511:	xor    eax,eax
  402513:	call   401360 <__fprintf_chk@plt>
  402518:	add    r12,0x4f88
  40251f:	xor    ebp,ebp
  402521:	nop    DWORD PTR [rax+0x0]
  402528:	cmp    QWORD PTR [r12],0x0
  40252d:	jle    402541 <__sprintf_chk@plt+0x11a1>
  40252f:	mov    rcx,rbp
  402532:	xor    edx,edx
  402534:	mov    rsi,r12
  402537:	mov    rdi,r13
  40253a:	xor    eax,eax
  40253c:	call   401c10 <__sprintf_chk@plt+0x870>
  402541:	inc    rbp
  402544:	add    r12,0x10
  402548:	cmp    rbp,0x10ffff
  40254f:	jne    402528 <__sprintf_chk@plt+0x1188>
  402551:	jmp    402451 <__sprintf_chk@plt+0x10b1>
  402556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402560:	push   r15
  402562:	lea    r15,[rip+0x116c57]        # 5191c0 <error@@Base+0x114d20>
  402569:	push   r14
  40256b:	push   r13
  40256d:	push   r12
  40256f:	lea    r12,[rip+0x62ca]        # 408840 <error@@Base+0x43a0>
  402576:	push   rbp
  402577:	push   rbx
  402578:	sub    rsp,0x8
  40257c:	nop    DWORD PTR [rax+0x0]
  402580:	movsx  rbx,WORD PTR [rip+0x117438]        # 5199c0 <error@@Base+0x115520>
  402588:	mov    r13,rbx
  40258b:	test   rbx,rbx
  40258e:	jle    402609 <__sprintf_chk@plt+0x1269>
  402590:	mov    rbp,QWORD PTR [r12+0x8]
  402595:	xor    r14d,r14d
  402598:	jmp    4025a8 <__sprintf_chk@plt+0x1208>
  40259a:	nop    WORD PTR [rax+rax*1+0x0]
  4025a0:	inc    r14
  4025a3:	cmp    rbx,r14
  4025a6:	je     402618 <__sprintf_chk@plt+0x1278>
  4025a8:	mov    rsi,QWORD PTR [r15+r14*8]
  4025ac:	mov    rdi,rbp
  4025af:	call   4012d0 <strcmp@plt>
  4025b4:	test   eax,eax
  4025b6:	jne    4025a0 <__sprintf_chk@plt+0x1200>
  4025b8:	mov    eax,DWORD PTR [r12]
  4025bc:	mov    esi,DWORD PTR [r12+0x4]
  4025c1:	cmp    eax,esi
  4025c3:	ja     4025ea <__sprintf_chk@plt+0x124a>
  4025c5:	lea    rcx,[rip+0x6bf4]        # 4091c0 <error@@Base+0x4d20>
  4025cc:	add    rax,rcx
  4025cf:	inc    rcx
  4025d2:	mov    edx,r14d
  4025d5:	add    rsi,rcx
  4025d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4025e0:	mov    BYTE PTR [rax],dl
  4025e2:	inc    rax
  4025e5:	cmp    rsi,rax
  4025e8:	jne    4025e0 <__sprintf_chk@plt+0x1240>
  4025ea:	add    r12,0x10
  4025ee:	lea    rax,[rip+0x67fb]        # 408df0 <error@@Base+0x4950>
  4025f5:	cmp    r12,rax
  4025f8:	jne    402580 <__sprintf_chk@plt+0x11e0>
  4025fa:	add    rsp,0x8
  4025fe:	pop    rbx
  4025ff:	pop    rbp
  402600:	pop    r12
  402602:	pop    r13
  402604:	pop    r14
  402606:	pop    r15
  402608:	ret    
  402609:	mov    r14d,0x0
  40260f:	jne    4025b8 <__sprintf_chk@plt+0x1218>
  402611:	nop    DWORD PTR [rax+0x0]
  402618:	cmp    r13w,0x100
  40261e:	je     402636 <__sprintf_chk@plt+0x1296>
  402620:	mov    rax,QWORD PTR [r12+0x8]
  402625:	inc    r13d
  402628:	mov    WORD PTR [rip+0x117390],r13w        # 5199c0 <error@@Base+0x115520>
  402630:	mov    QWORD PTR [r15+r14*8],rax
  402634:	jmp    4025b8 <__sprintf_chk@plt+0x1218>
  402636:	lea    rdi,[rip+0x2c1b]        # 405258 <error@@Base+0xdb8>
  40263d:	xor    eax,eax
  40263f:	call   4044a0 <error@@Base>
  402644:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40264f:	nop
  402650:	endbr64 
  402654:	cmp    WORD PTR [rip+0x117364],0x0        # 5199c0 <error@@Base+0x115520>
  40265c:	je     402670 <__sprintf_chk@plt+0x12d0>
  40265e:	mov    edi,edi
  402660:	lea    rax,[rip+0x6b59]        # 4091c0 <error@@Base+0x4d20>
  402667:	movzx  eax,BYTE PTR [rax+rdi*1]
  40266b:	ret    
  40266c:	nop    DWORD PTR [rax+0x0]
  402670:	sub    rsp,0x18
  402674:	xor    eax,eax
  402676:	mov    DWORD PTR [rsp+0xc],edi
  40267a:	call   402560 <__sprintf_chk@plt+0x11c0>
  40267f:	mov    edi,DWORD PTR [rsp+0xc]
  402683:	lea    rax,[rip+0x6b36]        # 4091c0 <error@@Base+0x4d20>
  40268a:	mov    edi,edi
  40268c:	movzx  eax,BYTE PTR [rax+rdi*1]
  402690:	add    rsp,0x18
  402694:	ret    
  402695:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4026a0:	endbr64 
  4026a4:	sub    rsp,0x18
  4026a8:	movsx  eax,WORD PTR [rip+0x117311]        # 5199c0 <error@@Base+0x115520>
  4026af:	test   ax,ax
  4026b2:	je     4026d0 <__sprintf_chk@plt+0x1330>
  4026b4:	movzx  edi,dil
  4026b8:	cmp    edi,eax
  4026ba:	jge    4026e6 <__sprintf_chk@plt+0x1346>
  4026bc:	lea    rax,[rip+0x116afd]        # 5191c0 <error@@Base+0x114d20>
  4026c3:	mov    rax,QWORD PTR [rax+rdi*8]
  4026c7:	add    rsp,0x18
  4026cb:	ret    
  4026cc:	nop    DWORD PTR [rax+0x0]
  4026d0:	mov    DWORD PTR [rsp+0xc],edi
  4026d4:	call   402560 <__sprintf_chk@plt+0x11c0>
  4026d9:	movsx  eax,WORD PTR [rip+0x1172e0]        # 5199c0 <error@@Base+0x115520>
  4026e0:	mov    edi,DWORD PTR [rsp+0xc]
  4026e4:	jmp    4026b4 <__sprintf_chk@plt+0x1314>
  4026e6:	lea    rdi,[rip+0x2b86]        # 405273 <error@@Base+0xdd3>
  4026ed:	xor    eax,eax
  4026ef:	call   4044a0 <error@@Base>
  4026f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026fe:	xchg   ax,ax
  402700:	push   r15
  402702:	mov    rax,rsi
  402705:	shl    rax,0x3
  402709:	push   r14
  40270b:	push   r13
  40270d:	mov    r13,rdi
  402710:	push   r12
  402712:	push   rbp
  402713:	push   rbx
  402714:	sub    rsp,0x18
  402718:	mov    QWORD PTR [rsp],rsi
  40271c:	mov    QWORD PTR [rsp+0x8],rax
  402721:	mov    rax,QWORD PTR [rip+0x1172a8]        # 5199d0 <error@@Base+0x115530>
  402728:	mov    rdx,QWORD PTR [rsp]
  40272c:	mov    rbx,QWORD PTR [rax+r13*8]
  402730:	mov    r15,rdx
  402733:	mov    rbp,r13
  402736:	cmp    r13,rdx
  402739:	jge    402853 <__sprintf_chk@plt+0x14b3>
  40273f:	nop
  402740:	mov    rsi,QWORD PTR [rax+r15*8]
  402744:	mov    rdi,rbx
  402747:	xor    eax,eax
  402749:	lea    r12,[r15*8+0x0]
  402751:	call   QWORD PTR [rip+0x117271]        # 5199c8 <error@@Base+0x115528>
  402757:	test   eax,eax
  402759:	jns    4027f8 <__sprintf_chk@plt+0x1458>
  40275f:	dec    r15
  402762:	mov    rax,QWORD PTR [rip+0x117267]        # 5199d0 <error@@Base+0x115530>
  402769:	lea    r12,[r15*8+0x0]
  402771:	cmp    rbp,r15
  402774:	jl     402740 <__sprintf_chk@plt+0x13a0>
  402776:	lea    rsi,[rax+r12*1]
  40277a:	cmp    r15,rbp
  40277d:	je     40280f <__sprintf_chk@plt+0x146f>
  402783:	mov    rsi,QWORD PTR [rsi]
  402786:	lea    r14,[rbp+0x1]
  40278a:	lea    rdi,[rbp*8+0x0]
  402792:	mov    QWORD PTR [rax+rbp*8],rsi
  402796:	cmp    r15,r14
  402799:	jg     4027af <__sprintf_chk@plt+0x140f>
  40279b:	jmp    40283b <__sprintf_chk@plt+0x149b>
  4027a0:	inc    r14
  4027a3:	mov    rax,QWORD PTR [rip+0x117226]        # 5199d0 <error@@Base+0x115530>
  4027aa:	cmp    r15,r14
  4027ad:	je     402808 <__sprintf_chk@plt+0x1468>
  4027af:	mov    rsi,QWORD PTR [rax+r14*8]
  4027b3:	mov    rdi,rbx
  4027b6:	xor    eax,eax
  4027b8:	lea    rbp,[r14*8+0x0]
  4027c0:	call   QWORD PTR [rip+0x117202]        # 5199c8 <error@@Base+0x115528>
  4027c6:	test   eax,eax
  4027c8:	jg     4027a0 <__sprintf_chk@plt+0x1400>
  4027ca:	mov    rax,QWORD PTR [rip+0x1171ff]        # 5199d0 <error@@Base+0x115530>
  4027d1:	lea    rsi,[rax+rbp*1]
  4027d5:	mov    rbp,r14
  4027d8:	mov    rsi,QWORD PTR [rsi]
  4027db:	dec    r15
  4027de:	mov    QWORD PTR [rax+r12*1],rsi
  4027e2:	cmp    r15,r14
  4027e5:	jg     402740 <__sprintf_chk@plt+0x13a0>
  4027eb:	lea    rsi,[rax+r15*8]
  4027ef:	jmp    402812 <__sprintf_chk@plt+0x1472>
  4027f1:	nop    DWORD PTR [rax+0x0]
  4027f8:	mov    rax,QWORD PTR [rip+0x1171d1]        # 5199d0 <error@@Base+0x115530>
  4027ff:	jmp    402776 <__sprintf_chk@plt+0x13d6>
  402804:	nop    DWORD PTR [rax+0x0]
  402808:	lea    rsi,[rax+r15*8]
  40280c:	mov    rbp,r15
  40280f:	mov    r15,rbp
  402812:	mov    QWORD PTR [rsi],rbx
  402815:	lea    rsi,[r15-0x1]
  402819:	cmp    r13,rsi
  40281c:	jl     402847 <__sprintf_chk@plt+0x14a7>
  40281e:	lea    r13,[rbp+0x1]
  402822:	cmp    r13,QWORD PTR [rsp]
  402826:	jl     402721 <__sprintf_chk@plt+0x1381>
  40282c:	add    rsp,0x18
  402830:	pop    rbx
  402831:	pop    rbp
  402832:	pop    r12
  402834:	pop    r13
  402836:	pop    r14
  402838:	pop    r15
  40283a:	ret    
  40283b:	lea    rsi,[rax+rdi*1+0x8]
  402840:	je     40280c <__sprintf_chk@plt+0x146c>
  402842:	mov    rbp,r14
  402845:	jmp    4027d8 <__sprintf_chk@plt+0x1438>
  402847:	mov    rdi,r13
  40284a:	xor    eax,eax
  40284c:	call   402700 <__sprintf_chk@plt+0x1360>
  402851:	jmp    40281e <__sprintf_chk@plt+0x147e>
  402853:	mov    rcx,QWORD PTR [rsp+0x8]
  402858:	mov    r15,QWORD PTR [rsp]
  40285c:	lea    rsi,[rax+rcx*1]
  402860:	jmp    402812 <__sprintf_chk@plt+0x1472>
  402862:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40286d:	nop    DWORD PTR [rax]
  402870:	endbr64 
  402874:	cmp    rdi,0x1
  402878:	jle    402898 <__sprintf_chk@plt+0x14f8>
  40287a:	mov    QWORD PTR [rip+0x11714f],rsi        # 5199d0 <error@@Base+0x115530>
  402881:	xor    eax,eax
  402883:	lea    rsi,[rdi-0x1]
  402887:	xor    edi,edi
  402889:	mov    QWORD PTR [rip+0x117138],rdx        # 5199c8 <error@@Base+0x115528>
  402890:	jmp    402700 <__sprintf_chk@plt+0x1360>
  402895:	nop    DWORD PTR [rax]
  402898:	ret    
  402899:	nop    DWORD PTR [rax+0x0]
  4028a0:	push   r15
  4028a2:	mov    rax,rcx
  4028a5:	sub    rax,rdi
  4028a8:	push   r14
  4028aa:	mov    r15,rdi
  4028ad:	push   r13
  4028af:	push   r12
  4028b1:	mov    r12,rdi
  4028b4:	push   rbp
  4028b5:	push   rbx
  4028b6:	mov    rbx,QWORD PTR [rsp+0x38]
  4028bb:	mov    QWORD PTR [rsp-0x10],r9
  4028c0:	mov    rbp,rbx
  4028c3:	mov    QWORD PTR [rsp-0x8],rax
  4028c8:	sub    rbp,rdi
  4028cb:	cmp    rax,rdx
  4028ce:	jl     4029e1 <__sprintf_chk@plt+0x1641>
  4028d4:	nop    DWORD PTR [rax+0x0]
  4028d8:	lea    r15,[rdx+0x1]
  4028dc:	cmp    QWORD PTR [rsp-0x10],rbp
  4028e1:	jg     4029d0 <__sprintf_chk@plt+0x1630>
  4028e7:	mov    rax,QWORD PTR [rsi+rdx*8]
  4028eb:	lea    r15,[rdx+0x1]
  4028ef:	mov    r13d,DWORD PTR [rax+0x14]
  4028f3:	mov    r9,QWORD PTR [rsp-0x10]
  4028f8:	cmp    r13d,0x7e
  4028fc:	setne  r14b
  402900:	jmp    402914 <__sprintf_chk@plt+0x1574>
  402902:	nop    WORD PTR [rax+rax*1+0x0]
  402908:	mov    r9,r11
  40290b:	cmp    rbp,r11
  40290e:	jl     4029d0 <__sprintf_chk@plt+0x1630>
  402914:	mov    rax,QWORD PTR [r8+r9*8]
  402918:	lea    r11,[r9+0x1]
  40291c:	cmp    DWORD PTR [rax+0x14],r13d
  402920:	jne    402908 <__sprintf_chk@plt+0x1568>
  402922:	test   r14b,r14b
  402925:	je     402908 <__sprintf_chk@plt+0x1568>
  402927:	cmp    r15,rcx
  40292a:	jg     4029f0 <__sprintf_chk@plt+0x1650>
  402930:	cmp    rbx,r11
  402933:	jl     4029f0 <__sprintf_chk@plt+0x1650>
  402939:	mov    rax,QWORD PTR [rsi+rdx*8+0x8]
  40293e:	mov    rdi,QWORD PTR [r8+r11*8]
  402942:	mov    eax,DWORD PTR [rax+0x14]
  402945:	cmp    DWORD PTR [rdi+0x14],eax
  402948:	jne    4029f0 <__sprintf_chk@plt+0x1650>
  40294e:	cmp    eax,0x7e
  402951:	je     4029f0 <__sprintf_chk@plt+0x1650>
  402957:	mov    rdi,r11
  40295a:	mov    rax,r15
  40295d:	mov    QWORD PTR [rsp-0x18],rdx
  402962:	jmp    40296e <__sprintf_chk@plt+0x15ce>
  402964:	nop    DWORD PTR [rax+0x0]
  402968:	cmp    r10d,0x7e
  40296c:	je     402990 <__sprintf_chk@plt+0x15f0>
  40296e:	inc    rax
  402971:	inc    rdi
  402974:	cmp    rcx,rax
  402977:	jl     402990 <__sprintf_chk@plt+0x15f0>
  402979:	cmp    rbx,rdi
  40297c:	jl     402990 <__sprintf_chk@plt+0x15f0>
  40297e:	mov    r10,QWORD PTR [rsi+rax*8]
  402982:	mov    rdx,QWORD PTR [r8+rdi*8]
  402986:	mov    r10d,DWORD PTR [r10+0x14]
  40298a:	cmp    DWORD PTR [rdx+0x14],r10d
  40298e:	je     402968 <__sprintf_chk@plt+0x15c8>
  402990:	mov    rdx,QWORD PTR [rsp-0x18]
  402995:	sub    rax,rdx
  402998:	mov    rdi,rax
  40299b:	sub    rdi,r12
  40299e:	test   rdi,rdi
  4029a1:	jle    402908 <__sprintf_chk@plt+0x1568>
  4029a7:	sub    QWORD PTR [rsp-0x8],rdi
  4029ac:	sub    rbp,rdi
  4029af:	mov    rdi,QWORD PTR [rsp+0x40]
  4029b4:	mov    r12,rax
  4029b7:	mov    QWORD PTR [rdi],rdx
  4029ba:	mov    rdi,QWORD PTR [rsp+0x48]
  4029bf:	mov    QWORD PTR [rdi],r9
  4029c2:	mov    r9,r11
  4029c5:	cmp    rbp,r11
  4029c8:	jge    402914 <__sprintf_chk@plt+0x1574>
  4029ce:	xchg   ax,ax
  4029d0:	mov    rdx,r15
  4029d3:	cmp    r15,QWORD PTR [rsp-0x8]
  4029d8:	jle    4028d8 <__sprintf_chk@plt+0x1538>
  4029de:	mov    r15,r12
  4029e1:	pop    rbx
  4029e2:	pop    rbp
  4029e3:	pop    r12
  4029e5:	pop    r13
  4029e7:	pop    r14
  4029e9:	mov    rax,r15
  4029ec:	pop    r15
  4029ee:	ret    
  4029ef:	nop
  4029f0:	mov    rax,r15
  4029f3:	jmp    402995 <__sprintf_chk@plt+0x15f5>
  4029f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a00:	test   rsi,rsi
  402a03:	je     402a70 <__sprintf_chk@plt+0x16d0>
  402a05:	mov    r8,QWORD PTR [rsi+0x18]
  402a09:	lea    rcx,[rdi-0x1]
  402a0d:	cmp    rcx,r8
  402a10:	lea    r10,[rdi+0x1]
  402a14:	cmovl  rcx,r8
  402a18:	cmp    QWORD PTR [rsi+0x20],r10
  402a1c:	cmovle r10,QWORD PTR [rsi+0x20]
  402a21:	cmp    rcx,r10
  402a24:	jg     402a73 <__sprintf_chk@plt+0x16d3>
  402a26:	mov    r11,QWORD PTR [rsi+0x28]
  402a2a:	inc    r10
  402a2d:	xor    eax,eax
  402a2f:	jmp    402a3c <__sprintf_chk@plt+0x169c>
  402a31:	nop    DWORD PTR [rax+0x0]
  402a38:	mov    r8,QWORD PTR [rsi+0x18]
  402a3c:	mov    r9,rcx
  402a3f:	sub    r9,r8
  402a42:	movzx  r8d,WORD PTR [r11+r9*2]
  402a47:	xor    r9d,r9d
  402a4a:	cmp    rdi,rcx
  402a4d:	setle  r9b
  402a51:	add    r8,r9
  402a54:	cmp    r8,rax
  402a57:	jl     402a5f <__sprintf_chk@plt+0x16bf>
  402a59:	mov    QWORD PTR [rdx],rcx
  402a5c:	mov    rax,r8
  402a5f:	inc    rcx
  402a62:	cmp    rcx,r10
  402a65:	jne    402a38 <__sprintf_chk@plt+0x1698>
  402a67:	ret    
  402a68:	nop    DWORD PTR [rax+rax*1+0x0]
  402a70:	xor    eax,eax
  402a72:	ret    
  402a73:	push   rax
  402a74:	lea    rdi,[rip+0x2dc5]        # 405840 <error@@Base+0x13a0>
  402a7b:	xor    eax,eax
  402a7d:	call   4044a0 <error@@Base>
  402a82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  402a8d:	nop    DWORD PTR [rax]
  402a90:	push   rbp
  402a91:	mov    esi,0x20
  402a96:	xor    eax,eax
  402a98:	push   rbx
  402a99:	mov    ebx,edi
  402a9b:	mov    edi,0x1
  402aa0:	sub    rsp,0x8
  402aa4:	call   4044f0 <error@@Base+0x50>
  402aa9:	mov    rbp,rax
  402aac:	movsx  rdi,bx
  402ab0:	mov    esi,0x18
  402ab5:	xor    eax,eax
  402ab7:	call   4044f0 <error@@Base+0x50>
  402abc:	mov    QWORD PTR [rbp+0x10],rax
  402ac0:	add    rsp,0x8
  402ac4:	mov    rax,rbp
  402ac7:	pop    rbx
  402ac8:	pop    rbp
  402ac9:	ret    
  402aca:	nop    WORD PTR [rax+rax*1+0x0]
  402ad0:	push   r15
  402ad2:	xor    eax,eax
  402ad4:	xor    r15d,r15d
  402ad7:	push   r14
  402ad9:	push   r13
  402adb:	mov    r13d,esi
  402ade:	push   r12
  402ae0:	mov    r12,rdi
  402ae3:	push   rbp
  402ae4:	push   rbx
  402ae5:	mov    rbx,rdx
  402ae8:	sub    rsp,0x8
  402aec:	call   4048f0 <error@@Base+0x450>
  402af1:	movsx  edi,r13w
  402af5:	xor    eax,eax
  402af7:	dec    r13d
  402afa:	call   402a90 <__sprintf_chk@plt+0x16f0>
  402aff:	movzx  r13d,r13w
  402b03:	mov    rbp,rax
  402b06:	mov    rax,r13
  402b09:	shl    rax,0x5
  402b0d:	lea    r14,[rbx+rax*1+0x20]
  402b12:	nop    WORD PTR [rax+rax*1+0x0]
  402b18:	mov    rdi,rbx
  402b1b:	xor    eax,eax
  402b1d:	call   404ac0 <error@@Base+0x620>
  402b22:	mov    rdi,QWORD PTR [rbp+0x10]
  402b26:	add    rbx,0x20
  402b2a:	lea    rax,[rdi+r15*1]
  402b2e:	mov    QWORD PTR [rax],0x0
  402b35:	add    r15,0x18
  402b39:	mov    rdx,QWORD PTR [rbx-0x8]
  402b3d:	lea    rcx,[rdx-0x1]
  402b41:	mov    QWORD PTR [rax+0x8],rcx
  402b45:	mov    QWORD PTR [rax+0x10],rdx
  402b49:	cmp    rbx,r14
  402b4c:	jne    402b18 <__sprintf_chk@plt+0x1778>
  402b4e:	lea    rdx,[r13+r13*2+0x0]
  402b53:	lea    rax,[rdi+0x10]
  402b57:	lea    rdx,[rdi+rdx*8+0x28]
  402b5c:	nop    DWORD PTR [rax+0x0]
  402b60:	cmp    QWORD PTR [rax],0x0
  402b64:	jg     402b90 <__sprintf_chk@plt+0x17f0>
  402b66:	add    rax,0x18
  402b6a:	cmp    rdx,rax
  402b6d:	jne    402b60 <__sprintf_chk@plt+0x17c0>
  402b6f:	call   4011f0 <free@plt>
  402b74:	add    rsp,0x8
  402b78:	pop    rbx
  402b79:	mov    rdi,rbp
  402b7c:	pop    rbp
  402b7d:	pop    r12
  402b7f:	pop    r13
  402b81:	pop    r14
  402b83:	pop    r15
  402b85:	jmp    4011f0 <free@plt>
  402b8a:	nop    WORD PTR [rax+rax*1+0x0]
  402b90:	add    rsp,0x8
  402b94:	pop    rbx
  402b95:	mov    rsi,rbp
  402b98:	pop    rbp
  402b99:	mov    rdi,r12
  402b9c:	pop    r12
  402b9e:	pop    r13
  402ba0:	pop    r14
  402ba2:	xor    eax,eax
  402ba4:	pop    r15
  402ba6:	jmp    404920 <error@@Base+0x480>
  402bab:	nop    DWORD PTR [rax+rax*1+0x0]
  402bb0:	push   r15
  402bb2:	xor    eax,eax
  402bb4:	mov    r15,rcx
  402bb7:	push   r14
  402bb9:	mov    r14,r8
  402bbc:	push   r13
  402bbe:	movsx  r13d,si
  402bc2:	push   r12
  402bc4:	mov    r12d,esi
  402bc7:	push   rbp
  402bc8:	mov    ebp,esi
  402bca:	push   rbx
  402bcb:	mov    rbx,rdx
  402bce:	sub    rsp,0x28
  402bd2:	mov    QWORD PTR [rsp+0x8],rdi
  402bd7:	mov    edi,r13d
  402bda:	mov    QWORD PTR [rsp+0x10],r9
  402bdf:	call   402a90 <__sprintf_chk@plt+0x16f0>
  402be4:	mov    QWORD PTR [rsp],rax
  402be8:	mov    edi,r13d
  402beb:	xor    eax,eax
  402bed:	call   402a90 <__sprintf_chk@plt+0x16f0>
  402bf2:	mov    r13,rax
  402bf5:	test   bp,bp
  402bf8:	jle    402d60 <__sprintf_chk@plt+0x19c0>
  402bfe:	mov    rax,QWORD PTR [rsp]
  402c02:	dec    ebp
  402c04:	mov    rdi,QWORD PTR [rax+0x10]
  402c08:	movzx  edx,bp
  402c0b:	mov    rax,QWORD PTR [rbx+0x10]
  402c0f:	mov    r9,QWORD PTR [r13+0x10]
  402c13:	mov    rcx,r15
  402c16:	mov    QWORD PTR [rsp+0x18],rdx
  402c1b:	lea    r15,[r15+rdx*8+0x8]
  402c20:	mov    r10,rdi
  402c23:	mov    rdx,rdi
  402c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c30:	mov    rbp,QWORD PTR [rax]
  402c33:	mov    r11,QWORD PTR [rcx]
  402c36:	mov    QWORD PTR [rdx],rbp
  402c39:	add    r11,r14
  402c3c:	lea    r8,[r11-0x1]
  402c40:	mov    rsi,QWORD PTR [rcx]
  402c43:	add    rcx,0x8
  402c47:	dec    rsi
  402c4a:	mov    QWORD PTR [rdx+0x8],rsi
  402c4e:	add    rax,0x18
  402c52:	add    rdx,0x18
  402c56:	mov    rsi,QWORD PTR [rcx-0x8]
  402c5a:	add    r9,0x18
  402c5e:	sub    rsi,rbp
  402c61:	mov    QWORD PTR [rdx-0x8],rsi
  402c65:	mov    QWORD PTR [r9-0x18],r11
  402c69:	mov    rsi,QWORD PTR [rax-0x10]
  402c6d:	mov    QWORD PTR [r9-0x10],rsi
  402c71:	mov    rsi,QWORD PTR [rax-0x10]
  402c75:	sub    rsi,r8
  402c78:	mov    QWORD PTR [r9-0x8],rsi
  402c7c:	mov    rsi,QWORD PTR [rcx-0x8]
  402c80:	mov    QWORD PTR [rax-0x10],r8
  402c84:	mov    QWORD PTR [rax-0x18],rsi
  402c88:	mov    QWORD PTR [rax-0x8],r14
  402c8c:	cmp    rcx,r15
  402c8f:	jne    402c30 <__sprintf_chk@plt+0x1890>
  402c91:	mov    rax,QWORD PTR [rsp+0x10]
  402c96:	cmp    QWORD PTR [rdi+0x10],0x0
  402c9b:	mov    QWORD PTR [rbx+0x18],rax
  402c9f:	jg     402d40 <__sprintf_chk@plt+0x19a0>
  402ca5:	mov    rax,QWORD PTR [rsp+0x18]
  402caa:	lea    rax,[rax+rax*2]
  402cae:	lea    rax,[rdi+rax*8]
  402cb2:	jmp    402cc3 <__sprintf_chk@plt+0x1923>
  402cb4:	nop    DWORD PTR [rax+0x0]
  402cb8:	add    r10,0x18
  402cbc:	cmp    QWORD PTR [r10+0x10],0x0
  402cc1:	jg     402d40 <__sprintf_chk@plt+0x19a0>
  402cc3:	cmp    rax,r10
  402cc6:	jne    402cb8 <__sprintf_chk@plt+0x1918>
  402cc8:	call   4011f0 <free@plt>
  402ccd:	mov    rdi,QWORD PTR [rsp]
  402cd1:	call   4011f0 <free@plt>
  402cd6:	mov    rdi,QWORD PTR [r13+0x10]
  402cda:	cmp    QWORD PTR [rdi+0x10],0x0
  402cdf:	jg     402d20 <__sprintf_chk@plt+0x1980>
  402ce1:	lea    rdx,[rdi+0x28]
  402ce5:	xor    eax,eax
  402ce7:	jmp    402cfb <__sprintf_chk@plt+0x195b>
  402ce9:	nop    DWORD PTR [rax+0x0]
  402cf0:	add    rdx,0x18
  402cf4:	cmp    QWORD PTR [rdx-0x18],0x0
  402cf9:	jg     402d20 <__sprintf_chk@plt+0x1980>
  402cfb:	inc    eax
  402cfd:	cmp    r12w,ax
  402d01:	jg     402cf0 <__sprintf_chk@plt+0x1950>
  402d03:	call   4011f0 <free@plt>
  402d08:	add    rsp,0x28
  402d0c:	pop    rbx
  402d0d:	pop    rbp
  402d0e:	pop    r12
  402d10:	mov    rdi,r13
  402d13:	pop    r13
  402d15:	pop    r14
  402d17:	pop    r15
  402d19:	jmp    4011f0 <free@plt>
  402d1e:	xchg   ax,ax
  402d20:	mov    rdi,QWORD PTR [rsp+0x8]
  402d25:	add    rsp,0x28
  402d29:	mov    rsi,rbx
  402d2c:	pop    rbx
  402d2d:	pop    rbp
  402d2e:	pop    r12
  402d30:	mov    rdx,r13
  402d33:	pop    r13
  402d35:	pop    r14
  402d37:	xor    eax,eax
  402d39:	pop    r15
  402d3b:	jmp    404a10 <error@@Base+0x570>
  402d40:	mov    rsi,QWORD PTR [rsp]
  402d44:	mov    rdi,QWORD PTR [rsp+0x8]
  402d49:	mov    rdx,rbx
  402d4c:	xor    eax,eax
  402d4e:	call   4049c0 <error@@Base+0x520>
  402d53:	jmp    402cd6 <__sprintf_chk@plt+0x1936>
  402d58:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	mov    rax,QWORD PTR [rsp+0x10]
  402d65:	mov    QWORD PTR [rbx+0x18],rax
  402d69:	mov    rbx,QWORD PTR [rsp]
  402d6d:	mov    rdi,QWORD PTR [rbx+0x10]
  402d71:	call   4011f0 <free@plt>
  402d76:	mov    rdi,rbx
  402d79:	call   4011f0 <free@plt>
  402d7e:	mov    rdi,QWORD PTR [r13+0x10]
  402d82:	jmp    402d03 <__sprintf_chk@plt+0x1963>
  402d87:	nop    WORD PTR [rax+rax*1+0x0]
  402d90:	push   r15
  402d92:	mov    r15,rdx
  402d95:	push   r14
  402d97:	push   r13
  402d99:	push   r12
  402d9b:	push   rbp
  402d9c:	mov    rbp,rcx
  402d9f:	push   rbx
  402da0:	sub    rsp,0xc8
  402da7:	mov    QWORD PTR [rsp+0x10],rdi
  402dac:	mov    DWORD PTR [rsp+0xc],esi
  402db0:	mov    rcx,QWORD PTR [rcx+0x10]
  402db4:	mov    rax,QWORD PTR fs:0x28
  402dbd:	mov    QWORD PTR [rsp+0xb8],rax
  402dc5:	xor    eax,eax
  402dc7:	mov    r8,QWORD PTR [rcx+0x10]
  402dcb:	test   si,si
  402dce:	jle    402f7d <__sprintf_chk@plt+0x1bdd>
  402dd4:	test   r8,r8
  402dd7:	je     402f58 <__sprintf_chk@plt+0x1bb8>
  402ddd:	mov    ebx,esi
  402ddf:	lea    edx,[rbx-0x1]
  402de2:	movzx  edx,dx
  402de5:	lea    rdx,[rdx+rdx*2]
  402de9:	mov    rax,rcx
  402dec:	lea    rdx,[rcx+rdx*8]
  402df0:	jmp    402e07 <__sprintf_chk@plt+0x1a67>
  402df2:	nop    WORD PTR [rax+rax*1+0x0]
  402df8:	add    rax,0x18
  402dfc:	cmp    QWORD PTR [rax+0x10],0x0
  402e01:	je     402f58 <__sprintf_chk@plt+0x1bb8>
  402e07:	cmp    rax,rdx
  402e0a:	jne    402df8 <__sprintf_chk@plt+0x1a58>
  402e0c:	mov    rdx,QWORD PTR [rcx]
  402e0f:	lea    rax,[rsp+0x30]
  402e14:	cmp    WORD PTR [rsp+0xc],0x1
  402e1a:	mov    QWORD PTR [rsp+0x30],rdx
  402e1f:	mov    QWORD PTR [rsp],rax
  402e23:	jle    402ee1 <__sprintf_chk@plt+0x1b41>
  402e29:	movzx  eax,WORD PTR [rsp+0xc]
  402e2e:	lea    r14,[rsp+0x38]
  402e33:	lea    r12d,[rax-0x2]
  402e37:	mov    rdi,r15
  402e3a:	movzx  r12d,r12w
  402e3e:	mov    r15,r14
  402e41:	shl    r12,0x3
  402e45:	xor    ebx,ebx
  402e47:	lea    r13,[rsp+0x28]
  402e4c:	mov    rax,r8
  402e4f:	mov    r14,rdi
  402e52:	jmp    402e6e <__sprintf_chk@plt+0x1ace>
  402e54:	nop    DWORD PTR [rax+0x0]
  402e58:	add    r15,0x8
  402e5c:	cmp    r12,rbx
  402e5f:	je     402edb <__sprintf_chk@plt+0x1b3b>
  402e61:	mov    rcx,QWORD PTR [rbp+0x10]
  402e65:	mov    rdx,QWORD PTR [rsp+0x30]
  402e6a:	add    rbx,0x8
  402e6e:	mov    r8,QWORD PTR [r14+rbx*4+0x30]
  402e73:	mov    rsi,QWORD PTR [r14+0x10]
  402e77:	push   r15
  402e79:	lea    rdi,[rbx+rbx*2+0x18]
  402e7e:	add    rdi,rcx
  402e81:	push   r13
  402e83:	lea    rcx,[rax+rdx*1-0x1]
  402e88:	xor    eax,eax
  402e8a:	push   QWORD PTR [rdi+0x8]
  402e8d:	mov    r9,QWORD PTR [rdi]
  402e90:	xor    edi,edi
  402e92:	call   4028a0 <__sprintf_chk@plt+0x1500>
  402e97:	add    rsp,0x18
  402e9b:	test   rax,rax
  402e9e:	je     402f58 <__sprintf_chk@plt+0x1bb8>
  402ea4:	mov    rcx,QWORD PTR [rsp+0x30]
  402ea9:	mov    rsi,QWORD PTR [rsp+0x28]
  402eae:	sub    rsi,rcx
  402eb1:	test   rsi,rsi
  402eb4:	jle    402e58 <__sprintf_chk@plt+0x1ab8>
  402eb6:	mov    rdx,QWORD PTR [rsp]
  402eba:	jmp    402ec3 <__sprintf_chk@plt+0x1b23>
  402ebc:	nop    DWORD PTR [rax+0x0]
  402ec0:	mov    rcx,QWORD PTR [rdx]
  402ec3:	add    rcx,rsi
  402ec6:	mov    QWORD PTR [rdx],rcx
  402ec9:	add    rdx,0x8
  402ecd:	cmp    r15,rdx
  402ed0:	jne    402ec0 <__sprintf_chk@plt+0x1b20>
  402ed2:	add    r15,0x8
  402ed6:	cmp    r12,rbx
  402ed9:	jne    402e61 <__sprintf_chk@plt+0x1ac1>
  402edb:	mov    r8,rax
  402ede:	mov    r15,r14
  402ee1:	mov    esi,0x8
  402ee6:	mov    edi,0x1
  402eeb:	xor    eax,eax
  402eed:	mov    QWORD PTR [rsp+0x18],r8
  402ef2:	call   4044f0 <error@@Base+0x50>
  402ef7:	movsx  r14d,WORD PTR [rsp+0xc]
  402efd:	mov    rbx,QWORD PTR [rsp+0x10]
  402f02:	mov    rcx,QWORD PTR [rsp]
  402f06:	mov    r8,QWORD PTR [rsp+0x18]
  402f0b:	mov    r9,rax
  402f0e:	mov    rdx,rbp
  402f11:	mov    esi,r14d
  402f14:	mov    rdi,rbx
  402f17:	xor    eax,eax
  402f19:	call   402bb0 <__sprintf_chk@plt+0x1810>
  402f1e:	mov    rcx,QWORD PTR [rbp+0x0]
  402f22:	test   rcx,rcx
  402f25:	je     402f37 <__sprintf_chk@plt+0x1b97>
  402f27:	mov    rdx,r15
  402f2a:	mov    esi,r14d
  402f2d:	mov    rdi,rbx
  402f30:	xor    eax,eax
  402f32:	call   402d90 <__sprintf_chk@plt+0x19f0>
  402f37:	mov    rcx,QWORD PTR [rbp+0x8]
  402f3b:	test   rcx,rcx
  402f3e:	je     402f58 <__sprintf_chk@plt+0x1bb8>
  402f40:	mov    rdi,QWORD PTR [rsp+0x10]
  402f45:	mov    rdx,r15
  402f48:	mov    esi,r14d
  402f4b:	xor    eax,eax
  402f4d:	call   402d90 <__sprintf_chk@plt+0x19f0>
  402f52:	nop    WORD PTR [rax+rax*1+0x0]
  402f58:	mov    rax,QWORD PTR [rsp+0xb8]
  402f60:	xor    rax,QWORD PTR fs:0x28
  402f69:	jne    402f93 <__sprintf_chk@plt+0x1bf3>
  402f6b:	add    rsp,0xc8
  402f72:	pop    rbx
  402f73:	pop    rbp
  402f74:	pop    r12
  402f76:	pop    r13
  402f78:	pop    r14
  402f7a:	pop    r15
  402f7c:	ret    
  402f7d:	mov    rax,QWORD PTR [rcx]
  402f80:	mov    QWORD PTR [rsp+0x30],rax
  402f85:	lea    rax,[rsp+0x30]
  402f8a:	mov    QWORD PTR [rsp],rax
  402f8e:	jmp    402ee1 <__sprintf_chk@plt+0x1b41>
  402f93:	call   401260 <__stack_chk_fail@plt>
  402f98:	nop    DWORD PTR [rax+rax*1+0x0]
  402fa0:	push   r12
  402fa2:	mov    r12,rsi
  402fa5:	push   rbp
  402fa6:	mov    rbp,rdi
  402fa9:	push   rbx
  402faa:	sub    rsp,0x10
  402fae:	mov    rax,QWORD PTR fs:0x28
  402fb7:	mov    QWORD PTR [rsp+0x8],rax
  402fbc:	xor    eax,eax
  402fbe:	mov    rsi,QWORD PTR [rsi]
  402fc1:	mov    rdx,rsp
  402fc4:	call   402a00 <__sprintf_chk@plt+0x1660>
  402fc9:	mov    rdi,QWORD PTR [rip+0x116a30]        # 519a00 <error@@Base+0x115560>
  402fd0:	mov    rbx,rax
  402fd3:	mov    rsi,QWORD PTR [rip+0x116a1e]        # 5199f8 <error@@Base+0x115558>
  402fda:	add    rax,rbp
  402fdd:	cmp    rbx,rdi
  402fe0:	jge    403120 <__sprintf_chk@plt+0x1d80>
  402fe6:	cmp    rax,rsi
  402fe9:	jge    403031 <__sprintf_chk@plt+0x1c91>
  402feb:	lea    r8,[rsi+rbx*1]
  402fef:	mov    r10,QWORD PTR [rip+0x116a1a]        # 519a10 <error@@Base+0x115570>
  402ff6:	mov    r9,QWORD PTR [rip+0x116a0b]        # 519a08 <error@@Base+0x115568>
  402ffd:	sub    r8,rax
  403000:	jmp    403021 <__sprintf_chk@plt+0x1c81>
  403002:	nop    WORD PTR [rax+rax*1+0x0]
  403008:	cmp    edx,0x7e
  40300b:	je     403031 <__sprintf_chk@plt+0x1c91>
  40300d:	inc    rbx
  403010:	inc    rax
  403013:	cmp    rbx,rdi
  403016:	je     403126 <__sprintf_chk@plt+0x1d86>
  40301c:	cmp    rbx,r8
  40301f:	je     403031 <__sprintf_chk@plt+0x1c91>
  403021:	mov    rdx,QWORD PTR [r10+rbx*8]
  403025:	mov    rcx,QWORD PTR [r9+rax*8]
  403029:	mov    edx,DWORD PTR [rdx+0x14]
  40302c:	cmp    DWORD PTR [rcx+0x14],edx
  40302f:	je     403008 <__sprintf_chk@plt+0x1c68>
  403031:	mov    r8,QWORD PTR [rip+0x1169b0]        # 5199e8 <error@@Base+0x115548>
  403038:	cmp    rax,rsi
  40303b:	je     403110 <__sprintf_chk@plt+0x1d70>
  403041:	mov    rcx,QWORD PTR [rip+0x116998]        # 5199e0 <error@@Base+0x115540>
  403048:	sub    rsi,rbp
  40304b:	cmp    rsi,rdi
  40304e:	cmovl  rsi,rdi
  403052:	mov    rax,QWORD PTR [rip+0x116997]        # 5199f0 <error@@Base+0x115550>
  403059:	add    rsi,QWORD PTR [r12+0x10]
  40305e:	sub    rsi,rbx
  403061:	mov    rdx,rax
  403064:	sub    rdx,rsi
  403067:	inc    rdx
  40306a:	sar    rdx,1
  40306d:	cmp    rdx,r8
  403070:	jle    403079 <__sprintf_chk@plt+0x1cd9>
  403072:	mov    QWORD PTR [rip+0x11696f],rdx        # 5199e8 <error@@Base+0x115548>
  403079:	add    rsi,rax
  40307c:	sar    rsi,1
  40307f:	mov    QWORD PTR [rsp],rsi
  403083:	cmp    rsi,rcx
  403086:	jge    40308f <__sprintf_chk@plt+0x1cef>
  403088:	mov    QWORD PTR [rip+0x116951],rsi        # 5199e0 <error@@Base+0x115540>
  40308f:	xor    eax,eax
  403091:	mov    esi,0x18
  403096:	mov    edi,0x1
  40309b:	call   4044f0 <error@@Base+0x50>
  4030a0:	cmp    QWORD PTR [rip+0x1169b0],0x0        # 519a58 <error@@Base+0x1155b8>
  4030a8:	mov    WORD PTR [rax+0x10],bx
  4030ac:	je     403140 <__sprintf_chk@plt+0x1da0>
  4030b2:	cmp    QWORD PTR [r12+0x18],rbp
  4030b7:	jg     4030f0 <__sprintf_chk@plt+0x1d50>
  4030b9:	mov    QWORD PTR [r12+0x20],rbp
  4030be:	mov    rsi,rax
  4030c1:	lea    rdi,[rip+0x116978]        # 519a40 <error@@Base+0x1155a0>
  4030c8:	xor    eax,eax
  4030ca:	call   404970 <error@@Base+0x4d0>
  4030cf:	mov    rax,QWORD PTR [rsp+0x8]
  4030d4:	xor    rax,QWORD PTR fs:0x28
  4030dd:	jne    403160 <__sprintf_chk@plt+0x1dc0>
  4030e3:	add    rsp,0x10
  4030e7:	pop    rbx
  4030e8:	pop    rbp
  4030e9:	pop    r12
  4030eb:	ret    
  4030ec:	nop    DWORD PTR [rax+0x0]
  4030f0:	mov    QWORD PTR [r12+0x18],rbp
  4030f5:	mov    rsi,rax
  4030f8:	lea    rdi,[rip+0x116941]        # 519a40 <error@@Base+0x1155a0>
  4030ff:	xor    eax,eax
  403101:	call   404920 <error@@Base+0x480>
  403106:	jmp    4030cf <__sprintf_chk@plt+0x1d2f>
  403108:	nop    DWORD PTR [rax+rax*1+0x0]
  403110:	lea    rcx,[rbp-0x1]
  403114:	mov    QWORD PTR [rip+0x1168c5],rcx        # 5199e0 <error@@Base+0x115540>
  40311b:	jmp    403048 <__sprintf_chk@plt+0x1ca8>
  403120:	jne    403031 <__sprintf_chk@plt+0x1c91>
  403126:	lea    r8,[rbp+0x1]
  40312a:	mov    QWORD PTR [rip+0x1168b7],r8        # 5199e8 <error@@Base+0x115548>
  403131:	jmp    403038 <__sprintf_chk@plt+0x1c98>
  403136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403140:	mov    QWORD PTR [r12+0x20],rbp
  403145:	mov    QWORD PTR [r12+0x18],rbp
  40314a:	mov    rsi,rax
  40314d:	lea    rdi,[rip+0x1168ec]        # 519a40 <error@@Base+0x1155a0>
  403154:	xor    eax,eax
  403156:	call   404970 <error@@Base+0x4d0>
  40315b:	jmp    4030cf <__sprintf_chk@plt+0x1d2f>
  403160:	call   401260 <__stack_chk_fail@plt>
  403165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403170:	endbr64 
  403174:	push   r12
  403176:	lea    eax,[rsi-0x2]
  403179:	push   rbp
  40317a:	push   rbx
  40317b:	cmp    ax,0xe
  40317f:	ja     4031dd <__sprintf_chk@plt+0x1e3d>
  403181:	movsx  ebx,si
  403184:	mov    rbp,rdi
  403187:	mov    esi,ebx
  403189:	xor    eax,eax
  40318b:	mov    r12,rdx
  40318e:	call   402ad0 <__sprintf_chk@plt+0x1730>
  403193:	mov    rcx,QWORD PTR [rbp+0x0]
  403197:	test   rcx,rcx
  40319a:	je     4031d8 <__sprintf_chk@plt+0x1e38>
  40319c:	xor    eax,eax
  40319e:	mov    rdx,r12
  4031a1:	mov    esi,ebx
  4031a3:	mov    rdi,rbp
  4031a6:	call   402d90 <__sprintf_chk@plt+0x19f0>
  4031ab:	mov    rax,QWORD PTR [rbp+0x0]
  4031af:	test   rax,rax
  4031b2:	je     4031d8 <__sprintf_chk@plt+0x1e38>
  4031b4:	xor    ecx,ecx
  4031b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031c0:	mov    rdx,QWORD PTR [rax+0x18]
  4031c4:	test   rdx,rdx
  4031c7:	je     4031cf <__sprintf_chk@plt+0x1e2f>
  4031c9:	inc    rcx
  4031cc:	mov    QWORD PTR [rdx],rcx
  4031cf:	mov    rax,QWORD PTR [rax+0x8]
  4031d3:	test   rax,rax
  4031d6:	jne    4031c0 <__sprintf_chk@plt+0x1e20>
  4031d8:	pop    rbx
  4031d9:	pop    rbp
  4031da:	pop    r12
  4031dc:	ret    
  4031dd:	lea    rdi,[rip+0x267c]        # 405860 <error@@Base+0x13c0>
  4031e4:	xor    eax,eax
  4031e6:	call   4044a0 <error@@Base>
  4031eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4031f0:	endbr64 
  4031f4:	push   r15
  4031f6:	push   r14
  4031f8:	push   r13
  4031fa:	push   r12
  4031fc:	mov    r12,rsi
  4031ff:	mov    esi,0x1
  403204:	push   rbp
  403205:	mov    rbp,rdi
  403208:	push   rbx
  403209:	mov    rbx,rcx
  40320c:	sub    rsp,0x58
  403210:	mov    QWORD PTR [rsp+0x20],rdx
  403215:	mov    QWORD PTR [rsp+0x28],rcx
  40321a:	lea    r14,[rsp+0x40]
  40321f:	lea    r13,[rsp+0x38]
  403224:	mov    rax,QWORD PTR fs:0x28
  40322d:	mov    QWORD PTR [rsp+0x48],rax
  403232:	xor    eax,eax
  403234:	call   402ad0 <__sprintf_chk@plt+0x1730>
  403239:	mov    rdx,rbx
  40323c:	mov    esi,0x1
  403241:	mov    rdi,r12
  403244:	xor    eax,eax
  403246:	call   402ad0 <__sprintf_chk@plt+0x1730>
  40324b:	mov    rbx,QWORD PTR [rbp+0x0]
  40324f:	test   rbx,rbx
  403252:	je     40337b <__sprintf_chk@plt+0x1fdb>
  403258:	nop    DWORD PTR [rax+rax*1+0x0]
  403260:	xor    r15d,r15d
  403263:	mov    r10,rbp
  403266:	jmp    40327d <__sprintf_chk@plt+0x1edd>
  403268:	nop    DWORD PTR [rax+rax*1+0x0]
  403270:	mov    rbx,QWORD PTR [rbx+0x8]
  403274:	test   rbx,rbx
  403277:	je     403318 <__sprintf_chk@plt+0x1f78>
  40327d:	cmp    QWORD PTR [rbx+0x18],0x0
  403282:	jne    403270 <__sprintf_chk@plt+0x1ed0>
  403284:	mov    rax,QWORD PTR [rbx+0x10]
  403288:	cmp    QWORD PTR [rax+0x10],r15
  40328c:	jle    403270 <__sprintf_chk@plt+0x1ed0>
  40328e:	mov    rbp,QWORD PTR [r12]
  403292:	test   rbp,rbp
  403295:	jne    4032a9 <__sprintf_chk@plt+0x1f09>
  403297:	jmp    403270 <__sprintf_chk@plt+0x1ed0>
  403299:	nop    DWORD PTR [rax+0x0]
  4032a0:	mov    rbp,QWORD PTR [rbp+0x8]
  4032a4:	test   rbp,rbp
  4032a7:	je     403270 <__sprintf_chk@plt+0x1ed0>
  4032a9:	cmp    QWORD PTR [rbp+0x18],0x0
  4032ae:	jne    4032a0 <__sprintf_chk@plt+0x1f00>
  4032b0:	mov    rax,QWORD PTR [rbp+0x10]
  4032b4:	cmp    QWORD PTR [rax+0x10],r15
  4032b8:	jle    4032a0 <__sprintf_chk@plt+0x1f00>
  4032ba:	mov    rdi,QWORD PTR [rsp+0x20]
  4032bf:	mov    rdx,QWORD PTR [rbx+0x10]
  4032c3:	mov    QWORD PTR [rsp+0x18],r10
  4032c8:	sub    rsp,0x8
  4032cc:	mov    rcx,QWORD PTR [rdx+0x8]
  4032d0:	mov    rsi,QWORD PTR [rdi+0x10]
  4032d4:	push   r14
  4032d6:	mov    rdi,r15
  4032d9:	push   r13
  4032db:	push   QWORD PTR [rax+0x8]
  4032de:	mov    r9,QWORD PTR [rax]
  4032e1:	mov    rax,QWORD PTR [rsp+0x48]
  4032e6:	mov    rdx,QWORD PTR [rdx]
  4032e9:	mov    r8,QWORD PTR [rax+0x10]
  4032ed:	xor    eax,eax
  4032ef:	call   4028a0 <__sprintf_chk@plt+0x1500>
  4032f4:	add    rsp,0x20
  4032f8:	cmp    rax,r15
  4032fb:	mov    r10,QWORD PTR [rsp+0x18]
  403300:	jle    4032a0 <__sprintf_chk@plt+0x1f00>
  403302:	mov    QWORD PTR [rsp+0x10],rbp
  403307:	mov    QWORD PTR [rsp+0x8],rbx
  40330c:	mov    r15,rax
  40330f:	jmp    4032a0 <__sprintf_chk@plt+0x1f00>
  403311:	nop    DWORD PTR [rax+0x0]
  403318:	mov    rbp,r10
  40331b:	test   r15,r15
  40331e:	je     40339a <__sprintf_chk@plt+0x1ffa>
  403320:	mov    esi,0x8
  403325:	mov    edi,0x1
  40332a:	xor    eax,eax
  40332c:	call   4044f0 <error@@Base+0x50>
  403331:	mov    rdx,QWORD PTR [rsp+0x8]
  403336:	mov    rbx,rax
  403339:	mov    r9,rax
  40333c:	mov    r8,r15
  40333f:	mov    rcx,r13
  403342:	mov    esi,0x1
  403347:	mov    rdi,rbp
  40334a:	xor    eax,eax
  40334c:	call   402bb0 <__sprintf_chk@plt+0x1810>
  403351:	mov    rdx,QWORD PTR [rsp+0x10]
  403356:	mov    r9,rbx
  403359:	mov    r8,r15
  40335c:	mov    rcx,r14
  40335f:	mov    esi,0x1
  403364:	mov    rdi,r12
  403367:	xor    eax,eax
  403369:	call   402bb0 <__sprintf_chk@plt+0x1810>
  40336e:	mov    rbx,QWORD PTR [rbp+0x0]
  403372:	test   rbx,rbx
  403375:	jne    403260 <__sprintf_chk@plt+0x1ec0>
  40337b:	mov    rax,QWORD PTR [rsp+0x48]
  403380:	xor    rax,QWORD PTR fs:0x28
  403389:	jne    4033c2 <__sprintf_chk@plt+0x2022>
  40338b:	add    rsp,0x58
  40338f:	pop    rbx
  403390:	pop    rbp
  403391:	pop    r12
  403393:	pop    r13
  403395:	pop    r14
  403397:	pop    r15
  403399:	ret    
  40339a:	mov    rax,QWORD PTR [r10]
  40339d:	test   rax,rax
  4033a0:	je     40337b <__sprintf_chk@plt+0x1fdb>
  4033a2:	nop    WORD PTR [rax+rax*1+0x0]
  4033a8:	mov    rdx,QWORD PTR [rax+0x18]
  4033ac:	test   rdx,rdx
  4033af:	je     4033b7 <__sprintf_chk@plt+0x2017>
  4033b1:	inc    r15
  4033b4:	mov    QWORD PTR [rdx],r15
  4033b7:	mov    rax,QWORD PTR [rax+0x8]
  4033bb:	test   rax,rax
  4033be:	jne    4033a8 <__sprintf_chk@plt+0x2008>
  4033c0:	jmp    40337b <__sprintf_chk@plt+0x1fdb>
  4033c2:	call   401260 <__stack_chk_fail@plt>
  4033c7:	nop    WORD PTR [rax+rax*1+0x0]
  4033d0:	endbr64 
  4033d4:	push   r15
  4033d6:	push   r14
  4033d8:	push   r13
  4033da:	push   r12
  4033dc:	push   rbp
  4033dd:	push   rbx
  4033de:	sub    rsp,0x48
  4033e2:	mov    QWORD PTR [rsp+0x8],rdi
  4033e7:	mov    rax,QWORD PTR fs:0x28
  4033f0:	mov    QWORD PTR [rsp+0x38],rax
  4033f5:	xor    eax,eax
  4033f7:	cmp    QWORD PTR [rsi+0x18],0xffff
  4033ff:	jg     403767 <__sprintf_chk@plt+0x23c7>
  403405:	mov    rdi,QWORD PTR [rsp+0x8]
  40340a:	mov    rbx,rsi
  40340d:	mov    rdx,rsi
  403410:	xor    eax,eax
  403412:	mov    esi,0x2
  403417:	call   402ad0 <__sprintf_chk@plt+0x1730>
  40341c:	mov    rax,QWORD PTR [rbx+0x10]
  403420:	mov    rdx,QWORD PTR [rbx+0x38]
  403424:	mov    QWORD PTR [rip+0x1165e5],rax        # 519a10 <error@@Base+0x115570>
  40342b:	mov    rax,QWORD PTR [rbx+0x30]
  40342f:	mov    rbp,rdx
  403432:	mov    QWORD PTR [rip+0x1165cf],rax        # 519a08 <error@@Base+0x115568>
  403439:	mov    rax,QWORD PTR [rbx+0x18]
  40343d:	mov    QWORD PTR [rip+0x1165b4],rdx        # 5199f8 <error@@Base+0x115558>
  403444:	sub    rbp,rax
  403447:	mov    QWORD PTR [rip+0x1165b2],rax        # 519a00 <error@@Base+0x115560>
  40344e:	neg    rax
  403451:	mov    QWORD PTR [rip+0x116598],rbp        # 5199f0 <error@@Base+0x115550>
  403458:	mov    QWORD PTR [rip+0x116589],rax        # 5199e8 <error@@Base+0x115548>
  40345f:	mov    QWORD PTR [rip+0x11657a],rdx        # 5199e0 <error@@Base+0x115540>
  403466:	mov    rbx,0xffffffffffffffff
  40346d:	cmp    rbp,rax
  403470:	jl     4035c7 <__sprintf_chk@plt+0x2227>
  403476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403480:	mov    esi,0x30
  403485:	mov    edi,0x1
  40348a:	xor    eax,eax
  40348c:	call   4044f0 <error@@Base+0x50>
  403491:	inc    rbx
  403494:	mov    QWORD PTR [rax+0x10],rbx
  403498:	mov    rsi,rax
  40349b:	mov    rbp,rax
  40349e:	lea    rdi,[rip+0x11657b]        # 519a20 <error@@Base+0x115580>
  4034a5:	xor    eax,eax
  4034a7:	call   404970 <error@@Base+0x4d0>
  4034ac:	mov    rax,QWORD PTR [rip+0x116545]        # 5199f8 <error@@Base+0x115558>
  4034b3:	mov    r12,rbx
  4034b6:	neg    r12
  4034b9:	cmp    QWORD PTR [rip+0x116540],rax        # 519a00 <error@@Base+0x115560>
  4034c0:	jg     403690 <__sprintf_chk@plt+0x22f0>
  4034c6:	mov    rax,QWORD PTR [rip+0x116523]        # 5199f0 <error@@Base+0x115550>
  4034cd:	mov    rdx,r12
  4034d0:	cmp    rbx,rax
  4034d3:	mov    r13,rax
  4034d6:	cmovle r13,rbx
  4034da:	cmp    QWORD PTR [rip+0x116507],r12        # 5199e8 <error@@Base+0x115548>
  4034e1:	cmovge rdx,QWORD PTR [rip+0x1164ff]        # 5199e8 <error@@Base+0x115548>
  4034e9:	cmp    r13,rdx
  4034ec:	jl     40351e <__sprintf_chk@plt+0x217e>
  4034ee:	xchg   ax,ax
  4034f0:	xor    eax,eax
  4034f2:	mov    rdi,r13
  4034f5:	mov    rsi,rbp
  4034f8:	call   402fa0 <__sprintf_chk@plt+0x1c00>
  4034fd:	dec    r13
  403500:	mov    rax,r12
  403503:	cmp    QWORD PTR [rip+0x1164de],r12        # 5199e8 <error@@Base+0x115548>
  40350a:	cmovge rax,QWORD PTR [rip+0x1164d6]        # 5199e8 <error@@Base+0x115548>
  403512:	cmp    r13,rax
  403515:	jge    4034f0 <__sprintf_chk@plt+0x2150>
  403517:	mov    rax,QWORD PTR [rip+0x1164d2]        # 5199f0 <error@@Base+0x115550>
  40351e:	lea    r12,[rax+0x1]
  403522:	jmp    403538 <__sprintf_chk@plt+0x2198>
  403524:	nop    DWORD PTR [rax+0x0]
  403528:	mov    rdi,r12
  40352b:	mov    rsi,rbp
  40352e:	xor    eax,eax
  403530:	call   402fa0 <__sprintf_chk@plt+0x1c00>
  403535:	inc    r12
  403538:	cmp    QWORD PTR [rip+0x1164a1],rbx        # 5199e0 <error@@Base+0x115540>
  40353f:	mov    rax,rbx
  403542:	cmovle rax,QWORD PTR [rip+0x116496]        # 5199e0 <error@@Base+0x115540>
  40354a:	cmp    r12,rax
  40354d:	jle    403528 <__sprintf_chk@plt+0x2188>
  40354f:	mov    rdi,QWORD PTR [rip+0x116502]        # 519a58 <error@@Base+0x1155b8>
  403556:	mov    esi,0x2
  40355b:	xor    eax,eax
  40355d:	call   4044f0 <error@@Base+0x50>
  403562:	mov    r15,QWORD PTR [rip+0x1164d7]        # 519a40 <error@@Base+0x1155a0>
  403569:	lea    r13,[rip+0x1164d0]        # 519a40 <error@@Base+0x1155a0>
  403570:	mov    QWORD PTR [rbp+0x28],rax
  403574:	xor    r12d,r12d
  403577:	mov    r14,r13
  40357a:	test   r15,r15
  40357d:	je     4035b0 <__sprintf_chk@plt+0x2210>
  40357f:	nop
  403580:	mov    rsi,r15
  403583:	mov    rdi,r14
  403586:	xor    eax,eax
  403588:	call   404a60 <error@@Base+0x5c0>
  40358d:	movzx  ecx,WORD PTR [r15+0x10]
  403592:	mov    rax,QWORD PTR [rbp+0x28]
  403596:	mov    rdi,r15
  403599:	mov    WORD PTR [rax+r12*1],cx
  40359e:	add    r12,0x2
  4035a2:	call   4011f0 <free@plt>
  4035a7:	mov    r15,QWORD PTR [r13+0x0]
  4035ab:	test   r15,r15
  4035ae:	jne    403580 <__sprintf_chk@plt+0x21e0>
  4035b0:	mov    rax,QWORD PTR [rip+0x116431]        # 5199e8 <error@@Base+0x115548>
  4035b7:	mov    rbp,QWORD PTR [rip+0x116432]        # 5199f0 <error@@Base+0x115550>
  4035be:	cmp    rbp,rax
  4035c1:	jge    403480 <__sprintf_chk@plt+0x20e0>
  4035c7:	mov    rbx,QWORD PTR [rip+0x11645a]        # 519a28 <error@@Base+0x115588>
  4035ce:	lea    r13,[rsp+0x18]
  4035d3:	lea    r14,[rsp+0x20]
  4035d8:	test   rbx,rbx
  4035db:	jne    40361f <__sprintf_chk@plt+0x227f>
  4035dd:	jmp    403720 <__sprintf_chk@plt+0x2380>
  4035e2:	nop    WORD PTR [rax+rax*1+0x0]
  4035e8:	mov    rsi,rbx
  4035eb:	xor    eax,eax
  4035ed:	lea    rdi,[rip+0x11642c]        # 519a20 <error@@Base+0x115580>
  4035f4:	call   404a60 <error@@Base+0x5c0>
  4035f9:	mov    rdi,QWORD PTR [rbx+0x28]
  4035fd:	call   4011f0 <free@plt>
  403602:	mov    rdi,rbx
  403605:	call   4011f0 <free@plt>
  40360a:	mov    rbx,QWORD PTR [rip+0x116417]        # 519a28 <error@@Base+0x115588>
  403611:	mov    rbp,QWORD PTR [rsp+0x18]
  403616:	test   rbx,rbx
  403619:	je     403720 <__sprintf_chk@plt+0x2380>
  40361f:	mov    rax,QWORD PTR [rbx+0x28]
  403623:	mov    rdx,rbp
  403626:	sub    rdx,QWORD PTR [rbx+0x18]
  40362a:	mov    rsi,QWORD PTR [rbx]
  40362d:	movzx  r12d,WORD PTR [rax+rdx*2]
  403632:	mov    rdi,rbp
  403635:	mov    rdx,r13
  403638:	xor    eax,eax
  40363a:	call   402a00 <__sprintf_chk@plt+0x1660>
  40363f:	mov    QWORD PTR [rsp+0x20],rax
  403644:	cmp    r12,rax
  403647:	jle    4035e8 <__sprintf_chk@plt+0x2248>
  403649:	add    rax,rbp
  40364c:	mov    QWORD PTR [rsp+0x28],rax
  403651:	mov    esi,0x8
  403656:	mov    edi,0x1
  40365b:	xor    eax,eax
  40365d:	call   4044f0 <error@@Base+0x50>
  403662:	mov    r9,rax
  403665:	mov    rax,QWORD PTR [rsp+0x8]
  40366a:	mov    r8,r12
  40366d:	mov    rdx,QWORD PTR [rax]
  403670:	mov    rdi,rax
  403673:	sub    r8,QWORD PTR [rsp+0x20]
  403678:	mov    rcx,r14
  40367b:	mov    esi,0x2
  403680:	xor    eax,eax
  403682:	call   402bb0 <__sprintf_chk@plt+0x1810>
  403687:	jmp    4035e8 <__sprintf_chk@plt+0x2248>
  40368c:	nop    DWORD PTR [rax+0x0]
  403690:	mov    r13,QWORD PTR [rip+0x116359]        # 5199f0 <error@@Base+0x115550>
  403697:	mov    rax,rbx
  40369a:	cmp    r12,r13
  40369d:	mov    r14,r13
  4036a0:	cmovge r14,r12
  4036a4:	cmp    QWORD PTR [rip+0x116335],rbx        # 5199e0 <error@@Base+0x115540>
  4036ab:	cmovle rax,QWORD PTR [rip+0x11632d]        # 5199e0 <error@@Base+0x115540>
  4036b3:	cmp    r14,rax
  4036b6:	jg     4036fd <__sprintf_chk@plt+0x235d>
  4036b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4036c0:	xor    eax,eax
  4036c2:	mov    rdi,r14
  4036c5:	mov    rsi,rbp
  4036c8:	call   402fa0 <__sprintf_chk@plt+0x1c00>
  4036cd:	inc    r14
  4036d0:	mov    rax,rbx
  4036d3:	cmp    QWORD PTR [rip+0x116306],rbx        # 5199e0 <error@@Base+0x115540>
  4036da:	cmovle rax,QWORD PTR [rip+0x1162fe]        # 5199e0 <error@@Base+0x115540>
  4036e2:	cmp    r14,rax
  4036e5:	jle    4036c0 <__sprintf_chk@plt+0x2320>
  4036e7:	mov    r13,QWORD PTR [rip+0x116302]        # 5199f0 <error@@Base+0x115550>
  4036ee:	jmp    4036fd <__sprintf_chk@plt+0x235d>
  4036f0:	mov    rsi,rbp
  4036f3:	mov    rdi,r13
  4036f6:	xor    eax,eax
  4036f8:	call   402fa0 <__sprintf_chk@plt+0x1c00>
  4036fd:	dec    r13
  403700:	mov    rax,r12
  403703:	cmp    QWORD PTR [rip+0x1162de],r12        # 5199e8 <error@@Base+0x115548>
  40370a:	cmovge rax,QWORD PTR [rip+0x1162d6]        # 5199e8 <error@@Base+0x115548>
  403712:	cmp    r13,rax
  403715:	jge    4036f0 <__sprintf_chk@plt+0x2350>
  403717:	jmp    40354f <__sprintf_chk@plt+0x21af>
  40371c:	nop    DWORD PTR [rax+0x0]
  403720:	mov    rax,QWORD PTR [rsp+0x8]
  403725:	xor    ecx,ecx
  403727:	mov    rax,QWORD PTR [rax]
  40372a:	test   rax,rax
  40372d:	je     403748 <__sprintf_chk@plt+0x23a8>
  40372f:	nop
  403730:	mov    rdx,QWORD PTR [rax+0x18]
  403734:	test   rdx,rdx
  403737:	je     40373f <__sprintf_chk@plt+0x239f>
  403739:	inc    rcx
  40373c:	mov    QWORD PTR [rdx],rcx
  40373f:	mov    rax,QWORD PTR [rax+0x8]
  403743:	test   rax,rax
  403746:	jne    403730 <__sprintf_chk@plt+0x2390>
  403748:	mov    rax,QWORD PTR [rsp+0x38]
  40374d:	xor    rax,QWORD PTR fs:0x28
  403756:	jne    403773 <__sprintf_chk@plt+0x23d3>
  403758:	add    rsp,0x48
  40375c:	pop    rbx
  40375d:	pop    rbp
  40375e:	pop    r12
  403760:	pop    r13
  403762:	pop    r14
  403764:	pop    r15
  403766:	ret    
  403767:	lea    rdi,[rip+0x2111]        # 40587f <error@@Base+0x13df>
  40376e:	call   4044a0 <error@@Base>
  403773:	call   401260 <__stack_chk_fail@plt>
  403778:	nop    DWORD PTR [rax+rax*1+0x0]
  403780:	endbr64 
  403784:	push   r12
  403786:	mov    r12,rdi
  403789:	push   rbp
  40378a:	lea    rbp,[rdi+0x3ee0]
  403791:	push   rbx
  403792:	mov    rbx,rdi
  403795:	nop    DWORD PTR [rax]
  403798:	mov    rdi,rbx
  40379b:	xor    eax,eax
  40379d:	add    rbx,0x20
  4037a1:	call   4048f0 <error@@Base+0x450>
  4037a6:	cmp    rbx,rbp
  4037a9:	jne    403798 <__sprintf_chk@plt+0x23f8>
  4037ab:	pop    rbx
  4037ac:	pop    rbp
  4037ad:	mov    QWORD PTR [r12+0x3ee0],0x0
  4037b9:	mov    QWORD PTR [r12+0x3ee8],0x0
  4037c5:	pop    r12
  4037c7:	ret    
  4037c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037d0:	endbr64 
  4037d4:	push   rbp
  4037d5:	mov    rbp,rsi
  4037d8:	push   rbx
  4037d9:	sub    rsp,0x8
  4037dd:	movzx  eax,BYTE PTR [rsi]
  4037e0:	test   al,al
  4037e2:	je     403858 <__sprintf_chk@plt+0x24b8>
  4037e4:	lea    rdx,[rsi+0x1]
  4037e8:	xor    ecx,ecx
  4037ea:	nop    WORD PTR [rax+rax*1+0x0]
  4037f0:	inc    rdx
  4037f3:	add    rcx,rax
  4037f6:	movzx  eax,BYTE PTR [rdx-0x1]
  4037fa:	test   al,al
  4037fc:	jne    4037f0 <__sprintf_chk@plt+0x2450>
  4037fe:	mov    rax,rcx
  403801:	movabs rdx,0x824a4e60b3262bc5
  40380b:	mul    rdx
  40380e:	shr    rdx,0x8
  403812:	imul   rdx,rdx,0x1f7
  403819:	sub    ecx,edx
  40381b:	movsxd rcx,ecx
  40381e:	shl    rcx,0x5
  403822:	mov    rbx,QWORD PTR [rdi+rcx*1]
  403826:	test   rbx,rbx
  403829:	jne    403839 <__sprintf_chk@plt+0x2499>
  40382b:	jmp    403849 <__sprintf_chk@plt+0x24a9>
  40382d:	nop    DWORD PTR [rax]
  403830:	mov    rbx,QWORD PTR [rbx+0x8]
  403834:	test   rbx,rbx
  403837:	je     403849 <__sprintf_chk@plt+0x24a9>
  403839:	mov    rsi,QWORD PTR [rbx+0x10]
  40383d:	mov    rdi,rbp
  403840:	call   4012d0 <strcmp@plt>
  403845:	test   eax,eax
  403847:	jne    403830 <__sprintf_chk@plt+0x2490>
  403849:	add    rsp,0x8
  40384d:	mov    rax,rbx
  403850:	pop    rbx
  403851:	pop    rbp
  403852:	ret    
  403853:	nop    DWORD PTR [rax+rax*1+0x0]
  403858:	xor    ecx,ecx
  40385a:	jmp    40381b <__sprintf_chk@plt+0x247b>
  40385c:	nop    DWORD PTR [rax+0x0]
  403860:	endbr64 
  403864:	push   rbx
  403865:	mov    rdx,QWORD PTR [rsi+0x10]
  403869:	mov    rbx,rdi
  40386c:	movzx  eax,BYTE PTR [rdx]
  40386f:	test   al,al
  403871:	je     4038b3 <__sprintf_chk@plt+0x2513>
  403873:	inc    rdx
  403876:	xor    edi,edi
  403878:	nop    DWORD PTR [rax+rax*1+0x0]
  403880:	inc    rdx
  403883:	add    rdi,rax
  403886:	movzx  eax,BYTE PTR [rdx-0x1]
  40388a:	test   al,al
  40388c:	jne    403880 <__sprintf_chk@plt+0x24e0>
  40388e:	mov    rax,rdi
  403891:	movabs rdx,0x824a4e60b3262bc5
  40389b:	mul    rdx
  40389e:	shr    rdx,0x8
  4038a2:	imul   rdx,rdx,0x1f7
  4038a9:	sub    rdi,rdx
  4038ac:	shl    rdi,0x5
  4038b0:	add    rdi,rbx
  4038b3:	xor    eax,eax
  4038b5:	call   404920 <error@@Base+0x480>
  4038ba:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  4038c1:	test   rdi,rdi
  4038c4:	je     4038d6 <__sprintf_chk@plt+0x2536>
  4038c6:	call   4011f0 <free@plt>
  4038cb:	mov    QWORD PTR [rbx+0x3ee0],0x0
  4038d6:	inc    QWORD PTR [rbx+0x3ee8]
  4038dd:	pop    rbx
  4038de:	ret    
  4038df:	nop
  4038e0:	endbr64 
  4038e4:	push   rbx
  4038e5:	mov    rdx,QWORD PTR [rsi+0x10]
  4038e9:	mov    rbx,rdi
  4038ec:	movzx  eax,BYTE PTR [rdx]
  4038ef:	test   al,al
  4038f1:	je     403933 <__sprintf_chk@plt+0x2593>
  4038f3:	inc    rdx
  4038f6:	xor    edi,edi
  4038f8:	nop    DWORD PTR [rax+rax*1+0x0]
  403900:	inc    rdx
  403903:	add    rdi,rax
  403906:	movzx  eax,BYTE PTR [rdx-0x1]
  40390a:	test   al,al
  40390c:	jne    403900 <__sprintf_chk@plt+0x2560>
  40390e:	mov    rax,rdi
  403911:	movabs rdx,0x824a4e60b3262bc5
  40391b:	mul    rdx
  40391e:	shr    rdx,0x8
  403922:	imul   rdx,rdx,0x1f7
  403929:	sub    rdi,rdx
  40392c:	shl    rdi,0x5
  403930:	add    rdi,rbx
  403933:	xor    eax,eax
  403935:	call   404a60 <error@@Base+0x5c0>
  40393a:	mov    rdi,QWORD PTR [rbx+0x3ee0]
  403941:	test   rdi,rdi
  403944:	je     403956 <__sprintf_chk@plt+0x25b6>
  403946:	call   4011f0 <free@plt>
  40394b:	mov    QWORD PTR [rbx+0x3ee0],0x0
  403956:	dec    QWORD PTR [rbx+0x3ee8]
  40395d:	pop    rbx
  40395e:	ret    
  40395f:	nop
  403960:	endbr64 
  403964:	cmp    QWORD PTR [rdi+0x3ee0],0x0
  40396c:	je     40396f <__sprintf_chk@plt+0x25cf>
  40396e:	ret    
  40396f:	mov    rax,QWORD PTR [rdi+0x3ee8]
  403976:	test   rax,rax
  403979:	je     40396e <__sprintf_chk@plt+0x25ce>
  40397b:	push   rbx
  40397c:	mov    esi,0x8
  403981:	mov    rbx,rdi
  403984:	mov    rdi,rax
  403987:	xor    eax,eax
  403989:	call   4044f0 <error@@Base+0x50>
  40398e:	mov    QWORD PTR [rbx+0x3ee0],rax
  403995:	mov    rsi,rbx
  403998:	lea    rdi,[rbx+0x3ee0]
  40399f:	xor    ecx,ecx
  4039a1:	nop    DWORD PTR [rax+0x0]
  4039a8:	mov    rdx,QWORD PTR [rsi]
  4039ab:	test   rdx,rdx
  4039ae:	je     4039c1 <__sprintf_chk@plt+0x2621>
  4039b0:	inc    rcx
  4039b3:	mov    QWORD PTR [rax+rcx*8-0x8],rdx
  4039b8:	mov    rdx,QWORD PTR [rdx+0x8]
  4039bc:	test   rdx,rdx
  4039bf:	jne    4039b0 <__sprintf_chk@plt+0x2610>
  4039c1:	add    rsi,0x20
  4039c5:	cmp    rsi,rdi
  4039c8:	jne    4039a8 <__sprintf_chk@plt+0x2608>
  4039ca:	pop    rbx
  4039cb:	ret    
  4039cc:	nop    DWORD PTR [rax+0x0]
  4039d0:	endbr64 
  4039d4:	push   r13
  4039d6:	mov    r13,rdi
  4039d9:	push   r12
  4039db:	mov    r12,rsi
  4039de:	push   rbp
  4039df:	lea    rbp,[rdi+0x3ee0]
  4039e6:	push   rbx
  4039e7:	mov    rbx,rdi
  4039ea:	sub    rsp,0x8
  4039ee:	xchg   ax,ax
  4039f0:	mov    rdi,rbx
  4039f3:	mov    rsi,r12
  4039f6:	xor    eax,eax
  4039f8:	add    rbx,0x20
  4039fc:	call   404b20 <error@@Base+0x680>
  403a01:	cmp    rbx,rbp
  403a04:	jne    4039f0 <__sprintf_chk@plt+0x2650>
  403a06:	mov    rdi,QWORD PTR [r13+0x3ee0]
  403a0d:	test   rdi,rdi
  403a10:	je     403a22 <__sprintf_chk@plt+0x2682>
  403a12:	call   4011f0 <free@plt>
  403a17:	mov    QWORD PTR [r13+0x3ee0],0x0
  403a22:	mov    QWORD PTR [r13+0x3ee8],0x0
  403a2d:	add    rsp,0x8
  403a31:	pop    rbx
  403a32:	pop    rbp
  403a33:	pop    r12
  403a35:	pop    r13
  403a37:	ret    
  403a38:	nop    DWORD PTR [rax+rax*1+0x0]
  403a40:	endbr64 
  403a44:	push   r12
  403a46:	xor    eax,eax
  403a48:	mov    r12d,esi
  403a4b:	push   rbp
  403a4c:	mov    esi,0x18
  403a51:	mov    ebp,edx
  403a53:	push   rbx
  403a54:	mov    rbx,rdi
  403a57:	mov    edi,0x1
  403a5c:	call   4044f0 <error@@Base+0x50>
  403a61:	mov    BYTE PTR [rax+0x10],r12b
  403a65:	mov    DWORD PTR [rax+0x14],ebp
  403a68:	mov    rdi,rbx
  403a6b:	mov    rsi,rax
  403a6e:	pop    rbx
  403a6f:	pop    rbp
  403a70:	xor    eax,eax
  403a72:	pop    r12
  403a74:	jmp    404970 <error@@Base+0x4d0>
  403a79:	nop    DWORD PTR [rax+0x0]
  403a80:	endbr64 
  403a84:	push   r15
  403a86:	push   r14
  403a88:	push   r13
  403a8a:	push   r12
  403a8c:	push   rbp
  403a8d:	push   rbx
  403a8e:	sub    rsp,0xb8
  403a95:	mov    QWORD PTR [rsp+0x8],rdi
  403a9a:	mov    QWORD PTR [rsp+0x20],rdx
  403a9f:	mov    rdi,rsi
  403aa2:	mov    rsi,QWORD PTR fs:0x28
  403aab:	mov    QWORD PTR [rsp+0xa8],rsi
  403ab3:	xor    esi,esi
  403ab5:	cmp    BYTE PTR [rdx],0x0
  403ab8:	je     403ac3 <__sprintf_chk@plt+0x2723>
  403aba:	test   rdi,rdi
  403abd:	je     403e55 <__sprintf_chk@plt+0x2ab5>
  403ac3:	mov    rax,QWORD PTR [rsp+0x8]
  403ac8:	lea    rsi,[rip+0x1df8]        # 4058c7 <error@@Base+0x1427>
  403acf:	mov    rax,QWORD PTR [rax+0x8]
  403ad3:	mov    QWORD PTR [rsp+0x28],rax
  403ad8:	xor    eax,eax
  403ada:	call   4045a0 <error@@Base+0x100>
  403adf:	mov    r12,rax
  403ae2:	mov    rax,QWORD PTR [rsp+0x20]
  403ae7:	cmp    BYTE PTR [rax],0x0
  403aea:	jne    403d98 <__sprintf_chk@plt+0x29f8>
  403af0:	mov    rsi,QWORD PTR [rsp+0x20]
  403af5:	mov    eax,0x5e
  403afa:	mov    ecx,DWORD PTR [rsi+0x4]
  403afd:	mov    rdi,r12
  403b00:	test   ecx,ecx
  403b02:	cmovne eax,ecx
  403b05:	movzx  r15d,BYTE PTR [rsi+0x1]
  403b0a:	mov    DWORD PTR [rsp+0x14],eax
  403b0e:	call   401390 <getc@plt>
  403b13:	cmp    eax,0xffffffff
  403b16:	je     403c07 <__sprintf_chk@plt+0x2867>
  403b1c:	mov    rsi,QWORD PTR [rip+0x54cd]        # 408ff0 <error@@Base+0x4b50>
  403b23:	movsxd rdx,eax
  403b26:	movsx  rcx,BYTE PTR [rsi+rdx*1]
  403b2b:	mov    rbx,rcx
  403b2e:	test   rcx,rcx
  403b31:	jle    403e82 <__sprintf_chk@plt+0x2ae2>
  403b37:	lea    rsi,[rsp+0x3c]
  403b3c:	xor    ebp,ebp
  403b3e:	lea    r13,[rsp+0x40]
  403b43:	mov    QWORD PTR [rsp+0x18],rsi
  403b48:	jmp    403b8e <__sprintf_chk@plt+0x27ee>
  403b4a:	nop    WORD PTR [rax+rax*1+0x0]
  403b50:	mov    rdi,QWORD PTR [rsp+0x8]
  403b55:	movsx  esi,bpl
  403b59:	xor    eax,eax
  403b5b:	call   403a40 <__sprintf_chk@plt+0x26a0>
  403b60:	mov    rdi,r12
  403b63:	xor    ebp,ebp
  403b65:	call   401390 <getc@plt>
  403b6a:	cmp    eax,0xffffffff
  403b6d:	je     403c07 <__sprintf_chk@plt+0x2867>
  403b73:	mov    rcx,QWORD PTR [rip+0x5476]        # 408ff0 <error@@Base+0x4b50>
  403b7a:	movsxd rdx,eax
  403b7d:	movsx  rcx,BYTE PTR [rcx+rdx*1]
  403b82:	mov    rbx,rcx
  403b85:	test   rcx,rcx
  403b88:	jle    403e82 <__sprintf_chk@plt+0x2ae2>
  403b8e:	mov    BYTE PTR [rsp+0x40],al
  403b92:	cmp    rcx,0x1
  403b96:	je     403bc0 <__sprintf_chk@plt+0x2820>
  403b98:	lea    r14,[rcx-0x1]
  403b9c:	lea    rdi,[r13+0x1]
  403ba0:	mov    r8,r12
  403ba3:	mov    rcx,r14
  403ba6:	mov    edx,0x1
  403bab:	mov    esi,0x3
  403bb0:	call   401320 <__fread_chk@plt>
  403bb5:	cdqe   
  403bb7:	cmp    r14,rax
  403bba:	jne    403e90 <__sprintf_chk@plt+0x2af0>
  403bc0:	mov    rdx,QWORD PTR [rsp+0x18]
  403bc5:	mov    esi,0x4
  403bca:	mov    rdi,r13
  403bcd:	call   4012b0 <utf8proc_iterate@plt>
  403bd2:	cmp    eax,ebx
  403bd4:	jne    403e70 <__sprintf_chk@plt+0x2ad0>
  403bda:	mov    edx,DWORD PTR [rsp+0x3c]
  403bde:	test   r15b,r15b
  403be1:	je     403b50 <__sprintf_chk@plt+0x27b0>
  403be7:	cmp    DWORD PTR [rsp+0x14],edx
  403beb:	jne    403b50 <__sprintf_chk@plt+0x27b0>
  403bf1:	mov    rdi,r12
  403bf4:	mov    ebp,0x1
  403bf9:	call   401390 <getc@plt>
  403bfe:	cmp    eax,0xffffffff
  403c01:	jne    403b73 <__sprintf_chk@plt+0x27d3>
  403c07:	xor    eax,eax
  403c09:	mov    rdi,r12
  403c0c:	call   404310 <__sprintf_chk@plt+0x2f70>
  403c11:	mov    rax,QWORD PTR [rsp+0x20]
  403c16:	cmp    BYTE PTR [rax+0x9],0x0
  403c1a:	je     403d20 <__sprintf_chk@plt+0x2980>
  403c20:	mov    rax,QWORD PTR [rsp+0x28]
  403c25:	test   rax,rax
  403c28:	je     403e48 <__sprintf_chk@plt+0x2aa8>
  403c2e:	mov    rbp,QWORD PTR [rax+0x8]
  403c32:	test   rbp,rbp
  403c35:	je     403d20 <__sprintf_chk@plt+0x2980>
  403c3b:	mov    r12,rbp
  403c3e:	jmp    403c4a <__sprintf_chk@plt+0x28aa>
  403c40:	mov    r12,QWORD PTR [r12+0x8]
  403c45:	test   r12,r12
  403c48:	je     403c93 <__sprintf_chk@plt+0x28f3>
  403c4a:	mov    ebx,DWORD PTR [r12+0x14]
  403c4f:	mov    edi,ebx
  403c51:	call   401210 <utf8proc_get_property@plt>
  403c56:	cmp    ebx,0xd
  403c59:	ja     403d80 <__sprintf_chk@plt+0x29e0>
  403c5f:	cmp    ebx,0xb
  403c62:	jae    403c80 <__sprintf_chk@plt+0x28e0>
  403c64:	cmp    ebx,0x9
  403c67:	je     403c80 <__sprintf_chk@plt+0x28e0>
  403c69:	cmp    ebx,0xa
  403c6c:	je     403c40 <__sprintf_chk@plt+0x28a0>
  403c6e:	movsx  eax,WORD PTR [rax]
  403c71:	sub    eax,0x17
  403c74:	cmp    eax,0x2
  403c77:	ja     403c40 <__sprintf_chk@plt+0x28a0>
  403c79:	nop    DWORD PTR [rax+0x0]
  403c80:	mov    DWORD PTR [r12+0x14],0x20
  403c89:	mov    r12,QWORD PTR [r12+0x8]
  403c8e:	test   r12,r12
  403c91:	jne    403c4a <__sprintf_chk@plt+0x28aa>
  403c93:	mov    r13,QWORD PTR [rsp+0x8]
  403c98:	jmp    403cb9 <__sprintf_chk@plt+0x2919>
  403c9a:	nop    WORD PTR [rax+rax*1+0x0]
  403ca0:	test   r12b,r12b
  403ca3:	jne    403caa <__sprintf_chk@plt+0x290a>
  403ca5:	cmp    eax,0xa
  403ca8:	je     403d00 <__sprintf_chk@plt+0x2960>
  403caa:	cmp    eax,0xa
  403cad:	setne  r12b
  403cb1:	mov    rbp,rbx
  403cb4:	test   rbx,rbx
  403cb7:	je     403d20 <__sprintf_chk@plt+0x2980>
  403cb9:	mov    eax,DWORD PTR [rbp+0x14]
  403cbc:	mov    rbx,QWORD PTR [rbp+0x8]
  403cc0:	cmp    eax,0x20
  403cc3:	jne    403ca0 <__sprintf_chk@plt+0x2900>
  403cc5:	test   r12b,r12b
  403cc8:	je     403ce0 <__sprintf_chk@plt+0x2940>
  403cca:	test   rbx,rbx
  403ccd:	je     403ce0 <__sprintf_chk@plt+0x2940>
  403ccf:	mov    edx,DWORD PTR [rbx+0x14]
  403cd2:	cmp    edx,0x20
  403cd5:	je     403ce0 <__sprintf_chk@plt+0x2940>
  403cd7:	cmp    edx,0xa
  403cda:	jne    403caa <__sprintf_chk@plt+0x290a>
  403cdc:	nop    DWORD PTR [rax+0x0]
  403ce0:	test   rbx,rbx
  403ce3:	je     403d00 <__sprintf_chk@plt+0x2960>
  403ce5:	test   r12b,r12b
  403ce8:	je     403d00 <__sprintf_chk@plt+0x2960>
  403cea:	cmp    DWORD PTR [rbx+0x14],0x20
  403cee:	jne    403d00 <__sprintf_chk@plt+0x2960>
  403cf0:	movzx  eax,BYTE PTR [rbp+0x10]
  403cf4:	or     BYTE PTR [rbx+0x10],al
  403cf7:	nop    WORD PTR [rax+rax*1+0x0]
  403d00:	mov    rsi,rbp
  403d03:	mov    rdi,r13
  403d06:	xor    eax,eax
  403d08:	call   404a60 <error@@Base+0x5c0>
  403d0d:	mov    rdi,rbp
  403d10:	call   4011f0 <free@plt>
  403d15:	mov    rbp,rbx
  403d18:	test   rbx,rbx
  403d1b:	jne    403cb9 <__sprintf_chk@plt+0x2919>
  403d1d:	nop    DWORD PTR [rax]
  403d20:	mov    rax,QWORD PTR [rsp+0x20]
  403d25:	cmp    BYTE PTR [rax+0xa],0x0
  403d29:	je     403d54 <__sprintf_chk@plt+0x29b4>
  403d2b:	mov    rax,QWORD PTR [rsp+0x28]
  403d30:	test   rax,rax
  403d33:	je     403e38 <__sprintf_chk@plt+0x2a98>
  403d39:	mov    rbx,QWORD PTR [rax+0x8]
  403d3d:	jmp    403d4f <__sprintf_chk@plt+0x29af>
  403d3f:	nop
  403d40:	mov    edi,DWORD PTR [rbx+0x14]
  403d43:	call   401280 <utf8proc_tolower@plt>
  403d48:	mov    DWORD PTR [rbx+0x14],eax
  403d4b:	mov    rbx,QWORD PTR [rbx+0x8]
  403d4f:	test   rbx,rbx
  403d52:	jne    403d40 <__sprintf_chk@plt+0x29a0>
  403d54:	mov    rax,QWORD PTR [rsp+0xa8]
  403d5c:	xor    rax,QWORD PTR fs:0x28
  403d65:	jne    403e9e <__sprintf_chk@plt+0x2afe>
  403d6b:	add    rsp,0xb8
  403d72:	pop    rbx
  403d73:	pop    rbp
  403d74:	pop    r12
  403d76:	pop    r13
  403d78:	pop    r14
  403d7a:	pop    r15
  403d7c:	ret    
  403d7d:	nop    DWORD PTR [rax]
  403d80:	cmp    ebx,0xa0
  403d86:	jne    403c6e <__sprintf_chk@plt+0x28ce>
  403d8c:	jmp    403c80 <__sprintf_chk@plt+0x28e0>
  403d91:	nop    DWORD PTR [rax+0x0]
  403d98:	lea    r13,[rsp+0x40]
  403d9d:	mov    rdx,r12
  403da0:	mov    esi,0x63
  403da5:	mov    rdi,r13
  403da8:	call   4012a0 <fgets@plt>
  403dad:	test   rax,rax
  403db0:	je     403dcc <__sprintf_chk@plt+0x2a2c>
  403db2:	mov    ecx,0x33
  403db7:	lea    rdi,[rip+0x1b52]        # 405910 <error@@Base+0x1470>
  403dbe:	mov    rsi,r13
  403dc1:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403dc3:	seta   al
  403dc6:	sbb    al,0x0
  403dc8:	test   al,al
  403dca:	je     403de8 <__sprintf_chk@plt+0x2a48>
  403dcc:	mov    rdi,r12
  403dcf:	call   401270 <rewind@plt>
  403dd4:	xor    eax,eax
  403dd6:	mov    rsi,QWORD PTR [rsp+0x20]
  403ddb:	mov    BYTE PTR [rsi+0xb],al
  403dde:	jmp    403af0 <__sprintf_chk@plt+0x2750>
  403de3:	nop    DWORD PTR [rax+rax*1+0x0]
  403de8:	xor    ebx,ebx
  403dea:	lea    rbp,[rip+0x1b57]        # 405948 <error@@Base+0x14a8>
  403df1:	nop    DWORD PTR [rax+0x0]
  403df8:	mov    rdx,r12
  403dfb:	mov    esi,0x63
  403e00:	mov    rdi,r13
  403e03:	call   4012a0 <fgets@plt>
  403e08:	test   rax,rax
  403e0b:	je     403e2b <__sprintf_chk@plt+0x2a8b>
  403e0d:	mov    ecx,0x38
  403e12:	mov    rsi,r13
  403e15:	mov    rdi,rbp
  403e18:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  403e1a:	seta   al
  403e1d:	sbb    al,0x0
  403e1f:	test   al,al
  403e21:	jne    403df8 <__sprintf_chk@plt+0x2a58>
  403e23:	inc    ebx
  403e25:	cmp    bx,0x2
  403e29:	jne    403df8 <__sprintf_chk@plt+0x2a58>
  403e2b:	mov    eax,0x1
  403e30:	jmp    403dd6 <__sprintf_chk@plt+0x2a36>
  403e32:	nop    WORD PTR [rax+rax*1+0x0]
  403e38:	mov    rax,QWORD PTR [rsp+0x8]
  403e3d:	mov    rbx,QWORD PTR [rax]
  403e40:	jmp    403d4f <__sprintf_chk@plt+0x29af>
  403e45:	nop    DWORD PTR [rax]
  403e48:	mov    rax,QWORD PTR [rsp+0x8]
  403e4d:	mov    rbp,QWORD PTR [rax]
  403e50:	jmp    403c32 <__sprintf_chk@plt+0x2892>
  403e55:	lea    rsi,[rip+0x1a3b]        # 405897 <error@@Base+0x13f7>
  403e5c:	lea    rdi,[rip+0x1a3e]        # 4058a1 <error@@Base+0x1401>
  403e63:	xor    eax,eax
  403e65:	call   404550 <error@@Base+0xb0>
  403e6a:	nop    WORD PTR [rax+rax*1+0x0]
  403e70:	movsxd rdi,eax
  403e73:	call   401370 <utf8proc_errmsg@plt>
  403e78:	mov    rdi,rax
  403e7b:	xor    eax,eax
  403e7d:	call   4044a0 <error@@Base>
  403e82:	lea    rdi,[rip+0x1a28]        # 4058b1 <error@@Base+0x1411>
  403e89:	xor    eax,eax
  403e8b:	call   4044a0 <error@@Base>
  403e90:	lea    rdi,[rip+0x1a32]        # 4058c9 <error@@Base+0x1429>
  403e97:	xor    eax,eax
  403e99:	call   4044a0 <error@@Base>
  403e9e:	call   401260 <__stack_chk_fail@plt>
  403ea3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403eae:	xchg   ax,ax
  403eb0:	endbr64 
  403eb4:	sub    rsp,0x8
  403eb8:	call   401220 <utf8proc_encode_char@plt>
  403ebd:	test   rax,rax
  403ec0:	jle    403ec7 <__sprintf_chk@plt+0x2b27>
  403ec2:	add    rsp,0x8
  403ec6:	ret    
  403ec7:	lea    rdi,[rip+0x1a13]        # 4058e1 <error@@Base+0x1441>
  403ece:	xor    eax,eax
  403ed0:	call   4044a0 <error@@Base>
  403ed5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  403ee0:	endbr64 
  403ee4:	push   r13
  403ee6:	xor    r13d,r13d
  403ee9:	push   r12
  403eeb:	mov    r12,rdx
  403eee:	push   rbp
  403eef:	mov    ebp,esi
  403ef1:	push   rbx
  403ef2:	mov    rbx,rdx
  403ef5:	sub    rsp,0x18
  403ef9:	test   dil,dil
  403efc:	jne    403ff8 <__sprintf_chk@plt+0x2c58>
  403f02:	cmp    ebp,0xa
  403f05:	jne    403f40 <__sprintf_chk@plt+0x2ba0>
  403f07:	test   cl,cl
  403f09:	lea    rax,[rip+0x11cc]        # 4050dc <error@@Base+0xc3c>
  403f10:	lea    rcx,[rip+0x19e1]        # 4058f8 <error@@Base+0x1458>
  403f17:	cmove  rcx,rax
  403f1b:	add    rsp,0x18
  403f1f:	mov    rdi,rbx
  403f22:	pop    rbx
  403f23:	pop    rbp
  403f24:	pop    r12
  403f26:	mov    rdx,0xffffffffffffffff
  403f2d:	mov    esi,0x1
  403f32:	xor    eax,eax
  403f34:	pop    r13
  403f36:	jmp    4013a0 <__sprintf_chk@plt>
  403f3b:	nop    DWORD PTR [rax+rax*1+0x0]
  403f40:	mov    edi,ebp
  403f42:	call   401210 <utf8proc_get_property@plt>
  403f47:	cmp    ebp,0x20
  403f4a:	je     403f66 <__sprintf_chk@plt+0x2bc6>
  403f4c:	movzx  eax,WORD PTR [rax]
  403f4f:	cmp    ax,0x1d
  403f53:	ja     403fb8 <__sprintf_chk@plt+0x2c18>
  403f55:	mov    edx,0x1
  403f5a:	shlx   rax,rdx,rax
  403f5f:	test   eax,0x207ffffe
  403f64:	je     403fb8 <__sprintf_chk@plt+0x2c18>
  403f66:	mov    edi,ebp
  403f68:	call   4012f0 <utf8proc_category@plt>
  403f6d:	sub    eax,0x6
  403f70:	cmp    eax,0x2
  403f73:	ja     403f90 <__sprintf_chk@plt+0x2bf0>
  403f75:	mov    rsi,rbx
  403f78:	mov    edi,0x25cc
  403f7d:	xor    eax,eax
  403f7f:	call   403eb0 <__sprintf_chk@plt+0x2b10>
  403f84:	cbw    
  403f86:	add    r13d,eax
  403f89:	movsx  rbx,r13w
  403f8d:	add    rbx,r12
  403f90:	mov    rsi,rbx
  403f93:	mov    edi,ebp
  403f95:	xor    eax,eax
  403f97:	call   403eb0 <__sprintf_chk@plt+0x2b10>
  403f9c:	cbw    
  403f9e:	add    r13d,eax
  403fa1:	movsx  r13,r13w
  403fa5:	mov    BYTE PTR [r12+r13*1],0x0
  403faa:	add    rsp,0x18
  403fae:	pop    rbx
  403faf:	pop    rbp
  403fb0:	pop    r12
  403fb2:	pop    r13
  403fb4:	ret    
  403fb5:	nop    DWORD PTR [rax]
  403fb8:	mov    r8d,ebp
  403fbb:	lea    rcx,[rip+0x193b]        # 4058fd <error@@Base+0x145d>
  403fc2:	cmp    ebp,0xff
  403fc8:	jbe    403fd1 <__sprintf_chk@plt+0x2c31>
  403fca:	lea    rcx,[rip+0x1933]        # 405904 <error@@Base+0x1464>
  403fd1:	add    rsp,0x18
  403fd5:	mov    rdi,rbx
  403fd8:	pop    rbx
  403fd9:	pop    rbp
  403fda:	pop    r12
  403fdc:	mov    rdx,0xffffffffffffffff
  403fe3:	mov    esi,0x1
  403fe8:	xor    eax,eax
  403fea:	pop    r13
  403fec:	jmp    4013a0 <__sprintf_chk@plt>
  403ff1:	nop    DWORD PTR [rax+0x0]
  403ff8:	mov    rsi,rdx
  403ffb:	mov    edi,0x5e
  404000:	xor    eax,eax
  404002:	mov    DWORD PTR [rsp+0xc],ecx
  404006:	call   403eb0 <__sprintf_chk@plt+0x2b10>
  40400b:	movsx  r13w,al
  404010:	movsx  rax,al
  404014:	lea    rbx,[r12+rax*1]
  404018:	mov    ecx,DWORD PTR [rsp+0xc]
  40401c:	jmp    403f02 <__sprintf_chk@plt+0x2b62>
  404021:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40402c:	nop    DWORD PTR [rax+0x0]
  404030:	endbr64 
  404034:	push   r12
  404036:	push   rbp
  404037:	mov    rbp,rdi
  40403a:	mov    rdi,rsi
  40403d:	push   rbx
  40403e:	lea    rsi,[rip+0x1403]        # 405448 <error@@Base+0xfa8>
  404045:	mov    rbx,rdx
  404048:	sub    rsp,0x20
  40404c:	mov    rax,QWORD PTR fs:0x28
  404055:	mov    QWORD PTR [rsp+0x18],rax
  40405a:	xor    eax,eax
  40405c:	call   4045a0 <error@@Base+0x100>
  404061:	mov    r12,rax
  404064:	test   rbx,rbx
  404067:	je     4040bb <__sprintf_chk@plt+0x2d1b>
  404069:	mov    rcx,rax
  40406c:	mov    edx,0x37
  404071:	mov    esi,0x1
  404076:	lea    rdi,[rip+0x1893]        # 405910 <error@@Base+0x1470>
  40407d:	call   401350 <fwrite@plt>
  404082:	mov    rcx,r12
  404085:	mov    edx,0x37
  40408a:	mov    esi,0x1
  40408f:	lea    rdi,[rip+0x18b2]        # 405948 <error@@Base+0x14a8>
  404096:	call   401350 <fwrite@plt>
  40409b:	mov    rdi,r12
  40409e:	xor    eax,eax
  4040a0:	call   rbx
  4040a2:	mov    rcx,r12
  4040a5:	mov    edx,0x37
  4040aa:	mov    esi,0x1
  4040af:	lea    rdi,[rip+0x1892]        # 405948 <error@@Base+0x14a8>
  4040b6:	call   401350 <fwrite@plt>
  4040bb:	mov    rbx,QWORD PTR [rbp+0x0]
  4040bf:	test   rbx,rbx
  4040c2:	je     4040f7 <__sprintf_chk@plt+0x2d57>
  4040c4:	lea    rbp,[rsp+0xf]
  4040c9:	nop    DWORD PTR [rax+0x0]
  4040d0:	mov    esi,DWORD PTR [rbx+0x14]
  4040d3:	movsx  edi,BYTE PTR [rbx+0x10]
  4040d7:	xor    ecx,ecx
  4040d9:	mov    rdx,rbp
  4040dc:	xor    eax,eax
  4040de:	call   403ee0 <__sprintf_chk@plt+0x2b40>
  4040e3:	mov    rsi,r12
  4040e6:	mov    rdi,rbp
  4040e9:	call   401290 <fputs@plt>
  4040ee:	mov    rbx,QWORD PTR [rbx+0x8]
  4040f2:	test   rbx,rbx
  4040f5:	jne    4040d0 <__sprintf_chk@plt+0x2d30>
  4040f7:	xor    eax,eax
  4040f9:	mov    rdi,r12
  4040fc:	call   404310 <__sprintf_chk@plt+0x2f70>
  404101:	mov    rax,QWORD PTR [rsp+0x18]
  404106:	xor    rax,QWORD PTR fs:0x28
  40410f:	jne    40411a <__sprintf_chk@plt+0x2d7a>
  404111:	add    rsp,0x20
  404115:	pop    rbx
  404116:	pop    rbp
  404117:	pop    r12
  404119:	ret    
  40411a:	call   401260 <__stack_chk_fail@plt>
  40411f:	nop
  404120:	endbr64 
  404124:	push   r14
  404126:	push   r13
  404128:	push   r12
  40412a:	push   rbp
  40412b:	push   rbx
  40412c:	sub    rsp,0x10
  404130:	mov    rax,QWORD PTR fs:0x28
  404139:	mov    QWORD PTR [rsp+0x8],rax
  40413e:	xor    eax,eax
  404140:	cmp    BYTE PTR [rsi],0x0
  404143:	mov    DWORD PTR [rsp+0x4],0x0
  40414b:	je     4041a0 <__sprintf_chk@plt+0x2e00>
  40414d:	mov    r14,rdi
  404150:	mov    rbp,rsi
  404153:	lea    r13,[rsp+0x4]
  404158:	mov    r12,0xffffffffffffffff
  40415f:	jmp    404184 <__sprintf_chk@plt+0x2de4>
  404161:	nop    DWORD PTR [rax+0x0]
  404168:	mov    edx,DWORD PTR [rsp+0x4]
  40416c:	movsxd rbx,ebx
  40416f:	xor    esi,esi
  404171:	xor    eax,eax
  404173:	mov    rdi,r14
  404176:	add    rbp,rbx
  404179:	call   403a40 <__sprintf_chk@plt+0x26a0>
  40417e:	cmp    BYTE PTR [rbp+0x0],0x0
  404182:	je     4041a0 <__sprintf_chk@plt+0x2e00>
  404184:	mov    rdx,r13
  404187:	mov    rsi,r12
  40418a:	mov    rdi,rbp
  40418d:	call   4012b0 <utf8proc_iterate@plt>
  404192:	mov    rbx,rax
  404195:	test   eax,eax
  404197:	jg     404168 <__sprintf_chk@plt+0x2dc8>
  404199:	xor    eax,eax
  40419b:	jmp    4041a5 <__sprintf_chk@plt+0x2e05>
  40419d:	nop    DWORD PTR [rax]
  4041a0:	mov    eax,0x1
  4041a5:	mov    rcx,QWORD PTR [rsp+0x8]
  4041aa:	xor    rcx,QWORD PTR fs:0x28
  4041b3:	jne    4041c2 <__sprintf_chk@plt+0x2e22>
  4041b5:	add    rsp,0x10
  4041b9:	pop    rbx
  4041ba:	pop    rbp
  4041bb:	pop    r12
  4041bd:	pop    r13
  4041bf:	pop    r14
  4041c1:	ret    
  4041c2:	call   401260 <__stack_chk_fail@plt>
  4041c7:	nop    WORD PTR [rax+rax*1+0x0]
  4041d0:	push   rbp
  4041d1:	push   rbx
  4041d2:	mov    ebx,edi
  4041d4:	movsx  ebx,bx
  4041d7:	sub    rsp,0x78
  4041db:	mov    rax,QWORD PTR fs:0x28
  4041e4:	mov    QWORD PTR [rsp+0x68],rax
  4041e9:	xor    eax,eax
  4041eb:	mov    rbp,rsp
  4041ee:	call   401230 <getpid@plt>
  4041f3:	mov    r9d,eax
  4041f6:	sub    rsp,0x8
  4041fa:	mov    rax,0x161ea40
  404201:	push   rbx
  404202:	mov    r8,QWORD PTR [rax]
  404205:	lea    rcx,[rip+0x1774]        # 405980 <error@@Base+0x14e0>
  40420c:	mov    edx,0x64
  404211:	mov    esi,0x1
  404216:	mov    rdi,rbp
  404219:	xor    eax,eax
  40421b:	call   4013a0 <__sprintf_chk@plt>
  404220:	mov    rdi,rbp
  404223:	call   401380 <strdup@plt>
  404228:	pop    rdx
  404229:	pop    rcx
  40422a:	mov    rdx,QWORD PTR [rsp+0x68]
  40422f:	xor    rdx,QWORD PTR fs:0x28
  404238:	jne    404241 <__sprintf_chk@plt+0x2ea1>
  40423a:	add    rsp,0x78
  40423e:	pop    rbx
  40423f:	pop    rbp
  404240:	ret    
  404241:	call   401260 <__stack_chk_fail@plt>
  404246:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404250:	push   r12
  404252:	mov    rax,0x161ea48
  404259:	mov    r12d,edi
  40425c:	push   rbp
  40425d:	push   rbx
  40425e:	mov    rdx,QWORD PTR [rax]
  404261:	test   rdx,rdx
  404264:	je     40426a <__sprintf_chk@plt+0x2eca>
  404266:	xor    eax,eax
  404268:	call   rdx
  40426a:	cmp    WORD PTR [rip+0x1157f0],0x0        # 519a62 <error@@Base+0x1155c2>
  404272:	jle    4042aa <__sprintf_chk@plt+0x2f0a>
  404274:	mov    ebx,0x1
  404279:	nop    DWORD PTR [rax+0x0]
  404280:	movsx  edi,bx
  404283:	xor    eax,eax
  404285:	call   4041d0 <__sprintf_chk@plt+0x2e30>
  40428a:	mov    rdi,rax
  40428d:	mov    rbp,rax
  404290:	xor    eax,eax
  404292:	call   401200 <unlink@plt>
  404297:	inc    ebx
  404299:	mov    rdi,rbp
  40429c:	call   4011f0 <free@plt>
  4042a1:	cmp    bx,WORD PTR [rip+0x1157ba]        # 519a62 <error@@Base+0x1155c2>
  4042a8:	jle    404280 <__sprintf_chk@plt+0x2ee0>
  4042aa:	mov    edi,r12d
  4042ad:	call   401340 <exit@plt>
  4042b2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4042bd:	nop    DWORD PTR [rax]
  4042c0:	endbr64 
  4042c4:	movzx  edx,BYTE PTR [rdi]
  4042c7:	movzx  ecx,BYTE PTR [rsi]
  4042ca:	test   dl,dl
  4042cc:	je     4042f3 <__sprintf_chk@plt+0x2f53>
  4042ce:	cmp    cl,dl
  4042d0:	jne    4042f9 <__sprintf_chk@plt+0x2f59>
  4042d2:	xor    eax,eax
  4042d4:	jmp    4042e4 <__sprintf_chk@plt+0x2f44>
  4042d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042e0:	cmp    dl,cl
  4042e2:	jne    4042f9 <__sprintf_chk@plt+0x2f59>
  4042e4:	inc    rax
  4042e7:	movzx  edx,BYTE PTR [rdi+rax*1]
  4042eb:	movzx  ecx,BYTE PTR [rsi+rax*1]
  4042ef:	test   dl,dl
  4042f1:	jne    4042e0 <__sprintf_chk@plt+0x2f40>
  4042f3:	test   cl,cl
  4042f5:	je     404308 <__sprintf_chk@plt+0x2f68>
  4042f7:	xor    edx,edx
  4042f9:	cmp    dl,cl
  4042fb:	sbb    eax,eax
  4042fd:	or     eax,0x1
  404300:	ret    
  404301:	nop    DWORD PTR [rax+0x0]
  404308:	xor    eax,eax
  40430a:	ret    
  40430b:	nop    DWORD PTR [rax+rax*1+0x0]
  404310:	endbr64 
  404314:	mov    rax,QWORD PTR [rip+0x4cbd]        # 408fd8 <error@@Base+0x4b38>
  40431b:	cmp    QWORD PTR [rax],rdi
  40431e:	je     404338 <__sprintf_chk@plt+0x2f98>
  404320:	mov    rax,QWORD PTR [rip+0x4ca9]        # 408fd0 <error@@Base+0x4b30>
  404327:	cmp    QWORD PTR [rax],rdi
  40432a:	je     404338 <__sprintf_chk@plt+0x2f98>
  40432c:	jmp    401240 <fclose@plt>
  404331:	nop    DWORD PTR [rax+0x0]
  404338:	ret    
  404339:	nop    DWORD PTR [rax+0x0]
  404340:	endbr64 
  404344:	sub    rsp,0xa8
  40434b:	mov    rsi,rdi
  40434e:	mov    rdx,rsp
  404351:	mov    edi,0x1
  404356:	mov    rax,QWORD PTR fs:0x28
  40435f:	mov    QWORD PTR [rsp+0x98],rax
  404367:	xor    eax,eax
  404369:	call   401300 <__xstat@plt>
  40436e:	test   eax,eax
  404370:	sete   al
  404373:	mov    rcx,QWORD PTR [rsp+0x98]
  40437b:	xor    rcx,QWORD PTR fs:0x28
  404384:	jne    40438e <__sprintf_chk@plt+0x2fee>
  404386:	add    rsp,0xa8
  40438d:	ret    
  40438e:	call   401260 <__stack_chk_fail@plt>
  404393:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40439e:	xchg   ax,ax
  4043a0:	endbr64 
  4043a4:	movzx  eax,WORD PTR [rip+0x1156b7]        # 519a62 <error@@Base+0x1155c2>
  4043ab:	push   rbx
  4043ac:	lea    edi,[rax+0x1]
  4043af:	mov    WORD PTR [rip+0x1156ac],di        # 519a62 <error@@Base+0x1155c2>
  4043b6:	xor    eax,eax
  4043b8:	movsx  edi,di
  4043bb:	call   4041d0 <__sprintf_chk@plt+0x2e30>
  4043c0:	mov    rbx,rax
  4043c3:	mov    rdi,rax
  4043c6:	xor    eax,eax
  4043c8:	call   401200 <unlink@plt>
  4043cd:	mov    rax,rbx
  4043d0:	pop    rbx
  4043d1:	ret    
  4043d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4043dd:	nop    DWORD PTR [rax]
  4043e0:	endbr64 
  4043e4:	push   rbx
  4043e5:	mov    rbx,rdi
  4043e8:	call   401250 <strlen@plt>
  4043ed:	lea    ecx,[rax-0x1]
  4043f0:	movsx  rdx,cx
  4043f4:	test   cx,cx
  4043f7:	js     404423 <__sprintf_chk@plt+0x3083>
  4043f9:	cmp    BYTE PTR [rbx+rdx*1],0x2f
  4043fd:	je     404423 <__sprintf_chk@plt+0x3083>
  4043ff:	sub    eax,0x2
  404402:	movsx  rdx,ax
  404406:	jmp    40441e <__sprintf_chk@plt+0x307e>
  404408:	nop    DWORD PTR [rax+rax*1+0x0]
  404410:	lea    rax,[rdx-0x1]
  404414:	cmp    BYTE PTR [rbx+rax*1+0x1],0x2f
  404419:	je     404423 <__sprintf_chk@plt+0x3083>
  40441b:	mov    rdx,rax
  40441e:	test   dx,dx
  404421:	jns    404410 <__sprintf_chk@plt+0x3070>
  404423:	lea    rax,[rbx+rdx*1+0x1]
  404428:	pop    rbx
  404429:	ret    
  40442a:	nop    WORD PTR [rax+rax*1+0x0]
  404430:	endbr64 
  404434:	push   rax
  404435:	pop    rax
  404436:	xor    edi,edi
  404438:	xor    eax,eax
  40443a:	sub    rsp,0x8
  40443e:	call   404250 <__sprintf_chk@plt+0x2eb0>
  404443:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40444e:	xchg   ax,ax
  404450:	push   rax
  404451:	pop    rax
  404452:	sub    rsp,0x8
  404456:	mov    rax,0x161ea38
  40445d:	mov    rdx,QWORD PTR [rax]
  404460:	test   rdx,rdx
  404463:	je     404470 <__sprintf_chk@plt+0x30d0>
  404465:	xor    eax,eax
  404467:	call   rdx
  404469:	xor    eax,eax
  40446b:	call   404430 <__sprintf_chk@plt+0x3090>
  404470:	mov    rax,0x161ea40
  404477:	mov    r8,rdi
  40447a:	mov    rcx,QWORD PTR [rax]
  40447d:	mov    rax,QWORD PTR [rip+0x4b74]        # 408ff8 <error@@Base+0x4b58>
  404484:	lea    rdx,[rip+0x1503]        # 40598e <error@@Base+0x14ee>
  40448b:	mov    rdi,QWORD PTR [rax]
  40448e:	mov    esi,0x1
  404493:	xor    eax,eax
  404495:	call   401360 <__fprintf_chk@plt>
  40449a:	jmp    404469 <__sprintf_chk@plt+0x30c9>
  40449c:	nop    DWORD PTR [rax+0x0]

00000000004044a0 <error@@Base>:
  4044a0:	endbr64 
  4044a4:	push   rax
  4044a5:	pop    rax
  4044a6:	lea    rdx,[rip+0x14f0]        # 40599d <error@@Base+0x14fd>
  4044ad:	mov    esi,0x1
  4044b2:	sub    rsp,0x8
  4044b6:	mov    rax,0x161ea40
  4044bd:	mov    r8,rdi
  4044c0:	mov    rcx,QWORD PTR [rax]
  4044c3:	mov    rax,QWORD PTR [rip+0x4b2e]        # 408ff8 <error@@Base+0x4b58>
  4044ca:	mov    rdi,QWORD PTR [rax]
  4044cd:	xor    eax,eax
  4044cf:	call   401360 <__fprintf_chk@plt>
  4044d4:	mov    rax,0x409114
  4044db:	mov    edi,DWORD PTR [rax]
  4044dd:	xor    eax,eax
  4044df:	call   404250 <__sprintf_chk@plt+0x2eb0>
  4044e4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4044ef:	nop
  4044f0:	endbr64 
  4044f4:	sub    rsp,0x8
  4044f8:	call   4012c0 <calloc@plt>
  4044fd:	test   rax,rax
  404500:	je     404507 <error@@Base+0x67>
  404502:	add    rsp,0x8
  404506:	ret    
  404507:	lea    rdi,[rip+0x1497]        # 4059a5 <error@@Base+0x1505>
  40450e:	call   4044a0 <error@@Base>
  404513:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40451e:	xchg   ax,ax
  404520:	endbr64 
  404524:	cmp    BYTE PTR [rip+0x115535],0x0        # 519a60 <error@@Base+0x1155c0>
  40452b:	je     40452e <error@@Base+0x8e>
  40452d:	ret    
  40452e:	push   rax
  40452f:	lea    rdi,[rip+0x1489]        # 4059bf <error@@Base+0x151f>
  404536:	xor    eax,eax
  404538:	mov    BYTE PTR [rip+0x115521],0x1        # 519a60 <error@@Base+0x1155c0>
  40453f:	call   4044a0 <error@@Base>
  404544:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40454f:	nop
  404550:	endbr64 
  404554:	push   rax
  404555:	pop    rax
  404556:	lea    rdx,[rip+0x1471]        # 4059ce <error@@Base+0x152e>
  40455d:	sub    rsp,0x8
  404561:	mov    rax,0x161ea40
  404568:	mov    r8,rdi
  40456b:	mov    rcx,QWORD PTR [rax]
  40456e:	mov    rax,QWORD PTR [rip+0x4a83]        # 408ff8 <error@@Base+0x4b58>
  404575:	mov    r9,rsi
  404578:	mov    rdi,QWORD PTR [rax]
  40457b:	mov    esi,0x1
  404580:	xor    eax,eax
  404582:	call   401360 <__fprintf_chk@plt>
  404587:	mov    rax,0x409114
  40458e:	mov    edi,DWORD PTR [rax]
  404590:	xor    eax,eax
  404592:	call   404250 <__sprintf_chk@plt+0x2eb0>
  404597:	nop    WORD PTR [rax+rax*1+0x0]
  4045a0:	endbr64 
  4045a4:	test   rdi,rdi
  4045a7:	je     4045f0 <error@@Base+0x150>
  4045a9:	push   rbp
  4045aa:	mov    rbp,rsi
  4045ad:	push   rbx
  4045ae:	mov    rbx,rdi
  4045b1:	sub    rsp,0x8
  4045b5:	call   401330 <fopen@plt>
  4045ba:	test   rax,rax
  4045bd:	je     4045d0 <error@@Base+0x130>
  4045bf:	add    rsp,0x8
  4045c3:	pop    rbx
  4045c4:	pop    rbp
  4045c5:	ret    
  4045c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4045d0:	cmp    BYTE PTR [rbp+0x0],0x77
  4045d4:	mov    rsi,rbx
  4045d7:	je     404600 <error@@Base+0x160>
  4045d9:	lea    rdi,[rip+0x1411]        # 4059f1 <error@@Base+0x1551>
  4045e0:	xor    eax,eax
  4045e2:	call   404550 <error@@Base+0xb0>
  4045e7:	nop    WORD PTR [rax+rax*1+0x0]
  4045f0:	cmp    BYTE PTR [rsi],0x72
  4045f3:	je     404610 <error@@Base+0x170>
  4045f5:	mov    rax,QWORD PTR [rip+0x49d4]        # 408fd0 <error@@Base+0x4b30>
  4045fc:	mov    rax,QWORD PTR [rax]
  4045ff:	ret    
  404600:	lea    rdi,[rip+0x13d4]        # 4059db <error@@Base+0x153b>
  404607:	call   404550 <error@@Base+0xb0>
  40460c:	nop    DWORD PTR [rax+0x0]
  404610:	mov    rax,QWORD PTR [rip+0x49c1]        # 408fd8 <error@@Base+0x4b38>
  404617:	mov    rax,QWORD PTR [rax]
  40461a:	ret    
  40461b:	nop    DWORD PTR [rax+rax*1+0x0]
  404620:	endbr64 
  404624:	push   r15
  404626:	xor    eax,eax
  404628:	push   r14
  40462a:	mov    r14,rsi
  40462d:	push   r13
  40462f:	push   r12
  404631:	push   rbp
  404632:	push   rbx
  404633:	sub    rsp,0x38
  404637:	mov    QWORD PTR [rsp+0x8],rdi
  40463c:	mov    rdi,QWORD PTR [rsi]
  40463f:	mov    QWORD PTR [rsp+0x28],rdx
  404644:	mov    QWORD PTR [rsp+0x10],rcx
  404649:	call   4043e0 <__sprintf_chk@plt+0x3040>
  40464e:	mov    rcx,0x161ea40
  404655:	lea    rsi,[rip+0xfffffffffffffec4]        # 404520 <error@@Base+0x80>
  40465c:	mov    edi,0x2
  404661:	mov    QWORD PTR [rcx],rax
  404664:	call   4012e0 <__sysv_signal@plt>
  404669:	lea    rsi,[rip+0xfffffffffffffeb0]        # 404520 <error@@Base+0x80>
  404670:	mov    edi,0xf
  404675:	call   4012e0 <__sysv_signal@plt>
  40467a:	mov    r9,QWORD PTR [rsp+0x8]
  40467f:	mov    r15d,DWORD PTR [r9]
  404682:	cmp    r15d,0x1
  404686:	je     404850 <error@@Base+0x3b0>
  40468c:	mov    rdx,QWORD PTR [rsp+0x10]
  404691:	jle    40485c <error@@Base+0x3bc>
  404697:	mov    r8d,r15d
  40469a:	xor    r12d,r12d
  40469d:	mov    r15,rdx
  4046a0:	mov    r13d,0x1
  4046a6:	mov    ebx,0x1
  4046ab:	mov    rdx,r14
  4046ae:	jmp    4046ca <error@@Base+0x22a>
  4046b0:	movsx  rax,r12w
  4046b4:	mov    QWORD PTR [rdx+rax*8],rbp
  4046b8:	inc    ebx
  4046ba:	inc    r12d
  4046bd:	movsx  r13d,bx
  4046c1:	cmp    r13d,r8d
  4046c4:	jge    4047f0 <error@@Base+0x350>
  4046ca:	movsx  rax,bx
  4046ce:	mov    rbp,QWORD PTR [rdx+rax*8]
  4046d2:	lea    r10,[rax*8+0x0]
  4046da:	cmp    BYTE PTR [rbp+0x0],0x2d
  4046de:	jne    4046b0 <error@@Base+0x210>
  4046e0:	movzx  r14d,BYTE PTR [rbp+0x1]
  4046e5:	mov    QWORD PTR [rsp+0x20],r10
  4046ea:	test   r14b,r14b
  4046ed:	je     4046b0 <error@@Base+0x210>
  4046ef:	mov    rdi,rbp
  4046f2:	mov    DWORD PTR [rsp+0x1c],r8d
  4046f7:	mov    QWORD PTR [rsp+0x10],rdx
  4046fc:	mov    QWORD PTR [rsp+0x8],r9
  404701:	call   401250 <strlen@plt>
  404706:	cmp    rax,0x6
  40470a:	mov    ecx,0x6
  40470f:	cmovle rcx,rax
  404713:	lea    rsi,[rip+0x12eb]        # 405a05 <error@@Base+0x1565>
  40471a:	cmp    rcx,rcx
  40471d:	mov    rdi,rbp
  404720:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  404722:	seta   al
  404725:	sbb    al,0x0
  404727:	test   al,al
  404729:	je     404880 <error@@Base+0x3e0>
  40472f:	mov    r8d,DWORD PTR [rsp+0x1c]
  404734:	inc    r13d
  404737:	xor    eax,eax
  404739:	cmp    r13d,r8d
  40473c:	mov    r9,QWORD PTR [rsp+0x8]
  404741:	mov    rdx,QWORD PTR [rsp+0x10]
  404746:	jge    404752 <error@@Base+0x2b2>
  404748:	mov    r10,QWORD PTR [rsp+0x20]
  40474d:	mov    rax,QWORD PTR [rdx+r10*1+0x8]
  404752:	test   r15,r15
  404755:	je     40478b <error@@Base+0x2eb>
  404757:	movzx  ecx,BYTE PTR [r15]
  40475b:	test   cl,cl
  40475d:	je     40478b <error@@Base+0x2eb>
  40475f:	cmp    r14b,cl
  404762:	je     4047a0 <error@@Base+0x300>
  404764:	xor    ecx,ecx
  404766:	jmp    404775 <error@@Base+0x2d5>
  404768:	nop    DWORD PTR [rax+rax*1+0x0]
  404770:	cmp    r14b,dil
  404773:	je     4047a8 <error@@Base+0x308>
  404775:	inc    ecx
  404777:	movsx  rsi,cx
  40477b:	lea    rsi,[rsi+rsi*2]
  40477f:	lea    rsi,[r15+rsi*8]
  404783:	movzx  edi,BYTE PTR [rsi]
  404786:	test   dil,dil
  404789:	jne    404770 <error@@Base+0x2d0>
  40478b:	mov    rsi,rbp
  40478e:	lea    rdi,[rip+0x1276]        # 405a0b <error@@Base+0x156b>
  404795:	xor    eax,eax
  404797:	call   404550 <error@@Base+0xb0>
  40479c:	nop    DWORD PTR [rax+0x0]
  4047a0:	mov    rsi,r15
  4047a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4047a8:	mov    rcx,QWORD PTR [rsi+0x8]
  4047ac:	test   rcx,rcx
  4047af:	je     404820 <error@@Base+0x380>
  4047b1:	cmp    BYTE PTR [rbp+0x2],0x0
  4047b5:	jne    404810 <error@@Base+0x370>
  4047b7:	test   rax,rax
  4047ba:	je     404868 <error@@Base+0x3c8>
  4047c0:	cmp    QWORD PTR [rcx],0x0
  4047c4:	jne    404890 <error@@Base+0x3f0>
  4047ca:	mov    QWORD PTR [rcx],rax
  4047cd:	mov    eax,ebx
  4047cf:	inc    ebx
  4047d1:	cmp    BYTE PTR [rbp+0x2],0x0
  4047d5:	jne    4046bd <error@@Base+0x21d>
  4047db:	lea    ebx,[rax+0x2]
  4047de:	movsx  r13d,bx
  4047e2:	cmp    r13d,r8d
  4047e5:	jl     4046ca <error@@Base+0x22a>
  4047eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4047f0:	movsx  r12d,r12w
  4047f4:	mov    DWORD PTR [r9],r12d
  4047f7:	add    rsp,0x38
  4047fb:	pop    rbx
  4047fc:	pop    rbp
  4047fd:	pop    r12
  4047ff:	pop    r13
  404801:	pop    r14
  404803:	pop    r15
  404805:	ret    
  404806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404810:	cmp    QWORD PTR [rcx],0x0
  404814:	jne    404890 <error@@Base+0x3f0>
  404816:	lea    rax,[rbp+0x2]
  40481a:	jmp    4047ca <error@@Base+0x32a>
  40481c:	nop    DWORD PTR [rax+0x0]
  404820:	mov    rax,QWORD PTR [rsi+0x10]
  404824:	test   rax,rax
  404827:	je     40478b <error@@Base+0x2eb>
  40482d:	cmp    BYTE PTR [rbp+0x2],0x0
  404831:	jne    40478b <error@@Base+0x2eb>
  404837:	cmp    BYTE PTR [rax],0x0
  40483a:	jne    404890 <error@@Base+0x3f0>
  40483c:	mov    BYTE PTR [rax],0x1
  40483f:	inc    ebx
  404841:	mov    r8d,DWORD PTR [r9]
  404844:	jmp    4046bd <error@@Base+0x21d>
  404849:	nop    DWORD PTR [rax+0x0]
  404850:	mov    rax,0x409118
  404857:	cmp    BYTE PTR [rax],0x0
  40485a:	jne    404880 <error@@Base+0x3e0>
  40485c:	xor    r12d,r12d
  40485f:	jmp    4047f4 <error@@Base+0x354>
  404861:	nop    DWORD PTR [rax+0x0]
  404868:	mov    rax,QWORD PTR [rsi+0x10]
  40486c:	test   rax,rax
  40486f:	jne    404837 <error@@Base+0x397>
  404871:	jmp    40478b <error@@Base+0x2eb>
  404876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404880:	mov    rdi,QWORD PTR [rsp+0x28]
  404885:	xor    eax,eax
  404887:	call   404450 <__sprintf_chk@plt+0x30b0>
  40488c:	nop    DWORD PTR [rax+0x0]
  404890:	mov    rsi,rbp
  404893:	lea    rdi,[rip+0x1180]        # 405a1a <error@@Base+0x157a>
  40489a:	xor    eax,eax
  40489c:	call   404550 <error@@Base+0xb0>
  4048a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4048ac:	nop    DWORD PTR [rax+0x0]
  4048b0:	endbr64 
  4048b4:	mov    rax,0x161ea40
  4048bb:	mov    r8,rdi
  4048be:	mov    rcx,QWORD PTR [rax]
  4048c1:	mov    rax,QWORD PTR [rip+0x4730]        # 408ff8 <error@@Base+0x4b58>
  4048c8:	mov    r9,rsi
  4048cb:	mov    rdi,QWORD PTR [rax]
  4048ce:	lea    rdx,[rip+0x10f9]        # 4059ce <error@@Base+0x152e>
  4048d5:	mov    esi,0x1
  4048da:	xor    eax,eax
  4048dc:	jmp    401360 <__fprintf_chk@plt>
  4048e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4048f0:	endbr64 
  4048f4:	mov    QWORD PTR [rdi+0x8],0x0
  4048fc:	mov    QWORD PTR [rdi],0x0
  404903:	mov    QWORD PTR [rdi+0x10],0x0
  40490b:	mov    QWORD PTR [rdi+0x18],0x0
  404913:	ret    
  404914:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40491f:	nop
  404920:	endbr64 
  404924:	push   rbx
  404925:	mov    rbx,rdi
  404928:	mov    rax,QWORD PTR [rdi]
  40492b:	mov    QWORD PTR [rsi],0x0
  404932:	mov    QWORD PTR [rsi+0x8],rax
  404936:	mov    QWORD PTR [rdi],rsi
  404939:	test   rax,rax
  40493c:	je     404960 <error@@Base+0x4c0>
  40493e:	mov    QWORD PTR [rax],rsi
  404941:	mov    rdi,QWORD PTR [rbx+0x10]
  404945:	test   rdi,rdi
  404948:	je     404957 <error@@Base+0x4b7>
  40494a:	call   4011f0 <free@plt>
  40494f:	mov    QWORD PTR [rbx+0x10],0x0
  404957:	inc    QWORD PTR [rbx+0x18]
  40495b:	pop    rbx
  40495c:	ret    
  40495d:	nop    DWORD PTR [rax]
  404960:	mov    QWORD PTR [rdi+0x8],rsi
  404964:	jmp    404941 <error@@Base+0x4a1>
  404966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404970:	endbr64 
  404974:	push   rbx
  404975:	mov    rbx,rdi
  404978:	mov    rax,QWORD PTR [rdi+0x8]
  40497c:	mov    QWORD PTR [rsi+0x8],0x0
  404984:	mov    QWORD PTR [rsi],rax
  404987:	test   rax,rax
  40498a:	je     4049b0 <error@@Base+0x510>
  40498c:	mov    QWORD PTR [rax+0x8],rsi
  404990:	mov    rdi,QWORD PTR [rbx+0x10]
  404994:	mov    QWORD PTR [rbx+0x8],rsi
  404998:	test   rdi,rdi
  40499b:	je     4049aa <error@@Base+0x50a>
  40499d:	call   4011f0 <free@plt>
  4049a2:	mov    QWORD PTR [rbx+0x10],0x0
  4049aa:	inc    QWORD PTR [rbx+0x18]
  4049ae:	pop    rbx
  4049af:	ret    
  4049b0:	mov    QWORD PTR [rdi],rsi
  4049b3:	jmp    404990 <error@@Base+0x4f0>
  4049b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4049c0:	endbr64 
  4049c4:	mov    rax,QWORD PTR [rdx]
  4049c7:	push   rbx
  4049c8:	mov    QWORD PTR [rsi],rax
  4049cb:	mov    rbx,rdi
  4049ce:	mov    QWORD PTR [rsi+0x8],rdx
  4049d2:	test   rax,rax
  4049d5:	je     404a00 <error@@Base+0x560>
  4049d7:	mov    QWORD PTR [rax+0x8],rsi
  4049db:	mov    rdi,QWORD PTR [rbx+0x10]
  4049df:	mov    QWORD PTR [rdx],rsi
  4049e2:	test   rdi,rdi
  4049e5:	je     4049f4 <error@@Base+0x554>
  4049e7:	call   4011f0 <free@plt>
  4049ec:	mov    QWORD PTR [rbx+0x10],0x0
  4049f4:	inc    QWORD PTR [rbx+0x18]
  4049f8:	pop    rbx
  4049f9:	ret    
  4049fa:	nop    WORD PTR [rax+rax*1+0x0]
  404a00:	mov    QWORD PTR [rdi],rsi
  404a03:	jmp    4049db <error@@Base+0x53b>
  404a05:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404a10:	endbr64 
  404a14:	mov    rax,QWORD PTR [rsi+0x8]
  404a18:	push   rbx
  404a19:	mov    QWORD PTR [rdx],rsi
  404a1c:	mov    QWORD PTR [rdx+0x8],rax
  404a20:	mov    rbx,rdi
  404a23:	mov    QWORD PTR [rsi+0x8],rdx
  404a27:	test   rax,rax
  404a2a:	je     404a50 <error@@Base+0x5b0>
  404a2c:	mov    QWORD PTR [rax],rdx
  404a2f:	mov    rdi,QWORD PTR [rbx+0x10]
  404a33:	test   rdi,rdi
  404a36:	je     404a45 <error@@Base+0x5a5>
  404a38:	call   4011f0 <free@plt>
  404a3d:	mov    QWORD PTR [rbx+0x10],0x0
  404a45:	inc    QWORD PTR [rbx+0x18]
  404a49:	pop    rbx
  404a4a:	ret    
  404a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a50:	mov    QWORD PTR [rdi+0x8],rdx
  404a54:	jmp    404a2f <error@@Base+0x58f>
  404a56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a60:	endbr64 
  404a64:	mov    rdx,QWORD PTR [rsi]
  404a67:	push   rbx
  404a68:	mov    rax,QWORD PTR [rsi+0x8]
  404a6c:	mov    rbx,rdi
  404a6f:	test   rdx,rdx
  404a72:	je     404ab0 <error@@Base+0x610>
  404a74:	mov    QWORD PTR [rdx+0x8],rax
  404a78:	mov    rax,QWORD PTR [rsi+0x8]
  404a7c:	test   rax,rax
  404a7f:	je     404ab8 <error@@Base+0x618>
  404a81:	mov    QWORD PTR [rax],rdx
  404a84:	mov    rdi,QWORD PTR [rbx+0x10]
  404a88:	mov    QWORD PTR [rsi+0x8],0x0
  404a90:	mov    QWORD PTR [rsi],0x0
  404a97:	test   rdi,rdi
  404a9a:	je     404aa9 <error@@Base+0x609>
  404a9c:	call   4011f0 <free@plt>
  404aa1:	mov    QWORD PTR [rbx+0x10],0x0
  404aa9:	dec    QWORD PTR [rbx+0x18]
  404aad:	pop    rbx
  404aae:	ret    
  404aaf:	nop
  404ab0:	mov    QWORD PTR [rdi],rax
  404ab3:	test   rax,rax
  404ab6:	jne    404a81 <error@@Base+0x5e1>
  404ab8:	mov    QWORD PTR [rbx+0x8],rdx
  404abc:	jmp    404a84 <error@@Base+0x5e4>
  404abe:	xchg   ax,ax
  404ac0:	endbr64 
  404ac4:	cmp    QWORD PTR [rdi+0x10],0x0
  404ac9:	je     404ad0 <error@@Base+0x630>
  404acb:	ret    
  404acc:	nop    DWORD PTR [rax+0x0]
  404ad0:	mov    rax,QWORD PTR [rdi+0x18]
  404ad4:	test   rax,rax
  404ad7:	je     404acb <error@@Base+0x62b>
  404ad9:	push   rbx
  404ada:	mov    esi,0x8
  404adf:	mov    rbx,rdi
  404ae2:	mov    rdi,rax
  404ae5:	xor    eax,eax
  404ae7:	call   4044f0 <error@@Base+0x50>
  404aec:	mov    rdx,QWORD PTR [rbx]
  404aef:	mov    QWORD PTR [rbx+0x10],rax
  404af3:	test   rdx,rdx
  404af6:	je     404b10 <error@@Base+0x670>
  404af8:	nop    DWORD PTR [rax+rax*1+0x0]
  404b00:	mov    QWORD PTR [rax],rdx
  404b03:	add    rax,0x8
  404b07:	mov    rdx,QWORD PTR [rdx+0x8]
  404b0b:	test   rdx,rdx
  404b0e:	jne    404b00 <error@@Base+0x660>
  404b10:	pop    rbx
  404b11:	ret    
  404b12:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404b1d:	nop    DWORD PTR [rax]
  404b20:	endbr64 
  404b24:	push   r12
  404b26:	push   rbp
  404b27:	push   rbx
  404b28:	mov    rbx,QWORD PTR [rdi]
  404b2b:	test   rbx,rbx
  404b2e:	je     404b5e <error@@Base+0x6be>
  404b30:	mov    rbp,rdi
  404b33:	mov    r12,rsi
  404b36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b40:	mov    rsi,rbx
  404b43:	mov    rdi,rbp
  404b46:	xor    eax,eax
  404b48:	call   404a60 <error@@Base+0x5c0>
  404b4d:	mov    rdi,rbx
  404b50:	xor    eax,eax
  404b52:	call   r12
  404b55:	mov    rbx,QWORD PTR [rbp+0x0]
  404b59:	test   rbx,rbx
  404b5c:	jne    404b40 <error@@Base+0x6a0>
  404b5e:	pop    rbx
  404b5f:	pop    rbp
  404b60:	pop    r12
  404b62:	ret    
  404b63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b6d:	nop    DWORD PTR [rax]
  404b70:	endbr64 
  404b74:	push   r15
  404b76:	lea    r15,[rip+0x3cb3]        # 408830 <error@@Base+0x4390>
  404b7d:	push   r14
  404b7f:	mov    r14,rdx
  404b82:	push   r13
  404b84:	mov    r13,rsi
  404b87:	push   r12
  404b89:	mov    r12d,edi
  404b8c:	push   rbp
  404b8d:	lea    rbp,[rip+0x3ca4]        # 408838 <error@@Base+0x4398>
  404b94:	push   rbx
  404b95:	sub    rbp,r15
  404b98:	sub    rsp,0x8
  404b9c:	call   401000 <free@plt-0x1f0>
  404ba1:	sar    rbp,0x3
  404ba5:	je     404bc6 <error@@Base+0x726>
  404ba7:	xor    ebx,ebx
  404ba9:	nop    DWORD PTR [rax+0x0]
  404bb0:	mov    rdx,r14
  404bb3:	mov    rsi,r13
  404bb6:	mov    edi,r12d
  404bb9:	call   QWORD PTR [r15+rbx*8]
  404bbd:	add    rbx,0x1
  404bc1:	cmp    rbp,rbx
  404bc4:	jne    404bb0 <error@@Base+0x710>
  404bc6:	add    rsp,0x8
  404bca:	pop    rbx
  404bcb:	pop    rbp
  404bcc:	pop    r12
  404bce:	pop    r13
  404bd0:	pop    r14
  404bd2:	pop    r15
  404bd4:	ret    
  404bd5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  404be0:	endbr64 
  404be4:	ret    

Disassembly of section .fini:

0000000000404be8 <.fini>:
  404be8:	endbr64 
  404bec:	sub    rsp,0x8
  404bf0:	add    rsp,0x8
  404bf4:	ret    
