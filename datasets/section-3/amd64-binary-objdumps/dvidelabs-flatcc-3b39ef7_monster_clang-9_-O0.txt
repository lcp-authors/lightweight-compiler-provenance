
../repos/dvidelabs-flatcc-3b39ef7/samples/monster/monster:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0xffe9]        # 412ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0xffe2]        # 413008 <flatcc_builder_padding_base@@Base+0x56a8>
  403026:	jmp    QWORD PTR [rip+0xffe4]        # 413010 <flatcc_builder_padding_base@@Base+0x56b0>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0xffe2]        # 413018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strncpy@plt>:
  403040:	jmp    QWORD PTR [rip+0xffda]        # 413020 <strncpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <strlen@plt>:
  403050:	jmp    QWORD PTR [rip+0xffd2]        # 413028 <strlen@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <printf@plt>:
  403060:	jmp    QWORD PTR [rip+0xffca]        # 413030 <printf@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <__assert_fail@plt>:
  403070:	jmp    QWORD PTR [rip+0xffc2]        # 413038 <__assert_fail@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <memset@plt>:
  403080:	jmp    QWORD PTR [rip+0xffba]        # 413040 <memset@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <memchr@plt>:
  403090:	jmp    QWORD PTR [rip+0xffb2]        # 413048 <memchr@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <memcmp@plt>:
  4030a0:	jmp    QWORD PTR [rip+0xffaa]        # 413050 <memcmp@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <strcmp@plt>:
  4030b0:	jmp    QWORD PTR [rip+0xffa2]        # 413058 <strcmp@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <memcpy@plt>:
  4030c0:	jmp    QWORD PTR [rip+0xff9a]        # 413060 <memcpy@GLIBC_2.14>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <malloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0xff92]        # 413068 <malloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <realloc@plt>:
  4030e0:	jmp    QWORD PTR [rip+0xff8a]        # 413070 <realloc@GLIBC_2.2.5>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <posix_memalign@plt>:
  4030f0:	jmp    QWORD PTR [rip+0xff82]        # 413078 <posix_memalign@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403100 <_start@@Base>:
  403100:	endbr64 
  403104:	xor    ebp,ebp
  403106:	mov    r9,rdx
  403109:	pop    rsi
  40310a:	mov    rdx,rsp
  40310d:	and    rsp,0xfffffffffffffff0
  403111:	push   rax
  403112:	push   rsp
  403113:	mov    r8,0x40cbb0
  40311a:	mov    rcx,0x40cb40
  403121:	mov    rdi,0x4054a0
  403128:	call   QWORD PTR [rip+0xfec2]        # 412ff0 <__libc_start_main@GLIBC_2.2.5>
  40312e:	hlt    
  40312f:	nop
  403130:	endbr64 
  403134:	ret    
  403135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40313f:	nop
  403140:	mov    eax,0x413090
  403145:	cmp    rax,0x413090
  40314b:	je     403160 <_start@@Base+0x60>
  40314d:	mov    eax,0x0
  403152:	test   rax,rax
  403155:	je     403160 <_start@@Base+0x60>
  403157:	mov    edi,0x413090
  40315c:	jmp    rax
  40315e:	xchg   ax,ax
  403160:	ret    
  403161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40316c:	nop    DWORD PTR [rax+0x0]
  403170:	mov    esi,0x413090
  403175:	sub    rsi,0x413090
  40317c:	mov    rax,rsi
  40317f:	shr    rsi,0x3f
  403183:	sar    rax,0x3
  403187:	add    rsi,rax
  40318a:	sar    rsi,1
  40318d:	je     4031a0 <_start@@Base+0xa0>
  40318f:	mov    eax,0x0
  403194:	test   rax,rax
  403197:	je     4031a0 <_start@@Base+0xa0>
  403199:	mov    edi,0x413090
  40319e:	jmp    rax
  4031a0:	ret    
  4031a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ac:	nop    DWORD PTR [rax+0x0]
  4031b0:	endbr64 
  4031b4:	cmp    BYTE PTR [rip+0xfed5],0x0        # 413090 <__bss_start@@Base>
  4031bb:	jne    4031d0 <_start@@Base+0xd0>
  4031bd:	push   rbp
  4031be:	mov    rbp,rsp
  4031c1:	call   403140 <_start@@Base+0x40>
  4031c6:	mov    BYTE PTR [rip+0xfec3],0x1        # 413090 <__bss_start@@Base>
  4031cd:	pop    rbp
  4031ce:	ret    
  4031cf:	nop
  4031d0:	ret    
  4031d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031dc:	nop    DWORD PTR [rax+0x0]
  4031e0:	endbr64 
  4031e4:	jmp    403170 <_start@@Base+0x70>
  4031e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004031f0 <create_monster_bottom_up@@Base>:
  4031f0:	push   rbp
  4031f1:	mov    rbp,rsp
  4031f4:	push   rbx
  4031f5:	sub    rsp,0xb8
  4031fc:	mov    QWORD PTR [rbp-0x10],rdi
  403200:	mov    DWORD PTR [rbp-0x14],esi
  403203:	mov    rdi,QWORD PTR [rbp-0x10]
  403207:	lea    rsi,[rip+0x9e02]        # 40d010 <_IO_stdin_used@@Base+0x10>
  40320e:	call   403420 <create_monster_bottom_up@@Base+0x230>
  403213:	mov    DWORD PTR [rbp-0x18],eax
  403216:	mov    WORD PTR [rbp-0x1a],0x3
  40321c:	mov    rdi,QWORD PTR [rbp-0x10]
  403220:	lea    rsi,[rip+0x9def]        # 40d016 <_IO_stdin_used@@Base+0x16>
  403227:	call   403420 <create_monster_bottom_up@@Base+0x230>
  40322c:	mov    DWORD PTR [rbp-0x20],eax
  40322f:	mov    WORD PTR [rbp-0x22],0x5
  403235:	mov    rdi,QWORD PTR [rbp-0x10]
  403239:	mov    esi,DWORD PTR [rbp-0x18]
  40323c:	movsx  edx,WORD PTR [rbp-0x1a]
  403240:	call   403450 <create_monster_bottom_up@@Base+0x260>
  403245:	mov    DWORD PTR [rbp-0x28],eax
  403248:	mov    rdi,QWORD PTR [rbp-0x10]
  40324c:	mov    esi,DWORD PTR [rbp-0x20]
  40324f:	movsx  edx,WORD PTR [rbp-0x22]
  403253:	call   403450 <create_monster_bottom_up@@Base+0x260>
  403258:	mov    DWORD PTR [rbp-0x2c],eax
  40325b:	mov    rdi,QWORD PTR [rbp-0x10]
  40325f:	lea    rsi,[rip+0x9db4]        # 40d01a <_IO_stdin_used@@Base+0x1a>
  403266:	call   403420 <create_monster_bottom_up@@Base+0x230>
  40326b:	lea    rsi,[rbp-0x3a]
  40326f:	mov    DWORD PTR [rbp-0x30],eax
  403272:	mov    rcx,QWORD PTR [rip+0xa69f]        # 40d918 <_IO_stdin_used@@Base+0x918>
  403279:	mov    QWORD PTR [rbp-0x3a],rcx
  40327d:	mov    r8w,WORD PTR [rip+0xa69b]        # 40d920 <_IO_stdin_used@@Base+0x920>
  403285:	mov    WORD PTR [rbp-0x32],r8w
  40328a:	mov    rdi,QWORD PTR [rbp-0x10]
  40328e:	mov    edx,0xa
  403293:	call   4034d0 <create_monster_bottom_up@@Base+0x2e0>
  403298:	mov    DWORD PTR [rbp-0x40],eax
  40329b:	mov    rdi,QWORD PTR [rbp-0x10]
  40329f:	call   403510 <create_monster_bottom_up@@Base+0x320>
  4032a4:	mov    rdi,QWORD PTR [rbp-0x10]
  4032a8:	mov    esi,DWORD PTR [rbp-0x28]
  4032ab:	mov    DWORD PTR [rbp-0x64],eax
  4032ae:	call   403530 <create_monster_bottom_up@@Base+0x340>
  4032b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4032b7:	mov    esi,DWORD PTR [rbp-0x2c]
  4032ba:	mov    QWORD PTR [rbp-0x70],rax
  4032be:	call   403530 <create_monster_bottom_up@@Base+0x340>
  4032c3:	mov    rdi,QWORD PTR [rbp-0x10]
  4032c7:	mov    QWORD PTR [rbp-0x78],rax
  4032cb:	call   403580 <create_monster_bottom_up@@Base+0x390>
  4032d0:	mov    DWORD PTR [rbp-0x44],eax
  4032d3:	mov    rcx,QWORD PTR [rip+0xa64a]        # 40d924 <_IO_stdin_used@@Base+0x924>
  4032da:	mov    QWORD PTR [rbp-0x50],rcx
  4032de:	mov    eax,DWORD PTR [rip+0xa648]        # 40d92c <_IO_stdin_used@@Base+0x92c>
  4032e4:	mov    DWORD PTR [rbp-0x48],eax
  4032e7:	mov    WORD PTR [rbp-0x52],0x12c
  4032ed:	mov    WORD PTR [rbp-0x54],0x96
  4032f3:	mov    edi,DWORD PTR [rbp-0x2c]
  4032f6:	call   4035a0 <create_monster_bottom_up@@Base+0x3b0>
  4032fb:	mov    QWORD PTR [rbp-0x60],rax
  4032ff:	cmp    DWORD PTR [rbp-0x14],0x0
  403303:	jne    403365 <create_monster_bottom_up@@Base+0x175>
  403309:	xor    eax,eax
  40330b:	mov    rdi,QWORD PTR [rbp-0x10]
  40330f:	mov    cx,WORD PTR [rbp-0x54]
  403313:	mov    dx,WORD PTR [rbp-0x52]
  403317:	mov    r8d,DWORD PTR [rbp-0x30]
  40331b:	mov    r9d,DWORD PTR [rbp-0x40]
  40331f:	mov    esi,DWORD PTR [rbp-0x44]
  403322:	mov    r10,QWORD PTR [rbp-0x60]
  403326:	lea    r11,[rbp-0x50]
  40332a:	mov    DWORD PTR [rbp-0x7c],esi
  40332d:	mov    rsi,r11
  403330:	movsx  ebx,cx
  403333:	mov    WORD PTR [rbp-0x7e],dx
  403337:	mov    edx,ebx
  403339:	mov    cx,WORD PTR [rbp-0x7e]
  40333d:	movsx  ebx,cx
  403340:	mov    ecx,ebx
  403342:	mov    DWORD PTR [rsp],0x0
  403349:	mov    ebx,DWORD PTR [rbp-0x7c]
  40334c:	mov    DWORD PTR [rsp+0x8],ebx
  403350:	mov    QWORD PTR [rsp+0x10],r10
  403355:	mov    DWORD PTR [rbp-0x84],eax
  40335b:	call   4035c0 <create_monster_bottom_up@@Base+0x3d0>
  403360:	jmp    403411 <create_monster_bottom_up@@Base+0x221>
  403365:	mov    rdi,QWORD PTR [rbp-0x10]
  403369:	call   4036a0 <create_monster_bottom_up@@Base+0x4b0>
  40336e:	vmovss xmm0,DWORD PTR [rip+0x9c8e]        # 40d004 <_IO_stdin_used@@Base+0x4>
  403376:	vmovss xmm1,DWORD PTR [rip+0x9c8a]        # 40d008 <_IO_stdin_used@@Base+0x8>
  40337e:	vmovss xmm2,DWORD PTR [rip+0x9c86]        # 40d00c <_IO_stdin_used@@Base+0xc>
  403386:	mov    rdi,QWORD PTR [rbp-0x10]
  40338a:	mov    DWORD PTR [rbp-0x88],eax
  403390:	call   4036f0 <create_monster_bottom_up@@Base+0x500>
  403395:	mov    rdi,QWORD PTR [rbp-0x10]
  403399:	movsx  esi,WORD PTR [rbp-0x52]
  40339d:	mov    DWORD PTR [rbp-0x8c],eax
  4033a3:	call   403760 <create_monster_bottom_up@@Base+0x570>
  4033a8:	mov    rdi,QWORD PTR [rbp-0x10]
  4033ac:	mov    esi,DWORD PTR [rbp-0x30]
  4033af:	mov    DWORD PTR [rbp-0x90],eax
  4033b5:	call   4037e0 <create_monster_bottom_up@@Base+0x5f0>
  4033ba:	mov    rdi,QWORD PTR [rbp-0x10]
  4033be:	mov    esi,DWORD PTR [rbp-0x40]
  4033c1:	mov    DWORD PTR [rbp-0x94],eax
  4033c7:	call   403840 <create_monster_bottom_up@@Base+0x650>
  4033cc:	xor    esi,esi
  4033ce:	mov    rdi,QWORD PTR [rbp-0x10]
  4033d2:	mov    DWORD PTR [rbp-0x98],eax
  4033d8:	call   4038a0 <create_monster_bottom_up@@Base+0x6b0>
  4033dd:	mov    rdi,QWORD PTR [rbp-0x10]
  4033e1:	mov    esi,DWORD PTR [rbp-0x44]
  4033e4:	mov    DWORD PTR [rbp-0x9c],eax
  4033ea:	call   403920 <create_monster_bottom_up@@Base+0x730>
  4033ef:	mov    rdi,QWORD PTR [rbp-0x10]
  4033f3:	mov    rsi,QWORD PTR [rbp-0x60]
  4033f7:	mov    DWORD PTR [rbp-0xa0],eax
  4033fd:	call   403980 <create_monster_bottom_up@@Base+0x790>
  403402:	mov    rdi,QWORD PTR [rbp-0x10]
  403406:	mov    DWORD PTR [rbp-0xa4],eax
  40340c:	call   403a30 <create_monster_bottom_up@@Base+0x840>
  403411:	xor    eax,eax
  403413:	add    rsp,0xb8
  40341a:	pop    rbx
  40341b:	pop    rbp
  40341c:	ret    
  40341d:	nop    DWORD PTR [rax]
  403420:	push   rbp
  403421:	mov    rbp,rsp
  403424:	sub    rsp,0x10
  403428:	mov    QWORD PTR [rbp-0x8],rdi
  40342c:	mov    QWORD PTR [rbp-0x10],rsi
  403430:	mov    rdi,QWORD PTR [rbp-0x8]
  403434:	mov    rsi,QWORD PTR [rbp-0x10]
  403438:	call   40b120 <flatcc_builder_create_string_str@@Base>
  40343d:	add    rsp,0x10
  403441:	pop    rbp
  403442:	ret    
  403443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40344d:	nop    DWORD PTR [rax]
  403450:	push   rbp
  403451:	mov    rbp,rsp
  403454:	sub    rsp,0x20
  403458:	mov    QWORD PTR [rbp-0x10],rdi
  40345c:	mov    DWORD PTR [rbp-0x14],esi
  40345f:	mov    WORD PTR [rbp-0x16],dx
  403463:	mov    rdi,QWORD PTR [rbp-0x10]
  403467:	call   405660 <main@@Base+0x1c0>
  40346c:	cmp    eax,0x0
  40346f:	jne    4034a0 <create_monster_bottom_up@@Base+0x2b0>
  403475:	mov    rdi,QWORD PTR [rbp-0x10]
  403479:	mov    esi,DWORD PTR [rbp-0x14]
  40347c:	call   405680 <main@@Base+0x1e0>
  403481:	cmp    eax,0x0
  403484:	jne    4034a0 <create_monster_bottom_up@@Base+0x2b0>
  40348a:	mov    rdi,QWORD PTR [rbp-0x10]
  40348e:	movsx  esi,WORD PTR [rbp-0x16]
  403492:	call   4056e0 <main@@Base+0x240>
  403497:	cmp    eax,0x0
  40349a:	je     4034ac <create_monster_bottom_up@@Base+0x2bc>
  4034a0:	mov    DWORD PTR [rbp-0x4],0x0
  4034a7:	jmp    4034b8 <create_monster_bottom_up@@Base+0x2c8>
  4034ac:	mov    rdi,QWORD PTR [rbp-0x10]
  4034b0:	call   405760 <main@@Base+0x2c0>
  4034b5:	mov    DWORD PTR [rbp-0x4],eax
  4034b8:	mov    eax,DWORD PTR [rbp-0x4]
  4034bb:	add    rsp,0x20
  4034bf:	pop    rbp
  4034c0:	ret    
  4034c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4034d0:	push   rbp
  4034d1:	mov    rbp,rsp
  4034d4:	sub    rsp,0x20
  4034d8:	mov    QWORD PTR [rbp-0x8],rdi
  4034dc:	mov    QWORD PTR [rbp-0x10],rsi
  4034e0:	mov    QWORD PTR [rbp-0x18],rdx
  4034e4:	mov    rdi,QWORD PTR [rbp-0x8]
  4034e8:	mov    rsi,QWORD PTR [rbp-0x10]
  4034ec:	mov    rdx,QWORD PTR [rbp-0x18]
  4034f0:	mov    ecx,0x1
  4034f5:	mov    r8d,0x1
  4034fb:	mov    r9d,0xffffffff
  403501:	call   409b90 <flatcc_builder_create_vector@@Base>
  403506:	add    rsp,0x20
  40350a:	pop    rbp
  40350b:	ret    
  40350c:	nop    DWORD PTR [rax+0x0]
  403510:	push   rbp
  403511:	mov    rbp,rsp
  403514:	sub    rsp,0x10
  403518:	mov    QWORD PTR [rbp-0x8],rdi
  40351c:	mov    rdi,QWORD PTR [rbp-0x8]
  403520:	call   408970 <flatcc_builder_start_offset_vector@@Base>
  403525:	add    rsp,0x10
  403529:	pop    rbp
  40352a:	ret    
  40352b:	nop    DWORD PTR [rax+rax*1+0x0]
  403530:	push   rbp
  403531:	mov    rbp,rsp
  403534:	sub    rsp,0x20
  403538:	mov    QWORD PTR [rbp-0x8],rdi
  40353c:	mov    DWORD PTR [rbp-0xc],esi
  40353f:	cmp    DWORD PTR [rbp-0xc],0x0
  403543:	je     40355e <create_monster_bottom_up@@Base+0x36e>
  403549:	mov    rdi,QWORD PTR [rbp-0x8]
  40354d:	mov    esi,DWORD PTR [rbp-0xc]
  403550:	call   4081c0 <flatcc_builder_offset_vector_push@@Base>
  403555:	mov    QWORD PTR [rbp-0x18],rax
  403559:	jmp    40356b <create_monster_bottom_up@@Base+0x37b>
  40355e:	xor    eax,eax
  403560:	mov    ecx,eax
  403562:	mov    QWORD PTR [rbp-0x18],rcx
  403566:	jmp    40356b <create_monster_bottom_up@@Base+0x37b>
  40356b:	mov    rax,QWORD PTR [rbp-0x18]
  40356f:	add    rsp,0x20
  403573:	pop    rbp
  403574:	ret    
  403575:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40357f:	nop
  403580:	push   rbp
  403581:	mov    rbp,rsp
  403584:	sub    rsp,0x10
  403588:	mov    QWORD PTR [rbp-0x8],rdi
  40358c:	mov    rdi,QWORD PTR [rbp-0x8]
  403590:	call   408a80 <flatcc_builder_end_offset_vector@@Base>
  403595:	add    rsp,0x10
  403599:	pop    rbp
  40359a:	ret    
  40359b:	nop    DWORD PTR [rax+rax*1+0x0]
  4035a0:	push   rbp
  4035a1:	mov    rbp,rsp
  4035a4:	mov    DWORD PTR [rbp-0xc],edi
  4035a7:	mov    BYTE PTR [rbp-0x8],0x1
  4035ab:	mov    eax,DWORD PTR [rbp-0xc]
  4035ae:	mov    DWORD PTR [rbp-0x4],eax
  4035b1:	mov    rax,QWORD PTR [rbp-0x8]
  4035b5:	pop    rbp
  4035b6:	ret    
  4035b7:	nop    WORD PTR [rax+rax*1+0x0]
  4035c0:	push   rbp
  4035c1:	mov    rbp,rsp
  4035c4:	push   r14
  4035c6:	push   rbx
  4035c7:	sub    rsp,0x60
  4035cb:	mov    rax,QWORD PTR [rbp+0x20]
  4035cf:	mov    r10d,DWORD PTR [rbp+0x18]
  4035d3:	mov    r11b,BYTE PTR [rbp+0x10]
  4035d7:	xor    ebx,ebx
  4035d9:	mov    r14d,ebx
  4035dc:	mov    QWORD PTR [rbp-0x20],rdi
  4035e0:	mov    QWORD PTR [rbp-0x28],rsi
  4035e4:	mov    WORD PTR [rbp-0x2a],dx
  4035e8:	mov    WORD PTR [rbp-0x2c],cx
  4035ec:	mov    DWORD PTR [rbp-0x30],r8d
  4035f0:	mov    DWORD PTR [rbp-0x34],r9d
  4035f4:	mov    rdi,QWORD PTR [rbp-0x20]
  4035f8:	mov    rsi,r14
  4035fb:	mov    QWORD PTR [rbp-0x40],rax
  4035ff:	mov    DWORD PTR [rbp-0x44],r10d
  403603:	mov    BYTE PTR [rbp-0x45],r11b
  403607:	call   405800 <main@@Base+0x360>
  40360c:	cmp    eax,0x0
  40360f:	je     403621 <create_monster_bottom_up@@Base+0x431>
  403615:	mov    DWORD PTR [rbp-0x14],0x0
  40361c:	jmp    40368b <create_monster_bottom_up@@Base+0x49b>
  403621:	mov    rdi,QWORD PTR [rbp-0x20]
  403625:	mov    rax,QWORD PTR [rbp-0x20]
  403629:	mov    rsi,QWORD PTR [rbp-0x28]
  40362d:	mov    cx,WORD PTR [rbp-0x2a]
  403631:	mov    dx,WORD PTR [rbp-0x2c]
  403635:	mov    r8d,DWORD PTR [rbp-0x30]
  403639:	mov    r9d,DWORD PTR [rbp-0x34]
  40363d:	mov    r10b,BYTE PTR [rbp+0x10]
  403641:	mov    r11d,DWORD PTR [rbp+0x18]
  403645:	mov    rbx,QWORD PTR [rbp+0x20]
  403649:	mov    QWORD PTR [rbp-0x50],rdi
  40364d:	mov    rdi,rax
  403650:	movsx  r14d,cx
  403654:	mov    WORD PTR [rbp-0x52],dx
  403658:	mov    edx,r14d
  40365b:	mov    cx,WORD PTR [rbp-0x52]
  40365f:	movsx  r14d,cx
  403663:	mov    ecx,r14d
  403666:	movsx  r14d,r10b
  40366a:	mov    DWORD PTR [rsp],r14d
  40366e:	mov    DWORD PTR [rsp+0x8],r11d
  403673:	mov    QWORD PTR [rsp+0x10],rbx
  403678:	call   405860 <main@@Base+0x3c0>
  40367d:	mov    rdi,QWORD PTR [rbp-0x50]
  403681:	mov    esi,eax
  403683:	call   405830 <main@@Base+0x390>
  403688:	mov    DWORD PTR [rbp-0x14],eax
  40368b:	mov    eax,DWORD PTR [rbp-0x14]
  40368e:	add    rsp,0x60
  403692:	pop    rbx
  403693:	pop    r14
  403695:	pop    rbp
  403696:	ret    
  403697:	nop    WORD PTR [rax+rax*1+0x0]
  4036a0:	push   rbp
  4036a1:	mov    rbp,rsp
  4036a4:	sub    rsp,0x10
  4036a8:	xor    eax,eax
  4036aa:	mov    esi,eax
  4036ac:	mov    QWORD PTR [rbp-0x8],rdi
  4036b0:	mov    rdi,QWORD PTR [rbp-0x8]
  4036b4:	call   405800 <main@@Base+0x360>
  4036b9:	cmp    eax,0x0
  4036bc:	je     4036cf <create_monster_bottom_up@@Base+0x4df>
  4036c2:	mov    eax,0xffffffff
  4036c7:	mov    DWORD PTR [rbp-0xc],eax
  4036ca:	jmp    4036db <create_monster_bottom_up@@Base+0x4eb>
  4036cf:	mov    rdi,QWORD PTR [rbp-0x8]
  4036d3:	call   405990 <main@@Base+0x4f0>
  4036d8:	mov    DWORD PTR [rbp-0xc],eax
  4036db:	mov    eax,DWORD PTR [rbp-0xc]
  4036de:	add    rsp,0x10
  4036e2:	pop    rbp
  4036e3:	ret    
  4036e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4036ee:	xchg   ax,ax
  4036f0:	push   rbp
  4036f1:	mov    rbp,rsp
  4036f4:	sub    rsp,0x30
  4036f8:	mov    QWORD PTR [rbp-0x10],rdi
  4036fc:	vmovss DWORD PTR [rbp-0x14],xmm0
  403701:	vmovss DWORD PTR [rbp-0x18],xmm1
  403706:	vmovss DWORD PTR [rbp-0x1c],xmm2
  40370b:	mov    rdi,QWORD PTR [rbp-0x10]
  40370f:	call   405bf0 <main@@Base+0x750>
  403714:	mov    QWORD PTR [rbp-0x28],rax
  403718:	cmp    QWORD PTR [rbp-0x28],0x0
  40371d:	jne    40372f <create_monster_bottom_up@@Base+0x53f>
  403723:	mov    DWORD PTR [rbp-0x4],0x0
  40372a:	jmp    40374e <create_monster_bottom_up@@Base+0x55e>
  40372f:	mov    rdi,QWORD PTR [rbp-0x28]
  403733:	vmovss xmm0,DWORD PTR [rbp-0x14]
  403738:	vmovss xmm1,DWORD PTR [rbp-0x18]
  40373d:	vmovss xmm2,DWORD PTR [rbp-0x1c]
  403742:	call   405cf0 <main@@Base+0x850>
  403747:	mov    DWORD PTR [rbp-0x4],0x0
  40374e:	mov    eax,DWORD PTR [rbp-0x4]
  403751:	add    rsp,0x30
  403755:	pop    rbp
  403756:	ret    
  403757:	nop    WORD PTR [rax+rax*1+0x0]
  403760:	push   rbp
  403761:	mov    rbp,rsp
  403764:	sub    rsp,0x20
  403768:	mov    QWORD PTR [rbp-0x10],rdi
  40376c:	mov    WORD PTR [rbp-0x12],si
  403770:	movsx  eax,WORD PTR [rbp-0x12]
  403774:	cmp    eax,0x64
  403777:	jne    403789 <create_monster_bottom_up@@Base+0x599>
  40377d:	mov    DWORD PTR [rbp-0x4],0x0
  403784:	jmp    4037ce <create_monster_bottom_up@@Base+0x5de>
  403789:	mov    rdi,QWORD PTR [rbp-0x10]
  40378d:	mov    eax,0x2
  403792:	mov    esi,eax
  403794:	mov    edx,0x2
  403799:	mov    ecx,eax
  40379b:	call   40a5c0 <flatcc_builder_table_add@@Base>
  4037a0:	mov    QWORD PTR [rbp-0x20],rax
  4037a4:	cmp    rax,0x0
  4037a8:	jne    4037ba <create_monster_bottom_up@@Base+0x5ca>
  4037ae:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4037b5:	jmp    4037ce <create_monster_bottom_up@@Base+0x5de>
  4037ba:	mov    rdi,QWORD PTR [rbp-0x20]
  4037be:	movsx  esi,WORD PTR [rbp-0x12]
  4037c2:	call   4057c0 <main@@Base+0x320>
  4037c7:	mov    DWORD PTR [rbp-0x4],0x0
  4037ce:	mov    eax,DWORD PTR [rbp-0x4]
  4037d1:	add    rsp,0x20
  4037d5:	pop    rbp
  4037d6:	ret    
  4037d7:	nop    WORD PTR [rax+rax*1+0x0]
  4037e0:	push   rbp
  4037e1:	mov    rbp,rsp
  4037e4:	sub    rsp,0x20
  4037e8:	mov    QWORD PTR [rbp-0x8],rdi
  4037ec:	mov    DWORD PTR [rbp-0xc],esi
  4037ef:	cmp    DWORD PTR [rbp-0xc],0x0
  4037f3:	je     403828 <create_monster_bottom_up@@Base+0x638>
  4037f9:	mov    rdi,QWORD PTR [rbp-0x8]
  4037fd:	mov    esi,0x3
  403802:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  403807:	mov    QWORD PTR [rbp-0x18],rax
  40380b:	cmp    rax,0x0
  40380f:	je     403828 <create_monster_bottom_up@@Base+0x638>
  403815:	xor    eax,eax
  403817:	mov    ecx,DWORD PTR [rbp-0xc]
  40381a:	mov    rdx,QWORD PTR [rbp-0x18]
  40381e:	mov    DWORD PTR [rdx],ecx
  403820:	mov    DWORD PTR [rbp-0x1c],eax
  403823:	jmp    403835 <create_monster_bottom_up@@Base+0x645>
  403828:	mov    eax,0xffffffff
  40382d:	mov    DWORD PTR [rbp-0x1c],eax
  403830:	jmp    403835 <create_monster_bottom_up@@Base+0x645>
  403835:	mov    eax,DWORD PTR [rbp-0x1c]
  403838:	add    rsp,0x20
  40383c:	pop    rbp
  40383d:	ret    
  40383e:	xchg   ax,ax
  403840:	push   rbp
  403841:	mov    rbp,rsp
  403844:	sub    rsp,0x20
  403848:	mov    QWORD PTR [rbp-0x8],rdi
  40384c:	mov    DWORD PTR [rbp-0xc],esi
  40384f:	cmp    DWORD PTR [rbp-0xc],0x0
  403853:	je     403888 <create_monster_bottom_up@@Base+0x698>
  403859:	mov    rdi,QWORD PTR [rbp-0x8]
  40385d:	mov    esi,0x5
  403862:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  403867:	mov    QWORD PTR [rbp-0x18],rax
  40386b:	cmp    rax,0x0
  40386f:	je     403888 <create_monster_bottom_up@@Base+0x698>
  403875:	xor    eax,eax
  403877:	mov    ecx,DWORD PTR [rbp-0xc]
  40387a:	mov    rdx,QWORD PTR [rbp-0x18]
  40387e:	mov    DWORD PTR [rdx],ecx
  403880:	mov    DWORD PTR [rbp-0x1c],eax
  403883:	jmp    403895 <create_monster_bottom_up@@Base+0x6a5>
  403888:	mov    eax,0xffffffff
  40388d:	mov    DWORD PTR [rbp-0x1c],eax
  403890:	jmp    403895 <create_monster_bottom_up@@Base+0x6a5>
  403895:	mov    eax,DWORD PTR [rbp-0x1c]
  403898:	add    rsp,0x20
  40389c:	pop    rbp
  40389d:	ret    
  40389e:	xchg   ax,ax
  4038a0:	push   rbp
  4038a1:	mov    rbp,rsp
  4038a4:	sub    rsp,0x20
  4038a8:	mov    QWORD PTR [rbp-0x10],rdi
  4038ac:	mov    BYTE PTR [rbp-0x11],sil
  4038b0:	movsx  eax,BYTE PTR [rbp-0x11]
  4038b4:	cmp    eax,0x2
  4038b7:	jne    4038c9 <create_monster_bottom_up@@Base+0x6d9>
  4038bd:	mov    DWORD PTR [rbp-0x4],0x0
  4038c4:	jmp    40390f <create_monster_bottom_up@@Base+0x71f>
  4038c9:	mov    rdi,QWORD PTR [rbp-0x10]
  4038cd:	mov    esi,0x6
  4038d2:	mov    edx,0x1
  4038d7:	mov    ecx,0x1
  4038dc:	call   40a5c0 <flatcc_builder_table_add@@Base>
  4038e1:	mov    QWORD PTR [rbp-0x20],rax
  4038e5:	cmp    rax,0x0
  4038e9:	jne    4038fb <create_monster_bottom_up@@Base+0x70b>
  4038ef:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4038f6:	jmp    40390f <create_monster_bottom_up@@Base+0x71f>
  4038fb:	mov    rdi,QWORD PTR [rbp-0x20]
  4038ff:	movsx  esi,BYTE PTR [rbp-0x11]
  403903:	call   405da0 <main@@Base+0x900>
  403908:	mov    DWORD PTR [rbp-0x4],0x0
  40390f:	mov    eax,DWORD PTR [rbp-0x4]
  403912:	add    rsp,0x20
  403916:	pop    rbp
  403917:	ret    
  403918:	nop    DWORD PTR [rax+rax*1+0x0]
  403920:	push   rbp
  403921:	mov    rbp,rsp
  403924:	sub    rsp,0x20
  403928:	mov    QWORD PTR [rbp-0x8],rdi
  40392c:	mov    DWORD PTR [rbp-0xc],esi
  40392f:	cmp    DWORD PTR [rbp-0xc],0x0
  403933:	je     403968 <create_monster_bottom_up@@Base+0x778>
  403939:	mov    rdi,QWORD PTR [rbp-0x8]
  40393d:	mov    esi,0x7
  403942:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  403947:	mov    QWORD PTR [rbp-0x18],rax
  40394b:	cmp    rax,0x0
  40394f:	je     403968 <create_monster_bottom_up@@Base+0x778>
  403955:	xor    eax,eax
  403957:	mov    ecx,DWORD PTR [rbp-0xc]
  40395a:	mov    rdx,QWORD PTR [rbp-0x18]
  40395e:	mov    DWORD PTR [rdx],ecx
  403960:	mov    DWORD PTR [rbp-0x1c],eax
  403963:	jmp    403975 <create_monster_bottom_up@@Base+0x785>
  403968:	mov    eax,0xffffffff
  40396d:	mov    DWORD PTR [rbp-0x1c],eax
  403970:	jmp    403975 <create_monster_bottom_up@@Base+0x785>
  403975:	mov    eax,DWORD PTR [rbp-0x1c]
  403978:	add    rsp,0x20
  40397c:	pop    rbp
  40397d:	ret    
  40397e:	xchg   ax,ax
  403980:	push   rbp
  403981:	mov    rbp,rsp
  403984:	sub    rsp,0x30
  403988:	mov    QWORD PTR [rbp-0x10],rsi
  40398c:	mov    QWORD PTR [rbp-0x18],rdi
  403990:	movzx  eax,BYTE PTR [rbp-0x10]
  403994:	cmp    eax,0x0
  403997:	jne    4039a9 <create_monster_bottom_up@@Base+0x7b9>
  40399d:	mov    DWORD PTR [rbp-0x4],0x0
  4039a4:	jmp    403a26 <create_monster_bottom_up@@Base+0x836>
  4039a9:	cmp    DWORD PTR [rbp-0xc],0x0
  4039ad:	jne    4039bf <create_monster_bottom_up@@Base+0x7cf>
  4039b3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4039ba:	jmp    403a26 <create_monster_bottom_up@@Base+0x836>
  4039bf:	mov    rdi,QWORD PTR [rbp-0x18]
  4039c3:	mov    esi,0x8
  4039c8:	mov    edx,0x1
  4039cd:	mov    ecx,0x1
  4039d2:	call   40a5c0 <flatcc_builder_table_add@@Base>
  4039d7:	mov    QWORD PTR [rbp-0x28],rax
  4039db:	cmp    rax,0x0
  4039df:	je     403a01 <create_monster_bottom_up@@Base+0x811>
  4039e5:	mov    rdi,QWORD PTR [rbp-0x18]
  4039e9:	mov    esi,0x9
  4039ee:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  4039f3:	mov    QWORD PTR [rbp-0x20],rax
  4039f7:	cmp    rax,0x0
  4039fb:	jne    403a0d <create_monster_bottom_up@@Base+0x81d>
  403a01:	mov    DWORD PTR [rbp-0x4],0xffffffff
  403a08:	jmp    403a26 <create_monster_bottom_up@@Base+0x836>
  403a0d:	mov    al,BYTE PTR [rbp-0x10]
  403a10:	mov    rcx,QWORD PTR [rbp-0x28]
  403a14:	mov    BYTE PTR [rcx],al
  403a16:	mov    edx,DWORD PTR [rbp-0xc]
  403a19:	mov    rcx,QWORD PTR [rbp-0x20]
  403a1d:	mov    DWORD PTR [rcx],edx
  403a1f:	mov    DWORD PTR [rbp-0x4],0x0
  403a26:	mov    eax,DWORD PTR [rbp-0x4]
  403a29:	add    rsp,0x30
  403a2d:	pop    rbp
  403a2e:	ret    
  403a2f:	nop
  403a30:	push   rbp
  403a31:	mov    rbp,rsp
  403a34:	sub    rsp,0x10
  403a38:	mov    QWORD PTR [rbp-0x8],rdi
  403a3c:	mov    rdi,QWORD PTR [rbp-0x8]
  403a40:	mov    rax,QWORD PTR [rbp-0x8]
  403a44:	mov    QWORD PTR [rbp-0x10],rdi
  403a48:	mov    rdi,rax
  403a4b:	call   405b90 <main@@Base+0x6f0>
  403a50:	mov    rdi,QWORD PTR [rbp-0x10]
  403a54:	mov    esi,eax
  403a56:	call   405830 <main@@Base+0x390>
  403a5b:	add    rsp,0x10
  403a5f:	pop    rbp
  403a60:	ret    
  403a61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403a70 <create_monster_top_down@@Base>:
  403a70:	push   rbp
  403a71:	mov    rbp,rsp
  403a74:	sub    rsp,0x70
  403a78:	mov    QWORD PTR [rbp-0x8],rdi
  403a7c:	mov    rax,QWORD PTR [rip+0x9ead]        # 40d930 <_IO_stdin_used@@Base+0x930>
  403a83:	mov    QWORD PTR [rbp-0x12],rax
  403a87:	mov    cx,WORD PTR [rip+0x9eaa]        # 40d938 <_IO_stdin_used@@Base+0x938>
  403a8e:	mov    WORD PTR [rbp-0xa],cx
  403a92:	mov    QWORD PTR [rbp-0x20],0xa
  403a9a:	mov    rdi,QWORD PTR [rbp-0x8]
  403a9e:	call   4036a0 <create_monster_bottom_up@@Base+0x4b0>
  403aa3:	vmovss xmm0,DWORD PTR [rip+0x9559]        # 40d004 <_IO_stdin_used@@Base+0x4>
  403aab:	vmovss xmm1,DWORD PTR [rip+0x9555]        # 40d008 <_IO_stdin_used@@Base+0x8>
  403ab3:	vmovss xmm2,DWORD PTR [rip+0x9551]        # 40d00c <_IO_stdin_used@@Base+0xc>
  403abb:	mov    rdi,QWORD PTR [rbp-0x8]
  403abf:	mov    DWORD PTR [rbp-0x28],eax
  403ac2:	call   4036f0 <create_monster_bottom_up@@Base+0x500>
  403ac7:	mov    rdi,QWORD PTR [rbp-0x8]
  403acb:	mov    esi,0x12c
  403ad0:	mov    DWORD PTR [rbp-0x2c],eax
  403ad3:	call   403760 <create_monster_bottom_up@@Base+0x570>
  403ad8:	mov    rdi,QWORD PTR [rbp-0x8]
  403adc:	lea    rsi,[rip+0x9537]        # 40d01a <_IO_stdin_used@@Base+0x1a>
  403ae3:	mov    DWORD PTR [rbp-0x30],eax
  403ae6:	call   403bb0 <create_monster_top_down@@Base+0x140>
  403aeb:	lea    rsi,[rbp-0x12]
  403aef:	mov    rdi,QWORD PTR [rbp-0x8]
  403af3:	mov    rdx,QWORD PTR [rbp-0x20]
  403af7:	mov    DWORD PTR [rbp-0x34],eax
  403afa:	call   403bf0 <create_monster_top_down@@Base+0x180>
  403aff:	xor    esi,esi
  403b01:	mov    rdi,QWORD PTR [rbp-0x8]
  403b05:	mov    DWORD PTR [rbp-0x38],eax
  403b08:	call   4038a0 <create_monster_bottom_up@@Base+0x6b0>
  403b0d:	mov    rdi,QWORD PTR [rbp-0x8]
  403b11:	mov    DWORD PTR [rbp-0x3c],eax
  403b14:	call   403c40 <create_monster_top_down@@Base+0x1d0>
  403b19:	mov    rdi,QWORD PTR [rbp-0x8]
  403b1d:	mov    rdx,QWORD PTR [rbp-0x8]
  403b21:	mov    QWORD PTR [rbp-0x48],rdi
  403b25:	mov    rdi,rdx
  403b28:	lea    rsi,[rip+0x94e1]        # 40d010 <_IO_stdin_used@@Base+0x10>
  403b2f:	mov    DWORD PTR [rbp-0x4c],eax
  403b32:	call   403420 <create_monster_bottom_up@@Base+0x230>
  403b37:	mov    rdi,QWORD PTR [rbp-0x48]
  403b3b:	mov    esi,eax
  403b3d:	mov    edx,0x3
  403b42:	call   403c60 <create_monster_top_down@@Base+0x1f0>
  403b47:	mov    rdi,QWORD PTR [rbp-0x8]
  403b4b:	mov    r8,QWORD PTR [rbp-0x8]
  403b4f:	mov    QWORD PTR [rbp-0x58],rdi
  403b53:	mov    rdi,r8
  403b56:	lea    rsi,[rip+0x94b9]        # 40d016 <_IO_stdin_used@@Base+0x16>
  403b5d:	mov    QWORD PTR [rbp-0x60],rax
  403b61:	call   403420 <create_monster_bottom_up@@Base+0x230>
  403b66:	mov    rdi,QWORD PTR [rbp-0x58]
  403b6a:	mov    esi,eax
  403b6c:	mov    edx,0x5
  403b71:	call   403c60 <create_monster_top_down@@Base+0x1f0>
  403b76:	mov    edx,DWORD PTR [rax]
  403b78:	mov    DWORD PTR [rbp-0x24],edx
  403b7b:	mov    rdi,QWORD PTR [rbp-0x8]
  403b7f:	call   403ca0 <create_monster_top_down@@Base+0x230>
  403b84:	mov    rdi,QWORD PTR [rbp-0x8]
  403b88:	mov    esi,DWORD PTR [rbp-0x24]
  403b8b:	mov    DWORD PTR [rbp-0x64],eax
  403b8e:	call   403ce0 <create_monster_top_down@@Base+0x270>
  403b93:	mov    rdi,QWORD PTR [rbp-0x8]
  403b97:	mov    DWORD PTR [rbp-0x68],eax
  403b9a:	call   403a30 <create_monster_bottom_up@@Base+0x840>
  403b9f:	xor    edx,edx
  403ba1:	mov    DWORD PTR [rbp-0x6c],eax
  403ba4:	mov    eax,edx
  403ba6:	add    rsp,0x70
  403baa:	pop    rbp
  403bab:	ret    
  403bac:	nop    DWORD PTR [rax+0x0]
  403bb0:	push   rbp
  403bb1:	mov    rbp,rsp
  403bb4:	sub    rsp,0x20
  403bb8:	mov    QWORD PTR [rbp-0x8],rdi
  403bbc:	mov    QWORD PTR [rbp-0x10],rsi
  403bc0:	mov    rdi,QWORD PTR [rbp-0x8]
  403bc4:	mov    rax,QWORD PTR [rbp-0x8]
  403bc8:	mov    rsi,QWORD PTR [rbp-0x10]
  403bcc:	mov    QWORD PTR [rbp-0x18],rdi
  403bd0:	mov    rdi,rax
  403bd3:	call   40b120 <flatcc_builder_create_string_str@@Base>
  403bd8:	mov    rdi,QWORD PTR [rbp-0x18]
  403bdc:	mov    esi,eax
  403bde:	call   4037e0 <create_monster_bottom_up@@Base+0x5f0>
  403be3:	add    rsp,0x20
  403be7:	pop    rbp
  403be8:	ret    
  403be9:	nop    DWORD PTR [rax+0x0]
  403bf0:	push   rbp
  403bf1:	mov    rbp,rsp
  403bf4:	sub    rsp,0x20
  403bf8:	mov    QWORD PTR [rbp-0x8],rdi
  403bfc:	mov    QWORD PTR [rbp-0x10],rsi
  403c00:	mov    QWORD PTR [rbp-0x18],rdx
  403c04:	mov    rdi,QWORD PTR [rbp-0x8]
  403c08:	mov    rax,QWORD PTR [rbp-0x8]
  403c0c:	mov    rsi,QWORD PTR [rbp-0x10]
  403c10:	mov    rdx,QWORD PTR [rbp-0x18]
  403c14:	mov    QWORD PTR [rbp-0x20],rdi
  403c18:	mov    rdi,rax
  403c1b:	call   4034d0 <create_monster_bottom_up@@Base+0x2e0>
  403c20:	mov    rdi,QWORD PTR [rbp-0x20]
  403c24:	mov    esi,eax
  403c26:	call   403840 <create_monster_bottom_up@@Base+0x650>
  403c2b:	add    rsp,0x20
  403c2f:	pop    rbp
  403c30:	ret    
  403c31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c3b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c40:	push   rbp
  403c41:	mov    rbp,rsp
  403c44:	sub    rsp,0x10
  403c48:	mov    QWORD PTR [rbp-0x8],rdi
  403c4c:	mov    rdi,QWORD PTR [rbp-0x8]
  403c50:	call   408970 <flatcc_builder_start_offset_vector@@Base>
  403c55:	add    rsp,0x10
  403c59:	pop    rbp
  403c5a:	ret    
  403c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  403c60:	push   rbp
  403c61:	mov    rbp,rsp
  403c64:	sub    rsp,0x20
  403c68:	mov    QWORD PTR [rbp-0x8],rdi
  403c6c:	mov    DWORD PTR [rbp-0xc],esi
  403c6f:	mov    WORD PTR [rbp-0xe],dx
  403c73:	mov    rdi,QWORD PTR [rbp-0x8]
  403c77:	mov    rax,QWORD PTR [rbp-0x8]
  403c7b:	mov    esi,DWORD PTR [rbp-0xc]
  403c7e:	mov    QWORD PTR [rbp-0x18],rdi
  403c82:	mov    rdi,rax
  403c85:	movsx  edx,WORD PTR [rbp-0xe]
  403c89:	call   403450 <create_monster_bottom_up@@Base+0x260>
  403c8e:	mov    rdi,QWORD PTR [rbp-0x18]
  403c92:	mov    esi,eax
  403c94:	call   405de0 <main@@Base+0x940>
  403c99:	add    rsp,0x20
  403c9d:	pop    rbp
  403c9e:	ret    
  403c9f:	nop
  403ca0:	push   rbp
  403ca1:	mov    rbp,rsp
  403ca4:	sub    rsp,0x10
  403ca8:	mov    QWORD PTR [rbp-0x8],rdi
  403cac:	mov    rdi,QWORD PTR [rbp-0x8]
  403cb0:	mov    rax,QWORD PTR [rbp-0x8]
  403cb4:	mov    QWORD PTR [rbp-0x10],rdi
  403cb8:	mov    rdi,rax
  403cbb:	call   408a80 <flatcc_builder_end_offset_vector@@Base>
  403cc0:	mov    rdi,QWORD PTR [rbp-0x10]
  403cc4:	mov    esi,eax
  403cc6:	call   403920 <create_monster_bottom_up@@Base+0x730>
  403ccb:	add    rsp,0x10
  403ccf:	pop    rbp
  403cd0:	ret    
  403cd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  403ce0:	push   rbp
  403ce1:	mov    rbp,rsp
  403ce4:	sub    rsp,0x20
  403ce8:	mov    QWORD PTR [rbp-0x8],rdi
  403cec:	mov    DWORD PTR [rbp-0xc],esi
  403cef:	mov    rdi,QWORD PTR [rbp-0x8]
  403cf3:	mov    eax,DWORD PTR [rbp-0xc]
  403cf6:	mov    QWORD PTR [rbp-0x20],rdi
  403cfa:	mov    edi,eax
  403cfc:	call   4035a0 <create_monster_bottom_up@@Base+0x3b0>
  403d01:	mov    QWORD PTR [rbp-0x18],rax
  403d05:	mov    rsi,QWORD PTR [rbp-0x18]
  403d09:	mov    rdi,QWORD PTR [rbp-0x20]
  403d0d:	call   403980 <create_monster_bottom_up@@Base+0x790>
  403d12:	add    rsp,0x20
  403d16:	pop    rbp
  403d17:	ret    
  403d18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403d20 <access_monster_buffer@@Base>:
  403d20:	push   rbp
  403d21:	mov    rbp,rsp
  403d24:	sub    rsp,0xb0
  403d2b:	mov    QWORD PTR [rbp-0x8],rdi
  403d2f:	mov    rdi,QWORD PTR [rbp-0x8]
  403d33:	call   4043e0 <access_monster_buffer@@Base+0x6c0>
  403d38:	mov    QWORD PTR [rbp-0x10],rax
  403d3c:	cmp    QWORD PTR [rbp-0x10],0x0
  403d41:	jne    403d66 <access_monster_buffer@@Base+0x46>
  403d47:	lea    rdi,[rip+0xafe4]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403d4e:	lea    rsi,[rip+0x92c9]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403d55:	mov    edx,0xd3
  403d5a:	lea    rcx,[rip+0x9321]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403d61:	call   403070 <__assert_fail@plt>
  403d66:	jmp    403d6b <access_monster_buffer@@Base+0x4b>
  403d6b:	mov    rdi,QWORD PTR [rbp-0x10]
  403d6f:	call   404450 <access_monster_buffer@@Base+0x730>
  403d74:	mov    WORD PTR [rbp-0x12],ax
  403d78:	mov    rdi,QWORD PTR [rbp-0x10]
  403d7c:	call   404560 <access_monster_buffer@@Base+0x840>
  403d81:	mov    WORD PTR [rbp-0x14],ax
  403d85:	mov    rdi,QWORD PTR [rbp-0x10]
  403d89:	call   404670 <access_monster_buffer@@Base+0x950>
  403d8e:	mov    QWORD PTR [rbp-0x20],rax
  403d92:	mov    rdi,QWORD PTR [rbp-0x20]
  403d96:	call   4047a0 <access_monster_buffer@@Base+0xa80>
  403d9b:	mov    QWORD PTR [rbp-0x28],rax
  403d9f:	movzx  eax,WORD PTR [rbp-0x12]
  403da3:	cmp    eax,0x12c
  403da8:	je     403dcd <access_monster_buffer@@Base+0xad>
  403dae:	lea    rdi,[rip+0xaf7d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403db5:	lea    rsi,[rip+0x9262]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403dbc:	mov    edx,0xdb
  403dc1:	lea    rcx,[rip+0x92ba]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403dc8:	call   403070 <__assert_fail@plt>
  403dcd:	jmp    403dd2 <access_monster_buffer@@Base+0xb2>
  403dd2:	jmp    403dd7 <access_monster_buffer@@Base+0xb7>
  403dd7:	movzx  eax,WORD PTR [rbp-0x14]
  403ddb:	cmp    eax,0x96
  403de0:	je     403e05 <access_monster_buffer@@Base+0xe5>
  403de6:	lea    rdi,[rip+0xaf45]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403ded:	lea    rsi,[rip+0x922a]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403df4:	mov    edx,0xdd
  403df9:	lea    rcx,[rip+0x9282]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403e00:	call   403070 <__assert_fail@plt>
  403e05:	jmp    403e0a <access_monster_buffer@@Base+0xea>
  403e0a:	jmp    403e0f <access_monster_buffer@@Base+0xef>
  403e0f:	xor    eax,eax
  403e11:	mov    rdi,QWORD PTR [rbp-0x20]
  403e15:	lea    rsi,[rip+0x91fe]        # 40d01a <_IO_stdin_used@@Base+0x1a>
  403e1c:	mov    DWORD PTR [rbp-0xa0],eax
  403e22:	call   4030b0 <strcmp@plt>
  403e27:	mov    ecx,DWORD PTR [rbp-0xa0]
  403e2d:	cmp    ecx,eax
  403e2f:	je     403e54 <access_monster_buffer@@Base+0x134>
  403e35:	lea    rdi,[rip+0xaef6]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403e3c:	lea    rsi,[rip+0x91db]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403e43:	mov    edx,0xde
  403e48:	lea    rcx,[rip+0x9233]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403e4f:	call   403070 <__assert_fail@plt>
  403e54:	jmp    403e59 <access_monster_buffer@@Base+0x139>
  403e59:	jmp    403e5e <access_monster_buffer@@Base+0x13e>
  403e5e:	cmp    QWORD PTR [rbp-0x28],0x3
  403e63:	je     403e88 <access_monster_buffer@@Base+0x168>
  403e69:	lea    rdi,[rip+0xaec2]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403e70:	lea    rsi,[rip+0x91a7]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403e77:	mov    edx,0xdf
  403e7c:	lea    rcx,[rip+0x91ff]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403e83:	call   403070 <__assert_fail@plt>
  403e88:	jmp    403e8d <access_monster_buffer@@Base+0x16d>
  403e8d:	mov    rdi,QWORD PTR [rbp-0x10]
  403e91:	call   4047f0 <access_monster_buffer@@Base+0xad0>
  403e96:	mov    DWORD PTR [rbp-0x2c],eax
  403e99:	mov    rdi,QWORD PTR [rbp-0x10]
  403e9d:	call   4048e0 <access_monster_buffer@@Base+0xbc0>
  403ea2:	mov    DWORD PTR [rbp-0x30],eax
  403ea5:	cmp    DWORD PTR [rbp-0x2c],0x0
  403ea9:	jne    403ece <access_monster_buffer@@Base+0x1ae>
  403eaf:	lea    rdi,[rip+0xae7c]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403eb6:	lea    rsi,[rip+0x9161]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403ebd:	mov    edx,0xe3
  403ec2:	lea    rcx,[rip+0x91b9]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403ec9:	call   403070 <__assert_fail@plt>
  403ece:	jmp    403ed3 <access_monster_buffer@@Base+0x1b3>
  403ed3:	jmp    403ed8 <access_monster_buffer@@Base+0x1b8>
  403ed8:	cmp    DWORD PTR [rbp-0x30],0x0
  403edc:	je     403f01 <access_monster_buffer@@Base+0x1e1>
  403ee2:	lea    rdi,[rip+0xae49]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403ee9:	lea    rsi,[rip+0x912e]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403ef0:	mov    edx,0xe4
  403ef5:	lea    rcx,[rip+0x9186]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403efc:	call   403070 <__assert_fail@plt>
  403f01:	jmp    403f06 <access_monster_buffer@@Base+0x1e6>
  403f06:	mov    rdi,QWORD PTR [rbp-0x10]
  403f0a:	call   4049d0 <access_monster_buffer@@Base+0xcb0>
  403f0f:	mov    QWORD PTR [rbp-0x38],rax
  403f13:	cmp    QWORD PTR [rbp-0x38],0x0
  403f18:	jne    403f3d <access_monster_buffer@@Base+0x21d>
  403f1e:	lea    rdi,[rip+0xae0d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403f25:	lea    rsi,[rip+0x90f2]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403f2c:	mov    edx,0xe8
  403f31:	lea    rcx,[rip+0x914a]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403f38:	call   403070 <__assert_fail@plt>
  403f3d:	jmp    403f42 <access_monster_buffer@@Base+0x222>
  403f42:	mov    rdi,QWORD PTR [rbp-0x38]
  403f46:	call   404ad0 <access_monster_buffer@@Base+0xdb0>
  403f4b:	vmovss DWORD PTR [rbp-0x3c],xmm0
  403f50:	mov    rdi,QWORD PTR [rbp-0x38]
  403f54:	call   404b20 <access_monster_buffer@@Base+0xe00>
  403f59:	vmovss DWORD PTR [rbp-0x40],xmm0
  403f5e:	mov    rdi,QWORD PTR [rbp-0x38]
  403f62:	call   404b70 <access_monster_buffer@@Base+0xe50>
  403f67:	vmovss DWORD PTR [rbp-0x44],xmm0
  403f6c:	vmovss xmm0,DWORD PTR [rip+0x9090]        # 40d004 <_IO_stdin_used@@Base+0x4>
  403f74:	vmovss xmm1,DWORD PTR [rbp-0x3c]
  403f79:	vucomiss xmm1,xmm0
  403f7d:	jne    403f8e <access_monster_buffer@@Base+0x26e>
  403f83:	jp     403f8e <access_monster_buffer@@Base+0x26e>
  403f89:	jmp    403fad <access_monster_buffer@@Base+0x28d>
  403f8e:	lea    rdi,[rip+0xad9d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403f95:	lea    rsi,[rip+0x9082]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403f9c:	mov    edx,0xf0
  403fa1:	lea    rcx,[rip+0x90da]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403fa8:	call   403070 <__assert_fail@plt>
  403fad:	jmp    403fb2 <access_monster_buffer@@Base+0x292>
  403fb2:	jmp    403fb7 <access_monster_buffer@@Base+0x297>
  403fb7:	vmovss xmm0,DWORD PTR [rip+0x9049]        # 40d008 <_IO_stdin_used@@Base+0x8>
  403fbf:	vmovss xmm1,DWORD PTR [rbp-0x40]
  403fc4:	vucomiss xmm1,xmm0
  403fc8:	jne    403fd9 <access_monster_buffer@@Base+0x2b9>
  403fce:	jp     403fd9 <access_monster_buffer@@Base+0x2b9>
  403fd4:	jmp    403ff8 <access_monster_buffer@@Base+0x2d8>
  403fd9:	lea    rdi,[rip+0xad52]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  403fe0:	lea    rsi,[rip+0x9037]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  403fe7:	mov    edx,0xf1
  403fec:	lea    rcx,[rip+0x908f]        # 40d082 <_IO_stdin_used@@Base+0x82>
  403ff3:	call   403070 <__assert_fail@plt>
  403ff8:	jmp    403ffd <access_monster_buffer@@Base+0x2dd>
  403ffd:	jmp    404002 <access_monster_buffer@@Base+0x2e2>
  404002:	vmovss xmm0,DWORD PTR [rip+0x9002]        # 40d00c <_IO_stdin_used@@Base+0xc>
  40400a:	vmovss xmm1,DWORD PTR [rbp-0x44]
  40400f:	vucomiss xmm1,xmm0
  404013:	jne    404024 <access_monster_buffer@@Base+0x304>
  404019:	jp     404024 <access_monster_buffer@@Base+0x304>
  40401f:	jmp    404043 <access_monster_buffer@@Base+0x323>
  404024:	lea    rdi,[rip+0xad07]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40402b:	lea    rsi,[rip+0x8fec]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404032:	mov    edx,0xf2
  404037:	lea    rcx,[rip+0x9044]        # 40d082 <_IO_stdin_used@@Base+0x82>
  40403e:	call   403070 <__assert_fail@plt>
  404043:	jmp    404048 <access_monster_buffer@@Base+0x328>
  404048:	mov    rsi,QWORD PTR [rbp-0x38]
  40404c:	lea    rdi,[rbp-0x50]
  404050:	call   404bc0 <access_monster_buffer@@Base+0xea0>
  404055:	vmovss xmm0,DWORD PTR [rip+0x8fa7]        # 40d004 <_IO_stdin_used@@Base+0x4>
  40405d:	vmovss xmm1,DWORD PTR [rbp-0x50]
  404062:	vucomiss xmm1,xmm0
  404066:	jne    404077 <access_monster_buffer@@Base+0x357>
  40406c:	jp     404077 <access_monster_buffer@@Base+0x357>
  404072:	jmp    404096 <access_monster_buffer@@Base+0x376>
  404077:	lea    rdi,[rip+0xacb4]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40407e:	lea    rsi,[rip+0x8f99]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404085:	mov    edx,0xfa
  40408a:	lea    rcx,[rip+0x8ff1]        # 40d082 <_IO_stdin_used@@Base+0x82>
  404091:	call   403070 <__assert_fail@plt>
  404096:	jmp    40409b <access_monster_buffer@@Base+0x37b>
  40409b:	jmp    4040a0 <access_monster_buffer@@Base+0x380>
  4040a0:	vmovss xmm0,DWORD PTR [rip+0x8f60]        # 40d008 <_IO_stdin_used@@Base+0x8>
  4040a8:	vmovss xmm1,DWORD PTR [rbp-0x4c]
  4040ad:	vucomiss xmm1,xmm0
  4040b1:	jne    4040c2 <access_monster_buffer@@Base+0x3a2>
  4040b7:	jp     4040c2 <access_monster_buffer@@Base+0x3a2>
  4040bd:	jmp    4040e1 <access_monster_buffer@@Base+0x3c1>
  4040c2:	lea    rdi,[rip+0xac69]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4040c9:	lea    rsi,[rip+0x8f4e]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4040d0:	mov    edx,0xfb
  4040d5:	lea    rcx,[rip+0x8fa6]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4040dc:	call   403070 <__assert_fail@plt>
  4040e1:	jmp    4040e6 <access_monster_buffer@@Base+0x3c6>
  4040e6:	jmp    4040eb <access_monster_buffer@@Base+0x3cb>
  4040eb:	vmovss xmm0,DWORD PTR [rip+0x8f19]        # 40d00c <_IO_stdin_used@@Base+0xc>
  4040f3:	vmovss xmm1,DWORD PTR [rbp-0x48]
  4040f8:	vucomiss xmm1,xmm0
  4040fc:	jne    40410d <access_monster_buffer@@Base+0x3ed>
  404102:	jp     40410d <access_monster_buffer@@Base+0x3ed>
  404108:	jmp    40412c <access_monster_buffer@@Base+0x40c>
  40410d:	lea    rdi,[rip+0xac1e]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  404114:	lea    rsi,[rip+0x8f03]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  40411b:	mov    edx,0xfc
  404120:	lea    rcx,[rip+0x8f5b]        # 40d082 <_IO_stdin_used@@Base+0x82>
  404127:	call   403070 <__assert_fail@plt>
  40412c:	jmp    404131 <access_monster_buffer@@Base+0x411>
  404131:	mov    rdi,QWORD PTR [rbp-0x10]
  404135:	call   404c40 <access_monster_buffer@@Base+0xf20>
  40413a:	mov    QWORD PTR [rbp-0x58],rax
  40413e:	mov    rdi,QWORD PTR [rbp-0x58]
  404142:	call   404d70 <access_monster_buffer@@Base+0x1050>
  404147:	mov    QWORD PTR [rbp-0x60],rax
  40414b:	cmp    QWORD PTR [rbp-0x58],0x0
  404150:	jne    404175 <access_monster_buffer@@Base+0x455>
  404156:	lea    rdi,[rip+0xabd5]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40415d:	lea    rsi,[rip+0x8eba]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404164:	mov    edx,0x105
  404169:	lea    rcx,[rip+0x8f12]        # 40d082 <_IO_stdin_used@@Base+0x82>
  404170:	call   403070 <__assert_fail@plt>
  404175:	jmp    40417a <access_monster_buffer@@Base+0x45a>
  40417a:	jmp    40417f <access_monster_buffer@@Base+0x45f>
  40417f:	cmp    QWORD PTR [rbp-0x60],0xa
  404184:	je     4041a9 <access_monster_buffer@@Base+0x489>
  40418a:	lea    rdi,[rip+0xaba1]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  404191:	lea    rsi,[rip+0x8e86]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404198:	mov    edx,0x107
  40419d:	lea    rcx,[rip+0x8ede]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4041a4:	call   403070 <__assert_fail@plt>
  4041a9:	jmp    4041ae <access_monster_buffer@@Base+0x48e>
  4041ae:	mov    rdi,QWORD PTR [rbp-0x58]
  4041b2:	mov    esi,0x2
  4041b7:	call   404d90 <access_monster_buffer@@Base+0x1070>
  4041bc:	mov    BYTE PTR [rbp-0x61],al
  4041bf:	movzx  eax,BYTE PTR [rbp-0x61]
  4041c3:	cmp    eax,0x2
  4041c6:	je     4041eb <access_monster_buffer@@Base+0x4cb>
  4041cc:	lea    rdi,[rip+0xab5f]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4041d3:	lea    rsi,[rip+0x8e44]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4041da:	mov    edx,0x10b
  4041df:	lea    rcx,[rip+0x8e9c]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4041e6:	call   403070 <__assert_fail@plt>
  4041eb:	jmp    4041f0 <access_monster_buffer@@Base+0x4d0>
  4041f0:	mov    rdi,QWORD PTR [rbp-0x10]
  4041f4:	call   404e00 <access_monster_buffer@@Base+0x10e0>
  4041f9:	mov    QWORD PTR [rbp-0x70],rax
  4041fd:	mov    rdi,QWORD PTR [rbp-0x70]
  404201:	call   404f30 <access_monster_buffer@@Base+0x1210>
  404206:	mov    QWORD PTR [rbp-0x78],rax
  40420a:	cmp    QWORD PTR [rbp-0x78],0x2
  40420f:	je     404234 <access_monster_buffer@@Base+0x514>
  404215:	lea    rdi,[rip+0xab16]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40421c:	lea    rsi,[rip+0x8dfb]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404223:	mov    edx,0x10f
  404228:	lea    rcx,[rip+0x8e53]        # 40d082 <_IO_stdin_used@@Base+0x82>
  40422f:	call   403070 <__assert_fail@plt>
  404234:	jmp    404239 <access_monster_buffer@@Base+0x519>
  404239:	mov    rdi,QWORD PTR [rbp-0x70]
  40423d:	mov    esi,0x1
  404242:	call   4050b0 <access_monster_buffer@@Base+0x1390>
  404247:	mov    rdi,rax
  40424a:	call   404f80 <access_monster_buffer@@Base+0x1260>
  40424f:	mov    QWORD PTR [rbp-0x80],rax
  404253:	mov    rdi,QWORD PTR [rbp-0x70]
  404257:	mov    esi,0x1
  40425c:	call   4050b0 <access_monster_buffer@@Base+0x1390>
  404261:	mov    rdi,rax
  404264:	call   405150 <access_monster_buffer@@Base+0x1430>
  404269:	mov    WORD PTR [rbp-0x82],ax
  404270:	cmp    QWORD PTR [rbp-0x80],0x0
  404275:	je     404294 <access_monster_buffer@@Base+0x574>
  40427b:	mov    rdi,QWORD PTR [rbp-0x80]
  40427f:	lea    rsi,[rip+0x8d90]        # 40d016 <_IO_stdin_used@@Base+0x16>
  404286:	call   4030b0 <strcmp@plt>
  40428b:	cmp    eax,0x0
  40428e:	je     4042b3 <access_monster_buffer@@Base+0x593>
  404294:	lea    rdi,[rip+0xaa97]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40429b:	lea    rsi,[rip+0x8d7c]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4042a2:	mov    edx,0x113
  4042a7:	lea    rcx,[rip+0x8dd4]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4042ae:	call   403070 <__assert_fail@plt>
  4042b3:	jmp    4042b8 <access_monster_buffer@@Base+0x598>
  4042b8:	jmp    4042bd <access_monster_buffer@@Base+0x59d>
  4042bd:	movzx  eax,WORD PTR [rbp-0x82]
  4042c4:	cmp    eax,0x5
  4042c7:	je     4042ec <access_monster_buffer@@Base+0x5cc>
  4042cd:	lea    rdi,[rip+0xaa5e]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4042d4:	lea    rsi,[rip+0x8d43]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4042db:	mov    edx,0x114
  4042e0:	lea    rcx,[rip+0x8d9b]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4042e7:	call   403070 <__assert_fail@plt>
  4042ec:	jmp    4042f1 <access_monster_buffer@@Base+0x5d1>
  4042f1:	mov    rdi,QWORD PTR [rbp-0x10]
  4042f5:	call   405260 <access_monster_buffer@@Base+0x1540>
  4042fa:	movzx  ecx,al
  4042fd:	cmp    ecx,0x1
  404300:	jne    4043c7 <access_monster_buffer@@Base+0x6a7>
  404306:	mov    rdi,QWORD PTR [rbp-0x10]
  40430a:	call   405370 <access_monster_buffer@@Base+0x1650>
  40430f:	mov    QWORD PTR [rbp-0x90],rax
  404316:	mov    rdi,QWORD PTR [rbp-0x90]
  40431d:	call   404f80 <access_monster_buffer@@Base+0x1260>
  404322:	mov    QWORD PTR [rbp-0x98],rax
  404329:	mov    rdi,QWORD PTR [rbp-0x90]
  404330:	call   405150 <access_monster_buffer@@Base+0x1430>
  404335:	mov    WORD PTR [rbp-0x9a],ax
  40433c:	xor    eax,eax
  40433e:	mov    rdi,QWORD PTR [rbp-0x98]
  404345:	lea    rsi,[rip+0x8cca]        # 40d016 <_IO_stdin_used@@Base+0x16>
  40434c:	mov    DWORD PTR [rbp-0xa4],eax
  404352:	call   4030b0 <strcmp@plt>
  404357:	mov    ecx,DWORD PTR [rbp-0xa4]
  40435d:	cmp    ecx,eax
  40435f:	je     404384 <access_monster_buffer@@Base+0x664>
  404365:	lea    rdi,[rip+0xa9c6]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40436c:	lea    rsi,[rip+0x8cab]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  404373:	mov    edx,0x11e
  404378:	lea    rcx,[rip+0x8d03]        # 40d082 <_IO_stdin_used@@Base+0x82>
  40437f:	call   403070 <__assert_fail@plt>
  404384:	jmp    404389 <access_monster_buffer@@Base+0x669>
  404389:	jmp    40438e <access_monster_buffer@@Base+0x66e>
  40438e:	movzx  eax,WORD PTR [rbp-0x9a]
  404395:	cmp    eax,0x5
  404398:	je     4043bd <access_monster_buffer@@Base+0x69d>
  40439e:	lea    rdi,[rip+0xa98d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4043a5:	lea    rsi,[rip+0x8c72]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4043ac:	mov    edx,0x11f
  4043b1:	lea    rcx,[rip+0x8cca]        # 40d082 <_IO_stdin_used@@Base+0x82>
  4043b8:	call   403070 <__assert_fail@plt>
  4043bd:	jmp    4043c2 <access_monster_buffer@@Base+0x6a2>
  4043c2:	jmp    4043c7 <access_monster_buffer@@Base+0x6a7>
  4043c7:	xor    eax,eax
  4043c9:	add    rsp,0xb0
  4043d0:	pop    rbp
  4043d1:	ret    
  4043d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043dc:	nop    DWORD PTR [rax+0x0]
  4043e0:	push   rbp
  4043e1:	mov    rbp,rsp
  4043e4:	sub    rsp,0x20
  4043e8:	mov    QWORD PTR [rbp-0x8],rdi
  4043ec:	mov    QWORD PTR [rbp-0x10],0x0
  4043f4:	cmp    QWORD PTR [rbp-0x8],0x0
  4043f9:	je     404415 <access_monster_buffer@@Base+0x6f5>
  4043ff:	mov    rdi,QWORD PTR [rbp-0x8]
  404403:	mov    rsi,QWORD PTR [rbp-0x10]
  404407:	call   405e30 <main@@Base+0x990>
  40440c:	cmp    eax,0x0
  40440f:	jne    404422 <access_monster_buffer@@Base+0x702>
  404415:	xor    eax,eax
  404417:	mov    ecx,eax
  404419:	mov    QWORD PTR [rbp-0x18],rcx
  40441d:	jmp    404442 <access_monster_buffer@@Base+0x722>
  404422:	mov    rax,QWORD PTR [rbp-0x8]
  404426:	mov    rdi,QWORD PTR [rbp-0x8]
  40442a:	mov    QWORD PTR [rbp-0x20],rax
  40442e:	call   405ed0 <main@@Base+0xa30>
  404433:	mov    eax,eax
  404435:	mov    ecx,eax
  404437:	mov    rdx,QWORD PTR [rbp-0x20]
  40443b:	add    rdx,rcx
  40443e:	mov    QWORD PTR [rbp-0x18],rdx
  404442:	mov    rax,QWORD PTR [rbp-0x18]
  404446:	add    rsp,0x20
  40444a:	pop    rbp
  40444b:	ret    
  40444c:	nop    DWORD PTR [rax+0x0]
  404450:	push   rbp
  404451:	mov    rbp,rsp
  404454:	sub    rsp,0x30
  404458:	mov    QWORD PTR [rbp-0x8],rdi
  40445c:	mov    WORD PTR [rbp-0xa],0x0
  404462:	cmp    QWORD PTR [rbp-0x8],0x0
  404467:	je     404481 <access_monster_buffer@@Base+0x761>
  40446d:	mov    al,0x1
  40446f:	test   al,0x1
  404471:	jne    40447c <access_monster_buffer@@Base+0x75c>
  404477:	jmp    404481 <access_monster_buffer@@Base+0x761>
  40447c:	jmp    4044a0 <access_monster_buffer@@Base+0x780>
  404481:	lea    rdi,[rip+0x8eda]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404488:	lea    rsi,[rip+0x8ef9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40448f:	mov    edx,0x83
  404494:	lea    rcx,[rip+0x8f62]        # 40d3fd <_IO_stdin_used@@Base+0x3fd>
  40449b:	call   403070 <__assert_fail@plt>
  4044a0:	mov    WORD PTR [rbp-0xc],0x2
  4044a6:	mov    rax,QWORD PTR [rbp-0x8]
  4044aa:	mov    rcx,QWORD PTR [rbp-0x8]
  4044ae:	mov    rdi,rcx
  4044b1:	mov    QWORD PTR [rbp-0x20],rax
  4044b5:	call   405f40 <main@@Base+0xaa0>
  4044ba:	xor    edx,edx
  4044bc:	mov    ecx,edx
  4044be:	movsxd rsi,eax
  4044c1:	sub    rcx,rsi
  4044c4:	mov    rsi,QWORD PTR [rbp-0x20]
  4044c8:	add    rsi,rcx
  4044cb:	mov    QWORD PTR [rbp-0x18],rsi
  4044cf:	mov    rcx,QWORD PTR [rbp-0x18]
  4044d3:	mov    rdi,rcx
  4044d6:	call   405f60 <main@@Base+0xac0>
  4044db:	movzx  edx,ax
  4044de:	mov    ecx,edx
  4044e0:	movzx  edx,WORD PTR [rbp-0xc]
  4044e4:	add    edx,0x3
  4044e7:	movsxd rsi,edx
  4044ea:	shl    rsi,0x1
  4044ee:	cmp    rcx,rsi
  4044f1:	jb     40451b <access_monster_buffer@@Base+0x7fb>
  4044f7:	mov    rax,QWORD PTR [rbp-0x18]
  4044fb:	movzx  ecx,WORD PTR [rbp-0xc]
  4044ff:	movsxd rdx,ecx
  404502:	shl    rdx,0x1
  404506:	add    rax,rdx
  404509:	add    rax,0x4
  40450f:	mov    rdi,rax
  404512:	call   405f60 <main@@Base+0xac0>
  404517:	mov    WORD PTR [rbp-0xa],ax
  40451b:	movzx  eax,WORD PTR [rbp-0xa]
  40451f:	cmp    eax,0x0
  404522:	je     404549 <access_monster_buffer@@Base+0x829>
  404528:	mov    rax,QWORD PTR [rbp-0x8]
  40452c:	movzx  ecx,WORD PTR [rbp-0xa]
  404530:	movsxd rdx,ecx
  404533:	add    rax,rdx
  404536:	mov    rdi,rax
  404539:	call   405f90 <main@@Base+0xaf0>
  40453e:	movsx  ecx,ax
  404541:	mov    DWORD PTR [rbp-0x24],ecx
  404544:	jmp    404556 <access_monster_buffer@@Base+0x836>
  404549:	mov    eax,0x64
  40454e:	mov    DWORD PTR [rbp-0x24],eax
  404551:	jmp    404556 <access_monster_buffer@@Base+0x836>
  404556:	mov    eax,DWORD PTR [rbp-0x24]
  404559:	cwde   
  40455a:	add    rsp,0x30
  40455e:	pop    rbp
  40455f:	ret    
  404560:	push   rbp
  404561:	mov    rbp,rsp
  404564:	sub    rsp,0x30
  404568:	mov    QWORD PTR [rbp-0x8],rdi
  40456c:	mov    WORD PTR [rbp-0xa],0x0
  404572:	cmp    QWORD PTR [rbp-0x8],0x0
  404577:	je     404591 <access_monster_buffer@@Base+0x871>
  40457d:	mov    al,0x1
  40457f:	test   al,0x1
  404581:	jne    40458c <access_monster_buffer@@Base+0x86c>
  404587:	jmp    404591 <access_monster_buffer@@Base+0x871>
  40458c:	jmp    4045b0 <access_monster_buffer@@Base+0x890>
  404591:	lea    rdi,[rip+0x8dca]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404598:	lea    rsi,[rip+0x8de9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40459f:	mov    edx,0x82
  4045a4:	lea    rcx,[rip+0x8e92]        # 40d43d <_IO_stdin_used@@Base+0x43d>
  4045ab:	call   403070 <__assert_fail@plt>
  4045b0:	mov    WORD PTR [rbp-0xc],0x1
  4045b6:	mov    rax,QWORD PTR [rbp-0x8]
  4045ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4045be:	mov    rdi,rcx
  4045c1:	mov    QWORD PTR [rbp-0x20],rax
  4045c5:	call   405f40 <main@@Base+0xaa0>
  4045ca:	xor    edx,edx
  4045cc:	mov    ecx,edx
  4045ce:	movsxd rsi,eax
  4045d1:	sub    rcx,rsi
  4045d4:	mov    rsi,QWORD PTR [rbp-0x20]
  4045d8:	add    rsi,rcx
  4045db:	mov    QWORD PTR [rbp-0x18],rsi
  4045df:	mov    rcx,QWORD PTR [rbp-0x18]
  4045e3:	mov    rdi,rcx
  4045e6:	call   405f60 <main@@Base+0xac0>
  4045eb:	movzx  edx,ax
  4045ee:	mov    ecx,edx
  4045f0:	movzx  edx,WORD PTR [rbp-0xc]
  4045f4:	add    edx,0x3
  4045f7:	movsxd rsi,edx
  4045fa:	shl    rsi,0x1
  4045fe:	cmp    rcx,rsi
  404601:	jb     40462b <access_monster_buffer@@Base+0x90b>
  404607:	mov    rax,QWORD PTR [rbp-0x18]
  40460b:	movzx  ecx,WORD PTR [rbp-0xc]
  40460f:	movsxd rdx,ecx
  404612:	shl    rdx,0x1
  404616:	add    rax,rdx
  404619:	add    rax,0x4
  40461f:	mov    rdi,rax
  404622:	call   405f60 <main@@Base+0xac0>
  404627:	mov    WORD PTR [rbp-0xa],ax
  40462b:	movzx  eax,WORD PTR [rbp-0xa]
  40462f:	cmp    eax,0x0
  404632:	je     404659 <access_monster_buffer@@Base+0x939>
  404638:	mov    rax,QWORD PTR [rbp-0x8]
  40463c:	movzx  ecx,WORD PTR [rbp-0xa]
  404640:	movsxd rdx,ecx
  404643:	add    rax,rdx
  404646:	mov    rdi,rax
  404649:	call   405f90 <main@@Base+0xaf0>
  40464e:	movsx  ecx,ax
  404651:	mov    DWORD PTR [rbp-0x24],ecx
  404654:	jmp    404666 <access_monster_buffer@@Base+0x946>
  404659:	mov    eax,0x96
  40465e:	mov    DWORD PTR [rbp-0x24],eax
  404661:	jmp    404666 <access_monster_buffer@@Base+0x946>
  404666:	mov    eax,DWORD PTR [rbp-0x24]
  404669:	cwde   
  40466a:	add    rsp,0x30
  40466e:	pop    rbp
  40466f:	ret    
  404670:	push   rbp
  404671:	mov    rbp,rsp
  404674:	sub    rsp,0x40
  404678:	mov    QWORD PTR [rbp-0x10],rdi
  40467c:	mov    WORD PTR [rbp-0x1a],0x0
  404682:	cmp    QWORD PTR [rbp-0x10],0x0
  404687:	je     4046a1 <access_monster_buffer@@Base+0x981>
  40468d:	mov    al,0x1
  40468f:	test   al,0x1
  404691:	jne    40469c <access_monster_buffer@@Base+0x97c>
  404697:	jmp    4046a1 <access_monster_buffer@@Base+0x981>
  40469c:	jmp    4046c0 <access_monster_buffer@@Base+0x9a0>
  4046a1:	lea    rdi,[rip+0x8cba]        # 40d362 <_IO_stdin_used@@Base+0x362>
  4046a8:	lea    rsi,[rip+0x8cd9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  4046af:	mov    edx,0x84
  4046b4:	lea    rcx,[rip+0x8dc4]        # 40d47f <_IO_stdin_used@@Base+0x47f>
  4046bb:	call   403070 <__assert_fail@plt>
  4046c0:	mov    WORD PTR [rbp-0x1c],0x3
  4046c6:	mov    rax,QWORD PTR [rbp-0x10]
  4046ca:	mov    rcx,QWORD PTR [rbp-0x10]
  4046ce:	mov    rdi,rcx
  4046d1:	mov    QWORD PTR [rbp-0x30],rax
  4046d5:	call   405f40 <main@@Base+0xaa0>
  4046da:	xor    edx,edx
  4046dc:	mov    ecx,edx
  4046de:	movsxd rsi,eax
  4046e1:	sub    rcx,rsi
  4046e4:	mov    rsi,QWORD PTR [rbp-0x30]
  4046e8:	add    rsi,rcx
  4046eb:	mov    QWORD PTR [rbp-0x28],rsi
  4046ef:	mov    rcx,QWORD PTR [rbp-0x28]
  4046f3:	mov    rdi,rcx
  4046f6:	call   405f60 <main@@Base+0xac0>
  4046fb:	movzx  edx,ax
  4046fe:	mov    ecx,edx
  404700:	movzx  edx,WORD PTR [rbp-0x1c]
  404704:	add    edx,0x3
  404707:	movsxd rsi,edx
  40470a:	shl    rsi,0x1
  40470e:	cmp    rcx,rsi
  404711:	jb     40473b <access_monster_buffer@@Base+0xa1b>
  404717:	mov    rax,QWORD PTR [rbp-0x28]
  40471b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40471f:	movsxd rdx,ecx
  404722:	shl    rdx,0x1
  404726:	add    rax,rdx
  404729:	add    rax,0x4
  40472f:	mov    rdi,rax
  404732:	call   405f60 <main@@Base+0xac0>
  404737:	mov    WORD PTR [rbp-0x1a],ax
  40473b:	cmp    WORD PTR [rbp-0x1a],0x0
  404740:	je     404786 <access_monster_buffer@@Base+0xa66>
  404746:	mov    rax,QWORD PTR [rbp-0x10]
  40474a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40474e:	movsxd rdx,ecx
  404751:	add    rax,rdx
  404754:	mov    QWORD PTR [rbp-0x18],rax
  404758:	mov    rax,QWORD PTR [rbp-0x18]
  40475c:	add    rax,0x4
  404762:	mov    rdx,QWORD PTR [rbp-0x18]
  404766:	mov    rdi,rdx
  404769:	mov    QWORD PTR [rbp-0x38],rax
  40476d:	call   405ed0 <main@@Base+0xa30>
  404772:	mov    eax,eax
  404774:	mov    edx,eax
  404776:	mov    rsi,QWORD PTR [rbp-0x38]
  40477a:	add    rsi,rdx
  40477d:	mov    QWORD PTR [rbp-0x8],rsi
  404781:	jmp    40478e <access_monster_buffer@@Base+0xa6e>
  404786:	mov    QWORD PTR [rbp-0x8],0x0
  40478e:	mov    rax,QWORD PTR [rbp-0x8]
  404792:	add    rsp,0x40
  404796:	pop    rbp
  404797:	ret    
  404798:	nop    DWORD PTR [rax+rax*1+0x0]
  4047a0:	push   rbp
  4047a1:	mov    rbp,rsp
  4047a4:	sub    rsp,0x10
  4047a8:	mov    QWORD PTR [rbp-0x8],rdi
  4047ac:	cmp    QWORD PTR [rbp-0x8],0x0
  4047b1:	je     4047d6 <access_monster_buffer@@Base+0xab6>
  4047b7:	mov    rax,QWORD PTR [rbp-0x8]
  4047bb:	add    rax,0xfffffffffffffffc
  4047c1:	mov    rdi,rax
  4047c4:	call   405ed0 <main@@Base+0xa30>
  4047c9:	mov    eax,eax
  4047cb:	mov    ecx,eax
  4047cd:	mov    QWORD PTR [rbp-0x10],rcx
  4047d1:	jmp    4047e3 <access_monster_buffer@@Base+0xac3>
  4047d6:	xor    eax,eax
  4047d8:	mov    ecx,eax
  4047da:	mov    QWORD PTR [rbp-0x10],rcx
  4047de:	jmp    4047e3 <access_monster_buffer@@Base+0xac3>
  4047e3:	mov    rax,QWORD PTR [rbp-0x10]
  4047e7:	add    rsp,0x10
  4047eb:	pop    rbp
  4047ec:	ret    
  4047ed:	nop    DWORD PTR [rax]
  4047f0:	push   rbp
  4047f1:	mov    rbp,rsp
  4047f4:	sub    rsp,0x20
  4047f8:	mov    QWORD PTR [rbp-0x8],rdi
  4047fc:	mov    WORD PTR [rbp-0xa],0x0
  404802:	cmp    QWORD PTR [rbp-0x8],0x0
  404807:	je     404821 <access_monster_buffer@@Base+0xb01>
  40480d:	mov    al,0x1
  40480f:	test   al,0x1
  404811:	jne    40481c <access_monster_buffer@@Base+0xafc>
  404817:	jmp    404821 <access_monster_buffer@@Base+0xb01>
  40481c:	jmp    404840 <access_monster_buffer@@Base+0xb20>
  404821:	lea    rdi,[rip+0x8b3a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404828:	lea    rsi,[rip+0x8b59]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40482f:	mov    edx,0x83
  404834:	lea    rcx,[rip+0x8c93]        # 40d4ce <_IO_stdin_used@@Base+0x4ce>
  40483b:	call   403070 <__assert_fail@plt>
  404840:	mov    WORD PTR [rbp-0xc],0x2
  404846:	mov    rax,QWORD PTR [rbp-0x8]
  40484a:	mov    rcx,QWORD PTR [rbp-0x8]
  40484e:	mov    rdi,rcx
  404851:	mov    QWORD PTR [rbp-0x20],rax
  404855:	call   405f40 <main@@Base+0xaa0>
  40485a:	xor    edx,edx
  40485c:	mov    ecx,edx
  40485e:	movsxd rsi,eax
  404861:	sub    rcx,rsi
  404864:	mov    rsi,QWORD PTR [rbp-0x20]
  404868:	add    rsi,rcx
  40486b:	mov    QWORD PTR [rbp-0x18],rsi
  40486f:	mov    rcx,QWORD PTR [rbp-0x18]
  404873:	mov    rdi,rcx
  404876:	call   405f60 <main@@Base+0xac0>
  40487b:	movzx  edx,ax
  40487e:	mov    ecx,edx
  404880:	movzx  edx,WORD PTR [rbp-0xc]
  404884:	add    edx,0x3
  404887:	movsxd rsi,edx
  40488a:	shl    rsi,0x1
  40488e:	cmp    rcx,rsi
  404891:	jb     4048bb <access_monster_buffer@@Base+0xb9b>
  404897:	mov    rax,QWORD PTR [rbp-0x18]
  40489b:	movzx  ecx,WORD PTR [rbp-0xc]
  40489f:	movsxd rdx,ecx
  4048a2:	shl    rdx,0x1
  4048a6:	add    rax,rdx
  4048a9:	add    rax,0x4
  4048af:	mov    rdi,rax
  4048b2:	call   405f60 <main@@Base+0xac0>
  4048b7:	mov    WORD PTR [rbp-0xa],ax
  4048bb:	movzx  eax,WORD PTR [rbp-0xa]
  4048bf:	cmp    eax,0x0
  4048c2:	setne  cl
  4048c5:	and    cl,0x1
  4048c8:	movzx  eax,cl
  4048cb:	add    rsp,0x20
  4048cf:	pop    rbp
  4048d0:	ret    
  4048d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048db:	nop    DWORD PTR [rax+rax*1+0x0]
  4048e0:	push   rbp
  4048e1:	mov    rbp,rsp
  4048e4:	sub    rsp,0x20
  4048e8:	mov    QWORD PTR [rbp-0x8],rdi
  4048ec:	mov    WORD PTR [rbp-0xa],0x0
  4048f2:	cmp    QWORD PTR [rbp-0x8],0x0
  4048f7:	je     404911 <access_monster_buffer@@Base+0xbf1>
  4048fd:	mov    al,0x1
  4048ff:	test   al,0x1
  404901:	jne    40490c <access_monster_buffer@@Base+0xbec>
  404907:	jmp    404911 <access_monster_buffer@@Base+0xbf1>
  40490c:	jmp    404930 <access_monster_buffer@@Base+0xc10>
  404911:	lea    rdi,[rip+0x8a4a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404918:	lea    rsi,[rip+0x8a69]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40491f:	mov    edx,0x82
  404924:	lea    rcx,[rip+0x8bea]        # 40d515 <_IO_stdin_used@@Base+0x515>
  40492b:	call   403070 <__assert_fail@plt>
  404930:	mov    WORD PTR [rbp-0xc],0x1
  404936:	mov    rax,QWORD PTR [rbp-0x8]
  40493a:	mov    rcx,QWORD PTR [rbp-0x8]
  40493e:	mov    rdi,rcx
  404941:	mov    QWORD PTR [rbp-0x20],rax
  404945:	call   405f40 <main@@Base+0xaa0>
  40494a:	xor    edx,edx
  40494c:	mov    ecx,edx
  40494e:	movsxd rsi,eax
  404951:	sub    rcx,rsi
  404954:	mov    rsi,QWORD PTR [rbp-0x20]
  404958:	add    rsi,rcx
  40495b:	mov    QWORD PTR [rbp-0x18],rsi
  40495f:	mov    rcx,QWORD PTR [rbp-0x18]
  404963:	mov    rdi,rcx
  404966:	call   405f60 <main@@Base+0xac0>
  40496b:	movzx  edx,ax
  40496e:	mov    ecx,edx
  404970:	movzx  edx,WORD PTR [rbp-0xc]
  404974:	add    edx,0x3
  404977:	movsxd rsi,edx
  40497a:	shl    rsi,0x1
  40497e:	cmp    rcx,rsi
  404981:	jb     4049ab <access_monster_buffer@@Base+0xc8b>
  404987:	mov    rax,QWORD PTR [rbp-0x18]
  40498b:	movzx  ecx,WORD PTR [rbp-0xc]
  40498f:	movsxd rdx,ecx
  404992:	shl    rdx,0x1
  404996:	add    rax,rdx
  404999:	add    rax,0x4
  40499f:	mov    rdi,rax
  4049a2:	call   405f60 <main@@Base+0xac0>
  4049a7:	mov    WORD PTR [rbp-0xa],ax
  4049ab:	movzx  eax,WORD PTR [rbp-0xa]
  4049af:	cmp    eax,0x0
  4049b2:	setne  cl
  4049b5:	and    cl,0x1
  4049b8:	movzx  eax,cl
  4049bb:	add    rsp,0x20
  4049bf:	pop    rbp
  4049c0:	ret    
  4049c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4049d0:	push   rbp
  4049d1:	mov    rbp,rsp
  4049d4:	sub    rsp,0x30
  4049d8:	mov    QWORD PTR [rbp-0x10],rdi
  4049dc:	mov    WORD PTR [rbp-0x12],0x0
  4049e2:	cmp    QWORD PTR [rbp-0x10],0x0
  4049e7:	je     404a01 <access_monster_buffer@@Base+0xce1>
  4049ed:	mov    al,0x1
  4049ef:	test   al,0x1
  4049f1:	jne    4049fc <access_monster_buffer@@Base+0xcdc>
  4049f7:	jmp    404a01 <access_monster_buffer@@Base+0xce1>
  4049fc:	jmp    404a20 <access_monster_buffer@@Base+0xd00>
  404a01:	lea    rdi,[rip+0x895a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404a08:	lea    rsi,[rip+0x8979]        # 40d388 <_IO_stdin_used@@Base+0x388>
  404a0f:	mov    edx,0x81
  404a14:	lea    rcx,[rip+0x8b43]        # 40d55e <_IO_stdin_used@@Base+0x55e>
  404a1b:	call   403070 <__assert_fail@plt>
  404a20:	mov    WORD PTR [rbp-0x14],0x0
  404a26:	mov    rax,QWORD PTR [rbp-0x10]
  404a2a:	mov    rcx,QWORD PTR [rbp-0x10]
  404a2e:	mov    rdi,rcx
  404a31:	mov    QWORD PTR [rbp-0x28],rax
  404a35:	call   405f40 <main@@Base+0xaa0>
  404a3a:	xor    edx,edx
  404a3c:	mov    ecx,edx
  404a3e:	movsxd rsi,eax
  404a41:	sub    rcx,rsi
  404a44:	mov    rsi,QWORD PTR [rbp-0x28]
  404a48:	add    rsi,rcx
  404a4b:	mov    QWORD PTR [rbp-0x20],rsi
  404a4f:	mov    rcx,QWORD PTR [rbp-0x20]
  404a53:	mov    rdi,rcx
  404a56:	call   405f60 <main@@Base+0xac0>
  404a5b:	movzx  edx,ax
  404a5e:	mov    ecx,edx
  404a60:	movzx  edx,WORD PTR [rbp-0x14]
  404a64:	add    edx,0x3
  404a67:	movsxd rsi,edx
  404a6a:	shl    rsi,0x1
  404a6e:	cmp    rcx,rsi
  404a71:	jb     404a9b <access_monster_buffer@@Base+0xd7b>
  404a77:	mov    rax,QWORD PTR [rbp-0x20]
  404a7b:	movzx  ecx,WORD PTR [rbp-0x14]
  404a7f:	movsxd rdx,ecx
  404a82:	shl    rdx,0x1
  404a86:	add    rax,rdx
  404a89:	add    rax,0x4
  404a8f:	mov    rdi,rax
  404a92:	call   405f60 <main@@Base+0xac0>
  404a97:	mov    WORD PTR [rbp-0x12],ax
  404a9b:	cmp    WORD PTR [rbp-0x12],0x0
  404aa0:	je     404abd <access_monster_buffer@@Base+0xd9d>
  404aa6:	mov    rax,QWORD PTR [rbp-0x10]
  404aaa:	movzx  ecx,WORD PTR [rbp-0x12]
  404aae:	movsxd rdx,ecx
  404ab1:	add    rax,rdx
  404ab4:	mov    QWORD PTR [rbp-0x8],rax
  404ab8:	jmp    404ac5 <access_monster_buffer@@Base+0xda5>
  404abd:	mov    QWORD PTR [rbp-0x8],0x0
  404ac5:	mov    rax,QWORD PTR [rbp-0x8]
  404ac9:	add    rsp,0x30
  404acd:	pop    rbp
  404ace:	ret    
  404acf:	nop
  404ad0:	push   rbp
  404ad1:	mov    rbp,rsp
  404ad4:	sub    rsp,0x10
  404ad8:	mov    QWORD PTR [rbp-0x8],rdi
  404adc:	cmp    QWORD PTR [rbp-0x8],0x0
  404ae1:	je     404afd <access_monster_buffer@@Base+0xddd>
  404ae7:	mov    rax,QWORD PTR [rbp-0x8]
  404aeb:	mov    rdi,rax
  404aee:	call   405fe0 <main@@Base+0xb40>
  404af3:	vmovss DWORD PTR [rbp-0xc],xmm0
  404af8:	jmp    404b0b <access_monster_buffer@@Base+0xdeb>
  404afd:	vxorps xmm0,xmm0,xmm0
  404b01:	vmovss DWORD PTR [rbp-0xc],xmm0
  404b06:	jmp    404b0b <access_monster_buffer@@Base+0xdeb>
  404b0b:	vmovss xmm0,DWORD PTR [rbp-0xc]
  404b10:	add    rsp,0x10
  404b14:	pop    rbp
  404b15:	ret    
  404b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b20:	push   rbp
  404b21:	mov    rbp,rsp
  404b24:	sub    rsp,0x10
  404b28:	mov    QWORD PTR [rbp-0x8],rdi
  404b2c:	cmp    QWORD PTR [rbp-0x8],0x0
  404b31:	je     404b53 <access_monster_buffer@@Base+0xe33>
  404b37:	mov    rax,QWORD PTR [rbp-0x8]
  404b3b:	add    rax,0x4
  404b41:	mov    rdi,rax
  404b44:	call   405fe0 <main@@Base+0xb40>
  404b49:	vmovss DWORD PTR [rbp-0xc],xmm0
  404b4e:	jmp    404b61 <access_monster_buffer@@Base+0xe41>
  404b53:	vxorps xmm0,xmm0,xmm0
  404b57:	vmovss DWORD PTR [rbp-0xc],xmm0
  404b5c:	jmp    404b61 <access_monster_buffer@@Base+0xe41>
  404b61:	vmovss xmm0,DWORD PTR [rbp-0xc]
  404b66:	add    rsp,0x10
  404b6a:	pop    rbp
  404b6b:	ret    
  404b6c:	nop    DWORD PTR [rax+0x0]
  404b70:	push   rbp
  404b71:	mov    rbp,rsp
  404b74:	sub    rsp,0x10
  404b78:	mov    QWORD PTR [rbp-0x8],rdi
  404b7c:	cmp    QWORD PTR [rbp-0x8],0x0
  404b81:	je     404ba3 <access_monster_buffer@@Base+0xe83>
  404b87:	mov    rax,QWORD PTR [rbp-0x8]
  404b8b:	add    rax,0x8
  404b91:	mov    rdi,rax
  404b94:	call   405fe0 <main@@Base+0xb40>
  404b99:	vmovss DWORD PTR [rbp-0xc],xmm0
  404b9e:	jmp    404bb1 <access_monster_buffer@@Base+0xe91>
  404ba3:	vxorps xmm0,xmm0,xmm0
  404ba7:	vmovss DWORD PTR [rbp-0xc],xmm0
  404bac:	jmp    404bb1 <access_monster_buffer@@Base+0xe91>
  404bb1:	vmovss xmm0,DWORD PTR [rbp-0xc]
  404bb6:	add    rsp,0x10
  404bba:	pop    rbp
  404bbb:	ret    
  404bbc:	nop    DWORD PTR [rax+0x0]
  404bc0:	push   rbp
  404bc1:	mov    rbp,rsp
  404bc4:	sub    rsp,0x30
  404bc8:	mov    QWORD PTR [rbp-0x8],rdi
  404bcc:	mov    QWORD PTR [rbp-0x10],rsi
  404bd0:	mov    rdi,QWORD PTR [rbp-0x8]
  404bd4:	mov    rsi,QWORD PTR [rbp-0x10]
  404bd8:	call   406020 <main@@Base+0xb80>
  404bdd:	mov    rcx,QWORD PTR [rbp-0x8]
  404be1:	add    rcx,0x4
  404be8:	mov    rdx,QWORD PTR [rbp-0x10]
  404bec:	add    rdx,0x4
  404bf3:	mov    rdi,rcx
  404bf6:	mov    rsi,rdx
  404bf9:	mov    QWORD PTR [rbp-0x18],rax
  404bfd:	call   406020 <main@@Base+0xb80>
  404c02:	mov    rcx,QWORD PTR [rbp-0x8]
  404c06:	add    rcx,0x8
  404c0d:	mov    rdx,QWORD PTR [rbp-0x10]
  404c11:	add    rdx,0x8
  404c18:	mov    rdi,rcx
  404c1b:	mov    rsi,rdx
  404c1e:	mov    QWORD PTR [rbp-0x20],rax
  404c22:	call   406020 <main@@Base+0xb80>
  404c27:	mov    rcx,QWORD PTR [rbp-0x8]
  404c2b:	mov    QWORD PTR [rbp-0x28],rax
  404c2f:	mov    rax,rcx
  404c32:	add    rsp,0x30
  404c36:	pop    rbp
  404c37:	ret    
  404c38:	nop    DWORD PTR [rax+rax*1+0x0]
  404c40:	push   rbp
  404c41:	mov    rbp,rsp
  404c44:	sub    rsp,0x40
  404c48:	mov    QWORD PTR [rbp-0x10],rdi
  404c4c:	mov    WORD PTR [rbp-0x1a],0x0
  404c52:	cmp    QWORD PTR [rbp-0x10],0x0
  404c57:	je     404c71 <access_monster_buffer@@Base+0xf51>
  404c5d:	mov    al,0x1
  404c5f:	test   al,0x1
  404c61:	jne    404c6c <access_monster_buffer@@Base+0xf4c>
  404c67:	jmp    404c71 <access_monster_buffer@@Base+0xf51>
  404c6c:	jmp    404c90 <access_monster_buffer@@Base+0xf70>
  404c71:	lea    rdi,[rip+0x86ea]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404c78:	lea    rsi,[rip+0x8709]        # 40d388 <_IO_stdin_used@@Base+0x388>
  404c7f:	mov    edx,0x87
  404c84:	lea    rcx,[rip+0x8928]        # 40d5b3 <_IO_stdin_used@@Base+0x5b3>
  404c8b:	call   403070 <__assert_fail@plt>
  404c90:	mov    WORD PTR [rbp-0x1c],0x5
  404c96:	mov    rax,QWORD PTR [rbp-0x10]
  404c9a:	mov    rcx,QWORD PTR [rbp-0x10]
  404c9e:	mov    rdi,rcx
  404ca1:	mov    QWORD PTR [rbp-0x30],rax
  404ca5:	call   405f40 <main@@Base+0xaa0>
  404caa:	xor    edx,edx
  404cac:	mov    ecx,edx
  404cae:	movsxd rsi,eax
  404cb1:	sub    rcx,rsi
  404cb4:	mov    rsi,QWORD PTR [rbp-0x30]
  404cb8:	add    rsi,rcx
  404cbb:	mov    QWORD PTR [rbp-0x28],rsi
  404cbf:	mov    rcx,QWORD PTR [rbp-0x28]
  404cc3:	mov    rdi,rcx
  404cc6:	call   405f60 <main@@Base+0xac0>
  404ccb:	movzx  edx,ax
  404cce:	mov    ecx,edx
  404cd0:	movzx  edx,WORD PTR [rbp-0x1c]
  404cd4:	add    edx,0x3
  404cd7:	movsxd rsi,edx
  404cda:	shl    rsi,0x1
  404cde:	cmp    rcx,rsi
  404ce1:	jb     404d0b <access_monster_buffer@@Base+0xfeb>
  404ce7:	mov    rax,QWORD PTR [rbp-0x28]
  404ceb:	movzx  ecx,WORD PTR [rbp-0x1c]
  404cef:	movsxd rdx,ecx
  404cf2:	shl    rdx,0x1
  404cf6:	add    rax,rdx
  404cf9:	add    rax,0x4
  404cff:	mov    rdi,rax
  404d02:	call   405f60 <main@@Base+0xac0>
  404d07:	mov    WORD PTR [rbp-0x1a],ax
  404d0b:	cmp    WORD PTR [rbp-0x1a],0x0
  404d10:	je     404d56 <access_monster_buffer@@Base+0x1036>
  404d16:	mov    rax,QWORD PTR [rbp-0x10]
  404d1a:	movzx  ecx,WORD PTR [rbp-0x1a]
  404d1e:	movsxd rdx,ecx
  404d21:	add    rax,rdx
  404d24:	mov    QWORD PTR [rbp-0x18],rax
  404d28:	mov    rax,QWORD PTR [rbp-0x18]
  404d2c:	add    rax,0x4
  404d32:	mov    rdx,QWORD PTR [rbp-0x18]
  404d36:	mov    rdi,rdx
  404d39:	mov    QWORD PTR [rbp-0x38],rax
  404d3d:	call   405ed0 <main@@Base+0xa30>
  404d42:	mov    eax,eax
  404d44:	mov    edx,eax
  404d46:	mov    rsi,QWORD PTR [rbp-0x38]
  404d4a:	add    rsi,rdx
  404d4d:	mov    QWORD PTR [rbp-0x8],rsi
  404d51:	jmp    404d5e <access_monster_buffer@@Base+0x103e>
  404d56:	mov    QWORD PTR [rbp-0x8],0x0
  404d5e:	mov    rax,QWORD PTR [rbp-0x8]
  404d62:	add    rsp,0x40
  404d66:	pop    rbp
  404d67:	ret    
  404d68:	nop    DWORD PTR [rax+rax*1+0x0]
  404d70:	push   rbp
  404d71:	mov    rbp,rsp
  404d74:	sub    rsp,0x10
  404d78:	mov    QWORD PTR [rbp-0x8],rdi
  404d7c:	mov    rdi,QWORD PTR [rbp-0x8]
  404d80:	call   406050 <main@@Base+0xbb0>
  404d85:	add    rsp,0x10
  404d89:	pop    rbp
  404d8a:	ret    
  404d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d90:	push   rbp
  404d91:	mov    rbp,rsp
  404d94:	sub    rsp,0x10
  404d98:	mov    QWORD PTR [rbp-0x8],rdi
  404d9c:	mov    QWORD PTR [rbp-0x10],rsi
  404da0:	mov    rdi,QWORD PTR [rbp-0x8]
  404da4:	call   406050 <main@@Base+0xbb0>
  404da9:	cmp    rax,QWORD PTR [rbp-0x10]
  404dad:	jbe    404dc7 <access_monster_buffer@@Base+0x10a7>
  404db3:	mov    al,0x1
  404db5:	test   al,0x1
  404db7:	jne    404dc2 <access_monster_buffer@@Base+0x10a2>
  404dbd:	jmp    404dc7 <access_monster_buffer@@Base+0x10a7>
  404dc2:	jmp    404de6 <access_monster_buffer@@Base+0x10c6>
  404dc7:	lea    rdi,[rip+0x884f]        # 40d61d <_IO_stdin_used@@Base+0x61d>
  404dce:	lea    rsi,[rip+0x887f]        # 40d654 <_IO_stdin_used@@Base+0x654>
  404dd5:	mov    edx,0x18b
  404dda:	lea    rcx,[rip+0x88f3]        # 40d6d4 <_IO_stdin_used@@Base+0x6d4>
  404de1:	call   403070 <__assert_fail@plt>
  404de6:	mov    rax,QWORD PTR [rbp-0x8]
  404dea:	add    rax,QWORD PTR [rbp-0x10]
  404dee:	mov    rdi,rax
  404df1:	call   4060a0 <main@@Base+0xc00>
  404df6:	movzx  eax,al
  404df9:	add    rsp,0x10
  404dfd:	pop    rbp
  404dfe:	ret    
  404dff:	nop
  404e00:	push   rbp
  404e01:	mov    rbp,rsp
  404e04:	sub    rsp,0x40
  404e08:	mov    QWORD PTR [rbp-0x10],rdi
  404e0c:	mov    WORD PTR [rbp-0x1a],0x0
  404e12:	cmp    QWORD PTR [rbp-0x10],0x0
  404e17:	je     404e31 <access_monster_buffer@@Base+0x1111>
  404e1d:	mov    al,0x1
  404e1f:	test   al,0x1
  404e21:	jne    404e2c <access_monster_buffer@@Base+0x110c>
  404e27:	jmp    404e31 <access_monster_buffer@@Base+0x1111>
  404e2c:	jmp    404e50 <access_monster_buffer@@Base+0x1130>
  404e31:	lea    rdi,[rip+0x852a]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404e38:	lea    rsi,[rip+0x8549]        # 40d388 <_IO_stdin_used@@Base+0x388>
  404e3f:	mov    edx,0x89
  404e44:	lea    rcx,[rip+0x88cb]        # 40d716 <_IO_stdin_used@@Base+0x716>
  404e4b:	call   403070 <__assert_fail@plt>
  404e50:	mov    WORD PTR [rbp-0x1c],0x7
  404e56:	mov    rax,QWORD PTR [rbp-0x10]
  404e5a:	mov    rcx,QWORD PTR [rbp-0x10]
  404e5e:	mov    rdi,rcx
  404e61:	mov    QWORD PTR [rbp-0x30],rax
  404e65:	call   405f40 <main@@Base+0xaa0>
  404e6a:	xor    edx,edx
  404e6c:	mov    ecx,edx
  404e6e:	movsxd rsi,eax
  404e71:	sub    rcx,rsi
  404e74:	mov    rsi,QWORD PTR [rbp-0x30]
  404e78:	add    rsi,rcx
  404e7b:	mov    QWORD PTR [rbp-0x28],rsi
  404e7f:	mov    rcx,QWORD PTR [rbp-0x28]
  404e83:	mov    rdi,rcx
  404e86:	call   405f60 <main@@Base+0xac0>
  404e8b:	movzx  edx,ax
  404e8e:	mov    ecx,edx
  404e90:	movzx  edx,WORD PTR [rbp-0x1c]
  404e94:	add    edx,0x3
  404e97:	movsxd rsi,edx
  404e9a:	shl    rsi,0x1
  404e9e:	cmp    rcx,rsi
  404ea1:	jb     404ecb <access_monster_buffer@@Base+0x11ab>
  404ea7:	mov    rax,QWORD PTR [rbp-0x28]
  404eab:	movzx  ecx,WORD PTR [rbp-0x1c]
  404eaf:	movsxd rdx,ecx
  404eb2:	shl    rdx,0x1
  404eb6:	add    rax,rdx
  404eb9:	add    rax,0x4
  404ebf:	mov    rdi,rax
  404ec2:	call   405f60 <main@@Base+0xac0>
  404ec7:	mov    WORD PTR [rbp-0x1a],ax
  404ecb:	cmp    WORD PTR [rbp-0x1a],0x0
  404ed0:	je     404f16 <access_monster_buffer@@Base+0x11f6>
  404ed6:	mov    rax,QWORD PTR [rbp-0x10]
  404eda:	movzx  ecx,WORD PTR [rbp-0x1a]
  404ede:	movsxd rdx,ecx
  404ee1:	add    rax,rdx
  404ee4:	mov    QWORD PTR [rbp-0x18],rax
  404ee8:	mov    rax,QWORD PTR [rbp-0x18]
  404eec:	add    rax,0x4
  404ef2:	mov    rdx,QWORD PTR [rbp-0x18]
  404ef6:	mov    rdi,rdx
  404ef9:	mov    QWORD PTR [rbp-0x38],rax
  404efd:	call   405ed0 <main@@Base+0xa30>
  404f02:	mov    eax,eax
  404f04:	mov    edx,eax
  404f06:	mov    rsi,QWORD PTR [rbp-0x38]
  404f0a:	add    rsi,rdx
  404f0d:	mov    QWORD PTR [rbp-0x8],rsi
  404f11:	jmp    404f1e <access_monster_buffer@@Base+0x11fe>
  404f16:	mov    QWORD PTR [rbp-0x8],0x0
  404f1e:	mov    rax,QWORD PTR [rbp-0x8]
  404f22:	add    rsp,0x40
  404f26:	pop    rbp
  404f27:	ret    
  404f28:	nop    DWORD PTR [rax+rax*1+0x0]
  404f30:	push   rbp
  404f31:	mov    rbp,rsp
  404f34:	sub    rsp,0x10
  404f38:	mov    QWORD PTR [rbp-0x8],rdi
  404f3c:	cmp    QWORD PTR [rbp-0x8],0x0
  404f41:	je     404f66 <access_monster_buffer@@Base+0x1246>
  404f47:	mov    rax,QWORD PTR [rbp-0x8]
  404f4b:	add    rax,0xfffffffffffffffc
  404f51:	mov    rdi,rax
  404f54:	call   405ed0 <main@@Base+0xa30>
  404f59:	mov    eax,eax
  404f5b:	mov    ecx,eax
  404f5d:	mov    QWORD PTR [rbp-0x10],rcx
  404f61:	jmp    404f73 <access_monster_buffer@@Base+0x1253>
  404f66:	xor    eax,eax
  404f68:	mov    ecx,eax
  404f6a:	mov    QWORD PTR [rbp-0x10],rcx
  404f6e:	jmp    404f73 <access_monster_buffer@@Base+0x1253>
  404f73:	mov    rax,QWORD PTR [rbp-0x10]
  404f77:	add    rsp,0x10
  404f7b:	pop    rbp
  404f7c:	ret    
  404f7d:	nop    DWORD PTR [rax]
  404f80:	push   rbp
  404f81:	mov    rbp,rsp
  404f84:	sub    rsp,0x40
  404f88:	mov    QWORD PTR [rbp-0x10],rdi
  404f8c:	mov    WORD PTR [rbp-0x1a],0x0
  404f92:	cmp    QWORD PTR [rbp-0x10],0x0
  404f97:	je     404fb1 <access_monster_buffer@@Base+0x1291>
  404f9d:	mov    al,0x1
  404f9f:	test   al,0x1
  404fa1:	jne    404fac <access_monster_buffer@@Base+0x128c>
  404fa7:	jmp    404fb1 <access_monster_buffer@@Base+0x1291>
  404fac:	jmp    404fd0 <access_monster_buffer@@Base+0x12b0>
  404fb1:	lea    rdi,[rip+0x83aa]        # 40d362 <_IO_stdin_used@@Base+0x362>
  404fb8:	lea    rsi,[rip+0x83c9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  404fbf:	mov    edx,0x94
  404fc4:	lea    rcx,[rip+0x87a3]        # 40d76e <_IO_stdin_used@@Base+0x76e>
  404fcb:	call   403070 <__assert_fail@plt>
  404fd0:	mov    WORD PTR [rbp-0x1c],0x0
  404fd6:	mov    rax,QWORD PTR [rbp-0x10]
  404fda:	mov    rcx,QWORD PTR [rbp-0x10]
  404fde:	mov    rdi,rcx
  404fe1:	mov    QWORD PTR [rbp-0x30],rax
  404fe5:	call   405f40 <main@@Base+0xaa0>
  404fea:	xor    edx,edx
  404fec:	mov    ecx,edx
  404fee:	movsxd rsi,eax
  404ff1:	sub    rcx,rsi
  404ff4:	mov    rsi,QWORD PTR [rbp-0x30]
  404ff8:	add    rsi,rcx
  404ffb:	mov    QWORD PTR [rbp-0x28],rsi
  404fff:	mov    rcx,QWORD PTR [rbp-0x28]
  405003:	mov    rdi,rcx
  405006:	call   405f60 <main@@Base+0xac0>
  40500b:	movzx  edx,ax
  40500e:	mov    ecx,edx
  405010:	movzx  edx,WORD PTR [rbp-0x1c]
  405014:	add    edx,0x3
  405017:	movsxd rsi,edx
  40501a:	shl    rsi,0x1
  40501e:	cmp    rcx,rsi
  405021:	jb     40504b <access_monster_buffer@@Base+0x132b>
  405027:	mov    rax,QWORD PTR [rbp-0x28]
  40502b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40502f:	movsxd rdx,ecx
  405032:	shl    rdx,0x1
  405036:	add    rax,rdx
  405039:	add    rax,0x4
  40503f:	mov    rdi,rax
  405042:	call   405f60 <main@@Base+0xac0>
  405047:	mov    WORD PTR [rbp-0x1a],ax
  40504b:	cmp    WORD PTR [rbp-0x1a],0x0
  405050:	je     405096 <access_monster_buffer@@Base+0x1376>
  405056:	mov    rax,QWORD PTR [rbp-0x10]
  40505a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40505e:	movsxd rdx,ecx
  405061:	add    rax,rdx
  405064:	mov    QWORD PTR [rbp-0x18],rax
  405068:	mov    rax,QWORD PTR [rbp-0x18]
  40506c:	add    rax,0x4
  405072:	mov    rdx,QWORD PTR [rbp-0x18]
  405076:	mov    rdi,rdx
  405079:	mov    QWORD PTR [rbp-0x38],rax
  40507d:	call   405ed0 <main@@Base+0xa30>
  405082:	mov    eax,eax
  405084:	mov    edx,eax
  405086:	mov    rsi,QWORD PTR [rbp-0x38]
  40508a:	add    rsi,rdx
  40508d:	mov    QWORD PTR [rbp-0x8],rsi
  405091:	jmp    40509e <access_monster_buffer@@Base+0x137e>
  405096:	mov    QWORD PTR [rbp-0x8],0x0
  40509e:	mov    rax,QWORD PTR [rbp-0x8]
  4050a2:	add    rsp,0x40
  4050a6:	pop    rbp
  4050a7:	ret    
  4050a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4050b0:	push   rbp
  4050b1:	mov    rbp,rsp
  4050b4:	sub    rsp,0x20
  4050b8:	mov    QWORD PTR [rbp-0x8],rdi
  4050bc:	mov    QWORD PTR [rbp-0x10],rsi
  4050c0:	mov    rax,QWORD PTR [rbp-0x8]
  4050c4:	mov    rcx,QWORD PTR [rbp-0x10]
  4050c8:	shl    rcx,0x2
  4050cc:	add    rax,rcx
  4050cf:	mov    QWORD PTR [rbp-0x18],rax
  4050d3:	mov    rax,QWORD PTR [rbp-0x8]
  4050d7:	mov    rdi,rax
  4050da:	call   406050 <main@@Base+0xbb0>
  4050df:	cmp    rax,QWORD PTR [rbp-0x10]
  4050e3:	jbe    4050fd <access_monster_buffer@@Base+0x13dd>
  4050e9:	mov    al,0x1
  4050eb:	test   al,0x1
  4050ed:	jne    4050f8 <access_monster_buffer@@Base+0x13d8>
  4050f3:	jmp    4050fd <access_monster_buffer@@Base+0x13dd>
  4050f8:	jmp    40511c <access_monster_buffer@@Base+0x13fc>
  4050fd:	lea    rdi,[rip+0x8519]        # 40d61d <_IO_stdin_used@@Base+0x61d>
  405104:	lea    rsi,[rip+0x827d]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40510b:	mov    edx,0x91
  405110:	lea    rcx,[rip+0x86a4]        # 40d7bb <_IO_stdin_used@@Base+0x7bb>
  405117:	call   403070 <__assert_fail@plt>
  40511c:	mov    rax,QWORD PTR [rbp-0x18]
  405120:	mov    rcx,QWORD PTR [rbp-0x18]
  405124:	mov    rdi,rcx
  405127:	mov    QWORD PTR [rbp-0x20],rax
  40512b:	call   405ed0 <main@@Base+0xa30>
  405130:	mov    eax,eax
  405132:	mov    ecx,eax
  405134:	mov    rdx,QWORD PTR [rbp-0x20]
  405138:	add    rdx,rcx
  40513b:	mov    rax,rdx
  40513e:	add    rsp,0x20
  405142:	pop    rbp
  405143:	ret    
  405144:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40514e:	xchg   ax,ax
  405150:	push   rbp
  405151:	mov    rbp,rsp
  405154:	sub    rsp,0x30
  405158:	mov    QWORD PTR [rbp-0x8],rdi
  40515c:	mov    WORD PTR [rbp-0xa],0x0
  405162:	cmp    QWORD PTR [rbp-0x8],0x0
  405167:	je     405181 <access_monster_buffer@@Base+0x1461>
  40516d:	mov    al,0x1
  40516f:	test   al,0x1
  405171:	jne    40517c <access_monster_buffer@@Base+0x145c>
  405177:	jmp    405181 <access_monster_buffer@@Base+0x1461>
  40517c:	jmp    4051a0 <access_monster_buffer@@Base+0x1480>
  405181:	lea    rdi,[rip+0x81da]        # 40d362 <_IO_stdin_used@@Base+0x362>
  405188:	lea    rsi,[rip+0x81f9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40518f:	mov    edx,0x95
  405194:	lea    rcx,[rip+0x867d]        # 40d818 <_IO_stdin_used@@Base+0x818>
  40519b:	call   403070 <__assert_fail@plt>
  4051a0:	mov    WORD PTR [rbp-0xc],0x1
  4051a6:	mov    rax,QWORD PTR [rbp-0x8]
  4051aa:	mov    rcx,QWORD PTR [rbp-0x8]
  4051ae:	mov    rdi,rcx
  4051b1:	mov    QWORD PTR [rbp-0x20],rax
  4051b5:	call   405f40 <main@@Base+0xaa0>
  4051ba:	xor    edx,edx
  4051bc:	mov    ecx,edx
  4051be:	movsxd rsi,eax
  4051c1:	sub    rcx,rsi
  4051c4:	mov    rsi,QWORD PTR [rbp-0x20]
  4051c8:	add    rsi,rcx
  4051cb:	mov    QWORD PTR [rbp-0x18],rsi
  4051cf:	mov    rcx,QWORD PTR [rbp-0x18]
  4051d3:	mov    rdi,rcx
  4051d6:	call   405f60 <main@@Base+0xac0>
  4051db:	movzx  edx,ax
  4051de:	mov    ecx,edx
  4051e0:	movzx  edx,WORD PTR [rbp-0xc]
  4051e4:	add    edx,0x3
  4051e7:	movsxd rsi,edx
  4051ea:	shl    rsi,0x1
  4051ee:	cmp    rcx,rsi
  4051f1:	jb     40521b <access_monster_buffer@@Base+0x14fb>
  4051f7:	mov    rax,QWORD PTR [rbp-0x18]
  4051fb:	movzx  ecx,WORD PTR [rbp-0xc]
  4051ff:	movsxd rdx,ecx
  405202:	shl    rdx,0x1
  405206:	add    rax,rdx
  405209:	add    rax,0x4
  40520f:	mov    rdi,rax
  405212:	call   405f60 <main@@Base+0xac0>
  405217:	mov    WORD PTR [rbp-0xa],ax
  40521b:	movzx  eax,WORD PTR [rbp-0xa]
  40521f:	cmp    eax,0x0
  405222:	je     405249 <access_monster_buffer@@Base+0x1529>
  405228:	mov    rax,QWORD PTR [rbp-0x8]
  40522c:	movzx  ecx,WORD PTR [rbp-0xa]
  405230:	movsxd rdx,ecx
  405233:	add    rax,rdx
  405236:	mov    rdi,rax
  405239:	call   405f90 <main@@Base+0xaf0>
  40523e:	movsx  ecx,ax
  405241:	mov    DWORD PTR [rbp-0x24],ecx
  405244:	jmp    405253 <access_monster_buffer@@Base+0x1533>
  405249:	xor    eax,eax
  40524b:	mov    DWORD PTR [rbp-0x24],eax
  40524e:	jmp    405253 <access_monster_buffer@@Base+0x1533>
  405253:	mov    eax,DWORD PTR [rbp-0x24]
  405256:	cwde   
  405257:	add    rsp,0x30
  40525b:	pop    rbp
  40525c:	ret    
  40525d:	nop    DWORD PTR [rax]
  405260:	push   rbp
  405261:	mov    rbp,rsp
  405264:	sub    rsp,0x30
  405268:	mov    QWORD PTR [rbp-0x8],rdi
  40526c:	mov    WORD PTR [rbp-0xa],0x0
  405272:	cmp    QWORD PTR [rbp-0x8],0x0
  405277:	je     405291 <access_monster_buffer@@Base+0x1571>
  40527d:	mov    al,0x1
  40527f:	test   al,0x1
  405281:	jne    40528c <access_monster_buffer@@Base+0x156c>
  405287:	jmp    405291 <access_monster_buffer@@Base+0x1571>
  40528c:	jmp    4052b0 <access_monster_buffer@@Base+0x1590>
  405291:	lea    rdi,[rip+0x80ca]        # 40d362 <_IO_stdin_used@@Base+0x362>
  405298:	lea    rsi,[rip+0x80e9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  40529f:	mov    edx,0x8a
  4052a4:	lea    rcx,[rip+0x85af]        # 40d85a <_IO_stdin_used@@Base+0x85a>
  4052ab:	call   403070 <__assert_fail@plt>
  4052b0:	mov    WORD PTR [rbp-0xc],0x8
  4052b6:	mov    rax,QWORD PTR [rbp-0x8]
  4052ba:	mov    rcx,QWORD PTR [rbp-0x8]
  4052be:	mov    rdi,rcx
  4052c1:	mov    QWORD PTR [rbp-0x20],rax
  4052c5:	call   405f40 <main@@Base+0xaa0>
  4052ca:	xor    edx,edx
  4052cc:	mov    ecx,edx
  4052ce:	movsxd rsi,eax
  4052d1:	sub    rcx,rsi
  4052d4:	mov    rsi,QWORD PTR [rbp-0x20]
  4052d8:	add    rsi,rcx
  4052db:	mov    QWORD PTR [rbp-0x18],rsi
  4052df:	mov    rcx,QWORD PTR [rbp-0x18]
  4052e3:	mov    rdi,rcx
  4052e6:	call   405f60 <main@@Base+0xac0>
  4052eb:	movzx  edx,ax
  4052ee:	mov    ecx,edx
  4052f0:	movzx  edx,WORD PTR [rbp-0xc]
  4052f4:	add    edx,0x3
  4052f7:	movsxd rsi,edx
  4052fa:	shl    rsi,0x1
  4052fe:	cmp    rcx,rsi
  405301:	jb     40532b <access_monster_buffer@@Base+0x160b>
  405307:	mov    rax,QWORD PTR [rbp-0x18]
  40530b:	movzx  ecx,WORD PTR [rbp-0xc]
  40530f:	movsxd rdx,ecx
  405312:	shl    rdx,0x1
  405316:	add    rax,rdx
  405319:	add    rax,0x4
  40531f:	mov    rdi,rax
  405322:	call   405f60 <main@@Base+0xac0>
  405327:	mov    WORD PTR [rbp-0xa],ax
  40532b:	movzx  eax,WORD PTR [rbp-0xa]
  40532f:	cmp    eax,0x0
  405332:	je     405359 <access_monster_buffer@@Base+0x1639>
  405338:	mov    rax,QWORD PTR [rbp-0x8]
  40533c:	movzx  ecx,WORD PTR [rbp-0xa]
  405340:	movsxd rdx,ecx
  405343:	add    rax,rdx
  405346:	mov    rdi,rax
  405349:	call   4060e0 <main@@Base+0xc40>
  40534e:	movzx  ecx,al
  405351:	mov    DWORD PTR [rbp-0x24],ecx
  405354:	jmp    405363 <access_monster_buffer@@Base+0x1643>
  405359:	xor    eax,eax
  40535b:	mov    DWORD PTR [rbp-0x24],eax
  40535e:	jmp    405363 <access_monster_buffer@@Base+0x1643>
  405363:	mov    eax,DWORD PTR [rbp-0x24]
  405366:	movzx  eax,al
  405369:	add    rsp,0x30
  40536d:	pop    rbp
  40536e:	ret    
  40536f:	nop
  405370:	push   rbp
  405371:	mov    rbp,rsp
  405374:	sub    rsp,0x40
  405378:	mov    QWORD PTR [rbp-0x10],rdi
  40537c:	mov    WORD PTR [rbp-0x1a],0x0
  405382:	cmp    QWORD PTR [rbp-0x10],0x0
  405387:	je     4053a1 <access_monster_buffer@@Base+0x1681>
  40538d:	mov    al,0x1
  40538f:	test   al,0x1
  405391:	jne    40539c <access_monster_buffer@@Base+0x167c>
  405397:	jmp    4053a1 <access_monster_buffer@@Base+0x1681>
  40539c:	jmp    4053c0 <access_monster_buffer@@Base+0x16a0>
  4053a1:	lea    rdi,[rip+0x7fba]        # 40d362 <_IO_stdin_used@@Base+0x362>
  4053a8:	lea    rsi,[rip+0x7fd9]        # 40d388 <_IO_stdin_used@@Base+0x388>
  4053af:	mov    edx,0x8a
  4053b4:	lea    rcx,[rip+0x8507]        # 40d8c2 <_IO_stdin_used@@Base+0x8c2>
  4053bb:	call   403070 <__assert_fail@plt>
  4053c0:	mov    WORD PTR [rbp-0x1c],0x9
  4053c6:	mov    rax,QWORD PTR [rbp-0x10]
  4053ca:	mov    rcx,QWORD PTR [rbp-0x10]
  4053ce:	mov    rdi,rcx
  4053d1:	mov    QWORD PTR [rbp-0x30],rax
  4053d5:	call   405f40 <main@@Base+0xaa0>
  4053da:	xor    edx,edx
  4053dc:	mov    ecx,edx
  4053de:	movsxd rsi,eax
  4053e1:	sub    rcx,rsi
  4053e4:	mov    rsi,QWORD PTR [rbp-0x30]
  4053e8:	add    rsi,rcx
  4053eb:	mov    QWORD PTR [rbp-0x28],rsi
  4053ef:	mov    rcx,QWORD PTR [rbp-0x28]
  4053f3:	mov    rdi,rcx
  4053f6:	call   405f60 <main@@Base+0xac0>
  4053fb:	movzx  edx,ax
  4053fe:	mov    ecx,edx
  405400:	movzx  edx,WORD PTR [rbp-0x1c]
  405404:	add    edx,0x3
  405407:	movsxd rsi,edx
  40540a:	shl    rsi,0x1
  40540e:	cmp    rcx,rsi
  405411:	jb     40543b <access_monster_buffer@@Base+0x171b>
  405417:	mov    rax,QWORD PTR [rbp-0x28]
  40541b:	movzx  ecx,WORD PTR [rbp-0x1c]
  40541f:	movsxd rdx,ecx
  405422:	shl    rdx,0x1
  405426:	add    rax,rdx
  405429:	add    rax,0x4
  40542f:	mov    rdi,rax
  405432:	call   405f60 <main@@Base+0xac0>
  405437:	mov    WORD PTR [rbp-0x1a],ax
  40543b:	cmp    WORD PTR [rbp-0x1a],0x0
  405440:	je     405480 <access_monster_buffer@@Base+0x1760>
  405446:	mov    rax,QWORD PTR [rbp-0x10]
  40544a:	movzx  ecx,WORD PTR [rbp-0x1a]
  40544e:	movsxd rdx,ecx
  405451:	add    rax,rdx
  405454:	mov    QWORD PTR [rbp-0x18],rax
  405458:	mov    rax,QWORD PTR [rbp-0x18]
  40545c:	mov    rdx,QWORD PTR [rbp-0x18]
  405460:	mov    rdi,rdx
  405463:	mov    QWORD PTR [rbp-0x38],rax
  405467:	call   405ed0 <main@@Base+0xa30>
  40546c:	mov    eax,eax
  40546e:	mov    edx,eax
  405470:	mov    rsi,QWORD PTR [rbp-0x38]
  405474:	add    rsi,rdx
  405477:	mov    QWORD PTR [rbp-0x8],rsi
  40547b:	jmp    405488 <access_monster_buffer@@Base+0x1768>
  405480:	mov    QWORD PTR [rbp-0x8],0x0
  405488:	mov    rax,QWORD PTR [rbp-0x8]
  40548c:	add    rsp,0x40
  405490:	pop    rbp
  405491:	ret    
  405492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40549c:	nop    DWORD PTR [rax+0x0]

00000000004054a0 <main@@Base>:
  4054a0:	push   rbp
  4054a1:	mov    rbp,rsp
  4054a4:	sub    rsp,0x1c0
  4054ab:	mov    DWORD PTR [rbp-0x4],0x0
  4054b2:	mov    DWORD PTR [rbp-0x8],edi
  4054b5:	mov    QWORD PTR [rbp-0x10],rsi
  4054b9:	lea    rdi,[rbp-0x198]
  4054c0:	call   406410 <flatcc_builder_init@@Base>
  4054c5:	xor    esi,esi
  4054c7:	lea    rdi,[rbp-0x198]
  4054ce:	call   4031f0 <create_monster_bottom_up@@Base>
  4054d3:	xor    ecx,ecx
  4054d5:	cmp    ecx,eax
  4054d7:	je     4054fc <main@@Base+0x5c>
  4054dd:	lea    rdi,[rip+0x984e]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4054e4:	lea    rsi,[rip+0x7b33]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  4054eb:	mov    edx,0x134
  4054f0:	lea    rcx,[rip+0x7bb6]        # 40d0ad <_IO_stdin_used@@Base+0xad>
  4054f7:	call   403070 <__assert_fail@plt>
  4054fc:	jmp    405501 <main@@Base+0x61>
  405501:	lea    rdi,[rbp-0x198]
  405508:	lea    rsi,[rbp-0x1a8]
  40550f:	call   40bad0 <flatcc_builder_finalize_aligned_buffer@@Base>
  405514:	mov    QWORD PTR [rbp-0x1a0],rax
  40551b:	mov    rdi,QWORD PTR [rbp-0x1a0]
  405522:	call   40bc60 <flatcc_builder_aligned_free@@Base>
  405527:	lea    rdi,[rbp-0x198]
  40552e:	call   406690 <flatcc_builder_reset@@Base>
  405533:	lea    rdi,[rbp-0x198]
  40553a:	mov    esi,0x1
  40553f:	call   4031f0 <create_monster_bottom_up@@Base>
  405544:	xor    ecx,ecx
  405546:	cmp    ecx,eax
  405548:	je     40556d <main@@Base+0xcd>
  40554e:	lea    rdi,[rip+0x97dd]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  405555:	lea    rsi,[rip+0x7ac2]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  40555c:	mov    edx,0x14f
  405561:	lea    rcx,[rip+0x7b45]        # 40d0ad <_IO_stdin_used@@Base+0xad>
  405568:	call   403070 <__assert_fail@plt>
  40556d:	jmp    405572 <main@@Base+0xd2>
  405572:	lea    rdi,[rbp-0x198]
  405579:	lea    rsi,[rbp-0x1a8]
  405580:	call   40bad0 <flatcc_builder_finalize_aligned_buffer@@Base>
  405585:	mov    QWORD PTR [rbp-0x1a0],rax
  40558c:	mov    rdi,QWORD PTR [rbp-0x1a0]
  405593:	call   403d20 <access_monster_buffer@@Base>
  405598:	mov    rdi,QWORD PTR [rbp-0x1a0]
  40559f:	mov    DWORD PTR [rbp-0x1ac],eax
  4055a5:	call   40bc60 <flatcc_builder_aligned_free@@Base>
  4055aa:	lea    rdi,[rbp-0x198]
  4055b1:	call   406690 <flatcc_builder_reset@@Base>
  4055b6:	lea    rdi,[rbp-0x198]
  4055bd:	mov    DWORD PTR [rbp-0x1b0],eax
  4055c3:	call   403a70 <create_monster_top_down@@Base>
  4055c8:	lea    rdi,[rbp-0x198]
  4055cf:	lea    rsi,[rbp-0x1a8]
  4055d6:	mov    DWORD PTR [rbp-0x1b4],eax
  4055dc:	call   40b9f0 <flatcc_builder_finalize_buffer@@Base>
  4055e1:	mov    QWORD PTR [rbp-0x1a0],rax
  4055e8:	mov    rdi,QWORD PTR [rbp-0x1a0]
  4055ef:	call   403d20 <access_monster_buffer@@Base>
  4055f4:	xor    ecx,ecx
  4055f6:	cmp    ecx,eax
  4055f8:	je     40561d <main@@Base+0x17d>
  4055fe:	lea    rdi,[rip+0x972d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  405605:	lea    rsi,[rip+0x7a12]        # 40d01e <_IO_stdin_used@@Base+0x1e>
  40560c:	mov    edx,0x156
  405611:	lea    rcx,[rip+0x7a95]        # 40d0ad <_IO_stdin_used@@Base+0xad>
  405618:	call   403070 <__assert_fail@plt>
  40561d:	jmp    405622 <main@@Base+0x182>
  405622:	mov    rdi,QWORD PTR [rbp-0x1a0]
  405629:	call   403030 <free@plt>
  40562e:	lea    rdi,[rbp-0x198]
  405635:	call   4066c0 <flatcc_builder_clear@@Base>
  40563a:	lea    rdi,[rip+0x7a83]        # 40d0c4 <_IO_stdin_used@@Base+0xc4>
  405641:	mov    al,0x0
  405643:	call   403060 <printf@plt>
  405648:	xor    ecx,ecx
  40564a:	mov    DWORD PTR [rbp-0x1b8],eax
  405650:	mov    eax,ecx
  405652:	add    rsp,0x1c0
  405659:	pop    rbp
  40565a:	ret    
  40565b:	nop    DWORD PTR [rax+rax*1+0x0]
  405660:	push   rbp
  405661:	mov    rbp,rsp
  405664:	sub    rsp,0x10
  405668:	mov    QWORD PTR [rbp-0x8],rdi
  40566c:	mov    rdi,QWORD PTR [rbp-0x8]
  405670:	mov    esi,0x2
  405675:	call   408cf0 <flatcc_builder_start_table@@Base>
  40567a:	add    rsp,0x10
  40567e:	pop    rbp
  40567f:	ret    
  405680:	push   rbp
  405681:	mov    rbp,rsp
  405684:	sub    rsp,0x20
  405688:	mov    QWORD PTR [rbp-0x8],rdi
  40568c:	mov    DWORD PTR [rbp-0xc],esi
  40568f:	cmp    DWORD PTR [rbp-0xc],0x0
  405693:	je     4056c5 <main@@Base+0x225>
  405699:	xor    esi,esi
  40569b:	mov    rdi,QWORD PTR [rbp-0x8]
  40569f:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  4056a4:	mov    QWORD PTR [rbp-0x18],rax
  4056a8:	cmp    rax,0x0
  4056ac:	je     4056c5 <main@@Base+0x225>
  4056b2:	xor    eax,eax
  4056b4:	mov    ecx,DWORD PTR [rbp-0xc]
  4056b7:	mov    rdx,QWORD PTR [rbp-0x18]
  4056bb:	mov    DWORD PTR [rdx],ecx
  4056bd:	mov    DWORD PTR [rbp-0x1c],eax
  4056c0:	jmp    4056d2 <main@@Base+0x232>
  4056c5:	mov    eax,0xffffffff
  4056ca:	mov    DWORD PTR [rbp-0x1c],eax
  4056cd:	jmp    4056d2 <main@@Base+0x232>
  4056d2:	mov    eax,DWORD PTR [rbp-0x1c]
  4056d5:	add    rsp,0x20
  4056d9:	pop    rbp
  4056da:	ret    
  4056db:	nop    DWORD PTR [rax+rax*1+0x0]
  4056e0:	push   rbp
  4056e1:	mov    rbp,rsp
  4056e4:	sub    rsp,0x20
  4056e8:	mov    QWORD PTR [rbp-0x10],rdi
  4056ec:	mov    WORD PTR [rbp-0x12],si
  4056f0:	movsx  eax,WORD PTR [rbp-0x12]
  4056f4:	cmp    eax,0x0
  4056f7:	jne    405709 <main@@Base+0x269>
  4056fd:	mov    DWORD PTR [rbp-0x4],0x0
  405704:	jmp    40574f <main@@Base+0x2af>
  405709:	mov    rdi,QWORD PTR [rbp-0x10]
  40570d:	mov    esi,0x1
  405712:	mov    edx,0x2
  405717:	mov    ecx,0x2
  40571c:	call   40a5c0 <flatcc_builder_table_add@@Base>
  405721:	mov    QWORD PTR [rbp-0x20],rax
  405725:	cmp    rax,0x0
  405729:	jne    40573b <main@@Base+0x29b>
  40572f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405736:	jmp    40574f <main@@Base+0x2af>
  40573b:	mov    rdi,QWORD PTR [rbp-0x20]
  40573f:	movsx  esi,WORD PTR [rbp-0x12]
  405743:	call   4057c0 <main@@Base+0x320>
  405748:	mov    DWORD PTR [rbp-0x4],0x0
  40574f:	mov    eax,DWORD PTR [rbp-0x4]
  405752:	add    rsp,0x20
  405756:	pop    rbp
  405757:	ret    
  405758:	nop    DWORD PTR [rax+rax*1+0x0]
  405760:	push   rbp
  405761:	mov    rbp,rsp
  405764:	sub    rsp,0x10
  405768:	xor    edx,edx
  40576a:	mov    QWORD PTR [rbp-0x8],rdi
  40576e:	mov    rdi,QWORD PTR [rbp-0x8]
  405772:	lea    rsi,[rip+0x81c1]        # 40d93a <_IO_stdin_used@@Base+0x93a>
  405779:	call   4098a0 <flatcc_builder_check_required@@Base>
  40577e:	cmp    eax,0x0
  405781:	je     40578c <main@@Base+0x2ec>
  405787:	jmp    4057ab <main@@Base+0x30b>
  40578c:	lea    rdi,[rip+0x7968]        # 40d0fb <_IO_stdin_used@@Base+0xfb>
  405793:	lea    rsi,[rip+0x79fd]        # 40d197 <_IO_stdin_used@@Base+0x197>
  40579a:	mov    edx,0x34
  40579f:	lea    rcx,[rip+0x7a67]        # 40d20d <_IO_stdin_used@@Base+0x20d>
  4057a6:	call   403070 <__assert_fail@plt>
  4057ab:	mov    rdi,QWORD PTR [rbp-0x8]
  4057af:	call   409970 <flatcc_builder_end_table@@Base>
  4057b4:	add    rsp,0x10
  4057b8:	pop    rbp
  4057b9:	ret    
  4057ba:	nop    WORD PTR [rax+rax*1+0x0]
  4057c0:	push   rbp
  4057c1:	mov    rbp,rsp
  4057c4:	sub    rsp,0x10
  4057c8:	mov    QWORD PTR [rbp-0x8],rdi
  4057cc:	mov    WORD PTR [rbp-0xa],si
  4057d0:	movsx  edi,WORD PTR [rbp-0xa]
  4057d4:	call   4057f0 <main@@Base+0x350>
  4057d9:	mov    rcx,QWORD PTR [rbp-0x8]
  4057dd:	mov    WORD PTR [rcx],ax
  4057e0:	mov    rax,QWORD PTR [rbp-0x8]
  4057e4:	add    rsp,0x10
  4057e8:	pop    rbp
  4057e9:	ret    
  4057ea:	nop    WORD PTR [rax+rax*1+0x0]
  4057f0:	push   rbp
  4057f1:	mov    rbp,rsp
  4057f4:	mov    WORD PTR [rbp-0x2],di
  4057f8:	movsx  eax,WORD PTR [rbp-0x2]
  4057fc:	pop    rbp
  4057fd:	ret    
  4057fe:	xchg   ax,ax
  405800:	push   rbp
  405801:	mov    rbp,rsp
  405804:	sub    rsp,0x10
  405808:	xor    eax,eax
  40580a:	mov    QWORD PTR [rbp-0x8],rdi
  40580e:	mov    QWORD PTR [rbp-0x10],rsi
  405812:	mov    rdi,QWORD PTR [rbp-0x8]
  405816:	mov    rsi,QWORD PTR [rbp-0x10]
  40581a:	mov    edx,eax
  40581c:	mov    ecx,eax
  40581e:	call   4076b0 <flatcc_builder_start_buffer@@Base>
  405823:	add    rsp,0x10
  405827:	pop    rbp
  405828:	ret    
  405829:	nop    DWORD PTR [rax+0x0]
  405830:	push   rbp
  405831:	mov    rbp,rsp
  405834:	sub    rsp,0x10
  405838:	mov    QWORD PTR [rbp-0x8],rdi
  40583c:	mov    DWORD PTR [rbp-0xc],esi
  40583f:	mov    rdi,QWORD PTR [rbp-0x8]
  405843:	mov    esi,DWORD PTR [rbp-0xc]
  405846:	call   4079e0 <flatcc_builder_end_buffer@@Base>
  40584b:	add    rsp,0x10
  40584f:	pop    rbp
  405850:	ret    
  405851:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40585b:	nop    DWORD PTR [rax+rax*1+0x0]
  405860:	push   rbp
  405861:	mov    rbp,rsp
  405864:	sub    rsp,0x40
  405868:	mov    rax,QWORD PTR [rbp+0x20]
  40586c:	mov    r10d,DWORD PTR [rbp+0x18]
  405870:	mov    r11b,BYTE PTR [rbp+0x10]
  405874:	mov    QWORD PTR [rbp-0x10],rdi
  405878:	mov    QWORD PTR [rbp-0x18],rsi
  40587c:	mov    WORD PTR [rbp-0x1a],dx
  405880:	mov    WORD PTR [rbp-0x1c],cx
  405884:	mov    DWORD PTR [rbp-0x20],r8d
  405888:	mov    DWORD PTR [rbp-0x24],r9d
  40588c:	mov    rdi,QWORD PTR [rbp-0x10]
  405890:	mov    QWORD PTR [rbp-0x30],rax
  405894:	mov    DWORD PTR [rbp-0x34],r10d
  405898:	mov    BYTE PTR [rbp-0x35],r11b
  40589c:	call   405990 <main@@Base+0x4f0>
  4058a1:	cmp    eax,0x0
  4058a4:	jne    40596d <main@@Base+0x4cd>
  4058aa:	mov    rdi,QWORD PTR [rbp-0x10]
  4058ae:	mov    rsi,QWORD PTR [rbp-0x18]
  4058b2:	call   4059b0 <main@@Base+0x510>
  4058b7:	cmp    eax,0x0
  4058ba:	jne    40596d <main@@Base+0x4cd>
  4058c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4058c4:	mov    esi,DWORD PTR [rbp-0x20]
  4058c7:	call   4037e0 <create_monster_bottom_up@@Base+0x5f0>
  4058cc:	cmp    eax,0x0
  4058cf:	jne    40596d <main@@Base+0x4cd>
  4058d5:	mov    rdi,QWORD PTR [rbp-0x10]
  4058d9:	mov    esi,DWORD PTR [rbp-0x24]
  4058dc:	call   403840 <create_monster_bottom_up@@Base+0x650>
  4058e1:	cmp    eax,0x0
  4058e4:	jne    40596d <main@@Base+0x4cd>
  4058ea:	mov    rdi,QWORD PTR [rbp-0x10]
  4058ee:	mov    esi,DWORD PTR [rbp+0x18]
  4058f1:	call   403920 <create_monster_bottom_up@@Base+0x730>
  4058f6:	cmp    eax,0x0
  4058f9:	jne    40596d <main@@Base+0x4cd>
  4058ff:	mov    rdi,QWORD PTR [rbp-0x10]
  405903:	mov    rsi,QWORD PTR [rbp+0x20]
  405907:	call   405a10 <main@@Base+0x570>
  40590c:	cmp    eax,0x0
  40590f:	jne    40596d <main@@Base+0x4cd>
  405915:	mov    rdi,QWORD PTR [rbp-0x10]
  405919:	movsx  esi,WORD PTR [rbp-0x1a]
  40591d:	call   405a90 <main@@Base+0x5f0>
  405922:	cmp    eax,0x0
  405925:	jne    40596d <main@@Base+0x4cd>
  40592b:	mov    rdi,QWORD PTR [rbp-0x10]
  40592f:	movsx  esi,WORD PTR [rbp-0x1c]
  405933:	call   403760 <create_monster_bottom_up@@Base+0x570>
  405938:	cmp    eax,0x0
  40593b:	jne    40596d <main@@Base+0x4cd>
  405941:	mov    rdi,QWORD PTR [rbp-0x10]
  405945:	movsx  esi,BYTE PTR [rbp+0x10]
  405949:	call   4038a0 <create_monster_bottom_up@@Base+0x6b0>
  40594e:	cmp    eax,0x0
  405951:	jne    40596d <main@@Base+0x4cd>
  405957:	mov    rdi,QWORD PTR [rbp-0x10]
  40595b:	movzx  esi,BYTE PTR [rbp+0x20]
  40595f:	call   405b10 <main@@Base+0x670>
  405964:	cmp    eax,0x0
  405967:	je     405979 <main@@Base+0x4d9>
  40596d:	mov    DWORD PTR [rbp-0x4],0x0
  405974:	jmp    405985 <main@@Base+0x4e5>
  405979:	mov    rdi,QWORD PTR [rbp-0x10]
  40597d:	call   405b90 <main@@Base+0x6f0>
  405982:	mov    DWORD PTR [rbp-0x4],eax
  405985:	mov    eax,DWORD PTR [rbp-0x4]
  405988:	add    rsp,0x40
  40598c:	pop    rbp
  40598d:	ret    
  40598e:	xchg   ax,ax
  405990:	push   rbp
  405991:	mov    rbp,rsp
  405994:	sub    rsp,0x10
  405998:	mov    QWORD PTR [rbp-0x8],rdi
  40599c:	mov    rdi,QWORD PTR [rbp-0x8]
  4059a0:	mov    esi,0xa
  4059a5:	call   408cf0 <flatcc_builder_start_table@@Base>
  4059aa:	add    rsp,0x10
  4059ae:	pop    rbp
  4059af:	ret    
  4059b0:	push   rbp
  4059b1:	mov    rbp,rsp
  4059b4:	sub    rsp,0x20
  4059b8:	mov    QWORD PTR [rbp-0x10],rdi
  4059bc:	mov    QWORD PTR [rbp-0x18],rsi
  4059c0:	mov    rdi,QWORD PTR [rbp-0x10]
  4059c4:	call   405bf0 <main@@Base+0x750>
  4059c9:	mov    QWORD PTR [rbp-0x20],rax
  4059cd:	cmp    QWORD PTR [rbp-0x20],0x0
  4059d2:	jne    4059e4 <main@@Base+0x544>
  4059d8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4059df:	jmp    4059f8 <main@@Base+0x558>
  4059e4:	mov    rdi,QWORD PTR [rbp-0x20]
  4059e8:	mov    rsi,QWORD PTR [rbp-0x18]
  4059ec:	call   405c20 <main@@Base+0x780>
  4059f1:	mov    DWORD PTR [rbp-0x4],0x0
  4059f8:	mov    eax,DWORD PTR [rbp-0x4]
  4059fb:	add    rsp,0x20
  4059ff:	pop    rbp
  405a00:	ret    
  405a01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a0b:	nop    DWORD PTR [rax+rax*1+0x0]
  405a10:	push   rbp
  405a11:	mov    rbp,rsp
  405a14:	sub    rsp,0x30
  405a18:	mov    QWORD PTR [rbp-0x10],rsi
  405a1c:	mov    QWORD PTR [rbp-0x18],rdi
  405a20:	movzx  eax,BYTE PTR [rbp-0x10]
  405a24:	cmp    eax,0x0
  405a27:	jne    405a39 <main@@Base+0x599>
  405a2d:	mov    DWORD PTR [rbp-0x4],0x0
  405a34:	jmp    405a7b <main@@Base+0x5db>
  405a39:	mov    rdi,QWORD PTR [rbp-0x18]
  405a3d:	mov    esi,0x9
  405a42:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  405a47:	mov    QWORD PTR [rbp-0x20],rax
  405a4b:	cmp    rax,0x0
  405a4f:	je     405a68 <main@@Base+0x5c8>
  405a55:	xor    eax,eax
  405a57:	mov    ecx,DWORD PTR [rbp-0xc]
  405a5a:	mov    rdx,QWORD PTR [rbp-0x20]
  405a5e:	mov    DWORD PTR [rdx],ecx
  405a60:	mov    DWORD PTR [rbp-0x24],eax
  405a63:	jmp    405a75 <main@@Base+0x5d5>
  405a68:	mov    eax,0xffffffff
  405a6d:	mov    DWORD PTR [rbp-0x24],eax
  405a70:	jmp    405a75 <main@@Base+0x5d5>
  405a75:	mov    eax,DWORD PTR [rbp-0x24]
  405a78:	mov    DWORD PTR [rbp-0x4],eax
  405a7b:	mov    eax,DWORD PTR [rbp-0x4]
  405a7e:	add    rsp,0x30
  405a82:	pop    rbp
  405a83:	ret    
  405a84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a8e:	xchg   ax,ax
  405a90:	push   rbp
  405a91:	mov    rbp,rsp
  405a94:	sub    rsp,0x20
  405a98:	mov    QWORD PTR [rbp-0x10],rdi
  405a9c:	mov    WORD PTR [rbp-0x12],si
  405aa0:	movsx  eax,WORD PTR [rbp-0x12]
  405aa4:	cmp    eax,0x96
  405aa9:	jne    405abb <main@@Base+0x61b>
  405aaf:	mov    DWORD PTR [rbp-0x4],0x0
  405ab6:	jmp    405b01 <main@@Base+0x661>
  405abb:	mov    rdi,QWORD PTR [rbp-0x10]
  405abf:	mov    esi,0x1
  405ac4:	mov    edx,0x2
  405ac9:	mov    ecx,0x2
  405ace:	call   40a5c0 <flatcc_builder_table_add@@Base>
  405ad3:	mov    QWORD PTR [rbp-0x20],rax
  405ad7:	cmp    rax,0x0
  405adb:	jne    405aed <main@@Base+0x64d>
  405ae1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  405ae8:	jmp    405b01 <main@@Base+0x661>
  405aed:	mov    rdi,QWORD PTR [rbp-0x20]
  405af1:	movsx  esi,WORD PTR [rbp-0x12]
  405af5:	call   4057c0 <main@@Base+0x320>
  405afa:	mov    DWORD PTR [rbp-0x4],0x0
  405b01:	mov    eax,DWORD PTR [rbp-0x4]
  405b04:	add    rsp,0x20
  405b08:	pop    rbp
  405b09:	ret    
  405b0a:	nop    WORD PTR [rax+rax*1+0x0]
  405b10:	push   rbp
  405b11:	mov    rbp,rsp
  405b14:	sub    rsp,0x30
  405b18:	mov    QWORD PTR [rbp-0x10],rdi
  405b1c:	mov    BYTE PTR [rbp-0x11],sil
  405b20:	movzx  eax,BYTE PTR [rbp-0x11]
  405b24:	cmp    eax,0x0
  405b27:	jne    405b39 <main@@Base+0x699>
  405b2d:	mov    DWORD PTR [rbp-0x4],0x0
  405b34:	jmp    405b85 <main@@Base+0x6e5>
  405b39:	mov    rdi,QWORD PTR [rbp-0x10]
  405b3d:	mov    esi,0x8
  405b42:	mov    edx,0x1
  405b47:	mov    ecx,0x1
  405b4c:	call   40a5c0 <flatcc_builder_table_add@@Base>
  405b51:	mov    QWORD PTR [rbp-0x20],rax
  405b55:	cmp    rax,0x0
  405b59:	je     405b72 <main@@Base+0x6d2>
  405b5f:	xor    eax,eax
  405b61:	mov    cl,BYTE PTR [rbp-0x11]
  405b64:	mov    rdx,QWORD PTR [rbp-0x20]
  405b68:	mov    BYTE PTR [rdx],cl
  405b6a:	mov    DWORD PTR [rbp-0x24],eax
  405b6d:	jmp    405b7f <main@@Base+0x6df>
  405b72:	mov    eax,0xffffffff
  405b77:	mov    DWORD PTR [rbp-0x24],eax
  405b7a:	jmp    405b7f <main@@Base+0x6df>
  405b7f:	mov    eax,DWORD PTR [rbp-0x24]
  405b82:	mov    DWORD PTR [rbp-0x4],eax
  405b85:	mov    eax,DWORD PTR [rbp-0x4]
  405b88:	add    rsp,0x30
  405b8c:	pop    rbp
  405b8d:	ret    
  405b8e:	xchg   ax,ax
  405b90:	push   rbp
  405b91:	mov    rbp,rsp
  405b94:	sub    rsp,0x10
  405b98:	xor    edx,edx
  405b9a:	mov    QWORD PTR [rbp-0x8],rdi
  405b9e:	mov    rdi,QWORD PTR [rbp-0x8]
  405ba2:	lea    rsi,[rip+0x7d93]        # 40d93c <_IO_stdin_used@@Base+0x93c>
  405ba9:	call   4098a0 <flatcc_builder_check_required@@Base>
  405bae:	cmp    eax,0x0
  405bb1:	je     405bbc <main@@Base+0x71c>
  405bb7:	jmp    405bdb <main@@Base+0x73b>
  405bbc:	lea    rdi,[rip+0x7697]        # 40d25a <_IO_stdin_used@@Base+0x25a>
  405bc3:	lea    rsi,[rip+0x75cd]        # 40d197 <_IO_stdin_used@@Base+0x197>
  405bca:	mov    edx,0x32
  405bcf:	lea    rcx,[rip+0x7723]        # 40d2f9 <_IO_stdin_used@@Base+0x2f9>
  405bd6:	call   403070 <__assert_fail@plt>
  405bdb:	mov    rdi,QWORD PTR [rbp-0x8]
  405bdf:	call   409970 <flatcc_builder_end_table@@Base>
  405be4:	add    rsp,0x10
  405be8:	pop    rbp
  405be9:	ret    
  405bea:	nop    WORD PTR [rax+rax*1+0x0]
  405bf0:	push   rbp
  405bf1:	mov    rbp,rsp
  405bf4:	sub    rsp,0x10
  405bf8:	xor    esi,esi
  405bfa:	mov    QWORD PTR [rbp-0x8],rdi
  405bfe:	mov    rdi,QWORD PTR [rbp-0x8]
  405c02:	mov    edx,0xc
  405c07:	mov    ecx,0x4
  405c0c:	call   40a5c0 <flatcc_builder_table_add@@Base>
  405c11:	add    rsp,0x10
  405c15:	pop    rbp
  405c16:	ret    
  405c17:	nop    WORD PTR [rax+rax*1+0x0]
  405c20:	push   rbp
  405c21:	mov    rbp,rsp
  405c24:	sub    rsp,0x30
  405c28:	mov    QWORD PTR [rbp-0x8],rdi
  405c2c:	mov    QWORD PTR [rbp-0x10],rsi
  405c30:	mov    rdi,QWORD PTR [rbp-0x8]
  405c34:	mov    rsi,QWORD PTR [rbp-0x10]
  405c38:	call   405ca0 <main@@Base+0x800>
  405c3d:	mov    rcx,QWORD PTR [rbp-0x8]
  405c41:	add    rcx,0x4
  405c48:	mov    rdx,QWORD PTR [rbp-0x10]
  405c4c:	add    rdx,0x4
  405c53:	mov    rdi,rcx
  405c56:	mov    rsi,rdx
  405c59:	mov    QWORD PTR [rbp-0x18],rax
  405c5d:	call   405ca0 <main@@Base+0x800>
  405c62:	mov    rcx,QWORD PTR [rbp-0x8]
  405c66:	add    rcx,0x8
  405c6d:	mov    rdx,QWORD PTR [rbp-0x10]
  405c71:	add    rdx,0x8
  405c78:	mov    rdi,rcx
  405c7b:	mov    rsi,rdx
  405c7e:	mov    QWORD PTR [rbp-0x20],rax
  405c82:	call   405ca0 <main@@Base+0x800>
  405c87:	mov    rcx,QWORD PTR [rbp-0x8]
  405c8b:	mov    QWORD PTR [rbp-0x28],rax
  405c8f:	mov    rax,rcx
  405c92:	add    rsp,0x30
  405c96:	pop    rbp
  405c97:	ret    
  405c98:	nop    DWORD PTR [rax+rax*1+0x0]
  405ca0:	push   rbp
  405ca1:	mov    rbp,rsp
  405ca4:	sub    rsp,0x10
  405ca8:	mov    QWORD PTR [rbp-0x8],rdi
  405cac:	mov    QWORD PTR [rbp-0x10],rsi
  405cb0:	mov    rax,QWORD PTR [rbp-0x10]
  405cb4:	vmovss xmm0,DWORD PTR [rax]
  405cb8:	call   405cd0 <main@@Base+0x830>
  405cbd:	mov    rax,QWORD PTR [rbp-0x8]
  405cc1:	vmovss DWORD PTR [rax],xmm0
  405cc5:	mov    rax,QWORD PTR [rbp-0x8]
  405cc9:	add    rsp,0x10
  405ccd:	pop    rbp
  405cce:	ret    
  405ccf:	nop
  405cd0:	push   rbp
  405cd1:	mov    rbp,rsp
  405cd4:	vmovss DWORD PTR [rbp-0x4],xmm0
  405cd9:	vmovss xmm0,DWORD PTR [rbp-0x4]
  405cde:	vmovss DWORD PTR [rbp-0x8],xmm0
  405ce3:	mov    eax,DWORD PTR [rbp-0x8]
  405ce6:	mov    DWORD PTR [rbp-0x8],eax
  405ce9:	vmovss xmm0,DWORD PTR [rbp-0x8]
  405cee:	pop    rbp
  405cef:	ret    
  405cf0:	push   rbp
  405cf1:	mov    rbp,rsp
  405cf4:	sub    rsp,0x30
  405cf8:	mov    QWORD PTR [rbp-0x8],rdi
  405cfc:	vmovss DWORD PTR [rbp-0xc],xmm0
  405d01:	vmovss DWORD PTR [rbp-0x10],xmm1
  405d06:	vmovss DWORD PTR [rbp-0x14],xmm2
  405d0b:	mov    rdi,QWORD PTR [rbp-0x8]
  405d0f:	vmovss xmm0,DWORD PTR [rbp-0xc]
  405d14:	call   405d70 <main@@Base+0x8d0>
  405d19:	mov    rcx,QWORD PTR [rbp-0x8]
  405d1d:	add    rcx,0x4
  405d24:	vmovss xmm0,DWORD PTR [rbp-0x10]
  405d29:	mov    rdi,rcx
  405d2c:	mov    QWORD PTR [rbp-0x20],rax
  405d30:	call   405d70 <main@@Base+0x8d0>
  405d35:	mov    rcx,QWORD PTR [rbp-0x8]
  405d39:	add    rcx,0x8
  405d40:	vmovss xmm0,DWORD PTR [rbp-0x14]
  405d45:	mov    rdi,rcx
  405d48:	mov    QWORD PTR [rbp-0x28],rax
  405d4c:	call   405d70 <main@@Base+0x8d0>
  405d51:	mov    rcx,QWORD PTR [rbp-0x8]
  405d55:	mov    QWORD PTR [rbp-0x30],rax
  405d59:	mov    rax,rcx
  405d5c:	add    rsp,0x30
  405d60:	pop    rbp
  405d61:	ret    
  405d62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d6c:	nop    DWORD PTR [rax+0x0]
  405d70:	push   rbp
  405d71:	mov    rbp,rsp
  405d74:	sub    rsp,0x10
  405d78:	mov    QWORD PTR [rbp-0x8],rdi
  405d7c:	vmovss DWORD PTR [rbp-0xc],xmm0
  405d81:	vmovss xmm0,DWORD PTR [rbp-0xc]
  405d86:	call   405cd0 <main@@Base+0x830>
  405d8b:	mov    rax,QWORD PTR [rbp-0x8]
  405d8f:	vmovss DWORD PTR [rax],xmm0
  405d93:	mov    rax,QWORD PTR [rbp-0x8]
  405d97:	add    rsp,0x10
  405d9b:	pop    rbp
  405d9c:	ret    
  405d9d:	nop    DWORD PTR [rax]
  405da0:	push   rbp
  405da1:	mov    rbp,rsp
  405da4:	sub    rsp,0x10
  405da8:	mov    QWORD PTR [rbp-0x8],rdi
  405dac:	mov    BYTE PTR [rbp-0x9],sil
  405db0:	movsx  edi,BYTE PTR [rbp-0x9]
  405db4:	call   405dd0 <main@@Base+0x930>
  405db9:	mov    rcx,QWORD PTR [rbp-0x8]
  405dbd:	mov    BYTE PTR [rcx],al
  405dbf:	mov    rax,QWORD PTR [rbp-0x8]
  405dc3:	add    rsp,0x10
  405dc7:	pop    rbp
  405dc8:	ret    
  405dc9:	nop    DWORD PTR [rax+0x0]
  405dd0:	push   rbp
  405dd1:	mov    rbp,rsp
  405dd4:	mov    BYTE PTR [rbp-0x1],dil
  405dd8:	movsx  eax,BYTE PTR [rbp-0x1]
  405ddc:	pop    rbp
  405ddd:	ret    
  405dde:	xchg   ax,ax
  405de0:	push   rbp
  405de1:	mov    rbp,rsp
  405de4:	sub    rsp,0x20
  405de8:	mov    QWORD PTR [rbp-0x8],rdi
  405dec:	mov    DWORD PTR [rbp-0xc],esi
  405def:	cmp    DWORD PTR [rbp-0xc],0x0
  405df3:	je     405e0e <main@@Base+0x96e>
  405df9:	mov    rdi,QWORD PTR [rbp-0x8]
  405dfd:	mov    esi,DWORD PTR [rbp-0xc]
  405e00:	call   4081c0 <flatcc_builder_offset_vector_push@@Base>
  405e05:	mov    QWORD PTR [rbp-0x18],rax
  405e09:	jmp    405e1b <main@@Base+0x97b>
  405e0e:	xor    eax,eax
  405e10:	mov    ecx,eax
  405e12:	mov    QWORD PTR [rbp-0x18],rcx
  405e16:	jmp    405e1b <main@@Base+0x97b>
  405e1b:	mov    rax,QWORD PTR [rbp-0x18]
  405e1f:	add    rsp,0x20
  405e23:	pop    rbp
  405e24:	ret    
  405e25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e2f:	nop
  405e30:	push   rbp
  405e31:	mov    rbp,rsp
  405e34:	sub    rsp,0x30
  405e38:	mov    QWORD PTR [rbp-0x10],rdi
  405e3c:	mov    QWORD PTR [rbp-0x18],rsi
  405e40:	mov    DWORD PTR [rbp-0x20],0x0
  405e47:	cmp    QWORD PTR [rbp-0x18],0x0
  405e4c:	jne    405e5e <main@@Base+0x9be>
  405e52:	mov    DWORD PTR [rbp-0x4],0x1
  405e59:	jmp    405ec0 <main@@Base+0xa20>
  405e5e:	lea    rax,[rbp-0x20]
  405e62:	mov    rsi,QWORD PTR [rbp-0x18]
  405e66:	mov    rdi,rax
  405e69:	mov    edx,0x4
  405e6e:	call   403040 <strncpy@plt>
  405e73:	mov    edi,DWORD PTR [rbp-0x20]
  405e76:	mov    QWORD PTR [rbp-0x28],rax
  405e7a:	call   405ef0 <main@@Base+0xa50>
  405e7f:	mov    DWORD PTR [rbp-0x20],eax
  405e82:	mov    rcx,QWORD PTR [rbp-0x10]
  405e86:	add    rcx,0x4
  405e8d:	mov    rdi,rcx
  405e90:	call   405f00 <main@@Base+0xa60>
  405e95:	mov    DWORD PTR [rbp-0x1c],eax
  405e98:	cmp    DWORD PTR [rbp-0x20],0x0
  405e9c:	mov    r8b,0x1
  405e9f:	mov    BYTE PTR [rbp-0x29],r8b
  405ea3:	je     405eb5 <main@@Base+0xa15>
  405ea9:	mov    eax,DWORD PTR [rbp-0x1c]
  405eac:	cmp    eax,DWORD PTR [rbp-0x20]
  405eaf:	sete   cl
  405eb2:	mov    BYTE PTR [rbp-0x29],cl
  405eb5:	mov    al,BYTE PTR [rbp-0x29]
  405eb8:	and    al,0x1
  405eba:	movzx  ecx,al
  405ebd:	mov    DWORD PTR [rbp-0x4],ecx
  405ec0:	mov    eax,DWORD PTR [rbp-0x4]
  405ec3:	add    rsp,0x30
  405ec7:	pop    rbp
  405ec8:	ret    
  405ec9:	nop    DWORD PTR [rax+0x0]
  405ed0:	push   rbp
  405ed1:	mov    rbp,rsp
  405ed4:	sub    rsp,0x10
  405ed8:	mov    QWORD PTR [rbp-0x8],rdi
  405edc:	mov    rax,QWORD PTR [rbp-0x8]
  405ee0:	mov    edi,DWORD PTR [rax]
  405ee2:	call   405f30 <main@@Base+0xa90>
  405ee7:	add    rsp,0x10
  405eeb:	pop    rbp
  405eec:	ret    
  405eed:	nop    DWORD PTR [rax]
  405ef0:	push   rbp
  405ef1:	mov    rbp,rsp
  405ef4:	mov    DWORD PTR [rbp-0x4],edi
  405ef7:	mov    eax,DWORD PTR [rbp-0x4]
  405efa:	pop    rbp
  405efb:	ret    
  405efc:	nop    DWORD PTR [rax+0x0]
  405f00:	push   rbp
  405f01:	mov    rbp,rsp
  405f04:	sub    rsp,0x10
  405f08:	mov    QWORD PTR [rbp-0x8],rdi
  405f0c:	mov    rax,QWORD PTR [rbp-0x8]
  405f10:	mov    edi,DWORD PTR [rax]
  405f12:	call   405f20 <main@@Base+0xa80>
  405f17:	add    rsp,0x10
  405f1b:	pop    rbp
  405f1c:	ret    
  405f1d:	nop    DWORD PTR [rax]
  405f20:	push   rbp
  405f21:	mov    rbp,rsp
  405f24:	mov    DWORD PTR [rbp-0x4],edi
  405f27:	mov    eax,DWORD PTR [rbp-0x4]
  405f2a:	pop    rbp
  405f2b:	ret    
  405f2c:	nop    DWORD PTR [rax+0x0]
  405f30:	push   rbp
  405f31:	mov    rbp,rsp
  405f34:	mov    DWORD PTR [rbp-0x4],edi
  405f37:	mov    eax,DWORD PTR [rbp-0x4]
  405f3a:	pop    rbp
  405f3b:	ret    
  405f3c:	nop    DWORD PTR [rax+0x0]
  405f40:	push   rbp
  405f41:	mov    rbp,rsp
  405f44:	sub    rsp,0x10
  405f48:	mov    QWORD PTR [rbp-0x8],rdi
  405f4c:	mov    rax,QWORD PTR [rbp-0x8]
  405f50:	mov    edi,DWORD PTR [rax]
  405f52:	call   405fb0 <main@@Base+0xb10>
  405f57:	add    rsp,0x10
  405f5b:	pop    rbp
  405f5c:	ret    
  405f5d:	nop    DWORD PTR [rax]
  405f60:	push   rbp
  405f61:	mov    rbp,rsp
  405f64:	sub    rsp,0x10
  405f68:	mov    QWORD PTR [rbp-0x8],rdi
  405f6c:	mov    rax,QWORD PTR [rbp-0x8]
  405f70:	movzx  edi,WORD PTR [rax]
  405f73:	call   405fc0 <main@@Base+0xb20>
  405f78:	movzx  eax,ax
  405f7b:	add    rsp,0x10
  405f7f:	pop    rbp
  405f80:	ret    
  405f81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  405f90:	push   rbp
  405f91:	mov    rbp,rsp
  405f94:	sub    rsp,0x10
  405f98:	mov    QWORD PTR [rbp-0x8],rdi
  405f9c:	mov    rax,QWORD PTR [rbp-0x8]
  405fa0:	movsx  edi,WORD PTR [rax]
  405fa3:	call   405fd0 <main@@Base+0xb30>
  405fa8:	cwde   
  405fa9:	add    rsp,0x10
  405fad:	pop    rbp
  405fae:	ret    
  405faf:	nop
  405fb0:	push   rbp
  405fb1:	mov    rbp,rsp
  405fb4:	mov    DWORD PTR [rbp-0x4],edi
  405fb7:	mov    eax,DWORD PTR [rbp-0x4]
  405fba:	pop    rbp
  405fbb:	ret    
  405fbc:	nop    DWORD PTR [rax+0x0]
  405fc0:	push   rbp
  405fc1:	mov    rbp,rsp
  405fc4:	mov    WORD PTR [rbp-0x2],di
  405fc8:	movzx  eax,WORD PTR [rbp-0x2]
  405fcc:	pop    rbp
  405fcd:	ret    
  405fce:	xchg   ax,ax
  405fd0:	push   rbp
  405fd1:	mov    rbp,rsp
  405fd4:	mov    WORD PTR [rbp-0x2],di
  405fd8:	movsx  eax,WORD PTR [rbp-0x2]
  405fdc:	pop    rbp
  405fdd:	ret    
  405fde:	xchg   ax,ax
  405fe0:	push   rbp
  405fe1:	mov    rbp,rsp
  405fe4:	sub    rsp,0x10
  405fe8:	mov    QWORD PTR [rbp-0x8],rdi
  405fec:	mov    rax,QWORD PTR [rbp-0x8]
  405ff0:	vmovss xmm0,DWORD PTR [rax]
  405ff4:	call   406000 <main@@Base+0xb60>
  405ff9:	add    rsp,0x10
  405ffd:	pop    rbp
  405ffe:	ret    
  405fff:	nop
  406000:	push   rbp
  406001:	mov    rbp,rsp
  406004:	vmovss DWORD PTR [rbp-0x4],xmm0
  406009:	vmovss xmm0,DWORD PTR [rbp-0x4]
  40600e:	vmovss DWORD PTR [rbp-0x8],xmm0
  406013:	mov    eax,DWORD PTR [rbp-0x8]
  406016:	mov    DWORD PTR [rbp-0x8],eax
  406019:	vmovss xmm0,DWORD PTR [rbp-0x8]
  40601e:	pop    rbp
  40601f:	ret    
  406020:	push   rbp
  406021:	mov    rbp,rsp
  406024:	sub    rsp,0x10
  406028:	mov    QWORD PTR [rbp-0x8],rdi
  40602c:	mov    QWORD PTR [rbp-0x10],rsi
  406030:	mov    rax,QWORD PTR [rbp-0x10]
  406034:	vmovss xmm0,DWORD PTR [rax]
  406038:	call   406000 <main@@Base+0xb60>
  40603d:	mov    rax,QWORD PTR [rbp-0x8]
  406041:	vmovss DWORD PTR [rax],xmm0
  406045:	mov    rax,QWORD PTR [rbp-0x8]
  406049:	add    rsp,0x10
  40604d:	pop    rbp
  40604e:	ret    
  40604f:	nop
  406050:	push   rbp
  406051:	mov    rbp,rsp
  406054:	sub    rsp,0x10
  406058:	mov    QWORD PTR [rbp-0x8],rdi
  40605c:	cmp    QWORD PTR [rbp-0x8],0x0
  406061:	je     406086 <main@@Base+0xbe6>
  406067:	mov    rax,QWORD PTR [rbp-0x8]
  40606b:	add    rax,0xfffffffffffffffc
  406071:	mov    rdi,rax
  406074:	call   405ed0 <main@@Base+0xa30>
  406079:	mov    eax,eax
  40607b:	mov    ecx,eax
  40607d:	mov    QWORD PTR [rbp-0x10],rcx
  406081:	jmp    406093 <main@@Base+0xbf3>
  406086:	xor    eax,eax
  406088:	mov    ecx,eax
  40608a:	mov    QWORD PTR [rbp-0x10],rcx
  40608e:	jmp    406093 <main@@Base+0xbf3>
  406093:	mov    rax,QWORD PTR [rbp-0x10]
  406097:	add    rsp,0x10
  40609b:	pop    rbp
  40609c:	ret    
  40609d:	nop    DWORD PTR [rax]
  4060a0:	push   rbp
  4060a1:	mov    rbp,rsp
  4060a4:	sub    rsp,0x10
  4060a8:	mov    QWORD PTR [rbp-0x8],rdi
  4060ac:	mov    rax,QWORD PTR [rbp-0x8]
  4060b0:	movzx  edi,BYTE PTR [rax]
  4060b3:	call   4060d0 <main@@Base+0xc30>
  4060b8:	movzx  eax,al
  4060bb:	add    rsp,0x10
  4060bf:	pop    rbp
  4060c0:	ret    
  4060c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4060cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4060d0:	push   rbp
  4060d1:	mov    rbp,rsp
  4060d4:	mov    BYTE PTR [rbp-0x1],dil
  4060d8:	movzx  eax,BYTE PTR [rbp-0x1]
  4060dc:	pop    rbp
  4060dd:	ret    
  4060de:	xchg   ax,ax
  4060e0:	push   rbp
  4060e1:	mov    rbp,rsp
  4060e4:	sub    rsp,0x10
  4060e8:	mov    QWORD PTR [rbp-0x8],rdi
  4060ec:	mov    rax,QWORD PTR [rbp-0x8]
  4060f0:	movzx  edi,BYTE PTR [rax]
  4060f3:	call   406110 <main@@Base+0xc70>
  4060f8:	movzx  eax,al
  4060fb:	add    rsp,0x10
  4060ff:	pop    rbp
  406100:	ret    
  406101:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40610b:	nop    DWORD PTR [rax+rax*1+0x0]
  406110:	push   rbp
  406111:	mov    rbp,rsp
  406114:	mov    BYTE PTR [rbp-0x1],dil
  406118:	movzx  eax,BYTE PTR [rbp-0x1]
  40611c:	pop    rbp
  40611d:	ret    
  40611e:	xchg   ax,ax

0000000000406120 <flatcc_builder_default_alloc@@Base>:
  406120:	push   rbp
  406121:	mov    rbp,rsp
  406124:	sub    rsp,0x40
  406128:	mov    QWORD PTR [rbp-0x10],rdi
  40612c:	mov    QWORD PTR [rbp-0x18],rsi
  406130:	mov    QWORD PTR [rbp-0x20],rdx
  406134:	mov    DWORD PTR [rbp-0x24],ecx
  406137:	mov    DWORD PTR [rbp-0x28],r8d
  40613b:	cmp    QWORD PTR [rbp-0x20],0x0
  406140:	jne    406183 <flatcc_builder_default_alloc@@Base+0x63>
  406146:	mov    rax,QWORD PTR [rbp-0x18]
  40614a:	cmp    QWORD PTR [rax],0x0
  40614e:	je     406177 <flatcc_builder_default_alloc@@Base+0x57>
  406154:	mov    rax,QWORD PTR [rbp-0x18]
  406158:	mov    rdi,QWORD PTR [rax]
  40615b:	call   403030 <free@plt>
  406160:	mov    rax,QWORD PTR [rbp-0x18]
  406164:	mov    QWORD PTR [rax],0x0
  40616b:	mov    rax,QWORD PTR [rbp-0x18]
  40616f:	mov    QWORD PTR [rax+0x8],0x0
  406177:	mov    DWORD PTR [rbp-0x4],0x0
  40617e:	jmp    4062c8 <flatcc_builder_default_alloc@@Base+0x1a8>
  406183:	mov    eax,DWORD PTR [rbp-0x28]
  406186:	dec    eax
  406188:	mov    ecx,eax
  40618a:	sub    eax,0x6
  40618d:	mov    QWORD PTR [rbp-0x40],rcx
  406191:	ja     4061df <flatcc_builder_default_alloc@@Base+0xbf>
  406197:	lea    rax,[rip+0x77a2]        # 40d940 <_IO_stdin_used@@Base+0x940>
  40619e:	mov    rcx,QWORD PTR [rbp-0x40]
  4061a2:	movsxd rdx,DWORD PTR [rax+rcx*4]
  4061a6:	add    rdx,rax
  4061a9:	jmp    rdx
  4061ab:	mov    QWORD PTR [rbp-0x38],0x100
  4061b3:	jmp    4061e7 <flatcc_builder_default_alloc@@Base+0xc7>
  4061b8:	mov    rax,QWORD PTR [rbp-0x20]
  4061bc:	mov    QWORD PTR [rbp-0x38],rax
  4061c0:	jmp    4061e7 <flatcc_builder_default_alloc@@Base+0xc7>
  4061c5:	mov    QWORD PTR [rbp-0x38],0x120
  4061cd:	jmp    4061e7 <flatcc_builder_default_alloc@@Base+0xc7>
  4061d2:	mov    QWORD PTR [rbp-0x38],0x40
  4061da:	jmp    4061e7 <flatcc_builder_default_alloc@@Base+0xc7>
  4061df:	mov    QWORD PTR [rbp-0x38],0x20
  4061e7:	jmp    4061ec <flatcc_builder_default_alloc@@Base+0xcc>
  4061ec:	mov    rax,QWORD PTR [rbp-0x38]
  4061f0:	cmp    rax,QWORD PTR [rbp-0x20]
  4061f4:	jae    40620b <flatcc_builder_default_alloc@@Base+0xeb>
  4061fa:	mov    rax,QWORD PTR [rbp-0x38]
  4061fe:	shl    rax,0x1
  406202:	mov    QWORD PTR [rbp-0x38],rax
  406206:	jmp    4061ec <flatcc_builder_default_alloc@@Base+0xcc>
  40620b:	mov    rax,QWORD PTR [rbp-0x20]
  40620f:	mov    rcx,QWORD PTR [rbp-0x18]
  406213:	cmp    rax,QWORD PTR [rcx+0x8]
  406217:	ja     40623f <flatcc_builder_default_alloc@@Base+0x11f>
  40621d:	mov    rax,QWORD PTR [rbp-0x18]
  406221:	mov    rax,QWORD PTR [rax+0x8]
  406225:	shr    rax,0x1
  406229:	cmp    rax,QWORD PTR [rbp-0x38]
  40622d:	jb     40623f <flatcc_builder_default_alloc@@Base+0x11f>
  406233:	mov    DWORD PTR [rbp-0x4],0x0
  40623a:	jmp    4062c8 <flatcc_builder_default_alloc@@Base+0x1a8>
  40623f:	mov    rax,QWORD PTR [rbp-0x18]
  406243:	mov    rdi,QWORD PTR [rax]
  406246:	mov    rsi,QWORD PTR [rbp-0x38]
  40624a:	call   4030e0 <realloc@plt>
  40624f:	mov    QWORD PTR [rbp-0x30],rax
  406253:	cmp    rax,0x0
  406257:	jne    406269 <flatcc_builder_default_alloc@@Base+0x149>
  40625d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  406264:	jmp    4062c8 <flatcc_builder_default_alloc@@Base+0x1a8>
  406269:	cmp    DWORD PTR [rbp-0x24],0x0
  40626d:	je     4062aa <flatcc_builder_default_alloc@@Base+0x18a>
  406273:	mov    rax,QWORD PTR [rbp-0x18]
  406277:	mov    rax,QWORD PTR [rax+0x8]
  40627b:	cmp    rax,QWORD PTR [rbp-0x38]
  40627f:	jae    4062aa <flatcc_builder_default_alloc@@Base+0x18a>
  406285:	xor    esi,esi
  406287:	mov    rax,QWORD PTR [rbp-0x30]
  40628b:	mov    rcx,QWORD PTR [rbp-0x18]
  40628f:	add    rax,QWORD PTR [rcx+0x8]
  406293:	mov    rcx,QWORD PTR [rbp-0x38]
  406297:	mov    rdx,QWORD PTR [rbp-0x18]
  40629b:	sub    rcx,QWORD PTR [rdx+0x8]
  40629f:	mov    rdi,rax
  4062a2:	mov    rdx,rcx
  4062a5:	call   403080 <memset@plt>
  4062aa:	mov    rax,QWORD PTR [rbp-0x30]
  4062ae:	mov    rcx,QWORD PTR [rbp-0x18]
  4062b2:	mov    QWORD PTR [rcx],rax
  4062b5:	mov    rax,QWORD PTR [rbp-0x38]
  4062b9:	mov    rcx,QWORD PTR [rbp-0x18]
  4062bd:	mov    QWORD PTR [rcx+0x8],rax
  4062c1:	mov    DWORD PTR [rbp-0x4],0x0
  4062c8:	mov    eax,DWORD PTR [rbp-0x4]
  4062cb:	add    rsp,0x40
  4062cf:	pop    rbp
  4062d0:	ret    
  4062d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4062db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004062e0 <flatcc_builder_flush_vtable_cache@@Base>:
  4062e0:	push   rbp
  4062e1:	mov    rbp,rsp
  4062e4:	sub    rsp,0x10
  4062e8:	mov    QWORD PTR [rbp-0x8],rdi
  4062ec:	mov    rax,QWORD PTR [rbp-0x8]
  4062f0:	add    rax,0x58
  4062f6:	add    rax,0x50
  4062fc:	mov    QWORD PTR [rbp-0x10],rax
  406300:	mov    rax,QWORD PTR [rbp-0x8]
  406304:	cmp    QWORD PTR [rax+0xd8],0x0
  40630c:	jne    406317 <flatcc_builder_flush_vtable_cache@@Base+0x37>
  406312:	jmp    406349 <flatcc_builder_flush_vtable_cache@@Base+0x69>
  406317:	xor    esi,esi
  406319:	mov    rax,QWORD PTR [rbp-0x10]
  40631d:	mov    rdi,QWORD PTR [rax]
  406320:	mov    rax,QWORD PTR [rbp-0x10]
  406324:	mov    rdx,QWORD PTR [rax+0x8]
  406328:	call   403080 <memset@plt>
  40632d:	mov    rax,QWORD PTR [rbp-0x8]
  406331:	mov    DWORD PTR [rax+0xe4],0x10
  40633b:	mov    rax,QWORD PTR [rbp-0x8]
  40633f:	mov    DWORD PTR [rax+0xe0],0x0
  406349:	add    rsp,0x10
  40634d:	pop    rbp
  40634e:	ret    
  40634f:	nop

0000000000406350 <flatcc_builder_custom_init@@Base>:
  406350:	push   rbp
  406351:	mov    rbp,rsp
  406354:	sub    rsp,0x30
  406358:	xor    eax,eax
  40635a:	mov    QWORD PTR [rbp-0x8],rdi
  40635e:	mov    QWORD PTR [rbp-0x10],rsi
  406362:	mov    QWORD PTR [rbp-0x18],rdx
  406366:	mov    QWORD PTR [rbp-0x20],rcx
  40636a:	mov    QWORD PTR [rbp-0x28],r8
  40636e:	mov    rcx,QWORD PTR [rbp-0x8]
  406372:	mov    rdi,rcx
  406375:	mov    esi,eax
  406377:	mov    edx,0x188
  40637c:	call   403080 <memset@plt>
  406381:	cmp    QWORD PTR [rbp-0x10],0x0
  406386:	jne    4063b3 <flatcc_builder_custom_init@@Base+0x63>
  40638c:	lea    rax,[rip+0x5e5d]        # 40c1f0 <flatcc_emitter@@Base>
  406393:	mov    rcx,QWORD PTR [rbp-0x8]
  406397:	mov    DWORD PTR [rcx+0x128],0x1
  4063a1:	mov    QWORD PTR [rbp-0x10],rax
  4063a5:	mov    rax,QWORD PTR [rbp-0x8]
  4063a9:	add    rax,0x130
  4063af:	mov    QWORD PTR [rbp-0x18],rax
  4063b3:	cmp    QWORD PTR [rbp-0x20],0x0
  4063b8:	jne    4063c9 <flatcc_builder_custom_init@@Base+0x79>
  4063be:	lea    rax,[rip+0xfffffffffffffd5b]        # 406120 <flatcc_builder_default_alloc@@Base>
  4063c5:	mov    QWORD PTR [rbp-0x20],rax
  4063c9:	xor    eax,eax
  4063cb:	mov    rcx,QWORD PTR [rbp-0x28]
  4063cf:	mov    rdx,QWORD PTR [rbp-0x8]
  4063d3:	mov    QWORD PTR [rdx+0x40],rcx
  4063d7:	mov    rcx,QWORD PTR [rbp-0x20]
  4063db:	mov    rdx,QWORD PTR [rbp-0x8]
  4063df:	mov    QWORD PTR [rdx+0x50],rcx
  4063e3:	mov    rcx,QWORD PTR [rbp-0x18]
  4063e7:	mov    rdx,QWORD PTR [rbp-0x8]
  4063eb:	mov    QWORD PTR [rdx+0x38],rcx
  4063ef:	mov    rcx,QWORD PTR [rbp-0x10]
  4063f3:	mov    rdx,QWORD PTR [rbp-0x8]
  4063f7:	mov    QWORD PTR [rdx+0x48],rcx
  4063fb:	add    rsp,0x30
  4063ff:	pop    rbp
  406400:	ret    
  406401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40640b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406410 <flatcc_builder_init@@Base>:
  406410:	push   rbp
  406411:	mov    rbp,rsp
  406414:	sub    rsp,0x10
  406418:	xor    eax,eax
  40641a:	mov    ecx,eax
  40641c:	mov    QWORD PTR [rbp-0x8],rdi
  406420:	mov    rdi,QWORD PTR [rbp-0x8]
  406424:	mov    rsi,rcx
  406427:	mov    rdx,rcx
  40642a:	mov    QWORD PTR [rbp-0x10],rcx
  40642e:	mov    r8,QWORD PTR [rbp-0x10]
  406432:	call   406350 <flatcc_builder_custom_init@@Base>
  406437:	add    rsp,0x10
  40643b:	pop    rbp
  40643c:	ret    
  40643d:	nop    DWORD PTR [rax]

0000000000406440 <flatcc_builder_custom_reset@@Base>:
  406440:	push   rbp
  406441:	mov    rbp,rsp
  406444:	sub    rsp,0x30
  406448:	mov    QWORD PTR [rbp-0x10],rdi
  40644c:	mov    DWORD PTR [rbp-0x14],esi
  40644f:	mov    DWORD PTR [rbp-0x18],edx
  406452:	mov    DWORD PTR [rbp-0x24],0x0
  406459:	cmp    DWORD PTR [rbp-0x24],0x8
  40645d:	jge    40653d <flatcc_builder_custom_reset@@Base+0xfd>
  406463:	mov    rax,QWORD PTR [rbp-0x10]
  406467:	add    rax,0x58
  40646d:	movsxd rcx,DWORD PTR [rbp-0x24]
  406471:	shl    rcx,0x4
  406475:	add    rax,rcx
  406478:	mov    QWORD PTR [rbp-0x20],rax
  40647c:	mov    rax,QWORD PTR [rbp-0x20]
  406480:	cmp    QWORD PTR [rax],0x0
  406484:	je     4064f2 <flatcc_builder_custom_reset@@Base+0xb2>
  40648a:	cmp    DWORD PTR [rbp-0x24],0x5
  40648e:	je     4064d7 <flatcc_builder_custom_reset@@Base+0x97>
  406494:	cmp    DWORD PTR [rbp-0x18],0x0
  406498:	je     4064d7 <flatcc_builder_custom_reset@@Base+0x97>
  40649e:	mov    rax,QWORD PTR [rbp-0x10]
  4064a2:	mov    rax,QWORD PTR [rax+0x50]
  4064a6:	mov    rcx,QWORD PTR [rbp-0x10]
  4064aa:	mov    rdi,QWORD PTR [rcx+0x40]
  4064ae:	mov    rsi,QWORD PTR [rbp-0x20]
  4064b2:	mov    r8d,DWORD PTR [rbp-0x24]
  4064b6:	mov    edx,0x1
  4064bb:	mov    ecx,0x1
  4064c0:	call   rax
  4064c2:	cmp    eax,0x0
  4064c5:	je     4064d7 <flatcc_builder_custom_reset@@Base+0x97>
  4064cb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4064d2:	jmp    40667e <flatcc_builder_custom_reset@@Base+0x23e>
  4064d7:	xor    esi,esi
  4064d9:	mov    rax,QWORD PTR [rbp-0x20]
  4064dd:	mov    rdi,QWORD PTR [rax]
  4064e0:	mov    rax,QWORD PTR [rbp-0x20]
  4064e4:	mov    rdx,QWORD PTR [rax+0x8]
  4064e8:	call   403080 <memset@plt>
  4064ed:	jmp    40652a <flatcc_builder_custom_reset@@Base+0xea>
  4064f2:	mov    rax,QWORD PTR [rbp-0x20]
  4064f6:	cmp    QWORD PTR [rax+0x8],0x0
  4064fb:	jne    406506 <flatcc_builder_custom_reset@@Base+0xc6>
  406501:	jmp    406525 <flatcc_builder_custom_reset@@Base+0xe5>
  406506:	lea    rdi,[rip+0x7653]        # 40db60 <flatcc_builder_padding_base@@Base+0x200>
  40650d:	lea    rsi,[rip+0x765e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  406514:	mov    edx,0x1b2
  406519:	lea    rcx,[rip+0x76b2]        # 40dbd2 <flatcc_builder_padding_base@@Base+0x272>
  406520:	call   403070 <__assert_fail@plt>
  406525:	jmp    40652a <flatcc_builder_custom_reset@@Base+0xea>
  40652a:	jmp    40652f <flatcc_builder_custom_reset@@Base+0xef>
  40652f:	mov    eax,DWORD PTR [rbp-0x24]
  406532:	add    eax,0x1
  406535:	mov    DWORD PTR [rbp-0x24],eax
  406538:	jmp    406459 <flatcc_builder_custom_reset@@Base+0x19>
  40653d:	mov    rax,QWORD PTR [rbp-0x10]
  406541:	mov    DWORD PTR [rax+0xe0],0x0
  40654b:	mov    rax,QWORD PTR [rbp-0x10]
  40654f:	cmp    DWORD PTR [rax+0xe4],0x0
  406556:	jbe    40656a <flatcc_builder_custom_reset@@Base+0x12a>
  40655c:	mov    rax,QWORD PTR [rbp-0x10]
  406560:	mov    DWORD PTR [rax+0xe4],0x10
  40656a:	mov    rax,QWORD PTR [rbp-0x10]
  40656e:	mov    WORD PTR [rax+0xe8],0x0
  406577:	mov    rax,QWORD PTR [rbp-0x10]
  40657b:	mov    DWORD PTR [rax+0xf0],0x0
  406585:	mov    rax,QWORD PTR [rbp-0x10]
  406589:	mov    DWORD PTR [rax+0xf4],0x0
  406593:	mov    rax,QWORD PTR [rbp-0x10]
  406597:	mov    DWORD PTR [rax+0x104],0x0
  4065a1:	mov    rax,QWORD PTR [rbp-0x10]
  4065a5:	mov    DWORD PTR [rax+0x108],0x0
  4065af:	mov    rax,QWORD PTR [rbp-0x10]
  4065b3:	mov    DWORD PTR [rax+0x20],0x0
  4065ba:	mov    rax,QWORD PTR [rbp-0x10]
  4065be:	mov    DWORD PTR [rax+0x24],0x0
  4065c5:	mov    rax,QWORD PTR [rbp-0x10]
  4065c9:	mov    DWORD PTR [rax+0xfc],0x0
  4065d3:	mov    rax,QWORD PTR [rbp-0x10]
  4065d7:	mov    DWORD PTR [rax+0x100],0x0
  4065e1:	mov    rax,QWORD PTR [rbp-0x10]
  4065e5:	mov    rax,QWORD PTR [rax+0x68]
  4065e9:	mov    rcx,QWORD PTR [rbp-0x10]
  4065ed:	mov    QWORD PTR [rcx+0x18],rax
  4065f1:	mov    rax,QWORD PTR [rbp-0x10]
  4065f5:	mov    rax,QWORD PTR [rax+0x88]
  4065fc:	mov    rcx,QWORD PTR [rbp-0x10]
  406600:	mov    QWORD PTR [rcx],rax
  406603:	mov    rax,QWORD PTR [rbp-0x10]
  406607:	mov    rax,QWORD PTR [rax+0x58]
  40660b:	mov    rcx,QWORD PTR [rbp-0x10]
  40660f:	mov    QWORD PTR [rcx+0x8],rax
  406613:	mov    rax,QWORD PTR [rbp-0x10]
  406617:	mov    QWORD PTR [rax+0x30],0x0
  40661f:	cmp    DWORD PTR [rbp-0x14],0x0
  406623:	je     406654 <flatcc_builder_custom_reset@@Base+0x214>
  406629:	mov    rax,QWORD PTR [rbp-0x10]
  40662d:	mov    QWORD PTR [rax+0x118],0x0
  406638:	mov    rax,QWORD PTR [rbp-0x10]
  40663c:	mov    DWORD PTR [rax+0x120],0x0
  406646:	mov    rax,QWORD PTR [rbp-0x10]
  40664a:	mov    DWORD PTR [rax+0x124],0x0
  406654:	mov    rax,QWORD PTR [rbp-0x10]
  406658:	cmp    DWORD PTR [rax+0x128],0x0
  40665f:	je     406677 <flatcc_builder_custom_reset@@Base+0x237>
  406665:	mov    rax,QWORD PTR [rbp-0x10]
  406669:	add    rax,0x130
  40666f:	mov    rdi,rax
  406672:	call   40bfb0 <flatcc_emitter_reset@@Base>
  406677:	mov    DWORD PTR [rbp-0x4],0x0
  40667e:	mov    eax,DWORD PTR [rbp-0x4]
  406681:	add    rsp,0x30
  406685:	pop    rbp
  406686:	ret    
  406687:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406690 <flatcc_builder_reset@@Base>:
  406690:	push   rbp
  406691:	mov    rbp,rsp
  406694:	sub    rsp,0x10
  406698:	xor    eax,eax
  40669a:	mov    QWORD PTR [rbp-0x8],rdi
  40669e:	mov    rdi,QWORD PTR [rbp-0x8]
  4066a2:	mov    esi,eax
  4066a4:	mov    edx,eax
  4066a6:	call   406440 <flatcc_builder_custom_reset@@Base>
  4066ab:	add    rsp,0x10
  4066af:	pop    rbp
  4066b0:	ret    
  4066b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004066c0 <flatcc_builder_clear@@Base>:
  4066c0:	push   rbp
  4066c1:	mov    rbp,rsp
  4066c4:	sub    rsp,0x20
  4066c8:	mov    QWORD PTR [rbp-0x8],rdi
  4066cc:	mov    DWORD PTR [rbp-0x14],0x0
  4066d3:	cmp    DWORD PTR [rbp-0x14],0x8
  4066d7:	jge    406733 <flatcc_builder_clear@@Base+0x73>
  4066dd:	xor    eax,eax
  4066df:	mov    edx,eax
  4066e1:	xor    ecx,ecx
  4066e3:	mov    rsi,QWORD PTR [rbp-0x8]
  4066e7:	add    rsi,0x58
  4066ee:	movsxd rdi,DWORD PTR [rbp-0x14]
  4066f2:	shl    rdi,0x4
  4066f6:	add    rsi,rdi
  4066f9:	mov    QWORD PTR [rbp-0x10],rsi
  4066fd:	mov    rsi,QWORD PTR [rbp-0x8]
  406701:	mov    rsi,QWORD PTR [rsi+0x50]
  406705:	mov    rdi,QWORD PTR [rbp-0x8]
  406709:	mov    rdi,QWORD PTR [rdi+0x40]
  40670d:	mov    r8,QWORD PTR [rbp-0x10]
  406711:	mov    eax,DWORD PTR [rbp-0x14]
  406714:	mov    QWORD PTR [rbp-0x20],rsi
  406718:	mov    rsi,r8
  40671b:	mov    r8d,eax
  40671e:	mov    r9,QWORD PTR [rbp-0x20]
  406722:	call   r9
  406725:	mov    eax,DWORD PTR [rbp-0x14]
  406728:	add    eax,0x1
  40672b:	mov    DWORD PTR [rbp-0x14],eax
  40672e:	jmp    4066d3 <flatcc_builder_clear@@Base+0x13>
  406733:	mov    rax,QWORD PTR [rbp-0x8]
  406737:	cmp    DWORD PTR [rax+0x128],0x0
  40673e:	je     406756 <flatcc_builder_clear@@Base+0x96>
  406744:	mov    rax,QWORD PTR [rbp-0x8]
  406748:	add    rax,0x130
  40674e:	mov    rdi,rax
  406751:	call   40c150 <flatcc_emitter_clear@@Base>
  406756:	xor    esi,esi
  406758:	mov    rax,QWORD PTR [rbp-0x8]
  40675c:	mov    rdi,rax
  40675f:	mov    edx,0x188
  406764:	call   403080 <memset@plt>
  406769:	add    rsp,0x20
  40676d:	pop    rbp
  40676e:	ret    
  40676f:	nop

0000000000406770 <flatcc_builder_enter_user_frame_ptr@@Base>:
  406770:	push   rbp
  406771:	mov    rbp,rsp
  406774:	sub    rsp,0x20
  406778:	xor    r8d,r8d
  40677b:	mov    QWORD PTR [rbp-0x10],rdi
  40677f:	mov    QWORD PTR [rbp-0x18],rsi
  406783:	mov    rax,QWORD PTR [rbp-0x18]
  406787:	add    rax,0x8
  40678d:	sub    rax,0x1
  406793:	and    rax,0xfffffffffffffff8
  406799:	add    rax,0x8
  40679f:	mov    QWORD PTR [rbp-0x18],rax
  4067a3:	mov    rdi,QWORD PTR [rbp-0x10]
  4067a7:	mov    rax,QWORD PTR [rbp-0x10]
  4067ab:	mov    rdx,QWORD PTR [rax+0x180]
  4067b2:	mov    rcx,QWORD PTR [rbp-0x18]
  4067b6:	mov    esi,0x7
  4067bb:	call   406860 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4067c0:	mov    QWORD PTR [rbp-0x20],rax
  4067c4:	cmp    rax,0x0
  4067c8:	jne    4067db <flatcc_builder_enter_user_frame_ptr@@Base+0x6b>
  4067ce:	mov    QWORD PTR [rbp-0x8],0x0
  4067d6:	jmp    406847 <flatcc_builder_enter_user_frame_ptr@@Base+0xd7>
  4067db:	xor    esi,esi
  4067dd:	mov    rax,QWORD PTR [rbp-0x20]
  4067e1:	mov    rdx,QWORD PTR [rbp-0x18]
  4067e5:	mov    rdi,rax
  4067e8:	call   403080 <memset@plt>
  4067ed:	mov    rax,QWORD PTR [rbp-0x10]
  4067f1:	mov    rax,QWORD PTR [rax+0x178]
  4067f8:	mov    rcx,QWORD PTR [rbp-0x20]
  4067fc:	mov    rdx,rcx
  4067ff:	add    rdx,0x8
  406806:	mov    QWORD PTR [rbp-0x20],rdx
  40680a:	mov    QWORD PTR [rcx],rax
  40680d:	mov    rax,QWORD PTR [rbp-0x10]
  406811:	mov    rax,QWORD PTR [rax+0x180]
  406818:	add    rax,0x8
  40681e:	mov    rcx,QWORD PTR [rbp-0x10]
  406822:	mov    QWORD PTR [rcx+0x178],rax
  406829:	mov    rax,QWORD PTR [rbp-0x18]
  40682d:	mov    rcx,QWORD PTR [rbp-0x10]
  406831:	add    rax,QWORD PTR [rcx+0x180]
  406838:	mov    QWORD PTR [rcx+0x180],rax
  40683f:	mov    rax,QWORD PTR [rbp-0x20]
  406843:	mov    QWORD PTR [rbp-0x8],rax
  406847:	mov    rax,QWORD PTR [rbp-0x8]
  40684b:	add    rsp,0x20
  40684f:	pop    rbp
  406850:	ret    
  406851:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40685b:	nop    DWORD PTR [rax+rax*1+0x0]
  406860:	push   rbp
  406861:	mov    rbp,rsp
  406864:	sub    rsp,0x40
  406868:	mov    QWORD PTR [rbp-0x8],rdi
  40686c:	mov    DWORD PTR [rbp-0xc],esi
  40686f:	mov    QWORD PTR [rbp-0x18],rdx
  406873:	mov    QWORD PTR [rbp-0x20],rcx
  406877:	mov    DWORD PTR [rbp-0x24],r8d
  40687b:	mov    rax,QWORD PTR [rbp-0x8]
  40687f:	add    rax,0x58
  406885:	movsxd rcx,DWORD PTR [rbp-0xc]
  406889:	shl    rcx,0x4
  40688d:	add    rax,rcx
  406890:	mov    QWORD PTR [rbp-0x30],rax
  406894:	mov    rax,QWORD PTR [rbp-0x18]
  406898:	add    rax,QWORD PTR [rbp-0x20]
  40689c:	mov    rcx,QWORD PTR [rbp-0x30]
  4068a0:	cmp    rax,QWORD PTR [rcx+0x8]
  4068a4:	jbe    406905 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  4068aa:	mov    rax,QWORD PTR [rbp-0x8]
  4068ae:	mov    rax,QWORD PTR [rax+0x50]
  4068b2:	mov    rcx,QWORD PTR [rbp-0x8]
  4068b6:	mov    rdi,QWORD PTR [rcx+0x40]
  4068ba:	mov    rsi,QWORD PTR [rbp-0x30]
  4068be:	mov    rcx,QWORD PTR [rbp-0x18]
  4068c2:	add    rcx,QWORD PTR [rbp-0x20]
  4068c6:	mov    edx,DWORD PTR [rbp-0x24]
  4068c9:	mov    r8d,DWORD PTR [rbp-0xc]
  4068cd:	mov    DWORD PTR [rbp-0x34],edx
  4068d0:	mov    rdx,rcx
  4068d3:	mov    ecx,DWORD PTR [rbp-0x34]
  4068d6:	call   rax
  4068d8:	cmp    eax,0x0
  4068db:	je     406900 <flatcc_builder_enter_user_frame_ptr@@Base+0x190>
  4068e1:	lea    rdi,[rip+0x844a]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  4068e8:	lea    rsi,[rip+0x7283]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4068ef:	mov    edx,0x134
  4068f4:	lea    rcx,[rip+0x8271]        # 40eb6c <flatcc_builder_padding_base@@Base+0x120c>
  4068fb:	call   403070 <__assert_fail@plt>
  406900:	jmp    406905 <flatcc_builder_enter_user_frame_ptr@@Base+0x195>
  406905:	mov    rax,QWORD PTR [rbp-0x30]
  406909:	mov    rax,QWORD PTR [rax]
  40690c:	add    rax,QWORD PTR [rbp-0x18]
  406910:	add    rsp,0x40
  406914:	pop    rbp
  406915:	ret    
  406916:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406920 <flatcc_builder_enter_user_frame@@Base>:
  406920:	push   rbp
  406921:	mov    rbp,rsp
  406924:	sub    rsp,0x20
  406928:	xor    r8d,r8d
  40692b:	mov    QWORD PTR [rbp-0x10],rdi
  40692f:	mov    QWORD PTR [rbp-0x18],rsi
  406933:	mov    rax,QWORD PTR [rbp-0x18]
  406937:	add    rax,0x8
  40693d:	sub    rax,0x1
  406943:	and    rax,0xfffffffffffffff8
  406949:	add    rax,0x8
  40694f:	mov    QWORD PTR [rbp-0x18],rax
  406953:	mov    rdi,QWORD PTR [rbp-0x10]
  406957:	mov    rax,QWORD PTR [rbp-0x10]
  40695b:	mov    rdx,QWORD PTR [rax+0x180]
  406962:	mov    rcx,QWORD PTR [rbp-0x18]
  406966:	mov    esi,0x7
  40696b:	call   406860 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  406970:	mov    QWORD PTR [rbp-0x20],rax
  406974:	cmp    rax,0x0
  406978:	jne    40698b <flatcc_builder_enter_user_frame@@Base+0x6b>
  40697e:	mov    QWORD PTR [rbp-0x8],0x0
  406986:	jmp    4069fe <flatcc_builder_enter_user_frame@@Base+0xde>
  40698b:	xor    esi,esi
  40698d:	mov    rax,QWORD PTR [rbp-0x20]
  406991:	mov    rdx,QWORD PTR [rbp-0x18]
  406995:	mov    rdi,rax
  406998:	call   403080 <memset@plt>
  40699d:	mov    rax,QWORD PTR [rbp-0x10]
  4069a1:	mov    rax,QWORD PTR [rax+0x178]
  4069a8:	mov    rcx,QWORD PTR [rbp-0x20]
  4069ac:	mov    rdx,rcx
  4069af:	add    rdx,0x8
  4069b6:	mov    QWORD PTR [rbp-0x20],rdx
  4069ba:	mov    QWORD PTR [rcx],rax
  4069bd:	mov    rax,QWORD PTR [rbp-0x10]
  4069c1:	mov    rax,QWORD PTR [rax+0x180]
  4069c8:	add    rax,0x8
  4069ce:	mov    rcx,QWORD PTR [rbp-0x10]
  4069d2:	mov    QWORD PTR [rcx+0x178],rax
  4069d9:	mov    rax,QWORD PTR [rbp-0x18]
  4069dd:	mov    rcx,QWORD PTR [rbp-0x10]
  4069e1:	add    rax,QWORD PTR [rcx+0x180]
  4069e8:	mov    QWORD PTR [rcx+0x180],rax
  4069ef:	mov    rax,QWORD PTR [rbp-0x10]
  4069f3:	mov    rax,QWORD PTR [rax+0x178]
  4069fa:	mov    QWORD PTR [rbp-0x8],rax
  4069fe:	mov    rax,QWORD PTR [rbp-0x8]
  406a02:	add    rsp,0x20
  406a06:	pop    rbp
  406a07:	ret    
  406a08:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406a10 <flatcc_builder_exit_user_frame@@Base>:
  406a10:	push   rbp
  406a11:	mov    rbp,rsp
  406a14:	sub    rsp,0x10
  406a18:	mov    QWORD PTR [rbp-0x8],rdi
  406a1c:	mov    rax,QWORD PTR [rbp-0x8]
  406a20:	cmp    QWORD PTR [rax+0x178],0x0
  406a28:	jbe    406a33 <flatcc_builder_exit_user_frame@@Base+0x23>
  406a2e:	jmp    406a52 <flatcc_builder_exit_user_frame@@Base+0x42>
  406a33:	lea    rdi,[rip+0x71d6]        # 40dc10 <flatcc_builder_padding_base@@Base+0x2b0>
  406a3a:	lea    rsi,[rip+0x7131]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  406a41:	mov    edx,0x21e
  406a46:	lea    rcx,[rip+0x71dc]        # 40dc29 <flatcc_builder_padding_base@@Base+0x2c9>
  406a4d:	call   403070 <__assert_fail@plt>
  406a52:	mov    rax,QWORD PTR [rbp-0x8]
  406a56:	mov    rax,QWORD PTR [rax+0xc8]
  406a5d:	mov    rcx,QWORD PTR [rbp-0x8]
  406a61:	mov    rcx,QWORD PTR [rcx+0x178]
  406a68:	mov    ecx,ecx
  406a6a:	mov    edx,ecx
  406a6c:	add    rax,rdx
  406a6f:	mov    QWORD PTR [rbp-0x10],rax
  406a73:	mov    rax,QWORD PTR [rbp-0x8]
  406a77:	mov    rax,QWORD PTR [rax+0x178]
  406a7e:	sub    rax,0x8
  406a84:	mov    rdx,QWORD PTR [rbp-0x8]
  406a88:	mov    QWORD PTR [rdx+0x180],rax
  406a8f:	mov    rax,QWORD PTR [rbp-0x10]
  406a93:	mov    rax,QWORD PTR [rax-0x8]
  406a97:	mov    rdx,QWORD PTR [rbp-0x8]
  406a9b:	mov    QWORD PTR [rdx+0x178],rax
  406aa2:	add    rsp,0x10
  406aa6:	pop    rbp
  406aa7:	ret    
  406aa8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406ab0 <flatcc_builder_exit_user_frame_at@@Base>:
  406ab0:	push   rbp
  406ab1:	mov    rbp,rsp
  406ab4:	sub    rsp,0x10
  406ab8:	mov    QWORD PTR [rbp-0x8],rdi
  406abc:	mov    QWORD PTR [rbp-0x10],rsi
  406ac0:	mov    rax,QWORD PTR [rbp-0x8]
  406ac4:	mov    rax,QWORD PTR [rax+0x178]
  406acb:	cmp    rax,QWORD PTR [rbp-0x10]
  406acf:	jb     406ada <flatcc_builder_exit_user_frame_at@@Base+0x2a>
  406ad5:	jmp    406af9 <flatcc_builder_exit_user_frame_at@@Base+0x49>
  406ada:	lea    rdi,[rip+0x7182]        # 40dc63 <flatcc_builder_padding_base@@Base+0x303>
  406ae1:	lea    rsi,[rip+0x708a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  406ae8:	mov    edx,0x227
  406aed:	lea    rcx,[rip+0x718e]        # 40dc82 <flatcc_builder_padding_base@@Base+0x322>
  406af4:	call   403070 <__assert_fail@plt>
  406af9:	mov    rax,QWORD PTR [rbp-0x10]
  406afd:	mov    rcx,QWORD PTR [rbp-0x8]
  406b01:	mov    QWORD PTR [rcx+0x178],rax
  406b08:	mov    rdi,QWORD PTR [rbp-0x8]
  406b0c:	call   406a10 <flatcc_builder_exit_user_frame@@Base>
  406b11:	add    rsp,0x10
  406b15:	pop    rbp
  406b16:	ret    
  406b17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406b20 <flatcc_builder_get_current_user_frame@@Base>:
  406b20:	push   rbp
  406b21:	mov    rbp,rsp
  406b24:	mov    QWORD PTR [rbp-0x8],rdi
  406b28:	mov    rax,QWORD PTR [rbp-0x8]
  406b2c:	mov    rax,QWORD PTR [rax+0x178]
  406b33:	pop    rbp
  406b34:	ret    
  406b35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b3f:	nop

0000000000406b40 <flatcc_builder_get_user_frame_ptr@@Base>:
  406b40:	push   rbp
  406b41:	mov    rbp,rsp
  406b44:	mov    QWORD PTR [rbp-0x8],rdi
  406b48:	mov    QWORD PTR [rbp-0x10],rsi
  406b4c:	mov    rax,QWORD PTR [rbp-0x8]
  406b50:	mov    rax,QWORD PTR [rax+0xc8]
  406b57:	mov    rcx,QWORD PTR [rbp-0x10]
  406b5b:	mov    ecx,ecx
  406b5d:	mov    edx,ecx
  406b5f:	add    rax,rdx
  406b62:	pop    rbp
  406b63:	ret    
  406b64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b6e:	xchg   ax,ax

0000000000406b70 <flatcc_builder_embed_buffer@@Base>:
  406b70:	push   rbp
  406b71:	mov    rbp,rsp
  406b74:	sub    rsp,0xd0
  406b7b:	mov    QWORD PTR [rbp-0x10],rdi
  406b7f:	mov    WORD PTR [rbp-0x12],si
  406b83:	mov    QWORD PTR [rbp-0x20],rdx
  406b87:	mov    QWORD PTR [rbp-0x28],rcx
  406b8b:	mov    WORD PTR [rbp-0x2a],r8w
  406b90:	mov    DWORD PTR [rbp-0x30],r9d
  406b94:	mov    eax,DWORD PTR [rbp-0x30]
  406b97:	and    eax,0x2
  406b9a:	mov    DWORD PTR [rbp-0xcc],eax
  406ba0:	mov    rdi,QWORD PTR [rbp-0x10]
  406ba4:	mov    si,WORD PTR [rbp-0x12]
  406ba8:	mov    rcx,QWORD PTR [rbp-0x10]
  406bac:	cmp    DWORD PTR [rcx+0x100],0x0
  406bb3:	sete   r10b
  406bb7:	xor    r10b,0xff
  406bbb:	and    r10b,0x1
  406bbf:	movzx  ecx,r10b
  406bc3:	lea    rdx,[rbp-0x2a]
  406bc7:	mov    WORD PTR [rbp-0xce],si
  406bce:	mov    rsi,rdx
  406bd1:	mov    r8w,WORD PTR [rbp-0xce]
  406bd9:	movzx  edx,r8w
  406bdd:	call   406dd0 <flatcc_builder_embed_buffer@@Base+0x260>
  406be2:	cmp    eax,0x0
  406be5:	je     406bf7 <flatcc_builder_embed_buffer@@Base+0x87>
  406beb:	mov    DWORD PTR [rbp-0x4],0x0
  406bf2:	jmp    406dbc <flatcc_builder_embed_buffer@@Base+0x24c>
  406bf7:	xor    eax,eax
  406bf9:	mov    ecx,eax
  406bfb:	mov    rdi,QWORD PTR [rbp-0x10]
  406bff:	mov    rdx,QWORD PTR [rbp-0x28]
  406c03:	mov    eax,edx
  406c05:	mov    esi,eax
  406c07:	mov    eax,DWORD PTR [rbp-0xcc]
  406c0d:	cmp    eax,0x0
  406c10:	mov    r8d,0x4
  406c16:	cmovne rcx,r8
  406c1a:	add    rsi,rcx
  406c1d:	movzx  edx,WORD PTR [rbp-0x2a]
  406c21:	call   406f70 <flatcc_builder_embed_buffer@@Base+0x400>
  406c26:	mov    DWORD PTR [rbp-0x38],eax
  406c29:	mov    rcx,QWORD PTR [rbp-0x28]
  406c2d:	add    ecx,DWORD PTR [rbp-0x38]
  406c30:	mov    edi,ecx
  406c32:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  406c37:	mov    DWORD PTR [rbp-0x34],eax
  406c3a:	mov    QWORD PTR [rbp-0xc8],0x0
  406c45:	mov    DWORD PTR [rbp-0xc0],0x0
  406c4f:	mov    r8,QWORD PTR [rbp-0x10]
  406c53:	cmp    DWORD PTR [r8+0x100],0x0
  406c5b:	je     406cc7 <flatcc_builder_embed_buffer@@Base+0x157>
  406c61:	mov    rax,QWORD PTR [rbp-0xc8]
  406c68:	add    rax,0x4
  406c6e:	mov    QWORD PTR [rbp-0xc8],rax
  406c75:	lea    rax,[rbp-0x34]
  406c79:	lea    rcx,[rbp-0xc8]
  406c80:	mov    rdx,rcx
  406c83:	add    rdx,0x10
  406c8a:	movsxd rsi,DWORD PTR [rbp-0xc0]
  406c91:	shl    rsi,0x4
  406c95:	add    rdx,rsi
  406c98:	mov    QWORD PTR [rdx],rax
  406c9b:	add    rcx,0x10
  406ca2:	movsxd rax,DWORD PTR [rbp-0xc0]
  406ca9:	shl    rax,0x4
  406cad:	add    rcx,rax
  406cb0:	mov    QWORD PTR [rcx+0x8],0x4
  406cb8:	mov    edi,DWORD PTR [rbp-0xc0]
  406cbe:	add    edi,0x1
  406cc1:	mov    DWORD PTR [rbp-0xc0],edi
  406cc7:	cmp    QWORD PTR [rbp-0x28],0x0
  406ccc:	jbe    406d36 <flatcc_builder_embed_buffer@@Base+0x1c6>
  406cd2:	mov    rax,QWORD PTR [rbp-0x28]
  406cd6:	add    rax,QWORD PTR [rbp-0xc8]
  406cdd:	mov    QWORD PTR [rbp-0xc8],rax
  406ce4:	mov    rax,QWORD PTR [rbp-0x20]
  406ce8:	lea    rcx,[rbp-0xc8]
  406cef:	mov    rdx,rcx
  406cf2:	add    rdx,0x10
  406cf9:	movsxd rsi,DWORD PTR [rbp-0xc0]
  406d00:	shl    rsi,0x4
  406d04:	add    rdx,rsi
  406d07:	mov    QWORD PTR [rdx],rax
  406d0a:	mov    rax,QWORD PTR [rbp-0x28]
  406d0e:	add    rcx,0x10
  406d15:	movsxd rdx,DWORD PTR [rbp-0xc0]
  406d1c:	shl    rdx,0x4
  406d20:	add    rcx,rdx
  406d23:	mov    QWORD PTR [rcx+0x8],rax
  406d27:	mov    edi,DWORD PTR [rbp-0xc0]
  406d2d:	add    edi,0x1
  406d30:	mov    DWORD PTR [rbp-0xc0],edi
  406d36:	cmp    DWORD PTR [rbp-0x38],0x0
  406d3a:	jbe    406da9 <flatcc_builder_embed_buffer@@Base+0x239>
  406d40:	lea    rax,[rip+0x6c19]        # 40d960 <flatcc_builder_padding_base@@Base>
  406d47:	mov    ecx,DWORD PTR [rbp-0x38]
  406d4a:	mov    edx,ecx
  406d4c:	add    rdx,QWORD PTR [rbp-0xc8]
  406d53:	mov    QWORD PTR [rbp-0xc8],rdx
  406d5a:	lea    rdx,[rbp-0xc8]
  406d61:	mov    rsi,rdx
  406d64:	add    rsi,0x10
  406d6b:	movsxd rdi,DWORD PTR [rbp-0xc0]
  406d72:	shl    rdi,0x4
  406d76:	add    rsi,rdi
  406d79:	mov    QWORD PTR [rsi],rax
  406d7c:	mov    ecx,DWORD PTR [rbp-0x38]
  406d7f:	mov    eax,ecx
  406d81:	add    rdx,0x10
  406d88:	movsxd rsi,DWORD PTR [rbp-0xc0]
  406d8f:	shl    rsi,0x4
  406d93:	add    rdx,rsi
  406d96:	mov    QWORD PTR [rdx+0x8],rax
  406d9a:	mov    ecx,DWORD PTR [rbp-0xc0]
  406da0:	add    ecx,0x1
  406da3:	mov    DWORD PTR [rbp-0xc0],ecx
  406da9:	mov    rdi,QWORD PTR [rbp-0x10]
  406dad:	lea    rsi,[rbp-0xc8]
  406db4:	call   406fb0 <flatcc_builder_embed_buffer@@Base+0x440>
  406db9:	mov    DWORD PTR [rbp-0x4],eax
  406dbc:	mov    eax,DWORD PTR [rbp-0x4]
  406dbf:	add    rsp,0xd0
  406dc6:	pop    rbp
  406dc7:	ret    
  406dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  406dd0:	push   rbp
  406dd1:	mov    rbp,rsp
  406dd4:	sub    rsp,0xc0
  406ddb:	mov    QWORD PTR [rbp-0x8],rdi
  406ddf:	mov    QWORD PTR [rbp-0x10],rsi
  406de3:	mov    WORD PTR [rbp-0x12],dx
  406de7:	mov    DWORD PTR [rbp-0x18],ecx
  406dea:	movzx  eax,WORD PTR [rbp-0x12]
  406dee:	cmp    eax,0x0
  406df1:	je     406e06 <flatcc_builder_embed_buffer@@Base+0x296>
  406df7:	movzx  eax,WORD PTR [rbp-0x12]
  406dfb:	mov    DWORD PTR [rbp-0xb4],eax
  406e01:	jmp    406e4c <flatcc_builder_embed_buffer@@Base+0x2dc>
  406e06:	mov    rax,QWORD PTR [rbp-0x8]
  406e0a:	movzx  ecx,WORD PTR [rax+0xec]
  406e11:	cmp    ecx,0x0
  406e14:	je     406e30 <flatcc_builder_embed_buffer@@Base+0x2c0>
  406e1a:	mov    rax,QWORD PTR [rbp-0x8]
  406e1e:	movzx  ecx,WORD PTR [rax+0xec]
  406e25:	mov    DWORD PTR [rbp-0xb8],ecx
  406e2b:	jmp    406e40 <flatcc_builder_embed_buffer@@Base+0x2d0>
  406e30:	mov    eax,0x1
  406e35:	mov    DWORD PTR [rbp-0xb8],eax
  406e3b:	jmp    406e40 <flatcc_builder_embed_buffer@@Base+0x2d0>
  406e40:	mov    eax,DWORD PTR [rbp-0xb8]
  406e46:	mov    DWORD PTR [rbp-0xb4],eax
  406e4c:	mov    eax,DWORD PTR [rbp-0xb4]
  406e52:	mov    WORD PTR [rbp-0x12],ax
  406e56:	mov    rdi,QWORD PTR [rbp-0x10]
  406e5a:	mov    esi,0x4
  406e5f:	call   408940 <flatcc_builder_start_vector@@Base+0xb0>
  406e64:	mov    rdi,QWORD PTR [rbp-0x10]
  406e68:	movzx  esi,WORD PTR [rbp-0x12]
  406e6c:	call   408940 <flatcc_builder_start_vector@@Base+0xb0>
  406e71:	cmp    DWORD PTR [rbp-0x18],0x0
  406e75:	jne    406f65 <flatcc_builder_embed_buffer@@Base+0x3f5>
  406e7b:	mov    rdi,QWORD PTR [rbp-0x8]
  406e7f:	movzx  esi,WORD PTR [rbp-0x12]
  406e83:	call   40bca0 <flatcc_builder_get_emit_context@@Base+0x20>
  406e88:	mov    eax,eax
  406e8a:	mov    ecx,eax
  406e8c:	mov    QWORD PTR [rbp-0x20],rcx
  406e90:	cmp    QWORD PTR [rbp-0x20],0x0
  406e95:	je     406f60 <flatcc_builder_embed_buffer@@Base+0x3f0>
  406e9b:	mov    QWORD PTR [rbp-0xb0],0x0
  406ea6:	mov    DWORD PTR [rbp-0xa8],0x0
  406eb0:	cmp    QWORD PTR [rbp-0x20],0x0
  406eb5:	jbe    406f22 <flatcc_builder_embed_buffer@@Base+0x3b2>
  406ebb:	lea    rax,[rip+0x6a9e]        # 40d960 <flatcc_builder_padding_base@@Base>
  406ec2:	mov    rcx,QWORD PTR [rbp-0x20]
  406ec6:	add    rcx,QWORD PTR [rbp-0xb0]
  406ecd:	mov    QWORD PTR [rbp-0xb0],rcx
  406ed4:	lea    rcx,[rbp-0xb0]
  406edb:	mov    rdx,rcx
  406ede:	add    rdx,0x10
  406ee5:	movsxd rsi,DWORD PTR [rbp-0xa8]
  406eec:	shl    rsi,0x4
  406ef0:	add    rdx,rsi
  406ef3:	mov    QWORD PTR [rdx],rax
  406ef6:	mov    rax,QWORD PTR [rbp-0x20]
  406efa:	add    rcx,0x10
  406f01:	movsxd rdx,DWORD PTR [rbp-0xa8]
  406f08:	shl    rdx,0x4
  406f0c:	add    rcx,rdx
  406f0f:	mov    QWORD PTR [rcx+0x8],rax
  406f13:	mov    edi,DWORD PTR [rbp-0xa8]
  406f19:	add    edi,0x1
  406f1c:	mov    DWORD PTR [rbp-0xa8],edi
  406f22:	mov    rdi,QWORD PTR [rbp-0x8]
  406f26:	lea    rsi,[rbp-0xb0]
  406f2d:	call   408f40 <flatcc_builder_create_vtable@@Base+0x140>
  406f32:	xor    ecx,ecx
  406f34:	cmp    ecx,eax
  406f36:	jne    406f5b <flatcc_builder_embed_buffer@@Base+0x3eb>
  406f3c:	lea    rdi,[rip+0x7def]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  406f43:	lea    rsi,[rip+0x6c28]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  406f4a:	mov    edx,0x2be
  406f4f:	lea    rcx,[rip+0x7c59]        # 40ebaf <flatcc_builder_padding_base@@Base+0x124f>
  406f56:	call   403070 <__assert_fail@plt>
  406f5b:	jmp    406f60 <flatcc_builder_embed_buffer@@Base+0x3f0>
  406f60:	jmp    406f65 <flatcc_builder_embed_buffer@@Base+0x3f5>
  406f65:	xor    eax,eax
  406f67:	add    rsp,0xc0
  406f6e:	pop    rbp
  406f6f:	ret    
  406f70:	push   rbp
  406f71:	mov    rbp,rsp
  406f74:	mov    QWORD PTR [rbp-0x8],rdi
  406f78:	mov    DWORD PTR [rbp-0xc],esi
  406f7b:	mov    WORD PTR [rbp-0xe],dx
  406f7f:	mov    rax,QWORD PTR [rbp-0x8]
  406f83:	mov    ecx,DWORD PTR [rax+0xf0]
  406f89:	sub    ecx,DWORD PTR [rbp-0xc]
  406f8c:	movzx  esi,WORD PTR [rbp-0xe]
  406f90:	sub    esi,0x1
  406f93:	and    ecx,esi
  406f95:	mov    eax,ecx
  406f97:	pop    rbp
  406f98:	ret    
  406f99:	nop    DWORD PTR [rax+0x0]
  406fa0:	push   rbp
  406fa1:	mov    rbp,rsp
  406fa4:	mov    DWORD PTR [rbp-0x4],edi
  406fa7:	mov    eax,DWORD PTR [rbp-0x4]
  406faa:	pop    rbp
  406fab:	ret    
  406fac:	nop    DWORD PTR [rax+0x0]
  406fb0:	push   rbp
  406fb1:	mov    rbp,rsp
  406fb4:	sub    rsp,0x20
  406fb8:	mov    QWORD PTR [rbp-0x8],rdi
  406fbc:	mov    QWORD PTR [rbp-0x10],rsi
  406fc0:	mov    rax,QWORD PTR [rbp-0x8]
  406fc4:	mov    ecx,DWORD PTR [rax+0xf0]
  406fca:	mov    rax,QWORD PTR [rbp-0x10]
  406fce:	mov    rax,QWORD PTR [rax]
  406fd1:	sub    ecx,eax
  406fd3:	mov    DWORD PTR [rbp-0x14],ecx
  406fd6:	mov    rdx,QWORD PTR [rbp-0x10]
  406fda:	cmp    QWORD PTR [rdx],0x10
  406fde:	jbe    406fff <flatcc_builder_embed_buffer@@Base+0x48f>
  406fe4:	mov    rax,QWORD PTR [rbp-0x10]
  406fe8:	mov    rax,QWORD PTR [rax]
  406feb:	sub    rax,0x10
  406ff1:	mov    ecx,0xffffffff
  406ff6:	cmp    rax,rcx
  406ff9:	ja     407012 <flatcc_builder_embed_buffer@@Base+0x4a2>
  406fff:	mov    eax,DWORD PTR [rbp-0x14]
  407002:	mov    rcx,QWORD PTR [rbp-0x8]
  407006:	cmp    eax,DWORD PTR [rcx+0xf0]
  40700c:	jl     407031 <flatcc_builder_embed_buffer@@Base+0x4c1>
  407012:	lea    rdi,[rip+0x7d19]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  407019:	lea    rsi,[rip+0x6b52]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407020:	mov    edx,0x287
  407025:	lea    rcx,[rip+0x7bc5]        # 40ebf1 <flatcc_builder_padding_base@@Base+0x1291>
  40702c:	call   403070 <__assert_fail@plt>
  407031:	mov    rax,QWORD PTR [rbp-0x8]
  407035:	mov    rax,QWORD PTR [rax+0x48]
  407039:	mov    rcx,QWORD PTR [rbp-0x8]
  40703d:	mov    rdi,QWORD PTR [rcx+0x38]
  407041:	mov    rcx,QWORD PTR [rbp-0x10]
  407045:	add    rcx,0x10
  40704c:	mov    rdx,QWORD PTR [rbp-0x10]
  407050:	mov    edx,DWORD PTR [rdx+0x8]
  407053:	mov    esi,DWORD PTR [rbp-0x14]
  407056:	mov    r8,QWORD PTR [rbp-0x10]
  40705a:	mov    r8,QWORD PTR [r8]
  40705d:	mov    DWORD PTR [rbp-0x18],esi
  407060:	mov    rsi,rcx
  407063:	mov    ecx,DWORD PTR [rbp-0x18]
  407066:	call   rax
  407068:	cmp    eax,0x0
  40706b:	je     407090 <flatcc_builder_embed_buffer@@Base+0x520>
  407071:	lea    rdi,[rip+0x7cba]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  407078:	lea    rsi,[rip+0x6af3]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40707f:	mov    edx,0x28b
  407084:	lea    rcx,[rip+0x7b66]        # 40ebf1 <flatcc_builder_padding_base@@Base+0x1291>
  40708b:	call   403070 <__assert_fail@plt>
  407090:	mov    eax,DWORD PTR [rbp-0x14]
  407093:	mov    rcx,QWORD PTR [rbp-0x8]
  407097:	mov    DWORD PTR [rcx+0xf0],eax
  40709d:	add    rsp,0x20
  4070a1:	pop    rbp
  4070a2:	ret    
  4070a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4070ad:	nop    DWORD PTR [rax]

00000000004070b0 <flatcc_builder_create_buffer@@Base>:
  4070b0:	push   rbp
  4070b1:	mov    rbp,rsp
  4070b4:	sub    rsp,0xf0
  4070bb:	mov    QWORD PTR [rbp-0x10],rdi
  4070bf:	mov    QWORD PTR [rbp-0x18],rsi
  4070c3:	mov    WORD PTR [rbp-0x1a],dx
  4070c7:	mov    DWORD PTR [rbp-0x20],ecx
  4070ca:	mov    WORD PTR [rbp-0x22],r8w
  4070cf:	mov    DWORD PTR [rbp-0x28],r9d
  4070d3:	mov    DWORD PTR [rbp-0x34],0x0
  4070da:	mov    DWORD PTR [rbp-0xd4],0x0
  4070e4:	mov    eax,DWORD PTR [rbp-0x28]
  4070e7:	and    eax,0x1
  4070ea:	cmp    eax,0x0
  4070ed:	setne  r10b
  4070f1:	and    r10b,0x1
  4070f5:	movzx  eax,r10b
  4070f9:	mov    DWORD PTR [rbp-0xd8],eax
  4070ff:	mov    eax,DWORD PTR [rbp-0x28]
  407102:	and    eax,0x2
  407105:	cmp    eax,0x0
  407108:	setne  r10b
  40710c:	and    r10b,0x1
  407110:	movzx  eax,r10b
  407114:	mov    DWORD PTR [rbp-0xdc],eax
  40711a:	mov    rdi,QWORD PTR [rbp-0x10]
  40711e:	mov    dx,WORD PTR [rbp-0x1a]
  407122:	mov    ecx,DWORD PTR [rbp-0xd8]
  407128:	lea    rsi,[rbp-0x22]
  40712c:	movzx  edx,dx
  40712f:	call   406dd0 <flatcc_builder_embed_buffer@@Base+0x260>
  407134:	cmp    eax,0x0
  407137:	je     407149 <flatcc_builder_create_buffer@@Base+0x99>
  40713d:	mov    DWORD PTR [rbp-0x4],0x0
  407144:	jmp    4074b5 <flatcc_builder_create_buffer@@Base+0x405>
  407149:	mov    rdi,QWORD PTR [rbp-0x10]
  40714d:	movzx  esi,WORD PTR [rbp-0x22]
  407151:	call   4074d0 <flatcc_builder_create_buffer@@Base+0x420>
  407156:	cmp    QWORD PTR [rbp-0x18],0x0
  40715b:	je     40718f <flatcc_builder_create_buffer@@Base+0xdf>
  407161:	mov    rax,QWORD PTR [rbp-0x18]
  407165:	mov    ecx,DWORD PTR [rax]
  407167:	mov    DWORD PTR [rbp-0xd4],ecx
  40716d:	mov    edi,DWORD PTR [rbp-0xd4]
  407173:	call   407510 <flatcc_builder_create_buffer@@Base+0x460>
  407178:	mov    DWORD PTR [rbp-0xd4],eax
  40717e:	mov    edi,DWORD PTR [rbp-0xd4]
  407184:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  407189:	mov    DWORD PTR [rbp-0xd4],eax
  40718f:	xor    eax,eax
  407191:	mov    ecx,eax
  407193:	xor    eax,eax
  407195:	mov    edx,DWORD PTR [rbp-0xd4]
  40719b:	cmp    edx,0x0
  40719e:	mov    edx,0x4
  4071a3:	cmovne eax,edx
  4071a6:	mov    DWORD PTR [rbp-0x34],eax
  4071a9:	mov    rdi,QWORD PTR [rbp-0x10]
  4071ad:	mov    eax,DWORD PTR [rbp-0x34]
  4071b0:	mov    esi,eax
  4071b2:	add    rsi,0x4
  4071b9:	mov    eax,DWORD PTR [rbp-0xdc]
  4071bf:	cmp    eax,0x0
  4071c2:	mov    r8d,0x4
  4071c8:	cmovne rcx,r8
  4071cc:	add    rsi,rcx
  4071cf:	movzx  edx,WORD PTR [rbp-0x22]
  4071d3:	call   406f70 <flatcc_builder_embed_buffer@@Base+0x400>
  4071d8:	mov    DWORD PTR [rbp-0x30],eax
  4071db:	mov    QWORD PTR [rbp-0xd0],0x0
  4071e6:	mov    DWORD PTR [rbp-0xc8],0x0
  4071f0:	cmp    DWORD PTR [rbp-0xd8],0x0
  4071f7:	jne    40720a <flatcc_builder_create_buffer@@Base+0x15a>
  4071fd:	cmp    DWORD PTR [rbp-0xdc],0x0
  407204:	je     407270 <flatcc_builder_create_buffer@@Base+0x1c0>
  40720a:	mov    rax,QWORD PTR [rbp-0xd0]
  407211:	add    rax,0x4
  407217:	mov    QWORD PTR [rbp-0xd0],rax
  40721e:	lea    rax,[rbp-0x3c]
  407222:	lea    rcx,[rbp-0xd0]
  407229:	mov    rdx,rcx
  40722c:	add    rdx,0x10
  407233:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40723a:	shl    rsi,0x4
  40723e:	add    rdx,rsi
  407241:	mov    QWORD PTR [rdx],rax
  407244:	add    rcx,0x10
  40724b:	movsxd rax,DWORD PTR [rbp-0xc8]
  407252:	shl    rax,0x4
  407256:	add    rcx,rax
  407259:	mov    QWORD PTR [rcx+0x8],0x4
  407261:	mov    edi,DWORD PTR [rbp-0xc8]
  407267:	add    edi,0x1
  40726a:	mov    DWORD PTR [rbp-0xc8],edi
  407270:	mov    rax,QWORD PTR [rbp-0xd0]
  407277:	add    rax,0x4
  40727d:	mov    QWORD PTR [rbp-0xd0],rax
  407284:	lea    rax,[rbp-0x38]
  407288:	lea    rcx,[rbp-0xd0]
  40728f:	mov    rdx,rcx
  407292:	add    rdx,0x10
  407299:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4072a0:	shl    rsi,0x4
  4072a4:	add    rdx,rsi
  4072a7:	mov    QWORD PTR [rdx],rax
  4072aa:	add    rcx,0x10
  4072b1:	movsxd rax,DWORD PTR [rbp-0xc8]
  4072b8:	shl    rax,0x4
  4072bc:	add    rcx,rax
  4072bf:	mov    QWORD PTR [rcx+0x8],0x4
  4072c7:	mov    edi,DWORD PTR [rbp-0xc8]
  4072cd:	add    edi,0x1
  4072d0:	mov    DWORD PTR [rbp-0xc8],edi
  4072d6:	cmp    DWORD PTR [rbp-0x34],0x0
  4072da:	jbe    407349 <flatcc_builder_create_buffer@@Base+0x299>
  4072e0:	mov    eax,DWORD PTR [rbp-0x34]
  4072e3:	mov    ecx,eax
  4072e5:	add    rcx,QWORD PTR [rbp-0xd0]
  4072ec:	mov    QWORD PTR [rbp-0xd0],rcx
  4072f3:	lea    rcx,[rbp-0xd4]
  4072fa:	lea    rdx,[rbp-0xd0]
  407301:	mov    rsi,rdx
  407304:	add    rsi,0x10
  40730b:	movsxd rdi,DWORD PTR [rbp-0xc8]
  407312:	shl    rdi,0x4
  407316:	add    rsi,rdi
  407319:	mov    QWORD PTR [rsi],rcx
  40731c:	mov    eax,DWORD PTR [rbp-0x34]
  40731f:	mov    ecx,eax
  407321:	add    rdx,0x10
  407328:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40732f:	shl    rsi,0x4
  407333:	add    rdx,rsi
  407336:	mov    QWORD PTR [rdx+0x8],rcx
  40733a:	mov    eax,DWORD PTR [rbp-0xc8]
  407340:	add    eax,0x1
  407343:	mov    DWORD PTR [rbp-0xc8],eax
  407349:	cmp    DWORD PTR [rbp-0x30],0x0
  40734d:	jbe    4073bc <flatcc_builder_create_buffer@@Base+0x30c>
  407353:	lea    rax,[rip+0x6606]        # 40d960 <flatcc_builder_padding_base@@Base>
  40735a:	mov    ecx,DWORD PTR [rbp-0x30]
  40735d:	mov    edx,ecx
  40735f:	add    rdx,QWORD PTR [rbp-0xd0]
  407366:	mov    QWORD PTR [rbp-0xd0],rdx
  40736d:	lea    rdx,[rbp-0xd0]
  407374:	mov    rsi,rdx
  407377:	add    rsi,0x10
  40737e:	movsxd rdi,DWORD PTR [rbp-0xc8]
  407385:	shl    rdi,0x4
  407389:	add    rsi,rdi
  40738c:	mov    QWORD PTR [rsi],rax
  40738f:	mov    ecx,DWORD PTR [rbp-0x30]
  407392:	mov    eax,ecx
  407394:	add    rdx,0x10
  40739b:	movsxd rsi,DWORD PTR [rbp-0xc8]
  4073a2:	shl    rsi,0x4
  4073a6:	add    rdx,rsi
  4073a9:	mov    QWORD PTR [rdx+0x8],rax
  4073ad:	mov    ecx,DWORD PTR [rbp-0xc8]
  4073b3:	add    ecx,0x1
  4073b6:	mov    DWORD PTR [rbp-0xc8],ecx
  4073bc:	mov    rax,QWORD PTR [rbp-0x10]
  4073c0:	mov    ecx,DWORD PTR [rax+0xf0]
  4073c6:	mov    rax,QWORD PTR [rbp-0xd0]
  4073cd:	sub    ecx,eax
  4073cf:	mov    eax,ecx
  4073d1:	mov    edx,eax
  4073d3:	cmp    DWORD PTR [rbp-0xd8],0x0
  4073da:	mov    sil,0x1
  4073dd:	mov    QWORD PTR [rbp-0xe8],rdx
  4073e4:	mov    BYTE PTR [rbp-0xe9],sil
  4073eb:	jne    407401 <flatcc_builder_create_buffer@@Base+0x351>
  4073f1:	cmp    DWORD PTR [rbp-0xdc],0x0
  4073f8:	setne  al
  4073fb:	mov    BYTE PTR [rbp-0xe9],al
  407401:	mov    al,BYTE PTR [rbp-0xe9]
  407407:	xor    ecx,ecx
  407409:	mov    edx,ecx
  40740b:	test   al,0x1
  40740d:	mov    esi,0x4
  407412:	cmovne rdx,rsi
  407416:	mov    rsi,QWORD PTR [rbp-0xe8]
  40741d:	add    rsi,rdx
  407420:	mov    DWORD PTR [rbp-0x40],esi
  407423:	cmp    DWORD PTR [rbp-0xd8],0x0
  40742a:	je     40744c <flatcc_builder_create_buffer@@Base+0x39c>
  407430:	mov    rax,QWORD PTR [rbp-0x10]
  407434:	mov    ecx,DWORD PTR [rax+0xf8]
  40743a:	sub    ecx,DWORD PTR [rbp-0x40]
  40743d:	mov    edi,ecx
  40743f:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  407444:	mov    DWORD PTR [rbp-0x3c],eax
  407447:	jmp    407463 <flatcc_builder_create_buffer@@Base+0x3b3>
  40744c:	mov    rax,QWORD PTR [rbp-0x10]
  407450:	mov    ecx,DWORD PTR [rax+0xf4]
  407456:	sub    ecx,DWORD PTR [rbp-0x40]
  407459:	mov    edi,ecx
  40745b:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  407460:	mov    DWORD PTR [rbp-0x3c],eax
  407463:	mov    eax,DWORD PTR [rbp-0x20]
  407466:	sub    eax,DWORD PTR [rbp-0x40]
  407469:	mov    edi,eax
  40746b:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  407470:	mov    DWORD PTR [rbp-0x38],eax
  407473:	mov    rdi,QWORD PTR [rbp-0x10]
  407477:	lea    rsi,[rbp-0xd0]
  40747e:	call   406fb0 <flatcc_builder_embed_buffer@@Base+0x440>
  407483:	xor    ecx,ecx
  407485:	mov    DWORD PTR [rbp-0x2c],eax
  407488:	cmp    ecx,eax
  40748a:	jne    4074af <flatcc_builder_create_buffer@@Base+0x3ff>
  407490:	lea    rdi,[rip+0x789b]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  407497:	lea    rsi,[rip+0x66d4]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40749e:	mov    edx,0x304
  4074a3:	lea    rcx,[rip+0x681d]        # 40dcc7 <flatcc_builder_padding_base@@Base+0x367>
  4074aa:	call   403070 <__assert_fail@plt>
  4074af:	mov    eax,DWORD PTR [rbp-0x2c]
  4074b2:	mov    DWORD PTR [rbp-0x4],eax
  4074b5:	mov    eax,DWORD PTR [rbp-0x4]
  4074b8:	add    rsp,0xf0
  4074bf:	pop    rbp
  4074c0:	ret    
  4074c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4074d0:	push   rbp
  4074d1:	mov    rbp,rsp
  4074d4:	mov    QWORD PTR [rbp-0x8],rdi
  4074d8:	mov    WORD PTR [rbp-0xa],si
  4074dc:	mov    rax,QWORD PTR [rbp-0x8]
  4074e0:	movzx  ecx,WORD PTR [rax+0xe8]
  4074e7:	movzx  edx,WORD PTR [rbp-0xa]
  4074eb:	cmp    ecx,edx
  4074ed:	jge    407502 <flatcc_builder_create_buffer@@Base+0x452>
  4074f3:	mov    ax,WORD PTR [rbp-0xa]
  4074f7:	mov    rcx,QWORD PTR [rbp-0x8]
  4074fb:	mov    WORD PTR [rcx+0xe8],ax
  407502:	pop    rbp
  407503:	ret    
  407504:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40750e:	xchg   ax,ax
  407510:	push   rbp
  407511:	mov    rbp,rsp
  407514:	mov    DWORD PTR [rbp-0x4],edi
  407517:	mov    eax,DWORD PTR [rbp-0x4]
  40751a:	pop    rbp
  40751b:	ret    
  40751c:	nop    DWORD PTR [rax+0x0]

0000000000407520 <flatcc_builder_create_struct@@Base>:
  407520:	push   rbp
  407521:	mov    rbp,rsp
  407524:	sub    rsp,0xc0
  40752b:	mov    QWORD PTR [rbp-0x8],rdi
  40752f:	mov    QWORD PTR [rbp-0x10],rsi
  407533:	mov    QWORD PTR [rbp-0x18],rdx
  407537:	mov    WORD PTR [rbp-0x1a],cx
  40753b:	movzx  eax,WORD PTR [rbp-0x1a]
  40753f:	cmp    eax,0x1
  407542:	jl     40754d <flatcc_builder_create_struct@@Base+0x2d>
  407548:	jmp    40756c <flatcc_builder_create_struct@@Base+0x4c>
  40754d:	lea    rdi,[rip+0x67f6]        # 40dd4a <flatcc_builder_padding_base@@Base+0x3ea>
  407554:	lea    rsi,[rip+0x6617]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40755b:	mov    edx,0x30f
  407560:	lea    rcx,[rip+0x67ee]        # 40dd55 <flatcc_builder_padding_base@@Base+0x3f5>
  407567:	call   403070 <__assert_fail@plt>
  40756c:	mov    rdi,QWORD PTR [rbp-0x8]
  407570:	movzx  esi,WORD PTR [rbp-0x1a]
  407574:	call   4074d0 <flatcc_builder_create_buffer@@Base+0x420>
  407579:	mov    rdi,QWORD PTR [rbp-0x8]
  40757d:	mov    rax,QWORD PTR [rbp-0x18]
  407581:	mov    esi,eax
  407583:	movzx  edx,WORD PTR [rbp-0x1a]
  407587:	call   406f70 <flatcc_builder_embed_buffer@@Base+0x400>
  40758c:	mov    eax,eax
  40758e:	mov    ecx,eax
  407590:	mov    QWORD PTR [rbp-0x28],rcx
  407594:	mov    QWORD PTR [rbp-0xb8],0x0
  40759f:	mov    DWORD PTR [rbp-0xb0],0x0
  4075a9:	cmp    QWORD PTR [rbp-0x18],0x0
  4075ae:	jbe    407618 <flatcc_builder_create_struct@@Base+0xf8>
  4075b4:	mov    rax,QWORD PTR [rbp-0x18]
  4075b8:	add    rax,QWORD PTR [rbp-0xb8]
  4075bf:	mov    QWORD PTR [rbp-0xb8],rax
  4075c6:	mov    rax,QWORD PTR [rbp-0x10]
  4075ca:	lea    rcx,[rbp-0xb8]
  4075d1:	mov    rdx,rcx
  4075d4:	add    rdx,0x10
  4075db:	movsxd rsi,DWORD PTR [rbp-0xb0]
  4075e2:	shl    rsi,0x4
  4075e6:	add    rdx,rsi
  4075e9:	mov    QWORD PTR [rdx],rax
  4075ec:	mov    rax,QWORD PTR [rbp-0x18]
  4075f0:	add    rcx,0x10
  4075f7:	movsxd rdx,DWORD PTR [rbp-0xb0]
  4075fe:	shl    rdx,0x4
  407602:	add    rcx,rdx
  407605:	mov    QWORD PTR [rcx+0x8],rax
  407609:	mov    edi,DWORD PTR [rbp-0xb0]
  40760f:	add    edi,0x1
  407612:	mov    DWORD PTR [rbp-0xb0],edi
  407618:	cmp    QWORD PTR [rbp-0x28],0x0
  40761d:	jbe    40768a <flatcc_builder_create_struct@@Base+0x16a>
  407623:	lea    rax,[rip+0x6336]        # 40d960 <flatcc_builder_padding_base@@Base>
  40762a:	mov    rcx,QWORD PTR [rbp-0x28]
  40762e:	add    rcx,QWORD PTR [rbp-0xb8]
  407635:	mov    QWORD PTR [rbp-0xb8],rcx
  40763c:	lea    rcx,[rbp-0xb8]
  407643:	mov    rdx,rcx
  407646:	add    rdx,0x10
  40764d:	movsxd rsi,DWORD PTR [rbp-0xb0]
  407654:	shl    rsi,0x4
  407658:	add    rdx,rsi
  40765b:	mov    QWORD PTR [rdx],rax
  40765e:	mov    rax,QWORD PTR [rbp-0x28]
  407662:	add    rcx,0x10
  407669:	movsxd rdx,DWORD PTR [rbp-0xb0]
  407670:	shl    rdx,0x4
  407674:	add    rcx,rdx
  407677:	mov    QWORD PTR [rcx+0x8],rax
  40767b:	mov    edi,DWORD PTR [rbp-0xb0]
  407681:	add    edi,0x1
  407684:	mov    DWORD PTR [rbp-0xb0],edi
  40768a:	mov    rdi,QWORD PTR [rbp-0x8]
  40768e:	lea    rsi,[rbp-0xb8]
  407695:	call   406fb0 <flatcc_builder_embed_buffer@@Base+0x440>
  40769a:	add    rsp,0xc0
  4076a1:	pop    rbp
  4076a2:	ret    
  4076a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076ad:	nop    DWORD PTR [rax]

00000000004076b0 <flatcc_builder_start_buffer@@Base>:
  4076b0:	push   rbp
  4076b1:	mov    rbp,rsp
  4076b4:	sub    rsp,0x30
  4076b8:	mov    QWORD PTR [rbp-0x10],rdi
  4076bc:	mov    QWORD PTR [rbp-0x18],rsi
  4076c0:	mov    WORD PTR [rbp-0x1a],dx
  4076c4:	mov    DWORD PTR [rbp-0x20],ecx
  4076c7:	mov    rdi,QWORD PTR [rbp-0x10]
  4076cb:	mov    rax,QWORD PTR [rbp-0x10]
  4076cf:	movzx  esi,WORD PTR [rax+0xe8]
  4076d6:	call   407820 <flatcc_builder_start_buffer@@Base+0x170>
  4076db:	cmp    eax,0x0
  4076de:	je     4076f0 <flatcc_builder_start_buffer@@Base+0x40>
  4076e4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4076eb:	jmp    407811 <flatcc_builder_start_buffer@@Base+0x161>
  4076f0:	mov    rax,QWORD PTR [rbp-0x10]
  4076f4:	mov    WORD PTR [rax+0xe8],0x1
  4076fd:	mov    rax,QWORD PTR [rbp-0x10]
  407701:	mov    cx,WORD PTR [rax+0xec]
  407708:	mov    rax,QWORD PTR [rbp-0x10]
  40770c:	mov    rax,QWORD PTR [rax+0x30]
  407710:	mov    WORD PTR [rax+0x22],cx
  407714:	mov    cx,WORD PTR [rbp-0x1a]
  407718:	mov    rax,QWORD PTR [rbp-0x10]
  40771c:	mov    WORD PTR [rax+0xec],cx
  407723:	mov    rax,QWORD PTR [rbp-0x10]
  407727:	mov    cx,WORD PTR [rax+0x10c]
  40772e:	mov    rax,QWORD PTR [rbp-0x10]
  407732:	mov    rax,QWORD PTR [rax+0x30]
  407736:	mov    WORD PTR [rax+0x20],cx
  40773a:	mov    edx,DWORD PTR [rbp-0x20]
  40773d:	mov    rax,QWORD PTR [rbp-0x10]
  407741:	mov    WORD PTR [rax+0x10c],dx
  407748:	mov    rax,QWORD PTR [rbp-0x10]
  40774c:	mov    esi,DWORD PTR [rax+0xf8]
  407752:	mov    rax,QWORD PTR [rbp-0x10]
  407756:	mov    rax,QWORD PTR [rax+0x30]
  40775a:	mov    DWORD PTR [rax+0x14],esi
  40775d:	mov    rax,QWORD PTR [rbp-0x10]
  407761:	mov    esi,DWORD PTR [rax+0x100]
  407767:	mov    rax,QWORD PTR [rbp-0x10]
  40776b:	mov    rax,QWORD PTR [rax+0x30]
  40776f:	mov    DWORD PTR [rax+0x1c],esi
  407772:	mov    rax,QWORD PTR [rbp-0x10]
  407776:	mov    esi,DWORD PTR [rax+0xf0]
  40777c:	mov    rax,QWORD PTR [rbp-0x10]
  407780:	mov    DWORD PTR [rax+0xf8],esi
  407786:	mov    rax,QWORD PTR [rbp-0x10]
  40778a:	mov    esi,DWORD PTR [rax+0xfc]
  407790:	mov    edi,esi
  407792:	add    edi,0x1
  407795:	mov    DWORD PTR [rax+0xfc],edi
  40779b:	mov    rax,QWORD PTR [rbp-0x10]
  40779f:	mov    DWORD PTR [rax+0x100],esi
  4077a5:	mov    rax,QWORD PTR [rbp-0x10]
  4077a9:	mov    esi,DWORD PTR [rax+0x110]
  4077af:	mov    rax,QWORD PTR [rbp-0x10]
  4077b3:	mov    rax,QWORD PTR [rax+0x30]
  4077b7:	mov    DWORD PTR [rax+0x10],esi
  4077ba:	mov    rax,QWORD PTR [rbp-0x10]
  4077be:	add    rax,0x110
  4077c4:	cmp    QWORD PTR [rbp-0x18],0x0
  4077c9:	mov    QWORD PTR [rbp-0x28],rax
  4077cd:	je     4077e0 <flatcc_builder_start_buffer@@Base+0x130>
  4077d3:	mov    rax,QWORD PTR [rbp-0x18]
  4077d7:	mov    QWORD PTR [rbp-0x30],rax
  4077db:	jmp    4077f0 <flatcc_builder_start_buffer@@Base+0x140>
  4077e0:	lea    rax,[rip+0x6179]        # 40d960 <flatcc_builder_padding_base@@Base>
  4077e7:	mov    QWORD PTR [rbp-0x30],rax
  4077eb:	jmp    4077f0 <flatcc_builder_start_buffer@@Base+0x140>
  4077f0:	mov    rax,QWORD PTR [rbp-0x30]
  4077f4:	mov    ecx,DWORD PTR [rax]
  4077f6:	mov    rax,QWORD PTR [rbp-0x28]
  4077fa:	mov    DWORD PTR [rax],ecx
  4077fc:	mov    rdx,QWORD PTR [rbp-0x10]
  407800:	mov    rdx,QWORD PTR [rdx+0x30]
  407804:	mov    WORD PTR [rdx+0xe],0x1
  40780a:	mov    DWORD PTR [rbp-0x4],0x0
  407811:	mov    eax,DWORD PTR [rbp-0x4]
  407814:	add    rsp,0x30
  407818:	pop    rbp
  407819:	ret    
  40781a:	nop    WORD PTR [rax+rax*1+0x0]
  407820:	push   rbp
  407821:	mov    rbp,rsp
  407824:	sub    rsp,0x20
  407828:	mov    QWORD PTR [rbp-0x10],rdi
  40782c:	mov    WORD PTR [rbp-0x12],si
  407830:	mov    rax,QWORD PTR [rbp-0x10]
  407834:	mov    ecx,DWORD PTR [rax+0x104]
  40783a:	add    ecx,0x1
  40783d:	mov    DWORD PTR [rax+0x104],ecx
  407843:	mov    rax,QWORD PTR [rbp-0x10]
  407847:	cmp    ecx,DWORD PTR [rax+0x108]
  40784d:	jle    40793a <flatcc_builder_start_buffer@@Base+0x28a>
  407853:	mov    rax,QWORD PTR [rbp-0x10]
  407857:	cmp    DWORD PTR [rax+0x120],0x0
  40785e:	jle    40788a <flatcc_builder_start_buffer@@Base+0x1da>
  407864:	mov    rax,QWORD PTR [rbp-0x10]
  407868:	mov    ecx,DWORD PTR [rax+0x104]
  40786e:	mov    rax,QWORD PTR [rbp-0x10]
  407872:	cmp    ecx,DWORD PTR [rax+0x120]
  407878:	jle    40788a <flatcc_builder_start_buffer@@Base+0x1da>
  40787e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407885:	jmp    4079d5 <flatcc_builder_start_buffer@@Base+0x325>
  40788a:	xor    r8d,r8d
  40788d:	mov    rdi,QWORD PTR [rbp-0x10]
  407891:	mov    rax,QWORD PTR [rbp-0x10]
  407895:	mov    ecx,DWORD PTR [rax+0x104]
  40789b:	sub    ecx,0x1
  40789e:	movsxd rax,ecx
  4078a1:	imul   rdx,rax,0x24
  4078a8:	mov    esi,0x4
  4078ad:	mov    ecx,0x24
  4078b2:	call   406860 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4078b7:	mov    rcx,QWORD PTR [rbp-0x10]
  4078bb:	mov    QWORD PTR [rcx+0x30],rax
  4078bf:	cmp    rax,0x0
  4078c3:	jne    4078d5 <flatcc_builder_start_buffer@@Base+0x225>
  4078c9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4078d0:	jmp    4079d5 <flatcc_builder_start_buffer@@Base+0x325>
  4078d5:	mov    rax,QWORD PTR [rbp-0x10]
  4078d9:	mov    rax,QWORD PTR [rax+0xa0]
  4078e0:	xor    ecx,ecx
  4078e2:	mov    edx,ecx
  4078e4:	mov    esi,0x24
  4078e9:	div    rsi
  4078ec:	mov    rsi,QWORD PTR [rbp-0x10]
  4078f0:	mov    DWORD PTR [rsi+0x108],eax
  4078f6:	mov    rsi,QWORD PTR [rbp-0x10]
  4078fa:	cmp    DWORD PTR [rsi+0x120],0x0
  407901:	jle    407935 <flatcc_builder_start_buffer@@Base+0x285>
  407907:	mov    rax,QWORD PTR [rbp-0x10]
  40790b:	mov    ecx,DWORD PTR [rax+0x120]
  407911:	mov    rax,QWORD PTR [rbp-0x10]
  407915:	cmp    ecx,DWORD PTR [rax+0x108]
  40791b:	jge    407935 <flatcc_builder_start_buffer@@Base+0x285>
  407921:	mov    rax,QWORD PTR [rbp-0x10]
  407925:	mov    ecx,DWORD PTR [rax+0x120]
  40792b:	mov    rax,QWORD PTR [rbp-0x10]
  40792f:	mov    DWORD PTR [rax+0x108],ecx
  407935:	jmp    40794d <flatcc_builder_start_buffer@@Base+0x29d>
  40793a:	mov    rax,QWORD PTR [rbp-0x10]
  40793e:	mov    rcx,QWORD PTR [rax+0x30]
  407942:	add    rcx,0x24
  407949:	mov    QWORD PTR [rax+0x30],rcx
  40794d:	mov    rax,QWORD PTR [rbp-0x10]
  407951:	mov    ecx,DWORD PTR [rax+0x20]
  407954:	mov    rax,QWORD PTR [rbp-0x10]
  407958:	mov    rax,QWORD PTR [rax+0x30]
  40795c:	mov    DWORD PTR [rax+0x8],ecx
  40795f:	mov    rax,QWORD PTR [rbp-0x10]
  407963:	mov    dx,WORD PTR [rax+0xea]
  40796a:	mov    rax,QWORD PTR [rbp-0x10]
  40796e:	mov    rax,QWORD PTR [rax+0x30]
  407972:	mov    WORD PTR [rax+0xc],dx
  407976:	mov    dx,WORD PTR [rbp-0x12]
  40797a:	mov    rax,QWORD PTR [rbp-0x10]
  40797e:	mov    WORD PTR [rax+0xea],dx
  407985:	mov    rax,QWORD PTR [rbp-0x10]
  407989:	mov    ecx,DWORD PTR [rax+0x28]
  40798c:	mov    rax,QWORD PTR [rbp-0x10]
  407990:	mov    rax,QWORD PTR [rax+0x30]
  407994:	mov    DWORD PTR [rax],ecx
  407996:	mov    rax,QWORD PTR [rbp-0x10]
  40799a:	mov    rax,QWORD PTR [rax+0x30]
  40799e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4079a5:	mov    rax,QWORD PTR [rbp-0x10]
  4079a9:	mov    ecx,DWORD PTR [rax+0x28]
  4079ac:	mov    rax,QWORD PTR [rbp-0x10]
  4079b0:	add    ecx,DWORD PTR [rax+0x20]
  4079b3:	add    ecx,0x8
  4079b6:	sub    ecx,0x1
  4079b9:	and    ecx,0xfffffff8
  4079bc:	mov    rax,QWORD PTR [rbp-0x10]
  4079c0:	mov    DWORD PTR [rax+0x28],ecx
  4079c3:	mov    rax,QWORD PTR [rbp-0x10]
  4079c7:	mov    DWORD PTR [rax+0x20],0x0
  4079ce:	mov    DWORD PTR [rbp-0x4],0x0
  4079d5:	mov    eax,DWORD PTR [rbp-0x4]
  4079d8:	add    rsp,0x20
  4079dc:	pop    rbp
  4079dd:	ret    
  4079de:	xchg   ax,ax

00000000004079e0 <flatcc_builder_end_buffer@@Base>:
  4079e0:	push   rbp
  4079e1:	mov    rbp,rsp
  4079e4:	sub    rsp,0x20
  4079e8:	xor    eax,eax
  4079ea:	mov    QWORD PTR [rbp-0x10],rdi
  4079ee:	mov    DWORD PTR [rbp-0x14],esi
  4079f1:	mov    rcx,QWORD PTR [rbp-0x10]
  4079f5:	movzx  edx,WORD PTR [rcx+0x10c]
  4079fc:	and    edx,0x2
  4079ff:	mov    DWORD PTR [rbp-0x1c],edx
  407a02:	mov    rcx,QWORD PTR [rbp-0x10]
  407a06:	mov    edx,DWORD PTR [rcx+0x100]
  407a0c:	cmp    edx,0x0
  407a0f:	mov    edx,0x1
  407a14:	cmove  edx,eax
  407a17:	or     edx,DWORD PTR [rbp-0x1c]
  407a1a:	mov    DWORD PTR [rbp-0x1c],edx
  407a1d:	mov    rcx,QWORD PTR [rbp-0x10]
  407a21:	mov    rcx,QWORD PTR [rcx+0x30]
  407a25:	movzx  eax,WORD PTR [rcx+0xe]
  407a29:	cmp    eax,0x1
  407a2c:	jne    407a37 <flatcc_builder_end_buffer@@Base+0x57>
  407a32:	jmp    407a56 <flatcc_builder_end_buffer@@Base+0x76>
  407a37:	lea    rdi,[rip+0x637d]        # 40ddbb <flatcc_builder_padding_base@@Base+0x45b>
  407a3e:	lea    rsi,[rip+0x612d]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407a45:	mov    edx,0x346
  407a4a:	lea    rcx,[rip+0x6396]        # 40dde7 <flatcc_builder_padding_base@@Base+0x487>
  407a51:	call   403070 <__assert_fail@plt>
  407a56:	mov    rdi,QWORD PTR [rbp-0x10]
  407a5a:	mov    rax,QWORD PTR [rbp-0x10]
  407a5e:	movzx  esi,WORD PTR [rax+0xec]
  407a65:	call   4074d0 <flatcc_builder_create_buffer@@Base+0x420>
  407a6a:	mov    rdi,QWORD PTR [rbp-0x10]
  407a6e:	mov    rax,QWORD PTR [rbp-0x10]
  407a72:	add    rax,0x110
  407a78:	mov    rcx,QWORD PTR [rbp-0x10]
  407a7c:	mov    dx,WORD PTR [rcx+0xec]
  407a83:	mov    ecx,DWORD PTR [rbp-0x14]
  407a86:	mov    r8,QWORD PTR [rbp-0x10]
  407a8a:	mov    r9w,WORD PTR [r8+0xe8]
  407a92:	mov    esi,DWORD PTR [rbp-0x1c]
  407a95:	mov    DWORD PTR [rbp-0x20],esi
  407a98:	mov    rsi,rax
  407a9b:	movzx  edx,dx
  407a9e:	movzx  r8d,r9w
  407aa2:	mov    r9d,DWORD PTR [rbp-0x20]
  407aa6:	call   4070b0 <flatcc_builder_create_buffer@@Base>
  407aab:	xor    ecx,ecx
  407aad:	mov    DWORD PTR [rbp-0x18],eax
  407ab0:	cmp    ecx,eax
  407ab2:	jne    407ac4 <flatcc_builder_end_buffer@@Base+0xe4>
  407ab8:	mov    DWORD PTR [rbp-0x4],0x0
  407abf:	jmp    407b29 <flatcc_builder_end_buffer@@Base+0x149>
  407ac4:	mov    rax,QWORD PTR [rbp-0x10]
  407ac8:	mov    rax,QWORD PTR [rax+0x30]
  407acc:	mov    ecx,DWORD PTR [rax+0x14]
  407acf:	mov    rax,QWORD PTR [rbp-0x10]
  407ad3:	mov    DWORD PTR [rax+0xf8],ecx
  407ad9:	mov    rax,QWORD PTR [rbp-0x10]
  407add:	mov    rax,QWORD PTR [rax+0x30]
  407ae1:	mov    ecx,DWORD PTR [rax+0x1c]
  407ae4:	mov    rax,QWORD PTR [rbp-0x10]
  407ae8:	mov    DWORD PTR [rax+0x100],ecx
  407aee:	mov    rax,QWORD PTR [rbp-0x10]
  407af2:	mov    rax,QWORD PTR [rax+0x30]
  407af6:	mov    ecx,DWORD PTR [rax+0x10]
  407af9:	mov    rax,QWORD PTR [rbp-0x10]
  407afd:	mov    DWORD PTR [rax+0x110],ecx
  407b03:	mov    rax,QWORD PTR [rbp-0x10]
  407b07:	mov    rax,QWORD PTR [rax+0x30]
  407b0b:	mov    dx,WORD PTR [rax+0x20]
  407b0f:	mov    rax,QWORD PTR [rbp-0x10]
  407b13:	mov    WORD PTR [rax+0x10c],dx
  407b1a:	mov    rdi,QWORD PTR [rbp-0x10]
  407b1e:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  407b23:	mov    ecx,DWORD PTR [rbp-0x18]
  407b26:	mov    DWORD PTR [rbp-0x4],ecx
  407b29:	mov    eax,DWORD PTR [rbp-0x4]
  407b2c:	add    rsp,0x20
  407b30:	pop    rbp
  407b31:	ret    
  407b32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b3c:	nop    DWORD PTR [rax+0x0]
  407b40:	push   rbp
  407b41:	mov    rbp,rsp
  407b44:	sub    rsp,0x10
  407b48:	xor    esi,esi
  407b4a:	mov    QWORD PTR [rbp-0x8],rdi
  407b4e:	mov    rax,QWORD PTR [rbp-0x8]
  407b52:	mov    rdi,QWORD PTR [rax+0x18]
  407b56:	mov    rax,QWORD PTR [rbp-0x8]
  407b5a:	mov    ecx,DWORD PTR [rax+0x20]
  407b5d:	mov    edx,ecx
  407b5f:	call   403080 <memset@plt>
  407b64:	mov    rax,QWORD PTR [rbp-0x8]
  407b68:	mov    rax,QWORD PTR [rax+0x30]
  407b6c:	mov    ecx,DWORD PTR [rax+0x8]
  407b6f:	mov    rax,QWORD PTR [rbp-0x8]
  407b73:	mov    DWORD PTR [rax+0x20],ecx
  407b76:	mov    rax,QWORD PTR [rbp-0x8]
  407b7a:	mov    rax,QWORD PTR [rax+0x30]
  407b7e:	mov    ecx,DWORD PTR [rax]
  407b80:	mov    rax,QWORD PTR [rbp-0x8]
  407b84:	mov    DWORD PTR [rax+0x28],ecx
  407b87:	mov    rdi,QWORD PTR [rbp-0x8]
  407b8b:	mov    rax,QWORD PTR [rbp-0x8]
  407b8f:	mov    rax,QWORD PTR [rax+0x30]
  407b93:	mov    esi,DWORD PTR [rax+0x4]
  407b96:	call   407c70 <flatcc_builder_start_struct@@Base+0x70>
  407b9b:	mov    rdi,QWORD PTR [rbp-0x8]
  407b9f:	mov    rax,QWORD PTR [rbp-0x8]
  407ba3:	movzx  esi,WORD PTR [rax+0xea]
  407baa:	call   4074d0 <flatcc_builder_create_buffer@@Base+0x420>
  407baf:	mov    rax,QWORD PTR [rbp-0x8]
  407bb3:	mov    rax,QWORD PTR [rax+0x30]
  407bb7:	mov    r8w,WORD PTR [rax+0xc]
  407bbc:	mov    rax,QWORD PTR [rbp-0x8]
  407bc0:	mov    WORD PTR [rax+0xea],r8w
  407bc8:	mov    rax,QWORD PTR [rbp-0x8]
  407bcc:	mov    rdx,QWORD PTR [rax+0x30]
  407bd0:	add    rdx,0xffffffffffffffdc
  407bd7:	mov    QWORD PTR [rax+0x30],rdx
  407bdb:	mov    rax,QWORD PTR [rbp-0x8]
  407bdf:	mov    ecx,DWORD PTR [rax+0x104]
  407be5:	add    ecx,0xffffffff
  407be8:	mov    DWORD PTR [rax+0x104],ecx
  407bee:	add    rsp,0x10
  407bf2:	pop    rbp
  407bf3:	ret    
  407bf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407bfe:	xchg   ax,ax

0000000000407c00 <flatcc_builder_start_struct@@Base>:
  407c00:	push   rbp
  407c01:	mov    rbp,rsp
  407c04:	sub    rsp,0x20
  407c08:	mov    QWORD PTR [rbp-0x10],rdi
  407c0c:	mov    QWORD PTR [rbp-0x18],rsi
  407c10:	mov    WORD PTR [rbp-0x1a],dx
  407c14:	mov    rdi,QWORD PTR [rbp-0x10]
  407c18:	movzx  esi,WORD PTR [rbp-0x1a]
  407c1c:	call   407820 <flatcc_builder_start_buffer@@Base+0x170>
  407c21:	cmp    eax,0x0
  407c24:	je     407c37 <flatcc_builder_start_struct@@Base+0x37>
  407c2a:	mov    QWORD PTR [rbp-0x8],0x0
  407c32:	jmp    407c66 <flatcc_builder_start_struct@@Base+0x66>
  407c37:	mov    rax,QWORD PTR [rbp-0x10]
  407c3b:	mov    rax,QWORD PTR [rax+0x30]
  407c3f:	mov    WORD PTR [rax+0xe],0x2
  407c45:	mov    rdi,QWORD PTR [rbp-0x10]
  407c49:	mov    esi,0xfffffffc
  407c4e:	call   407c70 <flatcc_builder_start_struct@@Base+0x70>
  407c53:	mov    rdi,QWORD PTR [rbp-0x10]
  407c57:	mov    rax,QWORD PTR [rbp-0x18]
  407c5b:	mov    esi,eax
  407c5d:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  407c62:	mov    QWORD PTR [rbp-0x8],rax
  407c66:	mov    rax,QWORD PTR [rbp-0x8]
  407c6a:	add    rsp,0x20
  407c6e:	pop    rbp
  407c6f:	ret    
  407c70:	push   rbp
  407c71:	mov    rbp,rsp
  407c74:	mov    QWORD PTR [rbp-0x8],rdi
  407c78:	mov    DWORD PTR [rbp-0xc],esi
  407c7b:	mov    rax,QWORD PTR [rbp-0x8]
  407c7f:	add    rax,0x58
  407c85:	add    rax,0x10
  407c8b:	mov    QWORD PTR [rbp-0x18],rax
  407c8f:	mov    rax,QWORD PTR [rbp-0x8]
  407c93:	mov    rax,QWORD PTR [rax+0x68]
  407c97:	mov    rcx,QWORD PTR [rbp-0x8]
  407c9b:	mov    edx,DWORD PTR [rcx+0x28]
  407c9e:	mov    ecx,edx
  407ca0:	add    rax,rcx
  407ca3:	mov    rcx,QWORD PTR [rbp-0x8]
  407ca7:	mov    QWORD PTR [rcx+0x18],rax
  407cab:	mov    rax,QWORD PTR [rbp-0x18]
  407caf:	mov    rax,QWORD PTR [rax+0x8]
  407cb3:	mov    rcx,QWORD PTR [rbp-0x8]
  407cb7:	sub    eax,DWORD PTR [rcx+0x28]
  407cba:	mov    rcx,QWORD PTR [rbp-0x8]
  407cbe:	mov    DWORD PTR [rcx+0x24],eax
  407cc1:	mov    rcx,QWORD PTR [rbp-0x8]
  407cc5:	mov    eax,DWORD PTR [rcx+0x24]
  407cc8:	cmp    eax,DWORD PTR [rbp-0xc]
  407ccb:	jbe    407cdb <flatcc_builder_start_struct@@Base+0xdb>
  407cd1:	mov    eax,DWORD PTR [rbp-0xc]
  407cd4:	mov    rcx,QWORD PTR [rbp-0x8]
  407cd8:	mov    DWORD PTR [rcx+0x24],eax
  407cdb:	mov    eax,DWORD PTR [rbp-0xc]
  407cde:	mov    rcx,QWORD PTR [rbp-0x8]
  407ce2:	mov    rcx,QWORD PTR [rcx+0x30]
  407ce6:	mov    DWORD PTR [rcx+0x4],eax
  407ce9:	pop    rbp
  407cea:	ret    
  407ceb:	nop    DWORD PTR [rax+rax*1+0x0]
  407cf0:	push   rbp
  407cf1:	mov    rbp,rsp
  407cf4:	sub    rsp,0x20
  407cf8:	mov    QWORD PTR [rbp-0x10],rdi
  407cfc:	mov    DWORD PTR [rbp-0x14],esi
  407cff:	mov    rax,QWORD PTR [rbp-0x10]
  407d03:	mov    ecx,DWORD PTR [rax+0x20]
  407d06:	mov    eax,ecx
  407d08:	mov    QWORD PTR [rbp-0x20],rax
  407d0c:	mov    ecx,DWORD PTR [rbp-0x14]
  407d0f:	mov    rax,QWORD PTR [rbp-0x10]
  407d13:	add    ecx,DWORD PTR [rax+0x20]
  407d16:	mov    DWORD PTR [rax+0x20],ecx
  407d19:	mov    rax,QWORD PTR [rbp-0x10]
  407d1d:	cmp    ecx,DWORD PTR [rax+0x24]
  407d20:	jb     407d5d <flatcc_builder_start_struct@@Base+0x15d>
  407d26:	mov    rdi,QWORD PTR [rbp-0x10]
  407d2a:	mov    rax,QWORD PTR [rbp-0x10]
  407d2e:	mov    ecx,DWORD PTR [rax+0x20]
  407d31:	add    ecx,0x1
  407d34:	mov    ecx,ecx
  407d36:	mov    esi,ecx
  407d38:	mov    edx,0xfffffffc
  407d3d:	call   40bcd0 <flatcc_builder_get_emit_context@@Base+0x50>
  407d42:	cmp    eax,0x0
  407d45:	je     407d58 <flatcc_builder_start_struct@@Base+0x158>
  407d4b:	mov    QWORD PTR [rbp-0x8],0x0
  407d53:	jmp    407d6d <flatcc_builder_start_struct@@Base+0x16d>
  407d58:	jmp    407d5d <flatcc_builder_start_struct@@Base+0x15d>
  407d5d:	mov    rax,QWORD PTR [rbp-0x10]
  407d61:	mov    rax,QWORD PTR [rax+0x18]
  407d65:	add    rax,QWORD PTR [rbp-0x20]
  407d69:	mov    QWORD PTR [rbp-0x8],rax
  407d6d:	mov    rax,QWORD PTR [rbp-0x8]
  407d71:	add    rsp,0x20
  407d75:	pop    rbp
  407d76:	ret    
  407d77:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407d80 <flatcc_builder_struct_edit@@Base>:
  407d80:	push   rbp
  407d81:	mov    rbp,rsp
  407d84:	mov    QWORD PTR [rbp-0x8],rdi
  407d88:	mov    rax,QWORD PTR [rbp-0x8]
  407d8c:	mov    rax,QWORD PTR [rax+0x18]
  407d90:	pop    rbp
  407d91:	ret    
  407d92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407d9c:	nop    DWORD PTR [rax+0x0]

0000000000407da0 <flatcc_builder_end_struct@@Base>:
  407da0:	push   rbp
  407da1:	mov    rbp,rsp
  407da4:	sub    rsp,0x20
  407da8:	mov    QWORD PTR [rbp-0x10],rdi
  407dac:	mov    rax,QWORD PTR [rbp-0x10]
  407db0:	mov    rax,QWORD PTR [rax+0x30]
  407db4:	movzx  ecx,WORD PTR [rax+0xe]
  407db8:	cmp    ecx,0x2
  407dbb:	jne    407dc6 <flatcc_builder_end_struct@@Base+0x26>
  407dc1:	jmp    407de5 <flatcc_builder_end_struct@@Base+0x45>
  407dc6:	lea    rdi,[rip+0x6073]        # 40de40 <flatcc_builder_padding_base@@Base+0x4e0>
  407dcd:	lea    rsi,[rip+0x5d9e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407dd4:	mov    edx,0x368
  407dd9:	lea    rcx,[rip+0x608c]        # 40de6c <flatcc_builder_padding_base@@Base+0x50c>
  407de0:	call   403070 <__assert_fail@plt>
  407de5:	mov    rdi,QWORD PTR [rbp-0x10]
  407de9:	mov    rax,QWORD PTR [rbp-0x10]
  407ded:	mov    rsi,QWORD PTR [rax+0x18]
  407df1:	mov    rax,QWORD PTR [rbp-0x10]
  407df5:	mov    ecx,DWORD PTR [rax+0x20]
  407df8:	mov    edx,ecx
  407dfa:	mov    rax,QWORD PTR [rbp-0x10]
  407dfe:	movzx  ecx,WORD PTR [rax+0xea]
  407e05:	call   407520 <flatcc_builder_create_struct@@Base>
  407e0a:	xor    ecx,ecx
  407e0c:	mov    DWORD PTR [rbp-0x14],eax
  407e0f:	cmp    ecx,eax
  407e11:	jne    407e23 <flatcc_builder_end_struct@@Base+0x83>
  407e17:	mov    DWORD PTR [rbp-0x4],0x0
  407e1e:	jmp    407e32 <flatcc_builder_end_struct@@Base+0x92>
  407e23:	mov    rdi,QWORD PTR [rbp-0x10]
  407e27:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  407e2c:	mov    eax,DWORD PTR [rbp-0x14]
  407e2f:	mov    DWORD PTR [rbp-0x4],eax
  407e32:	mov    eax,DWORD PTR [rbp-0x4]
  407e35:	add    rsp,0x20
  407e39:	pop    rbp
  407e3a:	ret    
  407e3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407e40 <flatcc_builder_extend_vector@@Base>:
  407e40:	push   rbp
  407e41:	mov    rbp,rsp
  407e44:	sub    rsp,0x20
  407e48:	mov    QWORD PTR [rbp-0x10],rdi
  407e4c:	mov    QWORD PTR [rbp-0x18],rsi
  407e50:	mov    rdi,QWORD PTR [rbp-0x10]
  407e54:	mov    rax,QWORD PTR [rbp-0x18]
  407e58:	mov    rcx,QWORD PTR [rbp-0x10]
  407e5c:	mov    rcx,QWORD PTR [rcx+0x30]
  407e60:	mov    edx,DWORD PTR [rcx+0x18]
  407e63:	mov    esi,eax
  407e65:	call   407eb0 <flatcc_builder_extend_vector@@Base+0x70>
  407e6a:	cmp    eax,0x0
  407e6d:	je     407e80 <flatcc_builder_extend_vector@@Base+0x40>
  407e73:	mov    QWORD PTR [rbp-0x8],0x0
  407e7b:	jmp    407ea1 <flatcc_builder_extend_vector@@Base+0x61>
  407e80:	mov    rdi,QWORD PTR [rbp-0x10]
  407e84:	mov    rax,QWORD PTR [rbp-0x10]
  407e88:	mov    rax,QWORD PTR [rax+0x30]
  407e8c:	mov    ecx,DWORD PTR [rax+0x10]
  407e8f:	mov    rax,QWORD PTR [rbp-0x18]
  407e93:	imul   ecx,eax
  407e96:	mov    esi,ecx
  407e98:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  407e9d:	mov    QWORD PTR [rbp-0x8],rax
  407ea1:	mov    rax,QWORD PTR [rbp-0x8]
  407ea5:	add    rsp,0x20
  407ea9:	pop    rbp
  407eaa:	ret    
  407eab:	nop    DWORD PTR [rax+rax*1+0x0]
  407eb0:	push   rbp
  407eb1:	mov    rbp,rsp
  407eb4:	sub    rsp,0x20
  407eb8:	mov    QWORD PTR [rbp-0x10],rdi
  407ebc:	mov    DWORD PTR [rbp-0x14],esi
  407ebf:	mov    DWORD PTR [rbp-0x18],edx
  407ec2:	mov    rax,QWORD PTR [rbp-0x10]
  407ec6:	mov    rax,QWORD PTR [rax+0x30]
  407eca:	mov    ecx,DWORD PTR [rax+0x14]
  407ecd:	mov    DWORD PTR [rbp-0x1c],ecx
  407ed0:	mov    ecx,DWORD PTR [rbp-0x1c]
  407ed3:	add    ecx,DWORD PTR [rbp-0x14]
  407ed6:	mov    DWORD PTR [rbp-0x20],ecx
  407ed9:	mov    ecx,DWORD PTR [rbp-0x1c]
  407edc:	cmp    ecx,DWORD PTR [rbp-0x20]
  407edf:	ja     407ef1 <flatcc_builder_extend_vector@@Base+0xb1>
  407ee5:	mov    eax,DWORD PTR [rbp-0x20]
  407ee8:	cmp    eax,DWORD PTR [rbp-0x18]
  407eeb:	jbe    407f39 <flatcc_builder_extend_vector@@Base+0xf9>
  407ef1:	mov    eax,DWORD PTR [rbp-0x1c]
  407ef4:	cmp    eax,DWORD PTR [rbp-0x20]
  407ef7:	ja     407f0e <flatcc_builder_extend_vector@@Base+0xce>
  407efd:	mov    eax,DWORD PTR [rbp-0x20]
  407f00:	cmp    eax,DWORD PTR [rbp-0x18]
  407f03:	ja     407f0e <flatcc_builder_extend_vector@@Base+0xce>
  407f09:	jmp    407f2d <flatcc_builder_extend_vector@@Base+0xed>
  407f0e:	lea    rdi,[rip+0x6d26]        # 40ec3b <flatcc_builder_padding_base@@Base+0x12db>
  407f15:	lea    rsi,[rip+0x5c56]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407f1c:	mov    edx,0x37c
  407f21:	lea    rcx,[rip+0x6d2e]        # 40ec56 <flatcc_builder_padding_base@@Base+0x12f6>
  407f28:	call   403070 <__assert_fail@plt>
  407f2d:	mov    DWORD PTR [rbp-0x4],0xffffffff
  407f34:	jmp    407f4e <flatcc_builder_extend_vector@@Base+0x10e>
  407f39:	mov    eax,DWORD PTR [rbp-0x20]
  407f3c:	mov    rcx,QWORD PTR [rbp-0x10]
  407f40:	mov    rcx,QWORD PTR [rcx+0x30]
  407f44:	mov    DWORD PTR [rcx+0x14],eax
  407f47:	mov    DWORD PTR [rbp-0x4],0x0
  407f4e:	mov    eax,DWORD PTR [rbp-0x4]
  407f51:	add    rsp,0x20
  407f55:	pop    rbp
  407f56:	ret    
  407f57:	nop    WORD PTR [rax+rax*1+0x0]

0000000000407f60 <flatcc_builder_vector_push@@Base>:
  407f60:	push   rbp
  407f61:	mov    rbp,rsp
  407f64:	sub    rsp,0x20
  407f68:	mov    QWORD PTR [rbp-0x10],rdi
  407f6c:	mov    QWORD PTR [rbp-0x18],rsi
  407f70:	mov    rax,QWORD PTR [rbp-0x10]
  407f74:	mov    rax,QWORD PTR [rax+0x30]
  407f78:	movzx  ecx,WORD PTR [rax+0xe]
  407f7c:	cmp    ecx,0x4
  407f7f:	jne    407f8a <flatcc_builder_vector_push@@Base+0x2a>
  407f85:	jmp    407fa9 <flatcc_builder_vector_push@@Base+0x49>
  407f8a:	lea    rdi,[rip+0x5f1e]        # 40deaf <flatcc_builder_padding_base@@Base+0x54f>
  407f91:	lea    rsi,[rip+0x5bda]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407f98:	mov    edx,0x38b
  407f9d:	lea    rcx,[rip+0x5f37]        # 40dedb <flatcc_builder_padding_base@@Base+0x57b>
  407fa4:	call   403070 <__assert_fail@plt>
  407fa9:	mov    rax,QWORD PTR [rbp-0x10]
  407fad:	mov    rax,QWORD PTR [rax+0x30]
  407fb1:	mov    ecx,DWORD PTR [rax+0x14]
  407fb4:	mov    rax,QWORD PTR [rbp-0x10]
  407fb8:	mov    rax,QWORD PTR [rax+0x30]
  407fbc:	cmp    ecx,DWORD PTR [rax+0x18]
  407fbf:	jbe    408012 <flatcc_builder_vector_push@@Base+0xb2>
  407fc5:	mov    rax,QWORD PTR [rbp-0x10]
  407fc9:	mov    rax,QWORD PTR [rax+0x30]
  407fcd:	mov    ecx,DWORD PTR [rax+0x14]
  407fd0:	mov    rax,QWORD PTR [rbp-0x10]
  407fd4:	mov    rax,QWORD PTR [rax+0x30]
  407fd8:	cmp    ecx,DWORD PTR [rax+0x18]
  407fdb:	ja     407fe6 <flatcc_builder_vector_push@@Base+0x86>
  407fe1:	jmp    408005 <flatcc_builder_vector_push@@Base+0xa5>
  407fe6:	lea    rdi,[rip+0x5f31]        # 40df1e <flatcc_builder_padding_base@@Base+0x5be>
  407fed:	lea    rsi,[rip+0x5b7e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  407ff4:	mov    edx,0x38c
  407ff9:	lea    rcx,[rip+0x5edb]        # 40dedb <flatcc_builder_padding_base@@Base+0x57b>
  408000:	call   403070 <__assert_fail@plt>
  408005:	mov    QWORD PTR [rbp-0x8],0x0
  40800d:	jmp    40803f <flatcc_builder_vector_push@@Base+0xdf>
  408012:	mov    rax,QWORD PTR [rbp-0x10]
  408016:	mov    rax,QWORD PTR [rax+0x30]
  40801a:	mov    ecx,DWORD PTR [rax+0x14]
  40801d:	add    ecx,0x1
  408020:	mov    DWORD PTR [rax+0x14],ecx
  408023:	mov    rdi,QWORD PTR [rbp-0x10]
  408027:	mov    rsi,QWORD PTR [rbp-0x18]
  40802b:	mov    rax,QWORD PTR [rbp-0x10]
  40802f:	mov    rax,QWORD PTR [rax+0x30]
  408033:	mov    edx,DWORD PTR [rax+0x10]
  408036:	call   408050 <flatcc_builder_vector_push@@Base+0xf0>
  40803b:	mov    QWORD PTR [rbp-0x8],rax
  40803f:	mov    rax,QWORD PTR [rbp-0x8]
  408043:	add    rsp,0x20
  408047:	pop    rbp
  408048:	ret    
  408049:	nop    DWORD PTR [rax+0x0]
  408050:	push   rbp
  408051:	mov    rbp,rsp
  408054:	sub    rsp,0x30
  408058:	mov    QWORD PTR [rbp-0x10],rdi
  40805c:	mov    QWORD PTR [rbp-0x18],rsi
  408060:	mov    DWORD PTR [rbp-0x1c],edx
  408063:	mov    rdi,QWORD PTR [rbp-0x10]
  408067:	mov    esi,DWORD PTR [rbp-0x1c]
  40806a:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  40806f:	mov    QWORD PTR [rbp-0x28],rax
  408073:	cmp    rax,0x0
  408077:	jne    40808a <flatcc_builder_vector_push@@Base+0x12a>
  40807d:	mov    QWORD PTR [rbp-0x8],0x0
  408085:	jmp    4080a4 <flatcc_builder_vector_push@@Base+0x144>
  40808a:	mov    rdi,QWORD PTR [rbp-0x28]
  40808e:	mov    rsi,QWORD PTR [rbp-0x18]
  408092:	mov    eax,DWORD PTR [rbp-0x1c]
  408095:	mov    edx,eax
  408097:	call   4030c0 <memcpy@plt>
  40809c:	mov    rcx,QWORD PTR [rbp-0x28]
  4080a0:	mov    QWORD PTR [rbp-0x8],rcx
  4080a4:	mov    rax,QWORD PTR [rbp-0x8]
  4080a8:	add    rsp,0x30
  4080ac:	pop    rbp
  4080ad:	ret    
  4080ae:	xchg   ax,ax

00000000004080b0 <flatcc_builder_append_vector@@Base>:
  4080b0:	push   rbp
  4080b1:	mov    rbp,rsp
  4080b4:	sub    rsp,0x20
  4080b8:	mov    QWORD PTR [rbp-0x10],rdi
  4080bc:	mov    QWORD PTR [rbp-0x18],rsi
  4080c0:	mov    QWORD PTR [rbp-0x20],rdx
  4080c4:	mov    rax,QWORD PTR [rbp-0x10]
  4080c8:	mov    rax,QWORD PTR [rax+0x30]
  4080cc:	movzx  ecx,WORD PTR [rax+0xe]
  4080d0:	cmp    ecx,0x4
  4080d3:	jne    4080de <flatcc_builder_append_vector@@Base+0x2e>
  4080d9:	jmp    4080fd <flatcc_builder_append_vector@@Base+0x4d>
  4080de:	lea    rdi,[rip+0x5dca]        # 40deaf <flatcc_builder_padding_base@@Base+0x54f>
  4080e5:	lea    rsi,[rip+0x5a86]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4080ec:	mov    edx,0x393
  4080f1:	lea    rcx,[rip+0x5e63]        # 40df5b <flatcc_builder_padding_base@@Base+0x5fb>
  4080f8:	call   403070 <__assert_fail@plt>
  4080fd:	mov    rdi,QWORD PTR [rbp-0x10]
  408101:	mov    rax,QWORD PTR [rbp-0x20]
  408105:	mov    rcx,QWORD PTR [rbp-0x10]
  408109:	mov    rcx,QWORD PTR [rcx+0x30]
  40810d:	mov    edx,DWORD PTR [rcx+0x18]
  408110:	mov    esi,eax
  408112:	call   407eb0 <flatcc_builder_extend_vector@@Base+0x70>
  408117:	cmp    eax,0x0
  40811a:	je     40812d <flatcc_builder_append_vector@@Base+0x7d>
  408120:	mov    QWORD PTR [rbp-0x8],0x0
  408128:	jmp    408152 <flatcc_builder_append_vector@@Base+0xa2>
  40812d:	mov    rdi,QWORD PTR [rbp-0x10]
  408131:	mov    rsi,QWORD PTR [rbp-0x18]
  408135:	mov    rax,QWORD PTR [rbp-0x10]
  408139:	mov    rax,QWORD PTR [rax+0x30]
  40813d:	mov    ecx,DWORD PTR [rax+0x10]
  408140:	mov    rax,QWORD PTR [rbp-0x20]
  408144:	imul   ecx,eax
  408147:	mov    edx,ecx
  408149:	call   408050 <flatcc_builder_vector_push@@Base+0xf0>
  40814e:	mov    QWORD PTR [rbp-0x8],rax
  408152:	mov    rax,QWORD PTR [rbp-0x8]
  408156:	add    rsp,0x20
  40815a:	pop    rbp
  40815b:	ret    
  40815c:	nop    DWORD PTR [rax+0x0]

0000000000408160 <flatcc_builder_extend_offset_vector@@Base>:
  408160:	push   rbp
  408161:	mov    rbp,rsp
  408164:	sub    rsp,0x20
  408168:	mov    QWORD PTR [rbp-0x10],rdi
  40816c:	mov    QWORD PTR [rbp-0x18],rsi
  408170:	mov    rdi,QWORD PTR [rbp-0x10]
  408174:	mov    rax,QWORD PTR [rbp-0x18]
  408178:	mov    esi,eax
  40817a:	mov    edx,0x3fffffff
  40817f:	call   407eb0 <flatcc_builder_extend_vector@@Base+0x70>
  408184:	cmp    eax,0x0
  408187:	je     40819a <flatcc_builder_extend_offset_vector@@Base+0x3a>
  40818d:	mov    QWORD PTR [rbp-0x8],0x0
  408195:	jmp    4081b5 <flatcc_builder_extend_offset_vector@@Base+0x55>
  40819a:	mov    rdi,QWORD PTR [rbp-0x10]
  40819e:	mov    rax,QWORD PTR [rbp-0x18]
  4081a2:	mov    eax,eax
  4081a4:	mov    ecx,eax
  4081a6:	shl    rcx,0x2
  4081aa:	mov    esi,ecx
  4081ac:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  4081b1:	mov    QWORD PTR [rbp-0x8],rax
  4081b5:	mov    rax,QWORD PTR [rbp-0x8]
  4081b9:	add    rsp,0x20
  4081bd:	pop    rbp
  4081be:	ret    
  4081bf:	nop

00000000004081c0 <flatcc_builder_offset_vector_push@@Base>:
  4081c0:	push   rbp
  4081c1:	mov    rbp,rsp
  4081c4:	sub    rsp,0x20
  4081c8:	mov    QWORD PTR [rbp-0x10],rdi
  4081cc:	mov    DWORD PTR [rbp-0x14],esi
  4081cf:	mov    rax,QWORD PTR [rbp-0x10]
  4081d3:	mov    rax,QWORD PTR [rax+0x30]
  4081d7:	movzx  ecx,WORD PTR [rax+0xe]
  4081db:	cmp    ecx,0x5
  4081de:	jne    4081e9 <flatcc_builder_offset_vector_push@@Base+0x29>
  4081e4:	jmp    408208 <flatcc_builder_offset_vector_push@@Base+0x48>
  4081e9:	lea    rdi,[rip+0x5db8]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  4081f0:	lea    rsi,[rip+0x597b]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4081f7:	mov    edx,0x3a6
  4081fc:	lea    rcx,[rip+0x5dd8]        # 40dfdb <flatcc_builder_padding_base@@Base+0x67b>
  408203:	call   403070 <__assert_fail@plt>
  408208:	mov    rax,QWORD PTR [rbp-0x10]
  40820c:	mov    rax,QWORD PTR [rax+0x30]
  408210:	mov    ecx,DWORD PTR [rax+0x14]
  408213:	mov    eax,ecx
  408215:	cmp    rax,0x3fffffff
  40821b:	jne    40822e <flatcc_builder_offset_vector_push@@Base+0x6e>
  408221:	mov    QWORD PTR [rbp-0x8],0x0
  408229:	jmp    40827c <flatcc_builder_offset_vector_push@@Base+0xbc>
  40822e:	mov    rax,QWORD PTR [rbp-0x10]
  408232:	mov    rax,QWORD PTR [rax+0x30]
  408236:	mov    ecx,DWORD PTR [rax+0x14]
  408239:	add    ecx,0x1
  40823c:	mov    DWORD PTR [rax+0x14],ecx
  40823f:	mov    rdi,QWORD PTR [rbp-0x10]
  408243:	mov    esi,0x4
  408248:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  40824d:	xor    ecx,ecx
  40824f:	mov    edx,ecx
  408251:	mov    QWORD PTR [rbp-0x20],rax
  408255:	cmp    rdx,rax
  408258:	jne    40826b <flatcc_builder_offset_vector_push@@Base+0xab>
  40825e:	mov    QWORD PTR [rbp-0x8],0x0
  408266:	jmp    40827c <flatcc_builder_offset_vector_push@@Base+0xbc>
  40826b:	mov    eax,DWORD PTR [rbp-0x14]
  40826e:	mov    rcx,QWORD PTR [rbp-0x20]
  408272:	mov    DWORD PTR [rcx],eax
  408274:	mov    rcx,QWORD PTR [rbp-0x20]
  408278:	mov    QWORD PTR [rbp-0x8],rcx
  40827c:	mov    rax,QWORD PTR [rbp-0x8]
  408280:	add    rsp,0x20
  408284:	pop    rbp
  408285:	ret    
  408286:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000408290 <flatcc_builder_append_offset_vector@@Base>:
  408290:	push   rbp
  408291:	mov    rbp,rsp
  408294:	sub    rsp,0x20
  408298:	mov    QWORD PTR [rbp-0x10],rdi
  40829c:	mov    QWORD PTR [rbp-0x18],rsi
  4082a0:	mov    QWORD PTR [rbp-0x20],rdx
  4082a4:	mov    rax,QWORD PTR [rbp-0x10]
  4082a8:	mov    rax,QWORD PTR [rax+0x30]
  4082ac:	movzx  ecx,WORD PTR [rax+0xe]
  4082b0:	cmp    ecx,0x5
  4082b3:	jne    4082be <flatcc_builder_append_offset_vector@@Base+0x2e>
  4082b9:	jmp    4082dd <flatcc_builder_append_offset_vector@@Base+0x4d>
  4082be:	lea    rdi,[rip+0x5ce3]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  4082c5:	lea    rsi,[rip+0x58a6]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4082cc:	mov    edx,0x3b4
  4082d1:	lea    rcx,[rip+0x5d65]        # 40e03d <flatcc_builder_padding_base@@Base+0x6dd>
  4082d8:	call   403070 <__assert_fail@plt>
  4082dd:	mov    rdi,QWORD PTR [rbp-0x10]
  4082e1:	mov    rax,QWORD PTR [rbp-0x20]
  4082e5:	mov    esi,eax
  4082e7:	mov    edx,0x3fffffff
  4082ec:	call   407eb0 <flatcc_builder_extend_vector@@Base+0x70>
  4082f1:	cmp    eax,0x0
  4082f4:	je     408307 <flatcc_builder_append_offset_vector@@Base+0x77>
  4082fa:	mov    QWORD PTR [rbp-0x8],0x0
  408302:	jmp    408327 <flatcc_builder_append_offset_vector@@Base+0x97>
  408307:	mov    rdi,QWORD PTR [rbp-0x10]
  40830b:	mov    rax,QWORD PTR [rbp-0x18]
  40830f:	mov    rcx,QWORD PTR [rbp-0x20]
  408313:	mov    ecx,ecx
  408315:	mov    edx,ecx
  408317:	shl    rdx,0x2
  40831b:	mov    rsi,rax
  40831e:	call   408050 <flatcc_builder_vector_push@@Base+0xf0>
  408323:	mov    QWORD PTR [rbp-0x8],rax
  408327:	mov    rax,QWORD PTR [rbp-0x8]
  40832b:	add    rsp,0x20
  40832f:	pop    rbp
  408330:	ret    
  408331:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40833b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408340 <flatcc_builder_extend_string@@Base>:
  408340:	push   rbp
  408341:	mov    rbp,rsp
  408344:	sub    rsp,0x20
  408348:	mov    QWORD PTR [rbp-0x10],rdi
  40834c:	mov    QWORD PTR [rbp-0x18],rsi
  408350:	mov    rax,QWORD PTR [rbp-0x10]
  408354:	mov    rax,QWORD PTR [rax+0x30]
  408358:	movzx  ecx,WORD PTR [rax+0xe]
  40835c:	cmp    ecx,0x6
  40835f:	jne    40836a <flatcc_builder_extend_string@@Base+0x2a>
  408365:	jmp    408389 <flatcc_builder_extend_string@@Base+0x49>
  40836a:	lea    rdi,[rip+0x5d40]        # 40e0b1 <flatcc_builder_padding_base@@Base+0x751>
  408371:	lea    rsi,[rip+0x57fa]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408378:	mov    edx,0x3bd
  40837d:	lea    rcx,[rip+0x5d59]        # 40e0dd <flatcc_builder_padding_base@@Base+0x77d>
  408384:	call   403070 <__assert_fail@plt>
  408389:	mov    rdi,QWORD PTR [rbp-0x10]
  40838d:	mov    rax,QWORD PTR [rbp-0x18]
  408391:	mov    esi,eax
  408393:	mov    edx,0xffffffff
  408398:	call   407eb0 <flatcc_builder_extend_vector@@Base+0x70>
  40839d:	cmp    eax,0x0
  4083a0:	je     4083b3 <flatcc_builder_extend_string@@Base+0x73>
  4083a6:	mov    QWORD PTR [rbp-0x8],0x0
  4083ae:	jmp    4083c6 <flatcc_builder_extend_string@@Base+0x86>
  4083b3:	mov    rdi,QWORD PTR [rbp-0x10]
  4083b7:	mov    rax,QWORD PTR [rbp-0x18]
  4083bb:	mov    esi,eax
  4083bd:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  4083c2:	mov    QWORD PTR [rbp-0x8],rax
  4083c6:	mov    rax,QWORD PTR [rbp-0x8]
  4083ca:	add    rsp,0x20
  4083ce:	pop    rbp
  4083cf:	ret    

00000000004083d0 <flatcc_builder_append_string@@Base>:
  4083d0:	push   rbp
  4083d1:	mov    rbp,rsp
  4083d4:	sub    rsp,0x20
  4083d8:	mov    QWORD PTR [rbp-0x10],rdi
  4083dc:	mov    QWORD PTR [rbp-0x18],rsi
  4083e0:	mov    QWORD PTR [rbp-0x20],rdx
  4083e4:	mov    rax,QWORD PTR [rbp-0x10]
  4083e8:	mov    rax,QWORD PTR [rax+0x30]
  4083ec:	movzx  ecx,WORD PTR [rax+0xe]
  4083f0:	cmp    ecx,0x6
  4083f3:	jne    4083fe <flatcc_builder_append_string@@Base+0x2e>
  4083f9:	jmp    40841d <flatcc_builder_append_string@@Base+0x4d>
  4083fe:	lea    rdi,[rip+0x5cac]        # 40e0b1 <flatcc_builder_padding_base@@Base+0x751>
  408405:	lea    rsi,[rip+0x5766]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40840c:	mov    edx,0x3c6
  408411:	lea    rcx,[rip+0x5d04]        # 40e11c <flatcc_builder_padding_base@@Base+0x7bc>
  408418:	call   403070 <__assert_fail@plt>
  40841d:	mov    rdi,QWORD PTR [rbp-0x10]
  408421:	mov    rax,QWORD PTR [rbp-0x20]
  408425:	mov    esi,eax
  408427:	mov    edx,0xffffffff
  40842c:	call   407eb0 <flatcc_builder_extend_vector@@Base+0x70>
  408431:	cmp    eax,0x0
  408434:	je     408447 <flatcc_builder_append_string@@Base+0x77>
  40843a:	mov    QWORD PTR [rbp-0x8],0x0
  408442:	jmp    40845e <flatcc_builder_append_string@@Base+0x8e>
  408447:	mov    rdi,QWORD PTR [rbp-0x10]
  40844b:	mov    rsi,QWORD PTR [rbp-0x18]
  40844f:	mov    rax,QWORD PTR [rbp-0x20]
  408453:	mov    edx,eax
  408455:	call   408050 <flatcc_builder_vector_push@@Base+0xf0>
  40845a:	mov    QWORD PTR [rbp-0x8],rax
  40845e:	mov    rax,QWORD PTR [rbp-0x8]
  408462:	add    rsp,0x20
  408466:	pop    rbp
  408467:	ret    
  408468:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000408470 <flatcc_builder_append_string_str@@Base>:
  408470:	push   rbp
  408471:	mov    rbp,rsp
  408474:	sub    rsp,0x20
  408478:	mov    QWORD PTR [rbp-0x8],rdi
  40847c:	mov    QWORD PTR [rbp-0x10],rsi
  408480:	mov    rdi,QWORD PTR [rbp-0x8]
  408484:	mov    rsi,QWORD PTR [rbp-0x10]
  408488:	mov    rax,QWORD PTR [rbp-0x10]
  40848c:	mov    QWORD PTR [rbp-0x18],rdi
  408490:	mov    rdi,rax
  408493:	mov    QWORD PTR [rbp-0x20],rsi
  408497:	call   403050 <strlen@plt>
  40849c:	mov    rdi,QWORD PTR [rbp-0x18]
  4084a0:	mov    rsi,QWORD PTR [rbp-0x20]
  4084a4:	mov    rdx,rax
  4084a7:	call   4083d0 <flatcc_builder_append_string@@Base>
  4084ac:	add    rsp,0x20
  4084b0:	pop    rbp
  4084b1:	ret    
  4084b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084bc:	nop    DWORD PTR [rax+0x0]

00000000004084c0 <flatcc_builder_append_string_strn@@Base>:
  4084c0:	push   rbp
  4084c1:	mov    rbp,rsp
  4084c4:	sub    rsp,0x30
  4084c8:	mov    QWORD PTR [rbp-0x8],rdi
  4084cc:	mov    QWORD PTR [rbp-0x10],rsi
  4084d0:	mov    QWORD PTR [rbp-0x18],rdx
  4084d4:	mov    rdi,QWORD PTR [rbp-0x8]
  4084d8:	mov    rsi,QWORD PTR [rbp-0x10]
  4084dc:	mov    rax,QWORD PTR [rbp-0x10]
  4084e0:	mov    rcx,QWORD PTR [rbp-0x18]
  4084e4:	mov    QWORD PTR [rbp-0x20],rdi
  4084e8:	mov    rdi,rax
  4084eb:	mov    QWORD PTR [rbp-0x28],rsi
  4084ef:	mov    rsi,rcx
  4084f2:	call   408510 <flatcc_builder_append_string_strn@@Base+0x50>
  4084f7:	mov    rdi,QWORD PTR [rbp-0x20]
  4084fb:	mov    rsi,QWORD PTR [rbp-0x28]
  4084ff:	mov    rdx,rax
  408502:	call   4083d0 <flatcc_builder_append_string@@Base>
  408507:	add    rsp,0x30
  40850b:	pop    rbp
  40850c:	ret    
  40850d:	nop    DWORD PTR [rax]
  408510:	push   rbp
  408511:	mov    rbp,rsp
  408514:	sub    rsp,0x20
  408518:	mov    QWORD PTR [rbp-0x8],rdi
  40851c:	mov    QWORD PTR [rbp-0x10],rsi
  408520:	mov    rdi,QWORD PTR [rbp-0x8]
  408524:	mov    rdx,QWORD PTR [rbp-0x10]
  408528:	xor    esi,esi
  40852a:	call   403090 <memchr@plt>
  40852f:	mov    QWORD PTR [rbp-0x18],rax
  408533:	cmp    QWORD PTR [rbp-0x18],0x0
  408538:	je     408552 <flatcc_builder_append_string_strn@@Base+0x92>
  40853e:	mov    rax,QWORD PTR [rbp-0x18]
  408542:	mov    rcx,QWORD PTR [rbp-0x8]
  408546:	sub    rax,rcx
  408549:	mov    QWORD PTR [rbp-0x20],rax
  40854d:	jmp    40855a <flatcc_builder_append_string_strn@@Base+0x9a>
  408552:	mov    rax,QWORD PTR [rbp-0x10]
  408556:	mov    QWORD PTR [rbp-0x20],rax
  40855a:	mov    rax,QWORD PTR [rbp-0x20]
  40855e:	add    rsp,0x20
  408562:	pop    rbp
  408563:	ret    
  408564:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40856e:	xchg   ax,ax

0000000000408570 <flatcc_builder_truncate_vector@@Base>:
  408570:	push   rbp
  408571:	mov    rbp,rsp
  408574:	sub    rsp,0x20
  408578:	mov    QWORD PTR [rbp-0x10],rdi
  40857c:	mov    QWORD PTR [rbp-0x18],rsi
  408580:	mov    rax,QWORD PTR [rbp-0x10]
  408584:	mov    rax,QWORD PTR [rax+0x30]
  408588:	movzx  ecx,WORD PTR [rax+0xe]
  40858c:	cmp    ecx,0x4
  40858f:	jne    40859a <flatcc_builder_truncate_vector@@Base+0x2a>
  408595:	jmp    4085b9 <flatcc_builder_truncate_vector@@Base+0x49>
  40859a:	lea    rdi,[rip+0x590e]        # 40deaf <flatcc_builder_padding_base@@Base+0x54f>
  4085a1:	lea    rsi,[rip+0x55ca]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4085a8:	mov    edx,0x3d9
  4085ad:	lea    rcx,[rip+0x5bb5]        # 40e169 <flatcc_builder_padding_base@@Base+0x809>
  4085b4:	call   403070 <__assert_fail@plt>
  4085b9:	mov    rax,QWORD PTR [rbp-0x10]
  4085bd:	mov    rax,QWORD PTR [rax+0x30]
  4085c1:	mov    ecx,DWORD PTR [rax+0x14]
  4085c4:	mov    eax,ecx
  4085c6:	cmp    rax,QWORD PTR [rbp-0x18]
  4085ca:	jae    408617 <flatcc_builder_truncate_vector@@Base+0xa7>
  4085d0:	mov    rax,QWORD PTR [rbp-0x10]
  4085d4:	mov    rax,QWORD PTR [rax+0x30]
  4085d8:	mov    ecx,DWORD PTR [rax+0x14]
  4085db:	mov    eax,ecx
  4085dd:	cmp    rax,QWORD PTR [rbp-0x18]
  4085e1:	jb     4085ec <flatcc_builder_truncate_vector@@Base+0x7c>
  4085e7:	jmp    40860b <flatcc_builder_truncate_vector@@Base+0x9b>
  4085ec:	lea    rdi,[rip+0x5bb5]        # 40e1a8 <flatcc_builder_padding_base@@Base+0x848>
  4085f3:	lea    rsi,[rip+0x5578]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4085fa:	mov    edx,0x3da
  4085ff:	lea    rcx,[rip+0x5b63]        # 40e169 <flatcc_builder_padding_base@@Base+0x809>
  408606:	call   403070 <__assert_fail@plt>
  40860b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408612:	jmp    40864f <flatcc_builder_truncate_vector@@Base+0xdf>
  408617:	mov    rax,QWORD PTR [rbp-0x18]
  40861b:	mov    rcx,QWORD PTR [rbp-0x10]
  40861f:	mov    rcx,QWORD PTR [rcx+0x30]
  408623:	mov    edx,DWORD PTR [rcx+0x14]
  408626:	sub    edx,eax
  408628:	mov    DWORD PTR [rcx+0x14],edx
  40862b:	mov    rdi,QWORD PTR [rbp-0x10]
  40862f:	mov    rcx,QWORD PTR [rbp-0x10]
  408633:	mov    rcx,QWORD PTR [rcx+0x30]
  408637:	mov    eax,DWORD PTR [rcx+0x10]
  40863a:	mov    rcx,QWORD PTR [rbp-0x18]
  40863e:	imul   eax,ecx
  408641:	mov    esi,eax
  408643:	call   408660 <flatcc_builder_truncate_vector@@Base+0xf0>
  408648:	mov    DWORD PTR [rbp-0x4],0x0
  40864f:	mov    eax,DWORD PTR [rbp-0x4]
  408652:	add    rsp,0x20
  408656:	pop    rbp
  408657:	ret    
  408658:	nop    DWORD PTR [rax+rax*1+0x0]
  408660:	push   rbp
  408661:	mov    rbp,rsp
  408664:	sub    rsp,0x20
  408668:	xor    eax,eax
  40866a:	mov    QWORD PTR [rbp-0x8],rdi
  40866e:	mov    DWORD PTR [rbp-0xc],esi
  408671:	mov    ecx,DWORD PTR [rbp-0xc]
  408674:	mov    rdx,QWORD PTR [rbp-0x8]
  408678:	mov    esi,DWORD PTR [rdx+0x20]
  40867b:	sub    esi,ecx
  40867d:	mov    DWORD PTR [rdx+0x20],esi
  408680:	mov    rdx,QWORD PTR [rbp-0x8]
  408684:	mov    rdx,QWORD PTR [rdx+0x18]
  408688:	mov    rdi,QWORD PTR [rbp-0x8]
  40868c:	mov    ecx,DWORD PTR [rdi+0x20]
  40868f:	mov    edi,ecx
  408691:	add    rdx,rdi
  408694:	mov    ecx,DWORD PTR [rbp-0xc]
  408697:	mov    edi,ecx
  408699:	mov    QWORD PTR [rbp-0x18],rdi
  40869d:	mov    rdi,rdx
  4086a0:	mov    esi,eax
  4086a2:	mov    rdx,QWORD PTR [rbp-0x18]
  4086a6:	call   403080 <memset@plt>
  4086ab:	add    rsp,0x20
  4086af:	pop    rbp
  4086b0:	ret    
  4086b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004086c0 <flatcc_builder_truncate_offset_vector@@Base>:
  4086c0:	push   rbp
  4086c1:	mov    rbp,rsp
  4086c4:	sub    rsp,0x20
  4086c8:	mov    QWORD PTR [rbp-0x10],rdi
  4086cc:	mov    QWORD PTR [rbp-0x18],rsi
  4086d0:	mov    rax,QWORD PTR [rbp-0x10]
  4086d4:	mov    rax,QWORD PTR [rax+0x30]
  4086d8:	movzx  ecx,WORD PTR [rax+0xe]
  4086dc:	cmp    ecx,0x5
  4086df:	jne    4086ea <flatcc_builder_truncate_offset_vector@@Base+0x2a>
  4086e5:	jmp    408709 <flatcc_builder_truncate_offset_vector@@Base+0x49>
  4086ea:	lea    rdi,[rip+0x58b7]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  4086f1:	lea    rsi,[rip+0x547a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4086f8:	mov    edx,0x3e2
  4086fd:	lea    rcx,[rip+0x5ac8]        # 40e1cc <flatcc_builder_padding_base@@Base+0x86c>
  408704:	call   403070 <__assert_fail@plt>
  408709:	mov    rax,QWORD PTR [rbp-0x10]
  40870d:	mov    rax,QWORD PTR [rax+0x30]
  408711:	mov    ecx,DWORD PTR [rax+0x14]
  408714:	mov    rax,QWORD PTR [rbp-0x18]
  408718:	cmp    ecx,eax
  40871a:	jae    408767 <flatcc_builder_truncate_offset_vector@@Base+0xa7>
  408720:	mov    rax,QWORD PTR [rbp-0x10]
  408724:	mov    rax,QWORD PTR [rax+0x30]
  408728:	mov    ecx,DWORD PTR [rax+0x14]
  40872b:	mov    rax,QWORD PTR [rbp-0x18]
  40872f:	cmp    ecx,eax
  408731:	jb     40873c <flatcc_builder_truncate_offset_vector@@Base+0x7c>
  408737:	jmp    40875b <flatcc_builder_truncate_offset_vector@@Base+0x9b>
  40873c:	lea    rdi,[rip+0x5acf]        # 40e212 <flatcc_builder_padding_base@@Base+0x8b2>
  408743:	lea    rsi,[rip+0x5428]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40874a:	mov    edx,0x3e3
  40874f:	lea    rcx,[rip+0x5a76]        # 40e1cc <flatcc_builder_padding_base@@Base+0x86c>
  408756:	call   403070 <__assert_fail@plt>
  40875b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408762:	jmp    40879f <flatcc_builder_truncate_offset_vector@@Base+0xdf>
  408767:	mov    rax,QWORD PTR [rbp-0x18]
  40876b:	mov    rcx,QWORD PTR [rbp-0x10]
  40876f:	mov    rcx,QWORD PTR [rcx+0x30]
  408773:	mov    edx,DWORD PTR [rcx+0x14]
  408776:	sub    edx,eax
  408778:	mov    DWORD PTR [rcx+0x14],edx
  40877b:	mov    rdi,QWORD PTR [rbp-0x10]
  40877f:	mov    rcx,QWORD PTR [rbp-0x10]
  408783:	mov    rcx,QWORD PTR [rcx+0x30]
  408787:	mov    eax,DWORD PTR [rcx+0x10]
  40878a:	mov    rcx,QWORD PTR [rbp-0x18]
  40878e:	imul   eax,ecx
  408791:	mov    esi,eax
  408793:	call   408660 <flatcc_builder_truncate_vector@@Base+0xf0>
  408798:	mov    DWORD PTR [rbp-0x4],0x0
  40879f:	mov    eax,DWORD PTR [rbp-0x4]
  4087a2:	add    rsp,0x20
  4087a6:	pop    rbp
  4087a7:	ret    
  4087a8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004087b0 <flatcc_builder_truncate_string@@Base>:
  4087b0:	push   rbp
  4087b1:	mov    rbp,rsp
  4087b4:	sub    rsp,0x20
  4087b8:	mov    QWORD PTR [rbp-0x10],rdi
  4087bc:	mov    QWORD PTR [rbp-0x18],rsi
  4087c0:	mov    rax,QWORD PTR [rbp-0x10]
  4087c4:	mov    rax,QWORD PTR [rax+0x30]
  4087c8:	movzx  ecx,WORD PTR [rax+0xe]
  4087cc:	cmp    ecx,0x6
  4087cf:	jne    4087da <flatcc_builder_truncate_string@@Base+0x2a>
  4087d5:	jmp    4087f9 <flatcc_builder_truncate_string@@Base+0x49>
  4087da:	lea    rdi,[rip+0x58d0]        # 40e0b1 <flatcc_builder_padding_base@@Base+0x751>
  4087e1:	lea    rsi,[rip+0x538a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4087e8:	mov    edx,0x3eb
  4087ed:	lea    rcx,[rip+0x5a59]        # 40e24d <flatcc_builder_padding_base@@Base+0x8ed>
  4087f4:	call   403070 <__assert_fail@plt>
  4087f9:	mov    rax,QWORD PTR [rbp-0x10]
  4087fd:	mov    rax,QWORD PTR [rax+0x30]
  408801:	mov    ecx,DWORD PTR [rax+0x14]
  408804:	mov    eax,ecx
  408806:	cmp    rax,QWORD PTR [rbp-0x18]
  40880a:	jae    408857 <flatcc_builder_truncate_string@@Base+0xa7>
  408810:	mov    rax,QWORD PTR [rbp-0x10]
  408814:	mov    rax,QWORD PTR [rax+0x30]
  408818:	mov    ecx,DWORD PTR [rax+0x14]
  40881b:	mov    eax,ecx
  40881d:	cmp    rax,QWORD PTR [rbp-0x18]
  408821:	jb     40882c <flatcc_builder_truncate_string@@Base+0x7c>
  408827:	jmp    40884b <flatcc_builder_truncate_string@@Base+0x9b>
  40882c:	lea    rdi,[rip+0x5a59]        # 40e28c <flatcc_builder_padding_base@@Base+0x92c>
  408833:	lea    rsi,[rip+0x5338]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40883a:	mov    edx,0x3ec
  40883f:	lea    rcx,[rip+0x5a07]        # 40e24d <flatcc_builder_padding_base@@Base+0x8ed>
  408846:	call   403070 <__assert_fail@plt>
  40884b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408852:	jmp    408881 <flatcc_builder_truncate_string@@Base+0xd1>
  408857:	mov    rax,QWORD PTR [rbp-0x18]
  40885b:	mov    rcx,QWORD PTR [rbp-0x10]
  40885f:	mov    rcx,QWORD PTR [rcx+0x30]
  408863:	mov    edx,DWORD PTR [rcx+0x14]
  408866:	sub    edx,eax
  408868:	mov    DWORD PTR [rcx+0x14],edx
  40886b:	mov    rdi,QWORD PTR [rbp-0x10]
  40886f:	mov    rcx,QWORD PTR [rbp-0x18]
  408873:	mov    esi,ecx
  408875:	call   408660 <flatcc_builder_truncate_vector@@Base+0xf0>
  40887a:	mov    DWORD PTR [rbp-0x4],0x0
  408881:	mov    eax,DWORD PTR [rbp-0x4]
  408884:	add    rsp,0x20
  408888:	pop    rbp
  408889:	ret    
  40888a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408890 <flatcc_builder_start_vector@@Base>:
  408890:	push   rbp
  408891:	mov    rbp,rsp
  408894:	sub    rsp,0x30
  408898:	mov    QWORD PTR [rbp-0x10],rdi
  40889c:	mov    QWORD PTR [rbp-0x18],rsi
  4088a0:	mov    WORD PTR [rbp-0x1a],dx
  4088a4:	mov    QWORD PTR [rbp-0x28],rcx
  4088a8:	lea    rdi,[rbp-0x1a]
  4088ac:	mov    esi,0x4
  4088b1:	call   408940 <flatcc_builder_start_vector@@Base+0xb0>
  4088b6:	mov    rdi,QWORD PTR [rbp-0x10]
  4088ba:	movzx  esi,WORD PTR [rbp-0x1a]
  4088be:	call   407820 <flatcc_builder_start_buffer@@Base+0x170>
  4088c3:	cmp    eax,0x0
  4088c6:	je     4088d8 <flatcc_builder_start_vector@@Base+0x48>
  4088cc:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4088d3:	jmp    408928 <flatcc_builder_start_vector@@Base+0x98>
  4088d8:	mov    rax,QWORD PTR [rbp-0x18]
  4088dc:	mov    rcx,QWORD PTR [rbp-0x10]
  4088e0:	mov    rcx,QWORD PTR [rcx+0x30]
  4088e4:	mov    DWORD PTR [rcx+0x10],eax
  4088e7:	mov    rcx,QWORD PTR [rbp-0x10]
  4088eb:	mov    rcx,QWORD PTR [rcx+0x30]
  4088ef:	mov    DWORD PTR [rcx+0x14],0x0
  4088f6:	mov    rcx,QWORD PTR [rbp-0x28]
  4088fa:	mov    rdx,QWORD PTR [rbp-0x10]
  4088fe:	mov    rdx,QWORD PTR [rdx+0x30]
  408902:	mov    DWORD PTR [rdx+0x18],ecx
  408905:	mov    rdx,QWORD PTR [rbp-0x10]
  408909:	mov    rdx,QWORD PTR [rdx+0x30]
  40890d:	mov    WORD PTR [rdx+0xe],0x4
  408913:	mov    rdi,QWORD PTR [rbp-0x10]
  408917:	mov    esi,0xfffffffc
  40891c:	call   407c70 <flatcc_builder_start_struct@@Base+0x70>
  408921:	mov    DWORD PTR [rbp-0x4],0x0
  408928:	mov    eax,DWORD PTR [rbp-0x4]
  40892b:	add    rsp,0x30
  40892f:	pop    rbp
  408930:	ret    
  408931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40893b:	nop    DWORD PTR [rax+rax*1+0x0]
  408940:	push   rbp
  408941:	mov    rbp,rsp
  408944:	mov    QWORD PTR [rbp-0x8],rdi
  408948:	mov    WORD PTR [rbp-0xa],si
  40894c:	mov    rax,QWORD PTR [rbp-0x8]
  408950:	movzx  ecx,WORD PTR [rax]
  408953:	movzx  edx,WORD PTR [rbp-0xa]
  408957:	cmp    ecx,edx
  408959:	jge    40896a <flatcc_builder_start_vector@@Base+0xda>
  40895f:	mov    ax,WORD PTR [rbp-0xa]
  408963:	mov    rcx,QWORD PTR [rbp-0x8]
  408967:	mov    WORD PTR [rcx],ax
  40896a:	pop    rbp
  40896b:	ret    
  40896c:	nop    DWORD PTR [rax+0x0]

0000000000408970 <flatcc_builder_start_offset_vector@@Base>:
  408970:	push   rbp
  408971:	mov    rbp,rsp
  408974:	sub    rsp,0x10
  408978:	mov    QWORD PTR [rbp-0x10],rdi
  40897c:	mov    rdi,QWORD PTR [rbp-0x10]
  408980:	mov    esi,0x4
  408985:	call   407820 <flatcc_builder_start_buffer@@Base+0x170>
  40898a:	cmp    eax,0x0
  40898d:	je     40899f <flatcc_builder_start_offset_vector@@Base+0x2f>
  408993:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40899a:	jmp    4089e0 <flatcc_builder_start_offset_vector@@Base+0x70>
  40899f:	mov    rax,QWORD PTR [rbp-0x10]
  4089a3:	mov    rax,QWORD PTR [rax+0x30]
  4089a7:	mov    DWORD PTR [rax+0x10],0x4
  4089ae:	mov    rax,QWORD PTR [rbp-0x10]
  4089b2:	mov    rax,QWORD PTR [rax+0x30]
  4089b6:	mov    DWORD PTR [rax+0x14],0x0
  4089bd:	mov    rax,QWORD PTR [rbp-0x10]
  4089c1:	mov    rax,QWORD PTR [rax+0x30]
  4089c5:	mov    WORD PTR [rax+0xe],0x5
  4089cb:	mov    rdi,QWORD PTR [rbp-0x10]
  4089cf:	mov    esi,0xfffffffc
  4089d4:	call   407c70 <flatcc_builder_start_struct@@Base+0x70>
  4089d9:	mov    DWORD PTR [rbp-0x4],0x0
  4089e0:	mov    eax,DWORD PTR [rbp-0x4]
  4089e3:	add    rsp,0x10
  4089e7:	pop    rbp
  4089e8:	ret    
  4089e9:	nop    DWORD PTR [rax+0x0]

00000000004089f0 <flatcc_builder_create_offset_vector@@Base>:
  4089f0:	push   rbp
  4089f1:	mov    rbp,rsp
  4089f4:	sub    rsp,0x30
  4089f8:	mov    QWORD PTR [rbp-0x10],rdi
  4089fc:	mov    QWORD PTR [rbp-0x18],rsi
  408a00:	mov    QWORD PTR [rbp-0x20],rdx
  408a04:	mov    rdi,QWORD PTR [rbp-0x10]
  408a08:	call   408970 <flatcc_builder_start_offset_vector@@Base>
  408a0d:	cmp    eax,0x0
  408a10:	je     408a22 <flatcc_builder_create_offset_vector@@Base+0x32>
  408a16:	mov    DWORD PTR [rbp-0x4],0x0
  408a1d:	jmp    408a70 <flatcc_builder_create_offset_vector@@Base+0x80>
  408a22:	mov    rdi,QWORD PTR [rbp-0x10]
  408a26:	mov    rsi,QWORD PTR [rbp-0x20]
  408a2a:	call   408160 <flatcc_builder_extend_offset_vector@@Base>
  408a2f:	mov    QWORD PTR [rbp-0x28],rax
  408a33:	cmp    rax,0x0
  408a37:	jne    408a49 <flatcc_builder_create_offset_vector@@Base+0x59>
  408a3d:	mov    DWORD PTR [rbp-0x4],0x0
  408a44:	jmp    408a70 <flatcc_builder_create_offset_vector@@Base+0x80>
  408a49:	mov    rax,QWORD PTR [rbp-0x28]
  408a4d:	mov    rcx,QWORD PTR [rbp-0x18]
  408a51:	mov    rdx,QWORD PTR [rbp-0x20]
  408a55:	shl    rdx,0x2
  408a59:	mov    rdi,rax
  408a5c:	mov    rsi,rcx
  408a5f:	call   4030c0 <memcpy@plt>
  408a64:	mov    rdi,QWORD PTR [rbp-0x10]
  408a68:	call   408a80 <flatcc_builder_end_offset_vector@@Base>
  408a6d:	mov    DWORD PTR [rbp-0x4],eax
  408a70:	mov    eax,DWORD PTR [rbp-0x4]
  408a73:	add    rsp,0x30
  408a77:	pop    rbp
  408a78:	ret    
  408a79:	nop    DWORD PTR [rax+0x0]

0000000000408a80 <flatcc_builder_end_offset_vector@@Base>:
  408a80:	push   rbp
  408a81:	mov    rbp,rsp
  408a84:	sub    rsp,0x20
  408a88:	mov    QWORD PTR [rbp-0x10],rdi
  408a8c:	mov    rax,QWORD PTR [rbp-0x10]
  408a90:	mov    rax,QWORD PTR [rax+0x30]
  408a94:	movzx  ecx,WORD PTR [rax+0xe]
  408a98:	cmp    ecx,0x5
  408a9b:	jne    408aa6 <flatcc_builder_end_offset_vector@@Base+0x26>
  408aa1:	jmp    408ac5 <flatcc_builder_end_offset_vector@@Base+0x45>
  408aa6:	lea    rdi,[rip+0x54fb]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  408aad:	lea    rsi,[rip+0x50be]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408ab4:	mov    edx,0x5c8
  408ab9:	lea    rcx,[rip+0x5b17]        # 40e5d7 <flatcc_builder_padding_base@@Base+0xc77>
  408ac0:	call   403070 <__assert_fail@plt>
  408ac5:	mov    rdi,QWORD PTR [rbp-0x10]
  408ac9:	mov    rax,QWORD PTR [rbp-0x10]
  408acd:	mov    rax,QWORD PTR [rax+0x18]
  408ad1:	mov    rcx,QWORD PTR [rbp-0x10]
  408ad5:	mov    rcx,QWORD PTR [rcx+0x30]
  408ad9:	mov    edx,DWORD PTR [rcx+0x14]
  408adc:	mov    rsi,rax
  408adf:	call   409ed0 <flatcc_builder_create_offset_vector_direct@@Base>
  408ae4:	xor    r8d,r8d
  408ae7:	mov    DWORD PTR [rbp-0x14],eax
  408aea:	cmp    r8d,eax
  408aed:	jne    408aff <flatcc_builder_end_offset_vector@@Base+0x7f>
  408af3:	mov    DWORD PTR [rbp-0x4],0x0
  408afa:	jmp    408b0e <flatcc_builder_end_offset_vector@@Base+0x8e>
  408aff:	mov    rdi,QWORD PTR [rbp-0x10]
  408b03:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  408b08:	mov    eax,DWORD PTR [rbp-0x14]
  408b0b:	mov    DWORD PTR [rbp-0x4],eax
  408b0e:	mov    eax,DWORD PTR [rbp-0x4]
  408b11:	add    rsp,0x20
  408b15:	pop    rbp
  408b16:	ret    
  408b17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408b20 <flatcc_builder_start_string@@Base>:
  408b20:	push   rbp
  408b21:	mov    rbp,rsp
  408b24:	sub    rsp,0x10
  408b28:	mov    QWORD PTR [rbp-0x10],rdi
  408b2c:	mov    rdi,QWORD PTR [rbp-0x10]
  408b30:	mov    esi,0x1
  408b35:	call   407820 <flatcc_builder_start_buffer@@Base+0x170>
  408b3a:	cmp    eax,0x0
  408b3d:	je     408b4f <flatcc_builder_start_string@@Base+0x2f>
  408b43:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408b4a:	jmp    408b90 <flatcc_builder_start_string@@Base+0x70>
  408b4f:	mov    rax,QWORD PTR [rbp-0x10]
  408b53:	mov    rax,QWORD PTR [rax+0x30]
  408b57:	mov    DWORD PTR [rax+0x10],0x1
  408b5e:	mov    rax,QWORD PTR [rbp-0x10]
  408b62:	mov    rax,QWORD PTR [rax+0x30]
  408b66:	mov    DWORD PTR [rax+0x14],0x0
  408b6d:	mov    rax,QWORD PTR [rbp-0x10]
  408b71:	mov    rax,QWORD PTR [rax+0x30]
  408b75:	mov    WORD PTR [rax+0xe],0x6
  408b7b:	mov    rdi,QWORD PTR [rbp-0x10]
  408b7f:	mov    esi,0xfffffffc
  408b84:	call   407c70 <flatcc_builder_start_struct@@Base+0x70>
  408b89:	mov    DWORD PTR [rbp-0x4],0x0
  408b90:	mov    eax,DWORD PTR [rbp-0x4]
  408b93:	add    rsp,0x10
  408b97:	pop    rbp
  408b98:	ret    
  408b99:	nop    DWORD PTR [rax+0x0]

0000000000408ba0 <flatcc_builder_reserve_table@@Base>:
  408ba0:	push   rbp
  408ba1:	mov    rbp,rsp
  408ba4:	sub    rsp,0x10
  408ba8:	mov    QWORD PTR [rbp-0x8],rdi
  408bac:	mov    DWORD PTR [rbp-0xc],esi
  408baf:	cmp    DWORD PTR [rbp-0xc],0x0
  408bb3:	jl     408bbe <flatcc_builder_reserve_table@@Base+0x1e>
  408bb9:	jmp    408bdd <flatcc_builder_reserve_table@@Base+0x3d>
  408bbe:	lea    rdi,[rip+0x572a]        # 40e2ef <flatcc_builder_padding_base@@Base+0x98f>
  408bc5:	lea    rsi,[rip+0x4fa6]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408bcc:	mov    edx,0x429
  408bd1:	lea    rcx,[rip+0x56d6]        # 40e2ae <flatcc_builder_padding_base@@Base+0x94e>
  408bd8:	call   403070 <__assert_fail@plt>
  408bdd:	mov    rdi,QWORD PTR [rbp-0x8]
  408be1:	mov    esi,DWORD PTR [rbp-0xc]
  408be4:	call   408bf0 <flatcc_builder_reserve_table@@Base+0x50>
  408be9:	add    rsp,0x10
  408bed:	pop    rbp
  408bee:	ret    
  408bef:	nop
  408bf0:	push   rbp
  408bf1:	mov    rbp,rsp
  408bf4:	sub    rsp,0x20
  408bf8:	xor    eax,eax
  408bfa:	mov    QWORD PTR [rbp-0x10],rdi
  408bfe:	mov    DWORD PTR [rbp-0x14],esi
  408c01:	mov    rcx,QWORD PTR [rbp-0x10]
  408c05:	mov    rcx,QWORD PTR [rcx+0x30]
  408c09:	mov    edx,DWORD PTR [rcx+0x10]
  408c0c:	mov    ecx,edx
  408c0e:	mov    rdi,QWORD PTR [rbp-0x10]
  408c12:	mov    rdi,QWORD PTR [rdi+0x30]
  408c16:	movzx  edx,WORD PTR [rdi+0x1c]
  408c1a:	mov    edi,edx
  408c1c:	shl    rdi,0x1
  408c20:	add    rcx,rdi
  408c23:	mov    DWORD PTR [rbp-0x18],ecx
  408c26:	mov    ecx,DWORD PTR [rbp-0x14]
  408c29:	add    ecx,0x2
  408c2c:	movsxd rdi,ecx
  408c2f:	shl    rdi,0x1
  408c33:	mov    DWORD PTR [rbp-0x1c],edi
  408c36:	mov    rdi,QWORD PTR [rbp-0x10]
  408c3a:	mov    ecx,DWORD PTR [rbp-0x18]
  408c3d:	mov    edx,ecx
  408c3f:	mov    ecx,DWORD PTR [rbp-0x1c]
  408c42:	mov    esi,eax
  408c44:	mov    r8d,0x1
  408c4a:	call   406860 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  408c4f:	mov    rcx,QWORD PTR [rbp-0x10]
  408c53:	mov    QWORD PTR [rcx+0x8],rax
  408c57:	cmp    rax,0x0
  408c5b:	jne    408c6d <flatcc_builder_reserve_table@@Base+0xcd>
  408c61:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408c68:	jmp    408cde <flatcc_builder_reserve_table@@Base+0x13e>
  408c6d:	xor    r8d,r8d
  408c70:	mov    rax,QWORD PTR [rbp-0x10]
  408c74:	mov    rcx,QWORD PTR [rax+0x8]
  408c78:	add    rcx,0x4
  408c7f:	mov    QWORD PTR [rax+0x8],rcx
  408c83:	mov    rax,QWORD PTR [rbp-0x10]
  408c87:	mov    rax,QWORD PTR [rax+0x30]
  408c8b:	mov    edx,DWORD PTR [rax+0x14]
  408c8e:	mov    DWORD PTR [rbp-0x18],edx
  408c91:	movsxd rax,DWORD PTR [rbp-0x14]
  408c95:	shl    rax,0x1
  408c99:	add    rax,0x1
  408c9f:	mov    DWORD PTR [rbp-0x1c],eax
  408ca2:	mov    rdi,QWORD PTR [rbp-0x10]
  408ca6:	mov    eax,DWORD PTR [rbp-0x18]
  408ca9:	mov    edx,eax
  408cab:	mov    eax,DWORD PTR [rbp-0x1c]
  408cae:	mov    ecx,eax
  408cb0:	mov    esi,0x3
  408cb5:	call   406860 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  408cba:	mov    rcx,QWORD PTR [rbp-0x10]
  408cbe:	mov    QWORD PTR [rcx],rax
  408cc1:	cmp    rax,0x0
  408cc5:	jne    408cd7 <flatcc_builder_reserve_table@@Base+0x137>
  408ccb:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408cd2:	jmp    408cde <flatcc_builder_reserve_table@@Base+0x13e>
  408cd7:	mov    DWORD PTR [rbp-0x4],0x0
  408cde:	mov    eax,DWORD PTR [rbp-0x4]
  408ce1:	add    rsp,0x20
  408ce5:	pop    rbp
  408ce6:	ret    
  408ce7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000408cf0 <flatcc_builder_start_table@@Base>:
  408cf0:	push   rbp
  408cf1:	mov    rbp,rsp
  408cf4:	sub    rsp,0x20
  408cf8:	mov    QWORD PTR [rbp-0x10],rdi
  408cfc:	mov    DWORD PTR [rbp-0x14],esi
  408cff:	mov    rdi,QWORD PTR [rbp-0x10]
  408d03:	mov    esi,0x4
  408d08:	call   407820 <flatcc_builder_start_buffer@@Base+0x170>
  408d0d:	cmp    eax,0x0
  408d10:	je     408d22 <flatcc_builder_start_table@@Base+0x32>
  408d16:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408d1d:	jmp    408dea <flatcc_builder_start_table@@Base+0xfa>
  408d22:	mov    rax,QWORD PTR [rbp-0x10]
  408d26:	mov    rax,QWORD PTR [rax+0x8]
  408d2a:	mov    rcx,QWORD PTR [rbp-0x10]
  408d2e:	mov    rcx,QWORD PTR [rcx+0x58]
  408d32:	sub    rax,rcx
  408d35:	mov    rcx,QWORD PTR [rbp-0x10]
  408d39:	mov    rcx,QWORD PTR [rcx+0x30]
  408d3d:	mov    DWORD PTR [rcx+0x10],eax
  408d40:	mov    rcx,QWORD PTR [rbp-0x10]
  408d44:	mov    rcx,QWORD PTR [rcx]
  408d47:	mov    rdx,QWORD PTR [rbp-0x10]
  408d4b:	mov    rdx,QWORD PTR [rdx+0x88]
  408d52:	sub    rcx,rdx
  408d55:	mov    rdx,QWORD PTR [rbp-0x10]
  408d59:	mov    rdx,QWORD PTR [rdx+0x30]
  408d5d:	mov    DWORD PTR [rdx+0x14],ecx
  408d60:	mov    rdx,QWORD PTR [rbp-0x10]
  408d64:	mov    eax,DWORD PTR [rdx+0x14]
  408d67:	mov    rdx,QWORD PTR [rbp-0x10]
  408d6b:	mov    rdx,QWORD PTR [rdx+0x30]
  408d6f:	mov    DWORD PTR [rdx+0x18],eax
  408d72:	mov    rdx,QWORD PTR [rbp-0x10]
  408d76:	mov    si,WORD PTR [rdx+0x10]
  408d7a:	mov    rdx,QWORD PTR [rbp-0x10]
  408d7e:	mov    rdx,QWORD PTR [rdx+0x30]
  408d82:	mov    WORD PTR [rdx+0x1c],si
  408d86:	mov    rdx,QWORD PTR [rbp-0x10]
  408d8a:	mov    DWORD PTR [rdx+0x14],0x0
  408d91:	mov    rdx,QWORD PTR [rbp-0x10]
  408d95:	mov    DWORD PTR [rdx+0x14],0x2f693b52
  408d9c:	mov    rdx,QWORD PTR [rbp-0x10]
  408da0:	mov    WORD PTR [rdx+0x10],0x0
  408da6:	mov    rdx,QWORD PTR [rbp-0x10]
  408daa:	mov    rdx,QWORD PTR [rdx+0x30]
  408dae:	mov    WORD PTR [rdx+0xe],0x3
  408db4:	mov    rdi,QWORD PTR [rbp-0x10]
  408db8:	mov    esi,DWORD PTR [rbp-0x14]
  408dbb:	call   408bf0 <flatcc_builder_reserve_table@@Base+0x50>
  408dc0:	cmp    eax,0x0
  408dc3:	je     408dd5 <flatcc_builder_start_table@@Base+0xe5>
  408dc9:	mov    DWORD PTR [rbp-0x4],0xffffffff
  408dd0:	jmp    408dea <flatcc_builder_start_table@@Base+0xfa>
  408dd5:	mov    rdi,QWORD PTR [rbp-0x10]
  408dd9:	mov    esi,0xfffc
  408dde:	call   407c70 <flatcc_builder_start_struct@@Base+0x70>
  408de3:	mov    DWORD PTR [rbp-0x4],0x0
  408dea:	mov    eax,DWORD PTR [rbp-0x4]
  408ded:	add    rsp,0x20
  408df1:	pop    rbp
  408df2:	ret    
  408df3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408dfd:	nop    DWORD PTR [rax]

0000000000408e00 <flatcc_builder_create_vtable@@Base>:
  408e00:	push   rbp
  408e01:	mov    rbp,rsp
  408e04:	sub    rsp,0xc0
  408e0b:	mov    QWORD PTR [rbp-0x10],rdi
  408e0f:	mov    QWORD PTR [rbp-0x18],rsi
  408e13:	mov    WORD PTR [rbp-0x1a],dx
  408e17:	mov    QWORD PTR [rbp-0xb0],0x0
  408e22:	mov    DWORD PTR [rbp-0xa8],0x0
  408e2c:	movzx  eax,WORD PTR [rbp-0x1a]
  408e30:	cmp    eax,0x0
  408e33:	jle    408ea1 <flatcc_builder_create_vtable@@Base+0xa1>
  408e39:	movzx  eax,WORD PTR [rbp-0x1a]
  408e3d:	mov    ecx,eax
  408e3f:	add    rcx,QWORD PTR [rbp-0xb0]
  408e46:	mov    QWORD PTR [rbp-0xb0],rcx
  408e4d:	mov    rcx,QWORD PTR [rbp-0x18]
  408e51:	lea    rdx,[rbp-0xb0]
  408e58:	mov    rsi,rdx
  408e5b:	add    rsi,0x10
  408e62:	movsxd rdi,DWORD PTR [rbp-0xa8]
  408e69:	shl    rdi,0x4
  408e6d:	add    rsi,rdi
  408e70:	mov    QWORD PTR [rsi],rcx
  408e73:	movzx  eax,WORD PTR [rbp-0x1a]
  408e77:	mov    ecx,eax
  408e79:	add    rdx,0x10
  408e80:	movsxd rsi,DWORD PTR [rbp-0xa8]
  408e87:	shl    rsi,0x4
  408e8b:	add    rdx,rsi
  408e8e:	mov    QWORD PTR [rdx+0x8],rcx
  408e92:	mov    eax,DWORD PTR [rbp-0xa8]
  408e98:	add    eax,0x1
  408e9b:	mov    DWORD PTR [rbp-0xa8],eax
  408ea1:	mov    rax,QWORD PTR [rbp-0x10]
  408ea5:	cmp    DWORD PTR [rax+0x100],0x0
  408eac:	jne    408ef1 <flatcc_builder_create_vtable@@Base+0xf1>
  408eb2:	mov    rax,QWORD PTR [rbp-0x10]
  408eb6:	cmp    DWORD PTR [rax+0x124],0x0
  408ebd:	jne    408ef1 <flatcc_builder_create_vtable@@Base+0xf1>
  408ec3:	mov    rdi,QWORD PTR [rbp-0x10]
  408ec7:	lea    rsi,[rbp-0xb0]
  408ece:	call   408f40 <flatcc_builder_create_vtable@@Base+0x140>
  408ed3:	xor    ecx,ecx
  408ed5:	mov    DWORD PTR [rbp-0x20],eax
  408ed8:	cmp    ecx,eax
  408eda:	jne    408eec <flatcc_builder_create_vtable@@Base+0xec>
  408ee0:	mov    DWORD PTR [rbp-0x4],0x0
  408ee7:	jmp    408f29 <flatcc_builder_create_vtable@@Base+0x129>
  408eec:	jmp    408f23 <flatcc_builder_create_vtable@@Base+0x123>
  408ef1:	mov    rdi,QWORD PTR [rbp-0x10]
  408ef5:	lea    rsi,[rbp-0xb0]
  408efc:	call   406fb0 <flatcc_builder_embed_buffer@@Base+0x440>
  408f01:	xor    ecx,ecx
  408f03:	mov    DWORD PTR [rbp-0x20],eax
  408f06:	cmp    ecx,eax
  408f08:	jne    408f1a <flatcc_builder_create_vtable@@Base+0x11a>
  408f0e:	mov    DWORD PTR [rbp-0x4],0x0
  408f15:	jmp    408f29 <flatcc_builder_create_vtable@@Base+0x129>
  408f1a:	mov    eax,DWORD PTR [rbp-0x20]
  408f1d:	add    eax,0x1
  408f20:	mov    DWORD PTR [rbp-0x20],eax
  408f23:	mov    eax,DWORD PTR [rbp-0x20]
  408f26:	mov    DWORD PTR [rbp-0x4],eax
  408f29:	mov    eax,DWORD PTR [rbp-0x4]
  408f2c:	add    rsp,0xc0
  408f33:	pop    rbp
  408f34:	ret    
  408f35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f3f:	nop
  408f40:	push   rbp
  408f41:	mov    rbp,rsp
  408f44:	sub    rsp,0x20
  408f48:	mov    QWORD PTR [rbp-0x8],rdi
  408f4c:	mov    QWORD PTR [rbp-0x10],rsi
  408f50:	mov    rax,QWORD PTR [rbp-0x8]
  408f54:	mov    ecx,DWORD PTR [rax+0xf4]
  408f5a:	mov    DWORD PTR [rbp-0x14],ecx
  408f5d:	mov    ecx,DWORD PTR [rbp-0x14]
  408f60:	mov    rax,QWORD PTR [rbp-0x10]
  408f64:	mov    rax,QWORD PTR [rax]
  408f67:	add    ecx,eax
  408f69:	mov    rdx,QWORD PTR [rbp-0x8]
  408f6d:	mov    DWORD PTR [rdx+0xf4],ecx
  408f73:	mov    rdx,QWORD PTR [rbp-0x8]
  408f77:	mov    eax,DWORD PTR [rdx+0xf4]
  408f7d:	cmp    eax,DWORD PTR [rbp-0x14]
  408f80:	jge    408fa5 <flatcc_builder_create_vtable@@Base+0x1a5>
  408f86:	lea    rdi,[rip+0x5da5]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  408f8d:	lea    rsi,[rip+0x4bde]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408f94:	mov    edx,0x2a1
  408f99:	lea    rcx,[rip+0x5d0d]        # 40ecad <flatcc_builder_padding_base@@Base+0x134d>
  408fa0:	call   403070 <__assert_fail@plt>
  408fa5:	mov    rax,QWORD PTR [rbp-0x8]
  408fa9:	mov    rax,QWORD PTR [rax+0x48]
  408fad:	mov    rcx,QWORD PTR [rbp-0x8]
  408fb1:	mov    rdi,QWORD PTR [rcx+0x38]
  408fb5:	mov    rcx,QWORD PTR [rbp-0x10]
  408fb9:	add    rcx,0x10
  408fc0:	mov    rdx,QWORD PTR [rbp-0x10]
  408fc4:	mov    edx,DWORD PTR [rdx+0x8]
  408fc7:	mov    esi,DWORD PTR [rbp-0x14]
  408fca:	mov    r8,QWORD PTR [rbp-0x10]
  408fce:	mov    r8,QWORD PTR [r8]
  408fd1:	mov    DWORD PTR [rbp-0x18],esi
  408fd4:	mov    rsi,rcx
  408fd7:	mov    ecx,DWORD PTR [rbp-0x18]
  408fda:	call   rax
  408fdc:	cmp    eax,0x0
  408fdf:	je     409004 <flatcc_builder_create_vtable@@Base+0x204>
  408fe5:	lea    rdi,[rip+0x5d46]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  408fec:	lea    rsi,[rip+0x4b7f]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  408ff3:	mov    edx,0x2a5
  408ff8:	lea    rcx,[rip+0x5cae]        # 40ecad <flatcc_builder_padding_base@@Base+0x134d>
  408fff:	call   403070 <__assert_fail@plt>
  409004:	mov    eax,DWORD PTR [rbp-0x14]
  409007:	add    eax,0x1
  40900a:	add    rsp,0x20
  40900e:	pop    rbp
  40900f:	ret    

0000000000409010 <flatcc_builder_create_cached_vtable@@Base>:
  409010:	push   rbp
  409011:	mov    rbp,rsp
  409014:	sub    rsp,0x70
  409018:	mov    QWORD PTR [rbp-0x10],rdi
  40901c:	mov    QWORD PTR [rbp-0x18],rsi
  409020:	mov    WORD PTR [rbp-0x1a],dx
  409024:	mov    DWORD PTR [rbp-0x20],ecx
  409027:	mov    rdi,QWORD PTR [rbp-0x10]
  40902b:	mov    esi,DWORD PTR [rbp-0x20]
  40902e:	call   409340 <flatcc_builder_create_cached_vtable@@Base+0x330>
  409033:	mov    QWORD PTR [rbp-0x40],rax
  409037:	cmp    rax,0x0
  40903b:	jne    40904d <flatcc_builder_create_cached_vtable@@Base+0x3d>
  409041:	mov    DWORD PTR [rbp-0x4],0x0
  409048:	jmp    409328 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40904d:	mov    rax,QWORD PTR [rbp-0x40]
  409051:	mov    QWORD PTR [rbp-0x38],rax
  409055:	mov    rax,QWORD PTR [rbp-0x38]
  409059:	mov    ecx,DWORD PTR [rax]
  40905b:	mov    DWORD PTR [rbp-0x44],ecx
  40905e:	mov    QWORD PTR [rbp-0x30],0x0
  409066:	cmp    DWORD PTR [rbp-0x44],0x0
  40906a:	je     40917d <flatcc_builder_create_cached_vtable@@Base+0x16d>
  409070:	mov    rax,QWORD PTR [rbp-0x10]
  409074:	mov    rax,QWORD PTR [rax+0xb8]
  40907b:	mov    ecx,DWORD PTR [rbp-0x44]
  40907e:	mov    edx,ecx
  409080:	add    rax,rdx
  409083:	mov    QWORD PTR [rbp-0x28],rax
  409087:	mov    rax,QWORD PTR [rbp-0x10]
  40908b:	mov    rax,QWORD PTR [rax+0x78]
  40908f:	mov    rdx,QWORD PTR [rbp-0x28]
  409093:	mov    ecx,DWORD PTR [rdx+0x8]
  409096:	mov    edx,ecx
  409098:	add    rax,rdx
  40909b:	mov    QWORD PTR [rbp-0x50],rax
  40909f:	mov    rax,QWORD PTR [rbp-0x50]
  4090a3:	movzx  ecx,WORD PTR [rax]
  4090a6:	movzx  esi,WORD PTR [rbp-0x1a]
  4090aa:	cmp    ecx,esi
  4090ac:	jne    4090e5 <flatcc_builder_create_cached_vtable@@Base+0xd5>
  4090b2:	xor    eax,eax
  4090b4:	mov    rcx,QWORD PTR [rbp-0x18]
  4090b8:	mov    rdx,QWORD PTR [rbp-0x50]
  4090bc:	movzx  esi,WORD PTR [rbp-0x1a]
  4090c0:	mov    edi,esi
  4090c2:	mov    QWORD PTR [rbp-0x58],rdi
  4090c6:	mov    rdi,rcx
  4090c9:	mov    rsi,rdx
  4090cc:	mov    rdx,QWORD PTR [rbp-0x58]
  4090d0:	mov    DWORD PTR [rbp-0x5c],eax
  4090d3:	call   4030a0 <memcmp@plt>
  4090d8:	mov    r8d,DWORD PTR [rbp-0x5c]
  4090dc:	cmp    r8d,eax
  4090df:	je     409102 <flatcc_builder_create_cached_vtable@@Base+0xf2>
  4090e5:	mov    rax,QWORD PTR [rbp-0x28]
  4090e9:	add    rax,0xc
  4090ef:	mov    QWORD PTR [rbp-0x38],rax
  4090f3:	mov    rax,QWORD PTR [rbp-0x28]
  4090f7:	mov    ecx,DWORD PTR [rax+0xc]
  4090fa:	mov    DWORD PTR [rbp-0x44],ecx
  4090fd:	jmp    409066 <flatcc_builder_create_cached_vtable@@Base+0x56>
  409102:	mov    rax,QWORD PTR [rbp-0x28]
  409106:	mov    ecx,DWORD PTR [rax+0x4]
  409109:	mov    rax,QWORD PTR [rbp-0x10]
  40910d:	cmp    ecx,DWORD PTR [rax+0x100]
  409113:	je     40913e <flatcc_builder_create_cached_vtable@@Base+0x12e>
  409119:	mov    rax,QWORD PTR [rbp-0x28]
  40911d:	mov    QWORD PTR [rbp-0x30],rax
  409121:	mov    rax,QWORD PTR [rbp-0x28]
  409125:	add    rax,0xc
  40912b:	mov    QWORD PTR [rbp-0x38],rax
  40912f:	mov    rax,QWORD PTR [rbp-0x28]
  409133:	mov    ecx,DWORD PTR [rax+0xc]
  409136:	mov    DWORD PTR [rbp-0x44],ecx
  409139:	jmp    409066 <flatcc_builder_create_cached_vtable@@Base+0x56>
  40913e:	mov    rax,QWORD PTR [rbp-0x38]
  409142:	cmp    rax,QWORD PTR [rbp-0x40]
  409146:	je     40916f <flatcc_builder_create_cached_vtable@@Base+0x15f>
  40914c:	mov    rax,QWORD PTR [rbp-0x28]
  409150:	mov    ecx,DWORD PTR [rax+0xc]
  409153:	mov    rax,QWORD PTR [rbp-0x38]
  409157:	mov    DWORD PTR [rax],ecx
  409159:	mov    rax,QWORD PTR [rbp-0x40]
  40915d:	mov    ecx,DWORD PTR [rax]
  40915f:	mov    rax,QWORD PTR [rbp-0x28]
  409163:	mov    DWORD PTR [rax+0xc],ecx
  409166:	mov    ecx,DWORD PTR [rbp-0x44]
  409169:	mov    rax,QWORD PTR [rbp-0x40]
  40916d:	mov    DWORD PTR [rax],ecx
  40916f:	mov    rax,QWORD PTR [rbp-0x28]
  409173:	mov    ecx,DWORD PTR [rax]
  409175:	mov    DWORD PTR [rbp-0x4],ecx
  409178:	jmp    409328 <flatcc_builder_create_cached_vtable@@Base+0x318>
  40917d:	xor    r8d,r8d
  409180:	mov    rdi,QWORD PTR [rbp-0x10]
  409184:	mov    rax,QWORD PTR [rbp-0x10]
  409188:	mov    ecx,DWORD PTR [rax+0xe4]
  40918e:	mov    edx,ecx
  409190:	mov    esi,0x6
  409195:	mov    ecx,0x10
  40919a:	call   406860 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40919f:	mov    QWORD PTR [rbp-0x28],rax
  4091a3:	cmp    rax,0x0
  4091a7:	jne    4091b9 <flatcc_builder_create_cached_vtable@@Base+0x1a9>
  4091ad:	mov    DWORD PTR [rbp-0x4],0x0
  4091b4:	jmp    409328 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4091b9:	mov    rax,QWORD PTR [rbp-0x10]
  4091bd:	mov    ecx,DWORD PTR [rax+0xe4]
  4091c3:	mov    DWORD PTR [rbp-0x44],ecx
  4091c6:	mov    rax,QWORD PTR [rbp-0x10]
  4091ca:	mov    ecx,DWORD PTR [rax+0xe4]
  4091d0:	mov    edx,ecx
  4091d2:	add    rdx,0x10
  4091d9:	mov    DWORD PTR [rax+0xe4],edx
  4091df:	mov    rax,QWORD PTR [rbp-0x10]
  4091e3:	mov    ecx,DWORD PTR [rax+0x100]
  4091e9:	mov    rax,QWORD PTR [rbp-0x28]
  4091ed:	mov    DWORD PTR [rax+0x4],ecx
  4091f0:	mov    rax,QWORD PTR [rbp-0x40]
  4091f4:	mov    ecx,DWORD PTR [rax]
  4091f6:	mov    rax,QWORD PTR [rbp-0x28]
  4091fa:	mov    DWORD PTR [rax+0xc],ecx
  4091fd:	mov    ecx,DWORD PTR [rbp-0x44]
  409200:	mov    rax,QWORD PTR [rbp-0x40]
  409204:	mov    DWORD PTR [rax],ecx
  409206:	mov    rdi,QWORD PTR [rbp-0x10]
  40920a:	mov    rsi,QWORD PTR [rbp-0x18]
  40920e:	movzx  edx,WORD PTR [rbp-0x1a]
  409212:	call   408e00 <flatcc_builder_create_vtable@@Base>
  409217:	xor    ecx,ecx
  409219:	mov    rsi,QWORD PTR [rbp-0x28]
  40921d:	mov    DWORD PTR [rsi],eax
  40921f:	cmp    ecx,eax
  409221:	jne    409233 <flatcc_builder_create_cached_vtable@@Base+0x223>
  409227:	mov    DWORD PTR [rbp-0x4],0x0
  40922e:	jmp    409328 <flatcc_builder_create_cached_vtable@@Base+0x318>
  409233:	cmp    QWORD PTR [rbp-0x30],0x0
  409238:	je     409251 <flatcc_builder_create_cached_vtable@@Base+0x241>
  40923e:	mov    rax,QWORD PTR [rbp-0x30]
  409242:	mov    ecx,DWORD PTR [rax+0x8]
  409245:	mov    rax,QWORD PTR [rbp-0x28]
  409249:	mov    DWORD PTR [rax+0x8],ecx
  40924c:	jmp    40931f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  409251:	mov    rax,QWORD PTR [rbp-0x10]
  409255:	cmp    QWORD PTR [rax+0x118],0x0
  40925d:	je     409299 <flatcc_builder_create_cached_vtable@@Base+0x289>
  409263:	mov    rax,QWORD PTR [rbp-0x10]
  409267:	mov    rax,QWORD PTR [rax+0x118]
  40926e:	mov    rcx,QWORD PTR [rbp-0x10]
  409272:	mov    edx,DWORD PTR [rcx+0xe0]
  409278:	movzx  esi,WORD PTR [rbp-0x1a]
  40927c:	add    edx,esi
  40927e:	mov    edx,edx
  409280:	mov    ecx,edx
  409282:	cmp    rax,rcx
  409285:	jae    409299 <flatcc_builder_create_cached_vtable@@Base+0x289>
  40928b:	mov    rdi,QWORD PTR [rbp-0x10]
  40928f:	call   4062e0 <flatcc_builder_flush_vtable_cache@@Base>
  409294:	jmp    40931a <flatcc_builder_create_cached_vtable@@Base+0x30a>
  409299:	xor    r8d,r8d
  40929c:	mov    rdi,QWORD PTR [rbp-0x10]
  4092a0:	mov    rax,QWORD PTR [rbp-0x10]
  4092a4:	mov    ecx,DWORD PTR [rax+0xe0]
  4092aa:	mov    edx,ecx
  4092ac:	movzx  ecx,WORD PTR [rbp-0x1a]
  4092b0:	mov    esi,0x2
  4092b5:	call   406860 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  4092ba:	mov    QWORD PTR [rbp-0x50],rax
  4092be:	cmp    rax,0x0
  4092c2:	jne    4092d4 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
  4092c8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4092cf:	jmp    409328 <flatcc_builder_create_cached_vtable@@Base+0x318>
  4092d4:	mov    rax,QWORD PTR [rbp-0x10]
  4092d8:	mov    ecx,DWORD PTR [rax+0xe0]
  4092de:	mov    rax,QWORD PTR [rbp-0x28]
  4092e2:	mov    DWORD PTR [rax+0x8],ecx
  4092e5:	movzx  ecx,WORD PTR [rbp-0x1a]
  4092e9:	mov    rax,QWORD PTR [rbp-0x10]
  4092ed:	add    ecx,DWORD PTR [rax+0xe0]
  4092f3:	mov    DWORD PTR [rax+0xe0],ecx
  4092f9:	mov    rax,QWORD PTR [rbp-0x50]
  4092fd:	mov    rdx,QWORD PTR [rbp-0x18]
  409301:	movzx  ecx,WORD PTR [rbp-0x1a]
  409305:	mov    esi,ecx
  409307:	mov    rdi,rax
  40930a:	mov    QWORD PTR [rbp-0x68],rsi
  40930e:	mov    rsi,rdx
  409311:	mov    rdx,QWORD PTR [rbp-0x68]
  409315:	call   4030c0 <memcpy@plt>
  40931a:	jmp    40931f <flatcc_builder_create_cached_vtable@@Base+0x30f>
  40931f:	mov    rax,QWORD PTR [rbp-0x28]
  409323:	mov    ecx,DWORD PTR [rax]
  409325:	mov    DWORD PTR [rbp-0x4],ecx
  409328:	mov    eax,DWORD PTR [rbp-0x4]
  40932b:	add    rsp,0x70
  40932f:	pop    rbp
  409330:	ret    
  409331:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40933b:	nop    DWORD PTR [rax+rax*1+0x0]
  409340:	push   rbp
  409341:	mov    rbp,rsp
  409344:	sub    rsp,0x30
  409348:	mov    QWORD PTR [rbp-0x10],rdi
  40934c:	mov    DWORD PTR [rbp-0x14],esi
  40934f:	mov    rax,QWORD PTR [rbp-0x10]
  409353:	cmp    QWORD PTR [rax+0xd8],0x0
  40935b:	jne    409385 <flatcc_builder_create_cached_vtable@@Base+0x375>
  409361:	mov    rdi,QWORD PTR [rbp-0x10]
  409365:	call   40bd60 <flatcc_builder_get_emit_context@@Base+0xe0>
  40936a:	cmp    eax,0x0
  40936d:	je     409380 <flatcc_builder_create_cached_vtable@@Base+0x370>
  409373:	mov    QWORD PTR [rbp-0x8],0x0
  40937b:	jmp    4093c4 <flatcc_builder_create_cached_vtable@@Base+0x3b4>
  409380:	jmp    409385 <flatcc_builder_create_cached_vtable@@Base+0x375>
  409385:	mov    rax,QWORD PTR [rbp-0x10]
  409389:	mov    rax,QWORD PTR [rax+0xa8]
  409390:	mov    QWORD PTR [rbp-0x20],rax
  409394:	mov    rax,QWORD PTR [rbp-0x20]
  409398:	mov    ecx,DWORD PTR [rbp-0x14]
  40939b:	mov    rdx,QWORD PTR [rbp-0x10]
  40939f:	mov    esi,0x20
  4093a4:	sub    rsi,QWORD PTR [rdx+0xd8]
  4093ab:	mov    DWORD PTR [rbp-0x24],ecx
  4093ae:	mov    ecx,esi
  4093b0:	mov    esi,DWORD PTR [rbp-0x24]
  4093b3:	shr    esi,cl
  4093b5:	mov    esi,esi
  4093b7:	mov    edx,esi
  4093b9:	shl    rdx,0x2
  4093bd:	add    rax,rdx
  4093c0:	mov    QWORD PTR [rbp-0x8],rax
  4093c4:	mov    rax,QWORD PTR [rbp-0x8]
  4093c8:	add    rsp,0x30
  4093cc:	pop    rbp
  4093cd:	ret    
  4093ce:	xchg   ax,ax

00000000004093d0 <flatcc_builder_create_table@@Base>:
  4093d0:	push   rbp
  4093d1:	mov    rbp,rsp
  4093d4:	sub    rsp,0xf0
  4093db:	mov    eax,DWORD PTR [rbp+0x10]
  4093de:	mov    QWORD PTR [rbp-0x10],rdi
  4093e2:	mov    QWORD PTR [rbp-0x18],rsi
  4093e6:	mov    QWORD PTR [rbp-0x20],rdx
  4093ea:	mov    WORD PTR [rbp-0x22],cx
  4093ee:	mov    QWORD PTR [rbp-0x30],r8
  4093f2:	mov    DWORD PTR [rbp-0x34],r9d
  4093f6:	cmp    DWORD PTR [rbp-0x34],0x0
  4093fa:	jl     409405 <flatcc_builder_create_table@@Base+0x35>
  409400:	jmp    409424 <flatcc_builder_create_table@@Base+0x54>
  409405:	lea    rdi,[rip+0x4edc]        # 40e2e8 <flatcc_builder_padding_base@@Base+0x988>
  40940c:	lea    rsi,[rip+0x475f]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409413:	mov    edx,0x4d5
  409418:	lea    rcx,[rip+0x4edb]        # 40e2fa <flatcc_builder_padding_base@@Base+0x99a>
  40941f:	call   403070 <__assert_fail@plt>
  409424:	mov    eax,DWORD PTR [rbp+0x10]
  409427:	and    eax,0x1
  40942a:	cmp    eax,0x0
  40942d:	je     409438 <flatcc_builder_create_table@@Base+0x68>
  409433:	jmp    409457 <flatcc_builder_create_table@@Base+0x87>
  409438:	lea    rdi,[rip+0x4f57]        # 40e396 <flatcc_builder_padding_base@@Base+0xa36>
  40943f:	lea    rsi,[rip+0x472c]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409446:	mov    edx,0x4db
  40944b:	lea    rcx,[rip+0x4ea8]        # 40e2fa <flatcc_builder_padding_base@@Base+0x99a>
  409452:	call   403070 <__assert_fail@plt>
  409457:	lea    rdi,[rbp-0x22]
  40945b:	mov    esi,0x4
  409460:	call   408940 <flatcc_builder_start_vector@@Base+0xb0>
  409465:	mov    rdi,QWORD PTR [rbp-0x10]
  409469:	movzx  esi,WORD PTR [rbp-0x22]
  40946d:	call   4074d0 <flatcc_builder_create_buffer@@Base+0x420>
  409472:	mov    rdi,QWORD PTR [rbp-0x10]
  409476:	mov    rax,QWORD PTR [rbp-0x20]
  40947a:	mov    esi,eax
  40947c:	movzx  edx,WORD PTR [rbp-0x22]
  409480:	call   406f70 <flatcc_builder_embed_buffer@@Base+0x400>
  409485:	mov    DWORD PTR [rbp-0x3c],eax
  409488:	mov    rcx,QWORD PTR [rbp-0x10]
  40948c:	mov    eax,DWORD PTR [rcx+0xf0]
  409492:	mov    edx,DWORD PTR [rbp-0x3c]
  409495:	mov    ecx,edx
  409497:	add    rcx,QWORD PTR [rbp-0x20]
  40949b:	add    rcx,0x4
  4094a2:	sub    eax,ecx
  4094a4:	mov    DWORD PTR [rbp-0x4c],eax
  4094a7:	mov    eax,DWORD PTR [rbp+0x10]
  4094aa:	sub    eax,0x1
  4094ad:	mov    DWORD PTR [rbp-0x48],eax
  4094b0:	mov    eax,DWORD PTR [rbp-0x4c]
  4094b3:	sub    eax,DWORD PTR [rbp-0x48]
  4094b6:	mov    DWORD PTR [rbp-0x40],eax
  4094b9:	mov    eax,DWORD PTR [rbp-0x4c]
  4094bc:	sub    eax,DWORD PTR [rbp-0x40]
  4094bf:	cmp    eax,DWORD PTR [rbp-0x48]
  4094c2:	je     4094d4 <flatcc_builder_create_table@@Base+0x104>
  4094c8:	mov    DWORD PTR [rbp-0x4],0xffffffff
  4094cf:	jmp    4096bb <flatcc_builder_create_table@@Base+0x2eb>
  4094d4:	mov    edi,DWORD PTR [rbp-0x40]
  4094d7:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  4094dc:	mov    DWORD PTR [rbp-0x44],eax
  4094df:	mov    DWORD PTR [rbp-0x38],0x0
  4094e6:	mov    eax,DWORD PTR [rbp-0x38]
  4094e9:	cmp    eax,DWORD PTR [rbp-0x34]
  4094ec:	jge    40954b <flatcc_builder_create_table@@Base+0x17b>
  4094f2:	mov    rax,QWORD PTR [rbp-0x18]
  4094f6:	mov    rcx,QWORD PTR [rbp-0x30]
  4094fa:	movsxd rdx,DWORD PTR [rbp-0x38]
  4094fe:	movzx  esi,WORD PTR [rcx+rdx*2]
  409502:	mov    ecx,esi
  409504:	add    rax,rcx
  409507:	mov    QWORD PTR [rbp-0x58],rax
  40950b:	mov    rax,QWORD PTR [rbp-0x58]
  40950f:	mov    esi,DWORD PTR [rax]
  409511:	sub    esi,DWORD PTR [rbp-0x4c]
  409514:	mov    rax,QWORD PTR [rbp-0x30]
  409518:	movsxd rcx,DWORD PTR [rbp-0x38]
  40951c:	movzx  edi,WORD PTR [rax+rcx*2]
  409520:	sub    esi,edi
  409522:	mov    esi,esi
  409524:	mov    eax,esi
  409526:	sub    rax,0x4
  40952c:	mov    DWORD PTR [rbp-0x50],eax
  40952f:	mov    edi,DWORD PTR [rbp-0x50]
  409532:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  409537:	mov    rcx,QWORD PTR [rbp-0x58]
  40953b:	mov    DWORD PTR [rcx],eax
  40953d:	mov    eax,DWORD PTR [rbp-0x38]
  409540:	add    eax,0x1
  409543:	mov    DWORD PTR [rbp-0x38],eax
  409546:	jmp    4094e6 <flatcc_builder_create_table@@Base+0x116>
  40954b:	mov    QWORD PTR [rbp-0xe8],0x0
  409556:	mov    DWORD PTR [rbp-0xe0],0x0
  409560:	mov    rax,QWORD PTR [rbp-0xe8]
  409567:	add    rax,0x4
  40956d:	mov    QWORD PTR [rbp-0xe8],rax
  409574:	lea    rax,[rbp-0x44]
  409578:	lea    rcx,[rbp-0xe8]
  40957f:	mov    rdx,rcx
  409582:	add    rdx,0x10
  409589:	movsxd rsi,DWORD PTR [rbp-0xe0]
  409590:	shl    rsi,0x4
  409594:	add    rdx,rsi
  409597:	mov    QWORD PTR [rdx],rax
  40959a:	add    rcx,0x10
  4095a1:	movsxd rax,DWORD PTR [rbp-0xe0]
  4095a8:	shl    rax,0x4
  4095ac:	add    rcx,rax
  4095af:	mov    QWORD PTR [rcx+0x8],0x4
  4095b7:	mov    edi,DWORD PTR [rbp-0xe0]
  4095bd:	add    edi,0x1
  4095c0:	mov    DWORD PTR [rbp-0xe0],edi
  4095c6:	cmp    QWORD PTR [rbp-0x20],0x0
  4095cb:	jbe    409635 <flatcc_builder_create_table@@Base+0x265>
  4095d1:	mov    rax,QWORD PTR [rbp-0x20]
  4095d5:	add    rax,QWORD PTR [rbp-0xe8]
  4095dc:	mov    QWORD PTR [rbp-0xe8],rax
  4095e3:	mov    rax,QWORD PTR [rbp-0x18]
  4095e7:	lea    rcx,[rbp-0xe8]
  4095ee:	mov    rdx,rcx
  4095f1:	add    rdx,0x10
  4095f8:	movsxd rsi,DWORD PTR [rbp-0xe0]
  4095ff:	shl    rsi,0x4
  409603:	add    rdx,rsi
  409606:	mov    QWORD PTR [rdx],rax
  409609:	mov    rax,QWORD PTR [rbp-0x20]
  40960d:	add    rcx,0x10
  409614:	movsxd rdx,DWORD PTR [rbp-0xe0]
  40961b:	shl    rdx,0x4
  40961f:	add    rcx,rdx
  409622:	mov    QWORD PTR [rcx+0x8],rax
  409626:	mov    edi,DWORD PTR [rbp-0xe0]
  40962c:	add    edi,0x1
  40962f:	mov    DWORD PTR [rbp-0xe0],edi
  409635:	cmp    DWORD PTR [rbp-0x3c],0x0
  409639:	jbe    4096a8 <flatcc_builder_create_table@@Base+0x2d8>
  40963f:	lea    rax,[rip+0x431a]        # 40d960 <flatcc_builder_padding_base@@Base>
  409646:	mov    ecx,DWORD PTR [rbp-0x3c]
  409649:	mov    edx,ecx
  40964b:	add    rdx,QWORD PTR [rbp-0xe8]
  409652:	mov    QWORD PTR [rbp-0xe8],rdx
  409659:	lea    rdx,[rbp-0xe8]
  409660:	mov    rsi,rdx
  409663:	add    rsi,0x10
  40966a:	movsxd rdi,DWORD PTR [rbp-0xe0]
  409671:	shl    rdi,0x4
  409675:	add    rsi,rdi
  409678:	mov    QWORD PTR [rsi],rax
  40967b:	mov    ecx,DWORD PTR [rbp-0x3c]
  40967e:	mov    eax,ecx
  409680:	add    rdx,0x10
  409687:	movsxd rsi,DWORD PTR [rbp-0xe0]
  40968e:	shl    rsi,0x4
  409692:	add    rdx,rsi
  409695:	mov    QWORD PTR [rdx+0x8],rax
  409699:	mov    ecx,DWORD PTR [rbp-0xe0]
  40969f:	add    ecx,0x1
  4096a2:	mov    DWORD PTR [rbp-0xe0],ecx
  4096a8:	mov    rdi,QWORD PTR [rbp-0x10]
  4096ac:	lea    rsi,[rbp-0xe8]
  4096b3:	call   406fb0 <flatcc_builder_embed_buffer@@Base+0x440>
  4096b8:	mov    DWORD PTR [rbp-0x4],eax
  4096bb:	mov    eax,DWORD PTR [rbp-0x4]
  4096be:	add    rsp,0xf0
  4096c5:	pop    rbp
  4096c6:	ret    
  4096c7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004096d0 <flatcc_builder_check_required_field@@Base>:
  4096d0:	push   rbp
  4096d1:	mov    rbp,rsp
  4096d4:	sub    rsp,0x10
  4096d8:	mov    QWORD PTR [rbp-0x8],rdi
  4096dc:	mov    WORD PTR [rbp-0xa],si
  4096e0:	mov    rax,QWORD PTR [rbp-0x8]
  4096e4:	mov    rax,QWORD PTR [rax+0x30]
  4096e8:	movzx  ecx,WORD PTR [rax+0xe]
  4096ec:	cmp    ecx,0x3
  4096ef:	jne    4096fa <flatcc_builder_check_required_field@@Base+0x2a>
  4096f5:	jmp    409719 <flatcc_builder_check_required_field@@Base+0x49>
  4096fa:	lea    rdi,[rip+0x4ca0]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  409701:	lea    rsi,[rip+0x446a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409708:	mov    edx,0x4f8
  40970d:	lea    rcx,[rip+0x4cb8]        # 40e3cc <flatcc_builder_padding_base@@Base+0xa6c>
  409714:	call   403070 <__assert_fail@plt>
  409719:	xor    eax,eax
  40971b:	movzx  ecx,WORD PTR [rbp-0xa]
  40971f:	mov    rdx,QWORD PTR [rbp-0x8]
  409723:	movzx  esi,WORD PTR [rdx+0x10]
  409727:	cmp    ecx,esi
  409729:	mov    BYTE PTR [rbp-0xb],al
  40972c:	jge    40974f <flatcc_builder_check_required_field@@Base+0x7f>
  409732:	mov    rax,QWORD PTR [rbp-0x8]
  409736:	mov    rax,QWORD PTR [rax+0x8]
  40973a:	movzx  ecx,WORD PTR [rbp-0xa]
  40973e:	mov    edx,ecx
  409740:	movzx  ecx,WORD PTR [rax+rdx*2]
  409744:	cmp    ecx,0x0
  409747:	setne  sil
  40974b:	mov    BYTE PTR [rbp-0xb],sil
  40974f:	mov    al,BYTE PTR [rbp-0xb]
  409752:	and    al,0x1
  409754:	movzx  eax,al
  409757:	add    rsp,0x10
  40975b:	pop    rbp
  40975c:	ret    
  40975d:	nop    DWORD PTR [rax]

0000000000409760 <flatcc_builder_check_union_field@@Base>:
  409760:	push   rbp
  409761:	mov    rbp,rsp
  409764:	sub    rsp,0x20
  409768:	mov    QWORD PTR [rbp-0x10],rdi
  40976c:	mov    WORD PTR [rbp-0x12],si
  409770:	mov    rax,QWORD PTR [rbp-0x10]
  409774:	mov    rax,QWORD PTR [rax+0x30]
  409778:	movzx  ecx,WORD PTR [rax+0xe]
  40977c:	cmp    ecx,0x3
  40977f:	jne    40978a <flatcc_builder_check_union_field@@Base+0x2a>
  409785:	jmp    4097a9 <flatcc_builder_check_union_field@@Base+0x49>
  40978a:	lea    rdi,[rip+0x4c10]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  409791:	lea    rsi,[rip+0x43da]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409798:	mov    edx,0x4ff
  40979d:	lea    rcx,[rip+0x4c7b]        # 40e41f <flatcc_builder_padding_base@@Base+0xabf>
  4097a4:	call   403070 <__assert_fail@plt>
  4097a9:	movzx  eax,WORD PTR [rbp-0x12]
  4097ad:	cmp    eax,0x0
  4097b0:	je     4097ca <flatcc_builder_check_union_field@@Base+0x6a>
  4097b6:	movzx  eax,WORD PTR [rbp-0x12]
  4097ba:	mov    rcx,QWORD PTR [rbp-0x10]
  4097be:	movzx  edx,WORD PTR [rcx+0x10]
  4097c2:	cmp    eax,edx
  4097c4:	jl     4097d6 <flatcc_builder_check_union_field@@Base+0x76>
  4097ca:	mov    DWORD PTR [rbp-0x4],0x0
  4097d1:	jmp    409896 <flatcc_builder_check_union_field@@Base+0x136>
  4097d6:	mov    rax,QWORD PTR [rbp-0x10]
  4097da:	mov    rax,QWORD PTR [rax+0x8]
  4097de:	movzx  ecx,WORD PTR [rbp-0x12]
  4097e2:	sub    ecx,0x1
  4097e5:	movsxd rdx,ecx
  4097e8:	movzx  ecx,WORD PTR [rax+rdx*2]
  4097ec:	cmp    ecx,0x0
  4097ef:	jne    40981e <flatcc_builder_check_union_field@@Base+0xbe>
  4097f5:	mov    rax,QWORD PTR [rbp-0x10]
  4097f9:	mov    rax,QWORD PTR [rax+0x8]
  4097fd:	movzx  ecx,WORD PTR [rbp-0x12]
  409801:	mov    edx,ecx
  409803:	movzx  ecx,WORD PTR [rax+rdx*2]
  409807:	cmp    ecx,0x0
  40980a:	sete   sil
  40980e:	and    sil,0x1
  409812:	movzx  ecx,sil
  409816:	mov    DWORD PTR [rbp-0x4],ecx
  409819:	jmp    409896 <flatcc_builder_check_union_field@@Base+0x136>
  40981e:	mov    rax,QWORD PTR [rbp-0x10]
  409822:	mov    rax,QWORD PTR [rax+0x18]
  409826:	mov    rcx,QWORD PTR [rbp-0x10]
  40982a:	mov    rcx,QWORD PTR [rcx+0x8]
  40982e:	movzx  edx,WORD PTR [rbp-0x12]
  409832:	sub    edx,0x1
  409835:	movsxd rsi,edx
  409838:	movzx  edx,WORD PTR [rcx+rsi*2]
  40983c:	movsxd rcx,edx
  40983f:	cmp    BYTE PTR [rax+rcx*1],0x0
  409843:	je     409872 <flatcc_builder_check_union_field@@Base+0x112>
  409849:	mov    rax,QWORD PTR [rbp-0x10]
  40984d:	mov    rax,QWORD PTR [rax+0x8]
  409851:	movzx  ecx,WORD PTR [rbp-0x12]
  409855:	mov    edx,ecx
  409857:	movzx  ecx,WORD PTR [rax+rdx*2]
  40985b:	cmp    ecx,0x0
  40985e:	setne  sil
  409862:	and    sil,0x1
  409866:	movzx  ecx,sil
  40986a:	mov    DWORD PTR [rbp-0x4],ecx
  40986d:	jmp    409896 <flatcc_builder_check_union_field@@Base+0x136>
  409872:	mov    rax,QWORD PTR [rbp-0x10]
  409876:	mov    rax,QWORD PTR [rax+0x8]
  40987a:	movzx  ecx,WORD PTR [rbp-0x12]
  40987e:	mov    edx,ecx
  409880:	movzx  ecx,WORD PTR [rax+rdx*2]
  409884:	cmp    ecx,0x0
  409887:	sete   sil
  40988b:	and    sil,0x1
  40988f:	movzx  ecx,sil
  409893:	mov    DWORD PTR [rbp-0x4],ecx
  409896:	mov    eax,DWORD PTR [rbp-0x4]
  409899:	add    rsp,0x20
  40989d:	pop    rbp
  40989e:	ret    
  40989f:	nop

00000000004098a0 <flatcc_builder_check_required@@Base>:
  4098a0:	push   rbp
  4098a1:	mov    rbp,rsp
  4098a4:	sub    rsp,0x20
  4098a8:	mov    QWORD PTR [rbp-0x10],rdi
  4098ac:	mov    QWORD PTR [rbp-0x18],rsi
  4098b0:	mov    DWORD PTR [rbp-0x1c],edx
  4098b3:	mov    rax,QWORD PTR [rbp-0x10]
  4098b7:	mov    rax,QWORD PTR [rax+0x30]
  4098bb:	movzx  ecx,WORD PTR [rax+0xe]
  4098bf:	cmp    ecx,0x3
  4098c2:	jne    4098cd <flatcc_builder_check_required@@Base+0x2d>
  4098c8:	jmp    4098ec <flatcc_builder_check_required@@Base+0x4c>
  4098cd:	lea    rdi,[rip+0x4acd]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  4098d4:	lea    rsi,[rip+0x4297]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4098db:	mov    edx,0x511
  4098e0:	lea    rcx,[rip+0x4b88]        # 40e46f <flatcc_builder_padding_base@@Base+0xb0f>
  4098e7:	call   403070 <__assert_fail@plt>
  4098ec:	mov    rax,QWORD PTR [rbp-0x10]
  4098f0:	movzx  ecx,WORD PTR [rax+0x10]
  4098f4:	cmp    ecx,DWORD PTR [rbp-0x1c]
  4098f7:	jge    409909 <flatcc_builder_check_required@@Base+0x69>
  4098fd:	mov    DWORD PTR [rbp-0x4],0x0
  409904:	jmp    409965 <flatcc_builder_check_required@@Base+0xc5>
  409909:	mov    DWORD PTR [rbp-0x20],0x0
  409910:	mov    eax,DWORD PTR [rbp-0x20]
  409913:	cmp    eax,DWORD PTR [rbp-0x1c]
  409916:	jge    40995e <flatcc_builder_check_required@@Base+0xbe>
  40991c:	mov    rax,QWORD PTR [rbp-0x10]
  409920:	mov    rax,QWORD PTR [rax+0x8]
  409924:	mov    rcx,QWORD PTR [rbp-0x18]
  409928:	movsxd rdx,DWORD PTR [rbp-0x20]
  40992c:	movzx  esi,WORD PTR [rcx+rdx*2]
  409930:	mov    ecx,esi
  409932:	movzx  esi,WORD PTR [rax+rcx*2]
  409936:	cmp    esi,0x0
  409939:	jne    40994b <flatcc_builder_check_required@@Base+0xab>
  40993f:	mov    DWORD PTR [rbp-0x4],0x0
  409946:	jmp    409965 <flatcc_builder_check_required@@Base+0xc5>
  40994b:	jmp    409950 <flatcc_builder_check_required@@Base+0xb0>
  409950:	mov    eax,DWORD PTR [rbp-0x20]
  409953:	add    eax,0x1
  409956:	mov    DWORD PTR [rbp-0x20],eax
  409959:	jmp    409910 <flatcc_builder_check_required@@Base+0x70>
  40995e:	mov    DWORD PTR [rbp-0x4],0x1
  409965:	mov    eax,DWORD PTR [rbp-0x4]
  409968:	add    rsp,0x20
  40996c:	pop    rbp
  40996d:	ret    
  40996e:	xchg   ax,ax

0000000000409970 <flatcc_builder_end_table@@Base>:
  409970:	push   rbp
  409971:	mov    rbp,rsp
  409974:	sub    rsp,0x40
  409978:	mov    QWORD PTR [rbp-0x10],rdi
  40997c:	mov    rax,QWORD PTR [rbp-0x10]
  409980:	mov    rax,QWORD PTR [rax+0x30]
  409984:	movzx  ecx,WORD PTR [rax+0xe]
  409988:	cmp    ecx,0x3
  40998b:	jne    409996 <flatcc_builder_end_table@@Base+0x26>
  409991:	jmp    4099b5 <flatcc_builder_end_table@@Base+0x45>
  409996:	lea    rdi,[rip+0x4a04]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40999d:	lea    rsi,[rip+0x41ce]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  4099a4:	mov    edx,0x525
  4099a9:	lea    rcx,[rip+0x4b19]        # 40e4c9 <flatcc_builder_padding_base@@Base+0xb69>
  4099b0:	call   403070 <__assert_fail@plt>
  4099b5:	mov    rax,QWORD PTR [rbp-0x10]
  4099b9:	mov    rax,QWORD PTR [rax+0x8]
  4099bd:	add    rax,0xfffffffffffffffc
  4099c3:	mov    QWORD PTR [rbp-0x18],rax
  4099c7:	mov    rax,QWORD PTR [rbp-0x10]
  4099cb:	movzx  ecx,WORD PTR [rax+0x10]
  4099cf:	add    ecx,0x2
  4099d2:	movsxd rax,ecx
  4099d5:	shl    rax,0x1
  4099d9:	mov    WORD PTR [rbp-0x1a],ax
  4099dd:	mov    ax,WORD PTR [rbp-0x1a]
  4099e1:	mov    rdx,QWORD PTR [rbp-0x18]
  4099e5:	mov    WORD PTR [rdx],ax
  4099e8:	mov    rdx,QWORD PTR [rbp-0x10]
  4099ec:	mov    ecx,DWORD PTR [rdx+0x20]
  4099ef:	movzx  esi,cx
  4099f2:	mov    edx,esi
  4099f4:	add    rdx,0x4
  4099fb:	mov    rdi,QWORD PTR [rbp-0x18]
  4099ff:	mov    WORD PTR [rdi+0x2],dx
  409a03:	mov    rdi,QWORD PTR [rbp-0x18]
  409a07:	movzx  esi,WORD PTR [rdi]
  409a0a:	mov    rdi,QWORD PTR [rbp-0x10]
  409a0e:	xor    esi,DWORD PTR [rdi+0x14]
  409a11:	imul   esi,esi,0x9e3779b1
  409a17:	mov    rdi,QWORD PTR [rbp-0x18]
  409a1b:	movzx  r8d,WORD PTR [rdi+0x2]
  409a20:	xor    esi,r8d
  409a23:	imul   esi,esi,0x9e3779b1
  409a29:	mov    rdi,QWORD PTR [rbp-0x10]
  409a2d:	mov    DWORD PTR [rdi+0x14],esi
  409a30:	mov    rdi,QWORD PTR [rbp-0x10]
  409a34:	mov    rsi,QWORD PTR [rbp-0x18]
  409a38:	mov    ax,WORD PTR [rbp-0x1a]
  409a3c:	mov    r9,QWORD PTR [rbp-0x10]
  409a40:	mov    ecx,DWORD PTR [r9+0x14]
  409a44:	movzx  edx,ax
  409a47:	call   409010 <flatcc_builder_create_cached_vtable@@Base>
  409a4c:	mov    DWORD PTR [rbp-0x24],eax
  409a4f:	cmp    eax,0x0
  409a52:	jne    409a64 <flatcc_builder_end_table@@Base+0xf4>
  409a58:	mov    DWORD PTR [rbp-0x4],0x0
  409a5f:	jmp    409b7f <flatcc_builder_end_table@@Base+0x20f>
  409a64:	xor    esi,esi
  409a66:	mov    rax,QWORD PTR [rbp-0x18]
  409a6a:	movzx  ecx,WORD PTR [rbp-0x1a]
  409a6e:	mov    edx,ecx
  409a70:	mov    rdi,rax
  409a73:	call   403080 <memset@plt>
  409a78:	mov    rax,QWORD PTR [rbp-0x10]
  409a7c:	mov    rax,QWORD PTR [rax+0x88]
  409a83:	mov    rdx,QWORD PTR [rbp-0x10]
  409a87:	mov    rdx,QWORD PTR [rdx+0x30]
  409a8b:	mov    ecx,DWORD PTR [rdx+0x14]
  409a8e:	mov    edx,ecx
  409a90:	add    rax,rdx
  409a93:	mov    QWORD PTR [rbp-0x30],rax
  409a97:	mov    rax,QWORD PTR [rbp-0x10]
  409a9b:	mov    rax,QWORD PTR [rax]
  409a9e:	mov    rdx,QWORD PTR [rbp-0x30]
  409aa2:	sub    rax,rdx
  409aa5:	sar    rax,0x1
  409aa9:	mov    DWORD PTR [rbp-0x28],eax
  409aac:	mov    rdi,QWORD PTR [rbp-0x10]
  409ab0:	mov    rdx,QWORD PTR [rbp-0x10]
  409ab4:	mov    rsi,QWORD PTR [rdx+0x18]
  409ab8:	mov    rdx,QWORD PTR [rbp-0x10]
  409abc:	mov    eax,DWORD PTR [rdx+0x20]
  409abf:	mov    edx,eax
  409ac1:	mov    r8,QWORD PTR [rbp-0x10]
  409ac5:	mov    r9w,WORD PTR [r8+0xea]
  409acd:	mov    r8,QWORD PTR [rbp-0x30]
  409ad1:	mov    eax,DWORD PTR [rbp-0x28]
  409ad4:	mov    ecx,DWORD PTR [rbp-0x24]
  409ad7:	movzx  r10d,r9w
  409adb:	mov    DWORD PTR [rbp-0x34],ecx
  409ade:	mov    ecx,r10d
  409ae1:	mov    r9d,eax
  409ae4:	mov    eax,DWORD PTR [rbp-0x34]
  409ae7:	mov    DWORD PTR [rsp],eax
  409aea:	call   4093d0 <flatcc_builder_create_table@@Base>
  409aef:	xor    ecx,ecx
  409af1:	mov    DWORD PTR [rbp-0x20],eax
  409af4:	cmp    ecx,eax
  409af6:	jne    409b08 <flatcc_builder_end_table@@Base+0x198>
  409afc:	mov    DWORD PTR [rbp-0x4],0x0
  409b03:	jmp    409b7f <flatcc_builder_end_table@@Base+0x20f>
  409b08:	mov    rax,QWORD PTR [rbp-0x10]
  409b0c:	mov    rax,QWORD PTR [rax+0x30]
  409b10:	mov    ecx,DWORD PTR [rax+0x18]
  409b13:	mov    rax,QWORD PTR [rbp-0x10]
  409b17:	mov    DWORD PTR [rax+0x14],ecx
  409b1a:	mov    rax,QWORD PTR [rbp-0x10]
  409b1e:	mov    rax,QWORD PTR [rax+0x30]
  409b22:	mov    dx,WORD PTR [rax+0x1c]
  409b26:	mov    rax,QWORD PTR [rbp-0x10]
  409b2a:	mov    WORD PTR [rax+0x10],dx
  409b2e:	mov    rax,QWORD PTR [rbp-0x10]
  409b32:	mov    rax,QWORD PTR [rax+0x58]
  409b36:	mov    rsi,QWORD PTR [rbp-0x10]
  409b3a:	mov    rsi,QWORD PTR [rsi+0x30]
  409b3e:	mov    ecx,DWORD PTR [rsi+0x10]
  409b41:	mov    esi,ecx
  409b43:	add    rax,rsi
  409b46:	mov    rsi,QWORD PTR [rbp-0x10]
  409b4a:	mov    QWORD PTR [rsi+0x8],rax
  409b4e:	mov    rax,QWORD PTR [rbp-0x10]
  409b52:	mov    rax,QWORD PTR [rax+0x88]
  409b59:	mov    rsi,QWORD PTR [rbp-0x10]
  409b5d:	mov    rsi,QWORD PTR [rsi+0x30]
  409b61:	mov    ecx,DWORD PTR [rsi+0x14]
  409b64:	mov    esi,ecx
  409b66:	add    rax,rsi
  409b69:	mov    rsi,QWORD PTR [rbp-0x10]
  409b6d:	mov    QWORD PTR [rsi],rax
  409b70:	mov    rdi,QWORD PTR [rbp-0x10]
  409b74:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  409b79:	mov    ecx,DWORD PTR [rbp-0x20]
  409b7c:	mov    DWORD PTR [rbp-0x4],ecx
  409b7f:	mov    eax,DWORD PTR [rbp-0x4]
  409b82:	add    rsp,0x40
  409b86:	pop    rbp
  409b87:	ret    
  409b88:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409b90 <flatcc_builder_create_vector@@Base>:
  409b90:	push   rbp
  409b91:	mov    rbp,rsp
  409b94:	sub    rsp,0xe0
  409b9b:	mov    QWORD PTR [rbp-0x10],rdi
  409b9f:	mov    QWORD PTR [rbp-0x18],rsi
  409ba3:	mov    QWORD PTR [rbp-0x20],rdx
  409ba7:	mov    QWORD PTR [rbp-0x28],rcx
  409bab:	mov    WORD PTR [rbp-0x2a],r8w
  409bb0:	mov    QWORD PTR [rbp-0x38],r9
  409bb4:	mov    rax,QWORD PTR [rbp-0x20]
  409bb8:	cmp    rax,QWORD PTR [rbp-0x38]
  409bbc:	jbe    409c00 <flatcc_builder_create_vector@@Base+0x70>
  409bc2:	mov    rax,QWORD PTR [rbp-0x20]
  409bc6:	cmp    rax,QWORD PTR [rbp-0x38]
  409bca:	ja     409bd5 <flatcc_builder_create_vector@@Base+0x45>
  409bd0:	jmp    409bf4 <flatcc_builder_create_vector@@Base+0x64>
  409bd5:	lea    rdi,[rip+0x492f]        # 40e50b <flatcc_builder_padding_base@@Base+0xbab>
  409bdc:	lea    rsi,[rip+0x3f8f]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409be3:	mov    edx,0x555
  409be8:	lea    rcx,[rip+0x492f]        # 40e51e <flatcc_builder_padding_base@@Base+0xbbe>
  409bef:	call   403070 <__assert_fail@plt>
  409bf4:	mov    DWORD PTR [rbp-0x4],0x0
  409bfb:	jmp    409dbc <flatcc_builder_create_vector@@Base+0x22c>
  409c00:	lea    rdi,[rbp-0x2a]
  409c04:	mov    esi,0x4
  409c09:	call   408940 <flatcc_builder_start_vector@@Base+0xb0>
  409c0e:	mov    rdi,QWORD PTR [rbp-0x10]
  409c12:	movzx  esi,WORD PTR [rbp-0x2a]
  409c16:	call   4074d0 <flatcc_builder_create_buffer@@Base+0x420>
  409c1b:	mov    rax,QWORD PTR [rbp-0x20]
  409c1f:	mov    rcx,QWORD PTR [rbp-0x28]
  409c23:	imul   eax,ecx
  409c26:	mov    DWORD PTR [rbp-0x3c],eax
  409c29:	mov    rdx,QWORD PTR [rbp-0x20]
  409c2d:	mov    edi,edx
  409c2f:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  409c34:	mov    DWORD PTR [rbp-0x44],eax
  409c37:	mov    rdi,QWORD PTR [rbp-0x10]
  409c3b:	mov    esi,DWORD PTR [rbp-0x3c]
  409c3e:	movzx  edx,WORD PTR [rbp-0x2a]
  409c42:	call   406f70 <flatcc_builder_embed_buffer@@Base+0x400>
  409c47:	mov    DWORD PTR [rbp-0x40],eax
  409c4a:	mov    QWORD PTR [rbp-0xd8],0x0
  409c55:	mov    DWORD PTR [rbp-0xd0],0x0
  409c5f:	mov    rdi,QWORD PTR [rbp-0xd8]
  409c66:	add    rdi,0x4
  409c6d:	mov    QWORD PTR [rbp-0xd8],rdi
  409c74:	lea    rdi,[rbp-0x44]
  409c78:	lea    r8,[rbp-0xd8]
  409c7f:	mov    r9,r8
  409c82:	add    r9,0x10
  409c89:	movsxd r10,DWORD PTR [rbp-0xd0]
  409c90:	shl    r10,0x4
  409c94:	add    r9,r10
  409c97:	mov    QWORD PTR [r9],rdi
  409c9a:	add    r8,0x10
  409ca1:	movsxd rdi,DWORD PTR [rbp-0xd0]
  409ca8:	shl    rdi,0x4
  409cac:	add    r8,rdi
  409caf:	mov    QWORD PTR [r8+0x8],0x4
  409cb7:	mov    eax,DWORD PTR [rbp-0xd0]
  409cbd:	add    eax,0x1
  409cc0:	mov    DWORD PTR [rbp-0xd0],eax
  409cc6:	cmp    DWORD PTR [rbp-0x3c],0x0
  409cca:	jbe    409d36 <flatcc_builder_create_vector@@Base+0x1a6>
  409cd0:	mov    eax,DWORD PTR [rbp-0x3c]
  409cd3:	mov    ecx,eax
  409cd5:	add    rcx,QWORD PTR [rbp-0xd8]
  409cdc:	mov    QWORD PTR [rbp-0xd8],rcx
  409ce3:	mov    rcx,QWORD PTR [rbp-0x18]
  409ce7:	lea    rdx,[rbp-0xd8]
  409cee:	mov    rsi,rdx
  409cf1:	add    rsi,0x10
  409cf8:	movsxd rdi,DWORD PTR [rbp-0xd0]
  409cff:	shl    rdi,0x4
  409d03:	add    rsi,rdi
  409d06:	mov    QWORD PTR [rsi],rcx
  409d09:	mov    eax,DWORD PTR [rbp-0x3c]
  409d0c:	mov    ecx,eax
  409d0e:	add    rdx,0x10
  409d15:	movsxd rsi,DWORD PTR [rbp-0xd0]
  409d1c:	shl    rsi,0x4
  409d20:	add    rdx,rsi
  409d23:	mov    QWORD PTR [rdx+0x8],rcx
  409d27:	mov    eax,DWORD PTR [rbp-0xd0]
  409d2d:	add    eax,0x1
  409d30:	mov    DWORD PTR [rbp-0xd0],eax
  409d36:	cmp    DWORD PTR [rbp-0x40],0x0
  409d3a:	jbe    409da9 <flatcc_builder_create_vector@@Base+0x219>
  409d40:	lea    rax,[rip+0x3c19]        # 40d960 <flatcc_builder_padding_base@@Base>
  409d47:	mov    ecx,DWORD PTR [rbp-0x40]
  409d4a:	mov    edx,ecx
  409d4c:	add    rdx,QWORD PTR [rbp-0xd8]
  409d53:	mov    QWORD PTR [rbp-0xd8],rdx
  409d5a:	lea    rdx,[rbp-0xd8]
  409d61:	mov    rsi,rdx
  409d64:	add    rsi,0x10
  409d6b:	movsxd rdi,DWORD PTR [rbp-0xd0]
  409d72:	shl    rdi,0x4
  409d76:	add    rsi,rdi
  409d79:	mov    QWORD PTR [rsi],rax
  409d7c:	mov    ecx,DWORD PTR [rbp-0x40]
  409d7f:	mov    eax,ecx
  409d81:	add    rdx,0x10
  409d88:	movsxd rsi,DWORD PTR [rbp-0xd0]
  409d8f:	shl    rsi,0x4
  409d93:	add    rdx,rsi
  409d96:	mov    QWORD PTR [rdx+0x8],rax
  409d9a:	mov    ecx,DWORD PTR [rbp-0xd0]
  409da0:	add    ecx,0x1
  409da3:	mov    DWORD PTR [rbp-0xd0],ecx
  409da9:	mov    rdi,QWORD PTR [rbp-0x10]
  409dad:	lea    rsi,[rbp-0xd8]
  409db4:	call   406fb0 <flatcc_builder_embed_buffer@@Base+0x440>
  409db9:	mov    DWORD PTR [rbp-0x4],eax
  409dbc:	mov    eax,DWORD PTR [rbp-0x4]
  409dbf:	add    rsp,0xe0
  409dc6:	pop    rbp
  409dc7:	ret    
  409dc8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000409dd0 <flatcc_builder_end_vector@@Base>:
  409dd0:	push   rbp
  409dd1:	mov    rbp,rsp
  409dd4:	sub    rsp,0x20
  409dd8:	mov    QWORD PTR [rbp-0x10],rdi
  409ddc:	mov    rax,QWORD PTR [rbp-0x10]
  409de0:	mov    rax,QWORD PTR [rax+0x30]
  409de4:	movzx  ecx,WORD PTR [rax+0xe]
  409de8:	cmp    ecx,0x4
  409deb:	jne    409df6 <flatcc_builder_end_vector@@Base+0x26>
  409df1:	jmp    409e15 <flatcc_builder_end_vector@@Base+0x45>
  409df6:	lea    rdi,[rip+0x40b2]        # 40deaf <flatcc_builder_padding_base@@Base+0x54f>
  409dfd:	lea    rsi,[rip+0x3d6e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  409e04:	mov    edx,0x578
  409e09:	lea    rcx,[rip+0x4784]        # 40e594 <flatcc_builder_padding_base@@Base+0xc34>
  409e10:	call   403070 <__assert_fail@plt>
  409e15:	mov    rdi,QWORD PTR [rbp-0x10]
  409e19:	mov    rax,QWORD PTR [rbp-0x10]
  409e1d:	mov    rsi,QWORD PTR [rax+0x18]
  409e21:	mov    rax,QWORD PTR [rbp-0x10]
  409e25:	mov    rax,QWORD PTR [rax+0x30]
  409e29:	mov    ecx,DWORD PTR [rax+0x14]
  409e2c:	mov    edx,ecx
  409e2e:	mov    rax,QWORD PTR [rbp-0x10]
  409e32:	mov    rax,QWORD PTR [rax+0x30]
  409e36:	mov    ecx,DWORD PTR [rax+0x10]
  409e39:	mov    rax,QWORD PTR [rbp-0x10]
  409e3d:	mov    r8w,WORD PTR [rax+0xea]
  409e45:	mov    rax,QWORD PTR [rbp-0x10]
  409e49:	mov    rax,QWORD PTR [rax+0x30]
  409e4d:	mov    r9d,DWORD PTR [rax+0x18]
  409e51:	movzx  r8d,r8w
  409e55:	call   409b90 <flatcc_builder_create_vector@@Base>
  409e5a:	xor    r8d,r8d
  409e5d:	mov    DWORD PTR [rbp-0x14],eax
  409e60:	cmp    r8d,eax
  409e63:	jne    409e75 <flatcc_builder_end_vector@@Base+0xa5>
  409e69:	mov    DWORD PTR [rbp-0x4],0x0
  409e70:	jmp    409e84 <flatcc_builder_end_vector@@Base+0xb4>
  409e75:	mov    rdi,QWORD PTR [rbp-0x10]
  409e79:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  409e7e:	mov    eax,DWORD PTR [rbp-0x14]
  409e81:	mov    DWORD PTR [rbp-0x4],eax
  409e84:	mov    eax,DWORD PTR [rbp-0x4]
  409e87:	add    rsp,0x20
  409e8b:	pop    rbp
  409e8c:	ret    
  409e8d:	nop    DWORD PTR [rax]

0000000000409e90 <flatcc_builder_vector_count@@Base>:
  409e90:	push   rbp
  409e91:	mov    rbp,rsp
  409e94:	mov    QWORD PTR [rbp-0x8],rdi
  409e98:	mov    rax,QWORD PTR [rbp-0x8]
  409e9c:	mov    rax,QWORD PTR [rax+0x30]
  409ea0:	mov    ecx,DWORD PTR [rax+0x14]
  409ea3:	mov    eax,ecx
  409ea5:	pop    rbp
  409ea6:	ret    
  409ea7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000409eb0 <flatcc_builder_vector_edit@@Base>:
  409eb0:	push   rbp
  409eb1:	mov    rbp,rsp
  409eb4:	mov    QWORD PTR [rbp-0x8],rdi
  409eb8:	mov    rax,QWORD PTR [rbp-0x8]
  409ebc:	mov    rax,QWORD PTR [rax+0x18]
  409ec0:	pop    rbp
  409ec1:	ret    
  409ec2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ecc:	nop    DWORD PTR [rax+0x0]

0000000000409ed0 <flatcc_builder_create_offset_vector_direct@@Base>:
  409ed0:	push   rbp
  409ed1:	mov    rbp,rsp
  409ed4:	sub    rsp,0x20
  409ed8:	xor    eax,eax
  409eda:	mov    ecx,eax
  409edc:	mov    QWORD PTR [rbp-0x8],rdi
  409ee0:	mov    QWORD PTR [rbp-0x10],rsi
  409ee4:	mov    QWORD PTR [rbp-0x18],rdx
  409ee8:	mov    rdi,QWORD PTR [rbp-0x8]
  409eec:	mov    rsi,QWORD PTR [rbp-0x10]
  409ef0:	mov    rdx,QWORD PTR [rbp-0x18]
  409ef4:	call   409f00 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  409ef9:	add    rsp,0x20
  409efd:	pop    rbp
  409efe:	ret    
  409eff:	nop
  409f00:	push   rbp
  409f01:	mov    rbp,rsp
  409f04:	sub    rsp,0xd0
  409f0b:	mov    QWORD PTR [rbp-0x10],rdi
  409f0f:	mov    QWORD PTR [rbp-0x18],rsi
  409f13:	mov    QWORD PTR [rbp-0x20],rdx
  409f17:	mov    QWORD PTR [rbp-0x28],rcx
  409f1b:	mov    rax,QWORD PTR [rbp-0x20]
  409f1f:	mov    eax,eax
  409f21:	mov    ecx,eax
  409f23:	cmp    rcx,0x3fffffff
  409f2a:	jbe    409f3c <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
  409f30:	mov    DWORD PTR [rbp-0x4],0x0
  409f37:	jmp    40a238 <flatcc_builder_create_offset_vector_direct@@Base+0x368>
  409f3c:	mov    rdi,QWORD PTR [rbp-0x10]
  409f40:	mov    esi,0x4
  409f45:	call   4074d0 <flatcc_builder_create_buffer@@Base+0x420>
  409f4a:	mov    rax,QWORD PTR [rbp-0x20]
  409f4e:	mov    eax,eax
  409f50:	mov    ecx,eax
  409f52:	shl    rcx,0x2
  409f56:	mov    DWORD PTR [rbp-0x2c],ecx
  409f59:	mov    rdx,QWORD PTR [rbp-0x20]
  409f5d:	mov    edi,edx
  409f5f:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  409f64:	mov    DWORD PTR [rbp-0x34],eax
  409f67:	mov    rdi,QWORD PTR [rbp-0x10]
  409f6b:	mov    esi,DWORD PTR [rbp-0x2c]
  409f6e:	mov    edx,0x4
  409f73:	call   406f70 <flatcc_builder_embed_buffer@@Base+0x400>
  409f78:	mov    DWORD PTR [rbp-0x30],eax
  409f7b:	mov    QWORD PTR [rbp-0xd0],0x0
  409f86:	mov    DWORD PTR [rbp-0xc8],0x0
  409f90:	mov    rdi,QWORD PTR [rbp-0xd0]
  409f97:	add    rdi,0x4
  409f9e:	mov    QWORD PTR [rbp-0xd0],rdi
  409fa5:	lea    rdi,[rbp-0x34]
  409fa9:	lea    r8,[rbp-0xd0]
  409fb0:	mov    r9,r8
  409fb3:	add    r9,0x10
  409fba:	movsxd r10,DWORD PTR [rbp-0xc8]
  409fc1:	shl    r10,0x4
  409fc5:	add    r9,r10
  409fc8:	mov    QWORD PTR [r9],rdi
  409fcb:	add    r8,0x10
  409fd2:	movsxd rdi,DWORD PTR [rbp-0xc8]
  409fd9:	shl    rdi,0x4
  409fdd:	add    r8,rdi
  409fe0:	mov    QWORD PTR [r8+0x8],0x4
  409fe8:	mov    eax,DWORD PTR [rbp-0xc8]
  409fee:	add    eax,0x1
  409ff1:	mov    DWORD PTR [rbp-0xc8],eax
  409ff7:	cmp    DWORD PTR [rbp-0x2c],0x0
  409ffb:	jbe    40a067 <flatcc_builder_create_offset_vector_direct@@Base+0x197>
  40a001:	mov    eax,DWORD PTR [rbp-0x2c]
  40a004:	mov    ecx,eax
  40a006:	add    rcx,QWORD PTR [rbp-0xd0]
  40a00d:	mov    QWORD PTR [rbp-0xd0],rcx
  40a014:	mov    rcx,QWORD PTR [rbp-0x18]
  40a018:	lea    rdx,[rbp-0xd0]
  40a01f:	mov    rsi,rdx
  40a022:	add    rsi,0x10
  40a029:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40a030:	shl    rdi,0x4
  40a034:	add    rsi,rdi
  40a037:	mov    QWORD PTR [rsi],rcx
  40a03a:	mov    eax,DWORD PTR [rbp-0x2c]
  40a03d:	mov    ecx,eax
  40a03f:	add    rdx,0x10
  40a046:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40a04d:	shl    rsi,0x4
  40a051:	add    rdx,rsi
  40a054:	mov    QWORD PTR [rdx+0x8],rcx
  40a058:	mov    eax,DWORD PTR [rbp-0xc8]
  40a05e:	add    eax,0x1
  40a061:	mov    DWORD PTR [rbp-0xc8],eax
  40a067:	cmp    DWORD PTR [rbp-0x30],0x0
  40a06b:	jbe    40a0da <flatcc_builder_create_offset_vector_direct@@Base+0x20a>
  40a071:	lea    rax,[rip+0x38e8]        # 40d960 <flatcc_builder_padding_base@@Base>
  40a078:	mov    ecx,DWORD PTR [rbp-0x30]
  40a07b:	mov    edx,ecx
  40a07d:	add    rdx,QWORD PTR [rbp-0xd0]
  40a084:	mov    QWORD PTR [rbp-0xd0],rdx
  40a08b:	lea    rdx,[rbp-0xd0]
  40a092:	mov    rsi,rdx
  40a095:	add    rsi,0x10
  40a09c:	movsxd rdi,DWORD PTR [rbp-0xc8]
  40a0a3:	shl    rdi,0x4
  40a0a7:	add    rsi,rdi
  40a0aa:	mov    QWORD PTR [rsi],rax
  40a0ad:	mov    ecx,DWORD PTR [rbp-0x30]
  40a0b0:	mov    eax,ecx
  40a0b2:	add    rdx,0x10
  40a0b9:	movsxd rsi,DWORD PTR [rbp-0xc8]
  40a0c0:	shl    rsi,0x4
  40a0c4:	add    rdx,rsi
  40a0c7:	mov    QWORD PTR [rdx+0x8],rax
  40a0cb:	mov    ecx,DWORD PTR [rbp-0xc8]
  40a0d1:	add    ecx,0x1
  40a0d4:	mov    DWORD PTR [rbp-0xc8],ecx
  40a0da:	mov    rax,QWORD PTR [rbp-0x10]
  40a0de:	mov    ecx,DWORD PTR [rax+0xf0]
  40a0e4:	mov    rax,QWORD PTR [rbp-0xd0]
  40a0eb:	sub    ecx,eax
  40a0ed:	mov    DWORD PTR [rbp-0x38],ecx
  40a0f0:	mov    DWORD PTR [rbp-0x40],0x0
  40a0f7:	mov    eax,DWORD PTR [rbp-0x40]
  40a0fa:	mov    rcx,QWORD PTR [rbp-0x20]
  40a0fe:	cmp    eax,ecx
  40a100:	jae    40a225 <flatcc_builder_create_offset_vector_direct@@Base+0x355>
  40a106:	mov    rax,QWORD PTR [rbp-0x18]
  40a10a:	mov    ecx,DWORD PTR [rbp-0x40]
  40a10d:	mov    edx,ecx
  40a10f:	cmp    DWORD PTR [rax+rdx*4],0x0
  40a113:	je     40a1a4 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
  40a119:	mov    rax,QWORD PTR [rbp-0x18]
  40a11d:	mov    ecx,DWORD PTR [rbp-0x40]
  40a120:	mov    edx,ecx
  40a122:	mov    ecx,DWORD PTR [rax+rdx*4]
  40a125:	sub    ecx,DWORD PTR [rbp-0x38]
  40a128:	mov    ecx,ecx
  40a12a:	mov    eax,ecx
  40a12c:	mov    ecx,DWORD PTR [rbp-0x40]
  40a12f:	mov    edx,ecx
  40a131:	shl    rdx,0x2
  40a135:	sub    rax,rdx
  40a138:	sub    rax,0x4
  40a13e:	mov    DWORD PTR [rbp-0x3c],eax
  40a141:	mov    edi,DWORD PTR [rbp-0x3c]
  40a144:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  40a149:	mov    rdx,QWORD PTR [rbp-0x18]
  40a14d:	mov    ecx,DWORD PTR [rbp-0x40]
  40a150:	mov    esi,ecx
  40a152:	mov    DWORD PTR [rdx+rsi*4],eax
  40a155:	cmp    QWORD PTR [rbp-0x28],0x0
  40a15a:	je     40a19f <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  40a160:	mov    rax,QWORD PTR [rbp-0x28]
  40a164:	mov    ecx,DWORD PTR [rbp-0x40]
  40a167:	mov    edx,ecx
  40a169:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40a16d:	cmp    ecx,0x0
  40a170:	je     40a17b <flatcc_builder_create_offset_vector_direct@@Base+0x2ab>
  40a176:	jmp    40a19a <flatcc_builder_create_offset_vector_direct@@Base+0x2ca>
  40a17b:	lea    rdi,[rip+0x4ba4]        # 40ed26 <flatcc_builder_padding_base@@Base+0x13c6>
  40a182:	lea    rsi,[rip+0x39e9]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a189:	mov    edx,0x5b1
  40a18e:	lea    rcx,[rip+0x4b9f]        # 40ed34 <flatcc_builder_padding_base@@Base+0x13d4>
  40a195:	call   403070 <__assert_fail@plt>
  40a19a:	jmp    40a19f <flatcc_builder_create_offset_vector_direct@@Base+0x2cf>
  40a19f:	jmp    40a212 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  40a1a4:	cmp    QWORD PTR [rbp-0x28],0x0
  40a1a9:	je     40a1ee <flatcc_builder_create_offset_vector_direct@@Base+0x31e>
  40a1af:	mov    rax,QWORD PTR [rbp-0x28]
  40a1b3:	mov    ecx,DWORD PTR [rbp-0x40]
  40a1b6:	mov    edx,ecx
  40a1b8:	movzx  ecx,BYTE PTR [rax+rdx*1]
  40a1bc:	cmp    ecx,0x0
  40a1bf:	jne    40a1ca <flatcc_builder_create_offset_vector_direct@@Base+0x2fa>
  40a1c5:	jmp    40a1e9 <flatcc_builder_create_offset_vector_direct@@Base+0x319>
  40a1ca:	lea    rdi,[rip+0x4be6]        # 40edb7 <flatcc_builder_padding_base@@Base+0x1457>
  40a1d1:	lea    rsi,[rip+0x399a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a1d8:	mov    edx,0x5b5
  40a1dd:	lea    rcx,[rip+0x4b50]        # 40ed34 <flatcc_builder_padding_base@@Base+0x13d4>
  40a1e4:	call   403070 <__assert_fail@plt>
  40a1e9:	jmp    40a20d <flatcc_builder_create_offset_vector_direct@@Base+0x33d>
  40a1ee:	lea    rdi,[rip+0x4b3d]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40a1f5:	lea    rsi,[rip+0x3976]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a1fc:	mov    edx,0x5b7
  40a201:	lea    rcx,[rip+0x4b2c]        # 40ed34 <flatcc_builder_padding_base@@Base+0x13d4>
  40a208:	call   403070 <__assert_fail@plt>
  40a20d:	jmp    40a212 <flatcc_builder_create_offset_vector_direct@@Base+0x342>
  40a212:	jmp    40a217 <flatcc_builder_create_offset_vector_direct@@Base+0x347>
  40a217:	mov    eax,DWORD PTR [rbp-0x40]
  40a21a:	add    eax,0x1
  40a21d:	mov    DWORD PTR [rbp-0x40],eax
  40a220:	jmp    40a0f7 <flatcc_builder_create_offset_vector_direct@@Base+0x227>
  40a225:	mov    rdi,QWORD PTR [rbp-0x10]
  40a229:	lea    rsi,[rbp-0xd0]
  40a230:	call   406fb0 <flatcc_builder_embed_buffer@@Base+0x440>
  40a235:	mov    DWORD PTR [rbp-0x4],eax
  40a238:	mov    eax,DWORD PTR [rbp-0x4]
  40a23b:	add    rsp,0xd0
  40a242:	pop    rbp
  40a243:	ret    
  40a244:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a24e:	xchg   ax,ax

000000000040a250 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  40a250:	push   rbp
  40a251:	mov    rbp,rsp
  40a254:	sub    rsp,0x20
  40a258:	mov    QWORD PTR [rbp-0x10],rdi
  40a25c:	mov    QWORD PTR [rbp-0x18],rsi
  40a260:	mov    rax,QWORD PTR [rbp-0x10]
  40a264:	mov    rax,QWORD PTR [rax+0x30]
  40a268:	movzx  ecx,WORD PTR [rax+0xe]
  40a26c:	cmp    ecx,0x5
  40a26f:	jne    40a27a <flatcc_builder_end_offset_vector_for_unions@@Base+0x2a>
  40a275:	jmp    40a299 <flatcc_builder_end_offset_vector_for_unions@@Base+0x49>
  40a27a:	lea    rdi,[rip+0x3d27]        # 40dfa8 <flatcc_builder_padding_base@@Base+0x648>
  40a281:	lea    rsi,[rip+0x38ea]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a288:	mov    edx,0x5d5
  40a28d:	lea    rcx,[rip+0x438d]        # 40e621 <flatcc_builder_padding_base@@Base+0xcc1>
  40a294:	call   403070 <__assert_fail@plt>
  40a299:	mov    rdi,QWORD PTR [rbp-0x10]
  40a29d:	mov    rax,QWORD PTR [rbp-0x10]
  40a2a1:	mov    rax,QWORD PTR [rax+0x18]
  40a2a5:	mov    rcx,QWORD PTR [rbp-0x10]
  40a2a9:	mov    rcx,QWORD PTR [rcx+0x30]
  40a2ad:	mov    edx,DWORD PTR [rcx+0x14]
  40a2b0:	mov    rcx,QWORD PTR [rbp-0x18]
  40a2b4:	mov    rsi,rax
  40a2b7:	call   409f00 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  40a2bc:	xor    r8d,r8d
  40a2bf:	mov    DWORD PTR [rbp-0x1c],eax
  40a2c2:	cmp    r8d,eax
  40a2c5:	jne    40a2d7 <flatcc_builder_end_offset_vector_for_unions@@Base+0x87>
  40a2cb:	mov    DWORD PTR [rbp-0x4],0x0
  40a2d2:	jmp    40a2e6 <flatcc_builder_end_offset_vector_for_unions@@Base+0x96>
  40a2d7:	mov    rdi,QWORD PTR [rbp-0x10]
  40a2db:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  40a2e0:	mov    eax,DWORD PTR [rbp-0x1c]
  40a2e3:	mov    DWORD PTR [rbp-0x4],eax
  40a2e6:	mov    eax,DWORD PTR [rbp-0x4]
  40a2e9:	add    rsp,0x20
  40a2ed:	pop    rbp
  40a2ee:	ret    
  40a2ef:	nop

000000000040a2f0 <flatcc_builder_offset_vector_edit@@Base>:
  40a2f0:	push   rbp
  40a2f1:	mov    rbp,rsp
  40a2f4:	mov    QWORD PTR [rbp-0x8],rdi
  40a2f8:	mov    rax,QWORD PTR [rbp-0x8]
  40a2fc:	mov    rax,QWORD PTR [rax+0x18]
  40a300:	pop    rbp
  40a301:	ret    
  40a302:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a30c:	nop    DWORD PTR [rax+0x0]

000000000040a310 <flatcc_builder_offset_vector_count@@Base>:
  40a310:	push   rbp
  40a311:	mov    rbp,rsp
  40a314:	mov    QWORD PTR [rbp-0x8],rdi
  40a318:	mov    rax,QWORD PTR [rbp-0x8]
  40a31c:	mov    rax,QWORD PTR [rax+0x30]
  40a320:	mov    ecx,DWORD PTR [rax+0x14]
  40a323:	mov    eax,ecx
  40a325:	pop    rbp
  40a326:	ret    
  40a327:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a330 <flatcc_builder_table_add_union@@Base>:
  40a330:	push   rbp
  40a331:	mov    rbp,rsp
  40a334:	sub    rsp,0x30
  40a338:	mov    QWORD PTR [rbp-0x10],rdx
  40a33c:	mov    QWORD PTR [rbp-0x18],rdi
  40a340:	mov    DWORD PTR [rbp-0x1c],esi
  40a343:	mov    rax,QWORD PTR [rbp-0x18]
  40a347:	mov    rax,QWORD PTR [rax+0x30]
  40a34b:	movzx  ecx,WORD PTR [rax+0xe]
  40a34f:	cmp    ecx,0x3
  40a352:	jne    40a35d <flatcc_builder_table_add_union@@Base+0x2d>
  40a358:	jmp    40a37c <flatcc_builder_table_add_union@@Base+0x4c>
  40a35d:	lea    rdi,[rip+0x403d]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40a364:	lea    rsi,[rip+0x3807]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a36b:	mov    edx,0x5ee
  40a370:	lea    rcx,[rip+0x431c]        # 40e693 <flatcc_builder_padding_base@@Base+0xd33>
  40a377:	call   403070 <__assert_fail@plt>
  40a37c:	movzx  eax,BYTE PTR [rbp-0x10]
  40a380:	cmp    eax,0x0
  40a383:	jne    40a3da <flatcc_builder_table_add_union@@Base+0xaa>
  40a389:	cmp    DWORD PTR [rbp-0xc],0x0
  40a38d:	je     40a3da <flatcc_builder_table_add_union@@Base+0xaa>
  40a393:	movzx  eax,BYTE PTR [rbp-0x10]
  40a397:	cmp    eax,0x0
  40a39a:	jne    40a3aa <flatcc_builder_table_add_union@@Base+0x7a>
  40a3a0:	cmp    DWORD PTR [rbp-0xc],0x0
  40a3a4:	jne    40a3af <flatcc_builder_table_add_union@@Base+0x7f>
  40a3aa:	jmp    40a3ce <flatcc_builder_table_add_union@@Base+0x9e>
  40a3af:	lea    rdi,[rip+0x4335]        # 40e6eb <flatcc_builder_padding_base@@Base+0xd8b>
  40a3b6:	lea    rsi,[rip+0x37b5]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a3bd:	mov    edx,0x5ef
  40a3c2:	lea    rcx,[rip+0x42ca]        # 40e693 <flatcc_builder_padding_base@@Base+0xd33>
  40a3c9:	call   403070 <__assert_fail@plt>
  40a3ce:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a3d5:	jmp    40a4be <flatcc_builder_table_add_union@@Base+0x18e>
  40a3da:	cmp    DWORD PTR [rbp-0xc],0x0
  40a3de:	je     40a443 <flatcc_builder_table_add_union@@Base+0x113>
  40a3e4:	mov    rdi,QWORD PTR [rbp-0x18]
  40a3e8:	mov    esi,DWORD PTR [rbp-0x1c]
  40a3eb:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  40a3f0:	mov    QWORD PTR [rbp-0x28],rax
  40a3f4:	cmp    QWORD PTR [rbp-0x28],0x0
  40a3f9:	jne    40a43a <flatcc_builder_table_add_union@@Base+0x10a>
  40a3ff:	cmp    QWORD PTR [rbp-0x28],0x0
  40a404:	je     40a40f <flatcc_builder_table_add_union@@Base+0xdf>
  40a40a:	jmp    40a42e <flatcc_builder_table_add_union@@Base+0xfe>
  40a40f:	lea    rdi,[rip+0x42f7]        # 40e70d <flatcc_builder_padding_base@@Base+0xdad>
  40a416:	lea    rsi,[rip+0x3755]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a41d:	mov    edx,0x5f2
  40a422:	lea    rcx,[rip+0x426a]        # 40e693 <flatcc_builder_padding_base@@Base+0xd33>
  40a429:	call   403070 <__assert_fail@plt>
  40a42e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a435:	jmp    40a4be <flatcc_builder_table_add_union@@Base+0x18e>
  40a43a:	mov    eax,DWORD PTR [rbp-0xc]
  40a43d:	mov    rcx,QWORD PTR [rbp-0x28]
  40a441:	mov    DWORD PTR [rcx],eax
  40a443:	mov    rdi,QWORD PTR [rbp-0x18]
  40a447:	mov    eax,DWORD PTR [rbp-0x1c]
  40a44a:	sub    eax,0x1
  40a44d:	mov    esi,eax
  40a44f:	mov    edx,0x1
  40a454:	mov    ecx,0x1
  40a459:	call   40a5c0 <flatcc_builder_table_add@@Base>
  40a45e:	mov    QWORD PTR [rbp-0x30],rax
  40a462:	cmp    QWORD PTR [rbp-0x30],0x0
  40a467:	jne    40a4a8 <flatcc_builder_table_add_union@@Base+0x178>
  40a46d:	cmp    QWORD PTR [rbp-0x30],0x0
  40a472:	je     40a47d <flatcc_builder_table_add_union@@Base+0x14d>
  40a478:	jmp    40a49c <flatcc_builder_table_add_union@@Base+0x16c>
  40a47d:	lea    rdi,[rip+0x4293]        # 40e717 <flatcc_builder_padding_base@@Base+0xdb7>
  40a484:	lea    rsi,[rip+0x36e7]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a48b:	mov    edx,0x5f6
  40a490:	lea    rcx,[rip+0x41fc]        # 40e693 <flatcc_builder_padding_base@@Base+0xd33>
  40a497:	call   403070 <__assert_fail@plt>
  40a49c:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a4a3:	jmp    40a4be <flatcc_builder_table_add_union@@Base+0x18e>
  40a4a8:	movzx  edi,BYTE PTR [rbp-0x10]
  40a4ac:	call   40a700 <flatcc_builder_table_add@@Base+0x140>
  40a4b1:	mov    rcx,QWORD PTR [rbp-0x30]
  40a4b5:	mov    BYTE PTR [rcx],al
  40a4b7:	mov    DWORD PTR [rbp-0x4],0x0
  40a4be:	mov    eax,DWORD PTR [rbp-0x4]
  40a4c1:	add    rsp,0x30
  40a4c5:	pop    rbp
  40a4c6:	ret    
  40a4c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040a4d0 <flatcc_builder_table_add_offset@@Base>:
  40a4d0:	push   rbp
  40a4d1:	mov    rbp,rsp
  40a4d4:	sub    rsp,0x10
  40a4d8:	mov    QWORD PTR [rbp-0x8],rdi
  40a4dc:	mov    DWORD PTR [rbp-0xc],esi
  40a4df:	mov    rax,QWORD PTR [rbp-0x8]
  40a4e3:	mov    rax,QWORD PTR [rax+0x30]
  40a4e7:	movzx  ecx,WORD PTR [rax+0xe]
  40a4eb:	cmp    ecx,0x3
  40a4ee:	jne    40a4f9 <flatcc_builder_table_add_offset@@Base+0x29>
  40a4f4:	jmp    40a518 <flatcc_builder_table_add_offset@@Base+0x48>
  40a4f9:	lea    rdi,[rip+0x3ea1]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40a500:	lea    rsi,[rip+0x366b]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a507:	mov    edx,0x713
  40a50c:	lea    rcx,[rip+0x4582]        # 40ea95 <flatcc_builder_padding_base@@Base+0x1135>
  40a513:	call   403070 <__assert_fail@plt>
  40a518:	cmp    DWORD PTR [rbp-0xc],0x0
  40a51c:	jl     40a534 <flatcc_builder_table_add_offset@@Base+0x64>
  40a522:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40a529:	jg     40a534 <flatcc_builder_table_add_offset@@Base+0x64>
  40a52f:	jmp    40a553 <flatcc_builder_table_add_offset@@Base+0x83>
  40a534:	lea    rdi,[rip+0x44da]        # 40ea15 <flatcc_builder_padding_base@@Base+0x10b5>
  40a53b:	lea    rsi,[rip+0x3630]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a542:	mov    edx,0x714
  40a547:	lea    rcx,[rip+0x4547]        # 40ea95 <flatcc_builder_padding_base@@Base+0x1135>
  40a54e:	call   403070 <__assert_fail@plt>
  40a553:	mov    rax,QWORD PTR [rbp-0x8]
  40a557:	mov    rax,QWORD PTR [rax+0x8]
  40a55b:	movsxd rcx,DWORD PTR [rbp-0xc]
  40a55f:	movzx  edx,WORD PTR [rax+rcx*2]
  40a563:	cmp    edx,0x0
  40a566:	je     40a58b <flatcc_builder_table_add_offset@@Base+0xbb>
  40a56c:	lea    rdi,[rip+0x47bf]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40a573:	lea    rsi,[rip+0x35f8]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a57a:	mov    edx,0x71b
  40a57f:	lea    rcx,[rip+0x450f]        # 40ea95 <flatcc_builder_padding_base@@Base+0x1135>
  40a586:	call   403070 <__assert_fail@plt>
  40a58b:	mov    eax,DWORD PTR [rbp-0xc]
  40a58e:	mov    rcx,QWORD PTR [rbp-0x8]
  40a592:	xor    eax,DWORD PTR [rcx+0x14]
  40a595:	imul   eax,eax,0x9e3779b1
  40a59b:	xor    eax,0x4
  40a59e:	imul   eax,eax,0x9e3779b1
  40a5a4:	mov    rcx,QWORD PTR [rbp-0x8]
  40a5a8:	mov    DWORD PTR [rcx+0x14],eax
  40a5ab:	mov    rdi,QWORD PTR [rbp-0x8]
  40a5af:	mov    eax,DWORD PTR [rbp-0xc]
  40a5b2:	movzx  esi,ax
  40a5b5:	call   40b4a0 <flatcc_builder_table_add_copy@@Base+0x60>
  40a5ba:	add    rsp,0x10
  40a5be:	pop    rbp
  40a5bf:	ret    

000000000040a5c0 <flatcc_builder_table_add@@Base>:
  40a5c0:	push   rbp
  40a5c1:	mov    rbp,rsp
  40a5c4:	sub    rsp,0x20
  40a5c8:	mov    QWORD PTR [rbp-0x8],rdi
  40a5cc:	mov    DWORD PTR [rbp-0xc],esi
  40a5cf:	mov    QWORD PTR [rbp-0x18],rdx
  40a5d3:	mov    WORD PTR [rbp-0x1a],cx
  40a5d7:	mov    rax,QWORD PTR [rbp-0x8]
  40a5db:	mov    rax,QWORD PTR [rax+0x30]
  40a5df:	movzx  esi,WORD PTR [rax+0xe]
  40a5e3:	cmp    esi,0x3
  40a5e6:	jne    40a5f1 <flatcc_builder_table_add@@Base+0x31>
  40a5ec:	jmp    40a610 <flatcc_builder_table_add@@Base+0x50>
  40a5f1:	lea    rdi,[rip+0x3da9]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40a5f8:	lea    rsi,[rip+0x3573]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a5ff:	mov    edx,0x6ed
  40a604:	lea    rcx,[rip+0x43c0]        # 40e9cb <flatcc_builder_padding_base@@Base+0x106b>
  40a60b:	call   403070 <__assert_fail@plt>
  40a610:	cmp    DWORD PTR [rbp-0xc],0x0
  40a614:	jl     40a62c <flatcc_builder_table_add@@Base+0x6c>
  40a61a:	cmp    DWORD PTR [rbp-0xc],0x7ffc
  40a621:	jg     40a62c <flatcc_builder_table_add@@Base+0x6c>
  40a627:	jmp    40a64b <flatcc_builder_table_add@@Base+0x8b>
  40a62c:	lea    rdi,[rip+0x43e2]        # 40ea15 <flatcc_builder_padding_base@@Base+0x10b5>
  40a633:	lea    rsi,[rip+0x3538]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a63a:	mov    edx,0x6ee
  40a63f:	lea    rcx,[rip+0x4385]        # 40e9cb <flatcc_builder_padding_base@@Base+0x106b>
  40a646:	call   403070 <__assert_fail@plt>
  40a64b:	movzx  eax,WORD PTR [rbp-0x1a]
  40a64f:	mov    rcx,QWORD PTR [rbp-0x8]
  40a653:	movzx  edx,WORD PTR [rcx+0xea]
  40a65a:	cmp    eax,edx
  40a65c:	jle    40a671 <flatcc_builder_table_add@@Base+0xb1>
  40a662:	mov    ax,WORD PTR [rbp-0x1a]
  40a666:	mov    rcx,QWORD PTR [rbp-0x8]
  40a66a:	mov    WORD PTR [rcx+0xea],ax
  40a671:	mov    rax,QWORD PTR [rbp-0x8]
  40a675:	mov    rax,QWORD PTR [rax+0x8]
  40a679:	movsxd rcx,DWORD PTR [rbp-0xc]
  40a67d:	movzx  edx,WORD PTR [rax+rcx*2]
  40a681:	cmp    edx,0x0
  40a684:	je     40a6a9 <flatcc_builder_table_add@@Base+0xe9>
  40a68a:	lea    rdi,[rip+0x46a1]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40a691:	lea    rsi,[rip+0x34da]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a698:	mov    edx,0x6f8
  40a69d:	lea    rcx,[rip+0x4327]        # 40e9cb <flatcc_builder_padding_base@@Base+0x106b>
  40a6a4:	call   403070 <__assert_fail@plt>
  40a6a9:	mov    eax,DWORD PTR [rbp-0xc]
  40a6ac:	mov    rcx,QWORD PTR [rbp-0x8]
  40a6b0:	xor    eax,DWORD PTR [rcx+0x14]
  40a6b3:	imul   eax,eax,0x9e3779b1
  40a6b9:	mov    rcx,QWORD PTR [rbp-0x18]
  40a6bd:	xor    eax,ecx
  40a6bf:	imul   eax,eax,0x9e3779b1
  40a6c5:	mov    rdx,QWORD PTR [rbp-0x8]
  40a6c9:	mov    DWORD PTR [rdx+0x14],eax
  40a6cc:	mov    rdi,QWORD PTR [rbp-0x8]
  40a6d0:	mov    rdx,QWORD PTR [rbp-0x18]
  40a6d4:	mov    si,WORD PTR [rbp-0x1a]
  40a6d8:	mov    eax,DWORD PTR [rbp-0xc]
  40a6db:	mov    WORD PTR [rbp-0x1c],si
  40a6df:	mov    esi,edx
  40a6e1:	mov    r8w,WORD PTR [rbp-0x1c]
  40a6e6:	movzx  edx,r8w
  40a6ea:	movzx  ecx,ax
  40a6ed:	call   40b2d0 <flatcc_builder_string_len@@Base+0x20>
  40a6f2:	add    rsp,0x20
  40a6f6:	pop    rbp
  40a6f7:	ret    
  40a6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  40a700:	push   rbp
  40a701:	mov    rbp,rsp
  40a704:	mov    BYTE PTR [rbp-0x1],dil
  40a708:	movzx  eax,BYTE PTR [rbp-0x1]
  40a70c:	pop    rbp
  40a70d:	ret    
  40a70e:	xchg   ax,ax

000000000040a710 <flatcc_builder_table_add_union_vector@@Base>:
  40a710:	push   rbp
  40a711:	mov    rbp,rsp
  40a714:	sub    rsp,0x30
  40a718:	mov    QWORD PTR [rbp-0x10],rdx
  40a71c:	mov    QWORD PTR [rbp-0x18],rdi
  40a720:	mov    DWORD PTR [rbp-0x1c],esi
  40a723:	mov    rax,QWORD PTR [rbp-0x18]
  40a727:	mov    rax,QWORD PTR [rax+0x30]
  40a72b:	movzx  ecx,WORD PTR [rax+0xe]
  40a72f:	cmp    ecx,0x3
  40a732:	jne    40a73d <flatcc_builder_table_add_union_vector@@Base+0x2d>
  40a738:	jmp    40a75c <flatcc_builder_table_add_union_vector@@Base+0x4c>
  40a73d:	lea    rdi,[rip+0x3c5d]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40a744:	lea    rsi,[rip+0x3427]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a74b:	mov    edx,0x600
  40a750:	lea    rcx,[rip+0x3fcc]        # 40e723 <flatcc_builder_padding_base@@Base+0xdc3>
  40a757:	call   403070 <__assert_fail@plt>
  40a75c:	cmp    DWORD PTR [rbp-0x10],0x0
  40a760:	sete   al
  40a763:	and    al,0x1
  40a765:	movzx  ecx,al
  40a768:	cmp    DWORD PTR [rbp-0xc],0x0
  40a76c:	sete   al
  40a76f:	and    al,0x1
  40a771:	movzx  edx,al
  40a774:	cmp    ecx,edx
  40a776:	je     40a7cc <flatcc_builder_table_add_union_vector@@Base+0xbc>
  40a77c:	cmp    DWORD PTR [rbp-0x10],0x0
  40a780:	sete   al
  40a783:	and    al,0x1
  40a785:	movzx  ecx,al
  40a788:	cmp    DWORD PTR [rbp-0xc],0x0
  40a78c:	sete   al
  40a78f:	and    al,0x1
  40a791:	movzx  edx,al
  40a794:	cmp    ecx,edx
  40a796:	jne    40a7a1 <flatcc_builder_table_add_union_vector@@Base+0x91>
  40a79c:	jmp    40a7c0 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  40a7a1:	lea    rdi,[rip+0x3fde]        # 40e786 <flatcc_builder_padding_base@@Base+0xe26>
  40a7a8:	lea    rsi,[rip+0x33c3]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a7af:	mov    edx,0x601
  40a7b4:	lea    rcx,[rip+0x3f68]        # 40e723 <flatcc_builder_padding_base@@Base+0xdc3>
  40a7bb:	call   403070 <__assert_fail@plt>
  40a7c0:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a7c7:	jmp    40a8a0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  40a7cc:	cmp    DWORD PTR [rbp-0x10],0x0
  40a7d0:	je     40a899 <flatcc_builder_table_add_union_vector@@Base+0x189>
  40a7d6:	mov    rdi,QWORD PTR [rbp-0x18]
  40a7da:	mov    eax,DWORD PTR [rbp-0x1c]
  40a7dd:	sub    eax,0x1
  40a7e0:	mov    esi,eax
  40a7e2:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  40a7e7:	mov    QWORD PTR [rbp-0x28],rax
  40a7eb:	cmp    QWORD PTR [rbp-0x28],0x0
  40a7f0:	jne    40a831 <flatcc_builder_table_add_union_vector@@Base+0x121>
  40a7f6:	cmp    QWORD PTR [rbp-0x28],0x0
  40a7fb:	je     40a806 <flatcc_builder_table_add_union_vector@@Base+0xf6>
  40a801:	jmp    40a825 <flatcc_builder_table_add_union_vector@@Base+0x115>
  40a806:	lea    rdi,[rip+0x3f00]        # 40e70d <flatcc_builder_padding_base@@Base+0xdad>
  40a80d:	lea    rsi,[rip+0x335e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a814:	mov    edx,0x604
  40a819:	lea    rcx,[rip+0x3f03]        # 40e723 <flatcc_builder_padding_base@@Base+0xdc3>
  40a820:	call   403070 <__assert_fail@plt>
  40a825:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a82c:	jmp    40a8a0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  40a831:	mov    eax,DWORD PTR [rbp-0x10]
  40a834:	mov    rcx,QWORD PTR [rbp-0x28]
  40a838:	mov    DWORD PTR [rcx],eax
  40a83a:	mov    rdi,QWORD PTR [rbp-0x18]
  40a83e:	mov    esi,DWORD PTR [rbp-0x1c]
  40a841:	call   40a4d0 <flatcc_builder_table_add_offset@@Base>
  40a846:	mov    QWORD PTR [rbp-0x28],rax
  40a84a:	cmp    QWORD PTR [rbp-0x28],0x0
  40a84f:	jne    40a890 <flatcc_builder_table_add_union_vector@@Base+0x180>
  40a855:	cmp    QWORD PTR [rbp-0x28],0x0
  40a85a:	je     40a865 <flatcc_builder_table_add_union_vector@@Base+0x155>
  40a860:	jmp    40a884 <flatcc_builder_table_add_union_vector@@Base+0x174>
  40a865:	lea    rdi,[rip+0x3ea1]        # 40e70d <flatcc_builder_padding_base@@Base+0xdad>
  40a86c:	lea    rsi,[rip+0x32ff]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40a873:	mov    edx,0x608
  40a878:	lea    rcx,[rip+0x3ea4]        # 40e723 <flatcc_builder_padding_base@@Base+0xdc3>
  40a87f:	call   403070 <__assert_fail@plt>
  40a884:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40a88b:	jmp    40a8a0 <flatcc_builder_table_add_union_vector@@Base+0x190>
  40a890:	mov    eax,DWORD PTR [rbp-0xc]
  40a893:	mov    rcx,QWORD PTR [rbp-0x28]
  40a897:	mov    DWORD PTR [rcx],eax
  40a899:	mov    DWORD PTR [rbp-0x4],0x0
  40a8a0:	mov    eax,DWORD PTR [rbp-0x4]
  40a8a3:	add    rsp,0x30
  40a8a7:	pop    rbp
  40a8a8:	ret    
  40a8a9:	nop    DWORD PTR [rax+0x0]

000000000040a8b0 <flatcc_builder_create_union_vector@@Base>:
  40a8b0:	push   rbp
  40a8b1:	mov    rbp,rsp
  40a8b4:	sub    rsp,0x40
  40a8b8:	xor    eax,eax
  40a8ba:	mov    QWORD PTR [rbp-0x10],rdi
  40a8be:	mov    QWORD PTR [rbp-0x18],rsi
  40a8c2:	mov    QWORD PTR [rbp-0x20],rdx
  40a8c6:	lea    rcx,[rbp-0x8]
  40a8ca:	mov    rdi,rcx
  40a8cd:	mov    esi,eax
  40a8cf:	mov    edx,0x8
  40a8d4:	call   403080 <memset@plt>
  40a8d9:	mov    rdi,QWORD PTR [rbp-0x10]
  40a8dd:	call   408970 <flatcc_builder_start_offset_vector@@Base>
  40a8e2:	cmp    eax,0x0
  40a8e5:	je     40a8f0 <flatcc_builder_create_union_vector@@Base+0x40>
  40a8eb:	jmp    40a9c5 <flatcc_builder_create_union_vector@@Base+0x115>
  40a8f0:	mov    rdi,QWORD PTR [rbp-0x10]
  40a8f4:	mov    rsi,QWORD PTR [rbp-0x20]
  40a8f8:	call   408160 <flatcc_builder_extend_offset_vector@@Base>
  40a8fd:	xor    ecx,ecx
  40a8ff:	mov    edx,ecx
  40a901:	cmp    rdx,rax
  40a904:	jne    40a90f <flatcc_builder_create_union_vector@@Base+0x5f>
  40a90a:	jmp    40a9c5 <flatcc_builder_create_union_vector@@Base+0x115>
  40a90f:	mov    rdi,QWORD PTR [rbp-0x10]
  40a913:	mov    rax,QWORD PTR [rbp-0x20]
  40a917:	shl    rax,0x0
  40a91b:	mov    esi,eax
  40a91d:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  40a922:	xor    ecx,ecx
  40a924:	mov    edx,ecx
  40a926:	mov    QWORD PTR [rbp-0x28],rax
  40a92a:	cmp    rdx,rax
  40a92d:	jne    40a938 <flatcc_builder_create_union_vector@@Base+0x88>
  40a933:	jmp    40a9c5 <flatcc_builder_create_union_vector@@Base+0x115>
  40a938:	mov    rdi,QWORD PTR [rbp-0x10]
  40a93c:	call   40a2f0 <flatcc_builder_offset_vector_edit@@Base>
  40a941:	mov    QWORD PTR [rbp-0x30],rax
  40a945:	mov    QWORD PTR [rbp-0x38],0x0
  40a94d:	mov    rax,QWORD PTR [rbp-0x38]
  40a951:	cmp    rax,QWORD PTR [rbp-0x20]
  40a955:	jae    40a99b <flatcc_builder_create_union_vector@@Base+0xeb>
  40a95b:	mov    rax,QWORD PTR [rbp-0x18]
  40a95f:	mov    rcx,QWORD PTR [rbp-0x38]
  40a963:	mov    dl,BYTE PTR [rax+rcx*8]
  40a966:	mov    rax,QWORD PTR [rbp-0x28]
  40a96a:	mov    rcx,QWORD PTR [rbp-0x38]
  40a96e:	mov    BYTE PTR [rax+rcx*1],dl
  40a971:	mov    rax,QWORD PTR [rbp-0x18]
  40a975:	mov    rcx,QWORD PTR [rbp-0x38]
  40a979:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  40a97d:	mov    rax,QWORD PTR [rbp-0x30]
  40a981:	mov    rcx,QWORD PTR [rbp-0x38]
  40a985:	mov    DWORD PTR [rax+rcx*4],esi
  40a988:	mov    rax,QWORD PTR [rbp-0x38]
  40a98c:	add    rax,0x1
  40a992:	mov    QWORD PTR [rbp-0x38],rax
  40a996:	jmp    40a94d <flatcc_builder_create_union_vector@@Base+0x9d>
  40a99b:	mov    rdi,QWORD PTR [rbp-0x10]
  40a99f:	mov    rsi,QWORD PTR [rbp-0x28]
  40a9a3:	mov    rdx,QWORD PTR [rbp-0x30]
  40a9a7:	mov    rcx,QWORD PTR [rbp-0x20]
  40a9ab:	call   40a9d0 <flatcc_builder_create_union_vector_direct@@Base>
  40a9b0:	mov    QWORD PTR [rbp-0x40],rax
  40a9b4:	mov    rax,QWORD PTR [rbp-0x40]
  40a9b8:	mov    QWORD PTR [rbp-0x8],rax
  40a9bc:	mov    rdi,QWORD PTR [rbp-0x10]
  40a9c0:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  40a9c5:	mov    rax,QWORD PTR [rbp-0x8]
  40a9c9:	add    rsp,0x40
  40a9cd:	pop    rbp
  40a9ce:	ret    
  40a9cf:	nop

000000000040a9d0 <flatcc_builder_create_union_vector_direct@@Base>:
  40a9d0:	push   rbp
  40a9d1:	mov    rbp,rsp
  40a9d4:	sub    rsp,0x30
  40a9d8:	xor    eax,eax
  40a9da:	mov    QWORD PTR [rbp-0x10],rdi
  40a9de:	mov    QWORD PTR [rbp-0x18],rsi
  40a9e2:	mov    QWORD PTR [rbp-0x20],rdx
  40a9e6:	mov    QWORD PTR [rbp-0x28],rcx
  40a9ea:	lea    rcx,[rbp-0x8]
  40a9ee:	mov    rdi,rcx
  40a9f1:	mov    esi,eax
  40a9f3:	mov    edx,0x8
  40a9f8:	call   403080 <memset@plt>
  40a9fd:	mov    rdi,QWORD PTR [rbp-0x10]
  40aa01:	mov    rsi,QWORD PTR [rbp-0x20]
  40aa05:	mov    rdx,QWORD PTR [rbp-0x28]
  40aa09:	mov    rcx,QWORD PTR [rbp-0x18]
  40aa0d:	call   409f00 <flatcc_builder_create_offset_vector_direct@@Base+0x30>
  40aa12:	xor    r8d,r8d
  40aa15:	mov    DWORD PTR [rbp-0x4],eax
  40aa18:	cmp    r8d,eax
  40aa1b:	jne    40aa26 <flatcc_builder_create_union_vector_direct@@Base+0x56>
  40aa21:	jmp    40aa61 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  40aa26:	mov    rdi,QWORD PTR [rbp-0x10]
  40aa2a:	mov    rsi,QWORD PTR [rbp-0x18]
  40aa2e:	mov    rdx,QWORD PTR [rbp-0x28]
  40aa32:	mov    ecx,0x1
  40aa37:	mov    r8d,0x1
  40aa3d:	mov    r9d,0xffffffff
  40aa43:	call   409b90 <flatcc_builder_create_vector@@Base>
  40aa48:	xor    r8d,r8d
  40aa4b:	mov    DWORD PTR [rbp-0x8],eax
  40aa4e:	cmp    r8d,eax
  40aa51:	jne    40aa5c <flatcc_builder_create_union_vector_direct@@Base+0x8c>
  40aa57:	jmp    40aa61 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  40aa5c:	jmp    40aa61 <flatcc_builder_create_union_vector_direct@@Base+0x91>
  40aa61:	mov    rax,QWORD PTR [rbp-0x8]
  40aa65:	add    rsp,0x30
  40aa69:	pop    rbp
  40aa6a:	ret    
  40aa6b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040aa70 <flatcc_builder_start_union_vector@@Base>:
  40aa70:	push   rbp
  40aa71:	mov    rbp,rsp
  40aa74:	sub    rsp,0x10
  40aa78:	mov    QWORD PTR [rbp-0x10],rdi
  40aa7c:	mov    rdi,QWORD PTR [rbp-0x10]
  40aa80:	mov    esi,0x4
  40aa85:	call   407820 <flatcc_builder_start_buffer@@Base+0x170>
  40aa8a:	cmp    eax,0x0
  40aa8d:	je     40aa9f <flatcc_builder_start_union_vector@@Base+0x2f>
  40aa93:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40aa9a:	jmp    40aae0 <flatcc_builder_start_union_vector@@Base+0x70>
  40aa9f:	mov    rax,QWORD PTR [rbp-0x10]
  40aaa3:	mov    rax,QWORD PTR [rax+0x30]
  40aaa7:	mov    DWORD PTR [rax+0x10],0x8
  40aaae:	mov    rax,QWORD PTR [rbp-0x10]
  40aab2:	mov    rax,QWORD PTR [rax+0x30]
  40aab6:	mov    DWORD PTR [rax+0x14],0x0
  40aabd:	mov    rax,QWORD PTR [rbp-0x10]
  40aac1:	mov    rax,QWORD PTR [rax+0x30]
  40aac5:	mov    WORD PTR [rax+0xe],0x7
  40aacb:	mov    rdi,QWORD PTR [rbp-0x10]
  40aacf:	mov    esi,0xfffffffc
  40aad4:	call   407c70 <flatcc_builder_start_struct@@Base+0x70>
  40aad9:	mov    DWORD PTR [rbp-0x4],0x0
  40aae0:	mov    eax,DWORD PTR [rbp-0x4]
  40aae3:	add    rsp,0x10
  40aae7:	pop    rbp
  40aae8:	ret    
  40aae9:	nop    DWORD PTR [rax+0x0]

000000000040aaf0 <flatcc_builder_end_union_vector@@Base>:
  40aaf0:	push   rbp
  40aaf1:	mov    rbp,rsp
  40aaf4:	sub    rsp,0x40
  40aaf8:	xor    esi,esi
  40aafa:	mov    QWORD PTR [rbp-0x10],rdi
  40aafe:	lea    rax,[rbp-0x8]
  40ab02:	mov    rdi,rax
  40ab05:	mov    edx,0x8
  40ab0a:	call   403080 <memset@plt>
  40ab0f:	mov    rax,QWORD PTR [rbp-0x10]
  40ab13:	mov    rax,QWORD PTR [rax+0x30]
  40ab17:	movzx  ecx,WORD PTR [rax+0xe]
  40ab1b:	cmp    ecx,0x7
  40ab1e:	jne    40ab29 <flatcc_builder_end_union_vector@@Base+0x39>
  40ab24:	jmp    40ab48 <flatcc_builder_end_union_vector@@Base+0x58>
  40ab29:	lea    rdi,[rip+0x3c7e]        # 40e7ae <flatcc_builder_padding_base@@Base+0xe4e>
  40ab30:	lea    rsi,[rip+0x303b]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40ab37:	mov    edx,0x651
  40ab3c:	lea    rcx,[rip+0x3c9d]        # 40e7e0 <flatcc_builder_padding_base@@Base+0xe80>
  40ab43:	call   403070 <__assert_fail@plt>
  40ab48:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab4c:	call   40ac30 <flatcc_builder_union_vector_count@@Base>
  40ab51:	mov    QWORD PTR [rbp-0x38],rax
  40ab55:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab59:	imul   rax,QWORD PTR [rbp-0x38],0x5
  40ab61:	mov    esi,eax
  40ab63:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  40ab68:	xor    ecx,ecx
  40ab6a:	mov    edx,ecx
  40ab6c:	mov    QWORD PTR [rbp-0x28],rax
  40ab70:	cmp    rdx,rax
  40ab73:	jne    40ab7e <flatcc_builder_end_union_vector@@Base+0x8e>
  40ab79:	jmp    40ac1e <flatcc_builder_end_union_vector@@Base+0x12e>
  40ab7e:	mov    rax,QWORD PTR [rbp-0x28]
  40ab82:	mov    rcx,QWORD PTR [rbp-0x38]
  40ab86:	shl    rcx,0x2
  40ab8a:	add    rax,rcx
  40ab8d:	mov    QWORD PTR [rbp-0x18],rax
  40ab91:	mov    rdi,QWORD PTR [rbp-0x10]
  40ab95:	call   40ac50 <flatcc_builder_union_vector_edit@@Base>
  40ab9a:	mov    QWORD PTR [rbp-0x20],rax
  40ab9e:	mov    QWORD PTR [rbp-0x30],0x0
  40aba6:	mov    rax,QWORD PTR [rbp-0x30]
  40abaa:	cmp    rax,QWORD PTR [rbp-0x38]
  40abae:	jae    40abf4 <flatcc_builder_end_union_vector@@Base+0x104>
  40abb4:	mov    rax,QWORD PTR [rbp-0x20]
  40abb8:	mov    rcx,QWORD PTR [rbp-0x30]
  40abbc:	mov    dl,BYTE PTR [rax+rcx*8]
  40abbf:	mov    rax,QWORD PTR [rbp-0x18]
  40abc3:	mov    rcx,QWORD PTR [rbp-0x30]
  40abc7:	mov    BYTE PTR [rax+rcx*1],dl
  40abca:	mov    rax,QWORD PTR [rbp-0x20]
  40abce:	mov    rcx,QWORD PTR [rbp-0x30]
  40abd2:	mov    esi,DWORD PTR [rax+rcx*8+0x4]
  40abd6:	mov    rax,QWORD PTR [rbp-0x28]
  40abda:	mov    rcx,QWORD PTR [rbp-0x30]
  40abde:	mov    DWORD PTR [rax+rcx*4],esi
  40abe1:	mov    rax,QWORD PTR [rbp-0x30]
  40abe5:	add    rax,0x1
  40abeb:	mov    QWORD PTR [rbp-0x30],rax
  40abef:	jmp    40aba6 <flatcc_builder_end_union_vector@@Base+0xb6>
  40abf4:	mov    rdi,QWORD PTR [rbp-0x10]
  40abf8:	mov    rsi,QWORD PTR [rbp-0x18]
  40abfc:	mov    rdx,QWORD PTR [rbp-0x28]
  40ac00:	mov    rcx,QWORD PTR [rbp-0x38]
  40ac04:	call   40a9d0 <flatcc_builder_create_union_vector_direct@@Base>
  40ac09:	mov    QWORD PTR [rbp-0x40],rax
  40ac0d:	mov    rax,QWORD PTR [rbp-0x40]
  40ac11:	mov    QWORD PTR [rbp-0x8],rax
  40ac15:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac19:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  40ac1e:	mov    rax,QWORD PTR [rbp-0x8]
  40ac22:	add    rsp,0x40
  40ac26:	pop    rbp
  40ac27:	ret    
  40ac28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040ac30 <flatcc_builder_union_vector_count@@Base>:
  40ac30:	push   rbp
  40ac31:	mov    rbp,rsp
  40ac34:	mov    QWORD PTR [rbp-0x8],rdi
  40ac38:	mov    rax,QWORD PTR [rbp-0x8]
  40ac3c:	mov    rax,QWORD PTR [rax+0x30]
  40ac40:	mov    ecx,DWORD PTR [rax+0x14]
  40ac43:	mov    eax,ecx
  40ac45:	pop    rbp
  40ac46:	ret    
  40ac47:	nop    WORD PTR [rax+rax*1+0x0]

000000000040ac50 <flatcc_builder_union_vector_edit@@Base>:
  40ac50:	push   rbp
  40ac51:	mov    rbp,rsp
  40ac54:	mov    QWORD PTR [rbp-0x8],rdi
  40ac58:	mov    rax,QWORD PTR [rbp-0x8]
  40ac5c:	mov    rax,QWORD PTR [rax+0x18]
  40ac60:	pop    rbp
  40ac61:	ret    
  40ac62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac6c:	nop    DWORD PTR [rax+0x0]

000000000040ac70 <flatcc_builder_extend_union_vector@@Base>:
  40ac70:	push   rbp
  40ac71:	mov    rbp,rsp
  40ac74:	sub    rsp,0x20
  40ac78:	mov    QWORD PTR [rbp-0x10],rdi
  40ac7c:	mov    QWORD PTR [rbp-0x18],rsi
  40ac80:	mov    rdi,QWORD PTR [rbp-0x10]
  40ac84:	mov    rax,QWORD PTR [rbp-0x18]
  40ac88:	mov    esi,eax
  40ac8a:	mov    edx,0x1fffffff
  40ac8f:	call   407eb0 <flatcc_builder_extend_vector@@Base+0x70>
  40ac94:	cmp    eax,0x0
  40ac97:	je     40acaa <flatcc_builder_extend_union_vector@@Base+0x3a>
  40ac9d:	mov    QWORD PTR [rbp-0x8],0x0
  40aca5:	jmp    40acc5 <flatcc_builder_extend_union_vector@@Base+0x55>
  40acaa:	mov    rdi,QWORD PTR [rbp-0x10]
  40acae:	mov    rax,QWORD PTR [rbp-0x18]
  40acb2:	mov    eax,eax
  40acb4:	mov    ecx,eax
  40acb6:	shl    rcx,0x3
  40acba:	mov    esi,ecx
  40acbc:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  40acc1:	mov    QWORD PTR [rbp-0x8],rax
  40acc5:	mov    rax,QWORD PTR [rbp-0x8]
  40acc9:	add    rsp,0x20
  40accd:	pop    rbp
  40acce:	ret    
  40accf:	nop

000000000040acd0 <flatcc_builder_truncate_union_vector@@Base>:
  40acd0:	push   rbp
  40acd1:	mov    rbp,rsp
  40acd4:	sub    rsp,0x20
  40acd8:	mov    QWORD PTR [rbp-0x10],rdi
  40acdc:	mov    QWORD PTR [rbp-0x18],rsi
  40ace0:	mov    rax,QWORD PTR [rbp-0x10]
  40ace4:	mov    rax,QWORD PTR [rax+0x30]
  40ace8:	movzx  ecx,WORD PTR [rax+0xe]
  40acec:	cmp    ecx,0x7
  40acef:	jne    40acfa <flatcc_builder_truncate_union_vector@@Base+0x2a>
  40acf5:	jmp    40ad19 <flatcc_builder_truncate_union_vector@@Base+0x49>
  40acfa:	lea    rdi,[rip+0x3aad]        # 40e7ae <flatcc_builder_padding_base@@Base+0xe4e>
  40ad01:	lea    rsi,[rip+0x2e6a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40ad08:	mov    edx,0x681
  40ad0d:	lea    rcx,[rip+0x3b1f]        # 40e833 <flatcc_builder_padding_base@@Base+0xed3>
  40ad14:	call   403070 <__assert_fail@plt>
  40ad19:	mov    rax,QWORD PTR [rbp-0x10]
  40ad1d:	mov    rax,QWORD PTR [rax+0x30]
  40ad21:	mov    ecx,DWORD PTR [rax+0x14]
  40ad24:	mov    rax,QWORD PTR [rbp-0x18]
  40ad28:	cmp    ecx,eax
  40ad2a:	jae    40ad77 <flatcc_builder_truncate_union_vector@@Base+0xa7>
  40ad30:	mov    rax,QWORD PTR [rbp-0x10]
  40ad34:	mov    rax,QWORD PTR [rax+0x30]
  40ad38:	mov    ecx,DWORD PTR [rax+0x14]
  40ad3b:	mov    rax,QWORD PTR [rbp-0x18]
  40ad3f:	cmp    ecx,eax
  40ad41:	jb     40ad4c <flatcc_builder_truncate_union_vector@@Base+0x7c>
  40ad47:	jmp    40ad6b <flatcc_builder_truncate_union_vector@@Base+0x9b>
  40ad4c:	lea    rdi,[rip+0x34bf]        # 40e212 <flatcc_builder_padding_base@@Base+0x8b2>
  40ad53:	lea    rsi,[rip+0x2e18]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40ad5a:	mov    edx,0x682
  40ad5f:	lea    rcx,[rip+0x3acd]        # 40e833 <flatcc_builder_padding_base@@Base+0xed3>
  40ad66:	call   403070 <__assert_fail@plt>
  40ad6b:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40ad72:	jmp    40adaf <flatcc_builder_truncate_union_vector@@Base+0xdf>
  40ad77:	mov    rax,QWORD PTR [rbp-0x18]
  40ad7b:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad7f:	mov    rcx,QWORD PTR [rcx+0x30]
  40ad83:	mov    edx,DWORD PTR [rcx+0x14]
  40ad86:	sub    edx,eax
  40ad88:	mov    DWORD PTR [rcx+0x14],edx
  40ad8b:	mov    rdi,QWORD PTR [rbp-0x10]
  40ad8f:	mov    rcx,QWORD PTR [rbp-0x10]
  40ad93:	mov    rcx,QWORD PTR [rcx+0x30]
  40ad97:	mov    eax,DWORD PTR [rcx+0x10]
  40ad9a:	mov    rcx,QWORD PTR [rbp-0x18]
  40ad9e:	imul   eax,ecx
  40ada1:	mov    esi,eax
  40ada3:	call   408660 <flatcc_builder_truncate_vector@@Base+0xf0>
  40ada8:	mov    DWORD PTR [rbp-0x4],0x0
  40adaf:	mov    eax,DWORD PTR [rbp-0x4]
  40adb2:	add    rsp,0x20
  40adb6:	pop    rbp
  40adb7:	ret    
  40adb8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040adc0 <flatcc_builder_union_vector_push@@Base>:
  40adc0:	push   rbp
  40adc1:	mov    rbp,rsp
  40adc4:	sub    rsp,0x20
  40adc8:	mov    QWORD PTR [rbp-0x10],rsi
  40adcc:	mov    QWORD PTR [rbp-0x18],rdi
  40add0:	mov    rax,QWORD PTR [rbp-0x18]
  40add4:	mov    rax,QWORD PTR [rax+0x30]
  40add8:	movzx  ecx,WORD PTR [rax+0xe]
  40addc:	cmp    ecx,0x7
  40addf:	jne    40adea <flatcc_builder_union_vector_push@@Base+0x2a>
  40ade5:	jmp    40ae09 <flatcc_builder_union_vector_push@@Base+0x49>
  40adea:	lea    rdi,[rip+0x39bd]        # 40e7ae <flatcc_builder_padding_base@@Base+0xe4e>
  40adf1:	lea    rsi,[rip+0x2d7a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40adf8:	mov    edx,0x68d
  40adfd:	lea    rcx,[rip+0x3a74]        # 40e878 <flatcc_builder_padding_base@@Base+0xf18>
  40ae04:	call   403070 <__assert_fail@plt>
  40ae09:	mov    rax,QWORD PTR [rbp-0x18]
  40ae0d:	mov    rax,QWORD PTR [rax+0x30]
  40ae11:	mov    ecx,DWORD PTR [rax+0x14]
  40ae14:	mov    eax,ecx
  40ae16:	cmp    rax,0x1fffffff
  40ae1c:	jne    40ae2f <flatcc_builder_union_vector_push@@Base+0x6f>
  40ae22:	mov    QWORD PTR [rbp-0x8],0x0
  40ae2a:	jmp    40ae7f <flatcc_builder_union_vector_push@@Base+0xbf>
  40ae2f:	mov    rax,QWORD PTR [rbp-0x18]
  40ae33:	mov    rax,QWORD PTR [rax+0x30]
  40ae37:	mov    ecx,DWORD PTR [rax+0x14]
  40ae3a:	add    ecx,0x1
  40ae3d:	mov    DWORD PTR [rax+0x14],ecx
  40ae40:	mov    rdi,QWORD PTR [rbp-0x18]
  40ae44:	mov    esi,0x8
  40ae49:	call   407cf0 <flatcc_builder_start_struct@@Base+0xf0>
  40ae4e:	xor    ecx,ecx
  40ae50:	mov    edx,ecx
  40ae52:	mov    QWORD PTR [rbp-0x20],rax
  40ae56:	cmp    rdx,rax
  40ae59:	jne    40ae6c <flatcc_builder_union_vector_push@@Base+0xac>
  40ae5f:	mov    QWORD PTR [rbp-0x8],0x0
  40ae67:	jmp    40ae7f <flatcc_builder_union_vector_push@@Base+0xbf>
  40ae6c:	mov    rax,QWORD PTR [rbp-0x20]
  40ae70:	mov    rcx,QWORD PTR [rbp-0x10]
  40ae74:	mov    QWORD PTR [rax],rcx
  40ae77:	mov    rax,QWORD PTR [rbp-0x20]
  40ae7b:	mov    QWORD PTR [rbp-0x8],rax
  40ae7f:	mov    rax,QWORD PTR [rbp-0x8]
  40ae83:	add    rsp,0x20
  40ae87:	pop    rbp
  40ae88:	ret    
  40ae89:	nop    DWORD PTR [rax+0x0]

000000000040ae90 <flatcc_builder_append_union_vector@@Base>:
  40ae90:	push   rbp
  40ae91:	mov    rbp,rsp
  40ae94:	sub    rsp,0x20
  40ae98:	mov    QWORD PTR [rbp-0x10],rdi
  40ae9c:	mov    QWORD PTR [rbp-0x18],rsi
  40aea0:	mov    QWORD PTR [rbp-0x20],rdx
  40aea4:	mov    rax,QWORD PTR [rbp-0x10]
  40aea8:	mov    rax,QWORD PTR [rax+0x30]
  40aeac:	movzx  ecx,WORD PTR [rax+0xe]
  40aeb0:	cmp    ecx,0x7
  40aeb3:	jne    40aebe <flatcc_builder_append_union_vector@@Base+0x2e>
  40aeb9:	jmp    40aedd <flatcc_builder_append_union_vector@@Base+0x4d>
  40aebe:	lea    rdi,[rip+0x38e9]        # 40e7ae <flatcc_builder_padding_base@@Base+0xe4e>
  40aec5:	lea    rsi,[rip+0x2ca6]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40aecc:	mov    edx,0x69c
  40aed1:	lea    rcx,[rip+0x3a0d]        # 40e8e5 <flatcc_builder_padding_base@@Base+0xf85>
  40aed8:	call   403070 <__assert_fail@plt>
  40aedd:	mov    rdi,QWORD PTR [rbp-0x10]
  40aee1:	mov    rax,QWORD PTR [rbp-0x20]
  40aee5:	mov    esi,eax
  40aee7:	mov    edx,0x1fffffff
  40aeec:	call   407eb0 <flatcc_builder_extend_vector@@Base+0x70>
  40aef1:	cmp    eax,0x0
  40aef4:	je     40af07 <flatcc_builder_append_union_vector@@Base+0x77>
  40aefa:	mov    QWORD PTR [rbp-0x8],0x0
  40af02:	jmp    40af27 <flatcc_builder_append_union_vector@@Base+0x97>
  40af07:	mov    rdi,QWORD PTR [rbp-0x10]
  40af0b:	mov    rax,QWORD PTR [rbp-0x18]
  40af0f:	mov    rcx,QWORD PTR [rbp-0x20]
  40af13:	mov    ecx,ecx
  40af15:	mov    edx,ecx
  40af17:	shl    rdx,0x3
  40af1b:	mov    rsi,rax
  40af1e:	call   408050 <flatcc_builder_vector_push@@Base+0xf0>
  40af23:	mov    QWORD PTR [rbp-0x8],rax
  40af27:	mov    rax,QWORD PTR [rbp-0x8]
  40af2b:	add    rsp,0x20
  40af2f:	pop    rbp
  40af30:	ret    
  40af31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af3b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040af40 <flatcc_builder_create_string@@Base>:
  40af40:	push   rbp
  40af41:	mov    rbp,rsp
  40af44:	sub    rsp,0xc0
  40af4b:	mov    QWORD PTR [rbp-0x10],rdi
  40af4f:	mov    QWORD PTR [rbp-0x18],rsi
  40af53:	mov    QWORD PTR [rbp-0x20],rdx
  40af57:	mov    eax,0xffffffff
  40af5c:	cmp    QWORD PTR [rbp-0x20],rax
  40af60:	jbe    40af72 <flatcc_builder_create_string@@Base+0x32>
  40af66:	mov    DWORD PTR [rbp-0x4],0x0
  40af6d:	jmp    40b10e <flatcc_builder_create_string@@Base+0x1ce>
  40af72:	mov    rax,QWORD PTR [rbp-0x20]
  40af76:	mov    edi,eax
  40af78:	call   406fa0 <flatcc_builder_embed_buffer@@Base+0x430>
  40af7d:	mov    DWORD PTR [rbp-0x28],eax
  40af80:	mov    rdi,QWORD PTR [rbp-0x10]
  40af84:	mov    rcx,QWORD PTR [rbp-0x20]
  40af88:	add    ecx,0x1
  40af8b:	mov    esi,ecx
  40af8d:	mov    edx,0x4
  40af92:	call   406f70 <flatcc_builder_embed_buffer@@Base+0x400>
  40af97:	add    eax,0x1
  40af9a:	mov    DWORD PTR [rbp-0x24],eax
  40af9d:	mov    QWORD PTR [rbp-0xb8],0x0
  40afa8:	mov    DWORD PTR [rbp-0xb0],0x0
  40afb2:	mov    rdi,QWORD PTR [rbp-0xb8]
  40afb9:	add    rdi,0x4
  40afc0:	mov    QWORD PTR [rbp-0xb8],rdi
  40afc7:	lea    rdi,[rbp-0x28]
  40afcb:	lea    r8,[rbp-0xb8]
  40afd2:	mov    r9,r8
  40afd5:	add    r9,0x10
  40afdc:	movsxd r10,DWORD PTR [rbp-0xb0]
  40afe3:	shl    r10,0x4
  40afe7:	add    r9,r10
  40afea:	mov    QWORD PTR [r9],rdi
  40afed:	add    r8,0x10
  40aff4:	movsxd rdi,DWORD PTR [rbp-0xb0]
  40affb:	shl    rdi,0x4
  40afff:	add    r8,rdi
  40b002:	mov    QWORD PTR [r8+0x8],0x4
  40b00a:	mov    eax,DWORD PTR [rbp-0xb0]
  40b010:	add    eax,0x1
  40b013:	mov    DWORD PTR [rbp-0xb0],eax
  40b019:	cmp    QWORD PTR [rbp-0x20],0x0
  40b01e:	jbe    40b088 <flatcc_builder_create_string@@Base+0x148>
  40b024:	mov    rax,QWORD PTR [rbp-0x20]
  40b028:	add    rax,QWORD PTR [rbp-0xb8]
  40b02f:	mov    QWORD PTR [rbp-0xb8],rax
  40b036:	mov    rax,QWORD PTR [rbp-0x18]
  40b03a:	lea    rcx,[rbp-0xb8]
  40b041:	mov    rdx,rcx
  40b044:	add    rdx,0x10
  40b04b:	movsxd rsi,DWORD PTR [rbp-0xb0]
  40b052:	shl    rsi,0x4
  40b056:	add    rdx,rsi
  40b059:	mov    QWORD PTR [rdx],rax
  40b05c:	mov    rax,QWORD PTR [rbp-0x20]
  40b060:	add    rcx,0x10
  40b067:	movsxd rdx,DWORD PTR [rbp-0xb0]
  40b06e:	shl    rdx,0x4
  40b072:	add    rcx,rdx
  40b075:	mov    QWORD PTR [rcx+0x8],rax
  40b079:	mov    edi,DWORD PTR [rbp-0xb0]
  40b07f:	add    edi,0x1
  40b082:	mov    DWORD PTR [rbp-0xb0],edi
  40b088:	cmp    DWORD PTR [rbp-0x24],0x0
  40b08c:	jbe    40b0fb <flatcc_builder_create_string@@Base+0x1bb>
  40b092:	lea    rax,[rip+0x28c7]        # 40d960 <flatcc_builder_padding_base@@Base>
  40b099:	mov    ecx,DWORD PTR [rbp-0x24]
  40b09c:	mov    edx,ecx
  40b09e:	add    rdx,QWORD PTR [rbp-0xb8]
  40b0a5:	mov    QWORD PTR [rbp-0xb8],rdx
  40b0ac:	lea    rdx,[rbp-0xb8]
  40b0b3:	mov    rsi,rdx
  40b0b6:	add    rsi,0x10
  40b0bd:	movsxd rdi,DWORD PTR [rbp-0xb0]
  40b0c4:	shl    rdi,0x4
  40b0c8:	add    rsi,rdi
  40b0cb:	mov    QWORD PTR [rsi],rax
  40b0ce:	mov    ecx,DWORD PTR [rbp-0x24]
  40b0d1:	mov    eax,ecx
  40b0d3:	add    rdx,0x10
  40b0da:	movsxd rsi,DWORD PTR [rbp-0xb0]
  40b0e1:	shl    rsi,0x4
  40b0e5:	add    rdx,rsi
  40b0e8:	mov    QWORD PTR [rdx+0x8],rax
  40b0ec:	mov    ecx,DWORD PTR [rbp-0xb0]
  40b0f2:	add    ecx,0x1
  40b0f5:	mov    DWORD PTR [rbp-0xb0],ecx
  40b0fb:	mov    rdi,QWORD PTR [rbp-0x10]
  40b0ff:	lea    rsi,[rbp-0xb8]
  40b106:	call   406fb0 <flatcc_builder_embed_buffer@@Base+0x440>
  40b10b:	mov    DWORD PTR [rbp-0x4],eax
  40b10e:	mov    eax,DWORD PTR [rbp-0x4]
  40b111:	add    rsp,0xc0
  40b118:	pop    rbp
  40b119:	ret    
  40b11a:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b120 <flatcc_builder_create_string_str@@Base>:
  40b120:	push   rbp
  40b121:	mov    rbp,rsp
  40b124:	sub    rsp,0x20
  40b128:	mov    QWORD PTR [rbp-0x8],rdi
  40b12c:	mov    QWORD PTR [rbp-0x10],rsi
  40b130:	mov    rdi,QWORD PTR [rbp-0x8]
  40b134:	mov    rsi,QWORD PTR [rbp-0x10]
  40b138:	mov    rax,QWORD PTR [rbp-0x10]
  40b13c:	mov    QWORD PTR [rbp-0x18],rdi
  40b140:	mov    rdi,rax
  40b143:	mov    QWORD PTR [rbp-0x20],rsi
  40b147:	call   403050 <strlen@plt>
  40b14c:	mov    rdi,QWORD PTR [rbp-0x18]
  40b150:	mov    rsi,QWORD PTR [rbp-0x20]
  40b154:	mov    rdx,rax
  40b157:	call   40af40 <flatcc_builder_create_string@@Base>
  40b15c:	add    rsp,0x20
  40b160:	pop    rbp
  40b161:	ret    
  40b162:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b16c:	nop    DWORD PTR [rax+0x0]

000000000040b170 <flatcc_builder_create_string_strn@@Base>:
  40b170:	push   rbp
  40b171:	mov    rbp,rsp
  40b174:	sub    rsp,0x30
  40b178:	mov    QWORD PTR [rbp-0x8],rdi
  40b17c:	mov    QWORD PTR [rbp-0x10],rsi
  40b180:	mov    QWORD PTR [rbp-0x18],rdx
  40b184:	mov    rdi,QWORD PTR [rbp-0x8]
  40b188:	mov    rsi,QWORD PTR [rbp-0x10]
  40b18c:	mov    rax,QWORD PTR [rbp-0x10]
  40b190:	mov    rcx,QWORD PTR [rbp-0x18]
  40b194:	mov    QWORD PTR [rbp-0x20],rdi
  40b198:	mov    rdi,rax
  40b19b:	mov    QWORD PTR [rbp-0x28],rsi
  40b19f:	mov    rsi,rcx
  40b1a2:	call   408510 <flatcc_builder_append_string_strn@@Base+0x50>
  40b1a7:	mov    rdi,QWORD PTR [rbp-0x20]
  40b1ab:	mov    rsi,QWORD PTR [rbp-0x28]
  40b1af:	mov    rdx,rax
  40b1b2:	call   40af40 <flatcc_builder_create_string@@Base>
  40b1b7:	add    rsp,0x30
  40b1bb:	pop    rbp
  40b1bc:	ret    
  40b1bd:	nop    DWORD PTR [rax]

000000000040b1c0 <flatcc_builder_end_string@@Base>:
  40b1c0:	push   rbp
  40b1c1:	mov    rbp,rsp
  40b1c4:	sub    rsp,0x20
  40b1c8:	mov    QWORD PTR [rbp-0x10],rdi
  40b1cc:	mov    rax,QWORD PTR [rbp-0x10]
  40b1d0:	mov    rax,QWORD PTR [rax+0x30]
  40b1d4:	movzx  ecx,WORD PTR [rax+0xe]
  40b1d8:	cmp    ecx,0x6
  40b1db:	jne    40b1e6 <flatcc_builder_end_string@@Base+0x26>
  40b1e1:	jmp    40b205 <flatcc_builder_end_string@@Base+0x45>
  40b1e6:	lea    rdi,[rip+0x2ec4]        # 40e0b1 <flatcc_builder_padding_base@@Base+0x751>
  40b1ed:	lea    rsi,[rip+0x297e]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40b1f4:	mov    edx,0x6c4
  40b1f9:	lea    rcx,[rip+0x3764]        # 40e964 <flatcc_builder_padding_base@@Base+0x1004>
  40b200:	call   403070 <__assert_fail@plt>
  40b205:	mov    rax,QWORD PTR [rbp-0x10]
  40b209:	mov    rax,QWORD PTR [rax+0x30]
  40b20d:	mov    ecx,DWORD PTR [rax+0x14]
  40b210:	mov    rax,QWORD PTR [rbp-0x10]
  40b214:	cmp    ecx,DWORD PTR [rax+0x20]
  40b217:	jne    40b222 <flatcc_builder_end_string@@Base+0x62>
  40b21d:	jmp    40b241 <flatcc_builder_end_string@@Base+0x81>
  40b222:	lea    rdi,[rip+0x377e]        # 40e9a7 <flatcc_builder_padding_base@@Base+0x1047>
  40b229:	lea    rsi,[rip+0x2942]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40b230:	mov    edx,0x6c5
  40b235:	lea    rcx,[rip+0x3728]        # 40e964 <flatcc_builder_padding_base@@Base+0x1004>
  40b23c:	call   403070 <__assert_fail@plt>
  40b241:	mov    rdi,QWORD PTR [rbp-0x10]
  40b245:	mov    rax,QWORD PTR [rbp-0x10]
  40b249:	mov    rsi,QWORD PTR [rax+0x18]
  40b24d:	mov    rax,QWORD PTR [rbp-0x10]
  40b251:	mov    ecx,DWORD PTR [rax+0x20]
  40b254:	mov    edx,ecx
  40b256:	call   40af40 <flatcc_builder_create_string@@Base>
  40b25b:	xor    ecx,ecx
  40b25d:	mov    DWORD PTR [rbp-0x14],eax
  40b260:	cmp    ecx,eax
  40b262:	jne    40b274 <flatcc_builder_end_string@@Base+0xb4>
  40b268:	mov    DWORD PTR [rbp-0x4],0x0
  40b26f:	jmp    40b283 <flatcc_builder_end_string@@Base+0xc3>
  40b274:	mov    rdi,QWORD PTR [rbp-0x10]
  40b278:	call   407b40 <flatcc_builder_end_buffer@@Base+0x160>
  40b27d:	mov    eax,DWORD PTR [rbp-0x14]
  40b280:	mov    DWORD PTR [rbp-0x4],eax
  40b283:	mov    eax,DWORD PTR [rbp-0x4]
  40b286:	add    rsp,0x20
  40b28a:	pop    rbp
  40b28b:	ret    
  40b28c:	nop    DWORD PTR [rax+0x0]

000000000040b290 <flatcc_builder_string_edit@@Base>:
  40b290:	push   rbp
  40b291:	mov    rbp,rsp
  40b294:	mov    QWORD PTR [rbp-0x8],rdi
  40b298:	mov    rax,QWORD PTR [rbp-0x8]
  40b29c:	mov    rax,QWORD PTR [rax+0x18]
  40b2a0:	pop    rbp
  40b2a1:	ret    
  40b2a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b2ac:	nop    DWORD PTR [rax+0x0]

000000000040b2b0 <flatcc_builder_string_len@@Base>:
  40b2b0:	push   rbp
  40b2b1:	mov    rbp,rsp
  40b2b4:	mov    QWORD PTR [rbp-0x8],rdi
  40b2b8:	mov    rax,QWORD PTR [rbp-0x8]
  40b2bc:	mov    rax,QWORD PTR [rax+0x30]
  40b2c0:	mov    ecx,DWORD PTR [rax+0x14]
  40b2c3:	mov    eax,ecx
  40b2c5:	pop    rbp
  40b2c6:	ret    
  40b2c7:	nop    WORD PTR [rax+rax*1+0x0]
  40b2d0:	push   rbp
  40b2d1:	mov    rbp,rsp
  40b2d4:	sub    rsp,0x20
  40b2d8:	mov    QWORD PTR [rbp-0x10],rdi
  40b2dc:	mov    DWORD PTR [rbp-0x14],esi
  40b2df:	mov    WORD PTR [rbp-0x16],dx
  40b2e3:	mov    WORD PTR [rbp-0x18],cx
  40b2e7:	mov    rax,QWORD PTR [rbp-0x10]
  40b2eb:	mov    esi,DWORD PTR [rax+0x20]
  40b2ee:	movzx  r8d,WORD PTR [rbp-0x16]
  40b2f3:	add    esi,r8d
  40b2f6:	sub    esi,0x1
  40b2f9:	movzx  r8d,WORD PTR [rbp-0x16]
  40b2fe:	sub    r8d,0x1
  40b302:	xor    r8d,0xffffffff
  40b306:	and    esi,r8d
  40b309:	mov    DWORD PTR [rbp-0x1c],esi
  40b30c:	mov    esi,DWORD PTR [rbp-0x1c]
  40b30f:	add    esi,DWORD PTR [rbp-0x14]
  40b312:	mov    rax,QWORD PTR [rbp-0x10]
  40b316:	mov    DWORD PTR [rax+0x20],esi
  40b319:	mov    rax,QWORD PTR [rbp-0x10]
  40b31d:	cmp    esi,DWORD PTR [rax+0x24]
  40b320:	jb     40b35d <flatcc_builder_string_len@@Base+0xad>
  40b326:	mov    rdi,QWORD PTR [rbp-0x10]
  40b32a:	mov    rax,QWORD PTR [rbp-0x10]
  40b32e:	mov    ecx,DWORD PTR [rax+0x20]
  40b331:	add    ecx,0x1
  40b334:	mov    ecx,ecx
  40b336:	mov    esi,ecx
  40b338:	mov    edx,0xfffc
  40b33d:	call   40bcd0 <flatcc_builder_get_emit_context@@Base+0x50>
  40b342:	cmp    eax,0x0
  40b345:	je     40b358 <flatcc_builder_string_len@@Base+0xa8>
  40b34b:	mov    QWORD PTR [rbp-0x8],0x0
  40b353:	jmp    40b3b2 <flatcc_builder_string_len@@Base+0x102>
  40b358:	jmp    40b35d <flatcc_builder_string_len@@Base+0xad>
  40b35d:	mov    eax,DWORD PTR [rbp-0x1c]
  40b360:	mov    ecx,eax
  40b362:	add    rcx,0x4
  40b369:	mov    rdx,QWORD PTR [rbp-0x10]
  40b36d:	mov    rdx,QWORD PTR [rdx+0x8]
  40b371:	movzx  eax,WORD PTR [rbp-0x18]
  40b375:	mov    esi,eax
  40b377:	mov    WORD PTR [rdx+rsi*2],cx
  40b37b:	movzx  eax,WORD PTR [rbp-0x18]
  40b37f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b383:	movzx  edi,WORD PTR [rdx+0x10]
  40b387:	cmp    eax,edi
  40b389:	jl     40b39e <flatcc_builder_string_len@@Base+0xee>
  40b38f:	movzx  eax,WORD PTR [rbp-0x18]
  40b393:	add    eax,0x1
  40b396:	mov    rcx,QWORD PTR [rbp-0x10]
  40b39a:	mov    WORD PTR [rcx+0x10],ax
  40b39e:	mov    rax,QWORD PTR [rbp-0x10]
  40b3a2:	mov    rax,QWORD PTR [rax+0x18]
  40b3a6:	mov    ecx,DWORD PTR [rbp-0x1c]
  40b3a9:	mov    edx,ecx
  40b3ab:	add    rax,rdx
  40b3ae:	mov    QWORD PTR [rbp-0x8],rax
  40b3b2:	mov    rax,QWORD PTR [rbp-0x8]
  40b3b6:	add    rsp,0x20
  40b3ba:	pop    rbp
  40b3bb:	ret    
  40b3bc:	nop    DWORD PTR [rax+0x0]

000000000040b3c0 <flatcc_builder_table_edit@@Base>:
  40b3c0:	push   rbp
  40b3c1:	mov    rbp,rsp
  40b3c4:	sub    rsp,0x10
  40b3c8:	mov    QWORD PTR [rbp-0x8],rdi
  40b3cc:	mov    QWORD PTR [rbp-0x10],rsi
  40b3d0:	mov    rax,QWORD PTR [rbp-0x8]
  40b3d4:	mov    rax,QWORD PTR [rax+0x30]
  40b3d8:	movzx  ecx,WORD PTR [rax+0xe]
  40b3dc:	cmp    ecx,0x3
  40b3df:	jne    40b3ea <flatcc_builder_table_edit@@Base+0x2a>
  40b3e5:	jmp    40b409 <flatcc_builder_table_edit@@Base+0x49>
  40b3ea:	lea    rdi,[rip+0x2fb0]        # 40e3a1 <flatcc_builder_padding_base@@Base+0xa41>
  40b3f1:	lea    rsi,[rip+0x277a]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40b3f8:	mov    edx,0x702
  40b3fd:	lea    rcx,[rip+0x3655]        # 40ea59 <flatcc_builder_padding_base@@Base+0x10f9>
  40b404:	call   403070 <__assert_fail@plt>
  40b409:	xor    eax,eax
  40b40b:	mov    ecx,eax
  40b40d:	mov    rdx,QWORD PTR [rbp-0x8]
  40b411:	mov    rdx,QWORD PTR [rdx+0x18]
  40b415:	mov    rsi,QWORD PTR [rbp-0x8]
  40b419:	mov    eax,DWORD PTR [rsi+0x20]
  40b41c:	mov    esi,eax
  40b41e:	add    rdx,rsi
  40b421:	sub    rcx,QWORD PTR [rbp-0x10]
  40b425:	add    rdx,rcx
  40b428:	mov    rax,rdx
  40b42b:	add    rsp,0x10
  40b42f:	pop    rbp
  40b430:	ret    
  40b431:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b43b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b440 <flatcc_builder_table_add_copy@@Base>:
  40b440:	push   rbp
  40b441:	mov    rbp,rsp
  40b444:	sub    rsp,0x30
  40b448:	mov    QWORD PTR [rbp-0x8],rdi
  40b44c:	mov    DWORD PTR [rbp-0xc],esi
  40b44f:	mov    QWORD PTR [rbp-0x18],rdx
  40b453:	mov    QWORD PTR [rbp-0x20],rcx
  40b457:	mov    WORD PTR [rbp-0x22],r8w
  40b45c:	mov    rdi,QWORD PTR [rbp-0x8]
  40b460:	mov    esi,DWORD PTR [rbp-0xc]
  40b463:	mov    rdx,QWORD PTR [rbp-0x20]
  40b467:	movzx  ecx,WORD PTR [rbp-0x22]
  40b46b:	call   40a5c0 <flatcc_builder_table_add@@Base>
  40b470:	mov    QWORD PTR [rbp-0x30],rax
  40b474:	cmp    rax,0x0
  40b478:	je     40b48f <flatcc_builder_table_add_copy@@Base+0x4f>
  40b47e:	mov    rdi,QWORD PTR [rbp-0x30]
  40b482:	mov    rsi,QWORD PTR [rbp-0x18]
  40b486:	mov    rdx,QWORD PTR [rbp-0x20]
  40b48a:	call   4030c0 <memcpy@plt>
  40b48f:	mov    rax,QWORD PTR [rbp-0x30]
  40b493:	add    rsp,0x30
  40b497:	pop    rbp
  40b498:	ret    
  40b499:	nop    DWORD PTR [rax+0x0]
  40b4a0:	push   rbp
  40b4a1:	mov    rbp,rsp
  40b4a4:	sub    rsp,0x20
  40b4a8:	mov    QWORD PTR [rbp-0x10],rdi
  40b4ac:	mov    WORD PTR [rbp-0x12],si
  40b4b0:	mov    rax,QWORD PTR [rbp-0x10]
  40b4b4:	mov    ecx,DWORD PTR [rax+0x20]
  40b4b7:	mov    eax,ecx
  40b4b9:	add    rax,0x4
  40b4bf:	sub    rax,0x1
  40b4c5:	and    rax,0xfffffffffffffffc
  40b4cb:	mov    DWORD PTR [rbp-0x18],eax
  40b4ce:	mov    eax,DWORD PTR [rbp-0x18]
  40b4d1:	mov    edx,eax
  40b4d3:	add    rdx,0x4
  40b4da:	mov    rdi,QWORD PTR [rbp-0x10]
  40b4de:	mov    DWORD PTR [rdi+0x20],edx
  40b4e1:	mov    rdi,QWORD PTR [rbp-0x10]
  40b4e5:	cmp    edx,DWORD PTR [rdi+0x24]
  40b4e8:	jbe    40b520 <flatcc_builder_table_add_copy@@Base+0xe0>
  40b4ee:	mov    rdi,QWORD PTR [rbp-0x10]
  40b4f2:	mov    rax,QWORD PTR [rbp-0x10]
  40b4f6:	mov    ecx,DWORD PTR [rax+0x20]
  40b4f9:	mov    esi,ecx
  40b4fb:	mov    edx,0xfffc
  40b500:	call   40bcd0 <flatcc_builder_get_emit_context@@Base+0x50>
  40b505:	cmp    eax,0x0
  40b508:	je     40b51b <flatcc_builder_table_add_copy@@Base+0xdb>
  40b50e:	mov    QWORD PTR [rbp-0x8],0x0
  40b516:	jmp    40b58f <flatcc_builder_table_add_copy@@Base+0x14f>
  40b51b:	jmp    40b520 <flatcc_builder_table_add_copy@@Base+0xe0>
  40b520:	mov    eax,DWORD PTR [rbp-0x18]
  40b523:	mov    ecx,eax
  40b525:	add    rcx,0x4
  40b52c:	mov    rdx,QWORD PTR [rbp-0x10]
  40b530:	mov    rdx,QWORD PTR [rdx+0x8]
  40b534:	movzx  eax,WORD PTR [rbp-0x12]
  40b538:	mov    esi,eax
  40b53a:	mov    WORD PTR [rdx+rsi*2],cx
  40b53e:	movzx  eax,WORD PTR [rbp-0x12]
  40b542:	mov    rdx,QWORD PTR [rbp-0x10]
  40b546:	movzx  edi,WORD PTR [rdx+0x10]
  40b54a:	cmp    eax,edi
  40b54c:	jl     40b561 <flatcc_builder_table_add_copy@@Base+0x121>
  40b552:	movzx  eax,WORD PTR [rbp-0x12]
  40b556:	add    eax,0x1
  40b559:	mov    rcx,QWORD PTR [rbp-0x10]
  40b55d:	mov    WORD PTR [rcx+0x10],ax
  40b561:	mov    eax,DWORD PTR [rbp-0x18]
  40b564:	mov    rcx,QWORD PTR [rbp-0x10]
  40b568:	mov    rdx,QWORD PTR [rcx]
  40b56b:	mov    rsi,rdx
  40b56e:	add    rsi,0x2
  40b575:	mov    QWORD PTR [rcx],rsi
  40b578:	mov    WORD PTR [rdx],ax
  40b57b:	mov    rcx,QWORD PTR [rbp-0x10]
  40b57f:	mov    rcx,QWORD PTR [rcx+0x18]
  40b583:	mov    edi,DWORD PTR [rbp-0x18]
  40b586:	mov    edx,edi
  40b588:	add    rcx,rdx
  40b58b:	mov    QWORD PTR [rbp-0x8],rcx
  40b58f:	mov    rax,QWORD PTR [rbp-0x8]
  40b593:	add    rsp,0x20
  40b597:	pop    rbp
  40b598:	ret    
  40b599:	nop    DWORD PTR [rax+0x0]

000000000040b5a0 <flatcc_builder_push_buffer_alignment@@Base>:
  40b5a0:	push   rbp
  40b5a1:	mov    rbp,rsp
  40b5a4:	mov    QWORD PTR [rbp-0x8],rdi
  40b5a8:	mov    rax,QWORD PTR [rbp-0x8]
  40b5ac:	mov    cx,WORD PTR [rax+0xe8]
  40b5b3:	mov    WORD PTR [rbp-0xa],cx
  40b5b7:	mov    rax,QWORD PTR [rbp-0x8]
  40b5bb:	mov    WORD PTR [rax+0xe8],0x4
  40b5c4:	movzx  eax,WORD PTR [rbp-0xa]
  40b5c8:	pop    rbp
  40b5c9:	ret    
  40b5ca:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b5d0 <flatcc_builder_pop_buffer_alignment@@Base>:
  40b5d0:	push   rbp
  40b5d1:	mov    rbp,rsp
  40b5d4:	sub    rsp,0x10
  40b5d8:	mov    QWORD PTR [rbp-0x8],rdi
  40b5dc:	mov    WORD PTR [rbp-0xa],si
  40b5e0:	mov    rdi,QWORD PTR [rbp-0x8]
  40b5e4:	movzx  esi,WORD PTR [rbp-0xa]
  40b5e8:	call   4074d0 <flatcc_builder_create_buffer@@Base+0x420>
  40b5ed:	add    rsp,0x10
  40b5f1:	pop    rbp
  40b5f2:	ret    
  40b5f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b5fd:	nop    DWORD PTR [rax]

000000000040b600 <flatcc_builder_get_buffer_alignment@@Base>:
  40b600:	push   rbp
  40b601:	mov    rbp,rsp
  40b604:	mov    QWORD PTR [rbp-0x8],rdi
  40b608:	mov    rax,QWORD PTR [rbp-0x8]
  40b60c:	movzx  eax,WORD PTR [rax+0xe8]
  40b613:	pop    rbp
  40b614:	ret    
  40b615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b61f:	nop

000000000040b620 <flatcc_builder_set_vtable_clustering@@Base>:
  40b620:	push   rbp
  40b621:	mov    rbp,rsp
  40b624:	mov    QWORD PTR [rbp-0x8],rdi
  40b628:	mov    DWORD PTR [rbp-0xc],esi
  40b62b:	cmp    DWORD PTR [rbp-0xc],0x0
  40b62f:	setne  al
  40b632:	xor    al,0xff
  40b634:	and    al,0x1
  40b636:	movzx  ecx,al
  40b639:	mov    rdx,QWORD PTR [rbp-0x8]
  40b63d:	mov    DWORD PTR [rdx+0x124],ecx
  40b643:	pop    rbp
  40b644:	ret    
  40b645:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b64f:	nop

000000000040b650 <flatcc_builder_set_block_align@@Base>:
  40b650:	push   rbp
  40b651:	mov    rbp,rsp
  40b654:	mov    QWORD PTR [rbp-0x8],rdi
  40b658:	mov    WORD PTR [rbp-0xa],si
  40b65c:	mov    ax,WORD PTR [rbp-0xa]
  40b660:	mov    rcx,QWORD PTR [rbp-0x8]
  40b664:	mov    WORD PTR [rcx+0xec],ax
  40b66b:	pop    rbp
  40b66c:	ret    
  40b66d:	nop    DWORD PTR [rax]

000000000040b670 <flatcc_builder_get_level@@Base>:
  40b670:	push   rbp
  40b671:	mov    rbp,rsp
  40b674:	mov    QWORD PTR [rbp-0x8],rdi
  40b678:	mov    rax,QWORD PTR [rbp-0x8]
  40b67c:	mov    eax,DWORD PTR [rax+0x104]
  40b682:	pop    rbp
  40b683:	ret    
  40b684:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b68e:	xchg   ax,ax

000000000040b690 <flatcc_builder_set_max_level@@Base>:
  40b690:	push   rbp
  40b691:	mov    rbp,rsp
  40b694:	mov    QWORD PTR [rbp-0x8],rdi
  40b698:	mov    DWORD PTR [rbp-0xc],esi
  40b69b:	mov    eax,DWORD PTR [rbp-0xc]
  40b69e:	mov    rcx,QWORD PTR [rbp-0x8]
  40b6a2:	mov    DWORD PTR [rcx+0x120],eax
  40b6a8:	mov    rcx,QWORD PTR [rbp-0x8]
  40b6ac:	mov    eax,DWORD PTR [rcx+0x108]
  40b6b2:	mov    rcx,QWORD PTR [rbp-0x8]
  40b6b6:	cmp    eax,DWORD PTR [rcx+0x120]
  40b6bc:	jge    40b6d6 <flatcc_builder_set_max_level@@Base+0x46>
  40b6c2:	mov    rax,QWORD PTR [rbp-0x8]
  40b6c6:	mov    ecx,DWORD PTR [rax+0x120]
  40b6cc:	mov    rax,QWORD PTR [rbp-0x8]
  40b6d0:	mov    DWORD PTR [rax+0x108],ecx
  40b6d6:	pop    rbp
  40b6d7:	ret    
  40b6d8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b6e0 <flatcc_builder_get_buffer_size@@Base>:
  40b6e0:	push   rbp
  40b6e1:	mov    rbp,rsp
  40b6e4:	mov    QWORD PTR [rbp-0x8],rdi
  40b6e8:	mov    rax,QWORD PTR [rbp-0x8]
  40b6ec:	mov    ecx,DWORD PTR [rax+0xf4]
  40b6f2:	mov    rax,QWORD PTR [rbp-0x8]
  40b6f6:	sub    ecx,DWORD PTR [rax+0xf0]
  40b6fc:	movsxd rax,ecx
  40b6ff:	pop    rbp
  40b700:	ret    
  40b701:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b70b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b710 <flatcc_builder_get_buffer_start@@Base>:
  40b710:	push   rbp
  40b711:	mov    rbp,rsp
  40b714:	mov    QWORD PTR [rbp-0x8],rdi
  40b718:	mov    rax,QWORD PTR [rbp-0x8]
  40b71c:	mov    eax,DWORD PTR [rax+0xf0]
  40b722:	pop    rbp
  40b723:	ret    
  40b724:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b72e:	xchg   ax,ax

000000000040b730 <flatcc_builder_get_buffer_end@@Base>:
  40b730:	push   rbp
  40b731:	mov    rbp,rsp
  40b734:	mov    QWORD PTR [rbp-0x8],rdi
  40b738:	mov    rax,QWORD PTR [rbp-0x8]
  40b73c:	mov    eax,DWORD PTR [rax+0xf4]
  40b742:	pop    rbp
  40b743:	ret    
  40b744:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b74e:	xchg   ax,ax

000000000040b750 <flatcc_builder_set_vtable_cache_limit@@Base>:
  40b750:	push   rbp
  40b751:	mov    rbp,rsp
  40b754:	mov    QWORD PTR [rbp-0x8],rdi
  40b758:	mov    QWORD PTR [rbp-0x10],rsi
  40b75c:	mov    rax,QWORD PTR [rbp-0x10]
  40b760:	mov    rcx,QWORD PTR [rbp-0x8]
  40b764:	mov    QWORD PTR [rcx+0x118],rax
  40b76b:	pop    rbp
  40b76c:	ret    
  40b76d:	nop    DWORD PTR [rax]

000000000040b770 <flatcc_builder_set_identifier@@Base>:
  40b770:	push   rbp
  40b771:	mov    rbp,rsp
  40b774:	mov    QWORD PTR [rbp-0x8],rdi
  40b778:	mov    QWORD PTR [rbp-0x10],rsi
  40b77c:	mov    rax,QWORD PTR [rbp-0x8]
  40b780:	add    rax,0x110
  40b786:	cmp    QWORD PTR [rbp-0x10],0x0
  40b78b:	mov    QWORD PTR [rbp-0x18],rax
  40b78f:	je     40b7a2 <flatcc_builder_set_identifier@@Base+0x32>
  40b795:	mov    rax,QWORD PTR [rbp-0x10]
  40b799:	mov    QWORD PTR [rbp-0x20],rax
  40b79d:	jmp    40b7b2 <flatcc_builder_set_identifier@@Base+0x42>
  40b7a2:	lea    rax,[rip+0x21b7]        # 40d960 <flatcc_builder_padding_base@@Base>
  40b7a9:	mov    QWORD PTR [rbp-0x20],rax
  40b7ad:	jmp    40b7b2 <flatcc_builder_set_identifier@@Base+0x42>
  40b7b2:	mov    rax,QWORD PTR [rbp-0x20]
  40b7b6:	mov    ecx,DWORD PTR [rax]
  40b7b8:	mov    rax,QWORD PTR [rbp-0x18]
  40b7bc:	mov    DWORD PTR [rax],ecx
  40b7be:	pop    rbp
  40b7bf:	ret    

000000000040b7c0 <flatcc_builder_get_type@@Base>:
  40b7c0:	push   rbp
  40b7c1:	mov    rbp,rsp
  40b7c4:	mov    QWORD PTR [rbp-0x8],rdi
  40b7c8:	mov    rax,QWORD PTR [rbp-0x8]
  40b7cc:	cmp    QWORD PTR [rax+0x30],0x0
  40b7d1:	je     40b7eb <flatcc_builder_get_type@@Base+0x2b>
  40b7d7:	mov    rax,QWORD PTR [rbp-0x8]
  40b7db:	mov    rax,QWORD PTR [rax+0x30]
  40b7df:	movzx  ecx,WORD PTR [rax+0xe]
  40b7e3:	mov    DWORD PTR [rbp-0xc],ecx
  40b7e6:	jmp    40b7f5 <flatcc_builder_get_type@@Base+0x35>
  40b7eb:	xor    eax,eax
  40b7ed:	mov    DWORD PTR [rbp-0xc],eax
  40b7f0:	jmp    40b7f5 <flatcc_builder_get_type@@Base+0x35>
  40b7f5:	mov    eax,DWORD PTR [rbp-0xc]
  40b7f8:	pop    rbp
  40b7f9:	ret    
  40b7fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000040b800 <flatcc_builder_get_type_at@@Base>:
  40b800:	push   rbp
  40b801:	mov    rbp,rsp
  40b804:	mov    QWORD PTR [rbp-0x10],rdi
  40b808:	mov    DWORD PTR [rbp-0x14],esi
  40b80b:	cmp    DWORD PTR [rbp-0x14],0x1
  40b80f:	jl     40b828 <flatcc_builder_get_type_at@@Base+0x28>
  40b815:	mov    eax,DWORD PTR [rbp-0x14]
  40b818:	mov    rcx,QWORD PTR [rbp-0x10]
  40b81c:	cmp    eax,DWORD PTR [rcx+0x104]
  40b822:	jle    40b834 <flatcc_builder_get_type_at@@Base+0x34>
  40b828:	mov    DWORD PTR [rbp-0x4],0x0
  40b82f:	jmp    40b85d <flatcc_builder_get_type_at@@Base+0x5d>
  40b834:	mov    rax,QWORD PTR [rbp-0x10]
  40b838:	mov    rax,QWORD PTR [rax+0x30]
  40b83c:	mov    ecx,DWORD PTR [rbp-0x14]
  40b83f:	mov    rdx,QWORD PTR [rbp-0x10]
  40b843:	sub    ecx,DWORD PTR [rdx+0x104]
  40b849:	movsxd rdx,ecx
  40b84c:	imul   rdx,rdx,0x24
  40b853:	add    rax,rdx
  40b856:	movzx  ecx,WORD PTR [rax+0xe]
  40b85a:	mov    DWORD PTR [rbp-0x4],ecx
  40b85d:	mov    eax,DWORD PTR [rbp-0x4]
  40b860:	pop    rbp
  40b861:	ret    
  40b862:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b86c:	nop    DWORD PTR [rax+0x0]

000000000040b870 <flatcc_builder_get_direct_buffer@@Base>:
  40b870:	push   rbp
  40b871:	mov    rbp,rsp
  40b874:	sub    rsp,0x20
  40b878:	mov    QWORD PTR [rbp-0x10],rdi
  40b87c:	mov    QWORD PTR [rbp-0x18],rsi
  40b880:	mov    rax,QWORD PTR [rbp-0x10]
  40b884:	cmp    DWORD PTR [rax+0x128],0x0
  40b88b:	je     40b8b0 <flatcc_builder_get_direct_buffer@@Base+0x40>
  40b891:	mov    rax,QWORD PTR [rbp-0x10]
  40b895:	add    rax,0x130
  40b89b:	mov    rsi,QWORD PTR [rbp-0x18]
  40b89f:	mov    rdi,rax
  40b8a2:	call   40b8e0 <flatcc_builder_get_direct_buffer@@Base+0x70>
  40b8a7:	mov    QWORD PTR [rbp-0x8],rax
  40b8ab:	jmp    40b8d3 <flatcc_builder_get_direct_buffer@@Base+0x63>
  40b8b0:	cmp    QWORD PTR [rbp-0x18],0x0
  40b8b5:	je     40b8c6 <flatcc_builder_get_direct_buffer@@Base+0x56>
  40b8bb:	mov    rax,QWORD PTR [rbp-0x18]
  40b8bf:	mov    QWORD PTR [rax],0x0
  40b8c6:	jmp    40b8cb <flatcc_builder_get_direct_buffer@@Base+0x5b>
  40b8cb:	mov    QWORD PTR [rbp-0x8],0x0
  40b8d3:	mov    rax,QWORD PTR [rbp-0x8]
  40b8d7:	add    rsp,0x20
  40b8db:	pop    rbp
  40b8dc:	ret    
  40b8dd:	nop    DWORD PTR [rax]
  40b8e0:	push   rbp
  40b8e1:	mov    rbp,rsp
  40b8e4:	mov    QWORD PTR [rbp-0x10],rdi
  40b8e8:	mov    QWORD PTR [rbp-0x18],rsi
  40b8ec:	mov    rax,QWORD PTR [rbp-0x10]
  40b8f0:	mov    rax,QWORD PTR [rax]
  40b8f3:	mov    rcx,QWORD PTR [rbp-0x10]
  40b8f7:	cmp    rax,QWORD PTR [rcx+0x8]
  40b8fb:	jne    40b92c <flatcc_builder_get_direct_buffer@@Base+0xbc>
  40b901:	cmp    QWORD PTR [rbp-0x18],0x0
  40b906:	je     40b91b <flatcc_builder_get_direct_buffer@@Base+0xab>
  40b90c:	mov    rax,QWORD PTR [rbp-0x10]
  40b910:	mov    rax,QWORD PTR [rax+0x30]
  40b914:	mov    rcx,QWORD PTR [rbp-0x18]
  40b918:	mov    QWORD PTR [rcx],rax
  40b91b:	mov    rax,QWORD PTR [rbp-0x10]
  40b91f:	mov    rax,QWORD PTR [rax+0x10]
  40b923:	mov    QWORD PTR [rbp-0x8],rax
  40b927:	jmp    40b94a <flatcc_builder_get_direct_buffer@@Base+0xda>
  40b92c:	cmp    QWORD PTR [rbp-0x18],0x0
  40b931:	je     40b942 <flatcc_builder_get_direct_buffer@@Base+0xd2>
  40b937:	mov    rax,QWORD PTR [rbp-0x18]
  40b93b:	mov    QWORD PTR [rax],0x0
  40b942:	mov    QWORD PTR [rbp-0x8],0x0
  40b94a:	mov    rax,QWORD PTR [rbp-0x8]
  40b94e:	pop    rbp
  40b94f:	ret    

000000000040b950 <flatcc_builder_copy_buffer@@Base>:
  40b950:	push   rbp
  40b951:	mov    rbp,rsp
  40b954:	sub    rsp,0x20
  40b958:	mov    QWORD PTR [rbp-0x10],rdi
  40b95c:	mov    QWORD PTR [rbp-0x18],rsi
  40b960:	mov    QWORD PTR [rbp-0x20],rdx
  40b964:	mov    rax,QWORD PTR [rbp-0x10]
  40b968:	cmp    DWORD PTR [rax+0x128],0x0
  40b96f:	jne    40b982 <flatcc_builder_copy_buffer@@Base+0x32>
  40b975:	mov    QWORD PTR [rbp-0x8],0x0
  40b97d:	jmp    40b9d7 <flatcc_builder_copy_buffer@@Base+0x87>
  40b982:	mov    rax,QWORD PTR [rbp-0x10]
  40b986:	add    rax,0x130
  40b98c:	mov    rsi,QWORD PTR [rbp-0x18]
  40b990:	mov    rdx,QWORD PTR [rbp-0x20]
  40b994:	mov    rdi,rax
  40b997:	call   40c5e0 <flatcc_emitter_copy_buffer@@Base>
  40b99c:	mov    QWORD PTR [rbp-0x18],rax
  40b9a0:	cmp    QWORD PTR [rbp-0x18],0x0
  40b9a5:	je     40b9b0 <flatcc_builder_copy_buffer@@Base+0x60>
  40b9ab:	jmp    40b9cf <flatcc_builder_copy_buffer@@Base+0x7f>
  40b9b0:	lea    rdi,[rip+0x2429]        # 40dde0 <flatcc_builder_padding_base@@Base+0x480>
  40b9b7:	lea    rsi,[rip+0x21b4]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40b9be:	mov    edx,0x786
  40b9c3:	lea    rcx,[rip+0x311a]        # 40eae4 <flatcc_builder_padding_base@@Base+0x1184>
  40b9ca:	call   403070 <__assert_fail@plt>
  40b9cf:	mov    rax,QWORD PTR [rbp-0x18]
  40b9d3:	mov    QWORD PTR [rbp-0x8],rax
  40b9d7:	mov    rax,QWORD PTR [rbp-0x8]
  40b9db:	add    rsp,0x20
  40b9df:	pop    rbp
  40b9e0:	ret    
  40b9e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040b9f0 <flatcc_builder_finalize_buffer@@Base>:
  40b9f0:	push   rbp
  40b9f1:	mov    rbp,rsp
  40b9f4:	sub    rsp,0x20
  40b9f8:	mov    QWORD PTR [rbp-0x8],rdi
  40b9fc:	mov    QWORD PTR [rbp-0x10],rsi
  40ba00:	mov    rdi,QWORD PTR [rbp-0x8]
  40ba04:	call   40b6e0 <flatcc_builder_get_buffer_size@@Base>
  40ba09:	mov    QWORD PTR [rbp-0x20],rax
  40ba0d:	cmp    QWORD PTR [rbp-0x10],0x0
  40ba12:	je     40ba23 <flatcc_builder_finalize_buffer@@Base+0x33>
  40ba18:	mov    rax,QWORD PTR [rbp-0x20]
  40ba1c:	mov    rcx,QWORD PTR [rbp-0x10]
  40ba20:	mov    QWORD PTR [rcx],rax
  40ba23:	mov    rdi,QWORD PTR [rbp-0x20]
  40ba27:	call   4030d0 <malloc@plt>
  40ba2c:	mov    QWORD PTR [rbp-0x18],rax
  40ba30:	cmp    QWORD PTR [rbp-0x18],0x0
  40ba35:	jne    40ba5a <flatcc_builder_finalize_buffer@@Base+0x6a>
  40ba3b:	lea    rdi,[rip+0x32f0]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40ba42:	lea    rsi,[rip+0x2129]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40ba49:	mov    edx,0x798
  40ba4e:	lea    rcx,[rip+0x30d4]        # 40eb29 <flatcc_builder_padding_base@@Base+0x11c9>
  40ba55:	call   403070 <__assert_fail@plt>
  40ba5a:	mov    rdi,QWORD PTR [rbp-0x8]
  40ba5e:	mov    rsi,QWORD PTR [rbp-0x18]
  40ba62:	mov    rdx,QWORD PTR [rbp-0x20]
  40ba66:	call   40b950 <flatcc_builder_copy_buffer@@Base>
  40ba6b:	cmp    rax,0x0
  40ba6f:	jne    40ba94 <flatcc_builder_finalize_buffer@@Base+0xa4>
  40ba75:	lea    rdi,[rip+0x32b6]        # 40ed32 <flatcc_builder_padding_base@@Base+0x13d2>
  40ba7c:	lea    rsi,[rip+0x20ef]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40ba83:	mov    edx,0x79c
  40ba88:	lea    rcx,[rip+0x309a]        # 40eb29 <flatcc_builder_padding_base@@Base+0x11c9>
  40ba8f:	call   403070 <__assert_fail@plt>
  40ba94:	jmp    40ba99 <flatcc_builder_finalize_buffer@@Base+0xa9>
  40ba99:	cmp    QWORD PTR [rbp-0x18],0x0
  40ba9e:	jne    40baba <flatcc_builder_finalize_buffer@@Base+0xca>
  40baa4:	cmp    QWORD PTR [rbp-0x10],0x0
  40baa9:	je     40baba <flatcc_builder_finalize_buffer@@Base+0xca>
  40baaf:	mov    rax,QWORD PTR [rbp-0x10]
  40bab3:	mov    QWORD PTR [rax],0x0
  40baba:	mov    rax,QWORD PTR [rbp-0x18]
  40babe:	add    rsp,0x20
  40bac2:	pop    rbp
  40bac3:	ret    
  40bac4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bace:	xchg   ax,ax

000000000040bad0 <flatcc_builder_finalize_aligned_buffer@@Base>:
  40bad0:	push   rbp
  40bad1:	mov    rbp,rsp
  40bad4:	sub    rsp,0x30
  40bad8:	mov    QWORD PTR [rbp-0x8],rdi
  40badc:	mov    QWORD PTR [rbp-0x10],rsi
  40bae0:	mov    rdi,QWORD PTR [rbp-0x8]
  40bae4:	call   40b6e0 <flatcc_builder_get_buffer_size@@Base>
  40bae9:	mov    QWORD PTR [rbp-0x28],rax
  40baed:	cmp    QWORD PTR [rbp-0x10],0x0
  40baf2:	je     40bb03 <flatcc_builder_finalize_aligned_buffer@@Base+0x33>
  40baf8:	mov    rax,QWORD PTR [rbp-0x28]
  40bafc:	mov    rcx,QWORD PTR [rbp-0x10]
  40bb00:	mov    QWORD PTR [rcx],rax
  40bb03:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb07:	call   40b600 <flatcc_builder_get_buffer_alignment@@Base>
  40bb0c:	movzx  ecx,ax
  40bb0f:	mov    edx,ecx
  40bb11:	mov    QWORD PTR [rbp-0x20],rdx
  40bb15:	mov    rdx,QWORD PTR [rbp-0x28]
  40bb19:	add    rdx,QWORD PTR [rbp-0x20]
  40bb1d:	sub    rdx,0x1
  40bb24:	mov    rsi,QWORD PTR [rbp-0x20]
  40bb28:	sub    rsi,0x1
  40bb2f:	xor    rsi,0xffffffffffffffff
  40bb36:	and    rdx,rsi
  40bb39:	mov    QWORD PTR [rbp-0x28],rdx
  40bb3d:	mov    rdi,QWORD PTR [rbp-0x20]
  40bb41:	mov    rsi,QWORD PTR [rbp-0x28]
  40bb45:	call   40bbc0 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40bb4a:	mov    QWORD PTR [rbp-0x18],rax
  40bb4e:	cmp    QWORD PTR [rbp-0x18],0x0
  40bb53:	jne    40bb5e <flatcc_builder_finalize_aligned_buffer@@Base+0x8e>
  40bb59:	jmp    40bb94 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40bb5e:	mov    rdi,QWORD PTR [rbp-0x8]
  40bb62:	mov    rsi,QWORD PTR [rbp-0x18]
  40bb66:	mov    rdx,QWORD PTR [rbp-0x28]
  40bb6a:	call   40b950 <flatcc_builder_copy_buffer@@Base>
  40bb6f:	cmp    rax,0x0
  40bb73:	jne    40bb8f <flatcc_builder_finalize_aligned_buffer@@Base+0xbf>
  40bb79:	mov    rdi,QWORD PTR [rbp-0x18]
  40bb7d:	call   403030 <free@plt>
  40bb82:	mov    QWORD PTR [rbp-0x18],0x0
  40bb8a:	jmp    40bb94 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40bb8f:	jmp    40bb94 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
  40bb94:	cmp    QWORD PTR [rbp-0x18],0x0
  40bb99:	jne    40bbb5 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  40bb9f:	cmp    QWORD PTR [rbp-0x10],0x0
  40bba4:	je     40bbb5 <flatcc_builder_finalize_aligned_buffer@@Base+0xe5>
  40bbaa:	mov    rax,QWORD PTR [rbp-0x10]
  40bbae:	mov    QWORD PTR [rax],0x0
  40bbb5:	mov    rax,QWORD PTR [rbp-0x18]
  40bbb9:	add    rsp,0x30
  40bbbd:	pop    rbp
  40bbbe:	ret    
  40bbbf:	nop
  40bbc0:	push   rbp
  40bbc1:	mov    rbp,rsp
  40bbc4:	sub    rsp,0x20
  40bbc8:	mov    QWORD PTR [rbp-0x8],rdi
  40bbcc:	mov    QWORD PTR [rbp-0x10],rsi
  40bbd0:	mov    QWORD PTR [rbp-0x20],0x0
  40bbd8:	cmp    QWORD PTR [rbp-0x8],0x8
  40bbdd:	jae    40bbeb <flatcc_builder_finalize_aligned_buffer@@Base+0x11b>
  40bbe3:	mov    QWORD PTR [rbp-0x8],0x8
  40bbeb:	mov    rsi,QWORD PTR [rbp-0x8]
  40bbef:	mov    rdx,QWORD PTR [rbp-0x10]
  40bbf3:	lea    rdi,[rbp-0x20]
  40bbf7:	call   4030f0 <posix_memalign@plt>
  40bbfc:	mov    DWORD PTR [rbp-0x14],eax
  40bbff:	cmp    DWORD PTR [rbp-0x14],0x0
  40bc03:	je     40bc25 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40bc09:	cmp    QWORD PTR [rbp-0x20],0x0
  40bc0e:	je     40bc25 <flatcc_builder_finalize_aligned_buffer@@Base+0x155>
  40bc14:	mov    rdi,QWORD PTR [rbp-0x20]
  40bc18:	call   403030 <free@plt>
  40bc1d:	mov    QWORD PTR [rbp-0x20],0x0
  40bc25:	mov    rax,QWORD PTR [rbp-0x20]
  40bc29:	add    rsp,0x20
  40bc2d:	pop    rbp
  40bc2e:	ret    
  40bc2f:	nop

000000000040bc30 <flatcc_builder_aligned_alloc@@Base>:
  40bc30:	push   rbp
  40bc31:	mov    rbp,rsp
  40bc34:	sub    rsp,0x10
  40bc38:	mov    QWORD PTR [rbp-0x8],rdi
  40bc3c:	mov    QWORD PTR [rbp-0x10],rsi
  40bc40:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc44:	mov    rsi,QWORD PTR [rbp-0x10]
  40bc48:	call   40bbc0 <flatcc_builder_finalize_aligned_buffer@@Base+0xf0>
  40bc4d:	add    rsp,0x10
  40bc51:	pop    rbp
  40bc52:	ret    
  40bc53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc5d:	nop    DWORD PTR [rax]

000000000040bc60 <flatcc_builder_aligned_free@@Base>:
  40bc60:	push   rbp
  40bc61:	mov    rbp,rsp
  40bc64:	sub    rsp,0x10
  40bc68:	mov    QWORD PTR [rbp-0x8],rdi
  40bc6c:	mov    rdi,QWORD PTR [rbp-0x8]
  40bc70:	call   403030 <free@plt>
  40bc75:	add    rsp,0x10
  40bc79:	pop    rbp
  40bc7a:	ret    
  40bc7b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040bc80 <flatcc_builder_get_emit_context@@Base>:
  40bc80:	push   rbp
  40bc81:	mov    rbp,rsp
  40bc84:	mov    QWORD PTR [rbp-0x8],rdi
  40bc88:	mov    rax,QWORD PTR [rbp-0x8]
  40bc8c:	mov    rax,QWORD PTR [rax+0x38]
  40bc90:	pop    rbp
  40bc91:	ret    
  40bc92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc9c:	nop    DWORD PTR [rax+0x0]
  40bca0:	push   rbp
  40bca1:	mov    rbp,rsp
  40bca4:	mov    QWORD PTR [rbp-0x8],rdi
  40bca8:	mov    WORD PTR [rbp-0xa],si
  40bcac:	mov    rax,QWORD PTR [rbp-0x8]
  40bcb0:	mov    ecx,DWORD PTR [rax+0xf4]
  40bcb6:	movzx  edx,WORD PTR [rbp-0xa]
  40bcba:	sub    edx,0x1
  40bcbd:	and    ecx,edx
  40bcbf:	mov    eax,ecx
  40bcc1:	pop    rbp
  40bcc2:	ret    
  40bcc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bccd:	nop    DWORD PTR [rax]
  40bcd0:	push   rbp
  40bcd1:	mov    rbp,rsp
  40bcd4:	sub    rsp,0x30
  40bcd8:	mov    QWORD PTR [rbp-0x10],rdi
  40bcdc:	mov    QWORD PTR [rbp-0x18],rsi
  40bce0:	mov    DWORD PTR [rbp-0x1c],edx
  40bce3:	mov    rax,QWORD PTR [rbp-0x10]
  40bce7:	add    rax,0x58
  40bced:	add    rax,0x10
  40bcf3:	mov    QWORD PTR [rbp-0x28],rax
  40bcf7:	mov    rax,QWORD PTR [rbp-0x10]
  40bcfb:	mov    rax,QWORD PTR [rax+0x50]
  40bcff:	mov    rcx,QWORD PTR [rbp-0x10]
  40bd03:	mov    rdi,QWORD PTR [rcx+0x40]
  40bd07:	mov    rsi,QWORD PTR [rbp-0x28]
  40bd0b:	mov    rcx,QWORD PTR [rbp-0x10]
  40bd0f:	mov    edx,DWORD PTR [rcx+0x28]
  40bd12:	mov    ecx,edx
  40bd14:	add    rcx,QWORD PTR [rbp-0x18]
  40bd18:	mov    rdx,rcx
  40bd1b:	mov    r8d,0x1
  40bd21:	mov    ecx,r8d
  40bd24:	call   rax
  40bd26:	cmp    eax,0x0
  40bd29:	je     40bd3b <flatcc_builder_get_emit_context@@Base+0xbb>
  40bd2f:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40bd36:	jmp    40bd4e <flatcc_builder_get_emit_context@@Base+0xce>
  40bd3b:	mov    rdi,QWORD PTR [rbp-0x10]
  40bd3f:	mov    esi,DWORD PTR [rbp-0x1c]
  40bd42:	call   407c70 <flatcc_builder_start_struct@@Base+0x70>
  40bd47:	mov    DWORD PTR [rbp-0x4],0x0
  40bd4e:	mov    eax,DWORD PTR [rbp-0x4]
  40bd51:	add    rsp,0x30
  40bd55:	pop    rbp
  40bd56:	ret    
  40bd57:	nop    WORD PTR [rax+rax*1+0x0]
  40bd60:	push   rbp
  40bd61:	mov    rbp,rsp
  40bd64:	sub    rsp,0x30
  40bd68:	mov    QWORD PTR [rbp-0x10],rdi
  40bd6c:	mov    rax,QWORD PTR [rbp-0x10]
  40bd70:	add    rax,0x58
  40bd76:	add    rax,0x50
  40bd7c:	mov    QWORD PTR [rbp-0x18],rax
  40bd80:	mov    rax,QWORD PTR [rbp-0x10]
  40bd84:	cmp    DWORD PTR [rax+0xe4],0x0
  40bd8b:	jne    40bd96 <flatcc_builder_get_emit_context@@Base+0x116>
  40bd91:	jmp    40bdb5 <flatcc_builder_get_emit_context@@Base+0x135>
  40bd96:	lea    rdi,[rip+0x2f59]        # 40ecf6 <flatcc_builder_padding_base@@Base+0x1396>
  40bd9d:	lea    rsi,[rip+0x1dce]        # 40db72 <flatcc_builder_padding_base@@Base+0x212>
  40bda4:	mov    edx,0x156
  40bda9:	lea    rcx,[rip+0x2f55]        # 40ed05 <flatcc_builder_padding_base@@Base+0x13a5>
  40bdb0:	call   403070 <__assert_fail@plt>
  40bdb5:	xor    r8d,r8d
  40bdb8:	mov    rdi,QWORD PTR [rbp-0x10]
  40bdbc:	mov    rax,QWORD PTR [rbp-0x10]
  40bdc0:	mov    ecx,DWORD PTR [rax+0xe4]
  40bdc6:	mov    edx,ecx
  40bdc8:	mov    esi,0x6
  40bdcd:	mov    ecx,0x10
  40bdd2:	call   406860 <flatcc_builder_enter_user_frame_ptr@@Base+0xf0>
  40bdd7:	cmp    rax,0x0
  40bddb:	jne    40bded <flatcc_builder_get_emit_context@@Base+0x16d>
  40bde1:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40bde8:	jmp    40bec1 <flatcc_builder_get_emit_context@@Base+0x241>
  40bded:	mov    rax,QWORD PTR [rbp-0x10]
  40bdf1:	mov    DWORD PTR [rax+0xe4],0x10
  40bdfb:	mov    QWORD PTR [rbp-0x20],0x100
  40be03:	mov    rax,QWORD PTR [rbp-0x10]
  40be07:	mov    rax,QWORD PTR [rax+0x50]
  40be0b:	mov    rcx,QWORD PTR [rbp-0x10]
  40be0f:	mov    rdi,QWORD PTR [rcx+0x40]
  40be13:	mov    rsi,QWORD PTR [rbp-0x18]
  40be17:	mov    rdx,QWORD PTR [rbp-0x20]
  40be1b:	mov    ecx,0x1
  40be20:	mov    r8d,0x5
  40be26:	call   rax
  40be28:	cmp    eax,0x0
  40be2b:	je     40be3d <flatcc_builder_get_emit_context@@Base+0x1bd>
  40be31:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40be38:	jmp    40bec1 <flatcc_builder_get_emit_context@@Base+0x241>
  40be3d:	jmp    40be42 <flatcc_builder_get_emit_context@@Base+0x1c2>
  40be42:	mov    rax,QWORD PTR [rbp-0x20]
  40be46:	shl    rax,0x1
  40be4a:	mov    rcx,QWORD PTR [rbp-0x18]
  40be4e:	cmp    rax,QWORD PTR [rcx+0x8]
  40be52:	ja     40be69 <flatcc_builder_get_emit_context@@Base+0x1e9>
  40be58:	mov    rax,QWORD PTR [rbp-0x20]
  40be5c:	shl    rax,0x1
  40be60:	mov    QWORD PTR [rbp-0x20],rax
  40be64:	jmp    40be42 <flatcc_builder_get_emit_context@@Base+0x1c2>
  40be69:	mov    rax,QWORD PTR [rbp-0x20]
  40be6d:	shr    rax,0x2
  40be71:	mov    QWORD PTR [rbp-0x20],rax
  40be75:	mov    QWORD PTR [rbp-0x28],0x0
  40be7d:	mov    rcx,QWORD PTR [rbp-0x28]
  40be81:	mov    eax,0x1
  40be86:	shl    rax,cl
  40be89:	cmp    rax,QWORD PTR [rbp-0x20]
  40be8d:	jae    40beab <flatcc_builder_get_emit_context@@Base+0x22b>
  40be93:	jmp    40be98 <flatcc_builder_get_emit_context@@Base+0x218>
  40be98:	mov    rax,QWORD PTR [rbp-0x28]
  40be9c:	add    rax,0x1
  40bea2:	mov    QWORD PTR [rbp-0x28],rax
  40bea6:	jmp    40be7d <flatcc_builder_get_emit_context@@Base+0x1fd>
  40beab:	mov    rax,QWORD PTR [rbp-0x28]
  40beaf:	mov    rcx,QWORD PTR [rbp-0x10]
  40beb3:	mov    QWORD PTR [rcx+0xd8],rax
  40beba:	mov    DWORD PTR [rbp-0x4],0x0
  40bec1:	mov    eax,DWORD PTR [rbp-0x4]
  40bec4:	add    rsp,0x30
  40bec8:	pop    rbp
  40bec9:	ret    
  40beca:	nop    WORD PTR [rax+rax*1+0x0]

000000000040bed0 <flatcc_emitter_recycle_page@@Base>:
  40bed0:	push   rbp
  40bed1:	mov    rbp,rsp
  40bed4:	mov    QWORD PTR [rbp-0x10],rdi
  40bed8:	mov    QWORD PTR [rbp-0x18],rsi
  40bedc:	mov    rax,QWORD PTR [rbp-0x18]
  40bee0:	mov    rcx,QWORD PTR [rbp-0x10]
  40bee4:	cmp    rax,QWORD PTR [rcx]
  40bee7:	je     40beff <flatcc_emitter_recycle_page@@Base+0x2f>
  40beed:	mov    rax,QWORD PTR [rbp-0x18]
  40bef1:	mov    rcx,QWORD PTR [rbp-0x10]
  40bef5:	cmp    rax,QWORD PTR [rcx+0x8]
  40bef9:	jne    40bf0b <flatcc_emitter_recycle_page@@Base+0x3b>
  40beff:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40bf06:	jmp    40bfa3 <flatcc_emitter_recycle_page@@Base+0xd3>
  40bf0b:	mov    rax,QWORD PTR [rbp-0x18]
  40bf0f:	mov    rax,QWORD PTR [rax+0xb88]
  40bf16:	mov    rcx,QWORD PTR [rbp-0x18]
  40bf1a:	mov    rcx,QWORD PTR [rcx+0xb80]
  40bf21:	mov    QWORD PTR [rcx+0xb88],rax
  40bf28:	mov    rax,QWORD PTR [rbp-0x18]
  40bf2c:	mov    rax,QWORD PTR [rax+0xb80]
  40bf33:	mov    rcx,QWORD PTR [rbp-0x18]
  40bf37:	mov    rcx,QWORD PTR [rcx+0xb88]
  40bf3e:	mov    QWORD PTR [rcx+0xb80],rax
  40bf45:	mov    rax,QWORD PTR [rbp-0x10]
  40bf49:	mov    rax,QWORD PTR [rax]
  40bf4c:	mov    rax,QWORD PTR [rax+0xb88]
  40bf53:	mov    rcx,QWORD PTR [rbp-0x18]
  40bf57:	mov    QWORD PTR [rcx+0xb88],rax
  40bf5e:	mov    rax,QWORD PTR [rbp-0x10]
  40bf62:	mov    rax,QWORD PTR [rax]
  40bf65:	mov    rcx,QWORD PTR [rbp-0x18]
  40bf69:	mov    QWORD PTR [rcx+0xb80],rax
  40bf70:	mov    rax,QWORD PTR [rbp-0x18]
  40bf74:	mov    rcx,QWORD PTR [rbp-0x18]
  40bf78:	mov    rcx,QWORD PTR [rcx+0xb88]
  40bf7f:	mov    QWORD PTR [rcx+0xb80],rax
  40bf86:	mov    rax,QWORD PTR [rbp-0x18]
  40bf8a:	mov    rcx,QWORD PTR [rbp-0x18]
  40bf8e:	mov    rcx,QWORD PTR [rcx+0xb80]
  40bf95:	mov    QWORD PTR [rcx+0xb88],rax
  40bf9c:	mov    DWORD PTR [rbp-0x4],0x0
  40bfa3:	mov    eax,DWORD PTR [rbp-0x4]
  40bfa6:	pop    rbp
  40bfa7:	ret    
  40bfa8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040bfb0 <flatcc_emitter_reset@@Base>:
  40bfb0:	push   rbp
  40bfb1:	mov    rbp,rsp
  40bfb4:	sub    rsp,0x20
  40bfb8:	mov    QWORD PTR [rbp-0x8],rdi
  40bfbc:	mov    rax,QWORD PTR [rbp-0x8]
  40bfc0:	mov    rax,QWORD PTR [rax]
  40bfc3:	mov    QWORD PTR [rbp-0x10],rax
  40bfc7:	mov    rax,QWORD PTR [rbp-0x8]
  40bfcb:	cmp    QWORD PTR [rax],0x0
  40bfcf:	jne    40bfda <flatcc_emitter_reset@@Base+0x2a>
  40bfd5:	jmp    40c148 <flatcc_emitter_reset@@Base+0x198>
  40bfda:	xor    eax,eax
  40bfdc:	mov    rcx,QWORD PTR [rbp-0x8]
  40bfe0:	mov    rcx,QWORD PTR [rcx]
  40bfe3:	mov    rdx,QWORD PTR [rbp-0x8]
  40bfe7:	mov    QWORD PTR [rdx+0x8],rcx
  40bfeb:	mov    rcx,QWORD PTR [rbp-0x8]
  40bfef:	mov    rcx,QWORD PTR [rcx]
  40bff2:	add    rcx,0x5c0
  40bff9:	mov    rdx,QWORD PTR [rbp-0x8]
  40bffd:	mov    QWORD PTR [rdx+0x10],rcx
  40c001:	mov    rcx,QWORD PTR [rbp-0x8]
  40c005:	mov    rcx,QWORD PTR [rcx+0x10]
  40c009:	mov    rdx,QWORD PTR [rbp-0x8]
  40c00d:	mov    QWORD PTR [rdx+0x20],rcx
  40c011:	mov    rcx,QWORD PTR [rbp-0x8]
  40c015:	mov    QWORD PTR [rcx+0x18],0x5c0
  40c01d:	mov    rcx,QWORD PTR [rbp-0x8]
  40c021:	mov    QWORD PTR [rcx+0x28],0x5c0
  40c029:	mov    rcx,QWORD PTR [rbp-0x8]
  40c02d:	mov    rcx,QWORD PTR [rcx+0x18]
  40c031:	sub    eax,ecx
  40c033:	mov    rdx,QWORD PTR [rbp-0x8]
  40c037:	mov    rdx,QWORD PTR [rdx]
  40c03a:	mov    DWORD PTR [rdx+0xb90],eax
  40c040:	mov    rdx,QWORD PTR [rbp-0x8]
  40c044:	cmp    QWORD PTR [rdx+0x40],0x0
  40c049:	jne    40c05f <flatcc_emitter_reset@@Base+0xaf>
  40c04f:	mov    rax,QWORD PTR [rbp-0x8]
  40c053:	mov    rax,QWORD PTR [rax+0x30]
  40c057:	mov    rcx,QWORD PTR [rbp-0x8]
  40c05b:	mov    QWORD PTR [rcx+0x40],rax
  40c05f:	mov    rax,QWORD PTR [rbp-0x8]
  40c063:	imul   rax,QWORD PTR [rax+0x40],0x3
  40c06b:	shr    rax,0x2
  40c06f:	mov    rcx,QWORD PTR [rbp-0x8]
  40c073:	mov    rcx,QWORD PTR [rcx+0x30]
  40c077:	shr    rcx,0x2
  40c07b:	add    rax,rcx
  40c07e:	mov    rcx,QWORD PTR [rbp-0x8]
  40c082:	mov    QWORD PTR [rcx+0x40],rax
  40c086:	mov    rax,QWORD PTR [rbp-0x8]
  40c08a:	mov    QWORD PTR [rax+0x30],0x0
  40c092:	xor    eax,eax
  40c094:	mov    rcx,QWORD PTR [rbp-0x8]
  40c098:	mov    rcx,QWORD PTR [rcx+0x40]
  40c09c:	shl    rcx,0x1
  40c0a0:	mov    rdx,QWORD PTR [rbp-0x8]
  40c0a4:	cmp    rcx,QWORD PTR [rdx+0x38]
  40c0a8:	mov    BYTE PTR [rbp-0x11],al
  40c0ab:	jae    40c0cd <flatcc_emitter_reset@@Base+0x11d>
  40c0b1:	mov    rax,QWORD PTR [rbp-0x8]
  40c0b5:	mov    rax,QWORD PTR [rax+0x8]
  40c0b9:	mov    rax,QWORD PTR [rax+0xb80]
  40c0c0:	mov    rcx,QWORD PTR [rbp-0x8]
  40c0c4:	cmp    rax,QWORD PTR [rcx]
  40c0c7:	setne  dl
  40c0ca:	mov    BYTE PTR [rbp-0x11],dl
  40c0cd:	mov    al,BYTE PTR [rbp-0x11]
  40c0d0:	test   al,0x1
  40c0d2:	jne    40c0dd <flatcc_emitter_reset@@Base+0x12d>
  40c0d8:	jmp    40c148 <flatcc_emitter_reset@@Base+0x198>
  40c0dd:	mov    rax,QWORD PTR [rbp-0x8]
  40c0e1:	mov    rax,QWORD PTR [rax+0x8]
  40c0e5:	mov    rax,QWORD PTR [rax+0xb80]
  40c0ec:	mov    QWORD PTR [rbp-0x10],rax
  40c0f0:	mov    rax,QWORD PTR [rbp-0x10]
  40c0f4:	mov    rax,QWORD PTR [rax+0xb80]
  40c0fb:	mov    rcx,QWORD PTR [rbp-0x8]
  40c0ff:	mov    rcx,QWORD PTR [rcx+0x8]
  40c103:	mov    QWORD PTR [rcx+0xb80],rax
  40c10a:	mov    rax,QWORD PTR [rbp-0x8]
  40c10e:	mov    rax,QWORD PTR [rax+0x8]
  40c112:	mov    rcx,QWORD PTR [rbp-0x10]
  40c116:	mov    rcx,QWORD PTR [rcx+0xb80]
  40c11d:	mov    QWORD PTR [rcx+0xb88],rax
  40c124:	mov    rax,QWORD PTR [rbp-0x10]
  40c128:	mov    rdi,rax
  40c12b:	call   403030 <free@plt>
  40c130:	mov    rax,QWORD PTR [rbp-0x8]
  40c134:	mov    rcx,QWORD PTR [rax+0x38]
  40c138:	sub    rcx,0xb80
  40c13f:	mov    QWORD PTR [rax+0x38],rcx
  40c143:	jmp    40c092 <flatcc_emitter_reset@@Base+0xe2>
  40c148:	add    rsp,0x20
  40c14c:	pop    rbp
  40c14d:	ret    
  40c14e:	xchg   ax,ax

000000000040c150 <flatcc_emitter_clear@@Base>:
  40c150:	push   rbp
  40c151:	mov    rbp,rsp
  40c154:	sub    rsp,0x10
  40c158:	mov    QWORD PTR [rbp-0x8],rdi
  40c15c:	mov    rax,QWORD PTR [rbp-0x8]
  40c160:	mov    rax,QWORD PTR [rax]
  40c163:	mov    QWORD PTR [rbp-0x10],rax
  40c167:	cmp    QWORD PTR [rbp-0x10],0x0
  40c16c:	jne    40c177 <flatcc_emitter_clear@@Base+0x27>
  40c172:	jmp    40c1e5 <flatcc_emitter_clear@@Base+0x95>
  40c177:	mov    rax,QWORD PTR [rbp-0x10]
  40c17b:	mov    rax,QWORD PTR [rax+0xb88]
  40c182:	mov    QWORD PTR [rax+0xb80],0x0
  40c18d:	mov    rax,QWORD PTR [rbp-0x10]
  40c191:	cmp    QWORD PTR [rax+0xb80],0x0
  40c199:	je     40c1c6 <flatcc_emitter_clear@@Base+0x76>
  40c19f:	mov    rax,QWORD PTR [rbp-0x10]
  40c1a3:	mov    rax,QWORD PTR [rax+0xb80]
  40c1aa:	mov    QWORD PTR [rbp-0x10],rax
  40c1ae:	mov    rax,QWORD PTR [rbp-0x10]
  40c1b2:	mov    rax,QWORD PTR [rax+0xb88]
  40c1b9:	mov    rdi,rax
  40c1bc:	call   403030 <free@plt>
  40c1c1:	jmp    40c18d <flatcc_emitter_clear@@Base+0x3d>
  40c1c6:	mov    rax,QWORD PTR [rbp-0x10]
  40c1ca:	mov    rdi,rax
  40c1cd:	call   403030 <free@plt>
  40c1d2:	xor    esi,esi
  40c1d4:	mov    rax,QWORD PTR [rbp-0x8]
  40c1d8:	mov    rdi,rax
  40c1db:	mov    edx,0x48
  40c1e0:	call   403080 <memset@plt>
  40c1e5:	add    rsp,0x10
  40c1e9:	pop    rbp
  40c1ea:	ret    
  40c1eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000040c1f0 <flatcc_emitter@@Base>:
  40c1f0:	push   rbp
  40c1f1:	mov    rbp,rsp
  40c1f4:	sub    rsp,0x40
  40c1f8:	mov    QWORD PTR [rbp-0x10],rdi
  40c1fc:	mov    QWORD PTR [rbp-0x18],rsi
  40c200:	mov    DWORD PTR [rbp-0x1c],edx
  40c203:	mov    DWORD PTR [rbp-0x20],ecx
  40c206:	mov    QWORD PTR [rbp-0x28],r8
  40c20a:	mov    rax,QWORD PTR [rbp-0x10]
  40c20e:	mov    QWORD PTR [rbp-0x30],rax
  40c212:	mov    rax,QWORD PTR [rbp-0x28]
  40c216:	mov    rsi,QWORD PTR [rbp-0x30]
  40c21a:	add    rax,QWORD PTR [rsi+0x30]
  40c21e:	mov    QWORD PTR [rsi+0x30],rax
  40c222:	cmp    DWORD PTR [rbp-0x20],0x0
  40c226:	jge    40c2ea <flatcc_emitter@@Base+0xfa>
  40c22c:	mov    rax,QWORD PTR [rbp-0x28]
  40c230:	mov    rcx,QWORD PTR [rbp-0x30]
  40c234:	cmp    rax,QWORD PTR [rcx+0x18]
  40c238:	ja     40c27c <flatcc_emitter@@Base+0x8c>
  40c23e:	xor    eax,eax
  40c240:	mov    ecx,eax
  40c242:	mov    rdx,QWORD PTR [rbp-0x28]
  40c246:	mov    rsi,QWORD PTR [rbp-0x30]
  40c24a:	mov    rdi,QWORD PTR [rsi+0x10]
  40c24e:	sub    rcx,rdx
  40c251:	add    rdi,rcx
  40c254:	mov    QWORD PTR [rsi+0x10],rdi
  40c258:	mov    rcx,QWORD PTR [rbp-0x28]
  40c25c:	mov    rdx,QWORD PTR [rbp-0x30]
  40c260:	mov    rsi,QWORD PTR [rdx+0x18]
  40c264:	sub    rsi,rcx
  40c267:	mov    QWORD PTR [rdx+0x18],rsi
  40c26b:	mov    rcx,QWORD PTR [rbp-0x30]
  40c26f:	mov    rcx,QWORD PTR [rcx+0x10]
  40c273:	mov    QWORD PTR [rbp-0x38],rcx
  40c277:	jmp    40c39a <flatcc_emitter@@Base+0x1aa>
  40c27c:	mov    eax,DWORD PTR [rbp-0x1c]
  40c27f:	mov    rcx,QWORD PTR [rbp-0x18]
  40c283:	movsxd rdx,eax
  40c286:	shl    rdx,0x4
  40c28a:	add    rcx,rdx
  40c28d:	mov    QWORD PTR [rbp-0x18],rcx
  40c291:	mov    eax,DWORD PTR [rbp-0x1c]
  40c294:	mov    ecx,eax
  40c296:	add    ecx,0xffffffff
  40c299:	mov    DWORD PTR [rbp-0x1c],ecx
  40c29c:	cmp    eax,0x0
  40c29f:	je     40c2e5 <flatcc_emitter@@Base+0xf5>
  40c2a5:	mov    rax,QWORD PTR [rbp-0x18]
  40c2a9:	add    rax,0xfffffffffffffff0
  40c2af:	mov    QWORD PTR [rbp-0x18],rax
  40c2b3:	mov    rdi,QWORD PTR [rbp-0x30]
  40c2b7:	mov    rax,QWORD PTR [rbp-0x18]
  40c2bb:	mov    rsi,QWORD PTR [rax]
  40c2be:	mov    rax,QWORD PTR [rbp-0x18]
  40c2c2:	mov    rdx,QWORD PTR [rax+0x8]
  40c2c6:	call   40c400 <flatcc_emitter@@Base+0x210>
  40c2cb:	cmp    eax,0x0
  40c2ce:	je     40c2e0 <flatcc_emitter@@Base+0xf0>
  40c2d4:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c2db:	jmp    40c3f5 <flatcc_emitter@@Base+0x205>
  40c2e0:	jmp    40c291 <flatcc_emitter@@Base+0xa1>
  40c2e5:	jmp    40c38e <flatcc_emitter@@Base+0x19e>
  40c2ea:	mov    rax,QWORD PTR [rbp-0x28]
  40c2ee:	mov    rcx,QWORD PTR [rbp-0x30]
  40c2f2:	cmp    rax,QWORD PTR [rcx+0x28]
  40c2f6:	ja     40c330 <flatcc_emitter@@Base+0x140>
  40c2fc:	mov    rax,QWORD PTR [rbp-0x30]
  40c300:	mov    rax,QWORD PTR [rax+0x20]
  40c304:	mov    QWORD PTR [rbp-0x38],rax
  40c308:	mov    rax,QWORD PTR [rbp-0x28]
  40c30c:	mov    rcx,QWORD PTR [rbp-0x30]
  40c310:	add    rax,QWORD PTR [rcx+0x20]
  40c314:	mov    QWORD PTR [rcx+0x20],rax
  40c318:	mov    rax,QWORD PTR [rbp-0x28]
  40c31c:	mov    rcx,QWORD PTR [rbp-0x30]
  40c320:	mov    rdx,QWORD PTR [rcx+0x28]
  40c324:	sub    rdx,rax
  40c327:	mov    QWORD PTR [rcx+0x28],rdx
  40c32b:	jmp    40c39a <flatcc_emitter@@Base+0x1aa>
  40c330:	jmp    40c335 <flatcc_emitter@@Base+0x145>
  40c335:	mov    eax,DWORD PTR [rbp-0x1c]
  40c338:	mov    ecx,eax
  40c33a:	add    ecx,0xffffffff
  40c33d:	mov    DWORD PTR [rbp-0x1c],ecx
  40c340:	cmp    eax,0x0
  40c343:	je     40c389 <flatcc_emitter@@Base+0x199>
  40c349:	mov    rdi,QWORD PTR [rbp-0x30]
  40c34d:	mov    rax,QWORD PTR [rbp-0x18]
  40c351:	mov    rsi,QWORD PTR [rax]
  40c354:	mov    rax,QWORD PTR [rbp-0x18]
  40c358:	mov    rdx,QWORD PTR [rax+0x8]
  40c35c:	call   40c500 <flatcc_emitter@@Base+0x310>
  40c361:	cmp    eax,0x0
  40c364:	je     40c376 <flatcc_emitter@@Base+0x186>
  40c36a:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c371:	jmp    40c3f5 <flatcc_emitter@@Base+0x205>
  40c376:	mov    rax,QWORD PTR [rbp-0x18]
  40c37a:	add    rax,0x10
  40c380:	mov    QWORD PTR [rbp-0x18],rax
  40c384:	jmp    40c335 <flatcc_emitter@@Base+0x145>
  40c389:	jmp    40c38e <flatcc_emitter@@Base+0x19e>
  40c38e:	mov    DWORD PTR [rbp-0x4],0x0
  40c395:	jmp    40c3f5 <flatcc_emitter@@Base+0x205>
  40c39a:	jmp    40c39f <flatcc_emitter@@Base+0x1af>
  40c39f:	mov    eax,DWORD PTR [rbp-0x1c]
  40c3a2:	mov    ecx,eax
  40c3a4:	add    ecx,0xffffffff
  40c3a7:	mov    DWORD PTR [rbp-0x1c],ecx
  40c3aa:	cmp    eax,0x0
  40c3ad:	je     40c3ee <flatcc_emitter@@Base+0x1fe>
  40c3b3:	mov    rdi,QWORD PTR [rbp-0x38]
  40c3b7:	mov    rax,QWORD PTR [rbp-0x18]
  40c3bb:	mov    rsi,QWORD PTR [rax]
  40c3be:	mov    rax,QWORD PTR [rbp-0x18]
  40c3c2:	mov    rdx,QWORD PTR [rax+0x8]
  40c3c6:	call   4030c0 <memcpy@plt>
  40c3cb:	mov    rax,QWORD PTR [rbp-0x18]
  40c3cf:	mov    rax,QWORD PTR [rax+0x8]
  40c3d3:	add    rax,QWORD PTR [rbp-0x38]
  40c3d7:	mov    QWORD PTR [rbp-0x38],rax
  40c3db:	mov    rax,QWORD PTR [rbp-0x18]
  40c3df:	add    rax,0x10
  40c3e5:	mov    QWORD PTR [rbp-0x18],rax
  40c3e9:	jmp    40c39f <flatcc_emitter@@Base+0x1af>
  40c3ee:	mov    DWORD PTR [rbp-0x4],0x0
  40c3f5:	mov    eax,DWORD PTR [rbp-0x4]
  40c3f8:	add    rsp,0x40
  40c3fc:	pop    rbp
  40c3fd:	ret    
  40c3fe:	xchg   ax,ax
  40c400:	push   rbp
  40c401:	mov    rbp,rsp
  40c404:	sub    rsp,0x30
  40c408:	mov    QWORD PTR [rbp-0x10],rdi
  40c40c:	mov    QWORD PTR [rbp-0x18],rsi
  40c410:	mov    QWORD PTR [rbp-0x20],rdx
  40c414:	mov    rax,QWORD PTR [rbp-0x20]
  40c418:	add    rax,QWORD PTR [rbp-0x18]
  40c41c:	mov    QWORD PTR [rbp-0x18],rax
  40c420:	cmp    QWORD PTR [rbp-0x20],0x0
  40c425:	je     40c4ef <flatcc_emitter@@Base+0x2ff>
  40c42b:	mov    rax,QWORD PTR [rbp-0x20]
  40c42f:	mov    QWORD PTR [rbp-0x28],rax
  40c433:	mov    rax,QWORD PTR [rbp-0x28]
  40c437:	mov    rcx,QWORD PTR [rbp-0x10]
  40c43b:	cmp    rax,QWORD PTR [rcx+0x18]
  40c43f:	jbe    40c484 <flatcc_emitter@@Base+0x294>
  40c445:	mov    rax,QWORD PTR [rbp-0x10]
  40c449:	mov    rax,QWORD PTR [rax+0x18]
  40c44d:	mov    QWORD PTR [rbp-0x28],rax
  40c451:	cmp    QWORD PTR [rbp-0x28],0x0
  40c456:	jne    40c47f <flatcc_emitter@@Base+0x28f>
  40c45c:	mov    rdi,QWORD PTR [rbp-0x10]
  40c460:	call   40c730 <flatcc_emitter_copy_buffer@@Base+0x150>
  40c465:	cmp    eax,0x0
  40c468:	je     40c47a <flatcc_emitter@@Base+0x28a>
  40c46e:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c475:	jmp    40c4f6 <flatcc_emitter@@Base+0x306>
  40c47a:	jmp    40c420 <flatcc_emitter@@Base+0x230>
  40c47f:	jmp    40c484 <flatcc_emitter@@Base+0x294>
  40c484:	xor    eax,eax
  40c486:	mov    ecx,eax
  40c488:	mov    rdx,QWORD PTR [rbp-0x28]
  40c48c:	mov    rsi,QWORD PTR [rbp-0x10]
  40c490:	mov    rdi,QWORD PTR [rsi+0x10]
  40c494:	mov    r8,rcx
  40c497:	sub    r8,rdx
  40c49a:	add    rdi,r8
  40c49d:	mov    QWORD PTR [rsi+0x10],rdi
  40c4a1:	mov    rdx,QWORD PTR [rbp-0x28]
  40c4a5:	mov    rsi,QWORD PTR [rbp-0x10]
  40c4a9:	mov    rdi,QWORD PTR [rsi+0x18]
  40c4ad:	sub    rdi,rdx
  40c4b0:	mov    QWORD PTR [rsi+0x18],rdi
  40c4b4:	mov    rdx,QWORD PTR [rbp-0x28]
  40c4b8:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4bc:	sub    rcx,rdx
  40c4bf:	add    rsi,rcx
  40c4c2:	mov    QWORD PTR [rbp-0x18],rsi
  40c4c6:	mov    rcx,QWORD PTR [rbp-0x28]
  40c4ca:	mov    rdx,QWORD PTR [rbp-0x20]
  40c4ce:	sub    rdx,rcx
  40c4d1:	mov    QWORD PTR [rbp-0x20],rdx
  40c4d5:	mov    rcx,QWORD PTR [rbp-0x10]
  40c4d9:	mov    rdi,QWORD PTR [rcx+0x10]
  40c4dd:	mov    rsi,QWORD PTR [rbp-0x18]
  40c4e1:	mov    rdx,QWORD PTR [rbp-0x28]
  40c4e5:	call   4030c0 <memcpy@plt>
  40c4ea:	jmp    40c420 <flatcc_emitter@@Base+0x230>
  40c4ef:	mov    DWORD PTR [rbp-0x4],0x0
  40c4f6:	mov    eax,DWORD PTR [rbp-0x4]
  40c4f9:	add    rsp,0x30
  40c4fd:	pop    rbp
  40c4fe:	ret    
  40c4ff:	nop
  40c500:	push   rbp
  40c501:	mov    rbp,rsp
  40c504:	sub    rsp,0x30
  40c508:	mov    QWORD PTR [rbp-0x10],rdi
  40c50c:	mov    QWORD PTR [rbp-0x18],rsi
  40c510:	mov    QWORD PTR [rbp-0x20],rdx
  40c514:	cmp    QWORD PTR [rbp-0x20],0x0
  40c519:	je     40c5d0 <flatcc_emitter@@Base+0x3e0>
  40c51f:	mov    rax,QWORD PTR [rbp-0x20]
  40c523:	mov    QWORD PTR [rbp-0x28],rax
  40c527:	mov    rax,QWORD PTR [rbp-0x28]
  40c52b:	mov    rcx,QWORD PTR [rbp-0x10]
  40c52f:	cmp    rax,QWORD PTR [rcx+0x28]
  40c533:	jbe    40c578 <flatcc_emitter@@Base+0x388>
  40c539:	mov    rax,QWORD PTR [rbp-0x10]
  40c53d:	mov    rax,QWORD PTR [rax+0x28]
  40c541:	mov    QWORD PTR [rbp-0x28],rax
  40c545:	cmp    QWORD PTR [rbp-0x28],0x0
  40c54a:	jne    40c573 <flatcc_emitter@@Base+0x383>
  40c550:	mov    rdi,QWORD PTR [rbp-0x10]
  40c554:	call   40c950 <flatcc_emitter_copy_buffer@@Base+0x370>
  40c559:	cmp    eax,0x0
  40c55c:	je     40c56e <flatcc_emitter@@Base+0x37e>
  40c562:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c569:	jmp    40c5d7 <flatcc_emitter@@Base+0x3e7>
  40c56e:	jmp    40c514 <flatcc_emitter@@Base+0x324>
  40c573:	jmp    40c578 <flatcc_emitter@@Base+0x388>
  40c578:	mov    rax,QWORD PTR [rbp-0x10]
  40c57c:	mov    rdi,QWORD PTR [rax+0x20]
  40c580:	mov    rsi,QWORD PTR [rbp-0x18]
  40c584:	mov    rdx,QWORD PTR [rbp-0x28]
  40c588:	call   4030c0 <memcpy@plt>
  40c58d:	mov    rax,QWORD PTR [rbp-0x28]
  40c591:	mov    rcx,QWORD PTR [rbp-0x20]
  40c595:	sub    rcx,rax
  40c598:	mov    QWORD PTR [rbp-0x20],rcx
  40c59c:	mov    rax,QWORD PTR [rbp-0x28]
  40c5a0:	add    rax,QWORD PTR [rbp-0x18]
  40c5a4:	mov    QWORD PTR [rbp-0x18],rax
  40c5a8:	mov    rax,QWORD PTR [rbp-0x28]
  40c5ac:	mov    rcx,QWORD PTR [rbp-0x10]
  40c5b0:	add    rax,QWORD PTR [rcx+0x20]
  40c5b4:	mov    QWORD PTR [rcx+0x20],rax
  40c5b8:	mov    rax,QWORD PTR [rbp-0x28]
  40c5bc:	mov    rcx,QWORD PTR [rbp-0x10]
  40c5c0:	mov    rdx,QWORD PTR [rcx+0x28]
  40c5c4:	sub    rdx,rax
  40c5c7:	mov    QWORD PTR [rcx+0x28],rdx
  40c5cb:	jmp    40c514 <flatcc_emitter@@Base+0x324>
  40c5d0:	mov    DWORD PTR [rbp-0x4],0x0
  40c5d7:	mov    eax,DWORD PTR [rbp-0x4]
  40c5da:	add    rsp,0x30
  40c5de:	pop    rbp
  40c5df:	ret    

000000000040c5e0 <flatcc_emitter_copy_buffer@@Base>:
  40c5e0:	push   rbp
  40c5e1:	mov    rbp,rsp
  40c5e4:	sub    rsp,0x30
  40c5e8:	mov    QWORD PTR [rbp-0x10],rdi
  40c5ec:	mov    QWORD PTR [rbp-0x18],rsi
  40c5f0:	mov    QWORD PTR [rbp-0x20],rdx
  40c5f4:	mov    rax,QWORD PTR [rbp-0x20]
  40c5f8:	mov    rcx,QWORD PTR [rbp-0x10]
  40c5fc:	cmp    rax,QWORD PTR [rcx+0x30]
  40c600:	jae    40c613 <flatcc_emitter_copy_buffer@@Base+0x33>
  40c606:	mov    QWORD PTR [rbp-0x8],0x0
  40c60e:	jmp    40c718 <flatcc_emitter_copy_buffer@@Base+0x138>
  40c613:	mov    rax,QWORD PTR [rbp-0x10]
  40c617:	cmp    QWORD PTR [rax],0x0
  40c61b:	jne    40c62e <flatcc_emitter_copy_buffer@@Base+0x4e>
  40c621:	mov    QWORD PTR [rbp-0x8],0x0
  40c629:	jmp    40c718 <flatcc_emitter_copy_buffer@@Base+0x138>
  40c62e:	mov    rax,QWORD PTR [rbp-0x10]
  40c632:	mov    rax,QWORD PTR [rax]
  40c635:	mov    rcx,QWORD PTR [rbp-0x10]
  40c639:	cmp    rax,QWORD PTR [rcx+0x8]
  40c63d:	jne    40c669 <flatcc_emitter_copy_buffer@@Base+0x89>
  40c643:	mov    rdi,QWORD PTR [rbp-0x18]
  40c647:	mov    rax,QWORD PTR [rbp-0x10]
  40c64b:	mov    rsi,QWORD PTR [rax+0x10]
  40c64f:	mov    rax,QWORD PTR [rbp-0x10]
  40c653:	mov    rdx,QWORD PTR [rax+0x30]
  40c657:	call   4030c0 <memcpy@plt>
  40c65c:	mov    rax,QWORD PTR [rbp-0x18]
  40c660:	mov    QWORD PTR [rbp-0x8],rax
  40c664:	jmp    40c718 <flatcc_emitter_copy_buffer@@Base+0x138>
  40c669:	mov    rax,QWORD PTR [rbp-0x10]
  40c66d:	mov    ecx,0xb80
  40c672:	sub    rcx,QWORD PTR [rax+0x18]
  40c676:	mov    QWORD PTR [rbp-0x30],rcx
  40c67a:	mov    rdi,QWORD PTR [rbp-0x18]
  40c67e:	mov    rax,QWORD PTR [rbp-0x10]
  40c682:	mov    rsi,QWORD PTR [rax+0x10]
  40c686:	mov    rdx,QWORD PTR [rbp-0x30]
  40c68a:	call   4030c0 <memcpy@plt>
  40c68f:	mov    rax,QWORD PTR [rbp-0x18]
  40c693:	add    rax,QWORD PTR [rbp-0x30]
  40c697:	mov    QWORD PTR [rbp-0x18],rax
  40c69b:	mov    rax,QWORD PTR [rbp-0x10]
  40c69f:	mov    rax,QWORD PTR [rax]
  40c6a2:	mov    rax,QWORD PTR [rax+0xb80]
  40c6a9:	mov    QWORD PTR [rbp-0x28],rax
  40c6ad:	mov    rax,QWORD PTR [rbp-0x28]
  40c6b1:	mov    rcx,QWORD PTR [rbp-0x10]
  40c6b5:	cmp    rax,QWORD PTR [rcx+0x8]
  40c6b9:	je     40c6f3 <flatcc_emitter_copy_buffer@@Base+0x113>
  40c6bf:	mov    rdi,QWORD PTR [rbp-0x18]
  40c6c3:	mov    rsi,QWORD PTR [rbp-0x28]
  40c6c7:	mov    edx,0xb80
  40c6cc:	call   4030c0 <memcpy@plt>
  40c6d1:	mov    rax,QWORD PTR [rbp-0x18]
  40c6d5:	add    rax,0xb80
  40c6db:	mov    QWORD PTR [rbp-0x18],rax
  40c6df:	mov    rax,QWORD PTR [rbp-0x28]
  40c6e3:	mov    rax,QWORD PTR [rax+0xb80]
  40c6ea:	mov    QWORD PTR [rbp-0x28],rax
  40c6ee:	jmp    40c6ad <flatcc_emitter_copy_buffer@@Base+0xcd>
  40c6f3:	mov    rdi,QWORD PTR [rbp-0x18]
  40c6f7:	mov    rsi,QWORD PTR [rbp-0x28]
  40c6fb:	mov    rax,QWORD PTR [rbp-0x10]
  40c6ff:	mov    ecx,0xb80
  40c704:	sub    rcx,QWORD PTR [rax+0x28]
  40c708:	mov    rdx,rcx
  40c70b:	call   4030c0 <memcpy@plt>
  40c710:	mov    rax,QWORD PTR [rbp-0x18]
  40c714:	mov    QWORD PTR [rbp-0x8],rax
  40c718:	mov    rax,QWORD PTR [rbp-0x8]
  40c71c:	add    rsp,0x30
  40c720:	pop    rbp
  40c721:	ret    
  40c722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c72c:	nop    DWORD PTR [rax+0x0]
  40c730:	push   rbp
  40c731:	mov    rbp,rsp
  40c734:	sub    rsp,0x20
  40c738:	mov    QWORD PTR [rbp-0x10],rdi
  40c73c:	mov    QWORD PTR [rbp-0x18],0x0
  40c744:	mov    rax,QWORD PTR [rbp-0x10]
  40c748:	cmp    QWORD PTR [rax],0x0
  40c74c:	je     40c7af <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40c752:	mov    rax,QWORD PTR [rbp-0x10]
  40c756:	mov    rax,QWORD PTR [rax]
  40c759:	mov    rax,QWORD PTR [rax+0xb88]
  40c760:	mov    rcx,QWORD PTR [rbp-0x10]
  40c764:	cmp    rax,QWORD PTR [rcx+0x8]
  40c768:	je     40c7af <flatcc_emitter_copy_buffer@@Base+0x1cf>
  40c76e:	mov    rax,QWORD PTR [rbp-0x10]
  40c772:	mov    rax,QWORD PTR [rax]
  40c775:	mov    ecx,DWORD PTR [rax+0xb90]
  40c77b:	sub    ecx,0xb80
  40c781:	mov    rax,QWORD PTR [rbp-0x10]
  40c785:	mov    rax,QWORD PTR [rax]
  40c788:	mov    rax,QWORD PTR [rax+0xb88]
  40c78f:	mov    DWORD PTR [rax+0xb90],ecx
  40c795:	mov    rax,QWORD PTR [rbp-0x10]
  40c799:	mov    rax,QWORD PTR [rax]
  40c79c:	mov    rax,QWORD PTR [rax+0xb88]
  40c7a3:	mov    rdx,QWORD PTR [rbp-0x10]
  40c7a7:	mov    QWORD PTR [rdx],rax
  40c7aa:	jmp    40c8ec <flatcc_emitter_copy_buffer@@Base+0x30c>
  40c7af:	mov    edi,0xb98
  40c7b4:	call   4030d0 <malloc@plt>
  40c7b9:	mov    QWORD PTR [rbp-0x18],rax
  40c7bd:	cmp    rax,0x0
  40c7c1:	jne    40c7d3 <flatcc_emitter_copy_buffer@@Base+0x1f3>
  40c7c7:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c7ce:	jmp    40c93b <flatcc_emitter_copy_buffer@@Base+0x35b>
  40c7d3:	mov    rax,QWORD PTR [rbp-0x10]
  40c7d7:	mov    rcx,QWORD PTR [rax+0x38]
  40c7db:	add    rcx,0xb80
  40c7e2:	mov    QWORD PTR [rax+0x38],rcx
  40c7e6:	mov    rax,QWORD PTR [rbp-0x10]
  40c7ea:	cmp    QWORD PTR [rax],0x0
  40c7ee:	je     40c84e <flatcc_emitter_copy_buffer@@Base+0x26e>
  40c7f4:	mov    rax,QWORD PTR [rbp-0x10]
  40c7f8:	mov    rax,QWORD PTR [rax+0x8]
  40c7fc:	mov    rcx,QWORD PTR [rbp-0x18]
  40c800:	mov    QWORD PTR [rcx+0xb88],rax
  40c807:	mov    rax,QWORD PTR [rbp-0x10]
  40c80b:	mov    rax,QWORD PTR [rax]
  40c80e:	mov    rcx,QWORD PTR [rbp-0x18]
  40c812:	mov    QWORD PTR [rcx+0xb80],rax
  40c819:	mov    rax,QWORD PTR [rbp-0x18]
  40c81d:	mov    rcx,QWORD PTR [rbp-0x10]
  40c821:	mov    rcx,QWORD PTR [rcx]
  40c824:	mov    QWORD PTR [rcx+0xb88],rax
  40c82b:	mov    rax,QWORD PTR [rbp-0x18]
  40c82f:	mov    rcx,QWORD PTR [rbp-0x10]
  40c833:	mov    rcx,QWORD PTR [rcx+0x8]
  40c837:	mov    QWORD PTR [rcx+0xb80],rax
  40c83e:	mov    rax,QWORD PTR [rbp-0x18]
  40c842:	mov    rcx,QWORD PTR [rbp-0x10]
  40c846:	mov    QWORD PTR [rcx],rax
  40c849:	jmp    40c8ec <flatcc_emitter_copy_buffer@@Base+0x30c>
  40c84e:	xor    eax,eax
  40c850:	mov    rcx,QWORD PTR [rbp-0x18]
  40c854:	mov    rdx,QWORD PTR [rbp-0x10]
  40c858:	mov    QWORD PTR [rdx],rcx
  40c85b:	mov    rcx,QWORD PTR [rbp-0x18]
  40c85f:	mov    rdx,QWORD PTR [rbp-0x10]
  40c863:	mov    QWORD PTR [rdx+0x8],rcx
  40c867:	mov    rcx,QWORD PTR [rbp-0x18]
  40c86b:	mov    rdx,QWORD PTR [rbp-0x18]
  40c86f:	mov    QWORD PTR [rdx+0xb80],rcx
  40c876:	mov    rcx,QWORD PTR [rbp-0x18]
  40c87a:	mov    rdx,QWORD PTR [rbp-0x18]
  40c87e:	mov    QWORD PTR [rdx+0xb88],rcx
  40c885:	mov    rcx,QWORD PTR [rbp-0x10]
  40c889:	mov    rcx,QWORD PTR [rcx]
  40c88c:	add    rcx,0x5c0
  40c893:	mov    rdx,QWORD PTR [rbp-0x10]
  40c897:	mov    QWORD PTR [rdx+0x10],rcx
  40c89b:	mov    rcx,QWORD PTR [rbp-0x10]
  40c89f:	mov    rcx,QWORD PTR [rcx+0x10]
  40c8a3:	mov    rdx,QWORD PTR [rbp-0x10]
  40c8a7:	mov    QWORD PTR [rdx+0x20],rcx
  40c8ab:	mov    rcx,QWORD PTR [rbp-0x10]
  40c8af:	mov    QWORD PTR [rcx+0x18],0x5c0
  40c8b7:	mov    rcx,QWORD PTR [rbp-0x10]
  40c8bb:	mov    edx,0xb80
  40c8c0:	sub    rdx,QWORD PTR [rcx+0x18]
  40c8c4:	mov    rcx,QWORD PTR [rbp-0x10]
  40c8c8:	mov    QWORD PTR [rcx+0x28],rdx
  40c8cc:	mov    rcx,QWORD PTR [rbp-0x10]
  40c8d0:	mov    rcx,QWORD PTR [rcx+0x18]
  40c8d4:	sub    eax,ecx
  40c8d6:	mov    rdx,QWORD PTR [rbp-0x18]
  40c8da:	mov    DWORD PTR [rdx+0xb90],eax
  40c8e0:	mov    DWORD PTR [rbp-0x4],0x0
  40c8e7:	jmp    40c93b <flatcc_emitter_copy_buffer@@Base+0x35b>
  40c8ec:	mov    rax,QWORD PTR [rbp-0x10]
  40c8f0:	mov    rax,QWORD PTR [rax]
  40c8f3:	add    rax,0xb80
  40c8f9:	mov    rcx,QWORD PTR [rbp-0x10]
  40c8fd:	mov    QWORD PTR [rcx+0x10],rax
  40c901:	mov    rax,QWORD PTR [rbp-0x10]
  40c905:	mov    QWORD PTR [rax+0x18],0xb80
  40c90d:	mov    rax,QWORD PTR [rbp-0x10]
  40c911:	mov    rax,QWORD PTR [rax]
  40c914:	mov    rax,QWORD PTR [rax+0xb80]
  40c91b:	mov    edx,DWORD PTR [rax+0xb90]
  40c921:	sub    edx,0xb80
  40c927:	mov    rax,QWORD PTR [rbp-0x10]
  40c92b:	mov    rax,QWORD PTR [rax]
  40c92e:	mov    DWORD PTR [rax+0xb90],edx
  40c934:	mov    DWORD PTR [rbp-0x4],0x0
  40c93b:	mov    eax,DWORD PTR [rbp-0x4]
  40c93e:	add    rsp,0x20
  40c942:	pop    rbp
  40c943:	ret    
  40c944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c94e:	xchg   ax,ax
  40c950:	push   rbp
  40c951:	mov    rbp,rsp
  40c954:	sub    rsp,0x20
  40c958:	mov    QWORD PTR [rbp-0x10],rdi
  40c95c:	mov    QWORD PTR [rbp-0x18],0x0
  40c964:	mov    rax,QWORD PTR [rbp-0x10]
  40c968:	cmp    QWORD PTR [rax+0x8],0x0
  40c96d:	je     40c9ab <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40c973:	mov    rax,QWORD PTR [rbp-0x10]
  40c977:	mov    rax,QWORD PTR [rax+0x8]
  40c97b:	mov    rax,QWORD PTR [rax+0xb80]
  40c982:	mov    rcx,QWORD PTR [rbp-0x10]
  40c986:	cmp    rax,QWORD PTR [rcx]
  40c989:	je     40c9ab <flatcc_emitter_copy_buffer@@Base+0x3cb>
  40c98f:	mov    rax,QWORD PTR [rbp-0x10]
  40c993:	mov    rax,QWORD PTR [rax+0x8]
  40c997:	mov    rax,QWORD PTR [rax+0xb80]
  40c99e:	mov    rcx,QWORD PTR [rbp-0x10]
  40c9a2:	mov    QWORD PTR [rcx+0x8],rax
  40c9a6:	jmp    40caea <flatcc_emitter_copy_buffer@@Base+0x50a>
  40c9ab:	mov    edi,0xb98
  40c9b0:	call   4030d0 <malloc@plt>
  40c9b5:	mov    QWORD PTR [rbp-0x18],rax
  40c9b9:	cmp    rax,0x0
  40c9bd:	jne    40c9cf <flatcc_emitter_copy_buffer@@Base+0x3ef>
  40c9c3:	mov    DWORD PTR [rbp-0x4],0xffffffff
  40c9ca:	jmp    40cb36 <flatcc_emitter_copy_buffer@@Base+0x556>
  40c9cf:	mov    rax,QWORD PTR [rbp-0x10]
  40c9d3:	mov    rcx,QWORD PTR [rax+0x38]
  40c9d7:	add    rcx,0xb80
  40c9de:	mov    QWORD PTR [rax+0x38],rcx
  40c9e2:	mov    rax,QWORD PTR [rbp-0x10]
  40c9e6:	cmp    QWORD PTR [rax+0x8],0x0
  40c9eb:	je     40ca4c <flatcc_emitter_copy_buffer@@Base+0x46c>
  40c9f1:	mov    rax,QWORD PTR [rbp-0x10]
  40c9f5:	mov    rax,QWORD PTR [rax+0x8]
  40c9f9:	mov    rcx,QWORD PTR [rbp-0x18]
  40c9fd:	mov    QWORD PTR [rcx+0xb88],rax
  40ca04:	mov    rax,QWORD PTR [rbp-0x10]
  40ca08:	mov    rax,QWORD PTR [rax]
  40ca0b:	mov    rcx,QWORD PTR [rbp-0x18]
  40ca0f:	mov    QWORD PTR [rcx+0xb80],rax
  40ca16:	mov    rax,QWORD PTR [rbp-0x18]
  40ca1a:	mov    rcx,QWORD PTR [rbp-0x10]
  40ca1e:	mov    rcx,QWORD PTR [rcx]
  40ca21:	mov    QWORD PTR [rcx+0xb88],rax
  40ca28:	mov    rax,QWORD PTR [rbp-0x18]
  40ca2c:	mov    rcx,QWORD PTR [rbp-0x10]
  40ca30:	mov    rcx,QWORD PTR [rcx+0x8]
  40ca34:	mov    QWORD PTR [rcx+0xb80],rax
  40ca3b:	mov    rax,QWORD PTR [rbp-0x18]
  40ca3f:	mov    rcx,QWORD PTR [rbp-0x10]
  40ca43:	mov    QWORD PTR [rcx+0x8],rax
  40ca47:	jmp    40caea <flatcc_emitter_copy_buffer@@Base+0x50a>
  40ca4c:	xor    eax,eax
  40ca4e:	mov    rcx,QWORD PTR [rbp-0x18]
  40ca52:	mov    rdx,QWORD PTR [rbp-0x10]
  40ca56:	mov    QWORD PTR [rdx],rcx
  40ca59:	mov    rcx,QWORD PTR [rbp-0x18]
  40ca5d:	mov    rdx,QWORD PTR [rbp-0x10]
  40ca61:	mov    QWORD PTR [rdx+0x8],rcx
  40ca65:	mov    rcx,QWORD PTR [rbp-0x18]
  40ca69:	mov    rdx,QWORD PTR [rbp-0x18]
  40ca6d:	mov    QWORD PTR [rdx+0xb80],rcx
  40ca74:	mov    rcx,QWORD PTR [rbp-0x18]
  40ca78:	mov    rdx,QWORD PTR [rbp-0x18]
  40ca7c:	mov    QWORD PTR [rdx+0xb88],rcx
  40ca83:	mov    rcx,QWORD PTR [rbp-0x10]
  40ca87:	mov    rcx,QWORD PTR [rcx]
  40ca8a:	add    rcx,0x5c0
  40ca91:	mov    rdx,QWORD PTR [rbp-0x10]
  40ca95:	mov    QWORD PTR [rdx+0x10],rcx
  40ca99:	mov    rcx,QWORD PTR [rbp-0x10]
  40ca9d:	mov    rcx,QWORD PTR [rcx+0x10]
  40caa1:	mov    rdx,QWORD PTR [rbp-0x10]
  40caa5:	mov    QWORD PTR [rdx+0x20],rcx
  40caa9:	mov    rcx,QWORD PTR [rbp-0x10]
  40caad:	mov    QWORD PTR [rcx+0x18],0x5c0
  40cab5:	mov    rcx,QWORD PTR [rbp-0x10]
  40cab9:	mov    edx,0xb80
  40cabe:	sub    rdx,QWORD PTR [rcx+0x18]
  40cac2:	mov    rcx,QWORD PTR [rbp-0x10]
  40cac6:	mov    QWORD PTR [rcx+0x28],rdx
  40caca:	mov    rcx,QWORD PTR [rbp-0x10]
  40cace:	mov    rcx,QWORD PTR [rcx+0x18]
  40cad2:	sub    eax,ecx
  40cad4:	mov    rdx,QWORD PTR [rbp-0x18]
  40cad8:	mov    DWORD PTR [rdx+0xb90],eax
  40cade:	mov    DWORD PTR [rbp-0x4],0x0
  40cae5:	jmp    40cb36 <flatcc_emitter_copy_buffer@@Base+0x556>
  40caea:	mov    rax,QWORD PTR [rbp-0x10]
  40caee:	mov    rax,QWORD PTR [rax+0x8]
  40caf2:	mov    rcx,QWORD PTR [rbp-0x10]
  40caf6:	mov    QWORD PTR [rcx+0x20],rax
  40cafa:	mov    rax,QWORD PTR [rbp-0x10]
  40cafe:	mov    QWORD PTR [rax+0x28],0xb80
  40cb06:	mov    rax,QWORD PTR [rbp-0x10]
  40cb0a:	mov    rax,QWORD PTR [rax+0x8]
  40cb0e:	mov    rax,QWORD PTR [rax+0xb88]
  40cb15:	mov    edx,DWORD PTR [rax+0xb90]
  40cb1b:	add    edx,0xb80
  40cb21:	mov    rax,QWORD PTR [rbp-0x10]
  40cb25:	mov    rax,QWORD PTR [rax+0x8]
  40cb29:	mov    DWORD PTR [rax+0xb90],edx
  40cb2f:	mov    DWORD PTR [rbp-0x4],0x0
  40cb36:	mov    eax,DWORD PTR [rbp-0x4]
  40cb39:	add    rsp,0x20
  40cb3d:	pop    rbp
  40cb3e:	ret    
  40cb3f:	nop

000000000040cb40 <__libc_csu_init@@Base>:
  40cb40:	endbr64 
  40cb44:	push   r15
  40cb46:	lea    r15,[rip+0x62b3]        # 412e00 <flatcc_builder_padding_base@@Base+0x54a0>
  40cb4d:	push   r14
  40cb4f:	mov    r14,rdx
  40cb52:	push   r13
  40cb54:	mov    r13,rsi
  40cb57:	push   r12
  40cb59:	mov    r12d,edi
  40cb5c:	push   rbp
  40cb5d:	lea    rbp,[rip+0x62a4]        # 412e08 <flatcc_builder_padding_base@@Base+0x54a8>
  40cb64:	push   rbx
  40cb65:	sub    rbp,r15
  40cb68:	sub    rsp,0x8
  40cb6c:	call   403000 <free@plt-0x30>
  40cb71:	sar    rbp,0x3
  40cb75:	je     40cb96 <__libc_csu_init@@Base+0x56>
  40cb77:	xor    ebx,ebx
  40cb79:	nop    DWORD PTR [rax+0x0]
  40cb80:	mov    rdx,r14
  40cb83:	mov    rsi,r13
  40cb86:	mov    edi,r12d
  40cb89:	call   QWORD PTR [r15+rbx*8]
  40cb8d:	add    rbx,0x1
  40cb91:	cmp    rbp,rbx
  40cb94:	jne    40cb80 <__libc_csu_init@@Base+0x40>
  40cb96:	add    rsp,0x8
  40cb9a:	pop    rbx
  40cb9b:	pop    rbp
  40cb9c:	pop    r12
  40cb9e:	pop    r13
  40cba0:	pop    r14
  40cba2:	pop    r15
  40cba4:	ret    
  40cba5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000040cbb0 <__libc_csu_fini@@Base>:
  40cbb0:	endbr64 
  40cbb4:	ret    

Disassembly of section .fini:

000000000040cbb8 <.fini>:
  40cbb8:	endbr64 
  40cbbc:	sub    rsp,0x8
  40cbc0:	add    rsp,0x8
  40cbc4:	ret    
