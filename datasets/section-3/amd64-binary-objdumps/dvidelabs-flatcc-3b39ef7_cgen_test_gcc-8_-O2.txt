
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000405000 <.init>:
  405000:	endbr64 
  405004:	sub    rsp,0x8
  405008:	mov    rax,QWORD PTR [rip+0x4bfd1]        # 450fe0 <__gmon_start__>
  40500f:	test   rax,rax
  405012:	je     405016 <__ctype_toupper_loc@plt-0x20a>
  405014:	call   rax
  405016:	add    rsp,0x8
  40501a:	ret    

Disassembly of section .plt:

0000000000405020 <.plt>:
  405020:	push   QWORD PTR [rip+0x4bfe2]        # 451008 <fb_value_set_missing@@Base+0x7840>
  405026:	bnd jmp QWORD PTR [rip+0x4bfe3]        # 451010 <fb_value_set_missing@@Base+0x7848>
  40502d:	nop    DWORD PTR [rax]
  405030:	endbr64 
  405034:	push   0x0
  405039:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40503f:	nop
  405040:	endbr64 
  405044:	push   0x1
  405049:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40504f:	nop
  405050:	endbr64 
  405054:	push   0x2
  405059:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40505f:	nop
  405060:	endbr64 
  405064:	push   0x3
  405069:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40506f:	nop
  405070:	endbr64 
  405074:	push   0x4
  405079:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40507f:	nop
  405080:	endbr64 
  405084:	push   0x5
  405089:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40508f:	nop
  405090:	endbr64 
  405094:	push   0x6
  405099:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40509f:	nop
  4050a0:	endbr64 
  4050a4:	push   0x7
  4050a9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4050af:	nop
  4050b0:	endbr64 
  4050b4:	push   0x8
  4050b9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4050bf:	nop
  4050c0:	endbr64 
  4050c4:	push   0x9
  4050c9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4050cf:	nop
  4050d0:	endbr64 
  4050d4:	push   0xa
  4050d9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4050df:	nop
  4050e0:	endbr64 
  4050e4:	push   0xb
  4050e9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4050ef:	nop
  4050f0:	endbr64 
  4050f4:	push   0xc
  4050f9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4050ff:	nop
  405100:	endbr64 
  405104:	push   0xd
  405109:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40510f:	nop
  405110:	endbr64 
  405114:	push   0xe
  405119:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40511f:	nop
  405120:	endbr64 
  405124:	push   0xf
  405129:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40512f:	nop
  405130:	endbr64 
  405134:	push   0x10
  405139:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40513f:	nop
  405140:	endbr64 
  405144:	push   0x11
  405149:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40514f:	nop
  405150:	endbr64 
  405154:	push   0x12
  405159:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40515f:	nop
  405160:	endbr64 
  405164:	push   0x13
  405169:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40516f:	nop
  405170:	endbr64 
  405174:	push   0x14
  405179:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40517f:	nop
  405180:	endbr64 
  405184:	push   0x15
  405189:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40518f:	nop
  405190:	endbr64 
  405194:	push   0x16
  405199:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40519f:	nop
  4051a0:	endbr64 
  4051a4:	push   0x17
  4051a9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4051af:	nop
  4051b0:	endbr64 
  4051b4:	push   0x18
  4051b9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4051bf:	nop
  4051c0:	endbr64 
  4051c4:	push   0x19
  4051c9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4051cf:	nop
  4051d0:	endbr64 
  4051d4:	push   0x1a
  4051d9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4051df:	nop
  4051e0:	endbr64 
  4051e4:	push   0x1b
  4051e9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4051ef:	nop
  4051f0:	endbr64 
  4051f4:	push   0x1c
  4051f9:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  4051ff:	nop
  405200:	endbr64 
  405204:	push   0x1d
  405209:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40520f:	nop
  405210:	endbr64 
  405214:	push   0x1e
  405219:	bnd jmp 405020 <__ctype_toupper_loc@plt-0x200>
  40521f:	nop

Disassembly of section .plt.sec:

0000000000405220 <__ctype_toupper_loc@plt>:
  405220:	endbr64 
  405224:	bnd jmp QWORD PTR [rip+0x4bded]        # 451018 <__ctype_toupper_loc@GLIBC_2.3>
  40522b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405230 <free@plt>:
  405230:	endbr64 
  405234:	bnd jmp QWORD PTR [rip+0x4bde5]        # 451020 <free@GLIBC_2.2.5>
  40523b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405240 <__vfprintf_chk@plt>:
  405240:	endbr64 
  405244:	bnd jmp QWORD PTR [rip+0x4bddd]        # 451028 <__vfprintf_chk@GLIBC_2.3.4>
  40524b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405250 <strncpy@plt>:
  405250:	endbr64 
  405254:	bnd jmp QWORD PTR [rip+0x4bdd5]        # 451030 <strncpy@GLIBC_2.2.5>
  40525b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405260 <strncmp@plt>:
  405260:	endbr64 
  405264:	bnd jmp QWORD PTR [rip+0x4bdcd]        # 451038 <strncmp@GLIBC_2.2.5>
  40526b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405270 <qsort@plt>:
  405270:	endbr64 
  405274:	bnd jmp QWORD PTR [rip+0x4bdc5]        # 451040 <qsort@GLIBC_2.2.5>
  40527b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405280 <fread@plt>:
  405280:	endbr64 
  405284:	bnd jmp QWORD PTR [rip+0x4bdbd]        # 451048 <fread@GLIBC_2.2.5>
  40528b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405290 <strtod@plt>:
  405290:	endbr64 
  405294:	bnd jmp QWORD PTR [rip+0x4bdb5]        # 451050 <strtod@GLIBC_2.2.5>
  40529b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052a0 <fclose@plt>:
  4052a0:	endbr64 
  4052a4:	bnd jmp QWORD PTR [rip+0x4bdad]        # 451058 <fclose@GLIBC_2.2.5>
  4052ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052b0 <strlen@plt>:
  4052b0:	endbr64 
  4052b4:	bnd jmp QWORD PTR [rip+0x4bda5]        # 451060 <strlen@GLIBC_2.2.5>
  4052bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052c0 <__stack_chk_fail@plt>:
  4052c0:	endbr64 
  4052c4:	bnd jmp QWORD PTR [rip+0x4bd9d]        # 451068 <__stack_chk_fail@GLIBC_2.4>
  4052cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052d0 <rewind@plt>:
  4052d0:	endbr64 
  4052d4:	bnd jmp QWORD PTR [rip+0x4bd95]        # 451070 <rewind@GLIBC_2.2.5>
  4052db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052e0 <__assert_fail@plt>:
  4052e0:	endbr64 
  4052e4:	bnd jmp QWORD PTR [rip+0x4bd8d]        # 451078 <__assert_fail@GLIBC_2.2.5>
  4052eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004052f0 <memset@plt>:
  4052f0:	endbr64 
  4052f4:	bnd jmp QWORD PTR [rip+0x4bd85]        # 451080 <memset@GLIBC_2.2.5>
  4052fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405300 <memchr@plt>:
  405300:	endbr64 
  405304:	bnd jmp QWORD PTR [rip+0x4bd7d]        # 451088 <memchr@GLIBC_2.2.5>
  40530b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405310 <memcmp@plt>:
  405310:	endbr64 
  405314:	bnd jmp QWORD PTR [rip+0x4bd75]        # 451090 <memcmp@GLIBC_2.2.5>
  40531b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405320 <calloc@plt>:
  405320:	endbr64 
  405324:	bnd jmp QWORD PTR [rip+0x4bd6d]        # 451098 <calloc@GLIBC_2.2.5>
  40532b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405330 <strcmp@plt>:
  405330:	endbr64 
  405334:	bnd jmp QWORD PTR [rip+0x4bd65]        # 4510a0 <strcmp@GLIBC_2.2.5>
  40533b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405340 <ftell@plt>:
  405340:	endbr64 
  405344:	bnd jmp QWORD PTR [rip+0x4bd5d]        # 4510a8 <ftell@GLIBC_2.2.5>
  40534b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405350 <memcpy@plt>:
  405350:	endbr64 
  405354:	bnd jmp QWORD PTR [rip+0x4bd55]        # 4510b0 <memcpy@GLIBC_2.14>
  40535b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405360 <malloc@plt>:
  405360:	endbr64 
  405364:	bnd jmp QWORD PTR [rip+0x4bd4d]        # 4510b8 <malloc@GLIBC_2.2.5>
  40536b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405370 <fseek@plt>:
  405370:	endbr64 
  405374:	bnd jmp QWORD PTR [rip+0x4bd45]        # 4510c0 <fseek@GLIBC_2.2.5>
  40537b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405380 <__vsnprintf_chk@plt>:
  405380:	endbr64 
  405384:	bnd jmp QWORD PTR [rip+0x4bd3d]        # 4510c8 <__vsnprintf_chk@GLIBC_2.3.4>
  40538b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405390 <realloc@plt>:
  405390:	endbr64 
  405394:	bnd jmp QWORD PTR [rip+0x4bd35]        # 4510d0 <realloc@GLIBC_2.2.5>
  40539b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053a0 <__printf_chk@plt>:
  4053a0:	endbr64 
  4053a4:	bnd jmp QWORD PTR [rip+0x4bd2d]        # 4510d8 <__printf_chk@GLIBC_2.3.4>
  4053ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053b0 <fopen@plt>:
  4053b0:	endbr64 
  4053b4:	bnd jmp QWORD PTR [rip+0x4bd25]        # 4510e0 <fopen@GLIBC_2.2.5>
  4053bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053c0 <exit@plt>:
  4053c0:	endbr64 
  4053c4:	bnd jmp QWORD PTR [rip+0x4bd1d]        # 4510e8 <exit@GLIBC_2.2.5>
  4053cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053d0 <fwrite@plt>:
  4053d0:	endbr64 
  4053d4:	bnd jmp QWORD PTR [rip+0x4bd15]        # 4510f0 <fwrite@GLIBC_2.2.5>
  4053db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053e0 <__fprintf_chk@plt>:
  4053e0:	endbr64 
  4053e4:	bnd jmp QWORD PTR [rip+0x4bd0d]        # 4510f8 <__fprintf_chk@GLIBC_2.3.4>
  4053eb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004053f0 <posix_memalign@plt>:
  4053f0:	endbr64 
  4053f4:	bnd jmp QWORD PTR [rip+0x4bd05]        # 451100 <posix_memalign@GLIBC_2.2.5>
  4053fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405400 <__sprintf_chk@plt>:
  405400:	endbr64 
  405404:	bnd jmp QWORD PTR [rip+0x4bcfd]        # 451108 <__sprintf_chk@GLIBC_2.3.4>
  40540b:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

0000000000405410 <main@@Base-0x10>:
  405410:	movzx  eax,BYTE PTR ds:0x0
  405418:	ud2    
  40541a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405420 <main@@Base>:
  405420:	endbr64 
  405424:	push   r13
  405426:	mov    edx,0xe97
  40542b:	lea    rsi,[rip+0x27cd6]        # 42d108 <_IO_stdin_used@@Base+0x108>
  405432:	push   r12
  405434:	push   rbp
  405435:	push   rbx
  405436:	sub    rsp,0xfb8
  40543d:	lea    rbp,[rsp+0x110]
  405445:	mov    rdi,rbp
  405448:	mov    rbx,rsp
  40544b:	mov    rax,QWORD PTR fs:0x28
  405454:	mov    QWORD PTR [rsp+0xfa8],rax
  40545c:	xor    eax,eax
  40545e:	call   405350 <memcpy@plt>
  405463:	mov    rdi,rbx
  405466:	call   405700 <flatcc_init_options@@Base>
  40546b:	movabs rax,0x100000001
  405475:	xor    ecx,ecx
  405477:	xor    edx,edx
  405479:	lea    rsi,[rip+0x27b84]        # 42d004 <_IO_stdin_used@@Base+0x4>
  405480:	mov    rdi,rbx
  405483:	mov    QWORD PTR [rsp+0xb0],rax
  40548b:	mov    QWORD PTR [rsp+0xb8],rax
  405493:	mov    DWORD PTR [rsp+0x80],0x1
  40549e:	call   405800 <flatcc_create_context@@Base>
  4054a3:	test   rax,rax
  4054a6:	je     40558f <main@@Base+0x16f>
  4054ac:	mov    edx,0xe97
  4054b1:	mov    rsi,rbp
  4054b4:	mov    rdi,rax
  4054b7:	mov    rbx,rax
  4054ba:	call   405870 <flatcc_parse_buffer@@Base>
  4054bf:	mov    r12d,eax
  4054c2:	test   eax,eax
  4054c4:	jne    405570 <main@@Base+0x150>
  4054ca:	mov    r13,QWORD PTR [rip+0x4bb17]        # 450fe8 <stderr@GLIBC_2.2.5>
  4054d1:	lea    rdx,[rip+0x27b4e]        # 42d026 <_IO_stdin_used@@Base+0x26>
  4054d8:	mov    rdi,QWORD PTR [r13+0x0]
  4054dc:	mov    esi,0x1
  4054e1:	xor    eax,eax
  4054e3:	call   4053e0 <__fprintf_chk@plt>
  4054e8:	mov    rdi,QWORD PTR [r13+0x0]
  4054ec:	xor    eax,eax
  4054ee:	lea    rdx,[rip+0x27b73]        # 42d068 <_IO_stdin_used@@Base+0x68>
  4054f5:	mov    esi,0x1
  4054fa:	call   4053e0 <__fprintf_chk@plt>
  4054ff:	mov    rdi,rbx
  405502:	call   405970 <flatcc_generate_files@@Base>
  405507:	test   eax,eax
  405509:	jne    405557 <main@@Base+0x137>
  40550b:	mov    rax,QWORD PTR [rip+0x4babe]        # 450fd0 <stdout@GLIBC_2.2.5>
  405512:	mov    rcx,rbp
  405515:	mov    rdi,QWORD PTR [rax]
  405518:	lea    rdx,[rip+0x27b91]        # 42d0b0 <_IO_stdin_used@@Base+0xb0>
  40551f:	mov    esi,0x1
  405524:	xor    eax,eax
  405526:	call   4053e0 <__fprintf_chk@plt>
  40552b:	mov    rdi,rbx
  40552e:	call   405af0 <flatcc_destroy_context@@Base>
  405533:	mov    rcx,QWORD PTR [rsp+0xfa8]
  40553b:	xor    rcx,QWORD PTR fs:0x28
  405544:	mov    eax,r12d
  405547:	jne    4055b2 <main@@Base+0x192>
  405549:	add    rsp,0xfb8
  405550:	pop    rbx
  405551:	pop    rbp
  405552:	pop    r12
  405554:	pop    r13
  405556:	ret    
  405557:	mov    rdi,QWORD PTR [r13+0x0]
  40555b:	lea    rdx,[rip+0x27b26]        # 42d088 <_IO_stdin_used@@Base+0x88>
  405562:	mov    esi,0x1
  405567:	xor    eax,eax
  405569:	call   4053e0 <__fprintf_chk@plt>
  40556e:	jmp    40552b <main@@Base+0x10b>
  405570:	mov    rax,QWORD PTR [rip+0x4ba71]        # 450fe8 <stderr@GLIBC_2.2.5>
  405577:	lea    rdx,[rip+0x27a93]        # 42d011 <_IO_stdin_used@@Base+0x11>
  40557e:	mov    rdi,QWORD PTR [rax]
  405581:	mov    esi,0x1
  405586:	xor    eax,eax
  405588:	call   4053e0 <__fprintf_chk@plt>
  40558d:	jmp    40552b <main@@Base+0x10b>
  40558f:	mov    rax,QWORD PTR [rip+0x4ba52]        # 450fe8 <stderr@GLIBC_2.2.5>
  405596:	lea    rdx,[rip+0x27a9b]        # 42d038 <_IO_stdin_used@@Base+0x38>
  40559d:	mov    rdi,QWORD PTR [rax]
  4055a0:	mov    esi,0x1
  4055a5:	xor    eax,eax
  4055a7:	call   4053e0 <__fprintf_chk@plt>
  4055ac:	or     r12d,0xffffffff
  4055b0:	jmp    405533 <main@@Base+0x113>
  4055b2:	call   4052c0 <__stack_chk_fail@plt>
  4055b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004055c0 <_start@@Base>:
  4055c0:	endbr64 
  4055c4:	xor    ebp,ebp
  4055c6:	mov    r9,rdx
  4055c9:	pop    rsi
  4055ca:	mov    rdx,rsp
  4055cd:	and    rsp,0xfffffffffffffff0
  4055d1:	push   rax
  4055d2:	push   rsp
  4055d3:	mov    r8,0x42cf60
  4055da:	mov    rcx,0x42cef0
  4055e1:	mov    rdi,0x405420
  4055e8:	call   QWORD PTR [rip+0x4b9ea]        # 450fd8 <__libc_start_main@GLIBC_2.2.5>
  4055ee:	hlt    
  4055ef:	nop
  4055f0:	endbr64 
  4055f4:	ret    
  4055f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4055ff:	nop
  405600:	mov    eax,0x451120
  405605:	cmp    rax,0x451120
  40560b:	je     405620 <_start@@Base+0x60>
  40560d:	mov    eax,0x0
  405612:	test   rax,rax
  405615:	je     405620 <_start@@Base+0x60>
  405617:	mov    edi,0x451120
  40561c:	jmp    rax
  40561e:	xchg   ax,ax
  405620:	ret    
  405621:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40562c:	nop    DWORD PTR [rax+0x0]
  405630:	mov    esi,0x451120
  405635:	sub    rsi,0x451120
  40563c:	sar    rsi,0x3
  405640:	mov    rax,rsi
  405643:	shr    rax,0x3f
  405647:	add    rsi,rax
  40564a:	sar    rsi,1
  40564d:	je     405660 <_start@@Base+0xa0>
  40564f:	mov    eax,0x0
  405654:	test   rax,rax
  405657:	je     405660 <_start@@Base+0xa0>
  405659:	mov    edi,0x451120
  40565e:	jmp    rax
  405660:	ret    
  405661:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40566c:	nop    DWORD PTR [rax+0x0]
  405670:	endbr64 
  405674:	cmp    BYTE PTR [rip+0x4baa5],0x0        # 451120 <__bss_start@@Base>
  40567b:	jne    405690 <_start@@Base+0xd0>
  40567d:	push   rbp
  40567e:	mov    rbp,rsp
  405681:	call   405600 <_start@@Base+0x40>
  405686:	mov    BYTE PTR [rip+0x4ba93],0x1        # 451120 <__bss_start@@Base>
  40568d:	pop    rbp
  40568e:	ret    
  40568f:	nop
  405690:	ret    
  405691:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40569c:	nop    DWORD PTR [rax+0x0]
  4056a0:	endbr64 
  4056a4:	jmp    405630 <_start@@Base+0x70>
  4056a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056b0:	endbr64 
  4056b4:	add    rdi,0x128
  4056bb:	mov    edx,0x1
  4056c0:	jmp    41ad80 <ptr_set_insert_item@@Base>
  4056c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4056d0:	push   rax
  4056d1:	pop    rax
  4056d2:	lea    rdx,[rip+0x288c7]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  4056d9:	mov    esi,0x1
  4056de:	sub    rsp,0x8
  4056e2:	mov    rax,QWORD PTR [rip+0x4b8ff]        # 450fe8 <stderr@GLIBC_2.2.5>
  4056e9:	mov    rdi,QWORD PTR [rax]
  4056ec:	xor    eax,eax
  4056ee:	call   4053e0 <__fprintf_chk@plt>
  4056f3:	mov    edi,0x1
  4056f8:	call   4053c0 <exit@plt>
  4056fd:	nop    DWORD PTR [rax]

0000000000405700 <flatcc_init_options@@Base>:
  405700:	endbr64 
  405704:	mov    QWORD PTR [rdi+0x108],0x0
  40570f:	mov    rdx,rdi
  405712:	lea    rdi,[rdi+0x8]
  405716:	and    rdi,0xfffffffffffffff8
  40571a:	mov    rcx,rdx
  40571d:	sub    rcx,rdi
  405720:	add    ecx,0x110
  405726:	xor    eax,eax
  405728:	movabs rsi,0x200000004
  405732:	shr    ecx,0x3
  405735:	rep stos QWORD PTR es:[rdi],rax
  405738:	mov    QWORD PTR [rdx+0x44],rsi
  40573c:	movabs rsi,0x100000000
  405746:	movabs rax,0x6400000064
  405750:	mov    QWORD PTR [rdx+0x54],rsi
  405754:	lea    rsi,[rip+0x278b1]        # 42d00c <_IO_stdin_used@@Base+0xc>
  40575b:	mov    QWORD PTR [rdx+0x8],rax
  40575f:	mov    QWORD PTR [rdx+0x68],rsi
  405763:	movabs rax,0x100000001
  40576d:	lea    rdi,[rip+0x28953]        # 42e0c7 <_IO_stdin_used@@Base+0x10c7>
  405774:	lea    rsi,[rip+0x28952]        # 42e0cd <_IO_stdin_used@@Base+0x10cd>
  40577b:	mov    QWORD PTR [rdx],0x10000
  405782:	mov    QWORD PTR [rdx+0x14],rax
  405786:	mov    QWORD PTR [rdx+0x1c],rax
  40578a:	mov    QWORD PTR [rdx+0x24],rax
  40578e:	mov    QWORD PTR [rdx+0x2c],rax
  405792:	mov    QWORD PTR [rdx+0x34],rax
  405796:	mov    QWORD PTR [rdx+0x3c],0x0
  40579e:	mov    QWORD PTR [rdx+0x4c],rax
  4057a2:	mov    QWORD PTR [rdx+0x60],0xfffe
  4057aa:	mov    QWORD PTR [rdx+0x70],rdi
  4057ae:	mov    QWORD PTR [rdx+0x78],rsi
  4057b2:	mov    DWORD PTR [rdx+0xa4],0x0
  4057bc:	mov    QWORD PTR [rdx+0xa8],rax
  4057c3:	mov    QWORD PTR [rdx+0xb0],0x0
  4057ce:	mov    QWORD PTR [rdx+0xb8],0x0
  4057d9:	mov    DWORD PTR [rdx+0xc4],0x0
  4057e3:	mov    QWORD PTR [rdx+0xd0],0x4
  4057ee:	mov    QWORD PTR [rdx+0xd8],0x1
  4057f9:	ret    
  4057fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405800 <flatcc_create_context@@Base>:
  405800:	endbr64 
  405804:	push   r14
  405806:	mov    r14,rcx
  405809:	push   r13
  40580b:	mov    r13,rdx
  40580e:	push   r12
  405810:	mov    r12,rsi
  405813:	push   rbp
  405814:	mov    rbp,rdi
  405817:	mov    edi,0x358
  40581c:	push   rbx
  40581d:	call   405360 <malloc@plt>
  405822:	mov    rbx,rax
  405825:	test   rax,rax
  405828:	je     405845 <flatcc_create_context@@Base+0x45>
  40582a:	xor    r9d,r9d
  40582d:	mov    r8,r14
  405830:	mov    rcx,r13
  405833:	mov    rdx,r12
  405836:	mov    rsi,rbp
  405839:	mov    rdi,rax
  40583c:	call   41edd0 <__flatcc_fb_init_parser@@Base>
  405841:	test   eax,eax
  405843:	jne    405858 <flatcc_create_context@@Base+0x58>
  405845:	mov    rax,rbx
  405848:	pop    rbx
  405849:	pop    rbp
  40584a:	pop    r12
  40584c:	pop    r13
  40584e:	pop    r14
  405850:	ret    
  405851:	nop    DWORD PTR [rax+0x0]
  405858:	mov    rdi,rbx
  40585b:	call   405230 <free@plt>
  405860:	xor    ebx,ebx
  405862:	jmp    405845 <flatcc_create_context@@Base+0x45>
  405864:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40586f:	nop

0000000000405870 <flatcc_parse_buffer@@Base>:
  405870:	endbr64 
  405874:	push   r12
  405876:	mov    r12,rsi
  405879:	push   rbp
  40587a:	mov    rbp,rdx
  40587d:	push   rbx
  40587e:	mov    rbx,rdi
  405881:	mov    DWORD PTR [rdi+0xf8],0x1
  40588b:	mov    rax,QWORD PTR [rdi+0xe8]
  405892:	cmp    rax,rdx
  405895:	jae    40589c <flatcc_parse_buffer@@Base+0x2c>
  405897:	test   rax,rax
  40589a:	jne    4058df <flatcc_parse_buffer@@Base+0x6f>
  40589c:	lea    rsi,[rbx+0x1f8]
  4058a3:	lea    rdi,[rbx+0x320]
  4058aa:	mov    edx,0x1
  4058af:	call   41ad80 <ptr_set_insert_item@@Base>
  4058b4:	xor    ecx,ecx
  4058b6:	mov    rdx,rbp
  4058b9:	mov    rsi,r12
  4058bc:	mov    rdi,rbx
  4058bf:	call   41f130 <__flatcc_fb_parse@@Base>
  4058c4:	test   eax,eax
  4058c6:	jne    4058f8 <flatcc_parse_buffer@@Base+0x88>
  4058c8:	mov    rdi,rbx
  4058cb:	call   424ff0 <__flatcc_fb_build_schema@@Base>
  4058d0:	test   eax,eax
  4058d2:	setne  al
  4058d5:	movzx  eax,al
  4058d8:	neg    eax
  4058da:	pop    rbx
  4058db:	pop    rbp
  4058dc:	pop    r12
  4058de:	ret    
  4058df:	lea    rsi,[rip+0x286e2]        # 42dfc8 <_IO_stdin_used@@Base+0xfc8>
  4058e6:	xor    eax,eax
  4058e8:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  4058ed:	mov    eax,0xffffffff
  4058f2:	jmp    4058da <flatcc_parse_buffer@@Base+0x6a>
  4058f4:	nop    DWORD PTR [rax+0x0]
  4058f8:	mov    eax,0xffffffff
  4058fd:	jmp    4058da <flatcc_parse_buffer@@Base+0x6a>
  4058ff:	nop

0000000000405900 <flatcc_generate_binary_schema_to_buffer@@Base>:
  405900:	endbr64 
  405904:	sub    rsp,0x18
  405908:	mov    rax,rsi
  40590b:	mov    QWORD PTR [rsp+0x8],rdx
  405910:	lea    rsi,[rdi+0x1f8]
  405917:	lea    rcx,[rsp+0x8]
  40591c:	add    rdi,0xe8
  405923:	mov    rdx,rax
  405926:	call   419c50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
  40592b:	test   rax,rax
  40592e:	je     405940 <flatcc_generate_binary_schema_to_buffer@@Base+0x40>
  405930:	mov    eax,DWORD PTR [rsp+0x8]
  405934:	add    rsp,0x18
  405938:	ret    
  405939:	nop    DWORD PTR [rax+0x0]
  405940:	mov    eax,0xffffffff
  405945:	jmp    405934 <flatcc_generate_binary_schema_to_buffer@@Base+0x34>
  405947:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405950 <flatcc_generate_binary_schema@@Base>:
  405950:	endbr64 
  405954:	mov    rdx,rsi
  405957:	lea    rsi,[rdi+0x1f8]
  40595e:	add    rdi,0xe8
  405965:	jmp    419d10 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  40596a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405970 <flatcc_generate_files@@Base>:
  405970:	endbr64 
  405974:	push   r13
  405976:	push   r12
  405978:	push   rbp
  405979:	push   rbx
  40597a:	sub    rsp,0x118
  405981:	mov    rax,QWORD PTR fs:0x28
  40598a:	mov    QWORD PTR [rsp+0x108],rax
  405992:	xor    eax,eax
  405994:	test   rdi,rdi
  405997:	je     405aa7 <flatcc_generate_files@@Base+0x137>
  40599d:	mov    rbp,rdi
  4059a0:	mov    edi,DWORD PTR [rdi+0xd0]
  4059a6:	test   edi,edi
  4059a8:	jne    405aa7 <flatcc_generate_files@@Base+0x137>
  4059ae:	mov    rbx,rbp
  4059b1:	xor    edx,edx
  4059b3:	jmp    4059bb <flatcc_generate_files@@Base+0x4b>
  4059b5:	nop    DWORD PTR [rax]
  4059b8:	mov    rbx,rax
  4059bb:	mov    rax,QWORD PTR [rbx]
  4059be:	mov    QWORD PTR [rbx+0x8],rdx
  4059c2:	mov    rdx,rbx
  4059c5:	test   rax,rax
  4059c8:	jne    4059b8 <flatcc_generate_files@@Base+0x48>
  4059ca:	mov    esi,DWORD PTR [rbp+0x1bc]
  4059d0:	lea    r13,[rbp+0xe8]
  4059d7:	test   esi,esi
  4059d9:	jne    405a90 <flatcc_generate_files@@Base+0x120>
  4059df:	mov    r12,rsp
  4059e2:	mov    rsi,r13
  4059e5:	mov    rdi,r12
  4059e8:	call   4063b0 <__flatcc_fb_init_output_c@@Base>
  4059ed:	test   eax,eax
  4059ef:	jne    405aa7 <flatcc_generate_files@@Base+0x137>
  4059f5:	mov    ecx,DWORD PTR [rbp+0x188]
  4059fb:	test   ecx,ecx
  4059fd:	je     405ab0 <flatcc_generate_files@@Base+0x140>
  405a03:	mov    r13d,DWORD PTR [rbp+0xe4]
  405a0a:	test   r13d,r13d
  405a0d:	je     405a30 <flatcc_generate_files@@Base+0xc0>
  405a0f:	mov    edx,DWORD PTR [rbp+0x1b4]
  405a15:	test   edx,edx
  405a17:	je     405ad0 <flatcc_generate_files@@Base+0x160>
  405a1d:	nop    DWORD PTR [rax]
  405a20:	mov    eax,DWORD PTR [rbx+0xd0]
  405a26:	test   eax,eax
  405a28:	je     405a60 <flatcc_generate_files@@Base+0xf0>
  405a2a:	mov    r13d,0x1
  405a30:	mov    rdi,r12
  405a33:	call   406370 <__flatcc_fb_end_output_c@@Base>
  405a38:	mov    rcx,QWORD PTR [rsp+0x108]
  405a40:	xor    rcx,QWORD PTR fs:0x28
  405a49:	mov    eax,r13d
  405a4c:	jne    405ae7 <flatcc_generate_files@@Base+0x177>
  405a52:	add    rsp,0x118
  405a59:	pop    rbx
  405a5a:	pop    rbp
  405a5b:	pop    r12
  405a5d:	pop    r13
  405a5f:	ret    
  405a60:	lea    rsi,[rbx+0x1f8]
  405a67:	mov    rdi,r12
  405a6a:	call   406a50 <__flatcc_fb_codegen_c@@Base>
  405a6f:	mov    rbx,QWORD PTR [rbx+0x8]
  405a73:	test   rbx,rbx
  405a76:	je     405a7c <flatcc_generate_files@@Base+0x10c>
  405a78:	test   eax,eax
  405a7a:	je     405a20 <flatcc_generate_files@@Base+0xb0>
  405a7c:	xor    r13d,r13d
  405a7f:	test   eax,eax
  405a81:	setne  r13b
  405a85:	jmp    405a30 <flatcc_generate_files@@Base+0xc0>
  405a87:	nop    WORD PTR [rax+rax*1+0x0]
  405a90:	lea    rsi,[rbp+0x1f8]
  405a97:	mov    rdi,r13
  405a9a:	call   419dc0 <__flatcc_fb_codegen_bfbs_to_file@@Base>
  405a9f:	test   eax,eax
  405aa1:	je     4059df <flatcc_generate_files@@Base+0x6f>
  405aa7:	mov    r13d,0xffffffff
  405aad:	jmp    405a38 <flatcc_generate_files@@Base+0xc8>
  405aaf:	nop
  405ab0:	mov    rdi,r12
  405ab3:	call   406980 <__flatcc_fb_codegen_common_c@@Base>
  405ab8:	mov    r13d,eax
  405abb:	test   eax,eax
  405abd:	je     405a03 <flatcc_generate_files@@Base+0x93>
  405ac3:	jmp    405a30 <flatcc_generate_files@@Base+0xc0>
  405ac8:	nop    DWORD PTR [rax+rax*1+0x0]
  405ad0:	lea    rsi,[rbp+0x1f8]
  405ad7:	mov    rdi,r12
  405ada:	call   406a50 <__flatcc_fb_codegen_c@@Base>
  405adf:	mov    r13d,eax
  405ae2:	jmp    405a30 <flatcc_generate_files@@Base+0xc0>
  405ae7:	call   4052c0 <__stack_chk_fail@plt>
  405aec:	nop    DWORD PTR [rax+0x0]

0000000000405af0 <flatcc_destroy_context@@Base>:
  405af0:	endbr64 
  405af4:	test   rdi,rdi
  405af7:	je     405b30 <flatcc_destroy_context@@Base+0x40>
  405af9:	push   rbp
  405afa:	push   rbx
  405afb:	mov    rbx,rdi
  405afe:	sub    rsp,0x8
  405b02:	nop    WORD PTR [rax+rax*1+0x0]
  405b08:	mov    rdi,rbx
  405b0b:	mov    rbp,QWORD PTR [rbx]
  405b0e:	call   421d70 <__flatcc_fb_clear_parser@@Base>
  405b13:	mov    rdi,rbx
  405b16:	call   405230 <free@plt>
  405b1b:	mov    rbx,rbp
  405b1e:	test   rbp,rbp
  405b21:	jne    405b08 <flatcc_destroy_context@@Base+0x18>
  405b23:	add    rsp,0x8
  405b27:	pop    rbx
  405b28:	pop    rbp
  405b29:	ret    
  405b2a:	nop    WORD PTR [rax+rax*1+0x0]
  405b30:	ret    
  405b31:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  405b3c:	nop    DWORD PTR [rax+0x0]

0000000000405b40 <flatcc_parse_file@@Base>:
  405b40:	endbr64 
  405b44:	push   r15
  405b46:	push   r14
  405b48:	push   r13
  405b4a:	push   r12
  405b4c:	mov    r12,rsi
  405b4f:	push   rbp
  405b50:	push   rbx
  405b51:	mov    rbx,rdi
  405b54:	mov    rdi,rsi
  405b57:	sub    rsp,0x38
  405b5b:	mov    rax,QWORD PTR fs:0x28
  405b64:	mov    QWORD PTR [rsp+0x28],rax
  405b69:	xor    eax,eax
  405b6b:	call   4052b0 <strlen@plt>
  405b70:	mov    r14,rax
  405b73:	mov    rax,QWORD PTR [rbx+0x260]
  405b7a:	lea    rsi,[rbx+0x1f8]
  405b81:	lea    rdi,[rax+0x40]
  405b85:	mov    edx,0x1
  405b8a:	mov    QWORD PTR [rsp+0x8],rsi
  405b8f:	call   41cd00 <fb_schema_table_insert_item@@Base>
  405b94:	test   rax,rax
  405b97:	je     405bc8 <flatcc_parse_file@@Base+0x88>
  405b99:	xor    r14d,r14d
  405b9c:	mov    rcx,QWORD PTR [rsp+0x28]
  405ba1:	xor    rcx,QWORD PTR fs:0x28
  405baa:	mov    eax,r14d
  405bad:	jne    4061bd <flatcc_parse_file@@Base+0x67d>
  405bb3:	add    rsp,0x38
  405bb7:	pop    rbx
  405bb8:	pop    rbp
  405bb9:	pop    r12
  405bbb:	pop    r13
  405bbd:	pop    r14
  405bbf:	pop    r15
  405bc1:	ret    
  405bc2:	nop    WORD PTR [rax+rax*1+0x0]
  405bc8:	mov    rax,QWORD PTR [rbx+0x350]
  405bcf:	mov    QWORD PTR [rsp+0x18],rax
  405bd4:	mov    QWORD PTR [rsp+0x10],rax
  405bd9:	test   rax,rax
  405bdc:	je     405eaf <flatcc_parse_file@@Base+0x36f>
  405be2:	mov    edx,DWORD PTR [rbx+0x1e8]
  405be8:	test   edx,edx
  405bea:	jle    405e16 <flatcc_parse_file@@Base+0x2d6>
  405bf0:	xor    ebp,ebp
  405bf2:	lea    r15,[rsp+0x20]
  405bf7:	nop    WORD PTR [rax+rax*1+0x0]
  405c00:	mov    rax,QWORD PTR [rbx+0x1d8]
  405c07:	mov    r13,QWORD PTR [rax+rbp*8]
  405c0b:	mov    rdi,r13
  405c0e:	call   4052b0 <strlen@plt>
  405c13:	mov    rsi,rax
  405c16:	mov    rdi,r13
  405c19:	mov    r9d,0x1
  405c1f:	lea    r8,[rip+0x3f4f8]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  405c26:	mov    rcx,r14
  405c29:	mov    rdx,r12
  405c2c:	call   41cef0 <__flatcc_fb_create_join_path_n@@Base>
  405c31:	mov    r13,rax
  405c34:	test   rax,rax
  405c37:	je     406137 <flatcc_parse_file@@Base+0x5f7>
  405c3d:	mov    rsi,QWORD PTR [rbx+0xe8]
  405c44:	mov    rdx,r15
  405c47:	mov    rdi,rax
  405c4a:	call   41d2c0 <__flatcc_fb_read_file@@Base>
  405c4f:	mov    rsi,rax
  405c52:	test   rax,rax
  405c55:	je     405dd0 <flatcc_parse_file@@Base+0x290>
  405c5b:	mov    rax,QWORD PTR [rbx+0x260]
  405c62:	mov    rdx,QWORD PTR [rsp+0x20]
  405c67:	mov    ecx,0x1
  405c6c:	add    QWORD PTR [rax+0x68],rdx
  405c70:	mov    QWORD PTR [rbx+0x348],r13
  405c77:	mov    rdi,rbx
  405c7a:	call   41f130 <__flatcc_fb_parse@@Base>
  405c7f:	mov    r14d,eax
  405c82:	test   eax,eax
  405c84:	jne    405b99 <flatcc_parse_file@@Base+0x59>
  405c8a:	mov    rbp,QWORD PTR [rbx+0x1f8]
  405c91:	test   rbp,rbp
  405c94:	je     405f58 <flatcc_parse_file@@Base+0x418>
  405c9a:	lea    rax,[rbx+0xe8]
  405ca1:	mov    QWORD PTR [rsp+0x10],rax
  405ca6:	jmp    405ce5 <flatcc_parse_file@@Base+0x1a5>
  405ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  405cb0:	mov    rdx,QWORD PTR [rsp+0x8]
  405cb5:	lea    rdi,[rax+0x128]
  405cbc:	lea    rsi,[rip+0xfffffffffffff9ed]        # 4056b0 <_start@@Base+0xf0>
  405cc3:	call   41adf0 <ptr_set_visit@@Base>
  405cc8:	mov    rdi,r15
  405ccb:	call   405af0 <flatcc_destroy_context@@Base>
  405cd0:	mov    rdi,r12
  405cd3:	call   405230 <free@plt>
  405cd8:	mov    rbp,QWORD PTR [rbp+0x0]
  405cdc:	test   rbp,rbp
  405cdf:	je     405f58 <flatcc_parse_file@@Base+0x418>
  405ce5:	movsxd rsi,DWORD PTR [rbp+0x10]
  405ce9:	mov    rdi,QWORD PTR [rbp+0x8]
  405ced:	call   41cde0 <__flatcc_fb_copy_path_n@@Base>
  405cf2:	mov    r12,rax
  405cf5:	test   rax,rax
  405cf8:	je     40611c <flatcc_parse_file@@Base+0x5dc>
  405cfe:	mov    r13,QWORD PTR [rbx+0x260]
  405d05:	mov    eax,DWORD PTR [rbx+0xf0]
  405d0b:	cmp    DWORD PTR [r13+0x64],eax
  405d0f:	jl     405d19 <flatcc_parse_file@@Base+0x1d9>
  405d11:	test   eax,eax
  405d13:	jg     406121 <flatcc_parse_file@@Base+0x5e1>
  405d19:	mov    eax,DWORD PTR [rbx+0xf4]
  405d1f:	cmp    DWORD PTR [r13+0x60],eax
  405d23:	jl     405d2d <flatcc_parse_file@@Base+0x1ed>
  405d25:	test   eax,eax
  405d27:	jg     405f1a <flatcc_parse_file@@Base+0x3da>
  405d2d:	mov    edi,0x358
  405d32:	call   405360 <malloc@plt>
  405d37:	mov    r15,rax
  405d3a:	test   rax,rax
  405d3d:	je     405f30 <flatcc_parse_file@@Base+0x3f0>
  405d43:	mov    rcx,QWORD PTR [rbx+0x10]
  405d47:	mov    r8,QWORD PTR [rbx+0x18]
  405d4b:	mov    rsi,QWORD PTR [rsp+0x10]
  405d50:	mov    r9,r13
  405d53:	mov    rdx,r12
  405d56:	mov    rdi,rax
  405d59:	call   41edd0 <__flatcc_fb_init_parser@@Base>
  405d5e:	test   eax,eax
  405d60:	jne    405f40 <flatcc_parse_file@@Base+0x400>
  405d66:	lea    rsi,[r15+0x1f8]
  405d6d:	lea    rdi,[r13+0x40]
  405d71:	call   41cd40 <fb_schema_table_find_item@@Base>
  405d76:	test   rax,rax
  405d79:	jne    405cb0 <flatcc_parse_file@@Base+0x170>
  405d7f:	mov    rax,QWORD PTR [rbx]
  405d82:	mov    QWORD PTR [rbx],r15
  405d85:	mov    QWORD PTR [r15],rax
  405d88:	mov    rax,QWORD PTR [rbx+0x348]
  405d8f:	mov    rsi,r12
  405d92:	mov    QWORD PTR [r15+0x350],rax
  405d99:	inc    DWORD PTR [r13+0x64]
  405d9d:	inc    DWORD PTR [r13+0x60]
  405da1:	mov    rdi,r15
  405da4:	call   405b40 <flatcc_parse_file@@Base>
  405da9:	test   eax,eax
  405dab:	jne    405f30 <flatcc_parse_file@@Base+0x3f0>
  405db1:	mov    rdx,QWORD PTR [rsp+0x8]
  405db6:	lea    rdi,[r15+0x320]
  405dbd:	lea    rsi,[rip+0xfffffffffffff8ec]        # 4056b0 <_start@@Base+0xf0>
  405dc4:	call   41adf0 <ptr_set_visit@@Base>
  405dc9:	jmp    405cd0 <flatcc_parse_file@@Base+0x190>
  405dce:	xchg   ax,ax
  405dd0:	mov    rdi,r13
  405dd3:	call   405230 <free@plt>
  405dd8:	mov    rax,QWORD PTR [rbx+0xe8]
  405ddf:	cmp    rax,QWORD PTR [rsp+0x20]
  405de4:	jae    405def <flatcc_parse_file@@Base+0x2af>
  405de6:	test   rax,rax
  405de9:	jne    405e93 <flatcc_parse_file@@Base+0x353>
  405def:	inc    rbp
  405df2:	cmp    DWORD PTR [rbx+0x1e8],ebp
  405df8:	jg     405c00 <flatcc_parse_file@@Base+0xc0>
  405dfe:	cmp    QWORD PTR [rsp+0x10],0x0
  405e04:	je     405efb <flatcc_parse_file@@Base+0x3bb>
  405e0a:	mov    rax,QWORD PTR [rbx+0x350]
  405e11:	mov    QWORD PTR [rsp+0x10],rax
  405e16:	mov    r15,QWORD PTR [rsp+0x10]
  405e1b:	mov    rdi,r15
  405e1e:	call   4052b0 <strlen@plt>
  405e23:	mov    rsi,rax
  405e26:	mov    rdi,r15
  405e29:	call   41d210 <__flatcc_fb_find_basename@@Base>
  405e2e:	mov    rsi,rax
  405e31:	mov    r9d,0x1
  405e37:	lea    r8,[rip+0x3f2e0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  405e3e:	mov    rcx,r14
  405e41:	mov    rdx,r12
  405e44:	mov    rdi,r15
  405e47:	call   41cef0 <__flatcc_fb_create_join_path_n@@Base>
  405e4c:	mov    r13,rax
  405e4f:	test   rax,rax
  405e52:	je     40611c <flatcc_parse_file@@Base+0x5dc>
  405e58:	mov    rsi,QWORD PTR [rbx+0xe8]
  405e5f:	lea    rdx,[rsp+0x20]
  405e64:	mov    rdi,rax
  405e67:	call   41d2c0 <__flatcc_fb_read_file@@Base>
  405e6c:	mov    rsi,rax
  405e6f:	test   rax,rax
  405e72:	jne    405c5b <flatcc_parse_file@@Base+0x11b>
  405e78:	mov    rdi,r13
  405e7b:	call   405230 <free@plt>
  405e80:	mov    rax,QWORD PTR [rbx+0xe8]
  405e87:	cmp    rax,QWORD PTR [rsp+0x20]
  405e8c:	jae    405efb <flatcc_parse_file@@Base+0x3bb>
  405e8e:	test   rax,rax
  405e91:	je     405efb <flatcc_parse_file@@Base+0x3bb>
  405e93:	lea    rsi,[rip+0x2812e]        # 42dfc8 <_IO_stdin_used@@Base+0xfc8>
  405e9a:	mov    rdi,rbx
  405e9d:	xor    eax,eax
  405e9f:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  405ea4:	mov    r14d,0xffffffff
  405eaa:	jmp    405b9c <flatcc_parse_file@@Base+0x5c>
  405eaf:	mov    rsi,QWORD PTR [rbx+0xe8]
  405eb6:	lea    rdx,[rsp+0x20]
  405ebb:	mov    rdi,r12
  405ebe:	call   41d2c0 <__flatcc_fb_read_file@@Base>
  405ec3:	test   rax,rax
  405ec6:	jne    4060fe <flatcc_parse_file@@Base+0x5be>
  405ecc:	mov    rcx,QWORD PTR [rbx+0x260]
  405ed3:	mov    rax,QWORD PTR [rsp+0x20]
  405ed8:	mov    rdx,QWORD PTR [rbx+0xe8]
  405edf:	add    rax,QWORD PTR [rcx+0x68]
  405ee3:	cmp    rax,rdx
  405ee6:	jbe    405eed <flatcc_parse_file@@Base+0x3ad>
  405ee8:	test   rdx,rdx
  405eeb:	jne    405e93 <flatcc_parse_file@@Base+0x353>
  405eed:	mov    eax,DWORD PTR [rbx+0x1e8]
  405ef3:	test   eax,eax
  405ef5:	jg     405bf0 <flatcc_parse_file@@Base+0xb0>
  405efb:	mov    rdx,r12
  405efe:	lea    rsi,[rip+0x280eb]        # 42dff0 <_IO_stdin_used@@Base+0xff0>
  405f05:	mov    rdi,rbx
  405f08:	xor    eax,eax
  405f0a:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  405f0f:	mov    r14d,0xffffffff
  405f15:	jmp    405b9c <flatcc_parse_file@@Base+0x5c>
  405f1a:	lea    rsi,[rip+0x281b8]        # 42e0d9 <_IO_stdin_used@@Base+0x10d9>
  405f21:	mov    rdi,rbx
  405f24:	xor    eax,eax
  405f26:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  405f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  405f30:	mov    rdi,r12
  405f33:	call   405230 <free@plt>
  405f38:	jmp    405b9c <flatcc_parse_file@@Base+0x5c>
  405f3d:	nop    DWORD PTR [rax]
  405f40:	mov    rdi,r15
  405f43:	call   405230 <free@plt>
  405f48:	mov    rdi,r12
  405f4b:	call   405230 <free@plt>
  405f50:	jmp    405b9c <flatcc_parse_file@@Base+0x5c>
  405f55:	nop    DWORD PTR [rax]
  405f58:	mov    rsi,QWORD PTR [rsp+0x8]
  405f5d:	lea    rdi,[rbx+0x320]
  405f64:	mov    edx,0x1
  405f69:	call   41ad80 <ptr_set_insert_item@@Base>
  405f6e:	mov    rdi,rbx
  405f71:	call   424ff0 <__flatcc_fb_build_schema@@Base>
  405f76:	mov    r14d,eax
  405f79:	test   eax,eax
  405f7b:	jne    405b99 <flatcc_parse_file@@Base+0x59>
  405f81:	mov    esi,DWORD PTR [rbx+0x16c]
  405f87:	test   esi,esi
  405f89:	je     405b99 <flatcc_parse_file@@Base+0x59>
  405f8f:	cmp    QWORD PTR [rsp+0x18],0x0
  405f95:	jne    405b99 <flatcc_parse_file@@Base+0x59>
  405f9b:	cmp    QWORD PTR [rbx+0x350],0x0
  405fa3:	jne    4061c2 <flatcc_parse_file@@Base+0x682>
  405fa9:	mov    rbp,QWORD PTR [rbx+0x1f0]
  405fb0:	mov    rsi,QWORD PTR [rbx+0x170]
  405fb7:	lea    rdx,[rip+0x3f160]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  405fbe:	test   rbp,rbp
  405fc1:	cmove  rbp,rdx
  405fc5:	mov    rax,QWORD PTR [rbx+0x308]
  405fcc:	mov    r15,QWORD PTR [rbx+0x178]
  405fd3:	mov    rdi,rdx
  405fd6:	test   rsi,rsi
  405fd9:	je     4061ab <flatcc_parse_file@@Base+0x66b>
  405fdf:	test   r15,r15
  405fe2:	je     406189 <flatcc_parse_file@@Base+0x649>
  405fe8:	lea    rbp,[rip+0x3f12f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  405fef:	mov    r13,rbp
  405ff2:	mov    ecx,0x1
  405ff7:	call   41d010 <__flatcc_fb_create_join_path@@Base>
  405ffc:	mov    r12,rax
  405fff:	test   rax,rax
  406002:	je     40611c <flatcc_parse_file@@Base+0x5dc>
  406008:	mov    rdi,rbp
  40600b:	mov    ecx,0x1
  406010:	mov    rdx,r13
  406013:	mov    rsi,r15
  406016:	call   41d010 <__flatcc_fb_create_join_path@@Base>
  40601b:	mov    rbp,rax
  40601e:	test   rax,rax
  406021:	je     40611c <flatcc_parse_file@@Base+0x5dc>
  406027:	mov    rdi,rax
  40602a:	call   41d1f0 <__flatcc_fb_create_make_path@@Base>
  40602f:	mov    QWORD PTR [rsp+0x8],rax
  406034:	test   rax,rax
  406037:	je     40611c <flatcc_parse_file@@Base+0x5dc>
  40603d:	mov    rdi,rbp
  406040:	call   405230 <free@plt>
  406045:	lea    rsi,[rip+0x280c0]        # 42e10c <_IO_stdin_used@@Base+0x110c>
  40604c:	mov    rdi,r12
  40604f:	call   4053b0 <fopen@plt>
  406054:	mov    rbp,rax
  406057:	test   rax,rax
  40605a:	je     40615e <flatcc_parse_file@@Base+0x61e>
  406060:	mov    rcx,QWORD PTR [rsp+0x8]
  406065:	mov    rdi,rax
  406068:	lea    rdx,[rip+0x280a0]        # 42e10f <_IO_stdin_used@@Base+0x110f>
  40606f:	mov    esi,0x1
  406074:	xor    eax,eax
  406076:	call   4053e0 <__fprintf_chk@plt>
  40607b:	mov    rbx,QWORD PTR [rbx]
  40607e:	test   rbx,rbx
  406081:	je     4060c9 <flatcc_parse_file@@Base+0x589>
  406083:	lea    r15,[rip+0x28089]        # 42e113 <_IO_stdin_used@@Base+0x1113>
  40608a:	nop    WORD PTR [rax+rax*1+0x0]
  406090:	mov    rdi,QWORD PTR [rbx+0x348]
  406097:	call   41d1f0 <__flatcc_fb_create_make_path@@Base>
  40609c:	mov    r13,rax
  40609f:	test   rax,rax
  4060a2:	je     40611c <flatcc_parse_file@@Base+0x5dc>
  4060a4:	mov    rcx,rax
  4060a7:	mov    rdi,rbp
  4060aa:	xor    eax,eax
  4060ac:	mov    rdx,r15
  4060af:	mov    esi,0x1
  4060b4:	call   4053e0 <__fprintf_chk@plt>
  4060b9:	mov    rbx,QWORD PTR [rbx]
  4060bc:	mov    rdi,r13
  4060bf:	call   405230 <free@plt>
  4060c4:	test   rbx,rbx
  4060c7:	jne    406090 <flatcc_parse_file@@Base+0x550>
  4060c9:	lea    rdx,[rip+0x3f04d]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  4060d0:	mov    esi,0x1
  4060d5:	mov    rdi,rbp
  4060d8:	xor    eax,eax
  4060da:	call   4053e0 <__fprintf_chk@plt>
  4060df:	mov    rdi,r12
  4060e2:	call   405230 <free@plt>
  4060e7:	mov    rdi,QWORD PTR [rsp+0x8]
  4060ec:	call   405230 <free@plt>
  4060f1:	mov    rdi,rbp
  4060f4:	call   4052a0 <fclose@plt>
  4060f9:	jmp    405b9c <flatcc_parse_file@@Base+0x5c>
  4060fe:	mov    rdi,r12
  406101:	mov    QWORD PTR [rsp+0x10],rax
  406106:	call   41ce40 <__flatcc_fb_copy_path@@Base>
  40610b:	test   rax,rax
  40610e:	mov    r13,rax
  406111:	mov    rsi,QWORD PTR [rsp+0x10]
  406116:	jne    405c5b <flatcc_parse_file@@Base+0x11b>
  40611c:	call   4056d0 <_start@@Base+0x110>
  406121:	lea    rsi,[rip+0x27ef0]        # 42e018 <_IO_stdin_used@@Base+0x1018>
  406128:	mov    rdi,rbx
  40612b:	xor    eax,eax
  40612d:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  406132:	jmp    405f30 <flatcc_parse_file@@Base+0x3f0>
  406137:	mov    rax,QWORD PTR [rip+0x4aeaa]        # 450fe8 <stderr@GLIBC_2.2.5>
  40613e:	lea    rdx,[rip+0x27e5b]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  406145:	mov    rdi,QWORD PTR [rax]
  406148:	mov    esi,0x1
  40614d:	xor    eax,eax
  40614f:	call   4053e0 <__fprintf_chk@plt>
  406154:	mov    edi,0x1
  406159:	call   4053c0 <exit@plt>
  40615e:	mov    rdx,r12
  406161:	lea    rsi,[rip+0x27f30]        # 42e098 <_IO_stdin_used@@Base+0x1098>
  406168:	mov    rdi,rbx
  40616b:	xor    eax,eax
  40616d:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  406172:	mov    rdi,r12
  406175:	call   405230 <free@plt>
  40617a:	mov    rdi,QWORD PTR [rsp+0x8]
  40617f:	call   405230 <free@plt>
  406184:	jmp    405b9c <flatcc_parse_file@@Base+0x5c>
  406189:	mov    ecx,DWORD PTR [rbx+0x1bc]
  40618f:	mov    r15,rax
  406192:	test   ecx,ecx
  406194:	lea    r13,[rip+0x27f2c]        # 42e0c7 <_IO_stdin_used@@Base+0x10c7>
  40619b:	lea    rax,[rip+0x28073]        # 42e215 <_IO_stdin_used@@Base+0x1215>
  4061a2:	cmove  r13,rax
  4061a6:	jmp    405ff2 <flatcc_parse_file@@Base+0x4b2>
  4061ab:	mov    rdi,rbp
  4061ae:	mov    rsi,rax
  4061b1:	lea    rdx,[rip+0x27f1a]        # 42e0d2 <_IO_stdin_used@@Base+0x10d2>
  4061b8:	jmp    405fdf <flatcc_parse_file@@Base+0x49f>
  4061bd:	call   4052c0 <__stack_chk_fail@plt>
  4061c2:	lea    rcx,[rip+0x27f57]        # 42e120 <_IO_stdin_used@@Base+0x1120>
  4061c9:	mov    edx,0xdc
  4061ce:	lea    rsi,[rip+0x27e63]        # 42e038 <_IO_stdin_used@@Base+0x1038>
  4061d5:	lea    rdi,[rip+0x27f1b]        # 42e0f7 <_IO_stdin_used@@Base+0x10f7>
  4061dc:	call   4052e0 <__assert_fail@plt>
  4061e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4061eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4061f0:	endbr64 
  4061f4:	mov    rdi,rsi
  4061f7:	jmp    405230 <free@plt>
  4061fc:	nop    DWORD PTR [rax+0x0]
  406200:	push   rax
  406201:	pop    rax
  406202:	lea    rdx,[rip+0x27d97]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  406209:	mov    esi,0x1
  40620e:	sub    rsp,0x8
  406212:	mov    rax,QWORD PTR [rip+0x4adcf]        # 450fe8 <stderr@GLIBC_2.2.5>
  406219:	mov    rdi,QWORD PTR [rax]
  40621c:	xor    eax,eax
  40621e:	call   4053e0 <__fprintf_chk@plt>
  406223:	mov    edi,0x1
  406228:	call   4053c0 <exit@plt>
  40622d:	nop    DWORD PTR [rax]

0000000000406230 <__flatcc_fb_open_output_file@@Base>:
  406230:	endbr64 
  406234:	push   r15
  406236:	mov    r15,rcx
  406239:	push   r14
  40623b:	mov    r14,rdx
  40623e:	push   r13
  406240:	mov    r13,rsi
  406243:	push   r12
  406245:	push   rbp
  406246:	push   rbx
  406247:	mov    rbx,rdi
  40624a:	sub    rsp,0x8
  40624e:	mov    rax,QWORD PTR [rdi+0xe0]
  406255:	mov    rbp,QWORD PTR [rax+0x108]
  40625c:	test   rbp,rbp
  40625f:	je     406290 <__flatcc_fb_open_output_file@@Base+0x60>
  406261:	mov    rdi,rbp
  406264:	call   4052b0 <strlen@plt>
  406269:	xor    r12d,r12d
  40626c:	cmp    QWORD PTR [rbx+0xd0],0x0
  406274:	je     4062a6 <__flatcc_fb_open_output_file@@Base+0x76>
  406276:	add    rsp,0x8
  40627a:	pop    rbx
  40627b:	pop    rbp
  40627c:	mov    eax,r12d
  40627f:	pop    r12
  406281:	pop    r13
  406283:	pop    r14
  406285:	pop    r15
  406287:	ret    
  406288:	nop    DWORD PTR [rax+rax*1+0x0]
  406290:	xor    eax,eax
  406292:	xor    r12d,r12d
  406295:	cmp    QWORD PTR [rbx+0xd0],0x0
  40629d:	lea    rbp,[rip+0x3ee7a]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4062a4:	jne    406276 <__flatcc_fb_open_output_file@@Base+0x46>
  4062a6:	mov    rdi,rbp
  4062a9:	mov    r9d,0x1
  4062af:	mov    r8,r15
  4062b2:	mov    rcx,r14
  4062b5:	mov    rdx,r13
  4062b8:	mov    rsi,rax
  4062bb:	call   41cef0 <__flatcc_fb_create_join_path_n@@Base>
  4062c0:	mov    rbp,rax
  4062c3:	test   rax,rax
  4062c6:	je     406318 <__flatcc_fb_open_output_file@@Base+0xe8>
  4062c8:	lea    rsi,[rip+0x27e3d]        # 42e10c <_IO_stdin_used@@Base+0x110c>
  4062cf:	mov    rdi,rax
  4062d2:	call   4053b0 <fopen@plt>
  4062d7:	mov    QWORD PTR [rbx+0xd0],rax
  4062de:	test   rax,rax
  4062e1:	je     4062f0 <__flatcc_fb_open_output_file@@Base+0xc0>
  4062e3:	mov    rdi,rbp
  4062e6:	call   405230 <free@plt>
  4062eb:	jmp    406276 <__flatcc_fb_open_output_file@@Base+0x46>
  4062ed:	nop    DWORD PTR [rax]
  4062f0:	mov    rax,QWORD PTR [rip+0x4acf1]        # 450fe8 <stderr@GLIBC_2.2.5>
  4062f7:	mov    rcx,rbp
  4062fa:	mov    rdi,QWORD PTR [rax]
  4062fd:	lea    rdx,[rip+0x27e3c]        # 42e140 <_IO_stdin_used@@Base+0x1140>
  406304:	mov    esi,0x1
  406309:	xor    eax,eax
  40630b:	call   4053e0 <__fprintf_chk@plt>
  406310:	mov    r12d,0xffffffff
  406316:	jmp    4062e3 <__flatcc_fb_open_output_file@@Base+0xb3>
  406318:	call   406200 <flatcc_parse_file@@Base+0x6c0>
  40631d:	nop    DWORD PTR [rax]

0000000000406320 <__flatcc_fb_close_output_file@@Base>:
  406320:	endbr64 
  406324:	mov    rax,QWORD PTR [rdi+0xe0]
  40632b:	cmp    QWORD PTR [rax+0x98],0x0
  406333:	je     406340 <__flatcc_fb_close_output_file@@Base+0x20>
  406335:	ret    
  406336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406340:	mov    eax,DWORD PTR [rax+0x80]
  406346:	test   eax,eax
  406348:	jne    406335 <__flatcc_fb_close_output_file@@Base+0x15>
  40634a:	mov    rax,QWORD PTR [rdi+0xd0]
  406351:	test   rax,rax
  406354:	je     406335 <__flatcc_fb_close_output_file@@Base+0x15>
  406356:	push   rbx
  406357:	mov    rbx,rdi
  40635a:	mov    rdi,rax
  40635d:	call   4052a0 <fclose@plt>
  406362:	mov    QWORD PTR [rbx+0xd0],0x0
  40636d:	pop    rbx
  40636e:	ret    
  40636f:	nop

0000000000406370 <__flatcc_fb_end_output_c@@Base>:
  406370:	endbr64 
  406374:	push   rbx
  406375:	mov    rax,QWORD PTR [rip+0x4ac54]        # 450fd0 <stdout@GLIBC_2.2.5>
  40637c:	mov    rbx,rdi
  40637f:	mov    rdi,QWORD PTR [rdi+0xd0]
  406386:	cmp    QWORD PTR [rax],rdi
  406389:	je     406395 <__flatcc_fb_end_output_c@@Base+0x25>
  40638b:	test   rdi,rdi
  40638e:	je     406395 <__flatcc_fb_end_output_c@@Base+0x25>
  406390:	call   4052a0 <fclose@plt>
  406395:	mov    QWORD PTR [rbx+0xd0],0x0
  4063a0:	pop    rbx
  4063a1:	ret    
  4063a2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4063ad:	nop    DWORD PTR [rax]

00000000004063b0 <__flatcc_fb_init_output_c@@Base>:
  4063b0:	endbr64 
  4063b4:	push   r15
  4063b6:	push   r14
  4063b8:	push   r13
  4063ba:	mov    r13,rsi
  4063bd:	push   r12
  4063bf:	lea    r12,[rip+0x27e28]        # 42e1ee <_IO_stdin_used@@Base+0x11ee>
  4063c6:	push   rbp
  4063c7:	push   rbx
  4063c8:	mov    rbx,rdi
  4063cb:	mov    rcx,rbx
  4063ce:	sub    rsp,0x18
  4063d2:	mov    eax,DWORD PTR [rsi+0xa0]
  4063d8:	mov    rbp,QWORD PTR [rsi+0x108]
  4063df:	test   eax,eax
  4063e1:	lea    rax,[rip+0x27d24]        # 42e10c <_IO_stdin_used@@Base+0x110c>
  4063e8:	cmovne rax,r12
  4063ec:	test   rbp,rbp
  4063ef:	mov    QWORD PTR [rsp+0x8],rax
  4063f4:	lea    rax,[rip+0x3ed23]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4063fb:	cmove  rbp,rax
  4063ff:	mov    QWORD PTR [rdi],0x0
  406406:	mov    QWORD PTR [rdi+0xf8],0x0
  406411:	add    rdi,0x8
  406415:	and    rdi,0xfffffffffffffff8
  406419:	sub    rcx,rdi
  40641c:	add    ecx,0x100
  406422:	shr    ecx,0x3
  406425:	xor    eax,eax
  406427:	rep stos QWORD PTR es:[rdi],rax
  40642a:	mov    QWORD PTR [rbx+0xe0],rsi
  406431:	mov    r14,QWORD PTR [rsi+0xe8]
  406438:	test   r14,r14
  40643b:	je     406578 <__flatcc_fb_init_output_c@@Base+0x1c8>
  406441:	mov    rdi,r14
  406444:	call   4052b0 <strlen@plt>
  406449:	mov    r12,rax
  40644c:	cmp    rax,0x64
  406450:	ja     4065eb <__flatcc_fb_init_output_c@@Base+0x23b>
  406456:	mov    edx,0x64
  40645b:	mov    rsi,r14
  40645e:	mov    rdi,rbx
  406461:	mov    QWORD PTR [rsp],rbx
  406465:	call   405250 <strncpy@plt>
  40646a:	test   r12,r12
  40646d:	mov    BYTE PTR [rbx+0x64],0x0
  406471:	mov    r8,QWORD PTR [rsp]
  406475:	jne    406560 <__flatcc_fb_init_output_c@@Base+0x1b0>
  40647b:	movsx  r14,BYTE PTR [rbx]
  40647f:	mov    QWORD PTR [rsp],r8
  406483:	lea    r15,[rbx+0x66]
  406487:	test   r14b,r14b
  40648a:	je     4064b2 <__flatcc_fb_init_output_c@@Base+0x102>
  40648c:	call   405220 <__ctype_toupper_loc@plt>
  406491:	mov    r8,QWORD PTR [rsp]
  406495:	nop    DWORD PTR [rax]
  406498:	mov    rdx,QWORD PTR [rax]
  40649b:	inc    r15
  40649e:	mov    edx,DWORD PTR [rdx+r14*4]
  4064a2:	inc    r8
  4064a5:	mov    BYTE PTR [r15-0x1],dl
  4064a9:	movsx  r14,BYTE PTR [r8]
  4064ad:	test   r14b,r14b
  4064b0:	jne    406498 <__flatcc_fb_init_output_c@@Base+0xe8>
  4064b2:	mov    BYTE PTR [r15],0x0
  4064b6:	mov    BYTE PTR [rbx+r12*1+0x66],0x0
  4064bc:	mov    eax,DWORD PTR [r13+0xd0]
  4064c3:	mov    r13d,DWORD PTR [r13+0x80]
  4064ca:	mov    DWORD PTR [rbx+0xf4],eax
  4064d0:	test   r13d,r13d
  4064d3:	jne    406540 <__flatcc_fb_init_output_c@@Base+0x190>
  4064d5:	mov    rax,QWORD PTR [rbx+0xe0]
  4064dc:	mov    rsi,QWORD PTR [rax+0x98]
  4064e3:	test   rsi,rsi
  4064e6:	je     40652d <__flatcc_fb_init_output_c@@Base+0x17d>
  4064e8:	mov    rdi,rbp
  4064eb:	mov    ecx,0x1
  4064f0:	lea    rdx,[rip+0x3ec27]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4064f7:	call   41d010 <__flatcc_fb_create_join_path@@Base>
  4064fc:	mov    rbp,rax
  4064ff:	test   rax,rax
  406502:	je     406618 <__flatcc_fb_init_output_c@@Base+0x268>
  406508:	mov    rsi,QWORD PTR [rsp+0x8]
  40650d:	mov    rdi,rax
  406510:	call   4053b0 <fopen@plt>
  406515:	mov    QWORD PTR [rbx+0xd0],rax
  40651c:	test   rax,rax
  40651f:	je     4065c0 <__flatcc_fb_init_output_c@@Base+0x210>
  406525:	mov    rdi,rbp
  406528:	call   405230 <free@plt>
  40652d:	add    rsp,0x18
  406531:	pop    rbx
  406532:	pop    rbp
  406533:	pop    r12
  406535:	mov    eax,r13d
  406538:	pop    r13
  40653a:	pop    r14
  40653c:	pop    r15
  40653e:	ret    
  40653f:	nop
  406540:	mov    rax,QWORD PTR [rip+0x4aa89]        # 450fd0 <stdout@GLIBC_2.2.5>
  406547:	xor    r13d,r13d
  40654a:	mov    rax,QWORD PTR [rax]
  40654d:	mov    QWORD PTR [rbx+0xd0],rax
  406554:	jmp    40652d <__flatcc_fb_init_output_c@@Base+0x17d>
  406556:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406560:	lea    rax,[r12+0x1]
  406565:	mov    BYTE PTR [rbx+r12*1],0x5f
  40656a:	mov    BYTE PTR [rbx+rax*1],0x0
  40656e:	jmp    40647b <__flatcc_fb_init_output_c@@Base+0xcb>
  406573:	nop    DWORD PTR [rax+rax*1+0x0]
  406578:	vmovdqa xmm0,XMMWORD PTR [rip+0x27ce0]        # 42e260 <_IO_stdin_used@@Base+0x1260>
  406580:	mov    r8,rbx
  406583:	vmovups XMMWORD PTR [rbx],xmm0
  406587:	vpxor  xmm0,xmm0,xmm0
  40658b:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  406590:	vmovups XMMWORD PTR [rbx+0x20],xmm0
  406595:	vmovups XMMWORD PTR [rbx+0x30],xmm0
  40659a:	vmovups XMMWORD PTR [rbx+0x40],xmm0
  40659f:	vmovups XMMWORD PTR [rbx+0x50],xmm0
  4065a4:	mov    DWORD PTR [rbx+0x60],0x0
  4065ab:	mov    BYTE PTR [rbx+0x64],0x0
  4065af:	mov    eax,0xc
  4065b4:	mov    r12d,0xb
  4065ba:	jmp    406565 <__flatcc_fb_init_output_c@@Base+0x1b5>
  4065bc:	nop    DWORD PTR [rax+0x0]
  4065c0:	mov    rax,QWORD PTR [rip+0x4aa21]        # 450fe8 <stderr@GLIBC_2.2.5>
  4065c7:	mov    rcx,rbp
  4065ca:	mov    rdi,QWORD PTR [rax]
  4065cd:	lea    rdx,[rip+0x27b6c]        # 42e140 <_IO_stdin_used@@Base+0x1140>
  4065d4:	mov    esi,0x1
  4065d9:	xor    eax,eax
  4065db:	call   4053e0 <__fprintf_chk@plt>
  4065e0:	mov    r13d,0xffffffff
  4065e6:	jmp    406525 <__flatcc_fb_init_output_c@@Base+0x175>
  4065eb:	mov    rax,QWORD PTR [rip+0x4a9f6]        # 450fe8 <stderr@GLIBC_2.2.5>
  4065f2:	mov    ecx,0x64
  4065f7:	mov    rdi,QWORD PTR [rax]
  4065fa:	lea    rdx,[rip+0x27b67]        # 42e168 <_IO_stdin_used@@Base+0x1168>
  406601:	mov    esi,0x1
  406606:	xor    eax,eax
  406608:	call   4053e0 <__fprintf_chk@plt>
  40660d:	mov    r13d,0xffffffff
  406613:	jmp    40652d <__flatcc_fb_init_output_c@@Base+0x17d>
  406618:	call   406200 <flatcc_parse_file@@Base+0x6c0>
  40661d:	nop    DWORD PTR [rax]

0000000000406620 <__flatcc_fb_gen_c_includes@@Base>:
  406620:	endbr64 
  406624:	push   r15
  406626:	vpxor  xmm0,xmm0,xmm0
  40662a:	push   r14
  40662c:	push   r13
  40662e:	push   r12
  406630:	mov    r12,rdi
  406633:	push   rbp
  406634:	push   rbx
  406635:	sub    rsp,0x48
  406639:	mov    QWORD PTR [rsp],rsi
  40663d:	mov    QWORD PTR [rsp+0x8],rdx
  406642:	lea    r13,[rsp+0x10]
  406647:	mov    rax,QWORD PTR fs:0x28
  406650:	mov    QWORD PTR [rsp+0x38],rax
  406655:	xor    eax,eax
  406657:	mov    rax,QWORD PTR [rdi+0xd8]
  40665e:	mov    rdi,QWORD PTR [rax+0x118]
  406665:	mov    rbx,QWORD PTR [rax]
  406668:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  40666e:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  406674:	call   41ce40 <__flatcc_fb_copy_path@@Base>
  406679:	mov    rsi,rax
  40667c:	mov    edx,0x1
  406681:	mov    rdi,r13
  406684:	call   41a670 <str_set_insert_item@@Base>
  406689:	nop    DWORD PTR [rax+0x0]
  406690:	test   rbx,rbx
  406693:	je     406737 <__flatcc_fb_gen_c_includes@@Base+0x117>
  406699:	mov    rax,QWORD PTR [r12+0xe0]
  4066a1:	movsxd rsi,DWORD PTR [rbx+0x10]
  4066a5:	mov    rdx,QWORD PTR [rax+0x68]
  4066a9:	mov    rdi,QWORD PTR [rbx+0x8]
  4066ad:	call   41d260 <__flatcc_fb_create_basename@@Base>
  4066b2:	mov    rbp,rax
  4066b5:	test   rax,rax
  4066b8:	je     4067ad <__flatcc_fb_gen_c_includes@@Base+0x18d>
  4066be:	mov    rdi,rax
  4066c1:	mov    rbx,QWORD PTR [rbx]
  4066c4:	call   41ce40 <__flatcc_fb_copy_path@@Base>
  4066c9:	mov    r15,rax
  4066cc:	test   rax,rax
  4066cf:	je     4067ad <__flatcc_fb_gen_c_includes@@Base+0x18d>
  4066d5:	movzx  r14d,BYTE PTR [rax]
  4066d9:	test   r14b,r14b
  4066dc:	je     406709 <__flatcc_fb_gen_c_includes@@Base+0xe9>
  4066de:	call   405220 <__ctype_toupper_loc@plt>
  4066e3:	mov    rsi,r15
  4066e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066f0:	mov    rdi,QWORD PTR [rax]
  4066f3:	movsx  rdx,r14b
  4066f7:	mov    edx,DWORD PTR [rdi+rdx*4]
  4066fa:	inc    rsi
  4066fd:	mov    BYTE PTR [rsi-0x1],dl
  406700:	movzx  r14d,BYTE PTR [rsi]
  406704:	test   r14b,r14b
  406707:	jne    4066f0 <__flatcc_fb_gen_c_includes@@Base+0xd0>
  406709:	mov    edx,0x1
  40670e:	mov    rsi,r15
  406711:	mov    rdi,r13
  406714:	call   41a670 <str_set_insert_item@@Base>
  406719:	test   rax,rax
  40671c:	je     406770 <__flatcc_fb_gen_c_includes@@Base+0x150>
  40671e:	mov    rdi,r15
  406721:	call   405230 <free@plt>
  406726:	mov    rdi,rbp
  406729:	call   405230 <free@plt>
  40672e:	test   rbx,rbx
  406731:	jne    406699 <__flatcc_fb_gen_c_includes@@Base+0x79>
  406737:	xor    edx,edx
  406739:	lea    rsi,[rip+0xfffffffffffffab0]        # 4061f0 <flatcc_parse_file@@Base+0x6b0>
  406740:	mov    rdi,r13
  406743:	call   41a570 <str_set_destroy@@Base>
  406748:	mov    rax,QWORD PTR [rsp+0x38]
  40674d:	xor    rax,QWORD PTR fs:0x28
  406756:	jne    4067d4 <__flatcc_fb_gen_c_includes@@Base+0x1b4>
  406758:	add    rsp,0x48
  40675c:	pop    rbx
  40675d:	pop    rbp
  40675e:	pop    r12
  406760:	pop    r13
  406762:	pop    r14
  406764:	pop    r15
  406766:	ret    
  406767:	nop    WORD PTR [rax+rax*1+0x0]
  406770:	sub    rsp,0x8
  406774:	push   QWORD PTR [rsp+0x8]
  406778:	mov    rdi,QWORD PTR [r12+0xd0]
  406780:	lea    rdx,[rip+0x27a19]        # 42e1a0 <_IO_stdin_used@@Base+0x11a0>
  406787:	mov    r8,QWORD PTR [rsp+0x18]
  40678c:	mov    r9,rbp
  40678f:	mov    rcx,r15
  406792:	mov    esi,0x1
  406797:	xor    eax,eax
  406799:	call   4053e0 <__fprintf_chk@plt>
  40679e:	mov    rdi,rbp
  4067a1:	call   405230 <free@plt>
  4067a6:	pop    rax
  4067a7:	pop    rdx
  4067a8:	jmp    406690 <__flatcc_fb_gen_c_includes@@Base+0x70>
  4067ad:	mov    rax,QWORD PTR [rip+0x4a834]        # 450fe8 <stderr@GLIBC_2.2.5>
  4067b4:	lea    rdx,[rip+0x277e5]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  4067bb:	mov    rdi,QWORD PTR [rax]
  4067be:	mov    esi,0x1
  4067c3:	xor    eax,eax
  4067c5:	call   4053e0 <__fprintf_chk@plt>
  4067ca:	mov    edi,0x1
  4067cf:	call   4053c0 <exit@plt>
  4067d4:	call   4052c0 <__stack_chk_fail@plt>
  4067d9:	nop    DWORD PTR [rax+0x0]

00000000004067e0 <__flatcc_fb_copy_scope@@Base>:
  4067e0:	endbr64 
  4067e4:	push   r14
  4067e6:	push   r13
  4067e8:	push   r12
  4067ea:	push   rbp
  4067eb:	push   rbx
  4067ec:	movsxd r12,DWORD PTR [rdi+0x30]
  4067f0:	mov    rax,QWORD PTR [rdi]
  4067f3:	mov    r14,r12
  4067f6:	mov    rdx,r12
  4067f9:	test   rax,rax
  4067fc:	je     406815 <__flatcc_fb_copy_scope@@Base+0x35>
  4067fe:	xchg   ax,ax
  406800:	mov    rcx,QWORD PTR [rax+0x8]
  406804:	mov    rax,QWORD PTR [rax]
  406807:	mov    rcx,QWORD PTR [rcx+0x8]
  40680b:	lea    rdx,[rdx+rcx*1+0x1]
  406810:	test   rax,rax
  406813:	jne    406800 <__flatcc_fb_copy_scope@@Base+0x20>
  406815:	cmp    rdx,0x65
  406819:	ja     406883 <__flatcc_fb_copy_scope@@Base+0xa3>
  40681b:	mov    r13,rsi
  40681e:	mov    rsi,QWORD PTR [rdi+0x28]
  406822:	mov    rbx,rdi
  406825:	mov    rdx,r12
  406828:	mov    rdi,r13
  40682b:	call   405350 <memcpy@plt>
  406830:	mov    rbp,QWORD PTR [rbx]
  406833:	test   rbp,rbp
  406836:	je     406871 <__flatcc_fb_copy_scope@@Base+0x91>
  406838:	nop    DWORD PTR [rax+rax*1+0x0]
  406840:	mov    rax,QWORD PTR [rbp+0x8]
  406844:	lea    rdi,[r13+r12*1+0x0]
  406849:	mov    rbx,QWORD PTR [rax+0x8]
  40684d:	mov    rsi,QWORD PTR [rax]
  406850:	mov    rdx,rbx
  406853:	add    rbx,r12
  406856:	call   405350 <memcpy@plt>
  40685b:	mov    BYTE PTR [r13+rbx*1+0x0],0x5f
  406861:	lea    r12,[rbx+0x1]
  406865:	mov    rbp,QWORD PTR [rbp+0x0]
  406869:	test   rbp,rbp
  40686c:	jne    406840 <__flatcc_fb_copy_scope@@Base+0x60>
  40686e:	mov    r14d,r12d
  406871:	mov    BYTE PTR [r13+r12*1+0x0],0x0
  406877:	pop    rbx
  406878:	pop    rbp
  406879:	pop    r12
  40687b:	pop    r13
  40687d:	mov    eax,r14d
  406880:	pop    r14
  406882:	ret    
  406883:	mov    BYTE PTR [rsi],0x0
  406886:	mov    r14d,0xffffffff
  40688c:	jmp    406877 <__flatcc_fb_copy_scope@@Base+0x97>
  40688e:	xchg   ax,ax

0000000000406890 <__flatcc_fb_scoped_symbol_name@@Base>:
  406890:	endbr64 
  406894:	push   rbp
  406895:	push   rbx
  406896:	mov    rbx,rdx
  406899:	sub    rsp,0x8
  40689d:	mov    rbp,QWORD PTR [rsi+0x8]
  4068a1:	cmp    QWORD PTR [rdx+0xd0],rdi
  4068a8:	je     4068e7 <__flatcc_fb_scoped_symbol_name@@Base+0x57>
  4068aa:	mov    rsi,rdx
  4068ad:	call   4067e0 <__flatcc_fb_copy_scope@@Base>
  4068b2:	test   eax,eax
  4068b4:	js     4068c0 <__flatcc_fb_scoped_symbol_name@@Base+0x30>
  4068b6:	mov    DWORD PTR [rbx+0xd8],eax
  4068bc:	jmp    4068ed <__flatcc_fb_scoped_symbol_name@@Base+0x5d>
  4068be:	xchg   ax,ax
  4068c0:	mov    rax,QWORD PTR [rip+0x4a721]        # 450fe8 <stderr@GLIBC_2.2.5>
  4068c7:	mov    DWORD PTR [rbx+0xd8],0x0
  4068d1:	mov    rdi,QWORD PTR [rax]
  4068d4:	lea    rdx,[rip+0x27916]        # 42e1f1 <_IO_stdin_used@@Base+0x11f1>
  4068db:	mov    esi,0x1
  4068e0:	xor    eax,eax
  4068e2:	call   4053e0 <__fprintf_chk@plt>
  4068e7:	mov    eax,DWORD PTR [rbx+0xd8]
  4068ed:	mov    rcx,QWORD PTR [rbp+0x8]
  4068f1:	mov    rsi,QWORD PTR [rbp+0x0]
  4068f5:	lea    edi,[rax+rcx*1]
  4068f8:	mov    edx,ecx
  4068fa:	mov    DWORD PTR [rbx+0xdc],ecx
  406900:	mov    DWORD PTR [rbx+0xe0],edi
  406906:	cmp    edi,0xcb
  40690c:	jg     406930 <__flatcc_fb_scoped_symbol_name@@Base+0xa0>
  40690e:	cdqe   
  406910:	lea    rdi,[rbx+rax*1]
  406914:	movsxd rdx,edx
  406917:	call   405350 <memcpy@plt>
  40691c:	movsxd rax,DWORD PTR [rbx+0xe0]
  406923:	mov    BYTE PTR [rbx+rax*1],0x0
  406927:	add    rsp,0x8
  40692b:	pop    rbx
  40692c:	pop    rbp
  40692d:	ret    
  40692e:	xchg   ax,ax
  406930:	mov    rax,QWORD PTR [rip+0x4a6b1]        # 450fe8 <stderr@GLIBC_2.2.5>
  406937:	mov    r8,rsi
  40693a:	mov    rdi,QWORD PTR [rax]
  40693d:	lea    rdx,[rip+0x27884]        # 42e1c8 <_IO_stdin_used@@Base+0x11c8>
  406944:	mov    esi,0x1
  406949:	xor    eax,eax
  40694b:	call   4053e0 <__fprintf_chk@plt>
  406950:	mov    eax,DWORD PTR [rbx+0xd8]
  406956:	mov    edx,0xcb
  40695b:	sub    edx,eax
  40695d:	mov    DWORD PTR [rbx+0xdc],edx
  406963:	mov    DWORD PTR [rbx+0xe0],0xcb
  40696d:	mov    rsi,QWORD PTR [rbp+0x0]
  406971:	jmp    40690e <__flatcc_fb_scoped_symbol_name@@Base+0x7e>
  406973:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40697e:	xchg   ax,ax

0000000000406980 <__flatcc_fb_codegen_common_c@@Base>:
  406980:	endbr64 
  406984:	push   r12
  406986:	push   rbp
  406987:	push   rbx
  406988:	mov    rbx,rdi
  40698b:	call   4052b0 <strlen@plt>
  406990:	lea    r12,[rax-0x1]
  406994:	mov    rax,QWORD PTR [rbx+0xe0]
  40699b:	mov    edx,DWORD PTR [rax+0xb0]
  4069a1:	test   edx,edx
  4069a3:	jne    4069c0 <__flatcc_fb_codegen_common_c@@Base+0x40>
  4069a5:	mov    ebp,DWORD PTR [rax+0xb4]
  4069ab:	test   ebp,ebp
  4069ad:	jne    406a00 <__flatcc_fb_codegen_common_c@@Base+0x80>
  4069af:	pop    rbx
  4069b0:	mov    eax,ebp
  4069b2:	pop    rbp
  4069b3:	pop    r12
  4069b5:	ret    
  4069b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069c0:	lea    rcx,[rip+0x27847]        # 42e20e <_IO_stdin_used@@Base+0x120e>
  4069c7:	mov    rdx,r12
  4069ca:	mov    rsi,rbx
  4069cd:	mov    rdi,rbx
  4069d0:	call   406230 <__flatcc_fb_open_output_file@@Base>
  4069d5:	test   eax,eax
  4069d7:	jne    406a38 <__flatcc_fb_codegen_common_c@@Base+0xb8>
  4069d9:	mov    rdi,rbx
  4069dc:	call   40a890 <__flatcc_fb_gen_common_c_header@@Base>
  4069e1:	mov    ebp,eax
  4069e3:	mov    rdi,rbx
  4069e6:	call   406320 <__flatcc_fb_close_output_file@@Base>
  4069eb:	test   ebp,ebp
  4069ed:	jne    4069af <__flatcc_fb_codegen_common_c@@Base+0x2f>
  4069ef:	mov    rax,QWORD PTR [rbx+0xe0]
  4069f6:	mov    ebp,DWORD PTR [rax+0xb4]
  4069fc:	test   ebp,ebp
  4069fe:	je     4069af <__flatcc_fb_codegen_common_c@@Base+0x2f>
  406a00:	lea    rcx,[rip+0x27818]        # 42e21f <_IO_stdin_used@@Base+0x121f>
  406a07:	mov    rdx,r12
  406a0a:	mov    rsi,rbx
  406a0d:	mov    rdi,rbx
  406a10:	call   406230 <__flatcc_fb_open_output_file@@Base>
  406a15:	mov    ebp,eax
  406a17:	test   eax,eax
  406a19:	jne    406a38 <__flatcc_fb_codegen_common_c@@Base+0xb8>
  406a1b:	mov    rdi,rbx
  406a1e:	call   40f2d0 <__flatcc_fb_gen_common_c_builder_header@@Base>
  406a23:	mov    rdi,rbx
  406a26:	call   406320 <__flatcc_fb_close_output_file@@Base>
  406a2b:	pop    rbx
  406a2c:	mov    eax,ebp
  406a2e:	pop    rbp
  406a2f:	pop    r12
  406a31:	ret    
  406a32:	nop    WORD PTR [rax+rax*1+0x0]
  406a38:	mov    ebp,0xffffffff
  406a3d:	jmp    4069af <__flatcc_fb_codegen_common_c@@Base+0x2f>
  406a42:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406a4d:	nop    DWORD PTR [rax]

0000000000406a50 <__flatcc_fb_codegen_c@@Base>:
  406a50:	endbr64 
  406a54:	push   r12
  406a56:	xor    edx,edx
  406a58:	push   rbp
  406a59:	push   rbx
  406a5a:	mov    rbx,rdi
  406a5d:	sub    rsp,0x10
  406a61:	mov    QWORD PTR [rdi+0xd8],rsi
  406a68:	mov    rdi,QWORD PTR [rsi+0x68]
  406a6c:	xor    esi,esi
  406a6e:	call   41c590 <fb_scope_table_find@@Base>
  406a73:	mov    QWORD PTR [rbx+0xe8],rax
  406a7a:	mov    rax,QWORD PTR [rbx+0xd8]
  406a81:	mov    rbp,QWORD PTR [rax+0x110]
  406a88:	mov    rdi,rbp
  406a8b:	call   4052b0 <strlen@plt>
  406a90:	mov    r12,rax
  406a93:	mov    rax,QWORD PTR [rbx+0xe0]
  406a9a:	mov    edi,DWORD PTR [rax+0xb8]
  406aa0:	test   edi,edi
  406aa2:	jne    406b40 <__flatcc_fb_codegen_c@@Base+0xf0>
  406aa8:	mov    esi,DWORD PTR [rax+0xbc]
  406aae:	test   esi,esi
  406ab0:	jne    406b90 <__flatcc_fb_codegen_c@@Base+0x140>
  406ab6:	mov    ecx,DWORD PTR [rax+0xc0]
  406abc:	test   ecx,ecx
  406abe:	jne    406ae8 <__flatcc_fb_codegen_c@@Base+0x98>
  406ac0:	mov    edx,DWORD PTR [rax+0xc4]
  406ac6:	test   edx,edx
  406ac8:	jne    406be0 <__flatcc_fb_codegen_c@@Base+0x190>
  406ace:	mov    eax,DWORD PTR [rax+0xc8]
  406ad4:	test   eax,eax
  406ad6:	jne    406c30 <__flatcc_fb_codegen_c@@Base+0x1e0>
  406adc:	add    rsp,0x10
  406ae0:	pop    rbx
  406ae1:	pop    rbp
  406ae2:	pop    r12
  406ae4:	ret    
  406ae5:	nop    DWORD PTR [rax]
  406ae8:	mov    rax,QWORD PTR [rbx+0xd8]
  406aef:	lea    rcx,[rip+0x2773b]        # 42e231 <_IO_stdin_used@@Base+0x1231>
  406af6:	mov    rsi,QWORD PTR [rax+0x110]
  406afd:	mov    rdx,r12
  406b00:	mov    rdi,rbx
  406b03:	call   406230 <__flatcc_fb_open_output_file@@Base>
  406b08:	test   eax,eax
  406b0a:	jne    406c80 <__flatcc_fb_codegen_c@@Base+0x230>
  406b10:	mov    rdi,rbx
  406b13:	call   410ed0 <__flatcc_fb_gen_c_verifier@@Base>
  406b18:	test   eax,eax
  406b1a:	jne    406adc <__flatcc_fb_codegen_c@@Base+0x8c>
  406b1c:	mov    rdi,rbx
  406b1f:	call   406320 <__flatcc_fb_close_output_file@@Base>
  406b24:	mov    rax,QWORD PTR [rbx+0xe0]
  406b2b:	mov    edx,DWORD PTR [rax+0xc4]
  406b31:	test   edx,edx
  406b33:	je     406ace <__flatcc_fb_codegen_c@@Base+0x7e>
  406b35:	jmp    406be0 <__flatcc_fb_codegen_c@@Base+0x190>
  406b3a:	nop    WORD PTR [rax+rax*1+0x0]
  406b40:	lea    rcx,[rip+0x276ce]        # 42e215 <_IO_stdin_used@@Base+0x1215>
  406b47:	mov    rdx,r12
  406b4a:	mov    rsi,rbp
  406b4d:	mov    rdi,rbx
  406b50:	call   406230 <__flatcc_fb_open_output_file@@Base>
  406b55:	test   eax,eax
  406b57:	jne    406c80 <__flatcc_fb_codegen_c@@Base+0x230>
  406b5d:	mov    rdi,rbx
  406b60:	call   40b5e0 <__flatcc_fb_gen_c_reader@@Base>
  406b65:	test   eax,eax
  406b67:	jne    406adc <__flatcc_fb_codegen_c@@Base+0x8c>
  406b6d:	mov    rdi,rbx
  406b70:	call   406320 <__flatcc_fb_close_output_file@@Base>
  406b75:	mov    rax,QWORD PTR [rbx+0xe0]
  406b7c:	mov    esi,DWORD PTR [rax+0xbc]
  406b82:	test   esi,esi
  406b84:	je     406ab6 <__flatcc_fb_codegen_c@@Base+0x66>
  406b8a:	nop    WORD PTR [rax+rax*1+0x0]
  406b90:	mov    rax,QWORD PTR [rbx+0xd8]
  406b97:	lea    rcx,[rip+0x27688]        # 42e226 <_IO_stdin_used@@Base+0x1226>
  406b9e:	mov    rsi,QWORD PTR [rax+0x110]
  406ba5:	mov    rdx,r12
  406ba8:	mov    rdi,rbx
  406bab:	call   406230 <__flatcc_fb_open_output_file@@Base>
  406bb0:	test   eax,eax
  406bb2:	jne    406c80 <__flatcc_fb_codegen_c@@Base+0x230>
  406bb8:	mov    rdi,rbx
  406bbb:	call   40fec0 <__flatcc_fb_gen_c_builder@@Base>
  406bc0:	test   eax,eax
  406bc2:	jne    406adc <__flatcc_fb_codegen_c@@Base+0x8c>
  406bc8:	mov    rdi,rbx
  406bcb:	call   406320 <__flatcc_fb_close_output_file@@Base>
  406bd0:	mov    rax,QWORD PTR [rbx+0xe0]
  406bd7:	jmp    406ab6 <__flatcc_fb_codegen_c@@Base+0x66>
  406bdc:	nop    DWORD PTR [rax+0x0]
  406be0:	mov    rax,QWORD PTR [rbx+0xd8]
  406be7:	lea    rcx,[rip+0x2764f]        # 42e23d <_IO_stdin_used@@Base+0x123d>
  406bee:	mov    rsi,QWORD PTR [rax+0x110]
  406bf5:	mov    rdx,r12
  406bf8:	mov    rdi,rbx
  406bfb:	call   406230 <__flatcc_fb_open_output_file@@Base>
  406c00:	test   eax,eax
  406c02:	jne    406c80 <__flatcc_fb_codegen_c@@Base+0x230>
  406c04:	mov    rdi,rbx
  406c07:	call   415490 <__flatcc_fb_gen_c_json_parser@@Base>
  406c0c:	test   eax,eax
  406c0e:	jne    406adc <__flatcc_fb_codegen_c@@Base+0x8c>
  406c14:	mov    rdi,rbx
  406c17:	call   406320 <__flatcc_fb_close_output_file@@Base>
  406c1c:	mov    rax,QWORD PTR [rbx+0xe0]
  406c23:	jmp    406ace <__flatcc_fb_codegen_c@@Base+0x7e>
  406c28:	nop    DWORD PTR [rax+rax*1+0x0]
  406c30:	mov    rax,QWORD PTR [rbx+0xd8]
  406c37:	lea    rcx,[rip+0x2760e]        # 42e24c <_IO_stdin_used@@Base+0x124c>
  406c3e:	mov    rsi,QWORD PTR [rax+0x110]
  406c45:	mov    rdx,r12
  406c48:	mov    rdi,rbx
  406c4b:	call   406230 <__flatcc_fb_open_output_file@@Base>
  406c50:	test   eax,eax
  406c52:	jne    406c80 <__flatcc_fb_codegen_c@@Base+0x230>
  406c54:	mov    rdi,rbx
  406c57:	call   417d90 <__flatcc_fb_gen_c_json_printer@@Base>
  406c5c:	test   eax,eax
  406c5e:	jne    406adc <__flatcc_fb_codegen_c@@Base+0x8c>
  406c64:	endbr64 
  406c68:	mov    rdi,rbx
  406c6b:	mov    DWORD PTR [rsp+0xc],eax
  406c6f:	call   406320 <__flatcc_fb_close_output_file@@Base>
  406c74:	mov    eax,DWORD PTR [rsp+0xc]
  406c78:	jmp    406adc <__flatcc_fb_codegen_c@@Base+0x8c>
  406c7d:	nop    DWORD PTR [rax]
  406c80:	mov    eax,0xffffffff
  406c85:	jmp    406adc <__flatcc_fb_codegen_c@@Base+0x8c>
  406c8a:	nop    WORD PTR [rax+rax*1+0x0]
  406c90:	push   rax
  406c91:	pop    rax
  406c92:	lea    rcx,[rip+0x2760f]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  406c99:	lea    rdx,[rip+0x2edb3]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  406ca0:	mov    esi,0x1
  406ca5:	lea    r9,[rip+0x275c4]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  406cac:	mov    r8d,0x8d
  406cb2:	sub    rsp,0x8
  406cb6:	mov    rax,QWORD PTR [rip+0x4a32b]        # 450fe8 <stderr@GLIBC_2.2.5>
  406cbd:	mov    rdi,QWORD PTR [rax]
  406cc0:	xor    eax,eax
  406cc2:	call   4053e0 <__fprintf_chk@plt>
  406cc7:	lea    rcx,[rip+0x2f3a2]        # 436070 <_IO_stdin_used@@Base+0x9070>
  406cce:	mov    edx,0x8d
  406cd3:	lea    rsi,[rip+0x275ce]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  406cda:	lea    rdi,[rip+0x2fe38]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  406ce1:	call   4052e0 <__assert_fail@plt>
  406ce6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cf0:	push   rax
  406cf1:	pop    rax
  406cf2:	lea    rcx,[rip+0x275af]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  406cf9:	lea    rdx,[rip+0x2ed53]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  406d00:	mov    esi,0x1
  406d05:	lea    r9,[rip+0x27564]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  406d0c:	mov    r8d,0x60
  406d12:	sub    rsp,0x8
  406d16:	mov    rax,QWORD PTR [rip+0x4a2cb]        # 450fe8 <stderr@GLIBC_2.2.5>
  406d1d:	mov    rdi,QWORD PTR [rax]
  406d20:	xor    eax,eax
  406d22:	call   4053e0 <__fprintf_chk@plt>
  406d27:	lea    rcx,[rip+0x2f322]        # 436050 <_IO_stdin_used@@Base+0x9050>
  406d2e:	mov    edx,0x60
  406d33:	lea    rsi,[rip+0x2756e]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  406d3a:	lea    rdi,[rip+0x2fdd8]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  406d41:	call   4052e0 <__assert_fail@plt>
  406d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d50:	push   rax
  406d51:	pop    rax
  406d52:	lea    rcx,[rip+0x2754f]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  406d59:	lea    rdx,[rip+0x2ecf3]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  406d60:	mov    esi,0x1
  406d65:	lea    r9,[rip+0x27504]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  406d6c:	mov    r8d,0xe2
  406d72:	sub    rsp,0x8
  406d76:	mov    rax,QWORD PTR [rip+0x4a26b]        # 450fe8 <stderr@GLIBC_2.2.5>
  406d7d:	mov    rdi,QWORD PTR [rax]
  406d80:	xor    eax,eax
  406d82:	call   4053e0 <__fprintf_chk@plt>
  406d87:	lea    rcx,[rip+0x2f28a]        # 436018 <_IO_stdin_used@@Base+0x9018>
  406d8e:	mov    edx,0xe2
  406d93:	lea    rsi,[rip+0x2750e]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  406d9a:	lea    rdi,[rip+0x2fd78]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  406da1:	call   4052e0 <__assert_fail@plt>
  406da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406db0:	push   r12
  406db2:	mov    ecx,0x1d
  406db7:	push   rbp
  406db8:	mov    rbp,rdi
  406dbb:	push   rbx
  406dbc:	sub    rsp,0xf0
  406dc3:	mov    rax,QWORD PTR fs:0x28
  406dcc:	mov    QWORD PTR [rsp+0xe8],rax
  406dd4:	xor    eax,eax
  406dd6:	mov    rbx,rsp
  406dd9:	mov    rdi,rbx
  406ddc:	cmp    WORD PTR [rsi+0x10],0x1
  406de1:	rep stos QWORD PTR es:[rdi],rax
  406de4:	ja     406f63 <__flatcc_fb_codegen_c@@Base+0x513>
  406dea:	mov    rdi,QWORD PTR [rsi+0x18]
  406dee:	mov    r12,rsi
  406df1:	mov    rdx,rbx
  406df4:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  406df9:	cmp    WORD PTR [r12+0x10],0x1
  406e00:	mov    rdi,QWORD PTR [rbp+0xd0]
  406e07:	jne    406f00 <__flatcc_fb_codegen_c@@Base+0x4b0>
  406e0d:	cmp    QWORD PTR [r12+0xb8],0x0
  406e16:	je     406ee0 <__flatcc_fb_codegen_c@@Base+0x490>
  406e1c:	mov    r8,rbx
  406e1f:	mov    rcx,rbx
  406e22:	lea    rdx,[rip+0x2ec35]        # 435a5e <_IO_stdin_used@@Base+0x8a5e>
  406e29:	mov    esi,0x1
  406e2e:	xor    eax,eax
  406e30:	call   4053e0 <__fprintf_chk@plt>
  406e35:	mov    rdi,QWORD PTR [rbp+0xd0]
  406e3c:	mov    r8,rbx
  406e3f:	mov    rcx,rbx
  406e42:	lea    rdx,[rip+0x275a7]        # 42e3f0 <_IO_stdin_used@@Base+0x13f0>
  406e49:	mov    esi,0x1
  406e4e:	xor    eax,eax
  406e50:	call   4053e0 <__fprintf_chk@plt>
  406e55:	mov    rdi,QWORD PTR [rbp+0xd0]
  406e5c:	mov    r8,rbx
  406e5f:	mov    rcx,rbx
  406e62:	lea    rdx,[rip+0x275af]        # 42e418 <_IO_stdin_used@@Base+0x1418>
  406e69:	mov    esi,0x1
  406e6e:	xor    eax,eax
  406e70:	call   4053e0 <__fprintf_chk@plt>
  406e75:	mov    rdi,QWORD PTR [rbp+0xd0]
  406e7c:	mov    r8,rbx
  406e7f:	mov    rcx,rbx
  406e82:	lea    rdx,[rip+0x275b7]        # 42e440 <_IO_stdin_used@@Base+0x1440>
  406e89:	mov    esi,0x1
  406e8e:	xor    eax,eax
  406e90:	call   4053e0 <__fprintf_chk@plt>
  406e95:	mov    rdi,QWORD PTR [rbp+0xd0]
  406e9c:	mov    r8,rbx
  406e9f:	mov    rcx,rbx
  406ea2:	lea    rdx,[rip+0x275b7]        # 42e460 <_IO_stdin_used@@Base+0x1460>
  406ea9:	mov    esi,0x1
  406eae:	xor    eax,eax
  406eb0:	call   4053e0 <__fprintf_chk@plt>
  406eb5:	mov    rax,QWORD PTR [rsp+0xe8]
  406ebd:	xor    rax,QWORD PTR fs:0x28
  406ec6:	jne    406f5e <__flatcc_fb_codegen_c@@Base+0x50e>
  406ecc:	add    rsp,0xf0
  406ed3:	pop    rbx
  406ed4:	pop    rbp
  406ed5:	pop    r12
  406ed7:	ret    
  406ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  406ee0:	mov    rcx,rbx
  406ee3:	lea    rdx,[rip+0x274de]        # 42e3c8 <_IO_stdin_used@@Base+0x13c8>
  406eea:	mov    esi,0x1
  406eef:	xor    eax,eax
  406ef1:	call   4053e0 <__fprintf_chk@plt>
  406ef6:	jmp    406e35 <__flatcc_fb_codegen_c@@Base+0x3e5>
  406efb:	nop    DWORD PTR [rax+rax*1+0x0]
  406f00:	mov    r8,rbx
  406f03:	mov    rcx,rbx
  406f06:	lea    rdx,[rip+0x2757b]        # 42e488 <_IO_stdin_used@@Base+0x1488>
  406f0d:	mov    esi,0x1
  406f12:	xor    eax,eax
  406f14:	call   4053e0 <__fprintf_chk@plt>
  406f19:	mov    rdi,QWORD PTR [rbp+0xd0]
  406f20:	mov    r8,rbx
  406f23:	mov    rcx,rbp
  406f26:	lea    rdx,[rip+0x2758b]        # 42e4b8 <_IO_stdin_used@@Base+0x14b8>
  406f2d:	mov    esi,0x1
  406f32:	xor    eax,eax
  406f34:	call   4053e0 <__fprintf_chk@plt>
  406f39:	mov    rdi,QWORD PTR [rbp+0xd0]
  406f40:	mov    r8,rbx
  406f43:	mov    rcx,rbp
  406f46:	lea    rdx,[rip+0x27593]        # 42e4e0 <_IO_stdin_used@@Base+0x14e0>
  406f4d:	mov    esi,0x1
  406f52:	xor    eax,eax
  406f54:	call   4053e0 <__fprintf_chk@plt>
  406f59:	jmp    406eb5 <__flatcc_fb_codegen_c@@Base+0x465>
  406f5e:	call   4052c0 <__stack_chk_fail@plt>
  406f63:	lea    rcx,[rip+0x2f136]        # 4360a0 <_IO_stdin_used@@Base+0x90a0>
  406f6a:	mov    edx,0x35f
  406f6f:	lea    rsi,[rip+0x2739a]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  406f76:	lea    rdi,[rip+0x27403]        # 42e380 <_IO_stdin_used@@Base+0x1380>
  406f7d:	call   4052e0 <__assert_fail@plt>
  406f82:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  406f8d:	nop    DWORD PTR [rax]
  406f90:	push   r15
  406f92:	mov    rax,rsi
  406f95:	push   r14
  406f97:	push   r13
  406f99:	push   r12
  406f9b:	push   rbp
  406f9c:	push   rbx
  406f9d:	sub    rsp,0x478
  406fa4:	mov    QWORD PTR [rsp+0x28],rsi
  406fa9:	mov    rsi,QWORD PTR fs:0x28
  406fb2:	mov    QWORD PTR [rsp+0x468],rsi
  406fba:	xor    esi,esi
  406fbc:	cmp    WORD PTR [rax+0x10],0x0
  406fc1:	jne    408c4b <__flatcc_fb_codegen_c@@Base+0x21fb>
  406fc7:	lea    r15,[rsp+0x40]
  406fcc:	xor    eax,eax
  406fce:	lea    rsi,[rsp+0x130]
  406fd6:	mov    rbp,rdi
  406fd9:	mov    ecx,0x1d
  406fde:	mov    rdi,r15
  406fe1:	rep stos QWORD PTR es:[rdi],rax
  406fe4:	mov    rdi,rsi
  406fe7:	mov    ecx,0x1d
  406fec:	rep stos QWORD PTR es:[rdi],rax
  406fef:	mov    rdi,QWORD PTR [rbp+0xd0]
  406ff6:	mov    QWORD PTR [rsp+0x10],rsi
  406ffb:	lea    rdx,[rip+0x3e11b]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  407002:	mov    esi,0x1
  407007:	call   4053e0 <__fprintf_chk@plt>
  40700c:	mov    rbx,QWORD PTR [rsp+0x28]
  407011:	mov    rdx,r15
  407014:	mov    rdi,QWORD PTR [rbx+0x18]
  407018:	mov    rsi,rbx
  40701b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  407020:	mov    rbx,QWORD PTR [rbx+0x40]
  407024:	test   rbx,rbx
  407027:	je     4070bf <__flatcc_fb_codegen_c@@Base+0x66f>
  40702d:	mov    ecx,0x1
  407032:	xor    edx,edx
  407034:	nop    DWORD PTR [rax+0x0]
  407038:	mov    rax,QWORD PTR [rbx+0x8]
  40703c:	mov    rdi,QWORD PTR [rbp+0xd0]
  407043:	cmp    QWORD PTR [rax+0x10],rdx
  407047:	je     407079 <__flatcc_fb_codegen_c@@Base+0x629>
  407049:	test   ecx,ecx
  40704b:	lea    rdx,[rip+0x2eaf8]        # 435b4a <_IO_stdin_used@@Base+0x8b4a>
  407052:	lea    rcx,[rip+0x3e0c5]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  407059:	jne    407062 <__flatcc_fb_codegen_c@@Base+0x612>
  40705b:	lea    rdx,[rip+0x2eaef]        # 435b51 <_IO_stdin_used@@Base+0x8b51>
  407062:	mov    esi,0x1
  407067:	xor    eax,eax
  407069:	call   4053e0 <__fprintf_chk@plt>
  40706e:	mov    rax,QWORD PTR [rbx+0x8]
  407072:	mov    rdi,QWORD PTR [rbp+0xd0]
  407079:	mov    rcx,QWORD PTR [rax+0x8]
  40707d:	mov    r8,QWORD PTR [rax]
  407080:	lea    rdx,[rip+0x2faa2]        # 436b29 <_IO_stdin_used@@Base+0x9b29>
  407087:	mov    esi,0x1
  40708c:	xor    eax,eax
  40708e:	call   4053e0 <__fprintf_chk@plt>
  407093:	mov    rax,QWORD PTR [rbx+0x8]
  407097:	mov    rbx,QWORD PTR [rbx]
  40709a:	mov    rdx,QWORD PTR [rax+0x10]
  40709e:	xor    ecx,ecx
  4070a0:	test   rbx,rbx
  4070a3:	jne    407038 <__flatcc_fb_codegen_c@@Base+0x5e8>
  4070a5:	mov    rdi,QWORD PTR [rbp+0xd0]
  4070ac:	lea    rdx,[rip+0x2ec7c]        # 435d2f <_IO_stdin_used@@Base+0x8d2f>
  4070b3:	mov    esi,0x1
  4070b8:	xor    eax,eax
  4070ba:	call   4053e0 <__fprintf_chk@plt>
  4070bf:	mov    rdi,QWORD PTR [rbp+0xd0]
  4070c6:	mov    rcx,r15
  4070c9:	lea    rdx,[rip+0x27458]        # 42e528 <_IO_stdin_used@@Base+0x1528>
  4070d0:	mov    esi,0x1
  4070d5:	xor    eax,eax
  4070d7:	call   4053e0 <__fprintf_chk@plt>
  4070dc:	mov    rdi,QWORD PTR [rbp+0xd0]
  4070e3:	mov    r8,r15
  4070e6:	mov    rcx,r15
  4070e9:	mov    r9,rbp
  4070ec:	lea    rdx,[rip+0x27465]        # 42e558 <_IO_stdin_used@@Base+0x1558>
  4070f3:	mov    esi,0x1
  4070f8:	xor    eax,eax
  4070fa:	call   4053e0 <__fprintf_chk@plt>
  4070ff:	mov    rdi,QWORD PTR [rbp+0xd0]
  407106:	push   r15
  407108:	mov    r9,r15
  40710b:	mov    r8,r15
  40710e:	push   rbp
  40710f:	mov    rcx,r15
  407112:	lea    rdx,[rip+0x2747f]        # 42e598 <_IO_stdin_used@@Base+0x1598>
  407119:	mov    esi,0x1
  40711e:	xor    eax,eax
  407120:	call   4053e0 <__fprintf_chk@plt>
  407125:	mov    rdi,QWORD PTR [rbp+0xd0]
  40712c:	mov    r8,r15
  40712f:	mov    rcx,rbp
  407132:	lea    rdx,[rip+0x2ea1f]        # 435b58 <_IO_stdin_used@@Base+0x8b58>
  407139:	mov    esi,0x1
  40713e:	xor    eax,eax
  407140:	call   4053e0 <__fprintf_chk@plt>
  407145:	mov    rdi,QWORD PTR [rbp+0xd0]
  40714c:	lea    rdx,[rip+0x3dfca]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  407153:	mov    esi,0x1
  407158:	xor    eax,eax
  40715a:	call   4053e0 <__fprintf_chk@plt>
  40715f:	mov    rax,QWORD PTR [rsp+0x38]
  407164:	pop    rdx
  407165:	mov    rbx,QWORD PTR [rax+0x28]
  407169:	pop    rcx
  40716a:	mov    r14,r15
  40716d:	mov    DWORD PTR [rsp+0x24],0x0
  407175:	lea    r15,[rip+0x2ebe4]        # 435d60 <_IO_stdin_used@@Base+0x8d60>
  40717c:	test   rbx,rbx
  40717f:	je     407321 <__flatcc_fb_codegen_c@@Base+0x8d1>
  407185:	nop    DWORD PTR [rax]
  407188:	mov    r12,QWORD PTR [rbx+0x68]
  40718c:	test   r12,r12
  40718f:	je     40722b <__flatcc_fb_codegen_c@@Base+0x7db>
  407195:	mov    ecx,0x1
  40719a:	xor    edx,edx
  40719c:	nop    DWORD PTR [rax+0x0]
  4071a0:	mov    rax,QWORD PTR [r12+0x8]
  4071a5:	mov    rdi,QWORD PTR [rbp+0xd0]
  4071ac:	cmp    QWORD PTR [rax+0x10],rdx
  4071b0:	je     4071e3 <__flatcc_fb_codegen_c@@Base+0x793>
  4071b2:	test   ecx,ecx
  4071b4:	lea    rdx,[rip+0x2e98f]        # 435b4a <_IO_stdin_used@@Base+0x8b4a>
  4071bb:	lea    rcx,[rip+0x3df5c]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4071c2:	jne    4071cb <__flatcc_fb_codegen_c@@Base+0x77b>
  4071c4:	lea    rdx,[rip+0x2e986]        # 435b51 <_IO_stdin_used@@Base+0x8b51>
  4071cb:	mov    esi,0x1
  4071d0:	xor    eax,eax
  4071d2:	call   4053e0 <__fprintf_chk@plt>
  4071d7:	mov    rax,QWORD PTR [r12+0x8]
  4071dc:	mov    rdi,QWORD PTR [rbp+0xd0]
  4071e3:	mov    rcx,QWORD PTR [rax+0x8]
  4071e7:	mov    r8,QWORD PTR [rax]
  4071ea:	lea    rdx,[rip+0x2f938]        # 436b29 <_IO_stdin_used@@Base+0x9b29>
  4071f1:	mov    esi,0x1
  4071f6:	xor    eax,eax
  4071f8:	call   4053e0 <__fprintf_chk@plt>
  4071fd:	mov    rax,QWORD PTR [r12+0x8]
  407202:	mov    r12,QWORD PTR [r12]
  407206:	mov    rdx,QWORD PTR [rax+0x10]
  40720a:	xor    ecx,ecx
  40720c:	test   r12,r12
  40720f:	jne    4071a0 <__flatcc_fb_codegen_c@@Base+0x750>
  407211:	mov    rdi,QWORD PTR [rbp+0xd0]
  407218:	lea    rdx,[rip+0x2eb10]        # 435d2f <_IO_stdin_used@@Base+0x8d2f>
  40721f:	mov    esi,0x1
  407224:	xor    eax,eax
  407226:	call   4053e0 <__fprintf_chk@plt>
  40722b:	mov    rax,QWORD PTR [rbx+0x8]
  40722f:	movzx  ecx,WORD PTR [rbx+0x70]
  407233:	mov    r12,QWORD PTR [rax]
  407236:	mov    r13,QWORD PTR [rax+0x8]
  40723a:	test   cl,0x4
  40723d:	jne    407da8 <__flatcc_fb_codegen_c@@Base+0x1358>
  407243:	movzx  eax,WORD PTR [rbx+0x28]
  407247:	movzx  ecx,ch
  40724a:	sub    eax,0x7
  40724d:	and    ecx,0x1
  407250:	cmp    ax,0x8
  407254:	ja     4089ac <__flatcc_fb_codegen_c@@Base+0x1f5c>
  40725a:	movzx  eax,ax
  40725d:	movsxd rax,DWORD PTR [r15+rax*4]
  407261:	add    rax,r15
  407264:	notrack jmp rax
  407267:	nop    WORD PTR [rax+rax*1+0x0]
  407270:	mov    rsi,QWORD PTR [rbx+0x18]
  407274:	mov    rdx,QWORD PTR [rsp+0x10]
  407279:	mov    rdi,QWORD PTR [rsi+0x18]
  40727d:	mov    DWORD PTR [rsp+0x8],ecx
  407281:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  407286:	mov    rax,QWORD PTR [rbx+0x18]
  40728a:	movzx  eax,WORD PTR [rax+0x10]
  40728e:	cmp    ax,0x4
  407292:	ja     408a94 <__flatcc_fb_codegen_c@@Base+0x2044>
  407298:	mov    edx,0x1
  40729d:	shlx   rdx,rdx,rax
  4072a2:	and    edx,0x1b
  4072a5:	mov    ecx,DWORD PTR [rsp+0x8]
  4072a9:	je     408a94 <__flatcc_fb_codegen_c@@Base+0x2044>
  4072af:	mov    r8,QWORD PTR [rbx+0x88]
  4072b6:	mov    rdi,QWORD PTR [rbp+0xd0]
  4072bd:	cmp    ax,0x4
  4072c1:	je     407ee8 <__flatcc_fb_codegen_c@@Base+0x1498>
  4072c7:	push   rcx
  4072c8:	mov    r9,r14
  4072cb:	mov    rcx,rbp
  4072ce:	push   QWORD PTR [rsp+0x18]
  4072d2:	lea    rdx,[rip+0x279ff]        # 42ecd8 <_IO_stdin_used@@Base+0x1cd8>
  4072d9:	push   r12
  4072db:	push   r13
  4072dd:	mov    esi,0x1
  4072e2:	xor    eax,eax
  4072e4:	call   4053e0 <__fprintf_chk@plt>
  4072e9:	add    rsp,0x20
  4072ed:	test   BYTE PTR [rbx+0x70],0x80
  4072f1:	je     407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4072f3:	mov    rdi,QWORD PTR [rbp+0xd0]
  4072fa:	lea    rdx,[rip+0x27a57]        # 42ed58 <_IO_stdin_used@@Base+0x1d58>
  407301:	mov    esi,0x1
  407306:	xor    eax,eax
  407308:	call   4053e0 <__fprintf_chk@plt>
  40730d:	mov    DWORD PTR [rsp+0x24],0x1
  407315:	mov    rbx,QWORD PTR [rbx]
  407318:	test   rbx,rbx
  40731b:	jne    407188 <__flatcc_fb_codegen_c@@Base+0x738>
  407321:	mov    rax,QWORD PTR [rsp+0x468]
  407329:	xor    rax,QWORD PTR fs:0x28
  407332:	jne    408cec <__flatcc_fb_codegen_c@@Base+0x229c>
  407338:	add    rsp,0x478
  40733f:	pop    rbx
  407340:	pop    rbp
  407341:	pop    r12
  407343:	pop    r13
  407345:	pop    r14
  407347:	pop    r15
  407349:	ret    
  40734a:	nop    WORD PTR [rax+rax*1+0x0]
  407350:	mov    rsi,QWORD PTR [rbx+0x18]
  407354:	mov    rdx,QWORD PTR [rsp+0x10]
  407359:	mov    rdi,QWORD PTR [rsi+0x18]
  40735d:	mov    DWORD PTR [rsp+0x8],ecx
  407361:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  407366:	mov    rdx,QWORD PTR [rbx+0x18]
  40736a:	mov    ecx,DWORD PTR [rsp+0x8]
  40736e:	movzx  eax,WORD PTR [rdx+0x10]
  407372:	cmp    ax,0x1
  407376:	je     408148 <__flatcc_fb_codegen_c@@Base+0x16f8>
  40737c:	test   ax,ax
  40737f:	je     408118 <__flatcc_fb_codegen_c@@Base+0x16c8>
  407385:	cmp    ax,0x3
  407389:	jne    407dd0 <__flatcc_fb_codegen_c@@Base+0x1380>
  40738f:	movzx  eax,WORD PTR [rbx+0x58]
  407393:	mov    edx,DWORD PTR [rdx+0x48]
  407396:	cmp    ax,0x4
  40739a:	je     408448 <__flatcc_fb_codegen_c@@Base+0x19f8>
  4073a0:	jbe    407f10 <__flatcc_fb_codegen_c@@Base+0x14c0>
  4073a6:	cmp    ax,0x5
  4073aa:	jne    4080f0 <__flatcc_fb_codegen_c@@Base+0x16a0>
  4073b0:	cmp    edx,0x9
  4073b3:	ja     408371 <__flatcc_fb_codegen_c@@Base+0x1921>
  4073b9:	lea    rcx,[rip+0x2e9c4]        # 435d84 <_IO_stdin_used@@Base+0x8d84>
  4073c0:	movsxd rax,DWORD PTR [rcx+rdx*4]
  4073c4:	add    rax,rcx
  4073c7:	notrack jmp rax
  4073ca:	nop    WORD PTR [rax+rax*1+0x0]
  4073d0:	mov    eax,DWORD PTR [rbx+0x18]
  4073d3:	cmp    eax,0x5
  4073d6:	je     407e48 <__flatcc_fb_codegen_c@@Base+0x13f8>
  4073dc:	cmp    eax,0xb
  4073df:	ja     408b3e <__flatcc_fb_codegen_c@@Base+0x20ee>
  4073e5:	lea    rsi,[rip+0x2e9c0]        # 435dac <_IO_stdin_used@@Base+0x8dac>
  4073ec:	mov    ecx,eax
  4073ee:	movsxd rdx,DWORD PTR [rsi+rcx*4]
  4073f2:	add    rdx,rsi
  4073f5:	notrack jmp rdx
  4073f8:	nop    DWORD PTR [rax+rax*1+0x0]
  407400:	cmp    DWORD PTR [rbx+0x18],0xb
  407404:	ja     408a44 <__flatcc_fb_codegen_c@@Base+0x1ff4>
  40740a:	mov    eax,DWORD PTR [rbx+0x18]
  40740d:	lea    rdx,[rip+0x2e9c8]        # 435ddc <_IO_stdin_used@@Base+0x8ddc>
  407414:	movsxd rax,DWORD PTR [rdx+rax*4]
  407418:	add    rax,rdx
  40741b:	notrack jmp rax
  40741e:	xchg   ax,ax
  407420:	sub    rsp,0x8
  407424:	mov    r8,QWORD PTR [rbx+0x88]
  40742b:	mov    rdi,QWORD PTR [rbp+0xd0]
  407432:	push   rcx
  407433:	mov    r9,r14
  407436:	mov    rcx,rbp
  407439:	push   r12
  40743b:	lea    rdx,[rip+0x27496]        # 42e8d8 <_IO_stdin_used@@Base+0x18d8>
  407442:	mov    esi,0x1
  407447:	push   r13
  407449:	xor    eax,eax
  40744b:	call   4053e0 <__fprintf_chk@plt>
  407450:	mov    rax,QWORD PTR [rbp+0xe0]
  407457:	add    rsp,0x20
  40745b:	mov    eax,DWORD PTR [rax+0x24]
  40745e:	test   eax,eax
  407460:	jne    407498 <__flatcc_fb_codegen_c@@Base+0xa48>
  407462:	test   BYTE PTR [rbx+0x70],0x80
  407466:	je     407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  40746c:	sub    rsp,0x8
  407470:	mov    rdi,QWORD PTR [rbp+0xd0]
  407477:	push   r12
  407479:	mov    r9d,r13d
  40747c:	mov    r8,r14
  40747f:	mov    rcx,rbp
  407482:	lea    rdx,[rip+0x2747f]        # 42e908 <_IO_stdin_used@@Base+0x1908>
  407489:	mov    esi,0x1
  40748e:	xor    eax,eax
  407490:	call   4053e0 <__fprintf_chk@plt>
  407495:	pop    r11
  407497:	pop    rax
  407498:	test   BYTE PTR [rbx+0x70],0x80
  40749c:	je     407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4074a2:	mov    r10d,DWORD PTR [rsp+0x24]
  4074a7:	mov    rdi,QWORD PTR [rbp+0xd0]
  4074ae:	test   r10d,r10d
  4074b1:	jne    408178 <__flatcc_fb_codegen_c@@Base+0x1728>
  4074b7:	sub    rsp,0x8
  4074bb:	push   r12
  4074bd:	mov    r8,r14
  4074c0:	mov    esi,0x1
  4074c5:	mov    r9d,r13d
  4074c8:	mov    rcx,rbp
  4074cb:	lea    rdx,[rip+0x27466]        # 42e938 <_IO_stdin_used@@Base+0x1938>
  4074d2:	xor    eax,eax
  4074d4:	call   4053e0 <__fprintf_chk@plt>
  4074d9:	mov    rax,QWORD PTR [rbp+0xe0]
  4074e0:	pop    rsi
  4074e1:	mov    r8d,DWORD PTR [rax+0xa8]
  4074e8:	pop    rdi
  4074e9:	test   r8d,r8d
  4074ec:	je     407520 <__flatcc_fb_codegen_c@@Base+0xad0>
  4074ee:	mov    rdi,QWORD PTR [rbp+0xd0]
  4074f5:	push   r8
  4074f7:	mov    r9d,r13d
  4074fa:	mov    r8,r14
  4074fd:	push   r12
  4074ff:	mov    rcx,rbp
  407502:	lea    rdx,[rip+0x278e7]        # 42edf0 <_IO_stdin_used@@Base+0x1df0>
  407509:	mov    esi,0x1
  40750e:	xor    eax,eax
  407510:	call   4053e0 <__fprintf_chk@plt>
  407515:	pop    r9
  407517:	pop    r10
  407519:	nop    DWORD PTR [rax+0x0]
  407520:	sub    rsp,0x8
  407524:	mov    rdi,QWORD PTR [rbp+0xd0]
  40752b:	push   r12
  40752d:	mov    r9d,r13d
  407530:	mov    r8,r14
  407533:	mov    rcx,rbp
  407536:	lea    rdx,[rip+0x2742b]        # 42e968 <_IO_stdin_used@@Base+0x1968>
  40753d:	mov    esi,0x1
  407542:	xor    eax,eax
  407544:	call   4053e0 <__fprintf_chk@plt>
  407549:	mov    rdi,QWORD PTR [rbp+0xd0]
  407550:	mov    rcx,rbp
  407553:	lea    rdx,[rip+0x27446]        # 42e9a0 <_IO_stdin_used@@Base+0x19a0>
  40755a:	mov    esi,0x1
  40755f:	mov    r9d,r13d
  407562:	mov    r8,r14
  407565:	xor    eax,eax
  407567:	mov    QWORD PTR [rsp],r12
  40756b:	call   4053e0 <__fprintf_chk@plt>
  407570:	mov    rax,QWORD PTR [rbp+0xe0]
  407577:	pop    rdx
  407578:	mov    esi,DWORD PTR [rax+0xa8]
  40757e:	pop    rcx
  40757f:	test   esi,esi
  407581:	je     40730d <__flatcc_fb_codegen_c@@Base+0x8bd>
  407587:	sub    rsp,0x8
  40758b:	mov    rdi,QWORD PTR [rbp+0xd0]
  407592:	push   r12
  407594:	mov    r9d,r13d
  407597:	mov    r8,r14
  40759a:	mov    rcx,r14
  40759d:	lea    rdx,[rip+0x27244]        # 42e7e8 <_IO_stdin_used@@Base+0x17e8>
  4075a4:	mov    esi,0x1
  4075a9:	xor    eax,eax
  4075ab:	call   4053e0 <__fprintf_chk@plt>
  4075b0:	pop    r10
  4075b2:	pop    r11
  4075b4:	mov    DWORD PTR [rsp+0x24],0x1
  4075bc:	jmp    407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4075c1:	nop    DWORD PTR [rax+0x0]
  4075c8:	mov    r8,QWORD PTR [rbx+0x88]
  4075cf:	mov    rdi,QWORD PTR [rbp+0xd0]
  4075d6:	push   rcx
  4075d7:	mov    r9,r14
  4075da:	mov    rcx,rbp
  4075dd:	push   rbp
  4075de:	lea    rdx,[rip+0x273f3]        # 42e9d8 <_IO_stdin_used@@Base+0x19d8>
  4075e5:	push   r12
  4075e7:	push   r13
  4075e9:	jmp    4072dd <__flatcc_fb_codegen_c@@Base+0x88d>
  4075ee:	xchg   ax,ax
  4075f0:	lea    rax,[rip+0x2e52d]        # 435b24 <_IO_stdin_used@@Base+0x8b24>
  4075f7:	nop    WORD PTR [rax+rax*1+0x0]
  407600:	sub    rsp,0x8
  407604:	mov    r8,QWORD PTR [rbx+0x88]
  40760b:	mov    rdi,QWORD PTR [rbp+0xd0]
  407612:	push   rcx
  407613:	mov    esi,0x1
  407618:	mov    r9,r14
  40761b:	push   rax
  40761c:	mov    rcx,rbp
  40761f:	lea    rdx,[rip+0x271f2]        # 42e818 <_IO_stdin_used@@Base+0x1818>
  407626:	push   rbp
  407627:	xor    eax,eax
  407629:	push   r12
  40762b:	push   r13
  40762d:	call   4053e0 <__fprintf_chk@plt>
  407632:	mov    rsi,QWORD PTR [rbx+0x90]
  407639:	add    rsp,0x30
  40763d:	test   rsi,rsi
  407640:	jne    4076b8 <__flatcc_fb_codegen_c@@Base+0xc68>
  407642:	test   BYTE PTR [rbx+0x70],0x80
  407646:	je     407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  40764c:	jmp    4072f3 <__flatcc_fb_codegen_c@@Base+0x8a3>
  407651:	nop    DWORD PTR [rax+0x0]
  407658:	lea    rax,[rip+0x2e4d1]        # 435b30 <_IO_stdin_used@@Base+0x8b30>
  40765f:	jmp    407600 <__flatcc_fb_codegen_c@@Base+0xbb0>
  407661:	nop    DWORD PTR [rax+0x0]
  407668:	sub    rsp,0x8
  40766c:	mov    r8,QWORD PTR [rbx+0x88]
  407673:	mov    rdi,QWORD PTR [rbp+0xd0]
  40767a:	push   rcx
  40767b:	lea    rax,[rip+0x2e50e]        # 435b90 <_IO_stdin_used@@Base+0x8b90>
  407682:	mov    esi,0x1
  407687:	push   rax
  407688:	mov    r9,r14
  40768b:	mov    rcx,rbp
  40768e:	push   rbp
  40768f:	lea    rdx,[rip+0x27182]        # 42e818 <_IO_stdin_used@@Base+0x1818>
  407696:	xor    eax,eax
  407698:	push   r12
  40769a:	push   r13
  40769c:	call   4053e0 <__fprintf_chk@plt>
  4076a1:	mov    rsi,QWORD PTR [rbx+0x90]
  4076a8:	add    rsp,0x30
  4076ac:	test   rsi,rsi
  4076af:	je     407642 <__flatcc_fb_codegen_c@@Base+0xbf2>
  4076b1:	nop    DWORD PTR [rax+0x0]
  4076b8:	lea    r12,[rsp+0x220]
  4076c0:	xor    eax,eax
  4076c2:	mov    ecx,0x1d
  4076c7:	mov    rdi,r12
  4076ca:	lea    r13,[rsp+0x310]
  4076d2:	rep stos QWORD PTR es:[rdi],rax
  4076d5:	mov    ecx,0x1d
  4076da:	mov    rdi,r13
  4076dd:	rep stos QWORD PTR es:[rdi],rax
  4076e0:	movzx  eax,WORD PTR [rsi+0x10]
  4076e4:	test   ax,ax
  4076e7:	jne    407e28 <__flatcc_fb_codegen_c@@Base+0x13d8>
  4076ed:	lea    rax,[rip+0x2e3fd]        # 435af1 <_IO_stdin_used@@Base+0x8af1>
  4076f4:	mov    QWORD PTR [rsp+0x8],rax
  4076f9:	mov    rdi,QWORD PTR [rsi+0x18]
  4076fd:	mov    rdx,r12
  407700:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  407705:	mov    rax,QWORD PTR [rsp+0x28]
  40770a:	cmp    WORD PTR [rax+0x10],0x0
  40770f:	jne    408c08 <__flatcc_fb_codegen_c@@Base+0x21b8>
  407715:	mov    rsi,QWORD PTR [rsp+0x28]
  40771a:	mov    rdx,r13
  40771d:	mov    rdi,QWORD PTR [rsi+0x18]
  407721:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  407726:	mov    rax,QWORD PTR [rbx+0x8]
  40772a:	sub    rsp,0x8
  40772e:	mov    r9,QWORD PTR [rax+0x8]
  407732:	mov    rdi,QWORD PTR [rbp+0xd0]
  407739:	push   QWORD PTR [rsp+0x10]
  40773d:	mov    r8,r13
  407740:	mov    rcx,rbp
  407743:	push   r12
  407745:	lea    rdx,[rip+0x2715c]        # 42e8a8 <_IO_stdin_used@@Base+0x18a8>
  40774c:	mov    esi,0x1
  407751:	push   QWORD PTR [rax]
  407753:	xor    eax,eax
  407755:	call   4053e0 <__fprintf_chk@plt>
  40775a:	add    rsp,0x20
  40775e:	test   BYTE PTR [rbx+0x70],0x80
  407762:	jne    4072f3 <__flatcc_fb_codegen_c@@Base+0x8a3>
  407768:	jmp    407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  40776d:	nop    DWORD PTR [rax]
  407770:	lea    rax,[rip+0x2e3c6]        # 435b3d <_IO_stdin_used@@Base+0x8b3d>
  407777:	jmp    407600 <__flatcc_fb_codegen_c@@Base+0xbb0>
  40777c:	nop    DWORD PTR [rax+0x0]
  407780:	movzx  edx,WORD PTR [rbx+0x58]
  407784:	cmp    dx,0x4
  407788:	je     4086db <__flatcc_fb_codegen_c@@Base+0x1c8b>
  40778e:	jbe    407c74 <__flatcc_fb_codegen_c@@Base+0x1224>
  407794:	cmp    dx,0x5
  407798:	je     408380 <__flatcc_fb_codegen_c@@Base+0x1930>
  40779e:	cmp    dx,0x6
  4077a2:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  4077a8:	lea    rsi,[rip+0x2e318]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  4077af:	mov    QWORD PTR [rsp+0x8],rsi
  4077b4:	mov    r10,rsi
  4077b7:	jmp    407b87 <__flatcc_fb_codegen_c@@Base+0x1137>
  4077bc:	nop    DWORD PTR [rax+0x0]
  4077c0:	movzx  edx,WORD PTR [rbx+0x58]
  4077c4:	cmp    dx,0x4
  4077c8:	je     4086b0 <__flatcc_fb_codegen_c@@Base+0x1c60>
  4077ce:	jbe    407c04 <__flatcc_fb_codegen_c@@Base+0x11b4>
  4077d4:	cmp    dx,0x5
  4077d8:	je     408346 <__flatcc_fb_codegen_c@@Base+0x18f6>
  4077de:	cmp    dx,0x6
  4077e2:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  4077e8:	lea    rsi,[rip+0x2e2cb]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  4077ef:	mov    QWORD PTR [rsp+0x8],rsi
  4077f4:	lea    r10,[rip+0x2e2c7]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  4077fb:	jmp    407b87 <__flatcc_fb_codegen_c@@Base+0x1137>
  407800:	movzx  edx,WORD PTR [rbx+0x58]
  407804:	cmp    dx,0x4
  407808:	je     408765 <__flatcc_fb_codegen_c@@Base+0x1d15>
  40780e:	jbe    407d14 <__flatcc_fb_codegen_c@@Base+0x12c4>
  407814:	cmp    dx,0x5
  407818:	je     4083dc <__flatcc_fb_codegen_c@@Base+0x198c>
  40781e:	cmp    dx,0x6
  407822:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407828:	lea    rax,[rip+0x2e25f]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40782f:	mov    QWORD PTR [rsp+0x8],rax
  407834:	lea    r10,[rip+0x2e25c]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40783b:	lea    rax,[rip+0x3d8dc]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  407842:	mov    QWORD PTR [rsp+0x18],rax
  407847:	lea    r8,[rip+0x2e292]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  40784e:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  407853:	nop    DWORD PTR [rax+rax*1+0x0]
  407858:	movzx  edx,WORD PTR [rbx+0x58]
  40785c:	cmp    dx,0x4
  407860:	je     408789 <__flatcc_fb_codegen_c@@Base+0x1d39>
  407866:	jbe    407cd6 <__flatcc_fb_codegen_c@@Base+0x1286>
  40786c:	cmp    dx,0x5
  407870:	je     408424 <__flatcc_fb_codegen_c@@Base+0x19d4>
  407876:	cmp    dx,0x6
  40787a:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407880:	lea    rax,[rip+0x2e1f1]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  407887:	mov    QWORD PTR [rsp+0x8],rax
  40788c:	lea    r10,[rip+0x2e1ee]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  407893:	lea    rax,[rip+0x3d884]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40789a:	mov    QWORD PTR [rsp+0x18],rax
  40789f:	lea    r8,[rip+0x2e229]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  4078a6:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  4078ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4078b0:	movzx  edx,WORD PTR [rbx+0x58]
  4078b4:	cmp    dx,0x4
  4078b8:	je     40871d <__flatcc_fb_codegen_c@@Base+0x1ccd>
  4078be:	jbe    407cf5 <__flatcc_fb_codegen_c@@Base+0x12a5>
  4078c4:	cmp    dx,0x5
  4078c8:	je     408400 <__flatcc_fb_codegen_c@@Base+0x19b0>
  4078ce:	cmp    dx,0x6
  4078d2:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  4078d8:	lea    rax,[rip+0x2e1bf]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  4078df:	mov    QWORD PTR [rsp+0x8],rax
  4078e4:	lea    r10,[rip+0x2e1bc]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  4078eb:	lea    rax,[rip+0x3d82c]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4078f2:	mov    QWORD PTR [rsp+0x18],rax
  4078f7:	lea    r8,[rip+0x2e1eb]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  4078fe:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  407900:	movzx  edx,WORD PTR [rbx+0x58]
  407904:	cmp    dx,0x4
  407908:	je     408741 <__flatcc_fb_codegen_c@@Base+0x1cf1>
  40790e:	jbe    407c9f <__flatcc_fb_codegen_c@@Base+0x124f>
  407914:	cmp    dx,0x5
  407918:	je     4083bb <__flatcc_fb_codegen_c@@Base+0x196b>
  40791e:	cmp    dx,0x6
  407922:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407928:	lea    rax,[rip+0x2e148]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40792f:	mov    QWORD PTR [rsp+0x8],rax
  407934:	lea    rax,[rip+0x3d7e3]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40793b:	mov    QWORD PTR [rsp+0x18],rax
  407940:	lea    r10,[rip+0x2e139]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  407947:	lea    r8,[rip+0x2e180]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  40794e:	xchg   ax,ax
  407950:	lea    r11,[rsp+0x400]
  407958:	movzx  r9d,BYTE PTR [rbx+0x48]
  40795d:	mov    rdi,r11
  407960:	lea    rcx,[rip+0x2e21a]        # 435b81 <_IO_stdin_used@@Base+0x8b81>
  407967:	mov    edx,0x64
  40796c:	mov    esi,0x1
  407971:	xor    eax,eax
  407973:	mov    QWORD PTR [rsp+0x38],r10
  407978:	mov    QWORD PTR [rsp+0x30],r11
  40797d:	call   405400 <__sprintf_chk@plt>
  407982:	mov    r11,QWORD PTR [rsp+0x30]
  407987:	mov    r10,QWORD PTR [rsp+0x38]
  40798c:	sub    rsp,0x8
  407990:	mov    r8,QWORD PTR [rbx+0x88]
  407997:	mov    rdi,QWORD PTR [rbp+0xd0]
  40799e:	push   r11
  4079a0:	mov    r9,r14
  4079a3:	mov    rcx,rbp
  4079a6:	push   QWORD PTR [rsp+0x18]
  4079aa:	lea    rdx,[rip+0x26c7f]        # 42e630 <_IO_stdin_used@@Base+0x1630>
  4079b1:	mov    esi,0x1
  4079b6:	push   QWORD PTR [rsp+0x30]
  4079ba:	xor    eax,eax
  4079bc:	push   r10
  4079be:	push   rbp
  4079bf:	push   r12
  4079c1:	push   r13
  4079c3:	call   4053e0 <__fprintf_chk@plt>
  4079c8:	mov    rax,QWORD PTR [rbp+0xe0]
  4079cf:	add    rsp,0x40
  4079d3:	mov    eax,DWORD PTR [rax+0x24]
  4079d6:	test   eax,eax
  4079d8:	jne    407a19 <__flatcc_fb_codegen_c@@Base+0xfc9>
  4079da:	test   BYTE PTR [rbx+0x70],0x80
  4079de:	je     407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4079e4:	sub    rsp,0x8
  4079e8:	mov    rdi,QWORD PTR [rbp+0xd0]
  4079ef:	push   QWORD PTR [rsp+0x10]
  4079f3:	mov    r9d,r13d
  4079f6:	mov    r8,r14
  4079f9:	push   QWORD PTR [rsp+0x28]
  4079fd:	mov    rcx,rbp
  407a00:	lea    rdx,[rip+0x26c69]        # 42e670 <_IO_stdin_used@@Base+0x1670>
  407a07:	push   r12
  407a09:	mov    esi,0x1
  407a0e:	xor    eax,eax
  407a10:	call   4053e0 <__fprintf_chk@plt>
  407a15:	add    rsp,0x20
  407a19:	test   BYTE PTR [rbx+0x70],0x80
  407a1d:	je     407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  407a23:	mov    eax,DWORD PTR [rsp+0x24]
  407a27:	mov    rdi,QWORD PTR [rbp+0xd0]
  407a2e:	test   eax,eax
  407a30:	jne    408200 <__flatcc_fb_codegen_c@@Base+0x17b0>
  407a36:	lea    rdx,[rip+0x26cb3]        # 42e6f0 <_IO_stdin_used@@Base+0x16f0>
  407a3d:	mov    esi,0x1
  407a42:	xor    eax,eax
  407a44:	call   4053e0 <__fprintf_chk@plt>
  407a49:	sub    rsp,0x8
  407a4d:	mov    rdi,QWORD PTR [rbp+0xd0]
  407a54:	push   QWORD PTR [rsp+0x10]
  407a58:	mov    r9d,r13d
  407a5b:	mov    r8,r14
  407a5e:	push   QWORD PTR [rsp+0x28]
  407a62:	mov    rcx,rbp
  407a65:	lea    rdx,[rip+0x26cc4]        # 42e730 <_IO_stdin_used@@Base+0x1730>
  407a6c:	push   r12
  407a6e:	mov    esi,0x1
  407a73:	xor    eax,eax
  407a75:	call   4053e0 <__fprintf_chk@plt>
  407a7a:	mov    rax,QWORD PTR [rbp+0xe0]
  407a81:	add    rsp,0x20
  407a85:	mov    r9d,DWORD PTR [rax+0xa8]
  407a8c:	test   r9d,r9d
  407a8f:	je     407ac8 <__flatcc_fb_codegen_c@@Base+0x1078>
  407a91:	mov    rdi,QWORD PTR [rbp+0xd0]
  407a98:	push   rbp
  407a99:	mov    r9d,r13d
  407a9c:	mov    r8,r14
  407a9f:	push   QWORD PTR [rsp+0x10]
  407aa3:	mov    rcx,rbp
  407aa6:	lea    rdx,[rip+0x27303]        # 42edb0 <_IO_stdin_used@@Base+0x1db0>
  407aad:	push   QWORD PTR [rsp+0x28]
  407ab1:	mov    esi,0x1
  407ab6:	xor    eax,eax
  407ab8:	push   r12
  407aba:	call   4053e0 <__fprintf_chk@plt>
  407abf:	add    rsp,0x20
  407ac3:	nop    DWORD PTR [rax+rax*1+0x0]
  407ac8:	sub    rsp,0x8
  407acc:	mov    rdi,QWORD PTR [rbp+0xd0]
  407ad3:	push   QWORD PTR [rsp+0x10]
  407ad7:	mov    r9d,r13d
  407ada:	mov    r8,r14
  407add:	push   QWORD PTR [rsp+0x28]
  407ae1:	mov    rcx,rbp
  407ae4:	lea    rdx,[rip+0x26c7d]        # 42e768 <_IO_stdin_used@@Base+0x1768>
  407aeb:	push   r12
  407aed:	mov    esi,0x1
  407af2:	xor    eax,eax
  407af4:	call   4053e0 <__fprintf_chk@plt>
  407af9:	add    rsp,0x18
  407afd:	mov    rdi,QWORD PTR [rbp+0xd0]
  407b04:	push   QWORD PTR [rsp+0x10]
  407b08:	mov    r9d,r13d
  407b0b:	mov    r8,r14
  407b0e:	push   QWORD PTR [rsp+0x28]
  407b12:	mov    rcx,rbp
  407b15:	lea    rdx,[rip+0x26c8c]        # 42e7a8 <_IO_stdin_used@@Base+0x17a8>
  407b1c:	push   r12
  407b1e:	mov    esi,0x1
  407b23:	xor    eax,eax
  407b25:	call   4053e0 <__fprintf_chk@plt>
  407b2a:	mov    rax,QWORD PTR [rbp+0xe0]
  407b31:	add    rsp,0x20
  407b35:	mov    eax,DWORD PTR [rax+0xa8]
  407b3b:	test   eax,eax
  407b3d:	je     40730d <__flatcc_fb_codegen_c@@Base+0x8bd>
  407b43:	jmp    407587 <__flatcc_fb_codegen_c@@Base+0xb37>
  407b48:	nop    DWORD PTR [rax+rax*1+0x0]
  407b50:	movzx  edx,WORD PTR [rbx+0x58]
  407b54:	cmp    dx,0x4
  407b58:	je     40867a <__flatcc_fb_codegen_c@@Base+0x1c2a>
  407b5e:	jbe    407d33 <__flatcc_fb_codegen_c@@Base+0x12e3>
  407b64:	cmp    dx,0x5
  407b68:	je     4083a1 <__flatcc_fb_codegen_c@@Base+0x1951>
  407b6e:	cmp    dx,0x6
  407b72:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407b78:	lea    rsi,[rip+0x2df08]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  407b7f:	mov    QWORD PTR [rsp+0x8],rsi
  407b84:	mov    r10,rsi
  407b87:	cmp    eax,0x9
  407b8a:	ja     408371 <__flatcc_fb_codegen_c@@Base+0x1921>
  407b90:	lea    rdx,[rip+0x2e275]        # 435e0c <_IO_stdin_used@@Base+0x8e0c>
  407b97:	movsxd rax,DWORD PTR [rdx+rcx*4]
  407b9b:	add    rax,rdx
  407b9e:	notrack jmp rax
  407ba1:	nop    DWORD PTR [rax+0x0]
  407ba8:	lea    rax,[rip+0x2df8f]        # 435b3e <_IO_stdin_used@@Base+0x8b3e>
  407baf:	jmp    407600 <__flatcc_fb_codegen_c@@Base+0xbb0>
  407bb4:	nop    DWORD PTR [rax+0x0]
  407bb8:	lea    rax,[rip+0x2dfd2]        # 435b91 <_IO_stdin_used@@Base+0x8b91>
  407bbf:	jmp    407600 <__flatcc_fb_codegen_c@@Base+0xbb0>
  407bc4:	nop    DWORD PTR [rax+0x0]
  407bc8:	lea    rax,[rip+0x2df3e]        # 435b0d <_IO_stdin_used@@Base+0x8b0d>
  407bcf:	jmp    407600 <__flatcc_fb_codegen_c@@Base+0xbb0>
  407bd4:	nop    DWORD PTR [rax+0x0]
  407bd8:	lea    rax,[rip+0x2df52]        # 435b31 <_IO_stdin_used@@Base+0x8b31>
  407bdf:	jmp    407600 <__flatcc_fb_codegen_c@@Base+0xbb0>
  407be4:	nop    DWORD PTR [rax+0x0]
  407be8:	lea    rax,[rip+0x2df11]        # 435b00 <_IO_stdin_used@@Base+0x8b00>
  407bef:	jmp    407600 <__flatcc_fb_codegen_c@@Base+0xbb0>
  407bf4:	nop    DWORD PTR [rax+0x0]
  407bf8:	lea    rax,[rip+0x2df1a]        # 435b19 <_IO_stdin_used@@Base+0x8b19>
  407bff:	jmp    407600 <__flatcc_fb_codegen_c@@Base+0xbb0>
  407c04:	cmp    dx,0x3
  407c08:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407c0e:	lea    rax,[rip+0x2dea5]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  407c15:	mov    QWORD PTR [rsp+0x8],rax
  407c1a:	lea    rax,[rip+0x3d4fd]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  407c21:	mov    QWORD PTR [rsp+0x18],rax
  407c26:	lea    r10,[rip+0x2de95]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  407c2d:	nop    DWORD PTR [rax]
  407c30:	lea    r11,[rsp+0x400]
  407c38:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  407c3d:	mov    rdi,r11
  407c40:	lea    rcx,[rip+0x2df45]        # 435b8c <_IO_stdin_used@@Base+0x8b8c>
  407c47:	mov    edx,0x64
  407c4c:	mov    esi,0x1
  407c51:	mov    eax,0x1
  407c56:	mov    QWORD PTR [rsp+0x38],r10
  407c5b:	mov    QWORD PTR [rsp+0x30],r11
  407c60:	call   405400 <__sprintf_chk@plt>
  407c65:	mov    r11,QWORD PTR [rsp+0x30]
  407c6a:	mov    r10,QWORD PTR [rsp+0x38]
  407c6f:	jmp    40798c <__flatcc_fb_codegen_c@@Base+0xf3c>
  407c74:	cmp    dx,0x3
  407c78:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407c7e:	lea    rax,[rip+0x2de42]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  407c85:	mov    QWORD PTR [rsp+0x8],rax
  407c8a:	lea    rax,[rip+0x3d48d]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  407c91:	mov    QWORD PTR [rsp+0x18],rax
  407c96:	lea    r10,[rip+0x2de2a]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  407c9d:	jmp    407c30 <__flatcc_fb_codegen_c@@Base+0x11e0>
  407c9f:	cmp    dx,0x3
  407ca3:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407ca9:	lea    rsi,[rip+0x2ddc7]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  407cb0:	mov    QWORD PTR [rsp+0x8],rsi
  407cb5:	lea    r10,[rip+0x2ddc4]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  407cbc:	cmp    eax,0xb
  407cbf:	je     407d4c <__flatcc_fb_codegen_c@@Base+0x12fc>
  407cc5:	lea    rax,[rip+0x3d452]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  407ccc:	mov    QWORD PTR [rsp+0x18],rax
  407cd1:	jmp    407c30 <__flatcc_fb_codegen_c@@Base+0x11e0>
  407cd6:	cmp    dx,0x3
  407cda:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407ce0:	lea    rsi,[rip+0x2dd91]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  407ce7:	mov    QWORD PTR [rsp+0x8],rsi
  407cec:	lea    r10,[rip+0x2dd8e]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  407cf3:	jmp    407cbc <__flatcc_fb_codegen_c@@Base+0x126c>
  407cf5:	cmp    dx,0x3
  407cf9:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407cff:	lea    rsi,[rip+0x2dd98]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  407d06:	mov    QWORD PTR [rsp+0x8],rsi
  407d0b:	lea    r10,[rip+0x2dd95]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  407d12:	jmp    407cbc <__flatcc_fb_codegen_c@@Base+0x126c>
  407d14:	cmp    dx,0x3
  407d18:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407d1e:	lea    rsi,[rip+0x2dd69]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  407d25:	mov    QWORD PTR [rsp+0x8],rsi
  407d2a:	lea    r10,[rip+0x2dd66]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  407d31:	jmp    407cbc <__flatcc_fb_codegen_c@@Base+0x126c>
  407d33:	cmp    dx,0x3
  407d37:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407d3d:	lea    rax,[rip+0x2dd43]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  407d44:	mov    QWORD PTR [rsp+0x8],rax
  407d49:	mov    r10,rax
  407d4c:	lea    r11,[rsp+0x400]
  407d54:	mov    rdi,r11
  407d57:	vxorps xmm0,xmm0,xmm0
  407d5b:	lea    rcx,[rip+0x2de26]        # 435b88 <_IO_stdin_used@@Base+0x8b88>
  407d62:	mov    edx,0x64
  407d67:	mov    esi,0x1
  407d6c:	mov    eax,0x1
  407d71:	mov    QWORD PTR [rsp+0x38],r10
  407d76:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  407d7b:	mov    QWORD PTR [rsp+0x30],r11
  407d80:	vcvtss2sd xmm0,xmm0,xmm0
  407d84:	call   405400 <__sprintf_chk@plt>
  407d89:	lea    rax,[rip+0x3d38e]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  407d90:	mov    QWORD PTR [rsp+0x18],rax
  407d95:	mov    r11,QWORD PTR [rsp+0x30]
  407d9a:	mov    r10,QWORD PTR [rsp+0x38]
  407d9f:	jmp    40798c <__flatcc_fb_codegen_c@@Base+0xf3c>
  407da4:	nop    DWORD PTR [rax+0x0]
  407da8:	mov    rdi,QWORD PTR [rbp+0xd0]
  407daf:	mov    r9,r12
  407db2:	mov    r8d,r13d
  407db5:	mov    rcx,r14
  407db8:	lea    rdx,[rip+0x26841]        # 42e600 <_IO_stdin_used@@Base+0x1600>
  407dbf:	mov    esi,0x1
  407dc4:	xor    eax,eax
  407dc6:	call   4053e0 <__fprintf_chk@plt>
  407dcb:	jmp    407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  407dd0:	cmp    ax,0x4
  407dd4:	jne    408b8e <__flatcc_fb_codegen_c@@Base+0x213e>
  407dda:	sub    rsp,0x8
  407dde:	mov    r9,QWORD PTR [rbx+0x88]
  407de5:	mov    rdi,QWORD PTR [rbp+0xd0]
  407dec:	push   rcx
  407ded:	mov    r8,rbp
  407df0:	mov    rcx,rbp
  407df3:	push   QWORD PTR [rsp+0x20]
  407df7:	lea    rdx,[rip+0x26dc2]        # 42ebc0 <_IO_stdin_used@@Base+0x1bc0>
  407dfe:	push   r12
  407e00:	push   r13
  407e02:	push   r14
  407e04:	mov    esi,0x1
  407e09:	xor    eax,eax
  407e0b:	call   4053e0 <__fprintf_chk@plt>
  407e10:	add    rsp,0x30
  407e14:	test   BYTE PTR [rbx+0x70],0x80
  407e18:	jne    4072f3 <__flatcc_fb_codegen_c@@Base+0x8a3>
  407e1e:	jmp    407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  407e23:	nop    DWORD PTR [rax+rax*1+0x0]
  407e28:	cmp    ax,0x1
  407e2c:	jne    408cf1 <__flatcc_fb_codegen_c@@Base+0x22a1>
  407e32:	lea    rax,[rip+0x2dcbf]        # 435af8 <_IO_stdin_used@@Base+0x8af8>
  407e39:	mov    QWORD PTR [rsp+0x8],rax
  407e3e:	jmp    4076f9 <__flatcc_fb_codegen_c@@Base+0xca9>
  407e43:	nop    DWORD PTR [rax+rax*1+0x0]
  407e48:	movzx  eax,WORD PTR [rbx+0x58]
  407e4c:	cmp    ax,0x4
  407e50:	je     4082b0 <__flatcc_fb_codegen_c@@Base+0x1860>
  407e56:	jbe    407e90 <__flatcc_fb_codegen_c@@Base+0x1440>
  407e58:	cmp    ax,0x5
  407e5c:	jne    407eb7 <__flatcc_fb_codegen_c@@Base+0x1467>
  407e5e:	lea    rax,[rip+0x2dc48]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  407e65:	mov    QWORD PTR [rsp+0x18],rbp
  407e6a:	mov    QWORD PTR [rsp+0x8],rax
  407e6f:	lea    r10,[rip+0x2dc3e]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  407e76:	mov    ecx,0x5
  407e7b:	lea    rdx,[rip+0x2dfb2]        # 435e34 <_IO_stdin_used@@Base+0x8e34>
  407e82:	movsxd rax,DWORD PTR [rdx+rcx*4]
  407e86:	add    rax,rdx
  407e89:	notrack jmp rax
  407e8c:	nop    DWORD PTR [rax+0x0]
  407e90:	cmp    ax,0x3
  407e94:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407e9a:	lea    rax,[rip+0x2dc0c]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  407ea1:	mov    QWORD PTR [rsp+0x18],rbp
  407ea6:	mov    QWORD PTR [rsp+0x8],rax
  407eab:	lea    r10,[rip+0x2dc02]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  407eb2:	jmp    407c30 <__flatcc_fb_codegen_c@@Base+0x11e0>
  407eb7:	cmp    ax,0x6
  407ebb:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407ec1:	lea    rax,[rip+0x2dbe5]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  407ec8:	mov    QWORD PTR [rsp+0x18],rbp
  407ecd:	mov    QWORD PTR [rsp+0x8],rax
  407ed2:	lea    r10,[rip+0x2dbdb]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  407ed9:	lea    r8,[rip+0x2dbf7]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  407ee0:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  407ee5:	nop    DWORD PTR [rax]
  407ee8:	sub    rsp,0x8
  407eec:	push   rcx
  407eed:	mov    r9,r8
  407ef0:	mov    rcx,rbp
  407ef3:	push   QWORD PTR [rsp+0x20]
  407ef7:	mov    r8,rbp
  407efa:	lea    rdx,[rip+0x26d97]        # 42ec98 <_IO_stdin_used@@Base+0x1c98>
  407f01:	push   r12
  407f03:	push   r13
  407f05:	push   r14
  407f07:	jmp    407e04 <__flatcc_fb_codegen_c@@Base+0x13b4>
  407f0c:	nop    DWORD PTR [rax+0x0]
  407f10:	cmp    ax,0x3
  407f14:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  407f1a:	cmp    edx,0xb
  407f1d:	je     4086fc <__flatcc_fb_codegen_c@@Base+0x1cac>
  407f23:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  407f28:	lea    r11,[rsp+0x400]
  407f30:	lea    rcx,[rip+0x2dc55]        # 435b8c <_IO_stdin_used@@Base+0x8b8c>
  407f37:	mov    rdi,r11
  407f3a:	mov    edx,0x64
  407f3f:	mov    esi,0x1
  407f44:	mov    eax,0x1
  407f49:	mov    QWORD PTR [rsp+0x8],r11
  407f4e:	call   405400 <__sprintf_chk@plt>
  407f53:	mov    r11,QWORD PTR [rsp+0x8]
  407f58:	sub    rsp,0x8
  407f5c:	mov    r8,QWORD PTR [rbx+0x88]
  407f63:	mov    rdi,QWORD PTR [rbp+0xd0]
  407f6a:	push   r11
  407f6c:	mov    r9,r14
  407f6f:	mov    rcx,rbp
  407f72:	mov    rax,QWORD PTR [rsp+0x20]
  407f77:	lea    rdx,[rip+0x26b12]        # 42ea90 <_IO_stdin_used@@Base+0x1a90>
  407f7e:	push   rax
  407f7f:	mov    esi,0x1
  407f84:	push   rax
  407f85:	xor    eax,eax
  407f87:	push   r12
  407f89:	push   r13
  407f8b:	call   4053e0 <__fprintf_chk@plt>
  407f90:	mov    rax,QWORD PTR [rbp+0xe0]
  407f97:	add    rsp,0x30
  407f9b:	mov    r11d,DWORD PTR [rax+0x24]
  407f9f:	test   r11d,r11d
  407fa2:	jne    407fdb <__flatcc_fb_codegen_c@@Base+0x158b>
  407fa4:	test   BYTE PTR [rbx+0x70],0x80
  407fa8:	je     407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  407fae:	mov    rdi,QWORD PTR [rbp+0xd0]
  407fb5:	push   QWORD PTR [rsp+0x10]
  407fb9:	mov    r9d,r13d
  407fbc:	mov    r8,r14
  407fbf:	push   r12
  407fc1:	mov    rcx,rbp
  407fc4:	lea    rdx,[rip+0x26b05]        # 42ead0 <_IO_stdin_used@@Base+0x1ad0>
  407fcb:	mov    esi,0x1
  407fd0:	xor    eax,eax
  407fd2:	call   4053e0 <__fprintf_chk@plt>
  407fd7:	pop    r9
  407fd9:	pop    r10
  407fdb:	test   BYTE PTR [rbx+0x70],0x80
  407fdf:	je     407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  407fe5:	mov    r8d,DWORD PTR [rsp+0x24]
  407fea:	mov    rdi,QWORD PTR [rbp+0xd0]
  407ff1:	test   r8d,r8d
  407ff4:	jne    408462 <__flatcc_fb_codegen_c@@Base+0x1a12>
  407ffa:	lea    rdx,[rip+0x266ef]        # 42e6f0 <_IO_stdin_used@@Base+0x16f0>
  408001:	mov    esi,0x1
  408006:	xor    eax,eax
  408008:	call   4053e0 <__fprintf_chk@plt>
  40800d:	mov    rdi,QWORD PTR [rbp+0xd0]
  408014:	push   QWORD PTR [rsp+0x10]
  408018:	mov    rcx,rbp
  40801b:	lea    rdx,[rip+0x26ae6]        # 42eb08 <_IO_stdin_used@@Base+0x1b08>
  408022:	push   r12
  408024:	mov    r9d,r13d
  408027:	mov    r8,r14
  40802a:	mov    esi,0x1
  40802f:	xor    eax,eax
  408031:	call   4053e0 <__fprintf_chk@plt>
  408036:	mov    rax,QWORD PTR [rbp+0xe0]
  40803d:	pop    r11
  40803f:	mov    ecx,DWORD PTR [rax+0xa8]
  408045:	pop    rdx
  408046:	test   ecx,ecx
  408048:	je     408079 <__flatcc_fb_codegen_c@@Base+0x1629>
  40804a:	mov    rdi,QWORD PTR [rbp+0xd0]
  408051:	push   rdx
  408052:	mov    r9d,r13d
  408055:	mov    r8,r14
  408058:	push   rbp
  408059:	mov    rcx,rbp
  40805c:	lea    rdx,[rip+0x26dbd]        # 42ee20 <_IO_stdin_used@@Base+0x1e20>
  408063:	push   QWORD PTR [rsp+0x20]
  408067:	mov    esi,0x1
  40806c:	xor    eax,eax
  40806e:	push   r12
  408070:	call   4053e0 <__fprintf_chk@plt>
  408075:	add    rsp,0x20
  408079:	mov    rdi,QWORD PTR [rbp+0xd0]
  408080:	push   QWORD PTR [rsp+0x10]
  408084:	mov    r9d,r13d
  408087:	mov    r8,r14
  40808a:	push   r12
  40808c:	mov    rcx,rbp
  40808f:	lea    rdx,[rip+0x26aaa]        # 42eb40 <_IO_stdin_used@@Base+0x1b40>
  408096:	mov    esi,0x1
  40809b:	xor    eax,eax
  40809d:	call   4053e0 <__fprintf_chk@plt>
  4080a2:	mov    rdi,QWORD PTR [rbp+0xd0]
  4080a9:	push   QWORD PTR [rsp+0x20]
  4080ad:	mov    r9d,r13d
  4080b0:	mov    r8,r14
  4080b3:	push   r12
  4080b5:	mov    rcx,rbp
  4080b8:	lea    rdx,[rip+0x26ac1]        # 42eb80 <_IO_stdin_used@@Base+0x1b80>
  4080bf:	mov    esi,0x1
  4080c4:	xor    eax,eax
  4080c6:	call   4053e0 <__fprintf_chk@plt>
  4080cb:	mov    rax,QWORD PTR [rbp+0xe0]
  4080d2:	add    rsp,0x20
  4080d6:	mov    eax,DWORD PTR [rax+0xa8]
  4080dc:	test   eax,eax
  4080de:	je     40730d <__flatcc_fb_codegen_c@@Base+0x8bd>
  4080e4:	jmp    407587 <__flatcc_fb_codegen_c@@Base+0xb37>
  4080e9:	nop    DWORD PTR [rax+0x0]
  4080f0:	cmp    ax,0x6
  4080f4:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  4080fa:	cmp    edx,0x9
  4080fd:	ja     408371 <__flatcc_fb_codegen_c@@Base+0x1921>
  408103:	lea    rcx,[rip+0x2dd52]        # 435e5c <_IO_stdin_used@@Base+0x8e5c>
  40810a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40810e:	add    rax,rcx
  408111:	notrack jmp rax
  408114:	nop    DWORD PTR [rax+0x0]
  408118:	mov    r8,QWORD PTR [rbx+0x88]
  40811f:	mov    rdi,QWORD PTR [rbp+0xd0]
  408126:	push   rcx
  408127:	mov    r9,r14
  40812a:	mov    rcx,rbp
  40812d:	push   QWORD PTR [rsp+0x18]
  408131:	lea    rdx,[rip+0x26920]        # 42ea58 <_IO_stdin_used@@Base+0x1a58>
  408138:	push   r12
  40813a:	push   r13
  40813c:	jmp    4072dd <__flatcc_fb_codegen_c@@Base+0x88d>
  408141:	nop    DWORD PTR [rax+0x0]
  408148:	mov    r8,QWORD PTR [rbx+0x88]
  40814f:	mov    rdi,QWORD PTR [rbp+0xd0]
  408156:	push   rcx
  408157:	mov    r9,r14
  40815a:	mov    rcx,rbp
  40815d:	push   QWORD PTR [rsp+0x18]
  408161:	lea    rdx,[rip+0x268b0]        # 42ea18 <_IO_stdin_used@@Base+0x1a18>
  408168:	push   r12
  40816a:	push   r13
  40816c:	jmp    4072dd <__flatcc_fb_codegen_c@@Base+0x88d>
  408171:	nop    DWORD PTR [rax+0x0]
  408178:	lea    rdx,[rip+0x26529]        # 42e6a8 <_IO_stdin_used@@Base+0x16a8>
  40817f:	mov    esi,0x1
  408184:	xor    eax,eax
  408186:	call   4053e0 <__fprintf_chk@plt>
  40818b:	sub    rsp,0x8
  40818f:	mov    rdi,QWORD PTR [rbp+0xd0]
  408196:	push   r12
  408198:	mov    r9d,r13d
  40819b:	mov    r8,r14
  40819e:	mov    rcx,rbp
  4081a1:	lea    rdx,[rip+0x26790]        # 42e938 <_IO_stdin_used@@Base+0x1938>
  4081a8:	mov    esi,0x1
  4081ad:	xor    eax,eax
  4081af:	call   4053e0 <__fprintf_chk@plt>
  4081b4:	mov    rax,QWORD PTR [rbp+0xe0]
  4081bb:	pop    rdi
  4081bc:	mov    r9d,DWORD PTR [rax+0xa8]
  4081c3:	pop    r8
  4081c5:	test   r9d,r9d
  4081c8:	je     40730d <__flatcc_fb_codegen_c@@Base+0x8bd>
  4081ce:	mov    rdi,QWORD PTR [rbp+0xd0]
  4081d5:	push   rcx
  4081d6:	mov    esi,0x1
  4081db:	mov    r9d,r13d
  4081de:	push   r12
  4081e0:	mov    r8,r14
  4081e3:	mov    rcx,rbp
  4081e6:	lea    rdx,[rip+0x26c03]        # 42edf0 <_IO_stdin_used@@Base+0x1df0>
  4081ed:	xor    eax,eax
  4081ef:	call   4053e0 <__fprintf_chk@plt>
  4081f4:	pop    rsi
  4081f5:	pop    rdi
  4081f6:	jmp    407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4081fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408200:	lea    rdx,[rip+0x264a1]        # 42e6a8 <_IO_stdin_used@@Base+0x16a8>
  408207:	mov    esi,0x1
  40820c:	xor    eax,eax
  40820e:	call   4053e0 <__fprintf_chk@plt>
  408213:	mov    rdi,QWORD PTR [rbp+0xd0]
  40821a:	lea    rdx,[rip+0x264cf]        # 42e6f0 <_IO_stdin_used@@Base+0x16f0>
  408221:	mov    esi,0x1
  408226:	xor    eax,eax
  408228:	call   4053e0 <__fprintf_chk@plt>
  40822d:	sub    rsp,0x8
  408231:	mov    rdi,QWORD PTR [rbp+0xd0]
  408238:	push   QWORD PTR [rsp+0x10]
  40823c:	mov    r9d,r13d
  40823f:	mov    r8,r14
  408242:	push   QWORD PTR [rsp+0x28]
  408246:	mov    rcx,rbp
  408249:	lea    rdx,[rip+0x264e0]        # 42e730 <_IO_stdin_used@@Base+0x1730>
  408250:	push   r12
  408252:	mov    esi,0x1
  408257:	xor    eax,eax
  408259:	call   4053e0 <__fprintf_chk@plt>
  40825e:	mov    rax,QWORD PTR [rbp+0xe0]
  408265:	add    rsp,0x20
  408269:	mov    eax,DWORD PTR [rax+0xa8]
  40826f:	test   eax,eax
  408271:	je     40730d <__flatcc_fb_codegen_c@@Base+0x8bd>
  408277:	mov    rdi,QWORD PTR [rbp+0xd0]
  40827e:	push   rbp
  40827f:	mov    r9d,r13d
  408282:	mov    r8,r14
  408285:	push   QWORD PTR [rsp+0x10]
  408289:	mov    rcx,rbp
  40828c:	lea    rdx,[rip+0x26b1d]        # 42edb0 <_IO_stdin_used@@Base+0x1db0>
  408293:	push   QWORD PTR [rsp+0x28]
  408297:	mov    esi,0x1
  40829c:	xor    eax,eax
  40829e:	push   r12
  4082a0:	call   4053e0 <__fprintf_chk@plt>
  4082a5:	add    rsp,0x20
  4082a9:	jmp    407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  4082ae:	xchg   ax,ax
  4082b0:	lea    rax,[rip+0x2d7f6]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  4082b7:	mov    QWORD PTR [rsp+0x18],rbp
  4082bc:	mov    QWORD PTR [rsp+0x8],rax
  4082c1:	lea    r10,[rip+0x2d7ec]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  4082c8:	mov    ecx,0x5
  4082cd:	lea    rdx,[rip+0x2dbb0]        # 435e84 <_IO_stdin_used@@Base+0x8e84>
  4082d4:	movsxd rax,DWORD PTR [rdx+rcx*4]
  4082d8:	add    rax,rdx
  4082db:	notrack jmp rax
  4082de:	lea    r8,[rip+0x2d7f2]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  4082e5:	mov    QWORD PTR [rsp+0x38],r10
  4082ea:	mov    r9,QWORD PTR [rbx+0x48]
  4082ee:	lea    r11,[rsp+0x400]
  4082f6:	lea    rcx,[rip+0x2d872]        # 435b6f <_IO_stdin_used@@Base+0x8b6f>
  4082fd:	mov    rdi,r11
  408300:	mov    edx,0x64
  408305:	mov    esi,0x1
  40830a:	xor    eax,eax
  40830c:	mov    QWORD PTR [rsp+0x30],r11
  408311:	call   405400 <__sprintf_chk@plt>
  408316:	mov    r11,QWORD PTR [rsp+0x30]
  40831b:	mov    r10,QWORD PTR [rsp+0x38]
  408320:	jmp    40798c <__flatcc_fb_codegen_c@@Base+0xf3c>
  408325:	lea    r8,[rip+0x2d7ab]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40832c:	mov    QWORD PTR [rsp+0x38],r10
  408331:	lea    r11,[rsp+0x400]
  408339:	mov    r9,QWORD PTR [rbx+0x48]
  40833d:	lea    rcx,[rip+0x2d834]        # 435b78 <_IO_stdin_used@@Base+0x8b78>
  408344:	jmp    4082fd <__flatcc_fb_codegen_c@@Base+0x18ad>
  408346:	lea    rsi,[rip+0x2d76d]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40834d:	mov    QWORD PTR [rsp+0x8],rsi
  408352:	lea    rsi,[rip+0x3cdc5]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408359:	mov    QWORD PTR [rsp+0x18],rsi
  40835e:	lea    r10,[rip+0x2d75d]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  408365:	nop    DWORD PTR [rax]
  408368:	cmp    eax,0x9
  40836b:	jbe    407e7b <__flatcc_fb_codegen_c@@Base+0x142b>
  408371:	call   406d50 <__flatcc_fb_codegen_c@@Base+0x300>
  408376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408380:	lea    rsi,[rip+0x2d740]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  408387:	mov    QWORD PTR [rsp+0x8],rsi
  40838c:	lea    rsi,[rip+0x3cd8b]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408393:	mov    QWORD PTR [rsp+0x18],rsi
  408398:	lea    r10,[rip+0x2d728]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40839f:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  4083a1:	lea    r10,[rip+0x2d6df]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  4083a8:	lea    rsi,[rip+0x3cd6f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4083af:	mov    QWORD PTR [rsp+0x8],r10
  4083b4:	mov    QWORD PTR [rsp+0x18],rsi
  4083b9:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  4083bb:	lea    rsi,[rip+0x2d6b5]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  4083c2:	mov    QWORD PTR [rsp+0x8],rsi
  4083c7:	lea    rsi,[rip+0x3cd50]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4083ce:	mov    QWORD PTR [rsp+0x18],rsi
  4083d3:	lea    r10,[rip+0x2d6a6]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  4083da:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  4083dc:	lea    rsi,[rip+0x2d6ab]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  4083e3:	mov    QWORD PTR [rsp+0x8],rsi
  4083e8:	lea    rsi,[rip+0x3cd2f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4083ef:	mov    QWORD PTR [rsp+0x18],rsi
  4083f4:	lea    r10,[rip+0x2d69c]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  4083fb:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  408400:	lea    rsi,[rip+0x2d697]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  408407:	mov    QWORD PTR [rsp+0x8],rsi
  40840c:	lea    rsi,[rip+0x3cd0b]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408413:	mov    QWORD PTR [rsp+0x18],rsi
  408418:	lea    r10,[rip+0x2d688]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40841f:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  408424:	lea    rsi,[rip+0x2d64d]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40842b:	mov    QWORD PTR [rsp+0x8],rsi
  408430:	lea    rsi,[rip+0x3cce7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408437:	mov    QWORD PTR [rsp+0x18],rsi
  40843c:	lea    r10,[rip+0x2d63e]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  408443:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  408448:	cmp    edx,0x9
  40844b:	ja     408371 <__flatcc_fb_codegen_c@@Base+0x1921>
  408451:	lea    rsi,[rip+0x2da54]        # 435eac <_IO_stdin_used@@Base+0x8eac>
  408458:	movsxd rax,DWORD PTR [rsi+rdx*4]
  40845c:	add    rax,rsi
  40845f:	notrack jmp rax
  408462:	lea    rdx,[rip+0x2623f]        # 42e6a8 <_IO_stdin_used@@Base+0x16a8>
  408469:	mov    esi,0x1
  40846e:	xor    eax,eax
  408470:	call   4053e0 <__fprintf_chk@plt>
  408475:	mov    rdi,QWORD PTR [rbp+0xd0]
  40847c:	lea    rdx,[rip+0x2626d]        # 42e6f0 <_IO_stdin_used@@Base+0x16f0>
  408483:	mov    esi,0x1
  408488:	xor    eax,eax
  40848a:	call   4053e0 <__fprintf_chk@plt>
  40848f:	mov    rdi,QWORD PTR [rbp+0xd0]
  408496:	push   QWORD PTR [rsp+0x10]
  40849a:	mov    rcx,rbp
  40849d:	lea    rdx,[rip+0x26664]        # 42eb08 <_IO_stdin_used@@Base+0x1b08>
  4084a4:	push   r12
  4084a6:	mov    esi,0x1
  4084ab:	mov    r9d,r13d
  4084ae:	mov    r8,r14
  4084b1:	xor    eax,eax
  4084b3:	call   4053e0 <__fprintf_chk@plt>
  4084b8:	mov    rax,QWORD PTR [rbp+0xe0]
  4084bf:	pop    rdx
  4084c0:	mov    esi,DWORD PTR [rax+0xa8]
  4084c6:	pop    rcx
  4084c7:	test   esi,esi
  4084c9:	je     40730d <__flatcc_fb_codegen_c@@Base+0x8bd>
  4084cf:	mov    rdi,QWORD PTR [rbp+0xd0]
  4084d6:	push   rax
  4084d7:	mov    r9d,r13d
  4084da:	mov    r8,r14
  4084dd:	push   rbp
  4084de:	mov    rcx,rbp
  4084e1:	lea    rdx,[rip+0x26938]        # 42ee20 <_IO_stdin_used@@Base+0x1e20>
  4084e8:	push   QWORD PTR [rsp+0x20]
  4084ec:	mov    esi,0x1
  4084f1:	xor    eax,eax
  4084f3:	push   r12
  4084f5:	call   4053e0 <__fprintf_chk@plt>
  4084fa:	add    rsp,0x20
  4084fe:	jmp    407315 <__flatcc_fb_codegen_c@@Base+0x8c5>
  408503:	nop    DWORD PTR [rax+rax*1+0x0]
  408508:	movzx  edx,WORD PTR [rbx+0x58]
  40850c:	cmp    dx,0x4
  408510:	je     408a20 <__flatcc_fb_codegen_c@@Base+0x1fd0>
  408516:	jbe    408844 <__flatcc_fb_codegen_c@@Base+0x1df4>
  40851c:	cmp    dx,0x5
  408520:	je     4089fc <__flatcc_fb_codegen_c@@Base+0x1fac>
  408526:	cmp    dx,0x6
  40852a:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  408530:	lea    rax,[rip+0x2d556]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  408537:	mov    QWORD PTR [rsp+0x8],rax
  40853c:	lea    r10,[rip+0x2d553]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  408543:	lea    rax,[rip+0x3cbd4]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40854a:	mov    QWORD PTR [rsp+0x18],rax
  40854f:	lea    r8,[rip+0x2d589]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  408556:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  40855b:	lea    r8,[rip+0x2d56d]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  408562:	jmp    40832c <__flatcc_fb_codegen_c@@Base+0x18dc>
  408567:	lea    r8,[rip+0x2d57b]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  40856e:	jmp    40832c <__flatcc_fb_codegen_c@@Base+0x18dc>
  408573:	lea    r8,[rip+0x2d566]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  40857a:	jmp    40832c <__flatcc_fb_codegen_c@@Base+0x18dc>
  40857f:	lea    r8,[rip+0x2d562]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  408586:	jmp    40832c <__flatcc_fb_codegen_c@@Base+0x18dc>
  40858b:	lea    r8,[rip+0x2d54d]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  408592:	jmp    40832c <__flatcc_fb_codegen_c@@Base+0x18dc>
  408597:	lea    r8,[rip+0x2d541]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40859e:	jmp    4082e5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4085a3:	lea    r8,[rip+0x2d524]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  4085aa:	jmp    4082e5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4085af:	lea    r8,[rip+0x2d532]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  4085b6:	jmp    4082e5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4085bb:	lea    r8,[rip+0x2d50c]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  4085c2:	jmp    40832c <__flatcc_fb_codegen_c@@Base+0x18dc>
  4085c7:	lea    r8,[rip+0x2d51b]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  4085ce:	jmp    4082e5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4085d3:	lea    r8,[rip+0x2d506]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  4085da:	jmp    4082e5 <__flatcc_fb_codegen_c@@Base+0x1895>
  4085df:	lea    rax,[rip+0x3cb38]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4085e6:	mov    QWORD PTR [rsp+0x18],rax
  4085eb:	lea    r8,[rip+0x2d4f6]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  4085f2:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  4085f7:	lea    r8,[rip+0x2d4da]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  4085fe:	jmp    4082e5 <__flatcc_fb_codegen_c@@Base+0x1895>
  408603:	lea    r8,[rip+0x2d4c5]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  40860a:	jmp    4082e5 <__flatcc_fb_codegen_c@@Base+0x1895>
  40860f:	movzx  edx,WORD PTR [rbx+0x58]
  408613:	cmp    dx,0x4
  408617:	je     408cc8 <__flatcc_fb_codegen_c@@Base+0x2278>
  40861d:	jbe    408ca6 <__flatcc_fb_codegen_c@@Base+0x2256>
  408623:	cmp    dx,0x5
  408627:	je     408bde <__flatcc_fb_codegen_c@@Base+0x218e>
  40862d:	cmp    dx,0x6
  408631:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  408637:	lea    rax,[rip+0x2d47b]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40863e:	mov    QWORD PTR [rsp+0x8],rax
  408643:	lea    r10,[rip+0x2d477]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40864a:	lea    rax,[rip+0x3cacd]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408651:	mov    QWORD PTR [rsp+0x18],rax
  408656:	lea    r8,[rip+0x2d47a]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40865d:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  408662:	lea    rax,[rip+0x3cab5]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408669:	mov    QWORD PTR [rsp+0x18],rax
  40866e:	lea    r8,[rip+0x2d463]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  408675:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  40867a:	lea    r10,[rip+0x2d406]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  408681:	lea    rsi,[rip+0x3ca96]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408688:	mov    QWORD PTR [rsp+0x8],r10
  40868d:	mov    QWORD PTR [rsp+0x18],rsi
  408692:	nop    WORD PTR [rax+rax*1+0x0]
  408698:	cmp    eax,0x9
  40869b:	jbe    4082cd <__flatcc_fb_codegen_c@@Base+0x187d>
  4086a1:	jmp    408371 <__flatcc_fb_codegen_c@@Base+0x1921>
  4086a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4086b0:	lea    rax,[rip+0x2d403]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  4086b7:	mov    QWORD PTR [rsp+0x8],rax
  4086bc:	lea    rax,[rip+0x3ca5b]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4086c3:	mov    QWORD PTR [rsp+0x18],rax
  4086c8:	lea    r10,[rip+0x2d3f3]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  4086cf:	lea    r8,[rip+0x2d402]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  4086d6:	jmp    40832c <__flatcc_fb_codegen_c@@Base+0x18dc>
  4086db:	lea    rsi,[rip+0x2d3e5]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  4086e2:	mov    QWORD PTR [rsp+0x8],rsi
  4086e7:	lea    rsi,[rip+0x3ca30]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4086ee:	mov    QWORD PTR [rsp+0x18],rsi
  4086f3:	lea    r10,[rip+0x2d3cd]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  4086fa:	jmp    408698 <__flatcc_fb_codegen_c@@Base+0x1c48>
  4086fc:	vxorps xmm0,xmm0,xmm0
  408700:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  408705:	lea    r11,[rsp+0x400]
  40870d:	vcvtss2sd xmm0,xmm0,xmm0
  408711:	lea    rcx,[rip+0x2d470]        # 435b88 <_IO_stdin_used@@Base+0x8b88>
  408718:	jmp    407f37 <__flatcc_fb_codegen_c@@Base+0x14e7>
  40871d:	lea    rsi,[rip+0x2d37a]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  408724:	mov    QWORD PTR [rsp+0x8],rsi
  408729:	lea    rsi,[rip+0x3c9ee]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408730:	mov    QWORD PTR [rsp+0x18],rsi
  408735:	lea    r10,[rip+0x2d36b]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40873c:	jmp    408698 <__flatcc_fb_codegen_c@@Base+0x1c48>
  408741:	lea    rsi,[rip+0x2d32f]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  408748:	mov    QWORD PTR [rsp+0x8],rsi
  40874d:	lea    rsi,[rip+0x3c9ca]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408754:	mov    QWORD PTR [rsp+0x18],rsi
  408759:	lea    r10,[rip+0x2d320]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  408760:	jmp    408698 <__flatcc_fb_codegen_c@@Base+0x1c48>
  408765:	lea    rsi,[rip+0x2d322]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40876c:	mov    QWORD PTR [rsp+0x8],rsi
  408771:	lea    rsi,[rip+0x3c9a6]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408778:	mov    QWORD PTR [rsp+0x18],rsi
  40877d:	lea    r10,[rip+0x2d313]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  408784:	jmp    408698 <__flatcc_fb_codegen_c@@Base+0x1c48>
  408789:	lea    rsi,[rip+0x2d2e8]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  408790:	mov    QWORD PTR [rsp+0x8],rsi
  408795:	lea    rsi,[rip+0x3c982]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40879c:	mov    QWORD PTR [rsp+0x18],rsi
  4087a1:	lea    r10,[rip+0x2d2d9]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  4087a8:	jmp    408698 <__flatcc_fb_codegen_c@@Base+0x1c48>
  4087ad:	lea    r8,[rip+0x2d323]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  4087b4:	mov    r9,QWORD PTR [rbx+0x48]
  4087b8:	lea    r11,[rsp+0x400]
  4087c0:	lea    rcx,[rip+0x2d3a8]        # 435b6f <_IO_stdin_used@@Base+0x8b6f>
  4087c7:	mov    rdi,r11
  4087ca:	mov    edx,0x64
  4087cf:	mov    esi,0x1
  4087d4:	xor    eax,eax
  4087d6:	mov    QWORD PTR [rsp+0x8],r11
  4087db:	call   405400 <__sprintf_chk@plt>
  4087e0:	mov    r11,QWORD PTR [rsp+0x8]
  4087e5:	jmp    407f58 <__flatcc_fb_codegen_c@@Base+0x1508>
  4087ea:	lea    r8,[rip+0x2d2e6]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  4087f1:	lea    r11,[rsp+0x400]
  4087f9:	movzx  r9d,BYTE PTR [rbx+0x48]
  4087fe:	mov    rdi,r11
  408801:	lea    rcx,[rip+0x2d379]        # 435b81 <_IO_stdin_used@@Base+0x8b81>
  408808:	mov    edx,0x64
  40880d:	mov    esi,0x1
  408812:	xor    eax,eax
  408814:	mov    QWORD PTR [rsp+0x8],r11
  408819:	call   405400 <__sprintf_chk@plt>
  40881e:	mov    r11,QWORD PTR [rsp+0x8]
  408823:	jmp    407f58 <__flatcc_fb_codegen_c@@Base+0x1508>
  408828:	lea    r8,[rip+0x2d2a8]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40882f:	lea    r11,[rsp+0x400]
  408837:	mov    r9,QWORD PTR [rbx+0x48]
  40883b:	lea    rcx,[rip+0x2d336]        # 435b78 <_IO_stdin_used@@Base+0x8b78>
  408842:	jmp    4087c7 <__flatcc_fb_codegen_c@@Base+0x1d77>
  408844:	cmp    dx,0x3
  408848:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  40884e:	lea    rsi,[rip+0x2d238]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  408855:	mov    QWORD PTR [rsp+0x8],rsi
  40885a:	lea    r10,[rip+0x2d235]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  408861:	jmp    407cbc <__flatcc_fb_codegen_c@@Base+0x126c>
  408866:	movzx  edx,WORD PTR [rbx+0x58]
  40886a:	cmp    dx,0x4
  40886e:	je     408c6a <__flatcc_fb_codegen_c@@Base+0x221a>
  408874:	jbe    408ae4 <__flatcc_fb_codegen_c@@Base+0x2094>
  40887a:	cmp    dx,0x5
  40887e:	je     408c27 <__flatcc_fb_codegen_c@@Base+0x21d7>
  408884:	cmp    dx,0x6
  408888:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  40888e:	lea    rsi,[rip+0x2d208]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  408895:	mov    QWORD PTR [rsp+0x8],rsi
  40889a:	lea    r10,[rip+0x2d205]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  4088a1:	jmp    407b87 <__flatcc_fb_codegen_c@@Base+0x1137>
  4088a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088b0:	lea    r8,[rip+0x2d221]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  4088b7:	jmp    4087b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  4088bc:	lea    r8,[rip+0x2d20c]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  4088c3:	jmp    4087b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  4088c8:	lea    r8,[rip+0x2d21a]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  4088cf:	jmp    4087f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  4088d4:	lea    r8,[rip+0x2d205]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  4088db:	jmp    4087f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  4088e0:	lea    r8,[rip+0x2d1e7]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  4088e7:	jmp    4087b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  4088ec:	lea    r8,[rip+0x2d1f5]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  4088f3:	jmp    4087b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  4088f8:	lea    r8,[rip+0x2d1cf]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  4088ff:	jmp    40882f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  408904:	lea    r8,[rip+0x2d1dd]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  40890b:	jmp    40882f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  408910:	lea    r8,[rip+0x2d1d2]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  408917:	jmp    4087b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  40891c:	lea    r8,[rip+0x2d1bd]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  408923:	jmp    4087b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  408928:	lea    r8,[rip+0x2d19f]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  40892f:	jmp    4087f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  408934:	lea    r8,[rip+0x2d1ad]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  40893b:	jmp    4087f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  408940:	lea    r8,[rip+0x2d191]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  408947:	jmp    4087f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  40894c:	lea    r8,[rip+0x2d17c]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  408953:	jmp    4087f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  408958:	lea    r8,[rip+0x2d180]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40895f:	jmp    4087f1 <__flatcc_fb_codegen_c@@Base+0x1da1>
  408964:	lea    r8,[rip+0x2d174]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40896b:	jmp    4087b4 <__flatcc_fb_codegen_c@@Base+0x1d64>
  408970:	lea    r8,[rip+0x2d172]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  408977:	jmp    40882f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  40897c:	lea    r8,[rip+0x2d15d]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  408983:	jmp    40882f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  408988:	lea    r8,[rip+0x2d149]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  40898f:	jmp    40882f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  408994:	lea    r8,[rip+0x2d134]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  40899b:	jmp    40882f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  4089a0:	lea    r8,[rip+0x2d138]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  4089a7:	jmp    40882f <__flatcc_fb_codegen_c@@Base+0x1ddf>
  4089ac:	mov    rax,QWORD PTR [rip+0x48635]        # 450fe8 <stderr@GLIBC_2.2.5>
  4089b3:	lea    rcx,[rip+0x25956]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  4089ba:	mov    rdi,QWORD PTR [rax]
  4089bd:	lea    rdx,[rip+0x2d08f]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  4089c4:	mov    esi,0x1
  4089c9:	lea    r9,[rip+0x26340]        # 42ed10 <_IO_stdin_used@@Base+0x1d10>
  4089d0:	mov    r8d,0x63f
  4089d6:	xor    eax,eax
  4089d8:	call   4053e0 <__fprintf_chk@plt>
  4089dd:	lea    rcx,[rip+0x2d624]        # 436008 <_IO_stdin_used@@Base+0x9008>
  4089e4:	mov    edx,0x63f
  4089e9:	lea    rsi,[rip+0x25920]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  4089f0:	lea    rdi,[rip+0x2e122]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4089f7:	call   4052e0 <__assert_fail@plt>
  4089fc:	lea    rsi,[rip+0x2d08a]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  408a03:	mov    QWORD PTR [rsp+0x8],rsi
  408a08:	lea    rsi,[rip+0x3c70f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408a0f:	mov    QWORD PTR [rsp+0x18],rsi
  408a14:	lea    r10,[rip+0x2d07b]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  408a1b:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  408a20:	lea    rsi,[rip+0x2d066]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  408a27:	mov    QWORD PTR [rsp+0x8],rsi
  408a2c:	lea    rsi,[rip+0x3c6eb]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408a33:	mov    QWORD PTR [rsp+0x18],rsi
  408a38:	lea    r10,[rip+0x2d057]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  408a3f:	jmp    408698 <__flatcc_fb_codegen_c@@Base+0x1c48>
  408a44:	mov    rax,QWORD PTR [rip+0x4859d]        # 450fe8 <stderr@GLIBC_2.2.5>
  408a4b:	lea    rcx,[rip+0x25856]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  408a52:	mov    rdi,QWORD PTR [rax]
  408a55:	lea    rdx,[rip+0x2cff7]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  408a5c:	mov    esi,0x1
  408a61:	lea    r9,[rip+0x25808]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  408a68:	mov    r8d,0xba
  408a6e:	xor    eax,eax
  408a70:	call   4053e0 <__fprintf_chk@plt>
  408a75:	lea    rcx,[rip+0x2d574]        # 435ff0 <_IO_stdin_used@@Base+0x8ff0>
  408a7c:	mov    edx,0xba
  408a81:	lea    rsi,[rip+0x25820]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  408a88:	lea    rdi,[rip+0x2e08a]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  408a8f:	call   4052e0 <__assert_fail@plt>
  408a94:	mov    rax,QWORD PTR [rip+0x4854d]        # 450fe8 <stderr@GLIBC_2.2.5>
  408a9b:	lea    rcx,[rip+0x2586e]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  408aa2:	mov    rdi,QWORD PTR [rax]
  408aa5:	lea    rdx,[rip+0x2cfa7]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  408aac:	mov    esi,0x1
  408ab1:	lea    r9,[rip+0x26190]        # 42ec48 <_IO_stdin_used@@Base+0x1c48>
  408ab8:	mov    r8d,0x630
  408abe:	xor    eax,eax
  408ac0:	call   4053e0 <__fprintf_chk@plt>
  408ac5:	lea    rcx,[rip+0x2d53c]        # 436008 <_IO_stdin_used@@Base+0x9008>
  408acc:	mov    edx,0x630
  408ad1:	lea    rsi,[rip+0x25838]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  408ad8:	lea    rdi,[rip+0x2e03a]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  408adf:	call   4052e0 <__assert_fail@plt>
  408ae4:	cmp    dx,0x3
  408ae8:	je     408c8e <__flatcc_fb_codegen_c@@Base+0x223e>
  408aee:	mov    rax,QWORD PTR [rip+0x484f3]        # 450fe8 <stderr@GLIBC_2.2.5>
  408af5:	lea    rcx,[rip+0x257ac]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  408afc:	mov    rdi,QWORD PTR [rax]
  408aff:	lea    rdx,[rip+0x2cf4d]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  408b06:	mov    esi,0x1
  408b0b:	lea    r9,[rip+0x2575e]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  408b12:	mov    r8d,0x104
  408b18:	xor    eax,eax
  408b1a:	call   4053e0 <__fprintf_chk@plt>
  408b1f:	lea    rcx,[rip+0x2d502]        # 436028 <_IO_stdin_used@@Base+0x9028>
  408b26:	mov    edx,0x104
  408b2b:	lea    rsi,[rip+0x25776]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  408b32:	lea    rdi,[rip+0x2dfe0]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  408b39:	call   4052e0 <__assert_fail@plt>
  408b3e:	mov    rax,QWORD PTR [rip+0x484a3]        # 450fe8 <stderr@GLIBC_2.2.5>
  408b45:	lea    rcx,[rip+0x2575c]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  408b4c:	mov    rdi,QWORD PTR [rax]
  408b4f:	lea    rdx,[rip+0x2cefd]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  408b56:	mov    esi,0x1
  408b5b:	lea    r9,[rip+0x2570e]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  408b62:	mov    r8d,0x8d
  408b68:	xor    eax,eax
  408b6a:	call   4053e0 <__fprintf_chk@plt>
  408b6f:	lea    rcx,[rip+0x2d4fa]        # 436070 <_IO_stdin_used@@Base+0x9070>
  408b76:	mov    edx,0x8d
  408b7b:	lea    rsi,[rip+0x25726]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  408b82:	lea    rdi,[rip+0x2df90]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  408b89:	call   4052e0 <__assert_fail@plt>
  408b8e:	mov    rax,QWORD PTR [rip+0x48453]        # 450fe8 <stderr@GLIBC_2.2.5>
  408b95:	lea    rcx,[rip+0x25774]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  408b9c:	mov    rdi,QWORD PTR [rax]
  408b9f:	lea    rdx,[rip+0x2cead]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  408ba6:	mov    esi,0x1
  408bab:	lea    r9,[rip+0x26046]        # 42ebf8 <_IO_stdin_used@@Base+0x1bf8>
  408bb2:	mov    r8d,0x620
  408bb8:	xor    eax,eax
  408bba:	call   4053e0 <__fprintf_chk@plt>
  408bbf:	lea    rcx,[rip+0x2d442]        # 436008 <_IO_stdin_used@@Base+0x9008>
  408bc6:	mov    edx,0x620
  408bcb:	lea    rsi,[rip+0x2573e]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  408bd2:	lea    rdi,[rip+0x2df40]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  408bd9:	call   4052e0 <__assert_fail@plt>
  408bde:	lea    rsi,[rip+0x2ced4]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  408be5:	mov    QWORD PTR [rsp+0x8],rsi
  408bea:	lea    rsi,[rip+0x3c52d]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408bf1:	mov    QWORD PTR [rsp+0x18],rsi
  408bf6:	lea    r10,[rip+0x2cec4]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  408bfd:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  408c02:	nop    WORD PTR [rax+rax*1+0x0]
  408c08:	lea    rcx,[rip+0x2d3d1]        # 435fe0 <_IO_stdin_used@@Base+0x8fe0>
  408c0f:	mov    edx,0x53f
  408c14:	lea    rsi,[rip+0x256f5]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  408c1b:	lea    rdi,[rip+0x25c66]        # 42e888 <_IO_stdin_used@@Base+0x1888>
  408c22:	call   4052e0 <__assert_fail@plt>
  408c27:	lea    rsi,[rip+0x2ce6f]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  408c2e:	mov    QWORD PTR [rsp+0x8],rsi
  408c33:	lea    rsi,[rip+0x3c4e4]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408c3a:	mov    QWORD PTR [rsp+0x18],rsi
  408c3f:	lea    r10,[rip+0x2ce60]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  408c46:	jmp    408368 <__flatcc_fb_codegen_c@@Base+0x1918>
  408c4b:	lea    rcx,[rip+0x2d3b6]        # 436008 <_IO_stdin_used@@Base+0x9008>
  408c52:	mov    edx,0x552
  408c57:	lea    rsi,[rip+0x256b2]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  408c5e:	lea    rdi,[rip+0x258a3]        # 42e508 <_IO_stdin_used@@Base+0x1508>
  408c65:	call   4052e0 <__assert_fail@plt>
  408c6a:	lea    rsi,[rip+0x2ce2c]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  408c71:	mov    QWORD PTR [rsp+0x8],rsi
  408c76:	lea    rsi,[rip+0x3c4a1]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408c7d:	mov    QWORD PTR [rsp+0x18],rsi
  408c82:	lea    r10,[rip+0x2ce1d]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  408c89:	jmp    408698 <__flatcc_fb_codegen_c@@Base+0x1c48>
  408c8e:	lea    rsi,[rip+0x2ce08]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  408c95:	mov    QWORD PTR [rsp+0x8],rsi
  408c9a:	lea    r10,[rip+0x2ce05]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  408ca1:	jmp    407cbc <__flatcc_fb_codegen_c@@Base+0x126c>
  408ca6:	cmp    dx,0x3
  408caa:	jne    408aee <__flatcc_fb_codegen_c@@Base+0x209e>
  408cb0:	lea    rsi,[rip+0x2ce02]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  408cb7:	mov    QWORD PTR [rsp+0x8],rsi
  408cbc:	lea    r10,[rip+0x2cdfe]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  408cc3:	jmp    407cbc <__flatcc_fb_codegen_c@@Base+0x126c>
  408cc8:	lea    rsi,[rip+0x2cdea]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  408ccf:	mov    QWORD PTR [rsp+0x8],rsi
  408cd4:	lea    rsi,[rip+0x3c443]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408cdb:	mov    QWORD PTR [rsp+0x18],rsi
  408ce0:	lea    r10,[rip+0x2cdda]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  408ce7:	jmp    408698 <__flatcc_fb_codegen_c@@Base+0x1c48>
  408cec:	call   4052c0 <__stack_chk_fail@plt>
  408cf1:	mov    rax,QWORD PTR [rip+0x482f0]        # 450fe8 <stderr@GLIBC_2.2.5>
  408cf8:	lea    rcx,[rip+0x25611]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  408cff:	mov    rdi,QWORD PTR [rax]
  408d02:	lea    rdx,[rip+0x2cd4a]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  408d09:	mov    esi,0x1
  408d0e:	lea    r9,[rip+0x25b3b]        # 42e850 <_IO_stdin_used@@Base+0x1850>
  408d15:	mov    r8d,0x53b
  408d1b:	xor    eax,eax
  408d1d:	call   4053e0 <__fprintf_chk@plt>
  408d22:	lea    rcx,[rip+0x2d2b7]        # 435fe0 <_IO_stdin_used@@Base+0x8fe0>
  408d29:	mov    edx,0x53b
  408d2e:	lea    rsi,[rip+0x255db]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  408d35:	lea    rdi,[rip+0x2dddd]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  408d3c:	call   4052e0 <__assert_fail@plt>
  408d41:	lea    rax,[rip+0x3c3d6]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408d48:	mov    QWORD PTR [rsp+0x18],rax
  408d4d:	lea    r8,[rip+0x2cd7a]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  408d54:	jmp    407950 <__flatcc_fb_codegen_c@@Base+0xf00>
  408d59:	nop    DWORD PTR [rax+0x0]
  408d60:	push   r15
  408d62:	mov    ecx,0x1d
  408d67:	push   r14
  408d69:	push   r13
  408d6b:	push   r12
  408d6d:	push   rbp
  408d6e:	push   rbx
  408d6f:	mov    rbx,rdi
  408d72:	sub    rsp,0x188
  408d79:	mov    rax,QWORD PTR fs:0x28
  408d82:	mov    QWORD PTR [rsp+0x178],rax
  408d8a:	xor    eax,eax
  408d8c:	lea    r12,[rsp+0x20]
  408d91:	mov    rdi,r12
  408d94:	rep stos QWORD PTR es:[rdi],rax
  408d97:	movzx  eax,WORD PTR [rsi+0x10]
  408d9b:	mov    WORD PTR [rsp+0x1e],ax
  408da0:	sub    eax,0x3
  408da3:	cmp    ax,0x1
  408da7:	ja     409945 <__flatcc_fb_codegen_c@@Base+0x2ef5>
  408dad:	cmp    WORD PTR [rsi+0x58],0x8
  408db2:	mov    r13,rsi
  408db5:	jne    409921 <__flatcc_fb_codegen_c@@Base+0x2ed1>
  408dbb:	mov    eax,DWORD PTR [rsi+0x48]
  408dbe:	cmp    eax,0x5
  408dc1:	je     408de0 <__flatcc_fb_codegen_c@@Base+0x2390>
  408dc3:	cmp    eax,0xb
  408dc6:	ja     40991c <__flatcc_fb_codegen_c@@Base+0x2ecc>
  408dcc:	lea    rdx,[rip+0x2d101]        # 435ed4 <_IO_stdin_used@@Base+0x8ed4>
  408dd3:	movsxd rax,DWORD PTR [rdx+rax*4]
  408dd7:	add    rax,rdx
  408dda:	notrack jmp rax
  408ddd:	nop    DWORD PTR [rax]
  408de0:	mov    QWORD PTR [rsp+0x10],rbx
  408de5:	lea    r15,[rip+0x2ccc1]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  408dec:	mov    eax,DWORD PTR [r13+0xb8]
  408df3:	cmp    WORD PTR [rsp+0x1e],0x3
  408df9:	lea    ebp,[rax*8+0x0]
  408e00:	mov    rdi,QWORD PTR [r13+0x18]
  408e04:	mov    rdx,r12
  408e07:	mov    rsi,r13
  408e0a:	je     4095e0 <__flatcc_fb_codegen_c@@Base+0x2b90>
  408e10:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  408e15:	mov    r14,QWORD PTR [r13+0x40]
  408e19:	test   r14,r14
  408e1c:	je     409528 <__flatcc_fb_codegen_c@@Base+0x2ad8>
  408e22:	lea    rax,[rip+0x2cd74]        # 435b9d <_IO_stdin_used@@Base+0x8b9d>
  408e29:	mov    QWORD PTR [rsp+0x8],rax
  408e2e:	mov    ecx,0x1
  408e33:	xor    edx,edx
  408e35:	nop    DWORD PTR [rax]
  408e38:	mov    rax,QWORD PTR [r14+0x8]
  408e3c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e43:	cmp    QWORD PTR [rax+0x10],rdx
  408e47:	je     408e79 <__flatcc_fb_codegen_c@@Base+0x2429>
  408e49:	test   ecx,ecx
  408e4b:	lea    rdx,[rip+0x2ccf8]        # 435b4a <_IO_stdin_used@@Base+0x8b4a>
  408e52:	lea    rcx,[rip+0x3c2c5]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408e59:	jne    408e62 <__flatcc_fb_codegen_c@@Base+0x2412>
  408e5b:	lea    rdx,[rip+0x2ccef]        # 435b51 <_IO_stdin_used@@Base+0x8b51>
  408e62:	mov    esi,0x1
  408e67:	xor    eax,eax
  408e69:	call   4053e0 <__fprintf_chk@plt>
  408e6e:	mov    rax,QWORD PTR [r14+0x8]
  408e72:	mov    rdi,QWORD PTR [rbx+0xd0]
  408e79:	mov    rcx,QWORD PTR [rax+0x8]
  408e7d:	mov    r8,QWORD PTR [rax]
  408e80:	lea    rdx,[rip+0x2dca2]        # 436b29 <_IO_stdin_used@@Base+0x9b29>
  408e87:	mov    esi,0x1
  408e8c:	xor    eax,eax
  408e8e:	call   4053e0 <__fprintf_chk@plt>
  408e93:	mov    rax,QWORD PTR [r14+0x8]
  408e97:	mov    r14,QWORD PTR [r14]
  408e9a:	mov    rdx,QWORD PTR [rax+0x10]
  408e9e:	xor    ecx,ecx
  408ea0:	test   r14,r14
  408ea3:	jne    408e38 <__flatcc_fb_codegen_c@@Base+0x23e8>
  408ea5:	mov    rdi,QWORD PTR [rbx+0xd0]
  408eac:	lea    rdx,[rip+0x2ce7c]        # 435d2f <_IO_stdin_used@@Base+0x8d2f>
  408eb3:	mov    esi,0x1
  408eb8:	xor    eax,eax
  408eba:	call   4053e0 <__fprintf_chk@plt>
  408ebf:	sub    rsp,0x8
  408ec3:	mov    r14,QWORD PTR [rsp+0x10]
  408ec8:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ecf:	push   r14
  408ed1:	mov    r9,r12
  408ed4:	mov    r8,r15
  408ed7:	mov    rcx,QWORD PTR [rsp+0x20]
  408edc:	lea    rdx,[rip+0x2ccc5]        # 435ba8 <_IO_stdin_used@@Base+0x8ba8>
  408ee3:	mov    esi,0x1
  408ee8:	xor    eax,eax
  408eea:	call   4053e0 <__fprintf_chk@plt>
  408eef:	push   rbp
  408ef0:	mov    rdi,QWORD PTR [rbx+0xd0]
  408ef7:	xor    eax,eax
  408ef9:	push   r14
  408efb:	mov    r9,r12
  408efe:	mov    r8,r12
  408f01:	mov    rcx,rbx
  408f04:	lea    rdx,[rip+0x25fbd]        # 42eec8 <_IO_stdin_used@@Base+0x1ec8>
  408f0b:	mov    esi,0x1
  408f10:	call   4053e0 <__fprintf_chk@plt>
  408f15:	add    rsp,0x20
  408f19:	cmp    WORD PTR [rsp+0x1e],0x3
  408f1f:	jne    409589 <__flatcc_fb_codegen_c@@Base+0x2b39>
  408f25:	mov    rbp,QWORD PTR [r13+0x28]
  408f29:	test   rbp,rbp
  408f2c:	je     409603 <__flatcc_fb_codegen_c@@Base+0x2bb3>
  408f32:	mov    QWORD PTR [rsp+0x10],r13
  408f37:	nop    WORD PTR [rax+rax*1+0x0]
  408f40:	mov    r14,QWORD PTR [rbp+0x68]
  408f44:	test   r14,r14
  408f47:	je     408fdf <__flatcc_fb_codegen_c@@Base+0x258f>
  408f4d:	mov    ecx,0x1
  408f52:	xor    edx,edx
  408f54:	nop    DWORD PTR [rax+0x0]
  408f58:	mov    rax,QWORD PTR [r14+0x8]
  408f5c:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f63:	cmp    QWORD PTR [rax+0x10],rdx
  408f67:	je     408f99 <__flatcc_fb_codegen_c@@Base+0x2549>
  408f69:	test   ecx,ecx
  408f6b:	lea    rdx,[rip+0x2cbd8]        # 435b4a <_IO_stdin_used@@Base+0x8b4a>
  408f72:	lea    rcx,[rip+0x3c1a5]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  408f79:	jne    408f82 <__flatcc_fb_codegen_c@@Base+0x2532>
  408f7b:	lea    rdx,[rip+0x2cbcf]        # 435b51 <_IO_stdin_used@@Base+0x8b51>
  408f82:	mov    esi,0x1
  408f87:	xor    eax,eax
  408f89:	call   4053e0 <__fprintf_chk@plt>
  408f8e:	mov    rax,QWORD PTR [r14+0x8]
  408f92:	mov    rdi,QWORD PTR [rbx+0xd0]
  408f99:	mov    rcx,QWORD PTR [rax+0x8]
  408f9d:	mov    r8,QWORD PTR [rax]
  408fa0:	lea    rdx,[rip+0x2db82]        # 436b29 <_IO_stdin_used@@Base+0x9b29>
  408fa7:	mov    esi,0x1
  408fac:	xor    eax,eax
  408fae:	call   4053e0 <__fprintf_chk@plt>
  408fb3:	mov    rax,QWORD PTR [r14+0x8]
  408fb7:	mov    r14,QWORD PTR [r14]
  408fba:	mov    rdx,QWORD PTR [rax+0x10]
  408fbe:	xor    ecx,ecx
  408fc0:	test   r14,r14
  408fc3:	jne    408f58 <__flatcc_fb_codegen_c@@Base+0x2508>
  408fc5:	mov    rdi,QWORD PTR [rbx+0xd0]
  408fcc:	lea    rdx,[rip+0x2cd5c]        # 435d2f <_IO_stdin_used@@Base+0x8d2f>
  408fd3:	mov    esi,0x1
  408fd8:	xor    eax,eax
  408fda:	call   4053e0 <__fprintf_chk@plt>
  408fdf:	mov    rax,QWORD PTR [rbp+0x8]
  408fe3:	mov    r15,QWORD PTR [rax]
  408fe6:	mov    r14,QWORD PTR [rax+0x8]
  408fea:	mov    rax,QWORD PTR [rsp+0x10]
  408fef:	mov    edx,DWORD PTR [rax+0x48]
  408ff2:	movzx  eax,WORD PTR [rbp+0x58]
  408ff6:	cmp    ax,0x4
  408ffa:	je     409448 <__flatcc_fb_codegen_c@@Base+0x29f8>
  409000:	jbe    409400 <__flatcc_fb_codegen_c@@Base+0x29b0>
  409006:	cmp    ax,0x5
  40900a:	jne    409330 <__flatcc_fb_codegen_c@@Base+0x28e0>
  409010:	cmp    edx,0x9
  409013:	ja     40987c <__flatcc_fb_codegen_c@@Base+0x2e2c>
  409019:	lea    rcx,[rip+0x2cee4]        # 435f04 <_IO_stdin_used@@Base+0x8f04>
  409020:	movsxd rax,DWORD PTR [rcx+rdx*4]
  409024:	add    rax,rcx
  409027:	notrack jmp rax
  40902a:	nop    WORD PTR [rax+rax*1+0x0]
  409030:	lea    r8,[rip+0x2caa0]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  409037:	mov    r9,QWORD PTR [rbp+0x48]
  40903b:	lea    r13,[rsp+0x110]
  409043:	lea    rcx,[rip+0x2cb25]        # 435b6f <_IO_stdin_used@@Base+0x8b6f>
  40904a:	mov    edx,0x64
  40904f:	mov    esi,0x1
  409054:	mov    rdi,r13
  409057:	xor    eax,eax
  409059:	call   405400 <__sprintf_chk@plt>
  40905e:	sub    rsp,0x8
  409062:	push   r13
  409064:	mov    rdi,QWORD PTR [rbx+0xd0]
  40906b:	mov    r9,r15
  40906e:	push   QWORD PTR [rsp+0x18]
  409072:	mov    r8d,r14d
  409075:	mov    rcx,r12
  409078:	push   r12
  40907a:	lea    rdx,[rip+0x25e77]        # 42eef8 <_IO_stdin_used@@Base+0x1ef8>
  409081:	mov    esi,0x1
  409086:	xor    eax,eax
  409088:	call   4053e0 <__fprintf_chk@plt>
  40908d:	mov    rbp,QWORD PTR [rbp+0x0]
  409091:	add    rsp,0x20
  409095:	test   rbp,rbp
  409098:	jne    408f40 <__flatcc_fb_codegen_c@@Base+0x24f0>
  40909e:	mov    rdi,QWORD PTR [rbx+0xd0]
  4090a5:	xor    eax,eax
  4090a7:	lea    rdx,[rip+0x3c06f]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  4090ae:	mov    esi,0x1
  4090b3:	mov    r13,QWORD PTR [rsp+0x10]
  4090b8:	call   4053e0 <__fprintf_chk@plt>
  4090bd:	cmp    WORD PTR [rsp+0x1e],0x3
  4090c3:	je     409620 <__flatcc_fb_codegen_c@@Base+0x2bd0>
  4090c9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4090d0:	mov    r8,r12
  4090d3:	mov    rcx,r12
  4090d6:	lea    rdx,[rip+0x25e3b]        # 42ef18 <_IO_stdin_used@@Base+0x1f18>
  4090dd:	mov    esi,0x1
  4090e2:	xor    eax,eax
  4090e4:	call   4053e0 <__fprintf_chk@plt>
  4090e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4090f0:	lea    rdx,[rip+0x2cae2]        # 435bd9 <_IO_stdin_used@@Base+0x8bd9>
  4090f7:	mov    esi,0x1
  4090fc:	xor    eax,eax
  4090fe:	call   4053e0 <__fprintf_chk@plt>
  409103:	mov    rbp,QWORD PTR [r13+0x28]
  409107:	test   rbp,rbp
  40910a:	je     4097cf <__flatcc_fb_codegen_c@@Base+0x2d7f>
  409110:	lea    r14,[rip+0x25eb1]        # 42efc8 <_IO_stdin_used@@Base+0x1fc8>
  409117:	jmp    409145 <__flatcc_fb_codegen_c@@Base+0x26f5>
  409119:	nop    DWORD PTR [rax+0x0]
  409120:	push   r9
  409122:	mov    rcx,r12
  409125:	mov    esi,0x1
  40912a:	push   r8
  40912c:	lea    rdx,[rip+0x25e5d]        # 42ef90 <_IO_stdin_used@@Base+0x1f90>
  409133:	xor    eax,eax
  409135:	call   4053e0 <__fprintf_chk@plt>
  40913a:	mov    rbp,QWORD PTR [rbp+0x0]
  40913e:	pop    rcx
  40913f:	pop    rsi
  409140:	test   rbp,rbp
  409143:	je     40917e <__flatcc_fb_codegen_c@@Base+0x272e>
  409145:	mov    rax,QWORD PTR [rbp+0x8]
  409149:	mov    rdi,QWORD PTR [rbx+0xd0]
  409150:	mov    r9,QWORD PTR [rax]
  409153:	mov    r8,QWORD PTR [rax+0x8]
  409157:	test   BYTE PTR [rbp+0x12],0x4
  40915b:	jne    409120 <__flatcc_fb_codegen_c@@Base+0x26d0>
  40915d:	push   r9
  40915f:	mov    rdx,r14
  409162:	mov    rcx,r12
  409165:	push   r8
  409167:	mov    esi,0x1
  40916c:	xor    eax,eax
  40916e:	call   4053e0 <__fprintf_chk@plt>
  409173:	mov    rbp,QWORD PTR [rbp+0x0]
  409177:	pop    rax
  409178:	pop    rdx
  409179:	test   rbp,rbp
  40917c:	jne    409145 <__flatcc_fb_codegen_c@@Base+0x26f5>
  40917e:	mov    rdi,QWORD PTR [rbx+0xd0]
  409185:	lea    rdx,[rip+0x25e64]        # 42eff0 <_IO_stdin_used@@Base+0x1ff0>
  40918c:	mov    esi,0x1
  409191:	xor    eax,eax
  409193:	call   4053e0 <__fprintf_chk@plt>
  409198:	mov    rdi,QWORD PTR [rbx+0xd0]
  40919f:	xor    eax,eax
  4091a1:	lea    rdx,[rip+0x3bf75]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  4091a8:	mov    esi,0x1
  4091ad:	call   4053e0 <__fprintf_chk@plt>
  4091b2:	cmp    WORD PTR [rsp+0x1e],0x3
  4091b8:	je     4096a0 <__flatcc_fb_codegen_c@@Base+0x2c50>
  4091be:	mov    rdi,QWORD PTR [rbx+0xd0]
  4091c5:	lea    rdx,[rip+0x25e4c]        # 42f018 <_IO_stdin_used@@Base+0x2018>
  4091cc:	mov    esi,0x1
  4091d1:	mov    r8,r12
  4091d4:	mov    rcx,r12
  4091d7:	xor    eax,eax
  4091d9:	call   4053e0 <__fprintf_chk@plt>
  4091de:	mov    rdi,QWORD PTR [rbx+0xd0]
  4091e5:	lea    rdx,[rip+0x2c9ed]        # 435bd9 <_IO_stdin_used@@Base+0x8bd9>
  4091ec:	mov    esi,0x1
  4091f1:	xor    eax,eax
  4091f3:	call   4053e0 <__fprintf_chk@plt>
  4091f8:	mov    rbp,QWORD PTR [r13+0x28]
  4091fc:	lea    r13,[rip+0x2ca01]        # 435c04 <_IO_stdin_used@@Base+0x8c04>
  409203:	test   rbp,rbp
  409206:	jne    40922c <__flatcc_fb_codegen_c@@Base+0x27dc>
  409208:	jmp    40925f <__flatcc_fb_codegen_c@@Base+0x280f>
  40920a:	nop    WORD PTR [rax+rax*1+0x0]
  409210:	lea    rdx,[rip+0x25e99]        # 42f0b0 <_IO_stdin_used@@Base+0x20b0>
  409217:	mov    esi,0x1
  40921c:	xor    eax,eax
  40921e:	call   4053e0 <__fprintf_chk@plt>
  409223:	mov    rbp,QWORD PTR [rbp+0x0]
  409227:	test   rbp,rbp
  40922a:	je     40925f <__flatcc_fb_codegen_c@@Base+0x280f>
  40922c:	mov    rax,QWORD PTR [rbp+0x8]
  409230:	mov    rdi,QWORD PTR [rbx+0xd0]
  409237:	mov    r9,QWORD PTR [rax]
  40923a:	mov    r8,QWORD PTR [rax+0x8]
  40923e:	mov    rcx,r12
  409241:	test   BYTE PTR [rbp+0x12],0x4
  409245:	jne    409210 <__flatcc_fb_codegen_c@@Base+0x27c0>
  409247:	mov    rdx,r13
  40924a:	mov    esi,0x1
  40924f:	xor    eax,eax
  409251:	call   4053e0 <__fprintf_chk@plt>
  409256:	mov    rbp,QWORD PTR [rbp+0x0]
  40925a:	test   rbp,rbp
  40925d:	jne    40922c <__flatcc_fb_codegen_c@@Base+0x27dc>
  40925f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409266:	lea    rdx,[rip+0x25e23]        # 42f090 <_IO_stdin_used@@Base+0x2090>
  40926d:	mov    esi,0x1
  409272:	xor    eax,eax
  409274:	call   4053e0 <__fprintf_chk@plt>
  409279:	mov    rdi,QWORD PTR [rbx+0xd0]
  409280:	xor    eax,eax
  409282:	lea    rdx,[rip+0x3be94]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  409289:	mov    esi,0x1
  40928e:	call   4053e0 <__fprintf_chk@plt>
  409293:	mov    rax,QWORD PTR [rsp+0x178]
  40929b:	xor    rax,QWORD PTR fs:0x28
  4092a4:	jne    409940 <__flatcc_fb_codegen_c@@Base+0x2ef0>
  4092aa:	add    rsp,0x188
  4092b1:	pop    rbx
  4092b2:	pop    rbp
  4092b3:	pop    r12
  4092b5:	pop    r13
  4092b7:	pop    r14
  4092b9:	pop    r15
  4092bb:	ret    
  4092bc:	nop    DWORD PTR [rax+0x0]
  4092c0:	lea    r8,[rip+0x2c819]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  4092c7:	jmp    409037 <__flatcc_fb_codegen_c@@Base+0x25e7>
  4092cc:	nop    DWORD PTR [rax+0x0]
  4092d0:	lea    r8,[rip+0x2c812]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  4092d7:	jmp    409037 <__flatcc_fb_codegen_c@@Base+0x25e7>
  4092dc:	nop    DWORD PTR [rax+0x0]
  4092e0:	lea    r8,[rip+0x2c7e8]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  4092e7:	jmp    409037 <__flatcc_fb_codegen_c@@Base+0x25e7>
  4092ec:	nop    DWORD PTR [rax+0x0]
  4092f0:	lea    r8,[rip+0x2c7e1]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  4092f7:	jmp    409037 <__flatcc_fb_codegen_c@@Base+0x25e7>
  4092fc:	nop    DWORD PTR [rax+0x0]
  409300:	lea    r8,[rip+0x2c7e1]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  409307:	jmp    409037 <__flatcc_fb_codegen_c@@Base+0x25e7>
  40930c:	nop    DWORD PTR [rax+0x0]
  409310:	lea    r8,[rip+0x2c7b7]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  409317:	jmp    409037 <__flatcc_fb_codegen_c@@Base+0x25e7>
  40931c:	nop    DWORD PTR [rax+0x0]
  409320:	lea    r8,[rip+0x2c7b8]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  409327:	jmp    409037 <__flatcc_fb_codegen_c@@Base+0x25e7>
  40932c:	nop    DWORD PTR [rax+0x0]
  409330:	cmp    ax,0x6
  409334:	jne    4098cc <__flatcc_fb_codegen_c@@Base+0x2e7c>
  40933a:	cmp    edx,0x9
  40933d:	ja     40987c <__flatcc_fb_codegen_c@@Base+0x2e2c>
  409343:	lea    rcx,[rip+0x2cbe2]        # 435f2c <_IO_stdin_used@@Base+0x8f2c>
  40934a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40934e:	add    rax,rcx
  409351:	notrack jmp rax
  409354:	nop    DWORD PTR [rax+0x0]
  409358:	lea    r8,[rip+0x2c778]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40935f:	lea    r13,[rsp+0x110]
  409367:	movzx  r9d,BYTE PTR [rbp+0x48]
  40936c:	lea    rcx,[rip+0x2c80e]        # 435b81 <_IO_stdin_used@@Base+0x8b81>
  409373:	mov    edx,0x64
  409378:	mov    esi,0x1
  40937d:	mov    rdi,r13
  409380:	xor    eax,eax
  409382:	call   405400 <__sprintf_chk@plt>
  409387:	jmp    40905e <__flatcc_fb_codegen_c@@Base+0x260e>
  40938c:	nop    DWORD PTR [rax+0x0]
  409390:	lea    r8,[rip+0x2c748]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  409397:	jmp    40935f <__flatcc_fb_codegen_c@@Base+0x290f>
  409399:	nop    DWORD PTR [rax+0x0]
  4093a0:	lea    r8,[rip+0x2c741]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  4093a7:	jmp    40935f <__flatcc_fb_codegen_c@@Base+0x290f>
  4093a9:	nop    DWORD PTR [rax+0x0]
  4093b0:	lea    r8,[rip+0x2c717]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  4093b7:	jmp    40935f <__flatcc_fb_codegen_c@@Base+0x290f>
  4093b9:	nop    DWORD PTR [rax+0x0]
  4093c0:	lea    r8,[rip+0x2c719]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  4093c7:	jmp    40935f <__flatcc_fb_codegen_c@@Base+0x290f>
  4093c9:	nop    DWORD PTR [rax+0x0]
  4093d0:	lea    r8,[rip+0x2c712]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  4093d7:	jmp    40935f <__flatcc_fb_codegen_c@@Base+0x290f>
  4093d9:	nop    DWORD PTR [rax+0x0]
  4093e0:	lea    r8,[rip+0x2c6e8]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  4093e7:	jmp    40935f <__flatcc_fb_codegen_c@@Base+0x290f>
  4093ec:	nop    DWORD PTR [rax+0x0]
  4093f0:	lea    r8,[rip+0x2c6e1]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  4093f7:	jmp    40935f <__flatcc_fb_codegen_c@@Base+0x290f>
  4093fc:	nop    DWORD PTR [rax+0x0]
  409400:	cmp    ax,0x3
  409404:	jne    4098cc <__flatcc_fb_codegen_c@@Base+0x2e7c>
  40940a:	cmp    edx,0xb
  40940d:	je     409500 <__flatcc_fb_codegen_c@@Base+0x2ab0>
  409413:	vmovsd xmm0,QWORD PTR [rbp+0x48]
  409418:	lea    r13,[rsp+0x110]
  409420:	lea    rcx,[rip+0x2c765]        # 435b8c <_IO_stdin_used@@Base+0x8b8c>
  409427:	mov    edx,0x64
  40942c:	mov    esi,0x1
  409431:	mov    rdi,r13
  409434:	mov    eax,0x1
  409439:	call   405400 <__sprintf_chk@plt>
  40943e:	jmp    40905e <__flatcc_fb_codegen_c@@Base+0x260e>
  409443:	nop    DWORD PTR [rax+rax*1+0x0]
  409448:	cmp    edx,0x9
  40944b:	ja     40987c <__flatcc_fb_codegen_c@@Base+0x2e2c>
  409451:	lea    rsi,[rip+0x2cafc]        # 435f54 <_IO_stdin_used@@Base+0x8f54>
  409458:	movsxd rax,DWORD PTR [rsi+rdx*4]
  40945c:	add    rax,rsi
  40945f:	notrack jmp rax
  409462:	nop    WORD PTR [rax+rax*1+0x0]
  409468:	lea    r8,[rip+0x2c668]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40946f:	lea    r13,[rsp+0x110]
  409477:	mov    r9,QWORD PTR [rbp+0x48]
  40947b:	lea    rcx,[rip+0x2c6f6]        # 435b78 <_IO_stdin_used@@Base+0x8b78>
  409482:	jmp    40904a <__flatcc_fb_codegen_c@@Base+0x25fa>
  409487:	nop    WORD PTR [rax+rax*1+0x0]
  409490:	lea    r8,[rip+0x2c648]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  409497:	jmp    40946f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  409499:	nop    DWORD PTR [rax+0x0]
  4094a0:	lea    r8,[rip+0x2c641]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  4094a7:	jmp    40946f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  4094a9:	nop    DWORD PTR [rax+0x0]
  4094b0:	lea    r8,[rip+0x2c617]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  4094b7:	jmp    40946f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  4094b9:	nop    DWORD PTR [rax+0x0]
  4094c0:	lea    r8,[rip+0x2c619]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  4094c7:	jmp    40946f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  4094c9:	nop    DWORD PTR [rax+0x0]
  4094d0:	lea    r8,[rip+0x2c612]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  4094d7:	jmp    40946f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  4094d9:	nop    DWORD PTR [rax+0x0]
  4094e0:	lea    r8,[rip+0x2c5e8]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  4094e7:	jmp    40946f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  4094e9:	nop    DWORD PTR [rax+0x0]
  4094f0:	lea    r8,[rip+0x2c5e1]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  4094f7:	jmp    40946f <__flatcc_fb_codegen_c@@Base+0x2a1f>
  4094fc:	nop    DWORD PTR [rax+0x0]
  409500:	vxorps xmm0,xmm0,xmm0
  409504:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbp+0x48]
  409509:	lea    r13,[rsp+0x110]
  409511:	vcvtss2sd xmm0,xmm0,xmm0
  409515:	lea    rcx,[rip+0x2c66c]        # 435b88 <_IO_stdin_used@@Base+0x8b88>
  40951c:	jmp    409427 <__flatcc_fb_codegen_c@@Base+0x29d7>
  409521:	nop    DWORD PTR [rax+0x0]
  409528:	sub    rsp,0x8
  40952c:	lea    r14,[rip+0x2c66a]        # 435b9d <_IO_stdin_used@@Base+0x8b9d>
  409533:	push   r14
  409535:	mov    rdi,QWORD PTR [rbx+0xd0]
  40953c:	mov    r9,r12
  40953f:	mov    rcx,QWORD PTR [rsp+0x20]
  409544:	mov    r8,r15
  409547:	lea    rdx,[rip+0x2c65a]        # 435ba8 <_IO_stdin_used@@Base+0x8ba8>
  40954e:	mov    esi,0x1
  409553:	xor    eax,eax
  409555:	call   4053e0 <__fprintf_chk@plt>
  40955a:	push   rbp
  40955b:	mov    rdi,QWORD PTR [rbx+0xd0]
  409562:	mov    r9,r12
  409565:	push   r14
  409567:	mov    r8,r12
  40956a:	mov    rcx,rbx
  40956d:	lea    rdx,[rip+0x25954]        # 42eec8 <_IO_stdin_used@@Base+0x1ec8>
  409574:	mov    esi,0x1
  409579:	xor    eax,eax
  40957b:	call   4053e0 <__fprintf_chk@plt>
  409580:	add    rsp,0x20
  409584:	mov    QWORD PTR [rsp+0x8],r14
  409589:	mov    rdi,QWORD PTR [rbx+0xd0]
  409590:	mov    r9,r12
  409593:	mov    r8,rbx
  409596:	mov    rcx,rbx
  409599:	lea    rdx,[rip+0x2c61f]        # 435bbf <_IO_stdin_used@@Base+0x8bbf>
  4095a0:	mov    esi,0x1
  4095a5:	xor    eax,eax
  4095a7:	call   4053e0 <__fprintf_chk@plt>
  4095ac:	mov    rbp,QWORD PTR [r13+0x28]
  4095b0:	test   rbp,rbp
  4095b3:	jne    408f32 <__flatcc_fb_codegen_c@@Base+0x24e2>
  4095b9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4095c0:	lea    rdx,[rip+0x3bb56]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  4095c7:	mov    esi,0x1
  4095cc:	xor    eax,eax
  4095ce:	call   4053e0 <__fprintf_chk@plt>
  4095d3:	jmp    4090c9 <__flatcc_fb_codegen_c@@Base+0x2679>
  4095d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4095e0:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4095e5:	mov    r14,QWORD PTR [r13+0x40]
  4095e9:	test   r14,r14
  4095ec:	je     409808 <__flatcc_fb_codegen_c@@Base+0x2db8>
  4095f2:	lea    rax,[rip+0x3ead4]        # 4480cd <fb_schema_table_missing@@Base+0x244d>
  4095f9:	mov    QWORD PTR [rsp+0x8],rax
  4095fe:	jmp    408e2e <__flatcc_fb_codegen_c@@Base+0x23de>
  409603:	mov    rdi,QWORD PTR [rbx+0xd0]
  40960a:	lea    rdx,[rip+0x3bb0c]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  409611:	mov    esi,0x1
  409616:	xor    eax,eax
  409618:	call   4053e0 <__fprintf_chk@plt>
  40961d:	nop    DWORD PTR [rax]
  409620:	mov    rdi,QWORD PTR [rbx+0xd0]
  409627:	mov    r8,r12
  40962a:	mov    rcx,r12
  40962d:	lea    rdx,[rip+0x25924]        # 42ef58 <_IO_stdin_used@@Base+0x1f58>
  409634:	mov    esi,0x1
  409639:	xor    eax,eax
  40963b:	call   4053e0 <__fprintf_chk@plt>
  409640:	mov    rdi,QWORD PTR [rbx+0xd0]
  409647:	lea    rdx,[rip+0x2c5a0]        # 435bee <_IO_stdin_used@@Base+0x8bee>
  40964e:	mov    esi,0x1
  409653:	xor    eax,eax
  409655:	call   4053e0 <__fprintf_chk@plt>
  40965a:	mov    rbp,QWORD PTR [r13+0x28]
  40965e:	test   rbp,rbp
  409661:	jne    409110 <__flatcc_fb_codegen_c@@Base+0x26c0>
  409667:	mov    rdi,QWORD PTR [rbx+0xd0]
  40966e:	lea    rdx,[rip+0x2597b]        # 42eff0 <_IO_stdin_used@@Base+0x1ff0>
  409675:	mov    esi,0x1
  40967a:	xor    eax,eax
  40967c:	call   4053e0 <__fprintf_chk@plt>
  409681:	mov    rdi,QWORD PTR [rbx+0xd0]
  409688:	lea    rdx,[rip+0x3ba8e]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40968f:	mov    esi,0x1
  409694:	xor    eax,eax
  409696:	call   4053e0 <__fprintf_chk@plt>
  40969b:	nop    DWORD PTR [rax+rax*1+0x0]
  4096a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4096a7:	mov    r8,r12
  4096aa:	mov    rcx,r12
  4096ad:	lea    rdx,[rip+0x259a4]        # 42f058 <_IO_stdin_used@@Base+0x2058>
  4096b4:	mov    esi,0x1
  4096b9:	xor    eax,eax
  4096bb:	call   4053e0 <__fprintf_chk@plt>
  4096c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4096c7:	lea    rdx,[rip+0x2c520]        # 435bee <_IO_stdin_used@@Base+0x8bee>
  4096ce:	mov    esi,0x1
  4096d3:	xor    eax,eax
  4096d5:	call   4053e0 <__fprintf_chk@plt>
  4096da:	jmp    4091f8 <__flatcc_fb_codegen_c@@Base+0x27a8>
  4096df:	lea    rax,[rip+0x3ba38]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4096e6:	mov    QWORD PTR [rsp+0x10],rax
  4096eb:	lea    r15,[rip+0x2c3d5]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  4096f2:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  4096f7:	lea    rax,[rip+0x3ba20]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4096fe:	mov    QWORD PTR [rsp+0x10],rax
  409703:	lea    r15,[rip+0x2c36d]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40970a:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  40970f:	lea    rax,[rip+0x3ba08]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409716:	mov    QWORD PTR [rsp+0x10],rax
  40971b:	lea    r15,[rip+0x2c37b]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  409722:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  409727:	lea    rax,[rip+0x3b9f0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40972e:	mov    QWORD PTR [rsp+0x10],rax
  409733:	lea    r15,[rip+0x2c353]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40973a:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  40973f:	lea    rax,[rip+0x3b9d8]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409746:	mov    QWORD PTR [rsp+0x10],rax
  40974b:	lea    r15,[rip+0x2c367]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  409752:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  409757:	lea    rax,[rip+0x3b9c0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40975e:	mov    QWORD PTR [rsp+0x10],rax
  409763:	lea    r15,[rip+0x2c31d]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40976a:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  40976f:	lea    rax,[rip+0x3b9a8]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409776:	mov    QWORD PTR [rsp+0x10],rax
  40977b:	lea    r15,[rip+0x2c2f6]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  409782:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  409787:	lea    rax,[rip+0x3b990]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40978e:	mov    QWORD PTR [rsp+0x10],rax
  409793:	lea    r15,[rip+0x2c304]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40979a:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  40979f:	lea    rax,[rip+0x3b978]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4097a6:	mov    QWORD PTR [rsp+0x10],rax
  4097ab:	lea    r15,[rip+0x2c2dc]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  4097b2:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  4097b7:	lea    rax,[rip+0x3b960]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4097be:	mov    QWORD PTR [rsp+0x10],rax
  4097c3:	lea    r15,[rip+0x2c2f0]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  4097ca:	jmp    408dec <__flatcc_fb_codegen_c@@Base+0x239c>
  4097cf:	mov    rdi,QWORD PTR [rbx+0xd0]
  4097d6:	lea    rdx,[rip+0x25813]        # 42eff0 <_IO_stdin_used@@Base+0x1ff0>
  4097dd:	mov    esi,0x1
  4097e2:	xor    eax,eax
  4097e4:	call   4053e0 <__fprintf_chk@plt>
  4097e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  4097f0:	lea    rdx,[rip+0x3b926]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  4097f7:	mov    esi,0x1
  4097fc:	xor    eax,eax
  4097fe:	call   4053e0 <__fprintf_chk@plt>
  409803:	jmp    4091be <__flatcc_fb_codegen_c@@Base+0x276e>
  409808:	sub    rsp,0x8
  40980c:	lea    r10,[rip+0x3e8ba]        # 4480cd <fb_schema_table_missing@@Base+0x244d>
  409813:	push   r10
  409815:	mov    rdi,QWORD PTR [rbx+0xd0]
  40981c:	mov    r9,r12
  40981f:	mov    rcx,QWORD PTR [rsp+0x20]
  409824:	mov    r8,r15
  409827:	lea    rdx,[rip+0x2c37a]        # 435ba8 <_IO_stdin_used@@Base+0x8ba8>
  40982e:	mov    esi,0x1
  409833:	xor    eax,eax
  409835:	call   4053e0 <__fprintf_chk@plt>
  40983a:	push   rbp
  40983b:	lea    r10,[rip+0x3e88b]        # 4480cd <fb_schema_table_missing@@Base+0x244d>
  409842:	mov    rdi,QWORD PTR [rbx+0xd0]
  409849:	push   r10
  40984b:	mov    r9,r12
  40984e:	mov    r8,r12
  409851:	mov    rcx,rbx
  409854:	lea    rdx,[rip+0x2566d]        # 42eec8 <_IO_stdin_used@@Base+0x1ec8>
  40985b:	mov    esi,0x1
  409860:	xor    eax,eax
  409862:	call   4053e0 <__fprintf_chk@plt>
  409867:	add    rsp,0x20
  40986b:	lea    r10,[rip+0x3e85b]        # 4480cd <fb_schema_table_missing@@Base+0x244d>
  409872:	mov    QWORD PTR [rsp+0x8],r10
  409877:	jmp    408f25 <__flatcc_fb_codegen_c@@Base+0x24d5>
  40987c:	mov    rax,QWORD PTR [rip+0x47765]        # 450fe8 <stderr@GLIBC_2.2.5>
  409883:	lea    rcx,[rip+0x24a1e]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40988a:	mov    rdi,QWORD PTR [rax]
  40988d:	lea    rdx,[rip+0x2c1bf]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  409894:	mov    esi,0x1
  409899:	lea    r9,[rip+0x249d0]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  4098a0:	mov    r8d,0xe2
  4098a6:	xor    eax,eax
  4098a8:	call   4053e0 <__fprintf_chk@plt>
  4098ad:	lea    rcx,[rip+0x2c764]        # 436018 <_IO_stdin_used@@Base+0x9018>
  4098b4:	mov    edx,0xe2
  4098b9:	lea    rsi,[rip+0x249e8]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  4098c0:	lea    rdi,[rip+0x2d252]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4098c7:	call   4052e0 <__assert_fail@plt>
  4098cc:	mov    rax,QWORD PTR [rip+0x47715]        # 450fe8 <stderr@GLIBC_2.2.5>
  4098d3:	lea    rcx,[rip+0x249ce]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  4098da:	mov    rdi,QWORD PTR [rax]
  4098dd:	lea    rdx,[rip+0x2c16f]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  4098e4:	mov    esi,0x1
  4098e9:	lea    r9,[rip+0x24980]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  4098f0:	mov    r8d,0x104
  4098f6:	xor    eax,eax
  4098f8:	call   4053e0 <__fprintf_chk@plt>
  4098fd:	lea    rcx,[rip+0x2c724]        # 436028 <_IO_stdin_used@@Base+0x9028>
  409904:	mov    edx,0x104
  409909:	lea    rsi,[rip+0x24998]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  409910:	lea    rdi,[rip+0x2d202]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  409917:	call   4052e0 <__assert_fail@plt>
  40991c:	call   406c90 <__flatcc_fb_codegen_c@@Base+0x240>
  409921:	lea    rcx,[rip+0x2c710]        # 436038 <_IO_stdin_used@@Base+0x9038>
  409928:	mov    edx,0x4b5
  40992d:	lea    rsi,[rip+0x249dc]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  409934:	lea    rdi,[rip+0x2556d]        # 42eea8 <_IO_stdin_used@@Base+0x1ea8>
  40993b:	call   4052e0 <__assert_fail@plt>
  409940:	call   4052c0 <__stack_chk_fail@plt>
  409945:	lea    rcx,[rip+0x2c6ec]        # 436038 <_IO_stdin_used@@Base+0x9038>
  40994c:	mov    edx,0x4b4
  409951:	lea    rsi,[rip+0x249b8]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  409958:	lea    rdi,[rip+0x25509]        # 42ee68 <_IO_stdin_used@@Base+0x1e68>
  40995f:	call   4052e0 <__assert_fail@plt>
  409964:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40996f:	nop
  409970:	push   r15
  409972:	mov    ecx,0x1d
  409977:	push   r14
  409979:	push   r13
  40997b:	push   r12
  40997d:	push   rbp
  40997e:	push   rbx
  40997f:	mov    rbx,rdi
  409982:	sub    rsp,0x218
  409989:	mov    QWORD PTR [rsp+0x8],rsi
  40998e:	mov    rax,QWORD PTR fs:0x28
  409997:	mov    QWORD PTR [rsp+0x208],rax
  40999f:	xor    eax,eax
  4099a1:	mov    rax,QWORD PTR [rdi+0xe0]
  4099a8:	lea    rdi,[rsp+0x30]
  4099ad:	mov    r14d,DWORD PTR [rax+0xa4]
  4099b4:	xor    eax,eax
  4099b6:	mov    QWORD PTR [rsp+0x20],rdi
  4099bb:	cmp    WORD PTR [rsi+0x10],0x1
  4099c0:	rep stos QWORD PTR es:[rdi],rax
  4099c3:	lea    rdi,[rsp+0x120]
  4099cb:	mov    ecx,0x1d
  4099d0:	mov    QWORD PTR [rsp+0x10],rdi
  4099d5:	rep stos QWORD PTR es:[rdi],rax
  4099d8:	jne    40a865 <__flatcc_fb_codegen_c@@Base+0x3e15>
  4099de:	mov    rax,QWORD PTR [rsp+0x8]
  4099e3:	cmp    WORD PTR [rax+0xb0],0x0
  4099eb:	je     40a038 <__flatcc_fb_codegen_c@@Base+0x35e8>
  4099f1:	mov    rax,QWORD PTR [rsp+0x8]
  4099f6:	cmp    QWORD PTR [rax+0xb8],0x0
  4099fe:	jne    409a0e <__flatcc_fb_codegen_c@@Base+0x2fbe>
  409a00:	cmp    QWORD PTR [rax+0xa8],0x0
  409a08:	jne    40a846 <__flatcc_fb_codegen_c@@Base+0x3df6>
  409a0e:	mov    r15,QWORD PTR [rsp+0x8]
  409a13:	mov    rdx,QWORD PTR [rsp+0x20]
  409a18:	mov    rdi,QWORD PTR [r15+0x18]
  409a1c:	mov    rsi,r15
  409a1f:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  409a24:	mov    rbp,QWORD PTR [r15+0x40]
  409a28:	test   rbp,rbp
  409a2b:	je     409ac8 <__flatcc_fb_codegen_c@@Base+0x3078>
  409a31:	mov    ecx,0x1
  409a36:	xor    edx,edx
  409a38:	nop    DWORD PTR [rax+rax*1+0x0]
  409a40:	mov    rax,QWORD PTR [rbp+0x8]
  409a44:	mov    rdi,QWORD PTR [rbx+0xd0]
  409a4b:	cmp    QWORD PTR [rax+0x10],rdx
  409a4f:	je     409a81 <__flatcc_fb_codegen_c@@Base+0x3031>
  409a51:	test   ecx,ecx
  409a53:	lea    rdx,[rip+0x2c0f0]        # 435b4a <_IO_stdin_used@@Base+0x8b4a>
  409a5a:	lea    rcx,[rip+0x3b6bd]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409a61:	jne    409a6a <__flatcc_fb_codegen_c@@Base+0x301a>
  409a63:	lea    rdx,[rip+0x2c0e7]        # 435b51 <_IO_stdin_used@@Base+0x8b51>
  409a6a:	mov    esi,0x1
  409a6f:	xor    eax,eax
  409a71:	call   4053e0 <__fprintf_chk@plt>
  409a76:	mov    rax,QWORD PTR [rbp+0x8]
  409a7a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409a81:	mov    rcx,QWORD PTR [rax+0x8]
  409a85:	mov    r8,QWORD PTR [rax]
  409a88:	lea    rdx,[rip+0x2d09a]        # 436b29 <_IO_stdin_used@@Base+0x9b29>
  409a8f:	mov    esi,0x1
  409a94:	xor    eax,eax
  409a96:	call   4053e0 <__fprintf_chk@plt>
  409a9b:	mov    rax,QWORD PTR [rbp+0x8]
  409a9f:	mov    rbp,QWORD PTR [rbp+0x0]
  409aa3:	mov    rdx,QWORD PTR [rax+0x10]
  409aa7:	xor    ecx,ecx
  409aa9:	test   rbp,rbp
  409aac:	jne    409a40 <__flatcc_fb_codegen_c@@Base+0x2ff0>
  409aae:	mov    rdi,QWORD PTR [rbx+0xd0]
  409ab5:	lea    rdx,[rip+0x2c273]        # 435d2f <_IO_stdin_used@@Base+0x8d2f>
  409abc:	mov    esi,0x1
  409ac1:	xor    eax,eax
  409ac3:	call   4053e0 <__fprintf_chk@plt>
  409ac8:	mov    rax,QWORD PTR [rsp+0x8]
  409acd:	mov    rdi,QWORD PTR [rbx+0xd0]
  409ad4:	cmp    QWORD PTR [rax+0xb8],0x0
  409adc:	je     40a4a0 <__flatcc_fb_codegen_c@@Base+0x3a50>
  409ae2:	test   r14d,r14d
  409ae5:	jne    40a530 <__flatcc_fb_codegen_c@@Base+0x3ae0>
  409aeb:	mov    rcx,QWORD PTR [rsp+0x20]
  409af0:	lea    rdx,[rip+0x2c141]        # 435c38 <_IO_stdin_used@@Base+0x8c38>
  409af7:	mov    esi,0x1
  409afc:	xor    eax,eax
  409afe:	call   4053e0 <__fprintf_chk@plt>
  409b03:	mov    rax,QWORD PTR [rsp+0x8]
  409b08:	mov    r15,QWORD PTR [rax+0x28]
  409b0c:	test   r15,r15
  409b0f:	je     40a480 <__flatcc_fb_codegen_c@@Base+0x3a30>
  409b15:	mov    DWORD PTR [rsp+0x18],0x0
  409b1d:	mov    DWORD PTR [rsp+0x2c],0x0
  409b25:	xor    ebp,ebp
  409b27:	nop    WORD PTR [rax+rax*1+0x0]
  409b30:	mov    r12,QWORD PTR [r15+0x68]
  409b34:	test   r12,r12
  409b37:	je     409bd3 <__flatcc_fb_codegen_c@@Base+0x3183>
  409b3d:	mov    ecx,0x1
  409b42:	xor    edx,edx
  409b44:	nop    DWORD PTR [rax+0x0]
  409b48:	mov    rax,QWORD PTR [r12+0x8]
  409b4d:	mov    rdi,QWORD PTR [rbx+0xd0]
  409b54:	cmp    QWORD PTR [rax+0x10],rdx
  409b58:	je     409b8b <__flatcc_fb_codegen_c@@Base+0x313b>
  409b5a:	test   ecx,ecx
  409b5c:	lea    rdx,[rip+0x2bfe7]        # 435b4a <_IO_stdin_used@@Base+0x8b4a>
  409b63:	lea    rcx,[rip+0x3b5f4]        # 44515e <_IO_stdin_used@@Base+0x1815e>
  409b6a:	jne    409b73 <__flatcc_fb_codegen_c@@Base+0x3123>
  409b6c:	lea    rdx,[rip+0x2bfde]        # 435b51 <_IO_stdin_used@@Base+0x8b51>
  409b73:	mov    esi,0x1
  409b78:	xor    eax,eax
  409b7a:	call   4053e0 <__fprintf_chk@plt>
  409b7f:	mov    rax,QWORD PTR [r12+0x8]
  409b84:	mov    rdi,QWORD PTR [rbx+0xd0]
  409b8b:	mov    rcx,QWORD PTR [rax+0x8]
  409b8f:	mov    r8,QWORD PTR [rax]
  409b92:	lea    rdx,[rip+0x2cf90]        # 436b29 <_IO_stdin_used@@Base+0x9b29>
  409b99:	mov    esi,0x1
  409b9e:	xor    eax,eax
  409ba0:	call   4053e0 <__fprintf_chk@plt>
  409ba5:	mov    rax,QWORD PTR [r12+0x8]
  409baa:	mov    r12,QWORD PTR [r12]
  409bae:	mov    rdx,QWORD PTR [rax+0x10]
  409bb2:	xor    ecx,ecx
  409bb4:	test   r12,r12
  409bb7:	jne    409b48 <__flatcc_fb_codegen_c@@Base+0x30f8>
  409bb9:	mov    rdi,QWORD PTR [rbx+0xd0]
  409bc0:	lea    rdx,[rip+0x2c168]        # 435d2f <_IO_stdin_used@@Base+0x8d2f>
  409bc7:	mov    esi,0x1
  409bcc:	xor    eax,eax
  409bce:	call   4053e0 <__fprintf_chk@plt>
  409bd3:	mov    rax,QWORD PTR [r15+0x8]
  409bd7:	mov    r12,QWORD PTR [rax]
  409bda:	mov    r13,QWORD PTR [rax+0x8]
  409bde:	test   rbp,rbp
  409be1:	jne    40a130 <__flatcc_fb_codegen_c@@Base+0x36e0>
  409be7:	mov    rax,QWORD PTR [rsp+0x8]
  409bec:	movzx  r11d,WORD PTR [rax+0xb0]
  409bf4:	test   r14d,r14d
  409bf7:	je     40a0e8 <__flatcc_fb_codegen_c@@Base+0x3698>
  409bfd:	mov    r8d,DWORD PTR [r15+0x78]
  409c01:	sub    r8d,ebp
  409c04:	jne    40a168 <__flatcc_fb_codegen_c@@Base+0x3718>
  409c0a:	test   BYTE PTR [r15+0x70],0x4
  409c0f:	jne    40a1a2 <__flatcc_fb_codegen_c@@Base+0x3752>
  409c15:	movzx  eax,WORD PTR [r15+0x28]
  409c1a:	cmp    ax,0x8
  409c1e:	jne    40a068 <__flatcc_fb_codegen_c@@Base+0x3618>
  409c24:	mov    eax,DWORD PTR [r15+0x18]
  409c28:	cmp    eax,0x5
  409c2b:	je     40a1d0 <__flatcc_fb_codegen_c@@Base+0x3780>
  409c31:	cmp    eax,0xb
  409c34:	ja     40a727 <__flatcc_fb_codegen_c@@Base+0x3cd7>
  409c3a:	lea    rsi,[rip+0x2c33b]        # 435f7c <_IO_stdin_used@@Base+0x8f7c>
  409c41:	movsxd rax,DWORD PTR [rsi+rax*4]
  409c45:	add    rax,rsi
  409c48:	notrack jmp rax
  409c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  409c50:	lea    rcx,[rip+0x3b4c7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409c57:	lea    r8,[rip+0x2be69]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  409c5e:	xchg   ax,ax
  409c60:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c67:	test   r14d,r14d
  409c6a:	je     409f50 <__flatcc_fb_codegen_c@@Base+0x3500>
  409c70:	lea    rdx,[rip+0x2bfec]        # 435c63 <_IO_stdin_used@@Base+0x8c63>
  409c77:	mov    esi,0x1
  409c7c:	xor    eax,eax
  409c7e:	call   4053e0 <__fprintf_chk@plt>
  409c83:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c8a:	mov    r8,r12
  409c8d:	mov    ecx,r13d
  409c90:	lea    rdx,[rip+0x2c018]        # 435caf <_IO_stdin_used@@Base+0x8caf>
  409c97:	mov    esi,0x1
  409c9c:	xor    eax,eax
  409c9e:	call   4053e0 <__fprintf_chk@plt>
  409ca3:	mov    rbp,QWORD PTR [r15+0x80]
  409caa:	add    ebp,DWORD PTR [r15+0x78]
  409cae:	mov    r15,QWORD PTR [r15]
  409cb1:	test   r15,r15
  409cb4:	jne    409b30 <__flatcc_fb_codegen_c@@Base+0x30e0>
  409cba:	test   r14d,r14d
  409cbd:	je     40a480 <__flatcc_fb_codegen_c@@Base+0x3a30>
  409cc3:	mov    rax,QWORD PTR [rsp+0x8]
  409cc8:	mov    rdi,QWORD PTR [rbx+0xd0]
  409ccf:	mov    rax,QWORD PTR [rax+0xb8]
  409cd6:	mov    QWORD PTR [rsp+0x18],rax
  409cdb:	mov    r8d,DWORD PTR [rsp+0x18]
  409ce0:	sub    r8d,ebp
  409ce3:	jne    40a704 <__flatcc_fb_codegen_c@@Base+0x3cb4>
  409ce9:	lea    rdx,[rip+0x2ce85]        # 436b75 <_IO_stdin_used@@Base+0x9b75>
  409cf0:	mov    esi,0x1
  409cf5:	xor    eax,eax
  409cf7:	call   4053e0 <__fprintf_chk@plt>
  409cfc:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d03:	lea    rdx,[rip+0x2bfc4]        # 435cce <_IO_stdin_used@@Base+0x8cce>
  409d0a:	mov    esi,0x1
  409d0f:	xor    eax,eax
  409d11:	call   4053e0 <__fprintf_chk@plt>
  409d16:	mov    rax,QWORD PTR [rsp+0x8]
  409d1b:	mov    r14,QWORD PTR [rsp+0x20]
  409d20:	mov    r8,QWORD PTR [rax+0xb8]
  409d27:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d2e:	mov    rcx,r14
  409d31:	lea    rdx,[rip+0x255e0]        # 42f318 <_IO_stdin_used@@Base+0x2318>
  409d38:	mov    esi,0x1
  409d3d:	xor    eax,eax
  409d3f:	call   4053e0 <__fprintf_chk@plt>
  409d44:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d4b:	mov    r9,r14
  409d4e:	mov    r8,r14
  409d51:	mov    rcx,r14
  409d54:	lea    rdx,[rip+0x255fd]        # 42f358 <_IO_stdin_used@@Base+0x2358>
  409d5b:	mov    esi,0x1
  409d60:	xor    eax,eax
  409d62:	call   4053e0 <__fprintf_chk@plt>
  409d67:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d6e:	mov    r9,r14
  409d71:	mov    r8,r14
  409d74:	mov    rcx,r14
  409d77:	lea    rdx,[rip+0x25632]        # 42f3b0 <_IO_stdin_used@@Base+0x23b0>
  409d7e:	mov    esi,0x1
  409d83:	xor    eax,eax
  409d85:	call   4053e0 <__fprintf_chk@plt>
  409d8a:	sub    rsp,0x8
  409d8e:	push   rbx
  409d8f:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d96:	mov    r9,r14
  409d99:	mov    rcx,r14
  409d9c:	mov    r8,r14
  409d9f:	lea    rdx,[rip+0x25652]        # 42f3f8 <_IO_stdin_used@@Base+0x23f8>
  409da6:	mov    esi,0x1
  409dab:	xor    eax,eax
  409dad:	call   4053e0 <__fprintf_chk@plt>
  409db2:	pop    rbp
  409db3:	pop    r12
  409db5:	mov    r15,QWORD PTR [rsp+0x8]
  409dba:	mov    r14,QWORD PTR [rsp+0x20]
  409dbf:	mov    rdi,QWORD PTR [rbx+0xd0]
  409dc6:	mov    r8,QWORD PTR [r15+0xb8]
  409dcd:	mov    rcx,r14
  409dd0:	lea    rdx,[rip+0x25679]        # 42f450 <_IO_stdin_used@@Base+0x2450>
  409dd7:	mov    esi,0x1
  409ddc:	xor    eax,eax
  409dde:	call   4053e0 <__fprintf_chk@plt>
  409de3:	mov    rdi,QWORD PTR [rbx+0xd0]
  409dea:	mov    r9,rbx
  409ded:	mov    r8,r14
  409df0:	mov    rcx,r14
  409df3:	lea    rdx,[rip+0x2475e]        # 42e558 <_IO_stdin_used@@Base+0x1558>
  409dfa:	mov    esi,0x1
  409dff:	xor    eax,eax
  409e01:	call   4053e0 <__fprintf_chk@plt>
  409e06:	mov    rdi,QWORD PTR [rbx+0xd0]
  409e0d:	mov    r8,r14
  409e10:	mov    rcx,rbx
  409e13:	lea    rdx,[rip+0x2be9c]        # 435cb6 <_IO_stdin_used@@Base+0x8cb6>
  409e1a:	mov    esi,0x1
  409e1f:	xor    eax,eax
  409e21:	call   4053e0 <__fprintf_chk@plt>
  409e26:	mov    rdi,QWORD PTR [rbx+0xd0]
  409e2d:	lea    rdx,[rip+0x3b2e9]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  409e34:	mov    esi,0x1
  409e39:	xor    eax,eax
  409e3b:	call   4053e0 <__fprintf_chk@plt>
  409e40:	mov    rbp,QWORD PTR [r15+0x28]
  409e44:	xor    r13d,r13d
  409e47:	xor    r12d,r12d
  409e4a:	test   rbp,rbp
  409e4d:	je     40a1e0 <__flatcc_fb_codegen_c@@Base+0x3790>
  409e53:	mov    DWORD PTR [rsp+0x8],r13d
  409e58:	mov    r14,QWORD PTR [rsp+0x10]
  409e5d:	jmp    409edd <__flatcc_fb_codegen_c@@Base+0x348d>
  409e5f:	nop
  409e60:	cmp    dx,0xe
  409e64:	jne    409ea0 <__flatcc_fb_codegen_c@@Base+0x3450>
  409e66:	mov    rsi,QWORD PTR [rbp+0x18]
  409e6a:	mov    rdx,r14
  409e6d:	mov    rdi,QWORD PTR [rsi+0x18]
  409e71:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  409e76:	mov    rdx,QWORD PTR [rbp+0x18]
  409e7a:	movzx  eax,WORD PTR [rdx+0x10]
  409e7e:	cmp    ax,0x1
  409e82:	je     40a448 <__flatcc_fb_codegen_c@@Base+0x39f8>
  409e88:	cmp    ax,0x3
  409e8c:	je     40a278 <__flatcc_fb_codegen_c@@Base+0x3828>
  409e92:	movzx  eax,WORD PTR [rbp+0x70]
  409e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ea0:	test   al,0x80
  409ea2:	je     409ed0 <__flatcc_fb_codegen_c@@Base+0x3480>
  409ea4:	test   r12d,r12d
  409ea7:	jne    409ed0 <__flatcc_fb_codegen_c@@Base+0x3480>
  409ea9:	mov    rdi,QWORD PTR [rbx+0xd0]
  409eb0:	lea    rdx,[rip+0x24ea1]        # 42ed58 <_IO_stdin_used@@Base+0x1d58>
  409eb7:	mov    esi,0x1
  409ebc:	xor    eax,eax
  409ebe:	call   4053e0 <__fprintf_chk@plt>
  409ec3:	mov    DWORD PTR [rsp+0x8],0x1
  409ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  409ed0:	mov    rbp,QWORD PTR [rbp+0x0]
  409ed4:	test   rbp,rbp
  409ed7:	je     40a1e0 <__flatcc_fb_codegen_c@@Base+0x3790>
  409edd:	movzx  eax,WORD PTR [rbp+0x70]
  409ee1:	test   al,0x4
  409ee3:	jne    409ed0 <__flatcc_fb_codegen_c@@Base+0x3480>
  409ee5:	mov    rdx,QWORD PTR [rbp+0x8]
  409ee9:	mov    r15,QWORD PTR [rdx]
  409eec:	mov    r13,QWORD PTR [rdx+0x8]
  409ef0:	movzx  edx,WORD PTR [rbp+0x28]
  409ef4:	cmp    dx,0x8
  409ef8:	jne    409e60 <__flatcc_fb_codegen_c@@Base+0x3410>
  409efe:	mov    eax,DWORD PTR [rbp+0x18]
  409f01:	cmp    eax,0x5
  409f04:	je     40a228 <__flatcc_fb_codegen_c@@Base+0x37d8>
  409f0a:	cmp    eax,0xb
  409f0d:	ja     40a889 <__flatcc_fb_codegen_c@@Base+0x3e39>
  409f13:	lea    rdx,[rip+0x2c092]        # 435fac <_IO_stdin_used@@Base+0x8fac>
  409f1a:	movsxd rax,DWORD PTR [rdx+rax*4]
  409f1e:	add    rax,rdx
  409f21:	notrack jmp rax
  409f24:	nop    DWORD PTR [rax+0x0]
  409f28:	lea    rcx,[rip+0x3b1ef]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409f2f:	lea    r8,[rip+0x2bb84]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  409f36:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f3d:	test   r14d,r14d
  409f40:	jne    409c70 <__flatcc_fb_codegen_c@@Base+0x3220>
  409f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f50:	mov    r9,r8
  409f53:	lea    rdx,[rip+0x2bd13]        # 435c6d <_IO_stdin_used@@Base+0x8c6d>
  409f5a:	mov    r8,rcx
  409f5d:	mov    esi,0x1
  409f62:	mov    ecx,r11d
  409f65:	xor    eax,eax
  409f67:	call   4053e0 <__fprintf_chk@plt>
  409f6c:	jmp    409c83 <__flatcc_fb_codegen_c@@Base+0x3233>
  409f71:	nop    DWORD PTR [rax+0x0]
  409f78:	lea    rcx,[rip+0x3b19f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409f7f:	lea    r8,[rip+0x2bb18]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  409f86:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  409f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  409f90:	lea    rcx,[rip+0x3b187]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409f97:	lea    r8,[rip+0x2bada]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  409f9e:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  409fa3:	nop    DWORD PTR [rax+rax*1+0x0]
  409fa8:	lea    rcx,[rip+0x3b16f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409faf:	lea    r8,[rip+0x2bad8]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  409fb6:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  409fbb:	nop    DWORD PTR [rax+rax*1+0x0]
  409fc0:	lea    rcx,[rip+0x3b157]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409fc7:	lea    r8,[rip+0x2bab9]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  409fce:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  409fd3:	nop    DWORD PTR [rax+rax*1+0x0]
  409fd8:	lea    rcx,[rip+0x3b13f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409fdf:	lea    r8,[rip+0x2bad3]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  409fe6:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  409feb:	nop    DWORD PTR [rax+rax*1+0x0]
  409ff0:	lea    rcx,[rip+0x3b127]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  409ff7:	lea    r8,[rip+0x2ba8f]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  409ffe:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  40a003:	nop    DWORD PTR [rax+rax*1+0x0]
  40a008:	lea    rcx,[rip+0x3b10f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a00f:	lea    r8,[rip+0x2ba87]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40a016:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  40a01b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a020:	lea    rcx,[rip+0x3b0f7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a027:	lea    r8,[rip+0x2ba49]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40a02e:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  40a033:	nop    DWORD PTR [rax+rax*1+0x0]
  40a038:	cmp    QWORD PTR [rax+0xa8],0x0
  40a040:	je     409a0e <__flatcc_fb_codegen_c@@Base+0x2fbe>
  40a046:	lea    rcx,[rip+0x2c03b]        # 436088 <_IO_stdin_used@@Base+0x9088>
  40a04d:	mov    edx,0x3a9
  40a052:	lea    rsi,[rip+0x242b7]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  40a059:	lea    rdi,[rip+0x250a0]        # 42f100 <_IO_stdin_used@@Base+0x2100>
  40a060:	call   4052e0 <__assert_fail@plt>
  40a065:	nop    DWORD PTR [rax]
  40a068:	cmp    ax,0xe
  40a06c:	jne    40a777 <__flatcc_fb_codegen_c@@Base+0x3d27>
  40a072:	mov    rsi,QWORD PTR [r15+0x18]
  40a076:	movzx  eax,WORD PTR [rsi+0x10]
  40a07a:	mov    edx,eax
  40a07c:	and    edx,0xfffffffd
  40a07f:	cmp    dx,0x1
  40a083:	jne    40a7e8 <__flatcc_fb_codegen_c@@Base+0x3d98>
  40a089:	mov    rdi,QWORD PTR [rsi+0x18]
  40a08d:	mov    rdx,QWORD PTR [rsp+0x10]
  40a092:	cmp    ax,0x1
  40a096:	lea    rbp,[rip+0x2bb84]        # 435c21 <_IO_stdin_used@@Base+0x8c21>
  40a09d:	lea    rax,[rip+0x3b07a]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a0a4:	mov    DWORD PTR [rsp+0x28],r11d
  40a0a9:	cmove  rbp,rax
  40a0ad:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40a0b2:	test   r14d,r14d
  40a0b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a0bc:	mov    r11d,DWORD PTR [rsp+0x28]
  40a0c1:	je     40a140 <__flatcc_fb_codegen_c@@Base+0x36f0>
  40a0c3:	mov    rcx,QWORD PTR [rsp+0x10]
  40a0c8:	mov    r8,rbp
  40a0cb:	lea    rdx,[rip+0x2bbb1]        # 435c83 <_IO_stdin_used@@Base+0x8c83>
  40a0d2:	mov    esi,0x1
  40a0d7:	xor    eax,eax
  40a0d9:	call   4053e0 <__fprintf_chk@plt>
  40a0de:	jmp    409c83 <__flatcc_fb_codegen_c@@Base+0x3233>
  40a0e3:	nop    DWORD PTR [rax+rax*1+0x0]
  40a0e8:	test   BYTE PTR [r15+0x70],0x4
  40a0ed:	je     409c15 <__flatcc_fb_codegen_c@@Base+0x31c5>
  40a0f3:	mov    r8d,DWORD PTR [rsp+0x18]
  40a0f8:	mov    r9,QWORD PTR [r15+0x80]
  40a0ff:	push   r12
  40a101:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a108:	lea    ebp,[r8+0x1]
  40a10c:	push   r13
  40a10e:	mov    ecx,r11d
  40a111:	lea    rdx,[rip+0x25458]        # 42f570 <_IO_stdin_used@@Base+0x2570>
  40a118:	mov    esi,0x1
  40a11d:	xor    eax,eax
  40a11f:	call   4053e0 <__fprintf_chk@plt>
  40a124:	pop    rcx
  40a125:	pop    rsi
  40a126:	mov    DWORD PTR [rsp+0x18],ebp
  40a12a:	jmp    409ca3 <__flatcc_fb_codegen_c@@Base+0x3253>
  40a12f:	nop
  40a130:	movzx  r11d,WORD PTR [r15+0x72]
  40a135:	jmp    409bf4 <__flatcc_fb_codegen_c@@Base+0x31a4>
  40a13a:	nop    WORD PTR [rax+rax*1+0x0]
  40a140:	mov    r8,QWORD PTR [rsp+0x10]
  40a145:	mov    r9,rbp
  40a148:	mov    ecx,r11d
  40a14b:	lea    rdx,[rip+0x2bb3d]        # 435c8f <_IO_stdin_used@@Base+0x8c8f>
  40a152:	mov    esi,0x1
  40a157:	xor    eax,eax
  40a159:	call   4053e0 <__fprintf_chk@plt>
  40a15e:	jmp    409c83 <__flatcc_fb_codegen_c@@Base+0x3233>
  40a163:	nop    DWORD PTR [rax+rax*1+0x0]
  40a168:	mov    ecx,DWORD PTR [rsp+0x2c]
  40a16c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a173:	lea    ebp,[rcx+0x1]
  40a176:	lea    rdx,[rip+0x2bac8]        # 435c45 <_IO_stdin_used@@Base+0x8c45>
  40a17d:	mov    esi,0x1
  40a182:	xor    eax,eax
  40a184:	mov    DWORD PTR [rsp+0x28],r11d
  40a189:	call   4053e0 <__fprintf_chk@plt>
  40a18e:	mov    DWORD PTR [rsp+0x2c],ebp
  40a192:	mov    r11d,DWORD PTR [rsp+0x28]
  40a197:	test   BYTE PTR [r15+0x70],0x4
  40a19c:	je     409c15 <__flatcc_fb_codegen_c@@Base+0x31c5>
  40a1a2:	mov    ecx,DWORD PTR [rsp+0x18]
  40a1a6:	sub    rsp,0x8
  40a1aa:	mov    r8,QWORD PTR [r15+0x80]
  40a1b1:	lea    ebp,[rcx+0x1]
  40a1b4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a1bb:	push   r12
  40a1bd:	mov    r9d,r13d
  40a1c0:	lea    rdx,[rip+0x25371]        # 42f538 <_IO_stdin_used@@Base+0x2538>
  40a1c7:	jmp    40a118 <__flatcc_fb_codegen_c@@Base+0x36c8>
  40a1cc:	nop    DWORD PTR [rax+0x0]
  40a1d0:	mov    rcx,rbx
  40a1d3:	lea    r8,[rip+0x2b8d3]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40a1da:	jmp    409c60 <__flatcc_fb_codegen_c@@Base+0x3210>
  40a1df:	nop
  40a1e0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a1e7:	xor    eax,eax
  40a1e9:	lea    rdx,[rip+0x3af2d]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40a1f0:	mov    esi,0x1
  40a1f5:	call   4053e0 <__fprintf_chk@plt>
  40a1fa:	mov    rax,QWORD PTR [rsp+0x208]
  40a202:	xor    rax,QWORD PTR fs:0x28
  40a20b:	jne    40a841 <__flatcc_fb_codegen_c@@Base+0x3df1>
  40a211:	add    rsp,0x218
  40a218:	pop    rbx
  40a219:	pop    rbp
  40a21a:	pop    r12
  40a21c:	pop    r13
  40a21e:	pop    r14
  40a220:	pop    r15
  40a222:	ret    
  40a223:	nop    DWORD PTR [rax+rax*1+0x0]
  40a228:	mov    rcx,rbx
  40a22b:	lea    rax,[rip+0x2b87b]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40a232:	lea    rdx,[rip+0x2b87b]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  40a239:	sub    rsp,0x8
  40a23d:	push   rax
  40a23e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a245:	mov    r9d,r13d
  40a248:	push   rcx
  40a249:	mov    esi,0x1
  40a24e:	mov    rcx,rbx
  40a251:	push   rdx
  40a252:	xor    eax,eax
  40a254:	lea    rdx,[rip+0x2522d]        # 42f488 <_IO_stdin_used@@Base+0x2488>
  40a25b:	push   rbx
  40a25c:	push   r15
  40a25e:	mov    r8,QWORD PTR [rsp+0x50]
  40a263:	call   4053e0 <__fprintf_chk@plt>
  40a268:	movzx  eax,WORD PTR [rbp+0x70]
  40a26c:	add    rsp,0x30
  40a270:	jmp    409ea0 <__flatcc_fb_codegen_c@@Base+0x3450>
  40a275:	nop    DWORD PTR [rax]
  40a278:	mov    eax,DWORD PTR [rdx+0x48]
  40a27b:	dec    eax
  40a27d:	cmp    eax,0xa
  40a280:	ja     40a884 <__flatcc_fb_codegen_c@@Base+0x3e34>
  40a286:	sub    rsp,0x8
  40a28a:	push   r14
  40a28c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a293:	mov    r9d,r13d
  40a296:	push   r14
  40a298:	mov    rcx,rbx
  40a29b:	lea    rdx,[rip+0x2521e]        # 42f4c0 <_IO_stdin_used@@Base+0x24c0>
  40a2a2:	push   r15
  40a2a4:	mov    esi,0x1
  40a2a9:	xor    eax,eax
  40a2ab:	mov    r8,QWORD PTR [rsp+0x40]
  40a2b0:	call   4053e0 <__fprintf_chk@plt>
  40a2b5:	mov    rax,QWORD PTR [rbx+0xe0]
  40a2bc:	add    rsp,0x20
  40a2c0:	mov    r11d,DWORD PTR [rax+0x24]
  40a2c4:	test   r11d,r11d
  40a2c7:	jne    40a300 <__flatcc_fb_codegen_c@@Base+0x38b0>
  40a2c9:	test   BYTE PTR [rbp+0x70],0x80
  40a2cd:	je     409ed0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40a2d3:	push   r14
  40a2d5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a2dc:	mov    r9d,r13d
  40a2df:	push   r15
  40a2e1:	mov    rcx,rbx
  40a2e4:	lea    rdx,[rip+0x247e5]        # 42ead0 <_IO_stdin_used@@Base+0x1ad0>
  40a2eb:	mov    r8,QWORD PTR [rsp+0x30]
  40a2f0:	mov    esi,0x1
  40a2f5:	xor    eax,eax
  40a2f7:	call   4053e0 <__fprintf_chk@plt>
  40a2fc:	pop    r9
  40a2fe:	pop    r10
  40a300:	test   BYTE PTR [rbp+0x70],0x80
  40a304:	je     409ed0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40a30a:	mov    r8d,DWORD PTR [rsp+0x8]
  40a30f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a316:	test   r8d,r8d
  40a319:	jne    40a684 <__flatcc_fb_codegen_c@@Base+0x3c34>
  40a31f:	lea    rdx,[rip+0x243ca]        # 42e6f0 <_IO_stdin_used@@Base+0x16f0>
  40a326:	mov    esi,0x1
  40a32b:	xor    eax,eax
  40a32d:	call   4053e0 <__fprintf_chk@plt>
  40a332:	push   r14
  40a334:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a33b:	mov    r9d,r13d
  40a33e:	push   r15
  40a340:	mov    rcx,rbx
  40a343:	lea    rdx,[rip+0x247be]        # 42eb08 <_IO_stdin_used@@Base+0x1b08>
  40a34a:	mov    r8,QWORD PTR [rsp+0x30]
  40a34f:	mov    esi,0x1
  40a354:	xor    eax,eax
  40a356:	call   4053e0 <__fprintf_chk@plt>
  40a35b:	mov    rax,QWORD PTR [rbx+0xe0]
  40a362:	pop    rdi
  40a363:	mov    r9d,DWORD PTR [rax+0xa8]
  40a36a:	pop    r8
  40a36c:	test   r9d,r9d
  40a36f:	je     40a3a1 <__flatcc_fb_codegen_c@@Base+0x3951>
  40a371:	push   rax
  40a372:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a379:	mov    r9d,r13d
  40a37c:	mov    r8,QWORD PTR [rsp+0x28]
  40a381:	mov    rcx,rbx
  40a384:	push   r8
  40a386:	lea    rdx,[rip+0x25223]        # 42f5b0 <_IO_stdin_used@@Base+0x25b0>
  40a38d:	mov    esi,0x1
  40a392:	push   r14
  40a394:	xor    eax,eax
  40a396:	push   r15
  40a398:	call   4053e0 <__fprintf_chk@plt>
  40a39d:	add    rsp,0x20
  40a3a1:	push   r14
  40a3a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a3aa:	mov    r9d,r13d
  40a3ad:	push   r15
  40a3af:	mov    rcx,rbx
  40a3b2:	lea    rdx,[rip+0x24787]        # 42eb40 <_IO_stdin_used@@Base+0x1b40>
  40a3b9:	mov    r12,QWORD PTR [rsp+0x30]
  40a3be:	mov    esi,0x1
  40a3c3:	mov    r8,r12
  40a3c6:	xor    eax,eax
  40a3c8:	call   4053e0 <__fprintf_chk@plt>
  40a3cd:	push   r14
  40a3cf:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a3d6:	mov    r9d,r13d
  40a3d9:	push   r15
  40a3db:	mov    r8,r12
  40a3de:	mov    rcx,rbx
  40a3e1:	lea    rdx,[rip+0x24798]        # 42eb80 <_IO_stdin_used@@Base+0x1b80>
  40a3e8:	mov    esi,0x1
  40a3ed:	xor    eax,eax
  40a3ef:	call   4053e0 <__fprintf_chk@plt>
  40a3f4:	mov    rax,QWORD PTR [rbx+0xe0]
  40a3fb:	add    rsp,0x20
  40a3ff:	mov    eax,DWORD PTR [rax+0xa8]
  40a405:	test   eax,eax
  40a407:	je     40a6f1 <__flatcc_fb_codegen_c@@Base+0x3ca1>
  40a40d:	sub    rsp,0x8
  40a411:	push   r15
  40a413:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a41a:	mov    r9d,r13d
  40a41d:	mov    rcx,QWORD PTR [rsp+0x30]
  40a422:	lea    rdx,[rip+0x243bf]        # 42e7e8 <_IO_stdin_used@@Base+0x17e8>
  40a429:	mov    r8,rcx
  40a42c:	mov    esi,0x1
  40a431:	xor    eax,eax
  40a433:	call   4053e0 <__fprintf_chk@plt>
  40a438:	pop    r12
  40a43a:	pop    r13
  40a43c:	jmp    40a6f1 <__flatcc_fb_codegen_c@@Base+0x3ca1>
  40a441:	nop    DWORD PTR [rax+0x0]
  40a448:	push   r14
  40a44a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a451:	mov    r9d,r13d
  40a454:	push   r15
  40a456:	mov    rcx,rbx
  40a459:	lea    rdx,[rip+0x250a0]        # 42f500 <_IO_stdin_used@@Base+0x2500>
  40a460:	mov    r8,QWORD PTR [rsp+0x30]
  40a465:	mov    esi,0x1
  40a46a:	xor    eax,eax
  40a46c:	call   4053e0 <__fprintf_chk@plt>
  40a471:	pop    r10
  40a473:	movzx  eax,WORD PTR [rbp+0x70]
  40a477:	pop    r11
  40a479:	jmp    409ea0 <__flatcc_fb_codegen_c@@Base+0x3450>
  40a47e:	xchg   ax,ax
  40a480:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a487:	lea    rdx,[rip+0x2c6e7]        # 436b75 <_IO_stdin_used@@Base+0x9b75>
  40a48e:	mov    esi,0x1
  40a493:	xor    eax,eax
  40a495:	call   4053e0 <__fprintf_chk@plt>
  40a49a:	jmp    409d16 <__flatcc_fb_codegen_c@@Base+0x32c6>
  40a49f:	nop
  40a4a0:	mov    r14,QWORD PTR [rsp+0x20]
  40a4a5:	lea    rdx,[rip+0x24c94]        # 42f140 <_IO_stdin_used@@Base+0x2140>
  40a4ac:	mov    rcx,r14
  40a4af:	mov    esi,0x1
  40a4b4:	xor    eax,eax
  40a4b6:	call   4053e0 <__fprintf_chk@plt>
  40a4bb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a4c2:	mov    r9,r14
  40a4c5:	mov    r8,r14
  40a4c8:	mov    rcx,r14
  40a4cb:	lea    rdx,[rip+0x24cd6]        # 42f1a8 <_IO_stdin_used@@Base+0x21a8>
  40a4d2:	mov    esi,0x1
  40a4d7:	xor    eax,eax
  40a4d9:	call   4053e0 <__fprintf_chk@plt>
  40a4de:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a4e5:	mov    r9,r14
  40a4e8:	mov    r8,r14
  40a4eb:	mov    rcx,r14
  40a4ee:	lea    rdx,[rip+0x24d0b]        # 42f200 <_IO_stdin_used@@Base+0x2200>
  40a4f5:	mov    esi,0x1
  40a4fa:	xor    eax,eax
  40a4fc:	call   4053e0 <__fprintf_chk@plt>
  40a501:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a508:	mov    r9,r14
  40a50b:	mov    rcx,r14
  40a50e:	mov    r8,r14
  40a511:	lea    rdx,[rip+0x24d30]        # 42f248 <_IO_stdin_used@@Base+0x2248>
  40a518:	mov    esi,0x1
  40a51d:	xor    eax,eax
  40a51f:	call   4053e0 <__fprintf_chk@plt>
  40a524:	jmp    409db5 <__flatcc_fb_codegen_c@@Base+0x3365>
  40a529:	nop    DWORD PTR [rax+0x0]
  40a530:	lea    rdx,[rip+0x2b6f0]        # 435c27 <_IO_stdin_used@@Base+0x8c27>
  40a537:	mov    esi,0x1
  40a53c:	xor    eax,eax
  40a53e:	call   4053e0 <__fprintf_chk@plt>
  40a543:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a54a:	mov    rcx,QWORD PTR [rsp+0x20]
  40a54f:	lea    rdx,[rip+0x2b6e2]        # 435c38 <_IO_stdin_used@@Base+0x8c38>
  40a556:	mov    esi,0x1
  40a55b:	xor    eax,eax
  40a55d:	call   4053e0 <__fprintf_chk@plt>
  40a562:	mov    rax,QWORD PTR [rsp+0x8]
  40a567:	mov    r15,QWORD PTR [rax+0x28]
  40a56b:	test   r15,r15
  40a56e:	jne    409b15 <__flatcc_fb_codegen_c@@Base+0x30c5>
  40a574:	xor    ebp,ebp
  40a576:	mov    DWORD PTR [rsp+0x2c],0x0
  40a57e:	jmp    409cc3 <__flatcc_fb_codegen_c@@Base+0x3273>
  40a583:	nop    DWORD PTR [rax+rax*1+0x0]
  40a588:	lea    rax,[rip+0x2b538]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40a58f:	lea    rcx,[rip+0x3ab88]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a596:	mov    rdx,rax
  40a599:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a59e:	lea    rax,[rip+0x2b4f8]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40a5a5:	lea    rcx,[rip+0x3ab72]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a5ac:	lea    rdx,[rip+0x2b4f3]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  40a5b3:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a5b8:	lea    rax,[rip+0x2b4b8]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40a5bf:	lea    rcx,[rip+0x3ab58]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a5c6:	lea    rdx,[rip+0x2b4b3]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  40a5cd:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a5d2:	lea    rax,[rip+0x2b49f]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40a5d9:	lea    rcx,[rip+0x3ab3e]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a5e0:	lea    rdx,[rip+0x2b49a]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  40a5e7:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a5ec:	lea    rax,[rip+0x2b494]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40a5f3:	lea    rcx,[rip+0x3ab24]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a5fa:	mov    rdx,rax
  40a5fd:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a602:	lea    rax,[rip+0x2b4b0]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40a609:	lea    rcx,[rip+0x3ab0e]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a610:	lea    rdx,[rip+0x2b4aa]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40a617:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a61c:	lea    rax,[rip+0x2b46a]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40a623:	lea    rcx,[rip+0x3aaf4]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a62a:	lea    rdx,[rip+0x2b465]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  40a631:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a636:	lea    rax,[rip+0x2b451]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40a63d:	lea    rcx,[rip+0x3aada]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a644:	lea    rdx,[rip+0x2b44c]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40a64b:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a650:	lea    rax,[rip+0x2b447]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40a657:	lea    rcx,[rip+0x3aac0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a65e:	lea    rdx,[rip+0x2b442]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40a665:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a66a:	lea    rax,[rip+0x2b449]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40a671:	lea    rcx,[rip+0x3aaa6]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40a678:	lea    rdx,[rip+0x2b443]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  40a67f:	jmp    40a239 <__flatcc_fb_codegen_c@@Base+0x37e9>
  40a684:	lea    rdx,[rip+0x2401d]        # 42e6a8 <_IO_stdin_used@@Base+0x16a8>
  40a68b:	mov    esi,0x1
  40a690:	xor    eax,eax
  40a692:	call   4053e0 <__fprintf_chk@plt>
  40a697:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a69e:	lea    rdx,[rip+0x2404b]        # 42e6f0 <_IO_stdin_used@@Base+0x16f0>
  40a6a5:	mov    esi,0x1
  40a6aa:	xor    eax,eax
  40a6ac:	call   4053e0 <__fprintf_chk@plt>
  40a6b1:	push   r14
  40a6b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a6ba:	mov    rcx,rbx
  40a6bd:	push   r15
  40a6bf:	lea    rdx,[rip+0x24442]        # 42eb08 <_IO_stdin_used@@Base+0x1b08>
  40a6c6:	mov    esi,0x1
  40a6cb:	mov    r8,QWORD PTR [rsp+0x30]
  40a6d0:	mov    r9d,r13d
  40a6d3:	xor    eax,eax
  40a6d5:	call   4053e0 <__fprintf_chk@plt>
  40a6da:	mov    rax,QWORD PTR [rbx+0xe0]
  40a6e1:	pop    rdx
  40a6e2:	mov    esi,DWORD PTR [rax+0xa8]
  40a6e8:	pop    rcx
  40a6e9:	test   esi,esi
  40a6eb:	jne    40a807 <__flatcc_fb_codegen_c@@Base+0x3db7>
  40a6f1:	mov    DWORD PTR [rsp+0x8],0x1
  40a6f9:	mov    r12d,0x1
  40a6ff:	jmp    409ed0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40a704:	mov    ecx,DWORD PTR [rsp+0x2c]
  40a708:	lea    rdx,[rip+0x2b536]        # 435c45 <_IO_stdin_used@@Base+0x8c45>
  40a70f:	mov    esi,0x1
  40a714:	xor    eax,eax
  40a716:	call   4053e0 <__fprintf_chk@plt>
  40a71b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a722:	jmp    409ce9 <__flatcc_fb_codegen_c@@Base+0x3299>
  40a727:	mov    rax,QWORD PTR [rip+0x468ba]        # 450fe8 <stderr@GLIBC_2.2.5>
  40a72e:	lea    rcx,[rip+0x23b73]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40a735:	mov    rdi,QWORD PTR [rax]
  40a738:	lea    rdx,[rip+0x2b314]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40a73f:	mov    esi,0x1
  40a744:	lea    r9,[rip+0x23b25]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40a74b:	mov    r8d,0x8d
  40a751:	xor    eax,eax
  40a753:	call   4053e0 <__fprintf_chk@plt>
  40a758:	lea    rcx,[rip+0x2b911]        # 436070 <_IO_stdin_used@@Base+0x9070>
  40a75f:	mov    edx,0x8d
  40a764:	lea    rsi,[rip+0x23b3d]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40a76b:	lea    rdi,[rip+0x2c3a7]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40a772:	call   4052e0 <__assert_fail@plt>
  40a777:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a77e:	lea    rcx,[rip+0x24b73]        # 42f2f8 <_IO_stdin_used@@Base+0x22f8>
  40a785:	lea    rdx,[rip+0x2b51b]        # 435ca7 <_IO_stdin_used@@Base+0x8ca7>
  40a78c:	mov    esi,0x1
  40a791:	xor    eax,eax
  40a793:	call   4053e0 <__fprintf_chk@plt>
  40a798:	mov    rax,QWORD PTR [rip+0x46849]        # 450fe8 <stderr@GLIBC_2.2.5>
  40a79f:	lea    rcx,[rip+0x23b6a]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  40a7a6:	mov    rdi,QWORD PTR [rax]
  40a7a9:	lea    rdx,[rip+0x2b2a3]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40a7b0:	mov    esi,0x1
  40a7b5:	lea    r9,[rip+0x23ab4]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40a7bc:	mov    r8d,0x405
  40a7c2:	xor    eax,eax
  40a7c4:	call   4053e0 <__fprintf_chk@plt>
  40a7c9:	lea    rcx,[rip+0x2b8b8]        # 436088 <_IO_stdin_used@@Base+0x9088>
  40a7d0:	mov    edx,0x405
  40a7d5:	lea    rsi,[rip+0x23b34]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  40a7dc:	lea    rdi,[rip+0x2c336]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40a7e3:	call   4052e0 <__assert_fail@plt>
  40a7e8:	lea    rcx,[rip+0x2b899]        # 436088 <_IO_stdin_used@@Base+0x9088>
  40a7ef:	mov    edx,0x3fa
  40a7f4:	lea    rsi,[rip+0x23b15]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  40a7fb:	lea    rdi,[rip+0x24a96]        # 42f298 <_IO_stdin_used@@Base+0x2298>
  40a802:	call   4052e0 <__assert_fail@plt>
  40a807:	push   rdx
  40a808:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a80f:	mov    r9d,r13d
  40a812:	mov    r8,QWORD PTR [rsp+0x28]
  40a817:	mov    rcx,rbx
  40a81a:	push   r8
  40a81c:	lea    rdx,[rip+0x24d8d]        # 42f5b0 <_IO_stdin_used@@Base+0x25b0>
  40a823:	mov    esi,0x1
  40a828:	push   r14
  40a82a:	xor    eax,eax
  40a82c:	push   r15
  40a82e:	call   4053e0 <__fprintf_chk@plt>
  40a833:	add    rsp,0x20
  40a837:	mov    r12d,DWORD PTR [rsp+0x8]
  40a83c:	jmp    409ed0 <__flatcc_fb_codegen_c@@Base+0x3480>
  40a841:	call   4052c0 <__stack_chk_fail@plt>
  40a846:	lea    rcx,[rip+0x2b83b]        # 436088 <_IO_stdin_used@@Base+0x9088>
  40a84d:	mov    edx,0x3aa
  40a852:	lea    rsi,[rip+0x23ab7]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  40a859:	lea    rdi,[rip+0x248c0]        # 42f120 <_IO_stdin_used@@Base+0x2120>
  40a860:	call   4052e0 <__assert_fail@plt>
  40a865:	lea    rcx,[rip+0x2b81c]        # 436088 <_IO_stdin_used@@Base+0x9088>
  40a86c:	mov    edx,0x3a8
  40a871:	lea    rsi,[rip+0x23a98]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  40a878:	lea    rdi,[rip+0x24861]        # 42f0e0 <_IO_stdin_used@@Base+0x20e0>
  40a87f:	call   4052e0 <__assert_fail@plt>
  40a884:	call   406cf0 <__flatcc_fb_codegen_c@@Base+0x2a0>
  40a889:	call   406c90 <__flatcc_fb_codegen_c@@Base+0x240>
  40a88e:	xchg   ax,ax

000000000040a890 <__flatcc_fb_gen_common_c_header@@Base>:
  40a890:	endbr64 
  40a894:	push   rbp
  40a895:	lea    rbp,[rdi+0x66]
  40a899:	mov    r8,rbp
  40a89c:	push   rbx
  40a89d:	mov    rbx,rdi
  40a8a0:	mov    rcx,rbp
  40a8a3:	sub    rsp,0x8
  40a8a7:	mov    rdi,QWORD PTR [rdi+0xd0]
  40a8ae:	lea    rdx,[rip+0x24d3b]        # 42f5f0 <_IO_stdin_used@@Base+0x25f0>
  40a8b5:	mov    esi,0x1
  40a8ba:	xor    eax,eax
  40a8bc:	call   4053e0 <__fprintf_chk@plt>
  40a8c1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a8c8:	lea    rdx,[rip+0x24d59]        # 42f628 <_IO_stdin_used@@Base+0x2628>
  40a8cf:	mov    esi,0x1
  40a8d4:	xor    eax,eax
  40a8d6:	call   4053e0 <__fprintf_chk@plt>
  40a8db:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a8e2:	lea    rdx,[rip+0x24d97]        # 42f680 <_IO_stdin_used@@Base+0x2680>
  40a8e9:	mov    esi,0x1
  40a8ee:	xor    eax,eax
  40a8f0:	call   4053e0 <__fprintf_chk@plt>
  40a8f5:	mov    rax,QWORD PTR [rbx+0xe0]
  40a8fc:	mov    r9d,DWORD PTR [rax+0xa8]
  40a903:	test   r9d,r9d
  40a906:	je     40b5b0 <__flatcc_fb_gen_common_c_header@@Base+0xd20>
  40a90c:	mov    r8d,DWORD PTR [rax+0xac]
  40a913:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a91a:	test   r8d,r8d
  40a91d:	jne    40b590 <__flatcc_fb_gen_common_c_header@@Base+0xd00>
  40a923:	mov    esi,0x1
  40a928:	xor    eax,eax
  40a92a:	lea    rdx,[rip+0x24e37]        # 42f768 <_IO_stdin_used@@Base+0x2768>
  40a931:	call   4053e0 <__fprintf_chk@plt>
  40a936:	mov    ecx,0xd
  40a93b:	lea    rdi,[rip+0x2b39c]        # 435cde <_IO_stdin_used@@Base+0x8cde>
  40a942:	mov    rsi,rbx
  40a945:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40a947:	seta   al
  40a94a:	sbb    al,0x0
  40a94c:	test   al,al
  40a94e:	jne    40b4e8 <__flatcc_fb_gen_common_c_header@@Base+0xc58>
  40a954:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a95b:	mov    r8,rbx
  40a95e:	mov    rcx,rbx
  40a961:	lea    rdx,[rip+0x25310]        # 42fc78 <_IO_stdin_used@@Base+0x2c78>
  40a968:	mov    esi,0x1
  40a96d:	xor    eax,eax
  40a96f:	call   4053e0 <__fprintf_chk@plt>
  40a974:	push   rbx
  40a975:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a97c:	mov    r9,rbx
  40a97f:	push   rbx
  40a980:	mov    r8,rbx
  40a983:	mov    rcx,rbx
  40a986:	push   rbx
  40a987:	lea    rdx,[rip+0x2537a]        # 42fd08 <_IO_stdin_used@@Base+0x2d08>
  40a98e:	mov    esi,0x1
  40a993:	push   rbx
  40a994:	xor    eax,eax
  40a996:	call   4053e0 <__fprintf_chk@plt>
  40a99b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a9a2:	add    rsp,0x20
  40a9a6:	mov    r8,rbx
  40a9a9:	mov    rcx,rbx
  40a9ac:	lea    rdx,[rip+0x254cd]        # 42fe80 <_IO_stdin_used@@Base+0x2e80>
  40a9b3:	mov    esi,0x1
  40a9b8:	xor    eax,eax
  40a9ba:	call   4053e0 <__fprintf_chk@plt>
  40a9bf:	sub    rsp,0x8
  40a9c3:	push   rbx
  40a9c4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a9cb:	mov    rcx,rbx
  40a9ce:	lea    rdx,[rip+0x25503]        # 42fed8 <_IO_stdin_used@@Base+0x2ed8>
  40a9d5:	mov    esi,0x1
  40a9da:	xor    eax,eax
  40a9dc:	mov    r9,rbx
  40a9df:	mov    r8,rbx
  40a9e2:	call   4053e0 <__fprintf_chk@plt>
  40a9e7:	mov    rax,QWORD PTR [rbx+0xe0]
  40a9ee:	pop    rdx
  40a9ef:	mov    esi,DWORD PTR [rax+0x24]
  40a9f2:	pop    rcx
  40a9f3:	test   esi,esi
  40a9f5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a9fc:	je     40b480 <__flatcc_fb_gen_common_c_header@@Base+0xbf0>
  40aa02:	mov    rcx,rbx
  40aa05:	lea    rdx,[rip+0x255f4]        # 430000 <_IO_stdin_used@@Base+0x3000>
  40aa0c:	mov    esi,0x1
  40aa11:	xor    eax,eax
  40aa13:	call   4053e0 <__fprintf_chk@plt>
  40aa18:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa1f:	mov    r8,rbx
  40aa22:	mov    rcx,rbx
  40aa25:	lea    rdx,[rip+0x25604]        # 430030 <_IO_stdin_used@@Base+0x3030>
  40aa2c:	mov    esi,0x1
  40aa31:	xor    eax,eax
  40aa33:	call   4053e0 <__fprintf_chk@plt>
  40aa38:	push   rbx
  40aa39:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa40:	mov    r9,rbx
  40aa43:	push   rbx
  40aa44:	mov    r8,rbx
  40aa47:	mov    rcx,rbx
  40aa4a:	lea    rdx,[rip+0x256b7]        # 430108 <_IO_stdin_used@@Base+0x3108>
  40aa51:	mov    esi,0x1
  40aa56:	xor    eax,eax
  40aa58:	call   4053e0 <__fprintf_chk@plt>
  40aa5d:	push   rbx
  40aa5e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa65:	mov    r9,rbx
  40aa68:	push   rbx
  40aa69:	mov    r8,rbx
  40aa6c:	mov    rcx,rbx
  40aa6f:	lea    rdx,[rip+0x25842]        # 4302b8 <_IO_stdin_used@@Base+0x32b8>
  40aa76:	mov    esi,0x1
  40aa7b:	xor    eax,eax
  40aa7d:	call   4053e0 <__fprintf_chk@plt>
  40aa82:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aa89:	add    rsp,0x20
  40aa8d:	mov    r9,rbx
  40aa90:	mov    r8,rbx
  40aa93:	mov    rcx,rbx
  40aa96:	lea    rdx,[rip+0x258bb]        # 430358 <_IO_stdin_used@@Base+0x3358>
  40aa9d:	mov    esi,0x1
  40aaa2:	xor    eax,eax
  40aaa4:	call   4053e0 <__fprintf_chk@plt>
  40aaa9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aab0:	mov    r9,rbx
  40aab3:	mov    r8,rbx
  40aab6:	mov    rcx,rbx
  40aab9:	lea    rdx,[rip+0x25978]        # 430438 <_IO_stdin_used@@Base+0x3438>
  40aac0:	mov    esi,0x1
  40aac5:	xor    eax,eax
  40aac7:	call   4053e0 <__fprintf_chk@plt>
  40aacc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aad3:	mov    r9,rbx
  40aad6:	mov    r8,rbx
  40aad9:	mov    rcx,rbx
  40aadc:	lea    rdx,[rip+0x25a35]        # 430518 <_IO_stdin_used@@Base+0x3518>
  40aae3:	mov    esi,0x1
  40aae8:	xor    eax,eax
  40aaea:	call   4053e0 <__fprintf_chk@plt>
  40aaef:	push   rbx
  40aaf0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aaf7:	xor    eax,eax
  40aaf9:	push   rbx
  40aafa:	mov    r9,rbx
  40aafd:	mov    r8,rbx
  40ab00:	mov    rcx,rbx
  40ab03:	lea    rdx,[rip+0x25ae6]        # 4305f0 <_IO_stdin_used@@Base+0x35f0>
  40ab0a:	mov    esi,0x1
  40ab0f:	call   4053e0 <__fprintf_chk@plt>
  40ab14:	mov    rax,QWORD PTR [rbx+0xe0]
  40ab1b:	pop    r10
  40ab1d:	mov    eax,DWORD PTR [rax+0x24]
  40ab20:	pop    r11
  40ab22:	test   eax,eax
  40ab24:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ab2b:	je     40b420 <__flatcc_fb_gen_common_c_header@@Base+0xb90>
  40ab31:	mov    rcx,rbx
  40ab34:	lea    rdx,[rip+0x25b9d]        # 4306d8 <_IO_stdin_used@@Base+0x36d8>
  40ab3b:	mov    esi,0x1
  40ab40:	xor    eax,eax
  40ab42:	call   4053e0 <__fprintf_chk@plt>
  40ab47:	sub    rsp,0x8
  40ab4b:	push   rbx
  40ab4c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ab53:	mov    r9,rbx
  40ab56:	mov    r8,rbx
  40ab59:	mov    rcx,rbx
  40ab5c:	lea    rdx,[rip+0x25ba5]        # 430708 <_IO_stdin_used@@Base+0x3708>
  40ab63:	mov    esi,0x1
  40ab68:	xor    eax,eax
  40ab6a:	call   4053e0 <__fprintf_chk@plt>
  40ab6f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ab76:	mov    r8,rbx
  40ab79:	mov    rcx,rbx
  40ab7c:	lea    rdx,[rip+0x25c25]        # 4307a8 <_IO_stdin_used@@Base+0x37a8>
  40ab83:	mov    esi,0x1
  40ab88:	xor    eax,eax
  40ab8a:	call   4053e0 <__fprintf_chk@plt>
  40ab8f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ab96:	mov    r9,rbx
  40ab99:	mov    r8,rbx
  40ab9c:	mov    rcx,rbx
  40ab9f:	lea    rdx,[rip+0x25c4a]        # 4307f0 <_IO_stdin_used@@Base+0x37f0>
  40aba6:	mov    esi,0x1
  40abab:	xor    eax,eax
  40abad:	call   4053e0 <__fprintf_chk@plt>
  40abb2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40abb9:	mov    r8,rbx
  40abbc:	mov    rcx,rbx
  40abbf:	lea    rdx,[rip+0x25cba]        # 430880 <_IO_stdin_used@@Base+0x3880>
  40abc6:	mov    esi,0x1
  40abcb:	xor    eax,eax
  40abcd:	call   4053e0 <__fprintf_chk@plt>
  40abd2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40abd9:	mov    r9,rbx
  40abdc:	mov    r8,rbx
  40abdf:	mov    rcx,rbx
  40abe2:	lea    rdx,[rip+0x25d0f]        # 4308f8 <_IO_stdin_used@@Base+0x38f8>
  40abe9:	mov    esi,0x1
  40abee:	xor    eax,eax
  40abf0:	mov    QWORD PTR [rsp],rbx
  40abf4:	call   4053e0 <__fprintf_chk@plt>
  40abf9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac00:	mov    r8,rbx
  40ac03:	mov    rcx,rbx
  40ac06:	lea    rdx,[rip+0x25e0b]        # 430a18 <_IO_stdin_used@@Base+0x3a18>
  40ac0d:	mov    esi,0x1
  40ac12:	xor    eax,eax
  40ac14:	call   4053e0 <__fprintf_chk@plt>
  40ac19:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac20:	mov    r8,rbx
  40ac23:	mov    rcx,rbx
  40ac26:	lea    rdx,[rip+0x25e63]        # 430a90 <_IO_stdin_used@@Base+0x3a90>
  40ac2d:	mov    esi,0x1
  40ac32:	xor    eax,eax
  40ac34:	call   4053e0 <__fprintf_chk@plt>
  40ac39:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac40:	mov    r9,rbx
  40ac43:	mov    r8,rbx
  40ac46:	mov    rcx,rbx
  40ac49:	lea    rdx,[rip+0x25ec0]        # 430b10 <_IO_stdin_used@@Base+0x3b10>
  40ac50:	mov    esi,0x1
  40ac55:	xor    eax,eax
  40ac57:	mov    QWORD PTR [rsp],rbx
  40ac5b:	call   4053e0 <__fprintf_chk@plt>
  40ac60:	mov    QWORD PTR [rsp],rbx
  40ac64:	push   rbx
  40ac65:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac6c:	mov    r9,rbx
  40ac6f:	push   rbx
  40ac70:	mov    r8,rbx
  40ac73:	mov    rcx,rbx
  40ac76:	push   rbx
  40ac77:	lea    rdx,[rip+0x25efa]        # 430b78 <_IO_stdin_used@@Base+0x3b78>
  40ac7e:	mov    esi,0x1
  40ac83:	push   rbx
  40ac84:	xor    eax,eax
  40ac86:	push   rbx
  40ac87:	push   rbx
  40ac88:	push   rbx
  40ac89:	push   rbx
  40ac8a:	call   4053e0 <__fprintf_chk@plt>
  40ac8f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ac96:	add    rsp,0x50
  40ac9a:	mov    rcx,rbx
  40ac9d:	lea    rdx,[rip+0x25ffc]        # 430ca0 <_IO_stdin_used@@Base+0x3ca0>
  40aca4:	mov    esi,0x1
  40aca9:	xor    eax,eax
  40acab:	call   4053e0 <__fprintf_chk@plt>
  40acb0:	sub    rsp,0x8
  40acb4:	push   rbx
  40acb5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40acbc:	mov    r9,rbx
  40acbf:	mov    r8,rbx
  40acc2:	mov    rcx,rbx
  40acc5:	lea    rdx,[rip+0x25ffc]        # 430cc8 <_IO_stdin_used@@Base+0x3cc8>
  40accc:	mov    esi,0x1
  40acd1:	xor    eax,eax
  40acd3:	call   4053e0 <__fprintf_chk@plt>
  40acd8:	push   rbx
  40acd9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ace0:	mov    r9,rbx
  40ace3:	push   rbx
  40ace4:	mov    r8,rbx
  40ace7:	mov    rcx,rbx
  40acea:	push   rbx
  40aceb:	lea    rdx,[rip+0x2605e]        # 430d50 <_IO_stdin_used@@Base+0x3d50>
  40acf2:	mov    esi,0x1
  40acf7:	push   rbx
  40acf8:	xor    eax,eax
  40acfa:	push   rbx
  40acfb:	push   rbx
  40acfc:	push   rbx
  40acfd:	push   rbx
  40acfe:	push   rbx
  40acff:	push   rbx
  40ad00:	push   rbx
  40ad01:	push   rbx
  40ad02:	push   rbx
  40ad03:	push   rbx
  40ad04:	call   4053e0 <__fprintf_chk@plt>
  40ad09:	add    rsp,0x78
  40ad0d:	push   rbx
  40ad0e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad15:	mov    r9,rbx
  40ad18:	push   rbx
  40ad19:	mov    r8,rbx
  40ad1c:	mov    rcx,rbx
  40ad1f:	push   rbx
  40ad20:	lea    rdx,[rip+0x261d9]        # 430f00 <_IO_stdin_used@@Base+0x3f00>
  40ad27:	mov    esi,0x1
  40ad2c:	push   rbx
  40ad2d:	xor    eax,eax
  40ad2f:	push   rbx
  40ad30:	call   4053e0 <__fprintf_chk@plt>
  40ad35:	add    rsp,0x28
  40ad39:	push   rbx
  40ad3a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad41:	mov    r9,rbx
  40ad44:	mov    r8,rbx
  40ad47:	mov    rcx,rbx
  40ad4a:	lea    rdx,[rip+0x26277]        # 430fc8 <_IO_stdin_used@@Base+0x3fc8>
  40ad51:	mov    esi,0x1
  40ad56:	xor    eax,eax
  40ad58:	call   4053e0 <__fprintf_chk@plt>
  40ad5d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad64:	mov    r9,rbx
  40ad67:	mov    r8,rbx
  40ad6a:	mov    rcx,rbx
  40ad6d:	lea    rdx,[rip+0x262f4]        # 431068 <_IO_stdin_used@@Base+0x4068>
  40ad74:	mov    esi,0x1
  40ad79:	xor    eax,eax
  40ad7b:	mov    QWORD PTR [rsp],rbx
  40ad7f:	call   4053e0 <__fprintf_chk@plt>
  40ad84:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ad8b:	mov    rcx,rbx
  40ad8e:	lea    rdx,[rip+0x2634b]        # 4310e0 <_IO_stdin_used@@Base+0x40e0>
  40ad95:	mov    esi,0x1
  40ad9a:	xor    eax,eax
  40ad9c:	call   4053e0 <__fprintf_chk@plt>
  40ada1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ada8:	mov    rcx,rbx
  40adab:	lea    rdx,[rip+0x26606]        # 4313b8 <_IO_stdin_used@@Base+0x43b8>
  40adb2:	mov    esi,0x1
  40adb7:	xor    eax,eax
  40adb9:	call   4053e0 <__fprintf_chk@plt>
  40adbe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40adc5:	mov    rcx,rbx
  40adc8:	lea    rdx,[rip+0x26881]        # 431650 <_IO_stdin_used@@Base+0x4650>
  40adcf:	mov    esi,0x1
  40add4:	xor    eax,eax
  40add6:	call   4053e0 <__fprintf_chk@plt>
  40addb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ade2:	mov    rcx,rbx
  40ade5:	lea    rdx,[rip+0x268ec]        # 4316d8 <_IO_stdin_used@@Base+0x46d8>
  40adec:	mov    esi,0x1
  40adf1:	xor    eax,eax
  40adf3:	call   4053e0 <__fprintf_chk@plt>
  40adf8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40adff:	mov    rcx,rbx
  40ae02:	lea    rdx,[rip+0x2693f]        # 431748 <_IO_stdin_used@@Base+0x4748>
  40ae09:	mov    esi,0x1
  40ae0e:	xor    eax,eax
  40ae10:	call   4053e0 <__fprintf_chk@plt>
  40ae15:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae1c:	mov    r9,rbx
  40ae1f:	mov    r8,rbx
  40ae22:	mov    rcx,rbx
  40ae25:	lea    rdx,[rip+0x26b04]        # 431930 <_IO_stdin_used@@Base+0x4930>
  40ae2c:	mov    esi,0x1
  40ae31:	xor    eax,eax
  40ae33:	mov    QWORD PTR [rsp],rbx
  40ae37:	call   4053e0 <__fprintf_chk@plt>
  40ae3c:	mov    QWORD PTR [rsp],rbx
  40ae40:	push   rbx
  40ae41:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae48:	mov    r9,rbx
  40ae4b:	push   rbx
  40ae4c:	mov    r8,rbx
  40ae4f:	mov    rcx,rbx
  40ae52:	lea    rdx,[rip+0x26b87]        # 4319e0 <_IO_stdin_used@@Base+0x49e0>
  40ae59:	mov    esi,0x1
  40ae5e:	xor    eax,eax
  40ae60:	call   4053e0 <__fprintf_chk@plt>
  40ae65:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae6c:	add    rsp,0x20
  40ae70:	mov    r9,rbx
  40ae73:	mov    r8,rbx
  40ae76:	mov    rcx,rbx
  40ae79:	lea    rdx,[rip+0x26d40]        # 431bc0 <_IO_stdin_used@@Base+0x4bc0>
  40ae80:	mov    esi,0x1
  40ae85:	xor    eax,eax
  40ae87:	call   4053e0 <__fprintf_chk@plt>
  40ae8c:	push   rbx
  40ae8d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ae94:	mov    r9,rbx
  40ae97:	push   rbx
  40ae98:	mov    r8,rbx
  40ae9b:	mov    rcx,rbx
  40ae9e:	push   rbx
  40ae9f:	lea    rdx,[rip+0x26f3a]        # 431de0 <_IO_stdin_used@@Base+0x4de0>
  40aea6:	mov    esi,0x1
  40aeab:	push   rbx
  40aeac:	xor    eax,eax
  40aeae:	push   rbx
  40aeaf:	push   rbx
  40aeb0:	push   rbx
  40aeb1:	push   rbx
  40aeb2:	call   4053e0 <__fprintf_chk@plt>
  40aeb7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aebe:	add    rsp,0x40
  40aec2:	mov    r8,rbx
  40aec5:	mov    rcx,rbx
  40aec8:	lea    rdx,[rip+0x27069]        # 431f38 <_IO_stdin_used@@Base+0x4f38>
  40aecf:	mov    esi,0x1
  40aed4:	xor    eax,eax
  40aed6:	call   4053e0 <__fprintf_chk@plt>
  40aedb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40aee2:	mov    r9,rbx
  40aee5:	mov    r8,rbx
  40aee8:	mov    rcx,rbx
  40aeeb:	lea    rdx,[rip+0x27116]        # 432008 <_IO_stdin_used@@Base+0x5008>
  40aef2:	mov    esi,0x1
  40aef7:	xor    eax,eax
  40aef9:	call   4053e0 <__fprintf_chk@plt>
  40aefe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af05:	mov    r9,rbx
  40af08:	mov    r8,rbx
  40af0b:	mov    rcx,rbx
  40af0e:	lea    rdx,[rip+0x271ab]        # 4320c0 <_IO_stdin_used@@Base+0x50c0>
  40af15:	mov    esi,0x1
  40af1a:	xor    eax,eax
  40af1c:	call   4053e0 <__fprintf_chk@plt>
  40af21:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af28:	mov    rcx,rbx
  40af2b:	lea    rdx,[rip+0x27346]        # 432278 <_IO_stdin_used@@Base+0x5278>
  40af32:	mov    esi,0x1
  40af37:	xor    eax,eax
  40af39:	call   4053e0 <__fprintf_chk@plt>
  40af3e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af45:	mov    rcx,rbx
  40af48:	lea    rdx,[rip+0x273d9]        # 432328 <_IO_stdin_used@@Base+0x5328>
  40af4f:	mov    esi,0x1
  40af54:	xor    eax,eax
  40af56:	call   4053e0 <__fprintf_chk@plt>
  40af5b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af62:	mov    r8,rbx
  40af65:	mov    rcx,rbx
  40af68:	lea    rdx,[rip+0x274e9]        # 432458 <_IO_stdin_used@@Base+0x5458>
  40af6f:	mov    esi,0x1
  40af74:	xor    eax,eax
  40af76:	call   4053e0 <__fprintf_chk@plt>
  40af7b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40af82:	mov    r8,rbx
  40af85:	mov    rcx,rbx
  40af88:	lea    rdx,[rip+0x27619]        # 4325a8 <_IO_stdin_used@@Base+0x55a8>
  40af8f:	mov    esi,0x1
  40af94:	xor    eax,eax
  40af96:	call   4053e0 <__fprintf_chk@plt>
  40af9b:	push   rbx
  40af9c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afa3:	mov    r9,rbx
  40afa6:	push   rbx
  40afa7:	mov    r8,rbx
  40afaa:	mov    rcx,rbx
  40afad:	push   rbx
  40afae:	lea    rdx,[rip+0x276cb]        # 432680 <_IO_stdin_used@@Base+0x5680>
  40afb5:	mov    esi,0x1
  40afba:	push   rbx
  40afbb:	xor    eax,eax
  40afbd:	push   rbx
  40afbe:	push   rbx
  40afbf:	push   rbx
  40afc0:	push   rbx
  40afc1:	call   4053e0 <__fprintf_chk@plt>
  40afc6:	add    rsp,0x40
  40afca:	push   rbx
  40afcb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40afd2:	mov    r9,rbx
  40afd5:	push   rbx
  40afd6:	mov    r8,rbx
  40afd9:	mov    rcx,rbx
  40afdc:	push   rbx
  40afdd:	lea    rdx,[rip+0x2781c]        # 432800 <_IO_stdin_used@@Base+0x5800>
  40afe4:	mov    esi,0x1
  40afe9:	push   rbx
  40afea:	xor    eax,eax
  40afec:	push   rbx
  40afed:	push   rbx
  40afee:	push   rbx
  40afef:	push   rbx
  40aff0:	call   4053e0 <__fprintf_chk@plt>
  40aff5:	add    rsp,0x40
  40aff9:	push   rbx
  40affa:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b001:	mov    r9,rbx
  40b004:	push   rbx
  40b005:	mov    r8,rbx
  40b008:	mov    rcx,rbx
  40b00b:	push   rbx
  40b00c:	lea    rdx,[rip+0x27975]        # 432988 <_IO_stdin_used@@Base+0x5988>
  40b013:	mov    esi,0x1
  40b018:	push   rbx
  40b019:	xor    eax,eax
  40b01b:	call   4053e0 <__fprintf_chk@plt>
  40b020:	add    rsp,0x20
  40b024:	push   rbx
  40b025:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b02c:	mov    r9,rbx
  40b02f:	push   rbx
  40b030:	mov    r8,rbx
  40b033:	mov    rcx,rbx
  40b036:	push   rbx
  40b037:	lea    rdx,[rip+0x27ca2]        # 432ce0 <_IO_stdin_used@@Base+0x5ce0>
  40b03e:	mov    esi,0x1
  40b043:	push   rbx
  40b044:	xor    eax,eax
  40b046:	push   rbx
  40b047:	push   rbx
  40b048:	push   rbx
  40b049:	push   rbx
  40b04a:	call   4053e0 <__fprintf_chk@plt>
  40b04f:	add    rsp,0x40
  40b053:	push   rbx
  40b054:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b05b:	mov    r9,rbx
  40b05e:	push   rbx
  40b05f:	mov    r8,rbx
  40b062:	mov    rcx,rbx
  40b065:	push   rbx
  40b066:	lea    rdx,[rip+0x27f93]        # 433000 <_IO_stdin_used@@Base+0x6000>
  40b06d:	mov    esi,0x1
  40b072:	push   rbx
  40b073:	xor    eax,eax
  40b075:	push   rbx
  40b076:	push   rbx
  40b077:	push   rbx
  40b078:	push   rbx
  40b079:	push   rbx
  40b07a:	push   rbx
  40b07b:	call   4053e0 <__fprintf_chk@plt>
  40b080:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b087:	add    rsp,0x50
  40b08b:	mov    rcx,rbx
  40b08e:	lea    rdx,[rip+0x2863b]        # 4336d0 <_IO_stdin_used@@Base+0x66d0>
  40b095:	mov    esi,0x1
  40b09a:	xor    eax,eax
  40b09c:	call   4053e0 <__fprintf_chk@plt>
  40b0a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b0a8:	mov    rcx,rbx
  40b0ab:	lea    rdx,[rip+0x2886e]        # 433920 <_IO_stdin_used@@Base+0x6920>
  40b0b2:	mov    esi,0x1
  40b0b7:	xor    eax,eax
  40b0b9:	call   4053e0 <__fprintf_chk@plt>
  40b0be:	mov    rax,QWORD PTR [rbx+0xe0]
  40b0c5:	mov    r9d,DWORD PTR [rax+0xa8]
  40b0cc:	test   r9d,r9d
  40b0cf:	je     40b440 <__flatcc_fb_gen_common_c_header@@Base+0xbb0>
  40b0d5:	mov    rdi,rbx
  40b0d8:	call   40bc00 <__flatcc_gen_sort@@Base>
  40b0dd:	push   rbx
  40b0de:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b0e5:	mov    r8,rbx
  40b0e8:	push   rbx
  40b0e9:	mov    esi,0x1
  40b0ee:	xor    eax,eax
  40b0f0:	mov    r9,rbx
  40b0f3:	mov    rcx,rbx
  40b0f6:	lea    rdx,[rip+0x28ceb]        # 433de8 <_IO_stdin_used@@Base+0x6de8>
  40b0fd:	call   4053e0 <__fprintf_chk@plt>
  40b102:	mov    rax,QWORD PTR [rbx+0xe0]
  40b109:	pop    rsi
  40b10a:	mov    r8d,DWORD PTR [rax+0xa8]
  40b111:	pop    rdi
  40b112:	test   r8d,r8d
  40b115:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b11c:	je     40b460 <__flatcc_fb_gen_common_c_header@@Base+0xbd0>
  40b122:	mov    rcx,rbx
  40b125:	lea    rdx,[rip+0x28da4]        # 433ed0 <_IO_stdin_used@@Base+0x6ed0>
  40b12c:	mov    esi,0x1
  40b131:	xor    eax,eax
  40b133:	call   4053e0 <__fprintf_chk@plt>
  40b138:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b13f:	lea    rdx,[rip+0x39fd7]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b146:	mov    esi,0x1
  40b14b:	xor    eax,eax
  40b14d:	call   4053e0 <__fprintf_chk@plt>
  40b152:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b159:	mov    r9,rbx
  40b15c:	mov    r8,rbx
  40b15f:	mov    rcx,rbx
  40b162:	lea    rdx,[rip+0x28d87]        # 433ef0 <_IO_stdin_used@@Base+0x6ef0>
  40b169:	mov    esi,0x1
  40b16e:	xor    eax,eax
  40b170:	call   4053e0 <__fprintf_chk@plt>
  40b175:	sub    rsp,0x8
  40b179:	push   rbx
  40b17a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b181:	mov    r9,rbx
  40b184:	push   rbx
  40b185:	mov    r8,rbx
  40b188:	mov    rcx,rbx
  40b18b:	push   rbx
  40b18c:	lea    rdx,[rip+0x28ddd]        # 433f70 <_IO_stdin_used@@Base+0x6f70>
  40b193:	mov    esi,0x1
  40b198:	push   rbx
  40b199:	xor    eax,eax
  40b19b:	push   rbx
  40b19c:	push   rbx
  40b19d:	push   rbx
  40b19e:	push   rbx
  40b19f:	push   rbx
  40b1a0:	push   rbx
  40b1a1:	push   rbx
  40b1a2:	push   rbx
  40b1a3:	push   rbx
  40b1a4:	push   rbx
  40b1a5:	push   rbx
  40b1a6:	push   rbx
  40b1a7:	push   rbx
  40b1a8:	push   rbx
  40b1a9:	push   rbx
  40b1aa:	push   rbx
  40b1ab:	push   rbx
  40b1ac:	push   rbx
  40b1ad:	push   rbx
  40b1ae:	call   4053e0 <__fprintf_chk@plt>
  40b1b3:	add    rsp,0xb8
  40b1ba:	push   rbx
  40b1bb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1c2:	mov    r9,rbx
  40b1c5:	push   rbx
  40b1c6:	mov    r8,rbx
  40b1c9:	mov    rcx,rbx
  40b1cc:	push   rbx
  40b1cd:	lea    rdx,[rip+0x28fb4]        # 434188 <_IO_stdin_used@@Base+0x7188>
  40b1d4:	mov    esi,0x1
  40b1d9:	push   rbx
  40b1da:	xor    eax,eax
  40b1dc:	push   rbx
  40b1dd:	push   rbx
  40b1de:	push   rbx
  40b1df:	push   rbx
  40b1e0:	push   rbx
  40b1e1:	call   4053e0 <__fprintf_chk@plt>
  40b1e6:	add    rsp,0x48
  40b1ea:	push   rbx
  40b1eb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b1f2:	mov    rcx,rbx
  40b1f5:	push   rbx
  40b1f6:	mov    r9,rbx
  40b1f9:	mov    r8,rbx
  40b1fc:	push   rbx
  40b1fd:	lea    rdx,[rip+0x290d4]        # 4342d8 <_IO_stdin_used@@Base+0x72d8>
  40b204:	mov    esi,0x1
  40b209:	push   rbx
  40b20a:	xor    eax,eax
  40b20c:	push   rbx
  40b20d:	push   rbx
  40b20e:	push   rbx
  40b20f:	push   rbx
  40b210:	push   rbx
  40b211:	push   rbx
  40b212:	push   rbx
  40b213:	push   rbx
  40b214:	push   rbx
  40b215:	push   rbx
  40b216:	push   rbx
  40b217:	push   rbx
  40b218:	push   rbx
  40b219:	push   rbx
  40b21a:	push   rbx
  40b21b:	push   rbx
  40b21c:	push   rbx
  40b21d:	push   rbx
  40b21e:	push   rbx
  40b21f:	push   rbx
  40b220:	push   rbx
  40b221:	push   rbx
  40b222:	push   rbx
  40b223:	push   rbx
  40b224:	push   rbx
  40b225:	push   rbx
  40b226:	push   rbx
  40b227:	push   rbx
  40b228:	push   rbx
  40b229:	push   rbx
  40b22a:	push   rbx
  40b22b:	push   rbx
  40b22c:	push   rbx
  40b22d:	push   rbx
  40b22e:	push   rbx
  40b22f:	push   rbx
  40b230:	push   rbx
  40b231:	push   rbx
  40b232:	push   rbx
  40b233:	push   rbx
  40b234:	push   rbx
  40b235:	push   rbx
  40b236:	push   rbx
  40b237:	push   rbx
  40b238:	push   rbx
  40b239:	push   rbx
  40b23a:	push   rbx
  40b23b:	push   rbx
  40b23c:	push   rbx
  40b23d:	push   rbx
  40b23e:	push   rbx
  40b23f:	push   rbx
  40b240:	push   rbx
  40b241:	call   4053e0 <__fprintf_chk@plt>
  40b246:	mov    rax,QWORD PTR [rbx+0xe0]
  40b24d:	add    rsp,0x1d0
  40b254:	mov    ecx,DWORD PTR [rax+0xa8]
  40b25a:	test   ecx,ecx
  40b25c:	jne    40b4c0 <__flatcc_fb_gen_common_c_header@@Base+0xc30>
  40b262:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b269:	lea    rdx,[rip+0x29728]        # 434998 <_IO_stdin_used@@Base+0x7998>
  40b270:	xor    eax,eax
  40b272:	mov    r8,rbx
  40b275:	mov    rcx,rbx
  40b278:	mov    esi,0x1
  40b27d:	call   4053e0 <__fprintf_chk@plt>
  40b282:	mov    rax,QWORD PTR [rbx+0xe0]
  40b289:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b290:	mov    edx,DWORD PTR [rax+0x24]
  40b293:	test   edx,edx
  40b295:	jne    40b400 <__flatcc_fb_gen_common_c_header@@Base+0xb70>
  40b29b:	lea    rdx,[rip+0x39e7b]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b2a2:	mov    esi,0x1
  40b2a7:	xor    eax,eax
  40b2a9:	call   4053e0 <__fprintf_chk@plt>
  40b2ae:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b2b5:	mov    rcx,rbx
  40b2b8:	lea    rdx,[rip+0x29779]        # 434a38 <_IO_stdin_used@@Base+0x7a38>
  40b2bf:	mov    esi,0x1
  40b2c4:	xor    eax,eax
  40b2c6:	call   4053e0 <__fprintf_chk@plt>
  40b2cb:	sub    rsp,0x8
  40b2cf:	push   rbx
  40b2d0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b2d7:	mov    r9,rbx
  40b2da:	push   rbx
  40b2db:	mov    r8,rbx
  40b2de:	mov    rcx,rbx
  40b2e1:	push   rbx
  40b2e2:	lea    rdx,[rip+0x297cf]        # 434ab8 <_IO_stdin_used@@Base+0x7ab8>
  40b2e9:	mov    esi,0x1
  40b2ee:	push   rbx
  40b2ef:	xor    eax,eax
  40b2f1:	push   rbx
  40b2f2:	push   rbx
  40b2f3:	push   rbx
  40b2f4:	push   rbx
  40b2f5:	push   rbx
  40b2f6:	push   rbx
  40b2f7:	push   rbx
  40b2f8:	call   4053e0 <__fprintf_chk@plt>
  40b2fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b304:	add    rsp,0x60
  40b308:	mov    r9,rbx
  40b30b:	mov    r8,rbx
  40b30e:	mov    rcx,rbx
  40b311:	lea    rdx,[rip+0x29af0]        # 434e08 <_IO_stdin_used@@Base+0x7e08>
  40b318:	mov    esi,0x1
  40b31d:	xor    eax,eax
  40b31f:	call   4053e0 <__fprintf_chk@plt>
  40b324:	sub    rsp,0x8
  40b328:	push   rbx
  40b329:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b330:	mov    r9,rbx
  40b333:	push   rbx
  40b334:	mov    r8,rbx
  40b337:	mov    rcx,rbx
  40b33a:	push   rbx
  40b33b:	lea    rdx,[rip+0x29b7e]        # 434ec0 <_IO_stdin_used@@Base+0x7ec0>
  40b342:	mov    esi,0x1
  40b347:	xor    eax,eax
  40b349:	call   4053e0 <__fprintf_chk@plt>
  40b34e:	add    rsp,0x18
  40b352:	push   rbx
  40b353:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b35a:	mov    r9,rbx
  40b35d:	mov    r8,rbx
  40b360:	mov    rcx,rbx
  40b363:	lea    rdx,[rip+0x29d1e]        # 435088 <_IO_stdin_used@@Base+0x8088>
  40b36a:	mov    esi,0x1
  40b36f:	xor    eax,eax
  40b371:	call   4053e0 <__fprintf_chk@plt>
  40b376:	mov    QWORD PTR [rsp],rbx
  40b37a:	push   rbx
  40b37b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b382:	mov    r9,rbx
  40b385:	push   rbx
  40b386:	mov    r8,rbx
  40b389:	mov    rcx,rbx
  40b38c:	push   rbx
  40b38d:	lea    rdx,[rip+0x29f74]        # 435308 <_IO_stdin_used@@Base+0x8308>
  40b394:	mov    esi,0x1
  40b399:	push   rbx
  40b39a:	xor    eax,eax
  40b39c:	push   rbx
  40b39d:	push   rbx
  40b39e:	call   4053e0 <__fprintf_chk@plt>
  40b3a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3aa:	add    rsp,0x40
  40b3ae:	lea    rdx,[rip+0x39d68]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b3b5:	mov    esi,0x1
  40b3ba:	xor    eax,eax
  40b3bc:	call   4053e0 <__fprintf_chk@plt>
  40b3c1:	mov    rax,QWORD PTR [rbx+0xe0]
  40b3c8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b3cf:	mov    eax,DWORD PTR [rax+0xac]
  40b3d5:	test   eax,eax
  40b3d7:	jne    40b4a0 <__flatcc_fb_gen_common_c_header@@Base+0xc10>
  40b3dd:	mov    rcx,rbp
  40b3e0:	lea    rdx,[rip+0x2a933]        # 435d1a <_IO_stdin_used@@Base+0x8d1a>
  40b3e7:	mov    esi,0x1
  40b3ec:	xor    eax,eax
  40b3ee:	call   4053e0 <__fprintf_chk@plt>
  40b3f3:	add    rsp,0x8
  40b3f7:	pop    rbx
  40b3f8:	xor    eax,eax
  40b3fa:	pop    rbp
  40b3fb:	ret    
  40b3fc:	nop    DWORD PTR [rax+0x0]
  40b400:	mov    rcx,rbx
  40b403:	lea    rdx,[rip+0x24bf6]        # 430000 <_IO_stdin_used@@Base+0x3000>
  40b40a:	mov    esi,0x1
  40b40f:	xor    eax,eax
  40b411:	call   4053e0 <__fprintf_chk@plt>
  40b416:	jmp    40b2ae <__flatcc_fb_gen_common_c_header@@Base+0xa1e>
  40b41b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b420:	lea    rdx,[rip+0x39cf6]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b427:	mov    esi,0x1
  40b42c:	xor    eax,eax
  40b42e:	call   4053e0 <__fprintf_chk@plt>
  40b433:	jmp    40ab47 <__flatcc_fb_gen_common_c_header@@Base+0x2b7>
  40b438:	nop    DWORD PTR [rax+rax*1+0x0]
  40b440:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b447:	lea    rdx,[rip+0x2a89d]        # 435ceb <_IO_stdin_used@@Base+0x8ceb>
  40b44e:	mov    esi,0x1
  40b453:	xor    eax,eax
  40b455:	call   4053e0 <__fprintf_chk@plt>
  40b45a:	jmp    40b0dd <__flatcc_fb_gen_common_c_header@@Base+0x84d>
  40b45f:	nop
  40b460:	lea    rdx,[rip+0x39cb6]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b467:	mov    esi,0x1
  40b46c:	xor    eax,eax
  40b46e:	call   4053e0 <__fprintf_chk@plt>
  40b473:	jmp    40b138 <__flatcc_fb_gen_common_c_header@@Base+0x8a8>
  40b478:	nop    DWORD PTR [rax+rax*1+0x0]
  40b480:	lea    rdx,[rip+0x39c96]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b487:	mov    esi,0x1
  40b48c:	xor    eax,eax
  40b48e:	call   4053e0 <__fprintf_chk@plt>
  40b493:	jmp    40aa18 <__flatcc_fb_gen_common_c_header@@Base+0x188>
  40b498:	nop    DWORD PTR [rax+rax*1+0x0]
  40b4a0:	lea    rdx,[rip+0x2a149]        # 4355f0 <_IO_stdin_used@@Base+0x85f0>
  40b4a7:	mov    esi,0x1
  40b4ac:	xor    eax,eax
  40b4ae:	call   4053e0 <__fprintf_chk@plt>
  40b4b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4ba:	jmp    40b3dd <__flatcc_fb_gen_common_c_header@@Base+0xb4d>
  40b4bf:	nop
  40b4c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4c7:	mov    rcx,rbx
  40b4ca:	lea    rdx,[rip+0x2a82f]        # 435d00 <_IO_stdin_used@@Base+0x8d00>
  40b4d1:	mov    esi,0x1
  40b4d6:	xor    eax,eax
  40b4d8:	call   4053e0 <__fprintf_chk@plt>
  40b4dd:	jmp    40b262 <__flatcc_fb_gen_common_c_header@@Base+0x9d2>
  40b4e2:	nop    WORD PTR [rax+rax*1+0x0]
  40b4e8:	push   rbx
  40b4e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4f0:	mov    r9,rbx
  40b4f3:	push   rbx
  40b4f4:	mov    r8,rbx
  40b4f7:	mov    rcx,rbx
  40b4fa:	lea    rdx,[rip+0x24297]        # 42f798 <_IO_stdin_used@@Base+0x2798>
  40b501:	mov    esi,0x1
  40b506:	xor    eax,eax
  40b508:	call   4053e0 <__fprintf_chk@plt>
  40b50d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b514:	mov    r9,rbx
  40b517:	mov    r8,rbx
  40b51a:	lea    rcx,[rip+0x39bfc]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b521:	lea    rdx,[rip+0x24340]        # 42f868 <_IO_stdin_used@@Base+0x2868>
  40b528:	mov    esi,0x1
  40b52d:	xor    eax,eax
  40b52f:	mov    QWORD PTR [rsp],rbx
  40b533:	call   4053e0 <__fprintf_chk@plt>
  40b538:	push   rbx
  40b539:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b540:	mov    r8,rbx
  40b543:	push   rbx
  40b544:	mov    rcx,rbx
  40b547:	mov    r9,rbx
  40b54a:	lea    rdx,[rip+0x2446f]        # 42f9c0 <_IO_stdin_used@@Base+0x29c0>
  40b551:	mov    esi,0x1
  40b556:	xor    eax,eax
  40b558:	call   4053e0 <__fprintf_chk@plt>
  40b55d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b564:	add    rsp,0x20
  40b568:	mov    r8,rbp
  40b56b:	mov    rcx,rbp
  40b56e:	lea    rdx,[rip+0x246b3]        # 42fc28 <_IO_stdin_used@@Base+0x2c28>
  40b575:	mov    esi,0x1
  40b57a:	xor    eax,eax
  40b57c:	call   4053e0 <__fprintf_chk@plt>
  40b581:	jmp    40a954 <__flatcc_fb_gen_common_c_header@@Base+0xc4>
  40b586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b590:	lea    rdx,[rip+0x241a9]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  40b597:	mov    esi,0x1
  40b59c:	xor    eax,eax
  40b59e:	call   4053e0 <__fprintf_chk@plt>
  40b5a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5aa:	jmp    40a923 <__flatcc_fb_gen_common_c_header@@Base+0x93>
  40b5af:	nop
  40b5b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5b7:	lea    rdx,[rip+0x240fa]        # 42f6b8 <_IO_stdin_used@@Base+0x26b8>
  40b5be:	mov    esi,0x1
  40b5c3:	xor    eax,eax
  40b5c5:	call   4053e0 <__fprintf_chk@plt>
  40b5ca:	mov    rax,QWORD PTR [rbx+0xe0]
  40b5d1:	jmp    40a90c <__flatcc_fb_gen_common_c_header@@Base+0x7c>
  40b5d6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000040b5e0 <__flatcc_fb_gen_c_reader@@Base>:
  40b5e0:	endbr64 
  40b5e4:	push   r15
  40b5e6:	lea    rdx,[rip+0x2a02b]        # 435618 <_IO_stdin_used@@Base+0x8618>
  40b5ed:	mov    esi,0x1
  40b5f2:	push   r14
  40b5f4:	push   r13
  40b5f6:	push   r12
  40b5f8:	lea    r12,[rdi+0x66]
  40b5fc:	push   rbp
  40b5fd:	mov    rbp,rdi
  40b600:	push   rbx
  40b601:	sub    rsp,0x118
  40b608:	mov    rax,QWORD PTR fs:0x28
  40b611:	mov    QWORD PTR [rsp+0x108],rax
  40b619:	xor    eax,eax
  40b61b:	mov    rax,QWORD PTR [rdi+0xe0]
  40b622:	mov    ebx,DWORD PTR [rax+0xa4]
  40b628:	mov    rax,QWORD PTR [rdi+0xd8]
  40b62f:	mov    rdi,QWORD PTR [rdi+0xd0]
  40b636:	mov    rcx,QWORD PTR [rax+0x118]
  40b63d:	xor    eax,eax
  40b63f:	mov    r8,rcx
  40b642:	call   4053e0 <__fprintf_chk@plt>
  40b647:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b64e:	lea    rdx,[rip+0x23fd3]        # 42f628 <_IO_stdin_used@@Base+0x2628>
  40b655:	mov    esi,0x1
  40b65a:	xor    eax,eax
  40b65c:	call   4053e0 <__fprintf_chk@plt>
  40b661:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b668:	test   ebx,ebx
  40b66a:	jne    40bb10 <__flatcc_fb_gen_c_reader@@Base+0x530>
  40b670:	mov    r8,rbp
  40b673:	mov    rcx,r12
  40b676:	lea    rdx,[rip+0x2a18b]        # 435808 <_IO_stdin_used@@Base+0x8808>
  40b67d:	mov    esi,0x1
  40b682:	xor    eax,eax
  40b684:	call   4053e0 <__fprintf_chk@plt>
  40b689:	lea    rdx,[rip+0x2a6a4]        # 435d34 <_IO_stdin_used@@Base+0x8d34>
  40b690:	lea    rsi,[rip+0x22b7e]        # 42e215 <_IO_stdin_used@@Base+0x1215>
  40b697:	mov    rdi,rbp
  40b69a:	call   406620 <__flatcc_fb_gen_c_includes@@Base>
  40b69f:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b6a6:	lea    rdx,[rip+0x2a19b]        # 435848 <_IO_stdin_used@@Base+0x8848>
  40b6ad:	mov    esi,0x1
  40b6b2:	xor    eax,eax
  40b6b4:	call   4053e0 <__fprintf_chk@plt>
  40b6b9:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b6c0:	lea    rdx,[rip+0x2a351]        # 435a18 <_IO_stdin_used@@Base+0x8a18>
  40b6c7:	mov    esi,0x1
  40b6cc:	xor    eax,eax
  40b6ce:	call   4053e0 <__fprintf_chk@plt>
  40b6d3:	mov    rax,QWORD PTR [rbp+0xe0]
  40b6da:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b6e1:	mov    r8d,DWORD PTR [rax+0xac]
  40b6e8:	test   r8d,r8d
  40b6eb:	jne    40baf0 <__flatcc_fb_gen_c_reader@@Base+0x510>
  40b6f1:	mov    rax,QWORD PTR [rbp+0xd8]
  40b6f8:	cmp    WORD PTR [rax+0x20],0x2
  40b6fd:	je     40ba90 <__flatcc_fb_gen_c_reader@@Base+0x4b0>
  40b703:	mov    r8,rbp
  40b706:	mov    rcx,rbp
  40b709:	lea    rdx,[rip+0x2a198]        # 4358a8 <_IO_stdin_used@@Base+0x88a8>
  40b710:	mov    esi,0x1
  40b715:	xor    eax,eax
  40b717:	call   4053e0 <__fprintf_chk@plt>
  40b71c:	mov    rax,QWORD PTR [rbp+0xd8]
  40b723:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b72a:	cmp    WORD PTR [rax+0x38],0x2
  40b72f:	je     40bac0 <__flatcc_fb_gen_c_reader@@Base+0x4e0>
  40b735:	mov    rax,QWORD PTR [rbp+0xe0]
  40b73c:	mov    r8,rbp
  40b73f:	mov    r9,QWORD PTR [rax+0x78]
  40b743:	mov    rcx,rbp
  40b746:	lea    rdx,[rip+0x2a1c3]        # 435910 <_IO_stdin_used@@Base+0x8910>
  40b74d:	mov    esi,0x1
  40b752:	xor    eax,eax
  40b754:	call   4053e0 <__fprintf_chk@plt>
  40b759:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b760:	lea    rdx,[rip+0x399b6]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b767:	mov    esi,0x1
  40b76c:	xor    eax,eax
  40b76e:	call   4053e0 <__fprintf_chk@plt>
  40b773:	mov    rax,QWORD PTR [rbp+0xd8]
  40b77a:	mov    rbx,QWORD PTR [rax+0x48]
  40b77e:	test   rbx,rbx
  40b781:	je     40b79f <__flatcc_fb_gen_c_reader@@Base+0x1bf>
  40b783:	nop    DWORD PTR [rax+rax*1+0x0]
  40b788:	mov    rsi,rbx
  40b78b:	mov    rdi,rbp
  40b78e:	call   406db0 <__flatcc_fb_codegen_c@@Base+0x360>
  40b793:	mov    rbx,QWORD PTR [rbx+0xc0]
  40b79a:	test   rbx,rbx
  40b79d:	jne    40b788 <__flatcc_fb_gen_c_reader@@Base+0x1a8>
  40b79f:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b7a6:	lea    rdx,[rip+0x39970]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b7ad:	mov    esi,0x1
  40b7b2:	xor    eax,eax
  40b7b4:	call   4053e0 <__fprintf_chk@plt>
  40b7b9:	mov    rax,QWORD PTR [rbp+0xd8]
  40b7c0:	mov    rbx,QWORD PTR [rax+0x40]
  40b7c4:	test   rbx,rbx
  40b7c7:	jne    40b7d8 <__flatcc_fb_gen_c_reader@@Base+0x1f8>
  40b7c9:	jmp    40b912 <__flatcc_fb_gen_c_reader@@Base+0x332>
  40b7ce:	xchg   ax,ax
  40b7d0:	mov    rbx,QWORD PTR [rbx]
  40b7d3:	test   rbx,rbx
  40b7d6:	je     40b7f2 <__flatcc_fb_gen_c_reader@@Base+0x212>
  40b7d8:	cmp    WORD PTR [rbx+0x10],0x0
  40b7dd:	jne    40b7d0 <__flatcc_fb_gen_c_reader@@Base+0x1f0>
  40b7df:	mov    rsi,rbx
  40b7e2:	mov    rdi,rbp
  40b7e5:	call   406db0 <__flatcc_fb_codegen_c@@Base+0x360>
  40b7ea:	mov    rbx,QWORD PTR [rbx]
  40b7ed:	test   rbx,rbx
  40b7f0:	jne    40b7d8 <__flatcc_fb_gen_c_reader@@Base+0x1f8>
  40b7f2:	mov    rax,QWORD PTR [rbp+0xd8]
  40b7f9:	mov    r15,QWORD PTR [rax+0x40]
  40b7fd:	test   r15,r15
  40b800:	je     40b912 <__flatcc_fb_gen_c_reader@@Base+0x332>
  40b806:	lea    r13,[rsp+0xf0]
  40b80e:	mov    rbx,rsp
  40b811:	lea    r12,[r13+0x10]
  40b815:	jmp    40b82c <__flatcc_fb_gen_c_reader@@Base+0x24c>
  40b817:	nop    WORD PTR [rax+rax*1+0x0]
  40b820:	mov    r15,QWORD PTR [r15]
  40b823:	test   r15,r15
  40b826:	je     40b912 <__flatcc_fb_gen_c_reader@@Base+0x332>
  40b82c:	cmp    WORD PTR [r15+0x10],0x1
  40b832:	ja     40b820 <__flatcc_fb_gen_c_reader@@Base+0x240>
  40b834:	xor    eax,eax
  40b836:	mov    ecx,0x1d
  40b83b:	mov    rdi,rbx
  40b83e:	rep stos QWORD PTR es:[rdi],rax
  40b841:	mov    rdx,rbx
  40b844:	mov    rsi,r15
  40b847:	mov    rdi,QWORD PTR [r15+0x18]
  40b84b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40b850:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b857:	mov    r14d,DWORD PTR [r15+0xa0]
  40b85e:	mov    r9,rbp
  40b861:	mov    r8,rbx
  40b864:	mov    rcx,rbx
  40b867:	lea    rdx,[rip+0x2a0da]        # 435948 <_IO_stdin_used@@Base+0x8948>
  40b86e:	mov    esi,0x1
  40b873:	xor    eax,eax
  40b875:	call   4053e0 <__fprintf_chk@plt>
  40b87a:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b881:	mov    r9d,r14d
  40b884:	mov    r8,rbp
  40b887:	mov    rcx,rbx
  40b88a:	lea    rdx,[rip+0x2a0ff]        # 435990 <_IO_stdin_used@@Base+0x8990>
  40b891:	mov    esi,0x1
  40b896:	xor    eax,eax
  40b898:	call   4053e0 <__fprintf_chk@plt>
  40b89d:	mov    rax,r13
  40b8a0:	mov    edx,r14d
  40b8a3:	and    edx,0xf
  40b8a6:	cmp    dl,0xa
  40b8a9:	sbb    ecx,ecx
  40b8ab:	and    ecx,0xffffffd9
  40b8ae:	lea    edx,[rdx+rcx*1+0x57]
  40b8b2:	mov    BYTE PTR [rax+0x3],dl
  40b8b5:	mov    edx,r14d
  40b8b8:	shr    dl,0x4
  40b8bb:	cmp    dl,0xa
  40b8be:	sbb    ecx,ecx
  40b8c0:	and    ecx,0xffffffd9
  40b8c3:	lea    edx,[rdx+rcx*1+0x57]
  40b8c7:	mov    BYTE PTR [rax],0x5c
  40b8ca:	mov    BYTE PTR [rax+0x1],0x78
  40b8ce:	mov    BYTE PTR [rax+0x2],dl
  40b8d1:	add    rax,0x4
  40b8d5:	shr    r14d,0x8
  40b8d9:	cmp    rax,r12
  40b8dc:	jne    40b8a0 <__flatcc_fb_gen_c_reader@@Base+0x2c0>
  40b8de:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b8e5:	mov    r8,r13
  40b8e8:	mov    rcx,rbx
  40b8eb:	lea    rdx,[rip+0x2a0ce]        # 4359c0 <_IO_stdin_used@@Base+0x89c0>
  40b8f2:	mov    esi,0x1
  40b8f7:	xor    eax,eax
  40b8f9:	mov    BYTE PTR [rsp+0x100],0x0
  40b901:	call   4053e0 <__fprintf_chk@plt>
  40b906:	mov    r15,QWORD PTR [r15]
  40b909:	test   r15,r15
  40b90c:	jne    40b82c <__flatcc_fb_gen_c_reader@@Base+0x24c>
  40b912:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b919:	lea    rdx,[rip+0x397fd]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b920:	mov    esi,0x1
  40b925:	xor    eax,eax
  40b927:	call   4053e0 <__fprintf_chk@plt>
  40b92c:	mov    rax,QWORD PTR [rbp+0xd8]
  40b933:	mov    rbx,QWORD PTR [rax+0x40]
  40b937:	test   rbx,rbx
  40b93a:	jne    40b948 <__flatcc_fb_gen_c_reader@@Base+0x368>
  40b93c:	jmp    40b968 <__flatcc_fb_gen_c_reader@@Base+0x388>
  40b93e:	xchg   ax,ax
  40b940:	mov    rbx,QWORD PTR [rbx]
  40b943:	test   rbx,rbx
  40b946:	je     40b968 <__flatcc_fb_gen_c_reader@@Base+0x388>
  40b948:	cmp    WORD PTR [rbx+0x10],0x3
  40b94d:	jne    40b940 <__flatcc_fb_gen_c_reader@@Base+0x360>
  40b94f:	mov    rsi,rbx
  40b952:	mov    rdi,rbp
  40b955:	call   408d60 <__flatcc_fb_codegen_c@@Base+0x2310>
  40b95a:	mov    rbx,QWORD PTR [rbx]
  40b95d:	test   rbx,rbx
  40b960:	jne    40b948 <__flatcc_fb_gen_c_reader@@Base+0x368>
  40b962:	nop    WORD PTR [rax+rax*1+0x0]
  40b968:	mov    rdi,QWORD PTR [rbp+0xd0]
  40b96f:	lea    rdx,[rip+0x397a7]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40b976:	mov    esi,0x1
  40b97b:	xor    eax,eax
  40b97d:	call   4053e0 <__fprintf_chk@plt>
  40b982:	mov    rax,QWORD PTR [rbp+0xd8]
  40b989:	mov    rbx,QWORD PTR [rax+0x48]
  40b98d:	test   rbx,rbx
  40b990:	je     40b9b6 <__flatcc_fb_gen_c_reader@@Base+0x3d6>
  40b992:	nop    WORD PTR [rax+rax*1+0x0]
  40b998:	mov    rsi,rbx
  40b99b:	mov    rdi,rbp
  40b99e:	call   409970 <__flatcc_fb_codegen_c@@Base+0x2f20>
  40b9a3:	mov    rbx,QWORD PTR [rbx+0xc0]
  40b9aa:	test   rbx,rbx
  40b9ad:	jne    40b998 <__flatcc_fb_gen_c_reader@@Base+0x3b8>
  40b9af:	mov    rax,QWORD PTR [rbp+0xd8]
  40b9b6:	mov    rbx,QWORD PTR [rax+0x40]
  40b9ba:	test   rbx,rbx
  40b9bd:	jne    40b9e0 <__flatcc_fb_gen_c_reader@@Base+0x400>
  40b9bf:	jmp    40ba07 <__flatcc_fb_gen_c_reader@@Base+0x427>
  40b9c1:	nop    DWORD PTR [rax+0x0]
  40b9c8:	test   ax,ax
  40b9cb:	jne    40b9d8 <__flatcc_fb_gen_c_reader@@Base+0x3f8>
  40b9cd:	mov    rsi,rbx
  40b9d0:	mov    rdi,rbp
  40b9d3:	call   406f90 <__flatcc_fb_codegen_c@@Base+0x540>
  40b9d8:	mov    rbx,QWORD PTR [rbx]
  40b9db:	test   rbx,rbx
  40b9de:	je     40ba07 <__flatcc_fb_gen_c_reader@@Base+0x427>
  40b9e0:	movzx  eax,WORD PTR [rbx+0x10]
  40b9e4:	cmp    ax,0x3
  40b9e8:	jbe    40b9c8 <__flatcc_fb_gen_c_reader@@Base+0x3e8>
  40b9ea:	cmp    ax,0x4
  40b9ee:	jne    40bb9f <__flatcc_fb_gen_c_reader@@Base+0x5bf>
  40b9f4:	mov    rsi,rbx
  40b9f7:	mov    rdi,rbp
  40b9fa:	call   408d60 <__flatcc_fb_codegen_c@@Base+0x2310>
  40b9ff:	mov    rbx,QWORD PTR [rbx]
  40ba02:	test   rbx,rbx
  40ba05:	jne    40b9e0 <__flatcc_fb_gen_c_reader@@Base+0x400>
  40ba07:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ba0e:	lea    rdx,[rip+0x39708]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40ba15:	mov    esi,0x1
  40ba1a:	xor    eax,eax
  40ba1c:	call   4053e0 <__fprintf_chk@plt>
  40ba21:	mov    rax,QWORD PTR [rbp+0xe0]
  40ba28:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ba2f:	mov    eax,DWORD PTR [rax+0xac]
  40ba35:	test   eax,eax
  40ba37:	jne    40bb80 <__flatcc_fb_gen_c_reader@@Base+0x5a0>
  40ba3d:	mov    rax,QWORD PTR [rbp+0xd8]
  40ba44:	mov    esi,0x1
  40ba49:	mov    rcx,QWORD PTR [rax+0x118]
  40ba50:	lea    rdx,[rip+0x2a2e7]        # 435d3e <_IO_stdin_used@@Base+0x8d3e>
  40ba57:	xor    eax,eax
  40ba59:	call   4053e0 <__fprintf_chk@plt>
  40ba5e:	xor    eax,eax
  40ba60:	mov    rsi,QWORD PTR [rsp+0x108]
  40ba68:	xor    rsi,QWORD PTR fs:0x28
  40ba71:	jne    40bbef <__flatcc_fb_gen_c_reader@@Base+0x60f>
  40ba77:	add    rsp,0x118
  40ba7e:	pop    rbx
  40ba7f:	pop    rbp
  40ba80:	pop    r12
  40ba82:	pop    r13
  40ba84:	pop    r14
  40ba86:	pop    r15
  40ba88:	ret    
  40ba89:	nop    DWORD PTR [rax+0x0]
  40ba90:	sub    rsp,0x8
  40ba94:	mov    r9d,DWORD PTR [rax+0x18]
  40ba98:	push   QWORD PTR [rax+0x10]
  40ba9b:	mov    esi,0x1
  40baa0:	mov    r8,rbp
  40baa3:	mov    rcx,rbp
  40baa6:	lea    rdx,[rip+0x29dc3]        # 435870 <_IO_stdin_used@@Base+0x8870>
  40baad:	xor    eax,eax
  40baaf:	call   4053e0 <__fprintf_chk@plt>
  40bab4:	pop    rsi
  40bab5:	pop    rdi
  40bab6:	jmp    40b71c <__flatcc_fb_gen_c_reader@@Base+0x13c>
  40babb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bac0:	sub    rsp,0x8
  40bac4:	mov    r9d,DWORD PTR [rax+0x30]
  40bac8:	push   QWORD PTR [rax+0x28]
  40bacb:	mov    rcx,rbp
  40bace:	lea    rdx,[rip+0x29e0b]        # 4358e0 <_IO_stdin_used@@Base+0x88e0>
  40bad5:	mov    r8,rbp
  40bad8:	mov    esi,0x1
  40badd:	xor    eax,eax
  40badf:	call   4053e0 <__fprintf_chk@plt>
  40bae4:	pop    rdx
  40bae5:	pop    rcx
  40bae6:	jmp    40b759 <__flatcc_fb_gen_c_reader@@Base+0x179>
  40baeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40baf0:	lea    rdx,[rip+0x23c49]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  40baf7:	mov    esi,0x1
  40bafc:	xor    eax,eax
  40bafe:	call   4053e0 <__fprintf_chk@plt>
  40bb03:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bb0a:	jmp    40b6f1 <__flatcc_fb_gen_c_reader@@Base+0x111>
  40bb0f:	nop
  40bb10:	lea    rdx,[rip+0x29b31]        # 435648 <_IO_stdin_used@@Base+0x8648>
  40bb17:	mov    esi,0x1
  40bb1c:	xor    eax,eax
  40bb1e:	call   4053e0 <__fprintf_chk@plt>
  40bb23:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bb2a:	mov    r8,rbp
  40bb2d:	mov    rcx,r12
  40bb30:	lea    rdx,[rip+0x29cd1]        # 435808 <_IO_stdin_used@@Base+0x8808>
  40bb37:	mov    esi,0x1
  40bb3c:	xor    eax,eax
  40bb3e:	call   4053e0 <__fprintf_chk@plt>
  40bb43:	mov    rdi,rbp
  40bb46:	lea    rdx,[rip+0x2a1e7]        # 435d34 <_IO_stdin_used@@Base+0x8d34>
  40bb4d:	lea    rsi,[rip+0x226c1]        # 42e215 <_IO_stdin_used@@Base+0x1215>
  40bb54:	call   406620 <__flatcc_fb_gen_c_includes@@Base>
  40bb59:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bb60:	lea    rdx,[rip+0x29ce1]        # 435848 <_IO_stdin_used@@Base+0x8848>
  40bb67:	mov    esi,0x1
  40bb6c:	xor    eax,eax
  40bb6e:	call   4053e0 <__fprintf_chk@plt>
  40bb73:	jmp    40b6d3 <__flatcc_fb_gen_c_reader@@Base+0xf3>
  40bb78:	nop    DWORD PTR [rax+rax*1+0x0]
  40bb80:	lea    rdx,[rip+0x29a69]        # 4355f0 <_IO_stdin_used@@Base+0x85f0>
  40bb87:	mov    esi,0x1
  40bb8c:	xor    eax,eax
  40bb8e:	call   4053e0 <__fprintf_chk@plt>
  40bb93:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bb9a:	jmp    40ba3d <__flatcc_fb_gen_c_reader@@Base+0x45d>
  40bb9f:	mov    rax,QWORD PTR [rip+0x45442]        # 450fe8 <stderr@GLIBC_2.2.5>
  40bba6:	lea    rcx,[rip+0x22763]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  40bbad:	mov    rdi,QWORD PTR [rax]
  40bbb0:	lea    rdx,[rip+0x29e9c]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40bbb7:	mov    esi,0x1
  40bbbc:	lea    r9,[rip+0x29e25]        # 4359e8 <_IO_stdin_used@@Base+0x89e8>
  40bbc3:	mov    r8d,0x688
  40bbc9:	xor    eax,eax
  40bbcb:	call   4053e0 <__fprintf_chk@plt>
  40bbd0:	lea    rcx,[rip+0x2a4e9]        # 4360c0 <_IO_stdin_used@@Base+0x90c0>
  40bbd7:	mov    edx,0x688
  40bbdc:	lea    rsi,[rip+0x2272d]        # 42e310 <_IO_stdin_used@@Base+0x1310>
  40bbe3:	lea    rdi,[rip+0x2af2f]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40bbea:	call   4052e0 <__assert_fail@plt>
  40bbef:	call   4052c0 <__stack_chk_fail@plt>
  40bbf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bbfe:	xchg   ax,ax

000000000040bc00 <__flatcc_gen_sort@@Base>:
  40bc00:	endbr64 
  40bc04:	push   rbx
  40bc05:	mov    rbx,rdi
  40bc08:	mov    rcx,rbx
  40bc0b:	mov    rdi,QWORD PTR [rdi+0xd0]
  40bc12:	lea    rdx,[rip+0x2a4c7]        # 4360e0 <_IO_stdin_used@@Base+0x90e0>
  40bc19:	mov    esi,0x1
  40bc1e:	xor    eax,eax
  40bc20:	call   4053e0 <__fprintf_chk@plt>
  40bc25:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc2c:	mov    r8,rbx
  40bc2f:	mov    rcx,rbx
  40bc32:	lea    rdx,[rip+0x2a877]        # 4364b0 <_IO_stdin_used@@Base+0x94b0>
  40bc39:	mov    esi,0x1
  40bc3e:	xor    eax,eax
  40bc40:	call   4053e0 <__fprintf_chk@plt>
  40bc45:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc4c:	mov    r9,rbx
  40bc4f:	mov    r8,rbx
  40bc52:	mov    rcx,rbx
  40bc55:	lea    rdx,[rip+0x2a964]        # 4365c0 <_IO_stdin_used@@Base+0x95c0>
  40bc5c:	mov    esi,0x1
  40bc61:	xor    eax,eax
  40bc63:	call   4053e0 <__fprintf_chk@plt>
  40bc68:	sub    rsp,0x8
  40bc6c:	push   rbx
  40bc6d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc74:	mov    r9,rbx
  40bc77:	mov    r8,rbx
  40bc7a:	mov    rcx,rbx
  40bc7d:	lea    rdx,[rip+0x2aa14]        # 436698 <_IO_stdin_used@@Base+0x9698>
  40bc84:	mov    esi,0x1
  40bc89:	xor    eax,eax
  40bc8b:	call   4053e0 <__fprintf_chk@plt>
  40bc90:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc97:	mov    r8,rbx
  40bc9a:	mov    rcx,rbx
  40bc9d:	lea    rdx,[rip+0x2aa8c]        # 436730 <_IO_stdin_used@@Base+0x9730>
  40bca4:	mov    esi,0x1
  40bca9:	xor    eax,eax
  40bcab:	call   4053e0 <__fprintf_chk@plt>
  40bcb0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bcb7:	mov    r9,rbx
  40bcba:	mov    r8,rbx
  40bcbd:	mov    rcx,rbx
  40bcc0:	lea    rdx,[rip+0x2ac01]        # 4368c8 <_IO_stdin_used@@Base+0x98c8>
  40bcc7:	mov    esi,0x1
  40bccc:	xor    eax,eax
  40bcce:	mov    QWORD PTR [rsp],rbx
  40bcd2:	call   4053e0 <__fprintf_chk@plt>
  40bcd7:	mov    QWORD PTR [rsp],rbx
  40bcdb:	push   rbx
  40bcdc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bce3:	mov    r9,rbx
  40bce6:	push   rbx
  40bce7:	mov    r8,rbx
  40bcea:	mov    rcx,rbx
  40bced:	lea    rdx,[rip+0x2ac5c]        # 436950 <_IO_stdin_used@@Base+0x9950>
  40bcf4:	mov    esi,0x1
  40bcf9:	xor    eax,eax
  40bcfb:	call   4053e0 <__fprintf_chk@plt>
  40bd00:	add    rsp,0x18
  40bd04:	push   rbx
  40bd05:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bd0c:	mov    r9,rbx
  40bd0f:	mov    r8,rbx
  40bd12:	mov    rcx,rbx
  40bd15:	lea    rdx,[rip+0x2acc4]        # 4369e0 <_IO_stdin_used@@Base+0x99e0>
  40bd1c:	mov    esi,0x1
  40bd21:	xor    eax,eax
  40bd23:	call   4053e0 <__fprintf_chk@plt>
  40bd28:	push   rbx
  40bd29:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bd30:	mov    r9,rbx
  40bd33:	push   rbx
  40bd34:	mov    r8,rbx
  40bd37:	mov    rcx,rbx
  40bd3a:	push   rbx
  40bd3b:	lea    rdx,[rip+0x2ad06]        # 436a48 <_IO_stdin_used@@Base+0x9a48>
  40bd42:	mov    esi,0x1
  40bd47:	push   rbx
  40bd48:	xor    eax,eax
  40bd4a:	call   4053e0 <__fprintf_chk@plt>
  40bd4f:	add    rsp,0x30
  40bd53:	xor    eax,eax
  40bd55:	pop    rbx
  40bd56:	ret    
  40bd57:	nop    WORD PTR [rax+rax*1+0x0]
  40bd60:	push   rbp
  40bd61:	xor    ebp,ebp
  40bd63:	push   rbx
  40bd64:	sub    rsp,0x8
  40bd68:	test   rdi,rdi
  40bd6b:	je     40bd87 <__flatcc_gen_sort@@Base+0x187>
  40bd6d:	mov    rbx,rdi
  40bd70:	test   BYTE PTR [rbx+0x70],0x4
  40bd74:	jne    40bd7f <__flatcc_gen_sort@@Base+0x17f>
  40bd76:	cmp    WORD PTR [rbx+0x28],0xe
  40bd7b:	je     40bd90 <__flatcc_gen_sort@@Base+0x190>
  40bd7d:	inc    ebp
  40bd7f:	mov    rbx,QWORD PTR [rbx]
  40bd82:	test   rbx,rbx
  40bd85:	jne    40bd70 <__flatcc_gen_sort@@Base+0x170>
  40bd87:	add    rsp,0x8
  40bd8b:	pop    rbx
  40bd8c:	mov    eax,ebp
  40bd8e:	pop    rbp
  40bd8f:	ret    
  40bd90:	mov    rax,QWORD PTR [rbx+0x18]
  40bd94:	cmp    WORD PTR [rax+0x10],0x1
  40bd99:	jne    40bd7d <__flatcc_gen_sort@@Base+0x17d>
  40bd9b:	mov    rdi,QWORD PTR [rax+0x28]
  40bd9f:	call   40bd60 <__flatcc_gen_sort@@Base+0x160>
  40bda4:	add    ebp,eax
  40bda6:	jmp    40bd7f <__flatcc_gen_sort@@Base+0x17f>
  40bda8:	nop    DWORD PTR [rax+rax*1+0x0]
  40bdb0:	push   r15
  40bdb2:	mov    r15,rcx
  40bdb5:	mov    ecx,0x1d
  40bdba:	push   r14
  40bdbc:	mov    r14d,edx
  40bdbf:	push   r13
  40bdc1:	mov    r13,rsi
  40bdc4:	mov    rsi,r8
  40bdc7:	push   r12
  40bdc9:	mov    r12,rdi
  40bdcc:	push   rbp
  40bdcd:	lea    rbp,[rip+0x2aceb]        # 436abf <_IO_stdin_used@@Base+0x9abf>
  40bdd4:	push   rbx
  40bdd5:	sub    rsp,0x208
  40bddc:	mov    rax,QWORD PTR fs:0x28
  40bde5:	mov    QWORD PTR [rsp+0x1f8],rax
  40bded:	xor    eax,eax
  40bdef:	test   r9d,r9d
  40bdf2:	lea    rax,[rip+0x3c31a]        # 448113 <fb_schema_table_missing@@Base+0x2493>
  40bdf9:	cmovne rax,rbp
  40bdfd:	lea    rbx,[rsp+0x20]
  40be02:	mov    QWORD PTR [rsp],rax
  40be06:	mov    rdi,rbx
  40be09:	xor    eax,eax
  40be0b:	rep stos QWORD PTR es:[rdi],rax
  40be0e:	lea    rdi,[rsp+0x110]
  40be16:	mov    ecx,0x1d
  40be1b:	mov    QWORD PTR [rsp+0x8],rdi
  40be20:	rep stos QWORD PTR es:[rdi],rax
  40be23:	mov    rdi,QWORD PTR [r8+0x18]
  40be27:	mov    rdx,rbx
  40be2a:	mov    QWORD PTR [rsp+0x10],r8
  40be2f:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40be34:	mov    r8,QWORD PTR [rsp+0x10]
  40be39:	mov    rbp,QWORD PTR [r8+0x28]
  40be3d:	test   rbp,rbp
  40be40:	je     40bfa0 <__flatcc_gen_sort@@Base+0x3a0>
  40be46:	mov    rax,rbx
  40be49:	mov    rbx,rbp
  40be4c:	mov    rbp,r12
  40be4f:	mov    r12,rax
  40be52:	jmp    40bee4 <__flatcc_gen_sort@@Base+0x2e4>
  40be57:	nop    WORD PTR [rax+rax*1+0x0]
  40be60:	mov    rsi,QWORD PTR [rbx+0x18]
  40be64:	mov    rdx,QWORD PTR [rsp+0x8]
  40be69:	mov    rdi,QWORD PTR [rsi+0x18]
  40be6d:	mov    QWORD PTR [rsp+0x18],rcx
  40be72:	mov    QWORD PTR [rsp+0x10],r8
  40be77:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40be7c:	mov    rax,QWORD PTR [rbx+0x18]
  40be80:	mov    r8,QWORD PTR [rsp+0x10]
  40be85:	movzx  eax,WORD PTR [rax+0x10]
  40be89:	mov    rcx,QWORD PTR [rsp+0x18]
  40be8e:	test   ax,ax
  40be91:	jne    40bfd0 <__flatcc_gen_sort@@Base+0x3d0>
  40be97:	sub    rsp,0x8
  40be9b:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bea2:	push   QWORD PTR [rsp+0x10]
  40bea6:	mov    r9,rbp
  40bea9:	lea    rdx,[rip+0x2aed0]        # 436d80 <_IO_stdin_used@@Base+0x9d80>
  40beb0:	push   r8
  40beb2:	mov    esi,0x1
  40beb7:	xor    eax,eax
  40beb9:	push   rcx
  40beba:	mov    rcx,rbp
  40bebd:	push   r12
  40bebf:	push   r15
  40bec1:	push   r14
  40bec3:	push   r13
  40bec5:	mov    r8,QWORD PTR [rsp+0x40]
  40beca:	call   4053e0 <__fprintf_chk@plt>
  40becf:	add    rsp,0x40
  40bed3:	nop    DWORD PTR [rax+rax*1+0x0]
  40bed8:	mov    rbx,QWORD PTR [rbx]
  40bedb:	test   rbx,rbx
  40bede:	je     40bfa0 <__flatcc_gen_sort@@Base+0x3a0>
  40bee4:	mov    rax,QWORD PTR [rbx+0x8]
  40bee8:	mov    r8,QWORD PTR [rax]
  40beeb:	mov    rcx,QWORD PTR [rax+0x8]
  40beef:	movzx  eax,WORD PTR [rbx+0x28]
  40bef3:	cmp    ax,0xa
  40bef7:	je     40bf60 <__flatcc_gen_sort@@Base+0x360>
  40bef9:	cmp    ax,0xe
  40befd:	je     40be60 <__flatcc_gen_sort@@Base+0x260>
  40bf03:	test   ax,ax
  40bf06:	je     40bed8 <__flatcc_gen_sort@@Base+0x2d8>
  40bf08:	mov    rax,QWORD PTR [rip+0x450d9]        # 450fe8 <stderr@GLIBC_2.2.5>
  40bf0f:	lea    rcx,[rip+0x2af22]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40bf16:	mov    rdi,QWORD PTR [rax]
  40bf19:	lea    rdx,[rip+0x29b33]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40bf20:	mov    esi,0x1
  40bf25:	lea    r9,[rip+0x2afb4]        # 436ee0 <_IO_stdin_used@@Base+0x9ee0>
  40bf2c:	mov    r8d,0x558
  40bf32:	xor    eax,eax
  40bf34:	call   4053e0 <__fprintf_chk@plt>
  40bf39:	lea    rcx,[rip+0x34680]        # 4405c0 <_IO_stdin_used@@Base+0x135c0>
  40bf40:	mov    edx,0x558
  40bf45:	lea    rsi,[rip+0x2aeec]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40bf4c:	lea    rdi,[rip+0x2abc6]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40bf53:	call   4052e0 <__assert_fail@plt>
  40bf58:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf60:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bf67:	push   r8
  40bf69:	mov    r9,rbp
  40bf6c:	lea    rdx,[rip+0x2af35]        # 436ea8 <_IO_stdin_used@@Base+0x9ea8>
  40bf73:	push   rcx
  40bf74:	mov    esi,0x1
  40bf79:	mov    rcx,rbp
  40bf7c:	push   r12
  40bf7e:	xor    eax,eax
  40bf80:	push   r15
  40bf82:	push   r14
  40bf84:	push   r13
  40bf86:	mov    r8,QWORD PTR [rsp+0x30]
  40bf8b:	call   4053e0 <__fprintf_chk@plt>
  40bf90:	mov    rbx,QWORD PTR [rbx]
  40bf93:	add    rsp,0x30
  40bf97:	test   rbx,rbx
  40bf9a:	jne    40bee4 <__flatcc_gen_sort@@Base+0x2e4>
  40bfa0:	xor    eax,eax
  40bfa2:	mov    rdx,QWORD PTR [rsp+0x1f8]
  40bfaa:	xor    rdx,QWORD PTR fs:0x28
  40bfb3:	jne    40c067 <__flatcc_gen_sort@@Base+0x467>
  40bfb9:	add    rsp,0x208
  40bfc0:	pop    rbx
  40bfc1:	pop    rbp
  40bfc2:	pop    r12
  40bfc4:	pop    r13
  40bfc6:	pop    r14
  40bfc8:	pop    r15
  40bfca:	ret    
  40bfcb:	nop    DWORD PTR [rax+rax*1+0x0]
  40bfd0:	cmp    ax,0x1
  40bfd4:	jne    40c017 <__flatcc_gen_sort@@Base+0x417>
  40bfd6:	sub    rsp,0x8
  40bfda:	mov    rdi,QWORD PTR [rbp+0xd0]
  40bfe1:	push   QWORD PTR [rsp+0x10]
  40bfe5:	mov    r9,rbp
  40bfe8:	lea    rdx,[rip+0x2add1]        # 436dc0 <_IO_stdin_used@@Base+0x9dc0>
  40bfef:	push   r8
  40bff1:	mov    esi,0x1
  40bff6:	xor    eax,eax
  40bff8:	push   rcx
  40bff9:	mov    rcx,rbp
  40bffc:	push   r12
  40bffe:	push   r15
  40c000:	push   r14
  40c002:	push   r13
  40c004:	mov    r8,QWORD PTR [rsp+0x40]
  40c009:	call   4053e0 <__fprintf_chk@plt>
  40c00e:	add    rsp,0x40
  40c012:	jmp    40bed8 <__flatcc_gen_sort@@Base+0x2d8>
  40c017:	mov    rax,QWORD PTR [rip+0x44fca]        # 450fe8 <stderr@GLIBC_2.2.5>
  40c01e:	lea    rcx,[rip+0x2ae13]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40c025:	mov    rdi,QWORD PTR [rax]
  40c028:	lea    rdx,[rip+0x29a24]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40c02f:	mov    esi,0x1
  40c034:	lea    r9,[rip+0x2adc5]        # 436e00 <_IO_stdin_used@@Base+0x9e00>
  40c03b:	mov    r8d,0x54e
  40c041:	xor    eax,eax
  40c043:	call   4053e0 <__fprintf_chk@plt>
  40c048:	lea    rcx,[rip+0x34571]        # 4405c0 <_IO_stdin_used@@Base+0x135c0>
  40c04f:	mov    edx,0x54e
  40c054:	lea    rsi,[rip+0x2addd]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40c05b:	lea    rdi,[rip+0x2aab7]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40c062:	call   4052e0 <__assert_fail@plt>
  40c067:	call   4052c0 <__stack_chk_fail@plt>
  40c06c:	nop    DWORD PTR [rax+0x0]
  40c070:	push   rax
  40c071:	pop    rax
  40c072:	lea    rcx,[rip+0x2222f]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40c079:	lea    rdx,[rip+0x299d3]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40c080:	mov    esi,0x1
  40c085:	lea    r9,[rip+0x221e4]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40c08c:	mov    r8d,0xe2
  40c092:	sub    rsp,0x8
  40c096:	mov    rax,QWORD PTR [rip+0x44f4b]        # 450fe8 <stderr@GLIBC_2.2.5>
  40c09d:	mov    rdi,QWORD PTR [rax]
  40c0a0:	xor    eax,eax
  40c0a2:	call   4053e0 <__fprintf_chk@plt>
  40c0a7:	lea    rcx,[rip+0x3452a]        # 4405d8 <_IO_stdin_used@@Base+0x135d8>
  40c0ae:	mov    edx,0xe2
  40c0b3:	lea    rsi,[rip+0x221ee]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40c0ba:	lea    rdi,[rip+0x2aa58]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40c0c1:	call   4052e0 <__assert_fail@plt>
  40c0c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c0d0:	push   r15
  40c0d2:	push   r14
  40c0d4:	push   r13
  40c0d6:	push   r12
  40c0d8:	mov    r12d,edx
  40c0db:	push   rbp
  40c0dc:	push   rbx
  40c0dd:	mov    rbx,rdi
  40c0e0:	sub    rsp,0x18
  40c0e4:	mov    rdi,QWORD PTR [rsi+0x28]
  40c0e8:	call   40bd60 <__flatcc_gen_sort@@Base+0x160>
  40c0ed:	test   eax,eax
  40c0ef:	jle    40c1c0 <__flatcc_gen_sort@@Base+0x5c0>
  40c0f5:	test   r8d,r8d
  40c0f8:	lea    r14,[rip+0x2a9cd]        # 436acc <_IO_stdin_used@@Base+0x9acc>
  40c0ff:	mov    r13d,eax
  40c102:	lea    rax,[rip+0x39014]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40c109:	cmovne rax,r14
  40c10d:	mov    ebp,ecx
  40c10f:	mov    QWORD PTR [rsp+0x8],rax
  40c114:	xor    r14d,r14d
  40c117:	jmp    40c162 <__flatcc_gen_sort@@Base+0x562>
  40c119:	nop    DWORD PTR [rax+0x0]
  40c120:	cmp    ebp,0x4
  40c123:	jle    40c186 <__flatcc_gen_sort@@Base+0x586>
  40c125:	mov    rcx,QWORD PTR [rsp+0x8]
  40c12a:	lea    rdx,[rip+0x2a99e]        # 436acf <_IO_stdin_used@@Base+0x9acf>
  40c131:	mov    esi,0x1
  40c136:	xor    eax,eax
  40c138:	call   4053e0 <__fprintf_chk@plt>
  40c13d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c144:	mov    ecx,r15d
  40c147:	lea    rdx,[rip+0x2a9ea]        # 436b38 <_IO_stdin_used@@Base+0x9b38>
  40c14e:	mov    esi,0x1
  40c153:	xor    eax,eax
  40c155:	inc    r14d
  40c158:	call   4053e0 <__fprintf_chk@plt>
  40c15d:	cmp    r13d,r14d
  40c160:	je     40c1a8 <__flatcc_gen_sort@@Base+0x5a8>
  40c162:	lea    r15d,[r14+r12*1]
  40c166:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c16d:	test   ebp,ebp
  40c16f:	je     40c144 <__flatcc_gen_sort@@Base+0x544>
  40c171:	test   r14d,r14d
  40c174:	je     40c120 <__flatcc_gen_sort@@Base+0x520>
  40c176:	test   r14b,0x3
  40c17a:	jne    40c186 <__flatcc_gen_sort@@Base+0x586>
  40c17c:	mov    eax,ebp
  40c17e:	sub    eax,r14d
  40c181:	cmp    eax,0x2
  40c184:	jg     40c125 <__flatcc_gen_sort@@Base+0x525>
  40c186:	lea    rdx,[rip+0x2a948]        # 436ad5 <_IO_stdin_used@@Base+0x9ad5>
  40c18d:	mov    esi,0x1
  40c192:	xor    eax,eax
  40c194:	call   4053e0 <__fprintf_chk@plt>
  40c199:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c1a0:	jmp    40c144 <__flatcc_gen_sort@@Base+0x544>
  40c1a2:	nop    WORD PTR [rax+rax*1+0x0]
  40c1a8:	add    rsp,0x18
  40c1ac:	pop    rbx
  40c1ad:	pop    rbp
  40c1ae:	lea    eax,[r13+r12*1+0x0]
  40c1b3:	pop    r12
  40c1b5:	pop    r13
  40c1b7:	pop    r14
  40c1b9:	pop    r15
  40c1bb:	ret    
  40c1bc:	nop    DWORD PTR [rax+0x0]
  40c1c0:	add    rsp,0x18
  40c1c4:	pop    rbx
  40c1c5:	pop    rbp
  40c1c6:	pop    r12
  40c1c8:	pop    r13
  40c1ca:	pop    r14
  40c1cc:	mov    eax,edx
  40c1ce:	pop    r15
  40c1d0:	ret    
  40c1d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40c1dc:	nop    DWORD PTR [rax+0x0]
  40c1e0:	push   r15
  40c1e2:	push   r14
  40c1e4:	push   r13
  40c1e6:	push   r12
  40c1e8:	push   rbp
  40c1e9:	mov    rbp,rdi
  40c1ec:	push   rbx
  40c1ed:	sub    rsp,0x118
  40c1f4:	mov    DWORD PTR [rsp+0x1c],edx
  40c1f8:	mov    DWORD PTR [rsp+0x18],ecx
  40c1fc:	mov    DWORD PTR [rsp+0x8],r8d
  40c201:	lea    rdi,[rsp+0x20]
  40c206:	mov    edx,ecx
  40c208:	mov    rax,QWORD PTR fs:0x28
  40c211:	mov    QWORD PTR [rsp+0x108],rax
  40c219:	xor    eax,eax
  40c21b:	mov    ecx,0x1d
  40c220:	mov    QWORD PTR [rsp],rdi
  40c224:	rep stos QWORD PTR es:[rdi],rax
  40c227:	lea    rax,[rip+0x2a8b1]        # 436adf <_IO_stdin_used@@Base+0x9adf>
  40c22e:	mov    QWORD PTR [rsp+0x10],rax
  40c233:	cmp    edx,0x1
  40c236:	je     40c252 <__flatcc_gen_sort@@Base+0x652>
  40c238:	cmp    edx,0x2
  40c23b:	lea    rax,[rip+0x38edc]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40c242:	lea    rdx,[rip+0x2a88f]        # 436ad8 <_IO_stdin_used@@Base+0x9ad8>
  40c249:	cmove  rax,rdx
  40c24d:	mov    QWORD PTR [rsp+0x10],rax
  40c252:	mov    r12,QWORD PTR [rsi]
  40c255:	xor    r14d,r14d
  40c258:	test   r12,r12
  40c25b:	je     40c550 <__flatcc_gen_sort@@Base+0x950>
  40c261:	mov    rax,QWORD PTR [r12+0x8]
  40c266:	mov    DWORD PTR [rsp+0xc],0x0
  40c26e:	mov    r15,QWORD PTR [rax]
  40c271:	mov    ebx,DWORD PTR [rax+0x8]
  40c274:	xor    r14d,r14d
  40c277:	nop    WORD PTR [rax+rax*1+0x0]
  40c280:	movzx  eax,WORD PTR [r12+0x28]
  40c286:	cmp    ax,0x8
  40c28a:	jne    40c388 <__flatcc_gen_sort@@Base+0x788>
  40c290:	cmp    DWORD PTR [r12+0x18],0xb
  40c296:	ja     40c7db <__flatcc_gen_sort@@Base+0xbdb>
  40c29c:	mov    eax,DWORD PTR [r12+0x18]
  40c2a1:	lea    rcx,[rip+0x340b8]        # 440360 <_IO_stdin_used@@Base+0x13360>
  40c2a8:	movsxd rax,DWORD PTR [rcx+rax*4]
  40c2ac:	add    rax,rcx
  40c2af:	notrack jmp rax
  40c2b2:	nop    WORD PTR [rax+rax*1+0x0]
  40c2b8:	lea    r8,[rip+0x297c8]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40c2bf:	nop
  40c2c0:	lea    r13d,[r14+0x1]
  40c2c4:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c2cb:	test   BYTE PTR [r12+0x70],0x4
  40c2d1:	jne    40c520 <__flatcc_gen_sort@@Base+0x920>
  40c2d7:	cmp    QWORD PTR [r12+0x80],0x1
  40c2e0:	je     40c4d0 <__flatcc_gen_sort@@Base+0x8d0>
  40c2e6:	mov    eax,DWORD PTR [rsp+0x18]
  40c2ea:	cmp    eax,0x1
  40c2ed:	je     40c610 <__flatcc_gen_sort@@Base+0xa10>
  40c2f3:	cmp    eax,0x2
  40c2f6:	jne    40c4d0 <__flatcc_gen_sort@@Base+0x8d0>
  40c2fc:	mov    r9d,DWORD PTR [rsp+0x8]
  40c301:	test   r9d,r9d
  40c304:	je     40c730 <__flatcc_gen_sort@@Base+0xb30>
  40c30a:	sub    rsp,0x8
  40c30e:	push   r15
  40c310:	mov    r9d,ebx
  40c313:	mov    rcx,rbp
  40c316:	push   rbx
  40c317:	lea    rdx,[rip+0x2ad3a]        # 437058 <_IO_stdin_used@@Base+0xa058>
  40c31e:	mov    esi,0x1
  40c323:	push   r15
  40c325:	xor    eax,eax
  40c327:	call   4053e0 <__fprintf_chk@plt>
  40c32c:	add    rsp,0x20
  40c330:	mov    r14d,r13d
  40c333:	mov    r12,QWORD PTR [r12]
  40c337:	test   r12,r12
  40c33a:	je     40c550 <__flatcc_gen_sort@@Base+0x950>
  40c340:	mov    rax,QWORD PTR [r12+0x8]
  40c345:	mov    r15,QWORD PTR [rax]
  40c348:	mov    ebx,DWORD PTR [rax+0x8]
  40c34b:	test   r14d,r14d
  40c34e:	jle    40c280 <__flatcc_gen_sort@@Base+0x680>
  40c354:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c35b:	test   r14b,0x3
  40c35f:	jne    40c508 <__flatcc_gen_sort@@Base+0x908>
  40c365:	lea    rdx,[rip+0x2a77c]        # 436ae8 <_IO_stdin_used@@Base+0x9ae8>
  40c36c:	mov    esi,0x1
  40c371:	xor    eax,eax
  40c373:	call   4053e0 <__fprintf_chk@plt>
  40c378:	movzx  eax,WORD PTR [r12+0x28]
  40c37e:	cmp    ax,0x8
  40c382:	je     40c290 <__flatcc_gen_sort@@Base+0x690>
  40c388:	cmp    ax,0xe
  40c38c:	jne    40c82b <__flatcc_gen_sort@@Base+0xc2b>
  40c392:	mov    rsi,QWORD PTR [r12+0x18]
  40c397:	mov    rdx,QWORD PTR [rsp]
  40c39b:	mov    rdi,QWORD PTR [rsi+0x18]
  40c39f:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40c3a4:	mov    rax,QWORD PTR [r12+0x18]
  40c3a9:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c3b0:	cmp    WORD PTR [rax+0x10],0x1
  40c3b5:	je     40c5c0 <__flatcc_gen_sort@@Base+0x9c0>
  40c3bb:	lea    r13d,[r14+0x1]
  40c3bf:	test   BYTE PTR [r12+0x70],0x4
  40c3c5:	jne    40c520 <__flatcc_gen_sort@@Base+0x920>
  40c3cb:	cmp    QWORD PTR [r12+0x80],0x1
  40c3d4:	je     40c4d0 <__flatcc_gen_sort@@Base+0x8d0>
  40c3da:	mov    eax,DWORD PTR [rsp+0x18]
  40c3de:	cmp    eax,0x1
  40c3e1:	je     40c6f8 <__flatcc_gen_sort@@Base+0xaf8>
  40c3e7:	cmp    eax,0x2
  40c3ea:	jne    40c4d0 <__flatcc_gen_sort@@Base+0x8d0>
  40c3f0:	mov    r8d,DWORD PTR [rsp+0x8]
  40c3f5:	test   r8d,r8d
  40c3f8:	je     40c7b0 <__flatcc_gen_sort@@Base+0xbb0>
  40c3fe:	push   r15
  40c400:	mov    esi,0x1
  40c405:	mov    r9,r15
  40c408:	push   rbx
  40c409:	mov    r8d,ebx
  40c40c:	lea    rdx,[rip+0x2abad]        # 436fc0 <_IO_stdin_used@@Base+0x9fc0>
  40c413:	mov    rcx,QWORD PTR [rsp+0x10]
  40c418:	xor    eax,eax
  40c41a:	call   4053e0 <__fprintf_chk@plt>
  40c41f:	pop    rcx
  40c420:	pop    rsi
  40c421:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c426:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c430:	lea    r8,[rip+0x29690]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40c437:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c43c:	nop    DWORD PTR [rax+0x0]
  40c440:	lea    r8,[rip+0x29650]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40c447:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c44c:	nop    DWORD PTR [rax+0x0]
  40c450:	lea    r8,[rip+0x29650]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40c457:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c45c:	nop    DWORD PTR [rax+0x0]
  40c460:	lea    r8,[rip+0x2965b]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  40c467:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c46c:	nop    DWORD PTR [rax+0x0]
  40c470:	lea    r8,[rip+0x2960a]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  40c477:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c47c:	nop    DWORD PTR [rax+0x0]
  40c480:	lea    r8,[rip+0x2962d]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  40c487:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c48c:	nop    DWORD PTR [rax+0x0]
  40c490:	lea    r8,[rip+0x2962a]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40c497:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c49c:	nop    DWORD PTR [rax+0x0]
  40c4a0:	lea    r8,[rip+0x295ef]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  40c4a7:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c4ac:	nop    DWORD PTR [rax+0x0]
  40c4b0:	lea    r8,[rip+0x295ef]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  40c4b7:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c4bc:	nop    DWORD PTR [rax+0x0]
  40c4c0:	lea    r8,[rip+0x295b9]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  40c4c7:	jmp    40c2c0 <__flatcc_gen_sort@@Base+0x6c0>
  40c4cc:	nop    DWORD PTR [rax+0x0]
  40c4d0:	mov    esi,DWORD PTR [rsp+0x8]
  40c4d4:	test   esi,esi
  40c4d6:	je     40c5a0 <__flatcc_gen_sort@@Base+0x9a0>
  40c4dc:	sub    rsp,0x8
  40c4e0:	push   r15
  40c4e2:	mov    ecx,ebx
  40c4e4:	lea    rdx,[rip+0x2a630]        # 436b1b <_IO_stdin_used@@Base+0x9b1b>
  40c4eb:	mov    r9d,ebx
  40c4ee:	mov    r8,r15
  40c4f1:	mov    esi,0x1
  40c4f6:	xor    eax,eax
  40c4f8:	call   4053e0 <__fprintf_chk@plt>
  40c4fd:	pop    rdx
  40c4fe:	pop    rcx
  40c4ff:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c504:	nop    DWORD PTR [rax+0x0]
  40c508:	lea    rdx,[rip+0x2a5de]        # 436aed <_IO_stdin_used@@Base+0x9aed>
  40c50f:	mov    esi,0x1
  40c514:	xor    eax,eax
  40c516:	call   4053e0 <__fprintf_chk@plt>
  40c51b:	jmp    40c280 <__flatcc_gen_sort@@Base+0x680>
  40c520:	mov    ecx,DWORD PTR [rsp+0xc]
  40c524:	lea    rdx,[rip+0x2a5da]        # 436b05 <_IO_stdin_used@@Base+0x9b05>
  40c52b:	mov    esi,0x1
  40c530:	xor    eax,eax
  40c532:	lea    ebx,[rcx+0x1]
  40c535:	call   4053e0 <__fprintf_chk@plt>
  40c53a:	mov    r12,QWORD PTR [r12]
  40c53e:	mov    DWORD PTR [rsp+0xc],ebx
  40c542:	mov    r14d,r13d
  40c545:	test   r12,r12
  40c548:	jne    40c340 <__flatcc_gen_sort@@Base+0x740>
  40c54e:	xchg   ax,ax
  40c550:	mov    eax,DWORD PTR [rsp+0x1c]
  40c554:	test   eax,eax
  40c556:	jle    40c572 <__flatcc_gen_sort@@Base+0x972>
  40c558:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c55f:	lea    rdx,[rip+0x2a582]        # 436ae8 <_IO_stdin_used@@Base+0x9ae8>
  40c566:	mov    esi,0x1
  40c56b:	xor    eax,eax
  40c56d:	call   4053e0 <__fprintf_chk@plt>
  40c572:	mov    rbx,QWORD PTR [rsp+0x108]
  40c57a:	xor    rbx,QWORD PTR fs:0x28
  40c583:	mov    eax,r14d
  40c586:	jne    40c87b <__flatcc_gen_sort@@Base+0xc7b>
  40c58c:	add    rsp,0x118
  40c593:	pop    rbx
  40c594:	pop    rbp
  40c595:	pop    r12
  40c597:	pop    r13
  40c599:	pop    r14
  40c59b:	pop    r15
  40c59d:	ret    
  40c59e:	xchg   ax,ax
  40c5a0:	mov    r9d,r14d
  40c5a3:	mov    r8,r15
  40c5a6:	mov    ecx,ebx
  40c5a8:	lea    rdx,[rip+0x2a57f]        # 436b2e <_IO_stdin_used@@Base+0x9b2e>
  40c5af:	mov    esi,0x1
  40c5b4:	xor    eax,eax
  40c5b6:	call   4053e0 <__fprintf_chk@plt>
  40c5bb:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c5c0:	test   BYTE PTR [r12+0x70],0x4
  40c5c6:	jne    40c6b8 <__flatcc_gen_sort@@Base+0xab8>
  40c5cc:	mov    ecx,DWORD PTR [rsp+0x8]
  40c5d0:	test   ecx,ecx
  40c5d2:	je     40c650 <__flatcc_gen_sort@@Base+0xa50>
  40c5d4:	sub    rsp,0x8
  40c5d8:	push   r15
  40c5da:	mov    r9d,ebx
  40c5dd:	lea    rdx,[rip+0x2a96c]        # 436f50 <_IO_stdin_used@@Base+0x9f50>
  40c5e4:	push   rbx
  40c5e5:	mov    esi,0x1
  40c5ea:	xor    eax,eax
  40c5ec:	push   r15
  40c5ee:	inc    r14d
  40c5f1:	mov    r8,QWORD PTR [rsp+0x30]
  40c5f6:	mov    rcx,QWORD PTR [rsp+0x20]
  40c5fb:	call   4053e0 <__fprintf_chk@plt>
  40c600:	add    rsp,0x20
  40c604:	jmp    40c333 <__flatcc_gen_sort@@Base+0x733>
  40c609:	nop    DWORD PTR [rax+0x0]
  40c610:	mov    eax,DWORD PTR [rsp+0x8]
  40c614:	test   eax,eax
  40c616:	je     40c758 <__flatcc_gen_sort@@Base+0xb58>
  40c61c:	sub    rsp,0x8
  40c620:	push   r15
  40c622:	mov    r9d,ebx
  40c625:	mov    rcx,rbp
  40c628:	push   rbx
  40c629:	lea    rdx,[rip+0x2a9d8]        # 437008 <_IO_stdin_used@@Base+0xa008>
  40c630:	mov    esi,0x1
  40c635:	push   r15
  40c637:	xor    eax,eax
  40c639:	call   4053e0 <__fprintf_chk@plt>
  40c63e:	add    rsp,0x20
  40c642:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c647:	nop    WORD PTR [rax+rax*1+0x0]
  40c650:	sub    rsp,0x8
  40c654:	push   r15
  40c656:	mov    r9d,ebx
  40c659:	lea    rdx,[rip+0x2a490]        # 436af0 <_IO_stdin_used@@Base+0x9af0>
  40c660:	mov    r8,QWORD PTR [rsp+0x20]
  40c665:	mov    rcx,QWORD PTR [rsp+0x10]
  40c66a:	mov    esi,0x1
  40c66f:	xor    eax,eax
  40c671:	call   4053e0 <__fprintf_chk@plt>
  40c676:	mov    ecx,DWORD PTR [rsp+0x2c]
  40c67a:	mov    rsi,QWORD PTR [r12+0x18]
  40c67f:	mov    edx,r14d
  40c682:	xor    r8d,r8d
  40c685:	mov    rdi,rbp
  40c688:	call   40c0d0 <__flatcc_gen_sort@@Base+0x4d0>
  40c68d:	mov    rdi,QWORD PTR [rbp+0xd0]
  40c694:	lea    rdx,[rip+0x2a5cc]        # 436c67 <_IO_stdin_used@@Base+0x9c67>
  40c69b:	mov    r14d,eax
  40c69e:	mov    esi,0x1
  40c6a3:	xor    eax,eax
  40c6a5:	call   4053e0 <__fprintf_chk@plt>
  40c6aa:	pop    rax
  40c6ab:	pop    rdx
  40c6ac:	jmp    40c333 <__flatcc_gen_sort@@Base+0x733>
  40c6b1:	nop    DWORD PTR [rax+0x0]
  40c6b8:	mov    ebx,DWORD PTR [rsp+0xc]
  40c6bc:	lea    rdx,[rip+0x2a84d]        # 436f10 <_IO_stdin_used@@Base+0x9f10>
  40c6c3:	mov    r8d,ebx
  40c6c6:	mov    ecx,ebx
  40c6c8:	mov    esi,0x1
  40c6cd:	xor    eax,eax
  40c6cf:	call   4053e0 <__fprintf_chk@plt>
  40c6d4:	mov    eax,ebx
  40c6d6:	inc    eax
  40c6d8:	mov    DWORD PTR [rsp+0xc],eax
  40c6dc:	mov    rax,QWORD PTR [r12+0x18]
  40c6e1:	mov    rdi,QWORD PTR [rax+0x28]
  40c6e5:	call   40bd60 <__flatcc_gen_sort@@Base+0x160>
  40c6ea:	add    r14d,eax
  40c6ed:	jmp    40c333 <__flatcc_gen_sort@@Base+0x733>
  40c6f2:	nop    WORD PTR [rax+rax*1+0x0]
  40c6f8:	mov    eax,DWORD PTR [rsp+0x8]
  40c6fc:	test   eax,eax
  40c6fe:	je     40c780 <__flatcc_gen_sort@@Base+0xb80>
  40c704:	push   r15
  40c706:	mov    r8d,ebx
  40c709:	mov    r9,r15
  40c70c:	push   rbx
  40c70d:	lea    rdx,[rip+0x2a85c]        # 436f70 <_IO_stdin_used@@Base+0x9f70>
  40c714:	mov    esi,0x1
  40c719:	mov    rcx,QWORD PTR [rsp+0x10]
  40c71e:	xor    eax,eax
  40c720:	call   4053e0 <__fprintf_chk@plt>
  40c725:	pop    r11
  40c727:	pop    rbx
  40c728:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c72d:	nop    DWORD PTR [rax]
  40c730:	push   r14
  40c732:	mov    r9d,ebx
  40c735:	mov    rcx,rbp
  40c738:	push   r15
  40c73a:	lea    rdx,[rip+0x2a93f]        # 437080 <_IO_stdin_used@@Base+0xa080>
  40c741:	mov    esi,0x1
  40c746:	xor    eax,eax
  40c748:	call   4053e0 <__fprintf_chk@plt>
  40c74d:	pop    rdi
  40c74e:	pop    r8
  40c750:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c755:	nop    DWORD PTR [rax]
  40c758:	push   r14
  40c75a:	mov    r9d,ebx
  40c75d:	mov    rcx,rbp
  40c760:	push   r15
  40c762:	lea    rdx,[rip+0x2a8c7]        # 437030 <_IO_stdin_used@@Base+0xa030>
  40c769:	mov    esi,0x1
  40c76e:	xor    eax,eax
  40c770:	call   4053e0 <__fprintf_chk@plt>
  40c775:	pop    r10
  40c777:	pop    r11
  40c779:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c77e:	xchg   ax,ax
  40c780:	sub    rsp,0x8
  40c784:	push   r14
  40c786:	mov    r9,r15
  40c789:	mov    r8d,ebx
  40c78c:	mov    rcx,QWORD PTR [rsp+0x10]
  40c791:	lea    rdx,[rip+0x2a800]        # 436f98 <_IO_stdin_used@@Base+0x9f98>
  40c798:	mov    esi,0x1
  40c79d:	xor    eax,eax
  40c79f:	call   4053e0 <__fprintf_chk@plt>
  40c7a4:	pop    r9
  40c7a6:	pop    r10
  40c7a8:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c7ad:	nop    DWORD PTR [rax]
  40c7b0:	sub    rsp,0x8
  40c7b4:	push   r14
  40c7b6:	lea    rdx,[rip+0x2a82b]        # 436fe8 <_IO_stdin_used@@Base+0x9fe8>
  40c7bd:	mov    r9,r15
  40c7c0:	mov    rcx,QWORD PTR [rsp+0x10]
  40c7c5:	mov    r8d,ebx
  40c7c8:	mov    esi,0x1
  40c7cd:	xor    eax,eax
  40c7cf:	call   4053e0 <__fprintf_chk@plt>
  40c7d4:	pop    rax
  40c7d5:	pop    rdx
  40c7d6:	jmp    40c330 <__flatcc_gen_sort@@Base+0x730>
  40c7db:	mov    rax,QWORD PTR [rip+0x44806]        # 450fe8 <stderr@GLIBC_2.2.5>
  40c7e2:	lea    rcx,[rip+0x21abf]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40c7e9:	mov    rdi,QWORD PTR [rax]
  40c7ec:	lea    rdx,[rip+0x29260]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40c7f3:	mov    esi,0x1
  40c7f8:	lea    r9,[rip+0x21a71]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40c7ff:	mov    r8d,0x60
  40c805:	xor    eax,eax
  40c807:	call   4053e0 <__fprintf_chk@plt>
  40c80c:	lea    rcx,[rip+0x33e3d]        # 440650 <_IO_stdin_used@@Base+0x13650>
  40c813:	mov    edx,0x60
  40c818:	lea    rsi,[rip+0x21a89]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40c81f:	lea    rdi,[rip+0x2a2f3]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40c826:	call   4052e0 <__assert_fail@plt>
  40c82b:	mov    rax,QWORD PTR [rip+0x447b6]        # 450fe8 <stderr@GLIBC_2.2.5>
  40c832:	lea    rcx,[rip+0x2a5ff]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40c839:	mov    rdi,QWORD PTR [rax]
  40c83c:	lea    rdx,[rip+0x29210]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40c843:	mov    esi,0x1
  40c848:	lea    r9,[rip+0x2a2ed]        # 436b3c <_IO_stdin_used@@Base+0x9b3c>
  40c84f:	mov    r8d,0x3e1
  40c855:	xor    eax,eax
  40c857:	call   4053e0 <__fprintf_chk@plt>
  40c85c:	lea    rcx,[rip+0x33e1d]        # 440680 <_IO_stdin_used@@Base+0x13680>
  40c863:	mov    edx,0x3e1
  40c868:	lea    rsi,[rip+0x2a5c9]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40c86f:	lea    rdi,[rip+0x2a2a3]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40c876:	call   4052e0 <__assert_fail@plt>
  40c87b:	call   4052c0 <__stack_chk_fail@plt>
  40c880:	push   r15
  40c882:	push   r14
  40c884:	push   r13
  40c886:	push   r12
  40c888:	push   rbp
  40c889:	mov    ebp,ecx
  40c88b:	mov    ecx,0x1d
  40c890:	push   rbx
  40c891:	mov    rbx,rdi
  40c894:	sub    rsp,0x118
  40c89b:	mov    DWORD PTR [rsp+0x1c],r8d
  40c8a0:	mov    r12,QWORD PTR [rsi]
  40c8a3:	lea    rdi,[rsp+0x20]
  40c8a8:	mov    rax,QWORD PTR fs:0x28
  40c8b1:	mov    QWORD PTR [rsp+0x108],rax
  40c8b9:	xor    eax,eax
  40c8bb:	mov    QWORD PTR [rsp+0x8],rdi
  40c8c0:	rep stos QWORD PTR es:[rdi],rax
  40c8c3:	test   r12,r12
  40c8c6:	je     40cbe0 <__flatcc_gen_sort@@Base+0xfe0>
  40c8cc:	test   r8d,r8d
  40c8cf:	lea    rcx,[rip+0x2a1f6]        # 436acc <_IO_stdin_used@@Base+0x9acc>
  40c8d6:	lea    rax,[rip+0x38840]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40c8dd:	cmovne rax,rcx
  40c8e1:	mov    r15d,edx
  40c8e4:	mov    QWORD PTR [rsp+0x10],rax
  40c8e9:	lea    r13,[rip+0x33aa0]        # 440390 <_IO_stdin_used@@Base+0x13390>
  40c8f0:	test   BYTE PTR [r12+0x70],0x4
  40c8f6:	jne    40c9b8 <__flatcc_gen_sort@@Base+0xdb8>
  40c8fc:	movzx  eax,WORD PTR [r12+0x28]
  40c902:	cmp    ax,0x8
  40c906:	jne    40c9f8 <__flatcc_gen_sort@@Base+0xdf8>
  40c90c:	test   ebp,ebp
  40c90e:	je     40c934 <__flatcc_gen_sort@@Base+0xd34>
  40c910:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c917:	test   r15d,r15d
  40c91a:	jne    40c958 <__flatcc_gen_sort@@Base+0xd58>
  40c91c:	cmp    ebp,0x4
  40c91f:	jg     40c968 <__flatcc_gen_sort@@Base+0xd68>
  40c921:	lea    rdx,[rip+0x2a1ad]        # 436ad5 <_IO_stdin_used@@Base+0x9ad5>
  40c928:	mov    esi,0x1
  40c92d:	xor    eax,eax
  40c92f:	call   4053e0 <__fprintf_chk@plt>
  40c934:	mov    eax,DWORD PTR [r12+0x18]
  40c939:	cmp    eax,0x5
  40c93c:	je     40c98a <__flatcc_gen_sort@@Base+0xd8a>
  40c93e:	cmp    eax,0xb
  40c941:	ja     40cbe8 <__flatcc_gen_sort@@Base+0xfe8>
  40c947:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40c94c:	add    rax,r13
  40c94f:	notrack jmp rax
  40c952:	nop    WORD PTR [rax+rax*1+0x0]
  40c958:	test   r15b,0x3
  40c95c:	jne    40c921 <__flatcc_gen_sort@@Base+0xd21>
  40c95e:	mov    eax,ebp
  40c960:	sub    eax,r15d
  40c963:	cmp    eax,0x2
  40c966:	jle    40c921 <__flatcc_gen_sort@@Base+0xd21>
  40c968:	mov    rcx,QWORD PTR [rsp+0x10]
  40c96d:	lea    rdx,[rip+0x2a15b]        # 436acf <_IO_stdin_used@@Base+0x9acf>
  40c974:	mov    esi,0x1
  40c979:	xor    eax,eax
  40c97b:	call   4053e0 <__fprintf_chk@plt>
  40c980:	mov    eax,DWORD PTR [r12+0x18]
  40c985:	cmp    eax,0x5
  40c988:	jne    40c93e <__flatcc_gen_sort@@Base+0xd3e>
  40c98a:	mov    rcx,rbx
  40c98d:	lea    r8,[rip+0x29119]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40c994:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c99b:	mov    r9d,r15d
  40c99e:	lea    r14d,[r15+0x1]
  40c9a2:	lea    rdx,[rip+0x2a1bc]        # 436b65 <_IO_stdin_used@@Base+0x9b65>
  40c9a9:	mov    esi,0x1
  40c9ae:	xor    eax,eax
  40c9b0:	call   4053e0 <__fprintf_chk@plt>
  40c9b5:	mov    r15d,r14d
  40c9b8:	mov    r12,QWORD PTR [r12]
  40c9bc:	test   r12,r12
  40c9bf:	jne    40c8f0 <__flatcc_gen_sort@@Base+0xcf0>
  40c9c5:	mov    rbx,QWORD PTR [rsp+0x108]
  40c9cd:	xor    rbx,QWORD PTR fs:0x28
  40c9d6:	mov    eax,r15d
  40c9d9:	jne    40cc88 <__flatcc_gen_sort@@Base+0x1088>
  40c9df:	add    rsp,0x118
  40c9e6:	pop    rbx
  40c9e7:	pop    rbp
  40c9e8:	pop    r12
  40c9ea:	pop    r13
  40c9ec:	pop    r14
  40c9ee:	pop    r15
  40c9f0:	ret    
  40c9f1:	nop    DWORD PTR [rax+0x0]
  40c9f8:	cmp    ax,0xe
  40c9fc:	jne    40cc38 <__flatcc_gen_sort@@Base+0x1038>
  40ca02:	mov    rsi,QWORD PTR [r12+0x18]
  40ca07:	cmp    WORD PTR [rsi+0x10],0x1
  40ca0c:	je     40cac0 <__flatcc_gen_sort@@Base+0xec0>
  40ca12:	test   ebp,ebp
  40ca14:	je     40ca3f <__flatcc_gen_sort@@Base+0xe3f>
  40ca16:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ca1d:	test   r15d,r15d
  40ca20:	jne    40ca90 <__flatcc_gen_sort@@Base+0xe90>
  40ca22:	cmp    ebp,0x4
  40ca25:	jg     40caa0 <__flatcc_gen_sort@@Base+0xea0>
  40ca27:	mov    esi,0x1
  40ca2c:	lea    rdx,[rip+0x2a0a2]        # 436ad5 <_IO_stdin_used@@Base+0x9ad5>
  40ca33:	xor    eax,eax
  40ca35:	call   4053e0 <__fprintf_chk@plt>
  40ca3a:	mov    rsi,QWORD PTR [r12+0x18]
  40ca3f:	mov    rdi,QWORD PTR [rsi+0x18]
  40ca43:	mov    rdx,QWORD PTR [rsp+0x8]
  40ca48:	lea    r14d,[r15+0x1]
  40ca4c:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40ca51:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ca58:	mov    rcx,QWORD PTR [rsp+0x8]
  40ca5d:	mov    r8d,r15d
  40ca60:	lea    rdx,[rip+0x2a0f0]        # 436b57 <_IO_stdin_used@@Base+0x9b57>
  40ca67:	mov    esi,0x1
  40ca6c:	xor    eax,eax
  40ca6e:	call   4053e0 <__fprintf_chk@plt>
  40ca73:	mov    r12,QWORD PTR [r12]
  40ca77:	mov    r15d,r14d
  40ca7a:	test   r12,r12
  40ca7d:	jne    40c8f0 <__flatcc_gen_sort@@Base+0xcf0>
  40ca83:	jmp    40c9c5 <__flatcc_gen_sort@@Base+0xdc5>
  40ca88:	nop    DWORD PTR [rax+rax*1+0x0]
  40ca90:	test   r15b,0x3
  40ca94:	jne    40ca27 <__flatcc_gen_sort@@Base+0xe27>
  40ca96:	mov    eax,ebp
  40ca98:	sub    eax,r15d
  40ca9b:	cmp    eax,0x2
  40ca9e:	jle    40ca27 <__flatcc_gen_sort@@Base+0xe27>
  40caa0:	mov    rcx,QWORD PTR [rsp+0x10]
  40caa5:	mov    esi,0x1
  40caaa:	lea    rdx,[rip+0x2a01e]        # 436acf <_IO_stdin_used@@Base+0x9acf>
  40cab1:	xor    eax,eax
  40cab3:	call   4053e0 <__fprintf_chk@plt>
  40cab8:	mov    rsi,QWORD PTR [r12+0x18]
  40cabd:	jmp    40ca3f <__flatcc_gen_sort@@Base+0xe3f>
  40cabf:	nop
  40cac0:	mov    r8d,DWORD PTR [rsp+0x1c]
  40cac5:	mov    edx,r15d
  40cac8:	add    rsi,0x28
  40cacc:	mov    ecx,ebp
  40cace:	mov    rdi,rbx
  40cad1:	call   40c880 <__flatcc_gen_sort@@Base+0xc80>
  40cad6:	mov    r12,QWORD PTR [r12]
  40cada:	mov    r15d,eax
  40cadd:	test   r12,r12
  40cae0:	jne    40c8f0 <__flatcc_gen_sort@@Base+0xcf0>
  40cae6:	jmp    40c9c5 <__flatcc_gen_sort@@Base+0xdc5>
  40caeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40caf0:	lea    rcx,[rip+0x38627]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40caf7:	lea    r8,[rip+0x28fc9]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40cafe:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cb03:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb08:	lea    rcx,[rip+0x3860f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cb0f:	lea    r8,[rip+0x28fa4]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40cb16:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cb1b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb20:	lea    rcx,[rip+0x385f7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cb27:	lea    r8,[rip+0x28f60]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40cb2e:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cb33:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb38:	lea    rcx,[rip+0x385df]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cb3f:	lea    r8,[rip+0x28f58]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40cb46:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cb4b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb50:	lea    rcx,[rip+0x385c7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cb57:	lea    r8,[rip+0x28f1a]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40cb5e:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cb63:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb68:	lea    rcx,[rip+0x385af]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cb6f:	lea    r8,[rip+0x28f11]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40cb76:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cb7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb80:	lea    rcx,[rip+0x38597]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cb87:	lea    r8,[rip+0x28f2b]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40cb8e:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cb93:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb98:	lea    rcx,[rip+0x3857f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cb9f:	lea    r8,[rip+0x28ee7]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40cba6:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cbab:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbb0:	lea    rcx,[rip+0x38567]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cbb7:	lea    r8,[rip+0x28edf]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40cbbe:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cbc3:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbc8:	lea    rcx,[rip+0x3854f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cbcf:	lea    r8,[rip+0x28ea1]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40cbd6:	jmp    40c994 <__flatcc_gen_sort@@Base+0xd94>
  40cbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40cbe0:	mov    r15d,edx
  40cbe3:	jmp    40c9c5 <__flatcc_gen_sort@@Base+0xdc5>
  40cbe8:	mov    rax,QWORD PTR [rip+0x443f9]        # 450fe8 <stderr@GLIBC_2.2.5>
  40cbef:	lea    rcx,[rip+0x216b2]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40cbf6:	mov    rdi,QWORD PTR [rax]
  40cbf9:	lea    rdx,[rip+0x28e53]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40cc00:	mov    esi,0x1
  40cc05:	lea    r9,[rip+0x21664]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40cc0c:	mov    r8d,0x8d
  40cc12:	xor    eax,eax
  40cc14:	call   4053e0 <__fprintf_chk@plt>
  40cc19:	lea    rcx,[rip+0x33a80]        # 4406a0 <_IO_stdin_used@@Base+0x136a0>
  40cc20:	mov    edx,0x8d
  40cc25:	lea    rsi,[rip+0x2167c]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40cc2c:	lea    rdi,[rip+0x29ee6]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40cc33:	call   4052e0 <__assert_fail@plt>
  40cc38:	mov    rax,QWORD PTR [rip+0x443a9]        # 450fe8 <stderr@GLIBC_2.2.5>
  40cc3f:	lea    rcx,[rip+0x2a1f2]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40cc46:	mov    rdi,QWORD PTR [rax]
  40cc49:	lea    rdx,[rip+0x28e03]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40cc50:	mov    esi,0x1
  40cc55:	lea    r9,[rip+0x2a44c]        # 4370a8 <_IO_stdin_used@@Base+0xa0a8>
  40cc5c:	mov    r8d,0x352
  40cc62:	xor    eax,eax
  40cc64:	call   4053e0 <__fprintf_chk@plt>
  40cc69:	lea    rcx,[rip+0x33a50]        # 4406c0 <_IO_stdin_used@@Base+0x136c0>
  40cc70:	mov    edx,0x352
  40cc75:	lea    rsi,[rip+0x2a1bc]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40cc7c:	lea    rdi,[rip+0x29e96]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40cc83:	call   4052e0 <__assert_fail@plt>
  40cc88:	call   4052c0 <__stack_chk_fail@plt>
  40cc8d:	nop    DWORD PTR [rax]
  40cc90:	push   r15
  40cc92:	mov    ecx,0x1d
  40cc97:	lea    r15,[rip+0x33722]        # 4403c0 <_IO_stdin_used@@Base+0x133c0>
  40cc9e:	push   r14
  40cca0:	push   r13
  40cca2:	push   r12
  40cca4:	push   rbp
  40cca5:	mov    rbp,rdi
  40cca8:	push   rbx
  40cca9:	mov    rbx,rsi
  40ccac:	sub    rsp,0x288
  40ccb3:	mov    rax,QWORD PTR fs:0x28
  40ccbc:	mov    QWORD PTR [rsp+0x278],rax
  40ccc4:	xor    eax,eax
  40ccc6:	lea    r14,[rsp+0x30]
  40cccb:	mov    rdi,r14
  40ccce:	mov    rdx,r14
  40ccd1:	rep stos QWORD PTR es:[rdi],rax
  40ccd4:	lea    rdi,[rsp+0x120]
  40ccdc:	mov    ecx,0x1d
  40cce1:	mov    QWORD PTR [rsp+0x8],rdi
  40cce6:	rep stos QWORD PTR es:[rdi],rax
  40cce9:	mov    rdi,QWORD PTR [rsi+0x18]
  40cced:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40ccf2:	mov    rbx,QWORD PTR [rbx+0x28]
  40ccf6:	test   rbx,rbx
  40ccf9:	je     40cdbc <__flatcc_gen_sort@@Base+0x11bc>
  40ccff:	nop
  40cd00:	mov    rax,QWORD PTR [rbx+0x8]
  40cd04:	mov    r12,QWORD PTR [rax]
  40cd07:	mov    r13,QWORD PTR [rax+0x8]
  40cd0b:	test   BYTE PTR [rbx+0x70],0x4
  40cd0f:	jne    40d580 <__flatcc_gen_sort@@Base+0x1980>
  40cd15:	movzx  eax,WORD PTR [rbx+0x28]
  40cd19:	sub    eax,0x7
  40cd1c:	cmp    ax,0x8
  40cd20:	ja     40df7c <__flatcc_gen_sort@@Base+0x237c>
  40cd26:	movzx  eax,ax
  40cd29:	movsxd rax,DWORD PTR [r15+rax*4]
  40cd2d:	add    rax,r15
  40cd30:	notrack jmp rax
  40cd33:	nop    DWORD PTR [rax+rax*1+0x0]
  40cd38:	mov    rsi,QWORD PTR [rbx+0x18]
  40cd3c:	mov    rdx,QWORD PTR [rsp+0x8]
  40cd41:	mov    rdi,QWORD PTR [rsi+0x18]
  40cd45:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40cd4a:	mov    rdx,QWORD PTR [rbx+0x18]
  40cd4e:	movzx  eax,WORD PTR [rdx+0x10]
  40cd52:	cmp    ax,0x1
  40cd56:	je     40d870 <__flatcc_gen_sort@@Base+0x1c70>
  40cd5c:	test   ax,ax
  40cd5f:	je     40d828 <__flatcc_gen_sort@@Base+0x1c28>
  40cd65:	cmp    ax,0x3
  40cd69:	jne    40d5b0 <__flatcc_gen_sort@@Base+0x19b0>
  40cd6f:	sub    rsp,0x8
  40cd73:	mov    rax,QWORD PTR [rsp+0x10]
  40cd78:	mov    r8,QWORD PTR [rbx+0x88]
  40cd7f:	push   rax
  40cd80:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cd87:	mov    r9,rbp
  40cd8a:	push   rax
  40cd8b:	mov    rcx,rbp
  40cd8e:	lea    rdx,[rip+0x2a6bb]        # 437450 <_IO_stdin_used@@Base+0xa450>
  40cd95:	push   r12
  40cd97:	mov    esi,0x1
  40cd9c:	xor    eax,eax
  40cd9e:	push   r13
  40cda0:	push   r14
  40cda2:	call   4053e0 <__fprintf_chk@plt>
  40cda7:	add    rsp,0x30
  40cdab:	nop    DWORD PTR [rax+rax*1+0x0]
  40cdb0:	mov    rbx,QWORD PTR [rbx]
  40cdb3:	test   rbx,rbx
  40cdb6:	jne    40cd00 <__flatcc_gen_sort@@Base+0x1100>
  40cdbc:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cdc3:	xor    eax,eax
  40cdc5:	lea    rdx,[rip+0x38351]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40cdcc:	mov    esi,0x1
  40cdd1:	call   4053e0 <__fprintf_chk@plt>
  40cdd6:	xor    eax,eax
  40cdd8:	mov    rcx,QWORD PTR [rsp+0x278]
  40cde0:	xor    rcx,QWORD PTR fs:0x28
  40cde9:	jne    40e200 <__flatcc_gen_sort@@Base+0x2600>
  40cdef:	add    rsp,0x288
  40cdf6:	pop    rbx
  40cdf7:	pop    rbp
  40cdf8:	pop    r12
  40cdfa:	pop    r13
  40cdfc:	pop    r14
  40cdfe:	pop    r15
  40ce00:	ret    
  40ce01:	nop    DWORD PTR [rax+0x0]
  40ce08:	mov    rsi,QWORD PTR [rbx+0x18]
  40ce0c:	mov    rdx,QWORD PTR [rsp+0x8]
  40ce11:	mov    rdi,QWORD PTR [rsi+0x18]
  40ce15:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40ce1a:	mov    rdx,QWORD PTR [rbx+0x18]
  40ce1e:	movzx  eax,WORD PTR [rdx+0x10]
  40ce22:	cmp    ax,0x1
  40ce26:	je     40d900 <__flatcc_gen_sort@@Base+0x1d00>
  40ce2c:	test   ax,ax
  40ce2f:	je     40d8c0 <__flatcc_gen_sort@@Base+0x1cc0>
  40ce35:	cmp    ax,0x3
  40ce39:	jne    40d610 <__flatcc_gen_sort@@Base+0x1a10>
  40ce3f:	movzx  eax,WORD PTR [rbx+0x58]
  40ce43:	mov    edx,DWORD PTR [rdx+0x48]
  40ce46:	cmp    ax,0x4
  40ce4a:	je     40daff <__flatcc_gen_sort@@Base+0x1eff>
  40ce50:	jbe    40d770 <__flatcc_gen_sort@@Base+0x1b70>
  40ce56:	cmp    ax,0x5
  40ce5a:	jne    40d800 <__flatcc_gen_sort@@Base+0x1c00>
  40ce60:	cmp    edx,0x9
  40ce63:	ja     40da09 <__flatcc_gen_sort@@Base+0x1e09>
  40ce69:	lea    rcx,[rip+0x33574]        # 4403e4 <_IO_stdin_used@@Base+0x133e4>
  40ce70:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40ce74:	add    rax,rcx
  40ce77:	notrack jmp rax
  40ce7a:	nop    WORD PTR [rax+rax*1+0x0]
  40ce80:	sub    rsp,0x8
  40ce84:	mov    r8,QWORD PTR [rbx+0x88]
  40ce8b:	push   r12
  40ce8d:	mov    rdi,QWORD PTR [rbp+0xd0]
  40ce94:	mov    r9,rbp
  40ce97:	push   r13
  40ce99:	mov    rcx,rbp
  40ce9c:	lea    rdx,[rip+0x2a3c5]        # 437268 <_IO_stdin_used@@Base+0xa268>
  40cea3:	push   r14
  40cea5:	mov    esi,0x1
  40ceaa:	xor    eax,eax
  40ceac:	call   4053e0 <__fprintf_chk@plt>
  40ceb1:	add    rsp,0x20
  40ceb5:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40ceba:	nop    WORD PTR [rax+rax*1+0x0]
  40cec0:	mov    eax,DWORD PTR [rbx+0x18]
  40cec3:	cmp    eax,0x5
  40cec6:	je     40d6e0 <__flatcc_gen_sort@@Base+0x1ae0>
  40cecc:	cmp    eax,0xb
  40cecf:	ja     40e0bc <__flatcc_gen_sort@@Base+0x24bc>
  40ced5:	lea    rsi,[rip+0x33530]        # 44040c <_IO_stdin_used@@Base+0x1340c>
  40cedc:	mov    ecx,eax
  40cede:	movsxd rdx,DWORD PTR [rsi+rcx*4]
  40cee2:	add    rdx,rsi
  40cee5:	notrack jmp rdx
  40cee8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cef0:	mov    eax,DWORD PTR [rbx+0x18]
  40cef3:	cmp    eax,0x5
  40cef6:	je     40d6c0 <__flatcc_gen_sort@@Base+0x1ac0>
  40cefc:	cmp    eax,0xb
  40ceff:	ja     40e0bc <__flatcc_gen_sort@@Base+0x24bc>
  40cf05:	lea    rdx,[rip+0x33530]        # 44043c <_IO_stdin_used@@Base+0x1343c>
  40cf0c:	movsxd rax,DWORD PTR [rdx+rax*4]
  40cf10:	add    rax,rdx
  40cf13:	notrack jmp rax
  40cf16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf20:	sub    rsp,0x8
  40cf24:	mov    r8,QWORD PTR [rbx+0x88]
  40cf2b:	push   r12
  40cf2d:	mov    rdi,QWORD PTR [rbp+0xd0]
  40cf34:	mov    r9,rbp
  40cf37:	push   r13
  40cf39:	mov    rcx,rbp
  40cf3c:	lea    rdx,[rip+0x2a355]        # 437298 <_IO_stdin_used@@Base+0xa298>
  40cf43:	push   r14
  40cf45:	mov    esi,0x1
  40cf4a:	xor    eax,eax
  40cf4c:	call   4053e0 <__fprintf_chk@plt>
  40cf51:	add    rsp,0x20
  40cf55:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40cf5a:	nop    WORD PTR [rax+rax*1+0x0]
  40cf60:	movzx  edx,WORD PTR [rbx+0x58]
  40cf64:	cmp    dx,0x4
  40cf68:	je     40dd55 <__flatcc_gen_sort@@Base+0x2155>
  40cf6e:	ja     40d461 <__flatcc_gen_sort@@Base+0x1861>
  40cf74:	cmp    dx,0x3
  40cf78:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40cf7e:	lea    r11,[rip+0x28b42]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40cf85:	lea    rax,[rip+0x38192]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cf8c:	mov    QWORD PTR [rsp+0x10],rax
  40cf91:	mov    r10,r11
  40cf94:	jmp    40cfe0 <__flatcc_gen_sort@@Base+0x13e0>
  40cf96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cfa0:	movzx  edx,WORD PTR [rbx+0x58]
  40cfa4:	cmp    dx,0x4
  40cfa8:	je     40dd70 <__flatcc_gen_sort@@Base+0x2170>
  40cfae:	ja     40d43a <__flatcc_gen_sort@@Base+0x183a>
  40cfb4:	cmp    dx,0x3
  40cfb8:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40cfbe:	lea    rax,[rip+0x38159]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40cfc5:	mov    QWORD PTR [rsp+0x10],rax
  40cfca:	lea    r11,[rip+0x28ae9]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40cfd1:	lea    r10,[rip+0x28aea]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  40cfd8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cfe0:	lea    rax,[rsp+0x210]
  40cfe8:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40cfed:	mov    QWORD PTR [rsp+0x18],rax
  40cff2:	mov    rdi,rax
  40cff5:	lea    rcx,[rip+0x28b90]        # 435b8c <_IO_stdin_used@@Base+0x8b8c>
  40cffc:	mov    edx,0x64
  40d001:	mov    esi,0x1
  40d006:	mov    eax,0x1
  40d00b:	mov    QWORD PTR [rsp+0x28],r10
  40d010:	mov    QWORD PTR [rsp+0x20],r11
  40d015:	call   405400 <__sprintf_chk@plt>
  40d01a:	mov    r11,QWORD PTR [rsp+0x20]
  40d01f:	mov    r10,QWORD PTR [rsp+0x28]
  40d024:	nop    DWORD PTR [rax+0x0]
  40d028:	mov    r8,QWORD PTR [rbx+0x88]
  40d02f:	push   QWORD PTR [rsp+0x18]
  40d033:	movzx  eax,WORD PTR [rbx+0x72]
  40d037:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d03e:	push   rax
  40d03f:	mov    r9,rbp
  40d042:	mov    rcx,rbp
  40d045:	push   QWORD PTR [rbx+0x80]
  40d04b:	lea    rdx,[rip+0x2a0be]        # 437110 <_IO_stdin_used@@Base+0xa110>
  40d052:	mov    esi,0x1
  40d057:	push   r11
  40d059:	xor    eax,eax
  40d05b:	push   QWORD PTR [rsp+0x30]
  40d05f:	push   r10
  40d061:	push   rbp
  40d062:	push   r12
  40d064:	push   r13
  40d066:	push   r14
  40d068:	call   4053e0 <__fprintf_chk@plt>
  40d06d:	add    rsp,0x50
  40d071:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d080:	movzx  edx,WORD PTR [rbx+0x58]
  40d084:	cmp    dx,0x4
  40d088:	je     40dc88 <__flatcc_gen_sort@@Base+0x2088>
  40d08e:	jbe    40d4f5 <__flatcc_gen_sort@@Base+0x18f5>
  40d094:	cmp    dx,0x5
  40d098:	je     40da2c <__flatcc_gen_sort@@Base+0x1e2c>
  40d09e:	cmp    dx,0x6
  40d0a2:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d0a8:	lea    r11,[rip+0x289df]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40d0af:	lea    r10,[rip+0x289e1]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40d0b6:	lea    rax,[rip+0x38061]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d0bd:	mov    QWORD PTR [rsp+0x10],rax
  40d0c2:	lea    r8,[rip+0x28a17]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  40d0c9:	nop    DWORD PTR [rax+0x0]
  40d0d0:	lea    rax,[rsp+0x210]
  40d0d8:	movzx  r9d,BYTE PTR [rbx+0x48]
  40d0dd:	mov    QWORD PTR [rsp+0x18],rax
  40d0e2:	mov    rdi,rax
  40d0e5:	lea    rcx,[rip+0x28a95]        # 435b81 <_IO_stdin_used@@Base+0x8b81>
  40d0ec:	mov    edx,0x64
  40d0f1:	mov    esi,0x1
  40d0f6:	xor    eax,eax
  40d0f8:	mov    QWORD PTR [rsp+0x28],r10
  40d0fd:	mov    QWORD PTR [rsp+0x20],r11
  40d102:	call   405400 <__sprintf_chk@plt>
  40d107:	mov    r11,QWORD PTR [rsp+0x20]
  40d10c:	mov    r10,QWORD PTR [rsp+0x28]
  40d111:	jmp    40d028 <__flatcc_gen_sort@@Base+0x1428>
  40d116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d120:	movzx  edx,WORD PTR [rbx+0x58]
  40d124:	cmp    dx,0x4
  40d128:	je     40dcc0 <__flatcc_gen_sort@@Base+0x20c0>
  40d12e:	jbe    40d484 <__flatcc_gen_sort@@Base+0x1884>
  40d134:	cmp    dx,0x5
  40d138:	je     40da48 <__flatcc_gen_sort@@Base+0x1e48>
  40d13e:	cmp    dx,0x6
  40d142:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d148:	lea    r11,[rip+0x28938]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40d14f:	mov    r10,r11
  40d152:	cmp    eax,0x9
  40d155:	ja     40da09 <__flatcc_gen_sort@@Base+0x1e09>
  40d15b:	lea    rdx,[rip+0x3330a]        # 44046c <_IO_stdin_used@@Base+0x1346c>
  40d162:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40d166:	add    rax,rdx
  40d169:	notrack jmp rax
  40d16c:	nop    DWORD PTR [rax+0x0]
  40d170:	movzx  edx,WORD PTR [rbx+0x58]
  40d174:	cmp    dx,0x4
  40d178:	je     40dcf4 <__flatcc_gen_sort@@Base+0x20f4>
  40d17e:	jbe    40d528 <__flatcc_gen_sort@@Base+0x1928>
  40d184:	cmp    dx,0x5
  40d188:	je     40da7c <__flatcc_gen_sort@@Base+0x1e7c>
  40d18e:	cmp    dx,0x6
  40d192:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d198:	lea    r11,[rip+0x2891a]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d19f:	lea    r10,[rip+0x2891b]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40d1a6:	lea    rax,[rip+0x37f71]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d1ad:	mov    QWORD PTR [rsp+0x10],rax
  40d1b2:	lea    r8,[rip+0x2891e]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40d1b9:	jmp    40d0d0 <__flatcc_gen_sort@@Base+0x14d0>
  40d1be:	xchg   ax,ax
  40d1c0:	movzx  edx,WORD PTR [rbx+0x58]
  40d1c4:	cmp    dx,0x4
  40d1c8:	je     40dd10 <__flatcc_gen_sort@@Base+0x2110>
  40d1ce:	jbe    40d542 <__flatcc_gen_sort@@Base+0x1942>
  40d1d4:	cmp    dx,0x5
  40d1d8:	je     40da9b <__flatcc_gen_sort@@Base+0x1e9b>
  40d1de:	cmp    dx,0x6
  40d1e2:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d1e8:	lea    r11,[rip+0x288ae]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40d1ef:	lea    r10,[rip+0x288b0]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  40d1f6:	lea    rax,[rip+0x37f21]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d1fd:	mov    QWORD PTR [rsp+0x10],rax
  40d202:	lea    r8,[rip+0x288df]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  40d209:	jmp    40d0d0 <__flatcc_gen_sort@@Base+0x14d0>
  40d20e:	xchg   ax,ax
  40d210:	movzx  edx,WORD PTR [rbx+0x58]
  40d214:	cmp    dx,0x4
  40d218:	je     40dcd8 <__flatcc_gen_sort@@Base+0x20d8>
  40d21e:	jbe    40d55c <__flatcc_gen_sort@@Base+0x195c>
  40d224:	cmp    dx,0x5
  40d228:	je     40da60 <__flatcc_gen_sort@@Base+0x1e60>
  40d22e:	cmp    dx,0x6
  40d232:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d238:	lea    r11,[rip+0x2884e]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40d23f:	lea    r10,[rip+0x28850]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  40d246:	lea    rax,[rip+0x37ed1]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d24d:	mov    QWORD PTR [rsp+0x10],rax
  40d252:	lea    r8,[rip+0x28886]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40d259:	jmp    40d0d0 <__flatcc_gen_sort@@Base+0x14d0>
  40d25e:	xchg   ax,ax
  40d260:	lea    rax,[rip+0x28860]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40d267:	lea    rcx,[rip+0x37eb0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d26e:	mov    rdx,rax
  40d271:	nop    DWORD PTR [rax+0x0]
  40d278:	sub    rsp,0x8
  40d27c:	mov    r8,QWORD PTR [rbx+0x88]
  40d283:	push   rax
  40d284:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d28b:	mov    esi,0x1
  40d290:	push   rcx
  40d291:	mov    r9,rbp
  40d294:	mov    rcx,rbp
  40d297:	push   rdx
  40d298:	xor    eax,eax
  40d29a:	lea    rdx,[rip+0x29eb7]        # 437158 <_IO_stdin_used@@Base+0xa158>
  40d2a1:	push   rbp
  40d2a2:	push   r12
  40d2a4:	push   r13
  40d2a6:	push   r14
  40d2a8:	call   4053e0 <__fprintf_chk@plt>
  40d2ad:	mov    rsi,QWORD PTR [rbx+0x90]
  40d2b4:	add    rsp,0x40
  40d2b8:	test   rsi,rsi
  40d2bb:	je     40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d2c1:	movzx  eax,WORD PTR [rsi+0x10]
  40d2c5:	test   ax,ax
  40d2c8:	jne    40d658 <__flatcc_gen_sort@@Base+0x1a58>
  40d2ce:	mov    rdx,QWORD PTR [rsp+0x8]
  40d2d3:	mov    rdi,QWORD PTR [rsi+0x18]
  40d2d7:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40d2dc:	sub    rsp,0x8
  40d2e0:	mov    rax,QWORD PTR [rsp+0x10]
  40d2e5:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d2ec:	push   rax
  40d2ed:	mov    r9,r14
  40d2f0:	mov    r8,rbp
  40d2f3:	push   rax
  40d2f4:	mov    rcx,rbp
  40d2f7:	lea    rdx,[rip+0x29e92]        # 437190 <_IO_stdin_used@@Base+0xa190>
  40d2fe:	push   rax
  40d2ff:	mov    esi,0x1
  40d304:	xor    eax,eax
  40d306:	push   r12
  40d308:	push   r13
  40d30a:	call   4053e0 <__fprintf_chk@plt>
  40d30f:	add    rsp,0x30
  40d313:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d318:	nop    DWORD PTR [rax+rax*1+0x0]
  40d320:	lea    rax,[rip+0x28777]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40d327:	lea    rcx,[rip+0x37df0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d32e:	lea    rdx,[rip+0x28772]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40d335:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d33a:	nop    WORD PTR [rax+rax*1+0x0]
  40d340:	lea    rax,[rip+0x28773]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40d347:	lea    rcx,[rip+0x37dd0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d34e:	lea    rdx,[rip+0x2876d]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  40d355:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d35a:	nop    WORD PTR [rax+rax*1+0x0]
  40d360:	lea    rax,[rip+0x28727]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40d367:	lea    rcx,[rip+0x37db0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d36e:	lea    rdx,[rip+0x28722]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40d375:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d37a:	nop    WORD PTR [rax+rax*1+0x0]
  40d380:	lea    rax,[rip+0x28706]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40d387:	lea    rcx,[rip+0x37d90]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d38e:	lea    rdx,[rip+0x28701]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  40d395:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d39a:	nop    WORD PTR [rax+rax*1+0x0]
  40d3a0:	lea    rax,[rip+0x286f6]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40d3a7:	lea    rcx,[rip+0x37d70]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d3ae:	lea    rdx,[rip+0x286f1]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  40d3b5:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d3ba:	nop    WORD PTR [rax+rax*1+0x0]
  40d3c0:	lea    rax,[rip+0x286b0]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40d3c7:	lea    rcx,[rip+0x37d50]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d3ce:	lea    rdx,[rip+0x286ab]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  40d3d5:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d3da:	nop    WORD PTR [rax+rax*1+0x0]
  40d3e0:	lea    rax,[rip+0x286a0]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40d3e7:	lea    rcx,[rip+0x37d30]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d3ee:	mov    rdx,rax
  40d3f1:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d3f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d400:	lea    rax,[rip+0x286b2]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d407:	lea    rcx,[rip+0x37d10]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d40e:	lea    rdx,[rip+0x286ac]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40d415:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d41a:	nop    WORD PTR [rax+rax*1+0x0]
  40d420:	lea    rax,[rip+0x28651]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40d427:	lea    rcx,[rip+0x37cf0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d42e:	lea    rdx,[rip+0x2864c]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  40d435:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d43a:	cmp    dx,0x5
  40d43e:	je     40da10 <__flatcc_gen_sort@@Base+0x1e10>
  40d444:	cmp    dx,0x6
  40d448:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d44e:	lea    r11,[rip+0x28665]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40d455:	lea    r10,[rip+0x28666]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  40d45c:	jmp    40d152 <__flatcc_gen_sort@@Base+0x1552>
  40d461:	cmp    dx,0x5
  40d465:	je     40d9e8 <__flatcc_gen_sort@@Base+0x1de8>
  40d46b:	cmp    dx,0x6
  40d46f:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d475:	lea    r11,[rip+0x2864b]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40d47c:	mov    r10,r11
  40d47f:	jmp    40d152 <__flatcc_gen_sort@@Base+0x1552>
  40d484:	cmp    dx,0x3
  40d488:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d48e:	lea    r11,[rip+0x285f2]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40d495:	mov    r10,r11
  40d498:	lea    rax,[rsp+0x210]
  40d4a0:	mov    QWORD PTR [rsp+0x18],rax
  40d4a5:	mov    rdi,rax
  40d4a8:	vxorps xmm0,xmm0,xmm0
  40d4ac:	lea    rcx,[rip+0x286d5]        # 435b88 <_IO_stdin_used@@Base+0x8b88>
  40d4b3:	mov    edx,0x64
  40d4b8:	mov    esi,0x1
  40d4bd:	mov    eax,0x1
  40d4c2:	mov    QWORD PTR [rsp+0x28],r10
  40d4c7:	mov    QWORD PTR [rsp+0x20],r11
  40d4cc:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40d4d1:	vcvtss2sd xmm0,xmm0,xmm0
  40d4d5:	call   405400 <__sprintf_chk@plt>
  40d4da:	lea    rax,[rip+0x37c3d]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d4e1:	mov    QWORD PTR [rsp+0x10],rax
  40d4e6:	mov    r11,QWORD PTR [rsp+0x20]
  40d4eb:	mov    r10,QWORD PTR [rsp+0x28]
  40d4f0:	jmp    40d028 <__flatcc_gen_sort@@Base+0x1428>
  40d4f5:	cmp    dx,0x3
  40d4f9:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d4ff:	lea    r11,[rip+0x28588]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40d506:	lea    r10,[rip+0x2858a]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40d50d:	cmp    eax,0xb
  40d510:	je     40d498 <__flatcc_gen_sort@@Base+0x1898>
  40d512:	lea    rax,[rip+0x37c05]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d519:	mov    QWORD PTR [rsp+0x10],rax
  40d51e:	jmp    40cfe0 <__flatcc_gen_sort@@Base+0x13e0>
  40d523:	nop    DWORD PTR [rax+rax*1+0x0]
  40d528:	cmp    dx,0x3
  40d52c:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d532:	lea    r11,[rip+0x28580]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40d539:	lea    r10,[rip+0x28581]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40d540:	jmp    40d50d <__flatcc_gen_sort@@Base+0x190d>
  40d542:	cmp    dx,0x3
  40d546:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d54c:	lea    r11,[rip+0x2854a]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40d553:	lea    r10,[rip+0x2854c]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  40d55a:	jmp    40d50d <__flatcc_gen_sort@@Base+0x190d>
  40d55c:	cmp    dx,0x3
  40d560:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d566:	lea    r11,[rip+0x28520]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40d56d:	lea    r10,[rip+0x28522]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  40d574:	jmp    40d50d <__flatcc_gen_sort@@Base+0x190d>
  40d576:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d580:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d587:	mov    r9,r12
  40d58a:	mov    r8d,r13d
  40d58d:	mov    rcx,r14
  40d590:	lea    rdx,[rip+0x29b41]        # 4370d8 <_IO_stdin_used@@Base+0xa0d8>
  40d597:	mov    esi,0x1
  40d59c:	xor    eax,eax
  40d59e:	call   4053e0 <__fprintf_chk@plt>
  40d5a3:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d5a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40d5b0:	cmp    ax,0x4
  40d5b4:	jne    40e06c <__flatcc_gen_sort@@Base+0x246c>
  40d5ba:	mov    r8,QWORD PTR [rbx+0x88]
  40d5c1:	push   QWORD PTR [rsp+0x8]
  40d5c5:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d5cc:	mov    r9,rbp
  40d5cf:	push   r12
  40d5d1:	mov    rcx,rbp
  40d5d4:	lea    rdx,[rip+0x29eb5]        # 437490 <_IO_stdin_used@@Base+0xa490>
  40d5db:	push   r13
  40d5dd:	mov    esi,0x1
  40d5e2:	xor    eax,eax
  40d5e4:	push   r14
  40d5e6:	call   4053e0 <__fprintf_chk@plt>
  40d5eb:	add    rsp,0x20
  40d5ef:	mov    r9d,0x1
  40d5f5:	mov    r8,QWORD PTR [rbx+0x18]
  40d5f9:	mov    rcx,r12
  40d5fc:	mov    edx,r13d
  40d5ff:	mov    rsi,r14
  40d602:	mov    rdi,rbp
  40d605:	call   40bdb0 <__flatcc_gen_sort@@Base+0x1b0>
  40d60a:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d60f:	nop
  40d610:	cmp    ax,0x4
  40d614:	jne    40dfcc <__flatcc_gen_sort@@Base+0x23cc>
  40d61a:	mov    r8,QWORD PTR [rbx+0x88]
  40d621:	push   QWORD PTR [rsp+0x8]
  40d625:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d62c:	mov    r9,rbp
  40d62f:	push   r12
  40d631:	mov    rcx,rbp
  40d634:	lea    rdx,[rip+0x29d4d]        # 437388 <_IO_stdin_used@@Base+0xa388>
  40d63b:	push   r13
  40d63d:	mov    esi,0x1
  40d642:	xor    eax,eax
  40d644:	push   r14
  40d646:	call   4053e0 <__fprintf_chk@plt>
  40d64b:	add    rsp,0x20
  40d64f:	xor    r9d,r9d
  40d652:	jmp    40d5f5 <__flatcc_gen_sort@@Base+0x19f5>
  40d654:	nop    DWORD PTR [rax+0x0]
  40d658:	cmp    ax,0x1
  40d65c:	jne    40e205 <__flatcc_gen_sort@@Base+0x2605>
  40d662:	mov    rdx,QWORD PTR [rsp+0x8]
  40d667:	mov    rdi,QWORD PTR [rsi+0x18]
  40d66b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40d670:	mov    rcx,QWORD PTR [rsp+0x8]
  40d675:	mov    rax,QWORD PTR [rbx+0x90]
  40d67c:	push   rcx
  40d67d:	movzx  eax,WORD PTR [rax+0xb0]
  40d684:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d68b:	push   rcx
  40d68c:	mov    r9,r14
  40d68f:	mov    r8,rbp
  40d692:	push   rax
  40d693:	lea    rdx,[rip+0x29b4e]        # 4371e8 <_IO_stdin_used@@Base+0xa1e8>
  40d69a:	mov    esi,0x1
  40d69f:	push   rcx
  40d6a0:	xor    eax,eax
  40d6a2:	mov    rcx,rbp
  40d6a5:	push   r12
  40d6a7:	push   r13
  40d6a9:	call   4053e0 <__fprintf_chk@plt>
  40d6ae:	add    rsp,0x30
  40d6b2:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d6b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d6c0:	mov    rcx,rbp
  40d6c3:	lea    rax,[rip+0x283e3]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40d6ca:	lea    rdx,[rip+0x283e3]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  40d6d1:	jmp    40d278 <__flatcc_gen_sort@@Base+0x1678>
  40d6d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6e0:	movzx  eax,WORD PTR [rbx+0x58]
  40d6e4:	cmp    ax,0x4
  40d6e8:	je     40d948 <__flatcc_gen_sort@@Base+0x1d48>
  40d6ee:	jbe    40d720 <__flatcc_gen_sort@@Base+0x1b20>
  40d6f0:	cmp    ax,0x5
  40d6f4:	jne    40d742 <__flatcc_gen_sort@@Base+0x1b42>
  40d6f6:	mov    QWORD PTR [rsp+0x10],rbp
  40d6fb:	lea    r11,[rip+0x283ab]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40d702:	lea    r10,[rip+0x283ab]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  40d709:	mov    ecx,0x5
  40d70e:	lea    rdx,[rip+0x32d7f]        # 440494 <_IO_stdin_used@@Base+0x13494>
  40d715:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40d719:	add    rax,rdx
  40d71c:	notrack jmp rax
  40d71f:	nop
  40d720:	cmp    ax,0x3
  40d724:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d72a:	mov    QWORD PTR [rsp+0x10],rbp
  40d72f:	lea    r11,[rip+0x28377]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40d736:	lea    r10,[rip+0x28377]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  40d73d:	jmp    40cfe0 <__flatcc_gen_sort@@Base+0x13e0>
  40d742:	cmp    ax,0x6
  40d746:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d74c:	mov    QWORD PTR [rsp+0x10],rbp
  40d751:	lea    r11,[rip+0x28355]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40d758:	lea    r10,[rip+0x28355]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  40d75f:	lea    r8,[rip+0x28371]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40d766:	jmp    40d0d0 <__flatcc_gen_sort@@Base+0x14d0>
  40d76b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d770:	cmp    ax,0x3
  40d774:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d77a:	cmp    edx,0xb
  40d77d:	je     40dd2f <__flatcc_gen_sort@@Base+0x212f>
  40d783:	lea    rax,[rsp+0x210]
  40d78b:	mov    QWORD PTR [rsp+0x18],rax
  40d790:	vmovsd xmm0,QWORD PTR [rbx+0x48]
  40d795:	lea    rcx,[rip+0x283f0]        # 435b8c <_IO_stdin_used@@Base+0x8b8c>
  40d79c:	mov    rdi,rax
  40d79f:	mov    edx,0x64
  40d7a4:	mov    esi,0x1
  40d7a9:	mov    eax,0x1
  40d7ae:	call   405400 <__sprintf_chk@plt>
  40d7b3:	mov    r8,QWORD PTR [rbx+0x88]
  40d7ba:	push   QWORD PTR [rsp+0x18]
  40d7be:	movzx  eax,WORD PTR [rbx+0x72]
  40d7c2:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d7c9:	push   rax
  40d7ca:	mov    r9,rbp
  40d7cd:	mov    rcx,rbp
  40d7d0:	push   QWORD PTR [rbx+0x80]
  40d7d6:	lea    rdx,[rip+0x29b63]        # 437340 <_IO_stdin_used@@Base+0xa340>
  40d7dd:	mov    esi,0x1
  40d7e2:	mov    rax,QWORD PTR [rsp+0x20]
  40d7e7:	push   rax
  40d7e8:	push   rax
  40d7e9:	xor    eax,eax
  40d7eb:	push   r12
  40d7ed:	push   r13
  40d7ef:	push   r14
  40d7f1:	call   4053e0 <__fprintf_chk@plt>
  40d7f6:	add    rsp,0x40
  40d7fa:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d7ff:	nop
  40d800:	cmp    ax,0x6
  40d804:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40d80a:	cmp    edx,0x9
  40d80d:	ja     40da09 <__flatcc_gen_sort@@Base+0x1e09>
  40d813:	lea    rcx,[rip+0x32ca2]        # 4404bc <_IO_stdin_used@@Base+0x134bc>
  40d81a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40d81e:	add    rax,rcx
  40d821:	notrack jmp rax
  40d824:	nop    DWORD PTR [rax+0x0]
  40d828:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d82f:	test   BYTE PTR [rdx+0x12],0x8
  40d833:	jne    40dae0 <__flatcc_gen_sort@@Base+0x1ee0>
  40d839:	mov    r8,QWORD PTR [rbx+0x88]
  40d840:	push   QWORD PTR [rsp+0x8]
  40d844:	mov    r9,rbp
  40d847:	mov    rcx,rbp
  40d84a:	push   r12
  40d84c:	lea    rdx,[rip+0x29bc5]        # 437418 <_IO_stdin_used@@Base+0xa418>
  40d853:	mov    esi,0x1
  40d858:	push   r13
  40d85a:	xor    eax,eax
  40d85c:	push   r14
  40d85e:	call   4053e0 <__fprintf_chk@plt>
  40d863:	add    rsp,0x20
  40d867:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d86c:	nop    DWORD PTR [rax+0x0]
  40d870:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d877:	test   BYTE PTR [rdx+0x12],0x8
  40d87b:	jne    40dac0 <__flatcc_gen_sort@@Base+0x1ec0>
  40d881:	sub    rsp,0x8
  40d885:	mov    rax,QWORD PTR [rsp+0x10]
  40d88a:	mov    r8,QWORD PTR [rbx+0x88]
  40d891:	push   rax
  40d892:	mov    r9,rbp
  40d895:	mov    rcx,rbp
  40d898:	push   rax
  40d899:	lea    rdx,[rip+0x29b40]        # 4373e0 <_IO_stdin_used@@Base+0xa3e0>
  40d8a0:	mov    esi,0x1
  40d8a5:	push   r12
  40d8a7:	xor    eax,eax
  40d8a9:	push   r13
  40d8ab:	push   r14
  40d8ad:	call   4053e0 <__fprintf_chk@plt>
  40d8b2:	add    rsp,0x30
  40d8b6:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d8c0:	mov    r8,QWORD PTR [rbx+0x88]
  40d8c7:	push   QWORD PTR [rsp+0x8]
  40d8cb:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d8d2:	mov    r9,rbp
  40d8d5:	push   r12
  40d8d7:	mov    rcx,rbp
  40d8da:	lea    rdx,[rip+0x29a2f]        # 437310 <_IO_stdin_used@@Base+0xa310>
  40d8e1:	push   r13
  40d8e3:	mov    esi,0x1
  40d8e8:	xor    eax,eax
  40d8ea:	push   r14
  40d8ec:	call   4053e0 <__fprintf_chk@plt>
  40d8f1:	add    rsp,0x20
  40d8f5:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d8fa:	nop    WORD PTR [rax+rax*1+0x0]
  40d900:	movzx  eax,WORD PTR [rbx+0x72]
  40d904:	mov    r8,QWORD PTR [rbx+0x88]
  40d90b:	push   rax
  40d90c:	mov    rdi,QWORD PTR [rbp+0xd0]
  40d913:	mov    r9,rbp
  40d916:	push   QWORD PTR [rbx+0x80]
  40d91c:	mov    rcx,rbp
  40d91f:	lea    rdx,[rip+0x299aa]        # 4372d0 <_IO_stdin_used@@Base+0xa2d0>
  40d926:	push   QWORD PTR [rsp+0x18]
  40d92a:	mov    esi,0x1
  40d92f:	xor    eax,eax
  40d931:	push   r12
  40d933:	push   r13
  40d935:	push   r14
  40d937:	call   4053e0 <__fprintf_chk@plt>
  40d93c:	add    rsp,0x30
  40d940:	jmp    40cdb0 <__flatcc_gen_sort@@Base+0x11b0>
  40d945:	nop    DWORD PTR [rax]
  40d948:	mov    QWORD PTR [rsp+0x10],rbp
  40d94d:	lea    r11,[rip+0x28159]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40d954:	lea    r10,[rip+0x28159]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  40d95b:	mov    ecx,0x5
  40d960:	lea    rdx,[rip+0x32b7d]        # 4404e4 <_IO_stdin_used@@Base+0x134e4>
  40d967:	movsxd rax,DWORD PTR [rdx+rcx*4]
  40d96b:	add    rax,rdx
  40d96e:	notrack jmp rax
  40d971:	lea    r8,[rip+0x2815f]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40d978:	lea    rax,[rsp+0x210]
  40d980:	mov    QWORD PTR [rsp+0x28],r10
  40d985:	mov    QWORD PTR [rsp+0x20],r11
  40d98a:	mov    QWORD PTR [rsp+0x18],rax
  40d98f:	mov    r9,QWORD PTR [rbx+0x48]
  40d993:	lea    rcx,[rip+0x281de]        # 435b78 <_IO_stdin_used@@Base+0x8b78>
  40d99a:	mov    rdi,rax
  40d99d:	mov    edx,0x64
  40d9a2:	mov    esi,0x1
  40d9a7:	xor    eax,eax
  40d9a9:	call   405400 <__sprintf_chk@plt>
  40d9ae:	mov    r11,QWORD PTR [rsp+0x20]
  40d9b3:	mov    r10,QWORD PTR [rsp+0x28]
  40d9b8:	jmp    40d028 <__flatcc_gen_sort@@Base+0x1428>
  40d9bd:	lea    r8,[rip+0x28113]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40d9c4:	lea    rax,[rsp+0x210]
  40d9cc:	mov    QWORD PTR [rsp+0x28],r10
  40d9d1:	mov    QWORD PTR [rsp+0x20],r11
  40d9d6:	mov    QWORD PTR [rsp+0x18],rax
  40d9db:	mov    r9,QWORD PTR [rbx+0x48]
  40d9df:	lea    rcx,[rip+0x28189]        # 435b6f <_IO_stdin_used@@Base+0x8b6f>
  40d9e6:	jmp    40d99a <__flatcc_gen_sort@@Base+0x1d9a>
  40d9e8:	lea    rsi,[rip+0x3772f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40d9ef:	mov    QWORD PTR [rsp+0x10],rsi
  40d9f4:	lea    r11,[rip+0x280cc]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40d9fb:	mov    r10,r11
  40d9fe:	xchg   ax,ax
  40da00:	cmp    eax,0x9
  40da03:	jbe    40d70e <__flatcc_gen_sort@@Base+0x1b0e>
  40da09:	call   40c070 <__flatcc_gen_sort@@Base+0x470>
  40da0e:	xchg   ax,ax
  40da10:	lea    rsi,[rip+0x37707]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40da17:	lea    r11,[rip+0x2809c]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40da1e:	mov    QWORD PTR [rsp+0x10],rsi
  40da23:	lea    r10,[rip+0x28098]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  40da2a:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40da2c:	lea    rsi,[rip+0x376eb]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40da33:	lea    r11,[rip+0x28054]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40da3a:	mov    QWORD PTR [rsp+0x10],rsi
  40da3f:	lea    r10,[rip+0x28051]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40da46:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40da48:	lea    r11,[rip+0x28038]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40da4f:	lea    rsi,[rip+0x376c8]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40da56:	mov    QWORD PTR [rsp+0x10],rsi
  40da5b:	mov    r10,r11
  40da5e:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40da60:	lea    rsi,[rip+0x376b7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40da67:	lea    r11,[rip+0x2801f]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40da6e:	mov    QWORD PTR [rsp+0x10],rsi
  40da73:	lea    r10,[rip+0x2801c]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  40da7a:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40da7c:	lea    rsi,[rip+0x3769b]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40da83:	lea    r11,[rip+0x2802f]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40da8a:	mov    QWORD PTR [rsp+0x10],rsi
  40da8f:	lea    r10,[rip+0x2802b]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40da96:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40da9b:	lea    rsi,[rip+0x3767c]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40daa2:	lea    r11,[rip+0x27ff4]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40daa9:	mov    QWORD PTR [rsp+0x10],rsi
  40daae:	lea    r10,[rip+0x27ff1]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  40dab5:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40daba:	nop    WORD PTR [rax+rax*1+0x0]
  40dac0:	lea    rdx,[rip+0x298f1]        # 4373b8 <_IO_stdin_used@@Base+0xa3b8>
  40dac7:	mov    esi,0x1
  40dacc:	xor    eax,eax
  40dace:	call   4053e0 <__fprintf_chk@plt>
  40dad3:	mov    rdi,QWORD PTR [rbp+0xd0]
  40dada:	jmp    40d881 <__flatcc_gen_sort@@Base+0x1c81>
  40dadf:	nop
  40dae0:	lea    rdx,[rip+0x298d1]        # 4373b8 <_IO_stdin_used@@Base+0xa3b8>
  40dae7:	mov    esi,0x1
  40daec:	xor    eax,eax
  40daee:	call   4053e0 <__fprintf_chk@plt>
  40daf3:	mov    rdi,QWORD PTR [rbp+0xd0]
  40dafa:	jmp    40d839 <__flatcc_gen_sort@@Base+0x1c39>
  40daff:	cmp    edx,0x9
  40db02:	ja     40da09 <__flatcc_gen_sort@@Base+0x1e09>
  40db08:	lea    rcx,[rip+0x329fd]        # 44050c <_IO_stdin_used@@Base+0x1350c>
  40db0f:	movsxd rax,DWORD PTR [rcx+rdx*4]
  40db13:	add    rax,rcx
  40db16:	notrack jmp rax
  40db19:	nop    DWORD PTR [rax+0x0]
  40db20:	movzx  edx,WORD PTR [rbx+0x58]
  40db24:	cmp    dx,0x4
  40db28:	je     40e1e1 <__flatcc_gen_sort@@Base+0x25e1>
  40db2e:	jbe    40de28 <__flatcc_gen_sort@@Base+0x2228>
  40db34:	cmp    dx,0x5
  40db38:	je     40e167 <__flatcc_gen_sort@@Base+0x2567>
  40db3e:	cmp    dx,0x6
  40db42:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40db48:	lea    r11,[rip+0x27f29]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40db4f:	lea    r10,[rip+0x27f2b]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  40db56:	lea    rax,[rip+0x375c1]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40db5d:	mov    QWORD PTR [rsp+0x10],rax
  40db62:	lea    r8,[rip+0x27f66]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  40db69:	jmp    40d0d0 <__flatcc_gen_sort@@Base+0x14d0>
  40db6e:	lea    r8,[rip+0x27f59]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  40db75:	jmp    40d9c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40db7a:	lea    r8,[rip+0x27f67]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  40db81:	jmp    40d9c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40db86:	lea    r8,[rip+0x27f52]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40db8d:	jmp    40d9c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40db92:	lea    r8,[rip+0x27f36]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  40db99:	jmp    40d9c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40db9e:	lea    r8,[rip+0x27f44]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  40dba5:	jmp    40d9c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40dbaa:	lea    r8,[rip+0x27f27]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  40dbb1:	jmp    40d9c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40dbb6:	lea    r8,[rip+0x27f22]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40dbbd:	jmp    40d978 <__flatcc_gen_sort@@Base+0x1d78>
  40dbc2:	lea    r8,[rip+0x27f06]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  40dbc9:	jmp    40d978 <__flatcc_gen_sort@@Base+0x1d78>
  40dbce:	lea    rax,[rip+0x37549]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dbd5:	mov    QWORD PTR [rsp+0x10],rax
  40dbda:	lea    r8,[rip+0x27ef7]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  40dbe1:	jmp    40d0d0 <__flatcc_gen_sort@@Base+0x14d0>
  40dbe6:	movzx  edx,WORD PTR [rbx+0x58]
  40dbea:	cmp    dx,0x4
  40dbee:	je     40e148 <__flatcc_gen_sort@@Base+0x2548>
  40dbf4:	jbe    40e12b <__flatcc_gen_sort@@Base+0x252b>
  40dbfa:	cmp    dx,0x5
  40dbfe:	je     40e10c <__flatcc_gen_sort@@Base+0x250c>
  40dc04:	cmp    dx,0x6
  40dc08:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40dc0e:	lea    r11,[rip+0x27e89]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40dc15:	lea    r10,[rip+0x27e8b]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40dc1c:	lea    rax,[rip+0x374fb]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dc23:	mov    QWORD PTR [rsp+0x10],rax
  40dc28:	lea    r8,[rip+0x27eba]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  40dc2f:	jmp    40d0d0 <__flatcc_gen_sort@@Base+0x14d0>
  40dc34:	lea    r8,[rip+0x27e93]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  40dc3b:	jmp    40d978 <__flatcc_gen_sort@@Base+0x1d78>
  40dc40:	lea    r8,[rip+0x27ea1]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  40dc47:	jmp    40d978 <__flatcc_gen_sort@@Base+0x1d78>
  40dc4c:	lea    r8,[rip+0x27e8d]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  40dc53:	jmp    40d9c4 <__flatcc_gen_sort@@Base+0x1dc4>
  40dc58:	lea    r8,[rip+0x27e8a]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  40dc5f:	jmp    40d978 <__flatcc_gen_sort@@Base+0x1d78>
  40dc64:	lea    r8,[rip+0x27e75]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  40dc6b:	jmp    40d978 <__flatcc_gen_sort@@Base+0x1d78>
  40dc70:	lea    rax,[rip+0x374a7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dc77:	mov    QWORD PTR [rsp+0x10],rax
  40dc7c:	lea    r8,[rip+0x27e4b]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  40dc83:	jmp    40d0d0 <__flatcc_gen_sort@@Base+0x14d0>
  40dc88:	lea    rsi,[rip+0x3748f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dc8f:	mov    QWORD PTR [rsp+0x10],rsi
  40dc94:	lea    r11,[rip+0x27df3]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40dc9b:	lea    r10,[rip+0x27df5]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40dca2:	nop    WORD PTR [rax+rax*1+0x0]
  40dca8:	cmp    eax,0x9
  40dcab:	jbe    40d960 <__flatcc_gen_sort@@Base+0x1d60>
  40dcb1:	jmp    40da09 <__flatcc_gen_sort@@Base+0x1e09>
  40dcb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dcc0:	lea    r11,[rip+0x27dc0]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40dcc7:	lea    rsi,[rip+0x37450]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dcce:	mov    QWORD PTR [rsp+0x10],rsi
  40dcd3:	mov    r10,r11
  40dcd6:	jmp    40dca8 <__flatcc_gen_sort@@Base+0x20a8>
  40dcd8:	lea    rsi,[rip+0x3743f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dcdf:	lea    r11,[rip+0x27da7]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40dce6:	mov    QWORD PTR [rsp+0x10],rsi
  40dceb:	lea    r10,[rip+0x27da4]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  40dcf2:	jmp    40dca8 <__flatcc_gen_sort@@Base+0x20a8>
  40dcf4:	lea    rsi,[rip+0x37423]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dcfb:	lea    r11,[rip+0x27db7]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40dd02:	mov    QWORD PTR [rsp+0x10],rsi
  40dd07:	lea    r10,[rip+0x27db3]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40dd0e:	jmp    40dca8 <__flatcc_gen_sort@@Base+0x20a8>
  40dd10:	lea    rsi,[rip+0x37407]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dd17:	lea    r11,[rip+0x27d7f]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40dd1e:	mov    QWORD PTR [rsp+0x10],rsi
  40dd23:	lea    r10,[rip+0x27d7c]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  40dd2a:	jmp    40dca8 <__flatcc_gen_sort@@Base+0x20a8>
  40dd2f:	vxorps xmm0,xmm0,xmm0
  40dd33:	lea    rax,[rsp+0x210]
  40dd3b:	vcvtsd2ss xmm0,xmm0,QWORD PTR [rbx+0x48]
  40dd40:	mov    QWORD PTR [rsp+0x18],rax
  40dd45:	vcvtss2sd xmm0,xmm0,xmm0
  40dd49:	lea    rcx,[rip+0x27e38]        # 435b88 <_IO_stdin_used@@Base+0x8b88>
  40dd50:	jmp    40d79c <__flatcc_gen_sort@@Base+0x1b9c>
  40dd55:	lea    r11,[rip+0x27d6b]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40dd5c:	lea    rsi,[rip+0x373bb]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dd63:	mov    QWORD PTR [rsp+0x10],rsi
  40dd68:	mov    r10,r11
  40dd6b:	jmp    40dca8 <__flatcc_gen_sort@@Base+0x20a8>
  40dd70:	lea    rax,[rip+0x373a7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40dd77:	mov    QWORD PTR [rsp+0x10],rax
  40dd7c:	lea    r11,[rip+0x27d37]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40dd83:	lea    r10,[rip+0x27d38]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  40dd8a:	lea    r8,[rip+0x27d47]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  40dd91:	jmp    40d978 <__flatcc_gen_sort@@Base+0x1d78>
  40dd96:	lea    r8,[rip+0x27d3a]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40dd9d:	lea    rax,[rsp+0x210]
  40dda5:	mov    QWORD PTR [rsp+0x18],rax
  40ddaa:	mov    r9,QWORD PTR [rbx+0x48]
  40ddae:	lea    rcx,[rip+0x27dc3]        # 435b78 <_IO_stdin_used@@Base+0x8b78>
  40ddb5:	mov    rdi,rax
  40ddb8:	mov    edx,0x64
  40ddbd:	mov    esi,0x1
  40ddc2:	xor    eax,eax
  40ddc4:	call   405400 <__sprintf_chk@plt>
  40ddc9:	jmp    40d7b3 <__flatcc_gen_sort@@Base+0x1bb3>
  40ddce:	lea    r8,[rip+0x27d02]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40ddd5:	lea    rax,[rsp+0x210]
  40dddd:	mov    QWORD PTR [rsp+0x18],rax
  40dde2:	mov    r9,QWORD PTR [rbx+0x48]
  40dde6:	lea    rcx,[rip+0x27d82]        # 435b6f <_IO_stdin_used@@Base+0x8b6f>
  40dded:	jmp    40ddb5 <__flatcc_gen_sort@@Base+0x21b5>
  40ddef:	lea    r8,[rip+0x27ce1]        # 435ad7 <_IO_stdin_used@@Base+0x8ad7>
  40ddf6:	lea    rax,[rsp+0x210]
  40ddfe:	movzx  r9d,BYTE PTR [rbx+0x48]
  40de03:	mov    QWORD PTR [rsp+0x18],rax
  40de08:	mov    rdi,rax
  40de0b:	lea    rcx,[rip+0x27d6f]        # 435b81 <_IO_stdin_used@@Base+0x8b81>
  40de12:	mov    edx,0x64
  40de17:	mov    esi,0x1
  40de1c:	xor    eax,eax
  40de1e:	call   405400 <__sprintf_chk@plt>
  40de23:	jmp    40d7b3 <__flatcc_gen_sort@@Base+0x1bb3>
  40de28:	cmp    dx,0x3
  40de2c:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40de32:	lea    r11,[rip+0x27c3f]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40de39:	lea    r10,[rip+0x27c41]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  40de40:	jmp    40d50d <__flatcc_gen_sort@@Base+0x190d>
  40de45:	movzx  edx,WORD PTR [rbx+0x58]
  40de49:	cmp    dx,0x4
  40de4d:	je     40e1c2 <__flatcc_gen_sort@@Base+0x25c2>
  40de53:	jbe    40e1a5 <__flatcc_gen_sort@@Base+0x25a5>
  40de59:	cmp    dx,0x5
  40de5d:	je     40e186 <__flatcc_gen_sort@@Base+0x2586>
  40de63:	cmp    dx,0x6
  40de67:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40de6d:	lea    r11,[rip+0x27c03]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40de74:	lea    r10,[rip+0x27c05]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  40de7b:	jmp    40d152 <__flatcc_gen_sort@@Base+0x1552>
  40de80:	lea    r8,[rip+0x27c51]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  40de87:	jmp    40ddf6 <__flatcc_gen_sort@@Base+0x21f6>
  40de8c:	lea    r8,[rip+0x27c3c]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  40de93:	jmp    40ddf6 <__flatcc_gen_sort@@Base+0x21f6>
  40de98:	lea    r8,[rip+0x27c2f]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  40de9f:	jmp    40dd9d <__flatcc_gen_sort@@Base+0x219d>
  40dea4:	lea    r8,[rip+0x27c3d]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  40deab:	jmp    40dd9d <__flatcc_gen_sort@@Base+0x219d>
  40deb0:	lea    r8,[rip+0x27c28]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40deb7:	jmp    40dd9d <__flatcc_gen_sort@@Base+0x219d>
  40debc:	lea    r8,[rip+0x27c1d]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  40dec3:	jmp    40dd9d <__flatcc_gen_sort@@Base+0x219d>
  40dec8:	lea    r8,[rip+0x27c00]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  40decf:	jmp    40dd9d <__flatcc_gen_sort@@Base+0x219d>
  40ded4:	lea    r8,[rip+0x27c0e]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  40dedb:	jmp    40dd9d <__flatcc_gen_sort@@Base+0x219d>
  40dee0:	lea    r8,[rip+0x27c02]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  40dee7:	jmp    40ddf6 <__flatcc_gen_sort@@Base+0x21f6>
  40deec:	lea    r8,[rip+0x27bed]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  40def3:	jmp    40ddf6 <__flatcc_gen_sort@@Base+0x21f6>
  40def8:	lea    r8,[rip+0x27bcf]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  40deff:	jmp    40ddd5 <__flatcc_gen_sort@@Base+0x21d5>
  40df04:	lea    r8,[rip+0x27bdd]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  40df0b:	jmp    40ddd5 <__flatcc_gen_sort@@Base+0x21d5>
  40df10:	lea    r8,[rip+0x27bc1]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  40df17:	jmp    40ddd5 <__flatcc_gen_sort@@Base+0x21d5>
  40df1c:	lea    r8,[rip+0x27bac]        # 435acf <_IO_stdin_used@@Base+0x8acf>
  40df23:	jmp    40ddd5 <__flatcc_gen_sort@@Base+0x21d5>
  40df28:	lea    r8,[rip+0x27bb0]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40df2f:	jmp    40ddd5 <__flatcc_gen_sort@@Base+0x21d5>
  40df34:	lea    r8,[rip+0x27b9d]        # 435ad8 <_IO_stdin_used@@Base+0x8ad8>
  40df3b:	jmp    40dd9d <__flatcc_gen_sort@@Base+0x219d>
  40df40:	lea    r8,[rip+0x27ba2]        # 435ae9 <_IO_stdin_used@@Base+0x8ae9>
  40df47:	jmp    40ddd5 <__flatcc_gen_sort@@Base+0x21d5>
  40df4c:	lea    r8,[rip+0x27b8d]        # 435ae0 <_IO_stdin_used@@Base+0x8ae0>
  40df53:	jmp    40ddd5 <__flatcc_gen_sort@@Base+0x21d5>
  40df58:	lea    r8,[rip+0x27b6f]        # 435ace <_IO_stdin_used@@Base+0x8ace>
  40df5f:	jmp    40ddf6 <__flatcc_gen_sort@@Base+0x21f6>
  40df64:	lea    r8,[rip+0x27b7d]        # 435ae8 <_IO_stdin_used@@Base+0x8ae8>
  40df6b:	jmp    40ddf6 <__flatcc_gen_sort@@Base+0x21f6>
  40df70:	lea    r8,[rip+0x27b68]        # 435adf <_IO_stdin_used@@Base+0x8adf>
  40df77:	jmp    40ddf6 <__flatcc_gen_sort@@Base+0x21f6>
  40df7c:	mov    rax,QWORD PTR [rip+0x43065]        # 450fe8 <stderr@GLIBC_2.2.5>
  40df83:	lea    rcx,[rip+0x28eae]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40df8a:	mov    rdi,QWORD PTR [rax]
  40df8d:	lea    rdx,[rip+0x27abf]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40df94:	mov    esi,0x1
  40df99:	lea    r9,[rip+0x20d70]        # 42ed10 <_IO_stdin_used@@Base+0x1d10>
  40dfa0:	mov    r8d,0x5e8
  40dfa6:	xor    eax,eax
  40dfa8:	call   4053e0 <__fprintf_chk@plt>
  40dfad:	lea    rcx,[rip+0x3264c]        # 440600 <_IO_stdin_used@@Base+0x13600>
  40dfb4:	mov    edx,0x5e8
  40dfb9:	lea    rsi,[rip+0x28e78]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40dfc0:	lea    rdi,[rip+0x28b52]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40dfc7:	call   4052e0 <__assert_fail@plt>
  40dfcc:	mov    rax,QWORD PTR [rip+0x43015]        # 450fe8 <stderr@GLIBC_2.2.5>
  40dfd3:	lea    rcx,[rip+0x28e5e]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40dfda:	mov    rdi,QWORD PTR [rax]
  40dfdd:	lea    rdx,[rip+0x27a6f]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40dfe4:	mov    esi,0x1
  40dfe9:	lea    r9,[rip+0x20c08]        # 42ebf8 <_IO_stdin_used@@Base+0x1bf8>
  40dff0:	mov    r8d,0x5c0
  40dff6:	xor    eax,eax
  40dff8:	call   4053e0 <__fprintf_chk@plt>
  40dffd:	lea    rcx,[rip+0x325fc]        # 440600 <_IO_stdin_used@@Base+0x13600>
  40e004:	mov    edx,0x5c0
  40e009:	lea    rsi,[rip+0x28e28]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40e010:	lea    rdi,[rip+0x28b02]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40e017:	call   4052e0 <__assert_fail@plt>
  40e01c:	mov    rax,QWORD PTR [rip+0x42fc5]        # 450fe8 <stderr@GLIBC_2.2.5>
  40e023:	lea    rcx,[rip+0x2027e]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40e02a:	mov    rdi,QWORD PTR [rax]
  40e02d:	lea    rdx,[rip+0x27a1f]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40e034:	mov    esi,0x1
  40e039:	lea    r9,[rip+0x20230]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40e040:	mov    r8d,0x104
  40e046:	xor    eax,eax
  40e048:	call   4053e0 <__fprintf_chk@plt>
  40e04d:	lea    rcx,[rip+0x32594]        # 4405e8 <_IO_stdin_used@@Base+0x135e8>
  40e054:	mov    edx,0x104
  40e059:	lea    rsi,[rip+0x20248]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40e060:	lea    rdi,[rip+0x28ab2]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40e067:	call   4052e0 <__assert_fail@plt>
  40e06c:	mov    rax,QWORD PTR [rip+0x42f75]        # 450fe8 <stderr@GLIBC_2.2.5>
  40e073:	lea    rcx,[rip+0x28dbe]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40e07a:	mov    rdi,QWORD PTR [rax]
  40e07d:	lea    rdx,[rip+0x279cf]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40e084:	mov    esi,0x1
  40e089:	lea    r9,[rip+0x20bb8]        # 42ec48 <_IO_stdin_used@@Base+0x1c48>
  40e090:	mov    r8d,0x5e3
  40e096:	xor    eax,eax
  40e098:	call   4053e0 <__fprintf_chk@plt>
  40e09d:	lea    rcx,[rip+0x3255c]        # 440600 <_IO_stdin_used@@Base+0x13600>
  40e0a4:	mov    edx,0x5e3
  40e0a9:	lea    rsi,[rip+0x28d88]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40e0b0:	lea    rdi,[rip+0x28a62]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40e0b7:	call   4052e0 <__assert_fail@plt>
  40e0bc:	mov    rax,QWORD PTR [rip+0x42f25]        # 450fe8 <stderr@GLIBC_2.2.5>
  40e0c3:	lea    rcx,[rip+0x201de]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40e0ca:	mov    rdi,QWORD PTR [rax]
  40e0cd:	lea    rdx,[rip+0x2797f]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40e0d4:	mov    esi,0x1
  40e0d9:	lea    r9,[rip+0x20190]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40e0e0:	mov    r8d,0x8d
  40e0e6:	xor    eax,eax
  40e0e8:	call   4053e0 <__fprintf_chk@plt>
  40e0ed:	lea    rcx,[rip+0x325ac]        # 4406a0 <_IO_stdin_used@@Base+0x136a0>
  40e0f4:	mov    edx,0x8d
  40e0f9:	lea    rsi,[rip+0x201a8]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40e100:	lea    rdi,[rip+0x28a12]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40e107:	call   4052e0 <__assert_fail@plt>
  40e10c:	lea    rsi,[rip+0x3700b]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e113:	lea    r11,[rip+0x27984]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40e11a:	mov    QWORD PTR [rsp+0x10],rsi
  40e11f:	lea    r10,[rip+0x27981]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40e126:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40e12b:	cmp    dx,0x3
  40e12f:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40e135:	lea    r11,[rip+0x27962]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40e13c:	lea    r10,[rip+0x27964]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40e143:	jmp    40d50d <__flatcc_gen_sort@@Base+0x190d>
  40e148:	lea    rsi,[rip+0x36fcf]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e14f:	lea    r11,[rip+0x27948]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40e156:	mov    QWORD PTR [rsp+0x10],rsi
  40e15b:	lea    r10,[rip+0x27945]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40e162:	jmp    40dca8 <__flatcc_gen_sort@@Base+0x20a8>
  40e167:	lea    rsi,[rip+0x36fb0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e16e:	lea    r11,[rip+0x27903]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40e175:	mov    QWORD PTR [rsp+0x10],rsi
  40e17a:	lea    r10,[rip+0x27900]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  40e181:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40e186:	lea    rsi,[rip+0x36f91]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e18d:	lea    r11,[rip+0x278e3]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40e194:	mov    QWORD PTR [rsp+0x10],rsi
  40e199:	lea    r10,[rip+0x278e0]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  40e1a0:	jmp    40da00 <__flatcc_gen_sort@@Base+0x1e00>
  40e1a5:	cmp    dx,0x3
  40e1a9:	jne    40e01c <__flatcc_gen_sort@@Base+0x241c>
  40e1af:	lea    r11,[rip+0x278c1]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40e1b6:	lea    r10,[rip+0x278c3]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  40e1bd:	jmp    40d50d <__flatcc_gen_sort@@Base+0x190d>
  40e1c2:	lea    rsi,[rip+0x36f55]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e1c9:	lea    r11,[rip+0x278a7]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40e1d0:	mov    QWORD PTR [rsp+0x10],rsi
  40e1d5:	lea    r10,[rip+0x278a4]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  40e1dc:	jmp    40dca8 <__flatcc_gen_sort@@Base+0x20a8>
  40e1e1:	lea    rsi,[rip+0x36f36]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e1e8:	lea    r11,[rip+0x27889]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40e1ef:	mov    QWORD PTR [rsp+0x10],rsi
  40e1f4:	lea    r10,[rip+0x27886]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  40e1fb:	jmp    40dca8 <__flatcc_gen_sort@@Base+0x20a8>
  40e200:	call   4052c0 <__stack_chk_fail@plt>
  40e205:	mov    rax,QWORD PTR [rip+0x42ddc]        # 450fe8 <stderr@GLIBC_2.2.5>
  40e20c:	lea    rcx,[rip+0x28c25]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40e213:	mov    rdi,QWORD PTR [rax]
  40e216:	lea    rdx,[rip+0x27836]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40e21d:	mov    esi,0x1
  40e222:	lea    r9,[rip+0x29017]        # 437240 <_IO_stdin_used@@Base+0xa240>
  40e229:	mov    r8d,0x596
  40e22f:	xor    eax,eax
  40e231:	call   4053e0 <__fprintf_chk@plt>
  40e236:	lea    rcx,[rip+0x323c3]        # 440600 <_IO_stdin_used@@Base+0x13600>
  40e23d:	mov    edx,0x596
  40e242:	lea    rsi,[rip+0x28bef]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40e249:	lea    rdi,[rip+0x288c9]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40e250:	call   4052e0 <__assert_fail@plt>
  40e255:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40e260:	push   r15
  40e262:	mov    ecx,0x1d
  40e267:	push   r14
  40e269:	push   r13
  40e26b:	push   r12
  40e26d:	push   rbp
  40e26e:	push   rbx
  40e26f:	mov    rbx,rdi
  40e272:	sub    rsp,0x1f8
  40e279:	mov    rax,QWORD PTR fs:0x28
  40e282:	mov    QWORD PTR [rsp+0x1e8],rax
  40e28a:	xor    eax,eax
  40e28c:	lea    rbp,[rsp+0x100]
  40e294:	mov    rdi,rbp
  40e297:	rep stos QWORD PTR es:[rdi],rax
  40e29a:	mov    rax,QWORD PTR [rbx+0xd8]
  40e2a1:	mov    r12,QWORD PTR [rax+0x40]
  40e2a5:	test   r12,r12
  40e2a8:	je     40efdf <__flatcc_gen_sort@@Base+0x33df>
  40e2ae:	xor    eax,eax
  40e2b0:	lea    r13,[rip+0x29211]        # 4374c8 <_IO_stdin_used@@Base+0xa4c8>
  40e2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40e2c0:	cmp    WORD PTR [r12+0x10],0x4
  40e2c7:	jne    40e306 <__flatcc_gen_sort@@Base+0x2706>
  40e2c9:	mov    rdi,QWORD PTR [r12+0x18]
  40e2ce:	mov    rdx,rbp
  40e2d1:	mov    rsi,r12
  40e2d4:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40e2d9:	sub    rsp,0x8
  40e2dd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e2e4:	push   rbp
  40e2e5:	mov    r9,rbx
  40e2e8:	mov    r8,rbp
  40e2eb:	mov    rcx,rbx
  40e2ee:	mov    rdx,r13
  40e2f1:	mov    esi,0x1
  40e2f6:	xor    eax,eax
  40e2f8:	call   4053e0 <__fprintf_chk@plt>
  40e2fd:	pop    r14
  40e2ff:	pop    r15
  40e301:	mov    eax,0x1
  40e306:	mov    r12,QWORD PTR [r12]
  40e30a:	test   r12,r12
  40e30d:	jne    40e2c0 <__flatcc_gen_sort@@Base+0x26c0>
  40e30f:	test   eax,eax
  40e311:	je     40e32d <__flatcc_gen_sort@@Base+0x272d>
  40e313:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e31a:	lea    rdx,[rip+0x36dfc]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40e321:	mov    esi,0x1
  40e326:	xor    eax,eax
  40e328:	call   4053e0 <__fprintf_chk@plt>
  40e32d:	mov    rax,QWORD PTR [rbx+0xd8]
  40e334:	mov    r12,QWORD PTR [rax+0x40]
  40e338:	test   r12,r12
  40e33b:	je     40efdf <__flatcc_gen_sort@@Base+0x33df>
  40e341:	xor    eax,eax
  40e343:	nop    DWORD PTR [rax+rax*1+0x0]
  40e348:	cmp    WORD PTR [r12+0x10],0x0
  40e34f:	jne    40e4e1 <__flatcc_gen_sort@@Base+0x28e1>
  40e355:	xor    eax,eax
  40e357:	mov    ecx,0x1d
  40e35c:	mov    rdi,rbp
  40e35f:	rep stos QWORD PTR es:[rdi],rax
  40e362:	xor    r14d,r14d
  40e365:	mov    rax,QWORD PTR [r12+0x28]
  40e36a:	test   rax,rax
  40e36d:	je     40e387 <__flatcc_gen_sort@@Base+0x2787>
  40e36f:	nop
  40e370:	movzx  edx,WORD PTR [rax+0x70]
  40e374:	mov    rax,QWORD PTR [rax]
  40e377:	and    edx,0x4
  40e37a:	cmp    dx,0x1
  40e37e:	adc    r14d,0x0
  40e382:	test   rax,rax
  40e385:	jne    40e370 <__flatcc_gen_sort@@Base+0x2770>
  40e387:	mov    rdi,QWORD PTR [r12+0x18]
  40e38c:	mov    rdx,rbp
  40e38f:	mov    rsi,r12
  40e392:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40e397:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e39e:	mov    r8,rbp
  40e3a1:	mov    rcx,rbx
  40e3a4:	lea    rdx,[rip+0x29175]        # 437520 <_IO_stdin_used@@Base+0xa520>
  40e3ab:	mov    esi,0x1
  40e3b0:	xor    eax,eax
  40e3b2:	call   4053e0 <__fprintf_chk@plt>
  40e3b7:	mov    r13,QWORD PTR [r12+0x28]
  40e3bc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e3c3:	test   r13,r13
  40e3c6:	je     40f0b0 <__flatcc_gen_sort@@Base+0x34b0>
  40e3cc:	xor    r15d,r15d
  40e3cf:	jmp    40e43d <__flatcc_gen_sort@@Base+0x283d>
  40e3d1:	nop    DWORD PTR [rax+0x0]
  40e3d8:	test   r14d,r14d
  40e3db:	je     40e410 <__flatcc_gen_sort@@Base+0x2810>
  40e3dd:	test   r15b,0x3
  40e3e1:	jne    40e3f2 <__flatcc_gen_sort@@Base+0x27f2>
  40e3e3:	mov    eax,r14d
  40e3e6:	sub    eax,r15d
  40e3e9:	cmp    eax,0x2
  40e3ec:	jg     40f0d0 <__flatcc_gen_sort@@Base+0x34d0>
  40e3f2:	lea    rdx,[rip+0x286dc]        # 436ad5 <_IO_stdin_used@@Base+0x9ad5>
  40e3f9:	mov    esi,0x1
  40e3fe:	xor    eax,eax
  40e400:	call   4053e0 <__fprintf_chk@plt>
  40e405:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e40c:	nop    DWORD PTR [rax+0x0]
  40e410:	mov    ecx,DWORD PTR [r13+0x88]
  40e417:	lea    rdx,[rip+0x28750]        # 436b6e <_IO_stdin_used@@Base+0x9b6e>
  40e41e:	mov    esi,0x1
  40e423:	xor    eax,eax
  40e425:	call   4053e0 <__fprintf_chk@plt>
  40e42a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e431:	inc    r15d
  40e434:	mov    r13,QWORD PTR [r13+0x0]
  40e438:	test   r13,r13
  40e43b:	je     40e470 <__flatcc_gen_sort@@Base+0x2870>
  40e43d:	movzx  eax,WORD PTR [r13+0x70]
  40e442:	test   al,0x4
  40e444:	jne    40e434 <__flatcc_gen_sort@@Base+0x2834>
  40e446:	test   ah,0x1
  40e449:	je     40e434 <__flatcc_gen_sort@@Base+0x2834>
  40e44b:	test   r15d,r15d
  40e44e:	jne    40e3d8 <__flatcc_gen_sort@@Base+0x27d8>
  40e450:	lea    rdx,[rip+0x28694]        # 436aeb <_IO_stdin_used@@Base+0x9aeb>
  40e457:	mov    esi,0x1
  40e45c:	xor    eax,eax
  40e45e:	call   4053e0 <__fprintf_chk@plt>
  40e463:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e46a:	jmp    40e410 <__flatcc_gen_sort@@Base+0x2810>
  40e46c:	nop    DWORD PTR [rax+0x0]
  40e470:	test   r15d,r15d
  40e473:	je     40f0b0 <__flatcc_gen_sort@@Base+0x34b0>
  40e479:	lea    rdx,[rip+0x286f1]        # 436b71 <_IO_stdin_used@@Base+0x9b71>
  40e480:	mov    esi,0x1
  40e485:	xor    eax,eax
  40e487:	call   4053e0 <__fprintf_chk@plt>
  40e48c:	xor    eax,eax
  40e48e:	mov    ecx,0x1d
  40e493:	mov    rdi,rbp
  40e496:	rep stos QWORD PTR es:[rdi],rax
  40e499:	mov    rdx,rbp
  40e49c:	mov    rsi,r12
  40e49f:	mov    rdi,QWORD PTR [r12+0x18]
  40e4a4:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40e4a9:	sub    rsp,0x8
  40e4ad:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e4b4:	push   QWORD PTR [r12+0xa8]
  40e4bc:	mov    r9,rbp
  40e4bf:	mov    r8,rbx
  40e4c2:	mov    rcx,rbx
  40e4c5:	lea    rdx,[rip+0x29084]        # 437550 <_IO_stdin_used@@Base+0xa550>
  40e4cc:	mov    esi,0x1
  40e4d1:	xor    eax,eax
  40e4d3:	call   4053e0 <__fprintf_chk@plt>
  40e4d8:	pop    r11
  40e4da:	pop    r13
  40e4dc:	mov    eax,0x1
  40e4e1:	mov    r12,QWORD PTR [r12]
  40e4e5:	test   r12,r12
  40e4e8:	jne    40e348 <__flatcc_gen_sort@@Base+0x2748>
  40e4ee:	mov    DWORD PTR [rsp+0xc],eax
  40e4f2:	mov    rax,QWORD PTR [rbx+0xd8]
  40e4f9:	mov    r15,QWORD PTR [rax+0x40]
  40e4fd:	test   r15,r15
  40e500:	je     40f100 <__flatcc_gen_sort@@Base+0x3500>
  40e506:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e510:	cmp    WORD PTR [r15+0x10],0x0
  40e516:	jne    40eb71 <__flatcc_gen_sort@@Base+0x2f71>
  40e51c:	lea    rdx,[rsp+0x10]
  40e521:	xor    eax,eax
  40e523:	mov    rdi,rdx
  40e526:	mov    ecx,0x1d
  40e52b:	rep stos QWORD PTR es:[rdi],rax
  40e52e:	mov    rsi,r15
  40e531:	mov    QWORD PTR [rsp],rdx
  40e535:	xor    r12d,r12d
  40e538:	mov    rdi,QWORD PTR [r15+0x18]
  40e53c:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40e541:	mov    rax,QWORD PTR [r15+0x28]
  40e545:	test   rax,rax
  40e548:	je     40e567 <__flatcc_gen_sort@@Base+0x2967>
  40e54a:	nop    WORD PTR [rax+rax*1+0x0]
  40e550:	movzx  edx,WORD PTR [rax+0x70]
  40e554:	mov    rax,QWORD PTR [rax]
  40e557:	and    edx,0x4
  40e55a:	cmp    dx,0x1
  40e55e:	adc    r12d,0x0
  40e562:	test   rax,rax
  40e565:	jne    40e550 <__flatcc_gen_sort@@Base+0x2950>
  40e567:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e56e:	mov    rcx,QWORD PTR [rsp]
  40e572:	lea    rdx,[rip+0x28600]        # 436b79 <_IO_stdin_used@@Base+0x9b79>
  40e579:	mov    esi,0x1
  40e57e:	xor    eax,eax
  40e580:	call   4053e0 <__fprintf_chk@plt>
  40e585:	mov    ecx,0x1d
  40e58a:	xor    eax,eax
  40e58c:	mov    rdi,rbp
  40e58f:	rep stos QWORD PTR es:[rdi],rax
  40e592:	mov    r14,QWORD PTR [r15+0x28]
  40e596:	test   r14,r14
  40e599:	je     40e6a1 <__flatcc_gen_sort@@Base+0x2aa1>
  40e59f:	test   BYTE PTR [r14+0x70],0x4
  40e5a4:	jne    40e696 <__flatcc_gen_sort@@Base+0x2a96>
  40e5aa:	nop    WORD PTR [rax+rax*1+0x0]
  40e5b0:	lea    r13d,[rax+0x1]
  40e5b4:	test   r12d,r12d
  40e5b7:	je     40e5f0 <__flatcc_gen_sort@@Base+0x29f0>
  40e5b9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e5c0:	test   eax,eax
  40e5c2:	jne    40ead0 <__flatcc_gen_sort@@Base+0x2ed0>
  40e5c8:	cmp    r12d,0x4
  40e5cc:	jle    40eade <__flatcc_gen_sort@@Base+0x2ede>
  40e5d2:	lea    rcx,[rip+0x284f3]        # 436acc <_IO_stdin_used@@Base+0x9acc>
  40e5d9:	lea    rdx,[rip+0x284ef]        # 436acf <_IO_stdin_used@@Base+0x9acf>
  40e5e0:	mov    esi,0x1
  40e5e5:	call   4053e0 <__fprintf_chk@plt>
  40e5ea:	nop    WORD PTR [rax+rax*1+0x0]
  40e5f0:	movzx  eax,WORD PTR [r14+0x28]
  40e5f5:	sub    eax,0x7
  40e5f8:	cmp    ax,0x8
  40e5fc:	ja     40f12f <__flatcc_gen_sort@@Base+0x352f>
  40e602:	lea    rcx,[rip+0x31f2b]        # 440534 <_IO_stdin_used@@Base+0x13534>
  40e609:	movzx  eax,ax
  40e60c:	movsxd rax,DWORD PTR [rcx+rax*4]
  40e610:	add    rax,rcx
  40e613:	notrack jmp rax
  40e616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e620:	mov    rsi,QWORD PTR [r14+0x18]
  40e624:	mov    rdx,rbp
  40e627:	mov    rdi,QWORD PTR [rsi+0x18]
  40e62b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40e630:	mov    rax,QWORD PTR [r14+0x18]
  40e634:	movzx  eax,WORD PTR [rax+0x10]
  40e638:	cmp    ax,0x3
  40e63c:	je     40eaa2 <__flatcc_gen_sort@@Base+0x2ea2>
  40e642:	jbe    40ea98 <__flatcc_gen_sort@@Base+0x2e98>
  40e648:	cmp    ax,0x4
  40e64c:	jne    40f26f <__flatcc_gen_sort@@Base+0x366f>
  40e652:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e659:	mov    r8,QWORD PTR [r14+0x88]
  40e660:	mov    rcx,rbp
  40e663:	lea    rdx,[rip+0x28582]        # 436bec <_IO_stdin_used@@Base+0x9bec>
  40e66a:	mov    esi,0x1
  40e66f:	xor    eax,eax
  40e671:	call   4053e0 <__fprintf_chk@plt>
  40e676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e680:	mov    r14,QWORD PTR [r14]
  40e683:	test   r14,r14
  40e686:	je     40e6a1 <__flatcc_gen_sort@@Base+0x2aa1>
  40e688:	mov    eax,r13d
  40e68b:	test   BYTE PTR [r14+0x70],0x4
  40e690:	je     40e5b0 <__flatcc_gen_sort@@Base+0x29b0>
  40e696:	mov    r14,QWORD PTR [r14]
  40e699:	mov    r13d,eax
  40e69c:	test   r14,r14
  40e69f:	jne    40e688 <__flatcc_gen_sort@@Base+0x2a88>
  40e6a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e6a8:	mov    rcx,QWORD PTR [rsp]
  40e6ac:	lea    rdx,[rip+0x284e0]        # 436b93 <_IO_stdin_used@@Base+0x9b93>
  40e6b3:	mov    esi,0x1
  40e6b8:	xor    eax,eax
  40e6ba:	call   4053e0 <__fprintf_chk@plt>
  40e6bf:	mov    r14,QWORD PTR [r15+0x28]
  40e6c3:	test   r14,r14
  40e6c6:	je     40eb20 <__flatcc_gen_sort@@Base+0x2f20>
  40e6cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e6d3:	xor    r13d,r13d
  40e6d6:	jmp    40e737 <__flatcc_gen_sort@@Base+0x2b37>
  40e6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e6e0:	cmp    r12d,0x4
  40e6e4:	jle    40e759 <__flatcc_gen_sort@@Base+0x2b59>
  40e6e6:	lea    rcx,[rip+0x283df]        # 436acc <_IO_stdin_used@@Base+0x9acc>
  40e6ed:	lea    rdx,[rip+0x283db]        # 436acf <_IO_stdin_used@@Base+0x9acf>
  40e6f4:	mov    esi,0x1
  40e6f9:	xor    eax,eax
  40e6fb:	call   4053e0 <__fprintf_chk@plt>
  40e700:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e707:	mov    rcx,QWORD PTR [r14+0x88]
  40e70e:	lea    rdx,[rip+0x284f5]        # 436c0a <_IO_stdin_used@@Base+0x9c0a>
  40e715:	mov    esi,0x1
  40e71a:	xor    eax,eax
  40e71c:	call   4053e0 <__fprintf_chk@plt>
  40e721:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e728:	inc    r13d
  40e72b:	mov    r14,QWORD PTR [r14]
  40e72e:	test   r14,r14
  40e731:	je     40eb30 <__flatcc_gen_sort@@Base+0x2f30>
  40e737:	test   BYTE PTR [r14+0x70],0x4
  40e73c:	jne    40e72b <__flatcc_gen_sort@@Base+0x2b2b>
  40e73e:	test   r12d,r12d
  40e741:	je     40e707 <__flatcc_gen_sort@@Base+0x2b07>
  40e743:	test   r13d,r13d
  40e746:	je     40e6e0 <__flatcc_gen_sort@@Base+0x2ae0>
  40e748:	test   r13b,0x3
  40e74c:	jne    40e759 <__flatcc_gen_sort@@Base+0x2b59>
  40e74e:	mov    eax,r12d
  40e751:	sub    eax,r13d
  40e754:	cmp    eax,0x2
  40e757:	jg     40e6e6 <__flatcc_gen_sort@@Base+0x2ae6>
  40e759:	lea    rdx,[rip+0x28375]        # 436ad5 <_IO_stdin_used@@Base+0x9ad5>
  40e760:	mov    esi,0x1
  40e765:	xor    eax,eax
  40e767:	call   4053e0 <__fprintf_chk@plt>
  40e76c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e773:	jmp    40e707 <__flatcc_gen_sort@@Base+0x2b07>
  40e775:	nop    DWORD PTR [rax]
  40e778:	mov    rsi,QWORD PTR [r14+0x18]
  40e77c:	mov    rdx,rbp
  40e77f:	mov    rdi,QWORD PTR [rsi+0x18]
  40e783:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40e788:	mov    rax,QWORD PTR [r14+0x18]
  40e78c:	movzx  eax,WORD PTR [rax+0x10]
  40e790:	cmp    ax,0x1
  40e794:	je     40f080 <__flatcc_gen_sort@@Base+0x3480>
  40e79a:	test   ax,ax
  40e79d:	je     40f050 <__flatcc_gen_sort@@Base+0x3450>
  40e7a3:	cmp    ax,0x3
  40e7a7:	jne    40ea60 <__flatcc_gen_sort@@Base+0x2e60>
  40e7ad:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e7b4:	mov    r8,QWORD PTR [r14+0x88]
  40e7bb:	mov    rcx,rbp
  40e7be:	lea    rdx,[rip+0x283f3]        # 436bb8 <_IO_stdin_used@@Base+0x9bb8>
  40e7c5:	mov    esi,0x1
  40e7ca:	xor    eax,eax
  40e7cc:	call   4053e0 <__fprintf_chk@plt>
  40e7d1:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40e7d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e7e0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e7e7:	mov    r8,QWORD PTR [r14+0x88]
  40e7ee:	mov    rcx,rbx
  40e7f1:	lea    rdx,[rip+0x2842d]        # 436c25 <_IO_stdin_used@@Base+0x9c25>
  40e7f8:	mov    esi,0x1
  40e7fd:	xor    eax,eax
  40e7ff:	call   4053e0 <__fprintf_chk@plt>
  40e804:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40e809:	nop    DWORD PTR [rax+0x0]
  40e810:	mov    eax,DWORD PTR [r14+0x18]
  40e814:	cmp    eax,0x5
  40e817:	je     40f040 <__flatcc_gen_sort@@Base+0x3440>
  40e81d:	cmp    eax,0xb
  40e820:	ja     40f1cf <__flatcc_gen_sort@@Base+0x35cf>
  40e826:	lea    rdx,[rip+0x31d2b]        # 440558 <_IO_stdin_used@@Base+0x13558>
  40e82d:	movsxd rax,DWORD PTR [rdx+rax*4]
  40e831:	add    rax,rdx
  40e834:	notrack jmp rax
  40e837:	nop    WORD PTR [rax+rax*1+0x0]
  40e840:	cmp    DWORD PTR [r14+0x18],0xb
  40e845:	ja     40f17f <__flatcc_gen_sort@@Base+0x357f>
  40e84b:	mov    eax,DWORD PTR [r14+0x18]
  40e84f:	lea    rsi,[rip+0x31d32]        # 440588 <_IO_stdin_used@@Base+0x13588>
  40e856:	movsxd rax,DWORD PTR [rsi+rax*4]
  40e85a:	add    rax,rsi
  40e85d:	notrack jmp rax
  40e860:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e867:	mov    r8,QWORD PTR [r14+0x88]
  40e86e:	mov    rcx,rbx
  40e871:	lea    rdx,[rip+0x283c2]        # 436c3a <_IO_stdin_used@@Base+0x9c3a>
  40e878:	mov    esi,0x1
  40e87d:	xor    eax,eax
  40e87f:	call   4053e0 <__fprintf_chk@plt>
  40e884:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40e889:	nop    DWORD PTR [rax+0x0]
  40e890:	lea    rcx,[rip+0x36887]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e897:	lea    r8,[rip+0x27229]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40e89e:	xchg   ax,ax
  40e8a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e8a7:	mov    r9,QWORD PTR [r14+0x88]
  40e8ae:	lea    rdx,[rip+0x28350]        # 436c05 <_IO_stdin_used@@Base+0x9c05>
  40e8b5:	mov    esi,0x1
  40e8ba:	xor    eax,eax
  40e8bc:	call   4053e0 <__fprintf_chk@plt>
  40e8c1:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40e8c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8d0:	lea    rcx,[rip+0x36847]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e8d7:	lea    r8,[rip+0x271dc]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  40e8de:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e8e0:	lea    rcx,[rip+0x36837]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e8e7:	lea    r8,[rip+0x271a0]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  40e8ee:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e8f0:	lea    rcx,[rip+0x36827]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e8f7:	lea    r8,[rip+0x271a0]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  40e8fe:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e900:	lea    rcx,[rip+0x36817]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e907:	lea    r8,[rip+0x2716a]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  40e90e:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e910:	lea    rcx,[rip+0x36807]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e917:	lea    r8,[rip+0x27169]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40e91e:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e920:	lea    rcx,[rip+0x367f7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e927:	lea    r8,[rip+0x2718b]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  40e92e:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e933:	nop    DWORD PTR [rax+rax*1+0x0]
  40e938:	lea    rcx,[rip+0x367df]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e93f:	lea    r8,[rip+0x27147]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  40e946:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e94b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e950:	lea    rcx,[rip+0x367c7]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e957:	lea    r8,[rip+0x2713f]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  40e95e:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e963:	nop    DWORD PTR [rax+rax*1+0x0]
  40e968:	lea    rcx,[rip+0x367af]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  40e96f:	lea    r8,[rip+0x27101]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  40e976:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40e97b:	nop    DWORD PTR [rax+rax*1+0x0]
  40e980:	lea    r8,[rip+0x27100]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  40e987:	nop    WORD PTR [rax+rax*1+0x0]
  40e990:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e997:	mov    r9,QWORD PTR [r14+0x88]
  40e99e:	mov    rcx,rbx
  40e9a1:	lea    rdx,[rip+0x28268]        # 436c10 <_IO_stdin_used@@Base+0x9c10>
  40e9a8:	mov    esi,0x1
  40e9ad:	xor    eax,eax
  40e9af:	call   4053e0 <__fprintf_chk@plt>
  40e9b4:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40e9b9:	nop    DWORD PTR [rax+0x0]
  40e9c0:	lea    r8,[rip+0x27100]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  40e9c7:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40e9c9:	nop    DWORD PTR [rax+0x0]
  40e9d0:	lea    r8,[rip+0x270eb]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  40e9d7:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40e9d9:	nop    DWORD PTR [rax+0x0]
  40e9e0:	lea    r8,[rip+0x270b0]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  40e9e7:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40e9e9:	nop    DWORD PTR [rax+0x0]
  40e9f0:	lea    r8,[rip+0x270b0]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  40e9f7:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40e9f9:	nop    DWORD PTR [rax+0x0]
  40ea00:	lea    r8,[rip+0x2707a]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  40ea07:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40ea09:	nop    DWORD PTR [rax+0x0]
  40ea10:	lea    r8,[rip+0x2709d]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  40ea17:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40ea1c:	nop    DWORD PTR [rax+0x0]
  40ea20:	lea    r8,[rip+0x2709a]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  40ea27:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40ea2c:	nop    DWORD PTR [rax+0x0]
  40ea30:	lea    r8,[rip+0x2705f]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  40ea37:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40ea3c:	nop    DWORD PTR [rax+0x0]
  40ea40:	lea    r8,[rip+0x2705f]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  40ea47:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40ea4c:	nop    DWORD PTR [rax+0x0]
  40ea50:	lea    r8,[rip+0x27029]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  40ea57:	jmp    40e990 <__flatcc_gen_sort@@Base+0x2d90>
  40ea5c:	nop    DWORD PTR [rax+0x0]
  40ea60:	cmp    ax,0x4
  40ea64:	jne    40f21f <__flatcc_gen_sort@@Base+0x361f>
  40ea6a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea71:	mov    r8,QWORD PTR [r14+0x88]
  40ea78:	mov    rcx,rbp
  40ea7b:	lea    rdx,[rip+0x28155]        # 436bd7 <_IO_stdin_used@@Base+0x9bd7>
  40ea82:	mov    esi,0x1
  40ea87:	xor    eax,eax
  40ea89:	call   4053e0 <__fprintf_chk@plt>
  40ea8e:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40ea93:	nop    DWORD PTR [rax+rax*1+0x0]
  40ea98:	cmp    ax,0x1
  40ea9c:	ja     40f26f <__flatcc_gen_sort@@Base+0x366f>
  40eaa2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eaa9:	mov    r8,QWORD PTR [r14+0x88]
  40eab0:	mov    rcx,rbp
  40eab3:	lea    rdx,[rip+0x28158]        # 436c12 <_IO_stdin_used@@Base+0x9c12>
  40eaba:	mov    esi,0x1
  40eabf:	xor    eax,eax
  40eac1:	call   4053e0 <__fprintf_chk@plt>
  40eac6:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40eacb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ead0:	test   al,0x3
  40ead2:	jne    40eade <__flatcc_gen_sort@@Base+0x2ede>
  40ead4:	mov    ecx,r12d
  40ead7:	sub    ecx,eax
  40ead9:	cmp    ecx,0x2
  40eadc:	jg     40eb00 <__flatcc_gen_sort@@Base+0x2f00>
  40eade:	lea    rdx,[rip+0x27ff0]        # 436ad5 <_IO_stdin_used@@Base+0x9ad5>
  40eae5:	mov    esi,0x1
  40eaea:	xor    eax,eax
  40eaec:	call   4053e0 <__fprintf_chk@plt>
  40eaf1:	jmp    40e5f0 <__flatcc_gen_sort@@Base+0x29f0>
  40eaf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb00:	lea    rcx,[rip+0x27fc5]        # 436acc <_IO_stdin_used@@Base+0x9acc>
  40eb07:	lea    rdx,[rip+0x27fc1]        # 436acf <_IO_stdin_used@@Base+0x9acf>
  40eb0e:	mov    esi,0x1
  40eb13:	xor    eax,eax
  40eb15:	call   4053e0 <__fprintf_chk@plt>
  40eb1a:	jmp    40e5f0 <__flatcc_gen_sort@@Base+0x29f0>
  40eb1f:	nop
  40eb20:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb27:	nop    WORD PTR [rax+rax*1+0x0]
  40eb30:	lea    rdx,[rip+0x365e6]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40eb37:	mov    esi,0x1
  40eb3c:	xor    eax,eax
  40eb3e:	call   4053e0 <__fprintf_chk@plt>
  40eb43:	sub    rsp,0x8
  40eb47:	mov    rcx,QWORD PTR [rsp+0x8]
  40eb4c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eb53:	push   rcx
  40eb54:	mov    r9,rbx
  40eb57:	mov    r8,rcx
  40eb5a:	lea    rdx,[rip+0x28a6f]        # 4375d0 <_IO_stdin_used@@Base+0xa5d0>
  40eb61:	mov    esi,0x1
  40eb66:	xor    eax,eax
  40eb68:	call   4053e0 <__fprintf_chk@plt>
  40eb6d:	pop    r9
  40eb6f:	pop    r10
  40eb71:	mov    r15,QWORD PTR [r15]
  40eb74:	test   r15,r15
  40eb77:	jne    40e510 <__flatcc_gen_sort@@Base+0x2910>
  40eb7d:	mov    r8d,DWORD PTR [rsp+0xc]
  40eb82:	test   r8d,r8d
  40eb85:	jne    40f110 <__flatcc_gen_sort@@Base+0x3510>
  40eb8b:	mov    rax,QWORD PTR [rbx+0xd8]
  40eb92:	mov    r12,QWORD PTR [rax+0x40]
  40eb96:	test   r12,r12
  40eb99:	je     40efdf <__flatcc_gen_sort@@Base+0x33df>
  40eb9f:	xor    eax,eax
  40eba1:	lea    r15,[rsp+0x10]
  40eba6:	lea    r14,[rip+0x28b13]        # 4376c0 <_IO_stdin_used@@Base+0xa6c0>
  40ebad:	jmp    40ebbd <__flatcc_gen_sort@@Base+0x2fbd>
  40ebaf:	nop
  40ebb0:	mov    r12,QWORD PTR [r12]
  40ebb4:	test   r12,r12
  40ebb7:	je     40ed36 <__flatcc_gen_sort@@Base+0x3136>
  40ebbd:	cmp    WORD PTR [r12+0x10],0x4
  40ebc4:	jne    40ebb0 <__flatcc_gen_sort@@Base+0x2fb0>
  40ebc6:	xor    eax,eax
  40ebc8:	mov    ecx,0x1d
  40ebcd:	mov    rdi,r15
  40ebd0:	rep stos QWORD PTR es:[rdi],rax
  40ebd3:	mov    ecx,0x1d
  40ebd8:	mov    rdi,rbp
  40ebdb:	rep stos QWORD PTR es:[rdi],rax
  40ebde:	mov    rdx,r15
  40ebe1:	mov    rsi,r12
  40ebe4:	mov    rdi,QWORD PTR [r12+0x18]
  40ebe9:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40ebee:	mov    r13,QWORD PTR [r12+0x28]
  40ebf3:	test   r13,r13
  40ebf6:	jne    40ec55 <__flatcc_gen_sort@@Base+0x3055>
  40ebf8:	jmp    40ed01 <__flatcc_gen_sort@@Base+0x3101>
  40ebfd:	nop    DWORD PTR [rax]
  40ec00:	mov    rsi,QWORD PTR [r13+0x18]
  40ec04:	mov    rdx,rbp
  40ec07:	mov    rdi,QWORD PTR [rsi+0x18]
  40ec0b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40ec10:	mov    rdx,QWORD PTR [r13+0x8]
  40ec14:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ec1b:	mov    rax,QWORD PTR [rdx]
  40ec1e:	mov    r9,QWORD PTR [rdx+0x8]
  40ec22:	push   rax
  40ec23:	mov    r8,r15
  40ec26:	mov    rcx,r15
  40ec29:	push   r9
  40ec2b:	lea    rdx,[rip+0x28a06]        # 437638 <_IO_stdin_used@@Base+0xa638>
  40ec32:	mov    esi,0x1
  40ec37:	push   r15
  40ec39:	push   r15
  40ec3b:	push   rbp
  40ec3c:	push   rax
  40ec3d:	xor    eax,eax
  40ec3f:	call   4053e0 <__fprintf_chk@plt>
  40ec44:	add    rsp,0x30
  40ec48:	mov    r13,QWORD PTR [r13+0x0]
  40ec4c:	test   r13,r13
  40ec4f:	je     40ed01 <__flatcc_gen_sort@@Base+0x3101>
  40ec55:	movzx  eax,WORD PTR [r13+0x28]
  40ec5a:	cmp    ax,0xa
  40ec5e:	je     40ecc0 <__flatcc_gen_sort@@Base+0x30c0>
  40ec60:	cmp    ax,0xe
  40ec64:	je     40ec00 <__flatcc_gen_sort@@Base+0x3000>
  40ec66:	test   ax,ax
  40ec69:	je     40f010 <__flatcc_gen_sort@@Base+0x3410>
  40ec6f:	mov    rax,QWORD PTR [rip+0x42372]        # 450fe8 <stderr@GLIBC_2.2.5>
  40ec76:	lea    rcx,[rip+0x281bb]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40ec7d:	mov    rdi,QWORD PTR [rax]
  40ec80:	lea    rdx,[rip+0x26dcc]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40ec87:	mov    esi,0x1
  40ec8c:	lea    r9,[rip+0x28b35]        # 4377c8 <_IO_stdin_used@@Base+0xa7c8>
  40ec93:	mov    r8d,0x648
  40ec99:	xor    eax,eax
  40ec9b:	call   4053e0 <__fprintf_chk@plt>
  40eca0:	lea    rcx,[rip+0x31979]        # 440620 <_IO_stdin_used@@Base+0x13620>
  40eca7:	mov    edx,0x648
  40ecac:	lea    rsi,[rip+0x28185]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40ecb3:	lea    rdi,[rip+0x27e5f]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40ecba:	call   4052e0 <__assert_fail@plt>
  40ecbf:	nop
  40ecc0:	mov    rdx,QWORD PTR [r13+0x8]
  40ecc4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eccb:	mov    rax,QWORD PTR [rdx]
  40ecce:	mov    r9,QWORD PTR [rdx+0x8]
  40ecd2:	push   rax
  40ecd3:	mov    r8,r15
  40ecd6:	mov    rcx,r15
  40ecd9:	push   r9
  40ecdb:	mov    rdx,r14
  40ecde:	mov    esi,0x1
  40ece3:	push   r15
  40ece5:	push   r15
  40ece7:	push   rbx
  40ece8:	push   rax
  40ece9:	xor    eax,eax
  40eceb:	call   4053e0 <__fprintf_chk@plt>
  40ecf0:	mov    r13,QWORD PTR [r13+0x0]
  40ecf4:	add    rsp,0x30
  40ecf8:	test   r13,r13
  40ecfb:	jne    40ec55 <__flatcc_gen_sort@@Base+0x3055>
  40ed01:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed08:	mov    r9,r15
  40ed0b:	mov    r8,rbx
  40ed0e:	mov    rcx,rbx
  40ed11:	lea    rdx,[rip+0x28900]        # 437618 <_IO_stdin_used@@Base+0xa618>
  40ed18:	mov    esi,0x1
  40ed1d:	xor    eax,eax
  40ed1f:	call   4053e0 <__fprintf_chk@plt>
  40ed24:	mov    r12,QWORD PTR [r12]
  40ed28:	mov    eax,0x1
  40ed2d:	test   r12,r12
  40ed30:	jne    40ebbd <__flatcc_gen_sort@@Base+0x2fbd>
  40ed36:	test   eax,eax
  40ed38:	je     40ed54 <__flatcc_gen_sort@@Base+0x3154>
  40ed3a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ed41:	lea    rdx,[rip+0x363d5]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40ed48:	mov    esi,0x1
  40ed4d:	xor    eax,eax
  40ed4f:	call   4053e0 <__fprintf_chk@plt>
  40ed54:	mov    ecx,DWORD PTR [rsp+0xc]
  40ed58:	test   ecx,ecx
  40ed5a:	je     40efdf <__flatcc_gen_sort@@Base+0x33df>
  40ed60:	mov    rax,QWORD PTR [rbx+0xd8]
  40ed67:	mov    r14,QWORD PTR [rax+0x40]
  40ed6b:	test   r14,r14
  40ed6e:	je     40efdf <__flatcc_gen_sort@@Base+0x33df>
  40ed74:	nop    DWORD PTR [rax+0x0]
  40ed78:	cmp    WORD PTR [r14+0x10],0x0
  40ed7e:	jne    40efd3 <__flatcc_gen_sort@@Base+0x33d3>
  40ed84:	mov    rsi,r14
  40ed87:	mov    rdi,rbx
  40ed8a:	call   40cc90 <__flatcc_gen_sort@@Base+0x1090>
  40ed8f:	movzx  r12d,WORD PTR [r14+0xa4]
  40ed97:	mov    ecx,0x1d
  40ed9c:	and    r12w,0x8
  40eda1:	sete   r15b
  40eda5:	mov    rdi,rbp
  40eda8:	xor    eax,eax
  40edaa:	rep stos QWORD PTR es:[rdi],rax
  40edad:	mov    rdx,rbp
  40edb0:	mov    rsi,r14
  40edb3:	mov    rdi,QWORD PTR [r14+0x18]
  40edb7:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40edbc:	sub    rsp,0x8
  40edc0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edc7:	push   rbp
  40edc8:	mov    r9,rbx
  40edcb:	mov    r8,rbp
  40edce:	mov    rcx,rbp
  40edd1:	lea    rdx,[rip+0x28a20]        # 4377f8 <_IO_stdin_used@@Base+0xa7f8>
  40edd8:	mov    esi,0x1
  40eddd:	xor    eax,eax
  40eddf:	call   4053e0 <__fprintf_chk@plt>
  40ede4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40edeb:	lea    rdx,[rip+0x27e61]        # 436c53 <_IO_stdin_used@@Base+0x9c53>
  40edf2:	mov    rcx,rbp
  40edf5:	mov    esi,0x1
  40edfa:	xor    eax,eax
  40edfc:	call   4053e0 <__fprintf_chk@plt>
  40ee01:	mov    r13,QWORD PTR [r14+0x30]
  40ee05:	pop    rax
  40ee06:	pop    rdx
  40ee07:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee0e:	test   r13,r13
  40ee11:	je     40ef60 <__flatcc_gen_sort@@Base+0x3360>
  40ee17:	mov    DWORD PTR [rsp],0x0
  40ee1e:	jmp    40ee52 <__flatcc_gen_sort@@Base+0x3252>
  40ee20:	sub    rsp,0x8
  40ee24:	push   rax
  40ee25:	mov    rcx,rbp
  40ee28:	lea    rdx,[rip+0x28a39]        # 437868 <_IO_stdin_used@@Base+0xa868>
  40ee2f:	mov    esi,0x1
  40ee34:	xor    eax,eax
  40ee36:	call   4053e0 <__fprintf_chk@plt>
  40ee3b:	pop    r9
  40ee3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ee44:	pop    r10
  40ee46:	mov    r13,QWORD PTR [r13+0x98]
  40ee4d:	test   r13,r13
  40ee50:	je     40eec8 <__flatcc_gen_sort@@Base+0x32c8>
  40ee52:	test   BYTE PTR [r13+0x70],0x4
  40ee57:	jne    40ee46 <__flatcc_gen_sort@@Base+0x3246>
  40ee59:	mov    rax,QWORD PTR [r13+0x8]
  40ee5d:	cmp    WORD PTR [r13+0x28],0xe
  40ee63:	mov    r9,QWORD PTR [rax]
  40ee66:	mov    r8,QWORD PTR [rax+0x8]
  40ee6a:	mov    rax,QWORD PTR [r13+0x88]
  40ee71:	jne    40ee20 <__flatcc_gen_sort@@Base+0x3220>
  40ee73:	mov    rdx,QWORD PTR [r13+0x18]
  40ee77:	cmp    WORD PTR [rdx+0x10],0x4
  40ee7c:	jne    40ee20 <__flatcc_gen_sort@@Base+0x3220>
  40ee7e:	mov    ecx,DWORD PTR [rsp+0xc]
  40ee82:	mov    DWORD PTR [rsp],ecx
  40ee85:	test   r12w,r12w
  40ee89:	jne    40ee20 <__flatcc_gen_sort@@Base+0x3220>
  40ee8b:	sub    rsp,0x8
  40ee8f:	push   rax
  40ee90:	mov    rcx,rbp
  40ee93:	lea    rdx,[rip+0x289a6]        # 437840 <_IO_stdin_used@@Base+0xa840>
  40ee9a:	mov    esi,0x1
  40ee9f:	xor    eax,eax
  40eea1:	call   4053e0 <__fprintf_chk@plt>
  40eea6:	pop    r11
  40eea8:	pop    rax
  40eea9:	mov    eax,DWORD PTR [rsp+0xc]
  40eead:	mov    r13,QWORD PTR [r13+0x98]
  40eeb4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eebb:	mov    DWORD PTR [rsp],eax
  40eebe:	test   r13,r13
  40eec1:	jne    40ee52 <__flatcc_gen_sort@@Base+0x3252>
  40eec3:	nop    DWORD PTR [rax+rax*1+0x0]
  40eec8:	test   BYTE PTR [rsp],0x1
  40eecc:	je     40ef60 <__flatcc_gen_sort@@Base+0x3360>
  40eed2:	test   r15b,r15b
  40eed5:	je     40ef60 <__flatcc_gen_sort@@Base+0x3360>
  40eedb:	mov    r12,QWORD PTR [r14+0x30]
  40eedf:	test   r12,r12
  40eee2:	jne    40eefd <__flatcc_gen_sort@@Base+0x32fd>
  40eee4:	jmp    40ef60 <__flatcc_gen_sort@@Base+0x3360>
  40eee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eef0:	mov    r12,QWORD PTR [r12+0x98]
  40eef8:	test   r12,r12
  40eefb:	je     40ef60 <__flatcc_gen_sort@@Base+0x3360>
  40eefd:	test   BYTE PTR [r12+0x70],0x4
  40ef03:	jne    40eef0 <__flatcc_gen_sort@@Base+0x32f0>
  40ef05:	cmp    WORD PTR [r12+0x28],0xe
  40ef0c:	jne    40eef0 <__flatcc_gen_sort@@Base+0x32f0>
  40ef0e:	mov    rax,QWORD PTR [r12+0x18]
  40ef13:	cmp    WORD PTR [rax+0x10],0x4
  40ef18:	jne    40eef0 <__flatcc_gen_sort@@Base+0x32f0>
  40ef1a:	mov    rax,QWORD PTR [r12+0x8]
  40ef1f:	sub    rsp,0x8
  40ef23:	mov    r8,QWORD PTR [rax+0x8]
  40ef27:	push   QWORD PTR [r12+0x88]
  40ef2f:	mov    r9,QWORD PTR [rax]
  40ef32:	mov    esi,0x1
  40ef37:	mov    rcx,rbp
  40ef3a:	lea    rdx,[rip+0x2894f]        # 437890 <_IO_stdin_used@@Base+0xa890>
  40ef41:	xor    eax,eax
  40ef43:	call   4053e0 <__fprintf_chk@plt>
  40ef48:	mov    r12,QWORD PTR [r12+0x98]
  40ef50:	pop    rsi
  40ef51:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef58:	pop    r8
  40ef5a:	test   r12,r12
  40ef5d:	jne    40eefd <__flatcc_gen_sort@@Base+0x32fd>
  40ef5f:	nop
  40ef60:	mov    rcx,rbp
  40ef63:	lea    rdx,[rip+0x28956]        # 4378c0 <_IO_stdin_used@@Base+0xa8c0>
  40ef6a:	mov    esi,0x1
  40ef6f:	xor    eax,eax
  40ef71:	call   4053e0 <__fprintf_chk@plt>
  40ef76:	xor    eax,eax
  40ef78:	mov    ecx,0x1d
  40ef7d:	mov    rdi,rbp
  40ef80:	rep stos QWORD PTR es:[rdi],rax
  40ef83:	mov    rdx,rbp
  40ef86:	mov    rsi,r14
  40ef89:	mov    rdi,QWORD PTR [r14+0x18]
  40ef8d:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  40ef92:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ef99:	push   rbp
  40ef9a:	mov    rcx,rbx
  40ef9d:	mov    r9,rbp
  40efa0:	push   rbp
  40efa1:	mov    r8,rbx
  40efa4:	lea    rdx,[rip+0x2894d]        # 4378f8 <_IO_stdin_used@@Base+0xa8f8>
  40efab:	mov    esi,0x1
  40efb0:	xor    eax,eax
  40efb2:	call   4053e0 <__fprintf_chk@plt>
  40efb7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40efbe:	lea    rdx,[rip+0x36158]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40efc5:	mov    esi,0x1
  40efca:	xor    eax,eax
  40efcc:	call   4053e0 <__fprintf_chk@plt>
  40efd1:	pop    rdx
  40efd2:	pop    rcx
  40efd3:	mov    r14,QWORD PTR [r14]
  40efd6:	test   r14,r14
  40efd9:	jne    40ed78 <__flatcc_gen_sort@@Base+0x3178>
  40efdf:	xor    eax,eax
  40efe1:	mov    rbx,QWORD PTR [rsp+0x1e8]
  40efe9:	xor    rbx,QWORD PTR fs:0x28
  40eff2:	jne    40f2bf <__flatcc_gen_sort@@Base+0x36bf>
  40eff8:	add    rsp,0x1f8
  40efff:	pop    rbx
  40f000:	pop    rbp
  40f001:	pop    r12
  40f003:	pop    r13
  40f005:	pop    r14
  40f007:	pop    r15
  40f009:	ret    
  40f00a:	nop    WORD PTR [rax+rax*1+0x0]
  40f010:	sub    rsp,0x8
  40f014:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f01b:	push   r15
  40f01d:	mov    esi,0x1
  40f022:	mov    r9,r15
  40f025:	mov    r8,r15
  40f028:	mov    rcx,r15
  40f02b:	lea    rdx,[rip+0x2871e]        # 437750 <_IO_stdin_used@@Base+0xa750>
  40f032:	xor    eax,eax
  40f034:	call   4053e0 <__fprintf_chk@plt>
  40f039:	pop    rsi
  40f03a:	pop    rdi
  40f03b:	jmp    40ec48 <__flatcc_gen_sort@@Base+0x3048>
  40f040:	mov    rcx,rbx
  40f043:	lea    r8,[rip+0x26a63]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  40f04a:	jmp    40e8a0 <__flatcc_gen_sort@@Base+0x2ca0>
  40f04f:	nop
  40f050:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f057:	mov    r8,QWORD PTR [r14+0x88]
  40f05e:	mov    rcx,rbp
  40f061:	lea    rdx,[rip+0x27b60]        # 436bc8 <_IO_stdin_used@@Base+0x9bc8>
  40f068:	mov    esi,0x1
  40f06d:	xor    eax,eax
  40f06f:	call   4053e0 <__fprintf_chk@plt>
  40f074:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40f079:	nop    DWORD PTR [rax+0x0]
  40f080:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f087:	mov    r8,QWORD PTR [r14+0x88]
  40f08e:	mov    rcx,rbp
  40f091:	lea    rdx,[rip+0x27b14]        # 436bac <_IO_stdin_used@@Base+0x9bac>
  40f098:	mov    esi,0x1
  40f09d:	xor    eax,eax
  40f09f:	call   4053e0 <__fprintf_chk@plt>
  40f0a4:	jmp    40e680 <__flatcc_gen_sort@@Base+0x2a80>
  40f0a9:	nop    DWORD PTR [rax+0x0]
  40f0b0:	lea    rdx,[rip+0x27abb]        # 436b72 <_IO_stdin_used@@Base+0x9b72>
  40f0b7:	mov    esi,0x1
  40f0bc:	xor    eax,eax
  40f0be:	call   4053e0 <__fprintf_chk@plt>
  40f0c3:	jmp    40e48c <__flatcc_gen_sort@@Base+0x288c>
  40f0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f0d0:	lea    rcx,[rip+0x36046]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40f0d7:	lea    rdx,[rip+0x279f1]        # 436acf <_IO_stdin_used@@Base+0x9acf>
  40f0de:	mov    esi,0x1
  40f0e3:	xor    eax,eax
  40f0e5:	call   4053e0 <__fprintf_chk@plt>
  40f0ea:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f0f1:	jmp    40e410 <__flatcc_gen_sort@@Base+0x2810>
  40f0f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f100:	mov    eax,DWORD PTR [rsp+0xc]
  40f104:	test   eax,eax
  40f106:	je     40efdf <__flatcc_gen_sort@@Base+0x33df>
  40f10c:	nop    DWORD PTR [rax+0x0]
  40f110:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f117:	lea    rdx,[rip+0x35fff]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40f11e:	mov    esi,0x1
  40f123:	xor    eax,eax
  40f125:	call   4053e0 <__fprintf_chk@plt>
  40f12a:	jmp    40eb8b <__flatcc_gen_sort@@Base+0x2f8b>
  40f12f:	mov    rax,QWORD PTR [rip+0x41eb2]        # 450fe8 <stderr@GLIBC_2.2.5>
  40f136:	lea    rcx,[rip+0x27cfb]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40f13d:	mov    rdi,QWORD PTR [rax]
  40f140:	lea    rdx,[rip+0x2690c]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40f147:	mov    esi,0x1
  40f14c:	lea    r9,[rip+0x27f55]        # 4370a8 <_IO_stdin_used@@Base+0xa0a8>
  40f153:	mov    r8d,0x4b9
  40f159:	xor    eax,eax
  40f15b:	call   4053e0 <__fprintf_chk@plt>
  40f160:	lea    rcx,[rip+0x314c9]        # 440630 <_IO_stdin_used@@Base+0x13630>
  40f167:	mov    edx,0x4b9
  40f16c:	lea    rsi,[rip+0x27cc5]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40f173:	lea    rdi,[rip+0x2799f]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40f17a:	call   4052e0 <__assert_fail@plt>
  40f17f:	mov    rax,QWORD PTR [rip+0x41e62]        # 450fe8 <stderr@GLIBC_2.2.5>
  40f186:	lea    rcx,[rip+0x1f11b]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40f18d:	mov    rdi,QWORD PTR [rax]
  40f190:	lea    rdx,[rip+0x268bc]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40f197:	mov    esi,0x1
  40f19c:	lea    r9,[rip+0x1f0cd]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40f1a3:	mov    r8d,0x60
  40f1a9:	xor    eax,eax
  40f1ab:	call   4053e0 <__fprintf_chk@plt>
  40f1b0:	lea    rcx,[rip+0x31499]        # 440650 <_IO_stdin_used@@Base+0x13650>
  40f1b7:	mov    edx,0x60
  40f1bc:	lea    rsi,[rip+0x1f0e5]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40f1c3:	lea    rdi,[rip+0x2794f]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40f1ca:	call   4052e0 <__assert_fail@plt>
  40f1cf:	mov    rax,QWORD PTR [rip+0x41e12]        # 450fe8 <stderr@GLIBC_2.2.5>
  40f1d6:	lea    rcx,[rip+0x1f0cb]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40f1dd:	mov    rdi,QWORD PTR [rax]
  40f1e0:	lea    rdx,[rip+0x2686c]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40f1e7:	mov    esi,0x1
  40f1ec:	lea    r9,[rip+0x1f07d]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  40f1f3:	mov    r8d,0x8d
  40f1f9:	xor    eax,eax
  40f1fb:	call   4053e0 <__fprintf_chk@plt>
  40f200:	lea    rcx,[rip+0x31499]        # 4406a0 <_IO_stdin_used@@Base+0x136a0>
  40f207:	mov    edx,0x8d
  40f20c:	lea    rsi,[rip+0x1f095]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  40f213:	lea    rdi,[rip+0x278ff]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40f21a:	call   4052e0 <__assert_fail@plt>
  40f21f:	mov    rax,QWORD PTR [rip+0x41dc2]        # 450fe8 <stderr@GLIBC_2.2.5>
  40f226:	lea    rcx,[rip+0x27c0b]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40f22d:	mov    rdi,QWORD PTR [rax]
  40f230:	lea    rdx,[rip+0x2681c]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40f237:	mov    esi,0x1
  40f23c:	lea    r9,[rip+0x2832d]        # 437570 <_IO_stdin_used@@Base+0xa570>
  40f243:	mov    r8d,0x495
  40f249:	xor    eax,eax
  40f24b:	call   4053e0 <__fprintf_chk@plt>
  40f250:	lea    rcx,[rip+0x313d9]        # 440630 <_IO_stdin_used@@Base+0x13630>
  40f257:	mov    edx,0x495
  40f25c:	lea    rsi,[rip+0x27bd5]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40f263:	lea    rdi,[rip+0x278af]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40f26a:	call   4052e0 <__assert_fail@plt>
  40f26f:	mov    rax,QWORD PTR [rip+0x41d72]        # 450fe8 <stderr@GLIBC_2.2.5>
  40f276:	lea    rcx,[rip+0x27bbb]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40f27d:	mov    rdi,QWORD PTR [rax]
  40f280:	lea    rdx,[rip+0x267cc]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  40f287:	mov    esi,0x1
  40f28c:	lea    r9,[rip+0x2830d]        # 4375a0 <_IO_stdin_used@@Base+0xa5a0>
  40f293:	mov    r8d,0x4a5
  40f299:	xor    eax,eax
  40f29b:	call   4053e0 <__fprintf_chk@plt>
  40f2a0:	lea    rcx,[rip+0x31389]        # 440630 <_IO_stdin_used@@Base+0x13630>
  40f2a7:	mov    edx,0x4a5
  40f2ac:	lea    rsi,[rip+0x27b85]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  40f2b3:	lea    rdi,[rip+0x2785f]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  40f2ba:	call   4052e0 <__assert_fail@plt>
  40f2bf:	call   4052c0 <__stack_chk_fail@plt>
  40f2c4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40f2cf:	nop

000000000040f2d0 <__flatcc_fb_gen_common_c_builder_header@@Base>:
  40f2d0:	endbr64 
  40f2d4:	push   rbp
  40f2d5:	lea    rbp,[rdi+0x66]
  40f2d9:	mov    rcx,rbp
  40f2dc:	push   rbx
  40f2dd:	mov    rbx,rdi
  40f2e0:	lea    rdx,[rip+0x27982]        # 436c69 <_IO_stdin_used@@Base+0x9c69>
  40f2e7:	sub    rsp,0x8
  40f2eb:	mov    rdi,QWORD PTR [rdi+0xd0]
  40f2f2:	mov    esi,0x1
  40f2f7:	xor    eax,eax
  40f2f9:	call   4053e0 <__fprintf_chk@plt>
  40f2fe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f305:	mov    rcx,rbp
  40f308:	lea    rdx,[rip+0x27977]        # 436c86 <_IO_stdin_used@@Base+0x9c86>
  40f30f:	mov    esi,0x1
  40f314:	xor    eax,eax
  40f316:	call   4053e0 <__fprintf_chk@plt>
  40f31b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f322:	lea    rdx,[rip+0x202ff]        # 42f628 <_IO_stdin_used@@Base+0x2628>
  40f329:	mov    esi,0x1
  40f32e:	xor    eax,eax
  40f330:	call   4053e0 <__fprintf_chk@plt>
  40f335:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f33c:	lea    rdx,[rip+0x285fd]        # 437940 <_IO_stdin_used@@Base+0xa940>
  40f343:	mov    esi,0x1
  40f348:	xor    eax,eax
  40f34a:	call   4053e0 <__fprintf_chk@plt>
  40f34f:	mov    rax,QWORD PTR [rbx+0xe0]
  40f356:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f35d:	mov    r8d,DWORD PTR [rax+0xac]
  40f364:	test   r8d,r8d
  40f367:	jne    40fd80 <__flatcc_fb_gen_common_c_builder_header@@Base+0xab0>
  40f36d:	lea    rdx,[rip+0x2792f]        # 436ca3 <_IO_stdin_used@@Base+0x9ca3>
  40f374:	mov    esi,0x1
  40f379:	xor    eax,eax
  40f37b:	call   4053e0 <__fprintf_chk@plt>
  40f380:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f387:	lea    rdx,[rip+0x285ea]        # 437978 <_IO_stdin_used@@Base+0xa978>
  40f38e:	mov    esi,0x1
  40f393:	xor    eax,eax
  40f395:	call   4053e0 <__fprintf_chk@plt>
  40f39a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3a1:	mov    esi,0x1
  40f3a6:	xor    eax,eax
  40f3a8:	lea    rdx,[rip+0x2790b]        # 436cba <_IO_stdin_used@@Base+0x9cba>
  40f3af:	call   4053e0 <__fprintf_chk@plt>
  40f3b4:	mov    ecx,0x10
  40f3b9:	lea    rdi,[rip+0x27902]        # 436cc2 <_IO_stdin_used@@Base+0x9cc2>
  40f3c0:	mov    rsi,rbx
  40f3c3:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f3c5:	seta   al
  40f3c8:	sbb    al,0x0
  40f3ca:	test   al,al
  40f3cc:	jne    40fe00 <__flatcc_fb_gen_common_c_builder_header@@Base+0xb30>
  40f3d2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3d9:	mov    r8,rbx
  40f3dc:	mov    rcx,rbx
  40f3df:	lea    rdx,[rip+0x278ec]        # 436cd2 <_IO_stdin_used@@Base+0x9cd2>
  40f3e6:	mov    esi,0x1
  40f3eb:	xor    eax,eax
  40f3ed:	call   4053e0 <__fprintf_chk@plt>
  40f3f2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f3f9:	mov    rcx,rbx
  40f3fc:	mov    esi,0x1
  40f401:	xor    eax,eax
  40f403:	mov    r8,rbx
  40f406:	lea    rdx,[rip+0x286e3]        # 437af0 <_IO_stdin_used@@Base+0xaaf0>
  40f40d:	call   4053e0 <__fprintf_chk@plt>
  40f412:	mov    ecx,0xd
  40f417:	lea    rdi,[rip+0x268c0]        # 435cde <_IO_stdin_used@@Base+0x8cde>
  40f41e:	mov    rsi,rbx
  40f421:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  40f423:	seta   al
  40f426:	sbb    al,0x0
  40f428:	test   al,al
  40f42a:	jne    40fdc0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xaf0>
  40f430:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f437:	lea    rdx,[rip+0x35cdf]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40f43e:	mov    esi,0x1
  40f443:	xor    eax,eax
  40f445:	call   4053e0 <__fprintf_chk@plt>
  40f44a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f451:	mov    rcx,rbx
  40f454:	lea    rdx,[rip+0x2871d]        # 437b78 <_IO_stdin_used@@Base+0xab78>
  40f45b:	mov    esi,0x1
  40f460:	xor    eax,eax
  40f462:	call   4053e0 <__fprintf_chk@plt>
  40f467:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f46e:	mov    rcx,rbx
  40f471:	lea    rdx,[rip+0x28a78]        # 437ef0 <_IO_stdin_used@@Base+0xaef0>
  40f478:	mov    esi,0x1
  40f47d:	xor    eax,eax
  40f47f:	call   4053e0 <__fprintf_chk@plt>
  40f484:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f48b:	mov    r9,rbx
  40f48e:	mov    r8,rbx
  40f491:	mov    rcx,rbx
  40f494:	lea    rdx,[rip+0x29125]        # 4385c0 <_IO_stdin_used@@Base+0xb5c0>
  40f49b:	mov    esi,0x1
  40f4a0:	xor    eax,eax
  40f4a2:	call   4053e0 <__fprintf_chk@plt>
  40f4a7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f4ae:	mov    rcx,rbx
  40f4b1:	lea    rdx,[rip+0x29198]        # 438650 <_IO_stdin_used@@Base+0xb650>
  40f4b8:	mov    esi,0x1
  40f4bd:	xor    eax,eax
  40f4bf:	call   4053e0 <__fprintf_chk@plt>
  40f4c4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f4cb:	mov    rcx,rbx
  40f4ce:	lea    rdx,[rip+0x29c3b]        # 439110 <_IO_stdin_used@@Base+0xc110>
  40f4d5:	mov    esi,0x1
  40f4da:	xor    eax,eax
  40f4dc:	call   4053e0 <__fprintf_chk@plt>
  40f4e1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f4e8:	mov    rcx,rbx
  40f4eb:	lea    rdx,[rip+0x29ffe]        # 4394f0 <_IO_stdin_used@@Base+0xc4f0>
  40f4f2:	mov    esi,0x1
  40f4f7:	xor    eax,eax
  40f4f9:	call   4053e0 <__fprintf_chk@plt>
  40f4fe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f505:	mov    rcx,rbx
  40f508:	lea    rdx,[rip+0x2a619]        # 439b28 <_IO_stdin_used@@Base+0xcb28>
  40f50f:	mov    esi,0x1
  40f514:	xor    eax,eax
  40f516:	call   4053e0 <__fprintf_chk@plt>
  40f51b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f522:	mov    r8,rbx
  40f525:	mov    rcx,rbx
  40f528:	lea    rdx,[rip+0x2aa79]        # 439fa8 <_IO_stdin_used@@Base+0xcfa8>
  40f52f:	mov    esi,0x1
  40f534:	xor    eax,eax
  40f536:	call   4053e0 <__fprintf_chk@plt>
  40f53b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f542:	mov    r9,rbx
  40f545:	mov    r8,rbx
  40f548:	mov    rcx,rbx
  40f54b:	lea    rdx,[rip+0x2b1ce]        # 43a720 <_IO_stdin_used@@Base+0xd720>
  40f552:	mov    esi,0x1
  40f557:	xor    eax,eax
  40f559:	call   4053e0 <__fprintf_chk@plt>
  40f55e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f565:	mov    rcx,rbx
  40f568:	lea    rdx,[rip+0x2b6f9]        # 43ac68 <_IO_stdin_used@@Base+0xdc68>
  40f56f:	mov    esi,0x1
  40f574:	xor    eax,eax
  40f576:	call   4053e0 <__fprintf_chk@plt>
  40f57b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f582:	mov    rcx,rbx
  40f585:	lea    rdx,[rip+0x2bb5c]        # 43b0e8 <_IO_stdin_used@@Base+0xe0e8>
  40f58c:	mov    esi,0x1
  40f591:	xor    eax,eax
  40f593:	call   4053e0 <__fprintf_chk@plt>
  40f598:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f59f:	mov    rcx,rbx
  40f5a2:	lea    rdx,[rip+0x2bccf]        # 43b278 <_IO_stdin_used@@Base+0xe278>
  40f5a9:	mov    esi,0x1
  40f5ae:	xor    eax,eax
  40f5b0:	call   4053e0 <__fprintf_chk@plt>
  40f5b5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5bc:	mov    r8,rbx
  40f5bf:	mov    rcx,rbx
  40f5c2:	lea    rdx,[rip+0x2c00f]        # 43b5d8 <_IO_stdin_used@@Base+0xe5d8>
  40f5c9:	mov    esi,0x1
  40f5ce:	xor    eax,eax
  40f5d0:	call   4053e0 <__fprintf_chk@plt>
  40f5d5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5dc:	mov    rcx,rbx
  40f5df:	lea    rdx,[rip+0x2c1fa]        # 43b7e0 <_IO_stdin_used@@Base+0xe7e0>
  40f5e6:	mov    esi,0x1
  40f5eb:	xor    eax,eax
  40f5ed:	call   4053e0 <__fprintf_chk@plt>
  40f5f2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f5f9:	mov    r9,rbx
  40f5fc:	mov    r8,rbx
  40f5ff:	mov    rcx,rbx
  40f602:	lea    rdx,[rip+0x2c547]        # 43bb50 <_IO_stdin_used@@Base+0xeb50>
  40f609:	mov    esi,0x1
  40f60e:	xor    eax,eax
  40f610:	call   4053e0 <__fprintf_chk@plt>
  40f615:	sub    rsp,0x8
  40f619:	push   rbx
  40f61a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f621:	mov    r9,rbx
  40f624:	mov    r8,rbx
  40f627:	mov    rcx,rbx
  40f62a:	lea    rdx,[rip+0x2ca1f]        # 43c050 <_IO_stdin_used@@Base+0xf050>
  40f631:	mov    esi,0x1
  40f636:	xor    eax,eax
  40f638:	call   4053e0 <__fprintf_chk@plt>
  40f63d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f644:	mov    r8,rbx
  40f647:	mov    rcx,rbx
  40f64a:	lea    rdx,[rip+0x2cb0f]        # 43c160 <_IO_stdin_used@@Base+0xf160>
  40f651:	mov    esi,0x1
  40f656:	xor    eax,eax
  40f658:	call   4053e0 <__fprintf_chk@plt>
  40f65d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f664:	mov    r9,rbx
  40f667:	mov    r8,rbx
  40f66a:	mov    rcx,rbx
  40f66d:	lea    rdx,[rip+0x2ce54]        # 43c4c8 <_IO_stdin_used@@Base+0xf4c8>
  40f674:	mov    esi,0x1
  40f679:	xor    eax,eax
  40f67b:	mov    QWORD PTR [rsp],rbx
  40f67f:	call   4053e0 <__fprintf_chk@plt>
  40f684:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f68b:	mov    r8,rbx
  40f68e:	mov    rcx,rbx
  40f691:	lea    rdx,[rip+0x2d430]        # 43cac8 <_IO_stdin_used@@Base+0xfac8>
  40f698:	mov    esi,0x1
  40f69d:	xor    eax,eax
  40f69f:	call   4053e0 <__fprintf_chk@plt>
  40f6a4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6ab:	mov    rcx,rbx
  40f6ae:	lea    rdx,[rip+0x2d5cb]        # 43cc80 <_IO_stdin_used@@Base+0xfc80>
  40f6b5:	mov    esi,0x1
  40f6ba:	xor    eax,eax
  40f6bc:	call   4053e0 <__fprintf_chk@plt>
  40f6c1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6c8:	mov    rcx,rbx
  40f6cb:	lea    rdx,[rip+0x2d7d6]        # 43cea8 <_IO_stdin_used@@Base+0xfea8>
  40f6d2:	mov    esi,0x1
  40f6d7:	xor    eax,eax
  40f6d9:	call   4053e0 <__fprintf_chk@plt>
  40f6de:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f6e5:	mov    rcx,rbx
  40f6e8:	lea    rdx,[rip+0x2db79]        # 43d268 <_IO_stdin_used@@Base+0x10268>
  40f6ef:	mov    esi,0x1
  40f6f4:	xor    eax,eax
  40f6f6:	call   4053e0 <__fprintf_chk@plt>
  40f6fb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f702:	mov    rcx,rbx
  40f705:	lea    rdx,[rip+0x2de1c]        # 43d528 <_IO_stdin_used@@Base+0x10528>
  40f70c:	mov    esi,0x1
  40f711:	xor    eax,eax
  40f713:	call   4053e0 <__fprintf_chk@plt>
  40f718:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f71f:	mov    r8,rbx
  40f722:	mov    rcx,rbx
  40f725:	lea    rdx,[rip+0x2e214]        # 43d940 <_IO_stdin_used@@Base+0x10940>
  40f72c:	mov    esi,0x1
  40f731:	xor    eax,eax
  40f733:	call   4053e0 <__fprintf_chk@plt>
  40f738:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f73f:	mov    rcx,rbx
  40f742:	lea    rdx,[rip+0x2e2e7]        # 43da30 <_IO_stdin_used@@Base+0x10a30>
  40f749:	mov    esi,0x1
  40f74e:	xor    eax,eax
  40f750:	call   4053e0 <__fprintf_chk@plt>
  40f755:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f75c:	mov    rcx,rbx
  40f75f:	lea    rdx,[rip+0x2e532]        # 43dc98 <_IO_stdin_used@@Base+0x10c98>
  40f766:	mov    esi,0x1
  40f76b:	xor    eax,eax
  40f76d:	call   4053e0 <__fprintf_chk@plt>
  40f772:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f779:	mov    r8,rbx
  40f77c:	mov    rcx,rbx
  40f77f:	lea    rdx,[rip+0x2e88a]        # 43e010 <_IO_stdin_used@@Base+0x11010>
  40f786:	mov    esi,0x1
  40f78b:	xor    eax,eax
  40f78d:	call   4053e0 <__fprintf_chk@plt>
  40f792:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f799:	mov    r8,rbx
  40f79c:	mov    rcx,rbx
  40f79f:	lea    rdx,[rip+0x2ecba]        # 43e460 <_IO_stdin_used@@Base+0x11460>
  40f7a6:	mov    esi,0x1
  40f7ab:	xor    eax,eax
  40f7ad:	call   4053e0 <__fprintf_chk@plt>
  40f7b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7b9:	mov    r8,rbx
  40f7bc:	mov    rcx,rbx
  40f7bf:	lea    rdx,[rip+0x2ef32]        # 43e6f8 <_IO_stdin_used@@Base+0x116f8>
  40f7c6:	mov    esi,0x1
  40f7cb:	xor    eax,eax
  40f7cd:	call   4053e0 <__fprintf_chk@plt>
  40f7d2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7d9:	mov    r8,rbx
  40f7dc:	mov    rcx,rbx
  40f7df:	lea    rdx,[rip+0x2f312]        # 43eaf8 <_IO_stdin_used@@Base+0x11af8>
  40f7e6:	mov    esi,0x1
  40f7eb:	xor    eax,eax
  40f7ed:	call   4053e0 <__fprintf_chk@plt>
  40f7f2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f7f9:	mov    r9,rbx
  40f7fc:	mov    r8,rbx
  40f7ff:	mov    rcx,rbx
  40f802:	lea    rdx,[rip+0x2f3ff]        # 43ec08 <_IO_stdin_used@@Base+0x11c08>
  40f809:	mov    esi,0x1
  40f80e:	xor    eax,eax
  40f810:	call   4053e0 <__fprintf_chk@plt>
  40f815:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f81c:	mov    r8,rbx
  40f81f:	mov    rcx,rbx
  40f822:	lea    rdx,[rip+0x2f46f]        # 43ec98 <_IO_stdin_used@@Base+0x11c98>
  40f829:	mov    esi,0x1
  40f82e:	xor    eax,eax
  40f830:	call   4053e0 <__fprintf_chk@plt>
  40f835:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f83c:	mov    rcx,rbx
  40f83f:	lea    rdx,[rip+0x2f7a2]        # 43efe8 <_IO_stdin_used@@Base+0x11fe8>
  40f846:	mov    esi,0x1
  40f84b:	xor    eax,eax
  40f84d:	call   4053e0 <__fprintf_chk@plt>
  40f852:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f859:	mov    rcx,rbx
  40f85c:	lea    rdx,[rip+0x2fa0d]        # 43f270 <_IO_stdin_used@@Base+0x12270>
  40f863:	mov    esi,0x1
  40f868:	xor    eax,eax
  40f86a:	call   4053e0 <__fprintf_chk@plt>
  40f86f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f876:	mov    rcx,rbx
  40f879:	lea    rdx,[rip+0x2fc80]        # 43f500 <_IO_stdin_used@@Base+0x12500>
  40f880:	mov    esi,0x1
  40f885:	xor    eax,eax
  40f887:	call   4053e0 <__fprintf_chk@plt>
  40f88c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f893:	mov    r9,rbx
  40f896:	mov    r8,rbx
  40f899:	mov    rcx,rbx
  40f89c:	lea    rdx,[rip+0x30215]        # 43fab8 <_IO_stdin_used@@Base+0x12ab8>
  40f8a3:	mov    esi,0x1
  40f8a8:	xor    eax,eax
  40f8aa:	call   4053e0 <__fprintf_chk@plt>
  40f8af:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8b6:	mov    rcx,rbx
  40f8b9:	lea    rdx,[rip+0x30288]        # 43fb48 <_IO_stdin_used@@Base+0x12b48>
  40f8c0:	mov    esi,0x1
  40f8c5:	xor    eax,eax
  40f8c7:	call   4053e0 <__fprintf_chk@plt>
  40f8cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8d3:	mov    rcx,rbx
  40f8d6:	lea    rdx,[rip+0x3029b]        # 43fb78 <_IO_stdin_used@@Base+0x12b78>
  40f8dd:	mov    esi,0x1
  40f8e2:	xor    eax,eax
  40f8e4:	call   4053e0 <__fprintf_chk@plt>
  40f8e9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f8f0:	mov    rcx,rbx
  40f8f3:	lea    rdx,[rip+0x302a6]        # 43fba0 <_IO_stdin_used@@Base+0x12ba0>
  40f8fa:	mov    esi,0x1
  40f8ff:	xor    eax,eax
  40f901:	call   4053e0 <__fprintf_chk@plt>
  40f906:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f90d:	mov    rcx,rbx
  40f910:	lea    rdx,[rip+0x302b9]        # 43fbd0 <_IO_stdin_used@@Base+0x12bd0>
  40f917:	mov    esi,0x1
  40f91c:	xor    eax,eax
  40f91e:	call   4053e0 <__fprintf_chk@plt>
  40f923:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f92a:	mov    r8,rbx
  40f92d:	mov    rcx,rbx
  40f930:	lea    rdx,[rip+0x302c1]        # 43fbf8 <_IO_stdin_used@@Base+0x12bf8>
  40f937:	mov    esi,0x1
  40f93c:	xor    eax,eax
  40f93e:	call   4053e0 <__fprintf_chk@plt>
  40f943:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f94a:	mov    rcx,rbx
  40f94d:	lea    rdx,[rip+0x302d4]        # 43fc28 <_IO_stdin_used@@Base+0x12c28>
  40f954:	mov    esi,0x1
  40f959:	xor    eax,eax
  40f95b:	call   4053e0 <__fprintf_chk@plt>
  40f960:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f967:	mov    rcx,rbx
  40f96a:	lea    rdx,[rip+0x302df]        # 43fc50 <_IO_stdin_used@@Base+0x12c50>
  40f971:	mov    esi,0x1
  40f976:	xor    eax,eax
  40f978:	call   4053e0 <__fprintf_chk@plt>
  40f97d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f984:	mov    rcx,rbx
  40f987:	lea    rdx,[rip+0x302f2]        # 43fc80 <_IO_stdin_used@@Base+0x12c80>
  40f98e:	mov    esi,0x1
  40f993:	xor    eax,eax
  40f995:	call   4053e0 <__fprintf_chk@plt>
  40f99a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9a1:	mov    rcx,rbx
  40f9a4:	lea    rdx,[rip+0x302fd]        # 43fca8 <_IO_stdin_used@@Base+0x12ca8>
  40f9ab:	mov    esi,0x1
  40f9b0:	xor    eax,eax
  40f9b2:	call   4053e0 <__fprintf_chk@plt>
  40f9b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9be:	mov    rcx,rbx
  40f9c1:	lea    rdx,[rip+0x30310]        # 43fcd8 <_IO_stdin_used@@Base+0x12cd8>
  40f9c8:	mov    esi,0x1
  40f9cd:	xor    eax,eax
  40f9cf:	call   4053e0 <__fprintf_chk@plt>
  40f9d4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9db:	mov    rcx,rbx
  40f9de:	lea    rdx,[rip+0x3031b]        # 43fd00 <_IO_stdin_used@@Base+0x12d00>
  40f9e5:	mov    esi,0x1
  40f9ea:	xor    eax,eax
  40f9ec:	call   4053e0 <__fprintf_chk@plt>
  40f9f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f9f8:	mov    rcx,rbx
  40f9fb:	lea    rdx,[rip+0x3032e]        # 43fd30 <_IO_stdin_used@@Base+0x12d30>
  40fa02:	mov    esi,0x1
  40fa07:	xor    eax,eax
  40fa09:	call   4053e0 <__fprintf_chk@plt>
  40fa0e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa15:	mov    rcx,rbx
  40fa18:	lea    rdx,[rip+0x30339]        # 43fd58 <_IO_stdin_used@@Base+0x12d58>
  40fa1f:	mov    esi,0x1
  40fa24:	xor    eax,eax
  40fa26:	call   4053e0 <__fprintf_chk@plt>
  40fa2b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa32:	mov    rcx,rbx
  40fa35:	lea    rdx,[rip+0x3034c]        # 43fd88 <_IO_stdin_used@@Base+0x12d88>
  40fa3c:	mov    esi,0x1
  40fa41:	xor    eax,eax
  40fa43:	call   4053e0 <__fprintf_chk@plt>
  40fa48:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa4f:	mov    rcx,rbx
  40fa52:	lea    rdx,[rip+0x30357]        # 43fdb0 <_IO_stdin_used@@Base+0x12db0>
  40fa59:	mov    esi,0x1
  40fa5e:	xor    eax,eax
  40fa60:	call   4053e0 <__fprintf_chk@plt>
  40fa65:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa6c:	mov    rcx,rbx
  40fa6f:	lea    rdx,[rip+0x3036a]        # 43fde0 <_IO_stdin_used@@Base+0x12de0>
  40fa76:	mov    esi,0x1
  40fa7b:	xor    eax,eax
  40fa7d:	call   4053e0 <__fprintf_chk@plt>
  40fa82:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fa89:	mov    rcx,rbx
  40fa8c:	lea    rdx,[rip+0x30375]        # 43fe08 <_IO_stdin_used@@Base+0x12e08>
  40fa93:	mov    esi,0x1
  40fa98:	xor    eax,eax
  40fa9a:	call   4053e0 <__fprintf_chk@plt>
  40fa9f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40faa6:	mov    rcx,rbx
  40faa9:	lea    rdx,[rip+0x30388]        # 43fe38 <_IO_stdin_used@@Base+0x12e38>
  40fab0:	mov    esi,0x1
  40fab5:	xor    eax,eax
  40fab7:	call   4053e0 <__fprintf_chk@plt>
  40fabc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fac3:	mov    rcx,rbx
  40fac6:	lea    rdx,[rip+0x30393]        # 43fe60 <_IO_stdin_used@@Base+0x12e60>
  40facd:	mov    esi,0x1
  40fad2:	xor    eax,eax
  40fad4:	call   4053e0 <__fprintf_chk@plt>
  40fad9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fae0:	mov    rcx,rbx
  40fae3:	lea    rdx,[rip+0x303a6]        # 43fe90 <_IO_stdin_used@@Base+0x12e90>
  40faea:	mov    esi,0x1
  40faef:	xor    eax,eax
  40faf1:	call   4053e0 <__fprintf_chk@plt>
  40faf6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fafd:	mov    rcx,rbx
  40fb00:	lea    rdx,[rip+0x303b1]        # 43feb8 <_IO_stdin_used@@Base+0x12eb8>
  40fb07:	mov    esi,0x1
  40fb0c:	xor    eax,eax
  40fb0e:	call   4053e0 <__fprintf_chk@plt>
  40fb13:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb1a:	mov    rcx,rbx
  40fb1d:	lea    rdx,[rip+0x303c4]        # 43fee8 <_IO_stdin_used@@Base+0x12ee8>
  40fb24:	mov    esi,0x1
  40fb29:	xor    eax,eax
  40fb2b:	call   4053e0 <__fprintf_chk@plt>
  40fb30:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb37:	lea    rdx,[rip+0x355df]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40fb3e:	mov    esi,0x1
  40fb43:	xor    eax,eax
  40fb45:	call   4053e0 <__fprintf_chk@plt>
  40fb4a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb51:	mov    r9,rbx
  40fb54:	mov    r8,rbx
  40fb57:	mov    rcx,rbx
  40fb5a:	lea    rdx,[rip+0x303af]        # 43ff10 <_IO_stdin_used@@Base+0x12f10>
  40fb61:	mov    esi,0x1
  40fb66:	xor    eax,eax
  40fb68:	call   4053e0 <__fprintf_chk@plt>
  40fb6d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb74:	mov    r9,rbx
  40fb77:	mov    r8,rbx
  40fb7a:	mov    rcx,rbx
  40fb7d:	lea    rdx,[rip+0x303b4]        # 43ff38 <_IO_stdin_used@@Base+0x12f38>
  40fb84:	mov    esi,0x1
  40fb89:	xor    eax,eax
  40fb8b:	call   4053e0 <__fprintf_chk@plt>
  40fb90:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fb97:	mov    r9,rbx
  40fb9a:	mov    r8,rbx
  40fb9d:	mov    rcx,rbx
  40fba0:	lea    rdx,[rip+0x303b9]        # 43ff60 <_IO_stdin_used@@Base+0x12f60>
  40fba7:	mov    esi,0x1
  40fbac:	xor    eax,eax
  40fbae:	mov    QWORD PTR [rsp],rbx
  40fbb2:	call   4053e0 <__fprintf_chk@plt>
  40fbb7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fbbe:	mov    r9,rbx
  40fbc1:	mov    r8,rbx
  40fbc4:	mov    rcx,rbx
  40fbc7:	lea    rdx,[rip+0x303ba]        # 43ff88 <_IO_stdin_used@@Base+0x12f88>
  40fbce:	mov    esi,0x1
  40fbd3:	xor    eax,eax
  40fbd5:	call   4053e0 <__fprintf_chk@plt>
  40fbda:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fbe1:	mov    r9,rbx
  40fbe4:	mov    r8,rbx
  40fbe7:	mov    rcx,rbx
  40fbea:	lea    rdx,[rip+0x303c7]        # 43ffb8 <_IO_stdin_used@@Base+0x12fb8>
  40fbf1:	mov    esi,0x1
  40fbf6:	xor    eax,eax
  40fbf8:	call   4053e0 <__fprintf_chk@plt>
  40fbfd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc04:	mov    r9,rbx
  40fc07:	mov    r8,rbx
  40fc0a:	mov    rcx,rbx
  40fc0d:	lea    rdx,[rip+0x303d4]        # 43ffe8 <_IO_stdin_used@@Base+0x12fe8>
  40fc14:	mov    esi,0x1
  40fc19:	xor    eax,eax
  40fc1b:	call   4053e0 <__fprintf_chk@plt>
  40fc20:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc27:	mov    r9,rbx
  40fc2a:	mov    r8,rbx
  40fc2d:	mov    rcx,rbx
  40fc30:	lea    rdx,[rip+0x303e1]        # 440018 <_IO_stdin_used@@Base+0x13018>
  40fc37:	mov    esi,0x1
  40fc3c:	xor    eax,eax
  40fc3e:	call   4053e0 <__fprintf_chk@plt>
  40fc43:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc4a:	mov    r9,rbx
  40fc4d:	mov    r8,rbx
  40fc50:	mov    rcx,rbx
  40fc53:	lea    rdx,[rip+0x303e6]        # 440040 <_IO_stdin_used@@Base+0x13040>
  40fc5a:	mov    esi,0x1
  40fc5f:	xor    eax,eax
  40fc61:	call   4053e0 <__fprintf_chk@plt>
  40fc66:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc6d:	mov    r9,rbx
  40fc70:	mov    r8,rbx
  40fc73:	mov    rcx,rbx
  40fc76:	lea    rdx,[rip+0x303eb]        # 440068 <_IO_stdin_used@@Base+0x13068>
  40fc7d:	mov    esi,0x1
  40fc82:	xor    eax,eax
  40fc84:	call   4053e0 <__fprintf_chk@plt>
  40fc89:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fc90:	mov    r9,rbx
  40fc93:	mov    r8,rbx
  40fc96:	mov    rcx,rbx
  40fc99:	lea    rdx,[rip+0x303f0]        # 440090 <_IO_stdin_used@@Base+0x13090>
  40fca0:	mov    esi,0x1
  40fca5:	xor    eax,eax
  40fca7:	call   4053e0 <__fprintf_chk@plt>
  40fcac:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fcb3:	mov    r9,rbx
  40fcb6:	mov    r8,rbx
  40fcb9:	mov    rcx,rbx
  40fcbc:	lea    rdx,[rip+0x303f5]        # 4400b8 <_IO_stdin_used@@Base+0x130b8>
  40fcc3:	mov    esi,0x1
  40fcc8:	xor    eax,eax
  40fcca:	call   4053e0 <__fprintf_chk@plt>
  40fccf:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fcd6:	lea    rdx,[rip+0x35440]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40fcdd:	mov    esi,0x1
  40fce2:	xor    eax,eax
  40fce4:	call   4053e0 <__fprintf_chk@plt>
  40fce9:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fcf0:	mov    r8,rbx
  40fcf3:	mov    rcx,rbx
  40fcf6:	lea    rdx,[rip+0x26ff0]        # 436ced <_IO_stdin_used@@Base+0x9ced>
  40fcfd:	mov    esi,0x1
  40fd02:	xor    eax,eax
  40fd04:	call   4053e0 <__fprintf_chk@plt>
  40fd09:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd10:	lea    rdx,[rip+0x35406]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  40fd17:	mov    esi,0x1
  40fd1c:	xor    eax,eax
  40fd1e:	call   4053e0 <__fprintf_chk@plt>
  40fd23:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd2a:	mov    rcx,rbx
  40fd2d:	lea    rdx,[rip+0x26fcf]        # 436d03 <_IO_stdin_used@@Base+0x9d03>
  40fd34:	mov    esi,0x1
  40fd39:	mov    r8,rbx
  40fd3c:	xor    eax,eax
  40fd3e:	call   4053e0 <__fprintf_chk@plt>
  40fd43:	mov    rax,QWORD PTR [rbx+0xe0]
  40fd4a:	pop    rdx
  40fd4b:	mov    esi,DWORD PTR [rax+0xac]
  40fd51:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd58:	pop    rcx
  40fd59:	test   esi,esi
  40fd5b:	jne    40fda0 <__flatcc_fb_gen_common_c_builder_header@@Base+0xad0>
  40fd5d:	mov    rcx,rbp
  40fd60:	lea    rdx,[rip+0x30379]        # 4400e0 <_IO_stdin_used@@Base+0x130e0>
  40fd67:	mov    esi,0x1
  40fd6c:	xor    eax,eax
  40fd6e:	call   4053e0 <__fprintf_chk@plt>
  40fd73:	add    rsp,0x8
  40fd77:	pop    rbx
  40fd78:	xor    eax,eax
  40fd7a:	pop    rbp
  40fd7b:	ret    
  40fd7c:	nop    DWORD PTR [rax+0x0]
  40fd80:	lea    rdx,[rip+0x1f9b9]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  40fd87:	mov    esi,0x1
  40fd8c:	xor    eax,eax
  40fd8e:	call   4053e0 <__fprintf_chk@plt>
  40fd93:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fd9a:	jmp    40f36d <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d>
  40fd9f:	nop
  40fda0:	lea    rdx,[rip+0x25849]        # 4355f0 <_IO_stdin_used@@Base+0x85f0>
  40fda7:	mov    esi,0x1
  40fdac:	xor    eax,eax
  40fdae:	call   4053e0 <__fprintf_chk@plt>
  40fdb3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fdba:	jmp    40fd5d <__flatcc_fb_gen_common_c_builder_header@@Base+0xa8d>
  40fdbc:	nop    DWORD PTR [rax+0x0]
  40fdc0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fdc7:	mov    rcx,rbx
  40fdca:	lea    rdx,[rip+0x27d47]        # 437b18 <_IO_stdin_used@@Base+0xab18>
  40fdd1:	mov    esi,0x1
  40fdd6:	xor    eax,eax
  40fdd8:	call   4053e0 <__fprintf_chk@plt>
  40fddd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fde4:	mov    rcx,rbx
  40fde7:	lea    rdx,[rip+0x27d62]        # 437b50 <_IO_stdin_used@@Base+0xab50>
  40fdee:	mov    esi,0x1
  40fdf3:	xor    eax,eax
  40fdf5:	call   4053e0 <__fprintf_chk@plt>
  40fdfa:	jmp    40f430 <__flatcc_fb_gen_common_c_builder_header@@Base+0x160>
  40fdff:	nop
  40fe00:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe07:	mov    rcx,rbx
  40fe0a:	lea    rdx,[rip+0x27b8f]        # 4379a0 <_IO_stdin_used@@Base+0xa9a0>
  40fe11:	mov    esi,0x1
  40fe16:	xor    eax,eax
  40fe18:	call   4053e0 <__fprintf_chk@plt>
  40fe1d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe24:	mov    rcx,rbx
  40fe27:	lea    rdx,[rip+0x27b9a]        # 4379c8 <_IO_stdin_used@@Base+0xa9c8>
  40fe2e:	mov    esi,0x1
  40fe33:	xor    eax,eax
  40fe35:	call   4053e0 <__fprintf_chk@plt>
  40fe3a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe41:	mov    rcx,rbx
  40fe44:	lea    rdx,[rip+0x27ba5]        # 4379f0 <_IO_stdin_used@@Base+0xa9f0>
  40fe4b:	mov    esi,0x1
  40fe50:	xor    eax,eax
  40fe52:	call   4053e0 <__fprintf_chk@plt>
  40fe57:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe5e:	mov    rcx,rbx
  40fe61:	lea    rdx,[rip+0x27bb8]        # 437a20 <_IO_stdin_used@@Base+0xaa20>
  40fe68:	mov    esi,0x1
  40fe6d:	xor    eax,eax
  40fe6f:	call   4053e0 <__fprintf_chk@plt>
  40fe74:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe7b:	mov    rcx,rbx
  40fe7e:	lea    rdx,[rip+0x27bd3]        # 437a58 <_IO_stdin_used@@Base+0xaa58>
  40fe85:	mov    esi,0x1
  40fe8a:	xor    eax,eax
  40fe8c:	call   4053e0 <__fprintf_chk@plt>
  40fe91:	mov    rdi,QWORD PTR [rbx+0xd0]
  40fe98:	mov    rcx,rbx
  40fe9b:	lea    rdx,[rip+0x27bf6]        # 437a98 <_IO_stdin_used@@Base+0xaa98>
  40fea2:	mov    esi,0x1
  40fea7:	xor    eax,eax
  40fea9:	call   4053e0 <__fprintf_chk@plt>
  40feae:	jmp    40f3d2 <__flatcc_fb_gen_common_c_builder_header@@Base+0x102>
  40feb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40febe:	xchg   ax,ax

000000000040fec0 <__flatcc_fb_gen_c_builder@@Base>:
  40fec0:	endbr64 
  40fec4:	push   r15
  40fec6:	lea    rdx,[rip+0x3023b]        # 440108 <_IO_stdin_used@@Base+0x13108>
  40fecd:	mov    esi,0x1
  40fed2:	push   r14
  40fed4:	push   r13
  40fed6:	push   r12
  40fed8:	push   rbp
  40fed9:	push   rbx
  40feda:	mov    rbx,rdi
  40fedd:	sub    rsp,0xf8
  40fee4:	mov    rax,QWORD PTR fs:0x28
  40feed:	mov    QWORD PTR [rsp+0xe8],rax
  40fef5:	xor    eax,eax
  40fef7:	mov    rax,QWORD PTR [rdi+0xd8]
  40fefe:	mov    rdi,QWORD PTR [rdi+0xd0]
  40ff05:	mov    rcx,QWORD PTR [rax+0x118]
  40ff0c:	xor    eax,eax
  40ff0e:	mov    r8,rcx
  40ff11:	call   4053e0 <__fprintf_chk@plt>
  40ff16:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff1d:	lea    rdx,[rip+0x1f704]        # 42f628 <_IO_stdin_used@@Base+0x2628>
  40ff24:	mov    esi,0x1
  40ff29:	xor    eax,eax
  40ff2b:	call   4053e0 <__fprintf_chk@plt>
  40ff30:	mov    rax,QWORD PTR [rbx+0xd8]
  40ff37:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff3e:	mov    rcx,QWORD PTR [rax+0x118]
  40ff45:	lea    rdx,[rip+0x26dcd]        # 436d19 <_IO_stdin_used@@Base+0x9d19>
  40ff4c:	mov    esi,0x1
  40ff51:	xor    eax,eax
  40ff53:	call   4053e0 <__fprintf_chk@plt>
  40ff58:	mov    rax,QWORD PTR [rbx+0xd8]
  40ff5f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff66:	mov    rcx,QWORD PTR [rax+0x110]
  40ff6d:	lea    rdx,[rip+0x26dba]        # 436d2e <_IO_stdin_used@@Base+0x9d2e>
  40ff74:	mov    esi,0x1
  40ff79:	xor    eax,eax
  40ff7b:	call   4053e0 <__fprintf_chk@plt>
  40ff80:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ff87:	lea    rdx,[rip+0x26d2c]        # 436cba <_IO_stdin_used@@Base+0x9cba>
  40ff8e:	mov    esi,0x1
  40ff93:	xor    eax,eax
  40ff95:	call   4053e0 <__fprintf_chk@plt>
  40ff9a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ffa1:	lea    rcx,[rbx+0x66]
  40ffa5:	lea    rdx,[rip+0x26cbd]        # 436c69 <_IO_stdin_used@@Base+0x9c69>
  40ffac:	mov    esi,0x1
  40ffb1:	xor    eax,eax
  40ffb3:	call   4053e0 <__fprintf_chk@plt>
  40ffb8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ffbf:	mov    rcx,rbx
  40ffc2:	lea    rdx,[rip+0x3016f]        # 440138 <_IO_stdin_used@@Base+0x13138>
  40ffc9:	mov    esi,0x1
  40ffce:	xor    eax,eax
  40ffd0:	call   4053e0 <__fprintf_chk@plt>
  40ffd5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ffdc:	lea    rdx,[rip+0x26cd7]        # 436cba <_IO_stdin_used@@Base+0x9cba>
  40ffe3:	mov    esi,0x1
  40ffe8:	xor    eax,eax
  40ffea:	call   4053e0 <__fprintf_chk@plt>
  40ffef:	mov    rdi,rbx
  40fff2:	lea    rdx,[rip+0x26d4d]        # 436d46 <_IO_stdin_used@@Base+0x9d46>
  40fff9:	lea    rsi,[rip+0x1e226]        # 42e226 <_IO_stdin_used@@Base+0x1226>
  410000:	call   406620 <__flatcc_fb_gen_c_includes@@Base>
  410005:	mov    rax,QWORD PTR [rbx+0xe0]
  41000c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410013:	mov    r10d,DWORD PTR [rax+0xac]
  41001a:	test   r10d,r10d
  41001d:	jne    410650 <__flatcc_fb_gen_c_builder@@Base+0x790>
  410023:	mov    rax,QWORD PTR [rbx+0xd8]
  41002a:	cmp    WORD PTR [rax+0x20],0x2
  41002f:	je     410620 <__flatcc_fb_gen_c_builder@@Base+0x760>
  410035:	mov    r8,rbx
  410038:	mov    rcx,rbx
  41003b:	lea    rdx,[rip+0x25866]        # 4358a8 <_IO_stdin_used@@Base+0x88a8>
  410042:	mov    esi,0x1
  410047:	xor    eax,eax
  410049:	call   4053e0 <__fprintf_chk@plt>
  41004e:	mov    rax,QWORD PTR [rbx+0xd8]
  410055:	mov    rdi,QWORD PTR [rbx+0xd0]
  41005c:	cmp    WORD PTR [rax+0x38],0x2
  410061:	je     4105f0 <__flatcc_fb_gen_c_builder@@Base+0x730>
  410067:	mov    rax,QWORD PTR [rbx+0xe0]
  41006e:	mov    r8,rbx
  410071:	mov    r9,QWORD PTR [rax+0x78]
  410075:	mov    rcx,rbx
  410078:	lea    rdx,[rip+0x25891]        # 435910 <_IO_stdin_used@@Base+0x8910>
  41007f:	mov    esi,0x1
  410084:	xor    eax,eax
  410086:	call   4053e0 <__fprintf_chk@plt>
  41008b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410092:	lea    rdx,[rip+0x35084]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  410099:	mov    esi,0x1
  41009e:	xor    eax,eax
  4100a0:	mov    rbp,rsp
  4100a3:	call   4053e0 <__fprintf_chk@plt>
  4100a8:	xor    eax,eax
  4100aa:	mov    ecx,0x1d
  4100af:	mov    rdi,rbp
  4100b2:	rep stos QWORD PTR es:[rdi],rax
  4100b5:	mov    rax,QWORD PTR [rbx+0xd8]
  4100bc:	mov    r12,QWORD PTR [rax+0x40]
  4100c0:	test   r12,r12
  4100c3:	je     41016d <__flatcc_fb_gen_c_builder@@Base+0x2ad>
  4100c9:	xor    eax,eax
  4100cb:	lea    r13,[rip+0x30086]        # 440158 <_IO_stdin_used@@Base+0x13158>
  4100d2:	nop    WORD PTR [rax+rax*1+0x0]
  4100d8:	cmp    WORD PTR [r12+0x10],0x3
  4100df:	jne    41013f <__flatcc_fb_gen_c_builder@@Base+0x27f>
  4100e1:	mov    rdi,QWORD PTR [r12+0x18]
  4100e6:	mov    rdx,rbp
  4100e9:	mov    rsi,r12
  4100ec:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4100f1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4100f8:	mov    r9,rbp
  4100fb:	mov    r8,rbp
  4100fe:	mov    rcx,rbp
  410101:	mov    rdx,r13
  410104:	mov    esi,0x1
  410109:	xor    eax,eax
  41010b:	call   4053e0 <__fprintf_chk@plt>
  410110:	sub    rsp,0x8
  410114:	push   rbp
  410115:	mov    rdi,QWORD PTR [rbx+0xd0]
  41011c:	mov    rcx,rbx
  41011f:	lea    rdx,[rip+0x3007a]        # 4401a0 <_IO_stdin_used@@Base+0x131a0>
  410126:	mov    r9,rbp
  410129:	mov    r8,rbx
  41012c:	mov    esi,0x1
  410131:	xor    eax,eax
  410133:	call   4053e0 <__fprintf_chk@plt>
  410138:	pop    rdx
  410139:	pop    rcx
  41013a:	mov    eax,0x1
  41013f:	mov    r12,QWORD PTR [r12]
  410143:	test   r12,r12
  410146:	jne    4100d8 <__flatcc_fb_gen_c_builder@@Base+0x218>
  410148:	test   eax,eax
  41014a:	je     410166 <__flatcc_fb_gen_c_builder@@Base+0x2a6>
  41014c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410153:	lea    rdx,[rip+0x34fc3]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  41015a:	mov    esi,0x1
  41015f:	xor    eax,eax
  410161:	call   4053e0 <__fprintf_chk@plt>
  410166:	mov    rax,QWORD PTR [rbx+0xd8]
  41016d:	mov    r12,QWORD PTR [rax+0x48]
  410171:	xor    r15d,r15d
  410174:	test   r12,r12
  410177:	je     41057a <__flatcc_fb_gen_c_builder@@Base+0x6ba>
  41017d:	nop    DWORD PTR [rax]
  410180:	mov    ecx,0x1d
  410185:	mov    rdi,rbp
  410188:	mov    rax,r15
  41018b:	rep stos QWORD PTR es:[rdi],rax
  41018e:	cmp    WORD PTR [r12+0x10],0x1
  410195:	jne    41068f <__flatcc_fb_gen_c_builder@@Base+0x7cf>
  41019b:	mov    rdi,QWORD PTR [r12+0x18]
  4101a0:	mov    rsi,r12
  4101a3:	mov    rdx,rbp
  4101a6:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4101ab:	mov    rdi,QWORD PTR [r12+0x28]
  4101b0:	lea    r14,[r12+0x28]
  4101b5:	call   40bd60 <__flatcc_gen_sort@@Base+0x160>
  4101ba:	mov    rdi,QWORD PTR [rbx+0xd0]
  4101c1:	mov    r13d,eax
  4101c4:	mov    rcx,rbp
  4101c7:	lea    rdx,[rip+0x269ab]        # 436b79 <_IO_stdin_used@@Base+0x9b79>
  4101ce:	mov    esi,0x1
  4101d3:	xor    eax,eax
  4101d5:	call   4053e0 <__fprintf_chk@plt>
  4101da:	mov    r8d,0x1
  4101e0:	xor    edx,edx
  4101e2:	mov    ecx,r13d
  4101e5:	mov    rsi,r14
  4101e8:	mov    rdi,rbx
  4101eb:	call   40c880 <__flatcc_gen_sort@@Base+0xc80>
  4101f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4101f7:	mov    rcx,rbp
  4101fa:	lea    rdx,[rip+0x26992]        # 436b93 <_IO_stdin_used@@Base+0x9b93>
  410201:	mov    esi,0x1
  410206:	xor    eax,eax
  410208:	call   4053e0 <__fprintf_chk@plt>
  41020d:	mov    r8d,0x1
  410213:	mov    ecx,r13d
  410216:	xor    edx,edx
  410218:	mov    rsi,r12
  41021b:	mov    rdi,rbx
  41021e:	call   40c0d0 <__flatcc_gen_sort@@Base+0x4d0>
  410223:	mov    rdi,QWORD PTR [rbx+0xd0]
  41022a:	lea    rdx,[rip+0x34eec]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  410231:	mov    esi,0x1
  410236:	xor    eax,eax
  410238:	call   4053e0 <__fprintf_chk@plt>
  41023d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410244:	mov    r9,rbp
  410247:	mov    r8,rbp
  41024a:	mov    rcx,rbp
  41024d:	lea    rdx,[rip+0x2ff74]        # 4401c8 <_IO_stdin_used@@Base+0x131c8>
  410254:	mov    esi,0x1
  410259:	xor    eax,eax
  41025b:	call   4053e0 <__fprintf_chk@plt>
  410260:	xor    r8d,r8d
  410263:	mov    ecx,r13d
  410266:	xor    edx,edx
  410268:	mov    rsi,r14
  41026b:	mov    rdi,rbx
  41026e:	call   40c880 <__flatcc_gen_sort@@Base+0xc80>
  410273:	mov    rdi,QWORD PTR [rbx+0xd0]
  41027a:	lea    rdx,[rip+0x26ad0]        # 436d51 <_IO_stdin_used@@Base+0x9d51>
  410281:	mov    esi,0x1
  410286:	xor    eax,eax
  410288:	call   4053e0 <__fprintf_chk@plt>
  41028d:	xor    r8d,r8d
  410290:	xor    ecx,ecx
  410292:	mov    edx,r13d
  410295:	mov    rsi,r14
  410298:	mov    rdi,rbx
  41029b:	call   40c1e0 <__flatcc_gen_sort@@Base+0x5e0>
  4102a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4102a7:	lea    rdx,[rip+0x26aa8]        # 436d56 <_IO_stdin_used@@Base+0x9d56>
  4102ae:	mov    esi,0x1
  4102b3:	xor    eax,eax
  4102b5:	call   4053e0 <__fprintf_chk@plt>
  4102ba:	sub    rsp,0x8
  4102be:	push   rbp
  4102bf:	mov    rdi,QWORD PTR [rbx+0xd0]
  4102c6:	mov    r9,rbp
  4102c9:	mov    r8,rbp
  4102cc:	mov    rcx,rbp
  4102cf:	lea    rdx,[rip+0x2ff1a]        # 4401f0 <_IO_stdin_used@@Base+0x131f0>
  4102d6:	mov    esi,0x1
  4102db:	xor    eax,eax
  4102dd:	call   4053e0 <__fprintf_chk@plt>
  4102e2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4102e9:	lea    rdx,[rip+0x26a63]        # 436d53 <_IO_stdin_used@@Base+0x9d53>
  4102f0:	mov    esi,0x1
  4102f5:	xor    eax,eax
  4102f7:	call   4053e0 <__fprintf_chk@plt>
  4102fc:	mov    r8d,0x1
  410302:	xor    ecx,ecx
  410304:	mov    edx,r13d
  410307:	mov    rsi,r14
  41030a:	mov    rdi,rbx
  41030d:	call   40c1e0 <__flatcc_gen_sort@@Base+0x5e0>
  410312:	mov    rdi,QWORD PTR [rbx+0xd0]
  410319:	lea    rdx,[rip+0x26a36]        # 436d56 <_IO_stdin_used@@Base+0x9d56>
  410320:	mov    esi,0x1
  410325:	xor    eax,eax
  410327:	call   4053e0 <__fprintf_chk@plt>
  41032c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410333:	mov    r9,rbp
  410336:	mov    r8,rbp
  410339:	mov    rcx,rbp
  41033c:	lea    rdx,[rip+0x2fee5]        # 440228 <_IO_stdin_used@@Base+0x13228>
  410343:	mov    esi,0x1
  410348:	xor    eax,eax
  41034a:	call   4053e0 <__fprintf_chk@plt>
  41034f:	xor    r8d,r8d
  410352:	mov    ecx,r13d
  410355:	xor    edx,edx
  410357:	mov    rsi,r14
  41035a:	mov    rdi,rbx
  41035d:	call   40c880 <__flatcc_gen_sort@@Base+0xc80>
  410362:	mov    rdi,QWORD PTR [rbx+0xd0]
  410369:	lea    rdx,[rip+0x269e1]        # 436d51 <_IO_stdin_used@@Base+0x9d51>
  410370:	mov    esi,0x1
  410375:	xor    eax,eax
  410377:	call   4053e0 <__fprintf_chk@plt>
  41037c:	xor    r8d,r8d
  41037f:	mov    ecx,0x2
  410384:	mov    edx,r13d
  410387:	mov    rsi,r14
  41038a:	mov    rdi,rbx
  41038d:	call   40c1e0 <__flatcc_gen_sort@@Base+0x5e0>
  410392:	mov    rdi,QWORD PTR [rbx+0xd0]
  410399:	lea    rdx,[rip+0x269b6]        # 436d56 <_IO_stdin_used@@Base+0x9d56>
  4103a0:	mov    esi,0x1
  4103a5:	xor    eax,eax
  4103a7:	call   4053e0 <__fprintf_chk@plt>
  4103ac:	mov    rdi,QWORD PTR [rbx+0xd0]
  4103b3:	mov    r9,rbp
  4103b6:	mov    r8,rbp
  4103b9:	mov    rcx,rbp
  4103bc:	lea    rdx,[rip+0x2fe95]        # 440258 <_IO_stdin_used@@Base+0x13258>
  4103c3:	mov    esi,0x1
  4103c8:	xor    eax,eax
  4103ca:	mov    QWORD PTR [rsp],rbp
  4103ce:	call   4053e0 <__fprintf_chk@plt>
  4103d3:	mov    rdi,QWORD PTR [rbx+0xd0]
  4103da:	lea    rdx,[rip+0x26972]        # 436d53 <_IO_stdin_used@@Base+0x9d53>
  4103e1:	mov    esi,0x1
  4103e6:	xor    eax,eax
  4103e8:	call   4053e0 <__fprintf_chk@plt>
  4103ed:	mov    r8d,0x1
  4103f3:	mov    ecx,0x2
  4103f8:	mov    edx,r13d
  4103fb:	mov    rsi,r14
  4103fe:	mov    rdi,rbx
  410401:	call   40c1e0 <__flatcc_gen_sort@@Base+0x5e0>
  410406:	mov    rdi,QWORD PTR [rbx+0xd0]
  41040d:	lea    rdx,[rip+0x26942]        # 436d56 <_IO_stdin_used@@Base+0x9d56>
  410414:	mov    esi,0x1
  410419:	xor    eax,eax
  41041b:	call   4053e0 <__fprintf_chk@plt>
  410420:	mov    rdi,QWORD PTR [rbx+0xd0]
  410427:	mov    r9,rbp
  41042a:	mov    r8,rbp
  41042d:	mov    rcx,rbp
  410430:	lea    rdx,[rip+0x2fe61]        # 440298 <_IO_stdin_used@@Base+0x13298>
  410437:	mov    esi,0x1
  41043c:	xor    eax,eax
  41043e:	call   4053e0 <__fprintf_chk@plt>
  410443:	xor    r8d,r8d
  410446:	mov    ecx,r13d
  410449:	xor    edx,edx
  41044b:	mov    rsi,r14
  41044e:	mov    rdi,rbx
  410451:	call   40c880 <__flatcc_gen_sort@@Base+0xc80>
  410456:	mov    rdi,QWORD PTR [rbx+0xd0]
  41045d:	lea    rdx,[rip+0x268ed]        # 436d51 <_IO_stdin_used@@Base+0x9d51>
  410464:	mov    esi,0x1
  410469:	xor    eax,eax
  41046b:	call   4053e0 <__fprintf_chk@plt>
  410470:	xor    r8d,r8d
  410473:	mov    ecx,0x1
  410478:	mov    edx,r13d
  41047b:	mov    rsi,r14
  41047e:	mov    rdi,rbx
  410481:	call   40c1e0 <__flatcc_gen_sort@@Base+0x5e0>
  410486:	mov    rdi,QWORD PTR [rbx+0xd0]
  41048d:	lea    rdx,[rip+0x268c2]        # 436d56 <_IO_stdin_used@@Base+0x9d56>
  410494:	mov    esi,0x1
  410499:	xor    eax,eax
  41049b:	call   4053e0 <__fprintf_chk@plt>
  4104a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4104a7:	mov    r9,rbp
  4104aa:	mov    r8,rbp
  4104ad:	mov    rcx,rbp
  4104b0:	lea    rdx,[rip+0x2fe11]        # 4402c8 <_IO_stdin_used@@Base+0x132c8>
  4104b7:	mov    esi,0x1
  4104bc:	xor    eax,eax
  4104be:	mov    QWORD PTR [rsp],rbp
  4104c2:	call   4053e0 <__fprintf_chk@plt>
  4104c7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4104ce:	xor    eax,eax
  4104d0:	lea    rdx,[rip+0x2687c]        # 436d53 <_IO_stdin_used@@Base+0x9d53>
  4104d7:	mov    esi,0x1
  4104dc:	call   4053e0 <__fprintf_chk@plt>
  4104e1:	mov    r8d,0x1
  4104e7:	mov    ecx,0x1
  4104ec:	mov    edx,r13d
  4104ef:	mov    rsi,r14
  4104f2:	mov    rdi,rbx
  4104f5:	call   40c1e0 <__flatcc_gen_sort@@Base+0x5e0>
  4104fa:	mov    rdi,QWORD PTR [rbx+0xd0]
  410501:	lea    rdx,[rip+0x2684e]        # 436d56 <_IO_stdin_used@@Base+0x9d56>
  410508:	mov    esi,0x1
  41050d:	xor    eax,eax
  41050f:	call   4053e0 <__fprintf_chk@plt>
  410514:	push   rbp
  410515:	movzx  eax,WORD PTR [r12+0xb0]
  41051e:	mov    rdi,QWORD PTR [rbx+0xd0]
  410525:	push   rbp
  410526:	mov    r9,rbp
  410529:	mov    r8,rbx
  41052c:	push   rax
  41052d:	mov    rcx,rbx
  410530:	lea    rdx,[rip+0x2fdd1]        # 440308 <_IO_stdin_used@@Base+0x13308>
  410537:	push   QWORD PTR [r12+0xb8]
  41053f:	mov    esi,0x1
  410544:	xor    eax,eax
  410546:	call   4053e0 <__fprintf_chk@plt>
  41054b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410552:	add    rsp,0x30
  410556:	lea    rdx,[rip+0x34bc0]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  41055d:	mov    esi,0x1
  410562:	xor    eax,eax
  410564:	call   4053e0 <__fprintf_chk@plt>
  410569:	mov    r12,QWORD PTR [r12+0xc0]
  410571:	test   r12,r12
  410574:	jne    410180 <__flatcc_fb_gen_c_builder@@Base+0x2c0>
  41057a:	mov    rdi,rbx
  41057d:	call   40e260 <__flatcc_gen_sort@@Base+0x2660>
  410582:	mov    rax,QWORD PTR [rbx+0xe0]
  410589:	mov    rdi,QWORD PTR [rbx+0xd0]
  410590:	mov    eax,DWORD PTR [rax+0xac]
  410596:	test   eax,eax
  410598:	jne    410670 <__flatcc_fb_gen_c_builder@@Base+0x7b0>
  41059e:	mov    rax,QWORD PTR [rbx+0xd8]
  4105a5:	lea    rdx,[rip+0x267b7]        # 436d63 <_IO_stdin_used@@Base+0x9d63>
  4105ac:	mov    rcx,QWORD PTR [rax+0x118]
  4105b3:	mov    esi,0x1
  4105b8:	xor    eax,eax
  4105ba:	call   4053e0 <__fprintf_chk@plt>
  4105bf:	xor    eax,eax
  4105c1:	mov    rcx,QWORD PTR [rsp+0xe8]
  4105c9:	xor    rcx,QWORD PTR fs:0x28
  4105d2:	jne    4106ae <__flatcc_fb_gen_c_builder@@Base+0x7ee>
  4105d8:	add    rsp,0xf8
  4105df:	pop    rbx
  4105e0:	pop    rbp
  4105e1:	pop    r12
  4105e3:	pop    r13
  4105e5:	pop    r14
  4105e7:	pop    r15
  4105e9:	ret    
  4105ea:	nop    WORD PTR [rax+rax*1+0x0]
  4105f0:	sub    rsp,0x8
  4105f4:	mov    r9d,DWORD PTR [rax+0x30]
  4105f8:	push   QWORD PTR [rax+0x28]
  4105fb:	mov    esi,0x1
  410600:	mov    r8,rbx
  410603:	mov    rcx,rbx
  410606:	lea    rdx,[rip+0x252d3]        # 4358e0 <_IO_stdin_used@@Base+0x88e0>
  41060d:	xor    eax,eax
  41060f:	call   4053e0 <__fprintf_chk@plt>
  410614:	pop    rsi
  410615:	pop    rdi
  410616:	jmp    41008b <__flatcc_fb_gen_c_builder@@Base+0x1cb>
  41061b:	nop    DWORD PTR [rax+rax*1+0x0]
  410620:	sub    rsp,0x8
  410624:	mov    r9d,DWORD PTR [rax+0x18]
  410628:	push   QWORD PTR [rax+0x10]
  41062b:	mov    r8,rbx
  41062e:	mov    rcx,rbx
  410631:	lea    rdx,[rip+0x25238]        # 435870 <_IO_stdin_used@@Base+0x8870>
  410638:	mov    esi,0x1
  41063d:	xor    eax,eax
  41063f:	call   4053e0 <__fprintf_chk@plt>
  410644:	pop    r8
  410646:	pop    r9
  410648:	jmp    41004e <__flatcc_fb_gen_c_builder@@Base+0x18e>
  41064d:	nop    DWORD PTR [rax]
  410650:	lea    rdx,[rip+0x1f0e9]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  410657:	mov    esi,0x1
  41065c:	xor    eax,eax
  41065e:	call   4053e0 <__fprintf_chk@plt>
  410663:	mov    rdi,QWORD PTR [rbx+0xd0]
  41066a:	jmp    410023 <__flatcc_fb_gen_c_builder@@Base+0x163>
  41066f:	nop
  410670:	lea    rdx,[rip+0x24f79]        # 4355f0 <_IO_stdin_used@@Base+0x85f0>
  410677:	mov    esi,0x1
  41067c:	xor    eax,eax
  41067e:	call   4053e0 <__fprintf_chk@plt>
  410683:	mov    rdi,QWORD PTR [rbx+0xd0]
  41068a:	jmp    41059e <__flatcc_fb_gen_c_builder@@Base+0x6de>
  41068f:	lea    rcx,[rip+0x3004a]        # 4406e0 <_IO_stdin_used@@Base+0x136e0>
  410696:	mov    edx,0x3f2
  41069b:	lea    rsi,[rip+0x26796]        # 436e38 <_IO_stdin_used@@Base+0x9e38>
  4106a2:	lea    rdi,[rip+0x1ea37]        # 42f0e0 <_IO_stdin_used@@Base+0x20e0>
  4106a9:	call   4052e0 <__assert_fail@plt>
  4106ae:	call   4052c0 <__stack_chk_fail@plt>
  4106b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106bd:	nop    DWORD PTR [rax]
  4106c0:	push   r15
  4106c2:	mov    ecx,0x1d
  4106c7:	push   r14
  4106c9:	push   r13
  4106cb:	push   r12
  4106cd:	lea    r12,[rip+0x30e11]        # 4414e5 <_IO_stdin_used@@Base+0x144e5>
  4106d4:	push   rbp
  4106d5:	mov    rbp,rsi
  4106d8:	push   rbx
  4106d9:	mov    rbx,rdi
  4106dc:	sub    rsp,0x1f8
  4106e3:	mov    rax,QWORD PTR fs:0x28
  4106ec:	mov    QWORD PTR [rsp+0x1e8],rax
  4106f4:	xor    eax,eax
  4106f6:	lea    r13,[rsp+0x10]
  4106fb:	mov    rdi,r13
  4106fe:	lea    r14,[rsp+0x100]
  410706:	mov    rdx,r13
  410709:	rep stos QWORD PTR es:[rdi],rax
  41070c:	mov    ecx,0x1d
  410711:	mov    rdi,r14
  410714:	rep stos QWORD PTR es:[rdi],rax
  410717:	mov    rdi,QWORD PTR [rsi+0x18]
  41071b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  410720:	mov    rdi,QWORD PTR [rbx+0xd0]
  410727:	mov    rcx,r13
  41072a:	lea    rdx,[rip+0x2ffc7]        # 4406f8 <_IO_stdin_used@@Base+0x136f8>
  410731:	mov    esi,0x1
  410736:	xor    eax,eax
  410738:	call   4053e0 <__fprintf_chk@plt>
  41073d:	mov    r15,QWORD PTR [rbp+0x28]
  410741:	mov    rdi,QWORD PTR [rbx+0xd0]
  410748:	mov    eax,0x1
  41074d:	lea    rbp,[rip+0x30bcc]        # 441320 <_IO_stdin_used@@Base+0x14320>
  410754:	test   r15,r15
  410757:	je     410832 <__flatcc_fb_gen_c_builder@@Base+0x972>
  41075d:	nop    DWORD PTR [rax]
  410760:	test   BYTE PTR [r15+0x70],0x4
  410765:	jne    41080a <__flatcc_fb_gen_c_builder@@Base+0x94a>
  41076b:	test   eax,eax
  41076d:	je     410ad0 <__flatcc_fb_gen_c_builder@@Base+0xc10>
  410773:	lea    rdx,[rip+0x30b25]        # 44129f <_IO_stdin_used@@Base+0x1429f>
  41077a:	mov    esi,0x1
  41077f:	xor    eax,eax
  410781:	call   4053e0 <__fprintf_chk@plt>
  410786:	movzx  eax,WORD PTR [r15+0x28]
  41078b:	movzx  r8d,BYTE PTR [r15+0x71]
  410790:	sub    eax,0x7
  410793:	and    r8d,0x1
  410797:	cmp    ax,0x8
  41079b:	ja     4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  41079d:	movzx  eax,ax
  4107a0:	movsxd rax,DWORD PTR [rbp+rax*4+0x0]
  4107a5:	add    rax,rbp
  4107a8:	notrack jmp rax
  4107ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4107b0:	mov    rcx,QWORD PTR [r15+0x88]
  4107b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4107be:	movzx  r9d,WORD PTR [r15+0x72]
  4107c3:	mov    r8,QWORD PTR [r15+0x80]
  4107ca:	lea    rdx,[rip+0x2ff8f]        # 440760 <_IO_stdin_used@@Base+0x13760>
  4107d1:	mov    esi,0x1
  4107d6:	xor    eax,eax
  4107d8:	call   4053e0 <__fprintf_chk@plt>
  4107dd:	nop    DWORD PTR [rax]
  4107e0:	mov    rax,QWORD PTR [r15+0x8]
  4107e4:	mov    rdi,QWORD PTR [rbx+0xd0]
  4107eb:	mov    rcx,QWORD PTR [rax+0x8]
  4107ef:	mov    r8,QWORD PTR [rax]
  4107f2:	mov    rdx,r12
  4107f5:	mov    esi,0x1
  4107fa:	xor    eax,eax
  4107fc:	call   4053e0 <__fprintf_chk@plt>
  410801:	mov    rdi,QWORD PTR [rbx+0xd0]
  410808:	xor    eax,eax
  41080a:	mov    r15,QWORD PTR [r15]
  41080d:	test   r15,r15
  410810:	jne    410760 <__flatcc_fb_gen_c_builder@@Base+0x8a0>
  410816:	test   eax,eax
  410818:	jne    410832 <__flatcc_fb_gen_c_builder@@Base+0x972>
  41081a:	lea    rdx,[rip+0x30a9b]        # 4412bc <_IO_stdin_used@@Base+0x142bc>
  410821:	mov    esi,0x1
  410826:	call   4053e0 <__fprintf_chk@plt>
  41082b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410832:	lea    rdx,[rip+0x30a93]        # 4412cc <_IO_stdin_used@@Base+0x142cc>
  410839:	mov    esi,0x1
  41083e:	xor    eax,eax
  410840:	call   4053e0 <__fprintf_chk@plt>
  410845:	mov    rdi,QWORD PTR [rbx+0xd0]
  41084c:	lea    rdx,[rip+0x348c8]        # 44511b <_IO_stdin_used@@Base+0x1811b>
  410853:	mov    esi,0x1
  410858:	xor    eax,eax
  41085a:	call   4053e0 <__fprintf_chk@plt>
  41085f:	mov    rdi,QWORD PTR [rbx+0xd0]
  410866:	mov    r9,r13
  410869:	mov    r8,r13
  41086c:	mov    rcx,r13
  41086f:	lea    rdx,[rip+0x30232]        # 440aa8 <_IO_stdin_used@@Base+0x13aa8>
  410876:	mov    esi,0x1
  41087b:	xor    eax,eax
  41087d:	call   4053e0 <__fprintf_chk@plt>
  410882:	mov    rdi,QWORD PTR [rbx+0xd0]
  410889:	mov    r9,r13
  41088c:	mov    r8,r13
  41088f:	mov    rcx,r13
  410892:	lea    rdx,[rip+0x302af]        # 440b48 <_IO_stdin_used@@Base+0x13b48>
  410899:	mov    esi,0x1
  41089e:	xor    eax,eax
  4108a0:	call   4053e0 <__fprintf_chk@plt>
  4108a5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4108ac:	mov    r8,r13
  4108af:	mov    rcx,r13
  4108b2:	lea    rdx,[rip+0x3033f]        # 440bf8 <_IO_stdin_used@@Base+0x13bf8>
  4108b9:	mov    esi,0x1
  4108be:	xor    eax,eax
  4108c0:	call   4053e0 <__fprintf_chk@plt>
  4108c5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4108cc:	mov    r8,rbx
  4108cf:	xor    eax,eax
  4108d1:	mov    r9,r13
  4108d4:	mov    rcx,r13
  4108d7:	lea    rdx,[rip+0x303d2]        # 440cb0 <_IO_stdin_used@@Base+0x13cb0>
  4108de:	mov    esi,0x1
  4108e3:	call   4053e0 <__fprintf_chk@plt>
  4108e8:	xor    eax,eax
  4108ea:	mov    rbx,QWORD PTR [rsp+0x1e8]
  4108f2:	xor    rbx,QWORD PTR fs:0x28
  4108fb:	jne    410c71 <__flatcc_fb_gen_c_builder@@Base+0xdb1>
  410901:	add    rsp,0x1f8
  410908:	pop    rbx
  410909:	pop    rbp
  41090a:	pop    r12
  41090c:	pop    r13
  41090e:	pop    r14
  410910:	pop    r15
  410912:	ret    
  410913:	nop    DWORD PTR [rax+rax*1+0x0]
  410918:	mov    rsi,QWORD PTR [r15+0x18]
  41091c:	mov    rdx,r14
  41091f:	mov    rdi,QWORD PTR [rsi+0x18]
  410923:	mov    DWORD PTR [rsp+0xc],r8d
  410928:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  41092d:	mov    rax,QWORD PTR [r15+0x18]
  410931:	mov    r8d,DWORD PTR [rsp+0xc]
  410936:	movzx  eax,WORD PTR [rax+0x10]
  41093a:	cmp    ax,0x1
  41093e:	je     410af0 <__flatcc_fb_gen_c_builder@@Base+0xc30>
  410944:	test   ax,ax
  410947:	je     410b38 <__flatcc_fb_gen_c_builder@@Base+0xc78>
  41094d:	cmp    ax,0x3
  410951:	je     410af0 <__flatcc_fb_gen_c_builder@@Base+0xc30>
  410957:	cmp    ax,0x4
  41095b:	jne    410c21 <__flatcc_fb_gen_c_builder@@Base+0xd61>
  410961:	mov    rcx,QWORD PTR [r15+0x88]
  410968:	mov    rdi,QWORD PTR [rbx+0xd0]
  41096f:	mov    r9,r14
  410972:	lea    rdx,[rip+0x3009f]        # 440a18 <_IO_stdin_used@@Base+0x13a18>
  410979:	mov    esi,0x1
  41097e:	xor    eax,eax
  410980:	call   4053e0 <__fprintf_chk@plt>
  410985:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  41098a:	nop    WORD PTR [rax+rax*1+0x0]
  410990:	mov    rsi,QWORD PTR [r15+0x90]
  410997:	test   rsi,rsi
  41099a:	je     410af0 <__flatcc_fb_gen_c_builder@@Base+0xc30>
  4109a0:	mov    rdi,QWORD PTR [rsi+0x18]
  4109a4:	mov    rdx,r14
  4109a7:	mov    DWORD PTR [rsp+0xc],r8d
  4109ac:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4109b1:	mov    rax,QWORD PTR [r15+0x90]
  4109b8:	mov    r8d,DWORD PTR [rsp+0xc]
  4109bd:	cmp    WORD PTR [rax+0x10],0x0
  4109c2:	jne    410b98 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  4109c8:	sub    rsp,0x8
  4109cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  4109d3:	movzx  r9d,WORD PTR [r15+0x72]
  4109d8:	mov    rcx,QWORD PTR [r15+0x88]
  4109df:	push   r14
  4109e1:	lea    rdx,[rip+0x2fda0]        # 440788 <_IO_stdin_used@@Base+0x13788>
  4109e8:	mov    esi,0x1
  4109ed:	xor    eax,eax
  4109ef:	call   4053e0 <__fprintf_chk@plt>
  4109f4:	pop    rdi
  4109f5:	pop    r8
  4109f7:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  4109fc:	nop    DWORD PTR [rax+0x0]
  410a00:	mov    rcx,QWORD PTR [r15+0x88]
  410a07:	mov    rdi,QWORD PTR [rbx+0xd0]
  410a0e:	lea    rdx,[rip+0x2fe3b]        # 440850 <_IO_stdin_used@@Base+0x13850>
  410a15:	mov    esi,0x1
  410a1a:	xor    eax,eax
  410a1c:	call   4053e0 <__fprintf_chk@plt>
  410a21:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410a30:	mov    rsi,QWORD PTR [r15+0x18]
  410a34:	mov    rdx,r14
  410a37:	mov    rdi,QWORD PTR [rsi+0x18]
  410a3b:	mov    DWORD PTR [rsp+0xc],r8d
  410a40:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  410a45:	mov    rax,QWORD PTR [r15+0x18]
  410a49:	movzx  eax,WORD PTR [rax+0x10]
  410a4d:	cmp    ax,0x1
  410a51:	je     4107b0 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
  410a57:	test   ax,ax
  410a5a:	mov    r8d,DWORD PTR [rsp+0xc]
  410a5f:	je     410b68 <__flatcc_fb_gen_c_builder@@Base+0xca8>
  410a65:	cmp    ax,0x3
  410a69:	je     4107b0 <__flatcc_fb_gen_c_builder@@Base+0x8f0>
  410a6f:	cmp    ax,0x4
  410a73:	jne    410bd1 <__flatcc_fb_gen_c_builder@@Base+0xd11>
  410a79:	mov    rcx,QWORD PTR [r15+0x88]
  410a80:	mov    rdi,QWORD PTR [rbx+0xd0]
  410a87:	mov    r9,r14
  410a8a:	lea    rdx,[rip+0x2fe57]        # 4408e8 <_IO_stdin_used@@Base+0x138e8>
  410a91:	mov    esi,0x1
  410a96:	xor    eax,eax
  410a98:	call   4053e0 <__fprintf_chk@plt>
  410a9d:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410aa2:	nop    WORD PTR [rax+rax*1+0x0]
  410aa8:	mov    rcx,QWORD PTR [r15+0x88]
  410aaf:	mov    rdi,QWORD PTR [rbx+0xd0]
  410ab6:	lea    rdx,[rip+0x2fdbb]        # 440878 <_IO_stdin_used@@Base+0x13878>
  410abd:	mov    esi,0x1
  410ac2:	xor    eax,eax
  410ac4:	call   4053e0 <__fprintf_chk@plt>
  410ac9:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410ace:	xchg   ax,ax
  410ad0:	lea    rdx,[rip+0x2fc69]        # 440740 <_IO_stdin_used@@Base+0x13740>
  410ad7:	mov    esi,0x1
  410adc:	xor    eax,eax
  410ade:	call   4053e0 <__fprintf_chk@plt>
  410ae3:	jmp    410786 <__flatcc_fb_gen_c_builder@@Base+0x8c6>
  410ae8:	nop    DWORD PTR [rax+rax*1+0x0]
  410af0:	mov    r9,QWORD PTR [r15+0x80]
  410af7:	mov    eax,0xffffffff
  410afc:	test   r9,r9
  410aff:	je     410b06 <__flatcc_fb_gen_c_builder@@Base+0xc46>
  410b01:	xor    edx,edx
  410b03:	div    r9
  410b06:	mov    rcx,QWORD PTR [r15+0x88]
  410b0d:	mov    rdi,QWORD PTR [rbx+0xd0]
  410b14:	push   rax
  410b15:	movzx  eax,WORD PTR [r15+0x72]
  410b1a:	push   rax
  410b1b:	lea    rdx,[rip+0x2fcee]        # 440810 <_IO_stdin_used@@Base+0x13810>
  410b22:	mov    esi,0x1
  410b27:	xor    eax,eax
  410b29:	call   4053e0 <__fprintf_chk@plt>
  410b2e:	pop    rax
  410b2f:	pop    rdx
  410b30:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410b35:	nop    DWORD PTR [rax]
  410b38:	mov    rcx,QWORD PTR [r15+0x88]
  410b3f:	mov    rdi,QWORD PTR [rbx+0xd0]
  410b46:	mov    r9,r14
  410b49:	lea    rdx,[rip+0x2fe88]        # 4409d8 <_IO_stdin_used@@Base+0x139d8>
  410b50:	mov    esi,0x1
  410b55:	xor    eax,eax
  410b57:	call   4053e0 <__fprintf_chk@plt>
  410b5c:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410b61:	nop    DWORD PTR [rax+0x0]
  410b68:	mov    rcx,QWORD PTR [r15+0x88]
  410b6f:	mov    rdi,QWORD PTR [rbx+0xd0]
  410b76:	mov    r9,r14
  410b79:	lea    rdx,[rip+0x2fd28]        # 4408a8 <_IO_stdin_used@@Base+0x138a8>
  410b80:	mov    esi,0x1
  410b85:	xor    eax,eax
  410b87:	call   4053e0 <__fprintf_chk@plt>
  410b8c:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410b91:	nop    DWORD PTR [rax+0x0]
  410b98:	movzx  eax,WORD PTR [r15+0x72]
  410b9d:	sub    rsp,0x8
  410ba1:	mov    rcx,QWORD PTR [r15+0x88]
  410ba8:	mov    r9,QWORD PTR [r15+0x80]
  410baf:	mov    rdi,QWORD PTR [rbx+0xd0]
  410bb6:	push   rax
  410bb7:	mov    esi,0x1
  410bbc:	lea    rdx,[rip+0x2fc0d]        # 4407d0 <_IO_stdin_used@@Base+0x137d0>
  410bc3:	xor    eax,eax
  410bc5:	call   4053e0 <__fprintf_chk@plt>
  410bca:	pop    rcx
  410bcb:	pop    rsi
  410bcc:	jmp    4107e0 <__flatcc_fb_gen_c_builder@@Base+0x920>
  410bd1:	mov    rax,QWORD PTR [rip+0x40410]        # 450fe8 <stderr@GLIBC_2.2.5>
  410bd8:	lea    rcx,[rip+0x2fd89]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410bdf:	mov    rdi,QWORD PTR [rax]
  410be2:	lea    rdx,[rip+0x24e6a]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  410be9:	mov    esi,0x1
  410bee:	lea    r9,[rip+0x2fd33]        # 440928 <_IO_stdin_used@@Base+0x13928>
  410bf5:	mov    r8d,0xb2
  410bfb:	xor    eax,eax
  410bfd:	call   4053e0 <__fprintf_chk@plt>
  410c02:	lea    rcx,[rip+0x30747]        # 441350 <_IO_stdin_used@@Base+0x14350>
  410c09:	mov    edx,0xb2
  410c0e:	lea    rsi,[rip+0x2fd53]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410c15:	lea    rdi,[rip+0x25efd]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  410c1c:	call   4052e0 <__assert_fail@plt>
  410c21:	mov    rax,QWORD PTR [rip+0x403c0]        # 450fe8 <stderr@GLIBC_2.2.5>
  410c28:	lea    rcx,[rip+0x2fd39]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410c2f:	mov    rdi,QWORD PTR [rax]
  410c32:	lea    rdx,[rip+0x24e1a]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  410c39:	mov    esi,0x1
  410c3e:	lea    r9,[rip+0x2fe1b]        # 440a60 <_IO_stdin_used@@Base+0x13a60>
  410c45:	mov    r8d,0xca
  410c4b:	xor    eax,eax
  410c4d:	call   4053e0 <__fprintf_chk@plt>
  410c52:	lea    rcx,[rip+0x306f7]        # 441350 <_IO_stdin_used@@Base+0x14350>
  410c59:	mov    edx,0xca
  410c5e:	lea    rsi,[rip+0x2fd03]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410c65:	lea    rdi,[rip+0x25ead]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  410c6c:	call   4052e0 <__assert_fail@plt>
  410c71:	call   4052c0 <__stack_chk_fail@plt>
  410c76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c80:	push   r15
  410c82:	mov    ecx,0x1d
  410c87:	push   r14
  410c89:	push   r13
  410c8b:	mov    r13,rsi
  410c8e:	push   r12
  410c90:	push   rbp
  410c91:	mov    rbp,rdi
  410c94:	push   rbx
  410c95:	sub    rsp,0x1e8
  410c9c:	mov    rax,QWORD PTR fs:0x28
  410ca5:	mov    QWORD PTR [rsp+0x1d8],rax
  410cad:	xor    eax,eax
  410caf:	mov    rbx,rsp
  410cb2:	mov    rdi,rbx
  410cb5:	lea    r12,[rsp+0xf0]
  410cbd:	mov    rdx,rbx
  410cc0:	rep stos QWORD PTR es:[rdi],rax
  410cc3:	mov    ecx,0x1d
  410cc8:	mov    rdi,r12
  410ccb:	rep stos QWORD PTR es:[rdi],rax
  410cce:	mov    rdi,QWORD PTR [rsi+0x18]
  410cd2:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  410cd7:	mov    rdi,QWORD PTR [rbp+0x0]
  410cdb:	mov    rcx,rbx
  410cde:	lea    rdx,[rip+0x3008b]        # 440d70 <_IO_stdin_used@@Base+0x13d70>
  410ce5:	mov    esi,0x1
  410cea:	xor    eax,eax
  410cec:	call   4053e0 <__fprintf_chk@plt>
  410cf1:	mov    rbx,QWORD PTR [r13+0x28]
  410cf5:	test   rbx,rbx
  410cf8:	je     410e08 <__flatcc_fb_gen_c_builder@@Base+0xf48>
  410cfe:	lea    r13,[rip+0x301ab]        # 440eb0 <_IO_stdin_used@@Base+0x13eb0>
  410d05:	jmp    410d66 <__flatcc_fb_gen_c_builder@@Base+0xea6>
  410d07:	nop    WORD PTR [rax+rax*1+0x0]
  410d10:	mov    rsi,QWORD PTR [rbx+0x18]
  410d14:	mov    rdx,r12
  410d17:	mov    rdi,QWORD PTR [rsi+0x18]
  410d1b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  410d20:	mov    rdx,QWORD PTR [rbx+0x18]
  410d24:	movzx  eax,WORD PTR [rdx+0x10]
  410d28:	test   ax,ax
  410d2b:	jne    410e50 <__flatcc_fb_gen_c_builder@@Base+0xf90>
  410d31:	sub    rsp,0x8
  410d35:	mov    rcx,QWORD PTR [rbx+0x48]
  410d39:	push   r15
  410d3b:	mov    r9d,r14d
  410d3e:	mov    r8,r12
  410d41:	lea    rdx,[rip+0x30088]        # 440dd0 <_IO_stdin_used@@Base+0x13dd0>
  410d48:	mov    rdi,QWORD PTR [rbp+0x0]
  410d4c:	mov    esi,0x1
  410d51:	xor    eax,eax
  410d53:	call   4053e0 <__fprintf_chk@plt>
  410d58:	pop    rax
  410d59:	pop    rdx
  410d5a:	mov    rbx,QWORD PTR [rbx]
  410d5d:	test   rbx,rbx
  410d60:	je     410e08 <__flatcc_fb_gen_c_builder@@Base+0xf48>
  410d66:	mov    rax,QWORD PTR [rbx+0x8]
  410d6a:	mov    r15,QWORD PTR [rax]
  410d6d:	mov    r14,QWORD PTR [rax+0x8]
  410d71:	movzx  eax,WORD PTR [rbx+0x28]
  410d75:	cmp    ax,0xa
  410d79:	je     410de0 <__flatcc_fb_gen_c_builder@@Base+0xf20>
  410d7b:	cmp    ax,0xe
  410d7f:	je     410d10 <__flatcc_fb_gen_c_builder@@Base+0xe50>
  410d81:	test   ax,ax
  410d84:	je     410d5a <__flatcc_fb_gen_c_builder@@Base+0xe9a>
  410d86:	mov    rax,QWORD PTR [rip+0x4025b]        # 450fe8 <stderr@GLIBC_2.2.5>
  410d8d:	lea    rcx,[rip+0x2fbd4]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410d94:	mov    rdi,QWORD PTR [rax]
  410d97:	lea    rdx,[rip+0x24cb5]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  410d9e:	mov    esi,0x1
  410da3:	lea    r9,[rip+0x30146]        # 440ef0 <_IO_stdin_used@@Base+0x13ef0>
  410daa:	mov    r8d,0x53
  410db0:	xor    eax,eax
  410db2:	call   4053e0 <__fprintf_chk@plt>
  410db7:	lea    rcx,[rip+0x305b2]        # 441370 <_IO_stdin_used@@Base+0x14370>
  410dbe:	mov    edx,0x53
  410dc3:	lea    rsi,[rip+0x2fb9e]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410dca:	lea    rdi,[rip+0x25d48]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  410dd1:	call   4052e0 <__assert_fail@plt>
  410dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410de0:	mov    ecx,DWORD PTR [rbx+0x48]
  410de3:	mov    rdi,QWORD PTR [rbp+0x0]
  410de7:	mov    r9,r15
  410dea:	mov    r8d,r14d
  410ded:	mov    rdx,r13
  410df0:	mov    esi,0x1
  410df5:	xor    eax,eax
  410df7:	call   4053e0 <__fprintf_chk@plt>
  410dfc:	mov    rbx,QWORD PTR [rbx]
  410dff:	test   rbx,rbx
  410e02:	jne    410d66 <__flatcc_fb_gen_c_builder@@Base+0xea6>
  410e08:	mov    rdi,QWORD PTR [rbp+0x0]
  410e0c:	xor    eax,eax
  410e0e:	lea    rdx,[rip+0x30113]        # 440f28 <_IO_stdin_used@@Base+0x13f28>
  410e15:	mov    esi,0x1
  410e1a:	call   4053e0 <__fprintf_chk@plt>
  410e1f:	xor    eax,eax
  410e21:	mov    rcx,QWORD PTR [rsp+0x1d8]
  410e29:	xor    rcx,QWORD PTR fs:0x28
  410e32:	jne    410ec9 <__flatcc_fb_gen_c_builder@@Base+0x1009>
  410e38:	add    rsp,0x1e8
  410e3f:	pop    rbx
  410e40:	pop    rbp
  410e41:	pop    r12
  410e43:	pop    r13
  410e45:	pop    r14
  410e47:	pop    r15
  410e49:	ret    
  410e4a:	nop    WORD PTR [rax+rax*1+0x0]
  410e50:	cmp    ax,0x1
  410e54:	jne    410e79 <__flatcc_fb_gen_c_builder@@Base+0xfb9>
  410e56:	movzx  r9d,WORD PTR [rdx+0xb0]
  410e5e:	mov    r8,QWORD PTR [rdx+0xb8]
  410e65:	mov    rcx,QWORD PTR [rbx+0x48]
  410e69:	push   r15
  410e6b:	lea    rdx,[rip+0x2ffae]        # 440e20 <_IO_stdin_used@@Base+0x13e20>
  410e72:	push   r14
  410e74:	jmp    410d48 <__flatcc_fb_gen_c_builder@@Base+0xe88>
  410e79:	mov    rax,QWORD PTR [rip+0x40168]        # 450fe8 <stderr@GLIBC_2.2.5>
  410e80:	lea    rcx,[rip+0x2fae1]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410e87:	mov    rdi,QWORD PTR [rax]
  410e8a:	lea    rdx,[rip+0x24bc2]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  410e91:	mov    esi,0x1
  410e96:	lea    r9,[rip+0x2ffd3]        # 440e70 <_IO_stdin_used@@Base+0x13e70>
  410e9d:	mov    r8d,0x4a
  410ea3:	xor    eax,eax
  410ea5:	call   4053e0 <__fprintf_chk@plt>
  410eaa:	lea    rcx,[rip+0x304bf]        # 441370 <_IO_stdin_used@@Base+0x14370>
  410eb1:	mov    edx,0x4a
  410eb6:	lea    rsi,[rip+0x2faab]        # 440968 <_IO_stdin_used@@Base+0x13968>
  410ebd:	lea    rdi,[rip+0x25c55]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  410ec4:	call   4052e0 <__assert_fail@plt>
  410ec9:	call   4052c0 <__stack_chk_fail@plt>
  410ece:	xchg   ax,ax

0000000000410ed0 <__flatcc_fb_gen_c_verifier@@Base>:
  410ed0:	endbr64 
  410ed4:	push   r13
  410ed6:	lea    rdx,[rip+0x3007b]        # 440f58 <_IO_stdin_used@@Base+0x13f58>
  410edd:	mov    esi,0x1
  410ee2:	push   r12
  410ee4:	push   rbp
  410ee5:	push   rbx
  410ee6:	mov    rbx,rdi
  410ee9:	sub    rsp,0xf8
  410ef0:	mov    rax,QWORD PTR fs:0x28
  410ef9:	mov    QWORD PTR [rsp+0xe8],rax
  410f01:	xor    eax,eax
  410f03:	mov    rax,QWORD PTR [rdi+0xd8]
  410f0a:	mov    rdi,QWORD PTR [rdi+0xd0]
  410f11:	mov    rcx,QWORD PTR [rax+0x118]
  410f18:	xor    eax,eax
  410f1a:	mov    r8,rcx
  410f1d:	call   4053e0 <__fprintf_chk@plt>
  410f22:	mov    rdi,QWORD PTR [rbx+0xd0]
  410f29:	lea    rdx,[rip+0x1e6f8]        # 42f628 <_IO_stdin_used@@Base+0x2628>
  410f30:	mov    esi,0x1
  410f35:	xor    eax,eax
  410f37:	call   4053e0 <__fprintf_chk@plt>
  410f3c:	mov    rax,QWORD PTR [rbx+0xd8]
  410f43:	mov    rdi,QWORD PTR [rbx+0xd0]
  410f4a:	mov    rcx,QWORD PTR [rax+0x118]
  410f51:	lea    rdx,[rip+0x25dc1]        # 436d19 <_IO_stdin_used@@Base+0x9d19>
  410f58:	mov    esi,0x1
  410f5d:	xor    eax,eax
  410f5f:	call   4053e0 <__fprintf_chk@plt>
  410f64:	mov    rax,QWORD PTR [rbx+0xd8]
  410f6b:	mov    rdi,QWORD PTR [rbx+0xd0]
  410f72:	mov    rcx,QWORD PTR [rax+0x110]
  410f79:	lea    rdx,[rip+0x25dae]        # 436d2e <_IO_stdin_used@@Base+0x9d2e>
  410f80:	mov    esi,0x1
  410f85:	xor    eax,eax
  410f87:	call   4053e0 <__fprintf_chk@plt>
  410f8c:	mov    rdi,QWORD PTR [rbx+0xd0]
  410f93:	lea    rdx,[rip+0x25d20]        # 436cba <_IO_stdin_used@@Base+0x9cba>
  410f9a:	mov    esi,0x1
  410f9f:	xor    eax,eax
  410fa1:	call   4053e0 <__fprintf_chk@plt>
  410fa6:	mov    rdi,QWORD PTR [rbx+0xd0]
  410fad:	lea    rdx,[rip+0x2ffd4]        # 440f88 <_IO_stdin_used@@Base+0x13f88>
  410fb4:	mov    esi,0x1
  410fb9:	xor    eax,eax
  410fbb:	call   4053e0 <__fprintf_chk@plt>
  410fc0:	lea    rsi,[rip+0x1d26a]        # 42e231 <_IO_stdin_used@@Base+0x1231>
  410fc7:	mov    rdi,rbx
  410fca:	lea    rdx,[rip+0x30319]        # 4412ea <_IO_stdin_used@@Base+0x142ea>
  410fd1:	call   406620 <__flatcc_fb_gen_c_includes@@Base>
  410fd6:	mov    rax,QWORD PTR [rbx+0xe0]
  410fdd:	mov    rdi,QWORD PTR [rbx+0xd0]
  410fe4:	mov    esi,DWORD PTR [rax+0xac]
  410fea:	test   esi,esi
  410fec:	jne    411290 <__flatcc_fb_gen_c_verifier@@Base+0x3c0>
  410ff2:	lea    rdx,[rip+0x34124]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  410ff9:	mov    esi,0x1
  410ffe:	xor    eax,eax
  411000:	mov    r12,rsp
  411003:	call   4053e0 <__fprintf_chk@plt>
  411008:	xor    eax,eax
  41100a:	mov    ecx,0x1d
  41100f:	mov    rdi,r12
  411012:	rep stos QWORD PTR es:[rdi],rax
  411015:	mov    rax,QWORD PTR [rbx+0xd8]
  41101c:	lea    r13,[rip+0x2ff8d]        # 440fb0 <_IO_stdin_used@@Base+0x13fb0>
  411023:	mov    rbp,QWORD PTR [rax+0x40]
  411027:	test   rbp,rbp
  41102a:	jne    411039 <__flatcc_fb_gen_c_verifier@@Base+0x169>
  41102c:	jmp    411071 <__flatcc_fb_gen_c_verifier@@Base+0x1a1>
  41102e:	xchg   ax,ax
  411030:	mov    rbp,QWORD PTR [rbp+0x0]
  411034:	test   rbp,rbp
  411037:	je     411071 <__flatcc_fb_gen_c_verifier@@Base+0x1a1>
  411039:	cmp    WORD PTR [rbp+0x10],0x0
  41103e:	jne    411030 <__flatcc_fb_gen_c_verifier@@Base+0x160>
  411040:	mov    rdi,QWORD PTR [rbp+0x18]
  411044:	mov    rsi,rbp
  411047:	mov    rdx,r12
  41104a:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  41104f:	mov    rdi,QWORD PTR [rbx+0xd0]
  411056:	mov    rcx,r12
  411059:	mov    rdx,r13
  41105c:	mov    esi,0x1
  411061:	xor    eax,eax
  411063:	call   4053e0 <__fprintf_chk@plt>
  411068:	mov    rbp,QWORD PTR [rbp+0x0]
  41106c:	test   rbp,rbp
  41106f:	jne    411039 <__flatcc_fb_gen_c_verifier@@Base+0x169>
  411071:	mov    rdi,QWORD PTR [rbx+0xd0]
  411078:	lea    rdx,[rip+0x3409e]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  41107f:	mov    esi,0x1
  411084:	xor    eax,eax
  411086:	call   4053e0 <__fprintf_chk@plt>
  41108b:	mov    rax,QWORD PTR [rbx+0xd8]
  411092:	lea    r13,[rbx+0xd0]
  411099:	mov    rbp,QWORD PTR [rax+0x40]
  41109d:	test   rbp,rbp
  4110a0:	jne    4110b9 <__flatcc_fb_gen_c_verifier@@Base+0x1e9>
  4110a2:	jmp    41122c <__flatcc_fb_gen_c_verifier@@Base+0x35c>
  4110a7:	nop    WORD PTR [rax+rax*1+0x0]
  4110b0:	mov    rbp,QWORD PTR [rbp+0x0]
  4110b4:	test   rbp,rbp
  4110b7:	je     4110d4 <__flatcc_fb_gen_c_verifier@@Base+0x204>
  4110b9:	cmp    WORD PTR [rbp+0x10],0x4
  4110be:	jne    4110b0 <__flatcc_fb_gen_c_verifier@@Base+0x1e0>
  4110c0:	mov    rsi,rbp
  4110c3:	mov    rdi,r13
  4110c6:	call   410c80 <__flatcc_fb_gen_c_builder@@Base+0xdc0>
  4110cb:	mov    rbp,QWORD PTR [rbp+0x0]
  4110cf:	test   rbp,rbp
  4110d2:	jne    4110b9 <__flatcc_fb_gen_c_verifier@@Base+0x1e9>
  4110d4:	mov    rax,QWORD PTR [rbx+0xd8]
  4110db:	mov    rbp,QWORD PTR [rax+0x40]
  4110df:	test   rbp,rbp
  4110e2:	je     41122c <__flatcc_fb_gen_c_verifier@@Base+0x35c>
  4110e8:	xor    r13d,r13d
  4110eb:	jmp    4110fd <__flatcc_fb_gen_c_verifier@@Base+0x22d>
  4110ed:	nop    DWORD PTR [rax]
  4110f0:	mov    rbp,QWORD PTR [rbp+0x0]
  4110f4:	test   rbp,rbp
  4110f7:	je     4111f1 <__flatcc_fb_gen_c_verifier@@Base+0x321>
  4110fd:	cmp    WORD PTR [rbp+0x10],0x1
  411102:	jne    4110f0 <__flatcc_fb_gen_c_verifier@@Base+0x220>
  411104:	mov    rax,r13
  411107:	mov    ecx,0x1d
  41110c:	mov    rdi,r12
  41110f:	rep stos QWORD PTR es:[rdi],rax
  411112:	mov    rsi,rbp
  411115:	mov    rdx,r12
  411118:	mov    rdi,QWORD PTR [rbp+0x18]
  41111c:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  411121:	movzx  eax,WORD PTR [rbp+0xb0]
  411128:	sub    rsp,0x8
  41112c:	mov    r9,QWORD PTR [rbp+0xb8]
  411133:	push   rax
  411134:	mov    rdi,QWORD PTR [rbx+0xd0]
  41113b:	mov    r8,r12
  41113e:	mov    rcx,r12
  411141:	lea    rdx,[rip+0x2feb0]        # 440ff8 <_IO_stdin_used@@Base+0x13ff8>
  411148:	mov    esi,0x1
  41114d:	xor    eax,eax
  41114f:	call   4053e0 <__fprintf_chk@plt>
  411154:	movzx  eax,WORD PTR [rbp+0xb0]
  41115b:	mov    r9,QWORD PTR [rbp+0xb8]
  411162:	mov    rdi,QWORD PTR [rbx+0xd0]
  411169:	mov    DWORD PTR [rsp],eax
  41116c:	mov    r8,r12
  41116f:	mov    rcx,r12
  411172:	lea    rdx,[rip+0x2ff17]        # 441090 <_IO_stdin_used@@Base+0x14090>
  411179:	mov    esi,0x1
  41117e:	xor    eax,eax
  411180:	call   4053e0 <__fprintf_chk@plt>
  411185:	movzx  eax,WORD PTR [rbp+0xb0]
  41118c:	mov    r9,QWORD PTR [rbp+0xb8]
  411193:	mov    rdi,QWORD PTR [rbx+0xd0]
  41119a:	mov    DWORD PTR [rsp],eax
  41119d:	mov    r8,rbx
  4111a0:	mov    rcx,r12
  4111a3:	lea    rdx,[rip+0x2ff8e]        # 441138 <_IO_stdin_used@@Base+0x14138>
  4111aa:	mov    esi,0x1
  4111af:	xor    eax,eax
  4111b1:	call   4053e0 <__fprintf_chk@plt>
  4111b6:	movzx  r9d,WORD PTR [rbp+0xb0]
  4111be:	mov    r8,QWORD PTR [rbp+0xb8]
  4111c5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4111cc:	mov    rcx,r12
  4111cf:	lea    rdx,[rip+0x3001a]        # 4411f0 <_IO_stdin_used@@Base+0x141f0>
  4111d6:	mov    esi,0x1
  4111db:	xor    eax,eax
  4111dd:	call   4053e0 <__fprintf_chk@plt>
  4111e2:	mov    rbp,QWORD PTR [rbp+0x0]
  4111e6:	pop    rdx
  4111e7:	pop    rcx
  4111e8:	test   rbp,rbp
  4111eb:	jne    4110fd <__flatcc_fb_gen_c_verifier@@Base+0x22d>
  4111f1:	mov    rax,QWORD PTR [rbx+0xd8]
  4111f8:	mov    rbp,QWORD PTR [rax+0x40]
  4111fc:	test   rbp,rbp
  4111ff:	jne    411211 <__flatcc_fb_gen_c_verifier@@Base+0x341>
  411201:	jmp    41122c <__flatcc_fb_gen_c_verifier@@Base+0x35c>
  411203:	nop    DWORD PTR [rax+rax*1+0x0]
  411208:	mov    rbp,QWORD PTR [rbp+0x0]
  41120c:	test   rbp,rbp
  41120f:	je     41122c <__flatcc_fb_gen_c_verifier@@Base+0x35c>
  411211:	cmp    WORD PTR [rbp+0x10],0x0
  411216:	jne    411208 <__flatcc_fb_gen_c_verifier@@Base+0x338>
  411218:	mov    rsi,rbp
  41121b:	mov    rdi,rbx
  41121e:	call   4106c0 <__flatcc_fb_gen_c_builder@@Base+0x800>
  411223:	mov    rbp,QWORD PTR [rbp+0x0]
  411227:	test   rbp,rbp
  41122a:	jne    411211 <__flatcc_fb_gen_c_verifier@@Base+0x341>
  41122c:	mov    rax,QWORD PTR [rbx+0xe0]
  411233:	mov    rdi,QWORD PTR [rbx+0xd0]
  41123a:	mov    eax,DWORD PTR [rax+0xac]
  411240:	test   eax,eax
  411242:	jne    4112b0 <__flatcc_fb_gen_c_verifier@@Base+0x3e0>
  411244:	mov    rax,QWORD PTR [rbx+0xd8]
  41124b:	lea    rdx,[rip+0x300a4]        # 4412f6 <_IO_stdin_used@@Base+0x142f6>
  411252:	mov    rcx,QWORD PTR [rax+0x118]
  411259:	mov    esi,0x1
  41125e:	xor    eax,eax
  411260:	call   4053e0 <__fprintf_chk@plt>
  411265:	xor    eax,eax
  411267:	mov    rdx,QWORD PTR [rsp+0xe8]
  41126f:	xor    rdx,QWORD PTR fs:0x28
  411278:	jne    4112cf <__flatcc_fb_gen_c_verifier@@Base+0x3ff>
  41127a:	add    rsp,0xf8
  411281:	pop    rbx
  411282:	pop    rbp
  411283:	pop    r12
  411285:	pop    r13
  411287:	ret    
  411288:	nop    DWORD PTR [rax+rax*1+0x0]
  411290:	lea    rdx,[rip+0x1e4a9]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  411297:	mov    esi,0x1
  41129c:	xor    eax,eax
  41129e:	call   4053e0 <__fprintf_chk@plt>
  4112a3:	mov    rdi,QWORD PTR [rbx+0xd0]
  4112aa:	jmp    410ff2 <__flatcc_fb_gen_c_verifier@@Base+0x122>
  4112af:	nop
  4112b0:	lea    rdx,[rip+0x24339]        # 4355f0 <_IO_stdin_used@@Base+0x85f0>
  4112b7:	mov    esi,0x1
  4112bc:	xor    eax,eax
  4112be:	call   4053e0 <__fprintf_chk@plt>
  4112c3:	mov    rdi,QWORD PTR [rbx+0xd0]
  4112ca:	jmp    411244 <__flatcc_fb_gen_c_verifier@@Base+0x374>
  4112cf:	call   4052c0 <__stack_chk_fail@plt>
  4112d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112de:	xchg   ax,ax
  4112e0:	endbr64 
  4112e4:	mov    rdx,rdi
  4112e7:	lea    rdi,[rsi+0x8]
  4112eb:	lea    rsi,[rip+0x3f1e]        # 415210 <__flatcc_fb_gen_c_verifier@@Base+0x4340>
  4112f2:	jmp    41b580 <fb_symbol_table_visit@@Base>
  4112f7:	nop    WORD PTR [rax+rax*1+0x0]
  411300:	endbr64 
  411304:	mov    rdx,rdi
  411307:	lea    rdi,[rsi+0x8]
  41130b:	lea    rsi,[rip+0x40be]        # 4153d0 <__flatcc_fb_gen_c_verifier@@Base+0x4500>
  411312:	jmp    41b580 <fb_symbol_table_visit@@Base>
  411317:	nop    WORD PTR [rax+rax*1+0x0]
  411320:	push   rbp
  411321:	movsxd rsi,esi
  411324:	mov    rbp,rsi
  411327:	push   rbx
  411328:	lea    rcx,[rip+0xe1]        # 411410 <__flatcc_fb_gen_c_verifier@@Base+0x540>
  41132f:	mov    edx,0x10
  411334:	sub    rsp,0x8
  411338:	mov    rbx,rdi
  41133b:	call   405270 <qsort@plt>
  411340:	test   ebp,ebp
  411342:	jle    41136e <__flatcc_fb_gen_c_verifier@@Base+0x49e>
  411344:	lea    ecx,[rbp-0x1]
  411347:	xor    eax,eax
  411349:	jmp    411353 <__flatcc_fb_gen_c_verifier@@Base+0x483>
  41134b:	nop    DWORD PTR [rax+rax*1+0x0]
  411350:	mov    rax,rdx
  411353:	mov    rdx,rax
  411356:	shl    rdx,0x4
  41135a:	mov    rdx,QWORD PTR [rbx+rdx*1]
  41135e:	mov    QWORD PTR [rdx+0xc8],rax
  411365:	lea    rdx,[rax+0x1]
  411369:	cmp    rcx,rax
  41136c:	jne    411350 <__flatcc_fb_gen_c_verifier@@Base+0x480>
  41136e:	add    rsp,0x8
  411372:	pop    rbx
  411373:	pop    rbp
  411374:	ret    
  411375:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411380:	endbr64 
  411384:	push   rbp
  411385:	push   rbx
  411386:	sub    rsp,0x8
  41138a:	mov    ebp,DWORD PTR [rsi+0x8]
  41138d:	movsxd rbx,DWORD PTR [rdi+0x8]
  411391:	movsxd rdx,ebp
  411394:	cmp    ebx,ebp
  411396:	cmovle rdx,rbx
  41139a:	mov    rsi,QWORD PTR [rsi]
  41139d:	mov    rdi,QWORD PTR [rdi]
  4113a0:	sub    ebx,ebp
  4113a2:	call   405310 <memcmp@plt>
  4113a7:	test   eax,eax
  4113a9:	cmove  eax,ebx
  4113ac:	add    rsp,0x8
  4113b0:	pop    rbx
  4113b1:	pop    rbp
  4113b2:	ret    
  4113b3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4113be:	xchg   ax,ax
  4113c0:	push   rbx
  4113c1:	mov    rbx,rdi
  4113c4:	mov    rdi,QWORD PTR [rdi+0x18]
  4113c8:	test   rdi,rdi
  4113cb:	je     4113d2 <__flatcc_fb_gen_c_verifier@@Base+0x502>
  4113cd:	call   405230 <free@plt>
  4113d2:	mov    rdi,QWORD PTR [rbx+0x20]
  4113d6:	test   rdi,rdi
  4113d9:	je     4113e0 <__flatcc_fb_gen_c_verifier@@Base+0x510>
  4113db:	call   405230 <free@plt>
  4113e0:	mov    rdi,QWORD PTR [rbx+0x28]
  4113e4:	test   rdi,rdi
  4113e7:	je     4113ee <__flatcc_fb_gen_c_verifier@@Base+0x51e>
  4113e9:	call   405230 <free@plt>
  4113ee:	vpxor  xmm0,xmm0,xmm0
  4113f2:	vmovaps XMMWORD PTR [rbx],xmm0
  4113f6:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  4113fb:	vmovaps XMMWORD PTR [rbx+0x20],xmm0
  411400:	vmovaps XMMWORD PTR [rbx+0x30],xmm0
  411405:	vmovaps XMMWORD PTR [rbx+0x40],xmm0
  41140a:	pop    rbx
  41140b:	ret    
  41140c:	nop    DWORD PTR [rax+0x0]
  411410:	endbr64 
  411414:	mov    rsi,QWORD PTR [rsi+0x8]
  411418:	mov    rdi,QWORD PTR [rdi+0x8]
  41141c:	jmp    405330 <strcmp@plt>
  411421:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41142c:	nop    DWORD PTR [rax+0x0]
  411430:	push   r14
  411432:	mov    r14,rsi
  411435:	push   r13
  411437:	push   r12
  411439:	push   rbp
  41143a:	mov    rbp,rdi
  41143d:	push   rbx
  41143e:	sub    rsp,0xd0
  411445:	mov    QWORD PTR [rsp+0x30],rdx
  41144a:	mov    QWORD PTR [rsp+0x38],rcx
  41144f:	mov    QWORD PTR [rsp+0x40],r8
  411454:	mov    QWORD PTR [rsp+0x48],r9
  411459:	test   al,al
  41145b:	je     41149c <__flatcc_fb_gen_c_verifier@@Base+0x5cc>
  41145d:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  411463:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  411469:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41146f:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  411478:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  411481:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  41148a:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  411493:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  41149c:	mov    rax,QWORD PTR fs:0x28
  4114a5:	mov    QWORD PTR [rsp+0x18],rax
  4114aa:	xor    eax,eax
  4114ac:	mov    rax,QWORD PTR [rbp+0xe0]
  4114b3:	cmp    BYTE PTR [rip+0x3fc86],0x0        # 451140 <__bss_start@@Base+0x20>
  4114ba:	mov    r12d,DWORD PTR [rbp+0xf0]
  4114c1:	mov    eax,DWORD PTR [rax+0xd0]
  4114c7:	je     4115c8 <__flatcc_fb_gen_c_verifier@@Base+0x6f8>
  4114cd:	cmp    BYTE PTR [r14],0x0
  4114d1:	je     41158a <__flatcc_fb_gen_c_verifier@@Base+0x6ba>
  4114d7:	imul   r12d,eax
  4114db:	cmp    r12d,0x40
  4114df:	jle    411529 <__flatcc_fb_gen_c_verifier@@Base+0x659>
  4114e1:	mov    ebx,r12d
  4114e4:	lea    r13,[rip+0x3fc55]        # 451140 <__bss_start@@Base+0x20>
  4114eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4114f0:	mov    rdi,QWORD PTR [rbp+0xd0]
  4114f7:	mov    r8,r13
  4114fa:	mov    ecx,0x40
  4114ff:	lea    rdx,[rip+0x25623]        # 436b29 <_IO_stdin_used@@Base+0x9b29>
  411506:	mov    esi,0x1
  41150b:	xor    eax,eax
  41150d:	sub    ebx,0x40
  411510:	call   4053e0 <__fprintf_chk@plt>
  411515:	cmp    ebx,0x40
  411518:	jg     4114f0 <__flatcc_fb_gen_c_verifier@@Base+0x620>
  41151a:	lea    eax,[r12-0x41]
  41151f:	and    eax,0xffffffc0
  411522:	neg    eax
  411524:	lea    r12d,[r12+rax*1-0x40]
  411529:	mov    rdi,QWORD PTR [rbp+0xd0]
  411530:	mov    ecx,r12d
  411533:	lea    rdx,[rip+0x255ef]        # 436b29 <_IO_stdin_used@@Base+0x9b29>
  41153a:	mov    esi,0x1
  41153f:	lea    r8,[rip+0x3fbfa]        # 451140 <__bss_start@@Base+0x20>
  411546:	xor    eax,eax
  411548:	call   4053e0 <__fprintf_chk@plt>
  41154d:	lea    rax,[rsp+0x100]
  411555:	mov    rdi,QWORD PTR [rbp+0xd0]
  41155c:	mov    QWORD PTR [rsp+0x8],rax
  411561:	mov    rcx,rsp
  411564:	lea    rax,[rsp+0x20]
  411569:	mov    rdx,r14
  41156c:	mov    esi,0x1
  411571:	mov    DWORD PTR [rsp],0x10
  411578:	mov    DWORD PTR [rsp+0x4],0x30
  411580:	mov    QWORD PTR [rsp+0x10],rax
  411585:	call   405240 <__vfprintf_chk@plt>
  41158a:	mov    rdi,QWORD PTR [rbp+0xd0]
  411591:	xor    eax,eax
  411593:	lea    rdx,[rip+0x33b83]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  41159a:	mov    esi,0x1
  41159f:	call   4053e0 <__fprintf_chk@plt>
  4115a4:	mov    rax,QWORD PTR [rsp+0x18]
  4115a9:	xor    rax,QWORD PTR fs:0x28
  4115b2:	jne    4115f5 <__flatcc_fb_gen_c_verifier@@Base+0x725>
  4115b4:	add    rsp,0xd0
  4115bb:	pop    rbx
  4115bc:	pop    rbp
  4115bd:	pop    r12
  4115bf:	pop    r13
  4115c1:	pop    r14
  4115c3:	ret    
  4115c4:	nop    DWORD PTR [rax+0x0]
  4115c8:	vmovdqa xmm0,XMMWORD PTR [rip+0x32520]        # 443af0 <_IO_stdin_used@@Base+0x16af0>
  4115d0:	vmovaps XMMWORD PTR [rip+0x3fb68],xmm0        # 451140 <__bss_start@@Base+0x20>
  4115d8:	vmovaps XMMWORD PTR [rip+0x3fb70],xmm0        # 451150 <__bss_start@@Base+0x30>
  4115e0:	vmovaps XMMWORD PTR [rip+0x3fb78],xmm0        # 451160 <__bss_start@@Base+0x40>
  4115e8:	vmovaps XMMWORD PTR [rip+0x3fb80],xmm0        # 451170 <__bss_start@@Base+0x50>
  4115f0:	jmp    4114cd <__flatcc_fb_gen_c_verifier@@Base+0x5fd>
  4115f5:	call   4052c0 <__stack_chk_fail@plt>
  4115fa:	nop    WORD PTR [rax+rax*1+0x0]
  411600:	endbr64 
  411604:	lea    rsi,[rip+0x3029d]        # 4418a8 <_IO_stdin_used@@Base+0x148a8>
  41160b:	xor    eax,eax
  41160d:	jmp    411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411612:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41161d:	nop    DWORD PTR [rax]
  411620:	endbr64 
  411624:	lea    rsi,[rip+0x2fd58]        # 441383 <_IO_stdin_used@@Base+0x14383>
  41162b:	xor    eax,eax
  41162d:	jmp    411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411632:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41163d:	nop    DWORD PTR [rax]
  411640:	endbr64 
  411644:	jmp    411620 <__flatcc_fb_gen_c_verifier@@Base+0x750>
  411646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411650:	push   r15
  411652:	mov    r11d,ecx
  411655:	sub    ecx,edx
  411657:	push   r14
  411659:	lea    eax,[rcx+0x1]
  41165c:	mov    ecx,eax
  41165e:	push   r13
  411660:	shr    ecx,0x1f
  411663:	add    ecx,eax
  411665:	push   r12
  411667:	sar    ecx,1
  411669:	lea    eax,[rcx+rdx*1]
  41166c:	push   rbp
  41166d:	mov    r15,rdi
  411670:	mov    r12,rsi
  411673:	push   rbx
  411674:	mov    r14d,edx
  411677:	mov    r13d,r8d
  41167a:	sub    rsp,0x28
  41167e:	mov    DWORD PTR [rsp+0xc],eax
  411682:	cdqe   
  411684:	shl    rax,0x5
  411688:	mov    r10,rax
  41168b:	add    rax,QWORD PTR [rsi]
  41168e:	mov    ecx,DWORD PTR [rax+0x8]
  411691:	mov    DWORD PTR [rsp+0x18],r9d
  411696:	cmp    r8d,ecx
  411699:	jg     411950 <__flatcc_fb_gen_c_verifier@@Base+0xa80>
  41169f:	movsxd rbp,r8d
  4116a2:	mov    edi,ecx
  4116a4:	sub    edi,r8d
  4116a7:	add    rbp,QWORD PTR [rax]
  4116aa:	mov    eax,0x8
  4116af:	cmp    edi,0x8
  4116b2:	mov    ebx,eax
  4116b4:	cmovle ebx,edi
  4116b7:	mov    rdx,0xffffffffffffffff
  4116be:	sub    eax,ebx
  4116c0:	shl    eax,0x3
  4116c3:	lea    r8d,[rbx-0x1]
  4116c7:	shlx   rdx,rdx,rax
  4116cc:	cmp    r13d,ecx
  4116cf:	je     4117f0 <__flatcc_fb_gen_c_verifier@@Base+0x920>
  4116d5:	movsxd r8,r8d
  4116d8:	add    r8,rbp
  4116db:	xor    esi,esi
  4116dd:	nop    DWORD PTR [rax]
  4116e0:	movsx  rcx,BYTE PTR [r8]
  4116e4:	dec    r8
  4116e7:	shlx   rcx,rcx,rax
  4116ec:	add    eax,0x8
  4116ef:	or     rsi,rcx
  4116f2:	cmp    eax,0x40
  4116f5:	jne    4116e0 <__flatcc_fb_gen_c_verifier@@Base+0x810>
  4116f7:	cmp    edi,0x7
  4116fa:	jle    4117f8 <__flatcc_fb_gen_c_verifier@@Base+0x928>
  411700:	mov    rdx,rsi
  411703:	mov    r8,rbp
  411706:	mov    ecx,0x8
  41170b:	lea    rsi,[rip+0x301d6]        # 4418e8 <_IO_stdin_used@@Base+0x148e8>
  411712:	mov    rdi,r15
  411715:	xor    eax,eax
  411717:	mov    DWORD PTR [rsp+0x1c],r11d
  41171c:	mov    QWORD PTR [rsp+0x10],r10
  411721:	mov    ebx,0x8
  411726:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41172b:	inc    DWORD PTR [r15+0xf0]
  411732:	mov    r10,QWORD PTR [rsp+0x10]
  411737:	mov    r11d,DWORD PTR [rsp+0x1c]
  41173c:	cmp    r14d,DWORD PTR [rsp+0xc]
  411741:	jne    411838 <__flatcc_fb_gen_c_verifier@@Base+0x968>
  411747:	mov    rax,QWORD PTR [r12]
  41174b:	mov    rsi,QWORD PTR [r12+0x18]
  411750:	add    rax,r10
  411753:	mov    rdx,QWORD PTR [rax+0x10]
  411757:	mov    ecx,DWORD PTR [rax+0x18]
  41175a:	mov    r8d,ebx
  41175d:	mov    rdi,r15
  411760:	call   QWORD PTR [r12+0x8]
  411765:	mov    edx,DWORD PTR [rsp+0x18]
  411769:	test   edx,edx
  41176b:	jg     411960 <__flatcc_fb_gen_c_verifier@@Base+0xa90>
  411771:	mov    rdi,r15
  411774:	call   QWORD PTR [r12+0x10]
  411779:	mov    eax,DWORD PTR [r15+0xf0]
  411780:	test   eax,eax
  411782:	je     411a15 <__flatcc_fb_gen_c_verifier@@Base+0xb45>
  411788:	dec    eax
  41178a:	mov    DWORD PTR [r15+0xf0],eax
  411791:	lea    rsi,[rip+0x2fc19]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  411798:	xor    eax,eax
  41179a:	mov    rdi,r15
  41179d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4117a2:	mov    eax,DWORD PTR [r15+0xf0]
  4117a9:	test   eax,eax
  4117ab:	je     4119f6 <__flatcc_fb_gen_c_verifier@@Base+0xb26>
  4117b1:	dec    eax
  4117b3:	mov    DWORD PTR [r15+0xf0],eax
  4117ba:	mov    rcx,rbp
  4117bd:	xor    eax,eax
  4117bf:	mov    edx,ebx
  4117c1:	lea    rsi,[rip+0x2fbeb]        # 4413b3 <_IO_stdin_used@@Base+0x143b3>
  4117c8:	mov    rdi,r15
  4117cb:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4117d0:	mov    eax,DWORD PTR [rsp+0x18]
  4117d4:	inc    DWORD PTR [r15+0xf0]
  4117db:	test   eax,eax
  4117dd:	jg     4119a0 <__flatcc_fb_gen_c_verifier@@Base+0xad0>
  4117e3:	mov    rdi,r15
  4117e6:	call   QWORD PTR [r12+0x10]
  4117eb:	jmp    41190b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  4117f0:	xor    esi,esi
  4117f2:	nop    WORD PTR [rax+rax*1+0x0]
  4117f8:	mov    rcx,rsi
  4117fb:	mov    r9,rbp
  4117fe:	mov    r8d,ebx
  411801:	lea    rsi,[rip+0x30100]        # 441908 <_IO_stdin_used@@Base+0x14908>
  411808:	mov    rdi,r15
  41180b:	xor    eax,eax
  41180d:	mov    DWORD PTR [rsp+0x1c],r11d
  411812:	mov    QWORD PTR [rsp+0x10],r10
  411817:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41181c:	inc    DWORD PTR [r15+0xf0]
  411823:	mov    r11d,DWORD PTR [rsp+0x1c]
  411828:	mov    r10,QWORD PTR [rsp+0x10]
  41182d:	cmp    r14d,DWORD PTR [rsp+0xc]
  411832:	je     411747 <__flatcc_fb_gen_c_verifier@@Base+0x877>
  411838:	cmp    r11d,DWORD PTR [rsp+0xc]
  41183d:	jne    4118a0 <__flatcc_fb_gen_c_verifier@@Base+0x9d0>
  41183f:	mov    rax,QWORD PTR [r12]
  411843:	mov    rsi,QWORD PTR [r12+0x18]
  411848:	add    rax,r10
  41184b:	mov    rdx,QWORD PTR [rax+0x10]
  41184f:	mov    ecx,DWORD PTR [rax+0x18]
  411852:	mov    r8d,ebx
  411855:	mov    rdi,r15
  411858:	call   QWORD PTR [r12+0x8]
  41185d:	mov    edx,DWORD PTR [rsp+0x18]
  411861:	test   edx,edx
  411863:	jg     411980 <__flatcc_fb_gen_c_verifier@@Base+0xab0>
  411869:	mov    rdi,r15
  41186c:	call   QWORD PTR [r12+0x10]
  411871:	mov    eax,DWORD PTR [r15+0xf0]
  411878:	test   eax,eax
  41187a:	je     4119d7 <__flatcc_fb_gen_c_verifier@@Base+0xb07>
  411880:	dec    eax
  411882:	mov    DWORD PTR [r15+0xf0],eax
  411889:	lea    rsi,[rip+0x2fb21]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  411890:	mov    rdi,r15
  411893:	xor    eax,eax
  411895:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41189a:	jmp    4118ba <__flatcc_fb_gen_c_verifier@@Base+0x9ea>
  41189c:	nop    DWORD PTR [rax+0x0]
  4118a0:	mov    r9d,DWORD PTR [rsp+0x18]
  4118a5:	mov    edx,DWORD PTR [rsp+0xc]
  4118a9:	mov    r8d,r13d
  4118ac:	mov    ecx,r11d
  4118af:	mov    rsi,r12
  4118b2:	mov    rdi,r15
  4118b5:	call   411650 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  4118ba:	mov    eax,DWORD PTR [r15+0xf0]
  4118c1:	test   eax,eax
  4118c3:	je     411a34 <__flatcc_fb_gen_c_verifier@@Base+0xb64>
  4118c9:	dec    eax
  4118cb:	mov    DWORD PTR [r15+0xf0],eax
  4118d2:	mov    rcx,rbp
  4118d5:	mov    edx,ebx
  4118d7:	lea    rsi,[rip+0x2fad5]        # 4413b3 <_IO_stdin_used@@Base+0x143b3>
  4118de:	mov    rdi,r15
  4118e1:	xor    eax,eax
  4118e3:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4118e8:	inc    DWORD PTR [r15+0xf0]
  4118ef:	mov    ecx,DWORD PTR [rsp+0xc]
  4118f3:	mov    r9d,DWORD PTR [rsp+0x18]
  4118f8:	dec    ecx
  4118fa:	mov    r8d,r13d
  4118fd:	mov    edx,r14d
  411900:	mov    rsi,r12
  411903:	mov    rdi,r15
  411906:	call   411650 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  41190b:	mov    eax,DWORD PTR [r15+0xf0]
  411912:	test   eax,eax
  411914:	je     4119b8 <__flatcc_fb_gen_c_verifier@@Base+0xae8>
  41191a:	dec    eax
  41191c:	mov    DWORD PTR [r15+0xf0],eax
  411923:	add    rsp,0x28
  411927:	mov    edx,ebx
  411929:	pop    rbx
  41192a:	mov    rcx,rbp
  41192d:	pop    rbp
  41192e:	pop    r12
  411930:	pop    r13
  411932:	pop    r14
  411934:	mov    rdi,r15
  411937:	lea    rsi,[rip+0x2fa8b]        # 4413c9 <_IO_stdin_used@@Base+0x143c9>
  41193e:	xor    eax,eax
  411940:	pop    r15
  411942:	jmp    411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411947:	nop    WORD PTR [rax+rax*1+0x0]
  411950:	xor    edx,edx
  411952:	xor    esi,esi
  411954:	xor    ebx,ebx
  411956:	xor    ebp,ebp
  411958:	jmp    4117f8 <__flatcc_fb_gen_c_verifier@@Base+0x928>
  41195d:	nop    DWORD PTR [rax]
  411960:	lea    rsi,[rip+0x2fa2e]        # 441395 <_IO_stdin_used@@Base+0x14395>
  411967:	mov    rdi,r15
  41196a:	xor    eax,eax
  41196c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411971:	jmp    411779 <__flatcc_fb_gen_c_verifier@@Base+0x8a9>
  411976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411980:	lea    rsi,[rip+0x2fa0e]        # 441395 <_IO_stdin_used@@Base+0x14395>
  411987:	mov    rdi,r15
  41198a:	xor    eax,eax
  41198c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411991:	jmp    411871 <__flatcc_fb_gen_c_verifier@@Base+0x9a1>
  411996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4119a0:	mov    edx,eax
  4119a2:	lea    rsi,[rip+0x2f9ec]        # 441395 <_IO_stdin_used@@Base+0x14395>
  4119a9:	mov    rdi,r15
  4119ac:	xor    eax,eax
  4119ae:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4119b3:	jmp    41190b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  4119b8:	lea    rcx,[rip+0x320a1]        # 443a60 <_IO_stdin_used@@Base+0x16a60>
  4119bf:	mov    edx,0x38e
  4119c4:	lea    rsi,[rip+0x2ff6d]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4119cb:	lea    rdi,[rip+0x2f9d3]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4119d2:	call   4052e0 <__assert_fail@plt>
  4119d7:	lea    rcx,[rip+0x32082]        # 443a60 <_IO_stdin_used@@Base+0x16a60>
  4119de:	mov    edx,0x387
  4119e3:	lea    rsi,[rip+0x2ff4e]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4119ea:	lea    rdi,[rip+0x2f9b4]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4119f1:	call   4052e0 <__assert_fail@plt>
  4119f6:	lea    rcx,[rip+0x32063]        # 443a60 <_IO_stdin_used@@Base+0x16a60>
  4119fd:	mov    edx,0x379
  411a02:	lea    rsi,[rip+0x2ff2f]        # 441938 <_IO_stdin_used@@Base+0x14938>
  411a09:	lea    rdi,[rip+0x2f995]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  411a10:	call   4052e0 <__assert_fail@plt>
  411a15:	lea    rcx,[rip+0x32044]        # 443a60 <_IO_stdin_used@@Base+0x16a60>
  411a1c:	mov    edx,0x378
  411a21:	lea    rsi,[rip+0x2ff10]        # 441938 <_IO_stdin_used@@Base+0x14938>
  411a28:	lea    rdi,[rip+0x2f976]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  411a2f:	call   4052e0 <__assert_fail@plt>
  411a34:	lea    rcx,[rip+0x32025]        # 443a60 <_IO_stdin_used@@Base+0x16a60>
  411a3b:	mov    edx,0x38b
  411a40:	lea    rsi,[rip+0x2fef1]        # 441938 <_IO_stdin_used@@Base+0x14938>
  411a47:	lea    rdi,[rip+0x2f957]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  411a4e:	call   4052e0 <__assert_fail@plt>
  411a53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  411a5e:	xchg   ax,ax
  411a60:	push   r15
  411a62:	movsxd rax,edx
  411a65:	shl    rax,0x5
  411a69:	push   r14
  411a6b:	push   r13
  411a6d:	push   r12
  411a6f:	push   rbp
  411a70:	push   rbx
  411a71:	sub    rsp,0x38
  411a75:	mov    rbx,QWORD PTR [rsi]
  411a78:	mov    QWORD PTR [rsp+0x20],rax
  411a7d:	mov    eax,DWORD PTR [rbx+rax*1+0x8]
  411a81:	mov    QWORD PTR [rsp],rbx
  411a85:	lea    ebx,[r8+0x7]
  411a89:	mov    DWORD PTR [rsp+0x18],eax
  411a8d:	mov    DWORD PTR [rsp+0x28],ebx
  411a91:	cmp    ebx,eax
  411a93:	jge    411e98 <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
  411a99:	sub    eax,r8d
  411a9c:	cmp    eax,0x8
  411a9f:	je     411e98 <__flatcc_fb_gen_c_verifier@@Base+0xfc8>
  411aa5:	mov    eax,ecx
  411aa7:	sub    eax,edx
  411aa9:	mov    ebp,eax
  411aab:	shr    ebp,0x1f
  411aae:	add    ebp,eax
  411ab0:	sar    ebp,1
  411ab2:	add    ebp,edx
  411ab4:	mov    ebx,r8d
  411ab7:	mov    DWORD PTR [rsp+0x14],ecx
  411abb:	mov    DWORD PTR [rsp+0x10],edx
  411abf:	mov    QWORD PTR [rsp+0x8],rsi
  411ac4:	mov    r12,rdi
  411ac7:	mov    eax,edx
  411ac9:	cmp    edx,ebp
  411acb:	jge    411bde <__flatcc_fb_gen_c_verifier@@Base+0xd0e>
  411ad1:	movsxd r8,ebp
  411ad4:	shl    r8,0x5
  411ad8:	mov    r13d,ebp
  411adb:	mov    DWORD PTR [rsp+0x2c],ebp
  411adf:	add    r8,QWORD PTR [rsp]
  411ae3:	xor    edi,edi
  411ae5:	xor    edx,edx
  411ae7:	xor    r9d,r9d
  411aea:	movsxd rcx,ebx
  411aed:	mov    r10d,0x8
  411af3:	mov    ebp,eax
  411af5:	nop    DWORD PTR [rax]
  411af8:	mov    r11d,DWORD PTR [r8-0x18]
  411afc:	cmp    ebx,r11d
  411aff:	jg     411b5c <__flatcc_fb_gen_c_verifier@@Base+0xc8c>
  411b01:	mov    esi,r11d
  411b04:	sub    esi,ebx
  411b06:	cmp    esi,0x8
  411b09:	cmovg  esi,r10d
  411b0d:	lea    eax,[rsi-0x1]
  411b10:	cmp    ebx,r11d
  411b13:	je     412000 <__flatcc_fb_gen_c_verifier@@Base+0x1130>
  411b19:	cdqe   
  411b1b:	mov    edx,r10d
  411b1e:	add    rax,rcx
  411b21:	sub    edx,esi
  411b23:	add    rax,QWORD PTR [r8-0x20]
  411b27:	shl    edx,0x3
  411b2a:	xor    r9d,r9d
  411b2d:	nop    DWORD PTR [rax]
  411b30:	movsx  r11,BYTE PTR [rax]
  411b34:	dec    rax
  411b37:	shlx   r11,r11,rdx
  411b3c:	add    edx,0x8
  411b3f:	or     r9,r11
  411b42:	cmp    edx,0x40
  411b45:	jne    411b30 <__flatcc_fb_gen_c_verifier@@Base+0xc60>
  411b47:	mov    edx,r10d
  411b4a:	sub    edx,esi
  411b4c:	shl    edx,0x3
  411b4f:	mov    eax,0x1
  411b54:	shlx   rdx,rax,rdx
  411b59:	neg    rdx
  411b5c:	mov    r11d,DWORD PTR [r8+0x8]
  411b60:	mov    rax,r9
  411b63:	mov    r15,QWORD PTR [r8]
  411b66:	xor    rax,rdi
  411b69:	cmp    ebx,r11d
  411b6c:	jg     411bbd <__flatcc_fb_gen_c_verifier@@Base+0xced>
  411b6e:	mov    esi,r11d
  411b71:	sub    esi,ebx
  411b73:	cmp    esi,0x8
  411b76:	cmovg  esi,r10d
  411b7a:	lea    eax,[rsi-0x1]
  411b7d:	cmp    ebx,r11d
  411b80:	je     411ee0 <__flatcc_fb_gen_c_verifier@@Base+0x1010>
  411b86:	mov    edi,r10d
  411b89:	sub    edi,esi
  411b8b:	cdqe   
  411b8d:	mov    esi,edi
  411b8f:	add    rax,rcx
  411b92:	add    rax,r15
  411b95:	shl    esi,0x3
  411b98:	xor    edi,edi
  411b9a:	nop    WORD PTR [rax+rax*1+0x0]
  411ba0:	movsx  r14,BYTE PTR [rax]
  411ba4:	dec    rax
  411ba7:	shlx   r14,r14,rsi
  411bac:	add    esi,0x8
  411baf:	or     rdi,r14
  411bb2:	cmp    esi,0x40
  411bb5:	jne    411ba0 <__flatcc_fb_gen_c_verifier@@Base+0xcd0>
  411bb7:	mov    rax,rdi
  411bba:	xor    rax,r9
  411bbd:	lea    r14d,[r13-0x1]
  411bc1:	test   rdx,rax
  411bc4:	jne    411ef8 <__flatcc_fb_gen_c_verifier@@Base+0x1028>
  411bca:	sub    r8,0x20
  411bce:	mov    r13d,r14d
  411bd1:	cmp    ebp,r14d
  411bd4:	jne    411af8 <__flatcc_fb_gen_c_verifier@@Base+0xc28>
  411bda:	mov    ebp,DWORD PTR [rsp+0x2c]
  411bde:	mov    r15d,ebp
  411be1:	cmp    DWORD PTR [rsp+0x14],ebp
  411be5:	jle    411cee <__flatcc_fb_gen_c_verifier@@Base+0xe1e>
  411beb:	movsxd rcx,ebp
  411bee:	shl    rcx,0x5
  411bf2:	mov    r10d,DWORD PTR [rsp+0x14]
  411bf7:	add    rcx,QWORD PTR [rsp]
  411bfb:	xor    edi,edi
  411bfd:	xor    r11d,r11d
  411c00:	xor    esi,esi
  411c02:	movsxd r9,ebx
  411c05:	mov    r8d,0x8
  411c0b:	mov    r13d,0x1
  411c11:	nop    DWORD PTR [rax+0x0]
  411c18:	mov    edx,DWORD PTR [rcx+0x8]
  411c1b:	cmp    ebx,edx
  411c1d:	jg     411c79 <__flatcc_fb_gen_c_verifier@@Base+0xda9>
  411c1f:	mov    r14d,edx
  411c22:	sub    r14d,ebx
  411c25:	cmp    r14d,0x8
  411c29:	cmovg  r14d,r8d
  411c2d:	lea    eax,[r14-0x1]
  411c31:	cmp    ebx,edx
  411c33:	je     412010 <__flatcc_fb_gen_c_verifier@@Base+0x1140>
  411c39:	cdqe   
  411c3b:	mov    edx,r8d
  411c3e:	add    rax,r9
  411c41:	sub    edx,r14d
  411c44:	add    rax,QWORD PTR [rcx]
  411c47:	shl    edx,0x3
  411c4a:	xor    esi,esi
  411c4c:	nop    DWORD PTR [rax+0x0]
  411c50:	movsx  r11,BYTE PTR [rax]
  411c54:	dec    rax
  411c57:	shlx   r11,r11,rdx
  411c5c:	add    edx,0x8
  411c5f:	or     rsi,r11
  411c62:	cmp    edx,0x40
  411c65:	jne    411c50 <__flatcc_fb_gen_c_verifier@@Base+0xd80>
  411c67:	mov    r11d,r8d
  411c6a:	sub    r11d,r14d
  411c6d:	shl    r11d,0x3
  411c71:	shlx   r11,r13,r11
  411c76:	neg    r11
  411c79:	mov    r14d,DWORD PTR [rcx+0x28]
  411c7d:	mov    rax,rsi
  411c80:	xor    rax,rdi
  411c83:	cmp    ebx,r14d
  411c86:	jg     411cd5 <__flatcc_fb_gen_c_verifier@@Base+0xe05>
  411c88:	mov    edx,r14d
  411c8b:	sub    edx,ebx
  411c8d:	cmp    edx,0x8
  411c90:	cmovg  edx,r8d
  411c94:	lea    eax,[rdx-0x1]
  411c97:	cmp    ebx,r14d
  411c9a:	je     412020 <__flatcc_fb_gen_c_verifier@@Base+0x1150>
  411ca0:	mov    edi,r8d
  411ca3:	sub    edi,edx
  411ca5:	cdqe   
  411ca7:	mov    edx,edi
  411ca9:	add    rax,r9
  411cac:	add    rax,QWORD PTR [rcx+0x20]
  411cb0:	shl    edx,0x3
  411cb3:	xor    edi,edi
  411cb5:	nop    DWORD PTR [rax]
  411cb8:	movsx  r14,BYTE PTR [rax]
  411cbc:	dec    rax
  411cbf:	shlx   r14,r14,rdx
  411cc4:	add    edx,0x8
  411cc7:	or     rdi,r14
  411cca:	cmp    edx,0x40
  411ccd:	jne    411cb8 <__flatcc_fb_gen_c_verifier@@Base+0xde8>
  411ccf:	mov    rax,rdi
  411cd2:	xor    rax,rsi
  411cd5:	lea    r15d,[rbp+0x1]
  411cd9:	test   r11,rax
  411cdc:	jne    411cf4 <__flatcc_fb_gen_c_verifier@@Base+0xe24>
  411cde:	add    rcx,0x20
  411ce2:	mov    ebp,r15d
  411ce5:	cmp    r10d,r15d
  411ce8:	jne    411c18 <__flatcc_fb_gen_c_verifier@@Base+0xd48>
  411cee:	mov    ebp,r15d
  411cf1:	inc    r15d
  411cf4:	mov    r13d,DWORD PTR [rsp+0x10]
  411cf9:	cmp    r13d,r15d
  411cfc:	jge    4122f0 <__flatcc_fb_gen_c_verifier@@Base+0x1420>
  411d02:	mov    rax,QWORD PTR [rsp]
  411d06:	mov    rcx,QWORD PTR [rsp+0x20]
  411d0b:	mov    esi,DWORD PTR [rsp+0x28]
  411d0f:	lea    rax,[rax+rcx*1+0x28]
  411d14:	mov    edx,DWORD PTR [rsp+0x18]
  411d18:	jmp    411d26 <__flatcc_fb_gen_c_verifier@@Base+0xe56>
  411d1a:	nop    WORD PTR [rax+rax*1+0x0]
  411d20:	mov    edx,DWORD PTR [rax]
  411d22:	add    rax,0x20
  411d26:	cmp    esi,edx
  411d28:	jge    411d37 <__flatcc_fb_gen_c_verifier@@Base+0xe67>
  411d2a:	mov    ecx,edx
  411d2c:	sub    ecx,ebx
  411d2e:	cmp    ecx,0x8
  411d31:	jg     412030 <__flatcc_fb_gen_c_verifier@@Base+0x1160>
  411d37:	inc    r13d
  411d3a:	cmp    r13d,r15d
  411d3d:	jne    411d20 <__flatcc_fb_gen_c_verifier@@Base+0xe50>
  411d3f:	cmp    DWORD PTR [rsp+0x10],r13d
  411d44:	jge    41236a <__flatcc_fb_gen_c_verifier@@Base+0x149a>
  411d4a:	cmp    DWORD PTR [rsp+0x14],r13d
  411d4f:	jl     41236a <__flatcc_fb_gen_c_verifier@@Base+0x149a>
  411d55:	mov    DWORD PTR [rsp],0x0
  411d5c:	mov    r8d,r13d
  411d5f:	lea    r14,[rip+0x333b8]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  411d66:	mov    rax,QWORD PTR [rsp+0x8]
  411d6b:	mov    edx,DWORD PTR [rsp+0x10]
  411d6f:	mov    ecx,DWORD PTR [rax+0x28]
  411d72:	mov    rsi,rax
  411d75:	lea    ebp,[rcx+0x1]
  411d78:	mov    DWORD PTR [rax+0x28],ebp
  411d7b:	lea    ecx,[r8-0x1]
  411d7f:	mov    r9d,ebp
  411d82:	mov    r8d,ebx
  411d85:	mov    rdi,r12
  411d88:	mov    QWORD PTR [rsp+0x8],rax
  411d8d:	call   411650 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  411d92:	mov    edx,ebp
  411d94:	lea    rsi,[rip+0x2f6d1]        # 44146c <_IO_stdin_used@@Base+0x1446c>
  411d9b:	mov    rdi,r12
  411d9e:	xor    eax,eax
  411da0:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411da5:	mov    eax,DWORD PTR [r12+0xf0]
  411dad:	mov    DWORD PTR [r12+0xf0],0x0
  411db9:	mov    DWORD PTR [r12+0xf8],eax
  411dc1:	mov    edx,ebp
  411dc3:	lea    rsi,[rip+0x2f6b8]        # 441482 <_IO_stdin_used@@Base+0x14482>
  411dca:	mov    rdi,r12
  411dcd:	xor    eax,eax
  411dcf:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411dd4:	mov    eax,DWORD PTR [r12+0xf8]
  411ddc:	mov    ecx,DWORD PTR [rsp+0x14]
  411de0:	mov    DWORD PTR [r12+0xf0],eax
  411de8:	mov    rsi,QWORD PTR [rsp+0x8]
  411ded:	mov    r8d,ebx
  411df0:	mov    edx,r15d
  411df3:	mov    rdi,r12
  411df6:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  411dfb:	mov    eax,DWORD PTR [r12+0xf0]
  411e03:	mov    DWORD PTR [r12+0xf0],0x0
  411e0f:	mov    DWORD PTR [r12+0xf8],eax
  411e17:	lea    rsi,[rip+0x2f661]        # 44147f <_IO_stdin_used@@Base+0x1447f>
  411e1e:	mov    rdi,r12
  411e21:	xor    eax,eax
  411e23:	mov    edx,ebp
  411e25:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411e2a:	mov    eax,DWORD PTR [r12+0xf8]
  411e32:	lea    rsi,[rip+0x2f654]        # 44148d <_IO_stdin_used@@Base+0x1448d>
  411e39:	mov    DWORD PTR [r12+0xf0],eax
  411e41:	mov    rdi,r12
  411e44:	xor    eax,eax
  411e46:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411e4b:	cmp    r13d,r15d
  411e4e:	jge    412183 <__flatcc_fb_gen_c_verifier@@Base+0x12b3>
  411e54:	mov    eax,DWORD PTR [r12+0xf0]
  411e5c:	test   eax,eax
  411e5e:	je     41232f <__flatcc_fb_gen_c_verifier@@Base+0x145f>
  411e64:	dec    eax
  411e66:	mov    DWORD PTR [r12+0xf0],eax
  411e6e:	mov    edx,DWORD PTR [rsp]
  411e71:	mov    rcx,r14
  411e74:	lea    rsi,[rip+0x2f61b]        # 441496 <_IO_stdin_used@@Base+0x14496>
  411e7b:	add    rsp,0x38
  411e7f:	pop    rbx
  411e80:	pop    rbp
  411e81:	mov    rdi,r12
  411e84:	pop    r12
  411e86:	pop    r13
  411e88:	pop    r14
  411e8a:	xor    eax,eax
  411e8c:	pop    r15
  411e8e:	jmp    411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411e93:	nop    DWORD PTR [rax+rax*1+0x0]
  411e98:	cmp    edx,ecx
  411e9a:	je     411ec8 <__flatcc_fb_gen_c_verifier@@Base+0xff8>
  411e9c:	lea    eax,[rdx+0x1]
  411e9f:	cmp    eax,ecx
  411ea1:	jne    411aa5 <__flatcc_fb_gen_c_verifier@@Base+0xbd5>
  411ea7:	movsxd rax,ecx
  411eaa:	mov    rbx,QWORD PTR [rsp]
  411eae:	shl    rax,0x5
  411eb2:	mov    eax,DWORD PTR [rbx+rax*1+0x8]
  411eb6:	cmp    DWORD PTR [rsp+0x28],eax
  411eba:	jge    411ec8 <__flatcc_fb_gen_c_verifier@@Base+0xff8>
  411ebc:	sub    eax,r8d
  411ebf:	cmp    eax,0x8
  411ec2:	jne    411aa5 <__flatcc_fb_gen_c_verifier@@Base+0xbd5>
  411ec8:	add    rsp,0x38
  411ecc:	pop    rbx
  411ecd:	pop    rbp
  411ece:	pop    r12
  411ed0:	pop    r13
  411ed2:	pop    r14
  411ed4:	xor    r9d,r9d
  411ed7:	pop    r15
  411ed9:	jmp    411650 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  411ede:	xchg   ax,ax
  411ee0:	mov    rax,r9
  411ee3:	xor    edi,edi
  411ee5:	lea    r14d,[r13-0x1]
  411ee9:	test   rdx,rax
  411eec:	je     411bca <__flatcc_fb_gen_c_verifier@@Base+0xcfa>
  411ef2:	nop    WORD PTR [rax+rax*1+0x0]
  411ef8:	cmp    ebx,r11d
  411efb:	jg     4121d8 <__flatcc_fb_gen_c_verifier@@Base+0x1308>
  411f01:	mov    ebp,r11d
  411f04:	movsxd rax,ebx
  411f07:	sub    ebp,ebx
  411f09:	add    r15,rax
  411f0c:	mov    eax,0x8
  411f11:	cmp    ebp,0x8
  411f14:	cmovg  ebp,eax
  411f17:	lea    esi,[rbp-0x1]
  411f1a:	cmp    ebx,r11d
  411f1d:	je     4122e7 <__flatcc_fb_gen_c_verifier@@Base+0x1417>
  411f23:	movsxd rsi,esi
  411f26:	sub    eax,ebp
  411f28:	add    rsi,r15
  411f2b:	shl    eax,0x3
  411f2e:	xor    edx,edx
  411f30:	movsx  rcx,BYTE PTR [rsi]
  411f34:	dec    rsi
  411f37:	shlx   rcx,rcx,rax
  411f3c:	add    eax,0x8
  411f3f:	or     rdx,rcx
  411f42:	cmp    eax,0x40
  411f45:	jne    411f30 <__flatcc_fb_gen_c_verifier@@Base+0x1060>
  411f47:	xor    eax,eax
  411f49:	mov    r8,r15
  411f4c:	mov    ecx,ebp
  411f4e:	lea    rsi,[rip+0x2fa53]        # 4419a8 <_IO_stdin_used@@Base+0x149a8>
  411f55:	mov    rdi,r12
  411f58:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411f5d:	inc    DWORD PTR [r12+0xf0]
  411f65:	mov    edx,DWORD PTR [rsp+0x10]
  411f69:	mov    rsi,QWORD PTR [rsp+0x8]
  411f6e:	mov    r8d,ebx
  411f71:	mov    ecx,r14d
  411f74:	mov    rdi,r12
  411f77:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  411f7c:	mov    eax,DWORD PTR [r12+0xf0]
  411f84:	test   eax,eax
  411f86:	je     4123bd <__flatcc_fb_gen_c_verifier@@Base+0x14ed>
  411f8c:	dec    eax
  411f8e:	mov    DWORD PTR [r12+0xf0],eax
  411f96:	mov    rcx,r15
  411f99:	xor    eax,eax
  411f9b:	mov    edx,ebp
  411f9d:	lea    rsi,[rip+0x2f434]        # 4413d8 <_IO_stdin_used@@Base+0x143d8>
  411fa4:	mov    rdi,r12
  411fa7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  411fac:	inc    DWORD PTR [r12+0xf0]
  411fb4:	mov    ecx,DWORD PTR [rsp+0x14]
  411fb8:	mov    rsi,QWORD PTR [rsp+0x8]
  411fbd:	mov    r8d,ebx
  411fc0:	mov    edx,r13d
  411fc3:	mov    rdi,r12
  411fc6:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  411fcb:	mov    eax,DWORD PTR [r12+0xf0]
  411fd3:	test   eax,eax
  411fd5:	je     4123dc <__flatcc_fb_gen_c_verifier@@Base+0x150c>
  411fdb:	dec    eax
  411fdd:	mov    DWORD PTR [r12+0xf0],eax
  411fe5:	mov    rcx,r15
  411fe8:	mov    edx,ebp
  411fea:	lea    rsi,[rip+0x2f404]        # 4413f5 <_IO_stdin_used@@Base+0x143f5>
  411ff1:	jmp    411e7b <__flatcc_fb_gen_c_verifier@@Base+0xfab>
  411ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412000:	xor    r9d,r9d
  412003:	jmp    411b47 <__flatcc_fb_gen_c_verifier@@Base+0xc77>
  412008:	nop    DWORD PTR [rax+rax*1+0x0]
  412010:	xor    esi,esi
  412012:	jmp    411c67 <__flatcc_fb_gen_c_verifier@@Base+0xd97>
  412017:	nop    WORD PTR [rax+rax*1+0x0]
  412020:	mov    rax,rsi
  412023:	xor    edi,edi
  412025:	jmp    411cd5 <__flatcc_fb_gen_c_verifier@@Base+0xe05>
  41202a:	nop    WORD PTR [rax+rax*1+0x0]
  412030:	movsxd r9,r13d
  412033:	lea    eax,[rbx+0x8]
  412036:	mov    DWORD PTR [rsp+0x18],edx
  41203a:	shl    r9,0x5
  41203e:	mov    DWORD PTR [rsp+0x28],eax
  412042:	cmp    r13d,DWORD PTR [rsp+0x10]
  412047:	jg     412198 <__flatcc_fb_gen_c_verifier@@Base+0x12c8>
  41204d:	cmp    ebx,DWORD PTR [rsp+0x18]
  412051:	jg     4122b8 <__flatcc_fb_gen_c_verifier@@Base+0x13e8>
  412057:	mov    DWORD PTR [rsp+0x20],0x0
  41205f:	mov    rax,QWORD PTR [rsp]
  412063:	movsxd r14,ebx
  412066:	add    r14,QWORD PTR [rax+r9*1]
  41206a:	lea    rsi,[r14+0x7]
  41206e:	xor    eax,eax
  412070:	xor    edx,edx
  412072:	nop    WORD PTR [rax+rax*1+0x0]
  412078:	movsx  rcx,BYTE PTR [rsi]
  41207c:	dec    rsi
  41207f:	shlx   rcx,rcx,rax
  412084:	add    eax,0x8
  412087:	or     rdx,rcx
  41208a:	cmp    eax,0x40
  41208d:	jne    412078 <__flatcc_fb_gen_c_verifier@@Base+0x11a8>
  41208f:	mov    DWORD PTR [rsp],0x8
  412096:	mov    ecx,DWORD PTR [rsp]
  412099:	xor    eax,eax
  41209b:	mov    r8,r14
  41209e:	lea    rsi,[rip+0x2f92b]        # 4419d0 <_IO_stdin_used@@Base+0x149d0>
  4120a5:	mov    rdi,r12
  4120a8:	mov    QWORD PTR [rsp+0x18],r9
  4120ad:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4120b2:	mov    eax,DWORD PTR [rsp+0x20]
  4120b6:	inc    DWORD PTR [r12+0xf0]
  4120be:	test   eax,eax
  4120c0:	jne    4121e8 <__flatcc_fb_gen_c_verifier@@Base+0x1318>
  4120c6:	lea    rsi,[rip+0x2f35a]        # 441427 <_IO_stdin_used@@Base+0x14427>
  4120cd:	mov    rdi,r12
  4120d0:	xor    eax,eax
  4120d2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4120d7:	lea    rsi,[rip+0x2f93a]        # 441a18 <_IO_stdin_used@@Base+0x14a18>
  4120de:	mov    rdi,r12
  4120e1:	xor    eax,eax
  4120e3:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4120e8:	mov    r8d,DWORD PTR [rsp+0x28]
  4120ed:	mov    rsi,QWORD PTR [rsp+0x8]
  4120f2:	mov    ecx,ebp
  4120f4:	mov    edx,r13d
  4120f7:	mov    rdi,r12
  4120fa:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  4120ff:	mov    r8d,r13d
  412102:	mov    eax,DWORD PTR [r12+0xf0]
  41210a:	test   eax,eax
  41210c:	je     41239e <__flatcc_fb_gen_c_verifier@@Base+0x14ce>
  412112:	dec    eax
  412114:	mov    DWORD PTR [r12+0xf0],eax
  41211c:	mov    edx,DWORD PTR [rsp]
  41211f:	xor    eax,eax
  412121:	mov    rcx,r14
  412124:	lea    rsi,[rip+0x2f323]        # 44144e <_IO_stdin_used@@Base+0x1444e>
  41212b:	mov    rdi,r12
  41212e:	mov    DWORD PTR [rsp+0x18],r8d
  412133:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412138:	mov    r8d,DWORD PTR [rsp+0x18]
  41213d:	inc    DWORD PTR [r12+0xf0]
  412145:	cmp    DWORD PTR [rsp+0x14],r15d
  41214a:	setge  al
  41214d:	cmp    r8d,DWORD PTR [rsp+0x10]
  412152:	jle    41215c <__flatcc_fb_gen_c_verifier@@Base+0x128c>
  412154:	test   al,al
  412156:	jne    411d66 <__flatcc_fb_gen_c_verifier@@Base+0xe96>
  41215c:	cmp    r8d,DWORD PTR [rsp+0x10]
  412161:	jg     41237e <__flatcc_fb_gen_c_verifier@@Base+0x14ae>
  412167:	test   al,al
  412169:	jne    41234e <__flatcc_fb_gen_c_verifier@@Base+0x147e>
  41216f:	mov    rax,QWORD PTR [rsp+0x8]
  412174:	mov    rdi,r12
  412177:	call   QWORD PTR [rax+0x10]
  41217a:	cmp    r13d,r15d
  41217d:	jl     411e54 <__flatcc_fb_gen_c_verifier@@Base+0xf84>
  412183:	add    rsp,0x38
  412187:	pop    rbx
  412188:	pop    rbp
  412189:	pop    r12
  41218b:	pop    r13
  41218d:	pop    r14
  41218f:	pop    r15
  412191:	ret    
  412192:	nop    WORD PTR [rax+rax*1+0x0]
  412198:	mov    rax,QWORD PTR [rsp]
  41219c:	mov    eax,DWORD PTR [rax+r9*1-0x18]
  4121a1:	cmp    eax,DWORD PTR [rsp+0x28]
  4121a5:	jg     41204d <__flatcc_fb_gen_c_verifier@@Base+0x117d>
  4121ab:	sub    eax,ebx
  4121ad:	cmp    eax,0x8
  4121b0:	sete   al
  4121b3:	movzx  eax,al
  4121b6:	mov    DWORD PTR [rsp+0x20],eax
  4121ba:	cmp    ebx,DWORD PTR [rsp+0x18]
  4121be:	jle    41205f <__flatcc_fb_gen_c_verifier@@Base+0x118f>
  4121c4:	xor    edx,edx
  4121c6:	xor    r14d,r14d
  4121c9:	mov    DWORD PTR [rsp],0x0
  4121d0:	jmp    412096 <__flatcc_fb_gen_c_verifier@@Base+0x11c6>
  4121d5:	nop    DWORD PTR [rax]
  4121d8:	xor    edx,edx
  4121da:	xor    r15d,r15d
  4121dd:	xor    ebp,ebp
  4121df:	jmp    411f47 <__flatcc_fb_gen_c_verifier@@Base+0x1077>
  4121e4:	nop    DWORD PTR [rax+0x0]
  4121e8:	mov    edx,DWORD PTR [rsp]
  4121eb:	mov    rcx,r14
  4121ee:	lea    rsi,[rip+0x2f803]        # 4419f8 <_IO_stdin_used@@Base+0x149f8>
  4121f5:	mov    rdi,r12
  4121f8:	xor    eax,eax
  4121fa:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4121ff:	mov    rdi,QWORD PTR [rsp+0x8]
  412204:	mov    r9,QWORD PTR [rsp+0x18]
  412209:	mov    rax,QWORD PTR [rdi]
  41220c:	mov    rsi,QWORD PTR [rdi+0x18]
  412210:	lea    rax,[rax+r9*1-0x20]
  412215:	mov    ecx,DWORD PTR [rax+0x18]
  412218:	mov    rdx,QWORD PTR [rax+0x10]
  41221c:	mov    r8d,0x8
  412222:	mov    rax,rdi
  412225:	mov    rdi,r12
  412228:	call   QWORD PTR [rax+0x8]
  41222b:	mov    edx,DWORD PTR [rsp]
  41222e:	mov    rcx,r14
  412231:	lea    rsi,[rip+0x2f1d3]        # 44140b <_IO_stdin_used@@Base+0x1440b>
  412238:	mov    rdi,r12
  41223b:	xor    eax,eax
  41223d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412242:	lea    rsi,[rip+0x2f1de]        # 441427 <_IO_stdin_used@@Base+0x14427>
  412249:	mov    rdi,r12
  41224c:	xor    eax,eax
  41224e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412253:	xor    eax,eax
  412255:	lea    rsi,[rip+0x2f7bc]        # 441a18 <_IO_stdin_used@@Base+0x14a18>
  41225c:	mov    rdi,r12
  41225f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412264:	mov    r8d,DWORD PTR [rsp+0x28]
  412269:	mov    rsi,QWORD PTR [rsp+0x8]
  41226e:	mov    ecx,ebp
  412270:	mov    edx,r13d
  412273:	mov    rdi,r12
  412276:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  41227b:	mov    eax,DWORD PTR [r12+0xf0]
  412283:	test   eax,eax
  412285:	je     412310 <__flatcc_fb_gen_c_verifier@@Base+0x1440>
  41228b:	dec    eax
  41228d:	mov    DWORD PTR [r12+0xf0],eax
  412295:	mov    edx,DWORD PTR [rsp]
  412298:	mov    rcx,r14
  41229b:	lea    rsi,[rip+0x2f18f]        # 441431 <_IO_stdin_used@@Base+0x14431>
  4122a2:	mov    rdi,r12
  4122a5:	xor    eax,eax
  4122a7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4122ac:	lea    r8d,[r13-0x1]
  4122b0:	jmp    412102 <__flatcc_fb_gen_c_verifier@@Base+0x1232>
  4122b5:	nop    DWORD PTR [rax]
  4122b8:	xor    r8d,r8d
  4122bb:	xor    ecx,ecx
  4122bd:	xor    edx,edx
  4122bf:	lea    rsi,[rip+0x2f70a]        # 4419d0 <_IO_stdin_used@@Base+0x149d0>
  4122c6:	mov    rdi,r12
  4122c9:	xor    eax,eax
  4122cb:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4122d0:	xor    r14d,r14d
  4122d3:	inc    DWORD PTR [r12+0xf0]
  4122db:	mov    DWORD PTR [rsp],0x0
  4122e2:	jmp    4120c6 <__flatcc_fb_gen_c_verifier@@Base+0x11f6>
  4122e7:	xor    edx,edx
  4122e9:	xor    ebp,ebp
  4122eb:	jmp    411f47 <__flatcc_fb_gen_c_verifier@@Base+0x1077>
  4122f0:	cmp    DWORD PTR [rsp+0x14],r15d
  4122f5:	setge  al
  4122f8:	mov    r13d,DWORD PTR [rsp+0x10]
  4122fd:	mov    DWORD PTR [rsp],0x0
  412304:	lea    r14,[rip+0x32e13]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41230b:	jmp    412167 <__flatcc_fb_gen_c_verifier@@Base+0x1297>
  412310:	lea    rcx,[rip+0x31759]        # 443a70 <_IO_stdin_used@@Base+0x16a70>
  412317:	mov    edx,0x410
  41231c:	lea    rsi,[rip+0x2f615]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412323:	lea    rdi,[rip+0x2f07b]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41232a:	call   4052e0 <__assert_fail@plt>
  41232f:	lea    rcx,[rip+0x3173a]        # 443a70 <_IO_stdin_used@@Base+0x16a70>
  412336:	mov    edx,0x430
  41233b:	lea    rsi,[rip+0x2f5f6]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412342:	lea    rdi,[rip+0x2f05c]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  412349:	call   4052e0 <__assert_fail@plt>
  41234e:	mov    ecx,DWORD PTR [rsp+0x14]
  412352:	mov    rsi,QWORD PTR [rsp+0x8]
  412357:	mov    r8d,ebx
  41235a:	mov    edx,r15d
  41235d:	mov    rdi,r12
  412360:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  412365:	jmp    411e4b <__flatcc_fb_gen_c_verifier@@Base+0xf7b>
  41236a:	mov    DWORD PTR [rsp],0x0
  412371:	mov    r8d,r15d
  412374:	mov    r13d,r15d
  412377:	lea    r14,[rip+0x32da0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41237e:	mov    edx,DWORD PTR [rsp+0x10]
  412382:	mov    rsi,QWORD PTR [rsp+0x8]
  412387:	lea    ecx,[r8-0x1]
  41238b:	xor    r9d,r9d
  41238e:	mov    r8d,ebx
  412391:	mov    rdi,r12
  412394:	call   411650 <__flatcc_fb_gen_c_verifier@@Base+0x780>
  412399:	jmp    411e4b <__flatcc_fb_gen_c_verifier@@Base+0xf7b>
  41239e:	lea    rcx,[rip+0x316cb]        # 443a70 <_IO_stdin_used@@Base+0x16a70>
  4123a5:	mov    edx,0x414
  4123aa:	lea    rsi,[rip+0x2f587]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4123b1:	lea    rdi,[rip+0x2efed]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4123b8:	call   4052e0 <__assert_fail@plt>
  4123bd:	lea    rcx,[rip+0x316ac]        # 443a70 <_IO_stdin_used@@Base+0x16a70>
  4123c4:	mov    edx,0x3cd
  4123c9:	lea    rsi,[rip+0x2f568]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4123d0:	lea    rdi,[rip+0x2efce]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4123d7:	call   4052e0 <__assert_fail@plt>
  4123dc:	lea    rcx,[rip+0x3168d]        # 443a70 <_IO_stdin_used@@Base+0x16a70>
  4123e3:	mov    edx,0x3cf
  4123e8:	lea    rsi,[rip+0x2f549]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4123ef:	lea    rdi,[rip+0x2efaf]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4123f6:	call   4052e0 <__assert_fail@plt>
  4123fb:	nop    DWORD PTR [rax+rax*1+0x0]
  412400:	endbr64 
  412404:	push   rbp
  412405:	push   rbx
  412406:	mov    rbx,rdi
  412409:	mov    rdi,rsi
  41240c:	sub    rsp,0xe8
  412413:	mov    rbp,rsp
  412416:	mov    rsi,rbp
  412419:	mov    rax,QWORD PTR fs:0x28
  412422:	mov    QWORD PTR [rsp+0xd8],rax
  41242a:	xor    eax,eax
  41242c:	call   4067e0 <__flatcc_fb_copy_scope@@Base>
  412431:	mov    rax,QWORD PTR [rbx+0xd8]
  412438:	mov    rcx,rbp
  41243b:	mov    rdx,QWORD PTR [rax+0x110]
  412442:	lea    rsi,[rip+0x2f5ff]        # 441a48 <_IO_stdin_used@@Base+0x14a48>
  412449:	xor    eax,eax
  41244b:	mov    rdi,rbx
  41244e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412453:	xor    eax,eax
  412455:	lea    rsi,[rip+0x2f65c]        # 441ab8 <_IO_stdin_used@@Base+0x14ab8>
  41245c:	mov    rdi,rbx
  41245f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412464:	mov    rax,QWORD PTR [rsp+0xd8]
  41246c:	xor    rax,QWORD PTR fs:0x28
  412475:	jne    412481 <__flatcc_fb_gen_c_verifier@@Base+0x15b1>
  412477:	add    rsp,0xe8
  41247e:	pop    rbx
  41247f:	pop    rbp
  412480:	ret    
  412481:	call   4052c0 <__stack_chk_fail@plt>
  412486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412490:	push   r14
  412492:	mov    ecx,0x1d
  412497:	push   r13
  412499:	mov    r13,rsi
  41249c:	push   r12
  41249e:	push   rbp
  41249f:	mov    rbp,rdi
  4124a2:	push   rbx
  4124a3:	sub    rsp,0x1f0
  4124aa:	mov    rax,QWORD PTR fs:0x28
  4124b3:	mov    QWORD PTR [rsp+0x1e8],rax
  4124bb:	xor    eax,eax
  4124bd:	lea    rbx,[rsp+0x10]
  4124c2:	mov    rdi,rbx
  4124c5:	lea    r12,[rsp+0x100]
  4124cd:	mov    rdx,rbx
  4124d0:	rep stos QWORD PTR es:[rdi],rax
  4124d3:	mov    ecx,0x1d
  4124d8:	mov    rdi,r12
  4124db:	rep stos QWORD PTR es:[rdi],rax
  4124de:	mov    rdi,QWORD PTR [rsi+0x18]
  4124e2:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4124e7:	mov    rdx,rbx
  4124ea:	lea    rsi,[rip+0x2f5ff]        # 441af0 <_IO_stdin_used@@Base+0x14af0>
  4124f1:	mov    rdi,rbp
  4124f4:	xor    eax,eax
  4124f6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4124fb:	lea    rsi,[rip+0x2efc6]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  412502:	mov    rdi,rbp
  412505:	xor    eax,eax
  412507:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41250c:	inc    DWORD PTR [rbp+0xf0]
  412512:	lea    rsi,[rip+0x32c05]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  412519:	mov    rdi,rbp
  41251c:	xor    eax,eax
  41251e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412523:	lea    rsi,[rip+0x2ef83]        # 4414ad <_IO_stdin_used@@Base+0x144ad>
  41252a:	mov    rdi,rbp
  41252d:	xor    eax,eax
  41252f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412534:	lea    rsi,[rip+0x2ef7f]        # 4414ba <_IO_stdin_used@@Base+0x144ba>
  41253b:	mov    rdi,rbp
  41253e:	xor    eax,eax
  412540:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412545:	lea    rsi,[rip+0x2ef7e]        # 4414ca <_IO_stdin_used@@Base+0x144ca>
  41254c:	mov    rdi,rbp
  41254f:	xor    eax,eax
  412551:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412556:	inc    DWORD PTR [rbp+0xf0]
  41255c:	xor    eax,eax
  41255e:	lea    rsi,[rip+0x2f61b]        # 441b80 <_IO_stdin_used@@Base+0x14b80>
  412565:	mov    rdi,rbp
  412568:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41256d:	mov    eax,DWORD PTR [rbp+0xf0]
  412573:	test   eax,eax
  412575:	je     4129a1 <__flatcc_fb_gen_c_verifier@@Base+0x1ad1>
  41257b:	mov    rbx,QWORD PTR [r13+0x28]
  41257f:	dec    eax
  412581:	mov    DWORD PTR [rbp+0xf0],eax
  412587:	test   rbx,rbx
  41258a:	je     412738 <__flatcc_fb_gen_c_verifier@@Base+0x1868>
  412590:	lea    r13,[rip+0x2ef46]        # 4414dd <_IO_stdin_used@@Base+0x144dd>
  412597:	jmp    41262b <__flatcc_fb_gen_c_verifier@@Base+0x175b>
  41259c:	nop    DWORD PTR [rax+0x0]
  4125a0:	mov    rsi,QWORD PTR [rbx+0x18]
  4125a4:	mov    rdx,r12
  4125a7:	mov    rdi,QWORD PTR [rsi+0x18]
  4125ab:	mov    QWORD PTR [rsp+0x8],r8
  4125b0:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4125b5:	mov    r8,QWORD PTR [rsp+0x8]
  4125ba:	mov    edx,DWORD PTR [rbx+0x48]
  4125bd:	xor    eax,eax
  4125bf:	mov    ecx,r14d
  4125c2:	mov    rsi,r13
  4125c5:	mov    rdi,rbp
  4125c8:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4125cd:	mov    rax,QWORD PTR [rbx+0x18]
  4125d1:	inc    DWORD PTR [rbp+0xf0]
  4125d7:	movzx  eax,WORD PTR [rax+0x10]
  4125db:	test   ax,ax
  4125de:	jne    412710 <__flatcc_fb_gen_c_verifier@@Base+0x1840>
  4125e4:	mov    rdx,r12
  4125e7:	lea    rsi,[rip+0x2f5c2]        # 441bb0 <_IO_stdin_used@@Base+0x14bb0>
  4125ee:	mov    rdi,rbp
  4125f1:	xor    eax,eax
  4125f3:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4125f8:	xor    eax,eax
  4125fa:	lea    rsi,[rip+0x2eef0]        # 4414f1 <_IO_stdin_used@@Base+0x144f1>
  412601:	mov    rdi,rbp
  412604:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412609:	mov    eax,DWORD PTR [rbp+0xf0]
  41260f:	test   eax,eax
  412611:	je     412925 <__flatcc_fb_gen_c_verifier@@Base+0x1a55>
  412617:	dec    eax
  412619:	mov    DWORD PTR [rbp+0xf0],eax
  41261f:	mov    rbx,QWORD PTR [rbx]
  412622:	test   rbx,rbx
  412625:	je     412738 <__flatcc_fb_gen_c_verifier@@Base+0x1868>
  41262b:	mov    rax,QWORD PTR [rbx+0x8]
  41262f:	mov    r8,QWORD PTR [rax]
  412632:	mov    r14,QWORD PTR [rax+0x8]
  412636:	movzx  eax,WORD PTR [rbx+0x28]
  41263a:	cmp    ax,0xa
  41263e:	je     4126a0 <__flatcc_fb_gen_c_verifier@@Base+0x17d0>
  412640:	cmp    ax,0xe
  412644:	je     4125a0 <__flatcc_fb_gen_c_verifier@@Base+0x16d0>
  41264a:	test   ax,ax
  41264d:	je     41261f <__flatcc_fb_gen_c_verifier@@Base+0x174f>
  41264f:	mov    rax,QWORD PTR [rip+0x3e992]        # 450fe8 <stderr@GLIBC_2.2.5>
  412656:	lea    rcx,[rip+0x2f2db]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41265d:	mov    rdi,QWORD PTR [rax]
  412660:	lea    rdx,[rip+0x233ec]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  412667:	mov    esi,0x1
  41266c:	lea    r9,[rip+0x2f625]        # 441c98 <_IO_stdin_used@@Base+0x14c98>
  412673:	mov    r8d,0x5ff
  412679:	xor    eax,eax
  41267b:	call   4053e0 <__fprintf_chk@plt>
  412680:	lea    rcx,[rip+0x313b9]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  412687:	mov    edx,0x5ff
  41268c:	lea    rsi,[rip+0x2f2a5]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412693:	lea    rdi,[rip+0x2447f]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  41269a:	call   4052e0 <__assert_fail@plt>
  41269f:	nop
  4126a0:	mov    edx,DWORD PTR [rbx+0x48]
  4126a3:	mov    ecx,r14d
  4126a6:	mov    rsi,r13
  4126a9:	mov    rdi,rbp
  4126ac:	xor    eax,eax
  4126ae:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4126b3:	inc    DWORD PTR [rbp+0xf0]
  4126b9:	lea    rsi,[rip+0x2f598]        # 441c58 <_IO_stdin_used@@Base+0x14c58>
  4126c0:	mov    rdi,rbp
  4126c3:	xor    eax,eax
  4126c5:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4126ca:	xor    eax,eax
  4126cc:	lea    rsi,[rip+0x2ee1e]        # 4414f1 <_IO_stdin_used@@Base+0x144f1>
  4126d3:	mov    rdi,rbp
  4126d6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4126db:	mov    eax,DWORD PTR [rbp+0xf0]
  4126e1:	test   eax,eax
  4126e3:	jne    412617 <__flatcc_fb_gen_c_verifier@@Base+0x1747>
  4126e9:	lea    rcx,[rip+0x31350]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  4126f0:	mov    edx,0x5fc
  4126f5:	lea    rsi,[rip+0x2f23c]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4126fc:	lea    rdi,[rip+0x2eca2]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  412703:	call   4052e0 <__assert_fail@plt>
  412708:	nop    DWORD PTR [rax+rax*1+0x0]
  412710:	cmp    ax,0x1
  412714:	jne    4128d5 <__flatcc_fb_gen_c_verifier@@Base+0x1a05>
  41271a:	mov    rdx,r12
  41271d:	lea    rsi,[rip+0x2f4c4]        # 441be8 <_IO_stdin_used@@Base+0x14be8>
  412724:	mov    rdi,rbp
  412727:	xor    eax,eax
  412729:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41272e:	jmp    4125f8 <__flatcc_fb_gen_c_verifier@@Base+0x1728>
  412733:	nop    DWORD PTR [rax+rax*1+0x0]
  412738:	lea    rsi,[rip+0x2edb9]        # 4414f8 <_IO_stdin_used@@Base+0x144f8>
  41273f:	mov    rdi,rbp
  412742:	xor    eax,eax
  412744:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412749:	inc    DWORD PTR [rbp+0xf0]
  41274f:	lea    rsi,[rip+0x2f572]        # 441cc8 <_IO_stdin_used@@Base+0x14cc8>
  412756:	mov    rdi,rbp
  412759:	xor    eax,eax
  41275b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412760:	inc    DWORD PTR [rbp+0xf0]
  412766:	xor    eax,eax
  412768:	lea    rsi,[rip+0x2f599]        # 441d08 <_IO_stdin_used@@Base+0x14d08>
  41276f:	mov    rdi,rbp
  412772:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412777:	mov    eax,DWORD PTR [rbp+0xf0]
  41277d:	test   eax,eax
  41277f:	je     4129e4 <__flatcc_fb_gen_c_verifier@@Base+0x1b14>
  412785:	dec    eax
  412787:	mov    DWORD PTR [rbp+0xf0],eax
  41278d:	lea    rsi,[rip+0x2ed6d]        # 441501 <_IO_stdin_used@@Base+0x14501>
  412794:	mov    rdi,rbp
  412797:	xor    eax,eax
  412799:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41279e:	inc    DWORD PTR [rbp+0xf0]
  4127a4:	xor    eax,eax
  4127a6:	lea    rsi,[rip+0x2f5bb]        # 441d68 <_IO_stdin_used@@Base+0x14d68>
  4127ad:	mov    rdi,rbp
  4127b0:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4127b5:	mov    eax,DWORD PTR [rbp+0xf0]
  4127bb:	test   eax,eax
  4127bd:	je     412944 <__flatcc_fb_gen_c_verifier@@Base+0x1a74>
  4127c3:	dec    eax
  4127c5:	mov    DWORD PTR [rbp+0xf0],eax
  4127cb:	lea    rsi,[rip+0x2ebdf]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  4127d2:	xor    eax,eax
  4127d4:	mov    rdi,rbp
  4127d7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4127dc:	mov    eax,DWORD PTR [rbp+0xf0]
  4127e2:	test   eax,eax
  4127e4:	je     412963 <__flatcc_fb_gen_c_verifier@@Base+0x1a93>
  4127ea:	dec    eax
  4127ec:	mov    DWORD PTR [rbp+0xf0],eax
  4127f2:	lea    rsi,[rip+0x2ebb8]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  4127f9:	mov    rdi,rbp
  4127fc:	xor    eax,eax
  4127fe:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412803:	lea    rsi,[rip+0x2ed00]        # 44150a <_IO_stdin_used@@Base+0x1450a>
  41280a:	mov    rdi,rbp
  41280d:	xor    eax,eax
  41280f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412814:	lea    rsi,[rip+0x2ed0b]        # 441526 <_IO_stdin_used@@Base+0x14526>
  41281b:	mov    rdi,rbp
  41281e:	xor    eax,eax
  412820:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412825:	inc    DWORD PTR [rbp+0xf0]
  41282b:	xor    eax,eax
  41282d:	lea    rsi,[rip+0x2f56c]        # 441da0 <_IO_stdin_used@@Base+0x14da0>
  412834:	mov    rdi,rbp
  412837:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41283c:	mov    eax,DWORD PTR [rbp+0xf0]
  412842:	test   eax,eax
  412844:	je     412982 <__flatcc_fb_gen_c_verifier@@Base+0x1ab2>
  41284a:	dec    eax
  41284c:	mov    DWORD PTR [rbp+0xf0],eax
  412852:	lea    rsi,[rip+0x2eb58]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  412859:	mov    rdi,rbp
  41285c:	xor    eax,eax
  41285e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412863:	xor    eax,eax
  412865:	lea    rsi,[rip+0x2ecae]        # 44151a <_IO_stdin_used@@Base+0x1451a>
  41286c:	mov    rdi,rbp
  41286f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412874:	mov    eax,DWORD PTR [rbp+0xf0]
  41287a:	test   eax,eax
  41287c:	je     4129c5 <__flatcc_fb_gen_c_verifier@@Base+0x1af5>
  412882:	dec    eax
  412884:	mov    DWORD PTR [rbp+0xf0],eax
  41288a:	lea    rsi,[rip+0x2eb20]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  412891:	xor    eax,eax
  412893:	mov    rdi,rbp
  412896:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41289b:	xor    eax,eax
  41289d:	lea    rsi,[rip+0x3287a]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4128a4:	mov    rdi,rbp
  4128a7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4128ac:	xor    eax,eax
  4128ae:	mov    rcx,QWORD PTR [rsp+0x1e8]
  4128b6:	xor    rcx,QWORD PTR fs:0x28
  4128bf:	jne    4129c0 <__flatcc_fb_gen_c_verifier@@Base+0x1af0>
  4128c5:	add    rsp,0x1f0
  4128cc:	pop    rbx
  4128cd:	pop    rbp
  4128ce:	pop    r12
  4128d0:	pop    r13
  4128d2:	pop    r14
  4128d4:	ret    
  4128d5:	mov    rax,QWORD PTR [rip+0x3e70c]        # 450fe8 <stderr@GLIBC_2.2.5>
  4128dc:	lea    rcx,[rip+0x2f055]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4128e3:	mov    rdi,QWORD PTR [rax]
  4128e6:	lea    rdx,[rip+0x23166]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  4128ed:	mov    esi,0x1
  4128f2:	lea    r9,[rip+0x2f327]        # 441c20 <_IO_stdin_used@@Base+0x14c20>
  4128f9:	mov    r8d,0x5f2
  4128ff:	xor    eax,eax
  412901:	call   4053e0 <__fprintf_chk@plt>
  412906:	lea    rcx,[rip+0x31133]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  41290d:	mov    edx,0x5f2
  412912:	lea    rsi,[rip+0x2f01f]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412919:	lea    rdi,[rip+0x241f9]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  412920:	call   4052e0 <__assert_fail@plt>
  412925:	lea    rcx,[rip+0x31114]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  41292c:	mov    edx,0x5f6
  412931:	lea    rsi,[rip+0x2f000]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412938:	lea    rdi,[rip+0x2ea66]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41293f:	call   4052e0 <__assert_fail@plt>
  412944:	lea    rcx,[rip+0x310f5]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  41294b:	mov    edx,0x609
  412950:	lea    rsi,[rip+0x2efe1]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412957:	lea    rdi,[rip+0x2ea47]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41295e:	call   4052e0 <__assert_fail@plt>
  412963:	lea    rcx,[rip+0x310d6]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  41296a:	mov    edx,0x60a
  41296f:	lea    rsi,[rip+0x2efc2]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412976:	lea    rdi,[rip+0x2ea28]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41297d:	call   4052e0 <__assert_fail@plt>
  412982:	lea    rcx,[rip+0x310b7]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  412989:	mov    edx,0x60e
  41298e:	lea    rsi,[rip+0x2efa3]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412995:	lea    rdi,[rip+0x2ea09]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41299c:	call   4052e0 <__assert_fail@plt>
  4129a1:	lea    rcx,[rip+0x31098]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  4129a8:	mov    edx,0x5df
  4129ad:	lea    rsi,[rip+0x2ef84]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4129b4:	lea    rdi,[rip+0x2e9ea]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4129bb:	call   4052e0 <__assert_fail@plt>
  4129c0:	call   4052c0 <__stack_chk_fail@plt>
  4129c5:	lea    rcx,[rip+0x31074]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  4129cc:	mov    edx,0x610
  4129d1:	lea    rsi,[rip+0x2ef60]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4129d8:	lea    rdi,[rip+0x2e9c6]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4129df:	call   4052e0 <__assert_fail@plt>
  4129e4:	lea    rcx,[rip+0x31055]        # 443a40 <_IO_stdin_used@@Base+0x16a40>
  4129eb:	mov    edx,0x607
  4129f0:	lea    rsi,[rip+0x2ef41]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4129f7:	lea    rdi,[rip+0x2e9a7]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4129fe:	call   4052e0 <__assert_fail@plt>
  412a03:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  412a0e:	xchg   ax,ax
  412a10:	push   r12
  412a12:	mov    ecx,0x1d
  412a17:	mov    r12,rsi
  412a1a:	push   rbp
  412a1b:	mov    rbp,rdi
  412a1e:	push   rbx
  412a1f:	sub    rsp,0x1e0
  412a26:	mov    rax,QWORD PTR fs:0x28
  412a2f:	mov    QWORD PTR [rsp+0x1d8],rax
  412a37:	xor    eax,eax
  412a39:	mov    rbx,rsp
  412a3c:	mov    rdi,rbx
  412a3f:	lea    rdx,[rsp+0xf0]
  412a47:	rep stos QWORD PTR es:[rdi],rax
  412a4a:	mov    rdi,rdx
  412a4d:	mov    ecx,0x1d
  412a52:	rep stos QWORD PTR es:[rdi],rax
  412a55:	mov    rdi,QWORD PTR [rsi+0x18]
  412a59:	mov    rdx,rbx
  412a5c:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  412a61:	mov    rdx,rbx
  412a64:	lea    rsi,[rip+0x2f38d]        # 441df8 <_IO_stdin_used@@Base+0x14df8>
  412a6b:	mov    rdi,rbp
  412a6e:	xor    eax,eax
  412a70:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412a75:	lea    rsi,[rip+0x2ea4c]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  412a7c:	mov    rdi,rbp
  412a7f:	xor    eax,eax
  412a81:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412a86:	inc    DWORD PTR [rbp+0xf0]
  412a8c:	lea    rsi,[rip+0x2ea27]        # 4414ba <_IO_stdin_used@@Base+0x144ba>
  412a93:	mov    rdi,rbp
  412a96:	xor    eax,eax
  412a98:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412a9d:	mov    rbx,QWORD PTR [r12+0x28]
  412aa2:	test   rbx,rbx
  412aa5:	je     412af3 <__flatcc_fb_gen_c_verifier@@Base+0x1c23>
  412aa7:	lea    r12,[rip+0x2eaa5]        # 441553 <_IO_stdin_used@@Base+0x14553>
  412aae:	jmp    412ad3 <__flatcc_fb_gen_c_verifier@@Base+0x1c03>
  412ab0:	mov    rax,QWORD PTR [rbx+0x8]
  412ab4:	mov    edx,DWORD PTR [rbx+0x48]
  412ab7:	mov    rcx,QWORD PTR [rax+0x8]
  412abb:	mov    r8,QWORD PTR [rax]
  412abe:	mov    rsi,r12
  412ac1:	mov    rdi,rbp
  412ac4:	xor    eax,eax
  412ac6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412acb:	mov    rbx,QWORD PTR [rbx]
  412ace:	test   rbx,rbx
  412ad1:	je     412af3 <__flatcc_fb_gen_c_verifier@@Base+0x1c23>
  412ad3:	cmp    WORD PTR [rbx+0x28],0x0
  412ad8:	jne    412ab0 <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
  412ada:	lea    rsi,[rip+0x2ea55]        # 441536 <_IO_stdin_used@@Base+0x14536>
  412ae1:	mov    rdi,rbp
  412ae4:	xor    eax,eax
  412ae6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412aeb:	mov    rbx,QWORD PTR [rbx]
  412aee:	test   rbx,rbx
  412af1:	jne    412ad3 <__flatcc_fb_gen_c_verifier@@Base+0x1c03>
  412af3:	xor    eax,eax
  412af5:	lea    rsi,[rip+0x2ea75]        # 441571 <_IO_stdin_used@@Base+0x14571>
  412afc:	mov    rdi,rbp
  412aff:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412b04:	mov    eax,DWORD PTR [rbp+0xf0]
  412b0a:	lea    edx,[rax+0x1]
  412b0d:	mov    DWORD PTR [rbp+0xf0],edx
  412b13:	test   edx,edx
  412b15:	je     412b83 <__flatcc_fb_gen_c_verifier@@Base+0x1cb3>
  412b17:	mov    DWORD PTR [rbp+0xf0],eax
  412b1d:	lea    rsi,[rip+0x2e88d]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  412b24:	xor    eax,eax
  412b26:	mov    rdi,rbp
  412b29:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412b2e:	mov    eax,DWORD PTR [rbp+0xf0]
  412b34:	test   eax,eax
  412b36:	je     412ba7 <__flatcc_fb_gen_c_verifier@@Base+0x1cd7>
  412b38:	dec    eax
  412b3a:	mov    DWORD PTR [rbp+0xf0],eax
  412b40:	lea    rsi,[rip+0x2e86a]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  412b47:	xor    eax,eax
  412b49:	mov    rdi,rbp
  412b4c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412b51:	xor    eax,eax
  412b53:	lea    rsi,[rip+0x325c4]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  412b5a:	mov    rdi,rbp
  412b5d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412b62:	xor    eax,eax
  412b64:	mov    rdx,QWORD PTR [rsp+0x1d8]
  412b6c:	xor    rdx,QWORD PTR fs:0x28
  412b75:	jne    412ba2 <__flatcc_fb_gen_c_verifier@@Base+0x1cd2>
  412b77:	add    rsp,0x1e0
  412b7e:	pop    rbx
  412b7f:	pop    rbp
  412b80:	pop    r12
  412b82:	ret    
  412b83:	lea    rcx,[rip+0x30e96]        # 443a20 <_IO_stdin_used@@Base+0x16a20>
  412b8a:	mov    edx,0x62e
  412b8f:	lea    rsi,[rip+0x2eda2]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412b96:	lea    rdi,[rip+0x2e808]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  412b9d:	call   4052e0 <__assert_fail@plt>
  412ba2:	call   4052c0 <__stack_chk_fail@plt>
  412ba7:	lea    rcx,[rip+0x30e72]        # 443a20 <_IO_stdin_used@@Base+0x16a20>
  412bae:	mov    edx,0x62f
  412bb3:	lea    rsi,[rip+0x2ed7e]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412bba:	lea    rdi,[rip+0x2e7e4]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  412bc1:	call   4052e0 <__assert_fail@plt>
  412bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412bd0:	endbr64 
  412bd4:	push   r15
  412bd6:	mov    r15,rsi
  412bd9:	vpxor  xmm0,xmm0,xmm0
  412bdd:	push   r14
  412bdf:	push   r13
  412be1:	push   r12
  412be3:	push   rbp
  412be4:	push   rbx
  412be5:	mov    rbx,rdi
  412be8:	mov    rdi,r15
  412beb:	sub    rsp,0x138
  412bf2:	lea    r13,[rsp+0x50]
  412bf7:	mov    rsi,r13
  412bfa:	mov    rax,QWORD PTR fs:0x28
  412c03:	mov    QWORD PTR [rsp+0x128],rax
  412c0b:	xor    eax,eax
  412c0d:	mov    r14,rsp
  412c10:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  412c16:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  412c1c:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  412c22:	add    r15,0x8
  412c26:	call   4067e0 <__flatcc_fb_copy_scope@@Base>
  412c2b:	mov    rax,QWORD PTR [rbx+0xd8]
  412c32:	vpxor  xmm0,xmm0,xmm0
  412c36:	mov    rdx,r14
  412c39:	lea    rsi,[rip+0x26e0]        # 415320 <__flatcc_fb_gen_c_verifier@@Base+0x4450>
  412c40:	mov    rdi,r15
  412c43:	vmovaps XMMWORD PTR [rsp],xmm0
  412c48:	mov    QWORD PTR [rsp+0x10],0x0
  412c51:	mov    QWORD PTR [rsp+0x8],rax
  412c56:	call   41b580 <fb_symbol_table_visit@@Base>
  412c5b:	mov    r12d,DWORD PTR [rsp]
  412c5f:	test   r12d,r12d
  412c62:	je     412ea0 <__flatcc_fb_gen_c_verifier@@Base+0x1fd0>
  412c68:	movsxd rdi,r12d
  412c6b:	shl    rdi,0x5
  412c6f:	call   405360 <malloc@plt>
  412c74:	mov    rbp,rax
  412c77:	test   rax,rax
  412c7a:	je     412eb0 <__flatcc_fb_gen_c_verifier@@Base+0x1fe0>
  412c80:	mov    rdx,r14
  412c83:	lea    rsi,[rip+0x26d6]        # 415360 <__flatcc_fb_gen_c_verifier@@Base+0x4490>
  412c8a:	mov    rdi,r15
  412c8d:	mov    QWORD PTR [rsp+0x10],rax
  412c92:	call   41b580 <fb_symbol_table_visit@@Base>
  412c97:	movsxd rsi,DWORD PTR [rsp]
  412c9b:	lea    rcx,[rip+0xffffffffffffe6de]        # 411380 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
  412ca2:	mov    edx,0x20
  412ca7:	mov    rdi,rbp
  412caa:	call   405270 <qsort@plt>
  412caf:	mov    QWORD PTR [rsp+0x20],rbp
  412cb4:	lea    rax,[rip+0x3e5]        # 4130a0 <__flatcc_fb_gen_c_verifier@@Base+0x21d0>
  412cbb:	mov    QWORD PTR [rsp+0x28],rax
  412cc0:	lea    rax,[rip+0xffffffffffffe979]        # 411640 <__flatcc_fb_gen_c_verifier@@Base+0x770>
  412cc7:	mov    QWORD PTR [rsp+0x30],rax
  412ccc:	mov    rax,QWORD PTR [rbx+0xd8]
  412cd3:	mov    rcx,r13
  412cd6:	mov    rdx,QWORD PTR [rax+0x110]
  412cdd:	lea    rsi,[rip+0x2ed64]        # 441a48 <_IO_stdin_used@@Base+0x14a48>
  412ce4:	mov    rdi,rbx
  412ce7:	xor    eax,eax
  412ce9:	mov    QWORD PTR [rsp+0x38],0x0
  412cf2:	mov    DWORD PTR [rsp+0x40],0x3
  412cfa:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412cff:	add    DWORD PTR [rbx+0xf0],0x2
  412d06:	xor    eax,eax
  412d08:	lea    rsi,[rip+0x2f161]        # 441e70 <_IO_stdin_used@@Base+0x14e70>
  412d0f:	mov    rdi,rbx
  412d12:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d17:	mov    eax,DWORD PTR [rbx+0xf0]
  412d1d:	test   eax,eax
  412d1f:	je     412f1c <__flatcc_fb_gen_c_verifier@@Base+0x204c>
  412d25:	cmp    eax,0x1
  412d28:	je     412f12 <__flatcc_fb_gen_c_verifier@@Base+0x2042>
  412d2e:	sub    eax,0x2
  412d31:	mov    DWORD PTR [rbx+0xf0],eax
  412d37:	lea    rsi,[rip+0x2e78a]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  412d3e:	mov    rdi,rbx
  412d41:	xor    eax,eax
  412d43:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d48:	inc    DWORD PTR [rbx+0xf0]
  412d4e:	test   r12d,r12d
  412d51:	je     412e48 <__flatcc_fb_gen_c_verifier@@Base+0x1f78>
  412d57:	lea    rsi,[rip+0x2e843]        # 4415a1 <_IO_stdin_used@@Base+0x145a1>
  412d5e:	mov    rdi,rbx
  412d61:	xor    eax,eax
  412d63:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d68:	lea    rsi,[rip+0x2e84f]        # 4415be <_IO_stdin_used@@Base+0x145be>
  412d6f:	mov    rdi,rbx
  412d72:	xor    eax,eax
  412d74:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d79:	lea    rsi,[rip+0x2e850]        # 4415d0 <_IO_stdin_used@@Base+0x145d0>
  412d80:	mov    rdi,rbx
  412d83:	xor    eax,eax
  412d85:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d8a:	lea    rsi,[rip+0x3238d]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  412d91:	mov    rdi,rbx
  412d94:	xor    eax,eax
  412d96:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412d9b:	xor    eax,eax
  412d9d:	lea    rsi,[rip+0x2ec74]        # 441a18 <_IO_stdin_used@@Base+0x14a18>
  412da4:	mov    rdi,rbx
  412da7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412dac:	lea    ecx,[r12-0x1]
  412db1:	lea    rsi,[rsp+0x20]
  412db6:	xor    r8d,r8d
  412db9:	xor    edx,edx
  412dbb:	mov    rdi,rbx
  412dbe:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  412dc3:	xor    eax,eax
  412dc5:	lea    rsi,[rip+0x2e74e]        # 44151a <_IO_stdin_used@@Base+0x1451a>
  412dcc:	mov    rdi,rbx
  412dcf:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412dd4:	mov    eax,DWORD PTR [rbx+0xf0]
  412dda:	test   eax,eax
  412ddc:	je     412f40 <__flatcc_fb_gen_c_verifier@@Base+0x2070>
  412de2:	dec    eax
  412de4:	mov    DWORD PTR [rbx+0xf0],eax
  412dea:	lea    rsi,[rip+0x2e5c0]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  412df1:	mov    rdi,rbx
  412df4:	xor    eax,eax
  412df6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412dfb:	mov    rdi,rbx
  412dfe:	lea    rsi,[rip+0x32319]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  412e05:	xor    eax,eax
  412e07:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412e0c:	mov    rdi,QWORD PTR [rsp+0x20]
  412e11:	test   rdi,rdi
  412e14:	je     412e1b <__flatcc_fb_gen_c_verifier@@Base+0x1f4b>
  412e16:	call   405230 <free@plt>
  412e1b:	mov    rax,QWORD PTR [rsp+0x128]
  412e23:	xor    rax,QWORD PTR fs:0x28
  412e2c:	jne    412f3b <__flatcc_fb_gen_c_verifier@@Base+0x206b>
  412e32:	add    rsp,0x138
  412e39:	pop    rbx
  412e3a:	pop    rbp
  412e3b:	pop    r12
  412e3d:	pop    r13
  412e3f:	pop    r14
  412e41:	pop    r15
  412e43:	ret    
  412e44:	nop    DWORD PTR [rax+0x0]
  412e48:	lea    rsi,[rip+0x2f059]        # 441ea8 <_IO_stdin_used@@Base+0x14ea8>
  412e4f:	mov    rdi,rbx
  412e52:	xor    eax,eax
  412e54:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412e59:	xor    eax,eax
  412e5b:	lea    rsi,[rip+0x2e722]        # 441584 <_IO_stdin_used@@Base+0x14584>
  412e62:	mov    rdi,rbx
  412e65:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412e6a:	mov    eax,DWORD PTR [rbx+0xf0]
  412e70:	test   eax,eax
  412e72:	jne    412de2 <__flatcc_fb_gen_c_verifier@@Base+0x1f12>
  412e78:	lea    rcx,[rip+0x30c31]        # 443ab0 <_IO_stdin_used@@Base+0x16ab0>
  412e7f:	mov    edx,0x485
  412e84:	lea    rsi,[rip+0x2eaad]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412e8b:	lea    rdi,[rip+0x2e513]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  412e92:	call   4052e0 <__assert_fail@plt>
  412e97:	nop    WORD PTR [rax+rax*1+0x0]
  412ea0:	mov    QWORD PTR [rsp+0x20],0x0
  412ea9:	jmp    412cb4 <__flatcc_fb_gen_c_verifier@@Base+0x1de4>
  412eae:	xchg   ax,ax
  412eb0:	mov    QWORD PTR [rsp+0x20],0x0
  412eb9:	test   r12d,r12d
  412ebc:	jle    412cb4 <__flatcc_fb_gen_c_verifier@@Base+0x1de4>
  412ec2:	mov    rax,QWORD PTR [rip+0x3e11f]        # 450fe8 <stderr@GLIBC_2.2.5>
  412ec9:	lea    rcx,[rip+0x2ea68]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412ed0:	mov    rdi,QWORD PTR [rax]
  412ed3:	lea    rdx,[rip+0x22b79]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  412eda:	mov    esi,0x1
  412edf:	lea    r9,[rip+0x2ef4a]        # 441e30 <_IO_stdin_used@@Base+0x14e30>
  412ee6:	mov    r8d,0x474
  412eec:	xor    eax,eax
  412eee:	call   4053e0 <__fprintf_chk@plt>
  412ef3:	lea    rcx,[rip+0x30bb6]        # 443ab0 <_IO_stdin_used@@Base+0x16ab0>
  412efa:	mov    edx,0x474
  412eff:	lea    rsi,[rip+0x2ea32]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412f06:	lea    rdi,[rip+0x23c0c]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  412f0d:	call   4052e0 <__assert_fail@plt>
  412f12:	mov    DWORD PTR [rbx+0xf0],0x0
  412f1c:	lea    rcx,[rip+0x30b8d]        # 443ab0 <_IO_stdin_used@@Base+0x16ab0>
  412f23:	mov    edx,0x480
  412f28:	lea    rsi,[rip+0x2ea09]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412f2f:	lea    rdi,[rip+0x2e46f]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  412f36:	call   4052e0 <__assert_fail@plt>
  412f3b:	call   4052c0 <__stack_chk_fail@plt>
  412f40:	lea    rcx,[rip+0x30b69]        # 443ab0 <_IO_stdin_used@@Base+0x16ab0>
  412f47:	mov    edx,0x48e
  412f4c:	lea    rsi,[rip+0x2e9e5]        # 441938 <_IO_stdin_used@@Base+0x14938>
  412f53:	lea    rdi,[rip+0x2e44b]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  412f5a:	call   4052e0 <__assert_fail@plt>
  412f5f:	nop
  412f60:	endbr64 
  412f64:	push   r12
  412f66:	xor    eax,eax
  412f68:	mov    r12,rdx
  412f6b:	push   rbp
  412f6c:	mov    edx,r8d
  412f6f:	mov    rbp,rsi
  412f72:	push   rbx
  412f73:	lea    rsi,[rip+0x2ef66]        # 441ee0 <_IO_stdin_used@@Base+0x14ee0>
  412f7a:	mov    rbx,rdi
  412f7d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412f82:	xor    eax,eax
  412f84:	lea    rsi,[rip+0x2e651]        # 4415dc <_IO_stdin_used@@Base+0x145dc>
  412f8b:	mov    rdi,rbx
  412f8e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412f93:	mov    eax,DWORD PTR [rbp+0x48]
  412f96:	inc    DWORD PTR [rbx+0xf0]
  412f9c:	test   eax,eax
  412f9e:	je     413030 <__flatcc_fb_gen_c_verifier@@Base+0x2160>
  412fa4:	cmp    eax,0x5
  412fa7:	jbe    413018 <__flatcc_fb_gen_c_verifier@@Base+0x2148>
  412fa9:	cmp    eax,0x9
  412fac:	ja     413030 <__flatcc_fb_gen_c_verifier@@Base+0x2160>
  412fb2:	mov    rdx,QWORD PTR [r12+0x48]
  412fb7:	test   rdx,rdx
  412fba:	js     413000 <__flatcc_fb_gen_c_verifier@@Base+0x2130>
  412fbc:	lea    rsi,[rip+0x2ef6d]        # 441f30 <_IO_stdin_used@@Base+0x14f30>
  412fc3:	mov    rdi,rbx
  412fc6:	xor    eax,eax
  412fc8:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412fcd:	mov    eax,DWORD PTR [rbx+0xf0]
  412fd3:	test   eax,eax
  412fd5:	je     413080 <__flatcc_fb_gen_c_verifier@@Base+0x21b0>
  412fdb:	dec    eax
  412fdd:	mov    DWORD PTR [rbx+0xf0],eax
  412fe3:	mov    rdi,rbx
  412fe6:	lea    rsi,[rip+0x2e514]        # 441501 <_IO_stdin_used@@Base+0x14501>
  412fed:	xor    eax,eax
  412fef:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  412ff4:	inc    DWORD PTR [rbx+0xf0]
  412ffa:	pop    rbx
  412ffb:	pop    rbp
  412ffc:	pop    r12
  412ffe:	ret    
  412fff:	nop
  413000:	lea    rsi,[rip+0x2ef59]        # 441f60 <_IO_stdin_used@@Base+0x14f60>
  413007:	mov    rdi,rbx
  41300a:	xor    eax,eax
  41300c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413011:	jmp    412fcd <__flatcc_fb_gen_c_verifier@@Base+0x20fd>
  413013:	nop    DWORD PTR [rax+rax*1+0x0]
  413018:	mov    rdx,QWORD PTR [r12+0x48]
  41301d:	lea    rsi,[rip+0x2ef0c]        # 441f30 <_IO_stdin_used@@Base+0x14f30>
  413024:	mov    rdi,rbx
  413027:	xor    eax,eax
  413029:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41302e:	jmp    412fcd <__flatcc_fb_gen_c_verifier@@Base+0x20fd>
  413030:	mov    rax,QWORD PTR [rip+0x3dfb1]        # 450fe8 <stderr@GLIBC_2.2.5>
  413037:	lea    rcx,[rip+0x2e8fa]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41303e:	mov    rdi,QWORD PTR [rax]
  413041:	lea    rdx,[rip+0x22a0b]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  413048:	mov    esi,0x1
  41304d:	lea    r9,[rip+0x2ef3c]        # 441f90 <_IO_stdin_used@@Base+0x14f90>
  413054:	mov    r8d,0x2c6
  41305a:	xor    eax,eax
  41305c:	call   4053e0 <__fprintf_chk@plt>
  413061:	lea    rcx,[rip+0x308c8]        # 443930 <_IO_stdin_used@@Base+0x16930>
  413068:	mov    edx,0x2c6
  41306d:	lea    rsi,[rip+0x2e8c4]        # 441938 <_IO_stdin_used@@Base+0x14938>
  413074:	lea    rdi,[rip+0x23a9e]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  41307b:	call   4052e0 <__assert_fail@plt>
  413080:	lea    rcx,[rip+0x308c1]        # 443948 <_IO_stdin_used@@Base+0x16948>
  413087:	mov    edx,0x2cf
  41308c:	lea    rsi,[rip+0x2e8a5]        # 441938 <_IO_stdin_used@@Base+0x14938>
  413093:	lea    rdi,[rip+0x2e30b]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41309a:	call   4052e0 <__assert_fail@plt>
  41309f:	nop
  4130a0:	endbr64 
  4130a4:	push   r12
  4130a6:	lea    rsi,[rip+0x2ef0b]        # 441fb8 <_IO_stdin_used@@Base+0x14fb8>
  4130ad:	mov    r12,rdx
  4130b0:	push   rbp
  4130b1:	mov    edx,r8d
  4130b4:	push   rbx
  4130b5:	mov    rbx,rdi
  4130b8:	sub    rsp,0xf0
  4130bf:	mov    rax,QWORD PTR fs:0x28
  4130c8:	mov    QWORD PTR [rsp+0xe8],rax
  4130d0:	xor    eax,eax
  4130d2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4130d7:	xor    eax,eax
  4130d9:	lea    rsi,[rip+0x2e4fc]        # 4415dc <_IO_stdin_used@@Base+0x145dc>
  4130e0:	mov    rdi,rbx
  4130e3:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4130e8:	movzx  eax,WORD PTR [r12+0x10]
  4130ee:	inc    DWORD PTR [rbx+0xf0]
  4130f4:	sub    eax,0x3
  4130f7:	cmp    ax,0x1
  4130fb:	ja     413179 <__flatcc_fb_gen_c_verifier@@Base+0x22a9>
  4130fd:	mov    rbp,rsp
  413100:	xor    eax,eax
  413102:	mov    ecx,0x1d
  413107:	mov    rdi,rbp
  41310a:	rep stos QWORD PTR es:[rdi],rax
  41310d:	mov    rdi,QWORD PTR [r12+0x18]
  413112:	mov    rdx,rbp
  413115:	mov    rsi,r12
  413118:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  41311d:	xor    eax,eax
  41311f:	mov    rdx,rbp
  413122:	lea    rsi,[rip+0x2eed7]        # 442000 <_IO_stdin_used@@Base+0x15000>
  413129:	mov    rdi,rbx
  41312c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413131:	mov    eax,DWORD PTR [rbx+0xf0]
  413137:	test   eax,eax
  413139:	je     41319d <__flatcc_fb_gen_c_verifier@@Base+0x22cd>
  41313b:	dec    eax
  41313d:	mov    DWORD PTR [rbx+0xf0],eax
  413143:	lea    rsi,[rip+0x2e3b7]        # 441501 <_IO_stdin_used@@Base+0x14501>
  41314a:	xor    eax,eax
  41314c:	mov    rdi,rbx
  41314f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413154:	inc    DWORD PTR [rbx+0xf0]
  41315a:	mov    rax,QWORD PTR [rsp+0xe8]
  413162:	xor    rax,QWORD PTR fs:0x28
  41316b:	jne    413198 <__flatcc_fb_gen_c_verifier@@Base+0x22c8>
  41316d:	add    rsp,0xf0
  413174:	pop    rbx
  413175:	pop    rbp
  413176:	pop    r12
  413178:	ret    
  413179:	lea    rcx,[rip+0x30900]        # 443a80 <_IO_stdin_used@@Base+0x16a80>
  413180:	mov    edx,0x2d9
  413185:	lea    rsi,[rip+0x2e7ac]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41318c:	lea    rdi,[rip+0x1bcd5]        # 42ee68 <_IO_stdin_used@@Base+0x1e68>
  413193:	call   4052e0 <__assert_fail@plt>
  413198:	call   4052c0 <__stack_chk_fail@plt>
  41319d:	lea    rcx,[rip+0x308fc]        # 443aa0 <_IO_stdin_used@@Base+0x16aa0>
  4131a4:	mov    edx,0x2e6
  4131a9:	lea    rsi,[rip+0x2e788]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4131b0:	lea    rdi,[rip+0x2e1ee]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4131b7:	call   4052e0 <__assert_fail@plt>
  4131bc:	nop    DWORD PTR [rax+0x0]
  4131c0:	push   r15
  4131c2:	push   r14
  4131c4:	push   r13
  4131c6:	push   r12
  4131c8:	mov    r12,rcx
  4131cb:	mov    ecx,0x1d
  4131d0:	push   rbp
  4131d1:	mov    rbp,rsi
  4131d4:	push   rbx
  4131d5:	mov    rbx,rdi
  4131d8:	sub    rsp,0x238
  4131df:	mov    DWORD PTR [rsp+0x18],r8d
  4131e4:	lea    rdi,[rsp+0x60]
  4131e9:	mov    rax,QWORD PTR fs:0x28
  4131f2:	mov    QWORD PTR [rsp+0x228],rax
  4131fa:	xor    eax,eax
  4131fc:	mov    QWORD PTR [rsp+0x20],rdi
  413201:	rep stos QWORD PTR es:[rdi],rax
  413204:	lea    rax,[rsp+0x150]
  41320c:	mov    rdi,QWORD PTR [rdx]
  41320f:	mov    rsi,rax
  413212:	mov    QWORD PTR [rsp+0x40],rax
  413217:	call   4067e0 <__flatcc_fb_copy_scope@@Base>
  41321c:	movzx  eax,WORD PTR [rbp+0x0]
  413220:	cmp    ax,0x1
  413224:	mov    WORD PTR [rsp+0x1e],ax
  413229:	sete   al
  41322c:	movzx  eax,al
  41322f:	mov    DWORD PTR [rsp+0x4c],eax
  413233:	movzx  eax,WORD PTR [r12+0x28]
  413239:	cmp    ax,0xf
  41323d:	ja     413280 <__flatcc_fb_gen_c_verifier@@Base+0x23b0>
  41323f:	mov    r13d,0x1
  413245:	shlx   r13,r13,rax
  41324a:	xor    ebp,ebp
  41324c:	and    r13d,0x8280
  413253:	setne  bpl
  413257:	sub    eax,0x7
  41325a:	cmp    ax,0x8
  41325e:	ja     4141a7 <__flatcc_fb_gen_c_verifier@@Base+0x32d7>
  413264:	lea    rdx,[rip+0x30605]        # 443870 <_IO_stdin_used@@Base+0x16870>
  41326b:	movzx  eax,ax
  41326e:	movsxd rax,DWORD PTR [rdx+rax*4]
  413272:	add    rax,rdx
  413275:	notrack jmp rax
  413278:	nop    DWORD PTR [rax+rax*1+0x0]
  413280:	mov    eax,DWORD PTR [rsp+0x18]
  413284:	test   eax,eax
  413286:	je     4140f4 <__flatcc_fb_gen_c_verifier@@Base+0x3224>
  41328c:	xor    r14d,r14d
  41328f:	mov    DWORD PTR [rsp+0x30],0x0
  413297:	mov    DWORD PTR [rsp+0x34],0x0
  41329f:	mov    DWORD PTR [rsp+0x48],0x0
  4132a7:	mov    DWORD PTR [rsp+0x54],0x0
  4132af:	xor    edx,edx
  4132b1:	mov    DWORD PTR [rsp+0xc],0x0
  4132b9:	xor    r15d,r15d
  4132bc:	mov    DWORD PTR [rsp+0x5c],0x0
  4132c4:	xor    ebp,ebp
  4132c6:	jmp    413f02 <__flatcc_fb_gen_c_verifier@@Base+0x3032>
  4132cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4132d0:	xor    eax,eax
  4132d2:	cmp    QWORD PTR [r12+0x90],0x0
  4132db:	setne  al
  4132de:	mov    DWORD PTR [rsp+0xc],eax
  4132e2:	movzx  eax,WORD PTR [r12+0x70]
  4132e8:	mov    edx,eax
  4132ea:	and    dx,0x400
  4132ef:	movzx  ecx,dx
  4132f2:	mov    edx,eax
  4132f4:	and    dx,0x800
  4132f9:	mov    DWORD PTR [rsp+0x38],ecx
  4132fd:	and    eax,0xc00
  413302:	movzx  ecx,dx
  413305:	mov    DWORD PTR [rsp+0x3c],ecx
  413309:	mov    edx,DWORD PTR [r12+0x18]
  41330e:	mov    DWORD PTR [rsp+0x50],eax
  413312:	je     413ead <__flatcc_fb_gen_c_verifier@@Base+0x2fdd>
  413318:	cmp    edx,0x4
  41331b:	jne    414152 <__flatcc_fb_gen_c_verifier@@Base+0x3282>
  413321:	test   r13,r13
  413324:	je     414152 <__flatcc_fb_gen_c_verifier@@Base+0x3282>
  41332a:	mov    DWORD PTR [rsp+0x30],0x0
  413332:	mov    DWORD PTR [rsp+0x34],0x0
  41333a:	mov    DWORD PTR [rsp+0x48],0x0
  413342:	mov    DWORD PTR [rsp+0x54],0x0
  41334a:	mov    DWORD PTR [rsp+0x58],0x0
  413352:	xor    r14d,r14d
  413355:	mov    edx,0x4
  41335a:	xor    r15d,r15d
  41335d:	xor    ebp,ebp
  41335f:	mov    DWORD PTR [rsp+0x5c],0x0
  413367:	mov    DWORD PTR [rsp+0xc],0x0
  41336f:	lea    rax,[rip+0x2e279]        # 4415ef <_IO_stdin_used@@Base+0x145ef>
  413376:	cmp    DWORD PTR [rsp+0xc],0x2
  41337b:	mov    QWORD PTR [rsp+0x10],rax
  413380:	mov    QWORD PTR [rsp+0x28],rax
  413385:	lea    rcx,[rip+0x30508]        # 443894 <_IO_stdin_used@@Base+0x16894>
  41338c:	je     4134b9 <__flatcc_fb_gen_c_verifier@@Base+0x25e9>
  413392:	mov    r13d,r15d
  413395:	or     r13d,r14d
  413398:	or     r13d,DWORD PTR [rsp+0x18]
  41339d:	test   r15d,r15d
  4133a0:	je     413aa8 <__flatcc_fb_gen_c_verifier@@Base+0x2bd8>
  4133a6:	cmp    edx,0xb
  4133a9:	ja     413f6d <__flatcc_fb_gen_c_verifier@@Base+0x309d>
  4133af:	movsxd rax,DWORD PTR [rcx+rdx*4]
  4133b3:	add    rax,rcx
  4133b6:	notrack jmp rax
  4133b9:	nop    DWORD PTR [rax+0x0]
  4133c0:	mov    rdx,QWORD PTR [r12+0x78]
  4133c5:	lea    rsi,[rip+0x2eecc]        # 442298 <_IO_stdin_used@@Base+0x15298>
  4133cc:	mov    rdi,rbx
  4133cf:	xor    eax,eax
  4133d1:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4133d6:	test   r15d,r15d
  4133d9:	jne    4138d0 <__flatcc_fb_gen_c_verifier@@Base+0x2a00>
  4133df:	test   r14d,r14d
  4133e2:	jne    413583 <__flatcc_fb_gen_c_verifier@@Base+0x26b3>
  4133e8:	mov    eax,DWORD PTR [rsp+0x34]
  4133ec:	test   eax,eax
  4133ee:	jne    413bb0 <__flatcc_fb_gen_c_verifier@@Base+0x2ce0>
  4133f4:	mov    eax,DWORD PTR [rsp+0x50]
  4133f8:	test   eax,eax
  4133fa:	jne    413bd0 <__flatcc_fb_gen_c_verifier@@Base+0x2d00>
  413400:	mov    r11d,DWORD PTR [rsp+0x30]
  413405:	test   r11d,r11d
  413408:	jne    413cb0 <__flatcc_fb_gen_c_verifier@@Base+0x2de0>
  41340e:	mov    r10d,DWORD PTR [rsp+0x54]
  413413:	test   r10d,r10d
  413416:	je     413c48 <__flatcc_fb_gen_c_verifier@@Base+0x2d78>
  41341c:	mov    r9d,DWORD PTR [rsp+0x58]
  413421:	mov    rcx,QWORD PTR [r12+0x88]
  413429:	mov    rdx,QWORD PTR [r12+0xa0]
  413431:	mov    r8,QWORD PTR [rsp+0x20]
  413436:	test   r9d,r9d
  413439:	je     413ce0 <__flatcc_fb_gen_c_verifier@@Base+0x2e10>
  41343f:	lea    rsi,[rip+0x2f1ea]        # 442630 <_IO_stdin_used@@Base+0x15630>
  413446:	mov    rdi,rbx
  413449:	xor    eax,eax
  41344b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413450:	test   ebp,ebp
  413452:	je     4134a6 <__flatcc_fb_gen_c_verifier@@Base+0x25d6>
  413454:	test   r13d,r13d
  413457:	je     413b08 <__flatcc_fb_gen_c_verifier@@Base+0x2c38>
  41345d:	xor    eax,eax
  41345f:	lea    rsi,[rip+0x2f41a]        # 442880 <_IO_stdin_used@@Base+0x15880>
  413466:	mov    rdi,rbx
  413469:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41346e:	mov    eax,DWORD PTR [rbx+0xf0]
  413474:	test   eax,eax
  413476:	je     413bf8 <__flatcc_fb_gen_c_verifier@@Base+0x2d28>
  41347c:	dec    eax
  41347e:	mov    DWORD PTR [rbx+0xf0],eax
  413484:	lea    rsi,[rip+0x2df26]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  41348b:	mov    rdi,rbx
  41348e:	xor    eax,eax
  413490:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413495:	lea    rsi,[rip+0x2f4e4]        # 442980 <_IO_stdin_used@@Base+0x15980>
  41349c:	mov    rdi,rbx
  41349f:	xor    eax,eax
  4134a1:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4134a6:	cmp    DWORD PTR [rsp+0xc],0x1
  4134ab:	jne    413a20 <__flatcc_fb_gen_c_verifier@@Base+0x2b50>
  4134b1:	mov    DWORD PTR [rsp+0xc],0x2
  4134b9:	mov    eax,DWORD PTR [rbx+0xf0]
  4134bf:	test   eax,eax
  4134c1:	je     41401f <__flatcc_fb_gen_c_verifier@@Base+0x314f>
  4134c7:	dec    eax
  4134c9:	mov    DWORD PTR [rbx+0xf0],eax
  4134cf:	lea    rsi,[rip+0x2e11d]        # 4415f3 <_IO_stdin_used@@Base+0x145f3>
  4134d6:	xor    eax,eax
  4134d8:	mov    rdi,rbx
  4134db:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4134e0:	mov    rsi,QWORD PTR [r12+0x90]
  4134e8:	inc    DWORD PTR [rbx+0xf0]
  4134ee:	mov    rdi,QWORD PTR [rsi+0x18]
  4134f2:	mov    rdx,QWORD PTR [rsp+0x20]
  4134f7:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4134fc:	mov    rdx,QWORD PTR [r12+0x90]
  413504:	mov    eax,0x1
  413509:	cmp    WORD PTR [rdx+0x10],0x0
  41350e:	cmovne r14d,eax
  413512:	cmovne eax,DWORD PTR [rsp+0x30]
  413517:	lea    rsi,[rip+0x2eba2]        # 4420c0 <_IO_stdin_used@@Base+0x150c0>
  41351e:	mov    DWORD PTR [rsp+0x30],eax
  413522:	mov    rdi,rbx
  413525:	xor    eax,eax
  413527:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41352c:	mov    r13d,DWORD PTR [rsp+0x18]
  413531:	xor    r15d,r15d
  413534:	or     r13d,r14d
  413537:	xor    ebp,ebp
  413539:	cmp    WORD PTR [rsp+0x1e],0x1
  41353f:	je     4133c0 <__flatcc_fb_gen_c_verifier@@Base+0x24f0>
  413545:	mov    eax,ebp
  413547:	xor    eax,0x1
  41354a:	test   eax,r14d
  41354d:	je     4133d6 <__flatcc_fb_gen_c_verifier@@Base+0x2506>
  413553:	mov    rcx,QWORD PTR [r12+0x80]
  41355b:	mov    rdx,QWORD PTR [r12+0x88]
  413563:	movzx  r8d,WORD PTR [r12+0x72]
  413569:	xor    eax,eax
  41356b:	lea    rsi,[rip+0x2ed56]        # 4422c8 <_IO_stdin_used@@Base+0x152c8>
  413572:	mov    rdi,rbx
  413575:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41357a:	test   r15d,r15d
  41357d:	jne    4138d0 <__flatcc_fb_gen_c_verifier@@Base+0x2a00>
  413583:	mov    rdx,QWORD PTR [rsp+0x20]
  413588:	lea    rsi,[rip+0x2ed89]        # 442318 <_IO_stdin_used@@Base+0x15318>
  41358f:	mov    rdi,rbx
  413592:	xor    eax,eax
  413594:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413599:	jmp    413450 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  41359e:	xchg   ax,ax
  4135a0:	lea    rax,[rip+0x224d9]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  4135a7:	mov    QWORD PTR [rsp+0x10],rax
  4135ac:	lea    rax,[rip+0x224c4]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  4135b3:	mov    r15d,ebp
  4135b6:	mov    QWORD PTR [rsp+0x28],rax
  4135bb:	test   ebp,ebp
  4135bd:	je     413628 <__flatcc_fb_gen_c_verifier@@Base+0x2758>
  4135bf:	mov    rsi,QWORD PTR [r12+0x80]
  4135c7:	mov    r8d,0xffffffff
  4135cd:	test   rsi,rsi
  4135d0:	je     4135dd <__flatcc_fb_gen_c_verifier@@Base+0x270d>
  4135d2:	mov    rax,r8
  4135d5:	xor    edx,edx
  4135d7:	div    rsi
  4135da:	mov    r8,rax
  4135dd:	movsx  ecx,WORD PTR [r12+0x72]
  4135e3:	mov    rdx,rsi
  4135e6:	mov    rdi,rbx
  4135e9:	lea    rsi,[rip+0x2eb98]        # 442188 <_IO_stdin_used@@Base+0x15188>
  4135f0:	xor    eax,eax
  4135f2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4135f7:	lea    rsi,[rip+0x2eb4a]        # 442148 <_IO_stdin_used@@Base+0x15148>
  4135fe:	mov    rdi,rbx
  413601:	xor    eax,eax
  413603:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413608:	lea    rsi,[rip+0x2dffa]        # 441609 <_IO_stdin_used@@Base+0x14609>
  41360f:	mov    rdi,rbx
  413612:	xor    eax,eax
  413614:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413619:	inc    DWORD PTR [rbx+0xf0]
  41361f:	test   r15d,r15d
  413622:	je     413af2 <__flatcc_fb_gen_c_verifier@@Base+0x2c22>
  413628:	mov    rdx,QWORD PTR [rsp+0x28]
  41362d:	lea    rsi,[rip+0x2dfe4]        # 441618 <_IO_stdin_used@@Base+0x14618>
  413634:	mov    rdi,rbx
  413637:	xor    eax,eax
  413639:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41363e:	xor    eax,eax
  413640:	lea    rsi,[rip+0x2eb99]        # 4421e0 <_IO_stdin_used@@Base+0x151e0>
  413647:	mov    rdi,rbx
  41364a:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41364f:	mov    eax,DWORD PTR [rsp+0x48]
  413653:	add    DWORD PTR [rbx+0xf0],0x2
  41365a:	test   eax,eax
  41365c:	je     413674 <__flatcc_fb_gen_c_verifier@@Base+0x27a4>
  41365e:	mov    rdx,QWORD PTR [rsp+0x20]
  413663:	lea    rsi,[rip+0x2dfba]        # 441624 <_IO_stdin_used@@Base+0x14624>
  41366a:	mov    rdi,rbx
  41366d:	xor    eax,eax
  41366f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413674:	mov    rax,QWORD PTR [rbx+0xd8]
  41367b:	mov    rcx,QWORD PTR [rsp+0x40]
  413680:	mov    rdx,QWORD PTR [rax+0x110]
  413687:	lea    rsi,[rip+0x2dfaa]        # 441638 <_IO_stdin_used@@Base+0x14638>
  41368e:	mov    rdi,rbx
  413691:	xor    eax,eax
  413693:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413698:	mov    rax,QWORD PTR [rbx+0xd8]
  41369f:	lea    rsi,[rip+0x2eb82]        # 442228 <_IO_stdin_used@@Base+0x15228>
  4136a6:	mov    rdx,QWORD PTR [rax+0x110]
  4136ad:	mov    rdi,rbx
  4136b0:	xor    eax,eax
  4136b2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4136b7:	mov    eax,DWORD PTR [rbx+0xf0]
  4136bd:	test   eax,eax
  4136bf:	je     413fe1 <__flatcc_fb_gen_c_verifier@@Base+0x3111>
  4136c5:	cmp    eax,0x1
  4136c8:	je     413fd7 <__flatcc_fb_gen_c_verifier@@Base+0x3107>
  4136ce:	sub    eax,0x2
  4136d1:	test   r13d,r13d
  4136d4:	mov    DWORD PTR [rbx+0xf0],eax
  4136da:	setne  al
  4136dd:	and    eax,ebp
  4136df:	mov    r15d,0x1
  4136e5:	test   al,al
  4136e7:	je     413539 <__flatcc_fb_gen_c_verifier@@Base+0x2669>
  4136ed:	lea    rsi,[rip+0x2eb5c]        # 442250 <_IO_stdin_used@@Base+0x15250>
  4136f4:	mov    rdi,rbx
  4136f7:	xor    eax,eax
  4136f9:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4136fe:	jmp    413539 <__flatcc_fb_gen_c_verifier@@Base+0x2669>
  413703:	nop    DWORD PTR [rax+rax*1+0x0]
  413708:	lea    rax,[rip+0x2237e]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  41370f:	mov    QWORD PTR [rsp+0x28],rax
  413714:	lea    rax,[rip+0x2237b]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  41371b:	mov    QWORD PTR [rsp+0x10],rax
  413720:	mov    r15d,ebp
  413723:	test   ebp,ebp
  413725:	jne    4135bf <__flatcc_fb_gen_c_verifier@@Base+0x26ef>
  41372b:	jmp    413628 <__flatcc_fb_gen_c_verifier@@Base+0x2758>
  413730:	lea    rax,[rip+0x22382]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  413737:	mov    QWORD PTR [rsp+0x28],rax
  41373c:	lea    rax,[rip+0x22371]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  413743:	mov    QWORD PTR [rsp+0x10],rax
  413748:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41374a:	nop    WORD PTR [rax+rax*1+0x0]
  413750:	lea    rax,[rip+0x22346]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  413757:	mov    QWORD PTR [rsp+0x28],rax
  41375c:	lea    rax,[rip+0x22343]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  413763:	mov    QWORD PTR [rsp+0x10],rax
  413768:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41376a:	nop    WORD PTR [rax+rax*1+0x0]
  413770:	lea    rax,[rip+0x22342]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  413777:	mov    QWORD PTR [rsp+0x28],rax
  41377c:	lea    rax,[rip+0x2233e]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  413783:	mov    QWORD PTR [rsp+0x10],rax
  413788:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41378a:	nop    WORD PTR [rax+rax*1+0x0]
  413790:	lea    rax,[rip+0x22307]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  413797:	mov    QWORD PTR [rsp+0x28],rax
  41379c:	lea    rax,[rip+0x22304]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  4137a3:	mov    QWORD PTR [rsp+0x10],rax
  4137a8:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  4137ad:	nop    DWORD PTR [rax]
  4137b0:	lea    rax,[rip+0x222c1]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  4137b7:	mov    QWORD PTR [rsp+0x28],rax
  4137bc:	lea    rax,[rip+0x222be]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  4137c3:	mov    QWORD PTR [rsp+0x10],rax
  4137c8:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  4137cd:	nop    DWORD PTR [rax]
  4137d0:	lea    rax,[rip+0x222b0]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  4137d7:	mov    QWORD PTR [rsp+0x28],rax
  4137dc:	mov    QWORD PTR [rsp+0x10],rax
  4137e1:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  4137e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4137f0:	lea    rax,[rip+0x222d0]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  4137f7:	mov    QWORD PTR [rsp+0x28],rax
  4137fc:	mov    QWORD PTR [rsp+0x10],rax
  413801:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  413806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413810:	lea    rax,[rip+0x222a3]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  413817:	mov    QWORD PTR [rsp+0x28],rax
  41381c:	lea    rax,[rip+0x2229f]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  413823:	mov    QWORD PTR [rsp+0x10],rax
  413828:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41382d:	nop    DWORD PTR [rax]
  413830:	lea    rax,[rip+0x22257]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  413837:	mov    QWORD PTR [rsp+0x28],rax
  41383c:	lea    rax,[rip+0x22254]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  413843:	mov    QWORD PTR [rsp+0x10],rax
  413848:	jmp    413720 <__flatcc_fb_gen_c_verifier@@Base+0x2850>
  41384d:	mov    rsi,QWORD PTR [r12+0x18]
  413852:	mov    rdx,QWORD PTR [rsp+0x20]
  413857:	mov    rdi,QWORD PTR [rsi+0x18]
  41385b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  413860:	mov    rdx,QWORD PTR [r12+0x18]
  413865:	xor    ecx,ecx
  413867:	movzx  eax,WORD PTR [rdx+0x10]
  41386b:	cmp    ax,0x3
  41386f:	sete   cl
  413872:	xor    r14d,r14d
  413875:	cmp    ax,0x1
  413879:	sete   r14b
  41387d:	mov    DWORD PTR [rsp+0x48],ecx
  413881:	xor    ecx,ecx
  413883:	test   ax,ax
  413886:	sete   cl
  413889:	mov    DWORD PTR [rsp+0x30],ecx
  41388d:	cmp    ax,0x4
  413891:	jne    41389f <__flatcc_fb_gen_c_verifier@@Base+0x29cf>
  413893:	mov    ecx,DWORD PTR [rsp+0x18]
  413897:	test   ecx,ecx
  413899:	je     413fbd <__flatcc_fb_gen_c_verifier@@Base+0x30ed>
  41389f:	cmp    ax,0x3
  4138a3:	je     413f47 <__flatcc_fb_gen_c_verifier@@Base+0x3077>
  4138a9:	xor    edx,edx
  4138ab:	mov    DWORD PTR [rsp+0x54],0x0
  4138b3:	xor    r15d,r15d
  4138b6:	mov    DWORD PTR [rsp+0x48],0x0
  4138be:	mov    DWORD PTR [rsp+0x34],0x0
  4138c6:	jmp    413e86 <__flatcc_fb_gen_c_verifier@@Base+0x2fb6>
  4138cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4138d0:	mov    r15,QWORD PTR [rsp+0x10]
  4138d5:	lea    rsi,[rip+0x2ea74]        # 442350 <_IO_stdin_used@@Base+0x15350>
  4138dc:	mov    rdx,r15
  4138df:	mov    rdi,rbx
  4138e2:	xor    eax,eax
  4138e4:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4138e9:	lea    rsi,[rip+0x2dd65]        # 441655 <_IO_stdin_used@@Base+0x14655>
  4138f0:	mov    rdi,rbx
  4138f3:	xor    eax,eax
  4138f5:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4138fa:	inc    DWORD PTR [rbx+0xf0]
  413900:	mov    rdx,r15
  413903:	lea    rsi,[rip+0x2ea86]        # 442390 <_IO_stdin_used@@Base+0x15390>
  41390a:	mov    rdi,rbx
  41390d:	xor    eax,eax
  41390f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413914:	xor    eax,eax
  413916:	lea    rsi,[rip+0x2eacb]        # 4423e8 <_IO_stdin_used@@Base+0x153e8>
  41391d:	mov    rdi,rbx
  413920:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413925:	mov    eax,DWORD PTR [rbx+0xf0]
  41392b:	test   eax,eax
  41392d:	je     414000 <__flatcc_fb_gen_c_verifier@@Base+0x3130>
  413933:	dec    eax
  413935:	mov    DWORD PTR [rbx+0xf0],eax
  41393b:	lea    rsi,[rip+0x2da6f]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  413942:	xor    eax,eax
  413944:	mov    rdi,rbx
  413947:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41394c:	mov    r15d,DWORD PTR [rsp+0x4c]
  413951:	mov    eax,DWORD PTR [rsp+0x3c]
  413955:	or     r15d,ebp
  413958:	or     eax,DWORD PTR [rsp+0x38]
  41395c:	or     eax,r15d
  41395f:	jne    413b80 <__flatcc_fb_gen_c_verifier@@Base+0x2cb0>
  413965:	movzx  eax,WORD PTR [r12+0x58]
  41396b:	cmp    ax,0x4
  41396f:	je     413c20 <__flatcc_fb_gen_c_verifier@@Base+0x2d50>
  413975:	ja     413a78 <__flatcc_fb_gen_c_verifier@@Base+0x2ba8>
  41397b:	cmp    ax,0x3
  41397f:	jne    41403e <__flatcc_fb_gen_c_verifier@@Base+0x316e>
  413985:	vmovsd xmm0,QWORD PTR [r12+0x48]
  41398c:	lea    rsi,[rip+0x2eb15]        # 4424a8 <_IO_stdin_used@@Base+0x154a8>
  413993:	mov    rdi,rbx
  413996:	mov    eax,0x1
  41399b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4139a0:	inc    DWORD PTR [rbx+0xf0]
  4139a6:	mov    rcx,QWORD PTR [r12+0x80]
  4139ae:	mov    rdx,QWORD PTR [r12+0x88]
  4139b6:	movsx  r8d,WORD PTR [r12+0x72]
  4139bc:	lea    rsi,[rip+0x2eb5d]        # 442520 <_IO_stdin_used@@Base+0x15520>
  4139c3:	mov    rdi,rbx
  4139c6:	xor    eax,eax
  4139c8:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4139cd:	mov    rcx,QWORD PTR [rsp+0x10]
  4139d2:	mov    rdx,rbx
  4139d5:	lea    rsi,[rip+0x2dc8c]        # 441668 <_IO_stdin_used@@Base+0x14668>
  4139dc:	mov    rdi,rbx
  4139df:	xor    eax,eax
  4139e1:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4139e6:	mov    eax,DWORD PTR [rbx+0xf0]
  4139ec:	test   eax,eax
  4139ee:	je     41408e <__flatcc_fb_gen_c_verifier@@Base+0x31be>
  4139f4:	dec    eax
  4139f6:	mov    DWORD PTR [rbx+0xf0],eax
  4139fc:	lea    rsi,[rip+0x2d9ae]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  413a03:	xor    eax,eax
  413a05:	mov    rdi,rbx
  413a08:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413a0d:	cmp    DWORD PTR [rsp+0xc],0x1
  413a12:	je     4134b1 <__flatcc_fb_gen_c_verifier@@Base+0x25e1>
  413a18:	nop    DWORD PTR [rax+rax*1+0x0]
  413a20:	cmp    DWORD PTR [rsp+0xc],0x2
  413a25:	je     413de6 <__flatcc_fb_gen_c_verifier@@Base+0x2f16>
  413a2b:	mov    eax,DWORD PTR [rsp+0x3c]
  413a2f:	or     eax,DWORD PTR [rsp+0x38]
  413a33:	or     eax,DWORD PTR [rsp+0x34]
  413a37:	or     eax,DWORD PTR [rsp+0x30]
  413a3b:	or     eax,DWORD PTR [rsp+0xc]
  413a3f:	or     eax,ebp
  413a41:	jne    413e2f <__flatcc_fb_gen_c_verifier@@Base+0x2f5f>
  413a47:	xor    eax,eax
  413a49:	mov    rcx,QWORD PTR [rsp+0x228]
  413a51:	xor    rcx,QWORD PTR fs:0x28
  413a5a:	jne    4141a2 <__flatcc_fb_gen_c_verifier@@Base+0x32d2>
  413a60:	add    rsp,0x238
  413a67:	pop    rbx
  413a68:	pop    rbp
  413a69:	pop    r12
  413a6b:	pop    r13
  413a6d:	pop    r14
  413a6f:	pop    r15
  413a71:	ret    
  413a72:	nop    WORD PTR [rax+rax*1+0x0]
  413a78:	cmp    ax,0x6
  413a7c:	ja     41403e <__flatcc_fb_gen_c_verifier@@Base+0x316e>
  413a82:	mov    rdx,QWORD PTR [r12+0x48]
  413a87:	lea    rsi,[rip+0x2e98a]        # 442418 <_IO_stdin_used@@Base+0x15418>
  413a8e:	mov    rdi,rbx
  413a91:	xor    eax,eax
  413a93:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413a98:	inc    DWORD PTR [rbx+0xf0]
  413a9e:	jmp    4139a6 <__flatcc_fb_gen_c_verifier@@Base+0x2ad6>
  413aa3:	nop    DWORD PTR [rax+rax*1+0x0]
  413aa8:	test   ebp,ebp
  413aaa:	je     413cd0 <__flatcc_fb_gen_c_verifier@@Base+0x2e00>
  413ab0:	test   r13d,r13d
  413ab3:	jne    4135bf <__flatcc_fb_gen_c_verifier@@Base+0x26ef>
  413ab9:	lea    rsi,[rip+0x2e648]        # 442108 <_IO_stdin_used@@Base+0x15108>
  413ac0:	mov    rdi,rbx
  413ac3:	xor    eax,eax
  413ac5:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413aca:	lea    rsi,[rip+0x2e677]        # 442148 <_IO_stdin_used@@Base+0x15148>
  413ad1:	mov    rdi,rbx
  413ad4:	xor    eax,eax
  413ad6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413adb:	lea    rsi,[rip+0x2db27]        # 441609 <_IO_stdin_used@@Base+0x14609>
  413ae2:	mov    rdi,rbx
  413ae5:	xor    eax,eax
  413ae7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413aec:	inc    DWORD PTR [rbx+0xf0]
  413af2:	test   r13d,r13d
  413af5:	setne  al
  413af8:	and    eax,ebp
  413afa:	xor    r15d,r15d
  413afd:	jmp    4136e5 <__flatcc_fb_gen_c_verifier@@Base+0x2815>
  413b02:	nop    WORD PTR [rax+rax*1+0x0]
  413b08:	lea    rsi,[rip+0x2ed19]        # 442828 <_IO_stdin_used@@Base+0x15828>
  413b0f:	mov    rdi,rbx
  413b12:	xor    eax,eax
  413b14:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413b19:	lea    rsi,[rip+0x2db65]        # 441685 <_IO_stdin_used@@Base+0x14685>
  413b20:	mov    rdi,rbx
  413b23:	xor    eax,eax
  413b25:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413b2a:	xor    eax,eax
  413b2c:	lea    rsi,[rip+0x2ed4d]        # 442880 <_IO_stdin_used@@Base+0x15880>
  413b33:	mov    rdi,rbx
  413b36:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413b3b:	mov    eax,DWORD PTR [rbx+0xf0]
  413b41:	test   eax,eax
  413b43:	je     413bf8 <__flatcc_fb_gen_c_verifier@@Base+0x2d28>
  413b49:	dec    eax
  413b4b:	mov    DWORD PTR [rbx+0xf0],eax
  413b51:	mov    rdi,rbx
  413b54:	xor    eax,eax
  413b56:	lea    rsi,[rip+0x2d854]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  413b5d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413b62:	lea    rsi,[rip+0x2eddf]        # 442948 <_IO_stdin_used@@Base+0x15948>
  413b69:	mov    rdi,rbx
  413b6c:	xor    eax,eax
  413b6e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413b73:	jmp    4134a6 <__flatcc_fb_gen_c_verifier@@Base+0x25d6>
  413b78:	nop    DWORD PTR [rax+rax*1+0x0]
  413b80:	mov    rcx,QWORD PTR [rsp+0x10]
  413b85:	xor    eax,eax
  413b87:	mov    rdx,rbx
  413b8a:	lea    rsi,[rip+0x2dad7]        # 441668 <_IO_stdin_used@@Base+0x14668>
  413b91:	mov    rdi,rbx
  413b94:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413b99:	test   r15d,r15d
  413b9c:	jne    413450 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  413ba2:	jmp    4139e6 <__flatcc_fb_gen_c_verifier@@Base+0x2b16>
  413ba7:	nop    WORD PTR [rax+rax*1+0x0]
  413bb0:	lea    rsi,[rip+0x2e9b9]        # 442570 <_IO_stdin_used@@Base+0x15570>
  413bb7:	mov    rdi,rbx
  413bba:	xor    eax,eax
  413bbc:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413bc1:	jmp    413450 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  413bc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413bd0:	mov    r15d,DWORD PTR [rsp+0x38]
  413bd5:	xor    edx,edx
  413bd7:	test   r15d,r15d
  413bda:	sete   dl
  413bdd:	lea    rsi,[rip+0x2e9cc]        # 4425b0 <_IO_stdin_used@@Base+0x155b0>
  413be4:	mov    rdi,rbx
  413be7:	xor    eax,eax
  413be9:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413bee:	jmp    413450 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  413bf3:	nop    DWORD PTR [rax+rax*1+0x0]
  413bf8:	lea    rcx,[rip+0x2fdd1]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  413bff:	mov    edx,0x287
  413c04:	lea    rsi,[rip+0x2dd2d]        # 441938 <_IO_stdin_used@@Base+0x14938>
  413c0b:	lea    rdi,[rip+0x2d793]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  413c12:	call   4052e0 <__assert_fail@plt>
  413c17:	nop    WORD PTR [rax+rax*1+0x0]
  413c20:	mov    rdx,QWORD PTR [r12+0x48]
  413c25:	lea    rsi,[rip+0x2e834]        # 442460 <_IO_stdin_used@@Base+0x15460>
  413c2c:	mov    rdi,rbx
  413c2f:	xor    eax,eax
  413c31:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413c36:	inc    DWORD PTR [rbx+0xf0]
  413c3c:	jmp    4139a6 <__flatcc_fb_gen_c_verifier@@Base+0x2ad6>
  413c41:	nop    DWORD PTR [rax+0x0]
  413c48:	mov    edi,DWORD PTR [rsp+0x18]
  413c4c:	test   edi,edi
  413c4e:	jne    413d00 <__flatcc_fb_gen_c_verifier@@Base+0x2e30>
  413c54:	test   ebp,ebp
  413c56:	jne    413454 <__flatcc_fb_gen_c_verifier@@Base+0x2584>
  413c5c:	mov    rax,QWORD PTR [rip+0x3d385]        # 450fe8 <stderr@GLIBC_2.2.5>
  413c63:	lea    rcx,[rip+0x2dcce]        # 441938 <_IO_stdin_used@@Base+0x14938>
  413c6a:	mov    rdi,QWORD PTR [rax]
  413c6d:	lea    rdx,[rip+0x21ddf]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  413c74:	mov    esi,0x1
  413c79:	lea    r9,[rip+0x2eb70]        # 4427f0 <_IO_stdin_used@@Base+0x157f0>
  413c80:	mov    r8d,0x27c
  413c86:	xor    eax,eax
  413c88:	call   4053e0 <__fprintf_chk@plt>
  413c8d:	lea    rcx,[rip+0x2fd3c]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  413c94:	mov    edx,0x27c
  413c99:	lea    rsi,[rip+0x2dc98]        # 441938 <_IO_stdin_used@@Base+0x14938>
  413ca0:	lea    rdi,[rip+0x22e72]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  413ca7:	call   4052e0 <__assert_fail@plt>
  413cac:	nop    DWORD PTR [rax+0x0]
  413cb0:	mov    rdx,QWORD PTR [rsp+0x20]
  413cb5:	lea    rsi,[rip+0x2e944]        # 442600 <_IO_stdin_used@@Base+0x15600>
  413cbc:	mov    rdi,rbx
  413cbf:	xor    eax,eax
  413cc1:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413cc6:	jmp    413450 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  413ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  413cd0:	mov    r15d,ebp
  413cd3:	jmp    413539 <__flatcc_fb_gen_c_verifier@@Base+0x2669>
  413cd8:	nop    DWORD PTR [rax+rax*1+0x0]
  413ce0:	lea    rsi,[rip+0x2e9a9]        # 442690 <_IO_stdin_used@@Base+0x15690>
  413ce7:	mov    rdi,rbx
  413cea:	xor    eax,eax
  413cec:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413cf1:	jmp    413450 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  413cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413d00:	lea    rsi,[rip+0x2e4d9]        # 4421e0 <_IO_stdin_used@@Base+0x151e0>
  413d07:	mov    rdi,rbx
  413d0a:	xor    eax,eax
  413d0c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413d11:	add    DWORD PTR [rbx+0xf0],0x2
  413d18:	mov    rdx,QWORD PTR [rsp+0x20]
  413d1d:	lea    rsi,[rip+0x2d900]        # 441624 <_IO_stdin_used@@Base+0x14624>
  413d24:	mov    rdi,rbx
  413d27:	xor    eax,eax
  413d29:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413d2e:	mov    rax,QWORD PTR [rbx+0xd8]
  413d35:	mov    rcx,QWORD PTR [rsp+0x40]
  413d3a:	mov    rdx,QWORD PTR [rax+0x110]
  413d41:	lea    rsi,[rip+0x2d8f0]        # 441638 <_IO_stdin_used@@Base+0x14638>
  413d48:	mov    rdi,rbx
  413d4b:	xor    eax,eax
  413d4d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413d52:	mov    rax,QWORD PTR [rbx+0xd8]
  413d59:	lea    rsi,[rip+0x2e4c8]        # 442228 <_IO_stdin_used@@Base+0x15228>
  413d60:	mov    rdx,QWORD PTR [rax+0x110]
  413d67:	mov    rdi,rbx
  413d6a:	xor    eax,eax
  413d6c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413d71:	mov    eax,DWORD PTR [rbx+0xf0]
  413d77:	test   eax,eax
  413d79:	je     4141de <__flatcc_fb_gen_c_verifier@@Base+0x330e>
  413d7f:	cmp    eax,0x1
  413d82:	je     4141d4 <__flatcc_fb_gen_c_verifier@@Base+0x3304>
  413d88:	mov    esi,DWORD PTR [rsp+0x5c]
  413d8c:	sub    eax,0x2
  413d8f:	mov    DWORD PTR [rbx+0xf0],eax
  413d95:	mov    rcx,QWORD PTR [r12+0x88]
  413d9d:	mov    rdx,QWORD PTR [r12+0xa0]
  413da5:	mov    r8,QWORD PTR [rsp+0x20]
  413daa:	test   esi,esi
  413dac:	je     413dd0 <__flatcc_fb_gen_c_verifier@@Base+0x2f00>
  413dae:	mov    r9,r8
  413db1:	lea    rsi,[rip+0x2e930]        # 4426e8 <_IO_stdin_used@@Base+0x156e8>
  413db8:	mov    rdi,rbx
  413dbb:	xor    eax,eax
  413dbd:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413dc2:	jmp    413450 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  413dc7:	nop    WORD PTR [rax+rax*1+0x0]
  413dd0:	lea    rsi,[rip+0x2e9a9]        # 442780 <_IO_stdin_used@@Base+0x15780>
  413dd7:	mov    rdi,rbx
  413dda:	xor    eax,eax
  413ddc:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413de1:	jmp    413450 <__flatcc_fb_gen_c_verifier@@Base+0x2580>
  413de6:	lea    rsi,[rip+0x2d8a5]        # 441692 <_IO_stdin_used@@Base+0x14692>
  413ded:	mov    rdi,rbx
  413df0:	xor    eax,eax
  413df2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413df7:	xor    eax,eax
  413df9:	lea    rsi,[rip+0x2eac0]        # 4428c0 <_IO_stdin_used@@Base+0x158c0>
  413e00:	mov    rdi,rbx
  413e03:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413e08:	mov    eax,DWORD PTR [rbx+0xf0]
  413e0e:	test   eax,eax
  413e10:	je     414133 <__flatcc_fb_gen_c_verifier@@Base+0x3263>
  413e16:	dec    eax
  413e18:	mov    DWORD PTR [rbx+0xf0],eax
  413e1e:	lea    rsi,[rip+0x2d884]        # 4416a9 <_IO_stdin_used@@Base+0x146a9>
  413e25:	mov    rdi,rbx
  413e28:	xor    eax,eax
  413e2a:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413e2f:	mov    rdx,QWORD PTR [r12+0x88]
  413e37:	mov    rdi,rbx
  413e3a:	xor    eax,eax
  413e3c:	lea    rsi,[rip+0x2eaad]        # 4428f0 <_IO_stdin_used@@Base+0x158f0>
  413e43:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413e48:	lea    rsi,[rip+0x2d836]        # 441685 <_IO_stdin_used@@Base+0x14685>
  413e4f:	mov    rdi,rbx
  413e52:	xor    eax,eax
  413e54:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  413e59:	jmp    413a47 <__flatcc_fb_gen_c_verifier@@Base+0x2b77>
  413e5e:	mov    DWORD PTR [rsp+0x54],0x0
  413e66:	mov    DWORD PTR [rsp+0x30],0x0
  413e6e:	mov    DWORD PTR [rsp+0x48],0x0
  413e76:	mov    DWORD PTR [rsp+0x34],0x1
  413e7e:	xor    edx,edx
  413e80:	xor    r14d,r14d
  413e83:	xor    r15d,r15d
  413e86:	cmp    DWORD PTR [rsp+0x18],0x0
  413e8b:	je     413f1b <__flatcc_fb_gen_c_verifier@@Base+0x304b>
  413e91:	mov    DWORD PTR [rsp+0xc],0x0
  413e99:	jmp    413ee1 <__flatcc_fb_gen_c_verifier@@Base+0x3011>
  413e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  413ea0:	mov    DWORD PTR [rsp+0xc],0x0
  413ea8:	mov    edx,DWORD PTR [r12+0x18]
  413ead:	cmp    DWORD PTR [rsp+0x18],0x0
  413eb2:	mov    r15d,0x1
  413eb8:	je     414103 <__flatcc_fb_gen_c_verifier@@Base+0x3233>
  413ebe:	mov    DWORD PTR [rsp+0x30],0x0
  413ec6:	mov    DWORD PTR [rsp+0x34],0x0
  413ece:	mov    DWORD PTR [rsp+0x48],0x0
  413ed6:	mov    DWORD PTR [rsp+0x54],0x0
  413ede:	xor    r14d,r14d
  413ee1:	xor    r15d,r15d
  413ee4:	cmp    r13,0x1
  413ee8:	sbb    eax,eax
  413eea:	inc    eax
  413eec:	mov    DWORD PTR [rsp+0x5c],eax
  413ef0:	test   r13,r13
  413ef3:	cmovne ebp,r15d
  413ef7:	cmp    DWORD PTR [rsp+0xc],0x1
  413efc:	je     4140b0 <__flatcc_fb_gen_c_verifier@@Base+0x31e0>
  413f02:	mov    eax,DWORD PTR [rsp+0xc]
  413f06:	mov    DWORD PTR [rsp+0x38],eax
  413f0a:	mov    DWORD PTR [rsp+0x50],eax
  413f0e:	mov    DWORD PTR [rsp+0x58],eax
  413f12:	mov    DWORD PTR [rsp+0x3c],eax
  413f16:	jmp    41336f <__flatcc_fb_gen_c_verifier@@Base+0x249f>
  413f1b:	mov    eax,DWORD PTR [rsp+0x54]
  413f1f:	mov    DWORD PTR [rsp+0x50],0x0
  413f27:	and    eax,ebp
  413f29:	mov    DWORD PTR [rsp+0x3c],0x0
  413f31:	mov    DWORD PTR [rsp+0x38],0x0
  413f39:	mov    DWORD PTR [rsp+0x58],eax
  413f3d:	cmovne ebp,DWORD PTR [rsp+0x18]
  413f42:	jmp    41335f <__flatcc_fb_gen_c_verifier@@Base+0x248f>
  413f47:	mov    edx,DWORD PTR [rdx+0x48]
  413f4a:	mov    DWORD PTR [rsp+0x54],0x0
  413f52:	mov    r15d,0x1
  413f58:	mov    DWORD PTR [rsp+0x48],0x1
  413f60:	mov    DWORD PTR [rsp+0x34],0x0
  413f68:	jmp    413e86 <__flatcc_fb_gen_c_verifier@@Base+0x2fb6>
  413f6d:	mov    rax,QWORD PTR [rip+0x3d074]        # 450fe8 <stderr@GLIBC_2.2.5>
  413f74:	lea    rcx,[rip+0x1a32d]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  413f7b:	mov    rdi,QWORD PTR [rax]
  413f7e:	lea    rdx,[rip+0x21ace]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  413f85:	mov    esi,0x1
  413f8a:	lea    r9,[rip+0x1a2df]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  413f91:	mov    r8d,0x60
  413f97:	xor    eax,eax
  413f99:	call   4053e0 <__fprintf_chk@plt>
  413f9e:	lea    rcx,[rip+0x2fa0b]        # 4439b0 <_IO_stdin_used@@Base+0x169b0>
  413fa5:	mov    edx,0x60
  413faa:	lea    rsi,[rip+0x1a2f7]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  413fb1:	lea    rdi,[rip+0x22b61]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  413fb8:	call   4052e0 <__assert_fail@plt>
  413fbd:	xor    edx,edx
  413fbf:	mov    DWORD PTR [rsp+0x54],0x1
  413fc7:	xor    r15d,r15d
  413fca:	mov    DWORD PTR [rsp+0x34],0x0
  413fd2:	jmp    413e86 <__flatcc_fb_gen_c_verifier@@Base+0x2fb6>
  413fd7:	mov    DWORD PTR [rbx+0xf0],0x0
  413fe1:	lea    rcx,[rip+0x2f9e8]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  413fe8:	mov    edx,0x21b
  413fed:	lea    rsi,[rip+0x2d944]        # 441938 <_IO_stdin_used@@Base+0x14938>
  413ff4:	lea    rdi,[rip+0x2d3aa]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  413ffb:	call   4052e0 <__assert_fail@plt>
  414000:	lea    rcx,[rip+0x2f9c9]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  414007:	mov    edx,0x22f
  41400c:	lea    rsi,[rip+0x2d925]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414013:	lea    rdi,[rip+0x2d38b]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41401a:	call   4052e0 <__assert_fail@plt>
  41401f:	lea    rcx,[rip+0x2f9aa]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  414026:	mov    edx,0x1ea
  41402b:	lea    rsi,[rip+0x2d906]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414032:	lea    rdi,[rip+0x2d36c]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  414039:	call   4052e0 <__assert_fail@plt>
  41403e:	mov    rax,QWORD PTR [rip+0x3cfa3]        # 450fe8 <stderr@GLIBC_2.2.5>
  414045:	lea    rcx,[rip+0x2d8ec]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41404c:	mov    rdi,QWORD PTR [rax]
  41404f:	lea    rdx,[rip+0x219fd]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  414056:	mov    esi,0x1
  41405b:	lea    r9,[rip+0x2e48e]        # 4424f0 <_IO_stdin_used@@Base+0x154f0>
  414062:	mov    r8d,0x24e
  414068:	xor    eax,eax
  41406a:	call   4053e0 <__fprintf_chk@plt>
  41406f:	lea    rcx,[rip+0x2f95a]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  414076:	mov    edx,0x24e
  41407b:	lea    rsi,[rip+0x2d8b6]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414082:	lea    rdi,[rip+0x22a90]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  414089:	call   4052e0 <__assert_fail@plt>
  41408e:	lea    rcx,[rip+0x2f93b]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  414095:	mov    edx,0x25a
  41409a:	lea    rsi,[rip+0x2d897]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4140a1:	lea    rdi,[rip+0x2d2fd]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4140a8:	call   4052e0 <__assert_fail@plt>
  4140ad:	nop    DWORD PTR [rax]
  4140b0:	lea    rsi,[rip+0x2dfd1]        # 442088 <_IO_stdin_used@@Base+0x15088>
  4140b7:	mov    rdi,rbx
  4140ba:	xor    eax,eax
  4140bc:	mov    DWORD PTR [rsp+0x10],edx
  4140c0:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4140c5:	inc    DWORD PTR [rbx+0xf0]
  4140cb:	mov    DWORD PTR [rsp+0x38],0x0
  4140d3:	mov    DWORD PTR [rsp+0x50],0x0
  4140db:	mov    DWORD PTR [rsp+0x58],0x0
  4140e3:	mov    DWORD PTR [rsp+0x3c],0x0
  4140eb:	mov    edx,DWORD PTR [rsp+0x10]
  4140ef:	jmp    41336f <__flatcc_fb_gen_c_verifier@@Base+0x249f>
  4140f4:	mov    DWORD PTR [rsp+0xc],0x0
  4140fc:	xor    ebp,ebp
  4140fe:	xor    r15d,r15d
  414101:	xor    edx,edx
  414103:	xor    r14d,r14d
  414106:	mov    DWORD PTR [rsp+0x30],0x0
  41410e:	mov    DWORD PTR [rsp+0x34],0x0
  414116:	mov    DWORD PTR [rsp+0x48],0x0
  41411e:	mov    DWORD PTR [rsp+0x54],0x0
  414126:	mov    DWORD PTR [rsp+0x5c],0x0
  41412e:	jmp    413ef7 <__flatcc_fb_gen_c_verifier@@Base+0x3027>
  414133:	lea    rcx,[rip+0x2f896]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  41413a:	mov    edx,0x295
  41413f:	lea    rsi,[rip+0x2d7f2]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414146:	lea    rdi,[rip+0x2d258]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41414d:	call   4052e0 <__assert_fail@plt>
  414152:	mov    rax,QWORD PTR [rip+0x3ce8f]        # 450fe8 <stderr@GLIBC_2.2.5>
  414159:	lea    rcx,[rip+0x2d7d8]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414160:	mov    rdi,QWORD PTR [rax]
  414163:	lea    rdx,[rip+0x218e9]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  41416a:	mov    esi,0x1
  41416f:	lea    r9,[rip+0x2ded2]        # 442048 <_IO_stdin_used@@Base+0x15048>
  414176:	mov    r8d,0x1d2
  41417c:	xor    eax,eax
  41417e:	call   4053e0 <__fprintf_chk@plt>
  414183:	lea    rcx,[rip+0x2f846]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  41418a:	mov    edx,0x1d2
  41418f:	lea    rsi,[rip+0x2d7a2]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414196:	lea    rdi,[rip+0x2297c]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  41419d:	call   4052e0 <__assert_fail@plt>
  4141a2:	call   4052c0 <__stack_chk_fail@plt>
  4141a7:	xor    r14d,r14d
  4141aa:	mov    DWORD PTR [rsp+0x30],0x0
  4141b2:	mov    DWORD PTR [rsp+0x34],0x0
  4141ba:	mov    DWORD PTR [rsp+0x48],0x0
  4141c2:	mov    DWORD PTR [rsp+0x54],0x0
  4141ca:	xor    edx,edx
  4141cc:	xor    r15d,r15d
  4141cf:	jmp    413e86 <__flatcc_fb_gen_c_verifier@@Base+0x2fb6>
  4141d4:	mov    DWORD PTR [rbx+0xf0],0x0
  4141de:	lea    rcx,[rip+0x2f7eb]        # 4439d0 <_IO_stdin_used@@Base+0x169d0>
  4141e5:	mov    edx,0x273
  4141ea:	lea    rsi,[rip+0x2d747]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4141f1:	lea    rdi,[rip+0x2d1ad]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4141f8:	call   4052e0 <__assert_fail@plt>
  4141fd:	nop    DWORD PTR [rax]
  414200:	endbr64 
  414204:	push   r13
  414206:	xor    eax,eax
  414208:	mov    r13d,ecx
  41420b:	push   r12
  41420d:	mov    r12,rdx
  414210:	mov    edx,r8d
  414213:	push   rbp
  414214:	mov    rbp,rsi
  414217:	lea    rsi,[rip+0x2e792]        # 4429b0 <_IO_stdin_used@@Base+0x159b0>
  41421e:	push   rbx
  41421f:	mov    rbx,rdi
  414222:	sub    rsp,0x8
  414226:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41422b:	lea    rsi,[rip+0x2d48a]        # 4416bc <_IO_stdin_used@@Base+0x146bc>
  414232:	mov    rdi,rbx
  414235:	xor    eax,eax
  414237:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41423c:	inc    DWORD PTR [rbx+0xf0]
  414242:	lea    rdx,[rbp+0x18]
  414246:	lea    rsi,[rbp+0x10]
  41424a:	mov    r8d,r13d
  41424d:	mov    rcx,r12
  414250:	mov    rdi,rbx
  414253:	call   4131c0 <__flatcc_fb_gen_c_verifier@@Base+0x22f0>
  414258:	mov    eax,DWORD PTR [rbx+0xf0]
  41425e:	test   eax,eax
  414260:	je     41428c <__flatcc_fb_gen_c_verifier@@Base+0x33bc>
  414262:	dec    eax
  414264:	mov    DWORD PTR [rbx+0xf0],eax
  41426a:	mov    rdi,rbx
  41426d:	lea    rsi,[rip+0x2d28d]        # 441501 <_IO_stdin_used@@Base+0x14501>
  414274:	xor    eax,eax
  414276:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41427b:	inc    DWORD PTR [rbx+0xf0]
  414281:	add    rsp,0x8
  414285:	pop    rbx
  414286:	pop    rbp
  414287:	pop    r12
  414289:	pop    r13
  41428b:	ret    
  41428c:	lea    rcx,[rip+0x2f75d]        # 4439f0 <_IO_stdin_used@@Base+0x169f0>
  414293:	mov    edx,0x2a3
  414298:	lea    rsi,[rip+0x2d699]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41429f:	lea    rdi,[rip+0x2d0ff]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4142a6:	call   4052e0 <__assert_fail@plt>
  4142ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4142b0:	push   r14
  4142b2:	push   r13
  4142b4:	push   r12
  4142b6:	push   rbp
  4142b7:	push   rbx
  4142b8:	test   rdi,rdi
  4142bb:	je     414440 <__flatcc_fb_gen_c_verifier@@Base+0x3570>
  4142c1:	mov    rbx,rdi
  4142c4:	mov    rax,rdi
  4142c7:	xor    r8d,r8d
  4142ca:	xor    ecx,ecx
  4142cc:	nop    DWORD PTR [rax+0x0]
  4142d0:	test   BYTE PTR [rax+0x70],0x4
  4142d4:	jne    4142ec <__flatcc_fb_gen_c_verifier@@Base+0x341c>
  4142d6:	movzx  edx,WORD PTR [rax+0x28]
  4142da:	lea    edi,[rcx+0x1]
  4142dd:	sub    edx,0xe
  4142e0:	cmp    dx,0x1
  4142e4:	jbe    414400 <__flatcc_fb_gen_c_verifier@@Base+0x3530>
  4142ea:	mov    ecx,edi
  4142ec:	mov    rax,QWORD PTR [rax]
  4142ef:	test   rax,rax
  4142f2:	jne    4142d0 <__flatcc_fb_gen_c_verifier@@Base+0x3400>
  4142f4:	mov    DWORD PTR [rsi],ecx
  4142f6:	test   ecx,ecx
  4142f8:	je     414428 <__flatcc_fb_gen_c_verifier@@Base+0x3558>
  4142fe:	movsxd r12,ecx
  414301:	mov    rbp,r12
  414304:	movsxd rdi,r8d
  414307:	shl    rbp,0x5
  41430b:	add    rdi,rbp
  41430e:	call   405360 <malloc@plt>
  414313:	mov    r14,rax
  414316:	test   rax,rax
  414319:	je     414428 <__flatcc_fb_gen_c_verifier@@Base+0x3558>
  41431f:	lea    rcx,[rax+rbp*1]
  414323:	xor    r8d,r8d
  414326:	mov    rbp,rax
  414329:	jmp    41433f <__flatcc_fb_gen_c_verifier@@Base+0x346f>
  41432b:	nop    DWORD PTR [rax+rax*1+0x0]
  414330:	mov    rbp,rdi
  414333:	mov    rbx,QWORD PTR [rbx]
  414336:	test   rbx,rbx
  414339:	je     4143d7 <__flatcc_fb_gen_c_verifier@@Base+0x3507>
  41433f:	test   BYTE PTR [rbx+0x70],0x4
  414343:	jne    414333 <__flatcc_fb_gen_c_verifier@@Base+0x3463>
  414345:	mov    rax,QWORD PTR [rbx+0x8]
  414349:	lea    rdi,[rbp+0x20]
  41434d:	mov    rsi,QWORD PTR [rax]
  414350:	mov    rdx,QWORD PTR [rax+0x8]
  414354:	movzx  eax,WORD PTR [rbx+0x28]
  414358:	mov    QWORD PTR [rbp+0x0],rsi
  41435c:	sub    eax,0xe
  41435f:	mov    DWORD PTR [rbp+0x8],edx
  414362:	mov    QWORD PTR [rbp+0x10],rbx
  414366:	mov    DWORD PTR [rbp+0x18],0x0
  41436d:	cmp    ax,0x1
  414371:	ja     414330 <__flatcc_fb_gen_c_verifier@@Base+0x3460>
  414373:	mov    rax,QWORD PTR [rbx+0x18]
  414377:	cmp    WORD PTR [rax+0x10],0x4
  41437c:	jne    414330 <__flatcc_fb_gen_c_verifier@@Base+0x3460>
  41437e:	lea    eax,[rdx+0x5]
  414381:	mov    QWORD PTR [rbx+0xa0],r8
  414388:	mov    QWORD PTR [rbp+0x20],rcx
  41438c:	mov    DWORD PTR [rbp+0x28],eax
  41438f:	mov    rdi,rcx
  414392:	lea    r13d,[r8+0x1]
  414396:	call   405350 <memcpy@plt>
  41439b:	mov    rcx,rax
  41439e:	mov    rax,QWORD PTR [rbx+0x8]
  4143a2:	add    rbp,0x40
  4143a6:	add    rcx,QWORD PTR [rax+0x8]
  4143aa:	mov    eax,0x65
  4143af:	mov    DWORD PTR [rcx],0x7079745f
  4143b5:	mov    WORD PTR [rcx+0x4],ax
  4143b9:	mov    QWORD PTR [rbp-0x10],rbx
  4143bd:	mov    DWORD PTR [rbp-0x8],0x1
  4143c4:	mov    rbx,QWORD PTR [rbx]
  4143c7:	add    rcx,0x6
  4143cb:	movsxd r8,r13d
  4143ce:	test   rbx,rbx
  4143d1:	jne    41433f <__flatcc_fb_gen_c_verifier@@Base+0x346f>
  4143d7:	mov    rsi,r12
  4143da:	mov    rdi,r14
  4143dd:	lea    rcx,[rip+0xffffffffffffcf9c]        # 411380 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
  4143e4:	mov    edx,0x20
  4143e9:	call   405270 <qsort@plt>
  4143ee:	pop    rbx
  4143ef:	pop    rbp
  4143f0:	pop    r12
  4143f2:	pop    r13
  4143f4:	mov    rax,r14
  4143f7:	pop    r14
  4143f9:	ret    
  4143fa:	nop    WORD PTR [rax+rax*1+0x0]
  414400:	mov    rdx,QWORD PTR [rax+0x18]
  414404:	cmp    WORD PTR [rdx+0x10],0x4
  414409:	jne    4142ea <__flatcc_fb_gen_c_verifier@@Base+0x341a>
  41440f:	mov    rdx,QWORD PTR [rax+0x8]
  414413:	add    r8d,0x6
  414417:	add    r8d,DWORD PTR [rdx+0x8]
  41441b:	lea    edi,[rcx+0x2]
  41441e:	jmp    4142ea <__flatcc_fb_gen_c_verifier@@Base+0x341a>
  414423:	nop    DWORD PTR [rax+rax*1+0x0]
  414428:	pop    rbx
  414429:	pop    rbp
  41442a:	pop    r12
  41442c:	xor    r14d,r14d
  41442f:	pop    r13
  414431:	mov    rax,r14
  414434:	pop    r14
  414436:	ret    
  414437:	nop    WORD PTR [rax+rax*1+0x0]
  414440:	mov    DWORD PTR [rsi],0x0
  414446:	xor    r14d,r14d
  414449:	mov    rax,r14
  41444c:	pop    rbx
  41444d:	pop    rbp
  41444e:	pop    r12
  414450:	pop    r13
  414452:	pop    r14
  414454:	ret    
  414455:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414460:	push   r12
  414462:	vpxor  xmm0,xmm0,xmm0
  414466:	push   rbp
  414467:	push   rbx
  414468:	sub    rsp,0x130
  41446f:	mov    rax,QWORD PTR fs:0x28
  414478:	mov    QWORD PTR [rsp+0x128],rax
  414480:	xor    eax,eax
  414482:	cmp    WORD PTR [rsi+0x10],0x1
  414487:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  41448d:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  414493:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  414499:	jne    41479c <__flatcc_fb_gen_c_verifier@@Base+0x38cc>
  41449f:	mov    rbp,rsi
  4144a2:	mov    rbx,rdi
  4144a5:	mov    rdi,QWORD PTR [rbp+0x28]
  4144a9:	lea    rsi,[rsp+0xc]
  4144ae:	call   4142b0 <__flatcc_fb_gen_c_verifier@@Base+0x33e0>
  4144b3:	mov    QWORD PTR [rsp+0x10],rax
  4144b8:	test   rax,rax
  4144bb:	je     414740 <__flatcc_fb_gen_c_verifier@@Base+0x3870>
  4144c1:	lea    rax,[rip+0xfffffffffffffd38]        # 414200 <__flatcc_fb_gen_c_verifier@@Base+0x3330>
  4144c8:	lea    r12,[rsp+0x40]
  4144cd:	mov    QWORD PTR [rsp+0x18],rax
  4144d2:	lea    rax,[rip+0xffffffffffffd127]        # 411600 <__flatcc_fb_gen_c_verifier@@Base+0x730>
  4144d9:	mov    QWORD PTR [rsp+0x20],rax
  4144de:	mov    ecx,0x1d
  4144e3:	xor    eax,eax
  4144e5:	mov    rdi,r12
  4144e8:	rep stos QWORD PTR es:[rdi],rax
  4144eb:	mov    rdi,QWORD PTR [rbp+0x18]
  4144ef:	mov    rdx,r12
  4144f2:	mov    rsi,rbp
  4144f5:	mov    QWORD PTR [rsp+0x28],rbp
  4144fa:	mov    DWORD PTR [rsp+0x30],0x1
  414502:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  414507:	mov    rdx,r12
  41450a:	lea    rsi,[rip+0x2e4e7]        # 4429f8 <_IO_stdin_used@@Base+0x159f8>
  414511:	mov    rdi,rbx
  414514:	xor    eax,eax
  414516:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41451b:	lea    rsi,[rip+0x2cfa6]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  414522:	mov    rdi,rbx
  414525:	xor    eax,eax
  414527:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41452c:	inc    DWORD PTR [rbx+0xf0]
  414532:	lea    rsi,[rip+0x2d196]        # 4416cf <_IO_stdin_used@@Base+0x146cf>
  414539:	mov    rdi,rbx
  41453c:	xor    eax,eax
  41453e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414543:	mov    ecx,DWORD PTR [rsp+0xc]
  414547:	test   ecx,ecx
  414549:	jle    41458f <__flatcc_fb_gen_c_verifier@@Base+0x36bf>
  41454b:	lea    rsi,[rip+0x2d187]        # 4416d9 <_IO_stdin_used@@Base+0x146d9>
  414552:	mov    rdi,rbx
  414555:	xor    eax,eax
  414557:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41455c:	lea    rsi,[rip+0x2d190]        # 4416f3 <_IO_stdin_used@@Base+0x146f3>
  414563:	mov    rdi,rbx
  414566:	xor    eax,eax
  414568:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41456d:	lea    rsi,[rip+0x2d04a]        # 4415be <_IO_stdin_used@@Base+0x145be>
  414574:	mov    rdi,rbx
  414577:	xor    eax,eax
  414579:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41457e:	lea    rsi,[rip+0x2d04b]        # 4415d0 <_IO_stdin_used@@Base+0x145d0>
  414585:	mov    rdi,rbx
  414588:	xor    eax,eax
  41458a:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41458f:	lea    rsi,[rip+0x30b88]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  414596:	mov    rdi,rbx
  414599:	xor    eax,eax
  41459b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4145a0:	lea    rsi,[rip+0x2e4d1]        # 442a78 <_IO_stdin_used@@Base+0x15a78>
  4145a7:	mov    rdi,rbx
  4145aa:	xor    eax,eax
  4145ac:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4145b1:	lea    rsi,[rip+0x2d051]        # 441609 <_IO_stdin_used@@Base+0x14609>
  4145b8:	mov    rdi,rbx
  4145bb:	xor    eax,eax
  4145bd:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4145c2:	mov    edx,DWORD PTR [rsp+0xc]
  4145c6:	inc    DWORD PTR [rbx+0xf0]
  4145cc:	test   edx,edx
  4145ce:	je     414710 <__flatcc_fb_gen_c_verifier@@Base+0x3840>
  4145d4:	lea    rsi,[rip+0x2e4dd]        # 442ab8 <_IO_stdin_used@@Base+0x15ab8>
  4145db:	mov    rdi,rbx
  4145de:	xor    eax,eax
  4145e0:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4145e5:	lea    rsi,[rip+0x2d42c]        # 441a18 <_IO_stdin_used@@Base+0x14a18>
  4145ec:	mov    rdi,rbx
  4145ef:	xor    eax,eax
  4145f1:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4145f6:	mov    eax,DWORD PTR [rsp+0xc]
  4145fa:	lea    rsi,[rsp+0x10]
  4145ff:	lea    ecx,[rax-0x1]
  414602:	xor    r8d,r8d
  414605:	xor    edx,edx
  414607:	mov    rdi,rbx
  41460a:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  41460f:	xor    eax,eax
  414611:	lea    rsi,[rip+0x2e4d8]        # 442af0 <_IO_stdin_used@@Base+0x15af0>
  414618:	mov    rdi,rbx
  41461b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414620:	mov    eax,DWORD PTR [rbx+0xf0]
  414626:	test   eax,eax
  414628:	je     4147bb <__flatcc_fb_gen_c_verifier@@Base+0x38eb>
  41462e:	dec    eax
  414630:	mov    DWORD PTR [rbx+0xf0],eax
  414636:	lea    rsi,[rip+0x2cd74]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  41463d:	mov    rdi,rbx
  414640:	xor    eax,eax
  414642:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414647:	xor    eax,eax
  414649:	lea    rsi,[rip+0x2ceca]        # 44151a <_IO_stdin_used@@Base+0x1451a>
  414650:	mov    rdi,rbx
  414653:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414658:	mov    eax,DWORD PTR [rsp+0xc]
  41465c:	test   eax,eax
  41465e:	jle    4146a4 <__flatcc_fb_gen_c_verifier@@Base+0x37d4>
  414660:	mov    eax,DWORD PTR [rbx+0xf0]
  414666:	mov    DWORD PTR [rbx+0xf0],0x0
  414670:	mov    DWORD PTR [rbx+0xf8],eax
  414676:	lea    rsi,[rip+0x2d096]        # 441713 <_IO_stdin_used@@Base+0x14713>
  41467d:	mov    rdi,rbx
  414680:	xor    eax,eax
  414682:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414687:	mov    eax,DWORD PTR [rbx+0xf8]
  41468d:	lea    rsi,[rip+0x2d70c]        # 441da0 <_IO_stdin_used@@Base+0x14da0>
  414694:	mov    DWORD PTR [rbx+0xf0],eax
  41469a:	mov    rdi,rbx
  41469d:	xor    eax,eax
  41469f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4146a4:	mov    eax,DWORD PTR [rbx+0xf0]
  4146aa:	test   eax,eax
  4146ac:	je     4147da <__flatcc_fb_gen_c_verifier@@Base+0x390a>
  4146b2:	dec    eax
  4146b4:	mov    DWORD PTR [rbx+0xf0],eax
  4146ba:	lea    rsi,[rip+0x2ccf0]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  4146c1:	mov    rdi,rbx
  4146c4:	xor    eax,eax
  4146c6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4146cb:	mov    rdi,rbx
  4146ce:	lea    rsi,[rip+0x30a49]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4146d5:	xor    eax,eax
  4146d7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4146dc:	mov    rdi,QWORD PTR [rsp+0x10]
  4146e1:	test   rdi,rdi
  4146e4:	je     4146eb <__flatcc_fb_gen_c_verifier@@Base+0x381b>
  4146e6:	call   405230 <free@plt>
  4146eb:	xor    eax,eax
  4146ed:	mov    rdx,QWORD PTR [rsp+0x128]
  4146f5:	xor    rdx,QWORD PTR fs:0x28
  4146fe:	jne    4147f9 <__flatcc_fb_gen_c_verifier@@Base+0x3929>
  414704:	add    rsp,0x130
  41470b:	pop    rbx
  41470c:	pop    rbp
  41470d:	pop    r12
  41470f:	ret    
  414710:	mov    rdi,rbx
  414713:	xor    eax,eax
  414715:	lea    rsi,[rip+0x2cfe3]        # 4416ff <_IO_stdin_used@@Base+0x146ff>
  41471c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414721:	lea    rsi,[rip+0x2d180]        # 4418a8 <_IO_stdin_used@@Base+0x148a8>
  414728:	mov    rdi,rbx
  41472b:	xor    eax,eax
  41472d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414732:	jmp    41460f <__flatcc_fb_gen_c_verifier@@Base+0x373f>
  414737:	nop    WORD PTR [rax+rax*1+0x0]
  414740:	mov    esi,DWORD PTR [rsp+0xc]
  414744:	test   esi,esi
  414746:	jle    4144c1 <__flatcc_fb_gen_c_verifier@@Base+0x35f1>
  41474c:	mov    rax,QWORD PTR [rip+0x3c895]        # 450fe8 <stderr@GLIBC_2.2.5>
  414753:	lea    rcx,[rip+0x2d1de]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41475a:	mov    rdi,QWORD PTR [rax]
  41475d:	lea    rdx,[rip+0x212ef]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  414764:	mov    esi,0x1
  414769:	lea    r9,[rip+0x2d6c0]        # 441e30 <_IO_stdin_used@@Base+0x14e30>
  414770:	mov    r8d,0x517
  414776:	xor    eax,eax
  414778:	call   4053e0 <__fprintf_chk@plt>
  41477d:	lea    rcx,[rip+0x2f27c]        # 443a00 <_IO_stdin_used@@Base+0x16a00>
  414784:	mov    edx,0x517
  414789:	lea    rsi,[rip+0x2d1a8]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414790:	lea    rdi,[rip+0x22382]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  414797:	call   4052e0 <__assert_fail@plt>
  41479c:	lea    rcx,[rip+0x2f25d]        # 443a00 <_IO_stdin_used@@Base+0x16a00>
  4147a3:	mov    edx,0x515
  4147a8:	lea    rsi,[rip+0x2d189]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4147af:	lea    rdi,[rip+0x1a92a]        # 42f0e0 <_IO_stdin_used@@Base+0x20e0>
  4147b6:	call   4052e0 <__assert_fail@plt>
  4147bb:	lea    rcx,[rip+0x2f23e]        # 443a00 <_IO_stdin_used@@Base+0x16a00>
  4147c2:	mov    edx,0x536
  4147c7:	lea    rsi,[rip+0x2d16a]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4147ce:	lea    rdi,[rip+0x2cbd0]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4147d5:	call   4052e0 <__assert_fail@plt>
  4147da:	lea    rcx,[rip+0x2f21f]        # 443a00 <_IO_stdin_used@@Base+0x16a00>
  4147e1:	mov    edx,0x53f
  4147e6:	lea    rsi,[rip+0x2d14b]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4147ed:	lea    rdi,[rip+0x2cbb1]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4147f4:	call   4052e0 <__assert_fail@plt>
  4147f9:	call   4052c0 <__stack_chk_fail@plt>
  4147fe:	xchg   ax,ax
  414800:	push   r13
  414802:	vpxor  xmm0,xmm0,xmm0
  414806:	push   r12
  414808:	push   rbp
  414809:	push   rbx
  41480a:	sub    rsp,0x138
  414811:	mov    rax,QWORD PTR fs:0x28
  41481a:	mov    QWORD PTR [rsp+0x128],rax
  414822:	xor    eax,eax
  414824:	cmp    WORD PTR [rsi+0x10],0x0
  414829:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  41482f:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  414835:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  41483b:	jne    414e43 <__flatcc_fb_gen_c_verifier@@Base+0x3f73>
  414841:	mov    rbp,rsi
  414844:	mov    rbx,rdi
  414847:	mov    rdi,QWORD PTR [rbp+0x28]
  41484b:	lea    rsi,[rsp+0xc]
  414850:	call   4142b0 <__flatcc_fb_gen_c_verifier@@Base+0x33e0>
  414855:	mov    QWORD PTR [rsp+0x10],rax
  41485a:	test   rax,rax
  41485d:	je     414d80 <__flatcc_fb_gen_c_verifier@@Base+0x3eb0>
  414863:	lea    rcx,[rip+0xfffffffffffff996]        # 414200 <__flatcc_fb_gen_c_verifier@@Base+0x3330>
  41486a:	mov    QWORD PTR [rsp+0x18],rcx
  41486f:	lea    rcx,[rip+0xffffffffffffcd8a]        # 411600 <__flatcc_fb_gen_c_verifier@@Base+0x730>
  414876:	mov    QWORD PTR [rsp+0x20],rcx
  41487b:	mov    ecx,DWORD PTR [rsp+0xc]
  41487f:	mov    QWORD PTR [rsp+0x28],rbp
  414884:	mov    QWORD PTR [rsp+0x30],0x0
  41488d:	test   ecx,ecx
  41488f:	jle    4148c2 <__flatcc_fb_gen_c_verifier@@Base+0x39f2>
  414891:	dec    ecx
  414893:	shl    rcx,0x5
  414897:	lea    rdx,[rax+0x18]
  41489b:	lea    rsi,[rax+rcx*1+0x38]
  4148a0:	xor    eax,eax
  4148a2:	nop    WORD PTR [rax+rax*1+0x0]
  4148a8:	mov    r8d,DWORD PTR [rdx]
  4148ab:	xor    ecx,ecx
  4148ad:	test   r8d,r8d
  4148b0:	setne  cl
  4148b3:	add    rdx,0x20
  4148b7:	add    eax,ecx
  4148b9:	cmp    rsi,rdx
  4148bc:	jne    4148a8 <__flatcc_fb_gen_c_verifier@@Base+0x39d8>
  4148be:	mov    DWORD PTR [rsp+0x34],eax
  4148c2:	lea    r12,[rsp+0x40]
  4148c7:	xor    eax,eax
  4148c9:	mov    ecx,0x1d
  4148ce:	mov    rdi,r12
  4148d1:	rep stos QWORD PTR es:[rdi],rax
  4148d4:	mov    rdi,QWORD PTR [rbp+0x18]
  4148d8:	mov    rdx,r12
  4148db:	mov    rsi,rbp
  4148de:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4148e3:	mov    rdx,r12
  4148e6:	lea    rsi,[rip+0x2e243]        # 442b30 <_IO_stdin_used@@Base+0x15b30>
  4148ed:	mov    rdi,rbx
  4148f0:	xor    eax,eax
  4148f2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4148f7:	lea    rsi,[rip+0x2cbca]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  4148fe:	mov    rdi,rbx
  414901:	xor    eax,eax
  414903:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414908:	inc    DWORD PTR [rbx+0xf0]
  41490e:	mov    rdi,rbx
  414911:	lea    rsi,[rip+0x2cdb7]        # 4416cf <_IO_stdin_used@@Base+0x146cf>
  414918:	xor    eax,eax
  41491a:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41491f:	mov    edi,DWORD PTR [rsp+0xc]
  414923:	test   edi,edi
  414925:	jle    41496b <__flatcc_fb_gen_c_verifier@@Base+0x3a9b>
  414927:	lea    rsi,[rip+0x2cdc5]        # 4416f3 <_IO_stdin_used@@Base+0x146f3>
  41492e:	mov    rdi,rbx
  414931:	xor    eax,eax
  414933:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414938:	lea    rsi,[rip+0x2e279]        # 442bb8 <_IO_stdin_used@@Base+0x15bb8>
  41493f:	mov    rdi,rbx
  414942:	xor    eax,eax
  414944:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414949:	lea    rsi,[rip+0x2cc6e]        # 4415be <_IO_stdin_used@@Base+0x145be>
  414950:	mov    rdi,rbx
  414953:	xor    eax,eax
  414955:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41495a:	lea    rsi,[rip+0x2cc6f]        # 4415d0 <_IO_stdin_used@@Base+0x145d0>
  414961:	mov    rdi,rbx
  414964:	xor    eax,eax
  414966:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41496b:	mov    esi,DWORD PTR [rsp+0x34]
  41496f:	test   esi,esi
  414971:	jne    414d60 <__flatcc_fb_gen_c_verifier@@Base+0x3e90>
  414977:	lea    rsi,[rip+0x307a0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41497e:	mov    rdi,rbx
  414981:	xor    eax,eax
  414983:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414988:	lea    rsi,[rip+0x2cb1e]        # 4414ad <_IO_stdin_used@@Base+0x144ad>
  41498f:	mov    rdi,rbx
  414992:	xor    eax,eax
  414994:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414999:	mov    rdx,QWORD PTR [rbp+0xa8]
  4149a0:	lea    rsi,[rip+0x2e239]        # 442be0 <_IO_stdin_used@@Base+0x15be0>
  4149a7:	mov    rdi,rbx
  4149aa:	xor    eax,eax
  4149ac:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4149b1:	movsxd rdx,DWORD PTR [rsp+0x34]
  4149b6:	test   edx,edx
  4149b8:	jne    414d40 <__flatcc_fb_gen_c_verifier@@Base+0x3e70>
  4149be:	lea    rsi,[rip+0x2e0b3]        # 442a78 <_IO_stdin_used@@Base+0x15a78>
  4149c5:	mov    rdi,rbx
  4149c8:	xor    eax,eax
  4149ca:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4149cf:	lea    rsi,[rip+0x2cc33]        # 441609 <_IO_stdin_used@@Base+0x14609>
  4149d6:	mov    rdi,rbx
  4149d9:	xor    eax,eax
  4149db:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4149e0:	inc    DWORD PTR [rbx+0xf0]
  4149e6:	lea    rsi,[rip+0x2e0cb]        # 442ab8 <_IO_stdin_used@@Base+0x15ab8>
  4149ed:	mov    rdi,rbx
  4149f0:	xor    eax,eax
  4149f2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4149f7:	mov    ecx,DWORD PTR [rsp+0xc]
  4149fb:	test   ecx,ecx
  4149fd:	jle    414cf8 <__flatcc_fb_gen_c_verifier@@Base+0x3e28>
  414a03:	lea    rsi,[rip+0x2d00e]        # 441a18 <_IO_stdin_used@@Base+0x14a18>
  414a0a:	mov    rdi,rbx
  414a0d:	xor    eax,eax
  414a0f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414a14:	mov    eax,DWORD PTR [rsp+0xc]
  414a18:	lea    rsi,[rsp+0x10]
  414a1d:	lea    ecx,[rax-0x1]
  414a20:	xor    r8d,r8d
  414a23:	xor    edx,edx
  414a25:	mov    rdi,rbx
  414a28:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  414a2d:	xor    eax,eax
  414a2f:	lea    rsi,[rip+0x2e24a]        # 442c80 <_IO_stdin_used@@Base+0x15c80>
  414a36:	mov    rdi,rbx
  414a39:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414a3e:	mov    eax,DWORD PTR [rbx+0xf0]
  414a44:	test   eax,eax
  414a46:	je     414ea5 <__flatcc_fb_gen_c_verifier@@Base+0x3fd5>
  414a4c:	dec    eax
  414a4e:	mov    DWORD PTR [rbx+0xf0],eax
  414a54:	lea    rsi,[rip+0x2c956]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  414a5b:	mov    rdi,rbx
  414a5e:	xor    eax,eax
  414a60:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414a65:	lea    rsi,[rip+0x2ccdb]        # 441747 <_IO_stdin_used@@Base+0x14747>
  414a6c:	mov    rdi,rbx
  414a6f:	xor    eax,eax
  414a71:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414a76:	mov    edx,DWORD PTR [rsp+0xc]
  414a7a:	xor    ebp,ebp
  414a7c:	mov    r13d,0x1
  414a82:	test   edx,edx
  414a84:	jg     414ab3 <__flatcc_fb_gen_c_verifier@@Base+0x3be3>
  414a86:	jmp    414b9b <__flatcc_fb_gen_c_verifier@@Base+0x3ccb>
  414a8b:	nop    DWORD PTR [rax+rax*1+0x0]
  414a90:	lea    rsi,[rip+0x2e229]        # 442cc0 <_IO_stdin_used@@Base+0x15cc0>
  414a97:	mov    rdi,rbx
  414a9a:	xor    eax,eax
  414a9c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414aa1:	inc    DWORD PTR [rbx+0xf0]
  414aa7:	xor    r13d,r13d
  414aaa:	inc    rbp
  414aad:	cmp    DWORD PTR [rsp+0xc],ebp
  414ab1:	jle    414b20 <__flatcc_fb_gen_c_verifier@@Base+0x3c50>
  414ab3:	mov    rax,rbp
  414ab6:	shl    rax,0x5
  414aba:	add    rax,QWORD PTR [rsp+0x10]
  414abf:	mov    rax,QWORD PTR [rax+0x10]
  414ac3:	movzx  ecx,WORD PTR [rax+0x70]
  414ac7:	test   cl,0x4
  414aca:	jne    414aaa <__flatcc_fb_gen_c_verifier@@Base+0x3bda>
  414acc:	movzx  edi,WORD PTR [rax+0x28]
  414ad0:	xor    esi,esi
  414ad2:	lea    edx,[rdi-0xe]
  414ad5:	cmp    dx,0x1
  414ad9:	ja     414aea <__flatcc_fb_gen_c_verifier@@Base+0x3c1a>
  414adb:	mov    rdx,QWORD PTR [rax+0x18]
  414adf:	xor    esi,esi
  414ae1:	cmp    WORD PTR [rdx+0x10],0x4
  414ae6:	sete   sil
  414aea:	and    ch,0x1
  414aed:	je     414aaa <__flatcc_fb_gen_c_verifier@@Base+0x3bda>
  414aef:	mov    rdx,QWORD PTR [rax+0x88]
  414af6:	sub    rdx,rsi
  414af9:	test   r13d,r13d
  414afc:	jne    414a90 <__flatcc_fb_gen_c_verifier@@Base+0x3bc0>
  414afe:	lea    rsi,[rip+0x2e1f3]        # 442cf8 <_IO_stdin_used@@Base+0x15cf8>
  414b05:	mov    rdi,rbx
  414b08:	xor    eax,eax
  414b0a:	inc    rbp
  414b0d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414b12:	cmp    DWORD PTR [rsp+0xc],ebp
  414b16:	jg     414ab3 <__flatcc_fb_gen_c_verifier@@Base+0x3be3>
  414b18:	nop    DWORD PTR [rax+rax*1+0x0]
  414b20:	test   r13d,r13d
  414b23:	jne    414b9b <__flatcc_fb_gen_c_verifier@@Base+0x3ccb>
  414b25:	mov    eax,DWORD PTR [rbx+0xf0]
  414b2b:	test   eax,eax
  414b2d:	je     414e86 <__flatcc_fb_gen_c_verifier@@Base+0x3fb6>
  414b33:	dec    eax
  414b35:	mov    DWORD PTR [rbx+0xf0],eax
  414b3b:	lea    rsi,[rip+0x2c984]        # 4414c6 <_IO_stdin_used@@Base+0x144c6>
  414b42:	mov    rdi,rbx
  414b45:	xor    eax,eax
  414b47:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414b4c:	inc    DWORD PTR [rbx+0xf0]
  414b52:	lea    rsi,[rip+0x2e1d7]        # 442d30 <_IO_stdin_used@@Base+0x15d30>
  414b59:	mov    rdi,rbx
  414b5c:	xor    eax,eax
  414b5e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414b63:	xor    eax,eax
  414b65:	lea    rsi,[rip+0x2cb30]        # 44169c <_IO_stdin_used@@Base+0x1469c>
  414b6c:	mov    rdi,rbx
  414b6f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414b74:	mov    eax,DWORD PTR [rbx+0xf0]
  414b7a:	test   eax,eax
  414b7c:	je     414db5 <__flatcc_fb_gen_c_verifier@@Base+0x3ee5>
  414b82:	dec    eax
  414b84:	mov    DWORD PTR [rbx+0xf0],eax
  414b8a:	lea    rsi,[rip+0x2c820]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  414b91:	mov    rdi,rbx
  414b94:	xor    eax,eax
  414b96:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414b9b:	mov    eax,DWORD PTR [rsp+0x34]
  414b9f:	test   eax,eax
  414ba1:	jne    414d20 <__flatcc_fb_gen_c_verifier@@Base+0x3e50>
  414ba7:	lea    rsi,[rip+0x2e222]        # 442dd0 <_IO_stdin_used@@Base+0x15dd0>
  414bae:	mov    rdi,rbx
  414bb1:	xor    eax,eax
  414bb3:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414bb8:	lea    rsi,[rip+0x2c95b]        # 44151a <_IO_stdin_used@@Base+0x1451a>
  414bbf:	mov    rdi,rbx
  414bc2:	xor    eax,eax
  414bc4:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414bc9:	mov    eax,DWORD PTR [rbx+0xf0]
  414bcf:	mov    DWORD PTR [rbx+0xf0],0x0
  414bd9:	mov    DWORD PTR [rbx+0xf8],eax
  414bdf:	lea    rsi,[rip+0x2cb2d]        # 441713 <_IO_stdin_used@@Base+0x14713>
  414be6:	mov    rdi,rbx
  414be9:	xor    eax,eax
  414beb:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414bf0:	mov    eax,DWORD PTR [rbx+0xf8]
  414bf6:	lea    rsi,[rip+0x2d1a3]        # 441da0 <_IO_stdin_used@@Base+0x14da0>
  414bfd:	mov    DWORD PTR [rbx+0xf0],eax
  414c03:	mov    rdi,rbx
  414c06:	xor    eax,eax
  414c08:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414c0d:	mov    eax,DWORD PTR [rbx+0xf0]
  414c13:	test   eax,eax
  414c15:	je     414e24 <__flatcc_fb_gen_c_verifier@@Base+0x3f54>
  414c1b:	dec    eax
  414c1d:	mov    DWORD PTR [rbx+0xf0],eax
  414c23:	lea    rsi,[rip+0x2c787]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  414c2a:	mov    rdi,rbx
  414c2d:	xor    eax,eax
  414c2f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414c34:	lea    rsi,[rip+0x304e3]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  414c3b:	mov    rdi,rbx
  414c3e:	xor    eax,eax
  414c40:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414c45:	mov    rdx,r12
  414c48:	lea    rsi,[rip+0x2e1c9]        # 442e18 <_IO_stdin_used@@Base+0x15e18>
  414c4f:	mov    rdi,rbx
  414c52:	xor    eax,eax
  414c54:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414c59:	lea    rsi,[rip+0x2c868]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  414c60:	mov    rdi,rbx
  414c63:	xor    eax,eax
  414c65:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414c6a:	inc    DWORD PTR [rbx+0xf0]
  414c70:	xor    eax,eax
  414c72:	mov    rdx,r12
  414c75:	lea    rsi,[rip+0x2e234]        # 442eb0 <_IO_stdin_used@@Base+0x15eb0>
  414c7c:	mov    rdi,rbx
  414c7f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414c84:	mov    eax,DWORD PTR [rbx+0xf0]
  414c8a:	test   eax,eax
  414c8c:	je     414e67 <__flatcc_fb_gen_c_verifier@@Base+0x3f97>
  414c92:	dec    eax
  414c94:	mov    DWORD PTR [rbx+0xf0],eax
  414c9a:	lea    rsi,[rip+0x2c710]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  414ca1:	mov    rdi,rbx
  414ca4:	xor    eax,eax
  414ca6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414cab:	mov    rdi,rbx
  414cae:	lea    rsi,[rip+0x30469]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  414cb5:	xor    eax,eax
  414cb7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414cbc:	mov    rdi,QWORD PTR [rsp+0x10]
  414cc1:	test   rdi,rdi
  414cc4:	je     414ccb <__flatcc_fb_gen_c_verifier@@Base+0x3dfb>
  414cc6:	call   405230 <free@plt>
  414ccb:	xor    eax,eax
  414ccd:	mov    rbx,QWORD PTR [rsp+0x128]
  414cd5:	xor    rbx,QWORD PTR fs:0x28
  414cde:	jne    414e62 <__flatcc_fb_gen_c_verifier@@Base+0x3f92>
  414ce4:	add    rsp,0x138
  414ceb:	pop    rbx
  414cec:	pop    rbp
  414ced:	pop    r12
  414cef:	pop    r13
  414cf1:	ret    
  414cf2:	nop    WORD PTR [rax+rax*1+0x0]
  414cf8:	mov    rdi,rbx
  414cfb:	xor    eax,eax
  414cfd:	lea    rsi,[rip+0x2ca28]        # 44172c <_IO_stdin_used@@Base+0x1472c>
  414d04:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414d09:	lea    rsi,[rip+0x2cb98]        # 4418a8 <_IO_stdin_used@@Base+0x148a8>
  414d10:	mov    rdi,rbx
  414d13:	xor    eax,eax
  414d15:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414d1a:	jmp    414a2d <__flatcc_fb_gen_c_verifier@@Base+0x3b5d>
  414d1f:	nop
  414d20:	lea    rsi,[rip+0x2e061]        # 442d88 <_IO_stdin_used@@Base+0x15d88>
  414d27:	mov    rdi,rbx
  414d2a:	xor    eax,eax
  414d2c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414d31:	jmp    414ba7 <__flatcc_fb_gen_c_verifier@@Base+0x3cd7>
  414d36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d40:	lea    rsi,[rip+0x2ded9]        # 442c20 <_IO_stdin_used@@Base+0x15c20>
  414d47:	mov    rdi,rbx
  414d4a:	xor    eax,eax
  414d4c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414d51:	jmp    4149be <__flatcc_fb_gen_c_verifier@@Base+0x3aee>
  414d56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d60:	lea    rsi,[rip+0x2c9b4]        # 44171b <_IO_stdin_used@@Base+0x1471b>
  414d67:	mov    rdi,rbx
  414d6a:	xor    eax,eax
  414d6c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414d71:	jmp    414977 <__flatcc_fb_gen_c_verifier@@Base+0x3aa7>
  414d76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d80:	mov    r9d,DWORD PTR [rsp+0xc]
  414d85:	test   r9d,r9d
  414d88:	jg     414dd4 <__flatcc_fb_gen_c_verifier@@Base+0x3f04>
  414d8a:	lea    rax,[rip+0xfffffffffffff46f]        # 414200 <__flatcc_fb_gen_c_verifier@@Base+0x3330>
  414d91:	mov    QWORD PTR [rsp+0x18],rax
  414d96:	lea    rax,[rip+0xffffffffffffc863]        # 411600 <__flatcc_fb_gen_c_verifier@@Base+0x730>
  414d9d:	mov    QWORD PTR [rsp+0x28],rbp
  414da2:	mov    QWORD PTR [rsp+0x20],rax
  414da7:	mov    QWORD PTR [rsp+0x30],0x0
  414db0:	jmp    4148c2 <__flatcc_fb_gen_c_verifier@@Base+0x39f2>
  414db5:	lea    rcx,[rip+0x2ebb4]        # 443970 <_IO_stdin_used@@Base+0x16970>
  414dbc:	mov    edx,0x5b5
  414dc1:	lea    rsi,[rip+0x2cb70]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414dc8:	lea    rdi,[rip+0x2c5d6]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  414dcf:	call   4052e0 <__assert_fail@plt>
  414dd4:	mov    rax,QWORD PTR [rip+0x3c20d]        # 450fe8 <stderr@GLIBC_2.2.5>
  414ddb:	lea    rcx,[rip+0x2cb56]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414de2:	mov    rdi,QWORD PTR [rax]
  414de5:	lea    rdx,[rip+0x20c67]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  414dec:	mov    esi,0x1
  414df1:	lea    r9,[rip+0x2d038]        # 441e30 <_IO_stdin_used@@Base+0x14e30>
  414df8:	mov    r8d,0x570
  414dfe:	xor    eax,eax
  414e00:	call   4053e0 <__fprintf_chk@plt>
  414e05:	lea    rcx,[rip+0x2eb64]        # 443970 <_IO_stdin_used@@Base+0x16970>
  414e0c:	mov    edx,0x570
  414e11:	lea    rsi,[rip+0x2cb20]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414e18:	lea    rdi,[rip+0x21cfa]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  414e1f:	call   4052e0 <__assert_fail@plt>
  414e24:	lea    rcx,[rip+0x2eb45]        # 443970 <_IO_stdin_used@@Base+0x16970>
  414e2b:	mov    edx,0x5c1
  414e30:	lea    rsi,[rip+0x2cb01]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414e37:	lea    rdi,[rip+0x2c567]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  414e3e:	call   4052e0 <__assert_fail@plt>
  414e43:	lea    rcx,[rip+0x2eb26]        # 443970 <_IO_stdin_used@@Base+0x16970>
  414e4a:	mov    edx,0x56e
  414e4f:	lea    rsi,[rip+0x2cae2]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414e56:	lea    rdi,[rip+0x196ab]        # 42e508 <_IO_stdin_used@@Base+0x1508>
  414e5d:	call   4052e0 <__assert_fail@plt>
  414e62:	call   4052c0 <__stack_chk_fail@plt>
  414e67:	lea    rcx,[rip+0x2eb02]        # 443970 <_IO_stdin_used@@Base+0x16970>
  414e6e:	mov    edx,0x5c7
  414e73:	lea    rsi,[rip+0x2cabe]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414e7a:	lea    rdi,[rip+0x2c524]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  414e81:	call   4052e0 <__assert_fail@plt>
  414e86:	lea    rcx,[rip+0x2eae3]        # 443970 <_IO_stdin_used@@Base+0x16970>
  414e8d:	mov    edx,0x5b2
  414e92:	lea    rsi,[rip+0x2ca9f]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414e99:	lea    rdi,[rip+0x2c505]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  414ea0:	call   4052e0 <__assert_fail@plt>
  414ea5:	lea    rcx,[rip+0x2eac4]        # 443970 <_IO_stdin_used@@Base+0x16970>
  414eac:	mov    edx,0x59e
  414eb1:	lea    rsi,[rip+0x2ca80]        # 441938 <_IO_stdin_used@@Base+0x14938>
  414eb8:	lea    rdi,[rip+0x2c4e6]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  414ebf:	call   4052e0 <__assert_fail@plt>
  414ec4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  414ecf:	nop
  414ed0:	push   r12
  414ed2:	vpxor  xmm0,xmm0,xmm0
  414ed6:	push   rbp
  414ed7:	push   rbx
  414ed8:	sub    rsp,0x130
  414edf:	mov    rax,QWORD PTR fs:0x28
  414ee8:	mov    QWORD PTR [rsp+0x128],rax
  414ef0:	xor    eax,eax
  414ef2:	movzx  eax,WORD PTR [rsi+0x10]
  414ef6:	mov    DWORD PTR [rsp+0xc],0x0
  414efe:	sub    eax,0x3
  414f01:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  414f07:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  414f0d:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  414f13:	cmp    ax,0x1
  414f17:	ja     4151c5 <__flatcc_fb_gen_c_verifier@@Base+0x42f5>
  414f1d:	mov    rbp,rsi
  414f20:	mov    rbx,rdi
  414f23:	mov    rdi,QWORD PTR [rbp+0x28]
  414f27:	lea    rsi,[rsp+0xc]
  414f2c:	call   4142b0 <__flatcc_fb_gen_c_verifier@@Base+0x33e0>
  414f31:	mov    QWORD PTR [rsp+0x10],rax
  414f36:	test   rax,rax
  414f39:	je     415140 <__flatcc_fb_gen_c_verifier@@Base+0x4270>
  414f3f:	lea    rax,[rip+0xffffffffffffe01a]        # 412f60 <__flatcc_fb_gen_c_verifier@@Base+0x2090>
  414f46:	lea    r12,[rsp+0x40]
  414f4b:	mov    QWORD PTR [rsp+0x18],rax
  414f50:	lea    rax,[rip+0xffffffffffffc6c9]        # 411620 <__flatcc_fb_gen_c_verifier@@Base+0x750>
  414f57:	mov    QWORD PTR [rsp+0x20],rax
  414f5c:	mov    ecx,0x1d
  414f61:	xor    eax,eax
  414f63:	mov    rdi,r12
  414f66:	rep stos QWORD PTR es:[rdi],rax
  414f69:	mov    rdi,QWORD PTR [rbp+0x18]
  414f6d:	mov    rdx,r12
  414f70:	mov    rsi,rbp
  414f73:	mov    QWORD PTR [rsp+0x28],rbp
  414f78:	mov    DWORD PTR [rsp+0x30],0x2
  414f80:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  414f85:	mov    rdx,r12
  414f88:	lea    rsi,[rip+0x2df81]        # 442f10 <_IO_stdin_used@@Base+0x15f10>
  414f8f:	mov    rdi,rbx
  414f92:	xor    eax,eax
  414f94:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414f99:	add    DWORD PTR [rbx+0xf0],0x2
  414fa0:	xor    eax,eax
  414fa2:	lea    rsi,[rip+0x2dfcf]        # 442f78 <_IO_stdin_used@@Base+0x15f78>
  414fa9:	mov    rdi,rbx
  414fac:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414fb1:	mov    eax,DWORD PTR [rbx+0xf0]
  414fb7:	test   eax,eax
  414fb9:	je     4151a6 <__flatcc_fb_gen_c_verifier@@Base+0x42d6>
  414fbf:	cmp    eax,0x1
  414fc2:	je     41519c <__flatcc_fb_gen_c_verifier@@Base+0x42cc>
  414fc8:	sub    eax,0x2
  414fcb:	mov    DWORD PTR [rbx+0xf0],eax
  414fd1:	lea    rsi,[rip+0x2c4f0]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  414fd8:	xor    eax,eax
  414fda:	mov    rdi,rbx
  414fdd:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  414fe2:	mov    eax,DWORD PTR [rsp+0xc]
  414fe6:	inc    DWORD PTR [rbx+0xf0]
  414fec:	test   eax,eax
  414fee:	je     4150e0 <__flatcc_fb_gen_c_verifier@@Base+0x4210>
  414ff4:	lea    rsi,[rip+0x2c5a6]        # 4415a1 <_IO_stdin_used@@Base+0x145a1>
  414ffb:	mov    rdi,rbx
  414ffe:	xor    eax,eax
  415000:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415005:	lea    rsi,[rip+0x2c5b2]        # 4415be <_IO_stdin_used@@Base+0x145be>
  41500c:	mov    rdi,rbx
  41500f:	xor    eax,eax
  415011:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415016:	lea    rsi,[rip+0x2c5b3]        # 4415d0 <_IO_stdin_used@@Base+0x145d0>
  41501d:	mov    rdi,rbx
  415020:	xor    eax,eax
  415022:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415027:	lea    rsi,[rip+0x300f0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41502e:	mov    rdi,rbx
  415031:	xor    eax,eax
  415033:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415038:	lea    rsi,[rip+0x2c9d9]        # 441a18 <_IO_stdin_used@@Base+0x14a18>
  41503f:	mov    rdi,rbx
  415042:	xor    eax,eax
  415044:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415049:	mov    eax,DWORD PTR [rsp+0xc]
  41504d:	lea    rsi,[rsp+0x10]
  415052:	lea    ecx,[rax-0x1]
  415055:	xor    r8d,r8d
  415058:	xor    edx,edx
  41505a:	mov    rdi,rbx
  41505d:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  415062:	xor    eax,eax
  415064:	lea    rsi,[rip+0x2c4af]        # 44151a <_IO_stdin_used@@Base+0x1451a>
  41506b:	mov    rdi,rbx
  41506e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415073:	mov    eax,DWORD PTR [rbx+0xf0]
  415079:	test   eax,eax
  41507b:	je     4151e9 <__flatcc_fb_gen_c_verifier@@Base+0x4319>
  415081:	dec    eax
  415083:	mov    DWORD PTR [rbx+0xf0],eax
  415089:	lea    rsi,[rip+0x2c321]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  415090:	mov    rdi,rbx
  415093:	xor    eax,eax
  415095:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41509a:	mov    rdi,rbx
  41509d:	lea    rsi,[rip+0x3007a]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4150a4:	xor    eax,eax
  4150a6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4150ab:	mov    rdi,QWORD PTR [rsp+0x10]
  4150b0:	test   rdi,rdi
  4150b3:	je     4150ba <__flatcc_fb_gen_c_verifier@@Base+0x41ea>
  4150b5:	call   405230 <free@plt>
  4150ba:	xor    eax,eax
  4150bc:	mov    rdx,QWORD PTR [rsp+0x128]
  4150c4:	xor    rdx,QWORD PTR fs:0x28
  4150cd:	jne    4151e4 <__flatcc_fb_gen_c_verifier@@Base+0x4314>
  4150d3:	add    rsp,0x130
  4150da:	pop    rbx
  4150db:	pop    rbp
  4150dc:	pop    r12
  4150de:	ret    
  4150df:	nop
  4150e0:	lea    rsi,[rip+0x2c67d]        # 441764 <_IO_stdin_used@@Base+0x14764>
  4150e7:	mov    rdi,rbx
  4150ea:	xor    eax,eax
  4150ec:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4150f1:	lea    rsi,[rip+0x2c686]        # 44177e <_IO_stdin_used@@Base+0x1477e>
  4150f8:	mov    rdi,rbx
  4150fb:	xor    eax,eax
  4150fd:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415102:	xor    eax,eax
  415104:	lea    rsi,[rip+0x2c479]        # 441584 <_IO_stdin_used@@Base+0x14584>
  41510b:	mov    rdi,rbx
  41510e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415113:	mov    eax,DWORD PTR [rbx+0xf0]
  415119:	test   eax,eax
  41511b:	jne    415081 <__flatcc_fb_gen_c_verifier@@Base+0x41b1>
  415121:	lea    rcx,[rip+0x2e838]        # 443960 <_IO_stdin_used@@Base+0x16960>
  415128:	mov    edx,0x4f5
  41512d:	lea    rsi,[rip+0x2c804]        # 441938 <_IO_stdin_used@@Base+0x14938>
  415134:	lea    rdi,[rip+0x2c26a]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41513b:	call   4052e0 <__assert_fail@plt>
  415140:	mov    edx,DWORD PTR [rsp+0xc]
  415144:	test   edx,edx
  415146:	jle    414f3f <__flatcc_fb_gen_c_verifier@@Base+0x406f>
  41514c:	mov    rax,QWORD PTR [rip+0x3be95]        # 450fe8 <stderr@GLIBC_2.2.5>
  415153:	lea    rcx,[rip+0x2c7de]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41515a:	mov    rdi,QWORD PTR [rax]
  41515d:	lea    rdx,[rip+0x208ef]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  415164:	mov    esi,0x1
  415169:	lea    r9,[rip+0x2ccc0]        # 441e30 <_IO_stdin_used@@Base+0x14e30>
  415170:	mov    r8d,0x4e1
  415176:	xor    eax,eax
  415178:	call   4053e0 <__fprintf_chk@plt>
  41517d:	lea    rcx,[rip+0x2e7dc]        # 443960 <_IO_stdin_used@@Base+0x16960>
  415184:	mov    edx,0x4e1
  415189:	lea    rsi,[rip+0x2c7a8]        # 441938 <_IO_stdin_used@@Base+0x14938>
  415190:	lea    rdi,[rip+0x21982]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  415197:	call   4052e0 <__assert_fail@plt>
  41519c:	mov    DWORD PTR [rbx+0xf0],0x0
  4151a6:	lea    rcx,[rip+0x2e7b3]        # 443960 <_IO_stdin_used@@Base+0x16960>
  4151ad:	mov    edx,0x4ef
  4151b2:	lea    rsi,[rip+0x2c77f]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4151b9:	lea    rdi,[rip+0x2c1e5]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4151c0:	call   4052e0 <__assert_fail@plt>
  4151c5:	lea    rcx,[rip+0x2e794]        # 443960 <_IO_stdin_used@@Base+0x16960>
  4151cc:	mov    edx,0x4de
  4151d1:	lea    rsi,[rip+0x2c760]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4151d8:	lea    rdi,[rip+0x19c89]        # 42ee68 <_IO_stdin_used@@Base+0x1e68>
  4151df:	call   4052e0 <__assert_fail@plt>
  4151e4:	call   4052c0 <__stack_chk_fail@plt>
  4151e9:	lea    rcx,[rip+0x2e770]        # 443960 <_IO_stdin_used@@Base+0x16960>
  4151f0:	mov    edx,0x4fe
  4151f5:	lea    rsi,[rip+0x2c73c]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4151fc:	lea    rdi,[rip+0x2c1a2]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  415203:	call   4052e0 <__assert_fail@plt>
  415208:	nop    DWORD PTR [rax+rax*1+0x0]
  415210:	endbr64 
  415214:	cmp    WORD PTR [rsi+0x10],0x4
  415219:	ja     4152f0 <__flatcc_fb_gen_c_verifier@@Base+0x4420>
  41521f:	push   r14
  415221:	push   r13
  415223:	push   r12
  415225:	mov    r12,rdi
  415228:	push   rbp
  415229:	mov    rbp,rsi
  41522c:	push   rbx
  41522d:	mov    rax,QWORD PTR [rdi+0x48]
  415231:	mov    rsi,QWORD PTR [rsi+0x20]
  415235:	lea    rdi,[rax+0x128]
  41523c:	call   41adb0 <ptr_set_find_item@@Base>
  415241:	test   rax,rax
  415244:	je     4152e7 <__flatcc_fb_gen_c_verifier@@Base+0x4417>
  41524a:	mov    r13,QWORD PTR [r12+0x40]
  41524f:	mov    eax,DWORD PTR [r12]
  415253:	mov    rcx,r13
  415256:	test   eax,eax
  415258:	je     415298 <__flatcc_fb_gen_c_verifier@@Base+0x43c8>
  41525a:	mov    rax,QWORD PTR [rbp+0x18]
  41525e:	mov    r14,QWORD PTR [rax]
  415261:	test   r14,r14
  415264:	je     415298 <__flatcc_fb_gen_c_verifier@@Base+0x43c8>
  415266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415270:	mov    rax,QWORD PTR [r14+0x8]
  415274:	mov    rdi,rcx
  415277:	movsxd rbx,DWORD PTR [rax+0x8]
  41527b:	mov    rsi,QWORD PTR [rax]
  41527e:	mov    rdx,rbx
  415281:	call   405350 <memcpy@plt>
  415286:	add    rbx,rax
  415289:	mov    BYTE PTR [rbx],0x2e
  41528c:	lea    rcx,[rbx+0x1]
  415290:	mov    r14,QWORD PTR [r14]
  415293:	test   r14,r14
  415296:	jne    415270 <__flatcc_fb_gen_c_verifier@@Base+0x43a0>
  415298:	mov    rax,QWORD PTR [rbp+0x8]
  41529c:	mov    rdi,rcx
  41529f:	movsxd rbx,DWORD PTR [rax+0x8]
  4152a3:	mov    rsi,QWORD PTR [rax]
  4152a6:	mov    rdx,rbx
  4152a9:	call   405350 <memcpy@plt>
  4152ae:	mov    rcx,rax
  4152b1:	add    rcx,rbx
  4152b4:	mov    BYTE PTR [rcx],0x0
  4152b7:	inc    rcx
  4152ba:	mov    QWORD PTR [r12+0x40],rcx
  4152bf:	movzx  eax,WORD PTR [rbp+0x10]
  4152c3:	cmp    ax,0x1
  4152c7:	jbe    4152f8 <__flatcc_fb_gen_c_verifier@@Base+0x4428>
  4152c9:	sub    eax,0x3
  4152cc:	cmp    ax,0x1
  4152d0:	ja     4152e7 <__flatcc_fb_gen_c_verifier@@Base+0x4417>
  4152d2:	mov    rax,QWORD PTR [r12+0x38]
  4152d7:	mov    QWORD PTR [rax],rbp
  4152da:	mov    QWORD PTR [rax+0x8],r13
  4152de:	add    rax,0x10
  4152e2:	mov    QWORD PTR [r12+0x38],rax
  4152e7:	pop    rbx
  4152e8:	pop    rbp
  4152e9:	pop    r12
  4152eb:	pop    r13
  4152ed:	pop    r14
  4152ef:	ret    
  4152f0:	ret    
  4152f1:	nop    DWORD PTR [rax+0x0]
  4152f8:	mov    rax,QWORD PTR [r12+0x30]
  4152fd:	mov    QWORD PTR [rax],rbp
  415300:	mov    QWORD PTR [rax+0x8],r13
  415304:	add    rax,0x10
  415308:	mov    QWORD PTR [r12+0x30],rax
  41530d:	pop    rbx
  41530e:	pop    rbp
  41530f:	pop    r12
  415311:	pop    r13
  415313:	pop    r14
  415315:	ret    
  415316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415320:	endbr64 
  415324:	movzx  eax,WORD PTR [rsi+0x10]
  415328:	sub    eax,0x3
  41532b:	cmp    eax,0x1
  41532e:	jbe    415338 <__flatcc_fb_gen_c_verifier@@Base+0x4468>
  415330:	ret    
  415331:	nop    DWORD PTR [rax+0x0]
  415338:	push   rbx
  415339:	mov    rbx,rdi
  41533c:	mov    rax,QWORD PTR [rdi+0x8]
  415340:	mov    rsi,QWORD PTR [rsi+0x20]
  415344:	lea    rdi,[rax+0x128]
  41534b:	call   41adb0 <ptr_set_find_item@@Base>
  415350:	test   rax,rax
  415353:	je     415357 <__flatcc_fb_gen_c_verifier@@Base+0x4487>
  415355:	inc    DWORD PTR [rbx]
  415357:	pop    rbx
  415358:	ret    
  415359:	nop    DWORD PTR [rax+0x0]
  415360:	endbr64 
  415364:	movzx  eax,WORD PTR [rsi+0x10]
  415368:	sub    eax,0x3
  41536b:	cmp    eax,0x1
  41536e:	jbe    415378 <__flatcc_fb_gen_c_verifier@@Base+0x44a8>
  415370:	ret    
  415371:	nop    DWORD PTR [rax+0x0]
  415378:	push   rbp
  415379:	mov    rbp,rdi
  41537c:	push   rbx
  41537d:	mov    rbx,rsi
  415380:	sub    rsp,0x8
  415384:	mov    rax,QWORD PTR [rdi+0x8]
  415388:	mov    rsi,QWORD PTR [rsi+0x20]
  41538c:	lea    rdi,[rax+0x128]
  415393:	call   41adb0 <ptr_set_find_item@@Base>
  415398:	test   rax,rax
  41539b:	je     4153be <__flatcc_fb_gen_c_verifier@@Base+0x44ee>
  41539d:	mov    rdx,QWORD PTR [rbx+0x8]
  4153a1:	mov    rax,QWORD PTR [rbp+0x10]
  4153a5:	mov    rcx,QWORD PTR [rdx]
  4153a8:	mov    rdx,QWORD PTR [rdx+0x8]
  4153ac:	mov    QWORD PTR [rax],rcx
  4153af:	mov    DWORD PTR [rax+0x8],edx
  4153b2:	mov    QWORD PTR [rax+0x10],rbx
  4153b6:	add    rax,0x20
  4153ba:	mov    QWORD PTR [rbp+0x10],rax
  4153be:	add    rsp,0x8
  4153c2:	pop    rbx
  4153c3:	pop    rbp
  4153c4:	ret    
  4153c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4153d0:	endbr64 
  4153d4:	cmp    WORD PTR [rsi+0x10],0x4
  4153d9:	ja     415470 <__flatcc_fb_gen_c_verifier@@Base+0x45a0>
  4153df:	push   rbp
  4153e0:	mov    rbp,rdi
  4153e3:	push   rbx
  4153e4:	mov    rbx,rsi
  4153e7:	sub    rsp,0x8
  4153eb:	mov    rax,QWORD PTR [rdi+0x48]
  4153ef:	mov    rsi,QWORD PTR [rsi+0x20]
  4153f3:	lea    rdi,[rax+0x128]
  4153fa:	call   41adb0 <ptr_set_find_item@@Base>
  4153ff:	test   rax,rax
  415402:	je     415460 <__flatcc_fb_gen_c_verifier@@Base+0x4590>
  415404:	mov    eax,DWORD PTR [rbp+0x0]
  415407:	xor    edx,edx
  415409:	test   eax,eax
  41540b:	je     415435 <__flatcc_fb_gen_c_verifier@@Base+0x4565>
  41540d:	mov    rax,QWORD PTR [rbx+0x18]
  415411:	mov    rax,QWORD PTR [rax]
  415414:	test   rax,rax
  415417:	je     415435 <__flatcc_fb_gen_c_verifier@@Base+0x4565>
  415419:	nop    DWORD PTR [rax+0x0]
  415420:	mov    rcx,QWORD PTR [rax+0x8]
  415424:	mov    rax,QWORD PTR [rax]
  415427:	mov    rcx,QWORD PTR [rcx+0x8]
  41542b:	lea    rdx,[rdx+rcx*1+0x1]
  415430:	test   rax,rax
  415433:	jne    415420 <__flatcc_fb_gen_c_verifier@@Base+0x4550>
  415435:	mov    rcx,QWORD PTR [rbx+0x8]
  415439:	mov    rax,QWORD PTR [rbp+0x10]
  41543d:	add    rax,QWORD PTR [rcx+0x8]
  415441:	lea    rax,[rdx+rax*1+0x1]
  415446:	mov    QWORD PTR [rbp+0x10],rax
  41544a:	movzx  eax,WORD PTR [rbx+0x10]
  41544e:	cmp    ax,0x1
  415452:	jbe    415478 <__flatcc_fb_gen_c_verifier@@Base+0x45a8>
  415454:	sub    eax,0x3
  415457:	cmp    ax,0x1
  41545b:	ja     415460 <__flatcc_fb_gen_c_verifier@@Base+0x4590>
  41545d:	inc    DWORD PTR [rbp+0x8]
  415460:	add    rsp,0x8
  415464:	pop    rbx
  415465:	pop    rbp
  415466:	ret    
  415467:	nop    WORD PTR [rax+rax*1+0x0]
  415470:	ret    
  415471:	nop    DWORD PTR [rax+0x0]
  415478:	inc    DWORD PTR [rbp+0x4]
  41547b:	add    rsp,0x8
  41547f:	pop    rbx
  415480:	pop    rbp
  415481:	ret    
  415482:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41548d:	nop    DWORD PTR [rax]

0000000000415490 <__flatcc_fb_gen_c_json_parser@@Base>:
  415490:	endbr64 
  415494:	push   r15
  415496:	lea    rsi,[rip+0x2c2f1]        # 44178e <_IO_stdin_used@@Base+0x1478e>
  41549d:	push   r14
  41549f:	push   r13
  4154a1:	push   r12
  4154a3:	push   rbp
  4154a4:	push   rbx
  4154a5:	mov    rbx,rdi
  4154a8:	sub    rsp,0x198
  4154af:	mov    rax,QWORD PTR fs:0x28
  4154b8:	mov    QWORD PTR [rsp+0x188],rax
  4154c0:	xor    eax,eax
  4154c2:	mov    rax,QWORD PTR [rdi+0xd8]
  4154c9:	mov    rdx,QWORD PTR [rax+0x118]
  4154d0:	xor    eax,eax
  4154d2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4154d7:	mov    rax,QWORD PTR [rbx+0xd8]
  4154de:	lea    rsi,[rip+0x2c2c2]        # 4417a7 <_IO_stdin_used@@Base+0x147a7>
  4154e5:	mov    rdx,QWORD PTR [rax+0x118]
  4154ec:	mov    rdi,rbx
  4154ef:	xor    eax,eax
  4154f1:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4154f6:	lea    rsi,[rip+0x2fc21]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4154fd:	mov    rdi,rbx
  415500:	xor    eax,eax
  415502:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415507:	lea    rsi,[rip+0x2daa2]        # 442fb0 <_IO_stdin_used@@Base+0x15fb0>
  41550e:	mov    rdi,rbx
  415511:	xor    eax,eax
  415513:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415518:	lea    rsi,[rip+0x2fbff]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41551f:	mov    rdi,rbx
  415522:	xor    eax,eax
  415524:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415529:	xor    eax,eax
  41552b:	lea    rsi,[rip+0x2dace]        # 443000 <_IO_stdin_used@@Base+0x16000>
  415532:	mov    rdi,rbx
  415535:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41553a:	lea    rdx,[rip+0x2c270]        # 4417b1 <_IO_stdin_used@@Base+0x147b1>
  415541:	lea    rsi,[rip+0x18cf5]        # 42e23d <_IO_stdin_used@@Base+0x123d>
  415548:	mov    rdi,rbx
  41554b:	call   406620 <__flatcc_fb_gen_c_includes@@Base>
  415550:	mov    rax,QWORD PTR [rbx+0xe0]
  415557:	mov    edx,DWORD PTR [rax+0xac]
  41555d:	test   edx,edx
  41555f:	jne    416250 <__flatcc_fb_gen_c_json_parser@@Base+0xdc0>
  415565:	lea    rsi,[rip+0x2fbb2]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41556c:	mov    rdi,rbx
  41556f:	xor    eax,eax
  415571:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415576:	mov    rdx,QWORD PTR [rbx+0xd8]
  41557d:	lea    rbp,[rsp+0xa0]
  415585:	mov    rsi,QWORD PTR [rdx+0x58]
  415589:	mov    ecx,0x1d
  41558e:	xor    eax,eax
  415590:	mov    rdi,rbp
  415593:	rep stos QWORD PTR es:[rdi],rax
  415596:	test   rsi,rsi
  415599:	je     4155a6 <__flatcc_fb_gen_c_json_parser@@Base+0x116>
  41559b:	cmp    WORD PTR [rsi+0x10],0x1
  4155a0:	jbe    4162e0 <__flatcc_fb_gen_c_json_parser@@Base+0xe50>
  4155a6:	mov    r12,QWORD PTR [rdx+0x40]
  4155aa:	test   r12,r12
  4155ad:	je     415748 <__flatcc_fb_gen_c_json_parser@@Base+0x2b8>
  4155b3:	lea    r13,[rip+0x2dd3e]        # 4432f8 <_IO_stdin_used@@Base+0x162f8>
  4155ba:	jmp    41565b <__flatcc_fb_gen_c_json_parser@@Base+0x1cb>
  4155bf:	nop
  4155c0:	cmp    ax,0x4
  4155c4:	jne    41564e <__flatcc_fb_gen_c_json_parser@@Base+0x1be>
  4155ca:	mov    rdi,QWORD PTR [r12+0x18]
  4155cf:	mov    rdx,rbp
  4155d2:	mov    rsi,r12
  4155d5:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4155da:	mov    rdx,rbp
  4155dd:	lea    rsi,[rip+0x2dc4c]        # 443230 <_IO_stdin_used@@Base+0x16230>
  4155e4:	mov    rdi,rbx
  4155e7:	xor    eax,eax
  4155e9:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4155ee:	mov    rdx,rbp
  4155f1:	lea    rsi,[rip+0x2dcc8]        # 4432c0 <_IO_stdin_used@@Base+0x162c0>
  4155f8:	mov    rdi,rbx
  4155fb:	xor    eax,eax
  4155fd:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415602:	mov    rdx,rbp
  415605:	lea    rsi,[rip+0x2d904]        # 442f10 <_IO_stdin_used@@Base+0x15f10>
  41560c:	mov    rdi,rbx
  41560f:	xor    eax,eax
  415611:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415616:	add    DWORD PTR [rbx+0xf0],0x2
  41561d:	xor    eax,eax
  41561f:	lea    rsi,[rip+0x2c492]        # 441ab8 <_IO_stdin_used@@Base+0x14ab8>
  415626:	mov    rdi,rbx
  415629:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41562e:	mov    eax,DWORD PTR [rbx+0xf0]
  415634:	test   eax,eax
  415636:	je     41646a <__flatcc_fb_gen_c_json_parser@@Base+0xfda>
  41563c:	cmp    eax,0x1
  41563f:	je     416460 <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
  415645:	sub    eax,0x2
  415648:	mov    DWORD PTR [rbx+0xf0],eax
  41564e:	mov    r12,QWORD PTR [r12]
  415652:	test   r12,r12
  415655:	je     415741 <__flatcc_fb_gen_c_json_parser@@Base+0x2b1>
  41565b:	movzx  eax,WORD PTR [r12+0x10]
  415661:	cmp    ax,0x1
  415665:	je     415700 <__flatcc_fb_gen_c_json_parser@@Base+0x270>
  41566b:	test   ax,ax
  41566e:	je     415d98 <__flatcc_fb_gen_c_json_parser@@Base+0x908>
  415674:	cmp    ax,0x3
  415678:	jne    4155c0 <__flatcc_fb_gen_c_json_parser@@Base+0x130>
  41567e:	mov    rdi,QWORD PTR [r12+0x18]
  415683:	mov    rdx,rbp
  415686:	mov    rsi,r12
  415689:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  41568e:	mov    rdx,rbp
  415691:	lea    rsi,[rip+0x2d878]        # 442f10 <_IO_stdin_used@@Base+0x15f10>
  415698:	mov    rdi,rbx
  41569b:	xor    eax,eax
  41569d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4156a2:	add    DWORD PTR [rbx+0xf0],0x2
  4156a9:	xor    eax,eax
  4156ab:	mov    rdx,rbp
  4156ae:	lea    rsi,[rip+0x2c403]        # 441ab8 <_IO_stdin_used@@Base+0x14ab8>
  4156b5:	mov    rdi,rbx
  4156b8:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4156bd:	mov    eax,DWORD PTR [rbx+0xf0]
  4156c3:	test   eax,eax
  4156c5:	je     4156da <__flatcc_fb_gen_c_json_parser@@Base+0x24a>
  4156c7:	cmp    eax,0x1
  4156ca:	jne    415645 <__flatcc_fb_gen_c_json_parser@@Base+0x1b5>
  4156d0:	mov    DWORD PTR [rbx+0xf0],0x0
  4156da:	lea    rcx,[rip+0x2e3ef]        # 443ad0 <_IO_stdin_used@@Base+0x16ad0>
  4156e1:	mov    edx,0x6d3
  4156e6:	lea    rsi,[rip+0x2c24b]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4156ed:	lea    rdi,[rip+0x2bcb1]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4156f4:	call   4052e0 <__assert_fail@plt>
  4156f9:	nop    DWORD PTR [rax+0x0]
  415700:	mov    rdi,QWORD PTR [r12+0x18]
  415705:	mov    rsi,r12
  415708:	mov    rdx,rbp
  41570b:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  415710:	mov    rdx,rbp
  415713:	mov    rsi,r13
  415716:	mov    rdi,rbx
  415719:	xor    eax,eax
  41571b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415720:	mov    rdx,rbp
  415723:	lea    rsi,[rip+0x2dc4e]        # 443378 <_IO_stdin_used@@Base+0x16378>
  41572a:	mov    rdi,rbx
  41572d:	xor    eax,eax
  41572f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415734:	mov    r12,QWORD PTR [r12]
  415738:	test   r12,r12
  41573b:	jne    41565b <__flatcc_fb_gen_c_json_parser@@Base+0x1cb>
  415741:	mov    rdx,QWORD PTR [rbx+0xd8]
  415748:	mov    rdi,QWORD PTR [rdx+0x68]
  41574c:	lea    rsi,[rip+0xffffffffffffccad]        # 412400 <__flatcc_fb_gen_c_verifier@@Base+0x1530>
  415753:	mov    rdx,rbx
  415756:	call   41c5f0 <fb_scope_table_visit@@Base>
  41575b:	mov    rax,QWORD PTR [rbx+0xd8]
  415762:	lea    rsi,[rip+0x2dd1f]        # 443488 <_IO_stdin_used@@Base+0x16488>
  415769:	mov    rdx,QWORD PTR [rax+0x110]
  415770:	mov    rdi,rbx
  415773:	xor    eax,eax
  415775:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41577a:	add    DWORD PTR [rbx+0xf0],0x2
  415781:	xor    eax,eax
  415783:	lea    rsi,[rip+0x2c32e]        # 441ab8 <_IO_stdin_used@@Base+0x14ab8>
  41578a:	mov    rdi,rbx
  41578d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415792:	mov    eax,DWORD PTR [rbx+0xf0]
  415798:	test   eax,eax
  41579a:	je     416493 <__flatcc_fb_gen_c_json_parser@@Base+0x1003>
  4157a0:	cmp    eax,0x1
  4157a3:	je     416489 <__flatcc_fb_gen_c_json_parser@@Base+0xff9>
  4157a9:	sub    eax,0x2
  4157ac:	mov    DWORD PTR [rbx+0xf0],eax
  4157b2:	lea    rsi,[rip+0x2f965]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4157b9:	xor    eax,eax
  4157bb:	mov    rdi,rbx
  4157be:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4157c3:	mov    rax,QWORD PTR [rbx+0xd8]
  4157ca:	mov    r12,QWORD PTR [rax+0x40]
  4157ce:	test   r12,r12
  4157d1:	je     415853 <__flatcc_fb_gen_c_json_parser@@Base+0x3c3>
  4157d7:	xor    r13d,r13d
  4157da:	jmp    415819 <__flatcc_fb_gen_c_json_parser@@Base+0x389>
  4157dc:	nop    DWORD PTR [rax+0x0]
  4157e0:	cmp    ax,0x4
  4157e4:	jne    415810 <__flatcc_fb_gen_c_json_parser@@Base+0x380>
  4157e6:	mov    rsi,r12
  4157e9:	mov    rdi,rbx
  4157ec:	call   412490 <__flatcc_fb_gen_c_verifier@@Base+0x15c0>
  4157f1:	mov    rsi,r12
  4157f4:	mov    rdi,rbx
  4157f7:	call   412a10 <__flatcc_fb_gen_c_verifier@@Base+0x1b40>
  4157fc:	mov    rsi,r12
  4157ff:	mov    rdi,rbx
  415802:	call   414ed0 <__flatcc_fb_gen_c_verifier@@Base+0x4000>
  415807:	nop    WORD PTR [rax+rax*1+0x0]
  415810:	mov    r12,QWORD PTR [r12]
  415814:	test   r12,r12
  415817:	je     41584c <__flatcc_fb_gen_c_json_parser@@Base+0x3bc>
  415819:	movzx  eax,WORD PTR [r12+0x10]
  41581f:	cmp    ax,0x1
  415823:	je     415de0 <__flatcc_fb_gen_c_json_parser@@Base+0x950>
  415829:	test   ax,ax
  41582c:	je     415dc8 <__flatcc_fb_gen_c_json_parser@@Base+0x938>
  415832:	cmp    ax,0x3
  415836:	jne    4157e0 <__flatcc_fb_gen_c_json_parser@@Base+0x350>
  415838:	mov    rsi,r12
  41583b:	mov    rdi,rbx
  41583e:	call   414ed0 <__flatcc_fb_gen_c_verifier@@Base+0x4000>
  415843:	mov    r12,QWORD PTR [r12]
  415847:	test   r12,r12
  41584a:	jne    415819 <__flatcc_fb_gen_c_json_parser@@Base+0x389>
  41584c:	mov    rax,QWORD PTR [rbx+0xd8]
  415853:	mov    rdi,QWORD PTR [rax+0x68]
  415857:	mov    rdx,rbx
  41585a:	lea    rsi,[rip+0xffffffffffffd36f]        # 412bd0 <__flatcc_fb_gen_c_verifier@@Base+0x1d00>
  415861:	call   41c5f0 <fb_scope_table_visit@@Base>
  415866:	mov    rdx,QWORD PTR [rbx+0xd8]
  41586d:	vpxor  xmm0,xmm0,xmm0
  415871:	mov    r15,QWORD PTR [rdx+0x68]
  415875:	lea    r14,[rsp+0x50]
  41587a:	vmovups XMMWORD PTR [rsp+0x54],xmm0
  415880:	lea    rsi,[rip+0xffffffffffffba79]        # 411300 <__flatcc_fb_gen_c_verifier@@Base+0x430>
  415887:	vmovups XMMWORD PTR [r14+0x14],xmm0
  41588d:	vmovups XMMWORD PTR [r14+0x24],xmm0
  415893:	vmovups XMMWORD PTR [r14+0x34],xmm0
  415899:	mov    DWORD PTR [r14+0x44],0x0
  4158a1:	mov    rdi,r15
  4158a4:	mov    QWORD PTR [rsp+0x98],rdx
  4158ac:	mov    rdx,r14
  4158af:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  4158b5:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  4158bb:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4158c1:	mov    DWORD PTR [rsp+0x50],0x1
  4158c9:	call   41c5f0 <fb_scope_table_visit@@Base>
  4158ce:	movsxd rdi,DWORD PTR [rsp+0x54]
  4158d3:	mov    esi,0x10
  4158d8:	mov    DWORD PTR [rsp+0x1c],edi
  4158dc:	call   405320 <calloc@plt>
  4158e1:	movsxd rdi,DWORD PTR [rsp+0x58]
  4158e6:	mov    esi,0x10
  4158eb:	mov    r12,rax
  4158ee:	mov    DWORD PTR [rsp+0x10],edi
  4158f2:	mov    QWORD PTR [rsp+0x68],rax
  4158f7:	call   405320 <calloc@plt>
  4158fc:	mov    rsi,QWORD PTR [rsp+0x60]
  415901:	mov    r13,rax
  415904:	mov    rdi,rsi
  415907:	mov    QWORD PTR [rsp+0x8],rsi
  41590c:	mov    QWORD PTR [rsp+0x70],rax
  415911:	call   405360 <malloc@plt>
  415916:	test   r12,r12
  415919:	mov    QWORD PTR [rsp+0x78],rax
  41591e:	mov    QWORD PTR [rsp+0x80],r12
  415926:	mov    QWORD PTR [rsp+0x88],r13
  41592e:	mov    QWORD PTR [rsp+0x90],rax
  415936:	mov    rsi,QWORD PTR [rsp+0x8]
  41593b:	mov    ecx,DWORD PTR [rsp+0x10]
  41593f:	jne    41594d <__flatcc_fb_gen_c_json_parser@@Base+0x4bd>
  415941:	mov    edx,DWORD PTR [rsp+0x1c]
  415945:	test   edx,edx
  415947:	jg     415ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x710>
  41594d:	test   r13,r13
  415950:	jne    41595a <__flatcc_fb_gen_c_json_parser@@Base+0x4ca>
  415952:	test   ecx,ecx
  415954:	jg     415ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x710>
  41595a:	test   rax,rax
  41595d:	jne    415968 <__flatcc_fb_gen_c_json_parser@@Base+0x4d8>
  41595f:	test   rsi,rsi
  415962:	jne    415ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x710>
  415968:	mov    rdx,r14
  41596b:	lea    rsi,[rip+0xffffffffffffb96e]        # 4112e0 <__flatcc_fb_gen_c_verifier@@Base+0x410>
  415972:	mov    rdi,r15
  415975:	call   41c5f0 <fb_scope_table_visit@@Base>
  41597a:	mov    esi,DWORD PTR [rsp+0x54]
  41597e:	mov    rdi,QWORD PTR [rsp+0x68]
  415983:	call   411320 <__flatcc_fb_gen_c_verifier@@Base+0x450>
  415988:	mov    esi,DWORD PTR [rsp+0x58]
  41598c:	mov    rdi,QWORD PTR [rsp+0x70]
  415991:	call   411320 <__flatcc_fb_gen_c_verifier@@Base+0x450>
  415996:	mov    r13d,DWORD PTR [rsp+0x58]
  41599b:	test   r13d,r13d
  41599e:	je     416290 <__flatcc_fb_gen_c_json_parser@@Base+0xe00>
  4159a4:	movsxd rax,r13d
  4159a7:	mov    rdi,rax
  4159aa:	shl    rdi,0x5
  4159ae:	mov    QWORD PTR [rsp+0x10],rax
  4159b3:	call   405360 <malloc@plt>
  4159b8:	mov    r15,rax
  4159bb:	test   rax,rax
  4159be:	je     4163f0 <__flatcc_fb_gen_c_json_parser@@Base+0xf60>
  4159c4:	test   r13d,r13d
  4159c7:	jle    415a1a <__flatcc_fb_gen_c_json_parser@@Base+0x58a>
  4159c9:	dec    r13d
  4159cc:	inc    r13
  4159cf:	shl    r13,0x5
  4159d3:	mov    rdx,QWORD PTR [rsp+0x70]
  4159d8:	mov    r12,rax
  4159db:	add    r13,rax
  4159de:	xchg   ax,ax
  4159e0:	mov    rdi,QWORD PTR [rdx+0x8]
  4159e4:	mov    QWORD PTR [rsp+0x8],rdx
  4159e9:	mov    QWORD PTR [r12],rdi
  4159ed:	add    r12,0x20
  4159f1:	call   4052b0 <strlen@plt>
  4159f6:	mov    rdx,QWORD PTR [rsp+0x8]
  4159fb:	mov    DWORD PTR [r12-0x18],eax
  415a00:	mov    rax,QWORD PTR [rdx]
  415a03:	mov    DWORD PTR [r12-0x8],0x0
  415a0c:	mov    QWORD PTR [r12-0x10],rax
  415a11:	add    rdx,0x10
  415a15:	cmp    r13,r12
  415a18:	jne    4159e0 <__flatcc_fb_gen_c_json_parser@@Base+0x550>
  415a1a:	mov    rsi,QWORD PTR [rsp+0x10]
  415a1f:	lea    rcx,[rip+0xffffffffffffb95a]        # 411380 <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
  415a26:	mov    edx,0x20
  415a2b:	mov    rdi,r15
  415a2e:	call   405270 <qsort@plt>
  415a33:	mov    QWORD PTR [rsp+0x20],r15
  415a38:	mov    r13d,DWORD PTR [rsp+0x58]
  415a3d:	lea    rax,[rip+0xffffffffffffd65c]        # 4130a0 <__flatcc_fb_gen_c_verifier@@Base+0x21d0>
  415a44:	mov    QWORD PTR [rsp+0x28],rax
  415a49:	lea    rax,[rip+0xffffffffffffbbf0]        # 411640 <__flatcc_fb_gen_c_verifier@@Base+0x770>
  415a50:	mov    QWORD PTR [rsp+0x30],rax
  415a55:	mov    rax,QWORD PTR [rbx+0xd8]
  415a5c:	lea    rsi,[rip+0x2da25]        # 443488 <_IO_stdin_used@@Base+0x16488>
  415a63:	mov    rdx,QWORD PTR [rax+0x110]
  415a6a:	mov    rdi,rbx
  415a6d:	xor    eax,eax
  415a6f:	mov    QWORD PTR [rsp+0x38],0x0
  415a78:	mov    DWORD PTR [rsp+0x40],0x4
  415a80:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415a85:	add    DWORD PTR [rbx+0xf0],0x2
  415a8c:	xor    eax,eax
  415a8e:	lea    rsi,[rip+0x2c3db]        # 441e70 <_IO_stdin_used@@Base+0x14e70>
  415a95:	mov    rdi,rbx
  415a98:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415a9d:	mov    eax,DWORD PTR [rbx+0xf0]
  415aa3:	test   eax,eax
  415aa5:	je     4164bc <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
  415aab:	cmp    eax,0x1
  415aae:	je     4164b2 <__flatcc_fb_gen_c_json_parser@@Base+0x1022>
  415ab4:	sub    eax,0x2
  415ab7:	mov    DWORD PTR [rbx+0xf0],eax
  415abd:	lea    rsi,[rip+0x2ba04]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  415ac4:	mov    rdi,rbx
  415ac7:	xor    eax,eax
  415ac9:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415ace:	inc    DWORD PTR [rbx+0xf0]
  415ad4:	test   r13d,r13d
  415ad7:	je     415fc8 <__flatcc_fb_gen_c_json_parser@@Base+0xb38>
  415add:	lea    rsi,[rip+0x2babd]        # 4415a1 <_IO_stdin_used@@Base+0x145a1>
  415ae4:	mov    rdi,rbx
  415ae7:	xor    eax,eax
  415ae9:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415aee:	lea    rsi,[rip+0x2bac9]        # 4415be <_IO_stdin_used@@Base+0x145be>
  415af5:	mov    rdi,rbx
  415af8:	xor    eax,eax
  415afa:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415aff:	lea    rsi,[rip+0x2baca]        # 4415d0 <_IO_stdin_used@@Base+0x145d0>
  415b06:	mov    rdi,rbx
  415b09:	xor    eax,eax
  415b0b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b10:	lea    rsi,[rip+0x2f607]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  415b17:	mov    rdi,rbx
  415b1a:	xor    eax,eax
  415b1c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b21:	xor    eax,eax
  415b23:	lea    rsi,[rip+0x2beee]        # 441a18 <_IO_stdin_used@@Base+0x14a18>
  415b2a:	mov    rdi,rbx
  415b2d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b32:	lea    ecx,[r13-0x1]
  415b36:	lea    rsi,[rsp+0x20]
  415b3b:	xor    r8d,r8d
  415b3e:	xor    edx,edx
  415b40:	mov    rdi,rbx
  415b43:	call   411a60 <__flatcc_fb_gen_c_verifier@@Base+0xb90>
  415b48:	xor    eax,eax
  415b4a:	lea    rsi,[rip+0x2b9c9]        # 44151a <_IO_stdin_used@@Base+0x1451a>
  415b51:	mov    rdi,rbx
  415b54:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b59:	mov    eax,DWORD PTR [rbx+0xf0]
  415b5f:	test   eax,eax
  415b61:	je     416566 <__flatcc_fb_gen_c_json_parser@@Base+0x10d6>
  415b67:	dec    eax
  415b69:	mov    DWORD PTR [rbx+0xf0],eax
  415b6f:	lea    rsi,[rip+0x2b83b]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  415b76:	mov    rdi,rbx
  415b79:	xor    eax,eax
  415b7b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b80:	mov    rdi,rbx
  415b83:	lea    rsi,[rip+0x2f594]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  415b8a:	xor    eax,eax
  415b8c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415b91:	mov    rdi,QWORD PTR [rsp+0x20]
  415b96:	test   rdi,rdi
  415b99:	je     415ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x710>
  415b9b:	call   405230 <free@plt>
  415ba0:	mov    rdi,r14
  415ba3:	call   4113c0 <__flatcc_fb_gen_c_verifier@@Base+0x4f0>
  415ba8:	mov    rax,QWORD PTR [rbx+0xd8]
  415baf:	mov    rsi,QWORD PTR [rax+0x58]
  415bb3:	test   rsi,rsi
  415bb6:	je     4161ed <__flatcc_fb_gen_c_json_parser@@Base+0xd5d>
  415bbc:	movzx  eax,WORD PTR [rsi+0x10]
  415bc0:	test   ax,ax
  415bc3:	je     416020 <__flatcc_fb_gen_c_json_parser@@Base+0xb90>
  415bc9:	cmp    ax,0x1
  415bcd:	jne    4161ed <__flatcc_fb_gen_c_json_parser@@Base+0xd5d>
  415bd3:	xor    eax,eax
  415bd5:	mov    ecx,0x1d
  415bda:	mov    rdi,rbp
  415bdd:	rep stos QWORD PTR es:[rdi],rax
  415be0:	mov    rdx,rbp
  415be3:	mov    rdi,QWORD PTR [rsi+0x18]
  415be7:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  415bec:	mov    rax,QWORD PTR [rbx+0xd8]
  415bf3:	lea    rsi,[rip+0x2d5b6]        # 4431b0 <_IO_stdin_used@@Base+0x161b0>
  415bfa:	mov    rdx,QWORD PTR [rax+0x110]
  415c01:	mov    rdi,rbx
  415c04:	xor    eax,eax
  415c06:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c0b:	add    DWORD PTR [rbx+0xf0],0x2
  415c12:	xor    eax,eax
  415c14:	lea    rsi,[rip+0x2dab5]        # 4436d0 <_IO_stdin_used@@Base+0x166d0>
  415c1b:	mov    rdi,rbx
  415c1e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c23:	mov    eax,DWORD PTR [rbx+0xf0]
  415c29:	test   eax,eax
  415c2b:	je     41658f <__flatcc_fb_gen_c_json_parser@@Base+0x10ff>
  415c31:	cmp    eax,0x1
  415c34:	je     416585 <__flatcc_fb_gen_c_json_parser@@Base+0x10f5>
  415c3a:	sub    eax,0x2
  415c3d:	mov    DWORD PTR [rbx+0xf0],eax
  415c43:	lea    rsi,[rip+0x2b87e]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  415c4a:	xor    eax,eax
  415c4c:	mov    rdi,rbx
  415c4f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c54:	inc    DWORD PTR [rbx+0xf0]
  415c5a:	xor    eax,eax
  415c5c:	lea    rsi,[rip+0x2bbef]        # 441852 <_IO_stdin_used@@Base+0x14852>
  415c63:	mov    rdi,rbx
  415c66:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c6b:	xor    eax,eax
  415c6d:	lea    rsi,[rip+0x2bb6f]        # 4417e3 <_IO_stdin_used@@Base+0x147e3>
  415c74:	mov    rdi,rbx
  415c77:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c7c:	xor    eax,eax
  415c7e:	lea    rsi,[rip+0x2f499]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  415c85:	mov    rdi,rbx
  415c88:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c8d:	xor    eax,eax
  415c8f:	lea    rsi,[rip+0x2bbd7]        # 44186d <_IO_stdin_used@@Base+0x1486d>
  415c96:	mov    rdi,rbx
  415c99:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415c9e:	xor    eax,eax
  415ca0:	lea    rsi,[rip+0x2da59]        # 443700 <_IO_stdin_used@@Base+0x16700>
  415ca7:	mov    rdi,rbx
  415caa:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415caf:	mov    rax,QWORD PTR [rbx+0xd8]
  415cb6:	cmp    WORD PTR [rax+0x20],0x2
  415cbb:	je     4162c0 <__flatcc_fb_gen_c_json_parser@@Base+0xe30>
  415cc1:	lea    rsi,[rip+0x2dab8]        # 443780 <_IO_stdin_used@@Base+0x16780>
  415cc8:	mov    rdi,rbx
  415ccb:	xor    eax,eax
  415ccd:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415cd2:	mov    rdx,rbp
  415cd5:	lea    rsi,[rip+0x2db4c]        # 443828 <_IO_stdin_used@@Base+0x16828>
  415cdc:	mov    rdi,rbx
  415cdf:	xor    eax,eax
  415ce1:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415ce6:	lea    rsi,[rip+0x2bb2c]        # 441819 <_IO_stdin_used@@Base+0x14819>
  415ced:	mov    rdi,rbx
  415cf0:	xor    eax,eax
  415cf2:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415cf7:	inc    DWORD PTR [rbx+0xf0]
  415cfd:	xor    eax,eax
  415cff:	lea    rsi,[rip+0x2bb25]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  415d06:	mov    rdi,rbx
  415d09:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415d0e:	mov    eax,DWORD PTR [rbx+0xf0]
  415d14:	test   eax,eax
  415d16:	je     4165ae <__flatcc_fb_gen_c_json_parser@@Base+0x111e>
  415d1c:	dec    eax
  415d1e:	mov    DWORD PTR [rbx+0xf0],eax
  415d24:	lea    rsi,[rip+0x2b686]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  415d2b:	mov    rdi,rbx
  415d2e:	xor    eax,eax
  415d30:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415d35:	lea    rsi,[rip+0x2dab4]        # 4437f0 <_IO_stdin_used@@Base+0x167f0>
  415d3c:	mov    rdi,rbx
  415d3f:	xor    eax,eax
  415d41:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415d46:	lea    rsi,[rip+0x2baf1]        # 44183e <_IO_stdin_used@@Base+0x1483e>
  415d4d:	mov    rdi,rbx
  415d50:	xor    eax,eax
  415d52:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415d57:	xor    eax,eax
  415d59:	lea    rsi,[rip+0x2b81a]        # 44157a <_IO_stdin_used@@Base+0x1457a>
  415d60:	mov    rdi,rbx
  415d63:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415d68:	mov    eax,DWORD PTR [rbx+0xf0]
  415d6e:	test   eax,eax
  415d70:	jne    4161c3 <__flatcc_fb_gen_c_json_parser@@Base+0xd33>
  415d76:	lea    rcx,[rip+0x2db53]        # 4438d0 <_IO_stdin_used@@Base+0x168d0>
  415d7d:	mov    edx,0x681
  415d82:	lea    rsi,[rip+0x2bbaf]        # 441938 <_IO_stdin_used@@Base+0x14938>
  415d89:	lea    rdi,[rip+0x2b615]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  415d90:	call   4052e0 <__assert_fail@plt>
  415d95:	nop    DWORD PTR [rax]
  415d98:	mov    rdi,QWORD PTR [r12+0x18]
  415d9d:	mov    rdx,rbp
  415da0:	mov    rsi,r12
  415da3:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  415da8:	mov    rdx,rbp
  415dab:	lea    rsi,[rip+0x2d64e]        # 443400 <_IO_stdin_used@@Base+0x16400>
  415db2:	mov    rdi,rbx
  415db5:	xor    eax,eax
  415db7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415dbc:	jmp    41564e <__flatcc_fb_gen_c_json_parser@@Base+0x1be>
  415dc1:	nop    DWORD PTR [rax+0x0]
  415dc8:	mov    rsi,r12
  415dcb:	mov    rdi,rbx
  415dce:	call   414800 <__flatcc_fb_gen_c_verifier@@Base+0x3930>
  415dd3:	jmp    415810 <__flatcc_fb_gen_c_json_parser@@Base+0x380>
  415dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  415de0:	mov    rsi,r12
  415de3:	mov    rdi,rbx
  415de6:	call   414460 <__flatcc_fb_gen_c_verifier@@Base+0x3590>
  415deb:	cmp    WORD PTR [r12+0x10],0x1
  415df2:	jne    416519 <__flatcc_fb_gen_c_json_parser@@Base+0x1089>
  415df8:	mov    rax,r13
  415dfb:	mov    ecx,0x1d
  415e00:	mov    rdi,rbp
  415e03:	rep stos QWORD PTR es:[rdi],rax
  415e06:	mov    rdx,rbp
  415e09:	mov    rsi,r12
  415e0c:	mov    rdi,QWORD PTR [r12+0x18]
  415e11:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  415e16:	mov    rdx,rbp
  415e19:	lea    rsi,[rip+0x2d6d8]        # 4434f8 <_IO_stdin_used@@Base+0x164f8>
  415e20:	mov    rdi,rbx
  415e23:	xor    eax,eax
  415e25:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415e2a:	lea    rsi,[rip+0x2b697]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  415e31:	mov    rdi,rbx
  415e34:	xor    eax,eax
  415e36:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415e3b:	inc    DWORD PTR [rbx+0xf0]
  415e41:	lea    rsi,[rip+0x2b8ab]        # 4416f3 <_IO_stdin_used@@Base+0x146f3>
  415e48:	mov    rdi,rbx
  415e4b:	xor    eax,eax
  415e4d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415e52:	lea    rsi,[rip+0x2f2c5]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  415e59:	mov    rdi,rbx
  415e5c:	xor    eax,eax
  415e5e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415e63:	lea    rsi,[rip+0x2b643]        # 4414ad <_IO_stdin_used@@Base+0x144ad>
  415e6a:	mov    rdi,rbx
  415e6d:	xor    eax,eax
  415e6f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415e74:	movzx  ecx,WORD PTR [r12+0xb0]
  415e7d:	mov    rdx,QWORD PTR [r12+0xb8]
  415e85:	lea    rsi,[rip+0x2d6f4]        # 443580 <_IO_stdin_used@@Base+0x16580>
  415e8c:	mov    rdi,rbx
  415e8f:	xor    eax,eax
  415e91:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415e96:	mov    rdx,rbp
  415e99:	lea    rsi,[rip+0x2c478]        # 442318 <_IO_stdin_used@@Base+0x15318>
  415ea0:	mov    rdi,rbx
  415ea3:	xor    eax,eax
  415ea5:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415eaa:	lea    rsi,[rip+0x2d71f]        # 4435d0 <_IO_stdin_used@@Base+0x165d0>
  415eb1:	mov    rdi,rbx
  415eb4:	xor    eax,eax
  415eb6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415ebb:	lea    rsi,[rip+0x2b658]        # 44151a <_IO_stdin_used@@Base+0x1451a>
  415ec2:	mov    rdi,rbx
  415ec5:	xor    eax,eax
  415ec7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415ecc:	mov    eax,DWORD PTR [rbx+0xf0]
  415ed2:	mov    DWORD PTR [rbx+0xf0],0x0
  415edc:	mov    DWORD PTR [rbx+0xf8],eax
  415ee2:	lea    rsi,[rip+0x2b82a]        # 441713 <_IO_stdin_used@@Base+0x14713>
  415ee9:	mov    rdi,rbx
  415eec:	xor    eax,eax
  415eee:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415ef3:	mov    eax,DWORD PTR [rbx+0xf8]
  415ef9:	lea    rsi,[rip+0x2bea0]        # 441da0 <_IO_stdin_used@@Base+0x14da0>
  415f00:	mov    DWORD PTR [rbx+0xf0],eax
  415f06:	mov    rdi,rbx
  415f09:	xor    eax,eax
  415f0b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415f10:	mov    eax,DWORD PTR [rbx+0xf0]
  415f16:	test   eax,eax
  415f18:	je     4164fa <__flatcc_fb_gen_c_json_parser@@Base+0x106a>
  415f1e:	dec    eax
  415f20:	mov    DWORD PTR [rbx+0xf0],eax
  415f26:	lea    rsi,[rip+0x2b484]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  415f2d:	mov    rdi,rbx
  415f30:	xor    eax,eax
  415f32:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415f37:	lea    rsi,[rip+0x2f1e0]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  415f3e:	mov    rdi,rbx
  415f41:	xor    eax,eax
  415f43:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415f48:	mov    rdx,rbp
  415f4b:	lea    rsi,[rip+0x2cec6]        # 442e18 <_IO_stdin_used@@Base+0x15e18>
  415f52:	mov    rdi,rbx
  415f55:	xor    eax,eax
  415f57:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415f5c:	lea    rsi,[rip+0x2b565]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  415f63:	mov    rdi,rbx
  415f66:	xor    eax,eax
  415f68:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415f6d:	inc    DWORD PTR [rbx+0xf0]
  415f73:	xor    eax,eax
  415f75:	mov    rdx,rbp
  415f78:	lea    rsi,[rip+0x2d6a9]        # 443628 <_IO_stdin_used@@Base+0x16628>
  415f7f:	mov    rdi,rbx
  415f82:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415f87:	mov    eax,DWORD PTR [rbx+0xf0]
  415f8d:	test   eax,eax
  415f8f:	je     4164db <__flatcc_fb_gen_c_json_parser@@Base+0x104b>
  415f95:	dec    eax
  415f97:	mov    DWORD PTR [rbx+0xf0],eax
  415f9d:	mov    rdi,rbx
  415fa0:	xor    eax,eax
  415fa2:	lea    rsi,[rip+0x2b408]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  415fa9:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415fae:	lea    rsi,[rip+0x2f169]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  415fb5:	mov    rdi,rbx
  415fb8:	xor    eax,eax
  415fba:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415fbf:	jmp    415810 <__flatcc_fb_gen_c_json_parser@@Base+0x380>
  415fc4:	nop    DWORD PTR [rax+0x0]
  415fc8:	lea    rsi,[rip+0x2d6c1]        # 443690 <_IO_stdin_used@@Base+0x16690>
  415fcf:	mov    rdi,rbx
  415fd2:	xor    eax,eax
  415fd4:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415fd9:	xor    eax,eax
  415fdb:	lea    rsi,[rip+0x2b5a2]        # 441584 <_IO_stdin_used@@Base+0x14584>
  415fe2:	mov    rdi,rbx
  415fe5:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  415fea:	mov    eax,DWORD PTR [rbx+0xf0]
  415ff0:	test   eax,eax
  415ff2:	jne    415b67 <__flatcc_fb_gen_c_json_parser@@Base+0x6d7>
  415ff8:	lea    rcx,[rip+0x2d911]        # 443910 <_IO_stdin_used@@Base+0x16910>
  415fff:	mov    edx,0x4ba
  416004:	lea    rsi,[rip+0x2b92d]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41600b:	lea    rdi,[rip+0x2b393]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  416012:	call   4052e0 <__assert_fail@plt>
  416017:	nop    WORD PTR [rax+rax*1+0x0]
  416020:	xor    eax,eax
  416022:	mov    ecx,0x1d
  416027:	mov    rdi,rbp
  41602a:	rep stos QWORD PTR es:[rdi],rax
  41602d:	mov    rdx,rbp
  416030:	mov    rdi,QWORD PTR [rsi+0x18]
  416034:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  416039:	mov    rax,QWORD PTR [rbx+0xd8]
  416040:	lea    rsi,[rip+0x2d169]        # 4431b0 <_IO_stdin_used@@Base+0x161b0>
  416047:	mov    rdx,QWORD PTR [rax+0x110]
  41604e:	mov    rdi,rbx
  416051:	xor    eax,eax
  416053:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416058:	add    DWORD PTR [rbx+0xf0],0x2
  41605f:	xor    eax,eax
  416061:	lea    rsi,[rip+0x2d668]        # 4436d0 <_IO_stdin_used@@Base+0x166d0>
  416068:	mov    rdi,rbx
  41606b:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416070:	mov    eax,DWORD PTR [rbx+0xf0]
  416076:	test   eax,eax
  416078:	je     416547 <__flatcc_fb_gen_c_json_parser@@Base+0x10b7>
  41607e:	cmp    eax,0x1
  416081:	je     41653d <__flatcc_fb_gen_c_json_parser@@Base+0x10ad>
  416087:	sub    eax,0x2
  41608a:	mov    DWORD PTR [rbx+0xf0],eax
  416090:	lea    rsi,[rip+0x2b431]        # 4414c8 <_IO_stdin_used@@Base+0x144c8>
  416097:	xor    eax,eax
  416099:	mov    rdi,rbx
  41609c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4160a1:	inc    DWORD PTR [rbx+0xf0]
  4160a7:	xor    eax,eax
  4160a9:	lea    rsi,[rip+0x2b716]        # 4417c6 <_IO_stdin_used@@Base+0x147c6>
  4160b0:	mov    rdi,rbx
  4160b3:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4160b8:	xor    eax,eax
  4160ba:	lea    rsi,[rip+0x2b722]        # 4417e3 <_IO_stdin_used@@Base+0x147e3>
  4160c1:	mov    rdi,rbx
  4160c4:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4160c9:	xor    eax,eax
  4160cb:	lea    rsi,[rip+0x2f04c]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4160d2:	mov    rdi,rbx
  4160d5:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4160da:	xor    eax,eax
  4160dc:	lea    rsi,[rip+0x2b71b]        # 4417fe <_IO_stdin_used@@Base+0x147fe>
  4160e3:	mov    rdi,rbx
  4160e6:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4160eb:	xor    eax,eax
  4160ed:	lea    rsi,[rip+0x2d60c]        # 443700 <_IO_stdin_used@@Base+0x16700>
  4160f4:	mov    rdi,rbx
  4160f7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4160fc:	mov    rax,QWORD PTR [rbx+0xd8]
  416103:	cmp    WORD PTR [rax+0x20],0x2
  416108:	je     4162a0 <__flatcc_fb_gen_c_json_parser@@Base+0xe10>
  41610e:	lea    rsi,[rip+0x2d66b]        # 443780 <_IO_stdin_used@@Base+0x16780>
  416115:	mov    rdi,rbx
  416118:	xor    eax,eax
  41611a:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41611f:	mov    rdx,rbp
  416122:	lea    rsi,[rip+0x2d68f]        # 4437b8 <_IO_stdin_used@@Base+0x167b8>
  416129:	mov    rdi,rbx
  41612c:	xor    eax,eax
  41612e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416133:	lea    rsi,[rip+0x2b6df]        # 441819 <_IO_stdin_used@@Base+0x14819>
  41613a:	mov    rdi,rbx
  41613d:	xor    eax,eax
  41613f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416144:	inc    DWORD PTR [rbx+0xf0]
  41614a:	xor    eax,eax
  41614c:	lea    rsi,[rip+0x2b6d8]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  416153:	mov    rdi,rbx
  416156:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41615b:	mov    eax,DWORD PTR [rbx+0xf0]
  416161:	test   eax,eax
  416163:	je     4165ec <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
  416169:	dec    eax
  41616b:	mov    DWORD PTR [rbx+0xf0],eax
  416171:	lea    rsi,[rip+0x2b239]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  416178:	mov    rdi,rbx
  41617b:	xor    eax,eax
  41617d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416182:	lea    rsi,[rip+0x2d667]        # 4437f0 <_IO_stdin_used@@Base+0x167f0>
  416189:	mov    rdi,rbx
  41618c:	xor    eax,eax
  41618e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416193:	lea    rsi,[rip+0x2b6a4]        # 44183e <_IO_stdin_used@@Base+0x1483e>
  41619a:	mov    rdi,rbx
  41619d:	xor    eax,eax
  41619f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4161a4:	xor    eax,eax
  4161a6:	lea    rsi,[rip+0x2b3cd]        # 44157a <_IO_stdin_used@@Base+0x1457a>
  4161ad:	mov    rdi,rbx
  4161b0:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4161b5:	mov    eax,DWORD PTR [rbx+0xf0]
  4161bb:	test   eax,eax
  4161bd:	je     4165cd <__flatcc_fb_gen_c_json_parser@@Base+0x113d>
  4161c3:	dec    eax
  4161c5:	mov    DWORD PTR [rbx+0xf0],eax
  4161cb:	lea    rsi,[rip+0x2b1df]        # 4413b1 <_IO_stdin_used@@Base+0x143b1>
  4161d2:	mov    rdi,rbx
  4161d5:	xor    eax,eax
  4161d7:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4161dc:	lea    rsi,[rip+0x2ef3b]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4161e3:	mov    rdi,rbx
  4161e6:	xor    eax,eax
  4161e8:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4161ed:	mov    rax,QWORD PTR [rbx+0xe0]
  4161f4:	mov    eax,DWORD PTR [rax+0xac]
  4161fa:	test   eax,eax
  4161fc:	jne    416270 <__flatcc_fb_gen_c_json_parser@@Base+0xde0>
  4161fe:	mov    rax,QWORD PTR [rbx+0xd8]
  416205:	lea    rsi,[rip+0x2b67a]        # 441886 <_IO_stdin_used@@Base+0x14886>
  41620c:	mov    rdx,QWORD PTR [rax+0x118]
  416213:	mov    rdi,rbx
  416216:	xor    eax,eax
  416218:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  41621d:	xor    eax,eax
  41621f:	mov    rcx,QWORD PTR [rsp+0x188]
  416227:	xor    rcx,QWORD PTR fs:0x28
  416230:	jne    416538 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
  416236:	add    rsp,0x198
  41623d:	pop    rbx
  41623e:	pop    rbp
  41623f:	pop    r12
  416241:	pop    r13
  416243:	pop    r14
  416245:	pop    r15
  416247:	ret    
  416248:	nop    DWORD PTR [rax+rax*1+0x0]
  416250:	mov    rdi,QWORD PTR [rbx+0xd0]
  416257:	lea    rdx,[rip+0x194e2]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  41625e:	mov    esi,0x1
  416263:	xor    eax,eax
  416265:	call   4053e0 <__fprintf_chk@plt>
  41626a:	jmp    415565 <__flatcc_fb_gen_c_json_parser@@Base+0xd5>
  41626f:	nop
  416270:	mov    rdi,QWORD PTR [rbx+0xd0]
  416277:	lea    rdx,[rip+0x1f372]        # 4355f0 <_IO_stdin_used@@Base+0x85f0>
  41627e:	mov    esi,0x1
  416283:	xor    eax,eax
  416285:	call   4053e0 <__fprintf_chk@plt>
  41628a:	jmp    4161fe <__flatcc_fb_gen_c_json_parser@@Base+0xd6e>
  41628f:	nop
  416290:	mov    QWORD PTR [rsp+0x20],0x0
  416299:	jmp    415a3d <__flatcc_fb_gen_c_json_parser@@Base+0x5ad>
  41629e:	xchg   ax,ax
  4162a0:	mov    rcx,QWORD PTR [rax+0x10]
  4162a4:	mov    edx,DWORD PTR [rax+0x18]
  4162a7:	lea    rsi,[rip+0x2d492]        # 443740 <_IO_stdin_used@@Base+0x16740>
  4162ae:	mov    rdi,rbx
  4162b1:	xor    eax,eax
  4162b3:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4162b8:	jmp    41611f <__flatcc_fb_gen_c_json_parser@@Base+0xc8f>
  4162bd:	nop    DWORD PTR [rax]
  4162c0:	mov    rcx,QWORD PTR [rax+0x10]
  4162c4:	mov    edx,DWORD PTR [rax+0x18]
  4162c7:	lea    rsi,[rip+0x2d472]        # 443740 <_IO_stdin_used@@Base+0x16740>
  4162ce:	mov    rdi,rbx
  4162d1:	xor    eax,eax
  4162d3:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4162d8:	jmp    415cd2 <__flatcc_fb_gen_c_json_parser@@Base+0x842>
  4162dd:	nop    DWORD PTR [rax]
  4162e0:	lea    rsi,[rip+0x2b4d9]        # 4417c0 <_IO_stdin_used@@Base+0x147c0>
  4162e7:	mov    rdi,rbx
  4162ea:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4162ef:	lea    rsi,[rip+0x2cd32]        # 443028 <_IO_stdin_used@@Base+0x16028>
  4162f6:	mov    rdi,rbx
  4162f9:	xor    eax,eax
  4162fb:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416300:	lea    rsi,[rip+0x2b4bc]        # 4417c3 <_IO_stdin_used@@Base+0x147c3>
  416307:	mov    rdi,rbx
  41630a:	xor    eax,eax
  41630c:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416311:	lea    rsi,[rip+0x2cd68]        # 443080 <_IO_stdin_used@@Base+0x16080>
  416318:	mov    rdi,rbx
  41631b:	xor    eax,eax
  41631d:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416322:	lea    rsi,[rip+0x2cd9f]        # 4430c8 <_IO_stdin_used@@Base+0x160c8>
  416329:	mov    rdi,rbx
  41632c:	xor    eax,eax
  41632e:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416333:	lea    rsi,[rip+0x2cdc6]        # 443100 <_IO_stdin_used@@Base+0x16100>
  41633a:	mov    rdi,rbx
  41633d:	xor    eax,eax
  41633f:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416344:	lea    rsi,[rip+0x2cddd]        # 443128 <_IO_stdin_used@@Base+0x16128>
  41634b:	mov    rdi,rbx
  41634e:	xor    eax,eax
  416350:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416355:	lea    rsi,[rip+0x2ce14]        # 443170 <_IO_stdin_used@@Base+0x16170>
  41635c:	mov    rdi,rbx
  41635f:	xor    eax,eax
  416361:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416366:	lea    rsi,[rip+0x2b058]        # 4413c5 <_IO_stdin_used@@Base+0x143c5>
  41636d:	mov    rdi,rbx
  416370:	xor    eax,eax
  416372:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416377:	mov    rax,QWORD PTR [rbx+0xd8]
  41637e:	lea    rsi,[rip+0x2ce2b]        # 4431b0 <_IO_stdin_used@@Base+0x161b0>
  416385:	mov    rdx,QWORD PTR [rax+0x110]
  41638c:	mov    rdi,rbx
  41638f:	xor    eax,eax
  416391:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  416396:	add    DWORD PTR [rbx+0xf0],0x2
  41639d:	xor    eax,eax
  41639f:	lea    rsi,[rip+0x2ce5a]        # 443200 <_IO_stdin_used@@Base+0x16200>
  4163a6:	mov    rdi,rbx
  4163a9:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4163ae:	mov    eax,DWORD PTR [rbx+0xf0]
  4163b4:	test   eax,eax
  4163b6:	je     416615 <__flatcc_fb_gen_c_json_parser@@Base+0x1185>
  4163bc:	cmp    eax,0x1
  4163bf:	je     41660b <__flatcc_fb_gen_c_json_parser@@Base+0x117b>
  4163c5:	sub    eax,0x2
  4163c8:	mov    DWORD PTR [rbx+0xf0],eax
  4163ce:	lea    rsi,[rip+0x2ed49]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  4163d5:	mov    rdi,rbx
  4163d8:	xor    eax,eax
  4163da:	call   411430 <__flatcc_fb_gen_c_verifier@@Base+0x560>
  4163df:	mov    rdx,QWORD PTR [rbx+0xd8]
  4163e6:	jmp    4155a6 <__flatcc_fb_gen_c_json_parser@@Base+0x116>
  4163eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4163f0:	mov    QWORD PTR [rsp+0x20],0x0
  4163f9:	test   r13d,r13d
  4163fc:	jle    415a3d <__flatcc_fb_gen_c_json_parser@@Base+0x5ad>
  416402:	mov    rdi,r14
  416405:	call   4113c0 <__flatcc_fb_gen_c_verifier@@Base+0x4f0>
  41640a:	mov    rax,QWORD PTR [rip+0x3abd7]        # 450fe8 <stderr@GLIBC_2.2.5>
  416411:	lea    rcx,[rip+0x2b520]        # 441938 <_IO_stdin_used@@Base+0x14938>
  416418:	mov    rdi,QWORD PTR [rax]
  41641b:	lea    rdx,[rip+0x1f631]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  416422:	mov    esi,0x1
  416427:	lea    r9,[rip+0x2ba02]        # 441e30 <_IO_stdin_used@@Base+0x14e30>
  41642e:	mov    r8d,0x4aa
  416434:	xor    eax,eax
  416436:	call   4053e0 <__fprintf_chk@plt>
  41643b:	lea    rcx,[rip+0x2d4ce]        # 443910 <_IO_stdin_used@@Base+0x16910>
  416442:	mov    edx,0x4aa
  416447:	lea    rsi,[rip+0x2b4ea]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41644e:	lea    rdi,[rip+0x206c4]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  416455:	call   4052e0 <__assert_fail@plt>
  41645a:	nop    WORD PTR [rax+rax*1+0x0]
  416460:	mov    DWORD PTR [rbx+0xf0],0x0
  41646a:	lea    rcx,[rip+0x2d65f]        # 443ad0 <_IO_stdin_used@@Base+0x16ad0>
  416471:	mov    edx,0x6c3
  416476:	lea    rsi,[rip+0x2b4bb]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41647d:	lea    rdi,[rip+0x2af21]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  416484:	call   4052e0 <__assert_fail@plt>
  416489:	mov    DWORD PTR [rbx+0xf0],0x0
  416493:	lea    rcx,[rip+0x2d636]        # 443ad0 <_IO_stdin_used@@Base+0x16ad0>
  41649a:	mov    edx,0x6db
  41649f:	lea    rsi,[rip+0x2b492]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4164a6:	lea    rdi,[rip+0x2aef8]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4164ad:	call   4052e0 <__assert_fail@plt>
  4164b2:	mov    DWORD PTR [rbx+0xf0],0x0
  4164bc:	lea    rcx,[rip+0x2d44d]        # 443910 <_IO_stdin_used@@Base+0x16910>
  4164c3:	mov    edx,0x4b5
  4164c8:	lea    rsi,[rip+0x2b469]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4164cf:	lea    rdi,[rip+0x2aecf]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4164d6:	call   4052e0 <__assert_fail@plt>
  4164db:	lea    rcx,[rip+0x2d4ae]        # 443990 <_IO_stdin_used@@Base+0x16990>
  4164e2:	mov    edx,0x560
  4164e7:	lea    rsi,[rip+0x2b44a]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4164ee:	lea    rdi,[rip+0x2aeb0]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4164f5:	call   4052e0 <__assert_fail@plt>
  4164fa:	lea    rcx,[rip+0x2d48f]        # 443990 <_IO_stdin_used@@Base+0x16990>
  416501:	mov    edx,0x55a
  416506:	lea    rsi,[rip+0x2b42b]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41650d:	lea    rdi,[rip+0x2ae91]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  416514:	call   4052e0 <__assert_fail@plt>
  416519:	lea    rcx,[rip+0x2d470]        # 443990 <_IO_stdin_used@@Base+0x16990>
  416520:	mov    edx,0x549
  416525:	lea    rsi,[rip+0x2b40c]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41652c:	lea    rdi,[rip+0x18bad]        # 42f0e0 <_IO_stdin_used@@Base+0x20e0>
  416533:	call   4052e0 <__assert_fail@plt>
  416538:	call   4052c0 <__stack_chk_fail@plt>
  41653d:	mov    DWORD PTR [rbx+0xf0],0x0
  416547:	lea    rcx,[rip+0x2d3a2]        # 4438f0 <_IO_stdin_used@@Base+0x168f0>
  41654e:	mov    edx,0x64a
  416553:	lea    rsi,[rip+0x2b3de]        # 441938 <_IO_stdin_used@@Base+0x14938>
  41655a:	lea    rdi,[rip+0x2ae44]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  416561:	call   4052e0 <__assert_fail@plt>
  416566:	lea    rcx,[rip+0x2d3a3]        # 443910 <_IO_stdin_used@@Base+0x16910>
  41656d:	mov    edx,0x4c3
  416572:	lea    rsi,[rip+0x2b3bf]        # 441938 <_IO_stdin_used@@Base+0x14938>
  416579:	lea    rdi,[rip+0x2ae25]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  416580:	call   4052e0 <__assert_fail@plt>
  416585:	mov    DWORD PTR [rbx+0xf0],0x0
  41658f:	lea    rcx,[rip+0x2d33a]        # 4438d0 <_IO_stdin_used@@Base+0x168d0>
  416596:	mov    edx,0x66d
  41659b:	lea    rsi,[rip+0x2b396]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4165a2:	lea    rdi,[rip+0x2adfc]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4165a9:	call   4052e0 <__assert_fail@plt>
  4165ae:	lea    rcx,[rip+0x2d31b]        # 4438d0 <_IO_stdin_used@@Base+0x168d0>
  4165b5:	mov    edx,0x67d
  4165ba:	lea    rsi,[rip+0x2b377]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4165c1:	lea    rdi,[rip+0x2addd]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4165c8:	call   4052e0 <__assert_fail@plt>
  4165cd:	lea    rcx,[rip+0x2d31c]        # 4438f0 <_IO_stdin_used@@Base+0x168f0>
  4165d4:	mov    edx,0x65e
  4165d9:	lea    rsi,[rip+0x2b358]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4165e0:	lea    rdi,[rip+0x2adbe]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  4165e7:	call   4052e0 <__assert_fail@plt>
  4165ec:	lea    rcx,[rip+0x2d2fd]        # 4438f0 <_IO_stdin_used@@Base+0x168f0>
  4165f3:	mov    edx,0x65a
  4165f8:	lea    rsi,[rip+0x2b339]        # 441938 <_IO_stdin_used@@Base+0x14938>
  4165ff:	lea    rdi,[rip+0x2ad9f]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  416606:	call   4052e0 <__assert_fail@plt>
  41660b:	mov    DWORD PTR [rbx+0xf0],0x0
  416615:	lea    rcx,[rip+0x2d4b4]        # 443ad0 <_IO_stdin_used@@Base+0x16ad0>
  41661c:	mov    edx,0x6b4
  416621:	lea    rsi,[rip+0x2b310]        # 441938 <_IO_stdin_used@@Base+0x14938>
  416628:	lea    rdi,[rip+0x2ad76]        # 4413a5 <_IO_stdin_used@@Base+0x143a5>
  41662f:	call   4052e0 <__assert_fail@plt>
  416634:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41663e:	xchg   ax,ax
  416640:	push   rax
  416641:	pop    rax
  416642:	lea    rcx,[rip+0x17c5f]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  416649:	lea    rdx,[rip+0x1f403]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  416650:	mov    esi,0x1
  416655:	lea    r9,[rip+0x17c14]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  41665c:	mov    r8d,0x60
  416662:	sub    rsp,0x8
  416666:	mov    rax,QWORD PTR [rip+0x3a97b]        # 450fe8 <stderr@GLIBC_2.2.5>
  41666d:	mov    rdi,QWORD PTR [rax]
  416670:	xor    eax,eax
  416672:	call   4053e0 <__fprintf_chk@plt>
  416677:	lea    rcx,[rip+0x2ecd2]        # 445350 <_IO_stdin_used@@Base+0x18350>
  41667e:	mov    edx,0x60
  416683:	lea    rsi,[rip+0x17c1e]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  41668a:	lea    rdi,[rip+0x20488]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  416691:	call   4052e0 <__assert_fail@plt>
  416696:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4166a0:	push   r13
  4166a2:	mov    ecx,0x1d
  4166a7:	mov    r13,rsi
  4166aa:	push   r12
  4166ac:	push   rbp
  4166ad:	mov    rbp,rdi
  4166b0:	push   rbx
  4166b1:	sub    rsp,0x1e8
  4166b8:	mov    rax,QWORD PTR fs:0x28
  4166c1:	mov    QWORD PTR [rsp+0x1d8],rax
  4166c9:	xor    eax,eax
  4166cb:	mov    rbx,rsp
  4166ce:	mov    rdi,rbx
  4166d1:	lea    r12,[rsp+0xf0]
  4166d9:	mov    rdx,rbx
  4166dc:	rep stos QWORD PTR es:[rdi],rax
  4166df:	mov    ecx,0x1d
  4166e4:	mov    rdi,r12
  4166e7:	rep stos QWORD PTR es:[rdi],rax
  4166ea:	mov    rdi,QWORD PTR [rsi+0x18]
  4166ee:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4166f3:	mov    rdi,QWORD PTR [rbp+0x0]
  4166f7:	mov    rcx,rbx
  4166fa:	lea    rdx,[rip+0x2d3ff]        # 443b00 <_IO_stdin_used@@Base+0x16b00>
  416701:	mov    esi,0x1
  416706:	xor    eax,eax
  416708:	call   4053e0 <__fprintf_chk@plt>
  41670d:	mov    rbx,QWORD PTR [r13+0x28]
  416711:	test   rbx,rbx
  416714:	je     41680a <__flatcc_fb_gen_c_json_parser@@Base+0x137a>
  41671a:	lea    r13,[rip+0x2d5cf]        # 443cf0 <_IO_stdin_used@@Base+0x16cf0>
  416721:	jmp    41677c <__flatcc_fb_gen_c_json_parser@@Base+0x12ec>
  416723:	nop    DWORD PTR [rax+rax*1+0x0]
  416728:	mov    rsi,QWORD PTR [rbx+0x18]
  41672c:	mov    rdx,r12
  41672f:	mov    rdi,QWORD PTR [rsi+0x18]
  416733:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  416738:	mov    rax,QWORD PTR [rbx+0x18]
  41673c:	movzx  eax,WORD PTR [rax+0x10]
  416740:	test   ax,ax
  416743:	jne    416860 <__flatcc_fb_gen_c_json_parser@@Base+0x13d0>
  416749:	mov    ecx,DWORD PTR [rbx+0x48]
  41674c:	mov    rdi,QWORD PTR [rbp+0x0]
  416750:	mov    r8,r12
  416753:	lea    rdx,[rip+0x2d42e]        # 443b88 <_IO_stdin_used@@Base+0x16b88>
  41675a:	mov    esi,0x1
  41675f:	xor    eax,eax
  416761:	call   4053e0 <__fprintf_chk@plt>
  416766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416770:	mov    rbx,QWORD PTR [rbx]
  416773:	test   rbx,rbx
  416776:	je     41680a <__flatcc_fb_gen_c_json_parser@@Base+0x137a>
  41677c:	movzx  eax,WORD PTR [rbx+0x28]
  416780:	cmp    ax,0xa
  416784:	je     4167e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1358>
  416786:	cmp    ax,0xe
  41678a:	je     416728 <__flatcc_fb_gen_c_json_parser@@Base+0x1298>
  41678c:	test   ax,ax
  41678f:	je     416770 <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
  416791:	mov    rax,QWORD PTR [rip+0x3a850]        # 450fe8 <stderr@GLIBC_2.2.5>
  416798:	lea    rcx,[rip+0x2d4e1]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  41679f:	mov    rdi,QWORD PTR [rax]
  4167a2:	lea    rdx,[rip+0x1f2aa]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  4167a9:	mov    esi,0x1
  4167ae:	lea    r9,[rip+0x2d4a3]        # 443c58 <_IO_stdin_used@@Base+0x16c58>
  4167b5:	mov    r8d,0xfb
  4167bb:	xor    eax,eax
  4167bd:	call   4053e0 <__fprintf_chk@plt>
  4167c2:	lea    rcx,[rip+0x2eb67]        # 445330 <_IO_stdin_used@@Base+0x18330>
  4167c9:	mov    edx,0xfb
  4167ce:	lea    rsi,[rip+0x2d4ab]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  4167d5:	lea    rdi,[rip+0x2033d]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4167dc:	call   4052e0 <__assert_fail@plt>
  4167e1:	nop    DWORD PTR [rax+0x0]
  4167e8:	mov    ecx,DWORD PTR [rbx+0x48]
  4167eb:	mov    rdi,QWORD PTR [rbp+0x0]
  4167ef:	mov    rdx,r13
  4167f2:	mov    esi,0x1
  4167f7:	xor    eax,eax
  4167f9:	call   4053e0 <__fprintf_chk@plt>
  4167fe:	mov    rbx,QWORD PTR [rbx]
  416801:	test   rbx,rbx
  416804:	jne    41677c <__flatcc_fb_gen_c_json_parser@@Base+0x12ec>
  41680a:	mov    rdi,QWORD PTR [rbp+0x0]
  41680e:	lea    rdx,[rip+0x2e8e3]        # 4450f8 <_IO_stdin_used@@Base+0x180f8>
  416815:	mov    esi,0x1
  41681a:	xor    eax,eax
  41681c:	call   4053e0 <__fprintf_chk@plt>
  416821:	mov    rdi,QWORD PTR [rbp+0x0]
  416825:	xor    eax,eax
  416827:	lea    rdx,[rip+0x2e8e7]        # 445115 <_IO_stdin_used@@Base+0x18115>
  41682e:	mov    esi,0x1
  416833:	call   4053e0 <__fprintf_chk@plt>
  416838:	xor    eax,eax
  41683a:	mov    rcx,QWORD PTR [rsp+0x1d8]
  416842:	xor    rcx,QWORD PTR fs:0x28
  41684b:	jne    4168d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1448>
  416851:	add    rsp,0x1e8
  416858:	pop    rbx
  416859:	pop    rbp
  41685a:	pop    r12
  41685c:	pop    r13
  41685e:	ret    
  41685f:	nop
  416860:	cmp    ax,0x1
  416864:	jne    416888 <__flatcc_fb_gen_c_json_parser@@Base+0x13f8>
  416866:	mov    ecx,DWORD PTR [rbx+0x48]
  416869:	mov    rdi,QWORD PTR [rbp+0x0]
  41686d:	mov    r8,r12
  416870:	lea    rdx,[rip+0x2d379]        # 443bf0 <_IO_stdin_used@@Base+0x16bf0>
  416877:	mov    esi,0x1
  41687c:	xor    eax,eax
  41687e:	call   4053e0 <__fprintf_chk@plt>
  416883:	jmp    416770 <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
  416888:	mov    rax,QWORD PTR [rip+0x3a759]        # 450fe8 <stderr@GLIBC_2.2.5>
  41688f:	lea    rcx,[rip+0x2d3ea]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  416896:	mov    rdi,QWORD PTR [rax]
  416899:	lea    rdx,[rip+0x1f1b3]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  4168a0:	mov    esi,0x1
  4168a5:	lea    r9,[rip+0x2d3ac]        # 443c58 <_IO_stdin_used@@Base+0x16c58>
  4168ac:	mov    r8d,0xf0
  4168b2:	xor    eax,eax
  4168b4:	call   4053e0 <__fprintf_chk@plt>
  4168b9:	lea    rcx,[rip+0x2ea70]        # 445330 <_IO_stdin_used@@Base+0x18330>
  4168c0:	mov    edx,0xf0
  4168c5:	lea    rsi,[rip+0x2d3b4]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  4168cc:	lea    rdi,[rip+0x20246]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4168d3:	call   4052e0 <__assert_fail@plt>
  4168d8:	call   4052c0 <__stack_chk_fail@plt>
  4168dd:	nop    DWORD PTR [rax]
  4168e0:	push   r15
  4168e2:	mov    ecx,0x1d
  4168e7:	push   r14
  4168e9:	push   r13
  4168eb:	mov    r13,rsi
  4168ee:	push   r12
  4168f0:	push   rbp
  4168f1:	push   rbx
  4168f2:	mov    rbx,rdi
  4168f5:	sub    rsp,0x1e8
  4168fc:	mov    rax,QWORD PTR fs:0x28
  416905:	mov    QWORD PTR [rsp+0x1d8],rax
  41690d:	xor    eax,eax
  41690f:	mov    rbp,rsp
  416912:	mov    rdi,rbp
  416915:	lea    r12,[rsp+0xf0]
  41691d:	mov    rdx,rbp
  416920:	rep stos QWORD PTR es:[rdi],rax
  416923:	mov    ecx,0x1d
  416928:	mov    rdi,r12
  41692b:	rep stos QWORD PTR es:[rdi],rax
  41692e:	mov    rdi,QWORD PTR [rsi+0x18]
  416932:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  416937:	mov    rdi,QWORD PTR [rbx]
  41693a:	mov    rcx,rbp
  41693d:	lea    rdx,[rip+0x2d3fc]        # 443d40 <_IO_stdin_used@@Base+0x16d40>
  416944:	mov    esi,0x1
  416949:	xor    eax,eax
  41694b:	call   4053e0 <__fprintf_chk@plt>
  416950:	mov    r15,QWORD PTR [r13+0x28]
  416954:	test   r15,r15
  416957:	je     416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x15a0>
  41695d:	xor    r14d,r14d
  416960:	lea    r13,[rip+0x2e859]        # 4451c0 <_IO_stdin_used@@Base+0x181c0>
  416967:	nop    WORD PTR [rax+rax*1+0x0]
  416970:	test   BYTE PTR [r15+0x70],0x4
  416975:	jne    416a21 <__flatcc_fb_gen_c_json_parser@@Base+0x1591>
  41697b:	movzx  eax,WORD PTR [r15+0x28]
  416980:	cmp    ax,0x8
  416984:	je     416a90 <__flatcc_fb_gen_c_json_parser@@Base+0x1600>
  41698a:	cmp    ax,0xe
  41698e:	jne    416a21 <__flatcc_fb_gen_c_json_parser@@Base+0x1591>
  416994:	mov    rsi,QWORD PTR [r15+0x18]
  416998:	mov    rdx,r12
  41699b:	mov    rdi,QWORD PTR [rsi+0x18]
  41699f:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4169a4:	mov    rdx,QWORD PTR [r15+0x18]
  4169a8:	movzx  eax,WORD PTR [rdx+0x10]
  4169ac:	cmp    ax,0x1
  4169b0:	je     416ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x1620>
  4169b6:	cmp    ax,0x3
  4169ba:	jne    416a21 <__flatcc_fb_gen_c_json_parser@@Base+0x1591>
  4169bc:	cmp    DWORD PTR [rdx+0x48],0xb
  4169c0:	ja     416c23 <__flatcc_fb_gen_c_json_parser@@Base+0x1793>
  4169c6:	mov    eax,DWORD PTR [rdx+0x48]
  4169c9:	lea    rdx,[rip+0x2e7c0]        # 445190 <_IO_stdin_used@@Base+0x18190>
  4169d0:	movsxd rax,DWORD PTR [rdx+rax*4]
  4169d4:	add    rax,rdx
  4169d7:	notrack jmp rax
  4169da:	nop    WORD PTR [rax+rax*1+0x0]
  4169e0:	lea    rcx,[rip+0x1f0a0]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  4169e7:	nop    WORD PTR [rax+rax*1+0x0]
  4169f0:	mov    rdx,QWORD PTR [r15+0x8]
  4169f4:	sub    rsp,0x8
  4169f8:	mov    rax,QWORD PTR [rdx+0x8]
  4169fc:	mov    r9,QWORD PTR [r15+0x78]
  416a00:	push   rax
  416a01:	mov    r8d,r14d
  416a04:	push   QWORD PTR [rdx]
  416a06:	lea    rdx,[rip+0x2d383]        # 443d90 <_IO_stdin_used@@Base+0x16d90>
  416a0d:	push   rax
  416a0e:	mov    rdi,QWORD PTR [rbx]
  416a11:	mov    esi,0x1
  416a16:	xor    eax,eax
  416a18:	call   4053e0 <__fprintf_chk@plt>
  416a1d:	add    rsp,0x20
  416a21:	mov    r15,QWORD PTR [r15]
  416a24:	inc    r14d
  416a27:	test   r15,r15
  416a2a:	jne    416970 <__flatcc_fb_gen_c_json_parser@@Base+0x14e0>
  416a30:	mov    rdi,QWORD PTR [rbx]
  416a33:	lea    rdx,[rip+0x2e6e1]        # 44511b <_IO_stdin_used@@Base+0x1811b>
  416a3a:	mov    esi,0x1
  416a3f:	xor    eax,eax
  416a41:	call   4053e0 <__fprintf_chk@plt>
  416a46:	mov    rdi,QWORD PTR [rbx]
  416a49:	xor    eax,eax
  416a4b:	mov    r8,rbp
  416a4e:	mov    rcx,rbp
  416a51:	lea    rdx,[rip+0x2d450]        # 443ea8 <_IO_stdin_used@@Base+0x16ea8>
  416a58:	mov    esi,0x1
  416a5d:	call   4053e0 <__fprintf_chk@plt>
  416a62:	xor    eax,eax
  416a64:	mov    rbx,QWORD PTR [rsp+0x1d8]
  416a6c:	xor    rbx,QWORD PTR fs:0x28
  416a75:	jne    416c28 <__flatcc_fb_gen_c_json_parser@@Base+0x1798>
  416a7b:	add    rsp,0x1e8
  416a82:	pop    rbx
  416a83:	pop    rbp
  416a84:	pop    r12
  416a86:	pop    r13
  416a88:	pop    r14
  416a8a:	pop    r15
  416a8c:	ret    
  416a8d:	nop    DWORD PTR [rax]
  416a90:	cmp    DWORD PTR [r15+0x18],0xb
  416a95:	ja     416c23 <__flatcc_fb_gen_c_json_parser@@Base+0x1793>
  416a9b:	mov    eax,DWORD PTR [r15+0x18]
  416a9f:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  416aa4:	add    rax,r13
  416aa7:	notrack jmp rax
  416aaa:	nop    WORD PTR [rax+rax*1+0x0]
  416ab0:	mov    rax,QWORD PTR [r15+0x8]
  416ab4:	sub    rsp,0x8
  416ab8:	mov    r9,QWORD PTR [rax+0x8]
  416abc:	mov    r8,QWORD PTR [r15+0x78]
  416ac0:	push   r12
  416ac2:	mov    rdi,QWORD PTR [rbx]
  416ac5:	mov    ecx,r14d
  416ac8:	push   r9
  416aca:	lea    rdx,[rip+0x2d36f]        # 443e40 <_IO_stdin_used@@Base+0x16e40>
  416ad1:	mov    esi,0x1
  416ad6:	push   QWORD PTR [rax]
  416ad8:	xor    eax,eax
  416ada:	inc    r14d
  416add:	call   4053e0 <__fprintf_chk@plt>
  416ae2:	mov    r15,QWORD PTR [r15]
  416ae5:	add    rsp,0x20
  416ae9:	test   r15,r15
  416aec:	jne    416970 <__flatcc_fb_gen_c_json_parser@@Base+0x14e0>
  416af2:	jmp    416a30 <__flatcc_fb_gen_c_json_parser@@Base+0x15a0>
  416af7:	nop    WORD PTR [rax+rax*1+0x0]
  416b00:	lea    rcx,[rip+0x1ef79]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  416b07:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b0c:	nop    DWORD PTR [rax+0x0]
  416b10:	lea    rcx,[rip+0x1ef8f]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  416b17:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b1c:	nop    DWORD PTR [rax+0x0]
  416b20:	lea    rcx,[rip+0x1ef6f]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  416b27:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b2c:	nop    DWORD PTR [rax+0x0]
  416b30:	lea    rcx,[rip+0x1ef8a]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  416b37:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b3c:	nop    DWORD PTR [rax+0x0]
  416b40:	lea    rcx,[rip+0x1ef6d]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  416b47:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b4c:	nop    DWORD PTR [rax+0x0]
  416b50:	lea    rcx,[rip+0x1ef2a]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  416b57:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b5c:	nop    DWORD PTR [rax+0x0]
  416b60:	lea    rcx,[rip+0x1ef40]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  416b67:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b6c:	nop    DWORD PTR [rax+0x0]
  416b70:	lea    rcx,[rip+0x1ef20]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  416b77:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b7c:	nop    DWORD PTR [rax+0x0]
  416b80:	lea    rcx,[rip+0x1ef3b]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  416b87:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b8c:	nop    DWORD PTR [rax+0x0]
  416b90:	lea    rcx,[rip+0x1ef30]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  416b97:	jmp    4169f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1560>
  416b9c:	lea    rcx,[rip+0x1ef03]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  416ba3:	nop    DWORD PTR [rax+rax*1+0x0]
  416ba8:	mov    rdx,QWORD PTR [r15+0x8]
  416bac:	mov    r9,QWORD PTR [r15+0x78]
  416bb0:	mov    rax,QWORD PTR [rdx+0x8]
  416bb4:	push   r12
  416bb6:	mov    r8d,r14d
  416bb9:	push   rax
  416bba:	push   QWORD PTR [rdx]
  416bbc:	lea    rdx,[rip+0x2d215]        # 443dd8 <_IO_stdin_used@@Base+0x16dd8>
  416bc3:	push   rax
  416bc4:	jmp    416a0e <__flatcc_fb_gen_c_json_parser@@Base+0x157e>
  416bc9:	lea    rcx,[rip+0x1eec6]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  416bd0:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416bd2:	lea    rcx,[rip+0x1eee8]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  416bd9:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416bdb:	lea    rcx,[rip+0x1eed2]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  416be2:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416be4:	lea    rcx,[rip+0x1ee95]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  416beb:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416bed:	lea    rcx,[rip+0x1eed3]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  416bf4:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416bf6:	lea    rcx,[rip+0x1ee8a]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  416bfd:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416bff:	lea    rcx,[rip+0x1ee7b]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  416c06:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416c08:	lea    rcx,[rip+0x1ee98]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  416c0f:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416c11:	lea    rcx,[rip+0x1ee7f]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  416c18:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416c1a:	lea    rcx,[rip+0x1eea1]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  416c21:	jmp    416ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
  416c23:	call   416640 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
  416c28:	call   4052c0 <__stack_chk_fail@plt>
  416c2d:	nop    DWORD PTR [rax]
  416c30:	push   r15
  416c32:	mov    ecx,0x1d
  416c37:	push   r14
  416c39:	mov    r14,rsi
  416c3c:	push   r13
  416c3e:	push   r12
  416c40:	push   rbp
  416c41:	mov    rbp,rdi
  416c44:	push   rbx
  416c45:	sub    rsp,0x1f8
  416c4c:	mov    rax,QWORD PTR fs:0x28
  416c55:	mov    QWORD PTR [rsp+0x1e8],rax
  416c5d:	xor    eax,eax
  416c5f:	lea    r13,[rsp+0x10]
  416c64:	lea    rdx,[rsp+0x100]
  416c6c:	mov    rdi,r13
  416c6f:	rep stos QWORD PTR es:[rdi],rax
  416c72:	mov    rdi,rdx
  416c75:	mov    ecx,0x1d
  416c7a:	rep stos QWORD PTR es:[rdi],rax
  416c7d:	mov    rdi,QWORD PTR [rsi+0x18]
  416c81:	mov    rdx,r13
  416c84:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  416c89:	cmp    DWORD PTR [r14+0x48],0xb
  416c8e:	ja     4172bd <__flatcc_fb_gen_c_json_parser@@Base+0x1e2d>
  416c94:	mov    eax,DWORD PTR [r14+0x48]
  416c98:	lea    rdx,[rip+0x2e551]        # 4451f0 <_IO_stdin_used@@Base+0x181f0>
  416c9f:	movsxd rax,DWORD PTR [rdx+rax*4]
  416ca3:	add    rax,rdx
  416ca6:	notrack jmp rax
  416ca9:	lea    rax,[rip+0x1edd7]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  416cb0:	mov    QWORD PTR [rsp],rax
  416cb4:	mov    r11,rax
  416cb7:	lea    r8,[rip+0x2e460]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416cbe:	xchg   ax,ax
  416cc0:	mov    rdi,QWORD PTR [rbp+0xd0]
  416cc7:	test   BYTE PTR [r14+0xa4],0x20
  416ccf:	jne    416f98 <__flatcc_fb_gen_c_json_parser@@Base+0x1b08>
  416cd5:	mov    r9,r11
  416cd8:	mov    rcx,r13
  416cdb:	lea    rdx,[rip+0x2d51e]        # 444200 <_IO_stdin_used@@Base+0x17200>
  416ce2:	mov    esi,0x1
  416ce7:	xor    eax,eax
  416ce9:	call   4053e0 <__fprintf_chk@plt>
  416cee:	mov    rdi,QWORD PTR [rbp+0xd0]
  416cf5:	lea    rdx,[rip+0x2e44e]        # 44514a <_IO_stdin_used@@Base+0x1814a>
  416cfc:	mov    esi,0x1
  416d01:	xor    eax,eax
  416d03:	call   4053e0 <__fprintf_chk@plt>
  416d08:	mov    rbx,QWORD PTR [r14+0x28]
  416d0c:	lea    r12,[rip+0x2d3d5]        # 4440e8 <_IO_stdin_used@@Base+0x170e8>
  416d13:	test   rbx,rbx
  416d16:	jne    416d5d <__flatcc_fb_gen_c_json_parser@@Base+0x18cd>
  416d18:	jmp    416f35 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa5>
  416d1d:	nop    DWORD PTR [rax]
  416d20:	mov    rax,QWORD PTR [rbx+0x8]
  416d24:	sub    rsp,0x8
  416d28:	mov    r8,QWORD PTR [rax+0x8]
  416d2c:	movzx  ecx,BYTE PTR [rbx+0x48]
  416d30:	push   r8
  416d32:	mov    r9,QWORD PTR [rax]
  416d35:	mov    rdi,QWORD PTR [rbp+0xd0]
  416d3c:	lea    rdx,[rip+0x2d435]        # 444178 <_IO_stdin_used@@Base+0x17178>
  416d43:	mov    esi,0x1
  416d48:	xor    eax,eax
  416d4a:	call   4053e0 <__fprintf_chk@plt>
  416d4f:	pop    rax
  416d50:	pop    rdx
  416d51:	mov    rbx,QWORD PTR [rbx]
  416d54:	test   rbx,rbx
  416d57:	je     416f35 <__flatcc_fb_gen_c_json_parser@@Base+0x1aa5>
  416d5d:	movzx  eax,WORD PTR [rbx+0x58]
  416d61:	cmp    ax,0x5
  416d65:	je     416f60 <__flatcc_fb_gen_c_json_parser@@Base+0x1ad0>
  416d6b:	cmp    ax,0x6
  416d6f:	je     416d20 <__flatcc_fb_gen_c_json_parser@@Base+0x1890>
  416d71:	cmp    ax,0x4
  416d75:	je     416ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a68>
  416d7b:	mov    rax,QWORD PTR [rip+0x3a266]        # 450fe8 <stderr@GLIBC_2.2.5>
  416d82:	lea    rcx,[rip+0x2cef7]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  416d89:	mov    rdi,QWORD PTR [rax]
  416d8c:	lea    rdx,[rip+0x1ecc0]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  416d93:	mov    esi,0x1
  416d98:	lea    r9,[rip+0x2d309]        # 4440a8 <_IO_stdin_used@@Base+0x170a8>
  416d9f:	mov    r8d,0x9d
  416da5:	xor    eax,eax
  416da7:	call   4053e0 <__fprintf_chk@plt>
  416dac:	lea    rcx,[rip+0x2e5bd]        # 445370 <_IO_stdin_used@@Base+0x18370>
  416db3:	mov    edx,0x9d
  416db8:	lea    rsi,[rip+0x2cec1]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  416dbf:	lea    rdi,[rip+0x1fd53]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  416dc6:	call   4052e0 <__assert_fail@plt>
  416dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  416dd0:	lea    rax,[rip+0x1eca9]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  416dd7:	mov    QWORD PTR [rsp],rax
  416ddb:	lea    r11,[rip+0x1ec95]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  416de2:	lea    r8,[rip+0x2e335]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416de9:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416dee:	lea    rax,[rip+0x1ecb1]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  416df5:	mov    QWORD PTR [rsp],rax
  416df9:	lea    r11,[rip+0x1ec9d]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  416e00:	lea    r8,[rip+0x2e317]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416e07:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416e0c:	lea    rax,[rip+0x1ec83]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  416e13:	mov    QWORD PTR [rsp],rax
  416e17:	lea    r11,[rip+0x1ec6f]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  416e1e:	lea    r8,[rip+0x2e2f9]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416e25:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416e2a:	lea    rax,[rip+0x1ec90]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  416e31:	mov    QWORD PTR [rsp],rax
  416e35:	lea    r11,[rip+0x1ec7d]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  416e3c:	lea    r8,[rip+0x2e2db]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416e43:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416e48:	lea    rax,[rip+0x1ec65]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  416e4f:	mov    r8,rbp
  416e52:	mov    QWORD PTR [rsp],rax
  416e56:	lea    r11,[rip+0x1ec50]        # 435aad <_IO_stdin_used@@Base+0x8aad>
  416e5d:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416e62:	lea    rax,[rip+0x1ec18]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  416e69:	mov    QWORD PTR [rsp],rax
  416e6d:	lea    r11,[rip+0x1ec04]        # 435a78 <_IO_stdin_used@@Base+0x8a78>
  416e74:	lea    r8,[rip+0x2e2a3]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416e7b:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416e80:	lea    rax,[rip+0x1ec20]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  416e87:	mov    QWORD PTR [rsp],rax
  416e8b:	lea    r11,[rip+0x1ec0c]        # 435a9e <_IO_stdin_used@@Base+0x8a9e>
  416e92:	lea    r8,[rip+0x2e285]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416e99:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416e9e:	lea    rax,[rip+0x1ebf2]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  416ea5:	mov    QWORD PTR [rsp],rax
  416ea9:	lea    r11,[rip+0x1ebde]        # 435a8e <_IO_stdin_used@@Base+0x8a8e>
  416eb0:	lea    r8,[rip+0x2e267]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416eb7:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416ebc:	lea    rax,[rip+0x1ebff]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  416ec3:	mov    QWORD PTR [rsp],rax
  416ec7:	lea    r11,[rip+0x1ebec]        # 435aba <_IO_stdin_used@@Base+0x8aba>
  416ece:	lea    r8,[rip+0x2e249]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416ed5:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416eda:	lea    rax,[rip+0x1ebe6]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  416ee1:	mov    QWORD PTR [rsp],rax
  416ee5:	mov    r11,rax
  416ee8:	lea    r8,[rip+0x2e22f]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  416eef:	jmp    416cc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
  416ef4:	nop    DWORD PTR [rax+0x0]
  416ef8:	mov    rax,QWORD PTR [rbx+0x8]
  416efc:	sub    rsp,0x8
  416f00:	mov    r8,QWORD PTR [rax+0x8]
  416f04:	mov    rcx,QWORD PTR [rbx+0x48]
  416f08:	push   r8
  416f0a:	mov    r9,QWORD PTR [rax]
  416f0d:	mov    rdi,QWORD PTR [rbp+0xd0]
  416f14:	mov    esi,0x1
  416f19:	lea    rdx,[rip+0x2d210]        # 444130 <_IO_stdin_used@@Base+0x17130>
  416f20:	xor    eax,eax
  416f22:	call   4053e0 <__fprintf_chk@plt>
  416f27:	mov    rbx,QWORD PTR [rbx]
  416f2a:	pop    rcx
  416f2b:	pop    rsi
  416f2c:	test   rbx,rbx
  416f2f:	jne    416d5d <__flatcc_fb_gen_c_json_parser@@Base+0x18cd>
  416f35:	mov    rdi,QWORD PTR [rbp+0xd0]
  416f3c:	mov    rcx,QWORD PTR [rsp]
  416f40:	lea    rdx,[rip+0x2d279]        # 4441c0 <_IO_stdin_used@@Base+0x171c0>
  416f47:	mov    esi,0x1
  416f4c:	xor    eax,eax
  416f4e:	call   4053e0 <__fprintf_chk@plt>
  416f53:	jmp    4171e2 <__flatcc_fb_gen_c_json_parser@@Base+0x1d52>
  416f58:	nop    DWORD PTR [rax+rax*1+0x0]
  416f60:	mov    rax,QWORD PTR [rbx+0x8]
  416f64:	sub    rsp,0x8
  416f68:	mov    r8,QWORD PTR [rax+0x8]
  416f6c:	mov    rcx,QWORD PTR [rbx+0x48]
  416f70:	push   r8
  416f72:	mov    rdi,QWORD PTR [rbp+0xd0]
  416f79:	mov    r9,QWORD PTR [rax]
  416f7c:	mov    rdx,r12
  416f7f:	mov    esi,0x1
  416f84:	xor    eax,eax
  416f86:	call   4053e0 <__fprintf_chk@plt>
  416f8b:	pop    rdi
  416f8c:	pop    r8
  416f8e:	jmp    416d51 <__flatcc_fb_gen_c_json_parser@@Base+0x18c1>
  416f93:	nop    DWORD PTR [rax+rax*1+0x0]
  416f98:	mov    rax,QWORD PTR [r14+0xb8]
  416f9f:	cmp    rax,0x2
  416fa3:	je     4172a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e10>
  416fa9:	cmp    rax,0x4
  416fad:	je     417280 <__flatcc_fb_gen_c_json_parser@@Base+0x1df0>
  416fb3:	cmp    rax,0x1
  416fb7:	lea    rdx,[rip+0x1eab9]        # 435a77 <_IO_stdin_used@@Base+0x8a77>
  416fbe:	lea    r15,[rip+0x1eaf4]        # 435ab9 <_IO_stdin_used@@Base+0x8ab9>
  416fc5:	cmovne r15,rdx
  416fc9:	lea    r12,[rip+0x2e153]        # 445123 <_IO_stdin_used@@Base+0x18123>
  416fd0:	lea    rdx,[rip+0x2e148]        # 44511f <_IO_stdin_used@@Base+0x1811f>
  416fd7:	mov    ebx,0xff
  416fdc:	mov    rax,0xffffffffffffffff
  416fe3:	cmovne r12,rdx
  416fe7:	cmovne rbx,rax
  416feb:	mov    rax,QWORD PTR [r14+0x28]
  416fef:	test   rax,rax
  416ff2:	jne    417012 <__flatcc_fb_gen_c_json_parser@@Base+0x1b82>
  416ff4:	jmp    417037 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba7>
  416ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417000:	cmp    dx,0x4
  417004:	je     4171a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d10>
  41700a:	mov    rax,QWORD PTR [rax]
  41700d:	test   rax,rax
  417010:	je     417037 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba7>
  417012:	movzx  edx,WORD PTR [rax+0x58]
  417016:	cmp    dx,0x5
  41701a:	je     4171a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d10>
  417020:	cmp    dx,0x6
  417024:	jne    417000 <__flatcc_fb_gen_c_json_parser@@Base+0x1b70>
  417026:	movzx  edx,BYTE PTR [rax+0x48]
  41702a:	mov    rax,QWORD PTR [rax]
  41702d:	andn   rbx,rdx,rbx
  417032:	test   rax,rax
  417035:	jne    417012 <__flatcc_fb_gen_c_json_parser@@Base+0x1b82>
  417037:	mov    r9,r11
  41703a:	mov    esi,0x1
  41703f:	xor    eax,eax
  417041:	mov    rcx,r13
  417044:	lea    rdx,[rip+0x2d1b5]        # 444200 <_IO_stdin_used@@Base+0x17200>
  41704b:	mov    QWORD PTR [rsp+0x8],r11
  417050:	call   4053e0 <__fprintf_chk@plt>
  417055:	mov    r11,QWORD PTR [rsp+0x8]
  41705a:	mov    rdi,r15
  41705d:	mov    rsi,r11
  417060:	call   405330 <strcmp@plt>
  417065:	test   eax,eax
  417067:	je     417230 <__flatcc_fb_gen_c_json_parser@@Base+0x1da0>
  41706d:	mov    rdi,QWORD PTR [rbp+0xd0]
  417074:	mov    r8,r15
  417077:	mov    rcx,r15
  41707a:	lea    rdx,[rip+0x2e0a7]        # 445128 <_IO_stdin_used@@Base+0x18128>
  417081:	mov    esi,0x1
  417086:	xor    eax,eax
  417088:	call   4053e0 <__fprintf_chk@plt>
  41708d:	mov    rdi,QWORD PTR [rbp+0xd0]
  417094:	lea    rdx,[rip+0x2cee5]        # 443f80 <_IO_stdin_used@@Base+0x16f80>
  41709b:	mov    esi,0x1
  4170a0:	xor    eax,eax
  4170a2:	call   4053e0 <__fprintf_chk@plt>
  4170a7:	mov    rdi,QWORD PTR [rbp+0xd0]
  4170ae:	xor    eax,eax
  4170b0:	lea    rdx,[rip+0x2e066]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  4170b7:	mov    esi,0x1
  4170bc:	call   4053e0 <__fprintf_chk@plt>
  4170c1:	test   rbx,rbx
  4170c4:	jne    417258 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc8>
  4170ca:	mov    rdi,QWORD PTR [rbp+0xd0]
  4170d1:	lea    rdx,[rip+0x2cf40]        # 444018 <_IO_stdin_used@@Base+0x17018>
  4170d8:	mov    esi,0x1
  4170dd:	xor    eax,eax
  4170df:	call   4053e0 <__fprintf_chk@plt>
  4170e4:	mov    rbx,QWORD PTR [r14+0x28]
  4170e8:	lea    r13,[rip+0x2cf69]        # 444058 <_IO_stdin_used@@Base+0x17058>
  4170ef:	test   rbx,rbx
  4170f2:	jne    417139 <__flatcc_fb_gen_c_json_parser@@Base+0x1ca9>
  4170f4:	jmp    4171c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d38>
  4170f9:	nop    DWORD PTR [rax+0x0]
  417100:	mov    rax,QWORD PTR [rbx+0x8]
  417104:	movzx  ecx,BYTE PTR [rbx+0x48]
  417108:	mov    r9,QWORD PTR [rax+0x8]
  41710c:	push   r9
  41710e:	mov    rdi,QWORD PTR [rbp+0xd0]
  417115:	mov    r8,r12
  417118:	push   QWORD PTR [rax]
  41711a:	mov    rdx,r13
  41711d:	mov    esi,0x1
  417122:	xor    eax,eax
  417124:	call   4053e0 <__fprintf_chk@plt>
  417129:	mov    rbx,QWORD PTR [rbx]
  41712c:	pop    r9
  41712e:	pop    r10
  417130:	test   rbx,rbx
  417133:	je     4171c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d38>
  417139:	movzx  eax,WORD PTR [rbx+0x58]
  41713d:	cmp    ax,0x5
  417141:	je     4171b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
  417143:	cmp    ax,0x6
  417147:	je     417100 <__flatcc_fb_gen_c_json_parser@@Base+0x1c70>
  417149:	cmp    ax,0x4
  41714d:	je     4171b0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
  41714f:	mov    rax,QWORD PTR [rip+0x39e92]        # 450fe8 <stderr@GLIBC_2.2.5>
  417156:	lea    rcx,[rip+0x2cb23]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  41715d:	mov    rdi,QWORD PTR [rax]
  417160:	lea    rdx,[rip+0x1e8ec]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  417167:	mov    esi,0x1
  41716c:	lea    r9,[rip+0x2cf35]        # 4440a8 <_IO_stdin_used@@Base+0x170a8>
  417173:	mov    r8d,0x86
  417179:	xor    eax,eax
  41717b:	call   4053e0 <__fprintf_chk@plt>
  417180:	lea    rcx,[rip+0x2e1e9]        # 445370 <_IO_stdin_used@@Base+0x18370>
  417187:	mov    edx,0x86
  41718c:	lea    rsi,[rip+0x2caed]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417193:	lea    rdi,[rip+0x1f97f]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  41719a:	call   4052e0 <__assert_fail@plt>
  41719f:	nop
  4171a0:	mov    rdx,QWORD PTR [rax+0x48]
  4171a4:	andn   rbx,rdx,rbx
  4171a9:	jmp    41700a <__flatcc_fb_gen_c_json_parser@@Base+0x1b7a>
  4171ae:	xchg   ax,ax
  4171b0:	mov    rax,QWORD PTR [rbx+0x8]
  4171b4:	mov    rcx,QWORD PTR [rbx+0x48]
  4171b8:	mov    r9,QWORD PTR [rax+0x8]
  4171bc:	jmp    41710c <__flatcc_fb_gen_c_json_parser@@Base+0x1c7c>
  4171c1:	nop    DWORD PTR [rax+0x0]
  4171c8:	mov    rdi,QWORD PTR [rbp+0xd0]
  4171cf:	lea    rdx,[rip+0x2ce42]        # 444018 <_IO_stdin_used@@Base+0x17018>
  4171d6:	mov    esi,0x1
  4171db:	xor    eax,eax
  4171dd:	call   4053e0 <__fprintf_chk@plt>
  4171e2:	mov    rdi,QWORD PTR [rbp+0xd0]
  4171e9:	mov    esi,0x1
  4171ee:	xor    eax,eax
  4171f0:	lea    rdx,[rip+0x2df24]        # 44511b <_IO_stdin_used@@Base+0x1811b>
  4171f7:	call   4053e0 <__fprintf_chk@plt>
  4171fc:	xor    eax,eax
  4171fe:	mov    rsi,QWORD PTR [rsp+0x1e8]
  417206:	xor    rsi,QWORD PTR fs:0x28
  41720f:	jne    4172b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
  417215:	add    rsp,0x1f8
  41721c:	pop    rbx
  41721d:	pop    rbp
  41721e:	pop    r12
  417220:	pop    r13
  417222:	pop    r14
  417224:	pop    r15
  417226:	ret    
  417227:	nop    WORD PTR [rax+rax*1+0x0]
  417230:	mov    rdi,QWORD PTR [rbp+0xd0]
  417237:	mov    rcx,r15
  41723a:	lea    rdx,[rip+0x2defa]        # 44513b <_IO_stdin_used@@Base+0x1813b>
  417241:	mov    esi,0x1
  417246:	xor    eax,eax
  417248:	call   4053e0 <__fprintf_chk@plt>
  41724d:	jmp    41708d <__flatcc_fb_gen_c_json_parser@@Base+0x1bfd>
  417252:	nop    WORD PTR [rax+rax*1+0x0]
  417258:	mov    rdi,QWORD PTR [rbp+0xd0]
  41725f:	mov    r8,QWORD PTR [rsp]
  417263:	mov    rcx,rbx
  417266:	lea    rdx,[rip+0x2cd4b]        # 443fb8 <_IO_stdin_used@@Base+0x16fb8>
  41726d:	mov    esi,0x1
  417272:	xor    eax,eax
  417274:	call   4053e0 <__fprintf_chk@plt>
  417279:	jmp    4170ca <__flatcc_fb_gen_c_json_parser@@Base+0x1c3a>
  41727e:	xchg   ax,ax
  417280:	lea    r15,[rip+0x1e816]        # 435a9d <_IO_stdin_used@@Base+0x8a9d>
  417287:	lea    r12,[rip+0x2de97]        # 445125 <_IO_stdin_used@@Base+0x18125>
  41728e:	mov    ebx,0xffffffff
  417293:	jmp    416feb <__flatcc_fb_gen_c_json_parser@@Base+0x1b5b>
  417298:	nop    DWORD PTR [rax+rax*1+0x0]
  4172a0:	lea    r15,[rip+0x1e7e6]        # 435a8d <_IO_stdin_used@@Base+0x8a8d>
  4172a7:	lea    r12,[rip+0x2de75]        # 445123 <_IO_stdin_used@@Base+0x18123>
  4172ae:	mov    ebx,0xffff
  4172b3:	jmp    416feb <__flatcc_fb_gen_c_json_parser@@Base+0x1b5b>
  4172b8:	call   4052c0 <__stack_chk_fail@plt>
  4172bd:	call   416640 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
  4172c2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4172cd:	nop    DWORD PTR [rax]
  4172d0:	push   r15
  4172d2:	mov    ecx,0x1d
  4172d7:	push   r14
  4172d9:	push   r13
  4172db:	push   r12
  4172dd:	mov    r12,rdi
  4172e0:	push   rbp
  4172e1:	mov    rbp,rsi
  4172e4:	push   rbx
  4172e5:	sub    rsp,0x1f8
  4172ec:	mov    rax,QWORD PTR fs:0x28
  4172f5:	mov    QWORD PTR [rsp+0x1e8],rax
  4172fd:	xor    eax,eax
  4172ff:	lea    rdi,[rsp+0x10]
  417304:	mov    QWORD PTR [rsp+0x8],rdi
  417309:	mov    rdx,QWORD PTR [rsp+0x8]
  41730e:	rep stos QWORD PTR es:[rdi],rax
  417311:	lea    rcx,[rsp+0x100]
  417319:	mov    rbx,rcx
  41731c:	mov    QWORD PTR [rsp],rcx
  417320:	mov    rdi,rbx
  417323:	mov    ecx,0x1d
  417328:	rep stos QWORD PTR es:[rdi],rax
  41732b:	mov    rdi,QWORD PTR [rsi+0x18]
  41732f:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  417334:	mov    r13,QWORD PTR [rbp+0xa8]
  41733b:	mov    esi,0x8
  417340:	mov    rdi,r13
  417343:	call   405320 <calloc@plt>
  417348:	mov    rbx,rax
  41734b:	test   r13,r13
  41734e:	je     417359 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec9>
  417350:	test   rax,rax
  417353:	je     417cda <__flatcc_fb_gen_c_json_parser@@Base+0x284a>
  417359:	mov    rax,QWORD PTR [rbp+0x28]
  41735d:	test   rax,rax
  417360:	je     41737b <__flatcc_fb_gen_c_json_parser@@Base+0x1eeb>
  417362:	nop    WORD PTR [rax+rax*1+0x0]
  417368:	mov    rdx,QWORD PTR [rax+0x88]
  41736f:	mov    QWORD PTR [rbx+rdx*8],rax
  417373:	mov    rax,QWORD PTR [rax]
  417376:	test   rax,rax
  417379:	jne    417368 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed8>
  41737b:	mov    rcx,QWORD PTR [rsp+0x8]
  417380:	mov    rdi,QWORD PTR [r12]
  417384:	xor    eax,eax
  417386:	lea    rdx,[rip+0x2ceeb]        # 444278 <_IO_stdin_used@@Base+0x17278>
  41738d:	mov    esi,0x1
  417392:	call   4053e0 <__fprintf_chk@plt>
  417397:	cmp    QWORD PTR [rbp+0xa8],0x0
  41739f:	je     417921 <__flatcc_fb_gen_c_json_parser@@Base+0x2491>
  4173a5:	mov    rdi,QWORD PTR [r12]
  4173a9:	xor    r15d,r15d
  4173ac:	lea    r13,[rip+0x2de6d]        # 445220 <_IO_stdin_used@@Base+0x18220>
  4173b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4173b8:	mov    r14,QWORD PTR [rbx+r15*8]
  4173bc:	test   r14,r14
  4173bf:	je     4174ed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  4173c5:	test   BYTE PTR [r14+0x70],0x4
  4173ca:	jne    4174ed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  4173d0:	lea    rdx,[rip+0x2dd86]        # 44515d <_IO_stdin_used@@Base+0x1815d>
  4173d7:	mov    esi,0x1
  4173dc:	xor    eax,eax
  4173de:	call   4053e0 <__fprintf_chk@plt>
  4173e3:	movzx  eax,WORD PTR [r14+0x28]
  4173e8:	sub    eax,0x7
  4173eb:	cmp    ax,0x8
  4173ef:	ja     417618 <__flatcc_fb_gen_c_json_parser@@Base+0x2188>
  4173f5:	movzx  eax,ax
  4173f8:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4173fd:	add    rax,r13
  417400:	notrack jmp rax
  417403:	nop    DWORD PTR [rax+rax*1+0x0]
  417408:	mov    rsi,QWORD PTR [r14+0x18]
  41740c:	mov    rdx,QWORD PTR [rsp]
  417410:	mov    rdi,QWORD PTR [rsi+0x18]
  417414:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  417419:	mov    rax,QWORD PTR [r14+0x18]
  41741d:	movzx  eax,WORD PTR [rax+0x10]
  417421:	cmp    ax,0x1
  417425:	je     417758 <__flatcc_fb_gen_c_json_parser@@Base+0x22c8>
  41742b:	test   ax,ax
  41742e:	je     417730 <__flatcc_fb_gen_c_json_parser@@Base+0x22a0>
  417434:	cmp    ax,0x3
  417438:	jne    417628 <__flatcc_fb_gen_c_json_parser@@Base+0x2198>
  41743e:	cmp    DWORD PTR [r14+0x18],0xb
  417443:	ja     417be5 <__flatcc_fb_gen_c_json_parser@@Base+0x2755>
  417449:	mov    eax,DWORD PTR [r14+0x18]
  41744d:	lea    rcx,[rip+0x2ddf0]        # 445244 <_IO_stdin_used@@Base+0x18244>
  417454:	movsxd rax,DWORD PTR [rcx+rax*4]
  417458:	add    rax,rcx
  41745b:	notrack jmp rax
  41745e:	xchg   ax,ax
  417460:	mov    rsi,QWORD PTR [r14+0x18]
  417464:	mov    rdx,QWORD PTR [rsp]
  417468:	mov    rdi,QWORD PTR [rsi+0x18]
  41746c:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  417471:	mov    rdx,QWORD PTR [r14+0x18]
  417475:	movzx  eax,WORD PTR [rdx+0x10]
  417479:	cmp    ax,0x1
  41747d:	je     417708 <__flatcc_fb_gen_c_json_parser@@Base+0x2278>
  417483:	test   ax,ax
  417486:	je     4176e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2250>
  41748c:	cmp    ax,0x3
  417490:	jne    417678 <__flatcc_fb_gen_c_json_parser@@Base+0x21e8>
  417496:	cmp    DWORD PTR [rdx+0x48],0xb
  41749a:	ja     417be5 <__flatcc_fb_gen_c_json_parser@@Base+0x2755>
  4174a0:	mov    eax,DWORD PTR [rdx+0x48]
  4174a3:	lea    rdx,[rip+0x2ddca]        # 445274 <_IO_stdin_used@@Base+0x18274>
  4174aa:	movsxd rax,DWORD PTR [rdx+rax*4]
  4174ae:	add    rax,rdx
  4174b1:	notrack jmp rax
  4174b4:	nop    DWORD PTR [rax+0x0]
  4174b8:	mov    rax,QWORD PTR [r14+0x8]
  4174bc:	sub    rsp,0x8
  4174c0:	mov    r8,QWORD PTR [rax+0x8]
  4174c4:	mov    rcx,QWORD PTR [r14+0x88]
  4174cb:	push   r8
  4174cd:	mov    r9,QWORD PTR [rax]
  4174d0:	lea    rdx,[rip+0x2d021]        # 4444f8 <_IO_stdin_used@@Base+0x174f8>
  4174d7:	mov    rdi,QWORD PTR [r12]
  4174db:	mov    esi,0x1
  4174e0:	xor    eax,eax
  4174e2:	call   4053e0 <__fprintf_chk@plt>
  4174e7:	pop    rax
  4174e8:	mov    rdi,QWORD PTR [r12]
  4174ec:	pop    rdx
  4174ed:	inc    r15
  4174f0:	cmp    r15,QWORD PTR [rbp+0xa8]
  4174f7:	jb     4173b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
  4174fd:	lea    rdx,[rip+0x2dc16]        # 44511a <_IO_stdin_used@@Base+0x1811a>
  417504:	mov    esi,0x1
  417509:	xor    eax,eax
  41750b:	call   4053e0 <__fprintf_chk@plt>
  417510:	mov    rcx,QWORD PTR [rsp+0x8]
  417515:	mov    rdi,QWORD PTR [r12]
  417519:	mov    r8,rcx
  41751c:	lea    rdx,[rip+0x2d47d]        # 4449a0 <_IO_stdin_used@@Base+0x179a0>
  417523:	mov    esi,0x1
  417528:	xor    eax,eax
  41752a:	call   4053e0 <__fprintf_chk@plt>
  41752f:	mov    rdi,rbx
  417532:	call   405230 <free@plt>
  417537:	xor    eax,eax
  417539:	mov    rcx,QWORD PTR [rsp+0x1e8]
  417541:	xor    rcx,QWORD PTR fs:0x28
  41754a:	jne    417d80 <__flatcc_fb_gen_c_json_parser@@Base+0x28f0>
  417550:	add    rsp,0x1f8
  417557:	pop    rbx
  417558:	pop    rbp
  417559:	pop    r12
  41755b:	pop    r13
  41755d:	pop    r14
  41755f:	pop    r15
  417561:	ret    
  417562:	nop    WORD PTR [rax+rax*1+0x0]
  417568:	cmp    DWORD PTR [r14+0x18],0xb
  41756d:	ja     417b95 <__flatcc_fb_gen_c_json_parser@@Base+0x2705>
  417573:	mov    eax,DWORD PTR [r14+0x18]
  417577:	lea    rdx,[rip+0x2dd26]        # 4452a4 <_IO_stdin_used@@Base+0x182a4>
  41757e:	movsxd rax,DWORD PTR [rdx+rax*4]
  417582:	add    rax,rdx
  417585:	notrack jmp rax
  417588:	nop    DWORD PTR [rax+rax*1+0x0]
  417590:	movzx  eax,WORD PTR [r14+0x70]
  417595:	test   ah,0xc
  417598:	jne    4176b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2220>
  41759e:	mov    rsi,QWORD PTR [r14+0x90]
  4175a5:	test   rsi,rsi
  4175a8:	je     4177a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2318>
  4175ae:	mov    rdi,QWORD PTR [rsi+0x18]
  4175b2:	mov    rdx,QWORD PTR [rsp]
  4175b6:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4175bb:	mov    rax,QWORD PTR [r14+0x90]
  4175c2:	mov    rcx,QWORD PTR [r14+0x88]
  4175c9:	cmp    WORD PTR [rax+0x10],0x0
  4175ce:	mov    rax,QWORD PTR [r14+0x8]
  4175d2:	mov    r8,QWORD PTR [rax+0x8]
  4175d6:	jne    417790 <__flatcc_fb_gen_c_json_parser@@Base+0x2300>
  4175dc:	push   QWORD PTR [rsp]
  4175df:	lea    rdx,[rip+0x2ce12]        # 4443f8 <_IO_stdin_used@@Base+0x173f8>
  4175e6:	push   r8
  4175e8:	mov    r9,QWORD PTR [rax]
  4175eb:	jmp    4174d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  4175f0:	mov    rax,QWORD PTR [r14+0x8]
  4175f4:	sub    rsp,0x8
  4175f8:	mov    r8,QWORD PTR [rax+0x8]
  4175fc:	mov    rcx,QWORD PTR [r14+0x88]
  417603:	mov    r9,QWORD PTR [rax]
  417606:	push   r8
  417608:	lea    rdx,[rip+0x2cf29]        # 444538 <_IO_stdin_used@@Base+0x17538>
  41760f:	jmp    4174d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  417614:	nop    DWORD PTR [rax+0x0]
  417618:	mov    rdi,QWORD PTR [r12]
  41761c:	jmp    4174ed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  417621:	nop    DWORD PTR [rax+0x0]
  417628:	cmp    ax,0x4
  41762c:	jne    417d30 <__flatcc_fb_gen_c_json_parser@@Base+0x28a0>
  417632:	sub    rsp,0x8
  417636:	mov    rax,QWORD PTR [r14+0x8]
  41763a:	mov    rsi,QWORD PTR [rsp+0x8]
  41763f:	mov    r8,QWORD PTR [rax+0x8]
  417643:	mov    rcx,QWORD PTR [r14+0x88]
  41764a:	push   rsi
  41764b:	lea    rdx,[rip+0x2d28e]        # 4448e0 <_IO_stdin_used@@Base+0x178e0>
  417652:	push   rsi
  417653:	push   r8
  417655:	mov    r9,QWORD PTR [rax]
  417658:	mov    rdi,QWORD PTR [r12]
  41765c:	mov    esi,0x1
  417661:	xor    eax,eax
  417663:	call   4053e0 <__fprintf_chk@plt>
  417668:	mov    rdi,QWORD PTR [r12]
  41766c:	add    rsp,0x20
  417670:	jmp    4174ed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  417675:	nop    DWORD PTR [rax]
  417678:	cmp    ax,0x4
  41767c:	jne    417c8a <__flatcc_fb_gen_c_json_parser@@Base+0x27fa>
  417682:	sub    rsp,0x8
  417686:	mov    rax,QWORD PTR [r14+0x8]
  41768a:	mov    rsi,QWORD PTR [rsp+0x8]
  41768f:	mov    r8,QWORD PTR [rax+0x8]
  417693:	mov    rcx,QWORD PTR [r14+0x88]
  41769a:	push   rsi
  41769b:	lea    rdx,[rip+0x2d076]        # 444718 <_IO_stdin_used@@Base+0x17718>
  4176a2:	push   rsi
  4176a3:	push   r8
  4176a5:	mov    r9,QWORD PTR [rax]
  4176a8:	jmp    417658 <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
  4176aa:	nop    WORD PTR [rax+rax*1+0x0]
  4176b0:	shr    ax,0xa
  4176b4:	mov    rdx,QWORD PTR [r14+0x8]
  4176b8:	xor    eax,0x1
  4176bb:	and    eax,0x1
  4176be:	mov    r8,QWORD PTR [rdx+0x8]
  4176c2:	mov    rcx,QWORD PTR [r14+0x88]
  4176c9:	push   rax
  4176ca:	mov    r9,QWORD PTR [rdx]
  4176cd:	lea    rdx,[rip+0x2ccd4]        # 4443a8 <_IO_stdin_used@@Base+0x173a8>
  4176d4:	push   r8
  4176d6:	jmp    4174d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  4176db:	nop    DWORD PTR [rax+rax*1+0x0]
  4176e0:	mov    rax,QWORD PTR [r14+0x8]
  4176e4:	mov    rcx,QWORD PTR [r14+0x88]
  4176eb:	mov    r8,QWORD PTR [rax+0x8]
  4176ef:	push   QWORD PTR [rsp]
  4176f2:	lea    rdx,[rip+0x2cfc7]        # 4446c0 <_IO_stdin_used@@Base+0x176c0>
  4176f9:	push   r8
  4176fb:	mov    r9,QWORD PTR [rax]
  4176fe:	jmp    4174d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  417703:	nop    DWORD PTR [rax+rax*1+0x0]
  417708:	mov    rax,QWORD PTR [r14+0x8]
  41770c:	mov    rcx,QWORD PTR [r14+0x88]
  417713:	mov    r8,QWORD PTR [rax+0x8]
  417717:	push   QWORD PTR [rsp]
  41771a:	lea    rdx,[rip+0x2cf47]        # 444668 <_IO_stdin_used@@Base+0x17668>
  417721:	push   r8
  417723:	mov    r9,QWORD PTR [rax]
  417726:	jmp    4174d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  41772b:	nop    DWORD PTR [rax+rax*1+0x0]
  417730:	mov    rax,QWORD PTR [r14+0x8]
  417734:	mov    rcx,QWORD PTR [r14+0x88]
  41773b:	mov    r8,QWORD PTR [rax+0x8]
  41773f:	push   QWORD PTR [rsp]
  417742:	lea    rdx,[rip+0x2d07f]        # 4447c8 <_IO_stdin_used@@Base+0x177c8>
  417749:	push   r8
  41774b:	mov    r9,QWORD PTR [rax]
  41774e:	jmp    4174d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  417753:	nop    DWORD PTR [rax+rax*1+0x0]
  417758:	mov    rax,QWORD PTR [r14+0x8]
  41775c:	sub    rsp,0x8
  417760:	mov    r8,QWORD PTR [rax+0x8]
  417764:	mov    rcx,QWORD PTR [r14+0x88]
  41776b:	push   QWORD PTR [rsp+0x8]
  41776f:	lea    rdx,[rip+0x2d10a]        # 444880 <_IO_stdin_used@@Base+0x17880>
  417776:	push   QWORD PTR [r14+0x80]
  41777d:	mov    r9,QWORD PTR [rax]
  417780:	push   r8
  417782:	jmp    417658 <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
  417787:	nop    WORD PTR [rax+rax*1+0x0]
  417790:	push   QWORD PTR [rsp]
  417793:	lea    rdx,[rip+0x2ccbe]        # 444458 <_IO_stdin_used@@Base+0x17458>
  41779a:	push   r8
  41779c:	mov    r9,QWORD PTR [rax]
  41779f:	jmp    4174d7 <__flatcc_fb_gen_c_json_parser@@Base+0x2047>
  4177a4:	nop    DWORD PTR [rax+0x0]
  4177a8:	cmp    DWORD PTR [r14+0x18],0xb
  4177ad:	ja     417be5 <__flatcc_fb_gen_c_json_parser@@Base+0x2755>
  4177b3:	mov    eax,DWORD PTR [r14+0x18]
  4177b7:	lea    rdx,[rip+0x2db16]        # 4452d4 <_IO_stdin_used@@Base+0x182d4>
  4177be:	movsxd rax,DWORD PTR [rdx+rax*4]
  4177c2:	add    rax,rdx
  4177c5:	notrack jmp rax
  4177c8:	lea    rcx,[rip+0x1e2b8]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  4177cf:	nop
  4177d0:	movzx  eax,WORD PTR [r14+0x58]
  4177d5:	cmp    ax,0x4
  4177d9:	je     417840 <__flatcc_fb_gen_c_json_parser@@Base+0x23b0>
  4177db:	ja     4178d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
  4177e1:	cmp    ax,0x3
  4177e5:	jne    417bea <__flatcc_fb_gen_c_json_parser@@Base+0x275a>
  4177eb:	mov    rax,QWORD PTR [r14+0x8]
  4177ef:	mov    r8,QWORD PTR [r14+0x88]
  4177f6:	mov    r9,QWORD PTR [rax+0x8]
  4177fa:	vmovsd xmm0,QWORD PTR [r14+0x48]
  417800:	push   r9
  417802:	mov    rdi,QWORD PTR [r12]
  417806:	lea    rdx,[rip+0x2cb5b]        # 444368 <_IO_stdin_used@@Base+0x17368>
  41780d:	push   QWORD PTR [rax]
  41780f:	mov    esi,0x1
  417814:	mov    eax,0x1
  417819:	call   4053e0 <__fprintf_chk@plt>
  41781e:	pop    r8
  417820:	mov    rdi,QWORD PTR [r12]
  417824:	pop    r9
  417826:	jmp    4174ed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  41782b:	movzx  eax,WORD PTR [r14+0x58]
  417830:	lea    rcx,[rip+0x1e290]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  417837:	cmp    ax,0x4
  41783b:	jne    4177db <__flatcc_fb_gen_c_json_parser@@Base+0x234b>
  41783d:	nop    DWORD PTR [rax]
  417840:	mov    rax,QWORD PTR [r14+0x8]
  417844:	sub    rsp,0x8
  417848:	mov    r9,QWORD PTR [rax+0x8]
  41784c:	mov    r8,QWORD PTR [r14+0x88]
  417853:	push   QWORD PTR [r14+0x48]
  417857:	lea    rdx,[rip+0x2caca]        # 444328 <_IO_stdin_used@@Base+0x17328>
  41785e:	push   r9
  417860:	push   QWORD PTR [rax]
  417862:	jmp    417904 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
  417867:	lea    rcx,[rip+0x1e254]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  41786e:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  417873:	lea    rcx,[rip+0x1e21d]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  41787a:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  41787f:	lea    rcx,[rip+0x1e221]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  417886:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  41788b:	lea    rcx,[rip+0x1e1ef]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  417892:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  417897:	lea    rcx,[rip+0x1e216]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  41789e:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4178a3:	lea    rcx,[rip+0x1e217]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  4178aa:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4178af:	lea    rcx,[rip+0x1e1e0]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  4178b6:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4178bb:	lea    rcx,[rip+0x1e1e4]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  4178c2:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4178c7:	lea    rcx,[rip+0x1e1b2]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  4178ce:	jmp    4177d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
  4178d3:	nop    DWORD PTR [rax+rax*1+0x0]
  4178d8:	cmp    ax,0x6
  4178dc:	ja     417bea <__flatcc_fb_gen_c_json_parser@@Base+0x275a>
  4178e2:	mov    rax,QWORD PTR [r14+0x8]
  4178e6:	sub    rsp,0x8
  4178ea:	mov    r9,QWORD PTR [rax+0x8]
  4178ee:	mov    r8,QWORD PTR [r14+0x88]
  4178f5:	push   QWORD PTR [r14+0x48]
  4178f9:	lea    rdx,[rip+0x2c9e8]        # 4442e8 <_IO_stdin_used@@Base+0x172e8>
  417900:	push   r9
  417902:	push   QWORD PTR [rax]
  417904:	mov    rdi,QWORD PTR [r12]
  417908:	mov    esi,0x1
  41790d:	xor    eax,eax
  41790f:	call   4053e0 <__fprintf_chk@plt>
  417914:	mov    rdi,QWORD PTR [r12]
  417918:	add    rsp,0x20
  41791c:	jmp    4174ed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  417921:	mov    rdi,QWORD PTR [r12]
  417925:	lea    rdx,[rip+0x2d7ee]        # 44511a <_IO_stdin_used@@Base+0x1811a>
  41792c:	mov    esi,0x1
  417931:	xor    eax,eax
  417933:	call   4053e0 <__fprintf_chk@plt>
  417938:	mov    rcx,QWORD PTR [rsp+0x8]
  41793d:	mov    rdi,QWORD PTR [r12]
  417941:	xor    eax,eax
  417943:	mov    r8,rcx
  417946:	lea    rdx,[rip+0x2d053]        # 4449a0 <_IO_stdin_used@@Base+0x179a0>
  41794d:	mov    esi,0x1
  417952:	call   4053e0 <__fprintf_chk@plt>
  417957:	test   rbx,rbx
  41795a:	je     417537 <__flatcc_fb_gen_c_json_parser@@Base+0x20a7>
  417960:	jmp    41752f <__flatcc_fb_gen_c_json_parser@@Base+0x209f>
  417965:	nop    DWORD PTR [rax]
  417968:	lea    rcx,[rip+0x1e118]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  41796f:	nop
  417970:	movzx  eax,WORD PTR [r14+0x58]
  417975:	cmp    ax,0x4
  417979:	jne    417ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
  41797f:	mov    rax,QWORD PTR [r14+0x8]
  417983:	mov    r8,QWORD PTR [r14+0x88]
  41798a:	mov    r9,QWORD PTR [rax+0x8]
  41798e:	push   QWORD PTR [rsp]
  417991:	lea    rdx,[rip+0x2cc40]        # 4445d8 <_IO_stdin_used@@Base+0x175d8>
  417998:	push   QWORD PTR [r14+0x48]
  41799c:	push   r9
  41799e:	push   QWORD PTR [rax]
  4179a0:	jmp    417904 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
  4179a5:	lea    rcx,[rip+0x1e0d4]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  4179ac:	nop    DWORD PTR [rax+0x0]
  4179b0:	mov    rax,QWORD PTR [r14+0x8]
  4179b4:	mov    r8,QWORD PTR [r14+0x88]
  4179bb:	mov    r9,QWORD PTR [rax+0x8]
  4179bf:	push   QWORD PTR [rsp]
  4179c2:	lea    rdx,[rip+0x2ce57]        # 444820 <_IO_stdin_used@@Base+0x17820>
  4179c9:	push   QWORD PTR [rbp+0xb8]
  4179cf:	push   r9
  4179d1:	push   QWORD PTR [rax]
  4179d3:	jmp    417904 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
  4179d8:	lea    rcx,[rip+0x1e0a2]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  4179df:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4179e1:	lea    rcx,[rip+0x1e0bf]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  4179e8:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4179ea:	lea    rcx,[rip+0x1e0a6]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  4179f1:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4179f3:	lea    rcx,[rip+0x1e0c8]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  4179fa:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  4179fc:	lea    rcx,[rip+0x1e0c4]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  417a03:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  417a05:	lea    rcx,[rip+0x1e07b]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  417a0c:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  417a0e:	lea    rcx,[rip+0x1e06b]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  417a15:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a1a:	lea    rcx,[rip+0x1e085]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  417a21:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a26:	lea    rcx,[rip+0x1e069]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  417a2d:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a32:	lea    rcx,[rip+0x1e088]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  417a39:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a3e:	lea    rcx,[rip+0x1e06f]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  417a45:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a4a:	lea    rcx,[rip+0x1e030]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  417a51:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a56:	lea    rcx,[rip+0x1e04a]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  417a5d:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a62:	lea    rcx,[rip+0x1e02e]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  417a69:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a6e:	lea    rcx,[rip+0x1e04d]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  417a75:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a7a:	lea    rcx,[rip+0x1e046]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  417a81:	jmp    417970 <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
  417a86:	lea    rcx,[rip+0x1e019]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  417a8d:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  417a92:	lea    rcx,[rip+0x1dffd]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  417a99:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  417a9e:	lea    rcx,[rip+0x1e01c]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  417aa5:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  417aaa:	lea    rcx,[rip+0x1e003]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  417ab1:	jmp    4179b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
  417ab6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ac0:	jb     417c3a <__flatcc_fb_gen_c_json_parser@@Base+0x27aa>
  417ac6:	cmp    ax,0x6
  417aca:	ja     417c3a <__flatcc_fb_gen_c_json_parser@@Base+0x27aa>
  417ad0:	mov    rax,QWORD PTR [r14+0x8]
  417ad4:	mov    r8,QWORD PTR [r14+0x88]
  417adb:	mov    r9,QWORD PTR [rax+0x8]
  417adf:	push   QWORD PTR [rsp]
  417ae2:	lea    rdx,[rip+0x2ca97]        # 444580 <_IO_stdin_used@@Base+0x17580>
  417ae9:	push   QWORD PTR [r14+0x48]
  417aed:	push   r9
  417aef:	push   QWORD PTR [rax]
  417af1:	jmp    417904 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
  417af6:	lea    rcx,[rip+0x1dfc5]        # 435ac2 <_IO_stdin_used@@Base+0x8ac2>
  417afd:	nop    DWORD PTR [rax]
  417b00:	mov    rax,QWORD PTR [r14+0x8]
  417b04:	mov    r8,QWORD PTR [r14+0x88]
  417b0b:	mov    r9,QWORD PTR [rax+0x8]
  417b0f:	mov    rdi,QWORD PTR [r12]
  417b13:	push   r9
  417b15:	mov    esi,0x1
  417b1a:	lea    rdx,[rip+0x2c997]        # 4444b8 <_IO_stdin_used@@Base+0x174b8>
  417b21:	push   QWORD PTR [rax]
  417b23:	xor    eax,eax
  417b25:	call   4053e0 <__fprintf_chk@plt>
  417b2a:	pop    rcx
  417b2b:	mov    rdi,QWORD PTR [r12]
  417b2f:	pop    rsi
  417b30:	jmp    4174ed <__flatcc_fb_gen_c_json_parser@@Base+0x205d>
  417b35:	lea    rcx,[rip+0x1df5b]        # 435a97 <_IO_stdin_used@@Base+0x8a97>
  417b3c:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b3e:	lea    rcx,[rip+0x1df62]        # 435aa7 <_IO_stdin_used@@Base+0x8aa7>
  417b45:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b47:	lea    rcx,[rip+0x1df33]        # 435a81 <_IO_stdin_used@@Base+0x8a81>
  417b4e:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b50:	lea    rcx,[rip+0x1df5d]        # 435ab4 <_IO_stdin_used@@Base+0x8ab4>
  417b57:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b59:	lea    rcx,[rip+0x1df61]        # 435ac1 <_IO_stdin_used@@Base+0x8ac1>
  417b60:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b62:	lea    rcx,[rip+0x1df2d]        # 435a96 <_IO_stdin_used@@Base+0x8a96>
  417b69:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b6b:	lea    rcx,[rip+0x1df34]        # 435aa6 <_IO_stdin_used@@Base+0x8aa6>
  417b72:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b74:	lea    rcx,[rip+0x1df05]        # 435a80 <_IO_stdin_used@@Base+0x8a80>
  417b7b:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b7d:	lea    rcx,[rip+0x1df03]        # 435a87 <_IO_stdin_used@@Base+0x8a87>
  417b84:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b89:	lea    rcx,[rip+0x1df37]        # 435ac7 <_IO_stdin_used@@Base+0x8ac7>
  417b90:	jmp    417b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
  417b95:	mov    rax,QWORD PTR [rip+0x3944c]        # 450fe8 <stderr@GLIBC_2.2.5>
  417b9c:	lea    rcx,[rip+0x16705]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  417ba3:	mov    rdi,QWORD PTR [rax]
  417ba6:	lea    rdx,[rip+0x1dea6]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  417bad:	mov    esi,0x1
  417bb2:	lea    r9,[rip+0x166b7]        # 42e270 <_IO_stdin_used@@Base+0x1270>
  417bb9:	mov    r8d,0x60
  417bbf:	xor    eax,eax
  417bc1:	call   4053e0 <__fprintf_chk@plt>
  417bc6:	lea    rcx,[rip+0x2d783]        # 445350 <_IO_stdin_used@@Base+0x18350>
  417bcd:	mov    edx,0x60
  417bd2:	lea    rsi,[rip+0x166cf]        # 42e2a8 <_IO_stdin_used@@Base+0x12a8>
  417bd9:	lea    rdi,[rip+0x1ef39]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  417be0:	call   4052e0 <__assert_fail@plt>
  417be5:	call   416640 <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
  417bea:	mov    rax,QWORD PTR [rip+0x393f7]        # 450fe8 <stderr@GLIBC_2.2.5>
  417bf1:	lea    rcx,[rip+0x2c088]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417bf8:	mov    rdi,QWORD PTR [rax]
  417bfb:	lea    rdx,[rip+0x1de51]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  417c02:	mov    esi,0x1
  417c07:	lea    r9,[rip+0x2a8e2]        # 4424f0 <_IO_stdin_used@@Base+0x154f0>
  417c0e:	mov    r8d,0x196
  417c14:	xor    eax,eax
  417c16:	call   4053e0 <__fprintf_chk@plt>
  417c1b:	lea    rcx,[rip+0x2d6ee]        # 445310 <_IO_stdin_used@@Base+0x18310>
  417c22:	mov    edx,0x196
  417c27:	lea    rsi,[rip+0x2c052]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417c2e:	lea    rdi,[rip+0x1eee4]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  417c35:	call   4052e0 <__assert_fail@plt>
  417c3a:	mov    rax,QWORD PTR [rip+0x393a7]        # 450fe8 <stderr@GLIBC_2.2.5>
  417c41:	lea    rcx,[rip+0x2c038]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417c48:	mov    rdi,QWORD PTR [rax]
  417c4b:	lea    rdx,[rip+0x1de01]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  417c52:	mov    esi,0x1
  417c57:	lea    r9,[rip+0x2c9d2]        # 444630 <_IO_stdin_used@@Base+0x17630>
  417c5e:	mov    r8d,0x1e3
  417c64:	xor    eax,eax
  417c66:	call   4053e0 <__fprintf_chk@plt>
  417c6b:	lea    rcx,[rip+0x2d69e]        # 445310 <_IO_stdin_used@@Base+0x18310>
  417c72:	mov    edx,0x1e3
  417c77:	lea    rsi,[rip+0x2c002]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417c7e:	lea    rdi,[rip+0x1ee94]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  417c85:	call   4052e0 <__assert_fail@plt>
  417c8a:	mov    rax,QWORD PTR [rip+0x39357]        # 450fe8 <stderr@GLIBC_2.2.5>
  417c91:	lea    rcx,[rip+0x2bfe8]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417c98:	mov    rdi,QWORD PTR [rax]
  417c9b:	lea    rdx,[rip+0x1ddb1]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  417ca2:	mov    esi,0x1
  417ca7:	lea    r9,[rip+0x2cada]        # 444788 <_IO_stdin_used@@Base+0x17788>
  417cae:	mov    r8d,0x1f8
  417cb4:	xor    eax,eax
  417cb6:	call   4053e0 <__fprintf_chk@plt>
  417cbb:	lea    rcx,[rip+0x2d64e]        # 445310 <_IO_stdin_used@@Base+0x18310>
  417cc2:	mov    edx,0x1f8
  417cc7:	lea    rsi,[rip+0x2bfb2]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417cce:	lea    rdi,[rip+0x1ee44]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  417cd5:	call   4052e0 <__assert_fail@plt>
  417cda:	mov    rax,QWORD PTR [rip+0x39307]        # 450fe8 <stderr@GLIBC_2.2.5>
  417ce1:	lea    rcx,[rip+0x2bf98]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417ce8:	mov    rdi,QWORD PTR [rax]
  417ceb:	lea    rdx,[rip+0x1dd61]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  417cf2:	mov    esi,0x1
  417cf7:	lea    r9,[rip+0x2c54a]        # 444248 <_IO_stdin_used@@Base+0x17248>
  417cfe:	mov    r8d,0x169
  417d04:	xor    eax,eax
  417d06:	call   4053e0 <__fprintf_chk@plt>
  417d0b:	lea    rcx,[rip+0x2d5fe]        # 445310 <_IO_stdin_used@@Base+0x18310>
  417d12:	mov    edx,0x169
  417d17:	lea    rsi,[rip+0x2bf62]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417d1e:	lea    rdi,[rip+0x1edf4]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  417d25:	call   4052e0 <__assert_fail@plt>
  417d2a:	nop    WORD PTR [rax+rax*1+0x0]
  417d30:	mov    rax,QWORD PTR [rip+0x392b1]        # 450fe8 <stderr@GLIBC_2.2.5>
  417d37:	lea    rcx,[rip+0x2bf42]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417d3e:	mov    rdi,QWORD PTR [rax]
  417d41:	lea    rdx,[rip+0x1dd0b]        # 435a53 <_IO_stdin_used@@Base+0x8a53>
  417d48:	mov    esi,0x1
  417d4d:	lea    r9,[rip+0x2cc04]        # 444958 <_IO_stdin_used@@Base+0x17958>
  417d54:	mov    r8d,0x21f
  417d5a:	xor    eax,eax
  417d5c:	call   4053e0 <__fprintf_chk@plt>
  417d61:	lea    rcx,[rip+0x2d5a8]        # 445310 <_IO_stdin_used@@Base+0x18310>
  417d68:	mov    edx,0x21f
  417d6d:	lea    rsi,[rip+0x2bf0c]        # 443c80 <_IO_stdin_used@@Base+0x16c80>
  417d74:	lea    rdi,[rip+0x1ed9e]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  417d7b:	call   4052e0 <__assert_fail@plt>
  417d80:	call   4052c0 <__stack_chk_fail@plt>
  417d85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000417d90 <__flatcc_fb_gen_c_json_printer@@Base>:
  417d90:	endbr64 
  417d94:	push   r15
  417d96:	lea    rdx,[rip+0x2ccdb]        # 444a78 <_IO_stdin_used@@Base+0x17a78>
  417d9d:	mov    esi,0x1
  417da2:	push   r14
  417da4:	push   r13
  417da6:	push   r12
  417da8:	push   rbp
  417da9:	push   rbx
  417daa:	mov    rbx,rdi
  417dad:	sub    rsp,0xf8
  417db4:	mov    rax,QWORD PTR fs:0x28
  417dbd:	mov    QWORD PTR [rsp+0xe8],rax
  417dc5:	xor    eax,eax
  417dc7:	mov    rax,QWORD PTR [rdi+0xd8]
  417dce:	mov    rdi,QWORD PTR [rdi+0xd0]
  417dd5:	mov    rcx,QWORD PTR [rax+0x118]
  417ddc:	xor    eax,eax
  417dde:	mov    r8,rcx
  417de1:	call   4053e0 <__fprintf_chk@plt>
  417de6:	mov    rdi,QWORD PTR [rbx+0xd0]
  417ded:	lea    rdx,[rip+0x17834]        # 42f628 <_IO_stdin_used@@Base+0x2628>
  417df4:	mov    esi,0x1
  417df9:	xor    eax,eax
  417dfb:	call   4053e0 <__fprintf_chk@plt>
  417e00:	mov    rdi,QWORD PTR [rbx+0xd0]
  417e07:	lea    rdx,[rip+0x2cca2]        # 444ab0 <_IO_stdin_used@@Base+0x17ab0>
  417e0e:	mov    esi,0x1
  417e13:	xor    eax,eax
  417e15:	call   4053e0 <__fprintf_chk@plt>
  417e1a:	lea    rsi,[rip+0x1642b]        # 42e24c <_IO_stdin_used@@Base+0x124c>
  417e21:	mov    rdi,rbx
  417e24:	lea    rdx,[rip+0x2d338]        # 445163 <_IO_stdin_used@@Base+0x18163>
  417e2b:	call   406620 <__flatcc_fb_gen_c_includes@@Base>
  417e30:	mov    rax,QWORD PTR [rbx+0xe0]
  417e37:	mov    rdi,QWORD PTR [rbx+0xd0]
  417e3e:	mov    esi,DWORD PTR [rax+0xac]
  417e44:	test   esi,esi
  417e46:	jne    4181d0 <__flatcc_fb_gen_c_json_printer@@Base+0x440>
  417e4c:	lea    rdx,[rip+0x2d2ca]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  417e53:	mov    esi,0x1
  417e58:	xor    eax,eax
  417e5a:	call   4053e0 <__fprintf_chk@plt>
  417e5f:	mov    rdx,QWORD PTR [rbx+0xd8]
  417e66:	mov    rbp,rsp
  417e69:	mov    rsi,QWORD PTR [rdx+0x58]
  417e6d:	mov    ecx,0x1d
  417e72:	xor    eax,eax
  417e74:	mov    rdi,rbp
  417e77:	rep stos QWORD PTR es:[rdi],rax
  417e7a:	test   rsi,rsi
  417e7d:	je     417e8a <__flatcc_fb_gen_c_json_printer@@Base+0xfa>
  417e7f:	cmp    WORD PTR [rsi+0x10],0x1
  417e84:	jbe    418210 <__flatcc_fb_gen_c_json_printer@@Base+0x480>
  417e8a:	mov    r12,QWORD PTR [rdx+0x40]
  417e8e:	lea    r13,[rip+0x2cfc3]        # 444e58 <_IO_stdin_used@@Base+0x17e58>
  417e95:	test   r12,r12
  417e98:	jne    417edf <__flatcc_fb_gen_c_json_printer@@Base+0x14f>
  417e9a:	jmp    417f2a <__flatcc_fb_gen_c_json_printer@@Base+0x19a>
  417e9f:	nop
  417ea0:	cmp    ax,0x4
  417ea4:	jne    417ed6 <__flatcc_fb_gen_c_json_printer@@Base+0x146>
  417ea6:	mov    rdi,QWORD PTR [r12+0x18]
  417eab:	mov    rdx,rbp
  417eae:	mov    rsi,r12
  417eb1:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  417eb6:	mov    rdi,QWORD PTR [rbx+0xd0]
  417ebd:	mov    r8,rbp
  417ec0:	mov    rcx,rbp
  417ec3:	lea    rdx,[rip+0x2ce56]        # 444d20 <_IO_stdin_used@@Base+0x17d20>
  417eca:	mov    esi,0x1
  417ecf:	xor    eax,eax
  417ed1:	call   4053e0 <__fprintf_chk@plt>
  417ed6:	mov    r12,QWORD PTR [r12]
  417eda:	test   r12,r12
  417edd:	je     417f2a <__flatcc_fb_gen_c_json_printer@@Base+0x19a>
  417edf:	movzx  eax,WORD PTR [r12+0x10]
  417ee5:	cmp    ax,0x1
  417ee9:	je     4181a0 <__flatcc_fb_gen_c_json_printer@@Base+0x410>
  417eef:	test   ax,ax
  417ef2:	jne    417ea0 <__flatcc_fb_gen_c_json_printer@@Base+0x110>
  417ef4:	mov    rdi,QWORD PTR [r12+0x18]
  417ef9:	mov    rsi,r12
  417efc:	mov    rdx,rbp
  417eff:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  417f04:	mov    rdi,QWORD PTR [rbx+0xd0]
  417f0b:	mov    rcx,rbp
  417f0e:	lea    rdx,[rip+0x2ced3]        # 444de8 <_IO_stdin_used@@Base+0x17de8>
  417f15:	mov    esi,0x1
  417f1a:	xor    eax,eax
  417f1c:	call   4053e0 <__fprintf_chk@plt>
  417f21:	mov    r12,QWORD PTR [r12]
  417f25:	test   r12,r12
  417f28:	jne    417edf <__flatcc_fb_gen_c_json_printer@@Base+0x14f>
  417f2a:	mov    rdi,QWORD PTR [rbx+0xd0]
  417f31:	lea    rdx,[rip+0x2d1e5]        # 44511d <_IO_stdin_used@@Base+0x1811d>
  417f38:	mov    esi,0x1
  417f3d:	xor    eax,eax
  417f3f:	call   4053e0 <__fprintf_chk@plt>
  417f44:	mov    rax,QWORD PTR [rbx+0xd8]
  417f4b:	mov    r12,QWORD PTR [rax+0x40]
  417f4f:	test   r12,r12
  417f52:	jne    417f69 <__flatcc_fb_gen_c_json_printer@@Base+0x1d9>
  417f54:	jmp    41811d <__flatcc_fb_gen_c_json_printer@@Base+0x38d>
  417f59:	nop    DWORD PTR [rax+0x0]
  417f60:	mov    r12,QWORD PTR [r12]
  417f64:	test   r12,r12
  417f67:	je     417f86 <__flatcc_fb_gen_c_json_printer@@Base+0x1f6>
  417f69:	cmp    WORD PTR [r12+0x10],0x3
  417f70:	jne    417f60 <__flatcc_fb_gen_c_json_printer@@Base+0x1d0>
  417f72:	mov    rsi,r12
  417f75:	mov    rdi,rbx
  417f78:	call   416c30 <__flatcc_fb_gen_c_json_parser@@Base+0x17a0>
  417f7d:	mov    r12,QWORD PTR [r12]
  417f81:	test   r12,r12
  417f84:	jne    417f69 <__flatcc_fb_gen_c_json_printer@@Base+0x1d9>
  417f86:	mov    rax,QWORD PTR [rbx+0xd8]
  417f8d:	mov    r12,QWORD PTR [rax+0x40]
  417f91:	test   r12,r12
  417f94:	je     41811d <__flatcc_fb_gen_c_json_printer@@Base+0x38d>
  417f9a:	lea    r15,[rip+0x2cf7f]        # 444f20 <_IO_stdin_used@@Base+0x17f20>
  417fa1:	jmp    417fb5 <__flatcc_fb_gen_c_json_printer@@Base+0x225>
  417fa3:	nop    DWORD PTR [rax+rax*1+0x0]
  417fa8:	mov    r12,QWORD PTR [r12]
  417fac:	test   r12,r12
  417faf:	je     418093 <__flatcc_fb_gen_c_json_printer@@Base+0x303>
  417fb5:	cmp    WORD PTR [r12+0x10],0x4
  417fbc:	jne    417fa8 <__flatcc_fb_gen_c_json_printer@@Base+0x218>
  417fbe:	xor    eax,eax
  417fc0:	mov    ecx,0x1d
  417fc5:	mov    rdi,rbp
  417fc8:	rep stos QWORD PTR es:[rdi],rax
  417fcb:	mov    rdx,rbp
  417fce:	mov    rsi,r12
  417fd1:	lea    r14,[rbx+0xd0]
  417fd8:	mov    rdi,QWORD PTR [r12+0x18]
  417fdd:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  417fe2:	mov    rdi,QWORD PTR [rbx+0xd0]
  417fe9:	mov    rcx,rbp
  417fec:	lea    rdx,[rip+0x2ceb5]        # 444ea8 <_IO_stdin_used@@Base+0x17ea8>
  417ff3:	mov    esi,0x1
  417ff8:	xor    eax,eax
  417ffa:	call   4053e0 <__fprintf_chk@plt>
  417fff:	mov    r13,QWORD PTR [r12+0x28]
  418004:	mov    rdi,QWORD PTR [rbx+0xd0]
  41800b:	test   r13,r13
  41800e:	je     41804e <__flatcc_fb_gen_c_json_printer@@Base+0x2be>
  418010:	cmp    WORD PTR [r13+0x28],0x0
  418016:	je     418045 <__flatcc_fb_gen_c_json_printer@@Base+0x2b5>
  418018:	mov    rax,QWORD PTR [r13+0x8]
  41801c:	sub    rsp,0x8
  418020:	mov    r8,QWORD PTR [rax+0x8]
  418024:	mov    rcx,QWORD PTR [r13+0x48]
  418028:	push   r8
  41802a:	mov    r9,QWORD PTR [rax]
  41802d:	mov    rdx,r15
  418030:	mov    esi,0x1
  418035:	xor    eax,eax
  418037:	call   4053e0 <__fprintf_chk@plt>
  41803c:	pop    rdx
  41803d:	mov    rdi,QWORD PTR [rbx+0xd0]
  418044:	pop    rcx
  418045:	mov    r13,QWORD PTR [r13+0x0]
  418049:	test   r13,r13
  41804c:	jne    418010 <__flatcc_fb_gen_c_json_printer@@Base+0x280>
  41804e:	lea    rdx,[rip+0x2cf23]        # 444f78 <_IO_stdin_used@@Base+0x17f78>
  418055:	mov    esi,0x1
  41805a:	xor    eax,eax
  41805c:	call   4053e0 <__fprintf_chk@plt>
  418061:	mov    rdi,QWORD PTR [rbx+0xd0]
  418068:	lea    rdx,[rip+0x2d0a6]        # 445115 <_IO_stdin_used@@Base+0x18115>
  41806f:	mov    esi,0x1
  418074:	xor    eax,eax
  418076:	call   4053e0 <__fprintf_chk@plt>
  41807b:	mov    rsi,r12
  41807e:	mov    rdi,r14
  418081:	call   4166a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
  418086:	mov    r12,QWORD PTR [r12]
  41808a:	test   r12,r12
  41808d:	jne    417fb5 <__flatcc_fb_gen_c_json_printer@@Base+0x225>
  418093:	mov    rax,QWORD PTR [rbx+0xd8]
  41809a:	mov    r12,QWORD PTR [rax+0x40]
  41809e:	test   r12,r12
  4180a1:	je     41811d <__flatcc_fb_gen_c_json_printer@@Base+0x38d>
  4180a3:	lea    r13,[rbx+0xd0]
  4180aa:	jmp    4180b9 <__flatcc_fb_gen_c_json_printer@@Base+0x329>
  4180ac:	nop    DWORD PTR [rax+0x0]
  4180b0:	mov    r12,QWORD PTR [r12]
  4180b4:	test   r12,r12
  4180b7:	je     4180d6 <__flatcc_fb_gen_c_json_printer@@Base+0x346>
  4180b9:	cmp    WORD PTR [r12+0x10],0x1
  4180c0:	jne    4180b0 <__flatcc_fb_gen_c_json_printer@@Base+0x320>
  4180c2:	mov    rsi,r12
  4180c5:	mov    rdi,r13
  4180c8:	call   4168e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
  4180cd:	mov    r12,QWORD PTR [r12]
  4180d1:	test   r12,r12
  4180d4:	jne    4180b9 <__flatcc_fb_gen_c_json_printer@@Base+0x329>
  4180d6:	mov    rax,QWORD PTR [rbx+0xd8]
  4180dd:	mov    r12,QWORD PTR [rax+0x40]
  4180e1:	test   r12,r12
  4180e4:	je     41811d <__flatcc_fb_gen_c_json_printer@@Base+0x38d>
  4180e6:	lea    r13,[rbx+0xd0]
  4180ed:	jmp    4180f9 <__flatcc_fb_gen_c_json_printer@@Base+0x369>
  4180ef:	nop
  4180f0:	mov    r12,QWORD PTR [r12]
  4180f4:	test   r12,r12
  4180f7:	je     418116 <__flatcc_fb_gen_c_json_printer@@Base+0x386>
  4180f9:	cmp    WORD PTR [r12+0x10],0x0
  418100:	jne    4180f0 <__flatcc_fb_gen_c_json_printer@@Base+0x360>
  418102:	mov    rsi,r12
  418105:	mov    rdi,r13
  418108:	call   4172d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
  41810d:	mov    r12,QWORD PTR [r12]
  418111:	test   r12,r12
  418114:	jne    4180f9 <__flatcc_fb_gen_c_json_printer@@Base+0x369>
  418116:	mov    rax,QWORD PTR [rbx+0xd8]
  41811d:	mov    rsi,QWORD PTR [rax+0x58]
  418121:	test   rsi,rsi
  418124:	je     418131 <__flatcc_fb_gen_c_json_printer@@Base+0x3a1>
  418126:	cmp    WORD PTR [rsi+0x10],0x1
  41812b:	jbe    418260 <__flatcc_fb_gen_c_json_printer@@Base+0x4d0>
  418131:	mov    rax,QWORD PTR [rbx+0xe0]
  418138:	mov    rdi,QWORD PTR [rbx+0xd0]
  41813f:	mov    eax,DWORD PTR [rax+0xac]
  418145:	test   eax,eax
  418147:	jne    4181f0 <__flatcc_fb_gen_c_json_printer@@Base+0x460>
  41814d:	mov    rax,QWORD PTR [rbx+0xd8]
  418154:	lea    rdx,[rip+0x2cf7d]        # 4450d8 <_IO_stdin_used@@Base+0x180d8>
  41815b:	mov    rcx,QWORD PTR [rax+0x118]
  418162:	mov    esi,0x1
  418167:	xor    eax,eax
  418169:	call   4053e0 <__fprintf_chk@plt>
  41816e:	xor    eax,eax
  418170:	mov    rcx,QWORD PTR [rsp+0xe8]
  418178:	xor    rcx,QWORD PTR fs:0x28
  418181:	jne    41832b <__flatcc_fb_gen_c_json_printer@@Base+0x59b>
  418187:	add    rsp,0xf8
  41818e:	pop    rbx
  41818f:	pop    rbp
  418190:	pop    r12
  418192:	pop    r13
  418194:	pop    r14
  418196:	pop    r15
  418198:	ret    
  418199:	nop    DWORD PTR [rax+0x0]
  4181a0:	mov    rdi,QWORD PTR [r12+0x18]
  4181a5:	mov    rdx,rbp
  4181a8:	mov    rsi,r12
  4181ab:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  4181b0:	mov    rdi,QWORD PTR [rbx+0xd0]
  4181b7:	mov    rcx,rbp
  4181ba:	mov    rdx,r13
  4181bd:	mov    esi,0x1
  4181c2:	xor    eax,eax
  4181c4:	call   4053e0 <__fprintf_chk@plt>
  4181c9:	jmp    417ed6 <__flatcc_fb_gen_c_json_printer@@Base+0x146>
  4181ce:	xchg   ax,ax
  4181d0:	lea    rdx,[rip+0x17569]        # 42f740 <_IO_stdin_used@@Base+0x2740>
  4181d7:	mov    esi,0x1
  4181dc:	xor    eax,eax
  4181de:	call   4053e0 <__fprintf_chk@plt>
  4181e3:	mov    rdi,QWORD PTR [rbx+0xd0]
  4181ea:	jmp    417e4c <__flatcc_fb_gen_c_json_printer@@Base+0xbc>
  4181ef:	nop
  4181f0:	lea    rdx,[rip+0x1d3f9]        # 4355f0 <_IO_stdin_used@@Base+0x85f0>
  4181f7:	mov    esi,0x1
  4181fc:	xor    eax,eax
  4181fe:	call   4053e0 <__fprintf_chk@plt>
  418203:	mov    rdi,QWORD PTR [rbx+0xd0]
  41820a:	jmp    41814d <__flatcc_fb_gen_c_json_printer@@Base+0x3bd>
  41820f:	nop
  418210:	mov    rdi,QWORD PTR [rbx+0xd0]
  418217:	lea    rdx,[rip+0x2c8c2]        # 444ae0 <_IO_stdin_used@@Base+0x17ae0>
  41821e:	mov    esi,0x1
  418223:	call   4053e0 <__fprintf_chk@plt>
  418228:	mov    rax,QWORD PTR [rbx+0xd8]
  41822f:	mov    rdi,QWORD PTR [rbx+0xd0]
  418236:	mov    rcx,QWORD PTR [rax+0x110]
  41823d:	lea    rdx,[rip+0x2ca84]        # 444cc8 <_IO_stdin_used@@Base+0x17cc8>
  418244:	mov    esi,0x1
  418249:	xor    eax,eax
  41824b:	call   4053e0 <__fprintf_chk@plt>
  418250:	mov    rdx,QWORD PTR [rbx+0xd8]
  418257:	jmp    417e8a <__flatcc_fb_gen_c_json_printer@@Base+0xfa>
  41825c:	nop    DWORD PTR [rax+0x0]
  418260:	xor    eax,eax
  418262:	mov    ecx,0x1d
  418267:	mov    rdi,rbp
  41826a:	rep stos QWORD PTR es:[rdi],rax
  41826d:	mov    rdx,rbp
  418270:	mov    rdi,QWORD PTR [rsi+0x18]
  418274:	call   406890 <__flatcc_fb_scoped_symbol_name@@Base>
  418279:	mov    rax,QWORD PTR [rbx+0xd8]
  418280:	mov    rdi,QWORD PTR [rbx+0xd0]
  418287:	mov    rcx,QWORD PTR [rax+0x110]
  41828e:	lea    rdx,[rip+0x2cd33]        # 444fc8 <_IO_stdin_used@@Base+0x17fc8>
  418295:	mov    esi,0x1
  41829a:	xor    eax,eax
  41829c:	call   4053e0 <__fprintf_chk@plt>
  4182a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4182a8:	xor    eax,eax
  4182aa:	mov    rcx,rbp
  4182ad:	lea    rdx,[rip+0x2cd6c]        # 445020 <_IO_stdin_used@@Base+0x18020>
  4182b4:	mov    esi,0x1
  4182b9:	call   4053e0 <__fprintf_chk@plt>
  4182be:	mov    rax,QWORD PTR [rbx+0xd8]
  4182c5:	cmp    WORD PTR [rax+0x20],0x2
  4182ca:	je     418308 <__flatcc_fb_gen_c_json_printer@@Base+0x578>
  4182cc:	mov    rdi,QWORD PTR [rbx+0xd0]
  4182d3:	lea    rdx,[rip+0x2cea3]        # 44517d <_IO_stdin_used@@Base+0x1817d>
  4182da:	mov    esi,0x1
  4182df:	xor    eax,eax
  4182e1:	call   4053e0 <__fprintf_chk@plt>
  4182e6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4182ed:	lea    rdx,[rip+0x2ce27]        # 44511b <_IO_stdin_used@@Base+0x1811b>
  4182f4:	mov    esi,0x1
  4182f9:	xor    eax,eax
  4182fb:	call   4053e0 <__fprintf_chk@plt>
  418300:	jmp    418131 <__flatcc_fb_gen_c_json_printer@@Base+0x3a1>
  418305:	nop    DWORD PTR [rax]
  418308:	mov    ecx,DWORD PTR [rax+0x18]
  41830b:	mov    r8,QWORD PTR [rax+0x10]
  41830f:	mov    rdi,QWORD PTR [rbx+0xd0]
  418316:	lea    rdx,[rip+0x2ce56]        # 445173 <_IO_stdin_used@@Base+0x18173>
  41831d:	mov    esi,0x1
  418322:	xor    eax,eax
  418324:	call   4053e0 <__fprintf_chk@plt>
  418329:	jmp    4182e6 <__flatcc_fb_gen_c_json_printer@@Base+0x556>
  41832b:	call   4052c0 <__stack_chk_fail@plt>
  418330:	endbr64 
  418334:	mov    rdx,rdi
  418337:	lea    rdi,[rsi+0x8]
  41833b:	lea    rsi,[rip+0x35e]        # 4186a0 <__flatcc_fb_gen_c_json_printer@@Base+0x910>
  418342:	jmp    41b580 <fb_symbol_table_visit@@Base>
  418347:	nop    WORD PTR [rax+rax*1+0x0]
  418350:	endbr64 
  418354:	mov    rdx,rdi
  418357:	lea    rdi,[rsi+0x8]
  41835b:	lea    rsi,[rip+0x44e]        # 4187b0 <__flatcc_fb_gen_c_json_printer@@Base+0xa20>
  418362:	jmp    41b580 <fb_symbol_table_visit@@Base>
  418367:	nop    WORD PTR [rax+rax*1+0x0]
  418370:	push   rbx
  418371:	mov    rbx,rdi
  418374:	mov    rdi,QWORD PTR [rdi+0x18]
  418378:	test   rdi,rdi
  41837b:	je     418382 <__flatcc_fb_gen_c_json_printer@@Base+0x5f2>
  41837d:	call   405230 <free@plt>
  418382:	mov    rdi,QWORD PTR [rbx+0x20]
  418386:	test   rdi,rdi
  418389:	je     418390 <__flatcc_fb_gen_c_json_printer@@Base+0x600>
  41838b:	call   405230 <free@plt>
  418390:	mov    rdi,QWORD PTR [rbx+0x28]
  418394:	test   rdi,rdi
  418397:	je     41839e <__flatcc_fb_gen_c_json_printer@@Base+0x60e>
  418399:	call   405230 <free@plt>
  41839e:	vpxor  xmm0,xmm0,xmm0
  4183a2:	vmovaps XMMWORD PTR [rbx],xmm0
  4183a6:	vmovaps XMMWORD PTR [rbx+0x10],xmm0
  4183ab:	vmovaps XMMWORD PTR [rbx+0x20],xmm0
  4183b0:	vmovaps XMMWORD PTR [rbx+0x30],xmm0
  4183b5:	vmovaps XMMWORD PTR [rbx+0x40],xmm0
  4183ba:	pop    rbx
  4183bb:	ret    
  4183bc:	nop    DWORD PTR [rax+0x0]
  4183c0:	push   rbp
  4183c1:	movsxd rsi,esi
  4183c4:	mov    rbp,rsi
  4183c7:	push   rbx
  4183c8:	lea    rcx,[rip+0x51]        # 418420 <__flatcc_fb_gen_c_json_printer@@Base+0x690>
  4183cf:	mov    edx,0x10
  4183d4:	sub    rsp,0x8
  4183d8:	mov    rbx,rdi
  4183db:	call   405270 <qsort@plt>
  4183e0:	test   ebp,ebp
  4183e2:	jle    41840e <__flatcc_fb_gen_c_json_printer@@Base+0x67e>
  4183e4:	lea    ecx,[rbp-0x1]
  4183e7:	xor    eax,eax
  4183e9:	jmp    4183f3 <__flatcc_fb_gen_c_json_printer@@Base+0x663>
  4183eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4183f0:	mov    rax,rdx
  4183f3:	mov    rdx,rax
  4183f6:	shl    rdx,0x4
  4183fa:	mov    rdx,QWORD PTR [rbx+rdx*1]
  4183fe:	mov    QWORD PTR [rdx+0xc8],rax
  418405:	lea    rdx,[rax+0x1]
  418409:	cmp    rcx,rax
  41840c:	jne    4183f0 <__flatcc_fb_gen_c_json_printer@@Base+0x660>
  41840e:	add    rsp,0x8
  418412:	pop    rbx
  418413:	pop    rbp
  418414:	ret    
  418415:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  418420:	endbr64 
  418424:	mov    rsi,QWORD PTR [rsi+0x8]
  418428:	mov    rdi,QWORD PTR [rdi+0x8]
  41842c:	jmp    405330 <strcmp@plt>
  418431:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41843c:	nop    DWORD PTR [rax+0x0]
  418440:	push   r13
  418442:	push   r12
  418444:	push   rbp
  418445:	push   rbx
  418446:	mov    rbx,rdi
  418449:	sub    rsp,0x8
  41844d:	cmp    WORD PTR [rsp+0x40],0xf
  418453:	ja     418618 <__flatcc_fb_gen_c_json_printer@@Base+0x888>
  418459:	movzx  eax,WORD PTR [rsp+0x40]
  41845e:	lea    rdx,[rip+0x2d4ab]        # 445910 <_IO_stdin_used@@Base+0x18910>
  418465:	movsxd rax,DWORD PTR [rdx+rax*4]
  418469:	add    rax,rdx
  41846c:	notrack jmp rax
  41846f:	nop
  418470:	mov    ebp,0xd
  418475:	mov    r13d,0xffffffff
  41847b:	mov    r12d,0xe
  418481:	nop    DWORD PTR [rax+0x0]
  418488:	mov    esi,0x3
  41848d:	mov    rdi,rbx
  418490:	call   4292d0 <flatcc_builder_start_table@@Base>
  418495:	test   eax,eax
  418497:	jne    418655 <__flatcc_fb_gen_c_json_printer@@Base+0x8c5>
  41849d:	cmp    r13d,0xffffffff
  4184a1:	je     4184c6 <__flatcc_fb_gen_c_json_printer@@Base+0x736>
  4184a3:	mov    ecx,0x4
  4184a8:	mov    edx,0x4
  4184ad:	mov    esi,0x2
  4184b2:	mov    rdi,rbx
  4184b5:	call   42ab50 <flatcc_builder_table_add@@Base>
  4184ba:	test   rax,rax
  4184bd:	je     418655 <__flatcc_fb_gen_c_json_printer@@Base+0x8c5>
  4184c3:	mov    DWORD PTR [rax],r13d
  4184c6:	test   r12b,r12b
  4184c9:	je     4184eb <__flatcc_fb_gen_c_json_printer@@Base+0x75b>
  4184cb:	xor    esi,esi
  4184cd:	mov    ecx,0x1
  4184d2:	mov    edx,0x1
  4184d7:	mov    rdi,rbx
  4184da:	call   42ab50 <flatcc_builder_table_add@@Base>
  4184df:	test   rax,rax
  4184e2:	je     418655 <__flatcc_fb_gen_c_json_printer@@Base+0x8c5>
  4184e8:	mov    BYTE PTR [rax],r12b
  4184eb:	test   bpl,bpl
  4184ee:	je     418513 <__flatcc_fb_gen_c_json_printer@@Base+0x783>
  4184f0:	mov    ecx,0x1
  4184f5:	mov    edx,0x1
  4184fa:	mov    esi,0x1
  4184ff:	mov    rdi,rbx
  418502:	call   42ab50 <flatcc_builder_table_add@@Base>
  418507:	test   rax,rax
  41850a:	je     418655 <__flatcc_fb_gen_c_json_printer@@Base+0x8c5>
  418510:	mov    BYTE PTR [rax],bpl
  418513:	xor    edx,edx
  418515:	lea    rsi,[rip+0x2d598]        # 445ab4 <_IO_stdin_used@@Base+0x18ab4>
  41851c:	mov    rdi,rbx
  41851f:	call   429bc0 <flatcc_builder_check_required@@Base>
  418524:	test   eax,eax
  418526:	je     418680 <__flatcc_fb_gen_c_json_printer@@Base+0x8f0>
  41852c:	add    rsp,0x8
  418530:	mov    rdi,rbx
  418533:	pop    rbx
  418534:	pop    rbp
  418535:	pop    r12
  418537:	pop    r13
  418539:	jmp    429c50 <flatcc_builder_end_table@@Base>
  41853e:	xchg   ax,ax
  418540:	mov    r13d,0xffffffff
  418546:	xor    ebp,ebp
  418548:	mov    r12d,0xd
  41854e:	jmp    418488 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  418553:	nop    DWORD PTR [rax+rax*1+0x0]
  418558:	mov    rdx,QWORD PTR [rsp+0x30]
  41855d:	movzx  eax,WORD PTR [rdx+0x10]
  418561:	mov    r13d,DWORD PTR [rdx+0xc8]
  418568:	cmp    ax,0x3
  41856c:	je     418678 <__flatcc_fb_gen_c_json_printer@@Base+0x8e8>
  418572:	ja     418630 <__flatcc_fb_gen_c_json_printer@@Base+0x8a0>
  418578:	mov    r12d,0xf
  41857e:	cmp    ax,0x1
  418582:	ja     418640 <__flatcc_fb_gen_c_json_printer@@Base+0x8b0>
  418588:	xor    ebp,ebp
  41858a:	jmp    418488 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  41858f:	nop
  418590:	mov    eax,DWORD PTR [rsp+0x30]
  418594:	mov    r13d,0xffffffff
  41859a:	dec    eax
  41859c:	cmp    eax,0xa
  41859f:	ja     41861e <__flatcc_fb_gen_c_json_printer@@Base+0x88e>
  4185a1:	lea    rdx,[rip+0x2d3a8]        # 445950 <_IO_stdin_used@@Base+0x18950>
  4185a8:	movzx  r12d,BYTE PTR [rdx+rax*1]
  4185ad:	xor    ebp,ebp
  4185af:	jmp    418488 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  4185b4:	nop    DWORD PTR [rax+0x0]
  4185b8:	mov    rax,QWORD PTR [rsp+0x30]
  4185bd:	movzx  edx,WORD PTR [rax+0x10]
  4185c1:	mov    r13d,DWORD PTR [rax+0xc8]
  4185c8:	cmp    dx,0x1
  4185cc:	jbe    418668 <__flatcc_fb_gen_c_json_printer@@Base+0x8d8>
  4185d2:	cmp    dx,0x3
  4185d6:	jne    41861e <__flatcc_fb_gen_c_json_printer@@Base+0x88e>
  4185d8:	mov    eax,DWORD PTR [rax+0x48]
  4185db:	jmp    4185ea <__flatcc_fb_gen_c_json_printer@@Base+0x85a>
  4185dd:	nop    DWORD PTR [rax]
  4185e0:	mov    eax,DWORD PTR [rsp+0x30]
  4185e4:	mov    r13d,0xffffffff
  4185ea:	dec    eax
  4185ec:	xor    ebp,ebp
  4185ee:	mov    r12d,0xe
  4185f4:	cmp    eax,0xa
  4185f7:	ja     418488 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  4185fd:	lea    rdx,[rip+0x2d34c]        # 445950 <_IO_stdin_used@@Base+0x18950>
  418604:	movzx  ebp,BYTE PTR [rdx+rax*1]
  418608:	mov    r12d,0xe
  41860e:	jmp    418488 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  418613:	nop    DWORD PTR [rax+rax*1+0x0]
  418618:	mov    r13d,0xffffffff
  41861e:	xor    ebp,ebp
  418620:	xor    r12d,r12d
  418623:	jmp    418488 <__flatcc_fb_gen_c_json_printer@@Base+0x6f8>
  418628:	nop    DWORD PTR [rax+rax*1+0x0]
  418630:	mov    r12d,0x10
  418636:	cmp    ax,0x4
  41863a:	je     418588 <__flatcc_fb_gen_c_json_printer@@Base+0x7f8>
  418640:	mov    esi,0x3
  418645:	mov    rdi,rbx
  418648:	call   4292d0 <flatcc_builder_start_table@@Base>
  41864d:	test   eax,eax
  41864f:	je     418513 <__flatcc_fb_gen_c_json_printer@@Base+0x783>
  418655:	add    rsp,0x8
  418659:	pop    rbx
  41865a:	pop    rbp
  41865b:	pop    r12
  41865d:	xor    eax,eax
  41865f:	pop    r13
  418661:	ret    
  418662:	nop    WORD PTR [rax+rax*1+0x0]
  418668:	mov    ebp,0xf
  41866d:	jmp    41847b <__flatcc_fb_gen_c_json_printer@@Base+0x6eb>
  418672:	nop    WORD PTR [rax+rax*1+0x0]
  418678:	mov    eax,DWORD PTR [rdx+0x48]
  41867b:	jmp    41859a <__flatcc_fb_gen_c_json_printer@@Base+0x80a>
  418680:	lea    rcx,[rip+0x2d3f9]        # 445a80 <_IO_stdin_used@@Base+0x18a80>
  418687:	mov    edx,0x17
  41868c:	lea    rsi,[rip+0x2ccf5]        # 445388 <_IO_stdin_used@@Base+0x18388>
  418693:	lea    rdi,[rip+0x2cd6e]        # 445408 <_IO_stdin_used@@Base+0x18408>
  41869a:	call   4052e0 <__assert_fail@plt>
  41869f:	nop
  4186a0:	endbr64 
  4186a4:	cmp    WORD PTR [rsi+0x10],0x4
  4186a9:	ja     418780 <__flatcc_fb_gen_c_json_printer@@Base+0x9f0>
  4186af:	push   r14
  4186b1:	push   r13
  4186b3:	push   r12
  4186b5:	mov    r12,rdi
  4186b8:	push   rbp
  4186b9:	mov    rbp,rsi
  4186bc:	push   rbx
  4186bd:	mov    rax,QWORD PTR [rdi+0x48]
  4186c1:	mov    rsi,QWORD PTR [rsi+0x20]
  4186c5:	lea    rdi,[rax+0x128]
  4186cc:	call   41adb0 <ptr_set_find_item@@Base>
  4186d1:	test   rax,rax
  4186d4:	je     418777 <__flatcc_fb_gen_c_json_printer@@Base+0x9e7>
  4186da:	mov    r13,QWORD PTR [r12+0x40]
  4186df:	mov    eax,DWORD PTR [r12]
  4186e3:	mov    rcx,r13
  4186e6:	test   eax,eax
  4186e8:	je     418728 <__flatcc_fb_gen_c_json_printer@@Base+0x998>
  4186ea:	mov    rax,QWORD PTR [rbp+0x18]
  4186ee:	mov    r14,QWORD PTR [rax]
  4186f1:	test   r14,r14
  4186f4:	je     418728 <__flatcc_fb_gen_c_json_printer@@Base+0x998>
  4186f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418700:	mov    rax,QWORD PTR [r14+0x8]
  418704:	mov    rdi,rcx
  418707:	movsxd rbx,DWORD PTR [rax+0x8]
  41870b:	mov    rsi,QWORD PTR [rax]
  41870e:	mov    rdx,rbx
  418711:	call   405350 <memcpy@plt>
  418716:	add    rbx,rax
  418719:	mov    BYTE PTR [rbx],0x2e
  41871c:	lea    rcx,[rbx+0x1]
  418720:	mov    r14,QWORD PTR [r14]
  418723:	test   r14,r14
  418726:	jne    418700 <__flatcc_fb_gen_c_json_printer@@Base+0x970>
  418728:	mov    rax,QWORD PTR [rbp+0x8]
  41872c:	mov    rdi,rcx
  41872f:	movsxd rbx,DWORD PTR [rax+0x8]
  418733:	mov    rsi,QWORD PTR [rax]
  418736:	mov    rdx,rbx
  418739:	call   405350 <memcpy@plt>
  41873e:	mov    rcx,rax
  418741:	add    rcx,rbx
  418744:	mov    BYTE PTR [rcx],0x0
  418747:	inc    rcx
  41874a:	mov    QWORD PTR [r12+0x40],rcx
  41874f:	movzx  eax,WORD PTR [rbp+0x10]
  418753:	cmp    ax,0x1
  418757:	jbe    418788 <__flatcc_fb_gen_c_json_printer@@Base+0x9f8>
  418759:	sub    eax,0x3
  41875c:	cmp    ax,0x1
  418760:	ja     418777 <__flatcc_fb_gen_c_json_printer@@Base+0x9e7>
  418762:	mov    rax,QWORD PTR [r12+0x38]
  418767:	mov    QWORD PTR [rax],rbp
  41876a:	mov    QWORD PTR [rax+0x8],r13
  41876e:	add    rax,0x10
  418772:	mov    QWORD PTR [r12+0x38],rax
  418777:	pop    rbx
  418778:	pop    rbp
  418779:	pop    r12
  41877b:	pop    r13
  41877d:	pop    r14
  41877f:	ret    
  418780:	ret    
  418781:	nop    DWORD PTR [rax+0x0]
  418788:	mov    rax,QWORD PTR [r12+0x30]
  41878d:	mov    QWORD PTR [rax],rbp
  418790:	mov    QWORD PTR [rax+0x8],r13
  418794:	add    rax,0x10
  418798:	mov    QWORD PTR [r12+0x30],rax
  41879d:	pop    rbx
  41879e:	pop    rbp
  41879f:	pop    r12
  4187a1:	pop    r13
  4187a3:	pop    r14
  4187a5:	ret    
  4187a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4187b0:	endbr64 
  4187b4:	cmp    WORD PTR [rsi+0x10],0x4
  4187b9:	ja     418850 <__flatcc_fb_gen_c_json_printer@@Base+0xac0>
  4187bf:	push   rbp
  4187c0:	mov    rbp,rdi
  4187c3:	push   rbx
  4187c4:	mov    rbx,rsi
  4187c7:	sub    rsp,0x8
  4187cb:	mov    rax,QWORD PTR [rdi+0x48]
  4187cf:	mov    rsi,QWORD PTR [rsi+0x20]
  4187d3:	lea    rdi,[rax+0x128]
  4187da:	call   41adb0 <ptr_set_find_item@@Base>
  4187df:	test   rax,rax
  4187e2:	je     418840 <__flatcc_fb_gen_c_json_printer@@Base+0xab0>
  4187e4:	mov    eax,DWORD PTR [rbp+0x0]
  4187e7:	xor    edx,edx
  4187e9:	test   eax,eax
  4187eb:	je     418815 <__flatcc_fb_gen_c_json_printer@@Base+0xa85>
  4187ed:	mov    rax,QWORD PTR [rbx+0x18]
  4187f1:	mov    rax,QWORD PTR [rax]
  4187f4:	test   rax,rax
  4187f7:	je     418815 <__flatcc_fb_gen_c_json_printer@@Base+0xa85>
  4187f9:	nop    DWORD PTR [rax+0x0]
  418800:	mov    rcx,QWORD PTR [rax+0x8]
  418804:	mov    rax,QWORD PTR [rax]
  418807:	mov    rcx,QWORD PTR [rcx+0x8]
  41880b:	lea    rdx,[rdx+rcx*1+0x1]
  418810:	test   rax,rax
  418813:	jne    418800 <__flatcc_fb_gen_c_json_printer@@Base+0xa70>
  418815:	mov    rcx,QWORD PTR [rbx+0x8]
  418819:	mov    rax,QWORD PTR [rbp+0x10]
  41881d:	add    rax,QWORD PTR [rcx+0x8]
  418821:	lea    rax,[rdx+rax*1+0x1]
  418826:	mov    QWORD PTR [rbp+0x10],rax
  41882a:	movzx  eax,WORD PTR [rbx+0x10]
  41882e:	cmp    ax,0x1
  418832:	jbe    418858 <__flatcc_fb_gen_c_json_printer@@Base+0xac8>
  418834:	sub    eax,0x3
  418837:	cmp    ax,0x1
  41883b:	ja     418840 <__flatcc_fb_gen_c_json_printer@@Base+0xab0>
  41883d:	inc    DWORD PTR [rbp+0x8]
  418840:	add    rsp,0x8
  418844:	pop    rbx
  418845:	pop    rbp
  418846:	ret    
  418847:	nop    WORD PTR [rax+rax*1+0x0]
  418850:	ret    
  418851:	nop    DWORD PTR [rax+0x0]
  418858:	inc    DWORD PTR [rbp+0x4]
  41885b:	add    rsp,0x8
  41885f:	pop    rbx
  418860:	pop    rbp
  418861:	ret    
  418862:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41886d:	nop    DWORD PTR [rax]
  418870:	push   r15
  418872:	vpxor  xmm0,xmm0,xmm0
  418876:	push   r14
  418878:	mov    r14,rdi
  41887b:	push   r13
  41887d:	push   r12
  41887f:	push   rbp
  418880:	push   rbx
  418881:	sub    rsp,0xc8
  418888:	mov    QWORD PTR [rsp+0x18],rdx
  41888d:	mov    QWORD PTR [rsp+0x8],rcx
  418892:	lea    rdx,[rsp+0x60]
  418897:	mov    r15,QWORD PTR [rcx+0x68]
  41889b:	mov    rax,QWORD PTR fs:0x28
  4188a4:	mov    QWORD PTR [rsp+0xb8],rax
  4188ac:	xor    eax,eax
  4188ae:	vmovups XMMWORD PTR [rsp+0x64],xmm0
  4188b4:	mov    DWORD PTR [rdx+0x44],0x0
  4188bb:	vmovups XMMWORD PTR [rdx+0x14],xmm0
  4188c0:	vmovups XMMWORD PTR [rdx+0x24],xmm0
  4188c5:	vmovups XMMWORD PTR [rdx+0x34],xmm0
  4188ca:	mov    DWORD PTR [rsp+0x60],esi
  4188ce:	mov    rdi,r15
  4188d1:	lea    rsi,[rip+0xfffffffffffffa78]        # 418350 <__flatcc_fb_gen_c_json_printer@@Base+0x5c0>
  4188d8:	mov    QWORD PTR [rsp+0x28],rdx
  4188dd:	mov    QWORD PTR [rsp+0xa8],rcx
  4188e5:	call   41c5f0 <fb_scope_table_visit@@Base>
  4188ea:	movsxd rdi,DWORD PTR [rsp+0x64]
  4188ef:	mov    esi,0x10
  4188f4:	mov    r13,rdi
  4188f7:	call   405320 <calloc@plt>
  4188fc:	movsxd rdi,DWORD PTR [rsp+0x68]
  418901:	mov    esi,0x10
  418906:	mov    r12,rax
  418909:	mov    DWORD PTR [rsp+0x10],edi
  41890d:	mov    QWORD PTR [rsp+0x78],rax
  418912:	call   405320 <calloc@plt>
  418917:	mov    rbx,QWORD PTR [rsp+0x70]
  41891c:	mov    rbp,rax
  41891f:	mov    rdi,rbx
  418922:	mov    QWORD PTR [rsp+0x80],rax
  41892a:	call   405360 <malloc@plt>
  41892f:	test   r13d,r13d
  418932:	mov    QWORD PTR [rsp+0x88],rax
  41893a:	mov    QWORD PTR [rsp+0x90],r12
  418942:	mov    QWORD PTR [rsp+0x98],rbp
  41894a:	mov    QWORD PTR [rsp+0xa0],rax
  418952:	mov    edx,DWORD PTR [rsp+0x10]
  418956:	jle    418961 <__flatcc_fb_gen_c_json_printer@@Base+0xbd1>
  418958:	test   r12,r12
  41895b:	je     419410 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
  418961:	test   rbp,rbp
  418964:	jne    41896e <__flatcc_fb_gen_c_json_printer@@Base+0xbde>
  418966:	test   edx,edx
  418968:	jg     419410 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
  41896e:	test   rbx,rbx
  418971:	je     41897c <__flatcc_fb_gen_c_json_printer@@Base+0xbec>
  418973:	test   rax,rax
  418976:	je     419410 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
  41897c:	mov    rdx,QWORD PTR [rsp+0x28]
  418981:	mov    rdi,r15
  418984:	lea    rsi,[rip+0xfffffffffffff9a5]        # 418330 <__flatcc_fb_gen_c_json_printer@@Base+0x5a0>
  41898b:	call   41c5f0 <fb_scope_table_visit@@Base>
  418990:	mov    esi,DWORD PTR [rsp+0x64]
  418994:	mov    rdi,QWORD PTR [rsp+0x78]
  418999:	xor    r15d,r15d
  41899c:	call   4183c0 <__flatcc_fb_gen_c_json_printer@@Base+0x630>
  4189a1:	mov    rdi,QWORD PTR [rsp+0x80]
  4189a9:	mov    esi,DWORD PTR [rsp+0x68]
  4189ad:	call   4183c0 <__flatcc_fb_gen_c_json_printer@@Base+0x630>
  4189b2:	movsxd rdi,DWORD PTR [rsp+0x64]
  4189b7:	test   edi,edi
  4189b9:	jg     4193f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1668>
  4189bf:	mov    rax,QWORD PTR [rsp+0x18]
  4189c4:	xor    ecx,ecx
  4189c6:	mov    edx,DWORD PTR [rax]
  4189c8:	test   edx,edx
  4189ca:	jne    4193e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1658>
  4189d0:	xor    edx,edx
  4189d2:	lea    rsi,[rip+0x2d0dd]        # 445ab6 <_IO_stdin_used@@Base+0x18ab6>
  4189d9:	mov    rdi,r14
  4189dc:	call   428630 <flatcc_builder_start_buffer@@Base>
  4189e1:	test   eax,eax
  4189e3:	jne    4189f2 <__flatcc_fb_gen_c_json_printer@@Base+0xc62>
  4189e5:	mov    esi,0x5
  4189ea:	mov    rdi,r14
  4189ed:	call   4292d0 <flatcc_builder_start_table@@Base>
  4189f2:	mov    rax,QWORD PTR [rsp+0x8]
  4189f7:	cmp    WORD PTR [rax+0x20],0x2
  4189fc:	je     419438 <__flatcc_fb_gen_c_json_printer@@Base+0x16a8>
  418a02:	mov    rax,QWORD PTR [rsp+0x8]
  418a07:	cmp    WORD PTR [rax+0x38],0x2
  418a0c:	je     419480 <__flatcc_fb_gen_c_json_printer@@Base+0x16f0>
  418a12:	mov    eax,DWORD PTR [rsp+0x64]
  418a16:	mov    ecx,eax
  418a18:	mov    DWORD PTR [rsp+0x3c],eax
  418a1c:	mov    rax,QWORD PTR [rsp+0x78]
  418a21:	test   ecx,ecx
  418a23:	jle    418cdd <__flatcc_fb_gen_c_json_printer@@Base+0xf4d>
  418a29:	mov    rbp,rax
  418a2c:	mov    eax,DWORD PTR [rsp+0x3c]
  418a30:	mov    QWORD PTR [rsp+0x30],r15
  418a35:	dec    eax
  418a37:	shl    rax,0x4
  418a3b:	lea    rax,[rbp+rax*1+0x10]
  418a40:	mov    QWORD PTR [rsp+0x50],rax
  418a45:	mov    QWORD PTR [rsp+0x58],r15
  418a4a:	mov    r13,rbp
  418a4d:	mov    r12,r14
  418a50:	mov    esi,0x5
  418a55:	mov    rdi,r12
  418a58:	mov    r15,QWORD PTR [r13+0x0]
  418a5c:	call   4292d0 <flatcc_builder_start_table@@Base>
  418a61:	mov    rsi,QWORD PTR [r13+0x8]
  418a65:	mov    rdi,r12
  418a68:	call   42a9c0 <flatcc_builder_create_string_str@@Base>
  418a6d:	mov    ebx,eax
  418a6f:	test   eax,eax
  418a71:	je     418a84 <__flatcc_fb_gen_c_json_printer@@Base+0xcf4>
  418a73:	xor    esi,esi
  418a75:	mov    rdi,r12
  418a78:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418a7d:	test   rax,rax
  418a80:	je     418a84 <__flatcc_fb_gen_c_json_printer@@Base+0xcf4>
  418a82:	mov    DWORD PTR [rax],ebx
  418a84:	mov    rdi,r12
  418a87:	call   429130 <flatcc_builder_start_offset_vector@@Base>
  418a8c:	mov    r14,QWORD PTR [r15+0x28]
  418a90:	xor    ebp,ebp
  418a92:	test   r14,r14
  418a95:	je     418c3a <__flatcc_fb_gen_c_json_printer@@Base+0xeaa>
  418a9b:	mov    QWORD PTR [rsp+0x20],r15
  418aa0:	mov    QWORD PTR [rsp+0x40],r13
  418aa5:	jmp    418c06 <__flatcc_fb_gen_c_json_printer@@Base+0xe76>
  418aaa:	nop    WORD PTR [rax+rax*1+0x0]
  418ab0:	mov    eax,r13d
  418ab3:	and    ax,0x80
  418ab7:	mov    ecx,r13d
  418aba:	shr    cl,0x7
  418abd:	cmp    ax,0x1
  418ac1:	sbb    eax,eax
  418ac3:	inc    eax
  418ac5:	mov    BYTE PTR [rsp+0x3b],cl
  418ac9:	mov    DWORD PTR [rsp+0x10],eax
  418acd:	mov    eax,r13d
  418ad0:	and    ax,0x4
  418ad4:	setne  r15b
  418ad8:	cmp    WORD PTR [r14+0x28],0xe
  418ade:	mov    WORD PTR [rsp+0x18],ax
  418ae3:	je     419250 <__flatcc_fb_gen_c_json_printer@@Base+0x14c0>
  418ae9:	mov    esi,0x9
  418aee:	mov    rdi,r12
  418af1:	call   4292d0 <flatcc_builder_start_table@@Base>
  418af6:	mov    rax,QWORD PTR [r14+0x8]
  418afa:	mov    rdi,r12
  418afd:	mov    rdx,QWORD PTR [rax+0x8]
  418b01:	mov    rsi,QWORD PTR [rax]
  418b04:	call   42a8a0 <flatcc_builder_create_string@@Base>
  418b09:	mov    ebx,eax
  418b0b:	test   eax,eax
  418b0d:	je     418b20 <__flatcc_fb_gen_c_json_printer@@Base+0xd90>
  418b0f:	xor    esi,esi
  418b11:	mov    rdi,r12
  418b14:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418b19:	test   rax,rax
  418b1c:	je     418b20 <__flatcc_fb_gen_c_json_printer@@Base+0xd90>
  418b1e:	mov    DWORD PTR [rax],ebx
  418b20:	sub    rsp,0x8
  418b24:	push   QWORD PTR [r14+0x28]
  418b28:	mov    rdi,r12
  418b2b:	push   QWORD PTR [r14+0x20]
  418b2f:	push   QWORD PTR [r14+0x18]
  418b33:	call   418440 <__flatcc_fb_gen_c_json_printer@@Base+0x6b0>
  418b38:	mov    ebx,eax
  418b3a:	add    rsp,0x20
  418b3e:	test   eax,eax
  418b40:	je     418b56 <__flatcc_fb_gen_c_json_printer@@Base+0xdc6>
  418b42:	mov    esi,0x1
  418b47:	mov    rdi,r12
  418b4a:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418b4f:	test   rax,rax
  418b52:	je     418b56 <__flatcc_fb_gen_c_json_printer@@Base+0xdc6>
  418b54:	mov    DWORD PTR [rax],ebx
  418b56:	mov    rax,QWORD PTR [rsp+0x20]
  418b5b:	movzx  eax,WORD PTR [rax+0x10]
  418b5f:	test   ax,ax
  418b62:	je     4190b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1328>
  418b68:	cmp    ax,0x1
  418b6c:	jne    418ba0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  418b6e:	mov    rbx,QWORD PTR [r14+0x78]
  418b72:	test   bx,bx
  418b75:	je     418ba0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  418b77:	mov    ecx,0x2
  418b7c:	mov    edx,0x2
  418b81:	mov    esi,0x3
  418b86:	mov    rdi,r12
  418b89:	call   42ab50 <flatcc_builder_table_add@@Base>
  418b8e:	test   rax,rax
  418b91:	je     418ba0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  418b93:	mov    WORD PTR [rax],bx
  418b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ba0:	cmp    WORD PTR [rsp+0x18],0x0
  418ba6:	je     418bc7 <__flatcc_fb_gen_c_json_printer@@Base+0xe37>
  418ba8:	mov    ecx,0x1
  418bad:	mov    edx,0x1
  418bb2:	mov    esi,0x6
  418bb7:	mov    rdi,r12
  418bba:	call   42ab50 <flatcc_builder_table_add@@Base>
  418bbf:	test   rax,rax
  418bc2:	je     418bc7 <__flatcc_fb_gen_c_json_printer@@Base+0xe37>
  418bc4:	mov    BYTE PTR [rax],r15b
  418bc7:	mov    edx,0x2
  418bcc:	lea    rsi,[rip+0x2cecd]        # 445aa0 <_IO_stdin_used@@Base+0x18aa0>
  418bd3:	mov    rdi,r12
  418bd6:	call   429bc0 <flatcc_builder_check_required@@Base>
  418bdb:	test   eax,eax
  418bdd:	je     4194c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
  418be3:	mov    rdi,r12
  418be6:	call   429c50 <flatcc_builder_end_table@@Base>
  418beb:	test   eax,eax
  418bed:	je     418bf9 <__flatcc_fb_gen_c_json_printer@@Base+0xe69>
  418bef:	mov    esi,eax
  418bf1:	mov    rdi,r12
  418bf4:	call   428c40 <flatcc_builder_offset_vector_push@@Base>
  418bf9:	mov    r14,QWORD PTR [r14]
  418bfc:	or     bpl,BYTE PTR [rsp+0x3b]
  418c01:	test   r14,r14
  418c04:	je     418c30 <__flatcc_fb_gen_c_json_printer@@Base+0xea0>
  418c06:	movzx  r13d,WORD PTR [r14+0x70]
  418c0b:	test   bpl,bpl
  418c0e:	je     418ab0 <__flatcc_fb_gen_c_json_printer@@Base+0xd20>
  418c14:	mov    BYTE PTR [rsp+0x3b],0x0
  418c19:	mov    DWORD PTR [rsp+0x10],0x0
  418c21:	jmp    418acd <__flatcc_fb_gen_c_json_printer@@Base+0xd3d>
  418c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418c30:	mov    r15,QWORD PTR [rsp+0x20]
  418c35:	mov    r13,QWORD PTR [rsp+0x40]
  418c3a:	mov    rdi,r12
  418c3d:	call   42a090 <flatcc_builder_end_offset_vector@@Base>
  418c42:	mov    ebx,eax
  418c44:	test   eax,eax
  418c46:	je     418c5c <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
  418c48:	mov    esi,0x1
  418c4d:	mov    rdi,r12
  418c50:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418c55:	test   rax,rax
  418c58:	je     418c5c <__flatcc_fb_gen_c_json_printer@@Base+0xecc>
  418c5a:	mov    DWORD PTR [rax],ebx
  418c5c:	cmp    WORD PTR [r15+0x10],0x1
  418c62:	je     419060 <__flatcc_fb_gen_c_json_printer@@Base+0x12d0>
  418c68:	movzx  ebx,WORD PTR [r15+0xb0]
  418c70:	test   ebx,ebx
  418c72:	je     418c92 <__flatcc_fb_gen_c_json_printer@@Base+0xf02>
  418c74:	mov    ecx,0x4
  418c79:	mov    edx,0x4
  418c7e:	mov    esi,0x3
  418c83:	mov    rdi,r12
  418c86:	call   42ab50 <flatcc_builder_table_add@@Base>
  418c8b:	test   rax,rax
  418c8e:	je     418c92 <__flatcc_fb_gen_c_json_printer@@Base+0xf02>
  418c90:	mov    DWORD PTR [rax],ebx
  418c92:	mov    edx,0x2
  418c97:	lea    rsi,[rip+0x2cdfc]        # 445a9a <_IO_stdin_used@@Base+0x18a9a>
  418c9e:	mov    rdi,r12
  418ca1:	call   429bc0 <flatcc_builder_check_required@@Base>
  418ca6:	test   eax,eax
  418ca8:	je     4194ff <__flatcc_fb_gen_c_json_printer@@Base+0x176f>
  418cae:	mov    rdi,r12
  418cb1:	call   429c50 <flatcc_builder_end_table@@Base>
  418cb6:	mov    rcx,QWORD PTR [rsp+0x30]
  418cbb:	add    r13,0x10
  418cbf:	mov    DWORD PTR [rcx],eax
  418cc1:	add    rcx,0x4
  418cc5:	mov    QWORD PTR [rsp+0x30],rcx
  418cca:	cmp    QWORD PTR [rsp+0x50],r13
  418ccf:	jne    418a50 <__flatcc_fb_gen_c_json_printer@@Base+0xcc0>
  418cd5:	mov    r15,QWORD PTR [rsp+0x58]
  418cda:	mov    r14,r12
  418cdd:	movsxd rdx,DWORD PTR [rsp+0x3c]
  418ce2:	mov    rsi,r15
  418ce5:	mov    rdi,r14
  418ce8:	call   42a170 <flatcc_builder_create_offset_vector@@Base>
  418ced:	mov    ebx,eax
  418cef:	test   eax,eax
  418cf1:	je     418d04 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
  418cf3:	xor    esi,esi
  418cf5:	mov    rdi,r14
  418cf8:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418cfd:	test   rax,rax
  418d00:	je     418d04 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
  418d02:	mov    DWORD PTR [rax],ebx
  418d04:	mov    ebx,DWORD PTR [rsp+0x68]
  418d08:	mov    rdi,r14
  418d0b:	mov    rbp,QWORD PTR [rsp+0x80]
  418d13:	call   429130 <flatcc_builder_start_offset_vector@@Base>
  418d18:	test   ebx,ebx
  418d1a:	jle    418f92 <__flatcc_fb_gen_c_json_printer@@Base+0x1202>
  418d20:	lea    eax,[rbx-0x1]
  418d23:	shl    rax,0x4
  418d27:	lea    rax,[rbp+rax*1+0x10]
  418d2c:	mov    QWORD PTR [rsp+0x18],rax
  418d31:	nop    DWORD PTR [rax+0x0]
  418d38:	mov    r12,QWORD PTR [rbp+0x0]
  418d3c:	mov    esi,0x4
  418d41:	mov    rdi,r14
  418d44:	movzx  r13d,WORD PTR [r12+0x10]
  418d4a:	call   4292d0 <flatcc_builder_start_table@@Base>
  418d4f:	mov    rsi,QWORD PTR [rbp+0x8]
  418d53:	mov    rdi,r14
  418d56:	call   42a9c0 <flatcc_builder_create_string_str@@Base>
  418d5b:	mov    ebx,eax
  418d5d:	test   eax,eax
  418d5f:	je     418d72 <__flatcc_fb_gen_c_json_printer@@Base+0xfe2>
  418d61:	xor    esi,esi
  418d63:	mov    rdi,r14
  418d66:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418d6b:	test   rax,rax
  418d6e:	je     418d72 <__flatcc_fb_gen_c_json_printer@@Base+0xfe2>
  418d70:	mov    DWORD PTR [rax],ebx
  418d72:	mov    rdi,r14
  418d75:	call   429130 <flatcc_builder_start_offset_vector@@Base>
  418d7a:	mov    rbx,QWORD PTR [r12+0x28]
  418d7f:	test   rbx,rbx
  418d82:	jne    418e35 <__flatcc_fb_gen_c_json_printer@@Base+0x10a5>
  418d88:	jmp    418ed0 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
  418d8d:	nop    DWORD PTR [rax]
  418d90:	call   4292d0 <flatcc_builder_start_table@@Base>
  418d95:	mov    rax,QWORD PTR [rbx+0x8]
  418d99:	mov    rdi,r14
  418d9c:	mov    rdx,QWORD PTR [rax+0x8]
  418da0:	mov    rsi,QWORD PTR [rax]
  418da3:	call   42a8a0 <flatcc_builder_create_string@@Base>
  418da8:	test   eax,eax
  418daa:	mov    DWORD PTR [rsp+0x10],eax
  418dae:	je     418dc5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  418db0:	xor    esi,esi
  418db2:	mov    rdi,r14
  418db5:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418dba:	test   rax,rax
  418dbd:	je     418dc5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  418dbf:	mov    edx,DWORD PTR [rsp+0x10]
  418dc3:	mov    DWORD PTR [rax],edx
  418dc5:	mov    r8,QWORD PTR [rbx+0x48]
  418dc9:	test   r8,r8
  418dcc:	mov    QWORD PTR [rsp+0x10],r8
  418dd1:	je     418df7 <__flatcc_fb_gen_c_json_printer@@Base+0x1067>
  418dd3:	mov    ecx,0x8
  418dd8:	mov    edx,0x8
  418ddd:	mov    esi,0x1
  418de2:	mov    rdi,r14
  418de5:	call   42ab50 <flatcc_builder_table_add@@Base>
  418dea:	test   rax,rax
  418ded:	je     418df7 <__flatcc_fb_gen_c_json_printer@@Base+0x1067>
  418def:	mov    r8,QWORD PTR [rsp+0x10]
  418df4:	mov    QWORD PTR [rax],r8
  418df7:	mov    edx,0x1
  418dfc:	lea    rsi,[rip+0x2ccad]        # 445ab0 <_IO_stdin_used@@Base+0x18ab0>
  418e03:	mov    rdi,r14
  418e06:	call   429bc0 <flatcc_builder_check_required@@Base>
  418e0b:	test   eax,eax
  418e0d:	je     4194e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1750>
  418e13:	mov    rdi,r14
  418e16:	call   429c50 <flatcc_builder_end_table@@Base>
  418e1b:	test   eax,eax
  418e1d:	je     418e29 <__flatcc_fb_gen_c_json_printer@@Base+0x1099>
  418e1f:	mov    esi,eax
  418e21:	mov    rdi,r14
  418e24:	call   428c40 <flatcc_builder_offset_vector_push@@Base>
  418e29:	mov    rbx,QWORD PTR [rbx]
  418e2c:	test   rbx,rbx
  418e2f:	je     418ed0 <__flatcc_fb_gen_c_json_printer@@Base+0x1140>
  418e35:	mov    esi,0x3
  418e3a:	mov    rdi,r14
  418e3d:	cmp    r13w,0x4
  418e42:	jne    418d90 <__flatcc_fb_gen_c_json_printer@@Base+0x1000>
  418e48:	call   4292d0 <flatcc_builder_start_table@@Base>
  418e4d:	mov    rax,QWORD PTR [rbx+0x8]
  418e51:	mov    rdi,r14
  418e54:	mov    rdx,QWORD PTR [rax+0x8]
  418e58:	mov    rsi,QWORD PTR [rax]
  418e5b:	call   42a8a0 <flatcc_builder_create_string@@Base>
  418e60:	test   eax,eax
  418e62:	mov    DWORD PTR [rsp+0x10],eax
  418e66:	je     418e7d <__flatcc_fb_gen_c_json_printer@@Base+0x10ed>
  418e68:	xor    esi,esi
  418e6a:	mov    rdi,r14
  418e6d:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418e72:	test   rax,rax
  418e75:	je     418e7d <__flatcc_fb_gen_c_json_printer@@Base+0x10ed>
  418e77:	mov    edx,DWORD PTR [rsp+0x10]
  418e7b:	mov    DWORD PTR [rax],edx
  418e7d:	test   r15,r15
  418e80:	je     418dc5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  418e86:	cmp    WORD PTR [rbx+0x28],0xe
  418e8b:	jne    418dc5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  418e91:	mov    rax,QWORD PTR [rbx+0x18]
  418e95:	mov    rax,QWORD PTR [rax+0xc8]
  418e9c:	mov    edx,DWORD PTR [r15+rax*4]
  418ea0:	test   edx,edx
  418ea2:	mov    DWORD PTR [rsp+0x10],edx
  418ea6:	je     418dc5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  418eac:	mov    esi,0x2
  418eb1:	mov    rdi,r14
  418eb4:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418eb9:	test   rax,rax
  418ebc:	jne    418dbf <__flatcc_fb_gen_c_json_printer@@Base+0x102f>
  418ec2:	jmp    418dc5 <__flatcc_fb_gen_c_json_printer@@Base+0x1035>
  418ec7:	nop    WORD PTR [rax+rax*1+0x0]
  418ed0:	mov    rdi,r14
  418ed3:	call   42a090 <flatcc_builder_end_offset_vector@@Base>
  418ed8:	mov    ebx,eax
  418eda:	test   eax,eax
  418edc:	je     418ef2 <__flatcc_fb_gen_c_json_printer@@Base+0x1162>
  418ede:	mov    esi,0x1
  418ee3:	mov    rdi,r14
  418ee6:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418eeb:	test   rax,rax
  418eee:	je     418ef2 <__flatcc_fb_gen_c_json_printer@@Base+0x1162>
  418ef0:	mov    DWORD PTR [rax],ebx
  418ef2:	cmp    r13w,0x4
  418ef7:	jne    418f18 <__flatcc_fb_gen_c_json_printer@@Base+0x1188>
  418ef9:	mov    ecx,0x1
  418efe:	mov    edx,0x1
  418f03:	mov    esi,0x2
  418f08:	mov    rdi,r14
  418f0b:	call   42ab50 <flatcc_builder_table_add@@Base>
  418f10:	test   rax,rax
  418f13:	je     418f18 <__flatcc_fb_gen_c_json_printer@@Base+0x1188>
  418f15:	mov    BYTE PTR [rax],0x1
  418f18:	sub    rsp,0x8
  418f1c:	push   QWORD PTR [r12+0x58]
  418f21:	mov    rdi,r14
  418f24:	push   QWORD PTR [r12+0x50]
  418f29:	push   QWORD PTR [r12+0x48]
  418f2e:	call   418440 <__flatcc_fb_gen_c_json_printer@@Base+0x6b0>
  418f33:	mov    ebx,eax
  418f35:	add    rsp,0x20
  418f39:	test   eax,eax
  418f3b:	je     418f51 <__flatcc_fb_gen_c_json_printer@@Base+0x11c1>
  418f3d:	mov    esi,0x3
  418f42:	mov    rdi,r14
  418f45:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418f4a:	test   rax,rax
  418f4d:	je     418f51 <__flatcc_fb_gen_c_json_printer@@Base+0x11c1>
  418f4f:	mov    DWORD PTR [rax],ebx
  418f51:	mov    edx,0x3
  418f56:	lea    rsi,[rip+0x2cb4b]        # 445aa8 <_IO_stdin_used@@Base+0x18aa8>
  418f5d:	mov    rdi,r14
  418f60:	call   429bc0 <flatcc_builder_check_required@@Base>
  418f65:	test   eax,eax
  418f67:	je     41951e <__flatcc_fb_gen_c_json_printer@@Base+0x178e>
  418f6d:	mov    rdi,r14
  418f70:	call   429c50 <flatcc_builder_end_table@@Base>
  418f75:	test   eax,eax
  418f77:	je     418f83 <__flatcc_fb_gen_c_json_printer@@Base+0x11f3>
  418f79:	mov    esi,eax
  418f7b:	mov    rdi,r14
  418f7e:	call   428c40 <flatcc_builder_offset_vector_push@@Base>
  418f83:	add    rbp,0x10
  418f87:	cmp    rbp,QWORD PTR [rsp+0x18]
  418f8c:	jne    418d38 <__flatcc_fb_gen_c_json_printer@@Base+0xfa8>
  418f92:	mov    rdi,r14
  418f95:	call   42a090 <flatcc_builder_end_offset_vector@@Base>
  418f9a:	mov    ebx,eax
  418f9c:	test   eax,eax
  418f9e:	je     418fb4 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
  418fa0:	mov    esi,0x1
  418fa5:	mov    rdi,r14
  418fa8:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418fad:	test   rax,rax
  418fb0:	je     418fb4 <__flatcc_fb_gen_c_json_printer@@Base+0x1224>
  418fb2:	mov    DWORD PTR [rax],ebx
  418fb4:	mov    rax,QWORD PTR [rsp+0x8]
  418fb9:	mov    rax,QWORD PTR [rax+0x58]
  418fbd:	test   rax,rax
  418fc0:	je     418fec <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
  418fc2:	cmp    WORD PTR [rax+0x10],0x0
  418fc7:	jne    418fec <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
  418fc9:	mov    rax,QWORD PTR [rax+0xc8]
  418fd0:	mov    ebx,DWORD PTR [r15+rax*4]
  418fd4:	test   ebx,ebx
  418fd6:	je     418fec <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
  418fd8:	mov    esi,0x4
  418fdd:	mov    rdi,r14
  418fe0:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  418fe5:	test   rax,rax
  418fe8:	je     418fec <__flatcc_fb_gen_c_json_printer@@Base+0x125c>
  418fea:	mov    DWORD PTR [rax],ebx
  418fec:	mov    edx,0x2
  418ff1:	lea    rsi,[rip+0x2ca9c]        # 445a94 <_IO_stdin_used@@Base+0x18a94>
  418ff8:	mov    rdi,r14
  418ffb:	call   429bc0 <flatcc_builder_check_required@@Base>
  419000:	test   eax,eax
  419002:	je     41955c <__flatcc_fb_gen_c_json_printer@@Base+0x17cc>
  419008:	mov    rdi,r14
  41900b:	call   429c50 <flatcc_builder_end_table@@Base>
  419010:	mov    esi,eax
  419012:	mov    rdi,r14
  419015:	call   428710 <flatcc_builder_end_buffer@@Base>
  41901a:	mov    rdi,QWORD PTR [rsp+0x28]
  41901f:	xor    ebx,ebx
  419021:	call   418370 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
  419026:	test   r15,r15
  419029:	je     419033 <__flatcc_fb_gen_c_json_printer@@Base+0x12a3>
  41902b:	mov    rdi,r15
  41902e:	call   405230 <free@plt>
  419033:	mov    rcx,QWORD PTR [rsp+0xb8]
  41903b:	xor    rcx,QWORD PTR fs:0x28
  419044:	mov    eax,ebx
  419046:	jne    41957b <__flatcc_fb_gen_c_json_printer@@Base+0x17eb>
  41904c:	add    rsp,0xc8
  419053:	pop    rbx
  419054:	pop    rbp
  419055:	pop    r12
  419057:	pop    r13
  419059:	pop    r14
  41905b:	pop    r15
  41905d:	ret    
  41905e:	xchg   ax,ax
  419060:	mov    rbx,QWORD PTR [r15+0xb8]
  419067:	test   ebx,ebx
  419069:	je     419089 <__flatcc_fb_gen_c_json_printer@@Base+0x12f9>
  41906b:	mov    ecx,0x4
  419070:	mov    edx,0x4
  419075:	mov    esi,0x4
  41907a:	mov    rdi,r12
  41907d:	call   42ab50 <flatcc_builder_table_add@@Base>
  419082:	test   rax,rax
  419085:	je     419089 <__flatcc_fb_gen_c_json_printer@@Base+0x12f9>
  419087:	mov    DWORD PTR [rax],ebx
  419089:	mov    ecx,0x1
  41908e:	mov    edx,0x1
  419093:	mov    esi,0x2
  419098:	mov    rdi,r12
  41909b:	call   42ab50 <flatcc_builder_table_add@@Base>
  4190a0:	test   rax,rax
  4190a3:	je     418c68 <__flatcc_fb_gen_c_json_printer@@Base+0xed8>
  4190a9:	mov    BYTE PTR [rax],0x1
  4190ac:	jmp    418c68 <__flatcc_fb_gen_c_json_printer@@Base+0xed8>
  4190b1:	nop    DWORD PTR [rax+0x0]
  4190b8:	movzx  eax,WORD PTR [r14+0x58]
  4190bd:	cmp    ax,0x4
  4190c1:	je     419240 <__flatcc_fb_gen_c_json_printer@@Base+0x14b0>
  4190c7:	jbe    4191e8 <__flatcc_fb_gen_c_json_printer@@Base+0x1458>
  4190cd:	cmp    ax,0x5
  4190d1:	je     419240 <__flatcc_fb_gen_c_json_printer@@Base+0x14b0>
  4190d7:	vxorpd xmm1,xmm1,xmm1
  4190db:	vxorpd xmm0,xmm0,xmm0
  4190df:	cmp    ax,0x6
  4190e3:	jne    419200 <__flatcc_fb_gen_c_json_printer@@Base+0x1470>
  4190e9:	movzx  ebx,BYTE PTR [r14+0x48]
  4190ee:	test   rbx,rbx
  4190f1:	je     419112 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  4190f3:	mov    ecx,0x8
  4190f8:	mov    edx,0x8
  4190fd:	mov    esi,0x4
  419102:	mov    rdi,r12
  419105:	call   42ab50 <flatcc_builder_table_add@@Base>
  41910a:	test   rax,rax
  41910d:	je     419112 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  41910f:	mov    QWORD PTR [rax],rbx
  419112:	mov    r8,QWORD PTR [r14+0x88]
  419119:	mov    ebx,0x4
  41911e:	test   r8w,r8w
  419122:	mov    QWORD PTR [rsp+0x48],r8
  419127:	je     4191c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
  41912d:	mov    ecx,0x2
  419132:	mov    edx,0x2
  419137:	mov    esi,0x2
  41913c:	mov    rdi,r12
  41913f:	call   42ab50 <flatcc_builder_table_add@@Base>
  419144:	test   rax,rax
  419147:	je     419152 <__flatcc_fb_gen_c_json_printer@@Base+0x13c2>
  419149:	mov    r8,QWORD PTR [rsp+0x48]
  41914e:	mov    WORD PTR [rax],r8w
  419152:	mov    rbx,QWORD PTR [r14+0x88]
  419159:	lea    ebx,[rbx+rbx*1+0x4]
  41915d:	test   bx,bx
  419160:	jne    4191c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1430>
  419162:	mov    eax,DWORD PTR [rsp+0x10]
  419166:	test   eax,eax
  419168:	je     419189 <__flatcc_fb_gen_c_json_printer@@Base+0x13f9>
  41916a:	mov    ecx,0x1
  41916f:	mov    edx,0x1
  419174:	mov    esi,0x8
  419179:	mov    rdi,r12
  41917c:	call   42ab50 <flatcc_builder_table_add@@Base>
  419181:	test   rax,rax
  419184:	je     419189 <__flatcc_fb_gen_c_json_printer@@Base+0x13f9>
  419186:	mov    BYTE PTR [rax],0x1
  419189:	test   r13w,0x100
  41918f:	je     418ba0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  419195:	mov    ecx,0x1
  41919a:	mov    edx,0x1
  41919f:	mov    esi,0x7
  4191a4:	mov    rdi,r12
  4191a7:	call   42ab50 <flatcc_builder_table_add@@Base>
  4191ac:	test   rax,rax
  4191af:	je     418ba0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  4191b5:	mov    BYTE PTR [rax],0x1
  4191b8:	jmp    418ba0 <__flatcc_fb_gen_c_json_printer@@Base+0xe10>
  4191bd:	nop    DWORD PTR [rax]
  4191c0:	mov    ecx,0x2
  4191c5:	mov    edx,0x2
  4191ca:	mov    esi,0x3
  4191cf:	mov    rdi,r12
  4191d2:	call   42ab50 <flatcc_builder_table_add@@Base>
  4191d7:	test   rax,rax
  4191da:	je     419162 <__flatcc_fb_gen_c_json_printer@@Base+0x13d2>
  4191dc:	mov    WORD PTR [rax],bx
  4191df:	jmp    419162 <__flatcc_fb_gen_c_json_printer@@Base+0x13d2>
  4191e4:	nop    DWORD PTR [rax+0x0]
  4191e8:	vxorpd xmm1,xmm1,xmm1
  4191ec:	vmovapd xmm0,xmm1
  4191f0:	cmp    ax,0x3
  4191f4:	jne    419200 <__flatcc_fb_gen_c_json_printer@@Base+0x1470>
  4191f6:	vmovsd xmm0,QWORD PTR [r14+0x48]
  4191fc:	vxorpd xmm1,xmm1,xmm1
  419200:	vucomisd xmm0,xmm1
  419204:	jnp    419428 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
  41920a:	mov    ecx,0x8
  41920f:	mov    edx,0x8
  419214:	mov    esi,0x5
  419219:	mov    rdi,r12
  41921c:	vmovsd QWORD PTR [rsp+0x48],xmm0
  419222:	call   42ab50 <flatcc_builder_table_add@@Base>
  419227:	test   rax,rax
  41922a:	je     419112 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  419230:	vmovsd xmm0,QWORD PTR [rsp+0x48]
  419236:	vmovsd QWORD PTR [rax],xmm0
  41923a:	jmp    419112 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  41923f:	nop
  419240:	mov    rbx,QWORD PTR [r14+0x48]
  419244:	jmp    4190ee <__flatcc_fb_gen_c_json_printer@@Base+0x135e>
  419249:	nop    DWORD PTR [rax+0x0]
  419250:	mov    rax,QWORD PTR [r14+0x18]
  419254:	cmp    WORD PTR [rax+0x10],0x4
  419259:	jne    418ae9 <__flatcc_fb_gen_c_json_printer@@Base+0xd59>
  41925f:	mov    esi,0x9
  419264:	mov    rdi,r12
  419267:	call   4292d0 <flatcc_builder_start_table@@Base>
  41926c:	mov    rdi,r12
  41926f:	call   429190 <flatcc_builder_start_string@@Base>
  419274:	mov    rax,QWORD PTR [r14+0x8]
  419278:	mov    rdi,r12
  41927b:	mov    rdx,QWORD PTR [rax+0x8]
  41927f:	mov    rsi,QWORD PTR [rax]
  419282:	call   428e00 <flatcc_builder_append_string@@Base>
  419287:	mov    edx,0x5
  41928c:	lea    rsi,[rip+0x1c90f]        # 435ba2 <_IO_stdin_used@@Base+0x8ba2>
  419293:	mov    rdi,r12
  419296:	call   428e00 <flatcc_builder_append_string@@Base>
  41929b:	mov    rdi,r12
  41929e:	call   42aa30 <flatcc_builder_end_string@@Base>
  4192a3:	mov    ebx,eax
  4192a5:	test   eax,eax
  4192a7:	je     4192ba <__flatcc_fb_gen_c_json_printer@@Base+0x152a>
  4192a9:	xor    esi,esi
  4192ab:	mov    rdi,r12
  4192ae:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  4192b3:	test   rax,rax
  4192b6:	je     4192ba <__flatcc_fb_gen_c_json_printer@@Base+0x152a>
  4192b8:	mov    DWORD PTR [rax],ebx
  4192ba:	mov    esi,0x3
  4192bf:	mov    rdi,r12
  4192c2:	call   4292d0 <flatcc_builder_start_table@@Base>
  4192c7:	test   eax,eax
  4192c9:	jne    419322 <__flatcc_fb_gen_c_json_printer@@Base+0x1592>
  4192cb:	xor    esi,esi
  4192cd:	mov    ecx,0x1
  4192d2:	mov    edx,0x1
  4192d7:	mov    rdi,r12
  4192da:	call   42ab50 <flatcc_builder_table_add@@Base>
  4192df:	test   rax,rax
  4192e2:	je     419322 <__flatcc_fb_gen_c_json_printer@@Base+0x1592>
  4192e4:	mov    BYTE PTR [rax],0x1
  4192e7:	xor    edx,edx
  4192e9:	lea    rsi,[rip+0x2c7c4]        # 445ab4 <_IO_stdin_used@@Base+0x18ab4>
  4192f0:	mov    rdi,r12
  4192f3:	call   429bc0 <flatcc_builder_check_required@@Base>
  4192f8:	test   eax,eax
  4192fa:	je     41953d <__flatcc_fb_gen_c_json_printer@@Base+0x17ad>
  419300:	mov    rdi,r12
  419303:	call   429c50 <flatcc_builder_end_table@@Base>
  419308:	mov    ebx,eax
  41930a:	test   eax,eax
  41930c:	je     419322 <__flatcc_fb_gen_c_json_printer@@Base+0x1592>
  41930e:	mov    esi,0x1
  419313:	mov    rdi,r12
  419316:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  41931b:	test   rax,rax
  41931e:	je     419322 <__flatcc_fb_gen_c_json_printer@@Base+0x1592>
  419320:	mov    DWORD PTR [rax],ebx
  419322:	mov    rax,QWORD PTR [r14+0x88]
  419329:	lea    ebx,[rax+rax*1+0x2]
  41932d:	mov    edx,eax
  41932f:	test   bx,bx
  419332:	je     41935b <__flatcc_fb_gen_c_json_printer@@Base+0x15cb>
  419334:	mov    ecx,0x2
  419339:	mov    edx,0x2
  41933e:	mov    esi,0x3
  419343:	mov    rdi,r12
  419346:	call   42ab50 <flatcc_builder_table_add@@Base>
  41934b:	test   rax,rax
  41934e:	je     419353 <__flatcc_fb_gen_c_json_printer@@Base+0x15c3>
  419350:	mov    WORD PTR [rax],bx
  419353:	movzx  edx,WORD PTR [r14+0x88]
  41935b:	dec    dx
  41935e:	mov    ebx,edx
  419360:	je     419381 <__flatcc_fb_gen_c_json_printer@@Base+0x15f1>
  419362:	mov    ecx,0x2
  419367:	mov    edx,0x2
  41936c:	mov    esi,0x2
  419371:	mov    rdi,r12
  419374:	call   42ab50 <flatcc_builder_table_add@@Base>
  419379:	test   rax,rax
  41937c:	je     419381 <__flatcc_fb_gen_c_json_printer@@Base+0x15f1>
  41937e:	mov    WORD PTR [rax],bx
  419381:	cmp    WORD PTR [rsp+0x18],0x0
  419387:	je     4193a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
  419389:	mov    ecx,0x1
  41938e:	mov    edx,0x1
  419393:	mov    esi,0x6
  419398:	mov    rdi,r12
  41939b:	call   42ab50 <flatcc_builder_table_add@@Base>
  4193a0:	test   rax,rax
  4193a3:	je     4193a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1618>
  4193a5:	mov    BYTE PTR [rax],r15b
  4193a8:	mov    edx,0x2
  4193ad:	lea    rsi,[rip+0x2c6ec]        # 445aa0 <_IO_stdin_used@@Base+0x18aa0>
  4193b4:	mov    rdi,r12
  4193b7:	call   429bc0 <flatcc_builder_check_required@@Base>
  4193bc:	test   eax,eax
  4193be:	je     4194c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
  4193c4:	mov    rdi,r12
  4193c7:	call   429c50 <flatcc_builder_end_table@@Base>
  4193cc:	test   eax,eax
  4193ce:	je     418ae9 <__flatcc_fb_gen_c_json_printer@@Base+0xd59>
  4193d4:	mov    esi,eax
  4193d6:	mov    rdi,r12
  4193d9:	call   428c40 <flatcc_builder_offset_vector_push@@Base>
  4193de:	jmp    418ae9 <__flatcc_fb_gen_c_json_printer@@Base+0xd59>
  4193e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4193e8:	mov    ecx,0x2
  4193ed:	jmp    4189d0 <__flatcc_fb_gen_c_json_printer@@Base+0xc40>
  4193f2:	nop    WORD PTR [rax+rax*1+0x0]
  4193f8:	shl    rdi,0x2
  4193fc:	call   405360 <malloc@plt>
  419401:	mov    r15,rax
  419404:	test   rax,rax
  419407:	jne    4189bf <__flatcc_fb_gen_c_json_printer@@Base+0xc2f>
  41940d:	nop    DWORD PTR [rax]
  419410:	mov    rdi,QWORD PTR [rsp+0x28]
  419415:	mov    ebx,0xffffffff
  41941a:	call   418370 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
  41941f:	jmp    419033 <__flatcc_fb_gen_c_json_printer@@Base+0x12a3>
  419424:	nop    DWORD PTR [rax+0x0]
  419428:	je     419112 <__flatcc_fb_gen_c_json_printer@@Base+0x1382>
  41942e:	jmp    41920a <__flatcc_fb_gen_c_json_printer@@Base+0x147a>
  419433:	nop    DWORD PTR [rax+rax*1+0x0]
  419438:	movsxd rdx,DWORD PTR [rax+0x18]
  41943c:	mov    rsi,QWORD PTR [rax+0x10]
  419440:	mov    rdi,r14
  419443:	call   42a8a0 <flatcc_builder_create_string@@Base>
  419448:	mov    ebx,eax
  41944a:	test   eax,eax
  41944c:	je     418a02 <__flatcc_fb_gen_c_json_printer@@Base+0xc72>
  419452:	mov    esi,0x2
  419457:	mov    rdi,r14
  41945a:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  41945f:	test   rax,rax
  419462:	je     418a02 <__flatcc_fb_gen_c_json_printer@@Base+0xc72>
  419468:	mov    DWORD PTR [rax],ebx
  41946a:	mov    rax,QWORD PTR [rsp+0x8]
  41946f:	cmp    WORD PTR [rax+0x38],0x2
  419474:	jne    418a12 <__flatcc_fb_gen_c_json_printer@@Base+0xc82>
  41947a:	nop    WORD PTR [rax+rax*1+0x0]
  419480:	movsxd rdx,DWORD PTR [rax+0x30]
  419484:	mov    rsi,QWORD PTR [rax+0x28]
  419488:	mov    rdi,r14
  41948b:	call   42a8a0 <flatcc_builder_create_string@@Base>
  419490:	mov    ebx,eax
  419492:	test   eax,eax
  419494:	je     418a12 <__flatcc_fb_gen_c_json_printer@@Base+0xc82>
  41949a:	mov    esi,0x3
  41949f:	mov    rdi,r14
  4194a2:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  4194a7:	test   rax,rax
  4194aa:	je     418a12 <__flatcc_fb_gen_c_json_printer@@Base+0xc82>
  4194b0:	mov    DWORD PTR [rax],ebx
  4194b2:	jmp    418a12 <__flatcc_fb_gen_c_json_printer@@Base+0xc82>
  4194b7:	nop    WORD PTR [rax+rax*1+0x0]
  4194c0:	lea    rcx,[rip+0x2c599]        # 445a60 <_IO_stdin_used@@Base+0x18a60>
  4194c7:	mov    edx,0x1d
  4194cc:	lea    rsi,[rip+0x2beb5]        # 445388 <_IO_stdin_used@@Base+0x18388>
  4194d3:	lea    rdi,[rip+0x2bfbe]        # 445498 <_IO_stdin_used@@Base+0x18498>
  4194da:	call   4052e0 <__assert_fail@plt>
  4194df:	nop
  4194e0:	lea    rcx,[rip+0x2c539]        # 445a20 <_IO_stdin_used@@Base+0x18a20>
  4194e7:	mov    edx,0x19
  4194ec:	lea    rsi,[rip+0x2be95]        # 445388 <_IO_stdin_used@@Base+0x18388>
  4194f3:	lea    rdi,[rip+0x2c0c6]        # 4455c0 <_IO_stdin_used@@Base+0x185c0>
  4194fa:	call   4052e0 <__assert_fail@plt>
  4194ff:	lea    rcx,[rip+0x2c53a]        # 445a40 <_IO_stdin_used@@Base+0x18a40>
  419506:	mov    edx,0x1f
  41950b:	lea    rsi,[rip+0x2be76]        # 445388 <_IO_stdin_used@@Base+0x18388>
  419512:	lea    rdi,[rip+0x2c00f]        # 445528 <_IO_stdin_used@@Base+0x18528>
  419519:	call   4052e0 <__assert_fail@plt>
  41951e:	lea    rcx,[rip+0x2c4db]        # 445a00 <_IO_stdin_used@@Base+0x18a00>
  419525:	mov    edx,0x1b
  41952a:	lea    rsi,[rip+0x2be57]        # 445388 <_IO_stdin_used@@Base+0x18388>
  419531:	lea    rdi,[rip+0x2c120]        # 445658 <_IO_stdin_used@@Base+0x18658>
  419538:	call   4052e0 <__assert_fail@plt>
  41953d:	lea    rcx,[rip+0x2c53c]        # 445a80 <_IO_stdin_used@@Base+0x18a80>
  419544:	mov    edx,0x17
  419549:	lea    rsi,[rip+0x2be38]        # 445388 <_IO_stdin_used@@Base+0x18388>
  419550:	lea    rdi,[rip+0x2beb1]        # 445408 <_IO_stdin_used@@Base+0x18408>
  419557:	call   4052e0 <__assert_fail@plt>
  41955c:	lea    rcx,[rip+0x2c47d]        # 4459e0 <_IO_stdin_used@@Base+0x189e0>
  419563:	mov    edx,0x21
  419568:	lea    rsi,[rip+0x2be19]        # 445388 <_IO_stdin_used@@Base+0x18388>
  41956f:	lea    rdi,[rip+0x2c172]        # 4456e8 <_IO_stdin_used@@Base+0x186e8>
  419576:	call   4052e0 <__assert_fail@plt>
  41957b:	call   4052c0 <__stack_chk_fail@plt>
  419580:	push   r15
  419582:	push   r14
  419584:	push   r13
  419586:	push   r12
  419588:	push   rbp
  419589:	push   rbx
  41958a:	sub    rsp,0x48
  41958e:	test   rdi,rdi
  419591:	je     41959c <__flatcc_fb_gen_c_json_printer@@Base+0x180c>
  419593:	cmp    DWORD PTR [rdi+0x4],0x53424642
  41959a:	je     4195c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1830>
  41959c:	lea    rcx,[rip+0x2c41d]        # 4459c0 <_IO_stdin_used@@Base+0x189c0>
  4195a3:	mov    edx,0xed
  4195a8:	lea    rsi,[rip+0x2c1d1]        # 445780 <_IO_stdin_used@@Base+0x18780>
  4195af:	lea    rdi,[rip+0x2c242]        # 4457f8 <_IO_stdin_used@@Base+0x187f8>
  4195b6:	call   4052e0 <__assert_fail@plt>
  4195bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4195c0:	mov    eax,DWORD PTR [rdi]
  4195c2:	add    rdi,rax
  4195c5:	je     41959c <__flatcc_fb_gen_c_json_printer@@Base+0x180c>
  4195c7:	movsxd rax,DWORD PTR [rdi]
  4195ca:	mov    rbx,rdi
  4195cd:	sub    rbx,rax
  4195d0:	cmp    WORD PTR [rbx],0x5
  4195d4:	jbe    419c2e <__flatcc_fb_gen_c_json_printer@@Base+0x1e9e>
  4195da:	movzx  eax,WORD PTR [rbx+0x4]
  4195de:	test   ax,ax
  4195e1:	je     419c2e <__flatcc_fb_gen_c_json_printer@@Base+0x1e9e>
  4195e7:	add    rdi,rax
  4195ea:	mov    eax,DWORD PTR [rdi]
  4195ec:	lea    rcx,[rdi+rax*1+0x4]
  4195f1:	mov    QWORD PTR [rsp+0x30],rcx
  4195f6:	test   rcx,rcx
  4195f9:	je     419bc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e30>
  4195ff:	mov    eax,DWORD PTR [rcx-0x4]
  419602:	test   eax,eax
  419604:	je     419bc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e30>
  41960a:	mov    eax,DWORD PTR [rcx]
  41960c:	add    rax,rcx
  41960f:	je     419c0f <__flatcc_fb_gen_c_json_printer@@Base+0x1e7f>
  419615:	movsxd rdx,DWORD PTR [rax]
  419618:	mov    rbx,rax
  41961b:	sub    rbx,rdx
  41961e:	cmp    WORD PTR [rbx],0x7
  419622:	jbe    419b41 <__flatcc_fb_gen_c_json_printer@@Base+0x1db1>
  419628:	movzx  edx,WORD PTR [rbx+0x6]
  41962c:	test   dx,dx
  41962f:	je     419b41 <__flatcc_fb_gen_c_json_printer@@Base+0x1db1>
  419635:	mov    QWORD PTR [rsp+0x28],0x0
  41963e:	add    rax,rdx
  419641:	mov    edx,DWORD PTR [rax]
  419643:	lea    rbp,[rax+rdx*1+0x4]
  419648:	test   rbp,rbp
  41964b:	je     419af0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d60>
  419651:	mov    eax,DWORD PTR [rbp-0x4]
  419654:	mov    QWORD PTR [rsp+0x38],rax
  419659:	test   rax,rax
  41965c:	je     419af0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d60>
  419662:	lea    r13,[rax-0x1]
  419666:	shr    rax,1
  419669:	mov    r15,rax
  41966c:	nop    DWORD PTR [rax+0x0]
  419670:	lea    rbx,[r15+r15*1]
  419674:	cmp    r13,rbx
  419677:	jb     419895 <__flatcc_fb_gen_c_json_printer@@Base+0x1b05>
  41967d:	mov    r12,r15
  419680:	mov    QWORD PTR [rsp+0x20],r15
  419685:	jmp    4196fd <__flatcc_fb_gen_c_json_printer@@Base+0x196d>
  419687:	nop    WORD PTR [rax+rax*1+0x0]
  419690:	mov    r10d,DWORD PTR [rdi-0x4]
  419694:	mov    DWORD PTR [rsp+0x18],r8d
  419699:	cmp    r11,r10
  41969c:	mov    rdx,r10
  41969f:	cmovbe rdx,r11
  4196a3:	mov    QWORD PTR [rsp+0x10],r9
  4196a8:	mov    QWORD PTR [rsp+0x8],r10
  4196ad:	mov    QWORD PTR [rsp],r11
  4196b1:	call   405260 <strncmp@plt>
  4196b6:	test   eax,eax
  4196b8:	mov    r11,QWORD PTR [rsp]
  4196bc:	mov    r10,QWORD PTR [rsp+0x8]
  4196c1:	mov    r9,QWORD PTR [rsp+0x10]
  4196c6:	mov    r8d,DWORD PTR [rsp+0x18]
  4196cb:	je     419887 <__flatcc_fb_gen_c_json_printer@@Base+0x1af7>
  4196d1:	jns    419890 <__flatcc_fb_gen_c_json_printer@@Base+0x1b00>
  4196d7:	sub    r12,rbx
  4196da:	shl    r12d,0x2
  4196de:	sub    r14d,r12d
  4196e1:	add    r8d,r12d
  4196e4:	lea    rax,[rbx+rbx*1]
  4196e8:	mov    DWORD PTR [r9],r14d
  4196eb:	mov    r12,rbx
  4196ee:	mov    DWORD PTR [r15],r8d
  4196f1:	cmp    r13,rax
  4196f4:	jb     419890 <__flatcc_fb_gen_c_json_printer@@Base+0x1b00>
  4196fa:	mov    rbx,rax
  4196fd:	mov    r14d,DWORD PTR [rbp-0x4]
  419701:	cmp    r13,rbx
  419704:	jbe    4197e1 <__flatcc_fb_gen_c_json_printer@@Base+0x1a51>
  41970a:	lea    rcx,[rbx*4+0x0]
  419712:	lea    rax,[rbp+rcx*1+0x0]
  419717:	cmp    r14,rbx
  41971a:	jbe    419bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  419720:	mov    edx,DWORD PTR [rax]
  419722:	add    rax,rdx
  419725:	je     419bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  41972b:	movsxd rdx,DWORD PTR [rax]
  41972e:	mov    rsi,rax
  419731:	sub    rsi,rdx
  419734:	cmp    WORD PTR [rsi],0x5
  419738:	jbe    419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41973e:	movzx  edx,WORD PTR [rsi+0x4]
  419742:	test   dx,dx
  419745:	je     419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41974b:	add    rax,rdx
  41974e:	mov    edx,DWORD PTR [rax]
  419750:	lea    r15,[rbx+0x1]
  419754:	lea    rdi,[rax+rdx*1+0x4]
  419759:	lea    rax,[rbp+rcx*1+0x4]
  41975e:	cmp    r15,r14
  419761:	jae    419bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  419767:	mov    edx,DWORD PTR [rax]
  419769:	add    rax,rdx
  41976c:	je     419bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  419772:	movsxd rdx,DWORD PTR [rax]
  419775:	mov    rsi,rax
  419778:	sub    rsi,rdx
  41977b:	cmp    WORD PTR [rsi],0x5
  41977f:	jbe    419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419785:	movzx  edx,WORD PTR [rsi+0x4]
  419789:	test   dx,dx
  41978c:	je     419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419792:	add    rax,rdx
  419795:	mov    edx,DWORD PTR [rax]
  419797:	xor    r9d,r9d
  41979a:	lea    rsi,[rax+rdx*1+0x4]
  41979f:	test   rsi,rsi
  4197a2:	je     4197a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1a18>
  4197a4:	mov    r9d,DWORD PTR [rsi-0x4]
  4197a8:	test   rdi,rdi
  4197ab:	je     419b60 <__flatcc_fb_gen_c_json_printer@@Base+0x1dd0>
  4197b1:	mov    ecx,DWORD PTR [rdi-0x4]
  4197b4:	mov    QWORD PTR [rsp],r9
  4197b8:	cmp    r9,rcx
  4197bb:	mov    rdx,rcx
  4197be:	cmovbe rdx,r9
  4197c2:	mov    QWORD PTR [rsp+0x8],rcx
  4197c7:	call   405260 <strncmp@plt>
  4197cc:	test   eax,eax
  4197ce:	mov    r9,QWORD PTR [rsp]
  4197d2:	mov    rcx,QWORD PTR [rsp+0x8]
  4197d7:	je     419b62 <__flatcc_fb_gen_c_json_printer@@Base+0x1dd2>
  4197dd:	cmovs  rbx,r15
  4197e1:	lea    r9,[rbp+r12*4+0x0]
  4197e6:	cmp    r12,r14
  4197e9:	jae    419bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  4197ef:	mov    eax,DWORD PTR [r9]
  4197f2:	mov    r8,rax
  4197f5:	add    rax,r9
  4197f8:	je     419bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  4197fe:	movsxd rdx,DWORD PTR [rax]
  419801:	mov    rdi,rax
  419804:	sub    rdi,rdx
  419807:	cmp    WORD PTR [rdi],0x5
  41980b:	jbe    419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419811:	movzx  edx,WORD PTR [rdi+0x4]
  419815:	test   dx,dx
  419818:	je     419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  41981e:	add    rax,rdx
  419821:	mov    edx,DWORD PTR [rax]
  419823:	lea    r15,[rbp+rbx*4+0x0]
  419828:	lea    rdi,[rax+rdx*1+0x4]
  41982d:	cmp    rbx,r14
  419830:	jae    419bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  419836:	mov    eax,DWORD PTR [r15]
  419839:	mov    r14,rax
  41983c:	add    rax,r15
  41983f:	je     419bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  419845:	movsxd rdx,DWORD PTR [rax]
  419848:	mov    rcx,rax
  41984b:	sub    rcx,rdx
  41984e:	cmp    WORD PTR [rcx],0x5
  419852:	jbe    419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419858:	movzx  edx,WORD PTR [rcx+0x4]
  41985c:	test   dx,dx
  41985f:	je     419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419865:	add    rax,rdx
  419868:	mov    edx,DWORD PTR [rax]
  41986a:	xor    r11d,r11d
  41986d:	lea    rsi,[rax+rdx*1+0x4]
  419872:	test   rsi,rsi
  419875:	je     41987b <__flatcc_fb_gen_c_json_printer@@Base+0x1aeb>
  419877:	mov    r11d,DWORD PTR [rsi-0x4]
  41987b:	test   rdi,rdi
  41987e:	jne    419690 <__flatcc_fb_gen_c_json_printer@@Base+0x1900>
  419884:	xor    r10d,r10d
  419887:	cmp    r11,r10
  41988a:	ja     4196d7 <__flatcc_fb_gen_c_json_printer@@Base+0x1947>
  419890:	mov    r15,QWORD PTR [rsp+0x20]
  419895:	dec    r15
  419898:	cmp    r15,0xffffffffffffffff
  41989c:	jne    419670 <__flatcc_fb_gen_c_json_printer@@Base+0x18e0>
  4198a2:	test   r13,r13
  4198a5:	je     419af0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d60>
  4198ab:	mov    r15d,0x1
  4198b1:	sub    r15,QWORD PTR [rsp+0x38]
  4198b6:	lea    eax,[r15*4+0x0]
  4198be:	mov    DWORD PTR [rsp+0x20],eax
  4198c2:	nop    WORD PTR [rax+rax*1+0x0]
  4198c8:	mov    eax,DWORD PTR [rbp+r13*4+0x0]
  4198cd:	mov    edx,DWORD PTR [rbp+0x0]
  4198d0:	mov    ecx,DWORD PTR [rsp+0x20]
  4198d4:	xor    r12d,r12d
  4198d7:	add    edx,ecx
  4198d9:	sub    eax,ecx
  4198db:	mov    DWORD PTR [rbp+0x0],eax
  4198de:	xor    ebx,ebx
  4198e0:	mov    DWORD PTR [rbp+r13*4+0x0],edx
  4198e5:	dec    r13
  4198e8:	jmp    41996a <__flatcc_fb_gen_c_json_printer@@Base+0x1bda>
  4198ed:	nop    DWORD PTR [rax]
  4198f0:	mov    r10d,DWORD PTR [rsi-0x4]
  4198f4:	test   rdi,rdi
  4198f7:	je     419b70 <__flatcc_fb_gen_c_json_printer@@Base+0x1de0>
  4198fd:	mov    r9d,DWORD PTR [rdi-0x4]
  419901:	mov    QWORD PTR [rsp+0x18],r8
  419906:	cmp    r10,r9
  419909:	mov    rdx,r9
  41990c:	cmovbe rdx,r10
  419910:	mov    QWORD PTR [rsp+0x10],rcx
  419915:	mov    QWORD PTR [rsp+0x8],r9
  41991a:	mov    QWORD PTR [rsp],r10
  41991e:	call   405260 <strncmp@plt>
  419923:	test   eax,eax
  419925:	mov    r10,QWORD PTR [rsp]
  419929:	mov    r9,QWORD PTR [rsp+0x8]
  41992e:	mov    rcx,QWORD PTR [rsp+0x10]
  419933:	mov    r8,QWORD PTR [rsp+0x18]
  419938:	je     419b73 <__flatcc_fb_gen_c_json_printer@@Base+0x1de3>
  41993e:	jns    419ae1 <__flatcc_fb_gen_c_json_printer@@Base+0x1d51>
  419944:	sub    r12,rbx
  419947:	shl    r12d,0x2
  41994b:	sub    r14d,r12d
  41994e:	add    r15d,r12d
  419951:	lea    rax,[rbx+rbx*1]
  419955:	mov    DWORD PTR [rcx],r14d
  419958:	mov    r12,rbx
  41995b:	mov    DWORD PTR [r8],r15d
  41995e:	cmp    r13,rax
  419961:	jb     419ae1 <__flatcc_fb_gen_c_json_printer@@Base+0x1d51>
  419967:	mov    rbx,rax
  41996a:	mov    r14d,DWORD PTR [rbp-0x4]
  41996e:	cmp    r13,rbx
  419971:	jbe    419a4b <__flatcc_fb_gen_c_json_printer@@Base+0x1cbb>
  419977:	lea    rcx,[rbx*4+0x0]
  41997f:	lea    rax,[rbp+rcx*1+0x0]
  419984:	cmp    r14,rbx
  419987:	jbe    419bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  41998d:	mov    edx,DWORD PTR [rax]
  41998f:	add    rax,rdx
  419992:	je     419bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  419998:	movsxd rdx,DWORD PTR [rax]
  41999b:	mov    rdi,rax
  41999e:	sub    rdi,rdx
  4199a1:	cmp    WORD PTR [rdi],0x5
  4199a5:	jbe    419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  4199ab:	movzx  edx,WORD PTR [rdi+0x4]
  4199af:	test   dx,dx
  4199b2:	je     419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  4199b8:	add    rax,rdx
  4199bb:	mov    edx,DWORD PTR [rax]
  4199bd:	lea    r15,[rbx+0x1]
  4199c1:	lea    rdi,[rax+rdx*1+0x4]
  4199c6:	lea    rax,[rbp+rcx*1+0x4]
  4199cb:	cmp    r15,r14
  4199ce:	jae    419bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  4199d4:	mov    edx,DWORD PTR [rax]
  4199d6:	add    rax,rdx
  4199d9:	je     419bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  4199df:	movsxd rdx,DWORD PTR [rax]
  4199e2:	mov    rsi,rax
  4199e5:	sub    rsi,rdx
  4199e8:	cmp    WORD PTR [rsi],0x5
  4199ec:	jbe    419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  4199f2:	movzx  edx,WORD PTR [rsi+0x4]
  4199f6:	test   dx,dx
  4199f9:	je     419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  4199ff:	add    rax,rdx
  419a02:	mov    edx,DWORD PTR [rax]
  419a04:	lea    rsi,[rax+rdx*1+0x4]
  419a09:	test   rsi,rsi
  419a0c:	je     419a4b <__flatcc_fb_gen_c_json_printer@@Base+0x1cbb>
  419a0e:	mov    r8d,DWORD PTR [rsi-0x4]
  419a12:	test   rdi,rdi
  419a15:	je     419b90 <__flatcc_fb_gen_c_json_printer@@Base+0x1e00>
  419a1b:	mov    ecx,DWORD PTR [rdi-0x4]
  419a1e:	mov    QWORD PTR [rsp],r8
  419a22:	cmp    r8,rcx
  419a25:	mov    rdx,rcx
  419a28:	cmovbe rdx,r8
  419a2c:	mov    QWORD PTR [rsp+0x8],rcx
  419a31:	call   405260 <strncmp@plt>
  419a36:	test   eax,eax
  419a38:	mov    r8,QWORD PTR [rsp]
  419a3c:	mov    rcx,QWORD PTR [rsp+0x8]
  419a41:	je     419b92 <__flatcc_fb_gen_c_json_printer@@Base+0x1e02>
  419a47:	cmovs  rbx,r15
  419a4b:	lea    rcx,[rbp+r12*4+0x0]
  419a50:	cmp    r12,r14
  419a53:	jae    419bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  419a59:	mov    eax,DWORD PTR [rcx]
  419a5b:	mov    r15,rax
  419a5e:	add    rax,rcx
  419a61:	je     419bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  419a67:	movsxd rdx,DWORD PTR [rax]
  419a6a:	mov    rdi,rax
  419a6d:	sub    rdi,rdx
  419a70:	cmp    WORD PTR [rdi],0x5
  419a74:	jbe    419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419a7a:	movzx  edx,WORD PTR [rdi+0x4]
  419a7e:	test   dx,dx
  419a81:	je     419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419a87:	add    rax,rdx
  419a8a:	mov    edx,DWORD PTR [rax]
  419a8c:	lea    r8,[rbp+rbx*4+0x0]
  419a91:	lea    rdi,[rax+rdx*1+0x4]
  419a96:	cmp    rbx,r14
  419a99:	jae    419bf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
  419a9f:	mov    eax,DWORD PTR [r8]
  419aa2:	mov    r14,rax
  419aa5:	add    rax,r8
  419aa8:	je     419bd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e40>
  419aae:	movsxd rdx,DWORD PTR [rax]
  419ab1:	mov    rsi,rax
  419ab4:	sub    rsi,rdx
  419ab7:	cmp    WORD PTR [rsi],0x5
  419abb:	jbe    419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419ac1:	movzx  edx,WORD PTR [rsi+0x4]
  419ac5:	test   dx,dx
  419ac8:	je     419ba0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e10>
  419ace:	add    rax,rdx
  419ad1:	mov    edx,DWORD PTR [rax]
  419ad3:	lea    rsi,[rax+rdx*1+0x4]
  419ad8:	test   rsi,rsi
  419adb:	jne    4198f0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b60>
  419ae1:	add    DWORD PTR [rsp+0x20],0x4
  419ae6:	test   r13,r13
  419ae9:	jne    4198c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1b38>
  419aef:	nop
  419af0:	inc    QWORD PTR [rsp+0x28]
  419af5:	mov    rax,QWORD PTR [rsp+0x30]
  419afa:	mov    eax,DWORD PTR [rax-0x4]
  419afd:	mov    rbx,QWORD PTR [rsp+0x28]
  419b02:	cmp    rbx,rax
  419b05:	jae    419bc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e30>
  419b0b:	mov    rbx,QWORD PTR [rsp+0x30]
  419b10:	mov    rdi,QWORD PTR [rsp+0x28]
  419b15:	mov    edx,DWORD PTR [rbx+rdi*4]
  419b18:	lea    rax,[rbx+rdi*4]
  419b1c:	add    rax,rdx
  419b1f:	je     419c0f <__flatcc_fb_gen_c_json_printer@@Base+0x1e7f>
  419b25:	movsxd rdx,DWORD PTR [rax]
  419b28:	mov    rbx,rax
  419b2b:	sub    rbx,rdx
  419b2e:	cmp    WORD PTR [rbx],0x7
  419b32:	jbe    419b41 <__flatcc_fb_gen_c_json_printer@@Base+0x1db1>
  419b34:	movzx  edx,WORD PTR [rbx+0x6]
  419b38:	test   dx,dx
  419b3b:	jne    41963e <__flatcc_fb_gen_c_json_printer@@Base+0x18ae>
  419b41:	lea    rcx,[rip+0x2be58]        # 4459a0 <_IO_stdin_used@@Base+0x189a0>
  419b48:	mov    edx,0xe0
  419b4d:	lea    rsi,[rip+0x2bc2c]        # 445780 <_IO_stdin_used@@Base+0x18780>
  419b54:	lea    rdi,[rip+0x2bcc5]        # 445820 <_IO_stdin_used@@Base+0x18820>
  419b5b:	call   4052e0 <__assert_fail@plt>
  419b60:	xor    ecx,ecx
  419b62:	cmp    r9,rcx
  419b65:	cmova  rbx,r15
  419b69:	jmp    4197e1 <__flatcc_fb_gen_c_json_printer@@Base+0x1a51>
  419b6e:	xchg   ax,ax
  419b70:	xor    r9d,r9d
  419b73:	cmp    r10,r9
  419b76:	ja     419944 <__flatcc_fb_gen_c_json_printer@@Base+0x1bb4>
  419b7c:	add    DWORD PTR [rsp+0x20],0x4
  419b81:	test   r13,r13
  419b84:	jne    4198c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1b38>
  419b8a:	jmp    419af0 <__flatcc_fb_gen_c_json_printer@@Base+0x1d60>
  419b8f:	nop
  419b90:	xor    ecx,ecx
  419b92:	cmp    r8,rcx
  419b95:	cmova  rbx,r15
  419b99:	jmp    419a4b <__flatcc_fb_gen_c_json_printer@@Base+0x1cbb>
  419b9e:	xchg   ax,ax
  419ba0:	lea    rcx,[rip+0x2bdb9]        # 445960 <_IO_stdin_used@@Base+0x18960>
  419ba7:	mov    edx,0xc3
  419bac:	lea    rsi,[rip+0x2bbcd]        # 445780 <_IO_stdin_used@@Base+0x18780>
  419bb3:	lea    rdi,[rip+0x2bc66]        # 445820 <_IO_stdin_used@@Base+0x18820>
  419bba:	call   4052e0 <__assert_fail@plt>
  419bbf:	nop
  419bc0:	add    rsp,0x48
  419bc4:	pop    rbx
  419bc5:	pop    rbp
  419bc6:	pop    r12
  419bc8:	pop    r13
  419bca:	pop    r14
  419bcc:	pop    r15
  419bce:	ret    
  419bcf:	nop
  419bd0:	lea    rcx,[rip+0x2bd89]        # 445960 <_IO_stdin_used@@Base+0x18960>
  419bd7:	mov    edx,0xc3
  419bdc:	lea    rsi,[rip+0x2bb9d]        # 445780 <_IO_stdin_used@@Base+0x18780>
  419be3:	lea    rdi,[rip+0x2bc0e]        # 4457f8 <_IO_stdin_used@@Base+0x187f8>
  419bea:	call   4052e0 <__assert_fail@plt>
  419bef:	nop
  419bf0:	lea    rcx,[rip+0x2bd89]        # 445980 <_IO_stdin_used@@Base+0x18980>
  419bf7:	mov    edx,0xc0
  419bfc:	lea    rsi,[rip+0x2bb7d]        # 445780 <_IO_stdin_used@@Base+0x18780>
  419c03:	lea    rdi,[rip+0x2bc3e]        # 445848 <_IO_stdin_used@@Base+0x18848>
  419c0a:	call   4052e0 <__assert_fail@plt>
  419c0f:	lea    rcx,[rip+0x2bd8a]        # 4459a0 <_IO_stdin_used@@Base+0x189a0>
  419c16:	mov    edx,0xe0
  419c1b:	lea    rsi,[rip+0x2bb5e]        # 445780 <_IO_stdin_used@@Base+0x18780>
  419c22:	lea    rdi,[rip+0x2bbcf]        # 4457f8 <_IO_stdin_used@@Base+0x187f8>
  419c29:	call   4052e0 <__assert_fail@plt>
  419c2e:	lea    rcx,[rip+0x2bd8b]        # 4459c0 <_IO_stdin_used@@Base+0x189c0>
  419c35:	mov    edx,0xed
  419c3a:	lea    rsi,[rip+0x2bb3f]        # 445780 <_IO_stdin_used@@Base+0x18780>
  419c41:	lea    rdi,[rip+0x2bbd8]        # 445820 <_IO_stdin_used@@Base+0x18820>
  419c48:	call   4052e0 <__assert_fail@plt>
  419c4d:	nop    DWORD PTR [rax]

0000000000419c50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
  419c50:	endbr64 
  419c54:	push   r14
  419c56:	mov    r14,rsi
  419c59:	push   r13
  419c5b:	mov    r13,rdi
  419c5e:	push   r12
  419c60:	mov    r12,rcx
  419c63:	push   rbp
  419c64:	mov    rbp,rdx
  419c67:	push   rbx
  419c68:	sub    rsp,0x190
  419c6f:	mov    rbx,rsp
  419c72:	mov    rdi,rbx
  419c75:	mov    rax,QWORD PTR fs:0x28
  419c7e:	mov    QWORD PTR [rsp+0x188],rax
  419c86:	xor    eax,eax
  419c88:	call   427c80 <flatcc_builder_init@@Base>
  419c8d:	mov    esi,DWORD PTR [r13+0xd8]
  419c94:	lea    rdx,[r13+0xdc]
  419c9b:	mov    rdi,rbx
  419c9e:	mov    rcx,r14
  419ca1:	call   418870 <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
  419ca6:	mov    rdx,QWORD PTR [r12]
  419caa:	mov    rsi,rbp
  419cad:	mov    rdi,rbx
  419cb0:	call   42b240 <flatcc_builder_copy_buffer@@Base>
  419cb5:	test   rax,rax
  419cb8:	je     419cc2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x72>
  419cba:	mov    rdi,rbp
  419cbd:	call   419580 <__flatcc_fb_gen_c_json_printer@@Base+0x17f0>
  419cc2:	mov    rdi,rbx
  419cc5:	call   42b120 <flatcc_builder_get_buffer_size@@Base>
  419cca:	mov    QWORD PTR [r12],rax
  419cce:	mov    rdi,rbx
  419cd1:	call   427e40 <flatcc_builder_clear@@Base>
  419cd6:	mov    rcx,QWORD PTR [rsp+0x188]
  419cde:	xor    rcx,QWORD PTR fs:0x28
  419ce7:	mov    rax,rbp
  419cea:	jne    419cfc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac>
  419cec:	add    rsp,0x190
  419cf3:	pop    rbx
  419cf4:	pop    rbp
  419cf5:	pop    r12
  419cf7:	pop    r13
  419cf9:	pop    r14
  419cfb:	ret    
  419cfc:	call   4052c0 <__stack_chk_fail@plt>
  419d01:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419d0c:	nop    DWORD PTR [rax+0x0]

0000000000419d10 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
  419d10:	endbr64 
  419d14:	push   r13
  419d16:	mov    r13,rsi
  419d19:	push   r12
  419d1b:	mov    r12,rdx
  419d1e:	push   rbp
  419d1f:	mov    rbp,rdi
  419d22:	push   rbx
  419d23:	sub    rsp,0x198
  419d2a:	mov    rbx,rsp
  419d2d:	mov    rdi,rbx
  419d30:	mov    rax,QWORD PTR fs:0x28
  419d39:	mov    QWORD PTR [rsp+0x188],rax
  419d41:	xor    eax,eax
  419d43:	call   427c80 <flatcc_builder_init@@Base>
  419d48:	mov    esi,DWORD PTR [rbp+0xd8]
  419d4e:	lea    rdx,[rbp+0xdc]
  419d55:	mov    rcx,r13
  419d58:	mov    rdi,rbx
  419d5b:	call   418870 <__flatcc_fb_gen_c_json_printer@@Base+0xae0>
  419d60:	xor    ebp,ebp
  419d62:	test   eax,eax
  419d64:	jne    419d81 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x71>
  419d66:	mov    rsi,r12
  419d69:	mov    rdi,rbx
  419d6c:	call   42b2a0 <flatcc_builder_finalize_buffer@@Base>
  419d71:	mov    rbp,rax
  419d74:	test   rax,rax
  419d77:	je     419d81 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x71>
  419d79:	mov    rdi,rax
  419d7c:	call   419580 <__flatcc_fb_gen_c_json_printer@@Base+0x17f0>
  419d81:	mov    rdi,rbx
  419d84:	call   427e40 <flatcc_builder_clear@@Base>
  419d89:	mov    rcx,QWORD PTR [rsp+0x188]
  419d91:	xor    rcx,QWORD PTR fs:0x28
  419d9a:	mov    rax,rbp
  419d9d:	jne    419dad <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x9d>
  419d9f:	add    rsp,0x198
  419da6:	pop    rbx
  419da7:	pop    rbp
  419da8:	pop    r12
  419daa:	pop    r13
  419dac:	ret    
  419dad:	call   4052c0 <__stack_chk_fail@plt>
  419db2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  419dbd:	nop    DWORD PTR [rax]

0000000000419dc0 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
  419dc0:	endbr64 
  419dc4:	push   r14
  419dc6:	push   r13
  419dc8:	push   r12
  419dca:	mov    r12,rsi
  419dcd:	push   rbp
  419dce:	mov    rbp,rdi
  419dd1:	push   rbx
  419dd2:	sub    rsp,0x10
  419dd6:	mov    rbx,QWORD PTR [rdi+0x108]
  419ddd:	mov    rax,QWORD PTR fs:0x28
  419de6:	mov    QWORD PTR [rsp+0x8],rax
  419deb:	xor    eax,eax
  419ded:	mov    r13d,DWORD PTR [rdi+0x80]
  419df4:	test   rbx,rbx
  419df7:	je     419f00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x140>
  419dfd:	mov    rdi,rbx
  419e00:	call   4052b0 <strlen@plt>
  419e05:	mov    r14,rax
  419e08:	test   r13d,r13d
  419e0b:	je     419ea0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe0>
  419e11:	mov    rax,QWORD PTR [rip+0x371b8]        # 450fd0 <stdout@GLIBC_2.2.5>
  419e18:	mov    rbx,QWORD PTR [rax]
  419e1b:	test   rbx,rbx
  419e1e:	je     419f85 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c5>
  419e24:	mov    rdi,rbp
  419e27:	mov    rdx,rsp
  419e2a:	mov    rsi,r12
  419e2d:	call   419d10 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  419e32:	mov    rbp,rax
  419e35:	test   rax,rax
  419e38:	je     419f40 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x180>
  419e3e:	mov    rdx,QWORD PTR [rsp]
  419e42:	mov    rcx,rbx
  419e45:	mov    esi,0x1
  419e4a:	mov    rdi,rax
  419e4d:	call   4053d0 <fwrite@plt>
  419e52:	xor    r12d,r12d
  419e55:	cmp    rax,QWORD PTR [rsp]
  419e59:	jne    419f10 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x150>
  419e5f:	mov    rdi,rbp
  419e62:	call   405230 <free@plt>
  419e67:	mov    rax,QWORD PTR [rip+0x37162]        # 450fd0 <stdout@GLIBC_2.2.5>
  419e6e:	cmp    QWORD PTR [rax],rbx
  419e71:	je     419e7b <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbb>
  419e73:	mov    rdi,rbx
  419e76:	call   4052a0 <fclose@plt>
  419e7b:	mov    rcx,QWORD PTR [rsp+0x8]
  419e80:	xor    rcx,QWORD PTR fs:0x28
  419e89:	mov    eax,r12d
  419e8c:	jne    419f90 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0>
  419e92:	add    rsp,0x10
  419e96:	pop    rbx
  419e97:	pop    rbp
  419e98:	pop    r12
  419e9a:	pop    r13
  419e9c:	pop    r14
  419e9e:	ret    
  419e9f:	nop
  419ea0:	mov    r13,QWORD PTR [r12+0x110]
  419ea8:	mov    rdi,r13
  419eab:	call   4052b0 <strlen@plt>
  419eb0:	mov    rcx,rax
  419eb3:	mov    rdx,r13
  419eb6:	mov    r9d,0x1
  419ebc:	lea    r8,[rip+0x14204]        # 42e0c7 <_IO_stdin_used@@Base+0x10c7>
  419ec3:	mov    rsi,r14
  419ec6:	mov    rdi,rbx
  419ec9:	call   41cef0 <__flatcc_fb_create_join_path_n@@Base>
  419ece:	mov    r13,rax
  419ed1:	test   rax,rax
  419ed4:	je     419f95 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d5>
  419eda:	lea    rsi,[rip+0x1422b]        # 42e10c <_IO_stdin_used@@Base+0x110c>
  419ee1:	mov    rdi,rax
  419ee4:	call   4053b0 <fopen@plt>
  419ee9:	mov    rbx,rax
  419eec:	test   rax,rax
  419eef:	je     419f60 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1a0>
  419ef1:	mov    rdi,r13
  419ef4:	call   405230 <free@plt>
  419ef9:	jmp    419e1b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b>
  419efe:	xchg   ax,ax
  419f00:	xor    r14d,r14d
  419f03:	lea    rbx,[rip+0x2b214]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  419f0a:	jmp    419e08 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x48>
  419f0f:	nop
  419f10:	mov    rax,QWORD PTR [rip+0x370d1]        # 450fe8 <stderr@GLIBC_2.2.5>
  419f17:	lea    rdx,[rip+0x2b9c2]        # 4458e0 <_IO_stdin_used@@Base+0x188e0>
  419f1e:	mov    rdi,QWORD PTR [rax]
  419f21:	mov    esi,0x1
  419f26:	xor    eax,eax
  419f28:	call   4053e0 <__fprintf_chk@plt>
  419f2d:	mov    r12d,0xffffffff
  419f33:	jmp    419e5f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x9f>
  419f38:	nop    DWORD PTR [rax+rax*1+0x0]
  419f40:	lea    rsi,[rip+0x2b971]        # 4458b8 <_IO_stdin_used@@Base+0x188b8>
  419f47:	mov    edi,0x1
  419f4c:	xor    eax,eax
  419f4e:	call   4053a0 <__printf_chk@plt>
  419f53:	mov    r12d,0xffffffff
  419f59:	jmp    419e67 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xa7>
  419f5e:	xchg   ax,ax
  419f60:	mov    rax,QWORD PTR [rip+0x37081]        # 450fe8 <stderr@GLIBC_2.2.5>
  419f67:	mov    rcx,r13
  419f6a:	mov    rdi,QWORD PTR [rax]
  419f6d:	lea    rdx,[rip+0x2b90c]        # 445880 <_IO_stdin_used@@Base+0x18880>
  419f74:	mov    esi,0x1
  419f79:	xor    eax,eax
  419f7b:	call   4053e0 <__fprintf_chk@plt>
  419f80:	jmp    419ef1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x131>
  419f85:	mov    r12d,0xffffffff
  419f8b:	jmp    419e7b <__flatcc_fb_codegen_bfbs_to_file@@Base+0xbb>
  419f90:	call   4052c0 <__stack_chk_fail@plt>
  419f95:	mov    rax,QWORD PTR [rip+0x3704c]        # 450fe8 <stderr@GLIBC_2.2.5>
  419f9c:	lea    rdx,[rip+0x13ffd]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  419fa3:	mov    rdi,QWORD PTR [rax]
  419fa6:	mov    esi,0x1
  419fab:	xor    eax,eax
  419fad:	call   4053e0 <__fprintf_chk@plt>
  419fb2:	mov    edi,0x1
  419fb7:	call   4053c0 <exit@plt>
  419fbc:	nop    DWORD PTR [rax+0x0]
  419fc0:	push   rbx
  419fc1:	mov    rbx,rdi
  419fc4:	mov    rdi,QWORD PTR [rdi]
  419fc7:	test   rdi,rdi
  419fca:	je     419fd1 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x211>
  419fcc:	call   405230 <free@plt>
  419fd1:	vpxor  xmm0,xmm0,xmm0
  419fd5:	vmovups XMMWORD PTR [rbx],xmm0
  419fd9:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  419fde:	pop    rbx
  419fdf:	ret    
  419fe0:	push   r15
  419fe2:	mov    rax,rdi
  419fe5:	push   r14
  419fe7:	push   r13
  419fe9:	push   r12
  419feb:	push   rbp
  419fec:	push   rbx
  419fed:	sub    rsp,0x38
  419ff1:	mov    QWORD PTR [rsp+0x18],rdi
  419ff6:	mov    QWORD PTR [rsp+0x8],rsi
  419ffb:	mov    r12,QWORD PTR [rdi]
  419ffe:	mov    rcx,QWORD PTR fs:0x28
  41a007:	mov    QWORD PTR [rsp+0x28],rcx
  41a00c:	xor    ecx,ecx
  41a00e:	test   r12,r12
  41a011:	je     41a087 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c7>
  41a013:	mov    rax,QWORD PTR [rax+0x18]
  41a017:	mov    r14,rdx
  41a01a:	mov    rdi,rsi
  41a01d:	lea    rcx,[rsp+0x20]
  41a022:	mov    edx,0x2f693b52
  41a027:	mov    rsi,r14
  41a02a:	mov    QWORD PTR [rsp+0x10],rax
  41a02f:	lea    rbp,[rax-0x1]
  41a033:	call   42bb90 <cmetrohash64_1@@Base>
  41a038:	mov    ecx,DWORD PTR [rsp+0x20]
  41a03c:	mov    rax,rbp
  41a03f:	and    rax,rcx
  41a042:	lea    r15,[r12+rax*8]
  41a046:	mov    rbx,QWORD PTR [r15]
  41a049:	test   rbx,rbx
  41a04c:	je     41a087 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c7>
  41a04e:	lea    r13,[rcx+0x1]
  41a052:	nop    WORD PTR [rax+rax*1+0x0]
  41a058:	cmp    rbx,0x2
  41a05c:	je     41a072 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2b2>
  41a05e:	mov    rdi,QWORD PTR [rsp+0x8]
  41a063:	mov    rdx,r14
  41a066:	mov    rsi,rbx
  41a069:	call   405260 <strncmp@plt>
  41a06e:	test   eax,eax
  41a070:	je     41a0b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f0>
  41a072:	mov    rax,r13
  41a075:	and    rax,rbp
  41a078:	lea    r15,[r12+rax*8]
  41a07c:	mov    rbx,QWORD PTR [r15]
  41a07f:	inc    r13
  41a082:	test   rbx,rbx
  41a085:	jne    41a058 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x298>
  41a087:	xor    ebx,ebx
  41a089:	mov    rcx,QWORD PTR [rsp+0x28]
  41a08e:	xor    rcx,QWORD PTR fs:0x28
  41a097:	mov    rax,rbx
  41a09a:	jne    41a0c2 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x302>
  41a09c:	add    rsp,0x38
  41a0a0:	pop    rbx
  41a0a1:	pop    rbp
  41a0a2:	pop    r12
  41a0a4:	pop    r13
  41a0a6:	pop    r14
  41a0a8:	pop    r15
  41a0aa:	ret    
  41a0ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41a0b0:	mov    rax,QWORD PTR [rsp+0x18]
  41a0b5:	mov    QWORD PTR [r15],0x2
  41a0bc:	dec    QWORD PTR [rax+0x10]
  41a0c0:	jmp    41a089 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c9>
  41a0c2:	call   4052c0 <__stack_chk_fail@plt>
  41a0c7:	nop    WORD PTR [rax+rax*1+0x0]
  41a0d0:	push   r14
  41a0d2:	push   r13
  41a0d4:	push   r12
  41a0d6:	mov    r12,rdi
  41a0d9:	push   rbp
  41a0da:	push   rbx
  41a0db:	sub    rsp,0x30
  41a0df:	mov    rax,QWORD PTR fs:0x28
  41a0e8:	mov    QWORD PTR [rsp+0x28],rax
  41a0ed:	xor    eax,eax
  41a0ef:	cmp    QWORD PTR [rdi+0x10],rsi
  41a0f3:	cmovae rsi,QWORD PTR [rdi+0x10]
  41a0f8:	mov    r13,QWORD PTR [rdi]
  41a0fb:	cmp    rsi,0x2
  41a0ff:	jbe    41a1f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x430>
  41a105:	mov    eax,0x4
  41a10a:	nop    WORD PTR [rax+rax*1+0x0]
  41a110:	lea    rbx,[rax+rax*1]
  41a114:	imul   rax,rax,0x166
  41a11b:	shr    rax,0x8
  41a11f:	mov    rdx,rax
  41a122:	mov    rax,rbx
  41a125:	cmp    rsi,rdx
  41a128:	ja     41a110 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x350>
  41a12a:	mov    esi,0x8
  41a12f:	mov    rdi,rbx
  41a132:	call   405320 <calloc@plt>
  41a137:	mov    QWORD PTR [rsp],rax
  41a13b:	test   rax,rax
  41a13e:	je     41a1fa <__flatcc_fb_codegen_bfbs_to_file@@Base+0x43a>
  41a144:	cmp    QWORD PTR [r12+0x18],0x0
  41a14a:	mov    QWORD PTR [rsp+0x8],0x0
  41a153:	mov    QWORD PTR [rsp+0x18],rbx
  41a158:	mov    QWORD PTR [rsp+0x10],0x0
  41a161:	je     41a1a9 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e9>
  41a163:	xor    ebx,ebx
  41a165:	mov    r14,rsp
  41a168:	nop    DWORD PTR [rax+rax*1+0x0]
  41a170:	mov    rbp,QWORD PTR [r13+rbx*8+0x0]
  41a175:	test   rbp,rbp
  41a178:	je     41a19f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3df>
  41a17a:	cmp    rbp,0x2
  41a17e:	je     41a19f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3df>
  41a180:	mov    rdi,rbp
  41a183:	call   4052b0 <strlen@plt>
  41a188:	mov    rdx,rax
  41a18b:	mov    r8d,0x3
  41a191:	mov    rcx,rbp
  41a194:	mov    rsi,rbp
  41a197:	mov    rdi,r14
  41a19a:	call   41a210 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  41a19f:	inc    rbx
  41a1a2:	cmp    QWORD PTR [r12+0x18],rbx
  41a1a7:	ja     41a170 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
  41a1a9:	mov    rdi,r12
  41a1ac:	call   419fc0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x200>
  41a1b1:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41a1b6:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41a1bc:	vmovups XMMWORD PTR [r12],xmm0
  41a1c2:	vmovups XMMWORD PTR [r12+0x10],xmm1
  41a1c9:	xor    eax,eax
  41a1cb:	mov    rcx,QWORD PTR [rsp+0x28]
  41a1d0:	xor    rcx,QWORD PTR fs:0x28
  41a1d9:	jne    41a201 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x441>
  41a1db:	add    rsp,0x30
  41a1df:	pop    rbx
  41a1e0:	pop    rbp
  41a1e1:	pop    r12
  41a1e3:	pop    r13
  41a1e5:	pop    r14
  41a1e7:	ret    
  41a1e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a1f0:	mov    ebx,0x4
  41a1f5:	jmp    41a12a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36a>
  41a1fa:	mov    eax,0xffffffff
  41a1ff:	jmp    41a1cb <__flatcc_fb_codegen_bfbs_to_file@@Base+0x40b>
  41a201:	call   4052c0 <__stack_chk_fail@plt>
  41a206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a210:	push   r15
  41a212:	push   r14
  41a214:	push   r13
  41a216:	push   r12
  41a218:	push   rbp
  41a219:	push   rbx
  41a21a:	sub    rsp,0x48
  41a21e:	mov    QWORD PTR [rsp+0x20],rdi
  41a223:	mov    QWORD PTR [rsp+0x8],rsi
  41a228:	mov    QWORD PTR [rsp+0x10],rdx
  41a22d:	mov    QWORD PTR [rsp+0x18],rcx
  41a232:	mov    DWORD PTR [rsp+0x2c],r8d
  41a237:	mov    rdi,QWORD PTR fs:0x28
  41a240:	mov    QWORD PTR [rsp+0x38],rdi
  41a245:	xor    edi,edi
  41a247:	test   rcx,rcx
  41a24a:	je     41a444 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x684>
  41a250:	cmp    QWORD PTR [rsp+0x18],0x2
  41a256:	je     41a425 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x665>
  41a25c:	cmp    QWORD PTR [rsp+0x18],0x1
  41a262:	je     41a406 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x646>
  41a268:	mov    rcx,QWORD PTR [rsp+0x20]
  41a26d:	mov    rbx,QWORD PTR [rcx+0x18]
  41a271:	mov    rsi,QWORD PTR [rcx+0x10]
  41a275:	imul   rax,rbx,0xb3
  41a27c:	shr    rax,0x8
  41a280:	cmp    rsi,rax
  41a283:	jae    41a330 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>
  41a289:	mov    rax,QWORD PTR [rsp+0x20]
  41a28e:	mov    rsi,QWORD PTR [rsp+0x10]
  41a293:	mov    rdi,QWORD PTR [rsp+0x8]
  41a298:	lea    rcx,[rsp+0x30]
  41a29d:	mov    edx,0x2f693b52
  41a2a2:	mov    rbp,QWORD PTR [rax]
  41a2a5:	dec    rbx
  41a2a8:	call   42bb90 <cmetrohash64_1@@Base>
  41a2ad:	mov    r8d,DWORD PTR [rsp+0x30]
  41a2b2:	mov    rax,rbx
  41a2b5:	and    rax,r8
  41a2b8:	lea    r13,[rbp+rax*8+0x0]
  41a2bd:	mov    eax,DWORD PTR [rsp+0x2c]
  41a2c1:	sub    eax,0x2
  41a2c4:	cmp    eax,0x1
  41a2c7:	jbe    41a3b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5f0>
  41a2cd:	mov    r15,QWORD PTR [r13+0x0]
  41a2d1:	lea    r14,[r8+0x1]
  41a2d5:	xor    r12d,r12d
  41a2d8:	test   r15,r15
  41a2db:	jne    41a319 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x559>
  41a2dd:	jmp    41a3fe <__flatcc_fb_codegen_bfbs_to_file@@Base+0x63e>
  41a2e2:	nop    WORD PTR [rax+rax*1+0x0]
  41a2e8:	mov    rdx,QWORD PTR [rsp+0x10]
  41a2ed:	mov    rdi,QWORD PTR [rsp+0x8]
  41a2f2:	mov    rsi,r15
  41a2f5:	call   405260 <strncmp@plt>
  41a2fa:	test   eax,eax
  41a2fc:	je     41a398 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5d8>
  41a302:	mov    rax,rbx
  41a305:	and    rax,r14
  41a308:	lea    r13,[rbp+rax*8+0x0]
  41a30d:	mov    r15,QWORD PTR [r13+0x0]
  41a311:	inc    r14
  41a314:	test   r15,r15
  41a317:	je     41a350 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x590>
  41a319:	cmp    r15,0x2
  41a31d:	jne    41a2e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x528>
  41a31f:	test   r12,r12
  41a322:	cmove  r12,r13
  41a326:	jmp    41a302 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x542>
  41a328:	nop    DWORD PTR [rax+rax*1+0x0]
  41a330:	add    rsi,rsi
  41a333:	mov    rdi,rcx
  41a336:	mov    rbx,rcx
  41a339:	call   41a0d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x310>
  41a33e:	test   eax,eax
  41a340:	jne    41a463 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6a3>
  41a346:	mov    rbx,QWORD PTR [rbx+0x18]
  41a34a:	jmp    41a289 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c9>
  41a34f:	nop
  41a350:	test   r12,r12
  41a353:	cmove  r12,r13
  41a357:	mov    rax,QWORD PTR [rsp+0x20]
  41a35c:	xor    r15d,r15d
  41a35f:	inc    QWORD PTR [rax+0x10]
  41a363:	mov    rax,QWORD PTR [rsp+0x18]
  41a368:	mov    QWORD PTR [r12],rax
  41a36c:	mov    rdi,QWORD PTR [rsp+0x38]
  41a371:	xor    rdi,QWORD PTR fs:0x28
  41a37a:	mov    rax,r15
  41a37d:	jne    41a491 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d1>
  41a383:	add    rsp,0x48
  41a387:	pop    rbx
  41a388:	pop    rbp
  41a389:	pop    r12
  41a38b:	pop    r13
  41a38d:	pop    r14
  41a38f:	pop    r15
  41a391:	ret    
  41a392:	nop    WORD PTR [rax+rax*1+0x0]
  41a398:	mov    eax,DWORD PTR [rsp+0x2c]
  41a39c:	test   eax,eax
  41a39e:	jne    41a36c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
  41a3a0:	mov    rax,QWORD PTR [rsp+0x18]
  41a3a5:	mov    QWORD PTR [r13+0x0],rax
  41a3a9:	jmp    41a36c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
  41a3ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41a3b0:	mov    rax,QWORD PTR [rsp+0x20]
  41a3b5:	inc    QWORD PTR [rax+0x10]
  41a3b9:	mov    rax,QWORD PTR [r13+0x0]
  41a3bd:	test   rax,rax
  41a3c0:	je     41a3ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62d>
  41a3c2:	cmp    rax,0x2
  41a3c6:	je     41a3ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62d>
  41a3c8:	lea    rax,[r8+0x1]
  41a3cc:	jmp    41a3d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x616>
  41a3ce:	xchg   ax,ax
  41a3d0:	cmp    rdx,0x2
  41a3d4:	je     41a3ed <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62d>
  41a3d6:	mov    rdx,rbx
  41a3d9:	and    rdx,rax
  41a3dc:	lea    r13,[rbp+rdx*8+0x0]
  41a3e1:	mov    rdx,QWORD PTR [r13+0x0]
  41a3e5:	inc    rax
  41a3e8:	test   rdx,rdx
  41a3eb:	jne    41a3d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x610>
  41a3ed:	mov    rax,QWORD PTR [rsp+0x18]
  41a3f2:	xor    r15d,r15d
  41a3f5:	mov    QWORD PTR [r13+0x0],rax
  41a3f9:	jmp    41a36c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ac>
  41a3fe:	mov    r12,r13
  41a401:	jmp    41a357 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x597>
  41a406:	lea    rcx,[rip+0x2b7b3]        # 445bc0 <_IO_stdin_used@@Base+0x18bc0>
  41a40d:	mov    edx,0x74
  41a412:	lea    rsi,[rip+0x2b6a7]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41a419:	lea    rdi,[rip+0x2b771]        # 445b91 <_IO_stdin_used@@Base+0x18b91>
  41a420:	call   4052e0 <__assert_fail@plt>
  41a425:	lea    rcx,[rip+0x2b794]        # 445bc0 <_IO_stdin_used@@Base+0x18bc0>
  41a42c:	mov    edx,0x73
  41a431:	lea    rsi,[rip+0x2b688]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41a438:	lea    rdi,[rip+0x2b73b]        # 445b7a <_IO_stdin_used@@Base+0x18b7a>
  41a43f:	call   4052e0 <__assert_fail@plt>
  41a444:	lea    rcx,[rip+0x2b775]        # 445bc0 <_IO_stdin_used@@Base+0x18bc0>
  41a44b:	mov    edx,0x72
  41a450:	lea    rsi,[rip+0x2b669]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41a457:	lea    rdi,[rip+0x2b705]        # 445b63 <_IO_stdin_used@@Base+0x18b63>
  41a45e:	call   4052e0 <__assert_fail@plt>
  41a463:	mov    rax,QWORD PTR [rip+0x36b7e]        # 450fe8 <stderr@GLIBC_2.2.5>
  41a46a:	lea    rcx,[rip+0x2b6bf]        # 445b30 <_IO_stdin_used@@Base+0x18b30>
  41a471:	mov    rdi,QWORD PTR [rax]
  41a474:	lea    rdx,[rip+0x2b72b]        # 445ba6 <_IO_stdin_used@@Base+0x18ba6>
  41a47b:	mov    esi,0x1
  41a480:	xor    eax,eax
  41a482:	call   4053e0 <__fprintf_chk@plt>
  41a487:	mov    edi,0x1
  41a48c:	call   4053c0 <exit@plt>
  41a491:	call   4052c0 <__stack_chk_fail@plt>
  41a496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a4a0:	push   r15
  41a4a2:	push   r14
  41a4a4:	push   r13
  41a4a6:	push   r12
  41a4a8:	push   rbp
  41a4a9:	push   rbx
  41a4aa:	sub    rsp,0x18
  41a4ae:	mov    rax,QWORD PTR fs:0x28
  41a4b7:	mov    QWORD PTR [rsp+0x8],rax
  41a4bc:	xor    eax,eax
  41a4be:	test   rdi,rdi
  41a4c1:	je     41a52b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76b>
  41a4c3:	mov    r12,QWORD PTR [rsi]
  41a4c6:	mov    r14,rdx
  41a4c9:	mov    r15,rcx
  41a4cc:	mov    r13,rdi
  41a4cf:	mov    rcx,rsp
  41a4d2:	mov    edx,0x2f693b52
  41a4d7:	mov    rsi,r15
  41a4da:	mov    rdi,r14
  41a4dd:	call   42bb90 <cmetrohash64_1@@Base>
  41a4e2:	dec    r12
  41a4e5:	mov    ebp,DWORD PTR [rsp]
  41a4e8:	mov    rax,r12
  41a4eb:	and    rax,rbp
  41a4ee:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
  41a4f3:	test   rbx,rbx
  41a4f6:	je     41a52b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76b>
  41a4f8:	inc    rbp
  41a4fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a500:	cmp    rbx,0x2
  41a504:	je     41a518 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x758>
  41a506:	mov    rdx,r15
  41a509:	mov    rsi,rbx
  41a50c:	mov    rdi,r14
  41a50f:	call   405260 <strncmp@plt>
  41a514:	test   eax,eax
  41a516:	je     41a52d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x76d>
  41a518:	mov    rax,r12
  41a51b:	and    rax,rbp
  41a51e:	mov    rbx,QWORD PTR [r13+rax*8+0x0]
  41a523:	inc    rbp
  41a526:	test   rbx,rbx
  41a529:	jne    41a500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x740>
  41a52b:	xor    ebx,ebx
  41a52d:	mov    rcx,QWORD PTR [rsp+0x8]
  41a532:	xor    rcx,QWORD PTR fs:0x28
  41a53b:	mov    rax,rbx
  41a53e:	jne    41a54f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x78f>
  41a540:	add    rsp,0x18
  41a544:	pop    rbx
  41a545:	pop    rbp
  41a546:	pop    r12
  41a548:	pop    r13
  41a54a:	pop    r14
  41a54c:	pop    r15
  41a54e:	ret    
  41a54f:	call   4052c0 <__stack_chk_fail@plt>
  41a554:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a55f:	nop

000000000041a560 <str_set_clear@@Base>:
  41a560:	endbr64 
  41a564:	jmp    419fc0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x200>
  41a569:	nop    DWORD PTR [rax+0x0]

000000000041a570 <str_set_destroy@@Base>:
  41a570:	endbr64 
  41a574:	push   r14
  41a576:	push   r13
  41a578:	push   r12
  41a57a:	push   rbp
  41a57b:	mov    rbp,rdi
  41a57e:	push   rbx
  41a57f:	test   rsi,rsi
  41a582:	je     41a5be <str_set_destroy@@Base+0x4e>
  41a584:	cmp    QWORD PTR [rdi+0x18],0x0
  41a589:	mov    r12,QWORD PTR [rdi]
  41a58c:	je     41a5be <str_set_destroy@@Base+0x4e>
  41a58e:	mov    r13,rsi
  41a591:	mov    r14,rdx
  41a594:	xor    ebx,ebx
  41a596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5a0:	mov    rsi,QWORD PTR [r12+rbx*8]
  41a5a4:	test   rsi,rsi
  41a5a7:	je     41a5b5 <str_set_destroy@@Base+0x45>
  41a5a9:	cmp    rsi,0x2
  41a5ad:	je     41a5b5 <str_set_destroy@@Base+0x45>
  41a5af:	mov    rdi,r14
  41a5b2:	call   r13
  41a5b5:	inc    rbx
  41a5b8:	cmp    rbx,QWORD PTR [rbp+0x18]
  41a5bc:	jb     41a5a0 <str_set_destroy@@Base+0x30>
  41a5be:	pop    rbx
  41a5bf:	mov    rdi,rbp
  41a5c2:	pop    rbp
  41a5c3:	pop    r12
  41a5c5:	pop    r13
  41a5c7:	pop    r14
  41a5c9:	jmp    419fc0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x200>
  41a5ce:	xchg   ax,ax

000000000041a5d0 <str_set_init@@Base>:
  41a5d0:	endbr64 
  41a5d4:	push   rbp
  41a5d5:	push   rbx
  41a5d6:	mov    rbx,rdi
  41a5d9:	sub    rsp,0x8
  41a5dd:	cmp    rsi,0x2
  41a5e1:	jbe    41a640 <str_set_init@@Base+0x70>
  41a5e3:	mov    eax,0x4
  41a5e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a5f0:	lea    rbp,[rax+rax*1]
  41a5f4:	imul   rax,rax,0x166
  41a5fb:	shr    rax,0x8
  41a5ff:	mov    rdx,rax
  41a602:	mov    rax,rbp
  41a605:	cmp    rsi,rdx
  41a608:	ja     41a5f0 <str_set_init@@Base+0x20>
  41a60a:	mov    esi,0x8
  41a60f:	mov    rdi,rbp
  41a612:	call   405320 <calloc@plt>
  41a617:	mov    QWORD PTR [rbx],rax
  41a61a:	test   rax,rax
  41a61d:	je     41a647 <str_set_init@@Base+0x77>
  41a61f:	mov    QWORD PTR [rbx+0x8],0x0
  41a627:	mov    QWORD PTR [rbx+0x18],rbp
  41a62b:	mov    QWORD PTR [rbx+0x10],0x0
  41a633:	xor    eax,eax
  41a635:	add    rsp,0x8
  41a639:	pop    rbx
  41a63a:	pop    rbp
  41a63b:	ret    
  41a63c:	nop    DWORD PTR [rax+0x0]
  41a640:	mov    ebp,0x4
  41a645:	jmp    41a60a <str_set_init@@Base+0x3a>
  41a647:	mov    eax,0xffffffff
  41a64c:	jmp    41a635 <str_set_init@@Base+0x65>
  41a64e:	xchg   ax,ax

000000000041a650 <str_set_resize@@Base>:
  41a650:	endbr64 
  41a654:	jmp    41a0d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x310>
  41a659:	nop    DWORD PTR [rax+0x0]

000000000041a660 <str_set_insert@@Base>:
  41a660:	endbr64 
  41a664:	jmp    41a210 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  41a669:	nop    DWORD PTR [rax+0x0]

000000000041a670 <str_set_insert_item@@Base>:
  41a670:	endbr64 
  41a674:	push   r12
  41a676:	mov    r12d,edx
  41a679:	push   rbp
  41a67a:	mov    rbp,rdi
  41a67d:	mov    rdi,rsi
  41a680:	push   rbx
  41a681:	mov    rbx,rsi
  41a684:	call   4052b0 <strlen@plt>
  41a689:	mov    rcx,rbx
  41a68c:	mov    rsi,rbx
  41a68f:	pop    rbx
  41a690:	mov    rdi,rbp
  41a693:	pop    rbp
  41a694:	mov    r8d,r12d
  41a697:	mov    rdx,rax
  41a69a:	pop    r12
  41a69c:	jmp    41a210 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
  41a6a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41a6ac:	nop    DWORD PTR [rax+0x0]

000000000041a6b0 <str_set_find@@Base>:
  41a6b0:	endbr64 
  41a6b4:	mov    rax,rsi
  41a6b7:	lea    rsi,[rdi+0x18]
  41a6bb:	mov    rdi,QWORD PTR [rdi]
  41a6be:	mov    rcx,rdx
  41a6c1:	mov    rdx,rax
  41a6c4:	jmp    41a4a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>
  41a6c9:	nop    DWORD PTR [rax+0x0]

000000000041a6d0 <str_set_find_item@@Base>:
  41a6d0:	endbr64 
  41a6d4:	push   rbp
  41a6d5:	mov    rbp,rsi
  41a6d8:	push   rbx
  41a6d9:	mov    rbx,rdi
  41a6dc:	mov    rdi,rsi
  41a6df:	sub    rsp,0x8
  41a6e3:	call   4052b0 <strlen@plt>
  41a6e8:	mov    rdi,QWORD PTR [rbx]
  41a6eb:	add    rsp,0x8
  41a6ef:	lea    rsi,[rbx+0x18]
  41a6f3:	pop    rbx
  41a6f4:	mov    rdx,rbp
  41a6f7:	mov    rcx,rax
  41a6fa:	pop    rbp
  41a6fb:	jmp    41a4a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>

000000000041a700 <str_set_remove@@Base>:
  41a700:	endbr64 
  41a704:	jmp    419fe0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x220>
  41a709:	nop    DWORD PTR [rax+0x0]

000000000041a710 <str_set_remove_item@@Base>:
  41a710:	endbr64 
  41a714:	push   rbp
  41a715:	mov    rbp,rdi
  41a718:	mov    rdi,rsi
  41a71b:	push   rbx
  41a71c:	mov    rbx,rsi
  41a71f:	sub    rsp,0x8
  41a723:	call   4052b0 <strlen@plt>
  41a728:	add    rsp,0x8
  41a72c:	mov    rsi,rbx
  41a72f:	pop    rbx
  41a730:	mov    rdi,rbp
  41a733:	mov    rdx,rax
  41a736:	pop    rbp
  41a737:	jmp    419fe0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x220>
  41a73c:	nop    DWORD PTR [rax+0x0]

000000000041a740 <str_set_visit@@Base>:
  41a740:	endbr64 
  41a744:	push   r14
  41a746:	push   r13
  41a748:	push   r12
  41a74a:	push   rbp
  41a74b:	push   rbx
  41a74c:	cmp    QWORD PTR [rdi+0x18],0x0
  41a751:	mov    r14,QWORD PTR [rdi]
  41a754:	je     41a786 <str_set_visit@@Base+0x46>
  41a756:	mov    r13,rdx
  41a759:	mov    r12,rsi
  41a75c:	mov    rbp,rdi
  41a75f:	xor    ebx,ebx
  41a761:	nop    DWORD PTR [rax+0x0]
  41a768:	mov    rsi,QWORD PTR [r14+rbx*8]
  41a76c:	test   rsi,rsi
  41a76f:	je     41a77d <str_set_visit@@Base+0x3d>
  41a771:	cmp    rsi,0x2
  41a775:	je     41a77d <str_set_visit@@Base+0x3d>
  41a777:	mov    rdi,r13
  41a77a:	call   r12
  41a77d:	inc    rbx
  41a780:	cmp    rbx,QWORD PTR [rbp+0x18]
  41a784:	jb     41a768 <str_set_visit@@Base+0x28>
  41a786:	pop    rbx
  41a787:	pop    rbp
  41a788:	pop    r12
  41a78a:	pop    r13
  41a78c:	pop    r14
  41a78e:	ret    
  41a78f:	nop
  41a790:	push   rbx
  41a791:	mov    rbx,rdi
  41a794:	mov    rdi,QWORD PTR [rdi]
  41a797:	test   rdi,rdi
  41a79a:	je     41a7a1 <str_set_visit@@Base+0x61>
  41a79c:	call   405230 <free@plt>
  41a7a1:	vpxor  xmm0,xmm0,xmm0
  41a7a5:	vmovups XMMWORD PTR [rbx],xmm0
  41a7a9:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41a7ae:	pop    rbx
  41a7af:	ret    
  41a7b0:	push   r15
  41a7b2:	push   r14
  41a7b4:	push   r13
  41a7b6:	push   r12
  41a7b8:	push   rbp
  41a7b9:	push   rbx
  41a7ba:	sub    rsp,0x28
  41a7be:	mov    rax,QWORD PTR fs:0x28
  41a7c7:	mov    QWORD PTR [rsp+0x18],rax
  41a7cc:	xor    eax,eax
  41a7ce:	test   rdx,rdx
  41a7d1:	je     41a988 <str_set_visit@@Base+0x248>
  41a7d7:	mov    r14,rdx
  41a7da:	cmp    rdx,0x2
  41a7de:	je     41a969 <str_set_visit@@Base+0x229>
  41a7e4:	cmp    rdx,0x1
  41a7e8:	je     41a94a <str_set_visit@@Base+0x20a>
  41a7ee:	mov    rbx,QWORD PTR [rdi+0x18]
  41a7f2:	mov    r13,rsi
  41a7f5:	imul   rax,rbx,0xb3
  41a7fc:	mov    rsi,QWORD PTR [rdi+0x10]
  41a800:	mov    r15,rdi
  41a803:	shr    rax,0x8
  41a807:	mov    ebp,ecx
  41a809:	cmp    rsi,rax
  41a80c:	jae    41a898 <str_set_visit@@Base+0x158>
  41a812:	lea    rcx,[rsp+0x10]
  41a817:	mov    edx,0x2f693b52
  41a81c:	lea    rdi,[rsp+0x8]
  41a821:	mov    esi,0x8
  41a826:	mov    r12,QWORD PTR [r15]
  41a829:	dec    rbx
  41a82c:	mov    QWORD PTR [rsp+0x8],r13
  41a831:	call   42bb90 <cmetrohash64_1@@Base>
  41a836:	mov    edx,DWORD PTR [rsp+0x10]
  41a83a:	mov    rax,rbx
  41a83d:	and    rax,rdx
  41a840:	lea    rcx,[r12+rax*8]
  41a844:	lea    eax,[rbp-0x2]
  41a847:	cmp    eax,0x1
  41a84a:	jbe    41a900 <str_set_visit@@Base+0x1c0>
  41a850:	mov    rax,QWORD PTR [rcx]
  41a853:	inc    rdx
  41a856:	xor    esi,esi
  41a858:	test   rax,rax
  41a85b:	jne    41a886 <str_set_visit@@Base+0x146>
  41a85d:	jmp    41a942 <str_set_visit@@Base+0x202>
  41a862:	nop    WORD PTR [rax+rax*1+0x0]
  41a868:	cmp    r13,rax
  41a86b:	je     41a8f0 <str_set_visit@@Base+0x1b0>
  41a871:	mov    rax,rbx
  41a874:	and    rax,rdx
  41a877:	lea    rcx,[r12+rax*8]
  41a87b:	mov    rax,QWORD PTR [rcx]
  41a87e:	inc    rdx
  41a881:	test   rax,rax
  41a884:	je     41a8b8 <str_set_visit@@Base+0x178>
  41a886:	cmp    rax,0x2
  41a88a:	jne    41a868 <str_set_visit@@Base+0x128>
  41a88c:	test   rsi,rsi
  41a88f:	cmove  rsi,rcx
  41a893:	jmp    41a871 <str_set_visit@@Base+0x131>
  41a895:	nop    DWORD PTR [rax]
  41a898:	add    rsi,rsi
  41a89b:	call   41a9e0 <str_set_visit@@Base+0x2a0>
  41a8a0:	test   eax,eax
  41a8a2:	jne    41a9a7 <str_set_visit@@Base+0x267>
  41a8a8:	mov    rbx,QWORD PTR [r15+0x18]
  41a8ac:	jmp    41a812 <str_set_visit@@Base+0xd2>
  41a8b1:	nop    DWORD PTR [rax+0x0]
  41a8b8:	test   rsi,rsi
  41a8bb:	cmove  rsi,rcx
  41a8bf:	inc    QWORD PTR [r15+0x10]
  41a8c3:	mov    QWORD PTR [rsi],r14
  41a8c6:	xor    eax,eax
  41a8c8:	mov    rdi,QWORD PTR [rsp+0x18]
  41a8cd:	xor    rdi,QWORD PTR fs:0x28
  41a8d6:	jne    41a9d5 <str_set_visit@@Base+0x295>
  41a8dc:	add    rsp,0x28
  41a8e0:	pop    rbx
  41a8e1:	pop    rbp
  41a8e2:	pop    r12
  41a8e4:	pop    r13
  41a8e6:	pop    r14
  41a8e8:	pop    r15
  41a8ea:	ret    
  41a8eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a8f0:	test   ebp,ebp
  41a8f2:	jne    41a8c8 <str_set_visit@@Base+0x188>
  41a8f4:	mov    QWORD PTR [rcx],r14
  41a8f7:	jmp    41a8c8 <str_set_visit@@Base+0x188>
  41a8f9:	nop    DWORD PTR [rax+0x0]
  41a900:	mov    rax,QWORD PTR [rcx]
  41a903:	inc    QWORD PTR [r15+0x10]
  41a907:	test   rax,rax
  41a90a:	je     41a93b <str_set_visit@@Base+0x1fb>
  41a90c:	cmp    rax,0x2
  41a910:	je     41a93b <str_set_visit@@Base+0x1fb>
  41a912:	lea    rax,[rdx+0x1]
  41a916:	jmp    41a926 <str_set_visit@@Base+0x1e6>
  41a918:	nop    DWORD PTR [rax+rax*1+0x0]
  41a920:	cmp    rdx,0x2
  41a924:	je     41a93b <str_set_visit@@Base+0x1fb>
  41a926:	mov    rdx,rbx
  41a929:	and    rdx,rax
  41a92c:	lea    rcx,[r12+rdx*8]
  41a930:	mov    rdx,QWORD PTR [rcx]
  41a933:	inc    rax
  41a936:	test   rdx,rdx
  41a939:	jne    41a920 <str_set_visit@@Base+0x1e0>
  41a93b:	mov    QWORD PTR [rcx],r14
  41a93e:	xor    eax,eax
  41a940:	jmp    41a8c8 <str_set_visit@@Base+0x188>
  41a942:	mov    rsi,rcx
  41a945:	jmp    41a8bf <str_set_visit@@Base+0x17f>
  41a94a:	lea    rcx,[rip+0x2b297]        # 445be8 <str_set_missing@@Base+0x8>
  41a951:	mov    edx,0x74
  41a956:	lea    rsi,[rip+0x2b163]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41a95d:	lea    rdi,[rip+0x2b22d]        # 445b91 <_IO_stdin_used@@Base+0x18b91>
  41a964:	call   4052e0 <__assert_fail@plt>
  41a969:	lea    rcx,[rip+0x2b278]        # 445be8 <str_set_missing@@Base+0x8>
  41a970:	mov    edx,0x73
  41a975:	lea    rsi,[rip+0x2b144]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41a97c:	lea    rdi,[rip+0x2b1f7]        # 445b7a <_IO_stdin_used@@Base+0x18b7a>
  41a983:	call   4052e0 <__assert_fail@plt>
  41a988:	lea    rcx,[rip+0x2b259]        # 445be8 <str_set_missing@@Base+0x8>
  41a98f:	mov    edx,0x72
  41a994:	lea    rsi,[rip+0x2b125]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41a99b:	lea    rdi,[rip+0x2b1c1]        # 445b63 <_IO_stdin_used@@Base+0x18b63>
  41a9a2:	call   4052e0 <__assert_fail@plt>
  41a9a7:	mov    rax,QWORD PTR [rip+0x3663a]        # 450fe8 <stderr@GLIBC_2.2.5>
  41a9ae:	lea    rcx,[rip+0x2b17b]        # 445b30 <_IO_stdin_used@@Base+0x18b30>
  41a9b5:	mov    rdi,QWORD PTR [rax]
  41a9b8:	lea    rdx,[rip+0x2b1e7]        # 445ba6 <_IO_stdin_used@@Base+0x18ba6>
  41a9bf:	mov    esi,0x1
  41a9c4:	xor    eax,eax
  41a9c6:	call   4053e0 <__fprintf_chk@plt>
  41a9cb:	mov    edi,0x1
  41a9d0:	call   4053c0 <exit@plt>
  41a9d5:	call   4052c0 <__stack_chk_fail@plt>
  41a9da:	nop    WORD PTR [rax+rax*1+0x0]
  41a9e0:	push   r13
  41a9e2:	push   r12
  41a9e4:	push   rbp
  41a9e5:	mov    rbp,rdi
  41a9e8:	push   rbx
  41a9e9:	sub    rsp,0x38
  41a9ed:	mov    rax,QWORD PTR fs:0x28
  41a9f6:	mov    QWORD PTR [rsp+0x28],rax
  41a9fb:	xor    eax,eax
  41a9fd:	cmp    QWORD PTR [rdi+0x10],rsi
  41aa01:	cmovae rsi,QWORD PTR [rdi+0x10]
  41aa06:	mov    r12,QWORD PTR [rdi]
  41aa09:	cmp    rsi,0x2
  41aa0d:	jbe    41aae8 <str_set_visit@@Base+0x3a8>
  41aa13:	mov    eax,0x4
  41aa18:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa20:	lea    rbx,[rax+rax*1]
  41aa24:	imul   rax,rax,0x166
  41aa2b:	shr    rax,0x8
  41aa2f:	mov    rdx,rax
  41aa32:	mov    rax,rbx
  41aa35:	cmp    rsi,rdx
  41aa38:	ja     41aa20 <str_set_visit@@Base+0x2e0>
  41aa3a:	mov    esi,0x8
  41aa3f:	mov    rdi,rbx
  41aa42:	call   405320 <calloc@plt>
  41aa47:	mov    QWORD PTR [rsp],rax
  41aa4b:	test   rax,rax
  41aa4e:	je     41aaf2 <str_set_visit@@Base+0x3b2>
  41aa54:	cmp    QWORD PTR [rbp+0x18],0x0
  41aa59:	mov    QWORD PTR [rsp+0x8],0x0
  41aa62:	mov    QWORD PTR [rsp+0x18],rbx
  41aa67:	mov    QWORD PTR [rsp+0x10],0x0
  41aa70:	je     41aaa8 <str_set_visit@@Base+0x368>
  41aa72:	xor    ebx,ebx
  41aa74:	mov    r13,rsp
  41aa77:	nop    WORD PTR [rax+rax*1+0x0]
  41aa80:	mov    rsi,QWORD PTR [r12+rbx*8]
  41aa84:	test   rsi,rsi
  41aa87:	je     41aa9f <str_set_visit@@Base+0x35f>
  41aa89:	cmp    rsi,0x2
  41aa8d:	je     41aa9f <str_set_visit@@Base+0x35f>
  41aa8f:	mov    ecx,0x3
  41aa94:	mov    rdx,rsi
  41aa97:	mov    rdi,r13
  41aa9a:	call   41a7b0 <str_set_visit@@Base+0x70>
  41aa9f:	inc    rbx
  41aaa2:	cmp    QWORD PTR [rbp+0x18],rbx
  41aaa6:	ja     41aa80 <str_set_visit@@Base+0x340>
  41aaa8:	mov    rdi,rbp
  41aaab:	call   41a790 <str_set_visit@@Base+0x50>
  41aab0:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41aab5:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41aabb:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41aac0:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  41aac5:	xor    eax,eax
  41aac7:	mov    rcx,QWORD PTR [rsp+0x28]
  41aacc:	xor    rcx,QWORD PTR fs:0x28
  41aad5:	jne    41aaf9 <str_set_visit@@Base+0x3b9>
  41aad7:	add    rsp,0x38
  41aadb:	pop    rbx
  41aadc:	pop    rbp
  41aadd:	pop    r12
  41aadf:	pop    r13
  41aae1:	ret    
  41aae2:	nop    WORD PTR [rax+rax*1+0x0]
  41aae8:	mov    ebx,0x4
  41aaed:	jmp    41aa3a <str_set_visit@@Base+0x2fa>
  41aaf2:	mov    eax,0xffffffff
  41aaf7:	jmp    41aac7 <str_set_visit@@Base+0x387>
  41aaf9:	call   4052c0 <__stack_chk_fail@plt>
  41aafe:	xchg   ax,ax
  41ab00:	push   r12
  41ab02:	push   rbp
  41ab03:	push   rbx
  41ab04:	sub    rsp,0x20
  41ab08:	mov    rax,QWORD PTR fs:0x28
  41ab11:	mov    QWORD PTR [rsp+0x18],rax
  41ab16:	xor    eax,eax
  41ab18:	test   rdi,rdi
  41ab1b:	je     41ab7e <str_set_visit@@Base+0x43e>
  41ab1d:	mov    rbx,QWORD PTR [rsi]
  41ab20:	mov    rbp,rdi
  41ab23:	mov    QWORD PTR [rsp+0x8],rdx
  41ab28:	mov    r12,rdx
  41ab2b:	lea    rcx,[rsp+0x10]
  41ab30:	mov    edx,0x2f693b52
  41ab35:	lea    rdi,[rsp+0x8]
  41ab3a:	mov    esi,0x8
  41ab3f:	call   42bb90 <cmetrohash64_1@@Base>
  41ab44:	dec    rbx
  41ab47:	mov    edx,DWORD PTR [rsp+0x10]
  41ab4b:	mov    rax,rbx
  41ab4e:	and    rax,rdx
  41ab51:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  41ab56:	test   rax,rax
  41ab59:	je     41ab7e <str_set_visit@@Base+0x43e>
  41ab5b:	inc    rdx
  41ab5e:	xchg   ax,ax
  41ab60:	cmp    rax,0x2
  41ab64:	je     41ab6b <str_set_visit@@Base+0x42b>
  41ab66:	cmp    r12,rax
  41ab69:	je     41ab80 <str_set_visit@@Base+0x440>
  41ab6b:	mov    rax,rbx
  41ab6e:	and    rax,rdx
  41ab71:	mov    rax,QWORD PTR [rbp+rax*8+0x0]
  41ab76:	inc    rdx
  41ab79:	test   rax,rax
  41ab7c:	jne    41ab60 <str_set_visit@@Base+0x420>
  41ab7e:	xor    eax,eax
  41ab80:	mov    rcx,QWORD PTR [rsp+0x18]
  41ab85:	xor    rcx,QWORD PTR fs:0x28
  41ab8e:	jne    41ab99 <str_set_visit@@Base+0x459>
  41ab90:	add    rsp,0x20
  41ab94:	pop    rbx
  41ab95:	pop    rbp
  41ab96:	pop    r12
  41ab98:	ret    
  41ab99:	call   4052c0 <__stack_chk_fail@plt>
  41ab9e:	xchg   ax,ax
  41aba0:	push   r13
  41aba2:	push   r12
  41aba4:	push   rbp
  41aba5:	push   rbx
  41aba6:	sub    rsp,0x28
  41abaa:	mov    rbp,QWORD PTR [rdi]
  41abad:	mov    rax,QWORD PTR fs:0x28
  41abb6:	mov    QWORD PTR [rsp+0x18],rax
  41abbb:	xor    eax,eax
  41abbd:	test   rbp,rbp
  41abc0:	je     41ac31 <str_set_visit@@Base+0x4f1>
  41abc2:	mov    rax,QWORD PTR [rdi+0x18]
  41abc6:	mov    QWORD PTR [rsp+0x8],rsi
  41abcb:	lea    rcx,[rsp+0x10]
  41abd0:	mov    edx,0x2f693b52
  41abd5:	mov    r13,rdi
  41abd8:	mov    r12,rsi
  41abdb:	lea    rdi,[rsp+0x8]
  41abe0:	mov    esi,0x8
  41abe5:	lea    rbx,[rax-0x1]
  41abe9:	call   42bb90 <cmetrohash64_1@@Base>
  41abee:	mov    edx,DWORD PTR [rsp+0x10]
  41abf2:	mov    rax,rbx
  41abf5:	and    rax,rdx
  41abf8:	lea    rcx,[rbp+rax*8+0x0]
  41abfd:	mov    rax,QWORD PTR [rcx]
  41ac00:	test   rax,rax
  41ac03:	je     41ac31 <str_set_visit@@Base+0x4f1>
  41ac05:	inc    rdx
  41ac08:	nop    DWORD PTR [rax+rax*1+0x0]
  41ac10:	cmp    rax,0x2
  41ac14:	je     41ac1b <str_set_visit@@Base+0x4db>
  41ac16:	cmp    r12,rax
  41ac19:	je     41ac50 <str_set_visit@@Base+0x510>
  41ac1b:	mov    rax,rbx
  41ac1e:	and    rax,rdx
  41ac21:	lea    rcx,[rbp+rax*8+0x0]
  41ac26:	mov    rax,QWORD PTR [rcx]
  41ac29:	inc    rdx
  41ac2c:	test   rax,rax
  41ac2f:	jne    41ac10 <str_set_visit@@Base+0x4d0>
  41ac31:	xor    eax,eax
  41ac33:	mov    rsi,QWORD PTR [rsp+0x18]
  41ac38:	xor    rsi,QWORD PTR fs:0x28
  41ac41:	jne    41ac5d <str_set_visit@@Base+0x51d>
  41ac43:	add    rsp,0x28
  41ac47:	pop    rbx
  41ac48:	pop    rbp
  41ac49:	pop    r12
  41ac4b:	pop    r13
  41ac4d:	ret    
  41ac4e:	xchg   ax,ax
  41ac50:	mov    QWORD PTR [rcx],0x2
  41ac57:	dec    QWORD PTR [r13+0x10]
  41ac5b:	jmp    41ac33 <str_set_visit@@Base+0x4f3>
  41ac5d:	call   4052c0 <__stack_chk_fail@plt>
  41ac62:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ac6d:	nop    DWORD PTR [rax]

000000000041ac70 <ptr_set_clear@@Base>:
  41ac70:	endbr64 
  41ac74:	jmp    41a790 <str_set_visit@@Base+0x50>
  41ac79:	nop    DWORD PTR [rax+0x0]

000000000041ac80 <ptr_set_destroy@@Base>:
  41ac80:	endbr64 
  41ac84:	push   r14
  41ac86:	push   r13
  41ac88:	push   r12
  41ac8a:	push   rbp
  41ac8b:	mov    rbp,rdi
  41ac8e:	push   rbx
  41ac8f:	test   rsi,rsi
  41ac92:	je     41acce <ptr_set_destroy@@Base+0x4e>
  41ac94:	cmp    QWORD PTR [rdi+0x18],0x0
  41ac99:	mov    r12,QWORD PTR [rdi]
  41ac9c:	je     41acce <ptr_set_destroy@@Base+0x4e>
  41ac9e:	mov    r13,rsi
  41aca1:	mov    r14,rdx
  41aca4:	xor    ebx,ebx
  41aca6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41acb0:	mov    rsi,QWORD PTR [r12+rbx*8]
  41acb4:	test   rsi,rsi
  41acb7:	je     41acc5 <ptr_set_destroy@@Base+0x45>
  41acb9:	cmp    rsi,0x2
  41acbd:	je     41acc5 <ptr_set_destroy@@Base+0x45>
  41acbf:	mov    rdi,r14
  41acc2:	call   r13
  41acc5:	inc    rbx
  41acc8:	cmp    rbx,QWORD PTR [rbp+0x18]
  41accc:	jb     41acb0 <ptr_set_destroy@@Base+0x30>
  41acce:	pop    rbx
  41accf:	mov    rdi,rbp
  41acd2:	pop    rbp
  41acd3:	pop    r12
  41acd5:	pop    r13
  41acd7:	pop    r14
  41acd9:	jmp    41a790 <str_set_visit@@Base+0x50>
  41acde:	xchg   ax,ax

000000000041ace0 <ptr_set_init@@Base>:
  41ace0:	endbr64 
  41ace4:	push   rbp
  41ace5:	push   rbx
  41ace6:	mov    rbx,rdi
  41ace9:	sub    rsp,0x8
  41aced:	cmp    rsi,0x2
  41acf1:	jbe    41ad50 <ptr_set_init@@Base+0x70>
  41acf3:	mov    eax,0x4
  41acf8:	nop    DWORD PTR [rax+rax*1+0x0]
  41ad00:	lea    rbp,[rax+rax*1]
  41ad04:	imul   rax,rax,0x166
  41ad0b:	shr    rax,0x8
  41ad0f:	mov    rdx,rax
  41ad12:	mov    rax,rbp
  41ad15:	cmp    rsi,rdx
  41ad18:	ja     41ad00 <ptr_set_init@@Base+0x20>
  41ad1a:	mov    esi,0x8
  41ad1f:	mov    rdi,rbp
  41ad22:	call   405320 <calloc@plt>
  41ad27:	mov    QWORD PTR [rbx],rax
  41ad2a:	test   rax,rax
  41ad2d:	je     41ad57 <ptr_set_init@@Base+0x77>
  41ad2f:	mov    QWORD PTR [rbx+0x8],0x0
  41ad37:	mov    QWORD PTR [rbx+0x18],rbp
  41ad3b:	mov    QWORD PTR [rbx+0x10],0x0
  41ad43:	xor    eax,eax
  41ad45:	add    rsp,0x8
  41ad49:	pop    rbx
  41ad4a:	pop    rbp
  41ad4b:	ret    
  41ad4c:	nop    DWORD PTR [rax+0x0]
  41ad50:	mov    ebp,0x4
  41ad55:	jmp    41ad1a <ptr_set_init@@Base+0x3a>
  41ad57:	mov    eax,0xffffffff
  41ad5c:	jmp    41ad45 <ptr_set_init@@Base+0x65>
  41ad5e:	xchg   ax,ax

000000000041ad60 <ptr_set_resize@@Base>:
  41ad60:	endbr64 
  41ad64:	jmp    41a9e0 <str_set_visit@@Base+0x2a0>
  41ad69:	nop    DWORD PTR [rax+0x0]

000000000041ad70 <ptr_set_insert@@Base>:
  41ad70:	endbr64 
  41ad74:	mov    rdx,rcx
  41ad77:	mov    ecx,r8d
  41ad7a:	jmp    41a7b0 <str_set_visit@@Base+0x70>
  41ad7f:	nop

000000000041ad80 <ptr_set_insert_item@@Base>:
  41ad80:	endbr64 
  41ad84:	mov    ecx,edx
  41ad86:	mov    rdx,rsi
  41ad89:	jmp    41a7b0 <str_set_visit@@Base+0x70>
  41ad8e:	xchg   ax,ax

000000000041ad90 <ptr_set_find@@Base>:
  41ad90:	endbr64 
  41ad94:	mov    rdx,rsi
  41ad97:	lea    rsi,[rdi+0x18]
  41ad9b:	mov    rdi,QWORD PTR [rdi]
  41ad9e:	jmp    41ab00 <str_set_visit@@Base+0x3c0>
  41ada3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41adae:	xchg   ax,ax

000000000041adb0 <ptr_set_find_item@@Base>:
  41adb0:	endbr64 
  41adb4:	mov    rdx,rsi
  41adb7:	lea    rsi,[rdi+0x18]
  41adbb:	mov    rdi,QWORD PTR [rdi]
  41adbe:	jmp    41ab00 <str_set_visit@@Base+0x3c0>
  41adc3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41adce:	xchg   ax,ax

000000000041add0 <ptr_set_remove@@Base>:
  41add0:	endbr64 
  41add4:	jmp    41aba0 <str_set_visit@@Base+0x460>
  41add9:	nop    DWORD PTR [rax+0x0]

000000000041ade0 <ptr_set_remove_item@@Base>:
  41ade0:	endbr64 
  41ade4:	jmp    41aba0 <str_set_visit@@Base+0x460>
  41ade9:	nop    DWORD PTR [rax+0x0]

000000000041adf0 <ptr_set_visit@@Base>:
  41adf0:	endbr64 
  41adf4:	push   r14
  41adf6:	push   r13
  41adf8:	push   r12
  41adfa:	push   rbp
  41adfb:	push   rbx
  41adfc:	cmp    QWORD PTR [rdi+0x18],0x0
  41ae01:	mov    r14,QWORD PTR [rdi]
  41ae04:	je     41ae36 <ptr_set_visit@@Base+0x46>
  41ae06:	mov    r13,rdx
  41ae09:	mov    r12,rsi
  41ae0c:	mov    rbp,rdi
  41ae0f:	xor    ebx,ebx
  41ae11:	nop    DWORD PTR [rax+0x0]
  41ae18:	mov    rsi,QWORD PTR [r14+rbx*8]
  41ae1c:	test   rsi,rsi
  41ae1f:	je     41ae2d <ptr_set_visit@@Base+0x3d>
  41ae21:	cmp    rsi,0x2
  41ae25:	je     41ae2d <ptr_set_visit@@Base+0x3d>
  41ae27:	mov    rdi,r13
  41ae2a:	call   r12
  41ae2d:	inc    rbx
  41ae30:	cmp    rbx,QWORD PTR [rbp+0x18]
  41ae34:	jb     41ae18 <ptr_set_visit@@Base+0x28>
  41ae36:	pop    rbx
  41ae37:	pop    rbp
  41ae38:	pop    r12
  41ae3a:	pop    r13
  41ae3c:	pop    r14
  41ae3e:	ret    
  41ae3f:	nop
  41ae40:	push   rbx
  41ae41:	mov    rbx,rdi
  41ae44:	mov    rdi,QWORD PTR [rdi]
  41ae47:	test   rdi,rdi
  41ae4a:	je     41ae51 <ptr_set_visit@@Base+0x61>
  41ae4c:	call   405230 <free@plt>
  41ae51:	vpxor  xmm0,xmm0,xmm0
  41ae55:	vmovups XMMWORD PTR [rbx],xmm0
  41ae59:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41ae5e:	pop    rbx
  41ae5f:	ret    
  41ae60:	push   r15
  41ae62:	push   r14
  41ae64:	push   r13
  41ae66:	mov    r13,rdi
  41ae69:	push   r12
  41ae6b:	push   rbp
  41ae6c:	push   rbx
  41ae6d:	sub    rsp,0x28
  41ae71:	mov    QWORD PTR [rsp+0x8],rsi
  41ae76:	mov    r15,QWORD PTR [rdi]
  41ae79:	mov    rax,QWORD PTR fs:0x28
  41ae82:	mov    QWORD PTR [rsp+0x18],rax
  41ae87:	xor    eax,eax
  41ae89:	test   r15,r15
  41ae8c:	je     41af50 <ptr_set_visit@@Base+0x160>
  41ae92:	mov    r8,rdx
  41ae95:	mov    rax,QWORD PTR [r13+0x18]
  41ae99:	mov    rdi,rsi
  41ae9c:	lea    rcx,[rsp+0x10]
  41aea1:	mov    edx,0x2f693b52
  41aea6:	mov    rsi,r8
  41aea9:	lea    r14,[rax-0x1]
  41aead:	mov    QWORD PTR [rsp],r8
  41aeb1:	call   42bb90 <cmetrohash64_1@@Base>
  41aeb6:	mov    ebp,DWORD PTR [rsp+0x10]
  41aeba:	mov    rax,r14
  41aebd:	and    rax,rbp
  41aec0:	lea    r12,[r15+rax*8]
  41aec4:	mov    rbx,QWORD PTR [r12]
  41aec8:	test   rbx,rbx
  41aecb:	je     41af50 <ptr_set_visit@@Base+0x160>
  41aed1:	inc    rbp
  41aed4:	mov    r8,QWORD PTR [rsp]
  41aed8:	jmp    41aef6 <ptr_set_visit@@Base+0x106>
  41aeda:	nop    WORD PTR [rax+rax*1+0x0]
  41aee0:	mov    rax,r14
  41aee3:	and    rax,rbp
  41aee6:	lea    r12,[r15+rax*8]
  41aeea:	mov    rbx,QWORD PTR [r12]
  41aeee:	inc    rbp
  41aef1:	test   rbx,rbx
  41aef4:	je     41af50 <ptr_set_visit@@Base+0x160>
  41aef6:	cmp    rbx,0x2
  41aefa:	je     41aee0 <ptr_set_visit@@Base+0xf0>
  41aefc:	mov    rax,QWORD PTR [rbx+0x8]
  41af00:	cmp    r8,QWORD PTR [rax+0x8]
  41af04:	jne    41aee0 <ptr_set_visit@@Base+0xf0>
  41af06:	mov    rsi,QWORD PTR [rax]
  41af09:	mov    rdi,QWORD PTR [rsp+0x8]
  41af0e:	mov    rdx,r8
  41af11:	mov    QWORD PTR [rsp],r8
  41af15:	call   405310 <memcmp@plt>
  41af1a:	test   eax,eax
  41af1c:	mov    r8,QWORD PTR [rsp]
  41af20:	jne    41aee0 <ptr_set_visit@@Base+0xf0>
  41af22:	mov    QWORD PTR [r12],0x2
  41af2a:	dec    QWORD PTR [r13+0x10]
  41af2e:	mov    rcx,QWORD PTR [rsp+0x18]
  41af33:	xor    rcx,QWORD PTR fs:0x28
  41af3c:	mov    rax,rbx
  41af3f:	jne    41af54 <ptr_set_visit@@Base+0x164>
  41af41:	add    rsp,0x28
  41af45:	pop    rbx
  41af46:	pop    rbp
  41af47:	pop    r12
  41af49:	pop    r13
  41af4b:	pop    r14
  41af4d:	pop    r15
  41af4f:	ret    
  41af50:	xor    ebx,ebx
  41af52:	jmp    41af2e <ptr_set_visit@@Base+0x13e>
  41af54:	call   4052c0 <__stack_chk_fail@plt>
  41af59:	nop    DWORD PTR [rax+0x0]
  41af60:	push   r13
  41af62:	push   r12
  41af64:	push   rbp
  41af65:	mov    rbp,rdi
  41af68:	push   rbx
  41af69:	sub    rsp,0x38
  41af6d:	mov    rax,QWORD PTR fs:0x28
  41af76:	mov    QWORD PTR [rsp+0x28],rax
  41af7b:	xor    eax,eax
  41af7d:	cmp    QWORD PTR [rdi+0x10],rsi
  41af81:	cmovae rsi,QWORD PTR [rdi+0x10]
  41af86:	mov    r12,QWORD PTR [rdi]
  41af89:	cmp    rsi,0x2
  41af8d:	jbe    41b070 <ptr_set_visit@@Base+0x280>
  41af93:	mov    eax,0x4
  41af98:	nop    DWORD PTR [rax+rax*1+0x0]
  41afa0:	lea    rbx,[rax+rax*1]
  41afa4:	imul   rax,rax,0x166
  41afab:	shr    rax,0x8
  41afaf:	mov    rdx,rax
  41afb2:	mov    rax,rbx
  41afb5:	cmp    rsi,rdx
  41afb8:	ja     41afa0 <ptr_set_visit@@Base+0x1b0>
  41afba:	mov    esi,0x8
  41afbf:	mov    rdi,rbx
  41afc2:	call   405320 <calloc@plt>
  41afc7:	mov    QWORD PTR [rsp],rax
  41afcb:	test   rax,rax
  41afce:	je     41b07a <ptr_set_visit@@Base+0x28a>
  41afd4:	cmp    QWORD PTR [rbp+0x18],0x0
  41afd9:	mov    QWORD PTR [rsp+0x8],0x0
  41afe2:	mov    QWORD PTR [rsp+0x18],rbx
  41afe7:	mov    QWORD PTR [rsp+0x10],0x0
  41aff0:	je     41b031 <ptr_set_visit@@Base+0x241>
  41aff2:	xor    ebx,ebx
  41aff4:	mov    r13,rsp
  41aff7:	nop    WORD PTR [rax+rax*1+0x0]
  41b000:	mov    rcx,QWORD PTR [r12+rbx*8]
  41b004:	test   rcx,rcx
  41b007:	je     41b028 <ptr_set_visit@@Base+0x238>
  41b009:	cmp    rcx,0x2
  41b00d:	je     41b028 <ptr_set_visit@@Base+0x238>
  41b00f:	mov    rax,QWORD PTR [rcx+0x8]
  41b013:	mov    r8d,0x3
  41b019:	mov    rdx,QWORD PTR [rax+0x8]
  41b01d:	mov    rsi,QWORD PTR [rax]
  41b020:	mov    rdi,r13
  41b023:	call   41b090 <ptr_set_visit@@Base+0x2a0>
  41b028:	inc    rbx
  41b02b:	cmp    QWORD PTR [rbp+0x18],rbx
  41b02f:	ja     41b000 <ptr_set_visit@@Base+0x210>
  41b031:	mov    rdi,rbp
  41b034:	call   41ae40 <ptr_set_visit@@Base+0x50>
  41b039:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41b03e:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41b044:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41b049:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  41b04e:	xor    eax,eax
  41b050:	mov    rdi,QWORD PTR [rsp+0x28]
  41b055:	xor    rdi,QWORD PTR fs:0x28
  41b05e:	jne    41b081 <ptr_set_visit@@Base+0x291>
  41b060:	add    rsp,0x38
  41b064:	pop    rbx
  41b065:	pop    rbp
  41b066:	pop    r12
  41b068:	pop    r13
  41b06a:	ret    
  41b06b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b070:	mov    ebx,0x4
  41b075:	jmp    41afba <ptr_set_visit@@Base+0x1ca>
  41b07a:	mov    eax,0xffffffff
  41b07f:	jmp    41b050 <ptr_set_visit@@Base+0x260>
  41b081:	call   4052c0 <__stack_chk_fail@plt>
  41b086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b090:	push   r15
  41b092:	push   r14
  41b094:	push   r13
  41b096:	mov    r13,rdx
  41b099:	push   r12
  41b09b:	push   rbp
  41b09c:	push   rbx
  41b09d:	sub    rsp,0x48
  41b0a1:	mov    QWORD PTR [rsp+0x10],rsi
  41b0a6:	mov    QWORD PTR [rsp+0x8],rcx
  41b0ab:	mov    DWORD PTR [rsp+0x1c],r8d
  41b0b0:	mov    rdx,QWORD PTR fs:0x28
  41b0b9:	mov    QWORD PTR [rsp+0x38],rdx
  41b0be:	xor    edx,edx
  41b0c0:	test   rcx,rcx
  41b0c3:	je     41b29e <ptr_set_visit@@Base+0x4ae>
  41b0c9:	cmp    QWORD PTR [rsp+0x8],0x2
  41b0cf:	je     41b27f <ptr_set_visit@@Base+0x48f>
  41b0d5:	cmp    QWORD PTR [rsp+0x8],0x1
  41b0db:	je     41b2c2 <ptr_set_visit@@Base+0x4d2>
  41b0e1:	mov    r12,QWORD PTR [rdi+0x18]
  41b0e5:	mov    rsi,QWORD PTR [rdi+0x10]
  41b0e9:	imul   rax,r12,0xb3
  41b0f0:	mov    r15,rdi
  41b0f3:	shr    rax,0x8
  41b0f7:	cmp    rsi,rax
  41b0fa:	jae    41b1e0 <ptr_set_visit@@Base+0x3f0>
  41b100:	mov    rdi,QWORD PTR [rsp+0x10]
  41b105:	lea    rcx,[rsp+0x30]
  41b10a:	mov    edx,0x2f693b52
  41b10f:	mov    rsi,r13
  41b112:	mov    r14,QWORD PTR [r15]
  41b115:	dec    r12
  41b118:	call   42bb90 <cmetrohash64_1@@Base>
  41b11d:	mov    ebp,DWORD PTR [rsp+0x30]
  41b121:	mov    rax,r12
  41b124:	and    rax,rbp
  41b127:	lea    rcx,[r14+rax*8]
  41b12b:	mov    eax,DWORD PTR [rsp+0x1c]
  41b12f:	sub    eax,0x2
  41b132:	cmp    eax,0x1
  41b135:	jbe    41b230 <ptr_set_visit@@Base+0x440>
  41b13b:	mov    rbx,QWORD PTR [rcx]
  41b13e:	inc    rbp
  41b141:	xor    r11d,r11d
  41b144:	test   rbx,rbx
  41b147:	jne    41b173 <ptr_set_visit@@Base+0x383>
  41b149:	jmp    41b27a <ptr_set_visit@@Base+0x48a>
  41b14e:	xchg   ax,ax
  41b150:	mov    rax,QWORD PTR [rbx+0x8]
  41b154:	cmp    r13,QWORD PTR [rax+0x8]
  41b158:	je     41b188 <ptr_set_visit@@Base+0x398>
  41b15a:	mov    rax,r12
  41b15d:	and    rax,rbp
  41b160:	lea    rcx,[r14+rax*8]
  41b164:	mov    rbx,QWORD PTR [rcx]
  41b167:	inc    rbp
  41b16a:	test   rbx,rbx
  41b16d:	je     41b210 <ptr_set_visit@@Base+0x420>
  41b173:	cmp    rbx,0x2
  41b177:	jne    41b150 <ptr_set_visit@@Base+0x360>
  41b179:	test   r11,r11
  41b17c:	cmove  r11,rcx
  41b180:	jmp    41b15a <ptr_set_visit@@Base+0x36a>
  41b182:	nop    WORD PTR [rax+rax*1+0x0]
  41b188:	mov    rsi,QWORD PTR [rax]
  41b18b:	mov    rdi,QWORD PTR [rsp+0x10]
  41b190:	mov    rdx,r13
  41b193:	mov    QWORD PTR [rsp+0x20],r11
  41b198:	mov    QWORD PTR [rsp+0x28],rcx
  41b19d:	call   405310 <memcmp@plt>
  41b1a2:	test   eax,eax
  41b1a4:	mov    r11,QWORD PTR [rsp+0x20]
  41b1a9:	jne    41b15a <ptr_set_visit@@Base+0x36a>
  41b1ab:	mov    eax,DWORD PTR [rsp+0x1c]
  41b1af:	test   eax,eax
  41b1b1:	je     41b200 <ptr_set_visit@@Base+0x410>
  41b1b3:	mov    rdi,QWORD PTR [rsp+0x38]
  41b1b8:	xor    rdi,QWORD PTR fs:0x28
  41b1c1:	mov    rax,rbx
  41b1c4:	jne    41b2bd <ptr_set_visit@@Base+0x4cd>
  41b1ca:	add    rsp,0x48
  41b1ce:	pop    rbx
  41b1cf:	pop    rbp
  41b1d0:	pop    r12
  41b1d2:	pop    r13
  41b1d4:	pop    r14
  41b1d6:	pop    r15
  41b1d8:	ret    
  41b1d9:	nop    DWORD PTR [rax+0x0]
  41b1e0:	add    rsi,rsi
  41b1e3:	call   41af60 <ptr_set_visit@@Base+0x170>
  41b1e8:	test   eax,eax
  41b1ea:	jne    41b2e1 <ptr_set_visit@@Base+0x4f1>
  41b1f0:	mov    r12,QWORD PTR [r15+0x18]
  41b1f4:	jmp    41b100 <ptr_set_visit@@Base+0x310>
  41b1f9:	nop    DWORD PTR [rax+0x0]
  41b200:	mov    rax,QWORD PTR [rsp+0x8]
  41b205:	mov    rcx,QWORD PTR [rsp+0x28]
  41b20a:	mov    QWORD PTR [rcx],rax
  41b20d:	jmp    41b1b3 <ptr_set_visit@@Base+0x3c3>
  41b20f:	nop
  41b210:	test   r11,r11
  41b213:	cmove  r11,rcx
  41b217:	mov    rax,QWORD PTR [rsp+0x8]
  41b21c:	inc    QWORD PTR [r15+0x10]
  41b220:	xor    ebx,ebx
  41b222:	mov    QWORD PTR [r11],rax
  41b225:	jmp    41b1b3 <ptr_set_visit@@Base+0x3c3>
  41b227:	nop    WORD PTR [rax+rax*1+0x0]
  41b230:	mov    rax,QWORD PTR [rcx]
  41b233:	inc    QWORD PTR [r15+0x10]
  41b237:	test   rax,rax
  41b23a:	je     41b26b <ptr_set_visit@@Base+0x47b>
  41b23c:	cmp    rax,0x2
  41b240:	je     41b26b <ptr_set_visit@@Base+0x47b>
  41b242:	inc    rbp
  41b245:	jmp    41b256 <ptr_set_visit@@Base+0x466>
  41b247:	nop    WORD PTR [rax+rax*1+0x0]
  41b250:	cmp    rax,0x2
  41b254:	je     41b26b <ptr_set_visit@@Base+0x47b>
  41b256:	mov    rax,r12
  41b259:	and    rax,rbp
  41b25c:	lea    rcx,[r14+rax*8]
  41b260:	mov    rax,QWORD PTR [rcx]
  41b263:	inc    rbp
  41b266:	test   rax,rax
  41b269:	jne    41b250 <ptr_set_visit@@Base+0x460>
  41b26b:	mov    rax,QWORD PTR [rsp+0x8]
  41b270:	xor    ebx,ebx
  41b272:	mov    QWORD PTR [rcx],rax
  41b275:	jmp    41b1b3 <ptr_set_visit@@Base+0x3c3>
  41b27a:	mov    r11,rcx
  41b27d:	jmp    41b217 <ptr_set_visit@@Base+0x427>
  41b27f:	lea    rcx,[rip+0x2a98a]        # 445c10 <ptr_set_missing@@Base+0x8>
  41b286:	mov    edx,0x73
  41b28b:	lea    rsi,[rip+0x2a82e]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41b292:	lea    rdi,[rip+0x2a8e1]        # 445b7a <_IO_stdin_used@@Base+0x18b7a>
  41b299:	call   4052e0 <__assert_fail@plt>
  41b29e:	lea    rcx,[rip+0x2a96b]        # 445c10 <ptr_set_missing@@Base+0x8>
  41b2a5:	mov    edx,0x72
  41b2aa:	lea    rsi,[rip+0x2a80f]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41b2b1:	lea    rdi,[rip+0x2a8ab]        # 445b63 <_IO_stdin_used@@Base+0x18b63>
  41b2b8:	call   4052e0 <__assert_fail@plt>
  41b2bd:	call   4052c0 <__stack_chk_fail@plt>
  41b2c2:	lea    rcx,[rip+0x2a947]        # 445c10 <ptr_set_missing@@Base+0x8>
  41b2c9:	mov    edx,0x74
  41b2ce:	lea    rsi,[rip+0x2a7eb]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41b2d5:	lea    rdi,[rip+0x2a8b5]        # 445b91 <_IO_stdin_used@@Base+0x18b91>
  41b2dc:	call   4052e0 <__assert_fail@plt>
  41b2e1:	mov    rax,QWORD PTR [rip+0x35d00]        # 450fe8 <stderr@GLIBC_2.2.5>
  41b2e8:	lea    rcx,[rip+0x2a841]        # 445b30 <_IO_stdin_used@@Base+0x18b30>
  41b2ef:	mov    rdi,QWORD PTR [rax]
  41b2f2:	lea    rdx,[rip+0x2a8ad]        # 445ba6 <_IO_stdin_used@@Base+0x18ba6>
  41b2f9:	mov    esi,0x1
  41b2fe:	xor    eax,eax
  41b300:	call   4053e0 <__fprintf_chk@plt>
  41b305:	mov    edi,0x1
  41b30a:	call   4053c0 <exit@plt>
  41b30f:	nop
  41b310:	push   r15
  41b312:	push   r14
  41b314:	push   r13
  41b316:	push   r12
  41b318:	push   rbp
  41b319:	push   rbx
  41b31a:	sub    rsp,0x18
  41b31e:	mov    rax,QWORD PTR fs:0x28
  41b327:	mov    QWORD PTR [rsp+0x8],rax
  41b32c:	xor    eax,eax
  41b32e:	test   rdi,rdi
  41b331:	je     41b3d0 <ptr_set_visit@@Base+0x5e0>
  41b337:	mov    r13,QWORD PTR [rsi]
  41b33a:	mov    r12,rdx
  41b33d:	mov    r15,rcx
  41b340:	mov    r14,rdi
  41b343:	mov    rcx,rsp
  41b346:	mov    edx,0x2f693b52
  41b34b:	mov    rsi,r15
  41b34e:	mov    rdi,r12
  41b351:	call   42bb90 <cmetrohash64_1@@Base>
  41b356:	dec    r13
  41b359:	mov    ebp,DWORD PTR [rsp]
  41b35c:	mov    rax,r13
  41b35f:	and    rax,rbp
  41b362:	mov    rbx,QWORD PTR [r14+rax*8]
  41b366:	test   rbx,rbx
  41b369:	je     41b3d0 <ptr_set_visit@@Base+0x5e0>
  41b36b:	inc    rbp
  41b36e:	jmp    41b382 <ptr_set_visit@@Base+0x592>
  41b370:	mov    rax,r13
  41b373:	and    rax,rbp
  41b376:	mov    rbx,QWORD PTR [r14+rax*8]
  41b37a:	inc    rbp
  41b37d:	test   rbx,rbx
  41b380:	je     41b3d0 <ptr_set_visit@@Base+0x5e0>
  41b382:	cmp    rbx,0x2
  41b386:	je     41b370 <ptr_set_visit@@Base+0x580>
  41b388:	mov    rax,QWORD PTR [rbx+0x8]
  41b38c:	cmp    r15,QWORD PTR [rax+0x8]
  41b390:	jne    41b370 <ptr_set_visit@@Base+0x580>
  41b392:	mov    rsi,QWORD PTR [rax]
  41b395:	mov    rdx,r15
  41b398:	mov    rdi,r12
  41b39b:	call   405310 <memcmp@plt>
  41b3a0:	test   eax,eax
  41b3a2:	jne    41b370 <ptr_set_visit@@Base+0x580>
  41b3a4:	mov    rdx,QWORD PTR [rsp+0x8]
  41b3a9:	xor    rdx,QWORD PTR fs:0x28
  41b3b2:	mov    rax,rbx
  41b3b5:	jne    41b3d4 <ptr_set_visit@@Base+0x5e4>
  41b3b7:	add    rsp,0x18
  41b3bb:	pop    rbx
  41b3bc:	pop    rbp
  41b3bd:	pop    r12
  41b3bf:	pop    r13
  41b3c1:	pop    r14
  41b3c3:	pop    r15
  41b3c5:	ret    
  41b3c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3d0:	xor    ebx,ebx
  41b3d2:	jmp    41b3a4 <ptr_set_visit@@Base+0x5b4>
  41b3d4:	call   4052c0 <__stack_chk_fail@plt>
  41b3d9:	nop    DWORD PTR [rax+0x0]

000000000041b3e0 <fb_symbol_table_clear@@Base>:
  41b3e0:	endbr64 
  41b3e4:	jmp    41ae40 <ptr_set_visit@@Base+0x50>
  41b3e9:	nop    DWORD PTR [rax+0x0]

000000000041b3f0 <fb_symbol_table_destroy@@Base>:
  41b3f0:	endbr64 
  41b3f4:	push   r14
  41b3f6:	push   r13
  41b3f8:	push   r12
  41b3fa:	push   rbp
  41b3fb:	mov    rbp,rdi
  41b3fe:	push   rbx
  41b3ff:	test   rsi,rsi
  41b402:	je     41b43e <fb_symbol_table_destroy@@Base+0x4e>
  41b404:	cmp    QWORD PTR [rdi+0x18],0x0
  41b409:	mov    r12,QWORD PTR [rdi]
  41b40c:	je     41b43e <fb_symbol_table_destroy@@Base+0x4e>
  41b40e:	mov    r13,rsi
  41b411:	mov    r14,rdx
  41b414:	xor    ebx,ebx
  41b416:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b420:	mov    rsi,QWORD PTR [r12+rbx*8]
  41b424:	test   rsi,rsi
  41b427:	je     41b435 <fb_symbol_table_destroy@@Base+0x45>
  41b429:	cmp    rsi,0x2
  41b42d:	je     41b435 <fb_symbol_table_destroy@@Base+0x45>
  41b42f:	mov    rdi,r14
  41b432:	call   r13
  41b435:	inc    rbx
  41b438:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b43c:	jb     41b420 <fb_symbol_table_destroy@@Base+0x30>
  41b43e:	pop    rbx
  41b43f:	mov    rdi,rbp
  41b442:	pop    rbp
  41b443:	pop    r12
  41b445:	pop    r13
  41b447:	pop    r14
  41b449:	jmp    41ae40 <ptr_set_visit@@Base+0x50>
  41b44e:	xchg   ax,ax

000000000041b450 <fb_symbol_table_init@@Base>:
  41b450:	endbr64 
  41b454:	push   rbp
  41b455:	push   rbx
  41b456:	mov    rbx,rdi
  41b459:	sub    rsp,0x8
  41b45d:	cmp    rsi,0x2
  41b461:	jbe    41b4c0 <fb_symbol_table_init@@Base+0x70>
  41b463:	mov    eax,0x4
  41b468:	nop    DWORD PTR [rax+rax*1+0x0]
  41b470:	lea    rbp,[rax+rax*1]
  41b474:	imul   rax,rax,0x166
  41b47b:	shr    rax,0x8
  41b47f:	mov    rdx,rax
  41b482:	mov    rax,rbp
  41b485:	cmp    rsi,rdx
  41b488:	ja     41b470 <fb_symbol_table_init@@Base+0x20>
  41b48a:	mov    esi,0x8
  41b48f:	mov    rdi,rbp
  41b492:	call   405320 <calloc@plt>
  41b497:	mov    QWORD PTR [rbx],rax
  41b49a:	test   rax,rax
  41b49d:	je     41b4c7 <fb_symbol_table_init@@Base+0x77>
  41b49f:	mov    QWORD PTR [rbx+0x8],0x0
  41b4a7:	mov    QWORD PTR [rbx+0x18],rbp
  41b4ab:	mov    QWORD PTR [rbx+0x10],0x0
  41b4b3:	xor    eax,eax
  41b4b5:	add    rsp,0x8
  41b4b9:	pop    rbx
  41b4ba:	pop    rbp
  41b4bb:	ret    
  41b4bc:	nop    DWORD PTR [rax+0x0]
  41b4c0:	mov    ebp,0x4
  41b4c5:	jmp    41b48a <fb_symbol_table_init@@Base+0x3a>
  41b4c7:	mov    eax,0xffffffff
  41b4cc:	jmp    41b4b5 <fb_symbol_table_init@@Base+0x65>
  41b4ce:	xchg   ax,ax

000000000041b4d0 <fb_symbol_table_resize@@Base>:
  41b4d0:	endbr64 
  41b4d4:	jmp    41af60 <ptr_set_visit@@Base+0x170>
  41b4d9:	nop    DWORD PTR [rax+0x0]

000000000041b4e0 <fb_symbol_table_insert@@Base>:
  41b4e0:	endbr64 
  41b4e4:	jmp    41b090 <ptr_set_visit@@Base+0x2a0>
  41b4e9:	nop    DWORD PTR [rax+0x0]

000000000041b4f0 <fb_symbol_table_insert_item@@Base>:
  41b4f0:	endbr64 
  41b4f4:	mov    rax,QWORD PTR [rsi+0x8]
  41b4f8:	mov    rcx,rsi
  41b4fb:	mov    r8d,edx
  41b4fe:	mov    rsi,QWORD PTR [rax]
  41b501:	mov    rdx,QWORD PTR [rax+0x8]
  41b505:	jmp    41b090 <ptr_set_visit@@Base+0x2a0>
  41b50a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b510 <fb_symbol_table_find@@Base>:
  41b510:	endbr64 
  41b514:	mov    rax,rsi
  41b517:	lea    rsi,[rdi+0x18]
  41b51b:	mov    rdi,QWORD PTR [rdi]
  41b51e:	mov    rcx,rdx
  41b521:	mov    rdx,rax
  41b524:	jmp    41b310 <ptr_set_visit@@Base+0x520>
  41b529:	nop    DWORD PTR [rax+0x0]

000000000041b530 <fb_symbol_table_find_item@@Base>:
  41b530:	endbr64 
  41b534:	mov    rax,QWORD PTR [rsi+0x8]
  41b538:	lea    rsi,[rdi+0x18]
  41b53c:	mov    rcx,QWORD PTR [rax+0x8]
  41b540:	mov    rdx,QWORD PTR [rax]
  41b543:	mov    rdi,QWORD PTR [rdi]
  41b546:	jmp    41b310 <ptr_set_visit@@Base+0x520>
  41b54b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b550 <fb_symbol_table_remove@@Base>:
  41b550:	endbr64 
  41b554:	jmp    41ae60 <ptr_set_visit@@Base+0x70>
  41b559:	nop    DWORD PTR [rax+0x0]

000000000041b560 <fb_symbol_table_remove_item@@Base>:
  41b560:	endbr64 
  41b564:	mov    rax,QWORD PTR [rsi+0x8]
  41b568:	mov    rdx,QWORD PTR [rax+0x8]
  41b56c:	mov    rsi,QWORD PTR [rax]
  41b56f:	jmp    41ae60 <ptr_set_visit@@Base+0x70>
  41b574:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41b57f:	nop

000000000041b580 <fb_symbol_table_visit@@Base>:
  41b580:	endbr64 
  41b584:	push   r14
  41b586:	push   r13
  41b588:	push   r12
  41b58a:	push   rbp
  41b58b:	push   rbx
  41b58c:	cmp    QWORD PTR [rdi+0x18],0x0
  41b591:	mov    r14,QWORD PTR [rdi]
  41b594:	je     41b5c6 <fb_symbol_table_visit@@Base+0x46>
  41b596:	mov    r13,rdx
  41b599:	mov    r12,rsi
  41b59c:	mov    rbp,rdi
  41b59f:	xor    ebx,ebx
  41b5a1:	nop    DWORD PTR [rax+0x0]
  41b5a8:	mov    rsi,QWORD PTR [r14+rbx*8]
  41b5ac:	test   rsi,rsi
  41b5af:	je     41b5bd <fb_symbol_table_visit@@Base+0x3d>
  41b5b1:	cmp    rsi,0x2
  41b5b5:	je     41b5bd <fb_symbol_table_visit@@Base+0x3d>
  41b5b7:	mov    rdi,r13
  41b5ba:	call   r12
  41b5bd:	inc    rbx
  41b5c0:	cmp    rbx,QWORD PTR [rbp+0x18]
  41b5c4:	jb     41b5a8 <fb_symbol_table_visit@@Base+0x28>
  41b5c6:	pop    rbx
  41b5c7:	pop    rbp
  41b5c8:	pop    r12
  41b5ca:	pop    r13
  41b5cc:	pop    r14
  41b5ce:	ret    
  41b5cf:	nop
  41b5d0:	push   rbx
  41b5d1:	mov    rbx,rdi
  41b5d4:	mov    rdi,QWORD PTR [rdi]
  41b5d7:	test   rdi,rdi
  41b5da:	je     41b5e1 <fb_symbol_table_visit@@Base+0x61>
  41b5dc:	call   405230 <free@plt>
  41b5e1:	vpxor  xmm0,xmm0,xmm0
  41b5e5:	vmovups XMMWORD PTR [rbx],xmm0
  41b5e9:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41b5ee:	pop    rbx
  41b5ef:	ret    
  41b5f0:	push   r15
  41b5f2:	push   r14
  41b5f4:	push   r13
  41b5f6:	push   r12
  41b5f8:	push   rbp
  41b5f9:	push   rbx
  41b5fa:	sub    rsp,0x48
  41b5fe:	mov    QWORD PTR [rsp+0x30],rdi
  41b603:	mov    QWORD PTR [rsp+0x18],rsi
  41b608:	mov    QWORD PTR [rsp+0x20],rdx
  41b60d:	mov    QWORD PTR [rsp+0x28],rcx
  41b612:	mov    DWORD PTR [rsp+0x3c],r8d
  41b617:	test   rcx,rcx
  41b61a:	je     41bb6a <fb_symbol_table_visit@@Base+0x5ea>
  41b620:	cmp    QWORD PTR [rsp+0x28],0x2
  41b626:	je     41bb1d <fb_symbol_table_visit@@Base+0x59d>
  41b62c:	cmp    QWORD PTR [rsp+0x28],0x1
  41b632:	je     41bafe <fb_symbol_table_visit@@Base+0x57e>
  41b638:	mov    rbx,QWORD PTR [rsp+0x30]
  41b63d:	mov    r12,QWORD PTR [rbx+0x18]
  41b641:	mov    rsi,QWORD PTR [rbx+0x10]
  41b645:	imul   rax,r12,0xb3
  41b64c:	shr    rax,0x8
  41b650:	cmp    rsi,rax
  41b653:	jae    41b9a0 <fb_symbol_table_visit@@Base+0x420>
  41b659:	mov    rax,QWORD PTR [rsp+0x30]
  41b65e:	mov    rax,QWORD PTR [rax]
  41b661:	mov    QWORD PTR [rsp+0x8],rax
  41b666:	lea    rax,[r12-0x1]
  41b66b:	mov    QWORD PTR [rsp+0x10],rax
  41b670:	mov    rax,QWORD PTR [rsp+0x20]
  41b675:	mov    DWORD PTR [rsp+0x38],eax
  41b679:	test   eax,eax
  41b67b:	jle    41b9c0 <fb_symbol_table_visit@@Base+0x440>
  41b681:	mov    r11,QWORD PTR [rsp+0x20]
  41b686:	mov    r10,QWORD PTR [rsp+0x18]
  41b68b:	xor    ecx,ecx
  41b68d:	mov    rbp,0xffffffffffffffff
  41b694:	mov    ebx,0x9e3779b1
  41b699:	test   r11,r11
  41b69c:	je     41b74b <fb_symbol_table_visit@@Base+0x1cb>
  41b6a2:	nop    WORD PTR [rax+rax*1+0x0]
  41b6a8:	cmp    BYTE PTR [r10],0x2e
  41b6ac:	je     41ba80 <fb_symbol_table_visit@@Base+0x500>
  41b6b2:	xor    edx,edx
  41b6b4:	jmp    41b6cf <fb_symbol_table_visit@@Base+0x14f>
  41b6b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6c0:	cmp    BYTE PTR [r10+rdx*1+0x1],0x2e
  41b6c6:	je     41b8c0 <fb_symbol_table_visit@@Base+0x340>
  41b6cc:	mov    rdx,r8
  41b6cf:	lea    r8,[rdx+0x1]
  41b6d3:	cmp    r8,r11
  41b6d6:	jne    41b6c0 <fb_symbol_table_visit@@Base+0x140>
  41b6d8:	test   rdx,rdx
  41b6db:	je     41b760 <fb_symbol_table_visit@@Base+0x1e0>
  41b6e1:	movzx  esi,BYTE PTR [r10]
  41b6e5:	mov    r8,r11
  41b6e8:	lea    r9,[r10+0x1]
  41b6ec:	test   sil,sil
  41b6ef:	je     41b760 <fb_symbol_table_visit@@Base+0x1e0>
  41b6f1:	lea    rdi,[r10+rdx*1]
  41b6f5:	mov    eax,0x2f692e57
  41b6fa:	jmp    41b70d <fb_symbol_table_visit@@Base+0x18d>
  41b6fc:	nop    DWORD PTR [rax+0x0]
  41b700:	inc    r9
  41b703:	movzx  esi,BYTE PTR [r9-0x1]
  41b708:	test   sil,sil
  41b70b:	je     41b71f <fb_symbol_table_visit@@Base+0x19f>
  41b70d:	mov    rdx,rax
  41b710:	shl    rdx,0x5
  41b714:	add    rax,rdx
  41b717:	xor    rax,rsi
  41b71a:	cmp    r9,rdi
  41b71d:	jne    41b700 <fb_symbol_table_visit@@Base+0x180>
  41b71f:	xor    rax,rcx
  41b722:	xor    rax,0x2f693b52
  41b728:	imul   rax,rbx
  41b72c:	mov    rcx,rax
  41b72f:	cmp    r11,r8
  41b732:	je     41b770 <fb_symbol_table_visit@@Base+0x1f0>
  41b734:	mov    rax,r8
  41b737:	not    rax
  41b73a:	add    r11,rax
  41b73d:	lea    r10,[r10+r8*1+0x1]
  41b742:	test   r11,r11
  41b745:	jne    41b6a8 <fb_symbol_table_visit@@Base+0x128>
  41b74b:	movzx  esi,BYTE PTR [r10]
  41b74f:	xor    r8d,r8d
  41b752:	mov    rdx,rbp
  41b755:	lea    r9,[r10+0x1]
  41b759:	test   sil,sil
  41b75c:	jne    41b6f1 <fb_symbol_table_visit@@Base+0x171>
  41b75e:	xchg   ax,ax
  41b760:	xor    rcx,0x1505
  41b767:	mov    edx,0x9e3779b1
  41b76c:	imul   rcx,rdx
  41b770:	mov    rax,QWORD PTR [rsp+0x10]
  41b775:	mov    rbx,QWORD PTR [rsp+0x8]
  41b77a:	and    rax,rcx
  41b77d:	lea    r14,[rbx+rax*8]
  41b781:	mov    eax,DWORD PTR [rsp+0x3c]
  41b785:	mov    r15,QWORD PTR [r14]
  41b788:	sub    eax,0x2
  41b78b:	cmp    eax,0x1
  41b78e:	jbe    41ba90 <fb_symbol_table_visit@@Base+0x510>
  41b794:	lea    r12,[rcx+0x1]
  41b798:	mov    QWORD PTR [rsp],0x0
  41b7a0:	test   r15,r15
  41b7a3:	je     41b88b <fb_symbol_table_visit@@Base+0x30b>
  41b7a9:	mov    rax,r15
  41b7ac:	mov    r15,r12
  41b7af:	mov    r12,rax
  41b7b2:	nop    WORD PTR [rax+rax*1+0x0]
  41b7b8:	cmp    r12,0x2
  41b7bc:	je     41b8f0 <fb_symbol_table_visit@@Base+0x370>
  41b7c2:	mov    edx,DWORD PTR [rsp+0x38]
  41b7c6:	mov    r13,QWORD PTR [r12]
  41b7ca:	test   edx,edx
  41b7cc:	jle    41b908 <fb_symbol_table_visit@@Base+0x388>
  41b7d2:	test   r13,r13
  41b7d5:	je     41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b7db:	mov    rax,QWORD PTR [r13+0x8]
  41b7df:	mov    r11,QWORD PTR [rsp+0x20]
  41b7e4:	mov    rdx,QWORD PTR [rax+0x8]
  41b7e8:	mov    rdi,QWORD PTR [rax]
  41b7eb:	cmp    r11,rdx
  41b7ee:	jb     41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b7f0:	mov    rsi,QWORD PTR [rsp+0x18]
  41b7f5:	test   rdx,rdx
  41b7f8:	je     41ba70 <fb_symbol_table_visit@@Base+0x4f0>
  41b7fe:	movzx  eax,BYTE PTR [rdi]
  41b801:	cmp    BYTE PTR [rsi],al
  41b803:	jne    41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b805:	xor    eax,eax
  41b807:	jmp    41b819 <fb_symbol_table_visit@@Base+0x299>
  41b809:	nop    DWORD PTR [rax+0x0]
  41b810:	movzx  ebx,BYTE PTR [rsi+rax*1]
  41b814:	cmp    BYTE PTR [rdi+rax*1],bl
  41b817:	jne    41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b819:	inc    rax
  41b81c:	cmp    rax,rdx
  41b81f:	jne    41b810 <fb_symbol_table_visit@@Base+0x290>
  41b821:	mov    rax,rdx
  41b824:	cmp    rdx,r11
  41b827:	je     41bae3 <fb_symbol_table_visit@@Base+0x563>
  41b82d:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41b831:	jne    41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b833:	mov    rax,rdx
  41b836:	mov    r13,QWORD PTR [r13+0x0]
  41b83a:	not    rax
  41b83d:	add    r11,rax
  41b840:	lea    rsi,[rsi+rdx*1+0x1]
  41b845:	test   r13,r13
  41b848:	je     41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b84a:	mov    rax,QWORD PTR [r13+0x8]
  41b84e:	mov    rdx,QWORD PTR [rax+0x8]
  41b852:	mov    rdi,QWORD PTR [rax]
  41b855:	cmp    rdx,r11
  41b858:	jbe    41b7f5 <fb_symbol_table_visit@@Base+0x275>
  41b85a:	nop    WORD PTR [rax+rax*1+0x0]
  41b860:	mov    rax,QWORD PTR [rsp+0x10]
  41b865:	mov    rbx,QWORD PTR [rsp+0x8]
  41b86a:	and    rax,r15
  41b86d:	lea    r14,[rbx+rax*8]
  41b871:	mov    r12,QWORD PTR [r14]
  41b874:	inc    r15
  41b877:	test   r12,r12
  41b87a:	jne    41b7b8 <fb_symbol_table_visit@@Base+0x238>
  41b880:	mov    rax,QWORD PTR [rsp]
  41b884:	test   rax,rax
  41b887:	cmovne r14,rax
  41b88b:	mov    QWORD PTR [rsp],r14
  41b88f:	mov    rax,QWORD PTR [rsp+0x30]
  41b894:	mov    rbx,QWORD PTR [rsp+0x28]
  41b899:	inc    QWORD PTR [rax+0x10]
  41b89d:	mov    rax,QWORD PTR [rsp]
  41b8a1:	xor    r15d,r15d
  41b8a4:	mov    QWORD PTR [rax],rbx
  41b8a7:	add    rsp,0x48
  41b8ab:	pop    rbx
  41b8ac:	pop    rbp
  41b8ad:	pop    r12
  41b8af:	pop    r13
  41b8b1:	pop    r14
  41b8b3:	mov    rax,r15
  41b8b6:	pop    r15
  41b8b8:	ret    
  41b8b9:	nop    DWORD PTR [rax+0x0]
  41b8c0:	test   rdx,rdx
  41b8c3:	je     41b8d6 <fb_symbol_table_visit@@Base+0x356>
  41b8c5:	movzx  esi,BYTE PTR [r10]
  41b8c9:	lea    r9,[r10+0x1]
  41b8cd:	test   sil,sil
  41b8d0:	jne    41b6f1 <fb_symbol_table_visit@@Base+0x171>
  41b8d6:	mov    rax,rcx
  41b8d9:	xor    rax,0x1505
  41b8df:	imul   rax,rbx
  41b8e3:	mov    rcx,rax
  41b8e6:	jmp    41b734 <fb_symbol_table_visit@@Base+0x1b4>
  41b8eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b8f0:	mov    rax,QWORD PTR [rsp]
  41b8f4:	test   rax,rax
  41b8f7:	cmovne r14,rax
  41b8fb:	mov    QWORD PTR [rsp],r14
  41b8ff:	jmp    41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b904:	nop    DWORD PTR [rax+0x0]
  41b908:	mov    rbp,QWORD PTR [rsp+0x18]
  41b90d:	mov    ebx,DWORD PTR [rsp+0x38]
  41b911:	jmp    41b937 <fb_symbol_table_visit@@Base+0x3b7>
  41b913:	nop    DWORD PTR [rax+rax*1+0x0]
  41b918:	mov    rsi,QWORD PTR [rcx]
  41b91b:	mov    rdi,QWORD PTR [rax]
  41b91e:	call   405260 <strncmp@plt>
  41b923:	test   eax,eax
  41b925:	jne    41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b92b:	mov    r13,QWORD PTR [r13+0x0]
  41b92f:	mov    rbp,QWORD PTR [rbp+0x0]
  41b933:	inc    ebx
  41b935:	je     41b988 <fb_symbol_table_visit@@Base+0x408>
  41b937:	test   r13,r13
  41b93a:	je     41b960 <fb_symbol_table_visit@@Base+0x3e0>
  41b93c:	test   rbp,rbp
  41b93f:	je     41b960 <fb_symbol_table_visit@@Base+0x3e0>
  41b941:	mov    rax,QWORD PTR [r13+0x8]
  41b945:	mov    rcx,QWORD PTR [rbp+0x8]
  41b949:	mov    rdx,QWORD PTR [rax+0x8]
  41b94d:	cmp    rdx,QWORD PTR [rcx+0x8]
  41b951:	je     41b918 <fb_symbol_table_visit@@Base+0x398>
  41b953:	jmp    41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b958:	nop    DWORD PTR [rax+rax*1+0x0]
  41b960:	or     r13,rbp
  41b963:	jne    41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b969:	mov    eax,DWORD PTR [rsp+0x3c]
  41b96d:	mov    r15,r12
  41b970:	test   eax,eax
  41b972:	jne    41b8a7 <fb_symbol_table_visit@@Base+0x327>
  41b978:	mov    rax,QWORD PTR [rsp+0x28]
  41b97d:	mov    QWORD PTR [r14],rax
  41b980:	jmp    41b8a7 <fb_symbol_table_visit@@Base+0x327>
  41b985:	nop    DWORD PTR [rax]
  41b988:	xor    eax,eax
  41b98a:	test   r13,r13
  41b98d:	sete   al
  41b990:	test   eax,eax
  41b992:	je     41b860 <fb_symbol_table_visit@@Base+0x2e0>
  41b998:	jmp    41b969 <fb_symbol_table_visit@@Base+0x3e9>
  41b99a:	nop    WORD PTR [rax+rax*1+0x0]
  41b9a0:	add    rsi,rsi
  41b9a3:	mov    rdi,rbx
  41b9a6:	call   41bb90 <fb_symbol_table_visit@@Base+0x610>
  41b9ab:	test   eax,eax
  41b9ad:	jne    41bb3c <fb_symbol_table_visit@@Base+0x5bc>
  41b9b3:	mov    r12,QWORD PTR [rbx+0x18]
  41b9b7:	jmp    41b659 <fb_symbol_table_visit@@Base+0xd9>
  41b9bc:	nop    DWORD PTR [rax+0x0]
  41b9c0:	mov    r8,QWORD PTR [rsp+0x18]
  41b9c5:	test   r8,r8
  41b9c8:	je     41baf2 <fb_symbol_table_visit@@Base+0x572>
  41b9ce:	mov    rdx,QWORD PTR [r8+0x8]
  41b9d2:	mov    r9d,eax
  41b9d5:	mov    r11,QWORD PTR [rdx]
  41b9d8:	mov    rdx,QWORD PTR [rdx+0x8]
  41b9dc:	xor    ecx,ecx
  41b9de:	mov    r10d,0x9e3779b1
  41b9e4:	dec    rdx
  41b9e7:	je     41ba63 <fb_symbol_table_visit@@Base+0x4e3>
  41b9e9:	nop    DWORD PTR [rax+0x0]
  41b9f0:	movzx  esi,BYTE PTR [r11]
  41b9f4:	lea    rdi,[r11+0x1]
  41b9f8:	test   sil,sil
  41b9fb:	je     41ba63 <fb_symbol_table_visit@@Base+0x4e3>
  41b9fd:	add    r11,rdx
  41ba00:	mov    eax,0x2f692e57
  41ba05:	jmp    41ba1c <fb_symbol_table_visit@@Base+0x49c>
  41ba07:	nop    WORD PTR [rax+rax*1+0x0]
  41ba10:	inc    rdi
  41ba13:	movzx  esi,BYTE PTR [rdi-0x1]
  41ba17:	test   sil,sil
  41ba1a:	je     41ba2e <fb_symbol_table_visit@@Base+0x4ae>
  41ba1c:	mov    rdx,rax
  41ba1f:	shl    rdx,0x5
  41ba23:	add    rax,rdx
  41ba26:	xor    rax,rsi
  41ba29:	cmp    rdi,r11
  41ba2c:	jne    41ba10 <fb_symbol_table_visit@@Base+0x490>
  41ba2e:	xor    rax,rcx
  41ba31:	xor    rax,0x2f693b52
  41ba37:	imul   rax,r10
  41ba3b:	mov    r8,QWORD PTR [r8]
  41ba3e:	mov    rcx,rax
  41ba41:	inc    r9d
  41ba44:	je     41b770 <fb_symbol_table_visit@@Base+0x1f0>
  41ba4a:	test   r8,r8
  41ba4d:	je     41b770 <fb_symbol_table_visit@@Base+0x1f0>
  41ba53:	mov    rdx,QWORD PTR [r8+0x8]
  41ba57:	mov    r11,QWORD PTR [rdx]
  41ba5a:	mov    rdx,QWORD PTR [rdx+0x8]
  41ba5e:	dec    rdx
  41ba61:	jne    41b9f0 <fb_symbol_table_visit@@Base+0x470>
  41ba63:	mov    eax,0x2f692e57
  41ba68:	jmp    41ba2e <fb_symbol_table_visit@@Base+0x4ae>
  41ba6a:	nop    WORD PTR [rax+rax*1+0x0]
  41ba70:	xor    eax,eax
  41ba72:	jmp    41b824 <fb_symbol_table_visit@@Base+0x2a4>
  41ba77:	nop    WORD PTR [rax+rax*1+0x0]
  41ba80:	xor    r8d,r8d
  41ba83:	mov    rdx,rbp
  41ba86:	jmp    41b8c5 <fb_symbol_table_visit@@Base+0x345>
  41ba8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ba90:	mov    rax,QWORD PTR [rsp+0x30]
  41ba95:	inc    QWORD PTR [rax+0x10]
  41ba99:	test   r15,r15
  41ba9c:	je     41bad3 <fb_symbol_table_visit@@Base+0x553>
  41ba9e:	cmp    r15,0x2
  41baa2:	je     41bad3 <fb_symbol_table_visit@@Base+0x553>
  41baa4:	inc    rcx
  41baa7:	mov    rdx,QWORD PTR [rsp+0x8]
  41baac:	mov    rsi,QWORD PTR [rsp+0x10]
  41bab1:	jmp    41babe <fb_symbol_table_visit@@Base+0x53e>
  41bab3:	nop    DWORD PTR [rax+rax*1+0x0]
  41bab8:	cmp    rax,0x2
  41babc:	je     41bad3 <fb_symbol_table_visit@@Base+0x553>
  41babe:	mov    rax,rsi
  41bac1:	and    rax,rcx
  41bac4:	lea    r14,[rdx+rax*8]
  41bac8:	mov    rax,QWORD PTR [r14]
  41bacb:	inc    rcx
  41bace:	test   rax,rax
  41bad1:	jne    41bab8 <fb_symbol_table_visit@@Base+0x538>
  41bad3:	mov    rax,QWORD PTR [rsp+0x28]
  41bad8:	xor    r15d,r15d
  41badb:	mov    QWORD PTR [r14],rax
  41bade:	jmp    41b8a7 <fb_symbol_table_visit@@Base+0x327>
  41bae3:	xor    eax,eax
  41bae5:	cmp    QWORD PTR [r13+0x0],0x0
  41baea:	sete   al
  41baed:	jmp    41b990 <fb_symbol_table_visit@@Base+0x410>
  41baf2:	mov    r14,QWORD PTR [rsp+0x8]
  41baf7:	xor    ecx,ecx
  41baf9:	jmp    41b781 <fb_symbol_table_visit@@Base+0x201>
  41bafe:	lea    rcx,[rip+0x2a133]        # 445c38 <fb_symbol_table_missing@@Base+0x8>
  41bb05:	mov    edx,0x74
  41bb0a:	lea    rsi,[rip+0x29faf]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41bb11:	lea    rdi,[rip+0x2a079]        # 445b91 <_IO_stdin_used@@Base+0x18b91>
  41bb18:	call   4052e0 <__assert_fail@plt>
  41bb1d:	lea    rcx,[rip+0x2a114]        # 445c38 <fb_symbol_table_missing@@Base+0x8>
  41bb24:	mov    edx,0x73
  41bb29:	lea    rsi,[rip+0x29f90]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41bb30:	lea    rdi,[rip+0x2a043]        # 445b7a <_IO_stdin_used@@Base+0x18b7a>
  41bb37:	call   4052e0 <__assert_fail@plt>
  41bb3c:	mov    rax,QWORD PTR [rip+0x354a5]        # 450fe8 <stderr@GLIBC_2.2.5>
  41bb43:	lea    rcx,[rip+0x29fe6]        # 445b30 <_IO_stdin_used@@Base+0x18b30>
  41bb4a:	mov    rdi,QWORD PTR [rax]
  41bb4d:	lea    rdx,[rip+0x2a052]        # 445ba6 <_IO_stdin_used@@Base+0x18ba6>
  41bb54:	mov    esi,0x1
  41bb59:	xor    eax,eax
  41bb5b:	call   4053e0 <__fprintf_chk@plt>
  41bb60:	mov    edi,0x1
  41bb65:	call   4053c0 <exit@plt>
  41bb6a:	lea    rcx,[rip+0x2a0c7]        # 445c38 <fb_symbol_table_missing@@Base+0x8>
  41bb71:	mov    edx,0x72
  41bb76:	lea    rsi,[rip+0x29f43]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41bb7d:	lea    rdi,[rip+0x29fdf]        # 445b63 <_IO_stdin_used@@Base+0x18b63>
  41bb84:	call   4052e0 <__assert_fail@plt>
  41bb89:	nop    DWORD PTR [rax+0x0]
  41bb90:	push   r13
  41bb92:	push   r12
  41bb94:	push   rbp
  41bb95:	mov    rbp,rdi
  41bb98:	push   rbx
  41bb99:	sub    rsp,0x38
  41bb9d:	mov    rax,QWORD PTR fs:0x28
  41bba6:	mov    QWORD PTR [rsp+0x28],rax
  41bbab:	xor    eax,eax
  41bbad:	cmp    QWORD PTR [rdi+0x10],rsi
  41bbb1:	cmovae rsi,QWORD PTR [rdi+0x10]
  41bbb6:	mov    r12,QWORD PTR [rdi]
  41bbb9:	cmp    rsi,0x2
  41bbbd:	jbe    41bca0 <fb_symbol_table_visit@@Base+0x720>
  41bbc3:	mov    eax,0x4
  41bbc8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbd0:	lea    rbx,[rax+rax*1]
  41bbd4:	imul   rax,rax,0x166
  41bbdb:	shr    rax,0x8
  41bbdf:	mov    rdx,rax
  41bbe2:	mov    rax,rbx
  41bbe5:	cmp    rsi,rdx
  41bbe8:	ja     41bbd0 <fb_symbol_table_visit@@Base+0x650>
  41bbea:	mov    esi,0x8
  41bbef:	mov    rdi,rbx
  41bbf2:	call   405320 <calloc@plt>
  41bbf7:	mov    QWORD PTR [rsp],rax
  41bbfb:	test   rax,rax
  41bbfe:	je     41bcaa <fb_symbol_table_visit@@Base+0x72a>
  41bc04:	cmp    QWORD PTR [rbp+0x18],0x0
  41bc09:	mov    QWORD PTR [rsp+0x8],0x0
  41bc12:	mov    QWORD PTR [rsp+0x18],rbx
  41bc17:	mov    QWORD PTR [rsp+0x10],0x0
  41bc20:	je     41bc5e <fb_symbol_table_visit@@Base+0x6de>
  41bc22:	xor    ebx,ebx
  41bc24:	mov    r13,rsp
  41bc27:	nop    WORD PTR [rax+rax*1+0x0]
  41bc30:	mov    rax,QWORD PTR [r12+rbx*8]
  41bc34:	test   rax,rax
  41bc37:	je     41bc55 <fb_symbol_table_visit@@Base+0x6d5>
  41bc39:	cmp    rax,0x2
  41bc3d:	je     41bc55 <fb_symbol_table_visit@@Base+0x6d5>
  41bc3f:	mov    rsi,QWORD PTR [rax]
  41bc42:	mov    r8d,0x3
  41bc48:	mov    rcx,rax
  41bc4b:	xor    edx,edx
  41bc4d:	mov    rdi,r13
  41bc50:	call   41b5f0 <fb_symbol_table_visit@@Base+0x70>
  41bc55:	inc    rbx
  41bc58:	cmp    QWORD PTR [rbp+0x18],rbx
  41bc5c:	ja     41bc30 <fb_symbol_table_visit@@Base+0x6b0>
  41bc5e:	mov    rdi,rbp
  41bc61:	call   41b5d0 <fb_symbol_table_visit@@Base+0x50>
  41bc66:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41bc6b:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41bc71:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41bc76:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  41bc7b:	xor    eax,eax
  41bc7d:	mov    rcx,QWORD PTR [rsp+0x28]
  41bc82:	xor    rcx,QWORD PTR fs:0x28
  41bc8b:	jne    41bcb1 <fb_symbol_table_visit@@Base+0x731>
  41bc8d:	add    rsp,0x38
  41bc91:	pop    rbx
  41bc92:	pop    rbp
  41bc93:	pop    r12
  41bc95:	pop    r13
  41bc97:	ret    
  41bc98:	nop    DWORD PTR [rax+rax*1+0x0]
  41bca0:	mov    ebx,0x4
  41bca5:	jmp    41bbea <fb_symbol_table_visit@@Base+0x66a>
  41bcaa:	mov    eax,0xffffffff
  41bcaf:	jmp    41bc7d <fb_symbol_table_visit@@Base+0x6fd>
  41bcb1:	call   4052c0 <__stack_chk_fail@plt>
  41bcb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bcc0:	push   r15
  41bcc2:	push   r14
  41bcc4:	push   r13
  41bcc6:	push   r12
  41bcc8:	push   rbp
  41bcc9:	push   rbx
  41bcca:	sub    rsp,0x28
  41bcce:	test   rdi,rdi
  41bcd1:	je     41c050 <fb_symbol_table_visit@@Base+0xad0>
  41bcd7:	mov    rbx,QWORD PTR [rsi]
  41bcda:	mov    DWORD PTR [rsp+0xc],ecx
  41bcde:	lea    rax,[rbx-0x1]
  41bce2:	mov    QWORD PTR [rsp],rax
  41bce6:	test   ecx,ecx
  41bce8:	jle    41bee8 <fb_symbol_table_visit@@Base+0x968>
  41bcee:	mov    r14,rcx
  41bcf1:	mov    r13,rdx
  41bcf4:	xor    r8d,r8d
  41bcf7:	mov    r15d,0x9e3779b1
  41bcfd:	test   r14,r14
  41bd00:	je     41bdab <fb_symbol_table_visit@@Base+0x82b>
  41bd06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd10:	cmp    BYTE PTR [r13+0x0],0x2e
  41bd15:	je     41c040 <fb_symbol_table_visit@@Base+0xac0>
  41bd1b:	xor    esi,esi
  41bd1d:	jmp    41bd2f <fb_symbol_table_visit@@Base+0x7af>
  41bd1f:	nop
  41bd20:	cmp    BYTE PTR [r13+rsi*1+0x1],0x2e
  41bd26:	je     41bfe0 <fb_symbol_table_visit@@Base+0xa60>
  41bd2c:	mov    rsi,r10
  41bd2f:	lea    r10,[rsi+0x1]
  41bd33:	cmp    r10,r14
  41bd36:	jne    41bd20 <fb_symbol_table_visit@@Base+0x7a0>
  41bd38:	test   rsi,rsi
  41bd3b:	je     41bdc8 <fb_symbol_table_visit@@Base+0x848>
  41bd41:	movzx  r9d,BYTE PTR [r13+0x0]
  41bd46:	mov    r10,r14
  41bd49:	lea    r11,[r13+0x1]
  41bd4d:	test   r9b,r9b
  41bd50:	je     41bdc8 <fb_symbol_table_visit@@Base+0x848>
  41bd52:	lea    rbx,[r13+rsi*1+0x0]
  41bd57:	mov    eax,0x2f692e57
  41bd5c:	jmp    41bd6d <fb_symbol_table_visit@@Base+0x7ed>
  41bd5e:	xchg   ax,ax
  41bd60:	inc    r11
  41bd63:	movzx  r9d,BYTE PTR [r11-0x1]
  41bd68:	test   r9b,r9b
  41bd6b:	je     41bd7f <fb_symbol_table_visit@@Base+0x7ff>
  41bd6d:	mov    rsi,rax
  41bd70:	shl    rsi,0x5
  41bd74:	add    rax,rsi
  41bd77:	xor    rax,r9
  41bd7a:	cmp    r11,rbx
  41bd7d:	jne    41bd60 <fb_symbol_table_visit@@Base+0x7e0>
  41bd7f:	xor    rax,r8
  41bd82:	xor    rax,0x2f693b52
  41bd88:	imul   rax,r15
  41bd8c:	mov    r8,rax
  41bd8f:	cmp    r14,r10
  41bd92:	je     41bdd8 <fb_symbol_table_visit@@Base+0x858>
  41bd94:	mov    rax,r10
  41bd97:	not    rax
  41bd9a:	add    r14,rax
  41bd9d:	lea    r13,[r13+r10*1+0x1]
  41bda2:	test   r14,r14
  41bda5:	jne    41bd10 <fb_symbol_table_visit@@Base+0x790>
  41bdab:	movzx  r9d,BYTE PTR [r13+0x0]
  41bdb0:	xor    r10d,r10d
  41bdb3:	mov    rsi,0xffffffffffffffff
  41bdba:	lea    r11,[r13+0x1]
  41bdbe:	test   r9b,r9b
  41bdc1:	jne    41bd52 <fb_symbol_table_visit@@Base+0x7d2>
  41bdc3:	nop    DWORD PTR [rax+rax*1+0x0]
  41bdc8:	xor    r8,0x1505
  41bdcf:	mov    esi,0x9e3779b1
  41bdd4:	imul   r8,rsi
  41bdd8:	mov    rax,QWORD PTR [rsp]
  41bddc:	and    rax,r8
  41bddf:	lea    rax,[rdi+rax*8]
  41bde3:	mov    r13,QWORD PTR [rax]
  41bde6:	test   r13,r13
  41bde9:	je     41bed2 <fb_symbol_table_visit@@Base+0x952>
  41bdef:	mov    QWORD PTR [rsp+0x18],rcx
  41bdf4:	mov    QWORD PTR [rsp+0x10],rdx
  41bdf9:	lea    r12,[r8+0x1]
  41bdfd:	mov    rax,r13
  41be00:	mov    r14,rdi
  41be03:	mov    r13,r12
  41be06:	mov    r12,rax
  41be09:	nop    DWORD PTR [rax+0x0]
  41be10:	cmp    r12,0x2
  41be14:	je     41beb8 <fb_symbol_table_visit@@Base+0x938>
  41be1a:	mov    eax,DWORD PTR [rsp+0xc]
  41be1e:	mov    r15,QWORD PTR [r12]
  41be22:	test   eax,eax
  41be24:	jle    41bf90 <fb_symbol_table_visit@@Base+0xa10>
  41be2a:	test   r15,r15
  41be2d:	je     41beb8 <fb_symbol_table_visit@@Base+0x938>
  41be33:	mov    rax,QWORD PTR [r15+0x8]
  41be37:	mov    r8,QWORD PTR [rsp+0x18]
  41be3c:	mov    rdx,QWORD PTR [rax+0x8]
  41be40:	mov    rdi,QWORD PTR [rax]
  41be43:	cmp    r8,rdx
  41be46:	jb     41beb8 <fb_symbol_table_visit@@Base+0x938>
  41be48:	mov    rsi,QWORD PTR [rsp+0x10]
  41be4d:	test   rdx,rdx
  41be50:	je     41c038 <fb_symbol_table_visit@@Base+0xab8>
  41be56:	movzx  eax,BYTE PTR [rdi]
  41be59:	cmp    BYTE PTR [rsi],al
  41be5b:	jne    41beb8 <fb_symbol_table_visit@@Base+0x938>
  41be5d:	xor    eax,eax
  41be5f:	jmp    41be71 <fb_symbol_table_visit@@Base+0x8f1>
  41be61:	nop    DWORD PTR [rax+0x0]
  41be68:	movzx  ecx,BYTE PTR [rsi+rax*1]
  41be6c:	cmp    BYTE PTR [rdi+rax*1],cl
  41be6f:	jne    41beb8 <fb_symbol_table_visit@@Base+0x938>
  41be71:	inc    rax
  41be74:	cmp    rax,rdx
  41be77:	jne    41be68 <fb_symbol_table_visit@@Base+0x8e8>
  41be79:	mov    rax,rdx
  41be7c:	cmp    rdx,r8
  41be7f:	je     41c058 <fb_symbol_table_visit@@Base+0xad8>
  41be85:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41be89:	jne    41beb8 <fb_symbol_table_visit@@Base+0x938>
  41be8b:	mov    rax,rdx
  41be8e:	mov    r15,QWORD PTR [r15]
  41be91:	not    rax
  41be94:	add    r8,rax
  41be97:	lea    rsi,[rsi+rdx*1+0x1]
  41be9c:	test   r15,r15
  41be9f:	je     41beb8 <fb_symbol_table_visit@@Base+0x938>
  41bea1:	mov    rax,QWORD PTR [r15+0x8]
  41bea5:	mov    rdx,QWORD PTR [rax+0x8]
  41bea9:	mov    rdi,QWORD PTR [rax]
  41beac:	cmp    rdx,r8
  41beaf:	jbe    41be4d <fb_symbol_table_visit@@Base+0x8cd>
  41beb1:	nop    DWORD PTR [rax+0x0]
  41beb8:	mov    rax,QWORD PTR [rsp]
  41bebc:	and    rax,r13
  41bebf:	mov    r12,QWORD PTR [r14+rax*8]
  41bec3:	inc    r13
  41bec6:	test   r12,r12
  41bec9:	jne    41be10 <fb_symbol_table_visit@@Base+0x890>
  41becf:	mov    r13,r12
  41bed2:	add    rsp,0x28
  41bed6:	pop    rbx
  41bed7:	pop    rbp
  41bed8:	pop    r12
  41beda:	mov    rax,r13
  41bedd:	pop    r13
  41bedf:	pop    r14
  41bee1:	pop    r15
  41bee3:	ret    
  41bee4:	nop    DWORD PTR [rax+0x0]
  41bee8:	test   rdx,rdx
  41beeb:	je     41c063 <fb_symbol_table_visit@@Base+0xae3>
  41bef1:	mov    r9,rdx
  41bef4:	mov    rax,QWORD PTR [r9+0x8]
  41bef8:	mov    r10d,ecx
  41befb:	mov    rbp,QWORD PTR [rax]
  41befe:	mov    rax,QWORD PTR [rax+0x8]
  41bf02:	xor    r8d,r8d
  41bf05:	mov    r11d,0x9e3779b1
  41bf0b:	dec    rax
  41bf0e:	je     41bf83 <fb_symbol_table_visit@@Base+0xa03>
  41bf10:	movzx  esi,BYTE PTR [rbp+0x0]
  41bf14:	lea    rbx,[rbp+0x1]
  41bf18:	test   sil,sil
  41bf1b:	je     41bf83 <fb_symbol_table_visit@@Base+0xa03>
  41bf1d:	add    rbp,rax
  41bf20:	mov    eax,0x2f692e57
  41bf25:	jmp    41bf3c <fb_symbol_table_visit@@Base+0x9bc>
  41bf27:	nop    WORD PTR [rax+rax*1+0x0]
  41bf30:	inc    rbx
  41bf33:	movzx  esi,BYTE PTR [rbx-0x1]
  41bf37:	test   sil,sil
  41bf3a:	je     41bf4e <fb_symbol_table_visit@@Base+0x9ce>
  41bf3c:	mov    r12,rax
  41bf3f:	shl    r12,0x5
  41bf43:	add    rax,r12
  41bf46:	xor    rax,rsi
  41bf49:	cmp    rbx,rbp
  41bf4c:	jne    41bf30 <fb_symbol_table_visit@@Base+0x9b0>
  41bf4e:	xor    rax,r8
  41bf51:	xor    rax,0x2f693b52
  41bf57:	imul   rax,r11
  41bf5b:	mov    r9,QWORD PTR [r9]
  41bf5e:	mov    r8,rax
  41bf61:	inc    r10d
  41bf64:	je     41bdd8 <fb_symbol_table_visit@@Base+0x858>
  41bf6a:	test   r9,r9
  41bf6d:	je     41bdd8 <fb_symbol_table_visit@@Base+0x858>
  41bf73:	mov    rax,QWORD PTR [r9+0x8]
  41bf77:	mov    rbp,QWORD PTR [rax]
  41bf7a:	mov    rax,QWORD PTR [rax+0x8]
  41bf7e:	dec    rax
  41bf81:	jne    41bf10 <fb_symbol_table_visit@@Base+0x990>
  41bf83:	mov    eax,0x2f692e57
  41bf88:	jmp    41bf4e <fb_symbol_table_visit@@Base+0x9ce>
  41bf8a:	nop    WORD PTR [rax+rax*1+0x0]
  41bf90:	mov    rbp,QWORD PTR [rsp+0x10]
  41bf95:	mov    ebx,DWORD PTR [rsp+0xc]
  41bf99:	jmp    41bfbe <fb_symbol_table_visit@@Base+0xa3e>
  41bf9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41bfa0:	mov    rsi,QWORD PTR [rsi]
  41bfa3:	mov    rdi,QWORD PTR [rax]
  41bfa6:	call   405260 <strncmp@plt>
  41bfab:	test   eax,eax
  41bfad:	jne    41beb8 <fb_symbol_table_visit@@Base+0x938>
  41bfb3:	mov    r15,QWORD PTR [r15]
  41bfb6:	mov    rbp,QWORD PTR [rbp+0x0]
  41bfba:	inc    ebx
  41bfbc:	je     41c020 <fb_symbol_table_visit@@Base+0xaa0>
  41bfbe:	test   r15,r15
  41bfc1:	je     41c010 <fb_symbol_table_visit@@Base+0xa90>
  41bfc3:	test   rbp,rbp
  41bfc6:	je     41c010 <fb_symbol_table_visit@@Base+0xa90>
  41bfc8:	mov    rax,QWORD PTR [r15+0x8]
  41bfcc:	mov    rsi,QWORD PTR [rbp+0x8]
  41bfd0:	mov    rdx,QWORD PTR [rax+0x8]
  41bfd4:	cmp    rdx,QWORD PTR [rsi+0x8]
  41bfd8:	je     41bfa0 <fb_symbol_table_visit@@Base+0xa20>
  41bfda:	jmp    41beb8 <fb_symbol_table_visit@@Base+0x938>
  41bfdf:	nop
  41bfe0:	test   rsi,rsi
  41bfe3:	je     41bff7 <fb_symbol_table_visit@@Base+0xa77>
  41bfe5:	movzx  r9d,BYTE PTR [r13+0x0]
  41bfea:	lea    r11,[r13+0x1]
  41bfee:	test   r9b,r9b
  41bff1:	jne    41bd52 <fb_symbol_table_visit@@Base+0x7d2>
  41bff7:	mov    rax,r8
  41bffa:	xor    rax,0x1505
  41c000:	imul   rax,r15
  41c004:	mov    r8,rax
  41c007:	jmp    41bd94 <fb_symbol_table_visit@@Base+0x814>
  41c00c:	nop    DWORD PTR [rax+0x0]
  41c010:	or     r15,rbp
  41c013:	jne    41beb8 <fb_symbol_table_visit@@Base+0x938>
  41c019:	jmp    41becf <fb_symbol_table_visit@@Base+0x94f>
  41c01e:	xchg   ax,ax
  41c020:	xor    eax,eax
  41c022:	test   r15,r15
  41c025:	sete   al
  41c028:	test   eax,eax
  41c02a:	je     41beb8 <fb_symbol_table_visit@@Base+0x938>
  41c030:	jmp    41becf <fb_symbol_table_visit@@Base+0x94f>
  41c035:	nop    DWORD PTR [rax]
  41c038:	xor    eax,eax
  41c03a:	jmp    41be7c <fb_symbol_table_visit@@Base+0x8fc>
  41c03f:	nop
  41c040:	mov    rsi,0xffffffffffffffff
  41c047:	xor    r10d,r10d
  41c04a:	jmp    41bfe5 <fb_symbol_table_visit@@Base+0xa65>
  41c04c:	nop    DWORD PTR [rax+0x0]
  41c050:	xor    r13d,r13d
  41c053:	jmp    41bed2 <fb_symbol_table_visit@@Base+0x952>
  41c058:	xor    eax,eax
  41c05a:	cmp    QWORD PTR [r15],0x0
  41c05e:	sete   al
  41c061:	jmp    41c028 <fb_symbol_table_visit@@Base+0xaa8>
  41c063:	mov    rax,rdi
  41c066:	xor    r8d,r8d
  41c069:	jmp    41bde3 <fb_symbol_table_visit@@Base+0x863>
  41c06e:	xchg   ax,ax
  41c070:	push   r15
  41c072:	push   r14
  41c074:	push   r13
  41c076:	push   r12
  41c078:	push   rbp
  41c079:	push   rbx
  41c07a:	sub    rsp,0x38
  41c07e:	mov    rax,QWORD PTR [rdi]
  41c081:	mov    QWORD PTR [rsp],rax
  41c085:	test   rax,rax
  41c088:	je     41c440 <fb_symbol_table_visit@@Base+0xec0>
  41c08e:	mov    rax,QWORD PTR [rdi+0x18]
  41c092:	mov    rbp,rsi
  41c095:	dec    rax
  41c098:	mov    QWORD PTR [rsp+0x8],rax
  41c09d:	mov    DWORD PTR [rsp+0x14],edx
  41c0a1:	test   edx,edx
  41c0a3:	jle    41c2b0 <fb_symbol_table_visit@@Base+0xd30>
  41c0a9:	mov    r14,rdx
  41c0ac:	mov    rbx,rsi
  41c0af:	mov    r15,0xffffffffffffffff
  41c0b6:	xor    esi,esi
  41c0b8:	mov    r13d,0x9e3779b1
  41c0be:	test   r14,r14
  41c0c1:	je     41c16b <fb_symbol_table_visit@@Base+0xbeb>
  41c0c7:	nop    WORD PTR [rax+rax*1+0x0]
  41c0d0:	cmp    BYTE PTR [rbx],0x2e
  41c0d3:	je     41c430 <fb_symbol_table_visit@@Base+0xeb0>
  41c0d9:	xor    ecx,ecx
  41c0db:	jmp    41c0ee <fb_symbol_table_visit@@Base+0xb6e>
  41c0dd:	nop    DWORD PTR [rax]
  41c0e0:	cmp    BYTE PTR [rbx+rcx*1+0x1],0x2e
  41c0e5:	je     41c3b0 <fb_symbol_table_visit@@Base+0xe30>
  41c0eb:	mov    rcx,r9
  41c0ee:	lea    r9,[rcx+0x1]
  41c0f2:	cmp    r9,r14
  41c0f5:	jne    41c0e0 <fb_symbol_table_visit@@Base+0xb60>
  41c0f7:	test   rcx,rcx
  41c0fa:	je     41c180 <fb_symbol_table_visit@@Base+0xc00>
  41c100:	movzx  r8d,BYTE PTR [rbx]
  41c104:	mov    r9,r14
  41c107:	lea    r10,[rbx+0x1]
  41c10b:	test   r8b,r8b
  41c10e:	je     41c180 <fb_symbol_table_visit@@Base+0xc00>
  41c110:	lea    r11,[rbx+rcx*1]
  41c114:	mov    eax,0x2f692e57
  41c119:	jmp    41c12d <fb_symbol_table_visit@@Base+0xbad>
  41c11b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c120:	inc    r10
  41c123:	movzx  r8d,BYTE PTR [r10-0x1]
  41c128:	test   r8b,r8b
  41c12b:	je     41c13f <fb_symbol_table_visit@@Base+0xbbf>
  41c12d:	mov    rcx,rax
  41c130:	shl    rcx,0x5
  41c134:	add    rax,rcx
  41c137:	xor    rax,r8
  41c13a:	cmp    r10,r11
  41c13d:	jne    41c120 <fb_symbol_table_visit@@Base+0xba0>
  41c13f:	xor    rax,rsi
  41c142:	xor    rax,0x2f693b52
  41c148:	imul   rax,r13
  41c14c:	mov    rsi,rax
  41c14f:	cmp    r14,r9
  41c152:	je     41c190 <fb_symbol_table_visit@@Base+0xc10>
  41c154:	mov    rax,r9
  41c157:	not    rax
  41c15a:	add    r14,rax
  41c15d:	lea    rbx,[rbx+r9*1+0x1]
  41c162:	test   r14,r14
  41c165:	jne    41c0d0 <fb_symbol_table_visit@@Base+0xb50>
  41c16b:	movzx  r8d,BYTE PTR [rbx]
  41c16f:	xor    r9d,r9d
  41c172:	mov    rcx,r15
  41c175:	lea    r10,[rbx+0x1]
  41c179:	test   r8b,r8b
  41c17c:	jne    41c110 <fb_symbol_table_visit@@Base+0xb90>
  41c17e:	xchg   ax,ax
  41c180:	xor    rsi,0x1505
  41c187:	mov    ecx,0x9e3779b1
  41c18c:	imul   rsi,rcx
  41c190:	mov    rax,QWORD PTR [rsp+0x8]
  41c195:	mov    rbx,QWORD PTR [rsp]
  41c199:	and    rax,rsi
  41c19c:	lea    r14,[rbx+rax*8]
  41c1a0:	mov    r15,QWORD PTR [r14]
  41c1a3:	test   r15,r15
  41c1a6:	je     41c29a <fb_symbol_table_visit@@Base+0xd1a>
  41c1ac:	mov    QWORD PTR [rsp+0x20],rdx
  41c1b1:	mov    QWORD PTR [rsp+0x18],rbp
  41c1b6:	mov    QWORD PTR [rsp+0x28],rdi
  41c1bb:	lea    r13,[rsi+0x1]
  41c1bf:	mov    rax,r15
  41c1c2:	mov    r15,r13
  41c1c5:	mov    r13,rax
  41c1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c1d0:	cmp    r13,0x2
  41c1d4:	je     41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c1da:	mov    eax,DWORD PTR [rsp+0x14]
  41c1de:	mov    r12,QWORD PTR [r13+0x0]
  41c1e2:	test   eax,eax
  41c1e4:	jle    41c358 <fb_symbol_table_visit@@Base+0xdd8>
  41c1ea:	test   r12,r12
  41c1ed:	je     41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c1f3:	mov    rax,QWORD PTR [r12+0x8]
  41c1f8:	mov    r8,QWORD PTR [rsp+0x20]
  41c1fd:	mov    rdx,QWORD PTR [rax+0x8]
  41c201:	mov    rdi,QWORD PTR [rax]
  41c204:	cmp    r8,rdx
  41c207:	jb     41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c209:	mov    rsi,QWORD PTR [rsp+0x18]
  41c20e:	test   rdx,rdx
  41c211:	je     41c420 <fb_symbol_table_visit@@Base+0xea0>
  41c217:	movzx  eax,BYTE PTR [rdi]
  41c21a:	cmp    BYTE PTR [rsi],al
  41c21c:	jne    41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c21e:	xor    eax,eax
  41c220:	jmp    41c231 <fb_symbol_table_visit@@Base+0xcb1>
  41c222:	nop    WORD PTR [rax+rax*1+0x0]
  41c228:	movzx  ebx,BYTE PTR [rsi+rax*1]
  41c22c:	cmp    BYTE PTR [rdi+rax*1],bl
  41c22f:	jne    41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c231:	inc    rax
  41c234:	cmp    rax,rdx
  41c237:	jne    41c228 <fb_symbol_table_visit@@Base+0xca8>
  41c239:	mov    rax,rdx
  41c23c:	cmp    rdx,r8
  41c23f:	je     41c448 <fb_symbol_table_visit@@Base+0xec8>
  41c245:	cmp    BYTE PTR [rsi+rax*1],0x2e
  41c249:	jne    41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c24b:	mov    rax,rdx
  41c24e:	mov    r12,QWORD PTR [r12]
  41c252:	not    rax
  41c255:	add    r8,rax
  41c258:	lea    rsi,[rsi+rdx*1+0x1]
  41c25d:	test   r12,r12
  41c260:	je     41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c262:	mov    rax,QWORD PTR [r12+0x8]
  41c267:	mov    rdx,QWORD PTR [rax+0x8]
  41c26b:	mov    rdi,QWORD PTR [rax]
  41c26e:	cmp    rdx,r8
  41c271:	jbe    41c20e <fb_symbol_table_visit@@Base+0xc8e>
  41c273:	nop    DWORD PTR [rax+rax*1+0x0]
  41c278:	mov    rax,QWORD PTR [rsp+0x8]
  41c27d:	mov    rdi,QWORD PTR [rsp]
  41c281:	and    rax,r15
  41c284:	lea    r14,[rdi+rax*8]
  41c288:	mov    r13,QWORD PTR [r14]
  41c28b:	inc    r15
  41c28e:	test   r13,r13
  41c291:	jne    41c1d0 <fb_symbol_table_visit@@Base+0xc50>
  41c297:	mov    r15,r13
  41c29a:	add    rsp,0x38
  41c29e:	pop    rbx
  41c29f:	pop    rbp
  41c2a0:	pop    r12
  41c2a2:	pop    r13
  41c2a4:	pop    r14
  41c2a6:	mov    rax,r15
  41c2a9:	pop    r15
  41c2ab:	ret    
  41c2ac:	nop    DWORD PTR [rax+0x0]
  41c2b0:	test   rsi,rsi
  41c2b3:	je     41c454 <fb_symbol_table_visit@@Base+0xed4>
  41c2b9:	mov    r8,rsi
  41c2bc:	mov    rax,QWORD PTR [r8+0x8]
  41c2c0:	mov    r9d,edx
  41c2c3:	mov    rbx,QWORD PTR [rax]
  41c2c6:	mov    rax,QWORD PTR [rax+0x8]
  41c2ca:	xor    esi,esi
  41c2cc:	mov    r10d,0x9e3779b1
  41c2d2:	dec    rax
  41c2d5:	je     41c34b <fb_symbol_table_visit@@Base+0xdcb>
  41c2d7:	nop    WORD PTR [rax+rax*1+0x0]
  41c2e0:	movzx  ecx,BYTE PTR [rbx]
  41c2e3:	lea    r11,[rbx+0x1]
  41c2e7:	test   cl,cl
  41c2e9:	je     41c34b <fb_symbol_table_visit@@Base+0xdcb>
  41c2eb:	add    rbx,rax
  41c2ee:	mov    eax,0x2f692e57
  41c2f3:	jmp    41c304 <fb_symbol_table_visit@@Base+0xd84>
  41c2f5:	nop    DWORD PTR [rax]
  41c2f8:	inc    r11
  41c2fb:	movzx  ecx,BYTE PTR [r11-0x1]
  41c300:	test   cl,cl
  41c302:	je     41c316 <fb_symbol_table_visit@@Base+0xd96>
  41c304:	mov    r12,rax
  41c307:	shl    r12,0x5
  41c30b:	add    rax,r12
  41c30e:	xor    rax,rcx
  41c311:	cmp    r11,rbx
  41c314:	jne    41c2f8 <fb_symbol_table_visit@@Base+0xd78>
  41c316:	xor    rax,rsi
  41c319:	xor    rax,0x2f693b52
  41c31f:	imul   rax,r10
  41c323:	mov    r8,QWORD PTR [r8]
  41c326:	mov    rsi,rax
  41c329:	inc    r9d
  41c32c:	je     41c190 <fb_symbol_table_visit@@Base+0xc10>
  41c332:	test   r8,r8
  41c335:	je     41c190 <fb_symbol_table_visit@@Base+0xc10>
  41c33b:	mov    rax,QWORD PTR [r8+0x8]
  41c33f:	mov    rbx,QWORD PTR [rax]
  41c342:	mov    rax,QWORD PTR [rax+0x8]
  41c346:	dec    rax
  41c349:	jne    41c2e0 <fb_symbol_table_visit@@Base+0xd60>
  41c34b:	mov    eax,0x2f692e57
  41c350:	jmp    41c316 <fb_symbol_table_visit@@Base+0xd96>
  41c352:	nop    WORD PTR [rax+rax*1+0x0]
  41c358:	mov    rbp,QWORD PTR [rsp+0x18]
  41c35d:	mov    ebx,DWORD PTR [rsp+0x14]
  41c361:	jmp    41c38b <fb_symbol_table_visit@@Base+0xe0b>
  41c363:	nop    DWORD PTR [rax+rax*1+0x0]
  41c368:	mov    rsi,QWORD PTR [rsi]
  41c36b:	mov    rdi,QWORD PTR [rax]
  41c36e:	call   405260 <strncmp@plt>
  41c373:	test   eax,eax
  41c375:	jne    41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c37b:	mov    r12,QWORD PTR [r12]
  41c37f:	mov    rbp,QWORD PTR [rbp+0x0]
  41c383:	inc    ebx
  41c385:	je     41c408 <fb_symbol_table_visit@@Base+0xe88>
  41c38b:	test   r12,r12
  41c38e:	je     41c3e0 <fb_symbol_table_visit@@Base+0xe60>
  41c390:	test   rbp,rbp
  41c393:	je     41c3e0 <fb_symbol_table_visit@@Base+0xe60>
  41c395:	mov    rax,QWORD PTR [r12+0x8]
  41c39a:	mov    rsi,QWORD PTR [rbp+0x8]
  41c39e:	mov    rdx,QWORD PTR [rax+0x8]
  41c3a2:	cmp    rdx,QWORD PTR [rsi+0x8]
  41c3a6:	je     41c368 <fb_symbol_table_visit@@Base+0xde8>
  41c3a8:	jmp    41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c3ad:	nop    DWORD PTR [rax]
  41c3b0:	test   rcx,rcx
  41c3b3:	je     41c3c6 <fb_symbol_table_visit@@Base+0xe46>
  41c3b5:	movzx  r8d,BYTE PTR [rbx]
  41c3b9:	lea    r10,[rbx+0x1]
  41c3bd:	test   r8b,r8b
  41c3c0:	jne    41c110 <fb_symbol_table_visit@@Base+0xb90>
  41c3c6:	mov    rax,rsi
  41c3c9:	xor    rax,0x1505
  41c3cf:	imul   rax,r13
  41c3d3:	mov    rsi,rax
  41c3d6:	jmp    41c154 <fb_symbol_table_visit@@Base+0xbd4>
  41c3db:	nop    DWORD PTR [rax+rax*1+0x0]
  41c3e0:	or     r12,rbp
  41c3e3:	jne    41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c3e9:	mov    rax,QWORD PTR [rsp+0x28]
  41c3ee:	mov    QWORD PTR [r14],0x2
  41c3f5:	mov    r15,r13
  41c3f8:	dec    QWORD PTR [rax+0x10]
  41c3fc:	jmp    41c29a <fb_symbol_table_visit@@Base+0xd1a>
  41c401:	nop    DWORD PTR [rax+0x0]
  41c408:	xor    eax,eax
  41c40a:	test   r12,r12
  41c40d:	sete   al
  41c410:	test   eax,eax
  41c412:	je     41c278 <fb_symbol_table_visit@@Base+0xcf8>
  41c418:	jmp    41c3e9 <fb_symbol_table_visit@@Base+0xe69>
  41c41a:	nop    WORD PTR [rax+rax*1+0x0]
  41c420:	xor    eax,eax
  41c422:	jmp    41c23c <fb_symbol_table_visit@@Base+0xcbc>
  41c427:	nop    WORD PTR [rax+rax*1+0x0]
  41c430:	mov    rcx,r15
  41c433:	xor    r9d,r9d
  41c436:	jmp    41c3b5 <fb_symbol_table_visit@@Base+0xe35>
  41c43b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c440:	xor    r15d,r15d
  41c443:	jmp    41c29a <fb_symbol_table_visit@@Base+0xd1a>
  41c448:	xor    eax,eax
  41c44a:	cmp    QWORD PTR [r12],0x0
  41c44f:	sete   al
  41c452:	jmp    41c410 <fb_symbol_table_visit@@Base+0xe90>
  41c454:	mov    r14,QWORD PTR [rsp]
  41c458:	xor    esi,esi
  41c45a:	jmp    41c1a0 <fb_symbol_table_visit@@Base+0xc20>
  41c45f:	nop

000000000041c460 <fb_scope_table_clear@@Base>:
  41c460:	endbr64 
  41c464:	jmp    41b5d0 <fb_symbol_table_visit@@Base+0x50>
  41c469:	nop    DWORD PTR [rax+0x0]

000000000041c470 <fb_scope_table_destroy@@Base>:
  41c470:	endbr64 
  41c474:	push   r14
  41c476:	push   r13
  41c478:	push   r12
  41c47a:	push   rbp
  41c47b:	mov    rbp,rdi
  41c47e:	push   rbx
  41c47f:	test   rsi,rsi
  41c482:	je     41c4be <fb_scope_table_destroy@@Base+0x4e>
  41c484:	cmp    QWORD PTR [rdi+0x18],0x0
  41c489:	mov    r12,QWORD PTR [rdi]
  41c48c:	je     41c4be <fb_scope_table_destroy@@Base+0x4e>
  41c48e:	mov    r13,rsi
  41c491:	mov    r14,rdx
  41c494:	xor    ebx,ebx
  41c496:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c4a0:	mov    rsi,QWORD PTR [r12+rbx*8]
  41c4a4:	test   rsi,rsi
  41c4a7:	je     41c4b5 <fb_scope_table_destroy@@Base+0x45>
  41c4a9:	cmp    rsi,0x2
  41c4ad:	je     41c4b5 <fb_scope_table_destroy@@Base+0x45>
  41c4af:	mov    rdi,r14
  41c4b2:	call   r13
  41c4b5:	inc    rbx
  41c4b8:	cmp    rbx,QWORD PTR [rbp+0x18]
  41c4bc:	jb     41c4a0 <fb_scope_table_destroy@@Base+0x30>
  41c4be:	pop    rbx
  41c4bf:	mov    rdi,rbp
  41c4c2:	pop    rbp
  41c4c3:	pop    r12
  41c4c5:	pop    r13
  41c4c7:	pop    r14
  41c4c9:	jmp    41b5d0 <fb_symbol_table_visit@@Base+0x50>
  41c4ce:	xchg   ax,ax

000000000041c4d0 <fb_scope_table_init@@Base>:
  41c4d0:	endbr64 
  41c4d4:	push   rbp
  41c4d5:	push   rbx
  41c4d6:	mov    rbx,rdi
  41c4d9:	sub    rsp,0x8
  41c4dd:	cmp    rsi,0x2
  41c4e1:	jbe    41c540 <fb_scope_table_init@@Base+0x70>
  41c4e3:	mov    eax,0x4
  41c4e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c4f0:	lea    rbp,[rax+rax*1]
  41c4f4:	imul   rax,rax,0x166
  41c4fb:	shr    rax,0x8
  41c4ff:	mov    rdx,rax
  41c502:	mov    rax,rbp
  41c505:	cmp    rsi,rdx
  41c508:	ja     41c4f0 <fb_scope_table_init@@Base+0x20>
  41c50a:	mov    esi,0x8
  41c50f:	mov    rdi,rbp
  41c512:	call   405320 <calloc@plt>
  41c517:	mov    QWORD PTR [rbx],rax
  41c51a:	test   rax,rax
  41c51d:	je     41c547 <fb_scope_table_init@@Base+0x77>
  41c51f:	mov    QWORD PTR [rbx+0x8],0x0
  41c527:	mov    QWORD PTR [rbx+0x18],rbp
  41c52b:	mov    QWORD PTR [rbx+0x10],0x0
  41c533:	xor    eax,eax
  41c535:	add    rsp,0x8
  41c539:	pop    rbx
  41c53a:	pop    rbp
  41c53b:	ret    
  41c53c:	nop    DWORD PTR [rax+0x0]
  41c540:	mov    ebp,0x4
  41c545:	jmp    41c50a <fb_scope_table_init@@Base+0x3a>
  41c547:	mov    eax,0xffffffff
  41c54c:	jmp    41c535 <fb_scope_table_init@@Base+0x65>
  41c54e:	xchg   ax,ax

000000000041c550 <fb_scope_table_resize@@Base>:
  41c550:	endbr64 
  41c554:	jmp    41bb90 <fb_symbol_table_visit@@Base+0x610>
  41c559:	nop    DWORD PTR [rax+0x0]

000000000041c560 <fb_scope_table_insert@@Base>:
  41c560:	endbr64 
  41c564:	jmp    41b5f0 <fb_symbol_table_visit@@Base+0x70>
  41c569:	nop    DWORD PTR [rax+0x0]

000000000041c570 <fb_scope_table_insert_item@@Base>:
  41c570:	endbr64 
  41c574:	mov    rcx,rsi
  41c577:	mov    rsi,QWORD PTR [rsi]
  41c57a:	mov    r8d,edx
  41c57d:	xor    edx,edx
  41c57f:	jmp    41b5f0 <fb_symbol_table_visit@@Base+0x70>
  41c584:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41c58f:	nop

000000000041c590 <fb_scope_table_find@@Base>:
  41c590:	endbr64 
  41c594:	mov    rax,rsi
  41c597:	lea    rsi,[rdi+0x18]
  41c59b:	mov    rdi,QWORD PTR [rdi]
  41c59e:	mov    rcx,rdx
  41c5a1:	mov    rdx,rax
  41c5a4:	jmp    41bcc0 <fb_symbol_table_visit@@Base+0x740>
  41c5a9:	nop    DWORD PTR [rax+0x0]

000000000041c5b0 <fb_scope_table_find_item@@Base>:
  41c5b0:	endbr64 
  41c5b4:	lea    rax,[rdi+0x18]
  41c5b8:	mov    rdx,QWORD PTR [rsi]
  41c5bb:	mov    rdi,QWORD PTR [rdi]
  41c5be:	xor    ecx,ecx
  41c5c0:	mov    rsi,rax
  41c5c3:	jmp    41bcc0 <fb_symbol_table_visit@@Base+0x740>
  41c5c8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041c5d0 <fb_scope_table_remove@@Base>:
  41c5d0:	endbr64 
  41c5d4:	jmp    41c070 <fb_symbol_table_visit@@Base+0xaf0>
  41c5d9:	nop    DWORD PTR [rax+0x0]

000000000041c5e0 <fb_scope_table_remove_item@@Base>:
  41c5e0:	endbr64 
  41c5e4:	mov    rsi,QWORD PTR [rsi]
  41c5e7:	xor    edx,edx
  41c5e9:	jmp    41c070 <fb_symbol_table_visit@@Base+0xaf0>
  41c5ee:	xchg   ax,ax

000000000041c5f0 <fb_scope_table_visit@@Base>:
  41c5f0:	endbr64 
  41c5f4:	push   r14
  41c5f6:	push   r13
  41c5f8:	push   r12
  41c5fa:	push   rbp
  41c5fb:	push   rbx
  41c5fc:	cmp    QWORD PTR [rdi+0x18],0x0
  41c601:	mov    r14,QWORD PTR [rdi]
  41c604:	je     41c636 <fb_scope_table_visit@@Base+0x46>
  41c606:	mov    r13,rdx
  41c609:	mov    r12,rsi
  41c60c:	mov    rbp,rdi
  41c60f:	xor    ebx,ebx
  41c611:	nop    DWORD PTR [rax+0x0]
  41c618:	mov    rsi,QWORD PTR [r14+rbx*8]
  41c61c:	test   rsi,rsi
  41c61f:	je     41c62d <fb_scope_table_visit@@Base+0x3d>
  41c621:	cmp    rsi,0x2
  41c625:	je     41c62d <fb_scope_table_visit@@Base+0x3d>
  41c627:	mov    rdi,r13
  41c62a:	call   r12
  41c62d:	inc    rbx
  41c630:	cmp    rbx,QWORD PTR [rbp+0x18]
  41c634:	jb     41c618 <fb_scope_table_visit@@Base+0x28>
  41c636:	pop    rbx
  41c637:	pop    rbp
  41c638:	pop    r12
  41c63a:	pop    r13
  41c63c:	pop    r14
  41c63e:	ret    
  41c63f:	nop
  41c640:	push   rbx
  41c641:	mov    rbx,rdi
  41c644:	mov    rdi,QWORD PTR [rdi]
  41c647:	test   rdi,rdi
  41c64a:	je     41c651 <fb_scope_table_visit@@Base+0x61>
  41c64c:	call   405230 <free@plt>
  41c651:	vpxor  xmm0,xmm0,xmm0
  41c655:	vmovups XMMWORD PTR [rbx],xmm0
  41c659:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  41c65e:	pop    rbx
  41c65f:	ret    
  41c660:	push   r15
  41c662:	push   r14
  41c664:	push   r13
  41c666:	mov    r13,rdi
  41c669:	push   r12
  41c66b:	push   rbp
  41c66c:	push   rbx
  41c66d:	sub    rsp,0x28
  41c671:	mov    QWORD PTR [rsp+0x8],rsi
  41c676:	mov    r15,QWORD PTR [rdi]
  41c679:	mov    rax,QWORD PTR fs:0x28
  41c682:	mov    QWORD PTR [rsp+0x18],rax
  41c687:	xor    eax,eax
  41c689:	test   r15,r15
  41c68c:	je     41c760 <fb_scope_table_visit@@Base+0x170>
  41c692:	mov    r8,rdx
  41c695:	mov    rax,QWORD PTR [r13+0x18]
  41c699:	mov    rdi,rsi
  41c69c:	lea    rcx,[rsp+0x10]
  41c6a1:	mov    edx,0x2f693b52
  41c6a6:	mov    rsi,r8
  41c6a9:	lea    r14,[rax-0x1]
  41c6ad:	mov    QWORD PTR [rsp],r8
  41c6b1:	call   42bb90 <cmetrohash64_1@@Base>
  41c6b6:	mov    ebp,DWORD PTR [rsp+0x10]
  41c6ba:	mov    rax,r14
  41c6bd:	and    rax,rbp
  41c6c0:	lea    r12,[r15+rax*8]
  41c6c4:	mov    rbx,QWORD PTR [r12]
  41c6c8:	test   rbx,rbx
  41c6cb:	je     41c760 <fb_scope_table_visit@@Base+0x170>
  41c6d1:	inc    rbp
  41c6d4:	mov    r8,QWORD PTR [rsp]
  41c6d8:	jmp    41c6f6 <fb_scope_table_visit@@Base+0x106>
  41c6da:	nop    WORD PTR [rax+rax*1+0x0]
  41c6e0:	mov    rax,rbp
  41c6e3:	and    rax,r14
  41c6e6:	lea    r12,[r15+rax*8]
  41c6ea:	mov    rbx,QWORD PTR [r12]
  41c6ee:	inc    rbp
  41c6f1:	test   rbx,rbx
  41c6f4:	je     41c760 <fb_scope_table_visit@@Base+0x170>
  41c6f6:	cmp    rbx,0x2
  41c6fa:	je     41c6e0 <fb_scope_table_visit@@Base+0xf0>
  41c6fc:	movsxd rax,DWORD PTR [rbx+0x100]
  41c703:	cmp    r8,rax
  41c706:	jne    41c6e0 <fb_scope_table_visit@@Base+0xf0>
  41c708:	mov    rsi,QWORD PTR [rbx+0xf8]
  41c70f:	mov    rdi,QWORD PTR [rsp+0x8]
  41c714:	mov    rdx,r8
  41c717:	mov    QWORD PTR [rsp],r8
  41c71b:	call   405310 <memcmp@plt>
  41c720:	test   eax,eax
  41c722:	mov    r8,QWORD PTR [rsp]
  41c726:	jne    41c6e0 <fb_scope_table_visit@@Base+0xf0>
  41c728:	mov    QWORD PTR [r12],0x2
  41c730:	dec    QWORD PTR [r13+0x10]
  41c734:	mov    rcx,QWORD PTR [rsp+0x18]
  41c739:	xor    rcx,QWORD PTR fs:0x28
  41c742:	mov    rax,rbx
  41c745:	jne    41c764 <fb_scope_table_visit@@Base+0x174>
  41c747:	add    rsp,0x28
  41c74b:	pop    rbx
  41c74c:	pop    rbp
  41c74d:	pop    r12
  41c74f:	pop    r13
  41c751:	pop    r14
  41c753:	pop    r15
  41c755:	ret    
  41c756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c760:	xor    ebx,ebx
  41c762:	jmp    41c734 <fb_scope_table_visit@@Base+0x144>
  41c764:	call   4052c0 <__stack_chk_fail@plt>
  41c769:	nop    DWORD PTR [rax+0x0]
  41c770:	push   r13
  41c772:	push   r12
  41c774:	push   rbp
  41c775:	mov    rbp,rdi
  41c778:	push   rbx
  41c779:	sub    rsp,0x38
  41c77d:	mov    rax,QWORD PTR fs:0x28
  41c786:	mov    QWORD PTR [rsp+0x28],rax
  41c78b:	xor    eax,eax
  41c78d:	cmp    QWORD PTR [rdi+0x10],rsi
  41c791:	cmovae rsi,QWORD PTR [rdi+0x10]
  41c796:	mov    r12,QWORD PTR [rdi]
  41c799:	cmp    rsi,0x2
  41c79d:	jbe    41c880 <fb_scope_table_visit@@Base+0x290>
  41c7a3:	mov    eax,0x4
  41c7a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41c7b0:	lea    rbx,[rax+rax*1]
  41c7b4:	imul   rax,rax,0x166
  41c7bb:	shr    rax,0x8
  41c7bf:	mov    rdx,rax
  41c7c2:	mov    rax,rbx
  41c7c5:	cmp    rsi,rdx
  41c7c8:	ja     41c7b0 <fb_scope_table_visit@@Base+0x1c0>
  41c7ca:	mov    esi,0x8
  41c7cf:	mov    rdi,rbx
  41c7d2:	call   405320 <calloc@plt>
  41c7d7:	mov    QWORD PTR [rsp],rax
  41c7db:	test   rax,rax
  41c7de:	je     41c88a <fb_scope_table_visit@@Base+0x29a>
  41c7e4:	cmp    QWORD PTR [rbp+0x18],0x0
  41c7e9:	mov    QWORD PTR [rsp+0x8],0x0
  41c7f2:	mov    QWORD PTR [rsp+0x18],rbx
  41c7f7:	mov    QWORD PTR [rsp+0x10],0x0
  41c800:	je     41c844 <fb_scope_table_visit@@Base+0x254>
  41c802:	xor    ebx,ebx
  41c804:	mov    r13,rsp
  41c807:	nop    WORD PTR [rax+rax*1+0x0]
  41c810:	mov    rcx,QWORD PTR [r12+rbx*8]
  41c814:	test   rcx,rcx
  41c817:	je     41c83b <fb_scope_table_visit@@Base+0x24b>
  41c819:	cmp    rcx,0x2
  41c81d:	je     41c83b <fb_scope_table_visit@@Base+0x24b>
  41c81f:	movsxd rdx,DWORD PTR [rcx+0x100]
  41c826:	mov    rsi,QWORD PTR [rcx+0xf8]
  41c82d:	mov    r8d,0x3
  41c833:	mov    rdi,r13
  41c836:	call   41c8a0 <fb_scope_table_visit@@Base+0x2b0>
  41c83b:	inc    rbx
  41c83e:	cmp    QWORD PTR [rbp+0x18],rbx
  41c842:	ja     41c810 <fb_scope_table_visit@@Base+0x220>
  41c844:	mov    rdi,rbp
  41c847:	call   41c640 <fb_scope_table_visit@@Base+0x50>
  41c84c:	vmovdqa xmm0,XMMWORD PTR [rsp]
  41c851:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  41c857:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  41c85c:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  41c861:	xor    eax,eax
  41c863:	mov    rdi,QWORD PTR [rsp+0x28]
  41c868:	xor    rdi,QWORD PTR fs:0x28
  41c871:	jne    41c891 <fb_scope_table_visit@@Base+0x2a1>
  41c873:	add    rsp,0x38
  41c877:	pop    rbx
  41c878:	pop    rbp
  41c879:	pop    r12
  41c87b:	pop    r13
  41c87d:	ret    
  41c87e:	xchg   ax,ax
  41c880:	mov    ebx,0x4
  41c885:	jmp    41c7ca <fb_scope_table_visit@@Base+0x1da>
  41c88a:	mov    eax,0xffffffff
  41c88f:	jmp    41c863 <fb_scope_table_visit@@Base+0x273>
  41c891:	call   4052c0 <__stack_chk_fail@plt>
  41c896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c8a0:	push   r15
  41c8a2:	push   r14
  41c8a4:	push   r13
  41c8a6:	mov    r13,rdx
  41c8a9:	push   r12
  41c8ab:	push   rbp
  41c8ac:	push   rbx
  41c8ad:	sub    rsp,0x48
  41c8b1:	mov    QWORD PTR [rsp+0x10],rsi
  41c8b6:	mov    QWORD PTR [rsp+0x8],rcx
  41c8bb:	mov    DWORD PTR [rsp+0x1c],r8d
  41c8c0:	mov    rdx,QWORD PTR fs:0x28
  41c8c9:	mov    QWORD PTR [rsp+0x38],rdx
  41c8ce:	xor    edx,edx
  41c8d0:	test   rcx,rcx
  41c8d3:	je     41caae <fb_scope_table_visit@@Base+0x4be>
  41c8d9:	cmp    QWORD PTR [rsp+0x8],0x2
  41c8df:	je     41ca8f <fb_scope_table_visit@@Base+0x49f>
  41c8e5:	cmp    QWORD PTR [rsp+0x8],0x1
  41c8eb:	je     41cad2 <fb_scope_table_visit@@Base+0x4e2>
  41c8f1:	mov    r12,QWORD PTR [rdi+0x18]
  41c8f5:	mov    rsi,QWORD PTR [rdi+0x10]
  41c8f9:	imul   rax,r12,0xb3
  41c900:	mov    r15,rdi
  41c903:	shr    rax,0x8
  41c907:	cmp    rsi,rax
  41c90a:	jae    41c9f0 <fb_scope_table_visit@@Base+0x400>
  41c910:	mov    rdi,QWORD PTR [rsp+0x10]
  41c915:	lea    rcx,[rsp+0x30]
  41c91a:	mov    edx,0x2f693b52
  41c91f:	mov    rsi,r13
  41c922:	mov    r14,QWORD PTR [r15]
  41c925:	dec    r12
  41c928:	call   42bb90 <cmetrohash64_1@@Base>
  41c92d:	mov    ebp,DWORD PTR [rsp+0x30]
  41c931:	mov    rax,r12
  41c934:	and    rax,rbp
  41c937:	lea    rcx,[r14+rax*8]
  41c93b:	mov    eax,DWORD PTR [rsp+0x1c]
  41c93f:	sub    eax,0x2
  41c942:	cmp    eax,0x1
  41c945:	jbe    41ca40 <fb_scope_table_visit@@Base+0x450>
  41c94b:	mov    rbx,QWORD PTR [rcx]
  41c94e:	inc    rbp
  41c951:	xor    r11d,r11d
  41c954:	test   rbx,rbx
  41c957:	jne    41c985 <fb_scope_table_visit@@Base+0x395>
  41c959:	jmp    41ca8a <fb_scope_table_visit@@Base+0x49a>
  41c95e:	xchg   ax,ax
  41c960:	movsxd rax,DWORD PTR [rbx+0x100]
  41c967:	cmp    r13,rax
  41c96a:	je     41c998 <fb_scope_table_visit@@Base+0x3a8>
  41c96c:	mov    rax,r12
  41c96f:	and    rax,rbp
  41c972:	lea    rcx,[r14+rax*8]
  41c976:	mov    rbx,QWORD PTR [rcx]
  41c979:	inc    rbp
  41c97c:	test   rbx,rbx
  41c97f:	je     41ca20 <fb_scope_table_visit@@Base+0x430>
  41c985:	cmp    rbx,0x2
  41c989:	jne    41c960 <fb_scope_table_visit@@Base+0x370>
  41c98b:	test   r11,r11
  41c98e:	cmove  r11,rcx
  41c992:	jmp    41c96c <fb_scope_table_visit@@Base+0x37c>
  41c994:	nop    DWORD PTR [rax+0x0]
  41c998:	mov    rsi,QWORD PTR [rbx+0xf8]
  41c99f:	mov    rdi,QWORD PTR [rsp+0x10]
  41c9a4:	mov    rdx,r13
  41c9a7:	mov    QWORD PTR [rsp+0x20],r11
  41c9ac:	mov    QWORD PTR [rsp+0x28],rcx
  41c9b1:	call   405310 <memcmp@plt>
  41c9b6:	test   eax,eax
  41c9b8:	mov    r11,QWORD PTR [rsp+0x20]
  41c9bd:	jne    41c96c <fb_scope_table_visit@@Base+0x37c>
  41c9bf:	mov    eax,DWORD PTR [rsp+0x1c]
  41c9c3:	test   eax,eax
  41c9c5:	je     41ca10 <fb_scope_table_visit@@Base+0x420>
  41c9c7:	mov    rdi,QWORD PTR [rsp+0x38]
  41c9cc:	xor    rdi,QWORD PTR fs:0x28
  41c9d5:	mov    rax,rbx
  41c9d8:	jne    41cacd <fb_scope_table_visit@@Base+0x4dd>
  41c9de:	add    rsp,0x48
  41c9e2:	pop    rbx
  41c9e3:	pop    rbp
  41c9e4:	pop    r12
  41c9e6:	pop    r13
  41c9e8:	pop    r14
  41c9ea:	pop    r15
  41c9ec:	ret    
  41c9ed:	nop    DWORD PTR [rax]
  41c9f0:	add    rsi,rsi
  41c9f3:	call   41c770 <fb_scope_table_visit@@Base+0x180>
  41c9f8:	test   eax,eax
  41c9fa:	jne    41caf1 <fb_scope_table_visit@@Base+0x501>
  41ca00:	mov    r12,QWORD PTR [r15+0x18]
  41ca04:	jmp    41c910 <fb_scope_table_visit@@Base+0x320>
  41ca09:	nop    DWORD PTR [rax+0x0]
  41ca10:	mov    rax,QWORD PTR [rsp+0x8]
  41ca15:	mov    rcx,QWORD PTR [rsp+0x28]
  41ca1a:	mov    QWORD PTR [rcx],rax
  41ca1d:	jmp    41c9c7 <fb_scope_table_visit@@Base+0x3d7>
  41ca1f:	nop
  41ca20:	test   r11,r11
  41ca23:	cmove  r11,rcx
  41ca27:	mov    rax,QWORD PTR [rsp+0x8]
  41ca2c:	inc    QWORD PTR [r15+0x10]
  41ca30:	xor    ebx,ebx
  41ca32:	mov    QWORD PTR [r11],rax
  41ca35:	jmp    41c9c7 <fb_scope_table_visit@@Base+0x3d7>
  41ca37:	nop    WORD PTR [rax+rax*1+0x0]
  41ca40:	mov    rax,QWORD PTR [rcx]
  41ca43:	inc    QWORD PTR [r15+0x10]
  41ca47:	test   rax,rax
  41ca4a:	je     41ca7b <fb_scope_table_visit@@Base+0x48b>
  41ca4c:	cmp    rax,0x2
  41ca50:	je     41ca7b <fb_scope_table_visit@@Base+0x48b>
  41ca52:	inc    rbp
  41ca55:	jmp    41ca66 <fb_scope_table_visit@@Base+0x476>
  41ca57:	nop    WORD PTR [rax+rax*1+0x0]
  41ca60:	cmp    rax,0x2
  41ca64:	je     41ca7b <fb_scope_table_visit@@Base+0x48b>
  41ca66:	mov    rax,r12
  41ca69:	and    rax,rbp
  41ca6c:	lea    rcx,[r14+rax*8]
  41ca70:	mov    rax,QWORD PTR [rcx]
  41ca73:	inc    rbp
  41ca76:	test   rax,rax
  41ca79:	jne    41ca60 <fb_scope_table_visit@@Base+0x470>
  41ca7b:	mov    rax,QWORD PTR [rsp+0x8]
  41ca80:	xor    ebx,ebx
  41ca82:	mov    QWORD PTR [rcx],rax
  41ca85:	jmp    41c9c7 <fb_scope_table_visit@@Base+0x3d7>
  41ca8a:	mov    r11,rcx
  41ca8d:	jmp    41ca27 <fb_scope_table_visit@@Base+0x437>
  41ca8f:	lea    rcx,[rip+0x291ca]        # 445c60 <fb_scope_table_missing@@Base+0x8>
  41ca96:	mov    edx,0x73
  41ca9b:	lea    rsi,[rip+0x2901e]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41caa2:	lea    rdi,[rip+0x290d1]        # 445b7a <_IO_stdin_used@@Base+0x18b7a>
  41caa9:	call   4052e0 <__assert_fail@plt>
  41caae:	lea    rcx,[rip+0x291ab]        # 445c60 <fb_scope_table_missing@@Base+0x8>
  41cab5:	mov    edx,0x72
  41caba:	lea    rsi,[rip+0x28fff]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41cac1:	lea    rdi,[rip+0x2909b]        # 445b63 <_IO_stdin_used@@Base+0x18b63>
  41cac8:	call   4052e0 <__assert_fail@plt>
  41cacd:	call   4052c0 <__stack_chk_fail@plt>
  41cad2:	lea    rcx,[rip+0x29187]        # 445c60 <fb_scope_table_missing@@Base+0x8>
  41cad9:	mov    edx,0x74
  41cade:	lea    rsi,[rip+0x28fdb]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  41cae5:	lea    rdi,[rip+0x290a5]        # 445b91 <_IO_stdin_used@@Base+0x18b91>
  41caec:	call   4052e0 <__assert_fail@plt>
  41caf1:	mov    rax,QWORD PTR [rip+0x344f0]        # 450fe8 <stderr@GLIBC_2.2.5>
  41caf8:	lea    rcx,[rip+0x29031]        # 445b30 <_IO_stdin_used@@Base+0x18b30>
  41caff:	mov    rdi,QWORD PTR [rax]
  41cb02:	lea    rdx,[rip+0x2909d]        # 445ba6 <_IO_stdin_used@@Base+0x18ba6>
  41cb09:	mov    esi,0x1
  41cb0e:	xor    eax,eax
  41cb10:	call   4053e0 <__fprintf_chk@plt>
  41cb15:	mov    edi,0x1
  41cb1a:	call   4053c0 <exit@plt>
  41cb1f:	nop
  41cb20:	push   r15
  41cb22:	push   r14
  41cb24:	push   r13
  41cb26:	push   r12
  41cb28:	push   rbp
  41cb29:	push   rbx
  41cb2a:	sub    rsp,0x18
  41cb2e:	mov    rax,QWORD PTR fs:0x28
  41cb37:	mov    QWORD PTR [rsp+0x8],rax
  41cb3c:	xor    eax,eax
  41cb3e:	test   rdi,rdi
  41cb41:	je     41cbe0 <fb_scope_table_visit@@Base+0x5f0>
  41cb47:	mov    r12,QWORD PTR [rsi]
  41cb4a:	mov    r13,rdx
  41cb4d:	mov    r15,rcx
  41cb50:	mov    r14,rdi
  41cb53:	mov    rcx,rsp
  41cb56:	mov    edx,0x2f693b52
  41cb5b:	mov    rsi,r15
  41cb5e:	mov    rdi,r13
  41cb61:	call   42bb90 <cmetrohash64_1@@Base>
  41cb66:	dec    r12
  41cb69:	mov    ebp,DWORD PTR [rsp]
  41cb6c:	mov    rax,r12
  41cb6f:	and    rax,rbp
  41cb72:	mov    rbx,QWORD PTR [r14+rax*8]
  41cb76:	test   rbx,rbx
  41cb79:	je     41cbe0 <fb_scope_table_visit@@Base+0x5f0>
  41cb7b:	inc    rbp
  41cb7e:	jmp    41cb92 <fb_scope_table_visit@@Base+0x5a2>
  41cb80:	mov    rax,r12
  41cb83:	and    rax,rbp
  41cb86:	mov    rbx,QWORD PTR [r14+rax*8]
  41cb8a:	inc    rbp
  41cb8d:	test   rbx,rbx
  41cb90:	je     41cbe0 <fb_scope_table_visit@@Base+0x5f0>
  41cb92:	cmp    rbx,0x2
  41cb96:	je     41cb80 <fb_scope_table_visit@@Base+0x590>
  41cb98:	movsxd rax,DWORD PTR [rbx+0x100]
  41cb9f:	cmp    r15,rax
  41cba2:	jne    41cb80 <fb_scope_table_visit@@Base+0x590>
  41cba4:	mov    rsi,QWORD PTR [rbx+0xf8]
  41cbab:	mov    rdx,r15
  41cbae:	mov    rdi,r13
  41cbb1:	call   405310 <memcmp@plt>
  41cbb6:	test   eax,eax
  41cbb8:	jne    41cb80 <fb_scope_table_visit@@Base+0x590>
  41cbba:	mov    rdx,QWORD PTR [rsp+0x8]
  41cbbf:	xor    rdx,QWORD PTR fs:0x28
  41cbc8:	mov    rax,rbx
  41cbcb:	jne    41cbe4 <fb_scope_table_visit@@Base+0x5f4>
  41cbcd:	add    rsp,0x18
  41cbd1:	pop    rbx
  41cbd2:	pop    rbp
  41cbd3:	pop    r12
  41cbd5:	pop    r13
  41cbd7:	pop    r14
  41cbd9:	pop    r15
  41cbdb:	ret    
  41cbdc:	nop    DWORD PTR [rax+0x0]
  41cbe0:	xor    ebx,ebx
  41cbe2:	jmp    41cbba <fb_scope_table_visit@@Base+0x5ca>
  41cbe4:	call   4052c0 <__stack_chk_fail@plt>
  41cbe9:	nop    DWORD PTR [rax+0x0]

000000000041cbf0 <fb_schema_table_clear@@Base>:
  41cbf0:	endbr64 
  41cbf4:	jmp    41c640 <fb_scope_table_visit@@Base+0x50>
  41cbf9:	nop    DWORD PTR [rax+0x0]

000000000041cc00 <fb_schema_table_destroy@@Base>:
  41cc00:	endbr64 
  41cc04:	push   r14
  41cc06:	push   r13
  41cc08:	push   r12
  41cc0a:	push   rbp
  41cc0b:	mov    rbp,rdi
  41cc0e:	push   rbx
  41cc0f:	test   rsi,rsi
  41cc12:	je     41cc4e <fb_schema_table_destroy@@Base+0x4e>
  41cc14:	cmp    QWORD PTR [rdi+0x18],0x0
  41cc19:	mov    r12,QWORD PTR [rdi]
  41cc1c:	je     41cc4e <fb_schema_table_destroy@@Base+0x4e>
  41cc1e:	mov    r13,rsi
  41cc21:	mov    r14,rdx
  41cc24:	xor    ebx,ebx
  41cc26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cc30:	mov    rsi,QWORD PTR [r12+rbx*8]
  41cc34:	test   rsi,rsi
  41cc37:	je     41cc45 <fb_schema_table_destroy@@Base+0x45>
  41cc39:	cmp    rsi,0x2
  41cc3d:	je     41cc45 <fb_schema_table_destroy@@Base+0x45>
  41cc3f:	mov    rdi,r14
  41cc42:	call   r13
  41cc45:	inc    rbx
  41cc48:	cmp    rbx,QWORD PTR [rbp+0x18]
  41cc4c:	jb     41cc30 <fb_schema_table_destroy@@Base+0x30>
  41cc4e:	pop    rbx
  41cc4f:	mov    rdi,rbp
  41cc52:	pop    rbp
  41cc53:	pop    r12
  41cc55:	pop    r13
  41cc57:	pop    r14
  41cc59:	jmp    41c640 <fb_scope_table_visit@@Base+0x50>
  41cc5e:	xchg   ax,ax

000000000041cc60 <fb_schema_table_init@@Base>:
  41cc60:	endbr64 
  41cc64:	push   rbp
  41cc65:	push   rbx
  41cc66:	mov    rbx,rdi
  41cc69:	sub    rsp,0x8
  41cc6d:	cmp    rsi,0x2
  41cc71:	jbe    41ccd0 <fb_schema_table_init@@Base+0x70>
  41cc73:	mov    eax,0x4
  41cc78:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc80:	lea    rbp,[rax+rax*1]
  41cc84:	imul   rax,rax,0x166
  41cc8b:	shr    rax,0x8
  41cc8f:	mov    rdx,rax
  41cc92:	mov    rax,rbp
  41cc95:	cmp    rsi,rdx
  41cc98:	ja     41cc80 <fb_schema_table_init@@Base+0x20>
  41cc9a:	mov    esi,0x8
  41cc9f:	mov    rdi,rbp
  41cca2:	call   405320 <calloc@plt>
  41cca7:	mov    QWORD PTR [rbx],rax
  41ccaa:	test   rax,rax
  41ccad:	je     41ccd7 <fb_schema_table_init@@Base+0x77>
  41ccaf:	mov    QWORD PTR [rbx+0x8],0x0
  41ccb7:	mov    QWORD PTR [rbx+0x18],rbp
  41ccbb:	mov    QWORD PTR [rbx+0x10],0x0
  41ccc3:	xor    eax,eax
  41ccc5:	add    rsp,0x8
  41ccc9:	pop    rbx
  41ccca:	pop    rbp
  41cccb:	ret    
  41cccc:	nop    DWORD PTR [rax+0x0]
  41ccd0:	mov    ebp,0x4
  41ccd5:	jmp    41cc9a <fb_schema_table_init@@Base+0x3a>
  41ccd7:	mov    eax,0xffffffff
  41ccdc:	jmp    41ccc5 <fb_schema_table_init@@Base+0x65>
  41ccde:	xchg   ax,ax

000000000041cce0 <fb_schema_table_resize@@Base>:
  41cce0:	endbr64 
  41cce4:	jmp    41c770 <fb_scope_table_visit@@Base+0x180>
  41cce9:	nop    DWORD PTR [rax+0x0]

000000000041ccf0 <fb_schema_table_insert@@Base>:
  41ccf0:	endbr64 
  41ccf4:	jmp    41c8a0 <fb_scope_table_visit@@Base+0x2b0>
  41ccf9:	nop    DWORD PTR [rax+0x0]

000000000041cd00 <fb_schema_table_insert_item@@Base>:
  41cd00:	endbr64 
  41cd04:	mov    rcx,rsi
  41cd07:	mov    r8d,edx
  41cd0a:	movsxd rdx,DWORD PTR [rsi+0x100]
  41cd11:	mov    rsi,QWORD PTR [rsi+0xf8]
  41cd18:	jmp    41c8a0 <fb_scope_table_visit@@Base+0x2b0>
  41cd1d:	nop    DWORD PTR [rax]

000000000041cd20 <fb_schema_table_find@@Base>:
  41cd20:	endbr64 
  41cd24:	mov    rax,rsi
  41cd27:	lea    rsi,[rdi+0x18]
  41cd2b:	mov    rdi,QWORD PTR [rdi]
  41cd2e:	mov    rcx,rdx
  41cd31:	mov    rdx,rax
  41cd34:	jmp    41cb20 <fb_scope_table_visit@@Base+0x530>
  41cd39:	nop    DWORD PTR [rax+0x0]

000000000041cd40 <fb_schema_table_find_item@@Base>:
  41cd40:	endbr64 
  41cd44:	movsxd rcx,DWORD PTR [rsi+0x100]
  41cd4b:	mov    rdx,QWORD PTR [rsi+0xf8]
  41cd52:	lea    rsi,[rdi+0x18]
  41cd56:	mov    rdi,QWORD PTR [rdi]
  41cd59:	jmp    41cb20 <fb_scope_table_visit@@Base+0x530>
  41cd5e:	xchg   ax,ax

000000000041cd60 <fb_schema_table_remove@@Base>:
  41cd60:	endbr64 
  41cd64:	jmp    41c660 <fb_scope_table_visit@@Base+0x70>
  41cd69:	nop    DWORD PTR [rax+0x0]

000000000041cd70 <fb_schema_table_remove_item@@Base>:
  41cd70:	endbr64 
  41cd74:	movsxd rdx,DWORD PTR [rsi+0x100]
  41cd7b:	mov    rsi,QWORD PTR [rsi+0xf8]
  41cd82:	jmp    41c660 <fb_scope_table_visit@@Base+0x70>
  41cd87:	nop    WORD PTR [rax+rax*1+0x0]

000000000041cd90 <fb_schema_table_visit@@Base>:
  41cd90:	endbr64 
  41cd94:	push   r14
  41cd96:	push   r13
  41cd98:	push   r12
  41cd9a:	push   rbp
  41cd9b:	push   rbx
  41cd9c:	cmp    QWORD PTR [rdi+0x18],0x0
  41cda1:	mov    r14,QWORD PTR [rdi]
  41cda4:	je     41cdd6 <fb_schema_table_visit@@Base+0x46>
  41cda6:	mov    r13,rdx
  41cda9:	mov    r12,rsi
  41cdac:	mov    rbp,rdi
  41cdaf:	xor    ebx,ebx
  41cdb1:	nop    DWORD PTR [rax+0x0]
  41cdb8:	mov    rsi,QWORD PTR [r14+rbx*8]
  41cdbc:	test   rsi,rsi
  41cdbf:	je     41cdcd <fb_schema_table_visit@@Base+0x3d>
  41cdc1:	cmp    rsi,0x2
  41cdc5:	je     41cdcd <fb_schema_table_visit@@Base+0x3d>
  41cdc7:	mov    rdi,r13
  41cdca:	call   r12
  41cdcd:	inc    rbx
  41cdd0:	cmp    rbx,QWORD PTR [rbp+0x18]
  41cdd4:	jb     41cdb8 <fb_schema_table_visit@@Base+0x28>
  41cdd6:	pop    rbx
  41cdd7:	pop    rbp
  41cdd8:	pop    r12
  41cdda:	pop    r13
  41cddc:	pop    r14
  41cdde:	ret    
  41cddf:	nop

000000000041cde0 <__flatcc_fb_copy_path_n@@Base>:
  41cde0:	endbr64 
  41cde4:	push   rbp
  41cde5:	mov    rdx,rsi
  41cde8:	mov    rbp,rdi
  41cdeb:	push   rbx
  41cdec:	mov    rbx,rsi
  41cdef:	xor    esi,esi
  41cdf1:	sub    rsp,0x8
  41cdf5:	call   405300 <memchr@plt>
  41cdfa:	mov    rdx,rax
  41cdfd:	sub    rdx,rbp
  41ce00:	test   rax,rax
  41ce03:	cmovne rbx,rdx
  41ce07:	lea    rdi,[rbx+0x1]
  41ce0b:	call   405360 <malloc@plt>
  41ce10:	mov    rcx,rax
  41ce13:	test   rax,rax
  41ce16:	je     41ce2d <__flatcc_fb_copy_path_n@@Base+0x4d>
  41ce18:	mov    rdx,rbx
  41ce1b:	mov    rsi,rbp
  41ce1e:	mov    rdi,rax
  41ce21:	call   405350 <memcpy@plt>
  41ce26:	mov    BYTE PTR [rax+rbx*1],0x0
  41ce2a:	mov    rcx,rax
  41ce2d:	add    rsp,0x8
  41ce31:	pop    rbx
  41ce32:	mov    rax,rcx
  41ce35:	pop    rbp
  41ce36:	ret    
  41ce37:	nop    WORD PTR [rax+rax*1+0x0]

000000000041ce40 <__flatcc_fb_copy_path@@Base>:
  41ce40:	endbr64 
  41ce44:	push   rbp
  41ce45:	mov    rbp,rdi
  41ce48:	push   rbx
  41ce49:	sub    rsp,0x8
  41ce4d:	call   4052b0 <strlen@plt>
  41ce52:	lea    rdi,[rax+0x1]
  41ce56:	mov    rbx,rax
  41ce59:	call   405360 <malloc@plt>
  41ce5e:	mov    rcx,rax
  41ce61:	test   rax,rax
  41ce64:	je     41ce7b <__flatcc_fb_copy_path@@Base+0x3b>
  41ce66:	mov    rdx,rbx
  41ce69:	mov    rsi,rbp
  41ce6c:	mov    rdi,rax
  41ce6f:	call   405350 <memcpy@plt>
  41ce74:	mov    BYTE PTR [rax+rbx*1],0x0
  41ce78:	mov    rcx,rax
  41ce7b:	add    rsp,0x8
  41ce7f:	pop    rbx
  41ce80:	mov    rax,rcx
  41ce83:	pop    rbp
  41ce84:	ret    
  41ce85:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000041ce90 <__flatcc_fb_chomp@@Base>:
  41ce90:	endbr64 
  41ce94:	push   r13
  41ce96:	push   r12
  41ce98:	push   rbp
  41ce99:	push   rbx
  41ce9a:	mov    rbx,rsi
  41ce9d:	sub    rsp,0x8
  41cea1:	test   rdx,rdx
  41cea4:	je     41ced4 <__flatcc_fb_chomp@@Base+0x44>
  41cea6:	mov    r12,rdi
  41cea9:	mov    rdi,rdx
  41ceac:	mov    rbp,rdx
  41ceaf:	call   4052b0 <strlen@plt>
  41ceb4:	cmp    rax,rbx
  41ceb7:	jae    41ced4 <__flatcc_fb_chomp@@Base+0x44>
  41ceb9:	mov    r13,rbx
  41cebc:	sub    r13,rax
  41cebf:	lea    rdi,[r12+r13*1]
  41cec3:	mov    rdx,rax
  41cec6:	mov    rsi,rbp
  41cec9:	call   405260 <strncmp@plt>
  41cece:	test   eax,eax
  41ced0:	cmove  rbx,r13
  41ced4:	add    rsp,0x8
  41ced8:	mov    rax,rbx
  41cedb:	pop    rbx
  41cedc:	pop    rbp
  41cedd:	pop    r12
  41cedf:	pop    r13
  41cee1:	ret    
  41cee2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41ceed:	nop    DWORD PTR [rax]

000000000041cef0 <__flatcc_fb_create_join_path_n@@Base>:
  41cef0:	endbr64 
  41cef4:	push   r15
  41cef6:	mov    r15d,r9d
  41cef9:	push   r14
  41cefb:	mov    r14,rdi
  41cefe:	push   r13
  41cf00:	mov    r13,r8
  41cf03:	push   r12
  41cf05:	mov    r12,rcx
  41cf08:	push   rbp
  41cf09:	xor    ebp,ebp
  41cf0b:	push   rbx
  41cf0c:	mov    rbx,rsi
  41cf0f:	sub    rsp,0x18
  41cf13:	mov    QWORD PTR [rsp+0x8],rdx
  41cf18:	test   r8,r8
  41cf1b:	je     41cf28 <__flatcc_fb_create_join_path_n@@Base+0x38>
  41cf1d:	mov    rdi,r8
  41cf20:	call   4052b0 <strlen@plt>
  41cf25:	mov    rbp,rax
  41cf28:	test   r14,r14
  41cf2b:	je     41cfa0 <__flatcc_fb_create_join_path_n@@Base+0xb0>
  41cf2d:	test   r12,r12
  41cf30:	je     41cf4e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41cf32:	mov    rcx,QWORD PTR [rsp+0x8]
  41cf37:	movzx  eax,BYTE PTR [rcx]
  41cf3a:	cmp    al,0x2f
  41cf3c:	je     41cfa0 <__flatcc_fb_create_join_path_n@@Base+0xb0>
  41cf3e:	cmp    al,0x5c
  41cf40:	je     41cfa0 <__flatcc_fb_create_join_path_n@@Base+0xb0>
  41cf42:	cmp    r12,0x1
  41cf46:	jbe    41cf4e <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41cf48:	cmp    BYTE PTR [rcx+0x1],0x3a
  41cf4c:	je     41cfa0 <__flatcc_fb_create_join_path_n@@Base+0xb0>
  41cf4e:	test   r15d,r15d
  41cf51:	je     41cfa2 <__flatcc_fb_create_join_path_n@@Base+0xb2>
  41cf53:	test   rbx,rbx
  41cf56:	je     41cfa2 <__flatcc_fb_create_join_path_n@@Base+0xb2>
  41cf58:	movzx  eax,BYTE PTR [r14+rbx*1-0x1]
  41cf5e:	cmp    al,0x2f
  41cf60:	je     41cfa2 <__flatcc_fb_create_join_path_n@@Base+0xb2>
  41cf62:	cmp    al,0x5c
  41cf64:	je     41cfa2 <__flatcc_fb_create_join_path_n@@Base+0xb2>
  41cf66:	movsxd r9,r15d
  41cf69:	lea    rdi,[rbx+r9*1+0x1]
  41cf6e:	add    rdi,r12
  41cf71:	add    rdi,rbp
  41cf74:	call   405360 <malloc@plt>
  41cf79:	mov    r15,rax
  41cf7c:	test   rax,rax
  41cf7f:	je     41cfb7 <__flatcc_fb_create_join_path_n@@Base+0xc7>
  41cf81:	mov    rdx,rbx
  41cf84:	mov    rsi,r14
  41cf87:	mov    rdi,r15
  41cf8a:	call   405350 <memcpy@plt>
  41cf8f:	mov    BYTE PTR [r15+rbx*1],0x2f
  41cf94:	inc    rbx
  41cf97:	jmp    41cfde <__flatcc_fb_create_join_path_n@@Base+0xee>
  41cf99:	nop    DWORD PTR [rax+0x0]
  41cfa0:	xor    ebx,ebx
  41cfa2:	lea    rdi,[rbp+r12*1+0x1]
  41cfa7:	add    rdi,rbx
  41cfaa:	call   405360 <malloc@plt>
  41cfaf:	mov    r15,rax
  41cfb2:	test   rax,rax
  41cfb5:	jne    41cfd0 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41cfb7:	xor    r15d,r15d
  41cfba:	add    rsp,0x18
  41cfbe:	pop    rbx
  41cfbf:	pop    rbp
  41cfc0:	pop    r12
  41cfc2:	pop    r13
  41cfc4:	pop    r14
  41cfc6:	mov    rax,r15
  41cfc9:	pop    r15
  41cfcb:	ret    
  41cfcc:	nop    DWORD PTR [rax+0x0]
  41cfd0:	mov    rdx,rbx
  41cfd3:	mov    rsi,r14
  41cfd6:	mov    rdi,r15
  41cfd9:	call   405350 <memcpy@plt>
  41cfde:	mov    rsi,QWORD PTR [rsp+0x8]
  41cfe3:	lea    rdi,[r15+rbx*1]
  41cfe7:	mov    rdx,r12
  41cfea:	add    rbx,r12
  41cfed:	call   405350 <memcpy@plt>
  41cff2:	mov    rdx,rbp
  41cff5:	lea    rdi,[r15+rbx*1]
  41cff9:	mov    rsi,r13
  41cffc:	add    rbp,r15
  41cfff:	call   405350 <memcpy@plt>
  41d004:	mov    BYTE PTR [rbp+rbx*1+0x0],0x0
  41d009:	jmp    41cfba <__flatcc_fb_create_join_path_n@@Base+0xca>
  41d00b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d010 <__flatcc_fb_create_join_path@@Base>:
  41d010:	endbr64 
  41d014:	push   r14
  41d016:	mov    r14d,ecx
  41d019:	push   r13
  41d01b:	mov    r13,rdx
  41d01e:	push   r12
  41d020:	xor    r12d,r12d
  41d023:	push   rbp
  41d024:	mov    rbp,rsi
  41d027:	push   rbx
  41d028:	mov    rbx,rdi
  41d02b:	test   rsi,rsi
  41d02e:	je     41d03b <__flatcc_fb_create_join_path@@Base+0x2b>
  41d030:	mov    rdi,rsi
  41d033:	call   4052b0 <strlen@plt>
  41d038:	mov    r12,rax
  41d03b:	xor    esi,esi
  41d03d:	test   rbx,rbx
  41d040:	je     41d04d <__flatcc_fb_create_join_path@@Base+0x3d>
  41d042:	mov    rdi,rbx
  41d045:	call   4052b0 <strlen@plt>
  41d04a:	mov    rsi,rax
  41d04d:	mov    rdi,rbx
  41d050:	pop    rbx
  41d051:	mov    rdx,rbp
  41d054:	pop    rbp
  41d055:	mov    rcx,r12
  41d058:	pop    r12
  41d05a:	mov    r8,r13
  41d05d:	pop    r13
  41d05f:	mov    r9d,r14d
  41d062:	pop    r14
  41d064:	jmp    41cef0 <__flatcc_fb_create_join_path_n@@Base>
  41d069:	nop    DWORD PTR [rax+0x0]

000000000041d070 <__flatcc_fb_create_path_ext_n@@Base>:
  41d070:	endbr64 
  41d074:	mov    rcx,rsi
  41d077:	mov    r8,rdx
  41d07a:	xor    r9d,r9d
  41d07d:	mov    rdx,rdi
  41d080:	xor    esi,esi
  41d082:	xor    edi,edi
  41d084:	jmp    41cef0 <__flatcc_fb_create_join_path_n@@Base>
  41d089:	nop    DWORD PTR [rax+0x0]

000000000041d090 <__flatcc_fb_create_path_ext@@Base>:
  41d090:	endbr64 
  41d094:	mov    rdx,rsi
  41d097:	xor    ecx,ecx
  41d099:	mov    rsi,rdi
  41d09c:	xor    edi,edi
  41d09e:	jmp    41d010 <__flatcc_fb_create_join_path@@Base>
  41d0a3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41d0ae:	xchg   ax,ax

000000000041d0b0 <__flatcc_fb_create_make_path_n@@Base>:
  41d0b0:	endbr64 
  41d0b4:	push   r12
  41d0b6:	push   rbp
  41d0b7:	push   rbx
  41d0b8:	cmp    rsi,0x1
  41d0bc:	je     41d1b0 <__flatcc_fb_create_make_path_n@@Base+0x100>
  41d0c2:	jbe    41d1bd <__flatcc_fb_create_make_path_n@@Base+0x10d>
  41d0c8:	movzx  ebp,BYTE PTR [rdi]
  41d0cb:	lea    rbx,[rdi+0x1]
  41d0cf:	lea    r12,[rdi+rsi*1]
  41d0d3:	mov    rax,rbx
  41d0d6:	mov    edx,ebp
  41d0d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d0e0:	movzx  ecx,BYTE PTR [rax]
  41d0e3:	cmp    dl,0x5c
  41d0e6:	jne    41d0f4 <__flatcc_fb_create_make_path_n@@Base+0x44>
  41d0e8:	xor    edi,edi
  41d0ea:	cmp    cl,0x20
  41d0ed:	sete   dil
  41d0f1:	add    rsi,rdi
  41d0f4:	cmp    dl,0x20
  41d0f7:	sete   dl
  41d0fa:	movzx  edx,dl
  41d0fd:	inc    rax
  41d100:	add    rsi,rdx
  41d103:	mov    edx,ecx
  41d105:	cmp    r12,rax
  41d108:	jne    41d0e0 <__flatcc_fb_create_make_path_n@@Base+0x30>
  41d10a:	xor    eax,eax
  41d10c:	cmp    cl,0x20
  41d10f:	sete   al
  41d112:	lea    rdi,[rsi+rax*1+0x1]
  41d117:	call   405360 <malloc@plt>
  41d11c:	test   rax,rax
  41d11f:	je     41d18e <__flatcc_fb_create_make_path_n@@Base+0xde>
  41d121:	xor    edx,edx
  41d123:	jmp    41d152 <__flatcc_fb_create_make_path_n@@Base+0xa2>
  41d125:	nop    DWORD PTR [rax]
  41d128:	cmp    bpl,0x20
  41d12c:	jne    41d142 <__flatcc_fb_create_make_path_n@@Base+0x92>
  41d12e:	lea    rdx,[r9+0x2]
  41d132:	mov    BYTE PTR [rsi],0x5c
  41d135:	mov    r9,rcx
  41d138:	mov    rsi,r8
  41d13b:	mov    rcx,rdx
  41d13e:	lea    r8,[rax+rdx*1]
  41d142:	inc    rbx
  41d145:	mov    BYTE PTR [rsi],bpl
  41d148:	mov    rdx,rcx
  41d14b:	mov    ebp,edi
  41d14d:	cmp    r12,rbx
  41d150:	je     41d180 <__flatcc_fb_create_make_path_n@@Base+0xd0>
  41d152:	lea    rcx,[rdx+0x1]
  41d156:	movzx  edi,BYTE PTR [rbx]
  41d159:	lea    rsi,[rax+rdx*1]
  41d15d:	lea    r8,[rax+rcx*1]
  41d161:	mov    r9,rdx
  41d164:	cmp    bpl,0x5c
  41d168:	jne    41d128 <__flatcc_fb_create_make_path_n@@Base+0x78>
  41d16a:	cmp    dil,0x20
  41d16e:	je     41d12e <__flatcc_fb_create_make_path_n@@Base+0x7e>
  41d170:	inc    rbx
  41d173:	mov    BYTE PTR [rsi],bpl
  41d176:	mov    rdx,rcx
  41d179:	mov    ebp,edi
  41d17b:	cmp    r12,rbx
  41d17e:	jne    41d152 <__flatcc_fb_create_make_path_n@@Base+0xa2>
  41d180:	cmp    dil,0x20
  41d184:	je     41d198 <__flatcc_fb_create_make_path_n@@Base+0xe8>
  41d186:	mov    BYTE PTR [r8],dil
  41d189:	mov    BYTE PTR [rax+rcx*1+0x1],0x0
  41d18e:	pop    rbx
  41d18f:	pop    rbp
  41d190:	pop    r12
  41d192:	ret    
  41d193:	nop    DWORD PTR [rax+rax*1+0x0]
  41d198:	lea    rcx,[r9+0x2]
  41d19c:	mov    BYTE PTR [r8],0x5c
  41d1a0:	lea    r8,[rax+rcx*1]
  41d1a4:	mov    BYTE PTR [r8],dil
  41d1a7:	mov    BYTE PTR [rax+rcx*1+0x1],0x0
  41d1ac:	jmp    41d18e <__flatcc_fb_create_make_path_n@@Base+0xde>
  41d1ae:	xchg   ax,ax
  41d1b0:	movzx  ebx,BYTE PTR [rdi]
  41d1b3:	cmp    bl,0x20
  41d1b6:	je     41d1d0 <__flatcc_fb_create_make_path_n@@Base+0x120>
  41d1b8:	cmp    bl,0x5c
  41d1bb:	je     41d1d0 <__flatcc_fb_create_make_path_n@@Base+0x120>
  41d1bd:	pop    rbx
  41d1be:	pop    rbp
  41d1bf:	pop    r12
  41d1c1:	jmp    41cde0 <__flatcc_fb_copy_path_n@@Base>
  41d1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d1d0:	mov    edi,0x3
  41d1d5:	call   405360 <malloc@plt>
  41d1da:	test   rax,rax
  41d1dd:	je     41d18e <__flatcc_fb_create_make_path_n@@Base+0xde>
  41d1df:	mov    BYTE PTR [rax],0x5c
  41d1e2:	mov    BYTE PTR [rax+0x1],bl
  41d1e5:	mov    BYTE PTR [rax+0x2],0x0
  41d1e9:	jmp    41d18e <__flatcc_fb_create_make_path_n@@Base+0xde>
  41d1eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d1f0 <__flatcc_fb_create_make_path@@Base>:
  41d1f0:	endbr64 
  41d1f4:	push   rbx
  41d1f5:	mov    rbx,rdi
  41d1f8:	call   4052b0 <strlen@plt>
  41d1fd:	mov    rsi,rax
  41d200:	mov    rdi,rbx
  41d203:	pop    rbx
  41d204:	jmp    41d0b0 <__flatcc_fb_create_make_path_n@@Base>
  41d209:	nop    DWORD PTR [rax+0x0]

000000000041d210 <__flatcc_fb_find_basename@@Base>:
  41d210:	endbr64 
  41d214:	add    rsi,rdi
  41d217:	cmp    rdi,rsi
  41d21a:	je     41d24a <__flatcc_fb_find_basename@@Base+0x3a>
  41d21c:	movzx  edx,BYTE PTR [rsi-0x1]
  41d220:	lea    rax,[rsi-0x1]
  41d224:	cmp    dl,0x5c
  41d227:	je     41d251 <__flatcc_fb_find_basename@@Base+0x41>
  41d229:	cmp    dl,0x2f
  41d22c:	jne    41d245 <__flatcc_fb_find_basename@@Base+0x35>
  41d22e:	jmp    41d251 <__flatcc_fb_find_basename@@Base+0x41>
  41d230:	movzx  edx,BYTE PTR [rax-0x1]
  41d234:	lea    rcx,[rax-0x1]
  41d238:	cmp    dl,0x2f
  41d23b:	je     41d24d <__flatcc_fb_find_basename@@Base+0x3d>
  41d23d:	cmp    dl,0x5c
  41d240:	je     41d24d <__flatcc_fb_find_basename@@Base+0x3d>
  41d242:	mov    rax,rcx
  41d245:	cmp    rdi,rax
  41d248:	jne    41d230 <__flatcc_fb_find_basename@@Base+0x20>
  41d24a:	mov    rax,rdi
  41d24d:	sub    rax,rdi
  41d250:	ret    
  41d251:	mov    rax,rsi
  41d254:	jmp    41d24d <__flatcc_fb_find_basename@@Base+0x3d>
  41d256:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000041d260 <__flatcc_fb_create_basename@@Base>:
  41d260:	endbr64 
  41d264:	push   r12
  41d266:	mov    r12,rdx
  41d269:	push   rbp
  41d26a:	mov    rbp,rdi
  41d26d:	push   rbx
  41d26e:	mov    rbx,rsi
  41d271:	call   41d210 <__flatcc_fb_find_basename@@Base>
  41d276:	add    rbp,rax
  41d279:	mov    rsi,rbx
  41d27c:	sub    rsi,rax
  41d27f:	mov    rdx,r12
  41d282:	mov    rdi,rbp
  41d285:	call   41ce90 <__flatcc_fb_chomp@@Base>
  41d28a:	lea    rdi,[rax+0x1]
  41d28e:	mov    rbx,rax
  41d291:	call   405360 <malloc@plt>
  41d296:	mov    rcx,rax
  41d299:	test   rax,rax
  41d29c:	je     41d2b3 <__flatcc_fb_create_basename@@Base+0x53>
  41d29e:	mov    rdx,rbx
  41d2a1:	mov    rsi,rbp
  41d2a4:	mov    rdi,rax
  41d2a7:	call   405350 <memcpy@plt>
  41d2ac:	mov    BYTE PTR [rax+rbx*1],0x0
  41d2b0:	mov    rcx,rax
  41d2b3:	pop    rbx
  41d2b4:	pop    rbp
  41d2b5:	mov    rax,rcx
  41d2b8:	pop    r12
  41d2ba:	ret    
  41d2bb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d2c0 <__flatcc_fb_read_file@@Base>:
  41d2c0:	endbr64 
  41d2c4:	push   r14
  41d2c6:	mov    r14,rdx
  41d2c9:	push   r13
  41d2cb:	push   r12
  41d2cd:	push   rbp
  41d2ce:	push   rbx
  41d2cf:	mov    rbx,rsi
  41d2d2:	lea    rsi,[rip+0x289af]        # 445c88 <fb_schema_table_missing@@Base+0x8>
  41d2d9:	sub    rsp,0x10
  41d2dd:	mov    rax,QWORD PTR fs:0x28
  41d2e6:	mov    QWORD PTR [rsp+0x8],rax
  41d2eb:	xor    eax,eax
  41d2ed:	test   rdx,rdx
  41d2f0:	mov    rax,rsp
  41d2f3:	cmove  r14,rax
  41d2f7:	call   4053b0 <fopen@plt>
  41d2fc:	test   rax,rax
  41d2ff:	je     41d3d0 <__flatcc_fb_read_file@@Base+0x110>
  41d305:	mov    rbp,rax
  41d308:	mov    edx,0x2
  41d30d:	xor    esi,esi
  41d30f:	mov    rdi,rax
  41d312:	call   405370 <fseek@plt>
  41d317:	mov    rdi,rbp
  41d31a:	call   405340 <ftell@plt>
  41d31f:	mov    r12,rax
  41d322:	mov    QWORD PTR [r14],rax
  41d325:	mov    rdi,rbp
  41d328:	test   rbx,rbx
  41d32b:	je     41d332 <__flatcc_fb_read_file@@Base+0x72>
  41d32d:	cmp    rax,rbx
  41d330:	ja     41d3b0 <__flatcc_fb_read_file@@Base+0xf0>
  41d332:	call   4052d0 <rewind@plt>
  41d337:	test   r12,r12
  41d33a:	mov    edi,0x1
  41d33f:	cmovne rdi,r12
  41d343:	call   405360 <malloc@plt>
  41d348:	mov    r13,rax
  41d34b:	test   rax,rax
  41d34e:	je     41d3d5 <__flatcc_fb_read_file@@Base+0x115>
  41d354:	xor    ebx,ebx
  41d356:	jmp    41d363 <__flatcc_fb_read_file@@Base+0xa3>
  41d358:	nop    DWORD PTR [rax+rax*1+0x0]
  41d360:	add    rbx,rax
  41d363:	mov    rdx,r12
  41d366:	sub    rdx,rbx
  41d369:	lea    rdi,[r13+rbx*1+0x0]
  41d36e:	mov    rcx,rbp
  41d371:	mov    esi,0x1
  41d376:	call   405280 <fread@plt>
  41d37b:	test   rax,rax
  41d37e:	jne    41d360 <__flatcc_fb_read_file@@Base+0xa0>
  41d380:	mov    rdi,rbp
  41d383:	cmp    rbx,r12
  41d386:	jne    41d3c0 <__flatcc_fb_read_file@@Base+0x100>
  41d388:	call   4052a0 <fclose@plt>
  41d38d:	mov    QWORD PTR [r14],rbx
  41d390:	mov    rcx,QWORD PTR [rsp+0x8]
  41d395:	xor    rcx,QWORD PTR fs:0x28
  41d39e:	mov    rax,r13
  41d3a1:	jne    41d3df <__flatcc_fb_read_file@@Base+0x11f>
  41d3a3:	add    rsp,0x10
  41d3a7:	pop    rbx
  41d3a8:	pop    rbp
  41d3a9:	pop    r12
  41d3ab:	pop    r13
  41d3ad:	pop    r14
  41d3af:	ret    
  41d3b0:	call   4052a0 <fclose@plt>
  41d3b5:	mov    QWORD PTR [r14],r12
  41d3b8:	xor    r13d,r13d
  41d3bb:	jmp    41d390 <__flatcc_fb_read_file@@Base+0xd0>
  41d3bd:	nop    DWORD PTR [rax]
  41d3c0:	call   4052a0 <fclose@plt>
  41d3c5:	mov    rdi,r13
  41d3c8:	call   405230 <free@plt>
  41d3cd:	jmp    41d3b5 <__flatcc_fb_read_file@@Base+0xf5>
  41d3cf:	nop
  41d3d0:	xor    r12d,r12d
  41d3d3:	jmp    41d3b5 <__flatcc_fb_read_file@@Base+0xf5>
  41d3d5:	mov    rdi,rbp
  41d3d8:	call   4052a0 <fclose@plt>
  41d3dd:	jmp    41d3b5 <__flatcc_fb_read_file@@Base+0xf5>
  41d3df:	call   4052c0 <__stack_chk_fail@plt>
  41d3e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d3ee:	xchg   ax,ax

000000000041d3f0 <__flatcc_fb_default_error_out@@Base>:
  41d3f0:	endbr64 
  41d3f4:	mov    rax,QWORD PTR [rip+0x33bed]        # 450fe8 <stderr@GLIBC_2.2.5>
  41d3fb:	mov    rdi,rsi
  41d3fe:	mov    rcx,QWORD PTR [rax]
  41d401:	movsxd rdx,edx
  41d404:	mov    esi,0x1
  41d409:	jmp    4053d0 <fwrite@plt>
  41d40e:	xchg   ax,ax
  41d410:	endbr64 
  41d414:	lea    rdi,[rsi+0x8]
  41d418:	jmp    41b3e0 <fb_symbol_table_clear@@Base>
  41d41d:	nop    DWORD PTR [rax]
  41d420:	push   rax
  41d421:	pop    rax
  41d422:	lea    rdx,[rip+0x10b77]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  41d429:	mov    esi,0x1
  41d42e:	sub    rsp,0x8
  41d432:	mov    rax,QWORD PTR [rip+0x33baf]        # 450fe8 <stderr@GLIBC_2.2.5>
  41d439:	mov    rdi,QWORD PTR [rax]
  41d43c:	xor    eax,eax
  41d43e:	call   4053e0 <__fprintf_chk@plt>
  41d443:	mov    edi,0x1
  41d448:	call   4053c0 <exit@plt>
  41d44d:	nop    DWORD PTR [rax]
  41d450:	push   r12
  41d452:	mov    r12,rsi
  41d455:	push   rbp
  41d456:	push   rbx
  41d457:	mov    rbx,rdi
  41d45a:	sub    rsp,0x10
  41d45e:	movsxd rax,DWORD PTR [rbx+0x38]
  41d462:	mov    rdi,QWORD PTR [rdi+0x28]
  41d466:	mov    r8,rax
  41d469:	lea    rax,[rax+rax*4]
  41d46d:	lea    rsi,[rdi+rax*8]
  41d471:	mov    rax,QWORD PTR [rbx+0x48]
  41d475:	mov    QWORD PTR [rbx+0x30],rsi
  41d479:	cmp    rsi,rax
  41d47c:	je     41d4b0 <__flatcc_fb_default_error_out@@Base+0xc0>
  41d47e:	sub    rcx,rdx
  41d481:	mov    QWORD PTR [rax],rdx
  41d484:	mov    QWORD PTR [rax+0x8],rcx
  41d488:	sub    rdx,QWORD PTR [rbx+0x70]
  41d48c:	mov    rcx,QWORD PTR [rbx+0x78]
  41d490:	inc    rdx
  41d493:	mov    QWORD PTR [rax+0x20],r12
  41d497:	mov    QWORD PTR [rax+0x10],rcx
  41d49b:	mov    QWORD PTR [rax+0x18],rdx
  41d49f:	add    rax,0x28
  41d4a3:	mov    QWORD PTR [rbx+0x48],rax
  41d4a7:	add    rsp,0x10
  41d4ab:	pop    rbx
  41d4ac:	pop    rbp
  41d4ad:	pop    r12
  41d4af:	ret    
  41d4b0:	sub    rsi,rdi
  41d4b3:	mov    rbp,rsi
  41d4b6:	test   r8d,r8d
  41d4b9:	jne    41d508 <__flatcc_fb_default_error_out@@Base+0x118>
  41d4bb:	mov    esi,0xa000
  41d4c0:	mov    r8d,0x400
  41d4c6:	mov    DWORD PTR [rbx+0x38],r8d
  41d4ca:	mov    QWORD PTR [rsp+0x8],rcx
  41d4cf:	mov    QWORD PTR [rsp],rdx
  41d4d3:	call   405390 <realloc@plt>
  41d4d8:	test   rax,rax
  41d4db:	mov    QWORD PTR [rbx+0x28],rax
  41d4df:	mov    rdx,QWORD PTR [rsp]
  41d4e3:	mov    rcx,QWORD PTR [rsp+0x8]
  41d4e8:	je     41d518 <__flatcc_fb_default_error_out@@Base+0x128>
  41d4ea:	movsxd rsi,DWORD PTR [rbx+0x38]
  41d4ee:	lea    rsi,[rsi+rsi*4]
  41d4f2:	lea    rsi,[rax+rsi*8]
  41d4f6:	mov    QWORD PTR [rbx+0x30],rsi
  41d4fa:	add    rax,rbp
  41d4fd:	jmp    41d47e <__flatcc_fb_default_error_out@@Base+0x8e>
  41d502:	nop    WORD PTR [rax+rax*1+0x0]
  41d508:	add    r8d,r8d
  41d50b:	movsxd rax,r8d
  41d50e:	lea    rsi,[rax+rax*4]
  41d512:	shl    rsi,0x3
  41d516:	jmp    41d4c6 <__flatcc_fb_default_error_out@@Base+0xd6>
  41d518:	call   41d420 <__flatcc_fb_default_error_out@@Base+0x30>
  41d51d:	nop    DWORD PTR [rax]
  41d520:	push   r12
  41d522:	push   rbp
  41d523:	push   rbx
  41d524:	mov    rbx,rdi
  41d527:	mov    rcx,QWORD PTR [rdi+0x48]
  41d52b:	mov    r12,QWORD PTR [rdi+0x30]
  41d52f:	lea    rbp,[rcx+0x28]
  41d533:	mov    rdx,rcx
  41d536:	mov    QWORD PTR [rdi+0x48],rbp
  41d53a:	cmp    rbp,r12
  41d53d:	je     41d5e0 <__flatcc_fb_default_error_out@@Base+0x1f0>
  41d543:	cmp    QWORD PTR [rcx+0x48],0xfffffffffffffc3c
  41d54b:	jne    41d5d8 <__flatcc_fb_default_error_out@@Base+0x1e8>
  41d551:	mov    rcx,rbp
  41d554:	mov    rax,QWORD PTR [rdi+0x60]
  41d558:	jmp    41d590 <__flatcc_fb_default_error_out@@Base+0x1a0>
  41d55a:	nop    WORD PTR [rax+rax*1+0x0]
  41d560:	mov    rsi,QWORD PTR [rbx+0x40]
  41d564:	mov    QWORD PTR [rbx+0x60],rax
  41d568:	mov    QWORD PTR [rdx+0x8],rbp
  41d56c:	lea    rbp,[rcx+0x28]
  41d570:	mov    QWORD PTR [rdx],rsi
  41d573:	mov    QWORD PTR [rbx+0x40],rdx
  41d577:	mov    QWORD PTR [rbx+0x48],rbp
  41d57b:	mov    rdx,rcx
  41d57e:	mov    rcx,rbp
  41d581:	cmp    rbp,r12
  41d584:	je     41d5e0 <__flatcc_fb_default_error_out@@Base+0x1f0>
  41d586:	cmp    QWORD PTR [rdx+0x48],0xfffffffffffffc3c
  41d58e:	jne    41d5d8 <__flatcc_fb_default_error_out@@Base+0x1e8>
  41d590:	mov    rdx,rax
  41d593:	add    rax,0x20
  41d597:	cmp    rax,QWORD PTR [rbx+0x50]
  41d59b:	jbe    41d560 <__flatcc_fb_default_error_out@@Base+0x170>
  41d59d:	mov    esi,0x1
  41d5a2:	mov    edi,0x10000
  41d5a7:	call   405320 <calloc@plt>
  41d5ac:	test   rax,rax
  41d5af:	je     41d603 <__flatcc_fb_default_error_out@@Base+0x213>
  41d5b1:	mov    rdx,QWORD PTR [rbx+0x58]
  41d5b5:	lea    rcx,[rax+0x10000]
  41d5bc:	mov    QWORD PTR [rax],rdx
  41d5bf:	mov    QWORD PTR [rbx+0x58],rax
  41d5c3:	lea    rdx,[rax+0x10]
  41d5c7:	mov    QWORD PTR [rbx+0x50],rcx
  41d5cb:	add    rax,0x30
  41d5cf:	mov    rcx,QWORD PTR [rbx+0x48]
  41d5d3:	jmp    41d560 <__flatcc_fb_default_error_out@@Base+0x170>
  41d5d5:	nop    DWORD PTR [rax]
  41d5d8:	pop    rbx
  41d5d9:	mov    rax,rbp
  41d5dc:	pop    rbp
  41d5dd:	pop    r12
  41d5df:	ret    
  41d5e0:	mov    QWORD PTR [rbx+0x48],rdx
  41d5e4:	lea    rcx,[rip+0x29539]        # 446b24 <fb_schema_table_missing@@Base+0xea4>
  41d5eb:	mov    edx,0x155
  41d5f0:	lea    rsi,[rip+0x28699]        # 445c90 <fb_schema_table_missing@@Base+0x10>
  41d5f7:	lea    rdi,[rip+0x1951b]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  41d5fe:	call   4052e0 <__assert_fail@plt>
  41d603:	mov    rax,QWORD PTR [rip+0x339de]        # 450fe8 <stderr@GLIBC_2.2.5>
  41d60a:	lea    rdx,[rip+0x1098f]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  41d611:	mov    rdi,QWORD PTR [rax]
  41d614:	mov    esi,0x1
  41d619:	xor    eax,eax
  41d61b:	call   4053e0 <__fprintf_chk@plt>
  41d620:	mov    edi,0x1
  41d625:	call   4053c0 <exit@plt>
  41d62a:	nop    WORD PTR [rax+rax*1+0x0]
  41d630:	mov    rax,QWORD PTR [rdi+0x48]
  41d634:	mov    rax,QWORD PTR [rax+0x20]
  41d638:	test   rax,rax
  41d63b:	je     41d68a <__flatcc_fb_default_error_out@@Base+0x29a>
  41d63d:	push   rbx
  41d63e:	mov    rbx,rdi
  41d641:	jmp    41d663 <__flatcc_fb_default_error_out@@Base+0x273>
  41d643:	nop    DWORD PTR [rax+rax*1+0x0]
  41d648:	cmp    rax,0x7d
  41d64c:	je     41d680 <__flatcc_fb_default_error_out@@Base+0x290>
  41d64e:	mov    rdi,rbx
  41d651:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41d656:	mov    rax,QWORD PTR [rbx+0x48]
  41d65a:	mov    rax,QWORD PTR [rax+0x20]
  41d65e:	test   rax,rax
  41d661:	je     41d679 <__flatcc_fb_default_error_out@@Base+0x289>
  41d663:	cmp    rax,0x3b
  41d667:	jne    41d648 <__flatcc_fb_default_error_out@@Base+0x258>
  41d669:	mov    rdi,rbx
  41d66c:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41d671:	mov    QWORD PTR [rbx+0x40],0x0
  41d679:	pop    rbx
  41d67a:	ret    
  41d67b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d680:	mov    QWORD PTR [rbx+0x40],0x0
  41d688:	pop    rbx
  41d689:	ret    
  41d68a:	ret    
  41d68b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d690:	mov    rax,QWORD PTR [rdi+0x48]
  41d694:	mov    rax,QWORD PTR [rax+0x20]
  41d698:	test   rax,rax
  41d69b:	je     41d6ef <__flatcc_fb_default_error_out@@Base+0x2ff>
  41d69d:	push   rbp
  41d69e:	mov    rbp,rsi
  41d6a1:	push   rbx
  41d6a2:	mov    rbx,rdi
  41d6a5:	sub    rsp,0x8
  41d6a9:	cmp    rsi,rax
  41d6ac:	jne    41d6b5 <__flatcc_fb_default_error_out@@Base+0x2c5>
  41d6ae:	jmp    41d6d8 <__flatcc_fb_default_error_out@@Base+0x2e8>
  41d6b0:	cmp    rbp,rax
  41d6b3:	je     41d6d8 <__flatcc_fb_default_error_out@@Base+0x2e8>
  41d6b5:	mov    rdi,rbx
  41d6b8:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41d6bd:	mov    rax,QWORD PTR [rbx+0x48]
  41d6c1:	mov    rax,QWORD PTR [rax+0x20]
  41d6c5:	test   rax,rax
  41d6c8:	jne    41d6b0 <__flatcc_fb_default_error_out@@Base+0x2c0>
  41d6ca:	add    rsp,0x8
  41d6ce:	pop    rbx
  41d6cf:	pop    rbp
  41d6d0:	ret    
  41d6d1:	nop    DWORD PTR [rax+0x0]
  41d6d8:	mov    rdi,rbx
  41d6db:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41d6e0:	mov    QWORD PTR [rbx+0x40],0x0
  41d6e8:	add    rsp,0x8
  41d6ec:	pop    rbx
  41d6ed:	pop    rbp
  41d6ee:	ret    
  41d6ef:	ret    

000000000041d6f0 <__flatcc_fb_print_error@@Base>:
  41d6f0:	endbr64 
  41d6f4:	push   r12
  41d6f6:	mov    r12,rdi
  41d6f9:	push   rbp
  41d6fa:	push   rbx
  41d6fb:	sub    rsp,0x1a0
  41d702:	mov    QWORD PTR [rsp+0x100],rdx
  41d70a:	mov    QWORD PTR [rsp+0x108],rcx
  41d712:	mov    QWORD PTR [rsp+0x110],r8
  41d71a:	mov    QWORD PTR [rsp+0x118],r9
  41d722:	test   al,al
  41d724:	je     41d76e <__flatcc_fb_print_error@@Base+0x7e>
  41d726:	vmovaps XMMWORD PTR [rsp+0x120],xmm0
  41d72f:	vmovaps XMMWORD PTR [rsp+0x130],xmm1
  41d738:	vmovaps XMMWORD PTR [rsp+0x140],xmm2
  41d741:	vmovaps XMMWORD PTR [rsp+0x150],xmm3
  41d74a:	vmovaps XMMWORD PTR [rsp+0x160],xmm4
  41d753:	vmovaps XMMWORD PTR [rsp+0x170],xmm5
  41d75c:	vmovaps XMMWORD PTR [rsp+0x180],xmm6
  41d765:	vmovaps XMMWORD PTR [rsp+0x190],xmm7
  41d76e:	mov    rax,QWORD PTR fs:0x28
  41d777:	mov    QWORD PTR [rsp+0xe8],rax
  41d77f:	xor    eax,eax
  41d781:	lea    rbp,[rsp+0x20]
  41d786:	lea    rax,[rsp+0x1c0]
  41d78e:	mov    QWORD PTR [rsp+0x10],rax
  41d793:	mov    r8,rsi
  41d796:	lea    rax,[rsp+0xf0]
  41d79e:	lea    r9,[rsp+0x8]
  41d7a3:	mov    ecx,0xc8
  41d7a8:	mov    edx,0x1
  41d7ad:	mov    esi,0xc8
  41d7b2:	mov    rdi,rbp
  41d7b5:	mov    DWORD PTR [rsp+0x8],0x10
  41d7bd:	mov    DWORD PTR [rsp+0xc],0x30
  41d7c5:	mov    QWORD PTR [rsp+0x18],rax
  41d7ca:	call   405380 <__vsnprintf_chk@plt>
  41d7cf:	mov    ebx,eax
  41d7d1:	cmp    eax,0xc7
  41d7d6:	jg     41d810 <__flatcc_fb_print_error@@Base+0x120>
  41d7d8:	mov    rdi,QWORD PTR [r12+0x18]
  41d7dd:	mov    edx,ebx
  41d7df:	mov    rsi,rbp
  41d7e2:	call   QWORD PTR [r12+0x10]
  41d7e7:	mov    rcx,QWORD PTR [rsp+0xe8]
  41d7ef:	xor    rcx,QWORD PTR fs:0x28
  41d7f8:	mov    eax,ebx
  41d7fa:	jne    41d829 <__flatcc_fb_print_error@@Base+0x139>
  41d7fc:	add    rsp,0x1a0
  41d803:	pop    rbx
  41d804:	pop    rbp
  41d805:	pop    r12
  41d807:	ret    
  41d808:	nop    DWORD PTR [rax+rax*1+0x0]
  41d810:	mov    DWORD PTR [rsp+0xe3],0xa2e2e2e
  41d81b:	mov    ebx,0xc7
  41d820:	mov    BYTE PTR [rbp+0xc7],0x0
  41d827:	jmp    41d7d8 <__flatcc_fb_print_error@@Base+0xe8>
  41d829:	call   4052c0 <__stack_chk_fail@plt>
  41d82e:	xchg   ax,ax

000000000041d830 <__flatcc_error_find_file_of_token@@Base>:
  41d830:	endbr64 
  41d834:	jmp    41d84f <__flatcc_error_find_file_of_token@@Base+0x1f>
  41d836:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d840:	cmp    QWORD PTR [rdi+0x28],rsi
  41d844:	ja     41d84c <__flatcc_error_find_file_of_token@@Base+0x1c>
  41d846:	cmp    QWORD PTR [rdi+0x30],rsi
  41d84a:	ja     41d860 <__flatcc_error_find_file_of_token@@Base+0x30>
  41d84c:	mov    rdi,QWORD PTR [rdi]
  41d84f:	test   rdi,rdi
  41d852:	jne    41d840 <__flatcc_error_find_file_of_token@@Base+0x10>
  41d854:	lea    rax,[rip+0x278c3]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41d85b:	ret    
  41d85c:	nop    DWORD PTR [rax+0x0]
  41d860:	mov    rax,QWORD PTR [rdi+0x318]
  41d867:	ret    
  41d868:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041d870 <__flatcc_error_report@@Base>:
  41d870:	endbr64 
  41d874:	push   r14
  41d876:	push   r13
  41d878:	mov    r13,rdx
  41d87b:	push   r12
  41d87d:	mov    r12,rdi
  41d880:	push   rbp
  41d881:	mov    rbp,rsi
  41d884:	push   rbx
  41d885:	mov    rbx,rcx
  41d888:	sub    rsp,0x10
  41d88c:	test   rsi,rsi
  41d88f:	setne  al
  41d892:	test   r8,r8
  41d895:	jne    41d8a2 <__flatcc_error_report@@Base+0x32>
  41d897:	test   al,al
  41d899:	je     41d8a2 <__flatcc_error_report@@Base+0x32>
  41d89b:	mov    r8,QWORD PTR [rsi]
  41d89e:	mov    r9d,DWORD PTR [rsi+0x8]
  41d8a2:	lea    rdx,[rip+0x27875]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41d8a9:	test   r13,r13
  41d8ac:	cmove  r13,rdx
  41d8b0:	test   r8,r8
  41d8b3:	je     41d9d8 <__flatcc_error_report@@Base+0x168>
  41d8b9:	mov    DWORD PTR [rsp+0xc],r9d
  41d8be:	mov    QWORD PTR [rsp],r8
  41d8c2:	test   rbx,rbx
  41d8c5:	jne    41d8cf <__flatcc_error_report@@Base+0x5f>
  41d8c7:	test   al,al
  41d8c9:	jne    41d950 <__flatcc_error_report@@Base+0xe0>
  41d8cf:	test   rbx,rbx
  41d8d2:	je     41d990 <__flatcc_error_report@@Base+0x120>
  41d8d8:	test   al,al
  41d8da:	je     41d990 <__flatcc_error_report@@Base+0x120>
  41d8e0:	mov    rsi,rbp
  41d8e3:	mov    rdi,r12
  41d8e6:	call   41d830 <__flatcc_error_find_file_of_token@@Base>
  41d8eb:	mov    rsi,rbx
  41d8ee:	mov    rdi,r12
  41d8f1:	mov    r14,rax
  41d8f4:	call   41d830 <__flatcc_error_find_file_of_token@@Base>
  41d8f9:	sub    rsp,0x8
  41d8fd:	mov    rcx,QWORD PTR [rbp+0x10]
  41d901:	push   QWORD PTR [rbx]
  41d903:	mov    rdx,QWORD PTR [rbx+0x8]
  41d907:	lea    rsi,[rip+0x28402]        # 445d10 <fb_schema_table_missing@@Base+0x90>
  41d90e:	push   rdx
  41d90f:	mov    rdi,r12
  41d912:	mov    rdx,r14
  41d915:	push   QWORD PTR [rbx+0x18]
  41d918:	push   QWORD PTR [rbx+0x10]
  41d91b:	push   rax
  41d91c:	xor    eax,eax
  41d91e:	push   r13
  41d920:	mov    r8,QWORD PTR [rsp+0x38]
  41d925:	push   r8
  41d927:	mov    r8,QWORD PTR [rbp+0x18]
  41d92b:	mov    r9d,DWORD PTR [rsp+0x4c]
  41d930:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  41d935:	add    rsp,0x40
  41d939:	inc    DWORD PTR [r12+0xd0]
  41d941:	add    rsp,0x10
  41d945:	pop    rbx
  41d946:	pop    rbp
  41d947:	pop    r12
  41d949:	pop    r13
  41d94b:	pop    r14
  41d94d:	ret    
  41d94e:	xchg   ax,ax
  41d950:	mov    rsi,rbp
  41d953:	mov    rdi,r12
  41d956:	call   41d830 <__flatcc_error_find_file_of_token@@Base>
  41d95b:	mov    rcx,QWORD PTR [rbp+0x10]
  41d95f:	push   r13
  41d961:	mov    rdx,rax
  41d964:	lea    rsi,[rip+0x28385]        # 445cf0 <fb_schema_table_missing@@Base+0x70>
  41d96b:	mov    r8,QWORD PTR [rsp+0x8]
  41d970:	mov    rdi,r12
  41d973:	push   r8
  41d975:	mov    r8,QWORD PTR [rbp+0x18]
  41d979:	xor    eax,eax
  41d97b:	mov    r9d,DWORD PTR [rsp+0x1c]
  41d980:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  41d985:	pop    rcx
  41d986:	pop    rsi
  41d987:	jmp    41d939 <__flatcc_error_report@@Base+0xc9>
  41d989:	nop    DWORD PTR [rax+0x0]
  41d990:	or     rbp,rbx
  41d993:	je     41d9e8 <__flatcc_error_report@@Base+0x178>
  41d995:	test   rbx,rbx
  41d998:	je     41da08 <__flatcc_error_report@@Base+0x198>
  41d99a:	mov    rsi,rbx
  41d99d:	mov    rdi,r12
  41d9a0:	call   41d830 <__flatcc_error_find_file_of_token@@Base>
  41d9a5:	push   QWORD PTR [rbx]
  41d9a7:	mov    rdx,QWORD PTR [rbx+0x8]
  41d9ab:	mov    r9,QWORD PTR [rbx+0x18]
  41d9af:	push   rdx
  41d9b0:	mov    r8,QWORD PTR [rbx+0x10]
  41d9b4:	mov    rcx,rax
  41d9b7:	mov    rdx,r13
  41d9ba:	lea    rsi,[rip+0x28387]        # 445d48 <fb_schema_table_missing@@Base+0xc8>
  41d9c1:	mov    rdi,r12
  41d9c4:	xor    eax,eax
  41d9c6:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  41d9cb:	pop    rax
  41d9cc:	pop    rdx
  41d9cd:	jmp    41d939 <__flatcc_error_report@@Base+0xc9>
  41d9d2:	nop    WORD PTR [rax+rax*1+0x0]
  41d9d8:	xor    r9d,r9d
  41d9db:	mov    r8,rdx
  41d9de:	jmp    41d8b9 <__flatcc_error_report@@Base+0x49>
  41d9e3:	nop    DWORD PTR [rax+rax*1+0x0]
  41d9e8:	mov    rdx,r13
  41d9eb:	lea    rsi,[rip+0x28bac]        # 44659e <fb_schema_table_missing@@Base+0x91e>
  41d9f2:	mov    rdi,r12
  41d9f5:	xor    eax,eax
  41d9f7:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  41d9fc:	jmp    41d939 <__flatcc_error_report@@Base+0xc9>
  41da01:	nop    DWORD PTR [rax+0x0]
  41da08:	lea    rsi,[rip+0x28359]        # 445d68 <fb_schema_table_missing@@Base+0xe8>
  41da0f:	mov    rdi,r12
  41da12:	xor    eax,eax
  41da14:	call   41d6f0 <__flatcc_fb_print_error@@Base>
  41da19:	jmp    41d939 <__flatcc_error_report@@Base+0xc9>
  41da1e:	xchg   ax,ax
  41da20:	push   r12
  41da22:	push   rbp
  41da23:	mov    rbp,rsi
  41da26:	push   rbx
  41da27:	mov    rbx,rdi
  41da2a:	mov    rdx,QWORD PTR [rdi+0x60]
  41da2e:	mov    r12,QWORD PTR [rdi+0x48]
  41da32:	lea    rax,[rdx+0x20]
  41da36:	cmp    rax,QWORD PTR [rdi+0x50]
  41da3a:	ja     41dab0 <__flatcc_error_report@@Base+0x240>
  41da3c:	mov    QWORD PTR [rbx+0x60],rax
  41da40:	mov    QWORD PTR [rdx+0x8],r12
  41da44:	mov    QWORD PTR [rbp+0x0],rdx
  41da48:	mov    rdi,rbx
  41da4b:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41da50:	mov    rax,QWORD PTR [rbx+0x48]
  41da54:	cmp    QWORD PTR [rax+0x20],0x2e
  41da59:	je     41da60 <__flatcc_error_report@@Base+0x1f0>
  41da5b:	pop    rbx
  41da5c:	pop    rbp
  41da5d:	pop    r12
  41da5f:	ret    
  41da60:	mov    r12,QWORD PTR [rbp+0x0]
  41da64:	mov    rdi,rbx
  41da67:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41da6c:	mov    rbp,QWORD PTR [rbx+0x48]
  41da70:	cmp    QWORD PTR [rbp+0x20],0x9
  41da75:	jne    41db30 <__flatcc_error_report@@Base+0x2c0>
  41da7b:	mov    rdx,QWORD PTR [rbx+0x60]
  41da7f:	lea    rax,[rdx+0x20]
  41da83:	cmp    rax,QWORD PTR [rbx+0x50]
  41da87:	ja     41daf0 <__flatcc_error_report@@Base+0x280>
  41da89:	mov    QWORD PTR [rbx+0x60],rax
  41da8d:	mov    QWORD PTR [rdx+0x8],rbp
  41da91:	mov    QWORD PTR [r12],rdx
  41da95:	mov    rdi,rbx
  41da98:	mov    r12,rdx
  41da9b:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41daa0:	mov    rax,QWORD PTR [rbx+0x48]
  41daa4:	cmp    QWORD PTR [rax+0x20],0x2e
  41daa9:	je     41da64 <__flatcc_error_report@@Base+0x1f4>
  41daab:	pop    rbx
  41daac:	pop    rbp
  41daad:	pop    r12
  41daaf:	ret    
  41dab0:	mov    esi,0x1
  41dab5:	mov    edi,0x10000
  41daba:	call   405320 <calloc@plt>
  41dabf:	test   rax,rax
  41dac2:	je     41db4e <__flatcc_error_report@@Base+0x2de>
  41dac8:	mov    rdx,QWORD PTR [rbx+0x58]
  41dacc:	lea    rcx,[rax+0x10000]
  41dad3:	mov    QWORD PTR [rax],rdx
  41dad6:	mov    QWORD PTR [rbx+0x58],rax
  41dada:	lea    rdx,[rax+0x10]
  41dade:	mov    QWORD PTR [rbx+0x50],rcx
  41dae2:	add    rax,0x30
  41dae6:	jmp    41da3c <__flatcc_error_report@@Base+0x1cc>
  41daeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41daf0:	mov    esi,0x1
  41daf5:	mov    edi,0x10000
  41dafa:	call   405320 <calloc@plt>
  41daff:	test   rax,rax
  41db02:	je     41db4e <__flatcc_error_report@@Base+0x2de>
  41db04:	mov    rdx,QWORD PTR [rbx+0x58]
  41db08:	lea    rcx,[rax+0x10000]
  41db0f:	mov    QWORD PTR [rax],rdx
  41db12:	mov    QWORD PTR [rbx+0x58],rax
  41db16:	lea    rdx,[rax+0x10]
  41db1a:	mov    QWORD PTR [rbx+0x50],rcx
  41db1e:	add    rax,0x30
  41db22:	jmp    41da89 <__flatcc_error_report@@Base+0x219>
  41db27:	nop    WORD PTR [rax+rax*1+0x0]
  41db30:	mov    rdi,rbx
  41db33:	pop    rbx
  41db34:	mov    rsi,rbp
  41db37:	pop    rbp
  41db38:	xor    r9d,r9d
  41db3b:	xor    r8d,r8d
  41db3e:	xor    ecx,ecx
  41db40:	lea    rdx,[rip+0x28249]        # 445d90 <fb_schema_table_missing@@Base+0x110>
  41db47:	pop    r12
  41db49:	jmp    41d870 <__flatcc_error_report@@Base>
  41db4e:	call   41d420 <__flatcc_fb_default_error_out@@Base+0x30>
  41db53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41db5e:	xchg   ax,ax
  41db60:	mov    rax,QWORD PTR [rdi+0x48]
  41db64:	mov    QWORD PTR [rdi+0x40],0x0
  41db6c:	cmp    QWORD PTR [rax+0x20],rsi
  41db70:	jne    41db80 <__flatcc_error_report@@Base+0x310>
  41db72:	jmp    41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41db77:	nop    WORD PTR [rax+rax*1+0x0]
  41db80:	push   rbx
  41db81:	mov    rsi,rax
  41db84:	mov    rbx,rdi
  41db87:	xor    r9d,r9d
  41db8a:	xor    r8d,r8d
  41db8d:	call   41d870 <__flatcc_error_report@@Base>
  41db92:	mov    rax,QWORD PTR [rbx+0x48]
  41db96:	pop    rbx
  41db97:	ret    
  41db98:	nop    DWORD PTR [rax+rax*1+0x0]
  41dba0:	push   r13
  41dba2:	mov    eax,0x1
  41dba7:	mov    r13,rsi
  41dbaa:	push   r12
  41dbac:	push   rbp
  41dbad:	push   rbx
  41dbae:	mov    rbx,rdi
  41dbb1:	sub    rsp,0x8
  41dbb5:	mov    r12,QWORD PTR [rdi+0x48]
  41dbb9:	mov    WORD PTR [rsi+0x10],ax
  41dbbd:	mov    rax,QWORD PTR [r12+0x20]
  41dbc2:	cmp    rax,0x5b
  41dbc6:	je     41dd70 <__flatcc_error_report@@Base+0x500>
  41dbcc:	cmp    rax,0xfffffffffffffc28
  41dbd2:	jle    41dc48 <__flatcc_error_report@@Base+0x3d8>
  41dbd4:	cmp    rax,0xfffffffffffffc32
  41dbda:	je     41deb0 <__flatcc_error_report@@Base+0x640>
  41dbe0:	jle    41dd48 <__flatcc_error_report@@Base+0x4d8>
  41dbe6:	cmp    rax,0x9
  41dbea:	je     41de90 <__flatcc_error_report@@Base+0x620>
  41dbf0:	xor    ebp,ebp
  41dbf2:	cmp    rax,0x5d
  41dbf6:	je     41ddd7 <__flatcc_error_report@@Base+0x567>
  41dbfc:	cmp    rax,0xfffffffffffffc34
  41dc02:	je     41dc78 <__flatcc_error_report@@Base+0x408>
  41dc04:	nop    DWORD PTR [rax+0x0]
  41dc08:	xor    r9d,r9d
  41dc0b:	xor    r8d,r8d
  41dc0e:	xor    ecx,ecx
  41dc10:	lea    rdx,[rip+0x289ae]        # 4465c5 <fb_schema_table_missing@@Base+0x945>
  41dc17:	xor    esi,esi
  41dc19:	mov    rdi,rbx
  41dc1c:	call   41d870 <__flatcc_error_report@@Base>
  41dc21:	nop    DWORD PTR [rax+0x0]
  41dc28:	mov    rax,QWORD PTR [rbx+0x48]
  41dc2c:	cmp    QWORD PTR [rax+0x20],0x5d
  41dc31:	je     41dc9b <__flatcc_error_report@@Base+0x42b>
  41dc33:	test   ebp,ebp
  41dc35:	jne    41dcb0 <__flatcc_error_report@@Base+0x440>
  41dc37:	add    rsp,0x8
  41dc3b:	pop    rbx
  41dc3c:	pop    rbp
  41dc3d:	pop    r12
  41dc3f:	pop    r13
  41dc41:	ret    
  41dc42:	nop    WORD PTR [rax+rax*1+0x0]
  41dc48:	cmp    rax,0xfffffffffffffc27
  41dc4e:	jge    41dc78 <__flatcc_error_report@@Base+0x408>
  41dc50:	cmp    rax,0xfffffffffffffc23
  41dc56:	jg     41dd30 <__flatcc_error_report@@Base+0x4c0>
  41dc5c:	cmp    rax,0xfffffffffffffc1c
  41dc62:	jge    41dc78 <__flatcc_error_report@@Base+0x408>
  41dc64:	add    rax,0x3e7
  41dc6a:	xor    ebp,ebp
  41dc6c:	cmp    rax,0x1
  41dc70:	ja     41dc08 <__flatcc_error_report@@Base+0x398>
  41dc72:	nop    WORD PTR [rax+rax*1+0x0]
  41dc78:	mov    QWORD PTR [r13+0x0],r12
  41dc7c:	xor    ebp,ebp
  41dc7e:	mov    eax,0x8
  41dc83:	mov    WORD PTR [r13+0x10],ax
  41dc88:	mov    rdi,rbx
  41dc8b:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41dc90:	mov    rax,QWORD PTR [rbx+0x48]
  41dc94:	cmp    QWORD PTR [rax+0x20],0x5d
  41dc99:	jne    41dc33 <__flatcc_error_report@@Base+0x3c3>
  41dc9b:	mov    rdi,rbx
  41dc9e:	dec    ebp
  41dca0:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41dca5:	cmp    ebp,0xffffffff
  41dca8:	jne    41dc28 <__flatcc_error_report@@Base+0x3b8>
  41dcae:	xchg   ax,ax
  41dcb0:	xor    r9d,r9d
  41dcb3:	xor    r8d,r8d
  41dcb6:	xor    esi,esi
  41dcb8:	mov    rcx,r12
  41dcbb:	lea    rdx,[rip+0x2811e]        # 445de0 <fb_schema_table_missing@@Base+0x160>
  41dcc2:	mov    rdi,rbx
  41dcc5:	call   41d870 <__flatcc_error_report@@Base>
  41dcca:	mov    rbp,QWORD PTR [rbx+0x48]
  41dcce:	cmp    QWORD PTR [rbp+0x20],0x5d
  41dcd3:	jne    41dc37 <__flatcc_error_report@@Base+0x3c7>
  41dcd9:	mov    rdi,rbx
  41dcdc:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41dce1:	xor    r9d,r9d
  41dce4:	xor    r8d,r8d
  41dce7:	mov    rcx,r12
  41dcea:	lea    rdx,[rip+0x288eb]        # 4465dc <fb_schema_table_missing@@Base+0x95c>
  41dcf1:	mov    rsi,rbp
  41dcf4:	mov    rdi,rbx
  41dcf7:	call   41d870 <__flatcc_error_report@@Base>
  41dcfc:	mov    rax,QWORD PTR [rbx+0x48]
  41dd00:	cmp    QWORD PTR [rax+0x20],0x5d
  41dd05:	jne    41dc37 <__flatcc_error_report@@Base+0x3c7>
  41dd0b:	mov    rdi,rbx
  41dd0e:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41dd13:	mov    rax,QWORD PTR [rbx+0x48]
  41dd17:	cmp    QWORD PTR [rax+0x20],0x5d
  41dd1c:	je     41dd0b <__flatcc_error_report@@Base+0x49b>
  41dd1e:	add    rsp,0x8
  41dd22:	pop    rbx
  41dd23:	pop    rbp
  41dd24:	pop    r12
  41dd26:	pop    r13
  41dd28:	ret    
  41dd29:	nop    DWORD PTR [rax+0x0]
  41dd30:	cmp    rax,0xfffffffffffffc25
  41dd36:	je     41dc78 <__flatcc_error_report@@Base+0x408>
  41dd3c:	xor    ebp,ebp
  41dd3e:	jmp    41dc08 <__flatcc_error_report@@Base+0x398>
  41dd43:	nop    DWORD PTR [rax+rax*1+0x0]
  41dd48:	cmp    rax,0xfffffffffffffc2a
  41dd4e:	jl     41dd3c <__flatcc_error_report@@Base+0x4cc>
  41dd50:	cmp    rax,0xfffffffffffffc2f
  41dd56:	jle    41dc78 <__flatcc_error_report@@Base+0x408>
  41dd5c:	cmp    rax,0xfffffffffffffc31
  41dd62:	je     41dc78 <__flatcc_error_report@@Base+0x408>
  41dd68:	xor    ebp,ebp
  41dd6a:	jmp    41dc08 <__flatcc_error_report@@Base+0x398>
  41dd6f:	nop
  41dd70:	xor    ebp,ebp
  41dd72:	mov    rdi,rbx
  41dd75:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41dd7a:	mov    rdx,QWORD PTR [rbx+0x48]
  41dd7e:	inc    ebp
  41dd80:	mov    rax,QWORD PTR [rdx+0x20]
  41dd84:	cmp    rax,0x5b
  41dd88:	je     41dd72 <__flatcc_error_report@@Base+0x502>
  41dd8a:	cmp    ebp,0x1
  41dd8d:	je     41ddf5 <__flatcc_error_report@@Base+0x585>
  41dd8f:	lea    rdx,[rip+0x28022]        # 445db8 <fb_schema_table_missing@@Base+0x138>
  41dd96:	xor    r9d,r9d
  41dd99:	xor    r8d,r8d
  41dd9c:	xor    ecx,ecx
  41dd9e:	mov    rsi,r12
  41dda1:	mov    rdi,rbx
  41dda4:	call   41d870 <__flatcc_error_report@@Base>
  41dda9:	mov    rdx,QWORD PTR [rbx+0x48]
  41ddad:	mov    rax,QWORD PTR [rdx+0x20]
  41ddb1:	cmp    rax,0xfffffffffffffc28
  41ddb7:	jle    41de00 <__flatcc_error_report@@Base+0x590>
  41ddb9:	cmp    rax,0xfffffffffffffc32
  41ddbf:	je     41dee8 <__flatcc_error_report@@Base+0x678>
  41ddc5:	jle    41de40 <__flatcc_error_report@@Base+0x5d0>
  41ddc7:	cmp    rax,0x9
  41ddcb:	je     41ded0 <__flatcc_error_report@@Base+0x660>
  41ddd1:	cmp    rax,0x5d
  41ddd5:	jne    41de30 <__flatcc_error_report@@Base+0x5c0>
  41ddd7:	xor    r9d,r9d
  41ddda:	xor    r8d,r8d
  41dddd:	xor    ecx,ecx
  41dddf:	lea    rdx,[rip+0x287c3]        # 4465a9 <fb_schema_table_missing@@Base+0x929>
  41dde6:	xor    esi,esi
  41dde8:	mov    rdi,rbx
  41ddeb:	call   41d870 <__flatcc_error_report@@Base>
  41ddf0:	jmp    41dc28 <__flatcc_error_report@@Base+0x3b8>
  41ddf5:	cmp    rax,0xfffffffffffffc28
  41ddfb:	jg     41ddb9 <__flatcc_error_report@@Base+0x549>
  41ddfd:	nop    DWORD PTR [rax]
  41de00:	cmp    rax,0xfffffffffffffc27
  41de06:	jge    41de60 <__flatcc_error_report@@Base+0x5f0>
  41de08:	cmp    rax,0xfffffffffffffc23
  41de0e:	jg     41de80 <__flatcc_error_report@@Base+0x610>
  41de10:	cmp    rax,0xfffffffffffffc1c
  41de16:	jge    41de60 <__flatcc_error_report@@Base+0x5f0>
  41de18:	add    rax,0x3e7
  41de1e:	cmp    rax,0x1
  41de22:	ja     41dc08 <__flatcc_error_report@@Base+0x398>
  41de28:	jmp    41de60 <__flatcc_error_report@@Base+0x5f0>
  41de2a:	nop    WORD PTR [rax+rax*1+0x0]
  41de30:	cmp    rax,0xfffffffffffffc34
  41de36:	jne    41dc08 <__flatcc_error_report@@Base+0x398>
  41de3c:	jmp    41de60 <__flatcc_error_report@@Base+0x5f0>
  41de3e:	xchg   ax,ax
  41de40:	cmp    rax,0xfffffffffffffc2a
  41de46:	jl     41dc08 <__flatcc_error_report@@Base+0x398>
  41de4c:	cmp    rax,0xfffffffffffffc2f
  41de52:	jle    41de60 <__flatcc_error_report@@Base+0x5f0>
  41de54:	cmp    rax,0xfffffffffffffc31
  41de5a:	jne    41dc08 <__flatcc_error_report@@Base+0x398>
  41de60:	mov    eax,0x7
  41de65:	mov    QWORD PTR [r13+0x0],rdx
  41de69:	mov    WORD PTR [r13+0x10],ax
  41de6e:	mov    rdi,rbx
  41de71:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41de76:	jmp    41dc90 <__flatcc_error_report@@Base+0x420>
  41de7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41de80:	cmp    rax,0xfffffffffffffc25
  41de86:	jne    41dc08 <__flatcc_error_report@@Base+0x398>
  41de8c:	jmp    41de60 <__flatcc_error_report@@Base+0x5f0>
  41de8e:	xchg   ax,ax
  41de90:	call   41da20 <__flatcc_error_report@@Base+0x1b0>
  41de95:	xor    ebp,ebp
  41de97:	mov    eax,0xc
  41de9c:	mov    WORD PTR [r13+0x10],ax
  41dea1:	jmp    41dc28 <__flatcc_error_report@@Base+0x3b8>
  41dea6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41deb0:	mov    eax,0xa
  41deb5:	mov    QWORD PTR [rsi],r12
  41deb8:	mov    WORD PTR [r13+0x10],ax
  41debd:	mov    rdi,rbx
  41dec0:	xor    ebp,ebp
  41dec2:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41dec7:	jmp    41dc90 <__flatcc_error_report@@Base+0x420>
  41decc:	nop    DWORD PTR [rax+0x0]
  41ded0:	mov    rsi,r13
  41ded3:	mov    rdi,rbx
  41ded6:	call   41da20 <__flatcc_error_report@@Base+0x1b0>
  41dedb:	mov    eax,0xb
  41dee0:	jmp    41de9c <__flatcc_error_report@@Base+0x62c>
  41dee2:	nop    WORD PTR [rax+rax*1+0x0]
  41dee8:	mov    QWORD PTR [r13+0x0],rdx
  41deec:	mov    eax,0x9
  41def1:	jmp    41dc83 <__flatcc_error_report@@Base+0x413>
  41def6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df00:	push   r12
  41df02:	mov    r12,rdi
  41df05:	push   rbp
  41df06:	mov    rbp,rsi
  41df09:	push   rbx
  41df0a:	lea    rbx,[rip+0x289cf]        # 4468e0 <fb_schema_table_missing@@Base+0xc60>
  41df11:	mov    rsi,QWORD PTR [r12+0x48]
  41df16:	mov    rax,QWORD PTR [rsi+0x20]
  41df1a:	sub    rax,0x6
  41df1e:	cmp    rax,0x11
  41df22:	ja     41df30 <__flatcc_error_report@@Base+0x6c0>
  41df24:	movsxd rax,DWORD PTR [rbx+rax*4]
  41df28:	add    rax,rbx
  41df2b:	notrack jmp rax
  41df2e:	xchg   ax,ax
  41df30:	lea    rdx,[rip+0x27f21]        # 445e58 <fb_schema_table_missing@@Base+0x1d8>
  41df37:	xor    r9d,r9d
  41df3a:	xor    r8d,r8d
  41df3d:	xor    ecx,ecx
  41df3f:	mov    rdi,r12
  41df42:	call   41d870 <__flatcc_error_report@@Base>
  41df47:	mov    edx,0x1
  41df4c:	mov    WORD PTR [rbp+0x10],dx
  41df50:	mov    rsi,QWORD PTR [r12+0x48]
  41df55:	mov    rdx,QWORD PTR [rbp+0x0]
  41df59:	test   rdx,rdx
  41df5c:	je     41df6c <__flatcc_error_report@@Base+0x6fc>
  41df5e:	mov    rax,QWORD PTR [rsi]
  41df61:	sub    rax,rdx
  41df64:	mov    DWORD PTR [rbp+0x8],eax
  41df67:	mov    rsi,QWORD PTR [r12+0x48]
  41df6c:	cmp    QWORD PTR [rsi+0x20],0x16
  41df71:	jne    41e028 <__flatcc_error_report@@Base+0x7b8>
  41df77:	pop    rbx
  41df78:	pop    rbp
  41df79:	mov    rdi,r12
  41df7c:	pop    r12
  41df7e:	jmp    41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41df83:	nop    DWORD PTR [rax+rax*1+0x0]
  41df88:	mov    r8d,0x1
  41df8e:	mov    WORD PTR [rbp+0x10],r8w
  41df93:	xor    r9d,r9d
  41df96:	xor    r8d,r8d
  41df99:	xor    ecx,ecx
  41df9b:	lea    rdx,[rip+0x28651]        # 4465f3 <fb_schema_table_missing@@Base+0x973>
  41dfa2:	mov    rdi,r12
  41dfa5:	call   41d870 <__flatcc_error_report@@Base>
  41dfaa:	mov    rdi,r12
  41dfad:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41dfb2:	jmp    41df11 <__flatcc_error_report@@Base+0x6a1>
  41dfb7:	nop    WORD PTR [rax+rax*1+0x0]
  41dfc0:	cmp    QWORD PTR [rbp+0x0],0x0
  41dfc5:	jne    41dfaa <__flatcc_error_report@@Base+0x73a>
  41dfc7:	mov    rax,QWORD PTR [rsi]
  41dfca:	mov    QWORD PTR [rbp+0x0],rax
  41dfce:	jmp    41dfaa <__flatcc_error_report@@Base+0x73a>
  41dfd0:	mov    ecx,0x1
  41dfd5:	mov    WORD PTR [rbp+0x10],cx
  41dfd9:	xor    r9d,r9d
  41dfdc:	xor    r8d,r8d
  41dfdf:	xor    ecx,ecx
  41dfe1:	lea    rdx,[rip+0x27e50]        # 445e38 <fb_schema_table_missing@@Base+0x1b8>
  41dfe8:	mov    rdi,r12
  41dfeb:	call   41d870 <__flatcc_error_report@@Base>
  41dff0:	jmp    41dfaa <__flatcc_error_report@@Base+0x73a>
  41dff2:	nop    WORD PTR [rax+rax*1+0x0]
  41dff8:	mov    edi,0x1
  41dffd:	mov    WORD PTR [rbp+0x10],di
  41e001:	mov    r9d,0x1
  41e007:	lea    r8,[rip+0x28603]        # 446611 <fb_schema_table_missing@@Base+0x991>
  41e00e:	xor    ecx,ecx
  41e010:	lea    rdx,[rip+0x27df1]        # 445e08 <fb_schema_table_missing@@Base+0x188>
  41e017:	mov    rdi,r12
  41e01a:	call   41d870 <__flatcc_error_report@@Base>
  41e01f:	jmp    41dfaa <__flatcc_error_report@@Base+0x73a>
  41e021:	nop    DWORD PTR [rax+0x0]
  41e028:	mov    rdi,r12
  41e02b:	xor    r9d,r9d
  41e02e:	xor    r8d,r8d
  41e031:	xor    ecx,ecx
  41e033:	lea    rdx,[rip+0x285d9]        # 446613 <fb_schema_table_missing@@Base+0x993>
  41e03a:	call   41d870 <__flatcc_error_report@@Base>
  41e03f:	pop    rbx
  41e040:	mov    eax,0x1
  41e045:	mov    WORD PTR [rbp+0x10],ax
  41e049:	pop    rbp
  41e04a:	pop    r12
  41e04c:	ret    
  41e04d:	nop    DWORD PTR [rax]
  41e050:	push   r15
  41e052:	push   r14
  41e054:	mov    r14d,edx
  41e057:	push   r13
  41e059:	mov    r13,rcx
  41e05c:	push   r12
  41e05e:	mov    r12,rsi
  41e061:	push   rbp
  41e062:	mov    rbp,rdi
  41e065:	push   rbx
  41e066:	sub    rsp,0x28
  41e06a:	mov    rbx,QWORD PTR [rdi+0x48]
  41e06e:	mov    rax,QWORD PTR fs:0x28
  41e077:	mov    QWORD PTR [rsp+0x18],rax
  41e07c:	xor    eax,eax
  41e07e:	mov    rax,QWORD PTR [rbx+0x20]
  41e082:	cmp    rax,0x2d
  41e086:	je     41e1f0 <__flatcc_error_report@@Base+0x980>
  41e08c:	cmp    rax,0xa
  41e090:	je     41e428 <__flatcc_error_report@@Base+0xbb8>
  41e096:	jle    41e130 <__flatcc_error_report@@Base+0x8c0>
  41e09c:	cmp    rax,0xe
  41e0a0:	je     41e308 <__flatcc_error_report@@Base+0xa98>
  41e0a6:	cmp    rax,0x13
  41e0aa:	je     41e178 <__flatcc_error_report@@Base+0x908>
  41e0b0:	cmp    rax,0xb
  41e0b4:	jne    41e22e <__flatcc_error_report@@Base+0x9be>
  41e0ba:	xor    r13d,r13d
  41e0bd:	mov    r15d,0x3
  41e0c3:	mov    WORD PTR [r12+0x10],r15w
  41e0c9:	mov    rdi,QWORD PTR [rbx]
  41e0cc:	lea    rsi,[rsp+0x10]
  41e0d1:	call   405290 <strtod@plt>
  41e0d6:	mov    rax,QWORD PTR [rbx]
  41e0d9:	mov    rdx,QWORD PTR [rbx+0x8]
  41e0dd:	vmovsd QWORD PTR [r12],xmm0
  41e0e3:	add    rdx,rax
  41e0e6:	cmp    QWORD PTR [rsp+0x10],rdx
  41e0eb:	je     41e3e0 <__flatcc_error_report@@Base+0xb70>
  41e0f1:	mov    r14d,0x1
  41e0f7:	mov    WORD PTR [r12+0x10],r14w
  41e0fd:	xor    r9d,r9d
  41e100:	xor    r8d,r8d
  41e103:	xor    ecx,ecx
  41e105:	lea    rdx,[rip+0x2854d]        # 446659 <fb_schema_table_missing@@Base+0x9d9>
  41e10c:	mov    rsi,rbx
  41e10f:	mov    rdi,rbp
  41e112:	call   41d870 <__flatcc_error_report@@Base>
  41e117:	test   r13,r13
  41e11a:	je     41e168 <__flatcc_error_report@@Base+0x8f8>
  41e11c:	cmp    WORD PTR [r12+0x10],0x6
  41e123:	jne    41e168 <__flatcc_error_report@@Base+0x8f8>
  41e125:	mov    r15,rbx
  41e128:	jmp    41e5a5 <__flatcc_error_report@@Base+0xd35>
  41e12d:	nop    DWORD PTR [rax]
  41e130:	cmp    rax,0xfffffffffffffc26
  41e136:	je     41e2b0 <__flatcc_error_report@@Base+0xa40>
  41e13c:	cmp    rax,0x9
  41e140:	je     41e298 <__flatcc_error_report@@Base+0xa28>
  41e146:	cmp    rax,0xfffffffffffffc24
  41e14c:	jne    41e22e <__flatcc_error_report@@Base+0x9be>
  41e152:	mov    r10d,0x6
  41e158:	mov    BYTE PTR [r12],0x1
  41e15d:	mov    WORD PTR [r12+0x10],r10w
  41e163:	nop    DWORD PTR [rax+rax*1+0x0]
  41e168:	mov    rdi,rbp
  41e16b:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e170:	jmp    41e248 <__flatcc_error_report@@Base+0x9d8>
  41e175:	nop    DWORD PTR [rax]
  41e178:	xor    edx,edx
  41e17a:	mov    rdi,rbp
  41e17d:	mov    QWORD PTR [rsp+0x8],rdx
  41e182:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e187:	mov    r8d,0x2
  41e18d:	mov    WORD PTR [r12+0x10],r8w
  41e193:	mov    QWORD PTR [r12],0x0
  41e19b:	mov    DWORD PTR [r12+0x8],0x0
  41e1a4:	mov    rsi,r12
  41e1a7:	mov    rdi,rbp
  41e1aa:	call   41df00 <__flatcc_error_report@@Base+0x690>
  41e1af:	and    r14d,0x1
  41e1b3:	mov    rdx,QWORD PTR [rsp+0x8]
  41e1b8:	je     41e560 <__flatcc_error_report@@Base+0xcf0>
  41e1be:	test   rdx,rdx
  41e1c1:	je     41e248 <__flatcc_error_report@@Base+0x9d8>
  41e1c7:	mov    esi,0x1
  41e1cc:	mov    WORD PTR [r12+0x10],si
  41e1d2:	xor    r9d,r9d
  41e1d5:	xor    r8d,r8d
  41e1d8:	xor    ecx,ecx
  41e1da:	lea    rdx,[rip+0x27ccf]        # 445eb0 <fb_schema_table_missing@@Base+0x230>
  41e1e1:	mov    rsi,rbx
  41e1e4:	mov    rdi,rbp
  41e1e7:	call   41d870 <__flatcc_error_report@@Base>
  41e1ec:	jmp    41e248 <__flatcc_error_report@@Base+0x9d8>
  41e1ee:	xchg   ax,ax
  41e1f0:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e1f5:	mov    r15,QWORD PTR [rbp+0x48]
  41e1f9:	mov    rax,QWORD PTR [r15+0x20]
  41e1fd:	cmp    rax,0xa
  41e201:	je     41e5d0 <__flatcc_error_report@@Base+0xd60>
  41e207:	jg     41e270 <__flatcc_error_report@@Base+0xa00>
  41e209:	cmp    rax,0xfffffffffffffc26
  41e20f:	je     41e5e0 <__flatcc_error_report@@Base+0xd70>
  41e215:	cmp    rax,0x9
  41e219:	je     41e2d0 <__flatcc_error_report@@Base+0xa60>
  41e21f:	cmp    rax,0xfffffffffffffc24
  41e225:	je     41e5a0 <__flatcc_error_report@@Base+0xd30>
  41e22b:	mov    rbx,r15
  41e22e:	xor    r9d,r9d
  41e231:	xor    r8d,r8d
  41e234:	xor    ecx,ecx
  41e236:	mov    rdx,r13
  41e239:	mov    rsi,rbx
  41e23c:	mov    rdi,rbp
  41e23f:	call   41d870 <__flatcc_error_report@@Base>
  41e244:	nop    DWORD PTR [rax+0x0]
  41e248:	mov    rax,QWORD PTR [rsp+0x18]
  41e24d:	xor    rax,QWORD PTR fs:0x28
  41e256:	jne    41e640 <__flatcc_error_report@@Base+0xdd0>
  41e25c:	add    rsp,0x28
  41e260:	pop    rbx
  41e261:	pop    rbp
  41e262:	pop    r12
  41e264:	pop    r13
  41e266:	pop    r14
  41e268:	pop    r15
  41e26a:	ret    
  41e26b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e270:	cmp    rax,0xe
  41e274:	je     41e418 <__flatcc_error_report@@Base+0xba8>
  41e27a:	cmp    rax,0x13
  41e27e:	je     41e408 <__flatcc_error_report@@Base+0xb98>
  41e284:	cmp    rax,0xb
  41e288:	jne    41e22b <__flatcc_error_report@@Base+0x9bb>
  41e28a:	mov    r13,rbx
  41e28d:	mov    rbx,r15
  41e290:	jmp    41e0bd <__flatcc_error_report@@Base+0x84d>
  41e295:	nop    DWORD PTR [rax]
  41e298:	mov    rsi,r12
  41e29b:	mov    rdi,rbp
  41e29e:	call   41da20 <__flatcc_error_report@@Base+0x1b0>
  41e2a3:	mov    eax,0xd
  41e2a8:	mov    WORD PTR [r12+0x10],ax
  41e2ae:	jmp    41e248 <__flatcc_error_report@@Base+0x9d8>
  41e2b0:	mov    r9d,0x6
  41e2b6:	mov    BYTE PTR [r12],0x0
  41e2bb:	mov    WORD PTR [r12+0x10],r9w
  41e2c1:	jmp    41e168 <__flatcc_error_report@@Base+0x8f8>
  41e2c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e2d0:	mov    rsi,r12
  41e2d3:	mov    rdi,rbp
  41e2d6:	call   41da20 <__flatcc_error_report@@Base+0x1b0>
  41e2db:	mov    edx,0x1
  41e2e0:	mov    WORD PTR [r12+0x10],dx
  41e2e6:	xor    r9d,r9d
  41e2e9:	xor    r8d,r8d
  41e2ec:	xor    ecx,ecx
  41e2ee:	lea    rdx,[rip+0x28379]        # 44666e <fb_schema_table_missing@@Base+0x9ee>
  41e2f5:	mov    rsi,r15
  41e2f8:	mov    rdi,rbp
  41e2fb:	call   41d870 <__flatcc_error_report@@Base>
  41e300:	jmp    41e248 <__flatcc_error_report@@Base+0x9d8>
  41e305:	nop    DWORD PTR [rax]
  41e308:	xor    r13d,r13d
  41e30b:	mov    eax,0x5
  41e310:	mov    WORD PTR [r12+0x10],ax
  41e316:	movsxd rdx,DWORD PTR [rbx+0x8]
  41e31a:	mov    rax,QWORD PTR [rbx]
  41e31d:	lea    r8,[rax+rdx*1]
  41e321:	cmp    rax,r8
  41e324:	je     41e530 <__flatcc_error_report@@Base+0xcc0>
  41e32a:	movzx  edi,BYTE PTR [rax]
  41e32d:	xor    esi,esi
  41e32f:	cmp    dil,0x2d
  41e333:	sete   sil
  41e337:	sub    rdx,rsi
  41e33a:	cmp    rdx,0x1
  41e33e:	jle    41e530 <__flatcc_error_report@@Base+0xcc0>
  41e344:	add    rax,rsi
  41e347:	cmp    BYTE PTR [rax],0x30
  41e34a:	jne    41e530 <__flatcc_error_report@@Base+0xcc0>
  41e350:	movzx  edx,BYTE PTR [rax+0x1]
  41e354:	or     edx,0x20
  41e357:	cmp    dl,0x78
  41e35a:	jne    41e530 <__flatcc_error_report@@Base+0xcc0>
  41e360:	lea    r10,[rax+0x2]
  41e364:	mov    rdx,r8
  41e367:	sub    rdx,r10
  41e36a:	add    rax,0x12
  41e36e:	cmp    rdx,0x10
  41e372:	cmovle rax,r8
  41e376:	mov    rdx,r10
  41e379:	mov    rsi,rax
  41e37c:	xor    ecx,ecx
  41e37e:	cmp    r10,rax
  41e381:	jne    41e3a5 <__flatcc_error_report@@Base+0xb35>
  41e383:	jmp    41e530 <__flatcc_error_report@@Base+0xcc0>
  41e388:	nop    DWORD PTR [rax+rax*1+0x0]
  41e390:	shl    rcx,0x4
  41e394:	lea    rcx,[rcx+rax*1-0x30]
  41e399:	inc    rdx
  41e39c:	cmp    rdx,rsi
  41e39f:	je     41e5f0 <__flatcc_error_report@@Base+0xd80>
  41e3a5:	movzx  eax,BYTE PTR [rdx]
  41e3a8:	lea    r9d,[rax-0x30]
  41e3ac:	cmp    r9b,0x9
  41e3b0:	jbe    41e390 <__flatcc_error_report@@Base+0xb20>
  41e3b2:	mov    r9d,eax
  41e3b5:	or     r9d,0x20
  41e3b9:	lea    r11d,[r9-0x61]
  41e3bd:	cmp    r11b,0x5
  41e3c1:	ja     41e610 <__flatcc_error_report@@Base+0xda0>
  41e3c7:	shl    rcx,0x4
  41e3cb:	movzx  r9d,r9b
  41e3cf:	lea    rcx,[rcx+r9*1-0x57]
  41e3d4:	jmp    41e399 <__flatcc_error_report@@Base+0xb29>
  41e3d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e3e0:	cmp    BYTE PTR [rax],0x2e
  41e3e3:	je     41e570 <__flatcc_error_report@@Base+0xd00>
  41e3e9:	test   r13,r13
  41e3ec:	je     41e168 <__flatcc_error_report@@Base+0x8f8>
  41e3f2:	vxorpd xmm0,xmm0,XMMWORD PTR [rip+0x28866]        # 446c60 <fb_schema_table_missing@@Base+0xfe0>
  41e3fa:	vmovsd QWORD PTR [r12],xmm0
  41e400:	jmp    41e11c <__flatcc_error_report@@Base+0x8ac>
  41e405:	nop    DWORD PTR [rax]
  41e408:	mov    rdx,rbx
  41e40b:	mov    rbx,r15
  41e40e:	jmp    41e17a <__flatcc_error_report@@Base+0x90a>
  41e413:	nop    DWORD PTR [rax+rax*1+0x0]
  41e418:	mov    r13,rbx
  41e41b:	mov    rbx,r15
  41e41e:	jmp    41e30b <__flatcc_error_report@@Base+0xa9b>
  41e423:	nop    DWORD PTR [rax+rax*1+0x0]
  41e428:	xor    r13d,r13d
  41e42b:	mov    r8,QWORD PTR [rbx]
  41e42e:	movsxd rsi,DWORD PTR [rbx+0x8]
  41e432:	mov    eax,0x5
  41e437:	add    rsi,r8
  41e43a:	mov    WORD PTR [r12+0x10],ax
  41e440:	cmp    r8,rsi
  41e443:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e445:	movzx  r9d,BYTE PTR [r8]
  41e449:	xor    edi,edi
  41e44b:	cmp    r9b,0x2d
  41e44f:	sete   dil
  41e453:	add    rdi,r8
  41e456:	cmp    rsi,rdi
  41e459:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e45b:	movsx  rdx,BYTE PTR [rdi]
  41e45f:	lea    eax,[rdx-0x30]
  41e462:	cmp    al,0x9
  41e464:	ja     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e466:	sub    rdx,0x30
  41e46a:	mov    rcx,rdi
  41e46d:	jmp    41e481 <__flatcc_error_report@@Base+0xc11>
  41e46f:	nop
  41e470:	lea    r10,[rdx+rdx*4]
  41e474:	lea    rax,[rax+r10*2-0x30]
  41e479:	cmp    rax,rdx
  41e47c:	jb     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e47e:	mov    rdx,rax
  41e481:	inc    rcx
  41e484:	cmp    rsi,rcx
  41e487:	je     41e4e8 <__flatcc_error_report@@Base+0xc78>
  41e489:	movsx  rax,BYTE PTR [rcx]
  41e48d:	lea    r10d,[rax-0x30]
  41e491:	cmp    r10b,0x9
  41e495:	jbe    41e470 <__flatcc_error_report@@Base+0xc00>
  41e497:	cmp    r8,rcx
  41e49a:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e49c:	cmp    rdi,rcx
  41e49f:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e4a1:	cmp    al,0x50
  41e4a3:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e4a5:	jg     41e4e0 <__flatcc_error_report@@Base+0xc70>
  41e4a7:	cmp    al,0x2e
  41e4a9:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e4ab:	cmp    al,0x45
  41e4ad:	jne    41e4e8 <__flatcc_error_report@@Base+0xc78>
  41e4af:	nop
  41e4b0:	mov    eax,0x1
  41e4b5:	mov    WORD PTR [r12+0x10],ax
  41e4bb:	xor    r9d,r9d
  41e4be:	xor    r8d,r8d
  41e4c1:	xor    ecx,ecx
  41e4c3:	lea    rdx,[rip+0x28178]        # 446642 <fb_schema_table_missing@@Base+0x9c2>
  41e4ca:	mov    rsi,rbx
  41e4cd:	mov    rdi,rbp
  41e4d0:	call   41d870 <__flatcc_error_report@@Base>
  41e4d5:	jmp    41e4f2 <__flatcc_error_report@@Base+0xc82>
  41e4d7:	nop    WORD PTR [rax+rax*1+0x0]
  41e4e0:	cmp    al,0x65
  41e4e2:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e4e4:	cmp    al,0x70
  41e4e6:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e4e8:	mov    QWORD PTR [r12],rdx
  41e4ec:	cmp    r9b,0x2d
  41e4f0:	je     41e4b0 <__flatcc_error_report@@Base+0xc40>
  41e4f2:	test   r13,r13
  41e4f5:	je     41e168 <__flatcc_error_report@@Base+0x8f8>
  41e4fb:	mov    eax,0x4
  41e500:	neg    QWORD PTR [r12]
  41e504:	mov    WORD PTR [r12+0x10],ax
  41e50a:	jmp    41e168 <__flatcc_error_report@@Base+0x8f8>
  41e50f:	movzx  eax,BYTE PTR [rdx]
  41e512:	lea    edx,[rax-0x30]
  41e515:	cmp    dl,0x9
  41e518:	jbe    41e530 <__flatcc_error_report@@Base+0xcc0>
  41e51a:	or     eax,0x20
  41e51d:	lea    edx,[rax-0x61]
  41e520:	cmp    dl,0x5
  41e523:	ja     41e627 <__flatcc_error_report@@Base+0xdb7>
  41e529:	nop    DWORD PTR [rax+0x0]
  41e530:	mov    eax,0x1
  41e535:	mov    WORD PTR [r12+0x10],ax
  41e53b:	xor    r9d,r9d
  41e53e:	xor    r8d,r8d
  41e541:	xor    ecx,ecx
  41e543:	lea    rdx,[rip+0x280dd]        # 446627 <fb_schema_table_missing@@Base+0x9a7>
  41e54a:	mov    rsi,rbx
  41e54d:	mov    rdi,rbp
  41e550:	call   41d870 <__flatcc_error_report@@Base>
  41e555:	jmp    41e4f2 <__flatcc_error_report@@Base+0xc82>
  41e557:	nop    WORD PTR [rax+rax*1+0x0]
  41e560:	mov    edi,0x1
  41e565:	mov    WORD PTR [r12+0x10],di
  41e56b:	jmp    41e22e <__flatcc_error_report@@Base+0x9be>
  41e570:	mov    r11d,0x1
  41e576:	mov    WORD PTR [r12+0x10],r11w
  41e57c:	xor    r9d,r9d
  41e57f:	xor    r8d,r8d
  41e582:	xor    ecx,ecx
  41e584:	lea    rdx,[rip+0x278fd]        # 445e88 <fb_schema_table_missing@@Base+0x208>
  41e58b:	mov    rsi,rbx
  41e58e:	mov    rdi,rbp
  41e591:	call   41d870 <__flatcc_error_report@@Base>
  41e596:	jmp    41e117 <__flatcc_error_report@@Base+0x8a7>
  41e59b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e5a0:	mov    BYTE PTR [r12],0x1
  41e5a5:	mov    ecx,0x1
  41e5aa:	mov    WORD PTR [r12+0x10],cx
  41e5b0:	xor    r9d,r9d
  41e5b3:	xor    r8d,r8d
  41e5b6:	xor    ecx,ecx
  41e5b8:	lea    rdx,[rip+0x27919]        # 445ed8 <fb_schema_table_missing@@Base+0x258>
  41e5bf:	mov    rsi,r15
  41e5c2:	mov    rdi,rbp
  41e5c5:	call   41d870 <__flatcc_error_report@@Base>
  41e5ca:	jmp    41e168 <__flatcc_error_report@@Base+0x8f8>
  41e5cf:	nop
  41e5d0:	mov    r13,rbx
  41e5d3:	mov    rbx,r15
  41e5d6:	jmp    41e42b <__flatcc_error_report@@Base+0xbbb>
  41e5db:	nop    DWORD PTR [rax+rax*1+0x0]
  41e5e0:	mov    BYTE PTR [r12],0x0
  41e5e5:	jmp    41e5a5 <__flatcc_error_report@@Base+0xd35>
  41e5e7:	nop    WORD PTR [rax+rax*1+0x0]
  41e5f0:	cmp    r8,rdx
  41e5f3:	jne    41e50f <__flatcc_error_report@@Base+0xc9f>
  41e5f9:	mov    QWORD PTR [r12],rcx
  41e5fd:	cmp    dil,0x2d
  41e601:	jne    41e4f2 <__flatcc_error_report@@Base+0xc82>
  41e607:	jmp    41e530 <__flatcc_error_report@@Base+0xcc0>
  41e60c:	nop    DWORD PTR [rax+0x0]
  41e610:	cmp    r10,rdx
  41e613:	je     41e530 <__flatcc_error_report@@Base+0xcc0>
  41e619:	cmp    r8,rdx
  41e61c:	je     41e5f9 <__flatcc_error_report@@Base+0xd89>
  41e61e:	cmp    rsi,rdx
  41e621:	je     41e512 <__flatcc_error_report@@Base+0xca2>
  41e627:	cmp    al,0x50
  41e629:	je     41e530 <__flatcc_error_report@@Base+0xcc0>
  41e62f:	cmp    al,0x70
  41e631:	je     41e530 <__flatcc_error_report@@Base+0xcc0>
  41e637:	cmp    al,0x2e
  41e639:	jne    41e5f9 <__flatcc_error_report@@Base+0xd89>
  41e63b:	jmp    41e530 <__flatcc_error_report@@Base+0xcc0>
  41e640:	call   4052c0 <__stack_chk_fail@plt>
  41e645:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e650:	push   r15
  41e652:	push   r14
  41e654:	push   r13
  41e656:	push   r12
  41e658:	push   rbp
  41e659:	push   rbx
  41e65a:	xor    ebx,ebx
  41e65c:	sub    rsp,0x18
  41e660:	mov    r12,QWORD PTR [rdi+0x48]
  41e664:	cmp    QWORD PTR [r12+0x20],0x28
  41e66a:	je     41e680 <__flatcc_error_report@@Base+0xe10>
  41e66c:	add    rsp,0x18
  41e670:	mov    rax,rbx
  41e673:	pop    rbx
  41e674:	pop    rbp
  41e675:	pop    r12
  41e677:	pop    r13
  41e679:	pop    r14
  41e67b:	pop    r15
  41e67d:	ret    
  41e67e:	xchg   ax,ax
  41e680:	mov    rbp,rdi
  41e683:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e688:	mov    r15,QWORD PTR [rbp+0x48]
  41e68c:	cmp    QWORD PTR [r15+0x20],0x9
  41e691:	je     41e6b0 <__flatcc_error_report@@Base+0xe40>
  41e693:	mov    rcx,r12
  41e696:	lea    rdx,[rip+0x27863]        # 445f00 <fb_schema_table_missing@@Base+0x280>
  41e69d:	mov    esi,0x29
  41e6a2:	mov    rdi,rbp
  41e6a5:	call   41db60 <__flatcc_error_report@@Base+0x2f0>
  41e6aa:	jmp    41e66c <__flatcc_error_report@@Base+0xdfc>
  41e6ac:	nop    DWORD PTR [rax+0x0]
  41e6b0:	mov    rdi,rbp
  41e6b3:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e6b8:	lea    r14,[rip+0x27861]        # 445f20 <fb_schema_table_missing@@Base+0x2a0>
  41e6bf:	xor    edx,edx
  41e6c1:	mov    r13,QWORD PTR [rbp+0x60]
  41e6c5:	lea    rax,[r13+0x30]
  41e6c9:	cmp    rax,QWORD PTR [rbp+0x50]
  41e6cd:	ja     41e788 <__flatcc_error_report@@Base+0xf18>
  41e6d3:	mov    QWORD PTR [rbp+0x60],rax
  41e6d7:	mov    rax,QWORD PTR [rbp+0x48]
  41e6db:	mov    rbx,r13
  41e6de:	cmp    QWORD PTR [rax+0x20],0x3a
  41e6e3:	mov    QWORD PTR [r13+0x0],rdx
  41e6e7:	mov    QWORD PTR [r13+0x8],r15
  41e6eb:	jne    41e709 <__flatcc_error_report@@Base+0xe99>
  41e6ed:	mov    rdi,rbp
  41e6f0:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e6f5:	lea    rsi,[r13+0x10]
  41e6f9:	mov    rcx,r14
  41e6fc:	mov    edx,0x1
  41e701:	mov    rdi,rbp
  41e704:	call   41e050 <__flatcc_error_report@@Base+0x7e0>
  41e709:	cmp    DWORD PTR [rbp+0xd0],0x9
  41e710:	jg     41e66c <__flatcc_error_report@@Base+0xdfc>
  41e716:	mov    rax,QWORD PTR [rbp+0x48]
  41e71a:	cmp    QWORD PTR [rax+0x20],0x2c
  41e71f:	je     41e760 <__flatcc_error_report@@Base+0xef0>
  41e721:	lea    rdx,[rip+0x277d8]        # 445f00 <fb_schema_table_missing@@Base+0x280>
  41e728:	mov    rcx,r12
  41e72b:	mov    esi,0x29
  41e730:	mov    rdi,rbp
  41e733:	call   41db60 <__flatcc_error_report@@Base+0x2f0>
  41e738:	xor    edx,edx
  41e73a:	jmp    41e743 <__flatcc_error_report@@Base+0xed3>
  41e73c:	nop    DWORD PTR [rax+0x0]
  41e740:	mov    rbx,rax
  41e743:	mov    rax,QWORD PTR [rbx]
  41e746:	mov    QWORD PTR [rbx],rdx
  41e749:	mov    rdx,rbx
  41e74c:	test   rax,rax
  41e74f:	jne    41e740 <__flatcc_error_report@@Base+0xed0>
  41e751:	jmp    41e66c <__flatcc_error_report@@Base+0xdfc>
  41e756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e760:	mov    rdi,rbp
  41e763:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e768:	mov    r15,QWORD PTR [rbp+0x48]
  41e76c:	cmp    QWORD PTR [r15+0x20],0x9
  41e771:	jne    41e7d0 <__flatcc_error_report@@Base+0xf60>
  41e773:	mov    rdi,rbp
  41e776:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e77b:	mov    rdx,r13
  41e77e:	jmp    41e6c1 <__flatcc_error_report@@Base+0xe51>
  41e783:	nop    DWORD PTR [rax+rax*1+0x0]
  41e788:	mov    esi,0x1
  41e78d:	mov    edi,0x10000
  41e792:	mov    QWORD PTR [rsp+0x8],rdx
  41e797:	call   405320 <calloc@plt>
  41e79c:	test   rax,rax
  41e79f:	mov    rdx,QWORD PTR [rsp+0x8]
  41e7a4:	je     41e7ef <__flatcc_error_report@@Base+0xf7f>
  41e7a6:	mov    rcx,QWORD PTR [rbp+0x58]
  41e7aa:	lea    r13,[rax+0x10]
  41e7ae:	mov    QWORD PTR [rax],rcx
  41e7b1:	lea    rcx,[rax+0x10000]
  41e7b8:	mov    QWORD PTR [rbp+0x58],rax
  41e7bc:	mov    QWORD PTR [rbp+0x50],rcx
  41e7c0:	add    rax,0x40
  41e7c4:	jmp    41e6d3 <__flatcc_error_report@@Base+0xe63>
  41e7c9:	nop    DWORD PTR [rax+0x0]
  41e7d0:	xor    r9d,r9d
  41e7d3:	xor    r8d,r8d
  41e7d6:	xor    ecx,ecx
  41e7d8:	lea    rdx,[rip+0x27761]        # 445f40 <fb_schema_table_missing@@Base+0x2c0>
  41e7df:	mov    rsi,r15
  41e7e2:	mov    rdi,rbp
  41e7e5:	call   41d870 <__flatcc_error_report@@Base>
  41e7ea:	jmp    41e721 <__flatcc_error_report@@Base+0xeb1>
  41e7ef:	call   41d420 <__flatcc_fb_default_error_out@@Base+0x30>
  41e7f4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41e7ff:	nop
  41e800:	push   r15
  41e802:	push   r14
  41e804:	push   r13
  41e806:	push   r12
  41e808:	push   rbp
  41e809:	push   rbx
  41e80a:	mov    rbx,rdi
  41e80d:	sub    rsp,0x8
  41e811:	mov    rbp,QWORD PTR [rdi+0x48]
  41e815:	cmp    QWORD PTR [rbp+0x20],0x9
  41e81a:	jne    41ec10 <__flatcc_error_report@@Base+0x13a0>
  41e820:	mov    r12,rsi
  41e823:	mov    r13,rdx
  41e826:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e82b:	mov    QWORD PTR [r12+0x8],rbp
  41e830:	mov    rdi,rbx
  41e833:	call   41e650 <__flatcc_error_report@@Base+0xde0>
  41e838:	mov    rsi,QWORD PTR [rbx+0x48]
  41e83c:	mov    QWORD PTR [r12+0x38],rax
  41e841:	cmp    QWORD PTR [rsi+0x20],0x7b
  41e846:	jne    41e9c0 <__flatcc_error_report@@Base+0x1150>
  41e84c:	mov    rdi,rbx
  41e84f:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e854:	mov    r15,QWORD PTR [rbx+0x48]
  41e858:	mov    r14,QWORD PTR [r15+0x20]
  41e85c:	cmp    r14,0x7d
  41e860:	je     41e97e <__flatcc_error_report@@Base+0x110e>
  41e866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e870:	mov    rbp,QWORD PTR [rbx+0x60]
  41e874:	mov    rcx,QWORD PTR [rbx+0x50]
  41e878:	lea    rax,[rbp+0xb0]
  41e87f:	cmp    r13,0xfffffffffffffc39
  41e886:	je     41e9f8 <__flatcc_error_report@@Base+0x1188>
  41e88c:	cmp    rcx,rax
  41e88f:	jb     41eb30 <__flatcc_error_report@@Base+0x12c0>
  41e895:	mov    QWORD PTR [rbx+0x60],rax
  41e899:	mov    rax,QWORD PTR [r12+0x28]
  41e89e:	mov    QWORD PTR [rbp+0x0],rax
  41e8a2:	mov    eax,0x5
  41e8a7:	mov    WORD PTR [rbp+0x10],ax
  41e8ab:	mov    QWORD PTR [r12+0x28],rbp
  41e8b0:	mov    rax,QWORD PTR [rbx+0x40]
  41e8b4:	test   rax,rax
  41e8b7:	je     41e8d1 <__flatcc_error_report@@Base+0x1061>
  41e8b9:	xor    esi,esi
  41e8bb:	jmp    41e8c3 <__flatcc_error_report@@Base+0x1053>
  41e8bd:	nop    DWORD PTR [rax]
  41e8c0:	mov    rax,rcx
  41e8c3:	mov    rcx,QWORD PTR [rax]
  41e8c6:	mov    QWORD PTR [rax],rsi
  41e8c9:	mov    rsi,rax
  41e8cc:	test   rcx,rcx
  41e8cf:	jne    41e8c0 <__flatcc_error_report@@Base+0x1050>
  41e8d1:	mov    QWORD PTR [rbp+0x68],rax
  41e8d5:	mov    QWORD PTR [rbx+0x40],0x0
  41e8dd:	cmp    r14,0x9
  41e8e1:	jne    41eb00 <__flatcc_error_report@@Base+0x1290>
  41e8e7:	mov    rdi,rbx
  41e8ea:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e8ef:	mov    rsi,QWORD PTR [rbx+0x48]
  41e8f3:	mov    QWORD PTR [rbp+0x8],r15
  41e8f7:	cmp    QWORD PTR [rsi+0x20],0x3a
  41e8fc:	jne    41eb70 <__flatcc_error_report@@Base+0x1300>
  41e902:	mov    rdi,rbx
  41e905:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e90a:	lea    rsi,[rbp+0x18]
  41e90e:	mov    rdi,rbx
  41e911:	call   41dba0 <__flatcc_error_report@@Base+0x330>
  41e916:	mov    rax,QWORD PTR [rbx+0x48]
  41e91a:	cmp    QWORD PTR [rax+0x20],0x3d
  41e91f:	jne    41e941 <__flatcc_error_report@@Base+0x10d1>
  41e921:	mov    rdi,rbx
  41e924:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e929:	lea    rsi,[rbp+0x48]
  41e92d:	lea    rcx,[rip+0x2776c]        # 4460a0 <fb_schema_table_missing@@Base+0x420>
  41e934:	mov    edx,0x2
  41e939:	mov    rdi,rbx
  41e93c:	call   41e050 <__flatcc_error_report@@Base+0x7e0>
  41e941:	mov    rdi,rbx
  41e944:	call   41e650 <__flatcc_error_report@@Base+0xde0>
  41e949:	mov    QWORD PTR [rbp+0x60],rax
  41e94d:	xor    ecx,ecx
  41e94f:	lea    rdx,[rip+0x27772]        # 4460c8 <fb_schema_table_missing@@Base+0x448>
  41e956:	mov    esi,0x3b
  41e95b:	mov    rdi,rbx
  41e95e:	call   41db60 <__flatcc_error_report@@Base+0x2f0>
  41e963:	cmp    DWORD PTR [rbx+0xd0],0x9
  41e96a:	jg     41e9d7 <__flatcc_error_report@@Base+0x1167>
  41e96c:	mov    r15,QWORD PTR [rbx+0x48]
  41e970:	mov    r14,QWORD PTR [r15+0x20]
  41e974:	cmp    r14,0x7d
  41e978:	jne    41e870 <__flatcc_error_report@@Base+0x1000>
  41e97e:	mov    rdi,rbx
  41e981:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41e986:	mov    rax,QWORD PTR [r12+0x28]
  41e98b:	test   rax,rax
  41e98e:	je     41e9a9 <__flatcc_error_report@@Base+0x1139>
  41e990:	xor    ecx,ecx
  41e992:	jmp    41e99b <__flatcc_error_report@@Base+0x112b>
  41e994:	nop    DWORD PTR [rax+0x0]
  41e998:	mov    rax,rdx
  41e99b:	mov    rdx,QWORD PTR [rax]
  41e99e:	mov    QWORD PTR [rax],rcx
  41e9a1:	mov    rcx,rax
  41e9a4:	test   rdx,rdx
  41e9a7:	jne    41e998 <__flatcc_error_report@@Base+0x1128>
  41e9a9:	mov    QWORD PTR [r12+0x28],rax
  41e9ae:	add    rsp,0x8
  41e9b2:	pop    rbx
  41e9b3:	pop    rbp
  41e9b4:	pop    r12
  41e9b6:	pop    r13
  41e9b8:	pop    r14
  41e9ba:	pop    r15
  41e9bc:	ret    
  41e9bd:	nop    DWORD PTR [rax]
  41e9c0:	xor    r9d,r9d
  41e9c3:	xor    r8d,r8d
  41e9c6:	xor    ecx,ecx
  41e9c8:	lea    rdx,[rip+0x27cbd]        # 44668c <fb_schema_table_missing@@Base+0xa0c>
  41e9cf:	mov    rdi,rbx
  41e9d2:	call   41d870 <__flatcc_error_report@@Base>
  41e9d7:	add    rsp,0x8
  41e9db:	mov    rdi,rbx
  41e9de:	pop    rbx
  41e9df:	pop    rbp
  41e9e0:	pop    r12
  41e9e2:	pop    r13
  41e9e4:	pop    r14
  41e9e6:	mov    esi,0x7d
  41e9eb:	pop    r15
  41e9ed:	jmp    41d690 <__flatcc_fb_default_error_out@@Base+0x2a0>
  41e9f2:	nop    WORD PTR [rax+rax*1+0x0]
  41e9f8:	cmp    rcx,rax
  41e9fb:	jb     41ebb0 <__flatcc_error_report@@Base+0x1340>
  41ea01:	mov    QWORD PTR [rbx+0x60],rax
  41ea05:	mov    rax,QWORD PTR [r12+0x28]
  41ea0a:	mov    edx,0x5
  41ea0f:	mov    QWORD PTR [rbp+0x0],rax
  41ea13:	mov    WORD PTR [rbp+0x10],dx
  41ea17:	mov    QWORD PTR [r12+0x28],rbp
  41ea1c:	mov    rax,QWORD PTR [rbx+0x40]
  41ea20:	test   rax,rax
  41ea23:	je     41ea41 <__flatcc_error_report@@Base+0x11d1>
  41ea25:	xor    esi,esi
  41ea27:	jmp    41ea33 <__flatcc_error_report@@Base+0x11c3>
  41ea29:	nop    DWORD PTR [rax+0x0]
  41ea30:	mov    rax,rcx
  41ea33:	mov    rcx,QWORD PTR [rax]
  41ea36:	mov    QWORD PTR [rax],rsi
  41ea39:	mov    rsi,rax
  41ea3c:	test   rcx,rcx
  41ea3f:	jne    41ea30 <__flatcc_error_report@@Base+0x11c0>
  41ea41:	mov    QWORD PTR [rbp+0x68],rax
  41ea45:	mov    QWORD PTR [rbx+0x40],0x0
  41ea4d:	cmp    r14,0x9
  41ea51:	jne    41eb90 <__flatcc_error_report@@Base+0x1320>
  41ea57:	mov    rdi,rbx
  41ea5a:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41ea5f:	mov    rsi,QWORD PTR [rbx+0x48]
  41ea63:	mov    QWORD PTR [rbp+0x8],r15
  41ea67:	cmp    QWORD PTR [rsi+0x20],0x28
  41ea6c:	jne    41ebf0 <__flatcc_error_report@@Base+0x1380>
  41ea72:	mov    rdi,rbx
  41ea75:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41ea7a:	lea    rsi,[rbp+0x30]
  41ea7e:	mov    rdi,rbx
  41ea81:	call   41dba0 <__flatcc_error_report@@Base+0x330>
  41ea86:	mov    rsi,QWORD PTR [rbx+0x48]
  41ea8a:	cmp    QWORD PTR [rsi+0x20],0x29
  41ea8f:	jne    41ec30 <__flatcc_error_report@@Base+0x13c0>
  41ea95:	mov    rdi,rbx
  41ea98:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41ea9d:	mov    rsi,QWORD PTR [rbx+0x48]
  41eaa1:	cmp    QWORD PTR [rsi+0x20],0x3a
  41eaa6:	jne    41ec50 <__flatcc_error_report@@Base+0x13e0>
  41eaac:	mov    rdi,rbx
  41eaaf:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41eab4:	lea    rsi,[rbp+0x18]
  41eab8:	mov    rdi,rbx
  41eabb:	call   41dba0 <__flatcc_error_report@@Base+0x330>
  41eac0:	mov    r15,QWORD PTR [rbx+0x48]
  41eac4:	cmp    QWORD PTR [r15+0x20],0x3d
  41eac9:	je     41ec70 <__flatcc_error_report@@Base+0x1400>
  41eacf:	mov    rdi,rbx
  41ead2:	call   41e650 <__flatcc_error_report@@Base+0xde0>
  41ead7:	mov    QWORD PTR [rbp+0x60],rax
  41eadb:	xor    ecx,ecx
  41eadd:	lea    rdx,[rip+0x2753c]        # 446020 <fb_schema_table_missing@@Base+0x3a0>
  41eae4:	mov    esi,0x3b
  41eae9:	mov    rdi,rbx
  41eaec:	call   41db60 <__flatcc_error_report@@Base+0x2f0>
  41eaf1:	jmp    41e963 <__flatcc_error_report@@Base+0x10f3>
  41eaf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb00:	xor    r9d,r9d
  41eb03:	xor    r8d,r8d
  41eb06:	xor    ecx,ecx
  41eb08:	lea    rdx,[rip+0x27bb1]        # 4466c0 <fb_schema_table_missing@@Base+0xa40>
  41eb0f:	mov    rsi,r15
  41eb12:	mov    rdi,rbx
  41eb15:	call   41d870 <__flatcc_error_report@@Base>
  41eb1a:	mov    rdi,rbx
  41eb1d:	call   41d630 <__flatcc_fb_default_error_out@@Base+0x240>
  41eb22:	jmp    41e963 <__flatcc_error_report@@Base+0x10f3>
  41eb27:	nop    WORD PTR [rax+rax*1+0x0]
  41eb30:	mov    esi,0x1
  41eb35:	mov    edi,0x10000
  41eb3a:	call   405320 <calloc@plt>
  41eb3f:	test   rax,rax
  41eb42:	je     41ec97 <__flatcc_error_report@@Base+0x1427>
  41eb48:	mov    rcx,QWORD PTR [rbx+0x58]
  41eb4c:	lea    rbp,[rax+0x10]
  41eb50:	mov    QWORD PTR [rax],rcx
  41eb53:	lea    rcx,[rax+0x10000]
  41eb5a:	mov    QWORD PTR [rbx+0x58],rax
  41eb5e:	mov    QWORD PTR [rbx+0x50],rcx
  41eb62:	add    rax,0xc0
  41eb68:	jmp    41e895 <__flatcc_error_report@@Base+0x1025>
  41eb6d:	nop    DWORD PTR [rax]
  41eb70:	xor    r9d,r9d
  41eb73:	xor    r8d,r8d
  41eb76:	xor    ecx,ecx
  41eb78:	lea    rdx,[rip+0x274f1]        # 446070 <fb_schema_table_missing@@Base+0x3f0>
  41eb7f:	mov    rdi,rbx
  41eb82:	call   41d870 <__flatcc_error_report@@Base>
  41eb87:	jmp    41eb1a <__flatcc_error_report@@Base+0x12aa>
  41eb89:	nop    DWORD PTR [rax+0x0]
  41eb90:	xor    r9d,r9d
  41eb93:	xor    r8d,r8d
  41eb96:	xor    ecx,ecx
  41eb98:	lea    rdx,[rip+0x27b06]        # 4466a5 <fb_schema_table_missing@@Base+0xa25>
  41eb9f:	mov    rsi,r15
  41eba2:	mov    rdi,rbx
  41eba5:	call   41d870 <__flatcc_error_report@@Base>
  41ebaa:	jmp    41eb1a <__flatcc_error_report@@Base+0x12aa>
  41ebaf:	nop
  41ebb0:	mov    esi,0x1
  41ebb5:	mov    edi,0x10000
  41ebba:	call   405320 <calloc@plt>
  41ebbf:	test   rax,rax
  41ebc2:	je     41ec97 <__flatcc_error_report@@Base+0x1427>
  41ebc8:	mov    rcx,QWORD PTR [rbx+0x58]
  41ebcc:	lea    rbp,[rax+0x10]
  41ebd0:	mov    QWORD PTR [rax],rcx
  41ebd3:	lea    rcx,[rax+0x10000]
  41ebda:	mov    QWORD PTR [rbx+0x58],rax
  41ebde:	mov    QWORD PTR [rbx+0x50],rcx
  41ebe2:	add    rax,0xc0
  41ebe8:	jmp    41ea01 <__flatcc_error_report@@Base+0x1191>
  41ebed:	nop    DWORD PTR [rax]
  41ebf0:	xor    r9d,r9d
  41ebf3:	xor    r8d,r8d
  41ebf6:	xor    ecx,ecx
  41ebf8:	lea    rdx,[rip+0x27399]        # 445f98 <fb_schema_table_missing@@Base+0x318>
  41ebff:	mov    rdi,rbx
  41ec02:	call   41d870 <__flatcc_error_report@@Base>
  41ec07:	jmp    41eb1a <__flatcc_error_report@@Base+0x12aa>
  41ec0c:	nop    DWORD PTR [rax+0x0]
  41ec10:	xor    r9d,r9d
  41ec13:	xor    r8d,r8d
  41ec16:	xor    ecx,ecx
  41ec18:	lea    rdx,[rip+0x27351]        # 445f70 <fb_schema_table_missing@@Base+0x2f0>
  41ec1f:	mov    rsi,rbp
  41ec22:	call   41d870 <__flatcc_error_report@@Base>
  41ec27:	jmp    41e9d7 <__flatcc_error_report@@Base+0x1167>
  41ec2c:	nop    DWORD PTR [rax+0x0]
  41ec30:	xor    r9d,r9d
  41ec33:	xor    r8d,r8d
  41ec36:	xor    ecx,ecx
  41ec38:	lea    rdx,[rip+0x27381]        # 445fc0 <fb_schema_table_missing@@Base+0x340>
  41ec3f:	mov    rdi,rbx
  41ec42:	call   41d870 <__flatcc_error_report@@Base>
  41ec47:	jmp    41eb1a <__flatcc_error_report@@Base+0x12aa>
  41ec4c:	nop    DWORD PTR [rax+0x0]
  41ec50:	xor    r9d,r9d
  41ec53:	xor    r8d,r8d
  41ec56:	xor    ecx,ecx
  41ec58:	lea    rdx,[rip+0x27389]        # 445fe8 <fb_schema_table_missing@@Base+0x368>
  41ec5f:	mov    rdi,rbx
  41ec62:	call   41d870 <__flatcc_error_report@@Base>
  41ec67:	jmp    41eb1a <__flatcc_error_report@@Base+0x12aa>
  41ec6c:	nop    DWORD PTR [rax+0x0]
  41ec70:	mov    rdi,rbx
  41ec73:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41ec78:	xor    r9d,r9d
  41ec7b:	xor    r8d,r8d
  41ec7e:	xor    ecx,ecx
  41ec80:	lea    rdx,[rip+0x273c1]        # 446048 <fb_schema_table_missing@@Base+0x3c8>
  41ec87:	mov    rsi,r15
  41ec8a:	mov    rdi,rbx
  41ec8d:	call   41d870 <__flatcc_error_report@@Base>
  41ec92:	jmp    41eb1a <__flatcc_error_report@@Base+0x12aa>
  41ec97:	call   41d420 <__flatcc_fb_default_error_out@@Base+0x30>
  41ec9c:	nop    DWORD PTR [rax+0x0]

000000000041eca0 <error_ref_sym@@Base>:
  41eca0:	endbr64 
  41eca4:	push   r15
  41eca6:	push   r14
  41eca8:	push   r13
  41ecaa:	push   r12
  41ecac:	mov    r12,rcx
  41ecaf:	push   rbp
  41ecb0:	push   rbx
  41ecb1:	sub    rsp,0x68
  41ecb5:	mov    QWORD PTR [rsp+0x8],rdi
  41ecba:	mov    QWORD PTR [rsp+0x10],rsi
  41ecbf:	mov    QWORD PTR [rsp+0x18],rdx
  41ecc4:	mov    rdx,QWORD PTR fs:0x28
  41eccd:	mov    QWORD PTR [rsp+0x58],rdx
  41ecd2:	xor    edx,edx
  41ecd4:	test   rsi,rsi
  41ecd7:	je     41edb0 <error_ref_sym@@Base+0x110>
  41ecdd:	mov    r13,rsi
  41ece0:	xor    r15d,r15d
  41ece3:	mov    r14d,0x32
  41ece9:	lea    rbp,[rsp+0x20]
  41ecee:	xchg   ax,ax
  41ecf0:	mov    rax,QWORD PTR [r13+0x8]
  41ecf4:	movsxd rdi,r15d
  41ecf7:	mov    rbx,QWORD PTR [rax+0x8]
  41ecfb:	mov    rsi,QWORD PTR [rax]
  41ecfe:	cmp    ebx,r14d
  41ed01:	cmovg  ebx,r14d
  41ed05:	add    rdi,rbp
  41ed08:	movsxd rdx,ebx
  41ed0b:	call   405350 <memcpy@plt>
  41ed10:	lea    r9d,[rbx+r15*1]
  41ed14:	movsxd rax,r9d
  41ed17:	mov    BYTE PTR [rsp+rax*1+0x20],0x2e
  41ed1c:	mov    ecx,r14d
  41ed1f:	sub    ecx,ebx
  41ed21:	mov    r13,QWORD PTR [r13+0x0]
  41ed25:	lea    r14d,[rcx-0x1]
  41ed29:	lea    r15d,[r9+0x1]
  41ed2d:	test   r13,r13
  41ed30:	je     41ed37 <error_ref_sym@@Base+0x97>
  41ed32:	test   r14d,r14d
  41ed35:	jg     41ecf0 <error_ref_sym@@Base+0x50>
  41ed37:	movsxd rax,r15d
  41ed3a:	test   r15d,r15d
  41ed3d:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  41ed42:	cmovle r9d,r15d
  41ed46:	test   r14d,r14d
  41ed49:	jle    41ed98 <error_ref_sym@@Base+0xf8>
  41ed4b:	test   r12,r12
  41ed4e:	je     41ed55 <error_ref_sym@@Base+0xb5>
  41ed50:	mov    r12,QWORD PTR [r12+0x8]
  41ed55:	mov    rax,QWORD PTR [rsp+0x10]
  41ed5a:	mov    rdx,QWORD PTR [rsp+0x18]
  41ed5f:	mov    rsi,QWORD PTR [rax+0x8]
  41ed63:	mov    rdi,QWORD PTR [rsp+0x8]
  41ed68:	mov    r8,rbp
  41ed6b:	mov    rcx,r12
  41ed6e:	call   41d870 <__flatcc_error_report@@Base>
  41ed73:	mov    rax,QWORD PTR [rsp+0x58]
  41ed78:	xor    rax,QWORD PTR fs:0x28
  41ed81:	jne    41edbf <error_ref_sym@@Base+0x11f>
  41ed83:	add    rsp,0x68
  41ed87:	pop    rbx
  41ed88:	pop    rbp
  41ed89:	pop    r12
  41ed8b:	pop    r13
  41ed8d:	pop    r14
  41ed8f:	pop    r15
  41ed91:	ret    
  41ed92:	nop    WORD PTR [rax+rax*1+0x0]
  41ed98:	mov    DWORD PTR [rsp+0x4f],0x2e2e2e
  41eda0:	mov    r9d,0x32
  41eda6:	jmp    41ed4b <error_ref_sym@@Base+0xab>
  41eda8:	nop    DWORD PTR [rax+rax*1+0x0]
  41edb0:	mov    BYTE PTR [rsp+0x20],0x0
  41edb5:	xor    r9d,r9d
  41edb8:	lea    rbp,[rsp+0x20]
  41edbd:	jmp    41ed4b <error_ref_sym@@Base+0xab>
  41edbf:	call   4052c0 <__stack_chk_fail@plt>
  41edc4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  41edcf:	nop

000000000041edd0 <__flatcc_fb_init_parser@@Base>:
  41edd0:	endbr64 
  41edd4:	push   r15
  41edd6:	mov    r15,r8
  41edd9:	push   r14
  41eddb:	mov    r14,rcx
  41edde:	push   r13
  41ede0:	mov    r13,r9
  41ede3:	push   r12
  41ede5:	mov    r12,rdx
  41ede8:	mov    edx,0x358
  41eded:	push   rbp
  41edee:	mov    rbp,rsi
  41edf1:	xor    esi,esi
  41edf3:	push   rbx
  41edf4:	mov    rbx,rdi
  41edf7:	sub    rsp,0x18
  41edfb:	call   4052f0 <memset@plt>
  41ee00:	test   r14,r14
  41ee03:	je     41eff0 <__flatcc_fb_init_parser@@Base+0x220>
  41ee09:	mov    QWORD PTR [rbx+0x10],r14
  41ee0d:	mov    QWORD PTR [rbx+0x18],r15
  41ee11:	lea    rcx,[rbx+0xe8]
  41ee18:	test   rbp,rbp
  41ee1b:	je     41f00b <__flatcc_fb_init_parser@@Base+0x23b>
  41ee21:	mov    rax,QWORD PTR [rbp+0x0]
  41ee25:	lea    rdi,[rbx+0xf0]
  41ee2c:	mov    QWORD PTR [rbx+0xe8],rax
  41ee33:	and    rdi,0xfffffffffffffff8
  41ee37:	sub    rcx,rdi
  41ee3a:	mov    rax,QWORD PTR [rbp+0x108]
  41ee41:	mov    rsi,rbp
  41ee44:	mov    QWORD PTR [rbx+0x1f0],rax
  41ee4b:	sub    rsi,rcx
  41ee4e:	add    ecx,0x110
  41ee54:	shr    ecx,0x3
  41ee57:	rep movs QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
  41ee5a:	lea    rax,[rbx+0x268]
  41ee61:	test   r13,r13
  41ee64:	cmove  r13,rax
  41ee68:	mov    eax,DWORD PTR [rbx+0x12c]
  41ee6e:	mov    QWORD PTR [rbx+0x260],r13
  41ee75:	cmp    eax,0x8
  41ee78:	ja     41f0b8 <__flatcc_fb_init_parser@@Base+0x2e8>
  41ee7e:	mov    edx,0x1
  41ee83:	shlx   rax,rdx,rax
  41ee88:	test   eax,0x114
  41ee8d:	je     41f0b8 <__flatcc_fb_init_parser@@Base+0x2e8>
  41ee93:	mov    eax,DWORD PTR [rbx+0x130]
  41ee99:	cmp    eax,0x8
  41ee9c:	ja     41f0e0 <__flatcc_fb_init_parser@@Base+0x310>
  41eea2:	shlx   rdx,rdx,rax
  41eea7:	test   edx,0x114
  41eead:	je     41f0e0 <__flatcc_fb_init_parser@@Base+0x310>
  41eeb3:	test   r12,r12
  41eeb6:	je     41f020 <__flatcc_fb_init_parser@@Base+0x250>
  41eebc:	mov    rdi,r12
  41eebf:	call   4052b0 <strlen@plt>
  41eec4:	mov    QWORD PTR [rsp+0x8],rax
  41eec9:	mov    rdx,QWORD PTR [rbp+0x68]
  41eecd:	mov    rsi,QWORD PTR [rsp+0x8]
  41eed2:	mov    rdi,r12
  41eed5:	call   41d260 <__flatcc_fb_create_basename@@Base>
  41eeda:	mov    r13,rax
  41eedd:	mov    QWORD PTR [rbx+0x308],rax
  41eee4:	test   rax,rax
  41eee7:	je     41f103 <__flatcc_fb_init_parser@@Base+0x333>
  41eeed:	mov    rdi,r13
  41eef0:	call   4052b0 <strlen@plt>
  41eef5:	mov    rsi,rax
  41eef8:	mov    rdi,r13
  41eefb:	mov    r14,rax
  41eefe:	call   41cde0 <__flatcc_fb_copy_path_n@@Base>
  41ef03:	mov    r15,rax
  41ef06:	test   rax,rax
  41ef09:	je     41f103 <__flatcc_fb_init_parser@@Base+0x333>
  41ef0f:	test   r14,r14
  41ef12:	je     41ef4b <__flatcc_fb_init_parser@@Base+0x17b>
  41ef14:	movsx  r13,BYTE PTR [rax]
  41ef18:	test   r13b,r13b
  41ef1b:	je     41ef4b <__flatcc_fb_init_parser@@Base+0x17b>
  41ef1d:	call   405220 <__ctype_toupper_loc@plt>
  41ef22:	lea    rdi,[r15+r14*1-0x1]
  41ef27:	mov    rdx,r15
  41ef2a:	jmp    41ef3c <__flatcc_fb_init_parser@@Base+0x16c>
  41ef2c:	nop    DWORD PTR [rax+0x0]
  41ef30:	inc    rdx
  41ef33:	movsx  r13,BYTE PTR [rdx]
  41ef37:	test   r13b,r13b
  41ef3a:	je     41ef4b <__flatcc_fb_init_parser@@Base+0x17b>
  41ef3c:	mov    rsi,QWORD PTR [rax]
  41ef3f:	mov    esi,DWORD PTR [rsi+r13*4]
  41ef43:	mov    BYTE PTR [rdx],sil
  41ef46:	cmp    rdx,rdi
  41ef49:	jne    41ef30 <__flatcc_fb_init_parser@@Base+0x160>
  41ef4b:	mov    QWORD PTR [rbx+0x310],r15
  41ef52:	mov    QWORD PTR [rbx+0x2f0],r15
  41ef59:	mov    DWORD PTR [rbx+0x2f8],r14d
  41ef60:	mov    rsi,QWORD PTR [rsp+0x8]
  41ef65:	lea    rdx,[rip+0x261b2]        # 44511e <_IO_stdin_used@@Base+0x1811e>
  41ef6c:	mov    rdi,r12
  41ef6f:	call   41d260 <__flatcc_fb_create_basename@@Base>
  41ef74:	mov    QWORD PTR [rbx+0x318],rax
  41ef7b:	test   rax,rax
  41ef7e:	je     41f103 <__flatcc_fb_init_parser@@Base+0x333>
  41ef84:	mov    rdi,QWORD PTR [rbp+0xe0]
  41ef8b:	test   rdi,rdi
  41ef8e:	je     41efa2 <__flatcc_fb_init_parser@@Base+0x1d2>
  41ef90:	mov    QWORD PTR [rbx+0x2d8],rdi
  41ef97:	call   4052b0 <strlen@plt>
  41ef9c:	mov    DWORD PTR [rbx+0x2e0],eax
  41efa2:	mov    rdi,QWORD PTR [rbx+0x260]
  41efa9:	xor    edx,edx
  41efab:	xor    esi,esi
  41efad:	call   41c590 <fb_scope_table_find@@Base>
  41efb2:	mov    rbp,rax
  41efb5:	test   rax,rax
  41efb8:	je     41f038 <__flatcc_fb_init_parser@@Base+0x268>
  41efba:	mov    QWORD PTR [rbx+0x340],rbp
  41efc1:	mov    rdi,QWORD PTR [rbx+0x260]
  41efc8:	xor    edx,edx
  41efca:	xor    esi,esi
  41efcc:	call   41c590 <fb_scope_table_find@@Base>
  41efd1:	cmp    rax,rbp
  41efd4:	jne    41f108 <__flatcc_fb_init_parser@@Base+0x338>
  41efda:	xor    eax,eax
  41efdc:	add    rsp,0x18
  41efe0:	pop    rbx
  41efe1:	pop    rbp
  41efe2:	pop    r12
  41efe4:	pop    r13
  41efe6:	pop    r14
  41efe8:	pop    r15
  41efea:	ret    
  41efeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41eff0:	mov    rax,0x41d3f0
  41eff7:	lea    rcx,[rbx+0xe8]
  41effe:	mov    QWORD PTR [rbx+0x10],rax
  41f002:	test   rbp,rbp
  41f005:	jne    41ee21 <__flatcc_fb_init_parser@@Base+0x51>
  41f00b:	mov    rdi,rcx
  41f00e:	call   405700 <flatcc_init_options@@Base>
  41f013:	jmp    41ee5a <__flatcc_fb_init_parser@@Base+0x8a>
  41f018:	nop    DWORD PTR [rax+rax*1+0x0]
  41f020:	mov    QWORD PTR [rsp+0x8],0x4
  41f029:	lea    r12,[rip+0x276aa]        # 4466da <fb_schema_table_missing@@Base+0xa5a>
  41f030:	jmp    41eec9 <__flatcc_fb_init_parser@@Base+0xf9>
  41f035:	nop    DWORD PTR [rax]
  41f038:	mov    rbp,QWORD PTR [rbx+0x60]
  41f03c:	lea    rax,[rbp+0x40]
  41f040:	cmp    rax,QWORD PTR [rbx+0x50]
  41f044:	ja     41f080 <__flatcc_fb_init_parser@@Base+0x2b0>
  41f046:	mov    QWORD PTR [rbx+0x60],rax
  41f04a:	vmovdqu xmm0,XMMWORD PTR [rbx+0x2d8]
  41f052:	mov    QWORD PTR [rbp+0x0],0x0
  41f05a:	mov    rdi,QWORD PTR [rbx+0x260]
  41f061:	vmovups XMMWORD PTR [rbp+0x28],xmm0
  41f066:	mov    edx,0x1
  41f06b:	mov    rsi,rbp
  41f06e:	call   41c570 <fb_scope_table_insert_item@@Base>
  41f073:	jmp    41efba <__flatcc_fb_init_parser@@Base+0x1ea>
  41f078:	nop    DWORD PTR [rax+rax*1+0x0]
  41f080:	mov    esi,0x1
  41f085:	mov    edi,0x10000
  41f08a:	call   405320 <calloc@plt>
  41f08f:	test   rax,rax
  41f092:	je     41f103 <__flatcc_fb_init_parser@@Base+0x333>
  41f094:	mov    rdx,QWORD PTR [rbx+0x58]
  41f098:	lea    rbp,[rax+0x10]
  41f09c:	mov    QWORD PTR [rax],rdx
  41f09f:	lea    rdx,[rax+0x10000]
  41f0a6:	mov    QWORD PTR [rbx+0x58],rax
  41f0aa:	mov    QWORD PTR [rbx+0x50],rdx
  41f0ae:	add    rax,0x50
  41f0b2:	jmp    41f046 <__flatcc_fb_init_parser@@Base+0x276>
  41f0b4:	nop    DWORD PTR [rax+0x0]
  41f0b8:	xor    r9d,r9d
  41f0bb:	xor    r8d,r8d
  41f0be:	xor    ecx,ecx
  41f0c0:	lea    rdx,[rip+0x27029]        # 4460f0 <fb_schema_table_missing@@Base+0x470>
  41f0c7:	xor    esi,esi
  41f0c9:	mov    rdi,rbx
  41f0cc:	call   41d870 <__flatcc_error_report@@Base>
  41f0d1:	mov    eax,0xffffffff
  41f0d6:	jmp    41efdc <__flatcc_fb_init_parser@@Base+0x20c>
  41f0db:	nop    DWORD PTR [rax+rax*1+0x0]
  41f0e0:	xor    r9d,r9d
  41f0e3:	xor    r8d,r8d
  41f0e6:	xor    ecx,ecx
  41f0e8:	lea    rdx,[rip+0x27039]        # 446128 <fb_schema_table_missing@@Base+0x4a8>
  41f0ef:	xor    esi,esi
  41f0f1:	mov    rdi,rbx
  41f0f4:	call   41d870 <__flatcc_error_report@@Base>
  41f0f9:	mov    eax,0xffffffff
  41f0fe:	jmp    41efdc <__flatcc_fb_init_parser@@Base+0x20c>
  41f103:	call   41d420 <__flatcc_fb_default_error_out@@Base+0x30>
  41f108:	lea    rcx,[rip+0x27a21]        # 446b30 <fb_schema_table_missing@@Base+0xeb0>
  41f10f:	mov    edx,0x533
  41f114:	lea    rsi,[rip+0x26b75]        # 445c90 <fb_schema_table_missing@@Base+0x10>
  41f11b:	lea    rdi,[rip+0x27046]        # 446168 <fb_schema_table_missing@@Base+0x4e8>
  41f122:	call   4052e0 <__assert_fail@plt>
  41f127:	nop    WORD PTR [rax+rax*1+0x0]

000000000041f130 <__flatcc_fb_parse@@Base>:
  41f130:	endbr64 
  41f134:	push   r15
  41f136:	mov    r15,rsi
  41f139:	push   r14
  41f13b:	push   r13
  41f13d:	push   r12
  41f13f:	push   rbp
  41f140:	push   rbx
  41f141:	mov    rbx,rdi
  41f144:	sub    rsp,0x48
  41f148:	mov    rax,QWORD PTR fs:0x28
  41f151:	mov    QWORD PTR [rsp+0x38],rax
  41f156:	xor    eax,eax
  41f158:	lea    rax,[rip+0x27580]        # 4466df <fb_schema_table_missing@@Base+0xa5f>
  41f15f:	mov    QWORD PTR [rdi+0x80],rax
  41f166:	lea    rax,[rip+0x27577]        # 4466e4 <fb_schema_table_missing@@Base+0xa64>
  41f16d:	mov    QWORD PTR [rdi+0x70],rsi
  41f171:	mov    QWORD PTR [rdi+0x78],0x1
  41f179:	mov    QWORD PTR [rdi+0xa0],0x9
  41f184:	mov    QWORD PTR [rdi+0x88],0x4
  41f18f:	mov    QWORD PTR [rdi+0x98],0x0
  41f19a:	mov    QWORD PTR [rdi+0x90],0x0
  41f1a5:	mov    QWORD PTR [rdi+0xc8],0xfffffffffffffc2a
  41f1b0:	mov    QWORD PTR [rdi+0xa8],rax
  41f1b7:	mov    QWORD PTR [rdi+0xb0],0x5
  41f1c2:	mov    QWORD PTR [rdi+0xc0],0x0
  41f1cd:	mov    QWORD PTR [rdi+0xb8],0x0
  41f1d8:	test   ecx,ecx
  41f1da:	je     41f1e0 <__flatcc_fb_parse@@Base+0xb0>
  41f1dc:	mov    QWORD PTR [rbx+0x20],rsi
  41f1e0:	lea    rbp,[r15+rdx*1]
  41f1e4:	lea    r12,[rip+0x2773d]        # 446928 <fb_schema_table_missing@@Base+0xca8>
  41f1eb:	cmp    rbp,r15
  41f1ee:	je     41f2c3 <__flatcc_fb_parse@@Base+0x193>
  41f1f4:	movzx  esi,BYTE PTR [r15]
  41f1f8:	cmp    sil,0x7e
  41f1fc:	ja     420960 <__flatcc_fb_parse@@Base+0x1830>
  41f202:	movzx  edx,sil
  41f206:	movsxd rdx,DWORD PTR [r12+rdx*4]
  41f20a:	add    rdx,r12
  41f20d:	notrack jmp rdx
  41f210:	inc    r15
  41f213:	cmp    rbp,r15
  41f216:	je     41f2c3 <__flatcc_fb_parse@@Base+0x193>
  41f21c:	movzx  esi,BYTE PTR [r15]
  41f220:	cmp    sil,0x20
  41f224:	je     41f210 <__flatcc_fb_parse@@Base+0xe0>
  41f226:	cmp    sil,0x9
  41f22a:	je     41f210 <__flatcc_fb_parse@@Base+0xe0>
  41f22c:	jmp    41f1f8 <__flatcc_fb_parse@@Base+0xc8>
  41f22e:	xchg   ax,ax
  41f230:	lea    r14,[r15+0x2]
  41f234:	cmp    rbp,r14
  41f237:	je     41f250 <__flatcc_fb_parse@@Base+0x120>
  41f239:	movzx  edx,BYTE PTR [r15+0x2]
  41f23e:	cmp    dl,0x2f
  41f241:	je     4218d0 <__flatcc_fb_parse@@Base+0x27a0>
  41f247:	cmp    dl,0x21
  41f24a:	je     4218d0 <__flatcc_fb_parse@@Base+0x27a0>
  41f250:	mov    DWORD PTR [rbx+0x3c],0x0
  41f257:	nop    WORD PTR [rax+rax*1+0x0]
  41f260:	lea    r13,[r14-0x1]
  41f264:	jmp    41f284 <__flatcc_fb_parse@@Base+0x154>
  41f266:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f270:	movzx  eax,BYTE PTR [r13+0x1]
  41f275:	lea    edx,[rax-0x20]
  41f278:	cmp    dl,0x5e
  41f27b:	ja     4215f0 <__flatcc_fb_parse@@Base+0x24c0>
  41f281:	mov    r13,r15
  41f284:	lea    r15,[r13+0x1]
  41f288:	cmp    rbp,r15
  41f28b:	jne    41f270 <__flatcc_fb_parse@@Base+0x140>
  41f28d:	cmp    r14,rbp
  41f290:	je     41f2b0 <__flatcc_fb_parse@@Base+0x180>
  41f292:	mov    edx,DWORD PTR [rbx+0x3c]
  41f295:	test   edx,edx
  41f297:	je     41f2b0 <__flatcc_fb_parse@@Base+0x180>
  41f299:	mov    rcx,rbp
  41f29c:	mov    rdx,r14
  41f29f:	mov    rsi,0xfffffffffffffc3c
  41f2a6:	mov    rdi,rbx
  41f2a9:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  41f2ae:	xchg   ax,ax
  41f2b0:	mov    rcx,r15
  41f2b3:	mov    rdx,r15
  41f2b6:	mov    esi,0x1b
  41f2bb:	mov    rdi,rbx
  41f2be:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  41f2c3:	mov    rcx,r15
  41f2c6:	mov    rdx,r15
  41f2c9:	xor    esi,esi
  41f2cb:	mov    rdi,rbx
  41f2ce:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  41f2d3:	mov    rax,QWORD PTR [rbx+0x48]
  41f2d7:	mov    r12,QWORD PTR [rbx+0x28]
  41f2db:	mov    QWORD PTR [rbx+0x30],rax
  41f2df:	mov    QWORD PTR [rbx+0x48],r12
  41f2e3:	mov    rdi,QWORD PTR [rbx+0x148]
  41f2ea:	call   405360 <malloc@plt>
  41f2ef:	mov    QWORD PTR [rbx+0xd8],rax
  41f2f6:	test   rax,rax
  41f2f9:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  41f2ff:	mov    rdx,QWORD PTR [r12+0x20]
  41f304:	cmp    rdx,0xfffffffffffffc3c
  41f30b:	je     420e88 <__flatcc_fb_parse@@Base+0x1d58>
  41f311:	mov    rbp,r12
  41f314:	lea    r13,[rip+0x26ea5]        # 4461c0 <fb_schema_table_missing@@Base+0x540>
  41f31b:	cmp    rdx,0xfffffffffffffc35
  41f322:	je     41f6d8 <__flatcc_fb_parse@@Base+0x5a8>
  41f328:	mov    eax,DWORD PTR [rbx+0xd0]
  41f32e:	lea    rdi,[rsp+0x28]
  41f333:	mov    QWORD PTR [rsp+0x10],rdi
  41f338:	lea    rdi,[rsp+0x30]
  41f33d:	lea    r12,[rbx+0x248]
  41f344:	mov    QWORD PTR [rsp+0x8],rdi
  41f349:	jmp    41f3ba <__flatcc_fb_parse@@Base+0x28a>
  41f34b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f350:	cmp    rax,0xfffffffffffffc33
  41f356:	je     41fcc8 <__flatcc_fb_parse@@Base+0xb98>
  41f35c:	jg     41f5f0 <__flatcc_fb_parse@@Base+0x4c0>
  41f362:	cmp    rax,0xfffffffffffffc29
  41f368:	je     41fbc8 <__flatcc_fb_parse@@Base+0xa98>
  41f36e:	cmp    rax,0xfffffffffffffc30
  41f374:	je     41f960 <__flatcc_fb_parse@@Base+0x830>
  41f37a:	cmp    rax,0xfffffffffffffc1b
  41f380:	je     41f790 <__flatcc_fb_parse@@Base+0x660>
  41f386:	xor    r9d,r9d
  41f389:	xor    r8d,r8d
  41f38c:	xor    ecx,ecx
  41f38e:	lea    rdx,[rip+0x271e3]        # 446578 <fb_schema_table_missing@@Base+0x8f8>
  41f395:	mov    rdi,rbx
  41f398:	call   41d870 <__flatcc_error_report@@Base>
  41f39d:	nop    DWORD PTR [rax]
  41f3a0:	mov    rcx,QWORD PTR [rbx+0x48]
  41f3a4:	mov    eax,DWORD PTR [rbx+0xd0]
  41f3aa:	cmp    rbp,rcx
  41f3ad:	je     41f4e0 <__flatcc_fb_parse@@Base+0x3b0>
  41f3b3:	mov    rdx,QWORD PTR [rcx+0x20]
  41f3b7:	mov    rbp,rcx
  41f3ba:	test   rdx,rdx
  41f3bd:	je     4209b0 <__flatcc_fb_parse@@Base+0x1880>
  41f3c3:	cmp    eax,0x9
  41f3c6:	jg     41f508 <__flatcc_fb_parse@@Base+0x3d8>
  41f3cc:	mov    rsi,QWORD PTR [rbx+0x48]
  41f3d0:	mov    rax,QWORD PTR [rsi+0x20]
  41f3d4:	cmp    rax,0xfffffffffffffc38
  41f3da:	je     41fd58 <__flatcc_fb_parse@@Base+0xc28>
  41f3e0:	jle    41f350 <__flatcc_fb_parse@@Base+0x220>
  41f3e6:	cmp    rax,0x5
  41f3ea:	je     41fca0 <__flatcc_fb_parse@@Base+0xb70>
  41f3f0:	jg     41f630 <__flatcc_fb_parse@@Base+0x500>
  41f3f6:	cmp    rax,0xfffffffffffffc3a
  41f3fc:	je     41fe50 <__flatcc_fb_parse@@Base+0xd20>
  41f402:	jl     41fdc0 <__flatcc_fb_parse@@Base+0xc90>
  41f408:	cmp    rax,0xfffffffffffffc3b
  41f40e:	jne    41f386 <__flatcc_fb_parse@@Base+0x256>
  41f414:	mov    rdi,rbx
  41f417:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f41c:	cmp    WORD PTR [rbx+0x218],0x0
  41f424:	lea    r14,[rbx+0x208]
  41f42b:	jne    4207a0 <__flatcc_fb_parse@@Base+0x1670>
  41f431:	mov    rsi,QWORD PTR [rbx+0x48]
  41f435:	cmp    QWORD PTR [rsi+0x20],0x13
  41f43a:	jne    41fff0 <__flatcc_fb_parse@@Base+0xec0>
  41f440:	mov    rdi,rbx
  41f443:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f448:	mov    edi,0x2
  41f44d:	mov    WORD PTR [rbx+0x218],di
  41f454:	mov    QWORD PTR [rbx+0x208],0x0
  41f45f:	mov    DWORD PTR [rbx+0x210],0x0
  41f469:	mov    rax,QWORD PTR [rbx+0x48]
  41f46d:	mov    rsi,r14
  41f470:	mov    rdi,rbx
  41f473:	mov    r15,rax
  41f476:	call   41df00 <__flatcc_error_report@@Base+0x690>
  41f47b:	cmp    QWORD PTR [rbx+0x208],0x0
  41f483:	je     41f4b6 <__flatcc_fb_parse@@Base+0x386>
  41f485:	cmp    DWORD PTR [rbx+0x210],0x4
  41f48c:	je     41f4b6 <__flatcc_fb_parse@@Base+0x386>
  41f48e:	mov    r13d,0x1
  41f494:	mov    WORD PTR [rbx+0x218],r13w
  41f49c:	xor    r9d,r9d
  41f49f:	xor    r8d,r8d
  41f4a2:	xor    ecx,ecx
  41f4a4:	lea    rdx,[rip+0x26e35]        # 4462e0 <fb_schema_table_missing@@Base+0x660>
  41f4ab:	mov    rsi,r15
  41f4ae:	mov    rdi,rbx
  41f4b1:	call   41d870 <__flatcc_error_report@@Base>
  41f4b6:	mov    rsi,QWORD PTR [rbx+0x48]
  41f4ba:	cmp    QWORD PTR [rsi+0x20],0x3b
  41f4bf:	jne    420700 <__flatcc_fb_parse@@Base+0x15d0>
  41f4c5:	mov    rdi,rbx
  41f4c8:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f4cd:	mov    rcx,QWORD PTR [rbx+0x48]
  41f4d1:	mov    eax,DWORD PTR [rbx+0xd0]
  41f4d7:	cmp    rbp,rcx
  41f4da:	jne    41f3b3 <__flatcc_fb_parse@@Base+0x283>
  41f4e0:	test   eax,eax
  41f4e2:	jne    41f508 <__flatcc_fb_parse@@Base+0x3d8>
  41f4e4:	xor    r9d,r9d
  41f4e7:	xor    r8d,r8d
  41f4ea:	xor    ecx,ecx
  41f4ec:	lea    rdx,[rip+0x273bb]        # 4468ae <fb_schema_table_missing@@Base+0xc2e>
  41f4f3:	mov    rsi,rbp
  41f4f6:	mov    rdi,rbx
  41f4f9:	call   41d870 <__flatcc_error_report@@Base>
  41f4fe:	mov    eax,DWORD PTR [rbx+0xd0]
  41f504:	nop    DWORD PTR [rax+0x0]
  41f508:	mov    rdi,QWORD PTR [rsp+0x38]
  41f50d:	xor    rdi,QWORD PTR fs:0x28
  41f516:	jne    421d63 <__flatcc_fb_parse@@Base+0x2c33>
  41f51c:	add    rsp,0x48
  41f520:	pop    rbx
  41f521:	pop    rbp
  41f522:	pop    r12
  41f524:	pop    r13
  41f526:	pop    r14
  41f528:	pop    r15
  41f52a:	ret    
  41f52b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f530:	lea    r13,[r15+0x1]
  41f534:	mov    rcx,r13
  41f537:	mov    rdx,r15
  41f53a:	mov    esi,0x13
  41f53f:	mov    rdi,rbx
  41f542:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  41f547:	mov    r14,r13
  41f54a:	nop    WORD PTR [rax+rax*1+0x0]
  41f550:	dec    r13
  41f553:	jmp    41f572 <__flatcc_fb_parse@@Base+0x442>
  41f555:	nop    DWORD PTR [rax]
  41f558:	movzx  edx,BYTE PTR [r13+0x1]
  41f55d:	cmp    dl,0x22
  41f560:	je     41f57b <__flatcc_fb_parse@@Base+0x44b>
  41f562:	cmp    dl,0x5c
  41f565:	je     41f57b <__flatcc_fb_parse@@Base+0x44b>
  41f567:	sub    edx,0x20
  41f56a:	cmp    dl,0x5e
  41f56d:	ja     41f57b <__flatcc_fb_parse@@Base+0x44b>
  41f56f:	mov    r13,r15
  41f572:	lea    r15,[r13+0x1]
  41f576:	cmp    rbp,r15
  41f579:	jne    41f558 <__flatcc_fb_parse@@Base+0x428>
  41f57b:	cmp    r15,r14
  41f57e:	je     41f593 <__flatcc_fb_parse@@Base+0x463>
  41f580:	mov    rcx,r15
  41f583:	mov    rdx,r14
  41f586:	mov    esi,0x14
  41f58b:	mov    rdi,rbx
  41f58e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  41f593:	movzx  edx,BYTE PTR [r15]
  41f597:	cmp    dl,0x22
  41f59a:	je     421180 <__flatcc_fb_parse@@Base+0x2050>
  41f5a0:	cmp    rbp,r15
  41f5a3:	je     420990 <__flatcc_fb_parse@@Base+0x1860>
  41f5a9:	test   dl,dl
  41f5ab:	je     420990 <__flatcc_fb_parse@@Base+0x1860>
  41f5b1:	cmp    dl,0x5c
  41f5b4:	je     41f678 <__flatcc_fb_parse@@Base+0x548>
  41f5ba:	cmp    dl,0xa
  41f5bd:	je     420990 <__flatcc_fb_parse@@Base+0x1860>
  41f5c3:	cmp    dl,0xd
  41f5c6:	je     420990 <__flatcc_fb_parse@@Base+0x1860>
  41f5cc:	lea    r13,[r15+0x1]
  41f5d0:	mov    rcx,r13
  41f5d3:	mov    rdx,r15
  41f5d6:	mov    esi,0x6
  41f5db:	mov    rdi,rbx
  41f5de:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  41f5e3:	mov    r14,r13
  41f5e6:	jmp    41f550 <__flatcc_fb_parse@@Base+0x420>
  41f5eb:	nop    DWORD PTR [rax+rax*1+0x0]
  41f5f0:	cmp    rax,0xfffffffffffffc36
  41f5f6:	je     41ff40 <__flatcc_fb_parse@@Base+0xe10>
  41f5fc:	jg     41fee0 <__flatcc_fb_parse@@Base+0xdb0>
  41f602:	cmp    rax,0xfffffffffffffc35
  41f608:	jne    41f386 <__flatcc_fb_parse@@Base+0x256>
  41f60e:	xor    r9d,r9d
  41f611:	xor    r8d,r8d
  41f614:	xor    ecx,ecx
  41f616:	lea    rdx,[rip+0x26e5b]        # 446478 <fb_schema_table_missing@@Base+0x7f8>
  41f61d:	mov    rdi,rbx
  41f620:	call   41d870 <__flatcc_error_report@@Base>
  41f625:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41f62a:	nop    WORD PTR [rax+rax*1+0x0]
  41f630:	cmp    rax,0x1b
  41f634:	je     41fc78 <__flatcc_fb_parse@@Base+0xb48>
  41f63a:	cmp    rax,0x7b
  41f63e:	je     41fc58 <__flatcc_fb_parse@@Base+0xb28>
  41f644:	cmp    rax,0x7
  41f648:	jne    41f386 <__flatcc_fb_parse@@Base+0x256>
  41f64e:	mov    r9d,0x1
  41f654:	lea    r8,[rip+0x26fb6]        # 446611 <fb_schema_table_missing@@Base+0x991>
  41f65b:	xor    ecx,ecx
  41f65d:	lea    rdx,[rip+0x26eec]        # 446550 <fb_schema_table_missing@@Base+0x8d0>
  41f664:	mov    rdi,rbx
  41f667:	call   41d870 <__flatcc_error_report@@Base>
  41f66c:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41f671:	nop    DWORD PTR [rax+0x0]
  41f678:	lea    r14,[r13+0x2]
  41f67c:	mov    rcx,r14
  41f67f:	mov    rdx,r15
  41f682:	mov    esi,0x15
  41f687:	mov    rdi,rbx
  41f68a:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  41f68f:	cmp    rbp,r14
  41f692:	je     421780 <__flatcc_fb_parse@@Base+0x2650>
  41f698:	movzx  edx,BYTE PTR [r15+0x1]
  41f69d:	test   dl,dl
  41f69f:	je     421780 <__flatcc_fb_parse@@Base+0x2650>
  41f6a5:	cmp    dl,0x5c
  41f6a8:	je     41ffc8 <__flatcc_fb_parse@@Base+0xe98>
  41f6ae:	cmp    dl,0x22
  41f6b1:	je     41ffc8 <__flatcc_fb_parse@@Base+0xe98>
  41f6b7:	cmp    dl,0xa
  41f6ba:	je     421080 <__flatcc_fb_parse@@Base+0x1f50>
  41f6c0:	cmp    dl,0xd
  41f6c3:	je     4211a0 <__flatcc_fb_parse@@Base+0x2070>
  41f6c9:	mov    r15,r14
  41f6cc:	jmp    41f5cc <__flatcc_fb_parse@@Base+0x49c>
  41f6d1:	nop    DWORD PTR [rax+0x0]
  41f6d8:	mov    rdi,rbx
  41f6db:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f6e0:	mov    r14d,DWORD PTR [rbx+0xf8]
  41f6e7:	test   r14d,r14d
  41f6ea:	jne    420ea0 <__flatcc_fb_parse@@Base+0x1d70>
  41f6f0:	mov    rbp,QWORD PTR [rbx+0x48]
  41f6f4:	mov    eax,DWORD PTR [rbx+0xd0]
  41f6fa:	mov    rdx,QWORD PTR [rbp+0x20]
  41f6fe:	cmp    eax,0x9
  41f701:	jg     41f32e <__flatcc_fb_parse@@Base+0x1fe>
  41f707:	cmp    rdx,0x13
  41f70b:	jne    420070 <__flatcc_fb_parse@@Base+0xf40>
  41f711:	mov    rdi,rbx
  41f714:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f719:	mov    rsi,QWORD PTR [rbx+0x60]
  41f71d:	lea    rax,[rsi+0x20]
  41f721:	cmp    rax,QWORD PTR [rbx+0x50]
  41f725:	ja     420ec0 <__flatcc_fb_parse@@Base+0x1d90>
  41f72b:	mov    QWORD PTR [rbx+0x60],rax
  41f72f:	mov    rax,QWORD PTR [rbx+0x1f8]
  41f736:	mov    r15d,0x2
  41f73c:	mov    QWORD PTR [rsi],rax
  41f73f:	mov    QWORD PTR [rbx+0x1f8],rsi
  41f746:	mov    WORD PTR [rsi+0x18],r15w
  41f74b:	mov    QWORD PTR [rsi+0x8],0x0
  41f753:	mov    DWORD PTR [rsi+0x10],0x0
  41f75a:	mov    rdi,rbx
  41f75d:	add    rsi,0x8
  41f761:	call   41df00 <__flatcc_error_report@@Base+0x690>
  41f766:	mov    rsi,QWORD PTR [rbx+0x48]
  41f76a:	cmp    QWORD PTR [rsi+0x20],0x3b
  41f76f:	jne    420a60 <__flatcc_fb_parse@@Base+0x1930>
  41f775:	mov    rdi,rbx
  41f778:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f77d:	mov    rbp,QWORD PTR [rbx+0x48]
  41f781:	mov    rdx,QWORD PTR [rbp+0x20]
  41f785:	jmp    41f31b <__flatcc_fb_parse@@Base+0x1eb>
  41f78a:	nop    WORD PTR [rax+rax*1+0x0]
  41f790:	mov    rdi,rbx
  41f793:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f798:	mov    r15,QWORD PTR [rbx+0x60]
  41f79c:	lea    rax,[r15+0xd0]
  41f7a3:	cmp    rax,QWORD PTR [rbx+0x50]
  41f7a7:	ja     420890 <__flatcc_fb_parse@@Base+0x1760>
  41f7ad:	mov    QWORD PTR [rbx+0x60],rax
  41f7b1:	mov    rax,QWORD PTR [rbx+0x238]
  41f7b8:	mov    r8d,0x3
  41f7be:	mov    QWORD PTR [r15],rax
  41f7c1:	mov    rax,QWORD PTR [rbx+0x340]
  41f7c8:	mov    WORD PTR [r15+0x10],r8w
  41f7cd:	mov    QWORD PTR [rbx+0x238],r15
  41f7d4:	mov    QWORD PTR [r15+0x18],rax
  41f7d8:	mov    rax,QWORD PTR [rbx+0x40]
  41f7dc:	test   rax,rax
  41f7df:	je     41f7f9 <__flatcc_fb_parse@@Base+0x6c9>
  41f7e1:	xor    ecx,ecx
  41f7e3:	jmp    41f7eb <__flatcc_fb_parse@@Base+0x6bb>
  41f7e5:	nop    DWORD PTR [rax]
  41f7e8:	mov    rax,rdx
  41f7eb:	mov    rdx,QWORD PTR [rax]
  41f7ee:	mov    QWORD PTR [rax],rcx
  41f7f1:	mov    rcx,rax
  41f7f4:	test   rdx,rdx
  41f7f7:	jne    41f7e8 <__flatcc_fb_parse@@Base+0x6b8>
  41f7f9:	mov    r14,QWORD PTR [rbx+0x48]
  41f7fd:	mov    QWORD PTR [r15+0x40],rax
  41f801:	cmp    QWORD PTR [r14+0x20],0x9
  41f806:	mov    QWORD PTR [rbx+0x40],0x0
  41f80e:	jne    4200a0 <__flatcc_fb_parse@@Base+0xf70>
  41f814:	mov    rdi,rbx
  41f817:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f81c:	mov    rax,QWORD PTR [rbx+0x48]
  41f820:	mov    QWORD PTR [r15+0x8],r14
  41f824:	cmp    QWORD PTR [rax+0x20],0x3a
  41f829:	je     4208d0 <__flatcc_fb_parse@@Base+0x17a0>
  41f82f:	mov    rdi,rbx
  41f832:	call   41e650 <__flatcc_error_report@@Base+0xde0>
  41f837:	mov    r14,QWORD PTR [rbx+0x48]
  41f83b:	mov    QWORD PTR [r15+0x38],rax
  41f83f:	cmp    QWORD PTR [r14+0x20],0x7b
  41f844:	jne    4206e0 <__flatcc_fb_parse@@Base+0x15b0>
  41f84a:	mov    rdi,rbx
  41f84d:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f852:	mov    r13,QWORD PTR [rbx+0x48]
  41f856:	cmp    QWORD PTR [r13+0x20],0x9
  41f85b:	jne    420a3c <__flatcc_fb_parse@@Base+0x190c>
  41f861:	mov    rdi,rbx
  41f864:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f869:	cmp    DWORD PTR [rbx+0xd0],0x9
  41f870:	jg     4200c2 <__flatcc_fb_parse@@Base+0xf92>
  41f876:	mov    rsi,QWORD PTR [rbx+0x60]
  41f87a:	lea    rax,[rsi+0xb0]
  41f881:	cmp    rax,QWORD PTR [rbx+0x50]
  41f885:	ja     420f00 <__flatcc_fb_parse@@Base+0x1dd0>
  41f88b:	mov    QWORD PTR [rbx+0x60],rax
  41f88f:	mov    rax,QWORD PTR [r15+0x28]
  41f893:	mov    edi,0x5
  41f898:	mov    QWORD PTR [rsi],rax
  41f89b:	mov    WORD PTR [rsi+0x10],di
  41f89f:	mov    QWORD PTR [r15+0x28],rsi
  41f8a3:	mov    rax,QWORD PTR [rbx+0x40]
  41f8a7:	test   rax,rax
  41f8aa:	je     41f8c1 <__flatcc_fb_parse@@Base+0x791>
  41f8ac:	xor    ecx,ecx
  41f8ae:	jmp    41f8b3 <__flatcc_fb_parse@@Base+0x783>
  41f8b0:	mov    rax,rdx
  41f8b3:	mov    rdx,QWORD PTR [rax]
  41f8b6:	mov    QWORD PTR [rax],rcx
  41f8b9:	mov    rcx,rax
  41f8bc:	test   rdx,rdx
  41f8bf:	jne    41f8b0 <__flatcc_fb_parse@@Base+0x780>
  41f8c1:	mov    QWORD PTR [rsi+0x68],rax
  41f8c5:	mov    rax,QWORD PTR [rbx+0x48]
  41f8c9:	mov    QWORD PTR [rbx+0x40],0x0
  41f8d1:	cmp    QWORD PTR [rax+0x20],0x3d
  41f8d6:	mov    QWORD PTR [rsi+0x8],r13
  41f8da:	jne    41f907 <__flatcc_fb_parse@@Base+0x7d7>
  41f8dc:	mov    rdi,rbx
  41f8df:	mov    QWORD PTR [rsp+0x18],rsi
  41f8e4:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f8e9:	mov    rsi,QWORD PTR [rsp+0x18]
  41f8ee:	lea    rcx,[rip+0x26f67]        # 44685c <fb_schema_table_missing@@Base+0xbdc>
  41f8f5:	add    rsi,0x48
  41f8f9:	xor    edx,edx
  41f8fb:	mov    rdi,rbx
  41f8fe:	call   41e050 <__flatcc_error_report@@Base+0x7e0>
  41f903:	mov    rax,QWORD PTR [rbx+0x48]
  41f907:	cmp    QWORD PTR [rax+0x20],0x2c
  41f90c:	je     420a10 <__flatcc_fb_parse@@Base+0x18e0>
  41f912:	mov    rcx,r14
  41f915:	lea    rdx,[rip+0x26a84]        # 4463a0 <fb_schema_table_missing@@Base+0x720>
  41f91c:	mov    esi,0x7d
  41f921:	mov    rdi,rbx
  41f924:	call   41db60 <__flatcc_error_report@@Base+0x2f0>
  41f929:	mov    rax,QWORD PTR [r15+0x28]
  41f92d:	test   rax,rax
  41f930:	je     41f951 <__flatcc_fb_parse@@Base+0x821>
  41f932:	xor    ecx,ecx
  41f934:	jmp    41f943 <__flatcc_fb_parse@@Base+0x813>
  41f936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f940:	mov    rax,rdx
  41f943:	mov    rdx,QWORD PTR [rax]
  41f946:	mov    QWORD PTR [rax],rcx
  41f949:	mov    rcx,rax
  41f94c:	test   rdx,rdx
  41f94f:	jne    41f940 <__flatcc_fb_parse@@Base+0x810>
  41f951:	mov    QWORD PTR [r15+0x28],rax
  41f955:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41f95a:	nop    WORD PTR [rax+rax*1+0x0]
  41f960:	mov    rdi,rbx
  41f963:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f968:	mov    r15,QWORD PTR [rbx+0x60]
  41f96c:	lea    rax,[r15+0xd0]
  41f973:	cmp    rax,QWORD PTR [rbx+0x50]
  41f977:	ja     420810 <__flatcc_fb_parse@@Base+0x16e0>
  41f97d:	mov    QWORD PTR [rbx+0x60],rax
  41f981:	mov    rax,QWORD PTR [rbx+0x238]
  41f988:	mov    esi,0x4
  41f98d:	mov    QWORD PTR [r15],rax
  41f990:	mov    rax,QWORD PTR [rbx+0x340]
  41f997:	mov    WORD PTR [r15+0x10],si
  41f99c:	mov    QWORD PTR [rbx+0x238],r15
  41f9a3:	mov    QWORD PTR [r15+0x18],rax
  41f9a7:	mov    rax,QWORD PTR [rbx+0x40]
  41f9ab:	test   rax,rax
  41f9ae:	je     41f9c9 <__flatcc_fb_parse@@Base+0x899>
  41f9b0:	xor    ecx,ecx
  41f9b2:	jmp    41f9bb <__flatcc_fb_parse@@Base+0x88b>
  41f9b4:	nop    DWORD PTR [rax+0x0]
  41f9b8:	mov    rax,rdx
  41f9bb:	mov    rdx,QWORD PTR [rax]
  41f9be:	mov    QWORD PTR [rax],rcx
  41f9c1:	mov    rcx,rax
  41f9c4:	test   rdx,rdx
  41f9c7:	jne    41f9b8 <__flatcc_fb_parse@@Base+0x888>
  41f9c9:	mov    r14,QWORD PTR [rbx+0x48]
  41f9cd:	mov    QWORD PTR [r15+0x40],rax
  41f9d1:	cmp    QWORD PTR [r14+0x20],0x9
  41f9d6:	mov    QWORD PTR [rbx+0x40],0x0
  41f9de:	jne    4200d8 <__flatcc_fb_parse@@Base+0xfa8>
  41f9e4:	mov    rdi,rbx
  41f9e7:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41f9ec:	mov    QWORD PTR [r15+0x8],r14
  41f9f0:	mov    rdi,rbx
  41f9f3:	call   41e650 <__flatcc_error_report@@Base+0xde0>
  41f9f8:	mov    r14,QWORD PTR [rbx+0x48]
  41f9fc:	mov    QWORD PTR [r15+0x38],rax
  41fa00:	cmp    QWORD PTR [r14+0x20],0x7b
  41fa05:	jne    421058 <__flatcc_fb_parse@@Base+0x1f28>
  41fa0b:	mov    rdi,rbx
  41fa0e:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41fa13:	mov    rax,QWORD PTR [rbx+0x48]
  41fa17:	cmp    QWORD PTR [rax+0x20],0x9
  41fa1c:	mov    QWORD PTR [rsp+0x18],rax
  41fa21:	jne    420f89 <__flatcc_fb_parse@@Base+0x1e59>
  41fa27:	cmp    DWORD PTR [rbx+0xd0],0x9
  41fa2e:	jg     4200fa <__flatcc_fb_parse@@Base+0xfca>
  41fa34:	mov    r13,QWORD PTR [rbx+0x60]
  41fa38:	lea    rax,[r13+0xb0]
  41fa3f:	cmp    rax,QWORD PTR [rbx+0x50]
  41fa43:	ja     4210f8 <__flatcc_fb_parse@@Base+0x1fc8>
  41fa49:	mov    QWORD PTR [rbx+0x60],rax
  41fa4d:	mov    rax,QWORD PTR [r15+0x28]
  41fa51:	mov    ecx,0x5
  41fa56:	mov    QWORD PTR [r13+0x0],rax
  41fa5a:	mov    WORD PTR [r13+0x10],cx
  41fa5f:	mov    QWORD PTR [r15+0x28],r13
  41fa63:	mov    rax,QWORD PTR [rbx+0x40]
  41fa67:	test   rax,rax
  41fa6a:	je     41fa81 <__flatcc_fb_parse@@Base+0x951>
  41fa6c:	xor    ecx,ecx
  41fa6e:	jmp    41fa73 <__flatcc_fb_parse@@Base+0x943>
  41fa70:	mov    rax,rdx
  41fa73:	mov    rdx,QWORD PTR [rax]
  41fa76:	mov    QWORD PTR [rax],rcx
  41fa79:	mov    rcx,rax
  41fa7c:	test   rdx,rdx
  41fa7f:	jne    41fa70 <__flatcc_fb_parse@@Base+0x940>
  41fa81:	mov    QWORD PTR [r13+0x68],rax
  41fa85:	mov    QWORD PTR [rbx+0x40],0x0
  41fa8d:	mov    rsi,QWORD PTR [rsp+0x8]
  41fa92:	mov    rdi,rbx
  41fa95:	call   41da20 <__flatcc_error_report@@Base+0x1b0>
  41fa9a:	mov    rax,QWORD PTR [rsp+0x30]
  41fa9f:	mov    edx,0xc
  41faa4:	mov    QWORD PTR [r13+0x18],rax
  41faa8:	mov    WORD PTR [r13+0x28],dx
  41faad:	mov    rdx,QWORD PTR [rax]
  41fab0:	test   rdx,rdx
  41fab3:	jne    41fac3 <__flatcc_fb_parse@@Base+0x993>
  41fab5:	jmp    4217a0 <__flatcc_fb_parse@@Base+0x2670>
  41faba:	nop    WORD PTR [rax+rax*1+0x0]
  41fac0:	mov    rdx,rax
  41fac3:	mov    rax,QWORD PTR [rdx]
  41fac6:	test   rax,rax
  41fac9:	jne    41fac0 <__flatcc_fb_parse@@Base+0x990>
  41facb:	mov    QWORD PTR [rsp+0x30],rdx
  41fad0:	mov    rax,QWORD PTR [rdx+0x8]
  41fad4:	mov    QWORD PTR [r13+0x8],rax
  41fad8:	mov    rax,QWORD PTR [rbx+0x48]
  41fadc:	mov    rax,QWORD PTR [rax+0x20]
  41fae0:	cmp    rax,0x3a
  41fae4:	je     420fb0 <__flatcc_fb_parse@@Base+0x1e80>
  41faea:	cmp    rax,0x3d
  41faee:	jne    41fb15 <__flatcc_fb_parse@@Base+0x9e5>
  41faf0:	mov    rdi,rbx
  41faf3:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41faf8:	lea    rsi,[r13+0x48]
  41fafc:	lea    rcx,[rip+0x26d59]        # 44685c <fb_schema_table_missing@@Base+0xbdc>
  41fb03:	xor    edx,edx
  41fb05:	mov    rdi,rbx
  41fb08:	call   41e050 <__flatcc_error_report@@Base+0x7e0>
  41fb0d:	mov    rax,QWORD PTR [rbx+0x48]
  41fb11:	mov    rax,QWORD PTR [rax+0x20]
  41fb15:	cmp    rax,0x2c
  41fb19:	je     420f58 <__flatcc_fb_parse@@Base+0x1e28>
  41fb1f:	lea    rdx,[rip+0x2692a]        # 446450 <fb_schema_table_missing@@Base+0x7d0>
  41fb26:	mov    rcx,r14
  41fb29:	mov    esi,0x7d
  41fb2e:	mov    rdi,rbx
  41fb31:	call   41db60 <__flatcc_error_report@@Base+0x2f0>
  41fb36:	mov    rdx,QWORD PTR [r15+0x28]
  41fb3a:	test   rdx,rdx
  41fb3d:	je     41fb59 <__flatcc_fb_parse@@Base+0xa29>
  41fb3f:	xor    ecx,ecx
  41fb41:	jmp    41fb4b <__flatcc_fb_parse@@Base+0xa1b>
  41fb43:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb48:	mov    rdx,rax
  41fb4b:	mov    rax,QWORD PTR [rdx]
  41fb4e:	mov    QWORD PTR [rdx],rcx
  41fb51:	mov    rcx,rdx
  41fb54:	test   rax,rax
  41fb57:	jne    41fb48 <__flatcc_fb_parse@@Base+0xa18>
  41fb59:	mov    rsi,QWORD PTR [rbx+0x60]
  41fb5d:	mov    QWORD PTR [r15+0x28],rdx
  41fb61:	lea    rax,[rsi+0xb0]
  41fb68:	cmp    rax,QWORD PTR [rbx+0x50]
  41fb6c:	ja     421248 <__flatcc_fb_parse@@Base+0x2118>
  41fb72:	mov    r11d,0x5
  41fb78:	mov    QWORD PTR [rbx+0x60],rax
  41fb7c:	mov    QWORD PTR [rsi],rdx
  41fb7f:	mov    WORD PTR [rsi+0x10],r11w
  41fb84:	mov    QWORD PTR [r15+0x28],rsi
  41fb88:	mov    rax,QWORD PTR [rbx+0x40]
  41fb8c:	test   rax,rax
  41fb8f:	je     41fba9 <__flatcc_fb_parse@@Base+0xa79>
  41fb91:	xor    ecx,ecx
  41fb93:	jmp    41fb9b <__flatcc_fb_parse@@Base+0xa6b>
  41fb95:	nop    DWORD PTR [rax]
  41fb98:	mov    rax,rdx
  41fb9b:	mov    rdx,QWORD PTR [rax]
  41fb9e:	mov    QWORD PTR [rax],rcx
  41fba1:	mov    rcx,rax
  41fba4:	test   rdx,rdx
  41fba7:	jne    41fb98 <__flatcc_fb_parse@@Base+0xa68>
  41fba9:	mov    QWORD PTR [rsi+0x68],rax
  41fbad:	lea    rax,[rbx+0x80]
  41fbb4:	mov    QWORD PTR [rbx+0x40],0x0
  41fbbc:	mov    QWORD PTR [rsi+0x8],rax
  41fbc0:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fbc5:	nop    DWORD PTR [rax]
  41fbc8:	mov    rdi,rbx
  41fbcb:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41fbd0:	mov    rsi,QWORD PTR [rbx+0x60]
  41fbd4:	lea    rax,[rsi+0xd0]
  41fbdb:	cmp    rax,QWORD PTR [rbx+0x50]
  41fbdf:	ja     4207d0 <__flatcc_fb_parse@@Base+0x16a0>
  41fbe5:	mov    QWORD PTR [rbx+0x60],rax
  41fbe9:	mov    rax,QWORD PTR [rbx+0x238]
  41fbf0:	xor    r10d,r10d
  41fbf3:	mov    QWORD PTR [rsi],rax
  41fbf6:	mov    rax,QWORD PTR [rbx+0x340]
  41fbfd:	mov    WORD PTR [rsi+0x10],r10w
  41fc02:	mov    QWORD PTR [rbx+0x238],rsi
  41fc09:	mov    QWORD PTR [rsi+0x18],rax
  41fc0d:	mov    rax,QWORD PTR [rbx+0x40]
  41fc11:	test   rax,rax
  41fc14:	je     41fc31 <__flatcc_fb_parse@@Base+0xb01>
  41fc16:	xor    ecx,ecx
  41fc18:	jmp    41fc23 <__flatcc_fb_parse@@Base+0xaf3>
  41fc1a:	nop    WORD PTR [rax+rax*1+0x0]
  41fc20:	mov    rax,rdx
  41fc23:	mov    rdx,QWORD PTR [rax]
  41fc26:	mov    QWORD PTR [rax],rcx
  41fc29:	mov    rcx,rax
  41fc2c:	test   rdx,rdx
  41fc2f:	jne    41fc20 <__flatcc_fb_parse@@Base+0xaf0>
  41fc31:	mov    QWORD PTR [rsi+0x40],rax
  41fc35:	mov    QWORD PTR [rbx+0x40],0x0
  41fc3d:	mov    rdx,0xfffffffffffffc29
  41fc44:	mov    rdi,rbx
  41fc47:	call   41e800 <__flatcc_error_report@@Base+0xf90>
  41fc4c:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fc51:	nop    DWORD PTR [rax+0x0]
  41fc58:	xor    r9d,r9d
  41fc5b:	xor    r8d,r8d
  41fc5e:	xor    ecx,ecx
  41fc60:	lea    rdx,[rip+0x26849]        # 4464b0 <fb_schema_table_missing@@Base+0x830>
  41fc67:	mov    rdi,rbx
  41fc6a:	call   41d870 <__flatcc_error_report@@Base>
  41fc6f:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fc74:	nop    DWORD PTR [rax+0x0]
  41fc78:	mov    r9d,0x5
  41fc7e:	lea    r8,[rip+0x26c0e]        # 446893 <fb_schema_table_missing@@Base+0xc13>
  41fc85:	xor    ecx,ecx
  41fc87:	lea    rdx,[rip+0x26c0b]        # 446899 <fb_schema_table_missing@@Base+0xc19>
  41fc8e:	mov    rdi,rbx
  41fc91:	call   41d870 <__flatcc_error_report@@Base>
  41fc96:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fc9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fca0:	mov    r9d,0x1
  41fca6:	lea    r8,[rip+0x26964]        # 446611 <fb_schema_table_missing@@Base+0x991>
  41fcad:	xor    ecx,ecx
  41fcaf:	lea    rdx,[rip+0x26862]        # 446518 <fb_schema_table_missing@@Base+0x898>
  41fcb6:	mov    rdi,rbx
  41fcb9:	call   41d870 <__flatcc_error_report@@Base>
  41fcbe:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fcc3:	nop    DWORD PTR [rax+rax*1+0x0]
  41fcc8:	mov    rdi,rbx
  41fccb:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41fcd0:	mov    rsi,QWORD PTR [rbx+0x60]
  41fcd4:	lea    rax,[rsi+0xd0]
  41fcdb:	cmp    rax,QWORD PTR [rbx+0x50]
  41fcdf:	ja     420760 <__flatcc_fb_parse@@Base+0x1630>
  41fce5:	mov    QWORD PTR [rbx+0x60],rax
  41fce9:	mov    rax,QWORD PTR [rbx+0x238]
  41fcf0:	mov    r11d,0x1
  41fcf6:	mov    QWORD PTR [rsi],rax
  41fcf9:	mov    rax,QWORD PTR [rbx+0x340]
  41fd00:	mov    WORD PTR [rsi+0x10],r11w
  41fd05:	mov    QWORD PTR [rbx+0x238],rsi
  41fd0c:	mov    QWORD PTR [rsi+0x18],rax
  41fd10:	mov    rax,QWORD PTR [rbx+0x40]
  41fd14:	test   rax,rax
  41fd17:	je     41fd31 <__flatcc_fb_parse@@Base+0xc01>
  41fd19:	xor    ecx,ecx
  41fd1b:	jmp    41fd23 <__flatcc_fb_parse@@Base+0xbf3>
  41fd1d:	nop    DWORD PTR [rax]
  41fd20:	mov    rax,rdx
  41fd23:	mov    rdx,QWORD PTR [rax]
  41fd26:	mov    QWORD PTR [rax],rcx
  41fd29:	mov    rcx,rax
  41fd2c:	test   rdx,rdx
  41fd2f:	jne    41fd20 <__flatcc_fb_parse@@Base+0xbf0>
  41fd31:	mov    QWORD PTR [rsi+0x40],rax
  41fd35:	mov    QWORD PTR [rbx+0x40],0x0
  41fd3d:	mov    rdx,0xfffffffffffffc33
  41fd44:	mov    rdi,rbx
  41fd47:	call   41e800 <__flatcc_error_report@@Base+0xf90>
  41fd4c:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fd51:	nop    DWORD PTR [rax+0x0]
  41fd58:	mov    rdi,rbx
  41fd5b:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41fd60:	cmp    QWORD PTR [rbx+0x248],0x0
  41fd68:	mov    r14,QWORD PTR [rbx+0x48]
  41fd6c:	je     41fd88 <__flatcc_fb_parse@@Base+0xc58>
  41fd6e:	xor    r9d,r9d
  41fd71:	xor    r8d,r8d
  41fd74:	xor    ecx,ecx
  41fd76:	lea    rdx,[rip+0x26a62]        # 4467df <fb_schema_table_missing@@Base+0xb5f>
  41fd7d:	mov    rsi,r14
  41fd80:	mov    rdi,rbx
  41fd83:	call   41d870 <__flatcc_error_report@@Base>
  41fd88:	mov    rsi,r12
  41fd8b:	mov    rdi,rbx
  41fd8e:	call   41da20 <__flatcc_error_report@@Base+0x1b0>
  41fd93:	mov    rax,QWORD PTR [rbx+0x340]
  41fd9a:	mov    rcx,r14
  41fd9d:	mov    QWORD PTR [rbx+0x258],rax
  41fda4:	lea    rdx,[rip+0x2655d]        # 446308 <fb_schema_table_missing@@Base+0x688>
  41fdab:	mov    esi,0x3b
  41fdb0:	mov    rdi,rbx
  41fdb3:	call   41db60 <__flatcc_error_report@@Base+0x2f0>
  41fdb8:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fdbd:	nop    DWORD PTR [rax]
  41fdc0:	mov    rdi,rbx
  41fdc3:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41fdc8:	mov    rsi,QWORD PTR [rbx+0x60]
  41fdcc:	lea    rax,[rsi+0xd0]
  41fdd3:	cmp    rax,QWORD PTR [rbx+0x50]
  41fdd7:	ja     420720 <__flatcc_fb_parse@@Base+0x15f0>
  41fddd:	mov    QWORD PTR [rbx+0x60],rax
  41fde1:	mov    rax,QWORD PTR [rbx+0x238]
  41fde8:	mov    r9d,0x2
  41fdee:	mov    QWORD PTR [rsi],rax
  41fdf1:	mov    rax,QWORD PTR [rbx+0x340]
  41fdf8:	mov    WORD PTR [rsi+0x10],r9w
  41fdfd:	mov    QWORD PTR [rbx+0x238],rsi
  41fe04:	mov    QWORD PTR [rsi+0x18],rax
  41fe08:	mov    rax,QWORD PTR [rbx+0x40]
  41fe0c:	test   rax,rax
  41fe0f:	je     41fe29 <__flatcc_fb_parse@@Base+0xcf9>
  41fe11:	xor    ecx,ecx
  41fe13:	jmp    41fe1b <__flatcc_fb_parse@@Base+0xceb>
  41fe15:	nop    DWORD PTR [rax]
  41fe18:	mov    rax,rdx
  41fe1b:	mov    rdx,QWORD PTR [rax]
  41fe1e:	mov    QWORD PTR [rax],rcx
  41fe21:	mov    rcx,rax
  41fe24:	test   rdx,rdx
  41fe27:	jne    41fe18 <__flatcc_fb_parse@@Base+0xce8>
  41fe29:	mov    QWORD PTR [rsi+0x40],rax
  41fe2d:	mov    QWORD PTR [rbx+0x40],0x0
  41fe35:	mov    rdx,0xfffffffffffffc39
  41fe3c:	mov    rdi,rbx
  41fe3f:	call   41e800 <__flatcc_error_report@@Base+0xf90>
  41fe44:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fe49:	nop    DWORD PTR [rax+0x0]
  41fe50:	mov    rdi,rbx
  41fe53:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41fe58:	cmp    WORD PTR [rbx+0x230],0x2
  41fe60:	lea    r14,[rbx+0x220]
  41fe67:	je     4211e8 <__flatcc_fb_parse@@Base+0x20b8>
  41fe6d:	mov    rsi,QWORD PTR [rbx+0x48]
  41fe71:	cmp    QWORD PTR [rsi+0x20],0x13
  41fe76:	jne    41ffd8 <__flatcc_fb_parse@@Base+0xea8>
  41fe7c:	mov    rdi,rbx
  41fe7f:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41fe84:	mov    r8d,0x2
  41fe8a:	mov    WORD PTR [rbx+0x230],r8w
  41fe92:	mov    QWORD PTR [rbx+0x220],0x0
  41fe9d:	mov    DWORD PTR [rbx+0x228],0x0
  41fea7:	mov    rsi,r14
  41feaa:	mov    rdi,rbx
  41fead:	call   41df00 <__flatcc_error_report@@Base+0x690>
  41feb2:	mov    rsi,QWORD PTR [rbx+0x48]
  41feb6:	cmp    QWORD PTR [rsi+0x20],0x3b
  41febb:	je     41f4c5 <__flatcc_fb_parse@@Base+0x395>
  41fec1:	xor    r9d,r9d
  41fec4:	xor    r8d,r8d
  41fec7:	xor    ecx,ecx
  41fec9:	lea    rdx,[rip+0x268ba]        # 44678a <fb_schema_table_missing@@Base+0xb0a>
  41fed0:	mov    rdi,rbx
  41fed3:	call   41d870 <__flatcc_error_report@@Base>
  41fed8:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41fedd:	nop    DWORD PTR [rax]
  41fee0:	mov    rdi,rbx
  41fee3:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41fee8:	mov    r14,QWORD PTR [rbx+0x48]
  41feec:	mov    QWORD PTR [rsp+0x28],0x0
  41fef5:	mov    rax,QWORD PTR [r14+0x20]
  41fef9:	cmp    rax,0x3b
  41fefd:	je     4206c8 <__flatcc_fb_parse@@Base+0x1598>
  41ff03:	cmp    rax,0x9
  41ff07:	je     421000 <__flatcc_fb_parse@@Base+0x1ed0>
  41ff0d:	xor    r9d,r9d
  41ff10:	xor    r8d,r8d
  41ff13:	xor    ecx,ecx
  41ff15:	lea    rdx,[rip+0x2632c]        # 446248 <fb_schema_table_missing@@Base+0x5c8>
  41ff1c:	mov    rsi,r14
  41ff1f:	mov    rdi,rbx
  41ff22:	call   41d870 <__flatcc_error_report@@Base>
  41ff27:	mov    esi,0x3b
  41ff2c:	mov    rdi,rbx
  41ff2f:	call   41d690 <__flatcc_fb_default_error_out@@Base+0x2a0>
  41ff34:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41ff39:	nop    DWORD PTR [rax+0x0]
  41ff40:	mov    rdi,rbx
  41ff43:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  41ff48:	mov    r14,QWORD PTR [rbx+0x60]
  41ff4c:	lea    rax,[r14+0x30]
  41ff50:	cmp    rax,QWORD PTR [rbx+0x50]
  41ff54:	ja     420850 <__flatcc_fb_parse@@Base+0x1720>
  41ff5a:	mov    r10,QWORD PTR [rbx+0x48]
  41ff5e:	mov    QWORD PTR [rbx+0x60],rax
  41ff62:	mov    rax,QWORD PTR [rbx+0x200]
  41ff69:	cmp    QWORD PTR [r10+0x20],0x13
  41ff6e:	mov    QWORD PTR [r14],rax
  41ff71:	mov    QWORD PTR [rbx+0x200],r14
  41ff78:	je     420008 <__flatcc_fb_parse@@Base+0xed8>
  41ff7e:	xor    r9d,r9d
  41ff81:	xor    r8d,r8d
  41ff84:	xor    ecx,ecx
  41ff86:	lea    rdx,[rip+0x263a3]        # 446330 <fb_schema_table_missing@@Base+0x6b0>
  41ff8d:	mov    rsi,r10
  41ff90:	mov    rdi,rbx
  41ff93:	call   41d870 <__flatcc_error_report@@Base>
  41ff98:	mov    rsi,QWORD PTR [rbx+0x48]
  41ff9c:	cmp    QWORD PTR [rsi+0x20],0x3b
  41ffa1:	je     41f4c5 <__flatcc_fb_parse@@Base+0x395>
  41ffa7:	xor    r9d,r9d
  41ffaa:	xor    r8d,r8d
  41ffad:	xor    ecx,ecx
  41ffaf:	lea    rdx,[rip+0x2683f]        # 4467f5 <fb_schema_table_missing@@Base+0xb75>
  41ffb6:	mov    rdi,rbx
  41ffb9:	call   41d870 <__flatcc_error_report@@Base>
  41ffbe:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  41ffc3:	nop    DWORD PTR [rax+rax*1+0x0]
  41ffc8:	lea    r13,[r15+0x2]
  41ffcc:	jmp    41f550 <__flatcc_fb_parse@@Base+0x420>
  41ffd1:	nop    DWORD PTR [rax+0x0]
  41ffd8:	xor    r9d,r9d
  41ffdb:	xor    r8d,r8d
  41ffde:	xor    ecx,ecx
  41ffe0:	lea    rdx,[rip+0x262a9]        # 446290 <fb_schema_table_missing@@Base+0x610>
  41ffe7:	jmp    41ff1f <__flatcc_fb_parse@@Base+0xdef>
  41ffec:	nop    DWORD PTR [rax+0x0]
  41fff0:	xor    r9d,r9d
  41fff3:	xor    r8d,r8d
  41fff6:	xor    ecx,ecx
  41fff8:	lea    rdx,[rip+0x262b9]        # 4462b8 <fb_schema_table_missing@@Base+0x638>
  41ffff:	jmp    41ff1f <__flatcc_fb_parse@@Base+0xdef>
  420004:	nop    DWORD PTR [rax+0x0]
  420008:	mov    rdi,rbx
  42000b:	mov    QWORD PTR [rsp+0x18],r10
  420010:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  420015:	mov    r9d,0x2
  42001b:	mov    WORD PTR [r14+0x18],r9w
  420020:	mov    QWORD PTR [r14+0x8],0x0
  420028:	mov    DWORD PTR [r14+0x10],0x0
  420030:	lea    rsi,[r14+0x8]
  420034:	mov    rdi,rbx
  420037:	call   41df00 <__flatcc_error_report@@Base+0x690>
  42003c:	mov    r10d,DWORD PTR [r14+0x10]
  420040:	test   r10d,r10d
  420043:	mov    r10,QWORD PTR [rsp+0x18]
  420048:	jne    41ff98 <__flatcc_fb_parse@@Base+0xe68>
  42004e:	xor    r9d,r9d
  420051:	xor    r8d,r8d
  420054:	xor    ecx,ecx
  420056:	lea    rdx,[rip+0x262fb]        # 446358 <fb_schema_table_missing@@Base+0x6d8>
  42005d:	mov    rsi,r10
  420060:	mov    rdi,rbx
  420063:	call   41d870 <__flatcc_error_report@@Base>
  420068:	jmp    41ff98 <__flatcc_fb_parse@@Base+0xe68>
  42006d:	nop    DWORD PTR [rax]
  420070:	mov    rsi,rbp
  420073:	mov    rdi,rbx
  420076:	xor    r9d,r9d
  420079:	xor    r8d,r8d
  42007c:	xor    ecx,ecx
  42007e:	lea    rdx,[rip+0x26173]        # 4461f8 <fb_schema_table_missing@@Base+0x578>
  420085:	call   41d870 <__flatcc_error_report@@Base>
  42008a:	mov    esi,0x3b
  42008f:	mov    rdi,rbx
  420092:	call   41d690 <__flatcc_fb_default_error_out@@Base+0x2a0>
  420097:	jmp    41f719 <__flatcc_fb_parse@@Base+0x5e9>
  42009c:	nop    DWORD PTR [rax+0x0]
  4200a0:	xor    r9d,r9d
  4200a3:	xor    r8d,r8d
  4200a6:	xor    ecx,ecx
  4200a8:	lea    rdx,[rip+0x262c9]        # 446378 <fb_schema_table_missing@@Base+0x6f8>
  4200af:	mov    rsi,r14
  4200b2:	mov    rdi,rbx
  4200b5:	call   41d870 <__flatcc_error_report@@Base>
  4200ba:	mov    QWORD PTR [r15+0x8],0x0
  4200c2:	mov    esi,0x7d
  4200c7:	mov    rdi,rbx
  4200ca:	call   41d690 <__flatcc_fb_default_error_out@@Base+0x2a0>
  4200cf:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  4200d4:	nop    DWORD PTR [rax+0x0]
  4200d8:	xor    r9d,r9d
  4200db:	xor    r8d,r8d
  4200de:	xor    ecx,ecx
  4200e0:	lea    rdx,[rip+0x262e1]        # 4463c8 <fb_schema_table_missing@@Base+0x748>
  4200e7:	mov    rsi,r14
  4200ea:	mov    rdi,rbx
  4200ed:	call   41d870 <__flatcc_error_report@@Base>
  4200f2:	mov    QWORD PTR [r15+0x8],0x0
  4200fa:	mov    rdi,rbx
  4200fd:	call   41d630 <__flatcc_fb_default_error_out@@Base+0x240>
  420102:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  420107:	nop    WORD PTR [rax+rax*1+0x0]
  420110:	lea    r13,[r15+0x1]
  420114:	cmp    rbp,r13
  420117:	je     420130 <__flatcc_fb_parse@@Base+0x1000>
  420119:	movzx  edx,BYTE PTR [r15+0x1]
  42011e:	cmp    dl,0x58
  420121:	je     4201f0 <__flatcc_fb_parse@@Base+0x10c0>
  420127:	cmp    dl,0x78
  42012a:	je     4201f0 <__flatcc_fb_parse@@Base+0x10c0>
  420130:	mov    r14,r15
  420133:	nop    DWORD PTR [rax+rax*1+0x0]
  420138:	inc    r14
  42013b:	je     405410 <__sprintf_chk@plt+0x10>
  420141:	movzx  edx,BYTE PTR [r14]
  420145:	lea    ecx,[rdx-0x30]
  420148:	cmp    cl,0x9
  42014b:	jbe    420138 <__flatcc_fb_parse@@Base+0x1008>
  42014d:	cmp    dl,0x2e
  420150:	je     421840 <__flatcc_fb_parse@@Base+0x2710>
  420156:	cmp    rbp,r14
  420159:	je     4211c8 <__flatcc_fb_parse@@Base+0x2098>
  42015f:	and    edx,0xffffffdf
  420162:	mov    rsi,r14
  420165:	cmp    dl,0x45
  420168:	jne    4211c8 <__flatcc_fb_parse@@Base+0x2098>
  42016e:	lea    r13,[r14+0x1]
  420172:	cmp    rbp,r13
  420175:	je     420951 <__flatcc_fb_parse@@Base+0x1821>
  42017b:	movzx  eax,BYTE PTR [r14+0x1]
  420180:	lea    edx,[rax-0x2b]
  420183:	and    edx,0xfd
  420189:	cmovne r13,r14
  42018d:	jmp    420951 <__flatcc_fb_parse@@Base+0x1821>
  420192:	nop    WORD PTR [rax+rax*1+0x0]
  420198:	lea    r13,[r15+0x1]
  42019c:	cmp    rbp,r13
  42019f:	je     4201cb <__flatcc_fb_parse@@Base+0x109b>
  4201a1:	movzx  edx,BYTE PTR [r15+0x1]
  4201a6:	cmp    dl,0x3d
  4201a9:	je     421360 <__flatcc_fb_parse@@Base+0x2230>
  4201af:	cmp    dl,0x7c
  4201b2:	jne    4201cb <__flatcc_fb_parse@@Base+0x109b>
  4201b4:	lea    r13,[r15+0x2]
  4201b8:	mov    rcx,r13
  4201bb:	mov    rdx,r15
  4201be:	mov    esi,0x7c7c
  4201c3:	mov    rdi,rbx
  4201c6:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4201cb:	mov    rdx,r15
  4201ce:	mov    rcx,r13
  4201d1:	mov    esi,0x7c
  4201d6:	mov    rdi,rbx
  4201d9:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4201de:	mov    r15,r13
  4201e1:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4201e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4201f0:	inc    r13
  4201f3:	cmp    rbp,r13
  4201f6:	je     420210 <__flatcc_fb_parse@@Base+0x10e0>
  4201f8:	movzx  edx,BYTE PTR [r13+0x0]
  4201fd:	lea    ecx,[rdx-0x30]
  420200:	cmp    cl,0x9
  420203:	jbe    4201f0 <__flatcc_fb_parse@@Base+0x10c0>
  420205:	or     edx,0x20
  420208:	sub    edx,0x61
  42020b:	cmp    dl,0x5
  42020e:	jbe    4201f0 <__flatcc_fb_parse@@Base+0x10c0>
  420210:	mov    rdx,r15
  420213:	mov    rcx,r13
  420216:	mov    esi,0xe
  42021b:	mov    rdi,rbx
  42021e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  420223:	mov    r15,r13
  420226:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42022b:	nop    DWORD PTR [rax+rax*1+0x0]
  420230:	lea    r13,[r15+0x1]
  420234:	cmp    rbp,r13
  420237:	je     4212d0 <__flatcc_fb_parse@@Base+0x21a0>
  42023d:	movzx  edx,BYTE PTR [r15+0x1]
  420242:	cmp    dl,0x3a
  420245:	je     4213e0 <__flatcc_fb_parse@@Base+0x22b0>
  42024b:	cmp    dl,0x3d
  42024e:	jne    4212d0 <__flatcc_fb_parse@@Base+0x21a0>
  420254:	lea    r13,[r15+0x2]
  420258:	mov    rdx,r15
  42025b:	mov    rcx,r13
  42025e:	mov    esi,0x3d3a
  420263:	mov    rdi,rbx
  420266:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42026b:	mov    r15,r13
  42026e:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  420273:	nop    DWORD PTR [rax+rax*1+0x0]
  420278:	lea    r13,[r15+0x1]
  42027c:	cmp    rbp,r13
  42027f:	je     4202a1 <__flatcc_fb_parse@@Base+0x1171>
  420281:	movzx  edx,BYTE PTR [r15+0x1]
  420286:	cmp    dl,0x3c
  420289:	je     4216f0 <__flatcc_fb_parse@@Base+0x25c0>
  42028f:	cmp    dl,0x3d
  420292:	je     4216d0 <__flatcc_fb_parse@@Base+0x25a0>
  420298:	cmp    dl,0x2d
  42029b:	je     4216b0 <__flatcc_fb_parse@@Base+0x2580>
  4202a1:	mov    rdx,r15
  4202a4:	mov    rcx,r13
  4202a7:	mov    esi,0x3c
  4202ac:	mov    rdi,rbx
  4202af:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4202b4:	mov    r15,r13
  4202b7:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4202bc:	nop    DWORD PTR [rax+0x0]
  4202c0:	lea    r13,[r15+0x1]
  4202c4:	cmp    rbp,r13
  4202c7:	je     4212b0 <__flatcc_fb_parse@@Base+0x2180>
  4202cd:	movzx  edx,BYTE PTR [r15+0x1]
  4202d2:	cmp    dl,0x2b
  4202d5:	je     4213c0 <__flatcc_fb_parse@@Base+0x2290>
  4202db:	cmp    dl,0x3d
  4202de:	jne    4212b0 <__flatcc_fb_parse@@Base+0x2180>
  4202e4:	lea    r13,[r15+0x2]
  4202e8:	mov    rdx,r15
  4202eb:	mov    rcx,r13
  4202ee:	mov    esi,0x3d2b
  4202f3:	mov    rdi,rbx
  4202f6:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4202fb:	mov    r15,r13
  4202fe:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  420303:	nop    DWORD PTR [rax+rax*1+0x0]
  420308:	lea    r13,[r15+0x1]
  42030c:	cmp    rbp,r13
  42030f:	je     420331 <__flatcc_fb_parse@@Base+0x1201>
  420311:	movzx  edx,BYTE PTR [r15+0x1]
  420316:	cmp    dl,0x3d
  420319:	je     421760 <__flatcc_fb_parse@@Base+0x2630>
  42031f:	cmp    dl,0x3e
  420322:	je     421738 <__flatcc_fb_parse@@Base+0x2608>
  420328:	cmp    dl,0x2d
  42032b:	je     421690 <__flatcc_fb_parse@@Base+0x2560>
  420331:	mov    rdx,r15
  420334:	mov    rcx,r13
  420337:	mov    esi,0x2d
  42033c:	mov    rdi,rbx
  42033f:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  420344:	mov    r15,r13
  420347:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42034c:	nop    DWORD PTR [rax+0x0]
  420350:	lea    r13,[r15+0x1]
  420354:	cmp    rbp,r13
  420357:	je     421310 <__flatcc_fb_parse@@Base+0x21e0>
  42035d:	movzx  edx,BYTE PTR [r15+0x1]
  420362:	cmp    dl,0x2e
  420365:	je     421330 <__flatcc_fb_parse@@Base+0x2200>
  42036b:	jl     421310 <__flatcc_fb_parse@@Base+0x21e0>
  420371:	sub    edx,0x30
  420374:	mov    rsi,r15
  420377:	cmp    dl,0x9
  42037a:	jbe    420399 <__flatcc_fb_parse@@Base+0x1269>
  42037c:	jmp    421310 <__flatcc_fb_parse@@Base+0x21e0>
  420381:	nop    DWORD PTR [rax+0x0]
  420388:	movzx  edx,BYTE PTR [r13+0x0]
  42038d:	lea    ecx,[rdx-0x30]
  420390:	cmp    cl,0x9
  420393:	ja     421410 <__flatcc_fb_parse@@Base+0x22e0>
  420399:	inc    r13
  42039c:	cmp    rbp,r13
  42039f:	jne    420388 <__flatcc_fb_parse@@Base+0x1258>
  4203a1:	cmp    r13,rsi
  4203a4:	je     4211c1 <__flatcc_fb_parse@@Base+0x2091>
  4203aa:	mov    rdx,r15
  4203ad:	mov    rcx,r13
  4203b0:	mov    esi,0xb
  4203b5:	mov    rdi,rbx
  4203b8:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4203bd:	mov    r15,r13
  4203c0:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4203c5:	nop    DWORD PTR [rax]
  4203c8:	lea    r13,[r15+0x1]
  4203cc:	cmp    rbp,r13
  4203cf:	je     4203f1 <__flatcc_fb_parse@@Base+0x12c1>
  4203d1:	movzx  edx,BYTE PTR [r15+0x1]
  4203d6:	cmp    dl,0x2f
  4203d9:	je     41f230 <__flatcc_fb_parse@@Base+0x100>
  4203df:	cmp    dl,0x3d
  4203e2:	je     4215d0 <__flatcc_fb_parse@@Base+0x24a0>
  4203e8:	cmp    dl,0x2a
  4203eb:	je     421428 <__flatcc_fb_parse@@Base+0x22f8>
  4203f1:	mov    rdx,r15
  4203f4:	mov    rcx,r13
  4203f7:	mov    esi,0x2f
  4203fc:	mov    rdi,rbx
  4203ff:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  420404:	mov    r15,r13
  420407:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42040c:	nop    DWORD PTR [rax+0x0]
  420410:	lea    r13,[r15+0x1]
  420414:	cmp    rbp,r13
  420417:	je     421290 <__flatcc_fb_parse@@Base+0x2160>
  42041d:	movzx  edx,BYTE PTR [r15+0x1]
  420422:	cmp    dl,0x3d
  420425:	je     4213a0 <__flatcc_fb_parse@@Base+0x2270>
  42042b:	cmp    dl,0x3e
  42042e:	jne    421290 <__flatcc_fb_parse@@Base+0x2160>
  420434:	lea    r13,[r15+0x2]
  420438:	cmp    rbp,r13
  42043b:	je     421210 <__flatcc_fb_parse@@Base+0x20e0>
  420441:	movzx  edx,BYTE PTR [r15+0x2]
  420446:	cmp    dl,0x3d
  420449:	je     421870 <__flatcc_fb_parse@@Base+0x2740>
  42044f:	cmp    dl,0x3e
  420452:	jne    421210 <__flatcc_fb_parse@@Base+0x20e0>
  420458:	lea    r13,[r15+0x3]
  42045c:	cmp    rbp,r13
  42045f:	je     42046c <__flatcc_fb_parse@@Base+0x133c>
  420461:	cmp    BYTE PTR [r15+0x3],0x3d
  420466:	je     421d20 <__flatcc_fb_parse@@Base+0x2bf0>
  42046c:	mov    rdx,r15
  42046f:	mov    rcx,r13
  420472:	mov    esi,0x3e3e3e
  420477:	mov    rdi,rbx
  42047a:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42047f:	mov    r15,r13
  420482:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  420487:	nop    WORD PTR [rax+rax*1+0x0]
  420490:	movsx  rdx,sil
  420494:	mov    rsi,rdx
  420497:	lea    r14,[r15+0x1]
  42049b:	shl    rsi,0x8
  42049f:	mov    ecx,0x31
  4204a4:	cmp    rbp,r14
  4204a7:	je     4204c0 <__flatcc_fb_parse@@Base+0x1390>
  4204a9:	movzx  r10d,BYTE PTR [r15+0x1]
  4204ae:	lea    rdi,[rip+0x266ab]        # 446b60 <fb_schema_table_missing@@Base+0xee0>
  4204b5:	cmp    BYTE PTR [rdi+r10*1],0x0
  4204ba:	jne    4217f8 <__flatcc_fb_parse@@Base+0x26c8>
  4204c0:	or     rcx,rsi
  4204c3:	mov    rsi,rdx
  4204c6:	shl    rsi,0x18
  4204ca:	or     rsi,rcx
  4204cd:	cmp    rsi,0x6570723b
  4204d4:	je     421a5a <__flatcc_fb_parse@@Base+0x292a>
  4204da:	ja     420b70 <__flatcc_fb_parse@@Base+0x1a40>
  4204e0:	cmp    rsi,0x38697535
  4204e7:	je     421a36 <__flatcc_fb_parse@@Base+0x2906>
  4204ed:	ja     420b10 <__flatcc_fb_parse@@Base+0x19e0>
  4204f3:	cmp    rsi,0x34697536
  4204fa:	je     421a10 <__flatcc_fb_parse@@Base+0x28e0>
  420500:	jbe    420ac0 <__flatcc_fb_parse@@Base+0x1990>
  420506:	cmp    rsi,0x346e6935
  42050d:	je     4219c0 <__flatcc_fb_parse@@Base+0x2890>
  420513:	jbe    420a80 <__flatcc_fb_parse@@Base+0x1950>
  420519:	cmp    rsi,0x36697536
  420520:	jne    420e50 <__flatcc_fb_parse@@Base+0x1d20>
  420526:	cmp    DWORD PTR [r15],0x746e6975
  42052d:	je     42122b <__flatcc_fb_parse@@Base+0x20fb>
  420533:	nop    DWORD PTR [rax+rax*1+0x0]
  420538:	mov    esi,0x9
  42053d:	mov    rdx,r15
  420540:	mov    rcx,r14
  420543:	mov    rdi,rbx
  420546:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42054b:	mov    r15,r14
  42054e:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  420553:	nop    DWORD PTR [rax+rax*1+0x0]
  420558:	lea    rdx,[r15+0x1]
  42055c:	cmp    rbp,rdx
  42055f:	je     420568 <__flatcc_fb_parse@@Base+0x1438>
  420561:	cmp    BYTE PTR [r15+0x1],0xd
  420566:	je     420590 <__flatcc_fb_parse@@Base+0x1460>
  420568:	inc    QWORD PTR [rbx+0x78]
  42056c:	mov    QWORD PTR [rbx+0x70],rdx
  420570:	mov    r15,rdx
  420573:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  420578:	nop    DWORD PTR [rax+rax*1+0x0]
  420580:	lea    rdx,[r15+0x1]
  420584:	cmp    rbp,rdx
  420587:	je     420568 <__flatcc_fb_parse@@Base+0x1438>
  420589:	cmp    BYTE PTR [r15+0x1],0xa
  42058e:	jne    420568 <__flatcc_fb_parse@@Base+0x1438>
  420590:	lea    rdx,[r15+0x2]
  420594:	jmp    420568 <__flatcc_fb_parse@@Base+0x1438>
  420596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4205a0:	lea    r13,[r15+0x1]
  4205a4:	movsx  rsi,sil
  4205a8:	mov    rdx,r15
  4205ab:	mov    rcx,r13
  4205ae:	mov    rdi,rbx
  4205b1:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4205b6:	mov    r15,r13
  4205b9:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4205be:	xchg   ax,ax
  4205c0:	lea    r13,[r15+0x1]
  4205c4:	cmp    rbp,r13
  4205c7:	je     4210d7 <__flatcc_fb_parse@@Base+0x1fa7>
  4205cd:	movzx  edx,BYTE PTR [r15+0x1]
  4205d2:	cmp    dl,0x26
  4205d5:	je     4210c0 <__flatcc_fb_parse@@Base+0x1f90>
  4205db:	cmp    dl,0x3d
  4205de:	jne    4210d7 <__flatcc_fb_parse@@Base+0x1fa7>
  4205e4:	lea    r13,[r15+0x2]
  4205e8:	mov    rdx,r15
  4205eb:	mov    rcx,r13
  4205ee:	mov    esi,0x3d26
  4205f3:	mov    rdi,rbx
  4205f6:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4205fb:	mov    r15,r13
  4205fe:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  420603:	nop    DWORD PTR [rax+rax*1+0x0]
  420608:	lea    r13,[r15+0x1]
  42060c:	cmp    rbp,r13
  42060f:	je     4212f0 <__flatcc_fb_parse@@Base+0x21c0>
  420615:	movzx  edx,BYTE PTR [r15+0x1]
  42061a:	cmp    dl,0x2a
  42061d:	je     421380 <__flatcc_fb_parse@@Base+0x2250>
  420623:	cmp    dl,0x3d
  420626:	jne    4212f0 <__flatcc_fb_parse@@Base+0x21c0>
  42062c:	mov    rdx,r15
  42062f:	mov    esi,0x3d2a
  420634:	mov    rcx,r13
  420637:	mov    rdi,rbx
  42063a:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42063f:	movzx  esi,BYTE PTR [r15+0x1]
  420644:	mov    r15,r13
  420647:	jmp    41f1f8 <__flatcc_fb_parse@@Base+0xc8>
  42064c:	nop    DWORD PTR [rax+0x0]
  420650:	lea    r13,[r15+0x1]
  420654:	movsx  rsi,sil
  420658:	cmp    rbp,r13
  42065b:	je     4205a8 <__flatcc_fb_parse@@Base+0x1478>
  420661:	cmp    BYTE PTR [r15+0x1],0x3d
  420666:	jne    4205a8 <__flatcc_fb_parse@@Base+0x1478>
  42066c:	lea    r13,[r15+0x2]
  420670:	or     rsi,0x3d00
  420677:	jmp    4205a8 <__flatcc_fb_parse@@Base+0x1478>
  42067c:	nop    DWORD PTR [rax+0x0]
  420680:	lea    r13,[r15+0x1]
  420684:	cmp    rbp,r13
  420687:	je     42115f <__flatcc_fb_parse@@Base+0x202f>
  42068d:	movzx  edx,BYTE PTR [r15+0x1]
  420692:	cmp    dl,0x3d
  420695:	je     421138 <__flatcc_fb_parse@@Base+0x2008>
  42069b:	cmp    dl,0x3e
  42069e:	jne    42115f <__flatcc_fb_parse@@Base+0x202f>
  4206a4:	lea    r13,[r15+0x2]
  4206a8:	mov    rdx,r15
  4206ab:	mov    rcx,r13
  4206ae:	mov    esi,0x3e3d
  4206b3:	mov    rdi,rbx
  4206b6:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4206bb:	mov    r15,r13
  4206be:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4206c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4206c8:	mov    rdi,rbx
  4206cb:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  4206d0:	mov    QWORD PTR [rbx+0x340],0x0
  4206db:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  4206e0:	xor    r9d,r9d
  4206e3:	xor    r8d,r8d
  4206e6:	xor    ecx,ecx
  4206e8:	lea    rdx,[rip+0x26134]        # 446823 <fb_schema_table_missing@@Base+0xba3>
  4206ef:	mov    rsi,r14
  4206f2:	mov    rdi,rbx
  4206f5:	call   41d870 <__flatcc_error_report@@Base>
  4206fa:	jmp    4200c2 <__flatcc_fb_parse@@Base+0xf92>
  4206ff:	nop
  420700:	xor    r9d,r9d
  420703:	xor    r8d,r8d
  420706:	xor    ecx,ecx
  420708:	lea    rdx,[rip+0x260b3]        # 4467c2 <fb_schema_table_missing@@Base+0xb42>
  42070f:	mov    rdi,rbx
  420712:	call   41d870 <__flatcc_error_report@@Base>
  420717:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  42071c:	nop    DWORD PTR [rax+0x0]
  420720:	mov    esi,0x1
  420725:	mov    edi,0x10000
  42072a:	call   405320 <calloc@plt>
  42072f:	test   rax,rax
  420732:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  420738:	mov    rdx,QWORD PTR [rbx+0x58]
  42073c:	lea    rsi,[rax+0x10]
  420740:	mov    QWORD PTR [rax],rdx
  420743:	lea    rdx,[rax+0x10000]
  42074a:	mov    QWORD PTR [rbx+0x58],rax
  42074e:	mov    QWORD PTR [rbx+0x50],rdx
  420752:	add    rax,0xe0
  420758:	jmp    41fddd <__flatcc_fb_parse@@Base+0xcad>
  42075d:	nop    DWORD PTR [rax]
  420760:	mov    esi,0x1
  420765:	mov    edi,0x10000
  42076a:	call   405320 <calloc@plt>
  42076f:	test   rax,rax
  420772:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  420778:	mov    rdx,QWORD PTR [rbx+0x58]
  42077c:	lea    rsi,[rax+0x10]
  420780:	mov    QWORD PTR [rax],rdx
  420783:	lea    rdx,[rax+0x10000]
  42078a:	mov    QWORD PTR [rbx+0x58],rax
  42078e:	mov    QWORD PTR [rbx+0x50],rdx
  420792:	add    rax,0xe0
  420798:	jmp    41fce5 <__flatcc_fb_parse@@Base+0xbb5>
  42079d:	nop    DWORD PTR [rax]
  4207a0:	mov    rsi,QWORD PTR [rbx+0x48]
  4207a4:	mov    r9d,DWORD PTR [rbx+0x210]
  4207ab:	mov    r8,QWORD PTR [rbx+0x208]
  4207b2:	xor    ecx,ecx
  4207b4:	lea    rdx,[rip+0x25feb]        # 4467a6 <fb_schema_table_missing@@Base+0xb26>
  4207bb:	mov    rdi,rbx
  4207be:	call   41d870 <__flatcc_error_report@@Base>
  4207c3:	jmp    41f431 <__flatcc_fb_parse@@Base+0x301>
  4207c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4207d0:	mov    esi,0x1
  4207d5:	mov    edi,0x10000
  4207da:	call   405320 <calloc@plt>
  4207df:	test   rax,rax
  4207e2:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  4207e8:	mov    rdx,QWORD PTR [rbx+0x58]
  4207ec:	lea    rsi,[rax+0x10]
  4207f0:	mov    QWORD PTR [rax],rdx
  4207f3:	lea    rdx,[rax+0x10000]
  4207fa:	mov    QWORD PTR [rbx+0x58],rax
  4207fe:	mov    QWORD PTR [rbx+0x50],rdx
  420802:	add    rax,0xe0
  420808:	jmp    41fbe5 <__flatcc_fb_parse@@Base+0xab5>
  42080d:	nop    DWORD PTR [rax]
  420810:	mov    esi,0x1
  420815:	mov    edi,0x10000
  42081a:	call   405320 <calloc@plt>
  42081f:	test   rax,rax
  420822:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  420828:	mov    rdx,QWORD PTR [rbx+0x58]
  42082c:	lea    r15,[rax+0x10]
  420830:	mov    QWORD PTR [rax],rdx
  420833:	lea    rdx,[rax+0x10000]
  42083a:	mov    QWORD PTR [rbx+0x58],rax
  42083e:	mov    QWORD PTR [rbx+0x50],rdx
  420842:	add    rax,0xe0
  420848:	jmp    41f97d <__flatcc_fb_parse@@Base+0x84d>
  42084d:	nop    DWORD PTR [rax]
  420850:	mov    esi,0x1
  420855:	mov    edi,0x10000
  42085a:	call   405320 <calloc@plt>
  42085f:	test   rax,rax
  420862:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  420868:	mov    rdx,QWORD PTR [rbx+0x58]
  42086c:	lea    r14,[rax+0x10]
  420870:	mov    QWORD PTR [rax],rdx
  420873:	lea    rdx,[rax+0x10000]
  42087a:	mov    QWORD PTR [rbx+0x58],rax
  42087e:	mov    QWORD PTR [rbx+0x50],rdx
  420882:	add    rax,0x40
  420886:	jmp    41ff5a <__flatcc_fb_parse@@Base+0xe2a>
  42088b:	nop    DWORD PTR [rax+rax*1+0x0]
  420890:	mov    esi,0x1
  420895:	mov    edi,0x10000
  42089a:	call   405320 <calloc@plt>
  42089f:	test   rax,rax
  4208a2:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  4208a8:	mov    rdx,QWORD PTR [rbx+0x58]
  4208ac:	lea    r15,[rax+0x10]
  4208b0:	mov    QWORD PTR [rax],rdx
  4208b3:	lea    rdx,[rax+0x10000]
  4208ba:	mov    QWORD PTR [rbx+0x58],rax
  4208be:	mov    QWORD PTR [rbx+0x50],rdx
  4208c2:	add    rax,0xe0
  4208c8:	jmp    41f7ad <__flatcc_fb_parse@@Base+0x67d>
  4208cd:	nop    DWORD PTR [rax]
  4208d0:	mov    rdi,rbx
  4208d3:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  4208d8:	lea    rsi,[r15+0x48]
  4208dc:	mov    rdi,rbx
  4208df:	call   41dba0 <__flatcc_error_report@@Base+0x330>
  4208e4:	cmp    WORD PTR [r15+0x58],0x8
  4208ea:	mov    rsi,QWORD PTR [r15+0x48]
  4208ee:	jne    420920 <__flatcc_fb_parse@@Base+0x17f0>
  4208f0:	mov    rax,QWORD PTR [rsi+0x20]
  4208f4:	add    rax,0x3e4
  4208fa:	cmp    rax,0x15
  4208fe:	ja     41f82f <__flatcc_fb_parse@@Base+0x6ff>
  420904:	mov    edx,0x1
  420909:	shlx   rax,rdx,rax
  42090e:	test   eax,0x200803
  420913:	je     41f82f <__flatcc_fb_parse@@Base+0x6ff>
  420919:	nop    DWORD PTR [rax+0x0]
  420920:	xor    r9d,r9d
  420923:	xor    r8d,r8d
  420926:	xor    ecx,ecx
  420928:	lea    rdx,[rip+0x25edd]        # 44680c <fb_schema_table_missing@@Base+0xb8c>
  42092f:	mov    rdi,rbx
  420932:	call   41d870 <__flatcc_error_report@@Base>
  420937:	jmp    41f82f <__flatcc_fb_parse@@Base+0x6ff>
  42093c:	nop    DWORD PTR [rax+0x0]
  420940:	movzx  eax,BYTE PTR [r13+0x0]
  420945:	lea    edx,[rax-0x30]
  420948:	cmp    dl,0x9
  42094b:	ja     4203a1 <__flatcc_fb_parse@@Base+0x1271>
  420951:	inc    r13
  420954:	cmp    rbp,r13
  420957:	jne    420940 <__flatcc_fb_parse@@Base+0x1810>
  420959:	jmp    4203a1 <__flatcc_fb_parse@@Base+0x1271>
  42095e:	xchg   ax,ax
  420960:	lea    r14,[r15+0x1]
  420964:	sub    esi,0x20
  420967:	mov    rcx,r14
  42096a:	mov    rdx,r15
  42096d:	cmp    sil,0x5e
  420971:	jbe    420f40 <__flatcc_fb_parse@@Base+0x1e10>
  420977:	mov    esi,0x5
  42097c:	mov    rdi,rbx
  42097f:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  420984:	mov    r15,r14
  420987:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42098c:	nop    DWORD PTR [rax+0x0]
  420990:	mov    rcx,r15
  420993:	mov    rdx,r15
  420996:	mov    esi,0x17
  42099b:	mov    rdi,rbx
  42099e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4209a3:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4209a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4209b0:	mov    rdx,QWORD PTR [rbx+0x200]
  4209b7:	test   rdx,rdx
  4209ba:	je     4209d1 <__flatcc_fb_parse@@Base+0x18a1>
  4209bc:	xor    esi,esi
  4209be:	jmp    4209c3 <__flatcc_fb_parse@@Base+0x1893>
  4209c0:	mov    rdx,rcx
  4209c3:	mov    rcx,QWORD PTR [rdx]
  4209c6:	mov    QWORD PTR [rdx],rsi
  4209c9:	mov    rsi,rdx
  4209cc:	test   rcx,rcx
  4209cf:	jne    4209c0 <__flatcc_fb_parse@@Base+0x1890>
  4209d1:	mov    QWORD PTR [rbx+0x200],rdx
  4209d8:	mov    rdx,QWORD PTR [rbx+0x238]
  4209df:	test   rdx,rdx
  4209e2:	je     420a01 <__flatcc_fb_parse@@Base+0x18d1>
  4209e4:	xor    esi,esi
  4209e6:	jmp    4209f3 <__flatcc_fb_parse@@Base+0x18c3>
  4209e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4209f0:	mov    rdx,rcx
  4209f3:	mov    rcx,QWORD PTR [rdx]
  4209f6:	mov    QWORD PTR [rdx],rsi
  4209f9:	mov    rsi,rdx
  4209fc:	test   rcx,rcx
  4209ff:	jne    4209f0 <__flatcc_fb_parse@@Base+0x18c0>
  420a01:	mov    QWORD PTR [rbx+0x238],rdx
  420a08:	jmp    41f508 <__flatcc_fb_parse@@Base+0x3d8>
  420a0d:	nop    DWORD PTR [rax]
  420a10:	mov    rdi,rbx
  420a13:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  420a18:	mov    r13,QWORD PTR [rbx+0x48]
  420a1c:	mov    rax,QWORD PTR [r13+0x20]
  420a20:	cmp    rax,0x7d
  420a24:	je     41f912 <__flatcc_fb_parse@@Base+0x7e2>
  420a2a:	mov    QWORD PTR [rbx+0x40],0x0
  420a32:	cmp    rax,0x9
  420a36:	je     41f861 <__flatcc_fb_parse@@Base+0x731>
  420a3c:	xor    r9d,r9d
  420a3f:	xor    r8d,r8d
  420a42:	xor    ecx,ecx
  420a44:	lea    rdx,[rip+0x25df6]        # 446841 <fb_schema_table_missing@@Base+0xbc1>
  420a4b:	mov    rsi,r13
  420a4e:	mov    rdi,rbx
  420a51:	call   41d870 <__flatcc_error_report@@Base>
  420a56:	jmp    4200c2 <__flatcc_fb_parse@@Base+0xf92>
  420a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  420a60:	xor    r9d,r9d
  420a63:	xor    r8d,r8d
  420a66:	xor    ecx,ecx
  420a68:	lea    rdx,[rip+0x257b9]        # 446228 <fb_schema_table_missing@@Base+0x5a8>
  420a6f:	mov    rdi,rbx
  420a72:	call   41d870 <__flatcc_error_report@@Base>
  420a77:	jmp    41f77d <__flatcc_fb_parse@@Base+0x64d>
  420a7c:	nop    DWORD PTR [rax+0x0]
  420a80:	cmp    rsi,0x346c6637
  420a87:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420a8d:	cmp    DWORD PTR [r15],0x616f6c66
  420a94:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420a9a:	cmp    WORD PTR [r15+0x4],0x3674
  420aa1:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420aa7:	cmp    BYTE PTR [r15+0x6],0x34
  420aac:	mov    rsi,0xfffffffffffffc1d
  420ab3:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420ab9:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420abe:	xchg   ax,ax
  420ac0:	cmp    rsi,0x326c6637
  420ac7:	je     421ac0 <__flatcc_fb_parse@@Base+0x2990>
  420acd:	cmp    rsi,0x326e6935
  420ad4:	je     421c10 <__flatcc_fb_parse@@Base+0x2ae0>
  420ada:	cmp    rsi,0x32697536
  420ae1:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420ae7:	cmp    DWORD PTR [r15],0x746e6975
  420aee:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420af4:	cmp    WORD PTR [r15+0x4],0x3233
  420afb:	mov    rsi,0xfffffffffffffc2d
  420b02:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420b08:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420b0d:	nop    DWORD PTR [rax]
  420b10:	cmp    rsi,0x65617435
  420b17:	je     421a98 <__flatcc_fb_parse@@Base+0x2968>
  420b1d:	jbe    420c48 <__flatcc_fb_parse@@Base+0x1b18>
  420b23:	cmp    rsi,0x656e6937
  420b2a:	je     421b20 <__flatcc_fb_parse@@Base+0x29f0>
  420b30:	jbe    420c10 <__flatcc_fb_parse@@Base+0x1ae0>
  420b36:	cmp    rsi,0x656f6436
  420b3d:	jne    420bd8 <__flatcc_fb_parse@@Base+0x1aa8>
  420b43:	cmp    DWORD PTR [r15],0x62756f64
  420b4a:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420b50:	cmp    WORD PTR [r15+0x4],0x656c
  420b57:	mov    rsi,0xfffffffffffffc31
  420b5e:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420b64:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420b69:	nop    DWORD PTR [rax+0x0]
  420b70:	cmp    rsi,0x6e69663e
  420b77:	je     421ce4 <__flatcc_fb_parse@@Base+0x2bb4>
  420b7d:	ja     420d08 <__flatcc_fb_parse@@Base+0x1bd8>
  420b83:	cmp    rsi,0x676c7535
  420b8a:	je     421cc0 <__flatcc_fb_parse@@Base+0x2b90>
  420b90:	jbe    420cc0 <__flatcc_fb_parse@@Base+0x1b90>
  420b96:	cmp    rsi,0x67747336
  420b9d:	je     421c90 <__flatcc_fb_parse@@Base+0x2b60>
  420ba3:	jbe    420d60 <__flatcc_fb_parse@@Base+0x1c30>
  420ba9:	cmp    rsi,0x6c6f6234
  420bb0:	jne    420c90 <__flatcc_fb_parse@@Base+0x1b60>
  420bb6:	cmp    DWORD PTR [r15],0x6c6f6f62
  420bbd:	mov    esi,0x9
  420bc2:	mov    rdx,0xfffffffffffffc19
  420bc9:	cmove  rsi,rdx
  420bcd:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420bd2:	nop    WORD PTR [rax+rax*1+0x0]
  420bd8:	cmp    rsi,0x656f7239
  420bdf:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420be5:	movabs rdx,0x7079745f746f6f72
  420bef:	cmp    QWORD PTR [r15],rdx
  420bf2:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420bf8:	cmp    BYTE PTR [r15+0x8],0x65
  420bfd:	mov    rsi,0xfffffffffffffc38
  420c04:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420c0a:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420c0f:	nop
  420c10:	cmp    rsi,0x65627535
  420c17:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420c1d:	cmp    DWORD PTR [r15],0x74796275
  420c24:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420c2a:	cmp    BYTE PTR [r15+0x4],0x65
  420c2f:	mov    rsi,0xfffffffffffffc2a
  420c36:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420c3c:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420c41:	nop    DWORD PTR [rax+0x0]
  420c48:	cmp    rsi,0x65616635
  420c4f:	je     421c68 <__flatcc_fb_parse@@Base+0x2b38>
  420c55:	cmp    rsi,0x65616e39
  420c5c:	je     421c38 <__flatcc_fb_parse@@Base+0x2b08>
  420c62:	cmp    rsi,0x386e6934
  420c69:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420c6f:	cmp    DWORD PTR [r15],0x38746e69
  420c76:	mov    esi,0x9
  420c7b:	mov    rdx,0xfffffffffffffc1f
  420c82:	cmove  rsi,rdx
  420c86:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420c8b:	nop    DWORD PTR [rax+rax*1+0x0]
  420c90:	cmp    rsi,0x6d6e6534
  420c97:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420c9d:	cmp    DWORD PTR [r15],0x6d756e65
  420ca4:	mov    esi,0x9
  420ca9:	mov    rdx,0xfffffffffffffc1b
  420cb0:	cmove  rsi,rdx
  420cb4:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420cb9:	nop    DWORD PTR [rax+0x0]
  420cc0:	cmp    rsi,0x65746139
  420cc7:	je     421bc0 <__flatcc_fb_parse@@Base+0x2a90>
  420ccd:	cmp    rsi,0x65796234
  420cd4:	je     421bf0 <__flatcc_fb_parse@@Base+0x2ac0>
  420cda:	cmp    rsi,0x65727434
  420ce1:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420ce7:	cmp    DWORD PTR [r15],0x65757274
  420cee:	mov    esi,0x9
  420cf3:	mov    rdx,0xfffffffffffffc24
  420cfa:	cmove  rsi,rdx
  420cfe:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420d03:	nop    DWORD PTR [rax+rax*1+0x0]
  420d08:	cmp    rsi,0x74697534
  420d0f:	je     421ba0 <__flatcc_fb_parse@@Base+0x2a70>
  420d15:	jbe    420e00 <__flatcc_fb_parse@@Base+0x1cd0>
  420d1b:	cmp    rsi,0x746e6933
  420d22:	je     421af8 <__flatcc_fb_parse@@Base+0x29c8>
  420d28:	jbe    420dc8 <__flatcc_fb_parse@@Base+0x1c98>
  420d2e:	cmp    rsi,0x74737536
  420d35:	jne    420d90 <__flatcc_fb_parse@@Base+0x1c60>
  420d37:	cmp    DWORD PTR [r15],0x6f687375
  420d3e:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420d44:	cmp    WORD PTR [r15+0x4],0x7472
  420d4b:	mov    rsi,0xfffffffffffffc34
  420d52:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420d58:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420d5d:	nop    DWORD PTR [rax]
  420d60:	cmp    rsi,0x676f6c34
  420d67:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420d6d:	cmp    DWORD PTR [r15],0x676e6f6c
  420d74:	mov    esi,0x9
  420d79:	mov    rdx,0xfffffffffffffc23
  420d80:	cmove  rsi,rdx
  420d84:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420d89:	nop    DWORD PTR [rax+0x0]
  420d90:	cmp    rsi,0x74747336
  420d97:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420d9d:	cmp    DWORD PTR [r15],0x75727473
  420da4:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420daa:	cmp    WORD PTR [r15+0x4],0x7463
  420db1:	mov    rsi,0xfffffffffffffc33
  420db8:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420dbe:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420dc3:	nop    DWORD PTR [rax+rax*1+0x0]
  420dc8:	cmp    rsi,0x746c6635
  420dcf:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420dd5:	cmp    DWORD PTR [r15],0x616f6c66
  420ddc:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420de2:	cmp    BYTE PTR [r15+0x4],0x74
  420de7:	mov    rsi,0xfffffffffffffc27
  420dee:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420df4:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420df9:	nop    DWORD PTR [rax+0x0]
  420e00:	cmp    rsi,0x7269663f
  420e07:	je     421b58 <__flatcc_fb_parse@@Base+0x2a28>
  420e0d:	cmp    rsi,0x74687335
  420e14:	je     4219e8 <__flatcc_fb_parse@@Base+0x28b8>
  420e1a:	cmp    rsi,0x6e6e7535
  420e21:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420e27:	cmp    DWORD PTR [r15],0x6f696e75
  420e2e:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420e34:	cmp    BYTE PTR [r15+0x4],0x6e
  420e39:	mov    rsi,0xfffffffffffffc30
  420e40:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420e46:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  420e50:	cmp    rsi,0x366e6935
  420e57:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420e5d:	cmp    DWORD PTR [r15],0x31746e69
  420e64:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420e6a:	cmp    BYTE PTR [r15+0x4],0x36
  420e6f:	mov    rsi,0xfffffffffffffc20
  420e76:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  420e7c:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  420e81:	nop    DWORD PTR [rax+0x0]
  420e88:	mov    rdi,rbx
  420e8b:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  420e90:	mov    r12,QWORD PTR [rbx+0x48]
  420e94:	mov    rdx,QWORD PTR [r12+0x20]
  420e99:	jmp    41f311 <__flatcc_fb_parse@@Base+0x1e1>
  420e9e:	xchg   ax,ax
  420ea0:	xor    r9d,r9d
  420ea3:	xor    r8d,r8d
  420ea6:	xor    ecx,ecx
  420ea8:	mov    rdx,r13
  420eab:	mov    rsi,r12
  420eae:	mov    rdi,rbx
  420eb1:	call   41d870 <__flatcc_error_report@@Base>
  420eb6:	jmp    41f6f0 <__flatcc_fb_parse@@Base+0x5c0>
  420ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  420ec0:	mov    esi,0x1
  420ec5:	mov    edi,0x10000
  420eca:	call   405320 <calloc@plt>
  420ecf:	test   rax,rax
  420ed2:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  420ed8:	mov    rdx,QWORD PTR [rbx+0x58]
  420edc:	lea    rsi,[rax+0x10]
  420ee0:	mov    QWORD PTR [rax],rdx
  420ee3:	lea    rdx,[rax+0x10000]
  420eea:	mov    QWORD PTR [rbx+0x58],rax
  420eee:	mov    QWORD PTR [rbx+0x50],rdx
  420ef2:	add    rax,0x30
  420ef6:	jmp    41f72b <__flatcc_fb_parse@@Base+0x5fb>
  420efb:	nop    DWORD PTR [rax+rax*1+0x0]
  420f00:	mov    esi,0x1
  420f05:	mov    edi,0x10000
  420f0a:	call   405320 <calloc@plt>
  420f0f:	test   rax,rax
  420f12:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  420f18:	mov    rdx,QWORD PTR [rbx+0x58]
  420f1c:	lea    rsi,[rax+0x10]
  420f20:	mov    QWORD PTR [rax],rdx
  420f23:	lea    rdx,[rax+0x10000]
  420f2a:	mov    QWORD PTR [rbx+0x58],rax
  420f2e:	mov    QWORD PTR [rbx+0x50],rdx
  420f32:	add    rax,0xc0
  420f38:	jmp    41f88b <__flatcc_fb_parse@@Base+0x75b>
  420f3d:	nop    DWORD PTR [rax]
  420f40:	mov    esi,0x8
  420f45:	mov    rdi,rbx
  420f48:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  420f4d:	mov    r15,r14
  420f50:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  420f55:	nop    DWORD PTR [rax]
  420f58:	mov    rdi,rbx
  420f5b:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  420f60:	mov    rax,QWORD PTR [rbx+0x48]
  420f64:	mov    QWORD PTR [rsp+0x18],rax
  420f69:	mov    rax,QWORD PTR [rax+0x20]
  420f6d:	cmp    rax,0x7d
  420f71:	je     41fb1f <__flatcc_fb_parse@@Base+0x9ef>
  420f77:	mov    QWORD PTR [rbx+0x40],0x0
  420f7f:	cmp    rax,0x9
  420f83:	je     41fa27 <__flatcc_fb_parse@@Base+0x8f7>
  420f89:	mov    rsi,QWORD PTR [rsp+0x18]
  420f8e:	xor    r9d,r9d
  420f91:	xor    r8d,r8d
  420f94:	xor    ecx,ecx
  420f96:	lea    rdx,[rip+0x258da]        # 446877 <fb_schema_table_missing@@Base+0xbf7>
  420f9d:	mov    rdi,rbx
  420fa0:	call   41d870 <__flatcc_error_report@@Base>
  420fa5:	jmp    4200fa <__flatcc_fb_parse@@Base+0xfca>
  420faa:	nop    WORD PTR [rax+rax*1+0x0]
  420fb0:	mov    rdi,rbx
  420fb3:	call   41d520 <__flatcc_fb_default_error_out@@Base+0x130>
  420fb8:	mov    rax,QWORD PTR [r13+0x18]
  420fbc:	cmp    QWORD PTR [rax],0x0
  420fc0:	je     420fde <__flatcc_fb_parse@@Base+0x1eae>
  420fc2:	mov    rsi,QWORD PTR [rsp+0x18]
  420fc7:	xor    r9d,r9d
  420fca:	xor    r8d,r8d
  420fcd:	xor    ecx,ecx
  420fcf:	lea    rdx,[rip+0x2543a]        # 446410 <fb_schema_table_missing@@Base+0x790>
  420fd6:	mov    rdi,rbx
  420fd9:	call   41d870 <__flatcc_error_report@@Base>
  420fde:	lea    rsi,[r13+0x18]
  420fe2:	mov    rdi,rbx
  420fe5:	call   41dba0 <__flatcc_error_report@@Base+0x330>
  420fea:	mov    rax,QWORD PTR [rbx+0x48]
  420fee:	mov    rax,QWORD PTR [rax+0x20]
  420ff2:	jmp    41faea <__flatcc_fb_parse@@Base+0x9ba>
  420ff7:	nop    WORD PTR [rax+rax*1+0x0]
  421000:	mov    rsi,QWORD PTR [rsp+0x10]
  421005:	mov    rdi,rbx
  421008:	call   41da20 <__flatcc_error_report@@Base+0x1b0>
  42100d:	mov    rcx,r14
  421010:	lea    rdx,[rip+0x25251]        # 446268 <fb_schema_table_missing@@Base+0x5e8>
  421017:	mov    esi,0x3b
  42101c:	mov    rdi,rbx
  42101f:	call   41db60 <__flatcc_error_report@@Base+0x2f0>
  421024:	mov    r14,QWORD PTR [rsp+0x28]
  421029:	mov    rdi,QWORD PTR [rbx+0x260]
  421030:	xor    edx,edx
  421032:	mov    rsi,r14
  421035:	call   41c590 <fb_scope_table_find@@Base>
  42103a:	mov    r13,rax
  42103d:	test   rax,rax
  421040:	je     4217b0 <__flatcc_fb_parse@@Base+0x2680>
  421046:	mov    QWORD PTR [rbx+0x340],r13
  42104d:	jmp    41f3a0 <__flatcc_fb_parse@@Base+0x270>
  421052:	nop    WORD PTR [rax+rax*1+0x0]
  421058:	xor    r9d,r9d
  42105b:	xor    r8d,r8d
  42105e:	xor    ecx,ecx
  421060:	lea    rdx,[rip+0x25389]        # 4463f0 <fb_schema_table_missing@@Base+0x770>
  421067:	mov    rsi,r14
  42106a:	mov    rdi,rbx
  42106d:	call   41d870 <__flatcc_error_report@@Base>
  421072:	jmp    4200fa <__flatcc_fb_parse@@Base+0xfca>
  421077:	nop    WORD PTR [rax+rax*1+0x0]
  421080:	lea    r13,[r15+0x2]
  421084:	cmp    rbp,r13
  421087:	je     421094 <__flatcc_fb_parse@@Base+0x1f64>
  421089:	cmp    BYTE PTR [r15+0x2],0xd
  42108e:	je     4211b8 <__flatcc_fb_parse@@Base+0x2088>
  421094:	inc    QWORD PTR [rbx+0x78]
  421098:	mov    QWORD PTR [rbx+0x70],r13
  42109c:	mov    rdx,r14
  42109f:	mov    rcx,r13
  4210a2:	mov    esi,0x12
  4210a7:	mov    rdi,rbx
  4210aa:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4210af:	mov    r14,r13
  4210b2:	jmp    41f550 <__flatcc_fb_parse@@Base+0x420>
  4210b7:	nop    WORD PTR [rax+rax*1+0x0]
  4210c0:	lea    r13,[r15+0x2]
  4210c4:	mov    rcx,r13
  4210c7:	mov    rdx,r15
  4210ca:	mov    esi,0x2626
  4210cf:	mov    rdi,rbx
  4210d2:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4210d7:	mov    rdx,r15
  4210da:	mov    rcx,r13
  4210dd:	mov    esi,0x26
  4210e2:	mov    rdi,rbx
  4210e5:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4210ea:	mov    r15,r13
  4210ed:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4210f2:	nop    WORD PTR [rax+rax*1+0x0]
  4210f8:	mov    esi,0x1
  4210fd:	mov    edi,0x10000
  421102:	call   405320 <calloc@plt>
  421107:	test   rax,rax
  42110a:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  421110:	mov    rdx,QWORD PTR [rbx+0x58]
  421114:	lea    r13,[rax+0x10]
  421118:	mov    QWORD PTR [rax],rdx
  42111b:	lea    rdx,[rax+0x10000]
  421122:	mov    QWORD PTR [rbx+0x58],rax
  421126:	mov    QWORD PTR [rbx+0x50],rdx
  42112a:	add    rax,0xc0
  421130:	jmp    41fa49 <__flatcc_fb_parse@@Base+0x919>
  421135:	nop    DWORD PTR [rax]
  421138:	lea    r13,[r15+0x2]
  42113c:	cmp    rbp,r13
  42113f:	je     42114c <__flatcc_fb_parse@@Base+0x201c>
  421141:	cmp    BYTE PTR [r15+0x2],0x3d
  421146:	je     42199d <__flatcc_fb_parse@@Base+0x286d>
  42114c:	mov    rcx,r13
  42114f:	mov    rdx,r15
  421152:	mov    esi,0x3d3d
  421157:	mov    rdi,rbx
  42115a:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42115f:	mov    rdx,r15
  421162:	mov    rcx,r13
  421165:	mov    esi,0x3d
  42116a:	mov    rdi,rbx
  42116d:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421172:	mov    r15,r13
  421175:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42117a:	nop    WORD PTR [rax+rax*1+0x0]
  421180:	add    r13,0x2
  421184:	mov    rdx,r15
  421187:	mov    rcx,r13
  42118a:	mov    esi,0x16
  42118f:	mov    rdi,rbx
  421192:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421197:	mov    r15,r13
  42119a:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42119f:	nop
  4211a0:	lea    r13,[r15+0x2]
  4211a4:	cmp    rbp,r13
  4211a7:	je     421094 <__flatcc_fb_parse@@Base+0x1f64>
  4211ad:	cmp    BYTE PTR [r15+0x2],0xa
  4211b2:	jne    421094 <__flatcc_fb_parse@@Base+0x1f64>
  4211b8:	lea    r13,[r15+0x3]
  4211bc:	jmp    421094 <__flatcc_fb_parse@@Base+0x1f64>
  4211c1:	mov    r14,r13
  4211c4:	nop    DWORD PTR [rax+0x0]
  4211c8:	mov    rdx,r15
  4211cb:	mov    rcx,r14
  4211ce:	mov    esi,0xa
  4211d3:	mov    rdi,rbx
  4211d6:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4211db:	mov    r15,r14
  4211de:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4211e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4211e8:	mov    rsi,QWORD PTR [rbx+0x48]
  4211ec:	mov    r9d,DWORD PTR [rbx+0x228]
  4211f3:	mov    r8,QWORD PTR [rbx+0x220]
  4211fa:	xor    ecx,ecx
  4211fc:	lea    rdx,[rip+0x2556c]        # 44676f <fb_schema_table_missing@@Base+0xaef>
  421203:	mov    rdi,rbx
  421206:	call   41d870 <__flatcc_error_report@@Base>
  42120b:	jmp    41fe6d <__flatcc_fb_parse@@Base+0xd3d>
  421210:	mov    rdx,r15
  421213:	mov    rcx,r13
  421216:	mov    esi,0x3e3e
  42121b:	mov    rdi,rbx
  42121e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421223:	mov    r15,r13
  421226:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42122b:	cmp    WORD PTR [r15+0x4],0x3631
  421232:	mov    rsi,0xfffffffffffffc2c
  421239:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  42123f:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421244:	nop    DWORD PTR [rax+0x0]
  421248:	mov    esi,0x1
  42124d:	mov    edi,0x10000
  421252:	call   405320 <calloc@plt>
  421257:	test   rax,rax
  42125a:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  421260:	mov    rdx,QWORD PTR [rbx+0x58]
  421264:	mov    QWORD PTR [rbx+0x58],rax
  421268:	mov    QWORD PTR [rax],rdx
  42126b:	lea    rdx,[rax+0x10000]
  421272:	lea    rsi,[rax+0x10]
  421276:	mov    QWORD PTR [rbx+0x50],rdx
  42127a:	add    rax,0xc0
  421280:	mov    rdx,QWORD PTR [r15+0x28]
  421284:	jmp    41fb72 <__flatcc_fb_parse@@Base+0xa42>
  421289:	nop    DWORD PTR [rax+0x0]
  421290:	mov    rdx,r15
  421293:	mov    rcx,r13
  421296:	mov    esi,0x3e
  42129b:	mov    rdi,rbx
  42129e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4212a3:	mov    r15,r13
  4212a6:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4212ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4212b0:	mov    rdx,r15
  4212b3:	mov    rcx,r13
  4212b6:	mov    esi,0x2b
  4212bb:	mov    rdi,rbx
  4212be:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4212c3:	mov    r15,r13
  4212c6:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4212cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4212d0:	mov    rdx,r15
  4212d3:	mov    rcx,r13
  4212d6:	mov    esi,0x3a
  4212db:	mov    rdi,rbx
  4212de:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4212e3:	mov    r15,r13
  4212e6:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4212eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4212f0:	mov    rdx,r15
  4212f3:	mov    rcx,r13
  4212f6:	mov    esi,0x2a
  4212fb:	mov    rdi,rbx
  4212fe:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421303:	mov    r15,r13
  421306:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42130b:	nop    DWORD PTR [rax+rax*1+0x0]
  421310:	mov    rdx,r15
  421313:	mov    rcx,r13
  421316:	mov    esi,0x2e
  42131b:	mov    rdi,rbx
  42131e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421323:	mov    r15,r13
  421326:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42132b:	nop    DWORD PTR [rax+rax*1+0x0]
  421330:	lea    r13,[r15+0x2]
  421334:	cmp    rbp,r13
  421337:	je     421344 <__flatcc_fb_parse@@Base+0x2214>
  421339:	cmp    BYTE PTR [r15+0x2],0x2e
  42133e:	je     42195f <__flatcc_fb_parse@@Base+0x282f>
  421344:	mov    rdx,r15
  421347:	mov    rcx,r13
  42134a:	mov    esi,0x2e2e
  42134f:	mov    rdi,rbx
  421352:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421357:	mov    r15,r13
  42135a:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42135f:	nop
  421360:	lea    r13,[r15+0x2]
  421364:	mov    rdx,r15
  421367:	mov    rcx,r13
  42136a:	mov    esi,0x3d7c
  42136f:	mov    rdi,rbx
  421372:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421377:	mov    r15,r13
  42137a:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42137f:	nop
  421380:	mov    rdx,r15
  421383:	mov    esi,0x2a2a
  421388:	mov    rcx,r13
  42138b:	mov    rdi,rbx
  42138e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421393:	movzx  esi,BYTE PTR [r15+0x1]
  421398:	mov    r15,r13
  42139b:	jmp    41f1f8 <__flatcc_fb_parse@@Base+0xc8>
  4213a0:	lea    r13,[r15+0x2]
  4213a4:	mov    rdx,r15
  4213a7:	mov    rcx,r13
  4213aa:	mov    esi,0x3d3e
  4213af:	mov    rdi,rbx
  4213b2:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4213b7:	mov    r15,r13
  4213ba:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4213bf:	nop
  4213c0:	lea    r13,[r15+0x2]
  4213c4:	mov    rdx,r15
  4213c7:	mov    rcx,r13
  4213ca:	mov    esi,0x2b2b
  4213cf:	mov    rdi,rbx
  4213d2:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4213d7:	mov    r15,r13
  4213da:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4213df:	nop
  4213e0:	lea    r13,[r15+0x2]
  4213e4:	cmp    rbp,r13
  4213e7:	je     4213f4 <__flatcc_fb_parse@@Base+0x22c4>
  4213e9:	cmp    BYTE PTR [r15+0x2],0x3d
  4213ee:	je     42197e <__flatcc_fb_parse@@Base+0x284e>
  4213f4:	mov    rdx,r15
  4213f7:	mov    rcx,r13
  4213fa:	mov    esi,0x3a3a
  4213ff:	mov    rdi,rbx
  421402:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421407:	mov    r15,r13
  42140a:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42140f:	nop
  421410:	and    edx,0xffffffdf
  421413:	cmp    dl,0x45
  421416:	jne    4203a1 <__flatcc_fb_parse@@Base+0x1271>
  42141c:	mov    r14,r13
  42141f:	jmp    42016e <__flatcc_fb_parse@@Base+0x103e>
  421424:	nop    DWORD PTR [rax+0x0]
  421428:	lea    r14,[r15+0x2]
  42142c:	cmp    rbp,r14
  42142f:	je     421448 <__flatcc_fb_parse@@Base+0x2318>
  421431:	movzx  edx,BYTE PTR [r15+0x2]
  421436:	cmp    dl,0x2a
  421439:	je     4218ab <__flatcc_fb_parse@@Base+0x277b>
  42143f:	cmp    dl,0x21
  421442:	je     4218ab <__flatcc_fb_parse@@Base+0x277b>
  421448:	mov    DWORD PTR [rbx+0x3c],0x0
  42144f:	mov    r13,0xfffffffffffffc3c
  421456:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421460:	lea    rcx,[r14-0x1]
  421464:	jmp    421473 <__flatcc_fb_parse@@Base+0x2343>
  421466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421470:	mov    rcx,r15
  421473:	lea    r15,[rcx+0x1]
  421477:	cmp    rbp,r15
  42147a:	je     421518 <__flatcc_fb_parse@@Base+0x23e8>
  421480:	movzx  edx,BYTE PTR [rcx+0x1]
  421484:	lea    esi,[rdx-0x20]
  421487:	cmp    sil,0x5e
  42148b:	ja     421548 <__flatcc_fb_parse@@Base+0x2418>
  421491:	cmp    dl,0x2f
  421494:	jne    421470 <__flatcc_fb_parse@@Base+0x2340>
  421496:	cmp    BYTE PTR [r15-0x1],0x2a
  42149b:	jne    421470 <__flatcc_fb_parse@@Base+0x2340>
  42149d:	mov    r15,r14
  4214a0:	cmp    r14,rcx
  4214a3:	je     4214b0 <__flatcc_fb_parse@@Base+0x2380>
  4214a5:	mov    eax,DWORD PTR [rbx+0x3c]
  4214a8:	mov    r15,rcx
  4214ab:	test   eax,eax
  4214ad:	jne    42152c <__flatcc_fb_parse@@Base+0x23fc>
  4214af:	nop
  4214b0:	cmp    rbp,r15
  4214b3:	je     41f2b0 <__flatcc_fb_parse@@Base+0x180>
  4214b9:	movzx  edx,BYTE PTR [r15]
  4214bd:	test   dl,dl
  4214bf:	je     41f2b0 <__flatcc_fb_parse@@Base+0x180>
  4214c5:	cmp    dl,0xa
  4214c8:	je     421570 <__flatcc_fb_parse@@Base+0x2440>
  4214ce:	cmp    dl,0xd
  4214d1:	je     421590 <__flatcc_fb_parse@@Base+0x2460>
  4214d7:	lea    ecx,[rdx-0x20]
  4214da:	cmp    cl,0x5e
  4214dd:	jbe    421560 <__flatcc_fb_parse@@Base+0x2430>
  4214e3:	lea    r14,[r15+0x1]
  4214e7:	cmp    dl,0x9
  4214ea:	jne    4215b0 <__flatcc_fb_parse@@Base+0x2480>
  4214f0:	mov    eax,DWORD PTR [rbx+0x3c]
  4214f3:	test   eax,eax
  4214f5:	je     421460 <__flatcc_fb_parse@@Base+0x2330>
  4214fb:	mov    rcx,r14
  4214fe:	mov    rdx,r15
  421501:	mov    rsi,r13
  421504:	mov    rdi,rbx
  421507:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42150c:	jmp    421460 <__flatcc_fb_parse@@Base+0x2330>
  421511:	nop    DWORD PTR [rax+0x0]
  421518:	cmp    r14,rbp
  42151b:	je     41f2b0 <__flatcc_fb_parse@@Base+0x180>
  421521:	mov    ecx,DWORD PTR [rbx+0x3c]
  421524:	test   ecx,ecx
  421526:	je     41f2b0 <__flatcc_fb_parse@@Base+0x180>
  42152c:	mov    rcx,r15
  42152f:	mov    rdx,r14
  421532:	mov    rsi,r13
  421535:	mov    rdi,rbx
  421538:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42153d:	jmp    4214b0 <__flatcc_fb_parse@@Base+0x2380>
  421542:	nop    WORD PTR [rax+rax*1+0x0]
  421548:	cmp    r14,r15
  42154b:	je     4214bd <__flatcc_fb_parse@@Base+0x238d>
  421551:	mov    esi,DWORD PTR [rbx+0x3c]
  421554:	test   esi,esi
  421556:	je     4214b9 <__flatcc_fb_parse@@Base+0x2389>
  42155c:	jmp    42152c <__flatcc_fb_parse@@Base+0x23fc>
  42155e:	xchg   ax,ax
  421560:	add    r15,0x2
  421564:	mov    DWORD PTR [rbx+0x3c],0x0
  42156b:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  421570:	lea    r14,[r15+0x1]
  421574:	cmp    rbp,r14
  421577:	je     421580 <__flatcc_fb_parse@@Base+0x2450>
  421579:	cmp    BYTE PTR [r15+0x1],0xd
  42157e:	je     4215a0 <__flatcc_fb_parse@@Base+0x2470>
  421580:	inc    QWORD PTR [rbx+0x78]
  421584:	mov    QWORD PTR [rbx+0x70],r14
  421588:	jmp    421460 <__flatcc_fb_parse@@Base+0x2330>
  42158d:	nop    DWORD PTR [rax]
  421590:	lea    r14,[r15+0x1]
  421594:	cmp    rbp,r14
  421597:	je     421580 <__flatcc_fb_parse@@Base+0x2450>
  421599:	cmp    BYTE PTR [r15+0x1],0xa
  42159e:	jne    421580 <__flatcc_fb_parse@@Base+0x2450>
  4215a0:	lea    r14,[r15+0x2]
  4215a4:	jmp    421580 <__flatcc_fb_parse@@Base+0x2450>
  4215a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4215b0:	mov    rcx,r14
  4215b3:	mov    rdx,r15
  4215b6:	mov    esi,0x7
  4215bb:	mov    rdi,rbx
  4215be:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4215c3:	jmp    421460 <__flatcc_fb_parse@@Base+0x2330>
  4215c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4215d0:	lea    r13,[r15+0x2]
  4215d4:	mov    rdx,r15
  4215d7:	mov    rcx,r13
  4215da:	mov    esi,0x3d2f
  4215df:	mov    rdi,rbx
  4215e2:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4215e7:	mov    r15,r13
  4215ea:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4215ef:	nop
  4215f0:	cmp    r14,r15
  4215f3:	jne    421668 <__flatcc_fb_parse@@Base+0x2538>
  4215f5:	movzx  edx,BYTE PTR [r15]
  4215f9:	test   dl,dl
  4215fb:	je     41f2b0 <__flatcc_fb_parse@@Base+0x180>
  421601:	cmp    dl,0xa
  421604:	je     421564 <__flatcc_fb_parse@@Base+0x2434>
  42160a:	cmp    dl,0xd
  42160d:	je     421564 <__flatcc_fb_parse@@Base+0x2434>
  421613:	lea    r14,[r13+0x2]
  421617:	cmp    dl,0x20
  42161a:	je     421640 <__flatcc_fb_parse@@Base+0x2510>
  42161c:	cmp    dl,0x9
  42161f:	je     421640 <__flatcc_fb_parse@@Base+0x2510>
  421621:	mov    rcx,r14
  421624:	mov    rdx,r15
  421627:	mov    esi,0x7
  42162c:	mov    rdi,rbx
  42162f:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421634:	jmp    41f260 <__flatcc_fb_parse@@Base+0x130>
  421639:	nop    DWORD PTR [rax+0x0]
  421640:	mov    eax,DWORD PTR [rbx+0x3c]
  421643:	test   eax,eax
  421645:	je     41f260 <__flatcc_fb_parse@@Base+0x130>
  42164b:	mov    rcx,r14
  42164e:	mov    rdx,r15
  421651:	mov    rsi,0xfffffffffffffc3c
  421658:	mov    rdi,rbx
  42165b:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421660:	jmp    41f260 <__flatcc_fb_parse@@Base+0x130>
  421665:	nop    DWORD PTR [rax]
  421668:	mov    eax,DWORD PTR [rbx+0x3c]
  42166b:	test   eax,eax
  42166d:	je     4215f5 <__flatcc_fb_parse@@Base+0x24c5>
  42166f:	mov    rcx,r15
  421672:	mov    rdx,r14
  421675:	mov    rsi,0xfffffffffffffc3c
  42167c:	mov    rdi,rbx
  42167f:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421684:	jmp    4215f5 <__flatcc_fb_parse@@Base+0x24c5>
  421689:	nop    DWORD PTR [rax+0x0]
  421690:	lea    r13,[r15+0x2]
  421694:	mov    rdx,r15
  421697:	mov    rcx,r13
  42169a:	mov    esi,0x2d2d
  42169f:	mov    rdi,rbx
  4216a2:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4216a7:	mov    r15,r13
  4216aa:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4216af:	nop
  4216b0:	lea    r13,[r15+0x2]
  4216b4:	mov    rdx,r15
  4216b7:	mov    rcx,r13
  4216ba:	mov    esi,0x2d3c
  4216bf:	mov    rdi,rbx
  4216c2:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4216c7:	mov    r15,r13
  4216ca:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4216cf:	nop
  4216d0:	lea    r13,[r15+0x2]
  4216d4:	mov    rdx,r15
  4216d7:	mov    rcx,r13
  4216da:	mov    esi,0x3d3c
  4216df:	mov    rdi,rbx
  4216e2:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4216e7:	mov    r15,r13
  4216ea:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4216ef:	nop
  4216f0:	lea    r13,[r15+0x2]
  4216f4:	cmp    rbp,r13
  4216f7:	je     421890 <__flatcc_fb_parse@@Base+0x2760>
  4216fd:	movzx  edx,BYTE PTR [r15+0x2]
  421702:	cmp    dl,0x3c
  421705:	je     421930 <__flatcc_fb_parse@@Base+0x2800>
  42170b:	cmp    dl,0x3d
  42170e:	jne    421890 <__flatcc_fb_parse@@Base+0x2760>
  421714:	lea    r13,[r15+0x3]
  421718:	mov    rdx,r15
  42171b:	mov    rcx,r13
  42171e:	mov    esi,0x3d3c3c
  421723:	mov    rdi,rbx
  421726:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42172b:	mov    r15,r13
  42172e:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  421733:	nop    DWORD PTR [rax+rax*1+0x0]
  421738:	lea    r13,[r15+0x2]
  42173c:	mov    rdx,r15
  42173f:	mov    rcx,r13
  421742:	mov    esi,0x3e2d
  421747:	mov    rdi,rbx
  42174a:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  42174f:	mov    r15,r13
  421752:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  421757:	nop    WORD PTR [rax+rax*1+0x0]
  421760:	lea    r13,[r15+0x2]
  421764:	mov    rdx,r15
  421767:	mov    rcx,r13
  42176a:	mov    esi,0x3d2d
  42176f:	mov    rdi,rbx
  421772:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421777:	mov    r15,r13
  42177a:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42177f:	nop
  421780:	mov    rcx,r14
  421783:	mov    rdx,r14
  421786:	mov    esi,0x17
  42178b:	mov    rdi,rbx
  42178e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421793:	mov    r15,r14
  421796:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42179b:	nop    DWORD PTR [rax+rax*1+0x0]
  4217a0:	mov    rdx,rax
  4217a3:	jmp    41fad0 <__flatcc_fb_parse@@Base+0x9a0>
  4217a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4217b0:	mov    rcx,QWORD PTR [rbx+0x60]
  4217b4:	lea    rax,[rcx+0x40]
  4217b8:	cmp    rax,QWORD PTR [rbx+0x50]
  4217bc:	ja     4218f5 <__flatcc_fb_parse@@Base+0x27c5>
  4217c2:	mov    QWORD PTR [rbx+0x60],rax
  4217c6:	vmovdqu xmm0,XMMWORD PTR [rbx+0x2d8]
  4217ce:	mov    QWORD PTR [rcx],r14
  4217d1:	mov    rdi,QWORD PTR [rbx+0x260]
  4217d8:	vmovups XMMWORD PTR [rcx+0x28],xmm0
  4217dd:	mov    edx,0x1
  4217e2:	mov    rsi,rcx
  4217e5:	mov    r13,rcx
  4217e8:	call   41c570 <fb_scope_table_insert_item@@Base>
  4217ed:	jmp    421046 <__flatcc_fb_parse@@Base+0x1f16>
  4217f2:	nop    WORD PTR [rax+rax*1+0x0]
  4217f8:	movsx  r9,r10b
  4217fc:	shl    r9,0x10
  421800:	or     rsi,r9
  421803:	mov    rcx,r14
  421806:	jmp    42181d <__flatcc_fb_parse@@Base+0x26ed>
  421808:	nop    DWORD PTR [rax+rax*1+0x0]
  421810:	movzx  edx,BYTE PTR [r14]
  421814:	cmp    BYTE PTR [rdi+rdx*1],0x0
  421818:	je     421850 <__flatcc_fb_parse@@Base+0x2720>
  42181a:	mov    rcx,r14
  42181d:	inc    r14
  421820:	cmp    rbp,r14
  421823:	jne    421810 <__flatcc_fb_parse@@Base+0x26e0>
  421825:	movsx  rdx,BYTE PTR [rcx]
  421829:	mov    rcx,rbp
  42182c:	sub    rcx,r15
  42182f:	movzx  ecx,cl
  421832:	add    rcx,0x30
  421836:	jmp    4204c0 <__flatcc_fb_parse@@Base+0x1390>
  42183b:	nop    DWORD PTR [rax+rax*1+0x0]
  421840:	endbr64 
  421844:	mov    rsi,r14
  421847:	mov    r13,r14
  42184a:	jmp    420399 <__flatcc_fb_parse@@Base+0x1269>
  42184f:	nop
  421850:	movsx  rdx,BYTE PTR [rcx]
  421854:	mov    rcx,r14
  421857:	sub    rcx,r15
  42185a:	movzx  ecx,cl
  42185d:	add    rcx,0x30
  421861:	jmp    4204c0 <__flatcc_fb_parse@@Base+0x1390>
  421866:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421870:	lea    r13,[r15+0x3]
  421874:	mov    rdx,r15
  421877:	mov    rcx,r13
  42187a:	mov    esi,0x3d3e3e
  42187f:	mov    rdi,rbx
  421882:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421887:	mov    r15,r13
  42188a:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42188f:	nop
  421890:	mov    rdx,r15
  421893:	mov    rcx,r13
  421896:	mov    esi,0x3c3c
  42189b:	mov    rdi,rbx
  42189e:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4218a3:	mov    r15,r13
  4218a6:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4218ab:	mov    DWORD PTR [rbx+0x3c],0x1
  4218b2:	lea    r14,[r15+0x3]
  4218b6:	mov    rcx,r14
  4218b9:	mov    rdx,r14
  4218bc:	mov    rsi,0xfffffffffffffc3c
  4218c3:	mov    rdi,rbx
  4218c6:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4218cb:	jmp    42144f <__flatcc_fb_parse@@Base+0x231f>
  4218d0:	mov    DWORD PTR [rbx+0x3c],0x1
  4218d7:	lea    r14,[r15+0x3]
  4218db:	mov    rcx,r14
  4218de:	mov    rdx,r14
  4218e1:	mov    rsi,0xfffffffffffffc3c
  4218e8:	mov    rdi,rbx
  4218eb:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4218f0:	jmp    41f260 <__flatcc_fb_parse@@Base+0x130>
  4218f5:	mov    esi,0x1
  4218fa:	mov    edi,0x10000
  4218ff:	call   405320 <calloc@plt>
  421904:	test   rax,rax
  421907:	je     421d5e <__flatcc_fb_parse@@Base+0x2c2e>
  42190d:	mov    rdx,QWORD PTR [rbx+0x58]
  421911:	lea    rcx,[rax+0x10]
  421915:	mov    QWORD PTR [rax],rdx
  421918:	lea    rdx,[rax+0x10000]
  42191f:	mov    QWORD PTR [rbx+0x58],rax
  421923:	mov    QWORD PTR [rbx+0x50],rdx
  421927:	add    rax,0x50
  42192b:	jmp    4217c2 <__flatcc_fb_parse@@Base+0x2692>
  421930:	lea    r13,[r15+0x3]
  421934:	cmp    rbp,r13
  421937:	je     421944 <__flatcc_fb_parse@@Base+0x2814>
  421939:	cmp    BYTE PTR [r15+0x3],0x3d
  42193e:	je     421d3f <__flatcc_fb_parse@@Base+0x2c0f>
  421944:	mov    rdx,r15
  421947:	mov    rcx,r13
  42194a:	mov    esi,0x3c3c3c
  42194f:	mov    rdi,rbx
  421952:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421957:	mov    r15,r13
  42195a:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42195f:	lea    r13,[r15+0x3]
  421963:	mov    rdx,r15
  421966:	mov    rcx,r13
  421969:	mov    esi,0x2e2e2e
  42196e:	mov    rdi,rbx
  421971:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421976:	mov    r15,r13
  421979:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42197e:	lea    r13,[r15+0x3]
  421982:	mov    rdx,r15
  421985:	mov    rcx,r13
  421988:	mov    esi,0x3d3a3a
  42198d:	mov    rdi,rbx
  421990:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421995:	mov    r15,r13
  421998:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  42199d:	lea    r13,[r15+0x3]
  4219a1:	mov    rdx,r15
  4219a4:	mov    rcx,r13
  4219a7:	mov    esi,0x3d3d3d
  4219ac:	mov    rdi,rbx
  4219af:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  4219b4:	mov    r15,r13
  4219b7:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  4219bc:	nop    DWORD PTR [rax+0x0]
  4219c0:	cmp    DWORD PTR [r15],0x36746e69
  4219c7:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  4219cd:	cmp    BYTE PTR [r15+0x4],0x34
  4219d2:	mov    rsi,0xfffffffffffffc22
  4219d9:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  4219df:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  4219e4:	nop    DWORD PTR [rax+0x0]
  4219e8:	cmp    DWORD PTR [r15],0x726f6873
  4219ef:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  4219f5:	cmp    BYTE PTR [r15+0x4],0x74
  4219fa:	mov    rsi,0xfffffffffffffc28
  421a01:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421a07:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421a0c:	nop    DWORD PTR [rax+0x0]
  421a10:	cmp    DWORD PTR [r15],0x746e6975
  421a17:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421a1d:	cmp    WORD PTR [r15+0x4],0x3436
  421a24:	mov    rsi,0xfffffffffffffc2e
  421a2b:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421a31:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421a36:	cmp    DWORD PTR [r15],0x746e6975
  421a3d:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421a43:	cmp    BYTE PTR [r15+0x4],0x38
  421a48:	mov    rsi,0xfffffffffffffc2b
  421a4f:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421a55:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421a5a:	movabs rax,0x767265735f637072
  421a64:	cmp    QWORD PTR [r15],rax
  421a67:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421a6d:	cmp    WORD PTR [r15+0x8],0x6369
  421a74:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421a7a:	cmp    BYTE PTR [r15+0xa],0x65
  421a7f:	mov    rsi,0xfffffffffffffc39
  421a86:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421a8c:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421a91:	nop    DWORD PTR [rax+0x0]
  421a98:	cmp    DWORD PTR [r15],0x6c626174
  421a9f:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421aa5:	cmp    BYTE PTR [r15+0x4],0x65
  421aaa:	mov    rsi,0xfffffffffffffc29
  421ab1:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421ab7:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421abc:	nop    DWORD PTR [rax+0x0]
  421ac0:	cmp    DWORD PTR [r15],0x616f6c66
  421ac7:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421acd:	cmp    WORD PTR [r15+0x4],0x3374
  421ad4:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421ada:	cmp    BYTE PTR [r15+0x6],0x32
  421adf:	mov    rsi,0xfffffffffffffc1c
  421ae6:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421aec:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421af1:	nop    DWORD PTR [rax+0x0]
  421af8:	cmp    WORD PTR [r15],0x6e69
  421afe:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b04:	cmp    BYTE PTR [r15+0x2],0x74
  421b09:	mov    rsi,0xfffffffffffffc1e
  421b10:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b16:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  421b20:	cmp    DWORD PTR [r15],0x6c636e69
  421b27:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b2d:	cmp    WORD PTR [r15+0x4],0x6475
  421b34:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b3a:	cmp    BYTE PTR [r15+0x6],0x65
  421b3f:	mov    rsi,0xfffffffffffffc35
  421b46:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b4c:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421b51:	nop    DWORD PTR [rax+0x0]
  421b58:	movabs rax,0x6564695f656c6966
  421b62:	cmp    QWORD PTR [r15],rax
  421b65:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b6b:	cmp    DWORD PTR [r15+0x8],0x6669746e
  421b73:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b79:	cmp    WORD PTR [r15+0xc],0x6569
  421b80:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b86:	cmp    BYTE PTR [r15+0xe],0x72
  421b8b:	mov    rsi,0xfffffffffffffc3b
  421b92:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421b98:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421b9d:	nop    DWORD PTR [rax]
  421ba0:	cmp    DWORD PTR [r15],0x746e6975
  421ba7:	mov    esi,0x9
  421bac:	mov    rdx,0xfffffffffffffc25
  421bb3:	cmove  rsi,rdx
  421bb7:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421bbc:	nop    DWORD PTR [rax+0x0]
  421bc0:	movabs rdx,0x7475626972747461
  421bca:	cmp    QWORD PTR [r15],rdx
  421bcd:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421bd3:	cmp    BYTE PTR [r15+0x8],0x65
  421bd8:	mov    rsi,0xfffffffffffffc36
  421bdf:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421be5:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421bea:	nop    WORD PTR [rax+rax*1+0x0]
  421bf0:	cmp    DWORD PTR [r15],0x65747962
  421bf7:	mov    esi,0x9
  421bfc:	mov    rdx,0xfffffffffffffc1a
  421c03:	cmove  rsi,rdx
  421c07:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421c0c:	nop    DWORD PTR [rax+0x0]
  421c10:	cmp    DWORD PTR [r15],0x33746e69
  421c17:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421c1d:	cmp    BYTE PTR [r15+0x4],0x32
  421c22:	mov    rsi,0xfffffffffffffc21
  421c29:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421c2f:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421c34:	nop    DWORD PTR [rax+0x0]
  421c38:	movabs rdx,0x63617073656d616e
  421c42:	cmp    QWORD PTR [r15],rdx
  421c45:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421c4b:	cmp    BYTE PTR [r15+0x8],0x65
  421c50:	mov    rsi,0xfffffffffffffc37
  421c57:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421c5d:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421c62:	nop    WORD PTR [rax+rax*1+0x0]
  421c68:	cmp    DWORD PTR [r15],0x736c6166
  421c6f:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421c75:	cmp    BYTE PTR [r15+0x4],0x65
  421c7a:	mov    rsi,0xfffffffffffffc26
  421c81:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421c87:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421c8c:	nop    DWORD PTR [rax+0x0]
  421c90:	cmp    DWORD PTR [r15],0x69727473
  421c97:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421c9d:	cmp    WORD PTR [r15+0x4],0x676e
  421ca4:	mov    rsi,0xfffffffffffffc32
  421cab:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421cb1:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421cc0:	cmp    DWORD PTR [r15],0x6e6f6c75
  421cc7:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421ccd:	cmp    BYTE PTR [r15+0x4],0x67
  421cd2:	mov    rsi,0xfffffffffffffc2f
  421cd9:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421cdf:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421ce4:	movabs rax,0x7478655f656c6966
  421cee:	cmp    QWORD PTR [r15],rax
  421cf1:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421cf7:	cmp    DWORD PTR [r15+0x8],0x69736e65
  421cff:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421d05:	cmp    WORD PTR [r15+0xc],0x6e6f
  421d0c:	mov    rsi,0xfffffffffffffc3a
  421d13:	jne    420538 <__flatcc_fb_parse@@Base+0x1408>
  421d19:	jmp    42053d <__flatcc_fb_parse@@Base+0x140d>
  421d1e:	xchg   ax,ax
  421d20:	lea    r13,[r15+0x4]
  421d24:	mov    rdx,r15
  421d27:	mov    rcx,r13
  421d2a:	mov    esi,0x3d3e3e3e
  421d2f:	mov    rdi,rbx
  421d32:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421d37:	mov    r15,r13
  421d3a:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  421d3f:	lea    r13,[r15+0x4]
  421d43:	mov    rdx,r15
  421d46:	mov    rcx,r13
  421d49:	mov    esi,0x3d3c3c3c
  421d4e:	mov    rdi,rbx
  421d51:	call   41d450 <__flatcc_fb_default_error_out@@Base+0x60>
  421d56:	mov    r15,r13
  421d59:	jmp    41f1eb <__flatcc_fb_parse@@Base+0xbb>
  421d5e:	call   41d420 <__flatcc_fb_default_error_out@@Base+0x30>
  421d63:	call   4052c0 <__stack_chk_fail@plt>
  421d68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000421d70 <__flatcc_fb_clear_parser@@Base>:
  421d70:	endbr64 
  421d74:	push   rbp
  421d75:	mov    rbp,rdi
  421d78:	push   rbx
  421d79:	sub    rsp,0x8
  421d7d:	mov    rbx,QWORD PTR [rdi+0x238]
  421d84:	test   rbx,rbx
  421d87:	jne    421d98 <__flatcc_fb_clear_parser@@Base+0x28>
  421d89:	jmp    421dbc <__flatcc_fb_clear_parser@@Base+0x4c>
  421d8b:	nop    DWORD PTR [rax+rax*1+0x0]
  421d90:	mov    rbx,QWORD PTR [rbx]
  421d93:	test   rbx,rbx
  421d96:	je     421dbc <__flatcc_fb_clear_parser@@Base+0x4c>
  421d98:	cmp    WORD PTR [rbx+0x10],0x4
  421d9d:	ja     421d90 <__flatcc_fb_clear_parser@@Base+0x20>
  421d9f:	lea    rdi,[rbx+0x60]
  421da3:	call   41b3e0 <fb_symbol_table_clear@@Base>
  421da8:	lea    rdi,[rbx+0x80]
  421daf:	call   42cd20 <fb_value_set_clear@@Base>
  421db4:	mov    rbx,QWORD PTR [rbx]
  421db7:	test   rbx,rbx
  421dba:	jne    421d98 <__flatcc_fb_clear_parser@@Base+0x28>
  421dbc:	lea    rdi,[rbp+0x2a8]
  421dc3:	call   41cbf0 <fb_schema_table_clear@@Base>
  421dc8:	lea    rdi,[rbp+0x288]
  421dcf:	call   42c600 <fb_name_table_clear@@Base>
  421dd4:	lea    rdi,[rbp+0x320]
  421ddb:	call   41ac70 <ptr_set_clear@@Base>
  421de0:	mov    rdi,QWORD PTR [rbp+0xd8]
  421de7:	test   rdi,rdi
  421dea:	je     421df1 <__flatcc_fb_clear_parser@@Base+0x81>
  421dec:	call   405230 <free@plt>
  421df1:	mov    rdi,QWORD PTR [rbp+0x28]
  421df5:	test   rdi,rdi
  421df8:	je     421dff <__flatcc_fb_clear_parser@@Base+0x8f>
  421dfa:	call   405230 <free@plt>
  421dff:	mov    rdi,QWORD PTR [rbp+0x308]
  421e06:	test   rdi,rdi
  421e09:	je     421e10 <__flatcc_fb_clear_parser@@Base+0xa0>
  421e0b:	call   405230 <free@plt>
  421e10:	mov    rdi,QWORD PTR [rbp+0x310]
  421e17:	test   rdi,rdi
  421e1a:	je     421e21 <__flatcc_fb_clear_parser@@Base+0xb1>
  421e1c:	call   405230 <free@plt>
  421e21:	mov    rdi,QWORD PTR [rbp+0x318]
  421e28:	test   rdi,rdi
  421e2b:	je     421e32 <__flatcc_fb_clear_parser@@Base+0xc2>
  421e2d:	call   405230 <free@plt>
  421e32:	mov    rdi,QWORD PTR [rbp+0x348]
  421e39:	test   rdi,rdi
  421e3c:	je     421e43 <__flatcc_fb_clear_parser@@Base+0xd3>
  421e3e:	call   405230 <free@plt>
  421e43:	lea    rdi,[rbp+0x268]
  421e4a:	xor    edx,edx
  421e4c:	lea    rsi,[rip+0xffffffffffffb5bd]        # 41d410 <__flatcc_fb_default_error_out@@Base+0x20>
  421e53:	call   41c470 <fb_scope_table_destroy@@Base>
  421e58:	mov    rdi,QWORD PTR [rbp+0x58]
  421e5c:	test   rdi,rdi
  421e5f:	je     421e78 <__flatcc_fb_clear_parser@@Base+0x108>
  421e61:	nop    DWORD PTR [rax+0x0]
  421e68:	mov    rbx,QWORD PTR [rdi]
  421e6b:	call   405230 <free@plt>
  421e70:	mov    rdi,rbx
  421e73:	test   rbx,rbx
  421e76:	jne    421e68 <__flatcc_fb_clear_parser@@Base+0xf8>
  421e78:	mov    rdi,QWORD PTR [rbp+0x20]
  421e7c:	test   rdi,rdi
  421e7f:	je     421e86 <__flatcc_fb_clear_parser@@Base+0x116>
  421e81:	call   405230 <free@plt>
  421e86:	add    rsp,0x8
  421e8a:	pop    rbx
  421e8b:	mov    rdi,rbp
  421e8e:	mov    edx,0x358
  421e93:	xor    esi,esi
  421e95:	pop    rbp
  421e96:	jmp    4052f0 <memset@plt>
  421e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  421ea0:	push   r15
  421ea2:	push   r14
  421ea4:	push   r13
  421ea6:	push   r12
  421ea8:	push   rbp
  421ea9:	push   rbx
  421eaa:	sub    rsp,0x18
  421eae:	movzx  r12d,WORD PTR [rsi+0x10]
  421eb3:	cmp    r12w,0x1
  421eb8:	jne    422328 <__flatcc_fb_clear_parser@@Base+0x5b8>
  421ebe:	movzx  eax,WORD PTR [rsi+0x12]
  421ec2:	mov    rbp,rsi
  421ec5:	test   al,0x1
  421ec7:	jne    422309 <__flatcc_fb_clear_parser@@Base+0x599>
  421ecd:	test   al,0x2
  421ecf:	jne    421fae <__flatcc_fb_clear_parser@@Base+0x23e>
  421ed5:	cmp    QWORD PTR [rsi+0xc0],0x0
  421edd:	jne    422347 <__flatcc_fb_clear_parser@@Base+0x5d7>
  421ee3:	mov    rbx,QWORD PTR [rsi+0x28]
  421ee7:	or     eax,0x1
  421eea:	mov    r13,rdi
  421eed:	mov    WORD PTR [rsi+0x12],ax
  421ef1:	test   rbx,rbx
  421ef4:	je     422144 <__flatcc_fb_clear_parser@@Base+0x3d4>
  421efa:	lea    r10,[rip+0x2643f]        # 448340 <fb_schema_table_missing@@Base+0x26c0>
  421f01:	lea    r15,[rip+0x26538]        # 448440 <fb_schema_table_missing@@Base+0x27c0>
  421f08:	lea    r11,[rip+0x24ed1]        # 446de0 <fb_schema_table_missing@@Base+0x1160>
  421f0f:	cmp    DWORD PTR [r13+0xe0],0x63
  421f17:	jg     422238 <__flatcc_fb_clear_parser@@Base+0x4c8>
  421f1d:	movzx  edx,WORD PTR [rbx+0x28]
  421f21:	cmp    dx,0x8
  421f25:	je     422080 <__flatcc_fb_clear_parser@@Base+0x310>
  421f2b:	cmp    dx,0xe
  421f2f:	je     421fc0 <__flatcc_fb_clear_parser@@Base+0x250>
  421f35:	mov    eax,0xffffffff
  421f3a:	cmp    dx,0x1
  421f3e:	je     421f63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  421f40:	mov    rsi,QWORD PTR [rbx+0x8]
  421f44:	xor    r9d,r9d
  421f47:	xor    r8d,r8d
  421f4a:	xor    ecx,ecx
  421f4c:	lea    rdx,[rip+0x26126]        # 448079 <fb_schema_table_missing@@Base+0x23f9>
  421f53:	mov    rdi,r13
  421f56:	mov    DWORD PTR [rsp+0xc],eax
  421f5a:	call   41d870 <__flatcc_error_report@@Base>
  421f5f:	mov    eax,DWORD PTR [rsp+0xc]
  421f63:	add    rsp,0x18
  421f67:	pop    rbx
  421f68:	pop    rbp
  421f69:	pop    r12
  421f6b:	pop    r13
  421f6d:	pop    r14
  421f6f:	pop    r15
  421f71:	ret    
  421f72:	mov    rax,QWORD PTR [rbp+0xb8]
  421f79:	lea    rax,[rdx+rax*1-0x1]
  421f7e:	neg    rdx
  421f81:	and    rdx,rax
  421f84:	movzx  eax,WORD PTR [rbp+0x12]
  421f88:	mov    QWORD PTR [rbp+0xb8],rdx
  421f8f:	and    eax,0xfffffffe
  421f92:	or     eax,0x2
  421f95:	mov    WORD PTR [rbp+0x12],ax
  421f99:	mov    rax,QWORD PTR [r13+0x240]
  421fa0:	mov    QWORD PTR [rbp+0xc0],rax
  421fa7:	mov    QWORD PTR [r13+0x240],rbp
  421fae:	add    rsp,0x18
  421fb2:	pop    rbx
  421fb3:	pop    rbp
  421fb4:	pop    r12
  421fb6:	pop    r13
  421fb8:	pop    r14
  421fba:	xor    eax,eax
  421fbc:	pop    r15
  421fbe:	ret    
  421fbf:	nop
  421fc0:	mov    r14,QWORD PTR [rbx+0x18]
  421fc4:	movzx  eax,WORD PTR [r14+0x10]
  421fc9:	cmp    ax,0x3
  421fcd:	je     4221d0 <__flatcc_fb_clear_parser@@Base+0x460>
  421fd3:	cmp    ax,0x1
  421fd7:	jne    4222e4 <__flatcc_fb_clear_parser@@Base+0x574>
  421fdd:	movzx  eax,WORD PTR [r14+0x12]
  421fe2:	test   al,0x1
  421fe4:	jne    4222bd <__flatcc_fb_clear_parser@@Base+0x54d>
  421fea:	test   al,0x2
  421fec:	jne    42202c <__flatcc_fb_clear_parser@@Base+0x2bc>
  421fee:	mov    eax,DWORD PTR [r13+0x128]
  421ff5:	test   eax,eax
  421ff7:	jne    422210 <__flatcc_fb_clear_parser@@Base+0x4a0>
  421ffd:	inc    DWORD PTR [r13+0xe0]
  422004:	mov    rsi,r14
  422007:	mov    rdi,r13
  42200a:	call   421ea0 <__flatcc_fb_clear_parser@@Base+0x130>
  42200f:	dec    DWORD PTR [r13+0xe0]
  422016:	test   eax,eax
  422018:	lea    r10,[rip+0x26321]        # 448340 <fb_schema_table_missing@@Base+0x26c0>
  42201f:	lea    r11,[rip+0x24dba]        # 446de0 <fb_schema_table_missing@@Base+0x1160>
  422026:	jne    421f63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  42202c:	movzx  ecx,WORD PTR [r14+0xb0]
  422034:	mov    rax,QWORD PTR [r14+0xb8]
  42203b:	movzx  edx,cx
  42203e:	mov    QWORD PTR [rbx+0x80],rax
  422045:	lea    rax,[rdx-0x1]
  422049:	mov    WORD PTR [rbx+0x72],cx
  42204d:	cmp    rax,0xff
  422053:	jbe    4220c8 <__flatcc_fb_clear_parser@@Base+0x358>
  422055:	nop    DWORD PTR [rax]
  422058:	lea    rcx,[rip+0x263b9]        # 448418 <fb_schema_table_missing@@Base+0x2798>
  42205f:	mov    edx,0x6c
  422064:	lea    rsi,[rip+0x24c05]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  42206b:	lea    rdi,[rip+0x26017]        # 448089 <fb_schema_table_missing@@Base+0x2409>
  422072:	call   4052e0 <__assert_fail@plt>
  422077:	nop    WORD PTR [rax+rax*1+0x0]
  422080:	mov    rcx,QWORD PTR [rbx+0x18]
  422084:	mov    rax,QWORD PTR [rcx+0x20]
  422088:	add    rax,0x3e7
  42208e:	cmp    rax,0x1b
  422092:	ja     4221e0 <__flatcc_fb_clear_parser@@Base+0x470>
  422098:	mov    eax,DWORD PTR [r10+rax*4]
  42209c:	mov    DWORD PTR [rbx+0x18],eax
  42209f:	movsxd rax,DWORD PTR [r15+rax*4]
  4220a3:	test   rax,rax
  4220a6:	je     4221e7 <__flatcc_fb_clear_parser@@Base+0x477>
  4220ac:	mov    ecx,eax
  4220ae:	movzx  edx,cx
  4220b1:	mov    WORD PTR [rbx+0x72],ax
  4220b5:	mov    QWORD PTR [rbx+0x80],rax
  4220bc:	lea    rax,[rdx-0x1]
  4220c0:	cmp    rax,0xff
  4220c6:	ja     422058 <__flatcc_fb_clear_parser@@Base+0x2e8>
  4220c8:	cmp    rdx,0x1
  4220cc:	je     4220f1 <__flatcc_fb_clear_parser@@Base+0x381>
  4220ce:	mov    eax,0x2
  4220d3:	cmp    rdx,rax
  4220d6:	je     4220f1 <__flatcc_fb_clear_parser@@Base+0x381>
  4220d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4220e0:	add    rax,rax
  4220e3:	cmp    rdx,rax
  4220e6:	jb     422058 <__flatcc_fb_clear_parser@@Base+0x2e8>
  4220ec:	cmp    rdx,rax
  4220ef:	jne    4220e0 <__flatcc_fb_clear_parser@@Base+0x370>
  4220f1:	mov    rsi,QWORD PTR [rbp+0xb8]
  4220f8:	lea    rax,[rdx+rsi*1-0x1]
  4220fd:	neg    rdx
  422100:	and    rdx,rax
  422103:	mov    QWORD PTR [rbx+0x78],rdx
  422107:	cmp    rsi,rdx
  42210a:	ja     42225b <__flatcc_fb_clear_parser@@Base+0x4eb>
  422110:	add    rdx,QWORD PTR [rbx+0x80]
  422117:	mov    r14,rdx
  42211a:	jb     42225b <__flatcc_fb_clear_parser@@Base+0x4eb>
  422120:	cmp    rdx,0xffff
  422127:	ja     4221a0 <__flatcc_fb_clear_parser@@Base+0x430>
  422129:	mov    rbx,QWORD PTR [rbx]
  42212c:	cmp    r12w,cx
  422130:	mov    QWORD PTR [rbp+0xb8],r14
  422137:	cmovb  r12d,ecx
  42213b:	test   rbx,rbx
  42213e:	jne    421f0f <__flatcc_fb_clear_parser@@Base+0x19f>
  422144:	movzx  edx,WORD PTR [rbp+0xb0]
  42214b:	test   dx,dx
  42214e:	je     422280 <__flatcc_fb_clear_parser@@Base+0x510>
  422154:	cmp    dx,r12w
  422158:	jb     422291 <__flatcc_fb_clear_parser@@Base+0x521>
  42215e:	lea    rax,[rdx-0x1]
  422162:	cmp    rax,0xff
  422168:	ja     422058 <__flatcc_fb_clear_parser@@Base+0x2e8>
  42216e:	cmp    rdx,0x1
  422172:	je     421f72 <__flatcc_fb_clear_parser@@Base+0x202>
  422178:	mov    eax,0x2
  42217d:	nop    DWORD PTR [rax]
  422180:	cmp    rdx,rax
  422183:	je     421f72 <__flatcc_fb_clear_parser@@Base+0x202>
  422189:	add    rax,rax
  42218c:	cmp    rdx,rax
  42218f:	jae    422180 <__flatcc_fb_clear_parser@@Base+0x410>
  422191:	jmp    422058 <__flatcc_fb_clear_parser@@Base+0x2e8>
  422196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4221a0:	mov    rsi,QWORD PTR [rbx+0x8]
  4221a4:	xor    ecx,ecx
  4221a6:	mov    rdx,r11
  4221a9:	xor    r9d,r9d
  4221ac:	xor    r8d,r8d
  4221af:	mov    rdi,r13
  4221b2:	call   41d870 <__flatcc_error_report@@Base>
  4221b7:	movzx  ecx,WORD PTR [rbx+0x72]
  4221bb:	lea    r10,[rip+0x2617e]        # 448340 <fb_schema_table_missing@@Base+0x26c0>
  4221c2:	lea    r11,[rip+0x24c17]        # 446de0 <fb_schema_table_missing@@Base+0x1160>
  4221c9:	jmp    422129 <__flatcc_fb_clear_parser@@Base+0x3b9>
  4221ce:	xchg   ax,ax
  4221d0:	mov    rax,QWORD PTR [r14+0xb8]
  4221d7:	jmp    4220ac <__flatcc_fb_clear_parser@@Base+0x33c>
  4221dc:	nop    DWORD PTR [rax+0x0]
  4221e0:	mov    DWORD PTR [rbx+0x18],0x0
  4221e7:	mov    rsi,QWORD PTR [rbx+0x8]
  4221eb:	xor    r9d,r9d
  4221ee:	xor    r8d,r8d
  4221f1:	lea    rdx,[rip+0x25e81]        # 448079 <fb_schema_table_missing@@Base+0x23f9>
  4221f8:	mov    rdi,r13
  4221fb:	call   41d870 <__flatcc_error_report@@Base>
  422200:	mov    eax,0xffffffff
  422205:	jmp    421f63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  42220a:	nop    WORD PTR [rax+rax*1+0x0]
  422210:	mov    rcx,QWORD PTR [r14+0x8]
  422214:	mov    rsi,QWORD PTR [rbx+0x8]
  422218:	xor    r9d,r9d
  42221b:	xor    r8d,r8d
  42221e:	lea    rdx,[rip+0x24b4b]        # 446d70 <fb_schema_table_missing@@Base+0x10f0>
  422225:	mov    rdi,r13
  422228:	call   41d870 <__flatcc_error_report@@Base>
  42222d:	jmp    421ffd <__flatcc_fb_clear_parser@@Base+0x28d>
  422232:	nop    WORD PTR [rax+rax*1+0x0]
  422238:	xor    r9d,r9d
  42223b:	xor    r8d,r8d
  42223e:	xor    ecx,ecx
  422240:	lea    rdx,[rip+0x24ab9]        # 446d00 <fb_schema_table_missing@@Base+0x1080>
  422247:	xor    esi,esi
  422249:	mov    rdi,r13
  42224c:	call   41d870 <__flatcc_error_report@@Base>
  422251:	mov    eax,0xffffffff
  422256:	jmp    421f63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  42225b:	mov    rsi,QWORD PTR [rbx+0x8]
  42225f:	xor    r9d,r9d
  422262:	xor    r8d,r8d
  422265:	xor    ecx,ecx
  422267:	lea    rdx,[rip+0x25e31]        # 44809f <fb_schema_table_missing@@Base+0x241f>
  42226e:	mov    rdi,r13
  422271:	call   41d870 <__flatcc_error_report@@Base>
  422276:	mov    eax,0xffffffff
  42227b:	jmp    421f63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422280:	mov    WORD PTR [rbp+0xb0],r12w
  422288:	movzx  edx,r12w
  42228c:	jmp    42215e <__flatcc_fb_clear_parser@@Base+0x3ee>
  422291:	mov    rsi,QWORD PTR [rbp+0x8]
  422295:	lea    rdx,[rip+0x24b7c]        # 446e18 <fb_schema_table_missing@@Base+0x1198>
  42229c:	xor    r9d,r9d
  42229f:	xor    r8d,r8d
  4222a2:	xor    ecx,ecx
  4222a4:	mov    rdi,r13
  4222a7:	call   41d870 <__flatcc_error_report@@Base>
  4222ac:	mov    WORD PTR [rbp+0xb0],r12w
  4222b4:	movzx  edx,r12w
  4222b8:	jmp    42215e <__flatcc_fb_clear_parser@@Base+0x3ee>
  4222bd:	mov    rcx,QWORD PTR [r14+0x8]
  4222c1:	mov    rsi,QWORD PTR [rbx+0x8]
  4222c5:	xor    r9d,r9d
  4222c8:	xor    r8d,r8d
  4222cb:	lea    rdx,[rip+0x24a7e]        # 446d50 <fb_schema_table_missing@@Base+0x10d0>
  4222d2:	mov    rdi,r13
  4222d5:	call   41d870 <__flatcc_error_report@@Base>
  4222da:	mov    eax,0xffffffff
  4222df:	jmp    421f63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  4222e4:	mov    rsi,QWORD PTR [rbx+0x8]
  4222e8:	xor    r9d,r9d
  4222eb:	xor    r8d,r8d
  4222ee:	xor    ecx,ecx
  4222f0:	lea    rdx,[rip+0x24ac1]        # 446db8 <fb_schema_table_missing@@Base+0x1138>
  4222f7:	mov    rdi,r13
  4222fa:	call   41d870 <__flatcc_error_report@@Base>
  4222ff:	mov    eax,0xffffffff
  422304:	jmp    421f63 <__flatcc_fb_clear_parser@@Base+0x1f3>
  422309:	lea    rcx,[rip+0x26118]        # 448428 <fb_schema_table_missing@@Base+0x27a8>
  422310:	mov    edx,0x1f8
  422315:	lea    rsi,[rip+0x24954]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  42231c:	lea    rdi,[rip+0x249b5]        # 446cd8 <fb_schema_table_missing@@Base+0x1058>
  422323:	call   4052e0 <__assert_fail@plt>
  422328:	lea    rcx,[rip+0x260f9]        # 448428 <fb_schema_table_missing@@Base+0x27a8>
  42232f:	mov    edx,0x1f6
  422334:	lea    rsi,[rip+0x24935]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  42233b:	lea    rdi,[rip+0xcd9e]        # 42f0e0 <_IO_stdin_used@@Base+0x20e0>
  422342:	call   4052e0 <__assert_fail@plt>
  422347:	lea    rcx,[rip+0x260da]        # 448428 <fb_schema_table_missing@@Base+0x27a8>
  42234e:	mov    edx,0x1fc
  422353:	lea    rsi,[rip+0x24916]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  42235a:	lea    rdi,[rip+0x25d0d]        # 44806e <fb_schema_table_missing@@Base+0x23ee>
  422361:	call   4052e0 <__assert_fail@plt>
  422366:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422370:	push   r15
  422372:	push   r14
  422374:	mov    r14,rsi
  422377:	push   r13
  422379:	push   r12
  42237b:	push   rbp
  42237c:	push   rbx
  42237d:	mov    rbx,rdi
  422380:	sub    rsp,0xf8
  422387:	mov    rax,QWORD PTR fs:0x28
  422390:	mov    QWORD PTR [rsp+0xe8],rax
  422398:	xor    eax,eax
  42239a:	movzx  eax,WORD PTR [rsi+0x10]
  42239e:	mov    WORD PTR [rsp+0x16],ax
  4223a3:	cmp    ax,0x4
  4223a7:	je     422c40 <__flatcc_fb_clear_parser@@Base+0xed0>
  4223ad:	cmp    ax,0x3
  4223b1:	jne    423019 <__flatcc_fb_clear_parser@@Base+0x12a9>
  4223b7:	movzx  eax,WORD PTR [rsi+0x58]
  4223bb:	test   ax,ax
  4223be:	je     422fec <__flatcc_fb_clear_parser@@Base+0x127c>
  4223c4:	cmp    ax,0x8
  4223c8:	jne    422f89 <__flatcc_fb_clear_parser@@Base+0x1219>
  4223ce:	mov    rax,QWORD PTR [rsi+0x48]
  4223d2:	mov    rax,QWORD PTR [rax+0x20]
  4223d6:	add    rax,0x3e7
  4223dc:	cmp    rax,0x1b
  4223e0:	ja     4227b8 <__flatcc_fb_clear_parser@@Base+0xa48>
  4223e6:	lea    rdx,[rip+0x25f53]        # 448340 <fb_schema_table_missing@@Base+0x26c0>
  4223ed:	mov    ecx,DWORD PTR [rdx+rax*4]
  4223f0:	lea    rax,[rip+0x26049]        # 448440 <fb_schema_table_missing@@Base+0x27c0>
  4223f7:	movsxd rax,DWORD PTR [rax+rcx*4]
  4223fb:	mov    rdx,rcx
  4223fe:	mov    ecx,eax
  422400:	mov    DWORD PTR [r14+0x48],edx
  422404:	mov    QWORD PTR [r14+0xb8],rax
  42240b:	mov    WORD PTR [r14+0xb0],cx
  422413:	lea    r13,[rsp+0x80]
  42241b:	mov    r15,QWORD PTR [r14+0x38]
  42241f:	mov    ecx,0xc
  422424:	xor    eax,eax
  422426:	mov    rdi,r13
  422429:	rep stos QWORD PTR es:[rdi],rax
  42242c:	mov    ebp,0x64
  422431:	xor    r12d,r12d
  422434:	test   r15,r15
  422437:	jne    422476 <__flatcc_fb_clear_parser@@Base+0x706>
  422439:	jmp    422ea5 <__flatcc_fb_clear_parser@@Base+0x1135>
  42243e:	xchg   ax,ax
  422440:	lea    rsi,[rip+0x26059]        # 4484a0 <fb_schema_table_missing@@Base+0x2820>
  422447:	mov    eax,DWORD PTR [rsi+rax*4]
  42244a:	mov    QWORD PTR [rdx],r15
  42244d:	test   eax,eax
  42244f:	jne    4227c8 <__flatcc_fb_clear_parser@@Base+0xa58>
  422455:	cmp    WORD PTR [r15+0x20],0x0
  42245b:	jne    422c9e <__flatcc_fb_clear_parser@@Base+0xf2e>
  422461:	nop    DWORD PTR [rax+0x0]
  422468:	mov    r15,QWORD PTR [r15]
  42246b:	dec    ebp
  42246d:	test   r15,r15
  422470:	je     4224f0 <__flatcc_fb_clear_parser@@Base+0x780>
  422472:	test   ebp,ebp
  422474:	je     4224f0 <__flatcc_fb_clear_parser@@Base+0x780>
  422476:	mov    rax,QWORD PTR [r15+0x8]
  42247a:	mov    rcx,QWORD PTR [rbx+0x260]
  422481:	mov    rdx,QWORD PTR [rax+0x8]
  422485:	mov    rsi,QWORD PTR [rax]
  422488:	lea    rdi,[rcx+0x20]
  42248c:	call   42c730 <fb_name_table_find@@Base>
  422491:	test   rax,rax
  422494:	je     422a70 <__flatcc_fb_clear_parser@@Base+0xd00>
  42249a:	movsxd rax,DWORD PTR [rax+0x20]
  42249e:	test   eax,eax
  4224a0:	je     422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  4224a2:	cmp    al,0x5
  4224a4:	jne    422848 <__flatcc_fb_clear_parser@@Base+0xad8>
  4224aa:	mov    edx,0x1
  4224af:	shlx   edx,edx,eax
  4224b4:	or     r12d,edx
  4224b7:	lea    rdx,[r13+rax*8+0x0]
  4224bc:	cmp    QWORD PTR [rdx],0x0
  4224c0:	je     422440 <__flatcc_fb_clear_parser@@Base+0x6d0>
  4224c6:	mov    rsi,QWORD PTR [r15+0x8]
  4224ca:	xor    r9d,r9d
  4224cd:	xor    r8d,r8d
  4224d0:	xor    ecx,ecx
  4224d2:	lea    rdx,[rip+0x24a47]        # 446f20 <fb_schema_table_missing@@Base+0x12a0>
  4224d9:	mov    rdi,rbx
  4224dc:	call   41d870 <__flatcc_error_report@@Base>
  4224e1:	mov    r15,QWORD PTR [r15]
  4224e4:	dec    ebp
  4224e6:	test   r15,r15
  4224e9:	jne    422472 <__flatcc_fb_clear_parser@@Base+0x702>
  4224eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4224f0:	mov    ebp,r12d
  4224f3:	and    ebp,0x20
  4224f6:	test   r15,r15
  4224f9:	je     422516 <__flatcc_fb_clear_parser@@Base+0x7a6>
  4224fb:	mov    rsi,QWORD PTR [r15+0x8]
  4224ff:	xor    r9d,r9d
  422502:	xor    r8d,r8d
  422505:	xor    ecx,ecx
  422507:	lea    rdx,[rip+0x25bda]        # 4480e8 <fb_schema_table_missing@@Base+0x2468>
  42250e:	mov    rdi,rbx
  422511:	call   41d870 <__flatcc_error_report@@Base>
  422516:	mov    WORD PTR [r14+0xa4],r12w
  42251e:	mov    DWORD PTR [rsp+0x38],0x0
  422526:	test   bp,bp
  422529:	je     42253c <__flatcc_fb_clear_parser@@Base+0x7cc>
  42252b:	mov    QWORD PTR [rsp+0x40],0x0
  422534:	mov    DWORD PTR [rsp+0x38],0x1
  42253c:	mov    edx,DWORD PTR [r14+0x48]
  422540:	cmp    edx,0x5
  422543:	jne    422bc0 <__flatcc_fb_clear_parser@@Base+0xe50>
  422549:	mov    esi,0x6
  42254e:	mov    BYTE PTR [rsp+0x40],0x0
  422553:	mov    WORD PTR [rsp+0x50],si
  422558:	vmovdqa xmm4,XMMWORD PTR [rsp+0x40]
  42255e:	mov    rax,QWORD PTR [rsp+0x50]
  422563:	mov    r15,QWORD PTR [r14+0x28]
  422567:	vmovaps XMMWORD PTR [rsp+0x60],xmm4
  42256d:	mov    QWORD PTR [rsp+0x70],rax
  422572:	test   r15,r15
  422575:	je     422788 <__flatcc_fb_clear_parser@@Base+0xa18>
  42257b:	lea    rax,[r14+0x60]
  42257f:	mov    QWORD PTR [rsp+0x8],rax
  422584:	lea    rax,[r14+0x80]
  42258b:	mov    QWORD PTR [rsp+0x18],rax
  422590:	lea    rax,[rsp+0x40]
  422595:	mov    ebp,0x1
  42259a:	mov    QWORD PTR [rsp+0x28],rax
  42259f:	mov    QWORD PTR [rsp+0x20],r14
  4225a4:	jmp    4225f5 <__flatcc_fb_clear_parser@@Base+0x885>
  4225a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4225b0:	mov    rcx,QWORD PTR [rax+0x8]
  4225b4:	lea    rax,[rbx+0x80]
  4225bb:	mov    rsi,QWORD PTR [r15+0x8]
  4225bf:	xor    r9d,r9d
  4225c2:	xor    r8d,r8d
  4225c5:	cmp    rcx,rax
  4225c8:	je     422870 <__flatcc_fb_clear_parser@@Base+0xb00>
  4225ce:	lea    rdx,[rip+0x25b44]        # 448119 <fb_schema_table_missing@@Base+0x2499>
  4225d5:	mov    rdi,rbx
  4225d8:	call   41d870 <__flatcc_error_report@@Base>
  4225dd:	mov    eax,0x1
  4225e2:	mov    WORD PTR [r15+0x28],ax
  4225e7:	mov    r15,QWORD PTR [r15]
  4225ea:	xor    ebp,ebp
  4225ec:	test   r15,r15
  4225ef:	je     422788 <__flatcc_fb_clear_parser@@Base+0xa18>
  4225f5:	mov    rdi,QWORD PTR [rsp+0x8]
  4225fa:	mov    edx,0x1
  4225ff:	mov    rsi,r15
  422602:	call   41b4f0 <fb_symbol_table_insert_item@@Base>
  422607:	test   rax,rax
  42260a:	jne    4225b0 <__flatcc_fb_clear_parser@@Base+0x840>
  42260c:	cmp    WORD PTR [r15+0x10],0x5
  422612:	jne    422e1e <__flatcc_fb_clear_parser@@Base+0x10ae>
  422618:	cmp    QWORD PTR [r15+0x60],0x0
  42261d:	jne    422fab <__flatcc_fb_clear_parser@@Base+0x123b>
  422623:	cmp    WORD PTR [rsp+0x16],0x4
  422629:	je     422890 <__flatcc_fb_clear_parser@@Base+0xb20>
  42262f:	movzx  eax,WORD PTR [r15+0x58]
  422634:	xor    ebp,0x1
  422637:	test   ax,ax
  42263a:	jne    422645 <__flatcc_fb_clear_parser@@Base+0x8d5>
  42263c:	test   bpl,bpl
  42263f:	jne    422910 <__flatcc_fb_clear_parser@@Base+0xba0>
  422645:	mov    r10d,DWORD PTR [rsp+0x38]
  42264a:	test   r10d,r10d
  42264d:	je     4228f0 <__flatcc_fb_clear_parser@@Base+0xb80>
  422653:	test   ax,ax
  422656:	je     422677 <__flatcc_fb_clear_parser@@Base+0x907>
  422658:	cmp    ax,0x5
  42265c:	jne    422f41 <__flatcc_fb_clear_parser@@Base+0x11d1>
  422662:	mov    rax,QWORD PTR [r15+0x58]
  422666:	vmovdqu xmm2,XMMWORD PTR [r15+0x48]
  42266c:	mov    QWORD PTR [rsp+0x50],rax
  422671:	vmovaps XMMWORD PTR [rsp+0x40],xmm2
  422677:	mov    rax,QWORD PTR [rsp+0x20]
  42267c:	lea    rdi,[rip+0x25dbd]        # 448440 <fb_schema_table_missing@@Base+0x27c0>
  422683:	mov    eax,DWORD PTR [rax+0x48]
  422686:	mov    rcx,QWORD PTR [rsp+0x40]
  42268b:	mov    rdx,rax
  42268e:	movsxd rax,DWORD PTR [rdi+rax*4]
  422692:	shl    rax,0x3
  422696:	cmp    rcx,rax
  422699:	jae    422e43 <__flatcc_fb_clear_parser@@Base+0x10d3>
  42269f:	mov    eax,0x1
  4226a4:	mov    r9d,0x5
  4226aa:	shlx   rax,rax,rcx
  4226af:	mov    WORD PTR [r15+0x58],r9w
  4226b4:	mov    QWORD PTR [r15+0x48],rax
  4226b8:	lea    rcx,[r15+0x48]
  4226bc:	mov    rsi,r15
  4226bf:	mov    rdi,rbx
  4226c2:	call   426d30 <__flatcc_fb_coerce_scalar_type@@Base>
  4226c7:	test   eax,eax
  4226c9:	jne    422e43 <__flatcc_fb_clear_parser@@Base+0x10d3>
  4226cf:	test   bpl,bpl
  4226d2:	je     422710 <__flatcc_fb_clear_parser@@Base+0x9a0>
  4226d4:	mov    r8d,DWORD PTR [rbx+0x120]
  4226db:	test   r8d,r8d
  4226de:	je     422710 <__flatcc_fb_clear_parser@@Base+0x9a0>
  4226e0:	movzx  eax,WORD PTR [rsp+0x50]
  4226e5:	cmp    ax,0x5
  4226e9:	je     422a90 <__flatcc_fb_clear_parser@@Base+0xd20>
  4226ef:	cmp    ax,0x4
  4226f3:	jne    422ae8 <__flatcc_fb_clear_parser@@Base+0xd78>
  4226f9:	mov    rax,QWORD PTR [rsp+0x60]
  4226fe:	cmp    QWORD PTR [rsp+0x40],rax
  422703:	jle    422aa0 <__flatcc_fb_clear_parser@@Base+0xd30>
  422709:	nop    DWORD PTR [rax+0x0]
  422710:	vmovdqa xmm0,XMMWORD PTR [rsp+0x40]
  422716:	mov    rax,QWORD PTR [rsp+0x50]
  42271b:	mov    rdi,QWORD PTR [rsp+0x18]
  422720:	lea    rsi,[r15+0x48]
  422724:	mov    edx,0x1
  422729:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  42272f:	mov    QWORD PTR [rsp+0x70],rax
  422734:	call   42ce30 <fb_value_set_insert_item@@Base>
  422739:	test   rax,rax
  42273c:	je     422750 <__flatcc_fb_clear_parser@@Base+0x9e0>
  42273e:	cmp    WORD PTR [rsp+0x16],0x4
  422744:	je     422ee8 <__flatcc_fb_clear_parser@@Base+0x1178>
  42274a:	or     WORD PTR [r15+0x12],0x4
  422750:	cmp    QWORD PTR [r15+0x60],0x0
  422755:	je     4225e7 <__flatcc_fb_clear_parser@@Base+0x877>
  42275b:	mov    rsi,QWORD PTR [r15+0x8]
  42275f:	xor    r9d,r9d
  422762:	xor    r8d,r8d
  422765:	xor    ecx,ecx
  422767:	lea    rdx,[rip+0x24b8a]        # 4472f8 <fb_schema_table_missing@@Base+0x1678>
  42276e:	mov    rdi,rbx
  422771:	call   41d870 <__flatcc_error_report@@Base>
  422776:	mov    r15,QWORD PTR [r15]
  422779:	xor    ebp,ebp
  42277b:	test   r15,r15
  42277e:	jne    4225f5 <__flatcc_fb_clear_parser@@Base+0x885>
  422784:	nop    DWORD PTR [rax+0x0]
  422788:	xor    eax,eax
  42278a:	mov    rbx,QWORD PTR [rsp+0xe8]
  422792:	xor    rbx,QWORD PTR fs:0x28
  42279b:	jne    423038 <__flatcc_fb_clear_parser@@Base+0x12c8>
  4227a1:	add    rsp,0xf8
  4227a8:	pop    rbx
  4227a9:	pop    rbp
  4227aa:	pop    r12
  4227ac:	pop    r13
  4227ae:	pop    r14
  4227b0:	pop    r15
  4227b2:	ret    
  4227b3:	nop    DWORD PTR [rax+rax*1+0x0]
  4227b8:	xor    ecx,ecx
  4227ba:	xor    eax,eax
  4227bc:	xor    edx,edx
  4227be:	jmp    422400 <__flatcc_fb_clear_parser@@Base+0x690>
  4227c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4227c8:	cmp    eax,0x2
  4227cb:	jne    422800 <__flatcc_fb_clear_parser@@Base+0xa90>
  4227cd:	cmp    WORD PTR [r15+0x20],0x2
  4227d3:	je     422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  4227d9:	mov    rsi,QWORD PTR [r15+0x8]
  4227dd:	xor    r9d,r9d
  4227e0:	xor    r8d,r8d
  4227e3:	xor    ecx,ecx
  4227e5:	lea    rdx,[rip+0x24784]        # 446f70 <fb_schema_table_missing@@Base+0x12f0>
  4227ec:	mov    rdi,rbx
  4227ef:	call   41d870 <__flatcc_error_report@@Base>
  4227f4:	jmp    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  4227f9:	nop    DWORD PTR [rax+0x0]
  422800:	cmp    eax,0x5
  422803:	je     422b30 <__flatcc_fb_clear_parser@@Base+0xdc0>
  422809:	cmp    eax,0x4
  42280c:	jne    422b60 <__flatcc_fb_clear_parser@@Base+0xdf0>
  422812:	movzx  eax,WORD PTR [r15+0x20]
  422817:	sub    eax,0x4
  42281a:	cmp    ax,0x1
  42281e:	jbe    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422824:	mov    rsi,QWORD PTR [r15+0x8]
  422828:	xor    r9d,r9d
  42282b:	xor    r8d,r8d
  42282e:	xor    ecx,ecx
  422830:	lea    rdx,[rip+0x24791]        # 446fc8 <fb_schema_table_missing@@Base+0x1348>
  422837:	mov    rdi,rbx
  42283a:	call   41d870 <__flatcc_error_report@@Base>
  42283f:	jmp    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422844:	nop    DWORD PTR [rax+0x0]
  422848:	mov    rsi,QWORD PTR [r15+0x8]
  42284c:	xor    r9d,r9d
  42284f:	xor    r8d,r8d
  422852:	xor    ecx,ecx
  422854:	lea    rdx,[rip+0x24695]        # 446ef0 <fb_schema_table_missing@@Base+0x1270>
  42285b:	mov    rdi,rbx
  42285e:	call   41d870 <__flatcc_error_report@@Base>
  422863:	jmp    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422868:	nop    DWORD PTR [rax+rax*1+0x0]
  422870:	lea    rdx,[rip+0x25885]        # 4480fc <fb_schema_table_missing@@Base+0x247c>
  422877:	xor    ecx,ecx
  422879:	mov    rdi,rbx
  42287c:	call   41d870 <__flatcc_error_report@@Base>
  422881:	mov    edx,0x1
  422886:	mov    WORD PTR [r15+0x28],dx
  42288b:	jmp    4225e7 <__flatcc_fb_clear_parser@@Base+0x877>
  422890:	mov    rsi,QWORD PTR [r15+0x8]
  422894:	lea    rax,[rbx+0x80]
  42289b:	cmp    rsi,rax
  42289e:	je     422a60 <__flatcc_fb_clear_parser@@Base+0xcf0>
  4228a4:	movzx  eax,WORD PTR [r15+0x28]
  4228a9:	cmp    ax,0xa
  4228ad:	je     422a4b <__flatcc_fb_clear_parser@@Base+0xcdb>
  4228b3:	cmp    ax,0xc
  4228b7:	je     422990 <__flatcc_fb_clear_parser@@Base+0xc20>
  4228bd:	cmp    ax,0x1
  4228c1:	je     4225e7 <__flatcc_fb_clear_parser@@Base+0x877>
  4228c7:	xor    r9d,r9d
  4228ca:	xor    r8d,r8d
  4228cd:	xor    ecx,ecx
  4228cf:	lea    rdx,[rip+0x247ba]        # 447090 <fb_schema_table_missing@@Base+0x1410>
  4228d6:	mov    rdi,rbx
  4228d9:	call   41d870 <__flatcc_error_report@@Base>
  4228de:	mov    eax,0x1
  4228e3:	mov    WORD PTR [r15+0x28],ax
  4228e8:	jmp    4225e7 <__flatcc_fb_clear_parser@@Base+0x877>
  4228ed:	nop    DWORD PTR [rax]
  4228f0:	test   ax,ax
  4228f3:	jne    422948 <__flatcc_fb_clear_parser@@Base+0xbd8>
  4228f5:	vmovdqa xmm1,XMMWORD PTR [rsp+0x40]
  4228fb:	mov    rax,QWORD PTR [rsp+0x50]
  422900:	vmovups XMMWORD PTR [r15+0x48],xmm1
  422906:	mov    QWORD PTR [r15+0x58],rax
  42290a:	jmp    4226cf <__flatcc_fb_clear_parser@@Base+0x95f>
  42290f:	nop
  422910:	movzx  eax,WORD PTR [rsp+0x50]
  422915:	cmp    ax,0x5
  422919:	je     422b98 <__flatcc_fb_clear_parser@@Base+0xe28>
  42291f:	cmp    ax,0x4
  422923:	je     422c10 <__flatcc_fb_clear_parser@@Base+0xea0>
  422929:	cmp    ax,0x6
  42292d:	je     422c7b <__flatcc_fb_clear_parser@@Base+0xf0b>
  422933:	mov    eax,DWORD PTR [rsp+0x38]
  422937:	test   eax,eax
  422939:	jne    422677 <__flatcc_fb_clear_parser@@Base+0x907>
  42293f:	jmp    4228f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  422941:	nop    DWORD PTR [rax+0x0]
  422948:	mov    rax,QWORD PTR [r15+0x58]
  42294c:	vmovdqu xmm3,XMMWORD PTR [r15+0x48]
  422952:	mov    QWORD PTR [rsp+0x50],rax
  422957:	mov    rax,QWORD PTR [rsp+0x20]
  42295c:	mov    rcx,QWORD PTR [rsp+0x28]
  422961:	mov    edx,DWORD PTR [rax+0x48]
  422964:	mov    rsi,r15
  422967:	mov    rdi,rbx
  42296a:	vmovaps XMMWORD PTR [rsp+0x40],xmm3
  422970:	call   426d30 <__flatcc_fb_coerce_scalar_type@@Base>
  422975:	test   eax,eax
  422977:	je     4228f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  42297d:	mov    eax,0xffffffff
  422982:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422987:	nop    WORD PTR [rax+rax*1+0x0]
  422990:	mov    rax,QWORD PTR [rsp+0x20]
  422995:	mov    r8,QWORD PTR [r15+0x18]
  422999:	mov    r13,QWORD PTR [rax+0x18]
  42299d:	test   r8,r8
  4229a0:	je     422d2c <__flatcc_fb_clear_parser@@Base+0xfbc>
  4229a6:	mov    rcx,r8
  4229a9:	xor    eax,eax
  4229ab:	jmp    4229b5 <__flatcc_fb_clear_parser@@Base+0xc45>
  4229ad:	nop    DWORD PTR [rax]
  4229b0:	mov    eax,edx
  4229b2:	mov    rcx,rsi
  4229b5:	mov    rsi,QWORD PTR [rcx]
  4229b8:	lea    edx,[rax+0x1]
  4229bb:	test   rsi,rsi
  4229be:	jne    4229b0 <__flatcc_fb_clear_parser@@Base+0xc40>
  4229c0:	mov    r14,rcx
  4229c3:	test   r13,r13
  4229c6:	je     422cbe <__flatcc_fb_clear_parser@@Base+0xf4e>
  4229cc:	lea    rcx,[rbx+0x320]
  4229d3:	mov    QWORD PTR [rsp+0x30],rcx
  4229d8:	cmp    edx,0x1
  4229db:	jne    422cbe <__flatcc_fb_clear_parser@@Base+0xf4e>
  4229e1:	mov    DWORD PTR [rsp+0x3c],ebp
  4229e5:	nop    DWORD PTR [rax]
  4229e8:	mov    rax,QWORD PTR [r14+0x8]
  4229ec:	lea    rdi,[r13+0x8]
  4229f0:	mov    rdx,QWORD PTR [rax+0x8]
  4229f4:	mov    rsi,QWORD PTR [rax]
  4229f7:	call   41b510 <fb_symbol_table_find@@Base>
  4229fc:	mov    r12,rax
  4229ff:	test   rax,rax
  422a02:	je     422d50 <__flatcc_fb_clear_parser@@Base+0xfe0>
  422a08:	cmp    WORD PTR [rax+0x10],0x4
  422a0d:	ja     422d50 <__flatcc_fb_clear_parser@@Base+0xfe0>
  422a13:	mov    rsi,QWORD PTR [rax+0x20]
  422a17:	mov    rdi,QWORD PTR [rsp+0x30]
  422a1c:	call   41adb0 <ptr_set_find_item@@Base>
  422a21:	test   rax,rax
  422a24:	je     422d50 <__flatcc_fb_clear_parser@@Base+0xfe0>
  422a2a:	mov    ebp,DWORD PTR [rsp+0x3c]
  422a2e:	mov    r14,r12
  422a31:	cmp    WORD PTR [r14+0x10],0x1
  422a37:	ja     422ebc <__flatcc_fb_clear_parser@@Base+0x114c>
  422a3d:	mov    eax,0xe
  422a42:	mov    WORD PTR [r15+0x28],ax
  422a47:	mov    QWORD PTR [r15+0x18],r14
  422a4b:	mov    QWORD PTR [r15+0x80],0x0
  422a56:	jmp    42262f <__flatcc_fb_clear_parser@@Base+0x8bf>
  422a5b:	nop    DWORD PTR [rax+rax*1+0x0]
  422a60:	xor    eax,eax
  422a62:	mov    WORD PTR [r15+0x28],ax
  422a67:	jmp    42262f <__flatcc_fb_clear_parser@@Base+0x8bf>
  422a6c:	nop    DWORD PTR [rax+0x0]
  422a70:	mov    rsi,QWORD PTR [r15+0x8]
  422a74:	xor    r9d,r9d
  422a77:	xor    r8d,r8d
  422a7a:	xor    ecx,ecx
  422a7c:	lea    rdx,[rip+0x2444d]        # 446ed0 <fb_schema_table_missing@@Base+0x1250>
  422a83:	mov    rdi,rbx
  422a86:	call   41d870 <__flatcc_error_report@@Base>
  422a8b:	jmp    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422a90:	mov    rax,QWORD PTR [rsp+0x60]
  422a95:	cmp    QWORD PTR [rsp+0x40],rax
  422a9a:	ja     422710 <__flatcc_fb_clear_parser@@Base+0x9a0>
  422aa0:	xor    r9d,r9d
  422aa3:	xor    r8d,r8d
  422aa6:	xor    ecx,ecx
  422aa8:	cmp    WORD PTR [rsp+0x16],0x4
  422aae:	mov    rsi,QWORD PTR [r15+0x8]
  422ab2:	jne    422ac0 <__flatcc_fb_clear_parser@@Base+0xd50>
  422ab4:	cmp    QWORD PTR [rsp+0x60],0x0
  422aba:	je     422f66 <__flatcc_fb_clear_parser@@Base+0x11f6>
  422ac0:	lea    rdx,[rip+0x24779]        # 447240 <fb_schema_table_missing@@Base+0x15c0>
  422ac7:	mov    rdi,rbx
  422aca:	call   41d870 <__flatcc_error_report@@Base>
  422acf:	mov    esi,0x1
  422ad4:	mov    WORD PTR [r15+0x58],si
  422ad9:	mov    eax,0xffffffff
  422ade:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422ae3:	nop    DWORD PTR [rax+rax*1+0x0]
  422ae8:	cmp    ax,0x6
  422aec:	jne    422710 <__flatcc_fb_clear_parser@@Base+0x9a0>
  422af2:	movzx  eax,BYTE PTR [rsp+0x60]
  422af7:	cmp    BYTE PTR [rsp+0x40],al
  422afb:	ja     422710 <__flatcc_fb_clear_parser@@Base+0x9a0>
  422b01:	mov    rsi,QWORD PTR [r15+0x8]
  422b05:	xor    ecx,ecx
  422b07:	xor    r9d,r9d
  422b0a:	xor    r8d,r8d
  422b0d:	lea    rdx,[rip+0x24754]        # 447268 <fb_schema_table_missing@@Base+0x15e8>
  422b14:	mov    rdi,rbx
  422b17:	call   41d870 <__flatcc_error_report@@Base>
  422b1c:	mov    ecx,0x1
  422b21:	mov    WORD PTR [r15+0x58],cx
  422b26:	mov    eax,0xffffffff
  422b2b:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422b30:	cmp    WORD PTR [r15+0x20],0x5
  422b36:	je     422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422b3c:	mov    rsi,QWORD PTR [r15+0x8]
  422b40:	xor    r9d,r9d
  422b43:	xor    r8d,r8d
  422b46:	xor    ecx,ecx
  422b48:	lea    rdx,[rip+0x24449]        # 446f98 <fb_schema_table_missing@@Base+0x1318>
  422b4f:	mov    rdi,rbx
  422b52:	call   41d870 <__flatcc_error_report@@Base>
  422b57:	jmp    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422b5c:	nop    DWORD PTR [rax+0x0]
  422b60:	cmp    eax,0x6
  422b63:	jne    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422b69:	cmp    WORD PTR [r15+0x20],0x6
  422b6f:	je     422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422b75:	mov    rsi,QWORD PTR [r15+0x8]
  422b79:	xor    r9d,r9d
  422b7c:	xor    r8d,r8d
  422b7f:	xor    ecx,ecx
  422b81:	lea    rdx,[rip+0x24468]        # 446ff0 <fb_schema_table_missing@@Base+0x1370>
  422b88:	mov    rdi,rbx
  422b8b:	call   41d870 <__flatcc_error_report@@Base>
  422b90:	jmp    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422b95:	nop    DWORD PTR [rax]
  422b98:	mov    rax,QWORD PTR [rsp+0x20]
  422b9d:	cmp    DWORD PTR [rax+0x48],0x6
  422ba1:	je     422de8 <__flatcc_fb_clear_parser@@Base+0x1078>
  422ba7:	mov    r13d,DWORD PTR [rsp+0x38]
  422bac:	inc    QWORD PTR [rsp+0x40]
  422bb1:	test   r13d,r13d
  422bb4:	jne    422677 <__flatcc_fb_clear_parser@@Base+0x907>
  422bba:	jmp    4228f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  422bbf:	nop
  422bc0:	mov    ecx,0x4
  422bc5:	mov    WORD PTR [rsp+0x50],cx
  422bca:	mov    rsi,r14
  422bcd:	lea    rcx,[rsp+0x40]
  422bd2:	mov    rdi,rbx
  422bd5:	mov    QWORD PTR [rsp+0x40],0x0
  422bde:	call   426d30 <__flatcc_fb_coerce_scalar_type@@Base>
  422be3:	test   eax,eax
  422be5:	je     422558 <__flatcc_fb_clear_parser@@Base+0x7e8>
  422beb:	xor    r9d,r9d
  422bee:	xor    r8d,r8d
  422bf1:	xor    ecx,ecx
  422bf3:	lea    rdx,[rip+0x24426]        # 447020 <fb_schema_table_missing@@Base+0x13a0>
  422bfa:	xor    esi,esi
  422bfc:	mov    rdi,rbx
  422bff:	call   41d870 <__flatcc_error_report@@Base>
  422c04:	mov    eax,0xffffffff
  422c09:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422c0e:	xchg   ax,ax
  422c10:	mov    rcx,QWORD PTR [rsp+0x20]
  422c15:	mov    rax,QWORD PTR [rsp+0x40]
  422c1a:	cmp    DWORD PTR [rcx+0x48],0x6
  422c1e:	je     422e68 <__flatcc_fb_clear_parser@@Base+0x10f8>
  422c24:	mov    r12d,DWORD PTR [rsp+0x38]
  422c29:	inc    rax
  422c2c:	mov    QWORD PTR [rsp+0x40],rax
  422c31:	test   r12d,r12d
  422c34:	jne    422677 <__flatcc_fb_clear_parser@@Base+0x907>
  422c3a:	jmp    4228f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  422c3f:	nop
  422c40:	cmp    WORD PTR [rsi+0x58],0x0
  422c45:	jne    422fca <__flatcc_fb_clear_parser@@Base+0x125a>
  422c4b:	mov    r8d,0x8
  422c51:	mov    r9d,0x1
  422c57:	mov    WORD PTR [rsi+0x58],r8w
  422c5c:	mov    DWORD PTR [rsi+0x48],0x4
  422c63:	mov    QWORD PTR [rsi+0xb8],0x1
  422c6e:	mov    WORD PTR [rsi+0xb0],r9w
  422c76:	jmp    422413 <__flatcc_fb_clear_parser@@Base+0x6a3>
  422c7b:	cmp    BYTE PTR [rsp+0x40],0x1
  422c80:	je     422f17 <__flatcc_fb_clear_parser@@Base+0x11a7>
  422c86:	mov    r11d,DWORD PTR [rsp+0x38]
  422c8b:	mov    BYTE PTR [rsp+0x40],0x1
  422c90:	test   r11d,r11d
  422c93:	jne    422677 <__flatcc_fb_clear_parser@@Base+0x907>
  422c99:	jmp    4228f5 <__flatcc_fb_clear_parser@@Base+0xb85>
  422c9e:	mov    rsi,QWORD PTR [r15+0x8]
  422ca2:	xor    r9d,r9d
  422ca5:	xor    r8d,r8d
  422ca8:	xor    ecx,ecx
  422caa:	lea    rdx,[rip+0x24297]        # 446f48 <fb_schema_table_missing@@Base+0x12c8>
  422cb1:	mov    rdi,rbx
  422cb4:	call   41d870 <__flatcc_error_report@@Base>
  422cb9:	jmp    422468 <__flatcc_fb_clear_parser@@Base+0x6f8>
  422cbe:	cmp    edx,0x1
  422cc1:	cmovne rsi,r8
  422cc5:	cmp    rbx,0xfffffffffffffe08
  422ccc:	je     422d2c <__flatcc_fb_clear_parser@@Base+0xfbc>
  422cce:	mov    rdi,QWORD PTR [rbx+0x260]
  422cd5:	test   rdi,rdi
  422cd8:	je     422d2c <__flatcc_fb_clear_parser@@Base+0xfbc>
  422cda:	neg    eax
  422cdc:	movsxd rdx,eax
  422cdf:	call   41c590 <fb_scope_table_find@@Base>
  422ce4:	test   rax,rax
  422ce7:	je     422d28 <__flatcc_fb_clear_parser@@Base+0xfb8>
  422ce9:	mov    rcx,QWORD PTR [r14+0x8]
  422ced:	lea    rdi,[rax+0x8]
  422cf1:	mov    rdx,QWORD PTR [rcx+0x8]
  422cf5:	mov    rsi,QWORD PTR [rcx]
  422cf8:	call   41b510 <fb_symbol_table_find@@Base>
  422cfd:	mov    r14,rax
  422d00:	test   rax,rax
  422d03:	je     422d28 <__flatcc_fb_clear_parser@@Base+0xfb8>
  422d05:	cmp    WORD PTR [rax+0x10],0x4
  422d0a:	ja     422d28 <__flatcc_fb_clear_parser@@Base+0xfb8>
  422d0c:	mov    rsi,QWORD PTR [rax+0x20]
  422d10:	lea    rdi,[rbx+0x320]
  422d17:	call   41adb0 <ptr_set_find_item@@Base>
  422d1c:	test   rax,rax
  422d1f:	jne    422a31 <__flatcc_fb_clear_parser@@Base+0xcc1>
  422d25:	nop    DWORD PTR [rax]
  422d28:	mov    r8,QWORD PTR [r15+0x18]
  422d2c:	mov    rcx,r15
  422d2f:	lea    rdx,[rip+0x243a2]        # 4470d8 <fb_schema_table_missing@@Base+0x1458>
  422d36:	mov    rsi,r8
  422d39:	mov    rdi,rbx
  422d3c:	call   41eca0 <error_ref_sym@@Base>
  422d41:	mov    eax,0x1
  422d46:	mov    WORD PTR [r15+0x28],ax
  422d4b:	jmp    4225e7 <__flatcc_fb_clear_parser@@Base+0x877>
  422d50:	mov    rax,QWORD PTR [r13+0x0]
  422d54:	test   rax,rax
  422d57:	je     422d28 <__flatcc_fb_clear_parser@@Base+0xfb8>
  422d59:	xor    ecx,ecx
  422d5b:	jmp    422d62 <__flatcc_fb_clear_parser@@Base+0xff2>
  422d5d:	nop    DWORD PTR [rax]
  422d60:	mov    ecx,edx
  422d62:	mov    rax,QWORD PTR [rax]
  422d65:	lea    edx,[rcx+0x1]
  422d68:	test   rax,rax
  422d6b:	jne    422d60 <__flatcc_fb_clear_parser@@Base+0xff0>
  422d6d:	neg    ecx
  422d6f:	mov    ebp,ecx
  422d71:	lea    r12,[rbx+0x1f8]
  422d78:	test   ebp,ebp
  422d7a:	je     422da8 <__flatcc_fb_clear_parser@@Base+0x1038>
  422d7c:	nop    DWORD PTR [rax+0x0]
  422d80:	test   r12,r12
  422d83:	je     422da2 <__flatcc_fb_clear_parser@@Base+0x1032>
  422d85:	mov    rdi,QWORD PTR [rbx+0x260]
  422d8c:	test   rdi,rdi
  422d8f:	je     422da2 <__flatcc_fb_clear_parser@@Base+0x1032>
  422d91:	mov    rsi,QWORD PTR [r13+0x0]
  422d95:	movsxd rdx,ebp
  422d98:	call   41c590 <fb_scope_table_find@@Base>
  422d9d:	test   rax,rax
  422da0:	jne    422de0 <__flatcc_fb_clear_parser@@Base+0x1070>
  422da2:	inc    ebp
  422da4:	test   ebp,ebp
  422da6:	jne    422d80 <__flatcc_fb_clear_parser@@Base+0x1010>
  422da8:	test   r12,r12
  422dab:	je     422d28 <__flatcc_fb_clear_parser@@Base+0xfb8>
  422db1:	mov    rdi,QWORD PTR [rbx+0x260]
  422db8:	test   rdi,rdi
  422dbb:	je     422d28 <__flatcc_fb_clear_parser@@Base+0xfb8>
  422dc1:	xor    edx,edx
  422dc3:	xor    esi,esi
  422dc5:	call   41c590 <fb_scope_table_find@@Base>
  422dca:	mov    r13,rax
  422dcd:	test   rax,rax
  422dd0:	jne    4229e8 <__flatcc_fb_clear_parser@@Base+0xc78>
  422dd6:	jmp    422d28 <__flatcc_fb_clear_parser@@Base+0xfb8>
  422ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  422de0:	mov    r13,rax
  422de3:	jmp    4229e8 <__flatcc_fb_clear_parser@@Base+0xc78>
  422de8:	cmp    QWORD PTR [rsp+0x40],0xffffffffffffffff
  422dee:	jne    422ba7 <__flatcc_fb_clear_parser@@Base+0xe37>
  422df4:	mov    rsi,QWORD PTR [r15+0x8]
  422df8:	xor    r9d,r9d
  422dfb:	xor    r8d,r8d
  422dfe:	xor    ecx,ecx
  422e00:	lea    rdx,[rip+0x25343]        # 44814a <fb_schema_table_missing@@Base+0x24ca>
  422e07:	mov    rdi,rbx
  422e0a:	call   41d870 <__flatcc_error_report@@Base>
  422e0f:	movzx  eax,WORD PTR [r15+0x58]
  422e14:	inc    QWORD PTR [rsp+0x40]
  422e19:	jmp    422645 <__flatcc_fb_clear_parser@@Base+0x8d5>
  422e1e:	mov    rsi,QWORD PTR [r15+0x8]
  422e22:	xor    r9d,r9d
  422e25:	xor    r8d,r8d
  422e28:	xor    ecx,ecx
  422e2a:	lea    rdx,[rip+0x2422f]        # 447060 <fb_schema_table_missing@@Base+0x13e0>
  422e31:	mov    rdi,rbx
  422e34:	call   41d870 <__flatcc_error_report@@Base>
  422e39:	mov    eax,0xffffffff
  422e3e:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422e43:	mov    rsi,QWORD PTR [r15+0x8]
  422e47:	xor    r9d,r9d
  422e4a:	xor    r8d,r8d
  422e4d:	xor    ecx,ecx
  422e4f:	lea    rdx,[rip+0x2436a]        # 4471c0 <fb_schema_table_missing@@Base+0x1540>
  422e56:	mov    rdi,rbx
  422e59:	call   41d870 <__flatcc_error_report@@Base>
  422e5e:	mov    eax,0xffffffff
  422e63:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422e68:	movabs rcx,0x7fffffffffffffff
  422e72:	cmp    rax,rcx
  422e75:	jne    422c24 <__flatcc_fb_clear_parser@@Base+0xeb4>
  422e7b:	mov    rsi,QWORD PTR [r15+0x8]
  422e7f:	xor    r9d,r9d
  422e82:	xor    r8d,r8d
  422e85:	xor    ecx,ecx
  422e87:	lea    rdx,[rip+0x252d9]        # 448167 <fb_schema_table_missing@@Base+0x24e7>
  422e8e:	mov    rdi,rbx
  422e91:	call   41d870 <__flatcc_error_report@@Base>
  422e96:	movzx  eax,WORD PTR [r15+0x58]
  422e9b:	inc    QWORD PTR [rsp+0x40]
  422ea0:	jmp    422645 <__flatcc_fb_clear_parser@@Base+0x8d5>
  422ea5:	xor    edi,edi
  422ea7:	mov    WORD PTR [r14+0xa4],di
  422eaf:	mov    DWORD PTR [rsp+0x38],0x0
  422eb7:	jmp    42253c <__flatcc_fb_clear_parser@@Base+0x7cc>
  422ebc:	mov    rcx,QWORD PTR [r14+0x8]
  422ec0:	mov    rsi,QWORD PTR [r15+0x8]
  422ec4:	xor    r9d,r9d
  422ec7:	xor    r8d,r8d
  422eca:	lea    rdx,[rip+0x24237]        # 447108 <fb_schema_table_missing@@Base+0x1488>
  422ed1:	mov    rdi,rbx
  422ed4:	call   41d870 <__flatcc_error_report@@Base>
  422ed9:	mov    eax,0x1
  422ede:	mov    WORD PTR [r15+0x28],ax
  422ee3:	jmp    4225e7 <__flatcc_fb_clear_parser@@Base+0x877>
  422ee8:	mov    rsi,QWORD PTR [r15+0x8]
  422eec:	lea    rdx,[rip+0x243b5]        # 4472a8 <fb_schema_table_missing@@Base+0x1628>
  422ef3:	xor    r9d,r9d
  422ef6:	xor    r8d,r8d
  422ef9:	xor    ecx,ecx
  422efb:	mov    rdi,rbx
  422efe:	call   41d870 <__flatcc_error_report@@Base>
  422f03:	mov    edx,0x1
  422f08:	mov    WORD PTR [r15+0x58],dx
  422f0d:	mov    eax,0xffffffff
  422f12:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422f17:	mov    rsi,QWORD PTR [r15+0x8]
  422f1b:	xor    r9d,r9d
  422f1e:	xor    r8d,r8d
  422f21:	xor    ecx,ecx
  422f23:	lea    rdx,[rip+0x24226]        # 447150 <fb_schema_table_missing@@Base+0x14d0>
  422f2a:	mov    rdi,rbx
  422f2d:	call   41d870 <__flatcc_error_report@@Base>
  422f32:	movzx  eax,WORD PTR [r15+0x58]
  422f37:	mov    BYTE PTR [rsp+0x40],0x1
  422f3c:	jmp    422645 <__flatcc_fb_clear_parser@@Base+0x8d5>
  422f41:	mov    rsi,QWORD PTR [r15+0x8]
  422f45:	xor    r9d,r9d
  422f48:	xor    r8d,r8d
  422f4b:	xor    ecx,ecx
  422f4d:	lea    rdx,[rip+0x2422c]        # 447180 <fb_schema_table_missing@@Base+0x1500>
  422f54:	mov    rdi,rbx
  422f57:	call   41d870 <__flatcc_error_report@@Base>
  422f5c:	mov    eax,0xffffffff
  422f61:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422f66:	mov    rdi,rbx
  422f69:	lea    rdx,[rip+0x24288]        # 4471f8 <fb_schema_table_missing@@Base+0x1578>
  422f70:	call   41d870 <__flatcc_error_report@@Base>
  422f75:	mov    edi,0x1
  422f7a:	mov    WORD PTR [r15+0x58],di
  422f7f:	mov    eax,0xffffffff
  422f84:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422f89:	mov    rsi,QWORD PTR [rsi+0x8]
  422f8d:	xor    r9d,r9d
  422f90:	xor    r8d,r8d
  422f93:	xor    ecx,ecx
  422f95:	lea    rdx,[rip+0x23ebc]        # 446e58 <fb_schema_table_missing@@Base+0x11d8>
  422f9c:	call   41d870 <__flatcc_error_report@@Base>
  422fa1:	mov    eax,0xffffffff
  422fa6:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422fab:	lea    rcx,[rip+0x254be]        # 448470 <fb_schema_table_missing@@Base+0x27f0>
  422fb2:	mov    edx,0x523
  422fb7:	lea    rsi,[rip+0x23cb2]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  422fbe:	lea    rdi,[rip+0x2516f]        # 448134 <fb_schema_table_missing@@Base+0x24b4>
  422fc5:	call   4052e0 <__assert_fail@plt>
  422fca:	mov    rsi,QWORD PTR [rsi+0x8]
  422fce:	xor    r9d,r9d
  422fd1:	xor    r8d,r8d
  422fd4:	xor    ecx,ecx
  422fd6:	lea    rdx,[rip+0x23eb3]        # 446e90 <fb_schema_table_missing@@Base+0x1210>
  422fdd:	call   41d870 <__flatcc_error_report@@Base>
  422fe2:	mov    eax,0xffffffff
  422fe7:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  422fec:	mov    r10d,0x1
  422ff2:	mov    WORD PTR [rsi+0x58],r10w
  422ff7:	mov    rsi,QWORD PTR [rsi+0x8]
  422ffb:	xor    r9d,r9d
  422ffe:	xor    r8d,r8d
  423001:	xor    ecx,ecx
  423003:	lea    rdx,[rip+0x250c8]        # 4480d2 <fb_schema_table_missing@@Base+0x2452>
  42300a:	call   41d870 <__flatcc_error_report@@Base>
  42300f:	mov    eax,0xffffffff
  423014:	jmp    42278a <__flatcc_fb_clear_parser@@Base+0xa1a>
  423019:	lea    rcx,[rip+0x25450]        # 448470 <fb_schema_table_missing@@Base+0x27f0>
  423020:	mov    edx,0x4cd
  423025:	lea    rsi,[rip+0x23c44]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  42302c:	lea    rdi,[rip+0x25081]        # 4480b4 <fb_schema_table_missing@@Base+0x2434>
  423033:	call   4052e0 <__assert_fail@plt>
  423038:	call   4052c0 <__stack_chk_fail@plt>
  42303d:	nop    DWORD PTR [rax]
  423040:	push   r15
  423042:	push   r14
  423044:	push   r13
  423046:	push   r12
  423048:	push   rbp
  423049:	push   rbx
  42304a:	sub    rsp,0x158
  423051:	mov    QWORD PTR [rsp+0x38],rsi
  423056:	mov    rcx,QWORD PTR fs:0x28
  42305f:	mov    QWORD PTR [rsp+0x148],rcx
  423067:	xor    ecx,ecx
  423069:	cmp    WORD PTR [rsi+0x10],0x0
  42306e:	jne    424f41 <__flatcc_fb_clear_parser@@Base+0x31d1>
  423074:	mov    rax,QWORD PTR [rsp+0x38]
  423079:	cmp    WORD PTR [rax+0x58],0x0
  42307e:	jne    424fc3 <__flatcc_fb_clear_parser@@Base+0x3253>
  423084:	mov    rax,QWORD PTR [rsp+0x38]
  423089:	lea    r14,[rsp+0x80]
  423091:	mov    r13,QWORD PTR [rax+0x38]
  423095:	mov    r15,rdi
  423098:	mov    ecx,0xc
  42309d:	xor    eax,eax
  42309f:	mov    rdi,r14
  4230a2:	mov    QWORD PTR [rsp+0x8],r14
  4230a7:	rep stos QWORD PTR es:[rdi],rax
  4230aa:	xor    ebp,ebp
  4230ac:	test   r13,r13
  4230af:	je     423190 <__flatcc_fb_clear_parser@@Base+0x1420>
  4230b5:	mov    ebx,0x64
  4230ba:	lea    r12,[rip+0x253df]        # 4484a0 <fb_schema_table_missing@@Base+0x2820>
  4230c1:	jmp    4230f7 <__flatcc_fb_clear_parser@@Base+0x1387>
  4230c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4230c8:	mov    eax,DWORD PTR [r12+rax*4]
  4230cc:	mov    QWORD PTR [rdx],r13
  4230cf:	test   eax,eax
  4230d1:	jne    4235c0 <__flatcc_fb_clear_parser@@Base+0x1850>
  4230d7:	cmp    WORD PTR [r13+0x20],0x0
  4230dd:	jne    424688 <__flatcc_fb_clear_parser@@Base+0x2918>
  4230e3:	nop    DWORD PTR [rax+rax*1+0x0]
  4230e8:	mov    r13,QWORD PTR [r13+0x0]
  4230ec:	dec    ebx
  4230ee:	test   r13,r13
  4230f1:	je     423170 <__flatcc_fb_clear_parser@@Base+0x1400>
  4230f3:	test   ebx,ebx
  4230f5:	je     423170 <__flatcc_fb_clear_parser@@Base+0x1400>
  4230f7:	mov    rax,QWORD PTR [r13+0x8]
  4230fb:	mov    rcx,QWORD PTR [r15+0x260]
  423102:	mov    rdx,QWORD PTR [rax+0x8]
  423106:	mov    rsi,QWORD PTR [rax]
  423109:	lea    rdi,[rcx+0x20]
  42310d:	call   42c730 <fb_name_table_find@@Base>
  423112:	test   rax,rax
  423115:	je     424220 <__flatcc_fb_clear_parser@@Base+0x24b0>
  42311b:	movsxd rax,DWORD PTR [rax+0x20]
  42311f:	test   eax,eax
  423121:	je     4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  423123:	cmp    al,0x3
  423125:	jne    4241a8 <__flatcc_fb_clear_parser@@Base+0x2438>
  42312b:	mov    edx,0x1
  423130:	shlx   edx,edx,eax
  423135:	or     ebp,edx
  423137:	lea    rdx,[r14+rax*8]
  42313b:	cmp    QWORD PTR [rdx],0x0
  42313f:	je     4230c8 <__flatcc_fb_clear_parser@@Base+0x1358>
  423141:	mov    rsi,QWORD PTR [r13+0x8]
  423145:	xor    r9d,r9d
  423148:	xor    r8d,r8d
  42314b:	xor    ecx,ecx
  42314d:	lea    rdx,[rip+0x23dcc]        # 446f20 <fb_schema_table_missing@@Base+0x12a0>
  423154:	mov    rdi,r15
  423157:	call   41d870 <__flatcc_error_report@@Base>
  42315c:	mov    r13,QWORD PTR [r13+0x0]
  423160:	dec    ebx
  423162:	test   r13,r13
  423165:	jne    4230f3 <__flatcc_fb_clear_parser@@Base+0x1383>
  423167:	nop    WORD PTR [rax+rax*1+0x0]
  423170:	test   r13,r13
  423173:	je     423190 <__flatcc_fb_clear_parser@@Base+0x1420>
  423175:	mov    rsi,QWORD PTR [r13+0x8]
  423179:	xor    r9d,r9d
  42317c:	xor    r8d,r8d
  42317f:	xor    ecx,ecx
  423181:	lea    rdx,[rip+0x24f60]        # 4480e8 <fb_schema_table_missing@@Base+0x2468>
  423188:	mov    rdi,r15
  42318b:	call   41d870 <__flatcc_error_report@@Base>
  423190:	mov    rax,QWORD PTR [rsp+0x38]
  423195:	mov    r12,QWORD PTR [rax+0x28]
  423199:	mov    WORD PTR [rax+0xa4],bp
  4231a0:	test   r12,r12
  4231a3:	je     424be9 <__flatcc_fb_clear_parser@@Base+0x2e79>
  4231a9:	mov    rax,QWORD PTR [rsp+0x38]
  4231ae:	mov    QWORD PTR [rsp+0x50],0x0
  4231b7:	add    rax,0x60
  4231bb:	mov    QWORD PTR [rsp+0x30],rax
  4231c0:	mov    DWORD PTR [rsp+0x4c],0x0
  4231c8:	mov    QWORD PTR [rsp+0x58],0x0
  4231d1:	mov    DWORD PTR [rsp+0x1c],0x0
  4231d9:	mov    DWORD PTR [rsp+0x48],0x0
  4231e1:	mov    QWORD PTR [rsp+0x28],0x0
  4231ea:	mov    rbp,r15
  4231ed:	nop    DWORD PTR [rax]
  4231f0:	mov    rdi,QWORD PTR [rsp+0x30]
  4231f5:	mov    edx,0x1
  4231fa:	mov    rsi,r12
  4231fd:	call   41b4f0 <fb_symbol_table_insert_item@@Base>
  423202:	mov    r15,rax
  423205:	test   rax,rax
  423208:	jne    423e30 <__flatcc_fb_clear_parser@@Base+0x20c0>
  42320e:	cmp    WORD PTR [r12+0x10],0x5
  423215:	jne    4245d8 <__flatcc_fb_clear_parser@@Base+0x2868>
  42321b:	movzx  eax,WORD PTR [r12+0x28]
  423221:	cmp    ax,0x1
  423225:	je     423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  42322b:	sub    eax,0x7
  42322e:	cmp    ax,0x1
  423232:	jbe    424098 <__flatcc_fb_clear_parser@@Base+0x2328>
  423238:	mov    rdi,QWORD PTR [rsp+0x8]
  42323d:	mov    r14,QWORD PTR [r12+0x60]
  423242:	mov    ecx,0xc
  423247:	xor    eax,eax
  423249:	rep stos QWORD PTR es:[rdi],rax
  42324c:	xor    r13d,r13d
  42324f:	mov    ebx,0x64
  423254:	test   r14,r14
  423257:	jne    42329e <__flatcc_fb_clear_parser@@Base+0x152e>
  423259:	jmp    4242a8 <__flatcc_fb_clear_parser@@Base+0x2538>
  42325e:	xchg   ax,ax
  423260:	lea    rcx,[rip+0x25239]        # 4484a0 <fb_schema_table_missing@@Base+0x2820>
  423267:	mov    eax,DWORD PTR [rcx+rax*4]
  42326a:	mov    QWORD PTR [rdx],r14
  42326d:	test   eax,eax
  42326f:	jne    423790 <__flatcc_fb_clear_parser@@Base+0x1a20>
  423275:	cmp    WORD PTR [r14+0x20],0x0
  42327b:	jne    424130 <__flatcc_fb_clear_parser@@Base+0x23c0>
  423281:	nop    DWORD PTR [rax+0x0]
  423288:	mov    r14,QWORD PTR [r14]
  42328b:	dec    ebx
  42328d:	test   r14,r14
  423290:	je     423328 <__flatcc_fb_clear_parser@@Base+0x15b8>
  423296:	test   ebx,ebx
  423298:	je     423328 <__flatcc_fb_clear_parser@@Base+0x15b8>
  42329e:	mov    rax,QWORD PTR [r14+0x8]
  4232a2:	mov    rcx,QWORD PTR [rbp+0x260]
  4232a9:	mov    rdx,QWORD PTR [rax+0x8]
  4232ad:	mov    rsi,QWORD PTR [rax]
  4232b0:	lea    rdi,[rcx+0x20]
  4232b4:	call   42c730 <fb_name_table_find@@Base>
  4232b9:	test   rax,rax
  4232bc:	je     423e10 <__flatcc_fb_clear_parser@@Base+0x20a0>
  4232c2:	movsxd rax,DWORD PTR [rax+0x20]
  4232c6:	test   eax,eax
  4232c8:	je     423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  4232ca:	mov    edx,0xfc6
  4232cf:	bt     edx,eax
  4232d2:	jae    423810 <__flatcc_fb_clear_parser@@Base+0x1aa0>
  4232d8:	mov    rcx,QWORD PTR [rsp+0x8]
  4232dd:	mov    edx,0x1
  4232e2:	shlx   edx,edx,eax
  4232e7:	or     r13d,edx
  4232ea:	lea    rdx,[rcx+rax*8]
  4232ee:	cmp    QWORD PTR [rdx],0x0
  4232f2:	je     423260 <__flatcc_fb_clear_parser@@Base+0x14f0>
  4232f8:	mov    rsi,QWORD PTR [r14+0x8]
  4232fc:	xor    r9d,r9d
  4232ff:	xor    r8d,r8d
  423302:	xor    ecx,ecx
  423304:	lea    rdx,[rip+0x23c15]        # 446f20 <fb_schema_table_missing@@Base+0x12a0>
  42330b:	mov    rdi,rbp
  42330e:	call   41d870 <__flatcc_error_report@@Base>
  423313:	mov    r14,QWORD PTR [r14]
  423316:	dec    ebx
  423318:	test   r14,r14
  42331b:	jne    423296 <__flatcc_fb_clear_parser@@Base+0x1526>
  423321:	nop    DWORD PTR [rax+0x0]
  423328:	mov    rax,QWORD PTR [rsp+0xb0]
  423330:	mov    QWORD PTR [rsp+0x10],rax
  423335:	test   r14,r14
  423338:	je     423355 <__flatcc_fb_clear_parser@@Base+0x15e5>
  42333a:	mov    rsi,QWORD PTR [r14+0x8]
  42333e:	xor    r9d,r9d
  423341:	xor    r8d,r8d
  423344:	xor    ecx,ecx
  423346:	lea    rdx,[rip+0x24d9b]        # 4480e8 <fb_schema_table_missing@@Base+0x2468>
  42334d:	mov    rdi,rbp
  423350:	call   41d870 <__flatcc_error_report@@Base>
  423355:	cmp    QWORD PTR [rsp+0x10],0x0
  42335b:	mov    WORD PTR [r12+0x70],r13w
  423361:	je     423481 <__flatcc_fb_clear_parser@@Base+0x1711>
  423367:	mov    rax,QWORD PTR [rsp+0x38]
  42336c:	cmp    WORD PTR [r12+0x28],0x7
  423373:	mov    rbx,QWORD PTR [rax+0x18]
  423377:	mov    rax,QWORD PTR [rsp+0x10]
  42337c:	jne    424b19 <__flatcc_fb_clear_parser@@Base+0x2da9>
  423382:	cmp    DWORD PTR [r12+0x18],0x4
  423388:	jne    424b19 <__flatcc_fb_clear_parser@@Base+0x2da9>
  42338e:	cmp    WORD PTR [rax+0x20],0x2
  423393:	jne    424b08 <__flatcc_fb_clear_parser@@Base+0x2d98>
  423399:	mov    r9d,DWORD PTR [rax+0x18]
  42339d:	mov    rsi,QWORD PTR [rax+0x10]
  4233a1:	test   r9d,r9d
  4233a4:	jle    424af0 <__flatcc_fb_clear_parser@@Base+0x2d80>
  4233aa:	lea    eax,[r9-0x1]
  4233ae:	movsxd rcx,eax
  4233b1:	cmp    BYTE PTR [rsi+rcx*1],0x2e
  4233b5:	je     424b00 <__flatcc_fb_clear_parser@@Base+0x2d90>
  4233bb:	lea    ecx,[r9-0x2]
  4233bf:	movsxd rcx,ecx
  4233c2:	jmp    4233df <__flatcc_fb_clear_parser@@Base+0x166f>
  4233c4:	nop    DWORD PTR [rax+0x0]
  4233c8:	lea    rdx,[rcx-0x1]
  4233cc:	cmp    BYTE PTR [rsi+rdx*1+0x1],0x2e
  4233d1:	lea    edi,[rax-0x1]
  4233d4:	je     424150 <__flatcc_fb_clear_parser@@Base+0x23e0>
  4233da:	mov    rcx,rdx
  4233dd:	mov    eax,edi
  4233df:	test   eax,eax
  4233e1:	jne    4233c8 <__flatcc_fb_clear_parser@@Base+0x1658>
  4233e3:	mov    r13d,r9d
  4233e6:	mov    r14,rsi
  4233e9:	test   rbx,rbx
  4233ec:	je     4240e0 <__flatcc_fb_clear_parser@@Base+0x2370>
  4233f2:	test   eax,eax
  4233f4:	jne    4240e0 <__flatcc_fb_clear_parser@@Base+0x2370>
  4233fa:	movsxd rax,r13d
  4233fd:	mov    QWORD PTR [rsp+0x20],rax
  423402:	lea    rax,[rbp+0x320]
  423409:	mov    QWORD PTR [rsp+0x40],rax
  42340e:	xchg   ax,ax
  423410:	mov    rdx,QWORD PTR [rsp+0x20]
  423415:	lea    rdi,[rbx+0x8]
  423419:	mov    rsi,r14
  42341c:	call   41b510 <fb_symbol_table_find@@Base>
  423421:	mov    r13,rax
  423424:	test   rax,rax
  423427:	je     423d50 <__flatcc_fb_clear_parser@@Base+0x1fe0>
  42342d:	cmp    WORD PTR [rax+0x10],0x4
  423432:	ja     423d50 <__flatcc_fb_clear_parser@@Base+0x1fe0>
  423438:	mov    rsi,QWORD PTR [rax+0x20]
  42343c:	mov    rdi,QWORD PTR [rsp+0x40]
  423441:	call   41adb0 <ptr_set_find_item@@Base>
  423446:	test   rax,rax
  423449:	je     423d50 <__flatcc_fb_clear_parser@@Base+0x1fe0>
  42344f:	movzx  eax,WORD PTR [r13+0x10]
  423454:	test   ax,ax
  423457:	je     423473 <__flatcc_fb_clear_parser@@Base+0x1703>
  423459:	mov    r9d,DWORD PTR [rbp+0x11c]
  423460:	test   r9d,r9d
  423463:	je     424f14 <__flatcc_fb_clear_parser@@Base+0x31a4>
  423469:	cmp    ax,0x1
  42346d:	jne    424ec0 <__flatcc_fb_clear_parser@@Base+0x3150>
  423473:	mov    QWORD PTR [r12+0x90],r13
  42347b:	movzx  r13d,WORD PTR [r12+0x70]
  423481:	test   r13w,0x100
  423487:	je     423496 <__flatcc_fb_clear_parser@@Base+0x1726>
  423489:	cmp    WORD PTR [r12+0x28],0x8
  423490:	je     4242c0 <__flatcc_fb_clear_parser@@Base+0x2550>
  423496:	test   r13w,0x400
  42349c:	je     4234d5 <__flatcc_fb_clear_parser@@Base+0x1765>
  42349e:	cmp    WORD PTR [r12+0x28],0x7
  4234a5:	jne    4234b3 <__flatcc_fb_clear_parser@@Base+0x1743>
  4234a7:	cmp    DWORD PTR [r12+0x18],0x4
  4234ad:	je     4245c0 <__flatcc_fb_clear_parser@@Base+0x2850>
  4234b3:	mov    rsi,QWORD PTR [r12+0x8]
  4234b8:	xor    r9d,r9d
  4234bb:	xor    r8d,r8d
  4234be:	xor    ecx,ecx
  4234c0:	lea    rdx,[rip+0x24199]        # 447660 <fb_schema_table_missing@@Base+0x19e0>
  4234c7:	mov    rdi,rbp
  4234ca:	call   41d870 <__flatcc_error_report@@Base>
  4234cf:	movzx  r13d,WORD PTR [r12+0x70]
  4234d5:	test   r13w,0x800
  4234db:	je     42350c <__flatcc_fb_clear_parser@@Base+0x179c>
  4234dd:	cmp    WORD PTR [r12+0x28],0x7
  4234e4:	je     424168 <__flatcc_fb_clear_parser@@Base+0x23f8>
  4234ea:	mov    rsi,QWORD PTR [r12+0x8]
  4234ef:	xor    r9d,r9d
  4234f2:	xor    r8d,r8d
  4234f5:	xor    ecx,ecx
  4234f7:	lea    rdx,[rip+0x241a2]        # 4476a0 <fb_schema_table_missing@@Base+0x1a20>
  4234fe:	mov    rdi,rbp
  423501:	call   41d870 <__flatcc_error_report@@Base>
  423506:	movzx  r13d,WORD PTR [r12+0x70]
  42350c:	and    r13w,0xc00
  423512:	cmp    r13w,0xc00
  423518:	je     424180 <__flatcc_fb_clear_parser@@Base+0x2410>
  42351e:	mov    rax,QWORD PTR [rsp+0x88]
  423526:	test   rax,rax
  423529:	setne  BYTE PTR [rsp+0x10]
  42352e:	cmp    QWORD PTR [rsp+0x28],0x0
  423534:	mov    QWORD PTR [rsp+0x20],rax
  423539:	movzx  eax,BYTE PTR [rsp+0x10]
  42353e:	jne    424018 <__flatcc_fb_clear_parser@@Base+0x22a8>
  423544:	test   al,al
  423546:	je     424018 <__flatcc_fb_clear_parser@@Base+0x22a8>
  42354c:	mov    rax,QWORD PTR [rbp+0xd8]
  423553:	mov    rdx,QWORD PTR [rbp+0x148]
  42355a:	xor    esi,esi
  42355c:	mov    rdi,rax
  42355f:	mov    QWORD PTR [rsp+0x50],rax
  423564:	call   4052f0 <memset@plt>
  423569:	mov    r8d,DWORD PTR [rsp+0x1c]
  42356e:	test   r8d,r8d
  423571:	jne    4241d0 <__flatcc_fb_clear_parser@@Base+0x2460>
  423577:	cmp    QWORD PTR [rbp+0x148],0x0
  42357f:	mov    DWORD PTR [rsp+0x48],0x1
  423587:	je     4241f0 <__flatcc_fb_clear_parser@@Base+0x2480>
  42358d:	inc    QWORD PTR [rsp+0x28]
  423592:	movzx  eax,WORD PTR [r12+0x28]
  423598:	sub    eax,0x7
  42359b:	cmp    ax,0x5
  42359f:	ja     423c38 <__flatcc_fb_clear_parser@@Base+0x1ec8>
  4235a5:	lea    rcx,[rip+0x24d54]        # 448300 <fb_schema_table_missing@@Base+0x2680>
  4235ac:	movzx  eax,ax
  4235af:	movsxd rax,DWORD PTR [rcx+rax*4]
  4235b3:	add    rax,rcx
  4235b6:	notrack jmp rax
  4235b9:	nop    DWORD PTR [rax+0x0]
  4235c0:	cmp    eax,0x2
  4235c3:	jne    4235f8 <__flatcc_fb_clear_parser@@Base+0x1888>
  4235c5:	cmp    WORD PTR [r13+0x20],0x2
  4235cb:	je     4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  4235d1:	mov    rsi,QWORD PTR [r13+0x8]
  4235d5:	xor    r9d,r9d
  4235d8:	xor    r8d,r8d
  4235db:	xor    ecx,ecx
  4235dd:	lea    rdx,[rip+0x2398c]        # 446f70 <fb_schema_table_missing@@Base+0x12f0>
  4235e4:	mov    rdi,r15
  4235e7:	call   41d870 <__flatcc_error_report@@Base>
  4235ec:	jmp    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  4235f1:	nop    DWORD PTR [rax+0x0]
  4235f8:	cmp    eax,0x5
  4235fb:	je     424240 <__flatcc_fb_clear_parser@@Base+0x24d0>
  423601:	cmp    eax,0x4
  423604:	jne    424270 <__flatcc_fb_clear_parser@@Base+0x2500>
  42360a:	movzx  eax,WORD PTR [r13+0x20]
  42360f:	sub    eax,0x4
  423612:	cmp    ax,0x1
  423616:	jbe    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  42361c:	mov    rsi,QWORD PTR [r13+0x8]
  423620:	xor    r9d,r9d
  423623:	xor    r8d,r8d
  423626:	xor    ecx,ecx
  423628:	lea    rdx,[rip+0x23999]        # 446fc8 <fb_schema_table_missing@@Base+0x1348>
  42362f:	mov    rdi,r15
  423632:	call   41d870 <__flatcc_error_report@@Base>
  423637:	jmp    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  42363c:	nop    DWORD PTR [rax+0x0]
  423640:	xor    r14d,r14d
  423643:	mov    eax,0xe
  423648:	mov    WORD PTR [r12+0x28],ax
  42364e:	mov    rax,QWORD PTR [r15+0xb8]
  423655:	mov    QWORD PTR [r12+0x18],r15
  42365a:	mov    QWORD PTR [r12+0x80],rax
  423662:	movzx  eax,WORD PTR [r15+0xb0]
  42366a:	movzx  edx,WORD PTR [r12+0x58]
  423670:	mov    WORD PTR [r12+0x72],ax
  423676:	movzx  eax,WORD PTR [r15+0x10]
  42367b:	cmp    ax,0x4
  42367f:	je     4246b0 <__flatcc_fb_clear_parser@@Base+0x2940>
  423685:	test   dx,dx
  423688:	jne    424780 <__flatcc_fb_clear_parser@@Base+0x2a10>
  42368e:	cmp    ax,0x3
  423692:	jne    423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  423698:	mov    r9d,0x5
  42369e:	mov    WORD PTR [r12+0x58],r9w
  4236a4:	mov    QWORD PTR [r12+0x48],0x0
  4236ad:	lea    rbx,[r12+0x48]
  4236b2:	mov    edx,DWORD PTR [r15+0x48]
  4236b6:	mov    rcx,rbx
  4236b9:	mov    rsi,r15
  4236bc:	mov    rdi,rbp
  4236bf:	call   426d30 <__flatcc_fb_coerce_scalar_type@@Base>
  4236c4:	test   eax,eax
  4236c6:	jne    423c54 <__flatcc_fb_clear_parser@@Base+0x1ee4>
  4236cc:	mov    r8d,DWORD PTR [rbp+0x140]
  4236d3:	test   r8d,r8d
  4236d6:	je     423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4236dc:	mov    rax,QWORD PTR [r12+0x18]
  4236e1:	mov    rsi,rbx
  4236e4:	lea    rdi,[rax+0x80]
  4236eb:	call   42ce60 <fb_value_set_find_item@@Base>
  4236f0:	test   rax,rax
  4236f3:	jne    423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4236f9:	mov    rcx,QWORD PTR [r15+0x8]
  4236fd:	mov    rsi,QWORD PTR [r12+0x8]
  423702:	xor    r9d,r9d
  423705:	xor    r8d,r8d
  423708:	lea    rdx,[rip+0x24239]        # 447948 <fb_schema_table_missing@@Base+0x1cc8>
  42370f:	mov    rdi,rbp
  423712:	call   41d870 <__flatcc_error_report@@Base>
  423717:	mov    WORD PTR [r12+0x28],0x1
  42371f:	nop
  423720:	mov    r12,QWORD PTR [r12]
  423724:	test   r12,r12
  423727:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  42372d:	mov    r9d,DWORD PTR [rsp+0x1c]
  423732:	mov    r15,rbp
  423735:	test   r9d,r9d
  423738:	je     424350 <__flatcc_fb_clear_parser@@Base+0x25e0>
  42373e:	mov    eax,DWORD PTR [rsp+0x4c]
  423742:	test   eax,eax
  423744:	je     42377a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  423746:	mov    rax,QWORD PTR [rsp+0x38]
  42374b:	or     WORD PTR [rax+0x12],0x8
  423750:	cmp    DWORD PTR [rsp+0x4c],0x1
  423755:	je     42377a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  423757:	mov    edi,DWORD PTR [r15+0x108]
  42375e:	test   edi,edi
  423760:	je     424f8a <__flatcc_fb_clear_parser@@Base+0x321a>
  423766:	mov    DWORD PTR [rsp+0x4c],0x0
  42376e:	mov    esi,DWORD PTR [rsp+0x1c]
  423772:	test   esi,esi
  423774:	je     4245fc <__flatcc_fb_clear_parser@@Base+0x288c>
  42377a:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  423782:	jmp    4245fc <__flatcc_fb_clear_parser@@Base+0x288c>
  423787:	nop    WORD PTR [rax+rax*1+0x0]
  423790:	cmp    eax,0x2
  423793:	jne    4237c8 <__flatcc_fb_clear_parser@@Base+0x1a58>
  423795:	cmp    WORD PTR [r14+0x20],0x2
  42379b:	je     423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  4237a1:	mov    rsi,QWORD PTR [r14+0x8]
  4237a5:	xor    r9d,r9d
  4237a8:	xor    r8d,r8d
  4237ab:	xor    ecx,ecx
  4237ad:	lea    rdx,[rip+0x237bc]        # 446f70 <fb_schema_table_missing@@Base+0x12f0>
  4237b4:	mov    rdi,rbp
  4237b7:	call   41d870 <__flatcc_error_report@@Base>
  4237bc:	jmp    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  4237c1:	nop    DWORD PTR [rax+0x0]
  4237c8:	cmp    eax,0x5
  4237cb:	je     423fe8 <__flatcc_fb_clear_parser@@Base+0x2278>
  4237d1:	cmp    eax,0x4
  4237d4:	jne    424060 <__flatcc_fb_clear_parser@@Base+0x22f0>
  4237da:	movzx  eax,WORD PTR [r14+0x20]
  4237df:	sub    eax,0x4
  4237e2:	cmp    ax,0x1
  4237e6:	jbe    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  4237ec:	mov    rsi,QWORD PTR [r14+0x8]
  4237f0:	xor    r9d,r9d
  4237f3:	xor    r8d,r8d
  4237f6:	xor    ecx,ecx
  4237f8:	lea    rdx,[rip+0x237c9]        # 446fc8 <fb_schema_table_missing@@Base+0x1348>
  4237ff:	mov    rdi,rbp
  423802:	call   41d870 <__flatcc_error_report@@Base>
  423807:	jmp    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  42380c:	nop    DWORD PTR [rax+0x0]
  423810:	mov    rsi,QWORD PTR [r14+0x8]
  423814:	xor    r9d,r9d
  423817:	xor    r8d,r8d
  42381a:	xor    ecx,ecx
  42381c:	lea    rdx,[rip+0x236cd]        # 446ef0 <fb_schema_table_missing@@Base+0x1270>
  423823:	mov    rdi,rbp
  423826:	call   41d870 <__flatcc_error_report@@Base>
  42382b:	jmp    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  423830:	mov    rax,QWORD PTR [rsp+0x38]
  423835:	mov    r8,QWORD PTR [r12+0x18]
  42383a:	mov    rbx,QWORD PTR [rax+0x18]
  42383e:	test   r8,r8
  423841:	je     423ef5 <__flatcc_fb_clear_parser@@Base+0x2185>
  423847:	mov    r13,r8
  42384a:	xor    edx,edx
  42384c:	jmp    423855 <__flatcc_fb_clear_parser@@Base+0x1ae5>
  42384e:	xchg   ax,ax
  423850:	mov    edx,eax
  423852:	mov    r13,rsi
  423855:	mov    rsi,QWORD PTR [r13+0x0]
  423859:	lea    eax,[rdx+0x1]
  42385c:	test   rsi,rsi
  42385f:	jne    423850 <__flatcc_fb_clear_parser@@Base+0x1ae0>
  423861:	test   rbx,rbx
  423864:	je     4244a8 <__flatcc_fb_clear_parser@@Base+0x2738>
  42386a:	lea    rcx,[rbp+0x320]
  423871:	mov    QWORD PTR [rsp+0x40],rcx
  423876:	cmp    eax,0x1
  423879:	jne    4244a8 <__flatcc_fb_clear_parser@@Base+0x2738>
  42387f:	nop
  423880:	mov    rax,QWORD PTR [r13+0x8]
  423884:	lea    rdi,[rbx+0x8]
  423888:	mov    rdx,QWORD PTR [rax+0x8]
  42388c:	mov    rsi,QWORD PTR [rax]
  42388f:	call   41b510 <fb_symbol_table_find@@Base>
  423894:	mov    r15,rax
  423897:	test   rax,rax
  42389a:	je     423e60 <__flatcc_fb_clear_parser@@Base+0x20f0>
  4238a0:	cmp    WORD PTR [rax+0x10],0x4
  4238a5:	ja     423e60 <__flatcc_fb_clear_parser@@Base+0x20f0>
  4238ab:	mov    rsi,QWORD PTR [rax+0x20]
  4238af:	mov    rdi,QWORD PTR [rsp+0x40]
  4238b4:	call   41adb0 <ptr_set_find_item@@Base>
  4238b9:	test   rax,rax
  4238bc:	je     423e60 <__flatcc_fb_clear_parser@@Base+0x20f0>
  4238c2:	movzx  eax,WORD PTR [r15+0x10]
  4238c7:	cmp    ax,0x4
  4238cb:	ja     424468 <__flatcc_fb_clear_parser@@Base+0x26f8>
  4238d1:	mov    edx,0x1
  4238d6:	shlx   rdx,rdx,rax
  4238db:	and    edx,0x1b
  4238de:	je     424468 <__flatcc_fb_clear_parser@@Base+0x26f8>
  4238e4:	cmp    WORD PTR [r12+0x58],0x0
  4238eb:	jne    4246e0 <__flatcc_fb_clear_parser@@Base+0x2970>
  4238f1:	mov    edx,0xf
  4238f6:	mov    WORD PTR [r12+0x28],dx
  4238fc:	mov    rdx,QWORD PTR [r15+0xb8]
  423903:	mov    QWORD PTR [r12+0x18],r15
  423908:	mov    QWORD PTR [r12+0x80],rdx
  423910:	movzx  edx,WORD PTR [r15+0xb0]
  423918:	xor    r14d,r14d
  42391b:	mov    WORD PTR [r12+0x72],dx
  423921:	cmp    ax,0x4
  423925:	jne    423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  423927:	mov    r14d,DWORD PTR [rsp+0x1c]
  42392c:	test   r14d,r14d
  42392f:	jne    424c2b <__flatcc_fb_clear_parser@@Base+0x2ebb>
  423935:	mov    r13d,DWORD PTR [rsp+0x48]
  42393a:	test   r13d,r13d
  42393d:	jne    42394c <__flatcc_fb_clear_parser@@Base+0x1bdc>
  42393f:	movzx  eax,WORD PTR [rsp+0x28]
  423944:	mov    QWORD PTR [r12+0x88],rax
  42394c:	inc    QWORD PTR [rsp+0x28]
  423951:	xor    r14d,r14d
  423954:	jmp    42397e <__flatcc_fb_clear_parser@@Base+0x1c0e>
  423956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423960:	cmp    WORD PTR [r12+0x58],0x0
  423967:	jne    424ab0 <__flatcc_fb_clear_parser@@Base+0x2d40>
  42396d:	mov    r14d,DWORD PTR [rbp+0x110]
  423974:	mov    r11d,DWORD PTR [rsp+0x1c]
  423979:	test   r11d,r11d
  42397c:	jne    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  42397e:	test   BYTE PTR [rsp+0x48],0x1
  423983:	jne    423990 <__flatcc_fb_clear_parser@@Base+0x1c20>
  423985:	cmp    BYTE PTR [rsp+0x10],0x0
  42398a:	jne    4242f0 <__flatcc_fb_clear_parser@@Base+0x2580>
  423990:	cmp    QWORD PTR [rsp+0x20],0x0
  423996:	jne    4239a3 <__flatcc_fb_clear_parser@@Base+0x1c33>
  423998:	test   BYTE PTR [rsp+0x48],0x1
  42399d:	jne    424320 <__flatcc_fb_clear_parser@@Base+0x25b0>
  4239a3:	mov    rax,QWORD PTR [rsp+0x20]
  4239a8:	test   rax,rax
  4239ab:	je     423caa <__flatcc_fb_clear_parser@@Base+0x1f3a>
  4239b1:	movzx  eax,WORD PTR [rax+0x20]
  4239b5:	cmp    ax,0x5
  4239b9:	je     423c78 <__flatcc_fb_clear_parser@@Base+0x1f08>
  4239bf:	mov    rcx,QWORD PTR [rsp+0x20]
  4239c4:	xor    r9d,r9d
  4239c7:	mov    rsi,QWORD PTR [rcx+0x8]
  4239cb:	xor    r8d,r8d
  4239ce:	xor    ecx,ecx
  4239d0:	cmp    ax,0x4
  4239d4:	je     424810 <__flatcc_fb_clear_parser@@Base+0x2aa0>
  4239da:	lea    rdx,[rip+0x247ed]        # 4481ce <fb_schema_table_missing@@Base+0x254e>
  4239e1:	mov    rdi,rbp
  4239e4:	call   41d870 <__flatcc_error_report@@Base>
  4239e9:	mov    DWORD PTR [rsp+0x1c],0x1
  4239f1:	nop    DWORD PTR [rax+0x0]
  4239f8:	test   BYTE PTR [r12+0x70],0x80
  4239fe:	je     423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  423a04:	inc    DWORD PTR [rsp+0x4c]
  423a08:	test   r14d,r14d
  423a0b:	jne    423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  423a11:	mov    rsi,QWORD PTR [r12+0x8]
  423a16:	xor    r9d,r9d
  423a19:	xor    r8d,r8d
  423a1c:	xor    ecx,ecx
  423a1e:	lea    rdx,[rip+0x24123]        # 447b48 <fb_schema_table_missing@@Base+0x1ec8>
  423a25:	mov    rdi,rbp
  423a28:	call   41d870 <__flatcc_error_report@@Base>
  423a2d:	mov    r12,QWORD PTR [r12]
  423a31:	test   r12,r12
  423a34:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  423a3a:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  423a3f:	nop
  423a40:	xor    r14d,r14d
  423a43:	cmp    WORD PTR [r12+0x58],0x0
  423a4a:	je     423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  423a50:	mov    rsi,QWORD PTR [r12+0x8]
  423a55:	xor    r9d,r9d
  423a58:	xor    r8d,r8d
  423a5b:	xor    ecx,ecx
  423a5d:	lea    rdx,[rip+0x23d64]        # 4477c8 <fb_schema_table_missing@@Base+0x1b48>
  423a64:	mov    rdi,rbp
  423a67:	call   41d870 <__flatcc_error_report@@Base>
  423a6c:	mov    eax,0x1
  423a71:	mov    WORD PTR [r12+0x28],ax
  423a77:	mov    r12,QWORD PTR [r12]
  423a7b:	test   r12,r12
  423a7e:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  423a84:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  423a89:	nop    DWORD PTR [rax+0x0]
  423a90:	movzx  eax,WORD PTR [r12+0x58]
  423a96:	cmp    ax,0xd
  423a9a:	je     4248f0 <__flatcc_fb_clear_parser@@Base+0x2b80>
  423aa0:	test   ax,ax
  423aa3:	jne    423ab9 <__flatcc_fb_clear_parser@@Base+0x1d49>
  423aa5:	mov    ecx,0x5
  423aaa:	mov    WORD PTR [r12+0x58],cx
  423ab0:	mov    QWORD PTR [r12+0x48],0x0
  423ab9:	mov    edx,DWORD PTR [r12+0x18]
  423abe:	lea    rcx,[r12+0x48]
  423ac3:	mov    rsi,r12
  423ac6:	mov    rdi,rbp
  423ac9:	call   426d30 <__flatcc_fb_coerce_scalar_type@@Base>
  423ace:	test   eax,eax
  423ad0:	jne    423c54 <__flatcc_fb_clear_parser@@Base+0x1ee4>
  423ad6:	mov    edx,DWORD PTR [r12+0x18]
  423adb:	lea    rax,[rip+0x2495e]        # 448440 <fb_schema_table_missing@@Base+0x27c0>
  423ae2:	movsxd rax,DWORD PTR [rax+rdx*4]
  423ae6:	mov    r14d,0x1
  423aec:	mov    QWORD PTR [r12+0x80],rax
  423af4:	mov    WORD PTR [r12+0x72],ax
  423afa:	jmp    423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  423aff:	nop
  423b00:	mov    edx,DWORD PTR [r12+0x18]
  423b05:	lea    rax,[rip+0x24934]        # 448440 <fb_schema_table_missing@@Base+0x27c0>
  423b0c:	movsxd rax,DWORD PTR [rax+rdx*4]
  423b10:	xor    r14d,r14d
  423b13:	cmp    WORD PTR [r12+0x58],0x0
  423b1a:	mov    QWORD PTR [r12+0x80],rax
  423b22:	mov    WORD PTR [r12+0x72],ax
  423b28:	je     423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  423b2e:	mov    rsi,QWORD PTR [r12+0x8]
  423b33:	lea    rdx,[rip+0x23c36]        # 447770 <fb_schema_table_missing@@Base+0x1af0>
  423b3a:	xor    r9d,r9d
  423b3d:	xor    r8d,r8d
  423b40:	xor    ecx,ecx
  423b42:	mov    rdi,rbp
  423b45:	call   41d870 <__flatcc_error_report@@Base>
  423b4a:	mov    edx,0x1
  423b4f:	mov    WORD PTR [r12+0x28],dx
  423b55:	mov    r12,QWORD PTR [r12]
  423b59:	test   r12,r12
  423b5c:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  423b62:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  423b67:	nop    WORD PTR [rax+rax*1+0x0]
  423b70:	mov    rax,QWORD PTR [rsp+0x38]
  423b75:	mov    r8,QWORD PTR [r12+0x18]
  423b7a:	mov    rbx,QWORD PTR [rax+0x18]
  423b7e:	test   r8,r8
  423b81:	je     423fb5 <__flatcc_fb_clear_parser@@Base+0x2245>
  423b87:	mov    r13,r8
  423b8a:	xor    edx,edx
  423b8c:	jmp    423b95 <__flatcc_fb_clear_parser@@Base+0x1e25>
  423b8e:	xchg   ax,ax
  423b90:	mov    edx,eax
  423b92:	mov    r13,rcx
  423b95:	mov    rcx,QWORD PTR [r13+0x0]
  423b99:	lea    eax,[rdx+0x1]
  423b9c:	test   rcx,rcx
  423b9f:	jne    423b90 <__flatcc_fb_clear_parser@@Base+0x1e20>
  423ba1:	mov    QWORD PTR [rsp+0x60],rcx
  423ba6:	test   rbx,rbx
  423ba9:	je     424530 <__flatcc_fb_clear_parser@@Base+0x27c0>
  423baf:	lea    rcx,[rbp+0x320]
  423bb6:	mov    QWORD PTR [rsp+0x40],rcx
  423bbb:	cmp    eax,0x1
  423bbe:	jne    424530 <__flatcc_fb_clear_parser@@Base+0x27c0>
  423bc4:	nop    DWORD PTR [rax+0x0]
  423bc8:	mov    rax,QWORD PTR [r13+0x8]
  423bcc:	lea    rdi,[rbx+0x8]
  423bd0:	mov    rdx,QWORD PTR [rax+0x8]
  423bd4:	mov    rsi,QWORD PTR [rax]
  423bd7:	call   41b510 <fb_symbol_table_find@@Base>
  423bdc:	mov    r15,rax
  423bdf:	test   rax,rax
  423be2:	je     423f20 <__flatcc_fb_clear_parser@@Base+0x21b0>
  423be8:	cmp    WORD PTR [rax+0x10],0x4
  423bed:	ja     423f20 <__flatcc_fb_clear_parser@@Base+0x21b0>
  423bf3:	mov    rdi,QWORD PTR [rsp+0x40]
  423bf8:	mov    rsi,QWORD PTR [rax+0x20]
  423bfc:	mov    r14,rdi
  423bff:	call   41adb0 <ptr_set_find_item@@Base>
  423c04:	test   rax,rax
  423c07:	je     423f20 <__flatcc_fb_clear_parser@@Base+0x21b0>
  423c0d:	mov    QWORD PTR [rsp+0x40],r14
  423c12:	cmp    WORD PTR [r15+0x10],0x4
  423c18:	ja     4248b0 <__flatcc_fb_clear_parser@@Base+0x2b40>
  423c1e:	movzx  eax,WORD PTR [r15+0x10]
  423c23:	lea    rdx,[rip+0x246ee]        # 448318 <fb_schema_table_missing@@Base+0x2698>
  423c2a:	movsxd rax,DWORD PTR [rdx+rax*4]
  423c2e:	add    rax,rdx
  423c31:	notrack jmp rax
  423c34:	nop    DWORD PTR [rax+0x0]
  423c38:	mov    rsi,QWORD PTR [r12+0x8]
  423c3d:	xor    r9d,r9d
  423c40:	xor    r8d,r8d
  423c43:	xor    ecx,ecx
  423c45:	lea    rdx,[rip+0x23dcc]        # 447a18 <fb_schema_table_missing@@Base+0x1d98>
  423c4c:	mov    rdi,rbp
  423c4f:	call   41d870 <__flatcc_error_report@@Base>
  423c54:	mov    ebx,0x1
  423c59:	mov    WORD PTR [r12+0x28],bx
  423c5f:	mov    r12,QWORD PTR [r12]
  423c63:	test   r12,r12
  423c66:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  423c6c:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  423c71:	nop    DWORD PTR [rax+0x0]
  423c78:	mov    rax,QWORD PTR [rsp+0x20]
  423c7d:	mov    rax,QWORD PTR [rax+0x10]
  423c81:	cmp    rax,QWORD PTR [rbp+0x148]
  423c88:	jae    424c48 <__flatcc_fb_clear_parser@@Base+0x2ed8>
  423c8e:	mov    rcx,QWORD PTR [rsp+0x58]
  423c93:	movzx  eax,ax
  423c96:	cmp    rcx,rax
  423c99:	mov    QWORD PTR [r12+0x88],rax
  423ca1:	cmovae rax,rcx
  423ca5:	mov    QWORD PTR [rsp+0x58],rax
  423caa:	mov    r10d,DWORD PTR [rsp+0x48]
  423caf:	test   r10d,r10d
  423cb2:	je     424fb6 <__flatcc_fb_clear_parser@@Base+0x3246>
  423cb8:	mov    rdx,QWORD PTR [rsp+0x50]
  423cbd:	add    rdx,QWORD PTR [r12+0x88]
  423cc5:	movzx  eax,BYTE PTR [rdx]
  423cc8:	cmp    al,0x2
  423cca:	je     424658 <__flatcc_fb_clear_parser@@Base+0x28e8>
  423cd0:	test   al,al
  423cd2:	jne    424630 <__flatcc_fb_clear_parser@@Base+0x28c0>
  423cd8:	mov    BYTE PTR [rdx],0x1
  423cdb:	mov    DWORD PTR [rsp+0x1c],0x0
  423ce3:	test   r15,r15
  423ce6:	je     4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  423cec:	cmp    WORD PTR [r15+0x10],0x4
  423cf2:	jne    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  423cf8:	mov    rax,QWORD PTR [r12+0x88]
  423d00:	movzx  edx,WORD PTR [r12+0x28]
  423d06:	cmp    rax,0x1
  423d0a:	jbe    42482c <__flatcc_fb_clear_parser@@Base+0x2abc>
  423d10:	mov    rcx,QWORD PTR [rsp+0x50]
  423d15:	lea    rcx,[rcx+rax*1-0x1]
  423d1a:	movzx  eax,BYTE PTR [rcx]
  423d1d:	cmp    al,0x2
  423d1f:	je     424c71 <__flatcc_fb_clear_parser@@Base+0x2f01>
  423d25:	test   al,al
  423d27:	je     424c40 <__flatcc_fb_clear_parser@@Base+0x2ed0>
  423d2d:	cmp    dx,0xb
  423d31:	lea    rax,[rip+0x23750]        # 447488 <fb_schema_table_missing@@Base+0x1808>
  423d38:	lea    rdx,[rip+0x237a1]        # 4474e0 <fb_schema_table_missing@@Base+0x1860>
  423d3f:	cmove  rdx,rax
  423d43:	jmp    424842 <__flatcc_fb_clear_parser@@Base+0x2ad2>
  423d48:	nop    DWORD PTR [rax+rax*1+0x0]
  423d50:	mov    rax,QWORD PTR [rbx]
  423d53:	test   rax,rax
  423d56:	je     423dc0 <__flatcc_fb_clear_parser@@Base+0x2050>
  423d58:	xor    r13d,r13d
  423d5b:	jmp    423d63 <__flatcc_fb_clear_parser@@Base+0x1ff3>
  423d5d:	nop    DWORD PTR [rax]
  423d60:	mov    r13d,edx
  423d63:	mov    rax,QWORD PTR [rax]
  423d66:	lea    edx,[r13+0x1]
  423d6a:	test   rax,rax
  423d6d:	jne    423d60 <__flatcc_fb_clear_parser@@Base+0x1ff0>
  423d6f:	neg    r13d
  423d72:	mov    rdi,QWORD PTR [rbp+0x260]
  423d79:	jmp    423d9f <__flatcc_fb_clear_parser@@Base+0x202f>
  423d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  423d80:	test   rdi,rdi
  423d83:	je     423d9c <__flatcc_fb_clear_parser@@Base+0x202c>
  423d85:	mov    rsi,QWORD PTR [rbx]
  423d88:	movsxd rdx,r13d
  423d8b:	call   41c590 <fb_scope_table_find@@Base>
  423d90:	test   rax,rax
  423d93:	jne    423e00 <__flatcc_fb_clear_parser@@Base+0x2090>
  423d95:	mov    rdi,QWORD PTR [rbp+0x260]
  423d9c:	inc    r13d
  423d9f:	test   r13d,r13d
  423da2:	jne    423d80 <__flatcc_fb_clear_parser@@Base+0x2010>
  423da4:	test   rdi,rdi
  423da7:	je     423dc0 <__flatcc_fb_clear_parser@@Base+0x2050>
  423da9:	xor    edx,edx
  423dab:	xor    esi,esi
  423dad:	call   41c590 <fb_scope_table_find@@Base>
  423db2:	mov    rbx,rax
  423db5:	test   rax,rax
  423db8:	jne    423410 <__flatcc_fb_clear_parser@@Base+0x16a0>
  423dbe:	xchg   ax,ax
  423dc0:	mov    rax,QWORD PTR [rsp+0x10]
  423dc5:	mov    r9d,DWORD PTR [rax+0x18]
  423dc9:	mov    rsi,QWORD PTR [rax+0x10]
  423dcd:	mov    rax,QWORD PTR [rsp+0x10]
  423dd2:	mov    r8,rsi
  423dd5:	mov    rax,QWORD PTR [rax+0x8]
  423dd9:	xor    ecx,ecx
  423ddb:	lea    rdx,[rip+0x243af]        # 448191 <fb_schema_table_missing@@Base+0x2511>
  423de2:	mov    rsi,rax
  423de5:	mov    rdi,rbp
  423de8:	call   41d870 <__flatcc_error_report@@Base>
  423ded:	movzx  r13d,WORD PTR [r12+0x70]
  423df3:	jmp    423481 <__flatcc_fb_clear_parser@@Base+0x1711>
  423df8:	nop    DWORD PTR [rax+rax*1+0x0]
  423e00:	mov    rbx,rax
  423e03:	jmp    423410 <__flatcc_fb_clear_parser@@Base+0x16a0>
  423e08:	nop    DWORD PTR [rax+rax*1+0x0]
  423e10:	mov    rsi,QWORD PTR [r14+0x8]
  423e14:	xor    r9d,r9d
  423e17:	xor    r8d,r8d
  423e1a:	xor    ecx,ecx
  423e1c:	lea    rdx,[rip+0x230ad]        # 446ed0 <fb_schema_table_missing@@Base+0x1250>
  423e23:	mov    rdi,rbp
  423e26:	call   41d870 <__flatcc_error_report@@Base>
  423e2b:	jmp    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  423e30:	mov    rsi,QWORD PTR [r12+0x8]
  423e35:	mov    rcx,QWORD PTR [rax+0x8]
  423e39:	xor    r9d,r9d
  423e3c:	xor    r8d,r8d
  423e3f:	lea    rdx,[rip+0x236ea]        # 447530 <fb_schema_table_missing@@Base+0x18b0>
  423e46:	mov    rdi,rbp
  423e49:	call   41d870 <__flatcc_error_report@@Base>
  423e4e:	mov    r12,QWORD PTR [r12]
  423e52:	test   r12,r12
  423e55:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  423e5b:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  423e60:	mov    rax,QWORD PTR [rbx]
  423e63:	test   rax,rax
  423e66:	je     423ef0 <__flatcc_fb_clear_parser@@Base+0x2180>
  423e6c:	xor    r14d,r14d
  423e6f:	jmp    423e7b <__flatcc_fb_clear_parser@@Base+0x210b>
  423e71:	nop    DWORD PTR [rax+0x0]
  423e78:	mov    r14d,edx
  423e7b:	mov    rax,QWORD PTR [rax]
  423e7e:	lea    edx,[r14+0x1]
  423e82:	test   rax,rax
  423e85:	jne    423e78 <__flatcc_fb_clear_parser@@Base+0x2108>
  423e87:	lea    r15,[rbp+0x1f8]
  423e8e:	neg    r14d
  423e91:	jmp    423ec0 <__flatcc_fb_clear_parser@@Base+0x2150>
  423e93:	nop    DWORD PTR [rax+rax*1+0x0]
  423e98:	test   r15,r15
  423e9b:	je     423ebd <__flatcc_fb_clear_parser@@Base+0x214d>
  423e9d:	mov    rdi,QWORD PTR [rbp+0x260]
  423ea4:	test   rdi,rdi
  423ea7:	je     423ebd <__flatcc_fb_clear_parser@@Base+0x214d>
  423ea9:	mov    rsi,QWORD PTR [rbx]
  423eac:	movsxd rdx,r14d
  423eaf:	call   41c590 <fb_scope_table_find@@Base>
  423eb4:	test   rax,rax
  423eb7:	jne    4240d0 <__flatcc_fb_clear_parser@@Base+0x2360>
  423ebd:	inc    r14d
  423ec0:	test   r14d,r14d
  423ec3:	jne    423e98 <__flatcc_fb_clear_parser@@Base+0x2128>
  423ec5:	test   r15,r15
  423ec8:	je     423ef0 <__flatcc_fb_clear_parser@@Base+0x2180>
  423eca:	mov    rdi,QWORD PTR [rbp+0x260]
  423ed1:	test   rdi,rdi
  423ed4:	je     423ef0 <__flatcc_fb_clear_parser@@Base+0x2180>
  423ed6:	xor    edx,edx
  423ed8:	xor    esi,esi
  423eda:	call   41c590 <fb_scope_table_find@@Base>
  423edf:	mov    rbx,rax
  423ee2:	test   rax,rax
  423ee5:	jne    423880 <__flatcc_fb_clear_parser@@Base+0x1b10>
  423eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  423ef0:	mov    r8,QWORD PTR [r12+0x18]
  423ef5:	mov    rdi,rbp
  423ef8:	mov    rcx,r12
  423efb:	lea    rdx,[rip+0x23a8e]        # 447990 <fb_schema_table_missing@@Base+0x1d10>
  423f02:	mov    rsi,r8
  423f05:	call   41eca0 <error_ref_sym@@Base>
  423f0a:	mov    edi,0x1
  423f0f:	mov    WORD PTR [r12+0x28],di
  423f15:	jmp    423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  423f1a:	nop    WORD PTR [rax+rax*1+0x0]
  423f20:	mov    rax,QWORD PTR [rbx]
  423f23:	test   rax,rax
  423f26:	je     423fb0 <__flatcc_fb_clear_parser@@Base+0x2240>
  423f2c:	xor    r14d,r14d
  423f2f:	jmp    423f3b <__flatcc_fb_clear_parser@@Base+0x21cb>
  423f31:	nop    DWORD PTR [rax+0x0]
  423f38:	mov    r14d,edx
  423f3b:	mov    rax,QWORD PTR [rax]
  423f3e:	lea    edx,[r14+0x1]
  423f42:	test   rax,rax
  423f45:	jne    423f38 <__flatcc_fb_clear_parser@@Base+0x21c8>
  423f47:	lea    r15,[rbp+0x1f8]
  423f4e:	neg    r14d
  423f51:	jmp    423f80 <__flatcc_fb_clear_parser@@Base+0x2210>
  423f53:	nop    DWORD PTR [rax+rax*1+0x0]
  423f58:	test   r15,r15
  423f5b:	je     423f7d <__flatcc_fb_clear_parser@@Base+0x220d>
  423f5d:	mov    rdi,QWORD PTR [rbp+0x260]
  423f64:	test   rdi,rdi
  423f67:	je     423f7d <__flatcc_fb_clear_parser@@Base+0x220d>
  423f69:	mov    rsi,QWORD PTR [rbx]
  423f6c:	movsxd rdx,r14d
  423f6f:	call   41c590 <fb_scope_table_find@@Base>
  423f74:	test   rax,rax
  423f77:	jne    4240c8 <__flatcc_fb_clear_parser@@Base+0x2358>
  423f7d:	inc    r14d
  423f80:	test   r14d,r14d
  423f83:	jne    423f58 <__flatcc_fb_clear_parser@@Base+0x21e8>
  423f85:	test   r15,r15
  423f88:	je     423fb0 <__flatcc_fb_clear_parser@@Base+0x2240>
  423f8a:	mov    rdi,QWORD PTR [rbp+0x260]
  423f91:	test   rdi,rdi
  423f94:	je     423fb0 <__flatcc_fb_clear_parser@@Base+0x2240>
  423f96:	xor    edx,edx
  423f98:	xor    esi,esi
  423f9a:	call   41c590 <fb_scope_table_find@@Base>
  423f9f:	mov    rbx,rax
  423fa2:	test   rax,rax
  423fa5:	jne    423bc8 <__flatcc_fb_clear_parser@@Base+0x1e58>
  423fab:	nop    DWORD PTR [rax+rax*1+0x0]
  423fb0:	mov    r8,QWORD PTR [r12+0x18]
  423fb5:	mov    rcx,r12
  423fb8:	lea    rdx,[rip+0x23839]        # 4477f8 <fb_schema_table_missing@@Base+0x1b78>
  423fbf:	mov    rsi,r8
  423fc2:	mov    rdi,rbp
  423fc5:	call   41eca0 <error_ref_sym@@Base>
  423fca:	mov    eax,0x1
  423fcf:	mov    WORD PTR [r12+0x28],ax
  423fd5:	mov    DWORD PTR [rsp+0x1c],0x1
  423fdd:	jmp    423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  423fe2:	nop    WORD PTR [rax+rax*1+0x0]
  423fe8:	cmp    WORD PTR [r14+0x20],0x5
  423fee:	je     423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  423ff4:	mov    rsi,QWORD PTR [r14+0x8]
  423ff8:	xor    r9d,r9d
  423ffb:	xor    r8d,r8d
  423ffe:	xor    ecx,ecx
  424000:	lea    rdx,[rip+0x22f91]        # 446f98 <fb_schema_table_missing@@Base+0x1318>
  424007:	mov    rdi,rbp
  42400a:	call   41d870 <__flatcc_error_report@@Base>
  42400f:	jmp    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  424014:	nop    DWORD PTR [rax+0x0]
  424018:	mov    edi,DWORD PTR [rsp+0x1c]
  42401c:	test   edi,edi
  42401e:	jne    423592 <__flatcc_fb_clear_parser@@Base+0x1822>
  424024:	mov    rax,QWORD PTR [rsp+0x28]
  424029:	cmp    QWORD PTR [rbp+0x148],rax
  424030:	jbe    4241f0 <__flatcc_fb_clear_parser@@Base+0x2480>
  424036:	mov    ecx,DWORD PTR [rsp+0x48]
  42403a:	test   ecx,ecx
  42403c:	jne    42358d <__flatcc_fb_clear_parser@@Base+0x181d>
  424042:	movzx  eax,WORD PTR [rsp+0x28]
  424047:	mov    DWORD PTR [rsp+0x1c],ecx
  42404b:	mov    QWORD PTR [r12+0x88],rax
  424053:	jmp    42358d <__flatcc_fb_clear_parser@@Base+0x181d>
  424058:	nop    DWORD PTR [rax+rax*1+0x0]
  424060:	cmp    eax,0x6
  424063:	jne    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  424069:	cmp    WORD PTR [r14+0x20],0x6
  42406f:	je     423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  424075:	mov    rsi,QWORD PTR [r14+0x8]
  424079:	xor    r9d,r9d
  42407c:	xor    r8d,r8d
  42407f:	xor    ecx,ecx
  424081:	lea    rdx,[rip+0x22f68]        # 446ff0 <fb_schema_table_missing@@Base+0x1370>
  424088:	mov    rdi,rbp
  42408b:	call   41d870 <__flatcc_error_report@@Base>
  424090:	jmp    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  424095:	nop    DWORD PTR [rax]
  424098:	mov    rax,QWORD PTR [r12+0x18]
  42409d:	xor    edx,edx
  42409f:	mov    rax,QWORD PTR [rax+0x20]
  4240a3:	add    rax,0x3e7
  4240a9:	cmp    rax,0x1b
  4240ad:	ja     4240b9 <__flatcc_fb_clear_parser@@Base+0x2349>
  4240af:	lea    rdx,[rip+0x2428a]        # 448340 <fb_schema_table_missing@@Base+0x26c0>
  4240b6:	mov    edx,DWORD PTR [rdx+rax*4]
  4240b9:	mov    DWORD PTR [r12+0x18],edx
  4240be:	jmp    423238 <__flatcc_fb_clear_parser@@Base+0x14c8>
  4240c3:	nop    DWORD PTR [rax+rax*1+0x0]
  4240c8:	mov    rbx,rax
  4240cb:	jmp    423bc8 <__flatcc_fb_clear_parser@@Base+0x1e58>
  4240d0:	mov    rbx,rax
  4240d3:	jmp    423880 <__flatcc_fb_clear_parser@@Base+0x1b10>
  4240d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4240e0:	mov    rdi,QWORD PTR [rbp+0x260]
  4240e7:	test   rdi,rdi
  4240ea:	je     423dcd <__flatcc_fb_clear_parser@@Base+0x205d>
  4240f0:	test   eax,eax
  4240f2:	mov    edx,0x0
  4240f7:	cmove  rsi,rdx
  4240fb:	movsxd rdx,eax
  4240fe:	call   41c590 <fb_scope_table_find@@Base>
  424103:	test   rax,rax
  424106:	je     423dc0 <__flatcc_fb_clear_parser@@Base+0x2050>
  42410c:	movsxd rdx,r13d
  42410f:	lea    rdi,[rax+0x8]
  424113:	mov    rsi,r14
  424116:	call   41b510 <fb_symbol_table_find@@Base>
  42411b:	mov    r13,rax
  42411e:	test   rax,rax
  424121:	jne    42344f <__flatcc_fb_clear_parser@@Base+0x16df>
  424127:	jmp    423dc0 <__flatcc_fb_clear_parser@@Base+0x2050>
  42412c:	nop    DWORD PTR [rax+0x0]
  424130:	mov    rsi,QWORD PTR [r14+0x8]
  424134:	xor    r9d,r9d
  424137:	xor    r8d,r8d
  42413a:	xor    ecx,ecx
  42413c:	lea    rdx,[rip+0x22e05]        # 446f48 <fb_schema_table_missing@@Base+0x12c8>
  424143:	mov    rdi,rbp
  424146:	call   41d870 <__flatcc_error_report@@Base>
  42414b:	jmp    423288 <__flatcc_fb_clear_parser@@Base+0x1518>
  424150:	mov    r13d,r9d
  424153:	sub    r13d,eax
  424156:	mov    eax,edi
  424158:	lea    r14,[rsi+rcx*1+0x1]
  42415d:	jmp    4233e9 <__flatcc_fb_clear_parser@@Base+0x1679>
  424162:	nop    WORD PTR [rax+rax*1+0x0]
  424168:	cmp    DWORD PTR [r12+0x18],0x4
  42416e:	jne    4234ea <__flatcc_fb_clear_parser@@Base+0x177a>
  424174:	jmp    423506 <__flatcc_fb_clear_parser@@Base+0x1796>
  424179:	nop    DWORD PTR [rax+0x0]
  424180:	mov    rsi,QWORD PTR [r12+0x8]
  424185:	xor    r9d,r9d
  424188:	xor    r8d,r8d
  42418b:	xor    ecx,ecx
  42418d:	lea    rdx,[rip+0x2354c]        # 4476e0 <fb_schema_table_missing@@Base+0x1a60>
  424194:	mov    rdi,rbp
  424197:	call   41d870 <__flatcc_error_report@@Base>
  42419c:	jmp    42351e <__flatcc_fb_clear_parser@@Base+0x17ae>
  4241a1:	nop    DWORD PTR [rax+0x0]
  4241a8:	mov    rsi,QWORD PTR [r13+0x8]
  4241ac:	xor    r9d,r9d
  4241af:	xor    r8d,r8d
  4241b2:	xor    ecx,ecx
  4241b4:	lea    rdx,[rip+0x22d35]        # 446ef0 <fb_schema_table_missing@@Base+0x1270>
  4241bb:	mov    rdi,r15
  4241be:	call   41d870 <__flatcc_error_report@@Base>
  4241c3:	jmp    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  4241c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4241d0:	mov    eax,DWORD PTR [rsp+0x1c]
  4241d4:	mov    QWORD PTR [rsp+0x28],0x0
  4241dd:	mov    DWORD PTR [rsp+0x48],eax
  4241e1:	jmp    423592 <__flatcc_fb_clear_parser@@Base+0x1822>
  4241e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241f0:	mov    rsi,QWORD PTR [r12+0x8]
  4241f5:	xor    r9d,r9d
  4241f8:	xor    r8d,r8d
  4241fb:	xor    ecx,ecx
  4241fd:	lea    rdx,[rip+0x23514]        # 447718 <fb_schema_table_missing@@Base+0x1a98>
  424204:	mov    rdi,rbp
  424207:	call   41d870 <__flatcc_error_report@@Base>
  42420c:	mov    DWORD PTR [rsp+0x1c],0x1
  424214:	jmp    42358d <__flatcc_fb_clear_parser@@Base+0x181d>
  424219:	nop    DWORD PTR [rax+0x0]
  424220:	mov    rsi,QWORD PTR [r13+0x8]
  424224:	xor    r9d,r9d
  424227:	xor    r8d,r8d
  42422a:	xor    ecx,ecx
  42422c:	lea    rdx,[rip+0x22c9d]        # 446ed0 <fb_schema_table_missing@@Base+0x1250>
  424233:	mov    rdi,r15
  424236:	call   41d870 <__flatcc_error_report@@Base>
  42423b:	jmp    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424240:	cmp    WORD PTR [r13+0x20],0x5
  424246:	je     4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  42424c:	mov    rsi,QWORD PTR [r13+0x8]
  424250:	xor    r9d,r9d
  424253:	xor    r8d,r8d
  424256:	xor    ecx,ecx
  424258:	lea    rdx,[rip+0x22d39]        # 446f98 <fb_schema_table_missing@@Base+0x1318>
  42425f:	mov    rdi,r15
  424262:	call   41d870 <__flatcc_error_report@@Base>
  424267:	jmp    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  42426c:	nop    DWORD PTR [rax+0x0]
  424270:	cmp    eax,0x6
  424273:	jne    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424279:	cmp    WORD PTR [r13+0x20],0x6
  42427f:	je     4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  424285:	mov    rsi,QWORD PTR [r13+0x8]
  424289:	xor    r9d,r9d
  42428c:	xor    r8d,r8d
  42428f:	xor    ecx,ecx
  424291:	lea    rdx,[rip+0x22d58]        # 446ff0 <fb_schema_table_missing@@Base+0x1370>
  424298:	mov    rdi,r15
  42429b:	call   41d870 <__flatcc_error_report@@Base>
  4242a0:	jmp    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  4242a5:	nop    DWORD PTR [rax]
  4242a8:	xor    r10d,r10d
  4242ab:	mov    WORD PTR [r12+0x70],r10w
  4242b1:	jmp    4234d5 <__flatcc_fb_clear_parser@@Base+0x1765>
  4242b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4242c0:	mov    rsi,QWORD PTR [r12+0x8]
  4242c5:	xor    r9d,r9d
  4242c8:	xor    r8d,r8d
  4242cb:	xor    ecx,ecx
  4242cd:	lea    rdx,[rip+0x23354]        # 447628 <fb_schema_table_missing@@Base+0x19a8>
  4242d4:	mov    rdi,rbp
  4242d7:	call   41d870 <__flatcc_error_report@@Base>
  4242dc:	movzx  r13d,WORD PTR [r12+0x70]
  4242e2:	jmp    423496 <__flatcc_fb_clear_parser@@Base+0x1726>
  4242e7:	nop    WORD PTR [rax+rax*1+0x0]
  4242f0:	mov    rax,QWORD PTR [rsp+0x20]
  4242f5:	xor    r9d,r9d
  4242f8:	mov    rsi,QWORD PTR [rax+0x8]
  4242fc:	xor    r8d,r8d
  4242ff:	xor    ecx,ecx
  424301:	lea    rdx,[rip+0x23738]        # 447a40 <fb_schema_table_missing@@Base+0x1dc0>
  424308:	mov    rdi,rbp
  42430b:	call   41d870 <__flatcc_error_report@@Base>
  424310:	mov    DWORD PTR [rsp+0x1c],0x1
  424318:	jmp    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  42431d:	nop    DWORD PTR [rax]
  424320:	mov    rsi,QWORD PTR [r12+0x8]
  424325:	xor    r9d,r9d
  424328:	xor    r8d,r8d
  42432b:	xor    ecx,ecx
  42432d:	lea    rdx,[rip+0x2374c]        # 447a80 <fb_schema_table_missing@@Base+0x1e00>
  424334:	mov    rdi,rbp
  424337:	call   41d870 <__flatcc_error_report@@Base>
  42433c:	mov    DWORD PTR [rsp+0x1c],0x1
  424344:	jmp    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  424349:	nop    DWORD PTR [rax+0x0]
  424350:	mov    r14,QWORD PTR [rsp+0x38]
  424355:	mov    rax,QWORD PTR [rsp+0x28]
  42435a:	mov    r8d,DWORD PTR [rsp+0x48]
  42435f:	mov    QWORD PTR [r14+0xa8],rax
  424366:	test   r8d,r8d
  424369:	je     424f60 <__flatcc_fb_clear_parser@@Base+0x31f0>
  42436f:	test   rax,rax
  424372:	je     424870 <__flatcc_fb_clear_parser@@Base+0x2b00>
  424378:	mov    rbp,QWORD PTR [rsp+0x58]
  42437d:	cmp    rax,rbp
  424380:	ja     424870 <__flatcc_fb_clear_parser@@Base+0x2b00>
  424386:	test   rbp,rbp
  424389:	je     424402 <__flatcc_fb_clear_parser@@Base+0x2692>
  42438b:	mov    QWORD PTR [rsp+0x8],r15
  424390:	mov    r15,QWORD PTR [rsp+0x50]
  424395:	mov    eax,0xa
  42439a:	lea    rbx,[rsp+0xe0]
  4243a2:	nop    WORD PTR [rax+rax*1+0x0]
  4243a8:	cmp    BYTE PTR [r15+r12*1],0x0
  4243ad:	jne    4243f5 <__flatcc_fb_clear_parser@@Base+0x2685>
  4243af:	lea    r13d,[rax-0x1]
  4243b3:	test   eax,eax
  4243b5:	je     424c01 <__flatcc_fb_clear_parser@@Base+0x2e91>
  4243bb:	mov    r8,r12
  4243be:	lea    rcx,[rip+0x237bb]        # 447b80 <fb_schema_table_missing@@Base+0x1f00>
  4243c5:	mov    edx,0x64
  4243ca:	mov    esi,0x1
  4243cf:	mov    rdi,rbx
  4243d2:	xor    eax,eax
  4243d4:	call   405400 <__sprintf_chk@plt>
  4243d9:	mov    rsi,QWORD PTR [r14+0x8]
  4243dd:	mov    rdi,QWORD PTR [rsp+0x8]
  4243e2:	xor    r9d,r9d
  4243e5:	xor    r8d,r8d
  4243e8:	xor    ecx,ecx
  4243ea:	mov    rdx,rbx
  4243ed:	call   41d870 <__flatcc_error_report@@Base>
  4243f2:	mov    eax,r13d
  4243f5:	inc    r12
  4243f8:	cmp    rbp,r12
  4243fb:	jne    4243a8 <__flatcc_fb_clear_parser@@Base+0x2638>
  4243fd:	mov    r15,QWORD PTR [rsp+0x8]
  424402:	mov    eax,DWORD PTR [rsp+0x4c]
  424406:	test   eax,eax
  424408:	je     42377a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  42440e:	mov    rcx,QWORD PTR [rsp+0x38]
  424413:	or     WORD PTR [rcx+0x12],0x8
  424418:	cmp    eax,0x1
  42441b:	je     42377a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  424421:	mov    edx,DWORD PTR [r15+0x108]
  424428:	test   edx,edx
  42442a:	jne    42377a <__flatcc_fb_clear_parser@@Base+0x1a0a>
  424430:	mov    rax,QWORD PTR [rsp+0x38]
  424435:	xor    r9d,r9d
  424438:	mov    rsi,QWORD PTR [rax+0x8]
  42443c:	xor    r8d,r8d
  42443f:	xor    ecx,ecx
  424441:	lea    rdx,[rip+0x23770]        # 447bb8 <fb_schema_table_missing@@Base+0x1f38>
  424448:	mov    rdi,r15
  42444b:	call   41d870 <__flatcc_error_report@@Base>
  424450:	mov    eax,DWORD PTR [rsp+0x48]
  424454:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  42445c:	mov    DWORD PTR [rsp+0x1c],eax
  424460:	jmp    42376e <__flatcc_fb_clear_parser@@Base+0x19fe>
  424465:	nop    DWORD PTR [rax]
  424468:	mov    rsi,QWORD PTR [r12+0x8]
  42446d:	mov    rcx,QWORD PTR [r12+0x18]
  424472:	xor    r9d,r9d
  424475:	xor    r8d,r8d
  424478:	lea    rdx,[rip+0x23549]        # 4479c8 <fb_schema_table_missing@@Base+0x1d48>
  42447f:	mov    rdi,rbp
  424482:	call   41d870 <__flatcc_error_report@@Base>
  424487:	mov    esi,0x1
  42448c:	mov    WORD PTR [r12+0x28],si
  424492:	mov    r12,QWORD PTR [r12]
  424496:	test   r12,r12
  424499:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  42449f:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  4244a4:	nop    DWORD PTR [rax+0x0]
  4244a8:	cmp    eax,0x1
  4244ab:	cmovne rsi,r8
  4244af:	cmp    rbp,0xfffffffffffffe08
  4244b6:	je     423ef5 <__flatcc_fb_clear_parser@@Base+0x2185>
  4244bc:	mov    rdi,QWORD PTR [rbp+0x260]
  4244c3:	test   rdi,rdi
  4244c6:	je     423ef5 <__flatcc_fb_clear_parser@@Base+0x2185>
  4244cc:	neg    edx
  4244ce:	movsxd rdx,edx
  4244d1:	call   41c590 <fb_scope_table_find@@Base>
  4244d6:	test   rax,rax
  4244d9:	je     423ef0 <__flatcc_fb_clear_parser@@Base+0x2180>
  4244df:	mov    rcx,QWORD PTR [r13+0x8]
  4244e3:	lea    rdi,[rax+0x8]
  4244e7:	mov    rdx,QWORD PTR [rcx+0x8]
  4244eb:	mov    rsi,QWORD PTR [rcx]
  4244ee:	call   41b510 <fb_symbol_table_find@@Base>
  4244f3:	mov    r15,rax
  4244f6:	test   rax,rax
  4244f9:	je     423ef0 <__flatcc_fb_clear_parser@@Base+0x2180>
  4244ff:	cmp    WORD PTR [rax+0x10],0x4
  424504:	ja     423ef0 <__flatcc_fb_clear_parser@@Base+0x2180>
  42450a:	mov    rsi,QWORD PTR [rax+0x20]
  42450e:	lea    rdi,[rbp+0x320]
  424515:	call   41adb0 <ptr_set_find_item@@Base>
  42451a:	test   rax,rax
  42451d:	jne    4238c2 <__flatcc_fb_clear_parser@@Base+0x1b52>
  424523:	jmp    423ef0 <__flatcc_fb_clear_parser@@Base+0x2180>
  424528:	nop    DWORD PTR [rax+rax*1+0x0]
  424530:	cmp    eax,0x1
  424533:	mov    esi,0x0
  424538:	cmovne rsi,r8
  42453c:	cmp    rbp,0xfffffffffffffe08
  424543:	je     423fb5 <__flatcc_fb_clear_parser@@Base+0x2245>
  424549:	mov    rdi,QWORD PTR [rbp+0x260]
  424550:	test   rdi,rdi
  424553:	je     423fb5 <__flatcc_fb_clear_parser@@Base+0x2245>
  424559:	neg    edx
  42455b:	movsxd rdx,edx
  42455e:	call   41c590 <fb_scope_table_find@@Base>
  424563:	test   rax,rax
  424566:	je     423fb0 <__flatcc_fb_clear_parser@@Base+0x2240>
  42456c:	mov    rcx,QWORD PTR [r13+0x8]
  424570:	lea    rdi,[rax+0x8]
  424574:	mov    rdx,QWORD PTR [rcx+0x8]
  424578:	mov    rsi,QWORD PTR [rcx]
  42457b:	call   41b510 <fb_symbol_table_find@@Base>
  424580:	mov    r15,rax
  424583:	test   rax,rax
  424586:	je     423fb0 <__flatcc_fb_clear_parser@@Base+0x2240>
  42458c:	cmp    WORD PTR [rax+0x10],0x4
  424591:	ja     423fb0 <__flatcc_fb_clear_parser@@Base+0x2240>
  424597:	mov    rsi,QWORD PTR [rax+0x20]
  42459b:	lea    rax,[rbp+0x320]
  4245a2:	mov    rdi,rax
  4245a5:	mov    QWORD PTR [rsp+0x40],rax
  4245aa:	call   41adb0 <ptr_set_find_item@@Base>
  4245af:	test   rax,rax
  4245b2:	jne    423c12 <__flatcc_fb_clear_parser@@Base+0x1ea2>
  4245b8:	jmp    423fb0 <__flatcc_fb_clear_parser@@Base+0x2240>
  4245bd:	nop    DWORD PTR [rax]
  4245c0:	test   r13w,0x800
  4245c6:	jne    423506 <__flatcc_fb_clear_parser@@Base+0x1796>
  4245cc:	jmp    42350c <__flatcc_fb_clear_parser@@Base+0x179c>
  4245d1:	nop    DWORD PTR [rax+0x0]
  4245d8:	mov    rsi,QWORD PTR [r12+0x8]
  4245dd:	xor    r9d,r9d
  4245e0:	xor    r8d,r8d
  4245e3:	xor    ecx,ecx
  4245e5:	lea    rdx,[rip+0x22f6c]        # 447558 <fb_schema_table_missing@@Base+0x18d8>
  4245ec:	mov    rdi,rbp
  4245ef:	call   41d870 <__flatcc_error_report@@Base>
  4245f4:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  4245fc:	mov    rcx,QWORD PTR [rsp+0x148]
  424604:	xor    rcx,QWORD PTR fs:0x28
  42460d:	mov    eax,DWORD PTR [rsp+0x4c]
  424611:	jne    424f85 <__flatcc_fb_clear_parser@@Base+0x3215>
  424617:	add    rsp,0x158
  42461e:	pop    rbx
  42461f:	pop    rbp
  424620:	pop    r12
  424622:	pop    r13
  424624:	pop    r14
  424626:	pop    r15
  424628:	ret    
  424629:	nop    DWORD PTR [rax+0x0]
  424630:	mov    rax,QWORD PTR [rsp+0x20]
  424635:	xor    r9d,r9d
  424638:	mov    rsi,QWORD PTR [rax+0x8]
  42463c:	xor    r8d,r8d
  42463f:	xor    ecx,ecx
  424641:	lea    rdx,[rip+0x234d0]        # 447b18 <fb_schema_table_missing@@Base+0x1e98>
  424648:	mov    rdi,rbp
  42464b:	call   41d870 <__flatcc_error_report@@Base>
  424650:	jmp    423cdb <__flatcc_fb_clear_parser@@Base+0x1f6b>
  424655:	nop    DWORD PTR [rax]
  424658:	mov    rax,QWORD PTR [rsp+0x20]
  42465d:	xor    r9d,r9d
  424660:	mov    rsi,QWORD PTR [rax+0x8]
  424664:	xor    r8d,r8d
  424667:	xor    ecx,ecx
  424669:	lea    rdx,[rip+0x23470]        # 447ae0 <fb_schema_table_missing@@Base+0x1e60>
  424670:	mov    rdi,rbp
  424673:	call   41d870 <__flatcc_error_report@@Base>
  424678:	mov    eax,DWORD PTR [rsp+0x48]
  42467c:	mov    DWORD PTR [rsp+0x1c],eax
  424680:	jmp    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  424685:	nop    DWORD PTR [rax]
  424688:	mov    rsi,QWORD PTR [r13+0x8]
  42468c:	xor    r9d,r9d
  42468f:	xor    r8d,r8d
  424692:	xor    ecx,ecx
  424694:	lea    rdx,[rip+0x228ad]        # 446f48 <fb_schema_table_missing@@Base+0x12c8>
  42469b:	mov    rdi,r15
  42469e:	call   41d870 <__flatcc_error_report@@Base>
  4246a3:	jmp    4230e8 <__flatcc_fb_clear_parser@@Base+0x1378>
  4246a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4246b0:	test   BYTE PTR [rsp+0x1c],0x1
  4246b5:	jne    423685 <__flatcc_fb_clear_parser@@Base+0x1915>
  4246bb:	mov    r13d,DWORD PTR [rsp+0x48]
  4246c0:	test   r13d,r13d
  4246c3:	jne    4246d2 <__flatcc_fb_clear_parser@@Base+0x2962>
  4246c5:	movzx  eax,WORD PTR [rsp+0x28]
  4246ca:	mov    QWORD PTR [r12+0x88],rax
  4246d2:	inc    QWORD PTR [rsp+0x28]
  4246d7:	test   dx,dx
  4246da:	je     42397e <__flatcc_fb_clear_parser@@Base+0x1c0e>
  4246e0:	mov    rsi,QWORD PTR [r12+0x8]
  4246e5:	xor    ecx,ecx
  4246e7:	xor    r9d,r9d
  4246ea:	xor    r8d,r8d
  4246ed:	lea    rdx,[rip+0x231c4]        # 4478b8 <fb_schema_table_missing@@Base+0x1c38>
  4246f4:	mov    rdi,rbp
  4246f7:	call   41d870 <__flatcc_error_report@@Base>
  4246fc:	mov    ecx,0x1
  424701:	mov    WORD PTR [r12+0x28],cx
  424707:	mov    r12,QWORD PTR [r12]
  42470b:	test   r12,r12
  42470e:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  424714:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  424719:	nop    DWORD PTR [rax+0x0]
  424720:	test   BYTE PTR [r12+0x71],0x1
  424726:	jne    424bc8 <__flatcc_fb_clear_parser@@Base+0x2e58>
  42472c:	mov    r14d,DWORD PTR [rbp+0x100]
  424733:	jmp    423643 <__flatcc_fb_clear_parser@@Base+0x18d3>
  424738:	nop    DWORD PTR [rax+rax*1+0x0]
  424740:	mov    rsi,QWORD PTR [r12+0x8]
  424745:	mov    rcx,QWORD PTR [r15+0x8]
  424749:	xor    r9d,r9d
  42474c:	xor    r8d,r8d
  42474f:	lea    rdx,[rip+0x2310a]        # 447860 <fb_schema_table_missing@@Base+0x1be0>
  424756:	mov    rdi,rbp
  424759:	call   41d870 <__flatcc_error_report@@Base>
  42475e:	mov    eax,0x1
  424763:	mov    WORD PTR [r12+0x28],ax
  424769:	mov    r12,QWORD PTR [r12]
  42476d:	test   r12,r12
  424770:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  424776:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  42477b:	nop    DWORD PTR [rax+rax*1+0x0]
  424780:	cmp    ax,0x3
  424784:	jne    4246e0 <__flatcc_fb_clear_parser@@Base+0x2970>
  42478a:	cmp    dx,0xd
  42478e:	je     424c8c <__flatcc_fb_clear_parser@@Base+0x2f1c>
  424794:	lea    rbx,[r12+0x48]
  424799:	mov    edx,DWORD PTR [r15+0x48]
  42479d:	mov    rcx,rbx
  4247a0:	mov    rsi,r12
  4247a3:	mov    rdi,rbp
  4247a6:	call   426d30 <__flatcc_fb_coerce_scalar_type@@Base>
  4247ab:	test   eax,eax
  4247ad:	jne    423c54 <__flatcc_fb_clear_parser@@Base+0x1ee4>
  4247b3:	mov    r11d,DWORD PTR [rbp+0x140]
  4247ba:	test   r11d,r11d
  4247bd:	je     423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4247c3:	mov    rax,QWORD PTR [r12+0x18]
  4247c8:	mov    rsi,rbx
  4247cb:	lea    rdi,[rax+0x80]
  4247d2:	call   42ce60 <fb_value_set_find_item@@Base>
  4247d7:	test   rax,rax
  4247da:	jne    423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  4247e0:	mov    rsi,QWORD PTR [r12+0x8]
  4247e5:	xor    r9d,r9d
  4247e8:	xor    r8d,r8d
  4247eb:	xor    ecx,ecx
  4247ed:	lea    rdx,[rip+0x23124]        # 447918 <fb_schema_table_missing@@Base+0x1c98>
  4247f4:	mov    rdi,rbp
  4247f7:	call   41d870 <__flatcc_error_report@@Base>
  4247fc:	mov    r10d,0x1
  424802:	mov    WORD PTR [r12+0x28],r10w
  424808:	jmp    423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  42480d:	nop    DWORD PTR [rax]
  424810:	lea    rdx,[rip+0x232a9]        # 447ac0 <fb_schema_table_missing@@Base+0x1e40>
  424817:	mov    rdi,rbp
  42481a:	call   41d870 <__flatcc_error_report@@Base>
  42481f:	mov    DWORD PTR [rsp+0x1c],0x1
  424827:	jmp    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  42482c:	cmp    dx,0xb
  424830:	lea    rax,[rip+0x22b39]        # 447370 <fb_schema_table_missing@@Base+0x16f0>
  424837:	lea    rdx,[rip+0x22ae2]        # 447320 <fb_schema_table_missing@@Base+0x16a0>
  42483e:	cmovne rdx,rax
  424842:	mov    rax,QWORD PTR [rsp+0x20]
  424847:	xor    r9d,r9d
  42484a:	mov    rsi,QWORD PTR [rax+0x8]
  42484e:	xor    r8d,r8d
  424851:	xor    ecx,ecx
  424853:	mov    rdi,rbp
  424856:	call   41d870 <__flatcc_error_report@@Base>
  42485b:	mov    eax,DWORD PTR [rsp+0x48]
  42485f:	mov    DWORD PTR [rsp+0x1c],eax
  424863:	jmp    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  424868:	nop    DWORD PTR [rax+rax*1+0x0]
  424870:	mov    ecx,DWORD PTR [rsp+0x4c]
  424874:	test   ecx,ecx
  424876:	je     4245fc <__flatcc_fb_clear_parser@@Base+0x288c>
  42487c:	mov    rax,QWORD PTR [rsp+0x38]
  424881:	or     WORD PTR [rax+0x12],0x8
  424886:	cmp    DWORD PTR [rsp+0x4c],0x1
  42488b:	je     4248a0 <__flatcc_fb_clear_parser@@Base+0x2b30>
  42488d:	mov    eax,DWORD PTR [r15+0x108]
  424894:	mov    DWORD PTR [rsp+0x48],eax
  424898:	test   eax,eax
  42489a:	je     424430 <__flatcc_fb_clear_parser@@Base+0x26c0>
  4248a0:	mov    DWORD PTR [rsp+0x4c],0x0
  4248a8:	jmp    4245fc <__flatcc_fb_clear_parser@@Base+0x288c>
  4248ad:	nop    DWORD PTR [rax]
  4248b0:	mov    rsi,QWORD PTR [r12+0x8]
  4248b5:	mov    rcx,QWORD PTR [r15+0x8]
  4248b9:	xor    r9d,r9d
  4248bc:	xor    r8d,r8d
  4248bf:	lea    rdx,[rip+0x22fca]        # 447890 <fb_schema_table_missing@@Base+0x1c10>
  4248c6:	mov    rdi,rbp
  4248c9:	call   41d870 <__flatcc_error_report@@Base>
  4248ce:	mov    eax,0x1
  4248d3:	mov    WORD PTR [r12+0x28],ax
  4248d9:	mov    r12,QWORD PTR [r12]
  4248dd:	test   r12,r12
  4248e0:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  4248e6:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  4248eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4248f0:	mov    rax,QWORD PTR [rsp+0x38]
  4248f5:	mov    r8,QWORD PTR [r12+0x48]
  4248fa:	mov    rbx,QWORD PTR [rax+0x18]
  4248fe:	test   r8,r8
  424901:	je     424f97 <__flatcc_fb_clear_parser@@Base+0x3227>
  424907:	xor    edi,edi
  424909:	mov    rdx,r8
  42490c:	xor    eax,eax
  42490e:	jmp    424918 <__flatcc_fb_clear_parser@@Base+0x2ba8>
  424910:	mov    rdi,rdx
  424913:	mov    eax,ecx
  424915:	mov    rdx,rsi
  424918:	mov    rsi,QWORD PTR [rdx]
  42491b:	lea    ecx,[rax+0x1]
  42491e:	test   rsi,rsi
  424921:	jne    424910 <__flatcc_fb_clear_parser@@Base+0x2ba0>
  424923:	mov    QWORD PTR [rsp+0x68],rdx
  424928:	mov    r14,rdi
  42492b:	test   rdi,rdi
  42492e:	je     4249ad <__flatcc_fb_clear_parser@@Base+0x2c3d>
  424930:	test   rbx,rbx
  424933:	je     424b3f <__flatcc_fb_clear_parser@@Base+0x2dcf>
  424939:	lea    rcx,[rbp+0x320]
  424940:	mov    QWORD PTR [rsp+0x40],rcx
  424945:	cmp    eax,0x1
  424948:	jne    424b3f <__flatcc_fb_clear_parser@@Base+0x2dcf>
  42494e:	mov    QWORD PTR [rsp+0x60],r15
  424953:	nop    DWORD PTR [rax+rax*1+0x0]
  424958:	mov    rax,QWORD PTR [r14+0x8]
  42495c:	lea    rdi,[rbx+0x8]
  424960:	mov    rdx,QWORD PTR [rax+0x8]
  424964:	mov    rsi,QWORD PTR [rax]
  424967:	call   41b510 <fb_symbol_table_find@@Base>
  42496c:	mov    r13,rax
  42496f:	test   rax,rax
  424972:	je     424a10 <__flatcc_fb_clear_parser@@Base+0x2ca0>
  424978:	cmp    WORD PTR [rax+0x10],0x4
  42497d:	ja     424a10 <__flatcc_fb_clear_parser@@Base+0x2ca0>
  424983:	mov    rsi,QWORD PTR [rax+0x20]
  424987:	mov    rdi,QWORD PTR [rsp+0x40]
  42498c:	call   41adb0 <ptr_set_find_item@@Base>
  424991:	test   rax,rax
  424994:	je     424a10 <__flatcc_fb_clear_parser@@Base+0x2ca0>
  424996:	mov    r15,QWORD PTR [rsp+0x60]
  42499b:	cmp    WORD PTR [r13+0x10],0x3
  4249a1:	je     4249d2 <__flatcc_fb_clear_parser@@Base+0x2c62>
  4249a3:	nop    DWORD PTR [rax+rax*1+0x0]
  4249a8:	mov    r8,QWORD PTR [r12+0x48]
  4249ad:	mov    rsi,r8
  4249b0:	mov    rcx,r12
  4249b3:	lea    rdx,[rip+0x22d7e]        # 447738 <fb_schema_table_missing@@Base+0x1ab8>
  4249ba:	mov    rdi,rbp
  4249bd:	call   41eca0 <error_ref_sym@@Base>
  4249c2:	mov    esi,0x1
  4249c7:	mov    WORD PTR [r12+0x28],si
  4249cd:	jmp    423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  4249d2:	mov    rax,QWORD PTR [rsp+0x68]
  4249d7:	lea    rdi,[r13+0x60]
  4249db:	mov    rax,QWORD PTR [rax+0x8]
  4249df:	mov    rdx,QWORD PTR [rax+0x8]
  4249e3:	mov    rsi,QWORD PTR [rax]
  4249e6:	call   41b510 <fb_symbol_table_find@@Base>
  4249eb:	test   rax,rax
  4249ee:	je     4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  4249f0:	vmovdqu xmm0,XMMWORD PTR [rax+0x48]
  4249f5:	vmovups XMMWORD PTR [r12+0x48],xmm0
  4249fc:	mov    rax,QWORD PTR [rax+0x58]
  424a00:	mov    QWORD PTR [r12+0x58],rax
  424a05:	jmp    423aa0 <__flatcc_fb_clear_parser@@Base+0x1d30>
  424a0a:	nop    WORD PTR [rax+rax*1+0x0]
  424a10:	mov    rax,QWORD PTR [rbx]
  424a13:	test   rax,rax
  424a16:	je     4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  424a18:	xor    ecx,ecx
  424a1a:	jmp    424a22 <__flatcc_fb_clear_parser@@Base+0x2cb2>
  424a1c:	nop    DWORD PTR [rax+0x0]
  424a20:	mov    ecx,edx
  424a22:	mov    rax,QWORD PTR [rax]
  424a25:	lea    edx,[rcx+0x1]
  424a28:	test   rax,rax
  424a2b:	jne    424a20 <__flatcc_fb_clear_parser@@Base+0x2cb0>
  424a2d:	neg    ecx
  424a2f:	lea    r13,[rbp+0x1f8]
  424a36:	mov    r15d,ecx
  424a39:	jmp    424a64 <__flatcc_fb_clear_parser@@Base+0x2cf4>
  424a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  424a40:	test   r13,r13
  424a43:	je     424a61 <__flatcc_fb_clear_parser@@Base+0x2cf1>
  424a45:	mov    rdi,QWORD PTR [rbp+0x260]
  424a4c:	test   rdi,rdi
  424a4f:	je     424a61 <__flatcc_fb_clear_parser@@Base+0x2cf1>
  424a51:	mov    rsi,QWORD PTR [rbx]
  424a54:	movsxd rdx,r15d
  424a57:	call   41c590 <fb_scope_table_find@@Base>
  424a5c:	test   rax,rax
  424a5f:	jne    424aa0 <__flatcc_fb_clear_parser@@Base+0x2d30>
  424a61:	inc    r15d
  424a64:	test   r15d,r15d
  424a67:	jne    424a40 <__flatcc_fb_clear_parser@@Base+0x2cd0>
  424a69:	test   r13,r13
  424a6c:	je     4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  424a72:	mov    rdi,QWORD PTR [rbp+0x260]
  424a79:	test   rdi,rdi
  424a7c:	je     4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  424a82:	xor    edx,edx
  424a84:	xor    esi,esi
  424a86:	call   41c590 <fb_scope_table_find@@Base>
  424a8b:	mov    rbx,rax
  424a8e:	test   rax,rax
  424a91:	jne    424958 <__flatcc_fb_clear_parser@@Base+0x2be8>
  424a97:	jmp    4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  424a9c:	nop    DWORD PTR [rax+0x0]
  424aa0:	mov    rbx,rax
  424aa3:	jmp    424958 <__flatcc_fb_clear_parser@@Base+0x2be8>
  424aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  424ab0:	mov    rsi,QWORD PTR [r12+0x8]
  424ab5:	xor    r9d,r9d
  424ab8:	xor    r8d,r8d
  424abb:	xor    ecx,ecx
  424abd:	lea    rdx,[rip+0x22cdc]        # 4477a0 <fb_schema_table_missing@@Base+0x1b20>
  424ac4:	mov    rdi,rbp
  424ac7:	call   41d870 <__flatcc_error_report@@Base>
  424acc:	mov    eax,0x1
  424ad1:	mov    WORD PTR [r12+0x28],ax
  424ad7:	mov    r12,QWORD PTR [r12]
  424adb:	test   r12,r12
  424ade:	jne    4231f0 <__flatcc_fb_clear_parser@@Base+0x1480>
  424ae4:	jmp    42372d <__flatcc_fb_clear_parser@@Base+0x19bd>
  424ae9:	nop    DWORD PTR [rax+0x0]
  424af0:	mov    eax,r9d
  424af3:	mov    r14,rsi
  424af6:	xor    r13d,r13d
  424af9:	jmp    4233e9 <__flatcc_fb_clear_parser@@Base+0x1679>
  424afe:	xchg   ax,ax
  424b00:	xor    r13d,r13d
  424b03:	jmp    424158 <__flatcc_fb_clear_parser@@Base+0x23e8>
  424b08:	test   r13w,0x400
  424b0e:	je     4234d5 <__flatcc_fb_clear_parser@@Base+0x1765>
  424b14:	jmp    4234a7 <__flatcc_fb_clear_parser@@Base+0x1737>
  424b19:	mov    rsi,QWORD PTR [rax+0x8]
  424b1d:	xor    r9d,r9d
  424b20:	xor    r8d,r8d
  424b23:	xor    ecx,ecx
  424b25:	lea    rdx,[rip+0x22a54]        # 447580 <fb_schema_table_missing@@Base+0x1900>
  424b2c:	mov    rdi,rbp
  424b2f:	call   41d870 <__flatcc_error_report@@Base>
  424b34:	movzx  r13d,WORD PTR [r12+0x70]
  424b3a:	jmp    423481 <__flatcc_fb_clear_parser@@Base+0x1711>
  424b3f:	cmp    eax,0x1
  424b42:	cmovne rsi,r8
  424b46:	cmp    rbp,0xfffffffffffffe08
  424b4d:	je     4249ad <__flatcc_fb_clear_parser@@Base+0x2c3d>
  424b53:	mov    rdi,QWORD PTR [rbp+0x260]
  424b5a:	test   rdi,rdi
  424b5d:	je     4249ad <__flatcc_fb_clear_parser@@Base+0x2c3d>
  424b63:	mov    edx,0x1
  424b68:	sub    edx,eax
  424b6a:	movsxd rdx,edx
  424b6d:	call   41c590 <fb_scope_table_find@@Base>
  424b72:	test   rax,rax
  424b75:	je     4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  424b7b:	mov    rcx,QWORD PTR [r14+0x8]
  424b7f:	lea    rdi,[rax+0x8]
  424b83:	mov    rdx,QWORD PTR [rcx+0x8]
  424b87:	mov    rsi,QWORD PTR [rcx]
  424b8a:	call   41b510 <fb_symbol_table_find@@Base>
  424b8f:	mov    r13,rax
  424b92:	test   rax,rax
  424b95:	je     4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  424b9b:	cmp    WORD PTR [rax+0x10],0x4
  424ba0:	ja     4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  424ba6:	mov    rsi,QWORD PTR [rax+0x20]
  424baa:	lea    rdi,[rbp+0x320]
  424bb1:	call   41adb0 <ptr_set_find_item@@Base>
  424bb6:	test   rax,rax
  424bb9:	jne    42499b <__flatcc_fb_clear_parser@@Base+0x2c2b>
  424bbf:	jmp    4249a8 <__flatcc_fb_clear_parser@@Base+0x2c38>
  424bc4:	nop    DWORD PTR [rax+0x0]
  424bc8:	mov    rsi,QWORD PTR [r12+0x8]
  424bcd:	xor    r9d,r9d
  424bd0:	xor    r8d,r8d
  424bd3:	xor    ecx,ecx
  424bd5:	lea    rdx,[rip+0x22c4c]        # 447828 <fb_schema_table_missing@@Base+0x1ba8>
  424bdc:	mov    rdi,rbp
  424bdf:	call   41d870 <__flatcc_error_report@@Base>
  424be4:	jmp    42472c <__flatcc_fb_clear_parser@@Base+0x29bc>
  424be9:	mov    QWORD PTR [rax+0xa8],0x0
  424bf4:	mov    DWORD PTR [rsp+0x4c],0x0
  424bfc:	jmp    4245fc <__flatcc_fb_clear_parser@@Base+0x288c>
  424c01:	mov    rax,QWORD PTR [rsp+0x38]
  424c06:	mov    r15,QWORD PTR [rsp+0x8]
  424c0b:	mov    rsi,QWORD PTR [rax+0x8]
  424c0f:	xor    r9d,r9d
  424c12:	xor    r8d,r8d
  424c15:	xor    ecx,ecx
  424c17:	lea    rdx,[rip+0x235cc]        # 4481ea <fb_schema_table_missing@@Base+0x256a>
  424c1e:	mov    rdi,r15
  424c21:	call   41d870 <__flatcc_error_report@@Base>
  424c26:	jmp    424402 <__flatcc_fb_clear_parser@@Base+0x2692>
  424c2b:	test   BYTE PTR [r12+0x70],0x80
  424c31:	je     423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  424c37:	inc    DWORD PTR [rsp+0x4c]
  424c3b:	jmp    423a11 <__flatcc_fb_clear_parser@@Base+0x1ca1>
  424c40:	mov    BYTE PTR [rcx],0x2
  424c43:	jmp    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  424c48:	mov    rsi,QWORD PTR [r12+0x8]
  424c4d:	xor    r9d,r9d
  424c50:	xor    r8d,r8d
  424c53:	xor    ecx,ecx
  424c55:	lea    rdx,[rip+0x23554]        # 4481b0 <fb_schema_table_missing@@Base+0x2530>
  424c5c:	mov    rdi,rbp
  424c5f:	call   41d870 <__flatcc_error_report@@Base>
  424c64:	mov    DWORD PTR [rsp+0x1c],0x1
  424c6c:	jmp    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  424c71:	cmp    dx,0xb
  424c75:	lea    rax,[rip+0x227ac]        # 447428 <fb_schema_table_missing@@Base+0x17a8>
  424c7c:	lea    rdx,[rip+0x2273d]        # 4473c0 <fb_schema_table_missing@@Base+0x1740>
  424c83:	cmovne rdx,rax
  424c87:	jmp    424842 <__flatcc_fb_clear_parser@@Base+0x2ad2>
  424c8c:	mov    rdx,QWORD PTR [r12+0x48]
  424c91:	mov    rax,QWORD PTR [rsp+0x38]
  424c96:	mov    QWORD PTR [rsp+0x70],rdx
  424c9b:	mov    rbx,QWORD PTR [rax+0x18]
  424c9f:	test   rdx,rdx
  424ca2:	je     424f97 <__flatcc_fb_clear_parser@@Base+0x3227>
  424ca8:	xor    eax,eax
  424caa:	mov    rdi,QWORD PTR [rsp+0x60]
  424caf:	jmp    424cc0 <__flatcc_fb_clear_parser@@Base+0x2f50>
  424cb1:	nop    DWORD PTR [rax+0x0]
  424cb8:	mov    rdi,rdx
  424cbb:	mov    eax,ecx
  424cbd:	mov    rdx,rsi
  424cc0:	mov    rsi,QWORD PTR [rdx]
  424cc3:	lea    ecx,[rax+0x1]
  424cc6:	test   rsi,rsi
  424cc9:	jne    424cb8 <__flatcc_fb_clear_parser@@Base+0x2f48>
  424ccb:	mov    QWORD PTR [rsp+0x78],rdx
  424cd0:	mov    QWORD PTR [rsp+0x60],rdi
  424cd5:	test   rdi,rdi
  424cd8:	je     424d4d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  424cda:	test   rbx,rbx
  424cdd:	je     424e36 <__flatcc_fb_clear_parser@@Base+0x30c6>
  424ce3:	cmp    eax,0x1
  424ce6:	jne    424e36 <__flatcc_fb_clear_parser@@Base+0x30c6>
  424cec:	mov    QWORD PTR [rsp+0x68],r12
  424cf1:	mov    r12,QWORD PTR [rsp+0x60]
  424cf6:	mov    DWORD PTR [rsp+0x60],r14d
  424cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  424d00:	mov    rax,QWORD PTR [r12+0x8]
  424d05:	lea    rdi,[rbx+0x8]
  424d09:	mov    rdx,QWORD PTR [rax+0x8]
  424d0d:	mov    rsi,QWORD PTR [rax]
  424d10:	call   41b510 <fb_symbol_table_find@@Base>
  424d15:	mov    r13,rax
  424d18:	test   rax,rax
  424d1b:	je     424da0 <__flatcc_fb_clear_parser@@Base+0x3030>
  424d21:	cmp    WORD PTR [rax+0x10],0x4
  424d26:	ja     424da0 <__flatcc_fb_clear_parser@@Base+0x3030>
  424d28:	mov    rsi,QWORD PTR [rax+0x20]
  424d2c:	mov    rdi,QWORD PTR [rsp+0x40]
  424d31:	call   41adb0 <ptr_set_find_item@@Base>
  424d36:	test   rax,rax
  424d39:	je     424da0 <__flatcc_fb_clear_parser@@Base+0x3030>
  424d3b:	mov    r12,QWORD PTR [rsp+0x68]
  424d40:	mov    r14d,DWORD PTR [rsp+0x60]
  424d45:	cmp    WORD PTR [r13+0x10],0x3
  424d4b:	je     424d5f <__flatcc_fb_clear_parser@@Base+0x2fef>
  424d4d:	mov    rax,QWORD PTR [rsp+0x70]
  424d52:	cmp    QWORD PTR [rax],0x0
  424d56:	jne    424eed <__flatcc_fb_clear_parser@@Base+0x317d>
  424d5c:	mov    r13,r15
  424d5f:	mov    rax,QWORD PTR [rsp+0x78]
  424d64:	lea    rdi,[r13+0x60]
  424d68:	mov    rax,QWORD PTR [rax+0x8]
  424d6c:	mov    rdx,QWORD PTR [rax+0x8]
  424d70:	mov    rsi,QWORD PTR [rax]
  424d73:	call   41b510 <fb_symbol_table_find@@Base>
  424d78:	test   rax,rax
  424d7b:	je     424eed <__flatcc_fb_clear_parser@@Base+0x317d>
  424d81:	vmovdqu xmm1,XMMWORD PTR [rax+0x48]
  424d86:	vmovups XMMWORD PTR [r12+0x48],xmm1
  424d8d:	mov    rax,QWORD PTR [rax+0x58]
  424d91:	mov    QWORD PTR [r12+0x58],rax
  424d96:	jmp    423974 <__flatcc_fb_clear_parser@@Base+0x1c04>
  424d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  424da0:	mov    rax,QWORD PTR [rbx]
  424da3:	test   rax,rax
  424da6:	je     424e1f <__flatcc_fb_clear_parser@@Base+0x30af>
  424da8:	xor    ecx,ecx
  424daa:	jmp    424db2 <__flatcc_fb_clear_parser@@Base+0x3042>
  424dac:	nop    DWORD PTR [rax+0x0]
  424db0:	mov    ecx,edx
  424db2:	mov    rax,QWORD PTR [rax]
  424db5:	lea    edx,[rcx+0x1]
  424db8:	test   rax,rax
  424dbb:	jne    424db0 <__flatcc_fb_clear_parser@@Base+0x3040>
  424dbd:	neg    ecx
  424dbf:	lea    r13,[rbp+0x1f8]
  424dc6:	mov    r14d,ecx
  424dc9:	jmp    424df4 <__flatcc_fb_clear_parser@@Base+0x3084>
  424dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  424dd0:	test   r13,r13
  424dd3:	je     424df1 <__flatcc_fb_clear_parser@@Base+0x3081>
  424dd5:	mov    rdi,QWORD PTR [rbp+0x260]
  424ddc:	test   rdi,rdi
  424ddf:	je     424df1 <__flatcc_fb_clear_parser@@Base+0x3081>
  424de1:	mov    rsi,QWORD PTR [rbx]
  424de4:	movsxd rdx,r14d
  424de7:	call   41c590 <fb_scope_table_find@@Base>
  424dec:	test   rax,rax
  424def:	jne    424e2e <__flatcc_fb_clear_parser@@Base+0x30be>
  424df1:	inc    r14d
  424df4:	test   r14d,r14d
  424df7:	jne    424dd0 <__flatcc_fb_clear_parser@@Base+0x3060>
  424df9:	test   r13,r13
  424dfc:	je     424e1f <__flatcc_fb_clear_parser@@Base+0x30af>
  424dfe:	mov    rdi,QWORD PTR [rbp+0x260]
  424e05:	test   rdi,rdi
  424e08:	je     424e1f <__flatcc_fb_clear_parser@@Base+0x30af>
  424e0a:	xor    edx,edx
  424e0c:	xor    esi,esi
  424e0e:	call   41c590 <fb_scope_table_find@@Base>
  424e13:	mov    rbx,rax
  424e16:	test   rax,rax
  424e19:	jne    424d00 <__flatcc_fb_clear_parser@@Base+0x2f90>
  424e1f:	mov    r12,QWORD PTR [rsp+0x68]
  424e24:	mov    r14d,DWORD PTR [rsp+0x60]
  424e29:	jmp    424d4d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  424e2e:	mov    rbx,rax
  424e31:	jmp    424d00 <__flatcc_fb_clear_parser@@Base+0x2f90>
  424e36:	cmp    eax,0x1
  424e39:	cmovne rsi,QWORD PTR [rsp+0x70]
  424e3f:	cmp    rbp,0xfffffffffffffe08
  424e46:	je     424d4d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  424e4c:	mov    rdi,QWORD PTR [rbp+0x260]
  424e53:	test   rdi,rdi
  424e56:	je     424d4d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  424e5c:	mov    edx,0x1
  424e61:	sub    edx,eax
  424e63:	movsxd rdx,edx
  424e66:	call   41c590 <fb_scope_table_find@@Base>
  424e6b:	test   rax,rax
  424e6e:	je     424d4d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  424e74:	mov    rcx,QWORD PTR [rsp+0x60]
  424e79:	lea    rdi,[rax+0x8]
  424e7d:	mov    rcx,QWORD PTR [rcx+0x8]
  424e81:	mov    rdx,QWORD PTR [rcx+0x8]
  424e85:	mov    rsi,QWORD PTR [rcx]
  424e88:	call   41b510 <fb_symbol_table_find@@Base>
  424e8d:	mov    r13,rax
  424e90:	test   rax,rax
  424e93:	je     424d4d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  424e99:	cmp    WORD PTR [rax+0x10],0x4
  424e9e:	ja     424d4d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  424ea4:	mov    rsi,QWORD PTR [rax+0x20]
  424ea8:	mov    rdi,QWORD PTR [rsp+0x40]
  424ead:	call   41adb0 <ptr_set_find_item@@Base>
  424eb2:	test   rax,rax
  424eb5:	jne    424d45 <__flatcc_fb_clear_parser@@Base+0x2fd5>
  424ebb:	jmp    424d4d <__flatcc_fb_clear_parser@@Base+0x2fdd>
  424ec0:	mov    rax,QWORD PTR [rsp+0x10]
  424ec5:	mov    rcx,QWORD PTR [r13+0x8]
  424ec9:	mov    rsi,QWORD PTR [rax+0x8]
  424ecd:	xor    r9d,r9d
  424ed0:	xor    r8d,r8d
  424ed3:	lea    rdx,[rip+0x22716]        # 4475f0 <fb_schema_table_missing@@Base+0x1970>
  424eda:	mov    rdi,rbp
  424edd:	call   41d870 <__flatcc_error_report@@Base>
  424ee2:	movzx  r13d,WORD PTR [r12+0x70]
  424ee8:	jmp    423481 <__flatcc_fb_clear_parser@@Base+0x1711>
  424eed:	mov    rsi,QWORD PTR [r12+0x48]
  424ef2:	mov    rcx,r12
  424ef5:	lea    rdx,[rip+0x229ec]        # 4478e8 <fb_schema_table_missing@@Base+0x1c68>
  424efc:	mov    rdi,rbp
  424eff:	mov    ebx,0x1
  424f04:	call   41eca0 <error_ref_sym@@Base>
  424f09:	mov    WORD PTR [r12+0x28],bx
  424f0f:	jmp    423720 <__flatcc_fb_clear_parser@@Base+0x19b0>
  424f14:	mov    rax,QWORD PTR [rsp+0x10]
  424f19:	mov    rcx,QWORD PTR [r13+0x8]
  424f1d:	mov    rsi,QWORD PTR [rax+0x8]
  424f21:	xor    r9d,r9d
  424f24:	xor    r8d,r8d
  424f27:	lea    rdx,[rip+0x22692]        # 4475c0 <fb_schema_table_missing@@Base+0x1940>
  424f2e:	mov    rdi,rbp
  424f31:	call   41d870 <__flatcc_error_report@@Base>
  424f36:	movzx  r13d,WORD PTR [r12+0x70]
  424f3c:	jmp    423481 <__flatcc_fb_clear_parser@@Base+0x1711>
  424f41:	lea    rcx,[rip+0x234c0]        # 448408 <fb_schema_table_missing@@Base+0x2788>
  424f48:	mov    edx,0x301
  424f4d:	lea    rsi,[rip+0x21d1c]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  424f54:	lea    rdi,[rip+0x95ad]        # 42e508 <_IO_stdin_used@@Base+0x1508>
  424f5b:	call   4052e0 <__assert_fail@plt>
  424f60:	cmp    DWORD PTR [rsp+0x4c],0x0
  424f65:	je     4245fc <__flatcc_fb_clear_parser@@Base+0x288c>
  424f6b:	mov    rax,QWORD PTR [rsp+0x38]
  424f70:	or     WORD PTR [rax+0x12],0x8
  424f75:	cmp    DWORD PTR [rsp+0x4c],0x1
  424f7a:	jne    423757 <__flatcc_fb_clear_parser@@Base+0x19e7>
  424f80:	jmp    4248a0 <__flatcc_fb_clear_parser@@Base+0x2b30>
  424f85:	call   4052c0 <__stack_chk_fail@plt>
  424f8a:	mov    eax,DWORD PTR [rsp+0x1c]
  424f8e:	mov    DWORD PTR [rsp+0x48],eax
  424f92:	jmp    424430 <__flatcc_fb_clear_parser@@Base+0x26c0>
  424f97:	lea    rcx,[rip+0x23452]        # 4483f0 <fb_schema_table_missing@@Base+0x2770>
  424f9e:	mov    edx,0x15b
  424fa3:	lea    rsi,[rip+0x21cc6]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  424faa:	lea    rdi,[rip+0x231fb]        # 4481ac <fb_schema_table_missing@@Base+0x252c>
  424fb1:	call   4052e0 <__assert_fail@plt>
  424fb6:	mov    DWORD PTR [rsp+0x1c],0x0
  424fbe:	jmp    4239f8 <__flatcc_fb_clear_parser@@Base+0x1c88>
  424fc3:	lea    rcx,[rip+0x2343e]        # 448408 <fb_schema_table_missing@@Base+0x2788>
  424fca:	mov    edx,0x302
  424fcf:	lea    rsi,[rip+0x21c9a]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  424fd6:	lea    rdi,[rip+0x231a5]        # 448182 <fb_schema_table_missing@@Base+0x2502>
  424fdd:	call   4052e0 <__assert_fail@plt>
  424fe2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  424fed:	nop    DWORD PTR [rax]

0000000000424ff0 <__flatcc_fb_build_schema@@Base>:
  424ff0:	endbr64 
  424ff4:	push   r15
  424ff6:	mov    r15,rdi
  424ff9:	push   r14
  424ffb:	lea    r14,[rdi+0x1f8]
  425002:	mov    rsi,r14
  425005:	push   r13
  425007:	push   r12
  425009:	push   rbp
  42500a:	push   rbx
  42500b:	sub    rsp,0x118
  425012:	mov    rax,QWORD PTR fs:0x28
  42501b:	mov    QWORD PTR [rsp+0x108],rax
  425023:	xor    eax,eax
  425025:	lea    rax,[rdi+0x320]
  42502c:	mov    rdi,rax
  42502f:	mov    QWORD PTR [rsp+0x8],rax
  425034:	call   41adb0 <ptr_set_find_item@@Base>
  425039:	test   rax,rax
  42503c:	je     426ce2 <__flatcc_fb_build_schema@@Base+0x1cf2>
  425042:	mov    rbx,QWORD PTR [r15+0x238]
  425049:	mov    ebp,0x811c9dc5
  42504e:	test   rbx,rbx
  425051:	jne    42506c <__flatcc_fb_build_schema@@Base+0x7c>
  425053:	jmp    425120 <__flatcc_fb_build_schema@@Base+0x130>
  425058:	nop    DWORD PTR [rax+rax*1+0x0]
  425060:	mov    rbx,QWORD PTR [rbx]
  425063:	test   rbx,rbx
  425066:	je     425120 <__flatcc_fb_build_schema@@Base+0x130>
  42506c:	cmp    WORD PTR [rbx+0x10],0x4
  425071:	ja     425060 <__flatcc_fb_build_schema@@Base+0x70>
  425073:	mov    rax,QWORD PTR [rbx+0x8]
  425077:	mov    rdi,QWORD PTR [rbx+0x18]
  42507b:	mov    rdx,QWORD PTR [rax]
  42507e:	mov    r8,QWORD PTR [rax+0x8]
  425082:	test   rdi,rdi
  425085:	je     425ec8 <__flatcc_fb_build_schema@@Base+0xed8>
  42508b:	mov    r10,QWORD PTR [rdi]
  42508e:	mov    eax,0x811c9dc5
  425093:	test   r10,r10
  425096:	jne    425228 <__flatcc_fb_build_schema@@Base+0x238>
  42509c:	test   r8,r8
  42509f:	je     4268f8 <__flatcc_fb_build_schema@@Base+0x1908>
  4250a5:	lea    rsi,[rdx+r8*1]
  4250a9:	nop    DWORD PTR [rax+0x0]
  4250b0:	inc    rdx
  4250b3:	movzx  ecx,BYTE PTR [rdx-0x1]
  4250b7:	xor    eax,ecx
  4250b9:	imul   eax,eax,0x1000193
  4250bf:	cmp    rdx,rsi
  4250c2:	jne    4250b0 <__flatcc_fb_build_schema@@Base+0xc0>
  4250c4:	test   eax,eax
  4250c6:	cmove  eax,ebp
  4250c9:	mov    QWORD PTR [rbx+0x20],r14
  4250cd:	mov    DWORD PTR [rbx+0xa0],eax
  4250d3:	test   rdi,rdi
  4250d6:	je     425060 <__flatcc_fb_build_schema@@Base+0x70>
  4250d8:	add    rdi,0x8
  4250dc:	mov    edx,0x1
  4250e1:	mov    rsi,rbx
  4250e4:	call   41b4f0 <fb_symbol_table_insert_item@@Base>
  4250e9:	test   rax,rax
  4250ec:	je     425060 <__flatcc_fb_build_schema@@Base+0x70>
  4250f2:	mov    rsi,QWORD PTR [rbx+0x8]
  4250f6:	mov    rcx,QWORD PTR [rax+0x8]
  4250fa:	xor    r9d,r9d
  4250fd:	xor    r8d,r8d
  425100:	lea    rdx,[rip+0x230f9]        # 448200 <fb_schema_table_missing@@Base+0x2580>
  425107:	mov    rdi,r15
  42510a:	call   41d870 <__flatcc_error_report@@Base>
  42510f:	mov    rbx,QWORD PTR [rbx]
  425112:	test   rbx,rbx
  425115:	jne    42506c <__flatcc_fb_build_schema@@Base+0x7c>
  42511b:	nop    DWORD PTR [rax+rax*1+0x0]
  425120:	mov    rbx,QWORD PTR [r15+0x200]
  425127:	lea    rbp,[rip+0x230ee]        # 44821c <fb_schema_table_missing@@Base+0x259c>
  42512e:	test   rbx,rbx
  425131:	je     425174 <__flatcc_fb_build_schema@@Base+0x184>
  425133:	nop    DWORD PTR [rax+rax*1+0x0]
  425138:	mov    rax,QWORD PTR [r15+0x260]
  42513f:	mov    edx,0x1
  425144:	lea    rdi,[rax+0x20]
  425148:	mov    rsi,rbx
  42514b:	call   42c710 <fb_name_table_insert_item@@Base>
  425150:	test   rax,rax
  425153:	je     42516c <__flatcc_fb_build_schema@@Base+0x17c>
  425155:	mov    r9d,DWORD PTR [rbx+0x10]
  425159:	mov    r8,QWORD PTR [rbx+0x8]
  42515d:	xor    ecx,ecx
  42515f:	mov    rdx,rbp
  425162:	xor    esi,esi
  425164:	mov    rdi,r15
  425167:	call   41d870 <__flatcc_error_report@@Base>
  42516c:	mov    rbx,QWORD PTR [rbx]
  42516f:	test   rbx,rbx
  425172:	jne    425138 <__flatcc_fb_build_schema@@Base+0x148>
  425174:	xor    r12d,r12d
  425177:	lea    rbp,[rip+0x2bc22]        # 450da0 <fb_value_set_missing@@Base+0x75d8>
  42517e:	jmp    4251d9 <__flatcc_fb_build_schema@@Base+0x1e9>
  425180:	mov    rdi,QWORD PTR [rbp+r12*8+0x0]
  425185:	mov    QWORD PTR [r15+0x60],rax
  425189:	mov    QWORD PTR [rbx+0x8],rdi
  42518d:	mov    DWORD PTR [rbx+0x20],r12d
  425191:	call   4052b0 <strlen@plt>
  425196:	mov    r11d,0x2
  42519c:	mov    DWORD PTR [rbx+0x10],eax
  42519f:	mov    WORD PTR [rbx+0x18],r11w
  4251a4:	mov    rax,QWORD PTR [r15+0x260]
  4251ab:	mov    QWORD PTR [rbx],0x0
  4251b2:	lea    rdi,[rax+0x20]
  4251b6:	mov    edx,0x1
  4251bb:	mov    rsi,rbx
  4251be:	call   42c710 <fb_name_table_insert_item@@Base>
  4251c3:	test   rax,rax
  4251c6:	je     4251cc <__flatcc_fb_build_schema@@Base+0x1dc>
  4251c8:	mov    DWORD PTR [rax+0x20],r12d
  4251cc:	inc    r12
  4251cf:	cmp    r12,0xc
  4251d3:	je     425290 <__flatcc_fb_build_schema@@Base+0x2a0>
  4251d9:	mov    rbx,QWORD PTR [r15+0x60]
  4251dd:	lea    rax,[rbx+0x30]
  4251e1:	cmp    rax,QWORD PTR [r15+0x50]
  4251e5:	jbe    425180 <__flatcc_fb_build_schema@@Base+0x190>
  4251e7:	mov    esi,0x1
  4251ec:	mov    edi,0x10000
  4251f1:	call   405320 <calloc@plt>
  4251f6:	test   rax,rax
  4251f9:	je     426cbb <__flatcc_fb_build_schema@@Base+0x1ccb>
  4251ff:	mov    rdx,QWORD PTR [r15+0x58]
  425203:	lea    rbx,[rax+0x10]
  425207:	mov    QWORD PTR [rax],rdx
  42520a:	lea    rdx,[rax+0x10000]
  425211:	mov    QWORD PTR [r15+0x58],rax
  425215:	mov    QWORD PTR [r15+0x50],rdx
  425219:	add    rax,0x40
  42521d:	jmp    425180 <__flatcc_fb_build_schema@@Base+0x190>
  425222:	nop    WORD PTR [rax+rax*1+0x0]
  425228:	mov    rcx,QWORD PTR [r10+0x8]
  42522c:	mov    r9,QWORD PTR [rcx+0x8]
  425230:	mov    rcx,QWORD PTR [rcx]
  425233:	test   r9,r9
  425236:	je     425254 <__flatcc_fb_build_schema@@Base+0x264>
  425238:	add    r9,rcx
  42523b:	nop    DWORD PTR [rax+rax*1+0x0]
  425240:	inc    rcx
  425243:	movzx  esi,BYTE PTR [rcx-0x1]
  425247:	xor    eax,esi
  425249:	imul   eax,eax,0x1000193
  42524f:	cmp    rcx,r9
  425252:	jne    425240 <__flatcc_fb_build_schema@@Base+0x250>
  425254:	mov    r10,QWORD PTR [r10]
  425257:	xor    eax,0x2e
  42525a:	imul   eax,eax,0x1000193
  425260:	test   r10,r10
  425263:	jne    425228 <__flatcc_fb_build_schema@@Base+0x238>
  425265:	test   r8,r8
  425268:	jne    4250a5 <__flatcc_fb_build_schema@@Base+0xb5>
  42526e:	test   eax,eax
  425270:	jne    4268f8 <__flatcc_fb_build_schema@@Base+0x1908>
  425276:	mov    DWORD PTR [rbx+0xa0],0x811c9dc5
  425280:	mov    QWORD PTR [rbx+0x20],r14
  425284:	jmp    4250d8 <__flatcc_fb_build_schema@@Base+0xe8>
  425289:	nop    DWORD PTR [rax+0x0]
  425290:	mov    r10d,DWORD PTR [r15+0x124]
  425297:	mov    rbp,QWORD PTR [r15+0x238]
  42529e:	test   r10d,r10d
  4252a1:	je     426138 <__flatcc_fb_build_schema@@Base+0x1148>
  4252a7:	test   rbp,rbp
  4252aa:	je     426bff <__flatcc_fb_build_schema@@Base+0x1c0f>
  4252b0:	lea    rax,[rsp+0xa0]
  4252b8:	mov    QWORD PTR [rsp+0x10],rax
  4252bd:	mov    QWORD PTR [rsp+0x30],r14
  4252c2:	cmp    WORD PTR [rbp+0x10],0x4
  4252c7:	ja     425ee8 <__flatcc_fb_build_schema@@Base+0xef8>
  4252cd:	movzx  eax,WORD PTR [rbp+0x10]
  4252d1:	lea    rcx,[rip+0x23054]        # 44832c <fb_schema_table_missing@@Base+0x26ac>
  4252d8:	movsxd rax,DWORD PTR [rcx+rax*4]
  4252dc:	add    rax,rcx
  4252df:	notrack jmp rax
  4252e2:	nop    WORD PTR [rax+rax*1+0x0]
  4252e8:	mov    rcx,QWORD PTR [rax+0x8]
  4252ec:	mov    rsi,QWORD PTR [r12+0x8]
  4252f1:	xor    r9d,r9d
  4252f4:	xor    r8d,r8d
  4252f7:	lea    rdx,[rip+0x229b2]        # 447cb0 <fb_schema_table_missing@@Base+0x2030>
  4252fe:	mov    rdi,r15
  425301:	call   41d870 <__flatcc_error_report@@Base>
  425306:	mov    r12,QWORD PTR [r12]
  42530a:	test   r12,r12
  42530d:	jne    425ba7 <__flatcc_fb_build_schema@@Base+0xbb7>
  425313:	mov    eax,DWORD PTR [rsp+0x3c]
  425317:	mov    rbp,QWORD PTR [rsp+0x28]
  42531c:	test   eax,eax
  42531e:	je     425360 <__flatcc_fb_build_schema@@Base+0x370>
  425320:	or     WORD PTR [rbp+0x12],0x8
  425325:	cmp    eax,0x1
  425328:	je     425360 <__flatcc_fb_build_schema@@Base+0x370>
  42532a:	mov    eax,DWORD PTR [r15+0x108]
  425331:	test   eax,eax
  425333:	jne    425360 <__flatcc_fb_build_schema@@Base+0x370>
  425335:	mov    rsi,QWORD PTR [rbp+0x8]
  425339:	xor    r9d,r9d
  42533c:	xor    r8d,r8d
  42533f:	xor    ecx,ecx
  425341:	lea    rdx,[rip+0x22870]        # 447bb8 <fb_schema_table_missing@@Base+0x1f38>
  425348:	mov    rdi,r15
  42534b:	call   41d870 <__flatcc_error_report@@Base>
  425350:	mov    r13d,0x1
  425356:	mov    WORD PTR [rbp+0x58],r13w
  42535b:	nop    DWORD PTR [rax+rax*1+0x0]
  425360:	mov    rbp,QWORD PTR [rbp+0x0]
  425364:	test   rbp,rbp
  425367:	jne    4252c2 <__flatcc_fb_build_schema@@Base+0x2d2>
  42536d:	mov    rbx,QWORD PTR [r15+0x238]
  425374:	mov    r14,QWORD PTR [rsp+0x30]
  425379:	test   rbx,rbx
  42537c:	je     426bff <__flatcc_fb_build_schema@@Base+0x1c0f>
  425382:	nop    WORD PTR [rax+rax*1+0x0]
  425388:	cmp    WORD PTR [rbx+0x10],0x1
  42538d:	jne    4253b0 <__flatcc_fb_build_schema@@Base+0x3c0>
  42538f:	cmp    WORD PTR [rbx+0x58],0x1
  425394:	je     4253b0 <__flatcc_fb_build_schema@@Base+0x3c0>
  425396:	mov    rsi,rbx
  425399:	mov    rdi,r15
  42539c:	call   421ea0 <__flatcc_fb_clear_parser@@Base+0x130>
  4253a1:	test   eax,eax
  4253a3:	jne    426a30 <__flatcc_fb_build_schema@@Base+0x1a40>
  4253a9:	nop    DWORD PTR [rax+0x0]
  4253b0:	mov    rbx,QWORD PTR [rbx]
  4253b3:	test   rbx,rbx
  4253b6:	jne    425388 <__flatcc_fb_build_schema@@Base+0x398>
  4253b8:	mov    r13,QWORD PTR [r15+0x238]
  4253bf:	test   r13,r13
  4253c2:	je     426bff <__flatcc_fb_build_schema@@Base+0x1c0f>
  4253c8:	lea    rax,[rsp+0xa0]
  4253d0:	mov    QWORD PTR [rsp+0x20],rax
  4253d5:	nop    DWORD PTR [rax]
  4253d8:	movzx  eax,WORD PTR [r13+0x10]
  4253dd:	test   ax,ax
  4253e0:	je     426680 <__flatcc_fb_build_schema@@Base+0x1690>
  4253e6:	cmp    ax,0x2
  4253ea:	jne    425720 <__flatcc_fb_build_schema@@Base+0x730>
  4253f0:	movzx  eax,WORD PTR [r13+0x58]
  4253f5:	cmp    ax,0x1
  4253f9:	je     425720 <__flatcc_fb_build_schema@@Base+0x730>
  4253ff:	test   ax,ax
  425402:	jne    426d06 <__flatcc_fb_build_schema@@Base+0x1d16>
  425408:	cmp    QWORD PTR [r13+0x38],0x0
  42540d:	je     42542a <__flatcc_fb_build_schema@@Base+0x43a>
  42540f:	mov    rsi,QWORD PTR [r13+0x8]
  425413:	xor    r9d,r9d
  425416:	xor    r8d,r8d
  425419:	xor    ecx,ecx
  42541b:	lea    rdx,[rip+0x22a7e]        # 447ea0 <fb_schema_table_missing@@Base+0x2220>
  425422:	mov    rdi,r15
  425425:	call   41d870 <__flatcc_error_report@@Base>
  42542a:	mov    rbp,QWORD PTR [r13+0x28]
  42542e:	lea    rax,[r13+0x60]
  425432:	mov    QWORD PTR [rsp+0x10],rax
  425437:	test   rbp,rbp
  42543a:	je     425720 <__flatcc_fb_build_schema@@Base+0x730>
  425440:	mov    QWORD PTR [rsp+0x18],r13
  425445:	nop    DWORD PTR [rax]
  425448:	mov    rdi,QWORD PTR [rsp+0x10]
  42544d:	mov    edx,0x1
  425452:	mov    rsi,rbp
  425455:	call   41b4f0 <fb_symbol_table_insert_item@@Base>
  42545a:	test   rax,rax
  42545d:	jne    4264d0 <__flatcc_fb_build_schema@@Base+0x14e0>
  425463:	cmp    WORD PTR [rbp+0x10],0x5
  425468:	jne    426a70 <__flatcc_fb_build_schema@@Base+0x1a80>
  42546e:	cmp    WORD PTR [rbp+0x58],0x0
  425473:	jne    426658 <__flatcc_fb_build_schema@@Base+0x1668>
  425479:	movzx  eax,WORD PTR [rbp+0x28]
  42547d:	cmp    ax,0x1
  425481:	je     42570a <__flatcc_fb_build_schema@@Base+0x71a>
  425487:	cmp    ax,0xc
  42548b:	je     4254a8 <__flatcc_fb_build_schema@@Base+0x4b8>
  42548d:	mov    rsi,QWORD PTR [rbp+0x8]
  425491:	xor    r9d,r9d
  425494:	xor    r8d,r8d
  425497:	xor    ecx,ecx
  425499:	lea    rdx,[rip+0x22a88]        # 447f28 <fb_schema_table_missing@@Base+0x22a8>
  4254a0:	mov    rdi,r15
  4254a3:	call   41d870 <__flatcc_error_report@@Base>
  4254a8:	mov    rax,QWORD PTR [rsp+0x18]
  4254ad:	mov    r8,QWORD PTR [rbp+0x30]
  4254b1:	mov    rbx,QWORD PTR [rax+0x18]
  4254b5:	test   r8,r8
  4254b8:	je     4262e4 <__flatcc_fb_build_schema@@Base+0x12f4>
  4254be:	mov    r12,r8
  4254c1:	xor    edx,edx
  4254c3:	jmp    4254cd <__flatcc_fb_build_schema@@Base+0x4dd>
  4254c5:	nop    DWORD PTR [rax]
  4254c8:	mov    edx,eax
  4254ca:	mov    r12,rsi
  4254cd:	mov    rsi,QWORD PTR [r12]
  4254d1:	lea    eax,[rdx+0x1]
  4254d4:	test   rsi,rsi
  4254d7:	jne    4254c8 <__flatcc_fb_build_schema@@Base+0x4d8>
  4254d9:	test   rbx,rbx
  4254dc:	je     426590 <__flatcc_fb_build_schema@@Base+0x15a0>
  4254e2:	cmp    eax,0x1
  4254e5:	jne    426590 <__flatcc_fb_build_schema@@Base+0x15a0>
  4254eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4254f0:	mov    rax,QWORD PTR [r12+0x8]
  4254f5:	lea    rdi,[rbx+0x8]
  4254f9:	mov    rdx,QWORD PTR [rax+0x8]
  4254fd:	mov    rsi,QWORD PTR [rax]
  425500:	call   41b510 <fb_symbol_table_find@@Base>
  425505:	mov    r13,rax
  425508:	test   rax,rax
  42550b:	je     426260 <__flatcc_fb_build_schema@@Base+0x1270>
  425511:	cmp    WORD PTR [rax+0x10],0x4
  425516:	ja     426260 <__flatcc_fb_build_schema@@Base+0x1270>
  42551c:	mov    rsi,QWORD PTR [rax+0x20]
  425520:	mov    rdi,QWORD PTR [rsp+0x8]
  425525:	call   41adb0 <ptr_set_find_item@@Base>
  42552a:	test   rax,rax
  42552d:	je     426260 <__flatcc_fb_build_schema@@Base+0x1270>
  425533:	cmp    WORD PTR [r13+0x10],0x0
  425539:	jne    426618 <__flatcc_fb_build_schema@@Base+0x1628>
  42553f:	mov    rax,QWORD PTR [rsp+0x18]
  425544:	mov    r8,QWORD PTR [rbp+0x18]
  425548:	mov    r10d,0xe
  42554e:	mov    WORD PTR [rbp+0x40],r10w
  425553:	mov    QWORD PTR [rbp+0x30],r13
  425557:	mov    rbx,QWORD PTR [rax+0x18]
  42555b:	test   r8,r8
  42555e:	je     42639c <__flatcc_fb_build_schema@@Base+0x13ac>
  425564:	mov    r12,r8
  425567:	xor    edx,edx
  425569:	jmp    425575 <__flatcc_fb_build_schema@@Base+0x585>
  42556b:	nop    DWORD PTR [rax+rax*1+0x0]
  425570:	mov    edx,eax
  425572:	mov    r12,rsi
  425575:	mov    rsi,QWORD PTR [r12]
  425579:	lea    eax,[rdx+0x1]
  42557c:	test   rsi,rsi
  42557f:	jne    425570 <__flatcc_fb_build_schema@@Base+0x580>
  425581:	test   rbx,rbx
  425584:	je     426710 <__flatcc_fb_build_schema@@Base+0x1720>
  42558a:	cmp    eax,0x1
  42558d:	jne    426710 <__flatcc_fb_build_schema@@Base+0x1720>
  425593:	nop    DWORD PTR [rax+rax*1+0x0]
  425598:	mov    rax,QWORD PTR [r12+0x8]
  42559d:	lea    rdi,[rbx+0x8]
  4255a1:	mov    rdx,QWORD PTR [rax+0x8]
  4255a5:	mov    rsi,QWORD PTR [rax]
  4255a8:	call   41b510 <fb_symbol_table_find@@Base>
  4255ad:	mov    r13,rax
  4255b0:	test   rax,rax
  4255b3:	je     426318 <__flatcc_fb_build_schema@@Base+0x1328>
  4255b9:	cmp    WORD PTR [rax+0x10],0x4
  4255be:	ja     426318 <__flatcc_fb_build_schema@@Base+0x1328>
  4255c4:	mov    rsi,QWORD PTR [rax+0x20]
  4255c8:	mov    rdi,QWORD PTR [rsp+0x8]
  4255cd:	call   41adb0 <ptr_set_find_item@@Base>
  4255d2:	test   rax,rax
  4255d5:	je     426318 <__flatcc_fb_build_schema@@Base+0x1328>
  4255db:	movzx  r12d,WORD PTR [r13+0x10]
  4255e0:	test   r12w,r12w
  4255e4:	jne    426798 <__flatcc_fb_build_schema@@Base+0x17a8>
  4255ea:	mov    edi,0xe
  4255ef:	mov    WORD PTR [rbp+0x28],di
  4255f3:	mov    QWORD PTR [rbp+0x18],r13
  4255f7:	mov    rdi,QWORD PTR [rsp+0x20]
  4255fc:	mov    r13,QWORD PTR [rbp+0x60]
  425600:	mov    ecx,0xc
  425605:	xor    eax,eax
  425607:	mov    QWORD PTR [rbp+0x80],0x0
  425612:	rep stos QWORD PTR es:[rdi],rax
  425615:	test   r13,r13
  425618:	je     425705 <__flatcc_fb_build_schema@@Base+0x715>
  42561e:	mov    QWORD PTR [rsp+0x28],rbp
  425623:	mov    ebx,0x64
  425628:	mov    rbp,QWORD PTR [rsp+0x20]
  42562d:	jmp    425667 <__flatcc_fb_build_schema@@Base+0x677>
  42562f:	nop
  425630:	lea    rcx,[rip+0x22e69]        # 4484a0 <fb_schema_table_missing@@Base+0x2820>
  425637:	mov    eax,DWORD PTR [rcx+rax*4]
  42563a:	mov    QWORD PTR [rdx],r13
  42563d:	test   eax,eax
  42563f:	jne    426510 <__flatcc_fb_build_schema@@Base+0x1520>
  425645:	cmp    WORD PTR [r13+0x20],0x0
  42564b:	jne    426a50 <__flatcc_fb_build_schema@@Base+0x1a60>
  425651:	nop    DWORD PTR [rax+0x0]
  425658:	mov    r13,QWORD PTR [r13+0x0]
  42565c:	dec    ebx
  42565e:	test   r13,r13
  425661:	je     4256e0 <__flatcc_fb_build_schema@@Base+0x6f0>
  425663:	test   ebx,ebx
  425665:	je     4256e0 <__flatcc_fb_build_schema@@Base+0x6f0>
  425667:	mov    rax,QWORD PTR [r13+0x8]
  42566b:	mov    rcx,QWORD PTR [r15+0x260]
  425672:	mov    rdx,QWORD PTR [rax+0x8]
  425676:	mov    rsi,QWORD PTR [rax]
  425679:	lea    rdi,[rcx+0x20]
  42567d:	call   42c730 <fb_name_table_find@@Base>
  425682:	test   rax,rax
  425685:	je     4266f0 <__flatcc_fb_build_schema@@Base+0x1700>
  42568b:	movsxd rax,DWORD PTR [rax+0x20]
  42568f:	test   eax,eax
  425691:	je     425658 <__flatcc_fb_build_schema@@Base+0x668>
  425693:	cmp    al,0x2
  425695:	jne    4266c0 <__flatcc_fb_build_schema@@Base+0x16d0>
  42569b:	mov    edx,0x1
  4256a0:	shlx   edx,edx,eax
  4256a5:	or     r12d,edx
  4256a8:	lea    rdx,[rbp+rax*8+0x0]
  4256ad:	cmp    QWORD PTR [rdx],0x0
  4256b1:	je     425630 <__flatcc_fb_build_schema@@Base+0x640>
  4256b7:	mov    rsi,QWORD PTR [r13+0x8]
  4256bb:	xor    r9d,r9d
  4256be:	xor    r8d,r8d
  4256c1:	xor    ecx,ecx
  4256c3:	lea    rdx,[rip+0x21856]        # 446f20 <fb_schema_table_missing@@Base+0x12a0>
  4256ca:	mov    rdi,r15
  4256cd:	call   41d870 <__flatcc_error_report@@Base>
  4256d2:	mov    r13,QWORD PTR [r13+0x0]
  4256d6:	dec    ebx
  4256d8:	test   r13,r13
  4256db:	jne    425663 <__flatcc_fb_build_schema@@Base+0x673>
  4256dd:	nop    DWORD PTR [rax]
  4256e0:	mov    rbp,QWORD PTR [rsp+0x28]
  4256e5:	test   r13,r13
  4256e8:	je     425705 <__flatcc_fb_build_schema@@Base+0x715>
  4256ea:	mov    rsi,QWORD PTR [r13+0x8]
  4256ee:	xor    r9d,r9d
  4256f1:	xor    r8d,r8d
  4256f4:	xor    ecx,ecx
  4256f6:	lea    rdx,[rip+0x229eb]        # 4480e8 <fb_schema_table_missing@@Base+0x2468>
  4256fd:	mov    rdi,r15
  425700:	call   41d870 <__flatcc_error_report@@Base>
  425705:	mov    WORD PTR [rbp+0x70],r12w
  42570a:	mov    rbp,QWORD PTR [rbp+0x0]
  42570e:	test   rbp,rbp
  425711:	jne    425448 <__flatcc_fb_build_schema@@Base+0x458>
  425717:	mov    r13,QWORD PTR [rsp+0x18]
  42571c:	nop    DWORD PTR [rax+0x0]
  425720:	mov    r13,QWORD PTR [r13+0x0]
  425724:	test   r13,r13
  425727:	jne    4253d8 <__flatcc_fb_build_schema@@Base+0x3e8>
  42572d:	mov    rax,QWORD PTR [r15+0x240]
  425734:	mov    rdx,QWORD PTR [r15+0x238]
  42573b:	test   rax,rax
  42573e:	je     425761 <__flatcc_fb_build_schema@@Base+0x771>
  425740:	xor    esi,esi
  425742:	jmp    42574b <__flatcc_fb_build_schema@@Base+0x75b>
  425744:	nop    DWORD PTR [rax+0x0]
  425748:	mov    rax,rcx
  42574b:	mov    rcx,QWORD PTR [rax+0xc0]
  425752:	mov    QWORD PTR [rax+0xc0],rsi
  425759:	mov    rsi,rax
  42575c:	test   rcx,rcx
  42575f:	jne    425748 <__flatcc_fb_build_schema@@Base+0x758>
  425761:	mov    QWORD PTR [r15+0x240],rax
  425768:	test   rdx,rdx
  42576b:	je     425921 <__flatcc_fb_build_schema@@Base+0x931>
  425771:	lea    rdi,[rsp+0x90]
  425779:	mov    esi,0x1
  42577e:	mov    ecx,0x7
  425783:	lea    r8,[rsp+0x48]
  425788:	nop    DWORD PTR [rax+rax*1+0x0]
  425790:	cmp    WORD PTR [rdx+0x10],0x0
  425795:	jne    425915 <__flatcc_fb_build_schema@@Base+0x925>
  42579b:	mov    r10,QWORD PTR [rdx+0x28]
  42579f:	test   BYTE PTR [rdx+0xa4],0x8
  4257a6:	jne    426830 <__flatcc_fb_build_schema@@Base+0x1840>
  4257ac:	vpxor  xmm0,xmm0,xmm0
  4257b0:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  4257b6:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  4257bc:	vmovaps XMMWORD PTR [rsp+0x70],xmm0
  4257c2:	vmovaps XMMWORD PTR [rsp+0x80],xmm0
  4257cb:	mov    QWORD PTR [rsp+0x90],0x0
  4257d7:	vmovaps XMMWORD PTR [rsp+0xa0],xmm0
  4257e0:	vmovaps XMMWORD PTR [rsp+0xb0],xmm0
  4257e9:	vmovaps XMMWORD PTR [rsp+0xc0],xmm0
  4257f2:	vmovaps XMMWORD PTR [rsp+0xd0],xmm0
  4257fb:	mov    QWORD PTR [rsp+0xe0],0x0
  425807:	test   r10,r10
  42580a:	je     4258cc <__flatcc_fb_build_schema@@Base+0x8dc>
  425810:	mov    r11,r10
  425813:	nop    DWORD PTR [rax+rax*1+0x0]
  425818:	movzx  eax,WORD PTR [r11+0x28]
  42581d:	movzx  r9d,WORD PTR [r11+0x72]
  425822:	cmp    ax,0xf
  425826:	ja     425866 <__flatcc_fb_build_schema@@Base+0x876>
  425828:	shlx   rax,rsi,rax
  42582d:	test   eax,0x8680
  425832:	jne    42585e <__flatcc_fb_build_schema@@Base+0x86e>
  425834:	test   al,0x2
  425836:	jne    426aa0 <__flatcc_fb_build_schema@@Base+0x1ab0>
  42583c:	test   ah,0x40
  42583f:	je     425866 <__flatcc_fb_build_schema@@Base+0x876>
  425841:	mov    r9,QWORD PTR [r11+0x18]
  425845:	movzx  eax,WORD PTR [r9+0x10]
  42584a:	cmp    ax,0x1
  42584e:	je     4266e0 <__flatcc_fb_build_schema@@Base+0x16f0>
  425854:	cmp    ax,0x3
  425858:	je     4266e0 <__flatcc_fb_build_schema@@Base+0x16f0>
  42585e:	movzx  r9d,WORD PTR [r15+0x12c]
  425866:	test   r9w,r9w
  42586a:	je     426c9c <__flatcc_fb_build_schema@@Base+0x1cac>
  425870:	xor    eax,eax
  425872:	shr    r9w,1
  425876:	je     4264c0 <__flatcc_fb_build_schema@@Base+0x14d0>
  42587c:	nop    DWORD PTR [rax+0x0]
  425880:	inc    eax
  425882:	shr    r9w,1
  425886:	jne    425880 <__flatcc_fb_build_schema@@Base+0x890>
  425888:	cmp    ax,0x7
  42588c:	cmova  eax,ecx
  42588f:	movzx  eax,ax
  425892:	cmp    QWORD PTR [rsp+rax*8+0x50],0x0
  425898:	je     426470 <__flatcc_fb_build_schema@@Base+0x1480>
  42589e:	mov    r9,QWORD PTR [rsp+rax*8+0xa0]
  4258a6:	mov    QWORD PTR [r9],r11
  4258a9:	lea    r9,[r11+0x98]
  4258b0:	mov    r11,QWORD PTR [r11]
  4258b3:	mov    QWORD PTR [rsp+rax*8+0xa0],r9
  4258bb:	test   r11,r11
  4258be:	jne    425818 <__flatcc_fb_build_schema@@Base+0x828>
  4258c4:	mov    r10,QWORD PTR [rsp+0x88]
  4258cc:	mov    QWORD PTR [rsp+0xe0],rdi
  4258d4:	mov    r11,rdi
  4258d7:	mov    eax,0x8
  4258dc:	jmp    4258ee <__flatcc_fb_build_schema@@Base+0x8fe>
  4258de:	xchg   ax,ax
  4258e0:	sub    eax,0x2
  4258e3:	movzx  eax,ax
  4258e6:	mov    r10,QWORD PTR [rsp+rax*8+0x50]
  4258eb:	mov    eax,r9d
  4258ee:	lea    r9d,[rax-0x1]
  4258f2:	test   r10,r10
  4258f5:	jne    426480 <__flatcc_fb_build_schema@@Base+0x1490>
  4258fb:	test   r9w,r9w
  4258ff:	jne    4258e0 <__flatcc_fb_build_schema@@Base+0x8f0>
  425901:	mov    rax,QWORD PTR [rsp+0x50]
  425906:	mov    QWORD PTR [r11],rax
  425909:	mov    rax,QWORD PTR [rsp+0x90]
  425911:	mov    QWORD PTR [rdx+0x30],rax
  425915:	mov    rdx,QWORD PTR [rdx]
  425918:	test   rdx,rdx
  42591b:	jne    425790 <__flatcc_fb_build_schema@@Base+0x7a0>
  425921:	mov    r8,QWORD PTR [r15+0x248]
  425928:	test   r8,r8
  42592b:	je     4268c8 <__flatcc_fb_build_schema@@Base+0x18d8>
  425931:	mov    rbp,QWORD PTR [r15+0x258]
  425938:	mov    r12,r8
  42593b:	xor    eax,eax
  42593d:	jmp    425945 <__flatcc_fb_build_schema@@Base+0x955>
  42593f:	nop
  425940:	mov    eax,edx
  425942:	mov    r12,rsi
  425945:	mov    rsi,QWORD PTR [r12]
  425949:	lea    edx,[rax+0x1]
  42594c:	test   rsi,rsi
  42594f:	jne    425940 <__flatcc_fb_build_schema@@Base+0x950>
  425951:	test   rbp,rbp
  425954:	je     426aea <__flatcc_fb_build_schema@@Base+0x1afa>
  42595a:	cmp    edx,0x1
  42595d:	jne    426aea <__flatcc_fb_build_schema@@Base+0x1afa>
  425963:	nop    DWORD PTR [rax+rax*1+0x0]
  425968:	mov    rax,QWORD PTR [r12+0x8]
  42596d:	lea    rdi,[rbp+0x8]
  425971:	mov    rdx,QWORD PTR [rax+0x8]
  425975:	mov    rsi,QWORD PTR [rax]
  425978:	call   41b510 <fb_symbol_table_find@@Base>
  42597d:	mov    rbx,rax
  425980:	test   rax,rax
  425983:	je     426910 <__flatcc_fb_build_schema@@Base+0x1920>
  425989:	cmp    WORD PTR [rax+0x10],0x4
  42598e:	ja     426910 <__flatcc_fb_build_schema@@Base+0x1920>
  425994:	mov    rsi,QWORD PTR [rax+0x20]
  425998:	mov    rdi,QWORD PTR [rsp+0x8]
  42599d:	call   41adb0 <ptr_set_find_item@@Base>
  4259a2:	test   rax,rax
  4259a5:	je     426910 <__flatcc_fb_build_schema@@Base+0x1920>
  4259ab:	mov    edx,DWORD PTR [r15+0x11c]
  4259b2:	mov    QWORD PTR [r15+0x250],rbx
  4259b9:	movzx  eax,WORD PTR [rbx+0x10]
  4259bd:	test   edx,edx
  4259bf:	je     426b68 <__flatcc_fb_build_schema@@Base+0x1b78>
  4259c5:	cmp    ax,0x1
  4259c9:	ja     426b8e <__flatcc_fb_build_schema@@Base+0x1b9e>
  4259cf:	mov    QWORD PTR [r15+0x248],0x0
  4259da:	jmp    4268d7 <__flatcc_fb_build_schema@@Base+0x18e7>
  4259df:	nop
  4259e0:	mov    r14d,DWORD PTR [r15+0x124]
  4259e7:	test   r14d,r14d
  4259ea:	je     425360 <__flatcc_fb_build_schema@@Base+0x370>
  4259f0:	mov    rsi,rbp
  4259f3:	mov    rdi,r15
  4259f6:	call   422370 <__flatcc_fb_clear_parser@@Base+0x600>
  4259fb:	test   eax,eax
  4259fd:	jne    425350 <__flatcc_fb_build_schema@@Base+0x360>
  425a03:	mov    rbp,QWORD PTR [rbp+0x0]
  425a07:	test   rbp,rbp
  425a0a:	jne    4252c2 <__flatcc_fb_build_schema@@Base+0x2d2>
  425a10:	jmp    42536d <__flatcc_fb_build_schema@@Base+0x37d>
  425a15:	nop    DWORD PTR [rax]
  425a18:	cmp    WORD PTR [rbp+0x58],0x0
  425a1d:	jne    426c16 <__flatcc_fb_build_schema@@Base+0x1c26>
  425a23:	mov    rdi,QWORD PTR [rsp+0x10]
  425a28:	mov    r13,QWORD PTR [rbp+0x38]
  425a2c:	mov    ecx,0xc
  425a31:	xor    eax,eax
  425a33:	rep stos QWORD PTR es:[rdi],rax
  425a36:	xor    r12d,r12d
  425a39:	mov    ebx,0x64
  425a3e:	mov    r14,QWORD PTR [rsp+0x10]
  425a43:	test   r13,r13
  425a46:	jne    425a87 <__flatcc_fb_build_schema@@Base+0xa97>
  425a48:	jmp    426ada <__flatcc_fb_build_schema@@Base+0x1aea>
  425a4d:	nop    DWORD PTR [rax]
  425a50:	lea    rcx,[rip+0x22a49]        # 4484a0 <fb_schema_table_missing@@Base+0x2820>
  425a57:	mov    eax,DWORD PTR [rcx+rax*4]
  425a5a:	mov    QWORD PTR [rdx],r13
  425a5d:	test   eax,eax
  425a5f:	jne    425e48 <__flatcc_fb_build_schema@@Base+0xe58>
  425a65:	cmp    WORD PTR [r13+0x20],0x0
  425a6b:	jne    426a10 <__flatcc_fb_build_schema@@Base+0x1a20>
  425a71:	nop    DWORD PTR [rax+0x0]
  425a78:	mov    r13,QWORD PTR [r13+0x0]
  425a7c:	dec    ebx
  425a7e:	test   r13,r13
  425a81:	je     425b00 <__flatcc_fb_build_schema@@Base+0xb10>
  425a83:	test   ebx,ebx
  425a85:	je     425b00 <__flatcc_fb_build_schema@@Base+0xb10>
  425a87:	mov    rax,QWORD PTR [r13+0x8]
  425a8b:	mov    rcx,QWORD PTR [r15+0x260]
  425a92:	mov    rdx,QWORD PTR [rax+0x8]
  425a96:	mov    rsi,QWORD PTR [rax]
  425a99:	lea    rdi,[rcx+0x20]
  425a9d:	call   42c730 <fb_name_table_find@@Base>
  425aa2:	test   rax,rax
  425aa5:	je     4260c0 <__flatcc_fb_build_schema@@Base+0x10d0>
  425aab:	movsxd rax,DWORD PTR [rax+0x20]
  425aaf:	test   eax,eax
  425ab1:	je     425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  425ab3:	cmp    al,0x4
  425ab5:	jne    425f38 <__flatcc_fb_build_schema@@Base+0xf48>
  425abb:	mov    edx,0x1
  425ac0:	shlx   edx,edx,eax
  425ac5:	or     r12d,edx
  425ac8:	lea    rdx,[r14+rax*8]
  425acc:	cmp    QWORD PTR [rdx],0x0
  425ad0:	je     425a50 <__flatcc_fb_build_schema@@Base+0xa60>
  425ad6:	mov    rsi,QWORD PTR [r13+0x8]
  425ada:	xor    r9d,r9d
  425add:	xor    r8d,r8d
  425ae0:	xor    ecx,ecx
  425ae2:	lea    rdx,[rip+0x21437]        # 446f20 <fb_schema_table_missing@@Base+0x12a0>
  425ae9:	mov    rdi,r15
  425aec:	call   41d870 <__flatcc_error_report@@Base>
  425af1:	mov    r13,QWORD PTR [r13+0x0]
  425af5:	dec    ebx
  425af7:	test   r13,r13
  425afa:	jne    425a83 <__flatcc_fb_build_schema@@Base+0xa93>
  425afc:	nop    DWORD PTR [rax+0x0]
  425b00:	mov    rbx,QWORD PTR [rsp+0xc0]
  425b08:	test   r13,r13
  425b0b:	je     425b28 <__flatcc_fb_build_schema@@Base+0xb38>
  425b0d:	mov    rsi,QWORD PTR [r13+0x8]
  425b11:	xor    r9d,r9d
  425b14:	xor    r8d,r8d
  425b17:	xor    ecx,ecx
  425b19:	lea    rdx,[rip+0x225c8]        # 4480e8 <fb_schema_table_missing@@Base+0x2468>
  425b20:	mov    rdi,r15
  425b23:	call   41d870 <__flatcc_error_report@@Base>
  425b28:	mov    WORD PTR [rbp+0xa4],r12w
  425b30:	test   rbx,rbx
  425b33:	je     425b84 <__flatcc_fb_build_schema@@Base+0xb94>
  425b35:	mov    rdx,QWORD PTR [rbx+0x10]
  425b39:	lea    rax,[rdx-0x1]
  425b3d:	cmp    rax,0xff
  425b43:	ja     425b69 <__flatcc_fb_build_schema@@Base+0xb79>
  425b45:	cmp    rdx,0x1
  425b49:	je     426a40 <__flatcc_fb_build_schema@@Base+0x1a50>
  425b4f:	mov    eax,0x2
  425b54:	nop    DWORD PTR [rax+0x0]
  425b58:	cmp    rdx,rax
  425b5b:	je     426a40 <__flatcc_fb_build_schema@@Base+0x1a50>
  425b61:	add    rax,rax
  425b64:	cmp    rdx,rax
  425b67:	jae    425b58 <__flatcc_fb_build_schema@@Base+0xb68>
  425b69:	mov    rsi,QWORD PTR [rbp+0x8]
  425b6d:	xor    r9d,r9d
  425b70:	xor    r8d,r8d
  425b73:	xor    ecx,ecx
  425b75:	lea    rdx,[rip+0x220e4]        # 447c60 <fb_schema_table_missing@@Base+0x1fe0>
  425b7c:	mov    rdi,r15
  425b7f:	call   41d870 <__flatcc_error_report@@Base>
  425b84:	mov    r12,QWORD PTR [rbp+0x28]
  425b88:	test   r12,r12
  425b8b:	je     425360 <__flatcc_fb_build_schema@@Base+0x370>
  425b91:	lea    rax,[rbp+0x60]
  425b95:	mov    QWORD PTR [rsp+0x18],rax
  425b9a:	mov    DWORD PTR [rsp+0x3c],0x0
  425ba2:	mov    QWORD PTR [rsp+0x28],rbp
  425ba7:	mov    rdi,QWORD PTR [rsp+0x18]
  425bac:	mov    edx,0x1
  425bb1:	mov    rsi,r12
  425bb4:	call   41b4f0 <fb_symbol_table_insert_item@@Base>
  425bb9:	test   rax,rax
  425bbc:	jne    4252e8 <__flatcc_fb_build_schema@@Base+0x2f8>
  425bc2:	cmp    WORD PTR [r12+0x10],0x5
  425bc9:	jne    426bd9 <__flatcc_fb_build_schema@@Base+0x1be9>
  425bcf:	mov    esi,DWORD PTR [r15+0x118]
  425bd6:	xor    ebp,ebp
  425bd8:	mov    edi,DWORD PTR [r15+0x114]
  425bdf:	test   esi,esi
  425be1:	setne  bpl
  425be5:	shl    ebp,0x7
  425be8:	test   edi,edi
  425bea:	je     425bef <__flatcc_fb_build_schema@@Base+0xbff>
  425bec:	or     ebp,0x4
  425bef:	mov    rdi,QWORD PTR [rsp+0x10]
  425bf4:	mov    r14,QWORD PTR [r12+0x60]
  425bf9:	mov    ecx,0xc
  425bfe:	xor    eax,eax
  425c00:	movzx  ebp,bp
  425c03:	rep stos QWORD PTR es:[rdi],rax
  425c06:	test   r14,r14
  425c09:	je     4268a8 <__flatcc_fb_build_schema@@Base+0x18b8>
  425c0f:	mov    QWORD PTR [rsp+0x20],r12
  425c14:	xor    r13d,r13d
  425c17:	mov    ebx,0x64
  425c1c:	mov    r12,QWORD PTR [rsp+0x10]
  425c21:	jmp    425c5e <__flatcc_fb_build_schema@@Base+0xc6e>
  425c23:	nop    DWORD PTR [rax+rax*1+0x0]
  425c28:	lea    rcx,[rip+0x22871]        # 4484a0 <fb_schema_table_missing@@Base+0x2820>
  425c2f:	mov    eax,DWORD PTR [rcx+rax*4]
  425c32:	mov    QWORD PTR [rdx],r14
  425c35:	test   eax,eax
  425c37:	jne    425f60 <__flatcc_fb_build_schema@@Base+0xf70>
  425c3d:	cmp    WORD PTR [r14+0x20],0x0
  425c43:	jne    4267d8 <__flatcc_fb_build_schema@@Base+0x17e8>
  425c49:	nop    DWORD PTR [rax+0x0]
  425c50:	mov    r14,QWORD PTR [r14]
  425c53:	dec    ebx
  425c55:	test   r14,r14
  425c58:	je     425cd8 <__flatcc_fb_build_schema@@Base+0xce8>
  425c5a:	test   ebx,ebx
  425c5c:	je     425cd8 <__flatcc_fb_build_schema@@Base+0xce8>
  425c5e:	mov    rax,QWORD PTR [r14+0x8]
  425c62:	mov    rcx,QWORD PTR [r15+0x260]
  425c69:	mov    rdx,QWORD PTR [rax+0x8]
  425c6d:	mov    rsi,QWORD PTR [rax]
  425c70:	lea    rdi,[rcx+0x20]
  425c74:	call   42c730 <fb_name_table_find@@Base>
  425c79:	test   rax,rax
  425c7c:	je     426000 <__flatcc_fb_build_schema@@Base+0x1010>
  425c82:	movsxd rax,DWORD PTR [rax+0x20]
  425c86:	test   eax,eax
  425c88:	je     425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  425c8a:	bt     ebp,eax
  425c8d:	jae    425fe0 <__flatcc_fb_build_schema@@Base+0xff0>
  425c93:	mov    edx,0x1
  425c98:	shlx   edx,edx,eax
  425c9d:	or     r13d,edx
  425ca0:	lea    rdx,[r12+rax*8]
  425ca4:	cmp    QWORD PTR [rdx],0x0
  425ca8:	je     425c28 <__flatcc_fb_build_schema@@Base+0xc38>
  425cae:	mov    rsi,QWORD PTR [r14+0x8]
  425cb2:	xor    r9d,r9d
  425cb5:	xor    r8d,r8d
  425cb8:	xor    ecx,ecx
  425cba:	lea    rdx,[rip+0x2125f]        # 446f20 <fb_schema_table_missing@@Base+0x12a0>
  425cc1:	mov    rdi,r15
  425cc4:	call   41d870 <__flatcc_error_report@@Base>
  425cc9:	mov    r14,QWORD PTR [r14]
  425ccc:	dec    ebx
  425cce:	test   r14,r14
  425cd1:	jne    425c5a <__flatcc_fb_build_schema@@Base+0xc6a>
  425cd3:	nop    DWORD PTR [rax+rax*1+0x0]
  425cd8:	mov    r12,QWORD PTR [rsp+0x20]
  425cdd:	test   r14,r14
  425ce0:	je     425cfd <__flatcc_fb_build_schema@@Base+0xd0d>
  425ce2:	mov    rsi,QWORD PTR [r14+0x8]
  425ce6:	xor    r9d,r9d
  425ce9:	xor    r8d,r8d
  425cec:	xor    ecx,ecx
  425cee:	lea    rdx,[rip+0x223f3]        # 4480e8 <fb_schema_table_missing@@Base+0x2468>
  425cf5:	mov    rdi,r15
  425cf8:	call   41d870 <__flatcc_error_report@@Base>
  425cfd:	movzx  eax,WORD PTR [r12+0x28]
  425d03:	mov    WORD PTR [r12+0x70],r13w
  425d09:	cmp    ax,0x8
  425d0d:	je     4260e0 <__flatcc_fb_build_schema@@Base+0x10f0>
  425d13:	cmp    ax,0xc
  425d17:	jne    426088 <__flatcc_fb_build_schema@@Base+0x1098>
  425d1d:	mov    rax,QWORD PTR [rsp+0x28]
  425d22:	mov    r8,QWORD PTR [r12+0x18]
  425d27:	mov    rbx,QWORD PTR [rax+0x18]
  425d2b:	test   r8,r8
  425d2e:	je     426235 <__flatcc_fb_build_schema@@Base+0x1245>
  425d34:	mov    rbp,r8
  425d37:	xor    edx,edx
  425d39:	jmp    425d45 <__flatcc_fb_build_schema@@Base+0xd55>
  425d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  425d40:	mov    edx,eax
  425d42:	mov    rbp,rsi
  425d45:	mov    rsi,QWORD PTR [rbp+0x0]
  425d49:	lea    eax,[rdx+0x1]
  425d4c:	test   rsi,rsi
  425d4f:	jne    425d40 <__flatcc_fb_build_schema@@Base+0xd50>
  425d51:	test   rbx,rbx
  425d54:	je     4261c8 <__flatcc_fb_build_schema@@Base+0x11d8>
  425d5a:	mov    r14,QWORD PTR [rsp+0x30]
  425d5f:	cmp    eax,0x1
  425d62:	jne    4261c8 <__flatcc_fb_build_schema@@Base+0x11d8>
  425d68:	nop    DWORD PTR [rax+rax*1+0x0]
  425d70:	mov    rax,QWORD PTR [rbp+0x8]
  425d74:	lea    rdi,[rbx+0x8]
  425d78:	mov    rdx,QWORD PTR [rax+0x8]
  425d7c:	mov    rsi,QWORD PTR [rax]
  425d7f:	call   41b510 <fb_symbol_table_find@@Base>
  425d84:	mov    r13,rax
  425d87:	test   rax,rax
  425d8a:	je     4263d0 <__flatcc_fb_build_schema@@Base+0x13e0>
  425d90:	cmp    WORD PTR [rax+0x10],0x4
  425d95:	ja     4263d0 <__flatcc_fb_build_schema@@Base+0x13e0>
  425d9b:	mov    rsi,QWORD PTR [rax+0x20]
  425d9f:	mov    rdi,QWORD PTR [rsp+0x8]
  425da4:	call   41adb0 <ptr_set_find_item@@Base>
  425da9:	test   rax,rax
  425dac:	je     4263d0 <__flatcc_fb_build_schema@@Base+0x13e0>
  425db2:	movzx  eax,WORD PTR [r13+0x10]
  425db7:	mov    ecx,0xe
  425dbc:	mov    QWORD PTR [r12+0x18],r13
  425dc1:	mov    WORD PTR [r12+0x28],cx
  425dc7:	cmp    ax,0x1
  425dcb:	je     4269d0 <__flatcc_fb_build_schema@@Base+0x19e0>
  425dd1:	mov    edx,DWORD PTR [r15+0x104]
  425dd8:	test   edx,edx
  425dda:	je     426c36 <__flatcc_fb_build_schema@@Base+0x1c46>
  425de0:	cmp    ax,0x3
  425de4:	jne    426c69 <__flatcc_fb_build_schema@@Base+0x1c79>
  425dea:	test   BYTE PTR [r12+0x70],0x80
  425df0:	je     4260f0 <__flatcc_fb_build_schema@@Base+0x1100>
  425df6:	mov    eax,DWORD PTR [r15+0x100]
  425dfd:	test   eax,eax
  425dff:	je     4269dc <__flatcc_fb_build_schema@@Base+0x19ec>
  425e05:	inc    DWORD PTR [rsp+0x3c]
  425e09:	cmp    WORD PTR [r12+0x58],0x0
  425e10:	je     425306 <__flatcc_fb_build_schema@@Base+0x316>
  425e16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e20:	mov    rsi,QWORD PTR [r12+0x8]
  425e25:	xor    r9d,r9d
  425e28:	xor    r8d,r8d
  425e2b:	xor    ecx,ecx
  425e2d:	lea    rdx,[rip+0x21ffc]        # 447e30 <fb_schema_table_missing@@Base+0x21b0>
  425e34:	mov    rdi,r15
  425e37:	call   41d870 <__flatcc_error_report@@Base>
  425e3c:	jmp    425306 <__flatcc_fb_build_schema@@Base+0x316>
  425e41:	nop    DWORD PTR [rax+0x0]
  425e48:	cmp    eax,0x2
  425e4b:	jne    425e80 <__flatcc_fb_build_schema@@Base+0xe90>
  425e4d:	cmp    WORD PTR [r13+0x20],0x2
  425e53:	je     425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  425e59:	mov    rsi,QWORD PTR [r13+0x8]
  425e5d:	xor    r9d,r9d
  425e60:	xor    r8d,r8d
  425e63:	xor    ecx,ecx
  425e65:	lea    rdx,[rip+0x21104]        # 446f70 <fb_schema_table_missing@@Base+0x12f0>
  425e6c:	mov    rdi,r15
  425e6f:	call   41d870 <__flatcc_error_report@@Base>
  425e74:	jmp    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  425e79:	nop    DWORD PTR [rax+0x0]
  425e80:	cmp    eax,0x5
  425e83:	je     426108 <__flatcc_fb_build_schema@@Base+0x1118>
  425e89:	cmp    eax,0x4
  425e8c:	jne    426190 <__flatcc_fb_build_schema@@Base+0x11a0>
  425e92:	movzx  eax,WORD PTR [r13+0x20]
  425e97:	sub    eax,0x4
  425e9a:	cmp    ax,0x1
  425e9e:	jbe    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  425ea4:	mov    rsi,QWORD PTR [r13+0x8]
  425ea8:	xor    r9d,r9d
  425eab:	xor    r8d,r8d
  425eae:	xor    ecx,ecx
  425eb0:	lea    rdx,[rip+0x21111]        # 446fc8 <fb_schema_table_missing@@Base+0x1348>
  425eb7:	mov    rdi,r15
  425eba:	call   41d870 <__flatcc_error_report@@Base>
  425ebf:	jmp    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  425ec4:	nop    DWORD PTR [rax+0x0]
  425ec8:	mov    eax,0x811c9dc5
  425ecd:	test   r8,r8
  425ed0:	jne    4250a5 <__flatcc_fb_build_schema@@Base+0xb5>
  425ed6:	mov    DWORD PTR [rbx+0xa0],eax
  425edc:	mov    QWORD PTR [rbx+0x20],r14
  425ee0:	jmp    425060 <__flatcc_fb_build_schema@@Base+0x70>
  425ee5:	nop    DWORD PTR [rax]
  425ee8:	mov    rsi,QWORD PTR [rbp+0x8]
  425eec:	xor    r9d,r9d
  425eef:	xor    r8d,r8d
  425ef2:	xor    ecx,ecx
  425ef4:	lea    rdx,[rip+0x21f6d]        # 447e68 <fb_schema_table_missing@@Base+0x21e8>
  425efb:	mov    rdi,r15
  425efe:	call   41d870 <__flatcc_error_report@@Base>
  425f03:	mov    eax,0xffffffff
  425f08:	mov    rcx,QWORD PTR [rsp+0x108]
  425f10:	xor    rcx,QWORD PTR fs:0x28
  425f19:	jne    426d01 <__flatcc_fb_build_schema@@Base+0x1d11>
  425f1f:	add    rsp,0x118
  425f26:	pop    rbx
  425f27:	pop    rbp
  425f28:	pop    r12
  425f2a:	pop    r13
  425f2c:	pop    r14
  425f2e:	pop    r15
  425f30:	ret    
  425f31:	nop    DWORD PTR [rax+0x0]
  425f38:	mov    rsi,QWORD PTR [r13+0x8]
  425f3c:	xor    r9d,r9d
  425f3f:	xor    r8d,r8d
  425f42:	xor    ecx,ecx
  425f44:	lea    rdx,[rip+0x20fa5]        # 446ef0 <fb_schema_table_missing@@Base+0x1270>
  425f4b:	mov    rdi,r15
  425f4e:	call   41d870 <__flatcc_error_report@@Base>
  425f53:	jmp    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  425f58:	nop    DWORD PTR [rax+rax*1+0x0]
  425f60:	cmp    eax,0x2
  425f63:	jne    425f98 <__flatcc_fb_build_schema@@Base+0xfa8>
  425f65:	cmp    WORD PTR [r14+0x20],0x2
  425f6b:	je     425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  425f71:	mov    rsi,QWORD PTR [r14+0x8]
  425f75:	xor    r9d,r9d
  425f78:	xor    r8d,r8d
  425f7b:	xor    ecx,ecx
  425f7d:	lea    rdx,[rip+0x20fec]        # 446f70 <fb_schema_table_missing@@Base+0x12f0>
  425f84:	mov    rdi,r15
  425f87:	call   41d870 <__flatcc_error_report@@Base>
  425f8c:	jmp    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  425f91:	nop    DWORD PTR [rax+0x0]
  425f98:	cmp    eax,0x5
  425f9b:	je     426020 <__flatcc_fb_build_schema@@Base+0x1030>
  425fa1:	cmp    eax,0x4
  425fa4:	jne    426050 <__flatcc_fb_build_schema@@Base+0x1060>
  425faa:	movzx  eax,WORD PTR [r14+0x20]
  425faf:	sub    eax,0x4
  425fb2:	cmp    ax,0x1
  425fb6:	jbe    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  425fbc:	mov    rsi,QWORD PTR [r14+0x8]
  425fc0:	xor    r9d,r9d
  425fc3:	xor    r8d,r8d
  425fc6:	xor    ecx,ecx
  425fc8:	lea    rdx,[rip+0x20ff9]        # 446fc8 <fb_schema_table_missing@@Base+0x1348>
  425fcf:	mov    rdi,r15
  425fd2:	call   41d870 <__flatcc_error_report@@Base>
  425fd7:	jmp    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  425fdc:	nop    DWORD PTR [rax+0x0]
  425fe0:	mov    rsi,QWORD PTR [r14+0x8]
  425fe4:	xor    r9d,r9d
  425fe7:	xor    r8d,r8d
  425fea:	xor    ecx,ecx
  425fec:	lea    rdx,[rip+0x20efd]        # 446ef0 <fb_schema_table_missing@@Base+0x1270>
  425ff3:	mov    rdi,r15
  425ff6:	call   41d870 <__flatcc_error_report@@Base>
  425ffb:	jmp    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  426000:	mov    rsi,QWORD PTR [r14+0x8]
  426004:	xor    r9d,r9d
  426007:	xor    r8d,r8d
  42600a:	xor    ecx,ecx
  42600c:	lea    rdx,[rip+0x20ebd]        # 446ed0 <fb_schema_table_missing@@Base+0x1250>
  426013:	mov    rdi,r15
  426016:	call   41d870 <__flatcc_error_report@@Base>
  42601b:	jmp    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  426020:	cmp    WORD PTR [r14+0x20],0x5
  426026:	je     425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  42602c:	mov    rsi,QWORD PTR [r14+0x8]
  426030:	xor    r9d,r9d
  426033:	xor    r8d,r8d
  426036:	xor    ecx,ecx
  426038:	lea    rdx,[rip+0x20f59]        # 446f98 <fb_schema_table_missing@@Base+0x1318>
  42603f:	mov    rdi,r15
  426042:	call   41d870 <__flatcc_error_report@@Base>
  426047:	jmp    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  42604c:	nop    DWORD PTR [rax+0x0]
  426050:	cmp    eax,0x6
  426053:	jne    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  426059:	cmp    WORD PTR [r14+0x20],0x6
  42605f:	je     425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  426065:	mov    rsi,QWORD PTR [r14+0x8]
  426069:	xor    r9d,r9d
  42606c:	xor    r8d,r8d
  42606f:	xor    ecx,ecx
  426071:	lea    rdx,[rip+0x20f78]        # 446ff0 <fb_schema_table_missing@@Base+0x1370>
  426078:	mov    rdi,r15
  42607b:	call   41d870 <__flatcc_error_report@@Base>
  426080:	jmp    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  426085:	nop    DWORD PTR [rax]
  426088:	mov    rbp,QWORD PTR [rsp+0x28]
  42608d:	mov    rsi,QWORD PTR [r12+0x8]
  426092:	xor    r9d,r9d
  426095:	xor    r8d,r8d
  426098:	xor    ecx,ecx
  42609a:	lea    rdx,[rip+0x21d4f]        # 447df0 <fb_schema_table_missing@@Base+0x2170>
  4260a1:	mov    rdi,r15
  4260a4:	mov    r13d,0x1
  4260aa:	call   41d870 <__flatcc_error_report@@Base>
  4260af:	mov    WORD PTR [rbp+0x58],r13w
  4260b4:	jmp    425360 <__flatcc_fb_build_schema@@Base+0x370>
  4260b9:	nop    DWORD PTR [rax+0x0]
  4260c0:	mov    rsi,QWORD PTR [r13+0x8]
  4260c4:	xor    r9d,r9d
  4260c7:	xor    r8d,r8d
  4260ca:	xor    ecx,ecx
  4260cc:	lea    rdx,[rip+0x20dfd]        # 446ed0 <fb_schema_table_missing@@Base+0x1250>
  4260d3:	mov    rdi,r15
  4260d6:	call   41d870 <__flatcc_error_report@@Base>
  4260db:	jmp    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  4260e0:	and    r13w,0x80
  4260e6:	cmp    r13w,0x1
  4260eb:	sbb    DWORD PTR [rsp+0x3c],0xffffffff
  4260f0:	cmp    WORD PTR [r12+0x58],0x0
  4260f7:	je     425306 <__flatcc_fb_build_schema@@Base+0x316>
  4260fd:	jmp    425e20 <__flatcc_fb_build_schema@@Base+0xe30>
  426102:	nop    WORD PTR [rax+rax*1+0x0]
  426108:	cmp    WORD PTR [r13+0x20],0x5
  42610e:	je     425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  426114:	mov    rsi,QWORD PTR [r13+0x8]
  426118:	xor    r9d,r9d
  42611b:	xor    r8d,r8d
  42611e:	xor    ecx,ecx
  426120:	lea    rdx,[rip+0x20e71]        # 446f98 <fb_schema_table_missing@@Base+0x1318>
  426127:	mov    rdi,r15
  42612a:	call   41d870 <__flatcc_error_report@@Base>
  42612f:	jmp    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  426134:	nop    DWORD PTR [rax+0x0]
  426138:	test   rbp,rbp
  42613b:	jne    426151 <__flatcc_fb_build_schema@@Base+0x1161>
  42613d:	jmp    426bff <__flatcc_fb_build_schema@@Base+0x1c0f>
  426142:	nop    WORD PTR [rax+rax*1+0x0]
  426148:	mov    rbp,QWORD PTR [rbp+0x0]
  42614c:	test   rbp,rbp
  42614f:	je     426180 <__flatcc_fb_build_schema@@Base+0x1190>
  426151:	cmp    WORD PTR [rbp+0x10],0x3
  426156:	jne    426148 <__flatcc_fb_build_schema@@Base+0x1158>
  426158:	mov    rsi,rbp
  42615b:	mov    rdi,r15
  42615e:	call   422370 <__flatcc_fb_clear_parser@@Base+0x600>
  426163:	test   eax,eax
  426165:	je     426148 <__flatcc_fb_build_schema@@Base+0x1158>
  426167:	mov    r9d,0x1
  42616d:	mov    WORD PTR [rbp+0x58],r9w
  426172:	mov    rbp,QWORD PTR [rbp+0x0]
  426176:	test   rbp,rbp
  426179:	jne    426151 <__flatcc_fb_build_schema@@Base+0x1161>
  42617b:	nop    DWORD PTR [rax+rax*1+0x0]
  426180:	mov    rbp,QWORD PTR [r15+0x238]
  426187:	jmp    4252a7 <__flatcc_fb_build_schema@@Base+0x2b7>
  42618c:	nop    DWORD PTR [rax+0x0]
  426190:	cmp    eax,0x6
  426193:	jne    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  426199:	cmp    WORD PTR [r13+0x20],0x6
  42619f:	je     425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  4261a5:	mov    rsi,QWORD PTR [r13+0x8]
  4261a9:	xor    r9d,r9d
  4261ac:	xor    r8d,r8d
  4261af:	xor    ecx,ecx
  4261b1:	lea    rdx,[rip+0x20e38]        # 446ff0 <fb_schema_table_missing@@Base+0x1370>
  4261b8:	mov    rdi,r15
  4261bb:	call   41d870 <__flatcc_error_report@@Base>
  4261c0:	jmp    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  4261c5:	nop    DWORD PTR [rax]
  4261c8:	cmp    eax,0x1
  4261cb:	cmovne rsi,r8
  4261cf:	cmp    QWORD PTR [rsp+0x30],0x0
  4261d5:	je     426235 <__flatcc_fb_build_schema@@Base+0x1245>
  4261d7:	mov    rdi,QWORD PTR [r15+0x260]
  4261de:	test   rdi,rdi
  4261e1:	je     426235 <__flatcc_fb_build_schema@@Base+0x1245>
  4261e3:	neg    edx
  4261e5:	movsxd rdx,edx
  4261e8:	call   41c590 <fb_scope_table_find@@Base>
  4261ed:	test   rax,rax
  4261f0:	je     426230 <__flatcc_fb_build_schema@@Base+0x1240>
  4261f2:	mov    rcx,QWORD PTR [rbp+0x8]
  4261f6:	lea    rdi,[rax+0x8]
  4261fa:	mov    rdx,QWORD PTR [rcx+0x8]
  4261fe:	mov    rsi,QWORD PTR [rcx]
  426201:	call   41b510 <fb_symbol_table_find@@Base>
  426206:	mov    r13,rax
  426209:	test   rax,rax
  42620c:	je     426230 <__flatcc_fb_build_schema@@Base+0x1240>
  42620e:	cmp    WORD PTR [rax+0x10],0x4
  426213:	ja     426230 <__flatcc_fb_build_schema@@Base+0x1240>
  426215:	mov    rsi,QWORD PTR [rax+0x20]
  426219:	mov    rdi,QWORD PTR [rsp+0x8]
  42621e:	call   41adb0 <ptr_set_find_item@@Base>
  426223:	test   rax,rax
  426226:	jne    425db2 <__flatcc_fb_build_schema@@Base+0xdc2>
  42622c:	nop    DWORD PTR [rax+0x0]
  426230:	mov    r8,QWORD PTR [r12+0x18]
  426235:	mov    rcx,r12
  426238:	lea    rdx,[rip+0x21ac1]        # 447d00 <fb_schema_table_missing@@Base+0x2080>
  42623f:	mov    rsi,r8
  426242:	mov    rdi,r15
  426245:	call   41eca0 <error_ref_sym@@Base>
  42624a:	mov    ecx,0x1
  42624f:	mov    WORD PTR [r12+0x28],cx
  426255:	jmp    425306 <__flatcc_fb_build_schema@@Base+0x316>
  42625a:	nop    WORD PTR [rax+rax*1+0x0]
  426260:	mov    rax,QWORD PTR [rbx]
  426263:	test   rax,rax
  426266:	je     4262e0 <__flatcc_fb_build_schema@@Base+0x12f0>
  426268:	xor    r13d,r13d
  42626b:	jmp    426273 <__flatcc_fb_build_schema@@Base+0x1283>
  42626d:	nop    DWORD PTR [rax]
  426270:	mov    r13d,edx
  426273:	mov    rax,QWORD PTR [rax]
  426276:	lea    edx,[r13+0x1]
  42627a:	test   rax,rax
  42627d:	jne    426270 <__flatcc_fb_build_schema@@Base+0x1280>
  42627f:	neg    r13d
  426282:	jmp    4262b0 <__flatcc_fb_build_schema@@Base+0x12c0>
  426284:	nop    DWORD PTR [rax+0x0]
  426288:	test   r14,r14
  42628b:	je     4262ad <__flatcc_fb_build_schema@@Base+0x12bd>
  42628d:	mov    rdi,QWORD PTR [r15+0x260]
  426294:	test   rdi,rdi
  426297:	je     4262ad <__flatcc_fb_build_schema@@Base+0x12bd>
  426299:	mov    rsi,QWORD PTR [rbx]
  42629c:	movsxd rdx,r13d
  42629f:	call   41c590 <fb_scope_table_find@@Base>
  4262a4:	test   rax,rax
  4262a7:	jne    426460 <__flatcc_fb_build_schema@@Base+0x1470>
  4262ad:	inc    r13d
  4262b0:	test   r13d,r13d
  4262b3:	jne    426288 <__flatcc_fb_build_schema@@Base+0x1298>
  4262b5:	test   r14,r14
  4262b8:	je     4262e0 <__flatcc_fb_build_schema@@Base+0x12f0>
  4262ba:	mov    rdi,QWORD PTR [r15+0x260]
  4262c1:	test   rdi,rdi
  4262c4:	je     4262e0 <__flatcc_fb_build_schema@@Base+0x12f0>
  4262c6:	xor    edx,edx
  4262c8:	xor    esi,esi
  4262ca:	call   41c590 <fb_scope_table_find@@Base>
  4262cf:	mov    rbx,rax
  4262d2:	test   rax,rax
  4262d5:	jne    4254f0 <__flatcc_fb_build_schema@@Base+0x500>
  4262db:	nop    DWORD PTR [rax+rax*1+0x0]
  4262e0:	mov    r8,QWORD PTR [rbp+0x30]
  4262e4:	mov    rcx,rbp
  4262e7:	lea    rdx,[rip+0x21c7a]        # 447f68 <fb_schema_table_missing@@Base+0x22e8>
  4262ee:	mov    rsi,r8
  4262f1:	mov    rdi,r15
  4262f4:	mov    ebx,0x1
  4262f9:	call   41eca0 <error_ref_sym@@Base>
  4262fe:	mov    WORD PTR [rbp+0x28],bx
  426302:	mov    rbp,QWORD PTR [rbp+0x0]
  426306:	test   rbp,rbp
  426309:	jne    425448 <__flatcc_fb_build_schema@@Base+0x458>
  42630f:	jmp    425717 <__flatcc_fb_build_schema@@Base+0x727>
  426314:	nop    DWORD PTR [rax+0x0]
  426318:	mov    rax,QWORD PTR [rbx]
  42631b:	test   rax,rax
  42631e:	je     426398 <__flatcc_fb_build_schema@@Base+0x13a8>
  426320:	xor    r13d,r13d
  426323:	jmp    42632b <__flatcc_fb_build_schema@@Base+0x133b>
  426325:	nop    DWORD PTR [rax]
  426328:	mov    r13d,edx
  42632b:	mov    rax,QWORD PTR [rax]
  42632e:	lea    edx,[r13+0x1]
  426332:	test   rax,rax
  426335:	jne    426328 <__flatcc_fb_build_schema@@Base+0x1338>
  426337:	neg    r13d
  42633a:	jmp    426368 <__flatcc_fb_build_schema@@Base+0x1378>
  42633c:	nop    DWORD PTR [rax+0x0]
  426340:	test   r14,r14
  426343:	je     426365 <__flatcc_fb_build_schema@@Base+0x1375>
  426345:	mov    rdi,QWORD PTR [r15+0x260]
  42634c:	test   rdi,rdi
  42634f:	je     426365 <__flatcc_fb_build_schema@@Base+0x1375>
  426351:	mov    rsi,QWORD PTR [rbx]
  426354:	movsxd rdx,r13d
  426357:	call   41c590 <fb_scope_table_find@@Base>
  42635c:	test   rax,rax
  42635f:	jne    4264b0 <__flatcc_fb_build_schema@@Base+0x14c0>
  426365:	inc    r13d
  426368:	test   r13d,r13d
  42636b:	jne    426340 <__flatcc_fb_build_schema@@Base+0x1350>
  42636d:	test   r14,r14
  426370:	je     426398 <__flatcc_fb_build_schema@@Base+0x13a8>
  426372:	mov    rdi,QWORD PTR [r15+0x260]
  426379:	test   rdi,rdi
  42637c:	je     426398 <__flatcc_fb_build_schema@@Base+0x13a8>
  42637e:	xor    edx,edx
  426380:	xor    esi,esi
  426382:	call   41c590 <fb_scope_table_find@@Base>
  426387:	mov    rbx,rax
  42638a:	test   rax,rax
  42638d:	jne    425598 <__flatcc_fb_build_schema@@Base+0x5a8>
  426393:	nop    DWORD PTR [rax+rax*1+0x0]
  426398:	mov    r8,QWORD PTR [rbp+0x18]
  42639c:	mov    rcx,rbp
  42639f:	lea    rdx,[rip+0x21c32]        # 447fd8 <fb_schema_table_missing@@Base+0x2358>
  4263a6:	mov    rsi,r8
  4263a9:	mov    rdi,r15
  4263ac:	call   41eca0 <error_ref_sym@@Base>
  4263b1:	mov    r9d,0x1
  4263b7:	mov    WORD PTR [rbp+0x28],r9w
  4263bc:	mov    rbp,QWORD PTR [rbp+0x0]
  4263c0:	test   rbp,rbp
  4263c3:	jne    425448 <__flatcc_fb_build_schema@@Base+0x458>
  4263c9:	jmp    425717 <__flatcc_fb_build_schema@@Base+0x727>
  4263ce:	xchg   ax,ax
  4263d0:	mov    rax,QWORD PTR [rbx]
  4263d3:	test   rax,rax
  4263d6:	je     426230 <__flatcc_fb_build_schema@@Base+0x1240>
  4263dc:	xor    r13d,r13d
  4263df:	jmp    4263eb <__flatcc_fb_build_schema@@Base+0x13fb>
  4263e1:	nop    DWORD PTR [rax+0x0]
  4263e8:	mov    r13d,edx
  4263eb:	mov    rax,QWORD PTR [rax]
  4263ee:	lea    edx,[r13+0x1]
  4263f2:	test   rax,rax
  4263f5:	jne    4263e8 <__flatcc_fb_build_schema@@Base+0x13f8>
  4263f7:	neg    r13d
  4263fa:	jmp    426428 <__flatcc_fb_build_schema@@Base+0x1438>
  4263fc:	nop    DWORD PTR [rax+0x0]
  426400:	test   r14,r14
  426403:	je     426425 <__flatcc_fb_build_schema@@Base+0x1435>
  426405:	mov    rdi,QWORD PTR [r15+0x260]
  42640c:	test   rdi,rdi
  42640f:	je     426425 <__flatcc_fb_build_schema@@Base+0x1435>
  426411:	mov    rsi,QWORD PTR [rbx]
  426414:	movsxd rdx,r13d
  426417:	call   41c590 <fb_scope_table_find@@Base>
  42641c:	test   rax,rax
  42641f:	jne    426500 <__flatcc_fb_build_schema@@Base+0x1510>
  426425:	inc    r13d
  426428:	test   r13d,r13d
  42642b:	jne    426400 <__flatcc_fb_build_schema@@Base+0x1410>
  42642d:	test   r14,r14
  426430:	je     426230 <__flatcc_fb_build_schema@@Base+0x1240>
  426436:	mov    rdi,QWORD PTR [r15+0x260]
  42643d:	test   rdi,rdi
  426440:	je     426230 <__flatcc_fb_build_schema@@Base+0x1240>
  426446:	xor    edx,edx
  426448:	xor    esi,esi
  42644a:	call   41c590 <fb_scope_table_find@@Base>
  42644f:	mov    rbx,rax
  426452:	test   rax,rax
  426455:	jne    425d70 <__flatcc_fb_build_schema@@Base+0xd80>
  42645b:	jmp    426230 <__flatcc_fb_build_schema@@Base+0x1240>
  426460:	mov    rbx,rax
  426463:	jmp    4254f0 <__flatcc_fb_build_schema@@Base+0x500>
  426468:	nop    DWORD PTR [rax+rax*1+0x0]
  426470:	mov    QWORD PTR [rsp+rax*8+0x50],r11
  426475:	jmp    4258a9 <__flatcc_fb_build_schema@@Base+0x8b9>
  42647a:	nop    WORD PTR [rax+rax*1+0x0]
  426480:	mov    QWORD PTR [r11],r10
  426483:	test   r9w,r9w
  426487:	je     425909 <__flatcc_fb_build_schema@@Base+0x919>
  42648d:	sub    eax,0x2
  426490:	movzx  r10d,r9w
  426494:	movzx  eax,ax
  426497:	mov    r11,QWORD PTR [rsp+r10*8+0xa0]
  42649f:	mov    r10,QWORD PTR [rsp+rax*8+0x50]
  4264a4:	mov    eax,r9d
  4264a7:	jmp    4258ee <__flatcc_fb_build_schema@@Base+0x8fe>
  4264ac:	nop    DWORD PTR [rax+0x0]
  4264b0:	mov    rbx,rax
  4264b3:	jmp    425598 <__flatcc_fb_build_schema@@Base+0x5a8>
  4264b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4264c0:	xor    eax,eax
  4264c2:	jmp    425892 <__flatcc_fb_build_schema@@Base+0x8a2>
  4264c7:	nop    WORD PTR [rax+rax*1+0x0]
  4264d0:	mov    rsi,QWORD PTR [rbp+0x8]
  4264d4:	mov    rcx,QWORD PTR [rax+0x8]
  4264d8:	xor    r9d,r9d
  4264db:	xor    r8d,r8d
  4264de:	lea    rdx,[rip+0x219e3]        # 447ec8 <fb_schema_table_missing@@Base+0x2248>
  4264e5:	mov    rdi,r15
  4264e8:	call   41d870 <__flatcc_error_report@@Base>
  4264ed:	mov    rbp,QWORD PTR [rbp+0x0]
  4264f1:	test   rbp,rbp
  4264f4:	jne    425448 <__flatcc_fb_build_schema@@Base+0x458>
  4264fa:	jmp    425717 <__flatcc_fb_build_schema@@Base+0x727>
  4264ff:	nop
  426500:	mov    rbx,rax
  426503:	jmp    425d70 <__flatcc_fb_build_schema@@Base+0xd80>
  426508:	nop    DWORD PTR [rax+rax*1+0x0]
  426510:	cmp    eax,0x2
  426513:	jne    426548 <__flatcc_fb_build_schema@@Base+0x1558>
  426515:	cmp    WORD PTR [r13+0x20],0x2
  42651b:	je     425658 <__flatcc_fb_build_schema@@Base+0x668>
  426521:	mov    rsi,QWORD PTR [r13+0x8]
  426525:	xor    r9d,r9d
  426528:	xor    r8d,r8d
  42652b:	xor    ecx,ecx
  42652d:	lea    rdx,[rip+0x20a3c]        # 446f70 <fb_schema_table_missing@@Base+0x12f0>
  426534:	mov    rdi,r15
  426537:	call   41d870 <__flatcc_error_report@@Base>
  42653c:	jmp    425658 <__flatcc_fb_build_schema@@Base+0x668>
  426541:	nop    DWORD PTR [rax+0x0]
  426548:	cmp    eax,0x5
  42654b:	je     426800 <__flatcc_fb_build_schema@@Base+0x1810>
  426551:	cmp    eax,0x4
  426554:	jne    426870 <__flatcc_fb_build_schema@@Base+0x1880>
  42655a:	movzx  eax,WORD PTR [r13+0x20]
  42655f:	sub    eax,0x4
  426562:	cmp    ax,0x1
  426566:	jbe    425658 <__flatcc_fb_build_schema@@Base+0x668>
  42656c:	mov    rsi,QWORD PTR [r13+0x8]
  426570:	xor    r9d,r9d
  426573:	xor    r8d,r8d
  426576:	xor    ecx,ecx
  426578:	lea    rdx,[rip+0x20a49]        # 446fc8 <fb_schema_table_missing@@Base+0x1348>
  42657f:	mov    rdi,r15
  426582:	call   41d870 <__flatcc_error_report@@Base>
  426587:	jmp    425658 <__flatcc_fb_build_schema@@Base+0x668>
  42658c:	nop    DWORD PTR [rax+0x0]
  426590:	cmp    eax,0x1
  426593:	cmovne rsi,r8
  426597:	test   r14,r14
  42659a:	je     4262e4 <__flatcc_fb_build_schema@@Base+0x12f4>
  4265a0:	mov    rdi,QWORD PTR [r15+0x260]
  4265a7:	test   rdi,rdi
  4265aa:	je     4262e4 <__flatcc_fb_build_schema@@Base+0x12f4>
  4265b0:	neg    edx
  4265b2:	movsxd rdx,edx
  4265b5:	call   41c590 <fb_scope_table_find@@Base>
  4265ba:	test   rax,rax
  4265bd:	je     4262e0 <__flatcc_fb_build_schema@@Base+0x12f0>
  4265c3:	mov    rcx,QWORD PTR [r12+0x8]
  4265c8:	lea    rdi,[rax+0x8]
  4265cc:	mov    rdx,QWORD PTR [rcx+0x8]
  4265d0:	mov    rsi,QWORD PTR [rcx]
  4265d3:	call   41b510 <fb_symbol_table_find@@Base>
  4265d8:	mov    r13,rax
  4265db:	test   rax,rax
  4265de:	je     4262e0 <__flatcc_fb_build_schema@@Base+0x12f0>
  4265e4:	cmp    WORD PTR [rax+0x10],0x4
  4265e9:	ja     4262e0 <__flatcc_fb_build_schema@@Base+0x12f0>
  4265ef:	mov    rsi,QWORD PTR [rax+0x20]
  4265f3:	mov    rdi,QWORD PTR [rsp+0x8]
  4265f8:	call   41adb0 <ptr_set_find_item@@Base>
  4265fd:	test   rax,rax
  426600:	je     4262e0 <__flatcc_fb_build_schema@@Base+0x12f0>
  426606:	cmp    WORD PTR [r13+0x10],0x0
  42660c:	je     42553f <__flatcc_fb_build_schema@@Base+0x54f>
  426612:	nop    WORD PTR [rax+rax*1+0x0]
  426618:	mov    rsi,QWORD PTR [rbp+0x8]
  42661c:	mov    rcx,QWORD PTR [r13+0x8]
  426620:	xor    r9d,r9d
  426623:	xor    r8d,r8d
  426626:	lea    rdx,[rip+0x21973]        # 447fa0 <fb_schema_table_missing@@Base+0x2320>
  42662d:	mov    rdi,r15
  426630:	call   41d870 <__flatcc_error_report@@Base>
  426635:	mov    r11d,0x1
  42663b:	mov    WORD PTR [rbp+0x28],r11w
  426640:	mov    rbp,QWORD PTR [rbp+0x0]
  426644:	test   rbp,rbp
  426647:	jne    425448 <__flatcc_fb_build_schema@@Base+0x458>
  42664d:	jmp    425717 <__flatcc_fb_build_schema@@Base+0x727>
  426652:	nop    WORD PTR [rax+rax*1+0x0]
  426658:	mov    rsi,QWORD PTR [rbp+0x8]
  42665c:	xor    r9d,r9d
  42665f:	xor    r8d,r8d
  426662:	xor    ecx,ecx
  426664:	lea    rdx,[rip+0x2187d]        # 447ee8 <fb_schema_table_missing@@Base+0x2268>
  42666b:	mov    rdi,r15
  42666e:	call   41d870 <__flatcc_error_report@@Base>
  426673:	jmp    425479 <__flatcc_fb_build_schema@@Base+0x489>
  426678:	nop    DWORD PTR [rax+rax*1+0x0]
  426680:	cmp    WORD PTR [r13+0x58],0x1
  426686:	je     425720 <__flatcc_fb_build_schema@@Base+0x730>
  42668c:	mov    rsi,r13
  42668f:	mov    rdi,r15
  426692:	call   423040 <__flatcc_fb_clear_parser@@Base+0x12d0>
  426697:	test   eax,eax
  426699:	je     425720 <__flatcc_fb_build_schema@@Base+0x730>
  42669f:	mov    ebp,0x1
  4266a4:	mov    WORD PTR [r13+0x58],bp
  4266a9:	mov    r13,QWORD PTR [r13+0x0]
  4266ad:	test   r13,r13
  4266b0:	jne    4253d8 <__flatcc_fb_build_schema@@Base+0x3e8>
  4266b6:	jmp    42572d <__flatcc_fb_build_schema@@Base+0x73d>
  4266bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4266c0:	mov    rsi,QWORD PTR [r13+0x8]
  4266c4:	xor    r9d,r9d
  4266c7:	xor    r8d,r8d
  4266ca:	xor    ecx,ecx
  4266cc:	lea    rdx,[rip+0x2081d]        # 446ef0 <fb_schema_table_missing@@Base+0x1270>
  4266d3:	mov    rdi,r15
  4266d6:	call   41d870 <__flatcc_error_report@@Base>
  4266db:	jmp    425658 <__flatcc_fb_build_schema@@Base+0x668>
  4266e0:	movzx  r9d,WORD PTR [r9+0xb0]
  4266e8:	jmp    425866 <__flatcc_fb_build_schema@@Base+0x876>
  4266ed:	nop    DWORD PTR [rax]
  4266f0:	mov    rsi,QWORD PTR [r13+0x8]
  4266f4:	xor    r9d,r9d
  4266f7:	xor    r8d,r8d
  4266fa:	xor    ecx,ecx
  4266fc:	lea    rdx,[rip+0x207cd]        # 446ed0 <fb_schema_table_missing@@Base+0x1250>
  426703:	mov    rdi,r15
  426706:	call   41d870 <__flatcc_error_report@@Base>
  42670b:	jmp    425658 <__flatcc_fb_build_schema@@Base+0x668>
  426710:	cmp    eax,0x1
  426713:	cmovne rsi,r8
  426717:	test   r14,r14
  42671a:	je     42639c <__flatcc_fb_build_schema@@Base+0x13ac>
  426720:	mov    rdi,QWORD PTR [r15+0x260]
  426727:	test   rdi,rdi
  42672a:	je     42639c <__flatcc_fb_build_schema@@Base+0x13ac>
  426730:	neg    edx
  426732:	movsxd rdx,edx
  426735:	call   41c590 <fb_scope_table_find@@Base>
  42673a:	test   rax,rax
  42673d:	je     426398 <__flatcc_fb_build_schema@@Base+0x13a8>
  426743:	mov    rcx,QWORD PTR [r12+0x8]
  426748:	lea    rdi,[rax+0x8]
  42674c:	mov    rdx,QWORD PTR [rcx+0x8]
  426750:	mov    rsi,QWORD PTR [rcx]
  426753:	call   41b510 <fb_symbol_table_find@@Base>
  426758:	mov    r13,rax
  42675b:	test   rax,rax
  42675e:	je     426398 <__flatcc_fb_build_schema@@Base+0x13a8>
  426764:	cmp    WORD PTR [rax+0x10],0x4
  426769:	ja     426398 <__flatcc_fb_build_schema@@Base+0x13a8>
  42676f:	mov    rsi,QWORD PTR [rax+0x20]
  426773:	mov    rdi,QWORD PTR [rsp+0x8]
  426778:	call   41adb0 <ptr_set_find_item@@Base>
  42677d:	test   rax,rax
  426780:	je     426398 <__flatcc_fb_build_schema@@Base+0x13a8>
  426786:	movzx  r12d,WORD PTR [r13+0x10]
  42678b:	test   r12w,r12w
  42678f:	je     4255ea <__flatcc_fb_build_schema@@Base+0x5fa>
  426795:	nop    DWORD PTR [rax]
  426798:	mov    rsi,QWORD PTR [rbp+0x8]
  42679c:	mov    rcx,QWORD PTR [r13+0x8]
  4267a0:	xor    r8d,r8d
  4267a3:	xor    r9d,r9d
  4267a6:	lea    rdx,[rip+0x21863]        # 448010 <fb_schema_table_missing@@Base+0x2390>
  4267ad:	mov    rdi,r15
  4267b0:	call   41d870 <__flatcc_error_report@@Base>
  4267b5:	mov    r8d,0x1
  4267bb:	mov    WORD PTR [rbp+0x28],r8w
  4267c0:	mov    rbp,QWORD PTR [rbp+0x0]
  4267c4:	test   rbp,rbp
  4267c7:	jne    425448 <__flatcc_fb_build_schema@@Base+0x458>
  4267cd:	jmp    425717 <__flatcc_fb_build_schema@@Base+0x727>
  4267d2:	nop    WORD PTR [rax+rax*1+0x0]
  4267d8:	mov    rsi,QWORD PTR [r14+0x8]
  4267dc:	xor    r9d,r9d
  4267df:	xor    r8d,r8d
  4267e2:	xor    ecx,ecx
  4267e4:	lea    rdx,[rip+0x2075d]        # 446f48 <fb_schema_table_missing@@Base+0x12c8>
  4267eb:	mov    rdi,r15
  4267ee:	call   41d870 <__flatcc_error_report@@Base>
  4267f3:	jmp    425c50 <__flatcc_fb_build_schema@@Base+0xc60>
  4267f8:	nop    DWORD PTR [rax+rax*1+0x0]
  426800:	cmp    WORD PTR [r13+0x20],0x5
  426806:	je     425658 <__flatcc_fb_build_schema@@Base+0x668>
  42680c:	mov    rsi,QWORD PTR [r13+0x8]
  426810:	xor    r9d,r9d
  426813:	xor    r8d,r8d
  426816:	xor    ecx,ecx
  426818:	lea    rdx,[rip+0x20779]        # 446f98 <fb_schema_table_missing@@Base+0x1318>
  42681f:	mov    rdi,r15
  426822:	call   41d870 <__flatcc_error_report@@Base>
  426827:	jmp    425658 <__flatcc_fb_build_schema@@Base+0x668>
  42682c:	nop    DWORD PTR [rax+0x0]
  426830:	mov    QWORD PTR [rsp+0x48],0x0
  426839:	mov    rax,r8
  42683c:	test   r10,r10
  42683f:	je     42685a <__flatcc_fb_build_schema@@Base+0x186a>
  426841:	nop    DWORD PTR [rax+0x0]
  426848:	mov    QWORD PTR [rax],r10
  42684b:	lea    rax,[r10+0x98]
  426852:	mov    r10,QWORD PTR [r10]
  426855:	test   r10,r10
  426858:	jne    426848 <__flatcc_fb_build_schema@@Base+0x1858>
  42685a:	mov    QWORD PTR [rax],0x0
  426861:	mov    rax,QWORD PTR [rsp+0x48]
  426866:	mov    QWORD PTR [rdx+0x30],rax
  42686a:	jmp    425915 <__flatcc_fb_build_schema@@Base+0x925>
  42686f:	nop
  426870:	cmp    eax,0x6
  426873:	jne    425658 <__flatcc_fb_build_schema@@Base+0x668>
  426879:	cmp    WORD PTR [r13+0x20],0x6
  42687f:	je     425658 <__flatcc_fb_build_schema@@Base+0x668>
  426885:	mov    rsi,QWORD PTR [r13+0x8]
  426889:	xor    r9d,r9d
  42688c:	xor    r8d,r8d
  42688f:	xor    ecx,ecx
  426891:	lea    rdx,[rip+0x20758]        # 446ff0 <fb_schema_table_missing@@Base+0x1370>
  426898:	mov    rdi,r15
  42689b:	call   41d870 <__flatcc_error_report@@Base>
  4268a0:	jmp    425658 <__flatcc_fb_build_schema@@Base+0x668>
  4268a5:	nop    DWORD PTR [rax]
  4268a8:	xor    eax,eax
  4268aa:	mov    WORD PTR [r12+0x70],ax
  4268b0:	movzx  eax,WORD PTR [r12+0x28]
  4268b6:	cmp    ax,0x8
  4268ba:	jne    425d13 <__flatcc_fb_build_schema@@Base+0xd23>
  4268c0:	jmp    4260f0 <__flatcc_fb_build_schema@@Base+0x1100>
  4268c5:	nop    DWORD PTR [rax]
  4268c8:	mov    esi,DWORD PTR [r15+0x13c]
  4268cf:	test   esi,esi
  4268d1:	jne    426bbb <__flatcc_fb_build_schema@@Base+0x1bcb>
  4268d7:	mov    eax,DWORD PTR [r15+0xd0]
  4268de:	xor    edx,edx
  4268e0:	test   eax,eax
  4268e2:	sete   dl
  4268e5:	mov    DWORD PTR [r15+0xe4],edx
  4268ec:	jmp    425f08 <__flatcc_fb_build_schema@@Base+0xf18>
  4268f1:	nop    DWORD PTR [rax+0x0]
  4268f8:	mov    DWORD PTR [rbx+0xa0],eax
  4268fe:	mov    QWORD PTR [rbx+0x20],r14
  426902:	jmp    4250d8 <__flatcc_fb_build_schema@@Base+0xe8>
  426907:	nop    WORD PTR [rax+rax*1+0x0]
  426910:	mov    rax,QWORD PTR [rbp+0x0]
  426914:	test   rax,rax
  426917:	je     426990 <__flatcc_fb_build_schema@@Base+0x19a0>
  426919:	xor    ebx,ebx
  42691b:	jmp    426922 <__flatcc_fb_build_schema@@Base+0x1932>
  42691d:	nop    DWORD PTR [rax]
  426920:	mov    ebx,edx
  426922:	mov    rax,QWORD PTR [rax]
  426925:	lea    edx,[rbx+0x1]
  426928:	test   rax,rax
  42692b:	jne    426920 <__flatcc_fb_build_schema@@Base+0x1930>
  42692d:	neg    ebx
  42692f:	test   ebx,ebx
  426931:	je     426960 <__flatcc_fb_build_schema@@Base+0x1970>
  426933:	nop    DWORD PTR [rax+rax*1+0x0]
  426938:	test   r14,r14
  42693b:	je     42695a <__flatcc_fb_build_schema@@Base+0x196a>
  42693d:	mov    rdi,QWORD PTR [r15+0x260]
  426944:	test   rdi,rdi
  426947:	je     42695a <__flatcc_fb_build_schema@@Base+0x196a>
  426949:	mov    rsi,QWORD PTR [rbp+0x0]
  42694d:	movsxd rdx,ebx
  426950:	call   41c590 <fb_scope_table_find@@Base>
  426955:	test   rax,rax
  426958:	jne    4269c0 <__flatcc_fb_build_schema@@Base+0x19d0>
  42695a:	inc    ebx
  42695c:	test   ebx,ebx
  42695e:	jne    426938 <__flatcc_fb_build_schema@@Base+0x1948>
  426960:	test   r14,r14
  426963:	je     426990 <__flatcc_fb_build_schema@@Base+0x19a0>
  426965:	mov    rdi,QWORD PTR [r15+0x260]
  42696c:	test   rdi,rdi
  42696f:	je     426990 <__flatcc_fb_build_schema@@Base+0x19a0>
  426971:	xor    edx,edx
  426973:	xor    esi,esi
  426975:	call   41c590 <fb_scope_table_find@@Base>
  42697a:	mov    rbp,rax
  42697d:	test   rax,rax
  426980:	jne    425968 <__flatcc_fb_build_schema@@Base+0x978>
  426986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426990:	mov    QWORD PTR [r15+0x250],0x0
  42699b:	mov    r8,QWORD PTR [r15+0x248]
  4269a2:	xor    ecx,ecx
  4269a4:	lea    rdx,[rip+0x218a8]        # 448253 <fb_schema_table_missing@@Base+0x25d3>
  4269ab:	mov    rsi,r8
  4269ae:	mov    rdi,r15
  4269b1:	call   41eca0 <error_ref_sym@@Base>
  4269b6:	jmp    4259cf <__flatcc_fb_build_schema@@Base+0x9df>
  4269bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4269c0:	mov    rbp,rax
  4269c3:	jmp    425968 <__flatcc_fb_build_schema@@Base+0x978>
  4269c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4269d0:	test   BYTE PTR [r12+0x70],0x80
  4269d6:	je     4260f0 <__flatcc_fb_build_schema@@Base+0x1100>
  4269dc:	mov    rsi,QWORD PTR [r12+0x8]
  4269e1:	xor    r9d,r9d
  4269e4:	xor    r8d,r8d
  4269e7:	xor    ecx,ecx
  4269e9:	lea    rdx,[rip+0x21388]        # 447d78 <fb_schema_table_missing@@Base+0x20f8>
  4269f0:	mov    rdi,r15
  4269f3:	mov    rbp,QWORD PTR [rsp+0x28]
  4269f8:	call   41d870 <__flatcc_error_report@@Base>
  4269fd:	mov    eax,0x1
  426a02:	mov    WORD PTR [r12+0x28],ax
  426a08:	jmp    425350 <__flatcc_fb_build_schema@@Base+0x360>
  426a0d:	nop    DWORD PTR [rax]
  426a10:	mov    rsi,QWORD PTR [r13+0x8]
  426a14:	xor    r9d,r9d
  426a17:	xor    r8d,r8d
  426a1a:	xor    ecx,ecx
  426a1c:	lea    rdx,[rip+0x20525]        # 446f48 <fb_schema_table_missing@@Base+0x12c8>
  426a23:	mov    rdi,r15
  426a26:	call   41d870 <__flatcc_error_report@@Base>
  426a2b:	jmp    425a78 <__flatcc_fb_build_schema@@Base+0xa88>
  426a30:	mov    r12d,0x1
  426a36:	mov    WORD PTR [rbx+0x58],r12w
  426a3b:	jmp    4253b0 <__flatcc_fb_build_schema@@Base+0x3c0>
  426a40:	mov    WORD PTR [rbp+0xb0],dx
  426a47:	jmp    425b84 <__flatcc_fb_build_schema@@Base+0xb94>
  426a4c:	nop    DWORD PTR [rax+0x0]
  426a50:	mov    rsi,QWORD PTR [r13+0x8]
  426a54:	xor    r9d,r9d
  426a57:	xor    r8d,r8d
  426a5a:	xor    ecx,ecx
  426a5c:	lea    rdx,[rip+0x204e5]        # 446f48 <fb_schema_table_missing@@Base+0x12c8>
  426a63:	mov    rdi,r15
  426a66:	call   41d870 <__flatcc_error_report@@Base>
  426a6b:	jmp    425658 <__flatcc_fb_build_schema@@Base+0x668>
  426a70:	mov    r13,QWORD PTR [rsp+0x18]
  426a75:	mov    rsi,QWORD PTR [rbp+0x8]
  426a79:	xor    r9d,r9d
  426a7c:	xor    r8d,r8d
  426a7f:	xor    ecx,ecx
  426a81:	lea    rdx,[rip+0x20ad0]        # 447558 <fb_schema_table_missing@@Base+0x18d8>
  426a88:	mov    rdi,r15
  426a8b:	mov    ebp,0x1
  426a90:	call   41d870 <__flatcc_error_report@@Base>
  426a95:	mov    WORD PTR [r13+0x58],bp
  426a9a:	jmp    4266a9 <__flatcc_fb_build_schema@@Base+0x16b9>
  426a9f:	nop
  426aa0:	mov    QWORD PTR [rsp+0x48],0x0
  426aa9:	mov    r9,r8
  426aac:	jmp    426ab3 <__flatcc_fb_build_schema@@Base+0x1ac3>
  426aae:	xchg   ax,ax
  426ab0:	mov    r10,rax
  426ab3:	mov    rax,QWORD PTR [r10]
  426ab6:	mov    QWORD PTR [r9],r10
  426ab9:	lea    r9,[r10+0x98]
  426ac0:	test   rax,rax
  426ac3:	jne    426ab0 <__flatcc_fb_build_schema@@Base+0x1ac0>
  426ac5:	mov    QWORD PTR [r10+0x98],0x0
  426ad0:	mov    rax,QWORD PTR [rsp+0x48]
  426ad5:	jmp    425911 <__flatcc_fb_build_schema@@Base+0x921>
  426ada:	xor    r8d,r8d
  426add:	mov    WORD PTR [rbp+0xa4],r8w
  426ae5:	jmp    425b84 <__flatcc_fb_build_schema@@Base+0xb94>
  426aea:	cmp    edx,0x1
  426aed:	cmovne rsi,r8
  426af1:	test   r14,r14
  426af4:	je     426bab <__flatcc_fb_build_schema@@Base+0x1bbb>
  426afa:	mov    rdi,QWORD PTR [r15+0x260]
  426b01:	test   rdi,rdi
  426b04:	je     426bab <__flatcc_fb_build_schema@@Base+0x1bbb>
  426b0a:	neg    eax
  426b0c:	movsxd rdx,eax
  426b0f:	call   41c590 <fb_scope_table_find@@Base>
  426b14:	test   rax,rax
  426b17:	je     426990 <__flatcc_fb_build_schema@@Base+0x19a0>
  426b1d:	mov    rcx,QWORD PTR [r12+0x8]
  426b22:	lea    rdi,[rax+0x8]
  426b26:	mov    rdx,QWORD PTR [rcx+0x8]
  426b2a:	mov    rsi,QWORD PTR [rcx]
  426b2d:	call   41b510 <fb_symbol_table_find@@Base>
  426b32:	mov    rbx,rax
  426b35:	test   rax,rax
  426b38:	je     426990 <__flatcc_fb_build_schema@@Base+0x19a0>
  426b3e:	cmp    WORD PTR [rax+0x10],0x4
  426b43:	ja     426990 <__flatcc_fb_build_schema@@Base+0x19a0>
  426b49:	mov    rsi,QWORD PTR [rax+0x20]
  426b4d:	mov    rdi,QWORD PTR [rsp+0x8]
  426b52:	call   41adb0 <ptr_set_find_item@@Base>
  426b57:	test   rax,rax
  426b5a:	jne    4259ab <__flatcc_fb_build_schema@@Base+0x9bb>
  426b60:	jmp    426990 <__flatcc_fb_build_schema@@Base+0x19a0>
  426b65:	nop    DWORD PTR [rax]
  426b68:	test   ax,ax
  426b6b:	je     4259cf <__flatcc_fb_build_schema@@Base+0x9df>
  426b71:	mov    rsi,QWORD PTR [r15+0x248]
  426b78:	xor    ecx,ecx
  426b7a:	lea    rdx,[rip+0x216e6]        # 448267 <fb_schema_table_missing@@Base+0x25e7>
  426b81:	mov    rdi,r15
  426b84:	call   41eca0 <error_ref_sym@@Base>
  426b89:	jmp    4259cf <__flatcc_fb_build_schema@@Base+0x9df>
  426b8e:	mov    rsi,QWORD PTR [r15+0x248]
  426b95:	xor    ecx,ecx
  426b97:	lea    rdx,[rip+0x214aa]        # 448048 <fb_schema_table_missing@@Base+0x23c8>
  426b9e:	mov    rdi,r15
  426ba1:	call   41eca0 <error_ref_sym@@Base>
  426ba6:	jmp    4259cf <__flatcc_fb_build_schema@@Base+0x9df>
  426bab:	mov    QWORD PTR [r15+0x250],0x0
  426bb6:	jmp    4269a2 <__flatcc_fb_build_schema@@Base+0x19b2>
  426bbb:	xor    r9d,r9d
  426bbe:	xor    r8d,r8d
  426bc1:	xor    ecx,ecx
  426bc3:	lea    rdx,[rip+0x21672]        # 44823c <fb_schema_table_missing@@Base+0x25bc>
  426bca:	xor    esi,esi
  426bcc:	mov    rdi,r15
  426bcf:	call   41d870 <__flatcc_error_report@@Base>
  426bd4:	jmp    4268d7 <__flatcc_fb_build_schema@@Base+0x18e7>
  426bd9:	mov    rsi,QWORD PTR [r12+0x8]
  426bde:	xor    r9d,r9d
  426be1:	xor    r8d,r8d
  426be4:	xor    ecx,ecx
  426be6:	lea    rdx,[rip+0x210eb]        # 447cd8 <fb_schema_table_missing@@Base+0x2058>
  426bed:	mov    rdi,r15
  426bf0:	mov    rbp,QWORD PTR [rsp+0x28]
  426bf5:	call   41d870 <__flatcc_error_report@@Base>
  426bfa:	jmp    425350 <__flatcc_fb_build_schema@@Base+0x360>
  426bff:	mov    rax,QWORD PTR [r15+0x240]
  426c06:	xor    edx,edx
  426c08:	test   rax,rax
  426c0b:	jne    425740 <__flatcc_fb_build_schema@@Base+0x750>
  426c11:	jmp    425921 <__flatcc_fb_build_schema@@Base+0x931>
  426c16:	mov    rsi,QWORD PTR [rbp+0x8]
  426c1a:	xor    r9d,r9d
  426c1d:	xor    r8d,r8d
  426c20:	xor    ecx,ecx
  426c22:	lea    rdx,[rip+0x21007]        # 447c30 <fb_schema_table_missing@@Base+0x1fb0>
  426c29:	mov    rdi,r15
  426c2c:	call   41d870 <__flatcc_error_report@@Base>
  426c31:	jmp    425350 <__flatcc_fb_build_schema@@Base+0x360>
  426c36:	mov    rcx,QWORD PTR [r13+0x8]
  426c3a:	mov    rsi,QWORD PTR [r12+0x8]
  426c3f:	xor    r9d,r9d
  426c42:	xor    r8d,r8d
  426c45:	lea    rdx,[rip+0x21164]        # 447db0 <fb_schema_table_missing@@Base+0x2130>
  426c4c:	mov    rdi,r15
  426c4f:	mov    rbp,QWORD PTR [rsp+0x28]
  426c54:	call   41d870 <__flatcc_error_report@@Base>
  426c59:	mov    eax,0x1
  426c5e:	mov    WORD PTR [r12+0x28],ax
  426c64:	jmp    425350 <__flatcc_fb_build_schema@@Base+0x360>
  426c69:	mov    rcx,QWORD PTR [r13+0x8]
  426c6d:	mov    rsi,QWORD PTR [r12+0x8]
  426c72:	xor    r9d,r9d
  426c75:	xor    r8d,r8d
  426c78:	lea    rdx,[rip+0x210b1]        # 447d30 <fb_schema_table_missing@@Base+0x20b0>
  426c7f:	mov    rdi,r15
  426c82:	mov    rbp,QWORD PTR [rsp+0x28]
  426c87:	call   41d870 <__flatcc_error_report@@Base>
  426c8c:	mov    eax,0x1
  426c91:	mov    WORD PTR [r12+0x28],ax
  426c97:	jmp    425350 <__flatcc_fb_build_schema@@Base+0x360>
  426c9c:	lea    rcx,[rip+0x2170d]        # 4483b0 <fb_schema_table_missing@@Base+0x2730>
  426ca3:	mov    edx,0x5f1
  426ca8:	lea    rsi,[rip+0x1ffc1]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  426caf:	lea    rdi,[rip+0x21580]        # 448236 <fb_schema_table_missing@@Base+0x25b6>
  426cb6:	call   4052e0 <__assert_fail@plt>
  426cbb:	mov    rax,QWORD PTR [rip+0x2a326]        # 450fe8 <stderr@GLIBC_2.2.5>
  426cc2:	lea    rdx,[rip+0x72d7]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  426cc9:	mov    rdi,QWORD PTR [rax]
  426ccc:	mov    esi,0x1
  426cd1:	xor    eax,eax
  426cd3:	call   4053e0 <__fprintf_chk@plt>
  426cd8:	mov    edi,0x1
  426cdd:	call   4053c0 <exit@plt>
  426ce2:	lea    rcx,[rip+0x21797]        # 448480 <fb_schema_table_missing@@Base+0x2800>
  426ce9:	mov    edx,0x616
  426cee:	lea    rsi,[rip+0x1ff7b]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  426cf5:	lea    rdi,[rip+0x20efc]        # 447bf8 <fb_schema_table_missing@@Base+0x1f78>
  426cfc:	call   4052e0 <__assert_fail@plt>
  426d01:	call   4052c0 <__stack_chk_fail@plt>
  426d06:	lea    rcx,[rip+0x216c3]        # 4483d0 <fb_schema_table_missing@@Base+0x2750>
  426d0d:	mov    edx,0x469
  426d12:	lea    rsi,[rip+0x1ff57]        # 446c70 <fb_schema_table_missing@@Base+0xff0>
  426d19:	lea    rdi,[rip+0x21462]        # 448182 <fb_schema_table_missing@@Base+0x2502>
  426d20:	call   4052e0 <__assert_fail@plt>
  426d25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d2f:	nop

0000000000426d30 <__flatcc_fb_coerce_scalar_type@@Base>:
  426d30:	endbr64 
  426d34:	movzx  eax,WORD PTR [rcx+0x10]
  426d38:	test   ax,ax
  426d3b:	je     426e10 <__flatcc_fb_coerce_scalar_type@@Base+0xe0>
  426d41:	push   rbx
  426d42:	mov    rbx,rcx
  426d45:	cmp    ax,0x4
  426d49:	je     426db0 <__flatcc_fb_coerce_scalar_type@@Base+0x80>
  426d4b:	cmp    ax,0x1
  426d4f:	je     426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426d55:	cmp    ax,0x6
  426d59:	jne    426e18 <__flatcc_fb_coerce_scalar_type@@Base+0xe8>
  426d5f:	cmp    edx,0x5
  426d62:	je     426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426d68:	mov    r11d,DWORD PTR [rdi+0xfc]
  426d6f:	test   r11d,r11d
  426d72:	je     426e58 <__flatcc_fb_coerce_scalar_type@@Base+0x128>
  426d78:	movzx  eax,BYTE PTR [rcx]
  426d7b:	mov    r10d,0x5
  426d81:	mov    WORD PTR [rcx+0x10],r10w
  426d86:	mov    QWORD PTR [rcx],rax
  426d89:	cmp    rax,0x1
  426d8d:	ja     4274b4 <__flatcc_fb_coerce_scalar_type@@Base+0x784>
  426d93:	cmp    edx,0xb
  426d96:	ja     427260 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  426d9c:	lea    rcx,[rip+0x21bdd]        # 448980 <fb_schema_table_missing@@Base+0x2d00>
  426da3:	mov    edx,edx
  426da5:	movsxd rax,DWORD PTR [rcx+rdx*4]
  426da9:	add    rax,rcx
  426dac:	notrack jmp rax
  426daf:	nop
  426db0:	cmp    QWORD PTR [rcx],0x0
  426db4:	js     426e38 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
  426dba:	mov    eax,0x5
  426dbf:	mov    WORD PTR [rcx+0x10],ax
  426dc3:	cmp    edx,0xb
  426dc6:	ja     427260 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  426dcc:	lea    rcx,[rip+0x21bdd]        # 4489b0 <fb_schema_table_missing@@Base+0x2d30>
  426dd3:	mov    edx,edx
  426dd5:	movsxd rax,DWORD PTR [rcx+rdx*4]
  426dd9:	add    rax,rcx
  426ddc:	notrack jmp rax
  426ddf:	nop
  426de0:	movzx  eax,WORD PTR [rbx+0x10]
  426de4:	cmp    ax,0x4
  426de8:	je     426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426dea:	cmp    ax,0x5
  426dee:	jne    42738a <__flatcc_fb_coerce_scalar_type@@Base+0x65a>
  426df4:	cmp    QWORD PTR [rbx],0x0
  426df8:	js     427491 <__flatcc_fb_coerce_scalar_type@@Base+0x761>
  426dfe:	mov    r9d,0x4
  426e04:	mov    WORD PTR [rbx+0x10],r9w
  426e09:	xor    eax,eax
  426e0b:	pop    rbx
  426e0c:	ret    
  426e0d:	nop    DWORD PTR [rax]
  426e10:	xor    eax,eax
  426e12:	ret    
  426e13:	nop    DWORD PTR [rax+rax*1+0x0]
  426e18:	cmp    edx,0xb
  426e1b:	ja     427260 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  426e21:	lea    rcx,[rip+0x21bb8]        # 4489e0 <fb_schema_table_missing@@Base+0x2d60>
  426e28:	mov    edx,edx
  426e2a:	movsxd rdx,DWORD PTR [rcx+rdx*4]
  426e2e:	add    rdx,rcx
  426e31:	notrack jmp rdx
  426e34:	nop    DWORD PTR [rax+0x0]
  426e38:	cmp    edx,0xb
  426e3b:	ja     427260 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  426e41:	lea    rcx,[rip+0x21bc8]        # 448a10 <fb_schema_table_missing@@Base+0x2d90>
  426e48:	mov    edx,edx
  426e4a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  426e4e:	add    rax,rcx
  426e51:	notrack jmp rax
  426e54:	nop    DWORD PTR [rax+0x0]
  426e58:	cmp    edx,0xb
  426e5b:	ja     427260 <__flatcc_fb_coerce_scalar_type@@Base+0x530>
  426e61:	lea    rcx,[rip+0x21bd8]        # 448a40 <fb_schema_table_missing@@Base+0x2dc0>
  426e68:	mov    edx,edx
  426e6a:	movsxd rax,DWORD PTR [rcx+rdx*4]
  426e6e:	add    rax,rcx
  426e71:	notrack jmp rax
  426e74:	nop    DWORD PTR [rax+0x0]
  426e78:	movzx  eax,WORD PTR [rbx+0x10]
  426e7c:	cmp    ax,0x5
  426e80:	jne    427214 <__flatcc_fb_coerce_scalar_type@@Base+0x4e4>
  426e86:	cmp    QWORD PTR [rbx],0xff
  426e8d:	jbe    426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426e93:	mov    rsi,QWORD PTR [rsi+0x8]
  426e97:	xor    r9d,r9d
  426e9a:	xor    r8d,r8d
  426e9d:	xor    ecx,ecx
  426e9f:	lea    rdx,[rip+0x219ff]        # 4488a5 <fb_schema_table_missing@@Base+0x2c25>
  426ea6:	call   41d870 <__flatcc_error_report@@Base>
  426eab:	mov    WORD PTR [rbx+0x10],0x1
  426eb1:	or     eax,0xffffffff
  426eb4:	pop    rbx
  426eb5:	ret    
  426eb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426ec0:	movzx  eax,WORD PTR [rbx+0x10]
  426ec4:	cmp    ax,0x5
  426ec8:	jne    427237 <__flatcc_fb_coerce_scalar_type@@Base+0x507>
  426ece:	cmp    QWORD PTR [rbx],0xffff
  426ed5:	jbe    426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426edb:	mov    rsi,QWORD PTR [rsi+0x8]
  426edf:	xor    r9d,r9d
  426ee2:	xor    r8d,r8d
  426ee5:	xor    ecx,ecx
  426ee7:	lea    rdx,[rip+0x21712]        # 448600 <fb_schema_table_missing@@Base+0x2980>
  426eee:	call   41d870 <__flatcc_error_report@@Base>
  426ef3:	mov    WORD PTR [rbx+0x10],0x1
  426ef9:	or     eax,0xffffffff
  426efc:	pop    rbx
  426efd:	ret    
  426efe:	xchg   ax,ax
  426f00:	movzx  eax,WORD PTR [rbx+0x10]
  426f04:	cmp    ax,0x5
  426f08:	jne    4271f1 <__flatcc_fb_coerce_scalar_type@@Base+0x4c1>
  426f0e:	mov    eax,0xffffffff
  426f13:	cmp    QWORD PTR [rbx],rax
  426f16:	jbe    426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426f1c:	mov    rsi,QWORD PTR [rsi+0x8]
  426f20:	xor    r9d,r9d
  426f23:	xor    r8d,r8d
  426f26:	xor    ecx,ecx
  426f28:	lea    rdx,[rip+0x21959]        # 448888 <fb_schema_table_missing@@Base+0x2c08>
  426f2f:	call   41d870 <__flatcc_error_report@@Base>
  426f34:	mov    WORD PTR [rbx+0x10],0x1
  426f3a:	or     eax,0xffffffff
  426f3d:	pop    rbx
  426f3e:	ret    
  426f3f:	nop
  426f40:	cmp    WORD PTR [rbx+0x10],0x5
  426f45:	je     426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426f4b:	mov    rsi,QWORD PTR [rsi+0x8]
  426f4f:	xor    r9d,r9d
  426f52:	xor    r8d,r8d
  426f55:	xor    ecx,ecx
  426f57:	lea    rdx,[rip+0x215f2]        # 448550 <fb_schema_table_missing@@Base+0x28d0>
  426f5e:	call   41d870 <__flatcc_error_report@@Base>
  426f63:	mov    WORD PTR [rbx+0x10],0x1
  426f69:	or     eax,0xffffffff
  426f6c:	pop    rbx
  426f6d:	ret    
  426f6e:	xchg   ax,ax
  426f70:	movzx  eax,WORD PTR [rbx+0x10]
  426f74:	cmp    ax,0x4
  426f78:	je     427180 <__flatcc_fb_coerce_scalar_type@@Base+0x450>
  426f7e:	cmp    ax,0x5
  426f82:	je     4272f8 <__flatcc_fb_coerce_scalar_type@@Base+0x5c8>
  426f88:	cmp    ax,0x3
  426f8c:	je     426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426f92:	mov    rsi,QWORD PTR [rsi+0x8]
  426f96:	lea    rdx,[rip+0x218b3]        # 448850 <fb_schema_table_missing@@Base+0x2bd0>
  426f9d:	xor    r9d,r9d
  426fa0:	xor    r8d,r8d
  426fa3:	xor    ecx,ecx
  426fa5:	call   41d870 <__flatcc_error_report@@Base>
  426faa:	mov    edx,0x1
  426faf:	mov    WORD PTR [rbx+0x10],dx
  426fb3:	mov    eax,0xffffffff
  426fb8:	pop    rbx
  426fb9:	ret    
  426fba:	nop    WORD PTR [rax+rax*1+0x0]
  426fc0:	movzx  eax,WORD PTR [rbx+0x10]
  426fc4:	cmp    ax,0x4
  426fc8:	je     4271b8 <__flatcc_fb_coerce_scalar_type@@Base+0x488>
  426fce:	cmp    ax,0x5
  426fd2:	je     427350 <__flatcc_fb_coerce_scalar_type@@Base+0x620>
  426fd8:	cmp    ax,0x3
  426fdc:	je     426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  426fe2:	mov    rsi,QWORD PTR [rsi+0x8]
  426fe6:	xor    r9d,r9d
  426fe9:	xor    r8d,r8d
  426fec:	xor    ecx,ecx
  426fee:	lea    rdx,[rip+0x217eb]        # 4487e0 <fb_schema_table_missing@@Base+0x2b60>
  426ff5:	call   41d870 <__flatcc_error_report@@Base>
  426ffa:	mov    esi,0x1
  426fff:	mov    WORD PTR [rbx+0x10],si
  427003:	mov    eax,0xffffffff
  427008:	pop    rbx
  427009:	ret    
  42700a:	nop    WORD PTR [rax+rax*1+0x0]
  427010:	movzx  eax,WORD PTR [rbx+0x10]
  427014:	cmp    ax,0x4
  427018:	je     4270f0 <__flatcc_fb_coerce_scalar_type@@Base+0x3c0>
  42701e:	cmp    ax,0x5
  427022:	jne    427288 <__flatcc_fb_coerce_scalar_type@@Base+0x558>
  427028:	cmp    QWORD PTR [rbx],0x7f
  42702c:	jle    426dfe <__flatcc_fb_coerce_scalar_type@@Base+0xce>
  427032:	mov    rsi,QWORD PTR [rsi+0x8]
  427036:	xor    r9d,r9d
  427039:	xor    r8d,r8d
  42703c:	xor    ecx,ecx
  42703e:	lea    rdx,[rip+0x2190b]        # 448950 <fb_schema_table_missing@@Base+0x2cd0>
  427045:	call   41d870 <__flatcc_error_report@@Base>
  42704a:	mov    WORD PTR [rbx+0x10],0x1
  427050:	or     eax,0xffffffff
  427053:	pop    rbx
  427054:	ret    
  427055:	nop    DWORD PTR [rax]
  427058:	movzx  eax,WORD PTR [rbx+0x10]
  42705c:	cmp    ax,0x4
  427060:	je     427120 <__flatcc_fb_coerce_scalar_type@@Base+0x3f0>
  427066:	cmp    ax,0x5
  42706a:	jne    4272ab <__flatcc_fb_coerce_scalar_type@@Base+0x57b>
  427070:	cmp    QWORD PTR [rbx],0x7fff
  427077:	jle    426dfe <__flatcc_fb_coerce_scalar_type@@Base+0xce>
  42707d:	mov    rsi,QWORD PTR [rsi+0x8]
  427081:	xor    r9d,r9d
  427084:	xor    r8d,r8d
  427087:	xor    ecx,ecx
  427089:	lea    rdx,[rip+0x21887]        # 448917 <fb_schema_table_missing@@Base+0x2c97>
  427090:	call   41d870 <__flatcc_error_report@@Base>
  427095:	mov    WORD PTR [rbx+0x10],0x1
  42709b:	or     eax,0xffffffff
  42709e:	pop    rbx
  42709f:	ret    
  4270a0:	movzx  eax,WORD PTR [rbx+0x10]
  4270a4:	cmp    ax,0x4
  4270a8:	je     427150 <__flatcc_fb_coerce_scalar_type@@Base+0x420>
  4270ae:	cmp    ax,0x5
  4270b2:	jne    4272ce <__flatcc_fb_coerce_scalar_type@@Base+0x59e>
  4270b8:	cmp    QWORD PTR [rbx],0x7fffffff
  4270bf:	jle    426dfe <__flatcc_fb_coerce_scalar_type@@Base+0xce>
  4270c5:	mov    rsi,QWORD PTR [rsi+0x8]
  4270c9:	xor    r9d,r9d
  4270cc:	xor    r8d,r8d
  4270cf:	xor    ecx,ecx
  4270d1:	lea    rdx,[rip+0x21806]        # 4488de <fb_schema_table_missing@@Base+0x2c5e>
  4270d8:	call   41d870 <__flatcc_error_report@@Base>
  4270dd:	mov    WORD PTR [rbx+0x10],0x1
  4270e3:	or     eax,0xffffffff
  4270e6:	pop    rbx
  4270e7:	ret    
  4270e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4270f0:	cmp    QWORD PTR [rbx],0xffffffffffffff80
  4270f4:	jge    426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  4270fa:	mov    rsi,QWORD PTR [rsi+0x8]
  4270fe:	xor    r9d,r9d
  427101:	xor    r8d,r8d
  427104:	xor    ecx,ecx
  427106:	lea    rdx,[rip+0x21827]        # 448934 <fb_schema_table_missing@@Base+0x2cb4>
  42710d:	call   41d870 <__flatcc_error_report@@Base>
  427112:	mov    WORD PTR [rbx+0x10],0x1
  427118:	or     eax,0xffffffff
  42711b:	pop    rbx
  42711c:	ret    
  42711d:	nop    DWORD PTR [rax]
  427120:	cmp    QWORD PTR [rbx],0xffffffffffff8000
  427127:	jge    426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  42712d:	mov    rsi,QWORD PTR [rsi+0x8]
  427131:	xor    r9d,r9d
  427134:	xor    r8d,r8d
  427137:	xor    ecx,ecx
  427139:	lea    rdx,[rip+0x217b9]        # 4488f9 <fb_schema_table_missing@@Base+0x2c79>
  427140:	call   41d870 <__flatcc_error_report@@Base>
  427145:	mov    WORD PTR [rbx+0x10],0x1
  42714b:	or     eax,0xffffffff
  42714e:	pop    rbx
  42714f:	ret    
  427150:	cmp    QWORD PTR [rbx],0xffffffff80000000
  427157:	jge    426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  42715d:	mov    rsi,QWORD PTR [rsi+0x8]
  427161:	xor    r9d,r9d
  427164:	xor    r8d,r8d
  427167:	xor    ecx,ecx
  427169:	lea    rdx,[rip+0x21752]        # 4488c2 <fb_schema_table_missing@@Base+0x2c42>
  427170:	call   41d870 <__flatcc_error_report@@Base>
  427175:	mov    WORD PTR [rbx+0x10],0x1
  42717b:	or     eax,0xffffffff
  42717e:	pop    rbx
  42717f:	ret    
  427180:	mov    rax,QWORD PTR [rbx]
  427183:	vxorps xmm0,xmm0,xmm0
  427187:	vcvtsi2ss xmm0,xmm0,rax
  42718c:	vcvttss2si rdx,xmm0
  427191:	cmp    rax,rdx
  427194:	jne    427329 <__flatcc_fb_coerce_scalar_type@@Base+0x5f9>
  42719a:	vcvtss2sd xmm0,xmm0,xmm0
  42719e:	mov    ecx,0x3
  4271a3:	vmovsd QWORD PTR [rbx],xmm0
  4271a7:	mov    WORD PTR [rbx+0x10],cx
  4271ab:	xor    eax,eax
  4271ad:	jmp    426e0b <__flatcc_fb_coerce_scalar_type@@Base+0xdb>
  4271b2:	nop    WORD PTR [rax+rax*1+0x0]
  4271b8:	mov    rax,QWORD PTR [rbx]
  4271bb:	vxorpd xmm0,xmm0,xmm0
  4271bf:	vcvtsi2sd xmm0,xmm0,rax
  4271c4:	vcvttsd2si rdx,xmm0
  4271c9:	cmp    rax,rdx
  4271cc:	je     42719e <__flatcc_fb_coerce_scalar_type@@Base+0x46e>
  4271ce:	mov    rsi,QWORD PTR [rsi+0x8]
  4271d2:	xor    r9d,r9d
  4271d5:	xor    r8d,r8d
  4271d8:	xor    ecx,ecx
  4271da:	lea    rdx,[rip+0x215cf]        # 4487b0 <fb_schema_table_missing@@Base+0x2b30>
  4271e1:	call   41d870 <__flatcc_error_report@@Base>
  4271e6:	mov    WORD PTR [rbx+0x10],0x1
  4271ec:	or     eax,0xffffffff
  4271ef:	pop    rbx
  4271f0:	ret    
  4271f1:	mov    rsi,QWORD PTR [rsi+0x8]
  4271f5:	xor    r9d,r9d
  4271f8:	xor    r8d,r8d
  4271fb:	xor    ecx,ecx
  4271fd:	lea    rdx,[rip+0x21384]        # 448588 <fb_schema_table_missing@@Base+0x2908>
  427204:	call   41d870 <__flatcc_error_report@@Base>
  427209:	mov    WORD PTR [rbx+0x10],0x1
  42720f:	or     eax,0xffffffff
  427212:	pop    rbx
  427213:	ret    
  427214:	mov    rsi,QWORD PTR [rsi+0x8]
  427218:	xor    r9d,r9d
  42721b:	xor    r8d,r8d
  42721e:	xor    ecx,ecx
  427220:	lea    rdx,[rip+0x213f9]        # 448620 <fb_schema_table_missing@@Base+0x29a0>
  427227:	call   41d870 <__flatcc_error_report@@Base>
  42722c:	mov    WORD PTR [rbx+0x10],0x1
  427232:	or     eax,0xffffffff
  427235:	pop    rbx
  427236:	ret    
  427237:	mov    rsi,QWORD PTR [rsi+0x8]
  42723b:	xor    r9d,r9d
  42723e:	xor    r8d,r8d
  427241:	xor    ecx,ecx
  427243:	lea    rdx,[rip+0x21376]        # 4485c0 <fb_schema_table_missing@@Base+0x2940>
  42724a:	call   41d870 <__flatcc_error_report@@Base>
  42724f:	mov    WORD PTR [rbx+0x10],0x1
  427255:	or     eax,0xffffffff
  427258:	pop    rbx
  427259:	ret    
  42725a:	nop    WORD PTR [rax+rax*1+0x0]
  427260:	mov    rsi,QWORD PTR [rsi+0x8]
  427264:	xor    r9d,r9d
  427267:	xor    r8d,r8d
  42726a:	xor    ecx,ecx
  42726c:	lea    rdx,[rip+0x216f8]        # 44896b <fb_schema_table_missing@@Base+0x2ceb>
  427273:	call   41d870 <__flatcc_error_report@@Base>
  427278:	mov    eax,0x1
  42727d:	mov    WORD PTR [rbx+0x10],ax
  427281:	mov    eax,0xffffffff
  427286:	pop    rbx
  427287:	ret    
  427288:	mov    rsi,QWORD PTR [rsi+0x8]
  42728c:	xor    r9d,r9d
  42728f:	xor    r8d,r8d
  427292:	xor    ecx,ecx
  427294:	lea    rdx,[rip+0x2146d]        # 448708 <fb_schema_table_missing@@Base+0x2a88>
  42729b:	call   41d870 <__flatcc_error_report@@Base>
  4272a0:	mov    WORD PTR [rbx+0x10],0x1
  4272a6:	or     eax,0xffffffff
  4272a9:	pop    rbx
  4272aa:	ret    
  4272ab:	mov    rsi,QWORD PTR [rsi+0x8]
  4272af:	xor    r9d,r9d
  4272b2:	xor    r8d,r8d
  4272b5:	xor    ecx,ecx
  4272b7:	lea    rdx,[rip+0x2141a]        # 4486d8 <fb_schema_table_missing@@Base+0x2a58>
  4272be:	call   41d870 <__flatcc_error_report@@Base>
  4272c3:	mov    WORD PTR [rbx+0x10],0x1
  4272c9:	or     eax,0xffffffff
  4272cc:	pop    rbx
  4272cd:	ret    
  4272ce:	mov    rsi,QWORD PTR [rsi+0x8]
  4272d2:	xor    r9d,r9d
  4272d5:	xor    r8d,r8d
  4272d8:	xor    ecx,ecx
  4272da:	lea    rdx,[rip+0x213c7]        # 4486a8 <fb_schema_table_missing@@Base+0x2a28>
  4272e1:	call   41d870 <__flatcc_error_report@@Base>
  4272e6:	mov    WORD PTR [rbx+0x10],0x1
  4272ec:	or     eax,0xffffffff
  4272ef:	pop    rbx
  4272f0:	ret    
  4272f1:	nop    DWORD PTR [rax+0x0]
  4272f8:	mov    rdx,QWORD PTR [rbx]
  4272fb:	test   rdx,rdx
  4272fe:	js     42744f <__flatcc_fb_coerce_scalar_type@@Base+0x71f>
  427304:	vxorps xmm0,xmm0,xmm0
  427308:	vcvtsi2ss xmm0,xmm0,rdx
  42730d:	vcomiss xmm0,DWORD PTR [rip+0x21783]        # 448a98 <fb_schema_table_missing@@Base+0x2e18>
  427315:	jae    427425 <__flatcc_fb_coerce_scalar_type@@Base+0x6f5>
  42731b:	vcvttss2si rax,xmm0
  427320:	cmp    rdx,rax
  427323:	je     42719a <__flatcc_fb_coerce_scalar_type@@Base+0x46a>
  427329:	mov    rsi,QWORD PTR [rsi+0x8]
  42732d:	xor    r9d,r9d
  427330:	xor    r8d,r8d
  427333:	xor    ecx,ecx
  427335:	lea    rdx,[rip+0x214e4]        # 448820 <fb_schema_table_missing@@Base+0x2ba0>
  42733c:	call   41d870 <__flatcc_error_report@@Base>
  427341:	mov    WORD PTR [rbx+0x10],0x1
  427347:	or     eax,0xffffffff
  42734a:	pop    rbx
  42734b:	ret    
  42734c:	nop    DWORD PTR [rax+0x0]
  427350:	mov    rdx,QWORD PTR [rbx]
  427353:	test   rdx,rdx
  427356:	js     427470 <__flatcc_fb_coerce_scalar_type@@Base+0x740>
  42735c:	vxorpd xmm0,xmm0,xmm0
  427360:	vcvtsi2sd xmm0,xmm0,rdx
  427365:	vmovsd xmm1,QWORD PTR [rip+0x21723]        # 448a90 <fb_schema_table_missing@@Base+0x2e10>
  42736d:	vcomisd xmm0,xmm1
  427371:	jae    42743c <__flatcc_fb_coerce_scalar_type@@Base+0x70c>
  427377:	vcvttsd2si rax,xmm0
  42737c:	cmp    rdx,rax
  42737f:	je     42719e <__flatcc_fb_coerce_scalar_type@@Base+0x46e>
  427385:	jmp    4271ce <__flatcc_fb_coerce_scalar_type@@Base+0x49e>
  42738a:	mov    rsi,QWORD PTR [rsi+0x8]
  42738e:	xor    r9d,r9d
  427391:	xor    r8d,r8d
  427394:	xor    ecx,ecx
  427396:	lea    rdx,[rip+0x212db]        # 448678 <fb_schema_table_missing@@Base+0x29f8>
  42739d:	call   41d870 <__flatcc_error_report@@Base>
  4273a2:	mov    WORD PTR [rbx+0x10],0x1
  4273a8:	or     eax,0xffffffff
  4273ab:	pop    rbx
  4273ac:	ret    
  4273ad:	nop    DWORD PTR [rax]
  4273b0:	cmp    ax,0x5
  4273b4:	jne    427418 <__flatcc_fb_coerce_scalar_type@@Base+0x6e8>
  4273b6:	mov    r8d,DWORD PTR [rdi+0xfc]
  4273bd:	test   r8d,r8d
  4273c0:	jne    4273e8 <__flatcc_fb_coerce_scalar_type@@Base+0x6b8>
  4273c2:	mov    rsi,QWORD PTR [rsi+0x8]
  4273c6:	xor    r9d,r9d
  4273c9:	xor    r8d,r8d
  4273cc:	xor    ecx,ecx
  4273ce:	lea    rdx,[rip+0x213a3]        # 448778 <fb_schema_table_missing@@Base+0x2af8>
  4273d5:	call   41d870 <__flatcc_error_report@@Base>
  4273da:	mov    WORD PTR [rbx+0x10],0x1
  4273e0:	or     eax,0xffffffff
  4273e3:	pop    rbx
  4273e4:	ret    
  4273e5:	nop    DWORD PTR [rax]
  4273e8:	cmp    QWORD PTR [rbx],0x1
  4273ec:	jbe    426e09 <__flatcc_fb_coerce_scalar_type@@Base+0xd9>
  4273f2:	mov    rsi,QWORD PTR [rsi+0x8]
  4273f6:	xor    r9d,r9d
  4273f9:	xor    r8d,r8d
  4273fc:	xor    ecx,ecx
  4273fe:	lea    rdx,[rip+0x21333]        # 448738 <fb_schema_table_missing@@Base+0x2ab8>
  427405:	call   41d870 <__flatcc_error_report@@Base>
  42740a:	mov    WORD PTR [rbx+0x10],0x1
  427410:	or     eax,0xffffffff
  427413:	pop    rbx
  427414:	ret    
  427415:	nop    DWORD PTR [rax]
  427418:	cmp    ax,0x6
  42741c:	jne    4273c2 <__flatcc_fb_coerce_scalar_type@@Base+0x692>
  42741e:	xor    eax,eax
  427420:	jmp    426e0b <__flatcc_fb_coerce_scalar_type@@Base+0xdb>
  427425:	vsubss xmm1,xmm0,DWORD PTR [rip+0x2166b]        # 448a98 <fb_schema_table_missing@@Base+0x2e18>
  42742d:	vcvttss2si rax,xmm1
  427432:	btc    rax,0x3f
  427437:	jmp    427320 <__flatcc_fb_coerce_scalar_type@@Base+0x5f0>
  42743c:	vsubsd xmm1,xmm0,xmm1
  427440:	vcvttsd2si rax,xmm1
  427445:	btc    rax,0x3f
  42744a:	jmp    42737c <__flatcc_fb_coerce_scalar_type@@Base+0x64c>
  42744f:	mov    rax,rdx
  427452:	mov    rcx,rdx
  427455:	shr    rax,1
  427458:	and    ecx,0x1
  42745b:	or     rax,rcx
  42745e:	vxorps xmm0,xmm0,xmm0
  427462:	vcvtsi2ss xmm0,xmm0,rax
  427467:	vaddss xmm0,xmm0,xmm0
  42746b:	jmp    42730d <__flatcc_fb_coerce_scalar_type@@Base+0x5dd>
  427470:	mov    rax,rdx
  427473:	mov    rcx,rdx
  427476:	shr    rax,1
  427479:	and    ecx,0x1
  42747c:	or     rax,rcx
  42747f:	vxorpd xmm0,xmm0,xmm0
  427483:	vcvtsi2sd xmm0,xmm0,rax
  427488:	vaddsd xmm0,xmm0,xmm0
  42748c:	jmp    427365 <__flatcc_fb_coerce_scalar_type@@Base+0x635>
  427491:	mov    rsi,QWORD PTR [rsi+0x8]
  427495:	xor    r9d,r9d
  427498:	xor    r8d,r8d
  42749b:	xor    ecx,ecx
  42749d:	lea    rdx,[rip+0x211b4]        # 448658 <fb_schema_table_missing@@Base+0x29d8>
  4274a4:	call   41d870 <__flatcc_error_report@@Base>
  4274a9:	mov    WORD PTR [rbx+0x10],0x1
  4274af:	or     eax,0xffffffff
  4274b2:	pop    rbx
  4274b3:	ret    
  4274b4:	lea    rcx,[rip+0x215b5]        # 448a70 <fb_schema_table_missing@@Base+0x2df0>
  4274bb:	mov    edx,0x34
  4274c0:	lea    rsi,[rip+0x21009]        # 4484d0 <fb_schema_table_missing@@Base+0x2850>
  4274c7:	lea    rdi,[rip+0x21062]        # 448530 <fb_schema_table_missing@@Base+0x28b0>
  4274ce:	call   4052e0 <__assert_fail@plt>
  4274d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4274dd:	nop    DWORD PTR [rax]
  4274e0:	push   rbp
  4274e1:	mov    ebp,edx
  4274e3:	mov    r8d,0x1
  4274e9:	push   rbx
  4274ea:	mov    rbx,rdi
  4274ed:	mov    ecx,0x1
  4274f2:	sub    rsp,0x8
  4274f6:	mov    edx,DWORD PTR [rdi+0x28]
  4274f9:	add    rdx,rsi
  4274fc:	lea    rsi,[rdi+0x68]
  427500:	mov    rdi,QWORD PTR [rdi+0x40]
  427504:	call   QWORD PTR [rbx+0x50]
  427507:	test   eax,eax
  427509:	jne    427538 <__flatcc_fb_coerce_scalar_type@@Base+0x808>
  42750b:	mov    edx,DWORD PTR [rbx+0x28]
  42750e:	mov    rcx,rdx
  427511:	add    rdx,QWORD PTR [rbx+0x68]
  427515:	mov    QWORD PTR [rbx+0x18],rdx
  427519:	mov    edx,DWORD PTR [rbx+0x70]
  42751c:	sub    edx,ecx
  42751e:	cmp    ebp,edx
  427520:	cmovb  edx,ebp
  427523:	mov    DWORD PTR [rbx+0x24],edx
  427526:	mov    rdx,QWORD PTR [rbx+0x30]
  42752a:	mov    DWORD PTR [rdx+0x4],ebp
  42752d:	add    rsp,0x8
  427531:	pop    rbx
  427532:	pop    rbp
  427533:	ret    
  427534:	nop    DWORD PTR [rax+0x0]
  427538:	mov    eax,0xffffffff
  42753d:	jmp    42752d <__flatcc_fb_coerce_scalar_type@@Base+0x7fd>
  42753f:	nop

0000000000427540 <flatcc_builder_default_alloc@@Base>:
  427540:	endbr64 
  427544:	push   r13
  427546:	push   r12
  427548:	push   rbp
  427549:	mov    rbp,rsi
  42754c:	push   rbx
  42754d:	sub    rsp,0x18
  427551:	test   rdx,rdx
  427554:	je     427618 <flatcc_builder_default_alloc@@Base+0xd8>
  42755a:	mov    r13d,ecx
  42755d:	cmp    r8d,0x4
  427561:	je     427650 <flatcc_builder_default_alloc@@Base+0x110>
  427567:	jle    4275e0 <flatcc_builder_default_alloc@@Base+0xa0>
  427569:	mov    rbx,rdx
  42756c:	cmp    r8d,0x5
  427570:	je     427598 <flatcc_builder_default_alloc@@Base+0x58>
  427572:	cmp    r8d,0x7
  427576:	mov    ebx,0x40
  42757b:	mov    eax,0x20
  427580:	cmovne rbx,rax
  427584:	cmp    rbx,rdx
  427587:	jae    427598 <flatcc_builder_default_alloc@@Base+0x58>
  427589:	nop    DWORD PTR [rax+0x0]
  427590:	add    rbx,rbx
  427593:	cmp    rdx,rbx
  427596:	ja     427590 <flatcc_builder_default_alloc@@Base+0x50>
  427598:	mov    rax,QWORD PTR [rbp+0x8]
  42759c:	cmp    rdx,rax
  42759f:	ja     4275ae <flatcc_builder_default_alloc@@Base+0x6e>
  4275a1:	shr    rax,1
  4275a4:	mov    rdx,rax
  4275a7:	xor    eax,eax
  4275a9:	cmp    rdx,rbx
  4275ac:	jae    4275d5 <flatcc_builder_default_alloc@@Base+0x95>
  4275ae:	mov    rdi,QWORD PTR [rbp+0x0]
  4275b2:	mov    rsi,rbx
  4275b5:	call   405390 <realloc@plt>
  4275ba:	mov    r12,rax
  4275bd:	test   rax,rax
  4275c0:	je     42765a <flatcc_builder_default_alloc@@Base+0x11a>
  4275c6:	test   r13d,r13d
  4275c9:	jne    4275f8 <flatcc_builder_default_alloc@@Base+0xb8>
  4275cb:	mov    QWORD PTR [rbp+0x0],r12
  4275cf:	mov    QWORD PTR [rbp+0x8],rbx
  4275d3:	xor    eax,eax
  4275d5:	add    rsp,0x18
  4275d9:	pop    rbx
  4275da:	pop    rbp
  4275db:	pop    r12
  4275dd:	pop    r13
  4275df:	ret    
  4275e0:	cmp    r8d,0x1
  4275e4:	mov    ebx,0x100
  4275e9:	mov    eax,0x20
  4275ee:	cmovne rbx,rax
  4275f2:	jmp    427584 <flatcc_builder_default_alloc@@Base+0x44>
  4275f4:	nop    DWORD PTR [rax+0x0]
  4275f8:	mov    rax,QWORD PTR [rbp+0x8]
  4275fc:	cmp    rax,rbx
  4275ff:	jae    4275cb <flatcc_builder_default_alloc@@Base+0x8b>
  427601:	mov    rdx,rbx
  427604:	sub    rdx,rax
  427607:	lea    rdi,[r12+rax*1]
  42760b:	xor    esi,esi
  42760d:	call   4052f0 <memset@plt>
  427612:	jmp    4275cb <flatcc_builder_default_alloc@@Base+0x8b>
  427614:	nop    DWORD PTR [rax+0x0]
  427618:	mov    rdi,QWORD PTR [rsi]
  42761b:	xor    eax,eax
  42761d:	test   rdi,rdi
  427620:	je     4275d5 <flatcc_builder_default_alloc@@Base+0x95>
  427622:	mov    DWORD PTR [rsp+0xc],eax
  427626:	call   405230 <free@plt>
  42762b:	mov    QWORD PTR [rbp+0x0],0x0
  427633:	mov    QWORD PTR [rbp+0x8],0x0
  42763b:	mov    eax,DWORD PTR [rsp+0xc]
  42763f:	add    rsp,0x18
  427643:	pop    rbx
  427644:	pop    rbp
  427645:	pop    r12
  427647:	pop    r13
  427649:	ret    
  42764a:	nop    WORD PTR [rax+rax*1+0x0]
  427650:	mov    ebx,0x120
  427655:	jmp    427584 <flatcc_builder_default_alloc@@Base+0x44>
  42765a:	mov    eax,0xffffffff
  42765f:	jmp    4275d5 <flatcc_builder_default_alloc@@Base+0x95>
  427664:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42766f:	nop
  427670:	push   rax
  427671:	pop    rax
  427672:	lea    rcx,[rip+0x21ed7]        # 449550 <fb_schema_table_missing@@Base+0x38d0>
  427679:	mov    edx,0x134
  42767e:	lea    rsi,[rip+0x2141b]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  427685:	lea    rdi,[rip+0xf48d]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  42768c:	sub    rsp,0x8
  427690:	call   4052e0 <__assert_fail@plt>
  427695:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4276a0:	push   rax
  4276a1:	pop    rax
  4276a2:	lea    rcx,[rip+0x21e37]        # 4494e0 <fb_schema_table_missing@@Base+0x3860>
  4276a9:	mov    edx,0x2a5
  4276ae:	lea    rsi,[rip+0x213eb]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4276b5:	lea    rdi,[rip+0xf45d]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4276bc:	sub    rsp,0x8
  4276c0:	call   4052e0 <__assert_fail@plt>
  4276c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4276d0:	push   rbx
  4276d1:	mov    r9,rdi
  4276d4:	sub    rsp,0xa0
  4276db:	mov    rbx,QWORD PTR fs:0x28
  4276e4:	mov    QWORD PTR [rsp+0x98],rbx
  4276ec:	xor    ebx,ebx
  4276ee:	test   dx,dx
  4276f1:	je     427750 <flatcc_builder_default_alloc@@Base+0x210>
  4276f3:	mov    eax,edx
  4276f5:	movzx  edx,dx
  4276f8:	movzx  edi,WORD PTR [rsi]
  4276fb:	cmp    di,0x3
  4276ff:	ja     42770e <flatcc_builder_default_alloc@@Base+0x1ce>
  427701:	mov    edi,0x4
  427706:	mov    WORD PTR [rsi],di
  427709:	mov    edi,0x4
  42770e:	cmp    ax,di
  427711:	jbe    427716 <flatcc_builder_default_alloc@@Base+0x1d6>
  427713:	mov    WORD PTR [rsi],ax
  427716:	test   ecx,ecx
  427718:	jne    427727 <flatcc_builder_default_alloc@@Base+0x1e7>
  42771a:	mov    ebx,DWORD PTR [r9+0xf4]
  427721:	dec    edx
  427723:	and    edx,ebx
  427725:	jne    427770 <flatcc_builder_default_alloc@@Base+0x230>
  427727:	xor    eax,eax
  427729:	mov    rbx,QWORD PTR [rsp+0x98]
  427731:	xor    rbx,QWORD PTR fs:0x28
  42773a:	jne    4277dd <flatcc_builder_default_alloc@@Base+0x29d>
  427740:	add    rsp,0xa0
  427747:	pop    rbx
  427748:	ret    
  427749:	nop    DWORD PTR [rax+0x0]
  427750:	movzx  eax,WORD PTR [rdi+0xec]
  427757:	movzx  edx,ax
  42775a:	test   ax,ax
  42775d:	jne    4276f8 <flatcc_builder_default_alloc@@Base+0x1b8>
  42775f:	mov    edx,0x1
  427764:	mov    eax,0x1
  427769:	jmp    4276f8 <flatcc_builder_default_alloc@@Base+0x1b8>
  42776b:	nop    DWORD PTR [rax+rax*1+0x0]
  427770:	mov    rax,0x449580
  427777:	movsxd r8,edx
  42777a:	add    edx,ebx
  42777c:	mov    QWORD PTR [rsp],r8
  427780:	mov    QWORD PTR [rsp+0x10],rax
  427785:	mov    QWORD PTR [rsp+0x18],r8
  42778a:	mov    DWORD PTR [rsp+0x8],0x1
  427792:	mov    DWORD PTR [r9+0xf4],edx
  427799:	cmp    ebx,edx
  42779b:	jg     4277e7 <flatcc_builder_default_alloc@@Base+0x2a7>
  42779d:	mov    rdi,QWORD PTR [r9+0x38]
  4277a1:	lea    rsi,[rsp+0x10]
  4277a6:	mov    ecx,ebx
  4277a8:	mov    edx,0x1
  4277ad:	call   QWORD PTR [r9+0x48]
  4277b1:	test   eax,eax
  4277b3:	jne    4277e2 <flatcc_builder_default_alloc@@Base+0x2a2>
  4277b5:	cmp    ebx,0xffffffff
  4277b8:	jne    427727 <flatcc_builder_default_alloc@@Base+0x1e7>
  4277be:	lea    rcx,[rip+0x21d2b]        # 4494f0 <fb_schema_table_missing@@Base+0x3870>
  4277c5:	mov    edx,0x2be
  4277ca:	lea    rsi,[rip+0x212cf]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4277d1:	lea    rdi,[rip+0xf341]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4277d8:	call   4052e0 <__assert_fail@plt>
  4277dd:	call   4052c0 <__stack_chk_fail@plt>
  4277e2:	call   4276a0 <flatcc_builder_default_alloc@@Base+0x160>
  4277e7:	lea    rcx,[rip+0x21cf2]        # 4494e0 <fb_schema_table_missing@@Base+0x3860>
  4277ee:	mov    edx,0x2a1
  4277f3:	lea    rsi,[rip+0x212a6]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4277fa:	lea    rdi,[rip+0xf318]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  427801:	call   4052e0 <__assert_fail@plt>
  427806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427810:	push   rax
  427811:	pop    rax
  427812:	lea    rcx,[rip+0x21cb7]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  427819:	mov    edx,0x28b
  42781e:	lea    rsi,[rip+0x2127b]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  427825:	lea    rdi,[rip+0xf2ed]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  42782c:	sub    rsp,0x8
  427830:	call   4052e0 <__assert_fail@plt>
  427835:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427840:	push   rax
  427841:	pop    rax
  427842:	lea    rcx,[rip+0x21be7]        # 449430 <fb_schema_table_missing@@Base+0x37b0>
  427849:	mov    edx,0x37c
  42784e:	lea    rsi,[rip+0x2124b]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  427855:	lea    rdi,[rip+0x215b4]        # 448e10 <fb_schema_table_missing@@Base+0x3190>
  42785c:	sub    rsp,0x8
  427860:	call   4052e0 <__assert_fail@plt>
  427865:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427870:	push   r12
  427872:	mov    r12d,esi
  427875:	push   rbp
  427876:	push   rbx
  427877:	mov    rbx,rdi
  42787a:	movsxd rax,DWORD PTR [rdi+0x104]
  427881:	lea    edx,[rax+0x1]
  427884:	mov    DWORD PTR [rdi+0x104],edx
  42788a:	cmp    edx,DWORD PTR [rdi+0x108]
  427890:	jle    427960 <flatcc_builder_default_alloc@@Base+0x420>
  427896:	mov    ecx,DWORD PTR [rdi+0x120]
  42789c:	cmp    edx,ecx
  42789e:	jle    4278a8 <flatcc_builder_default_alloc@@Base+0x368>
  4278a0:	test   ecx,ecx
  4278a2:	jg     427978 <flatcc_builder_default_alloc@@Base+0x438>
  4278a8:	lea    rcx,[rax+rax*8]
  4278ac:	lea    rbp,[rcx*4+0x0]
  4278b4:	lea    rdx,[rbp+0x24]
  4278b8:	cmp    rdx,QWORD PTR [rbx+0xa0]
  4278bf:	jbe    4278df <flatcc_builder_default_alloc@@Base+0x39f>
  4278c1:	mov    rdi,QWORD PTR [rbx+0x40]
  4278c5:	xor    ecx,ecx
  4278c7:	lea    rsi,[rbx+0x98]
  4278ce:	mov    r8d,0x4
  4278d4:	call   QWORD PTR [rbx+0x50]
  4278d7:	test   eax,eax
  4278d9:	jne    42797f <flatcc_builder_default_alloc@@Base+0x43f>
  4278df:	mov    rcx,rbp
  4278e2:	add    rcx,QWORD PTR [rbx+0x98]
  4278e9:	mov    QWORD PTR [rbx+0x30],rcx
  4278ed:	je     427978 <flatcc_builder_default_alloc@@Base+0x438>
  4278f3:	movabs rdx,0xe38e38e38e38e38f
  4278fd:	mov    rax,rdx
  427900:	mul    QWORD PTR [rbx+0xa0]
  427907:	mov    eax,DWORD PTR [rbx+0x120]
  42790d:	shr    rdx,0x5
  427911:	mov    DWORD PTR [rbx+0x108],edx
  427917:	cmp    eax,edx
  427919:	jge    427920 <flatcc_builder_default_alloc@@Base+0x3e0>
  42791b:	test   eax,eax
  42791d:	jg     427970 <flatcc_builder_default_alloc@@Base+0x430>
  42791f:	nop
  427920:	movzx  eax,WORD PTR [rbx+0xea]
  427927:	mov    edx,DWORD PTR [rbx+0x20]
  42792a:	mov    WORD PTR [rcx+0xc],ax
  42792e:	mov    eax,DWORD PTR [rbx+0x28]
  427931:	mov    DWORD PTR [rcx+0x8],edx
  427934:	mov    WORD PTR [rbx+0xea],r12w
  42793c:	mov    DWORD PTR [rcx],eax
  42793e:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  427945:	lea    eax,[rdx+rax*1+0x7]
  427949:	mov    DWORD PTR [rbx+0x20],0x0
  427950:	and    eax,0xfffffff8
  427953:	mov    DWORD PTR [rbx+0x28],eax
  427956:	xor    eax,eax
  427958:	pop    rbx
  427959:	pop    rbp
  42795a:	pop    r12
  42795c:	ret    
  42795d:	nop    DWORD PTR [rax]
  427960:	mov    rax,QWORD PTR [rdi+0x30]
  427964:	lea    rcx,[rax+0x24]
  427968:	mov    QWORD PTR [rdi+0x30],rcx
  42796c:	jmp    427920 <flatcc_builder_default_alloc@@Base+0x3e0>
  42796e:	xchg   ax,ax
  427970:	mov    DWORD PTR [rbx+0x108],eax
  427976:	jmp    427920 <flatcc_builder_default_alloc@@Base+0x3e0>
  427978:	mov    eax,0xffffffff
  42797d:	jmp    427958 <flatcc_builder_default_alloc@@Base+0x418>
  42797f:	call   427670 <flatcc_builder_default_alloc@@Base+0x130>
  427984:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42798f:	nop
  427990:	push   rbp
  427991:	push   rbx
  427992:	sub    rsp,0xb8
  427999:	mov    rax,QWORD PTR fs:0x28
  4279a2:	mov    QWORD PTR [rsp+0xa8],rax
  4279aa:	xor    eax,eax
  4279ac:	cmp    edx,0x3fffffff
  4279b2:	ja     427b48 <flatcc_builder_default_alloc@@Base+0x608>
  4279b8:	cmp    WORD PTR [rdi+0xe8],0x3
  4279c0:	mov    rbx,rdi
  4279c3:	ja     4279d1 <flatcc_builder_default_alloc@@Base+0x491>
  4279c5:	mov    eax,0x4
  4279ca:	mov    WORD PTR [rdi+0xe8],ax
  4279d1:	mov    edi,DWORD PTR [rbx+0xf0]
  4279d7:	mov    r9d,edx
  4279da:	mov    eax,edi
  4279dc:	lea    r8,[rsp+0xc]
  4279e1:	and    eax,0x3
  4279e4:	shl    r9d,0x2
  4279e8:	mov    QWORD PTR [rsp+0x20],r8
  4279ed:	mov    DWORD PTR [rsp+0xc],edx
  4279f1:	mov    QWORD PTR [rsp+0x10],0x4
  4279fa:	mov    QWORD PTR [rsp+0x28],0x4
  427a03:	mov    DWORD PTR [rsp+0x18],0x1
  427a0b:	mov    r8d,0x4
  427a11:	je     427a31 <flatcc_builder_default_alloc@@Base+0x4f1>
  427a13:	mov    r9d,r9d
  427a16:	lea    r8,[r9+0x4]
  427a1a:	mov    QWORD PTR [rsp+0x10],r8
  427a1f:	mov    QWORD PTR [rsp+0x30],rsi
  427a24:	mov    QWORD PTR [rsp+0x38],r9
  427a29:	mov    DWORD PTR [rsp+0x18],0x2
  427a31:	test   eax,eax
  427a33:	jne    427b10 <flatcc_builder_default_alloc@@Base+0x5d0>
  427a39:	mov    r10d,r8d
  427a3c:	test   edx,edx
  427a3e:	je     427ab6 <flatcc_builder_default_alloc@@Base+0x576>
  427a40:	sub    r10d,edi
  427a43:	lea    r9d,[rdx-0x1]
  427a47:	xor    eax,eax
  427a49:	sub    r10d,0x4
  427a4d:	jmp    427a78 <flatcc_builder_default_alloc@@Base+0x538>
  427a4f:	nop
  427a50:	mov    edi,eax
  427a52:	neg    edi
  427a54:	lea    edi,[r10+rdi*4]
  427a58:	add    edx,edi
  427a5a:	mov    DWORD PTR [rsi+rax*4],edx
  427a5d:	test   rcx,rcx
  427a60:	je     427a6c <flatcc_builder_default_alloc@@Base+0x52c>
  427a62:	cmp    BYTE PTR [rcx+rax*1],0x0
  427a66:	je     427b6b <flatcc_builder_default_alloc@@Base+0x62b>
  427a6c:	lea    rdx,[rax+0x1]
  427a70:	cmp    rax,r9
  427a73:	je     427ab0 <flatcc_builder_default_alloc@@Base+0x570>
  427a75:	mov    rax,rdx
  427a78:	mov    edx,DWORD PTR [rsi+rax*4]
  427a7b:	test   edx,edx
  427a7d:	jne    427a50 <flatcc_builder_default_alloc@@Base+0x510>
  427a7f:	test   rcx,rcx
  427a82:	je     427b4c <flatcc_builder_default_alloc@@Base+0x60c>
  427a88:	cmp    BYTE PTR [rcx+rax*1],0x0
  427a8c:	je     427a6c <flatcc_builder_default_alloc@@Base+0x52c>
  427a8e:	lea    rcx,[rip+0x216bb]        # 449150 <fb_schema_table_missing@@Base+0x34d0>
  427a95:	mov    edx,0x5b5
  427a9a:	lea    rsi,[rip+0x20fff]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  427aa1:	lea    rdi,[rip+0x21391]        # 448e39 <fb_schema_table_missing@@Base+0x31b9>
  427aa8:	call   4052e0 <__assert_fail@plt>
  427aad:	nop    DWORD PTR [rax]
  427ab0:	mov    edi,DWORD PTR [rbx+0xf0]
  427ab6:	mov    ebp,edi
  427ab8:	sub    ebp,r8d
  427abb:	cmp    ebp,edi
  427abd:	jge    427b8a <flatcc_builder_default_alloc@@Base+0x64a>
  427ac3:	mov    rdi,QWORD PTR [rbx+0x38]
  427ac7:	mov    edx,DWORD PTR [rsp+0x18]
  427acb:	lea    rsi,[rsp+0x20]
  427ad0:	mov    ecx,ebp
  427ad2:	call   QWORD PTR [rbx+0x48]
  427ad5:	test   eax,eax
  427ad7:	jne    427bae <flatcc_builder_default_alloc@@Base+0x66e>
  427add:	mov    DWORD PTR [rbx+0xf0],ebp
  427ae3:	mov    rbx,QWORD PTR [rsp+0xa8]
  427aeb:	xor    rbx,QWORD PTR fs:0x28
  427af4:	mov    eax,ebp
  427af6:	jne    427ba9 <flatcc_builder_default_alloc@@Base+0x669>
  427afc:	add    rsp,0xb8
  427b03:	pop    rbx
  427b04:	pop    rbp
  427b05:	ret    
  427b06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b10:	movsxd r10,DWORD PTR [rsp+0x18]
  427b15:	mov    r11,0x449580
  427b1c:	mov    r9,r10
  427b1f:	add    r8,rax
  427b22:	shl    r10,0x4
  427b26:	inc    r9d
  427b29:	mov    QWORD PTR [rsp+0x10],r8
  427b2e:	mov    QWORD PTR [rsp+r10*1+0x20],r11
  427b33:	mov    QWORD PTR [rsp+r10*1+0x28],rax
  427b38:	mov    DWORD PTR [rsp+0x18],r9d
  427b3d:	jmp    427a39 <flatcc_builder_default_alloc@@Base+0x4f9>
  427b42:	nop    WORD PTR [rax+rax*1+0x0]
  427b48:	xor    ebp,ebp
  427b4a:	jmp    427ae3 <flatcc_builder_default_alloc@@Base+0x5a3>
  427b4c:	lea    rcx,[rip+0x215fd]        # 449150 <fb_schema_table_missing@@Base+0x34d0>
  427b53:	mov    edx,0x5b7
  427b58:	lea    rsi,[rip+0x20f41]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  427b5f:	lea    rdi,[rip+0xefb3]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  427b66:	call   4052e0 <__assert_fail@plt>
  427b6b:	lea    rcx,[rip+0x215de]        # 449150 <fb_schema_table_missing@@Base+0x34d0>
  427b72:	mov    edx,0x5b1
  427b77:	lea    rsi,[rip+0x20f22]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  427b7e:	lea    rdi,[rip+0x212a6]        # 448e2b <fb_schema_table_missing@@Base+0x31ab>
  427b85:	call   4052e0 <__assert_fail@plt>
  427b8a:	lea    rcx,[rip+0x2193f]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  427b91:	mov    edx,0x287
  427b96:	lea    rsi,[rip+0x20f03]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  427b9d:	lea    rdi,[rip+0xef75]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  427ba4:	call   4052e0 <__assert_fail@plt>
  427ba9:	call   4052c0 <__stack_chk_fail@plt>
  427bae:	call   427810 <flatcc_builder_default_alloc@@Base+0x2d0>
  427bb3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427bbe:	xchg   ax,ax

0000000000427bc0 <flatcc_builder_flush_vtable_cache@@Base>:
  427bc0:	endbr64 
  427bc4:	cmp    QWORD PTR [rdi+0xd8],0x0
  427bcc:	jne    427bd0 <flatcc_builder_flush_vtable_cache@@Base+0x10>
  427bce:	ret    
  427bcf:	nop
  427bd0:	push   rbx
  427bd1:	mov    rbx,rdi
  427bd4:	xor    esi,esi
  427bd6:	mov    rdx,QWORD PTR [rbx+0xb0]
  427bdd:	mov    rdi,QWORD PTR [rdi+0xa8]
  427be4:	call   4052f0 <memset@plt>
  427be9:	movabs rax,0x1000000000
  427bf3:	mov    QWORD PTR [rbx+0xe0],rax
  427bfa:	pop    rbx
  427bfb:	ret    
  427bfc:	nop    DWORD PTR [rax+0x0]

0000000000427c00 <flatcc_builder_custom_init@@Base>:
  427c00:	endbr64 
  427c04:	mov    QWORD PTR [rdi],0x0
  427c0b:	mov    QWORD PTR [rdi+0x180],0x0
  427c16:	mov    r9,rdi
  427c19:	lea    rdi,[rdi+0x8]
  427c1d:	and    rdi,0xfffffffffffffff8
  427c21:	mov    r10,rcx
  427c24:	mov    rcx,r9
  427c27:	sub    rcx,rdi
  427c2a:	add    ecx,0x188
  427c30:	shr    ecx,0x3
  427c33:	xor    eax,eax
  427c35:	rep stos QWORD PTR es:[rdi],rax
  427c38:	test   rsi,rsi
  427c3b:	je     427c58 <flatcc_builder_custom_init@@Base+0x58>
  427c3d:	test   r10,r10
  427c40:	je     427c76 <flatcc_builder_custom_init@@Base+0x76>
  427c42:	mov    QWORD PTR [r9+0x40],r8
  427c46:	mov    QWORD PTR [r9+0x50],r10
  427c4a:	mov    QWORD PTR [r9+0x38],rdx
  427c4e:	mov    QWORD PTR [r9+0x48],rsi
  427c52:	xor    eax,eax
  427c54:	ret    
  427c55:	nop    DWORD PTR [rax]
  427c58:	mov    DWORD PTR [r9+0x128],0x1
  427c63:	lea    rdx,[r9+0x130]
  427c6a:	mov    rsi,0x42b6b0
  427c71:	test   r10,r10
  427c74:	jne    427c42 <flatcc_builder_custom_init@@Base+0x42>
  427c76:	mov    r10,0x427540
  427c7d:	jmp    427c42 <flatcc_builder_custom_init@@Base+0x42>
  427c7f:	nop

0000000000427c80 <flatcc_builder_init@@Base>:
  427c80:	endbr64 
  427c84:	xor    r8d,r8d
  427c87:	xor    ecx,ecx
  427c89:	xor    edx,edx
  427c8b:	xor    esi,esi
  427c8d:	jmp    427c00 <flatcc_builder_custom_init@@Base>
  427c92:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  427c9d:	nop    DWORD PTR [rax]

0000000000427ca0 <flatcc_builder_custom_reset@@Base>:
  427ca0:	endbr64 
  427ca4:	push   r14
  427ca6:	mov    r14d,esi
  427ca9:	push   r13
  427cab:	mov    r13d,edx
  427cae:	push   r12
  427cb0:	mov    r12,rdi
  427cb3:	push   rbp
  427cb4:	xor    ebp,ebp
  427cb6:	push   rbx
  427cb7:	lea    rbx,[rdi+0x58]
  427cbb:	jmp    427d05 <flatcc_builder_custom_reset@@Base+0x65>
  427cbd:	nop    DWORD PTR [rax]
  427cc0:	cmp    ebp,0x5
  427cc3:	je     427cef <flatcc_builder_custom_reset@@Base+0x4f>
  427cc5:	test   r13d,r13d
  427cc8:	je     427cef <flatcc_builder_custom_reset@@Base+0x4f>
  427cca:	mov    rdi,QWORD PTR [r12+0x40]
  427ccf:	mov    r8d,ebp
  427cd2:	mov    ecx,0x1
  427cd7:	mov    edx,0x1
  427cdc:	mov    rsi,rbx
  427cdf:	call   QWORD PTR [r12+0x50]
  427ce4:	test   eax,eax
  427ce6:	jne    427e20 <flatcc_builder_custom_reset@@Base+0x180>
  427cec:	mov    rdi,QWORD PTR [rbx]
  427cef:	mov    rdx,QWORD PTR [rbx+0x8]
  427cf3:	xor    esi,esi
  427cf5:	call   4052f0 <memset@plt>
  427cfa:	inc    ebp
  427cfc:	add    rbx,0x10
  427d00:	cmp    ebp,0x8
  427d03:	je     427d38 <flatcc_builder_custom_reset@@Base+0x98>
  427d05:	mov    rdi,QWORD PTR [rbx]
  427d08:	test   rdi,rdi
  427d0b:	jne    427cc0 <flatcc_builder_custom_reset@@Base+0x20>
  427d0d:	cmp    QWORD PTR [rbx+0x8],0x0
  427d12:	je     427cfa <flatcc_builder_custom_reset@@Base+0x5a>
  427d14:	lea    rcx,[rip+0x21845]        # 449560 <fb_schema_table_missing@@Base+0x38e0>
  427d1b:	mov    edx,0x1b2
  427d20:	lea    rsi,[rip+0x20d79]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  427d27:	lea    rdi,[rip+0x21119]        # 448e47 <fb_schema_table_missing@@Base+0x31c7>
  427d2e:	call   4052e0 <__assert_fail@plt>
  427d33:	nop    DWORD PTR [rax+rax*1+0x0]
  427d38:	mov    edx,DWORD PTR [r12+0xe4]
  427d40:	mov    DWORD PTR [r12+0xe0],0x0
  427d4c:	test   edx,edx
  427d4e:	je     427d5c <flatcc_builder_custom_reset@@Base+0xbc>
  427d50:	mov    DWORD PTR [r12+0xe4],0x10
  427d5c:	xor    eax,eax
  427d5e:	mov    WORD PTR [r12+0xe8],ax
  427d67:	mov    rax,QWORD PTR [r12+0x68]
  427d6c:	mov    QWORD PTR [r12+0xf0],0x0
  427d78:	mov    QWORD PTR [r12+0x18],rax
  427d7d:	mov    rax,QWORD PTR [r12+0x88]
  427d85:	mov    QWORD PTR [r12+0x20],0x0
  427d8e:	mov    QWORD PTR [r12],rax
  427d92:	mov    rax,QWORD PTR [r12+0x58]
  427d97:	mov    QWORD PTR [r12+0xfc],0x0
  427da3:	mov    QWORD PTR [r12+0x104],0x0
  427daf:	mov    QWORD PTR [r12+0x8],rax
  427db4:	mov    QWORD PTR [r12+0x30],0x0
  427dbd:	test   r14d,r14d
  427dc0:	jne    427de0 <flatcc_builder_custom_reset@@Base+0x140>
  427dc2:	mov    eax,DWORD PTR [r12+0x128]
  427dca:	test   eax,eax
  427dcc:	jne    427e04 <flatcc_builder_custom_reset@@Base+0x164>
  427dce:	pop    rbx
  427dcf:	pop    rbp
  427dd0:	pop    r12
  427dd2:	pop    r13
  427dd4:	pop    r14
  427dd6:	ret    
  427dd7:	nop    WORD PTR [rax+rax*1+0x0]
  427de0:	mov    eax,DWORD PTR [r12+0x128]
  427de8:	mov    QWORD PTR [r12+0x118],0x0
  427df4:	mov    QWORD PTR [r12+0x120],0x0
  427e00:	test   eax,eax
  427e02:	je     427dce <flatcc_builder_custom_reset@@Base+0x12e>
  427e04:	lea    rdi,[r12+0x130]
  427e0c:	call   42b520 <flatcc_emitter_reset@@Base>
  427e11:	pop    rbx
  427e12:	pop    rbp
  427e13:	pop    r12
  427e15:	pop    r13
  427e17:	xor    eax,eax
  427e19:	pop    r14
  427e1b:	ret    
  427e1c:	nop    DWORD PTR [rax+0x0]
  427e20:	pop    rbx
  427e21:	pop    rbp
  427e22:	pop    r12
  427e24:	pop    r13
  427e26:	mov    eax,0xffffffff
  427e2b:	pop    r14
  427e2d:	ret    
  427e2e:	xchg   ax,ax

0000000000427e30 <flatcc_builder_reset@@Base>:
  427e30:	endbr64 
  427e34:	xor    edx,edx
  427e36:	xor    esi,esi
  427e38:	jmp    427ca0 <flatcc_builder_custom_reset@@Base>
  427e3d:	nop    DWORD PTR [rax]

0000000000427e40 <flatcc_builder_clear@@Base>:
  427e40:	endbr64 
  427e44:	push   r12
  427e46:	lea    r12,[rdi+0x58]
  427e4a:	push   rbp
  427e4b:	xor    ebp,ebp
  427e4d:	push   rbx
  427e4e:	mov    rbx,rdi
  427e51:	nop    DWORD PTR [rax+0x0]
  427e58:	mov    rdi,QWORD PTR [rbx+0x40]
  427e5c:	mov    r8d,ebp
  427e5f:	mov    rsi,r12
  427e62:	xor    ecx,ecx
  427e64:	xor    edx,edx
  427e66:	inc    ebp
  427e68:	call   QWORD PTR [rbx+0x50]
  427e6b:	add    r12,0x10
  427e6f:	cmp    ebp,0x8
  427e72:	jne    427e58 <flatcc_builder_clear@@Base+0x18>
  427e74:	mov    eax,DWORD PTR [rbx+0x128]
  427e7a:	test   eax,eax
  427e7c:	jne    427eb0 <flatcc_builder_clear@@Base+0x70>
  427e7e:	lea    rdi,[rbx+0x8]
  427e82:	and    rdi,0xfffffffffffffff8
  427e86:	mov    QWORD PTR [rbx],0x0
  427e8d:	mov    QWORD PTR [rbx+0x180],0x0
  427e98:	sub    rbx,rdi
  427e9b:	lea    ecx,[rbx+0x188]
  427ea1:	shr    ecx,0x3
  427ea4:	xor    eax,eax
  427ea6:	rep stos QWORD PTR es:[rdi],rax
  427ea9:	pop    rbx
  427eaa:	pop    rbp
  427eab:	pop    r12
  427ead:	ret    
  427eae:	xchg   ax,ax
  427eb0:	lea    rdi,[rbx+0x130]
  427eb7:	call   42b610 <flatcc_emitter_clear@@Base>
  427ebc:	jmp    427e7e <flatcc_builder_clear@@Base+0x3e>
  427ebe:	xchg   ax,ax

0000000000427ec0 <flatcc_builder_enter_user_frame_ptr@@Base>:
  427ec0:	endbr64 
  427ec4:	push   r12
  427ec6:	push   rbp
  427ec7:	lea    rbp,[rsi+0x7]
  427ecb:	and    rbp,0xfffffffffffffff8
  427ecf:	push   rbx
  427ed0:	add    rbp,0x8
  427ed4:	mov    rbx,rdi
  427ed7:	mov    r12,QWORD PTR [rdi+0x180]
  427ede:	lea    rdx,[r12+rbp*1]
  427ee2:	cmp    rdx,QWORD PTR [rdi+0xd0]
  427ee9:	jbe    427f05 <flatcc_builder_enter_user_frame_ptr@@Base+0x45>
  427eeb:	lea    rsi,[rdi+0xc8]
  427ef2:	mov    rdi,QWORD PTR [rdi+0x40]
  427ef6:	xor    ecx,ecx
  427ef8:	mov    r8d,0x7
  427efe:	call   QWORD PTR [rbx+0x50]
  427f01:	test   eax,eax
  427f03:	jne    427f57 <flatcc_builder_enter_user_frame_ptr@@Base+0x97>
  427f05:	add    r12,QWORD PTR [rbx+0xc8]
  427f0c:	je     427f50 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
  427f0e:	mov    rdx,rbp
  427f11:	mov    rdi,r12
  427f14:	xor    esi,esi
  427f16:	call   4052f0 <memset@plt>
  427f1b:	mov    rdx,QWORD PTR [rbx+0x178]
  427f22:	lea    rax,[r12+0x8]
  427f27:	mov    QWORD PTR [r12],rdx
  427f2b:	mov    rdx,QWORD PTR [rbx+0x180]
  427f32:	add    rbp,rdx
  427f35:	lea    rcx,[rdx+0x8]
  427f39:	mov    QWORD PTR [rbx+0x180],rbp
  427f40:	mov    QWORD PTR [rbx+0x178],rcx
  427f47:	pop    rbx
  427f48:	pop    rbp
  427f49:	pop    r12
  427f4b:	ret    
  427f4c:	nop    DWORD PTR [rax+0x0]
  427f50:	pop    rbx
  427f51:	pop    rbp
  427f52:	xor    eax,eax
  427f54:	pop    r12
  427f56:	ret    
  427f57:	call   427670 <flatcc_builder_default_alloc@@Base+0x130>
  427f5c:	nop    DWORD PTR [rax+0x0]

0000000000427f60 <flatcc_builder_enter_user_frame@@Base>:
  427f60:	endbr64 
  427f64:	push   r12
  427f66:	push   rbp
  427f67:	mov    rbp,rdi
  427f6a:	push   rbx
  427f6b:	lea    rbx,[rsi+0x7]
  427f6f:	and    rbx,0xfffffffffffffff8
  427f73:	mov    r12,QWORD PTR [rdi+0x180]
  427f7a:	add    rbx,0x8
  427f7e:	lea    rdx,[r12+rbx*1]
  427f82:	cmp    rdx,QWORD PTR [rdi+0xd0]
  427f89:	jbe    427fa5 <flatcc_builder_enter_user_frame@@Base+0x45>
  427f8b:	lea    rsi,[rdi+0xc8]
  427f92:	mov    rdi,QWORD PTR [rdi+0x40]
  427f96:	xor    ecx,ecx
  427f98:	mov    r8d,0x7
  427f9e:	call   QWORD PTR [rbp+0x50]
  427fa1:	test   eax,eax
  427fa3:	jne    427fea <flatcc_builder_enter_user_frame@@Base+0x8a>
  427fa5:	add    r12,QWORD PTR [rbp+0xc8]
  427fac:	je     427fe2 <flatcc_builder_enter_user_frame@@Base+0x82>
  427fae:	mov    rdx,rbx
  427fb1:	mov    rdi,r12
  427fb4:	xor    esi,esi
  427fb6:	call   4052f0 <memset@plt>
  427fbb:	mov    rax,QWORD PTR [rbp+0x178]
  427fc2:	mov    QWORD PTR [r12],rax
  427fc6:	mov    rax,QWORD PTR [rbp+0x180]
  427fcd:	lea    r12,[rax+0x8]
  427fd1:	add    rbx,rax
  427fd4:	mov    QWORD PTR [rbp+0x178],r12
  427fdb:	mov    QWORD PTR [rbp+0x180],rbx
  427fe2:	pop    rbx
  427fe3:	pop    rbp
  427fe4:	mov    rax,r12
  427fe7:	pop    r12
  427fe9:	ret    
  427fea:	call   427670 <flatcc_builder_default_alloc@@Base+0x130>
  427fef:	nop

0000000000427ff0 <flatcc_builder_exit_user_frame@@Base>:
  427ff0:	endbr64 
  427ff4:	mov    rax,QWORD PTR [rdi+0x178]
  427ffb:	test   rax,rax
  427ffe:	je     428020 <flatcc_builder_exit_user_frame@@Base+0x30>
  428000:	mov    edx,eax
  428002:	sub    rax,0x8
  428006:	mov    QWORD PTR [rdi+0x180],rax
  42800d:	add    rdx,QWORD PTR [rdi+0xc8]
  428014:	mov    rax,QWORD PTR [rdx-0x8]
  428018:	mov    QWORD PTR [rdi+0x178],rax
  42801f:	ret    
  428020:	push   rax
  428021:	lea    rcx,[rip+0x21508]        # 449530 <fb_schema_table_missing@@Base+0x38b0>
  428028:	mov    edx,0x21e
  42802d:	lea    rsi,[rip+0x20a6c]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428034:	lea    rdi,[rip+0x20e1e]        # 448e59 <fb_schema_table_missing@@Base+0x31d9>
  42803b:	call   4052e0 <__assert_fail@plt>

0000000000428040 <flatcc_builder_exit_user_frame_at@@Base>:
  428040:	endbr64 
  428044:	cmp    QWORD PTR [rdi+0x178],rsi
  42804b:	jb     428059 <flatcc_builder_exit_user_frame_at@@Base+0x19>
  42804d:	mov    QWORD PTR [rdi+0x178],rsi
  428054:	jmp    427ff0 <flatcc_builder_exit_user_frame@@Base>
  428059:	push   rax
  42805a:	lea    rcx,[rip+0x2149f]        # 449500 <fb_schema_table_missing@@Base+0x3880>
  428061:	mov    edx,0x227
  428066:	lea    rsi,[rip+0x20a33]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42806d:	lea    rdi,[rip+0x20a8c]        # 448b00 <fb_schema_table_missing@@Base+0x2e80>
  428074:	call   4052e0 <__assert_fail@plt>
  428079:	nop    DWORD PTR [rax+0x0]

0000000000428080 <flatcc_builder_get_current_user_frame@@Base>:
  428080:	endbr64 
  428084:	mov    rax,QWORD PTR [rdi+0x178]
  42808b:	ret    
  42808c:	nop    DWORD PTR [rax+0x0]

0000000000428090 <flatcc_builder_get_user_frame_ptr@@Base>:
  428090:	endbr64 
  428094:	mov    eax,esi
  428096:	add    rax,QWORD PTR [rdi+0xc8]
  42809d:	ret    
  42809e:	xchg   ax,ax

00000000004280a0 <flatcc_builder_embed_buffer@@Base>:
  4280a0:	endbr64 
  4280a4:	push   r13
  4280a6:	mov    r13d,r9d
  4280a9:	push   r12
  4280ab:	mov    r12,rcx
  4280ae:	push   rbp
  4280af:	mov    rbp,rdx
  4280b2:	movzx  edx,si
  4280b5:	push   rbx
  4280b6:	mov    rbx,rdi
  4280b9:	sub    rsp,0xc8
  4280c0:	mov    WORD PTR [rsp+0xc],r8w
  4280c6:	mov    r8d,DWORD PTR [rdi+0x100]
  4280cd:	mov    rax,QWORD PTR fs:0x28
  4280d6:	mov    QWORD PTR [rsp+0xb8],rax
  4280de:	xor    eax,eax
  4280e0:	test   r8d,r8d
  4280e3:	setne  cl
  4280e6:	lea    rax,[rsp+0xc]
  4280eb:	movzx  ecx,cl
  4280ee:	mov    rsi,rax
  4280f1:	call   4276d0 <flatcc_builder_default_alloc@@Base+0x190>
  4280f6:	test   eax,eax
  4280f8:	jne    428230 <flatcc_builder_embed_buffer@@Base+0x190>
  4280fe:	mov    edx,DWORD PTR [rbx+0xf0]
  428104:	xor    esi,esi
  428106:	and    r13d,0x2
  42810a:	setne  sil
  42810e:	movzx  ecx,WORD PTR [rsp+0xc]
  428113:	mov    eax,edx
  428115:	shl    esi,0x2
  428118:	sub    eax,r12d
  42811b:	dec    ecx
  42811d:	sub    eax,esi
  42811f:	and    eax,ecx
  428121:	lea    ecx,[rax+r12*1]
  428125:	mov    DWORD PTR [rsp+0x1c],ecx
  428129:	mov    ecx,DWORD PTR [rbx+0x100]
  42812f:	mov    QWORD PTR [rsp+0x20],0x0
  428138:	mov    DWORD PTR [rsp+0x28],0x0
  428140:	xor    r8d,r8d
  428143:	test   ecx,ecx
  428145:	je     428171 <flatcc_builder_embed_buffer@@Base+0xd1>
  428147:	lea    rcx,[rsp+0x1c]
  42814c:	mov    QWORD PTR [rsp+0x20],0x4
  428155:	mov    QWORD PTR [rsp+0x30],rcx
  42815a:	mov    QWORD PTR [rsp+0x38],0x4
  428163:	mov    DWORD PTR [rsp+0x28],0x1
  42816b:	mov    r8d,0x4
  428171:	test   r12,r12
  428174:	je     42819a <flatcc_builder_embed_buffer@@Base+0xfa>
  428176:	movsxd rsi,DWORD PTR [rsp+0x28]
  42817b:	add    r8,r12
  42817e:	mov    rcx,rsi
  428181:	inc    ecx
  428183:	shl    rsi,0x4
  428187:	mov    QWORD PTR [rsp+0x20],r8
  42818c:	mov    QWORD PTR [rsp+rsi*1+0x30],rbp
  428191:	mov    QWORD PTR [rsp+rsi*1+0x38],r12
  428196:	mov    DWORD PTR [rsp+0x28],ecx
  42819a:	test   eax,eax
  42819c:	jne    428200 <flatcc_builder_embed_buffer@@Base+0x160>
  42819e:	mov    ebp,edx
  4281a0:	sub    ebp,r8d
  4281a3:	cmp    edx,ebp
  4281a5:	jle    428234 <flatcc_builder_embed_buffer@@Base+0x194>
  4281ab:	movabs rax,0x10000000f
  4281b5:	cmp    r8,rax
  4281b8:	ja     428234 <flatcc_builder_embed_buffer@@Base+0x194>
  4281ba:	mov    rdi,QWORD PTR [rbx+0x38]
  4281be:	mov    edx,DWORD PTR [rsp+0x28]
  4281c2:	lea    rsi,[rsp+0x30]
  4281c7:	mov    ecx,ebp
  4281c9:	call   QWORD PTR [rbx+0x48]
  4281cc:	test   eax,eax
  4281ce:	jne    428258 <flatcc_builder_embed_buffer@@Base+0x1b8>
  4281d4:	mov    DWORD PTR [rbx+0xf0],ebp
  4281da:	mov    rdi,QWORD PTR [rsp+0xb8]
  4281e2:	xor    rdi,QWORD PTR fs:0x28
  4281eb:	mov    eax,ebp
  4281ed:	jne    428253 <flatcc_builder_embed_buffer@@Base+0x1b3>
  4281ef:	add    rsp,0xc8
  4281f6:	pop    rbx
  4281f7:	pop    rbp
  4281f8:	pop    r12
  4281fa:	pop    r13
  4281fc:	ret    
  4281fd:	nop    DWORD PTR [rax]
  428200:	movsxd rsi,DWORD PTR [rsp+0x28]
  428205:	mov    rdi,0x449580
  42820c:	mov    rcx,rsi
  42820f:	add    r8,rax
  428212:	shl    rsi,0x4
  428216:	inc    ecx
  428218:	mov    QWORD PTR [rsp+0x20],r8
  42821d:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  428222:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  428227:	mov    DWORD PTR [rsp+0x28],ecx
  42822b:	jmp    42819e <flatcc_builder_embed_buffer@@Base+0xfe>
  428230:	xor    ebp,ebp
  428232:	jmp    4281da <flatcc_builder_embed_buffer@@Base+0x13a>
  428234:	lea    rcx,[rip+0x21295]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  42823b:	mov    edx,0x287
  428240:	lea    rsi,[rip+0x20859]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428247:	lea    rdi,[rip+0xe8cb]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  42824e:	call   4052e0 <__assert_fail@plt>
  428253:	call   4052c0 <__stack_chk_fail@plt>
  428258:	call   427810 <flatcc_builder_default_alloc@@Base+0x2d0>
  42825d:	nop    DWORD PTR [rax]

0000000000428260 <flatcc_builder_create_buffer@@Base>:
  428260:	endbr64 
  428264:	push   r14
  428266:	movzx  edx,dx
  428269:	mov    r14,rsi
  42826c:	push   r13
  42826e:	mov    r13d,r9d
  428271:	push   r12
  428273:	mov    r12d,r9d
  428276:	and    r12d,0x1
  42827a:	push   rbp
  42827b:	mov    rbp,rdi
  42827e:	push   rbx
  42827f:	mov    ebx,ecx
  428281:	mov    ecx,r12d
  428284:	sub    rsp,0xc0
  42828b:	mov    WORD PTR [rsp+0xc],r8w
  428291:	lea    rsi,[rsp+0xc]
  428296:	mov    rax,QWORD PTR fs:0x28
  42829f:	mov    QWORD PTR [rsp+0xb8],rax
  4282a7:	xor    eax,eax
  4282a9:	mov    DWORD PTR [rsp+0x1c],0x0
  4282b1:	call   4276d0 <flatcc_builder_default_alloc@@Base+0x190>
  4282b6:	test   eax,eax
  4282b8:	jne    428458 <flatcc_builder_create_buffer@@Base+0x1f8>
  4282be:	movzx  esi,WORD PTR [rsp+0xc]
  4282c3:	cmp    si,WORD PTR [rbp+0xe8]
  4282ca:	jbe    4282d3 <flatcc_builder_create_buffer@@Base+0x73>
  4282cc:	mov    WORD PTR [rbp+0xe8],si
  4282d3:	mov    edx,DWORD PTR [rsp+0x1c]
  4282d7:	test   r14,r14
  4282da:	je     4282e3 <flatcc_builder_create_buffer@@Base+0x83>
  4282dc:	mov    edx,DWORD PTR [r14]
  4282df:	mov    DWORD PTR [rsp+0x1c],edx
  4282e3:	test   edx,edx
  4282e5:	mov    eax,0x4
  4282ea:	mov    ecx,DWORD PTR [rbp+0xf0]
  4282f0:	cmovne rdx,rax
  4282f4:	xor    edi,edi
  4282f6:	test   r13b,0x2
  4282fa:	setne  dil
  4282fe:	lea    eax,[rcx-0x4]
  428301:	shl    edi,0x2
  428304:	sub    eax,edx
  428306:	sub    eax,edi
  428308:	dec    esi
  42830a:	and    eax,esi
  42830c:	and    r13d,0x3
  428310:	jne    428428 <flatcc_builder_create_buffer@@Base+0x1c8>
  428316:	xor    r9d,r9d
  428319:	mov    esi,0x1
  42831e:	mov    r8d,0x4
  428324:	movsxd rdi,r9d
  428327:	shl    rdi,0x4
  42832b:	lea    r10,[rsp+0x14]
  428330:	mov    QWORD PTR [rsp+0x20],r8
  428335:	mov    QWORD PTR [rsp+rdi*1+0x30],r10
  42833a:	mov    QWORD PTR [rsp+rdi*1+0x38],0x4
  428343:	mov    DWORD PTR [rsp+0x28],esi
  428347:	test   edx,edx
  428349:	je     42836f <flatcc_builder_create_buffer@@Base+0x10f>
  42834b:	shl    rsi,0x4
  42834f:	add    r8,rdx
  428352:	lea    rdi,[rsp+0x1c]
  428357:	add    r9d,0x2
  42835b:	mov    QWORD PTR [rsp+0x20],r8
  428360:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  428365:	mov    QWORD PTR [rsp+rsi*1+0x38],rdx
  42836a:	mov    DWORD PTR [rsp+0x28],r9d
  42836f:	test   eax,eax
  428371:	je     42839e <flatcc_builder_create_buffer@@Base+0x13e>
  428373:	movsxd rsi,DWORD PTR [rsp+0x28]
  428378:	mov    rdi,0x449580
  42837f:	mov    rdx,rsi
  428382:	add    r8,rax
  428385:	shl    rsi,0x4
  428389:	inc    edx
  42838b:	mov    QWORD PTR [rsp+0x20],r8
  428390:	mov    QWORD PTR [rsp+rsi*1+0x30],rdi
  428395:	mov    QWORD PTR [rsp+rsi*1+0x38],rax
  42839a:	mov    DWORD PTR [rsp+0x28],edx
  42839e:	mov    eax,ecx
  4283a0:	sub    eax,r8d
  4283a3:	lea    edx,[rax+0x4]
  4283a6:	test   r13d,r13d
  4283a9:	cmovne eax,edx
  4283ac:	test   r12d,r12d
  4283af:	je     428460 <flatcc_builder_create_buffer@@Base+0x200>
  4283b5:	mov    edx,DWORD PTR [rbp+0xf8]
  4283bb:	sub    edx,eax
  4283bd:	sub    ebx,eax
  4283bf:	mov    DWORD PTR [rsp+0x14],ebx
  4283c3:	mov    ebx,ecx
  4283c5:	sub    ebx,r8d
  4283c8:	mov    DWORD PTR [rsp+0x18],edx
  4283cc:	cmp    ecx,ebx
  4283ce:	jle    42846d <flatcc_builder_create_buffer@@Base+0x20d>
  4283d4:	mov    rdi,QWORD PTR [rbp+0x38]
  4283d8:	mov    edx,DWORD PTR [rsp+0x28]
  4283dc:	lea    rsi,[rsp+0x30]
  4283e1:	mov    ecx,ebx
  4283e3:	call   QWORD PTR [rbp+0x48]
  4283e6:	test   eax,eax
  4283e8:	jne    428491 <flatcc_builder_create_buffer@@Base+0x231>
  4283ee:	mov    DWORD PTR [rbp+0xf0],ebx
  4283f4:	test   ebx,ebx
  4283f6:	je     428496 <flatcc_builder_create_buffer@@Base+0x236>
  4283fc:	mov    rcx,QWORD PTR [rsp+0xb8]
  428404:	xor    rcx,QWORD PTR fs:0x28
  42840d:	mov    eax,ebx
  42840f:	jne    42848c <flatcc_builder_create_buffer@@Base+0x22c>
  428411:	add    rsp,0xc0
  428418:	pop    rbx
  428419:	pop    rbp
  42841a:	pop    r12
  42841c:	pop    r13
  42841e:	pop    r14
  428420:	ret    
  428421:	nop    DWORD PTR [rax+0x0]
  428428:	lea    rsi,[rsp+0x18]
  42842d:	mov    QWORD PTR [rsp+0x30],rsi
  428432:	mov    QWORD PTR [rsp+0x38],0x4
  42843b:	mov    esi,0x2
  428440:	mov    r9d,0x1
  428446:	mov    r8d,0x8
  42844c:	jmp    428324 <flatcc_builder_create_buffer@@Base+0xc4>
  428451:	nop    DWORD PTR [rax+0x0]
  428458:	xor    ebx,ebx
  42845a:	jmp    4283fc <flatcc_builder_create_buffer@@Base+0x19c>
  42845c:	nop    DWORD PTR [rax+0x0]
  428460:	mov    edx,DWORD PTR [rbp+0xf4]
  428466:	sub    edx,eax
  428468:	jmp    4283bd <flatcc_builder_create_buffer@@Base+0x15d>
  42846d:	lea    rcx,[rip+0x2105c]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  428474:	mov    edx,0x287
  428479:	lea    rsi,[rip+0x20620]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428480:	lea    rdi,[rip+0xe692]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  428487:	call   4052e0 <__assert_fail@plt>
  42848c:	call   4052c0 <__stack_chk_fail@plt>
  428491:	call   427810 <flatcc_builder_default_alloc@@Base+0x2d0>
  428496:	lea    rcx,[rip+0x21013]        # 4494b0 <fb_schema_table_missing@@Base+0x3830>
  42849d:	mov    edx,0x304
  4284a2:	lea    rsi,[rip+0x205f7]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4284a9:	lea    rdi,[rip+0xe669]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4284b0:	call   4052e0 <__assert_fail@plt>
  4284b5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004284c0 <flatcc_builder_create_struct@@Base>:
  4284c0:	endbr64 
  4284c4:	push   rbp
  4284c5:	push   rbx
  4284c6:	sub    rsp,0xa8
  4284cd:	mov    rax,QWORD PTR fs:0x28
  4284d6:	mov    QWORD PTR [rsp+0x98],rax
  4284de:	xor    eax,eax
  4284e0:	test   cx,cx
  4284e3:	je     428603 <flatcc_builder_create_struct@@Base+0x143>
  4284e9:	mov    r8,rdx
  4284ec:	mov    rbx,rdi
  4284ef:	movzx  edx,cx
  4284f2:	cmp    cx,WORD PTR [rdi+0xe8]
  4284f9:	jbe    428502 <flatcc_builder_create_struct@@Base+0x42>
  4284fb:	mov    WORD PTR [rdi+0xe8],cx
  428502:	mov    ecx,DWORD PTR [rbx+0xf0]
  428508:	dec    edx
  42850a:	mov    eax,ecx
  42850c:	sub    eax,r8d
  42850f:	and    eax,edx
  428511:	mov    edx,eax
  428513:	mov    QWORD PTR [rsp],0x0
  42851b:	mov    DWORD PTR [rsp+0x8],0x0
  428523:	test   r8,r8
  428526:	jne    4285b8 <flatcc_builder_create_struct@@Base+0xf8>
  42852c:	test   eax,eax
  42852e:	je     4285e4 <flatcc_builder_create_struct@@Base+0x124>
  428534:	mov    r8,rdx
  428537:	mov    esi,0x1
  42853c:	xor    eax,eax
  42853e:	mov    rdi,0x449580
  428545:	shl    rax,0x4
  428549:	mov    QWORD PTR [rsp],r8
  42854d:	mov    QWORD PTR [rsp+rax*1+0x10],rdi
  428552:	mov    QWORD PTR [rsp+rax*1+0x18],rdx
  428557:	mov    DWORD PTR [rsp+0x8],esi
  42855b:	mov    ebp,ecx
  42855d:	movabs rax,0x10000000f
  428567:	sub    ebp,r8d
  42856a:	cmp    r8,rax
  42856d:	ja     4285e4 <flatcc_builder_create_struct@@Base+0x124>
  42856f:	cmp    ecx,ebp
  428571:	jle    4285e4 <flatcc_builder_create_struct@@Base+0x124>
  428573:	mov    rdi,QWORD PTR [rbx+0x38]
  428577:	mov    edx,DWORD PTR [rsp+0x8]
  42857b:	lea    rsi,[rsp+0x10]
  428580:	mov    ecx,ebp
  428582:	call   QWORD PTR [rbx+0x48]
  428585:	test   eax,eax
  428587:	jne    428622 <flatcc_builder_create_struct@@Base+0x162>
  42858d:	mov    DWORD PTR [rbx+0xf0],ebp
  428593:	mov    eax,ebp
  428595:	mov    rdi,QWORD PTR [rsp+0x98]
  42859d:	xor    rdi,QWORD PTR fs:0x28
  4285a6:	jne    428627 <flatcc_builder_create_struct@@Base+0x167>
  4285a8:	add    rsp,0xa8
  4285af:	pop    rbx
  4285b0:	pop    rbp
  4285b1:	ret    
  4285b2:	nop    WORD PTR [rax+rax*1+0x0]
  4285b8:	mov    QWORD PTR [rsp],r8
  4285bc:	mov    QWORD PTR [rsp+0x10],rsi
  4285c1:	mov    QWORD PTR [rsp+0x18],r8
  4285c6:	mov    DWORD PTR [rsp+0x8],0x1
  4285ce:	test   eax,eax
  4285d0:	je     42855b <flatcc_builder_create_struct@@Base+0x9b>
  4285d2:	add    r8,rdx
  4285d5:	mov    esi,0x2
  4285da:	mov    eax,0x1
  4285df:	jmp    42853e <flatcc_builder_create_struct@@Base+0x7e>
  4285e4:	lea    rcx,[rip+0x20ee5]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  4285eb:	mov    edx,0x287
  4285f0:	lea    rsi,[rip+0x204a9]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4285f7:	lea    rdi,[rip+0xe51b]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4285fe:	call   4052e0 <__assert_fail@plt>
  428603:	lea    rcx,[rip+0x20e86]        # 449490 <fb_schema_table_missing@@Base+0x3810>
  42860a:	mov    edx,0x30f
  42860f:	lea    rsi,[rip+0x2048a]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428616:	lea    rdi,[rip+0x20855]        # 448e72 <fb_schema_table_missing@@Base+0x31f2>
  42861d:	call   4052e0 <__assert_fail@plt>
  428622:	call   427810 <flatcc_builder_default_alloc@@Base+0x2d0>
  428627:	call   4052c0 <__stack_chk_fail@plt>
  42862c:	nop    DWORD PTR [rax+0x0]

0000000000428630 <flatcc_builder_start_buffer@@Base>:
  428630:	endbr64 
  428634:	push   r13
  428636:	mov    r13d,edx
  428639:	push   r12
  42863b:	mov    r12d,ecx
  42863e:	push   rbp
  42863f:	mov    rbp,rsi
  428642:	push   rbx
  428643:	mov    rbx,rdi
  428646:	sub    rsp,0x8
  42864a:	movzx  esi,WORD PTR [rdi+0xe8]
  428651:	call   427870 <flatcc_builder_default_alloc@@Base+0x330>
  428656:	test   eax,eax
  428658:	jne    428708 <flatcc_builder_start_buffer@@Base+0xd8>
  42865e:	movzx  edx,WORD PTR [rbx+0xec]
  428665:	mov    rsi,QWORD PTR [rbx+0x30]
  428669:	mov    ecx,0x1
  42866e:	mov    WORD PTR [rbx+0xe8],cx
  428675:	mov    WORD PTR [rsi+0x22],dx
  428679:	movzx  edx,WORD PTR [rbx+0x10c]
  428680:	mov    WORD PTR [rbx+0xec],r13w
  428688:	mov    WORD PTR [rsi+0x20],dx
  42868c:	mov    edx,DWORD PTR [rbx+0xf8]
  428692:	mov    WORD PTR [rbx+0x10c],r12w
  42869a:	mov    DWORD PTR [rsi+0x14],edx
  42869d:	mov    edx,DWORD PTR [rbx+0x100]
  4286a3:	mov    DWORD PTR [rsi+0x1c],edx
  4286a6:	mov    edx,DWORD PTR [rbx+0xf0]
  4286ac:	mov    DWORD PTR [rbx+0xf8],edx
  4286b2:	mov    edx,DWORD PTR [rbx+0xfc]
  4286b8:	lea    ecx,[rdx+0x1]
  4286bb:	mov    DWORD PTR [rbx+0x100],edx
  4286c1:	mov    edx,DWORD PTR [rbx+0x110]
  4286c7:	mov    DWORD PTR [rbx+0xfc],ecx
  4286cd:	mov    DWORD PTR [rsi+0x10],edx
  4286d0:	test   rbp,rbp
  4286d3:	je     4286f8 <flatcc_builder_start_buffer@@Base+0xc8>
  4286d5:	mov    edx,DWORD PTR [rbp+0x0]
  4286d8:	mov    DWORD PTR [rbx+0x110],edx
  4286de:	mov    edx,0x1
  4286e3:	mov    WORD PTR [rsi+0xe],dx
  4286e7:	add    rsp,0x8
  4286eb:	pop    rbx
  4286ec:	pop    rbp
  4286ed:	pop    r12
  4286ef:	pop    r13
  4286f1:	ret    
  4286f2:	nop    WORD PTR [rax+rax*1+0x0]
  4286f8:	mov    rbp,0x449580
  4286ff:	jmp    4286d5 <flatcc_builder_start_buffer@@Base+0xa5>
  428701:	nop    DWORD PTR [rax+0x0]
  428708:	mov    eax,0xffffffff
  42870d:	jmp    4286e7 <flatcc_builder_start_buffer@@Base+0xb7>
  42870f:	nop

0000000000428710 <flatcc_builder_end_buffer@@Base>:
  428710:	endbr64 
  428714:	push   rbp
  428715:	xor    eax,eax
  428717:	push   rbx
  428718:	sub    rsp,0x8
  42871c:	movzx  r9d,WORD PTR [rdi+0x10c]
  428724:	mov    edx,DWORD PTR [rdi+0x100]
  42872a:	and    r9d,0x2
  42872e:	test   edx,edx
  428730:	setne  al
  428733:	movzx  r9d,r9w
  428737:	or     r9d,eax
  42873a:	mov    rax,QWORD PTR [rdi+0x30]
  42873e:	cmp    WORD PTR [rax+0xe],0x1
  428743:	jne    428834 <flatcc_builder_end_buffer@@Base+0x124>
  428749:	movzx  edx,WORD PTR [rdi+0xec]
  428750:	movzx  eax,WORD PTR [rdi+0xe8]
  428757:	mov    rbx,rdi
  42875a:	mov    ecx,esi
  42875c:	mov    r8d,edx
  42875f:	cmp    dx,ax
  428762:	ja     428828 <flatcc_builder_end_buffer@@Base+0x118>
  428768:	movzx  r8d,ax
  42876c:	lea    rsi,[rbx+0x110]
  428773:	mov    rdi,rbx
  428776:	call   428260 <flatcc_builder_create_buffer@@Base>
  42877b:	mov    ebp,eax
  42877d:	test   eax,eax
  42877f:	je     42881c <flatcc_builder_end_buffer@@Base+0x10c>
  428785:	mov    rax,QWORD PTR [rbx+0x30]
  428789:	mov    rdi,QWORD PTR [rbx+0x18]
  42878d:	mov    edx,DWORD PTR [rax+0x14]
  428790:	xor    esi,esi
  428792:	mov    DWORD PTR [rbx+0xf8],edx
  428798:	mov    edx,DWORD PTR [rax+0x1c]
  42879b:	mov    DWORD PTR [rbx+0x100],edx
  4287a1:	mov    edx,DWORD PTR [rax+0x10]
  4287a4:	movzx  eax,WORD PTR [rax+0x20]
  4287a8:	mov    DWORD PTR [rbx+0x110],edx
  4287ae:	mov    WORD PTR [rbx+0x10c],ax
  4287b5:	mov    edx,DWORD PTR [rbx+0x20]
  4287b8:	call   4052f0 <memset@plt>
  4287bd:	mov    rax,QWORD PTR [rbx+0x30]
  4287c1:	mov    edi,DWORD PTR [rbx+0x70]
  4287c4:	mov    edx,DWORD PTR [rax+0x8]
  4287c7:	mov    esi,DWORD PTR [rax]
  4287c9:	mov    ecx,DWORD PTR [rax+0x4]
  4287cc:	mov    DWORD PTR [rbx+0x20],edx
  4287cf:	mov    rdx,rsi
  4287d2:	sub    edi,edx
  4287d4:	mov    DWORD PTR [rbx+0x28],esi
  4287d7:	mov    edx,edi
  4287d9:	add    rsi,QWORD PTR [rbx+0x68]
  4287dd:	cmp    ecx,edi
  4287df:	cmovb  edx,ecx
  4287e2:	mov    QWORD PTR [rbx+0x18],rsi
  4287e6:	mov    DWORD PTR [rbx+0x24],edx
  4287e9:	movzx  edx,WORD PTR [rbx+0xea]
  4287f0:	mov    DWORD PTR [rax+0x4],ecx
  4287f3:	cmp    dx,WORD PTR [rbx+0xe8]
  4287fa:	jbe    428803 <flatcc_builder_end_buffer@@Base+0xf3>
  4287fc:	mov    WORD PTR [rbx+0xe8],dx
  428803:	movzx  edx,WORD PTR [rax+0xc]
  428807:	sub    rax,0x24
  42880b:	dec    DWORD PTR [rbx+0x104]
  428811:	mov    WORD PTR [rbx+0xea],dx
  428818:	mov    QWORD PTR [rbx+0x30],rax
  42881c:	add    rsp,0x8
  428820:	pop    rbx
  428821:	mov    eax,ebp
  428823:	pop    rbp
  428824:	ret    
  428825:	nop    DWORD PTR [rax]
  428828:	mov    WORD PTR [rbx+0xe8],dx
  42882f:	jmp    42876c <flatcc_builder_end_buffer@@Base+0x5c>
  428834:	lea    rcx,[rip+0x20c35]        # 449470 <fb_schema_table_missing@@Base+0x37f0>
  42883b:	mov    edx,0x346
  428840:	lea    rsi,[rip+0x20259]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428847:	lea    rdi,[rip+0x202d2]        # 448b20 <fb_schema_table_missing@@Base+0x2ea0>
  42884e:	call   4052e0 <__assert_fail@plt>
  428853:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42885e:	xchg   ax,ax

0000000000428860 <flatcc_builder_start_struct@@Base>:
  428860:	endbr64 
  428864:	push   r12
  428866:	push   rbp
  428867:	mov    rbp,rsi
  42886a:	movzx  esi,dx
  42886d:	push   rbx
  42886e:	mov    rbx,rdi
  428871:	call   427870 <flatcc_builder_default_alloc@@Base+0x330>
  428876:	test   eax,eax
  428878:	jne    428900 <flatcc_builder_start_struct@@Base+0xa0>
  42887e:	mov    rcx,QWORD PTR [rbx+0x30]
  428882:	mov    eax,0x2
  428887:	mov    WORD PTR [rcx+0xe],ax
  42888b:	mov    eax,DWORD PTR [rbx+0x28]
  42888e:	mov    edi,DWORD PTR [rbx+0x70]
  428891:	mov    rdx,rax
  428894:	sub    edi,edx
  428896:	add    rax,QWORD PTR [rbx+0x68]
  42889a:	mov    QWORD PTR [rbx+0x18],rax
  42889e:	mov    edx,edi
  4288a0:	cmp    edi,0xfffffffc
  4288a3:	ja     4288d0 <flatcc_builder_start_struct@@Base+0x70>
  4288a5:	mov    DWORD PTR [rbx+0x24],edi
  4288a8:	mov    r12d,DWORD PTR [rbx+0x20]
  4288ac:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4288b3:	mov    rsi,r12
  4288b6:	add    esi,ebp
  4288b8:	mov    DWORD PTR [rbx+0x20],esi
  4288bb:	cmp    esi,edx
  4288bd:	jae    4288e0 <flatcc_builder_start_struct@@Base+0x80>
  4288bf:	pop    rbx
  4288c0:	pop    rbp
  4288c1:	add    rax,r12
  4288c4:	pop    r12
  4288c6:	ret    
  4288c7:	nop    WORD PTR [rax+rax*1+0x0]
  4288d0:	mov    DWORD PTR [rbx+0x24],0xfffffffc
  4288d7:	mov    edx,0xfffffffc
  4288dc:	jmp    4288a8 <flatcc_builder_start_struct@@Base+0x48>
  4288de:	xchg   ax,ax
  4288e0:	inc    esi
  4288e2:	mov    edx,0xfffffffc
  4288e7:	mov    rdi,rbx
  4288ea:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  4288ef:	test   eax,eax
  4288f1:	jne    428900 <flatcc_builder_start_struct@@Base+0xa0>
  4288f3:	mov    rax,QWORD PTR [rbx+0x18]
  4288f7:	jmp    4288bf <flatcc_builder_start_struct@@Base+0x5f>
  4288f9:	nop    DWORD PTR [rax+0x0]
  428900:	pop    rbx
  428901:	pop    rbp
  428902:	xor    eax,eax
  428904:	pop    r12
  428906:	ret    
  428907:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428910 <flatcc_builder_struct_edit@@Base>:
  428910:	endbr64 
  428914:	mov    rax,QWORD PTR [rdi+0x18]
  428918:	ret    
  428919:	nop    DWORD PTR [rax+0x0]

0000000000428920 <flatcc_builder_end_struct@@Base>:
  428920:	endbr64 
  428924:	push   rbp
  428925:	push   rbx
  428926:	sub    rsp,0x8
  42892a:	mov    rax,QWORD PTR [rdi+0x30]
  42892e:	cmp    WORD PTR [rax+0xe],0x2
  428933:	jne    4289d6 <flatcc_builder_end_struct@@Base+0xb6>
  428939:	movzx  ecx,WORD PTR [rdi+0xea]
  428940:	mov    edx,DWORD PTR [rdi+0x20]
  428943:	mov    rsi,QWORD PTR [rdi+0x18]
  428947:	mov    rbx,rdi
  42894a:	call   4284c0 <flatcc_builder_create_struct@@Base>
  42894f:	mov    ebp,eax
  428951:	test   eax,eax
  428953:	jne    428960 <flatcc_builder_end_struct@@Base+0x40>
  428955:	add    rsp,0x8
  428959:	pop    rbx
  42895a:	mov    eax,ebp
  42895c:	pop    rbp
  42895d:	ret    
  42895e:	xchg   ax,ax
  428960:	mov    edx,DWORD PTR [rbx+0x20]
  428963:	mov    rdi,QWORD PTR [rbx+0x18]
  428967:	xor    esi,esi
  428969:	call   4052f0 <memset@plt>
  42896e:	mov    rax,QWORD PTR [rbx+0x30]
  428972:	mov    edi,DWORD PTR [rbx+0x70]
  428975:	mov    edx,DWORD PTR [rax+0x8]
  428978:	mov    esi,DWORD PTR [rax]
  42897a:	mov    ecx,DWORD PTR [rax+0x4]
  42897d:	mov    DWORD PTR [rbx+0x20],edx
  428980:	mov    rdx,rsi
  428983:	sub    edi,edx
  428985:	mov    DWORD PTR [rbx+0x28],esi
  428988:	mov    edx,edi
  42898a:	add    rsi,QWORD PTR [rbx+0x68]
  42898e:	cmp    ecx,edi
  428990:	cmovb  edx,ecx
  428993:	mov    QWORD PTR [rbx+0x18],rsi
  428997:	mov    DWORD PTR [rbx+0x24],edx
  42899a:	movzx  edx,WORD PTR [rbx+0xea]
  4289a1:	mov    DWORD PTR [rax+0x4],ecx
  4289a4:	cmp    dx,WORD PTR [rbx+0xe8]
  4289ab:	jbe    4289b4 <flatcc_builder_end_struct@@Base+0x94>
  4289ad:	mov    WORD PTR [rbx+0xe8],dx
  4289b4:	movzx  edx,WORD PTR [rax+0xc]
  4289b8:	dec    DWORD PTR [rbx+0x104]
  4289be:	sub    rax,0x24
  4289c2:	mov    QWORD PTR [rbx+0x30],rax
  4289c6:	mov    WORD PTR [rbx+0xea],dx
  4289cd:	add    rsp,0x8
  4289d1:	mov    eax,ebp
  4289d3:	pop    rbx
  4289d4:	pop    rbp
  4289d5:	ret    
  4289d6:	lea    rcx,[rip+0x20a73]        # 449450 <fb_schema_table_missing@@Base+0x37d0>
  4289dd:	mov    edx,0x368
  4289e2:	lea    rsi,[rip+0x200b7]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4289e9:	lea    rdi,[rip+0x20160]        # 448b50 <fb_schema_table_missing@@Base+0x2ed0>
  4289f0:	call   4052e0 <__assert_fail@plt>
  4289f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000428a00 <flatcc_builder_extend_vector@@Base>:
  428a00:	endbr64 
  428a04:	push   rbp
  428a05:	mov    eax,esi
  428a07:	push   rbx
  428a08:	sub    rsp,0x8
  428a0c:	mov    rdx,QWORD PTR [rdi+0x30]
  428a10:	add    eax,DWORD PTR [rdx+0x14]
  428a13:	setb   cl
  428a16:	cmp    DWORD PTR [rdx+0x18],eax
  428a19:	jb     428a64 <flatcc_builder_extend_vector@@Base+0x64>
  428a1b:	movzx  ecx,cl
  428a1e:	test   ecx,ecx
  428a20:	jne    428a64 <flatcc_builder_extend_vector@@Base+0x64>
  428a22:	imul   esi,DWORD PTR [rdx+0x10]
  428a26:	mov    ebp,DWORD PTR [rdi+0x20]
  428a29:	mov    DWORD PTR [rdx+0x14],eax
  428a2c:	add    esi,ebp
  428a2e:	mov    rbx,rdi
  428a31:	mov    DWORD PTR [rdi+0x20],esi
  428a34:	cmp    esi,DWORD PTR [rdi+0x24]
  428a37:	jae    428a50 <flatcc_builder_extend_vector@@Base+0x50>
  428a39:	mov    rax,QWORD PTR [rbx+0x18]
  428a3d:	add    rax,rbp
  428a40:	add    rsp,0x8
  428a44:	pop    rbx
  428a45:	pop    rbp
  428a46:	ret    
  428a47:	nop    WORD PTR [rax+rax*1+0x0]
  428a50:	inc    esi
  428a52:	mov    edx,0xfffffffc
  428a57:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  428a5c:	test   eax,eax
  428a5e:	je     428a39 <flatcc_builder_extend_vector@@Base+0x39>
  428a60:	xor    eax,eax
  428a62:	jmp    428a40 <flatcc_builder_extend_vector@@Base+0x40>
  428a64:	call   427840 <flatcc_builder_default_alloc@@Base+0x300>
  428a69:	nop    DWORD PTR [rax+0x0]

0000000000428a70 <flatcc_builder_vector_push@@Base>:
  428a70:	endbr64 
  428a74:	push   r13
  428a76:	push   r12
  428a78:	push   rbp
  428a79:	push   rbx
  428a7a:	sub    rsp,0x8
  428a7e:	mov    rax,QWORD PTR [rdi+0x30]
  428a82:	cmp    WORD PTR [rax+0xe],0x4
  428a87:	jne    428aed <flatcc_builder_vector_push@@Base+0x7d>
  428a89:	mov    edx,DWORD PTR [rax+0x14]
  428a8c:	cmp    edx,DWORD PTR [rax+0x18]
  428a8f:	ja     428b0c <flatcc_builder_vector_push@@Base+0x9c>
  428a91:	mov    ebp,DWORD PTR [rdi+0x20]
  428a94:	mov    r12d,DWORD PTR [rax+0x10]
  428a98:	mov    rcx,rbp
  428a9b:	inc    edx
  428a9d:	add    ecx,r12d
  428aa0:	mov    DWORD PTR [rax+0x14],edx
  428aa3:	mov    rbx,rdi
  428aa6:	mov    r13,rsi
  428aa9:	mov    DWORD PTR [rdi+0x20],ecx
  428aac:	cmp    ecx,DWORD PTR [rdi+0x24]
  428aaf:	jae    428ad8 <flatcc_builder_vector_push@@Base+0x68>
  428ab1:	add    rbp,QWORD PTR [rbx+0x18]
  428ab5:	je     428ac5 <flatcc_builder_vector_push@@Base+0x55>
  428ab7:	mov    edx,r12d
  428aba:	mov    rsi,r13
  428abd:	mov    rdi,rbp
  428ac0:	call   405350 <memcpy@plt>
  428ac5:	add    rsp,0x8
  428ac9:	pop    rbx
  428aca:	mov    rax,rbp
  428acd:	pop    rbp
  428ace:	pop    r12
  428ad0:	pop    r13
  428ad2:	ret    
  428ad3:	nop    DWORD PTR [rax+rax*1+0x0]
  428ad8:	lea    esi,[rcx+0x1]
  428adb:	mov    edx,0xfffffffc
  428ae0:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  428ae5:	test   eax,eax
  428ae7:	je     428ab1 <flatcc_builder_vector_push@@Base+0x41>
  428ae9:	xor    ebp,ebp
  428aeb:	jmp    428ac5 <flatcc_builder_vector_push@@Base+0x55>
  428aed:	lea    rcx,[rip+0x2091c]        # 449410 <fb_schema_table_missing@@Base+0x3790>
  428af4:	mov    edx,0x38b
  428af9:	lea    rsi,[rip+0x1ffa0]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428b00:	lea    rdi,[rip+0x20079]        # 448b80 <fb_schema_table_missing@@Base+0x2f00>
  428b07:	call   4052e0 <__assert_fail@plt>
  428b0c:	lea    rcx,[rip+0x208fd]        # 449410 <fb_schema_table_missing@@Base+0x3790>
  428b13:	mov    edx,0x38c
  428b18:	lea    rsi,[rip+0x1ff81]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428b1f:	lea    rdi,[rip+0x2008a]        # 448bb0 <fb_schema_table_missing@@Base+0x2f30>
  428b26:	call   4052e0 <__assert_fail@plt>
  428b2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428b30 <flatcc_builder_append_vector@@Base>:
  428b30:	endbr64 
  428b34:	push   r13
  428b36:	push   r12
  428b38:	push   rbp
  428b39:	push   rbx
  428b3a:	sub    rsp,0x8
  428b3e:	mov    rax,QWORD PTR [rdi+0x30]
  428b42:	cmp    WORD PTR [rax+0xe],0x4
  428b47:	jne    428bb6 <flatcc_builder_append_vector@@Base+0x86>
  428b49:	mov    ecx,edx
  428b4b:	mov    r13,rsi
  428b4e:	xor    esi,esi
  428b50:	add    ecx,DWORD PTR [rax+0x14]
  428b53:	setb   sil
  428b57:	cmp    DWORD PTR [rax+0x18],ecx
  428b5a:	jb     428bd5 <flatcc_builder_append_vector@@Base+0xa5>
  428b5c:	test   esi,esi
  428b5e:	jne    428bd5 <flatcc_builder_append_vector@@Base+0xa5>
  428b60:	mov    ebx,DWORD PTR [rax+0x10]
  428b63:	mov    r12d,DWORD PTR [rdi+0x20]
  428b67:	imul   ebx,edx
  428b6a:	mov    rdx,r12
  428b6d:	mov    DWORD PTR [rax+0x14],ecx
  428b70:	add    edx,ebx
  428b72:	mov    rbp,rdi
  428b75:	mov    DWORD PTR [rdi+0x20],edx
  428b78:	cmp    edx,DWORD PTR [rdi+0x24]
  428b7b:	jae    428ba0 <flatcc_builder_append_vector@@Base+0x70>
  428b7d:	add    r12,QWORD PTR [rbp+0x18]
  428b81:	je     428b90 <flatcc_builder_append_vector@@Base+0x60>
  428b83:	mov    edx,ebx
  428b85:	mov    rsi,r13
  428b88:	mov    rdi,r12
  428b8b:	call   405350 <memcpy@plt>
  428b90:	add    rsp,0x8
  428b94:	pop    rbx
  428b95:	pop    rbp
  428b96:	mov    rax,r12
  428b99:	pop    r12
  428b9b:	pop    r13
  428b9d:	ret    
  428b9e:	xchg   ax,ax
  428ba0:	lea    esi,[rdx+0x1]
  428ba3:	mov    edx,0xfffffffc
  428ba8:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  428bad:	test   eax,eax
  428baf:	je     428b7d <flatcc_builder_append_vector@@Base+0x4d>
  428bb1:	xor    r12d,r12d
  428bb4:	jmp    428b90 <flatcc_builder_append_vector@@Base+0x60>
  428bb6:	lea    rcx,[rip+0x20833]        # 4493f0 <fb_schema_table_missing@@Base+0x3770>
  428bbd:	mov    edx,0x393
  428bc2:	lea    rsi,[rip+0x1fed7]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428bc9:	lea    rdi,[rip+0x1ffb0]        # 448b80 <fb_schema_table_missing@@Base+0x2f00>
  428bd0:	call   4052e0 <__assert_fail@plt>
  428bd5:	call   427840 <flatcc_builder_default_alloc@@Base+0x300>
  428bda:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428be0 <flatcc_builder_extend_offset_vector@@Base>:
  428be0:	endbr64 
  428be4:	push   rbp
  428be5:	mov    edx,esi
  428be7:	push   rbx
  428be8:	sub    rsp,0x8
  428bec:	mov    rax,QWORD PTR [rdi+0x30]
  428bf0:	add    edx,DWORD PTR [rax+0x14]
  428bf3:	jb     428c35 <flatcc_builder_extend_offset_vector@@Base+0x55>
  428bf5:	cmp    edx,0x3fffffff
  428bfb:	ja     428c35 <flatcc_builder_extend_offset_vector@@Base+0x55>
  428bfd:	mov    ebp,DWORD PTR [rdi+0x20]
  428c00:	mov    DWORD PTR [rax+0x14],edx
  428c03:	lea    eax,[rbp+rsi*4+0x0]
  428c07:	mov    rbx,rdi
  428c0a:	mov    DWORD PTR [rdi+0x20],eax
  428c0d:	cmp    eax,DWORD PTR [rdi+0x24]
  428c10:	jae    428c20 <flatcc_builder_extend_offset_vector@@Base+0x40>
  428c12:	mov    rax,QWORD PTR [rbx+0x18]
  428c16:	add    rax,rbp
  428c19:	add    rsp,0x8
  428c1d:	pop    rbx
  428c1e:	pop    rbp
  428c1f:	ret    
  428c20:	lea    esi,[rax+0x1]
  428c23:	mov    edx,0xfffffffc
  428c28:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  428c2d:	test   eax,eax
  428c2f:	je     428c12 <flatcc_builder_extend_offset_vector@@Base+0x32>
  428c31:	xor    eax,eax
  428c33:	jmp    428c19 <flatcc_builder_extend_offset_vector@@Base+0x39>
  428c35:	call   427840 <flatcc_builder_default_alloc@@Base+0x300>
  428c3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428c40 <flatcc_builder_offset_vector_push@@Base>:
  428c40:	endbr64 
  428c44:	push   r12
  428c46:	push   rbp
  428c47:	push   rbx
  428c48:	mov    rdx,QWORD PTR [rdi+0x30]
  428c4c:	cmp    WORD PTR [rdx+0xe],0x5
  428c51:	jne    428ca8 <flatcc_builder_offset_vector_push@@Base+0x68>
  428c53:	mov    eax,DWORD PTR [rdx+0x14]
  428c56:	cmp    eax,0x3fffffff
  428c5b:	je     428ca1 <flatcc_builder_offset_vector_push@@Base+0x61>
  428c5d:	mov    ebp,DWORD PTR [rdi+0x20]
  428c60:	inc    eax
  428c62:	mov    DWORD PTR [rdx+0x14],eax
  428c65:	lea    edx,[rbp+0x4]
  428c68:	mov    rbx,rdi
  428c6b:	mov    r12d,esi
  428c6e:	mov    DWORD PTR [rdi+0x20],edx
  428c71:	cmp    edx,DWORD PTR [rdi+0x24]
  428c74:	jae    428c90 <flatcc_builder_offset_vector_push@@Base+0x50>
  428c76:	mov    rax,rbp
  428c79:	add    rax,QWORD PTR [rbx+0x18]
  428c7d:	je     428c82 <flatcc_builder_offset_vector_push@@Base+0x42>
  428c7f:	mov    DWORD PTR [rax],r12d
  428c82:	pop    rbx
  428c83:	pop    rbp
  428c84:	pop    r12
  428c86:	ret    
  428c87:	nop    WORD PTR [rax+rax*1+0x0]
  428c90:	lea    esi,[rbp+0x5]
  428c93:	mov    edx,0xfffffffc
  428c98:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  428c9d:	test   eax,eax
  428c9f:	je     428c76 <flatcc_builder_offset_vector_push@@Base+0x36>
  428ca1:	pop    rbx
  428ca2:	pop    rbp
  428ca3:	xor    eax,eax
  428ca5:	pop    r12
  428ca7:	ret    
  428ca8:	lea    rcx,[rip+0x20711]        # 4493c0 <fb_schema_table_missing@@Base+0x3740>
  428caf:	mov    edx,0x3a6
  428cb4:	lea    rsi,[rip+0x1fde5]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428cbb:	lea    rdi,[rip+0x1ff2e]        # 448bf0 <fb_schema_table_missing@@Base+0x2f70>
  428cc2:	call   4052e0 <__assert_fail@plt>
  428cc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428cd0 <flatcc_builder_append_offset_vector@@Base>:
  428cd0:	endbr64 
  428cd4:	push   r13
  428cd6:	push   r12
  428cd8:	push   rbp
  428cd9:	push   rbx
  428cda:	sub    rsp,0x8
  428cde:	mov    rax,QWORD PTR [rdi+0x30]
  428ce2:	cmp    WORD PTR [rax+0xe],0x5
  428ce7:	jne    428d56 <flatcc_builder_append_offset_vector@@Base+0x86>
  428ce9:	mov    ecx,edx
  428ceb:	add    ecx,DWORD PTR [rax+0x14]
  428cee:	jb     428d75 <flatcc_builder_append_offset_vector@@Base+0xa5>
  428cf4:	cmp    ecx,0x3fffffff
  428cfa:	ja     428d75 <flatcc_builder_append_offset_vector@@Base+0xa5>
  428cfc:	mov    r12d,DWORD PTR [rdi+0x20]
  428d00:	lea    ebx,[rdx*4+0x0]
  428d07:	mov    rdx,r12
  428d0a:	add    edx,ebx
  428d0c:	mov    DWORD PTR [rax+0x14],ecx
  428d0f:	mov    rbp,rdi
  428d12:	mov    r13,rsi
  428d15:	mov    DWORD PTR [rdi+0x20],edx
  428d18:	cmp    edx,DWORD PTR [rdi+0x24]
  428d1b:	jae    428d40 <flatcc_builder_append_offset_vector@@Base+0x70>
  428d1d:	add    r12,QWORD PTR [rbp+0x18]
  428d21:	je     428d30 <flatcc_builder_append_offset_vector@@Base+0x60>
  428d23:	mov    edx,ebx
  428d25:	mov    rsi,r13
  428d28:	mov    rdi,r12
  428d2b:	call   405350 <memcpy@plt>
  428d30:	add    rsp,0x8
  428d34:	pop    rbx
  428d35:	pop    rbp
  428d36:	mov    rax,r12
  428d39:	pop    r12
  428d3b:	pop    r13
  428d3d:	ret    
  428d3e:	xchg   ax,ax
  428d40:	lea    esi,[rdx+0x1]
  428d43:	mov    edx,0xfffffffc
  428d48:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  428d4d:	test   eax,eax
  428d4f:	je     428d1d <flatcc_builder_append_offset_vector@@Base+0x4d>
  428d51:	xor    r12d,r12d
  428d54:	jmp    428d30 <flatcc_builder_append_offset_vector@@Base+0x60>
  428d56:	lea    rcx,[rip+0x20623]        # 449380 <fb_schema_table_missing@@Base+0x3700>
  428d5d:	mov    edx,0x3b4
  428d62:	lea    rsi,[rip+0x1fd37]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428d69:	lea    rdi,[rip+0x1fe80]        # 448bf0 <fb_schema_table_missing@@Base+0x2f70>
  428d70:	call   4052e0 <__assert_fail@plt>
  428d75:	call   427840 <flatcc_builder_default_alloc@@Base+0x300>
  428d7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428d80 <flatcc_builder_extend_string@@Base>:
  428d80:	endbr64 
  428d84:	push   rbp
  428d85:	push   rbx
  428d86:	sub    rsp,0x8
  428d8a:	mov    rax,QWORD PTR [rdi+0x30]
  428d8e:	cmp    WORD PTR [rax+0xe],0x6
  428d93:	jne    428dd9 <flatcc_builder_extend_string@@Base+0x59>
  428d95:	mov    edx,esi
  428d97:	add    edx,DWORD PTR [rax+0x14]
  428d9a:	jb     428dd4 <flatcc_builder_extend_string@@Base+0x54>
  428d9c:	mov    ebp,DWORD PTR [rdi+0x20]
  428d9f:	mov    DWORD PTR [rax+0x14],edx
  428da2:	add    esi,ebp
  428da4:	mov    rbx,rdi
  428da7:	mov    DWORD PTR [rdi+0x20],esi
  428daa:	cmp    esi,DWORD PTR [rdi+0x24]
  428dad:	jae    428dc0 <flatcc_builder_extend_string@@Base+0x40>
  428daf:	mov    rax,QWORD PTR [rbx+0x18]
  428db3:	add    rax,rbp
  428db6:	add    rsp,0x8
  428dba:	pop    rbx
  428dbb:	pop    rbp
  428dbc:	ret    
  428dbd:	nop    DWORD PTR [rax]
  428dc0:	inc    esi
  428dc2:	mov    edx,0xfffffffc
  428dc7:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  428dcc:	test   eax,eax
  428dce:	je     428daf <flatcc_builder_extend_string@@Base+0x2f>
  428dd0:	xor    eax,eax
  428dd2:	jmp    428db6 <flatcc_builder_extend_string@@Base+0x36>
  428dd4:	call   427840 <flatcc_builder_default_alloc@@Base+0x300>
  428dd9:	lea    rcx,[rip+0x20570]        # 449350 <fb_schema_table_missing@@Base+0x36d0>
  428de0:	mov    edx,0x3bd
  428de5:	lea    rsi,[rip+0x1fcb4]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428dec:	lea    rdi,[rip+0x1fe35]        # 448c28 <fb_schema_table_missing@@Base+0x2fa8>
  428df3:	call   4052e0 <__assert_fail@plt>
  428df8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000428e00 <flatcc_builder_append_string@@Base>:
  428e00:	endbr64 
  428e04:	push   r13
  428e06:	push   r12
  428e08:	push   rbp
  428e09:	push   rbx
  428e0a:	sub    rsp,0x8
  428e0e:	mov    rax,QWORD PTR [rdi+0x30]
  428e12:	cmp    WORD PTR [rax+0xe],0x6
  428e17:	jne    428e7b <flatcc_builder_append_string@@Base+0x7b>
  428e19:	mov    rbp,rdx
  428e1c:	add    edx,DWORD PTR [rax+0x14]
  428e1f:	jb     428e76 <flatcc_builder_append_string@@Base+0x76>
  428e21:	mov    r12d,DWORD PTR [rdi+0x20]
  428e25:	mov    DWORD PTR [rax+0x14],edx
  428e28:	mov    rdx,r12
  428e2b:	add    edx,ebp
  428e2d:	mov    rbx,rdi
  428e30:	mov    r13,rsi
  428e33:	mov    DWORD PTR [rdi+0x20],edx
  428e36:	cmp    edx,DWORD PTR [rdi+0x24]
  428e39:	jae    428e60 <flatcc_builder_append_string@@Base+0x60>
  428e3b:	add    r12,QWORD PTR [rbx+0x18]
  428e3f:	je     428e4e <flatcc_builder_append_string@@Base+0x4e>
  428e41:	mov    edx,ebp
  428e43:	mov    rsi,r13
  428e46:	mov    rdi,r12
  428e49:	call   405350 <memcpy@plt>
  428e4e:	add    rsp,0x8
  428e52:	pop    rbx
  428e53:	pop    rbp
  428e54:	mov    rax,r12
  428e57:	pop    r12
  428e59:	pop    r13
  428e5b:	ret    
  428e5c:	nop    DWORD PTR [rax+0x0]
  428e60:	lea    esi,[rdx+0x1]
  428e63:	mov    edx,0xfffffffc
  428e68:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  428e6d:	test   eax,eax
  428e6f:	je     428e3b <flatcc_builder_append_string@@Base+0x3b>
  428e71:	xor    r12d,r12d
  428e74:	jmp    428e4e <flatcc_builder_append_string@@Base+0x4e>
  428e76:	call   427840 <flatcc_builder_default_alloc@@Base+0x300>
  428e7b:	lea    rcx,[rip+0x204ae]        # 449330 <fb_schema_table_missing@@Base+0x36b0>
  428e82:	mov    edx,0x3c6
  428e87:	lea    rsi,[rip+0x1fc12]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428e8e:	lea    rdi,[rip+0x1fd93]        # 448c28 <fb_schema_table_missing@@Base+0x2fa8>
  428e95:	call   4052e0 <__assert_fail@plt>
  428e9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428ea0 <flatcc_builder_append_string_str@@Base>:
  428ea0:	endbr64 
  428ea4:	push   rbp
  428ea5:	mov    rbp,rdi
  428ea8:	mov    rdi,rsi
  428eab:	push   rbx
  428eac:	mov    rbx,rsi
  428eaf:	sub    rsp,0x8
  428eb3:	call   4052b0 <strlen@plt>
  428eb8:	add    rsp,0x8
  428ebc:	mov    rsi,rbx
  428ebf:	pop    rbx
  428ec0:	mov    rdi,rbp
  428ec3:	mov    rdx,rax
  428ec6:	pop    rbp
  428ec7:	jmp    428e00 <flatcc_builder_append_string@@Base>
  428ecc:	nop    DWORD PTR [rax+0x0]

0000000000428ed0 <flatcc_builder_append_string_strn@@Base>:
  428ed0:	endbr64 
  428ed4:	push   r12
  428ed6:	mov    r12,rdi
  428ed9:	push   rbp
  428eda:	mov    rbp,rsi
  428edd:	mov    rdi,rbp
  428ee0:	push   rbx
  428ee1:	xor    esi,esi
  428ee3:	mov    rbx,rdx
  428ee6:	call   405300 <memchr@plt>
  428eeb:	mov    rdx,rax
  428eee:	sub    rdx,rbp
  428ef1:	test   rax,rax
  428ef4:	cmovne rbx,rdx
  428ef8:	mov    rsi,rbp
  428efb:	mov    rdx,rbx
  428efe:	pop    rbx
  428eff:	pop    rbp
  428f00:	mov    rdi,r12
  428f03:	pop    r12
  428f05:	jmp    428e00 <flatcc_builder_append_string@@Base>
  428f0a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428f10 <flatcc_builder_truncate_vector@@Base>:
  428f10:	endbr64 
  428f14:	sub    rsp,0x8
  428f18:	mov    rax,QWORD PTR [rdi+0x30]
  428f1c:	cmp    WORD PTR [rax+0xe],0x4
  428f21:	jne    428f56 <flatcc_builder_truncate_vector@@Base+0x46>
  428f23:	mov    ecx,DWORD PTR [rax+0x14]
  428f26:	mov    rdx,rcx
  428f29:	cmp    rcx,rsi
  428f2c:	jb     428f75 <flatcc_builder_truncate_vector@@Base+0x65>
  428f2e:	sub    edx,esi
  428f30:	mov    DWORD PTR [rax+0x14],edx
  428f33:	imul   esi,DWORD PTR [rax+0x10]
  428f37:	mov    eax,DWORD PTR [rdi+0x20]
  428f3a:	mov    edx,esi
  428f3c:	sub    eax,esi
  428f3e:	mov    DWORD PTR [rdi+0x20],eax
  428f41:	add    rax,QWORD PTR [rdi+0x18]
  428f45:	mov    rdi,rax
  428f48:	xor    esi,esi
  428f4a:	call   4052f0 <memset@plt>
  428f4f:	xor    eax,eax
  428f51:	add    rsp,0x8
  428f55:	ret    
  428f56:	lea    rcx,[rip+0x203b3]        # 449310 <fb_schema_table_missing@@Base+0x3690>
  428f5d:	mov    edx,0x3d9
  428f62:	lea    rsi,[rip+0x1fb37]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428f69:	lea    rdi,[rip+0x1fc10]        # 448b80 <fb_schema_table_missing@@Base+0x2f00>
  428f70:	call   4052e0 <__assert_fail@plt>
  428f75:	lea    rcx,[rip+0x20394]        # 449310 <fb_schema_table_missing@@Base+0x3690>
  428f7c:	mov    edx,0x3da
  428f81:	lea    rsi,[rip+0x1fb18]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428f88:	lea    rdi,[rip+0x1fcc9]        # 448c58 <fb_schema_table_missing@@Base+0x2fd8>
  428f8f:	call   4052e0 <__assert_fail@plt>
  428f94:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  428f9f:	nop

0000000000428fa0 <flatcc_builder_truncate_offset_vector@@Base>:
  428fa0:	endbr64 
  428fa4:	sub    rsp,0x8
  428fa8:	mov    rax,QWORD PTR [rdi+0x30]
  428fac:	cmp    WORD PTR [rax+0xe],0x5
  428fb1:	jne    428fe2 <flatcc_builder_truncate_offset_vector@@Base+0x42>
  428fb3:	mov    edx,DWORD PTR [rax+0x14]
  428fb6:	cmp    edx,esi
  428fb8:	jb     429001 <flatcc_builder_truncate_offset_vector@@Base+0x61>
  428fba:	sub    edx,esi
  428fbc:	mov    DWORD PTR [rax+0x14],edx
  428fbf:	imul   esi,DWORD PTR [rax+0x10]
  428fc3:	mov    eax,DWORD PTR [rdi+0x20]
  428fc6:	mov    edx,esi
  428fc8:	sub    eax,esi
  428fca:	mov    DWORD PTR [rdi+0x20],eax
  428fcd:	add    rax,QWORD PTR [rdi+0x18]
  428fd1:	mov    rdi,rax
  428fd4:	xor    esi,esi
  428fd6:	call   4052f0 <memset@plt>
  428fdb:	xor    eax,eax
  428fdd:	add    rsp,0x8
  428fe1:	ret    
  428fe2:	lea    rcx,[rip+0x202f7]        # 4492e0 <fb_schema_table_missing@@Base+0x3660>
  428fe9:	mov    edx,0x3e2
  428fee:	lea    rsi,[rip+0x1faab]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  428ff5:	lea    rdi,[rip+0x1fbf4]        # 448bf0 <fb_schema_table_missing@@Base+0x2f70>
  428ffc:	call   4052e0 <__assert_fail@plt>
  429001:	lea    rcx,[rip+0x202d8]        # 4492e0 <fb_schema_table_missing@@Base+0x3660>
  429008:	mov    edx,0x3e3
  42900d:	lea    rsi,[rip+0x1fa8c]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429014:	lea    rdi,[rip+0x1fc65]        # 448c80 <fb_schema_table_missing@@Base+0x3000>
  42901b:	call   4052e0 <__assert_fail@plt>

0000000000429020 <flatcc_builder_truncate_string@@Base>:
  429020:	endbr64 
  429024:	sub    rsp,0x8
  429028:	mov    rdx,QWORD PTR [rdi+0x30]
  42902c:	cmp    WORD PTR [rdx+0xe],0x6
  429031:	jne    429063 <flatcc_builder_truncate_string@@Base+0x43>
  429033:	mov    ecx,DWORD PTR [rdx+0x14]
  429036:	mov    rax,rcx
  429039:	cmp    rcx,rsi
  42903c:	jb     429082 <flatcc_builder_truncate_string@@Base+0x62>
  42903e:	sub    eax,esi
  429040:	mov    DWORD PTR [rdx+0x14],eax
  429043:	mov    rdx,rsi
  429046:	mov    eax,DWORD PTR [rdi+0x20]
  429049:	sub    eax,esi
  42904b:	mov    DWORD PTR [rdi+0x20],eax
  42904e:	add    rax,QWORD PTR [rdi+0x18]
  429052:	mov    rdi,rax
  429055:	xor    esi,esi
  429057:	call   4052f0 <memset@plt>
  42905c:	xor    eax,eax
  42905e:	add    rsp,0x8
  429062:	ret    
  429063:	lea    rcx,[rip+0x20256]        # 4492c0 <fb_schema_table_missing@@Base+0x3640>
  42906a:	mov    edx,0x3eb
  42906f:	lea    rsi,[rip+0x1fa2a]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429076:	lea    rdi,[rip+0x1fbab]        # 448c28 <fb_schema_table_missing@@Base+0x2fa8>
  42907d:	call   4052e0 <__assert_fail@plt>
  429082:	lea    rcx,[rip+0x20237]        # 4492c0 <fb_schema_table_missing@@Base+0x3640>
  429089:	mov    edx,0x3ec
  42908e:	lea    rsi,[rip+0x1fa0b]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429095:	lea    rdi,[rip+0x1fc24]        # 448cc0 <fb_schema_table_missing@@Base+0x3040>
  42909c:	call   4052e0 <__assert_fail@plt>
  4290a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4290ac:	nop    DWORD PTR [rax+0x0]

00000000004290b0 <flatcc_builder_start_vector@@Base>:
  4290b0:	endbr64 
  4290b4:	push   r12
  4290b6:	cmp    dx,0x4
  4290ba:	mov    r12,rcx
  4290bd:	push   rbp
  4290be:	mov    rbp,rsi
  4290c1:	mov    esi,0x4
  4290c6:	push   rbx
  4290c7:	cmovae esi,edx
  4290ca:	mov    rbx,rdi
  4290cd:	movzx  esi,si
  4290d0:	call   427870 <flatcc_builder_default_alloc@@Base+0x330>
  4290d5:	test   eax,eax
  4290d7:	jne    429120 <flatcc_builder_start_vector@@Base+0x70>
  4290d9:	mov    rsi,QWORD PTR [rbx+0x30]
  4290dd:	mov    edx,0x4
  4290e2:	mov    WORD PTR [rsi+0xe],dx
  4290e6:	mov    edx,DWORD PTR [rbx+0x28]
  4290e9:	mov    DWORD PTR [rsi+0x10],ebp
  4290ec:	mov    rcx,rdx
  4290ef:	add    rdx,QWORD PTR [rbx+0x68]
  4290f3:	mov    DWORD PTR [rsi+0x14],0x0
  4290fa:	mov    DWORD PTR [rsi+0x18],r12d
  4290fe:	mov    QWORD PTR [rbx+0x18],rdx
  429102:	mov    edx,DWORD PTR [rbx+0x70]
  429105:	sub    edx,ecx
  429107:	mov    ecx,0xfffffffc
  42910c:	cmp    edx,ecx
  42910e:	cmova  edx,ecx
  429111:	mov    DWORD PTR [rbx+0x24],edx
  429114:	mov    DWORD PTR [rsi+0x4],ecx
  429117:	pop    rbx
  429118:	pop    rbp
  429119:	pop    r12
  42911b:	ret    
  42911c:	nop    DWORD PTR [rax+0x0]
  429120:	mov    eax,0xffffffff
  429125:	jmp    429117 <flatcc_builder_start_vector@@Base+0x67>
  429127:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429130 <flatcc_builder_start_offset_vector@@Base>:
  429130:	endbr64 
  429134:	push   rbx
  429135:	mov    esi,0x4
  42913a:	mov    rbx,rdi
  42913d:	call   427870 <flatcc_builder_default_alloc@@Base+0x330>
  429142:	test   eax,eax
  429144:	jne    429180 <flatcc_builder_start_offset_vector@@Base+0x50>
  429146:	mov    rcx,QWORD PTR [rbx+0x30]
  42914a:	xor    edx,edx
  42914c:	mov    QWORD PTR [rcx+0xe],0x40005
  429154:	mov    WORD PTR [rcx+0x16],dx
  429158:	mov    edx,DWORD PTR [rbx+0x28]
  42915b:	mov    rsi,rdx
  42915e:	add    rdx,QWORD PTR [rbx+0x68]
  429162:	mov    QWORD PTR [rbx+0x18],rdx
  429166:	mov    edx,DWORD PTR [rbx+0x70]
  429169:	sub    edx,esi
  42916b:	mov    esi,0xfffffffc
  429170:	cmp    edx,esi
  429172:	cmova  edx,esi
  429175:	mov    DWORD PTR [rbx+0x24],edx
  429178:	mov    DWORD PTR [rcx+0x4],esi
  42917b:	pop    rbx
  42917c:	ret    
  42917d:	nop    DWORD PTR [rax]
  429180:	mov    eax,0xffffffff
  429185:	pop    rbx
  429186:	ret    
  429187:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429190 <flatcc_builder_start_string@@Base>:
  429190:	endbr64 
  429194:	push   rbx
  429195:	mov    esi,0x1
  42919a:	mov    rbx,rdi
  42919d:	call   427870 <flatcc_builder_default_alloc@@Base+0x330>
  4291a2:	test   eax,eax
  4291a4:	jne    4291e0 <flatcc_builder_start_string@@Base+0x50>
  4291a6:	mov    rcx,QWORD PTR [rbx+0x30]
  4291aa:	xor    edx,edx
  4291ac:	mov    QWORD PTR [rcx+0xe],0x10006
  4291b4:	mov    WORD PTR [rcx+0x16],dx
  4291b8:	mov    edx,DWORD PTR [rbx+0x28]
  4291bb:	mov    rsi,rdx
  4291be:	add    rdx,QWORD PTR [rbx+0x68]
  4291c2:	mov    QWORD PTR [rbx+0x18],rdx
  4291c6:	mov    edx,DWORD PTR [rbx+0x70]
  4291c9:	sub    edx,esi
  4291cb:	mov    esi,0xfffffffc
  4291d0:	cmp    edx,esi
  4291d2:	cmova  edx,esi
  4291d5:	mov    DWORD PTR [rbx+0x24],edx
  4291d8:	mov    DWORD PTR [rcx+0x4],esi
  4291db:	pop    rbx
  4291dc:	ret    
  4291dd:	nop    DWORD PTR [rax]
  4291e0:	mov    eax,0xffffffff
  4291e5:	pop    rbx
  4291e6:	ret    
  4291e7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004291f0 <flatcc_builder_reserve_table@@Base>:
  4291f0:	endbr64 
  4291f4:	push   r12
  4291f6:	push   rbp
  4291f7:	push   rbx
  4291f8:	test   esi,esi
  4291fa:	js     4292af <flatcc_builder_reserve_table@@Base+0xbf>
  429200:	mov    rax,QWORD PTR [rdi+0x30]
  429204:	lea    r12d,[rsi+rsi*1+0x4]
  429209:	movzx  edx,WORD PTR [rax+0x1c]
  42920d:	mov    eax,DWORD PTR [rax+0x10]
  429210:	mov    rbx,rdi
  429213:	lea    ebp,[rax+rdx*2]
  429216:	mov    edx,r12d
  429219:	add    rdx,rbp
  42921c:	cmp    rdx,QWORD PTR [rdi+0x60]
  429220:	ja     429260 <flatcc_builder_reserve_table@@Base+0x70>
  429222:	add    rbp,QWORD PTR [rbx+0x58]
  429226:	je     4292a0 <flatcc_builder_reserve_table@@Base+0xb0>
  429228:	mov    rax,QWORD PTR [rbx+0x30]
  42922c:	add    rbp,0x4
  429230:	mov    QWORD PTR [rbx+0x8],rbp
  429234:	mov    ebp,DWORD PTR [rax+0x14]
  429237:	lea    edx,[r12-0x3]
  42923c:	add    rdx,rbp
  42923f:	cmp    rdx,QWORD PTR [rbx+0x90]
  429246:	ja     429280 <flatcc_builder_reserve_table@@Base+0x90>
  429248:	add    rbp,QWORD PTR [rbx+0x88]
  42924f:	sete   al
  429252:	mov    QWORD PTR [rbx],rbp
  429255:	movzx  eax,al
  429258:	neg    eax
  42925a:	pop    rbx
  42925b:	pop    rbp
  42925c:	pop    r12
  42925e:	ret    
  42925f:	nop
  429260:	lea    rsi,[rdi+0x58]
  429264:	mov    rdi,QWORD PTR [rdi+0x40]
  429268:	xor    r8d,r8d
  42926b:	mov    ecx,0x1
  429270:	call   QWORD PTR [rbx+0x50]
  429273:	test   eax,eax
  429275:	je     429222 <flatcc_builder_reserve_table@@Base+0x32>
  429277:	call   427670 <flatcc_builder_default_alloc@@Base+0x130>
  42927c:	nop    DWORD PTR [rax+0x0]
  429280:	mov    rdi,QWORD PTR [rbx+0x40]
  429284:	xor    ecx,ecx
  429286:	lea    rsi,[rbx+0x88]
  42928d:	mov    r8d,0x3
  429293:	call   QWORD PTR [rbx+0x50]
  429296:	test   eax,eax
  429298:	je     429248 <flatcc_builder_reserve_table@@Base+0x58>
  42929a:	jmp    429277 <flatcc_builder_reserve_table@@Base+0x87>
  42929c:	nop    DWORD PTR [rax+0x0]
  4292a0:	mov    QWORD PTR [rbx+0x8],0x0
  4292a8:	mov    eax,0xffffffff
  4292ad:	jmp    42925a <flatcc_builder_reserve_table@@Base+0x6a>
  4292af:	lea    rcx,[rip+0x1ffea]        # 4492a0 <fb_schema_table_missing@@Base+0x3620>
  4292b6:	mov    edx,0x429
  4292bb:	lea    rsi,[rip+0x1f7de]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4292c2:	lea    rdi,[rip+0x1fbca]        # 448e93 <fb_schema_table_missing@@Base+0x3213>
  4292c9:	call   4052e0 <__assert_fail@plt>
  4292ce:	xchg   ax,ax

00000000004292d0 <flatcc_builder_start_table@@Base>:
  4292d0:	endbr64 
  4292d4:	push   r13
  4292d6:	push   r12
  4292d8:	mov    r12d,esi
  4292db:	mov    esi,0x4
  4292e0:	push   rbp
  4292e1:	push   rbx
  4292e2:	mov    rbx,rdi
  4292e5:	sub    rsp,0x8
  4292e9:	call   427870 <flatcc_builder_default_alloc@@Base+0x330>
  4292ee:	test   eax,eax
  4292f0:	jne    429408 <flatcc_builder_start_table@@Base+0x138>
  4292f6:	mov    rsi,QWORD PTR [rbx]
  4292f9:	mov    rdx,QWORD PTR [rbx+0x30]
  4292fd:	sub    rsi,QWORD PTR [rbx+0x88]
  429304:	mov    rcx,QWORD PTR [rbx+0x8]
  429308:	mov    ebp,eax
  42930a:	mov    rax,QWORD PTR [rbx+0x58]
  42930e:	mov    DWORD PTR [rdx+0x14],esi
  429311:	mov    esi,DWORD PTR [rbx+0x14]
  429314:	sub    rcx,rax
  429317:	mov    DWORD PTR [rdx+0x18],esi
  42931a:	movzx  esi,WORD PTR [rbx+0x10]
  42931e:	xor    edi,edi
  429320:	mov    r8d,0x3
  429326:	mov    DWORD PTR [rdx+0x10],ecx
  429329:	mov    WORD PTR [rdx+0x1c],si
  42932d:	lea    r13d,[rcx+rsi*2]
  429331:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  429338:	mov    WORD PTR [rbx+0x10],di
  42933c:	mov    WORD PTR [rdx+0xe],r8w
  429341:	lea    edx,[r12+r12*1+0x4]
  429346:	add    rdx,r13
  429349:	cmp    rdx,QWORD PTR [rbx+0x60]
  42934d:	jbe    42936e <flatcc_builder_start_table@@Base+0x9e>
  42934f:	mov    rdi,QWORD PTR [rbx+0x40]
  429353:	xor    r8d,r8d
  429356:	lea    rsi,[rbx+0x58]
  42935a:	mov    ecx,0x1
  42935f:	call   QWORD PTR [rbx+0x50]
  429362:	test   eax,eax
  429364:	jne    4293fa <flatcc_builder_start_table@@Base+0x12a>
  42936a:	mov    rax,QWORD PTR [rbx+0x58]
  42936e:	add    rax,r13
  429371:	je     429400 <flatcc_builder_start_table@@Base+0x130>
  429377:	add    rax,0x4
  42937b:	mov    QWORD PTR [rbx+0x8],rax
  42937f:	mov    rax,QWORD PTR [rbx+0x30]
  429383:	lea    edx,[r12+r12*1+0x1]
  429388:	mov    r13d,DWORD PTR [rax+0x14]
  42938c:	add    rdx,r13
  42938f:	cmp    rdx,QWORD PTR [rbx+0x90]
  429396:	ja     4293e0 <flatcc_builder_start_table@@Base+0x110>
  429398:	add    r13,QWORD PTR [rbx+0x88]
  42939f:	mov    QWORD PTR [rbx],r13
  4293a2:	je     429408 <flatcc_builder_start_table@@Base+0x138>
  4293a4:	mov    eax,DWORD PTR [rbx+0x28]
  4293a7:	mov    rdx,rax
  4293aa:	add    rax,QWORD PTR [rbx+0x68]
  4293ae:	mov    QWORD PTR [rbx+0x18],rax
  4293b2:	mov    eax,DWORD PTR [rbx+0x70]
  4293b5:	sub    eax,edx
  4293b7:	cmp    eax,0xfffc
  4293bc:	mov    edx,0xfffc
  4293c1:	cmova  eax,edx
  4293c4:	mov    DWORD PTR [rbx+0x24],eax
  4293c7:	mov    rax,QWORD PTR [rbx+0x30]
  4293cb:	mov    DWORD PTR [rax+0x4],0xfffc
  4293d2:	add    rsp,0x8
  4293d6:	pop    rbx
  4293d7:	mov    eax,ebp
  4293d9:	pop    rbp
  4293da:	pop    r12
  4293dc:	pop    r13
  4293de:	ret    
  4293df:	nop
  4293e0:	mov    rdi,QWORD PTR [rbx+0x40]
  4293e4:	xor    ecx,ecx
  4293e6:	lea    rsi,[rbx+0x88]
  4293ed:	mov    r8d,0x3
  4293f3:	call   QWORD PTR [rbx+0x50]
  4293f6:	test   eax,eax
  4293f8:	je     429398 <flatcc_builder_start_table@@Base+0xc8>
  4293fa:	call   427670 <flatcc_builder_default_alloc@@Base+0x130>
  4293ff:	nop
  429400:	mov    QWORD PTR [rbx+0x8],0x0
  429408:	mov    ebp,0xffffffff
  42940d:	jmp    4293d2 <flatcc_builder_start_table@@Base+0x102>
  42940f:	nop

0000000000429410 <flatcc_builder_create_vtable@@Base>:
  429410:	endbr64 
  429414:	push   rbp
  429415:	mov    rbp,rdi
  429418:	push   rbx
  429419:	sub    rsp,0xa8
  429420:	mov    rax,QWORD PTR fs:0x28
  429429:	mov    QWORD PTR [rsp+0x98],rax
  429431:	xor    eax,eax
  429433:	mov    QWORD PTR [rsp],0x0
  42943b:	mov    DWORD PTR [rsp+0x8],0x0
  429443:	mov    eax,DWORD PTR [rdi+0x100]
  429449:	test   dx,dx
  42944c:	je     4294d0 <flatcc_builder_create_vtable@@Base+0xc0>
  429452:	movzx  r8d,dx
  429456:	mov    QWORD PTR [rsp],r8
  42945a:	mov    QWORD PTR [rsp+0x10],rsi
  42945f:	mov    QWORD PTR [rsp+0x18],r8
  429464:	mov    DWORD PTR [rsp+0x8],0x1
  42946c:	movzx  edx,dx
  42946f:	test   eax,eax
  429471:	je     429500 <flatcc_builder_create_vtable@@Base+0xf0>
  429477:	mov    eax,DWORD PTR [rbp+0xf0]
  42947d:	mov    ebx,eax
  42947f:	sub    ebx,edx
  429481:	cmp    eax,ebx
  429483:	jle    4294de <flatcc_builder_create_vtable@@Base+0xce>
  429485:	mov    rdi,QWORD PTR [rbp+0x38]
  429489:	mov    edx,DWORD PTR [rsp+0x8]
  42948d:	lea    rsi,[rsp+0x10]
  429492:	mov    ecx,ebx
  429494:	call   QWORD PTR [rbp+0x48]
  429497:	test   eax,eax
  429499:	jne    429550 <flatcc_builder_create_vtable@@Base+0x140>
  42949f:	cmp    ebx,0x1
  4294a2:	mov    DWORD PTR [rbp+0xf0],ebx
  4294a8:	sbb    ebx,0xffffffff
  4294ab:	mov    rcx,QWORD PTR [rsp+0x98]
  4294b3:	xor    rcx,QWORD PTR fs:0x28
  4294bc:	mov    eax,ebx
  4294be:	jne    42954b <flatcc_builder_create_vtable@@Base+0x13b>
  4294c4:	add    rsp,0xa8
  4294cb:	pop    rbx
  4294cc:	pop    rbp
  4294cd:	ret    
  4294ce:	xchg   ax,ax
  4294d0:	test   eax,eax
  4294d2:	jne    4294de <flatcc_builder_create_vtable@@Base+0xce>
  4294d4:	mov    eax,DWORD PTR [rdi+0x124]
  4294da:	test   eax,eax
  4294dc:	je     429540 <flatcc_builder_create_vtable@@Base+0x130>
  4294de:	lea    rcx,[rip+0x1ffeb]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  4294e5:	mov    edx,0x287
  4294ea:	lea    rsi,[rip+0x1f5af]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4294f1:	lea    rdi,[rip+0xd621]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  4294f8:	call   4052e0 <__assert_fail@plt>
  4294fd:	nop    DWORD PTR [rax]
  429500:	mov    ecx,DWORD PTR [rdi+0x124]
  429506:	test   ecx,ecx
  429508:	jne    429477 <flatcc_builder_create_vtable@@Base+0x67>
  42950e:	mov    ebx,DWORD PTR [rdi+0xf4]
  429514:	add    edx,ebx
  429516:	mov    DWORD PTR [rdi+0xf4],edx
  42951c:	mov    rdi,QWORD PTR [rbp+0x38]
  429520:	mov    edx,DWORD PTR [rsp+0x8]
  429524:	lea    rsi,[rsp+0x10]
  429529:	mov    ecx,ebx
  42952b:	call   QWORD PTR [rbp+0x48]
  42952e:	test   eax,eax
  429530:	jne    429555 <flatcc_builder_create_vtable@@Base+0x145>
  429532:	inc    ebx
  429534:	jmp    4294ab <flatcc_builder_create_vtable@@Base+0x9b>
  429539:	nop    DWORD PTR [rax+0x0]
  429540:	mov    ebx,DWORD PTR [rbp+0xf4]
  429546:	xor    r8d,r8d
  429549:	jmp    42951c <flatcc_builder_create_vtable@@Base+0x10c>
  42954b:	call   4052c0 <__stack_chk_fail@plt>
  429550:	call   427810 <flatcc_builder_default_alloc@@Base+0x2d0>
  429555:	call   4276a0 <flatcc_builder_default_alloc@@Base+0x160>
  42955a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429560 <flatcc_builder_create_cached_vtable@@Base>:
  429560:	endbr64 
  429564:	push   r15
  429566:	mov    r15,rdi
  429569:	push   r14
  42956b:	push   r13
  42956d:	push   r12
  42956f:	movzx  r12d,dx
  429573:	push   rbp
  429574:	mov    ebp,ecx
  429576:	push   rbx
  429577:	sub    rsp,0x38
  42957b:	mov    rbx,QWORD PTR [rdi+0xd8]
  429582:	mov    QWORD PTR [rsp+0x18],rsi
  429587:	mov    DWORD PTR [rsp+0x2c],edx
  42958b:	test   rbx,rbx
  42958e:	je     429728 <flatcc_builder_create_cached_vtable@@Base+0x1c8>
  429594:	mov    eax,0x20
  429599:	sub    eax,ebx
  42959b:	shrx   ebp,ebp,eax
  4295a0:	mov    rax,QWORD PTR [r15+0xa8]
  4295a7:	lea    r14,[rax+rbp*4]
  4295ab:	test   r14,r14
  4295ae:	je     429710 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  4295b4:	mov    ebp,DWORD PTR [r14]
  4295b7:	test   ebp,ebp
  4295b9:	je     429800 <flatcc_builder_create_cached_vtable@@Base+0x2a0>
  4295bf:	mov    QWORD PTR [rsp+0x20],0x0
  4295c8:	mov    r11,QWORD PTR [r15+0xb8]
  4295cf:	mov    r8,QWORD PTR [r15+0x78]
  4295d3:	mov    r13,r14
  4295d6:	mov    ebx,ebp
  4295d8:	add    rbx,r11
  4295db:	mov    esi,DWORD PTR [rbx+0x8]
  4295de:	add    rsi,r8
  4295e1:	cmp    WORD PTR [rsi],r12w
  4295e5:	jne    4296d0 <flatcc_builder_create_cached_vtable@@Base+0x170>
  4295eb:	mov    rdi,QWORD PTR [rsp+0x18]
  4295f0:	movzx  edx,r12w
  4295f4:	mov    QWORD PTR [rsp+0x10],r8
  4295f9:	mov    QWORD PTR [rsp+0x8],r11
  4295fe:	call   405310 <memcmp@plt>
  429603:	test   eax,eax
  429605:	mov    r11,QWORD PTR [rsp+0x8]
  42960a:	mov    r8,QWORD PTR [rsp+0x10]
  42960f:	jne    4296d0 <flatcc_builder_create_cached_vtable@@Base+0x170>
  429615:	mov    eax,DWORD PTR [r15+0x100]
  42961c:	cmp    DWORD PTR [rbx+0x4],eax
  42961f:	je     4296e0 <flatcc_builder_create_cached_vtable@@Base+0x180>
  429625:	mov    QWORD PTR [rsp+0x20],rbx
  42962a:	mov    ebp,DWORD PTR [rbx+0xc]
  42962d:	lea    r13,[rbx+0xc]
  429631:	test   ebp,ebp
  429633:	jne    4295d6 <flatcc_builder_create_cached_vtable@@Base+0x76>
  429635:	mov    ebp,DWORD PTR [r15+0xe4]
  42963c:	lea    rdx,[rbp+0x10]
  429640:	cmp    rdx,QWORD PTR [r15+0xc0]
  429647:	jbe    429668 <flatcc_builder_create_cached_vtable@@Base+0x108>
  429649:	mov    rdi,QWORD PTR [r15+0x40]
  42964d:	xor    ecx,ecx
  42964f:	lea    rsi,[r15+0xb8]
  429656:	mov    r8d,0x6
  42965c:	call   QWORD PTR [r15+0x50]
  429660:	test   eax,eax
  429662:	jne    4297f4 <flatcc_builder_create_cached_vtable@@Base+0x294>
  429668:	add    rbp,QWORD PTR [r15+0xb8]
  42966f:	je     429710 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  429675:	mov    eax,DWORD PTR [r15+0xe4]
  42967c:	mov    rsi,QWORD PTR [rsp+0x18]
  429681:	lea    edx,[rax+0x10]
  429684:	mov    DWORD PTR [r15+0xe4],edx
  42968b:	mov    edx,DWORD PTR [r15+0x100]
  429692:	mov    rdi,r15
  429695:	mov    DWORD PTR [rbp+0x4],edx
  429698:	mov    edx,DWORD PTR [r14]
  42969b:	mov    DWORD PTR [rbp+0xc],edx
  42969e:	mov    DWORD PTR [r14],eax
  4296a1:	mov    eax,DWORD PTR [rsp+0x2c]
  4296a5:	movzx  edx,ax
  4296a8:	movzx  ebx,ax
  4296ab:	call   429410 <flatcc_builder_create_vtable@@Base>
  4296b0:	mov    DWORD PTR [rbp+0x0],eax
  4296b3:	test   eax,eax
  4296b5:	je     429710 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  4296b7:	mov    rdi,QWORD PTR [rsp+0x20]
  4296bc:	test   rdi,rdi
  4296bf:	je     429815 <flatcc_builder_create_cached_vtable@@Base+0x2b5>
  4296c5:	mov    edx,DWORD PTR [rdi+0x8]
  4296c8:	mov    DWORD PTR [rbp+0x8],edx
  4296cb:	jmp    4296f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  4296cd:	nop    DWORD PTR [rax]
  4296d0:	lea    r13,[rbx+0xc]
  4296d4:	mov    ebp,DWORD PTR [rbx+0xc]
  4296d7:	jmp    429631 <flatcc_builder_create_cached_vtable@@Base+0xd1>
  4296dc:	nop    DWORD PTR [rax+0x0]
  4296e0:	cmp    r14,r13
  4296e3:	je     4296f5 <flatcc_builder_create_cached_vtable@@Base+0x195>
  4296e5:	mov    eax,DWORD PTR [rbx+0xc]
  4296e8:	mov    DWORD PTR [r13+0x0],eax
  4296ec:	mov    eax,DWORD PTR [r14]
  4296ef:	mov    DWORD PTR [rbx+0xc],eax
  4296f2:	mov    DWORD PTR [r14],ebp
  4296f5:	mov    eax,DWORD PTR [rbx]
  4296f7:	add    rsp,0x38
  4296fb:	pop    rbx
  4296fc:	pop    rbp
  4296fd:	pop    r12
  4296ff:	pop    r13
  429701:	pop    r14
  429703:	pop    r15
  429705:	ret    
  429706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429710:	add    rsp,0x38
  429714:	pop    rbx
  429715:	pop    rbp
  429716:	pop    r12
  429718:	pop    r13
  42971a:	pop    r14
  42971c:	xor    eax,eax
  42971e:	pop    r15
  429720:	ret    
  429721:	nop    DWORD PTR [rax+0x0]
  429728:	mov    eax,DWORD PTR [rdi+0xe4]
  42972e:	lea    r13,[rdi+0xa8]
  429735:	test   eax,eax
  429737:	jne    42989f <flatcc_builder_create_cached_vtable@@Base+0x33f>
  42973d:	cmp    QWORD PTR [rdi+0xc0],0xf
  429745:	jbe    4297d0 <flatcc_builder_create_cached_vtable@@Base+0x270>
  42974b:	cmp    QWORD PTR [r15+0xb8],0x0
  429753:	je     429710 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  429755:	mov    DWORD PTR [r15+0xe4],0x10
  429760:	mov    rdi,QWORD PTR [r15+0x40]
  429764:	mov    r8d,0x5
  42976a:	mov    ecx,0x1
  42976f:	mov    edx,0x100
  429774:	mov    rsi,r13
  429777:	call   QWORD PTR [r15+0x50]
  42977b:	test   eax,eax
  42977d:	jne    429710 <flatcc_builder_create_cached_vtable@@Base+0x1b0>
  42977f:	mov    rcx,QWORD PTR [r15+0xb0]
  429786:	mov    eax,0x100
  42978b:	jmp    429793 <flatcc_builder_create_cached_vtable@@Base+0x233>
  42978d:	nop    DWORD PTR [rax]
  429790:	mov    rax,rdx
  429793:	lea    rdx,[rax+rax*1]
  429797:	cmp    rdx,rcx
  42979a:	jbe    429790 <flatcc_builder_create_cached_vtable@@Base+0x230>
  42979c:	shr    rax,0x2
  4297a0:	cmp    rax,0x1
  4297a4:	jbe    42980e <flatcc_builder_create_cached_vtable@@Base+0x2ae>
  4297a6:	mov    esi,0x1
  4297ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4297b0:	inc    rbx
  4297b3:	shlx   rdx,rsi,rbx
  4297b8:	cmp    rax,rdx
  4297bb:	ja     4297b0 <flatcc_builder_create_cached_vtable@@Base+0x250>
  4297bd:	mov    eax,0x20
  4297c2:	sub    eax,ebx
  4297c4:	mov    QWORD PTR [r15+0xd8],rbx
  4297cb:	jmp    42959b <flatcc_builder_create_cached_vtable@@Base+0x3b>
  4297d0:	lea    rsi,[rdi+0xb8]
  4297d7:	mov    rdi,QWORD PTR [rdi+0x40]
  4297db:	xor    ecx,ecx
  4297dd:	mov    r8d,0x6
  4297e3:	mov    edx,0x10
  4297e8:	call   QWORD PTR [r15+0x50]
  4297ec:	test   eax,eax
  4297ee:	je     42974b <flatcc_builder_create_cached_vtable@@Base+0x1eb>
  4297f4:	call   427670 <flatcc_builder_default_alloc@@Base+0x130>
  4297f9:	nop    DWORD PTR [rax+0x0]
  429800:	mov    QWORD PTR [rsp+0x20],0x0
  429809:	jmp    429635 <flatcc_builder_create_cached_vtable@@Base+0xd5>
  42980e:	mov    eax,0x20
  429813:	jmp    4297c4 <flatcc_builder_create_cached_vtable@@Base+0x264>
  429815:	mov    rax,QWORD PTR [r15+0x118]
  42981c:	mov    r14d,DWORD PTR [r15+0xe0]
  429823:	test   rax,rax
  429826:	je     429831 <flatcc_builder_create_cached_vtable@@Base+0x2d1>
  429828:	lea    edx,[rbx+r14*1]
  42982c:	cmp    rax,rdx
  42982f:	jb     429887 <flatcc_builder_create_cached_vtable@@Base+0x327>
  429831:	lea    rdx,[r12+r14*1]
  429835:	cmp    rdx,QWORD PTR [r15+0x80]
  42983c:	jbe    429856 <flatcc_builder_create_cached_vtable@@Base+0x2f6>
  42983e:	mov    rdi,QWORD PTR [r15+0x40]
  429842:	xor    ecx,ecx
  429844:	lea    rsi,[r15+0x78]
  429848:	mov    r8d,0x2
  42984e:	call   QWORD PTR [r15+0x50]
  429852:	test   eax,eax
  429854:	jne    4297f4 <flatcc_builder_create_cached_vtable@@Base+0x294>
  429856:	mov    rdi,r14
  429859:	add    rdi,QWORD PTR [r15+0x78]
  42985d:	je     429897 <flatcc_builder_create_cached_vtable@@Base+0x337>
  42985f:	mov    eax,DWORD PTR [r15+0xe0]
  429866:	mov    rsi,QWORD PTR [rsp+0x18]
  42986b:	add    ebx,eax
  42986d:	mov    DWORD PTR [rbp+0x8],eax
  429870:	mov    DWORD PTR [r15+0xe0],ebx
  429877:	mov    rdx,r12
  42987a:	call   405350 <memcpy@plt>
  42987f:	mov    eax,DWORD PTR [rbp+0x0]
  429882:	jmp    4296f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  429887:	mov    rdi,r15
  42988a:	call   427bc0 <flatcc_builder_flush_vtable_cache@@Base>
  42988f:	mov    eax,DWORD PTR [rbp+0x0]
  429892:	jmp    4296f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  429897:	or     eax,0xffffffff
  42989a:	jmp    4296f7 <flatcc_builder_create_cached_vtable@@Base+0x197>
  42989f:	lea    rcx,[rip+0x1f9ea]        # 449290 <fb_schema_table_missing@@Base+0x3610>
  4298a6:	mov    edx,0x156
  4298ab:	lea    rsi,[rip+0x1f1ee]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  4298b2:	lea    rdi,[rip+0x1f5c4]        # 448e7d <fb_schema_table_missing@@Base+0x31fd>
  4298b9:	call   4052e0 <__assert_fail@plt>
  4298be:	xchg   ax,ax

00000000004298c0 <flatcc_builder_create_table@@Base>:
  4298c0:	endbr64 
  4298c4:	push   rbp
  4298c5:	push   rbx
  4298c6:	mov    rbx,rdi
  4298c9:	sub    rsp,0xb8
  4298d0:	mov    edi,DWORD PTR [rsp+0xd0]
  4298d7:	mov    rax,QWORD PTR fs:0x28
  4298e0:	mov    QWORD PTR [rsp+0xa8],rax
  4298e8:	xor    eax,eax
  4298ea:	test   r9d,r9d
  4298ed:	js     429aaf <flatcc_builder_create_table@@Base+0x1ef>
  4298f3:	test   dil,0x1
  4298f7:	je     429a8b <flatcc_builder_create_table@@Base+0x1cb>
  4298fd:	cmp    cx,0x4
  429901:	mov    eax,0x4
  429906:	cmovb  ecx,eax
  429909:	movzx  r11d,cx
  42990d:	cmp    WORD PTR [rbx+0xe8],cx
  429914:	jb     429a60 <flatcc_builder_create_table@@Base+0x1a0>
  42991a:	mov    eax,DWORD PTR [rbx+0xf0]
  429920:	lea    ecx,[r11-0x1]
  429924:	mov    r10d,eax
  429927:	sub    r10d,edx
  42992a:	and    r10d,ecx
  42992d:	mov    ecx,eax
  42992f:	sub    ecx,edx
  429931:	lea    r11d,[rcx-0x4]
  429935:	dec    edi
  429937:	mov    ecx,r11d
  42993a:	sub    ecx,edi
  42993c:	sub    ecx,r10d
  42993f:	mov    DWORD PTR [rsp+0xc],ecx
  429943:	test   r9d,r9d
  429946:	je     42997d <flatcc_builder_create_table@@Base+0xbd>
  429948:	mov    edi,r10d
  42994b:	sub    edi,r11d
  42994e:	lea    eax,[r9-0x1]
  429952:	sub    edi,0x4
  429955:	lea    r9,[r8+rax*2+0x2]
  42995a:	nop    WORD PTR [rax+rax*1+0x0]
  429960:	movzx  ecx,WORD PTR [r8]
  429964:	mov    r11d,edi
  429967:	sub    r11d,ecx
  42996a:	add    r8,0x2
  42996e:	add    DWORD PTR [rsi+rcx*1],r11d
  429972:	cmp    r9,r8
  429975:	jne    429960 <flatcc_builder_create_table@@Base+0xa0>
  429977:	mov    eax,DWORD PTR [rbx+0xf0]
  42997d:	lea    rcx,[rsp+0xc]
  429982:	mov    QWORD PTR [rsp+0x10],0x4
  42998b:	mov    QWORD PTR [rsp+0x20],rcx
  429990:	mov    QWORD PTR [rsp+0x28],0x4
  429999:	mov    DWORD PTR [rsp+0x18],0x1
  4299a1:	mov    r8d,0x4
  4299a7:	test   rdx,rdx
  4299aa:	je     4299c7 <flatcc_builder_create_table@@Base+0x107>
  4299ac:	lea    r8,[rdx+0x4]
  4299b0:	mov    QWORD PTR [rsp+0x10],r8
  4299b5:	mov    QWORD PTR [rsp+0x30],rsi
  4299ba:	mov    QWORD PTR [rsp+0x38],rdx
  4299bf:	mov    DWORD PTR [rsp+0x18],0x2
  4299c7:	test   r10d,r10d
  4299ca:	jne    429a30 <flatcc_builder_create_table@@Base+0x170>
  4299cc:	mov    ebp,eax
  4299ce:	movabs rdx,0x10000000f
  4299d8:	sub    ebp,r8d
  4299db:	cmp    r8,rdx
  4299de:	ja     429a6c <flatcc_builder_create_table@@Base+0x1ac>
  4299e4:	cmp    ebp,eax
  4299e6:	jge    429a6c <flatcc_builder_create_table@@Base+0x1ac>
  4299ec:	mov    rdi,QWORD PTR [rbx+0x38]
  4299f0:	mov    edx,DWORD PTR [rsp+0x18]
  4299f4:	lea    rsi,[rsp+0x20]
  4299f9:	mov    ecx,ebp
  4299fb:	call   QWORD PTR [rbx+0x48]
  4299fe:	test   eax,eax
  429a00:	jne    429aaa <flatcc_builder_create_table@@Base+0x1ea>
  429a06:	mov    DWORD PTR [rbx+0xf0],ebp
  429a0c:	mov    eax,ebp
  429a0e:	mov    rbx,QWORD PTR [rsp+0xa8]
  429a16:	xor    rbx,QWORD PTR fs:0x28
  429a1f:	jne    429ace <flatcc_builder_create_table@@Base+0x20e>
  429a25:	add    rsp,0xb8
  429a2c:	pop    rbx
  429a2d:	pop    rbp
  429a2e:	ret    
  429a2f:	nop
  429a30:	movsxd rcx,DWORD PTR [rsp+0x18]
  429a35:	mov    rsi,0x449580
  429a3c:	mov    rdx,rcx
  429a3f:	add    r8,r10
  429a42:	shl    rcx,0x4
  429a46:	inc    edx
  429a48:	mov    QWORD PTR [rsp+0x10],r8
  429a4d:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  429a52:	mov    QWORD PTR [rsp+rcx*1+0x28],r10
  429a57:	mov    DWORD PTR [rsp+0x18],edx
  429a5b:	jmp    4299cc <flatcc_builder_create_table@@Base+0x10c>
  429a60:	mov    WORD PTR [rbx+0xe8],cx
  429a67:	jmp    42991a <flatcc_builder_create_table@@Base+0x5a>
  429a6c:	lea    rcx,[rip+0x1fa5d]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  429a73:	mov    edx,0x287
  429a78:	lea    rsi,[rip+0x1f021]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429a7f:	lea    rdi,[rip+0xd093]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  429a86:	call   4052e0 <__assert_fail@plt>
  429a8b:	lea    rcx,[rip+0x1f7de]        # 449270 <fb_schema_table_missing@@Base+0x35f0>
  429a92:	mov    edx,0x4db
  429a97:	lea    rsi,[rip+0x1f002]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429a9e:	lea    rdi,[rip+0x1f3f9]        # 448e9e <fb_schema_table_missing@@Base+0x321e>
  429aa5:	call   4052e0 <__assert_fail@plt>
  429aaa:	call   427810 <flatcc_builder_default_alloc@@Base+0x2d0>
  429aaf:	lea    rcx,[rip+0x1f7ba]        # 449270 <fb_schema_table_missing@@Base+0x35f0>
  429ab6:	mov    edx,0x4d5
  429abb:	lea    rsi,[rip+0x1efde]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429ac2:	lea    rdi,[rip+0x1f3c3]        # 448e8c <fb_schema_table_missing@@Base+0x320c>
  429ac9:	call   4052e0 <__assert_fail@plt>
  429ace:	call   4052c0 <__stack_chk_fail@plt>
  429ad3:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429ade:	xchg   ax,ax

0000000000429ae0 <flatcc_builder_check_required_field@@Base>:
  429ae0:	endbr64 
  429ae4:	mov    rax,QWORD PTR [rdi+0x30]
  429ae8:	cmp    WORD PTR [rax+0xe],0x3
  429aed:	jne    429b0a <flatcc_builder_check_required_field@@Base+0x2a>
  429aef:	xor    eax,eax
  429af1:	cmp    WORD PTR [rdi+0x10],si
  429af5:	jbe    429b09 <flatcc_builder_check_required_field@@Base+0x29>
  429af7:	mov    rax,QWORD PTR [rdi+0x8]
  429afb:	movzx  edx,si
  429afe:	cmp    WORD PTR [rax+rdx*2],0x0
  429b03:	setne  al
  429b06:	movzx  eax,al
  429b09:	ret    
  429b0a:	push   rax
  429b0b:	lea    rcx,[rip+0x1f72e]        # 449240 <fb_schema_table_missing@@Base+0x35c0>
  429b12:	mov    edx,0x4f8
  429b17:	lea    rsi,[rip+0x1ef82]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429b1e:	lea    rdi,[rip+0x1f1c3]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  429b25:	call   4052e0 <__assert_fail@plt>
  429b2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429b30 <flatcc_builder_check_union_field@@Base>:
  429b30:	endbr64 
  429b34:	mov    rax,QWORD PTR [rdi+0x30]
  429b38:	cmp    WORD PTR [rax+0xe],0x3
  429b3d:	jne    429b99 <flatcc_builder_check_union_field@@Base+0x69>
  429b3f:	xor    eax,eax
  429b41:	test   si,si
  429b44:	je     429b76 <flatcc_builder_check_union_field@@Base+0x46>
  429b46:	cmp    WORD PTR [rdi+0x10],si
  429b4a:	jbe    429b76 <flatcc_builder_check_union_field@@Base+0x46>
  429b4c:	mov    rcx,QWORD PTR [rdi+0x8]
  429b50:	movzx  edx,si
  429b53:	movzx  eax,WORD PTR [rcx+rdx*2-0x2]
  429b58:	movzx  ecx,WORD PTR [rcx+rdx*2]
  429b5c:	test   ax,ax
  429b5f:	je     429b90 <flatcc_builder_check_union_field@@Base+0x60>
  429b61:	mov    rsi,QWORD PTR [rdi+0x18]
  429b65:	movzx  edx,ax
  429b68:	xor    eax,eax
  429b6a:	test   cx,cx
  429b6d:	sete   al
  429b70:	cmp    BYTE PTR [rsi+rdx*1],0x0
  429b74:	jne    429b80 <flatcc_builder_check_union_field@@Base+0x50>
  429b76:	ret    
  429b77:	nop    WORD PTR [rax+rax*1+0x0]
  429b80:	xor    eax,eax
  429b82:	test   cx,cx
  429b85:	setne  al
  429b88:	ret    
  429b89:	nop    DWORD PTR [rax+0x0]
  429b90:	xor    eax,eax
  429b92:	test   cx,cx
  429b95:	sete   al
  429b98:	ret    
  429b99:	push   rax
  429b9a:	lea    rcx,[rip+0x1f65f]        # 449200 <fb_schema_table_missing@@Base+0x3580>
  429ba1:	mov    edx,0x4ff
  429ba6:	lea    rsi,[rip+0x1eef3]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429bad:	lea    rdi,[rip+0x1f134]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  429bb4:	call   4052e0 <__assert_fail@plt>
  429bb9:	nop    DWORD PTR [rax+0x0]

0000000000429bc0 <flatcc_builder_check_required@@Base>:
  429bc0:	endbr64 
  429bc4:	mov    rax,QWORD PTR [rdi+0x30]
  429bc8:	cmp    WORD PTR [rax+0xe],0x3
  429bcd:	jne    429c23 <flatcc_builder_check_required@@Base+0x63>
  429bcf:	movzx  ecx,WORD PTR [rdi+0x10]
  429bd3:	xor    eax,eax
  429bd5:	cmp    ecx,edx
  429bd7:	jl     429c22 <flatcc_builder_check_required@@Base+0x62>
  429bd9:	test   edx,edx
  429bdb:	jle    429c13 <flatcc_builder_check_required@@Base+0x53>
  429bdd:	mov    rcx,QWORD PTR [rdi+0x8]
  429be1:	movzx  edi,WORD PTR [rsi]
  429be4:	cmp    WORD PTR [rcx+rdi*2],0x0
  429be9:	je     429c22 <flatcc_builder_check_required@@Base+0x62>
  429beb:	add    rsi,0x2
  429bef:	lea    eax,[rdx-0x1]
  429bf2:	lea    rdx,[rsi+rax*2]
  429bf6:	jmp    429c0e <flatcc_builder_check_required@@Base+0x4e>
  429bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  429c00:	movzx  eax,WORD PTR [rsi]
  429c03:	add    rsi,0x2
  429c07:	cmp    WORD PTR [rcx+rax*2],0x0
  429c0c:	je     429c20 <flatcc_builder_check_required@@Base+0x60>
  429c0e:	cmp    rsi,rdx
  429c11:	jne    429c00 <flatcc_builder_check_required@@Base+0x40>
  429c13:	mov    eax,0x1
  429c18:	ret    
  429c19:	nop    DWORD PTR [rax+0x0]
  429c20:	xor    eax,eax
  429c22:	ret    
  429c23:	push   rax
  429c24:	lea    rcx,[rip+0x1f5a5]        # 4491d0 <fb_schema_table_missing@@Base+0x3550>
  429c2b:	mov    edx,0x511
  429c30:	lea    rsi,[rip+0x1ee69]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429c37:	lea    rdi,[rip+0x1f0aa]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  429c3e:	call   4052e0 <__assert_fail@plt>
  429c43:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  429c4e:	xchg   ax,ax

0000000000429c50 <flatcc_builder_end_table@@Base>:
  429c50:	endbr64 
  429c54:	push   r13
  429c56:	push   r12
  429c58:	push   rbp
  429c59:	push   rbx
  429c5a:	sub    rsp,0x8
  429c5e:	mov    rax,QWORD PTR [rdi+0x30]
  429c62:	cmp    WORD PTR [rax+0xe],0x3
  429c67:	jne    429dbd <flatcc_builder_end_table@@Base+0x16d>
  429c6d:	movzx  ebp,WORD PTR [rdi+0x10]
  429c71:	movzx  eax,WORD PTR [rdi+0x20]
  429c75:	lea    ebp,[rbp+rbp*1+0x4]
  429c79:	movzx  ecx,bp
  429c7c:	xor    ecx,DWORD PTR [rdi+0x14]
  429c7f:	mov    rdx,QWORD PTR [rdi+0x8]
  429c83:	imul   ecx,ecx,0x9e3779b1
  429c89:	add    eax,0x4
  429c8c:	mov    WORD PTR [rdx-0x2],ax
  429c90:	movzx  eax,ax
  429c93:	xor    ecx,eax
  429c95:	imul   ecx,ecx,0x9e3779b1
  429c9b:	mov    WORD PTR [rdx-0x4],bp
  429c9f:	lea    r12,[rdx-0x4]
  429ca3:	mov    DWORD PTR [rdi+0x14],ecx
  429ca6:	movzx  edx,bp
  429ca9:	mov    rsi,r12
  429cac:	mov    rbx,rdi
  429caf:	call   429560 <flatcc_builder_create_cached_vtable@@Base>
  429cb4:	mov    r13d,eax
  429cb7:	test   eax,eax
  429cb9:	jne    429cd0 <flatcc_builder_end_table@@Base+0x80>
  429cbb:	add    rsp,0x8
  429cbf:	pop    rbx
  429cc0:	xor    ebp,ebp
  429cc2:	mov    eax,ebp
  429cc4:	pop    rbp
  429cc5:	pop    r12
  429cc7:	pop    r13
  429cc9:	ret    
  429cca:	nop    WORD PTR [rax+rax*1+0x0]
  429cd0:	movzx  edx,bp
  429cd3:	xor    esi,esi
  429cd5:	mov    rdi,r12
  429cd8:	call   4052f0 <memset@plt>
  429cdd:	mov    rax,QWORD PTR [rbx+0x30]
  429ce1:	sub    rsp,0x8
  429ce5:	mov    r8d,DWORD PTR [rax+0x14]
  429ce9:	mov    r9,QWORD PTR [rbx]
  429cec:	add    r8,QWORD PTR [rbx+0x88]
  429cf3:	mov    edx,DWORD PTR [rbx+0x20]
  429cf6:	movzx  ecx,WORD PTR [rbx+0xea]
  429cfd:	mov    rsi,QWORD PTR [rbx+0x18]
  429d01:	push   r13
  429d03:	sub    r9,r8
  429d06:	sar    r9,1
  429d09:	mov    rdi,rbx
  429d0c:	call   4298c0 <flatcc_builder_create_table@@Base>
  429d11:	mov    ebp,eax
  429d13:	pop    rax
  429d14:	pop    rdx
  429d15:	test   ebp,ebp
  429d17:	je     429cbb <flatcc_builder_end_table@@Base+0x6b>
  429d19:	mov    rax,QWORD PTR [rbx+0x30]
  429d1d:	mov    rdi,QWORD PTR [rbx+0x18]
  429d21:	mov    edx,DWORD PTR [rax+0x18]
  429d24:	xor    esi,esi
  429d26:	mov    DWORD PTR [rbx+0x14],edx
  429d29:	movzx  edx,WORD PTR [rax+0x1c]
  429d2d:	mov    WORD PTR [rbx+0x10],dx
  429d31:	mov    edx,DWORD PTR [rax+0x10]
  429d34:	mov    eax,DWORD PTR [rax+0x14]
  429d37:	add    rdx,QWORD PTR [rbx+0x58]
  429d3b:	add    rax,QWORD PTR [rbx+0x88]
  429d42:	mov    QWORD PTR [rbx+0x8],rdx
  429d46:	mov    QWORD PTR [rbx],rax
  429d49:	mov    edx,DWORD PTR [rbx+0x20]
  429d4c:	call   4052f0 <memset@plt>
  429d51:	mov    rax,QWORD PTR [rbx+0x30]
  429d55:	mov    edi,DWORD PTR [rbx+0x70]
  429d58:	mov    edx,DWORD PTR [rax+0x8]
  429d5b:	mov    esi,DWORD PTR [rax]
  429d5d:	mov    ecx,DWORD PTR [rax+0x4]
  429d60:	mov    DWORD PTR [rbx+0x20],edx
  429d63:	mov    rdx,rsi
  429d66:	sub    edi,edx
  429d68:	mov    DWORD PTR [rbx+0x28],esi
  429d6b:	mov    edx,edi
  429d6d:	add    rsi,QWORD PTR [rbx+0x68]
  429d71:	cmp    ecx,edi
  429d73:	cmovb  edx,ecx
  429d76:	mov    QWORD PTR [rbx+0x18],rsi
  429d7a:	mov    DWORD PTR [rbx+0x24],edx
  429d7d:	movzx  edx,WORD PTR [rbx+0xea]
  429d84:	mov    DWORD PTR [rax+0x4],ecx
  429d87:	cmp    dx,WORD PTR [rbx+0xe8]
  429d8e:	jbe    429d97 <flatcc_builder_end_table@@Base+0x147>
  429d90:	mov    WORD PTR [rbx+0xe8],dx
  429d97:	movzx  edx,WORD PTR [rax+0xc]
  429d9b:	dec    DWORD PTR [rbx+0x104]
  429da1:	sub    rax,0x24
  429da5:	mov    QWORD PTR [rbx+0x30],rax
  429da9:	mov    WORD PTR [rbx+0xea],dx
  429db0:	add    rsp,0x8
  429db4:	mov    eax,ebp
  429db6:	pop    rbx
  429db7:	pop    rbp
  429db8:	pop    r12
  429dba:	pop    r13
  429dbc:	ret    
  429dbd:	lea    rcx,[rip+0x1f3ec]        # 4491b0 <fb_schema_table_missing@@Base+0x3530>
  429dc4:	mov    edx,0x525
  429dc9:	lea    rsi,[rip+0x1ecd0]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429dd0:	lea    rdi,[rip+0x1ef11]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  429dd7:	call   4052e0 <__assert_fail@plt>
  429ddc:	nop    DWORD PTR [rax+0x0]

0000000000429de0 <flatcc_builder_create_vector@@Base>:
  429de0:	endbr64 
  429de4:	push   rbp
  429de5:	push   rbx
  429de6:	sub    rsp,0xb8
  429ded:	mov    rax,QWORD PTR fs:0x28
  429df6:	mov    QWORD PTR [rsp+0xa8],rax
  429dfe:	xor    eax,eax
  429e00:	cmp    rdx,r9
  429e03:	ja     429f44 <flatcc_builder_create_vector@@Base+0x164>
  429e09:	cmp    r8w,0x4
  429e0e:	mov    eax,0x4
  429e13:	cmovb  r8d,eax
  429e17:	mov    rbx,rdi
  429e1a:	movzx  edi,r8w
  429e1e:	cmp    r8w,WORD PTR [rbx+0xe8]
  429e26:	jbe    429e30 <flatcc_builder_create_vector@@Base+0x50>
  429e28:	mov    WORD PTR [rbx+0xe8],r8w
  429e30:	imul   ecx,edx
  429e33:	mov    DWORD PTR [rsp+0xc],edx
  429e37:	mov    edx,DWORD PTR [rbx+0xf0]
  429e3d:	dec    edi
  429e3f:	mov    eax,edx
  429e41:	sub    eax,ecx
  429e43:	and    eax,edi
  429e45:	lea    rdi,[rsp+0xc]
  429e4a:	mov    QWORD PTR [rsp+0x10],0x4
  429e53:	mov    QWORD PTR [rsp+0x20],rdi
  429e58:	mov    QWORD PTR [rsp+0x28],0x4
  429e61:	mov    DWORD PTR [rsp+0x18],0x1
  429e69:	mov    r8d,0x4
  429e6f:	test   ecx,ecx
  429e71:	je     429e8e <flatcc_builder_create_vector@@Base+0xae>
  429e73:	lea    r8,[rcx+0x4]
  429e77:	mov    QWORD PTR [rsp+0x10],r8
  429e7c:	mov    QWORD PTR [rsp+0x30],rsi
  429e81:	mov    QWORD PTR [rsp+0x38],rcx
  429e86:	mov    DWORD PTR [rsp+0x18],0x2
  429e8e:	test   eax,eax
  429e90:	jne    429ef0 <flatcc_builder_create_vector@@Base+0x110>
  429e92:	mov    ebp,edx
  429e94:	movabs rax,0x10000000f
  429e9e:	sub    ebp,r8d
  429ea1:	cmp    r8,rax
  429ea4:	ja     429f20 <flatcc_builder_create_vector@@Base+0x140>
  429ea6:	cmp    edx,ebp
  429ea8:	jle    429f20 <flatcc_builder_create_vector@@Base+0x140>
  429eaa:	mov    rdi,QWORD PTR [rbx+0x38]
  429eae:	mov    edx,DWORD PTR [rsp+0x18]
  429eb2:	lea    rsi,[rsp+0x20]
  429eb7:	mov    ecx,ebp
  429eb9:	call   QWORD PTR [rbx+0x48]
  429ebc:	test   eax,eax
  429ebe:	jne    429f3f <flatcc_builder_create_vector@@Base+0x15f>
  429ec0:	mov    DWORD PTR [rbx+0xf0],ebp
  429ec6:	mov    eax,ebp
  429ec8:	mov    rbx,QWORD PTR [rsp+0xa8]
  429ed0:	xor    rbx,QWORD PTR fs:0x28
  429ed9:	jne    429f63 <flatcc_builder_create_vector@@Base+0x183>
  429edf:	add    rsp,0xb8
  429ee6:	pop    rbx
  429ee7:	pop    rbp
  429ee8:	ret    
  429ee9:	nop    DWORD PTR [rax+0x0]
  429ef0:	movsxd rsi,DWORD PTR [rsp+0x18]
  429ef5:	mov    rdi,0x449580
  429efc:	mov    rcx,rsi
  429eff:	add    r8,rax
  429f02:	shl    rsi,0x4
  429f06:	inc    ecx
  429f08:	mov    QWORD PTR [rsp+0x10],r8
  429f0d:	mov    QWORD PTR [rsp+rsi*1+0x20],rdi
  429f12:	mov    QWORD PTR [rsp+rsi*1+0x28],rax
  429f17:	mov    DWORD PTR [rsp+0x18],ecx
  429f1b:	jmp    429e92 <flatcc_builder_create_vector@@Base+0xb2>
  429f20:	lea    rcx,[rip+0x1f5a9]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  429f27:	mov    edx,0x287
  429f2c:	lea    rsi,[rip+0x1eb6d]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429f33:	lea    rdi,[rip+0xcbdf]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  429f3a:	call   4052e0 <__assert_fail@plt>
  429f3f:	call   427810 <flatcc_builder_default_alloc@@Base+0x2d0>
  429f44:	lea    rcx,[rip+0x1f245]        # 449190 <fb_schema_table_missing@@Base+0x3510>
  429f4b:	mov    edx,0x555
  429f50:	lea    rsi,[rip+0x1eb49]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  429f57:	lea    rdi,[rip+0x1ef4b]        # 448ea9 <fb_schema_table_missing@@Base+0x3229>
  429f5e:	call   4052e0 <__assert_fail@plt>
  429f63:	call   4052c0 <__stack_chk_fail@plt>
  429f68:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429f70 <flatcc_builder_end_vector@@Base>:
  429f70:	endbr64 
  429f74:	push   rbp
  429f75:	push   rbx
  429f76:	sub    rsp,0x8
  429f7a:	mov    rax,QWORD PTR [rdi+0x30]
  429f7e:	cmp    WORD PTR [rax+0xe],0x4
  429f83:	jne    42a036 <flatcc_builder_end_vector@@Base+0xc6>
  429f89:	mov    ecx,DWORD PTR [rax+0x10]
  429f8c:	mov    edx,DWORD PTR [rax+0x14]
  429f8f:	mov    rsi,QWORD PTR [rdi+0x18]
  429f93:	mov    r9d,DWORD PTR [rax+0x18]
  429f97:	movzx  r8d,WORD PTR [rdi+0xea]
  429f9f:	mov    rbx,rdi
  429fa2:	call   429de0 <flatcc_builder_create_vector@@Base>
  429fa7:	mov    ebp,eax
  429fa9:	test   eax,eax
  429fab:	jne    429fc0 <flatcc_builder_end_vector@@Base+0x50>
  429fad:	add    rsp,0x8
  429fb1:	pop    rbx
  429fb2:	mov    eax,ebp
  429fb4:	pop    rbp
  429fb5:	ret    
  429fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429fc0:	mov    edx,DWORD PTR [rbx+0x20]
  429fc3:	mov    rdi,QWORD PTR [rbx+0x18]
  429fc7:	xor    esi,esi
  429fc9:	call   4052f0 <memset@plt>
  429fce:	mov    rax,QWORD PTR [rbx+0x30]
  429fd2:	mov    edi,DWORD PTR [rbx+0x70]
  429fd5:	mov    edx,DWORD PTR [rax+0x8]
  429fd8:	mov    esi,DWORD PTR [rax]
  429fda:	mov    ecx,DWORD PTR [rax+0x4]
  429fdd:	mov    DWORD PTR [rbx+0x20],edx
  429fe0:	mov    rdx,rsi
  429fe3:	sub    edi,edx
  429fe5:	mov    DWORD PTR [rbx+0x28],esi
  429fe8:	mov    edx,edi
  429fea:	add    rsi,QWORD PTR [rbx+0x68]
  429fee:	cmp    ecx,edi
  429ff0:	cmovb  edx,ecx
  429ff3:	mov    QWORD PTR [rbx+0x18],rsi
  429ff7:	mov    DWORD PTR [rbx+0x24],edx
  429ffa:	movzx  edx,WORD PTR [rbx+0xea]
  42a001:	mov    DWORD PTR [rax+0x4],ecx
  42a004:	cmp    dx,WORD PTR [rbx+0xe8]
  42a00b:	jbe    42a014 <flatcc_builder_end_vector@@Base+0xa4>
  42a00d:	mov    WORD PTR [rbx+0xe8],dx
  42a014:	movzx  edx,WORD PTR [rax+0xc]
  42a018:	dec    DWORD PTR [rbx+0x104]
  42a01e:	sub    rax,0x24
  42a022:	mov    QWORD PTR [rbx+0x30],rax
  42a026:	mov    WORD PTR [rbx+0xea],dx
  42a02d:	add    rsp,0x8
  42a031:	mov    eax,ebp
  42a033:	pop    rbx
  42a034:	pop    rbp
  42a035:	ret    
  42a036:	lea    rcx,[rip+0x1f133]        # 449170 <fb_schema_table_missing@@Base+0x34f0>
  42a03d:	mov    edx,0x578
  42a042:	lea    rsi,[rip+0x1ea57]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a049:	lea    rdi,[rip+0x1eb30]        # 448b80 <fb_schema_table_missing@@Base+0x2f00>
  42a050:	call   4052e0 <__assert_fail@plt>
  42a055:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042a060 <flatcc_builder_vector_count@@Base>:
  42a060:	endbr64 
  42a064:	mov    rax,QWORD PTR [rdi+0x30]
  42a068:	mov    eax,DWORD PTR [rax+0x14]
  42a06b:	ret    
  42a06c:	nop    DWORD PTR [rax+0x0]

000000000042a070 <flatcc_builder_vector_edit@@Base>:
  42a070:	endbr64 
  42a074:	mov    rax,QWORD PTR [rdi+0x18]
  42a078:	ret    
  42a079:	nop    DWORD PTR [rax+0x0]

000000000042a080 <flatcc_builder_create_offset_vector_direct@@Base>:
  42a080:	endbr64 
  42a084:	xor    ecx,ecx
  42a086:	jmp    427990 <flatcc_builder_default_alloc@@Base+0x450>
  42a08b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a090 <flatcc_builder_end_offset_vector@@Base>:
  42a090:	endbr64 
  42a094:	push   rbp
  42a095:	push   rbx
  42a096:	sub    rsp,0x8
  42a09a:	mov    rax,QWORD PTR [rdi+0x30]
  42a09e:	cmp    WORD PTR [rax+0xe],0x5
  42a0a3:	jne    42a146 <flatcc_builder_end_offset_vector@@Base+0xb6>
  42a0a9:	mov    edx,DWORD PTR [rax+0x14]
  42a0ac:	mov    rsi,QWORD PTR [rdi+0x18]
  42a0b0:	mov    rbx,rdi
  42a0b3:	call   42a080 <flatcc_builder_create_offset_vector_direct@@Base>
  42a0b8:	mov    ebp,eax
  42a0ba:	test   eax,eax
  42a0bc:	jne    42a0d0 <flatcc_builder_end_offset_vector@@Base+0x40>
  42a0be:	add    rsp,0x8
  42a0c2:	pop    rbx
  42a0c3:	mov    eax,ebp
  42a0c5:	pop    rbp
  42a0c6:	ret    
  42a0c7:	nop    WORD PTR [rax+rax*1+0x0]
  42a0d0:	mov    edx,DWORD PTR [rbx+0x20]
  42a0d3:	mov    rdi,QWORD PTR [rbx+0x18]
  42a0d7:	xor    esi,esi
  42a0d9:	call   4052f0 <memset@plt>
  42a0de:	mov    rax,QWORD PTR [rbx+0x30]
  42a0e2:	mov    edi,DWORD PTR [rbx+0x70]
  42a0e5:	mov    edx,DWORD PTR [rax+0x8]
  42a0e8:	mov    esi,DWORD PTR [rax]
  42a0ea:	mov    ecx,DWORD PTR [rax+0x4]
  42a0ed:	mov    DWORD PTR [rbx+0x20],edx
  42a0f0:	mov    rdx,rsi
  42a0f3:	sub    edi,edx
  42a0f5:	mov    DWORD PTR [rbx+0x28],esi
  42a0f8:	mov    edx,edi
  42a0fa:	add    rsi,QWORD PTR [rbx+0x68]
  42a0fe:	cmp    ecx,edi
  42a100:	cmovb  edx,ecx
  42a103:	mov    QWORD PTR [rbx+0x18],rsi
  42a107:	mov    DWORD PTR [rbx+0x24],edx
  42a10a:	movzx  edx,WORD PTR [rbx+0xea]
  42a111:	mov    DWORD PTR [rax+0x4],ecx
  42a114:	cmp    dx,WORD PTR [rbx+0xe8]
  42a11b:	jbe    42a124 <flatcc_builder_end_offset_vector@@Base+0x94>
  42a11d:	mov    WORD PTR [rbx+0xe8],dx
  42a124:	movzx  edx,WORD PTR [rax+0xc]
  42a128:	dec    DWORD PTR [rbx+0x104]
  42a12e:	sub    rax,0x24
  42a132:	mov    QWORD PTR [rbx+0x30],rax
  42a136:	mov    WORD PTR [rbx+0xea],dx
  42a13d:	add    rsp,0x8
  42a141:	mov    eax,ebp
  42a143:	pop    rbx
  42a144:	pop    rbp
  42a145:	ret    
  42a146:	lea    rcx,[rip+0x1efd3]        # 449120 <fb_schema_table_missing@@Base+0x34a0>
  42a14d:	mov    edx,0x5c8
  42a152:	lea    rsi,[rip+0x1e947]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a159:	lea    rdi,[rip+0x1ea90]        # 448bf0 <fb_schema_table_missing@@Base+0x2f70>
  42a160:	call   4052e0 <__assert_fail@plt>
  42a165:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042a170 <flatcc_builder_create_offset_vector@@Base>:
  42a170:	endbr64 
  42a174:	push   r12
  42a176:	mov    r12,rsi
  42a179:	push   rbp
  42a17a:	mov    rbp,rdx
  42a17d:	push   rbx
  42a17e:	mov    rbx,rdi
  42a181:	call   429130 <flatcc_builder_start_offset_vector@@Base>
  42a186:	test   eax,eax
  42a188:	je     42a198 <flatcc_builder_create_offset_vector@@Base+0x28>
  42a18a:	pop    rbx
  42a18b:	pop    rbp
  42a18c:	xor    eax,eax
  42a18e:	pop    r12
  42a190:	ret    
  42a191:	nop    DWORD PTR [rax+0x0]
  42a198:	mov    rsi,rbp
  42a19b:	mov    rdi,rbx
  42a19e:	call   428be0 <flatcc_builder_extend_offset_vector@@Base>
  42a1a3:	test   rax,rax
  42a1a6:	je     42a18a <flatcc_builder_create_offset_vector@@Base+0x1a>
  42a1a8:	lea    rdx,[rbp*4+0x0]
  42a1b0:	mov    rsi,r12
  42a1b3:	mov    rdi,rax
  42a1b6:	call   405350 <memcpy@plt>
  42a1bb:	mov    rdi,rbx
  42a1be:	pop    rbx
  42a1bf:	pop    rbp
  42a1c0:	pop    r12
  42a1c2:	jmp    42a090 <flatcc_builder_end_offset_vector@@Base>
  42a1c7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a1d0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  42a1d0:	endbr64 
  42a1d4:	push   rbp
  42a1d5:	push   rbx
  42a1d6:	sub    rsp,0x8
  42a1da:	mov    rax,QWORD PTR [rdi+0x30]
  42a1de:	cmp    WORD PTR [rax+0xe],0x5
  42a1e3:	jne    42a286 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb6>
  42a1e9:	mov    rcx,rsi
  42a1ec:	mov    edx,DWORD PTR [rax+0x14]
  42a1ef:	mov    rsi,QWORD PTR [rdi+0x18]
  42a1f3:	mov    rbx,rdi
  42a1f6:	call   427990 <flatcc_builder_default_alloc@@Base+0x450>
  42a1fb:	mov    ebp,eax
  42a1fd:	test   eax,eax
  42a1ff:	jne    42a210 <flatcc_builder_end_offset_vector_for_unions@@Base+0x40>
  42a201:	add    rsp,0x8
  42a205:	pop    rbx
  42a206:	mov    eax,ebp
  42a208:	pop    rbp
  42a209:	ret    
  42a20a:	nop    WORD PTR [rax+rax*1+0x0]
  42a210:	mov    edx,DWORD PTR [rbx+0x20]
  42a213:	mov    rdi,QWORD PTR [rbx+0x18]
  42a217:	xor    esi,esi
  42a219:	call   4052f0 <memset@plt>
  42a21e:	mov    rax,QWORD PTR [rbx+0x30]
  42a222:	mov    edi,DWORD PTR [rbx+0x70]
  42a225:	mov    edx,DWORD PTR [rax+0x8]
  42a228:	mov    esi,DWORD PTR [rax]
  42a22a:	mov    ecx,DWORD PTR [rax+0x4]
  42a22d:	mov    DWORD PTR [rbx+0x20],edx
  42a230:	mov    rdx,rsi
  42a233:	sub    edi,edx
  42a235:	mov    DWORD PTR [rbx+0x28],esi
  42a238:	mov    edx,edi
  42a23a:	add    rsi,QWORD PTR [rbx+0x68]
  42a23e:	cmp    ecx,edi
  42a240:	cmovb  edx,ecx
  42a243:	mov    QWORD PTR [rbx+0x18],rsi
  42a247:	mov    DWORD PTR [rbx+0x24],edx
  42a24a:	movzx  edx,WORD PTR [rbx+0xea]
  42a251:	mov    DWORD PTR [rax+0x4],ecx
  42a254:	cmp    dx,WORD PTR [rbx+0xe8]
  42a25b:	jbe    42a264 <flatcc_builder_end_offset_vector_for_unions@@Base+0x94>
  42a25d:	mov    WORD PTR [rbx+0xe8],dx
  42a264:	movzx  edx,WORD PTR [rax+0xc]
  42a268:	dec    DWORD PTR [rbx+0x104]
  42a26e:	sub    rax,0x24
  42a272:	mov    QWORD PTR [rbx+0x30],rax
  42a276:	mov    WORD PTR [rbx+0xea],dx
  42a27d:	add    rsp,0x8
  42a281:	mov    eax,ebp
  42a283:	pop    rbx
  42a284:	pop    rbp
  42a285:	ret    
  42a286:	lea    rcx,[rip+0x1ee53]        # 4490e0 <fb_schema_table_missing@@Base+0x3460>
  42a28d:	mov    edx,0x5d5
  42a292:	lea    rsi,[rip+0x1e807]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a299:	lea    rdi,[rip+0x1e950]        # 448bf0 <fb_schema_table_missing@@Base+0x2f70>
  42a2a0:	call   4052e0 <__assert_fail@plt>
  42a2a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042a2b0 <flatcc_builder_offset_vector_edit@@Base>:
  42a2b0:	endbr64 
  42a2b4:	mov    rax,QWORD PTR [rdi+0x18]
  42a2b8:	ret    
  42a2b9:	nop    DWORD PTR [rax+0x0]

000000000042a2c0 <flatcc_builder_offset_vector_count@@Base>:
  42a2c0:	endbr64 
  42a2c4:	mov    rax,QWORD PTR [rdi+0x30]
  42a2c8:	mov    eax,DWORD PTR [rax+0x14]
  42a2cb:	ret    
  42a2cc:	nop    DWORD PTR [rax+0x0]

000000000042a2d0 <flatcc_builder_create_union_vector_direct@@Base>:
  42a2d0:	endbr64 
  42a2d4:	push   r13
  42a2d6:	mov    r13,rcx
  42a2d9:	push   r12
  42a2db:	mov    r12,rsi
  42a2de:	mov    rcx,r12
  42a2e1:	push   rbp
  42a2e2:	mov    rsi,rdx
  42a2e5:	mov    rdx,r13
  42a2e8:	push   rbx
  42a2e9:	mov    rbp,rdi
  42a2ec:	sub    rsp,0x8
  42a2f0:	call   427990 <flatcc_builder_default_alloc@@Base+0x450>
  42a2f5:	test   eax,eax
  42a2f7:	jne    42a310 <flatcc_builder_create_union_vector_direct@@Base+0x40>
  42a2f9:	add    rsp,0x8
  42a2fd:	pop    rbx
  42a2fe:	pop    rbp
  42a2ff:	pop    r12
  42a301:	xor    eax,eax
  42a303:	pop    r13
  42a305:	ret    
  42a306:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a310:	mov    rdx,r13
  42a313:	mov    rsi,r12
  42a316:	mov    rdi,rbp
  42a319:	mov    r9d,0xffffffff
  42a31f:	mov    r8d,0x1
  42a325:	mov    ecx,0x1
  42a32a:	mov    ebx,eax
  42a32c:	call   429de0 <flatcc_builder_create_vector@@Base>
  42a331:	mov    edx,eax
  42a333:	mov    rsi,rbx
  42a336:	shl    rsi,0x20
  42a33a:	mov    rax,rdx
  42a33d:	or     rax,rsi
  42a340:	test   edx,edx
  42a342:	mov    rdx,rax
  42a345:	mov    rax,rsi
  42a348:	cmovne rax,rdx
  42a34c:	add    rsp,0x8
  42a350:	pop    rbx
  42a351:	pop    rbp
  42a352:	pop    r12
  42a354:	pop    r13
  42a356:	ret    
  42a357:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a360 <flatcc_builder_create_union_vector@@Base>:
  42a360:	endbr64 
  42a364:	push   r13
  42a366:	push   r12
  42a368:	mov    r12,rdx
  42a36b:	push   rbp
  42a36c:	mov    rbp,rsi
  42a36f:	push   rbx
  42a370:	mov    rbx,rdi
  42a373:	sub    rsp,0x8
  42a377:	call   429130 <flatcc_builder_start_offset_vector@@Base>
  42a37c:	test   eax,eax
  42a37e:	je     42a390 <flatcc_builder_create_union_vector@@Base+0x30>
  42a380:	add    rsp,0x8
  42a384:	pop    rbx
  42a385:	pop    rbp
  42a386:	pop    r12
  42a388:	xor    eax,eax
  42a38a:	pop    r13
  42a38c:	ret    
  42a38d:	nop    DWORD PTR [rax]
  42a390:	mov    rsi,r12
  42a393:	mov    rdi,rbx
  42a396:	call   428be0 <flatcc_builder_extend_offset_vector@@Base>
  42a39b:	test   rax,rax
  42a39e:	je     42a380 <flatcc_builder_create_union_vector@@Base+0x20>
  42a3a0:	mov    r13d,DWORD PTR [rbx+0x20]
  42a3a4:	mov    rax,r13
  42a3a7:	add    eax,r12d
  42a3aa:	mov    DWORD PTR [rbx+0x20],eax
  42a3ad:	cmp    eax,DWORD PTR [rbx+0x24]
  42a3b0:	jae    42a480 <flatcc_builder_create_union_vector@@Base+0x120>
  42a3b6:	add    r13,QWORD PTR [rbx+0x18]
  42a3ba:	je     42a380 <flatcc_builder_create_union_vector@@Base+0x20>
  42a3bc:	mov    rdi,rbx
  42a3bf:	call   42a2b0 <flatcc_builder_offset_vector_edit@@Base>
  42a3c4:	test   r12,r12
  42a3c7:	je     42a3e9 <flatcc_builder_create_union_vector@@Base+0x89>
  42a3c9:	xor    edi,edi
  42a3cb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a3d0:	movzx  ecx,BYTE PTR [rbp+rdi*8+0x0]
  42a3d5:	mov    BYTE PTR [r13+rdi*1+0x0],cl
  42a3da:	mov    ecx,DWORD PTR [rbp+rdi*8+0x4]
  42a3de:	mov    DWORD PTR [rax+rdi*4],ecx
  42a3e1:	inc    rdi
  42a3e4:	cmp    r12,rdi
  42a3e7:	jne    42a3d0 <flatcc_builder_create_union_vector@@Base+0x70>
  42a3e9:	mov    rcx,r12
  42a3ec:	mov    rdx,rax
  42a3ef:	mov    rsi,r13
  42a3f2:	mov    rdi,rbx
  42a3f5:	call   42a2d0 <flatcc_builder_create_union_vector_direct@@Base>
  42a3fa:	mov    edx,DWORD PTR [rbx+0x20]
  42a3fd:	mov    rdi,QWORD PTR [rbx+0x18]
  42a401:	xor    esi,esi
  42a403:	mov    rbp,rax
  42a406:	call   4052f0 <memset@plt>
  42a40b:	mov    rax,QWORD PTR [rbx+0x30]
  42a40f:	mov    edx,DWORD PTR [rax+0x8]
  42a412:	mov    esi,DWORD PTR [rax]
  42a414:	mov    DWORD PTR [rbx+0x20],edx
  42a417:	mov    DWORD PTR [rbx+0x28],esi
  42a41a:	mov    rdx,rsi
  42a41d:	add    rsi,QWORD PTR [rbx+0x68]
  42a421:	mov    ecx,DWORD PTR [rax+0x4]
  42a424:	mov    QWORD PTR [rbx+0x18],rsi
  42a428:	mov    esi,DWORD PTR [rbx+0x70]
  42a42b:	sub    esi,edx
  42a42d:	mov    edx,esi
  42a42f:	cmp    ecx,esi
  42a431:	cmovb  edx,ecx
  42a434:	mov    DWORD PTR [rbx+0x24],edx
  42a437:	movzx  edx,WORD PTR [rbx+0xea]
  42a43e:	mov    DWORD PTR [rax+0x4],ecx
  42a441:	cmp    dx,WORD PTR [rbx+0xe8]
  42a448:	jbe    42a451 <flatcc_builder_create_union_vector@@Base+0xf1>
  42a44a:	mov    WORD PTR [rbx+0xe8],dx
  42a451:	movzx  edx,WORD PTR [rax+0xc]
  42a455:	sub    rax,0x24
  42a459:	mov    QWORD PTR [rbx+0x30],rax
  42a45d:	mov    WORD PTR [rbx+0xea],dx
  42a464:	dec    DWORD PTR [rbx+0x104]
  42a46a:	add    rsp,0x8
  42a46e:	pop    rbx
  42a46f:	mov    rax,rbp
  42a472:	pop    rbp
  42a473:	pop    r12
  42a475:	pop    r13
  42a477:	ret    
  42a478:	nop    DWORD PTR [rax+rax*1+0x0]
  42a480:	lea    esi,[rax+0x1]
  42a483:	mov    edx,0xfffffffc
  42a488:	mov    rdi,rbx
  42a48b:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42a490:	test   eax,eax
  42a492:	je     42a3b6 <flatcc_builder_create_union_vector@@Base+0x56>
  42a498:	jmp    42a380 <flatcc_builder_create_union_vector@@Base+0x20>
  42a49d:	nop    DWORD PTR [rax]

000000000042a4a0 <flatcc_builder_start_union_vector@@Base>:
  42a4a0:	endbr64 
  42a4a4:	push   rbx
  42a4a5:	mov    esi,0x4
  42a4aa:	mov    rbx,rdi
  42a4ad:	call   427870 <flatcc_builder_default_alloc@@Base+0x330>
  42a4b2:	test   eax,eax
  42a4b4:	jne    42a4f0 <flatcc_builder_start_union_vector@@Base+0x50>
  42a4b6:	mov    rcx,QWORD PTR [rbx+0x30]
  42a4ba:	xor    edx,edx
  42a4bc:	mov    QWORD PTR [rcx+0xe],0x80007
  42a4c4:	mov    WORD PTR [rcx+0x16],dx
  42a4c8:	mov    edx,DWORD PTR [rbx+0x28]
  42a4cb:	mov    rsi,rdx
  42a4ce:	add    rdx,QWORD PTR [rbx+0x68]
  42a4d2:	mov    QWORD PTR [rbx+0x18],rdx
  42a4d6:	mov    edx,DWORD PTR [rbx+0x70]
  42a4d9:	sub    edx,esi
  42a4db:	mov    esi,0xfffffffc
  42a4e0:	cmp    edx,esi
  42a4e2:	cmova  edx,esi
  42a4e5:	mov    DWORD PTR [rbx+0x24],edx
  42a4e8:	mov    DWORD PTR [rcx+0x4],esi
  42a4eb:	pop    rbx
  42a4ec:	ret    
  42a4ed:	nop    DWORD PTR [rax]
  42a4f0:	mov    eax,0xffffffff
  42a4f5:	pop    rbx
  42a4f6:	ret    
  42a4f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a500 <flatcc_builder_union_vector_edit@@Base>:
  42a500:	endbr64 
  42a504:	mov    rax,QWORD PTR [rdi+0x18]
  42a508:	ret    
  42a509:	nop    DWORD PTR [rax+0x0]

000000000042a510 <flatcc_builder_union_vector_count@@Base>:
  42a510:	endbr64 
  42a514:	mov    rax,QWORD PTR [rdi+0x30]
  42a518:	mov    eax,DWORD PTR [rax+0x14]
  42a51b:	ret    
  42a51c:	nop    DWORD PTR [rax+0x0]

000000000042a520 <flatcc_builder_end_union_vector@@Base>:
  42a520:	endbr64 
  42a524:	push   r13
  42a526:	push   r12
  42a528:	push   rbp
  42a529:	push   rbx
  42a52a:	sub    rsp,0x8
  42a52e:	mov    rax,QWORD PTR [rdi+0x30]
  42a532:	cmp    WORD PTR [rax+0xe],0x7
  42a537:	jne    42a65d <flatcc_builder_end_union_vector@@Base+0x13d>
  42a53d:	mov    rbx,rdi
  42a540:	call   42a510 <flatcc_builder_union_vector_count@@Base>
  42a545:	mov    ebp,DWORD PTR [rbx+0x20]
  42a548:	mov    r12,rax
  42a54b:	lea    eax,[rax+rax*4]
  42a54e:	add    eax,ebp
  42a550:	mov    DWORD PTR [rbx+0x20],eax
  42a553:	cmp    eax,DWORD PTR [rbx+0x24]
  42a556:	jae    42a638 <flatcc_builder_end_union_vector@@Base+0x118>
  42a55c:	add    rbp,QWORD PTR [rbx+0x18]
  42a560:	je     42a650 <flatcc_builder_end_union_vector@@Base+0x130>
  42a566:	mov    rdi,rbx
  42a569:	lea    r13,[rbp+r12*4+0x0]
  42a56e:	call   42a500 <flatcc_builder_union_vector_edit@@Base>
  42a573:	test   r12,r12
  42a576:	je     42a59c <flatcc_builder_end_union_vector@@Base+0x7c>
  42a578:	xor    edi,edi
  42a57a:	nop    WORD PTR [rax+rax*1+0x0]
  42a580:	movzx  r8d,BYTE PTR [rax+rdi*8]
  42a585:	mov    BYTE PTR [r13+rdi*1+0x0],r8b
  42a58a:	mov    r8d,DWORD PTR [rax+rdi*8+0x4]
  42a58f:	mov    DWORD PTR [rbp+rdi*4+0x0],r8d
  42a594:	inc    rdi
  42a597:	cmp    r12,rdi
  42a59a:	jne    42a580 <flatcc_builder_end_union_vector@@Base+0x60>
  42a59c:	mov    rcx,r12
  42a59f:	mov    rdx,rbp
  42a5a2:	mov    rsi,r13
  42a5a5:	mov    rdi,rbx
  42a5a8:	call   42a2d0 <flatcc_builder_create_union_vector_direct@@Base>
  42a5ad:	mov    edx,DWORD PTR [rbx+0x20]
  42a5b0:	mov    rdi,QWORD PTR [rbx+0x18]
  42a5b4:	xor    esi,esi
  42a5b6:	mov    rbp,rax
  42a5b9:	call   4052f0 <memset@plt>
  42a5be:	mov    rdx,QWORD PTR [rbx+0x30]
  42a5c2:	mov    esi,DWORD PTR [rdx]
  42a5c4:	mov    eax,DWORD PTR [rdx+0x8]
  42a5c7:	mov    rcx,rsi
  42a5ca:	mov    DWORD PTR [rbx+0x28],esi
  42a5cd:	add    rsi,QWORD PTR [rbx+0x68]
  42a5d1:	mov    DWORD PTR [rbx+0x20],eax
  42a5d4:	mov    eax,DWORD PTR [rdx+0x4]
  42a5d7:	mov    QWORD PTR [rbx+0x18],rsi
  42a5db:	mov    esi,DWORD PTR [rbx+0x70]
  42a5de:	sub    esi,ecx
  42a5e0:	cmp    eax,esi
  42a5e2:	mov    ecx,esi
  42a5e4:	cmovb  ecx,eax
  42a5e7:	mov    DWORD PTR [rbx+0x24],ecx
  42a5ea:	mov    DWORD PTR [rdx+0x4],eax
  42a5ed:	movzx  eax,WORD PTR [rbx+0xea]
  42a5f4:	cmp    ax,WORD PTR [rbx+0xe8]
  42a5fb:	ja     42a628 <flatcc_builder_end_union_vector@@Base+0x108>
  42a5fd:	movzx  eax,WORD PTR [rdx+0xc]
  42a601:	dec    DWORD PTR [rbx+0x104]
  42a607:	sub    rdx,0x24
  42a60b:	mov    WORD PTR [rbx+0xea],ax
  42a612:	mov    QWORD PTR [rbx+0x30],rdx
  42a616:	add    rsp,0x8
  42a61a:	mov    rax,rbp
  42a61d:	pop    rbx
  42a61e:	pop    rbp
  42a61f:	pop    r12
  42a621:	pop    r13
  42a623:	ret    
  42a624:	nop    DWORD PTR [rax+0x0]
  42a628:	mov    WORD PTR [rbx+0xe8],ax
  42a62f:	jmp    42a5fd <flatcc_builder_end_union_vector@@Base+0xdd>
  42a631:	nop    DWORD PTR [rax+0x0]
  42a638:	lea    esi,[rax+0x1]
  42a63b:	mov    edx,0xfffffffc
  42a640:	mov    rdi,rbx
  42a643:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42a648:	test   eax,eax
  42a64a:	je     42a55c <flatcc_builder_end_union_vector@@Base+0x3c>
  42a650:	add    rsp,0x8
  42a654:	pop    rbx
  42a655:	pop    rbp
  42a656:	pop    r12
  42a658:	xor    eax,eax
  42a65a:	pop    r13
  42a65c:	ret    
  42a65d:	lea    rcx,[rip+0x1e9fc]        # 449060 <fb_schema_table_missing@@Base+0x33e0>
  42a664:	mov    edx,0x651
  42a669:	lea    rsi,[rip+0x1e430]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a670:	lea    rdi,[rip+0x1e6a1]        # 448d18 <fb_schema_table_missing@@Base+0x3098>
  42a677:	call   4052e0 <__assert_fail@plt>
  42a67c:	nop    DWORD PTR [rax+0x0]

000000000042a680 <flatcc_builder_extend_union_vector@@Base>:
  42a680:	endbr64 
  42a684:	push   rbp
  42a685:	mov    edx,esi
  42a687:	push   rbx
  42a688:	sub    rsp,0x8
  42a68c:	mov    rax,QWORD PTR [rdi+0x30]
  42a690:	add    edx,DWORD PTR [rax+0x14]
  42a693:	jb     42a6d5 <flatcc_builder_extend_union_vector@@Base+0x55>
  42a695:	cmp    edx,0x1fffffff
  42a69b:	ja     42a6d5 <flatcc_builder_extend_union_vector@@Base+0x55>
  42a69d:	mov    ebp,DWORD PTR [rdi+0x20]
  42a6a0:	mov    DWORD PTR [rax+0x14],edx
  42a6a3:	lea    eax,[rbp+rsi*8+0x0]
  42a6a7:	mov    rbx,rdi
  42a6aa:	mov    DWORD PTR [rdi+0x20],eax
  42a6ad:	cmp    eax,DWORD PTR [rdi+0x24]
  42a6b0:	jae    42a6c0 <flatcc_builder_extend_union_vector@@Base+0x40>
  42a6b2:	mov    rax,QWORD PTR [rbx+0x18]
  42a6b6:	add    rax,rbp
  42a6b9:	add    rsp,0x8
  42a6bd:	pop    rbx
  42a6be:	pop    rbp
  42a6bf:	ret    
  42a6c0:	lea    esi,[rax+0x1]
  42a6c3:	mov    edx,0xfffffffc
  42a6c8:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42a6cd:	test   eax,eax
  42a6cf:	je     42a6b2 <flatcc_builder_extend_union_vector@@Base+0x32>
  42a6d1:	xor    eax,eax
  42a6d3:	jmp    42a6b9 <flatcc_builder_extend_union_vector@@Base+0x39>
  42a6d5:	call   427840 <flatcc_builder_default_alloc@@Base+0x300>
  42a6da:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a6e0 <flatcc_builder_truncate_union_vector@@Base>:
  42a6e0:	endbr64 
  42a6e4:	sub    rsp,0x8
  42a6e8:	mov    rax,QWORD PTR [rdi+0x30]
  42a6ec:	cmp    WORD PTR [rax+0xe],0x7
  42a6f1:	jne    42a722 <flatcc_builder_truncate_union_vector@@Base+0x42>
  42a6f3:	mov    edx,DWORD PTR [rax+0x14]
  42a6f6:	cmp    edx,esi
  42a6f8:	jb     42a741 <flatcc_builder_truncate_union_vector@@Base+0x61>
  42a6fa:	sub    edx,esi
  42a6fc:	mov    DWORD PTR [rax+0x14],edx
  42a6ff:	imul   esi,DWORD PTR [rax+0x10]
  42a703:	mov    eax,DWORD PTR [rdi+0x20]
  42a706:	mov    edx,esi
  42a708:	sub    eax,esi
  42a70a:	mov    DWORD PTR [rdi+0x20],eax
  42a70d:	add    rax,QWORD PTR [rdi+0x18]
  42a711:	mov    rdi,rax
  42a714:	xor    esi,esi
  42a716:	call   4052f0 <memset@plt>
  42a71b:	xor    eax,eax
  42a71d:	add    rsp,0x8
  42a721:	ret    
  42a722:	lea    rcx,[rip+0x1e8f7]        # 449020 <fb_schema_table_missing@@Base+0x33a0>
  42a729:	mov    edx,0x681
  42a72e:	lea    rsi,[rip+0x1e36b]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a735:	lea    rdi,[rip+0x1e5dc]        # 448d18 <fb_schema_table_missing@@Base+0x3098>
  42a73c:	call   4052e0 <__assert_fail@plt>
  42a741:	lea    rcx,[rip+0x1e8d8]        # 449020 <fb_schema_table_missing@@Base+0x33a0>
  42a748:	mov    edx,0x682
  42a74d:	lea    rsi,[rip+0x1e34c]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a754:	lea    rdi,[rip+0x1e525]        # 448c80 <fb_schema_table_missing@@Base+0x3000>
  42a75b:	call   4052e0 <__assert_fail@plt>

000000000042a760 <flatcc_builder_union_vector_push@@Base>:
  42a760:	endbr64 
  42a764:	push   r12
  42a766:	push   rbp
  42a767:	push   rbx
  42a768:	mov    rdx,QWORD PTR [rdi+0x30]
  42a76c:	cmp    WORD PTR [rdx+0xe],0x7
  42a771:	jne    42a7c8 <flatcc_builder_union_vector_push@@Base+0x68>
  42a773:	mov    eax,DWORD PTR [rdx+0x14]
  42a776:	cmp    eax,0x1fffffff
  42a77b:	je     42a7c1 <flatcc_builder_union_vector_push@@Base+0x61>
  42a77d:	mov    ebp,DWORD PTR [rdi+0x20]
  42a780:	inc    eax
  42a782:	mov    DWORD PTR [rdx+0x14],eax
  42a785:	lea    edx,[rbp+0x8]
  42a788:	mov    rbx,rdi
  42a78b:	mov    r12,rsi
  42a78e:	mov    DWORD PTR [rdi+0x20],edx
  42a791:	cmp    edx,DWORD PTR [rdi+0x24]
  42a794:	jae    42a7b0 <flatcc_builder_union_vector_push@@Base+0x50>
  42a796:	mov    rax,rbp
  42a799:	add    rax,QWORD PTR [rbx+0x18]
  42a79d:	je     42a7a2 <flatcc_builder_union_vector_push@@Base+0x42>
  42a79f:	mov    QWORD PTR [rax],r12
  42a7a2:	pop    rbx
  42a7a3:	pop    rbp
  42a7a4:	pop    r12
  42a7a6:	ret    
  42a7a7:	nop    WORD PTR [rax+rax*1+0x0]
  42a7b0:	lea    esi,[rbp+0x9]
  42a7b3:	mov    edx,0xfffffffc
  42a7b8:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42a7bd:	test   eax,eax
  42a7bf:	je     42a796 <flatcc_builder_union_vector_push@@Base+0x36>
  42a7c1:	pop    rbx
  42a7c2:	pop    rbp
  42a7c3:	xor    eax,eax
  42a7c5:	pop    r12
  42a7c7:	ret    
  42a7c8:	lea    rcx,[rip+0x1e811]        # 448fe0 <fb_schema_table_missing@@Base+0x3360>
  42a7cf:	mov    edx,0x68d
  42a7d4:	lea    rsi,[rip+0x1e2c5]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a7db:	lea    rdi,[rip+0x1e536]        # 448d18 <fb_schema_table_missing@@Base+0x3098>
  42a7e2:	call   4052e0 <__assert_fail@plt>
  42a7e7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a7f0 <flatcc_builder_append_union_vector@@Base>:
  42a7f0:	endbr64 
  42a7f4:	push   r13
  42a7f6:	push   r12
  42a7f8:	push   rbp
  42a7f9:	push   rbx
  42a7fa:	sub    rsp,0x8
  42a7fe:	mov    rax,QWORD PTR [rdi+0x30]
  42a802:	cmp    WORD PTR [rax+0xe],0x7
  42a807:	jne    42a876 <flatcc_builder_append_union_vector@@Base+0x86>
  42a809:	mov    ecx,edx
  42a80b:	add    ecx,DWORD PTR [rax+0x14]
  42a80e:	jb     42a895 <flatcc_builder_append_union_vector@@Base+0xa5>
  42a814:	cmp    ecx,0x1fffffff
  42a81a:	ja     42a895 <flatcc_builder_append_union_vector@@Base+0xa5>
  42a81c:	mov    r12d,DWORD PTR [rdi+0x20]
  42a820:	lea    ebx,[rdx*8+0x0]
  42a827:	mov    rdx,r12
  42a82a:	add    edx,ebx
  42a82c:	mov    DWORD PTR [rax+0x14],ecx
  42a82f:	mov    rbp,rdi
  42a832:	mov    r13,rsi
  42a835:	mov    DWORD PTR [rdi+0x20],edx
  42a838:	cmp    edx,DWORD PTR [rdi+0x24]
  42a83b:	jae    42a860 <flatcc_builder_append_union_vector@@Base+0x70>
  42a83d:	add    r12,QWORD PTR [rbp+0x18]
  42a841:	je     42a850 <flatcc_builder_append_union_vector@@Base+0x60>
  42a843:	mov    edx,ebx
  42a845:	mov    rsi,r13
  42a848:	mov    rdi,r12
  42a84b:	call   405350 <memcpy@plt>
  42a850:	add    rsp,0x8
  42a854:	pop    rbx
  42a855:	pop    rbp
  42a856:	mov    rax,r12
  42a859:	pop    r12
  42a85b:	pop    r13
  42a85d:	ret    
  42a85e:	xchg   ax,ax
  42a860:	lea    esi,[rdx+0x1]
  42a863:	mov    edx,0xfffffffc
  42a868:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42a86d:	test   eax,eax
  42a86f:	je     42a83d <flatcc_builder_append_union_vector@@Base+0x4d>
  42a871:	xor    r12d,r12d
  42a874:	jmp    42a850 <flatcc_builder_append_union_vector@@Base+0x60>
  42a876:	lea    rcx,[rip+0x1e723]        # 448fa0 <fb_schema_table_missing@@Base+0x3320>
  42a87d:	mov    edx,0x69c
  42a882:	lea    rsi,[rip+0x1e217]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a889:	lea    rdi,[rip+0x1e488]        # 448d18 <fb_schema_table_missing@@Base+0x3098>
  42a890:	call   4052e0 <__assert_fail@plt>
  42a895:	call   427840 <flatcc_builder_default_alloc@@Base+0x300>
  42a89a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a8a0 <flatcc_builder_create_string@@Base>:
  42a8a0:	endbr64 
  42a8a4:	push   rbp
  42a8a5:	push   rbx
  42a8a6:	sub    rsp,0xb8
  42a8ad:	mov    rax,QWORD PTR fs:0x28
  42a8b6:	mov    QWORD PTR [rsp+0xa8],rax
  42a8be:	xor    eax,eax
  42a8c0:	mov    eax,0xffffffff
  42a8c5:	cmp    rdx,rax
  42a8c8:	ja     42a990 <flatcc_builder_create_string@@Base+0xf0>
  42a8ce:	mov    rbx,rdi
  42a8d1:	mov    edi,DWORD PTR [rdi+0xf0]
  42a8d7:	lea    rcx,[rsp+0xc]
  42a8dc:	lea    eax,[rdi-0x1]
  42a8df:	sub    eax,edx
  42a8e1:	and    eax,0x3
  42a8e4:	mov    DWORD PTR [rsp+0xc],edx
  42a8e8:	inc    eax
  42a8ea:	mov    QWORD PTR [rsp+0x20],rcx
  42a8ef:	mov    QWORD PTR [rsp+0x28],0x4
  42a8f8:	test   rdx,rdx
  42a8fb:	jne    42a970 <flatcc_builder_create_string@@Base+0xd0>
  42a8fd:	mov    edx,0x2
  42a902:	mov    ecx,0x1
  42a907:	mov    r8d,0x4
  42a90d:	add    r8,rax
  42a910:	mov    rsi,0x449580
  42a917:	mov    ebp,edi
  42a919:	shl    rcx,0x4
  42a91d:	sub    ebp,r8d
  42a920:	mov    QWORD PTR [rsp+0x10],r8
  42a925:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  42a92a:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  42a92f:	mov    DWORD PTR [rsp+0x18],edx
  42a933:	cmp    edi,ebp
  42a935:	jle    42a994 <flatcc_builder_create_string@@Base+0xf4>
  42a937:	mov    rdi,QWORD PTR [rbx+0x38]
  42a93b:	lea    rsi,[rsp+0x20]
  42a940:	mov    ecx,ebp
  42a942:	call   QWORD PTR [rbx+0x48]
  42a945:	test   eax,eax
  42a947:	jne    42a9b8 <flatcc_builder_create_string@@Base+0x118>
  42a949:	mov    DWORD PTR [rbx+0xf0],ebp
  42a94f:	mov    rbx,QWORD PTR [rsp+0xa8]
  42a957:	xor    rbx,QWORD PTR fs:0x28
  42a960:	mov    eax,ebp
  42a962:	jne    42a9b3 <flatcc_builder_create_string@@Base+0x113>
  42a964:	add    rsp,0xb8
  42a96b:	pop    rbx
  42a96c:	pop    rbp
  42a96d:	ret    
  42a96e:	xchg   ax,ax
  42a970:	lea    r8,[rdx+0x4]
  42a974:	mov    QWORD PTR [rsp+0x38],rdx
  42a979:	mov    QWORD PTR [rsp+0x30],rsi
  42a97e:	mov    edx,0x3
  42a983:	mov    ecx,0x2
  42a988:	jmp    42a90d <flatcc_builder_create_string@@Base+0x6d>
  42a98d:	nop    DWORD PTR [rax]
  42a990:	xor    ebp,ebp
  42a992:	jmp    42a94f <flatcc_builder_create_string@@Base+0xaf>
  42a994:	lea    rcx,[rip+0x1eb35]        # 4494d0 <fb_schema_table_missing@@Base+0x3850>
  42a99b:	mov    edx,0x287
  42a9a0:	lea    rsi,[rip+0x1e0f9]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42a9a7:	lea    rdi,[rip+0xc16b]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  42a9ae:	call   4052e0 <__assert_fail@plt>
  42a9b3:	call   4052c0 <__stack_chk_fail@plt>
  42a9b8:	call   427810 <flatcc_builder_default_alloc@@Base+0x2d0>
  42a9bd:	nop    DWORD PTR [rax]

000000000042a9c0 <flatcc_builder_create_string_str@@Base>:
  42a9c0:	endbr64 
  42a9c4:	push   rbp
  42a9c5:	mov    rbp,rdi
  42a9c8:	mov    rdi,rsi
  42a9cb:	push   rbx
  42a9cc:	mov    rbx,rsi
  42a9cf:	sub    rsp,0x8
  42a9d3:	call   4052b0 <strlen@plt>
  42a9d8:	add    rsp,0x8
  42a9dc:	mov    rsi,rbx
  42a9df:	pop    rbx
  42a9e0:	mov    rdi,rbp
  42a9e3:	mov    rdx,rax
  42a9e6:	pop    rbp
  42a9e7:	jmp    42a8a0 <flatcc_builder_create_string@@Base>
  42a9ec:	nop    DWORD PTR [rax+0x0]

000000000042a9f0 <flatcc_builder_create_string_strn@@Base>:
  42a9f0:	endbr64 
  42a9f4:	push   r12
  42a9f6:	mov    r12,rdi
  42a9f9:	push   rbp
  42a9fa:	mov    rbp,rsi
  42a9fd:	mov    rdi,rbp
  42aa00:	push   rbx
  42aa01:	xor    esi,esi
  42aa03:	mov    rbx,rdx
  42aa06:	call   405300 <memchr@plt>
  42aa0b:	mov    rdx,rax
  42aa0e:	sub    rdx,rbp
  42aa11:	test   rax,rax
  42aa14:	cmovne rbx,rdx
  42aa18:	mov    rsi,rbp
  42aa1b:	mov    rdx,rbx
  42aa1e:	pop    rbx
  42aa1f:	pop    rbp
  42aa20:	mov    rdi,r12
  42aa23:	pop    r12
  42aa25:	jmp    42a8a0 <flatcc_builder_create_string@@Base>
  42aa2a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042aa30 <flatcc_builder_end_string@@Base>:
  42aa30:	endbr64 
  42aa34:	push   rbp
  42aa35:	push   rbx
  42aa36:	sub    rsp,0x8
  42aa3a:	mov    rax,QWORD PTR [rdi+0x30]
  42aa3e:	cmp    WORD PTR [rax+0xe],0x6
  42aa43:	jne    42ab05 <flatcc_builder_end_string@@Base+0xd5>
  42aa49:	mov    edx,DWORD PTR [rdi+0x20]
  42aa4c:	mov    rbx,rdi
  42aa4f:	cmp    DWORD PTR [rax+0x14],edx
  42aa52:	jne    42aae6 <flatcc_builder_end_string@@Base+0xb6>
  42aa58:	mov    rsi,QWORD PTR [rdi+0x18]
  42aa5c:	call   42a8a0 <flatcc_builder_create_string@@Base>
  42aa61:	mov    ebp,eax
  42aa63:	test   eax,eax
  42aa65:	jne    42aa70 <flatcc_builder_end_string@@Base+0x40>
  42aa67:	add    rsp,0x8
  42aa6b:	pop    rbx
  42aa6c:	mov    eax,ebp
  42aa6e:	pop    rbp
  42aa6f:	ret    
  42aa70:	mov    edx,DWORD PTR [rbx+0x20]
  42aa73:	mov    rdi,QWORD PTR [rbx+0x18]
  42aa77:	xor    esi,esi
  42aa79:	call   4052f0 <memset@plt>
  42aa7e:	mov    rax,QWORD PTR [rbx+0x30]
  42aa82:	mov    edi,DWORD PTR [rbx+0x70]
  42aa85:	mov    edx,DWORD PTR [rax+0x8]
  42aa88:	mov    esi,DWORD PTR [rax]
  42aa8a:	mov    ecx,DWORD PTR [rax+0x4]
  42aa8d:	mov    DWORD PTR [rbx+0x20],edx
  42aa90:	mov    rdx,rsi
  42aa93:	sub    edi,edx
  42aa95:	mov    DWORD PTR [rbx+0x28],esi
  42aa98:	mov    edx,edi
  42aa9a:	add    rsi,QWORD PTR [rbx+0x68]
  42aa9e:	cmp    ecx,edi
  42aaa0:	cmovb  edx,ecx
  42aaa3:	mov    QWORD PTR [rbx+0x18],rsi
  42aaa7:	mov    DWORD PTR [rbx+0x24],edx
  42aaaa:	movzx  edx,WORD PTR [rbx+0xea]
  42aab1:	mov    DWORD PTR [rax+0x4],ecx
  42aab4:	cmp    dx,WORD PTR [rbx+0xe8]
  42aabb:	jbe    42aac4 <flatcc_builder_end_string@@Base+0x94>
  42aabd:	mov    WORD PTR [rbx+0xe8],dx
  42aac4:	movzx  edx,WORD PTR [rax+0xc]
  42aac8:	dec    DWORD PTR [rbx+0x104]
  42aace:	sub    rax,0x24
  42aad2:	mov    QWORD PTR [rbx+0x30],rax
  42aad6:	mov    WORD PTR [rbx+0xea],dx
  42aadd:	add    rsp,0x8
  42aae1:	mov    eax,ebp
  42aae3:	pop    rbx
  42aae4:	pop    rbp
  42aae5:	ret    
  42aae6:	lea    rcx,[rip+0x1e493]        # 448f80 <fb_schema_table_missing@@Base+0x3300>
  42aaed:	mov    edx,0x6c5
  42aaf2:	lea    rsi,[rip+0x1dfa7]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42aaf9:	lea    rdi,[rip+0x1e250]        # 448d50 <fb_schema_table_missing@@Base+0x30d0>
  42ab00:	call   4052e0 <__assert_fail@plt>
  42ab05:	lea    rcx,[rip+0x1e474]        # 448f80 <fb_schema_table_missing@@Base+0x3300>
  42ab0c:	mov    edx,0x6c4
  42ab11:	lea    rsi,[rip+0x1df88]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42ab18:	lea    rdi,[rip+0x1e109]        # 448c28 <fb_schema_table_missing@@Base+0x2fa8>
  42ab1f:	call   4052e0 <__assert_fail@plt>
  42ab24:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ab2f:	nop

000000000042ab30 <flatcc_builder_string_edit@@Base>:
  42ab30:	endbr64 
  42ab34:	mov    rax,QWORD PTR [rdi+0x18]
  42ab38:	ret    
  42ab39:	nop    DWORD PTR [rax+0x0]

000000000042ab40 <flatcc_builder_string_len@@Base>:
  42ab40:	endbr64 
  42ab44:	mov    rax,QWORD PTR [rdi+0x30]
  42ab48:	mov    eax,DWORD PTR [rax+0x14]
  42ab4b:	ret    
  42ab4c:	nop    DWORD PTR [rax+0x0]

000000000042ab50 <flatcc_builder_table_add@@Base>:
  42ab50:	endbr64 
  42ab54:	push   r13
  42ab56:	push   r12
  42ab58:	push   rbp
  42ab59:	push   rbx
  42ab5a:	sub    rsp,0x8
  42ab5e:	mov    rax,QWORD PTR [rdi+0x30]
  42ab62:	cmp    WORD PTR [rax+0xe],0x3
  42ab67:	jne    42ac34 <flatcc_builder_table_add@@Base+0xe4>
  42ab6d:	mov    r12d,esi
  42ab70:	cmp    esi,0x7ffc
  42ab76:	ja     42ac72 <flatcc_builder_table_add@@Base+0x122>
  42ab7c:	mov    rbx,rdi
  42ab7f:	cmp    WORD PTR [rdi+0xea],cx
  42ab86:	jb     42abf0 <flatcc_builder_table_add@@Base+0xa0>
  42ab88:	movsxd r13,r12d
  42ab8b:	mov    rsi,QWORD PTR [rbx+0x8]
  42ab8f:	add    r13,r13
  42ab92:	add    rsi,r13
  42ab95:	cmp    WORD PTR [rsi],0x0
  42ab99:	jne    42ac53 <flatcc_builder_table_add@@Base+0x103>
  42ab9f:	mov    eax,DWORD PTR [rbx+0x14]
  42aba2:	movzx  ecx,cx
  42aba5:	xor    eax,r12d
  42aba8:	imul   eax,eax,0x9e3779b1
  42abae:	xor    eax,edx
  42abb0:	imul   eax,eax,0x9e3779b1
  42abb6:	mov    DWORD PTR [rbx+0x14],eax
  42abb9:	mov    eax,DWORD PTR [rbx+0x20]
  42abbc:	lea    ebp,[rcx+rax*1-0x1]
  42abc0:	neg    ecx
  42abc2:	and    ebp,ecx
  42abc4:	add    edx,ebp
  42abc6:	mov    DWORD PTR [rbx+0x20],edx
  42abc9:	cmp    edx,DWORD PTR [rbx+0x24]
  42abcc:	jae    42ac10 <flatcc_builder_table_add@@Base+0xc0>
  42abce:	lea    eax,[rbp+0x4]
  42abd1:	mov    WORD PTR [rsi],ax
  42abd4:	cmp    r12w,WORD PTR [rbx+0x10]
  42abd9:	jae    42ac00 <flatcc_builder_table_add@@Base+0xb0>
  42abdb:	mov    eax,ebp
  42abdd:	add    rax,QWORD PTR [rbx+0x18]
  42abe1:	add    rsp,0x8
  42abe5:	pop    rbx
  42abe6:	pop    rbp
  42abe7:	pop    r12
  42abe9:	pop    r13
  42abeb:	ret    
  42abec:	nop    DWORD PTR [rax+0x0]
  42abf0:	mov    WORD PTR [rdi+0xea],cx
  42abf7:	jmp    42ab88 <flatcc_builder_table_add@@Base+0x38>
  42abf9:	nop    DWORD PTR [rax+0x0]
  42ac00:	inc    r12d
  42ac03:	mov    WORD PTR [rbx+0x10],r12w
  42ac08:	jmp    42abdb <flatcc_builder_table_add@@Base+0x8b>
  42ac0a:	nop    WORD PTR [rax+rax*1+0x0]
  42ac10:	lea    esi,[rdx+0x1]
  42ac13:	mov    rdi,rbx
  42ac16:	mov    edx,0xfffc
  42ac1b:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42ac20:	test   eax,eax
  42ac22:	jne    42ac30 <flatcc_builder_table_add@@Base+0xe0>
  42ac24:	mov    rsi,QWORD PTR [rbx+0x8]
  42ac28:	add    rsi,r13
  42ac2b:	jmp    42abce <flatcc_builder_table_add@@Base+0x7e>
  42ac2d:	nop    DWORD PTR [rax]
  42ac30:	xor    eax,eax
  42ac32:	jmp    42abe1 <flatcc_builder_table_add@@Base+0x91>
  42ac34:	lea    rcx,[rip+0x1e325]        # 448f60 <fb_schema_table_missing@@Base+0x32e0>
  42ac3b:	mov    edx,0x6ed
  42ac40:	lea    rsi,[rip+0x1de59]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42ac47:	lea    rdi,[rip+0x1e09a]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  42ac4e:	call   4052e0 <__assert_fail@plt>
  42ac53:	lea    rcx,[rip+0x1e306]        # 448f60 <fb_schema_table_missing@@Base+0x32e0>
  42ac5a:	mov    edx,0x6f8
  42ac5f:	lea    rsi,[rip+0x1de3a]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42ac66:	lea    rdi,[rip+0xbeac]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  42ac6d:	call   4052e0 <__assert_fail@plt>
  42ac72:	lea    rcx,[rip+0x1e2e7]        # 448f60 <fb_schema_table_missing@@Base+0x32e0>
  42ac79:	mov    edx,0x6ee
  42ac7e:	lea    rsi,[rip+0x1de1b]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42ac85:	lea    rdi,[rip+0x1e0ec]        # 448d78 <fb_schema_table_missing@@Base+0x30f8>
  42ac8c:	call   4052e0 <__assert_fail@plt>
  42ac91:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ac9c:	nop    DWORD PTR [rax+0x0]

000000000042aca0 <flatcc_builder_table_edit@@Base>:
  42aca0:	endbr64 
  42aca4:	mov    rax,QWORD PTR [rdi+0x30]
  42aca8:	cmp    WORD PTR [rax+0xe],0x3
  42acad:	jne    42acba <flatcc_builder_table_edit@@Base+0x1a>
  42acaf:	mov    eax,DWORD PTR [rdi+0x20]
  42acb2:	sub    rax,rsi
  42acb5:	add    rax,QWORD PTR [rdi+0x18]
  42acb9:	ret    
  42acba:	push   rax
  42acbb:	lea    rcx,[rip+0x1e27e]        # 448f40 <fb_schema_table_missing@@Base+0x32c0>
  42acc2:	mov    edx,0x702
  42acc7:	lea    rsi,[rip+0x1ddd2]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42acce:	lea    rdi,[rip+0x1e013]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  42acd5:	call   4052e0 <__assert_fail@plt>
  42acda:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ace0 <flatcc_builder_table_add_copy@@Base>:
  42ace0:	endbr64 
  42ace4:	push   rbp
  42ace5:	mov    rbp,rdx
  42ace8:	push   rbx
  42ace9:	mov    rbx,rcx
  42acec:	mov    rdx,rbx
  42acef:	movzx  ecx,r8w
  42acf3:	sub    rsp,0x8
  42acf7:	call   42ab50 <flatcc_builder_table_add@@Base>
  42acfc:	mov    rcx,rax
  42acff:	test   rax,rax
  42ad02:	je     42ad15 <flatcc_builder_table_add_copy@@Base+0x35>
  42ad04:	mov    rdx,rbx
  42ad07:	mov    rsi,rbp
  42ad0a:	mov    rdi,rax
  42ad0d:	call   405350 <memcpy@plt>
  42ad12:	mov    rcx,rax
  42ad15:	add    rsp,0x8
  42ad19:	pop    rbx
  42ad1a:	mov    rax,rcx
  42ad1d:	pop    rbp
  42ad1e:	ret    
  42ad1f:	nop

000000000042ad20 <flatcc_builder_table_add_offset@@Base>:
  42ad20:	endbr64 
  42ad24:	push   r13
  42ad26:	push   r12
  42ad28:	push   rbp
  42ad29:	push   rbx
  42ad2a:	sub    rsp,0x8
  42ad2e:	mov    rax,QWORD PTR [rdi+0x30]
  42ad32:	cmp    WORD PTR [rax+0xe],0x3
  42ad37:	jne    42adf4 <flatcc_builder_table_add_offset@@Base+0xd4>
  42ad3d:	mov    r12d,esi
  42ad40:	cmp    esi,0x7ffc
  42ad46:	ja     42ae32 <flatcc_builder_table_add_offset@@Base+0x112>
  42ad4c:	movsxd r13,esi
  42ad4f:	mov    rdx,QWORD PTR [rdi+0x8]
  42ad53:	add    r13,r13
  42ad56:	add    rdx,r13
  42ad59:	cmp    WORD PTR [rdx],0x0
  42ad5d:	mov    rbx,rdi
  42ad60:	jne    42ae13 <flatcc_builder_table_add_offset@@Base+0xf3>
  42ad66:	mov    eax,DWORD PTR [rdi+0x14]
  42ad69:	xor    eax,esi
  42ad6b:	imul   eax,eax,0x9e3779b1
  42ad71:	xor    eax,0x4
  42ad74:	imul   eax,eax,0x9e3779b1
  42ad7a:	mov    DWORD PTR [rdi+0x14],eax
  42ad7d:	mov    eax,DWORD PTR [rdi+0x20]
  42ad80:	lea    ebp,[rax+0x3]
  42ad83:	and    ebp,0xfffffffc
  42ad86:	lea    esi,[rbp+0x4]
  42ad89:	mov    DWORD PTR [rdi+0x20],esi
  42ad8c:	cmp    esi,DWORD PTR [rdi+0x24]
  42ad8f:	ja     42add0 <flatcc_builder_table_add_offset@@Base+0xb0>
  42ad91:	lea    eax,[rbp+0x4]
  42ad94:	mov    WORD PTR [rdx],ax
  42ad97:	cmp    r12w,WORD PTR [rbx+0x10]
  42ad9c:	jae    42adc0 <flatcc_builder_table_add_offset@@Base+0xa0>
  42ad9e:	mov    rax,QWORD PTR [rbx]
  42ada1:	lea    rdx,[rax+0x2]
  42ada5:	mov    QWORD PTR [rbx],rdx
  42ada8:	mov    WORD PTR [rax],bp
  42adab:	mov    eax,ebp
  42adad:	add    rax,QWORD PTR [rbx+0x18]
  42adb1:	add    rsp,0x8
  42adb5:	pop    rbx
  42adb6:	pop    rbp
  42adb7:	pop    r12
  42adb9:	pop    r13
  42adbb:	ret    
  42adbc:	nop    DWORD PTR [rax+0x0]
  42adc0:	lea    esi,[r12+0x1]
  42adc5:	mov    WORD PTR [rbx+0x10],si
  42adc9:	jmp    42ad9e <flatcc_builder_table_add_offset@@Base+0x7e>
  42adcb:	nop    DWORD PTR [rax+rax*1+0x0]
  42add0:	mov    edx,0xfffc
  42add5:	call   4274e0 <__flatcc_fb_coerce_scalar_type@@Base+0x7b0>
  42adda:	test   eax,eax
  42addc:	jne    42adf0 <flatcc_builder_table_add_offset@@Base+0xd0>
  42adde:	mov    rdx,QWORD PTR [rbx+0x8]
  42ade2:	add    rdx,r13
  42ade5:	jmp    42ad91 <flatcc_builder_table_add_offset@@Base+0x71>
  42ade7:	nop    WORD PTR [rax+rax*1+0x0]
  42adf0:	xor    eax,eax
  42adf2:	jmp    42adb1 <flatcc_builder_table_add_offset@@Base+0x91>
  42adf4:	lea    rcx,[rip+0x1e125]        # 448f20 <fb_schema_table_missing@@Base+0x32a0>
  42adfb:	mov    edx,0x713
  42ae00:	lea    rsi,[rip+0x1dc99]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42ae07:	lea    rdi,[rip+0x1deda]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  42ae0e:	call   4052e0 <__assert_fail@plt>
  42ae13:	lea    rcx,[rip+0x1e106]        # 448f20 <fb_schema_table_missing@@Base+0x32a0>
  42ae1a:	mov    edx,0x71b
  42ae1f:	lea    rsi,[rip+0x1dc7a]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42ae26:	lea    rdi,[rip+0xbcec]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  42ae2d:	call   4052e0 <__assert_fail@plt>
  42ae32:	lea    rcx,[rip+0x1e0e7]        # 448f20 <fb_schema_table_missing@@Base+0x32a0>
  42ae39:	mov    edx,0x714
  42ae3e:	lea    rsi,[rip+0x1dc5b]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42ae45:	lea    rdi,[rip+0x1df2c]        # 448d78 <fb_schema_table_missing@@Base+0x30f8>
  42ae4c:	call   4052e0 <__assert_fail@plt>
  42ae51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ae5c:	nop    DWORD PTR [rax+0x0]

000000000042ae60 <flatcc_builder_table_add_union@@Base>:
  42ae60:	endbr64 
  42ae64:	push   r13
  42ae66:	mov    r13,rdx
  42ae69:	sar    r13,0x20
  42ae6d:	push   r12
  42ae6f:	push   rbp
  42ae70:	push   rbx
  42ae71:	sub    rsp,0x8
  42ae75:	mov    rax,QWORD PTR [rdi+0x30]
  42ae79:	cmp    WORD PTR [rax+0xe],0x3
  42ae7e:	jne    42aef4 <flatcc_builder_table_add_union@@Base+0x94>
  42ae80:	mov    r12,rdi
  42ae83:	mov    ebx,esi
  42ae85:	mov    rbp,rdx
  42ae88:	test   dl,dl
  42ae8a:	je     42aed0 <flatcc_builder_table_add_union@@Base+0x70>
  42ae8c:	test   r13d,r13d
  42ae8f:	je     42aea2 <flatcc_builder_table_add_union@@Base+0x42>
  42ae91:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  42ae96:	test   rax,rax
  42ae99:	je     42af32 <flatcc_builder_table_add_union@@Base+0xd2>
  42ae9f:	mov    DWORD PTR [rax],r13d
  42aea2:	lea    esi,[rbx-0x1]
  42aea5:	mov    ecx,0x1
  42aeaa:	mov    edx,0x1
  42aeaf:	mov    rdi,r12
  42aeb2:	call   42ab50 <flatcc_builder_table_add@@Base>
  42aeb7:	test   rax,rax
  42aeba:	je     42af13 <flatcc_builder_table_add_union@@Base+0xb3>
  42aebc:	mov    BYTE PTR [rax],bpl
  42aebf:	add    rsp,0x8
  42aec3:	xor    eax,eax
  42aec5:	pop    rbx
  42aec6:	pop    rbp
  42aec7:	pop    r12
  42aec9:	pop    r13
  42aecb:	ret    
  42aecc:	nop    DWORD PTR [rax+0x0]
  42aed0:	test   r13d,r13d
  42aed3:	je     42aea2 <flatcc_builder_table_add_union@@Base+0x42>
  42aed5:	lea    rcx,[rip+0x1e1d4]        # 4490b0 <fb_schema_table_missing@@Base+0x3430>
  42aedc:	mov    edx,0x5ef
  42aee1:	lea    rsi,[rip+0x1dbb8]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42aee8:	lea    rdi,[rip+0x1ded1]        # 448dc0 <fb_schema_table_missing@@Base+0x3140>
  42aeef:	call   4052e0 <__assert_fail@plt>
  42aef4:	lea    rcx,[rip+0x1e1b5]        # 4490b0 <fb_schema_table_missing@@Base+0x3430>
  42aefb:	mov    edx,0x5ee
  42af00:	lea    rsi,[rip+0x1db99]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42af07:	lea    rdi,[rip+0x1ddda]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  42af0e:	call   4052e0 <__assert_fail@plt>
  42af13:	lea    rcx,[rip+0x1e196]        # 4490b0 <fb_schema_table_missing@@Base+0x3430>
  42af1a:	mov    edx,0x5f6
  42af1f:	lea    rsi,[rip+0x1db7a]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42af26:	lea    rdi,[rip+0x1df99]        # 448ec6 <fb_schema_table_missing@@Base+0x3246>
  42af2d:	call   4052e0 <__assert_fail@plt>
  42af32:	lea    rcx,[rip+0x1e177]        # 4490b0 <fb_schema_table_missing@@Base+0x3430>
  42af39:	mov    edx,0x5f2
  42af3e:	lea    rsi,[rip+0x1db5b]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42af45:	lea    rdi,[rip+0x1df70]        # 448ebc <fb_schema_table_missing@@Base+0x323c>
  42af4c:	call   4052e0 <__assert_fail@plt>
  42af51:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42af5c:	nop    DWORD PTR [rax+0x0]

000000000042af60 <flatcc_builder_table_add_union_vector@@Base>:
  42af60:	endbr64 
  42af64:	push   r12
  42af66:	push   rbp
  42af67:	mov    rbp,rdx
  42af6a:	sar    rbp,0x20
  42af6e:	push   rbx
  42af6f:	sub    rsp,0x10
  42af73:	mov    rcx,QWORD PTR [rdi+0x30]
  42af77:	cmp    WORD PTR [rcx+0xe],0x3
  42af7c:	jne    42aff1 <flatcc_builder_table_add_union_vector@@Base+0x91>
  42af7e:	test   ebp,ebp
  42af80:	sete   cl
  42af83:	test   edx,edx
  42af85:	mov    r12d,esi
  42af88:	sete   sil
  42af8c:	cmp    sil,cl
  42af8f:	je     42afb0 <flatcc_builder_table_add_union_vector@@Base+0x50>
  42af91:	test   edx,edx
  42af93:	setne  al
  42af96:	cmp    cl,al
  42af98:	je     42b010 <flatcc_builder_table_add_union_vector@@Base+0xb0>
  42af9a:	mov    eax,0xffffffff
  42af9f:	add    rsp,0x10
  42afa3:	pop    rbx
  42afa4:	pop    rbp
  42afa5:	pop    r12
  42afa7:	ret    
  42afa8:	nop    DWORD PTR [rax+rax*1+0x0]
  42afb0:	mov    eax,edx
  42afb2:	test   edx,edx
  42afb4:	je     42af9f <flatcc_builder_table_add_union_vector@@Base+0x3f>
  42afb6:	lea    esi,[r12-0x1]
  42afbb:	mov    QWORD PTR [rsp+0x8],rdx
  42afc0:	mov    rbx,rdi
  42afc3:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  42afc8:	test   rax,rax
  42afcb:	mov    rdx,QWORD PTR [rsp+0x8]
  42afd0:	je     42b04e <flatcc_builder_table_add_union_vector@@Base+0xee>
  42afd2:	mov    DWORD PTR [rax],edx
  42afd4:	mov    esi,r12d
  42afd7:	mov    rdi,rbx
  42afda:	call   42ad20 <flatcc_builder_table_add_offset@@Base>
  42afdf:	test   rax,rax
  42afe2:	je     42b02f <flatcc_builder_table_add_union_vector@@Base+0xcf>
  42afe4:	mov    DWORD PTR [rax],ebp
  42afe6:	add    rsp,0x10
  42afea:	xor    eax,eax
  42afec:	pop    rbx
  42afed:	pop    rbp
  42afee:	pop    r12
  42aff0:	ret    
  42aff1:	lea    rcx,[rip+0x1e088]        # 449080 <fb_schema_table_missing@@Base+0x3400>
  42aff8:	mov    edx,0x600
  42affd:	lea    rsi,[rip+0x1da9c]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42b004:	lea    rdi,[rip+0x1dcdd]        # 448ce8 <fb_schema_table_missing@@Base+0x3068>
  42b00b:	call   4052e0 <__assert_fail@plt>
  42b010:	lea    rcx,[rip+0x1e069]        # 449080 <fb_schema_table_missing@@Base+0x3400>
  42b017:	mov    edx,0x601
  42b01c:	lea    rsi,[rip+0x1da7d]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42b023:	lea    rdi,[rip+0x1ddbe]        # 448de8 <fb_schema_table_missing@@Base+0x3168>
  42b02a:	call   4052e0 <__assert_fail@plt>
  42b02f:	lea    rcx,[rip+0x1e04a]        # 449080 <fb_schema_table_missing@@Base+0x3400>
  42b036:	mov    edx,0x608
  42b03b:	lea    rsi,[rip+0x1da5e]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42b042:	lea    rdi,[rip+0x1de73]        # 448ebc <fb_schema_table_missing@@Base+0x323c>
  42b049:	call   4052e0 <__assert_fail@plt>
  42b04e:	lea    rcx,[rip+0x1e02b]        # 449080 <fb_schema_table_missing@@Base+0x3400>
  42b055:	mov    edx,0x604
  42b05a:	lea    rsi,[rip+0x1da3f]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42b061:	lea    rdi,[rip+0x1de54]        # 448ebc <fb_schema_table_missing@@Base+0x323c>
  42b068:	call   4052e0 <__assert_fail@plt>
  42b06d:	nop    DWORD PTR [rax]

000000000042b070 <flatcc_builder_push_buffer_alignment@@Base>:
  42b070:	endbr64 
  42b074:	mov    edx,0x4
  42b079:	movzx  eax,WORD PTR [rdi+0xe8]
  42b080:	mov    WORD PTR [rdi+0xe8],dx
  42b087:	ret    
  42b088:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b090 <flatcc_builder_pop_buffer_alignment@@Base>:
  42b090:	endbr64 
  42b094:	cmp    si,WORD PTR [rdi+0xe8]
  42b09b:	jbe    42b0a4 <flatcc_builder_pop_buffer_alignment@@Base+0x14>
  42b09d:	mov    WORD PTR [rdi+0xe8],si
  42b0a4:	ret    
  42b0a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b0b0 <flatcc_builder_get_buffer_alignment@@Base>:
  42b0b0:	endbr64 
  42b0b4:	movzx  eax,WORD PTR [rdi+0xe8]
  42b0bb:	ret    
  42b0bc:	nop    DWORD PTR [rax+0x0]

000000000042b0c0 <flatcc_builder_set_vtable_clustering@@Base>:
  42b0c0:	endbr64 
  42b0c4:	xor    eax,eax
  42b0c6:	test   esi,esi
  42b0c8:	sete   al
  42b0cb:	mov    DWORD PTR [rdi+0x124],eax
  42b0d1:	ret    
  42b0d2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b0dd:	nop    DWORD PTR [rax]

000000000042b0e0 <flatcc_builder_set_block_align@@Base>:
  42b0e0:	endbr64 
  42b0e4:	mov    WORD PTR [rdi+0xec],si
  42b0eb:	ret    
  42b0ec:	nop    DWORD PTR [rax+0x0]

000000000042b0f0 <flatcc_builder_get_level@@Base>:
  42b0f0:	endbr64 
  42b0f4:	mov    eax,DWORD PTR [rdi+0x104]
  42b0fa:	ret    
  42b0fb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b100 <flatcc_builder_set_max_level@@Base>:
  42b100:	endbr64 
  42b104:	mov    DWORD PTR [rdi+0x120],esi
  42b10a:	cmp    DWORD PTR [rdi+0x108],esi
  42b110:	jge    42b118 <flatcc_builder_set_max_level@@Base+0x18>
  42b112:	mov    DWORD PTR [rdi+0x108],esi
  42b118:	ret    
  42b119:	nop    DWORD PTR [rax+0x0]

000000000042b120 <flatcc_builder_get_buffer_size@@Base>:
  42b120:	endbr64 
  42b124:	mov    eax,DWORD PTR [rdi+0xf4]
  42b12a:	sub    eax,DWORD PTR [rdi+0xf0]
  42b130:	cdqe   
  42b132:	ret    
  42b133:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b13e:	xchg   ax,ax

000000000042b140 <flatcc_builder_get_buffer_start@@Base>:
  42b140:	endbr64 
  42b144:	mov    eax,DWORD PTR [rdi+0xf0]
  42b14a:	ret    
  42b14b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b150 <flatcc_builder_get_buffer_end@@Base>:
  42b150:	endbr64 
  42b154:	mov    eax,DWORD PTR [rdi+0xf4]
  42b15a:	ret    
  42b15b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b160 <flatcc_builder_set_vtable_cache_limit@@Base>:
  42b160:	endbr64 
  42b164:	mov    QWORD PTR [rdi+0x118],rsi
  42b16b:	ret    
  42b16c:	nop    DWORD PTR [rax+0x0]

000000000042b170 <flatcc_builder_set_identifier@@Base>:
  42b170:	endbr64 
  42b174:	test   rsi,rsi
  42b177:	je     42b188 <flatcc_builder_set_identifier@@Base+0x18>
  42b179:	mov    eax,DWORD PTR [rsi]
  42b17b:	mov    DWORD PTR [rdi+0x110],eax
  42b181:	ret    
  42b182:	nop    WORD PTR [rax+rax*1+0x0]
  42b188:	mov    rsi,0x449580
  42b18f:	mov    eax,DWORD PTR [rsi]
  42b191:	mov    DWORD PTR [rdi+0x110],eax
  42b197:	ret    
  42b198:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042b1a0 <flatcc_builder_get_type@@Base>:
  42b1a0:	endbr64 
  42b1a4:	mov    rdx,QWORD PTR [rdi+0x30]
  42b1a8:	xor    eax,eax
  42b1aa:	test   rdx,rdx
  42b1ad:	je     42b1b3 <flatcc_builder_get_type@@Base+0x13>
  42b1af:	movzx  eax,WORD PTR [rdx+0xe]
  42b1b3:	ret    
  42b1b4:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b1bf:	nop

000000000042b1c0 <flatcc_builder_get_type_at@@Base>:
  42b1c0:	endbr64 
  42b1c4:	xor    eax,eax
  42b1c6:	test   esi,esi
  42b1c8:	jle    42b1e9 <flatcc_builder_get_type_at@@Base+0x29>
  42b1ca:	mov    edx,DWORD PTR [rdi+0x104]
  42b1d0:	cmp    edx,esi
  42b1d2:	jl     42b1e9 <flatcc_builder_get_type_at@@Base+0x29>
  42b1d4:	sub    esi,edx
  42b1d6:	movsxd rsi,esi
  42b1d9:	mov    rdx,QWORD PTR [rdi+0x30]
  42b1dd:	lea    rax,[rsi+rsi*8]
  42b1e1:	lea    rax,[rdx+rax*4]
  42b1e5:	movzx  eax,WORD PTR [rax+0xe]
  42b1e9:	ret    
  42b1ea:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b1f0 <flatcc_builder_get_direct_buffer@@Base>:
  42b1f0:	endbr64 
  42b1f4:	mov    eax,DWORD PTR [rdi+0x128]
  42b1fa:	test   eax,eax
  42b1fc:	jne    42b210 <flatcc_builder_get_direct_buffer@@Base+0x20>
  42b1fe:	xor    eax,eax
  42b200:	test   rsi,rsi
  42b203:	je     42b20c <flatcc_builder_get_direct_buffer@@Base+0x1c>
  42b205:	mov    QWORD PTR [rsi],0x0
  42b20c:	ret    
  42b20d:	nop    DWORD PTR [rax]
  42b210:	mov    rax,QWORD PTR [rdi+0x138]
  42b217:	cmp    QWORD PTR [rdi+0x130],rax
  42b21e:	jne    42b1fe <flatcc_builder_get_direct_buffer@@Base+0xe>
  42b220:	test   rsi,rsi
  42b223:	je     42b22f <flatcc_builder_get_direct_buffer@@Base+0x3f>
  42b225:	mov    rax,QWORD PTR [rdi+0x160]
  42b22c:	mov    QWORD PTR [rsi],rax
  42b22f:	mov    rax,QWORD PTR [rdi+0x140]
  42b236:	ret    
  42b237:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b240 <flatcc_builder_copy_buffer@@Base>:
  42b240:	endbr64 
  42b244:	mov    eax,DWORD PTR [rdi+0x128]
  42b24a:	test   eax,eax
  42b24c:	je     42b270 <flatcc_builder_copy_buffer@@Base+0x30>
  42b24e:	sub    rsp,0x8
  42b252:	add    rdi,0x130
  42b259:	call   42bab0 <flatcc_emitter_copy_buffer@@Base>
  42b25e:	test   rax,rax
  42b261:	je     42b273 <flatcc_builder_copy_buffer@@Base+0x33>
  42b263:	add    rsp,0x8
  42b267:	ret    
  42b268:	nop    DWORD PTR [rax+rax*1+0x0]
  42b270:	xor    eax,eax
  42b272:	ret    
  42b273:	lea    rcx,[rip+0x1dc86]        # 448f00 <fb_schema_table_missing@@Base+0x3280>
  42b27a:	mov    edx,0x786
  42b27f:	lea    rsi,[rip+0x1d81a]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42b286:	lea    rdi,[rip+0x1d032]        # 4482bf <fb_schema_table_missing@@Base+0x263f>
  42b28d:	call   4052e0 <__assert_fail@plt>
  42b292:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b29d:	nop    DWORD PTR [rax]

000000000042b2a0 <flatcc_builder_finalize_buffer@@Base>:
  42b2a0:	endbr64 
  42b2a4:	push   r12
  42b2a6:	mov    r12,rdi
  42b2a9:	push   rbp
  42b2aa:	push   rbx
  42b2ab:	mov    rbx,rsi
  42b2ae:	call   42b120 <flatcc_builder_get_buffer_size@@Base>
  42b2b3:	mov    rbp,rax
  42b2b6:	test   rbx,rbx
  42b2b9:	je     42b2be <flatcc_builder_finalize_buffer@@Base+0x1e>
  42b2bb:	mov    QWORD PTR [rbx],rax
  42b2be:	mov    rdi,rbp
  42b2c1:	call   405360 <malloc@plt>
  42b2c6:	mov    rbx,rax
  42b2c9:	test   rax,rax
  42b2cc:	je     42b2e9 <flatcc_builder_finalize_buffer@@Base+0x49>
  42b2ce:	mov    rdx,rbp
  42b2d1:	mov    rsi,rax
  42b2d4:	mov    rdi,r12
  42b2d7:	call   42b240 <flatcc_builder_copy_buffer@@Base>
  42b2dc:	test   rax,rax
  42b2df:	je     42b308 <flatcc_builder_finalize_buffer@@Base+0x68>
  42b2e1:	mov    rax,rbx
  42b2e4:	pop    rbx
  42b2e5:	pop    rbp
  42b2e6:	pop    r12
  42b2e8:	ret    
  42b2e9:	lea    rcx,[rip+0x1dbf0]        # 448ee0 <fb_schema_table_missing@@Base+0x3260>
  42b2f0:	mov    edx,0x798
  42b2f5:	lea    rsi,[rip+0x1d7a4]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42b2fc:	lea    rdi,[rip+0xb816]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  42b303:	call   4052e0 <__assert_fail@plt>
  42b308:	lea    rcx,[rip+0x1dbd1]        # 448ee0 <fb_schema_table_missing@@Base+0x3260>
  42b30f:	mov    edx,0x79c
  42b314:	lea    rsi,[rip+0x1d785]        # 448aa0 <fb_schema_table_missing@@Base+0x2e20>
  42b31b:	lea    rdi,[rip+0xb7f7]        # 436b19 <_IO_stdin_used@@Base+0x9b19>
  42b322:	call   4052e0 <__assert_fail@plt>
  42b327:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b330 <flatcc_builder_finalize_aligned_buffer@@Base>:
  42b330:	endbr64 
  42b334:	push   r13
  42b336:	push   r12
  42b338:	mov    r12,rsi
  42b33b:	push   rbp
  42b33c:	mov    rbp,rdi
  42b33f:	push   rbx
  42b340:	sub    rsp,0x18
  42b344:	mov    rax,QWORD PTR fs:0x28
  42b34d:	mov    QWORD PTR [rsp+0x8],rax
  42b352:	xor    eax,eax
  42b354:	call   42b120 <flatcc_builder_get_buffer_size@@Base>
  42b359:	mov    rbx,rax
  42b35c:	test   r12,r12
  42b35f:	je     42b365 <flatcc_builder_finalize_aligned_buffer@@Base+0x35>
  42b361:	mov    QWORD PTR [r12],rax
  42b365:	mov    rdi,rbp
  42b368:	call   42b0b0 <flatcc_builder_get_buffer_alignment@@Base>
  42b36d:	movzx  eax,ax
  42b370:	lea    rdx,[rbx+rax*1-0x1]
  42b375:	mov    rbx,rax
  42b378:	neg    rbx
  42b37b:	and    rbx,rdx
  42b37e:	mov    esi,0x8
  42b383:	cmp    rax,0x8
  42b387:	cmovae rsi,rax
  42b38b:	mov    rdi,rsp
  42b38e:	mov    rdx,rbx
  42b391:	mov    QWORD PTR [rsp],0x0
  42b399:	call   4053f0 <posix_memalign@plt>
  42b39e:	test   eax,eax
  42b3a0:	je     42b3c8 <flatcc_builder_finalize_aligned_buffer@@Base+0x98>
  42b3a2:	mov    rdi,QWORD PTR [rsp]
  42b3a6:	test   rdi,rdi
  42b3a9:	je     42b3b0 <flatcc_builder_finalize_aligned_buffer@@Base+0x80>
  42b3ab:	call   405230 <free@plt>
  42b3b0:	test   r12,r12
  42b3b3:	je     42b412 <flatcc_builder_finalize_aligned_buffer@@Base+0xe2>
  42b3b5:	mov    QWORD PTR [r12],0x0
  42b3bd:	xor    r13d,r13d
  42b3c0:	jmp    42b3e4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
  42b3c2:	nop    WORD PTR [rax+rax*1+0x0]
  42b3c8:	mov    r13,QWORD PTR [rsp]
  42b3cc:	test   r13,r13
  42b3cf:	je     42b3b0 <flatcc_builder_finalize_aligned_buffer@@Base+0x80>
  42b3d1:	mov    rdx,rbx
  42b3d4:	mov    rsi,r13
  42b3d7:	mov    rdi,rbp
  42b3da:	call   42b240 <flatcc_builder_copy_buffer@@Base>
  42b3df:	test   rax,rax
  42b3e2:	je     42b408 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
  42b3e4:	mov    rcx,QWORD PTR [rsp+0x8]
  42b3e9:	xor    rcx,QWORD PTR fs:0x28
  42b3f2:	mov    rax,r13
  42b3f5:	jne    42b40d <flatcc_builder_finalize_aligned_buffer@@Base+0xdd>
  42b3f7:	add    rsp,0x18
  42b3fb:	pop    rbx
  42b3fc:	pop    rbp
  42b3fd:	pop    r12
  42b3ff:	pop    r13
  42b401:	ret    
  42b402:	nop    WORD PTR [rax+rax*1+0x0]
  42b408:	mov    rdi,r13
  42b40b:	jmp    42b3ab <flatcc_builder_finalize_aligned_buffer@@Base+0x7b>
  42b40d:	call   4052c0 <__stack_chk_fail@plt>
  42b412:	xor    r13d,r13d
  42b415:	jmp    42b3e4 <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
  42b417:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b420 <flatcc_builder_aligned_alloc@@Base>:
  42b420:	endbr64 
  42b424:	sub    rsp,0x18
  42b428:	mov    rax,QWORD PTR fs:0x28
  42b431:	mov    QWORD PTR [rsp+0x8],rax
  42b436:	xor    eax,eax
  42b438:	mov    rdx,rsi
  42b43b:	cmp    rdi,0x8
  42b43f:	mov    esi,0x8
  42b444:	cmovae rsi,rdi
  42b448:	mov    rdi,rsp
  42b44b:	mov    QWORD PTR [rsp],0x0
  42b453:	call   4053f0 <posix_memalign@plt>
  42b458:	test   eax,eax
  42b45a:	mov    rax,QWORD PTR [rsp]
  42b45e:	je     42b46f <flatcc_builder_aligned_alloc@@Base+0x4f>
  42b460:	test   rax,rax
  42b463:	je     42b46f <flatcc_builder_aligned_alloc@@Base+0x4f>
  42b465:	mov    rdi,rax
  42b468:	call   405230 <free@plt>
  42b46d:	xor    eax,eax
  42b46f:	mov    rcx,QWORD PTR [rsp+0x8]
  42b474:	xor    rcx,QWORD PTR fs:0x28
  42b47d:	jne    42b484 <flatcc_builder_aligned_alloc@@Base+0x64>
  42b47f:	add    rsp,0x18
  42b483:	ret    
  42b484:	call   4052c0 <__stack_chk_fail@plt>
  42b489:	nop    DWORD PTR [rax+0x0]

000000000042b490 <flatcc_builder_aligned_free@@Base>:
  42b490:	endbr64 
  42b494:	jmp    405230 <free@plt>
  42b499:	nop    DWORD PTR [rax+0x0]

000000000042b4a0 <flatcc_builder_get_emit_context@@Base>:
  42b4a0:	endbr64 
  42b4a4:	mov    rax,QWORD PTR [rdi+0x38]
  42b4a8:	ret    
  42b4a9:	nop    DWORD PTR [rax+0x0]

000000000042b4b0 <flatcc_emitter_recycle_page@@Base>:
  42b4b0:	endbr64 
  42b4b4:	mov    rax,QWORD PTR [rdi]
  42b4b7:	cmp    rax,rsi
  42b4ba:	je     42b50b <flatcc_emitter_recycle_page@@Base+0x5b>
  42b4bc:	cmp    QWORD PTR [rdi+0x8],rsi
  42b4c0:	je     42b50b <flatcc_emitter_recycle_page@@Base+0x5b>
  42b4c2:	mov    rdx,QWORD PTR [rsi+0xb88]
  42b4c9:	mov    rcx,QWORD PTR [rsi+0xb80]
  42b4d0:	mov    QWORD PTR [rcx+0xb88],rdx
  42b4d7:	mov    QWORD PTR [rdx+0xb80],rcx
  42b4de:	mov    rdx,QWORD PTR [rax+0xb88]
  42b4e5:	mov    QWORD PTR [rsi+0xb80],rax
  42b4ec:	mov    QWORD PTR [rsi+0xb88],rdx
  42b4f3:	mov    QWORD PTR [rdx+0xb80],rsi
  42b4fa:	mov    rax,QWORD PTR [rsi+0xb80]
  42b501:	mov    QWORD PTR [rax+0xb88],rsi
  42b508:	xor    eax,eax
  42b50a:	ret    
  42b50b:	mov    eax,0xffffffff
  42b510:	ret    
  42b511:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b51c:	nop    DWORD PTR [rax+0x0]

000000000042b520 <flatcc_emitter_reset@@Base>:
  42b520:	endbr64 
  42b524:	mov    rax,QWORD PTR [rdi]
  42b527:	test   rax,rax
  42b52a:	je     42b600 <flatcc_emitter_reset@@Base+0xe0>
  42b530:	mov    rcx,QWORD PTR [rdi+0x40]
  42b534:	mov    rsi,QWORD PTR [rdi+0x30]
  42b538:	test   rcx,rcx
  42b53b:	cmove  rcx,rsi
  42b53f:	lea    rdx,[rax+0x5c0]
  42b546:	mov    QWORD PTR [rdi+0x10],rdx
  42b54a:	mov    QWORD PTR [rdi+0x20],rdx
  42b54e:	lea    rdx,[rcx+rcx*2]
  42b552:	shr    rdx,0x2
  42b556:	shr    rsi,0x2
  42b55a:	add    rdx,rsi
  42b55d:	mov    QWORD PTR [rdi+0x8],rax
  42b561:	mov    QWORD PTR [rdi+0x18],0x5c0
  42b569:	mov    QWORD PTR [rdi+0x28],0x5c0
  42b571:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42b57b:	mov    QWORD PTR [rdi+0x40],rdx
  42b57f:	add    rdx,rdx
  42b582:	mov    QWORD PTR [rdi+0x30],0x0
  42b58a:	cmp    rdx,QWORD PTR [rdi+0x38]
  42b58e:	jae    42b600 <flatcc_emitter_reset@@Base+0xe0>
  42b590:	push   rbx
  42b591:	mov    rbx,rdi
  42b594:	mov    rdi,QWORD PTR [rax+0xb80]
  42b59b:	cmp    rax,rdi
  42b59e:	jne    42b5b8 <flatcc_emitter_reset@@Base+0x98>
  42b5a0:	jmp    42b5f4 <flatcc_emitter_reset@@Base+0xd4>
  42b5a2:	nop    WORD PTR [rax+rax*1+0x0]
  42b5a8:	mov    rax,QWORD PTR [rbx+0x8]
  42b5ac:	mov    rdi,QWORD PTR [rax+0xb80]
  42b5b3:	cmp    rdi,QWORD PTR [rbx]
  42b5b6:	je     42b5f4 <flatcc_emitter_reset@@Base+0xd4>
  42b5b8:	mov    rdx,QWORD PTR [rdi+0xb80]
  42b5bf:	mov    QWORD PTR [rax+0xb80],rdx
  42b5c6:	mov    rdx,QWORD PTR [rdi+0xb80]
  42b5cd:	mov    QWORD PTR [rdx+0xb88],rax
  42b5d4:	call   405230 <free@plt>
  42b5d9:	mov    rax,QWORD PTR [rbx+0x38]
  42b5dd:	mov    rcx,QWORD PTR [rbx+0x40]
  42b5e1:	sub    rax,0xb80
  42b5e7:	lea    rdx,[rcx+rcx*1]
  42b5eb:	mov    QWORD PTR [rbx+0x38],rax
  42b5ef:	cmp    rax,rdx
  42b5f2:	ja     42b5a8 <flatcc_emitter_reset@@Base+0x88>
  42b5f4:	pop    rbx
  42b5f5:	ret    
  42b5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b600:	ret    
  42b601:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b60c:	nop    DWORD PTR [rax+0x0]

000000000042b610 <flatcc_emitter_clear@@Base>:
  42b610:	endbr64 
  42b614:	mov    rax,QWORD PTR [rdi]
  42b617:	test   rax,rax
  42b61a:	je     42b698 <flatcc_emitter_clear@@Base+0x88>
  42b61c:	push   rbp
  42b61d:	mov    rbp,rdi
  42b620:	push   rbx
  42b621:	sub    rsp,0x8
  42b625:	mov    rdx,QWORD PTR [rax+0xb88]
  42b62c:	mov    QWORD PTR [rdx+0xb80],0x0
  42b637:	mov    rbx,QWORD PTR [rax+0xb80]
  42b63e:	test   rbx,rbx
  42b641:	jne    42b64b <flatcc_emitter_clear@@Base+0x3b>
  42b643:	jmp    42b6a0 <flatcc_emitter_clear@@Base+0x90>
  42b645:	nop    DWORD PTR [rax]
  42b648:	mov    rbx,rax
  42b64b:	mov    rdi,QWORD PTR [rbx+0xb88]
  42b652:	call   405230 <free@plt>
  42b657:	mov    rax,QWORD PTR [rbx+0xb80]
  42b65e:	test   rax,rax
  42b661:	jne    42b648 <flatcc_emitter_clear@@Base+0x38>
  42b663:	mov    rdi,rbx
  42b666:	call   405230 <free@plt>
  42b66b:	mov    QWORD PTR [rbp+0x40],0x0
  42b673:	vpxor  xmm0,xmm0,xmm0
  42b677:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  42b67c:	vmovups XMMWORD PTR [rbp+0x10],xmm0
  42b681:	vmovups XMMWORD PTR [rbp+0x20],xmm0
  42b686:	vmovups XMMWORD PTR [rbp+0x30],xmm0
  42b68b:	add    rsp,0x8
  42b68f:	pop    rbx
  42b690:	pop    rbp
  42b691:	ret    
  42b692:	nop    WORD PTR [rax+rax*1+0x0]
  42b698:	ret    
  42b699:	nop    DWORD PTR [rax+0x0]
  42b6a0:	mov    rbx,rax
  42b6a3:	jmp    42b663 <flatcc_emitter_clear@@Base+0x53>
  42b6a5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042b6b0 <flatcc_emitter@@Base>:
  42b6b0:	endbr64 
  42b6b4:	push   r15
  42b6b6:	push   r14
  42b6b8:	push   r13
  42b6ba:	push   r12
  42b6bc:	push   rbp
  42b6bd:	mov    rbp,rsi
  42b6c0:	push   rbx
  42b6c1:	mov    rbx,rdi
  42b6c4:	sub    rsp,0x18
  42b6c8:	add    QWORD PTR [rdi+0x30],r8
  42b6cc:	test   ecx,ecx
  42b6ce:	js     42b8e0 <flatcc_emitter@@Base+0x230>
  42b6d4:	mov    rax,QWORD PTR [rdi+0x28]
  42b6d8:	cmp    rax,r8
  42b6db:	jae    42b768 <flatcc_emitter@@Base+0xb8>
  42b6e1:	test   edx,edx
  42b6e3:	je     42b753 <flatcc_emitter@@Base+0xa3>
  42b6e5:	lea    r14d,[rdx-0x1]
  42b6e9:	inc    r14
  42b6ec:	shl    r14,0x4
  42b6f0:	lea    rax,[rbp+r14*1+0x0]
  42b6f5:	mov    QWORD PTR [rsp+0x8],rax
  42b6fa:	nop    WORD PTR [rax+rax*1+0x0]
  42b700:	mov    r15,QWORD PTR [rbp+0x8]
  42b704:	mov    r13,QWORD PTR [rbp+0x0]
  42b708:	test   r15,r15
  42b70b:	je     42b748 <flatcc_emitter@@Base+0x98>
  42b70d:	nop    DWORD PTR [rax]
  42b710:	mov    r12,QWORD PTR [rbx+0x28]
  42b714:	cmp    r15,r12
  42b717:	jbe    42b810 <flatcc_emitter@@Base+0x160>
  42b71d:	test   r12,r12
  42b720:	je     42b7b8 <flatcc_emitter@@Base+0x108>
  42b726:	sub    r15,r12
  42b729:	mov    rdi,QWORD PTR [rbx+0x20]
  42b72d:	mov    rsi,r13
  42b730:	mov    rdx,r12
  42b733:	call   405350 <memcpy@plt>
  42b738:	add    r13,r12
  42b73b:	add    QWORD PTR [rbx+0x20],r12
  42b73f:	sub    QWORD PTR [rbx+0x28],r12
  42b743:	test   r15,r15
  42b746:	jne    42b710 <flatcc_emitter@@Base+0x60>
  42b748:	add    rbp,0x10
  42b74c:	cmp    rbp,QWORD PTR [rsp+0x8]
  42b751:	jne    42b700 <flatcc_emitter@@Base+0x50>
  42b753:	add    rsp,0x18
  42b757:	pop    rbx
  42b758:	pop    rbp
  42b759:	pop    r12
  42b75b:	pop    r13
  42b75d:	pop    r14
  42b75f:	xor    eax,eax
  42b761:	pop    r15
  42b763:	ret    
  42b764:	nop    DWORD PTR [rax+0x0]
  42b768:	mov    rcx,QWORD PTR [rdi+0x20]
  42b76c:	sub    rax,r8
  42b76f:	lea    rsi,[rcx+r8*1]
  42b773:	mov    QWORD PTR [rdi+0x20],rsi
  42b777:	mov    QWORD PTR [rdi+0x28],rax
  42b77b:	test   edx,edx
  42b77d:	je     42b753 <flatcc_emitter@@Base+0xa3>
  42b77f:	lea    ebx,[rdx-0x1]
  42b782:	inc    rbx
  42b785:	shl    rbx,0x4
  42b789:	add    rbx,rbp
  42b78c:	nop    DWORD PTR [rax+0x0]
  42b790:	mov    rsi,QWORD PTR [rbp+0x0]
  42b794:	mov    rdx,QWORD PTR [rbp+0x8]
  42b798:	mov    rdi,rcx
  42b79b:	call   405350 <memcpy@plt>
  42b7a0:	mov    rcx,QWORD PTR [rbp+0x8]
  42b7a4:	add    rbp,0x10
  42b7a8:	add    rcx,rax
  42b7ab:	cmp    rbp,rbx
  42b7ae:	jne    42b790 <flatcc_emitter@@Base+0xe0>
  42b7b0:	jmp    42b753 <flatcc_emitter@@Base+0xa3>
  42b7b2:	nop    WORD PTR [rax+rax*1+0x0]
  42b7b8:	mov    r12,QWORD PTR [rbx+0x8]
  42b7bc:	test   r12,r12
  42b7bf:	je     42b868 <flatcc_emitter@@Base+0x1b8>
  42b7c5:	mov    rax,QWORD PTR [r12+0xb80]
  42b7cd:	mov    r14,QWORD PTR [rbx]
  42b7d0:	cmp    rax,r14
  42b7d3:	je     42b820 <flatcc_emitter@@Base+0x170>
  42b7d5:	mov    QWORD PTR [rbx+0x8],rax
  42b7d9:	mov    QWORD PTR [rbx+0x28],0xb80
  42b7e1:	mov    rdx,QWORD PTR [rax+0xb88]
  42b7e8:	mov    QWORD PTR [rbx+0x20],rax
  42b7ec:	mov    edx,DWORD PTR [rdx+0xb90]
  42b7f2:	mov    r12,QWORD PTR [rbx+0x28]
  42b7f6:	add    edx,0xb80
  42b7fc:	mov    DWORD PTR [rax+0xb90],edx
  42b802:	cmp    r15,r12
  42b805:	ja     42b71d <flatcc_emitter@@Base+0x6d>
  42b80b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b810:	mov    r12,r15
  42b813:	xor    r15d,r15d
  42b816:	jmp    42b729 <flatcc_emitter@@Base+0x79>
  42b81b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b820:	mov    edi,0xb98
  42b825:	call   405360 <malloc@plt>
  42b82a:	test   rax,rax
  42b82d:	je     42b8c8 <flatcc_emitter@@Base+0x218>
  42b833:	add    QWORD PTR [rbx+0x38],0xb80
  42b83b:	mov    QWORD PTR [rax+0xb88],r12
  42b842:	mov    QWORD PTR [rax+0xb80],r14
  42b849:	mov    QWORD PTR [r14+0xb88],rax
  42b850:	mov    QWORD PTR [r12+0xb80],rax
  42b858:	mov    QWORD PTR [rbx+0x8],rax
  42b85c:	jmp    42b7d9 <flatcc_emitter@@Base+0x129>
  42b861:	nop    DWORD PTR [rax+0x0]
  42b868:	mov    edi,0xb98
  42b86d:	call   405360 <malloc@plt>
  42b872:	test   rax,rax
  42b875:	je     42b8c8 <flatcc_emitter@@Base+0x218>
  42b877:	lea    rdx,[rax+0x5c0]
  42b87e:	add    QWORD PTR [rbx+0x38],0xb80
  42b886:	mov    QWORD PTR [rbx],rax
  42b889:	mov    QWORD PTR [rbx+0x8],rax
  42b88d:	mov    QWORD PTR [rax+0xb80],rax
  42b894:	mov    QWORD PTR [rax+0xb88],rax
  42b89b:	mov    QWORD PTR [rbx+0x10],rdx
  42b89f:	mov    QWORD PTR [rbx+0x20],rdx
  42b8a3:	mov    QWORD PTR [rbx+0x18],0x5c0
  42b8ab:	mov    QWORD PTR [rbx+0x28],0x5c0
  42b8b3:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42b8bd:	jmp    42b710 <flatcc_emitter@@Base+0x60>
  42b8c2:	nop    WORD PTR [rax+rax*1+0x0]
  42b8c8:	add    rsp,0x18
  42b8cc:	pop    rbx
  42b8cd:	pop    rbp
  42b8ce:	pop    r12
  42b8d0:	pop    r13
  42b8d2:	pop    r14
  42b8d4:	mov    eax,0xffffffff
  42b8d9:	pop    r15
  42b8db:	ret    
  42b8dc:	nop    DWORD PTR [rax+0x0]
  42b8e0:	mov    rax,QWORD PTR [rdi+0x18]
  42b8e4:	cmp    rax,r8
  42b8e7:	jae    42ba90 <flatcc_emitter@@Base+0x3e0>
  42b8ed:	movsxd rax,edx
  42b8f0:	shl    rax,0x4
  42b8f4:	add    rbp,rax
  42b8f7:	mov    edx,edx
  42b8f9:	shl    rdx,0x4
  42b8fd:	mov    rax,rbp
  42b900:	sub    rax,rdx
  42b903:	mov    QWORD PTR [rsp+0x8],rax
  42b908:	nop    DWORD PTR [rax+rax*1+0x0]
  42b910:	cmp    rbp,QWORD PTR [rsp+0x8]
  42b915:	je     42b753 <flatcc_emitter@@Base+0xa3>
  42b91b:	sub    rbp,0x10
  42b91f:	mov    r12,QWORD PTR [rbp+0x8]
  42b923:	mov    r13,QWORD PTR [rbp+0x0]
  42b927:	add    r13,r12
  42b92a:	test   r12,r12
  42b92d:	je     42b910 <flatcc_emitter@@Base+0x260>
  42b92f:	mov    rdx,QWORD PTR [rbx+0x18]
  42b933:	cmp    rdx,r12
  42b936:	jae    42b970 <flatcc_emitter@@Base+0x2c0>
  42b938:	test   rdx,rdx
  42b93b:	je     42b980 <flatcc_emitter@@Base+0x2d0>
  42b93d:	sub    r12,rdx
  42b940:	xor    ecx,ecx
  42b942:	mov    rdi,QWORD PTR [rbx+0x10]
  42b946:	mov    rax,rdx
  42b949:	neg    rax
  42b94c:	add    rdi,rax
  42b94f:	mov    QWORD PTR [rbx+0x10],rdi
  42b953:	mov    QWORD PTR [rbx+0x18],rcx
  42b957:	add    r13,rax
  42b95a:	mov    rsi,r13
  42b95d:	call   405350 <memcpy@plt>
  42b962:	test   r12,r12
  42b965:	je     42b910 <flatcc_emitter@@Base+0x260>
  42b967:	mov    rdx,QWORD PTR [rbx+0x18]
  42b96b:	cmp    rdx,r12
  42b96e:	jb     42b938 <flatcc_emitter@@Base+0x288>
  42b970:	mov    rcx,rdx
  42b973:	sub    rcx,r12
  42b976:	mov    rdx,r12
  42b979:	xor    r12d,r12d
  42b97c:	jmp    42b942 <flatcc_emitter@@Base+0x292>
  42b97e:	xchg   ax,ax
  42b980:	mov    r15,QWORD PTR [rbx]
  42b983:	test   r15,r15
  42b986:	je     42ba28 <flatcc_emitter@@Base+0x378>
  42b98c:	mov    rax,QWORD PTR [r15+0xb88]
  42b993:	mov    r14,QWORD PTR [rbx+0x8]
  42b997:	cmp    rax,r14
  42b99a:	je     42b9e8 <flatcc_emitter@@Base+0x338>
  42b99c:	mov    edx,DWORD PTR [r15+0xb90]
  42b9a3:	sub    edx,0xb80
  42b9a9:	mov    DWORD PTR [rax+0xb90],edx
  42b9af:	mov    QWORD PTR [rbx],rax
  42b9b2:	lea    rdx,[rax+0xb80]
  42b9b9:	mov    QWORD PTR [rbx+0x10],rdx
  42b9bd:	mov    rdx,QWORD PTR [rax+0xb80]
  42b9c4:	mov    QWORD PTR [rbx+0x18],0xb80
  42b9cc:	mov    edx,DWORD PTR [rdx+0xb90]
  42b9d2:	sub    edx,0xb80
  42b9d8:	mov    DWORD PTR [rax+0xb90],edx
  42b9de:	jmp    42b92f <flatcc_emitter@@Base+0x27f>
  42b9e3:	nop    DWORD PTR [rax+rax*1+0x0]
  42b9e8:	mov    edi,0xb98
  42b9ed:	call   405360 <malloc@plt>
  42b9f2:	test   rax,rax
  42b9f5:	je     42b8c8 <flatcc_emitter@@Base+0x218>
  42b9fb:	add    QWORD PTR [rbx+0x38],0xb80
  42ba03:	mov    QWORD PTR [rax+0xb88],r14
  42ba0a:	mov    QWORD PTR [rax+0xb80],r15
  42ba11:	mov    QWORD PTR [r15+0xb88],rax
  42ba18:	mov    QWORD PTR [r14+0xb80],rax
  42ba1f:	mov    QWORD PTR [rbx],rax
  42ba22:	jmp    42b9b2 <flatcc_emitter@@Base+0x302>
  42ba24:	nop    DWORD PTR [rax+0x0]
  42ba28:	mov    edi,0xb98
  42ba2d:	call   405360 <malloc@plt>
  42ba32:	test   rax,rax
  42ba35:	je     42b8c8 <flatcc_emitter@@Base+0x218>
  42ba3b:	lea    rdx,[rax+0x5c0]
  42ba42:	add    QWORD PTR [rbx+0x38],0xb80
  42ba4a:	mov    QWORD PTR [rbx],rax
  42ba4d:	mov    QWORD PTR [rbx+0x8],rax
  42ba51:	mov    QWORD PTR [rax+0xb80],rax
  42ba58:	mov    QWORD PTR [rax+0xb88],rax
  42ba5f:	mov    QWORD PTR [rbx+0x10],rdx
  42ba63:	mov    QWORD PTR [rbx+0x20],rdx
  42ba67:	mov    QWORD PTR [rbx+0x18],0x5c0
  42ba6f:	mov    QWORD PTR [rbx+0x28],0x5c0
  42ba77:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42ba81:	jmp    42b92f <flatcc_emitter@@Base+0x27f>
  42ba86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ba90:	mov    rcx,QWORD PTR [rdi+0x10]
  42ba94:	sub    rax,r8
  42ba97:	sub    rcx,r8
  42ba9a:	mov    QWORD PTR [rdi+0x10],rcx
  42ba9e:	mov    QWORD PTR [rdi+0x18],rax
  42baa2:	jmp    42b77b <flatcc_emitter@@Base+0xcb>
  42baa7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042bab0 <flatcc_emitter_copy_buffer@@Base>:
  42bab0:	endbr64 
  42bab4:	mov    rax,QWORD PTR [rdi+0x30]
  42bab8:	cmp    rax,rdx
  42babb:	ja     42bb60 <flatcc_emitter_copy_buffer@@Base+0xb0>
  42bac1:	mov    rcx,QWORD PTR [rdi]
  42bac4:	test   rcx,rcx
  42bac7:	je     42bb62 <flatcc_emitter_copy_buffer@@Base+0xb2>
  42bacd:	push   rbp
  42bace:	mov    r8,rsi
  42bad1:	mov    rbp,rdi
  42bad4:	push   rbx
  42bad5:	sub    rsp,0x8
  42bad9:	mov    rsi,QWORD PTR [rdi+0x10]
  42badd:	cmp    rcx,QWORD PTR [rdi+0x8]
  42bae1:	je     42bb70 <flatcc_emitter_copy_buffer@@Base+0xc0>
  42bae7:	mov    ecx,0xb80
  42baec:	mov    rbx,rcx
  42baef:	sub    rbx,QWORD PTR [rdi+0x18]
  42baf3:	mov    rdx,rbx
  42baf6:	mov    rdi,r8
  42baf9:	call   405350 <memcpy@plt>
  42bafe:	lea    rcx,[rax+rbx*1]
  42bb02:	mov    rax,QWORD PTR [rbp+0x0]
  42bb06:	mov    rbx,QWORD PTR [rax+0xb80]
  42bb0d:	cmp    rbx,QWORD PTR [rbp+0x8]
  42bb11:	je     42bb3f <flatcc_emitter_copy_buffer@@Base+0x8f>
  42bb13:	nop    DWORD PTR [rax+rax*1+0x0]
  42bb18:	mov    rsi,rbx
  42bb1b:	mov    rdi,rcx
  42bb1e:	mov    edx,0xb80
  42bb23:	call   405350 <memcpy@plt>
  42bb28:	mov    rbx,QWORD PTR [rbx+0xb80]
  42bb2f:	mov    rcx,rax
  42bb32:	add    rcx,0xb80
  42bb39:	cmp    QWORD PTR [rbp+0x8],rbx
  42bb3d:	jne    42bb18 <flatcc_emitter_copy_buffer@@Base+0x68>
  42bb3f:	mov    edx,0xb80
  42bb44:	sub    rdx,QWORD PTR [rbp+0x28]
  42bb48:	mov    rsi,rbx
  42bb4b:	mov    rdi,rcx
  42bb4e:	call   405350 <memcpy@plt>
  42bb53:	add    rsp,0x8
  42bb57:	mov    rcx,rax
  42bb5a:	pop    rbx
  42bb5b:	mov    rax,rcx
  42bb5e:	pop    rbp
  42bb5f:	ret    
  42bb60:	xor    ecx,ecx
  42bb62:	mov    rax,rcx
  42bb65:	ret    
  42bb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bb70:	mov    rdx,rax
  42bb73:	mov    rdi,r8
  42bb76:	call   405350 <memcpy@plt>
  42bb7b:	add    rsp,0x8
  42bb7f:	mov    rcx,rax
  42bb82:	pop    rbx
  42bb83:	mov    rax,rcx
  42bb86:	pop    rbp
  42bb87:	ret    
  42bb88:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bb90 <cmetrohash64_1@@Base>:
  42bb90:	endbr64 
  42bb94:	push   r13
  42bb96:	mov    edx,edx
  42bb98:	mov    r10d,0xc83a91e1
  42bb9e:	push   r12
  42bba0:	imul   rdx,r10
  42bba4:	movabs r8,0x60e25d3baf065edb
  42bbae:	push   rbp
  42bbaf:	add    r8,rsi
  42bbb2:	lea    rbp,[rdi+rsi*1]
  42bbb6:	push   rbx
  42bbb7:	add    r8,rdx
  42bbba:	cmp    rsi,0x1f
  42bbbe:	jbe    42bc9f <cmetrohash64_1@@Base+0x10f>
  42bbc4:	lea    rbx,[rbp-0x20]
  42bbc8:	mov    r12,r8
  42bbcb:	mov    r13,r8
  42bbce:	mov    rsi,r8
  42bbd1:	mov    r9,r8
  42bbd4:	mov    r11d,0x8648dbdb
  42bbda:	nop    WORD PTR [rax+rax*1+0x0]
  42bbe0:	mov    rax,QWORD PTR [rdi]
  42bbe3:	imul   rdx,QWORD PTR [rdi+0x10],0x7bdec03b
  42bbeb:	imul   rax,r10
  42bbef:	add    rdi,0x20
  42bbf3:	add    rdx,r13
  42bbf6:	add    r9,rax
  42bbf9:	mov    rax,QWORD PTR [rdi-0x18]
  42bbfd:	rorx   r9,r9,0x1d
  42bc03:	imul   rax,r11
  42bc07:	add    r9,r13
  42bc0a:	rorx   rdx,rdx,0x1d
  42bc10:	add    rsi,rax
  42bc13:	imul   rax,QWORD PTR [rdi-0x8],0x2f5870a5
  42bc1b:	rorx   rsi,rsi,0x1d
  42bc21:	add    rsi,r12
  42bc24:	add    rax,r12
  42bc27:	rorx   rax,rax,0x1d
  42bc2d:	lea    r13,[rdx+r9*1]
  42bc31:	lea    r12,[rax+rsi*1]
  42bc35:	cmp    rdi,rbx
  42bc38:	jbe    42bbe0 <cmetrohash64_1@@Base+0x50>
  42bc3a:	lea    rdx,[r9+r12*1]
  42bc3e:	imul   rdx,r10
  42bc42:	add    rdx,rsi
  42bc45:	rorx   rdx,rdx,0x21
  42bc4b:	imul   rdx,r11
  42bc4f:	xor    rdx,r13
  42bc52:	lea    rax,[rsi+rdx*1]
  42bc56:	imul   rax,r11
  42bc5a:	lea    rbx,[r9+rdx*1]
  42bc5e:	imul   rbx,r10
  42bc62:	add    rax,r9
  42bc65:	rorx   rax,rax,0x21
  42bc6b:	imul   rax,r10
  42bc6f:	xor    r9,rsi
  42bc72:	xor    rax,r12
  42bc75:	add    rbx,rax
  42bc78:	add    rsi,rax
  42bc7b:	rorx   rbx,rbx,0x21
  42bc81:	imul   rbx,r11
  42bc85:	imul   r11,rsi
  42bc89:	xor    r9,rbx
  42bc8c:	add    r11,rdx
  42bc8f:	rorx   r11,r11,0x21
  42bc95:	imul   r10,r11
  42bc99:	xor    r10,r9
  42bc9c:	add    r8,r10
  42bc9f:	mov    rax,rbp
  42bca2:	sub    rax,rdi
  42bca5:	cmp    rax,0xf
  42bca9:	jle    42bd20 <cmetrohash64_1@@Base+0x190>
  42bcab:	mov    eax,0xc83a91e1
  42bcb0:	imul   rax,QWORD PTR [rdi]
  42bcb4:	mov    esi,0x8648dbdb
  42bcb9:	movabs rdx,0x6907a4ca322e467b
  42bcc3:	add    rax,r8
  42bcc6:	rorx   rax,rax,0x21
  42bccc:	mov    r10,rax
  42bccf:	imul   r10,rsi
  42bcd3:	imul   rsi,QWORD PTR [rdi+0x8]
  42bcd8:	imul   rax,rdx
  42bcdc:	add    rdi,0x10
  42bce0:	add    rsi,r8
  42bce3:	rorx   rsi,rsi,0x21
  42bce9:	imul   r9,rsi,0x7bdec03b
  42bcf0:	rorx   rdx,rax,0x23
  42bcf6:	movabs rax,0x16e8b05e33f3b607
  42bd00:	imul   rsi,rax
  42bd04:	add    rdx,r9
  42bd07:	xor    rdx,r10
  42bd0a:	rorx   rsi,rsi,0x23
  42bd10:	lea    rax,[rdx+rsi*1]
  42bd14:	xor    rax,r9
  42bd17:	add    r8,rax
  42bd1a:	mov    rax,rbp
  42bd1d:	sub    rax,rdi
  42bd20:	cmp    rax,0x7
  42bd24:	jle    42bd4c <cmetrohash64_1@@Base+0x1bc>
  42bd26:	imul   rax,QWORD PTR [rdi],0x2f5870a5
  42bd2d:	mov    edx,0x8648dbdb
  42bd32:	add    rdi,0x8
  42bd36:	add    rax,r8
  42bd39:	rorx   r8,rax,0x21
  42bd3f:	imul   r8,rdx
  42bd43:	xor    r8,rax
  42bd46:	mov    rax,rbp
  42bd49:	sub    rax,rdi
  42bd4c:	cmp    rax,0x3
  42bd50:	jle    42bd7a <cmetrohash64_1@@Base+0x1ea>
  42bd52:	mov    eax,DWORD PTR [rdi]
  42bd54:	mov    edx,0x8648dbdb
  42bd59:	imul   rax,rax,0x2f5870a5
  42bd60:	add    rdi,0x4
  42bd64:	add    rax,r8
  42bd67:	rorx   r8,rax,0xf
  42bd6d:	imul   r8,rdx
  42bd71:	xor    r8,rax
  42bd74:	mov    rax,rbp
  42bd77:	sub    rax,rdi
  42bd7a:	cmp    rax,0x1
  42bd7e:	jle    42bda9 <cmetrohash64_1@@Base+0x219>
  42bd80:	movzx  eax,WORD PTR [rdi]
  42bd83:	mov    edx,0x8648dbdb
  42bd88:	imul   rax,rax,0x2f5870a5
  42bd8f:	add    rdi,0x2
  42bd93:	add    rax,r8
  42bd96:	rorx   r8,rax,0xd
  42bd9c:	imul   r8,rdx
  42bda0:	xor    r8,rax
  42bda3:	mov    rax,rbp
  42bda6:	sub    rax,rdi
  42bda9:	test   rax,rax
  42bdac:	jle    42bdcd <cmetrohash64_1@@Base+0x23d>
  42bdae:	movzx  eax,BYTE PTR [rdi]
  42bdb1:	mov    edx,0x8648dbdb
  42bdb6:	imul   rax,rax,0x2f5870a5
  42bdbd:	add    rax,r8
  42bdc0:	rorx   r8,rax,0x19
  42bdc6:	imul   r8,rdx
  42bdca:	xor    r8,rax
  42bdcd:	rorx   rax,r8,0x21
  42bdd3:	xor    r8,rax
  42bdd6:	mov    eax,0xc83a91e1
  42bddb:	imul   r8,rax
  42bddf:	pop    rbx
  42bde0:	pop    rbp
  42bde1:	rorx   rax,r8,0x21
  42bde7:	pop    r12
  42bde9:	xor    r8,rax
  42bdec:	mov    QWORD PTR [rcx],r8
  42bdef:	pop    r13
  42bdf1:	ret    
  42bdf2:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42bdfd:	nop    DWORD PTR [rax]

000000000042be00 <cmetrohash64_2@@Base>:
  42be00:	endbr64 
  42be04:	push   r13
  42be06:	mov    edx,edx
  42be08:	mov    r10d,0xd6d018f5
  42be0e:	push   r12
  42be10:	imul   rdx,r10
  42be14:	movabs r8,0x52bc33fedbe4cbb5
  42be1e:	push   rbp
  42be1f:	add    r8,rsi
  42be22:	lea    rbp,[rdi+rsi*1]
  42be26:	push   rbx
  42be27:	add    r8,rdx
  42be2a:	cmp    rsi,0x1f
  42be2e:	jbe    42bf0f <cmetrohash64_2@@Base+0x10f>
  42be34:	lea    rbx,[rbp-0x20]
  42be38:	mov    r12,r8
  42be3b:	mov    r13,r8
  42be3e:	mov    rsi,r8
  42be41:	mov    r9,r8
  42be44:	mov    r11d,0xa2aa033b
  42be4a:	nop    WORD PTR [rax+rax*1+0x0]
  42be50:	mov    rax,QWORD PTR [rdi]
  42be53:	imul   rdx,QWORD PTR [rdi+0x10],0x62992fc1
  42be5b:	imul   rax,r10
  42be5f:	add    rdi,0x20
  42be63:	add    rdx,r13
  42be66:	add    r9,rax
  42be69:	mov    rax,QWORD PTR [rdi-0x18]
  42be6d:	rorx   r9,r9,0x1d
  42be73:	imul   rax,r11
  42be77:	add    r9,r13
  42be7a:	rorx   rdx,rdx,0x1d
  42be80:	add    rsi,rax
  42be83:	imul   rax,QWORD PTR [rdi-0x8],0x30bc5b29
  42be8b:	rorx   rsi,rsi,0x1d
  42be91:	add    rsi,r12
  42be94:	add    rax,r12
  42be97:	rorx   rax,rax,0x1d
  42be9d:	lea    r13,[rdx+r9*1]
  42bea1:	lea    r12,[rax+rsi*1]
  42bea5:	cmp    rdi,rbx
  42bea8:	jbe    42be50 <cmetrohash64_2@@Base+0x50>
  42beaa:	lea    rdx,[r9+r12*1]
  42beae:	imul   rdx,r10
  42beb2:	add    rdx,rsi
  42beb5:	rorx   rdx,rdx,0x1e
  42bebb:	imul   rdx,r11
  42bebf:	xor    rdx,r13
  42bec2:	lea    rax,[rsi+rdx*1]
  42bec6:	imul   rax,r11
  42beca:	lea    rbx,[r9+rdx*1]
  42bece:	imul   rbx,r10
  42bed2:	add    rax,r9
  42bed5:	rorx   rax,rax,0x1e
  42bedb:	imul   rax,r10
  42bedf:	xor    r9,rsi
  42bee2:	xor    rax,r12
  42bee5:	add    rbx,rax
  42bee8:	add    rsi,rax
  42beeb:	rorx   rbx,rbx,0x1e
  42bef1:	imul   rbx,r11
  42bef5:	imul   r11,rsi
  42bef9:	xor    r9,rbx
  42befc:	add    r11,rdx
  42beff:	rorx   r11,r11,0x1e
  42bf05:	imul   r10,r11
  42bf09:	xor    r10,r9
  42bf0c:	add    r8,r10
  42bf0f:	mov    rax,rbp
  42bf12:	sub    rax,rdi
  42bf15:	cmp    rax,0xf
  42bf19:	jle    42bf8c <cmetrohash64_2@@Base+0x18c>
  42bf1b:	imul   rax,QWORD PTR [rdi],0x62992fc1
  42bf22:	imul   rsi,QWORD PTR [rdi+0x8],0x62992fc1
  42bf2a:	movabs rdx,0x28e511fea41f163d
  42bf34:	add    rax,r8
  42bf37:	rorx   rax,rax,0x1d
  42bf3d:	imul   r10,rax,0x30bc5b29
  42bf44:	imul   rax,rdx
  42bf48:	add    rsi,r8
  42bf4b:	rorx   rsi,rsi,0x1d
  42bf51:	imul   r9,rsi,0x30bc5b29
  42bf58:	rorx   rdx,rax,0x22
  42bf5e:	movabs rax,0x9472cc564ae2c91
  42bf68:	imul   rsi,rax
  42bf6c:	add    rdx,r9
  42bf6f:	xor    rdx,r10
  42bf72:	rorx   rsi,rsi,0x22
  42bf78:	lea    rax,[rdx+rsi*1]
  42bf7c:	xor    rax,r9
  42bf7f:	add    rdi,0x10
  42bf83:	add    r8,rax
  42bf86:	mov    rax,rbp
  42bf89:	sub    rax,rdi
  42bf8c:	cmp    rax,0x7
  42bf90:	jle    42bfb8 <cmetrohash64_2@@Base+0x1b8>
  42bf92:	imul   rax,QWORD PTR [rdi],0x30bc5b29
  42bf99:	mov    edx,0xa2aa033b
  42bf9e:	add    rdi,0x8
  42bfa2:	add    rax,r8
  42bfa5:	rorx   r8,rax,0x24
  42bfab:	imul   r8,rdx
  42bfaf:	xor    r8,rax
  42bfb2:	mov    rax,rbp
  42bfb5:	sub    rax,rdi
  42bfb8:	cmp    rax,0x3
  42bfbc:	jle    42bfe6 <cmetrohash64_2@@Base+0x1e6>
  42bfbe:	mov    eax,DWORD PTR [rdi]
  42bfc0:	mov    edx,0xa2aa033b
  42bfc5:	imul   rax,rax,0x30bc5b29
  42bfcc:	add    rdi,0x4
  42bfd0:	add    rax,r8
  42bfd3:	rorx   r8,rax,0xf
  42bfd9:	imul   r8,rdx
  42bfdd:	xor    r8,rax
  42bfe0:	mov    rax,rbp
  42bfe3:	sub    rax,rdi
  42bfe6:	cmp    rax,0x1
  42bfea:	jle    42c015 <cmetrohash64_2@@Base+0x215>
  42bfec:	movzx  eax,WORD PTR [rdi]
  42bfef:	mov    edx,0xa2aa033b
  42bff4:	imul   rax,rax,0x30bc5b29
  42bffb:	add    rdi,0x2
  42bfff:	add    rax,r8
  42c002:	rorx   r8,rax,0xf
  42c008:	imul   r8,rdx
  42c00c:	xor    r8,rax
  42c00f:	mov    rax,rbp
  42c012:	sub    rax,rdi
  42c015:	test   rax,rax
  42c018:	jle    42c039 <cmetrohash64_2@@Base+0x239>
  42c01a:	movzx  eax,BYTE PTR [rdi]
  42c01d:	mov    edx,0xa2aa033b
  42c022:	imul   rax,rax,0x30bc5b29
  42c029:	add    rax,r8
  42c02c:	rorx   r8,rax,0x17
  42c032:	imul   r8,rdx
  42c036:	xor    r8,rax
  42c039:	rorx   rax,r8,0x1c
  42c03f:	xor    r8,rax
  42c042:	mov    eax,0xd6d018f5
  42c047:	imul   r8,rax
  42c04b:	pop    rbx
  42c04c:	pop    rbp
  42c04d:	rorx   rax,r8,0x1d
  42c053:	pop    r12
  42c055:	xor    r8,rax
  42c058:	mov    QWORD PTR [rcx],r8
  42c05b:	pop    r13
  42c05d:	ret    
  42c05e:	xchg   ax,ax
  42c060:	push   rbx
  42c061:	mov    rbx,rdi
  42c064:	mov    rdi,QWORD PTR [rdi]
  42c067:	test   rdi,rdi
  42c06a:	je     42c071 <cmetrohash64_2@@Base+0x271>
  42c06c:	call   405230 <free@plt>
  42c071:	vpxor  xmm0,xmm0,xmm0
  42c075:	vmovups XMMWORD PTR [rbx],xmm0
  42c079:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  42c07e:	pop    rbx
  42c07f:	ret    
  42c080:	push   r15
  42c082:	push   r14
  42c084:	push   r13
  42c086:	mov    r13,rdi
  42c089:	push   r12
  42c08b:	push   rbp
  42c08c:	push   rbx
  42c08d:	sub    rsp,0x28
  42c091:	mov    QWORD PTR [rsp+0x8],rsi
  42c096:	mov    r15,QWORD PTR [rdi]
  42c099:	mov    rax,QWORD PTR fs:0x28
  42c0a2:	mov    QWORD PTR [rsp+0x18],rax
  42c0a7:	xor    eax,eax
  42c0a9:	test   r15,r15
  42c0ac:	je     42c170 <cmetrohash64_2@@Base+0x370>
  42c0b2:	mov    r8,rdx
  42c0b5:	mov    rax,QWORD PTR [r13+0x18]
  42c0b9:	mov    rdi,rsi
  42c0bc:	lea    rcx,[rsp+0x10]
  42c0c1:	mov    edx,0x2f693b52
  42c0c6:	mov    rsi,r8
  42c0c9:	lea    r14,[rax-0x1]
  42c0cd:	mov    QWORD PTR [rsp],r8
  42c0d1:	call   42bb90 <cmetrohash64_1@@Base>
  42c0d6:	mov    ebp,DWORD PTR [rsp+0x10]
  42c0da:	mov    rax,r14
  42c0dd:	and    rax,rbp
  42c0e0:	lea    r12,[r15+rax*8]
  42c0e4:	mov    rbx,QWORD PTR [r12]
  42c0e8:	test   rbx,rbx
  42c0eb:	je     42c170 <cmetrohash64_2@@Base+0x370>
  42c0f1:	inc    rbp
  42c0f4:	mov    r8,QWORD PTR [rsp]
  42c0f8:	jmp    42c116 <cmetrohash64_2@@Base+0x316>
  42c0fa:	nop    WORD PTR [rax+rax*1+0x0]
  42c100:	mov    rax,rbp
  42c103:	and    rax,r14
  42c106:	lea    r12,[r15+rax*8]
  42c10a:	mov    rbx,QWORD PTR [r12]
  42c10e:	inc    rbp
  42c111:	test   rbx,rbx
  42c114:	je     42c170 <cmetrohash64_2@@Base+0x370>
  42c116:	cmp    rbx,0x2
  42c11a:	je     42c100 <cmetrohash64_2@@Base+0x300>
  42c11c:	movsxd rax,DWORD PTR [rbx+0x10]
  42c120:	cmp    r8,rax
  42c123:	jne    42c100 <cmetrohash64_2@@Base+0x300>
  42c125:	mov    rsi,QWORD PTR [rbx+0x8]
  42c129:	mov    rdi,QWORD PTR [rsp+0x8]
  42c12e:	mov    rdx,r8
  42c131:	mov    QWORD PTR [rsp],r8
  42c135:	call   405310 <memcmp@plt>
  42c13a:	test   eax,eax
  42c13c:	mov    r8,QWORD PTR [rsp]
  42c140:	jne    42c100 <cmetrohash64_2@@Base+0x300>
  42c142:	mov    QWORD PTR [r12],0x2
  42c14a:	dec    QWORD PTR [r13+0x10]
  42c14e:	mov    rcx,QWORD PTR [rsp+0x18]
  42c153:	xor    rcx,QWORD PTR fs:0x28
  42c15c:	mov    rax,rbx
  42c15f:	jne    42c174 <cmetrohash64_2@@Base+0x374>
  42c161:	add    rsp,0x28
  42c165:	pop    rbx
  42c166:	pop    rbp
  42c167:	pop    r12
  42c169:	pop    r13
  42c16b:	pop    r14
  42c16d:	pop    r15
  42c16f:	ret    
  42c170:	xor    ebx,ebx
  42c172:	jmp    42c14e <cmetrohash64_2@@Base+0x34e>
  42c174:	call   4052c0 <__stack_chk_fail@plt>
  42c179:	nop    DWORD PTR [rax+0x0]
  42c180:	push   r13
  42c182:	push   r12
  42c184:	push   rbp
  42c185:	mov    rbp,rdi
  42c188:	push   rbx
  42c189:	sub    rsp,0x38
  42c18d:	mov    rax,QWORD PTR fs:0x28
  42c196:	mov    QWORD PTR [rsp+0x28],rax
  42c19b:	xor    eax,eax
  42c19d:	cmp    QWORD PTR [rdi+0x10],rsi
  42c1a1:	cmovae rsi,QWORD PTR [rdi+0x10]
  42c1a6:	mov    r12,QWORD PTR [rdi]
  42c1a9:	cmp    rsi,0x2
  42c1ad:	jbe    42c290 <cmetrohash64_2@@Base+0x490>
  42c1b3:	mov    eax,0x4
  42c1b8:	nop    DWORD PTR [rax+rax*1+0x0]
  42c1c0:	lea    rbx,[rax+rax*1]
  42c1c4:	imul   rax,rax,0x166
  42c1cb:	shr    rax,0x8
  42c1cf:	mov    rdx,rax
  42c1d2:	mov    rax,rbx
  42c1d5:	cmp    rsi,rdx
  42c1d8:	ja     42c1c0 <cmetrohash64_2@@Base+0x3c0>
  42c1da:	mov    esi,0x8
  42c1df:	mov    rdi,rbx
  42c1e2:	call   405320 <calloc@plt>
  42c1e7:	mov    QWORD PTR [rsp],rax
  42c1eb:	test   rax,rax
  42c1ee:	je     42c29a <cmetrohash64_2@@Base+0x49a>
  42c1f4:	cmp    QWORD PTR [rbp+0x18],0x0
  42c1f9:	mov    QWORD PTR [rsp+0x8],0x0
  42c202:	mov    QWORD PTR [rsp+0x18],rbx
  42c207:	mov    QWORD PTR [rsp+0x10],0x0
  42c210:	je     42c24e <cmetrohash64_2@@Base+0x44e>
  42c212:	xor    ebx,ebx
  42c214:	mov    r13,rsp
  42c217:	nop    WORD PTR [rax+rax*1+0x0]
  42c220:	mov    rcx,QWORD PTR [r12+rbx*8]
  42c224:	test   rcx,rcx
  42c227:	je     42c245 <cmetrohash64_2@@Base+0x445>
  42c229:	cmp    rcx,0x2
  42c22d:	je     42c245 <cmetrohash64_2@@Base+0x445>
  42c22f:	movsxd rdx,DWORD PTR [rcx+0x10]
  42c233:	mov    rsi,QWORD PTR [rcx+0x8]
  42c237:	mov    r8d,0x3
  42c23d:	mov    rdi,r13
  42c240:	call   42c2b0 <cmetrohash64_2@@Base+0x4b0>
  42c245:	inc    rbx
  42c248:	cmp    QWORD PTR [rbp+0x18],rbx
  42c24c:	ja     42c220 <cmetrohash64_2@@Base+0x420>
  42c24e:	mov    rdi,rbp
  42c251:	call   42c060 <cmetrohash64_2@@Base+0x260>
  42c256:	vmovdqa xmm0,XMMWORD PTR [rsp]
  42c25b:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  42c261:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  42c266:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  42c26b:	xor    eax,eax
  42c26d:	mov    rdi,QWORD PTR [rsp+0x28]
  42c272:	xor    rdi,QWORD PTR fs:0x28
  42c27b:	jne    42c2a1 <cmetrohash64_2@@Base+0x4a1>
  42c27d:	add    rsp,0x38
  42c281:	pop    rbx
  42c282:	pop    rbp
  42c283:	pop    r12
  42c285:	pop    r13
  42c287:	ret    
  42c288:	nop    DWORD PTR [rax+rax*1+0x0]
  42c290:	mov    ebx,0x4
  42c295:	jmp    42c1da <cmetrohash64_2@@Base+0x3da>
  42c29a:	mov    eax,0xffffffff
  42c29f:	jmp    42c26d <cmetrohash64_2@@Base+0x46d>
  42c2a1:	call   4052c0 <__stack_chk_fail@plt>
  42c2a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c2b0:	push   r15
  42c2b2:	push   r14
  42c2b4:	push   r13
  42c2b6:	mov    r13,rdx
  42c2b9:	push   r12
  42c2bb:	push   rbp
  42c2bc:	push   rbx
  42c2bd:	sub    rsp,0x48
  42c2c1:	mov    QWORD PTR [rsp+0x10],rsi
  42c2c6:	mov    QWORD PTR [rsp+0x8],rcx
  42c2cb:	mov    DWORD PTR [rsp+0x1c],r8d
  42c2d0:	mov    rdx,QWORD PTR fs:0x28
  42c2d9:	mov    QWORD PTR [rsp+0x38],rdx
  42c2de:	xor    edx,edx
  42c2e0:	test   rcx,rcx
  42c2e3:	je     42c4be <cmetrohash64_2@@Base+0x6be>
  42c2e9:	cmp    QWORD PTR [rsp+0x8],0x2
  42c2ef:	je     42c49f <cmetrohash64_2@@Base+0x69f>
  42c2f5:	cmp    QWORD PTR [rsp+0x8],0x1
  42c2fb:	je     42c4e2 <cmetrohash64_2@@Base+0x6e2>
  42c301:	mov    r12,QWORD PTR [rdi+0x18]
  42c305:	mov    rsi,QWORD PTR [rdi+0x10]
  42c309:	imul   rax,r12,0xb3
  42c310:	mov    r15,rdi
  42c313:	shr    rax,0x8
  42c317:	cmp    rsi,rax
  42c31a:	jae    42c400 <cmetrohash64_2@@Base+0x600>
  42c320:	mov    rdi,QWORD PTR [rsp+0x10]
  42c325:	lea    rcx,[rsp+0x30]
  42c32a:	mov    edx,0x2f693b52
  42c32f:	mov    rsi,r13
  42c332:	mov    r14,QWORD PTR [r15]
  42c335:	dec    r12
  42c338:	call   42bb90 <cmetrohash64_1@@Base>
  42c33d:	mov    ebp,DWORD PTR [rsp+0x30]
  42c341:	mov    rax,r12
  42c344:	and    rax,rbp
  42c347:	lea    rcx,[r14+rax*8]
  42c34b:	mov    eax,DWORD PTR [rsp+0x1c]
  42c34f:	sub    eax,0x2
  42c352:	cmp    eax,0x1
  42c355:	jbe    42c450 <cmetrohash64_2@@Base+0x650>
  42c35b:	mov    rbx,QWORD PTR [rcx]
  42c35e:	inc    rbp
  42c361:	xor    r11d,r11d
  42c364:	test   rbx,rbx
  42c367:	jne    42c392 <cmetrohash64_2@@Base+0x592>
  42c369:	jmp    42c49a <cmetrohash64_2@@Base+0x69a>
  42c36e:	xchg   ax,ax
  42c370:	movsxd rax,DWORD PTR [rbx+0x10]
  42c374:	cmp    r13,rax
  42c377:	je     42c3a8 <cmetrohash64_2@@Base+0x5a8>
  42c379:	mov    rax,r12
  42c37c:	and    rax,rbp
  42c37f:	lea    rcx,[r14+rax*8]
  42c383:	mov    rbx,QWORD PTR [rcx]
  42c386:	inc    rbp
  42c389:	test   rbx,rbx
  42c38c:	je     42c430 <cmetrohash64_2@@Base+0x630>
  42c392:	cmp    rbx,0x2
  42c396:	jne    42c370 <cmetrohash64_2@@Base+0x570>
  42c398:	test   r11,r11
  42c39b:	cmove  r11,rcx
  42c39f:	jmp    42c379 <cmetrohash64_2@@Base+0x579>
  42c3a1:	nop    DWORD PTR [rax+0x0]
  42c3a8:	mov    rsi,QWORD PTR [rbx+0x8]
  42c3ac:	mov    rdi,QWORD PTR [rsp+0x10]
  42c3b1:	mov    rdx,r13
  42c3b4:	mov    QWORD PTR [rsp+0x20],r11
  42c3b9:	mov    QWORD PTR [rsp+0x28],rcx
  42c3be:	call   405310 <memcmp@plt>
  42c3c3:	test   eax,eax
  42c3c5:	mov    r11,QWORD PTR [rsp+0x20]
  42c3ca:	jne    42c379 <cmetrohash64_2@@Base+0x579>
  42c3cc:	mov    eax,DWORD PTR [rsp+0x1c]
  42c3d0:	test   eax,eax
  42c3d2:	je     42c420 <cmetrohash64_2@@Base+0x620>
  42c3d4:	mov    rdi,QWORD PTR [rsp+0x38]
  42c3d9:	xor    rdi,QWORD PTR fs:0x28
  42c3e2:	mov    rax,rbx
  42c3e5:	jne    42c4dd <cmetrohash64_2@@Base+0x6dd>
  42c3eb:	add    rsp,0x48
  42c3ef:	pop    rbx
  42c3f0:	pop    rbp
  42c3f1:	pop    r12
  42c3f3:	pop    r13
  42c3f5:	pop    r14
  42c3f7:	pop    r15
  42c3f9:	ret    
  42c3fa:	nop    WORD PTR [rax+rax*1+0x0]
  42c400:	add    rsi,rsi
  42c403:	call   42c180 <cmetrohash64_2@@Base+0x380>
  42c408:	test   eax,eax
  42c40a:	jne    42c501 <cmetrohash64_2@@Base+0x701>
  42c410:	mov    r12,QWORD PTR [r15+0x18]
  42c414:	jmp    42c320 <cmetrohash64_2@@Base+0x520>
  42c419:	nop    DWORD PTR [rax+0x0]
  42c420:	mov    rax,QWORD PTR [rsp+0x8]
  42c425:	mov    rcx,QWORD PTR [rsp+0x28]
  42c42a:	mov    QWORD PTR [rcx],rax
  42c42d:	jmp    42c3d4 <cmetrohash64_2@@Base+0x5d4>
  42c42f:	nop
  42c430:	test   r11,r11
  42c433:	cmove  r11,rcx
  42c437:	mov    rax,QWORD PTR [rsp+0x8]
  42c43c:	inc    QWORD PTR [r15+0x10]
  42c440:	xor    ebx,ebx
  42c442:	mov    QWORD PTR [r11],rax
  42c445:	jmp    42c3d4 <cmetrohash64_2@@Base+0x5d4>
  42c447:	nop    WORD PTR [rax+rax*1+0x0]
  42c450:	mov    rax,QWORD PTR [rcx]
  42c453:	inc    QWORD PTR [r15+0x10]
  42c457:	test   rax,rax
  42c45a:	je     42c48b <cmetrohash64_2@@Base+0x68b>
  42c45c:	cmp    rax,0x2
  42c460:	je     42c48b <cmetrohash64_2@@Base+0x68b>
  42c462:	inc    rbp
  42c465:	jmp    42c476 <cmetrohash64_2@@Base+0x676>
  42c467:	nop    WORD PTR [rax+rax*1+0x0]
  42c470:	cmp    rax,0x2
  42c474:	je     42c48b <cmetrohash64_2@@Base+0x68b>
  42c476:	mov    rax,r12
  42c479:	and    rax,rbp
  42c47c:	lea    rcx,[r14+rax*8]
  42c480:	mov    rax,QWORD PTR [rcx]
  42c483:	inc    rbp
  42c486:	test   rax,rax
  42c489:	jne    42c470 <cmetrohash64_2@@Base+0x670>
  42c48b:	mov    rax,QWORD PTR [rsp+0x8]
  42c490:	xor    ebx,ebx
  42c492:	mov    QWORD PTR [rcx],rax
  42c495:	jmp    42c3d4 <cmetrohash64_2@@Base+0x5d4>
  42c49a:	mov    r11,rcx
  42c49d:	jmp    42c437 <cmetrohash64_2@@Base+0x637>
  42c49f:	lea    rcx,[rip+0x1d2da]        # 449780 <flatcc_builder_padding_base@@Base+0x200>
  42c4a6:	mov    edx,0x73
  42c4ab:	lea    rsi,[rip+0x1960e]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  42c4b2:	lea    rdi,[rip+0x196c1]        # 445b7a <_IO_stdin_used@@Base+0x18b7a>
  42c4b9:	call   4052e0 <__assert_fail@plt>
  42c4be:	lea    rcx,[rip+0x1d2bb]        # 449780 <flatcc_builder_padding_base@@Base+0x200>
  42c4c5:	mov    edx,0x72
  42c4ca:	lea    rsi,[rip+0x195ef]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  42c4d1:	lea    rdi,[rip+0x1968b]        # 445b63 <_IO_stdin_used@@Base+0x18b63>
  42c4d8:	call   4052e0 <__assert_fail@plt>
  42c4dd:	call   4052c0 <__stack_chk_fail@plt>
  42c4e2:	lea    rcx,[rip+0x1d297]        # 449780 <flatcc_builder_padding_base@@Base+0x200>
  42c4e9:	mov    edx,0x74
  42c4ee:	lea    rsi,[rip+0x195cb]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  42c4f5:	lea    rdi,[rip+0x19695]        # 445b91 <_IO_stdin_used@@Base+0x18b91>
  42c4fc:	call   4052e0 <__assert_fail@plt>
  42c501:	mov    rax,QWORD PTR [rip+0x24ae0]        # 450fe8 <stderr@GLIBC_2.2.5>
  42c508:	lea    rcx,[rip+0x19621]        # 445b30 <_IO_stdin_used@@Base+0x18b30>
  42c50f:	mov    rdi,QWORD PTR [rax]
  42c512:	lea    rdx,[rip+0x1968d]        # 445ba6 <_IO_stdin_used@@Base+0x18ba6>
  42c519:	mov    esi,0x1
  42c51e:	xor    eax,eax
  42c520:	call   4053e0 <__fprintf_chk@plt>
  42c525:	mov    edi,0x1
  42c52a:	call   4053c0 <exit@plt>
  42c52f:	nop
  42c530:	push   r15
  42c532:	push   r14
  42c534:	push   r13
  42c536:	push   r12
  42c538:	push   rbp
  42c539:	push   rbx
  42c53a:	sub    rsp,0x18
  42c53e:	mov    rax,QWORD PTR fs:0x28
  42c547:	mov    QWORD PTR [rsp+0x8],rax
  42c54c:	xor    eax,eax
  42c54e:	test   rdi,rdi
  42c551:	je     42c5f0 <cmetrohash64_2@@Base+0x7f0>
  42c557:	mov    r12,QWORD PTR [rsi]
  42c55a:	mov    r13,rdx
  42c55d:	mov    r15,rcx
  42c560:	mov    r14,rdi
  42c563:	mov    rcx,rsp
  42c566:	mov    edx,0x2f693b52
  42c56b:	mov    rsi,r15
  42c56e:	mov    rdi,r13
  42c571:	call   42bb90 <cmetrohash64_1@@Base>
  42c576:	dec    r12
  42c579:	mov    ebp,DWORD PTR [rsp]
  42c57c:	mov    rax,r12
  42c57f:	and    rax,rbp
  42c582:	mov    rbx,QWORD PTR [r14+rax*8]
  42c586:	test   rbx,rbx
  42c589:	je     42c5f0 <cmetrohash64_2@@Base+0x7f0>
  42c58b:	inc    rbp
  42c58e:	jmp    42c5a2 <cmetrohash64_2@@Base+0x7a2>
  42c590:	mov    rax,r12
  42c593:	and    rax,rbp
  42c596:	mov    rbx,QWORD PTR [r14+rax*8]
  42c59a:	inc    rbp
  42c59d:	test   rbx,rbx
  42c5a0:	je     42c5f0 <cmetrohash64_2@@Base+0x7f0>
  42c5a2:	cmp    rbx,0x2
  42c5a6:	je     42c590 <cmetrohash64_2@@Base+0x790>
  42c5a8:	movsxd rax,DWORD PTR [rbx+0x10]
  42c5ac:	cmp    r15,rax
  42c5af:	jne    42c590 <cmetrohash64_2@@Base+0x790>
  42c5b1:	mov    rsi,QWORD PTR [rbx+0x8]
  42c5b5:	mov    rdx,r15
  42c5b8:	mov    rdi,r13
  42c5bb:	call   405310 <memcmp@plt>
  42c5c0:	test   eax,eax
  42c5c2:	jne    42c590 <cmetrohash64_2@@Base+0x790>
  42c5c4:	mov    rdx,QWORD PTR [rsp+0x8]
  42c5c9:	xor    rdx,QWORD PTR fs:0x28
  42c5d2:	mov    rax,rbx
  42c5d5:	jne    42c5f4 <cmetrohash64_2@@Base+0x7f4>
  42c5d7:	add    rsp,0x18
  42c5db:	pop    rbx
  42c5dc:	pop    rbp
  42c5dd:	pop    r12
  42c5df:	pop    r13
  42c5e1:	pop    r14
  42c5e3:	pop    r15
  42c5e5:	ret    
  42c5e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c5f0:	xor    ebx,ebx
  42c5f2:	jmp    42c5c4 <cmetrohash64_2@@Base+0x7c4>
  42c5f4:	call   4052c0 <__stack_chk_fail@plt>
  42c5f9:	nop    DWORD PTR [rax+0x0]

000000000042c600 <fb_name_table_clear@@Base>:
  42c600:	endbr64 
  42c604:	jmp    42c060 <cmetrohash64_2@@Base+0x260>
  42c609:	nop    DWORD PTR [rax+0x0]

000000000042c610 <fb_name_table_destroy@@Base>:
  42c610:	endbr64 
  42c614:	push   r14
  42c616:	push   r13
  42c618:	push   r12
  42c61a:	push   rbp
  42c61b:	mov    rbp,rdi
  42c61e:	push   rbx
  42c61f:	test   rsi,rsi
  42c622:	je     42c65e <fb_name_table_destroy@@Base+0x4e>
  42c624:	cmp    QWORD PTR [rdi+0x18],0x0
  42c629:	mov    r12,QWORD PTR [rdi]
  42c62c:	je     42c65e <fb_name_table_destroy@@Base+0x4e>
  42c62e:	mov    r13,rsi
  42c631:	mov    r14,rdx
  42c634:	xor    ebx,ebx
  42c636:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c640:	mov    rsi,QWORD PTR [r12+rbx*8]
  42c644:	test   rsi,rsi
  42c647:	je     42c655 <fb_name_table_destroy@@Base+0x45>
  42c649:	cmp    rsi,0x2
  42c64d:	je     42c655 <fb_name_table_destroy@@Base+0x45>
  42c64f:	mov    rdi,r14
  42c652:	call   r13
  42c655:	inc    rbx
  42c658:	cmp    rbx,QWORD PTR [rbp+0x18]
  42c65c:	jb     42c640 <fb_name_table_destroy@@Base+0x30>
  42c65e:	pop    rbx
  42c65f:	mov    rdi,rbp
  42c662:	pop    rbp
  42c663:	pop    r12
  42c665:	pop    r13
  42c667:	pop    r14
  42c669:	jmp    42c060 <cmetrohash64_2@@Base+0x260>
  42c66e:	xchg   ax,ax

000000000042c670 <fb_name_table_init@@Base>:
  42c670:	endbr64 
  42c674:	push   rbp
  42c675:	push   rbx
  42c676:	mov    rbx,rdi
  42c679:	sub    rsp,0x8
  42c67d:	cmp    rsi,0x2
  42c681:	jbe    42c6e0 <fb_name_table_init@@Base+0x70>
  42c683:	mov    eax,0x4
  42c688:	nop    DWORD PTR [rax+rax*1+0x0]
  42c690:	lea    rbp,[rax+rax*1]
  42c694:	imul   rax,rax,0x166
  42c69b:	shr    rax,0x8
  42c69f:	mov    rdx,rax
  42c6a2:	mov    rax,rbp
  42c6a5:	cmp    rsi,rdx
  42c6a8:	ja     42c690 <fb_name_table_init@@Base+0x20>
  42c6aa:	mov    esi,0x8
  42c6af:	mov    rdi,rbp
  42c6b2:	call   405320 <calloc@plt>
  42c6b7:	mov    QWORD PTR [rbx],rax
  42c6ba:	test   rax,rax
  42c6bd:	je     42c6e7 <fb_name_table_init@@Base+0x77>
  42c6bf:	mov    QWORD PTR [rbx+0x8],0x0
  42c6c7:	mov    QWORD PTR [rbx+0x18],rbp
  42c6cb:	mov    QWORD PTR [rbx+0x10],0x0
  42c6d3:	xor    eax,eax
  42c6d5:	add    rsp,0x8
  42c6d9:	pop    rbx
  42c6da:	pop    rbp
  42c6db:	ret    
  42c6dc:	nop    DWORD PTR [rax+0x0]
  42c6e0:	mov    ebp,0x4
  42c6e5:	jmp    42c6aa <fb_name_table_init@@Base+0x3a>
  42c6e7:	mov    eax,0xffffffff
  42c6ec:	jmp    42c6d5 <fb_name_table_init@@Base+0x65>
  42c6ee:	xchg   ax,ax

000000000042c6f0 <fb_name_table_resize@@Base>:
  42c6f0:	endbr64 
  42c6f4:	jmp    42c180 <cmetrohash64_2@@Base+0x380>
  42c6f9:	nop    DWORD PTR [rax+0x0]

000000000042c700 <fb_name_table_insert@@Base>:
  42c700:	endbr64 
  42c704:	jmp    42c2b0 <cmetrohash64_2@@Base+0x4b0>
  42c709:	nop    DWORD PTR [rax+0x0]

000000000042c710 <fb_name_table_insert_item@@Base>:
  42c710:	endbr64 
  42c714:	mov    rcx,rsi
  42c717:	mov    r8d,edx
  42c71a:	movsxd rdx,DWORD PTR [rsi+0x10]
  42c71e:	mov    rsi,QWORD PTR [rsi+0x8]
  42c722:	jmp    42c2b0 <cmetrohash64_2@@Base+0x4b0>
  42c727:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c730 <fb_name_table_find@@Base>:
  42c730:	endbr64 
  42c734:	mov    rax,rsi
  42c737:	lea    rsi,[rdi+0x18]
  42c73b:	mov    rdi,QWORD PTR [rdi]
  42c73e:	mov    rcx,rdx
  42c741:	mov    rdx,rax
  42c744:	jmp    42c530 <cmetrohash64_2@@Base+0x730>
  42c749:	nop    DWORD PTR [rax+0x0]

000000000042c750 <fb_name_table_find_item@@Base>:
  42c750:	endbr64 
  42c754:	movsxd rcx,DWORD PTR [rsi+0x10]
  42c758:	mov    rdx,QWORD PTR [rsi+0x8]
  42c75c:	lea    rsi,[rdi+0x18]
  42c760:	mov    rdi,QWORD PTR [rdi]
  42c763:	jmp    42c530 <cmetrohash64_2@@Base+0x730>
  42c768:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c770 <fb_name_table_remove@@Base>:
  42c770:	endbr64 
  42c774:	jmp    42c080 <cmetrohash64_2@@Base+0x280>
  42c779:	nop    DWORD PTR [rax+0x0]

000000000042c780 <fb_name_table_remove_item@@Base>:
  42c780:	endbr64 
  42c784:	movsxd rdx,DWORD PTR [rsi+0x10]
  42c788:	mov    rsi,QWORD PTR [rsi+0x8]
  42c78c:	jmp    42c080 <cmetrohash64_2@@Base+0x280>
  42c791:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c79c:	nop    DWORD PTR [rax+0x0]

000000000042c7a0 <fb_name_table_visit@@Base>:
  42c7a0:	endbr64 
  42c7a4:	push   r14
  42c7a6:	push   r13
  42c7a8:	push   r12
  42c7aa:	push   rbp
  42c7ab:	push   rbx
  42c7ac:	cmp    QWORD PTR [rdi+0x18],0x0
  42c7b1:	mov    r14,QWORD PTR [rdi]
  42c7b4:	je     42c7e6 <fb_name_table_visit@@Base+0x46>
  42c7b6:	mov    r13,rdx
  42c7b9:	mov    r12,rsi
  42c7bc:	mov    rbp,rdi
  42c7bf:	xor    ebx,ebx
  42c7c1:	nop    DWORD PTR [rax+0x0]
  42c7c8:	mov    rsi,QWORD PTR [r14+rbx*8]
  42c7cc:	test   rsi,rsi
  42c7cf:	je     42c7dd <fb_name_table_visit@@Base+0x3d>
  42c7d1:	cmp    rsi,0x2
  42c7d5:	je     42c7dd <fb_name_table_visit@@Base+0x3d>
  42c7d7:	mov    rdi,r13
  42c7da:	call   r12
  42c7dd:	inc    rbx
  42c7e0:	cmp    rbx,QWORD PTR [rbp+0x18]
  42c7e4:	jb     42c7c8 <fb_name_table_visit@@Base+0x28>
  42c7e6:	pop    rbx
  42c7e7:	pop    rbp
  42c7e8:	pop    r12
  42c7ea:	pop    r13
  42c7ec:	pop    r14
  42c7ee:	ret    
  42c7ef:	nop
  42c7f0:	push   rbx
  42c7f1:	mov    rbx,rdi
  42c7f4:	mov    rdi,QWORD PTR [rdi]
  42c7f7:	test   rdi,rdi
  42c7fa:	je     42c801 <fb_name_table_visit@@Base+0x61>
  42c7fc:	call   405230 <free@plt>
  42c801:	vpxor  xmm0,xmm0,xmm0
  42c805:	vmovups XMMWORD PTR [rbx],xmm0
  42c809:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  42c80e:	pop    rbx
  42c80f:	ret    
  42c810:	movzx  edx,WORD PTR [rdi+0x10]
  42c814:	cmp    dx,0x5
  42c818:	je     42c868 <fb_name_table_visit@@Base+0xc8>
  42c81a:	cmp    dx,0x6
  42c81e:	je     42c848 <fb_name_table_visit@@Base+0xa8>
  42c820:	xor    eax,eax
  42c822:	cmp    dx,0x4
  42c826:	je     42c830 <fb_name_table_visit@@Base+0x90>
  42c828:	ret    
  42c829:	nop    DWORD PTR [rax+0x0]
  42c830:	mov    rax,QWORD PTR [rdi]
  42c833:	mov    edx,0x9e3779b1
  42c838:	xor    rax,0x2f693b56
  42c83e:	imul   rax,rdx
  42c842:	ret    
  42c843:	nop    DWORD PTR [rax+rax*1+0x0]
  42c848:	movzx  eax,BYTE PTR [rdi]
  42c84b:	mov    edx,0x9e3779b1
  42c850:	xor    eax,0x6
  42c853:	movzx  eax,al
  42c856:	xor    rax,0x2f693b52
  42c85c:	imul   rax,rdx
  42c860:	ret    
  42c861:	nop    DWORD PTR [rax+0x0]
  42c868:	mov    rax,QWORD PTR [rdi]
  42c86b:	mov    edx,0x9e3779b1
  42c870:	xor    rax,0x2f693b57
  42c876:	imul   rax,rdx
  42c87a:	ret    
  42c87b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c880:	test   rdi,rdi
  42c883:	je     42c90d <fb_name_table_visit@@Base+0x16d>
  42c889:	mov    r9,QWORD PTR [rsi]
  42c88c:	mov    r8,rdi
  42c88f:	mov    rdi,rdx
  42c892:	mov    r10,rdx
  42c895:	dec    r9
  42c898:	call   42c810 <fb_name_table_visit@@Base+0x70>
  42c89d:	mov    rdx,r9
  42c8a0:	and    rdx,rax
  42c8a3:	mov    rcx,QWORD PTR [r8+rdx*8]
  42c8a7:	test   rcx,rcx
  42c8aa:	je     42c8fc <fb_name_table_visit@@Base+0x15c>
  42c8ac:	inc    rax
  42c8af:	jmp    42c8d0 <fb_name_table_visit@@Base+0x130>
  42c8b1:	nop    DWORD PTR [rax+0x0]
  42c8b8:	cmp    si,0x4
  42c8bc:	je     42c900 <fb_name_table_visit@@Base+0x160>
  42c8be:	mov    rcx,r9
  42c8c1:	and    rcx,rax
  42c8c4:	mov    rcx,QWORD PTR [r8+rcx*8]
  42c8c8:	inc    rax
  42c8cb:	test   rcx,rcx
  42c8ce:	je     42c8fc <fb_name_table_visit@@Base+0x15c>
  42c8d0:	cmp    rcx,0x2
  42c8d4:	je     42c8be <fb_name_table_visit@@Base+0x11e>
  42c8d6:	movzx  esi,WORD PTR [r10+0x10]
  42c8db:	cmp    si,WORD PTR [rcx+0x10]
  42c8df:	jne    42c8be <fb_name_table_visit@@Base+0x11e>
  42c8e1:	cmp    si,0x5
  42c8e5:	je     42c900 <fb_name_table_visit@@Base+0x160>
  42c8e7:	cmp    si,0x6
  42c8eb:	jne    42c8b8 <fb_name_table_visit@@Base+0x118>
  42c8ed:	movzx  edi,BYTE PTR [rcx]
  42c8f0:	xor    edx,edx
  42c8f2:	cmp    BYTE PTR [r10],dil
  42c8f5:	sete   dl
  42c8f8:	test   edx,edx
  42c8fa:	je     42c8be <fb_name_table_visit@@Base+0x11e>
  42c8fc:	mov    rax,rcx
  42c8ff:	ret    
  42c900:	mov    rdi,QWORD PTR [rcx]
  42c903:	xor    edx,edx
  42c905:	cmp    QWORD PTR [r10],rdi
  42c908:	sete   dl
  42c90b:	jmp    42c8f8 <fb_name_table_visit@@Base+0x158>
  42c90d:	xor    ecx,ecx
  42c90f:	jmp    42c8fc <fb_name_table_visit@@Base+0x15c>
  42c911:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42c91c:	nop    DWORD PTR [rax+0x0]
  42c920:	mov    r10,QWORD PTR [rdi]
  42c923:	test   r10,r10
  42c926:	je     42c9c5 <fb_name_table_visit@@Base+0x225>
  42c92c:	mov    rax,QWORD PTR [rdi+0x18]
  42c930:	mov    r11,rdi
  42c933:	mov    rdi,rsi
  42c936:	lea    r9,[rax-0x1]
  42c93a:	call   42c810 <fb_name_table_visit@@Base+0x70>
  42c93f:	mov    rdx,r9
  42c942:	and    rdx,rax
  42c945:	lea    r8,[r10+rdx*8]
  42c949:	mov    rdx,QWORD PTR [r8]
  42c94c:	test   rdx,rdx
  42c94f:	je     42c9b1 <fb_name_table_visit@@Base+0x211>
  42c951:	inc    rax
  42c954:	jmp    42c97b <fb_name_table_visit@@Base+0x1db>
  42c956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c960:	cmp    cx,0x4
  42c964:	je     42c9b8 <fb_name_table_visit@@Base+0x218>
  42c966:	mov    rdx,r9
  42c969:	and    rdx,rax
  42c96c:	lea    r8,[r10+rdx*8]
  42c970:	mov    rdx,QWORD PTR [r8]
  42c973:	inc    rax
  42c976:	test   rdx,rdx
  42c979:	je     42c9b1 <fb_name_table_visit@@Base+0x211>
  42c97b:	cmp    rdx,0x2
  42c97f:	je     42c966 <fb_name_table_visit@@Base+0x1c6>
  42c981:	movzx  ecx,WORD PTR [rsi+0x10]
  42c985:	cmp    cx,WORD PTR [rdx+0x10]
  42c989:	jne    42c966 <fb_name_table_visit@@Base+0x1c6>
  42c98b:	cmp    cx,0x5
  42c98f:	je     42c9b8 <fb_name_table_visit@@Base+0x218>
  42c991:	cmp    cx,0x6
  42c995:	jne    42c960 <fb_name_table_visit@@Base+0x1c0>
  42c997:	movzx  edi,BYTE PTR [rdx]
  42c99a:	xor    ecx,ecx
  42c99c:	cmp    BYTE PTR [rsi],dil
  42c99f:	sete   cl
  42c9a2:	test   ecx,ecx
  42c9a4:	je     42c966 <fb_name_table_visit@@Base+0x1c6>
  42c9a6:	mov    QWORD PTR [r8],0x2
  42c9ad:	dec    QWORD PTR [r11+0x10]
  42c9b1:	mov    rax,rdx
  42c9b4:	ret    
  42c9b5:	nop    DWORD PTR [rax]
  42c9b8:	mov    rdi,QWORD PTR [rdx]
  42c9bb:	xor    ecx,ecx
  42c9bd:	cmp    QWORD PTR [rsi],rdi
  42c9c0:	sete   cl
  42c9c3:	jmp    42c9a2 <fb_name_table_visit@@Base+0x202>
  42c9c5:	xor    edx,edx
  42c9c7:	jmp    42c9b1 <fb_name_table_visit@@Base+0x211>
  42c9c9:	nop    DWORD PTR [rax+0x0]
  42c9d0:	push   r13
  42c9d2:	push   r12
  42c9d4:	push   rbp
  42c9d5:	push   rbx
  42c9d6:	sub    rsp,0x8
  42c9da:	test   rdx,rdx
  42c9dd:	je     42cb8d <fb_name_table_visit@@Base+0x3ed>
  42c9e3:	mov    r13,rdx
  42c9e6:	cmp    rdx,0x2
  42c9ea:	je     42cb6e <fb_name_table_visit@@Base+0x3ce>
  42c9f0:	cmp    rdx,0x1
  42c9f4:	je     42cbac <fb_name_table_visit@@Base+0x40c>
  42c9fa:	mov    ebx,ecx
  42c9fc:	mov    rcx,QWORD PTR [rdi+0x18]
  42ca00:	mov    rbp,rsi
  42ca03:	imul   rax,rcx,0xb3
  42ca0a:	mov    rsi,QWORD PTR [rdi+0x10]
  42ca0e:	mov    r12,rdi
  42ca11:	shr    rax,0x8
  42ca15:	cmp    rsi,rax
  42ca18:	jae    42cb00 <fb_name_table_visit@@Base+0x360>
  42ca1e:	mov    rdi,rbp
  42ca21:	mov    r9,QWORD PTR [r12]
  42ca25:	dec    rcx
  42ca28:	call   42c810 <fb_name_table_visit@@Base+0x70>
  42ca2d:	mov    rdx,rcx
  42ca30:	and    rdx,rax
  42ca33:	lea    rdi,[r9+rdx*8]
  42ca37:	lea    edx,[rbx-0x2]
  42ca3a:	mov    rsi,QWORD PTR [rdi]
  42ca3d:	cmp    edx,0x1
  42ca40:	jbe    42cb20 <fb_name_table_visit@@Base+0x380>
  42ca46:	inc    rax
  42ca49:	xor    edx,edx
  42ca4b:	test   rsi,rsi
  42ca4e:	jne    42ca8e <fb_name_table_visit@@Base+0x2ee>
  42ca50:	jmp    42cb66 <fb_name_table_visit@@Base+0x3c6>
  42ca55:	nop    DWORD PTR [rax]
  42ca58:	movzx  r8d,WORD PTR [rbp+0x10]
  42ca5d:	cmp    r8w,WORD PTR [rsi+0x10]
  42ca62:	jne    42ca79 <fb_name_table_visit@@Base+0x2d9>
  42ca64:	cmp    r8w,0x5
  42ca69:	je     42cac0 <fb_name_table_visit@@Base+0x320>
  42ca6b:	cmp    r8w,0x6
  42ca70:	je     42caa0 <fb_name_table_visit@@Base+0x300>
  42ca72:	cmp    r8w,0x4
  42ca77:	je     42cad0 <fb_name_table_visit@@Base+0x330>
  42ca79:	mov    rsi,rcx
  42ca7c:	and    rsi,rax
  42ca7f:	lea    rdi,[r9+rsi*8]
  42ca83:	mov    rsi,QWORD PTR [rdi]
  42ca86:	inc    rax
  42ca89:	test   rsi,rsi
  42ca8c:	je     42cae0 <fb_name_table_visit@@Base+0x340>
  42ca8e:	cmp    rsi,0x2
  42ca92:	jne    42ca58 <fb_name_table_visit@@Base+0x2b8>
  42ca94:	test   rdx,rdx
  42ca97:	cmove  rdx,rdi
  42ca9b:	jmp    42ca79 <fb_name_table_visit@@Base+0x2d9>
  42ca9d:	nop    DWORD PTR [rax]
  42caa0:	movzx  r10d,BYTE PTR [rsi]
  42caa4:	xor    r8d,r8d
  42caa7:	cmp    BYTE PTR [rbp+0x0],r10b
  42caab:	sete   r8b
  42caaf:	test   r8d,r8d
  42cab2:	je     42ca79 <fb_name_table_visit@@Base+0x2d9>
  42cab4:	test   ebx,ebx
  42cab6:	jne    42caf1 <fb_name_table_visit@@Base+0x351>
  42cab8:	mov    QWORD PTR [rdi],r13
  42cabb:	jmp    42caf1 <fb_name_table_visit@@Base+0x351>
  42cabd:	nop    DWORD PTR [rax]
  42cac0:	mov    r11,QWORD PTR [rsi]
  42cac3:	xor    r8d,r8d
  42cac6:	cmp    QWORD PTR [rbp+0x0],r11
  42caca:	sete   r8b
  42cace:	jmp    42caaf <fb_name_table_visit@@Base+0x30f>
  42cad0:	mov    r10,QWORD PTR [rsi]
  42cad3:	xor    r8d,r8d
  42cad6:	cmp    QWORD PTR [rbp+0x0],r10
  42cada:	sete   r8b
  42cade:	jmp    42caaf <fb_name_table_visit@@Base+0x30f>
  42cae0:	test   rdx,rdx
  42cae3:	cmove  rdx,rdi
  42cae7:	inc    QWORD PTR [r12+0x10]
  42caec:	mov    QWORD PTR [rdx],r13
  42caef:	xor    esi,esi
  42caf1:	add    rsp,0x8
  42caf5:	pop    rbx
  42caf6:	pop    rbp
  42caf7:	pop    r12
  42caf9:	mov    rax,rsi
  42cafc:	pop    r13
  42cafe:	ret    
  42caff:	nop
  42cb00:	add    rsi,rsi
  42cb03:	call   42cc00 <fb_name_table_visit@@Base+0x460>
  42cb08:	test   eax,eax
  42cb0a:	jne    42cbcb <fb_name_table_visit@@Base+0x42b>
  42cb10:	mov    rcx,QWORD PTR [r12+0x18]
  42cb15:	jmp    42ca1e <fb_name_table_visit@@Base+0x27e>
  42cb1a:	nop    WORD PTR [rax+rax*1+0x0]
  42cb20:	inc    QWORD PTR [r12+0x10]
  42cb25:	test   rsi,rsi
  42cb28:	je     42cb53 <fb_name_table_visit@@Base+0x3b3>
  42cb2a:	cmp    rsi,0x2
  42cb2e:	je     42cb53 <fb_name_table_visit@@Base+0x3b3>
  42cb30:	inc    rax
  42cb33:	jmp    42cb3e <fb_name_table_visit@@Base+0x39e>
  42cb35:	nop    DWORD PTR [rax]
  42cb38:	cmp    rdx,0x2
  42cb3c:	je     42cb53 <fb_name_table_visit@@Base+0x3b3>
  42cb3e:	mov    rdx,rcx
  42cb41:	and    rdx,rax
  42cb44:	lea    rdi,[r9+rdx*8]
  42cb48:	mov    rdx,QWORD PTR [rdi]
  42cb4b:	inc    rax
  42cb4e:	test   rdx,rdx
  42cb51:	jne    42cb38 <fb_name_table_visit@@Base+0x398>
  42cb53:	mov    QWORD PTR [rdi],r13
  42cb56:	add    rsp,0x8
  42cb5a:	xor    esi,esi
  42cb5c:	pop    rbx
  42cb5d:	pop    rbp
  42cb5e:	pop    r12
  42cb60:	mov    rax,rsi
  42cb63:	pop    r13
  42cb65:	ret    
  42cb66:	mov    rdx,rdi
  42cb69:	jmp    42cae7 <fb_name_table_visit@@Base+0x347>
  42cb6e:	lea    rcx,[rip+0x1cc33]        # 4497a8 <fb_name_table_missing@@Base+0x8>
  42cb75:	mov    edx,0x73
  42cb7a:	lea    rsi,[rip+0x18f3f]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  42cb81:	lea    rdi,[rip+0x18ff2]        # 445b7a <_IO_stdin_used@@Base+0x18b7a>
  42cb88:	call   4052e0 <__assert_fail@plt>
  42cb8d:	lea    rcx,[rip+0x1cc14]        # 4497a8 <fb_name_table_missing@@Base+0x8>
  42cb94:	mov    edx,0x72
  42cb99:	lea    rsi,[rip+0x18f20]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  42cba0:	lea    rdi,[rip+0x18fbc]        # 445b63 <_IO_stdin_used@@Base+0x18b63>
  42cba7:	call   4052e0 <__assert_fail@plt>
  42cbac:	lea    rcx,[rip+0x1cbf5]        # 4497a8 <fb_name_table_missing@@Base+0x8>
  42cbb3:	mov    edx,0x74
  42cbb8:	lea    rsi,[rip+0x18f01]        # 445ac0 <_IO_stdin_used@@Base+0x18ac0>
  42cbbf:	lea    rdi,[rip+0x18fcb]        # 445b91 <_IO_stdin_used@@Base+0x18b91>
  42cbc6:	call   4052e0 <__assert_fail@plt>
  42cbcb:	mov    rax,QWORD PTR [rip+0x24416]        # 450fe8 <stderr@GLIBC_2.2.5>
  42cbd2:	lea    rcx,[rip+0x18f57]        # 445b30 <_IO_stdin_used@@Base+0x18b30>
  42cbd9:	mov    rdi,QWORD PTR [rax]
  42cbdc:	lea    rdx,[rip+0x18fc3]        # 445ba6 <_IO_stdin_used@@Base+0x18ba6>
  42cbe3:	mov    esi,0x1
  42cbe8:	xor    eax,eax
  42cbea:	call   4053e0 <__fprintf_chk@plt>
  42cbef:	mov    edi,0x1
  42cbf4:	call   4053c0 <exit@plt>
  42cbf9:	nop    DWORD PTR [rax+0x0]
  42cc00:	push   r13
  42cc02:	push   r12
  42cc04:	push   rbp
  42cc05:	mov    rbp,rdi
  42cc08:	push   rbx
  42cc09:	sub    rsp,0x38
  42cc0d:	mov    rax,QWORD PTR fs:0x28
  42cc16:	mov    QWORD PTR [rsp+0x28],rax
  42cc1b:	xor    eax,eax
  42cc1d:	cmp    QWORD PTR [rdi+0x10],rsi
  42cc21:	cmovae rsi,QWORD PTR [rdi+0x10]
  42cc26:	mov    r12,QWORD PTR [rdi]
  42cc29:	cmp    rsi,0x2
  42cc2d:	jbe    42cd08 <fb_name_table_visit@@Base+0x568>
  42cc33:	mov    eax,0x4
  42cc38:	nop    DWORD PTR [rax+rax*1+0x0]
  42cc40:	lea    rbx,[rax+rax*1]
  42cc44:	imul   rax,rax,0x166
  42cc4b:	shr    rax,0x8
  42cc4f:	mov    rdx,rax
  42cc52:	mov    rax,rbx
  42cc55:	cmp    rsi,rdx
  42cc58:	ja     42cc40 <fb_name_table_visit@@Base+0x4a0>
  42cc5a:	mov    esi,0x8
  42cc5f:	mov    rdi,rbx
  42cc62:	call   405320 <calloc@plt>
  42cc67:	mov    QWORD PTR [rsp],rax
  42cc6b:	test   rax,rax
  42cc6e:	je     42cd12 <fb_name_table_visit@@Base+0x572>
  42cc74:	cmp    QWORD PTR [rbp+0x18],0x0
  42cc79:	mov    QWORD PTR [rsp+0x8],0x0
  42cc82:	mov    QWORD PTR [rsp+0x18],rbx
  42cc87:	mov    QWORD PTR [rsp+0x10],0x0
  42cc90:	je     42ccc8 <fb_name_table_visit@@Base+0x528>
  42cc92:	xor    ebx,ebx
  42cc94:	mov    r13,rsp
  42cc97:	nop    WORD PTR [rax+rax*1+0x0]
  42cca0:	mov    rsi,QWORD PTR [r12+rbx*8]
  42cca4:	test   rsi,rsi
  42cca7:	je     42ccbf <fb_name_table_visit@@Base+0x51f>
  42cca9:	cmp    rsi,0x2
  42ccad:	je     42ccbf <fb_name_table_visit@@Base+0x51f>
  42ccaf:	mov    ecx,0x3
  42ccb4:	mov    rdx,rsi
  42ccb7:	mov    rdi,r13
  42ccba:	call   42c9d0 <fb_name_table_visit@@Base+0x230>
  42ccbf:	inc    rbx
  42ccc2:	cmp    QWORD PTR [rbp+0x18],rbx
  42ccc6:	ja     42cca0 <fb_name_table_visit@@Base+0x500>
  42ccc8:	mov    rdi,rbp
  42cccb:	call   42c7f0 <fb_name_table_visit@@Base+0x50>
  42ccd0:	vmovdqa xmm0,XMMWORD PTR [rsp]
  42ccd5:	vmovdqa xmm1,XMMWORD PTR [rsp+0x10]
  42ccdb:	vmovups XMMWORD PTR [rbp+0x0],xmm0
  42cce0:	vmovups XMMWORD PTR [rbp+0x10],xmm1
  42cce5:	xor    eax,eax
  42cce7:	mov    rcx,QWORD PTR [rsp+0x28]
  42ccec:	xor    rcx,QWORD PTR fs:0x28
  42ccf5:	jne    42cd19 <fb_name_table_visit@@Base+0x579>
  42ccf7:	add    rsp,0x38
  42ccfb:	pop    rbx
  42ccfc:	pop    rbp
  42ccfd:	pop    r12
  42ccff:	pop    r13
  42cd01:	ret    
  42cd02:	nop    WORD PTR [rax+rax*1+0x0]
  42cd08:	mov    ebx,0x4
  42cd0d:	jmp    42cc5a <fb_name_table_visit@@Base+0x4ba>
  42cd12:	mov    eax,0xffffffff
  42cd17:	jmp    42cce7 <fb_name_table_visit@@Base+0x547>
  42cd19:	call   4052c0 <__stack_chk_fail@plt>
  42cd1e:	xchg   ax,ax

000000000042cd20 <fb_value_set_clear@@Base>:
  42cd20:	endbr64 
  42cd24:	jmp    42c7f0 <fb_name_table_visit@@Base+0x50>
  42cd29:	nop    DWORD PTR [rax+0x0]

000000000042cd30 <fb_value_set_destroy@@Base>:
  42cd30:	endbr64 
  42cd34:	push   r14
  42cd36:	push   r13
  42cd38:	push   r12
  42cd3a:	push   rbp
  42cd3b:	mov    rbp,rdi
  42cd3e:	push   rbx
  42cd3f:	test   rsi,rsi
  42cd42:	je     42cd7e <fb_value_set_destroy@@Base+0x4e>
  42cd44:	cmp    QWORD PTR [rdi+0x18],0x0
  42cd49:	mov    r12,QWORD PTR [rdi]
  42cd4c:	je     42cd7e <fb_value_set_destroy@@Base+0x4e>
  42cd4e:	mov    r13,rsi
  42cd51:	mov    r14,rdx
  42cd54:	xor    ebx,ebx
  42cd56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cd60:	mov    rsi,QWORD PTR [r12+rbx*8]
  42cd64:	test   rsi,rsi
  42cd67:	je     42cd75 <fb_value_set_destroy@@Base+0x45>
  42cd69:	cmp    rsi,0x2
  42cd6d:	je     42cd75 <fb_value_set_destroy@@Base+0x45>
  42cd6f:	mov    rdi,r14
  42cd72:	call   r13
  42cd75:	inc    rbx
  42cd78:	cmp    rbx,QWORD PTR [rbp+0x18]
  42cd7c:	jb     42cd60 <fb_value_set_destroy@@Base+0x30>
  42cd7e:	pop    rbx
  42cd7f:	mov    rdi,rbp
  42cd82:	pop    rbp
  42cd83:	pop    r12
  42cd85:	pop    r13
  42cd87:	pop    r14
  42cd89:	jmp    42c7f0 <fb_name_table_visit@@Base+0x50>
  42cd8e:	xchg   ax,ax

000000000042cd90 <fb_value_set_init@@Base>:
  42cd90:	endbr64 
  42cd94:	push   rbp
  42cd95:	push   rbx
  42cd96:	mov    rbx,rdi
  42cd99:	sub    rsp,0x8
  42cd9d:	cmp    rsi,0x2
  42cda1:	jbe    42ce00 <fb_value_set_init@@Base+0x70>
  42cda3:	mov    eax,0x4
  42cda8:	nop    DWORD PTR [rax+rax*1+0x0]
  42cdb0:	lea    rbp,[rax+rax*1]
  42cdb4:	imul   rax,rax,0x166
  42cdbb:	shr    rax,0x8
  42cdbf:	mov    rdx,rax
  42cdc2:	mov    rax,rbp
  42cdc5:	cmp    rsi,rdx
  42cdc8:	ja     42cdb0 <fb_value_set_init@@Base+0x20>
  42cdca:	mov    esi,0x8
  42cdcf:	mov    rdi,rbp
  42cdd2:	call   405320 <calloc@plt>
  42cdd7:	mov    QWORD PTR [rbx],rax
  42cdda:	test   rax,rax
  42cddd:	je     42ce07 <fb_value_set_init@@Base+0x77>
  42cddf:	mov    QWORD PTR [rbx+0x8],0x0
  42cde7:	mov    QWORD PTR [rbx+0x18],rbp
  42cdeb:	mov    QWORD PTR [rbx+0x10],0x0
  42cdf3:	xor    eax,eax
  42cdf5:	add    rsp,0x8
  42cdf9:	pop    rbx
  42cdfa:	pop    rbp
  42cdfb:	ret    
  42cdfc:	nop    DWORD PTR [rax+0x0]
  42ce00:	mov    ebp,0x4
  42ce05:	jmp    42cdca <fb_value_set_init@@Base+0x3a>
  42ce07:	mov    eax,0xffffffff
  42ce0c:	jmp    42cdf5 <fb_value_set_init@@Base+0x65>
  42ce0e:	xchg   ax,ax

000000000042ce10 <fb_value_set_resize@@Base>:
  42ce10:	endbr64 
  42ce14:	jmp    42cc00 <fb_name_table_visit@@Base+0x460>
  42ce19:	nop    DWORD PTR [rax+0x0]

000000000042ce20 <fb_value_set_insert@@Base>:
  42ce20:	endbr64 
  42ce24:	mov    rdx,rcx
  42ce27:	mov    ecx,r8d
  42ce2a:	jmp    42c9d0 <fb_name_table_visit@@Base+0x230>
  42ce2f:	nop

000000000042ce30 <fb_value_set_insert_item@@Base>:
  42ce30:	endbr64 
  42ce34:	mov    ecx,edx
  42ce36:	mov    rdx,rsi
  42ce39:	jmp    42c9d0 <fb_name_table_visit@@Base+0x230>
  42ce3e:	xchg   ax,ax

000000000042ce40 <fb_value_set_find@@Base>:
  42ce40:	endbr64 
  42ce44:	mov    rdx,rsi
  42ce47:	lea    rsi,[rdi+0x18]
  42ce4b:	mov    rdi,QWORD PTR [rdi]
  42ce4e:	jmp    42c880 <fb_name_table_visit@@Base+0xe0>
  42ce53:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ce5e:	xchg   ax,ax

000000000042ce60 <fb_value_set_find_item@@Base>:
  42ce60:	endbr64 
  42ce64:	mov    rdx,rsi
  42ce67:	lea    rsi,[rdi+0x18]
  42ce6b:	mov    rdi,QWORD PTR [rdi]
  42ce6e:	jmp    42c880 <fb_name_table_visit@@Base+0xe0>
  42ce73:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42ce7e:	xchg   ax,ax

000000000042ce80 <fb_value_set_remove@@Base>:
  42ce80:	endbr64 
  42ce84:	jmp    42c920 <fb_name_table_visit@@Base+0x180>
  42ce89:	nop    DWORD PTR [rax+0x0]

000000000042ce90 <fb_value_set_remove_item@@Base>:
  42ce90:	endbr64 
  42ce94:	jmp    42c920 <fb_name_table_visit@@Base+0x180>
  42ce99:	nop    DWORD PTR [rax+0x0]

000000000042cea0 <fb_value_set_visit@@Base>:
  42cea0:	endbr64 
  42cea4:	push   r14
  42cea6:	push   r13
  42cea8:	push   r12
  42ceaa:	push   rbp
  42ceab:	push   rbx
  42ceac:	cmp    QWORD PTR [rdi+0x18],0x0
  42ceb1:	mov    r14,QWORD PTR [rdi]
  42ceb4:	je     42cee6 <fb_value_set_visit@@Base+0x46>
  42ceb6:	mov    r13,rdx
  42ceb9:	mov    r12,rsi
  42cebc:	mov    rbp,rdi
  42cebf:	xor    ebx,ebx
  42cec1:	nop    DWORD PTR [rax+0x0]
  42cec8:	mov    rsi,QWORD PTR [r14+rbx*8]
  42cecc:	test   rsi,rsi
  42cecf:	je     42cedd <fb_value_set_visit@@Base+0x3d>
  42ced1:	cmp    rsi,0x2
  42ced5:	je     42cedd <fb_value_set_visit@@Base+0x3d>
  42ced7:	mov    rdi,r13
  42ceda:	call   r12
  42cedd:	inc    rbx
  42cee0:	cmp    rbx,QWORD PTR [rbp+0x18]
  42cee4:	jb     42cec8 <fb_value_set_visit@@Base+0x28>
  42cee6:	pop    rbx
  42cee7:	pop    rbp
  42cee8:	pop    r12
  42ceea:	pop    r13
  42ceec:	pop    r14
  42ceee:	ret    
  42ceef:	nop

000000000042cef0 <__libc_csu_init@@Base>:
  42cef0:	endbr64 
  42cef4:	push   r15
  42cef6:	lea    r15,[rip+0x23e93]        # 450d90 <fb_value_set_missing@@Base+0x75c8>
  42cefd:	push   r14
  42ceff:	mov    r14,rdx
  42cf02:	push   r13
  42cf04:	mov    r13,rsi
  42cf07:	push   r12
  42cf09:	mov    r12d,edi
  42cf0c:	push   rbp
  42cf0d:	lea    rbp,[rip+0x23e84]        # 450d98 <fb_value_set_missing@@Base+0x75d0>
  42cf14:	push   rbx
  42cf15:	sub    rbp,r15
  42cf18:	sub    rsp,0x8
  42cf1c:	call   405000 <__ctype_toupper_loc@plt-0x220>
  42cf21:	sar    rbp,0x3
  42cf25:	je     42cf46 <__libc_csu_init@@Base+0x56>
  42cf27:	xor    ebx,ebx
  42cf29:	nop    DWORD PTR [rax+0x0]
  42cf30:	mov    rdx,r14
  42cf33:	mov    rsi,r13
  42cf36:	mov    edi,r12d
  42cf39:	call   QWORD PTR [r15+rbx*8]
  42cf3d:	add    rbx,0x1
  42cf41:	cmp    rbp,rbx
  42cf44:	jne    42cf30 <__libc_csu_init@@Base+0x40>
  42cf46:	add    rsp,0x8
  42cf4a:	pop    rbx
  42cf4b:	pop    rbp
  42cf4c:	pop    r12
  42cf4e:	pop    r13
  42cf50:	pop    r14
  42cf52:	pop    r15
  42cf54:	ret    
  42cf55:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042cf60 <__libc_csu_fini@@Base>:
  42cf60:	endbr64 
  42cf64:	ret    

Disassembly of section .fini:

000000000042cf68 <.fini>:
  42cf68:	endbr64 
  42cf6c:	sub    rsp,0x8
  42cf70:	add    rsp,0x8
  42cf74:	ret    
