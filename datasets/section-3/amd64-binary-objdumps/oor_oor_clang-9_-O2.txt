
../repos/oor/oor/oor:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x60fe1]        # 463ff0 <strcmp@plt+0x60858>
  40300f:	test   rax,rax
  403012:	je     403016 <xmlReadMemory@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <xmlReadMemory@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x60fe2]        # 464008 <strcmp@plt+0x60870>
  403026:	jmp    QWORD PTR [rip+0x60fe4]        # 464010 <strcmp@plt+0x60878>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <xmlReadMemory@plt>:
  403030:	jmp    QWORD PTR [rip+0x60fe2]        # 464018 <strcmp@plt+0x60880>
  403036:	push   0x0
  40303b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403040 <__errno_location@plt>:
  403040:	jmp    QWORD PTR [rip+0x60fda]        # 464020 <strcmp@plt+0x60888>
  403046:	push   0x1
  40304b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403050 <printf@plt>:
  403050:	jmp    QWORD PTR [rip+0x60fd2]        # 464028 <strcmp@plt+0x60890>
  403056:	push   0x2
  40305b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403060 <sendto@plt>:
  403060:	jmp    QWORD PTR [rip+0x60fca]        # 464030 <strcmp@plt+0x60898>
  403066:	push   0x3
  40306b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403070 <syslog@plt>:
  403070:	jmp    QWORD PTR [rip+0x60fc2]        # 464038 <strcmp@plt+0x608a0>
  403076:	push   0x4
  40307b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403080 <__ctype_toupper_loc@plt>:
  403080:	jmp    QWORD PTR [rip+0x60fba]        # 464040 <strcmp@plt+0x608a8>
  403086:	push   0x5
  40308b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403090 <bind@plt>:
  403090:	jmp    QWORD PTR [rip+0x60fb2]        # 464048 <strcmp@plt+0x608b0>
  403096:	push   0x6
  40309b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030a0 <__ctype_tolower_loc@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x60faa]        # 464050 <strcmp@plt+0x608b8>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030b0 <sprintf@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x60fa2]        # 464058 <strcmp@plt+0x608c0>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030c0 <if_nametoindex@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x60f9a]        # 464060 <strcmp@plt+0x608c8>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030d0 <strstr@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x60f92]        # 464068 <strcmp@plt+0x608d0>
  4030d6:	push   0xa
  4030db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030e0 <srandom@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x60f8a]        # 464070 <strcmp@plt+0x608d8>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004030f0 <socket@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x60f82]        # 464078 <strcmp@plt+0x608e0>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403100 <zmq_strerror@plt>:
  403100:	jmp    QWORD PTR [rip+0x60f7a]        # 464080 <strcmp@plt+0x608e8>
  403106:	push   0xd
  40310b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403110 <fork@plt>:
  403110:	jmp    QWORD PTR [rip+0x60f72]        # 464088 <strcmp@plt+0x608f0>
  403116:	push   0xe
  40311b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403120 <cfg_getnstr@plt>:
  403120:	jmp    QWORD PTR [rip+0x60f6a]        # 464090 <strcmp@plt+0x608f8>
  403126:	push   0xf
  40312b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403130 <recvmsg@plt>:
  403130:	jmp    QWORD PTR [rip+0x60f62]        # 464098 <strcmp@plt+0x60900>
  403136:	push   0x10
  40313b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403140 <nanosleep@plt>:
  403140:	jmp    QWORD PTR [rip+0x60f5a]        # 4640a0 <strcmp@plt+0x60908>
  403146:	push   0x11
  40314b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403150 <cfg_free@plt>:
  403150:	jmp    QWORD PTR [rip+0x60f52]        # 4640a8 <strcmp@plt+0x60910>
  403156:	push   0x12
  40315b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403160 <recv@plt>:
  403160:	jmp    QWORD PTR [rip+0x60f4a]        # 4640b0 <strcmp@plt+0x60918>
  403166:	push   0x13
  40316b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403170 <strerror@plt>:
  403170:	jmp    QWORD PTR [rip+0x60f42]        # 4640b8 <strcmp@plt+0x60920>
  403176:	push   0x14
  40317b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403180 <write@plt>:
  403180:	jmp    QWORD PTR [rip+0x60f3a]        # 4640c0 <strcmp@plt+0x60928>
  403186:	push   0x15
  40318b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403190 <strchr@plt>:
  403190:	jmp    QWORD PTR [rip+0x60f32]        # 4640c8 <strcmp@plt+0x60930>
  403196:	push   0x16
  40319b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031a0 <fgets_unlocked@plt>:
  4031a0:	jmp    QWORD PTR [rip+0x60f2a]        # 4640d0 <strcmp@plt+0x60938>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031b0 <cfg_getint@plt>:
  4031b0:	jmp    QWORD PTR [rip+0x60f22]        # 4640d8 <strcmp@plt+0x60940>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031c0 <getprotobyname@plt>:
  4031c0:	jmp    QWORD PTR [rip+0x60f1a]        # 4640e0 <strcmp@plt+0x60948>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031d0 <dirname@plt>:
  4031d0:	jmp    QWORD PTR [rip+0x60f12]        # 4640e8 <strcmp@plt+0x60950>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031e0 <strlen@plt>:
  4031e0:	jmp    QWORD PTR [rip+0x60f0a]        # 4640f0 <strcmp@plt+0x60958>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004031f0 <cfg_getnsec@plt>:
  4031f0:	jmp    QWORD PTR [rip+0x60f02]        # 4640f8 <strcmp@plt+0x60960>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403200 <memcmp@plt>:
  403200:	jmp    QWORD PTR [rip+0x60efa]        # 464100 <strcmp@plt+0x60968>
  403206:	push   0x1d
  40320b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403210 <xmlNextElementSibling@plt>:
  403210:	jmp    QWORD PTR [rip+0x60ef2]        # 464108 <strcmp@plt+0x60970>
  403216:	push   0x1e
  40321b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403220 <strncmp@plt>:
  403220:	jmp    QWORD PTR [rip+0x60eea]        # 464110 <strcmp@plt+0x60978>
  403226:	push   0x1f
  40322b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403230 <send@plt>:
  403230:	jmp    QWORD PTR [rip+0x60ee2]        # 464118 <strcmp@plt+0x60980>
  403236:	push   0x20
  40323b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403240 <random@plt>:
  403240:	jmp    QWORD PTR [rip+0x60eda]        # 464120 <strcmp@plt+0x60988>
  403246:	push   0x21
  40324b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403250 <strncpy@plt>:
  403250:	jmp    QWORD PTR [rip+0x60ed2]        # 464128 <strcmp@plt+0x60990>
  403256:	push   0x22
  40325b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403260 <memset@plt>:
  403260:	jmp    QWORD PTR [rip+0x60eca]        # 464130 <strcmp@plt+0x60998>
  403266:	push   0x23
  40326b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403270 <abort@plt>:
  403270:	jmp    QWORD PTR [rip+0x60ec2]        # 464138 <strcmp@plt+0x609a0>
  403276:	push   0x24
  40327b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403280 <cfg_getsec@plt>:
  403280:	jmp    QWORD PTR [rip+0x60eba]        # 464140 <strcmp@plt+0x609a8>
  403286:	push   0x25
  40328b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403290 <fcntl@plt>:
  403290:	jmp    QWORD PTR [rip+0x60eb2]        # 464148 <strcmp@plt+0x609b0>
  403296:	push   0x26
  40329b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032a0 <getnameinfo@plt>:
  4032a0:	jmp    QWORD PTR [rip+0x60eaa]        # 464150 <strcmp@plt+0x609b8>
  4032a6:	push   0x27
  4032ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032b0 <__assert_fail@plt>:
  4032b0:	jmp    QWORD PTR [rip+0x60ea2]        # 464158 <strcmp@plt+0x609c0>
  4032b6:	push   0x28
  4032bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032c0 <cfg_getstr@plt>:
  4032c0:	jmp    QWORD PTR [rip+0x60e9a]        # 464160 <strcmp@plt+0x609c8>
  4032c6:	push   0x29
  4032cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032d0 <calloc@plt>:
  4032d0:	jmp    QWORD PTR [rip+0x60e92]        # 464168 <strcmp@plt+0x609d0>
  4032d6:	push   0x2a
  4032db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032e0 <zmq_bind@plt>:
  4032e0:	jmp    QWORD PTR [rip+0x60e8a]        # 464170 <strcmp@plt+0x609d8>
  4032e6:	push   0x2b
  4032eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004032f0 <open@plt>:
  4032f0:	jmp    QWORD PTR [rip+0x60e82]        # 464178 <strcmp@plt+0x609e0>
  4032f6:	push   0x2c
  4032fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403300 <localtime@plt>:
  403300:	jmp    QWORD PTR [rip+0x60e7a]        # 464180 <strcmp@plt+0x609e8>
  403306:	push   0x2d
  40330b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403310 <xmlFirstElementChild@plt>:
  403310:	jmp    QWORD PTR [rip+0x60e72]        # 464188 <strcmp@plt+0x609f0>
  403316:	push   0x2e
  40331b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403320 <strftime@plt>:
  403320:	jmp    QWORD PTR [rip+0x60e6a]        # 464190 <strcmp@plt+0x609f8>
  403326:	push   0x2f
  40332b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403330 <memcpy@plt>:
  403330:	jmp    QWORD PTR [rip+0x60e62]        # 464198 <strcmp@plt+0x60a00>
  403336:	push   0x30
  40333b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403340 <timer_settime@plt>:
  403340:	jmp    QWORD PTR [rip+0x60e5a]        # 4641a0 <strcmp@plt+0x60a08>
  403346:	push   0x31
  40334b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403350 <cfg_getbool@plt>:
  403350:	jmp    QWORD PTR [rip+0x60e52]        # 4641a8 <strcmp@plt+0x60a10>
  403356:	push   0x32
  40335b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403360 <clock_gettime@plt>:
  403360:	jmp    QWORD PTR [rip+0x60e4a]        # 4641b0 <strcmp@plt+0x60a18>
  403366:	push   0x33
  40336b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403370 <time@plt>:
  403370:	jmp    QWORD PTR [rip+0x60e42]        # 4641b8 <strcmp@plt+0x60a20>
  403376:	push   0x34
  40337b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403380 <getsockname@plt>:
  403380:	jmp    QWORD PTR [rip+0x60e3a]        # 4641c0 <strcmp@plt+0x60a28>
  403386:	push   0x35
  40338b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403390 <strcpy@plt>:
  403390:	jmp    QWORD PTR [rip+0x60e32]        # 4641c8 <strcmp@plt+0x60a30>
  403396:	push   0x36
  40339b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033a0 <cfg_init@plt>:
  4033a0:	jmp    QWORD PTR [rip+0x60e2a]        # 4641d0 <strcmp@plt+0x60a38>
  4033a6:	push   0x37
  4033ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033b0 <select@plt>:
  4033b0:	jmp    QWORD PTR [rip+0x60e22]        # 4641d8 <strcmp@plt+0x60a40>
  4033b6:	push   0x38
  4033bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033c0 <zmq_connect@plt>:
  4033c0:	jmp    QWORD PTR [rip+0x60e1a]        # 4641e0 <strcmp@plt+0x60a48>
  4033c6:	push   0x39
  4033cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033d0 <zmq_send@plt>:
  4033d0:	jmp    QWORD PTR [rip+0x60e12]        # 4641e8 <strcmp@plt+0x60a50>
  4033d6:	push   0x3a
  4033db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033e0 <fclose@plt>:
  4033e0:	jmp    QWORD PTR [rip+0x60e0a]        # 4641f0 <strcmp@plt+0x60a58>
  4033e6:	push   0x3b
  4033eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004033f0 <bcmp@plt>:
  4033f0:	jmp    QWORD PTR [rip+0x60e02]        # 4641f8 <strcmp@plt+0x60a60>
  4033f6:	push   0x3c
  4033fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403400 <inet_ntop@plt>:
  403400:	jmp    QWORD PTR [rip+0x60dfa]        # 464200 <strcmp@plt+0x60a68>
  403406:	push   0x3d
  40340b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403410 <zmq_poll@plt>:
  403410:	jmp    QWORD PTR [rip+0x60df2]        # 464208 <strcmp@plt+0x60a70>
  403416:	push   0x3e
  40341b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403420 <freopen@plt>:
  403420:	jmp    QWORD PTR [rip+0x60dea]        # 464210 <strcmp@plt+0x60a78>
  403426:	push   0x3f
  40342b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403430 <__ctype_b_loc@plt>:
  403430:	jmp    QWORD PTR [rip+0x60de2]        # 464218 <strcmp@plt+0x60a80>
  403436:	push   0x40
  40343b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403440 <xmlNodeGetContent@plt>:
  403440:	jmp    QWORD PTR [rip+0x60dda]        # 464220 <strcmp@plt+0x60a88>
  403446:	push   0x41
  40344b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403450 <setsid@plt>:
  403450:	jmp    QWORD PTR [rip+0x60dd2]        # 464228 <strcmp@plt+0x60a90>
  403456:	push   0x42
  40345b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403460 <fputs@plt>:
  403460:	jmp    QWORD PTR [rip+0x60dca]        # 464230 <strcmp@plt+0x60a98>
  403466:	push   0x43
  40346b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403470 <fflush@plt>:
  403470:	jmp    QWORD PTR [rip+0x60dc2]        # 464238 <strcmp@plt+0x60aa0>
  403476:	push   0x44
  40347b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403480 <capget@plt>:
  403480:	jmp    QWORD PTR [rip+0x60dba]        # 464240 <strcmp@plt+0x60aa8>
  403486:	push   0x45
  40348b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403490 <fopen@plt>:
  403490:	jmp    QWORD PTR [rip+0x60db2]        # 464248 <strcmp@plt+0x60ab0>
  403496:	push   0x46
  40349b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034a0 <signal@plt>:
  4034a0:	jmp    QWORD PTR [rip+0x60daa]        # 464250 <strcmp@plt+0x60ab8>
  4034a6:	push   0x47
  4034ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034b0 <exit@plt>:
  4034b0:	jmp    QWORD PTR [rip+0x60da2]        # 464258 <strcmp@plt+0x60ac0>
  4034b6:	push   0x48
  4034bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034c0 <timer_delete@plt>:
  4034c0:	jmp    QWORD PTR [rip+0x60d9a]        # 464260 <strcmp@plt+0x60ac8>
  4034c6:	push   0x49
  4034cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034d0 <fputc@plt>:
  4034d0:	jmp    QWORD PTR [rip+0x60d92]        # 464268 <strcmp@plt+0x60ad0>
  4034d6:	push   0x4a
  4034db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034e0 <sigemptyset@plt>:
  4034e0:	jmp    QWORD PTR [rip+0x60d8a]        # 464270 <strcmp@plt+0x60ad8>
  4034e6:	push   0x4b
  4034eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004034f0 <sigaction@plt>:
  4034f0:	jmp    QWORD PTR [rip+0x60d82]        # 464278 <strcmp@plt+0x60ae0>
  4034f6:	push   0x4c
  4034fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403500 <getaddrinfo@plt>:
  403500:	jmp    QWORD PTR [rip+0x60d7a]        # 464280 <strcmp@plt+0x60ae8>
  403506:	push   0x4d
  40350b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403510 <freeaddrinfo@plt>:
  403510:	jmp    QWORD PTR [rip+0x60d72]        # 464288 <strcmp@plt+0x60af0>
  403516:	push   0x4e
  40351b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403520 <malloc@plt>:
  403520:	jmp    QWORD PTR [rip+0x60d6a]        # 464290 <strcmp@plt+0x60af8>
  403526:	push   0x4f
  40352b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403530 <vfprintf@plt>:
  403530:	jmp    QWORD PTR [rip+0x60d62]        # 464298 <strcmp@plt+0x60b00>
  403536:	push   0x50
  40353b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403540 <pipe@plt>:
  403540:	jmp    QWORD PTR [rip+0x60d5a]        # 4642a0 <strcmp@plt+0x60b08>
  403546:	push   0x51
  40354b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403550 <zmq_recv@plt>:
  403550:	jmp    QWORD PTR [rip+0x60d52]        # 4642a8 <strcmp@plt+0x60b10>
  403556:	push   0x52
  40355b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403560 <gai_strerror@plt>:
  403560:	jmp    QWORD PTR [rip+0x60d4a]        # 4642b0 <strcmp@plt+0x60b18>
  403566:	push   0x53
  40356b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403570 <putchar@plt>:
  403570:	jmp    QWORD PTR [rip+0x60d42]        # 4642b8 <strcmp@plt+0x60b20>
  403576:	push   0x54
  40357b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403580 <strtol@plt>:
  403580:	jmp    QWORD PTR [rip+0x60d3a]        # 4642c0 <strcmp@plt+0x60b28>
  403586:	push   0x55
  40358b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403590 <ioctl@plt>:
  403590:	jmp    QWORD PTR [rip+0x60d32]        # 4642c8 <strcmp@plt+0x60b30>
  403596:	push   0x56
  40359b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035a0 <fprintf@plt>:
  4035a0:	jmp    QWORD PTR [rip+0x60d2a]        # 4642d0 <strcmp@plt+0x60b38>
  4035a6:	push   0x57
  4035ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035b0 <read@plt>:
  4035b0:	jmp    QWORD PTR [rip+0x60d22]        # 4642d8 <strcmp@plt+0x60b40>
  4035b6:	push   0x58
  4035bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035c0 <xmlCharStrdup@plt>:
  4035c0:	jmp    QWORD PTR [rip+0x60d1a]        # 4642e0 <strcmp@plt+0x60b48>
  4035c6:	push   0x59
  4035cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035d0 <getpid@plt>:
  4035d0:	jmp    QWORD PTR [rip+0x60d12]        # 4642e8 <strcmp@plt+0x60b50>
  4035d6:	push   0x5a
  4035db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035e0 <zmq_close@plt>:
  4035e0:	jmp    QWORD PTR [rip+0x60d0a]        # 4642f0 <strcmp@plt+0x60b58>
  4035e6:	push   0x5b
  4035eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004035f0 <chdir@plt>:
  4035f0:	jmp    QWORD PTR [rip+0x60d02]        # 4642f8 <strcmp@plt+0x60b60>
  4035f6:	push   0x5c
  4035fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403600 <xmlDocGetRootElement@plt>:
  403600:	jmp    QWORD PTR [rip+0x60cfa]        # 464300 <strcmp@plt+0x60b68>
  403606:	push   0x5d
  40360b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403610 <puts@plt>:
  403610:	jmp    QWORD PTR [rip+0x60cf2]        # 464308 <strcmp@plt+0x60b70>
  403616:	push   0x5e
  40361b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403620 <strtok@plt>:
  403620:	jmp    QWORD PTR [rip+0x60cea]        # 464310 <strcmp@plt+0x60b78>
  403626:	push   0x5f
  40362b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403630 <snprintf@plt>:
  403630:	jmp    QWORD PTR [rip+0x60ce2]        # 464318 <strcmp@plt+0x60b80>
  403636:	push   0x60
  40363b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403640 <zmq_ctx_destroy@plt>:
  403640:	jmp    QWORD PTR [rip+0x60cda]        # 464320 <strcmp@plt+0x60b88>
  403646:	push   0x61
  40364b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403650 <gettimeofday@plt>:
  403650:	jmp    QWORD PTR [rip+0x60cd2]        # 464328 <strcmp@plt+0x60b90>
  403656:	push   0x62
  40365b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403660 <realloc@plt>:
  403660:	jmp    QWORD PTR [rip+0x60cca]        # 464330 <strcmp@plt+0x60b98>
  403666:	push   0x63
  40366b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403670 <getopt_long@plt>:
  403670:	jmp    QWORD PTR [rip+0x60cc2]        # 464338 <strcmp@plt+0x60ba0>
  403676:	push   0x64
  40367b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403680 <access@plt>:
  403680:	jmp    QWORD PTR [rip+0x60cba]        # 464340 <strcmp@plt+0x60ba8>
  403686:	push   0x65
  40368b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403690 <timer_create@plt>:
  403690:	jmp    QWORD PTR [rip+0x60cb2]        # 464348 <strcmp@plt+0x60bb0>
  403696:	push   0x66
  40369b:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036a0 <zmq_ctx_new@plt>:
  4036a0:	jmp    QWORD PTR [rip+0x60caa]        # 464350 <strcmp@plt+0x60bb8>
  4036a6:	push   0x67
  4036ab:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036b0 <freeifaddrs@plt>:
  4036b0:	jmp    QWORD PTR [rip+0x60ca2]        # 464358 <strcmp@plt+0x60bc0>
  4036b6:	push   0x68
  4036bb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036c0 <cfg_parse@plt>:
  4036c0:	jmp    QWORD PTR [rip+0x60c9a]        # 464360 <strcmp@plt+0x60bc8>
  4036c6:	push   0x69
  4036cb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036d0 <vsyslog@plt>:
  4036d0:	jmp    QWORD PTR [rip+0x60c92]        # 464368 <strcmp@plt+0x60bd0>
  4036d6:	push   0x6a
  4036db:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036e0 <umask@plt>:
  4036e0:	jmp    QWORD PTR [rip+0x60c8a]        # 464370 <strcmp@plt+0x60bd8>
  4036e6:	push   0x6b
  4036eb:	jmp    403020 <xmlReadMemory@plt-0x10>

00000000004036f0 <zmq_socket@plt>:
  4036f0:	jmp    QWORD PTR [rip+0x60c82]        # 464378 <strcmp@plt+0x60be0>
  4036f6:	push   0x6c
  4036fb:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403700 <setsockopt@plt>:
  403700:	jmp    QWORD PTR [rip+0x60c7a]        # 464380 <strcmp@plt+0x60be8>
  403706:	push   0x6d
  40370b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403710 <strdup@plt>:
  403710:	jmp    QWORD PTR [rip+0x60c72]        # 464388 <strcmp@plt+0x60bf0>
  403716:	push   0x6e
  40371b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403720 <xmlFreeDoc@plt>:
  403720:	jmp    QWORD PTR [rip+0x60c6a]        # 464390 <strcmp@plt+0x60bf8>
  403726:	push   0x6f
  40372b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403730 <cfg_size@plt>:
  403730:	jmp    QWORD PTR [rip+0x60c62]        # 464398 <strcmp@plt+0x60c00>
  403736:	push   0x70
  40373b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403740 <if_indextoname@plt>:
  403740:	jmp    QWORD PTR [rip+0x60c5a]        # 4643a0 <strcmp@plt+0x60c08>
  403746:	push   0x71
  40374b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403750 <getifaddrs@plt>:
  403750:	jmp    QWORD PTR [rip+0x60c52]        # 4643a8 <strcmp@plt+0x60c10>
  403756:	push   0x72
  40375b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403760 <inet_pton@plt>:
  403760:	jmp    QWORD PTR [rip+0x60c4a]        # 4643b0 <strcmp@plt+0x60c18>
  403766:	push   0x73
  40376b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403770 <close@plt>:
  403770:	jmp    QWORD PTR [rip+0x60c42]        # 4643b8 <strcmp@plt+0x60c20>
  403776:	push   0x74
  40377b:	jmp    403020 <xmlReadMemory@plt-0x10>

0000000000403780 <xmlStrEqual@plt>:
  403780:	jmp    QWORD PTR [rip+0x60c3a]        # 4643c0 <strcmp@plt+0x60c28>
  403786:	push   0x75
  40378b:	jmp    403020 <xmlReadMemory@plt-0x10>

Disassembly of section .plt.got:

0000000000403790 <free@plt>:
  403790:	jmp    QWORD PTR [rip+0x6080a]        # 463fa0 <strcmp@plt+0x60808>
  403796:	xchg   ax,ax

0000000000403798 <strcmp@plt>:
  403798:	jmp    QWORD PTR [rip+0x6081a]        # 463fb8 <strcmp@plt+0x60820>
  40379e:	xchg   ax,ax

Disassembly of section .text:

00000000004037a0 <.text>:
  4037a0:	endbr64 
  4037a4:	xor    ebp,ebp
  4037a6:	mov    r9,rdx
  4037a9:	pop    rsi
  4037aa:	mov    rdx,rsp
  4037ad:	and    rsp,0xfffffffffffffff0
  4037b1:	push   rax
  4037b2:	push   rsp
  4037b3:	mov    r8,0x441870
  4037ba:	mov    rcx,0x441800
  4037c1:	mov    rdi,0x43af70
  4037c8:	call   QWORD PTR [rip+0x6081a]        # 463fe8 <strcmp@plt+0x60850>
  4037ce:	hlt    
  4037cf:	nop
  4037d0:	endbr64 
  4037d4:	ret    
  4037d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4037df:	nop
  4037e0:	mov    eax,0x468100
  4037e5:	cmp    rax,0x468100
  4037eb:	je     403800 <strcmp@plt+0x68>
  4037ed:	mov    eax,0x0
  4037f2:	test   rax,rax
  4037f5:	je     403800 <strcmp@plt+0x68>
  4037f7:	mov    edi,0x468100
  4037fc:	jmp    rax
  4037fe:	xchg   ax,ax
  403800:	ret    
  403801:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40380c:	nop    DWORD PTR [rax+0x0]
  403810:	mov    esi,0x468100
  403815:	sub    rsi,0x468100
  40381c:	mov    rax,rsi
  40381f:	shr    rsi,0x3f
  403823:	sar    rax,0x3
  403827:	add    rsi,rax
  40382a:	sar    rsi,1
  40382d:	je     403840 <strcmp@plt+0xa8>
  40382f:	mov    eax,0x0
  403834:	test   rax,rax
  403837:	je     403840 <strcmp@plt+0xa8>
  403839:	mov    edi,0x468100
  40383e:	jmp    rax
  403840:	ret    
  403841:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40384c:	nop    DWORD PTR [rax+0x0]
  403850:	endbr64 
  403854:	cmp    BYTE PTR [rip+0x648a5],0x0        # 468100 <strcmp@plt+0x64968>
  40385b:	jne    403870 <strcmp@plt+0xd8>
  40385d:	push   rbp
  40385e:	mov    rbp,rsp
  403861:	call   4037e0 <strcmp@plt+0x48>
  403866:	mov    BYTE PTR [rip+0x64893],0x1        # 468100 <strcmp@plt+0x64968>
  40386d:	pop    rbp
  40386e:	ret    
  40386f:	nop
  403870:	ret    
  403871:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40387c:	nop    DWORD PTR [rax+0x0]
  403880:	endbr64 
  403884:	jmp    403810 <strcmp@plt+0x78>
  403886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403890:	push   rax
  403891:	lea    rdi,[rip+0x3ea1e]        # 4422b6 <strcmp@plt+0x3eb1e>
  403898:	lea    rsi,[rip+0x3e9dd]        # 44227c <strcmp@plt+0x3eae4>
  40389f:	lea    rdx,[rip+0x4b3b6]        # 44ec5c <strcmp@plt+0x4b4c4>
  4038a6:	xor    eax,eax
  4038a8:	call   403050 <printf@plt>
  4038ad:	lea    rax,[rip+0x60b3c]        # 4643f0 <strcmp@plt+0x60c58>
  4038b4:	mov    rsi,QWORD PTR [rax]
  4038b7:	cmp    BYTE PTR [rsi],0x0
  4038ba:	je     4038cb <strcmp@plt+0x133>
  4038bc:	lea    rdi,[rip+0x48bb0]        # 44c473 <strcmp@plt+0x48cdb>
  4038c3:	xor    eax,eax
  4038c5:	pop    rcx
  4038c6:	jmp    403050 <printf@plt>
  4038cb:	pop    rax
  4038cc:	ret    
  4038cd:	nop    DWORD PTR [rax]
  4038d0:	push   rbp
  4038d1:	push   r14
  4038d3:	push   rbx
  4038d4:	lea    r14,[rip+0x60b05]        # 4643e0 <strcmp@plt+0x60c48>
  4038db:	mov    rax,QWORD PTR [r14]
  4038de:	mov    bpl,BYTE PTR [rax]
  4038e1:	lea    rax,[rip+0x60b00]        # 4643e8 <strcmp@plt+0x60c50>
  4038e8:	mov    rdi,QWORD PTR [rax]
  4038eb:	mov    bl,BYTE PTR [rdi]
  4038ed:	test   bl,bl
  4038ef:	je     4038f6 <strcmp@plt+0x15e>
  4038f1:	call   403610 <puts@plt>
  4038f6:	test   bpl,bpl
  4038f9:	je     403903 <strcmp@plt+0x16b>
  4038fb:	mov    rdi,QWORD PTR [r14]
  4038fe:	call   403610 <puts@plt>
  403903:	or     bl,bpl
  403906:	je     403912 <strcmp@plt+0x17a>
  403908:	mov    edi,0xa
  40390d:	call   403570 <putchar@plt>
  403912:	lea    rax,[rip+0x60adf]        # 4643f8 <strcmp@plt+0x60c60>
  403919:	mov    rsi,QWORD PTR [rax]
  40391c:	cmp    BYTE PTR [rsi],0x0
  40391f:	je     40392f <strcmp@plt+0x197>
  403921:	lea    rdi,[rip+0x3e9fb]        # 442323 <strcmp@plt+0x3eb8b>
  403928:	xor    eax,eax
  40392a:	call   403050 <printf@plt>
  40392f:	lea    rbx,[rip+0x60aca]        # 464400 <strcmp@plt+0x60c68>
  403936:	mov    rdi,QWORD PTR [rbx]
  403939:	test   rdi,rdi
  40393c:	je     403961 <strcmp@plt+0x1c9>
  40393e:	add    rbx,0x8
  403942:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40394c:	nop    DWORD PTR [rax+0x0]
  403950:	call   403610 <puts@plt>
  403955:	mov    rdi,QWORD PTR [rbx]
  403958:	add    rbx,0x8
  40395c:	test   rdi,rdi
  40395f:	jne    403950 <strcmp@plt+0x1b8>
  403961:	pop    rbx
  403962:	pop    r14
  403964:	pop    rbp
  403965:	ret    
  403966:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403970:	vxorps xmm0,xmm0,xmm0
  403974:	vmovups XMMWORD PTR [rdi+0x6c],xmm0
  403979:	vmovups XMMWORD PTR [rdi+0x60],xmm0
  40397e:	mov    DWORD PTR [rdi+0x10],0xffffffff
  403985:	mov    QWORD PTR [rdi+0x18],0x0
  40398d:	mov    DWORD PTR [rdi+0x28],0xffffffff
  403994:	mov    QWORD PTR [rdi+0x30],0x0
  40399c:	vmovups XMMWORD PTR [rdi+0x48],xmm0
  4039a1:	lea    rax,[rip+0x60a58]        # 464400 <strcmp@plt+0x60c68>
  4039a8:	mov    rcx,QWORD PTR [rax]
  4039ab:	mov    QWORD PTR [rdi],rcx
  4039ae:	mov    rcx,QWORD PTR [rax+0x8]
  4039b2:	mov    QWORD PTR [rdi+0x8],rcx
  4039b6:	mov    rcx,QWORD PTR [rax+0x18]
  4039ba:	mov    QWORD PTR [rdi+0x20],rcx
  4039be:	vmovaps xmm0,XMMWORD PTR [rax+0x20]
  4039c3:	vmovups XMMWORD PTR [rdi+0x38],xmm0
  4039c8:	mov    rax,QWORD PTR [rax+0x30]
  4039cc:	mov    QWORD PTR [rdi+0x58],rax
  4039d0:	ret    
  4039d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4039db:	nop    DWORD PTR [rax+rax*1+0x0]
  4039e0:	test   rdi,rdi
  4039e3:	je     4039f8 <strcmp@plt+0x260>
  4039e5:	vmovaps xmm0,XMMWORD PTR [rip+0x3e623]        # 442010 <strcmp@plt+0x3e878>
  4039ed:	vmovups XMMWORD PTR [rdi],xmm0
  4039f1:	mov    DWORD PTR [rdi+0x10],0x1
  4039f8:	ret    
  4039f9:	nop    DWORD PTR [rax+0x0]
  403a00:	push   rax
  403a01:	mov    edi,0x14
  403a06:	call   403520 <malloc@plt>
  403a0b:	test   rax,rax
  403a0e:	je     403a23 <strcmp@plt+0x28b>
  403a10:	vmovaps xmm0,XMMWORD PTR [rip+0x3e5f8]        # 442010 <strcmp@plt+0x3e878>
  403a18:	vmovups XMMWORD PTR [rax],xmm0
  403a1c:	mov    DWORD PTR [rax+0x10],0x1
  403a23:	pop    rcx
  403a24:	ret    
  403a25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a2f:	nop
  403a30:	push   rbp
  403a31:	push   r15
  403a33:	push   r14
  403a35:	push   r13
  403a37:	push   r12
  403a39:	push   rbx
  403a3a:	sub    rsp,0x18
  403a3e:	test   rdi,rdi
  403a41:	je     403c82 <strcmp@plt+0x4ea>
  403a47:	mov    rbp,rsi
  403a4a:	mov    r15,rdi
  403a4d:	cmp    DWORD PTR [rsi+0x60],0x0
  403a51:	je     403a6b <strcmp@plt+0x2d3>
  403a53:	lea    rsi,[rip+0x48a1a]        # 44c474 <strcmp@plt+0x48cdc>
  403a5a:	lea    rdx,[rip+0x3e87f]        # 4422e0 <strcmp@plt+0x3eb48>
  403a61:	mov    rdi,r15
  403a64:	xor    eax,eax
  403a66:	call   4035a0 <fprintf@plt>
  403a6b:	cmp    DWORD PTR [rbp+0x64],0x0
  403a6f:	je     403a89 <strcmp@plt+0x2f1>
  403a71:	lea    rsi,[rip+0x489fc]        # 44c474 <strcmp@plt+0x48cdc>
  403a78:	lea    rdx,[rip+0x4cccf]        # 45074e <strcmp@plt+0x4cfb6>
  403a7f:	mov    rdi,r15
  403a82:	xor    eax,eax
  403a84:	call   4035a0 <fprintf@plt>
  403a89:	cmp    DWORD PTR [rbp+0x68],0x0
  403a8d:	je     403b30 <strcmp@plt+0x398>
  403a93:	mov    r12,QWORD PTR [rbp+0x18]
  403a97:	test   r12,r12
  403a9a:	je     403b18 <strcmp@plt+0x380>
  403a9c:	mov    rdi,r12
  403a9f:	call   4031e0 <strlen@plt>
  403aa4:	mov    r13,rax
  403aa7:	lea    rax,[rip+0x60992]        # 464440 <strcmp@plt+0x60ca8>
  403aae:	mov    rbx,QWORD PTR [rax]
  403ab1:	test   rbx,rbx
  403ab4:	je     403cbb <strcmp@plt+0x523>
  403aba:	mov    QWORD PTR [rsp+0x8],r15
  403abf:	xor    r14d,r14d
  403ac2:	mov    DWORD PTR [rsp+0x10],0x0
  403aca:	xor    r15d,r15d
  403acd:	jmp    403ae8 <strcmp@plt+0x350>
  403acf:	nop
  403ad0:	lea    rax,[rip+0x60969]        # 464440 <strcmp@plt+0x60ca8>
  403ad7:	mov    rbx,QWORD PTR [rax+r14*8+0x8]
  403adc:	inc    r14
  403adf:	test   rbx,rbx
  403ae2:	je     403bea <strcmp@plt+0x452>
  403ae8:	mov    rdi,r12
  403aeb:	mov    rsi,rbx
  403aee:	mov    rdx,r13
  403af1:	call   403220 <strncmp@plt>
  403af6:	test   eax,eax
  403af8:	jne    403ad0 <strcmp@plt+0x338>
  403afa:	mov    rdi,rbx
  403afd:	call   4031e0 <strlen@plt>
  403b02:	cmp    rax,r13
  403b05:	je     403cab <strcmp@plt+0x513>
  403b0b:	inc    r15d
  403b0e:	mov    eax,r14d
  403b11:	mov    DWORD PTR [rsp+0x10],r14d
  403b16:	jmp    403ad0 <strcmp@plt+0x338>
  403b18:	lea    rsi,[rip+0x48955]        # 44c474 <strcmp@plt+0x48cdc>
  403b1f:	lea    rdx,[rip+0x4d5c2]        # 4510e8 <strcmp@plt+0x4d950>
  403b26:	mov    rdi,r15
  403b29:	xor    eax,eax
  403b2b:	call   4035a0 <fprintf@plt>
  403b30:	cmp    DWORD PTR [rbp+0x6c],0x0
  403b34:	je     403ce0 <strcmp@plt+0x548>
  403b3a:	mov    r12,QWORD PTR [rbp+0x30]
  403b3e:	test   r12,r12
  403b41:	je     403bc3 <strcmp@plt+0x42b>
  403b47:	mov    QWORD PTR [rsp+0x10],rbp
  403b4c:	mov    rdi,r12
  403b4f:	call   4031e0 <strlen@plt>
  403b54:	mov    r13,rax
  403b57:	lea    rax,[rip+0x60912]        # 464470 <strcmp@plt+0x60cd8>
  403b5e:	mov    rbx,QWORD PTR [rax]
  403b61:	test   rbx,rbx
  403b64:	je     403d69 <strcmp@plt+0x5d1>
  403b6a:	mov    QWORD PTR [rsp+0x8],r15
  403b6f:	xor    ebp,ebp
  403b71:	xor    r14d,r14d
  403b74:	xor    r15d,r15d
  403b77:	jmp    403b98 <strcmp@plt+0x400>
  403b79:	nop    DWORD PTR [rax+0x0]
  403b80:	lea    rax,[rip+0x608e9]        # 464470 <strcmp@plt+0x60cd8>
  403b87:	mov    rbx,QWORD PTR [rax+rbp*8+0x8]
  403b8c:	inc    rbp
  403b8f:	test   rbx,rbx
  403b92:	je     403c3c <strcmp@plt+0x4a4>
  403b98:	mov    rdi,r12
  403b9b:	mov    rsi,rbx
  403b9e:	mov    rdx,r13
  403ba1:	call   403220 <strncmp@plt>
  403ba6:	test   eax,eax
  403ba8:	jne    403b80 <strcmp@plt+0x3e8>
  403baa:	mov    rdi,rbx
  403bad:	call   4031e0 <strlen@plt>
  403bb2:	cmp    rax,r13
  403bb5:	je     403d58 <strcmp@plt+0x5c0>
  403bbb:	inc    r15d
  403bbe:	mov    r14d,ebp
  403bc1:	jmp    403b80 <strcmp@plt+0x3e8>
  403bc3:	lea    rsi,[rip+0x488aa]        # 44c474 <strcmp@plt+0x48cdc>
  403bca:	lea    rdx,[rip+0x450c9]        # 448c9a <strcmp@plt+0x45502>
  403bd1:	mov    rdi,r15
  403bd4:	xor    eax,eax
  403bd6:	call   4035a0 <fprintf@plt>
  403bdb:	cmp    DWORD PTR [rbp+0x70],0x0
  403bdf:	jne    403ce6 <strcmp@plt+0x54e>
  403be5:	jmp    403cfe <strcmp@plt+0x566>
  403bea:	cmp    r15d,0x1
  403bee:	mov    r15,QWORD PTR [rsp+0x8]
  403bf3:	mov    eax,DWORD PTR [rsp+0x10]
  403bf7:	jne    403cbb <strcmp@plt+0x523>
  403bfd:	test   eax,eax
  403bff:	js     403cbb <strcmp@plt+0x523>
  403c05:	cdqe   
  403c07:	lea    rcx,[rip+0x60832]        # 464440 <strcmp@plt+0x60ca8>
  403c0e:	mov    r8,QWORD PTR [rcx+rax*8]
  403c12:	lea    rsi,[rip+0x3e70f]        # 442328 <strcmp@plt+0x3eb90>
  403c19:	lea    rdx,[rip+0x4d4c8]        # 4510e8 <strcmp@plt+0x4d950>
  403c20:	mov    rdi,r15
  403c23:	mov    rcx,r12
  403c26:	xor    eax,eax
  403c28:	call   4035a0 <fprintf@plt>
  403c2d:	cmp    DWORD PTR [rbp+0x6c],0x0
  403c31:	jne    403b3a <strcmp@plt+0x3a2>
  403c37:	jmp    403ce0 <strcmp@plt+0x548>
  403c3c:	cmp    r15d,0x1
  403c40:	mov    r15,QWORD PTR [rsp+0x8]
  403c45:	jne    403d69 <strcmp@plt+0x5d1>
  403c4b:	test   r14d,r14d
  403c4e:	js     403d69 <strcmp@plt+0x5d1>
  403c54:	movsxd rax,r14d
  403c57:	lea    rcx,[rip+0x60812]        # 464470 <strcmp@plt+0x60cd8>
  403c5e:	mov    r8,QWORD PTR [rcx+rax*8]
  403c62:	lea    rsi,[rip+0x3e6bf]        # 442328 <strcmp@plt+0x3eb90>
  403c69:	lea    rdx,[rip+0x4502a]        # 448c9a <strcmp@plt+0x45502>
  403c70:	mov    rdi,r15
  403c73:	mov    rcx,r12
  403c76:	xor    eax,eax
  403c78:	call   4035a0 <fprintf@plt>
  403c7d:	jmp    403d84 <strcmp@plt+0x5ec>
  403c82:	mov    rax,QWORD PTR [rip+0x6031f]        # 463fa8 <strcmp@plt+0x60810>
  403c89:	mov    rdi,QWORD PTR [rax]
  403c8c:	lea    rsi,[rip+0x3e62a]        # 4422bd <strcmp@plt+0x3eb25>
  403c93:	lea    rdx,[rip+0x3e5e2]        # 44227c <strcmp@plt+0x3eae4>
  403c9a:	xor    eax,eax
  403c9c:	call   4035a0 <fprintf@plt>
  403ca1:	mov    ebx,0x1
  403ca6:	jmp    403d47 <strcmp@plt+0x5af>
  403cab:	mov    eax,r14d
  403cae:	mov    r15,QWORD PTR [rsp+0x8]
  403cb3:	test   eax,eax
  403cb5:	jns    403c05 <strcmp@plt+0x46d>
  403cbb:	lea    rsi,[rip+0x3e674]        # 442336 <strcmp@plt+0x3eb9e>
  403cc2:	lea    rdx,[rip+0x4d41f]        # 4510e8 <strcmp@plt+0x4d950>
  403cc9:	mov    rdi,r15
  403ccc:	mov    rcx,r12
  403ccf:	xor    eax,eax
  403cd1:	call   4035a0 <fprintf@plt>
  403cd6:	cmp    DWORD PTR [rbp+0x6c],0x0
  403cda:	jne    403b3a <strcmp@plt+0x3a2>
  403ce0:	cmp    DWORD PTR [rbp+0x70],0x0
  403ce4:	je     403cfe <strcmp@plt+0x566>
  403ce6:	lea    rsi,[rip+0x48787]        # 44c474 <strcmp@plt+0x48cdc>
  403ced:	lea    rdx,[rip+0x3e5f1]        # 4422e5 <strcmp@plt+0x3eb4d>
  403cf4:	mov    rdi,r15
  403cf7:	xor    eax,eax
  403cf9:	call   4035a0 <fprintf@plt>
  403cfe:	cmp    DWORD PTR [rbp+0x74],0x0
  403d02:	je     403d29 <strcmp@plt+0x591>
  403d04:	mov    rcx,QWORD PTR [rbp+0x50]
  403d08:	test   rcx,rcx
  403d0b:	je     403d2d <strcmp@plt+0x595>
  403d0d:	lea    rsi,[rip+0x3e622]        # 442336 <strcmp@plt+0x3eb9e>
  403d14:	lea    rdx,[rip+0x3e5d4]        # 4422ef <strcmp@plt+0x3eb57>
  403d1b:	xor    ebx,ebx
  403d1d:	mov    rdi,r15
  403d20:	xor    eax,eax
  403d22:	call   4035a0 <fprintf@plt>
  403d27:	jmp    403d47 <strcmp@plt+0x5af>
  403d29:	xor    ebx,ebx
  403d2b:	jmp    403d47 <strcmp@plt+0x5af>
  403d2d:	lea    rsi,[rip+0x48740]        # 44c474 <strcmp@plt+0x48cdc>
  403d34:	lea    rdx,[rip+0x3e5b4]        # 4422ef <strcmp@plt+0x3eb57>
  403d3b:	xor    ebx,ebx
  403d3d:	mov    rdi,r15
  403d40:	xor    eax,eax
  403d42:	call   4035a0 <fprintf@plt>
  403d47:	mov    eax,ebx
  403d49:	add    rsp,0x18
  403d4d:	pop    rbx
  403d4e:	pop    r12
  403d50:	pop    r13
  403d52:	pop    r14
  403d54:	pop    r15
  403d56:	pop    rbp
  403d57:	ret    
  403d58:	mov    r14d,ebp
  403d5b:	mov    r15,QWORD PTR [rsp+0x8]
  403d60:	test   r14d,r14d
  403d63:	jns    403c54 <strcmp@plt+0x4bc>
  403d69:	lea    rsi,[rip+0x3e5c6]        # 442336 <strcmp@plt+0x3eb9e>
  403d70:	lea    rdx,[rip+0x44f23]        # 448c9a <strcmp@plt+0x45502>
  403d77:	mov    rdi,r15
  403d7a:	mov    rcx,r12
  403d7d:	xor    eax,eax
  403d7f:	call   4035a0 <fprintf@plt>
  403d84:	mov    rbp,QWORD PTR [rsp+0x10]
  403d89:	cmp    DWORD PTR [rbp+0x70],0x0
  403d8d:	jne    403ce6 <strcmp@plt+0x54e>
  403d93:	jmp    403cfe <strcmp@plt+0x566>
  403d98:	nop    DWORD PTR [rax+rax*1+0x0]
  403da0:	push   rbp
  403da1:	push   r15
  403da3:	push   r14
  403da5:	push   rbx
  403da6:	push   rax
  403da7:	mov    r14,rsi
  403daa:	mov    r15,rdi
  403dad:	lea    rsi,[rip+0x3e547]        # 4422fb <strcmp@plt+0x3eb63>
  403db4:	call   403490 <fopen@plt>
  403db9:	test   rax,rax
  403dbc:	je     403dda <strcmp@plt+0x642>
  403dbe:	mov    rbx,rax
  403dc1:	mov    rdi,rax
  403dc4:	mov    rsi,r14
  403dc7:	call   403a30 <strcmp@plt+0x298>
  403dcc:	mov    ebp,eax
  403dce:	mov    rdi,rbx
  403dd1:	call   4033e0 <fclose@plt>
  403dd6:	mov    eax,ebp
  403dd8:	jmp    403e01 <strcmp@plt+0x669>
  403dda:	mov    rax,QWORD PTR [rip+0x601c7]        # 463fa8 <strcmp@plt+0x60810>
  403de1:	mov    rdi,QWORD PTR [rax]
  403de4:	lea    rsi,[rip+0x3e512]        # 4422fd <strcmp@plt+0x3eb65>
  403deb:	lea    rdx,[rip+0x3e48a]        # 44227c <strcmp@plt+0x3eae4>
  403df2:	mov    rcx,r15
  403df5:	xor    eax,eax
  403df7:	call   4035a0 <fprintf@plt>
  403dfc:	mov    eax,0x1
  403e01:	add    rsp,0x8
  403e05:	pop    rbx
  403e06:	pop    r14
  403e08:	pop    r15
  403e0a:	pop    rbp
  403e0b:	ret    
  403e0c:	nop    DWORD PTR [rax+0x0]
  403e10:	push   rbx
  403e11:	mov    rbx,rdi
  403e14:	mov    rdi,QWORD PTR [rdi+0x18]
  403e18:	test   rdi,rdi
  403e1b:	je     403e2a <strcmp@plt+0x692>
  403e1d:	call   403790 <free@plt>
  403e22:	mov    QWORD PTR [rbx+0x18],0x0
  403e2a:	mov    rdi,QWORD PTR [rbx+0x30]
  403e2e:	test   rdi,rdi
  403e31:	je     403e40 <strcmp@plt+0x6a8>
  403e33:	call   403790 <free@plt>
  403e38:	mov    QWORD PTR [rbx+0x30],0x0
  403e40:	mov    rdi,QWORD PTR [rbx+0x48]
  403e44:	test   rdi,rdi
  403e47:	je     403e56 <strcmp@plt+0x6be>
  403e49:	call   403790 <free@plt>
  403e4e:	mov    QWORD PTR [rbx+0x48],0x0
  403e56:	mov    rdi,QWORD PTR [rbx+0x50]
  403e5a:	test   rdi,rdi
  403e5d:	je     403e6c <strcmp@plt+0x6d4>
  403e5f:	call   403790 <free@plt>
  403e64:	mov    QWORD PTR [rbx+0x50],0x0
  403e6c:	vxorps xmm0,xmm0,xmm0
  403e70:	vmovups XMMWORD PTR [rbx+0x6c],xmm0
  403e75:	vmovups XMMWORD PTR [rbx+0x60],xmm0
  403e7a:	pop    rbx
  403e7b:	ret    
  403e7c:	nop    DWORD PTR [rax+0x0]
  403e80:	push   rbx
  403e81:	sub    rsp,0x20
  403e85:	mov    rbx,rdx
  403e88:	vmovaps xmm0,XMMWORD PTR [rip+0x3e180]        # 442010 <strcmp@plt+0x3e878>
  403e90:	vmovaps XMMWORD PTR [rsp],xmm0
  403e95:	mov    DWORD PTR [rsp+0x10],0x1
  403e9d:	mov    rcx,rsp
  403ea0:	call   403f50 <strcmp@plt+0x7b8>
  403ea5:	cmp    eax,0x1
  403ea8:	je     403eb0 <strcmp@plt+0x718>
  403eaa:	add    rsp,0x20
  403eae:	pop    rbx
  403eaf:	ret    
  403eb0:	mov    rdi,rbx
  403eb3:	call   403e10 <strcmp@plt+0x678>
  403eb8:	mov    edi,0x1
  403ebd:	call   4034b0 <exit@plt>
  403ec2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403ecc:	nop    DWORD PTR [rax+0x0]
  403ed0:	push   rbx
  403ed1:	sub    rsp,0x20
  403ed5:	mov    rbx,rdx
  403ed8:	mov    DWORD PTR [rsp+0x8],ecx
  403edc:	mov    DWORD PTR [rsp+0xc],r8d
  403ee1:	mov    DWORD PTR [rsp+0x10],r9d
  403ee6:	movabs rax,0x100000000
  403ef0:	mov    QWORD PTR [rsp+0x14],rax
  403ef5:	lea    rcx,[rsp+0x8]
  403efa:	call   403f50 <strcmp@plt+0x7b8>
  403eff:	cmp    eax,0x1
  403f02:	je     403f0a <strcmp@plt+0x772>
  403f04:	add    rsp,0x20
  403f08:	pop    rbx
  403f09:	ret    
  403f0a:	mov    rdi,rbx
  403f0d:	call   403e10 <strcmp@plt+0x678>
  403f12:	mov    edi,0x1
  403f17:	call   4034b0 <exit@plt>
  403f1c:	nop    DWORD PTR [rax+0x0]
  403f20:	push   rbx
  403f21:	mov    rbx,rdx
  403f24:	call   403f50 <strcmp@plt+0x7b8>
  403f29:	cmp    eax,0x1
  403f2c:	je     403f30 <strcmp@plt+0x798>
  403f2e:	pop    rbx
  403f2f:	ret    
  403f30:	mov    rdi,rbx
  403f33:	call   403e10 <strcmp@plt+0x678>
  403f38:	mov    edi,0x1
  403f3d:	call   4034b0 <exit@plt>
  403f42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f4c:	nop    DWORD PTR [rax+0x0]
  403f50:	push   rbp
  403f51:	push   r15
  403f53:	push   r14
  403f55:	push   r13
  403f57:	push   r12
  403f59:	push   rbx
  403f5a:	sub    rsp,0xe8
  403f61:	mov    rbx,rdx
  403f64:	mov    r14,rsi
  403f67:	mov    ebp,edi
  403f69:	mov    rax,QWORD PTR [rsi]
  403f6c:	mov    QWORD PTR [rip+0x64195],rax        # 468108 <strcmp@plt+0x64970>
  403f73:	mov    eax,DWORD PTR [rcx]
  403f75:	mov    QWORD PTR [rsp+0x8],rax
  403f7a:	mov    eax,DWORD PTR [rcx+0xc]
  403f7d:	mov    QWORD PTR [rsp+0x10],rax
  403f82:	cmp    DWORD PTR [rcx+0x4],0x0
  403f86:	je     403fea <strcmp@plt+0x852>
  403f88:	vxorps xmm0,xmm0,xmm0
  403f8c:	vmovups XMMWORD PTR [rbx+0x6c],xmm0
  403f91:	vmovups XMMWORD PTR [rbx+0x60],xmm0
  403f96:	mov    DWORD PTR [rbx+0x10],0xffffffff
  403f9d:	mov    QWORD PTR [rbx+0x18],0x0
  403fa5:	mov    DWORD PTR [rbx+0x28],0xffffffff
  403fac:	mov    QWORD PTR [rbx+0x30],0x0
  403fb4:	vmovups XMMWORD PTR [rbx+0x48],xmm0
  403fb9:	lea    rdx,[rip+0x60440]        # 464400 <strcmp@plt+0x60c68>
  403fc0:	mov    rax,QWORD PTR [rdx]
  403fc3:	mov    QWORD PTR [rbx],rax
  403fc6:	mov    rax,QWORD PTR [rdx+0x8]
  403fca:	mov    QWORD PTR [rbx+0x8],rax
  403fce:	mov    rax,QWORD PTR [rdx+0x18]
  403fd2:	mov    QWORD PTR [rbx+0x20],rax
  403fd6:	vmovaps xmm0,XMMWORD PTR [rdx+0x20]
  403fdb:	vmovups XMMWORD PTR [rbx+0x38],xmm0
  403fe0:	mov    rdx,QWORD PTR [rdx+0x30]
  403fe4:	mov    QWORD PTR [rbx+0x58],rdx
  403fe8:	jmp    403ffe <strcmp@plt+0x866>
  403fea:	lea    rdx,[rip+0x6040f]        # 464400 <strcmp@plt+0x60c68>
  403ff1:	mov    rax,QWORD PTR [rdx+0x18]
  403ff5:	vmovaps xmm0,XMMWORD PTR [rdx+0x20]
  403ffa:	mov    rdx,QWORD PTR [rdx+0x30]
  403ffe:	vxorps xmm1,xmm1,xmm1
  404002:	vmovups XMMWORD PTR [rsp+0x8c],xmm1
  40400b:	vmovaps XMMWORD PTR [rsp+0x80],xmm1
  404014:	mov    DWORD PTR [rsp+0x30],0xffffffff
  40401c:	mov    QWORD PTR [rsp+0x38],0x0
  404025:	mov    DWORD PTR [rsp+0x48],0xffffffff
  40402d:	mov    QWORD PTR [rsp+0x50],0x0
  404036:	vmovups XMMWORD PTR [rsp+0x68],xmm1
  40403c:	lea    rsi,[rip+0x603bd]        # 464400 <strcmp@plt+0x60c68>
  404043:	vmovaps xmm1,XMMWORD PTR [rsi]
  404047:	vmovaps XMMWORD PTR [rsp+0x20],xmm1
  40404d:	mov    QWORD PTR [rsp+0x40],rax
  404052:	vmovups XMMWORD PTR [rsp+0x58],xmm0
  404058:	mov    QWORD PTR [rsp+0x78],rdx
  40405d:	mov    rax,QWORD PTR [rip+0x5ff2c]        # 463f90 <strcmp@plt+0x607f8>
  404064:	mov    QWORD PTR [rax],0x0
  40406b:	mov    rax,QWORD PTR [rip+0x5ff3e]        # 463fb0 <strcmp@plt+0x60818>
  404072:	mov    DWORD PTR [rax],0x0
  404078:	mov    eax,DWORD PTR [rcx+0x10]
  40407b:	mov    rcx,QWORD PTR [rip+0x5ff46]        # 463fc8 <strcmp@plt+0x60830>
  404082:	mov    DWORD PTR [rcx],eax
  404084:	mov    rax,QWORD PTR [rip+0x5ff0d]        # 463f98 <strcmp@plt+0x60800>
  40408b:	mov    DWORD PTR [rax],0x3f
  404091:	lea    rax,[rbx+0x48]
  404095:	mov    QWORD PTR [rsp+0xe0],rax
  40409d:	lea    rax,[rbx+0x50]
  4040a1:	mov    QWORD PTR [rsp+0xd8],rax
  4040a9:	lea    rax,[rbx+0x74]
  4040ad:	mov    QWORD PTR [rsp+0xd0],rax
  4040b5:	lea    rax,[rbx+0x28]
  4040b9:	mov    QWORD PTR [rsp+0xc8],rax
  4040c1:	lea    rax,[rbx+0x30]
  4040c5:	mov    QWORD PTR [rsp+0xc0],rax
  4040cd:	lea    rax,[rbx+0x6c]
  4040d1:	mov    QWORD PTR [rsp+0xb8],rax
  4040d9:	lea    rax,[rbx+0x10]
  4040dd:	mov    QWORD PTR [rsp+0xb0],rax
  4040e5:	lea    rax,[rbx+0x18]
  4040e9:	mov    QWORD PTR [rsp+0xa8],rax
  4040f1:	lea    rax,[rbx+0x68]
  4040f5:	mov    QWORD PTR [rsp+0xa0],rax
  4040fd:	lea    rdx,[rip+0x3e23b]        # 44233f <strcmp@plt+0x3eba7>
  404104:	lea    rcx,[rip+0x60385]        # 464490 <strcmp@plt+0x60cf8>
  40410b:	lea    r8,[rsp+0x1c]
  404110:	mov    DWORD PTR [rsp+0x1c],0x0
  404118:	mov    edi,ebp
  40411a:	mov    rsi,r14
  40411d:	mov    r12,rdx
  404120:	mov    r13,rcx
  404123:	mov    r15,r8
  404126:	call   403670 <getopt_long@plt>
  40412b:	lea    ecx,[rax-0x3f]
  40412e:	cmp    ecx,0x29
  404131:	ja     404296 <strcmp@plt+0xafe>
  404137:	lea    rdx,[rip+0x3dee2]        # 442020 <strcmp@plt+0x3e888>
  40413e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  404142:	add    rcx,rdx
  404145:	jmp    rcx
  404147:	inc    DWORD PTR [rbx+0x78]
  40414a:	cmp    DWORD PTR [rsp+0x90],0x0
  404152:	jne    404392 <strcmp@plt+0xbfa>
  404158:	mov    eax,DWORD PTR [rbx+0x70]
  40415b:	cmp    DWORD PTR [rsp+0x10],0x0
  404160:	je     404282 <strcmp@plt+0xaea>
  404166:	test   eax,eax
  404168:	mov    eax,0x0
  40416d:	jne    404392 <strcmp@plt+0xbfa>
  404173:	mov    DWORD PTR [rsp+0x90],0x1
  40417e:	inc    eax
  404180:	mov    DWORD PTR [rbx+0x70],eax
  404183:	jmp    404274 <strcmp@plt+0xadc>
  404188:	inc    DWORD PTR [rbx+0x78]
  40418b:	mov    rax,QWORD PTR [rip+0x5fdfe]        # 463f90 <strcmp@plt+0x607f8>
  404192:	mov    r8,QWORD PTR [rax]
  404195:	sub    rsp,0x8
  404199:	mov    rdi,QWORD PTR [rsp+0xd0]
  4041a1:	mov    rsi,QWORD PTR [rsp+0xc8]
  4041a9:	mov    rdx,QWORD PTR [rsp+0xc0]
  4041b1:	lea    rcx,[rsp+0x94]
  4041b9:	lea    r9,[rip+0x602b0]        # 464470 <strcmp@plt+0x60cd8>
  4041c0:	push   0x61
  4041c2:	lea    rax,[rip+0x44ad1]        # 448c9a <strcmp@plt+0x45502>
  4041c9:	jmp    40425c <strcmp@plt+0xac4>
  4041ce:	inc    DWORD PTR [rbx+0x78]
  4041d1:	mov    rax,QWORD PTR [rip+0x5fdb8]        # 463f90 <strcmp@plt+0x607f8>
  4041d8:	mov    r8,QWORD PTR [rax]
  4041db:	sub    rsp,0x8
  4041df:	mov    rdi,QWORD PTR [rsp+0xe8]
  4041e7:	mov    rsi,QWORD PTR [rsp+0xe0]
  4041ef:	mov    rdx,QWORD PTR [rsp+0xd8]
  4041f7:	lea    rcx,[rsp+0x9c]
  4041ff:	mov    r9d,0x0
  404205:	push   0x66
  404207:	lea    rax,[rip+0x3e0e1]        # 4422ef <strcmp@plt+0x3eb57>
  40420e:	push   rax
  40420f:	push   QWORD PTR [rsp+0x20]
  404213:	push   QWORD PTR [rsp+0x30]
  404217:	push   0x1
  404219:	jmp    404267 <strcmp@plt+0xacf>
  40421b:	inc    DWORD PTR [rbx+0x78]
  40421e:	mov    rax,QWORD PTR [rip+0x5fd6b]        # 463f90 <strcmp@plt+0x607f8>
  404225:	mov    r8,QWORD PTR [rax]
  404228:	sub    rsp,0x8
  40422c:	mov    rdi,QWORD PTR [rsp+0xb8]
  404234:	mov    rsi,QWORD PTR [rsp+0xb0]
  40423c:	mov    rdx,QWORD PTR [rsp+0xa8]
  404244:	lea    rcx,[rsp+0x90]
  40424c:	lea    r9,[rip+0x601ed]        # 464440 <strcmp@plt+0x60ca8>
  404253:	push   0x64
  404255:	lea    rax,[rip+0x4ce8c]        # 4510e8 <strcmp@plt+0x4d950>
  40425c:	push   rax
  40425d:	push   QWORD PTR [rsp+0x20]
  404261:	push   QWORD PTR [rsp+0x30]
  404265:	push   0x2
  404267:	call   404430 <strcmp@plt+0xc98>
  40426c:	add    rsp,0x30
  404270:	test   eax,eax
  404272:	jne    4042a7 <strcmp@plt+0xb0f>
  404274:	mov    rdx,r12
  404277:	mov    rcx,r13
  40427a:	mov    r8,r15
  40427d:	jmp    404110 <strcmp@plt+0x978>
  404282:	cmp    DWORD PTR [rsp+0x8],0x0
  404287:	jne    404173 <strcmp@plt+0x9db>
  40428d:	test   eax,eax
  40428f:	jne    404274 <strcmp@plt+0xadc>
  404291:	jmp    404173 <strcmp@plt+0x9db>
  404296:	cmp    eax,0xffffffff
  404299:	je     404335 <strcmp@plt+0xb9d>
  40429f:	test   eax,eax
  4042a1:	jne    4043ca <strcmp@plt+0xc32>
  4042a7:	mov    rdi,QWORD PTR [rsp+0x38]
  4042ac:	test   rdi,rdi
  4042af:	je     4042bf <strcmp@plt+0xb27>
  4042b1:	call   403790 <free@plt>
  4042b6:	mov    QWORD PTR [rsp+0x38],0x0
  4042bf:	mov    rdi,QWORD PTR [rsp+0x50]
  4042c4:	test   rdi,rdi
  4042c7:	je     4042d7 <strcmp@plt+0xb3f>
  4042c9:	call   403790 <free@plt>
  4042ce:	mov    QWORD PTR [rsp+0x50],0x0
  4042d7:	mov    rdi,QWORD PTR [rsp+0x68]
  4042dc:	test   rdi,rdi
  4042df:	je     4042ef <strcmp@plt+0xb57>
  4042e1:	call   403790 <free@plt>
  4042e6:	mov    QWORD PTR [rsp+0x68],0x0
  4042ef:	mov    rdi,QWORD PTR [rsp+0x70]
  4042f4:	mov    ebx,0x1
  4042f9:	test   rdi,rdi
  4042fc:	je     40430c <strcmp@plt+0xb74>
  4042fe:	call   403790 <free@plt>
  404303:	mov    QWORD PTR [rsp+0x70],0x0
  40430c:	vxorps xmm0,xmm0,xmm0
  404310:	lea    rax,[rsp+0x80]
  404318:	vmovups XMMWORD PTR [rax+0xc],xmm0
  40431d:	vmovaps XMMWORD PTR [rax],xmm0
  404321:	mov    eax,ebx
  404323:	add    rsp,0xe8
  40432a:	pop    rbx
  40432b:	pop    r12
  40432d:	pop    r13
  40432f:	pop    r14
  404331:	pop    r15
  404333:	pop    rbp
  404334:	ret    
  404335:	mov    rdi,QWORD PTR [rsp+0x38]
  40433a:	test   rdi,rdi
  40433d:	je     40434d <strcmp@plt+0xbb5>
  40433f:	call   403790 <free@plt>
  404344:	mov    QWORD PTR [rsp+0x38],0x0
  40434d:	mov    rdi,QWORD PTR [rsp+0x50]
  404352:	test   rdi,rdi
  404355:	je     404365 <strcmp@plt+0xbcd>
  404357:	call   403790 <free@plt>
  40435c:	mov    QWORD PTR [rsp+0x50],0x0
  404365:	mov    rdi,QWORD PTR [rsp+0x68]
  40436a:	test   rdi,rdi
  40436d:	je     40437d <strcmp@plt+0xbe5>
  40436f:	call   403790 <free@plt>
  404374:	mov    QWORD PTR [rsp+0x68],0x0
  40437d:	mov    rdi,QWORD PTR [rsp+0x70]
  404382:	xor    ebx,ebx
  404384:	test   rdi,rdi
  404387:	jne    4042fe <strcmp@plt+0xb66>
  40438d:	jmp    40430c <strcmp@plt+0xb74>
  404392:	mov    rax,QWORD PTR [rip+0x5fc0f]        # 463fa8 <strcmp@plt+0x60810>
  404399:	mov    rdi,QWORD PTR [rax]
  40439c:	mov    rdx,QWORD PTR [rip+0x63d65]        # 468108 <strcmp@plt+0x64970>
  4043a3:	lea    rsi,[rip+0x3dfb9]        # 442363 <strcmp@plt+0x3ebcb>
  4043aa:	lea    rcx,[rip+0x3df34]        # 4422e5 <strcmp@plt+0x3eb4d>
  4043b1:	lea    r9,[rip+0x4a8a2]        # 44ec5a <strcmp@plt+0x4b4c2>
  4043b8:	mov    r8d,0x44
  4043be:	xor    eax,eax
  4043c0:	call   4035a0 <fprintf@plt>
  4043c5:	jmp    4042a7 <strcmp@plt+0xb0f>
  4043ca:	mov    rcx,QWORD PTR [rip+0x5fbd7]        # 463fa8 <strcmp@plt+0x60810>
  4043d1:	mov    rdi,QWORD PTR [rcx]
  4043d4:	lea    rsi,[rip+0x3df6e]        # 442349 <strcmp@plt+0x3ebb1>
  4043db:	lea    rdx,[rip+0x3de9a]        # 44227c <strcmp@plt+0x3eae4>
  4043e2:	lea    r8,[rip+0x4a871]        # 44ec5a <strcmp@plt+0x4b4c2>
  4043e9:	mov    ecx,eax
  4043eb:	xor    eax,eax
  4043ed:	call   4035a0 <fprintf@plt>
  4043f2:	call   403270 <abort@plt>
  4043f7:	call   403890 <strcmp@plt+0xf8>
  4043fc:	jmp    404403 <strcmp@plt+0xc6b>
  4043fe:	call   4038d0 <strcmp@plt+0x138>
  404403:	lea    rdi,[rsp+0x20]
  404408:	call   403e10 <strcmp@plt+0x678>
  40440d:	xor    edi,edi
  40440f:	call   4034b0 <exit@plt>
  404414:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40441e:	xchg   ax,ax
  404420:	xor    eax,eax
  404422:	ret    
  404423:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40442d:	nop    DWORD PTR [rax]
  404430:	push   rbp
  404431:	push   r15
  404433:	push   r14
  404435:	push   r13
  404437:	push   r12
  404439:	push   rbx
  40443a:	sub    rsp,0x28
  40443e:	mov    r14,r9
  404441:	mov    r13,r8
  404444:	mov    rax,rcx
  404447:	mov    r12,rsi
  40444a:	mov    r15,rdi
  40444d:	mov    bl,BYTE PTR [rsp+0x80]
  404454:	mov    rcx,QWORD PTR [rsp+0x78]
  404459:	test   rax,rax
  40445c:	je     404477 <strcmp@plt+0xcdf>
  40445e:	cmp    DWORD PTR [rax],0x0
  404461:	jne    404647 <strcmp@plt+0xeaf>
  404467:	cmp    DWORD PTR [rsp+0x68],0x0
  40446c:	je     404477 <strcmp@plt+0xcdf>
  40446e:	cmp    DWORD PTR [rdx],0x0
  404471:	jne    404647 <strcmp@plt+0xeaf>
  404477:	test   r14,r14
  40447a:	mov    QWORD PTR [rsp+0x8],r15
  40447f:	je     40456d <strcmp@plt+0xdd5>
  404485:	mov    QWORD PTR [rsp+0x18],rax
  40448a:	mov    QWORD PTR [rsp+0x20],rdx
  40448f:	test   r13,r13
  404492:	je     40469b <strcmp@plt+0xf03>
  404498:	mov    rdi,r13
  40449b:	call   4031e0 <strlen@plt>
  4044a0:	mov    rbx,QWORD PTR [r14]
  4044a3:	test   rbx,rbx
  4044a6:	je     40469b <strcmp@plt+0xf03>
  4044ac:	mov    rbp,rax
  4044af:	mov    QWORD PTR [rsp+0x10],r12
  4044b4:	xor    r15d,r15d
  4044b7:	mov    DWORD PTR [rsp+0x4],0x0
  4044bf:	xor    r12d,r12d
  4044c2:	jmp    4044e8 <strcmp@plt+0xd50>
  4044c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4044ce:	xchg   ax,ax
  4044d0:	inc    r12d
  4044d3:	mov    eax,r15d
  4044d6:	mov    DWORD PTR [rsp+0x4],r15d
  4044db:	mov    rbx,QWORD PTR [r14+r15*8+0x8]
  4044e0:	inc    r15
  4044e3:	test   rbx,rbx
  4044e6:	je     404532 <strcmp@plt+0xd9a>
  4044e8:	mov    rdi,r13
  4044eb:	mov    rsi,rbx
  4044ee:	mov    rdx,rbp
  4044f1:	call   403220 <strncmp@plt>
  4044f6:	test   eax,eax
  4044f8:	jne    4044db <strcmp@plt+0xd43>
  4044fa:	mov    rdi,rbx
  4044fd:	call   4031e0 <strlen@plt>
  404502:	cmp    rax,rbp
  404505:	jne    4044d0 <strcmp@plt+0xd38>
  404507:	mov    ecx,r15d
  40450a:	test   ecx,ecx
  40450c:	jns    404544 <strcmp@plt+0xdac>
  40450e:	cmp    ecx,0xfffffffe
  404511:	lea    rax,[rip+0x3dedb]        # 4423f3 <strcmp@plt+0x3ec5b>
  404518:	lea    rcx,[rip+0x3fde1]        # 444300 <strcmp@plt+0x40b68>
  40451f:	cmove  rcx,rax
  404523:	mov    rax,QWORD PTR [rip+0x5fa7e]        # 463fa8 <strcmp@plt+0x60810>
  40452a:	mov    rdi,QWORD PTR [rax]
  40452d:	jmp    4046ac <strcmp@plt+0xf14>
  404532:	cmp    r12d,0x1
  404536:	mov    ecx,DWORD PTR [rsp+0x4]
  40453a:	jne    404692 <strcmp@plt+0xefa>
  404540:	test   ecx,ecx
  404542:	js     40450e <strcmp@plt+0xd76>
  404544:	mov    r12,QWORD PTR [rsp+0x10]
  404549:	mov    rdx,QWORD PTR [rsp+0x20]
  40454e:	mov    rax,QWORD PTR [rsp+0x18]
  404553:	test   rdx,rdx
  404556:	je     404574 <strcmp@plt+0xddc>
  404558:	cmp    DWORD PTR [rsp+0x70],0x0
  40455d:	jne    404574 <strcmp@plt+0xddc>
  40455f:	xor    r15d,r15d
  404562:	cmp    DWORD PTR [rdx],0x0
  404565:	jne    40470e <strcmp@plt+0xf76>
  40456b:	jmp    404574 <strcmp@plt+0xddc>
  40456d:	xor    ecx,ecx
  40456f:	test   rdx,rdx
  404572:	jne    404558 <strcmp@plt+0xdc0>
  404574:	test   rax,rax
  404577:	je     40457b <strcmp@plt+0xde3>
  404579:	inc    DWORD PTR [rax]
  40457b:	test   rdx,rdx
  40457e:	je     404582 <strcmp@plt+0xdea>
  404580:	inc    DWORD PTR [rdx]
  404582:	mov    r15d,DWORD PTR [rsp+0x60]
  404587:	mov    rbp,r13
  40458a:	test   r14,r14
  40458d:	je     404596 <strcmp@plt+0xdfe>
  40458f:	movsxd rax,ecx
  404592:	mov    rbp,QWORD PTR [r14+rax*8]
  404596:	test   r15d,r15d
  404599:	je     40470e <strcmp@plt+0xf76>
  40459f:	cmp    r15d,0x1
  4045a3:	je     4045b9 <strcmp@plt+0xe21>
  4045a5:	cmp    r15d,0x2
  4045a9:	jne    4045f7 <strcmp@plt+0xe5f>
  4045ab:	test   rbp,rbp
  4045ae:	je     4045f7 <strcmp@plt+0xe5f>
  4045b0:	mov    rax,QWORD PTR [rsp+0x8]
  4045b5:	mov    DWORD PTR [rax],ecx
  4045b7:	jmp    4045f7 <strcmp@plt+0xe5f>
  4045b9:	test   rbp,rbp
  4045bc:	je     4045f7 <strcmp@plt+0xe5f>
  4045be:	mov    r14,QWORD PTR [rsp+0x8]
  4045c3:	mov    rdi,QWORD PTR [r14]
  4045c6:	test   rdi,rdi
  4045c9:	je     4045d0 <strcmp@plt+0xe38>
  4045cb:	call   403790 <free@plt>
  4045d0:	mov    rdi,rbp
  4045d3:	call   4031e0 <strlen@plt>
  4045d8:	lea    rdi,[rax+0x1]
  4045dc:	call   403520 <malloc@plt>
  4045e1:	mov    rbx,rax
  4045e4:	test   rax,rax
  4045e7:	je     4045f4 <strcmp@plt+0xe5c>
  4045e9:	mov    rdi,rbx
  4045ec:	mov    rsi,rbp
  4045ef:	call   403390 <strcpy@plt>
  4045f4:	mov    QWORD PTR [r14],rbx
  4045f7:	xor    r15d,r15d
  4045fa:	test   r12,r12
  4045fd:	je     40470e <strcmp@plt+0xf76>
  404603:	test   r13,r13
  404606:	je     40470e <strcmp@plt+0xf76>
  40460c:	mov    rdi,QWORD PTR [r12]
  404610:	test   rdi,rdi
  404613:	je     40461a <strcmp@plt+0xe82>
  404615:	call   403790 <free@plt>
  40461a:	mov    rdi,r13
  40461d:	call   4031e0 <strlen@plt>
  404622:	lea    rdi,[rax+0x1]
  404626:	call   403520 <malloc@plt>
  40462b:	mov    rbx,rax
  40462e:	test   rax,rax
  404631:	je     40463e <strcmp@plt+0xea6>
  404633:	mov    rdi,rbx
  404636:	mov    rsi,r13
  404639:	call   403390 <strcpy@plt>
  40463e:	mov    QWORD PTR [r12],rbx
  404642:	jmp    40470e <strcmp@plt+0xf76>
  404647:	mov    rax,QWORD PTR [rip+0x5f95a]        # 463fa8 <strcmp@plt+0x60810>
  40464e:	mov    rdi,QWORD PTR [rax]
  404651:	mov    rdx,QWORD PTR [rip+0x63ab0]        # 468108 <strcmp@plt+0x64970>
  404658:	cmp    bl,0x2d
  40465b:	jne    404677 <strcmp@plt+0xedf>
  40465d:	lea    rsi,[rip+0x3dd31]        # 442395 <strcmp@plt+0x3ebfd>
  404664:	lea    r8,[rip+0x4a5ef]        # 44ec5a <strcmp@plt+0x4b4c2>
  40466b:	xor    eax,eax
  40466d:	call   4035a0 <fprintf@plt>
  404672:	jmp    404708 <strcmp@plt+0xf70>
  404677:	movsx  r8d,bl
  40467b:	lea    rsi,[rip+0x3dce1]        # 442363 <strcmp@plt+0x3ebcb>
  404682:	lea    r9,[rip+0x4a5d1]        # 44ec5a <strcmp@plt+0x4b4c2>
  404689:	xor    eax,eax
  40468b:	call   4035a0 <fprintf@plt>
  404690:	jmp    404708 <strcmp@plt+0xf70>
  404692:	test   r12d,r12d
  404695:	jne    404720 <strcmp@plt+0xf88>
  40469b:	mov    rax,QWORD PTR [rip+0x5f906]        # 463fa8 <strcmp@plt+0x60810>
  4046a2:	mov    rdi,QWORD PTR [rax]
  4046a5:	lea    rcx,[rip+0x3fc54]        # 444300 <strcmp@plt+0x40b68>
  4046ac:	mov    rdx,QWORD PTR [rip+0x63a55]        # 468108 <strcmp@plt+0x64970>
  4046b3:	mov    al,BYTE PTR [rsp+0x80]
  4046ba:	cmp    al,0x2d
  4046bc:	jne    4046df <strcmp@plt+0xf47>
  4046be:	sub    rsp,0x8
  4046c2:	lea    rbp,[rip+0x4a591]        # 44ec5a <strcmp@plt+0x4b4c2>
  4046c9:	lea    rsi,[rip+0x3dd2d]        # 4423fd <strcmp@plt+0x3ec65>
  4046d0:	mov    r8,r13
  4046d3:	mov    r9,QWORD PTR [rsp+0x80]
  4046db:	xor    eax,eax
  4046dd:	jmp    4046fe <strcmp@plt+0xf66>
  4046df:	movsx  ebp,al
  4046e2:	lea    rbx,[rip+0x4a571]        # 44ec5a <strcmp@plt+0x4b4c2>
  4046e9:	lea    rsi,[rip+0x3dccf]        # 4423bf <strcmp@plt+0x3ec27>
  4046f0:	mov    r8,r13
  4046f3:	mov    r9,QWORD PTR [rsp+0x78]
  4046f8:	mov    eax,0x0
  4046fd:	push   rbx
  4046fe:	push   rbp
  4046ff:	call   4035a0 <fprintf@plt>
  404704:	add    rsp,0x10
  404708:	mov    r15d,0x1
  40470e:	mov    eax,r15d
  404711:	add    rsp,0x28
  404715:	pop    rbx
  404716:	pop    r12
  404718:	pop    r13
  40471a:	pop    r14
  40471c:	pop    r15
  40471e:	pop    rbp
  40471f:	ret    
  404720:	mov    rax,QWORD PTR [rip+0x5f881]        # 463fa8 <strcmp@plt+0x60810>
  404727:	mov    rdi,QWORD PTR [rax]
  40472a:	lea    rcx,[rip+0x3dcc2]        # 4423f3 <strcmp@plt+0x3ec5b>
  404731:	jmp    4046ac <strcmp@plt+0xf14>
  404736:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404740:	push   rbx
  404741:	mov    edi,0x20
  404746:	call   431d60 <strcmp@plt+0x2e5c8>
  40474b:	test   rax,rax
  40474e:	je     40477c <strcmp@plt+0xfe4>
  404750:	mov    rbx,rax
  404753:	mov    QWORD PTR [rax],0x0
  40475a:	lea    rdi,[rip+0x3f]        # 4047a0 <strcmp@plt+0x1008>
  404761:	call   42b9b0 <strcmp@plt+0x28218>
  404766:	mov    QWORD PTR [rbx+0x10],rax
  40476a:	lea    rdi,[rip+0x4f]        # 4047c0 <strcmp@plt+0x1028>
  404771:	call   42b9b0 <strcmp@plt+0x28218>
  404776:	mov    QWORD PTR [rbx+0x18],rax
  40477a:	jmp    404791 <strcmp@plt+0xff9>
  40477c:	lea    rsi,[rip+0x3dcbd]        # 442440 <strcmp@plt+0x3eca8>
  404783:	xor    ebx,ebx
  404785:	mov    edi,0x3
  40478a:	xor    eax,eax
  40478c:	call   42e520 <strcmp@plt+0x2ad88>
  404791:	mov    rax,rbx
  404794:	pop    rbx
  404795:	ret    
  404796:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4047a0:	test   rdi,rdi
  4047a3:	je     4047ba <strcmp@plt+0x1022>
  4047a5:	push   rbx
  4047a6:	mov    rbx,rdi
  4047a9:	mov    rdi,QWORD PTR [rdi]
  4047ac:	call   403790 <free@plt>
  4047b1:	mov    rdi,rbx
  4047b4:	pop    rbx
  4047b5:	jmp    403790 <free@plt>
  4047ba:	ret    
  4047bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4047c0:	test   rdi,rdi
  4047c3:	je     4047da <strcmp@plt+0x1042>
  4047c5:	push   rbx
  4047c6:	mov    rbx,rdi
  4047c9:	mov    rdi,QWORD PTR [rdi]
  4047cc:	call   403790 <free@plt>
  4047d1:	mov    rdi,rbx
  4047d4:	pop    rbx
  4047d5:	jmp    403790 <free@plt>
  4047da:	ret    
  4047db:	nop    DWORD PTR [rax+rax*1+0x0]
  4047e0:	test   rdi,rdi
  4047e3:	je     40480c <strcmp@plt+0x1074>
  4047e5:	push   rbx
  4047e6:	mov    rbx,rdi
  4047e9:	mov    rdi,QWORD PTR [rdi+0x10]
  4047ed:	call   42bff0 <strcmp@plt+0x28858>
  4047f2:	mov    rdi,QWORD PTR [rbx+0x18]
  4047f6:	call   42bff0 <strcmp@plt+0x28858>
  4047fb:	mov    rdi,QWORD PTR [rbx]
  4047fe:	call   403790 <free@plt>
  404803:	mov    rdi,rbx
  404806:	pop    rbx
  404807:	jmp    403790 <free@plt>
  40480c:	ret    
  40480d:	nop    DWORD PTR [rax]
  404810:	push   rbp
  404811:	push   r15
  404813:	push   r14
  404815:	push   r13
  404817:	push   r12
  404819:	push   rbx
  40481a:	sub    rsp,0x7e8
  404821:	mov    r12,rdi
  404824:	cmp    esi,0x5
  404827:	jl     40483d <strcmp@plt+0x10a5>
  404829:	lea    rax,[rip+0x60590]        # 464dc0 <strcmp@plt+0x61628>
  404830:	mov    eax,DWORD PTR [rax]
  404832:	add    eax,0x4
  404835:	cmp    eax,esi
  404837:	jl     4049bd <strcmp@plt+0x1225>
  40483d:	mov    DWORD PTR [rsp+0xc],esi
  404841:	mov    rcx,QWORD PTR [r12]
  404845:	mov    r8d,DWORD PTR [r12+0x8]
  40484a:	lea    rdx,[rip+0x3dc39]        # 44248a <strcmp@plt+0x3ecf2>
  404851:	lea    rdi,[rsp+0x10]
  404856:	mov    esi,0x7d0
  40485b:	xor    eax,eax
  40485d:	call   403630 <snprintf@plt>
  404862:	mov    rax,QWORD PTR [r12+0x10]
  404867:	mov    rbx,QWORD PTR [rax+0x8]
  40486b:	cmp    rbx,rax
  40486e:	je     404909 <strcmp@plt+0x1171>
  404874:	lea    rbp,[rip+0x63895]        # 468110 <strcmp@plt+0x64978>
  40487b:	nop    DWORD PTR [rax+rax*1+0x0]
  404880:	mov    r13,QWORD PTR [rbx+0x10]
  404884:	lea    rdi,[rsp+0x10]
  404889:	call   4031e0 <strlen@plt>
  40488e:	lea    r14,[rsp+rax*1]
  404892:	add    r14,0x10
  404896:	mov    r15d,0x7d0
  40489c:	sub    r15,rax
  40489f:	mov    BYTE PTR [rip+0x6386a],0x0        # 468110 <strcmp@plt+0x64978>
  4048a6:	mov    rcx,QWORD PTR [r13+0x0]
  4048aa:	mov    r8d,DWORD PTR [r13+0x8]
  4048ae:	mov    r9d,DWORD PTR [r13+0xc]
  4048b2:	cmp    BYTE PTR [r13+0x18],0x0
  4048b7:	lea    rax,[rip+0x3dc9c]        # 44255a <strcmp@plt+0x3edc2>
  4048be:	lea    rdx,[rip+0x3dc9a]        # 44255f <strcmp@plt+0x3edc7>
  4048c5:	cmove  rax,rdx
  4048c9:	mov    QWORD PTR [rsp],rax
  4048cd:	mov    esi,0x72
  4048d2:	mov    rdi,rbp
  4048d5:	lea    rdx,[rip+0x3dc45]        # 442521 <strcmp@plt+0x3ed89>
  4048dc:	xor    eax,eax
  4048de:	call   403630 <snprintf@plt>
  4048e3:	mov    rdi,r14
  4048e6:	mov    rsi,r15
  4048e9:	lea    rdx,[rip+0x3dbac]        # 44249c <strcmp@plt+0x3ed04>
  4048f0:	mov    rcx,rbp
  4048f3:	xor    eax,eax
  4048f5:	call   403630 <snprintf@plt>
  4048fa:	mov    rbx,QWORD PTR [rbx+0x8]
  4048fe:	cmp    rbx,QWORD PTR [r12+0x10]
  404903:	jne    404880 <strcmp@plt+0x10e8>
  404909:	mov    rax,QWORD PTR [r12+0x18]
  40490e:	mov    r14,QWORD PTR [rax+0x8]
  404912:	cmp    r14,rax
  404915:	je     404991 <strcmp@plt+0x11f9>
  404917:	lea    rbp,[rip+0x63872]        # 468190 <strcmp@plt+0x649f8>
  40491e:	xchg   ax,ax
  404920:	mov    r13,QWORD PTR [r14+0x10]
  404924:	lea    rdi,[rsp+0x10]
  404929:	call   4031e0 <strlen@plt>
  40492e:	lea    rbx,[rsp+rax*1]
  404932:	add    rbx,0x10
  404936:	mov    r15d,0x7d0
  40493c:	sub    r15,rax
  40493f:	mov    BYTE PTR [rip+0x6384a],0x0        # 468190 <strcmp@plt+0x649f8>
  404946:	mov    rcx,QWORD PTR [r13+0x0]
  40494a:	mov    r8d,DWORD PTR [r13+0x8]
  40494e:	mov    r9d,DWORD PTR [r13+0xc]
  404952:	mov    eax,DWORD PTR [r13+0x10]
  404956:	mov    DWORD PTR [rsp],eax
  404959:	mov    esi,0x64
  40495e:	mov    rdi,rbp
  404961:	lea    rdx,[rip+0x3dcec]        # 442654 <strcmp@plt+0x3eebc>
  404968:	xor    eax,eax
  40496a:	call   403630 <snprintf@plt>
  40496f:	mov    rdi,rbx
  404972:	mov    rsi,r15
  404975:	lea    rdx,[rip+0x3db20]        # 44249c <strcmp@plt+0x3ed04>
  40497c:	mov    rcx,rbp
  40497f:	xor    eax,eax
  404981:	call   403630 <snprintf@plt>
  404986:	mov    r14,QWORD PTR [r14+0x8]
  40498a:	cmp    r14,QWORD PTR [r12+0x18]
  40498f:	jne    404920 <strcmp@plt+0x1188>
  404991:	mov    edi,DWORD PTR [rsp+0xc]
  404995:	cmp    edi,0x5
  404998:	jl     4049aa <strcmp@plt+0x1212>
  40499a:	lea    rax,[rip+0x6041f]        # 464dc0 <strcmp@plt+0x61628>
  4049a1:	mov    eax,DWORD PTR [rax]
  4049a3:	add    eax,0x4
  4049a6:	cmp    eax,edi
  4049a8:	jl     4049bd <strcmp@plt+0x1225>
  4049aa:	lea    rsi,[rip+0x47ac3]        # 44c474 <strcmp@plt+0x48cdc>
  4049b1:	lea    rdx,[rsp+0x10]
  4049b6:	xor    eax,eax
  4049b8:	call   42e520 <strcmp@plt+0x2ad88>
  4049bd:	add    rsp,0x7e8
  4049c4:	pop    rbx
  4049c5:	pop    r12
  4049c7:	pop    r13
  4049c9:	pop    r14
  4049cb:	pop    r15
  4049cd:	pop    rbp
  4049ce:	ret    
  4049cf:	nop
  4049d0:	push   rbx
  4049d1:	sub    rsp,0x10
  4049d5:	mov    BYTE PTR [rip+0x63734],0x0        # 468110 <strcmp@plt+0x64978>
  4049dc:	lea    rbx,[rip+0x6372d]        # 468110 <strcmp@plt+0x64978>
  4049e3:	mov    rcx,QWORD PTR [rdi]
  4049e6:	mov    r8d,DWORD PTR [rdi+0x8]
  4049ea:	mov    r9d,DWORD PTR [rdi+0xc]
  4049ee:	cmp    BYTE PTR [rdi+0x18],0x0
  4049f2:	lea    rax,[rip+0x3db66]        # 44255f <strcmp@plt+0x3edc7>
  4049f9:	lea    rdx,[rip+0x3db5a]        # 44255a <strcmp@plt+0x3edc2>
  404a00:	cmove  rdx,rax
  404a04:	mov    QWORD PTR [rsp],rdx
  404a08:	lea    rdx,[rip+0x3db12]        # 442521 <strcmp@plt+0x3ed89>
  404a0f:	mov    esi,0x72
  404a14:	mov    rdi,rbx
  404a17:	xor    eax,eax
  404a19:	call   403630 <snprintf@plt>
  404a1e:	mov    rax,rbx
  404a21:	add    rsp,0x10
  404a25:	pop    rbx
  404a26:	ret    
  404a27:	nop    WORD PTR [rax+rax*1+0x0]
  404a30:	push   rbx
  404a31:	sub    rsp,0x10
  404a35:	mov    BYTE PTR [rip+0x63754],0x0        # 468190 <strcmp@plt+0x649f8>
  404a3c:	lea    rbx,[rip+0x6374d]        # 468190 <strcmp@plt+0x649f8>
  404a43:	mov    rcx,QWORD PTR [rdi]
  404a46:	mov    r8d,DWORD PTR [rdi+0x8]
  404a4a:	mov    r9d,DWORD PTR [rdi+0xc]
  404a4e:	mov    eax,DWORD PTR [rdi+0x10]
  404a51:	mov    DWORD PTR [rsp],eax
  404a54:	lea    rdx,[rip+0x3dbf9]        # 442654 <strcmp@plt+0x3eebc>
  404a5b:	mov    esi,0x64
  404a60:	mov    rdi,rbx
  404a63:	xor    eax,eax
  404a65:	call   403630 <snprintf@plt>
  404a6a:	mov    rax,rbx
  404a6d:	add    rsp,0x10
  404a71:	pop    rbx
  404a72:	ret    
  404a73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404a7d:	nop    DWORD PTR [rax]
  404a80:	push   rbp
  404a81:	push   rbx
  404a82:	push   rax
  404a83:	mov    rbx,rsi
  404a86:	mov    ebp,edi
  404a88:	mov    edi,0x10
  404a8d:	call   431d60 <strcmp@plt+0x2e5c8>
  404a92:	test   rax,rax
  404a95:	je     404a9f <strcmp@plt+0x1307>
  404a97:	mov    DWORD PTR [rax],ebp
  404a99:	mov    QWORD PTR [rax+0x8],rbx
  404a9d:	jmp    404aa1 <strcmp@plt+0x1309>
  404a9f:	xor    eax,eax
  404aa1:	add    rsp,0x8
  404aa5:	pop    rbx
  404aa6:	pop    rbp
  404aa7:	ret    
  404aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  404ab0:	test   rdi,rdi
  404ab3:	je     404aef <strcmp@plt+0x1357>
  404ab5:	push   r14
  404ab7:	push   rbx
  404ab8:	push   rax
  404ab9:	mov    rbx,rdi
  404abc:	mov    eax,DWORD PTR [rdi]
  404abe:	cmp    eax,0x1
  404ac1:	je     404ac7 <strcmp@plt+0x132f>
  404ac3:	test   eax,eax
  404ac5:	jne    404ae0 <strcmp@plt+0x1348>
  404ac7:	mov    r14,QWORD PTR [rbx+0x8]
  404acb:	test   r14,r14
  404ace:	je     404ae0 <strcmp@plt+0x1348>
  404ad0:	mov    rdi,QWORD PTR [r14]
  404ad3:	call   403790 <free@plt>
  404ad8:	mov    rdi,r14
  404adb:	call   403790 <free@plt>
  404ae0:	mov    rdi,rbx
  404ae3:	add    rsp,0x8
  404ae7:	pop    rbx
  404ae8:	pop    r14
  404aea:	jmp    403790 <free@plt>
  404aef:	ret    
  404af0:	push   rbp
  404af1:	push   r15
  404af3:	push   r14
  404af5:	push   r13
  404af7:	push   r12
  404af9:	push   rbx
  404afa:	push   rax
  404afb:	mov    DWORD PTR [rsp+0x4],r9d
  404b00:	mov    r15d,r8d
  404b03:	mov    r12d,ecx
  404b06:	mov    r13d,edx
  404b09:	mov    ebx,esi
  404b0b:	mov    r14,rdi
  404b0e:	test   rdi,rdi
  404b11:	jne    404b26 <strcmp@plt+0x138e>
  404b13:	lea    rsi,[rip+0x3d988]        # 4424a2 <strcmp@plt+0x3ed0a>
  404b1a:	mov    edi,0x2
  404b1f:	xor    eax,eax
  404b21:	call   42e520 <strcmp@plt+0x2ad88>
  404b26:	mov    edi,0x20
  404b2b:	call   431d60 <strcmp@plt+0x2e5c8>
  404b30:	test   rax,rax
  404b33:	je     404b7c <strcmp@plt+0x13e4>
  404b35:	mov    rbp,rax
  404b38:	mov    rdi,r14
  404b3b:	call   403710 <strdup@plt>
  404b40:	mov    QWORD PTR [rbp+0x0],rax
  404b44:	movzx  eax,r13b
  404b48:	movzx  ecx,bl
  404b4b:	vmovd  xmm0,ecx
  404b4f:	vpinsrb xmm0,xmm0,eax,0x1
  404b55:	movzx  eax,r12b
  404b59:	vpinsrb xmm0,xmm0,eax,0x2
  404b5f:	movzx  eax,r15b
  404b63:	vpinsrb xmm0,xmm0,eax,0x3
  404b69:	vpmovzxbd xmm0,xmm0
  404b6e:	vmovdqu XMMWORD PTR [rbp+0x8],xmm0
  404b73:	mov    eax,DWORD PTR [rsp+0x4]
  404b77:	mov    BYTE PTR [rbp+0x18],al
  404b7a:	jmp    404b91 <strcmp@plt+0x13f9>
  404b7c:	lea    rsi,[rip+0x3d957]        # 4424da <strcmp@plt+0x3ed42>
  404b83:	xor    ebp,ebp
  404b85:	mov    edi,0x3
  404b8a:	xor    eax,eax
  404b8c:	call   42e520 <strcmp@plt+0x2ad88>
  404b91:	mov    rax,rbp
  404b94:	add    rsp,0x8
  404b98:	pop    rbx
  404b99:	pop    r12
  404b9b:	pop    r13
  404b9d:	pop    r14
  404b9f:	pop    r15
  404ba1:	pop    rbp
  404ba2:	ret    
  404ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404bad:	nop    DWORD PTR [rax]
  404bb0:	push   rbp
  404bb1:	push   r14
  404bb3:	push   rbx
  404bb4:	sub    rsp,0x10
  404bb8:	mov    r14,QWORD PTR [rdi]
  404bbb:	vmovups xmm0,XMMWORD PTR [rdi+0x8]
  404bc0:	vmovaps XMMWORD PTR [rsp],xmm0
  404bc5:	mov    bpl,BYTE PTR [rdi+0x18]
  404bc9:	test   r14,r14
  404bcc:	jne    404be1 <strcmp@plt+0x1449>
  404bce:	lea    rsi,[rip+0x3d8cd]        # 4424a2 <strcmp@plt+0x3ed0a>
  404bd5:	mov    edi,0x2
  404bda:	xor    eax,eax
  404bdc:	call   42e520 <strcmp@plt+0x2ad88>
  404be1:	mov    edi,0x20
  404be6:	call   431d60 <strcmp@plt+0x2e5c8>
  404beb:	test   rax,rax
  404bee:	je     404c16 <strcmp@plt+0x147e>
  404bf0:	mov    rbx,rax
  404bf3:	mov    rdi,r14
  404bf6:	call   403710 <strdup@plt>
  404bfb:	mov    QWORD PTR [rbx],rax
  404bfe:	vmovaps xmm0,XMMWORD PTR [rsp]
  404c03:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x3d825]        # 442430 <strcmp@plt+0x3ec98>
  404c0b:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  404c10:	mov    BYTE PTR [rbx+0x18],bpl
  404c14:	jmp    404c2b <strcmp@plt+0x1493>
  404c16:	lea    rsi,[rip+0x3d8bd]        # 4424da <strcmp@plt+0x3ed42>
  404c1d:	xor    ebx,ebx
  404c1f:	mov    edi,0x3
  404c24:	xor    eax,eax
  404c26:	call   42e520 <strcmp@plt+0x2ad88>
  404c2b:	mov    rax,rbx
  404c2e:	add    rsp,0x10
  404c32:	pop    rbx
  404c33:	pop    r14
  404c35:	pop    rbp
  404c36:	ret    
  404c37:	nop    WORD PTR [rax+rax*1+0x0]
  404c40:	push   rbp
  404c41:	push   r15
  404c43:	push   r14
  404c45:	push   r13
  404c47:	push   r12
  404c49:	push   rbx
  404c4a:	push   rax
  404c4b:	test   rdi,rdi
  404c4e:	je     404c75 <strcmp@plt+0x14dd>
  404c50:	mov    r14d,r9d
  404c53:	mov    r15d,r8d
  404c56:	mov    r12d,ecx
  404c59:	mov    r13d,edx
  404c5c:	mov    edx,esi
  404c5e:	mov    rbp,rdi
  404c61:	cmp    esi,0x4
  404c64:	je     404c88 <strcmp@plt+0x14f0>
  404c66:	cmp    edx,0x6
  404c69:	jne    404ce6 <strcmp@plt+0x154e>
  404c6b:	mov    DWORD PTR [rsp+0x4],0xa
  404c73:	jmp    404c90 <strcmp@plt+0x14f8>
  404c75:	lea    rsi,[rip+0x3d8e9]        # 442565 <strcmp@plt+0x3edcd>
  404c7c:	xor    ebx,ebx
  404c7e:	mov    edi,0x2
  404c83:	jmp    404d0b <strcmp@plt+0x1573>
  404c88:	mov    DWORD PTR [rsp+0x4],0x2
  404c90:	mov    edi,0x20
  404c95:	call   431d60 <strcmp@plt+0x2e5c8>
  404c9a:	test   rax,rax
  404c9d:	je     404cfd <strcmp@plt+0x1565>
  404c9f:	mov    rbx,rax
  404ca2:	mov    rdi,rbp
  404ca5:	call   403710 <strdup@plt>
  404caa:	mov    QWORD PTR [rbx],rax
  404cad:	mov    eax,DWORD PTR [rsp+0x4]
  404cb1:	mov    DWORD PTR [rbx+0x8],eax
  404cb4:	movzx  eax,r12b
  404cb8:	movzx  ecx,r13b
  404cbc:	vmovd  xmm0,ecx
  404cc0:	vpinsrb xmm0,xmm0,eax,0x1
  404cc6:	movzx  eax,r15b
  404cca:	vpinsrb xmm0,xmm0,eax,0x2
  404cd0:	movzx  eax,r14b
  404cd4:	vpinsrb xmm0,xmm0,eax,0x3
  404cda:	vpmovzxbd xmm0,xmm0
  404cdf:	vmovdqu XMMWORD PTR [rbx+0xc],xmm0
  404ce4:	jmp    404d12 <strcmp@plt+0x157a>
  404ce6:	lea    rsi,[rip+0x3d8bc]        # 4425a9 <strcmp@plt+0x3ee11>
  404ced:	xor    ebx,ebx
  404cef:	mov    edi,0x2
  404cf4:	xor    eax,eax
  404cf6:	call   42e520 <strcmp@plt+0x2ad88>
  404cfb:	jmp    404d12 <strcmp@plt+0x157a>
  404cfd:	lea    rsi,[rip+0x3d8fd]        # 442601 <strcmp@plt+0x3ee69>
  404d04:	xor    ebx,ebx
  404d06:	mov    edi,0x3
  404d0b:	xor    eax,eax
  404d0d:	call   42e520 <strcmp@plt+0x2ad88>
  404d12:	mov    rax,rbx
  404d15:	add    rsp,0x8
  404d19:	pop    rbx
  404d1a:	pop    r12
  404d1c:	pop    r13
  404d1e:	pop    r14
  404d20:	pop    r15
  404d22:	pop    rbp
  404d23:	ret    
  404d24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404d2e:	xchg   ax,ax
  404d30:	push   rbp
  404d31:	push   r14
  404d33:	push   rbx
  404d34:	sub    rsp,0x10
  404d38:	mov    r14,QWORD PTR [rdi]
  404d3b:	test   r14,r14
  404d3e:	je     404d90 <strcmp@plt+0x15f8>
  404d40:	vmovups xmm0,XMMWORD PTR [rdi+0xc]
  404d45:	vmovaps XMMWORD PTR [rsp],xmm0
  404d4a:	mov    ebp,DWORD PTR [rdi+0x8]
  404d4d:	mov    edi,0x20
  404d52:	call   431d60 <strcmp@plt+0x2e5c8>
  404d57:	test   rax,rax
  404d5a:	je     404da0 <strcmp@plt+0x1608>
  404d5c:	mov    rbx,rax
  404d5f:	xor    eax,eax
  404d61:	cmp    ebp,0x2
  404d64:	setne  al
  404d67:	lea    ebp,[rax*8+0x2]
  404d6e:	mov    rdi,r14
  404d71:	call   403710 <strdup@plt>
  404d76:	mov    QWORD PTR [rbx],rax
  404d79:	mov    DWORD PTR [rbx+0x8],ebp
  404d7c:	vmovaps xmm0,XMMWORD PTR [rsp]
  404d81:	vandps xmm0,xmm0,XMMWORD PTR [rip+0x3d6a7]        # 442430 <strcmp@plt+0x3ec98>
  404d89:	vmovups XMMWORD PTR [rbx+0xc],xmm0
  404d8e:	jmp    404db5 <strcmp@plt+0x161d>
  404d90:	lea    rsi,[rip+0x3d7ce]        # 442565 <strcmp@plt+0x3edcd>
  404d97:	xor    ebx,ebx
  404d99:	mov    edi,0x2
  404d9e:	jmp    404dae <strcmp@plt+0x1616>
  404da0:	lea    rsi,[rip+0x3d85a]        # 442601 <strcmp@plt+0x3ee69>
  404da7:	xor    ebx,ebx
  404da9:	mov    edi,0x3
  404dae:	xor    eax,eax
  404db0:	call   42e520 <strcmp@plt+0x2ad88>
  404db5:	mov    rax,rbx
  404db8:	add    rsp,0x10
  404dbc:	pop    rbx
  404dbd:	pop    r14
  404dbf:	pop    rbp
  404dc0:	ret    
  404dc1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dcb:	nop    DWORD PTR [rax+rax*1+0x0]
  404dd0:	push   rbp
  404dd1:	push   r15
  404dd3:	push   r14
  404dd5:	push   rbx
  404dd6:	push   rax
  404dd7:	mov    r14d,edx
  404dda:	mov    r15,rsi
  404ddd:	mov    rbp,rdi
  404de0:	mov    edi,0x18
  404de5:	call   431d60 <strcmp@plt+0x2e5c8>
  404dea:	test   rax,rax
  404ded:	je     404e07 <strcmp@plt+0x166f>
  404def:	mov    rbx,rax
  404df2:	mov    QWORD PTR [rax],rbp
  404df5:	mov    rdi,r15
  404df8:	call   403710 <strdup@plt>
  404dfd:	mov    QWORD PTR [rbx+0x8],rax
  404e01:	mov    DWORD PTR [rbx+0x10],r14d
  404e05:	jmp    404e09 <strcmp@plt+0x1671>
  404e07:	xor    ebx,ebx
  404e09:	mov    rax,rbx
  404e0c:	add    rsp,0x8
  404e10:	pop    rbx
  404e11:	pop    r14
  404e13:	pop    r15
  404e15:	pop    rbp
  404e16:	ret    
  404e17:	nop    WORD PTR [rax+rax*1+0x0]
  404e20:	push   rbx
  404e21:	mov    rbx,rdi
  404e24:	mov    rdi,QWORD PTR [rdi+0x8]
  404e28:	call   403790 <free@plt>
  404e2d:	mov    rdi,rbx
  404e30:	pop    rbx
  404e31:	jmp    403790 <free@plt>
  404e36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e40:	mov    rcx,QWORD PTR [rdi+0x8]
  404e44:	xor    eax,eax
  404e46:	cmp    rcx,rdi
  404e49:	je     404e62 <strcmp@plt+0x16ca>
  404e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404e50:	mov    rdx,QWORD PTR [rcx+0x10]
  404e54:	cmp    QWORD PTR [rdx],rsi
  404e57:	je     404e63 <strcmp@plt+0x16cb>
  404e59:	mov    rcx,QWORD PTR [rcx+0x8]
  404e5d:	cmp    rcx,rdi
  404e60:	jne    404e50 <strcmp@plt+0x16b8>
  404e62:	ret    
  404e63:	mov    rax,rdx
  404e66:	ret    
  404e67:	nop    WORD PTR [rax+rax*1+0x0]
  404e70:	push   r15
  404e72:	push   r14
  404e74:	push   rbx
  404e75:	mov    r14,rdx
  404e78:	mov    r15,rsi
  404e7b:	mov    rbx,rdi
  404e7e:	mov    edx,DWORD PTR [rdi]
  404e80:	test   edx,edx
  404e82:	js     404eb0 <strcmp@plt+0x1718>
  404e84:	lea    rax,[rip+0x5ff35]        # 464dc0 <strcmp@plt+0x61628>
  404e8b:	mov    eax,DWORD PTR [rax]
  404e8d:	je     404ec7 <strcmp@plt+0x172f>
  404e8f:	test   eax,eax
  404e91:	jle    404ede <strcmp@plt+0x1746>
  404e93:	lea    rsi,[rip+0x3d7f3]        # 44268d <strcmp@plt+0x3eef5>
  404e9a:	mov    edi,0x5
  404e9f:	xor    eax,eax
  404ea1:	call   42e520 <strcmp@plt+0x2ad88>
  404ea6:	cmp    DWORD PTR [rbx],0x0
  404ea9:	jne    404ee7 <strcmp@plt+0x174f>
  404eab:	jmp    404f6a <strcmp@plt+0x17d2>
  404eb0:	mov    DWORD PTR [rbx],0x0
  404eb6:	lea    rax,[rip+0x5ff03]        # 464dc0 <strcmp@plt+0x61628>
  404ebd:	cmp    DWORD PTR [rax],0x0
  404ec0:	jg     404ecb <strcmp@plt+0x1733>
  404ec2:	jmp    404f6a <strcmp@plt+0x17d2>
  404ec7:	test   eax,eax
  404ec9:	jle    404ede <strcmp@plt+0x1746>
  404ecb:	lea    rsi,[rip+0x3d7d5]        # 4426a7 <strcmp@plt+0x3ef0f>
  404ed2:	mov    edi,0x5
  404ed7:	xor    eax,eax
  404ed9:	call   42e520 <strcmp@plt+0x2ad88>
  404ede:	cmp    DWORD PTR [rbx],0x0
  404ee1:	je     404f6a <strcmp@plt+0x17d2>
  404ee7:	mov    eax,DWORD PTR [r15]
  404eea:	cmp    eax,0x6
  404eed:	jl     404f15 <strcmp@plt+0x177d>
  404eef:	mov    DWORD PTR [r15],0x5
  404ef6:	lea    rsi,[rip+0x3d7c0]        # 4426bd <strcmp@plt+0x3ef25>
  404efd:	mov    edi,0x3
  404f02:	mov    edx,0x5
  404f07:	mov    ecx,0x5
  404f0c:	xor    eax,eax
  404f0e:	call   42e520 <strcmp@plt+0x2ad88>
  404f13:	jmp    404f3e <strcmp@plt+0x17a6>
  404f15:	test   eax,eax
  404f17:	js     404f1f <strcmp@plt+0x1787>
  404f19:	test   eax,eax
  404f1b:	jg     404f45 <strcmp@plt+0x17ad>
  404f1d:	jmp    404f6a <strcmp@plt+0x17d2>
  404f1f:	mov    DWORD PTR [r15],0x0
  404f26:	lea    rsi,[rip+0x3d7d2]        # 4426ff <strcmp@plt+0x3ef67>
  404f2d:	mov    edi,0x3
  404f32:	mov    edx,0x5
  404f37:	xor    eax,eax
  404f39:	call   42e520 <strcmp@plt+0x2ad88>
  404f3e:	mov    eax,DWORD PTR [r15]
  404f41:	test   eax,eax
  404f43:	jle    404f6a <strcmp@plt+0x17d2>
  404f45:	mov    eax,DWORD PTR [r14]
  404f48:	test   eax,eax
  404f4a:	jle    404f70 <strcmp@plt+0x17d8>
  404f4c:	mov    ecx,DWORD PTR [rbx]
  404f4e:	cmp    eax,ecx
  404f50:	jle    404f6a <strcmp@plt+0x17d2>
  404f52:	mov    DWORD PTR [r14],ecx
  404f55:	mov    ecx,DWORD PTR [rbx]
  404f57:	lea    rsi,[rip+0x3d7e2]        # 442740 <strcmp@plt+0x3efa8>
  404f5e:	mov    edi,0x3
  404f63:	mov    edx,0x1
  404f68:	jmp    404f8d <strcmp@plt+0x17f5>
  404f6a:	pop    rbx
  404f6b:	pop    r14
  404f6d:	pop    r15
  404f6f:	ret    
  404f70:	mov    DWORD PTR [r14],0x1
  404f77:	lea    rsi,[rip+0x3d7c2]        # 442740 <strcmp@plt+0x3efa8>
  404f7e:	mov    edi,0x3
  404f83:	mov    edx,0x1
  404f88:	mov    ecx,0x1
  404f8d:	xor    eax,eax
  404f8f:	pop    rbx
  404f90:	pop    r14
  404f92:	pop    r15
  404f94:	jmp    42e520 <strcmp@plt+0x2ad88>
  404f99:	nop    DWORD PTR [rax+0x0]
  404fa0:	push   rbx
  404fa1:	mov    edx,edi
  404fa3:	lea    eax,[rdx+0x1]
  404fa6:	cmp    eax,0x101
  404fab:	jb     404fc5 <strcmp@plt+0x182d>
  404fad:	lea    rsi,[rip+0x3d7eb]        # 44279f <strcmp@plt+0x3f007>
  404fb4:	xor    ebx,ebx
  404fb6:	mov    edi,0x2
  404fbb:	xor    ecx,ecx
  404fbd:	mov    r8d,0xfe
  404fc3:	jmp    404fe8 <strcmp@plt+0x1850>
  404fc5:	mov    ebx,0x1
  404fca:	cmp    esi,0x100
  404fd0:	jb     404fef <strcmp@plt+0x1857>
  404fd2:	lea    rsi,[rip+0x3d7fc]        # 4427d5 <strcmp@plt+0x3f03d>
  404fd9:	xor    ebx,ebx
  404fdb:	mov    edi,0x2
  404fe0:	xor    ecx,ecx
  404fe2:	mov    r8d,0xff
  404fe8:	xor    eax,eax
  404fea:	call   42e520 <strcmp@plt+0x2ad88>
  404fef:	mov    eax,ebx
  404ff1:	pop    rbx
  404ff2:	ret    
  404ff3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404ffd:	nop    DWORD PTR [rax]
  405000:	push   rbp
  405001:	push   r15
  405003:	push   r14
  405005:	push   r13
  405007:	push   r12
  405009:	push   rbx
  40500a:	push   rax
  40500b:	mov    r15,rsi
  40500e:	mov    rbp,rdi
  405011:	call   4050f0 <strcmp@plt+0x1958>
  405016:	test   rax,rax
  405019:	je     4050c4 <strcmp@plt+0x192c>
  40501f:	mov    rbx,rax
  405022:	mov    QWORD PTR [rsp],rbp
  405026:	mov    r13,QWORD PTR [rax+0x8]
  40502a:	cmp    r13,rax
  40502d:	je     4050b5 <strcmp@plt+0x191d>
  405033:	lea    r12,[rip+0x6b4d6]        # 470510 <strcmp@plt+0x6cd78>
  40503a:	jmp    405060 <strcmp@plt+0x18c8>
  40503c:	nop    DWORD PTR [rax+0x0]
  405040:	mov    edi,0x3
  405045:	lea    rsi,[rip+0x3d7f4]        # 442840 <strcmp@plt+0x3f0a8>
  40504c:	mov    rdx,QWORD PTR [rsp]
  405050:	xor    eax,eax
  405052:	call   42e520 <strcmp@plt+0x2ad88>
  405057:	mov    r13,QWORD PTR [r13+0x8]
  40505b:	cmp    r13,rbx
  40505e:	je     4050b5 <strcmp@plt+0x191d>
  405060:	mov    rbp,QWORD PTR [r13+0x10]
  405064:	mov    r14d,DWORD PTR [r12]
  405068:	test   r14d,r14d
  40506b:	je     40507d <strcmp@plt+0x18e5>
  40506d:	mov    rdi,rbp
  405070:	call   422ef0 <strcmp@plt+0x1f758>
  405075:	movzx  eax,ax
  405078:	cmp    r14d,eax
  40507b:	jne    405040 <strcmp@plt+0x18a8>
  40507d:	mov    rdi,rbp
  405080:	call   423440 <strcmp@plt+0x1fca8>
  405085:	mov    rdi,rax
  405088:	mov    rsi,r15
  40508b:	call   42bbd0 <strcmp@plt+0x28438>
  405090:	lea    rax,[rip+0x5fd29]        # 464dc0 <strcmp@plt+0x61628>
  405097:	cmp    DWORD PTR [rax],0x3
  40509a:	jl     405057 <strcmp@plt+0x18bf>
  40509c:	mov    rdi,rbp
  40509f:	call   422e20 <strcmp@plt+0x1f688>
  4050a4:	mov    edi,0x7
  4050a9:	lea    rsi,[rip+0x3d7e1]        # 442891 <strcmp@plt+0x3f0f9>
  4050b0:	mov    rdx,rax
  4050b3:	jmp    405050 <strcmp@plt+0x18b8>
  4050b5:	mov    rdi,rbx
  4050b8:	call   42bff0 <strcmp@plt+0x28858>
  4050bd:	mov    ebx,0x1
  4050c2:	jmp    4050dc <strcmp@plt+0x1944>
  4050c4:	lea    rsi,[rip+0x3d73e]        # 442809 <strcmp@plt+0x3f071>
  4050cb:	xor    ebx,ebx
  4050cd:	mov    edi,0x2
  4050d2:	mov    rdx,rbp
  4050d5:	xor    eax,eax
  4050d7:	call   42e520 <strcmp@plt+0x2ad88>
  4050dc:	mov    eax,ebx
  4050de:	add    rsp,0x8
  4050e2:	pop    rbx
  4050e3:	pop    r12
  4050e5:	pop    r13
  4050e7:	pop    r14
  4050e9:	pop    r15
  4050eb:	pop    rbp
  4050ec:	ret    
  4050ed:	nop    DWORD PTR [rax]
  4050f0:	push   r15
  4050f2:	push   r14
  4050f4:	push   rbx
  4050f5:	mov    r14,rdi
  4050f8:	xor    eax,eax
  4050fa:	call   422c80 <strcmp@plt+0x1f4e8>
  4050ff:	mov    r15,rax
  405102:	mov    rdi,r14
  405105:	mov    rsi,rax
  405108:	call   423940 <strcmp@plt+0x201a8>
  40510d:	cmp    eax,0x1
  405110:	jne    405139 <strcmp@plt+0x19a1>
  405112:	lea    rdi,[rip+0x1db77]        # 422c90 <strcmp@plt+0x1f4f8>
  405119:	call   42b9b0 <strcmp@plt+0x28218>
  40511e:	test   rax,rax
  405121:	je     405162 <strcmp@plt+0x19ca>
  405123:	mov    rbx,rax
  405126:	mov    rdi,r15
  405129:	mov    rsi,rax
  40512c:	call   42baa0 <strcmp@plt+0x28308>
  405131:	cmp    DWORD PTR [rbx+0x18],0x0
  405135:	jne    40517a <strcmp@plt+0x19e2>
  405137:	jmp    405164 <strcmp@plt+0x19cc>
  405139:	mov    rdi,r15
  40513c:	call   422c90 <strcmp@plt+0x1f4f8>
  405141:	lea    rax,[rip+0x6b3c8]        # 470510 <strcmp@plt+0x6cd78>
  405148:	mov    esi,DWORD PTR [rax]
  40514a:	mov    rdi,r14
  40514d:	call   405d70 <strcmp@plt+0x25d8>
  405152:	mov    rbx,rax
  405155:	test   rax,rax
  405158:	je     405162 <strcmp@plt+0x19ca>
  40515a:	cmp    DWORD PTR [rbx+0x18],0x0
  40515e:	jne    40517a <strcmp@plt+0x19e2>
  405160:	jmp    405164 <strcmp@plt+0x19cc>
  405162:	xor    ebx,ebx
  405164:	lea    rsi,[rip+0x3dba0]        # 442d0b <strcmp@plt+0x3f573>
  40516b:	mov    edi,0x2
  405170:	mov    rdx,r14
  405173:	xor    eax,eax
  405175:	call   42e520 <strcmp@plt+0x2ad88>
  40517a:	mov    rax,rbx
  40517d:	pop    rbx
  40517e:	pop    r14
  405180:	pop    r15
  405182:	ret    
  405183:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40518d:	nop    DWORD PTR [rax]
  405190:	push   rbp
  405191:	push   r15
  405193:	push   r14
  405195:	push   r13
  405197:	push   r12
  405199:	push   rbx
  40519a:	sub    rsp,0x18
  40519e:	mov    r12d,r8d
  4051a1:	mov    QWORD PTR [rsp],rcx
  4051a5:	mov    r15d,edx
  4051a8:	mov    rbp,rsi
  4051ab:	mov    QWORD PTR [rsp+0x10],rdi
  4051b0:	test   rsi,rsi
  4051b3:	je     4051c1 <strcmp@plt+0x1a29>
  4051b5:	test   r15d,r15d
  4051b8:	je     4051c1 <strcmp@plt+0x1a29>
  4051ba:	cmp    QWORD PTR [rsp],0x0
  4051bf:	jne    4051db <strcmp@plt+0x1a43>
  4051c1:	lea    rsi,[rip+0x3d6f2]        # 4428ba <strcmp@plt+0x3f122>
  4051c8:	mov    edi,0x2
  4051cd:	xor    eax,eax
  4051cf:	call   42e520 <strcmp@plt+0x2ad88>
  4051d4:	xor    eax,eax
  4051d6:	call   43aeb0 <strcmp@plt+0x37718>
  4051db:	cmp    r15d,0x1
  4051df:	je     4051fb <strcmp@plt+0x1a63>
  4051e1:	lea    rsi,[rip+0x3d71f]        # 442907 <strcmp@plt+0x3f16f>
  4051e8:	mov    edi,0x2
  4051ed:	xor    eax,eax
  4051ef:	call   42e520 <strcmp@plt+0x2ad88>
  4051f4:	xor    eax,eax
  4051f6:	call   43aeb0 <strcmp@plt+0x37718>
  4051fb:	mov    rdi,rbp
  4051fe:	call   4050f0 <strcmp@plt+0x1958>
  405203:	test   rax,rax
  405206:	je     4052a8 <strcmp@plt+0x1b10>
  40520c:	mov    rbx,rax
  40520f:	mov    QWORD PTR [rsp+0x8],rbp
  405214:	mov    r14,QWORD PTR [rax+0x8]
  405218:	cmp    r14,rax
  40521b:	je     405299 <strcmp@plt+0x1b01>
  405221:	movzx  r13d,r15b
  405225:	movzx  ebp,r12b
  405229:	jmp    405251 <strcmp@plt+0x1ab9>
  40522b:	nop    DWORD PTR [rax+rax*1+0x0]
  405230:	mov    edi,0x3
  405235:	lea    rsi,[rip+0x3d738]        # 442974 <strcmp@plt+0x3f1dc>
  40523c:	mov    rdx,QWORD PTR [rsp+0x8]
  405241:	xor    eax,eax
  405243:	call   42e520 <strcmp@plt+0x2ad88>
  405248:	mov    r14,QWORD PTR [r14+0x8]
  40524c:	cmp    r14,rbx
  40524f:	je     405299 <strcmp@plt+0x1b01>
  405251:	mov    r15,QWORD PTR [r14+0x10]
  405255:	lea    rax,[rip+0x6b2b4]        # 470510 <strcmp@plt+0x6cd78>
  40525c:	mov    r12d,DWORD PTR [rax]
  40525f:	test   r12d,r12d
  405262:	je     405274 <strcmp@plt+0x1adc>
  405264:	mov    rdi,r15
  405267:	call   422ef0 <strcmp@plt+0x1f758>
  40526c:	movzx  eax,ax
  40526f:	cmp    r12d,eax
  405272:	jne    405230 <strcmp@plt+0x1a98>
  405274:	mov    rdi,r15
  405277:	mov    esi,r13d
  40527a:	mov    rdx,QWORD PTR [rsp]
  40527e:	mov    ecx,ebp
  405280:	call   40fd30 <strcmp@plt+0xc598>
  405285:	test   rax,rax
  405288:	je     405248 <strcmp@plt+0x1ab0>
  40528a:	mov    rdi,rax
  40528d:	mov    rsi,QWORD PTR [rsp+0x10]
  405292:	call   42baa0 <strcmp@plt+0x28308>
  405297:	jmp    405248 <strcmp@plt+0x1ab0>
  405299:	mov    rdi,rbx
  40529c:	call   42bff0 <strcmp@plt+0x28858>
  4052a1:	mov    ebx,0x1
  4052a6:	jmp    4052c0 <strcmp@plt+0x1b28>
  4052a8:	lea    rsi,[rip+0x3d697]        # 442946 <strcmp@plt+0x3f1ae>
  4052af:	xor    ebx,ebx
  4052b1:	mov    edi,0x2
  4052b6:	mov    rdx,rbp
  4052b9:	xor    eax,eax
  4052bb:	call   42e520 <strcmp@plt+0x2ad88>
  4052c0:	mov    eax,ebx
  4052c2:	add    rsp,0x18
  4052c6:	pop    rbx
  4052c7:	pop    r12
  4052c9:	pop    r13
  4052cb:	pop    r14
  4052cd:	pop    r15
  4052cf:	pop    rbp
  4052d0:	ret    
  4052d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052db:	nop    DWORD PTR [rax+rax*1+0x0]
  4052e0:	push   rbp
  4052e1:	push   r15
  4052e3:	push   r14
  4052e5:	push   r13
  4052e7:	push   r12
  4052e9:	push   rbx
  4052ea:	sub    rsp,0x18
  4052ee:	test   rsi,rsi
  4052f1:	je     405319 <strcmp@plt+0x1b81>
  4052f3:	mov    ebp,edx
  4052f5:	lea    eax,[rbp+0x1]
  4052f8:	cmp    eax,0x101
  4052fd:	jb     405330 <strcmp@plt+0x1b98>
  4052ff:	lea    rsi,[rip+0x3d499]        # 44279f <strcmp@plt+0x3f007>
  405306:	xor    ebx,ebx
  405308:	mov    edi,0x2
  40530d:	mov    edx,ebp
  40530f:	xor    ecx,ecx
  405311:	mov    r8d,0xfe
  405317:	jmp    405353 <strcmp@plt+0x1bbb>
  405319:	lea    rsi,[rip+0x3d6a9]        # 4429c9 <strcmp@plt+0x3f231>
  405320:	xor    ebx,ebx
  405322:	mov    edi,0x2
  405327:	xor    eax,eax
  405329:	call   42e520 <strcmp@plt+0x2ad88>
  40532e:	jmp    40535a <strcmp@plt+0x1bc2>
  405330:	mov    r12d,ecx
  405333:	cmp    ecx,0x100
  405339:	jb     40536b <strcmp@plt+0x1bd3>
  40533b:	lea    rsi,[rip+0x3d493]        # 4427d5 <strcmp@plt+0x3f03d>
  405342:	xor    ebx,ebx
  405344:	mov    edi,0x2
  405349:	mov    edx,ebp
  40534b:	xor    ecx,ecx
  40534d:	mov    r8d,0xff
  405353:	xor    eax,eax
  405355:	call   42e520 <strcmp@plt+0x2ad88>
  40535a:	mov    eax,ebx
  40535c:	add    rsp,0x18
  405360:	pop    rbx
  405361:	pop    r12
  405363:	pop    r13
  405365:	pop    r14
  405367:	pop    r15
  405369:	pop    rbp
  40536a:	ret    
  40536b:	mov    r15,rsi
  40536e:	mov    rbx,rdi
  405371:	mov    rdi,rsi
  405374:	call   4050f0 <strcmp@plt+0x1958>
  405379:	test   rax,rax
  40537c:	je     405453 <strcmp@plt+0x1cbb>
  405382:	mov    r13,rax
  405385:	mov    QWORD PTR [rsp+0x10],rbx
  40538a:	mov    r14,QWORD PTR [rax+0x8]
  40538e:	cmp    r14,rax
  405391:	je     405441 <strcmp@plt+0x1ca9>
  405397:	movzx  eax,bpl
  40539b:	mov    DWORD PTR [rsp+0xc],eax
  40539f:	movzx  ebp,r12b
  4053a3:	jmp    4053cf <strcmp@plt+0x1c37>
  4053a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053af:	nop
  4053b0:	mov    edi,0x3
  4053b5:	lea    rsi,[rip+0x3d680]        # 442a3c <strcmp@plt+0x3f2a4>
  4053bc:	mov    rdx,r15
  4053bf:	xor    eax,eax
  4053c1:	call   42e520 <strcmp@plt+0x2ad88>
  4053c6:	mov    r14,QWORD PTR [r14+0x8]
  4053ca:	cmp    r14,r13
  4053cd:	je     405441 <strcmp@plt+0x1ca9>
  4053cf:	mov    rbx,QWORD PTR [r14+0x10]
  4053d3:	lea    rax,[rip+0x6b136]        # 470510 <strcmp@plt+0x6cd78>
  4053da:	mov    r12d,DWORD PTR [rax]
  4053dd:	test   r12d,r12d
  4053e0:	je     4053f2 <strcmp@plt+0x1c5a>
  4053e2:	mov    rdi,rbx
  4053e5:	call   422ef0 <strcmp@plt+0x1f758>
  4053ea:	movzx  eax,ax
  4053ed:	cmp    r12d,eax
  4053f0:	jne    4053b0 <strcmp@plt+0x1c18>
  4053f2:	mov    rdi,rbx
  4053f5:	mov    esi,0x1
  4053fa:	xor    edx,edx
  4053fc:	mov    ecx,0x1
  405401:	mov    r8d,DWORD PTR [rsp+0xc]
  405406:	mov    r9d,ebp
  405409:	push   0x0
  40540b:	push   0xff
  405410:	call   428370 <strcmp@plt+0x24bd8>
  405415:	add    rsp,0x10
  405419:	test   rax,rax
  40541c:	je     4053c6 <strcmp@plt+0x1c2e>
  40541e:	mov    rbx,rax
  405421:	mov    rax,QWORD PTR [rsp+0x10]
  405426:	mov    rdi,QWORD PTR [rax+0x8]
  40542a:	mov    rsi,rbx
  40542d:	call   428ee0 <strcmp@plt+0x25748>
  405432:	cmp    eax,0x1
  405435:	je     4053c6 <strcmp@plt+0x1c2e>
  405437:	mov    rdi,rbx
  40543a:	call   428670 <strcmp@plt+0x24ed8>
  40543f:	jmp    4053c6 <strcmp@plt+0x1c2e>
  405441:	mov    rdi,r13
  405444:	call   42bff0 <strcmp@plt+0x28858>
  405449:	mov    ebx,0x1
  40544e:	jmp    40535a <strcmp@plt+0x1bc2>
  405453:	lea    rsi,[rip+0x3d5b0]        # 442a0a <strcmp@plt+0x3f272>
  40545a:	xor    ebx,ebx
  40545c:	mov    edi,0x2
  405461:	mov    rdx,r15
  405464:	xor    eax,eax
  405466:	call   42e520 <strcmp@plt+0x2ad88>
  40546b:	jmp    40535a <strcmp@plt+0x1bc2>
  405470:	push   rbp
  405471:	push   r15
  405473:	push   r14
  405475:	push   r13
  405477:	push   r12
  405479:	push   rbx
  40547a:	push   rax
  40547b:	mov    r12d,r9d
  40547e:	mov    ebx,r8d
  405481:	mov    r13d,ecx
  405484:	mov    r14,rdx
  405487:	mov    r15,rsi
  40548a:	mov    rbp,rdi
  40548d:	mov    rdi,rdx
  405490:	call   4317d0 <strcmp@plt+0x2e038>
  405495:	mov    QWORD PTR [rsp],rax
  405499:	mov    rsi,QWORD PTR [r15+0x8]
  40549d:	mov    rdi,r14
  4054a0:	call   42bc20 <strcmp@plt+0x28488>
  4054a5:	test   al,al
  4054a7:	je     405506 <strcmp@plt+0x1d6e>
  4054a9:	test   ebx,ebx
  4054ab:	js     405569 <strcmp@plt+0x1dd1>
  4054b1:	cmp    r13d,0x2
  4054b5:	jne    405518 <strcmp@plt+0x1d80>
  4054b7:	mov    rdi,QWORD PTR [rbp+0x10]
  4054bb:	movzx  esi,BYTE PTR [rbp+0xc]
  4054bf:	movzx  r8d,bl
  4054c3:	movzx  r9d,r12b
  4054c7:	mov    edx,0x1
  4054cc:	mov    ecx,0x1
  4054d1:	push   0x0
  4054d3:	push   0xff
  4054d8:	call   428370 <strcmp@plt+0x24bd8>
  4054dd:	add    rsp,0x10
  4054e1:	xor    ebp,ebp
  4054e3:	test   rax,rax
  4054e6:	je     405578 <strcmp@plt+0x1de0>
  4054ec:	mov    rbx,rax
  4054ef:	mov    rdi,QWORD PTR [rsp]
  4054f3:	mov    rsi,rax
  4054f6:	call   428ee0 <strcmp@plt+0x25748>
  4054fb:	cmp    eax,0x1
  4054fe:	jne    405570 <strcmp@plt+0x1dd8>
  405500:	mov    rsi,QWORD PTR [r15+0x10]
  405504:	jmp    405561 <strcmp@plt+0x1dc9>
  405506:	mov    rsi,QWORD PTR [r15+0x8]
  40550a:	mov    rdi,r14
  40550d:	call   42baa0 <strcmp@plt+0x28308>
  405512:	test   ebx,ebx
  405514:	jns    4054b1 <strcmp@plt+0x1d19>
  405516:	jmp    405569 <strcmp@plt+0x1dd1>
  405518:	mov    rdi,QWORD PTR [rbp+0x18]
  40551c:	movzx  esi,BYTE PTR [rbp+0xc]
  405520:	movzx  r8d,bl
  405524:	movzx  r9d,r12b
  405528:	mov    edx,0x1
  40552d:	mov    ecx,0x1
  405532:	push   0x0
  405534:	push   0xff
  405539:	call   428370 <strcmp@plt+0x24bd8>
  40553e:	add    rsp,0x10
  405542:	xor    ebp,ebp
  405544:	test   rax,rax
  405547:	je     405578 <strcmp@plt+0x1de0>
  405549:	mov    rbx,rax
  40554c:	mov    rdi,QWORD PTR [rsp]
  405550:	mov    rsi,rax
  405553:	call   428ee0 <strcmp@plt+0x25748>
  405558:	cmp    eax,0x1
  40555b:	jne    405570 <strcmp@plt+0x1dd8>
  40555d:	mov    rsi,QWORD PTR [r15+0x18]
  405561:	mov    rdi,rbx
  405564:	call   42baa0 <strcmp@plt+0x28308>
  405569:	mov    ebp,0x1
  40556e:	jmp    405578 <strcmp@plt+0x1de0>
  405570:	mov    rdi,rbx
  405573:	call   428670 <strcmp@plt+0x24ed8>
  405578:	mov    eax,ebp
  40557a:	add    rsp,0x8
  40557e:	pop    rbx
  40557f:	pop    r12
  405581:	pop    r13
  405583:	pop    r14
  405585:	pop    r15
  405587:	pop    rbp
  405588:	ret    
  405589:	nop    DWORD PTR [rax+0x0]
  405590:	push   rbp
  405591:	push   r15
  405593:	push   r14
  405595:	push   r13
  405597:	push   r12
  405599:	push   rbx
  40559a:	sub    rsp,0x18
  40559e:	test   rsi,rsi
  4055a1:	je     4055cd <strcmp@plt+0x1e35>
  4055a3:	mov    r12d,ecx
  4055a6:	lea    eax,[r12+0x1]
  4055ab:	cmp    eax,0x101
  4055b0:	jb     4055e4 <strcmp@plt+0x1e4c>
  4055b2:	lea    rsi,[rip+0x3d1e6]        # 44279f <strcmp@plt+0x3f007>
  4055b9:	xor    ebx,ebx
  4055bb:	mov    edi,0x2
  4055c0:	mov    edx,r12d
  4055c3:	xor    ecx,ecx
  4055c5:	mov    r8d,0xfe
  4055cb:	jmp    405609 <strcmp@plt+0x1e71>
  4055cd:	lea    rsi,[rip+0x3d4b0]        # 442a84 <strcmp@plt+0x3f2ec>
  4055d4:	xor    ebx,ebx
  4055d6:	mov    edi,0x2
  4055db:	xor    eax,eax
  4055dd:	call   42e520 <strcmp@plt+0x2ad88>
  4055e2:	jmp    405610 <strcmp@plt+0x1e78>
  4055e4:	mov    r15d,r8d
  4055e7:	cmp    r8d,0x100
  4055ee:	jb     405621 <strcmp@plt+0x1e89>
  4055f0:	lea    rsi,[rip+0x3d1de]        # 4427d5 <strcmp@plt+0x3f03d>
  4055f7:	xor    ebx,ebx
  4055f9:	mov    edi,0x2
  4055fe:	mov    edx,r12d
  405601:	xor    ecx,ecx
  405603:	mov    r8d,0xff
  405609:	xor    eax,eax
  40560b:	call   42e520 <strcmp@plt+0x2ad88>
  405610:	mov    eax,ebx
  405612:	add    rsp,0x18
  405616:	pop    rbx
  405617:	pop    r12
  405619:	pop    r13
  40561b:	pop    r14
  40561d:	pop    r15
  40561f:	pop    rbp
  405620:	ret    
  405621:	mov    ecx,edx
  405623:	mov    rbp,rsi
  405626:	test   r12d,r12d
  405629:	js     405731 <strcmp@plt+0x1f99>
  40562f:	mov    eax,ecx
  405631:	or     eax,0x2
  405634:	cmp    eax,0x6
  405637:	jne    405751 <strcmp@plt+0x1fb9>
  40563d:	mov    r14,rdi
  405640:	xor    ebx,ebx
  405642:	cmp    ecx,0x4
  405645:	setne  r13b
  405649:	mov    rdi,rbp
  40564c:	call   43a8a0 <strcmp@plt+0x37108>
  405651:	test   rax,rax
  405654:	jne    405667 <strcmp@plt+0x1ecf>
  405656:	mov    rdi,rbp
  405659:	call   43a7b0 <strcmp@plt+0x37018>
  40565e:	test   rax,rax
  405661:	je     405766 <strcmp@plt+0x1fce>
  405667:	mov    bl,r13b
  40566a:	lea    ebx,[rbx*8+0x2]
  405671:	mov    rdi,rax
  405674:	mov    esi,ebx
  405676:	mov    r13,rax
  405679:	call   43a340 <strcmp@plt+0x36ba8>
  40567e:	cmp    eax,0x1
  405681:	jne    40575d <strcmp@plt+0x1fc5>
  405687:	mov    QWORD PTR [rsp+0x10],r13
  40568c:	mov    rdi,QWORD PTR [r14+0x50]
  405690:	mov    rsi,rbp
  405693:	call   436340 <strcmp@plt+0x32ba8>
  405698:	mov    r13,rax
  40569b:	test   rax,rax
  40569e:	jne    4056d2 <strcmp@plt+0x1f3a>
  4056a0:	mov    rdi,rbp
  4056a3:	call   42ca70 <strcmp@plt+0x292d8>
  4056a8:	mov    QWORD PTR [rsp+0x8],rax
  4056ad:	mov    r13d,ebx
  4056b0:	mov    rbx,QWORD PTR [r14+0x50]
  4056b4:	mov    rdi,rbp
  4056b7:	call   403710 <strdup@plt>
  4056bc:	mov    rdi,rbx
  4056bf:	mov    ebx,r13d
  4056c2:	mov    r13,QWORD PTR [rsp+0x8]
  4056c7:	mov    rsi,rax
  4056ca:	mov    rdx,r13
  4056cd:	call   435eb0 <strcmp@plt+0x32718>
  4056d2:	mov    rdx,QWORD PTR [r14+0x68]
  4056d6:	cmp    QWORD PTR [rdx+0x8],0x0
  4056db:	jne    405700 <strcmp@plt+0x1f68>
  4056dd:	mov    ebp,ebx
  4056df:	mov    rax,QWORD PTR [r14+0x38]
  4056e3:	mov    rdi,QWORD PTR [r14+0x40]
  4056e7:	xor    ebx,ebx
  4056e9:	mov    rsi,rdx
  4056ec:	xor    edx,edx
  4056ee:	call   QWORD PTR [rax+0x10]
  4056f1:	cmp    eax,0x1
  4056f4:	jne    405783 <strcmp@plt+0x1feb>
  4056fa:	mov    rdx,QWORD PTR [r14+0x68]
  4056fe:	mov    ebx,ebp
  405700:	mov    rdi,QWORD PTR [rsp+0x10]
  405705:	mov    rsi,r13
  405708:	mov    ecx,ebx
  40570a:	mov    r8d,r12d
  40570d:	mov    r9d,r15d
  405710:	call   405470 <strcmp@plt+0x1cd8>
  405715:	xor    ebx,ebx
  405717:	cmp    eax,0x1
  40571a:	jne    405610 <strcmp@plt+0x1e78>
  405720:	mov    rax,QWORD PTR [r14+0x38]
  405724:	mov    rdi,QWORD PTR [r14+0x40]
  405728:	mov    rsi,QWORD PTR [r14+0x68]
  40572c:	call   QWORD PTR [rax+0x30]
  40572f:	jmp    405747 <strcmp@plt+0x1faf>
  405731:	lea    rsi,[rip+0x3d38c]        # 442ac4 <strcmp@plt+0x3f32c>
  405738:	mov    edi,0x2
  40573d:	mov    rdx,rbp
  405740:	xor    eax,eax
  405742:	call   42e520 <strcmp@plt+0x2ad88>
  405747:	mov    ebx,0x1
  40574c:	jmp    405610 <strcmp@plt+0x1e78>
  405751:	lea    rsi,[rip+0x3d3d0]        # 442b28 <strcmp@plt+0x3f390>
  405758:	jmp    4055d4 <strcmp@plt+0x1e3c>
  40575d:	lea    rsi,[rip+0x3d446]        # 442baa <strcmp@plt+0x3f412>
  405764:	jmp    40576d <strcmp@plt+0x1fd5>
  405766:	lea    rsi,[rip+0x3d414]        # 442b81 <strcmp@plt+0x3f3e9>
  40576d:	xor    ebx,ebx
  40576f:	mov    edi,0x3
  405774:	mov    rdx,rbp
  405777:	xor    eax,eax
  405779:	call   42e520 <strcmp@plt+0x2ad88>
  40577e:	jmp    405610 <strcmp@plt+0x1e78>
  405783:	lea    rsi,[rip+0x3d459]        # 442be3 <strcmp@plt+0x3f44b>
  40578a:	mov    edi,0x2
  40578f:	xor    eax,eax
  405791:	call   42e520 <strcmp@plt+0x2ad88>
  405796:	mov    rdi,QWORD PTR [r14+0x68]
  40579a:	call   431910 <strcmp@plt+0x2e178>
  40579f:	jmp    405610 <strcmp@plt+0x1e78>
  4057a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057ae:	xchg   ax,ax
  4057b0:	push   rbp
  4057b1:	push   r15
  4057b3:	push   r14
  4057b5:	push   r13
  4057b7:	push   r12
  4057b9:	push   rbx
  4057ba:	sub    rsp,0x18
  4057be:	mov    DWORD PTR [rsp+0x10],r9d
  4057c3:	mov    r14,r8
  4057c6:	mov    r13d,ecx
  4057c9:	mov    ebp,edx
  4057cb:	mov    r15,rsi
  4057ce:	cmp    edx,0x1000000
  4057d4:	jb     4057f2 <strcmp@plt+0x205a>
  4057d6:	lea    rsi,[rip+0x3d43f]        # 442c1c <strcmp@plt+0x3f484>
  4057dd:	mov    edi,0x2
  4057e2:	mov    edx,ebp
  4057e4:	mov    ecx,0xffffff
  4057e9:	xor    eax,eax
  4057eb:	call   42e520 <strcmp@plt+0x2ad88>
  4057f0:	xor    ebp,ebp
  4057f2:	mov    r12,QWORD PTR [rsp+0x70]
  4057f7:	xor    eax,eax
  4057f9:	call   422c80 <strcmp@plt+0x1f4e8>
  4057fe:	mov    rbx,rax
  405801:	mov    rdi,r15
  405804:	mov    rsi,rax
  405807:	call   423960 <strcmp@plt+0x201c8>
  40580c:	cmp    eax,0x1
  40580f:	je     405838 <strcmp@plt+0x20a0>
  405811:	mov    rdi,rbx
  405814:	call   422c90 <strcmp@plt+0x1f4f8>
  405819:	mov    rdi,r12
  40581c:	mov    rsi,r15
  40581f:	call   436340 <strcmp@plt+0x32ba8>
  405824:	test   rax,rax
  405827:	je     4058e3 <strcmp@plt+0x214b>
  40582d:	mov    rdi,rax
  405830:	call   423440 <strcmp@plt+0x1fca8>
  405835:	mov    rbx,rax
  405838:	mov    r15,QWORD PTR [rsp+0x68]
  40583d:	mov    rdi,rbx
  405840:	call   4340a0 <strcmp@plt+0x30908>
  405845:	movzx  eax,BYTE PTR [rsp+0x58]
  40584a:	mov    DWORD PTR [rsp],eax
  40584d:	movzx  r8d,BYTE PTR [rsp+0x10]
  405853:	movzx  r9d,BYTE PTR [rsp+0x50]
  405859:	mov    QWORD PTR [rsp+0x10],rbx
  40585e:	mov    rdi,rbx
  405861:	mov    esi,ebp
  405863:	mov    edx,r13d
  405866:	mov    rcx,r14
  405869:	call   42e3f0 <strcmp@plt+0x2ac58>
  40586e:	mov    rbp,rax
  405871:	mov    al,BYTE PTR [rsp+0x60]
  405875:	mov    BYTE PTR [rbp+0x19],al
  405878:	mov    r13,QWORD PTR [r15+0x8]
  40587c:	cmp    r13,r15
  40587f:	jne    4058a1 <strcmp@plt+0x2109>
  405881:	jmp    4058d7 <strcmp@plt+0x213f>
  405883:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40588d:	nop    DWORD PTR [rax]
  405890:	mov    rdi,rbx
  405893:	call   42bff0 <strcmp@plt+0x28858>
  405898:	mov    r13,QWORD PTR [r13+0x8]
  40589c:	cmp    r13,r15
  40589f:	je     4058d7 <strcmp@plt+0x213f>
  4058a1:	mov    rdi,QWORD PTR [r13+0x10]
  4058a5:	mov    rsi,r12
  4058a8:	call   405910 <strcmp@plt+0x2178>
  4058ad:	mov    rbx,rax
  4058b0:	mov    r14,QWORD PTR [rax+0x8]
  4058b4:	cmp    r14,rax
  4058b7:	je     405890 <strcmp@plt+0x20f8>
  4058b9:	nop    DWORD PTR [rax+0x0]
  4058c0:	mov    rsi,QWORD PTR [r14+0x10]
  4058c4:	mov    rdi,rbp
  4058c7:	call   42e490 <strcmp@plt+0x2acf8>
  4058cc:	mov    r14,QWORD PTR [r14+0x8]
  4058d0:	cmp    r14,rbx
  4058d3:	jne    4058c0 <strcmp@plt+0x2128>
  4058d5:	jmp    405890 <strcmp@plt+0x20f8>
  4058d7:	mov    rdi,QWORD PTR [rsp+0x10]
  4058dc:	call   422c90 <strcmp@plt+0x1f4f8>
  4058e1:	jmp    4058fb <strcmp@plt+0x2163>
  4058e3:	lea    rsi,[rip+0x3d378]        # 442c62 <strcmp@plt+0x3f4ca>
  4058ea:	xor    ebp,ebp
  4058ec:	mov    edi,0x2
  4058f1:	mov    rdx,r15
  4058f4:	xor    eax,eax
  4058f6:	call   42e520 <strcmp@plt+0x2ad88>
  4058fb:	mov    rax,rbp
  4058fe:	add    rsp,0x18
  405902:	pop    rbx
  405903:	pop    r12
  405905:	pop    r13
  405907:	pop    r14
  405909:	pop    r15
  40590b:	pop    rbp
  40590c:	ret    
  40590d:	nop    DWORD PTR [rax]
  405910:	push   r15
  405912:	push   r14
  405914:	push   r12
  405916:	push   rbx
  405917:	push   rax
  405918:	mov    r15,rsi
  40591b:	mov    r14,rdi
  40591e:	xor    eax,eax
  405920:	call   422c80 <strcmp@plt+0x1f4e8>
  405925:	mov    r12,rax
  405928:	mov    rdi,r14
  40592b:	mov    esi,0x2f
  405930:	call   403190 <strchr@plt>
  405935:	mov    rdi,r14
  405938:	mov    rsi,r12
  40593b:	test   rax,rax
  40593e:	je     405951 <strcmp@plt+0x21b9>
  405940:	call   423960 <strcmp@plt+0x201c8>
  405945:	cmp    eax,0x1
  405948:	jne    40595b <strcmp@plt+0x21c3>
  40594a:	test   r12,r12
  40594d:	jne    405983 <strcmp@plt+0x21eb>
  40594f:	jmp    4059aa <strcmp@plt+0x2212>
  405951:	call   423940 <strcmp@plt+0x201a8>
  405956:	cmp    eax,0x1
  405959:	je     40594a <strcmp@plt+0x21b2>
  40595b:	mov    rdi,r12
  40595e:	call   422c90 <strcmp@plt+0x1f4f8>
  405963:	mov    rdi,r15
  405966:	mov    rsi,r14
  405969:	call   436340 <strcmp@plt+0x32ba8>
  40596e:	test   rax,rax
  405971:	je     4059aa <strcmp@plt+0x2212>
  405973:	mov    rdi,rax
  405976:	call   423440 <strcmp@plt+0x1fca8>
  40597b:	mov    r12,rax
  40597e:	test   r12,r12
  405981:	je     4059aa <strcmp@plt+0x2212>
  405983:	lea    rdi,[rip+0x1d306]        # 422c90 <strcmp@plt+0x1f4f8>
  40598a:	call   42b9b0 <strcmp@plt+0x28218>
  40598f:	test   rax,rax
  405992:	je     4059cb <strcmp@plt+0x2233>
  405994:	mov    rbx,rax
  405997:	mov    rdi,r12
  40599a:	mov    rsi,rax
  40599d:	call   42baa0 <strcmp@plt+0x28308>
  4059a2:	cmp    DWORD PTR [rbx+0x18],0x0
  4059a6:	jne    4059e3 <strcmp@plt+0x224b>
  4059a8:	jmp    4059cd <strcmp@plt+0x2235>
  4059aa:	lea    rax,[rip+0x6ab5f]        # 470510 <strcmp@plt+0x6cd78>
  4059b1:	mov    esi,DWORD PTR [rax]
  4059b3:	mov    rdi,r14
  4059b6:	call   405d70 <strcmp@plt+0x25d8>
  4059bb:	mov    rbx,rax
  4059be:	test   rax,rax
  4059c1:	je     4059cb <strcmp@plt+0x2233>
  4059c3:	cmp    DWORD PTR [rbx+0x18],0x0
  4059c7:	jne    4059e3 <strcmp@plt+0x224b>
  4059c9:	jmp    4059cd <strcmp@plt+0x2235>
  4059cb:	xor    ebx,ebx
  4059cd:	lea    rsi,[rip+0x3d30a]        # 442cde <strcmp@plt+0x3f546>
  4059d4:	mov    edi,0x2
  4059d9:	mov    rdx,r14
  4059dc:	xor    eax,eax
  4059de:	call   42e520 <strcmp@plt+0x2ad88>
  4059e3:	mov    rax,rbx
  4059e6:	add    rsp,0x8
  4059ea:	pop    rbx
  4059eb:	pop    r12
  4059ed:	pop    r14
  4059ef:	pop    r15
  4059f1:	ret    
  4059f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4059fc:	nop    DWORD PTR [rax+0x0]
  405a00:	push   rbp
  405a01:	push   r15
  405a03:	push   r14
  405a05:	push   rbx
  405a06:	push   rax
  405a07:	mov    r15,rcx
  405a0a:	mov    ebp,edx
  405a0c:	mov    r14,rsi
  405a0f:	cmp    edx,0x1000000
  405a15:	jb     405a33 <strcmp@plt+0x229b>
  405a17:	lea    rsi,[rip+0x3d1fe]        # 442c1c <strcmp@plt+0x3f484>
  405a1e:	mov    edi,0x2
  405a23:	mov    edx,ebp
  405a25:	mov    ecx,0xffffff
  405a2a:	xor    eax,eax
  405a2c:	call   42e520 <strcmp@plt+0x2ad88>
  405a31:	xor    ebp,ebp
  405a33:	xor    eax,eax
  405a35:	call   422c80 <strcmp@plt+0x1f4e8>
  405a3a:	mov    rbx,rax
  405a3d:	mov    rdi,r14
  405a40:	mov    rsi,rax
  405a43:	call   423960 <strcmp@plt+0x201c8>
  405a48:	cmp    eax,0x1
  405a4b:	je     405a70 <strcmp@plt+0x22d8>
  405a4d:	mov    rdi,rbx
  405a50:	call   422c90 <strcmp@plt+0x1f4f8>
  405a55:	mov    rdi,r15
  405a58:	mov    rsi,r14
  405a5b:	call   436340 <strcmp@plt+0x32ba8>
  405a60:	test   rax,rax
  405a63:	je     405a92 <strcmp@plt+0x22fa>
  405a65:	mov    rdi,rax
  405a68:	call   423440 <strcmp@plt+0x1fca8>
  405a6d:	mov    rbx,rax
  405a70:	mov    rdi,rbx
  405a73:	call   4340a0 <strcmp@plt+0x30908>
  405a78:	mov    rdi,rbx
  405a7b:	mov    esi,ebp
  405a7d:	call   414740 <strcmp@plt+0x10fa8>
  405a82:	mov    rbp,rax
  405a85:	mov    rdi,rbx
  405a88:	call   422c90 <strcmp@plt+0x1f4f8>
  405a8d:	mov    rax,rbp
  405a90:	jmp    405aaa <strcmp@plt+0x2312>
  405a92:	lea    rsi,[rip+0x3d1c9]        # 442c62 <strcmp@plt+0x3f4ca>
  405a99:	mov    edi,0x2
  405a9e:	mov    rdx,r14
  405aa1:	xor    eax,eax
  405aa3:	call   42e520 <strcmp@plt+0x2ad88>
  405aa8:	xor    eax,eax
  405aaa:	add    rsp,0x8
  405aae:	pop    rbx
  405aaf:	pop    r14
  405ab1:	pop    r15
  405ab3:	pop    rbp
  405ab4:	ret    
  405ab5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405abf:	nop
  405ac0:	push   rbp
  405ac1:	push   r15
  405ac3:	push   r14
  405ac5:	push   r13
  405ac7:	push   r12
  405ac9:	push   rbx
  405aca:	sub    rsp,0x18
  405ace:	mov    r15,r9
  405ad1:	mov    r12,r8
  405ad4:	mov    DWORD PTR [rsp+0xc],ecx
  405ad8:	mov    ebp,edx
  405ada:	mov    rbx,rsi
  405add:	lea    rdi,[rip+0x1d1ac]        # 422c90 <strcmp@plt+0x1f4f8>
  405ae4:	call   42b9b0 <strcmp@plt+0x28218>
  405ae9:	mov    r14,rax
  405aec:	cmp    ebp,0x1000000
  405af2:	jb     405b10 <strcmp@plt+0x2378>
  405af4:	lea    rsi,[rip+0x3d121]        # 442c1c <strcmp@plt+0x3f484>
  405afb:	mov    edi,0x2
  405b00:	mov    edx,ebp
  405b02:	mov    ecx,0xffffff
  405b07:	xor    eax,eax
  405b09:	call   42e520 <strcmp@plt+0x2ad88>
  405b0e:	xor    ebp,ebp
  405b10:	xor    eax,eax
  405b12:	call   422c80 <strcmp@plt+0x1f4e8>
  405b17:	mov    r13,rax
  405b1a:	mov    rdi,rbx
  405b1d:	mov    rsi,rax
  405b20:	call   423960 <strcmp@plt+0x201c8>
  405b25:	cmp    eax,0x1
  405b28:	jne    405b33 <strcmp@plt+0x239b>
  405b2a:	mov    DWORD PTR [rsp+0x8],ebp
  405b2e:	mov    rdi,r13
  405b31:	jmp    405b5e <strcmp@plt+0x23c6>
  405b33:	mov    rdi,r13
  405b36:	call   422c90 <strcmp@plt+0x1f4f8>
  405b3b:	mov    rdi,r15
  405b3e:	mov    rsi,rbx
  405b41:	call   436340 <strcmp@plt+0x32ba8>
  405b46:	test   rax,rax
  405b49:	je     405bff <strcmp@plt+0x2467>
  405b4f:	mov    DWORD PTR [rsp+0x8],ebp
  405b53:	mov    rdi,rax
  405b56:	call   423440 <strcmp@plt+0x1fca8>
  405b5b:	mov    rdi,rax
  405b5e:	mov    QWORD PTR [rsp+0x10],rdi
  405b63:	call   4340a0 <strcmp@plt+0x30908>
  405b68:	mov    rbx,QWORD PTR [r12+0x8]
  405b6d:	cmp    rbx,r12
  405b70:	jne    405b91 <strcmp@plt+0x23f9>
  405b72:	jmp    405bcf <strcmp@plt+0x2437>
  405b74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405b7e:	xchg   ax,ax
  405b80:	mov    rdi,rbp
  405b83:	call   42bff0 <strcmp@plt+0x28858>
  405b88:	mov    rbx,QWORD PTR [rbx+0x8]
  405b8c:	cmp    rbx,r12
  405b8f:	je     405bcf <strcmp@plt+0x2437>
  405b91:	mov    rdi,QWORD PTR [rbx+0x10]
  405b95:	mov    rsi,r15
  405b98:	call   405910 <strcmp@plt+0x2178>
  405b9d:	mov    rbp,rax
  405ba0:	cmp    DWORD PTR [rax+0x18],0x0
  405ba4:	jle    405b80 <strcmp@plt+0x23e8>
  405ba6:	mov    r13,QWORD PTR [rbp+0x8]
  405baa:	cmp    r13,rbp
  405bad:	je     405b80 <strcmp@plt+0x23e8>
  405baf:	nop
  405bb0:	mov    rdi,QWORD PTR [r13+0x10]
  405bb4:	call   423440 <strcmp@plt+0x1fca8>
  405bb9:	mov    rdi,rax
  405bbc:	mov    rsi,r14
  405bbf:	call   42bbd0 <strcmp@plt+0x28438>
  405bc4:	mov    r13,QWORD PTR [r13+0x8]
  405bc8:	cmp    r13,rbp
  405bcb:	jne    405bb0 <strcmp@plt+0x2418>
  405bcd:	jmp    405b80 <strcmp@plt+0x23e8>
  405bcf:	mov    rbx,QWORD PTR [rsp+0x10]
  405bd4:	mov    rdi,rbx
  405bd7:	mov    esi,DWORD PTR [rsp+0x8]
  405bdb:	mov    edx,DWORD PTR [rsp+0xc]
  405bdf:	mov    rcx,r14
  405be2:	call   4147a0 <strcmp@plt+0x11008>
  405be7:	mov    rbp,rax
  405bea:	mov    rdi,rbx
  405bed:	call   422c90 <strcmp@plt+0x1f4f8>
  405bf2:	mov    rdi,r14
  405bf5:	call   42bff0 <strcmp@plt+0x28858>
  405bfa:	mov    rax,rbp
  405bfd:	jmp    405c17 <strcmp@plt+0x247f>
  405bff:	lea    rsi,[rip+0x3d05c]        # 442c62 <strcmp@plt+0x3f4ca>
  405c06:	mov    edi,0x2
  405c0b:	mov    rdx,rbx
  405c0e:	xor    eax,eax
  405c10:	call   42e520 <strcmp@plt+0x2ad88>
  405c15:	xor    eax,eax
  405c17:	add    rsp,0x18
  405c1b:	pop    rbx
  405c1c:	pop    r12
  405c1e:	pop    r13
  405c20:	pop    r14
  405c22:	pop    r15
  405c24:	pop    rbp
  405c25:	ret    
  405c26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c30:	push   rbp
  405c31:	push   r15
  405c33:	push   r14
  405c35:	push   r13
  405c37:	push   r12
  405c39:	push   rbx
  405c3a:	sub    rsp,0x28
  405c3e:	mov    r12,rdx
  405c41:	mov    r13,rsi
  405c44:	mov    QWORD PTR [rsp+0x20],rdi
  405c49:	lea    rdi,[rip+0x1d040]        # 422c90 <strcmp@plt+0x1f4f8>
  405c50:	call   42b9b0 <strcmp@plt+0x28218>
  405c55:	mov    rbx,rax
  405c58:	xor    eax,eax
  405c5a:	call   422c80 <strcmp@plt+0x1f4e8>
  405c5f:	mov    QWORD PTR [rsp+0x18],rax
  405c64:	mov    r14,QWORD PTR [r13+0x8]
  405c68:	cmp    r14,r13
  405c6b:	jne    405c81 <strcmp@plt+0x24e9>
  405c6d:	jmp    405cbf <strcmp@plt+0x2527>
  405c6f:	nop
  405c70:	mov    rdi,rbp
  405c73:	call   42bff0 <strcmp@plt+0x28858>
  405c78:	mov    r14,QWORD PTR [r14+0x8]
  405c7c:	cmp    r14,r13
  405c7f:	je     405cbf <strcmp@plt+0x2527>
  405c81:	mov    rdi,QWORD PTR [r14+0x10]
  405c85:	mov    rsi,r12
  405c88:	call   405910 <strcmp@plt+0x2178>
  405c8d:	mov    rbp,rax
  405c90:	cmp    DWORD PTR [rax+0x18],0x0
  405c94:	jle    405c70 <strcmp@plt+0x24d8>
  405c96:	mov    r15,QWORD PTR [rbp+0x8]
  405c9a:	cmp    r15,rbp
  405c9d:	je     405c70 <strcmp@plt+0x24d8>
  405c9f:	nop
  405ca0:	mov    rdi,QWORD PTR [r15+0x10]
  405ca4:	call   423440 <strcmp@plt+0x1fca8>
  405ca9:	mov    rdi,rax
  405cac:	mov    rsi,rbx
  405caf:	call   42bbd0 <strcmp@plt+0x28438>
  405cb4:	mov    r15,QWORD PTR [r15+0x8]
  405cb8:	cmp    r15,rbp
  405cbb:	jne    405ca0 <strcmp@plt+0x2508>
  405cbd:	jmp    405c70 <strcmp@plt+0x24d8>
  405cbf:	cmp    DWORD PTR [rbx+0x18],0x0
  405cc3:	jle    405d39 <strcmp@plt+0x25a1>
  405cc5:	lea    rdi,[rip+0x3d008]        # 442cd4 <strcmp@plt+0x3f53c>
  405ccc:	mov    r14,QWORD PTR [rsp+0x18]
  405cd1:	mov    rsi,r14
  405cd4:	call   423960 <strcmp@plt+0x201c8>
  405cd9:	vxorps xmm0,xmm0,xmm0
  405cdd:	vmovups XMMWORD PTR [rsp],xmm0
  405ce2:	mov    r12d,0x1
  405ce8:	mov    rdi,r14
  405ceb:	mov    esi,0x5a0
  405cf0:	xor    edx,edx
  405cf2:	mov    ecx,0x1
  405cf7:	xor    r8d,r8d
  405cfa:	mov    r9,rbx
  405cfd:	call   4297c0 <strcmp@plt+0x26028>
  405d02:	mov    r13,rax
  405d05:	xor    eax,eax
  405d07:	call   4309a0 <strcmp@plt+0x2d208>
  405d0c:	mov    rbp,rax
  405d0f:	mov    rdi,rax
  405d12:	mov    rsi,r13
  405d15:	call   4309d0 <strcmp@plt+0x2d238>
  405d1a:	mov    rdi,QWORD PTR [rsp+0x20]
  405d1f:	mov    rsi,rbp
  405d22:	call   415f50 <strcmp@plt+0x127b8>
  405d27:	mov    rdi,r14
  405d2a:	call   422c90 <strcmp@plt+0x1f4f8>
  405d2f:	mov    rdi,rbx
  405d32:	call   42bff0 <strcmp@plt+0x28858>
  405d37:	jmp    405d4f <strcmp@plt+0x25b7>
  405d39:	lea    rsi,[rip+0x3cf52]        # 442c92 <strcmp@plt+0x3f4fa>
  405d40:	xor    r12d,r12d
  405d43:	mov    edi,0x2
  405d48:	xor    eax,eax
  405d4a:	call   42e520 <strcmp@plt+0x2ad88>
  405d4f:	mov    eax,r12d
  405d52:	add    rsp,0x28
  405d56:	pop    rbx
  405d57:	pop    r12
  405d59:	pop    r13
  405d5b:	pop    r14
  405d5d:	pop    r15
  405d5f:	pop    rbp
  405d60:	ret    
  405d61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  405d70:	push   rbp
  405d71:	push   r15
  405d73:	push   r14
  405d75:	push   r13
  405d77:	push   r12
  405d79:	push   rbx
  405d7a:	sub    rsp,0x38
  405d7e:	mov    ebx,esi
  405d80:	mov    r14,rdi
  405d83:	mov    QWORD PTR [rsp],0x0
  405d8b:	lea    rdi,[rip+0x1cefe]        # 422c90 <strcmp@plt+0x1f4f8>
  405d92:	call   42b9b0 <strcmp@plt+0x28218>
  405d97:	mov    r13,rax
  405d9a:	vxorps xmm0,xmm0,xmm0
  405d9e:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  405da4:	mov    QWORD PTR [rsp+0x30],0x0
  405dad:	mov    DWORD PTR [rsp+0xc],ebx
  405db1:	mov    DWORD PTR [rsp+0x8],0x1
  405db9:	mov    DWORD PTR [rsp+0x14],0x11
  405dc1:	lea    rdx,[rsp+0x8]
  405dc6:	mov    rcx,rsp
  405dc9:	mov    rdi,r14
  405dcc:	xor    esi,esi
  405dce:	vzeroupper 
  405dd1:	call   403500 <getaddrinfo@plt>
  405dd6:	test   eax,eax
  405dd8:	je     405dff <strcmp@plt+0x2667>
  405dda:	mov    edi,eax
  405ddc:	call   403560 <gai_strerror@plt>
  405de1:	lea    rsi,[rip+0x3cf54]        # 442d3c <strcmp@plt+0x3f5a4>
  405de8:	xor    r13d,r13d
  405deb:	mov    edi,0x3
  405df0:	mov    rdx,rax
  405df3:	xor    eax,eax
  405df5:	call   42e520 <strcmp@plt+0x2ad88>
  405dfa:	jmp    405ebe <strcmp@plt+0x2726>
  405dff:	mov    rbp,QWORD PTR [rsp]
  405e03:	test   rbp,rbp
  405e06:	je     405eb7 <strcmp@plt+0x271f>
  405e0c:	lea    r15,[rip+0x5efad]        # 464dc0 <strcmp@plt+0x61628>
  405e13:	lea    r12,[rip+0x3cf75]        # 442d8f <strcmp@plt+0x3f5f7>
  405e1a:	jmp    405e3c <strcmp@plt+0x26a4>
  405e1c:	nop    DWORD PTR [rax+0x0]
  405e20:	mov    edi,0x3
  405e25:	lea    rsi,[rip+0x3cf26]        # 442d52 <strcmp@plt+0x3f5ba>
  405e2c:	xor    eax,eax
  405e2e:	call   42e520 <strcmp@plt+0x2ad88>
  405e33:	mov    rbp,QWORD PTR [rbp+0x28]
  405e37:	test   rbp,rbp
  405e3a:	je     405eb1 <strcmp@plt+0x2719>
  405e3c:	mov    edi,0x1
  405e41:	call   422be0 <strcmp@plt+0x1f448>
  405e46:	test   rax,rax
  405e49:	je     405e20 <strcmp@plt+0x2688>
  405e4b:	mov    rbx,rax
  405e4e:	mov    rsi,QWORD PTR [rbp+0x18]
  405e52:	movzx  eax,WORD PTR [rsi]
  405e55:	cmp    ax,0xa
  405e59:	je     405e70 <strcmp@plt+0x26d8>
  405e5b:	cmp    ax,0x2
  405e5f:	jne    405e81 <strcmp@plt+0x26e9>
  405e61:	add    rsi,0x4
  405e65:	mov    rdi,rbx
  405e68:	mov    edx,0x2
  405e6d:	jmp    405e7c <strcmp@plt+0x26e4>
  405e6f:	nop
  405e70:	add    rsi,0x8
  405e74:	mov    rdi,rbx
  405e77:	mov    edx,0xa
  405e7c:	call   423c10 <strcmp@plt+0x20478>
  405e81:	cmp    DWORD PTR [r15],0x0
  405e85:	jle    405ea4 <strcmp@plt+0x270c>
  405e87:	mov    rdi,rbx
  405e8a:	call   422e20 <strcmp@plt+0x1f688>
  405e8f:	mov    edi,0x5
  405e94:	mov    rsi,r12
  405e97:	mov    rdx,r14
  405e9a:	mov    rcx,rax
  405e9d:	xor    eax,eax
  405e9f:	call   42e520 <strcmp@plt+0x2ad88>
  405ea4:	mov    rdi,rbx
  405ea7:	mov    rsi,r13
  405eaa:	call   42baa0 <strcmp@plt+0x28308>
  405eaf:	jmp    405e33 <strcmp@plt+0x269b>
  405eb1:	mov    rdi,QWORD PTR [rsp]
  405eb5:	jmp    405eb9 <strcmp@plt+0x2721>
  405eb7:	xor    edi,edi
  405eb9:	call   403510 <freeaddrinfo@plt>
  405ebe:	mov    rax,r13
  405ec1:	add    rsp,0x38
  405ec5:	pop    rbx
  405ec6:	pop    r12
  405ec8:	pop    r13
  405eca:	pop    r14
  405ecc:	pop    r15
  405ece:	pop    rbp
  405ecf:	ret    
  405ed0:	push   rbp
  405ed1:	push   r15
  405ed3:	push   r14
  405ed5:	push   r13
  405ed7:	push   r12
  405ed9:	push   rbx
  405eda:	sub    rsp,0x58
  405ede:	mov    DWORD PTR [rsp+0x4],ecx
  405ee2:	mov    rbp,rdx
  405ee5:	mov    r12,rsi
  405ee8:	mov    r15,rdi
  405eeb:	mov    eax,DWORD PTR [rdi]
  405eed:	cmp    eax,0x3
  405ef0:	je     405ef6 <strcmp@plt+0x275e>
  405ef2:	test   eax,eax
  405ef4:	jne    405f0a <strcmp@plt+0x2772>
  405ef6:	lea    rax,[rip+0x6a6ab]        # 4705a8 <strcmp@plt+0x6ce10>
  405efd:	mov    rdi,QWORD PTR [rax]
  405f00:	call   40e830 <strcmp@plt+0xb098>
  405f05:	mov    r13,rax
  405f08:	jmp    405f0d <strcmp@plt+0x2775>
  405f0a:	xor    r13d,r13d
  405f0d:	mov    rdi,QWORD PTR [rbp+0x0]
  405f11:	mov    rsi,r12
  405f14:	call   405910 <strcmp@plt+0x2178>
  405f19:	test   rax,rax
  405f1c:	je     4065c7 <strcmp@plt+0x2e2f>
  405f22:	mov    rbx,rax
  405f25:	cmp    DWORD PTR [rax+0x18],0x1
  405f29:	jne    4065c7 <strcmp@plt+0x2e2f>
  405f2f:	mov    rax,QWORD PTR [rbx+0x8]
  405f33:	mov    r14,QWORD PTR [rax+0x10]
  405f37:	mov    rdi,r14
  405f3a:	call   4340a0 <strcmp@plt+0x30908>
  405f3f:	mov    edx,DWORD PTR [rbp+0xc]
  405f42:	cmp    edx,0x1000000
  405f48:	mov    QWORD PTR [rsp+0x8],rbp
  405f4d:	jb     405f70 <strcmp@plt+0x27d8>
  405f4f:	lea    rsi,[rip+0x3ce61]        # 442db7 <strcmp@plt+0x3f61f>
  405f56:	mov    edi,0x2
  405f5b:	mov    ecx,0xffffff
  405f60:	xor    eax,eax
  405f62:	call   42e520 <strcmp@plt+0x2ad88>
  405f67:	mov    DWORD PTR [rbp+0xc],0x0
  405f6e:	jmp    405f85 <strcmp@plt+0x27ed>
  405f70:	test   edx,edx
  405f72:	je     405f85 <strcmp@plt+0x27ed>
  405f74:	mov    edi,edx
  405f76:	mov    rsi,r14
  405f79:	mov    edx,0x20
  405f7e:	call   427820 <strcmp@plt+0x24088>
  405f83:	jmp    405f8d <strcmp@plt+0x27f5>
  405f85:	mov    rdi,r14
  405f88:	call   423440 <strcmp@plt+0x1fca8>
  405f8d:	mov    rbp,rax
  405f90:	mov    rax,QWORD PTR [rsp+0x8]
  405f95:	cmp    DWORD PTR [rax+0x8],0x0
  405f99:	jg     405fba <strcmp@plt+0x2822>
  405f9b:	mov    rax,QWORD PTR [rsp+0x8]
  405fa0:	mov    DWORD PTR [rax+0x8],0x1
  405fa7:	lea    rsi,[rip+0x3ce4e]        # 442dfc <strcmp@plt+0x3f664>
  405fae:	mov    edi,0x3
  405fb3:	xor    eax,eax
  405fb5:	call   42e520 <strcmp@plt+0x2ad88>
  405fba:	mov    rdi,rbp
  405fbd:	call   428b20 <strcmp@plt+0x25388>
  405fc2:	test   rax,rax
  405fc5:	je     4065c7 <strcmp@plt+0x2e2f>
  405fcb:	mov    rcx,rax
  405fce:	mov    QWORD PTR [rsp+0x48],r12
  405fd3:	mov    QWORD PTR [rsp+0x38],r15
  405fd8:	mov    rax,QWORD PTR [rsp+0x8]
  405fdd:	mov    eax,DWORD PTR [rax+0x8]
  405fe0:	mov    DWORD PTR [rcx+0x30],eax
  405fe3:	cmp    BYTE PTR [rsp+0x4],0x0
  405fe8:	je     405fee <strcmp@plt+0x2856>
  405fea:	mov    BYTE PTR [rcx+0x35],0x1
  405fee:	mov    QWORD PTR [rsp+0x18],rcx
  405ff3:	mov    rdi,rbp
  405ff6:	call   422c90 <strcmp@plt+0x1f4f8>
  405ffb:	mov    rdi,rbx
  405ffe:	call   42bff0 <strcmp@plt+0x28858>
  406003:	mov    rbp,QWORD PTR [rsp+0x8]
  406008:	mov    rax,QWORD PTR [rbp+0x10]
  40600c:	mov    r12,QWORD PTR [rax+0x8]
  406010:	cmp    r12,rax
  406013:	mov    QWORD PTR [rsp+0x30],r13
  406018:	je     4065d8 <strcmp@plt+0x2e40>
  40601e:	cmp    BYTE PTR [rsp+0x4],0x0
  406023:	sete   al
  406026:	test   r13,r13
  406029:	sete   cl
  40602c:	or     cl,al
  40602e:	mov    BYTE PTR [rsp+0x3],cl
  406032:	lea    r14,[rip+0x6a4d7]        # 470510 <strcmp@plt+0x6cd78>
  406039:	jmp    40606a <strcmp@plt+0x28d2>
  40603b:	nop    DWORD PTR [rax+rax*1+0x0]
  406040:	mov    edi,0x2
  406045:	lea    rsi,[rip+0x3c753]        # 44279f <strcmp@plt+0x3f007>
  40604c:	xor    ecx,ecx
  40604e:	mov    r8d,0xfe
  406054:	xor    eax,eax
  406056:	call   42e520 <strcmp@plt+0x2ad88>
  40605b:	mov    r12,QWORD PTR [r12+0x8]
  406060:	cmp    r12,QWORD PTR [rbp+0x10]
  406064:	je     4065d8 <strcmp@plt+0x2e40>
  40606a:	mov    r15,QWORD PTR [r12+0x10]
  40606f:	mov    edx,DWORD PTR [r15+0x8]
  406073:	lea    eax,[rdx+0x1]
  406076:	cmp    eax,0x101
  40607b:	jae    406040 <strcmp@plt+0x28a8>
  40607d:	cmp    DWORD PTR [r15+0xc],0x100
  406085:	jb     4060a0 <strcmp@plt+0x2908>
  406087:	mov    edi,0x2
  40608c:	lea    rsi,[rip+0x3c742]        # 4427d5 <strcmp@plt+0x3f03d>
  406093:	xor    ecx,ecx
  406095:	mov    r8d,0xff
  40609b:	jmp    406054 <strcmp@plt+0x28bc>
  40609d:	nop    DWORD PTR [rax]
  4060a0:	mov    rdi,QWORD PTR [r15]
  4060a3:	mov    rsi,QWORD PTR [rsp+0x48]
  4060a8:	call   405910 <strcmp@plt+0x2178>
  4060ad:	test   rax,rax
  4060b0:	je     40605b <strcmp@plt+0x28c3>
  4060b2:	mov    rbx,rax
  4060b5:	cmp    DWORD PTR [rax+0x18],0x0
  4060b9:	je     40605b <strcmp@plt+0x28c3>
  4060bb:	call   42b980 <strcmp@plt+0x281e8>
  4060c0:	mov    QWORD PTR [rsp+0x28],rax
  4060c5:	test   rax,rax
  4060c8:	je     40605b <strcmp@plt+0x28c3>
  4060ca:	mov    rbp,QWORD PTR [rbx+0x8]
  4060ce:	cmp    rbp,rbx
  4060d1:	je     406470 <strcmp@plt+0x2cd8>
  4060d7:	mov    QWORD PTR [rsp+0x50],rbx
  4060dc:	jmp    406110 <strcmp@plt+0x2978>
  4060de:	xchg   ax,ax
  4060e0:	mov    rdi,r13
  4060e3:	call   422e20 <strcmp@plt+0x1f688>
  4060e8:	mov    edi,0x2
  4060ed:	lea    rsi,[rip+0x3d326]        # 44341a <strcmp@plt+0x3fc82>
  4060f4:	mov    rdx,rax
  4060f7:	xor    eax,eax
  4060f9:	call   42e520 <strcmp@plt+0x2ad88>
  4060fe:	mov    rbp,QWORD PTR [rbp+0x8]
  406102:	mov    rbx,QWORD PTR [rsp+0x50]
  406107:	cmp    rbp,rbx
  40610a:	je     406470 <strcmp@plt+0x2cd8>
  406110:	mov    r13,QWORD PTR [rbp+0x10]
  406114:	cmp    DWORD PTR [r14],0x0
  406118:	je     406136 <strcmp@plt+0x299e>
  40611a:	mov    rdi,r13
  40611d:	call   422fd0 <strcmp@plt+0x1f838>
  406122:	mov    rdi,rax
  406125:	call   422ef0 <strcmp@plt+0x1f758>
  40612a:	movzx  eax,ax
  40612d:	cmp    DWORD PTR [r14],eax
  406130:	jne    4061f0 <strcmp@plt+0x2a58>
  406136:	mov    eax,DWORD PTR [r13+0x18]
  40613a:	cmp    eax,0x2
  40613d:	je     4060e0 <strcmp@plt+0x2948>
  40613f:	movzx  ecx,BYTE PTR [r15+0x18]
  406144:	cmp    BYTE PTR [rsp+0x4],0x0
  406149:	je     406219 <strcmp@plt+0x2a81>
  40614f:	test   cl,cl
  406151:	je     406219 <strcmp@plt+0x2a81>
  406157:	mov    rdi,r13
  40615a:	cmp    eax,0x3
  40615d:	jne    406173 <strcmp@plt+0x29db>
  40615f:	mov    rdi,r13
  406162:	call   422fd0 <strcmp@plt+0x1f838>
  406167:	mov    rdi,rax
  40616a:	test   rax,rax
  40616d:	je     4065a7 <strcmp@plt+0x2e0f>
  406173:	mov    QWORD PTR [rsp+0x10],rdi
  406178:	call   422ef0 <strcmp@plt+0x1f758>
  40617d:	mov    ebx,eax
  40617f:	cmp    ax,0xa
  406183:	jne    4062b3 <strcmp@plt+0x2b1b>
  406189:	lea    rax,[rip+0x699a0]        # 46fb30 <strcmp@plt+0x6c398>
  406190:	mov    eax,DWORD PTR [rax]
  406192:	test   eax,eax
  406194:	je     406285 <strcmp@plt+0x2aed>
  40619a:	cmp    eax,0x1
  40619d:	jne    4062b3 <strcmp@plt+0x2b1b>
  4061a3:	mov    rdi,QWORD PTR [rsp+0x10]
  4061a8:	call   423a60 <strcmp@plt+0x202c8>
  4061ad:	mov    eax,DWORD PTR [rax]
  4061af:	mov    ecx,eax
  4061b1:	and    ecx,0xc0ff
  4061b7:	cmp    ecx,0xc0fe
  4061bd:	je     4062b3 <strcmp@plt+0x2b1b>
  4061c3:	and    eax,0xfe
  4061c8:	cmp    eax,0xfc
  4061cd:	je     4062b3 <strcmp@plt+0x2b1b>
  4061d3:	mov    rdi,QWORD PTR [rsp+0x10]
  4061d8:	call   422e20 <strcmp@plt+0x1f688>
  4061dd:	mov    edi,0x2
  4061e2:	lea    rsi,[rip+0x3d310]        # 4434f9 <strcmp@plt+0x3fd61>
  4061e9:	jmp    4060f4 <strcmp@plt+0x295c>
  4061ee:	xchg   ax,ax
  4061f0:	lea    rax,[rip+0x5ebc9]        # 464dc0 <strcmp@plt+0x61628>
  4061f7:	cmp    DWORD PTR [rax],0x0
  4061fa:	jle    4060fe <strcmp@plt+0x2966>
  406200:	mov    rdi,r13
  406203:	call   422e20 <strcmp@plt+0x1f688>
  406208:	mov    edi,0x5
  40620d:	lea    rsi,[rip+0x3d1a0]        # 4433b4 <strcmp@plt+0x3fc1c>
  406214:	jmp    4060f4 <strcmp@plt+0x295c>
  406219:	movzx  r8d,BYTE PTR [r15+0x8]
  40621e:	movzx  r9d,BYTE PTR [r15+0xc]
  406223:	movzx  edx,cl
  406226:	mov    rdi,r13
  406229:	mov    esi,0x1
  40622e:	mov    ecx,0x1
  406233:	push   0x0
  406235:	push   0xff
  40623a:	call   428370 <strcmp@plt+0x24bd8>
  40623f:	add    rsp,0x10
  406243:	mov    rbx,rax
  406246:	test   rax,rax
  406249:	je     4060fe <strcmp@plt+0x2966>
  40624f:	mov    rdi,rbx
  406252:	mov    rsi,QWORD PTR [rsp+0x28]
  406257:	call   42baa0 <strcmp@plt+0x28308>
  40625c:	lea    rax,[rip+0x5eb5d]        # 464dc0 <strcmp@plt+0x61628>
  406263:	cmp    DWORD PTR [rax],0x2
  406266:	jl     4060fe <strcmp@plt+0x2966>
  40626c:	mov    rdi,rbx
  40626f:	call   4283f0 <strcmp@plt+0x24c58>
  406274:	mov    edi,0x6
  406279:	lea    rsi,[rip+0x3d404]        # 443684 <strcmp@plt+0x3feec>
  406280:	jmp    4060f4 <strcmp@plt+0x295c>
  406285:	mov    rdi,QWORD PTR [rsp+0x10]
  40628a:	call   423a60 <strcmp@plt+0x202c8>
  40628f:	mov    eax,DWORD PTR [rax]
  406291:	mov    ecx,0xe0
  406296:	and    eax,ecx
  406298:	cmp    eax,0x20
  40629b:	jne    40641b <strcmp@plt+0x2c83>
  4062a1:	lea    rax,[rip+0x69888]        # 46fb30 <strcmp@plt+0x6c398>
  4062a8:	mov    eax,DWORD PTR [rax]
  4062aa:	cmp    eax,0x1
  4062ad:	je     4061a3 <strcmp@plt+0x2a0b>
  4062b3:	mov    WORD PTR [rsp+0x20],bx
  4062b8:	mov    rbx,QWORD PTR [rsp+0x10]
  4062bd:	mov    rdi,rbx
  4062c0:	call   43ad40 <strcmp@plt+0x375a8>
  4062c5:	test   rax,rax
  4062c8:	je     406336 <strcmp@plt+0x2b9e>
  4062ca:	mov    rdi,rax
  4062cd:	mov    rbx,rax
  4062d0:	call   43a8a0 <strcmp@plt+0x37108>
  4062d5:	mov    r14,rax
  4062d8:	test   rax,rax
  4062db:	jne    4062f1 <strcmp@plt+0x2b59>
  4062dd:	mov    rdi,rbx
  4062e0:	call   43a7b0 <strcmp@plt+0x37018>
  4062e5:	mov    r14,rax
  4062e8:	test   rax,rax
  4062eb:	je     406436 <strcmp@plt+0x2c9e>
  4062f1:	mov    QWORD PTR [rsp+0x40],rbx
  4062f6:	movzx  ebx,WORD PTR [rsp+0x20]
  4062fb:	mov    rdi,r14
  4062fe:	mov    esi,ebx
  406300:	call   43a340 <strcmp@plt+0x36ba8>
  406305:	mov    rdi,r14
  406308:	mov    esi,ebx
  40630a:	call   43a660 <strcmp@plt+0x36ec8>
  40630f:	mov    rdi,QWORD PTR [rsp+0x10]
  406314:	mov    rsi,rax
  406317:	call   423670 <strcmp@plt+0x1fed8>
  40631c:	test   eax,eax
  40631e:	je     40634f <strcmp@plt+0x2bb7>
  406320:	mov    edi,0x2
  406325:	lea    rsi,[rip+0x3d2a9]        # 4435d5 <strcmp@plt+0x3fe3d>
  40632c:	mov    rdx,QWORD PTR [rsp+0x40]
  406331:	jmp    406445 <strcmp@plt+0x2cad>
  406336:	mov    rdi,rbx
  406339:	call   422e20 <strcmp@plt+0x1f688>
  40633e:	mov    edi,0x2
  406343:	lea    rsi,[rip+0x3d221]        # 44356b <strcmp@plt+0x3fdd3>
  40634a:	jmp    4060f4 <strcmp@plt+0x295c>
  40634f:	movzx  esi,BYTE PTR [r14+0xc]
  406354:	movzx  r8d,BYTE PTR [r15+0x8]
  406359:	movzx  r9d,BYTE PTR [r15+0xc]
  40635e:	movzx  eax,BYTE PTR [r15+0x10]
  406363:	movzx  ebx,BYTE PTR [r15+0x14]
  406368:	mov    rdi,r13
  40636b:	mov    edx,0x1
  406370:	mov    ecx,0x1
  406375:	push   rbx
  406376:	push   rax
  406377:	call   428370 <strcmp@plt+0x24bd8>
  40637c:	add    rsp,0x10
  406380:	test   rax,rax
  406383:	lea    r14,[rip+0x6a186]        # 470510 <strcmp@plt+0x6cd78>
  40638a:	je     4060fe <strcmp@plt+0x2966>
  406390:	mov    rbx,rax
  406393:	mov    rax,QWORD PTR [rsp+0x38]
  406398:	mov    eax,DWORD PTR [rax]
  40639a:	cmp    eax,0x3
  40639d:	je     4063a7 <strcmp@plt+0x2c0f>
  40639f:	test   eax,eax
  4063a1:	jne    40624f <strcmp@plt+0x2ab7>
  4063a7:	lea    rax,[rip+0x6a1fa]        # 4705a8 <strcmp@plt+0x6ce10>
  4063ae:	mov    rdi,QWORD PTR [rax]
  4063b1:	call   40e830 <strcmp@plt+0xb098>
  4063b6:	mov    QWORD PTR [rsp+0x20],rax
  4063bb:	mov    rdi,QWORD PTR [rax+0x50]
  4063bf:	mov    r13,QWORD PTR [rsp+0x40]
  4063c4:	mov    rsi,r13
  4063c7:	call   436340 <strcmp@plt+0x32ba8>
  4063cc:	mov    r14,rax
  4063cf:	test   rax,rax
  4063d2:	jne    406405 <strcmp@plt+0x2c6d>
  4063d4:	mov    rdi,r13
  4063d7:	call   42ca70 <strcmp@plt+0x292d8>
  4063dc:	mov    r14,rax
  4063df:	mov    rax,QWORD PTR [rsp+0x20]
  4063e4:	mov    rax,QWORD PTR [rax+0x50]
  4063e8:	mov    QWORD PTR [rsp+0x20],rax
  4063ed:	mov    rdi,r13
  4063f0:	call   403710 <strdup@plt>
  4063f5:	mov    rdi,QWORD PTR [rsp+0x20]
  4063fa:	mov    rsi,rax
  4063fd:	mov    rdx,r14
  406400:	call   435eb0 <strcmp@plt+0x32718>
  406405:	mov    rdi,QWORD PTR [rsp+0x10]
  40640a:	call   422ef0 <strcmp@plt+0x1f758>
  40640f:	cmp    ax,0x2
  406413:	jne    406458 <strcmp@plt+0x2cc0>
  406415:	mov    rsi,QWORD PTR [r14+0x10]
  406419:	jmp    40645c <strcmp@plt+0x2cc4>
  40641b:	mov    rdi,QWORD PTR [rsp+0x10]
  406420:	call   422e20 <strcmp@plt+0x1f688>
  406425:	mov    edi,0x2
  40642a:	lea    rsi,[rip+0x3d05c]        # 44348d <strcmp@plt+0x3fcf5>
  406431:	jmp    4060f4 <strcmp@plt+0x295c>
  406436:	mov    edi,0x2
  40643b:	lea    rsi,[rip+0x3d15e]        # 4435a0 <strcmp@plt+0x3fe08>
  406442:	mov    rdx,rbx
  406445:	xor    eax,eax
  406447:	call   42e520 <strcmp@plt+0x2ad88>
  40644c:	lea    r14,[rip+0x6a0bd]        # 470510 <strcmp@plt+0x6cd78>
  406453:	jmp    4060fe <strcmp@plt+0x2966>
  406458:	mov    rsi,QWORD PTR [r14+0x18]
  40645c:	mov    rdi,rbx
  40645f:	call   42baa0 <strcmp@plt+0x28308>
  406464:	lea    r14,[rip+0x6a0a5]        # 470510 <strcmp@plt+0x6cd78>
  40646b:	jmp    40624f <strcmp@plt+0x2ab7>
  406470:	mov    rdi,rbx
  406473:	call   42bff0 <strcmp@plt+0x28858>
  406478:	mov    rax,QWORD PTR [rsp+0x28]
  40647d:	mov    rbp,QWORD PTR [rax+0x8]
  406481:	cmp    rbp,rax
  406484:	mov    r13,QWORD PTR [rsp+0x30]
  406489:	mov    r15,QWORD PTR [rsp+0x18]
  40648e:	jne    4064be <strcmp@plt+0x2d26>
  406490:	jmp    406593 <strcmp@plt+0x2dfb>
  406495:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40649f:	nop
  4064a0:	mov    rdi,rbx
  4064a3:	call   428670 <strcmp@plt+0x24ed8>
  4064a8:	lea    r14,[rip+0x6a061]        # 470510 <strcmp@plt+0x6cd78>
  4064af:	mov    rbp,QWORD PTR [rbp+0x8]
  4064b3:	cmp    rbp,QWORD PTR [rsp+0x28]
  4064b8:	je     406593 <strcmp@plt+0x2dfb>
  4064be:	mov    rbx,QWORD PTR [rbp+0x10]
  4064c2:	test   rbx,rbx
  4064c5:	je     4064af <strcmp@plt+0x2d17>
  4064c7:	mov    rsi,QWORD PTR [rbx]
  4064ca:	mov    rdi,r15
  4064cd:	call   4290a0 <strcmp@plt+0x25908>
  4064d2:	test   rax,rax
  4064d5:	je     406520 <strcmp@plt+0x2d88>
  4064d7:	mov    rdi,QWORD PTR [rbx]
  4064da:	call   422e20 <strcmp@plt+0x1f688>
  4064df:	mov    r14,rax
  4064e2:	mov    rdi,r15
  4064e5:	call   422e20 <strcmp@plt+0x1f688>
  4064ea:	mov    edi,0x2
  4064ef:	lea    rsi,[rip+0x3c93f]        # 442e35 <strcmp@plt+0x3f69d>
  4064f6:	mov    rdx,r14
  4064f9:	mov    rcx,rax
  4064fc:	xor    eax,eax
  4064fe:	call   42e520 <strcmp@plt+0x2ad88>
  406503:	cmp    BYTE PTR [rsp+0x3],0x0
  406508:	jne    4064a0 <strcmp@plt+0x2d08>
  40650a:	mov    rdi,QWORD PTR [r13+0x50]
  40650e:	mov    rsi,rbx
  406511:	call   42cd80 <strcmp@plt+0x295e8>
  406516:	jmp    4064a0 <strcmp@plt+0x2d08>
  406518:	nop    DWORD PTR [rax+rax*1+0x0]
  406520:	mov    rdi,r15
  406523:	mov    rsi,rbx
  406526:	call   428ee0 <strcmp@plt+0x25748>
  40652b:	cmp    eax,0x1
  40652e:	je     4064af <strcmp@plt+0x2d17>
  406534:	lea    rax,[rip+0x5e885]        # 464dc0 <strcmp@plt+0x61628>
  40653b:	cmp    DWORD PTR [rax],0x0
  40653e:	jle    406573 <strcmp@plt+0x2ddb>
  406540:	mov    rdi,QWORD PTR [rbx]
  406543:	call   422e20 <strcmp@plt+0x1f688>
  406548:	mov    r14,rax
  40654b:	mov    rdi,r15
  40654e:	call   422e20 <strcmp@plt+0x1f688>
  406553:	mov    edi,0x5
  406558:	lea    rsi,[rip+0x3c92b]        # 442e8a <strcmp@plt+0x3f6f2>
  40655f:	mov    rdx,r14
  406562:	lea    r14,[rip+0x69fa7]        # 470510 <strcmp@plt+0x6cd78>
  406569:	mov    rcx,rax
  40656c:	xor    eax,eax
  40656e:	call   42e520 <strcmp@plt+0x2ad88>
  406573:	cmp    BYTE PTR [rsp+0x3],0x0
  406578:	jne    406586 <strcmp@plt+0x2dee>
  40657a:	mov    rdi,QWORD PTR [r13+0x50]
  40657e:	mov    rsi,rbx
  406581:	call   42cd80 <strcmp@plt+0x295e8>
  406586:	mov    rdi,rbx
  406589:	call   428670 <strcmp@plt+0x24ed8>
  40658e:	jmp    4064af <strcmp@plt+0x2d17>
  406593:	mov    rdi,QWORD PTR [rsp+0x28]
  406598:	call   42bff0 <strcmp@plt+0x28858>
  40659d:	mov    rbp,QWORD PTR [rsp+0x8]
  4065a2:	jmp    40605b <strcmp@plt+0x28c3>
  4065a7:	mov    rdi,r13
  4065aa:	call   422e20 <strcmp@plt+0x1f688>
  4065af:	mov    edi,0x2
  4065b4:	lea    rsi,[rip+0x3ce99]        # 443454 <strcmp@plt+0x3fcbc>
  4065bb:	mov    rdx,rax
  4065be:	xor    eax,eax
  4065c0:	call   42e520 <strcmp@plt+0x2ad88>
  4065c5:	jmp    40659d <strcmp@plt+0x2e05>
  4065c7:	xor    eax,eax
  4065c9:	add    rsp,0x58
  4065cd:	pop    rbx
  4065ce:	pop    r12
  4065d0:	pop    r13
  4065d2:	pop    r14
  4065d4:	pop    r15
  4065d6:	pop    rbp
  4065d7:	ret    
  4065d8:	cmp    BYTE PTR [rsp+0x4],0x0
  4065dd:	je     4068b9 <strcmp@plt+0x3121>
  4065e3:	mov    rax,QWORD PTR [rbp+0x18]
  4065e7:	mov    r14,QWORD PTR [rax+0x8]
  4065eb:	cmp    r14,rax
  4065ee:	je     4068b9 <strcmp@plt+0x3121>
  4065f4:	lea    rbx,[rip+0x5e7c5]        # 464dc0 <strcmp@plt+0x61628>
  4065fb:	jmp    406629 <strcmp@plt+0x2e91>
  4065fd:	nop    DWORD PTR [rax]
  406600:	mov    edi,0x2
  406605:	lea    rsi,[rip+0x3c193]        # 44279f <strcmp@plt+0x3f007>
  40660c:	xor    ecx,ecx
  40660e:	mov    r8d,0xfe
  406614:	xor    eax,eax
  406616:	call   42e520 <strcmp@plt+0x2ad88>
  40661b:	mov    r14,QWORD PTR [r14+0x8]
  40661f:	cmp    r14,QWORD PTR [rbp+0x18]
  406623:	je     4068b9 <strcmp@plt+0x3121>
  406629:	mov    r12,QWORD PTR [r14+0x10]
  40662d:	test   r12,r12
  406630:	je     40661b <strcmp@plt+0x2e83>
  406632:	lea    rax,[rip+0x69ed7]        # 470510 <strcmp@plt+0x6cd78>
  406639:	mov    eax,DWORD PTR [rax]
  40663b:	test   eax,eax
  40663d:	je     406646 <strcmp@plt+0x2eae>
  40663f:	cmp    DWORD PTR [r12+0x8],eax
  406644:	jne    406676 <strcmp@plt+0x2ede>
  406646:	mov    edx,DWORD PTR [r12+0xc]
  40664b:	lea    eax,[rdx+0x1]
  40664e:	cmp    eax,0x101
  406653:	jae    406600 <strcmp@plt+0x2e68>
  406655:	cmp    DWORD PTR [r12+0x10],0x100
  40665e:	jb     406694 <strcmp@plt+0x2efc>
  406660:	mov    edi,0x2
  406665:	lea    rsi,[rip+0x3c169]        # 4427d5 <strcmp@plt+0x3f03d>
  40666c:	xor    ecx,ecx
  40666e:	mov    r8d,0xff
  406674:	jmp    406614 <strcmp@plt+0x2e7c>
  406676:	cmp    DWORD PTR [rbx],0x0
  406679:	jle    40661b <strcmp@plt+0x2e83>
  40667b:	mov    rdx,QWORD PTR [r12]
  40667f:	mov    edi,0x5
  406684:	lea    rsi,[rip+0x3d02d]        # 4436b8 <strcmp@plt+0x3ff20>
  40668b:	xor    eax,eax
  40668d:	call   42e520 <strcmp@plt+0x2ad88>
  406692:	jmp    40661b <strcmp@plt+0x2e83>
  406694:	mov    r13,rbx
  406697:	mov    rdi,QWORD PTR [r12]
  40669b:	call   43a8a0 <strcmp@plt+0x37108>
  4066a0:	mov    rbx,rax
  4066a3:	test   rax,rax
  4066a6:	jne    4066bd <strcmp@plt+0x2f25>
  4066a8:	mov    rdi,QWORD PTR [r12]
  4066ac:	call   43a7b0 <strcmp@plt+0x37018>
  4066b1:	mov    rbx,rax
  4066b4:	test   rax,rax
  4066b7:	je     406896 <strcmp@plt+0x30fe>
  4066bd:	mov    esi,DWORD PTR [r12+0x8]
  4066c2:	mov    rdi,rbx
  4066c5:	call   43a340 <strcmp@plt+0x36ba8>
  4066ca:	xor    eax,eax
  4066cc:	cmp    DWORD PTR [r12+0x8],0x2
  4066d2:	setne  al
  4066d5:	mov    rdi,QWORD PTR [rbx+rax*8+0x10]
  4066da:	movzx  esi,BYTE PTR [rbx+0xc]
  4066de:	movzx  r8d,BYTE PTR [r12+0xc]
  4066e4:	movzx  r9d,BYTE PTR [r12+0x10]
  4066ea:	movzx  eax,BYTE PTR [r12+0x14]
  4066f0:	movzx  ebp,BYTE PTR [r12+0x18]
  4066f6:	mov    edx,0x1
  4066fb:	mov    ecx,0x1
  406700:	push   rbp
  406701:	push   rax
  406702:	call   428370 <strcmp@plt+0x24bd8>
  406707:	add    rsp,0x10
  40670b:	mov    r15,rax
  40670e:	mov    rbx,r13
  406711:	cmp    DWORD PTR [r13+0x0],0x2
  406716:	jl     406736 <strcmp@plt+0x2f9e>
  406718:	mov    rdi,r15
  40671b:	call   4283f0 <strcmp@plt+0x24c58>
  406720:	mov    edi,0x6
  406725:	lea    rsi,[rip+0x3cf58]        # 443684 <strcmp@plt+0x3feec>
  40672c:	mov    rdx,rax
  40672f:	xor    eax,eax
  406731:	call   42e520 <strcmp@plt+0x2ad88>
  406736:	test   r15,r15
  406739:	mov    rbp,QWORD PTR [rsp+0x8]
  40673e:	je     40661b <strcmp@plt+0x2e83>
  406744:	mov    rax,QWORD PTR [rsp+0x38]
  406749:	mov    eax,DWORD PTR [rax]
  40674b:	cmp    eax,0x3
  40674e:	je     406754 <strcmp@plt+0x2fbc>
  406750:	test   eax,eax
  406752:	jne    4067bf <strcmp@plt+0x3027>
  406754:	lea    rax,[rip+0x69e4d]        # 4705a8 <strcmp@plt+0x6ce10>
  40675b:	mov    rdi,QWORD PTR [rax]
  40675e:	call   40e830 <strcmp@plt+0xb098>
  406763:	mov    rbp,rax
  406766:	mov    rdi,QWORD PTR [rax+0x50]
  40676a:	mov    rsi,QWORD PTR [r12]
  40676e:	call   436340 <strcmp@plt+0x32ba8>
  406773:	mov    rbx,rax
  406776:	test   rax,rax
  406779:	jne    4067a2 <strcmp@plt+0x300a>
  40677b:	mov    rdi,QWORD PTR [r12]
  40677f:	call   42ca70 <strcmp@plt+0x292d8>
  406784:	mov    rbx,rax
  406787:	mov    rbp,QWORD PTR [rbp+0x50]
  40678b:	mov    rdi,QWORD PTR [r12]
  40678f:	call   403710 <strdup@plt>
  406794:	mov    rdi,rbp
  406797:	mov    rsi,rax
  40679a:	mov    rdx,rbx
  40679d:	call   435eb0 <strcmp@plt+0x32718>
  4067a2:	xor    eax,eax
  4067a4:	cmp    DWORD PTR [r12+0x8],0x2
  4067aa:	setne  al
  4067ad:	mov    rsi,QWORD PTR [rbx+rax*8+0x10]
  4067b2:	mov    rdi,r15
  4067b5:	call   42baa0 <strcmp@plt+0x28308>
  4067ba:	mov    rbp,QWORD PTR [rsp+0x8]
  4067bf:	mov    rsi,QWORD PTR [r15]
  4067c2:	mov    rbx,QWORD PTR [rsp+0x18]
  4067c7:	mov    rdi,rbx
  4067ca:	call   4290a0 <strcmp@plt+0x25908>
  4067cf:	test   rax,rax
  4067d2:	je     406826 <strcmp@plt+0x308e>
  4067d4:	mov    rdi,QWORD PTR [r15]
  4067d7:	call   422e20 <strcmp@plt+0x1f688>
  4067dc:	mov    r12,rax
  4067df:	mov    rdi,rbx
  4067e2:	call   422e20 <strcmp@plt+0x1f688>
  4067e7:	mov    edi,0x2
  4067ec:	lea    rsi,[rip+0x3c642]        # 442e35 <strcmp@plt+0x3f69d>
  4067f3:	mov    rdx,r12
  4067f6:	mov    rcx,rax
  4067f9:	xor    eax,eax
  4067fb:	call   42e520 <strcmp@plt+0x2ad88>
  406800:	mov    rax,QWORD PTR [rsp+0x30]
  406805:	test   rax,rax
  406808:	je     406816 <strcmp@plt+0x307e>
  40680a:	mov    rdi,QWORD PTR [rax+0x50]
  40680e:	mov    rsi,r15
  406811:	call   42cd80 <strcmp@plt+0x295e8>
  406816:	mov    rdi,r15
  406819:	call   428670 <strcmp@plt+0x24ed8>
  40681e:	mov    rbx,r13
  406821:	jmp    40661b <strcmp@plt+0x2e83>
  406826:	mov    rdi,rbx
  406829:	mov    rsi,r15
  40682c:	call   428ee0 <strcmp@plt+0x25748>
  406831:	cmp    eax,0x1
  406834:	mov    rbx,r13
  406837:	je     40661b <strcmp@plt+0x2e83>
  40683d:	cmp    DWORD PTR [rbx],0x0
  406840:	jle    406873 <strcmp@plt+0x30db>
  406842:	mov    rdi,QWORD PTR [r15]
  406845:	call   422e20 <strcmp@plt+0x1f688>
  40684a:	mov    rbx,rax
  40684d:	mov    rdi,QWORD PTR [rsp+0x18]
  406852:	call   422e20 <strcmp@plt+0x1f688>
  406857:	mov    edi,0x5
  40685c:	lea    rsi,[rip+0x3c627]        # 442e8a <strcmp@plt+0x3f6f2>
  406863:	mov    rdx,rbx
  406866:	mov    rbx,r13
  406869:	mov    rcx,rax
  40686c:	xor    eax,eax
  40686e:	call   42e520 <strcmp@plt+0x2ad88>
  406873:	mov    rax,QWORD PTR [rsp+0x30]
  406878:	test   rax,rax
  40687b:	je     406889 <strcmp@plt+0x30f1>
  40687d:	mov    rdi,QWORD PTR [rax+0x50]
  406881:	mov    rsi,r15
  406884:	call   42cd80 <strcmp@plt+0x295e8>
  406889:	mov    rdi,r15
  40688c:	call   428670 <strcmp@plt+0x24ed8>
  406891:	jmp    40661b <strcmp@plt+0x2e83>
  406896:	mov    rbx,r13
  406899:	cmp    DWORD PTR [r13+0x0],0x0
  40689e:	jle    40661b <strcmp@plt+0x2e83>
  4068a4:	mov    rdx,QWORD PTR [r12]
  4068a8:	mov    edi,0x5
  4068ad:	lea    rsi,[rip+0x3ce73]        # 443727 <strcmp@plt+0x3ff8f>
  4068b4:	jmp    40668b <strcmp@plt+0x2ef3>
  4068b9:	mov    rax,QWORD PTR [rsp+0x18]
  4068be:	jmp    4065c9 <strcmp@plt+0x2e31>
  4068c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068cd:	nop    DWORD PTR [rax]
  4068d0:	push   rbp
  4068d1:	push   r15
  4068d3:	push   r14
  4068d5:	push   r12
  4068d7:	push   rbx
  4068d8:	mov    r14,rsi
  4068db:	mov    rbx,rdi
  4068de:	call   431840 <strcmp@plt+0x2e0a8>
  4068e3:	test   rbx,rbx
  4068e6:	je     406905 <strcmp@plt+0x316d>
  4068e8:	mov    r15,rax
  4068eb:	mov    rdi,QWORD PTR [r14+0x70]
  4068ef:	mov    rsi,rax
  4068f2:	call   407d80 <strcmp@plt+0x45e8>
  4068f7:	test   rax,rax
  4068fa:	je     40691c <strcmp@plt+0x3184>
  4068fc:	lea    r12,[rip+0x3c64e]        # 442f51 <strcmp@plt+0x3f7b9>
  406903:	jmp    406971 <strcmp@plt+0x31d9>
  406905:	lea    rsi,[rip+0x3c5e0]        # 442eec <strcmp@plt+0x3f754>
  40690c:	xor    ebp,ebp
  40690e:	mov    edi,0x2
  406913:	xor    eax,eax
  406915:	call   42e520 <strcmp@plt+0x2ad88>
  40691a:	jmp    406999 <strcmp@plt+0x3201>
  40691c:	mov    rdi,QWORD PTR [r14+0x70]
  406920:	mov    rsi,rbx
  406923:	call   407be0 <strcmp@plt+0x4448>
  406928:	cmp    eax,0x1
  40692b:	jne    40696a <strcmp@plt+0x31d2>
  40692d:	lea    rax,[rip+0x5e48c]        # 464dc0 <strcmp@plt+0x61628>
  406934:	cmp    DWORD PTR [rax],0x0
  406937:	jle    406957 <strcmp@plt+0x31bf>
  406939:	mov    rdi,r15
  40693c:	call   422e20 <strcmp@plt+0x1f688>
  406941:	lea    rsi,[rip+0x3c5bd]        # 442f05 <strcmp@plt+0x3f76d>
  406948:	mov    edi,0x5
  40694d:	mov    rdx,rax
  406950:	xor    eax,eax
  406952:	call   42e520 <strcmp@plt+0x2ad88>
  406957:	mov    rdi,QWORD PTR [r14+0x50]
  40695b:	mov    rsi,rbx
  40695e:	call   42cb20 <strcmp@plt+0x29388>
  406963:	mov    ebp,0x1
  406968:	jmp    406999 <strcmp@plt+0x3201>
  40696a:	lea    r12,[rip+0x3c5b9]        # 442f2a <strcmp@plt+0x3f792>
  406971:	mov    rdi,r15
  406974:	call   422e20 <strcmp@plt+0x1f688>
  406979:	xor    ebp,ebp
  40697b:	mov    edi,0x2
  406980:	mov    rsi,r12
  406983:	mov    rdx,rax
  406986:	xor    eax,eax
  406988:	call   42e520 <strcmp@plt+0x2ad88>
  40698d:	mov    rdi,QWORD PTR [r14+0x50]
  406991:	mov    rsi,rbx
  406994:	call   42ccd0 <strcmp@plt+0x29538>
  406999:	mov    eax,ebp
  40699b:	pop    rbx
  40699c:	pop    r12
  40699e:	pop    r14
  4069a0:	pop    r15
  4069a2:	pop    rbp
  4069a3:	ret    
  4069a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069ae:	xchg   ax,ax
  4069b0:	push   rbp
  4069b1:	push   r15
  4069b3:	push   r14
  4069b5:	push   r13
  4069b7:	push   r12
  4069b9:	push   rbx
  4069ba:	push   rax
  4069bb:	test   rsi,rsi
  4069be:	je     4069ff <strcmp@plt+0x3267>
  4069c0:	mov    rbp,rdx
  4069c3:	test   rdx,rdx
  4069c6:	je     4069ff <strcmp@plt+0x3267>
  4069c8:	mov    r12,rcx
  4069cb:	test   rcx,rcx
  4069ce:	je     4069ff <strcmp@plt+0x3267>
  4069d0:	mov    rbx,rsi
  4069d3:	mov    r14,rdi
  4069d6:	mov    rdi,QWORD PTR [rdi+0x30]
  4069da:	call   436340 <strcmp@plt+0x32ba8>
  4069df:	test   rax,rax
  4069e2:	je     406a27 <strcmp@plt+0x328f>
  4069e4:	lea    rsi,[rip+0x3c5e2]        # 442fcd <strcmp@plt+0x3f835>
  4069eb:	xor    r14d,r14d
  4069ee:	mov    edi,0x2
  4069f3:	mov    rdx,rbx
  4069f6:	xor    eax,eax
  4069f8:	call   42e520 <strcmp@plt+0x2ad88>
  4069fd:	jmp    406a15 <strcmp@plt+0x327d>
  4069ff:	lea    rsi,[rip+0x3c587]        # 442f8d <strcmp@plt+0x3f7f5>
  406a06:	xor    r14d,r14d
  406a09:	mov    edi,0x2
  406a0e:	xor    eax,eax
  406a10:	call   42e520 <strcmp@plt+0x2ad88>
  406a15:	mov    eax,r14d
  406a18:	add    rsp,0x8
  406a1c:	pop    rbx
  406a1d:	pop    r12
  406a1f:	pop    r13
  406a21:	pop    r14
  406a23:	pop    r15
  406a25:	pop    rbp
  406a26:	ret    
  406a27:	mov    rdi,rbp
  406a2a:	call   4050f0 <strcmp@plt+0x1958>
  406a2f:	mov    r15,rax
  406a32:	test   rax,rax
  406a35:	je     406a67 <strcmp@plt+0x32cf>
  406a37:	mov    eax,DWORD PTR [r15+0x18]
  406a3b:	test   eax,eax
  406a3d:	je     406a67 <strcmp@plt+0x32cf>
  406a3f:	cmp    eax,0x2
  406a42:	jl     406a74 <strcmp@plt+0x32dc>
  406a44:	lea    rsi,[rip+0x3c5a2]        # 442fed <strcmp@plt+0x3f855>
  406a4b:	xor    r14d,r14d
  406a4e:	mov    edi,0x2
  406a53:	mov    rdx,rbp
  406a56:	xor    eax,eax
  406a58:	call   42e520 <strcmp@plt+0x2ad88>
  406a5d:	mov    rdi,r15
  406a60:	call   42bff0 <strcmp@plt+0x28858>
  406a65:	jmp    406a15 <strcmp@plt+0x327d>
  406a67:	mov    rdi,r15
  406a6a:	call   42bff0 <strcmp@plt+0x28858>
  406a6f:	xor    r14d,r14d
  406a72:	jmp    406a15 <strcmp@plt+0x327d>
  406a74:	mov    rax,QWORD PTR [r15+0x8]
  406a78:	mov    rbp,QWORD PTR [rax+0x10]
  406a7c:	mov    r13,QWORD PTR [r14+0x38]
  406a80:	mov    rdi,rbp
  406a83:	call   422e20 <strcmp@plt+0x1f688>
  406a88:	mov    rdi,r13
  406a8b:	mov    rsi,rax
  406a8e:	call   436340 <strcmp@plt+0x32ba8>
  406a93:	test   rax,rax
  406a96:	je     406ab7 <strcmp@plt+0x331f>
  406a98:	mov    rdi,rbp
  406a9b:	call   422e20 <strcmp@plt+0x1f688>
  406aa0:	lea    rsi,[rip+0x3c5a0]        # 443047 <strcmp@plt+0x3f8af>
  406aa7:	xor    r14d,r14d
  406aaa:	mov    edi,0x2
  406aaf:	mov    rdx,rax
  406ab2:	jmp    4069f6 <strcmp@plt+0x325e>
  406ab7:	mov    rdi,rbx
  406aba:	mov    rsi,rbp
  406abd:	mov    rdx,r12
  406ac0:	call   412de0 <strcmp@plt+0xf648>
  406ac5:	mov    rbx,rax
  406ac8:	mov    rdi,r15
  406acb:	call   42bff0 <strcmp@plt+0x28858>
  406ad0:	test   rbx,rbx
  406ad3:	je     406b52 <strcmp@plt+0x33ba>
  406ad5:	mov    rbp,QWORD PTR [r14+0x30]
  406ad9:	mov    rdi,QWORD PTR [rbx]
  406adc:	call   403710 <strdup@plt>
  406ae1:	mov    rdi,rbp
  406ae4:	mov    rsi,rax
  406ae7:	mov    rdx,rbx
  406aea:	call   435eb0 <strcmp@plt+0x32718>
  406aef:	mov    rbp,QWORD PTR [r14+0x38]
  406af3:	mov    rdi,QWORD PTR [rbx+0x8]
  406af7:	call   422e20 <strcmp@plt+0x1f688>
  406afc:	mov    rdi,rax
  406aff:	call   403710 <strdup@plt>
  406b04:	mov    rdi,rbp
  406b07:	mov    rsi,rax
  406b0a:	mov    rdx,rbx
  406b0d:	call   435eb0 <strcmp@plt+0x32718>
  406b12:	lea    rax,[rip+0x5e2a7]        # 464dc0 <strcmp@plt+0x61628>
  406b19:	mov    r14d,0x1
  406b1f:	cmp    DWORD PTR [rax],0x0
  406b22:	jle    406a15 <strcmp@plt+0x327d>
  406b28:	mov    rbp,QWORD PTR [rbx]
  406b2b:	mov    rdi,QWORD PTR [rbx+0x8]
  406b2f:	call   422e20 <strcmp@plt+0x1f688>
  406b34:	lea    rsi,[rip+0x3c539]        # 443074 <strcmp@plt+0x3f8dc>
  406b3b:	mov    edi,0x5
  406b40:	mov    rdx,rbp
  406b43:	mov    rcx,rax
  406b46:	xor    eax,eax
  406b48:	call   42e520 <strcmp@plt+0x2ad88>
  406b4d:	jmp    406a15 <strcmp@plt+0x327d>
  406b52:	xor    r14d,r14d
  406b55:	jmp    406a15 <strcmp@plt+0x327d>
  406b5a:	nop    WORD PTR [rax+rax*1+0x0]
  406b60:	push   rbp
  406b61:	push   r15
  406b63:	push   r14
  406b65:	push   r13
  406b67:	push   r12
  406b69:	push   rbx
  406b6a:	push   rax
  406b6b:	test   rsi,rsi
  406b6e:	je     406ba4 <strcmp@plt+0x340c>
  406b70:	mov    r15,rcx
  406b73:	mov    ebp,edx
  406b75:	mov    r13,rsi
  406b78:	mov    r12,rdi
  406b7b:	mov    rdi,QWORD PTR [rdi+0x28]
  406b7f:	call   436340 <strcmp@plt+0x32ba8>
  406b84:	test   rax,rax
  406b87:	je     406bcc <strcmp@plt+0x3434>
  406b89:	lea    rsi,[rip+0x3c52f]        # 4430bf <strcmp@plt+0x3f927>
  406b90:	xor    r15d,r15d
  406b93:	mov    edi,0x2
  406b98:	mov    rdx,r13
  406b9b:	xor    eax,eax
  406b9d:	call   42e520 <strcmp@plt+0x2ad88>
  406ba2:	jmp    406bba <strcmp@plt+0x3422>
  406ba4:	lea    rsi,[rip+0x3c4f4]        # 44309f <strcmp@plt+0x3f907>
  406bab:	xor    r15d,r15d
  406bae:	mov    edi,0x2
  406bb3:	xor    eax,eax
  406bb5:	call   42e520 <strcmp@plt+0x2ad88>
  406bba:	mov    eax,r15d
  406bbd:	add    rsp,0x8
  406bc1:	pop    rbx
  406bc2:	pop    r12
  406bc4:	pop    r13
  406bc6:	pop    r14
  406bc8:	pop    r15
  406bca:	pop    rbp
  406bcb:	ret    
  406bcc:	cmp    DWORD PTR [r15+0x18],0x0
  406bd1:	je     406c81 <strcmp@plt+0x34e9>
  406bd7:	test   ebp,ebp
  406bd9:	jle    406c8d <strcmp@plt+0x34f5>
  406bdf:	mov    rdi,r13
  406be2:	mov    esi,ebp
  406be4:	call   412ea0 <strcmp@plt+0xf708>
  406be9:	test   rax,rax
  406bec:	je     406c99 <strcmp@plt+0x3501>
  406bf2:	mov    r14,rax
  406bf5:	mov    rbx,QWORD PTR [r15+0x8]
  406bf9:	cmp    rbx,r15
  406bfc:	je     406c2f <strcmp@plt+0x3497>
  406bfe:	xchg   ax,ax
  406c00:	mov    rbp,QWORD PTR [rbx+0x10]
  406c04:	mov    rdi,QWORD PTR [r12+0x30]
  406c09:	mov    rsi,rbp
  406c0c:	call   436340 <strcmp@plt+0x32ba8>
  406c11:	test   rax,rax
  406c14:	je     406ca1 <strcmp@plt+0x3509>
  406c1a:	mov    rsi,QWORD PTR [r14+0x10]
  406c1e:	mov    rdi,rax
  406c21:	call   42baa0 <strcmp@plt+0x28308>
  406c26:	mov    rbx,QWORD PTR [rbx+0x8]
  406c2a:	cmp    rbx,r15
  406c2d:	jne    406c00 <strcmp@plt+0x3468>
  406c2f:	mov    rbp,QWORD PTR [r12+0x28]
  406c34:	mov    rdi,r13
  406c37:	call   403710 <strdup@plt>
  406c3c:	mov    rdi,rbp
  406c3f:	mov    rsi,rax
  406c42:	mov    rdx,r14
  406c45:	call   435eb0 <strcmp@plt+0x32718>
  406c4a:	lea    rax,[rip+0x5e16f]        # 464dc0 <strcmp@plt+0x61628>
  406c51:	cmp    DWORD PTR [rax],0x0
  406c54:	jle    406c69 <strcmp@plt+0x34d1>
  406c56:	lea    rsi,[rip+0x3c51a]        # 443177 <strcmp@plt+0x3f9df>
  406c5d:	mov    edi,0x5
  406c62:	xor    eax,eax
  406c64:	call   42e520 <strcmp@plt+0x2ad88>
  406c69:	mov    rdi,r14
  406c6c:	mov    esi,0x5
  406c71:	call   411470 <strcmp@plt+0xdcd8>
  406c76:	mov    r15d,0x1
  406c7c:	jmp    406bba <strcmp@plt+0x3422>
  406c81:	lea    rsi,[rip+0x3c456]        # 4430de <strcmp@plt+0x3f946>
  406c88:	jmp    406b90 <strcmp@plt+0x33f8>
  406c8d:	lea    rsi,[rip+0x3c478]        # 44310c <strcmp@plt+0x3f974>
  406c94:	jmp    406b90 <strcmp@plt+0x33f8>
  406c99:	xor    r15d,r15d
  406c9c:	jmp    406bba <strcmp@plt+0x3422>
  406ca1:	lea    rsi,[rip+0x3c493]        # 44313b <strcmp@plt+0x3f9a3>
  406ca8:	xor    r15d,r15d
  406cab:	mov    edi,0x2
  406cb0:	mov    rdx,rbp
  406cb3:	mov    rcx,r13
  406cb6:	xor    eax,eax
  406cb8:	call   42e520 <strcmp@plt+0x2ad88>
  406cbd:	mov    rdi,r14
  406cc0:	call   412f10 <strcmp@plt+0xf778>
  406cc5:	jmp    406bba <strcmp@plt+0x3422>
  406cca:	nop    WORD PTR [rax+rax*1+0x0]
  406cd0:	push   rbp
  406cd1:	push   rbx
  406cd2:	push   rax
  406cd3:	mov    rbp,rdi
  406cd6:	test   rsi,rsi
  406cd9:	je     406d0f <strcmp@plt+0x3577>
  406cdb:	mov    rbx,rsi
  406cde:	mov    rdi,QWORD PTR [rbp+0x28]
  406ce2:	call   436340 <strcmp@plt+0x32ba8>
  406ce7:	mov    QWORD PTR [rbp+0x40],rax
  406ceb:	mov    ebp,0x1
  406cf0:	test   rax,rax
  406cf3:	jne    406d3b <strcmp@plt+0x35a3>
  406cf5:	lea    rsi,[rip+0x3c4a8]        # 4431a4 <strcmp@plt+0x3fa0c>
  406cfc:	xor    ebp,ebp
  406cfe:	mov    edi,0x2
  406d03:	mov    rdx,rbx
  406d06:	xor    eax,eax
  406d08:	call   42e520 <strcmp@plt+0x2ad88>
  406d0d:	jmp    406d3b <strcmp@plt+0x35a3>
  406d0f:	mov    QWORD PTR [rbp+0x40],0x0
  406d17:	lea    rax,[rip+0x5e0a2]        # 464dc0 <strcmp@plt+0x61628>
  406d1e:	mov    ebp,0x1
  406d23:	cmp    DWORD PTR [rax],0x0
  406d26:	jle    406d3b <strcmp@plt+0x35a3>
  406d28:	lea    rsi,[rip+0x3c45b]        # 44318a <strcmp@plt+0x3f9f2>
  406d2f:	mov    edi,0x5
  406d34:	xor    eax,eax
  406d36:	call   42e520 <strcmp@plt+0x2ad88>
  406d3b:	mov    eax,ebp
  406d3d:	add    rsp,0x8
  406d41:	pop    rbx
  406d42:	pop    rbp
  406d43:	ret    
  406d44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406d4e:	xchg   ax,ax
  406d50:	push   rbp
  406d51:	push   r15
  406d53:	push   r14
  406d55:	push   r12
  406d57:	push   rbx
  406d58:	test   rsi,rsi
  406d5b:	je     406daf <strcmp@plt+0x3617>
  406d5d:	mov    r12,rdx
  406d60:	test   rdx,rdx
  406d63:	je     406daf <strcmp@plt+0x3617>
  406d65:	mov    rbp,rcx
  406d68:	mov    rbx,rsi
  406d6b:	mov    r14,rdi
  406d6e:	lea    rsi,[rip+0x3c4b0]        # 443225 <strcmp@plt+0x3fa8d>
  406d75:	mov    rdi,rcx
  406d78:	call   403798 <strcmp@plt>
  406d7d:	test   eax,eax
  406d7f:	je     406dc7 <strcmp@plt+0x362f>
  406d81:	lea    rsi,[rip+0x3c4a1]        # 443229 <strcmp@plt+0x3fa91>
  406d88:	mov    rdi,rbp
  406d8b:	call   403798 <strcmp@plt>
  406d90:	test   eax,eax
  406d92:	je     406dcb <strcmp@plt+0x3633>
  406d94:	lea    rsi,[rip+0x3c492]        # 44322d <strcmp@plt+0x3fa95>
  406d9b:	xor    r14d,r14d
  406d9e:	mov    edi,0x2
  406da3:	mov    rdx,rbp
  406da6:	xor    eax,eax
  406da8:	call   42e520 <strcmp@plt+0x2ad88>
  406dad:	jmp    406e1b <strcmp@plt+0x3683>
  406daf:	lea    rsi,[rip+0x3c423]        # 4431d9 <strcmp@plt+0x3fa41>
  406db6:	xor    r14d,r14d
  406db9:	mov    edi,0x2
  406dbe:	xor    eax,eax
  406dc0:	call   42e520 <strcmp@plt+0x2ad88>
  406dc5:	jmp    406e1b <strcmp@plt+0x3683>
  406dc7:	xor    ebp,ebp
  406dc9:	jmp    406dd0 <strcmp@plt+0x3638>
  406dcb:	mov    ebp,0x1
  406dd0:	mov    rdi,rbx
  406dd3:	call   4050f0 <strcmp@plt+0x1958>
  406dd8:	mov    r15,rax
  406ddb:	test   rax,rax
  406dde:	je     406e10 <strcmp@plt+0x3678>
  406de0:	mov    eax,DWORD PTR [r15+0x18]
  406de4:	test   eax,eax
  406de6:	je     406e10 <strcmp@plt+0x3678>
  406de8:	cmp    eax,0x2
  406deb:	jl     406e27 <strcmp@plt+0x368f>
  406ded:	lea    rsi,[rip+0x3c45c]        # 443250 <strcmp@plt+0x3fab8>
  406df4:	xor    r14d,r14d
  406df7:	mov    edi,0x2
  406dfc:	mov    rdx,rbx
  406dff:	xor    eax,eax
  406e01:	call   42e520 <strcmp@plt+0x2ad88>
  406e06:	mov    rdi,r15
  406e09:	call   42bff0 <strcmp@plt+0x28858>
  406e0e:	jmp    406e1b <strcmp@plt+0x3683>
  406e10:	mov    rdi,r15
  406e13:	call   42bff0 <strcmp@plt+0x28858>
  406e18:	xor    r14d,r14d
  406e1b:	mov    eax,r14d
  406e1e:	pop    rbx
  406e1f:	pop    r12
  406e21:	pop    r14
  406e23:	pop    r15
  406e25:	pop    rbp
  406e26:	ret    
  406e27:	mov    rax,QWORD PTR [r15+0x8]
  406e2b:	mov    rdi,QWORD PTR [rax+0x10]
  406e2f:	mov    rsi,r12
  406e32:	mov    edx,ebp
  406e34:	call   40a250 <strcmp@plt+0x6ab8>
  406e39:	mov    rbx,rax
  406e3c:	mov    rdi,r15
  406e3f:	call   42bff0 <strcmp@plt+0x28858>
  406e44:	test   rbx,rbx
  406e47:	je     406e18 <strcmp@plt+0x3680>
  406e49:	mov    rbp,QWORD PTR [r14+0x70]
  406e4d:	mov    rdi,QWORD PTR [rbx]
  406e50:	call   422e20 <strcmp@plt+0x1f688>
  406e55:	mov    rdi,rax
  406e58:	call   403710 <strdup@plt>
  406e5d:	mov    rdi,rbp
  406e60:	mov    rsi,rax
  406e63:	mov    rdx,rbx
  406e66:	call   435eb0 <strcmp@plt+0x32718>
  406e6b:	lea    rax,[rip+0x5df4e]        # 464dc0 <strcmp@plt+0x61628>
  406e72:	mov    r14d,0x1
  406e78:	cmp    DWORD PTR [rax],0x0
  406e7b:	jle    406e1b <strcmp@plt+0x3683>
  406e7d:	mov    rdi,rbx
  406e80:	call   40a2e0 <strcmp@plt+0x6b48>
  406e85:	lea    rsi,[rip+0x3c421]        # 4432ad <strcmp@plt+0x3fb15>
  406e8c:	mov    edi,0x5
  406e91:	mov    rdx,rax
  406e94:	jmp    406da6 <strcmp@plt+0x360e>
  406e99:	nop    DWORD PTR [rax+0x0]
  406ea0:	mov    QWORD PTR [rdi+0x88],rsi
  406ea7:	ret    
  406ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  406eb0:	push   rbp
  406eb1:	push   r15
  406eb3:	push   r14
  406eb5:	push   r12
  406eb7:	push   rbx
  406eb8:	sub    rsp,0x130
  406ebf:	mov    r12,rdi
  406ec2:	lea    rax,[rip+0x6963f]        # 470508 <strcmp@plt+0x6cd70>
  406ec9:	mov    rdi,QWORD PTR [rax]
  406ecc:	call   4031d0 <dirname@plt>
  406ed1:	lea    rdx,[rip+0x3c401]        # 4432d9 <strcmp@plt+0x3fb41>
  406ed8:	lea    r8,[rip+0x3c400]        # 4432df <strcmp@plt+0x3fb47>
  406edf:	xor    ebp,ebp
  406ee1:	lea    rdi,[rsp+0x60]
  406ee6:	mov    esi,0xc8
  406eeb:	mov    rcx,rax
  406eee:	xor    eax,eax
  406ef0:	call   403630 <snprintf@plt>
  406ef5:	cmp    eax,0xc8
  406efa:	jb     406f14 <strcmp@plt+0x377c>
  406efc:	lea    rsi,[rip+0x3c3e3]        # 4432e6 <strcmp@plt+0x3fb4e>
  406f03:	mov    edi,0x2
  406f08:	xor    eax,eax
  406f0a:	call   42e520 <strcmp@plt+0x2ad88>
  406f0f:	jmp    407137 <strcmp@plt+0x399f>
  406f14:	lea    r14,[r12+0x90]
  406f1c:	lea    rsi,[rip+0x43455]        # 44a378 <strcmp@plt+0x46be0>
  406f23:	lea    rdi,[rsp+0x60]
  406f28:	call   403490 <fopen@plt>
  406f2d:	test   rax,rax
  406f30:	je     406fd5 <strcmp@plt+0x383d>
  406f36:	mov    r15,rax
  406f39:	lea    rdi,[rsp+0x10]
  406f3e:	mov    esi,0x50
  406f43:	mov    rdx,rax
  406f46:	call   4031a0 <fgets_unlocked@plt>
  406f4b:	test   rax,rax
  406f4e:	je     406f9f <strcmp@plt+0x3807>
  406f50:	lea    rdi,[rsp+0x10]
  406f55:	call   4031e0 <strlen@plt>
  406f5a:	cmp    rax,0x20
  406f5e:	jne    406f9f <strcmp@plt+0x3807>
  406f60:	mov    BYTE PTR [rsp+0xf],0x0
  406f65:	xor    ebx,ebx
  406f67:	lea    rbp,[rsp+0xd]
  406f6c:	nop    DWORD PTR [rax+0x0]
  406f70:	movzx  eax,WORD PTR [rsp+rbx*2+0x10]
  406f75:	mov    WORD PTR [rsp+0xd],ax
  406f7a:	mov    rdi,rbp
  406f7d:	xor    esi,esi
  406f7f:	mov    edx,0x10
  406f84:	call   403580 <strtol@plt>
  406f89:	mov    BYTE PTR [r12+rbx*1+0x90],al
  406f91:	inc    rbx
  406f94:	cmp    rbx,0x10
  406f98:	jne    406f70 <strcmp@plt+0x37d8>
  406f9a:	jmp    4070d5 <strcmp@plt+0x393d>
  406f9f:	mov    rdi,r15
  406fa2:	call   4033e0 <fclose@plt>
  406fa7:	lea    rsi,[rip+0x3b34d]        # 4422fb <strcmp@plt+0x3eb63>
  406fae:	lea    rdi,[rsp+0x60]
  406fb3:	call   403490 <fopen@plt>
  406fb8:	test   rax,rax
  406fbb:	jne    406fef <strcmp@plt+0x3857>
  406fbd:	call   403040 <__errno_location@plt>
  406fc2:	mov    edi,DWORD PTR [rax]
  406fc4:	call   403170 <strerror@plt>
  406fc9:	lea    rsi,[rip+0x3c359]        # 443329 <strcmp@plt+0x3fb91>
  406fd0:	jmp    407121 <strcmp@plt+0x3989>
  406fd5:	lea    rsi,[rip+0x3b31f]        # 4422fb <strcmp@plt+0x3eb63>
  406fdc:	lea    rdi,[rsp+0x60]
  406fe1:	call   403490 <fopen@plt>
  406fe6:	test   rax,rax
  406fe9:	je     40710e <strcmp@plt+0x3976>
  406fef:	mov    r15,rax
  406ff2:	call   403240 <random@plt>
  406ff7:	mov    BYTE PTR [r12+0x90],al
  406fff:	call   403240 <random@plt>
  407004:	mov    BYTE PTR [r12+0x91],al
  40700c:	call   403240 <random@plt>
  407011:	mov    BYTE PTR [r12+0x92],al
  407019:	call   403240 <random@plt>
  40701e:	mov    BYTE PTR [r12+0x93],al
  407026:	call   403240 <random@plt>
  40702b:	mov    BYTE PTR [r12+0x94],al
  407033:	call   403240 <random@plt>
  407038:	mov    BYTE PTR [r12+0x95],al
  407040:	call   403240 <random@plt>
  407045:	mov    BYTE PTR [r12+0x96],al
  40704d:	call   403240 <random@plt>
  407052:	mov    BYTE PTR [r12+0x97],al
  40705a:	call   403240 <random@plt>
  40705f:	mov    BYTE PTR [r12+0x98],al
  407067:	call   403240 <random@plt>
  40706c:	mov    BYTE PTR [r12+0x99],al
  407074:	call   403240 <random@plt>
  407079:	mov    BYTE PTR [r12+0x9a],al
  407081:	call   403240 <random@plt>
  407086:	mov    BYTE PTR [r12+0x9b],al
  40708e:	call   403240 <random@plt>
  407093:	mov    BYTE PTR [r12+0x9c],al
  40709b:	call   403240 <random@plt>
  4070a0:	mov    BYTE PTR [r12+0x9d],al
  4070a8:	call   403240 <random@plt>
  4070ad:	mov    BYTE PTR [r12+0x9e],al
  4070b5:	call   403240 <random@plt>
  4070ba:	mov    BYTE PTR [r12+0x9f],al
  4070c2:	mov    rdi,r14
  4070c5:	call   437670 <strcmp@plt+0x33ed8>
  4070ca:	mov    rdi,rax
  4070cd:	mov    rsi,r15
  4070d0:	call   403460 <fputs@plt>
  4070d5:	mov    rdi,r15
  4070d8:	call   4033e0 <fclose@plt>
  4070dd:	lea    rax,[rip+0x5dcdc]        # 464dc0 <strcmp@plt+0x61628>
  4070e4:	mov    ebp,0x1
  4070e9:	cmp    DWORD PTR [rax],0x2
  4070ec:	jl     407137 <strcmp@plt+0x399f>
  4070ee:	mov    rdi,r14
  4070f1:	call   437670 <strcmp@plt+0x33ed8>
  4070f6:	lea    rsi,[rip+0x3c266]        # 443363 <strcmp@plt+0x3fbcb>
  4070fd:	mov    edi,0x6
  407102:	mov    rdx,rax
  407105:	xor    eax,eax
  407107:	call   42e520 <strcmp@plt+0x2ad88>
  40710c:	jmp    407137 <strcmp@plt+0x399f>
  40710e:	call   403040 <__errno_location@plt>
  407113:	mov    edi,DWORD PTR [rax]
  407115:	call   403170 <strerror@plt>
  40711a:	lea    rsi,[rip+0x3c1dd]        # 4432fe <strcmp@plt+0x3fb66>
  407121:	xor    ebp,ebp
  407123:	lea    rdx,[rsp+0x60]
  407128:	mov    edi,0x2
  40712d:	mov    rcx,rax
  407130:	xor    eax,eax
  407132:	call   42e520 <strcmp@plt+0x2ad88>
  407137:	mov    eax,ebp
  407139:	add    rsp,0x130
  407140:	pop    rbx
  407141:	pop    r12
  407143:	pop    r14
  407145:	pop    r15
  407147:	pop    rbp
  407148:	ret    
  407149:	nop    DWORD PTR [rax+0x0]
  407150:	push   r14
  407152:	push   rbx
  407153:	push   rax
  407154:	mov    r14,QWORD PTR [rdi+0x48]
  407158:	xor    eax,eax
  40715a:	call   422c80 <strcmp@plt+0x1f4e8>
  40715f:	mov    rbx,rax
  407162:	lea    rdi,[rip+0x3c22c]        # 443395 <strcmp@plt+0x3fbfd>
  407169:	mov    rsi,rax
  40716c:	call   423960 <strcmp@plt+0x201c8>
  407171:	mov    rdi,rbx
  407174:	mov    rsi,r14
  407177:	call   42baa0 <strcmp@plt+0x28308>
  40717c:	xor    eax,eax
  40717e:	call   422c80 <strcmp@plt+0x1f4e8>
  407183:	mov    rbx,rax
  407186:	lea    rdi,[rip+0x3c212]        # 44339f <strcmp@plt+0x3fc07>
  40718d:	mov    rsi,rax
  407190:	call   423960 <strcmp@plt+0x201c8>
  407195:	mov    rdi,rbx
  407198:	mov    rsi,r14
  40719b:	call   42baa0 <strcmp@plt+0x28308>
  4071a0:	xor    eax,eax
  4071a2:	call   422c80 <strcmp@plt+0x1f4e8>
  4071a7:	mov    rbx,rax
  4071aa:	lea    rdi,[rip+0x3c1fe]        # 4433af <strcmp@plt+0x3fc17>
  4071b1:	mov    rsi,rax
  4071b4:	call   423960 <strcmp@plt+0x201c8>
  4071b9:	mov    rdi,rbx
  4071bc:	mov    rsi,r14
  4071bf:	call   42baa0 <strcmp@plt+0x28308>
  4071c4:	xor    eax,eax
  4071c6:	call   422c80 <strcmp@plt+0x1f4e8>
  4071cb:	mov    rbx,rax
  4071ce:	lea    rdi,[rip+0x3c1d6]        # 4433ab <strcmp@plt+0x3fc13>
  4071d5:	mov    rsi,rax
  4071d8:	call   423960 <strcmp@plt+0x201c8>
  4071dd:	mov    rdi,rbx
  4071e0:	mov    rsi,r14
  4071e3:	add    rsp,0x8
  4071e7:	pop    rbx
  4071e8:	pop    r14
  4071ea:	jmp    42baa0 <strcmp@plt+0x28308>
  4071ef:	nop
  4071f0:	push   rbx
  4071f1:	mov    edi,0x30
  4071f6:	call   431d60 <strcmp@plt+0x2e5c8>
  4071fb:	test   rax,rax
  4071fe:	je     40724d <strcmp@plt+0x3ab5>
  407200:	mov    rbx,rax
  407203:	lea    rdi,[rip+0x6f6]        # 407900 <strcmp@plt+0x4168>
  40720a:	call   42b9b0 <strcmp@plt+0x28218>
  40720f:	mov    QWORD PTR [rbx],rax
  407212:	call   42b980 <strcmp@plt+0x281e8>
  407217:	mov    QWORD PTR [rbx+0x10],rax
  40721b:	call   42b980 <strcmp@plt+0x281e8>
  407220:	mov    QWORD PTR [rbx+0x18],rax
  407224:	call   42b980 <strcmp@plt+0x281e8>
  407229:	mov    QWORD PTR [rbx+0x20],rax
  40722d:	xor    eax,eax
  40722f:	call   416700 <strcmp@plt+0x12f68>
  407234:	mov    QWORD PTR [rbx+0x28],rax
  407238:	lea    rsi,[rip+0x3c516]        # 443755 <strcmp@plt+0x3ffbd>
  40723f:	mov    edi,0x4
  407244:	xor    eax,eax
  407246:	call   42e520 <strcmp@plt+0x2ad88>
  40724b:	jmp    40724f <strcmp@plt+0x3ab7>
  40724d:	xor    ebx,ebx
  40724f:	mov    rax,rbx
  407252:	pop    rbx
  407253:	ret    
  407254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40725e:	xchg   ax,ax
  407260:	test   rdi,rdi
  407263:	je     4072c3 <strcmp@plt+0x3b2b>
  407265:	push   rbx
  407266:	mov    rbx,rdi
  407269:	mov    rdi,QWORD PTR [rdi]
  40726c:	call   42bff0 <strcmp@plt+0x28858>
  407271:	mov    rdi,QWORD PTR [rbx+0x10]
  407275:	call   42bff0 <strcmp@plt+0x28858>
  40727a:	mov    rdi,QWORD PTR [rbx+0x18]
  40727e:	call   42bff0 <strcmp@plt+0x28858>
  407283:	mov    rdi,QWORD PTR [rbx+0x20]
  407287:	call   42bff0 <strcmp@plt+0x28858>
  40728c:	mov    rax,QWORD PTR [rbx+0x28]
  407290:	test   rax,rax
  407293:	je     40729b <strcmp@plt+0x3b03>
  407295:	mov    rdi,rbx
  407298:	call   QWORD PTR [rax+0x8]
  40729b:	mov    rdi,rbx
  40729e:	call   403790 <free@plt>
  4072a3:	lea    rax,[rip+0x5db16]        # 464dc0 <strcmp@plt+0x61628>
  4072aa:	cmp    DWORD PTR [rax],0x0
  4072ad:	pop    rbx
  4072ae:	jle    4072c3 <strcmp@plt+0x3b2b>
  4072b0:	lea    rsi,[rip+0x3c4af]        # 443766 <strcmp@plt+0x3ffce>
  4072b7:	mov    edi,0x5
  4072bc:	xor    eax,eax
  4072be:	jmp    42e520 <strcmp@plt+0x2ad88>
  4072c3:	ret    
  4072c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4072ce:	xchg   ax,ax
  4072d0:	push   rbp
  4072d1:	push   rbx
  4072d2:	push   rax
  4072d3:	mov    rbx,rdi
  4072d6:	mov    rcx,QWORD PTR [rdi+0x28]
  4072da:	lea    rax,[rip+0x69247]        # 470528 <strcmp@plt+0x6cd90>
  4072e1:	mov    rsi,QWORD PTR [rax]
  4072e4:	xor    ebp,ebp
  4072e6:	xor    eax,eax
  4072e8:	call   QWORD PTR [rcx]
  4072ea:	cmp    eax,0x1
  4072ed:	jne    407316 <strcmp@plt+0x3b7e>
  4072ef:	mov    rdi,rbx
  4072f2:	call   407340 <strcmp@plt+0x3ba8>
  4072f7:	lea    rax,[rip+0x5dac2]        # 464dc0 <strcmp@plt+0x61628>
  4072fe:	mov    ebp,0x1
  407303:	cmp    DWORD PTR [rax],0x0
  407306:	jle    407329 <strcmp@plt+0x3b91>
  407308:	lea    rsi,[rip+0x3c494]        # 4437a3 <strcmp@plt+0x4000b>
  40730f:	mov    edi,0x5
  407314:	jmp    407322 <strcmp@plt+0x3b8a>
  407316:	lea    rsi,[rip+0x3c463]        # 443780 <strcmp@plt+0x3ffe8>
  40731d:	mov    edi,0x2
  407322:	xor    eax,eax
  407324:	call   42e520 <strcmp@plt+0x2ad88>
  407329:	mov    eax,ebp
  40732b:	add    rsp,0x8
  40732f:	pop    rbx
  407330:	pop    rbp
  407331:	ret    
  407332:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40733c:	nop    DWORD PTR [rax+0x0]
  407340:	push   r15
  407342:	push   r14
  407344:	push   r12
  407346:	push   rbx
  407347:	push   rax
  407348:	mov    r15,rdi
  40734b:	mov    rdi,QWORD PTR [rdi+0x10]
  40734f:	call   42bf80 <strcmp@plt+0x287e8>
  407354:	mov    rdi,QWORD PTR [r15+0x18]
  407358:	call   42bf80 <strcmp@plt+0x287e8>
  40735d:	mov    rdi,QWORD PTR [r15+0x20]
  407361:	call   42bf80 <strcmp@plt+0x287e8>
  407366:	mov    DWORD PTR [r15+0x8],0x0
  40736e:	lea    r14,[rip+0x687ab]        # 46fb20 <strcmp@plt+0x6c388>
  407375:	mov    rax,QWORD PTR [r14]
  407378:	mov    rbx,QWORD PTR [rax+0x8]
  40737c:	cmp    rbx,rax
  40737f:	jne    407399 <strcmp@plt+0x3c01>
  407381:	jmp    4073ed <strcmp@plt+0x3c55>
  407383:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40738d:	nop    DWORD PTR [rax]
  407390:	mov    rbx,QWORD PTR [rbx+0x8]
  407394:	cmp    rbx,QWORD PTR [r14]
  407397:	je     4073ed <strcmp@plt+0x3c55>
  407399:	mov    r12,QWORD PTR [rbx+0x10]
  40739d:	mov    rdi,QWORD PTR [r12+0x10]
  4073a2:	test   rdi,rdi
  4073a5:	je     4073c4 <strcmp@plt+0x3c2c>
  4073a7:	cmp    DWORD PTR [rdi+0x18],0x0
  4073ab:	je     4073c4 <strcmp@plt+0x3c2c>
  4073ad:	mov    rsi,QWORD PTR [r15+0x18]
  4073b1:	call   42bbd0 <strcmp@plt+0x28438>
  4073b6:	mov    rdi,QWORD PTR [r12+0x10]
  4073bb:	mov    rsi,QWORD PTR [r15+0x10]
  4073bf:	call   42bbd0 <strcmp@plt+0x28438>
  4073c4:	mov    rdi,QWORD PTR [r12+0x18]
  4073c9:	test   rdi,rdi
  4073cc:	je     407390 <strcmp@plt+0x3bf8>
  4073ce:	cmp    DWORD PTR [rdi+0x18],0x0
  4073d2:	je     407390 <strcmp@plt+0x3bf8>
  4073d4:	mov    rsi,QWORD PTR [r15+0x20]
  4073d8:	call   42bbd0 <strcmp@plt+0x28438>
  4073dd:	mov    rdi,QWORD PTR [r12+0x18]
  4073e2:	mov    rsi,QWORD PTR [r15+0x10]
  4073e6:	call   42bbd0 <strcmp@plt+0x28438>
  4073eb:	jmp    407390 <strcmp@plt+0x3bf8>
  4073ed:	mov    rax,QWORD PTR [r15+0x18]
  4073f1:	cmp    DWORD PTR [rax+0x18],0x0
  4073f5:	jle    4073fc <strcmp@plt+0x3c64>
  4073f7:	or     BYTE PTR [r15+0x8],0x1
  4073fc:	mov    rax,QWORD PTR [r15+0x20]
  407400:	cmp    DWORD PTR [rax+0x18],0x0
  407404:	jle    40740b <strcmp@plt+0x3c73>
  407406:	or     BYTE PTR [r15+0x8],0x2
  40740b:	add    rsp,0x8
  40740f:	pop    rbx
  407410:	pop    r12
  407412:	pop    r14
  407414:	pop    r15
  407416:	ret    
  407417:	nop    WORD PTR [rax+rax*1+0x0]
  407420:	push   r15
  407422:	push   r14
  407424:	push   r13
  407426:	push   r12
  407428:	push   rbx
  407429:	lea    r15,[rip+0x686f0]        # 46fb20 <strcmp@plt+0x6c388>
  407430:	mov    rax,QWORD PTR [r15]
  407433:	mov    rbx,QWORD PTR [rax+0x8]
  407437:	cmp    rbx,rax
  40743a:	je     4074d8 <strcmp@plt+0x3d40>
  407440:	mov    r12,rdi
  407443:	lea    r14,[rip+0x1c226]        # 423670 <strcmp@plt+0x1fed8>
  40744a:	jmp    407459 <strcmp@plt+0x3cc1>
  40744c:	nop    DWORD PTR [rax+0x0]
  407450:	mov    rbx,QWORD PTR [rbx+0x8]
  407454:	cmp    rbx,QWORD PTR [r15]
  407457:	je     4074d8 <strcmp@plt+0x3d40>
  407459:	mov    r13,QWORD PTR [rbx+0x10]
  40745d:	mov    rdi,QWORD PTR [r13+0x10]
  407461:	test   rdi,rdi
  407464:	je     40747d <strcmp@plt+0x3ce5>
  407466:	cmp    DWORD PTR [rdi+0x18],0x0
  40746a:	je     40747d <strcmp@plt+0x3ce5>
  40746c:	mov    rsi,QWORD PTR [r12+0x18]
  407471:	mov    rdx,r14
  407474:	call   42bc70 <strcmp@plt+0x284d8>
  407479:	test   al,al
  40747b:	je     40749d <strcmp@plt+0x3d05>
  40747d:	mov    rdi,QWORD PTR [r13+0x18]
  407481:	test   rdi,rdi
  407484:	je     407450 <strcmp@plt+0x3cb8>
  407486:	cmp    DWORD PTR [rdi+0x18],0x0
  40748a:	je     407450 <strcmp@plt+0x3cb8>
  40748c:	mov    rsi,QWORD PTR [r12+0x20]
  407491:	mov    rdx,r14
  407494:	call   42bc70 <strcmp@plt+0x284d8>
  407499:	test   al,al
  40749b:	jne    407450 <strcmp@plt+0x3cb8>
  40749d:	mov    rdi,r12
  4074a0:	call   407340 <strcmp@plt+0x3ba8>
  4074a5:	lea    rbx,[rip+0x6866c]        # 46fb18 <strcmp@plt+0x6c380>
  4074ac:	mov    rax,QWORD PTR [rbx]
  4074af:	mov    edi,0xfe
  4074b4:	mov    esi,0x2
  4074b9:	call   QWORD PTR [rax+0x50]
  4074bc:	mov    rax,QWORD PTR [rbx]
  4074bf:	mov    rax,QWORD PTR [rax+0x50]
  4074c3:	mov    edi,0xfe
  4074c8:	mov    esi,0xa
  4074cd:	pop    rbx
  4074ce:	pop    r12
  4074d0:	pop    r13
  4074d2:	pop    r14
  4074d4:	pop    r15
  4074d6:	jmp    rax
  4074d8:	pop    rbx
  4074d9:	pop    r12
  4074db:	pop    r13
  4074dd:	pop    r14
  4074df:	pop    r15
  4074e1:	ret    
  4074e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4074ec:	nop    DWORD PTR [rax+0x0]
  4074f0:	push   r15
  4074f2:	push   r14
  4074f4:	push   r13
  4074f6:	push   r12
  4074f8:	push   rbx
  4074f9:	mov    r14,rcx
  4074fc:	mov    r15,rdx
  4074ff:	mov    r12,rsi
  407502:	mov    rbx,rdi
  407505:	mov    rax,QWORD PTR [rdi]
  407508:	cmp    DWORD PTR [rax+0x18],0x0
  40750c:	je     407518 <strcmp@plt+0x3d80>
  40750e:	mov    rax,QWORD PTR [rax+0x8]
  407512:	mov    r13,QWORD PTR [rax+0x10]
  407516:	jmp    40751b <strcmp@plt+0x3d83>
  407518:	xor    r13d,r13d
  40751b:	mov    rax,QWORD PTR [rbx+0x28]
  40751f:	mov    rdi,rbx
  407522:	mov    rsi,r12
  407525:	mov    rdx,r15
  407528:	mov    rcx,r14
  40752b:	call   QWORD PTR [rax+0x40]
  40752e:	mov    rsi,QWORD PTR [r12]
  407532:	movzx  r8d,BYTE PTR [r12+0xc]
  407538:	mov    rdi,r13
  40753b:	mov    rdx,r15
  40753e:	mov    rcx,r14
  407541:	call   407960 <strcmp@plt+0x41c8>
  407546:	mov    rdi,rbx
  407549:	pop    rbx
  40754a:	pop    r12
  40754c:	pop    r13
  40754e:	pop    r14
  407550:	pop    r15
  407552:	jmp    407340 <strcmp@plt+0x3ba8>
  407557:	nop    WORD PTR [rax+rax*1+0x0]
  407560:	push   rbp
  407561:	push   r15
  407563:	push   r14
  407565:	push   rbx
  407566:	push   rax
  407567:	mov    r14d,r8d
  40756a:	mov    rbp,rsi
  40756d:	mov    rbx,rdi
  407570:	mov    rax,QWORD PTR [rdi]
  407573:	cmp    DWORD PTR [rax+0x18],0x0
  407577:	je     407583 <strcmp@plt+0x3deb>
  407579:	mov    rax,QWORD PTR [rax+0x8]
  40757d:	mov    r15,QWORD PTR [rax+0x10]
  407581:	jmp    407586 <strcmp@plt+0x3dee>
  407583:	xor    r15d,r15d
  407586:	mov    rax,QWORD PTR [rbx+0x28]
  40758a:	mov    rdi,rbx
  40758d:	mov    rsi,rbp
  407590:	mov    r8d,r14d
  407593:	call   QWORD PTR [rax+0x48]
  407596:	mov    rsi,QWORD PTR [rbp+0x0]
  40759a:	movzx  edx,r14b
  40759e:	mov    rdi,r15
  4075a1:	call   407950 <strcmp@plt+0x41b8>
  4075a6:	mov    rdi,rbx
  4075a9:	add    rsp,0x8
  4075ad:	pop    rbx
  4075ae:	pop    r14
  4075b0:	pop    r15
  4075b2:	pop    rbp
  4075b3:	jmp    407340 <strcmp@plt+0x3ba8>
  4075b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4075c0:	push   rbp
  4075c1:	push   r15
  4075c3:	push   r14
  4075c5:	push   r13
  4075c7:	push   r12
  4075c9:	push   rbx
  4075ca:	push   rax
  4075cb:	mov    r14,r9
  4075ce:	mov    r15,r8
  4075d1:	mov    r12,rcx
  4075d4:	mov    rbp,rdx
  4075d7:	mov    r13d,esi
  4075da:	mov    rbx,rdi
  4075dd:	mov    rax,QWORD PTR [rdi]
  4075e0:	cmp    DWORD PTR [rax+0x18],0x0
  4075e4:	je     4075f0 <strcmp@plt+0x3e58>
  4075e6:	mov    rax,QWORD PTR [rax+0x8]
  4075ea:	mov    rax,QWORD PTR [rax+0x10]
  4075ee:	jmp    4075f2 <strcmp@plt+0x3e5a>
  4075f0:	xor    eax,eax
  4075f2:	mov    QWORD PTR [rsp],rax
  4075f6:	mov    rax,QWORD PTR [rbx+0x28]
  4075fa:	mov    rdi,rbx
  4075fd:	mov    esi,r13d
  407600:	mov    rdx,rbp
  407603:	mov    rcx,r12
  407606:	mov    r8,r15
  407609:	mov    r9,r14
  40760c:	call   QWORD PTR [rax+0x38]
  40760f:	mov    rdx,QWORD PTR [rbp+0x0]
  407613:	mov    rdi,QWORD PTR [rsp]
  407617:	mov    esi,r13d
  40761a:	mov    rcx,r12
  40761d:	mov    r8,r15
  407620:	mov    r9,r14
  407623:	call   407970 <strcmp@plt+0x41d8>
  407628:	mov    rdi,rbx
  40762b:	add    rsp,0x8
  40762f:	pop    rbx
  407630:	pop    r12
  407632:	pop    r13
  407634:	pop    r14
  407636:	pop    r15
  407638:	pop    rbp
  407639:	jmp    407340 <strcmp@plt+0x3ba8>
  40763e:	xchg   ax,ax
  407640:	mov    rax,QWORD PTR [rdi+0x28]
  407644:	mov    rax,QWORD PTR [rax+0x30]
  407648:	jmp    rax
  40764a:	nop    WORD PTR [rax+rax*1+0x0]
  407650:	push   r14
  407652:	push   rbx
  407653:	push   rax
  407654:	mov    rbx,rdi
  407657:	call   42b980 <strcmp@plt+0x281e8>
  40765c:	mov    r14,rax
  40765f:	test   rax,rax
  407662:	je     4076a2 <strcmp@plt+0x3f0a>
  407664:	mov    rax,QWORD PTR [rbx+0x28]
  407668:	mov    rdi,rbx
  40766b:	mov    esi,0x2
  407670:	call   QWORD PTR [rax+0x30]
  407673:	test   rax,rax
  407676:	je     407683 <strcmp@plt+0x3eeb>
  407678:	mov    rdi,rax
  40767b:	mov    rsi,r14
  40767e:	call   42baa0 <strcmp@plt+0x28308>
  407683:	mov    rax,QWORD PTR [rbx+0x28]
  407687:	mov    rdi,rbx
  40768a:	mov    esi,0xa
  40768f:	call   QWORD PTR [rax+0x30]
  407692:	test   rax,rax
  407695:	je     4076a2 <strcmp@plt+0x3f0a>
  407697:	mov    rdi,rax
  40769a:	mov    rsi,r14
  40769d:	call   42baa0 <strcmp@plt+0x28308>
  4076a2:	mov    rax,r14
  4076a5:	add    rsp,0x8
  4076a9:	pop    rbx
  4076aa:	pop    r14
  4076ac:	ret    
  4076ad:	nop    DWORD PTR [rax]
  4076b0:	mov    rax,QWORD PTR [rdi+0x10]
  4076b4:	ret    
  4076b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076bf:	nop
  4076c0:	cmp    esi,0xa
  4076c3:	je     4076d2 <strcmp@plt+0x3f3a>
  4076c5:	cmp    esi,0x2
  4076c8:	jne    4076da <strcmp@plt+0x3f42>
  4076ca:	add    rdi,0x18
  4076ce:	mov    rax,QWORD PTR [rdi]
  4076d1:	ret    
  4076d2:	add    rdi,0x20
  4076d6:	mov    rax,QWORD PTR [rdi]
  4076d9:	ret    
  4076da:	xor    eax,eax
  4076dc:	ret    
  4076dd:	nop    DWORD PTR [rax]
  4076e0:	mov    eax,DWORD PTR [rdi+0x8]
  4076e3:	ret    
  4076e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4076ee:	xchg   ax,ax
  4076f0:	mov    rsi,rdi
  4076f3:	lea    rax,[rip+0x68e96]        # 470590 <strcmp@plt+0x6cdf8>
  4076fa:	mov    rax,QWORD PTR [rax]
  4076fd:	mov    rax,QWORD PTR [rax]
  407700:	cmp    DWORD PTR [rax+0x18],0x0
  407704:	je     407713 <strcmp@plt+0x3f7b>
  407706:	mov    rax,QWORD PTR [rax+0x8]
  40770a:	mov    rdi,QWORD PTR [rax+0x10]
  40770e:	jmp    407980 <strcmp@plt+0x41e8>
  407713:	xor    edi,edi
  407715:	jmp    407980 <strcmp@plt+0x41e8>
  40771a:	nop    WORD PTR [rax+rax*1+0x0]
  407720:	push   r14
  407722:	push   rbx
  407723:	push   rax
  407724:	mov    rbx,rsi
  407727:	mov    r14,rdi
  40772a:	mov    edi,DWORD PTR [rsi]
  40772c:	call   407990 <strcmp@plt+0x41f8>
  407731:	lea    rsi,[rip+0x3c07f]        # 4437b7 <strcmp@plt+0x4001f>
  407738:	mov    edi,0x4
  40773d:	mov    rdx,rax
  407740:	xor    eax,eax
  407742:	call   42e520 <strcmp@plt+0x2ad88>
  407747:	mov    rsi,QWORD PTR [r14]
  40774a:	mov    rdi,rbx
  40774d:	call   42baa0 <strcmp@plt+0x28308>
  407752:	mov    eax,0x1
  407757:	add    rsp,0x8
  40775b:	pop    rbx
  40775c:	pop    r14
  40775e:	ret    
  40775f:	nop
  407760:	push   rax
  407761:	mov    edi,DWORD PTR [rdi]
  407763:	cmp    edi,0x3
  407766:	ja     40777e <strcmp@plt+0x3fe6>
  407768:	cmp    edi,0x1
  40776b:	je     40777e <strcmp@plt+0x3fe6>
  40776d:	lea    rax,[rip+0x60c94]        # 468408 <strcmp@plt+0x64c70>
  407774:	mov    rax,QWORD PTR [rax]
  407777:	mov    rax,QWORD PTR [rax+0x20]
  40777b:	pop    rcx
  40777c:	jmp    rax
  40777e:	lea    rax,[rip+0x5d63b]        # 464dc0 <strcmp@plt+0x61628>
  407785:	cmp    DWORD PTR [rax],0x0
  407788:	jle    40779d <strcmp@plt+0x4005>
  40778a:	lea    rsi,[rip+0x3c059]        # 4437ea <strcmp@plt+0x40052>
  407791:	mov    edi,0x5
  407796:	xor    eax,eax
  407798:	call   42e520 <strcmp@plt+0x2ad88>
  40779d:	mov    eax,0x1
  4077a2:	pop    rcx
  4077a3:	ret    
  4077a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4077ae:	xchg   ax,ax
  4077b0:	push   rax
  4077b1:	lea    rax,[rip+0x60c50]        # 468408 <strcmp@plt+0x64c70>
  4077b8:	mov    rax,QWORD PTR [rax]
  4077bb:	test   rax,rax
  4077be:	je     4077cf <strcmp@plt+0x4037>
  4077c0:	mov    edi,DWORD PTR [rdi]
  4077c2:	cmp    edi,0x3
  4077c5:	ja     4077d6 <strcmp@plt+0x403e>
  4077c7:	cmp    edi,0x1
  4077ca:	je     4077d6 <strcmp@plt+0x403e>
  4077cc:	call   QWORD PTR [rax+0x28]
  4077cf:	mov    eax,0x1
  4077d4:	pop    rcx
  4077d5:	ret    
  4077d6:	lea    rax,[rip+0x5d5e3]        # 464dc0 <strcmp@plt+0x61628>
  4077dd:	cmp    DWORD PTR [rax],0x0
  4077e0:	jle    4077cf <strcmp@plt+0x4037>
  4077e2:	lea    rsi,[rip+0x3c05d]        # 443846 <strcmp@plt+0x400ae>
  4077e9:	mov    edi,0x5
  4077ee:	xor    eax,eax
  4077f0:	call   42e520 <strcmp@plt+0x2ad88>
  4077f5:	jmp    4077cf <strcmp@plt+0x4037>
  4077f7:	nop    WORD PTR [rax+rax*1+0x0]
  407800:	lea    rax,[rip+0x60c01]        # 468408 <strcmp@plt+0x64c70>
  407807:	mov    rax,QWORD PTR [rax]
  40780a:	mov    rax,QWORD PTR [rax+0x60]
  40780e:	jmp    rax
  407810:	lea    rax,[rip+0x60bf1]        # 468408 <strcmp@plt+0x64c70>
  407817:	mov    rcx,QWORD PTR [rax]
  40781a:	xor    eax,eax
  40781c:	jmp    QWORD PTR [rcx+0x68]
  40781f:	nop
  407820:	push   rax
  407821:	call   4274f0 <strcmp@plt+0x23d58>
  407826:	mov    rdi,rax
  407829:	pop    rax
  40782a:	jmp    422c90 <strcmp@plt+0x1f4f8>
  40782f:	nop
  407830:	push   rax
  407831:	call   4274f0 <strcmp@plt+0x23d58>
  407836:	mov    rdi,rax
  407839:	pop    rax
  40783a:	jmp    422c90 <strcmp@plt+0x1f4f8>
  40783f:	nop
  407840:	mov    eax,DWORD PTR [rdi]
  407842:	ret    
  407843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40784d:	nop    DWORD PTR [rax]
  407850:	mov    rax,QWORD PTR [rdi+0x10]
  407854:	ret    
  407855:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40785f:	nop
  407860:	mov    rax,QWORD PTR [rdi+0x8]
  407864:	mov    rax,QWORD PTR [rax+0x30]
  407868:	jmp    rax
  40786a:	nop    WORD PTR [rax+rax*1+0x0]
  407870:	mov    rax,QWORD PTR [rdi+0x8]
  407874:	jmp    QWORD PTR [rax+0x28]
  407877:	nop    WORD PTR [rax+rax*1+0x0]
  407880:	push   rbp
  407881:	push   r15
  407883:	push   r14
  407885:	push   rbx
  407886:	push   rax
  407887:	mov    r14,rsi
  40788a:	mov    r15d,edi
  40788d:	mov    QWORD PTR [rsi],0x0
  407894:	mov    eax,edi
  407896:	lea    rcx,[rip+0x5af93]        # 462830 <strcmp@plt+0x5f098>
  40789d:	mov    rbp,QWORD PTR [rcx+rax*8]
  4078a1:	call   QWORD PTR [rbp+0x0]
  4078a4:	mov    rbx,rax
  4078a7:	mov    DWORD PTR [rax],r15d
  4078aa:	mov    QWORD PTR [rax+0x8],rbp
  4078ae:	mov    rdi,rax
  4078b1:	call   QWORD PTR [rbp+0x8]
  4078b4:	lea    rax,[rip+0x68cd5]        # 470590 <strcmp@plt+0x6cdf8>
  4078bb:	mov    rdi,QWORD PTR [rax]
  4078be:	mov    QWORD PTR [rbx+0x10],rdi
  4078c2:	mov    rsi,rbx
  4078c5:	call   407720 <strcmp@plt+0x3f88>
  4078ca:	mov    QWORD PTR [r14],rbx
  4078cd:	mov    eax,0x1
  4078d2:	add    rsp,0x8
  4078d6:	pop    rbx
  4078d7:	pop    r14
  4078d9:	pop    r15
  4078db:	pop    rbp
  4078dc:	ret    
  4078dd:	nop    DWORD PTR [rax]
  4078e0:	push   rax
  4078e1:	mov    rax,rdi
  4078e4:	mov    QWORD PTR [rdi+0x10],rsi
  4078e8:	mov    rdi,rsi
  4078eb:	mov    rsi,rax
  4078ee:	call   407720 <strcmp@plt+0x3f88>
  4078f3:	mov    eax,0x1
  4078f8:	pop    rcx
  4078f9:	ret    
  4078fa:	nop    WORD PTR [rax+rax*1+0x0]
  407900:	push   rbx
  407901:	test   rdi,rdi
  407904:	je     40791b <strcmp@plt+0x4183>
  407906:	mov    rbx,rdi
  407909:	mov    rax,QWORD PTR [rdi+0x8]
  40790d:	call   QWORD PTR [rax+0x18]
  407910:	mov    rax,QWORD PTR [rbx+0x8]
  407914:	mov    rdi,rbx
  407917:	pop    rbx
  407918:	jmp    QWORD PTR [rax+0x10]
  40791b:	pop    rbx
  40791c:	ret    
  40791d:	nop    DWORD PTR [rax]
  407920:	mov    rdi,QWORD PTR [rdi+0x10]
  407924:	mov    rax,QWORD PTR [rdi+0x28]
  407928:	mov    rax,QWORD PTR [rax+0x28]
  40792c:	jmp    rax
  40792e:	xchg   ax,ax
  407930:	mov    rdi,rsi
  407933:	mov    esi,edx
  407935:	jmp    407800 <strcmp@plt+0x4068>
  40793a:	nop    WORD PTR [rax+rax*1+0x0]
  407940:	xor    eax,eax
  407942:	jmp    407810 <strcmp@plt+0x4078>
  407947:	nop    WORD PTR [rax+rax*1+0x0]
  407950:	mov    rax,QWORD PTR [rdi+0x8]
  407954:	mov    rax,QWORD PTR [rax+0x38]
  407958:	jmp    rax
  40795a:	nop    WORD PTR [rax+rax*1+0x0]
  407960:	mov    rax,QWORD PTR [rdi+0x8]
  407964:	mov    rax,QWORD PTR [rax+0x40]
  407968:	jmp    rax
  40796a:	nop    WORD PTR [rax+rax*1+0x0]
  407970:	mov    rax,QWORD PTR [rdi+0x8]
  407974:	mov    rax,QWORD PTR [rax+0x48]
  407978:	jmp    rax
  40797a:	nop    WORD PTR [rax+rax*1+0x0]
  407980:	mov    rax,QWORD PTR [rdi+0x8]
  407984:	mov    rax,QWORD PTR [rax+0x50]
  407988:	jmp    rax
  40798a:	nop    WORD PTR [rax+rax*1+0x0]
  407990:	mov    BYTE PTR [rip+0x60861],0x0        # 4681f8 <strcmp@plt+0x64a60>
  407997:	cmp    edi,0x5
  40799a:	ja     4079c0 <strcmp@plt+0x4228>
  40799c:	mov    eax,edi
  40799e:	lea    rcx,[rip+0x3bef7]        # 44389c <strcmp@plt+0x40104>
  4079a5:	movsxd rax,DWORD PTR [rcx+rax*4]
  4079a9:	add    rax,rcx
  4079ac:	jmp    rax
  4079ae:	mov    DWORD PTR [rip+0x60840],0x525478        # 4681f8 <strcmp@plt+0x64a60>
  4079b8:	lea    rax,[rip+0x60839]        # 4681f8 <strcmp@plt+0x64a60>
  4079bf:	ret    
  4079c0:	movabs rax,0x6e776f6e6b6e55
  4079ca:	mov    QWORD PTR [rip+0x60827],rax        # 4681f8 <strcmp@plt+0x64a60>
  4079d1:	lea    rax,[rip+0x60820]        # 4681f8 <strcmp@plt+0x64a60>
  4079d8:	ret    
  4079d9:	movabs rax,0x767265532070614d
  4079e3:	mov    QWORD PTR [rip+0x6080e],rax        # 4681f8 <strcmp@plt+0x64a60>
  4079ea:	mov    DWORD PTR [rip+0x6080b],0x726576        # 4681ff <strcmp@plt+0x64a67>
  4079f4:	lea    rax,[rip+0x607fd]        # 4681f8 <strcmp@plt+0x64a60>
  4079fb:	ret    
  4079fc:	mov    DWORD PTR [rip+0x607f2],0x525452        # 4681f8 <strcmp@plt+0x64a60>
  407a06:	lea    rax,[rip+0x607eb]        # 4681f8 <strcmp@plt+0x64a60>
  407a0d:	ret    
  407a0e:	movabs rax,0x4e20656c69626f4d
  407a18:	jmp    407a44 <strcmp@plt+0x42ac>
  407a1a:	movabs rax,0x65646f6e20544444
  407a24:	mov    QWORD PTR [rip+0x607cd],rax        # 4681f8 <strcmp@plt+0x64a60>
  407a2b:	mov    BYTE PTR [rip+0x607ce],0x0        # 468200 <strcmp@plt+0x64a68>
  407a32:	lea    rax,[rip+0x607bf]        # 4681f8 <strcmp@plt+0x64a60>
  407a39:	ret    
  407a3a:	movabs rax,0x6e20524d20544444
  407a44:	mov    QWORD PTR [rip+0x607ad],rax        # 4681f8 <strcmp@plt+0x64a60>
  407a4b:	mov    DWORD PTR [rip+0x607ab],0x65646f        # 468200 <strcmp@plt+0x64a68>
  407a55:	lea    rax,[rip+0x6079c]        # 4681f8 <strcmp@plt+0x64a60>
  407a5c:	ret    
  407a5d:	nop    DWORD PTR [rax]
  407a60:	push   rbp
  407a61:	push   r15
  407a63:	push   r14
  407a65:	push   r13
  407a67:	push   r12
  407a69:	push   rbx
  407a6a:	push   rax
  407a6b:	mov    r14,r8
  407a6e:	mov    rbx,rcx
  407a71:	mov    r15,rdx
  407a74:	mov    rbp,rsi
  407a77:	mov    r13,rdi
  407a7a:	test   rcx,rcx
  407a7d:	cmove  rbx,rdx
  407a81:	je     407aa0 <strcmp@plt+0x4308>
  407a83:	mov    rdi,rbx
  407a86:	call   422ef0 <strcmp@plt+0x1f758>
  407a8b:	movzx  esi,ax
  407a8e:	mov    rdi,rbp
  407a91:	call   422ae0 <strcmp@plt+0x1f348>
  407a96:	test   rax,rax
  407a99:	je     407ab5 <strcmp@plt+0x431d>
  407a9b:	mov    r12,rax
  407a9e:	jmp    407ae7 <strcmp@plt+0x434f>
  407aa0:	lea    r12,[r15+0x20]
  407aa4:	mov    rdi,rbp
  407aa7:	mov    rsi,r12
  407aaa:	call   422a90 <strcmp@plt+0x1f2f8>
  407aaf:	test   eax,eax
  407ab1:	jne    407ae7 <strcmp@plt+0x434f>
  407ab3:	jmp    407a83 <strcmp@plt+0x42eb>
  407ab5:	cmp    DWORD PTR [rbp+0x18],0x0
  407ab9:	je     407b15 <strcmp@plt+0x437d>
  407abb:	mov    rax,QWORD PTR [rbp+0x8]
  407abf:	mov    r12,QWORD PTR [rax+0x10]
  407ac3:	test   r12,r12
  407ac6:	je     407b15 <strcmp@plt+0x437d>
  407ac8:	mov    rbx,QWORD PTR [r13+0x10]
  407acc:	mov    rdi,r12
  407acf:	call   422ef0 <strcmp@plt+0x1f758>
  407ad4:	movzx  esi,ax
  407ad7:	mov    rdi,rbx
  407ada:	call   407640 <strcmp@plt+0x3ea8>
  407adf:	test   rax,rax
  407ae2:	je     407b38 <strcmp@plt+0x43a0>
  407ae4:	mov    rbx,rax
  407ae7:	movzx  edx,WORD PTR [r15+0x42]
  407aec:	mov    rdi,r14
  407aef:	mov    esi,0x10f6
  407af4:	mov    rcx,rbx
  407af7:	mov    r8,r12
  407afa:	call   435260 <strcmp@plt+0x31ac8>
  407aff:	mov    ebx,0x1
  407b04:	mov    eax,ebx
  407b06:	add    rsp,0x8
  407b0a:	pop    rbx
  407b0b:	pop    r12
  407b0d:	pop    r13
  407b0f:	pop    r14
  407b11:	pop    r15
  407b13:	pop    rbp
  407b14:	ret    
  407b15:	lea    rax,[rip+0x5d2a4]        # 464dc0 <strcmp@plt+0x61628>
  407b1c:	cmp    DWORD PTR [rax],0x0
  407b1f:	jle    407b79 <strcmp@plt+0x43e1>
  407b21:	lea    rsi,[rip+0x3bdad]        # 4438d5 <strcmp@plt+0x4013d>
  407b28:	xor    ebx,ebx
  407b2a:	mov    edi,0x5
  407b2f:	xor    eax,eax
  407b31:	call   42e520 <strcmp@plt+0x2ad88>
  407b36:	jmp    407b04 <strcmp@plt+0x436c>
  407b38:	lea    rax,[rip+0x5d281]        # 464dc0 <strcmp@plt+0x61628>
  407b3f:	cmp    DWORD PTR [rax],0x0
  407b42:	jle    407b79 <strcmp@plt+0x43e1>
  407b44:	mov    rdi,r12
  407b47:	call   422ef0 <strcmp@plt+0x1f758>
  407b4c:	cmp    ax,0x2
  407b50:	lea    rax,[rip+0x3bdec]        # 443943 <strcmp@plt+0x401ab>
  407b57:	lea    rdx,[rip+0x3bdea]        # 443948 <strcmp@plt+0x401b0>
  407b5e:	cmove  rdx,rax
  407b62:	lea    rsi,[rip+0x3bd99]        # 443902 <strcmp@plt+0x4016a>
  407b69:	xor    ebx,ebx
  407b6b:	mov    edi,0x5
  407b70:	xor    eax,eax
  407b72:	call   42e520 <strcmp@plt+0x2ad88>
  407b77:	jmp    407b04 <strcmp@plt+0x436c>
  407b79:	xor    ebx,ebx
  407b7b:	jmp    407b04 <strcmp@plt+0x436c>
  407b7d:	nop    DWORD PTR [rax]
  407b80:	push   rbx
  407b81:	mov    edi,0x8
  407b86:	call   431d60 <strcmp@plt+0x2e5c8>
  407b8b:	test   rax,rax
  407b8e:	je     407ba2 <strcmp@plt+0x440a>
  407b90:	mov    rbx,rax
  407b93:	xor    eax,eax
  407b95:	call   42ea00 <strcmp@plt+0x2b268>
  407b9a:	mov    QWORD PTR [rbx],rax
  407b9d:	test   rax,rax
  407ba0:	jne    407bb7 <strcmp@plt+0x441f>
  407ba2:	lea    rsi,[rip+0x3bda4]        # 44394d <strcmp@plt+0x401b5>
  407ba9:	xor    ebx,ebx
  407bab:	mov    edi,0x1
  407bb0:	xor    eax,eax
  407bb2:	call   42e520 <strcmp@plt+0x2ad88>
  407bb7:	mov    rax,rbx
  407bba:	pop    rbx
  407bbb:	ret    
  407bbc:	nop    DWORD PTR [rax+0x0]
  407bc0:	push   rbx
  407bc1:	mov    rbx,rdi
  407bc4:	mov    rdi,QWORD PTR [rdi]
  407bc7:	lea    rsi,[rip+0x29d42]        # 431910 <strcmp@plt+0x2e178>
  407bce:	call   42ec10 <strcmp@plt+0x2b478>
  407bd3:	mov    rdi,rbx
  407bd6:	pop    rbx
  407bd7:	jmp    403790 <free@plt>
  407bdc:	nop    DWORD PTR [rax+0x0]
  407be0:	push   rbp
  407be1:	push   rbx
  407be2:	push   rax
  407be3:	mov    rbx,rsi
  407be6:	mov    rbp,rdi
  407be9:	mov    rdi,rsi
  407bec:	call   431840 <strcmp@plt+0x2e0a8>
  407bf1:	mov    rdi,rax
  407bf4:	call   422dd0 <strcmp@plt+0x1f638>
  407bf9:	mov    rdi,QWORD PTR [rbp+0x0]
  407bfd:	mov    rsi,rax
  407c00:	mov    rdx,rbx
  407c03:	call   42ee50 <strcmp@plt+0x2b6b8>
  407c08:	mov    ebp,0x1
  407c0d:	cmp    eax,0x1
  407c10:	je     407c48 <strcmp@plt+0x44b0>
  407c12:	lea    rax,[rip+0x5d1a7]        # 464dc0 <strcmp@plt+0x61628>
  407c19:	xor    ebp,ebp
  407c1b:	cmp    DWORD PTR [rax],0x3
  407c1e:	jl     407c48 <strcmp@plt+0x44b0>
  407c20:	mov    rdi,rbx
  407c23:	call   431840 <strcmp@plt+0x2e0a8>
  407c28:	mov    rdi,rax
  407c2b:	call   422e20 <strcmp@plt+0x1f688>
  407c30:	lea    rsi,[rip+0x3bd39]        # 443970 <strcmp@plt+0x401d8>
  407c37:	xor    ebp,ebp
  407c39:	mov    edi,0x7
  407c3e:	mov    rdx,rax
  407c41:	xor    eax,eax
  407c43:	call   42e520 <strcmp@plt+0x2ad88>
  407c48:	mov    eax,ebp
  407c4a:	add    rsp,0x8
  407c4e:	pop    rbx
  407c4f:	pop    rbp
  407c50:	ret    
  407c51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  407c60:	push   rbp
  407c61:	push   r15
  407c63:	push   r14
  407c65:	push   r12
  407c67:	push   rbx
  407c68:	mov    r15d,edx
  407c6b:	mov    rbx,rsi
  407c6e:	mov    rbp,rdi
  407c71:	xor    r12d,r12d
  407c74:	cmp    DWORD PTR [rsi+0x18],0x3
  407c78:	jne    407ca0 <strcmp@plt+0x4508>
  407c7a:	mov    rdi,rbx
  407c7d:	call   426950 <strcmp@plt+0x231b8>
  407c82:	test   eax,eax
  407c84:	je     407d1e <strcmp@plt+0x4586>
  407c8a:	mov    rdi,rbx
  407c8d:	call   426d40 <strcmp@plt+0x235a8>
  407c92:	mov    r12d,eax
  407c95:	mov    rdi,rbx
  407c98:	call   422dd0 <strcmp@plt+0x1f638>
  407c9d:	mov    rsi,rax
  407ca0:	mov    rdi,QWORD PTR [rbp+0x0]
  407ca4:	call   42f990 <strcmp@plt+0x2c1f8>
  407ca9:	test   rax,rax
  407cac:	je     407cf9 <strcmp@plt+0x4561>
  407cae:	mov    r14,rax
  407cb1:	test   r15b,r15b
  407cb4:	je     407d62 <strcmp@plt+0x45ca>
  407cba:	mov    rdi,r14
  407cbd:	call   431840 <strcmp@plt+0x2e0a8>
  407cc2:	test   r12d,r12d
  407cc5:	je     407d4d <strcmp@plt+0x45b5>
  407ccb:	mov    rdi,rax
  407cce:	call   426d40 <strcmp@plt+0x235a8>
  407cd3:	cmp    r12d,eax
  407cd6:	je     407d62 <strcmp@plt+0x45ca>
  407cdc:	lea    rax,[rip+0x5d0dd]        # 464dc0 <strcmp@plt+0x61628>
  407ce3:	cmp    DWORD PTR [rax],0x3
  407ce6:	jl     407d5f <strcmp@plt+0x45c7>
  407ce8:	mov    rdi,rbx
  407ceb:	call   422e20 <strcmp@plt+0x1f688>
  407cf0:	lea    rsi,[rip+0x3bd27]        # 443a1e <strcmp@plt+0x40286>
  407cf7:	jmp    407d14 <strcmp@plt+0x457c>
  407cf9:	lea    rax,[rip+0x5d0c0]        # 464dc0 <strcmp@plt+0x61628>
  407d00:	cmp    DWORD PTR [rax],0x3
  407d03:	jl     407d5f <strcmp@plt+0x45c7>
  407d05:	mov    rdi,rbx
  407d08:	call   422e20 <strcmp@plt+0x1f688>
  407d0d:	lea    rsi,[rip+0x3bcce]        # 4439e2 <strcmp@plt+0x4024a>
  407d14:	xor    r14d,r14d
  407d17:	mov    edi,0x7
  407d1c:	jmp    407d41 <strcmp@plt+0x45a9>
  407d1e:	lea    rax,[rip+0x5d09b]        # 464dc0 <strcmp@plt+0x61628>
  407d25:	cmp    DWORD PTR [rax],0x2
  407d28:	jl     407d5f <strcmp@plt+0x45c7>
  407d2a:	mov    rdi,rbx
  407d2d:	call   422e20 <strcmp@plt+0x1f688>
  407d32:	lea    rsi,[rip+0x3bc72]        # 4439ab <strcmp@plt+0x40213>
  407d39:	xor    r14d,r14d
  407d3c:	mov    edi,0x6
  407d41:	mov    rdx,rax
  407d44:	xor    eax,eax
  407d46:	call   42e520 <strcmp@plt+0x2ad88>
  407d4b:	jmp    407d62 <strcmp@plt+0x45ca>
  407d4d:	cmp    DWORD PTR [rax+0x18],0x3
  407d51:	jne    407d62 <strcmp@plt+0x45ca>
  407d53:	lea    rax,[rip+0x5d066]        # 464dc0 <strcmp@plt+0x61628>
  407d5a:	cmp    DWORD PTR [rax],0x3
  407d5d:	jge    407d6e <strcmp@plt+0x45d6>
  407d5f:	xor    r14d,r14d
  407d62:	mov    rax,r14
  407d65:	pop    rbx
  407d66:	pop    r12
  407d68:	pop    r14
  407d6a:	pop    r15
  407d6c:	pop    rbp
  407d6d:	ret    
  407d6e:	mov    rdi,rbx
  407d71:	call   422e20 <strcmp@plt+0x1f688>
  407d76:	lea    rsi,[rip+0x3bcec]        # 443a69 <strcmp@plt+0x402d1>
  407d7d:	jmp    407d14 <strcmp@plt+0x457c>
  407d7f:	nop
  407d80:	push   r14
  407d82:	push   rbx
  407d83:	push   rax
  407d84:	mov    rbx,rsi
  407d87:	mov    r14,rdi
  407d8a:	cmp    DWORD PTR [rsi+0x18],0x3
  407d8e:	jne    407da7 <strcmp@plt+0x460f>
  407d90:	mov    rdi,rbx
  407d93:	call   426950 <strcmp@plt+0x231b8>
  407d98:	test   eax,eax
  407d9a:	je     407e10 <strcmp@plt+0x4678>
  407d9c:	mov    rdi,rbx
  407d9f:	call   422dd0 <strcmp@plt+0x1f638>
  407da4:	mov    rsi,rax
  407da7:	mov    rdi,QWORD PTR [r14]
  407daa:	call   42f9b0 <strcmp@plt+0x2c218>
  407daf:	test   rax,rax
  407db2:	je     407deb <strcmp@plt+0x4653>
  407db4:	mov    r14,rax
  407db7:	mov    rdi,rax
  407dba:	call   431840 <strcmp@plt+0x2e0a8>
  407dbf:	mov    rdi,rax
  407dc2:	mov    rsi,rbx
  407dc5:	call   423670 <strcmp@plt+0x1fed8>
  407dca:	test   eax,eax
  407dcc:	je     407e42 <strcmp@plt+0x46aa>
  407dce:	lea    rax,[rip+0x5cfeb]        # 464dc0 <strcmp@plt+0x61628>
  407dd5:	cmp    DWORD PTR [rax],0x3
  407dd8:	jl     407e1c <strcmp@plt+0x4684>
  407dda:	mov    rdi,rbx
  407ddd:	call   422e20 <strcmp@plt+0x1f688>
  407de2:	lea    rsi,[rip+0x3bccb]        # 443ab4 <strcmp@plt+0x4031c>
  407de9:	jmp    407e06 <strcmp@plt+0x466e>
  407deb:	lea    rax,[rip+0x5cfce]        # 464dc0 <strcmp@plt+0x61628>
  407df2:	cmp    DWORD PTR [rax],0x3
  407df5:	jl     407e1c <strcmp@plt+0x4684>
  407df7:	mov    rdi,rbx
  407dfa:	call   422e20 <strcmp@plt+0x1f688>
  407dff:	lea    rsi,[rip+0x3bbdc]        # 4439e2 <strcmp@plt+0x4024a>
  407e06:	xor    r14d,r14d
  407e09:	mov    edi,0x7
  407e0e:	jmp    407e38 <strcmp@plt+0x46a0>
  407e10:	lea    rax,[rip+0x5cfa9]        # 464dc0 <strcmp@plt+0x61628>
  407e17:	cmp    DWORD PTR [rax],0x2
  407e1a:	jge    407e21 <strcmp@plt+0x4689>
  407e1c:	xor    r14d,r14d
  407e1f:	jmp    407e42 <strcmp@plt+0x46aa>
  407e21:	mov    rdi,rbx
  407e24:	call   422e20 <strcmp@plt+0x1f688>
  407e29:	lea    rsi,[rip+0x3bb7b]        # 4439ab <strcmp@plt+0x40213>
  407e30:	xor    r14d,r14d
  407e33:	mov    edi,0x6
  407e38:	mov    rdx,rax
  407e3b:	xor    eax,eax
  407e3d:	call   42e520 <strcmp@plt+0x2ad88>
  407e42:	mov    rax,r14
  407e45:	add    rsp,0x8
  407e49:	pop    rbx
  407e4a:	pop    r14
  407e4c:	ret    
  407e4d:	nop    DWORD PTR [rax]
  407e50:	push   rax
  407e51:	mov    rdi,QWORD PTR [rdi]
  407e54:	call   42f270 <strcmp@plt+0x2bad8>
  407e59:	test   rax,rax
  407e5c:	je     407e67 <strcmp@plt+0x46cf>
  407e5e:	mov    rdi,rax
  407e61:	pop    rax
  407e62:	jmp    431910 <strcmp@plt+0x2e178>
  407e67:	pop    rax
  407e68:	ret    
  407e69:	nop    DWORD PTR [rax+0x0]
  407e70:	push   rbp
  407e71:	push   r15
  407e73:	push   r14
  407e75:	push   r13
  407e77:	push   r12
  407e79:	push   rbx
  407e7a:	sub    rsp,0x828
  407e81:	mov    DWORD PTR [rsp+0x4],esi
  407e85:	mov    r15,rdi
  407e88:	call   42b980 <strcmp@plt+0x281e8>
  407e8d:	mov    r12,rax
  407e90:	mov    rax,QWORD PTR [r15]
  407e93:	mov    rdi,QWORD PTR [rax]
  407e96:	mov    rsi,r12
  407e99:	call   42baa0 <strcmp@plt+0x28308>
  407e9e:	mov    rax,QWORD PTR [r15]
  407ea1:	mov    rdi,QWORD PTR [rax+0x8]
  407ea5:	mov    rsi,r12
  407ea8:	call   42baa0 <strcmp@plt+0x28308>
  407ead:	mov    rax,QWORD PTR [r15]
  407eb0:	mov    rcx,QWORD PTR [rax+0x10]
  407eb4:	mov    rcx,QWORD PTR [rcx]
  407eb7:	cmp    DWORD PTR [rcx],0x0
  407eba:	je     407f10 <strcmp@plt+0x4778>
  407ebc:	xor    ebx,ebx
  407ebe:	mov    r13d,0x3
  407ec4:	xor    ebp,ebp
  407ec6:	jmp    407ee0 <strcmp@plt+0x4748>
  407ec8:	nop    DWORD PTR [rax+rax*1+0x0]
  407ed0:	inc    ebp
  407ed2:	mov    rcx,QWORD PTR [rax+0x10]
  407ed6:	mov    rcx,QWORD PTR [rcx]
  407ed9:	add    ebx,0x2
  407edc:	cmp    ebp,DWORD PTR [rcx]
  407ede:	je     407f10 <strcmp@plt+0x4778>
  407ee0:	mov    rdx,QWORD PTR [rcx+0x10]
  407ee4:	mov    esi,ebp
  407ee6:	shr    esi,0x4
  407ee9:	mov    edi,ebx
  407eeb:	and    dil,0x1e
  407eef:	shlx   edi,r13d,edi
  407ef4:	test   DWORD PTR [rdx+rsi*4],edi
  407ef7:	jne    407ed0 <strcmp@plt+0x4738>
  407ef9:	mov    rax,QWORD PTR [rcx+0x20]
  407efd:	mov    ecx,ebp
  407eff:	mov    rdi,QWORD PTR [rax+rcx*8]
  407f03:	mov    rsi,r12
  407f06:	call   42baa0 <strcmp@plt+0x28308>
  407f0b:	mov    rax,QWORD PTR [r15]
  407f0e:	jmp    407ed0 <strcmp@plt+0x4738>
  407f10:	mov    rcx,QWORD PTR [rax+0x18]
  407f14:	mov    rcx,QWORD PTR [rcx]
  407f17:	cmp    DWORD PTR [rcx],0x0
  407f1a:	je     407f70 <strcmp@plt+0x47d8>
  407f1c:	xor    ebx,ebx
  407f1e:	mov    r13d,0x3
  407f24:	xor    ebp,ebp
  407f26:	jmp    407f40 <strcmp@plt+0x47a8>
  407f28:	nop    DWORD PTR [rax+rax*1+0x0]
  407f30:	inc    ebp
  407f32:	mov    rcx,QWORD PTR [rax+0x18]
  407f36:	mov    rcx,QWORD PTR [rcx]
  407f39:	add    ebx,0x2
  407f3c:	cmp    ebp,DWORD PTR [rcx]
  407f3e:	je     407f70 <strcmp@plt+0x47d8>
  407f40:	mov    rdx,QWORD PTR [rcx+0x10]
  407f44:	mov    esi,ebp
  407f46:	shr    esi,0x4
  407f49:	mov    edi,ebx
  407f4b:	and    dil,0x1e
  407f4f:	shlx   edi,r13d,edi
  407f54:	test   DWORD PTR [rdx+rsi*4],edi
  407f57:	jne    407f30 <strcmp@plt+0x4798>
  407f59:	mov    rax,QWORD PTR [rcx+0x20]
  407f5d:	mov    ecx,ebp
  407f5f:	mov    rdi,QWORD PTR [rax+rcx*8]
  407f63:	mov    rsi,r12
  407f66:	call   42baa0 <strcmp@plt+0x28308>
  407f6b:	mov    rax,QWORD PTR [r15]
  407f6e:	jmp    407f30 <strcmp@plt+0x4798>
  407f70:	mov    rax,QWORD PTR [r12+0x8]
  407f75:	cmp    rax,r12
  407f78:	je     4080b2 <strcmp@plt+0x491a>
  407f7e:	mov    QWORD PTR [rsp+0x8],rax
  407f83:	mov    rax,QWORD PTR [rax+0x10]
  407f87:	mov    rbx,QWORD PTR [rax]
  407f8a:	test   rbx,rbx
  407f8d:	je     4080a0 <strcmp@plt+0x4908>
  407f93:	xor    r13d,r13d
  407f96:	cmp    QWORD PTR [rbx+0x8],0x0
  407f9b:	jne    407fd3 <strcmp@plt+0x483b>
  407f9d:	jmp    408060 <strcmp@plt+0x48c8>
  407fa2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407fac:	nop    DWORD PTR [rax+0x0]
  407fb0:	test   rcx,rcx
  407fb3:	je     40808a <strcmp@plt+0x48f2>
  407fb9:	mov    rax,rcx
  407fbc:	mov    rbx,rax
  407fbf:	test   rax,rax
  407fc2:	je     4080a0 <strcmp@plt+0x4908>
  407fc8:	cmp    QWORD PTR [rbx+0x8],0x0
  407fcd:	je     408060 <strcmp@plt+0x48c8>
  407fd3:	mov    rax,QWORD PTR [rbx+0x28]
  407fd7:	mov    r14,QWORD PTR [rax]
  407fda:	test   r14,r14
  407fdd:	je     408060 <strcmp@plt+0x48c8>
  407fe3:	xor    r15d,r15d
  407fe6:	cmp    QWORD PTR [r14+0x8],0x0
  407feb:	jne    408007 <strcmp@plt+0x486f>
  407fed:	jmp    408032 <strcmp@plt+0x489a>
  407fef:	nop
  407ff0:	test   rcx,rcx
  407ff3:	je     40804e <strcmp@plt+0x48b6>
  407ff5:	mov    rax,rcx
  407ff8:	mov    r14,rax
  407ffb:	test   rax,rax
  407ffe:	je     408060 <strcmp@plt+0x48c8>
  408000:	cmp    QWORD PTR [r14+0x8],0x0
  408005:	je     408032 <strcmp@plt+0x489a>
  408007:	mov    rdi,QWORD PTR [r14+0x28]
  40800b:	test   rdi,rdi
  40800e:	je     408032 <strcmp@plt+0x489a>
  408010:	call   431840 <strcmp@plt+0x2e0a8>
  408015:	test   rax,rax
  408018:	je     408032 <strcmp@plt+0x489a>
  40801a:	mov    rbp,rax
  40801d:	mov    rdi,rax
  408020:	call   422ef0 <strcmp@plt+0x1f758>
  408025:	movzx  eax,ax
  408028:	cmp    eax,DWORD PTR [rsp+0x4]
  40802c:	je     4080b4 <strcmp@plt+0x491c>
  408032:	mov    rax,QWORD PTR [r14+0x10]
  408036:	mov    rcx,QWORD PTR [r14+0x18]
  40803a:	test   rax,rax
  40803d:	je     407ff0 <strcmp@plt+0x4858>
  40803f:	test   rcx,rcx
  408042:	je     407ff8 <strcmp@plt+0x4860>
  408044:	mov    QWORD PTR [rsp+r15*8+0x10],rcx
  408049:	inc    r15
  40804c:	jmp    407ff8 <strcmp@plt+0x4860>
  40804e:	test   r15,r15
  408051:	je     408060 <strcmp@plt+0x48c8>
  408053:	mov    rax,QWORD PTR [rsp+r15*8+0x8]
  408058:	dec    r15
  40805b:	jmp    407ff8 <strcmp@plt+0x4860>
  40805d:	nop    DWORD PTR [rax]
  408060:	mov    rax,QWORD PTR [rbx+0x10]
  408064:	mov    rcx,QWORD PTR [rbx+0x18]
  408068:	test   rax,rax
  40806b:	je     407fb0 <strcmp@plt+0x4818>
  408071:	test   rcx,rcx
  408074:	je     407fbc <strcmp@plt+0x4824>
  40807a:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  408082:	inc    r13
  408085:	jmp    407fbc <strcmp@plt+0x4824>
  40808a:	test   r13,r13
  40808d:	je     4080a0 <strcmp@plt+0x4908>
  40808f:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  408097:	dec    r13
  40809a:	jmp    407fbc <strcmp@plt+0x4824>
  40809f:	nop
  4080a0:	mov    rax,QWORD PTR [rsp+0x8]
  4080a5:	mov    rax,QWORD PTR [rax+0x8]
  4080a9:	cmp    rax,r12
  4080ac:	jne    407f7e <strcmp@plt+0x47e6>
  4080b2:	xor    ebp,ebp
  4080b4:	mov    rdi,r12
  4080b7:	call   42bff0 <strcmp@plt+0x28858>
  4080bc:	mov    rax,rbp
  4080bf:	add    rsp,0x828
  4080c6:	pop    rbx
  4080c7:	pop    r12
  4080c9:	pop    r13
  4080cb:	pop    r14
  4080cd:	pop    r15
  4080cf:	pop    rbp
  4080d0:	ret    
  4080d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4080db:	nop    DWORD PTR [rax+rax*1+0x0]
  4080e0:	push   rbp
  4080e1:	push   r15
  4080e3:	push   r14
  4080e5:	push   r13
  4080e7:	push   r12
  4080e9:	push   rbx
  4080ea:	sub    rsp,0x828
  4080f1:	mov    r12d,esi
  4080f4:	mov    r14,rdi
  4080f7:	call   42b980 <strcmp@plt+0x281e8>
  4080fc:	mov    rbx,rax
  4080ff:	mov    rax,QWORD PTR [r14]
  408102:	mov    rdi,QWORD PTR [rax]
  408105:	mov    rsi,rbx
  408108:	call   42baa0 <strcmp@plt+0x28308>
  40810d:	mov    rax,QWORD PTR [r14]
  408110:	mov    rdi,QWORD PTR [rax+0x8]
  408114:	mov    QWORD PTR [rsp],rbx
  408118:	mov    rsi,rbx
  40811b:	call   42baa0 <strcmp@plt+0x28308>
  408120:	mov    rax,QWORD PTR [r14]
  408123:	mov    rcx,QWORD PTR [rax+0x10]
  408127:	mov    rcx,QWORD PTR [rcx]
  40812a:	cmp    DWORD PTR [rcx],0x0
  40812d:	je     408181 <strcmp@plt+0x49e9>
  40812f:	xor    ebp,ebp
  408131:	mov    r15d,0x3
  408137:	xor    ebx,ebx
  408139:	jmp    408150 <strcmp@plt+0x49b8>
  40813b:	nop    DWORD PTR [rax+rax*1+0x0]
  408140:	inc    ebx
  408142:	mov    rcx,QWORD PTR [rax+0x10]
  408146:	mov    rcx,QWORD PTR [rcx]
  408149:	add    ebp,0x2
  40814c:	cmp    ebx,DWORD PTR [rcx]
  40814e:	je     408181 <strcmp@plt+0x49e9>
  408150:	mov    rdx,QWORD PTR [rcx+0x10]
  408154:	mov    esi,ebx
  408156:	shr    esi,0x4
  408159:	mov    edi,ebp
  40815b:	and    dil,0x1e
  40815f:	shlx   edi,r15d,edi
  408164:	test   DWORD PTR [rdx+rsi*4],edi
  408167:	jne    408140 <strcmp@plt+0x49a8>
  408169:	mov    rax,QWORD PTR [rcx+0x20]
  40816d:	mov    ecx,ebx
  40816f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408173:	mov    rsi,QWORD PTR [rsp]
  408177:	call   42baa0 <strcmp@plt+0x28308>
  40817c:	mov    rax,QWORD PTR [r14]
  40817f:	jmp    408140 <strcmp@plt+0x49a8>
  408181:	mov    rcx,QWORD PTR [rax+0x18]
  408185:	mov    rcx,QWORD PTR [rcx]
  408188:	cmp    DWORD PTR [rcx],0x0
  40818b:	je     4081e1 <strcmp@plt+0x4a49>
  40818d:	xor    ebx,ebx
  40818f:	mov    r15d,0x3
  408195:	xor    ebp,ebp
  408197:	jmp    4081b0 <strcmp@plt+0x4a18>
  408199:	nop    DWORD PTR [rax+0x0]
  4081a0:	inc    ebp
  4081a2:	mov    rcx,QWORD PTR [rax+0x18]
  4081a6:	mov    rcx,QWORD PTR [rcx]
  4081a9:	add    ebx,0x2
  4081ac:	cmp    ebp,DWORD PTR [rcx]
  4081ae:	je     4081e1 <strcmp@plt+0x4a49>
  4081b0:	mov    rdx,QWORD PTR [rcx+0x10]
  4081b4:	mov    esi,ebp
  4081b6:	shr    esi,0x4
  4081b9:	mov    edi,ebx
  4081bb:	and    dil,0x1e
  4081bf:	shlx   edi,r15d,edi
  4081c4:	test   DWORD PTR [rdx+rsi*4],edi
  4081c7:	jne    4081a0 <strcmp@plt+0x4a08>
  4081c9:	mov    rax,QWORD PTR [rcx+0x20]
  4081cd:	mov    ecx,ebp
  4081cf:	mov    rdi,QWORD PTR [rax+rcx*8]
  4081d3:	mov    rsi,QWORD PTR [rsp]
  4081d7:	call   42baa0 <strcmp@plt+0x28308>
  4081dc:	mov    rax,QWORD PTR [r14]
  4081df:	jmp    4081a0 <strcmp@plt+0x4a08>
  4081e1:	mov    rax,QWORD PTR [rsp]
  4081e5:	mov    rcx,QWORD PTR [rax+0x8]
  4081e9:	xor    ebx,ebx
  4081eb:	cmp    rcx,rax
  4081ee:	jne    408213 <strcmp@plt+0x4a7b>
  4081f0:	jmp    408343 <strcmp@plt+0x4bab>
  4081f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081ff:	nop
  408200:	mov    rcx,QWORD PTR [rsp+0x8]
  408205:	mov    rcx,QWORD PTR [rcx+0x8]
  408209:	cmp    rcx,QWORD PTR [rsp]
  40820d:	je     408343 <strcmp@plt+0x4bab>
  408213:	mov    rax,QWORD PTR [rcx+0x10]
  408217:	mov    rbp,QWORD PTR [rax]
  40821a:	test   rbp,rbp
  40821d:	mov    QWORD PTR [rsp+0x8],rcx
  408222:	je     408200 <strcmp@plt+0x4a68>
  408224:	xor    r13d,r13d
  408227:	cmp    QWORD PTR [rbp+0x8],0x0
  40822c:	jne    40825f <strcmp@plt+0x4ac7>
  40822e:	jmp    408300 <strcmp@plt+0x4b68>
  408233:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40823d:	nop    DWORD PTR [rax]
  408240:	test   rcx,rcx
  408243:	je     40832a <strcmp@plt+0x4b92>
  408249:	mov    rax,rcx
  40824c:	mov    rbp,rax
  40824f:	test   rax,rax
  408252:	je     408200 <strcmp@plt+0x4a68>
  408254:	cmp    QWORD PTR [rbp+0x8],0x0
  408259:	je     408300 <strcmp@plt+0x4b68>
  40825f:	mov    rax,QWORD PTR [rbp+0x28]
  408263:	mov    r15,QWORD PTR [rax]
  408266:	test   r15,r15
  408269:	je     408300 <strcmp@plt+0x4b68>
  40826f:	xor    r14d,r14d
  408272:	cmp    QWORD PTR [r15+0x8],0x0
  408277:	jne    408297 <strcmp@plt+0x4aff>
  408279:	jmp    4082d0 <strcmp@plt+0x4b38>
  40827b:	nop    DWORD PTR [rax+rax*1+0x0]
  408280:	test   rcx,rcx
  408283:	je     4082ec <strcmp@plt+0x4b54>
  408285:	mov    rax,rcx
  408288:	mov    r15,rax
  40828b:	test   rax,rax
  40828e:	je     408300 <strcmp@plt+0x4b68>
  408290:	cmp    QWORD PTR [r15+0x8],0x0
  408295:	je     4082d0 <strcmp@plt+0x4b38>
  408297:	mov    rdi,QWORD PTR [r15+0x28]
  40829b:	test   rdi,rdi
  40829e:	je     4082d0 <strcmp@plt+0x4b38>
  4082a0:	call   431840 <strcmp@plt+0x2e0a8>
  4082a5:	test   rax,rax
  4082a8:	je     4082d0 <strcmp@plt+0x4b38>
  4082aa:	cmp    DWORD PTR [rax+0x18],0x2
  4082ae:	jne    4082d0 <strcmp@plt+0x4b38>
  4082b0:	mov    rdi,rax
  4082b3:	call   422ef0 <strcmp@plt+0x1f758>
  4082b8:	movzx  eax,ax
  4082bb:	xor    ecx,ecx
  4082bd:	cmp    eax,r12d
  4082c0:	sete   cl
  4082c3:	add    ebx,ecx
  4082c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4082cf:	nop
  4082d0:	mov    rax,QWORD PTR [r15+0x10]
  4082d4:	mov    rcx,QWORD PTR [r15+0x18]
  4082d8:	test   rax,rax
  4082db:	je     408280 <strcmp@plt+0x4ae8>
  4082dd:	test   rcx,rcx
  4082e0:	je     408288 <strcmp@plt+0x4af0>
  4082e2:	mov    QWORD PTR [rsp+r14*8+0x10],rcx
  4082e7:	inc    r14
  4082ea:	jmp    408288 <strcmp@plt+0x4af0>
  4082ec:	test   r14,r14
  4082ef:	je     408300 <strcmp@plt+0x4b68>
  4082f1:	mov    rax,QWORD PTR [rsp+r14*8+0x8]
  4082f6:	dec    r14
  4082f9:	jmp    408288 <strcmp@plt+0x4af0>
  4082fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408300:	mov    rax,QWORD PTR [rbp+0x10]
  408304:	mov    rcx,QWORD PTR [rbp+0x18]
  408308:	test   rax,rax
  40830b:	je     408240 <strcmp@plt+0x4aa8>
  408311:	test   rcx,rcx
  408314:	je     40824c <strcmp@plt+0x4ab4>
  40831a:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  408322:	inc    r13
  408325:	jmp    40824c <strcmp@plt+0x4ab4>
  40832a:	test   r13,r13
  40832d:	je     408200 <strcmp@plt+0x4a68>
  408333:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  40833b:	dec    r13
  40833e:	jmp    40824c <strcmp@plt+0x4ab4>
  408343:	mov    rdi,QWORD PTR [rsp]
  408347:	call   42bff0 <strcmp@plt+0x28858>
  40834c:	mov    eax,ebx
  40834e:	add    rsp,0x828
  408355:	pop    rbx
  408356:	pop    r12
  408358:	pop    r13
  40835a:	pop    r14
  40835c:	pop    r15
  40835e:	pop    rbp
  40835f:	ret    
  408360:	mov    rax,QWORD PTR [rdi]
  408363:	mov    eax,DWORD PTR [rax+0x30]
  408366:	ret    
  408367:	nop    WORD PTR [rax+rax*1+0x0]
  408370:	push   rbp
  408371:	push   r15
  408373:	push   r14
  408375:	push   r13
  408377:	push   r12
  408379:	push   rbx
  40837a:	sub    rsp,0x828
  408381:	mov    r12d,esi
  408384:	mov    r15,rdi
  408387:	cmp    esi,0x5
  40838a:	jl     40839d <strcmp@plt+0x4c05>
  40838c:	lea    rax,[rip+0x5ca2d]        # 464dc0 <strcmp@plt+0x61628>
  408393:	mov    eax,DWORD PTR [rax]
  408395:	add    eax,0x4
  408398:	cmp    eax,r12d
  40839b:	jl     4083ae <strcmp@plt+0x4c16>
  40839d:	lea    rsi,[rip+0x3b74d]        # 443af1 <strcmp@plt+0x40359>
  4083a4:	mov    edi,r12d
  4083a7:	xor    eax,eax
  4083a9:	call   42e520 <strcmp@plt+0x2ad88>
  4083ae:	call   42b980 <strcmp@plt+0x281e8>
  4083b3:	mov    rbx,rax
  4083b6:	mov    rax,QWORD PTR [r15]
  4083b9:	mov    rdi,QWORD PTR [rax]
  4083bc:	mov    rsi,rbx
  4083bf:	call   42baa0 <strcmp@plt+0x28308>
  4083c4:	mov    rax,QWORD PTR [r15]
  4083c7:	mov    rdi,QWORD PTR [rax+0x8]
  4083cb:	mov    QWORD PTR [rsp+0x8],rbx
  4083d0:	mov    rsi,rbx
  4083d3:	call   42baa0 <strcmp@plt+0x28308>
  4083d8:	mov    rax,QWORD PTR [r15]
  4083db:	mov    rcx,QWORD PTR [rax+0x10]
  4083df:	mov    rcx,QWORD PTR [rcx]
  4083e2:	cmp    DWORD PTR [rcx],0x0
  4083e5:	je     408442 <strcmp@plt+0x4caa>
  4083e7:	xor    ebx,ebx
  4083e9:	mov    r13d,0x3
  4083ef:	xor    ebp,ebp
  4083f1:	jmp    408410 <strcmp@plt+0x4c78>
  4083f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4083fd:	nop    DWORD PTR [rax]
  408400:	inc    ebp
  408402:	mov    rcx,QWORD PTR [rax+0x10]
  408406:	mov    rcx,QWORD PTR [rcx]
  408409:	add    ebx,0x2
  40840c:	cmp    ebp,DWORD PTR [rcx]
  40840e:	je     408442 <strcmp@plt+0x4caa>
  408410:	mov    rdx,QWORD PTR [rcx+0x10]
  408414:	mov    esi,ebp
  408416:	shr    esi,0x4
  408419:	mov    edi,ebx
  40841b:	and    dil,0x1e
  40841f:	shlx   edi,r13d,edi
  408424:	test   DWORD PTR [rdx+rsi*4],edi
  408427:	jne    408400 <strcmp@plt+0x4c68>
  408429:	mov    rax,QWORD PTR [rcx+0x20]
  40842d:	mov    ecx,ebp
  40842f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408433:	mov    rsi,QWORD PTR [rsp+0x8]
  408438:	call   42baa0 <strcmp@plt+0x28308>
  40843d:	mov    rax,QWORD PTR [r15]
  408440:	jmp    408400 <strcmp@plt+0x4c68>
  408442:	mov    rcx,QWORD PTR [rax+0x18]
  408446:	mov    rcx,QWORD PTR [rcx]
  408449:	cmp    DWORD PTR [rcx],0x0
  40844c:	je     4084a2 <strcmp@plt+0x4d0a>
  40844e:	xor    ebx,ebx
  408450:	mov    r13d,0x3
  408456:	xor    ebp,ebp
  408458:	jmp    408470 <strcmp@plt+0x4cd8>
  40845a:	nop    WORD PTR [rax+rax*1+0x0]
  408460:	inc    ebp
  408462:	mov    rcx,QWORD PTR [rax+0x18]
  408466:	mov    rcx,QWORD PTR [rcx]
  408469:	add    ebx,0x2
  40846c:	cmp    ebp,DWORD PTR [rcx]
  40846e:	je     4084a2 <strcmp@plt+0x4d0a>
  408470:	mov    rdx,QWORD PTR [rcx+0x10]
  408474:	mov    esi,ebp
  408476:	shr    esi,0x4
  408479:	mov    edi,ebx
  40847b:	and    dil,0x1e
  40847f:	shlx   edi,r13d,edi
  408484:	test   DWORD PTR [rdx+rsi*4],edi
  408487:	jne    408460 <strcmp@plt+0x4cc8>
  408489:	mov    rax,QWORD PTR [rcx+0x20]
  40848d:	mov    ecx,ebp
  40848f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408493:	mov    rsi,QWORD PTR [rsp+0x8]
  408498:	call   42baa0 <strcmp@plt+0x28308>
  40849d:	mov    rax,QWORD PTR [r15]
  4084a0:	jmp    408460 <strcmp@plt+0x4cc8>
  4084a2:	mov    rdi,QWORD PTR [rax+0x20]
  4084a6:	mov    rbx,QWORD PTR [rsp+0x8]
  4084ab:	mov    rsi,rbx
  4084ae:	call   42baa0 <strcmp@plt+0x28308>
  4084b3:	mov    rax,QWORD PTR [r15]
  4084b6:	mov    rdi,QWORD PTR [rax+0x20]
  4084ba:	mov    rsi,rbx
  4084bd:	call   42baa0 <strcmp@plt+0x28308>
  4084c2:	mov    r15,QWORD PTR [rbx+0x8]
  4084c6:	cmp    r15,rbx
  4084c9:	jne    4084df <strcmp@plt+0x4d47>
  4084cb:	jmp    4085e3 <strcmp@plt+0x4e4b>
  4084d0:	mov    r15,QWORD PTR [r15+0x8]
  4084d4:	cmp    r15,QWORD PTR [rsp+0x8]
  4084d9:	je     4085e3 <strcmp@plt+0x4e4b>
  4084df:	mov    rax,QWORD PTR [r15+0x10]
  4084e3:	mov    rbp,QWORD PTR [rax]
  4084e6:	test   rbp,rbp
  4084e9:	je     4084d0 <strcmp@plt+0x4d38>
  4084eb:	xor    r13d,r13d
  4084ee:	cmp    QWORD PTR [rbp+0x8],0x0
  4084f3:	jne    40851f <strcmp@plt+0x4d87>
  4084f5:	jmp    4085a0 <strcmp@plt+0x4e08>
  4084fa:	nop    WORD PTR [rax+rax*1+0x0]
  408500:	test   rcx,rcx
  408503:	je     4085ca <strcmp@plt+0x4e32>
  408509:	mov    rax,rcx
  40850c:	mov    rbp,rax
  40850f:	test   rax,rax
  408512:	je     4084d0 <strcmp@plt+0x4d38>
  408514:	cmp    QWORD PTR [rbp+0x8],0x0
  408519:	je     4085a0 <strcmp@plt+0x4e08>
  40851f:	mov    rax,QWORD PTR [rbp+0x28]
  408523:	mov    r14,QWORD PTR [rax]
  408526:	test   r14,r14
  408529:	je     4085a0 <strcmp@plt+0x4e08>
  40852b:	xor    ebx,ebx
  40852d:	cmp    QWORD PTR [r14+0x8],0x0
  408532:	jne    408557 <strcmp@plt+0x4dbf>
  408534:	jmp    408568 <strcmp@plt+0x4dd0>
  408536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408540:	test   rcx,rcx
  408543:	je     408584 <strcmp@plt+0x4dec>
  408545:	mov    rax,rcx
  408548:	mov    r14,rax
  40854b:	test   rax,rax
  40854e:	je     4085a0 <strcmp@plt+0x4e08>
  408550:	cmp    QWORD PTR [r14+0x8],0x0
  408555:	je     408568 <strcmp@plt+0x4dd0>
  408557:	mov    rdi,QWORD PTR [r14+0x28]
  40855b:	test   rdi,rdi
  40855e:	je     408568 <strcmp@plt+0x4dd0>
  408560:	mov    esi,r12d
  408563:	call   431a20 <strcmp@plt+0x2e288>
  408568:	mov    rax,QWORD PTR [r14+0x10]
  40856c:	mov    rcx,QWORD PTR [r14+0x18]
  408570:	test   rax,rax
  408573:	je     408540 <strcmp@plt+0x4da8>
  408575:	test   rcx,rcx
  408578:	je     408548 <strcmp@plt+0x4db0>
  40857a:	mov    QWORD PTR [rsp+rbx*8+0x10],rcx
  40857f:	inc    rbx
  408582:	jmp    408548 <strcmp@plt+0x4db0>
  408584:	test   rbx,rbx
  408587:	je     4085a0 <strcmp@plt+0x4e08>
  408589:	mov    rax,QWORD PTR [rsp+rbx*8+0x8]
  40858e:	dec    rbx
  408591:	jmp    408548 <strcmp@plt+0x4db0>
  408593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40859d:	nop    DWORD PTR [rax]
  4085a0:	mov    rax,QWORD PTR [rbp+0x10]
  4085a4:	mov    rcx,QWORD PTR [rbp+0x18]
  4085a8:	test   rax,rax
  4085ab:	je     408500 <strcmp@plt+0x4d68>
  4085b1:	test   rcx,rcx
  4085b4:	je     40850c <strcmp@plt+0x4d74>
  4085ba:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  4085c2:	inc    r13
  4085c5:	jmp    40850c <strcmp@plt+0x4d74>
  4085ca:	test   r13,r13
  4085cd:	je     4084d0 <strcmp@plt+0x4d38>
  4085d3:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  4085db:	dec    r13
  4085de:	jmp    40850c <strcmp@plt+0x4d74>
  4085e3:	mov    rdi,QWORD PTR [rsp+0x8]
  4085e8:	call   42bff0 <strcmp@plt+0x28858>
  4085ed:	cmp    r12d,0x5
  4085f1:	jl     408616 <strcmp@plt+0x4e7e>
  4085f3:	lea    rax,[rip+0x5c7c6]        # 464dc0 <strcmp@plt+0x61628>
  4085fa:	mov    eax,DWORD PTR [rax]
  4085fc:	add    eax,0x4
  4085ff:	cmp    eax,r12d
  408602:	jge    408616 <strcmp@plt+0x4e7e>
  408604:	add    rsp,0x828
  40860b:	pop    rbx
  40860c:	pop    r12
  40860e:	pop    r13
  408610:	pop    r14
  408612:	pop    r15
  408614:	pop    rbp
  408615:	ret    
  408616:	lea    rsi,[rip+0x3ca92]        # 4450af <strcmp@plt+0x41917>
  40861d:	mov    edi,r12d
  408620:	xor    eax,eax
  408622:	add    rsp,0x828
  408629:	pop    rbx
  40862a:	pop    r12
  40862c:	pop    r13
  40862e:	pop    r14
  408630:	pop    r15
  408632:	pop    rbp
  408633:	jmp    42e520 <strcmp@plt+0x2ad88>
  408638:	nop    DWORD PTR [rax+rax*1+0x0]
  408640:	push   rbx
  408641:	mov    edi,0x8
  408646:	call   431d60 <strcmp@plt+0x2e5c8>
  40864b:	test   rax,rax
  40864e:	je     40866b <strcmp@plt+0x4ed3>
  408650:	mov    rbx,rax
  408653:	xor    eax,eax
  408655:	call   42ea00 <strcmp@plt+0x2b268>
  40865a:	mov    QWORD PTR [rbx],rax
  40865d:	test   rax,rax
  408660:	jne    408680 <strcmp@plt+0x4ee8>
  408662:	lea    rsi,[rip+0x3b4de]        # 443b47 <strcmp@plt+0x403af>
  408669:	jmp    408672 <strcmp@plt+0x4eda>
  40866b:	lea    rsi,[rip+0x3b4b8]        # 443b2a <strcmp@plt+0x40392>
  408672:	xor    ebx,ebx
  408674:	mov    edi,0x1
  408679:	xor    eax,eax
  40867b:	call   42e520 <strcmp@plt+0x2ad88>
  408680:	mov    rax,rbx
  408683:	pop    rbx
  408684:	ret    
  408685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40868f:	nop
  408690:	push   rbx
  408691:	mov    rbx,rdi
  408694:	mov    rdi,QWORD PTR [rdi]
  408697:	lea    rsi,[rip+0x28042]        # 4306e0 <strcmp@plt+0x2cf48>
  40869e:	call   42ec10 <strcmp@plt+0x2b478>
  4086a3:	mov    rdi,rbx
  4086a6:	pop    rbx
  4086a7:	jmp    403790 <free@plt>
  4086ac:	nop    DWORD PTR [rax+0x0]
  4086b0:	mov    rdi,QWORD PTR [rdi]
  4086b3:	jmp    42ee50 <strcmp@plt+0x2b6b8>
  4086b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4086c0:	mov    rdi,QWORD PTR [rdi]
  4086c3:	jmp    42f270 <strcmp@plt+0x2bad8>
  4086c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4086d0:	push   rbx
  4086d1:	mov    rdi,QWORD PTR [rdi]
  4086d4:	call   42f990 <strcmp@plt+0x2c1f8>
  4086d9:	test   rax,rax
  4086dc:	je     4086fc <strcmp@plt+0x4f64>
  4086de:	mov    rbx,rax
  4086e1:	mov    rdi,rax
  4086e4:	call   4307e0 <strcmp@plt+0x2d048>
  4086e9:	cmp    DWORD PTR [rax+0x18],0x2
  4086ed:	jne    4086fe <strcmp@plt+0x4f66>
  4086ef:	mov    rdi,rax
  4086f2:	call   422d90 <strcmp@plt+0x1f5f8>
  4086f7:	test   ax,ax
  4086fa:	jne    4086fe <strcmp@plt+0x4f66>
  4086fc:	xor    ebx,ebx
  4086fe:	mov    rax,rbx
  408701:	pop    rbx
  408702:	ret    
  408703:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40870d:	nop    DWORD PTR [rax]
  408710:	mov    rdi,QWORD PTR [rdi]
  408713:	jmp    42f9b0 <strcmp@plt+0x2c218>
  408718:	nop    DWORD PTR [rax+rax*1+0x0]
  408720:	push   r14
  408722:	push   rbx
  408723:	sub    rsp,0x28
  408727:	mov    rbx,rdi
  40872a:	cmp    esi,0x2
  40872d:	je     40873d <strcmp@plt+0x4fa5>
  40872f:	cmp    esi,0xa
  408732:	jne    40875e <strcmp@plt+0x4fc6>
  408734:	lea    rdi,[rip+0x3b427]        # 443b62 <strcmp@plt+0x403ca>
  40873b:	jmp    408744 <strcmp@plt+0x4fac>
  40873d:	lea    rdi,[rip+0x3a590]        # 442cd4 <strcmp@plt+0x3f53c>
  408744:	lea    r14,[rsp+0x8]
  408749:	mov    rsi,r14
  40874c:	call   423960 <strcmp@plt+0x201c8>
  408751:	mov    rdi,QWORD PTR [rbx]
  408754:	mov    rsi,r14
  408757:	call   42f9b0 <strcmp@plt+0x2c218>
  40875c:	jmp    408760 <strcmp@plt+0x4fc8>
  40875e:	xor    eax,eax
  408760:	add    rsp,0x28
  408764:	pop    rbx
  408765:	pop    r14
  408767:	ret    
  408768:	nop    DWORD PTR [rax+rax*1+0x0]
  408770:	push   rbp
  408771:	push   r15
  408773:	push   r14
  408775:	push   r13
  408777:	push   r12
  408779:	push   rbx
  40877a:	sub    rsp,0x828
  408781:	mov    r12d,esi
  408784:	mov    r15,rdi
  408787:	cmp    esi,0x5
  40878a:	jl     4087a1 <strcmp@plt+0x5009>
  40878c:	lea    rax,[rip+0x5c62d]        # 464dc0 <strcmp@plt+0x61628>
  408793:	mov    eax,DWORD PTR [rax]
  408795:	add    eax,0x4
  408798:	cmp    eax,r12d
  40879b:	jl     408a04 <strcmp@plt+0x526c>
  4087a1:	lea    rsi,[rip+0x3b3bf]        # 443b67 <strcmp@plt+0x403cf>
  4087a8:	xor    ebx,ebx
  4087aa:	mov    edi,r12d
  4087ad:	xor    eax,eax
  4087af:	call   42e520 <strcmp@plt+0x2ad88>
  4087b4:	call   42b980 <strcmp@plt+0x281e8>
  4087b9:	mov    rbp,rax
  4087bc:	mov    rax,QWORD PTR [r15]
  4087bf:	mov    rdi,QWORD PTR [rax]
  4087c2:	mov    rsi,rbp
  4087c5:	call   42baa0 <strcmp@plt+0x28308>
  4087ca:	mov    rax,QWORD PTR [r15]
  4087cd:	mov    rdi,QWORD PTR [rax+0x8]
  4087d1:	mov    QWORD PTR [rsp+0x8],rbp
  4087d6:	mov    rsi,rbp
  4087d9:	call   42baa0 <strcmp@plt+0x28308>
  4087de:	mov    rax,QWORD PTR [r15]
  4087e1:	mov    rcx,QWORD PTR [rax+0x10]
  4087e5:	mov    rcx,QWORD PTR [rcx]
  4087e8:	cmp    DWORD PTR [rcx],0x0
  4087eb:	je     408842 <strcmp@plt+0x50aa>
  4087ed:	mov    r13d,0x3
  4087f3:	xor    ebp,ebp
  4087f5:	jmp    408810 <strcmp@plt+0x5078>
  4087f7:	nop    WORD PTR [rax+rax*1+0x0]
  408800:	inc    ebp
  408802:	mov    rcx,QWORD PTR [rax+0x10]
  408806:	mov    rcx,QWORD PTR [rcx]
  408809:	add    ebx,0x2
  40880c:	cmp    ebp,DWORD PTR [rcx]
  40880e:	je     408842 <strcmp@plt+0x50aa>
  408810:	mov    rdx,QWORD PTR [rcx+0x10]
  408814:	mov    esi,ebp
  408816:	shr    esi,0x4
  408819:	mov    edi,ebx
  40881b:	and    dil,0x1e
  40881f:	shlx   edi,r13d,edi
  408824:	test   DWORD PTR [rdx+rsi*4],edi
  408827:	jne    408800 <strcmp@plt+0x5068>
  408829:	mov    rax,QWORD PTR [rcx+0x20]
  40882d:	mov    ecx,ebp
  40882f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408833:	mov    rsi,QWORD PTR [rsp+0x8]
  408838:	call   42baa0 <strcmp@plt+0x28308>
  40883d:	mov    rax,QWORD PTR [r15]
  408840:	jmp    408800 <strcmp@plt+0x5068>
  408842:	mov    rcx,QWORD PTR [rax+0x18]
  408846:	mov    rcx,QWORD PTR [rcx]
  408849:	cmp    DWORD PTR [rcx],0x0
  40884c:	je     4088a2 <strcmp@plt+0x510a>
  40884e:	xor    ebx,ebx
  408850:	mov    r13d,0x3
  408856:	xor    ebp,ebp
  408858:	jmp    408870 <strcmp@plt+0x50d8>
  40885a:	nop    WORD PTR [rax+rax*1+0x0]
  408860:	inc    ebp
  408862:	mov    rcx,QWORD PTR [rax+0x18]
  408866:	mov    rcx,QWORD PTR [rcx]
  408869:	add    ebx,0x2
  40886c:	cmp    ebp,DWORD PTR [rcx]
  40886e:	je     4088a2 <strcmp@plt+0x510a>
  408870:	mov    rdx,QWORD PTR [rcx+0x10]
  408874:	mov    esi,ebp
  408876:	shr    esi,0x4
  408879:	mov    edi,ebx
  40887b:	and    dil,0x1e
  40887f:	shlx   edi,r13d,edi
  408884:	test   DWORD PTR [rdx+rsi*4],edi
  408887:	jne    408860 <strcmp@plt+0x50c8>
  408889:	mov    rax,QWORD PTR [rcx+0x20]
  40888d:	mov    ecx,ebp
  40888f:	mov    rdi,QWORD PTR [rax+rcx*8]
  408893:	mov    rsi,QWORD PTR [rsp+0x8]
  408898:	call   42baa0 <strcmp@plt+0x28308>
  40889d:	mov    rax,QWORD PTR [r15]
  4088a0:	jmp    408860 <strcmp@plt+0x50c8>
  4088a2:	mov    rdi,QWORD PTR [rax+0x20]
  4088a6:	mov    rbx,QWORD PTR [rsp+0x8]
  4088ab:	mov    rsi,rbx
  4088ae:	call   42baa0 <strcmp@plt+0x28308>
  4088b3:	mov    rax,QWORD PTR [r15]
  4088b6:	mov    rdi,QWORD PTR [rax+0x20]
  4088ba:	mov    rsi,rbx
  4088bd:	call   42baa0 <strcmp@plt+0x28308>
  4088c2:	mov    r15,QWORD PTR [rbx+0x8]
  4088c6:	cmp    r15,rbx
  4088c9:	jne    4088df <strcmp@plt+0x5147>
  4088cb:	jmp    4089e3 <strcmp@plt+0x524b>
  4088d0:	mov    r15,QWORD PTR [r15+0x8]
  4088d4:	cmp    r15,QWORD PTR [rsp+0x8]
  4088d9:	je     4089e3 <strcmp@plt+0x524b>
  4088df:	mov    rax,QWORD PTR [r15+0x10]
  4088e3:	mov    rbp,QWORD PTR [rax]
  4088e6:	test   rbp,rbp
  4088e9:	je     4088d0 <strcmp@plt+0x5138>
  4088eb:	xor    r13d,r13d
  4088ee:	cmp    QWORD PTR [rbp+0x8],0x0
  4088f3:	jne    40891f <strcmp@plt+0x5187>
  4088f5:	jmp    4089a0 <strcmp@plt+0x5208>
  4088fa:	nop    WORD PTR [rax+rax*1+0x0]
  408900:	test   rcx,rcx
  408903:	je     4089ca <strcmp@plt+0x5232>
  408909:	mov    rax,rcx
  40890c:	mov    rbp,rax
  40890f:	test   rax,rax
  408912:	je     4088d0 <strcmp@plt+0x5138>
  408914:	cmp    QWORD PTR [rbp+0x8],0x0
  408919:	je     4089a0 <strcmp@plt+0x5208>
  40891f:	mov    rax,QWORD PTR [rbp+0x28]
  408923:	mov    r14,QWORD PTR [rax]
  408926:	test   r14,r14
  408929:	je     4089a0 <strcmp@plt+0x5208>
  40892b:	xor    ebx,ebx
  40892d:	cmp    QWORD PTR [r14+0x8],0x0
  408932:	jne    408957 <strcmp@plt+0x51bf>
  408934:	jmp    408968 <strcmp@plt+0x51d0>
  408936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408940:	test   rcx,rcx
  408943:	je     408984 <strcmp@plt+0x51ec>
  408945:	mov    rax,rcx
  408948:	mov    r14,rax
  40894b:	test   rax,rax
  40894e:	je     4089a0 <strcmp@plt+0x5208>
  408950:	cmp    QWORD PTR [r14+0x8],0x0
  408955:	je     408968 <strcmp@plt+0x51d0>
  408957:	mov    rdi,QWORD PTR [r14+0x28]
  40895b:	test   rdi,rdi
  40895e:	je     408968 <strcmp@plt+0x51d0>
  408960:	mov    esi,r12d
  408963:	call   430800 <strcmp@plt+0x2d068>
  408968:	mov    rax,QWORD PTR [r14+0x10]
  40896c:	mov    rcx,QWORD PTR [r14+0x18]
  408970:	test   rax,rax
  408973:	je     408940 <strcmp@plt+0x51a8>
  408975:	test   rcx,rcx
  408978:	je     408948 <strcmp@plt+0x51b0>
  40897a:	mov    QWORD PTR [rsp+rbx*8+0x10],rcx
  40897f:	inc    rbx
  408982:	jmp    408948 <strcmp@plt+0x51b0>
  408984:	test   rbx,rbx
  408987:	je     4089a0 <strcmp@plt+0x5208>
  408989:	mov    rax,QWORD PTR [rsp+rbx*8+0x8]
  40898e:	dec    rbx
  408991:	jmp    408948 <strcmp@plt+0x51b0>
  408993:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40899d:	nop    DWORD PTR [rax]
  4089a0:	mov    rax,QWORD PTR [rbp+0x10]
  4089a4:	mov    rcx,QWORD PTR [rbp+0x18]
  4089a8:	test   rax,rax
  4089ab:	je     408900 <strcmp@plt+0x5168>
  4089b1:	test   rcx,rcx
  4089b4:	je     40890c <strcmp@plt+0x5174>
  4089ba:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  4089c2:	inc    r13
  4089c5:	jmp    40890c <strcmp@plt+0x5174>
  4089ca:	test   r13,r13
  4089cd:	je     4088d0 <strcmp@plt+0x5138>
  4089d3:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  4089db:	dec    r13
  4089de:	jmp    40890c <strcmp@plt+0x5174>
  4089e3:	mov    rdi,QWORD PTR [rsp+0x8]
  4089e8:	call   42bff0 <strcmp@plt+0x28858>
  4089ed:	cmp    r12d,0x5
  4089f1:	jl     408a16 <strcmp@plt+0x527e>
  4089f3:	lea    rax,[rip+0x5c3c6]        # 464dc0 <strcmp@plt+0x61628>
  4089fa:	mov    eax,DWORD PTR [rax]
  4089fc:	add    eax,0x4
  4089ff:	cmp    eax,r12d
  408a02:	jge    408a16 <strcmp@plt+0x527e>
  408a04:	add    rsp,0x828
  408a0b:	pop    rbx
  408a0c:	pop    r12
  408a0e:	pop    r13
  408a10:	pop    r14
  408a12:	pop    r15
  408a14:	pop    rbp
  408a15:	ret    
  408a16:	lea    rsi,[rip+0x3c692]        # 4450af <strcmp@plt+0x41917>
  408a1d:	mov    edi,r12d
  408a20:	xor    eax,eax
  408a22:	add    rsp,0x828
  408a29:	pop    rbx
  408a2a:	pop    r12
  408a2c:	pop    r13
  408a2e:	pop    r14
  408a30:	pop    r15
  408a32:	pop    rbp
  408a33:	jmp    42e520 <strcmp@plt+0x2ad88>
  408a38:	nop    DWORD PTR [rax+rax*1+0x0]
  408a40:	push   rbp
  408a41:	push   r15
  408a43:	push   r14
  408a45:	push   rbx
  408a46:	sub    rsp,0x28
  408a4a:	mov    rax,QWORD PTR [rdi+0x8]
  408a4e:	cmp    rax,QWORD PTR [rip+0x5b58b]        # 463fe0 <strcmp@plt+0x60848>
  408a55:	jne    408b19 <strcmp@plt+0x5381>
  408a5b:	mov    rbx,rdi
  408a5e:	add    rdi,0x18
  408a62:	call   40a410 <strcmp@plt+0x6c78>
  408a67:	lea    r15,[rsp+0x8]
  408a6c:	xor    r14d,r14d
  408a6f:	mov    rdi,r15
  408a72:	xor    esi,esi
  408a74:	call   422e90 <strcmp@plt+0x1f6f8>
  408a79:	xor    eax,eax
  408a7b:	call   428ae0 <strcmp@plt+0x25348>
  408a80:	mov    rbp,rax
  408a83:	mov    rdi,rax
  408a86:	mov    rsi,r15
  408a89:	call   423260 <strcmp@plt+0x1fac8>
  408a8e:	test   rbp,rbp
  408a91:	je     408acf <strcmp@plt+0x5337>
  408a93:	mov    rdi,rbp
  408a96:	call   431860 <strcmp@plt+0x2e0c8>
  408a9b:	mov    QWORD PTR [rbx+0x68],rax
  408a9f:	test   rax,rax
  408aa2:	je     408ae4 <strcmp@plt+0x534c>
  408aa4:	lea    rdi,[rip+0x1815]        # 40a2c0 <strcmp@plt+0x6b28>
  408aab:	call   435e70 <strcmp@plt+0x326d8>
  408ab0:	mov    QWORD PTR [rbx+0x70],rax
  408ab4:	lea    rax,[rip+0x5c305]        # 464dc0 <strcmp@plt+0x61628>
  408abb:	mov    r14d,0x1
  408ac1:	cmp    DWORD PTR [rax],0x0
  408ac4:	jle    408b06 <strcmp@plt+0x536e>
  408ac6:	lea    rsi,[rip+0x3b38b]        # 443e58 <strcmp@plt+0x406c0>
  408acd:	jmp    408afa <strcmp@plt+0x5362>
  408acf:	lea    rax,[rip+0x5c2ea]        # 464dc0 <strcmp@plt+0x61628>
  408ad6:	cmp    DWORD PTR [rax],0x0
  408ad9:	jle    408b06 <strcmp@plt+0x536e>
  408adb:	lea    rsi,[rip+0x3b314]        # 443df6 <strcmp@plt+0x4065e>
  408ae2:	jmp    408af7 <strcmp@plt+0x535f>
  408ae4:	lea    rax,[rip+0x5c2d5]        # 464dc0 <strcmp@plt+0x61628>
  408aeb:	cmp    DWORD PTR [rax],0x0
  408aee:	jle    408b14 <strcmp@plt+0x537c>
  408af0:	lea    rsi,[rip+0x3b32b]        # 443e22 <strcmp@plt+0x4068a>
  408af7:	xor    r14d,r14d
  408afa:	mov    edi,0x5
  408aff:	xor    eax,eax
  408b01:	call   42e520 <strcmp@plt+0x2ad88>
  408b06:	mov    eax,r14d
  408b09:	add    rsp,0x28
  408b0d:	pop    rbx
  408b0e:	pop    r14
  408b10:	pop    r15
  408b12:	pop    rbp
  408b13:	ret    
  408b14:	xor    r14d,r14d
  408b17:	jmp    408b06 <strcmp@plt+0x536e>
  408b19:	lea    rdi,[rip+0x3b191]        # 443cb1 <strcmp@plt+0x40519>
  408b20:	lea    rsi,[rip+0x3b1a1]        # 443cc8 <strcmp@plt+0x40530>
  408b27:	lea    rdx,[rip+0x3b1a8]        # 443cd6 <strcmp@plt+0x4053e>
  408b2e:	call   431eb0 <strcmp@plt+0x2e718>
  408b33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408b3d:	nop    DWORD PTR [rax]
  408b40:	push   rax
  408b41:	mov    rax,QWORD PTR [rdi+0x8]
  408b45:	cmp    rax,QWORD PTR [rip+0x5b494]        # 463fe0 <strcmp@plt+0x60848>
  408b4c:	jne    408b75 <strcmp@plt+0x53dd>
  408b4e:	call   403790 <free@plt>
  408b53:	lea    rax,[rip+0x5c266]        # 464dc0 <strcmp@plt+0x61628>
  408b5a:	cmp    DWORD PTR [rax],0x0
  408b5d:	jle    408b73 <strcmp@plt+0x53db>
  408b5f:	lea    rsi,[rip+0x3b30c]        # 443e72 <strcmp@plt+0x406da>
  408b66:	mov    edi,0x5
  408b6b:	xor    eax,eax
  408b6d:	pop    rcx
  408b6e:	jmp    42e520 <strcmp@plt+0x2ad88>
  408b73:	pop    rax
  408b74:	ret    
  408b75:	lea    rdi,[rip+0x3b135]        # 443cb1 <strcmp@plt+0x40519>
  408b7c:	lea    rsi,[rip+0x3b145]        # 443cc8 <strcmp@plt+0x40530>
  408b83:	lea    rdx,[rip+0x3b14c]        # 443cd6 <strcmp@plt+0x4053e>
  408b8a:	call   431eb0 <strcmp@plt+0x2e718>
  408b8f:	nop
  408b90:	push   rbx
  408b91:	mov    rax,QWORD PTR [rdi+0x8]
  408b95:	cmp    rax,QWORD PTR [rip+0x5b444]        # 463fe0 <strcmp@plt+0x60848>
  408b9c:	jne    408bde <strcmp@plt+0x5446>
  408b9e:	mov    rbx,rdi
  408ba1:	add    rdi,0x18
  408ba5:	call   40a480 <strcmp@plt+0x6ce8>
  408baa:	mov    rdi,QWORD PTR [rbx+0x68]
  408bae:	call   431910 <strcmp@plt+0x2e178>
  408bb3:	mov    rdi,QWORD PTR [rbx+0x70]
  408bb7:	call   436460 <strcmp@plt+0x32cc8>
  408bbc:	lea    rax,[rip+0x5c1fd]        # 464dc0 <strcmp@plt+0x61628>
  408bc3:	cmp    DWORD PTR [rax],0x0
  408bc6:	jle    408bdc <strcmp@plt+0x5444>
  408bc8:	lea    rsi,[rip+0x3b2b1]        # 443e80 <strcmp@plt+0x406e8>
  408bcf:	mov    edi,0x5
  408bd4:	xor    eax,eax
  408bd6:	pop    rbx
  408bd7:	jmp    42e520 <strcmp@plt+0x2ad88>
  408bdc:	pop    rbx
  408bdd:	ret    
  408bde:	lea    rdi,[rip+0x3b0cc]        # 443cb1 <strcmp@plt+0x40519>
  408be5:	lea    rsi,[rip+0x3b0dc]        # 443cc8 <strcmp@plt+0x40530>
  408bec:	lea    rdx,[rip+0x3b0e3]        # 443cd6 <strcmp@plt+0x4053e>
  408bf3:	call   431eb0 <strcmp@plt+0x2e718>
  408bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  408c00:	push   r14
  408c02:	push   rbx
  408c03:	push   rax
  408c04:	mov    rax,QWORD PTR [rdi+0x8]
  408c08:	cmp    rax,QWORD PTR [rip+0x5b3d1]        # 463fe0 <strcmp@plt+0x60848>
  408c0f:	jne    408d01 <strcmp@plt+0x5569>
  408c15:	mov    rbx,rdi
  408c18:	lea    rsi,[rip+0x3b276]        # 443e95 <strcmp@plt+0x406fd>
  408c1f:	mov    edi,0x4
  408c24:	xor    eax,eax
  408c26:	call   42e520 <strcmp@plt+0x2ad88>
  408c2b:	mov    rax,QWORD PTR [rbx+0x48]
  408c2f:	cmp    DWORD PTR [rax+0x18],0x0
  408c33:	jne    408c52 <strcmp@plt+0x54ba>
  408c35:	lea    rsi,[rip+0x3b26c]        # 443ea8 <strcmp@plt+0x40710>
  408c3c:	mov    edi,0x1
  408c41:	xor    eax,eax
  408c43:	call   42e520 <strcmp@plt+0x2ad88>
  408c48:	mov    edi,0x2
  408c4d:	call   4370a0 <strcmp@plt+0x33908>
  408c52:	lea    rsi,[rip+0x3b2a3]        # 443efc <strcmp@plt+0x40764>
  408c59:	mov    edi,0x4
  408c5e:	xor    eax,eax
  408c60:	call   42e520 <strcmp@plt+0x2ad88>
  408c65:	mov    rdi,QWORD PTR [rbx+0x70]
  408c69:	call   4365a0 <strcmp@plt+0x32e08>
  408c6e:	mov    r14,rax
  408c71:	lea    rsi,[rip+0x3b2b0]        # 443f28 <strcmp@plt+0x40790>
  408c78:	mov    edi,0x4
  408c7d:	xor    eax,eax
  408c7f:	call   42e520 <strcmp@plt+0x2ad88>
  408c84:	lea    rsi,[rip+0x1655]        # 40a2e0 <strcmp@plt+0x6b48>
  408c8b:	mov    rdi,r14
  408c8e:	mov    edx,0x4
  408c93:	call   42bce0 <strcmp@plt+0x28548>
  408c98:	mov    rdi,r14
  408c9b:	call   42bff0 <strcmp@plt+0x28858>
  408ca0:	mov    rdi,QWORD PTR [rbx+0x30]
  408ca4:	mov    esi,0x4
  408ca9:	call   408770 <strcmp@plt+0x4fd8>
  408cae:	mov    rdi,QWORD PTR [rbx+0x68]
  408cb2:	call   4317d0 <strcmp@plt+0x2e038>
  408cb7:	mov    r14,rax
  408cba:	lea    rsi,[rip+0x3b28e]        # 443f4f <strcmp@plt+0x407b7>
  408cc1:	mov    edi,0x4
  408cc6:	xor    eax,eax
  408cc8:	call   42e520 <strcmp@plt+0x2ad88>
  408ccd:	mov    rax,QWORD PTR [rbx+0x38]
  408cd1:	mov    rdi,QWORD PTR [rbx+0x40]
  408cd5:	mov    rsi,QWORD PTR [rbx+0x68]
  408cd9:	call   QWORD PTR [rax+0x30]
  408cdc:	mov    rdi,r14
  408cdf:	call   428d40 <strcmp@plt+0x255a8>
  408ce4:	lea    rsi,[rip+0x3a9ca]        # 4436b5 <strcmp@plt+0x3ff1d>
  408ceb:	mov    edi,0x4
  408cf0:	mov    rdx,rax
  408cf3:	xor    eax,eax
  408cf5:	add    rsp,0x8
  408cf9:	pop    rbx
  408cfa:	pop    r14
  408cfc:	jmp    42e520 <strcmp@plt+0x2ad88>
  408d01:	lea    rdi,[rip+0x3afa9]        # 443cb1 <strcmp@plt+0x40519>
  408d08:	lea    rsi,[rip+0x3afb9]        # 443cc8 <strcmp@plt+0x40530>
  408d0f:	lea    rdx,[rip+0x3afc0]        # 443cd6 <strcmp@plt+0x4053e>
  408d16:	call   431eb0 <strcmp@plt+0x2e718>
  408d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  408d20:	push   rbp
  408d21:	push   r15
  408d23:	push   r14
  408d25:	push   r13
  408d27:	push   r12
  408d29:	push   rbx
  408d2a:	sub    rsp,0x138
  408d31:	mov    rax,QWORD PTR [rdi+0x8]
  408d35:	cmp    rax,QWORD PTR [rip+0x5b2a4]        # 463fe0 <strcmp@plt+0x60848>
  408d3c:	jne    4099df <strcmp@plt+0x6247>
  408d42:	mov    r12,rdx
  408d45:	mov    rbp,rsi
  408d48:	mov    r15,rdi
  408d4b:	mov    rdi,rsi
  408d4e:	call   420ac0 <strcmp@plt+0x1d328>
  408d53:	cmp    eax,0x8
  408d56:	jne    408de2 <strcmp@plt+0x564a>
  408d5c:	mov    rdi,rbp
  408d5f:	call   420ae0 <strcmp@plt+0x1d348>
  408d64:	test   BYTE PTR [rax],0x8
  408d67:	jne    408df2 <strcmp@plt+0x565a>
  408d6d:	movzx  eax,WORD PTR [rbp+0x20]
  408d71:	cmp    rax,0xffff
  408d77:	je     408d7f <strcmp@plt+0x55e7>
  408d79:	add    rax,QWORD PTR [rbp+0x30]
  408d7d:	jne    408d90 <strcmp@plt+0x55f8>
  408d7f:	mov    rdi,rbp
  408d82:	call   420b10 <strcmp@plt+0x1d378>
  408d87:	cmp    eax,0x1
  408d8a:	jne    4092a1 <strcmp@plt+0x5b09>
  408d90:	lea    rbx,[rsp+0xa0]
  408d98:	mov    rdi,rbp
  408d9b:	mov    rsi,rbx
  408d9e:	call   433160 <strcmp@plt+0x2f9c8>
  408da3:	movzx  esi,WORD PTR [rsp+0xe2]
  408dab:	movzx  edx,WORD PTR [rsp+0xe0]
  408db3:	lea    rcx,[rsp+0xc0]
  408dbb:	lea    r13,[rsp+0xf0]
  408dc3:	mov    rdi,r13
  408dc6:	mov    r8,rbx
  408dc9:	call   435260 <strcmp@plt+0x31ac8>
  408dce:	movzx  r14d,WORD PTR [rbp+0x1e]
  408dd3:	cmp    r14,0xffff
  408dda:	je     408e4f <strcmp@plt+0x56b7>
  408ddc:	add    r14,QWORD PTR [rbp+0x30]
  408de0:	jmp    408e52 <strcmp@plt+0x56ba>
  408de2:	mov    ebx,eax
  408de4:	xor    r14d,r14d
  408de7:	mov    r13,r12
  408dea:	xor    r12d,r12d
  408ded:	jmp    408e86 <strcmp@plt+0x56ee>
  408df2:	mov    rdi,rbp
  408df5:	call   422600 <strcmp@plt+0x1ee68>
  408dfa:	cmp    eax,0x2
  408dfd:	jne    408e1d <strcmp@plt+0x5685>
  408dff:	lea    rdx,[r12+0x20]
  408e04:	mov    rdi,r15
  408e07:	mov    rsi,rbp
  408e0a:	call   40a180 <strcmp@plt+0x69e8>
  408e0f:	cmp    eax,0x1
  408e12:	je     408d6d <strcmp@plt+0x55d5>
  408e18:	jmp    4092a1 <strcmp@plt+0x5b09>
  408e1d:	lea    rax,[rip+0x5bf9c]        # 464dc0 <strcmp@plt+0x61628>
  408e24:	cmp    DWORD PTR [rax],0x2
  408e27:	jl     4092a1 <strcmp@plt+0x5b09>
  408e2d:	mov    rdi,rbp
  408e30:	call   422600 <strcmp@plt+0x1ee68>
  408e35:	lea    rsi,[rip+0x3b21e]        # 44405a <strcmp@plt+0x408c2>
  408e3c:	mov    edi,0x6
  408e41:	mov    edx,eax
  408e43:	xor    eax,eax
  408e45:	call   42e520 <strcmp@plt+0x2ad88>
  408e4a:	jmp    4092a1 <strcmp@plt+0x5b09>
  408e4f:	xor    r14d,r14d
  408e52:	mov    rdi,rbp
  408e55:	call   420ac0 <strcmp@plt+0x1d328>
  408e5a:	mov    ebx,eax
  408e5c:	lea    rax,[rip+0x5bf5d]        # 464dc0 <strcmp@plt+0x61628>
  408e63:	cmp    DWORD PTR [rax],0x0
  408e66:	jle    408e86 <strcmp@plt+0x56ee>
  408e68:	mov    rdi,rbp
  408e6b:	call   422570 <strcmp@plt+0x1edd8>
  408e70:	lea    rsi,[rip+0x3b0f1]        # 443f68 <strcmp@plt+0x407d0>
  408e77:	mov    edi,0x5
  408e7c:	mov    rdx,rax
  408e7f:	xor    eax,eax
  408e81:	call   42e520 <strcmp@plt+0x2ad88>
  408e86:	lea    eax,[rbx-0x1]
  408e89:	cmp    eax,0x6
  408e8c:	ja     408f4a <strcmp@plt+0x57b2>
  408e92:	lea    rcx,[rip+0x3ad07]        # 443ba0 <strcmp@plt+0x40408>
  408e99:	movsxd rax,DWORD PTR [rcx+rax*4]
  408e9d:	add    rax,rcx
  408ea0:	jmp    rax
  408ea2:	mov    QWORD PTR [rsp+0x8],r15
  408ea7:	mov    QWORD PTR [rsp+0x28],r13
  408eac:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  408eb1:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  408eb6:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  408ebc:	vmovups YMMWORD PTR [rsp+0x50],ymm1
  408ec2:	xor    r15d,r15d
  408ec5:	xor    eax,eax
  408ec7:	vzeroupper 
  408eca:	call   422c80 <strcmp@plt+0x1f4e8>
  408ecf:	mov    r13,rax
  408ed2:	xor    eax,eax
  408ed4:	call   422c80 <strcmp@plt+0x1f4e8>
  408ed9:	mov    rbp,rax
  408edc:	lea    rbx,[rsp+0x30]
  408ee1:	mov    rdi,rbx
  408ee4:	call   4213d0 <strcmp@plt+0x1dc38>
  408ee9:	mov    r14,rax
  408eec:	mov    rdi,rbx
  408eef:	mov    QWORD PTR [rsp+0x10],r13
  408ef4:	mov    rsi,r13
  408ef7:	call   420c80 <strcmp@plt+0x1d4e8>
  408efc:	cmp    eax,0x1
  408eff:	jne    409214 <strcmp@plt+0x5a7c>
  408f05:	movzx  ecx,WORD PTR [r14]
  408f09:	movzx  eax,BYTE PTR [r14+0x2]
  408f0e:	shl    eax,0x10
  408f11:	or     eax,ecx
  408f13:	test   al,0x3
  408f15:	je     4091f5 <strcmp@plt+0x5a5d>
  408f1b:	test   al,0x2
  408f1d:	je     409157 <strcmp@plt+0x59bf>
  408f23:	cmp    BYTE PTR [r14+0x3],0x2
  408f28:	jb     409157 <strcmp@plt+0x59bf>
  408f2e:	lea    rax,[rip+0x5be8b]        # 464dc0 <strcmp@plt+0x61628>
  408f35:	cmp    DWORD PTR [rax],0x0
  408f38:	jle    409214 <strcmp@plt+0x5a7c>
  408f3e:	lea    rsi,[rip+0x3b16e]        # 4440b3 <strcmp@plt+0x4091b>
  408f45:	jmp    409208 <strcmp@plt+0x5a70>
  408f4a:	lea    rax,[rip+0x5be6f]        # 464dc0 <strcmp@plt+0x61628>
  408f51:	cmp    DWORD PTR [rax],0x0
  408f54:	jle    4092a1 <strcmp@plt+0x5b09>
  408f5a:	lea    rsi,[rip+0x3b066]        # 443fc7 <strcmp@plt+0x4082f>
  408f61:	mov    edi,0x5
  408f66:	mov    edx,ebx
  408f68:	xor    eax,eax
  408f6a:	call   42e520 <strcmp@plt+0x2ad88>
  408f6f:	jmp    40927e <strcmp@plt+0x5ae6>
  408f74:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  408f79:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  408f7e:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  408f84:	vmovups YMMWORD PTR [rsp+0x50],ymm1
  408f8a:	lea    rdi,[rsp+0x30]
  408f8f:	vzeroupper 
  408f92:	call   4213d0 <strcmp@plt+0x1dc38>
  408f97:	test   r14,r14
  408f9a:	je     409118 <strcmp@plt+0x5980>
  408fa0:	mov    rbp,rax
  408fa3:	test   BYTE PTR [r14+0x1],0x40
  408fa8:	jne    4090d0 <strcmp@plt+0x5938>
  408fae:	test   BYTE PTR [rbp+0x0],0x1
  408fb2:	jne    4090d0 <strcmp@plt+0x5938>
  408fb8:	lea    rax,[rip+0x5be01]        # 464dc0 <strcmp@plt+0x61628>
  408fbf:	cmp    DWORD PTR [rax],0x0
  408fc2:	jle    40996b <strcmp@plt+0x61d3>
  408fc8:	lea    rsi,[rip+0x3b1ce]        # 44419d <strcmp@plt+0x40a05>
  408fcf:	jmp    409269 <strcmp@plt+0x5ad1>
  408fd4:	add    r15,0x18
  408fd8:	mov    rdi,r15
  408fdb:	mov    rsi,rbp
  408fde:	mov    rdx,r13
  408fe1:	call   40a4d0 <strcmp@plt+0x6d38>
  408fe6:	mov    r15d,eax
  408fe9:	cmp    r15d,0x1
  408fed:	je     409233 <strcmp@plt+0x5a9b>
  408ff3:	jmp    40927e <strcmp@plt+0x5ae6>
  408ff8:	mov    QWORD PTR [rsp+0x80],0x0
  409004:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  409009:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  40900e:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  409014:	vmovups YMMWORD PTR [rsp+0x50],ymm1
  40901a:	lea    rdi,[rsp+0x30]
  40901f:	vzeroupper 
  409022:	call   4213d0 <strcmp@plt+0x1dc38>
  409027:	mov    r12,rax
  40902a:	lea    rax,[rip+0x67587]        # 4705b8 <strcmp@plt+0x6ce20>
  409031:	mov    rdi,QWORD PTR [rax]
  409034:	mov    rsi,QWORD PTR [r12+0x4]
  409039:	call   432300 <strcmp@plt+0x2eb68>
  40903e:	test   rax,rax
  409041:	je     409134 <strcmp@plt+0x599c>
  409047:	mov    rdi,rax
  40904a:	call   4325a0 <strcmp@plt+0x2ee08>
  40904f:	mov    rdi,rax
  409052:	call   436ff0 <strcmp@plt+0x33858>
  409057:	mov    rbx,QWORD PTR [r15+0x70]
  40905b:	mov    QWORD PTR [rsp+0x10],rax
  409060:	mov    rdi,QWORD PTR [rax+0x18]
  409064:	call   422e20 <strcmp@plt+0x1f688>
  409069:	mov    rdi,rbx
  40906c:	mov    rsi,rax
  40906f:	call   436340 <strcmp@plt+0x32ba8>
  409074:	test   rax,rax
  409077:	je     409186 <strcmp@plt+0x59ee>
  40907d:	mov    rbx,rax
  409080:	mov    al,BYTE PTR [r12]
  409084:	test   al,0x8
  409086:	jne    4091c8 <strcmp@plt+0x5a30>
  40908c:	lea    rax,[rip+0x5bd2d]        # 464dc0 <strcmp@plt+0x61628>
  409093:	cmp    DWORD PTR [rax],0x0
  409096:	jle    40996b <strcmp@plt+0x61d3>
  40909c:	lea    rsi,[rip+0x3b1cb]        # 44426e <strcmp@plt+0x40ad6>
  4090a3:	jmp    409269 <strcmp@plt+0x5ad1>
  4090a8:	lea    rax,[rip+0x5bd11]        # 464dc0 <strcmp@plt+0x61628>
  4090af:	cmp    DWORD PTR [rax],0x0
  4090b2:	jle    4092a1 <strcmp@plt+0x5b09>
  4090b8:	lea    rsi,[rip+0x3aec7]        # 443f86 <strcmp@plt+0x407ee>
  4090bf:	mov    edi,0x5
  4090c4:	xor    eax,eax
  4090c6:	call   42e520 <strcmp@plt+0x2ad88>
  4090cb:	jmp    40927e <strcmp@plt+0x5ae6>
  4090d0:	mov    rbx,QWORD PTR [r15+0x70]
  4090d4:	mov    rdi,r13
  4090d7:	call   422e20 <strcmp@plt+0x1f688>
  4090dc:	mov    rdi,rbx
  4090df:	mov    rsi,rax
  4090e2:	call   436340 <strcmp@plt+0x32ba8>
  4090e7:	test   rax,rax
  4090ea:	je     409252 <strcmp@plt+0x5aba>
  4090f0:	cmp    DWORD PTR [rax+0x14],0x0
  4090f4:	je     4093cb <strcmp@plt+0x5c33>
  4090fa:	lea    rbx,[rsp+0x30]
  4090ff:	mov    rdi,rbx
  409102:	call   42e300 <strcmp@plt+0x2ab68>
  409107:	mov    rdi,rbx
  40910a:	call   421e50 <strcmp@plt+0x1e6b8>
  40910f:	or     BYTE PTR [rax+0x1],0x20
  409113:	jmp    4093d5 <strcmp@plt+0x5c3d>
  409118:	lea    rax,[rip+0x5bca1]        # 464dc0 <strcmp@plt+0x61628>
  40911f:	cmp    DWORD PTR [rax],0x0
  409122:	jle    40996b <strcmp@plt+0x61d3>
  409128:	lea    rsi,[rip+0x3b035]        # 444164 <strcmp@plt+0x409cc>
  40912f:	jmp    409269 <strcmp@plt+0x5ad1>
  409134:	lea    rax,[rip+0x5bc85]        # 464dc0 <strcmp@plt+0x61628>
  40913b:	cmp    DWORD PTR [rax],0x0
  40913e:	jle    40996b <strcmp@plt+0x61d3>
  409144:	mov    rdi,QWORD PTR [r12+0x4]
  409149:	call   431f10 <strcmp@plt+0x2e778>
  40914e:	lea    rsi,[rip+0x3b0de]        # 444233 <strcmp@plt+0x40a9b>
  409155:	jmp    4091ab <strcmp@plt+0x5a13>
  409157:	test   al,0x1
  409159:	je     4092b7 <strcmp@plt+0x5b1f>
  40915f:	cmp    BYTE PTR [r14+0x3],0x2
  409164:	jb     4092b7 <strcmp@plt+0x5b1f>
  40916a:	lea    rax,[rip+0x5bc4f]        # 464dc0 <strcmp@plt+0x61628>
  409171:	cmp    DWORD PTR [rax],0x0
  409174:	jle    409214 <strcmp@plt+0x5a7c>
  40917a:	lea    rsi,[rip+0x3af66]        # 4440e7 <strcmp@plt+0x4094f>
  409181:	jmp    409208 <strcmp@plt+0x5a70>
  409186:	lea    rax,[rip+0x5bc33]        # 464dc0 <strcmp@plt+0x61628>
  40918d:	cmp    DWORD PTR [rax],0x0
  409190:	jle    40996b <strcmp@plt+0x61d3>
  409196:	mov    rax,QWORD PTR [rsp+0x10]
  40919b:	mov    rdi,QWORD PTR [rax+0x18]
  40919f:	call   422e20 <strcmp@plt+0x1f688>
  4091a4:	lea    rsi,[rip+0x3ab68]        # 443d13 <strcmp@plt+0x4057b>
  4091ab:	xor    r15d,r15d
  4091ae:	mov    edi,0x5
  4091b3:	mov    rdx,rax
  4091b6:	xor    eax,eax
  4091b8:	call   42e520 <strcmp@plt+0x2ad88>
  4091bd:	cmp    r15d,0x1
  4091c1:	je     409233 <strcmp@plt+0x5a9b>
  4091c3:	jmp    40927e <strcmp@plt+0x5ae6>
  4091c8:	test   r14,r14
  4091cb:	je     409578 <strcmp@plt+0x5de0>
  4091d1:	test   BYTE PTR [r14+0x1],0x40
  4091d6:	jne    409617 <strcmp@plt+0x5e7f>
  4091dc:	lea    rax,[rip+0x5bbdd]        # 464dc0 <strcmp@plt+0x61628>
  4091e3:	cmp    DWORD PTR [rax],0x0
  4091e6:	jle    40996b <strcmp@plt+0x61d3>
  4091ec:	lea    rsi,[rip+0x3b115]        # 444308 <strcmp@plt+0x40b70>
  4091f3:	jmp    409269 <strcmp@plt+0x5ad1>
  4091f5:	lea    rax,[rip+0x5bbc4]        # 464dc0 <strcmp@plt+0x61628>
  4091fc:	cmp    DWORD PTR [rax],0x0
  4091ff:	jle    409214 <strcmp@plt+0x5a7c>
  409201:	lea    rsi,[rip+0x3ae6b]        # 444073 <strcmp@plt+0x408db>
  409208:	mov    edi,0x5
  40920d:	xor    eax,eax
  40920f:	call   42e520 <strcmp@plt+0x2ad88>
  409214:	xor    edi,edi
  409216:	call   42bff0 <strcmp@plt+0x28858>
  40921b:	mov    rdi,QWORD PTR [rsp+0x10]
  409220:	call   422c90 <strcmp@plt+0x1f4f8>
  409225:	mov    rdi,rbp
  409228:	call   422c90 <strcmp@plt+0x1f4f8>
  40922d:	cmp    r15d,0x1
  409231:	jne    40927e <strcmp@plt+0x5ae6>
  409233:	lea    rax,[rip+0x5bb86]        # 464dc0 <strcmp@plt+0x61628>
  40923a:	mov    ebx,0x1
  40923f:	cmp    DWORD PTR [rax],0x3
  409242:	jl     4092a3 <strcmp@plt+0x5b0b>
  409244:	lea    rsi,[rip+0x3addd]        # 444028 <strcmp@plt+0x40890>
  40924b:	mov    edi,0x7
  409250:	jmp    409298 <strcmp@plt+0x5b00>
  409252:	lea    rax,[rip+0x5bb67]        # 464dc0 <strcmp@plt+0x61628>
  409259:	cmp    DWORD PTR [rax],0x0
  40925c:	jle    40996b <strcmp@plt+0x61d3>
  409262:	lea    rsi,[rip+0x3af7a]        # 4441e3 <strcmp@plt+0x40a4b>
  409269:	xor    r15d,r15d
  40926c:	mov    edi,0x5
  409271:	xor    eax,eax
  409273:	call   42e520 <strcmp@plt+0x2ad88>
  409278:	cmp    r15d,0x1
  40927c:	je     409233 <strcmp@plt+0x5a9b>
  40927e:	lea    rax,[rip+0x5bb3b]        # 464dc0 <strcmp@plt+0x61628>
  409285:	cmp    DWORD PTR [rax],0x0
  409288:	jle    4092a1 <strcmp@plt+0x5b09>
  40928a:	lea    rsi,[rip+0x3ad6b]        # 443ffc <strcmp@plt+0x40864>
  409291:	xor    ebx,ebx
  409293:	mov    edi,0x5
  409298:	xor    eax,eax
  40929a:	call   42e520 <strcmp@plt+0x2ad88>
  40929f:	jmp    4092a3 <strcmp@plt+0x5b0b>
  4092a1:	xor    ebx,ebx
  4092a3:	mov    eax,ebx
  4092a5:	add    rsp,0x138
  4092ac:	pop    rbx
  4092ad:	pop    r12
  4092af:	pop    r13
  4092b1:	pop    r14
  4092b3:	pop    r15
  4092b5:	pop    rbp
  4092b6:	ret    
  4092b7:	lea    rdi,[rip+0x199d2]        # 422c90 <strcmp@plt+0x1f4f8>
  4092be:	call   42b9b0 <strcmp@plt+0x28218>
  4092c3:	mov    r13,rax
  4092c6:	lea    rdi,[rsp+0x30]
  4092cb:	mov    rsi,rax
  4092ce:	call   420cf0 <strcmp@plt+0x1d558>
  4092d3:	mov    edi,0x2
  4092d8:	xor    eax,eax
  4092da:	call   421ec0 <strcmp@plt+0x1e728>
  4092df:	mov    r15,rax
  4092e2:	cmp    BYTE PTR [r14+0x3],0x0
  4092e7:	je     4094d1 <strcmp@plt+0x5d39>
  4092ed:	mov    rax,QWORD PTR [rsp+0x8]
  4092f2:	add    rax,0x18
  4092f6:	mov    QWORD PTR [rsp+0x20],rax
  4092fb:	xor    ebx,ebx
  4092fd:	jmp    40930e <strcmp@plt+0x5b76>
  4092ff:	inc    ebx
  409301:	movzx  eax,BYTE PTR [r14+0x3]
  409306:	cmp    ebx,eax
  409308:	jae    4094d1 <strcmp@plt+0x5d39>
  40930e:	lea    rdi,[rsp+0x30]
  409313:	mov    rsi,rbp
  409316:	call   420cb0 <strcmp@plt+0x1d518>
  40931b:	cmp    eax,0x1
  40931e:	jne    409598 <strcmp@plt+0x5e00>
  409324:	lea    rax,[rip+0x5ba95]        # 464dc0 <strcmp@plt+0x61628>
  40932b:	cmp    DWORD PTR [rax],0x0
  40932e:	jle    40934e <strcmp@plt+0x5bb6>
  409330:	mov    rdi,rbp
  409333:	call   422e20 <strcmp@plt+0x1f688>
  409338:	mov    edi,0x5
  40933d:	lea    rsi,[rip+0x3add8]        # 44411c <strcmp@plt+0x40984>
  409344:	mov    rdx,rax
  409347:	xor    eax,eax
  409349:	call   42e520 <strcmp@plt+0x2ad88>
  40934e:	mov    rdi,r15
  409351:	mov    rsi,rbp
  409354:	xor    edx,edx
  409356:	xor    ecx,ecx
  409358:	xor    r8d,r8d
  40935b:	call   421750 <strcmp@plt+0x1dfb8>
  409360:	mov    rax,QWORD PTR [rsp+0x10]
  409365:	cmp    DWORD PTR [rax+0x18],0x0
  409369:	je     4092ff <strcmp@plt+0x5b67>
  40936b:	movzx  eax,WORD PTR [r14]
  40936f:	test   al,0x1
  409371:	je     4092ff <strcmp@plt+0x5b67>
  409373:	mov    rdi,rbp
  409376:	call   422dd0 <strcmp@plt+0x1f638>
  40937b:	mov    rdi,rax
  40937e:	mov    esi,0x1
  409383:	call   422e90 <strcmp@plt+0x1f6f8>
  409388:	mov    rdi,QWORD PTR [rsp+0x20]
  40938d:	mov    rsi,rbp
  409390:	mov    rdx,QWORD PTR [rsp+0x10]
  409395:	call   40acb0 <strcmp@plt+0x7518>
  40939a:	cmp    eax,0x1
  40939d:	jne    409598 <strcmp@plt+0x5e00>
  4093a3:	movzx  eax,WORD PTR [r14]
  4093a7:	test   al,0x2
  4093a9:	jne    4092ff <strcmp@plt+0x5b67>
  4093af:	mov    rdi,r13
  4093b2:	call   42bff0 <strcmp@plt+0x28858>
  4093b7:	test   r15,r15
  4093ba:	jne    409565 <strcmp@plt+0x5dcd>
  4093c0:	mov    r15d,0x1
  4093c6:	jmp    40921b <strcmp@plt+0x5a83>
  4093cb:	lea    rdi,[rsp+0x30]
  4093d0:	call   42e3a0 <strcmp@plt+0x2ac08>
  4093d5:	mov    r14,rbp
  4093d8:	lea    rbx,[rsp+0xa0]
  4093e0:	mov    rdi,rbx
  4093e3:	mov    esi,0x10f6
  4093e8:	mov    edx,0x10f6
  4093ed:	xor    ecx,ecx
  4093ef:	mov    r8,r13
  4093f2:	call   435260 <strcmp@plt+0x31ac8>
  4093f7:	lea    rsi,[rsp+0x30]
  4093fc:	mov    rdi,r15
  4093ff:	mov    rdx,rbx
  409402:	call   407920 <strcmp@plt+0x4188>
  409407:	mov    edi,0x28
  40940c:	call   431d60 <strcmp@plt+0x2e5c8>
  409411:	mov    rbx,rax
  409414:	test   rax,rax
  409417:	je     409455 <strcmp@plt+0x5cbd>
  409419:	lea    rdi,[r13+0x20]
  40941d:	call   423440 <strcmp@plt+0x1fca8>
  409422:	mov    QWORD PTR [rbx+0x8],rax
  409426:	lea    rdi,[r12+0x20]
  40942b:	call   423440 <strcmp@plt+0x1fca8>
  409430:	mov    QWORD PTR [rbx],rax
  409433:	mov    rdi,r12
  409436:	call   423440 <strcmp@plt+0x1fca8>
  40943b:	mov    QWORD PTR [rbx+0x10],rax
  40943f:	mov    rdi,r13
  409442:	call   423440 <strcmp@plt+0x1fca8>
  409447:	mov    QWORD PTR [rbx+0x18],rax
  40944b:	movzx  eax,WORD PTR [r12+0x42]
  409451:	mov    WORD PTR [rbx+0x20],ax
  409455:	lea    rdx,[rip+0xcf4]        # 40a150 <strcmp@plt+0x69b8>
  40945c:	lea    r8,[rip+0xf6d]        # 40a3d0 <strcmp@plt+0x6c38>
  409463:	mov    edi,0xe
  409468:	mov    rsi,r15
  40946b:	mov    rcx,rbx
  40946e:	call   437190 <strcmp@plt+0x339f8>
  409473:	mov    rbp,rax
  409476:	lea    rax,[rip+0x67133]        # 4705b0 <strcmp@plt+0x6ce18>
  40947d:	mov    rdi,QWORD PTR [rax]
  409480:	mov    rsi,rbx
  409483:	mov    rdx,rbp
  409486:	call   437490 <strcmp@plt+0x33cf8>
  40948b:	lea    rax,[rip+0x67126]        # 4705b8 <strcmp@plt+0x6ce20>
  409492:	mov    rbx,QWORD PTR [rax]
  409495:	mov    r14,QWORD PTR [r14+0x4]
  409499:	mov    rdi,rbp
  40949c:	call   437010 <strcmp@plt+0x33878>
  4094a1:	mov    rdi,rbx
  4094a4:	mov    rsi,r14
  4094a7:	mov    rdx,rax
  4094aa:	call   431f60 <strcmp@plt+0x2e7c8>
  4094af:	mov    rdi,rbp
  4094b2:	mov    esi,0x2
  4094b7:	call   437020 <strcmp@plt+0x33888>
  4094bc:	mov    r15d,0x1
  4094c2:	cmp    r15d,0x1
  4094c6:	je     409233 <strcmp@plt+0x5a9b>
  4094cc:	jmp    40927e <strcmp@plt+0x5ae6>
  4094d1:	movzx  eax,WORD PTR [r15+0x24]
  4094d6:	mov    rcx,QWORD PTR [r15+0x30]
  4094da:	mov    dl,BYTE PTR [r14]
  4094dd:	mov    bl,BYTE PTR [rcx+rax*1]
  4094e0:	shl    dl,0x2
  4094e3:	and    dl,0x8
  4094e6:	and    bl,0xf7
  4094e9:	or     bl,dl
  4094eb:	mov    BYTE PTR [rcx+rax*1],bl
  4094ee:	mov    rdx,QWORD PTR [r14+0x4]
  4094f2:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  4094f7:	lea    r8,[rsp+0xa0]
  4094ff:	mov    rdi,QWORD PTR [rsp+0x8]
  409504:	mov    rsi,r13
  409507:	mov    rdx,QWORD PTR [rsp+0x28]
  40950c:	mov    rcx,r12
  40950f:	call   407a60 <strcmp@plt+0x42c8>
  409514:	lea    rcx,[rip+0x5b8a5]        # 464dc0 <strcmp@plt+0x61628>
  40951b:	mov    ecx,DWORD PTR [rcx]
  40951d:	cmp    eax,0x1
  409520:	jne    4095a7 <strcmp@plt+0x5e0f>
  409526:	test   ecx,ecx
  409528:	jle    409548 <strcmp@plt+0x5db0>
  40952a:	mov    rdi,r15
  40952d:	call   422570 <strcmp@plt+0x1edd8>
  409532:	lea    rsi,[rip+0x3ac20]        # 444159 <strcmp@plt+0x409c1>
  409539:	mov    edi,0x5
  40953e:	mov    rdx,rax
  409541:	xor    eax,eax
  409543:	call   42e520 <strcmp@plt+0x2ad88>
  409548:	lea    rdx,[rsp+0xa0]
  409550:	mov    rdi,QWORD PTR [rsp+0x8]
  409555:	mov    rsi,r15
  409558:	call   407920 <strcmp@plt+0x4188>
  40955d:	mov    rdi,r13
  409560:	call   42bff0 <strcmp@plt+0x28858>
  409565:	mov    rdi,r15
  409568:	call   42dd40 <strcmp@plt+0x2a5a8>
  40956d:	mov    r15d,0x1
  409573:	jmp    40921b <strcmp@plt+0x5a83>
  409578:	test   al,0x4
  40957a:	jne    4095d6 <strcmp@plt+0x5e3e>
  40957c:	lea    rax,[rip+0x5b83d]        # 464dc0 <strcmp@plt+0x61628>
  409583:	cmp    DWORD PTR [rax],0x0
  409586:	jle    40996b <strcmp@plt+0x61d3>
  40958c:	lea    rsi,[rip+0x3ad19]        # 4442ac <strcmp@plt+0x40b14>
  409593:	jmp    409269 <strcmp@plt+0x5ad1>
  409598:	mov    rdi,r13
  40959b:	call   42bff0 <strcmp@plt+0x28858>
  4095a0:	test   r15,r15
  4095a3:	jne    4095c6 <strcmp@plt+0x5e2e>
  4095a5:	jmp    4095ce <strcmp@plt+0x5e36>
  4095a7:	test   ecx,ecx
  4095a9:	jle    4095be <strcmp@plt+0x5e26>
  4095ab:	lea    rsi,[rip+0x3ab77]        # 444129 <strcmp@plt+0x40991>
  4095b2:	mov    edi,0x5
  4095b7:	xor    eax,eax
  4095b9:	call   42e520 <strcmp@plt+0x2ad88>
  4095be:	mov    rdi,r13
  4095c1:	call   42bff0 <strcmp@plt+0x28858>
  4095c6:	mov    rdi,r15
  4095c9:	call   42dd40 <strcmp@plt+0x2a5a8>
  4095ce:	xor    r15d,r15d
  4095d1:	jmp    40921b <strcmp@plt+0x5a83>
  4095d6:	mov    eax,DWORD PTR [rbp+0x14]
  4095d9:	mov    rcx,r12
  4095dc:	add    rcx,rax
  4095df:	mov    QWORD PTR [rsp+0x18],rcx
  4095e4:	mov    edi,0x1
  4095e9:	call   42b0f0 <strcmp@plt+0x27958>
  4095ee:	movzx  eax,ax
  4095f1:	mov    rsi,QWORD PTR [rsp+0x18]
  4095f6:	sub    rsi,rax
  4095f9:	add    rsi,0xfffffffffffffffc
  4095fd:	mov    rdx,QWORD PTR [rbx+0x8]
  409601:	mov    rdi,rbp
  409604:	mov    QWORD PTR [rsp+0x18],rsi
  409609:	call   422780 <strcmp@plt+0x1efe8>
  40960e:	cmp    eax,0x1
  409611:	jne    409953 <strcmp@plt+0x61bb>
  409617:	mov    QWORD PTR [rsp+0x78],rbx
  40961c:	mov    QWORD PTR [rsp+0x28],r13
  409621:	lea    rdi,[rsp+0x30]
  409626:	call   422950 <strcmp@plt+0x1f1b8>
  40962b:	lea    rdi,[rip+0x1f59e]        # 428bd0 <strcmp@plt+0x25438>
  409632:	call   42b9b0 <strcmp@plt+0x28218>
  409637:	mov    QWORD PTR [rsp+0x8],rax
  40963c:	cmp    BYTE PTR [r12+0x3],0x0
  409642:	je     409692 <strcmp@plt+0x5efa>
  409644:	lea    rbp,[rsp+0x80]
  40964c:	xor    ebx,ebx
  40964e:	xor    eax,eax
  409650:	call   428ae0 <strcmp@plt+0x25348>
  409655:	mov    r13,rax
  409658:	lea    rdi,[rsp+0x30]
  40965d:	mov    rsi,rax
  409660:	mov    rdx,rbp
  409663:	call   421030 <strcmp@plt+0x1d898>
  409668:	cmp    eax,0x1
  40966b:	jne    409931 <strcmp@plt+0x6199>
  409671:	mov    rdi,r13
  409674:	call   4340a0 <strcmp@plt+0x30908>
  409679:	mov    rdi,r13
  40967c:	mov    rsi,QWORD PTR [rsp+0x8]
  409681:	call   42baa0 <strcmp@plt+0x28308>
  409686:	inc    ebx
  409688:	movzx  eax,BYTE PTR [r12+0x3]
  40968e:	cmp    ebx,eax
  409690:	jb     40964e <strcmp@plt+0x5eb6>
  409692:	lea    rdi,[rsp+0x30]
  409697:	lea    rsi,[rsp+0x88]
  40969f:	lea    rdx,[rsp+0x98]
  4096a7:	call   421380 <strcmp@plt+0x1dbe8>
  4096ac:	mov    rax,QWORD PTR [rsp+0x8]
  4096b1:	mov    r13,QWORD PTR [rax+0x8]
  4096b5:	cmp    r13,rax
  4096b8:	je     40989c <strcmp@plt+0x6104>
  4096be:	lea    rax,[r15+0x18]
  4096c2:	mov    QWORD PTR [rsp+0x20],rax
  4096c7:	jmp    4096ed <strcmp@plt+0x5f55>
  4096c9:	mov    rax,QWORD PTR [rax+0x8]
  4096cd:	mov    rbx,QWORD PTR [rax+0x10]
  4096d1:	mov    rdi,rbx
  4096d4:	mov    esi,0xd2
  4096d9:	call   437020 <strcmp@plt+0x33888>
  4096de:	mov    r13,QWORD PTR [r13+0x8]
  4096e2:	cmp    r13,QWORD PTR [rsp+0x8]
  4096e7:	je     40989c <strcmp@plt+0x6104>
  4096ed:	mov    r12,QWORD PTR [r13+0x10]
  4096f1:	mov    rdi,QWORD PTR [r15+0x30]
  4096f5:	mov    rsi,r12
  4096f8:	call   408710 <strcmp@plt+0x4f78>
  4096fd:	test   rax,rax
  409700:	je     409729 <strcmp@plt+0x5f91>
  409702:	mov    rbx,rax
  409705:	mov    rbp,rax
  409708:	add    rbp,0x30
  40970c:	mov    rdi,QWORD PTR [rax+0x30]
  409710:	test   rdi,rdi
  409713:	je     409720 <strcmp@plt+0x5f88>
  409715:	cmp    QWORD PTR [rdi],0x0
  409719:	jne    409768 <strcmp@plt+0x5fd0>
  40971b:	call   430ce0 <strcmp@plt+0x2d548>
  409720:	xor    eax,eax
  409722:	call   430c80 <strcmp@plt+0x2d4e8>
  409727:	jmp    409759 <strcmp@plt+0x5fc1>
  409729:	mov    rdi,r12
  40972c:	call   428b20 <strcmp@plt+0x25388>
  409731:	mov    rdi,QWORD PTR [rsp+0x20]
  409736:	mov    rsi,rax
  409739:	mov    edx,0x1
  40973e:	mov    ecx,0x1
  409743:	call   40a930 <strcmp@plt+0x7198>
  409748:	mov    rbx,rax
  40974b:	xor    eax,eax
  40974d:	call   430c80 <strcmp@plt+0x2d4e8>
  409752:	mov    rbp,rbx
  409755:	add    rbp,0x30
  409759:	mov    QWORD PTR [rbp+0x0],rax
  40975d:	lea    rax,[rip+0x2757c]        # 430ce0 <strcmp@plt+0x2d548>
  409764:	mov    QWORD PTR [rbx+0x38],rax
  409768:	mov    rax,QWORD PTR [rsp+0x10]
  40976d:	mov    rdx,QWORD PTR [rax+0x10]
  409771:	movzx  r8d,WORD PTR [rax+0x20]
  409776:	mov    rcx,QWORD PTR [rax]
  409779:	mov    r9,QWORD PTR [rax+0x8]
  40977d:	lea    rax,[rsp+0x88]
  409785:	mov    QWORD PTR [rsp],rax
  409789:	mov    rdi,rbx
  40978c:	mov    rsi,r12
  40978f:	call   431370 <strcmp@plt+0x2dbd8>
  409794:	cmp    eax,0x2
  409797:	jne    4097b4 <strcmp@plt+0x601c>
  409799:	mov    rax,QWORD PTR [r15+0x38]
  40979d:	mov    rdi,QWORD PTR [r15+0x40]
  4097a1:	mov    rsi,rbx
  4097a4:	call   QWORD PTR [rax+0x38]
  4097a7:	mov    rdi,r15
  4097aa:	mov    rsi,r12
  4097ad:	xor    edx,edx
  4097af:	call   407930 <strcmp@plt+0x4198>
  4097b4:	mov    rax,QWORD PTR [rsp+0x10]
  4097b9:	mov    rdx,QWORD PTR [rax+0x8]
  4097bd:	mov    rdi,rbx
  4097c0:	lea    rsi,[rsp+0x88]
  4097c8:	call   431720 <strcmp@plt+0x2df88>
  4097cd:	test   rax,rax
  4097d0:	je     4097fd <strcmp@plt+0x6065>
  4097d2:	mov    rbp,rax
  4097d5:	lea    rax,[rip+0x66dd4]        # 4705b0 <strcmp@plt+0x6ce18>
  4097dc:	mov    rdi,QWORD PTR [rax]
  4097df:	mov    rsi,rbp
  4097e2:	call   4374f0 <strcmp@plt+0x33d58>
  4097e7:	test   rax,rax
  4097ea:	je     409825 <strcmp@plt+0x608d>
  4097ec:	cmp    DWORD PTR [rax+0x18],0x0
  4097f0:	jne    4096c9 <strcmp@plt+0x5f31>
  4097f6:	xor    ebx,ebx
  4097f8:	jmp    4096d1 <strcmp@plt+0x5f39>
  4097fd:	lea    rax,[rip+0x5b5bc]        # 464dc0 <strcmp@plt+0x61628>
  409804:	cmp    DWORD PTR [rax],0x0
  409807:	jle    4096de <strcmp@plt+0x5f46>
  40980d:	mov    edi,0x5
  409812:	lea    rsi,[rip+0x3ab85]        # 44439e <strcmp@plt+0x40c06>
  409819:	xor    eax,eax
  40981b:	call   42e520 <strcmp@plt+0x2ad88>
  409820:	jmp    4096de <strcmp@plt+0x5f46>
  409825:	mov    edi,0x10
  40982a:	call   431d90 <strcmp@plt+0x2e5f8>
  40982f:	mov    r12,rax
  409832:	test   rax,rax
  409835:	je     409842 <strcmp@plt+0x60aa>
  409837:	mov    QWORD PTR [r12],rbx
  40983b:	mov    QWORD PTR [r12+0x8],rbp
  409840:	jmp    409861 <strcmp@plt+0x60c9>
  409842:	lea    rax,[rip+0x5b577]        # 464dc0 <strcmp@plt+0x61628>
  409849:	cmp    DWORD PTR [rax],0x2
  40984c:	jl     409861 <strcmp@plt+0x60c9>
  40984e:	mov    edi,0x6
  409853:	lea    rsi,[rip+0x3abcb]        # 444425 <strcmp@plt+0x40c8d>
  40985a:	xor    eax,eax
  40985c:	call   42e520 <strcmp@plt+0x2ad88>
  409861:	mov    edi,0xd
  409866:	mov    rsi,r15
  409869:	lea    rdx,[rip+0x840]        # 40a0b0 <strcmp@plt+0x6918>
  409870:	mov    rcx,r12
  409873:	lea    r8,[rip+0xb86]        # 40a400 <strcmp@plt+0x6c68>
  40987a:	call   437140 <strcmp@plt+0x339a8>
  40987f:	mov    rbx,rax
  409882:	lea    rax,[rip+0x66d27]        # 4705b0 <strcmp@plt+0x6ce18>
  409889:	mov    rdi,QWORD PTR [rax]
  40988c:	mov    rsi,rbp
  40988f:	mov    rdx,rbx
  409892:	call   437490 <strcmp@plt+0x33cf8>
  409897:	jmp    4096d1 <strcmp@plt+0x5f39>
  40989c:	mov    rdi,QWORD PTR [rsp+0x8]
  4098a1:	call   42bff0 <strcmp@plt+0x28858>
  4098a6:	test   r14,r14
  4098a9:	mov    rbx,QWORD PTR [rsp+0x10]
  4098ae:	jne    409905 <strcmp@plt+0x616d>
  4098b0:	lea    r14,[rsp+0x30]
  4098b5:	mov    rdi,r14
  4098b8:	mov    rsi,QWORD PTR [rsp+0x18]
  4098bd:	xor    edx,edx
  4098bf:	xor    ecx,ecx
  4098c1:	call   4226c0 <strcmp@plt+0x1ef28>
  4098c6:	mov    ebp,DWORD PTR [rsp+0x44]
  4098ca:	mov    rax,QWORD PTR [rsp+0x78]
  4098cf:	mov    edi,DWORD PTR [rax+0x10]
  4098d2:	call   42b0f0 <strcmp@plt+0x27958>
  4098d7:	movzx  eax,ax
  4098da:	sub    ebp,eax
  4098dc:	mov    DWORD PTR [rsp+0x44],ebp
  4098e0:	mov    rdi,r14
  4098e3:	call   42e3a0 <strcmp@plt+0x2ac08>
  4098e8:	mov    rcx,QWORD PTR [rsp+0x28]
  4098ed:	movzx  esi,WORD PTR [rcx+0x40]
  4098f1:	movzx  edx,WORD PTR [rcx+0x42]
  4098f5:	add    rcx,0x20
  4098f9:	mov    r8,QWORD PTR [rbx+0x8]
  4098fd:	mov    rdi,r14
  409900:	call   432eb0 <strcmp@plt+0x2f718>
  409905:	lea    rdi,[rsp+0x30]
  40990a:	call   42e300 <strcmp@plt+0x2ab68>
  40990f:	mov    eax,DWORD PTR [r15+0x58]
  409913:	cmp    eax,0x1
  409916:	je     40997d <strcmp@plt+0x61e5>
  409918:	test   eax,eax
  40991a:	jne    4099cb <strcmp@plt+0x6233>
  409920:	lea    rdi,[rsp+0x30]
  409925:	mov    esi,0xffffff
  40992a:	call   4229b0 <strcmp@plt+0x1f218>
  40992f:	jmp    409996 <strcmp@plt+0x61fe>
  409931:	mov    rdi,QWORD PTR [rsp+0x8]
  409936:	call   42bff0 <strcmp@plt+0x28858>
  40993b:	lea    rax,[rip+0x5b47e]        # 464dc0 <strcmp@plt+0x61628>
  409942:	cmp    DWORD PTR [rax],0x0
  409945:	jle    40996b <strcmp@plt+0x61d3>
  409947:	lea    rsi,[rip+0x3a9fe]        # 44434c <strcmp@plt+0x40bb4>
  40994e:	jmp    409269 <strcmp@plt+0x5ad1>
  409953:	lea    rax,[rip+0x5b466]        # 464dc0 <strcmp@plt+0x61628>
  40995a:	cmp    DWORD PTR [rax],0x0
  40995d:	jle    40996b <strcmp@plt+0x61d3>
  40995f:	lea    rsi,[rip+0x3a984]        # 4442ea <strcmp@plt+0x40b52>
  409966:	jmp    409269 <strcmp@plt+0x5ad1>
  40996b:	xor    r15d,r15d
  40996e:	cmp    r15d,0x1
  409972:	je     409233 <strcmp@plt+0x5a9b>
  409978:	jmp    40927e <strcmp@plt+0x5ae6>
  40997d:	mov    rdi,QWORD PTR [rbx]
  409980:	call   416ff0 <strcmp@plt+0x13858>
  409985:	lea    rdi,[rsp+0x30]
  40998a:	mov    esi,0xffffff
  40998f:	mov    edx,eax
  409991:	call   417040 <strcmp@plt+0x138a8>
  409996:	movzx  edx,WORD PTR [rbx+0x20]
  40999a:	mov    r8,QWORD PTR [rbx]
  40999d:	mov    rcx,QWORD PTR [rbx+0x10]
  4099a1:	lea    rbx,[rsp+0xa0]
  4099a9:	mov    rdi,rbx
  4099ac:	mov    esi,0x10f6
  4099b1:	call   435260 <strcmp@plt+0x31ac8>
  4099b6:	lea    rsi,[rsp+0x30]
  4099bb:	mov    rdi,r15
  4099be:	mov    rdx,rbx
  4099c1:	call   407920 <strcmp@plt+0x4188>
  4099c6:	jmp    408fe6 <strcmp@plt+0x584e>
  4099cb:	lea    rsi,[rip+0x3aa11]        # 4443e3 <strcmp@plt+0x40c4b>
  4099d2:	xor    r15d,r15d
  4099d5:	mov    edi,0x2
  4099da:	jmp    409271 <strcmp@plt+0x5ad9>
  4099df:	lea    rdi,[rip+0x3a2cb]        # 443cb1 <strcmp@plt+0x40519>
  4099e6:	lea    rsi,[rip+0x3a2db]        # 443cc8 <strcmp@plt+0x40530>
  4099ed:	lea    rdx,[rip+0x3a2e2]        # 443cd6 <strcmp@plt+0x4053e>
  4099f4:	call   431eb0 <strcmp@plt+0x2e718>
  4099f9:	nop    DWORD PTR [rax+0x0]
  409a00:	push   rbp
  409a01:	push   r15
  409a03:	push   r14
  409a05:	push   r12
  409a07:	push   rbx
  409a08:	mov    rax,QWORD PTR [rdi+0x8]
  409a0c:	cmp    rax,QWORD PTR [rip+0x5a5cd]        # 463fe0 <strcmp@plt+0x60848>
  409a13:	jne    409b28 <strcmp@plt+0x6390>
  409a19:	mov    ebp,edx
  409a1b:	mov    r15,rsi
  409a1e:	mov    r12,rdi
  409a21:	mov    rdi,QWORD PTR [rdi+0x50]
  409a25:	call   436340 <strcmp@plt+0x32ba8>
  409a2a:	test   rax,rax
  409a2d:	je     409af7 <strcmp@plt+0x635f>
  409a33:	mov    r14,rax
  409a36:	mov    rax,QWORD PTR [rax+0x10]
  409a3a:	mov    rcx,QWORD PTR [rax+0x8]
  409a3e:	cmp    rcx,rax
  409a41:	je     409a61 <strcmp@plt+0x62c9>
  409a43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409a4d:	nop    DWORD PTR [rax]
  409a50:	mov    rdx,QWORD PTR [rcx+0x10]
  409a54:	mov    BYTE PTR [rdx+0x8],bpl
  409a58:	mov    rcx,QWORD PTR [rcx+0x8]
  409a5c:	cmp    rcx,rax
  409a5f:	jne    409a50 <strcmp@plt+0x62b8>
  409a61:	mov    rax,QWORD PTR [r14+0x18]
  409a65:	mov    rcx,QWORD PTR [rax+0x8]
  409a69:	cmp    rcx,rax
  409a6c:	je     409a81 <strcmp@plt+0x62e9>
  409a6e:	xchg   ax,ax
  409a70:	mov    rdx,QWORD PTR [rcx+0x10]
  409a74:	mov    BYTE PTR [rdx+0x8],bpl
  409a78:	mov    rcx,QWORD PTR [rcx+0x8]
  409a7c:	cmp    rcx,rax
  409a7f:	jne    409a70 <strcmp@plt+0x62d8>
  409a81:	cmp    BYTE PTR [r14+0x20],0x1
  409a86:	setne  BYTE PTR [r14+0x20]
  409a8b:	mov    rax,QWORD PTR [r14+0x8]
  409a8f:	mov    rbx,QWORD PTR [rax+0x8]
  409a93:	cmp    rbx,rax
  409a96:	je     409ad6 <strcmp@plt+0x633e>
  409a98:	nop    DWORD PTR [rax+rax*1+0x0]
  409aa0:	mov    rbp,QWORD PTR [rbx+0x10]
  409aa4:	mov    rax,QWORD PTR [r12+0x38]
  409aa9:	mov    rdi,QWORD PTR [r12+0x40]
  409aae:	mov    rsi,rbp
  409ab1:	call   QWORD PTR [rax+0x30]
  409ab4:	mov    rdi,rbp
  409ab7:	call   431840 <strcmp@plt+0x2e0a8>
  409abc:	mov    rdi,r12
  409abf:	mov    rsi,rax
  409ac2:	mov    edx,0x1
  409ac7:	call   407930 <strcmp@plt+0x4198>
  409acc:	mov    rbx,QWORD PTR [rbx+0x8]
  409ad0:	cmp    rbx,QWORD PTR [r14+0x8]
  409ad4:	jne    409aa0 <strcmp@plt+0x6308>
  409ad6:	mov    rax,QWORD PTR [r12+0x38]
  409adb:	mov    rdi,QWORD PTR [r12+0x40]
  409ae0:	mov    rsi,QWORD PTR [r12+0x68]
  409ae5:	call   QWORD PTR [rax+0x30]
  409ae8:	mov    rdi,r12
  409aeb:	call   407940 <strcmp@plt+0x41a8>
  409af0:	mov    ebx,0x1
  409af5:	jmp    409b1d <strcmp@plt+0x6385>
  409af7:	lea    rax,[rip+0x5b2c2]        # 464dc0 <strcmp@plt+0x61628>
  409afe:	xor    ebx,ebx
  409b00:	cmp    DWORD PTR [rax],0x2
  409b03:	jl     409b1d <strcmp@plt+0x6385>
  409b05:	lea    rsi,[rip+0x3a976]        # 444482 <strcmp@plt+0x40cea>
  409b0c:	xor    ebx,ebx
  409b0e:	mov    edi,0x6
  409b13:	mov    rdx,r15
  409b16:	xor    eax,eax
  409b18:	call   42e520 <strcmp@plt+0x2ad88>
  409b1d:	mov    eax,ebx
  409b1f:	pop    rbx
  409b20:	pop    r12
  409b22:	pop    r14
  409b24:	pop    r15
  409b26:	pop    rbp
  409b27:	ret    
  409b28:	lea    rdi,[rip+0x3a182]        # 443cb1 <strcmp@plt+0x40519>
  409b2f:	lea    rsi,[rip+0x3a192]        # 443cc8 <strcmp@plt+0x40530>
  409b36:	lea    rdx,[rip+0x3a199]        # 443cd6 <strcmp@plt+0x4053e>
  409b3d:	call   431eb0 <strcmp@plt+0x2e718>
  409b42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409b4c:	nop    DWORD PTR [rax+0x0]
  409b50:	push   rbp
  409b51:	push   r15
  409b53:	push   r14
  409b55:	push   r13
  409b57:	push   r12
  409b59:	push   rbx
  409b5a:	sub    rsp,0x18
  409b5e:	mov    rax,QWORD PTR [rdi+0x8]
  409b62:	cmp    rax,QWORD PTR [rip+0x5a477]        # 463fe0 <strcmp@plt+0x60848>
  409b69:	jne    409ea1 <strcmp@plt+0x6709>
  409b6f:	mov    r14,rcx
  409b72:	mov    r13,rdx
  409b75:	mov    rbp,rsi
  409b78:	mov    r12,rdi
  409b7b:	mov    rdi,QWORD PTR [rdi+0x50]
  409b7f:	call   436340 <strcmp@plt+0x32ba8>
  409b84:	test   rax,rax
  409b87:	je     409c53 <strcmp@plt+0x64bb>
  409b8d:	mov    rbx,rax
  409b90:	mov    rdi,r13
  409b93:	mov    rsi,r14
  409b96:	call   423670 <strcmp@plt+0x1fed8>
  409b9b:	mov    r15d,0x1
  409ba1:	test   eax,eax
  409ba3:	je     409e8f <strcmp@plt+0x66f7>
  409ba9:	mov    eax,DWORD PTR [r14+0x18]
  409bad:	cmp    eax,0x1
  409bb0:	je     409c84 <strcmp@plt+0x64ec>
  409bb6:	test   eax,eax
  409bb8:	jne    409cad <strcmp@plt+0x6515>
  409bbe:	xor    eax,eax
  409bc0:	mov    QWORD PTR [rsp+0x8],r13
  409bc5:	cmp    DWORD PTR [r13+0x18],0x2
  409bca:	setne  al
  409bcd:	lea    rcx,[rax*8+0x28]
  409bd5:	mov    QWORD PTR [rsp],rcx
  409bd9:	mov    QWORD PTR [rsp+0x10],rbx
  409bde:	mov    r13,QWORD PTR [rbx+rax*8+0x10]
  409be3:	mov    r14,QWORD PTR [r13+0x8]
  409be7:	cmp    r14,r13
  409bea:	je     409cdb <strcmp@plt+0x6543>
  409bf0:	lea    r15,[rip+0x3a011]        # 443c08 <strcmp@plt+0x40470>
  409bf7:	jmp    409c09 <strcmp@plt+0x6471>
  409bf9:	nop    DWORD PTR [rax+0x0]
  409c00:	cmp    r14,r13
  409c03:	je     409cdb <strcmp@plt+0x6543>
  409c09:	mov    rbp,QWORD PTR [r14+0x10]
  409c0d:	mov    r14,QWORD PTR [r14+0x8]
  409c11:	mov    rax,QWORD PTR [rbp+0x0]
  409c15:	cmp    DWORD PTR [rax+0x18],0x1
  409c19:	je     409c2a <strcmp@plt+0x6492>
  409c1b:	mov    edi,0x2
  409c20:	mov    rsi,r15
  409c23:	xor    eax,eax
  409c25:	call   42e520 <strcmp@plt+0x2ad88>
  409c2a:	mov    rdi,QWORD PTR [r12+0x68]
  409c2f:	call   4317d0 <strcmp@plt+0x2e038>
  409c34:	mov    rbx,rax
  409c37:	mov    rdi,rax
  409c3a:	mov    rsi,rbp
  409c3d:	call   429330 <strcmp@plt+0x25b98>
  409c42:	test   al,al
  409c44:	je     409c00 <strcmp@plt+0x6468>
  409c46:	mov    rdi,rbx
  409c49:	mov    rsi,rbp
  409c4c:	call   4294f0 <strcmp@plt+0x25d58>
  409c51:	jmp    409c00 <strcmp@plt+0x6468>
  409c53:	lea    rax,[rip+0x5b166]        # 464dc0 <strcmp@plt+0x61628>
  409c5a:	xor    r15d,r15d
  409c5d:	cmp    DWORD PTR [rax],0x2
  409c60:	jl     409e8f <strcmp@plt+0x66f7>
  409c66:	lea    rsi,[rip+0x39f4f]        # 443bbc <strcmp@plt+0x40424>
  409c6d:	xor    r15d,r15d
  409c70:	mov    edi,0x6
  409c75:	mov    rdx,rbp
  409c78:	xor    eax,eax
  409c7a:	call   42e520 <strcmp@plt+0x2ad88>
  409c7f:	jmp    409e8f <strcmp@plt+0x66f7>
  409c84:	mov    rdi,r14
  409c87:	call   422ef0 <strcmp@plt+0x1f758>
  409c8c:	cmp    ax,0x2
  409c90:	je     409d08 <strcmp@plt+0x6570>
  409c92:	cmp    ax,0xa
  409c96:	jne    409cad <strcmp@plt+0x6515>
  409c98:	mov    QWORD PTR [rsp+0x8],r13
  409c9d:	mov    eax,0x30
  409ca2:	mov    QWORD PTR [rsp],rax
  409ca6:	mov    eax,0x18
  409cab:	jmp    409d1b <strcmp@plt+0x6583>
  409cad:	lea    rax,[rip+0x5b10c]        # 464dc0 <strcmp@plt+0x61628>
  409cb4:	xor    r15d,r15d
  409cb7:	cmp    DWORD PTR [rax],0x2
  409cba:	jl     409e8f <strcmp@plt+0x66f7>
  409cc0:	lea    rsi,[rip+0x39f71]        # 443c38 <strcmp@plt+0x404a0>
  409cc7:	xor    r15d,r15d
  409cca:	mov    edi,0x6
  409ccf:	xor    eax,eax
  409cd1:	call   42e520 <strcmp@plt+0x2ad88>
  409cd6:	jmp    409e8f <strcmp@plt+0x66f7>
  409cdb:	mov    rbx,QWORD PTR [rsp+0x10]
  409ce0:	mov    rbp,QWORD PTR [rsp]
  409ce4:	cmp    QWORD PTR [rbx+rbp*1],0x0
  409ce9:	mov    r15d,0x1
  409cef:	jne    409e75 <strcmp@plt+0x66dd>
  409cf5:	mov    rdi,QWORD PTR [rsp+0x8]
  409cfa:	call   423440 <strcmp@plt+0x1fca8>
  409cff:	mov    QWORD PTR [rbx+rbp*1],rax
  409d03:	jmp    409e75 <strcmp@plt+0x66dd>
  409d08:	mov    QWORD PTR [rsp+0x8],r13
  409d0d:	mov    eax,0x28
  409d12:	mov    QWORD PTR [rsp],rax
  409d16:	mov    eax,0x10
  409d1b:	mov    QWORD PTR [rsp+0x10],rbx
  409d20:	mov    rbp,QWORD PTR [rbx+rax*1]
  409d24:	mov    rbx,QWORD PTR [rbp+0x8]
  409d28:	cmp    rbx,rbp
  409d2b:	jne    409d67 <strcmp@plt+0x65cf>
  409d2d:	jmp    409e13 <strcmp@plt+0x667b>
  409d32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d3c:	nop    DWORD PTR [rax+0x0]
  409d40:	mov    edi,0x2
  409d45:	lea    rsi,[rip+0x39ebc]        # 443c08 <strcmp@plt+0x40470>
  409d4c:	xor    eax,eax
  409d4e:	call   42e520 <strcmp@plt+0x2ad88>
  409d53:	mov    rdi,r13
  409d56:	mov    rsi,r14
  409d59:	call   428ab0 <strcmp@plt+0x25318>
  409d5e:	cmp    rbx,rbp
  409d61:	je     409e13 <strcmp@plt+0x667b>
  409d67:	mov    r13,QWORD PTR [rbx+0x10]
  409d6b:	mov    rbx,QWORD PTR [rbx+0x8]
  409d6f:	mov    rax,QWORD PTR [r13+0x0]
  409d73:	mov    eax,DWORD PTR [rax+0x18]
  409d76:	cmp    eax,0x1
  409d79:	je     409d53 <strcmp@plt+0x65bb>
  409d7b:	test   eax,eax
  409d7d:	jne    409d40 <strcmp@plt+0x65a8>
  409d7f:	mov    rdi,QWORD PTR [r12+0x68]
  409d84:	call   4317d0 <strcmp@plt+0x2e038>
  409d89:	mov    r15,rax
  409d8c:	mov    rdi,rax
  409d8f:	mov    rsi,r13
  409d92:	call   429330 <strcmp@plt+0x25b98>
  409d97:	test   al,al
  409d99:	je     409d5e <strcmp@plt+0x65c6>
  409d9b:	mov    rdi,r15
  409d9e:	mov    rsi,r14
  409da1:	call   4290a0 <strcmp@plt+0x25908>
  409da6:	test   rax,rax
  409da9:	je     409dfc <strcmp@plt+0x6664>
  409dab:	lea    rax,[rip+0x5b00e]        # 464dc0 <strcmp@plt+0x61628>
  409db2:	cmp    DWORD PTR [rax],0x2
  409db5:	jl     409dca <strcmp@plt+0x6632>
  409db7:	mov    edi,0x6
  409dbc:	lea    rsi,[rip+0x39eaa]        # 443c6d <strcmp@plt+0x404d5>
  409dc3:	xor    eax,eax
  409dc5:	call   42e520 <strcmp@plt+0x2ad88>
  409dca:	mov    rdi,r15
  409dcd:	xor    esi,esi
  409dcf:	xor    edx,edx
  409dd1:	call   429250 <strcmp@plt+0x25ab8>
  409dd6:	mov    r15,rax
  409dd9:	mov    rdi,QWORD PTR [r12+0x50]
  409dde:	mov    rsi,r13
  409de1:	call   42cd80 <strcmp@plt+0x295e8>
  409de6:	mov    rdi,r13
  409de9:	mov    rsi,r15
  409dec:	call   42bf10 <strcmp@plt+0x28778>
  409df1:	cmp    rbx,rbp
  409df4:	jne    409d67 <strcmp@plt+0x65cf>
  409dfa:	jmp    409e13 <strcmp@plt+0x667b>
  409dfc:	mov    rdi,r15
  409dff:	mov    rsi,r13
  409e02:	mov    rdx,r14
  409e05:	call   429400 <strcmp@plt+0x25c68>
  409e0a:	cmp    rbx,rbp
  409e0d:	jne    409d67 <strcmp@plt+0x65cf>
  409e13:	mov    rbx,QWORD PTR [rsp+0x10]
  409e18:	mov    rbp,QWORD PTR [rsp]
  409e1c:	mov    rdi,QWORD PTR [rbx+rbp*1]
  409e20:	test   rdi,rdi
  409e23:	mov    r15d,0x1
  409e29:	je     409e44 <strcmp@plt+0x66ac>
  409e2b:	mov    rsi,r14
  409e2e:	call   423670 <strcmp@plt+0x1fed8>
  409e33:	test   eax,eax
  409e35:	jne    409e60 <strcmp@plt+0x66c8>
  409e37:	mov    rdi,QWORD PTR [rbx+rbp*1]
  409e3b:	call   422c90 <strcmp@plt+0x1f4f8>
  409e40:	xor    eax,eax
  409e42:	jmp    409e5c <strcmp@plt+0x66c4>
  409e44:	mov    rdi,QWORD PTR [rsp+0x8]
  409e49:	test   rdi,rdi
  409e4c:	je     409e55 <strcmp@plt+0x66bd>
  409e4e:	call   423440 <strcmp@plt+0x1fca8>
  409e53:	jmp    409e5c <strcmp@plt+0x66c4>
  409e55:	xor    edi,edi
  409e57:	call   422be0 <strcmp@plt+0x1f448>
  409e5c:	mov    QWORD PTR [rbx+rbp*1],rax
  409e60:	mov    rdi,QWORD PTR [r12+0x68]
  409e65:	call   4317d0 <strcmp@plt+0x2e038>
  409e6a:	mov    rdi,rax
  409e6d:	mov    rsi,r14
  409e70:	call   4293b0 <strcmp@plt+0x25c18>
  409e75:	mov    rax,QWORD PTR [r12+0x38]
  409e7a:	mov    rdi,QWORD PTR [r12+0x40]
  409e7f:	mov    rsi,QWORD PTR [r12+0x68]
  409e84:	call   QWORD PTR [rax+0x30]
  409e87:	mov    rdi,r12
  409e8a:	call   407940 <strcmp@plt+0x41a8>
  409e8f:	mov    eax,r15d
  409e92:	add    rsp,0x18
  409e96:	pop    rbx
  409e97:	pop    r12
  409e99:	pop    r13
  409e9b:	pop    r14
  409e9d:	pop    r15
  409e9f:	pop    rbp
  409ea0:	ret    
  409ea1:	lea    rdi,[rip+0x39e09]        # 443cb1 <strcmp@plt+0x40519>
  409ea8:	lea    rsi,[rip+0x39e19]        # 443cc8 <strcmp@plt+0x40530>
  409eaf:	lea    rdx,[rip+0x39e20]        # 443cd6 <strcmp@plt+0x4053e>
  409eb6:	call   431eb0 <strcmp@plt+0x2e718>
  409ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  409ec0:	mov    eax,0x1
  409ec5:	ret    
  409ec6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409ed0:	push   rbp
  409ed1:	push   r15
  409ed3:	push   r14
  409ed5:	push   r13
  409ed7:	push   r12
  409ed9:	push   rbx
  409eda:	push   rax
  409edb:	mov    rax,QWORD PTR [rdi+0x8]
  409edf:	cmp    rax,QWORD PTR [rip+0x5a0fa]        # 463fe0 <strcmp@plt+0x60848>
  409ee6:	jne    40a064 <strcmp@plt+0x68cc>
  409eec:	mov    r15,rsi
  409eef:	mov    rbx,rdi
  409ef2:	xor    eax,eax
  409ef4:	call   41fee0 <strcmp@plt+0x1c748>
  409ef9:	mov    r14,rax
  409efc:	test   rax,rax
  409eff:	je     409f35 <strcmp@plt+0x679d>
  409f01:	mov    rax,QWORD PTR [rbx+0x68]
  409f05:	mov    edi,DWORD PTR [r15+0x48]
  409f09:	test   edi,edi
  409f0b:	mov    QWORD PTR [rsp],rax
  409f0f:	je     409f4d <strcmp@plt+0x67b5>
  409f11:	mov    rsi,r15
  409f14:	mov    edx,0x20
  409f19:	call   427820 <strcmp@plt+0x24088>
  409f1e:	mov    r13,rax
  409f21:	mov    edi,DWORD PTR [r15+0x48]
  409f25:	lea    rsi,[r15+0x20]
  409f29:	mov    edx,0x20
  409f2e:	call   427820 <strcmp@plt+0x24088>
  409f33:	jmp    409f61 <strcmp@plt+0x67c9>
  409f35:	lea    rsi,[rip+0x3a594]        # 4444d0 <strcmp@plt+0x40d38>
  409f3c:	mov    edi,0x3
  409f41:	xor    eax,eax
  409f43:	call   42e520 <strcmp@plt+0x2ad88>
  409f48:	jmp    40a052 <strcmp@plt+0x68ba>
  409f4d:	mov    rdi,r15
  409f50:	call   423440 <strcmp@plt+0x1fca8>
  409f55:	mov    r13,rax
  409f58:	lea    rdi,[r15+0x20]
  409f5c:	call   423440 <strcmp@plt+0x1fca8>
  409f61:	mov    rbp,rax
  409f64:	mov    rdi,QWORD PTR [rbx+0x30]
  409f68:	mov    rsi,rax
  409f6b:	call   4086d0 <strcmp@plt+0x4f38>
  409f70:	test   rax,rax
  409f73:	je     409fc3 <strcmp@plt+0x682b>
  409f75:	mov    r12,rax
  409f78:	mov    rdi,rax
  409f7b:	call   4307e0 <strcmp@plt+0x2d048>
  409f80:	mov    rdi,rax
  409f83:	call   423440 <strcmp@plt+0x1fca8>
  409f88:	mov    QWORD PTR [r14],rax
  409f8b:	cmp    BYTE PTR [r12+0x10],0x0
  409f91:	jne    40a021 <strcmp@plt+0x6889>
  409f97:	lea    rax,[rip+0x5ae22]        # 464dc0 <strcmp@plt+0x61628>
  409f9e:	cmp    DWORD PTR [rax],0x2
  409fa1:	jl     40a021 <strcmp@plt+0x6889>
  409fa3:	mov    rdi,rbp
  409fa6:	call   422e20 <strcmp@plt+0x1f688>
  409fab:	lea    rsi,[rip+0x3a586]        # 444538 <strcmp@plt+0x40da0>
  409fb2:	mov    edi,0x6
  409fb7:	mov    rdx,rax
  409fba:	xor    eax,eax
  409fbc:	call   42e520 <strcmp@plt+0x2ad88>
  409fc1:	jmp    40a021 <strcmp@plt+0x6889>
  409fc3:	lea    r12,[rbx+0x18]
  409fc7:	lea    rax,[rip+0x5adf2]        # 464dc0 <strcmp@plt+0x61628>
  409fce:	cmp    DWORD PTR [rax],0x0
  409fd1:	jle    409ff1 <strcmp@plt+0x6859>
  409fd3:	mov    rdi,rbp
  409fd6:	call   422e20 <strcmp@plt+0x1f688>
  409fdb:	lea    rsi,[rip+0x3a528]        # 44450a <strcmp@plt+0x40d72>
  409fe2:	mov    edi,0x5
  409fe7:	mov    rdx,rax
  409fea:	xor    eax,eax
  409fec:	call   42e520 <strcmp@plt+0x2ad88>
  409ff1:	mov    rdi,r12
  409ff4:	mov    rsi,rbp
  409ff7:	mov    rdx,r13
  409ffa:	call   40bae0 <strcmp@plt+0x8348>
  409fff:	mov    rdi,QWORD PTR [rbx+0x30]
  40a003:	mov    rsi,rbp
  40a006:	call   4086d0 <strcmp@plt+0x4f38>
  40a00b:	mov    r12,rax
  40a00e:	mov    rdi,rax
  40a011:	call   4307e0 <strcmp@plt+0x2d048>
  40a016:	mov    rdi,rax
  40a019:	call   423440 <strcmp@plt+0x1fca8>
  40a01e:	mov    QWORD PTR [r14],rax
  40a021:	mov    rax,QWORD PTR [rbx+0x38]
  40a025:	mov    rdi,QWORD PTR [rbx+0x40]
  40a029:	mov    rsi,QWORD PTR [rsp]
  40a02d:	mov    rdx,r12
  40a030:	xor    ecx,ecx
  40a032:	mov    r8,r15
  40a035:	mov    r9,r14
  40a038:	call   QWORD PTR [rax+0x40]
  40a03b:	mov    eax,DWORD PTR [rbx+0x58]
  40a03e:	mov    DWORD PTR [r14+0x14],eax
  40a042:	mov    rdi,r13
  40a045:	call   422c90 <strcmp@plt+0x1f4f8>
  40a04a:	mov    rdi,rbp
  40a04d:	call   422c90 <strcmp@plt+0x1f4f8>
  40a052:	mov    rax,r14
  40a055:	add    rsp,0x8
  40a059:	pop    rbx
  40a05a:	pop    r12
  40a05c:	pop    r13
  40a05e:	pop    r14
  40a060:	pop    r15
  40a062:	pop    rbp
  40a063:	ret    
  40a064:	lea    rdi,[rip+0x39c46]        # 443cb1 <strcmp@plt+0x40519>
  40a06b:	lea    rsi,[rip+0x39c56]        # 443cc8 <strcmp@plt+0x40530>
  40a072:	lea    rdx,[rip+0x39c5d]        # 443cd6 <strcmp@plt+0x4053e>
  40a079:	call   431eb0 <strcmp@plt+0x2e718>
  40a07e:	xchg   ax,ax
  40a080:	push   rax
  40a081:	mov    rcx,QWORD PTR [rdi+0x8]
  40a085:	cmp    rcx,QWORD PTR [rip+0x59f54]        # 463fe0 <strcmp@plt+0x60848>
  40a08c:	jne    40a093 <strcmp@plt+0x68fb>
  40a08e:	mov    rax,rdi
  40a091:	pop    rcx
  40a092:	ret    
  40a093:	lea    rdi,[rip+0x39c17]        # 443cb1 <strcmp@plt+0x40519>
  40a09a:	lea    rsi,[rip+0x39c27]        # 443cc8 <strcmp@plt+0x40530>
  40a0a1:	lea    rdx,[rip+0x39c2e]        # 443cd6 <strcmp@plt+0x4053e>
  40a0a8:	call   431eb0 <strcmp@plt+0x2e718>
  40a0ad:	nop    DWORD PTR [rax]
  40a0b0:	push   r14
  40a0b2:	push   rbx
  40a0b3:	push   rax
  40a0b4:	mov    rbx,rdi
  40a0b7:	call   436fe0 <strcmp@plt+0x33848>
  40a0bc:	mov    r14,rax
  40a0bf:	mov    rdi,rbx
  40a0c2:	call   436ff0 <strcmp@plt+0x33858>
  40a0c7:	mov    rbx,QWORD PTR [rax]
  40a0ca:	mov    rsi,QWORD PTR [rax+0x8]
  40a0ce:	mov    rdi,rbx
  40a0d1:	call   431610 <strcmp@plt+0x2de78>
  40a0d6:	mov    rax,QWORD PTR [rbx+0x8]
  40a0da:	cmp    WORD PTR [rax+0x20],0x0
  40a0df:	je     40a0f8 <strcmp@plt+0x6960>
  40a0e1:	mov    rdi,rbx
  40a0e4:	call   4307e0 <strcmp@plt+0x2d048>
  40a0e9:	mov    rdi,r14
  40a0ec:	mov    rsi,rax
  40a0ef:	xor    edx,edx
  40a0f1:	call   407930 <strcmp@plt+0x4198>
  40a0f6:	jmp    40a139 <strcmp@plt+0x69a1>
  40a0f8:	lea    rax,[rip+0x5acc1]        # 464dc0 <strcmp@plt+0x61628>
  40a0ff:	cmp    DWORD PTR [rax],0x0
  40a102:	jle    40a12a <strcmp@plt+0x6992>
  40a104:	mov    rdi,rbx
  40a107:	call   4307e0 <strcmp@plt+0x2d048>
  40a10c:	mov    rdi,rax
  40a10f:	call   422e20 <strcmp@plt+0x1f688>
  40a114:	lea    rsi,[rip+0x39bde]        # 443cf9 <strcmp@plt+0x40561>
  40a11b:	mov    edi,0x5
  40a120:	mov    rdx,rax
  40a123:	xor    eax,eax
  40a125:	call   42e520 <strcmp@plt+0x2ad88>
  40a12a:	add    r14,0x18
  40a12e:	mov    rdi,r14
  40a131:	mov    rsi,rbx
  40a134:	call   40a8e0 <strcmp@plt+0x7148>
  40a139:	mov    eax,0x1
  40a13e:	add    rsp,0x8
  40a142:	pop    rbx
  40a143:	pop    r14
  40a145:	ret    
  40a146:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a150:	push   rax
  40a151:	call   436ff0 <strcmp@plt+0x33858>
  40a156:	lea    rcx,[rip+0x66453]        # 4705b0 <strcmp@plt+0x6ce18>
  40a15d:	mov    rsi,QWORD PTR [rcx]
  40a160:	lea    rcx,[rip+0x66451]        # 4705b8 <strcmp@plt+0x6ce20>
  40a167:	mov    rdx,QWORD PTR [rcx]
  40a16a:	mov    rdi,rax
  40a16d:	call   437270 <strcmp@plt+0x33ad8>
  40a172:	mov    eax,0x1
  40a177:	pop    rcx
  40a178:	ret    
  40a179:	nop    DWORD PTR [rax+0x0]
  40a180:	push   rbp
  40a181:	push   r15
  40a183:	push   r14
  40a185:	push   rbx
  40a186:	push   rax
  40a187:	mov    rbp,rdx
  40a18a:	mov    r14,rsi
  40a18d:	mov    rbx,QWORD PTR [rdi+0x70]
  40a191:	mov    rdi,rdx
  40a194:	call   422e20 <strcmp@plt+0x1f688>
  40a199:	mov    rdi,rbx
  40a19c:	mov    rsi,rax
  40a19f:	call   436340 <strcmp@plt+0x32ba8>
  40a1a4:	test   rax,rax
  40a1a7:	je     40a207 <strcmp@plt+0x6a6f>
  40a1a9:	mov    rbx,rax
  40a1ac:	mov    rdi,r14
  40a1af:	call   4228a0 <strcmp@plt+0x1f108>
  40a1b4:	mov    r15,rax
  40a1b7:	mov    rdi,r14
  40a1ba:	call   420b10 <strcmp@plt+0x1d378>
  40a1bf:	xor    ebp,ebp
  40a1c1:	cmp    eax,0x1
  40a1c4:	jne    40a237 <strcmp@plt+0x6a9f>
  40a1c6:	mov    rdx,QWORD PTR [rbx+0x8]
  40a1ca:	mov    rdi,r14
  40a1cd:	mov    rsi,r15
  40a1d0:	call   422730 <strcmp@plt+0x1ef98>
  40a1d5:	mov    ebp,0x1
  40a1da:	cmp    eax,0x1
  40a1dd:	je     40a237 <strcmp@plt+0x6a9f>
  40a1df:	lea    rax,[rip+0x5abda]        # 464dc0 <strcmp@plt+0x61628>
  40a1e6:	cmp    DWORD PTR [rax],0x0
  40a1e9:	mov    ebp,0x0
  40a1ee:	jle    40a237 <strcmp@plt+0x6a9f>
  40a1f0:	lea    rsi,[rip+0x39b4c]        # 443d43 <strcmp@plt+0x405ab>
  40a1f7:	xor    ebp,ebp
  40a1f9:	mov    edi,0x5
  40a1fe:	xor    eax,eax
  40a200:	call   42e520 <strcmp@plt+0x2ad88>
  40a205:	jmp    40a237 <strcmp@plt+0x6a9f>
  40a207:	lea    rax,[rip+0x5abb2]        # 464dc0 <strcmp@plt+0x61628>
  40a20e:	cmp    DWORD PTR [rax],0x0
  40a211:	jle    40a235 <strcmp@plt+0x6a9d>
  40a213:	mov    rdi,rbp
  40a216:	call   422e20 <strcmp@plt+0x1f688>
  40a21b:	lea    rsi,[rip+0x39af1]        # 443d13 <strcmp@plt+0x4057b>
  40a222:	xor    ebp,ebp
  40a224:	mov    edi,0x5
  40a229:	mov    rdx,rax
  40a22c:	xor    eax,eax
  40a22e:	call   42e520 <strcmp@plt+0x2ad88>
  40a233:	jmp    40a237 <strcmp@plt+0x6a9f>
  40a235:	xor    ebp,ebp
  40a237:	mov    eax,ebp
  40a239:	add    rsp,0x8
  40a23d:	pop    rbx
  40a23e:	pop    r14
  40a240:	pop    r15
  40a242:	pop    rbp
  40a243:	ret    
  40a244:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a24e:	xchg   ax,ax
  40a250:	push   rbp
  40a251:	push   r15
  40a253:	push   r14
  40a255:	push   rbx
  40a256:	push   rax
  40a257:	mov    r14d,edx
  40a25a:	mov    r15,rsi
  40a25d:	mov    rbp,rdi
  40a260:	mov    edi,0x18
  40a265:	call   431d60 <strcmp@plt+0x2e5c8>
  40a26a:	test   rax,rax
  40a26d:	je     40a296 <strcmp@plt+0x6afe>
  40a26f:	mov    rbx,rax
  40a272:	mov    rdi,rbp
  40a275:	call   423440 <strcmp@plt+0x1fca8>
  40a27a:	mov    QWORD PTR [rbx],rax
  40a27d:	mov    rdi,r15
  40a280:	call   403710 <strdup@plt>
  40a285:	mov    QWORD PTR [rbx+0x8],rax
  40a289:	mov    DWORD PTR [rbx+0x10],0x1
  40a290:	mov    DWORD PTR [rbx+0x14],r14d
  40a294:	jmp    40a2ab <strcmp@plt+0x6b13>
  40a296:	lea    rsi,[rip+0x39acc]        # 443d69 <strcmp@plt+0x405d1>
  40a29d:	xor    ebx,ebx
  40a29f:	mov    edi,0x3
  40a2a4:	xor    eax,eax
  40a2a6:	call   42e520 <strcmp@plt+0x2ad88>
  40a2ab:	mov    rax,rbx
  40a2ae:	add    rsp,0x8
  40a2b2:	pop    rbx
  40a2b3:	pop    r14
  40a2b5:	pop    r15
  40a2b7:	pop    rbp
  40a2b8:	ret    
  40a2b9:	nop    DWORD PTR [rax+0x0]
  40a2c0:	push   rbx
  40a2c1:	mov    rbx,rdi
  40a2c4:	mov    rdi,QWORD PTR [rdi]
  40a2c7:	call   422c90 <strcmp@plt+0x1f4f8>
  40a2cc:	mov    rdi,QWORD PTR [rbx+0x8]
  40a2d0:	call   403790 <free@plt>
  40a2d5:	mov    rdi,rbx
  40a2d8:	pop    rbx
  40a2d9:	jmp    403790 <free@plt>
  40a2de:	xchg   ax,ax
  40a2e0:	push   r15
  40a2e2:	push   r14
  40a2e4:	push   r13
  40a2e6:	push   r12
  40a2e8:	push   rbx
  40a2e9:	test   rdi,rdi
  40a2ec:	je     40a39a <strcmp@plt+0x6c02>
  40a2f2:	mov    r14,rdi
  40a2f5:	mov    BYTE PTR [rip+0x5df14],0x0        # 468210 <strcmp@plt+0x64a78>
  40a2fc:	lea    rbx,[rip+0x5df0d]        # 468210 <strcmp@plt+0x64a78>
  40a303:	mov    rdi,rbx
  40a306:	call   4031e0 <strlen@plt>
  40a30b:	lea    r12,[rbx+rax*1]
  40a30f:	mov    r15d,0x1f4
  40a315:	mov    r13d,0x1f4
  40a31b:	sub    r13,rax
  40a31e:	mov    rdi,QWORD PTR [r14]
  40a321:	call   422e20 <strcmp@plt+0x1f688>
  40a326:	lea    rdx,[rip+0x39a90]        # 443dbd <strcmp@plt+0x40625>
  40a32d:	mov    rdi,r12
  40a330:	mov    rsi,r13
  40a333:	mov    rcx,rax
  40a336:	xor    eax,eax
  40a338:	call   403630 <snprintf@plt>
  40a33d:	mov    rdi,rbx
  40a340:	call   4031e0 <strlen@plt>
  40a345:	lea    rdi,[rbx+rax*1]
  40a349:	mov    esi,0x1f4
  40a34e:	sub    rsi,rax
  40a351:	lea    rdx,[rip+0x39a73]        # 443dcb <strcmp@plt+0x40633>
  40a358:	xor    eax,eax
  40a35a:	call   403630 <snprintf@plt>
  40a35f:	mov    rdi,rbx
  40a362:	call   4031e0 <strlen@plt>
  40a367:	add    rbx,rax
  40a36a:	sub    r15,rax
  40a36d:	cmp    DWORD PTR [r14+0x14],0x0
  40a372:	lea    rax,[rip+0x39a76]        # 443def <strcmp@plt+0x40657>
  40a379:	lea    rcx,[rip+0x39a73]        # 443df3 <strcmp@plt+0x4065b>
  40a380:	cmove  rcx,rax
  40a384:	lea    rdx,[rip+0x39a4e]        # 443dd9 <strcmp@plt+0x40641>
  40a38b:	mov    rdi,rbx
  40a38e:	mov    rsi,r15
  40a391:	xor    eax,eax
  40a393:	call   403630 <snprintf@plt>
  40a398:	jmp    40a3ae <strcmp@plt+0x6c16>
  40a39a:	mov    DWORD PTR [rip+0x5de6f],0x5f4c4c        # 468213 <strcmp@plt+0x64a7b>
  40a3a4:	mov    DWORD PTR [rip+0x5de62],0x4c554e5f        # 468210 <strcmp@plt+0x64a78>
  40a3ae:	lea    rax,[rip+0x5de5b]        # 468210 <strcmp@plt+0x64a78>
  40a3b5:	pop    rbx
  40a3b6:	pop    r12
  40a3b8:	pop    r13
  40a3ba:	pop    r14
  40a3bc:	pop    r15
  40a3be:	ret    
  40a3bf:	nop
  40a3c0:	mov    edi,0x78
  40a3c5:	jmp    431d60 <strcmp@plt+0x2e5c8>
  40a3ca:	nop    WORD PTR [rax+rax*1+0x0]
  40a3d0:	push   rbx
  40a3d1:	mov    rbx,rdi
  40a3d4:	mov    rdi,QWORD PTR [rdi+0x8]
  40a3d8:	call   422c90 <strcmp@plt+0x1f4f8>
  40a3dd:	mov    rdi,QWORD PTR [rbx]
  40a3e0:	call   422c90 <strcmp@plt+0x1f4f8>
  40a3e5:	mov    rdi,QWORD PTR [rbx+0x10]
  40a3e9:	call   422c90 <strcmp@plt+0x1f4f8>
  40a3ee:	mov    rdi,QWORD PTR [rbx+0x18]
  40a3f2:	call   422c90 <strcmp@plt+0x1f4f8>
  40a3f7:	mov    rdi,rbx
  40a3fa:	pop    rbx
  40a3fb:	jmp    403790 <free@plt>
  40a400:	jmp    403790 <free@plt>
  40a405:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a40f:	nop
  40a410:	push   rbp
  40a411:	push   rbx
  40a412:	push   rax
  40a413:	mov    rbx,rdi
  40a416:	xor    ebp,ebp
  40a418:	xor    eax,eax
  40a41a:	call   408640 <strcmp@plt+0x4ea8>
  40a41f:	mov    QWORD PTR [rbx+0x18],rax
  40a423:	lea    rdi,[rip+0x18866]        # 422c90 <strcmp@plt+0x1f4f8>
  40a42a:	call   42b9b0 <strcmp@plt+0x28218>
  40a42f:	mov    QWORD PTR [rbx+0x30],rax
  40a433:	lea    rdi,[rip+0x22696]        # 42cad0 <strcmp@plt+0x29338>
  40a43a:	call   435e70 <strcmp@plt+0x326d8>
  40a43f:	mov    QWORD PTR [rbx+0x38],rax
  40a443:	cmp    QWORD PTR [rbx+0x18],0x0
  40a448:	je     40a46b <strcmp@plt+0x6cd3>
  40a44a:	test   rax,rax
  40a44d:	je     40a46b <strcmp@plt+0x6cd3>
  40a44f:	cmp    QWORD PTR [rbx+0x30],0x0
  40a454:	je     40a46b <strcmp@plt+0x6cd3>
  40a456:	lea    rdi,[rip+0x18833]        # 422c90 <strcmp@plt+0x1f4f8>
  40a45d:	call   42b9b0 <strcmp@plt+0x28218>
  40a462:	mov    QWORD PTR [rbx+0x48],rax
  40a466:	mov    ebp,0x1
  40a46b:	mov    eax,ebp
  40a46d:	add    rsp,0x8
  40a471:	pop    rbx
  40a472:	pop    rbp
  40a473:	ret    
  40a474:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a47e:	xchg   ax,ax
  40a480:	test   rdi,rdi
  40a483:	je     40a4be <strcmp@plt+0x6d26>
  40a485:	push   rbx
  40a486:	mov    rbx,rdi
  40a489:	mov    rdi,QWORD PTR [rdi+0x38]
  40a48d:	call   436460 <strcmp@plt+0x32cc8>
  40a492:	mov    rdi,QWORD PTR [rbx+0x18]
  40a496:	call   408690 <strcmp@plt+0x4ef8>
  40a49b:	mov    rdi,QWORD PTR [rbx+0x30]
  40a49f:	call   42bff0 <strcmp@plt+0x28858>
  40a4a4:	mov    rdi,QWORD PTR [rbx+0x28]
  40a4a8:	test   rdi,rdi
  40a4ab:	je     40a4b4 <strcmp@plt+0x6d1c>
  40a4ad:	mov    rax,QWORD PTR [rbx+0x20]
  40a4b1:	call   QWORD PTR [rax+0x8]
  40a4b4:	mov    rdi,QWORD PTR [rbx+0x48]
  40a4b8:	pop    rbx
  40a4b9:	jmp    42bff0 <strcmp@plt+0x28858>
  40a4be:	ret    
  40a4bf:	nop
  40a4c0:	mov    rax,rdi
  40a4c3:	ret    
  40a4c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4ce:	xchg   ax,ax
  40a4d0:	push   rbp
  40a4d1:	push   r15
  40a4d3:	push   r14
  40a4d5:	push   r13
  40a4d7:	push   r12
  40a4d9:	push   rbx
  40a4da:	sub    rsp,0x68
  40a4de:	mov    r14,rdx
  40a4e1:	mov    r12,rdi
  40a4e4:	vmovups ymm0,YMMWORD PTR [rsi]
  40a4e8:	vmovups ymm1,YMMWORD PTR [rsi+0x20]
  40a4ed:	vmovups YMMWORD PTR [rsp+0x40],ymm1
  40a4f3:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  40a4f9:	lea    rdi,[rsp+0x20]
  40a4fe:	vzeroupper 
  40a501:	call   4213d0 <strcmp@plt+0x1dc38>
  40a506:	mov    rbp,rax
  40a509:	lea    r13,[rip+0x660a8]        # 4705b8 <strcmp@plt+0x6ce20>
  40a510:	mov    rdi,QWORD PTR [r13+0x0]
  40a514:	mov    rsi,QWORD PTR [rax+0x4]
  40a518:	call   432300 <strcmp@plt+0x2eb68>
  40a51d:	test   rax,rax
  40a520:	je     40a57f <strcmp@plt+0x6de7>
  40a522:	mov    rdi,rax
  40a525:	call   4325a0 <strcmp@plt+0x2ee08>
  40a52a:	mov    r15,rax
  40a52d:	test   BYTE PTR [rbp+0x0],0x8
  40a531:	jne    40a5b7 <strcmp@plt+0x6e1f>
  40a537:	mov    QWORD PTR [rsp+0x8],r15
  40a53c:	mov    rdi,r15
  40a53f:	call   436ff0 <strcmp@plt+0x33858>
  40a544:	mov    r15,QWORD PTR [rax]
  40a547:	mov    r13b,BYTE PTR [r15+0x10]
  40a54b:	movzx  ebp,BYTE PTR [rbp+0x3]
  40a54f:	test   r13b,r13b
  40a552:	je     40a621 <strcmp@plt+0x6e89>
  40a558:	mov    eax,ebp
  40a55a:	mov    ebp,0x1
  40a55f:	cmp    al,0x2
  40a561:	jb     40a668 <strcmp@plt+0x6ed0>
  40a567:	lea    rsi,[rip+0x3a042]        # 4445b0 <strcmp@plt+0x40e18>
  40a56e:	mov    edi,0x4
  40a573:	xor    eax,eax
  40a575:	call   42e520 <strcmp@plt+0x2ad88>
  40a57a:	jmp    40a668 <strcmp@plt+0x6ed0>
  40a57f:	lea    rax,[rip+0x5a83a]        # 464dc0 <strcmp@plt+0x61628>
  40a586:	xor    ebx,ebx
  40a588:	cmp    DWORD PTR [rax],0x2
  40a58b:	jl     40a82c <strcmp@plt+0x7094>
  40a591:	mov    rdi,QWORD PTR [rbp+0x4]
  40a595:	call   431f10 <strcmp@plt+0x2e778>
  40a59a:	lea    rsi,[rip+0x39fcb]        # 44456c <strcmp@plt+0x40dd4>
  40a5a1:	xor    ebx,ebx
  40a5a3:	mov    edi,0x6
  40a5a8:	mov    rdx,rax
  40a5ab:	xor    eax,eax
  40a5ad:	call   42e520 <strcmp@plt+0x2ad88>
  40a5b2:	jmp    40a82c <strcmp@plt+0x7094>
  40a5b7:	cmp    BYTE PTR [rbp+0x3],0x2
  40a5bb:	lea    rbp,[rip+0x5a7fe]        # 464dc0 <strcmp@plt+0x61628>
  40a5c2:	jb     40a5dd <strcmp@plt+0x6e45>
  40a5c4:	cmp    DWORD PTR [rbp+0x0],0x0
  40a5c8:	jle    40a5dd <strcmp@plt+0x6e45>
  40a5ca:	lea    rsi,[rip+0x3a146]        # 444717 <strcmp@plt+0x40f7f>
  40a5d1:	mov    edi,0x5
  40a5d6:	xor    eax,eax
  40a5d8:	call   42e520 <strcmp@plt+0x2ad88>
  40a5dd:	xor    eax,eax
  40a5df:	call   428ae0 <strcmp@plt+0x25348>
  40a5e4:	mov    rbx,rax
  40a5e7:	lea    rdi,[rsp+0x20]
  40a5ec:	lea    rdx,[rsp+0x10]
  40a5f1:	mov    rsi,rax
  40a5f4:	call   421030 <strcmp@plt+0x1d898>
  40a5f9:	cmp    eax,0x1
  40a5fc:	jne    40a818 <strcmp@plt+0x7080>
  40a602:	mov    rdi,rbx
  40a605:	call   4295f0 <strcmp@plt+0x25e58>
  40a60a:	test   eax,eax
  40a60c:	je     40a83d <strcmp@plt+0x70a5>
  40a612:	cmp    DWORD PTR [rbp+0x0],0x0
  40a616:	jg     40a805 <strcmp@plt+0x706d>
  40a61c:	jmp    40a818 <strcmp@plt+0x7080>
  40a621:	mov    rbx,QWORD PTR [r15+0x8]
  40a625:	lea    rdi,[r12-0x18]
  40a62a:	xor    eax,eax
  40a62c:	mov    QWORD PTR [rsp+0x8],rax
  40a631:	mov    rsi,rbx
  40a634:	xor    edx,edx
  40a636:	call   407930 <strcmp@plt+0x4198>
  40a63b:	mov    rdi,QWORD PTR [r12+0x18]
  40a640:	mov    rsi,rbx
  40a643:	call   4086c0 <strcmp@plt+0x4f28>
  40a648:	mov    rdi,rax
  40a64b:	call   4306e0 <strcmp@plt+0x2cf48>
  40a650:	mov    rdi,QWORD PTR [r12+0x18]
  40a655:	mov    esi,0x7
  40a65a:	call   408770 <strcmp@plt+0x4fd8>
  40a65f:	test   bpl,bpl
  40a662:	je     40a851 <strcmp@plt+0x70b9>
  40a668:	lea    rax,[r12-0x18]
  40a66d:	mov    QWORD PTR [rsp+0x18],rax
  40a672:	lea    r14,[rsp+0x10]
  40a677:	jmp    40a697 <strcmp@plt+0x6eff>
  40a679:	nop    DWORD PTR [rax+0x0]
  40a680:	mov    rdi,QWORD PTR [r12+0x18]
  40a685:	mov    esi,0x7
  40a68a:	call   408770 <strcmp@plt+0x4fd8>
  40a68f:	dec    ebp
  40a691:	je     40a7ed <strcmp@plt+0x7055>
  40a697:	xor    eax,eax
  40a699:	call   428ae0 <strcmp@plt+0x25348>
  40a69e:	mov    rbx,rax
  40a6a1:	lea    rdi,[rsp+0x20]
  40a6a6:	mov    rsi,rax
  40a6a9:	mov    rdx,r14
  40a6ac:	call   421030 <strcmp@plt+0x1d898>
  40a6b1:	cmp    eax,0x1
  40a6b4:	jne    40a818 <strcmp@plt+0x7080>
  40a6ba:	mov    rdi,rbx
  40a6bd:	call   4295f0 <strcmp@plt+0x25e58>
  40a6c2:	test   eax,eax
  40a6c4:	jne    40a7f9 <strcmp@plt+0x7061>
  40a6ca:	test   r13b,r13b
  40a6cd:	je     40a720 <strcmp@plt+0x6f88>
  40a6cf:	mov    rdi,r12
  40a6d2:	mov    rsi,rbx
  40a6d5:	call   40aaf0 <strcmp@plt+0x7358>
  40a6da:	cmp    eax,0x1
  40a6dd:	jne    40a680 <strcmp@plt+0x6ee8>
  40a6df:	mov    rdi,QWORD PTR [r12+0x18]
  40a6e4:	mov    rsi,rbx
  40a6e7:	call   408710 <strcmp@plt+0x4f78>
  40a6ec:	mov    r15,rax
  40a6ef:	mov    rdi,r12
  40a6f2:	mov    rsi,rax
  40a6f5:	call   40aa00 <strcmp@plt+0x7268>
  40a6fa:	mov    rdi,QWORD PTR [rsp+0x18]
  40a6ff:	mov    rsi,rbx
  40a702:	xor    edx,edx
  40a704:	call   407930 <strcmp@plt+0x4198>
  40a709:	mov    rdi,rbx
  40a70c:	call   428bd0 <strcmp@plt+0x25438>
  40a711:	jmp    40a680 <strcmp@plt+0x6ee8>
  40a716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a720:	mov    rdi,QWORD PTR [r12+0x18]
  40a725:	mov    rsi,rbx
  40a728:	call   408710 <strcmp@plt+0x4f78>
  40a72d:	test   rax,rax
  40a730:	je     40a769 <strcmp@plt+0x6fd1>
  40a732:	mov    r15,rax
  40a735:	lea    rax,[rip+0x5a684]        # 464dc0 <strcmp@plt+0x61628>
  40a73c:	cmp    DWORD PTR [rax],0x2
  40a73f:	jl     40a754 <strcmp@plt+0x6fbc>
  40a741:	mov    edi,0x6
  40a746:	lea    rsi,[rip+0x39f08]        # 444655 <strcmp@plt+0x40ebd>
  40a74d:	xor    eax,eax
  40a74f:	call   42e520 <strcmp@plt+0x2ad88>
  40a754:	mov    rdi,rbx
  40a757:	call   428bd0 <strcmp@plt+0x25438>
  40a75c:	dec    ebp
  40a75e:	jne    40a697 <strcmp@plt+0x6eff>
  40a764:	jmp    40a7ed <strcmp@plt+0x7055>
  40a769:	mov    rdi,r12
  40a76c:	mov    rsi,rbx
  40a76f:	mov    edx,0x1
  40a774:	mov    ecx,0x1
  40a779:	call   40a930 <strcmp@plt+0x7198>
  40a77e:	test   rax,rax
  40a781:	je     40a7c4 <strcmp@plt+0x702c>
  40a783:	mov    r15,rax
  40a786:	mov    rdi,r12
  40a789:	mov    rsi,rax
  40a78c:	call   40aa00 <strcmp@plt+0x7268>
  40a791:	lea    rax,[rip+0x5a628]        # 464dc0 <strcmp@plt+0x61628>
  40a798:	cmp    DWORD PTR [rax],0x0
  40a79b:	jle    40a680 <strcmp@plt+0x6ee8>
  40a7a1:	mov    rdi,rbx
  40a7a4:	call   422e20 <strcmp@plt+0x1f688>
  40a7a9:	mov    edi,0x5
  40a7ae:	lea    rsi,[rip+0x39eec]        # 4446a1 <strcmp@plt+0x40f09>
  40a7b5:	mov    rdx,rax
  40a7b8:	xor    eax,eax
  40a7ba:	call   42e520 <strcmp@plt+0x2ad88>
  40a7bf:	jmp    40a680 <strcmp@plt+0x6ee8>
  40a7c4:	mov    edi,0x2
  40a7c9:	lea    rsi,[rip+0x39f0b]        # 4446db <strcmp@plt+0x40f43>
  40a7d0:	mov    rdx,rbx
  40a7d3:	xor    eax,eax
  40a7d5:	call   42e520 <strcmp@plt+0x2ad88>
  40a7da:	mov    rdi,rbx
  40a7dd:	call   428bd0 <strcmp@plt+0x25438>
  40a7e2:	xor    r15d,r15d
  40a7e5:	dec    ebp
  40a7e7:	jne    40a697 <strcmp@plt+0x6eff>
  40a7ed:	lea    r13,[rip+0x65dc4]        # 4705b8 <strcmp@plt+0x6ce20>
  40a7f4:	jmp    40a887 <strcmp@plt+0x70ef>
  40a7f9:	lea    rax,[rip+0x5a5c0]        # 464dc0 <strcmp@plt+0x61628>
  40a800:	cmp    DWORD PTR [rax],0x0
  40a803:	jle    40a818 <strcmp@plt+0x7080>
  40a805:	lea    rsi,[rip+0x39def]        # 4445fb <strcmp@plt+0x40e63>
  40a80c:	mov    edi,0x5
  40a811:	xor    eax,eax
  40a813:	call   42e520 <strcmp@plt+0x2ad88>
  40a818:	mov    rdi,QWORD PTR [rsp+0x10]
  40a81d:	call   428670 <strcmp@plt+0x24ed8>
  40a822:	mov    rdi,rbx
  40a825:	call   428bd0 <strcmp@plt+0x25438>
  40a82a:	xor    ebx,ebx
  40a82c:	mov    eax,ebx
  40a82e:	add    rsp,0x68
  40a832:	pop    rbx
  40a833:	pop    r12
  40a835:	pop    r13
  40a837:	pop    r14
  40a839:	pop    r15
  40a83b:	pop    rbp
  40a83c:	ret    
  40a83d:	mov    rax,QWORD PTR [rsp+0x10]
  40a842:	test   rax,rax
  40a845:	mov    QWORD PTR [rsp+0x8],r15
  40a84a:	je     40a858 <strcmp@plt+0x70c0>
  40a84c:	mov    r14,QWORD PTR [rax]
  40a84f:	jmp    40a85c <strcmp@plt+0x70c4>
  40a851:	mov    ebx,0x1
  40a856:	jmp    40a82c <strcmp@plt+0x7094>
  40a858:	add    r14,0x20
  40a85c:	mov    rdi,QWORD PTR [r12+0x18]
  40a861:	mov    rsi,rbx
  40a864:	call   408710 <strcmp@plt+0x4f78>
  40a869:	test   rax,rax
  40a86c:	je     40a8b1 <strcmp@plt+0x7119>
  40a86e:	mov    r15,rax
  40a871:	mov    rdi,r12
  40a874:	mov    rsi,rax
  40a877:	mov    rdx,r14
  40a87a:	call   40ab90 <strcmp@plt+0x73f8>
  40a87f:	mov    rdi,rbx
  40a882:	call   428bd0 <strcmp@plt+0x25438>
  40a887:	mov    ebx,0x1
  40a88c:	mov    rsi,QWORD PTR [rsp+0x8]
  40a891:	test   rsi,rsi
  40a894:	je     40a82c <strcmp@plt+0x7094>
  40a896:	lea    rax,[rip+0x65d13]        # 4705b0 <strcmp@plt+0x6ce18>
  40a89d:	mov    rdx,QWORD PTR [rax]
  40a8a0:	mov    rcx,QWORD PTR [r13+0x0]
  40a8a4:	mov    rdi,r15
  40a8a7:	call   4371e0 <strcmp@plt+0x33a48>
  40a8ac:	jmp    40a82c <strcmp@plt+0x7094>
  40a8b1:	xor    ebx,ebx
  40a8b3:	cmp    DWORD PTR [rbp+0x0],0x2
  40a8b7:	jl     40a82c <strcmp@plt+0x7094>
  40a8bd:	lea    rsi,[rip+0x39ea4]        # 444768 <strcmp@plt+0x40fd0>
  40a8c4:	xor    ebx,ebx
  40a8c6:	mov    edi,0x6
  40a8cb:	xor    eax,eax
  40a8cd:	call   42e520 <strcmp@plt+0x2ad88>
  40a8d2:	jmp    40a82c <strcmp@plt+0x7094>
  40a8d7:	nop    WORD PTR [rax+rax*1+0x0]
  40a8e0:	push   r14
  40a8e2:	push   rbx
  40a8e3:	push   rax
  40a8e4:	mov    rbx,rdi
  40a8e7:	mov    r14,QWORD PTR [rsi+0x8]
  40a8eb:	add    rdi,0xffffffffffffffe8
  40a8ef:	mov    rsi,r14
  40a8f2:	xor    edx,edx
  40a8f4:	call   407930 <strcmp@plt+0x4198>
  40a8f9:	mov    rdi,QWORD PTR [rbx+0x18]
  40a8fd:	mov    rsi,r14
  40a900:	call   4086c0 <strcmp@plt+0x4f28>
  40a905:	mov    rdi,rax
  40a908:	call   4306e0 <strcmp@plt+0x2cf48>
  40a90d:	mov    rdi,QWORD PTR [rbx+0x18]
  40a911:	mov    esi,0x7
  40a916:	call   408770 <strcmp@plt+0x4fd8>
  40a91b:	mov    eax,0x1
  40a920:	add    rsp,0x8
  40a924:	pop    rbx
  40a925:	pop    r14
  40a927:	ret    
  40a928:	nop    DWORD PTR [rax+rax*1+0x0]
  40a930:	push   rbp
  40a931:	push   r15
  40a933:	push   r14
  40a935:	push   r12
  40a937:	push   rbx
  40a938:	mov    r15d,ecx
  40a93b:	mov    ebp,edx
  40a93d:	mov    r14,rsi
  40a940:	mov    r12,rdi
  40a943:	xor    eax,eax
  40a945:	call   430690 <strcmp@plt+0x2cef8>
  40a94a:	test   rax,rax
  40a94d:	je     40a9ea <strcmp@plt+0x7252>
  40a953:	mov    rbx,rax
  40a956:	mov    rdi,rax
  40a959:	mov    rsi,r14
  40a95c:	cmp    ebp,0x1
  40a95f:	jne    40a968 <strcmp@plt+0x71d0>
  40a961:	call   4306c0 <strcmp@plt+0x2cf28>
  40a966:	jmp    40a96d <strcmp@plt+0x71d5>
  40a968:	call   4306d0 <strcmp@plt+0x2cf38>
  40a96d:	mov    rax,QWORD PTR [r12+0x20]
  40a972:	mov    rdi,QWORD PTR [r12+0x28]
  40a977:	mov    rsi,rbx
  40a97a:	call   QWORD PTR [rax+0x20]
  40a97d:	cmp    eax,0x1
  40a980:	jne    40a9a2 <strcmp@plt+0x720a>
  40a982:	mov    rdi,QWORD PTR [r12+0x18]
  40a987:	mov    rsi,r14
  40a98a:	mov    rdx,rbx
  40a98d:	call   4086b0 <strcmp@plt+0x4f18>
  40a992:	cmp    eax,0x1
  40a995:	jne    40a9b8 <strcmp@plt+0x7220>
  40a997:	test   r15b,r15b
  40a99a:	je     40a9f8 <strcmp@plt+0x7260>
  40a99c:	mov    BYTE PTR [rbx+0x10],0x1
  40a9a0:	jmp    40a9ec <strcmp@plt+0x7254>
  40a9a2:	mov    rdi,r14
  40a9a5:	call   422e20 <strcmp@plt+0x1f688>
  40a9aa:	lea    rsi,[rip+0x3a27e]        # 444c2f <strcmp@plt+0x41497>
  40a9b1:	mov    edi,0x3
  40a9b6:	jmp    40a9d8 <strcmp@plt+0x7240>
  40a9b8:	lea    rax,[rip+0x5a401]        # 464dc0 <strcmp@plt+0x61628>
  40a9bf:	cmp    DWORD PTR [rax],0x0
  40a9c2:	jle    40a9e2 <strcmp@plt+0x724a>
  40a9c4:	mov    rdi,r14
  40a9c7:	call   422e20 <strcmp@plt+0x1f688>
  40a9cc:	lea    rsi,[rip+0x3a2ba]        # 444c8d <strcmp@plt+0x414f5>
  40a9d3:	mov    edi,0x5
  40a9d8:	mov    rdx,rax
  40a9db:	xor    eax,eax
  40a9dd:	call   42e520 <strcmp@plt+0x2ad88>
  40a9e2:	mov    rdi,rbx
  40a9e5:	call   4306e0 <strcmp@plt+0x2cf48>
  40a9ea:	xor    ebx,ebx
  40a9ec:	mov    rax,rbx
  40a9ef:	pop    rbx
  40a9f0:	pop    r12
  40a9f2:	pop    r14
  40a9f4:	pop    r15
  40a9f6:	pop    rbp
  40a9f7:	ret    
  40a9f8:	mov    BYTE PTR [rbx+0x10],0x0
  40a9fc:	jmp    40a9ec <strcmp@plt+0x7254>
  40a9fe:	xchg   ax,ax
  40aa00:	push   rbp
  40aa01:	push   r15
  40aa03:	push   r14
  40aa05:	push   r13
  40aa07:	push   r12
  40aa09:	push   rbx
  40aa0a:	push   rax
  40aa0b:	mov    r14,rsi
  40aa0e:	mov    r12,rdi
  40aa11:	cmp    BYTE PTR [rsi],0x1
  40aa14:	jne    40aa4a <strcmp@plt+0x72b2>
  40aa16:	lea    rax,[rip+0x65b93]        # 4705b0 <strcmp@plt+0x6ce18>
  40aa1d:	mov    rdx,QWORD PTR [rax]
  40aa20:	lea    rax,[rip+0x65b91]        # 4705b8 <strcmp@plt+0x6ce20>
  40aa27:	mov    rcx,QWORD PTR [rax]
  40aa2a:	mov    rdi,r14
  40aa2d:	mov    esi,0x1
  40aa32:	call   437310 <strcmp@plt+0x33b78>
  40aa37:	mov    rax,QWORD PTR [r14+0x8]
  40aa3b:	imul   edx,DWORD PTR [rax+0x30],0x3c
  40aa3f:	mov    rdi,r12
  40aa42:	mov    rsi,r14
  40aa45:	call   40b5d0 <strcmp@plt+0x7e38>
  40aa4a:	cmp    DWORD PTR [r12+0xc],0x0
  40aa50:	je     40aadf <strcmp@plt+0x7347>
  40aa56:	lea    rax,[rip+0x65b53]        # 4705b0 <strcmp@plt+0x6ce18>
  40aa5d:	mov    rdx,QWORD PTR [rax]
  40aa60:	lea    rax,[rip+0x65b51]        # 4705b8 <strcmp@plt+0x6ce20>
  40aa67:	mov    rcx,QWORD PTR [rax]
  40aa6a:	mov    rdi,r14
  40aa6d:	mov    esi,0x5
  40aa72:	call   437310 <strcmp@plt+0x33b78>
  40aa77:	mov    r15,QWORD PTR [r14+0x8]
  40aa7b:	mov    rax,QWORD PTR [r15+0x28]
  40aa7f:	mov    r13,QWORD PTR [rax+0x8]
  40aa83:	cmp    r13,rax
  40aa86:	jne    40aa9d <strcmp@plt+0x7305>
  40aa88:	jmp    40aadf <strcmp@plt+0x7347>
  40aa8a:	nop    WORD PTR [rax+rax*1+0x0]
  40aa90:	mov    rax,QWORD PTR [r15+0x28]
  40aa94:	mov    r13,QWORD PTR [r13+0x8]
  40aa98:	cmp    r13,rax
  40aa9b:	je     40aadf <strcmp@plt+0x7347>
  40aa9d:	mov    rbx,QWORD PTR [r13+0x10]
  40aaa1:	cmp    DWORD PTR [rbx+0x18],0x0
  40aaa5:	je     40aa94 <strcmp@plt+0x72fc>
  40aaa7:	mov    rbp,QWORD PTR [rbx+0x8]
  40aaab:	mov    rdx,QWORD PTR [rbp+0x10]
  40aaaf:	mov    rcx,QWORD PTR [rdx]
  40aab2:	cmp    DWORD PTR [rcx+0x18],0x0
  40aab6:	je     40aa94 <strcmp@plt+0x72fc>
  40aab8:	cmp    rbp,rbx
  40aabb:	je     40aa94 <strcmp@plt+0x72fc>
  40aabd:	nop    DWORD PTR [rax]
  40aac0:	mov    ecx,DWORD PTR [r12+0xc]
  40aac5:	mov    rdi,r12
  40aac8:	mov    rsi,r14
  40aacb:	call   40b740 <strcmp@plt+0x7fa8>
  40aad0:	mov    rbp,QWORD PTR [rbp+0x8]
  40aad4:	cmp    rbp,rbx
  40aad7:	je     40aa90 <strcmp@plt+0x72f8>
  40aad9:	mov    rdx,QWORD PTR [rbp+0x10]
  40aadd:	jmp    40aac0 <strcmp@plt+0x7328>
  40aadf:	add    rsp,0x8
  40aae3:	pop    rbx
  40aae4:	pop    r12
  40aae6:	pop    r13
  40aae8:	pop    r14
  40aaea:	pop    r15
  40aaec:	pop    rbp
  40aaed:	ret    
  40aaee:	xchg   ax,ax
  40aaf0:	push   r15
  40aaf2:	push   r14
  40aaf4:	push   rbx
  40aaf5:	mov    r14,rsi
  40aaf8:	mov    r15,rdi
  40aafb:	mov    rdi,QWORD PTR [rdi+0x18]
  40aaff:	call   408710 <strcmp@plt+0x4f78>
  40ab04:	mov    rbx,rax
  40ab07:	lea    rax,[rip+0x5a2b2]        # 464dc0 <strcmp@plt+0x61628>
  40ab0e:	mov    eax,DWORD PTR [rax]
  40ab10:	test   rbx,rbx
  40ab13:	je     40ab5a <strcmp@plt+0x73c2>
  40ab15:	cmp    eax,0x2
  40ab18:	jl     40ab38 <strcmp@plt+0x73a0>
  40ab1a:	mov    rdi,r14
  40ab1d:	call   422e20 <strcmp@plt+0x1f688>
  40ab22:	lea    rsi,[rip+0x3a1d3]        # 444cfc <strcmp@plt+0x41564>
  40ab29:	mov    edi,0x6
  40ab2e:	mov    rdx,rax
  40ab31:	xor    eax,eax
  40ab33:	call   42e520 <strcmp@plt+0x2ad88>
  40ab38:	mov    rdi,QWORD PTR [rbx+0x8]
  40ab3c:	mov    rsi,QWORD PTR [r14+0x28]
  40ab40:	call   4291d0 <strcmp@plt+0x25a38>
  40ab45:	mov    rax,QWORD PTR [r15+0x20]
  40ab49:	mov    rdi,QWORD PTR [r15+0x28]
  40ab4d:	mov    rsi,rbx
  40ab50:	call   QWORD PTR [rax+0x38]
  40ab53:	mov    ebx,0x1
  40ab58:	jmp    40ab81 <strcmp@plt+0x73e9>
  40ab5a:	xor    ebx,ebx
  40ab5c:	cmp    eax,0x2
  40ab5f:	jl     40ab81 <strcmp@plt+0x73e9>
  40ab61:	mov    rdi,r14
  40ab64:	call   422e20 <strcmp@plt+0x1f688>
  40ab69:	lea    rsi,[rip+0x3a172]        # 444ce2 <strcmp@plt+0x4154a>
  40ab70:	xor    ebx,ebx
  40ab72:	mov    edi,0x6
  40ab77:	mov    rdx,rax
  40ab7a:	xor    eax,eax
  40ab7c:	call   42e520 <strcmp@plt+0x2ad88>
  40ab81:	mov    eax,ebx
  40ab83:	pop    rbx
  40ab84:	pop    r14
  40ab86:	pop    r15
  40ab88:	ret    
  40ab89:	nop    DWORD PTR [rax+0x0]
  40ab90:	push   rbp
  40ab91:	push   r15
  40ab93:	push   r14
  40ab95:	push   r13
  40ab97:	push   r12
  40ab99:	push   rbx
  40ab9a:	push   rax
  40ab9b:	mov    rbx,rdx
  40ab9e:	mov    r15,rsi
  40aba1:	mov    r12,rdi
  40aba4:	mov    r14,QWORD PTR [rsi+0x8]
  40aba8:	mov    rdi,r14
  40abab:	mov    rsi,rdx
  40abae:	call   4290a0 <strcmp@plt+0x25908>
  40abb3:	mov    r13,rax
  40abb6:	lea    rbp,[rip+0x5a203]        # 464dc0 <strcmp@plt+0x61628>
  40abbd:	mov    eax,DWORD PTR [rbp+0x0]
  40abc0:	test   r13,r13
  40abc3:	je     40ac64 <strcmp@plt+0x74cc>
  40abc9:	test   eax,eax
  40abcb:	jle    40abfa <strcmp@plt+0x7462>
  40abcd:	mov    rdi,QWORD PTR [r13+0x0]
  40abd1:	call   422e20 <strcmp@plt+0x1f688>
  40abd6:	mov    rbx,rax
  40abd9:	mov    rdi,r14
  40abdc:	call   422e20 <strcmp@plt+0x1f688>
  40abe1:	lea    rsi,[rip+0x39f2a]        # 444b12 <strcmp@plt+0x4137a>
  40abe8:	mov    edi,0x5
  40abed:	mov    rdx,rbx
  40abf0:	mov    rcx,rax
  40abf3:	xor    eax,eax
  40abf5:	call   42e520 <strcmp@plt+0x2ad88>
  40abfa:	cmp    BYTE PTR [r13+0x8],0x0
  40abff:	jne    40ac4a <strcmp@plt+0x74b2>
  40ac01:	mov    BYTE PTR [r13+0x8],0x1
  40ac06:	cmp    DWORD PTR [rbp+0x0],0x0
  40ac0a:	jle    40ac2b <strcmp@plt+0x7493>
  40ac0c:	mov    rdi,QWORD PTR [r13+0x0]
  40ac10:	call   422e20 <strcmp@plt+0x1f688>
  40ac15:	lea    rsi,[rip+0x39f2e]        # 444b4a <strcmp@plt+0x413b2>
  40ac1c:	mov    edi,0x5
  40ac21:	mov    rdx,rax
  40ac24:	xor    eax,eax
  40ac26:	call   42e520 <strcmp@plt+0x2ad88>
  40ac2b:	mov    rax,QWORD PTR [r12+0x20]
  40ac30:	mov    rdi,QWORD PTR [r12+0x28]
  40ac35:	mov    rsi,r15
  40ac38:	call   QWORD PTR [rax+0x38]
  40ac3b:	lea    rdi,[r12-0x18]
  40ac40:	mov    rsi,r14
  40ac43:	xor    edx,edx
  40ac45:	call   407930 <strcmp@plt+0x4198>
  40ac4a:	mov    ecx,DWORD PTR [r12+0xc]
  40ac4f:	mov    rdi,r12
  40ac52:	mov    rsi,r15
  40ac55:	mov    rdx,r13
  40ac58:	call   40b740 <strcmp@plt+0x7fa8>
  40ac5d:	mov    ebp,0x1
  40ac62:	jmp    40ac9a <strcmp@plt+0x7502>
  40ac64:	mov    ebp,0xfffffffa
  40ac69:	cmp    eax,0x2
  40ac6c:	jl     40ac9a <strcmp@plt+0x7502>
  40ac6e:	mov    rdi,rbx
  40ac71:	call   422e20 <strcmp@plt+0x1f688>
  40ac76:	mov    rbx,rax
  40ac79:	mov    rdi,r14
  40ac7c:	call   422e20 <strcmp@plt+0x1f688>
  40ac81:	lea    rsi,[rip+0x39e59]        # 444ae1 <strcmp@plt+0x41349>
  40ac88:	mov    edi,0x6
  40ac8d:	mov    rdx,rbx
  40ac90:	mov    rcx,rax
  40ac93:	xor    eax,eax
  40ac95:	call   42e520 <strcmp@plt+0x2ad88>
  40ac9a:	mov    eax,ebp
  40ac9c:	add    rsp,0x8
  40aca0:	pop    rbx
  40aca1:	pop    r12
  40aca3:	pop    r13
  40aca5:	pop    r14
  40aca7:	pop    r15
  40aca9:	pop    rbp
  40acaa:	ret    
  40acab:	nop    DWORD PTR [rax+rax*1+0x0]
  40acb0:	push   r15
  40acb2:	push   r14
  40acb4:	push   r12
  40acb6:	push   rbx
  40acb7:	push   rax
  40acb8:	mov    r12,rdx
  40acbb:	mov    r15,rsi
  40acbe:	mov    rbx,rdi
  40acc1:	mov    rdi,QWORD PTR [rdi+0x18]
  40acc5:	mov    rsi,rdx
  40acc8:	call   4086d0 <strcmp@plt+0x4f38>
  40accd:	test   rax,rax
  40acd0:	je     40ad3b <strcmp@plt+0x75a3>
  40acd2:	mov    r14,rax
  40acd5:	mov    edi,0x10
  40acda:	call   431d90 <strcmp@plt+0x2e5f8>
  40acdf:	mov    r12,rax
  40ace2:	mov    QWORD PTR [rax],r14
  40ace5:	mov    rdi,r15
  40ace8:	call   423440 <strcmp@plt+0x1fca8>
  40aced:	mov    QWORD PTR [r12+0x8],rax
  40acf2:	add    rbx,0xffffffffffffffe8
  40acf6:	lea    rdx,[rip+0xb3]        # 40adb0 <strcmp@plt+0x7618>
  40acfd:	lea    r8,[rip+0x43c]        # 40b140 <strcmp@plt+0x79a8>
  40ad04:	mov    edi,0x7
  40ad09:	mov    rsi,rbx
  40ad0c:	mov    rcx,r12
  40ad0f:	call   437190 <strcmp@plt+0x339f8>
  40ad14:	mov    rbx,rax
  40ad17:	lea    rax,[rip+0x65892]        # 4705b0 <strcmp@plt+0x6ce18>
  40ad1e:	mov    rdi,QWORD PTR [rax]
  40ad21:	mov    rsi,r14
  40ad24:	mov    rdx,rbx
  40ad27:	call   437490 <strcmp@plt+0x33cf8>
  40ad2c:	mov    rdi,rbx
  40ad2f:	call   40adb0 <strcmp@plt+0x7618>
  40ad34:	mov    ebx,0x1
  40ad39:	jmp    40ad69 <strcmp@plt+0x75d1>
  40ad3b:	lea    rax,[rip+0x5a07e]        # 464dc0 <strcmp@plt+0x61628>
  40ad42:	xor    ebx,ebx
  40ad44:	cmp    DWORD PTR [rax],0x2
  40ad47:	jl     40ad69 <strcmp@plt+0x75d1>
  40ad49:	mov    rdi,r12
  40ad4c:	call   422e20 <strcmp@plt+0x1f688>
  40ad51:	lea    rsi,[rip+0x39a39]        # 444791 <strcmp@plt+0x40ff9>
  40ad58:	xor    ebx,ebx
  40ad5a:	mov    edi,0x6
  40ad5f:	mov    rdx,rax
  40ad62:	xor    eax,eax
  40ad64:	call   42e520 <strcmp@plt+0x2ad88>
  40ad69:	mov    eax,ebx
  40ad6b:	add    rsp,0x8
  40ad6f:	pop    rbx
  40ad70:	pop    r12
  40ad72:	pop    r14
  40ad74:	pop    r15
  40ad76:	ret    
  40ad77:	nop    WORD PTR [rax+rax*1+0x0]
  40ad80:	push   r15
  40ad82:	push   r14
  40ad84:	push   rbx
  40ad85:	mov    r14,rsi
  40ad88:	mov    r15,rdi
  40ad8b:	mov    edi,0x10
  40ad90:	call   431d90 <strcmp@plt+0x2e5f8>
  40ad95:	mov    rbx,rax
  40ad98:	mov    QWORD PTR [rax],r15
  40ad9b:	mov    rdi,r14
  40ad9e:	call   423440 <strcmp@plt+0x1fca8>
  40ada3:	mov    QWORD PTR [rbx+0x8],rax
  40ada7:	mov    rax,rbx
  40adaa:	pop    rbx
  40adab:	pop    r14
  40adad:	pop    r15
  40adaf:	ret    
  40adb0:	push   rbp
  40adb1:	push   r15
  40adb3:	push   r14
  40adb5:	push   r13
  40adb7:	push   r12
  40adb9:	push   rbx
  40adba:	sub    rsp,0x88
  40adc1:	mov    r14,rdi
  40adc4:	call   436ff0 <strcmp@plt+0x33858>
  40adc9:	mov    rbp,rax
  40adcc:	mov    rdi,r14
  40adcf:	call   437010 <strcmp@plt+0x33878>
  40add4:	mov    rbx,rax
  40add7:	mov    rdi,r14
  40adda:	call   436fe0 <strcmp@plt+0x33848>
  40addf:	mov    r13,rax
  40ade2:	mov    r12,rax
  40ade5:	mov    rdi,rbx
  40ade8:	call   432620 <strcmp@plt+0x2ee88>
  40aded:	cmp    eax,0x2
  40adf0:	jg     40aee9 <strcmp@plt+0x7751>
  40adf6:	mov    QWORD PTR [rsp+0x38],rbx
  40adfb:	xor    eax,eax
  40adfd:	call   432550 <strcmp@plt+0x2edb8>
  40ae02:	mov    QWORD PTR [rsp+0x28],rax
  40ae07:	mov    rax,QWORD PTR [rbp+0x0]
  40ae0b:	mov    rbp,QWORD PTR [rbp+0x8]
  40ae0f:	mov    r15,QWORD PTR [rax+0x8]
  40ae13:	mov    rdi,r15
  40ae16:	call   422ef0 <strcmp@plt+0x1f758>
  40ae1b:	mov    WORD PTR [rsp+0x18],ax
  40ae20:	lea    rax,[rip+0x59f99]        # 464dc0 <strcmp@plt+0x61628>
  40ae27:	cmp    DWORD PTR [rax],0x0
  40ae2a:	jle    40ae4a <strcmp@plt+0x76b2>
  40ae2c:	mov    rdi,r15
  40ae2f:	call   422e20 <strcmp@plt+0x1f688>
  40ae34:	lea    rsi,[rip+0x39f1c]        # 444d57 <strcmp@plt+0x415bf>
  40ae3b:	mov    edi,0x5
  40ae40:	mov    rdx,rax
  40ae43:	xor    eax,eax
  40ae45:	call   42e520 <strcmp@plt+0x2ad88>
  40ae4a:	mov    QWORD PTR [rsp+0x20],r12
  40ae4f:	mov    rdi,r12
  40ae52:	call   407850 <strcmp@plt+0x40b8>
  40ae57:	mov    rdi,rax
  40ae5a:	call   407650 <strcmp@plt+0x3eb8>
  40ae5f:	mov    rbx,rax
  40ae62:	mov    rdi,rbp
  40ae65:	mov    rsi,rax
  40ae68:	mov    rdx,r15
  40ae6b:	call   421fc0 <strcmp@plt+0x1e828>
  40ae70:	test   rax,rax
  40ae73:	je     40af58 <strcmp@plt+0x77c0>
  40ae79:	mov    r12,rax
  40ae7c:	mov    QWORD PTR [rsp+0x10],rbx
  40ae81:	movzx  eax,WORD PTR [rax+0x24]
  40ae85:	mov    rcx,QWORD PTR [r12+0x30]
  40ae8a:	movzx  edx,WORD PTR [rcx+rax*1]
  40ae8e:	movzx  esi,BYTE PTR [rcx+rax*1+0x2]
  40ae93:	mov    BYTE PTR [rcx+rax*1+0x2],sil
  40ae98:	shl    esi,0x10
  40ae9b:	or     esi,edx
  40ae9d:	or     esi,0x4000
  40aea3:	mov    WORD PTR [rcx+rax*1],si
  40aea7:	mov    rdx,QWORD PTR [rsp+0x28]
  40aeac:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  40aeb1:	mov    rdi,r15
  40aeb4:	call   422dd0 <strcmp@plt+0x1f638>
  40aeb9:	mov    rdi,rax
  40aebc:	call   433df0 <strcmp@plt+0x30658>
  40aec1:	mov    QWORD PTR [rsp+0x8],rax
  40aec6:	mov    rdi,rbp
  40aec9:	call   422ef0 <strcmp@plt+0x1f758>
  40aece:	movzx  ecx,WORD PTR [rsp+0x18]
  40aed3:	cmp    ax,cx
  40aed6:	jne    40af7a <strcmp@plt+0x77e2>
  40aedc:	mov    rdi,rbp
  40aedf:	call   422fd0 <strcmp@plt+0x1f838>
  40aee4:	jmp    40af9a <strcmp@plt+0x7802>
  40aee9:	lea    rax,[rip+0x59ed0]        # 464dc0 <strcmp@plt+0x61628>
  40aef0:	cmp    DWORD PTR [rax],0x0
  40aef3:	jle    40af18 <strcmp@plt+0x7780>
  40aef5:	mov    rax,QWORD PTR [rbp+0x0]
  40aef9:	mov    rdi,QWORD PTR [rax+0x8]
  40aefd:	call   422e20 <strcmp@plt+0x1f688>
  40af02:	lea    rsi,[rip+0x39a0f]        # 444918 <strcmp@plt+0x41180>
  40af09:	mov    edi,0x5
  40af0e:	mov    rdx,rax
  40af11:	xor    eax,eax
  40af13:	call   42e520 <strcmp@plt+0x2ad88>
  40af18:	mov    rax,QWORD PTR [rbp+0x0]
  40af1c:	mov    rbx,QWORD PTR [rax+0x8]
  40af20:	xor    ebp,ebp
  40af22:	mov    rdi,r12
  40af25:	mov    rsi,rbx
  40af28:	xor    edx,edx
  40af2a:	call   407930 <strcmp@plt+0x4198>
  40af2f:	mov    rdi,QWORD PTR [r12+0x30]
  40af34:	mov    rsi,rbx
  40af37:	call   4086c0 <strcmp@plt+0x4f28>
  40af3c:	mov    rdi,rax
  40af3f:	call   4306e0 <strcmp@plt+0x2cf48>
  40af44:	mov    rdi,QWORD PTR [r12+0x30]
  40af49:	mov    esi,0x7
  40af4e:	call   408770 <strcmp@plt+0x4fd8>
  40af53:	jmp    40b11e <strcmp@plt+0x7986>
  40af58:	lea    rsi,[rip+0x39e15]        # 444d74 <strcmp@plt+0x415dc>
  40af5f:	xor    ebp,ebp
  40af61:	mov    edi,0x3
  40af66:	xor    eax,eax
  40af68:	call   42e520 <strcmp@plt+0x2ad88>
  40af6d:	mov    rdi,rbx
  40af70:	call   42bff0 <strcmp@plt+0x28858>
  40af75:	jmp    40b11e <strcmp@plt+0x7986>
  40af7a:	movzx  ebx,cx
  40af7d:	mov    rdi,QWORD PTR [rsp+0x20]
  40af82:	call   407850 <strcmp@plt+0x40b8>
  40af87:	mov    rdi,rax
  40af8a:	mov    esi,ebx
  40af8c:	call   407640 <strcmp@plt+0x3ea8>
  40af91:	test   rax,rax
  40af94:	je     40b0e8 <strcmp@plt+0x7950>
  40af9a:	mov    rdi,rax
  40af9d:	call   423440 <strcmp@plt+0x1fca8>
  40afa2:	mov    rcx,rax
  40afa5:	add    r13,0x18
  40afa9:	lea    rax,[rip+0x59e10]        # 464dc0 <strcmp@plt+0x61628>
  40afb0:	cmp    DWORD PTR [rax],0x0
  40afb3:	jle    40b00d <strcmp@plt+0x7875>
  40afb5:	mov    rdi,r12
  40afb8:	mov    rbx,rcx
  40afbb:	call   422570 <strcmp@plt+0x1edd8>
  40afc0:	mov    QWORD PTR [rsp+0x18],rax
  40afc5:	mov    rdi,QWORD PTR [rsp+0x10]
  40afca:	call   422b30 <strcmp@plt+0x1f398>
  40afcf:	mov    QWORD PTR [rsp+0x30],rax
  40afd4:	mov    rdi,rbp
  40afd7:	call   422e20 <strcmp@plt+0x1f688>
  40afdc:	mov    rbp,rax
  40afdf:	mov    rdi,r15
  40afe2:	call   422e20 <strcmp@plt+0x1f688>
  40afe7:	lea    rsi,[rip+0x39e1e]        # 444e0c <strcmp@plt+0x41674>
  40afee:	mov    edi,0x5
  40aff3:	mov    rdx,QWORD PTR [rsp+0x18]
  40aff8:	mov    rcx,QWORD PTR [rsp+0x30]
  40affd:	mov    r8,rbp
  40b000:	mov    r9,rax
  40b003:	xor    eax,eax
  40b005:	call   42e520 <strcmp@plt+0x2ad88>
  40b00a:	mov    rcx,rbx
  40b00d:	mov    rdi,r12
  40b010:	mov    esi,0x10f6
  40b015:	mov    edx,0x10f6
  40b01a:	mov    r15,rcx
  40b01d:	mov    r8,QWORD PTR [rsp+0x8]
  40b022:	call   421d40 <strcmp@plt+0x1e5a8>
  40b027:	mov    rdi,r13
  40b02a:	call   40b330 <strcmp@plt+0x7b98>
  40b02f:	test   rax,rax
  40b032:	je     40b0c2 <strcmp@plt+0x792a>
  40b038:	xor    ebp,ebp
  40b03a:	lea    rbx,[rsp+0x40]
  40b03f:	mov    rdi,rbx
  40b042:	mov    esi,0x10f6
  40b047:	mov    edx,0x10f6
  40b04c:	xor    ecx,ecx
  40b04e:	mov    r8,rax
  40b051:	call   435260 <strcmp@plt+0x31ac8>
  40b056:	mov    rdi,QWORD PTR [rsp+0x20]
  40b05b:	mov    rsi,r12
  40b05e:	mov    rdx,rbx
  40b061:	call   407920 <strcmp@plt+0x4188>
  40b066:	mov    ebx,eax
  40b068:	mov    rdi,QWORD PTR [rsp+0x10]
  40b06d:	call   42bff0 <strcmp@plt+0x28858>
  40b072:	mov    rdi,r12
  40b075:	call   42dd40 <strcmp@plt+0x2a5a8>
  40b07a:	mov    rdi,r15
  40b07d:	call   422c90 <strcmp@plt+0x1f4f8>
  40b082:	mov    rdi,QWORD PTR [rsp+0x8]
  40b087:	call   422c90 <strcmp@plt+0x1f4f8>
  40b08c:	cmp    ebx,0x1
  40b08f:	jne    40b11e <strcmp@plt+0x7986>
  40b095:	lea    rax,[rip+0x6551c]        # 4705b8 <strcmp@plt+0x6ce20>
  40b09c:	mov    rdi,QWORD PTR [rax]
  40b09f:	mov    rsi,QWORD PTR [rsp+0x28]
  40b0a4:	mov    rdx,QWORD PTR [rsp+0x38]
  40b0a9:	call   431f60 <strcmp@plt+0x2e7c8>
  40b0ae:	mov    rdi,r14
  40b0b1:	mov    esi,0x3
  40b0b6:	call   437020 <strcmp@plt+0x33888>
  40b0bb:	mov    ebp,0x1
  40b0c0:	jmp    40b11e <strcmp@plt+0x7986>
  40b0c2:	mov    rdi,QWORD PTR [rsp+0x10]
  40b0c7:	call   42bff0 <strcmp@plt+0x28858>
  40b0cc:	mov    rdi,r15
  40b0cf:	call   422c90 <strcmp@plt+0x1f4f8>
  40b0d4:	mov    rdi,QWORD PTR [rsp+0x8]
  40b0d9:	call   422c90 <strcmp@plt+0x1f4f8>
  40b0de:	mov    rdi,r12
  40b0e1:	call   42dd40 <strcmp@plt+0x2a5a8>
  40b0e6:	jmp    40b11c <strcmp@plt+0x7984>
  40b0e8:	lea    rax,[rip+0x59cd1]        # 464dc0 <strcmp@plt+0x61628>
  40b0ef:	cmp    DWORD PTR [rax],0x0
  40b0f2:	jle    40b112 <strcmp@plt+0x797a>
  40b0f4:	mov    rdi,r15
  40b0f7:	call   422e20 <strcmp@plt+0x1f688>
  40b0fc:	lea    rsi,[rip+0x39cb3]        # 444db6 <strcmp@plt+0x4161e>
  40b103:	mov    edi,0x5
  40b108:	mov    rdx,rax
  40b10b:	xor    eax,eax
  40b10d:	call   42e520 <strcmp@plt+0x2ad88>
  40b112:	mov    rdi,QWORD PTR [rsp+0x8]
  40b117:	call   422c90 <strcmp@plt+0x1f4f8>
  40b11c:	xor    ebp,ebp
  40b11e:	mov    eax,ebp
  40b120:	add    rsp,0x88
  40b127:	pop    rbx
  40b128:	pop    r12
  40b12a:	pop    r13
  40b12c:	pop    r14
  40b12e:	pop    r15
  40b130:	pop    rbp
  40b131:	ret    
  40b132:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b13c:	nop    DWORD PTR [rax+0x0]
  40b140:	push   rbx
  40b141:	mov    rbx,rdi
  40b144:	mov    rdi,QWORD PTR [rdi+0x8]
  40b148:	call   422c90 <strcmp@plt+0x1f4f8>
  40b14d:	mov    rdi,rbx
  40b150:	pop    rbx
  40b151:	jmp    403790 <free@plt>
  40b156:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b160:	push   rbp
  40b161:	push   r15
  40b163:	push   r14
  40b165:	push   r13
  40b167:	push   r12
  40b169:	push   rbx
  40b16a:	sub    rsp,0x68
  40b16e:	mov    rax,QWORD PTR [rdi+0x30]
  40b172:	cmp    DWORD PTR [rax+0x18],0x0
  40b176:	je     40b2bb <strcmp@plt+0x7b23>
  40b17c:	mov    r14,rcx
  40b17f:	mov    r15,rsi
  40b182:	mov    rbx,rdi
  40b185:	mov    r12,QWORD PTR [rdx+0x8]
  40b189:	add    rdi,0xffffffffffffffe8
  40b18d:	mov    QWORD PTR [rsp+0x18],rdi
  40b192:	call   407850 <strcmp@plt+0x40b8>
  40b197:	mov    rdi,rax
  40b19a:	call   407650 <strcmp@plt+0x3eb8>
  40b19f:	mov    r13,rax
  40b1a2:	lea    rax,[rip+0x59c17]        # 464dc0 <strcmp@plt+0x61628>
  40b1a9:	cmp    DWORD PTR [rax],0x0
  40b1ac:	jle    40b1cc <strcmp@plt+0x7a34>
  40b1ae:	mov    rdi,r13
  40b1b1:	call   422b30 <strcmp@plt+0x1f398>
  40b1b6:	lea    rsi,[rip+0x39660]        # 44481d <strcmp@plt+0x41085>
  40b1bd:	mov    edi,0x5
  40b1c2:	mov    rdx,rax
  40b1c5:	xor    eax,eax
  40b1c7:	call   42e520 <strcmp@plt+0x2ad88>
  40b1cc:	mov    rdi,r15
  40b1cf:	mov    rsi,r13
  40b1d2:	mov    rdx,r12
  40b1d5:	call   421fc0 <strcmp@plt+0x1e828>
  40b1da:	test   rax,rax
  40b1dd:	je     40b2de <strcmp@plt+0x7b46>
  40b1e3:	mov    rbp,rax
  40b1e6:	movzx  eax,WORD PTR [rax+0x24]
  40b1ea:	mov    rcx,QWORD PTR [rbp+0x30]
  40b1ee:	mov    QWORD PTR [rcx+rax*1+0x4],r14
  40b1f3:	lea    rax,[rip+0x59bc6]        # 464dc0 <strcmp@plt+0x61628>
  40b1fa:	cmp    DWORD PTR [rax],0x0
  40b1fd:	jle    40b24f <strcmp@plt+0x7ab7>
  40b1ff:	mov    rdi,rbp
  40b202:	call   422570 <strcmp@plt+0x1edd8>
  40b207:	mov    QWORD PTR [rsp+0x10],rax
  40b20c:	mov    rdi,r13
  40b20f:	call   422b30 <strcmp@plt+0x1f398>
  40b214:	mov    QWORD PTR [rsp+0x8],rax
  40b219:	mov    rdi,r15
  40b21c:	call   422e20 <strcmp@plt+0x1f688>
  40b221:	mov    r14,rax
  40b224:	mov    rdi,r12
  40b227:	call   422e20 <strcmp@plt+0x1f688>
  40b22c:	lea    rsi,[rip+0x39648]        # 44487b <strcmp@plt+0x410e3>
  40b233:	mov    edi,0x5
  40b238:	mov    rdx,QWORD PTR [rsp+0x10]
  40b23d:	mov    rcx,QWORD PTR [rsp+0x8]
  40b242:	mov    r8,r14
  40b245:	mov    r9,rax
  40b248:	xor    eax,eax
  40b24a:	call   42e520 <strcmp@plt+0x2ad88>
  40b24f:	mov    rdi,r13
  40b252:	call   42bff0 <strcmp@plt+0x28858>
  40b257:	mov    rdi,rbp
  40b25a:	mov    esi,0x10f6
  40b25f:	mov    edx,0x10f6
  40b264:	mov    rcx,r15
  40b267:	mov    r8,r12
  40b26a:	call   421d40 <strcmp@plt+0x1e5a8>
  40b26f:	mov    rdi,rbx
  40b272:	call   40b330 <strcmp@plt+0x7b98>
  40b277:	test   rax,rax
  40b27a:	je     40b307 <strcmp@plt+0x7b6f>
  40b280:	lea    rbx,[rsp+0x20]
  40b285:	mov    rdi,rbx
  40b288:	mov    esi,0x10f6
  40b28d:	mov    edx,0x10f6
  40b292:	xor    ecx,ecx
  40b294:	mov    r8,rax
  40b297:	call   435260 <strcmp@plt+0x31ac8>
  40b29c:	mov    rdi,QWORD PTR [rsp+0x18]
  40b2a1:	mov    rsi,rbp
  40b2a4:	mov    rdx,rbx
  40b2a7:	call   407920 <strcmp@plt+0x4188>
  40b2ac:	mov    rdi,rbp
  40b2af:	call   42dd40 <strcmp@plt+0x2a5a8>
  40b2b4:	mov    ebx,0x1
  40b2b9:	jmp    40b311 <strcmp@plt+0x7b79>
  40b2bb:	lea    rax,[rip+0x59afe]        # 464dc0 <strcmp@plt+0x61628>
  40b2c2:	cmp    DWORD PTR [rax],0x0
  40b2c5:	jle    40b30f <strcmp@plt+0x7b77>
  40b2c7:	lea    rsi,[rip+0x39513]        # 4447e1 <strcmp@plt+0x41049>
  40b2ce:	xor    ebx,ebx
  40b2d0:	mov    edi,0x5
  40b2d5:	xor    eax,eax
  40b2d7:	call   42e520 <strcmp@plt+0x2ad88>
  40b2dc:	jmp    40b311 <strcmp@plt+0x7b79>
  40b2de:	lea    rax,[rip+0x59adb]        # 464dc0 <strcmp@plt+0x61628>
  40b2e5:	cmp    DWORD PTR [rax],0x0
  40b2e8:	jle    40b2fd <strcmp@plt+0x7b65>
  40b2ea:	lea    rsi,[rip+0x39541]        # 444832 <strcmp@plt+0x4109a>
  40b2f1:	mov    edi,0x5
  40b2f6:	xor    eax,eax
  40b2f8:	call   42e520 <strcmp@plt+0x2ad88>
  40b2fd:	mov    rdi,r13
  40b300:	call   42bff0 <strcmp@plt+0x28858>
  40b305:	jmp    40b30f <strcmp@plt+0x7b77>
  40b307:	mov    rdi,rbp
  40b30a:	call   42dd40 <strcmp@plt+0x2a5a8>
  40b30f:	xor    ebx,ebx
  40b311:	mov    eax,ebx
  40b313:	add    rsp,0x68
  40b317:	pop    rbx
  40b318:	pop    r12
  40b31a:	pop    r13
  40b31c:	pop    r14
  40b31e:	pop    r15
  40b320:	pop    rbp
  40b321:	ret    
  40b322:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b32c:	nop    DWORD PTR [rax+0x0]
  40b330:	push   rbp
  40b331:	push   r15
  40b333:	push   r14
  40b335:	push   rbx
  40b336:	push   rax
  40b337:	mov    r14,rdi
  40b33a:	add    rdi,0xffffffffffffffe8
  40b33e:	call   407850 <strcmp@plt+0x40b8>
  40b343:	mov    rdi,rax
  40b346:	call   4076e0 <strcmp@plt+0x3f48>
  40b34b:	mov    r15d,eax
  40b34e:	test   r15b,0x2
  40b352:	je     40b38c <strcmp@plt+0x7bf4>
  40b354:	mov    rax,QWORD PTR [r14+0x30]
  40b358:	mov    rbp,QWORD PTR [rax+0x8]
  40b35c:	cmp    rbp,rax
  40b35f:	je     40b38c <strcmp@plt+0x7bf4>
  40b361:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b36b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b370:	mov    rbx,QWORD PTR [rbp+0x10]
  40b374:	mov    rdi,rbx
  40b377:	call   422ef0 <strcmp@plt+0x1f758>
  40b37c:	cmp    ax,0xa
  40b380:	je     40b3e1 <strcmp@plt+0x7c49>
  40b382:	mov    rbp,QWORD PTR [rbp+0x8]
  40b386:	cmp    rbp,QWORD PTR [r14+0x30]
  40b38a:	jne    40b370 <strcmp@plt+0x7bd8>
  40b38c:	test   r15b,0x1
  40b390:	je     40b3bc <strcmp@plt+0x7c24>
  40b392:	mov    rax,QWORD PTR [r14+0x30]
  40b396:	mov    rbp,QWORD PTR [rax+0x8]
  40b39a:	cmp    rbp,rax
  40b39d:	je     40b3bc <strcmp@plt+0x7c24>
  40b39f:	nop
  40b3a0:	mov    rbx,QWORD PTR [rbp+0x10]
  40b3a4:	mov    rdi,rbx
  40b3a7:	call   422ef0 <strcmp@plt+0x1f758>
  40b3ac:	cmp    ax,0x2
  40b3b0:	je     40b3e1 <strcmp@plt+0x7c49>
  40b3b2:	mov    rbp,QWORD PTR [rbp+0x8]
  40b3b6:	cmp    rbp,QWORD PTR [r14+0x30]
  40b3ba:	jne    40b3a0 <strcmp@plt+0x7c08>
  40b3bc:	lea    rax,[rip+0x599fd]        # 464dc0 <strcmp@plt+0x61628>
  40b3c3:	cmp    DWORD PTR [rax],0x0
  40b3c6:	jle    40b3df <strcmp@plt+0x7c47>
  40b3c8:	lea    rsi,[rip+0x3995c]        # 444d2b <strcmp@plt+0x41593>
  40b3cf:	xor    ebx,ebx
  40b3d1:	mov    edi,0x5
  40b3d6:	xor    eax,eax
  40b3d8:	call   42e520 <strcmp@plt+0x2ad88>
  40b3dd:	jmp    40b3e1 <strcmp@plt+0x7c49>
  40b3df:	xor    ebx,ebx
  40b3e1:	mov    rax,rbx
  40b3e4:	add    rsp,0x8
  40b3e8:	pop    rbx
  40b3e9:	pop    r14
  40b3eb:	pop    r15
  40b3ed:	pop    rbp
  40b3ee:	ret    
  40b3ef:	nop
  40b3f0:	push   rbp
  40b3f1:	push   r15
  40b3f3:	push   r14
  40b3f5:	push   r13
  40b3f7:	push   r12
  40b3f9:	push   rbx
  40b3fa:	sub    rsp,0x78
  40b3fe:	mov    QWORD PTR [rsp+0x8],rcx
  40b403:	mov    r15,rdx
  40b406:	mov    r13,rsi
  40b409:	mov    rbx,rdi
  40b40c:	lea    r12,[rdi-0x18]
  40b410:	mov    rdi,r12
  40b413:	call   407850 <strcmp@plt+0x40b8>
  40b418:	mov    r14,rax
  40b41b:	mov    rax,QWORD PTR [rbx+0x20]
  40b41f:	mov    rbp,QWORD PTR [rax+0x48]
  40b423:	mov    rbx,QWORD PTR [r15]
  40b426:	mov    rdi,r14
  40b429:	call   4076b0 <strcmp@plt+0x3f18>
  40b42e:	mov    rdi,rbx
  40b431:	mov    rsi,rax
  40b434:	call   rbp
  40b436:	mov    QWORD PTR [rsp],rax
  40b43a:	lea    rbx,[rsp+0x10]
  40b43f:	xor    r15d,r15d
  40b442:	mov    rdi,rbx
  40b445:	xor    esi,esi
  40b447:	call   422e90 <strcmp@plt+0x1f6f8>
  40b44c:	mov    rdi,r14
  40b44f:	call   407650 <strcmp@plt+0x3eb8>
  40b454:	mov    rbp,rax
  40b457:	mov    rdi,rbx
  40b45a:	mov    rsi,rax
  40b45d:	mov    rdx,r13
  40b460:	call   421fc0 <strcmp@plt+0x1e828>
  40b465:	mov    rbx,rax
  40b468:	mov    rdi,rbp
  40b46b:	call   42bff0 <strcmp@plt+0x28858>
  40b470:	test   rbx,rbx
  40b473:	je     40b4c1 <strcmp@plt+0x7d29>
  40b475:	movzx  eax,WORD PTR [rbx+0x24]
  40b479:	mov    rcx,QWORD PTR [rbx+0x30]
  40b47d:	mov    rdx,QWORD PTR [rsp+0x8]
  40b482:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  40b487:	or     BYTE PTR [rcx+rax*1],0x2
  40b48b:	lea    rbp,[rsp+0x30]
  40b490:	mov    rdi,rbp
  40b493:	mov    esi,0x10f6
  40b498:	mov    edx,0x10f6
  40b49d:	xor    ecx,ecx
  40b49f:	mov    r8,QWORD PTR [rsp]
  40b4a3:	call   435260 <strcmp@plt+0x31ac8>
  40b4a8:	mov    rdi,r12
  40b4ab:	mov    rsi,rbx
  40b4ae:	mov    rdx,rbp
  40b4b1:	call   407920 <strcmp@plt+0x4188>
  40b4b6:	mov    r15d,eax
  40b4b9:	mov    rdi,rbx
  40b4bc:	call   42dd40 <strcmp@plt+0x2a5a8>
  40b4c1:	mov    eax,r15d
  40b4c4:	add    rsp,0x78
  40b4c8:	pop    rbx
  40b4c9:	pop    r12
  40b4cb:	pop    r13
  40b4cd:	pop    r14
  40b4cf:	pop    r15
  40b4d1:	pop    rbp
  40b4d2:	ret    
  40b4d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b4dd:	nop    DWORD PTR [rax]
  40b4e0:	push   r15
  40b4e2:	push   r14
  40b4e4:	push   r12
  40b4e6:	push   rbx
  40b4e7:	push   rax
  40b4e8:	mov    rbx,rdi
  40b4eb:	call   436ff0 <strcmp@plt+0x33858>
  40b4f0:	mov    r14,rax
  40b4f3:	mov    r15,QWORD PTR [rax+0x8]
  40b4f7:	mov    rdi,rbx
  40b4fa:	call   436fe0 <strcmp@plt+0x33848>
  40b4ff:	mov    r12,rax
  40b502:	lea    rax,[rip+0x598b7]        # 464dc0 <strcmp@plt+0x61628>
  40b509:	cmp    DWORD PTR [rax],0x0
  40b50c:	jle    40b52c <strcmp@plt+0x7d94>
  40b50e:	mov    rdi,r15
  40b511:	call   422e20 <strcmp@plt+0x1f688>
  40b516:	lea    rsi,[rip+0x387dc]        # 443cf9 <strcmp@plt+0x40561>
  40b51d:	mov    edi,0x5
  40b522:	mov    rdx,rax
  40b525:	xor    eax,eax
  40b527:	call   42e520 <strcmp@plt+0x2ad88>
  40b52c:	mov    rbx,QWORD PTR [r14+0x8]
  40b530:	mov    rdi,r12
  40b533:	mov    rsi,rbx
  40b536:	xor    edx,edx
  40b538:	call   407930 <strcmp@plt+0x4198>
  40b53d:	mov    rdi,QWORD PTR [r12+0x30]
  40b542:	mov    rsi,rbx
  40b545:	call   4086c0 <strcmp@plt+0x4f28>
  40b54a:	mov    rdi,rax
  40b54d:	call   4306e0 <strcmp@plt+0x2cf48>
  40b552:	mov    rdi,QWORD PTR [r12+0x30]
  40b557:	mov    esi,0x7
  40b55c:	call   408770 <strcmp@plt+0x4fd8>
  40b561:	mov    eax,0x1
  40b566:	add    rsp,0x8
  40b56a:	pop    rbx
  40b56b:	pop    r12
  40b56d:	pop    r14
  40b56f:	pop    r15
  40b571:	ret    
  40b572:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b57c:	nop    DWORD PTR [rax+0x0]
  40b580:	push   r14
  40b582:	push   rbx
  40b583:	push   rax
  40b584:	mov    rbx,rsi
  40b587:	mov    r14,rdi
  40b58a:	lea    rax,[rip+0x6501f]        # 4705b0 <strcmp@plt+0x6ce18>
  40b591:	mov    rdx,QWORD PTR [rax]
  40b594:	lea    rax,[rip+0x6501d]        # 4705b8 <strcmp@plt+0x6ce20>
  40b59b:	mov    rcx,QWORD PTR [rax]
  40b59e:	mov    rdi,rsi
  40b5a1:	mov    esi,0x1
  40b5a6:	call   437310 <strcmp@plt+0x33b78>
  40b5ab:	mov    rax,QWORD PTR [rbx+0x8]
  40b5af:	imul   edx,DWORD PTR [rax+0x30],0x3c
  40b5b3:	mov    rdi,r14
  40b5b6:	mov    rsi,rbx
  40b5b9:	add    rsp,0x8
  40b5bd:	pop    rbx
  40b5be:	pop    r14
  40b5c0:	jmp    40b5d0 <strcmp@plt+0x7e38>
  40b5c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b5cf:	nop
  40b5d0:	push   rbp
  40b5d1:	push   r14
  40b5d3:	push   rbx
  40b5d4:	mov    r14d,edx
  40b5d7:	mov    rbx,rsi
  40b5da:	lea    rsi,[rdi-0x18]
  40b5de:	lea    rdx,[rip+0xfffffffffffffefb]        # 40b4e0 <strcmp@plt+0x7d48>
  40b5e5:	mov    edi,0x1
  40b5ea:	mov    rcx,rbx
  40b5ed:	xor    r8d,r8d
  40b5f0:	call   437140 <strcmp@plt+0x339a8>
  40b5f5:	mov    rbp,rax
  40b5f8:	lea    rax,[rip+0x64fb1]        # 4705b0 <strcmp@plt+0x6ce18>
  40b5ff:	mov    rdi,QWORD PTR [rax]
  40b602:	mov    rsi,rbx
  40b605:	mov    rdx,rbp
  40b608:	call   437490 <strcmp@plt+0x33cf8>
  40b60d:	mov    rdi,rbp
  40b610:	mov    esi,r14d
  40b613:	call   437020 <strcmp@plt+0x33888>
  40b618:	lea    rax,[rip+0x597a1]        # 464dc0 <strcmp@plt+0x61628>
  40b61f:	mov    eax,DWORD PTR [rax]
  40b621:	cmp    r14d,0x3d
  40b625:	jl     40b655 <strcmp@plt+0x7ebd>
  40b627:	test   eax,eax
  40b629:	jle    40b67f <strcmp@plt+0x7ee7>
  40b62b:	mov    rdi,QWORD PTR [rbx+0x8]
  40b62f:	call   422e20 <strcmp@plt+0x1f688>
  40b634:	mov    edx,r14d
  40b637:	mov    ecx,0x88888889
  40b63c:	imul   rcx,rdx
  40b640:	shr    rcx,0x25
  40b644:	lea    rsi,[rip+0x3925b]        # 4448a6 <strcmp@plt+0x4110e>
  40b64b:	mov    edi,0x5
  40b650:	mov    rdx,rax
  40b653:	jmp    40b674 <strcmp@plt+0x7edc>
  40b655:	test   eax,eax
  40b657:	jle    40b67f <strcmp@plt+0x7ee7>
  40b659:	mov    rdi,QWORD PTR [rbx+0x8]
  40b65d:	call   422e20 <strcmp@plt+0x1f688>
  40b662:	lea    rsi,[rip+0x39276]        # 4448df <strcmp@plt+0x41147>
  40b669:	mov    edi,0x5
  40b66e:	mov    rdx,rax
  40b671:	mov    ecx,r14d
  40b674:	xor    eax,eax
  40b676:	pop    rbx
  40b677:	pop    r14
  40b679:	pop    rbp
  40b67a:	jmp    42e520 <strcmp@plt+0x2ad88>
  40b67f:	pop    rbx
  40b680:	pop    r14
  40b682:	pop    rbp
  40b683:	ret    
  40b684:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b68e:	xchg   ax,ax
  40b690:	push   rbp
  40b691:	push   r15
  40b693:	push   r14
  40b695:	push   r13
  40b697:	push   r12
  40b699:	push   rbx
  40b69a:	push   rax
  40b69b:	cmp    DWORD PTR [rdi+0xc],0x0
  40b69f:	je     40b72e <strcmp@plt+0x7f96>
  40b6a5:	mov    r14,rsi
  40b6a8:	mov    r13,rdi
  40b6ab:	lea    rax,[rip+0x64efe]        # 4705b0 <strcmp@plt+0x6ce18>
  40b6b2:	mov    rdx,QWORD PTR [rax]
  40b6b5:	lea    rax,[rip+0x64efc]        # 4705b8 <strcmp@plt+0x6ce20>
  40b6bc:	mov    rcx,QWORD PTR [rax]
  40b6bf:	mov    rdi,rsi
  40b6c2:	mov    esi,0x5
  40b6c7:	call   437310 <strcmp@plt+0x33b78>
  40b6cc:	mov    r15,QWORD PTR [r14+0x8]
  40b6d0:	mov    rax,QWORD PTR [r15+0x28]
  40b6d4:	mov    r12,QWORD PTR [rax+0x8]
  40b6d8:	cmp    r12,rax
  40b6db:	jne    40b6ee <strcmp@plt+0x7f56>
  40b6dd:	jmp    40b72e <strcmp@plt+0x7f96>
  40b6df:	nop
  40b6e0:	mov    rax,QWORD PTR [r15+0x28]
  40b6e4:	mov    r12,QWORD PTR [r12+0x8]
  40b6e9:	cmp    r12,rax
  40b6ec:	je     40b72e <strcmp@plt+0x7f96>
  40b6ee:	mov    rbx,QWORD PTR [r12+0x10]
  40b6f3:	cmp    DWORD PTR [rbx+0x18],0x0
  40b6f7:	je     40b6e4 <strcmp@plt+0x7f4c>
  40b6f9:	mov    rbp,QWORD PTR [rbx+0x8]
  40b6fd:	mov    rdx,QWORD PTR [rbp+0x10]
  40b701:	mov    rcx,QWORD PTR [rdx]
  40b704:	cmp    DWORD PTR [rcx+0x18],0x0
  40b708:	je     40b6e4 <strcmp@plt+0x7f4c>
  40b70a:	cmp    rbp,rbx
  40b70d:	je     40b6e4 <strcmp@plt+0x7f4c>
  40b70f:	nop
  40b710:	mov    ecx,DWORD PTR [r13+0xc]
  40b714:	mov    rdi,r13
  40b717:	mov    rsi,r14
  40b71a:	call   40b740 <strcmp@plt+0x7fa8>
  40b71f:	mov    rbp,QWORD PTR [rbp+0x8]
  40b723:	cmp    rbp,rbx
  40b726:	je     40b6e0 <strcmp@plt+0x7f48>
  40b728:	mov    rdx,QWORD PTR [rbp+0x10]
  40b72c:	jmp    40b710 <strcmp@plt+0x7f78>
  40b72e:	add    rsp,0x8
  40b732:	pop    rbx
  40b733:	pop    r12
  40b735:	pop    r13
  40b737:	pop    r14
  40b739:	pop    r15
  40b73b:	pop    rbp
  40b73c:	ret    
  40b73d:	nop    DWORD PTR [rax]
  40b740:	push   rbp
  40b741:	push   r15
  40b743:	push   r14
  40b745:	push   rbx
  40b746:	push   rax
  40b747:	cmp    BYTE PTR [rdx+0xa],0x0
  40b74b:	je     40b7c1 <strcmp@plt+0x8029>
  40b74d:	mov    rbx,rdx
  40b750:	cmp    BYTE PTR [rdx+0xb],0xff
  40b754:	je     40b7c1 <strcmp@plt+0x8029>
  40b756:	mov    r14d,ecx
  40b759:	mov    r15,rsi
  40b75c:	mov    rbp,rdi
  40b75f:	mov    edi,0x10
  40b764:	call   431d90 <strcmp@plt+0x2e5f8>
  40b769:	mov    QWORD PTR [rax],r15
  40b76c:	mov    QWORD PTR [rax+0x8],rbx
  40b770:	add    rbp,0xffffffffffffffe8
  40b774:	lea    rdx,[rip+0xc5]        # 40b840 <strcmp@plt+0x80a8>
  40b77b:	lea    r8,[rip+0x34e]        # 40bad0 <strcmp@plt+0x8338>
  40b782:	mov    edi,0x5
  40b787:	mov    rsi,rbp
  40b78a:	mov    rcx,rax
  40b78d:	call   437190 <strcmp@plt+0x339f8>
  40b792:	mov    rbp,rax
  40b795:	lea    rax,[rip+0x64e14]        # 4705b0 <strcmp@plt+0x6ce18>
  40b79c:	mov    rdi,QWORD PTR [rax]
  40b79f:	mov    rsi,r15
  40b7a2:	mov    rdx,rbp
  40b7a5:	call   437490 <strcmp@plt+0x33cf8>
  40b7aa:	mov    rdi,rbp
  40b7ad:	mov    esi,r14d
  40b7b0:	call   437020 <strcmp@plt+0x33888>
  40b7b5:	lea    rax,[rip+0x59604]        # 464dc0 <strcmp@plt+0x61628>
  40b7bc:	cmp    DWORD PTR [rax],0x2
  40b7bf:	jge    40b7cc <strcmp@plt+0x8034>
  40b7c1:	add    rsp,0x8
  40b7c5:	pop    rbx
  40b7c6:	pop    r14
  40b7c8:	pop    r15
  40b7ca:	pop    rbp
  40b7cb:	ret    
  40b7cc:	mov    rdi,QWORD PTR [r15+0x8]
  40b7d0:	call   422e20 <strcmp@plt+0x1f688>
  40b7d5:	mov    rbp,rax
  40b7d8:	mov    rdi,QWORD PTR [rbx]
  40b7db:	call   422e20 <strcmp@plt+0x1f688>
  40b7e0:	lea    rsi,[rip+0x39162]        # 444949 <strcmp@plt+0x411b1>
  40b7e7:	mov    edi,0x6
  40b7ec:	mov    rdx,rbp
  40b7ef:	mov    rcx,rax
  40b7f2:	mov    r8d,r14d
  40b7f5:	xor    eax,eax
  40b7f7:	add    rsp,0x8
  40b7fb:	pop    rbx
  40b7fc:	pop    r14
  40b7fe:	pop    r15
  40b800:	pop    rbp
  40b801:	jmp    42e520 <strcmp@plt+0x2ad88>
  40b806:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b810:	push   r14
  40b812:	push   rbx
  40b813:	push   rax
  40b814:	mov    r14,rsi
  40b817:	mov    rbx,rdi
  40b81a:	mov    edi,0x10
  40b81f:	call   431d90 <strcmp@plt+0x2e5f8>
  40b824:	mov    QWORD PTR [rax],rbx
  40b827:	mov    QWORD PTR [rax+0x8],r14
  40b82b:	add    rsp,0x8
  40b82f:	pop    rbx
  40b830:	pop    r14
  40b832:	ret    
  40b833:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b83d:	nop    DWORD PTR [rax]
  40b840:	push   rbp
  40b841:	push   r15
  40b843:	push   r14
  40b845:	push   r13
  40b847:	push   r12
  40b849:	push   rbx
  40b84a:	sub    rsp,0x18
  40b84e:	mov    r14,rdi
  40b851:	call   436ff0 <strcmp@plt+0x33858>
  40b856:	mov    rbp,rax
  40b859:	mov    rdi,r14
  40b85c:	call   437010 <strcmp@plt+0x33878>
  40b861:	mov    r15,rax
  40b864:	mov    rdi,r14
  40b867:	call   436fe0 <strcmp@plt+0x33848>
  40b86c:	mov    r12,rax
  40b86f:	mov    rax,QWORD PTR [rbp+0x0]
  40b873:	mov    r13,QWORD PTR [rbp+0x8]
  40b877:	mov    rax,QWORD PTR [rax+0x8]
  40b87b:	mov    QWORD PTR [rsp+0x8],rax
  40b880:	mov    rax,QWORD PTR [r12+0x38]
  40b885:	mov    rbx,QWORD PTR [rax+0x48]
  40b889:	mov    rbp,QWORD PTR [r13+0x0]
  40b88d:	mov    rdi,r12
  40b890:	call   407850 <strcmp@plt+0x40b8>
  40b895:	mov    rdi,rax
  40b898:	call   4076b0 <strcmp@plt+0x3f18>
  40b89d:	mov    rdi,rbp
  40b8a0:	mov    rsi,rax
  40b8a3:	call   rbx
  40b8a5:	mov    QWORD PTR [rsp+0x10],rax
  40b8aa:	mov    rdi,r15
  40b8ad:	call   432620 <strcmp@plt+0x2ee88>
  40b8b2:	cmp    eax,DWORD PTR [r12+0x28]
  40b8b7:	jg     40b94a <strcmp@plt+0x81b2>
  40b8bd:	mov    rbx,r12
  40b8c0:	add    rbx,0x18
  40b8c4:	xor    eax,eax
  40b8c6:	call   432550 <strcmp@plt+0x2edb8>
  40b8cb:	mov    rbp,rax
  40b8ce:	mov    rdi,rbx
  40b8d1:	mov    rsi,QWORD PTR [rsp+0x8]
  40b8d6:	mov    rdx,r13
  40b8d9:	mov    rcx,rax
  40b8dc:	call   40b3f0 <strcmp@plt+0x7c58>
  40b8e1:	cmp    eax,0x1
  40b8e4:	jne    40b94a <strcmp@plt+0x81b2>
  40b8e6:	mov    rdi,r15
  40b8e9:	call   432620 <strcmp@plt+0x2ee88>
  40b8ee:	lea    rcx,[rip+0x594cb]        # 464dc0 <strcmp@plt+0x61628>
  40b8f5:	mov    ecx,DWORD PTR [rcx]
  40b8f7:	test   eax,eax
  40b8f9:	jle    40ba63 <strcmp@plt+0x82cb>
  40b8ff:	test   ecx,ecx
  40b901:	jle    40ba97 <strcmp@plt+0x82ff>
  40b907:	mov    rdi,QWORD PTR [rsp+0x10]
  40b90c:	call   422e20 <strcmp@plt+0x1f688>
  40b911:	mov    r13,rax
  40b914:	mov    rdi,QWORD PTR [rsp+0x8]
  40b919:	call   422e20 <strcmp@plt+0x1f688>
  40b91e:	mov    rbx,rax
  40b921:	mov    rdi,r15
  40b924:	call   432620 <strcmp@plt+0x2ee88>
  40b929:	lea    rsi,[rip+0x39051]        # 444981 <strcmp@plt+0x411e9>
  40b930:	mov    edi,0x5
  40b935:	mov    rdx,r13
  40b938:	mov    rcx,rbx
  40b93b:	mov    r8d,eax
  40b93e:	xor    eax,eax
  40b940:	call   42e520 <strcmp@plt+0x2ad88>
  40b945:	jmp    40ba97 <strcmp@plt+0x82ff>
  40b94a:	cmp    BYTE PTR [r13+0x8],0x1
  40b94f:	jne    40b9d7 <strcmp@plt+0x823f>
  40b955:	mov    BYTE PTR [r13+0x8],0x0
  40b95a:	lea    rax,[rip+0x5945f]        # 464dc0 <strcmp@plt+0x61628>
  40b961:	cmp    DWORD PTR [rax],0x0
  40b964:	mov    rbx,QWORD PTR [rsp+0x8]
  40b969:	jle    40b999 <strcmp@plt+0x8201>
  40b96b:	mov    rdi,QWORD PTR [rsp+0x10]
  40b970:	call   422e20 <strcmp@plt+0x1f688>
  40b975:	mov    rbp,rax
  40b978:	mov    rdi,rbx
  40b97b:	call   422e20 <strcmp@plt+0x1f688>
  40b980:	lea    rsi,[rip+0x39067]        # 4449ee <strcmp@plt+0x41256>
  40b987:	mov    edi,0x5
  40b98c:	mov    rdx,rbp
  40b98f:	mov    rcx,rax
  40b992:	xor    eax,eax
  40b994:	call   42e520 <strcmp@plt+0x2ad88>
  40b999:	mov    rdi,QWORD PTR [r12+0x30]
  40b99e:	mov    rsi,rbx
  40b9a1:	call   408710 <strcmp@plt+0x4f78>
  40b9a6:	test   rax,rax
  40b9a9:	je     40ba41 <strcmp@plt+0x82a9>
  40b9af:	mov    rbp,rax
  40b9b2:	mov    rax,QWORD PTR [r12+0x38]
  40b9b7:	mov    rdi,QWORD PTR [r12+0x40]
  40b9bc:	mov    rsi,rbp
  40b9bf:	call   QWORD PTR [rax+0x38]
  40b9c2:	mov    rdi,rbp
  40b9c5:	call   4307e0 <strcmp@plt+0x2d048>
  40b9ca:	mov    rdi,r12
  40b9cd:	mov    rsi,rax
  40b9d0:	xor    edx,edx
  40b9d2:	call   407930 <strcmp@plt+0x4198>
  40b9d7:	lea    rax,[rip+0x64bda]        # 4705b8 <strcmp@plt+0x6ce20>
  40b9de:	mov    rdi,QWORD PTR [rax]
  40b9e1:	mov    rsi,r15
  40b9e4:	call   4323d0 <strcmp@plt+0x2ec38>
  40b9e9:	mov    esi,DWORD PTR [r12+0x24]
  40b9ee:	mov    rdi,r14
  40b9f1:	call   437020 <strcmp@plt+0x33888>
  40b9f6:	lea    rax,[rip+0x593c3]        # 464dc0 <strcmp@plt+0x61628>
  40b9fd:	xor    ebp,ebp
  40b9ff:	cmp    DWORD PTR [rax],0x2
  40ba02:	jl     40babe <strcmp@plt+0x8326>
  40ba08:	mov    rdi,QWORD PTR [rsp+0x10]
  40ba0d:	call   422e20 <strcmp@plt+0x1f688>
  40ba12:	mov    rbx,rax
  40ba15:	mov    rdi,QWORD PTR [rsp+0x8]
  40ba1a:	call   422e20 <strcmp@plt+0x1f688>
  40ba1f:	mov    r8d,DWORD PTR [r12+0x24]
  40ba24:	lea    rsi,[rip+0x3906f]        # 444a9a <strcmp@plt+0x41302>
  40ba2b:	xor    ebp,ebp
  40ba2d:	mov    edi,0x6
  40ba32:	mov    rdx,rbx
  40ba35:	mov    rcx,rax
  40ba38:	xor    eax,eax
  40ba3a:	call   42e520 <strcmp@plt+0x2ad88>
  40ba3f:	jmp    40babe <strcmp@plt+0x8326>
  40ba41:	mov    rdi,rbx
  40ba44:	call   422e20 <strcmp@plt+0x1f688>
  40ba49:	lea    rsi,[rip+0x39004]        # 444a54 <strcmp@plt+0x412bc>
  40ba50:	xor    ebp,ebp
  40ba52:	mov    edi,0x2
  40ba57:	mov    rdx,rax
  40ba5a:	xor    eax,eax
  40ba5c:	call   42e520 <strcmp@plt+0x2ad88>
  40ba61:	jmp    40babe <strcmp@plt+0x8326>
  40ba63:	test   ecx,ecx
  40ba65:	jle    40ba97 <strcmp@plt+0x82ff>
  40ba67:	mov    rdi,QWORD PTR [rsp+0x10]
  40ba6c:	call   422e20 <strcmp@plt+0x1f688>
  40ba71:	mov    rbx,rax
  40ba74:	mov    rdi,QWORD PTR [rsp+0x8]
  40ba79:	call   422e20 <strcmp@plt+0x1f688>
  40ba7e:	lea    rsi,[rip+0x38f3c]        # 4449c1 <strcmp@plt+0x41229>
  40ba85:	mov    edi,0x5
  40ba8a:	mov    rdx,rbx
  40ba8d:	mov    rcx,rax
  40ba90:	xor    eax,eax
  40ba92:	call   42e520 <strcmp@plt+0x2ad88>
  40ba97:	lea    rax,[rip+0x64b1a]        # 4705b8 <strcmp@plt+0x6ce20>
  40ba9e:	mov    rdi,QWORD PTR [rax]
  40baa1:	mov    rsi,rbp
  40baa4:	mov    rdx,r15
  40baa7:	call   431f60 <strcmp@plt+0x2e7c8>
  40baac:	mov    esi,DWORD PTR [r12+0x2c]
  40bab1:	mov    rdi,r14
  40bab4:	call   437020 <strcmp@plt+0x33888>
  40bab9:	mov    ebp,0x1
  40babe:	mov    eax,ebp
  40bac0:	add    rsp,0x18
  40bac4:	pop    rbx
  40bac5:	pop    r12
  40bac7:	pop    r13
  40bac9:	pop    r14
  40bacb:	pop    r15
  40bacd:	pop    rbp
  40bace:	ret    
  40bacf:	nop
  40bad0:	jmp    403790 <free@plt>
  40bad5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40badf:	nop
  40bae0:	push   r15
  40bae2:	push   r14
  40bae4:	push   r13
  40bae6:	push   r12
  40bae8:	push   rbx
  40bae9:	mov    r12,rdx
  40baec:	mov    rbx,rsi
  40baef:	mov    r15,rdi
  40baf2:	mov    rdi,rsi
  40baf5:	call   428b20 <strcmp@plt+0x25388>
  40bafa:	mov    BYTE PTR [rax+0x34],0x1
  40bafe:	xor    r13d,r13d
  40bb01:	mov    rdi,r15
  40bb04:	mov    rsi,rax
  40bb07:	mov    edx,0x1
  40bb0c:	xor    ecx,ecx
  40bb0e:	call   40a930 <strcmp@plt+0x7198>
  40bb13:	mov    r14,rax
  40bb16:	mov    rdi,rbx
  40bb19:	call   422e20 <strcmp@plt+0x1f688>
  40bb1e:	test   r14,r14
  40bb21:	je     40bc16 <strcmp@plt+0x847e>
  40bb27:	lea    rdi,[rip+0x3906e]        # 444b9c <strcmp@plt+0x41404>
  40bb2e:	mov    rsi,rax
  40bb31:	xor    eax,eax
  40bb33:	call   403050 <printf@plt>
  40bb38:	mov    edi,0x10
  40bb3d:	call   431d90 <strcmp@plt+0x2e5f8>
  40bb42:	mov    rbx,rax
  40bb45:	mov    QWORD PTR [rax],r14
  40bb48:	mov    rdi,r12
  40bb4b:	call   423440 <strcmp@plt+0x1fca8>
  40bb50:	mov    QWORD PTR [rbx+0x8],rax
  40bb54:	add    r15,0xffffffffffffffe8
  40bb58:	lea    rdx,[rip+0xe1]        # 40bc40 <strcmp@plt+0x84a8>
  40bb5f:	lea    r8,[rip+0xfffffffffffff5da]        # 40b140 <strcmp@plt+0x79a8>
  40bb66:	mov    edi,0x4
  40bb6b:	mov    rsi,r15
  40bb6e:	mov    rcx,rbx
  40bb71:	call   437190 <strcmp@plt+0x339f8>
  40bb76:	mov    rbx,rax
  40bb79:	lea    r12,[rip+0x64a30]        # 4705b0 <strcmp@plt+0x6ce18>
  40bb80:	mov    rdi,QWORD PTR [r12]
  40bb84:	mov    rsi,r14
  40bb87:	mov    rdx,rax
  40bb8a:	call   437490 <strcmp@plt+0x33cf8>
  40bb8f:	mov    rdi,rbx
  40bb92:	call   40bc40 <strcmp@plt+0x84a8>
  40bb97:	mov    r13d,eax
  40bb9a:	test   eax,eax
  40bb9c:	jne    40bc33 <strcmp@plt+0x849b>
  40bba2:	lea    rdx,[rip+0xfffffffffffff937]        # 40b4e0 <strcmp@plt+0x7d48>
  40bba9:	mov    edi,0x1
  40bbae:	mov    rsi,r15
  40bbb1:	mov    rcx,r14
  40bbb4:	xor    r8d,r8d
  40bbb7:	call   437140 <strcmp@plt+0x339a8>
  40bbbc:	mov    rbx,rax
  40bbbf:	mov    rdi,QWORD PTR [r12]
  40bbc3:	mov    rsi,r14
  40bbc6:	mov    rdx,rax
  40bbc9:	call   437490 <strcmp@plt+0x33cf8>
  40bbce:	mov    rdi,rbx
  40bbd1:	mov    esi,0xa
  40bbd6:	call   437020 <strcmp@plt+0x33888>
  40bbdb:	lea    rax,[rip+0x591de]        # 464dc0 <strcmp@plt+0x61628>
  40bbe2:	cmp    DWORD PTR [rax],0x0
  40bbe5:	mov    r13d,0x0
  40bbeb:	jle    40bc33 <strcmp@plt+0x849b>
  40bbed:	mov    rdi,QWORD PTR [r14+0x8]
  40bbf1:	call   422e20 <strcmp@plt+0x1f688>
  40bbf6:	lea    rsi,[rip+0x38ce2]        # 4448df <strcmp@plt+0x41147>
  40bbfd:	xor    r13d,r13d
  40bc00:	mov    edi,0x5
  40bc05:	mov    rdx,rax
  40bc08:	mov    ecx,0xa
  40bc0d:	xor    eax,eax
  40bc0f:	call   42e520 <strcmp@plt+0x2ad88>
  40bc14:	jmp    40bc33 <strcmp@plt+0x849b>
  40bc16:	lea    rsi,[rip+0x38f4d]        # 444b6a <strcmp@plt+0x413d2>
  40bc1d:	mov    edi,0x3
  40bc22:	mov    rdx,rax
  40bc25:	xor    eax,eax
  40bc27:	call   42e520 <strcmp@plt+0x2ad88>
  40bc2c:	xor    edi,edi
  40bc2e:	call   4306e0 <strcmp@plt+0x2cf48>
  40bc33:	mov    eax,r13d
  40bc36:	pop    rbx
  40bc37:	pop    r12
  40bc39:	pop    r13
  40bc3b:	pop    r14
  40bc3d:	pop    r15
  40bc3f:	ret    
  40bc40:	push   rbp
  40bc41:	push   r15
  40bc43:	push   r14
  40bc45:	push   r13
  40bc47:	push   r12
  40bc49:	push   rbx
  40bc4a:	push   rax
  40bc4b:	mov    r14,rdi
  40bc4e:	call   436ff0 <strcmp@plt+0x33858>
  40bc53:	mov    r15,rax
  40bc56:	mov    rdi,r14
  40bc59:	call   437010 <strcmp@plt+0x33878>
  40bc5e:	mov    r12,rax
  40bc61:	mov    rdi,r14
  40bc64:	call   436fe0 <strcmp@plt+0x33848>
  40bc69:	mov    r13,rax
  40bc6c:	mov    rdi,r12
  40bc6f:	call   432620 <strcmp@plt+0x2ee88>
  40bc74:	mov    ebp,eax
  40bc76:	mov    rax,QWORD PTR [r15]
  40bc79:	mov    rbx,QWORD PTR [rax+0x8]
  40bc7d:	cmp    ebp,DWORD PTR [r13+0x20]
  40bc81:	jle    40bcee <strcmp@plt+0x8556>
  40bc83:	lea    rax,[rip+0x59136]        # 464dc0 <strcmp@plt+0x61628>
  40bc8a:	cmp    DWORD PTR [rax],0x0
  40bc8d:	jle    40bcb8 <strcmp@plt+0x8520>
  40bc8f:	dec    ebp
  40bc91:	mov    rdi,rbx
  40bc94:	call   422e20 <strcmp@plt+0x1f688>
  40bc99:	lea    rsi,[rip+0x38f5b]        # 444bfb <strcmp@plt+0x41463>
  40bca0:	mov    edi,0x5
  40bca5:	mov    rdx,rax
  40bca8:	mov    ecx,ebp
  40bcaa:	xor    eax,eax
  40bcac:	call   42e520 <strcmp@plt+0x2ad88>
  40bcb1:	mov    rax,QWORD PTR [r15]
  40bcb4:	mov    rbx,QWORD PTR [rax+0x8]
  40bcb8:	mov    rdi,r13
  40bcbb:	mov    rsi,rbx
  40bcbe:	xor    edx,edx
  40bcc0:	call   407930 <strcmp@plt+0x4198>
  40bcc5:	mov    rdi,QWORD PTR [r13+0x30]
  40bcc9:	mov    rsi,rbx
  40bccc:	call   4086c0 <strcmp@plt+0x4f28>
  40bcd1:	mov    rdi,rax
  40bcd4:	call   4306e0 <strcmp@plt+0x2cf48>
  40bcd9:	mov    rdi,QWORD PTR [r13+0x30]
  40bcdd:	mov    esi,0x7
  40bce2:	call   408770 <strcmp@plt+0x4fd8>
  40bce7:	mov    ebx,0xffffff9d
  40bcec:	jmp    40bd6c <strcmp@plt+0x85d4>
  40bcee:	add    r13,0x18
  40bcf2:	test   ebp,ebp
  40bcf4:	jle    40bd22 <strcmp@plt+0x858a>
  40bcf6:	lea    rax,[rip+0x590c3]        # 464dc0 <strcmp@plt+0x61628>
  40bcfd:	cmp    DWORD PTR [rax],0x0
  40bd00:	jle    40bd22 <strcmp@plt+0x858a>
  40bd02:	mov    rdi,rbx
  40bd05:	call   422e20 <strcmp@plt+0x1f688>
  40bd0a:	lea    rsi,[rip+0x38eb6]        # 444bc7 <strcmp@plt+0x4142f>
  40bd11:	mov    edi,0x5
  40bd16:	mov    rdx,rax
  40bd19:	mov    ecx,ebp
  40bd1b:	xor    eax,eax
  40bd1d:	call   42e520 <strcmp@plt+0x2ad88>
  40bd22:	xor    ebx,ebx
  40bd24:	xor    eax,eax
  40bd26:	call   432550 <strcmp@plt+0x2edb8>
  40bd2b:	mov    rbp,rax
  40bd2e:	mov    rdx,QWORD PTR [r15]
  40bd31:	mov    rsi,QWORD PTR [r15+0x8]
  40bd35:	mov    rdi,r13
  40bd38:	mov    rcx,rax
  40bd3b:	call   40b160 <strcmp@plt+0x79c8>
  40bd40:	cmp    eax,0x1
  40bd43:	jne    40bd6c <strcmp@plt+0x85d4>
  40bd45:	lea    rax,[rip+0x6486c]        # 4705b8 <strcmp@plt+0x6ce20>
  40bd4c:	mov    rdi,QWORD PTR [rax]
  40bd4f:	mov    rsi,rbp
  40bd52:	mov    rdx,r12
  40bd55:	call   431f60 <strcmp@plt+0x2e7c8>
  40bd5a:	mov    rdi,r14
  40bd5d:	mov    esi,0x2
  40bd62:	call   437020 <strcmp@plt+0x33888>
  40bd67:	mov    ebx,0x1
  40bd6c:	mov    eax,ebx
  40bd6e:	add    rsp,0x8
  40bd72:	pop    rbx
  40bd73:	pop    r12
  40bd75:	pop    r13
  40bd77:	pop    r14
  40bd79:	pop    r15
  40bd7b:	pop    rbp
  40bd7c:	ret    
  40bd7d:	nop    DWORD PTR [rax]
  40bd80:	mov    rdi,QWORD PTR [rdi+0x18]
  40bd84:	jmp    408720 <strcmp@plt+0x4f88>
  40bd89:	nop    DWORD PTR [rax+0x0]
  40bd90:	push   rbp
  40bd91:	push   r15
  40bd93:	push   r14
  40bd95:	push   r12
  40bd97:	push   rbx
  40bd98:	sub    rsp,0x20
  40bd9c:	mov    rax,QWORD PTR [rdi+0x8]
  40bda0:	cmp    rax,QWORD PTR [rip+0x58229]        # 463fd0 <strcmp@plt+0x60838>
  40bda7:	jne    40bee6 <strcmp@plt+0x874e>
  40bdad:	mov    rbx,rdi
  40bdb0:	add    rdi,0x18
  40bdb4:	call   40a410 <strcmp@plt+0x6c78>
  40bdb9:	xor    r15d,r15d
  40bdbc:	xor    eax,eax
  40bdbe:	call   407b80 <strcmp@plt+0x43e8>
  40bdc3:	mov    QWORD PTR [rbx+0x70],rax
  40bdc7:	lea    rdi,[rip+0x3fd2]        # 40fda0 <strcmp@plt+0xc608>
  40bdce:	call   42b9b0 <strcmp@plt+0x28218>
  40bdd3:	mov    QWORD PTR [rbx+0x78],rax
  40bdd7:	lea    rdi,[rip+0x16eb2]        # 422c90 <strcmp@plt+0x1f4f8>
  40bdde:	call   42b9b0 <strcmp@plt+0x28218>
  40bde3:	mov    QWORD PTR [rbx+0x68],rax
  40bde7:	xor    eax,eax
  40bde9:	call   430690 <strcmp@plt+0x2cef8>
  40bdee:	mov    rbp,rax
  40bdf1:	xor    eax,eax
  40bdf3:	call   430690 <strcmp@plt+0x2cef8>
  40bdf8:	cmp    QWORD PTR [rbx+0x70],0x0
  40bdfd:	je     40bed6 <strcmp@plt+0x873e>
  40be03:	cmp    QWORD PTR [rbx+0x78],0x0
  40be08:	je     40bed6 <strcmp@plt+0x873e>
  40be0e:	mov    r14,rax
  40be11:	test   rax,rax
  40be14:	je     40bed6 <strcmp@plt+0x873e>
  40be1a:	test   rbp,rbp
  40be1d:	je     40bed6 <strcmp@plt+0x873e>
  40be23:	cmp    QWORD PTR [rbx+0x68],0x0
  40be28:	je     40bed6 <strcmp@plt+0x873e>
  40be2e:	lea    rdi,[rip+0x36e9f]        # 442cd4 <strcmp@plt+0x3f53c>
  40be35:	mov    r15,rsp
  40be38:	mov    rsi,r15
  40be3b:	call   423960 <strcmp@plt+0x201c8>
  40be40:	mov    rdi,r15
  40be43:	call   428b20 <strcmp@plt+0x25388>
  40be48:	mov    BYTE PTR [rax+0x34],0x1
  40be4c:	mov    rdi,rbp
  40be4f:	mov    rsi,rax
  40be52:	call   4306d0 <strcmp@plt+0x2cf38>
  40be57:	mov    r12,QWORD PTR [rbx+0x30]
  40be5b:	mov    rdi,rbp
  40be5e:	call   4307e0 <strcmp@plt+0x2d048>
  40be63:	mov    rdi,r12
  40be66:	mov    rsi,rax
  40be69:	mov    rdx,rbp
  40be6c:	call   4086b0 <strcmp@plt+0x4f18>
  40be71:	lea    rdi,[rip+0x37cea]        # 443b62 <strcmp@plt+0x403ca>
  40be78:	mov    rsi,r15
  40be7b:	call   423960 <strcmp@plt+0x201c8>
  40be80:	mov    rdi,r15
  40be83:	call   428b20 <strcmp@plt+0x25388>
  40be88:	mov    BYTE PTR [rax+0x34],0x1
  40be8c:	mov    rdi,r14
  40be8f:	mov    rsi,rax
  40be92:	call   4306d0 <strcmp@plt+0x2cf38>
  40be97:	mov    rbx,QWORD PTR [rbx+0x30]
  40be9b:	mov    rdi,r14
  40be9e:	call   4307e0 <strcmp@plt+0x2d048>
  40bea3:	mov    rdi,rbx
  40bea6:	mov    rsi,rax
  40bea9:	mov    rdx,r14
  40beac:	call   4086b0 <strcmp@plt+0x4f18>
  40beb1:	lea    rax,[rip+0x58f08]        # 464dc0 <strcmp@plt+0x61628>
  40beb8:	mov    r15d,0x1
  40bebe:	cmp    DWORD PTR [rax],0x0
  40bec1:	jle    40bed6 <strcmp@plt+0x873e>
  40bec3:	lea    rsi,[rip+0x39383]        # 44524d <strcmp@plt+0x41ab5>
  40beca:	mov    edi,0x5
  40becf:	xor    eax,eax
  40bed1:	call   42e520 <strcmp@plt+0x2ad88>
  40bed6:	mov    eax,r15d
  40bed9:	add    rsp,0x20
  40bedd:	pop    rbx
  40bede:	pop    r12
  40bee0:	pop    r14
  40bee2:	pop    r15
  40bee4:	pop    rbp
  40bee5:	ret    
  40bee6:	lea    rdi,[rip+0x39048]        # 444f35 <strcmp@plt+0x4179d>
  40beed:	lea    rsi,[rip+0x39058]        # 444f4c <strcmp@plt+0x417b4>
  40bef4:	lea    rdx,[rip+0x3905f]        # 444f5a <strcmp@plt+0x417c2>
  40befb:	call   431eb0 <strcmp@plt+0x2e718>
  40bf00:	push   rax
  40bf01:	mov    rax,QWORD PTR [rdi+0x8]
  40bf05:	cmp    rax,QWORD PTR [rip+0x580c4]        # 463fd0 <strcmp@plt+0x60838>
  40bf0c:	jne    40bf35 <strcmp@plt+0x879d>
  40bf0e:	call   403790 <free@plt>
  40bf13:	lea    rax,[rip+0x58ea6]        # 464dc0 <strcmp@plt+0x61628>
  40bf1a:	cmp    DWORD PTR [rax],0x0
  40bf1d:	jle    40bf33 <strcmp@plt+0x879b>
  40bf1f:	lea    rsi,[rip+0x39341]        # 445267 <strcmp@plt+0x41acf>
  40bf26:	mov    edi,0x5
  40bf2b:	xor    eax,eax
  40bf2d:	pop    rcx
  40bf2e:	jmp    42e520 <strcmp@plt+0x2ad88>
  40bf33:	pop    rax
  40bf34:	ret    
  40bf35:	lea    rdi,[rip+0x38ff9]        # 444f35 <strcmp@plt+0x4179d>
  40bf3c:	lea    rsi,[rip+0x39009]        # 444f4c <strcmp@plt+0x417b4>
  40bf43:	lea    rdx,[rip+0x39010]        # 444f5a <strcmp@plt+0x417c2>
  40bf4a:	call   431eb0 <strcmp@plt+0x2e718>
  40bf4f:	nop
  40bf50:	push   rbp
  40bf51:	push   r15
  40bf53:	push   r14
  40bf55:	push   r13
  40bf57:	push   r12
  40bf59:	push   rbx
  40bf5a:	sub    rsp,0x828
  40bf61:	mov    rax,QWORD PTR [rdi+0x8]
  40bf65:	cmp    rax,QWORD PTR [rip+0x58064]        # 463fd0 <strcmp@plt+0x60838>
  40bf6c:	jne    40c236 <strcmp@plt+0x8a9e>
  40bf72:	mov    r13,rdi
  40bf75:	add    rdi,0x18
  40bf79:	call   40a480 <strcmp@plt+0x6ce8>
  40bf7e:	call   42b980 <strcmp@plt+0x281e8>
  40bf83:	mov    rbx,rax
  40bf86:	mov    rax,QWORD PTR [r13+0x70]
  40bf8a:	mov    rax,QWORD PTR [rax]
  40bf8d:	mov    rdi,QWORD PTR [rax]
  40bf90:	mov    rsi,rbx
  40bf93:	call   42baa0 <strcmp@plt+0x28308>
  40bf98:	mov    rax,QWORD PTR [r13+0x70]
  40bf9c:	mov    rax,QWORD PTR [rax]
  40bf9f:	mov    rdi,QWORD PTR [rax+0x8]
  40bfa3:	mov    QWORD PTR [rsp+0x8],rbx
  40bfa8:	mov    rsi,rbx
  40bfab:	call   42baa0 <strcmp@plt+0x28308>
  40bfb0:	mov    rax,QWORD PTR [r13+0x70]
  40bfb4:	mov    rcx,QWORD PTR [rax]
  40bfb7:	mov    rdx,QWORD PTR [rcx+0x10]
  40bfbb:	mov    rdx,QWORD PTR [rdx]
  40bfbe:	cmp    DWORD PTR [rdx],0x0
  40bfc1:	je     40c016 <strcmp@plt+0x887e>
  40bfc3:	xor    ebx,ebx
  40bfc5:	mov    r15d,0x3
  40bfcb:	xor    ebp,ebp
  40bfcd:	jmp    40bfe3 <strcmp@plt+0x884b>
  40bfcf:	nop
  40bfd0:	inc    ebp
  40bfd2:	mov    rcx,QWORD PTR [rax]
  40bfd5:	mov    rdx,QWORD PTR [rcx+0x10]
  40bfd9:	mov    rdx,QWORD PTR [rdx]
  40bfdc:	add    ebx,0x2
  40bfdf:	cmp    ebp,DWORD PTR [rdx]
  40bfe1:	je     40c016 <strcmp@plt+0x887e>
  40bfe3:	mov    rcx,QWORD PTR [rdx+0x10]
  40bfe7:	mov    esi,ebp
  40bfe9:	shr    esi,0x4
  40bfec:	mov    edi,ebx
  40bfee:	and    dil,0x1e
  40bff2:	shlx   edi,r15d,edi
  40bff7:	test   DWORD PTR [rcx+rsi*4],edi
  40bffa:	jne    40bfd0 <strcmp@plt+0x8838>
  40bffc:	mov    rax,QWORD PTR [rdx+0x20]
  40c000:	mov    ecx,ebp
  40c002:	mov    rdi,QWORD PTR [rax+rcx*8]
  40c006:	mov    rsi,QWORD PTR [rsp+0x8]
  40c00b:	call   42baa0 <strcmp@plt+0x28308>
  40c010:	mov    rax,QWORD PTR [r13+0x70]
  40c014:	jmp    40bfd0 <strcmp@plt+0x8838>
  40c016:	mov    rdx,QWORD PTR [rcx+0x18]
  40c01a:	mov    rdx,QWORD PTR [rdx]
  40c01d:	cmp    DWORD PTR [rdx],0x0
  40c020:	je     40c076 <strcmp@plt+0x88de>
  40c022:	xor    ebx,ebx
  40c024:	mov    r15d,0x3
  40c02a:	xor    ebp,ebp
  40c02c:	jmp    40c043 <strcmp@plt+0x88ab>
  40c02e:	xchg   ax,ax
  40c030:	inc    ebp
  40c032:	mov    rcx,QWORD PTR [rax]
  40c035:	mov    rdx,QWORD PTR [rcx+0x18]
  40c039:	mov    rdx,QWORD PTR [rdx]
  40c03c:	add    ebx,0x2
  40c03f:	cmp    ebp,DWORD PTR [rdx]
  40c041:	je     40c076 <strcmp@plt+0x88de>
  40c043:	mov    rcx,QWORD PTR [rdx+0x10]
  40c047:	mov    esi,ebp
  40c049:	shr    esi,0x4
  40c04c:	mov    edi,ebx
  40c04e:	and    dil,0x1e
  40c052:	shlx   edi,r15d,edi
  40c057:	test   DWORD PTR [rcx+rsi*4],edi
  40c05a:	jne    40c030 <strcmp@plt+0x8898>
  40c05c:	mov    rax,QWORD PTR [rdx+0x20]
  40c060:	mov    ecx,ebp
  40c062:	mov    rdi,QWORD PTR [rax+rcx*8]
  40c066:	mov    rsi,QWORD PTR [rsp+0x8]
  40c06b:	call   42baa0 <strcmp@plt+0x28308>
  40c070:	mov    rax,QWORD PTR [r13+0x70]
  40c074:	jmp    40c030 <strcmp@plt+0x8898>
  40c076:	mov    rdi,QWORD PTR [rcx+0x20]
  40c07a:	mov    rbx,QWORD PTR [rsp+0x8]
  40c07f:	mov    rsi,rbx
  40c082:	call   42baa0 <strcmp@plt+0x28308>
  40c087:	mov    rax,QWORD PTR [r13+0x70]
  40c08b:	mov    rax,QWORD PTR [rax]
  40c08e:	mov    rdi,QWORD PTR [rax+0x20]
  40c092:	mov    rsi,rbx
  40c095:	call   42baa0 <strcmp@plt+0x28308>
  40c09a:	mov    r15,QWORD PTR [rbx+0x8]
  40c09e:	cmp    r15,rbx
  40c0a1:	jne    40c0bf <strcmp@plt+0x8927>
  40c0a3:	jmp    40c1c3 <strcmp@plt+0x8a2b>
  40c0a8:	nop    DWORD PTR [rax+rax*1+0x0]
  40c0b0:	mov    r15,QWORD PTR [r15+0x8]
  40c0b4:	cmp    r15,QWORD PTR [rsp+0x8]
  40c0b9:	je     40c1c3 <strcmp@plt+0x8a2b>
  40c0bf:	mov    rax,QWORD PTR [r15+0x10]
  40c0c3:	mov    rbx,QWORD PTR [rax]
  40c0c6:	test   rbx,rbx
  40c0c9:	je     40c0b0 <strcmp@plt+0x8918>
  40c0cb:	xor    r12d,r12d
  40c0ce:	cmp    QWORD PTR [rbx+0x8],0x0
  40c0d3:	jne    40c0ff <strcmp@plt+0x8967>
  40c0d5:	jmp    40c180 <strcmp@plt+0x89e8>
  40c0da:	nop    WORD PTR [rax+rax*1+0x0]
  40c0e0:	test   rcx,rcx
  40c0e3:	je     40c1aa <strcmp@plt+0x8a12>
  40c0e9:	mov    rax,rcx
  40c0ec:	mov    rbx,rax
  40c0ef:	test   rax,rax
  40c0f2:	je     40c0b0 <strcmp@plt+0x8918>
  40c0f4:	cmp    QWORD PTR [rbx+0x8],0x0
  40c0f9:	je     40c180 <strcmp@plt+0x89e8>
  40c0ff:	mov    rax,QWORD PTR [rbx+0x28]
  40c103:	mov    r14,QWORD PTR [rax]
  40c106:	test   r14,r14
  40c109:	je     40c180 <strcmp@plt+0x89e8>
  40c10b:	xor    ebp,ebp
  40c10d:	cmp    QWORD PTR [r14+0x8],0x0
  40c112:	jne    40c137 <strcmp@plt+0x899f>
  40c114:	jmp    40c150 <strcmp@plt+0x89b8>
  40c116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c120:	test   rcx,rcx
  40c123:	je     40c16c <strcmp@plt+0x89d4>
  40c125:	mov    rax,rcx
  40c128:	mov    r14,rax
  40c12b:	test   rax,rax
  40c12e:	je     40c180 <strcmp@plt+0x89e8>
  40c130:	cmp    QWORD PTR [r14+0x8],0x0
  40c135:	je     40c150 <strcmp@plt+0x89b8>
  40c137:	mov    rdi,QWORD PTR [r14+0x28]
  40c13b:	test   rdi,rdi
  40c13e:	je     40c150 <strcmp@plt+0x89b8>
  40c140:	call   4317d0 <strcmp@plt+0x2e038>
  40c145:	mov    rdi,r13
  40c148:	mov    rsi,rax
  40c14b:	call   4077b0 <strcmp@plt+0x4018>
  40c150:	mov    rax,QWORD PTR [r14+0x10]
  40c154:	mov    rcx,QWORD PTR [r14+0x18]
  40c158:	test   rax,rax
  40c15b:	je     40c120 <strcmp@plt+0x8988>
  40c15d:	test   rcx,rcx
  40c160:	je     40c128 <strcmp@plt+0x8990>
  40c162:	mov    QWORD PTR [rsp+rbp*8+0x10],rcx
  40c167:	inc    rbp
  40c16a:	jmp    40c128 <strcmp@plt+0x8990>
  40c16c:	test   rbp,rbp
  40c16f:	je     40c180 <strcmp@plt+0x89e8>
  40c171:	mov    rax,QWORD PTR [rsp+rbp*8+0x8]
  40c176:	dec    rbp
  40c179:	jmp    40c128 <strcmp@plt+0x8990>
  40c17b:	nop    DWORD PTR [rax+rax*1+0x0]
  40c180:	mov    rax,QWORD PTR [rbx+0x10]
  40c184:	mov    rcx,QWORD PTR [rbx+0x18]
  40c188:	test   rax,rax
  40c18b:	je     40c0e0 <strcmp@plt+0x8948>
  40c191:	test   rcx,rcx
  40c194:	je     40c0ec <strcmp@plt+0x8954>
  40c19a:	mov    QWORD PTR [rsp+r12*8+0x420],rcx
  40c1a2:	inc    r12
  40c1a5:	jmp    40c0ec <strcmp@plt+0x8954>
  40c1aa:	test   r12,r12
  40c1ad:	je     40c0b0 <strcmp@plt+0x8918>
  40c1b3:	mov    rax,QWORD PTR [rsp+r12*8+0x418]
  40c1bb:	dec    r12
  40c1be:	jmp    40c0ec <strcmp@plt+0x8954>
  40c1c3:	mov    rdi,QWORD PTR [rsp+0x8]
  40c1c8:	call   42bff0 <strcmp@plt+0x28858>
  40c1cd:	mov    rdi,QWORD PTR [r13+0x70]
  40c1d1:	call   407bc0 <strcmp@plt+0x4428>
  40c1d6:	mov    rdi,QWORD PTR [r13+0x68]
  40c1da:	call   42bff0 <strcmp@plt+0x28858>
  40c1df:	mov    rdi,QWORD PTR [r13+0x78]
  40c1e3:	call   42bff0 <strcmp@plt+0x28858>
  40c1e8:	mov    rdi,QWORD PTR [r13+0xa0]
  40c1ef:	call   436f40 <strcmp@plt+0x337a8>
  40c1f4:	lea    rax,[rip+0x58bc5]        # 464dc0 <strcmp@plt+0x61628>
  40c1fb:	cmp    DWORD PTR [rax],0x0
  40c1fe:	jle    40c224 <strcmp@plt+0x8a8c>
  40c200:	lea    rsi,[rip+0x3906e]        # 445275 <strcmp@plt+0x41add>
  40c207:	mov    edi,0x5
  40c20c:	xor    eax,eax
  40c20e:	add    rsp,0x828
  40c215:	pop    rbx
  40c216:	pop    r12
  40c218:	pop    r13
  40c21a:	pop    r14
  40c21c:	pop    r15
  40c21e:	pop    rbp
  40c21f:	jmp    42e520 <strcmp@plt+0x2ad88>
  40c224:	add    rsp,0x828
  40c22b:	pop    rbx
  40c22c:	pop    r12
  40c22e:	pop    r13
  40c230:	pop    r14
  40c232:	pop    r15
  40c234:	pop    rbp
  40c235:	ret    
  40c236:	lea    rdi,[rip+0x38cf8]        # 444f35 <strcmp@plt+0x4179d>
  40c23d:	lea    rsi,[rip+0x38d08]        # 444f4c <strcmp@plt+0x417b4>
  40c244:	lea    rdx,[rip+0x38d0f]        # 444f5a <strcmp@plt+0x417c2>
  40c24b:	call   431eb0 <strcmp@plt+0x2e718>
  40c250:	push   rbp
  40c251:	push   r15
  40c253:	push   r14
  40c255:	push   r13
  40c257:	push   r12
  40c259:	push   rbx
  40c25a:	sub    rsp,0x898
  40c261:	mov    rax,QWORD PTR [rdi+0x8]
  40c265:	cmp    rax,QWORD PTR [rip+0x57d64]        # 463fd0 <strcmp@plt+0x60838>
  40c26c:	jne    40d1ab <strcmp@plt+0x9a13>
  40c272:	mov    rbx,rdi
  40c275:	mov    eax,DWORD PTR [rdi]
  40c277:	cmp    eax,0x3
  40c27a:	jne    40c29d <strcmp@plt+0x8b05>
  40c27c:	lea    rax,[rip+0x58b3d]        # 464dc0 <strcmp@plt+0x61628>
  40c283:	cmp    DWORD PTR [rax],0x0
  40c286:	jle    40c2c0 <strcmp@plt+0x8b28>
  40c288:	lea    rsi,[rip+0x38ffb]        # 44528a <strcmp@plt+0x41af2>
  40c28f:	mov    edi,0x5
  40c294:	xor    eax,eax
  40c296:	call   42e520 <strcmp@plt+0x2ad88>
  40c29b:	mov    eax,DWORD PTR [rbx]
  40c29d:	test   eax,eax
  40c29f:	jne    40c2c0 <strcmp@plt+0x8b28>
  40c2a1:	lea    rax,[rip+0x58b18]        # 464dc0 <strcmp@plt+0x61628>
  40c2a8:	cmp    DWORD PTR [rax],0x0
  40c2ab:	jle    40c2c0 <strcmp@plt+0x8b28>
  40c2ad:	lea    rsi,[rip+0x38fec]        # 4452a0 <strcmp@plt+0x41b08>
  40c2b4:	mov    edi,0x5
  40c2b9:	xor    eax,eax
  40c2bb:	call   42e520 <strcmp@plt+0x2ad88>
  40c2c0:	mov    rax,QWORD PTR [rbx+0x78]
  40c2c4:	cmp    DWORD PTR [rax+0x18],0x0
  40c2c8:	jne    40c2e7 <strcmp@plt+0x8b4f>
  40c2ca:	lea    rsi,[rip+0x38fe2]        # 4452b3 <strcmp@plt+0x41b1b>
  40c2d1:	mov    edi,0x3
  40c2d6:	xor    eax,eax
  40c2d8:	call   42e520 <strcmp@plt+0x2ad88>
  40c2dd:	mov    edi,0x2
  40c2e2:	call   4370a0 <strcmp@plt+0x33908>
  40c2e7:	lea    rbp,[rbx+0x18]
  40c2eb:	mov    rax,QWORD PTR [rbx+0x48]
  40c2ef:	cmp    DWORD PTR [rax+0x18],0x0
  40c2f3:	jne    40c312 <strcmp@plt+0x8b7a>
  40c2f5:	lea    rsi,[rip+0x3900d]        # 445309 <strcmp@plt+0x41b71>
  40c2fc:	mov    edi,0x1
  40c301:	xor    eax,eax
  40c303:	call   42e520 <strcmp@plt+0x2ad88>
  40c308:	mov    edi,0x2
  40c30d:	call   4370a0 <strcmp@plt+0x33908>
  40c312:	mov    rdi,rbp
  40c315:	mov    esi,0x2
  40c31a:	call   40bd80 <strcmp@plt+0x85e8>
  40c31f:	mov    r14,rax
  40c322:	mov    QWORD PTR [rsp+0x60],rbp
  40c327:	mov    rdi,rbp
  40c32a:	mov    esi,0xa
  40c32f:	call   40bd80 <strcmp@plt+0x85e8>
  40c334:	mov    rbp,rax
  40c337:	mov    rdi,r14
  40c33a:	call   4307f0 <strcmp@plt+0x2d058>
  40c33f:	test   al,al
  40c341:	mov    QWORD PTR [rsp+0x58],r14
  40c346:	mov    QWORD PTR [rsp+0x50],rbp
  40c34b:	jne    40c35d <strcmp@plt+0x8bc5>
  40c34d:	mov    rdi,rbp
  40c350:	call   4307f0 <strcmp@plt+0x2d058>
  40c355:	test   al,al
  40c357:	je     40d189 <strcmp@plt+0x99f1>
  40c35d:	mov    rax,QWORD PTR [rbx+0x38]
  40c361:	mov    rdi,QWORD PTR [rbx+0x40]
  40c365:	mov    rsi,r14
  40c368:	call   QWORD PTR [rax+0x38]
  40c36b:	mov    rdi,r14
  40c36e:	call   4307e0 <strcmp@plt+0x2d048>
  40c373:	mov    rdi,rbx
  40c376:	mov    rsi,rax
  40c379:	xor    edx,edx
  40c37b:	call   407930 <strcmp@plt+0x4198>
  40c380:	mov    rax,QWORD PTR [rbx+0x38]
  40c384:	mov    rdi,QWORD PTR [rbx+0x40]
  40c388:	mov    rsi,rbp
  40c38b:	call   QWORD PTR [rax+0x38]
  40c38e:	mov    rdi,rbp
  40c391:	call   4307e0 <strcmp@plt+0x2d048>
  40c396:	mov    rdi,rbx
  40c399:	mov    rsi,rax
  40c39c:	xor    edx,edx
  40c39e:	call   407930 <strcmp@plt+0x4198>
  40c3a3:	cmp    DWORD PTR [rbx+0x80],0x1
  40c3aa:	mov    QWORD PTR [rsp],rbx
  40c3ae:	jne    40c7f0 <strcmp@plt+0x9058>
  40c3b4:	mov    rax,QWORD PTR [rbx+0x78]
  40c3b8:	mov    ecx,DWORD PTR [rax+0x18]
  40c3bb:	cmp    ecx,0x2
  40c3be:	jl     40c3e1 <strcmp@plt+0x8c49>
  40c3c0:	lea    rsi,[rip+0x39030]        # 4453f7 <strcmp@plt+0x41c5f>
  40c3c7:	mov    edi,0x2
  40c3cc:	xor    eax,eax
  40c3ce:	call   42e520 <strcmp@plt+0x2ad88>
  40c3d3:	xor    eax,eax
  40c3d5:	call   43aeb0 <strcmp@plt+0x37718>
  40c3da:	mov    rax,QWORD PTR [rbx+0x78]
  40c3de:	mov    ecx,DWORD PTR [rax+0x18]
  40c3e1:	cmp    ecx,0x1
  40c3e4:	jne    40c416 <strcmp@plt+0x8c7e>
  40c3e6:	mov    rax,QWORD PTR [rax+0x8]
  40c3ea:	mov    rax,QWORD PTR [rax+0x10]
  40c3ee:	mov    rdi,QWORD PTR [rax]
  40c3f1:	call   422ef0 <strcmp@plt+0x1f758>
  40c3f6:	cmp    ax,0x2
  40c3fa:	je     40c416 <strcmp@plt+0x8c7e>
  40c3fc:	lea    rsi,[rip+0x39036]        # 445439 <strcmp@plt+0x41ca1>
  40c403:	mov    edi,0x2
  40c408:	xor    eax,eax
  40c40a:	call   42e520 <strcmp@plt+0x2ad88>
  40c40f:	xor    eax,eax
  40c411:	call   43aeb0 <strcmp@plt+0x37718>
  40c416:	mov    rax,QWORD PTR [rbx+0x48]
  40c41a:	cmp    DWORD PTR [rax+0x18],0x0
  40c41e:	jle    40c43c <strcmp@plt+0x8ca4>
  40c420:	lea    rsi,[rip+0x39055]        # 44547c <strcmp@plt+0x41ce4>
  40c427:	mov    edi,0x4
  40c42c:	xor    eax,eax
  40c42e:	call   42e520 <strcmp@plt+0x2ad88>
  40c433:	mov    rdi,QWORD PTR [rbx+0x48]
  40c437:	call   42bf80 <strcmp@plt+0x287e8>
  40c43c:	cmp    DWORD PTR [rbx+0x24],0x0
  40c440:	jle    40c45c <strcmp@plt+0x8cc4>
  40c442:	mov    DWORD PTR [rbx+0x24],0x0
  40c449:	lea    rsi,[rip+0x3905a]        # 4454aa <strcmp@plt+0x41d12>
  40c450:	mov    edi,0x4
  40c455:	xor    eax,eax
  40c457:	call   42e520 <strcmp@plt+0x2ad88>
  40c45c:	call   42b980 <strcmp@plt+0x281e8>
  40c461:	mov    rbp,rax
  40c464:	mov    rax,QWORD PTR [rbx+0x70]
  40c468:	mov    rax,QWORD PTR [rax]
  40c46b:	mov    rdi,QWORD PTR [rax]
  40c46e:	mov    rsi,rbp
  40c471:	call   42baa0 <strcmp@plt+0x28308>
  40c476:	mov    rax,QWORD PTR [rbx+0x70]
  40c47a:	mov    rax,QWORD PTR [rax]
  40c47d:	mov    rdi,QWORD PTR [rax+0x8]
  40c481:	mov    QWORD PTR [rsp+0x10],rbp
  40c486:	mov    rsi,rbp
  40c489:	call   42baa0 <strcmp@plt+0x28308>
  40c48e:	mov    rax,QWORD PTR [rbx+0x70]
  40c492:	mov    rcx,QWORD PTR [rax]
  40c495:	mov    rdx,QWORD PTR [rcx+0x10]
  40c499:	mov    rdx,QWORD PTR [rdx]
  40c49c:	cmp    DWORD PTR [rdx],0x0
  40c49f:	je     40c4fa <strcmp@plt+0x8d62>
  40c4a1:	xor    ebx,ebx
  40c4a3:	mov    r14d,0x3
  40c4a9:	xor    ebp,ebp
  40c4ab:	jmp    40c4c3 <strcmp@plt+0x8d2b>
  40c4ad:	nop    DWORD PTR [rax]
  40c4b0:	inc    ebp
  40c4b2:	mov    rcx,QWORD PTR [rax]
  40c4b5:	mov    rdx,QWORD PTR [rcx+0x10]
  40c4b9:	mov    rdx,QWORD PTR [rdx]
  40c4bc:	add    ebx,0x2
  40c4bf:	cmp    ebp,DWORD PTR [rdx]
  40c4c1:	je     40c4fa <strcmp@plt+0x8d62>
  40c4c3:	mov    rcx,QWORD PTR [rdx+0x10]
  40c4c7:	mov    esi,ebp
  40c4c9:	shr    esi,0x4
  40c4cc:	mov    edi,ebx
  40c4ce:	and    dil,0x1e
  40c4d2:	shlx   edi,r14d,edi
  40c4d7:	test   DWORD PTR [rcx+rsi*4],edi
  40c4da:	jne    40c4b0 <strcmp@plt+0x8d18>
  40c4dc:	mov    rax,QWORD PTR [rdx+0x20]
  40c4e0:	mov    ecx,ebp
  40c4e2:	mov    rdi,QWORD PTR [rax+rcx*8]
  40c4e6:	mov    rsi,QWORD PTR [rsp+0x10]
  40c4eb:	call   42baa0 <strcmp@plt+0x28308>
  40c4f0:	mov    rax,QWORD PTR [rsp]
  40c4f4:	mov    rax,QWORD PTR [rax+0x70]
  40c4f8:	jmp    40c4b0 <strcmp@plt+0x8d18>
  40c4fa:	mov    rdx,QWORD PTR [rcx+0x18]
  40c4fe:	mov    rdx,QWORD PTR [rdx]
  40c501:	cmp    DWORD PTR [rdx],0x0
  40c504:	je     40c56a <strcmp@plt+0x8dd2>
  40c506:	xor    ebx,ebx
  40c508:	mov    r14d,0x3
  40c50e:	xor    ebp,ebp
  40c510:	jmp    40c533 <strcmp@plt+0x8d9b>
  40c512:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c51c:	nop    DWORD PTR [rax+0x0]
  40c520:	inc    ebp
  40c522:	mov    rcx,QWORD PTR [rax]
  40c525:	mov    rdx,QWORD PTR [rcx+0x18]
  40c529:	mov    rdx,QWORD PTR [rdx]
  40c52c:	add    ebx,0x2
  40c52f:	cmp    ebp,DWORD PTR [rdx]
  40c531:	je     40c56a <strcmp@plt+0x8dd2>
  40c533:	mov    rcx,QWORD PTR [rdx+0x10]
  40c537:	mov    esi,ebp
  40c539:	shr    esi,0x4
  40c53c:	mov    edi,ebx
  40c53e:	and    dil,0x1e
  40c542:	shlx   edi,r14d,edi
  40c547:	test   DWORD PTR [rcx+rsi*4],edi
  40c54a:	jne    40c520 <strcmp@plt+0x8d88>
  40c54c:	mov    rax,QWORD PTR [rdx+0x20]
  40c550:	mov    ecx,ebp
  40c552:	mov    rdi,QWORD PTR [rax+rcx*8]
  40c556:	mov    rsi,QWORD PTR [rsp+0x10]
  40c55b:	call   42baa0 <strcmp@plt+0x28308>
  40c560:	mov    rax,QWORD PTR [rsp]
  40c564:	mov    rax,QWORD PTR [rax+0x70]
  40c568:	jmp    40c520 <strcmp@plt+0x8d88>
  40c56a:	mov    rdi,QWORD PTR [rcx+0x20]
  40c56e:	mov    rbp,QWORD PTR [rsp+0x10]
  40c573:	mov    rsi,rbp
  40c576:	call   42baa0 <strcmp@plt+0x28308>
  40c57b:	mov    rbx,QWORD PTR [rsp]
  40c57f:	mov    rax,QWORD PTR [rbx+0x70]
  40c583:	mov    rax,QWORD PTR [rax]
  40c586:	mov    rdi,QWORD PTR [rax+0x20]
  40c58a:	mov    rsi,rbp
  40c58d:	call   42baa0 <strcmp@plt+0x28308>
  40c592:	mov    rdx,QWORD PTR [rbp+0x8]
  40c596:	cmp    rdx,rbp
  40c599:	je     40c7e6 <strcmp@plt+0x904e>
  40c59f:	lea    r13,[rip+0x38f5a]        # 445500 <strcmp@plt+0x41d68>
  40c5a6:	xor    ebp,ebp
  40c5a8:	jmp    40c5bf <strcmp@plt+0x8e27>
  40c5aa:	nop    WORD PTR [rax+rax*1+0x0]
  40c5b0:	mov    rdx,QWORD PTR [rdx+0x8]
  40c5b4:	cmp    rdx,QWORD PTR [rsp+0x10]
  40c5b9:	je     40c7e6 <strcmp@plt+0x904e>
  40c5bf:	mov    rax,QWORD PTR [rdx+0x10]
  40c5c3:	mov    rcx,QWORD PTR [rax]
  40c5c6:	test   rcx,rcx
  40c5c9:	je     40c5b0 <strcmp@plt+0x8e18>
  40c5cb:	xor    esi,esi
  40c5cd:	mov    QWORD PTR [rsp+0x40],rdx
  40c5d2:	cmp    QWORD PTR [rcx+0x8],0x0
  40c5d7:	jne    40c5ff <strcmp@plt+0x8e67>
  40c5d9:	jmp    40c7a3 <strcmp@plt+0x900b>
  40c5de:	xchg   ax,ax
  40c5e0:	test   rcx,rcx
  40c5e3:	je     40c7cd <strcmp@plt+0x9035>
  40c5e9:	mov    rax,rcx
  40c5ec:	mov    rcx,rax
  40c5ef:	test   rax,rax
  40c5f2:	je     40c5b0 <strcmp@plt+0x8e18>
  40c5f4:	cmp    QWORD PTR [rcx+0x8],0x0
  40c5f9:	je     40c7a3 <strcmp@plt+0x900b>
  40c5ff:	mov    QWORD PTR [rsp+0x38],rsi
  40c604:	mov    QWORD PTR [rsp+0x48],rcx
  40c609:	mov    rax,QWORD PTR [rcx+0x28]
  40c60d:	mov    r14,QWORD PTR [rax]
  40c610:	test   r14,r14
  40c613:	je     40c790 <strcmp@plt+0x8ff8>
  40c619:	xor    edx,edx
  40c61b:	cmp    QWORD PTR [r14+0x8],0x0
  40c620:	jne    40c653 <strcmp@plt+0x8ebb>
  40c622:	jmp    40c74a <strcmp@plt+0x8fb2>
  40c627:	nop    WORD PTR [rax+rax*1+0x0]
  40c630:	test   rcx,rcx
  40c633:	je     40c774 <strcmp@plt+0x8fdc>
  40c639:	mov    rax,rcx
  40c63c:	mov    r14,rax
  40c63f:	test   rax,rax
  40c642:	je     40c790 <strcmp@plt+0x8ff8>
  40c648:	cmp    QWORD PTR [r14+0x8],0x0
  40c64d:	je     40c74a <strcmp@plt+0x8fb2>
  40c653:	mov    rbx,QWORD PTR [r14+0x28]
  40c657:	test   rbx,rbx
  40c65a:	je     40c74a <strcmp@plt+0x8fb2>
  40c660:	mov    QWORD PTR [rsp+0x8],rdx
  40c665:	mov    DWORD PTR [rsp+0x30],ebp
  40c669:	test   ebp,ebp
  40c66b:	jle    40c687 <strcmp@plt+0x8eef>
  40c66d:	mov    edi,0x2
  40c672:	lea    rsi,[rip+0x38e58]        # 4454d1 <strcmp@plt+0x41d39>
  40c679:	xor    eax,eax
  40c67b:	call   42e520 <strcmp@plt+0x2ad88>
  40c680:	xor    eax,eax
  40c682:	call   43aeb0 <strcmp@plt+0x37718>
  40c687:	mov    rdi,rbx
  40c68a:	call   4317d0 <strcmp@plt+0x2e038>
  40c68f:	mov    rax,QWORD PTR [rax+0x28]
  40c693:	mov    r15,QWORD PTR [rax+0x8]
  40c697:	jmp    40c6a4 <strcmp@plt+0x8f0c>
  40c699:	nop    DWORD PTR [rax+0x0]
  40c6a0:	mov    r15,QWORD PTR [r15+0x8]
  40c6a4:	mov    rdi,rbx
  40c6a7:	call   4317d0 <strcmp@plt+0x2e038>
  40c6ac:	cmp    r15,QWORD PTR [rax+0x28]
  40c6b0:	je     40c710 <strcmp@plt+0x8f78>
  40c6b2:	mov    r12,QWORD PTR [r15+0x10]
  40c6b6:	cmp    DWORD PTR [r12+0x18],0x0
  40c6bc:	je     40c6a0 <strcmp@plt+0x8f08>
  40c6be:	mov    rbp,QWORD PTR [r12+0x8]
  40c6c3:	cmp    rbp,r12
  40c6c6:	jne    40c6d9 <strcmp@plt+0x8f41>
  40c6c8:	jmp    40c6a0 <strcmp@plt+0x8f08>
  40c6ca:	nop    WORD PTR [rax+rax*1+0x0]
  40c6d0:	mov    rbp,QWORD PTR [rbp+0x8]
  40c6d4:	cmp    rbp,r12
  40c6d7:	je     40c6a0 <strcmp@plt+0x8f08>
  40c6d9:	mov    rax,QWORD PTR [rbp+0x10]
  40c6dd:	mov    BYTE PTR [rax+0xa],0x0
  40c6e1:	mov    rax,QWORD PTR [rax]
  40c6e4:	cmp    DWORD PTR [rax+0x18],0x3
  40c6e8:	jne    40c6d0 <strcmp@plt+0x8f38>
  40c6ea:	mov    edi,0x2
  40c6ef:	mov    rsi,r13
  40c6f2:	xor    eax,eax
  40c6f4:	call   42e520 <strcmp@plt+0x2ad88>
  40c6f9:	xor    eax,eax
  40c6fb:	call   43aeb0 <strcmp@plt+0x37718>
  40c700:	jmp    40c6d0 <strcmp@plt+0x8f38>
  40c702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c70c:	nop    DWORD PTR [rax+0x0]
  40c710:	mov    ebp,DWORD PTR [rsp+0x30]
  40c714:	inc    ebp
  40c716:	mov    edi,0x2
  40c71b:	lea    rsi,[rip+0x38e2c]        # 44554e <strcmp@plt+0x41db6>
  40c722:	xor    eax,eax
  40c724:	call   42e520 <strcmp@plt+0x2ad88>
  40c729:	mov    rax,QWORD PTR [rsp+0x58]
  40c72e:	mov    rdi,QWORD PTR [rax+0x8]
  40c732:	call   4291b0 <strcmp@plt+0x25a18>
  40c737:	mov    rax,QWORD PTR [rsp+0x50]
  40c73c:	mov    rdi,QWORD PTR [rax+0x8]
  40c740:	call   4291b0 <strcmp@plt+0x25a18>
  40c745:	mov    rdx,QWORD PTR [rsp+0x8]
  40c74a:	mov    rax,QWORD PTR [r14+0x10]
  40c74e:	mov    rcx,QWORD PTR [r14+0x18]
  40c752:	test   rax,rax
  40c755:	je     40c630 <strcmp@plt+0x8e98>
  40c75b:	test   rcx,rcx
  40c75e:	je     40c63c <strcmp@plt+0x8ea4>
  40c764:	mov    QWORD PTR [rsp+rdx*8+0x80],rcx
  40c76c:	inc    rdx
  40c76f:	jmp    40c63c <strcmp@plt+0x8ea4>
  40c774:	test   rdx,rdx
  40c777:	je     40c790 <strcmp@plt+0x8ff8>
  40c779:	mov    rax,QWORD PTR [rsp+rdx*8+0x78]
  40c77e:	dec    rdx
  40c781:	jmp    40c63c <strcmp@plt+0x8ea4>
  40c786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c790:	mov    rbx,QWORD PTR [rsp]
  40c794:	mov    rdx,QWORD PTR [rsp+0x40]
  40c799:	mov    rsi,QWORD PTR [rsp+0x38]
  40c79e:	mov    rcx,QWORD PTR [rsp+0x48]
  40c7a3:	mov    rax,QWORD PTR [rcx+0x10]
  40c7a7:	mov    rcx,QWORD PTR [rcx+0x18]
  40c7ab:	test   rax,rax
  40c7ae:	je     40c5e0 <strcmp@plt+0x8e48>
  40c7b4:	test   rcx,rcx
  40c7b7:	je     40c5ec <strcmp@plt+0x8e54>
  40c7bd:	mov    QWORD PTR [rsp+rsi*8+0x490],rcx
  40c7c5:	inc    rsi
  40c7c8:	jmp    40c5ec <strcmp@plt+0x8e54>
  40c7cd:	test   rsi,rsi
  40c7d0:	je     40c5b0 <strcmp@plt+0x8e18>
  40c7d6:	mov    rax,QWORD PTR [rsp+rsi*8+0x488]
  40c7de:	dec    rsi
  40c7e1:	jmp    40c5ec <strcmp@plt+0x8e54>
  40c7e6:	mov    rdi,QWORD PTR [rsp+0x10]
  40c7eb:	call   42bff0 <strcmp@plt+0x28858>
  40c7f0:	cmp    DWORD PTR [rbx],0x3
  40c7f3:	jne    40c84f <strcmp@plt+0x90b7>
  40c7f5:	mov    rdi,QWORD PTR [rbx+0x70]
  40c7f9:	mov    esi,0x2
  40c7fe:	call   4080e0 <strcmp@plt+0x4948>
  40c803:	cmp    eax,0x2
  40c806:	jl     40c822 <strcmp@plt+0x908a>
  40c808:	lea    rsi,[rip+0x38d5e]        # 44556d <strcmp@plt+0x41dd5>
  40c80f:	mov    edi,0x2
  40c814:	xor    eax,eax
  40c816:	call   42e520 <strcmp@plt+0x2ad88>
  40c81b:	xor    eax,eax
  40c81d:	call   43aeb0 <strcmp@plt+0x37718>
  40c822:	mov    rdi,QWORD PTR [rbx+0x70]
  40c826:	mov    esi,0xa
  40c82b:	call   4080e0 <strcmp@plt+0x4948>
  40c830:	cmp    eax,0x2
  40c833:	jl     40c84f <strcmp@plt+0x90b7>
  40c835:	lea    rsi,[rip+0x38d31]        # 44556d <strcmp@plt+0x41dd5>
  40c83c:	mov    edi,0x2
  40c841:	xor    eax,eax
  40c843:	call   42e520 <strcmp@plt+0x2ad88>
  40c848:	xor    eax,eax
  40c84a:	call   43aeb0 <strcmp@plt+0x37718>
  40c84f:	lea    rbp,[rip+0x5856a]        # 464dc0 <strcmp@plt+0x61628>
  40c856:	cmp    DWORD PTR [rbp+0x0],0x0
  40c85a:	jle    40c888 <strcmp@plt+0x90f0>
  40c85c:	lea    rsi,[rip+0x423f6]        # 44ec59 <strcmp@plt+0x4b4c1>
  40c863:	mov    edi,0x5
  40c868:	xor    eax,eax
  40c86a:	call   42e520 <strcmp@plt+0x2ad88>
  40c86f:	cmp    DWORD PTR [rbp+0x0],0x0
  40c873:	jle    40c888 <strcmp@plt+0x90f0>
  40c875:	lea    rsi,[rip+0x38d43]        # 4455bf <strcmp@plt+0x41e27>
  40c87c:	mov    edi,0x5
  40c881:	xor    eax,eax
  40c883:	call   42e520 <strcmp@plt+0x2ad88>
  40c888:	mov    rdi,QWORD PTR [rbx+0x70]
  40c88c:	mov    esi,0x5
  40c891:	call   408370 <strcmp@plt+0x4bd8>
  40c896:	mov    rdi,QWORD PTR [rbx+0x30]
  40c89a:	mov    esi,0x5
  40c89f:	call   408770 <strcmp@plt+0x4fd8>
  40c8a4:	mov    rdi,rbx
  40c8a7:	mov    esi,0x5
  40c8ac:	call   40fb90 <strcmp@plt+0xc3f8>
  40c8b1:	cmp    DWORD PTR [rbp+0x0],0x0
  40c8b5:	jle    40c8d1 <strcmp@plt+0x9139>
  40c8b7:	lea    rsi,[rip+0x38d35]        # 4455f3 <strcmp@plt+0x41e5b>
  40c8be:	lea    rdx,[rip+0x42b41]        # 44f406 <strcmp@plt+0x4bc6e>
  40c8c5:	mov    edi,0x5
  40c8ca:	xor    eax,eax
  40c8cc:	call   42e520 <strcmp@plt+0x2ad88>
  40c8d1:	mov    rdi,QWORD PTR [rbx+0x48]
  40c8d5:	lea    rsi,[rip+0x16544]        # 422e20 <strcmp@plt+0x1f688>
  40c8dc:	mov    edx,0x5
  40c8e1:	call   42bce0 <strcmp@plt+0x28548>
  40c8e6:	cmp    DWORD PTR [rbp+0x0],0x0
  40c8ea:	jle    40c8ff <strcmp@plt+0x9167>
  40c8ec:	lea    rsi,[rip+0x387c8]        # 4450bb <strcmp@plt+0x41923>
  40c8f3:	mov    edi,0x5
  40c8f8:	xor    eax,eax
  40c8fa:	call   42e520 <strcmp@plt+0x2ad88>
  40c8ff:	mov    rdi,rbx
  40c902:	mov    esi,0x5
  40c907:	call   40f8d0 <strcmp@plt+0xc138>
  40c90c:	cmp    DWORD PTR [rbp+0x0],0x0
  40c910:	jle    40c92c <strcmp@plt+0x9194>
  40c912:	lea    rsi,[rip+0x38cda]        # 4455f3 <strcmp@plt+0x41e5b>
  40c919:	lea    rdx,[rip+0x38cf6]        # 445616 <strcmp@plt+0x41e7e>
  40c920:	mov    edi,0x5
  40c925:	xor    eax,eax
  40c927:	call   42e520 <strcmp@plt+0x2ad88>
  40c92c:	mov    rdi,QWORD PTR [rbx+0x68]
  40c930:	lea    rsi,[rip+0x164e9]        # 422e20 <strcmp@plt+0x1f688>
  40c937:	mov    edx,0x5
  40c93c:	call   42bce0 <strcmp@plt+0x28548>
  40c941:	cmp    DWORD PTR [rbp+0x0],0x0
  40c945:	jle    40c95a <strcmp@plt+0x91c2>
  40c947:	lea    rsi,[rip+0x3876d]        # 4450bb <strcmp@plt+0x41923>
  40c94e:	mov    edi,0x5
  40c953:	xor    eax,eax
  40c955:	call   42e520 <strcmp@plt+0x2ad88>
  40c95a:	mov    rdi,QWORD PTR [rbx+0x60]
  40c95e:	cmp    DWORD PTR [rdi+0x18],0x0
  40c962:	je     40c9b2 <strcmp@plt+0x921a>
  40c964:	cmp    DWORD PTR [rbp+0x0],0x0
  40c968:	jle    40c988 <strcmp@plt+0x91f0>
  40c96a:	lea    rsi,[rip+0x38c82]        # 4455f3 <strcmp@plt+0x41e5b>
  40c971:	lea    rdx,[rip+0x38ca9]        # 445621 <strcmp@plt+0x41e89>
  40c978:	mov    edi,0x5
  40c97d:	xor    eax,eax
  40c97f:	call   42e520 <strcmp@plt+0x2ad88>
  40c984:	mov    rdi,QWORD PTR [rbx+0x60]
  40c988:	lea    rsi,[rip+0x16491]        # 422e20 <strcmp@plt+0x1f688>
  40c98f:	mov    edx,0x5
  40c994:	call   42bce0 <strcmp@plt+0x28548>
  40c999:	cmp    DWORD PTR [rbp+0x0],0x0
  40c99d:	jle    40c9b2 <strcmp@plt+0x921a>
  40c99f:	lea    rsi,[rip+0x38715]        # 4450bb <strcmp@plt+0x41923>
  40c9a6:	mov    edi,0x5
  40c9ab:	xor    eax,eax
  40c9ad:	call   42e520 <strcmp@plt+0x2ad88>
  40c9b2:	call   42b980 <strcmp@plt+0x281e8>
  40c9b7:	mov    rbp,rax
  40c9ba:	mov    rax,QWORD PTR [rbx+0x70]
  40c9be:	mov    rax,QWORD PTR [rax]
  40c9c1:	mov    rdi,QWORD PTR [rax]
  40c9c4:	mov    rsi,rbp
  40c9c7:	call   42baa0 <strcmp@plt+0x28308>
  40c9cc:	mov    rax,QWORD PTR [rbx+0x70]
  40c9d0:	mov    rax,QWORD PTR [rax]
  40c9d3:	mov    rdi,QWORD PTR [rax+0x8]
  40c9d7:	mov    QWORD PTR [rsp+0x8],rbp
  40c9dc:	mov    rsi,rbp
  40c9df:	call   42baa0 <strcmp@plt+0x28308>
  40c9e4:	mov    rax,QWORD PTR [rbx+0x70]
  40c9e8:	mov    rcx,QWORD PTR [rax]
  40c9eb:	mov    rdx,QWORD PTR [rcx+0x10]
  40c9ef:	mov    rdx,QWORD PTR [rdx]
  40c9f2:	cmp    DWORD PTR [rdx],0x0
  40c9f5:	je     40ca5a <strcmp@plt+0x92c2>
  40c9f7:	xor    ebx,ebx
  40c9f9:	mov    r14d,0x3
  40c9ff:	xor    ebp,ebp
  40ca01:	jmp    40ca23 <strcmp@plt+0x928b>
  40ca03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca0d:	nop    DWORD PTR [rax]
  40ca10:	inc    ebp
  40ca12:	mov    rcx,QWORD PTR [rax]
  40ca15:	mov    rdx,QWORD PTR [rcx+0x10]
  40ca19:	mov    rdx,QWORD PTR [rdx]
  40ca1c:	add    ebx,0x2
  40ca1f:	cmp    ebp,DWORD PTR [rdx]
  40ca21:	je     40ca5a <strcmp@plt+0x92c2>
  40ca23:	mov    rcx,QWORD PTR [rdx+0x10]
  40ca27:	mov    esi,ebp
  40ca29:	shr    esi,0x4
  40ca2c:	mov    edi,ebx
  40ca2e:	and    dil,0x1e
  40ca32:	shlx   edi,r14d,edi
  40ca37:	test   DWORD PTR [rcx+rsi*4],edi
  40ca3a:	jne    40ca10 <strcmp@plt+0x9278>
  40ca3c:	mov    rax,QWORD PTR [rdx+0x20]
  40ca40:	mov    ecx,ebp
  40ca42:	mov    rdi,QWORD PTR [rax+rcx*8]
  40ca46:	mov    rsi,QWORD PTR [rsp+0x8]
  40ca4b:	call   42baa0 <strcmp@plt+0x28308>
  40ca50:	mov    rax,QWORD PTR [rsp]
  40ca54:	mov    rax,QWORD PTR [rax+0x70]
  40ca58:	jmp    40ca10 <strcmp@plt+0x9278>
  40ca5a:	mov    rdx,QWORD PTR [rcx+0x18]
  40ca5e:	mov    rdx,QWORD PTR [rdx]
  40ca61:	cmp    DWORD PTR [rdx],0x0
  40ca64:	je     40caca <strcmp@plt+0x9332>
  40ca66:	xor    ebx,ebx
  40ca68:	mov    r14d,0x3
  40ca6e:	xor    ebp,ebp
  40ca70:	jmp    40ca93 <strcmp@plt+0x92fb>
  40ca72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ca7c:	nop    DWORD PTR [rax+0x0]
  40ca80:	inc    ebp
  40ca82:	mov    rcx,QWORD PTR [rax]
  40ca85:	mov    rdx,QWORD PTR [rcx+0x18]
  40ca89:	mov    rdx,QWORD PTR [rdx]
  40ca8c:	add    ebx,0x2
  40ca8f:	cmp    ebp,DWORD PTR [rdx]
  40ca91:	je     40caca <strcmp@plt+0x9332>
  40ca93:	mov    rcx,QWORD PTR [rdx+0x10]
  40ca97:	mov    esi,ebp
  40ca99:	shr    esi,0x4
  40ca9c:	mov    edi,ebx
  40ca9e:	and    dil,0x1e
  40caa2:	shlx   edi,r14d,edi
  40caa7:	test   DWORD PTR [rcx+rsi*4],edi
  40caaa:	jne    40ca80 <strcmp@plt+0x92e8>
  40caac:	mov    rax,QWORD PTR [rdx+0x20]
  40cab0:	mov    ecx,ebp
  40cab2:	mov    rdi,QWORD PTR [rax+rcx*8]
  40cab6:	mov    rsi,QWORD PTR [rsp+0x8]
  40cabb:	call   42baa0 <strcmp@plt+0x28308>
  40cac0:	mov    rax,QWORD PTR [rsp]
  40cac4:	mov    rax,QWORD PTR [rax+0x70]
  40cac8:	jmp    40ca80 <strcmp@plt+0x92e8>
  40caca:	mov    rdi,QWORD PTR [rcx+0x20]
  40cace:	mov    rbx,QWORD PTR [rsp+0x8]
  40cad3:	mov    rsi,rbx
  40cad6:	call   42baa0 <strcmp@plt+0x28308>
  40cadb:	mov    rax,QWORD PTR [rsp]
  40cadf:	mov    rax,QWORD PTR [rax+0x70]
  40cae3:	mov    rax,QWORD PTR [rax]
  40cae6:	mov    rdi,QWORD PTR [rax+0x20]
  40caea:	mov    rsi,rbx
  40caed:	call   42baa0 <strcmp@plt+0x28308>
  40caf2:	mov    rax,QWORD PTR [rbx+0x8]
  40caf6:	cmp    rax,rbx
  40caf9:	je     40cc93 <strcmp@plt+0x94fb>
  40caff:	lea    r12,[rip+0x38b2d]        # 445633 <strcmp@plt+0x41e9b>
  40cb06:	jmp    40cb24 <strcmp@plt+0x938c>
  40cb08:	nop    DWORD PTR [rax+rax*1+0x0]
  40cb10:	mov    rax,QWORD PTR [rsp+0x30]
  40cb15:	mov    rax,QWORD PTR [rax+0x8]
  40cb19:	cmp    rax,QWORD PTR [rsp+0x8]
  40cb1e:	je     40cc93 <strcmp@plt+0x94fb>
  40cb24:	mov    QWORD PTR [rsp+0x30],rax
  40cb29:	mov    rax,QWORD PTR [rax+0x10]
  40cb2d:	mov    r14,QWORD PTR [rax]
  40cb30:	test   r14,r14
  40cb33:	je     40cb10 <strcmp@plt+0x9378>
  40cb35:	xor    ebx,ebx
  40cb37:	cmp    QWORD PTR [r14+0x8],0x0
  40cb3c:	jne    40cb6f <strcmp@plt+0x93d7>
  40cb3e:	jmp    40cc50 <strcmp@plt+0x94b8>
  40cb43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cb4d:	nop    DWORD PTR [rax]
  40cb50:	test   rcx,rcx
  40cb53:	je     40cc7a <strcmp@plt+0x94e2>
  40cb59:	mov    rax,rcx
  40cb5c:	mov    r14,rax
  40cb5f:	test   rax,rax
  40cb62:	je     40cb10 <strcmp@plt+0x9378>
  40cb64:	cmp    QWORD PTR [r14+0x8],0x0
  40cb69:	je     40cc50 <strcmp@plt+0x94b8>
  40cb6f:	mov    rax,QWORD PTR [r14+0x28]
  40cb73:	mov    r15,QWORD PTR [rax]
  40cb76:	test   r15,r15
  40cb79:	je     40cc50 <strcmp@plt+0x94b8>
  40cb7f:	xor    r13d,r13d
  40cb82:	cmp    QWORD PTR [r15+0x8],0x0
  40cb87:	jne    40cbaf <strcmp@plt+0x9417>
  40cb89:	jmp    40cc0c <strcmp@plt+0x9474>
  40cb8e:	xchg   ax,ax
  40cb90:	test   rcx,rcx
  40cb93:	je     40cc36 <strcmp@plt+0x949e>
  40cb99:	mov    rax,rcx
  40cb9c:	mov    r15,rax
  40cb9f:	test   rax,rax
  40cba2:	je     40cc50 <strcmp@plt+0x94b8>
  40cba8:	cmp    QWORD PTR [r15+0x8],0x0
  40cbad:	je     40cc0c <strcmp@plt+0x9474>
  40cbaf:	mov    rbp,QWORD PTR [r15+0x28]
  40cbb3:	test   rbp,rbp
  40cbb6:	je     40cc0c <strcmp@plt+0x9474>
  40cbb8:	mov    rdi,rbp
  40cbbb:	call   4317d0 <strcmp@plt+0x2e038>
  40cbc0:	mov    rdi,QWORD PTR [rsp]
  40cbc4:	mov    rsi,rax
  40cbc7:	call   407760 <strcmp@plt+0x3fc8>
  40cbcc:	cmp    eax,0x1
  40cbcf:	je     40cbfa <strcmp@plt+0x9462>
  40cbd1:	mov    rdi,rbp
  40cbd4:	call   431840 <strcmp@plt+0x2e0a8>
  40cbd9:	mov    rdi,rax
  40cbdc:	call   422e20 <strcmp@plt+0x1f688>
  40cbe1:	mov    edi,0x2
  40cbe6:	mov    rsi,r12
  40cbe9:	mov    rdx,rax
  40cbec:	xor    eax,eax
  40cbee:	call   42e520 <strcmp@plt+0x2ad88>
  40cbf3:	xor    eax,eax
  40cbf5:	call   43aeb0 <strcmp@plt+0x37718>
  40cbfa:	mov    rcx,QWORD PTR [rsp]
  40cbfe:	mov    rax,QWORD PTR [rcx+0x38]
  40cc02:	mov    rdi,QWORD PTR [rcx+0x40]
  40cc06:	mov    rsi,rbp
  40cc09:	call   QWORD PTR [rax+0x30]
  40cc0c:	mov    rax,QWORD PTR [r15+0x10]
  40cc10:	mov    rcx,QWORD PTR [r15+0x18]
  40cc14:	test   rax,rax
  40cc17:	je     40cb90 <strcmp@plt+0x93f8>
  40cc1d:	test   rcx,rcx
  40cc20:	je     40cb9c <strcmp@plt+0x9404>
  40cc26:	mov    QWORD PTR [rsp+r13*8+0x80],rcx
  40cc2e:	inc    r13
  40cc31:	jmp    40cb9c <strcmp@plt+0x9404>
  40cc36:	test   r13,r13
  40cc39:	je     40cc50 <strcmp@plt+0x94b8>
  40cc3b:	mov    rax,QWORD PTR [rsp+r13*8+0x78]
  40cc40:	dec    r13
  40cc43:	jmp    40cb9c <strcmp@plt+0x9404>
  40cc48:	nop    DWORD PTR [rax+rax*1+0x0]
  40cc50:	mov    rax,QWORD PTR [r14+0x10]
  40cc54:	mov    rcx,QWORD PTR [r14+0x18]
  40cc58:	test   rax,rax
  40cc5b:	je     40cb50 <strcmp@plt+0x93b8>
  40cc61:	test   rcx,rcx
  40cc64:	je     40cb5c <strcmp@plt+0x93c4>
  40cc6a:	mov    QWORD PTR [rsp+rbx*8+0x490],rcx
  40cc72:	inc    rbx
  40cc75:	jmp    40cb5c <strcmp@plt+0x93c4>
  40cc7a:	test   rbx,rbx
  40cc7d:	je     40cb10 <strcmp@plt+0x9378>
  40cc83:	mov    rax,QWORD PTR [rsp+rbx*8+0x488]
  40cc8b:	dec    rbx
  40cc8e:	jmp    40cb5c <strcmp@plt+0x93c4>
  40cc93:	mov    rdi,QWORD PTR [rsp+0x8]
  40cc98:	call   42bff0 <strcmp@plt+0x28858>
  40cc9d:	mov    rbx,QWORD PTR [rsp]
  40cca1:	cmp    DWORD PTR [rbx+0x80],0x0
  40cca8:	je     40d0fb <strcmp@plt+0x9963>
  40ccae:	mov    rax,QWORD PTR [rbx+0x78]
  40ccb2:	cmp    DWORD PTR [rax+0x18],0x0
  40ccb6:	je     40d159 <strcmp@plt+0x99c1>
  40ccbc:	call   42b980 <strcmp@plt+0x281e8>
  40ccc1:	mov    rbp,rax
  40ccc4:	mov    rax,QWORD PTR [rbx+0x70]
  40ccc8:	mov    rax,QWORD PTR [rax]
  40cccb:	mov    rdi,QWORD PTR [rax]
  40ccce:	mov    rsi,rbp
  40ccd1:	call   42baa0 <strcmp@plt+0x28308>
  40ccd6:	mov    rax,QWORD PTR [rbx+0x70]
  40ccda:	mov    rax,QWORD PTR [rax]
  40ccdd:	mov    rdi,QWORD PTR [rax+0x8]
  40cce1:	mov    QWORD PTR [rsp+0x18],rbp
  40cce6:	mov    rsi,rbp
  40cce9:	call   42baa0 <strcmp@plt+0x28308>
  40ccee:	mov    rax,QWORD PTR [rbx+0x70]
  40ccf2:	mov    rcx,QWORD PTR [rax]
  40ccf5:	mov    rdx,QWORD PTR [rcx+0x10]
  40ccf9:	mov    rdx,QWORD PTR [rdx]
  40ccfc:	cmp    DWORD PTR [rdx],0x0
  40ccff:	je     40cd5a <strcmp@plt+0x95c2>
  40cd01:	xor    ebx,ebx
  40cd03:	mov    r14d,0x3
  40cd09:	xor    ebp,ebp
  40cd0b:	jmp    40cd23 <strcmp@plt+0x958b>
  40cd0d:	nop    DWORD PTR [rax]
  40cd10:	inc    ebp
  40cd12:	mov    rcx,QWORD PTR [rax]
  40cd15:	mov    rdx,QWORD PTR [rcx+0x10]
  40cd19:	mov    rdx,QWORD PTR [rdx]
  40cd1c:	add    ebx,0x2
  40cd1f:	cmp    ebp,DWORD PTR [rdx]
  40cd21:	je     40cd5a <strcmp@plt+0x95c2>
  40cd23:	mov    rcx,QWORD PTR [rdx+0x10]
  40cd27:	mov    esi,ebp
  40cd29:	shr    esi,0x4
  40cd2c:	mov    edi,ebx
  40cd2e:	and    dil,0x1e
  40cd32:	shlx   edi,r14d,edi
  40cd37:	test   DWORD PTR [rcx+rsi*4],edi
  40cd3a:	jne    40cd10 <strcmp@plt+0x9578>
  40cd3c:	mov    rax,QWORD PTR [rdx+0x20]
  40cd40:	mov    ecx,ebp
  40cd42:	mov    rdi,QWORD PTR [rax+rcx*8]
  40cd46:	mov    rsi,QWORD PTR [rsp+0x18]
  40cd4b:	call   42baa0 <strcmp@plt+0x28308>
  40cd50:	mov    rax,QWORD PTR [rsp]
  40cd54:	mov    rax,QWORD PTR [rax+0x70]
  40cd58:	jmp    40cd10 <strcmp@plt+0x9578>
  40cd5a:	mov    rdx,QWORD PTR [rcx+0x18]
  40cd5e:	mov    rdx,QWORD PTR [rdx]
  40cd61:	cmp    DWORD PTR [rdx],0x0
  40cd64:	je     40cdca <strcmp@plt+0x9632>
  40cd66:	xor    ebx,ebx
  40cd68:	mov    r14d,0x3
  40cd6e:	xor    ebp,ebp
  40cd70:	jmp    40cd93 <strcmp@plt+0x95fb>
  40cd72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd7c:	nop    DWORD PTR [rax+0x0]
  40cd80:	inc    ebp
  40cd82:	mov    rcx,QWORD PTR [rax]
  40cd85:	mov    rdx,QWORD PTR [rcx+0x18]
  40cd89:	mov    rdx,QWORD PTR [rdx]
  40cd8c:	add    ebx,0x2
  40cd8f:	cmp    ebp,DWORD PTR [rdx]
  40cd91:	je     40cdca <strcmp@plt+0x9632>
  40cd93:	mov    rcx,QWORD PTR [rdx+0x10]
  40cd97:	mov    esi,ebp
  40cd99:	shr    esi,0x4
  40cd9c:	mov    edi,ebx
  40cd9e:	and    dil,0x1e
  40cda2:	shlx   edi,r14d,edi
  40cda7:	test   DWORD PTR [rcx+rsi*4],edi
  40cdaa:	jne    40cd80 <strcmp@plt+0x95e8>
  40cdac:	mov    rax,QWORD PTR [rdx+0x20]
  40cdb0:	mov    ecx,ebp
  40cdb2:	mov    rdi,QWORD PTR [rax+rcx*8]
  40cdb6:	mov    rsi,QWORD PTR [rsp+0x18]
  40cdbb:	call   42baa0 <strcmp@plt+0x28308>
  40cdc0:	mov    rax,QWORD PTR [rsp]
  40cdc4:	mov    rax,QWORD PTR [rax+0x70]
  40cdc8:	jmp    40cd80 <strcmp@plt+0x95e8>
  40cdca:	mov    rdi,QWORD PTR [rcx+0x20]
  40cdce:	mov    rbx,QWORD PTR [rsp+0x18]
  40cdd3:	mov    rsi,rbx
  40cdd6:	call   42baa0 <strcmp@plt+0x28308>
  40cddb:	mov    rax,QWORD PTR [rsp]
  40cddf:	mov    rax,QWORD PTR [rax+0x70]
  40cde3:	mov    rax,QWORD PTR [rax]
  40cde6:	mov    rdi,QWORD PTR [rax+0x20]
  40cdea:	mov    rsi,rbx
  40cded:	call   42baa0 <strcmp@plt+0x28308>
  40cdf2:	mov    rax,QWORD PTR [rbx+0x8]
  40cdf6:	cmp    rax,rbx
  40cdf9:	je     40d0ef <strcmp@plt+0x9957>
  40cdff:	lea    r14,[rip+0x637aa]        # 4705b0 <strcmp@plt+0x6ce18>
  40ce06:	jmp    40ce24 <strcmp@plt+0x968c>
  40ce08:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce10:	mov    rax,QWORD PTR [rsp+0x68]
  40ce15:	mov    rax,QWORD PTR [rax+0x8]
  40ce19:	cmp    rax,QWORD PTR [rsp+0x18]
  40ce1e:	je     40d0ef <strcmp@plt+0x9957>
  40ce24:	mov    QWORD PTR [rsp+0x68],rax
  40ce29:	mov    rax,QWORD PTR [rax+0x10]
  40ce2d:	mov    rcx,QWORD PTR [rax]
  40ce30:	test   rcx,rcx
  40ce33:	je     40ce10 <strcmp@plt+0x9678>
  40ce35:	xor    eax,eax
  40ce37:	mov    QWORD PTR [rsp+0x20],rax
  40ce3c:	cmp    QWORD PTR [rcx+0x8],0x0
  40ce41:	jne    40ce6f <strcmp@plt+0x96d7>
  40ce43:	jmp    40d095 <strcmp@plt+0x98fd>
  40ce48:	nop    DWORD PTR [rax+rax*1+0x0]
  40ce50:	test   rcx,rcx
  40ce53:	je     40d0c9 <strcmp@plt+0x9931>
  40ce59:	mov    rax,rcx
  40ce5c:	mov    rcx,rax
  40ce5f:	test   rax,rax
  40ce62:	je     40ce10 <strcmp@plt+0x9678>
  40ce64:	cmp    QWORD PTR [rcx+0x8],0x0
  40ce69:	je     40d095 <strcmp@plt+0x98fd>
  40ce6f:	mov    QWORD PTR [rsp+0x70],rcx
  40ce74:	mov    rax,QWORD PTR [rcx+0x28]
  40ce78:	mov    rbx,QWORD PTR [rax]
  40ce7b:	test   rbx,rbx
  40ce7e:	je     40d090 <strcmp@plt+0x98f8>
  40ce84:	xor    eax,eax
  40ce86:	mov    QWORD PTR [rsp+0x28],rax
  40ce8b:	cmp    QWORD PTR [rbx+0x8],0x0
  40ce90:	jne    40cec3 <strcmp@plt+0x972b>
  40ce92:	jmp    40d030 <strcmp@plt+0x9898>
  40ce97:	nop    WORD PTR [rax+rax*1+0x0]
  40cea0:	test   rcx,rcx
  40cea3:	je     40d064 <strcmp@plt+0x98cc>
  40cea9:	mov    rax,rcx
  40ceac:	mov    rbx,rax
  40ceaf:	test   rax,rax
  40ceb2:	je     40d090 <strcmp@plt+0x98f8>
  40ceb8:	cmp    QWORD PTR [rbx+0x8],0x0
  40cebd:	je     40d030 <strcmp@plt+0x9898>
  40cec3:	mov    r13,QWORD PTR [rbx+0x28]
  40cec7:	test   r13,r13
  40ceca:	je     40d030 <strcmp@plt+0x9898>
  40ced0:	mov    rdi,r13
  40ced3:	call   4317d0 <strcmp@plt+0x2e038>
  40ced8:	mov    r15,rax
  40cedb:	mov    rdx,QWORD PTR [r14]
  40cede:	lea    rax,[rip+0x636d3]        # 4705b8 <strcmp@plt+0x6ce20>
  40cee5:	mov    rcx,QWORD PTR [rax]
  40cee8:	mov    rdi,r13
  40ceeb:	mov    esi,0x8
  40cef0:	call   437310 <strcmp@plt+0x33b78>
  40cef5:	mov    QWORD PTR [rsp+0x10],r15
  40cefa:	mov    rax,QWORD PTR [r15+0x28]
  40cefe:	mov    rdx,QWORD PTR [rax+0x8]
  40cf02:	cmp    rdx,rax
  40cf05:	je     40d030 <strcmp@plt+0x9898>
  40cf0b:	mov    QWORD PTR [rsp+0x78],rbx
  40cf10:	mov    QWORD PTR [rsp+0x8],r13
  40cf15:	jmp    40cf40 <strcmp@plt+0x97a8>
  40cf17:	nop    WORD PTR [rax+rax*1+0x0]
  40cf20:	mov    rax,QWORD PTR [rsp+0x10]
  40cf25:	mov    rax,QWORD PTR [rax+0x28]
  40cf29:	mov    rbx,QWORD PTR [rsp+0x78]
  40cf2e:	mov    rdx,QWORD PTR [rsp+0x40]
  40cf33:	mov    rdx,QWORD PTR [rdx+0x8]
  40cf37:	cmp    rdx,rax
  40cf3a:	je     40d030 <strcmp@plt+0x9898>
  40cf40:	mov    rsi,QWORD PTR [rdx+0x10]
  40cf44:	cmp    DWORD PTR [rsi+0x18],0x0
  40cf48:	je     40cf33 <strcmp@plt+0x979b>
  40cf4a:	mov    rdi,QWORD PTR [rsi+0x8]
  40cf4e:	mov    rbp,QWORD PTR [rdi+0x10]
  40cf52:	mov    rcx,QWORD PTR [rbp+0x0]
  40cf56:	cmp    DWORD PTR [rcx+0x18],0x0
  40cf5a:	je     40cf33 <strcmp@plt+0x979b>
  40cf5c:	cmp    rdi,rsi
  40cf5f:	je     40cf33 <strcmp@plt+0x979b>
  40cf61:	mov    QWORD PTR [rsp+0x38],rdi
  40cf66:	mov    QWORD PTR [rsp+0x48],rsi
  40cf6b:	mov    QWORD PTR [rsp+0x40],rdx
  40cf70:	mov    QWORD PTR [rsp+0x30],rbp
  40cf75:	cmp    BYTE PTR [rbp+0x9],0x0
  40cf79:	mov    r15,QWORD PTR [rsp]
  40cf7d:	je     40d006 <strcmp@plt+0x986e>
  40cf83:	mov    rax,QWORD PTR [r15+0x78]
  40cf87:	mov    r13,QWORD PTR [rax+0x8]
  40cf8b:	cmp    r13,rax
  40cf8e:	je     40d006 <strcmp@plt+0x986e>
  40cf90:	mov    rbx,QWORD PTR [r13+0x10]
  40cf94:	mov    edi,0x18
  40cf99:	call   431d90 <strcmp@plt+0x2e5f8>
  40cf9e:	mov    r12,rax
  40cfa1:	mov    rbp,QWORD PTR [rsp+0x8]
  40cfa6:	mov    QWORD PTR [rax],rbp
  40cfa9:	mov    rax,QWORD PTR [rsp+0x30]
  40cfae:	mov    QWORD PTR [r12+0x8],rax
  40cfb3:	mov    QWORD PTR [r12+0x10],rbx
  40cfb8:	mov    rdi,rbp
  40cfbb:	mov    esi,0x4
  40cfc0:	call   431a20 <strcmp@plt+0x2e288>
  40cfc5:	mov    edi,0x8
  40cfca:	mov    rsi,r15
  40cfcd:	lea    rdx,[rip+0x2e0c]        # 40fde0 <strcmp@plt+0xc648>
  40cfd4:	mov    rcx,r12
  40cfd7:	lea    r8,[rip+0x3162]        # 410140 <strcmp@plt+0xc9a8>
  40cfde:	call   437190 <strcmp@plt+0x339f8>
  40cfe3:	mov    rbx,rax
  40cfe6:	mov    rdi,QWORD PTR [r14]
  40cfe9:	mov    rsi,rbp
  40cfec:	mov    rdx,rax
  40cfef:	call   437490 <strcmp@plt+0x33cf8>
  40cff4:	mov    rdi,rbx
  40cff7:	call   40fde0 <strcmp@plt+0xc648>
  40cffc:	mov    r13,QWORD PTR [r13+0x8]
  40d000:	cmp    r13,QWORD PTR [r15+0x78]
  40d004:	jne    40cf90 <strcmp@plt+0x97f8>
  40d006:	mov    rax,QWORD PTR [rsp+0x38]
  40d00b:	mov    rax,QWORD PTR [rax+0x8]
  40d00f:	cmp    rax,QWORD PTR [rsp+0x48]
  40d014:	je     40cf20 <strcmp@plt+0x9788>
  40d01a:	mov    QWORD PTR [rsp+0x38],rax
  40d01f:	mov    rbp,QWORD PTR [rax+0x10]
  40d023:	jmp    40cf70 <strcmp@plt+0x97d8>
  40d028:	nop    DWORD PTR [rax+rax*1+0x0]
  40d030:	mov    rax,QWORD PTR [rbx+0x10]
  40d034:	mov    rcx,QWORD PTR [rbx+0x18]
  40d038:	test   rax,rax
  40d03b:	je     40cea0 <strcmp@plt+0x9708>
  40d041:	test   rcx,rcx
  40d044:	je     40ceac <strcmp@plt+0x9714>
  40d04a:	mov    rdx,QWORD PTR [rsp+0x28]
  40d04f:	mov    QWORD PTR [rsp+rdx*8+0x80],rcx
  40d057:	inc    rdx
  40d05a:	mov    QWORD PTR [rsp+0x28],rdx
  40d05f:	jmp    40ceac <strcmp@plt+0x9714>
  40d064:	cmp    QWORD PTR [rsp+0x28],0x0
  40d06a:	je     40d090 <strcmp@plt+0x98f8>
  40d06c:	mov    rcx,QWORD PTR [rsp+0x28]
  40d071:	mov    rax,QWORD PTR [rsp+rcx*8+0x78]
  40d076:	dec    rcx
  40d079:	mov    QWORD PTR [rsp+0x28],rcx
  40d07e:	jmp    40ceac <strcmp@plt+0x9714>
  40d083:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d08d:	nop    DWORD PTR [rax]
  40d090:	mov    rcx,QWORD PTR [rsp+0x70]
  40d095:	mov    rax,QWORD PTR [rcx+0x10]
  40d099:	mov    rcx,QWORD PTR [rcx+0x18]
  40d09d:	test   rax,rax
  40d0a0:	je     40ce50 <strcmp@plt+0x96b8>
  40d0a6:	test   rcx,rcx
  40d0a9:	je     40ce5c <strcmp@plt+0x96c4>
  40d0af:	mov    rdx,QWORD PTR [rsp+0x20]
  40d0b4:	mov    QWORD PTR [rsp+rdx*8+0x490],rcx
  40d0bc:	inc    rdx
  40d0bf:	mov    QWORD PTR [rsp+0x20],rdx
  40d0c4:	jmp    40ce5c <strcmp@plt+0x96c4>
  40d0c9:	cmp    QWORD PTR [rsp+0x20],0x0
  40d0cf:	je     40ce10 <strcmp@plt+0x9678>
  40d0d5:	mov    rcx,QWORD PTR [rsp+0x20]
  40d0da:	mov    rax,QWORD PTR [rsp+rcx*8+0x488]
  40d0e2:	dec    rcx
  40d0e5:	mov    QWORD PTR [rsp+0x20],rcx
  40d0ea:	jmp    40ce5c <strcmp@plt+0x96c4>
  40d0ef:	mov    rdi,QWORD PTR [rsp+0x18]
  40d0f4:	call   42bff0 <strcmp@plt+0x28858>
  40d0f9:	jmp    40d159 <strcmp@plt+0x99c1>
  40d0fb:	lea    rax,[rip+0x57cbe]        # 464dc0 <strcmp@plt+0x61628>
  40d102:	cmp    DWORD PTR [rax],0x0
  40d105:	jle    40d11f <strcmp@plt+0x9987>
  40d107:	lea    rsi,[rip+0x38643]        # 445751 <strcmp@plt+0x41fb9>
  40d10e:	mov    edi,0x5
  40d113:	mov    edx,0x1
  40d118:	xor    eax,eax
  40d11a:	call   42e520 <strcmp@plt+0x2ad88>
  40d11f:	mov    rdi,QWORD PTR [rbx+0xa0]
  40d126:	test   rdi,rdi
  40d129:	jne    40d14f <strcmp@plt+0x99b7>
  40d12b:	lea    rdx,[rip+0x301e]        # 410150 <strcmp@plt+0xc9b8>
  40d132:	mov    edi,0x6
  40d137:	mov    rsi,rbx
  40d13a:	mov    rcx,rbx
  40d13d:	xor    r8d,r8d
  40d140:	call   437140 <strcmp@plt+0x339a8>
  40d145:	mov    rdi,rax
  40d148:	mov    QWORD PTR [rbx+0xa0],rax
  40d14f:	mov    esi,0x1
  40d154:	call   437020 <strcmp@plt+0x33888>
  40d159:	mov    rbx,QWORD PTR [rsp+0x60]
  40d15e:	mov    rdi,rbx
  40d161:	mov    rsi,QWORD PTR [rsp+0x58]
  40d166:	call   40b690 <strcmp@plt+0x7ef8>
  40d16b:	mov    rdi,rbx
  40d16e:	mov    rsi,QWORD PTR [rsp+0x50]
  40d173:	add    rsp,0x898
  40d17a:	pop    rbx
  40d17b:	pop    r12
  40d17d:	pop    r13
  40d17f:	pop    r14
  40d181:	pop    r15
  40d183:	pop    rbp
  40d184:	jmp    40b690 <strcmp@plt+0x7ef8>
  40d189:	lea    rsi,[rip+0x381cf]        # 44535f <strcmp@plt+0x41bc7>
  40d190:	mov    edi,0x3
  40d195:	xor    eax,eax
  40d197:	call   42e520 <strcmp@plt+0x2ad88>
  40d19c:	mov    edi,0x2
  40d1a1:	call   4370a0 <strcmp@plt+0x33908>
  40d1a6:	jmp    40c3a3 <strcmp@plt+0x8c0b>
  40d1ab:	lea    rdi,[rip+0x37d83]        # 444f35 <strcmp@plt+0x4179d>
  40d1b2:	lea    rsi,[rip+0x37d93]        # 444f4c <strcmp@plt+0x417b4>
  40d1b9:	lea    rdx,[rip+0x37d9a]        # 444f5a <strcmp@plt+0x417c2>
  40d1c0:	call   431eb0 <strcmp@plt+0x2e718>
  40d1c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d1cf:	nop
  40d1d0:	push   rbp
  40d1d1:	push   r15
  40d1d3:	push   r14
  40d1d5:	push   r13
  40d1d7:	push   r12
  40d1d9:	push   rbx
  40d1da:	sub    rsp,0x138
  40d1e1:	mov    rax,QWORD PTR [rdi+0x8]
  40d1e5:	cmp    rax,QWORD PTR [rip+0x56de4]        # 463fd0 <strcmp@plt+0x60838>
  40d1ec:	jne    40e012 <strcmp@plt+0xa87a>
  40d1f2:	mov    r13,rdx
  40d1f5:	mov    rbp,rsi
  40d1f8:	mov    r14,rdi
  40d1fb:	mov    rdi,rsi
  40d1fe:	call   420ac0 <strcmp@plt+0x1d328>
  40d203:	cmp    eax,0x8
  40d206:	jne    40d29c <strcmp@plt+0x9b04>
  40d20c:	mov    rdi,rbp
  40d20f:	call   420ae0 <strcmp@plt+0x1d348>
  40d214:	test   BYTE PTR [rax],0x8
  40d217:	jne    40d362 <strcmp@plt+0x9bca>
  40d21d:	mov    rdi,rbp
  40d220:	call   420b10 <strcmp@plt+0x1d378>
  40d225:	cmp    eax,0x1
  40d228:	jne    40d3fa <strcmp@plt+0x9c62>
  40d22e:	lea    rbx,[rsp+0x40]
  40d233:	mov    rdi,rbp
  40d236:	mov    rsi,rbx
  40d239:	call   433160 <strcmp@plt+0x2f9c8>
  40d23e:	movzx  esi,WORD PTR [rsp+0x82]
  40d246:	movzx  edx,WORD PTR [rsp+0x80]
  40d24e:	lea    rcx,[rsp+0x60]
  40d253:	lea    r15,[rsp+0xf0]
  40d25b:	mov    rdi,r15
  40d25e:	mov    r8,rbx
  40d261:	call   435260 <strcmp@plt+0x31ac8>
  40d266:	mov    rdi,rbp
  40d269:	call   420ac0 <strcmp@plt+0x1d328>
  40d26e:	mov    ebx,eax
  40d270:	lea    rax,[rip+0x57b49]        # 464dc0 <strcmp@plt+0x61628>
  40d277:	cmp    DWORD PTR [rax],0x0
  40d27a:	jle    40d2a4 <strcmp@plt+0x9b0c>
  40d27c:	mov    rdi,rbp
  40d27f:	call   422570 <strcmp@plt+0x1edd8>
  40d284:	lea    rsi,[rip+0x38552]        # 4457dd <strcmp@plt+0x42045>
  40d28b:	mov    edi,0x5
  40d290:	mov    rdx,rax
  40d293:	xor    eax,eax
  40d295:	call   42e520 <strcmp@plt+0x2ad88>
  40d29a:	jmp    40d2a4 <strcmp@plt+0x9b0c>
  40d29c:	mov    ebx,eax
  40d29e:	mov    r15,r13
  40d2a1:	xor    r13d,r13d
  40d2a4:	lea    eax,[rbx-0x1]
  40d2a7:	cmp    eax,0x6
  40d2aa:	ja     40d399 <strcmp@plt+0x9c01>
  40d2b0:	lea    rcx,[rip+0x37b81]        # 444e38 <strcmp@plt+0x416a0>
  40d2b7:	movsxd rax,DWORD PTR [rcx+rax*4]
  40d2bb:	add    rax,rcx
  40d2be:	jmp    rax
  40d2c0:	mov    QWORD PTR [rsp+0x10],r14
  40d2c5:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  40d2ca:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  40d2cf:	vmovups YMMWORD PTR [rsp+0xb0],ymm0
  40d2d8:	vmovups YMMWORD PTR [rsp+0xd0],ymm1
  40d2e1:	xor    eax,eax
  40d2e3:	vzeroupper 
  40d2e6:	call   422c80 <strcmp@plt+0x1f4e8>
  40d2eb:	mov    r12,rax
  40d2ee:	xor    eax,eax
  40d2f0:	call   422c80 <strcmp@plt+0x1f4e8>
  40d2f5:	mov    QWORD PTR [rsp],rax
  40d2f9:	lea    rbx,[rsp+0xb0]
  40d301:	mov    rdi,rbx
  40d304:	call   4213d0 <strcmp@plt+0x1dc38>
  40d309:	mov    r14,rax
  40d30c:	mov    rdi,rbx
  40d30f:	mov    QWORD PTR [rsp+0x18],r12
  40d314:	mov    rsi,r12
  40d317:	call   420c80 <strcmp@plt+0x1d4e8>
  40d31c:	cmp    eax,0x1
  40d31f:	jne    40d546 <strcmp@plt+0x9dae>
  40d325:	movzx  ecx,WORD PTR [r14]
  40d329:	movzx  eax,BYTE PTR [r14+0x2]
  40d32e:	shl    eax,0x10
  40d331:	or     eax,ecx
  40d333:	test   al,0x2
  40d335:	je     40d514 <strcmp@plt+0x9d7c>
  40d33b:	cmp    BYTE PTR [r14+0x3],0x2
  40d340:	jb     40d514 <strcmp@plt+0x9d7c>
  40d346:	lea    rax,[rip+0x57a73]        # 464dc0 <strcmp@plt+0x61628>
  40d34d:	cmp    DWORD PTR [rax],0x0
  40d350:	jle    40d546 <strcmp@plt+0x9dae>
  40d356:	lea    rsi,[rip+0x36d56]        # 4440b3 <strcmp@plt+0x4091b>
  40d35d:	jmp    40d53a <strcmp@plt+0x9da2>
  40d362:	mov    rdi,rbp
  40d365:	call   422600 <strcmp@plt+0x1ee68>
  40d36a:	lea    rax,[rip+0x57a4f]        # 464dc0 <strcmp@plt+0x61628>
  40d371:	cmp    DWORD PTR [rax],0x2
  40d374:	jl     40d3fa <strcmp@plt+0x9c62>
  40d37a:	mov    rdi,rbp
  40d37d:	call   422600 <strcmp@plt+0x1ee68>
  40d382:	lea    rsi,[rip+0x38505]        # 44588e <strcmp@plt+0x420f6>
  40d389:	mov    edi,0x6
  40d38e:	mov    edx,eax
  40d390:	xor    eax,eax
  40d392:	call   42e520 <strcmp@plt+0x2ad88>
  40d397:	jmp    40d3fa <strcmp@plt+0x9c62>
  40d399:	lea    rax,[rip+0x57a20]        # 464dc0 <strcmp@plt+0x61628>
  40d3a0:	cmp    DWORD PTR [rax],0x0
  40d3a3:	jle    40d3fa <strcmp@plt+0x9c62>
  40d3a5:	lea    rsi,[rip+0x3844f]        # 4457fb <strcmp@plt+0x42063>
  40d3ac:	mov    edi,0x5
  40d3b1:	mov    edx,ebx
  40d3b3:	xor    eax,eax
  40d3b5:	call   42e520 <strcmp@plt+0x2ad88>
  40d3ba:	jmp    40d3db <strcmp@plt+0x9c43>
  40d3bc:	add    r14,0x18
  40d3c0:	mov    rdi,r14
  40d3c3:	mov    rsi,rbp
  40d3c6:	mov    rdx,r15
  40d3c9:	call   40a4d0 <strcmp@plt+0x6d38>
  40d3ce:	mov    r12d,eax
  40d3d1:	cmp    r12d,0x1
  40d3d5:	je     40dc04 <strcmp@plt+0xa46c>
  40d3db:	lea    rax,[rip+0x579de]        # 464dc0 <strcmp@plt+0x61628>
  40d3e2:	cmp    DWORD PTR [rax],0x0
  40d3e5:	jle    40d3fa <strcmp@plt+0x9c62>
  40d3e7:	lea    rsi,[rip+0x38442]        # 445830 <strcmp@plt+0x42098>
  40d3ee:	xor    ebx,ebx
  40d3f0:	mov    edi,0x5
  40d3f5:	jmp    40dc21 <strcmp@plt+0xa489>
  40d3fa:	xor    ebx,ebx
  40d3fc:	jmp    40dc28 <strcmp@plt+0xa490>
  40d401:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  40d406:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  40d40b:	vmovups YMMWORD PTR [rsp+0x60],ymm1
  40d411:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  40d417:	lea    rdi,[rsp+0x40]
  40d41c:	vzeroupper 
  40d41f:	call   4213d0 <strcmp@plt+0x1dc38>
  40d424:	mov    rbx,rax
  40d427:	lea    rax,[rip+0x6318a]        # 4705b8 <strcmp@plt+0x6ce20>
  40d42e:	mov    rdi,QWORD PTR [rax]
  40d431:	mov    rsi,QWORD PTR [rbx+0x4]
  40d435:	call   432300 <strcmp@plt+0x2eb68>
  40d43a:	test   rax,rax
  40d43d:	je     40d559 <strcmp@plt+0x9dc1>
  40d443:	mov    r15,rax
  40d446:	mov    rdi,rax
  40d449:	call   4325a0 <strcmp@plt+0x2ee08>
  40d44e:	mov    r13,rax
  40d451:	test   BYTE PTR [rbx],0x8
  40d454:	jne    40d586 <strcmp@plt+0x9dee>
  40d45a:	mov    rdi,r13
  40d45d:	call   436ff0 <strcmp@plt+0x33858>
  40d462:	mov    r12,QWORD PTR [rax+0x8]
  40d466:	jmp    40d5ba <strcmp@plt+0x9e22>
  40d46b:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  40d470:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  40d475:	vmovups YMMWORD PTR [rsp+0x60],ymm1
  40d47b:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  40d481:	lea    rdi,[rsp+0x40]
  40d486:	vzeroupper 
  40d489:	call   4213d0 <strcmp@plt+0x1dc38>
  40d48e:	test   BYTE PTR [rax],0x8
  40d491:	jne    40d4af <strcmp@plt+0x9d17>
  40d493:	lea    rax,[rip+0x57926]        # 464dc0 <strcmp@plt+0x61628>
  40d49a:	cmp    DWORD PTR [rax],0x0
  40d49d:	jle    40da6b <strcmp@plt+0xa2d3>
  40d4a3:	lea    rsi,[rip+0x38544]        # 4459ee <strcmp@plt+0x42256>
  40d4aa:	jmp    40d70b <strcmp@plt+0x9f73>
  40d4af:	mov    rbx,rax
  40d4b2:	lea    rax,[rip+0x630ff]        # 4705b8 <strcmp@plt+0x6ce20>
  40d4b9:	mov    rdi,QWORD PTR [rax]
  40d4bc:	mov    rsi,QWORD PTR [rbx+0x4]
  40d4c0:	call   432300 <strcmp@plt+0x2eb68>
  40d4c5:	test   rax,rax
  40d4c8:	je     40d893 <strcmp@plt+0xa0fb>
  40d4ce:	mov    QWORD PTR [rsp+0xa8],rax
  40d4d6:	mov    rdi,rax
  40d4d9:	call   4325a0 <strcmp@plt+0x2ee08>
  40d4de:	mov    rdi,rax
  40d4e1:	call   436ff0 <strcmp@plt+0x33858>
  40d4e6:	mov    r13,rax
  40d4e9:	mov    rbx,QWORD PTR [rax]
  40d4ec:	lea    rdi,[rsp+0x40]
  40d4f1:	call   422950 <strcmp@plt+0x1f1b8>
  40d4f6:	mov    QWORD PTR [rsp+0x18],rax
  40d4fb:	mov    eax,DWORD PTR [rsp+0x54]
  40d4ff:	cmp    eax,0x6
  40d502:	jae    40d8d7 <strcmp@plt+0xa13f>
  40d508:	xor    eax,eax
  40d50a:	mov    QWORD PTR [rsp+0x8],rax
  40d50f:	jmp    40d8f4 <strcmp@plt+0xa15c>
  40d514:	test   al,0x1
  40d516:	je     40d729 <strcmp@plt+0x9f91>
  40d51c:	cmp    BYTE PTR [r14+0x3],0x2
  40d521:	jb     40d729 <strcmp@plt+0x9f91>
  40d527:	lea    rax,[rip+0x57892]        # 464dc0 <strcmp@plt+0x61628>
  40d52e:	cmp    DWORD PTR [rax],0x0
  40d531:	jle    40d546 <strcmp@plt+0x9dae>
  40d533:	lea    rsi,[rip+0x36bad]        # 4440e7 <strcmp@plt+0x4094f>
  40d53a:	mov    edi,0x5
  40d53f:	xor    eax,eax
  40d541:	call   42e520 <strcmp@plt+0x2ad88>
  40d546:	xor    edi,edi
  40d548:	call   42bff0 <strcmp@plt+0x28858>
  40d54d:	xor    r12d,r12d
  40d550:	mov    rbx,QWORD PTR [rsp]
  40d554:	jmp    40dbe8 <strcmp@plt+0xa450>
  40d559:	lea    rax,[rip+0x57860]        # 464dc0 <strcmp@plt+0x61628>
  40d560:	cmp    DWORD PTR [rax],0x0
  40d563:	jle    40da6b <strcmp@plt+0xa2d3>
  40d569:	mov    rdi,QWORD PTR [rbx+0x4]
  40d56d:	call   431f10 <strcmp@plt+0x2e778>
  40d572:	lea    rsi,[rip+0x38383]        # 4458fc <strcmp@plt+0x42164>
  40d579:	xor    r12d,r12d
  40d57c:	mov    edi,0x5
  40d581:	jmp    40d8be <strcmp@plt+0xa126>
  40d586:	lea    rax,[rip+0x57833]        # 464dc0 <strcmp@plt+0x61628>
  40d58d:	cmp    DWORD PTR [rax],0x0
  40d590:	jle    40d5a5 <strcmp@plt+0x9e0d>
  40d592:	lea    rsi,[rip+0x3839c]        # 445935 <strcmp@plt+0x4219d>
  40d599:	mov    edi,0x5
  40d59e:	xor    eax,eax
  40d5a0:	call   42e520 <strcmp@plt+0x2ad88>
  40d5a5:	mov    rdi,r13
  40d5a8:	call   436ff0 <strcmp@plt+0x33858>
  40d5ad:	mov    r12,QWORD PTR [rax+0x8]
  40d5b1:	test   BYTE PTR [rbx],0x4
  40d5b4:	je     40d5ba <strcmp@plt+0x9e22>
  40d5b6:	add    DWORD PTR [rbp+0x14],0xfffffffc
  40d5ba:	lea    rdi,[rsp+0x40]
  40d5bf:	call   422950 <strcmp@plt+0x1f1b8>
  40d5c4:	mov    rdx,QWORD PTR [r12+0x10]
  40d5c9:	mov    rdi,rbp
  40d5cc:	mov    rsi,rax
  40d5cf:	call   422780 <strcmp@plt+0x1efe8>
  40d5d4:	cmp    eax,0x1
  40d5d7:	jne    40d6f4 <strcmp@plt+0x9f5c>
  40d5dd:	mov    r12d,0x1
  40d5e3:	cmp    BYTE PTR [rbx+0x3],0x0
  40d5e7:	je     40dbfa <strcmp@plt+0xa462>
  40d5ed:	mov    QWORD PTR [rsp],r13
  40d5f1:	xor    r13d,r13d
  40d5f4:	jmp    40d638 <strcmp@plt+0x9ea0>
  40d5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d600:	mov    rdi,rbp
  40d603:	call   428bd0 <strcmp@plt+0x25438>
  40d608:	lea    rax,[rip+0x62fa9]        # 4705b8 <strcmp@plt+0x6ce20>
  40d60f:	mov    rdi,QWORD PTR [rax]
  40d612:	mov    rsi,r15
  40d615:	call   4323d0 <strcmp@plt+0x2ec38>
  40d61a:	mov    rdi,QWORD PTR [rsp]
  40d61e:	mov    esi,0x3c
  40d623:	call   437020 <strcmp@plt+0x33888>
  40d628:	inc    r13d
  40d62b:	movzx  eax,BYTE PTR [rbx+0x3]
  40d62f:	cmp    r13d,eax
  40d632:	jae    40dbfa <strcmp@plt+0xa462>
  40d638:	xor    eax,eax
  40d63a:	call   428ae0 <strcmp@plt+0x25348>
  40d63f:	mov    rbp,rax
  40d642:	lea    rdi,[rsp+0x40]
  40d647:	mov    rsi,rax
  40d64a:	lea    rdx,[rsp+0xb0]
  40d652:	call   421030 <strcmp@plt+0x1d898>
  40d657:	cmp    eax,0x1
  40d65a:	jne    40da63 <strcmp@plt+0xa2cb>
  40d660:	mov    rdi,QWORD PTR [r14+0x70]
  40d664:	mov    rsi,rbp
  40d667:	call   407d80 <strcmp@plt+0x45e8>
  40d66c:	lea    rcx,[rip+0x5774d]        # 464dc0 <strcmp@plt+0x61628>
  40d673:	mov    ecx,DWORD PTR [rcx]
  40d675:	test   rax,rax
  40d678:	je     40d6c9 <strcmp@plt+0x9f31>
  40d67a:	test   ecx,ecx
  40d67c:	jle    40d600 <strcmp@plt+0x9e68>
  40d67e:	mov    rdi,rbp
  40d681:	call   422e20 <strcmp@plt+0x1f688>
  40d686:	mov    edi,0x5
  40d68b:	lea    rsi,[rip+0x382fa]        # 44598c <strcmp@plt+0x421f4>
  40d692:	mov    rdx,rax
  40d695:	xor    eax,eax
  40d697:	call   42e520 <strcmp@plt+0x2ad88>
  40d69c:	lea    rax,[rip+0x5771d]        # 464dc0 <strcmp@plt+0x61628>
  40d6a3:	cmp    DWORD PTR [rax],0x0
  40d6a6:	jle    40d600 <strcmp@plt+0x9e68>
  40d6ac:	mov    edi,0x5
  40d6b1:	lea    rsi,[rip+0x3830b]        # 4459c3 <strcmp@plt+0x4222b>
  40d6b8:	mov    edx,0x3c
  40d6bd:	xor    eax,eax
  40d6bf:	call   42e520 <strcmp@plt+0x2ad88>
  40d6c4:	jmp    40d600 <strcmp@plt+0x9e68>
  40d6c9:	test   ecx,ecx
  40d6cb:	jle    40d628 <strcmp@plt+0x9e90>
  40d6d1:	mov    rdi,rbp
  40d6d4:	call   422e20 <strcmp@plt+0x1f688>
  40d6d9:	mov    edi,0x5
  40d6de:	lea    rsi,[rip+0x38269]        # 44594e <strcmp@plt+0x421b6>
  40d6e5:	mov    rdx,rax
  40d6e8:	xor    eax,eax
  40d6ea:	call   42e520 <strcmp@plt+0x2ad88>
  40d6ef:	jmp    40d628 <strcmp@plt+0x9e90>
  40d6f4:	lea    rax,[rip+0x576c5]        # 464dc0 <strcmp@plt+0x61628>
  40d6fb:	cmp    DWORD PTR [rax],0x0
  40d6fe:	jle    40da6b <strcmp@plt+0xa2d3>
  40d704:	lea    rsi,[rip+0x36bdf]        # 4442ea <strcmp@plt+0x40b52>
  40d70b:	xor    r12d,r12d
  40d70e:	mov    edi,0x5
  40d713:	xor    eax,eax
  40d715:	call   42e520 <strcmp@plt+0x2ad88>
  40d71a:	cmp    r12d,0x1
  40d71e:	je     40dc04 <strcmp@plt+0xa46c>
  40d724:	jmp    40d3db <strcmp@plt+0x9c43>
  40d729:	lea    rdi,[rip+0x15560]        # 422c90 <strcmp@plt+0x1f4f8>
  40d730:	call   42b9b0 <strcmp@plt+0x28218>
  40d735:	lea    rdi,[rsp+0xb0]
  40d73d:	mov    QWORD PTR [rsp+0x8],rax
  40d742:	mov    rsi,rax
  40d745:	call   420cf0 <strcmp@plt+0x1d558>
  40d74a:	mov    edi,0x2
  40d74f:	xor    eax,eax
  40d751:	call   421ec0 <strcmp@plt+0x1e728>
  40d756:	mov    rbp,rax
  40d759:	cmp    BYTE PTR [r14+0x3],0x0
  40d75e:	mov    QWORD PTR [rsp+0x30],rax
  40d763:	je     40d99d <strcmp@plt+0xa205>
  40d769:	mov    rax,QWORD PTR [rsp+0x10]
  40d76e:	add    rax,0x18
  40d772:	mov    QWORD PTR [rsp+0x28],rax
  40d777:	xor    ebx,ebx
  40d779:	mov    r12,QWORD PTR [rsp]
  40d77d:	jmp    40d78e <strcmp@plt+0x9ff6>
  40d77f:	inc    ebx
  40d781:	movzx  eax,BYTE PTR [r14+0x3]
  40d786:	cmp    ebx,eax
  40d788:	jae    40d99d <strcmp@plt+0xa205>
  40d78e:	lea    rdi,[rsp+0xb0]
  40d796:	mov    rsi,QWORD PTR [rsp]
  40d79a:	call   420cb0 <strcmp@plt+0x1d518>
  40d79f:	cmp    eax,0x1
  40d7a2:	jne    40dbca <strcmp@plt+0xa432>
  40d7a8:	lea    rax,[rip+0x57611]        # 464dc0 <strcmp@plt+0x61628>
  40d7af:	cmp    DWORD PTR [rax],0x0
  40d7b2:	jle    40d7d2 <strcmp@plt+0xa03a>
  40d7b4:	mov    rdi,r12
  40d7b7:	call   422e20 <strcmp@plt+0x1f688>
  40d7bc:	mov    edi,0x5
  40d7c1:	lea    rsi,[rip+0x36954]        # 44411c <strcmp@plt+0x40984>
  40d7c8:	mov    rdx,rax
  40d7cb:	xor    eax,eax
  40d7cd:	call   42e520 <strcmp@plt+0x2ad88>
  40d7d2:	mov    rax,QWORD PTR [rsp+0x10]
  40d7d7:	mov    rdi,QWORD PTR [rax+0x70]
  40d7db:	mov    rsi,r12
  40d7de:	mov    edx,0x1
  40d7e3:	call   407c60 <strcmp@plt+0x44c8>
  40d7e8:	test   rax,rax
  40d7eb:	je     40db9f <strcmp@plt+0xa407>
  40d7f1:	mov    rdi,rax
  40d7f4:	call   4317d0 <strcmp@plt+0x2e038>
  40d7f9:	movzx  ecx,WORD PTR [r14]
  40d7fd:	test   cl,0x2
  40d800:	mov    rdx,r15
  40d803:	mov    ecx,0x0
  40d808:	cmove  rdx,rcx
  40d80c:	mov    rdi,rbp
  40d80f:	mov    rsi,rax
  40d812:	call   421570 <strcmp@plt+0x1ddd8>
  40d817:	mov    rax,QWORD PTR [rsp+0x18]
  40d81c:	cmp    DWORD PTR [rax+0x18],0x0
  40d820:	je     40d77f <strcmp@plt+0x9fe7>
  40d826:	movzx  eax,WORD PTR [r14]
  40d82a:	test   al,0x1
  40d82c:	je     40d77f <strcmp@plt+0x9fe7>
  40d832:	mov    rbp,QWORD PTR [rsp]
  40d836:	mov    rdi,rbp
  40d839:	call   422dd0 <strcmp@plt+0x1f638>
  40d83e:	mov    rdi,rax
  40d841:	mov    esi,0x1
  40d846:	call   422e90 <strcmp@plt+0x1f6f8>
  40d84b:	mov    rdi,QWORD PTR [rsp+0x28]
  40d850:	mov    rsi,rbp
  40d853:	mov    rbp,QWORD PTR [rsp+0x30]
  40d858:	mov    rdx,QWORD PTR [rsp+0x18]
  40d85d:	call   40acb0 <strcmp@plt+0x7518>
  40d862:	cmp    eax,0x1
  40d865:	jne    40dbca <strcmp@plt+0xa432>
  40d86b:	movzx  eax,WORD PTR [r14]
  40d86f:	test   al,0x2
  40d871:	jne    40d77f <strcmp@plt+0x9fe7>
  40d877:	mov    rdi,QWORD PTR [rsp+0x8]
  40d87c:	call   42bff0 <strcmp@plt+0x28858>
  40d881:	test   rbp,rbp
  40d884:	mov    rbx,QWORD PTR [rsp]
  40d888:	jne    40da39 <strcmp@plt+0xa2a1>
  40d88e:	jmp    40da41 <strcmp@plt+0xa2a9>
  40d893:	lea    rax,[rip+0x57526]        # 464dc0 <strcmp@plt+0x61628>
  40d89a:	xor    r12d,r12d
  40d89d:	cmp    DWORD PTR [rax],0x2
  40d8a0:	jl     40dbfa <strcmp@plt+0xa462>
  40d8a6:	mov    rdi,QWORD PTR [rbx+0x4]
  40d8aa:	call   431f10 <strcmp@plt+0x2e778>
  40d8af:	lea    rsi,[rip+0x38169]        # 445a1f <strcmp@plt+0x42287>
  40d8b6:	xor    r12d,r12d
  40d8b9:	mov    edi,0x6
  40d8be:	mov    rdx,rax
  40d8c1:	xor    eax,eax
  40d8c3:	call   42e520 <strcmp@plt+0x2ad88>
  40d8c8:	cmp    r12d,0x1
  40d8cc:	je     40dc04 <strcmp@plt+0xa46c>
  40d8d2:	jmp    40d3db <strcmp@plt+0x9c43>
  40d8d7:	mov    rdx,QWORD PTR [rsp+0x78]
  40d8dc:	mov    rcx,rdx
  40d8df:	mov    QWORD PTR [rsp+0x8],rdx
  40d8e4:	lea    rcx,[rdx+0x6]
  40d8e8:	mov    QWORD PTR [rsp+0x78],rcx
  40d8ed:	add    eax,0xfffffffa
  40d8f0:	mov    DWORD PTR [rsp+0x54],eax
  40d8f4:	xor    r12d,r12d
  40d8f7:	xor    eax,eax
  40d8f9:	call   422c80 <strcmp@plt+0x1f4e8>
  40d8fe:	mov    r15,rax
  40d901:	mov    rdi,QWORD PTR [rsp+0x78]
  40d906:	mov    rsi,rax
  40d909:	call   4235c0 <strcmp@plt+0x1fe28>
  40d90e:	test   eax,eax
  40d910:	jle    40da4c <strcmp@plt+0xa2b4>
  40d916:	mov    ecx,DWORD PTR [rsp+0x54]
  40d91a:	sub    ecx,eax
  40d91c:	jb     40d929 <strcmp@plt+0xa191>
  40d91e:	mov    eax,eax
  40d920:	add    QWORD PTR [rsp+0x78],rax
  40d925:	mov    DWORD PTR [rsp+0x54],ecx
  40d929:	mov    rax,QWORD PTR [rsp+0x8]
  40d92e:	movzx  esi,BYTE PTR [rax+0x5]
  40d932:	mov    rdi,r15
  40d935:	call   423170 <strcmp@plt+0x1f9d8>
  40d93a:	mov    rdi,rbx
  40d93d:	call   431840 <strcmp@plt+0x2e0a8>
  40d942:	mov    r12,rax
  40d945:	mov    rdi,r15
  40d948:	mov    rsi,rax
  40d94b:	call   423670 <strcmp@plt+0x1fed8>
  40d950:	test   eax,eax
  40d952:	je     40daac <strcmp@plt+0xa314>
  40d958:	lea    rax,[rip+0x57461]        # 464dc0 <strcmp@plt+0x61628>
  40d95f:	cmp    DWORD PTR [rax],0x2
  40d962:	jl     40d990 <strcmp@plt+0xa1f8>
  40d964:	mov    rdi,r12
  40d967:	call   422e20 <strcmp@plt+0x1f688>
  40d96c:	mov    rbx,rax
  40d96f:	mov    rdi,r15
  40d972:	call   422e20 <strcmp@plt+0x1f688>
  40d977:	lea    rsi,[rip+0x380e6]        # 445a64 <strcmp@plt+0x422cc>
  40d97e:	mov    edi,0x6
  40d983:	mov    rdx,rbx
  40d986:	mov    rcx,rax
  40d989:	xor    eax,eax
  40d98b:	call   42e520 <strcmp@plt+0x2ad88>
  40d990:	mov    rdi,r15
  40d993:	call   422c90 <strcmp@plt+0x1f4f8>
  40d998:	jmp    40da6b <strcmp@plt+0xa2d3>
  40d99d:	movzx  eax,WORD PTR [rbp+0x24]
  40d9a1:	mov    rcx,QWORD PTR [rbp+0x30]
  40d9a5:	mov    dl,BYTE PTR [r14]
  40d9a8:	mov    bl,BYTE PTR [rcx+rax*1]
  40d9ab:	shl    dl,0x2
  40d9ae:	and    dl,0x8
  40d9b1:	and    bl,0xf7
  40d9b4:	or     bl,dl
  40d9b6:	mov    BYTE PTR [rcx+rax*1],bl
  40d9b9:	mov    rdx,QWORD PTR [r14+0x4]
  40d9bd:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  40d9c2:	lea    r8,[rsp+0x40]
  40d9c7:	mov    rbp,QWORD PTR [rsp+0x10]
  40d9cc:	mov    rdi,rbp
  40d9cf:	mov    rsi,QWORD PTR [rsp+0x8]
  40d9d4:	mov    rdx,r15
  40d9d7:	mov    rcx,r13
  40d9da:	call   407a60 <strcmp@plt+0x42c8>
  40d9df:	lea    rcx,[rip+0x573da]        # 464dc0 <strcmp@plt+0x61628>
  40d9e6:	mov    ecx,DWORD PTR [rcx]
  40d9e8:	cmp    eax,0x1
  40d9eb:	jne    40da7d <strcmp@plt+0xa2e5>
  40d9f1:	test   ecx,ecx
  40d9f3:	mov    rbx,QWORD PTR [rsp]
  40d9f7:	mov    r14,QWORD PTR [rsp+0x30]
  40d9fc:	jle    40da1c <strcmp@plt+0xa284>
  40d9fe:	mov    rdi,r14
  40da01:	call   422570 <strcmp@plt+0x1edd8>
  40da06:	lea    rsi,[rip+0x3674c]        # 444159 <strcmp@plt+0x409c1>
  40da0d:	mov    edi,0x5
  40da12:	mov    rdx,rax
  40da15:	xor    eax,eax
  40da17:	call   42e520 <strcmp@plt+0x2ad88>
  40da1c:	lea    rdx,[rsp+0x40]
  40da21:	mov    rdi,rbp
  40da24:	mov    rsi,r14
  40da27:	call   407920 <strcmp@plt+0x4188>
  40da2c:	mov    rdi,QWORD PTR [rsp+0x8]
  40da31:	call   42bff0 <strcmp@plt+0x28858>
  40da36:	mov    rbp,r14
  40da39:	mov    rdi,rbp
  40da3c:	call   42dd40 <strcmp@plt+0x2a5a8>
  40da41:	mov    r12d,0x1
  40da47:	jmp    40dbe8 <strcmp@plt+0xa450>
  40da4c:	mov    rdi,r15
  40da4f:	call   422c90 <strcmp@plt+0x1f4f8>
  40da54:	cmp    r12d,0x1
  40da58:	je     40dc04 <strcmp@plt+0xa46c>
  40da5e:	jmp    40d3db <strcmp@plt+0x9c43>
  40da63:	mov    rdi,rbp
  40da66:	call   428bd0 <strcmp@plt+0x25438>
  40da6b:	xor    r12d,r12d
  40da6e:	cmp    r12d,0x1
  40da72:	je     40dc04 <strcmp@plt+0xa46c>
  40da78:	jmp    40d3db <strcmp@plt+0x9c43>
  40da7d:	test   ecx,ecx
  40da7f:	mov    rbx,QWORD PTR [rsp]
  40da83:	jle    40da98 <strcmp@plt+0xa300>
  40da85:	lea    rsi,[rip+0x37e40]        # 4458cc <strcmp@plt+0x42134>
  40da8c:	mov    edi,0x5
  40da91:	xor    eax,eax
  40da93:	call   42e520 <strcmp@plt+0x2ad88>
  40da98:	mov    rdi,QWORD PTR [rsp+0x8]
  40da9d:	call   42bff0 <strcmp@plt+0x28858>
  40daa2:	mov    rbp,QWORD PTR [rsp+0x30]
  40daa7:	jmp    40dbdd <strcmp@plt+0xa445>
  40daac:	mov    QWORD PTR [rsp],rbx
  40dab0:	mov    rdi,r15
  40dab3:	call   422c90 <strcmp@plt+0x1f4f8>
  40dab8:	mov    rax,QWORD PTR [r13+0x10]
  40dabc:	mov    rdx,QWORD PTR [rax+0x10]
  40dac0:	mov    rdi,rbp
  40dac3:	mov    rsi,QWORD PTR [rsp+0x18]
  40dac8:	call   422780 <strcmp@plt+0x1efe8>
  40dacd:	cmp    eax,0x1
  40dad0:	jne    40dc3c <strcmp@plt+0xa4a4>
  40dad6:	xor    r12d,r12d
  40dad9:	xor    eax,eax
  40dadb:	call   422c80 <strcmp@plt+0x1f4e8>
  40dae0:	mov    r15,rax
  40dae3:	mov    rdi,QWORD PTR [rsp+0x78]
  40dae8:	mov    rsi,rax
  40daeb:	call   4235c0 <strcmp@plt+0x1fe28>
  40daf0:	test   eax,eax
  40daf2:	jle    40dc80 <strcmp@plt+0xa4e8>
  40daf8:	mov    rdi,r15
  40dafb:	call   4268f0 <strcmp@plt+0x23158>
  40db00:	mov    rdi,rax
  40db03:	call   427c60 <strcmp@plt+0x244c8>
  40db08:	mov    rbx,rax
  40db0b:	lea    rdi,[rip+0x1517e]        # 422c90 <strcmp@plt+0x1f4f8>
  40db12:	call   42b9b0 <strcmp@plt+0x28218>
  40db17:	mov    r12,rax
  40db1a:	mov    rdi,rbx
  40db1d:	mov    esi,0x1
  40db22:	call   437850 <strcmp@plt+0x340b8>
  40db27:	cmp    DWORD PTR [rbx+0x18],0x0
  40db2b:	je     40db4a <strcmp@plt+0xa3b2>
  40db2d:	mov    rax,QWORD PTR [rbx+0x8]
  40db31:	mov    rdi,QWORD PTR [rax+0x10]
  40db35:	test   rdi,rdi
  40db38:	je     40db4a <strcmp@plt+0xa3b2>
  40db3a:	call   423440 <strcmp@plt+0x1fca8>
  40db3f:	mov    rdi,rax
  40db42:	mov    rsi,r12
  40db45:	call   42baa0 <strcmp@plt+0x28308>
  40db4a:	cmp    DWORD PTR [r12+0x18],0x0
  40db50:	je     40dcac <strcmp@plt+0xa514>
  40db56:	mov    rdi,QWORD PTR [rsp]
  40db5a:	call   4317d0 <strcmp@plt+0x2e038>
  40db5f:	mov    rbp,QWORD PTR [r12+0x8]
  40db64:	cmp    rbp,r12
  40db67:	mov    QWORD PTR [rsp+0x98],r15
  40db6f:	je     40db92 <strcmp@plt+0xa3fa>
  40db71:	mov    rbx,rax
  40db74:	mov    rsi,QWORD PTR [rbp+0x10]
  40db78:	mov    rdi,rbx
  40db7b:	call   4290a0 <strcmp@plt+0x25908>
  40db80:	test   rax,rax
  40db83:	je     40dcd8 <strcmp@plt+0xa540>
  40db89:	mov    rbp,QWORD PTR [rbp+0x8]
  40db8d:	cmp    rbp,r12
  40db90:	jne    40db74 <strcmp@plt+0xa3dc>
  40db92:	mov    DWORD PTR [rsp+0x24],0x0
  40db9a:	jmp    40dcde <strcmp@plt+0xa546>
  40db9f:	lea    rax,[rip+0x5721a]        # 464dc0 <strcmp@plt+0x61628>
  40dba6:	cmp    DWORD PTR [rax],0x0
  40dba9:	jle    40dbca <strcmp@plt+0xa432>
  40dbab:	mov    rdi,QWORD PTR [rsp]
  40dbaf:	call   422e20 <strcmp@plt+0x1f688>
  40dbb4:	lea    rsi,[rip+0x37cf2]        # 4458ad <strcmp@plt+0x42115>
  40dbbb:	mov    edi,0x5
  40dbc0:	mov    rdx,rax
  40dbc3:	xor    eax,eax
  40dbc5:	call   42e520 <strcmp@plt+0x2ad88>
  40dbca:	mov    rdi,QWORD PTR [rsp+0x8]
  40dbcf:	call   42bff0 <strcmp@plt+0x28858>
  40dbd4:	test   rbp,rbp
  40dbd7:	mov    rbx,QWORD PTR [rsp]
  40dbdb:	je     40dbe5 <strcmp@plt+0xa44d>
  40dbdd:	mov    rdi,rbp
  40dbe0:	call   42dd40 <strcmp@plt+0x2a5a8>
  40dbe5:	xor    r12d,r12d
  40dbe8:	mov    rdi,QWORD PTR [rsp+0x18]
  40dbed:	call   422c90 <strcmp@plt+0x1f4f8>
  40dbf2:	mov    rdi,rbx
  40dbf5:	call   422c90 <strcmp@plt+0x1f4f8>
  40dbfa:	cmp    r12d,0x1
  40dbfe:	jne    40d3db <strcmp@plt+0x9c43>
  40dc04:	lea    rax,[rip+0x571b5]        # 464dc0 <strcmp@plt+0x61628>
  40dc0b:	mov    ebx,0x1
  40dc10:	cmp    DWORD PTR [rax],0x3
  40dc13:	jl     40dc28 <strcmp@plt+0xa490>
  40dc15:	lea    rsi,[rip+0x37c40]        # 44585c <strcmp@plt+0x420c4>
  40dc1c:	mov    edi,0x7
  40dc21:	xor    eax,eax
  40dc23:	call   42e520 <strcmp@plt+0x2ad88>
  40dc28:	mov    eax,ebx
  40dc2a:	add    rsp,0x138
  40dc31:	pop    rbx
  40dc32:	pop    r12
  40dc34:	pop    r13
  40dc36:	pop    r14
  40dc38:	pop    r15
  40dc3a:	pop    rbp
  40dc3b:	ret    
  40dc3c:	lea    rax,[rip+0x5717d]        # 464dc0 <strcmp@plt+0x61628>
  40dc43:	cmp    DWORD PTR [rax],0x0
  40dc46:	jle    40da6b <strcmp@plt+0xa2d3>
  40dc4c:	mov    rdi,r12
  40dc4f:	call   422e20 <strcmp@plt+0x1f688>
  40dc54:	mov    rcx,QWORD PTR [r13+0x10]
  40dc58:	mov    rcx,QWORD PTR [rcx+0x10]
  40dc5c:	lea    rsi,[rip+0x37e3e]        # 445aa1 <strcmp@plt+0x42309>
  40dc63:	xor    r12d,r12d
  40dc66:	mov    edi,0x5
  40dc6b:	mov    rdx,rax
  40dc6e:	xor    eax,eax
  40dc70:	call   42e520 <strcmp@plt+0x2ad88>
  40dc75:	cmp    r12d,0x1
  40dc79:	je     40dc04 <strcmp@plt+0xa46c>
  40dc7b:	jmp    40d3db <strcmp@plt+0x9c43>
  40dc80:	mov    rdi,r15
  40dc83:	call   422c90 <strcmp@plt+0x1f4f8>
  40dc88:	lea    rax,[rip+0x57131]        # 464dc0 <strcmp@plt+0x61628>
  40dc8f:	cmp    DWORD PTR [rax],0x2
  40dc92:	jl     40dbfa <strcmp@plt+0xa462>
  40dc98:	lea    rsi,[rip+0x37e54]        # 445af3 <strcmp@plt+0x4235b>
  40dc9f:	xor    r12d,r12d
  40dca2:	mov    edi,0x6
  40dca7:	jmp    40d713 <strcmp@plt+0x9f7b>
  40dcac:	lea    rax,[rip+0x5710d]        # 464dc0 <strcmp@plt+0x61628>
  40dcb3:	cmp    DWORD PTR [rax],0x0
  40dcb6:	jle    40dccb <strcmp@plt+0xa533>
  40dcb8:	lea    rsi,[rip+0x37e65]        # 445b24 <strcmp@plt+0x4238c>
  40dcbf:	mov    edi,0x5
  40dcc4:	xor    eax,eax
  40dcc6:	call   42e520 <strcmp@plt+0x2ad88>
  40dccb:	mov    rdi,r12
  40dcce:	call   42bff0 <strcmp@plt+0x28858>
  40dcd3:	jmp    40d990 <strcmp@plt+0xa1f8>
  40dcd8:	mov    al,0x1
  40dcda:	mov    DWORD PTR [rsp+0x24],eax
  40dcde:	mov    QWORD PTR [rsp+0x38],r13
  40dce3:	mov    rsi,QWORD PTR [r13+0x8]
  40dce7:	mov    rbx,QWORD PTR [rsp]
  40dceb:	mov    rdi,rbx
  40dcee:	mov    QWORD PTR [rsp+0x90],r12
  40dcf6:	mov    rdx,r12
  40dcf9:	call   431a60 <strcmp@plt+0x2e2c8>
  40dcfe:	mov    rax,QWORD PTR [r14+0x38]
  40dd02:	mov    rdi,QWORD PTR [r14+0x40]
  40dd06:	mov    rsi,rbx
  40dd09:	call   QWORD PTR [rax+0x30]
  40dd0c:	mov    rdi,rbx
  40dd0f:	call   431840 <strcmp@plt+0x2e0a8>
  40dd14:	mov    rdi,r14
  40dd17:	mov    rsi,rax
  40dd1a:	mov    edx,0x1
  40dd1f:	call   407930 <strcmp@plt+0x4198>
  40dd24:	mov    rdi,r14
  40dd27:	mov    esi,0x2
  40dd2c:	call   410360 <strcmp@plt+0xcbc8>
  40dd31:	mov    rdi,r14
  40dd34:	mov    esi,0xa
  40dd39:	call   410360 <strcmp@plt+0xcbc8>
  40dd3e:	mov    QWORD PTR [rsp+0x10],r14
  40dd43:	mov    rax,QWORD PTR [r14+0x78]
  40dd47:	cmp    DWORD PTR [rax+0x18],0x0
  40dd4b:	je     40ded1 <strcmp@plt+0xa739>
  40dd51:	mov    rax,QWORD PTR [rsp+0x38]
  40dd56:	mov    r13,QWORD PTR [rax+0x8]
  40dd5a:	lea    r14,[rip+0x6284f]        # 4705b0 <strcmp@plt+0x6ce18>
  40dd61:	mov    rdi,QWORD PTR [r14]
  40dd64:	mov    rsi,QWORD PTR [rsp]
  40dd68:	mov    edx,0x3
  40dd6d:	call   437500 <strcmp@plt+0x33d68>
  40dd72:	mov    r15,rax
  40dd75:	mov    rbx,QWORD PTR [rax+0x8]
  40dd79:	cmp    rbx,rax
  40dd7c:	lea    r12,[rip+0x62835]        # 4705b8 <strcmp@plt+0x6ce20>
  40dd83:	jne    40dd90 <strcmp@plt+0xa5f8>
  40dd85:	jmp    40ddb7 <strcmp@plt+0xa61f>
  40dd87:	mov    rbx,QWORD PTR [rbx+0x8]
  40dd8b:	cmp    rbx,r15
  40dd8e:	je     40ddb7 <strcmp@plt+0xa61f>
  40dd90:	mov    rbp,QWORD PTR [rbx+0x10]
  40dd94:	mov    rdi,rbp
  40dd97:	call   436ff0 <strcmp@plt+0x33858>
  40dd9c:	cmp    QWORD PTR [rax+0x10],r13
  40dda0:	jne    40dd87 <strcmp@plt+0xa5ef>
  40dda2:	mov    rdx,QWORD PTR [r14]
  40dda5:	mov    rcx,QWORD PTR [r12]
  40dda9:	mov    rdi,QWORD PTR [rsp]
  40ddad:	mov    rsi,rbp
  40ddb0:	call   4371e0 <strcmp@plt+0x33a48>
  40ddb5:	jmp    40dd87 <strcmp@plt+0xa5ef>
  40ddb7:	mov    rdi,r15
  40ddba:	call   42bff0 <strcmp@plt+0x28858>
  40ddbf:	mov    QWORD PTR [rsp+0x30],r13
  40ddc4:	mov    rsi,QWORD PTR [r13+0x0]
  40ddc8:	mov    rdi,QWORD PTR [rsp]
  40ddcc:	call   431cf0 <strcmp@plt+0x2e558>
  40ddd1:	mov    rcx,QWORD PTR [rax+0x8]
  40ddd5:	mov    QWORD PTR [rsp+0xa0],rax
  40dddd:	mov    QWORD PTR [rsp+0x28],rcx
  40dde2:	cmp    rcx,rax
  40dde5:	je     40ded1 <strcmp@plt+0xa739>
  40ddeb:	mov    rax,QWORD PTR [rsp+0x10]
  40ddf0:	mov    rax,QWORD PTR [rax+0x78]
  40ddf4:	lea    r12,[rip+0x2cb5]        # 410ab0 <strcmp@plt+0xd318>
  40ddfb:	mov    r14,QWORD PTR [rsp]
  40ddff:	jmp    40de1d <strcmp@plt+0xa685>
  40de01:	mov    rcx,QWORD PTR [rsp+0x28]
  40de06:	mov    rcx,QWORD PTR [rcx+0x8]
  40de0a:	mov    QWORD PTR [rsp+0x28],rcx
  40de0f:	cmp    rcx,QWORD PTR [rsp+0xa0]
  40de17:	je     40ded1 <strcmp@plt+0xa739>
  40de1d:	mov    rbx,QWORD PTR [rax+0x8]
  40de21:	cmp    rbx,rax
  40de24:	mov    r13,QWORD PTR [rsp+0x10]
  40de29:	je     40de01 <strcmp@plt+0xa669>
  40de2b:	mov    rax,QWORD PTR [rsp+0x28]
  40de30:	mov    rax,QWORD PTR [rax+0x10]
  40de34:	mov    QWORD PTR [rsp+0x18],rax
  40de39:	nop    DWORD PTR [rax+0x0]
  40de40:	mov    r15,r13
  40de43:	mov    r13,QWORD PTR [rbx+0x10]
  40de47:	mov    edi,0x20
  40de4c:	call   431d90 <strcmp@plt+0x2e5f8>
  40de51:	mov    rbp,r12
  40de54:	mov    r12,rax
  40de57:	mov    QWORD PTR [rax],r14
  40de5a:	mov    QWORD PTR [rax+0x8],r13
  40de5e:	mov    r13,r15
  40de61:	mov    rax,QWORD PTR [rsp+0x30]
  40de66:	mov    QWORD PTR [r12+0x10],rax
  40de6b:	mov    rdi,QWORD PTR [rsp+0x18]
  40de70:	call   423440 <strcmp@plt+0x1fca8>
  40de75:	mov    QWORD PTR [r12+0x18],rax
  40de7a:	mov    edi,0x3
  40de7f:	mov    rsi,r15
  40de82:	lea    rdx,[rip+0x2827]        # 4106b0 <strcmp@plt+0xcf18>
  40de89:	mov    rcx,r12
  40de8c:	mov    r12,rbp
  40de8f:	lea    rax,[rip+0x6271a]        # 4705b0 <strcmp@plt+0x6ce18>
  40de96:	mov    rbp,rax
  40de99:	mov    r8,r12
  40de9c:	call   437190 <strcmp@plt+0x339f8>
  40dea1:	mov    r15,rax
  40dea4:	mov    rdi,QWORD PTR [rbp+0x0]
  40dea8:	mov    rsi,r14
  40deab:	mov    rdx,rax
  40deae:	call   437490 <strcmp@plt+0x33cf8>
  40deb3:	mov    rdi,r15
  40deb6:	call   4106b0 <strcmp@plt+0xcf18>
  40debb:	mov    rbx,QWORD PTR [rbx+0x8]
  40debf:	mov    rax,QWORD PTR [r13+0x78]
  40dec3:	cmp    rbx,rax
  40dec6:	jne    40de40 <strcmp@plt+0xa6a8>
  40decc:	jmp    40de01 <strcmp@plt+0xa669>
  40ded1:	lea    rax,[rip+0x626e0]        # 4705b8 <strcmp@plt+0x6ce20>
  40ded8:	mov    rdi,QWORD PTR [rax]
  40dedb:	mov    rbp,QWORD PTR [rsp+0xa8]
  40dee3:	mov    rsi,rbp
  40dee6:	call   4323d0 <strcmp@plt+0x2ec38>
  40deeb:	mov    rax,QWORD PTR [rsp+0x8]
  40def0:	movbe  ebx,DWORD PTR [rax]
  40def4:	mov    rdi,QWORD PTR [rbp+0x8]
  40def8:	imul   esi,ebx,0x3c
  40defb:	call   437020 <strcmp@plt+0x33888>
  40df00:	lea    r12,[rip+0x56eb9]        # 464dc0 <strcmp@plt+0x61628>
  40df07:	cmp    DWORD PTR [r12],0x0
  40df0c:	jle    40df61 <strcmp@plt+0xa7c9>
  40df0e:	mov    rdi,QWORD PTR [rsp]
  40df12:	call   431840 <strcmp@plt+0x2e0a8>
  40df17:	mov    rdi,rax
  40df1a:	call   422e20 <strcmp@plt+0x1f688>
  40df1f:	mov    r15,rax
  40df22:	mov    rbp,QWORD PTR [rsp+0x38]
  40df27:	mov    rax,QWORD PTR [rbp+0x10]
  40df2b:	mov    rdi,QWORD PTR [rax]
  40df2e:	call   422e20 <strcmp@plt+0x1f688>
  40df33:	mov    r13,rax
  40df36:	mov    rax,QWORD PTR [rbp+0x8]
  40df3a:	mov    rdi,QWORD PTR [rax]
  40df3d:	call   422e20 <strcmp@plt+0x1f688>
  40df42:	lea    rsi,[rip+0x37c0e]        # 445b57 <strcmp@plt+0x423bf>
  40df49:	mov    edi,0x5
  40df4e:	mov    rdx,r15
  40df51:	mov    rcx,r13
  40df54:	mov    r8,rax
  40df57:	mov    r9d,ebx
  40df5a:	xor    eax,eax
  40df5c:	call   42e520 <strcmp@plt+0x2ad88>
  40df61:	cmp    BYTE PTR [rsp+0x24],0x0
  40df66:	mov    rbx,QWORD PTR [rsp+0x98]
  40df6e:	je     40dfe8 <strcmp@plt+0xa850>
  40df70:	cmp    DWORD PTR [r12],0x0
  40df75:	jle    40dfa9 <strcmp@plt+0xa811>
  40df77:	lea    rsi,[rip+0x37c1b]        # 445b99 <strcmp@plt+0x42401>
  40df7e:	mov    edi,0x5
  40df83:	xor    eax,eax
  40df85:	call   42e520 <strcmp@plt+0x2ad88>
  40df8a:	cmp    DWORD PTR [r12],0x0
  40df8f:	jle    40dfa9 <strcmp@plt+0xa811>
  40df91:	lea    rsi,[rip+0x377b9]        # 445751 <strcmp@plt+0x41fb9>
  40df98:	mov    edi,0x5
  40df9d:	mov    edx,0x1
  40dfa2:	xor    eax,eax
  40dfa4:	call   42e520 <strcmp@plt+0x2ad88>
  40dfa9:	mov    rbp,QWORD PTR [rsp+0x10]
  40dfae:	mov    rdi,QWORD PTR [rbp+0xa0]
  40dfb5:	test   rdi,rdi
  40dfb8:	jne    40dfde <strcmp@plt+0xa846>
  40dfba:	lea    rdx,[rip+0x218f]        # 410150 <strcmp@plt+0xc9b8>
  40dfc1:	mov    edi,0x6
  40dfc6:	mov    rsi,rbp
  40dfc9:	mov    rcx,rbp
  40dfcc:	xor    r8d,r8d
  40dfcf:	call   437140 <strcmp@plt+0x339a8>
  40dfd4:	mov    rdi,rax
  40dfd7:	mov    QWORD PTR [rbp+0xa0],rax
  40dfde:	mov    esi,0x1
  40dfe3:	call   437020 <strcmp@plt+0x33888>
  40dfe8:	mov    rdi,rbx
  40dfeb:	call   422c90 <strcmp@plt+0x1f4f8>
  40dff0:	mov    rdi,QWORD PTR [rsp+0x90]
  40dff8:	call   42bff0 <strcmp@plt+0x28858>
  40dffd:	mov    r12d,0x1
  40e003:	cmp    r12d,0x1
  40e007:	je     40dc04 <strcmp@plt+0xa46c>
  40e00d:	jmp    40d3db <strcmp@plt+0x9c43>
  40e012:	lea    rdi,[rip+0x36f1c]        # 444f35 <strcmp@plt+0x4179d>
  40e019:	lea    rsi,[rip+0x36f2c]        # 444f4c <strcmp@plt+0x417b4>
  40e020:	lea    rdx,[rip+0x36f33]        # 444f5a <strcmp@plt+0x417c2>
  40e027:	call   431eb0 <strcmp@plt+0x2e718>
  40e02c:	nop    DWORD PTR [rax+0x0]
  40e030:	push   rbp
  40e031:	push   r15
  40e033:	push   r14
  40e035:	push   r12
  40e037:	push   rbx
  40e038:	mov    rax,QWORD PTR [rdi+0x8]
  40e03c:	cmp    rax,QWORD PTR [rip+0x55f8d]        # 463fd0 <strcmp@plt+0x60838>
  40e043:	jne    40e149 <strcmp@plt+0xa9b1>
  40e049:	mov    ebp,edx
  40e04b:	mov    r15,rsi
  40e04e:	mov    r12,rdi
  40e051:	mov    rdi,QWORD PTR [rdi+0x50]
  40e055:	call   436340 <strcmp@plt+0x32ba8>
  40e05a:	test   rax,rax
  40e05d:	je     40e118 <strcmp@plt+0xa980>
  40e063:	mov    r14,rax
  40e066:	mov    rax,QWORD PTR [rax+0x10]
  40e06a:	mov    rcx,QWORD PTR [rax+0x8]
  40e06e:	cmp    rcx,rax
  40e071:	je     40e091 <strcmp@plt+0xa8f9>
  40e073:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e07d:	nop    DWORD PTR [rax]
  40e080:	mov    rdx,QWORD PTR [rcx+0x10]
  40e084:	mov    BYTE PTR [rdx+0x8],bpl
  40e088:	mov    rcx,QWORD PTR [rcx+0x8]
  40e08c:	cmp    rcx,rax
  40e08f:	jne    40e080 <strcmp@plt+0xa8e8>
  40e091:	mov    rax,QWORD PTR [r14+0x18]
  40e095:	mov    rcx,QWORD PTR [rax+0x8]
  40e099:	cmp    rcx,rax
  40e09c:	je     40e0b1 <strcmp@plt+0xa919>
  40e09e:	xchg   ax,ax
  40e0a0:	mov    rdx,QWORD PTR [rcx+0x10]
  40e0a4:	mov    BYTE PTR [rdx+0x8],bpl
  40e0a8:	mov    rcx,QWORD PTR [rcx+0x8]
  40e0ac:	cmp    rcx,rax
  40e0af:	jne    40e0a0 <strcmp@plt+0xa908>
  40e0b1:	cmp    BYTE PTR [r14+0x20],0x1
  40e0b6:	setne  BYTE PTR [r14+0x20]
  40e0bb:	mov    rax,QWORD PTR [r14+0x8]
  40e0bf:	mov    rbx,QWORD PTR [rax+0x8]
  40e0c3:	cmp    rbx,rax
  40e0c6:	je     40e106 <strcmp@plt+0xa96e>
  40e0c8:	nop    DWORD PTR [rax+rax*1+0x0]
  40e0d0:	mov    rbp,QWORD PTR [rbx+0x10]
  40e0d4:	mov    rax,QWORD PTR [r12+0x38]
  40e0d9:	mov    rdi,QWORD PTR [r12+0x40]
  40e0de:	mov    rsi,rbp
  40e0e1:	call   QWORD PTR [rax+0x30]
  40e0e4:	mov    rdi,rbp
  40e0e7:	call   431840 <strcmp@plt+0x2e0a8>
  40e0ec:	mov    rdi,r12
  40e0ef:	mov    rsi,rax
  40e0f2:	mov    edx,0x1
  40e0f7:	call   407930 <strcmp@plt+0x4198>
  40e0fc:	mov    rbx,QWORD PTR [rbx+0x8]
  40e100:	cmp    rbx,QWORD PTR [r14+0x8]
  40e104:	jne    40e0d0 <strcmp@plt+0xa938>
  40e106:	mov    rdi,r12
  40e109:	mov    rsi,r14
  40e10c:	call   40eb10 <strcmp@plt+0xb378>
  40e111:	mov    ebx,0x1
  40e116:	jmp    40e13e <strcmp@plt+0xa9a6>
  40e118:	lea    rax,[rip+0x56ca1]        # 464dc0 <strcmp@plt+0x61628>
  40e11f:	xor    ebx,ebx
  40e121:	cmp    DWORD PTR [rax],0x2
  40e124:	jl     40e13e <strcmp@plt+0xa9a6>
  40e126:	lea    rsi,[rip+0x37c7a]        # 445da7 <strcmp@plt+0x4260f>
  40e12d:	xor    ebx,ebx
  40e12f:	mov    edi,0x6
  40e134:	mov    rdx,r15
  40e137:	xor    eax,eax
  40e139:	call   42e520 <strcmp@plt+0x2ad88>
  40e13e:	mov    eax,ebx
  40e140:	pop    rbx
  40e141:	pop    r12
  40e143:	pop    r14
  40e145:	pop    r15
  40e147:	pop    rbp
  40e148:	ret    
  40e149:	lea    rdi,[rip+0x36de5]        # 444f35 <strcmp@plt+0x4179d>
  40e150:	lea    rsi,[rip+0x36df5]        # 444f4c <strcmp@plt+0x417b4>
  40e157:	lea    rdx,[rip+0x36dfc]        # 444f5a <strcmp@plt+0x417c2>
  40e15e:	call   431eb0 <strcmp@plt+0x2e718>
  40e163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e16d:	nop    DWORD PTR [rax]
  40e170:	push   rbp
  40e171:	push   r15
  40e173:	push   r14
  40e175:	push   r13
  40e177:	push   r12
  40e179:	push   rbx
  40e17a:	sub    rsp,0x28
  40e17e:	mov    rax,QWORD PTR [rdi+0x8]
  40e182:	cmp    rax,QWORD PTR [rip+0x55e47]        # 463fd0 <strcmp@plt+0x60838>
  40e189:	jne    40e53b <strcmp@plt+0xada3>
  40e18f:	mov    r14,rcx
  40e192:	mov    r13,rdx
  40e195:	mov    rbp,rsi
  40e198:	mov    r12,rdi
  40e19b:	mov    rdi,QWORD PTR [rdi+0x50]
  40e19f:	call   436340 <strcmp@plt+0x32ba8>
  40e1a4:	test   rax,rax
  40e1a7:	je     40e29c <strcmp@plt+0xab04>
  40e1ad:	mov    rbx,rax
  40e1b0:	mov    rdi,r13
  40e1b3:	mov    rsi,r14
  40e1b6:	call   423670 <strcmp@plt+0x1fed8>
  40e1bb:	mov    r15d,0x1
  40e1c1:	test   eax,eax
  40e1c3:	je     40e529 <strcmp@plt+0xad91>
  40e1c9:	mov    eax,DWORD PTR [r14+0x18]
  40e1cd:	cmp    eax,0x1
  40e1d0:	je     40e2cd <strcmp@plt+0xab35>
  40e1d6:	test   eax,eax
  40e1d8:	jne    40e2f7 <strcmp@plt+0xab5f>
  40e1de:	xor    eax,eax
  40e1e0:	mov    QWORD PTR [rsp+0x8],r13
  40e1e5:	cmp    DWORD PTR [r13+0x18],0x2
  40e1ea:	setne  al
  40e1ed:	lea    rcx,[rax*8+0x28]
  40e1f5:	mov    QWORD PTR [rsp+0x10],rcx
  40e1fa:	mov    QWORD PTR [rsp+0x18],rbx
  40e1ff:	mov    r13,QWORD PTR [rbx+rax*8+0x10]
  40e204:	mov    r14,QWORD PTR [r13+0x8]
  40e208:	cmp    r14,r13
  40e20b:	je     40e325 <strcmp@plt+0xab8d>
  40e211:	lea    r15,[rip+0x359f0]        # 443c08 <strcmp@plt+0x40470>
  40e218:	jmp    40e229 <strcmp@plt+0xaa91>
  40e21a:	nop    WORD PTR [rax+rax*1+0x0]
  40e220:	cmp    r14,r13
  40e223:	je     40e325 <strcmp@plt+0xab8d>
  40e229:	mov    rbp,QWORD PTR [r14+0x10]
  40e22d:	mov    r14,QWORD PTR [r14+0x8]
  40e231:	mov    rax,QWORD PTR [rbp+0x0]
  40e235:	cmp    DWORD PTR [rax+0x18],0x1
  40e239:	je     40e24a <strcmp@plt+0xaab2>
  40e23b:	mov    edi,0x2
  40e240:	mov    rsi,r15
  40e243:	xor    eax,eax
  40e245:	call   42e520 <strcmp@plt+0x2ad88>
  40e24a:	mov    rdi,QWORD PTR [r12+0x70]
  40e24f:	mov    rsi,rbp
  40e252:	call   40e860 <strcmp@plt+0xb0c8>
  40e257:	test   rax,rax
  40e25a:	je     40e220 <strcmp@plt+0xaa88>
  40e25c:	mov    rbx,rax
  40e25f:	mov    rdi,rax
  40e262:	call   4317d0 <strcmp@plt+0x2e038>
  40e267:	mov    rdi,rax
  40e26a:	mov    rsi,rbp
  40e26d:	call   4294f0 <strcmp@plt+0x25d58>
  40e272:	mov    rax,QWORD PTR [r12+0x38]
  40e277:	mov    rdi,QWORD PTR [r12+0x40]
  40e27c:	mov    rsi,rbx
  40e27f:	call   QWORD PTR [rax+0x30]
  40e282:	mov    rdi,rbx
  40e285:	call   431840 <strcmp@plt+0x2e0a8>
  40e28a:	mov    rdi,r12
  40e28d:	mov    rsi,rax
  40e290:	mov    edx,0x1
  40e295:	call   407930 <strcmp@plt+0x4198>
  40e29a:	jmp    40e220 <strcmp@plt+0xaa88>
  40e29c:	lea    rax,[rip+0x56b1d]        # 464dc0 <strcmp@plt+0x61628>
  40e2a3:	xor    r15d,r15d
  40e2a6:	cmp    DWORD PTR [rax],0x2
  40e2a9:	jl     40e529 <strcmp@plt+0xad91>
  40e2af:	lea    rsi,[rip+0x36bba]        # 444e70 <strcmp@plt+0x416d8>
  40e2b6:	xor    r15d,r15d
  40e2b9:	mov    edi,0x6
  40e2be:	mov    rdx,rbp
  40e2c1:	xor    eax,eax
  40e2c3:	call   42e520 <strcmp@plt+0x2ad88>
  40e2c8:	jmp    40e529 <strcmp@plt+0xad91>
  40e2cd:	mov    rdi,r14
  40e2d0:	call   422ef0 <strcmp@plt+0x1f758>
  40e2d5:	cmp    ax,0x2
  40e2d9:	je     40e355 <strcmp@plt+0xabbd>
  40e2db:	cmp    ax,0xa
  40e2df:	jne    40e2f7 <strcmp@plt+0xab5f>
  40e2e1:	mov    QWORD PTR [rsp+0x8],r13
  40e2e6:	mov    eax,0x30
  40e2eb:	mov    QWORD PTR [rsp+0x20],rax
  40e2f0:	mov    eax,0x18
  40e2f5:	jmp    40e369 <strcmp@plt+0xabd1>
  40e2f7:	lea    rax,[rip+0x56ac2]        # 464dc0 <strcmp@plt+0x61628>
  40e2fe:	xor    r15d,r15d
  40e301:	cmp    DWORD PTR [rax],0x2
  40e304:	jl     40e529 <strcmp@plt+0xad91>
  40e30a:	lea    rsi,[rip+0x36bab]        # 444ebc <strcmp@plt+0x41724>
  40e311:	xor    r15d,r15d
  40e314:	mov    edi,0x6
  40e319:	xor    eax,eax
  40e31b:	call   42e520 <strcmp@plt+0x2ad88>
  40e320:	jmp    40e529 <strcmp@plt+0xad91>
  40e325:	mov    rbp,QWORD PTR [rsp+0x18]
  40e32a:	mov    rbx,QWORD PTR [rsp+0x10]
  40e32f:	cmp    QWORD PTR [rbp+rbx*1+0x0],0x0
  40e335:	mov    r15d,0x1
  40e33b:	jne    40e51e <strcmp@plt+0xad86>
  40e341:	mov    rdi,QWORD PTR [rsp+0x8]
  40e346:	call   423440 <strcmp@plt+0x1fca8>
  40e34b:	mov    QWORD PTR [rbp+rbx*1+0x0],rax
  40e350:	jmp    40e51e <strcmp@plt+0xad86>
  40e355:	mov    QWORD PTR [rsp+0x8],r13
  40e35a:	mov    eax,0x28
  40e35f:	mov    QWORD PTR [rsp+0x20],rax
  40e364:	mov    eax,0x10
  40e369:	mov    QWORD PTR [rsp+0x18],rbx
  40e36e:	mov    rbp,QWORD PTR [rbx+rax*1]
  40e372:	mov    rbx,QWORD PTR [rbp+0x8]
  40e376:	cmp    rbx,rbp
  40e379:	je     40e499 <strcmp@plt+0xad01>
  40e37f:	mov    QWORD PTR [rsp+0x10],rbp
  40e384:	jmp    40e3b7 <strcmp@plt+0xac1f>
  40e386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e390:	mov    edi,0x2
  40e395:	lea    rsi,[rip+0x3586c]        # 443c08 <strcmp@plt+0x40470>
  40e39c:	xor    eax,eax
  40e39e:	call   42e520 <strcmp@plt+0x2ad88>
  40e3a3:	mov    rdi,r13
  40e3a6:	mov    rsi,r14
  40e3a9:	call   428ab0 <strcmp@plt+0x25318>
  40e3ae:	cmp    rbx,rbp
  40e3b1:	je     40e499 <strcmp@plt+0xad01>
  40e3b7:	mov    r13,QWORD PTR [rbx+0x10]
  40e3bb:	mov    rbx,QWORD PTR [rbx+0x8]
  40e3bf:	mov    rax,QWORD PTR [r13+0x0]
  40e3c3:	mov    eax,DWORD PTR [rax+0x18]
  40e3c6:	cmp    eax,0x1
  40e3c9:	je     40e3a3 <strcmp@plt+0xac0b>
  40e3cb:	test   eax,eax
  40e3cd:	jne    40e390 <strcmp@plt+0xabf8>
  40e3cf:	mov    rdi,QWORD PTR [r12+0x70]
  40e3d4:	mov    rsi,r13
  40e3d7:	call   40e860 <strcmp@plt+0xb0c8>
  40e3dc:	test   rax,rax
  40e3df:	je     40e3ae <strcmp@plt+0xac16>
  40e3e1:	mov    r15,rax
  40e3e4:	mov    rdi,rax
  40e3e7:	call   4317d0 <strcmp@plt+0x2e038>
  40e3ec:	mov    rbp,rax
  40e3ef:	mov    rdi,rax
  40e3f2:	mov    rsi,r14
  40e3f5:	call   4290a0 <strcmp@plt+0x25908>
  40e3fa:	test   rax,rax
  40e3fd:	je     40e455 <strcmp@plt+0xacbd>
  40e3ff:	lea    rax,[rip+0x569ba]        # 464dc0 <strcmp@plt+0x61628>
  40e406:	cmp    DWORD PTR [rax],0x2
  40e409:	jl     40e41e <strcmp@plt+0xac86>
  40e40b:	mov    edi,0x6
  40e410:	lea    rsi,[rip+0x36ada]        # 444ef1 <strcmp@plt+0x41759>
  40e417:	xor    eax,eax
  40e419:	call   42e520 <strcmp@plt+0x2ad88>
  40e41e:	mov    rdi,rbp
  40e421:	xor    esi,esi
  40e423:	xor    edx,edx
  40e425:	call   429250 <strcmp@plt+0x25ab8>
  40e42a:	mov    rbp,rax
  40e42d:	mov    rdi,QWORD PTR [r12+0x50]
  40e432:	mov    rsi,r13
  40e435:	call   42cd80 <strcmp@plt+0x295e8>
  40e43a:	mov    rdi,r13
  40e43d:	mov    rsi,rbp
  40e440:	call   42bf10 <strcmp@plt+0x28778>
  40e445:	mov    rbp,QWORD PTR [rsp+0x10]
  40e44a:	cmp    rbx,rbp
  40e44d:	jne    40e3b7 <strcmp@plt+0xac1f>
  40e453:	jmp    40e499 <strcmp@plt+0xad01>
  40e455:	mov    rdi,rbp
  40e458:	mov    rsi,r13
  40e45b:	mov    rdx,r14
  40e45e:	call   429400 <strcmp@plt+0x25c68>
  40e463:	mov    rax,QWORD PTR [r12+0x38]
  40e468:	mov    rdi,QWORD PTR [r12+0x40]
  40e46d:	mov    rsi,r15
  40e470:	call   QWORD PTR [rax+0x30]
  40e473:	mov    rdi,r15
  40e476:	call   431840 <strcmp@plt+0x2e0a8>
  40e47b:	mov    rdi,r12
  40e47e:	mov    rsi,rax
  40e481:	mov    edx,0x1
  40e486:	call   407930 <strcmp@plt+0x4198>
  40e48b:	mov    rbp,QWORD PTR [rsp+0x10]
  40e490:	cmp    rbx,rbp
  40e493:	jne    40e3b7 <strcmp@plt+0xac1f>
  40e499:	mov    rbp,QWORD PTR [rsp+0x18]
  40e49e:	mov    rbx,QWORD PTR [rsp+0x20]
  40e4a3:	mov    rdi,QWORD PTR [rbp+rbx*1+0x0]
  40e4a8:	test   rdi,rdi
  40e4ab:	je     40e4cd <strcmp@plt+0xad35>
  40e4ad:	mov    rsi,r14
  40e4b0:	call   423670 <strcmp@plt+0x1fed8>
  40e4b5:	test   eax,eax
  40e4b7:	mov    r15d,0x1
  40e4bd:	jne    40e4f0 <strcmp@plt+0xad58>
  40e4bf:	mov    rdi,QWORD PTR [rbp+rbx*1+0x0]
  40e4c4:	call   422c90 <strcmp@plt+0x1f4f8>
  40e4c9:	xor    eax,eax
  40e4cb:	jmp    40e4eb <strcmp@plt+0xad53>
  40e4cd:	mov    rdi,QWORD PTR [rsp+0x8]
  40e4d2:	test   rdi,rdi
  40e4d5:	mov    r15d,0x1
  40e4db:	je     40e4e4 <strcmp@plt+0xad4c>
  40e4dd:	call   423440 <strcmp@plt+0x1fca8>
  40e4e2:	jmp    40e4eb <strcmp@plt+0xad53>
  40e4e4:	xor    edi,edi
  40e4e6:	call   422be0 <strcmp@plt+0x1f448>
  40e4eb:	mov    QWORD PTR [rbp+rbx*1+0x0],rax
  40e4f0:	mov    rax,QWORD PTR [rbp+0x8]
  40e4f4:	mov    rbx,QWORD PTR [rax+0x8]
  40e4f8:	cmp    rbx,rax
  40e4fb:	je     40e51e <strcmp@plt+0xad86>
  40e4fd:	nop    DWORD PTR [rax]
  40e500:	mov    rdi,QWORD PTR [rbx+0x10]
  40e504:	call   4317d0 <strcmp@plt+0x2e038>
  40e509:	mov    rdi,rax
  40e50c:	mov    rsi,r14
  40e50f:	call   4293b0 <strcmp@plt+0x25c18>
  40e514:	mov    rbx,QWORD PTR [rbx+0x8]
  40e518:	cmp    rbx,QWORD PTR [rbp+0x8]
  40e51c:	jne    40e500 <strcmp@plt+0xad68>
  40e51e:	mov    rdi,r12
  40e521:	mov    rsi,rbp
  40e524:	call   40eb10 <strcmp@plt+0xb378>
  40e529:	mov    eax,r15d
  40e52c:	add    rsp,0x28
  40e530:	pop    rbx
  40e531:	pop    r12
  40e533:	pop    r13
  40e535:	pop    r14
  40e537:	pop    r15
  40e539:	pop    rbp
  40e53a:	ret    
  40e53b:	lea    rdi,[rip+0x369f3]        # 444f35 <strcmp@plt+0x4179d>
  40e542:	lea    rsi,[rip+0x36a03]        # 444f4c <strcmp@plt+0x417b4>
  40e549:	lea    rdx,[rip+0x36a0a]        # 444f5a <strcmp@plt+0x417c2>
  40e550:	call   431eb0 <strcmp@plt+0x2e718>
  40e555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e55f:	nop
  40e560:	push   rbx
  40e561:	mov    rax,QWORD PTR [rdi+0x8]
  40e565:	cmp    rax,QWORD PTR [rip+0x55a64]        # 463fd0 <strcmp@plt+0x60838>
  40e56c:	jne    40e58f <strcmp@plt+0xadf7>
  40e56e:	mov    rbx,rdi
  40e571:	mov    rdi,QWORD PTR [rdi+0x50]
  40e575:	mov    rsi,rdx
  40e578:	call   436340 <strcmp@plt+0x32ba8>
  40e57d:	mov    rdi,rbx
  40e580:	mov    rsi,rax
  40e583:	call   40eb10 <strcmp@plt+0xb378>
  40e588:	mov    eax,0x1
  40e58d:	pop    rbx
  40e58e:	ret    
  40e58f:	lea    rdi,[rip+0x3699f]        # 444f35 <strcmp@plt+0x4179d>
  40e596:	lea    rsi,[rip+0x369af]        # 444f4c <strcmp@plt+0x417b4>
  40e59d:	lea    rdx,[rip+0x369b6]        # 444f5a <strcmp@plt+0x417c2>
  40e5a4:	call   431eb0 <strcmp@plt+0x2e718>
  40e5a9:	nop    DWORD PTR [rax+0x0]
  40e5b0:	push   rbp
  40e5b1:	push   r15
  40e5b3:	push   r14
  40e5b5:	push   r13
  40e5b7:	push   r12
  40e5b9:	push   rbx
  40e5ba:	sub    rsp,0x18
  40e5be:	mov    rax,QWORD PTR [rdi+0x8]
  40e5c2:	cmp    rax,QWORD PTR [rip+0x55a07]        # 463fd0 <strcmp@plt+0x60838>
  40e5c9:	jne    40e80a <strcmp@plt+0xb072>
  40e5cf:	mov    r14,rsi
  40e5d2:	mov    rbx,rdi
  40e5d5:	xor    eax,eax
  40e5d7:	call   41fee0 <strcmp@plt+0x1c748>
  40e5dc:	test   rax,rax
  40e5df:	je     40e656 <strcmp@plt+0xaebe>
  40e5e1:	mov    r15,rax
  40e5e4:	mov    rdi,QWORD PTR [rbx+0x70]
  40e5e8:	mov    rsi,r14
  40e5eb:	xor    edx,edx
  40e5ed:	call   407c60 <strcmp@plt+0x44c8>
  40e5f2:	test   rax,rax
  40e5f5:	je     40e671 <strcmp@plt+0xaed9>
  40e5f7:	mov    QWORD PTR [rsp+0x8],rax
  40e5fc:	mov    rdi,rax
  40e5ff:	call   431840 <strcmp@plt+0x2e0a8>
  40e604:	mov    rbp,rax
  40e607:	mov    rdi,rax
  40e60a:	call   422dd0 <strcmp@plt+0x1f638>
  40e60f:	mov    QWORD PTR [rsp+0x10],rax
  40e614:	mov    rdi,rbp
  40e617:	call   4277a0 <strcmp@plt+0x24008>
  40e61c:	test   eax,eax
  40e61e:	je     40e689 <strcmp@plt+0xaef1>
  40e620:	mov    rdi,rbp
  40e623:	call   426d40 <strcmp@plt+0x235a8>
  40e628:	mov    DWORD PTR [r14+0x48],eax
  40e62c:	test   eax,eax
  40e62e:	je     40e691 <strcmp@plt+0xaef9>
  40e630:	mov    edi,eax
  40e632:	mov    rsi,r14
  40e635:	mov    edx,0x20
  40e63a:	call   427820 <strcmp@plt+0x24088>
  40e63f:	mov    r12,rax
  40e642:	mov    edi,DWORD PTR [r14+0x48]
  40e646:	lea    rsi,[r14+0x20]
  40e64a:	mov    edx,0x20
  40e64f:	call   427820 <strcmp@plt+0x24088>
  40e654:	jmp    40e6a5 <strcmp@plt+0xaf0d>
  40e656:	lea    rsi,[rip+0x35e73]        # 4444d0 <strcmp@plt+0x40d38>
  40e65d:	xor    r15d,r15d
  40e660:	mov    edi,0x3
  40e665:	xor    eax,eax
  40e667:	call   42e520 <strcmp@plt+0x2ad88>
  40e66c:	jmp    40e7f8 <strcmp@plt+0xb060>
  40e671:	lea    rax,[rip+0x56748]        # 464dc0 <strcmp@plt+0x61628>
  40e678:	cmp    DWORD PTR [rax],0x3
  40e67b:	jge    40e7d7 <strcmp@plt+0xb03f>
  40e681:	xor    r15d,r15d
  40e684:	jmp    40e7f8 <strcmp@plt+0xb060>
  40e689:	mov    DWORD PTR [r14+0x48],0x0
  40e691:	mov    rdi,r14
  40e694:	call   423440 <strcmp@plt+0x1fca8>
  40e699:	mov    r12,rax
  40e69c:	lea    rdi,[r14+0x20]
  40e6a0:	call   423440 <strcmp@plt+0x1fca8>
  40e6a5:	cmp    DWORD PTR [rbx+0x80],0x0
  40e6ac:	mov    rbp,QWORD PTR [rbx+0x30]
  40e6b0:	mov    QWORD PTR [rsp],rax
  40e6b4:	je     40e6cc <strcmp@plt+0xaf34>
  40e6b6:	lea    rdi,[r14+0x20]
  40e6ba:	call   422ef0 <strcmp@plt+0x1f758>
  40e6bf:	movzx  esi,ax
  40e6c2:	mov    rdi,rbp
  40e6c5:	call   408720 <strcmp@plt+0x4f88>
  40e6ca:	jmp    40e6d7 <strcmp@plt+0xaf3f>
  40e6cc:	mov    rdi,rbp
  40e6cf:	mov    rsi,rax
  40e6d2:	call   4086d0 <strcmp@plt+0x4f38>
  40e6d7:	mov    r13,rax
  40e6da:	lea    rbp,[rbx+0x18]
  40e6de:	test   rax,rax
  40e6e1:	je     40e72e <strcmp@plt+0xaf96>
  40e6e3:	mov    rdi,r13
  40e6e6:	call   4307e0 <strcmp@plt+0x2d048>
  40e6eb:	mov    rdi,rax
  40e6ee:	call   423440 <strcmp@plt+0x1fca8>
  40e6f3:	mov    QWORD PTR [r15],rax
  40e6f6:	cmp    BYTE PTR [r13+0x10],0x0
  40e6fb:	jne    40e78c <strcmp@plt+0xaff4>
  40e701:	lea    rax,[rip+0x566b8]        # 464dc0 <strcmp@plt+0x61628>
  40e708:	cmp    DWORD PTR [rax],0x2
  40e70b:	jl     40e78c <strcmp@plt+0xaff4>
  40e70d:	mov    rdi,QWORD PTR [rsp]
  40e711:	call   422e20 <strcmp@plt+0x1f688>
  40e716:	lea    rsi,[rip+0x35e1b]        # 444538 <strcmp@plt+0x40da0>
  40e71d:	mov    edi,0x6
  40e722:	mov    rdx,rax
  40e725:	xor    eax,eax
  40e727:	call   42e520 <strcmp@plt+0x2ad88>
  40e72c:	jmp    40e78c <strcmp@plt+0xaff4>
  40e72e:	lea    rax,[rip+0x5668b]        # 464dc0 <strcmp@plt+0x61628>
  40e735:	cmp    DWORD PTR [rax],0x0
  40e738:	mov    r13,QWORD PTR [rsp]
  40e73c:	jle    40e75c <strcmp@plt+0xafc4>
  40e73e:	mov    rdi,r13
  40e741:	call   422e20 <strcmp@plt+0x1f688>
  40e746:	lea    rsi,[rip+0x35dbd]        # 44450a <strcmp@plt+0x40d72>
  40e74d:	mov    edi,0x5
  40e752:	mov    rdx,rax
  40e755:	xor    eax,eax
  40e757:	call   42e520 <strcmp@plt+0x2ad88>
  40e75c:	mov    rdi,rbp
  40e75f:	mov    rsi,r13
  40e762:	mov    rdx,r12
  40e765:	call   40bae0 <strcmp@plt+0x8348>
  40e76a:	mov    rdi,QWORD PTR [rbx+0x30]
  40e76e:	mov    rsi,r13
  40e771:	call   4086d0 <strcmp@plt+0x4f38>
  40e776:	mov    r13,rax
  40e779:	mov    rdi,rax
  40e77c:	call   4307e0 <strcmp@plt+0x2d048>
  40e781:	mov    rdi,rax
  40e784:	call   423440 <strcmp@plt+0x1fca8>
  40e789:	mov    QWORD PTR [r15],rax
  40e78c:	mov    rdi,QWORD PTR [rsp+0x10]
  40e791:	call   422ef0 <strcmp@plt+0x1f758>
  40e796:	movzx  esi,ax
  40e799:	mov    rdi,rbp
  40e79c:	call   40bd80 <strcmp@plt+0x85e8>
  40e7a1:	mov    rbp,QWORD PTR [rbx+0x38]
  40e7a5:	mov    rdi,QWORD PTR [rbx+0x40]
  40e7a9:	mov    rsi,QWORD PTR [rsp+0x8]
  40e7ae:	mov    rdx,r13
  40e7b1:	mov    rcx,rax
  40e7b4:	mov    r8,r14
  40e7b7:	mov    r9,r15
  40e7ba:	call   QWORD PTR [rbp+0x40]
  40e7bd:	mov    eax,DWORD PTR [rbx+0x58]
  40e7c0:	mov    DWORD PTR [r15+0x14],eax
  40e7c4:	mov    rdi,r12
  40e7c7:	call   422c90 <strcmp@plt+0x1f4f8>
  40e7cc:	mov    rdi,QWORD PTR [rsp]
  40e7d0:	call   422c90 <strcmp@plt+0x1f4f8>
  40e7d5:	jmp    40e7f8 <strcmp@plt+0xb060>
  40e7d7:	mov    rdi,r14
  40e7da:	call   422e20 <strcmp@plt+0x1f688>
  40e7df:	lea    rsi,[rip+0x3760f]        # 445df5 <strcmp@plt+0x4265d>
  40e7e6:	xor    r15d,r15d
  40e7e9:	mov    edi,0x7
  40e7ee:	mov    rdx,rax
  40e7f1:	xor    eax,eax
  40e7f3:	call   42e520 <strcmp@plt+0x2ad88>
  40e7f8:	mov    rax,r15
  40e7fb:	add    rsp,0x18
  40e7ff:	pop    rbx
  40e800:	pop    r12
  40e802:	pop    r13
  40e804:	pop    r14
  40e806:	pop    r15
  40e808:	pop    rbp
  40e809:	ret    
  40e80a:	lea    rdi,[rip+0x36724]        # 444f35 <strcmp@plt+0x4179d>
  40e811:	lea    rsi,[rip+0x36734]        # 444f4c <strcmp@plt+0x417b4>
  40e818:	lea    rdx,[rip+0x3673b]        # 444f5a <strcmp@plt+0x417c2>
  40e81f:	call   431eb0 <strcmp@plt+0x2e718>
  40e824:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e82e:	xchg   ax,ax
  40e830:	push   rax
  40e831:	mov    rcx,QWORD PTR [rdi+0x8]
  40e835:	cmp    rcx,QWORD PTR [rip+0x55794]        # 463fd0 <strcmp@plt+0x60838>
  40e83c:	jne    40e843 <strcmp@plt+0xb0ab>
  40e83e:	mov    rax,rdi
  40e841:	pop    rcx
  40e842:	ret    
  40e843:	lea    rdi,[rip+0x366eb]        # 444f35 <strcmp@plt+0x4179d>
  40e84a:	lea    rsi,[rip+0x366fb]        # 444f4c <strcmp@plt+0x417b4>
  40e851:	lea    rdx,[rip+0x36702]        # 444f5a <strcmp@plt+0x417c2>
  40e858:	call   431eb0 <strcmp@plt+0x2e718>
  40e85d:	nop    DWORD PTR [rax]
  40e860:	push   rbp
  40e861:	push   r15
  40e863:	push   r14
  40e865:	push   r13
  40e867:	push   r12
  40e869:	push   rbx
  40e86a:	sub    rsp,0x828
  40e871:	mov    QWORD PTR [rsp],rsi
  40e875:	mov    r12,rdi
  40e878:	call   42b980 <strcmp@plt+0x281e8>
  40e87d:	mov    r15,rax
  40e880:	mov    rax,QWORD PTR [r12]
  40e884:	mov    rdi,QWORD PTR [rax]
  40e887:	mov    rsi,r15
  40e88a:	call   42baa0 <strcmp@plt+0x28308>
  40e88f:	mov    rax,QWORD PTR [r12]
  40e893:	mov    rdi,QWORD PTR [rax+0x8]
  40e897:	mov    rsi,r15
  40e89a:	call   42baa0 <strcmp@plt+0x28308>
  40e89f:	mov    rax,QWORD PTR [r12]
  40e8a3:	mov    rcx,QWORD PTR [rax+0x10]
  40e8a7:	mov    rcx,QWORD PTR [rcx]
  40e8aa:	cmp    DWORD PTR [rcx],0x0
  40e8ad:	je     40e901 <strcmp@plt+0xb169>
  40e8af:	xor    ebp,ebp
  40e8b1:	mov    r13d,0x3
  40e8b7:	xor    ebx,ebx
  40e8b9:	jmp    40e8d0 <strcmp@plt+0xb138>
  40e8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e8c0:	inc    ebx
  40e8c2:	mov    rcx,QWORD PTR [rax+0x10]
  40e8c6:	mov    rcx,QWORD PTR [rcx]
  40e8c9:	add    ebp,0x2
  40e8cc:	cmp    ebx,DWORD PTR [rcx]
  40e8ce:	je     40e901 <strcmp@plt+0xb169>
  40e8d0:	mov    rdx,QWORD PTR [rcx+0x10]
  40e8d4:	mov    esi,ebx
  40e8d6:	shr    esi,0x4
  40e8d9:	mov    edi,ebp
  40e8db:	and    dil,0x1e
  40e8df:	shlx   edi,r13d,edi
  40e8e4:	test   DWORD PTR [rdx+rsi*4],edi
  40e8e7:	jne    40e8c0 <strcmp@plt+0xb128>
  40e8e9:	mov    rax,QWORD PTR [rcx+0x20]
  40e8ed:	mov    ecx,ebx
  40e8ef:	mov    rdi,QWORD PTR [rax+rcx*8]
  40e8f3:	mov    rsi,r15
  40e8f6:	call   42baa0 <strcmp@plt+0x28308>
  40e8fb:	mov    rax,QWORD PTR [r12]
  40e8ff:	jmp    40e8c0 <strcmp@plt+0xb128>
  40e901:	mov    rcx,QWORD PTR [rax+0x18]
  40e905:	mov    rcx,QWORD PTR [rcx]
  40e908:	cmp    DWORD PTR [rcx],0x0
  40e90b:	je     40e961 <strcmp@plt+0xb1c9>
  40e90d:	xor    ebp,ebp
  40e90f:	mov    r13d,0x3
  40e915:	xor    ebx,ebx
  40e917:	jmp    40e930 <strcmp@plt+0xb198>
  40e919:	nop    DWORD PTR [rax+0x0]
  40e920:	inc    ebx
  40e922:	mov    rcx,QWORD PTR [rax+0x18]
  40e926:	mov    rcx,QWORD PTR [rcx]
  40e929:	add    ebp,0x2
  40e92c:	cmp    ebx,DWORD PTR [rcx]
  40e92e:	je     40e961 <strcmp@plt+0xb1c9>
  40e930:	mov    rdx,QWORD PTR [rcx+0x10]
  40e934:	mov    esi,ebx
  40e936:	shr    esi,0x4
  40e939:	mov    edi,ebp
  40e93b:	and    dil,0x1e
  40e93f:	shlx   edi,r13d,edi
  40e944:	test   DWORD PTR [rdx+rsi*4],edi
  40e947:	jne    40e920 <strcmp@plt+0xb188>
  40e949:	mov    rax,QWORD PTR [rcx+0x20]
  40e94d:	mov    ecx,ebx
  40e94f:	mov    rdi,QWORD PTR [rax+rcx*8]
  40e953:	mov    rsi,r15
  40e956:	call   42baa0 <strcmp@plt+0x28308>
  40e95b:	mov    rax,QWORD PTR [r12]
  40e95f:	jmp    40e920 <strcmp@plt+0xb188>
  40e961:	mov    rdi,QWORD PTR [rax+0x20]
  40e965:	mov    rsi,r15
  40e968:	call   42baa0 <strcmp@plt+0x28308>
  40e96d:	mov    rax,QWORD PTR [r12]
  40e971:	mov    rdi,QWORD PTR [rax+0x20]
  40e975:	mov    rsi,r15
  40e978:	call   42baa0 <strcmp@plt+0x28308>
  40e97d:	mov    rax,QWORD PTR [r15+0x8]
  40e981:	cmp    rax,r15
  40e984:	je     40eab2 <strcmp@plt+0xb31a>
  40e98a:	mov    QWORD PTR [rsp+0x8],rax
  40e98f:	mov    rax,QWORD PTR [rax+0x10]
  40e993:	mov    rbp,QWORD PTR [rax]
  40e996:	test   rbp,rbp
  40e999:	je     40eaa0 <strcmp@plt+0xb308>
  40e99f:	xor    r13d,r13d
  40e9a2:	cmp    QWORD PTR [rbp+0x8],0x0
  40e9a7:	jne    40e9d3 <strcmp@plt+0xb23b>
  40e9a9:	jmp    40ea60 <strcmp@plt+0xb2c8>
  40e9ae:	xchg   ax,ax
  40e9b0:	test   rcx,rcx
  40e9b3:	je     40ea8a <strcmp@plt+0xb2f2>
  40e9b9:	mov    rax,rcx
  40e9bc:	mov    rbp,rax
  40e9bf:	test   rax,rax
  40e9c2:	je     40eaa0 <strcmp@plt+0xb308>
  40e9c8:	cmp    QWORD PTR [rbp+0x8],0x0
  40e9cd:	je     40ea60 <strcmp@plt+0xb2c8>
  40e9d3:	mov    rax,QWORD PTR [rbp+0x28]
  40e9d7:	mov    r14,QWORD PTR [rax]
  40e9da:	test   r14,r14
  40e9dd:	je     40ea60 <strcmp@plt+0xb2c8>
  40e9e3:	xor    r12d,r12d
  40e9e6:	cmp    QWORD PTR [r14+0x8],0x0
  40e9eb:	jne    40ea07 <strcmp@plt+0xb26f>
  40e9ed:	jmp    40ea2c <strcmp@plt+0xb294>
  40e9ef:	nop
  40e9f0:	test   rcx,rcx
  40e9f3:	je     40ea48 <strcmp@plt+0xb2b0>
  40e9f5:	mov    rax,rcx
  40e9f8:	mov    r14,rax
  40e9fb:	test   rax,rax
  40e9fe:	je     40ea60 <strcmp@plt+0xb2c8>
  40ea00:	cmp    QWORD PTR [r14+0x8],0x0
  40ea05:	je     40ea2c <strcmp@plt+0xb294>
  40ea07:	mov    rbx,QWORD PTR [r14+0x28]
  40ea0b:	test   rbx,rbx
  40ea0e:	je     40ea2c <strcmp@plt+0xb294>
  40ea10:	mov    rdi,rbx
  40ea13:	call   4317d0 <strcmp@plt+0x2e038>
  40ea18:	mov    rdi,rax
  40ea1b:	mov    rsi,QWORD PTR [rsp]
  40ea1f:	call   429330 <strcmp@plt+0x25b98>
  40ea24:	cmp    al,0x1
  40ea26:	je     40eab4 <strcmp@plt+0xb31c>
  40ea2c:	mov    rax,QWORD PTR [r14+0x10]
  40ea30:	mov    rcx,QWORD PTR [r14+0x18]
  40ea34:	test   rax,rax
  40ea37:	je     40e9f0 <strcmp@plt+0xb258>
  40ea39:	test   rcx,rcx
  40ea3c:	je     40e9f8 <strcmp@plt+0xb260>
  40ea3e:	mov    QWORD PTR [rsp+r12*8+0x10],rcx
  40ea43:	inc    r12
  40ea46:	jmp    40e9f8 <strcmp@plt+0xb260>
  40ea48:	test   r12,r12
  40ea4b:	je     40ea60 <strcmp@plt+0xb2c8>
  40ea4d:	mov    rax,QWORD PTR [rsp+r12*8+0x8]
  40ea52:	dec    r12
  40ea55:	jmp    40e9f8 <strcmp@plt+0xb260>
  40ea57:	nop    WORD PTR [rax+rax*1+0x0]
  40ea60:	mov    rax,QWORD PTR [rbp+0x10]
  40ea64:	mov    rcx,QWORD PTR [rbp+0x18]
  40ea68:	test   rax,rax
  40ea6b:	je     40e9b0 <strcmp@plt+0xb218>
  40ea71:	test   rcx,rcx
  40ea74:	je     40e9bc <strcmp@plt+0xb224>
  40ea7a:	mov    QWORD PTR [rsp+r13*8+0x420],rcx
  40ea82:	inc    r13
  40ea85:	jmp    40e9bc <strcmp@plt+0xb224>
  40ea8a:	test   r13,r13
  40ea8d:	je     40eaa0 <strcmp@plt+0xb308>
  40ea8f:	mov    rax,QWORD PTR [rsp+r13*8+0x418]
  40ea97:	dec    r13
  40ea9a:	jmp    40e9bc <strcmp@plt+0xb224>
  40ea9f:	nop
  40eaa0:	mov    rax,QWORD PTR [rsp+0x8]
  40eaa5:	mov    rax,QWORD PTR [rax+0x8]
  40eaa9:	cmp    rax,r15
  40eaac:	jne    40e98a <strcmp@plt+0xb1f2>
  40eab2:	xor    ebx,ebx
  40eab4:	mov    rdi,r15
  40eab7:	call   42bff0 <strcmp@plt+0x28858>
  40eabc:	test   rbx,rbx
  40eabf:	jne    40eaef <strcmp@plt+0xb357>
  40eac1:	lea    rax,[rip+0x562f8]        # 464dc0 <strcmp@plt+0x61628>
  40eac8:	cmp    DWORD PTR [rax],0x2
  40eacb:	jl     40eaef <strcmp@plt+0xb357>
  40eacd:	mov    rax,QWORD PTR [rsp]
  40ead1:	mov    rdi,QWORD PTR [rax]
  40ead4:	call   422e20 <strcmp@plt+0x1f688>
  40ead9:	lea    rsi,[rip+0x374c7]        # 445fa7 <strcmp@plt+0x4280f>
  40eae0:	mov    edi,0x6
  40eae5:	mov    rdx,rax
  40eae8:	xor    eax,eax
  40eaea:	call   42e520 <strcmp@plt+0x2ad88>
  40eaef:	mov    rax,rbx
  40eaf2:	add    rsp,0x828
  40eaf9:	pop    rbx
  40eafa:	pop    r12
  40eafc:	pop    r13
  40eafe:	pop    r14
  40eb00:	pop    r15
  40eb02:	pop    rbp
  40eb03:	ret    
  40eb04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eb0e:	xchg   ax,ax
  40eb10:	push   rbp
  40eb11:	push   r15
  40eb13:	push   r14
  40eb15:	push   r13
  40eb17:	push   r12
  40eb19:	push   rbx
  40eb1a:	sub    rsp,0x28
  40eb1e:	mov    r12,rdi
  40eb21:	cmp    DWORD PTR [rdi+0x80],0x1
  40eb28:	jne    40eddc <strcmp@plt+0xb644>
  40eb2e:	mov    rax,QWORD PTR [rsi+0x10]
  40eb32:	cmp    DWORD PTR [rax+0x18],0x0
  40eb36:	je     40ee4a <strcmp@plt+0xb6b2>
  40eb3c:	mov    rax,QWORD PTR [rax+0x8]
  40eb40:	mov    rax,QWORD PTR [rax+0x10]
  40eb44:	mov    rax,QWORD PTR [rax]
  40eb47:	mov    QWORD PTR [rsp],rax
  40eb4b:	cmp    DWORD PTR [rax+0x18],0x0
  40eb4f:	je     40ee4a <strcmp@plt+0xb6b2>
  40eb55:	mov    rax,QWORD PTR [rsi+0x8]
  40eb59:	mov    rcx,QWORD PTR [rax+0x8]
  40eb5d:	cmp    rcx,rax
  40eb60:	je     40ee4a <strcmp@plt+0xb6b2>
  40eb66:	lea    r13,[rip+0x61a43]        # 4705b0 <strcmp@plt+0x6ce18>
  40eb6d:	mov    QWORD PTR [rsp+0x8],r12
  40eb72:	mov    QWORD PTR [rsp+0x10],rsi
  40eb77:	jmp    40eba7 <strcmp@plt+0xb40f>
  40eb79:	nop    DWORD PTR [rax+0x0]
  40eb80:	mov    rdi,rbx
  40eb83:	call   42bff0 <strcmp@plt+0x28858>
  40eb88:	lea    r13,[rip+0x61a21]        # 4705b0 <strcmp@plt+0x6ce18>
  40eb8f:	mov    rcx,QWORD PTR [rsp+0x20]
  40eb94:	mov    rcx,QWORD PTR [rcx+0x8]
  40eb98:	mov    rsi,QWORD PTR [rsp+0x10]
  40eb9d:	cmp    rcx,QWORD PTR [rsi+0x8]
  40eba1:	je     40ee4a <strcmp@plt+0xb6b2>
  40eba7:	mov    QWORD PTR [rsp+0x20],rcx
  40ebac:	mov    r15,QWORD PTR [rcx+0x10]
  40ebb0:	mov    rdi,r15
  40ebb3:	call   4317d0 <strcmp@plt+0x2e038>
  40ebb8:	mov    QWORD PTR [rsp+0x18],rax
  40ebbd:	mov    rdi,rax
  40ebc0:	mov    rsi,QWORD PTR [rsp]
  40ebc4:	call   4290a0 <strcmp@plt+0x25908>
  40ebc9:	mov    r14,rax
  40ebcc:	mov    rdi,QWORD PTR [r13+0x0]
  40ebd0:	mov    rsi,r15
  40ebd3:	mov    edx,0x8
  40ebd8:	call   437500 <strcmp@plt+0x33d68>
  40ebdd:	mov    r12,rax
  40ebe0:	mov    rbp,QWORD PTR [rax+0x8]
  40ebe4:	cmp    rbp,rax
  40ebe7:	jne    40ebf9 <strcmp@plt+0xb461>
  40ebe9:	jmp    40ec30 <strcmp@plt+0xb498>
  40ebeb:	nop    DWORD PTR [rax+rax*1+0x0]
  40ebf0:	mov    rbp,QWORD PTR [rbp+0x8]
  40ebf4:	cmp    rbp,r12
  40ebf7:	je     40ec30 <strcmp@plt+0xb498>
  40ebf9:	mov    rbx,QWORD PTR [rbp+0x10]
  40ebfd:	mov    rdi,rbx
  40ec00:	call   436ff0 <strcmp@plt+0x33858>
  40ec05:	cmp    QWORD PTR [rax+0x8],r14
  40ec09:	jne    40ebf0 <strcmp@plt+0xb458>
  40ec0b:	mov    rdx,QWORD PTR [r13+0x0]
  40ec0f:	lea    rax,[rip+0x619a2]        # 4705b8 <strcmp@plt+0x6ce20>
  40ec16:	mov    rcx,QWORD PTR [rax]
  40ec19:	mov    rdi,r15
  40ec1c:	mov    rsi,rbx
  40ec1f:	call   4371e0 <strcmp@plt+0x33a48>
  40ec24:	jmp    40ebf0 <strcmp@plt+0xb458>
  40ec26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ec30:	mov    rdi,r12
  40ec33:	call   42bff0 <strcmp@plt+0x28858>
  40ec38:	mov    rdi,QWORD PTR [r13+0x0]
  40ec3c:	mov    rsi,r15
  40ec3f:	mov    edx,0x3
  40ec44:	call   437500 <strcmp@plt+0x33d68>
  40ec49:	mov    r12,rax
  40ec4c:	mov    rbx,QWORD PTR [rax+0x8]
  40ec50:	cmp    rbx,rax
  40ec53:	jne    40ec69 <strcmp@plt+0xb4d1>
  40ec55:	jmp    40eca0 <strcmp@plt+0xb508>
  40ec57:	nop    WORD PTR [rax+rax*1+0x0]
  40ec60:	mov    rbx,QWORD PTR [rbx+0x8]
  40ec64:	cmp    rbx,r12
  40ec67:	je     40eca0 <strcmp@plt+0xb508>
  40ec69:	mov    rbp,QWORD PTR [rbx+0x10]
  40ec6d:	mov    rdi,rbp
  40ec70:	call   436ff0 <strcmp@plt+0x33858>
  40ec75:	cmp    QWORD PTR [rax+0x10],r14
  40ec79:	jne    40ec60 <strcmp@plt+0xb4c8>
  40ec7b:	mov    rdx,QWORD PTR [r13+0x0]
  40ec7f:	lea    rax,[rip+0x61932]        # 4705b8 <strcmp@plt+0x6ce20>
  40ec86:	mov    rcx,QWORD PTR [rax]
  40ec89:	mov    rdi,r15
  40ec8c:	mov    rsi,rbp
  40ec8f:	call   4371e0 <strcmp@plt+0x33a48>
  40ec94:	jmp    40ec60 <strcmp@plt+0xb4c8>
  40ec96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40eca0:	mov    rdi,r12
  40eca3:	call   42bff0 <strcmp@plt+0x28858>
  40eca8:	cmp    BYTE PTR [r14+0x8],0x1
  40ecad:	jne    40ed90 <strcmp@plt+0xb5f8>
  40ecb3:	lea    rax,[rip+0x56106]        # 464dc0 <strcmp@plt+0x61628>
  40ecba:	cmp    DWORD PTR [rax],0x2
  40ecbd:	jl     40ecee <strcmp@plt+0xb556>
  40ecbf:	mov    rdi,QWORD PTR [rsp]
  40ecc3:	call   422e20 <strcmp@plt+0x1f688>
  40ecc8:	mov    rbx,rax
  40eccb:	mov    rdi,QWORD PTR [rsp+0x18]
  40ecd0:	call   422e20 <strcmp@plt+0x1f688>
  40ecd5:	mov    edi,0x6
  40ecda:	lea    rsi,[rip+0x37273]        # 445f54 <strcmp@plt+0x427bc>
  40ece1:	mov    rdx,rbx
  40ece4:	mov    rcx,rax
  40ece7:	xor    eax,eax
  40ece9:	call   42e520 <strcmp@plt+0x2ad88>
  40ecee:	mov    r12,QWORD PTR [rsp+0x8]
  40ecf3:	mov    rax,QWORD PTR [r12+0x78]
  40ecf8:	cmp    DWORD PTR [rax+0x18],0x0
  40ecfc:	lea    r13,[rip+0x618ad]        # 4705b0 <strcmp@plt+0x6ce18>
  40ed03:	je     40eb8f <strcmp@plt+0xb3f7>
  40ed09:	mov    rbp,QWORD PTR [rax+0x8]
  40ed0d:	cmp    rbp,rax
  40ed10:	je     40eb8f <strcmp@plt+0xb3f7>
  40ed16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed20:	mov    rbx,QWORD PTR [rbp+0x10]
  40ed24:	mov    edi,0x18
  40ed29:	call   431d90 <strcmp@plt+0x2e5f8>
  40ed2e:	mov    QWORD PTR [rax],r15
  40ed31:	mov    QWORD PTR [rax+0x8],r14
  40ed35:	mov    QWORD PTR [rax+0x10],rbx
  40ed39:	mov    edi,0x8
  40ed3e:	mov    rsi,r12
  40ed41:	lea    rdx,[rip+0x1098]        # 40fde0 <strcmp@plt+0xc648>
  40ed48:	mov    rcx,rax
  40ed4b:	lea    r8,[rip+0x13ee]        # 410140 <strcmp@plt+0xc9a8>
  40ed52:	call   437190 <strcmp@plt+0x339f8>
  40ed57:	mov    rbx,rax
  40ed5a:	mov    rdi,QWORD PTR [r13+0x0]
  40ed5e:	mov    rsi,r15
  40ed61:	mov    rdx,rax
  40ed64:	call   437490 <strcmp@plt+0x33cf8>
  40ed69:	mov    rdi,rbx
  40ed6c:	mov    esi,0x2
  40ed71:	call   437020 <strcmp@plt+0x33888>
  40ed76:	mov    rbp,QWORD PTR [rbp+0x8]
  40ed7a:	cmp    rbp,QWORD PTR [r12+0x78]
  40ed7f:	jne    40ed20 <strcmp@plt+0xb588>
  40ed81:	jmp    40eb8f <strcmp@plt+0xb3f7>
  40ed86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ed90:	mov    rdi,QWORD PTR [r13+0x0]
  40ed94:	mov    rsi,r15
  40ed97:	mov    edx,0x3
  40ed9c:	call   437500 <strcmp@plt+0x33d68>
  40eda1:	mov    rbx,rax
  40eda4:	mov    rbp,QWORD PTR [rax+0x8]
  40eda8:	cmp    rbp,rax
  40edab:	je     40eb80 <strcmp@plt+0xb3e8>
  40edb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40edbb:	nop    DWORD PTR [rax+rax*1+0x0]
  40edc0:	mov    rdi,QWORD PTR [rbp+0x10]
  40edc4:	mov    esi,0x2
  40edc9:	call   437020 <strcmp@plt+0x33888>
  40edce:	mov    rbp,QWORD PTR [rbp+0x8]
  40edd2:	cmp    rbp,rbx
  40edd5:	jne    40edc0 <strcmp@plt+0xb628>
  40edd7:	jmp    40eb80 <strcmp@plt+0xb3e8>
  40eddc:	lea    rax,[rip+0x55fdd]        # 464dc0 <strcmp@plt+0x61628>
  40ede3:	cmp    DWORD PTR [rax],0x0
  40ede6:	jle    40ee00 <strcmp@plt+0xb668>
  40ede8:	lea    rsi,[rip+0x36962]        # 445751 <strcmp@plt+0x41fb9>
  40edef:	mov    edi,0x5
  40edf4:	mov    edx,0x4
  40edf9:	xor    eax,eax
  40edfb:	call   42e520 <strcmp@plt+0x2ad88>
  40ee00:	mov    rdi,QWORD PTR [r12+0xa0]
  40ee08:	test   rdi,rdi
  40ee0b:	jne    40ee32 <strcmp@plt+0xb69a>
  40ee0d:	lea    rdx,[rip+0x133c]        # 410150 <strcmp@plt+0xc9b8>
  40ee14:	mov    edi,0x6
  40ee19:	mov    rsi,r12
  40ee1c:	mov    rcx,r12
  40ee1f:	xor    r8d,r8d
  40ee22:	call   437140 <strcmp@plt+0x339a8>
  40ee27:	mov    rdi,rax
  40ee2a:	mov    QWORD PTR [r12+0xa0],rax
  40ee32:	mov    esi,0x4
  40ee37:	add    rsp,0x28
  40ee3b:	pop    rbx
  40ee3c:	pop    r12
  40ee3e:	pop    r13
  40ee40:	pop    r14
  40ee42:	pop    r15
  40ee44:	pop    rbp
  40ee45:	jmp    437020 <strcmp@plt+0x33888>
  40ee4a:	add    rsp,0x28
  40ee4e:	pop    rbx
  40ee4f:	pop    r12
  40ee51:	pop    r13
  40ee53:	pop    r14
  40ee55:	pop    r15
  40ee57:	pop    rbp
  40ee58:	ret    
  40ee59:	nop    DWORD PTR [rax+0x0]
  40ee60:	push   rbp
  40ee61:	push   r15
  40ee63:	push   r14
  40ee65:	push   r13
  40ee67:	push   r12
  40ee69:	push   rbx
  40ee6a:	sub    rsp,0x858
  40ee71:	mov    rax,QWORD PTR [rdi+0x78]
  40ee75:	cmp    DWORD PTR [rax+0x18],0x0
  40ee79:	je     40f1f0 <strcmp@plt+0xba58>
  40ee7f:	mov    rbx,rdi
  40ee82:	call   42b980 <strcmp@plt+0x281e8>
  40ee87:	mov    rbp,rax
  40ee8a:	mov    rax,QWORD PTR [rbx+0x70]
  40ee8e:	mov    rax,QWORD PTR [rax]
  40ee91:	mov    rdi,QWORD PTR [rax]
  40ee94:	mov    rsi,rbp
  40ee97:	call   42baa0 <strcmp@plt+0x28308>
  40ee9c:	mov    rax,QWORD PTR [rbx+0x70]
  40eea0:	mov    rax,QWORD PTR [rax]
  40eea3:	mov    rdi,QWORD PTR [rax+0x8]
  40eea7:	mov    QWORD PTR [rsp+0x8],rbp
  40eeac:	mov    rsi,rbp
  40eeaf:	call   42baa0 <strcmp@plt+0x28308>
  40eeb4:	mov    QWORD PTR [rsp+0x20],rbx
  40eeb9:	mov    rax,QWORD PTR [rbx+0x70]
  40eebd:	mov    rcx,QWORD PTR [rax]
  40eec0:	mov    rdx,QWORD PTR [rcx+0x10]
  40eec4:	mov    rdx,QWORD PTR [rdx]
  40eec7:	cmp    DWORD PTR [rdx],0x0
  40eeca:	je     40ef2b <strcmp@plt+0xb793>
  40eecc:	xor    ebx,ebx
  40eece:	mov    r14d,0x3
  40eed4:	xor    ebp,ebp
  40eed6:	jmp    40eef3 <strcmp@plt+0xb75b>
  40eed8:	nop    DWORD PTR [rax+rax*1+0x0]
  40eee0:	inc    ebp
  40eee2:	mov    rcx,QWORD PTR [rax]
  40eee5:	mov    rdx,QWORD PTR [rcx+0x10]
  40eee9:	mov    rdx,QWORD PTR [rdx]
  40eeec:	add    ebx,0x2
  40eeef:	cmp    ebp,DWORD PTR [rdx]
  40eef1:	je     40ef2b <strcmp@plt+0xb793>
  40eef3:	mov    rcx,QWORD PTR [rdx+0x10]
  40eef7:	mov    esi,ebp
  40eef9:	shr    esi,0x4
  40eefc:	mov    edi,ebx
  40eefe:	and    dil,0x1e
  40ef02:	shlx   edi,r14d,edi
  40ef07:	test   DWORD PTR [rcx+rsi*4],edi
  40ef0a:	jne    40eee0 <strcmp@plt+0xb748>
  40ef0c:	mov    rax,QWORD PTR [rdx+0x20]
  40ef10:	mov    ecx,ebp
  40ef12:	mov    rdi,QWORD PTR [rax+rcx*8]
  40ef16:	mov    rsi,QWORD PTR [rsp+0x8]
  40ef1b:	call   42baa0 <strcmp@plt+0x28308>
  40ef20:	mov    rax,QWORD PTR [rsp+0x20]
  40ef25:	mov    rax,QWORD PTR [rax+0x70]
  40ef29:	jmp    40eee0 <strcmp@plt+0xb748>
  40ef2b:	mov    rdx,QWORD PTR [rcx+0x18]
  40ef2f:	mov    rdx,QWORD PTR [rdx]
  40ef32:	cmp    DWORD PTR [rdx],0x0
  40ef35:	je     40ef9b <strcmp@plt+0xb803>
  40ef37:	xor    ebx,ebx
  40ef39:	mov    r14d,0x3
  40ef3f:	xor    ebp,ebp
  40ef41:	jmp    40ef63 <strcmp@plt+0xb7cb>
  40ef43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ef4d:	nop    DWORD PTR [rax]
  40ef50:	inc    ebp
  40ef52:	mov    rcx,QWORD PTR [rax]
  40ef55:	mov    rdx,QWORD PTR [rcx+0x18]
  40ef59:	mov    rdx,QWORD PTR [rdx]
  40ef5c:	add    ebx,0x2
  40ef5f:	cmp    ebp,DWORD PTR [rdx]
  40ef61:	je     40ef9b <strcmp@plt+0xb803>
  40ef63:	mov    rcx,QWORD PTR [rdx+0x10]
  40ef67:	mov    esi,ebp
  40ef69:	shr    esi,0x4
  40ef6c:	mov    edi,ebx
  40ef6e:	and    dil,0x1e
  40ef72:	shlx   edi,r14d,edi
  40ef77:	test   DWORD PTR [rcx+rsi*4],edi
  40ef7a:	jne    40ef50 <strcmp@plt+0xb7b8>
  40ef7c:	mov    rax,QWORD PTR [rdx+0x20]
  40ef80:	mov    ecx,ebp
  40ef82:	mov    rdi,QWORD PTR [rax+rcx*8]
  40ef86:	mov    rsi,QWORD PTR [rsp+0x8]
  40ef8b:	call   42baa0 <strcmp@plt+0x28308>
  40ef90:	mov    rax,QWORD PTR [rsp+0x20]
  40ef95:	mov    rax,QWORD PTR [rax+0x70]
  40ef99:	jmp    40ef50 <strcmp@plt+0xb7b8>
  40ef9b:	mov    rdi,QWORD PTR [rcx+0x20]
  40ef9f:	mov    rbx,QWORD PTR [rsp+0x8]
  40efa4:	mov    rsi,rbx
  40efa7:	call   42baa0 <strcmp@plt+0x28308>
  40efac:	mov    rax,QWORD PTR [rsp+0x20]
  40efb1:	mov    rax,QWORD PTR [rax+0x70]
  40efb5:	mov    rax,QWORD PTR [rax]
  40efb8:	mov    rdi,QWORD PTR [rax+0x20]
  40efbc:	mov    rsi,rbx
  40efbf:	call   42baa0 <strcmp@plt+0x28308>
  40efc4:	mov    rax,QWORD PTR [rbx+0x8]
  40efc8:	cmp    rax,rbx
  40efcb:	je     40f1df <strcmp@plt+0xba47>
  40efd1:	lea    r14,[rip+0x4a8]        # 40f480 <strcmp@plt+0xbce8>
  40efd8:	mov    r15,QWORD PTR [rsp+0x20]
  40efdd:	jmp    40eff4 <strcmp@plt+0xb85c>
  40efdf:	nop
  40efe0:	mov    rax,QWORD PTR [rsp+0x30]
  40efe5:	mov    rax,QWORD PTR [rax+0x8]
  40efe9:	cmp    rax,QWORD PTR [rsp+0x8]
  40efee:	je     40f1df <strcmp@plt+0xba47>
  40eff4:	mov    QWORD PTR [rsp+0x30],rax
  40eff9:	mov    rax,QWORD PTR [rax+0x10]
  40effd:	mov    rcx,QWORD PTR [rax]
  40f000:	test   rcx,rcx
  40f003:	je     40efe0 <strcmp@plt+0xb848>
  40f005:	xor    eax,eax
  40f007:	mov    QWORD PTR [rsp+0x10],rax
  40f00c:	cmp    QWORD PTR [rcx+0x8],0x0
  40f011:	jne    40f03f <strcmp@plt+0xb8a7>
  40f013:	jmp    40f185 <strcmp@plt+0xb9ed>
  40f018:	nop    DWORD PTR [rax+rax*1+0x0]
  40f020:	test   rcx,rcx
  40f023:	je     40f1b9 <strcmp@plt+0xba21>
  40f029:	mov    rax,rcx
  40f02c:	mov    rcx,rax
  40f02f:	test   rax,rax
  40f032:	je     40efe0 <strcmp@plt+0xb848>
  40f034:	cmp    QWORD PTR [rcx+0x8],0x0
  40f039:	je     40f185 <strcmp@plt+0xb9ed>
  40f03f:	mov    QWORD PTR [rsp+0x38],rcx
  40f044:	mov    rax,QWORD PTR [rcx+0x28]
  40f048:	mov    rcx,QWORD PTR [rax]
  40f04b:	test   rcx,rcx
  40f04e:	je     40f180 <strcmp@plt+0xb9e8>
  40f054:	xor    eax,eax
  40f056:	mov    QWORD PTR [rsp+0x18],rax
  40f05b:	jmp    40f078 <strcmp@plt+0xb8e0>
  40f05d:	nop    DWORD PTR [rax]
  40f060:	test   rcx,rcx
  40f063:	je     40f15b <strcmp@plt+0xb9c3>
  40f069:	mov    rax,rcx
  40f06c:	mov    rcx,rax
  40f06f:	test   rax,rax
  40f072:	je     40f180 <strcmp@plt+0xb9e8>
  40f078:	mov    QWORD PTR [rsp+0x28],rcx
  40f07d:	cmp    QWORD PTR [rcx+0x8],0x0
  40f082:	lea    r13,[rip+0x61527]        # 4705b0 <strcmp@plt+0x6ce18>
  40f089:	je     40f125 <strcmp@plt+0xb98d>
  40f08f:	mov    rax,QWORD PTR [rsp+0x28]
  40f094:	mov    rbx,QWORD PTR [rax+0x28]
  40f098:	test   rbx,rbx
  40f09b:	je     40f125 <strcmp@plt+0xb98d>
  40f0a1:	mov    rdx,QWORD PTR [r13+0x0]
  40f0a5:	lea    rax,[rip+0x6150c]        # 4705b8 <strcmp@plt+0x6ce20>
  40f0ac:	mov    rcx,QWORD PTR [rax]
  40f0af:	mov    rdi,rbx
  40f0b2:	mov    esi,0x2
  40f0b7:	call   437310 <strcmp@plt+0x33b78>
  40f0bc:	mov    rax,QWORD PTR [r15+0x78]
  40f0c0:	mov    r12,QWORD PTR [rax+0x8]
  40f0c4:	cmp    r12,rax
  40f0c7:	je     40f125 <strcmp@plt+0xb98d>
  40f0c9:	nop    DWORD PTR [rax+0x0]
  40f0d0:	mov    rbp,QWORD PTR [r12+0x10]
  40f0d5:	mov    edi,0x10
  40f0da:	call   431d90 <strcmp@plt+0x2e5f8>
  40f0df:	mov    QWORD PTR [rax],rbx
  40f0e2:	mov    QWORD PTR [rax+0x8],rbp
  40f0e6:	mov    edi,0x2
  40f0eb:	mov    rsi,r15
  40f0ee:	lea    rdx,[rip+0x11b]        # 40f210 <strcmp@plt+0xba78>
  40f0f5:	mov    rcx,rax
  40f0f8:	mov    r8,r14
  40f0fb:	call   437190 <strcmp@plt+0x339f8>
  40f100:	mov    rbp,rax
  40f103:	mov    rdi,QWORD PTR [r13+0x0]
  40f107:	mov    rsi,rbx
  40f10a:	mov    rdx,rax
  40f10d:	call   437490 <strcmp@plt+0x33cf8>
  40f112:	mov    rdi,rbp
  40f115:	call   40f210 <strcmp@plt+0xba78>
  40f11a:	mov    r12,QWORD PTR [r12+0x8]
  40f11f:	cmp    r12,QWORD PTR [r15+0x78]
  40f123:	jne    40f0d0 <strcmp@plt+0xb938>
  40f125:	mov    rcx,QWORD PTR [rsp+0x28]
  40f12a:	mov    rax,QWORD PTR [rcx+0x10]
  40f12e:	mov    rcx,QWORD PTR [rcx+0x18]
  40f132:	test   rax,rax
  40f135:	je     40f060 <strcmp@plt+0xb8c8>
  40f13b:	test   rcx,rcx
  40f13e:	je     40f06c <strcmp@plt+0xb8d4>
  40f144:	mov    rdx,QWORD PTR [rsp+0x18]
  40f149:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  40f14e:	inc    rdx
  40f151:	mov    QWORD PTR [rsp+0x18],rdx
  40f156:	jmp    40f06c <strcmp@plt+0xb8d4>
  40f15b:	cmp    QWORD PTR [rsp+0x18],0x0
  40f161:	je     40f180 <strcmp@plt+0xb9e8>
  40f163:	mov    rcx,QWORD PTR [rsp+0x18]
  40f168:	mov    rax,QWORD PTR [rsp+rcx*8+0x38]
  40f16d:	dec    rcx
  40f170:	mov    QWORD PTR [rsp+0x18],rcx
  40f175:	jmp    40f06c <strcmp@plt+0xb8d4>
  40f17a:	nop    WORD PTR [rax+rax*1+0x0]
  40f180:	mov    rcx,QWORD PTR [rsp+0x38]
  40f185:	mov    rax,QWORD PTR [rcx+0x10]
  40f189:	mov    rcx,QWORD PTR [rcx+0x18]
  40f18d:	test   rax,rax
  40f190:	je     40f020 <strcmp@plt+0xb888>
  40f196:	test   rcx,rcx
  40f199:	je     40f02c <strcmp@plt+0xb894>
  40f19f:	mov    rsi,QWORD PTR [rsp+0x10]
  40f1a4:	mov    QWORD PTR [rsp+rsi*8+0x450],rcx
  40f1ac:	inc    rsi
  40f1af:	mov    QWORD PTR [rsp+0x10],rsi
  40f1b4:	jmp    40f02c <strcmp@plt+0xb894>
  40f1b9:	cmp    QWORD PTR [rsp+0x10],0x0
  40f1bf:	je     40efe0 <strcmp@plt+0xb848>
  40f1c5:	mov    rcx,QWORD PTR [rsp+0x10]
  40f1ca:	mov    rax,QWORD PTR [rsp+rcx*8+0x448]
  40f1d2:	dec    rcx
  40f1d5:	mov    QWORD PTR [rsp+0x10],rcx
  40f1da:	jmp    40f02c <strcmp@plt+0xb894>
  40f1df:	mov    rdi,QWORD PTR [rsp+0x8]
  40f1e4:	call   42bff0 <strcmp@plt+0x28858>
  40f1e9:	mov    eax,0x1
  40f1ee:	jmp    40f1f2 <strcmp@plt+0xba5a>
  40f1f0:	xor    eax,eax
  40f1f2:	add    rsp,0x858
  40f1f9:	pop    rbx
  40f1fa:	pop    r12
  40f1fc:	pop    r13
  40f1fe:	pop    r14
  40f200:	pop    r15
  40f202:	pop    rbp
  40f203:	ret    
  40f204:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f20e:	xchg   ax,ax
  40f210:	push   rbp
  40f211:	push   r15
  40f213:	push   r14
  40f215:	push   r13
  40f217:	push   r12
  40f219:	push   rbx
  40f21a:	sub    rsp,0x68
  40f21e:	mov    r12,rdi
  40f221:	call   436ff0 <strcmp@plt+0x33858>
  40f226:	mov    rbp,rax
  40f229:	mov    rdi,r12
  40f22c:	call   437010 <strcmp@plt+0x33878>
  40f231:	mov    r14,rax
  40f234:	mov    rdi,r12
  40f237:	call   436fe0 <strcmp@plt+0x33848>
  40f23c:	mov    r15,rax
  40f23f:	mov    rdi,QWORD PTR [rbp+0x0]
  40f243:	call   4317d0 <strcmp@plt+0x2e038>
  40f248:	mov    rbx,rax
  40f24b:	mov    r13,QWORD PTR [rbp+0x8]
  40f24f:	mov    rdi,r14
  40f252:	call   432620 <strcmp@plt+0x2ee88>
  40f257:	cmp    eax,0x2710
  40f25c:	jg     40f2a2 <strcmp@plt+0xbb0a>
  40f25e:	mov    QWORD PTR [rsp+0x18],r15
  40f263:	xor    r15d,r15d
  40f266:	xor    eax,eax
  40f268:	call   432550 <strcmp@plt+0x2edb8>
  40f26d:	mov    QWORD PTR [rsp+0x8],rax
  40f272:	movzx  esi,BYTE PTR [r13+0x8]
  40f277:	mov    QWORD PTR [rsp],rbx
  40f27b:	mov    rdi,rbx
  40f27e:	call   4224c0 <strcmp@plt+0x1ed28>
  40f283:	test   rax,rax
  40f286:	je     40f46d <strcmp@plt+0xbcd5>
  40f28c:	mov    rbp,rax
  40f28f:	movzx  esi,WORD PTR [rax+0x24]
  40f293:	cmp    rsi,0xffff
  40f29a:	je     40f2fc <strcmp@plt+0xbb64>
  40f29c:	add    rsi,QWORD PTR [rbp+0x30]
  40f2a0:	jmp    40f2fe <strcmp@plt+0xbb66>
  40f2a2:	lea    rax,[rip+0x6130f]        # 4705b8 <strcmp@plt+0x6ce20>
  40f2a9:	mov    rdi,QWORD PTR [rax]
  40f2ac:	mov    rsi,r14
  40f2af:	call   4323d0 <strcmp@plt+0x2ec38>
  40f2b4:	mov    rdi,r12
  40f2b7:	mov    esi,0x3c
  40f2bc:	call   437020 <strcmp@plt+0x33888>
  40f2c1:	mov    rdi,rbx
  40f2c4:	call   422e20 <strcmp@plt+0x1f688>
  40f2c9:	mov    rbx,rax
  40f2cc:	mov    rdi,QWORD PTR [r13+0x0]
  40f2d0:	call   422e20 <strcmp@plt+0x1f688>
  40f2d5:	lea    rsi,[rip+0x36bbe]        # 445e9a <strcmp@plt+0x42702>
  40f2dc:	xor    r15d,r15d
  40f2df:	mov    edi,0x3
  40f2e4:	mov    rdx,rbx
  40f2e7:	mov    rcx,rax
  40f2ea:	mov    r8d,0x3c
  40f2f0:	xor    eax,eax
  40f2f2:	call   42e520 <strcmp@plt+0x2ad88>
  40f2f7:	jmp    40f46d <strcmp@plt+0xbcd5>
  40f2fc:	xor    esi,esi
  40f2fe:	mov    al,BYTE PTR [r13+0x18]
  40f302:	mov    cl,BYTE PTR [rsi]
  40f304:	shl    al,0x3
  40f307:	and    al,0x8
  40f309:	and    cl,0xf7
  40f30c:	or     cl,al
  40f30e:	mov    BYTE PTR [rsi],cl
  40f310:	mov    rax,QWORD PTR [rsp+0x8]
  40f315:	mov    QWORD PTR [rsi+0x4],rax
  40f319:	add    rsi,0xc
  40f31d:	movzx  edx,BYTE PTR [r13+0x8]
  40f322:	mov    rcx,QWORD PTR [r13+0x10]
  40f326:	mov    rdi,rbp
  40f329:	call   4226c0 <strcmp@plt+0x1ef28>
  40f32e:	cmp    eax,0x1
  40f331:	jne    40f46d <strcmp@plt+0xbcd5>
  40f337:	mov    rbx,QWORD PTR [r13+0x0]
  40f33b:	lea    rax,[rip+0x55a7e]        # 464dc0 <strcmp@plt+0x61628>
  40f342:	cmp    DWORD PTR [rax],0x0
  40f345:	jle    40f386 <strcmp@plt+0xbbee>
  40f347:	mov    rdi,rbp
  40f34a:	call   422570 <strcmp@plt+0x1edd8>
  40f34f:	mov    r15,rax
  40f352:	mov    rdi,QWORD PTR [rsp]
  40f356:	call   422e20 <strcmp@plt+0x1f688>
  40f35b:	mov    QWORD PTR [rsp+0x10],rax
  40f360:	mov    rdi,rbx
  40f363:	call   422e20 <strcmp@plt+0x1f688>
  40f368:	lea    rsi,[rip+0x363ce]        # 44573d <strcmp@plt+0x41fa5>
  40f36f:	mov    edi,0x5
  40f374:	mov    rdx,r15
  40f377:	mov    rcx,QWORD PTR [rsp+0x10]
  40f37c:	mov    r8,rax
  40f37f:	xor    eax,eax
  40f381:	call   42e520 <strcmp@plt+0x2ad88>
  40f386:	lea    r15,[rsp+0x20]
  40f38b:	mov    rdi,r15
  40f38e:	mov    esi,0x10f6
  40f393:	mov    edx,0x10f6
  40f398:	xor    ecx,ecx
  40f39a:	mov    r8,rbx
  40f39d:	call   435260 <strcmp@plt+0x31ac8>
  40f3a2:	mov    rdi,QWORD PTR [rsp+0x18]
  40f3a7:	mov    rsi,rbp
  40f3aa:	mov    rdx,r15
  40f3ad:	call   407920 <strcmp@plt+0x4188>
  40f3b2:	mov    rdi,rbp
  40f3b5:	call   42dd40 <strcmp@plt+0x2a5a8>
  40f3ba:	mov    rdi,r14
  40f3bd:	call   432620 <strcmp@plt+0x2ee88>
  40f3c2:	lea    rcx,[rip+0x559f7]        # 464dc0 <strcmp@plt+0x61628>
  40f3c9:	mov    ecx,DWORD PTR [rcx]
  40f3cb:	test   eax,eax
  40f3cd:	jle    40f411 <strcmp@plt+0xbc79>
  40f3cf:	test   ecx,ecx
  40f3d1:	jle    40f443 <strcmp@plt+0xbcab>
  40f3d3:	mov    rdi,QWORD PTR [rsp]
  40f3d7:	call   422e20 <strcmp@plt+0x1f688>
  40f3dc:	mov    r15,rax
  40f3df:	mov    rdi,QWORD PTR [r13+0x0]
  40f3e3:	call   422e20 <strcmp@plt+0x1f688>
  40f3e8:	mov    rbp,rax
  40f3eb:	mov    rdi,r14
  40f3ee:	call   432620 <strcmp@plt+0x2ee88>
  40f3f3:	lea    rsi,[rip+0x36a3e]        # 445e38 <strcmp@plt+0x426a0>
  40f3fa:	mov    edi,0x5
  40f3ff:	mov    rdx,r15
  40f402:	mov    rcx,rbp
  40f405:	mov    r8d,eax
  40f408:	xor    eax,eax
  40f40a:	call   42e520 <strcmp@plt+0x2ad88>
  40f40f:	jmp    40f443 <strcmp@plt+0xbcab>
  40f411:	test   ecx,ecx
  40f413:	jle    40f443 <strcmp@plt+0xbcab>
  40f415:	mov    rdi,QWORD PTR [rsp]
  40f419:	call   422e20 <strcmp@plt+0x1f688>
  40f41e:	mov    rbp,rax
  40f421:	mov    rdi,QWORD PTR [r13+0x0]
  40f425:	call   422e20 <strcmp@plt+0x1f688>
  40f42a:	lea    rsi,[rip+0x36a41]        # 445e72 <strcmp@plt+0x426da>
  40f431:	mov    edi,0x5
  40f436:	mov    rdx,rbp
  40f439:	mov    rcx,rax
  40f43c:	xor    eax,eax
  40f43e:	call   42e520 <strcmp@plt+0x2ad88>
  40f443:	lea    rax,[rip+0x6116e]        # 4705b8 <strcmp@plt+0x6ce20>
  40f44a:	mov    rdi,QWORD PTR [rax]
  40f44d:	mov    rsi,QWORD PTR [rsp+0x8]
  40f452:	mov    rdx,r14
  40f455:	call   431f60 <strcmp@plt+0x2e7c8>
  40f45a:	mov    rdi,r12
  40f45d:	mov    esi,0x3
  40f462:	call   437020 <strcmp@plt+0x33888>
  40f467:	mov    r15d,0x1
  40f46d:	mov    eax,r15d
  40f470:	add    rsp,0x68
  40f474:	pop    rbx
  40f475:	pop    r12
  40f477:	pop    r13
  40f479:	pop    r14
  40f47b:	pop    r15
  40f47d:	pop    rbp
  40f47e:	ret    
  40f47f:	nop
  40f480:	jmp    403790 <free@plt>
  40f485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f48f:	nop
  40f490:	push   rbp
  40f491:	push   r15
  40f493:	push   r14
  40f495:	push   r13
  40f497:	push   r12
  40f499:	push   rbx
  40f49a:	sub    rsp,0x418
  40f4a1:	test   rsi,rsi
  40f4a4:	je     40f74f <strcmp@plt+0xbfb7>
  40f4aa:	mov    r15,rsi
  40f4ad:	mov    r12,rdi
  40f4b0:	mov    rdi,rsi
  40f4b3:	call   4317d0 <strcmp@plt+0x2e038>
  40f4b8:	mov    r14,rax
  40f4bb:	cmp    DWORD PTR [r12+0x80],0x0
  40f4c4:	je     40f69f <strcmp@plt+0xbf07>
  40f4ca:	lea    rax,[rip+0x558ef]        # 464dc0 <strcmp@plt+0x61628>
  40f4d1:	cmp    DWORD PTR [rax],0x0
  40f4d4:	jle    40f4f4 <strcmp@plt+0xbd5c>
  40f4d6:	mov    rdi,r14
  40f4d9:	call   422e20 <strcmp@plt+0x1f688>
  40f4de:	lea    rsi,[rip+0x35afc]        # 444fe1 <strcmp@plt+0x41849>
  40f4e5:	mov    edi,0x5
  40f4ea:	mov    rdx,rax
  40f4ed:	xor    eax,eax
  40f4ef:	call   42e520 <strcmp@plt+0x2ad88>
  40f4f4:	mov    rax,QWORD PTR [r12+0x30]
  40f4f9:	mov    rdi,QWORD PTR [rax]
  40f4fc:	mov    rsi,r14
  40f4ff:	call   42e970 <strcmp@plt+0x2b1d8>
  40f504:	test   rax,rax
  40f507:	je     40f640 <strcmp@plt+0xbea8>
  40f50d:	mov    rcx,QWORD PTR [rax]
  40f510:	test   rcx,rcx
  40f513:	je     40f640 <strcmp@plt+0xbea8>
  40f519:	xor    eax,eax
  40f51b:	mov    QWORD PTR [rsp],rax
  40f51f:	jmp    40f548 <strcmp@plt+0xbdb0>
  40f521:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f52b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f530:	test   rcx,rcx
  40f533:	je     40f624 <strcmp@plt+0xbe8c>
  40f539:	mov    rax,rcx
  40f53c:	mov    rcx,rax
  40f53f:	test   rax,rax
  40f542:	je     40f640 <strcmp@plt+0xbea8>
  40f548:	mov    QWORD PTR [rsp+0x8],rcx
  40f54d:	cmp    QWORD PTR [rcx+0x8],0x0
  40f552:	je     40f5f0 <strcmp@plt+0xbe58>
  40f558:	mov    rax,QWORD PTR [rsp+0x8]
  40f55d:	mov    rax,QWORD PTR [rax+0x28]
  40f561:	test   rax,rax
  40f564:	je     40f5f0 <strcmp@plt+0xbe58>
  40f56a:	cmp    BYTE PTR [rax+0x10],0x0
  40f56e:	je     40f5f0 <strcmp@plt+0xbe58>
  40f574:	mov    rbx,QWORD PTR [rax+0x8]
  40f578:	mov    rax,QWORD PTR [rbx+0x28]
  40f57c:	mov    r15,QWORD PTR [rax+0x8]
  40f580:	cmp    r15,rax
  40f583:	jne    40f59d <strcmp@plt+0xbe05>
  40f585:	jmp    40f5f0 <strcmp@plt+0xbe58>
  40f587:	nop    WORD PTR [rax+rax*1+0x0]
  40f590:	mov    rax,QWORD PTR [rbx+0x28]
  40f594:	mov    r15,QWORD PTR [r15+0x8]
  40f598:	cmp    r15,rax
  40f59b:	je     40f5f0 <strcmp@plt+0xbe58>
  40f59d:	mov    r13,QWORD PTR [r15+0x10]
  40f5a1:	cmp    DWORD PTR [r13+0x18],0x0
  40f5a6:	je     40f594 <strcmp@plt+0xbdfc>
  40f5a8:	mov    rbp,QWORD PTR [r13+0x8]
  40f5ac:	mov    rcx,QWORD PTR [rbp+0x10]
  40f5b0:	mov    rdx,QWORD PTR [rcx]
  40f5b3:	cmp    DWORD PTR [rdx+0x18],0x0
  40f5b7:	je     40f594 <strcmp@plt+0xbdfc>
  40f5b9:	cmp    rbp,r13
  40f5bc:	je     40f594 <strcmp@plt+0xbdfc>
  40f5be:	xchg   ax,ax
  40f5c0:	cmp    BYTE PTR [rcx+0x8],0x1
  40f5c4:	jne    40f5d7 <strcmp@plt+0xbe3f>
  40f5c6:	mov    rcx,QWORD PTR [rcx]
  40f5c9:	mov    rdi,r12
  40f5cc:	mov    rsi,r14
  40f5cf:	mov    rdx,rbx
  40f5d2:	call   40f770 <strcmp@plt+0xbfd8>
  40f5d7:	mov    rbp,QWORD PTR [rbp+0x8]
  40f5db:	cmp    rbp,r13
  40f5de:	je     40f590 <strcmp@plt+0xbdf8>
  40f5e0:	mov    rcx,QWORD PTR [rbp+0x10]
  40f5e4:	cmp    BYTE PTR [rcx+0x8],0x1
  40f5e8:	je     40f5c6 <strcmp@plt+0xbe2e>
  40f5ea:	jmp    40f5d7 <strcmp@plt+0xbe3f>
  40f5ec:	nop    DWORD PTR [rax+0x0]
  40f5f0:	mov    rcx,QWORD PTR [rsp+0x8]
  40f5f5:	mov    rax,QWORD PTR [rcx+0x10]
  40f5f9:	mov    rcx,QWORD PTR [rcx+0x18]
  40f5fd:	test   rax,rax
  40f600:	je     40f530 <strcmp@plt+0xbd98>
  40f606:	test   rcx,rcx
  40f609:	je     40f53c <strcmp@plt+0xbda4>
  40f60f:	mov    rdx,QWORD PTR [rsp]
  40f613:	mov    QWORD PTR [rsp+rdx*8+0x10],rcx
  40f618:	inc    rdx
  40f61b:	mov    QWORD PTR [rsp],rdx
  40f61f:	jmp    40f53c <strcmp@plt+0xbda4>
  40f624:	cmp    QWORD PTR [rsp],0x0
  40f629:	je     40f640 <strcmp@plt+0xbea8>
  40f62b:	mov    rcx,QWORD PTR [rsp]
  40f62f:	mov    rax,QWORD PTR [rsp+rcx*8+0x8]
  40f634:	dec    rcx
  40f637:	mov    QWORD PTR [rsp],rcx
  40f63b:	jmp    40f53c <strcmp@plt+0xbda4>
  40f640:	lea    rax,[rip+0x55779]        # 464dc0 <strcmp@plt+0x61628>
  40f647:	cmp    DWORD PTR [rax],0x0
  40f64a:	jle    40f65f <strcmp@plt+0xbec7>
  40f64c:	lea    rsi,[rip+0x359a9]        # 444ffc <strcmp@plt+0x41864>
  40f653:	mov    edi,0x5
  40f658:	xor    eax,eax
  40f65a:	call   42e520 <strcmp@plt+0x2ad88>
  40f65f:	mov    rax,QWORD PTR [r12+0x68]
  40f664:	mov    rbx,QWORD PTR [rax+0x8]
  40f668:	cmp    rbx,rax
  40f66b:	je     40f68d <strcmp@plt+0xbef5>
  40f66d:	nop    DWORD PTR [rax]
  40f670:	mov    rcx,QWORD PTR [rbx+0x10]
  40f674:	mov    rdi,r12
  40f677:	mov    rsi,r14
  40f67a:	mov    rdx,r14
  40f67d:	call   40f770 <strcmp@plt+0xbfd8>
  40f682:	mov    rbx,QWORD PTR [rbx+0x8]
  40f686:	cmp    rbx,QWORD PTR [r12+0x68]
  40f68b:	jne    40f670 <strcmp@plt+0xbed8>
  40f68d:	add    rsp,0x418
  40f694:	pop    rbx
  40f695:	pop    r12
  40f697:	pop    r13
  40f699:	pop    r14
  40f69b:	pop    r15
  40f69d:	pop    rbp
  40f69e:	ret    
  40f69f:	mov    rax,QWORD PTR [r12+0x78]
  40f6a4:	cmp    DWORD PTR [rax+0x18],0x0
  40f6a8:	je     40f4ca <strcmp@plt+0xbd32>
  40f6ae:	lea    rax,[rip+0x60efb]        # 4705b0 <strcmp@plt+0x6ce18>
  40f6b5:	mov    rdx,QWORD PTR [rax]
  40f6b8:	lea    rax,[rip+0x60ef9]        # 4705b8 <strcmp@plt+0x6ce20>
  40f6bf:	mov    rcx,QWORD PTR [rax]
  40f6c2:	mov    rdi,r15
  40f6c5:	mov    esi,0x2
  40f6ca:	call   437310 <strcmp@plt+0x33b78>
  40f6cf:	mov    rax,QWORD PTR [r12+0x78]
  40f6d4:	mov    r13,QWORD PTR [rax+0x8]
  40f6d8:	cmp    r13,rax
  40f6db:	je     40f4ca <strcmp@plt+0xbd32>
  40f6e1:	lea    rbx,[rip+0xfffffffffffffd98]        # 40f480 <strcmp@plt+0xbce8>
  40f6e8:	nop    DWORD PTR [rax+rax*1+0x0]
  40f6f0:	mov    rbp,QWORD PTR [r13+0x10]
  40f6f4:	mov    edi,0x10
  40f6f9:	call   431d90 <strcmp@plt+0x2e5f8>
  40f6fe:	mov    QWORD PTR [rax],r15
  40f701:	mov    QWORD PTR [rax+0x8],rbp
  40f705:	mov    edi,0x2
  40f70a:	mov    rsi,r12
  40f70d:	lea    rdx,[rip+0xfffffffffffffafc]        # 40f210 <strcmp@plt+0xba78>
  40f714:	mov    rcx,rax
  40f717:	mov    r8,rbx
  40f71a:	call   437190 <strcmp@plt+0x339f8>
  40f71f:	mov    rbp,rax
  40f722:	lea    rax,[rip+0x60e87]        # 4705b0 <strcmp@plt+0x6ce18>
  40f729:	mov    rdi,QWORD PTR [rax]
  40f72c:	mov    rsi,r15
  40f72f:	mov    rdx,rbp
  40f732:	call   437490 <strcmp@plt+0x33cf8>
  40f737:	mov    rdi,rbp
  40f73a:	call   40f210 <strcmp@plt+0xba78>
  40f73f:	mov    r13,QWORD PTR [r13+0x8]
  40f743:	cmp    r13,QWORD PTR [r12+0x78]
  40f748:	jne    40f6f0 <strcmp@plt+0xbf58>
  40f74a:	jmp    40f4ca <strcmp@plt+0xbd32>
  40f74f:	lea    rdi,[rip+0x35827]        # 444f7d <strcmp@plt+0x417e5>
  40f756:	lea    rsi,[rip+0x3582a]        # 444f87 <strcmp@plt+0x417ef>
  40f75d:	lea    rcx,[rip+0x35836]        # 444f9a <strcmp@plt+0x41802>
  40f764:	mov    edx,0x5ab
  40f769:	call   4032b0 <__assert_fail@plt>
  40f76e:	xchg   ax,ax
  40f770:	push   rbp
  40f771:	push   r15
  40f773:	push   r14
  40f775:	push   r13
  40f777:	push   r12
  40f779:	push   rbx
  40f77a:	sub    rsp,0x68
  40f77e:	mov    r15,rcx
  40f781:	mov    rbp,rdx
  40f784:	mov    r12,rsi
  40f787:	mov    r14,rdi
  40f78a:	call   407850 <strcmp@plt+0x40b8>
  40f78f:	mov    rdi,rax
  40f792:	call   407650 <strcmp@plt+0x3eb8>
  40f797:	mov    rbx,rax
  40f79a:	mov    rdi,r12
  40f79d:	mov    rsi,rax
  40f7a0:	mov    rdx,rbp
  40f7a3:	call   421fc0 <strcmp@plt+0x1e828>
  40f7a8:	test   rax,rax
  40f7ab:	je     40f8bf <strcmp@plt+0xc127>
  40f7b1:	mov    r13,rax
  40f7b4:	movzx  eax,WORD PTR [rax+0x24]
  40f7b8:	mov    rcx,QWORD PTR [r13+0x30]
  40f7bc:	movzx  edx,WORD PTR [rcx+rax*1]
  40f7c0:	movzx  esi,BYTE PTR [rcx+rax*1+0x2]
  40f7c5:	mov    BYTE PTR [rcx+rax*1+0x2],sil
  40f7ca:	shl    esi,0x10
  40f7cd:	or     esi,edx
  40f7cf:	or     esi,0x1
  40f7d2:	mov    WORD PTR [rcx+rax*1],si
  40f7d6:	lea    rax,[rip+0x555e3]        # 464dc0 <strcmp@plt+0x61628>
  40f7dd:	cmp    DWORD PTR [rax],0x0
  40f7e0:	jle    40f83c <strcmp@plt+0xc0a4>
  40f7e2:	mov    rdi,r13
  40f7e5:	call   422570 <strcmp@plt+0x1edd8>
  40f7ea:	mov    QWORD PTR [rsp+0x10],rax
  40f7ef:	mov    rdi,rbx
  40f7f2:	call   422b30 <strcmp@plt+0x1f398>
  40f7f7:	mov    QWORD PTR [rsp+0x8],rax
  40f7fc:	mov    rdi,r12
  40f7ff:	call   422e20 <strcmp@plt+0x1f688>
  40f804:	mov    QWORD PTR [rsp+0x18],r15
  40f809:	mov    r15,rax
  40f80c:	mov    rdi,rbp
  40f80f:	call   422e20 <strcmp@plt+0x1f688>
  40f814:	lea    rsi,[rip+0x366c6]        # 445ee1 <strcmp@plt+0x42749>
  40f81b:	mov    edi,0x5
  40f820:	mov    rdx,QWORD PTR [rsp+0x10]
  40f825:	mov    rcx,QWORD PTR [rsp+0x8]
  40f82a:	mov    r8,r15
  40f82d:	mov    r15,QWORD PTR [rsp+0x18]
  40f832:	mov    r9,rax
  40f835:	xor    eax,eax
  40f837:	call   42e520 <strcmp@plt+0x2ad88>
  40f83c:	mov    rdi,rbx
  40f83f:	call   42bff0 <strcmp@plt+0x28858>
  40f844:	mov    rbx,QWORD PTR [r14+0x10]
  40f848:	mov    rdi,r15
  40f84b:	call   422ef0 <strcmp@plt+0x1f758>
  40f850:	movzx  esi,ax
  40f853:	mov    rdi,rbx
  40f856:	call   407640 <strcmp@plt+0x3ea8>
  40f85b:	test   rax,rax
  40f85e:	je     40f88d <strcmp@plt+0xc0f5>
  40f860:	lea    rbx,[rsp+0x20]
  40f865:	mov    rdi,rbx
  40f868:	mov    esi,0x10f6
  40f86d:	mov    edx,0x10f6
  40f872:	mov    rcx,rax
  40f875:	mov    r8,r15
  40f878:	call   435260 <strcmp@plt+0x31ac8>
  40f87d:	mov    rdi,r14
  40f880:	mov    rsi,r13
  40f883:	mov    rdx,rbx
  40f886:	call   407920 <strcmp@plt+0x4188>
  40f88b:	jmp    40f8b7 <strcmp@plt+0xc11f>
  40f88d:	lea    rax,[rip+0x5552c]        # 464dc0 <strcmp@plt+0x61628>
  40f894:	cmp    DWORD PTR [rax],0x2
  40f897:	jl     40f8b7 <strcmp@plt+0xc11f>
  40f899:	mov    rdi,r12
  40f89c:	call   422e20 <strcmp@plt+0x1f688>
  40f8a1:	lea    rsi,[rip+0x36666]        # 445f0e <strcmp@plt+0x42776>
  40f8a8:	mov    edi,0x6
  40f8ad:	mov    rdx,rax
  40f8b0:	xor    eax,eax
  40f8b2:	call   42e520 <strcmp@plt+0x2ad88>
  40f8b7:	mov    rdi,r13
  40f8ba:	call   42dd40 <strcmp@plt+0x2a5a8>
  40f8bf:	add    rsp,0x68
  40f8c3:	pop    rbx
  40f8c4:	pop    r12
  40f8c6:	pop    r13
  40f8c8:	pop    r14
  40f8ca:	pop    r15
  40f8cc:	pop    rbp
  40f8cd:	ret    
  40f8ce:	xchg   ax,ax
  40f8d0:	push   rbp
  40f8d1:	push   r15
  40f8d3:	push   r14
  40f8d5:	push   r13
  40f8d7:	push   r12
  40f8d9:	push   rbx
  40f8da:	sub    rsp,0x18
  40f8de:	mov    r12d,esi
  40f8e1:	mov    r14,rdi
  40f8e4:	mov    rdi,QWORD PTR [rdi+0x30]
  40f8e8:	mov    esi,0x2
  40f8ed:	call   408720 <strcmp@plt+0x4f88>
  40f8f2:	mov    QWORD PTR [rsp+0x8],rax
  40f8f7:	mov    rdi,QWORD PTR [r14+0x30]
  40f8fb:	mov    esi,0xa
  40f900:	call   408720 <strcmp@plt+0x4f88>
  40f905:	mov    QWORD PTR [rsp+0x10],rax
  40f90a:	cmp    r12d,0x4
  40f90e:	jg     40f923 <strcmp@plt+0xc18b>
  40f910:	lea    rsi,[rip+0x356fb]        # 445012 <strcmp@plt+0x4187a>
  40f917:	mov    edi,r12d
  40f91a:	xor    eax,eax
  40f91c:	call   42e520 <strcmp@plt+0x2ad88>
  40f921:	jmp    40f94f <strcmp@plt+0xc1b7>
  40f923:	lea    rbx,[rip+0x55496]        # 464dc0 <strcmp@plt+0x61628>
  40f92a:	mov    eax,DWORD PTR [rbx]
  40f92c:	add    eax,0x4
  40f92f:	cmp    eax,r12d
  40f932:	jl     40f94a <strcmp@plt+0xc1b2>
  40f934:	lea    rsi,[rip+0x356d7]        # 445012 <strcmp@plt+0x4187a>
  40f93b:	mov    edi,r12d
  40f93e:	xor    eax,eax
  40f940:	call   42e520 <strcmp@plt+0x2ad88>
  40f945:	mov    eax,DWORD PTR [rbx]
  40f947:	add    eax,0x4
  40f94a:	cmp    eax,r12d
  40f94d:	jl     40f960 <strcmp@plt+0xc1c8>
  40f94f:	lea    rsi,[rip+0x35703]        # 445059 <strcmp@plt+0x418c1>
  40f956:	mov    edi,r12d
  40f959:	xor    eax,eax
  40f95b:	call   42e520 <strcmp@plt+0x2ad88>
  40f960:	mov    rax,QWORD PTR [rsp+0x8]
  40f965:	mov    rax,QWORD PTR [rax+0x8]
  40f969:	mov    rax,QWORD PTR [rax+0x28]
  40f96d:	mov    r13,QWORD PTR [rax+0x8]
  40f971:	cmp    r13,rax
  40f974:	je     40fa05 <strcmp@plt+0xc26d>
  40f97a:	lea    rbx,[rip+0x33d34]        # 4436b5 <strcmp@plt+0x3ff1d>
  40f981:	lea    rbp,[rip+0x55438]        # 464dc0 <strcmp@plt+0x61628>
  40f988:	jmp    40f9a3 <strcmp@plt+0xc20b>
  40f98a:	nop    WORD PTR [rax+rax*1+0x0]
  40f990:	mov    r13,QWORD PTR [r13+0x8]
  40f994:	mov    rax,QWORD PTR [rsp+0x8]
  40f999:	mov    rax,QWORD PTR [rax+0x8]
  40f99d:	cmp    r13,QWORD PTR [rax+0x28]
  40f9a1:	je     40fa05 <strcmp@plt+0xc26d>
  40f9a3:	mov    r14,QWORD PTR [r13+0x10]
  40f9a7:	cmp    DWORD PTR [r14+0x18],0x0
  40f9ac:	je     40f990 <strcmp@plt+0xc1f8>
  40f9ae:	mov    r15,QWORD PTR [r14+0x8]
  40f9b2:	mov    rdi,QWORD PTR [r15+0x10]
  40f9b6:	mov    rax,QWORD PTR [rdi]
  40f9b9:	cmp    DWORD PTR [rax+0x18],0x0
  40f9bd:	je     40f990 <strcmp@plt+0xc1f8>
  40f9bf:	cmp    r15,r14
  40f9c2:	jne    40f9d4 <strcmp@plt+0xc23c>
  40f9c4:	jmp    40f990 <strcmp@plt+0xc1f8>
  40f9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f9d0:	mov    rdi,QWORD PTR [r15+0x10]
  40f9d4:	cmp    r12d,0x5
  40f9d8:	jl     40f9e5 <strcmp@plt+0xc24d>
  40f9da:	mov    eax,DWORD PTR [rbp+0x0]
  40f9dd:	add    eax,0x4
  40f9e0:	cmp    eax,r12d
  40f9e3:	jl     40f9fa <strcmp@plt+0xc262>
  40f9e5:	call   4283f0 <strcmp@plt+0x24c58>
  40f9ea:	mov    edi,r12d
  40f9ed:	mov    rsi,rbx
  40f9f0:	mov    rdx,rax
  40f9f3:	xor    eax,eax
  40f9f5:	call   42e520 <strcmp@plt+0x2ad88>
  40f9fa:	mov    r15,QWORD PTR [r15+0x8]
  40f9fe:	cmp    r15,r14
  40fa01:	jne    40f9d0 <strcmp@plt+0xc238>
  40fa03:	jmp    40f990 <strcmp@plt+0xc1f8>
  40fa05:	cmp    r12d,0x4
  40fa09:	jg     40fa2f <strcmp@plt+0xc297>
  40fa0b:	lea    rsi,[rip+0x3568e]        # 4450a0 <strcmp@plt+0x41908>
  40fa12:	mov    edi,r12d
  40fa15:	xor    eax,eax
  40fa17:	call   42e520 <strcmp@plt+0x2ad88>
  40fa1c:	lea    rsi,[rip+0x356c5]        # 4450e8 <strcmp@plt+0x41950>
  40fa23:	mov    edi,r12d
  40fa26:	xor    eax,eax
  40fa28:	call   42e520 <strcmp@plt+0x2ad88>
  40fa2d:	jmp    40fa52 <strcmp@plt+0xc2ba>
  40fa2f:	lea    rbx,[rip+0x5538a]        # 464dc0 <strcmp@plt+0x61628>
  40fa36:	mov    eax,DWORD PTR [rbx]
  40fa38:	add    eax,0x4
  40fa3b:	cmp    eax,r12d
  40fa3e:	jge    40fb4a <strcmp@plt+0xc3b2>
  40fa44:	cmp    eax,r12d
  40fa47:	jge    40fb69 <strcmp@plt+0xc3d1>
  40fa4d:	cmp    eax,r12d
  40fa50:	jl     40fa63 <strcmp@plt+0xc2cb>
  40fa52:	lea    rsi,[rip+0x35600]        # 445059 <strcmp@plt+0x418c1>
  40fa59:	mov    edi,r12d
  40fa5c:	xor    eax,eax
  40fa5e:	call   42e520 <strcmp@plt+0x2ad88>
  40fa63:	mov    rax,QWORD PTR [rsp+0x10]
  40fa68:	mov    rax,QWORD PTR [rax+0x8]
  40fa6c:	mov    rax,QWORD PTR [rax+0x28]
  40fa70:	mov    r13,QWORD PTR [rax+0x8]
  40fa74:	cmp    r13,rax
  40fa77:	je     40fb05 <strcmp@plt+0xc36d>
  40fa7d:	lea    r15,[rip+0x33c31]        # 4436b5 <strcmp@plt+0x3ff1d>
  40fa84:	lea    r14,[rip+0x55335]        # 464dc0 <strcmp@plt+0x61628>
  40fa8b:	jmp    40faa3 <strcmp@plt+0xc30b>
  40fa8d:	nop    DWORD PTR [rax]
  40fa90:	mov    r13,QWORD PTR [r13+0x8]
  40fa94:	mov    rax,QWORD PTR [rsp+0x10]
  40fa99:	mov    rax,QWORD PTR [rax+0x8]
  40fa9d:	cmp    r13,QWORD PTR [rax+0x28]
  40faa1:	je     40fb05 <strcmp@plt+0xc36d>
  40faa3:	mov    rbp,QWORD PTR [r13+0x10]
  40faa7:	cmp    DWORD PTR [rbp+0x18],0x0
  40faab:	je     40fa90 <strcmp@plt+0xc2f8>
  40faad:	mov    rbx,QWORD PTR [rbp+0x8]
  40fab1:	mov    rdi,QWORD PTR [rbx+0x10]
  40fab5:	mov    rax,QWORD PTR [rdi]
  40fab8:	cmp    DWORD PTR [rax+0x18],0x0
  40fabc:	je     40fa90 <strcmp@plt+0xc2f8>
  40fabe:	cmp    rbx,rbp
  40fac1:	jne    40fad4 <strcmp@plt+0xc33c>
  40fac3:	jmp    40fa90 <strcmp@plt+0xc2f8>
  40fac5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40facf:	nop
  40fad0:	mov    rdi,QWORD PTR [rbx+0x10]
  40fad4:	cmp    r12d,0x5
  40fad8:	jl     40fae5 <strcmp@plt+0xc34d>
  40fada:	mov    eax,DWORD PTR [r14]
  40fadd:	add    eax,0x4
  40fae0:	cmp    eax,r12d
  40fae3:	jl     40fafa <strcmp@plt+0xc362>
  40fae5:	call   4283f0 <strcmp@plt+0x24c58>
  40faea:	mov    edi,r12d
  40faed:	mov    rsi,r15
  40faf0:	mov    rdx,rax
  40faf3:	xor    eax,eax
  40faf5:	call   42e520 <strcmp@plt+0x2ad88>
  40fafa:	mov    rbx,QWORD PTR [rbx+0x8]
  40fafe:	cmp    rbx,rbp
  40fb01:	jne    40fad0 <strcmp@plt+0xc338>
  40fb03:	jmp    40fa90 <strcmp@plt+0xc2f8>
  40fb05:	cmp    r12d,0x5
  40fb09:	jl     40fb2b <strcmp@plt+0xc393>
  40fb0b:	lea    rax,[rip+0x552ae]        # 464dc0 <strcmp@plt+0x61628>
  40fb12:	mov    eax,DWORD PTR [rax]
  40fb14:	add    eax,0x4
  40fb17:	cmp    eax,r12d
  40fb1a:	jge    40fb2b <strcmp@plt+0xc393>
  40fb1c:	add    rsp,0x18
  40fb20:	pop    rbx
  40fb21:	pop    r12
  40fb23:	pop    r13
  40fb25:	pop    r14
  40fb27:	pop    r15
  40fb29:	pop    rbp
  40fb2a:	ret    
  40fb2b:	lea    rsi,[rip+0x3556e]        # 4450a0 <strcmp@plt+0x41908>
  40fb32:	mov    edi,r12d
  40fb35:	xor    eax,eax
  40fb37:	add    rsp,0x18
  40fb3b:	pop    rbx
  40fb3c:	pop    r12
  40fb3e:	pop    r13
  40fb40:	pop    r14
  40fb42:	pop    r15
  40fb44:	pop    rbp
  40fb45:	jmp    42e520 <strcmp@plt+0x2ad88>
  40fb4a:	lea    rsi,[rip+0x3554f]        # 4450a0 <strcmp@plt+0x41908>
  40fb51:	mov    edi,r12d
  40fb54:	xor    eax,eax
  40fb56:	call   42e520 <strcmp@plt+0x2ad88>
  40fb5b:	mov    eax,DWORD PTR [rbx]
  40fb5d:	add    eax,0x4
  40fb60:	cmp    eax,r12d
  40fb63:	jl     40fa4d <strcmp@plt+0xc2b5>
  40fb69:	lea    rsi,[rip+0x35578]        # 4450e8 <strcmp@plt+0x41950>
  40fb70:	mov    edi,r12d
  40fb73:	xor    eax,eax
  40fb75:	call   42e520 <strcmp@plt+0x2ad88>
  40fb7a:	mov    eax,DWORD PTR [rbx]
  40fb7c:	add    eax,0x4
  40fb7f:	cmp    eax,r12d
  40fb82:	jge    40fa52 <strcmp@plt+0xc2ba>
  40fb88:	jmp    40fa63 <strcmp@plt+0xc2cb>
  40fb8d:	nop    DWORD PTR [rax]
  40fb90:	push   rbp
  40fb91:	push   r15
  40fb93:	push   r14
  40fb95:	push   r13
  40fb97:	push   r12
  40fb99:	push   rbx
  40fb9a:	sub    rsp,0x58
  40fb9e:	mov    rax,QWORD PTR [rdi+0x78]
  40fba2:	cmp    DWORD PTR [rax+0x18],0x0
  40fba6:	je     40fd15 <strcmp@plt+0xc57d>
  40fbac:	mov    ebx,esi
  40fbae:	mov    r14,rdi
  40fbb1:	cmp    esi,0x4
  40fbb4:	jg     40fbc8 <strcmp@plt+0xc430>
  40fbb6:	lea    rsi,[rip+0x35572]        # 44512f <strcmp@plt+0x41997>
  40fbbd:	mov    edi,ebx
  40fbbf:	xor    eax,eax
  40fbc1:	call   42e520 <strcmp@plt+0x2ad88>
  40fbc6:	jmp    40fbf7 <strcmp@plt+0xc45f>
  40fbc8:	lea    rbp,[rip+0x551f1]        # 464dc0 <strcmp@plt+0x61628>
  40fbcf:	mov    eax,DWORD PTR [rbp+0x0]
  40fbd2:	add    eax,0x4
  40fbd5:	cmp    eax,ebx
  40fbd7:	jl     40fd15 <strcmp@plt+0xc57d>
  40fbdd:	lea    rsi,[rip+0x3554b]        # 44512f <strcmp@plt+0x41997>
  40fbe4:	mov    edi,ebx
  40fbe6:	xor    eax,eax
  40fbe8:	call   42e520 <strcmp@plt+0x2ad88>
  40fbed:	mov    eax,DWORD PTR [rbp+0x0]
  40fbf0:	add    eax,0x4
  40fbf3:	cmp    eax,ebx
  40fbf5:	jl     40fc07 <strcmp@plt+0xc46f>
  40fbf7:	lea    rsi,[rip+0x35577]        # 445175 <strcmp@plt+0x419dd>
  40fbfe:	mov    edi,ebx
  40fc00:	xor    eax,eax
  40fc02:	call   42e520 <strcmp@plt+0x2ad88>
  40fc07:	mov    rax,QWORD PTR [r14+0x78]
  40fc0b:	mov    r13,QWORD PTR [rax+0x8]
  40fc0f:	cmp    r13,rax
  40fc12:	je     40fcf0 <strcmp@plt+0xc558>
  40fc18:	lea    r15,[rip+0x3559c]        # 4451bb <strcmp@plt+0x41a23>
  40fc1f:	mov    r12,rsp
  40fc22:	jmp    40fc51 <strcmp@plt+0xc4b9>
  40fc24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fc2e:	xchg   ax,ax
  40fc30:	mov    edi,ebx
  40fc32:	lea    rsi,[rip+0x33a7c]        # 4436b5 <strcmp@plt+0x3ff1d>
  40fc39:	mov    rdx,r12
  40fc3c:	xor    eax,eax
  40fc3e:	call   42e520 <strcmp@plt+0x2ad88>
  40fc43:	mov    r13,QWORD PTR [r13+0x8]
  40fc47:	cmp    r13,QWORD PTR [r14+0x78]
  40fc4b:	je     40fcf0 <strcmp@plt+0xc558>
  40fc51:	mov    rbp,QWORD PTR [r13+0x10]
  40fc55:	mov    rdi,QWORD PTR [rbp+0x0]
  40fc59:	call   422e20 <strcmp@plt+0x1f688>
  40fc5e:	mov    esi,0x50
  40fc63:	mov    rdi,r12
  40fc66:	mov    rdx,r15
  40fc69:	mov    rcx,rax
  40fc6c:	xor    eax,eax
  40fc6e:	call   403630 <snprintf@plt>
  40fc73:	movzx  ebp,BYTE PTR [rbp+0x8]
  40fc77:	mov    rdi,r12
  40fc7a:	test   bpl,bpl
  40fc7d:	je     40fca0 <strcmp@plt+0xc508>
  40fc7f:	call   4031e0 <strlen@plt>
  40fc84:	mov    esi,0x50
  40fc89:	sub    rsi,rax
  40fc8c:	lea    rdi,[rsp+rax*1]
  40fc90:	cmp    bpl,0x1
  40fc94:	jne    40fcc0 <strcmp@plt+0xc528>
  40fc96:	lea    rdx,[rip+0x35542]        # 4451df <strcmp@plt+0x41a47>
  40fc9d:	jmp    40fcc7 <strcmp@plt+0xc52f>
  40fc9f:	nop
  40fca0:	call   4031e0 <strlen@plt>
  40fca5:	lea    rdi,[rsp+rax*1]
  40fca9:	mov    esi,0x50
  40fcae:	sub    rsi,rax
  40fcb1:	lea    rdx,[rip+0x3550c]        # 4451c4 <strcmp@plt+0x41a2c>
  40fcb8:	jmp    40fcc7 <strcmp@plt+0xc52f>
  40fcba:	nop    WORD PTR [rax+rax*1+0x0]
  40fcc0:	lea    rdx,[rip+0x35533]        # 4451fa <strcmp@plt+0x41a62>
  40fcc7:	xor    eax,eax
  40fcc9:	call   403630 <snprintf@plt>
  40fcce:	cmp    ebx,0x5
  40fcd1:	jl     40fc30 <strcmp@plt+0xc498>
  40fcd7:	lea    rax,[rip+0x550e2]        # 464dc0 <strcmp@plt+0x61628>
  40fcde:	mov    eax,DWORD PTR [rax]
  40fce0:	add    eax,0x4
  40fce3:	cmp    eax,ebx
  40fce5:	jge    40fc30 <strcmp@plt+0xc498>
  40fceb:	jmp    40fc43 <strcmp@plt+0xc4ab>
  40fcf0:	cmp    ebx,0x5
  40fcf3:	jl     40fd05 <strcmp@plt+0xc56d>
  40fcf5:	lea    rax,[rip+0x550c4]        # 464dc0 <strcmp@plt+0x61628>
  40fcfc:	mov    eax,DWORD PTR [rax]
  40fcfe:	add    eax,0x4
  40fd01:	cmp    eax,ebx
  40fd03:	jl     40fd15 <strcmp@plt+0xc57d>
  40fd05:	lea    rsi,[rip+0x35395]        # 4450a1 <strcmp@plt+0x41909>
  40fd0c:	mov    edi,ebx
  40fd0e:	xor    eax,eax
  40fd10:	call   42e520 <strcmp@plt+0x2ad88>
  40fd15:	add    rsp,0x58
  40fd19:	pop    rbx
  40fd1a:	pop    r12
  40fd1c:	pop    r13
  40fd1e:	pop    r14
  40fd20:	pop    r15
  40fd22:	pop    rbp
  40fd23:	ret    
  40fd24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd2e:	xchg   ax,ax
  40fd30:	push   rbp
  40fd31:	push   r15
  40fd33:	push   r14
  40fd35:	push   r12
  40fd37:	push   rbx
  40fd38:	mov    r14d,ecx
  40fd3b:	mov    r15,rdx
  40fd3e:	mov    r12d,esi
  40fd41:	mov    rbp,rdi
  40fd44:	mov    edi,0x20
  40fd49:	call   431d60 <strcmp@plt+0x2e5c8>
  40fd4e:	test   rax,rax
  40fd51:	je     40fd77 <strcmp@plt+0xc5df>
  40fd53:	mov    rbx,rax
  40fd56:	mov    rdi,rbp
  40fd59:	call   423440 <strcmp@plt+0x1fca8>
  40fd5e:	mov    QWORD PTR [rbx],rax
  40fd61:	mov    BYTE PTR [rbx+0x8],r12b
  40fd65:	mov    rdi,r15
  40fd68:	call   403710 <strdup@plt>
  40fd6d:	mov    QWORD PTR [rbx+0x10],rax
  40fd71:	mov    BYTE PTR [rbx+0x18],r14b
  40fd75:	jmp    40fd8c <strcmp@plt+0xc5f4>
  40fd77:	lea    rsi,[rip+0x35497]        # 445215 <strcmp@plt+0x41a7d>
  40fd7e:	xor    ebx,ebx
  40fd80:	mov    edi,0x3
  40fd85:	xor    eax,eax
  40fd87:	call   42e520 <strcmp@plt+0x2ad88>
  40fd8c:	mov    rax,rbx
  40fd8f:	pop    rbx
  40fd90:	pop    r12
  40fd92:	pop    r14
  40fd94:	pop    r15
  40fd96:	pop    rbp
  40fd97:	ret    
  40fd98:	nop    DWORD PTR [rax+rax*1+0x0]
  40fda0:	test   rdi,rdi
  40fda3:	je     40fdc3 <strcmp@plt+0xc62b>
  40fda5:	push   rbx
  40fda6:	mov    rbx,rdi
  40fda9:	mov    rdi,QWORD PTR [rdi]
  40fdac:	call   422c90 <strcmp@plt+0x1f4f8>
  40fdb1:	mov    rdi,QWORD PTR [rbx+0x10]
  40fdb5:	call   403790 <free@plt>
  40fdba:	mov    rdi,rbx
  40fdbd:	pop    rbx
  40fdbe:	jmp    403790 <free@plt>
  40fdc3:	ret    
  40fdc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fdce:	xchg   ax,ax
  40fdd0:	mov    edi,0xa8
  40fdd5:	jmp    431d60 <strcmp@plt+0x2e5c8>
  40fdda:	nop    WORD PTR [rax+rax*1+0x0]
  40fde0:	push   rbp
  40fde1:	push   r15
  40fde3:	push   r14
  40fde5:	push   r13
  40fde7:	push   r12
  40fde9:	push   rbx
  40fdea:	sub    rsp,0x88
  40fdf1:	mov    r14,rdi
  40fdf4:	call   436ff0 <strcmp@plt+0x33858>
  40fdf9:	mov    rbp,rax
  40fdfc:	mov    rdi,r14
  40fdff:	call   437010 <strcmp@plt+0x33878>
  40fe04:	mov    r12,rax
  40fe07:	mov    rdi,r14
  40fe0a:	call   436fe0 <strcmp@plt+0x33848>
  40fe0f:	mov    rbx,rax
  40fe12:	mov    rdi,QWORD PTR [rbp+0x0]
  40fe16:	call   4317d0 <strcmp@plt+0x2e038>
  40fe1b:	mov    r13,rax
  40fe1e:	mov    rax,QWORD PTR [rbp+0x8]
  40fe22:	mov    QWORD PTR [rsp+0x10],rax
  40fe27:	mov    r15,QWORD PTR [rbp+0x10]
  40fe2b:	mov    rdi,r12
  40fe2e:	call   432620 <strcmp@plt+0x2ee88>
  40fe33:	cmp    eax,DWORD PTR [rbx+0x20]
  40fe36:	jle    40fea3 <strcmp@plt+0xc70b>
  40fe38:	lea    rax,[rip+0x60779]        # 4705b8 <strcmp@plt+0x6ce20>
  40fe3f:	mov    rdi,QWORD PTR [rax]
  40fe42:	mov    rsi,r12
  40fe45:	call   4323d0 <strcmp@plt+0x2ec38>
  40fe4a:	mov    rdi,r14
  40fe4d:	mov    esi,0x3c
  40fe52:	call   437020 <strcmp@plt+0x33888>
  40fe57:	mov    rdi,r13
  40fe5a:	call   422e20 <strcmp@plt+0x1f688>
  40fe5f:	mov    r14,rax
  40fe62:	mov    rdi,QWORD PTR [r15]
  40fe65:	call   422e20 <strcmp@plt+0x1f688>
  40fe6a:	mov    rbp,rax
  40fe6d:	mov    rax,QWORD PTR [rsp+0x10]
  40fe72:	mov    rdi,QWORD PTR [rax]
  40fe75:	call   422e20 <strcmp@plt+0x1f688>
  40fe7a:	lea    rsi,[rip+0x35865]        # 4456e6 <strcmp@plt+0x41f4e>
  40fe81:	xor    ebx,ebx
  40fe83:	mov    edi,0x3
  40fe88:	mov    rdx,r14
  40fe8b:	mov    rcx,rbp
  40fe8e:	mov    r8,rax
  40fe91:	mov    r9d,0x3c
  40fe97:	xor    eax,eax
  40fe99:	call   42e520 <strcmp@plt+0x2ad88>
  40fe9e:	jmp    41011d <strcmp@plt+0xc985>
  40fea3:	mov    QWORD PTR [rsp+0x8],r15
  40fea8:	xor    eax,eax
  40feaa:	call   432550 <strcmp@plt+0x2edb8>
  40feaf:	mov    QWORD PTR [rsp+0x20],rax
  40feb4:	mov    rdi,r12
  40feb7:	call   432620 <strcmp@plt+0x2ee88>
  40febc:	test   eax,eax
  40febe:	mov    QWORD PTR [rsp+0x38],r14
  40fec3:	mov    QWORD PTR [rsp+0x30],rbx
  40fec8:	jle    40ff40 <strcmp@plt+0xc7a8>
  40feca:	lea    rax,[rip+0x54eef]        # 464dc0 <strcmp@plt+0x61628>
  40fed1:	cmp    DWORD PTR [rax],0x0
  40fed4:	mov    rbx,QWORD PTR [rsp+0x8]
  40fed9:	mov    r14,r13
  40fedc:	mov    rbp,QWORD PTR [rsp+0x10]
  40fee1:	jle    410019 <strcmp@plt+0xc881>
  40fee7:	mov    rdi,r14
  40feea:	call   422e20 <strcmp@plt+0x1f688>
  40feef:	mov    r13,rax
  40fef2:	mov    rdi,QWORD PTR [rbx]
  40fef5:	call   422e20 <strcmp@plt+0x1f688>
  40fefa:	mov    rbx,r14
  40fefd:	mov    r14,rax
  40ff00:	mov    rdi,QWORD PTR [rbp+0x0]
  40ff04:	call   422e20 <strcmp@plt+0x1f688>
  40ff09:	mov    r15,rax
  40ff0c:	mov    rdi,r12
  40ff0f:	call   432620 <strcmp@plt+0x2ee88>
  40ff14:	lea    rsi,[rip+0x3574b]        # 445666 <strcmp@plt+0x41ece>
  40ff1b:	mov    edi,0x5
  40ff20:	mov    rdx,r13
  40ff23:	mov    rcx,r14
  40ff26:	mov    r14,rbx
  40ff29:	mov    rbx,QWORD PTR [rsp+0x8]
  40ff2e:	mov    r8,r15
  40ff31:	mov    r9d,eax
  40ff34:	xor    eax,eax
  40ff36:	call   42e520 <strcmp@plt+0x2ad88>
  40ff3b:	jmp    410019 <strcmp@plt+0xc881>
  40ff40:	mov    QWORD PTR [rsp+0x18],r13
  40ff45:	mov    QWORD PTR [rsp+0x28],r12
  40ff4a:	mov    r13,QWORD PTR [rbp+0x0]
  40ff4e:	lea    rax,[rip+0x6065b]        # 4705b0 <strcmp@plt+0x6ce18>
  40ff55:	mov    rdi,QWORD PTR [rax]
  40ff58:	mov    rsi,r13
  40ff5b:	mov    edx,0x3
  40ff60:	call   437500 <strcmp@plt+0x33d68>
  40ff65:	mov    rbx,rax
  40ff68:	mov    r14,QWORD PTR [rax+0x8]
  40ff6c:	cmp    r14,rax
  40ff6f:	mov    rbp,QWORD PTR [rsp+0x10]
  40ff74:	je     40ffb6 <strcmp@plt+0xc81e>
  40ff76:	lea    r12,[rip+0x6063b]        # 4705b8 <strcmp@plt+0x6ce20>
  40ff7d:	jmp    40ff89 <strcmp@plt+0xc7f1>
  40ff7f:	nop
  40ff80:	mov    r14,QWORD PTR [r14+0x8]
  40ff84:	cmp    r14,rbx
  40ff87:	je     40ffb6 <strcmp@plt+0xc81e>
  40ff89:	mov    r15,QWORD PTR [r14+0x10]
  40ff8d:	mov    rdi,r15
  40ff90:	call   436ff0 <strcmp@plt+0x33858>
  40ff95:	cmp    QWORD PTR [rax+0x10],rbp
  40ff99:	jne    40ff80 <strcmp@plt+0xc7e8>
  40ff9b:	lea    rax,[rip+0x6060e]        # 4705b0 <strcmp@plt+0x6ce18>
  40ffa2:	mov    rdx,QWORD PTR [rax]
  40ffa5:	mov    rcx,QWORD PTR [r12]
  40ffa9:	mov    rdi,r13
  40ffac:	mov    rsi,r15
  40ffaf:	call   4371e0 <strcmp@plt+0x33a48>
  40ffb4:	jmp    40ff80 <strcmp@plt+0xc7e8>
  40ffb6:	mov    rdi,rbx
  40ffb9:	call   42bff0 <strcmp@plt+0x28858>
  40ffbe:	lea    rax,[rip+0x54dfb]        # 464dc0 <strcmp@plt+0x61628>
  40ffc5:	cmp    DWORD PTR [rax],0x0
  40ffc8:	mov    r12,QWORD PTR [rsp+0x28]
  40ffcd:	mov    r14,QWORD PTR [rsp+0x18]
  40ffd2:	mov    rbx,QWORD PTR [rsp+0x8]
  40ffd7:	jle    410019 <strcmp@plt+0xc881>
  40ffd9:	mov    rdi,r14
  40ffdc:	call   422e20 <strcmp@plt+0x1f688>
  40ffe1:	mov    r14,rax
  40ffe4:	mov    rdi,QWORD PTR [rbx]
  40ffe7:	call   422e20 <strcmp@plt+0x1f688>
  40ffec:	mov    r15,rax
  40ffef:	mov    rdi,QWORD PTR [rbp+0x0]
  40fff3:	call   422e20 <strcmp@plt+0x1f688>
  40fff8:	lea    rsi,[rip+0x356b0]        # 4456af <strcmp@plt+0x41f17>
  40ffff:	mov    edi,0x5
  410004:	mov    rdx,r14
  410007:	mov    r14,QWORD PTR [rsp+0x18]
  41000c:	mov    rcx,r15
  41000f:	mov    r8,rax
  410012:	xor    eax,eax
  410014:	call   42e520 <strcmp@plt+0x2ad88>
  410019:	movzx  esi,BYTE PTR [rbx+0x8]
  41001d:	mov    rdi,r14
  410020:	call   4221a0 <strcmp@plt+0x1ea08>
  410025:	test   rax,rax
  410028:	je     41011b <strcmp@plt+0xc983>
  41002e:	mov    r15,rax
  410031:	movzx  esi,WORD PTR [rax+0x24]
  410035:	cmp    rsi,0xffff
  41003c:	je     410044 <strcmp@plt+0xc8ac>
  41003e:	add    rsi,QWORD PTR [r15+0x30]
  410042:	jmp    410046 <strcmp@plt+0xc8ae>
  410044:	xor    esi,esi
  410046:	mov    rax,QWORD PTR [rsp+0x20]
  41004b:	mov    QWORD PTR [rsi+0x4],rax
  41004f:	add    rsi,0xc
  410053:	movzx  edx,BYTE PTR [rbx+0x8]
  410057:	mov    rcx,QWORD PTR [rbx+0x10]
  41005b:	mov    rdi,r15
  41005e:	call   4226c0 <strcmp@plt+0x1ef28>
  410063:	cmp    eax,0x1
  410066:	jne    41011b <strcmp@plt+0xc983>
  41006c:	mov    rbp,QWORD PTR [rbp+0x0]
  410070:	mov    rbx,QWORD PTR [rbx]
  410073:	lea    rax,[rip+0x54d46]        # 464dc0 <strcmp@plt+0x61628>
  41007a:	cmp    DWORD PTR [rax],0x0
  41007d:	jle    4100b9 <strcmp@plt+0xc921>
  41007f:	mov    rdi,r15
  410082:	call   422570 <strcmp@plt+0x1edd8>
  410087:	mov    rdi,r14
  41008a:	mov    r14,rax
  41008d:	call   422e20 <strcmp@plt+0x1f688>
  410092:	mov    r13,rax
  410095:	mov    rdi,rbx
  410098:	call   422e20 <strcmp@plt+0x1f688>
  41009d:	lea    rsi,[rip+0x35699]        # 44573d <strcmp@plt+0x41fa5>
  4100a4:	mov    edi,0x5
  4100a9:	mov    rdx,r14
  4100ac:	mov    rcx,r13
  4100af:	mov    r8,rax
  4100b2:	xor    eax,eax
  4100b4:	call   42e520 <strcmp@plt+0x2ad88>
  4100b9:	lea    r14,[rsp+0x40]
  4100be:	mov    rdi,r14
  4100c1:	mov    esi,0x10f6
  4100c6:	mov    edx,0x10f6
  4100cb:	mov    rcx,rbp
  4100ce:	mov    r8,rbx
  4100d1:	call   435260 <strcmp@plt+0x31ac8>
  4100d6:	mov    rdi,QWORD PTR [rsp+0x30]
  4100db:	mov    rsi,r15
  4100de:	mov    rdx,r14
  4100e1:	call   407920 <strcmp@plt+0x4188>
  4100e6:	mov    rdi,r15
  4100e9:	call   42dd40 <strcmp@plt+0x2a5a8>
  4100ee:	lea    rax,[rip+0x604c3]        # 4705b8 <strcmp@plt+0x6ce20>
  4100f5:	mov    rdi,QWORD PTR [rax]
  4100f8:	mov    rsi,QWORD PTR [rsp+0x20]
  4100fd:	mov    rdx,r12
  410100:	call   431f60 <strcmp@plt+0x2e7c8>
  410105:	mov    rdi,QWORD PTR [rsp+0x38]
  41010a:	mov    esi,0x3
  41010f:	call   437020 <strcmp@plt+0x33888>
  410114:	mov    ebx,0x1
  410119:	jmp    41011d <strcmp@plt+0xc985>
  41011b:	xor    ebx,ebx
  41011d:	mov    eax,ebx
  41011f:	add    rsp,0x88
  410126:	pop    rbx
  410127:	pop    r12
  410129:	pop    r13
  41012b:	pop    r14
  41012d:	pop    r15
  41012f:	pop    rbp
  410130:	ret    
  410131:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41013b:	nop    DWORD PTR [rax+rax*1+0x0]
  410140:	jmp    403790 <free@plt>
  410145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41014f:	nop
  410150:	push   rbp
  410151:	push   r15
  410153:	push   r14
  410155:	push   r13
  410157:	push   r12
  410159:	push   rbx
  41015a:	sub    rsp,0x18
  41015e:	call   436ff0 <strcmp@plt+0x33858>
  410163:	mov    r12,rax
  410166:	lea    rax,[rip+0x54c53]        # 464dc0 <strcmp@plt+0x61628>
  41016d:	cmp    DWORD PTR [rax],0x0
  410170:	jle    410185 <strcmp@plt+0xc9ed>
  410172:	lea    rsi,[rip+0x355f7]        # 445770 <strcmp@plt+0x41fd8>
  410179:	mov    edi,0x5
  41017e:	xor    eax,eax
  410180:	call   42e520 <strcmp@plt+0x2ad88>
  410185:	call   42b980 <strcmp@plt+0x281e8>
  41018a:	mov    r14,rax
  41018d:	mov    rdi,QWORD PTR [r12+0x50]
  410192:	call   4365a0 <strcmp@plt+0x32e08>
  410197:	mov    rcx,QWORD PTR [rax+0x8]
  41019b:	mov    QWORD PTR [rsp+0x8],rax
  4101a0:	cmp    rcx,rax
  4101a3:	je     4102ef <strcmp@plt+0xcb57>
  4101a9:	xor    r13d,r13d
  4101ac:	xor    r15d,r15d
  4101af:	jmp    4101d4 <strcmp@plt+0xca3c>
  4101b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4101c0:	mov    rcx,QWORD PTR [rsp+0x10]
  4101c5:	mov    rcx,QWORD PTR [rcx+0x8]
  4101c9:	cmp    rcx,QWORD PTR [rsp+0x8]
  4101ce:	je     4102ef <strcmp@plt+0xcb57>
  4101d4:	mov    rbx,QWORD PTR [rcx+0x10]
  4101d8:	cmp    BYTE PTR [rbx+0x20],0x1
  4101dc:	mov    QWORD PTR [rsp+0x10],rcx
  4101e1:	jne    410200 <strcmp@plt+0xca68>
  4101e3:	mov    r15,QWORD PTR [rbx+0x10]
  4101e7:	mov    r13,QWORD PTR [rbx+0x18]
  4101eb:	mov    rdi,QWORD PTR [rbx+0x28]
  4101ef:	jmp    410218 <strcmp@plt+0xca80>
  4101f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4101fb:	nop    DWORD PTR [rax+rax*1+0x0]
  410200:	mov    rdi,QWORD PTR [rbx+0x28]
  410204:	test   rdi,rdi
  410207:	je     41020d <strcmp@plt+0xca75>
  410209:	mov    r15,QWORD PTR [rbx+0x10]
  41020d:	cmp    QWORD PTR [rbx+0x30],0x0
  410212:	je     410218 <strcmp@plt+0xca80>
  410214:	mov    r13,QWORD PTR [rbx+0x18]
  410218:	mov    BYTE PTR [rbx+0x20],0x0
  41021c:	call   422c90 <strcmp@plt+0x1f4f8>
  410221:	mov    rdi,QWORD PTR [rbx+0x30]
  410225:	call   422c90 <strcmp@plt+0x1f4f8>
  41022a:	vxorps xmm0,xmm0,xmm0
  41022e:	vmovups XMMWORD PTR [rbx+0x28],xmm0
  410233:	test   r15,r15
  410236:	je     410290 <strcmp@plt+0xcaf8>
  410238:	mov    rbp,QWORD PTR [r15+0x8]
  41023c:	cmp    rbp,r15
  41023f:	jne    410259 <strcmp@plt+0xcac1>
  410241:	jmp    410290 <strcmp@plt+0xcaf8>
  410243:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41024d:	nop    DWORD PTR [rax]
  410250:	mov    rbp,QWORD PTR [rbp+0x8]
  410254:	cmp    rbp,r15
  410257:	je     410290 <strcmp@plt+0xcaf8>
  410259:	mov    rsi,QWORD PTR [rbp+0x10]
  41025d:	mov    rdi,QWORD PTR [r12+0x70]
  410262:	call   40e860 <strcmp@plt+0xb0c8>
  410267:	test   rax,rax
  41026a:	je     410250 <strcmp@plt+0xcab8>
  41026c:	mov    rbx,rax
  41026f:	mov    rdi,rax
  410272:	mov    rsi,r14
  410275:	call   42bc20 <strcmp@plt+0x28488>
  41027a:	test   al,al
  41027c:	jne    410250 <strcmp@plt+0xcab8>
  41027e:	mov    rdi,rbx
  410281:	mov    rsi,r14
  410284:	call   42baa0 <strcmp@plt+0x28308>
  410289:	jmp    410250 <strcmp@plt+0xcab8>
  41028b:	nop    DWORD PTR [rax+rax*1+0x0]
  410290:	test   r13,r13
  410293:	je     4101c0 <strcmp@plt+0xca28>
  410299:	mov    rbp,QWORD PTR [r13+0x8]
  41029d:	cmp    rbp,r13
  4102a0:	jne    4102bd <strcmp@plt+0xcb25>
  4102a2:	jmp    4101c0 <strcmp@plt+0xca28>
  4102a7:	nop    WORD PTR [rax+rax*1+0x0]
  4102b0:	mov    rbp,QWORD PTR [rbp+0x8]
  4102b4:	cmp    rbp,r13
  4102b7:	je     4101c0 <strcmp@plt+0xca28>
  4102bd:	mov    rsi,QWORD PTR [rbp+0x10]
  4102c1:	mov    rdi,QWORD PTR [r12+0x70]
  4102c6:	call   40e860 <strcmp@plt+0xb0c8>
  4102cb:	test   rax,rax
  4102ce:	je     4102b0 <strcmp@plt+0xcb18>
  4102d0:	mov    rbx,rax
  4102d3:	mov    rdi,rax
  4102d6:	mov    rsi,r14
  4102d9:	call   42bc20 <strcmp@plt+0x28488>
  4102de:	test   al,al
  4102e0:	jne    4102b0 <strcmp@plt+0xcb18>
  4102e2:	mov    rdi,rbx
  4102e5:	mov    rsi,r14
  4102e8:	call   42baa0 <strcmp@plt+0x28308>
  4102ed:	jmp    4102b0 <strcmp@plt+0xcb18>
  4102ef:	mov    rdi,QWORD PTR [rsp+0x8]
  4102f4:	call   42bff0 <strcmp@plt+0x28858>
  4102f9:	mov    rbx,QWORD PTR [r14+0x8]
  4102fd:	cmp    rbx,r14
  410300:	je     410325 <strcmp@plt+0xcb8d>
  410302:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41030c:	nop    DWORD PTR [rax+0x0]
  410310:	mov    rsi,QWORD PTR [rbx+0x10]
  410314:	mov    rdi,r12
  410317:	call   40f490 <strcmp@plt+0xbcf8>
  41031c:	mov    rbx,QWORD PTR [rbx+0x8]
  410320:	cmp    rbx,r14
  410323:	jne    410310 <strcmp@plt+0xcb78>
  410325:	mov    rdi,r14
  410328:	call   42bff0 <strcmp@plt+0x28858>
  41032d:	lea    rax,[rip+0x54a8c]        # 464dc0 <strcmp@plt+0x61628>
  410334:	cmp    DWORD PTR [rax],0x2
  410337:	jl     41034c <strcmp@plt+0xcbb4>
  410339:	lea    rsi,[rip+0x35475]        # 4457b5 <strcmp@plt+0x4201d>
  410340:	mov    edi,0x6
  410345:	xor    eax,eax
  410347:	call   42e520 <strcmp@plt+0x2ad88>
  41034c:	mov    eax,0x1
  410351:	add    rsp,0x18
  410355:	pop    rbx
  410356:	pop    r12
  410358:	pop    r13
  41035a:	pop    r14
  41035c:	pop    r15
  41035e:	pop    rbp
  41035f:	ret    
  410360:	push   rbp
  410361:	push   r15
  410363:	push   r14
  410365:	push   r13
  410367:	push   r12
  410369:	push   rbx
  41036a:	sub    rsp,0x848
  410371:	mov    r15,rdi
  410374:	mov    rdi,QWORD PTR [rdi+0x30]
  410378:	call   408720 <strcmp@plt+0x4f88>
  41037d:	mov    QWORD PTR [rsp+0x18],rax
  410382:	mov    r13,QWORD PTR [rax+0x8]
  410386:	mov    rdi,r13
  410389:	call   4291b0 <strcmp@plt+0x25a18>
  41038e:	call   42b980 <strcmp@plt+0x281e8>
  410393:	mov    rbx,rax
  410396:	mov    rax,QWORD PTR [r15+0x70]
  41039a:	mov    rax,QWORD PTR [rax]
  41039d:	mov    rdi,QWORD PTR [rax]
  4103a0:	mov    rsi,rbx
  4103a3:	call   42baa0 <strcmp@plt+0x28308>
  4103a8:	mov    rax,QWORD PTR [r15+0x70]
  4103ac:	mov    rax,QWORD PTR [rax]
  4103af:	mov    rdi,QWORD PTR [rax+0x8]
  4103b3:	mov    QWORD PTR [rsp+0x8],rbx
  4103b8:	mov    rsi,rbx
  4103bb:	call   42baa0 <strcmp@plt+0x28308>
  4103c0:	mov    rax,QWORD PTR [r15+0x70]
  4103c4:	mov    rcx,QWORD PTR [rax]
  4103c7:	mov    rdx,QWORD PTR [rcx+0x10]
  4103cb:	mov    rdx,QWORD PTR [rdx]
  4103ce:	cmp    DWORD PTR [rdx],0x0
  4103d1:	je     410426 <strcmp@plt+0xcc8e>
  4103d3:	xor    ebx,ebx
  4103d5:	mov    r14d,0x3
  4103db:	xor    ebp,ebp
  4103dd:	jmp    4103f3 <strcmp@plt+0xcc5b>
  4103df:	nop
  4103e0:	inc    ebp
  4103e2:	mov    rcx,QWORD PTR [rax]
  4103e5:	mov    rdx,QWORD PTR [rcx+0x10]
  4103e9:	mov    rdx,QWORD PTR [rdx]
  4103ec:	add    ebx,0x2
  4103ef:	cmp    ebp,DWORD PTR [rdx]
  4103f1:	je     410426 <strcmp@plt+0xcc8e>
  4103f3:	mov    rcx,QWORD PTR [rdx+0x10]
  4103f7:	mov    esi,ebp
  4103f9:	shr    esi,0x4
  4103fc:	mov    edi,ebx
  4103fe:	and    dil,0x1e
  410402:	shlx   edi,r14d,edi
  410407:	test   DWORD PTR [rcx+rsi*4],edi
  41040a:	jne    4103e0 <strcmp@plt+0xcc48>
  41040c:	mov    rax,QWORD PTR [rdx+0x20]
  410410:	mov    ecx,ebp
  410412:	mov    rdi,QWORD PTR [rax+rcx*8]
  410416:	mov    rsi,QWORD PTR [rsp+0x8]
  41041b:	call   42baa0 <strcmp@plt+0x28308>
  410420:	mov    rax,QWORD PTR [r15+0x70]
  410424:	jmp    4103e0 <strcmp@plt+0xcc48>
  410426:	mov    rdx,QWORD PTR [rcx+0x18]
  41042a:	mov    rdx,QWORD PTR [rdx]
  41042d:	cmp    DWORD PTR [rdx],0x0
  410430:	je     410486 <strcmp@plt+0xccee>
  410432:	xor    ebx,ebx
  410434:	mov    r14d,0x3
  41043a:	xor    ebp,ebp
  41043c:	jmp    410453 <strcmp@plt+0xccbb>
  41043e:	xchg   ax,ax
  410440:	inc    ebp
  410442:	mov    rcx,QWORD PTR [rax]
  410445:	mov    rdx,QWORD PTR [rcx+0x18]
  410449:	mov    rdx,QWORD PTR [rdx]
  41044c:	add    ebx,0x2
  41044f:	cmp    ebp,DWORD PTR [rdx]
  410451:	je     410486 <strcmp@plt+0xccee>
  410453:	mov    rcx,QWORD PTR [rdx+0x10]
  410457:	mov    esi,ebp
  410459:	shr    esi,0x4
  41045c:	mov    edi,ebx
  41045e:	and    dil,0x1e
  410462:	shlx   edi,r14d,edi
  410467:	test   DWORD PTR [rcx+rsi*4],edi
  41046a:	jne    410440 <strcmp@plt+0xcca8>
  41046c:	mov    rax,QWORD PTR [rdx+0x20]
  410470:	mov    ecx,ebp
  410472:	mov    rdi,QWORD PTR [rax+rcx*8]
  410476:	mov    rsi,QWORD PTR [rsp+0x8]
  41047b:	call   42baa0 <strcmp@plt+0x28308>
  410480:	mov    rax,QWORD PTR [r15+0x70]
  410484:	jmp    410440 <strcmp@plt+0xcca8>
  410486:	mov    rdi,QWORD PTR [rcx+0x20]
  41048a:	mov    rbx,QWORD PTR [rsp+0x8]
  41048f:	mov    rsi,rbx
  410492:	call   42baa0 <strcmp@plt+0x28308>
  410497:	mov    QWORD PTR [rsp+0x20],r15
  41049c:	mov    rax,QWORD PTR [r15+0x70]
  4104a0:	mov    rax,QWORD PTR [rax]
  4104a3:	mov    rdi,QWORD PTR [rax+0x20]
  4104a7:	mov    rsi,rbx
  4104aa:	call   42baa0 <strcmp@plt+0x28308>
  4104af:	mov    rax,QWORD PTR [rbx+0x8]
  4104b3:	cmp    rax,rbx
  4104b6:	jne    4104d4 <strcmp@plt+0xcd3c>
  4104b8:	jmp    41066a <strcmp@plt+0xced2>
  4104bd:	nop    DWORD PTR [rax]
  4104c0:	mov    rax,QWORD PTR [rsp+0x28]
  4104c5:	mov    rax,QWORD PTR [rax+0x8]
  4104c9:	cmp    rax,QWORD PTR [rsp+0x8]
  4104ce:	je     41066a <strcmp@plt+0xced2>
  4104d4:	mov    QWORD PTR [rsp+0x28],rax
  4104d9:	mov    rax,QWORD PTR [rax+0x10]
  4104dd:	mov    r15,QWORD PTR [rax]
  4104e0:	test   r15,r15
  4104e3:	je     4104c0 <strcmp@plt+0xcd28>
  4104e5:	xor    eax,eax
  4104e7:	mov    QWORD PTR [rsp+0x10],rax
  4104ec:	cmp    QWORD PTR [r15+0x8],0x0
  4104f1:	jne    41051f <strcmp@plt+0xcd87>
  4104f3:	jmp    410610 <strcmp@plt+0xce78>
  4104f8:	nop    DWORD PTR [rax+rax*1+0x0]
  410500:	test   rcx,rcx
  410503:	je     410644 <strcmp@plt+0xceac>
  410509:	mov    rax,rcx
  41050c:	mov    r15,rax
  41050f:	test   rax,rax
  410512:	je     4104c0 <strcmp@plt+0xcd28>
  410514:	cmp    QWORD PTR [r15+0x8],0x0
  410519:	je     410610 <strcmp@plt+0xce78>
  41051f:	mov    rax,QWORD PTR [r15+0x28]
  410523:	mov    rbp,QWORD PTR [rax]
  410526:	test   rbp,rbp
  410529:	je     410610 <strcmp@plt+0xce78>
  41052f:	xor    r12d,r12d
  410532:	cmp    QWORD PTR [rbp+0x8],0x0
  410537:	jne    41055f <strcmp@plt+0xcdc7>
  410539:	jmp    4105c8 <strcmp@plt+0xce30>
  41053e:	xchg   ax,ax
  410540:	test   rcx,rcx
  410543:	je     4105ef <strcmp@plt+0xce57>
  410549:	mov    rax,rcx
  41054c:	mov    rbp,rax
  41054f:	test   rax,rax
  410552:	je     410610 <strcmp@plt+0xce78>
  410558:	cmp    QWORD PTR [rbp+0x8],0x0
  41055d:	je     4105c8 <strcmp@plt+0xce30>
  41055f:	mov    rdi,QWORD PTR [rbp+0x28]
  410563:	test   rdi,rdi
  410566:	je     4105c8 <strcmp@plt+0xce30>
  410568:	call   431c60 <strcmp@plt+0x2e4c8>
  41056d:	mov    rbx,rax
  410570:	mov    r14,QWORD PTR [rax+0x8]
  410574:	cmp    r14,rax
  410577:	je     4105c0 <strcmp@plt+0xce28>
  410579:	nop    DWORD PTR [rax+0x0]
  410580:	mov    rdi,QWORD PTR [r14+0x10]
  410584:	mov    esi,0x1
  410589:	xor    edx,edx
  41058b:	mov    ecx,0x1
  410590:	mov    r8d,0x1
  410596:	mov    r9d,0x64
  41059c:	push   0x0
  41059e:	push   0xff
  4105a3:	call   428370 <strcmp@plt+0x24bd8>
  4105a8:	add    rsp,0x10
  4105ac:	mov    rdi,r13
  4105af:	mov    rsi,rax
  4105b2:	call   428ee0 <strcmp@plt+0x25748>
  4105b7:	mov    r14,QWORD PTR [r14+0x8]
  4105bb:	cmp    r14,rbx
  4105be:	jne    410580 <strcmp@plt+0xcde8>
  4105c0:	mov    rdi,rbx
  4105c3:	call   42bff0 <strcmp@plt+0x28858>
  4105c8:	mov    rax,QWORD PTR [rbp+0x10]
  4105cc:	mov    rcx,QWORD PTR [rbp+0x18]
  4105d0:	test   rax,rax
  4105d3:	je     410540 <strcmp@plt+0xcda8>
  4105d9:	test   rcx,rcx
  4105dc:	je     41054c <strcmp@plt+0xcdb4>
  4105e2:	mov    QWORD PTR [rsp+r12*8+0x30],rcx
  4105e7:	inc    r12
  4105ea:	jmp    41054c <strcmp@plt+0xcdb4>
  4105ef:	test   r12,r12
  4105f2:	je     410610 <strcmp@plt+0xce78>
  4105f4:	mov    rax,QWORD PTR [rsp+r12*8+0x28]
  4105f9:	dec    r12
  4105fc:	jmp    41054c <strcmp@plt+0xcdb4>
  410601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41060b:	nop    DWORD PTR [rax+rax*1+0x0]
  410610:	mov    rax,QWORD PTR [r15+0x10]
  410614:	mov    rcx,QWORD PTR [r15+0x18]
  410618:	test   rax,rax
  41061b:	je     410500 <strcmp@plt+0xcd68>
  410621:	test   rcx,rcx
  410624:	je     41050c <strcmp@plt+0xcd74>
  41062a:	mov    rdx,QWORD PTR [rsp+0x10]
  41062f:	mov    QWORD PTR [rsp+rdx*8+0x440],rcx
  410637:	inc    rdx
  41063a:	mov    QWORD PTR [rsp+0x10],rdx
  41063f:	jmp    41050c <strcmp@plt+0xcd74>
  410644:	cmp    QWORD PTR [rsp+0x10],0x0
  41064a:	je     4104c0 <strcmp@plt+0xcd28>
  410650:	mov    rcx,QWORD PTR [rsp+0x10]
  410655:	mov    rax,QWORD PTR [rsp+rcx*8+0x438]
  41065d:	dec    rcx
  410660:	mov    QWORD PTR [rsp+0x10],rcx
  410665:	jmp    41050c <strcmp@plt+0xcd74>
  41066a:	mov    rdi,QWORD PTR [rsp+0x8]
  41066f:	call   42bff0 <strcmp@plt+0x28858>
  410674:	mov    rbx,QWORD PTR [rsp+0x20]
  410679:	mov    rax,QWORD PTR [rbx+0x38]
  41067d:	mov    rdi,QWORD PTR [rbx+0x40]
  410681:	mov    rsi,QWORD PTR [rsp+0x18]
  410686:	call   QWORD PTR [rax+0x38]
  410689:	mov    rdi,rbx
  41068c:	add    rsp,0x848
  410693:	pop    rbx
  410694:	pop    r12
  410696:	pop    r13
  410698:	pop    r14
  41069a:	pop    r15
  41069c:	pop    rbp
  41069d:	jmp    407940 <strcmp@plt+0x41a8>
  4106a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106ac:	nop    DWORD PTR [rax+0x0]
  4106b0:	push   rbp
  4106b1:	push   r15
  4106b3:	push   r14
  4106b5:	push   r13
  4106b7:	push   r12
  4106b9:	push   rbx
  4106ba:	sub    rsp,0x98
  4106c1:	mov    r12,rdi
  4106c4:	call   436ff0 <strcmp@plt+0x33858>
  4106c9:	mov    rbp,rax
  4106cc:	mov    rdi,r12
  4106cf:	call   437010 <strcmp@plt+0x33878>
  4106d4:	mov    rbx,rax
  4106d7:	mov    rdi,r12
  4106da:	call   436fe0 <strcmp@plt+0x33848>
  4106df:	mov    r13,rax
  4106e2:	mov    rdi,QWORD PTR [rbp+0x0]
  4106e6:	call   4317d0 <strcmp@plt+0x2e038>
  4106eb:	mov    r14,rax
  4106ee:	mov    r15,QWORD PTR [rbp+0x8]
  4106f2:	mov    rax,QWORD PTR [rbp+0x10]
  4106f6:	mov    rax,QWORD PTR [rax]
  4106f9:	mov    QWORD PTR [rsp+0x10],rax
  4106fe:	mov    rbp,QWORD PTR [rbp+0x18]
  410702:	mov    rdi,rbx
  410705:	call   432620 <strcmp@plt+0x2ee88>
  41070a:	cmp    eax,DWORD PTR [r13+0x28]
  41070e:	jle    41079b <strcmp@plt+0xd003>
  410714:	lea    rax,[rip+0x5fe9d]        # 4705b8 <strcmp@plt+0x6ce20>
  41071b:	mov    rdi,QWORD PTR [rax]
  41071e:	mov    rsi,rbx
  410721:	call   4323d0 <strcmp@plt+0x2ec38>
  410726:	mov    rdi,r12
  410729:	mov    esi,0x3c
  41072e:	call   437020 <strcmp@plt+0x33888>
  410733:	lea    rax,[rip+0x54686]        # 464dc0 <strcmp@plt+0x61628>
  41073a:	cmp    DWORD PTR [rax],0x0
  41073d:	jle    4109fc <strcmp@plt+0xd264>
  410743:	mov    rdi,r14
  410746:	call   422e20 <strcmp@plt+0x1f688>
  41074b:	mov    r12,rax
  41074e:	mov    rdi,QWORD PTR [r15]
  410751:	call   422e20 <strcmp@plt+0x1f688>
  410756:	mov    r15,rax
  410759:	mov    rdi,QWORD PTR [rsp+0x10]
  41075e:	call   422e20 <strcmp@plt+0x1f688>
  410763:	mov    rdi,rbp
  410766:	mov    rbp,rax
  410769:	call   422e20 <strcmp@plt+0x1f688>
  41076e:	mov    DWORD PTR [rsp],0x3c
  410775:	lea    rsi,[rip+0x354f6]        # 445c72 <strcmp@plt+0x424da>
  41077c:	xor    ebx,ebx
  41077e:	mov    edi,0x5
  410783:	mov    rdx,r12
  410786:	mov    rcx,r15
  410789:	mov    r8,rbp
  41078c:	mov    r9,rax
  41078f:	xor    eax,eax
  410791:	call   42e520 <strcmp@plt+0x2ad88>
  410796:	jmp    410a93 <strcmp@plt+0xd2fb>
  41079b:	mov    QWORD PTR [rsp+0x48],rbp
  4107a0:	xor    ebp,ebp
  4107a2:	xor    eax,eax
  4107a4:	call   432550 <strcmp@plt+0x2edb8>
  4107a9:	mov    QWORD PTR [rsp+0x30],rax
  4107ae:	mov    QWORD PTR [rsp+0x20],r15
  4107b3:	movzx  esi,BYTE PTR [r15+0x8]
  4107b8:	mov    QWORD PTR [rsp+0x28],r14
  4107bd:	mov    rdi,r14
  4107c0:	call   4224c0 <strcmp@plt+0x1ed28>
  4107c5:	mov    r15,rax
  4107c8:	lea    rsi,[r13+0x90]
  4107cf:	mov    r14,r13
  4107d2:	lea    rdx,[r13+0x88]
  4107d9:	mov    rdi,rax
  4107dc:	call   421d00 <strcmp@plt+0x1e568>
  4107e1:	movzx  eax,WORD PTR [r15+0x24]
  4107e6:	cmp    rax,0xffff
  4107ec:	mov    QWORD PTR [rsp+0x18],rbx
  4107f1:	mov    QWORD PTR [rsp+0x40],r12
  4107f6:	je     4107ff <strcmp@plt+0xd067>
  4107f8:	add    rax,QWORD PTR [r15+0x30]
  4107fc:	mov    rbp,rax
  4107ff:	mov    rax,QWORD PTR [rsp+0x30]
  410804:	mov    QWORD PTR [rbp+0x4],rax
  410808:	or     BYTE PTR [rbp+0x0],0xb
  41080c:	mov    rbx,QWORD PTR [rsp+0x20]
  410811:	mov    rdi,QWORD PTR [rbx]
  410814:	call   422ef0 <strcmp@plt+0x1f758>
  410819:	mov    r13d,eax
  41081c:	mov    rdi,QWORD PTR [rsp+0x10]
  410821:	call   422ef0 <strcmp@plt+0x1f758>
  410826:	cmp    r13w,ax
  41082a:	jne    4109b5 <strcmp@plt+0xd21d>
  410830:	mov    r12,r14
  410833:	add    rbp,0xc
  410837:	movzx  edx,BYTE PTR [rbx+0x8]
  41083b:	mov    rcx,QWORD PTR [rbx+0x10]
  41083f:	mov    rdi,r15
  410842:	mov    rsi,rbp
  410845:	call   4226c0 <strcmp@plt+0x1ef28>
  41084a:	cmp    eax,0x1
  41084d:	jne    4109f0 <strcmp@plt+0xd258>
  410853:	mov    r8,QWORD PTR [rbx]
  410856:	mov    rdi,r15
  410859:	mov    esi,0x10f6
  41085e:	mov    edx,0x10f6
  410863:	mov    r14,QWORD PTR [rsp+0x10]
  410868:	mov    rcx,r14
  41086b:	call   421d40 <strcmp@plt+0x1e5a8>
  410870:	movzx  eax,WORD PTR [r15+0x1e]
  410875:	mov    rcx,QWORD PTR [r15+0x30]
  410879:	or     WORD PTR [rcx+rax*1],0x4000
  41087f:	lea    r13,[rip+0x5453a]        # 464dc0 <strcmp@plt+0x61628>
  410886:	cmp    DWORD PTR [r13+0x0],0x0
  41088b:	mov    rbp,QWORD PTR [rsp+0x48]
  410890:	jle    4108fb <strcmp@plt+0xd163>
  410892:	mov    rdi,r15
  410895:	call   422570 <strcmp@plt+0x1edd8>
  41089a:	mov    QWORD PTR [rsp+0x38],rax
  41089f:	mov    rdi,r14
  4108a2:	call   422e20 <strcmp@plt+0x1f688>
  4108a7:	mov    r14,rax
  4108aa:	mov    rdi,QWORD PTR [rbx]
  4108ad:	call   422e20 <strcmp@plt+0x1f688>
  4108b2:	mov    rbx,rax
  4108b5:	mov    rdi,QWORD PTR [rsp+0x28]
  4108ba:	call   422e20 <strcmp@plt+0x1f688>
  4108bf:	mov    r13,rax
  4108c2:	mov    rdi,rbp
  4108c5:	call   422e20 <strcmp@plt+0x1f688>
  4108ca:	mov    QWORD PTR [rsp],rax
  4108ce:	lea    rsi,[rip+0x354a9]        # 445d7e <strcmp@plt+0x425e6>
  4108d5:	mov    edi,0x5
  4108da:	mov    rdx,QWORD PTR [rsp+0x38]
  4108df:	mov    rcx,r14
  4108e2:	mov    r8,rbx
  4108e5:	mov    r14,QWORD PTR [rsp+0x10]
  4108ea:	mov    r9,r13
  4108ed:	lea    r13,[rip+0x544cc]        # 464dc0 <strcmp@plt+0x61628>
  4108f4:	xor    eax,eax
  4108f6:	call   42e520 <strcmp@plt+0x2ad88>
  4108fb:	movzx  esi,WORD PTR [r12+0x5c]
  410901:	lea    rbx,[rsp+0x50]
  410906:	mov    rdi,rbx
  410909:	mov    edx,0x10f6
  41090e:	mov    rcx,r14
  410911:	mov    r8,rbp
  410914:	call   435260 <strcmp@plt+0x31ac8>
  410919:	mov    rdi,r12
  41091c:	mov    rsi,r15
  41091f:	mov    rdx,rbx
  410922:	call   407920 <strcmp@plt+0x4188>
  410927:	mov    rdi,r15
  41092a:	call   42dd40 <strcmp@plt+0x2a5a8>
  41092f:	mov    r15,QWORD PTR [rsp+0x18]
  410934:	mov    rdi,r15
  410937:	call   432620 <strcmp@plt+0x2ee88>
  41093c:	mov    ecx,DWORD PTR [r13+0x0]
  410940:	test   eax,eax
  410942:	mov    rbx,rbp
  410945:	mov    rdi,QWORD PTR [rsp+0x28]
  41094a:	jle    410a1a <strcmp@plt+0xd282>
  410950:	test   ecx,ecx
  410952:	jle    410a68 <strcmp@plt+0xd2d0>
  410958:	call   422e20 <strcmp@plt+0x1f688>
  41095d:	mov    r15,rax
  410960:	mov    rax,QWORD PTR [rsp+0x20]
  410965:	mov    rdi,QWORD PTR [rax]
  410968:	call   422e20 <strcmp@plt+0x1f688>
  41096d:	mov    r12,rax
  410970:	mov    rdi,r14
  410973:	call   422e20 <strcmp@plt+0x1f688>
  410978:	mov    r13,rax
  41097b:	mov    rdi,rbx
  41097e:	call   422e20 <strcmp@plt+0x1f688>
  410983:	mov    rbx,rax
  410986:	mov    rdi,QWORD PTR [rsp+0x18]
  41098b:	call   432620 <strcmp@plt+0x2ee88>
  410990:	mov    DWORD PTR [rsp],eax
  410993:	lea    rsi,[rip+0x3522e]        # 445bc8 <strcmp@plt+0x42430>
  41099a:	mov    edi,0x5
  41099f:	mov    rdx,r15
  4109a2:	mov    rcx,r12
  4109a5:	mov    r8,r13
  4109a8:	mov    r15,QWORD PTR [rsp+0x18]
  4109ad:	mov    r9,rbx
  4109b0:	jmp    410a61 <strcmp@plt+0xd2c9>
  4109b5:	lea    rax,[rip+0x54404]        # 464dc0 <strcmp@plt+0x61628>
  4109bc:	cmp    DWORD PTR [rax],0x0
  4109bf:	jle    4109e1 <strcmp@plt+0xd249>
  4109c1:	mov    rdi,QWORD PTR [rsp+0x10]
  4109c6:	call   422e20 <strcmp@plt+0x1f688>
  4109cb:	lea    rsi,[rip+0x35312]        # 445ce4 <strcmp@plt+0x4254c>
  4109d2:	mov    edi,0x5
  4109d7:	mov    rdx,rax
  4109da:	xor    eax,eax
  4109dc:	call   42e520 <strcmp@plt+0x2ad88>
  4109e1:	test   r15,r15
  4109e4:	je     4109fc <strcmp@plt+0xd264>
  4109e6:	mov    rdi,r15
  4109e9:	call   42dd40 <strcmp@plt+0x2a5a8>
  4109ee:	jmp    4109fc <strcmp@plt+0xd264>
  4109f0:	lea    rax,[rip+0x543c9]        # 464dc0 <strcmp@plt+0x61628>
  4109f7:	cmp    DWORD PTR [rax],0x2
  4109fa:	jge    410a03 <strcmp@plt+0xd26b>
  4109fc:	xor    ebx,ebx
  4109fe:	jmp    410a93 <strcmp@plt+0xd2fb>
  410a03:	lea    rsi,[rip+0x35332]        # 445d3c <strcmp@plt+0x425a4>
  410a0a:	mov    edi,0x6
  410a0f:	xor    eax,eax
  410a11:	call   42e520 <strcmp@plt+0x2ad88>
  410a16:	xor    ebx,ebx
  410a18:	jmp    410a93 <strcmp@plt+0xd2fb>
  410a1a:	test   ecx,ecx
  410a1c:	jle    410a68 <strcmp@plt+0xd2d0>
  410a1e:	call   422e20 <strcmp@plt+0x1f688>
  410a23:	mov    rbp,rax
  410a26:	mov    rax,QWORD PTR [rsp+0x20]
  410a2b:	mov    rdi,QWORD PTR [rax]
  410a2e:	call   422e20 <strcmp@plt+0x1f688>
  410a33:	mov    r12,rax
  410a36:	mov    rdi,r14
  410a39:	call   422e20 <strcmp@plt+0x1f688>
  410a3e:	mov    r13,rax
  410a41:	mov    rdi,rbx
  410a44:	call   422e20 <strcmp@plt+0x1f688>
  410a49:	lea    rsi,[rip+0x351d6]        # 445c26 <strcmp@plt+0x4248e>
  410a50:	mov    edi,0x5
  410a55:	mov    rdx,rbp
  410a58:	mov    rcx,r12
  410a5b:	mov    r8,r13
  410a5e:	mov    r9,rax
  410a61:	xor    eax,eax
  410a63:	call   42e520 <strcmp@plt+0x2ad88>
  410a68:	lea    rax,[rip+0x5fb49]        # 4705b8 <strcmp@plt+0x6ce20>
  410a6f:	mov    rdi,QWORD PTR [rax]
  410a72:	mov    rsi,QWORD PTR [rsp+0x30]
  410a77:	mov    rdx,r15
  410a7a:	call   431f60 <strcmp@plt+0x2e7c8>
  410a7f:	mov    rdi,QWORD PTR [rsp+0x40]
  410a84:	mov    esi,0x3
  410a89:	call   437020 <strcmp@plt+0x33888>
  410a8e:	mov    ebx,0x1
  410a93:	mov    eax,ebx
  410a95:	add    rsp,0x98
  410a9c:	pop    rbx
  410a9d:	pop    r12
  410a9f:	pop    r13
  410aa1:	pop    r14
  410aa3:	pop    r15
  410aa5:	pop    rbp
  410aa6:	ret    
  410aa7:	nop    WORD PTR [rax+rax*1+0x0]
  410ab0:	push   rbx
  410ab1:	mov    rbx,rdi
  410ab4:	mov    rdi,QWORD PTR [rdi+0x18]
  410ab8:	call   422c90 <strcmp@plt+0x1f4f8>
  410abd:	mov    rdi,rbx
  410ac0:	pop    rbx
  410ac1:	jmp    403790 <free@plt>
  410ac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ad0:	test   rsi,rsi
  410ad3:	je     410af3 <strcmp@plt+0xd35b>
  410ad5:	push   rax
  410ad6:	mov    rdx,rsi
  410ad9:	mov    rdi,QWORD PTR [rdi+0x18]
  410add:	mov    rsi,QWORD PTR [rsi]
  410ae0:	call   42ee50 <strcmp@plt+0x2b6b8>
  410ae5:	mov    ecx,eax
  410ae7:	xor    eax,eax
  410ae9:	test   ecx,ecx
  410aeb:	setne  al
  410aee:	add    rsp,0x8
  410af2:	ret    
  410af3:	xor    eax,eax
  410af5:	ret    
  410af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410b00:	test   rsi,rsi
  410b03:	je     410b3c <strcmp@plt+0xd3a4>
  410b05:	push   r14
  410b07:	push   rbx
  410b08:	push   rax
  410b09:	mov    rbx,rsi
  410b0c:	mov    r14,rdi
  410b0f:	mov    edi,0x10
  410b14:	call   431d60 <strcmp@plt+0x2e5c8>
  410b19:	mov    QWORD PTR [rax],rbx
  410b1c:	mov    rdi,QWORD PTR [r14+0x20]
  410b20:	mov    rsi,rbx
  410b23:	mov    rdx,rax
  410b26:	call   42ee50 <strcmp@plt+0x2b6b8>
  410b2b:	mov    ecx,eax
  410b2d:	xor    eax,eax
  410b2f:	test   ecx,ecx
  410b31:	setne  al
  410b34:	add    rsp,0x8
  410b38:	pop    rbx
  410b39:	pop    r14
  410b3b:	ret    
  410b3c:	xor    eax,eax
  410b3e:	ret    
  410b3f:	nop
  410b40:	push   rbp
  410b41:	push   r15
  410b43:	push   r14
  410b45:	push   r13
  410b47:	push   r12
  410b49:	push   rbx
  410b4a:	sub    rsp,0x838
  410b51:	mov    ebx,esi
  410b53:	mov    r14,rdi
  410b56:	cmp    esi,0x5
  410b59:	jl     410b6f <strcmp@plt+0xd3d7>
  410b5b:	lea    rax,[rip+0x5425e]        # 464dc0 <strcmp@plt+0x61628>
  410b62:	mov    eax,DWORD PTR [rax]
  410b64:	add    eax,0x4
  410b67:	cmp    eax,ebx
  410b69:	jl     410f09 <strcmp@plt+0xd771>
  410b6f:	lea    rsi,[rip+0x3549e]        # 446014 <strcmp@plt+0x4287c>
  410b76:	xor    r12d,r12d
  410b79:	mov    edi,ebx
  410b7b:	xor    eax,eax
  410b7d:	call   42e520 <strcmp@plt+0x2ad88>
  410b82:	call   42b980 <strcmp@plt+0x281e8>
  410b87:	mov    rbp,rax
  410b8a:	mov    rax,QWORD PTR [r14+0x18]
  410b8e:	mov    rdi,QWORD PTR [rax]
  410b91:	mov    rsi,rbp
  410b94:	call   42baa0 <strcmp@plt+0x28308>
  410b99:	mov    rax,QWORD PTR [r14+0x18]
  410b9d:	mov    rdi,QWORD PTR [rax+0x8]
  410ba1:	mov    QWORD PTR [rsp+0x8],rbp
  410ba6:	mov    rsi,rbp
  410ba9:	call   42baa0 <strcmp@plt+0x28308>
  410bae:	mov    rax,QWORD PTR [r14+0x18]
  410bb2:	mov    rcx,QWORD PTR [rax+0x10]
  410bb6:	mov    rcx,QWORD PTR [rcx]
  410bb9:	cmp    DWORD PTR [rcx],0x0
  410bbc:	je     410c15 <strcmp@plt+0xd47d>
  410bbe:	mov    r15d,0x3
  410bc4:	xor    ebp,ebp
  410bc6:	jmp    410be1 <strcmp@plt+0xd449>
  410bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  410bd0:	inc    ebp
  410bd2:	mov    rcx,QWORD PTR [rax+0x10]
  410bd6:	mov    rcx,QWORD PTR [rcx]
  410bd9:	add    r12d,0x2
  410bdd:	cmp    ebp,DWORD PTR [rcx]
  410bdf:	je     410c15 <strcmp@plt+0xd47d>
  410be1:	mov    rdx,QWORD PTR [rcx+0x10]
  410be5:	mov    esi,ebp
  410be7:	shr    esi,0x4
  410bea:	mov    edi,r12d
  410bed:	and    dil,0x1e
  410bf1:	shlx   edi,r15d,edi
  410bf6:	test   DWORD PTR [rdx+rsi*4],edi
  410bf9:	jne    410bd0 <strcmp@plt+0xd438>
  410bfb:	mov    rax,QWORD PTR [rcx+0x20]
  410bff:	mov    ecx,ebp
  410c01:	mov    rdi,QWORD PTR [rax+rcx*8]
  410c05:	mov    rsi,QWORD PTR [rsp+0x8]
  410c0a:	call   42baa0 <strcmp@plt+0x28308>
  410c0f:	mov    rax,QWORD PTR [r14+0x18]
  410c13:	jmp    410bd0 <strcmp@plt+0xd438>
  410c15:	mov    rcx,QWORD PTR [rax+0x18]
  410c19:	mov    rcx,QWORD PTR [rcx]
  410c1c:	cmp    DWORD PTR [rcx],0x0
  410c1f:	je     410c75 <strcmp@plt+0xd4dd>
  410c21:	xor    r12d,r12d
  410c24:	mov    r15d,0x3
  410c2a:	xor    ebp,ebp
  410c2c:	jmp    410c41 <strcmp@plt+0xd4a9>
  410c2e:	xchg   ax,ax
  410c30:	inc    ebp
  410c32:	mov    rcx,QWORD PTR [rax+0x18]
  410c36:	mov    rcx,QWORD PTR [rcx]
  410c39:	add    r12d,0x2
  410c3d:	cmp    ebp,DWORD PTR [rcx]
  410c3f:	je     410c75 <strcmp@plt+0xd4dd>
  410c41:	mov    rdx,QWORD PTR [rcx+0x10]
  410c45:	mov    esi,ebp
  410c47:	shr    esi,0x4
  410c4a:	mov    edi,r12d
  410c4d:	and    dil,0x1e
  410c51:	shlx   edi,r15d,edi
  410c56:	test   DWORD PTR [rdx+rsi*4],edi
  410c59:	jne    410c30 <strcmp@plt+0xd498>
  410c5b:	mov    rax,QWORD PTR [rcx+0x20]
  410c5f:	mov    ecx,ebp
  410c61:	mov    rdi,QWORD PTR [rax+rcx*8]
  410c65:	mov    rsi,QWORD PTR [rsp+0x8]
  410c6a:	call   42baa0 <strcmp@plt+0x28308>
  410c6f:	mov    rax,QWORD PTR [r14+0x18]
  410c73:	jmp    410c30 <strcmp@plt+0xd498>
  410c75:	mov    rdi,QWORD PTR [rax+0x20]
  410c79:	mov    rbp,QWORD PTR [rsp+0x8]
  410c7e:	mov    rsi,rbp
  410c81:	call   42baa0 <strcmp@plt+0x28308>
  410c86:	mov    rax,QWORD PTR [r14+0x18]
  410c8a:	mov    rdi,QWORD PTR [rax+0x20]
  410c8e:	mov    rsi,rbp
  410c91:	call   42baa0 <strcmp@plt+0x28308>
  410c96:	mov    rax,QWORD PTR [rbp+0x8]
  410c9a:	cmp    rax,rbp
  410c9d:	je     410eea <strcmp@plt+0xd752>
  410ca3:	lea    r13,[rip+0x3faa9]        # 450753 <strcmp@plt+0x4cfbb>
  410caa:	jmp    410cc4 <strcmp@plt+0xd52c>
  410cac:	nop    DWORD PTR [rax+0x0]
  410cb0:	mov    rax,QWORD PTR [rsp+0x18]
  410cb5:	mov    rax,QWORD PTR [rax+0x8]
  410cb9:	cmp    rax,QWORD PTR [rsp+0x8]
  410cbe:	je     410eea <strcmp@plt+0xd752>
  410cc4:	mov    QWORD PTR [rsp+0x18],rax
  410cc9:	mov    rax,QWORD PTR [rax+0x10]
  410ccd:	mov    r15,QWORD PTR [rax]
  410cd0:	test   r15,r15
  410cd3:	je     410cb0 <strcmp@plt+0xd518>
  410cd5:	xor    eax,eax
  410cd7:	mov    QWORD PTR [rsp+0x10],rax
  410cdc:	cmp    QWORD PTR [r15+0x8],0x0
  410ce1:	jne    410d0f <strcmp@plt+0xd577>
  410ce3:	jmp    410e90 <strcmp@plt+0xd6f8>
  410ce8:	nop    DWORD PTR [rax+rax*1+0x0]
  410cf0:	test   rcx,rcx
  410cf3:	je     410ec4 <strcmp@plt+0xd72c>
  410cf9:	mov    rax,rcx
  410cfc:	mov    r15,rax
  410cff:	test   rax,rax
  410d02:	je     410cb0 <strcmp@plt+0xd518>
  410d04:	cmp    QWORD PTR [r15+0x8],0x0
  410d09:	je     410e90 <strcmp@plt+0xd6f8>
  410d0f:	mov    rax,QWORD PTR [r15+0x28]
  410d13:	mov    rbp,QWORD PTR [rax]
  410d16:	test   rbp,rbp
  410d19:	je     410e90 <strcmp@plt+0xd6f8>
  410d1f:	xor    r12d,r12d
  410d22:	cmp    QWORD PTR [rbp+0x8],0x0
  410d27:	jne    410d53 <strcmp@plt+0xd5bb>
  410d29:	jmp    410e60 <strcmp@plt+0xd6c8>
  410d2e:	xchg   ax,ax
  410d30:	test   rcx,rcx
  410d33:	je     410e2b <strcmp@plt+0xd693>
  410d39:	mov    rax,rcx
  410d3c:	mov    rbp,rax
  410d3f:	test   rax,rax
  410d42:	je     410e90 <strcmp@plt+0xd6f8>
  410d48:	cmp    QWORD PTR [rbp+0x8],0x0
  410d4d:	je     410e60 <strcmp@plt+0xd6c8>
  410d53:	mov    r14,QWORD PTR [rbp+0x28]
  410d57:	test   r14,r14
  410d5a:	je     410e60 <strcmp@plt+0xd6c8>
  410d60:	cmp    ebx,0x5
  410d63:	jl     410d90 <strcmp@plt+0xd5f8>
  410d65:	lea    rax,[rip+0x54054]        # 464dc0 <strcmp@plt+0x61628>
  410d6c:	mov    eax,DWORD PTR [rax]
  410d6e:	add    eax,0x4
  410d71:	cmp    eax,ebx
  410d73:	jge    410d90 <strcmp@plt+0xd5f8>
  410d75:	mov    rdi,QWORD PTR [r14+0x20]
  410d79:	cmp    DWORD PTR [rdi+0x18],0x0
  410d7d:	jg     410e1b <strcmp@plt+0xd683>
  410d83:	jmp    410e60 <strcmp@plt+0xd6c8>
  410d88:	nop    DWORD PTR [rax+rax*1+0x0]
  410d90:	mov    rdi,QWORD PTR [r14]
  410d93:	call   422e20 <strcmp@plt+0x1f688>
  410d98:	cmp    BYTE PTR [r14+0x9],0x0
  410d9d:	mov    rcx,r13
  410da0:	lea    rdx,[rip+0x352dd]        # 446084 <strcmp@plt+0x428ec>
  410da7:	cmove  rcx,rdx
  410dab:	cmp    BYTE PTR [r14+0x18],0x0
  410db0:	mov    r8,r13
  410db3:	cmove  r8,rdx
  410db7:	cmp    BYTE PTR [r14+0x8],0x0
  410dbc:	mov    r9,r13
  410dbf:	cmove  r9,rdx
  410dc3:	mov    edi,ebx
  410dc5:	lea    rsi,[rip+0x35282]        # 44604e <strcmp@plt+0x428b6>
  410dcc:	mov    rdx,rax
  410dcf:	xor    eax,eax
  410dd1:	call   42e520 <strcmp@plt+0x2ad88>
  410dd6:	mov    rdi,QWORD PTR [r14+0x20]
  410dda:	mov    eax,DWORD PTR [rdi+0x18]
  410ddd:	cmp    ebx,0x5
  410de0:	jge    410de8 <strcmp@plt+0xd650>
  410de2:	test   eax,eax
  410de4:	jg     410dfc <strcmp@plt+0xd664>
  410de6:	jmp    410e41 <strcmp@plt+0xd6a9>
  410de8:	lea    rcx,[rip+0x53fd1]        # 464dc0 <strcmp@plt+0x61628>
  410def:	mov    ecx,DWORD PTR [rcx]
  410df1:	add    ecx,0x4
  410df4:	test   eax,eax
  410df6:	jle    410e3d <strcmp@plt+0xd6a5>
  410df8:	cmp    ecx,ebx
  410dfa:	jl     410e1b <strcmp@plt+0xd683>
  410dfc:	mov    rdi,QWORD PTR [r14]
  410dff:	call   422e20 <strcmp@plt+0x1f688>
  410e04:	mov    edi,ebx
  410e06:	lea    rsi,[rip+0x3527b]        # 446088 <strcmp@plt+0x428f0>
  410e0d:	mov    rdx,rax
  410e10:	xor    eax,eax
  410e12:	call   42e520 <strcmp@plt+0x2ad88>
  410e17:	mov    rdi,QWORD PTR [r14+0x20]
  410e1b:	lea    rsi,[rip+0x11ffe]        # 422e20 <strcmp@plt+0x1f688>
  410e22:	mov    edx,ebx
  410e24:	call   42bce0 <strcmp@plt+0x28548>
  410e29:	jmp    410e60 <strcmp@plt+0xd6c8>
  410e2b:	test   r12,r12
  410e2e:	je     410e90 <strcmp@plt+0xd6f8>
  410e30:	mov    rax,QWORD PTR [rsp+r12*8+0x18]
  410e35:	dec    r12
  410e38:	jmp    410d3c <strcmp@plt+0xd5a4>
  410e3d:	cmp    ecx,ebx
  410e3f:	jl     410e60 <strcmp@plt+0xd6c8>
  410e41:	mov    rdi,QWORD PTR [r14]
  410e44:	call   422e20 <strcmp@plt+0x1f688>
  410e49:	mov    edi,ebx
  410e4b:	lea    rsi,[rip+0x3524f]        # 4460a1 <strcmp@plt+0x42909>
  410e52:	mov    rdx,rax
  410e55:	xor    eax,eax
  410e57:	call   42e520 <strcmp@plt+0x2ad88>
  410e5c:	nop    DWORD PTR [rax+0x0]
  410e60:	mov    rax,QWORD PTR [rbp+0x10]
  410e64:	mov    rcx,QWORD PTR [rbp+0x18]
  410e68:	test   rax,rax
  410e6b:	je     410d30 <strcmp@plt+0xd598>
  410e71:	test   rcx,rcx
  410e74:	je     410d3c <strcmp@plt+0xd5a4>
  410e7a:	mov    QWORD PTR [rsp+r12*8+0x20],rcx
  410e7f:	inc    r12
  410e82:	jmp    410d3c <strcmp@plt+0xd5a4>
  410e87:	nop    WORD PTR [rax+rax*1+0x0]
  410e90:	mov    rax,QWORD PTR [r15+0x10]
  410e94:	mov    rcx,QWORD PTR [r15+0x18]
  410e98:	test   rax,rax
  410e9b:	je     410cf0 <strcmp@plt+0xd558>
  410ea1:	test   rcx,rcx
  410ea4:	je     410cfc <strcmp@plt+0xd564>
  410eaa:	mov    rdx,QWORD PTR [rsp+0x10]
  410eaf:	mov    QWORD PTR [rsp+rdx*8+0x430],rcx
  410eb7:	inc    rdx
  410eba:	mov    QWORD PTR [rsp+0x10],rdx
  410ebf:	jmp    410cfc <strcmp@plt+0xd564>
  410ec4:	cmp    QWORD PTR [rsp+0x10],0x0
  410eca:	je     410cb0 <strcmp@plt+0xd518>
  410ed0:	mov    rcx,QWORD PTR [rsp+0x10]
  410ed5:	mov    rax,QWORD PTR [rsp+rcx*8+0x428]
  410edd:	dec    rcx
  410ee0:	mov    QWORD PTR [rsp+0x10],rcx
  410ee5:	jmp    410cfc <strcmp@plt+0xd564>
  410eea:	mov    rdi,QWORD PTR [rsp+0x8]
  410eef:	call   42bff0 <strcmp@plt+0x28858>
  410ef4:	cmp    ebx,0x5
  410ef7:	jl     410f1b <strcmp@plt+0xd783>
  410ef9:	lea    rax,[rip+0x53ec0]        # 464dc0 <strcmp@plt+0x61628>
  410f00:	mov    eax,DWORD PTR [rax]
  410f02:	add    eax,0x4
  410f05:	cmp    eax,ebx
  410f07:	jge    410f1b <strcmp@plt+0xd783>
  410f09:	add    rsp,0x838
  410f10:	pop    rbx
  410f11:	pop    r12
  410f13:	pop    r13
  410f15:	pop    r14
  410f17:	pop    r15
  410f19:	pop    rbp
  410f1a:	ret    
  410f1b:	lea    rsi,[rip+0x3418d]        # 4450af <strcmp@plt+0x41917>
  410f22:	mov    edi,ebx
  410f24:	xor    eax,eax
  410f26:	add    rsp,0x838
  410f2d:	pop    rbx
  410f2e:	pop    r12
  410f30:	pop    r13
  410f32:	pop    r14
  410f34:	pop    r15
  410f36:	pop    rbp
  410f37:	jmp    42e520 <strcmp@plt+0x2ad88>
  410f3c:	nop    DWORD PTR [rax+0x0]
  410f40:	push   rbp
  410f41:	push   r15
  410f43:	push   r14
  410f45:	push   r13
  410f47:	push   r12
  410f49:	push   rbx
  410f4a:	sub    rsp,0x828
  410f51:	mov    ebx,esi
  410f53:	mov    r15,rdi
  410f56:	cmp    esi,0x5
  410f59:	jl     410f6f <strcmp@plt+0xd7d7>
  410f5b:	lea    rax,[rip+0x53e5e]        # 464dc0 <strcmp@plt+0x61628>
  410f62:	mov    eax,DWORD PTR [rax]
  410f64:	add    eax,0x4
  410f67:	cmp    eax,ebx
  410f69:	jl     411211 <strcmp@plt+0xda79>
  410f6f:	lea    rsi,[rip+0x35145]        # 4460bb <strcmp@plt+0x42923>
  410f76:	xor    r12d,r12d
  410f79:	mov    edi,ebx
  410f7b:	xor    eax,eax
  410f7d:	call   42e520 <strcmp@plt+0x2ad88>
  410f82:	call   42b980 <strcmp@plt+0x281e8>
  410f87:	mov    rbp,rax
  410f8a:	mov    rax,QWORD PTR [r15+0x20]
  410f8e:	mov    rdi,QWORD PTR [rax]
  410f91:	mov    rsi,rbp
  410f94:	call   42baa0 <strcmp@plt+0x28308>
  410f99:	mov    rax,QWORD PTR [r15+0x20]
  410f9d:	mov    rdi,QWORD PTR [rax+0x8]
  410fa1:	mov    QWORD PTR [rsp],rbp
  410fa5:	mov    rsi,rbp
  410fa8:	call   42baa0 <strcmp@plt+0x28308>
  410fad:	mov    rax,QWORD PTR [r15+0x20]
  410fb1:	mov    rcx,QWORD PTR [rax+0x10]
  410fb5:	mov    rcx,QWORD PTR [rcx]
  410fb8:	cmp    DWORD PTR [rcx],0x0
  410fbb:	je     411014 <strcmp@plt+0xd87c>
  410fbd:	mov    r14d,0x3
  410fc3:	xor    ebp,ebp
  410fc5:	jmp    410fe1 <strcmp@plt+0xd849>
  410fc7:	nop    WORD PTR [rax+rax*1+0x0]
  410fd0:	inc    ebp
  410fd2:	mov    rcx,QWORD PTR [rax+0x10]
  410fd6:	mov    rcx,QWORD PTR [rcx]
  410fd9:	add    r12d,0x2
  410fdd:	cmp    ebp,DWORD PTR [rcx]
  410fdf:	je     411014 <strcmp@plt+0xd87c>
  410fe1:	mov    rdx,QWORD PTR [rcx+0x10]
  410fe5:	mov    esi,ebp
  410fe7:	shr    esi,0x4
  410fea:	mov    edi,r12d
  410fed:	and    dil,0x1e
  410ff1:	shlx   edi,r14d,edi
  410ff6:	test   DWORD PTR [rdx+rsi*4],edi
  410ff9:	jne    410fd0 <strcmp@plt+0xd838>
  410ffb:	mov    rax,QWORD PTR [rcx+0x20]
  410fff:	mov    ecx,ebp
  411001:	mov    rdi,QWORD PTR [rax+rcx*8]
  411005:	mov    rsi,QWORD PTR [rsp]
  411009:	call   42baa0 <strcmp@plt+0x28308>
  41100e:	mov    rax,QWORD PTR [r15+0x20]
  411012:	jmp    410fd0 <strcmp@plt+0xd838>
  411014:	mov    rcx,QWORD PTR [rax+0x18]
  411018:	mov    rcx,QWORD PTR [rcx]
  41101b:	cmp    DWORD PTR [rcx],0x0
  41101e:	je     411074 <strcmp@plt+0xd8dc>
  411020:	xor    r12d,r12d
  411023:	mov    r14d,0x3
  411029:	xor    ebp,ebp
  41102b:	jmp    411041 <strcmp@plt+0xd8a9>
  41102d:	nop    DWORD PTR [rax]
  411030:	inc    ebp
  411032:	mov    rcx,QWORD PTR [rax+0x18]
  411036:	mov    rcx,QWORD PTR [rcx]
  411039:	add    r12d,0x2
  41103d:	cmp    ebp,DWORD PTR [rcx]
  41103f:	je     411074 <strcmp@plt+0xd8dc>
  411041:	mov    rdx,QWORD PTR [rcx+0x10]
  411045:	mov    esi,ebp
  411047:	shr    esi,0x4
  41104a:	mov    edi,r12d
  41104d:	and    dil,0x1e
  411051:	shlx   edi,r14d,edi
  411056:	test   DWORD PTR [rdx+rsi*4],edi
  411059:	jne    411030 <strcmp@plt+0xd898>
  41105b:	mov    rax,QWORD PTR [rcx+0x20]
  41105f:	mov    ecx,ebp
  411061:	mov    rdi,QWORD PTR [rax+rcx*8]
  411065:	mov    rsi,QWORD PTR [rsp]
  411069:	call   42baa0 <strcmp@plt+0x28308>
  41106e:	mov    rax,QWORD PTR [r15+0x20]
  411072:	jmp    411030 <strcmp@plt+0xd898>
  411074:	mov    rdi,QWORD PTR [rax+0x20]
  411078:	mov    rbp,QWORD PTR [rsp]
  41107c:	mov    rsi,rbp
  41107f:	call   42baa0 <strcmp@plt+0x28308>
  411084:	mov    rax,QWORD PTR [r15+0x20]
  411088:	mov    rdi,QWORD PTR [rax+0x20]
  41108c:	mov    rsi,rbp
  41108f:	call   42baa0 <strcmp@plt+0x28308>
  411094:	mov    rax,QWORD PTR [rbp+0x8]
  411098:	cmp    rax,rbp
  41109b:	je     4111f3 <strcmp@plt+0xda5b>
  4110a1:	lea    r15,[rip+0x3260d]        # 4436b5 <strcmp@plt+0x3ff1d>
  4110a8:	jmp    4110c3 <strcmp@plt+0xd92b>
  4110aa:	nop    WORD PTR [rax+rax*1+0x0]
  4110b0:	mov    rax,QWORD PTR [rsp+0x8]
  4110b5:	mov    rax,QWORD PTR [rax+0x8]
  4110b9:	cmp    rax,QWORD PTR [rsp]
  4110bd:	je     4111f3 <strcmp@plt+0xda5b>
  4110c3:	mov    QWORD PTR [rsp+0x8],rax
  4110c8:	mov    rax,QWORD PTR [rax+0x10]
  4110cc:	mov    r14,QWORD PTR [rax]
  4110cf:	test   r14,r14
  4110d2:	je     4110b0 <strcmp@plt+0xd918>
  4110d4:	xor    ebp,ebp
  4110d6:	cmp    QWORD PTR [r14+0x8],0x0
  4110db:	jne    41110f <strcmp@plt+0xd977>
  4110dd:	jmp    4111b0 <strcmp@plt+0xda18>
  4110e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110ec:	nop    DWORD PTR [rax+0x0]
  4110f0:	test   rcx,rcx
  4110f3:	je     4111da <strcmp@plt+0xda42>
  4110f9:	mov    rax,rcx
  4110fc:	mov    r14,rax
  4110ff:	test   rax,rax
  411102:	je     4110b0 <strcmp@plt+0xd918>
  411104:	cmp    QWORD PTR [r14+0x8],0x0
  411109:	je     4111b0 <strcmp@plt+0xda18>
  41110f:	mov    rax,QWORD PTR [r14+0x28]
  411113:	mov    r13,QWORD PTR [rax]
  411116:	test   r13,r13
  411119:	je     4111b0 <strcmp@plt+0xda18>
  41111f:	xor    r12d,r12d
  411122:	cmp    QWORD PTR [r13+0x8],0x0
  411127:	jne    411147 <strcmp@plt+0xd9af>
  411129:	jmp    41117c <strcmp@plt+0xd9e4>
  41112b:	nop    DWORD PTR [rax+rax*1+0x0]
  411130:	test   rcx,rcx
  411133:	je     411198 <strcmp@plt+0xda00>
  411135:	mov    rax,rcx
  411138:	mov    r13,rax
  41113b:	test   rax,rax
  41113e:	je     4111b0 <strcmp@plt+0xda18>
  411140:	cmp    QWORD PTR [r13+0x8],0x0
  411145:	je     41117c <strcmp@plt+0xd9e4>
  411147:	mov    rax,QWORD PTR [r13+0x28]
  41114b:	test   rax,rax
  41114e:	je     41117c <strcmp@plt+0xd9e4>
  411150:	cmp    ebx,0x5
  411153:	jl     411165 <strcmp@plt+0xd9cd>
  411155:	lea    rcx,[rip+0x53c64]        # 464dc0 <strcmp@plt+0x61628>
  41115c:	mov    ecx,DWORD PTR [rcx]
  41115e:	add    ecx,0x4
  411161:	cmp    ecx,ebx
  411163:	jl     41117c <strcmp@plt+0xd9e4>
  411165:	mov    rdi,QWORD PTR [rax]
  411168:	call   428d40 <strcmp@plt+0x255a8>
  41116d:	mov    edi,ebx
  41116f:	mov    rsi,r15
  411172:	mov    rdx,rax
  411175:	xor    eax,eax
  411177:	call   42e520 <strcmp@plt+0x2ad88>
  41117c:	mov    rax,QWORD PTR [r13+0x10]
  411180:	mov    rcx,QWORD PTR [r13+0x18]
  411184:	test   rax,rax
  411187:	je     411130 <strcmp@plt+0xd998>
  411189:	test   rcx,rcx
  41118c:	je     411138 <strcmp@plt+0xd9a0>
  41118e:	mov    QWORD PTR [rsp+r12*8+0x10],rcx
  411193:	inc    r12
  411196:	jmp    411138 <strcmp@plt+0xd9a0>
  411198:	test   r12,r12
  41119b:	je     4111b0 <strcmp@plt+0xda18>
  41119d:	mov    rax,QWORD PTR [rsp+r12*8+0x8]
  4111a2:	dec    r12
  4111a5:	jmp    411138 <strcmp@plt+0xd9a0>
  4111a7:	nop    WORD PTR [rax+rax*1+0x0]
  4111b0:	mov    rax,QWORD PTR [r14+0x10]
  4111b4:	mov    rcx,QWORD PTR [r14+0x18]
  4111b8:	test   rax,rax
  4111bb:	je     4110f0 <strcmp@plt+0xd958>
  4111c1:	test   rcx,rcx
  4111c4:	je     4110fc <strcmp@plt+0xd964>
  4111ca:	mov    QWORD PTR [rsp+rbp*8+0x420],rcx
  4111d2:	inc    rbp
  4111d5:	jmp    4110fc <strcmp@plt+0xd964>
  4111da:	test   rbp,rbp
  4111dd:	je     4110b0 <strcmp@plt+0xd918>
  4111e3:	mov    rax,QWORD PTR [rsp+rbp*8+0x418]
  4111eb:	dec    rbp
  4111ee:	jmp    4110fc <strcmp@plt+0xd964>
  4111f3:	mov    rdi,QWORD PTR [rsp]
  4111f7:	call   42bff0 <strcmp@plt+0x28858>
  4111fc:	cmp    ebx,0x5
  4111ff:	jl     411223 <strcmp@plt+0xda8b>
  411201:	lea    rax,[rip+0x53bb8]        # 464dc0 <strcmp@plt+0x61628>
  411208:	mov    eax,DWORD PTR [rax]
  41120a:	add    eax,0x4
  41120d:	cmp    eax,ebx
  41120f:	jge    411223 <strcmp@plt+0xda8b>
  411211:	add    rsp,0x828
  411218:	pop    rbx
  411219:	pop    r12
  41121b:	pop    r13
  41121d:	pop    r14
  41121f:	pop    r15
  411221:	pop    rbp
  411222:	ret    
  411223:	lea    rsi,[rip+0x33e85]        # 4450af <strcmp@plt+0x41917>
  41122a:	mov    edi,ebx
  41122c:	xor    eax,eax
  41122e:	add    rsp,0x828
  411235:	pop    rbx
  411236:	pop    r12
  411238:	pop    r13
  41123a:	pop    r14
  41123c:	pop    r15
  41123e:	pop    rbp
  41123f:	jmp    42e520 <strcmp@plt+0x2ad88>
  411244:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41124e:	xchg   ax,ax
  411250:	push   rax
  411251:	mov    rcx,QWORD PTR [rdi+0x8]
  411255:	cmp    rcx,QWORD PTR [rip+0x52d7c]        # 463fd8 <strcmp@plt+0x60840>
  41125c:	jne    411263 <strcmp@plt+0xdacb>
  41125e:	mov    rax,rdi
  411261:	pop    rcx
  411262:	ret    
  411263:	lea    rdi,[rip+0x34e8a]        # 4460f4 <strcmp@plt+0x4295c>
  41126a:	lea    rsi,[rip+0x34e99]        # 44610a <strcmp@plt+0x42972>
  411271:	lea    rdx,[rip+0x34e9f]        # 446117 <strcmp@plt+0x4297f>
  411278:	call   431eb0 <strcmp@plt+0x2e718>
  41127d:	nop    DWORD PTR [rax]
  411280:	mov    eax,0x1
  411285:	ret    
  411286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411290:	mov    eax,0x1
  411295:	ret    
  411296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112a0:	mov    eax,0x1
  4112a5:	ret    
  4112a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112b0:	xor    eax,eax
  4112b2:	ret    
  4112b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4112bd:	nop    DWORD PTR [rax]
  4112c0:	push   rbx
  4112c1:	mov    rax,QWORD PTR [rdi+0x8]
  4112c5:	cmp    rax,QWORD PTR [rip+0x52d0c]        # 463fd8 <strcmp@plt+0x60840>
  4112cc:	jne    4112f9 <strcmp@plt+0xdb61>
  4112ce:	mov    rbx,rdi
  4112d1:	lea    rax,[rip+0x53ae8]        # 464dc0 <strcmp@plt+0x61628>
  4112d8:	cmp    DWORD PTR [rax],0x0
  4112db:	jle    4112f0 <strcmp@plt+0xdb58>
  4112dd:	lea    rsi,[rip+0x34e55]        # 446139 <strcmp@plt+0x429a1>
  4112e4:	mov    edi,0x5
  4112e9:	xor    eax,eax
  4112eb:	call   42e520 <strcmp@plt+0x2ad88>
  4112f0:	mov    rdi,rbx
  4112f3:	pop    rbx
  4112f4:	jmp    403790 <free@plt>
  4112f9:	lea    rdi,[rip+0x34df4]        # 4460f4 <strcmp@plt+0x4295c>
  411300:	lea    rsi,[rip+0x34e03]        # 44610a <strcmp@plt+0x42972>
  411307:	lea    rdx,[rip+0x34e09]        # 446117 <strcmp@plt+0x4297f>
  41130e:	call   431eb0 <strcmp@plt+0x2e718>
  411313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41131d:	nop    DWORD PTR [rax]
  411320:	push   rbp
  411321:	push   r15
  411323:	push   r14
  411325:	push   r12
  411327:	push   rbx
  411328:	mov    rax,QWORD PTR [rdi+0x8]
  41132c:	cmp    rax,QWORD PTR [rip+0x52ca5]        # 463fd8 <strcmp@plt+0x60840>
  411333:	jne    411453 <strcmp@plt+0xdcbb>
  411339:	mov    rbx,rdi
  41133c:	lea    r15,[rip+0x53a7d]        # 464dc0 <strcmp@plt+0x61628>
  411343:	cmp    DWORD PTR [r15],0x0
  411347:	jle    41135c <strcmp@plt+0xdbc4>
  411349:	lea    rsi,[rip+0x34e00]        # 446150 <strcmp@plt+0x429b8>
  411350:	mov    edi,0x5
  411355:	xor    eax,eax
  411357:	call   42e520 <strcmp@plt+0x2ad88>
  41135c:	mov    rdi,rbx
  41135f:	mov    esi,0x5
  411364:	call   410b40 <strcmp@plt+0xd3a8>
  411369:	mov    rdi,rbx
  41136c:	mov    esi,0x5
  411371:	call   410f40 <strcmp@plt+0xd7a8>
  411376:	cmp    QWORD PTR [rbx+0x40],0x0
  41137b:	je     411429 <strcmp@plt+0xdc91>
  411381:	cmp    DWORD PTR [r15],0x0
  411385:	jle    41144a <strcmp@plt+0xdcb2>
  41138b:	lea    rsi,[rip+0x34de9]        # 44617b <strcmp@plt+0x429e3>
  411392:	mov    edi,0x5
  411397:	xor    eax,eax
  411399:	call   42e520 <strcmp@plt+0x2ad88>
  41139e:	cmp    DWORD PTR [r15],0x0
  4113a2:	jle    41144a <strcmp@plt+0xdcb2>
  4113a8:	mov    r12,QWORD PTR [rbx+0x40]
  4113ac:	mov    rdx,QWORD PTR [r12]
  4113b0:	mov    ecx,DWORD PTR [r12+0x8]
  4113b5:	lea    rsi,[rip+0x34e31]        # 4461ed <strcmp@plt+0x42a55>
  4113bc:	mov    edi,0x5
  4113c1:	xor    eax,eax
  4113c3:	call   42e520 <strcmp@plt+0x2ad88>
  4113c8:	mov    rax,QWORD PTR [r12+0x10]
  4113cd:	mov    rbx,QWORD PTR [rax+0x8]
  4113d1:	cmp    rbx,rax
  4113d4:	je     411429 <strcmp@plt+0xdc91>
  4113d6:	mov    ebp,0x1
  4113db:	lea    r14,[rip+0x34e28]        # 44620a <strcmp@plt+0x42a72>
  4113e2:	cmp    DWORD PTR [r15],0x0
  4113e6:	jg     411401 <strcmp@plt+0xdc69>
  4113e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4113f0:	mov    rbx,QWORD PTR [rbx+0x8]
  4113f4:	inc    ebp
  4113f6:	cmp    rbx,rax
  4113f9:	je     411429 <strcmp@plt+0xdc91>
  4113fb:	cmp    DWORD PTR [r15],0x0
  4113ff:	jle    4113f0 <strcmp@plt+0xdc58>
  411401:	mov    rax,QWORD PTR [rbx+0x10]
  411405:	mov    rdi,QWORD PTR [rax+0x8]
  411409:	call   422e20 <strcmp@plt+0x1f688>
  41140e:	mov    edi,0x5
  411413:	mov    rsi,r14
  411416:	mov    edx,ebp
  411418:	mov    rcx,rax
  41141b:	xor    eax,eax
  41141d:	call   42e520 <strcmp@plt+0x2ad88>
  411422:	mov    rax,QWORD PTR [r12+0x10]
  411427:	jmp    4113f0 <strcmp@plt+0xdc58>
  411429:	cmp    DWORD PTR [r15],0x0
  41142d:	jle    41144a <strcmp@plt+0xdcb2>
  41142f:	lea    rsi,[rip+0x34d60]        # 446196 <strcmp@plt+0x429fe>
  411436:	mov    edi,0x5
  41143b:	xor    eax,eax
  41143d:	pop    rbx
  41143e:	pop    r12
  411440:	pop    r14
  411442:	pop    r15
  411444:	pop    rbp
  411445:	jmp    42e520 <strcmp@plt+0x2ad88>
  41144a:	pop    rbx
  41144b:	pop    r12
  41144d:	pop    r14
  41144f:	pop    r15
  411451:	pop    rbp
  411452:	ret    
  411453:	lea    rdi,[rip+0x34c9a]        # 4460f4 <strcmp@plt+0x4295c>
  41145a:	lea    rsi,[rip+0x34ca9]        # 44610a <strcmp@plt+0x42972>
  411461:	lea    rdx,[rip+0x34caf]        # 446117 <strcmp@plt+0x4297f>
  411468:	call   431eb0 <strcmp@plt+0x2e718>
  41146d:	nop    DWORD PTR [rax]
  411470:	push   rbp
  411471:	push   r15
  411473:	push   r14
  411475:	push   r13
  411477:	push   r12
  411479:	push   rbx
  41147a:	push   rax
  41147b:	mov    r12d,esi
  41147e:	mov    r14,rdi
  411481:	cmp    esi,0x5
  411484:	jl     41149b <strcmp@plt+0xdd03>
  411486:	lea    rax,[rip+0x53933]        # 464dc0 <strcmp@plt+0x61628>
  41148d:	mov    eax,DWORD PTR [rax]
  41148f:	add    eax,0x4
  411492:	cmp    eax,r12d
  411495:	jl     411522 <strcmp@plt+0xdd8a>
  41149b:	mov    rdx,QWORD PTR [r14]
  41149e:	mov    ecx,DWORD PTR [r14+0x8]
  4114a2:	lea    rsi,[rip+0x34d44]        # 4461ed <strcmp@plt+0x42a55>
  4114a9:	mov    edi,r12d
  4114ac:	xor    eax,eax
  4114ae:	call   42e520 <strcmp@plt+0x2ad88>
  4114b3:	mov    rax,QWORD PTR [r14+0x10]
  4114b7:	mov    rbx,QWORD PTR [rax+0x8]
  4114bb:	cmp    rbx,rax
  4114be:	je     411522 <strcmp@plt+0xdd8a>
  4114c0:	mov    ebp,0x1
  4114c5:	lea    r15,[rip+0x34d3e]        # 44620a <strcmp@plt+0x42a72>
  4114cc:	lea    r13,[rip+0x538ed]        # 464dc0 <strcmp@plt+0x61628>
  4114d3:	jmp    41150a <strcmp@plt+0xdd72>
  4114d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4114df:	nop
  4114e0:	mov    rdi,QWORD PTR [rcx+0x8]
  4114e4:	call   422e20 <strcmp@plt+0x1f688>
  4114e9:	mov    edi,r12d
  4114ec:	mov    rsi,r15
  4114ef:	mov    edx,ebp
  4114f1:	mov    rcx,rax
  4114f4:	xor    eax,eax
  4114f6:	call   42e520 <strcmp@plt+0x2ad88>
  4114fb:	mov    rax,QWORD PTR [r14+0x10]
  4114ff:	mov    rbx,QWORD PTR [rbx+0x8]
  411503:	inc    ebp
  411505:	cmp    rbx,rax
  411508:	je     411522 <strcmp@plt+0xdd8a>
  41150a:	mov    rcx,QWORD PTR [rbx+0x10]
  41150e:	cmp    r12d,0x5
  411512:	jl     4114e0 <strcmp@plt+0xdd48>
  411514:	mov    edx,DWORD PTR [r13+0x0]
  411518:	add    edx,0x4
  41151b:	cmp    edx,r12d
  41151e:	jge    4114e0 <strcmp@plt+0xdd48>
  411520:	jmp    4114ff <strcmp@plt+0xdd67>
  411522:	add    rsp,0x8
  411526:	pop    rbx
  411527:	pop    r12
  411529:	pop    r13
  41152b:	pop    r14
  41152d:	pop    r15
  41152f:	pop    rbp
  411530:	ret    
  411531:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41153b:	nop    DWORD PTR [rax+rax*1+0x0]
  411540:	push   rbp
  411541:	push   rbx
  411542:	push   rax
  411543:	mov    rax,QWORD PTR [rdi+0x8]
  411547:	cmp    rax,QWORD PTR [rip+0x52a8a]        # 463fd8 <strcmp@plt+0x60840>
  41154e:	jne    4115dd <strcmp@plt+0xde45>
  411554:	mov    rbx,rdi
  411557:	xor    ebp,ebp
  411559:	xor    eax,eax
  41155b:	call   42ea00 <strcmp@plt+0x2b268>
  411560:	mov    QWORD PTR [rbx+0x20],rax
  411564:	xor    eax,eax
  411566:	call   42ea00 <strcmp@plt+0x2b268>
  41156b:	mov    QWORD PTR [rbx+0x18],rax
  41156f:	lea    rdi,[rip+0x199a]        # 412f10 <strcmp@plt+0xf778>
  411576:	call   435e70 <strcmp@plt+0x326d8>
  41157b:	mov    QWORD PTR [rbx+0x28],rax
  41157f:	lea    rdi,[rip+0x18ea]        # 412e70 <strcmp@plt+0xf6d8>
  411586:	call   435e70 <strcmp@plt+0x326d8>
  41158b:	mov    QWORD PTR [rbx+0x30],rax
  41158f:	xor    eax,eax
  411591:	call   435e40 <strcmp@plt+0x326a8>
  411596:	mov    QWORD PTR [rbx+0x38],rax
  41159a:	mov    QWORD PTR [rbx+0x40],0x0
  4115a2:	cmp    QWORD PTR [rbx+0x20],0x0
  4115a7:	je     4115d4 <strcmp@plt+0xde3c>
  4115a9:	cmp    QWORD PTR [rbx+0x18],0x0
  4115ae:	je     4115d4 <strcmp@plt+0xde3c>
  4115b0:	lea    rax,[rip+0x53809]        # 464dc0 <strcmp@plt+0x61628>
  4115b7:	mov    ebp,0x1
  4115bc:	cmp    DWORD PTR [rax],0x0
  4115bf:	jle    4115d4 <strcmp@plt+0xde3c>
  4115c1:	lea    rsi,[rip+0x34c52]        # 44621a <strcmp@plt+0x42a82>
  4115c8:	mov    edi,0x5
  4115cd:	xor    eax,eax
  4115cf:	call   42e520 <strcmp@plt+0x2ad88>
  4115d4:	mov    eax,ebp
  4115d6:	add    rsp,0x8
  4115da:	pop    rbx
  4115db:	pop    rbp
  4115dc:	ret    
  4115dd:	lea    rdi,[rip+0x34b10]        # 4460f4 <strcmp@plt+0x4295c>
  4115e4:	lea    rsi,[rip+0x34b1f]        # 44610a <strcmp@plt+0x42972>
  4115eb:	lea    rdx,[rip+0x34b25]        # 446117 <strcmp@plt+0x4297f>
  4115f2:	call   431eb0 <strcmp@plt+0x2e718>
  4115f7:	nop    WORD PTR [rax+rax*1+0x0]
  411600:	push   rbx
  411601:	mov    rax,QWORD PTR [rdi+0x8]
  411605:	cmp    rax,QWORD PTR [rip+0x529cc]        # 463fd8 <strcmp@plt+0x60840>
  41160c:	jne    41164d <strcmp@plt+0xdeb5>
  41160e:	mov    rbx,rdi
  411611:	mov    rdi,QWORD PTR [rdi+0x18]
  411615:	lea    rsi,[rip+0x1ce94]        # 42e4b0 <strcmp@plt+0x2ad18>
  41161c:	call   42ec10 <strcmp@plt+0x2b478>
  411621:	mov    rdi,QWORD PTR [rbx+0x20]
  411625:	lea    rsi,[rip+0x1cec4]        # 42e4f0 <strcmp@plt+0x2ad58>
  41162c:	call   42ec10 <strcmp@plt+0x2b478>
  411631:	mov    rdi,QWORD PTR [rbx+0x28]
  411635:	call   436460 <strcmp@plt+0x32cc8>
  41163a:	mov    rdi,QWORD PTR [rbx+0x30]
  41163e:	call   436460 <strcmp@plt+0x32cc8>
  411643:	mov    rdi,QWORD PTR [rbx+0x38]
  411647:	pop    rbx
  411648:	jmp    436460 <strcmp@plt+0x32cc8>
  41164d:	lea    rdi,[rip+0x34aa0]        # 4460f4 <strcmp@plt+0x4295c>
  411654:	lea    rsi,[rip+0x34aaf]        # 44610a <strcmp@plt+0x42972>
  41165b:	lea    rdx,[rip+0x34ab5]        # 446117 <strcmp@plt+0x4297f>
  411662:	call   431eb0 <strcmp@plt+0x2e718>
  411667:	nop    WORD PTR [rax+rax*1+0x0]
  411670:	push   rbp
  411671:	push   r15
  411673:	push   r14
  411675:	push   r13
  411677:	push   r12
  411679:	push   rbx
  41167a:	sub    rsp,0x188
  411681:	mov    rax,QWORD PTR [rdi+0x8]
  411685:	cmp    rax,QWORD PTR [rip+0x5294c]        # 463fd8 <strcmp@plt+0x60840>
  41168c:	jne    412dbe <strcmp@plt+0xf626>
  411692:	mov    r14,rdx
  411695:	mov    rbp,rsi
  411698:	mov    r13,rdi
  41169b:	mov    rdi,rsi
  41169e:	call   420ac0 <strcmp@plt+0x1d328>
  4116a3:	cmp    eax,0x8
  4116a6:	jne    41171d <strcmp@plt+0xdf85>
  4116a8:	mov    rdi,rbp
  4116ab:	call   420ae0 <strcmp@plt+0x1d348>
  4116b0:	test   BYTE PTR [rax],0x8
  4116b3:	jne    41175c <strcmp@plt+0xdfc4>
  4116b9:	mov    rdi,rbp
  4116bc:	call   420b10 <strcmp@plt+0x1d378>
  4116c1:	cmp    eax,0x1
  4116c4:	jne    412c1d <strcmp@plt+0xf485>
  4116ca:	lea    rbx,[rsp+0x60]
  4116cf:	mov    rdi,rbp
  4116d2:	mov    rsi,rbx
  4116d5:	call   433160 <strcmp@plt+0x2f9c8>
  4116da:	movzx  esi,WORD PTR [rsp+0xa2]
  4116e2:	movzx  edx,WORD PTR [rsp+0xa0]
  4116ea:	lea    rcx,[rsp+0x80]
  4116f2:	lea    rdi,[rsp+0x140]
  4116fa:	mov    r8,rbx
  4116fd:	call   435260 <strcmp@plt+0x31ac8>
  411702:	movzx  r15d,WORD PTR [rbp+0x1e]
  411707:	cmp    r15,0xffff
  41170e:	je     411fcb <strcmp@plt+0xe833>
  411714:	add    r15,QWORD PTR [rbp+0x30]
  411718:	jmp    411fce <strcmp@plt+0xe836>
  41171d:	mov    ebx,eax
  41171f:	mov    r12,rbp
  411722:	xor    ebp,ebp
  411724:	mov    r15,r14
  411727:	xor    edx,edx
  411729:	lea    eax,[rbx-0x1]
  41172c:	cmp    eax,0x6
  41172f:	ja     411796 <strcmp@plt+0xdffe>
  411731:	lea    rcx,[rip+0x348c0]        # 445ff8 <strcmp@plt+0x42860>
  411738:	movsxd rax,DWORD PTR [rcx+rax*4]
  41173c:	add    rax,rcx
  41173f:	jmp    rax
  411741:	lea    rax,[rip+0x53678]        # 464dc0 <strcmp@plt+0x61628>
  411748:	mov    eax,DWORD PTR [rax]
  41174a:	cmp    eax,0x3
  41174d:	jl     412c02 <strcmp@plt+0xf46a>
  411753:	lea    rsi,[rip+0x34b06]        # 446260 <strcmp@plt+0x42ac8>
  41175a:	jmp    4117af <strcmp@plt+0xe017>
  41175c:	mov    rdi,rbp
  41175f:	call   422600 <strcmp@plt+0x1ee68>
  411764:	lea    rax,[rip+0x53655]        # 464dc0 <strcmp@plt+0x61628>
  41176b:	cmp    DWORD PTR [rax],0x2
  41176e:	jl     412c1d <strcmp@plt+0xf485>
  411774:	mov    rdi,rbp
  411777:	call   422600 <strcmp@plt+0x1ee68>
  41177c:	lea    rsi,[rip+0x3410b]        # 44588e <strcmp@plt+0x420f6>
  411783:	mov    edi,0x6
  411788:	mov    edx,eax
  41178a:	xor    eax,eax
  41178c:	call   42e520 <strcmp@plt+0x2ad88>
  411791:	jmp    412c1d <strcmp@plt+0xf485>
  411796:	lea    rax,[rip+0x53623]        # 464dc0 <strcmp@plt+0x61628>
  41179d:	mov    eax,DWORD PTR [rax]
  41179f:	cmp    eax,0x3
  4117a2:	jl     412c02 <strcmp@plt+0xf46a>
  4117a8:	lea    rsi,[rip+0x34af0]        # 44629f <strcmp@plt+0x42b07>
  4117af:	mov    edi,0x7
  4117b4:	mov    edx,ebx
  4117b6:	xor    eax,eax
  4117b8:	call   42e520 <strcmp@plt+0x2ad88>
  4117bd:	jmp    412bf9 <strcmp@plt+0xf461>
  4117c2:	test   rbp,rbp
  4117c5:	je     412020 <strcmp@plt+0xe888>
  4117cb:	mov    QWORD PTR [rsp+0x28],rdx
  4117d0:	vmovups ymm0,YMMWORD PTR [r12]
  4117d6:	mov    QWORD PTR [rsp+0x38],r12
  4117db:	vmovups ymm1,YMMWORD PTR [r12+0x20]
  4117e2:	vmovups YMMWORD PTR [rsp+0x120],ymm1
  4117eb:	vmovups YMMWORD PTR [rsp+0x100],ymm0
  4117f4:	movzx  r12d,WORD PTR [rbp+0x0]
  4117f9:	xor    eax,eax
  4117fb:	vzeroupper 
  4117fe:	call   422c80 <strcmp@plt+0x1f4e8>
  411803:	mov    rbp,rax
  411806:	lea    rbx,[rsp+0x100]
  41180e:	mov    rdi,rbx
  411811:	call   4213d0 <strcmp@plt+0x1dc38>
  411816:	mov    r14,rax
  411819:	mov    rdi,rbx
  41181c:	mov    rsi,rbp
  41181f:	call   420c80 <strcmp@plt+0x1d4e8>
  411824:	cmp    eax,0x1
  411827:	jne    41210f <strcmp@plt+0xe977>
  41182d:	movzx  ecx,WORD PTR [r14]
  411831:	movzx  eax,BYTE PTR [r14+0x2]
  411836:	shl    eax,0x10
  411839:	or     eax,ecx
  41183b:	test   al,0x2
  41183d:	jne    412912 <strcmp@plt+0xf17a>
  411843:	test   al,0x1
  411845:	jne    412999 <strcmp@plt+0xf201>
  41184b:	mov    QWORD PTR [rsp+0x50],rbp
  411850:	mov    DWORD PTR [rsp+0x34],r12d
  411855:	mov    QWORD PTR [rsp+0x8],r13
  41185a:	lea    rdi,[rip+0x1142f]        # 422c90 <strcmp@plt+0x1f4f8>
  411861:	call   42b9b0 <strcmp@plt+0x28218>
  411866:	lea    rdi,[rsp+0x100]
  41186e:	mov    QWORD PTR [rsp+0x40],rax
  411873:	mov    rsi,rax
  411876:	call   420cf0 <strcmp@plt+0x1d558>
  41187b:	cmp    BYTE PTR [r14+0x3],0x0
  411880:	je     412b6d <strcmp@plt+0xf3d5>
  411886:	xor    ebp,ebp
  411888:	xor    ebx,ebx
  41188a:	mov    QWORD PTR [rsp+0x48],r15
  41188f:	mov    QWORD PTR [rsp],r14
  411893:	jmp    412155 <strcmp@plt+0xe9bd>
  411898:	mov    QWORD PTR [rsp+0x58],0x0
  4118a1:	vmovups ymm0,YMMWORD PTR [r12]
  4118a7:	mov    QWORD PTR [rsp+0x38],r12
  4118ac:	vmovups ymm1,YMMWORD PTR [r12+0x20]
  4118b3:	vmovups YMMWORD PTR [rsp+0x60],ymm0
  4118b9:	vmovups YMMWORD PTR [rsp+0x80],ymm1
  4118c2:	lea    rdi,[rsp+0x60]
  4118c7:	mov    rbx,rdx
  4118ca:	vzeroupper 
  4118cd:	call   4213d0 <strcmp@plt+0x1dc38>
  4118d2:	mov    rcx,rbx
  4118d5:	test   rbp,rbp
  4118d8:	cmove  rcx,r15
  4118dc:	mov    QWORD PTR [rsp+0x8],rax
  4118e1:	test   BYTE PTR [rax+0x2],0x1
  4118e5:	mov    QWORD PTR [rsp+0x18],rbp
  4118ea:	jne    411a8a <strcmp@plt+0xe2f2>
  4118f0:	xor    ebx,ebx
  4118f2:	jmp    411aac <strcmp@plt+0xe314>
  4118f7:	vmovups ymm0,YMMWORD PTR [r12]
  4118fd:	mov    rbp,r12
  411900:	vmovups ymm1,YMMWORD PTR [r12+0x20]
  411907:	vmovups YMMWORD PTR [rsp+0xb0],ymm0
  411910:	vmovups YMMWORD PTR [rsp+0xd0],ymm1
  411919:	lea    rdi,[rsp+0xb0]
  411921:	vzeroupper 
  411924:	call   4213d0 <strcmp@plt+0x1dc38>
  411929:	test   BYTE PTR [rax],0x8
  41192c:	jne    411fb2 <strcmp@plt+0xe81a>
  411932:	mov    QWORD PTR [rsp+0x10],rax
  411937:	mov    QWORD PTR [rsp+0x8],r13
  41193c:	lea    rbx,[rsp+0xb0]
  411944:	mov    rdi,rbx
  411947:	call   422950 <strcmp@plt+0x1f1b8>
  41194c:	mov    QWORD PTR [rsp],rax
  411950:	xor    r13d,r13d
  411953:	xor    eax,eax
  411955:	call   422c80 <strcmp@plt+0x1f4e8>
  41195a:	mov    r15,rax
  41195d:	lea    rdx,[rsp+0x58]
  411962:	mov    rdi,rbx
  411965:	mov    rsi,rax
  411968:	call   421320 <strcmp@plt+0x1db88>
  41196d:	mov    ebx,0x0
  411972:	mov    r12d,0x0
  411978:	cmp    eax,0x1
  41197b:	jne    412ae8 <strcmp@plt+0xf350>
  411981:	mov    rax,QWORD PTR [rsp+0x8]
  411986:	mov    rdi,QWORD PTR [rax+0x18]
  41198a:	mov    rsi,r15
  41198d:	call   42f990 <strcmp@plt+0x2c1f8>
  411992:	test   rax,rax
  411995:	je     412931 <strcmp@plt+0xf199>
  41199b:	mov    rbx,rax
  41199e:	mov    rdx,QWORD PTR [rax+0x10]
  4119a2:	mov    rdi,rbp
  4119a5:	mov    rsi,QWORD PTR [rsp]
  4119a9:	call   422780 <strcmp@plt+0x1efe8>
  4119ae:	cmp    eax,0x1
  4119b1:	jne    4129c0 <strcmp@plt+0xf228>
  4119b7:	mov    QWORD PTR [rsp],rbx
  4119bb:	mov    rbp,r15
  4119be:	call   42b980 <strcmp@plt+0x281e8>
  4119c3:	mov    r12,rax
  4119c6:	mov    r15,QWORD PTR [rsp+0x8]
  4119cb:	mov    rax,QWORD PTR [r15+0x40]
  4119cf:	mov    rax,QWORD PTR [rax+0x10]
  4119d3:	mov    rbx,QWORD PTR [rax+0x8]
  4119d7:	cmp    rbx,rax
  4119da:	je     4119fa <strcmp@plt+0xe262>
  4119dc:	mov    rax,QWORD PTR [rbx+0x10]
  4119e0:	mov    rdi,QWORD PTR [rax+0x8]
  4119e4:	mov    rsi,r12
  4119e7:	call   42baa0 <strcmp@plt+0x28308>
  4119ec:	mov    rbx,QWORD PTR [rbx+0x8]
  4119f0:	mov    rax,QWORD PTR [r15+0x40]
  4119f4:	cmp    rbx,QWORD PTR [rax+0x10]
  4119f8:	jne    4119dc <strcmp@plt+0xe244>
  4119fa:	lea    rbx,[rsp+0x100]
  411a02:	mov    rdi,rbx
  411a05:	xor    esi,esi
  411a07:	call   422e90 <strcmp@plt+0x1f6f8>
  411a0c:	movzx  edx,WORD PTR [r14+0x42]
  411a11:	lea    rcx,[r14+0x20]
  411a15:	mov    edi,0x10f6
  411a1a:	mov    rsi,r14
  411a1d:	mov    QWORD PTR [rsp+0x38],rcx
  411a22:	mov    r8,rbx
  411a25:	mov    r9,r12
  411a28:	call   427dc0 <strcmp@plt+0x24628>
  411a2d:	mov    rbx,rax
  411a30:	mov    rax,QWORD PTR [rsp]
  411a34:	mov    edx,DWORD PTR [rax+0xc]
  411a37:	mov    rax,QWORD PTR [r15+0x40]
  411a3b:	mov    ecx,DWORD PTR [rax+0x8]
  411a3e:	mov    r15,rbp
  411a41:	mov    rdi,rbp
  411a44:	mov    rsi,rbx
  411a47:	call   4223a0 <strcmp@plt+0x1ec08>
  411a4c:	test   rax,rax
  411a4f:	je     412b86 <strcmp@plt+0xf3ee>
  411a55:	mov    rbp,rax
  411a58:	mov    rdi,r12
  411a5b:	call   42bff0 <strcmp@plt+0x28858>
  411a60:	mov    rdi,rbx
  411a63:	call   422c90 <strcmp@plt+0x1f4f8>
  411a68:	mov    rdi,r15
  411a6b:	call   422c90 <strcmp@plt+0x1f4f8>
  411a70:	movzx  esi,WORD PTR [rbp+0x24]
  411a74:	cmp    rsi,0xffff
  411a7b:	je     412c33 <strcmp@plt+0xf49b>
  411a81:	add    rsi,QWORD PTR [rbp+0x30]
  411a85:	jmp    412c35 <strcmp@plt+0xf49d>
  411a8a:	mov    edi,0x4
  411a8f:	xor    eax,eax
  411a91:	mov    rbp,rcx
  411a94:	call   421ec0 <strcmp@plt+0x1e728>
  411a99:	mov    rbx,rax
  411a9c:	mov    rdi,rax
  411a9f:	mov    esi,0x1
  411aa4:	call   4222b0 <strcmp@plt+0x1eb18>
  411aa9:	mov    rcx,rbp
  411aac:	mov    QWORD PTR [rsp+0x10],rbx
  411ab1:	mov    QWORD PTR [rsp+0x48],r15
  411ab6:	mov    QWORD PTR [rsp+0x28],rcx
  411abb:	lea    rdi,[rsp+0x60]
  411ac0:	call   422950 <strcmp@plt+0x1f1b8>
  411ac5:	mov    QWORD PTR [rsp+0x50],rax
  411aca:	mov    rbx,QWORD PTR [rsp+0x8]
  411acf:	cmp    BYTE PTR [rbx+0x3],0x0
  411ad3:	je     412054 <strcmp@plt+0xe8bc>
  411ad9:	xor    eax,eax
  411adb:	mov    QWORD PTR [rsp+0x20],rax
  411ae0:	xor    r14d,r14d
  411ae3:	xor    eax,eax
  411ae5:	mov    QWORD PTR [rsp],rax
  411ae9:	nop    DWORD PTR [rax+0x0]
  411af0:	xor    eax,eax
  411af2:	call   428ae0 <strcmp@plt+0x25348>
  411af7:	mov    rbp,rax
  411afa:	lea    rdi,[rsp+0x60]
  411aff:	mov    rsi,rax
  411b02:	lea    rdx,[rsp+0x58]
  411b07:	call   421030 <strcmp@plt+0x1d898>
  411b0c:	cmp    eax,0x1
  411b0f:	jne    412b56 <strcmp@plt+0xf3be>
  411b15:	mov    rax,QWORD PTR [rbp+0x28]
  411b19:	mov    rcx,QWORD PTR [rax+0x8]
  411b1d:	cmp    rcx,rax
  411b20:	jne    411bbd <strcmp@plt+0xe425>
  411b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411b30:	cmp    BYTE PTR [rbp+0x35],0x0
  411b34:	jne    411b54 <strcmp@plt+0xe3bc>
  411b36:	mov    rdi,rbp
  411b39:	call   422e20 <strcmp@plt+0x1f688>
  411b3e:	mov    edi,0x3
  411b43:	lea    rsi,[rip+0x34a63]        # 4465ad <strcmp@plt+0x42e15>
  411b4a:	mov    rdx,rax
  411b4d:	xor    eax,eax
  411b4f:	call   42e520 <strcmp@plt+0x2ad88>
  411b54:	mov    rdi,rbp
  411b57:	call   4340a0 <strcmp@plt+0x30908>
  411b5c:	mov    rdi,QWORD PTR [r13+0x18]
  411b60:	mov    rsi,rbp
  411b63:	call   42f990 <strcmp@plt+0x2c1f8>
  411b68:	test   rax,rax
  411b6b:	je     411bf0 <strcmp@plt+0xe458>
  411b71:	mov    r12,rax
  411b74:	mov    rbx,QWORD PTR [rax+0x10]
  411b78:	mov    rdi,QWORD PTR [rsp]
  411b7c:	test   rdi,rdi
  411b7f:	je     411c23 <strcmp@plt+0xe48b>
  411b85:	mov    r15,rdi
  411b88:	call   4031e0 <strlen@plt>
  411b8d:	mov    rdi,r15
  411b90:	mov    rsi,rbx
  411b93:	mov    rdx,rax
  411b96:	call   403220 <strncmp@plt>
  411b9b:	test   eax,eax
  411b9d:	je     411c73 <strcmp@plt+0xe4db>
  411ba3:	jmp    412966 <strcmp@plt+0xf1ce>
  411ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  411bb0:	mov    rcx,QWORD PTR [rcx+0x8]
  411bb4:	cmp    rcx,rax
  411bb7:	je     411b30 <strcmp@plt+0xe398>
  411bbd:	mov    rdx,QWORD PTR [rcx+0x10]
  411bc1:	cmp    DWORD PTR [rdx+0x18],0x0
  411bc5:	je     411bb0 <strcmp@plt+0xe418>
  411bc7:	mov    rsi,QWORD PTR [rdx+0x8]
  411bcb:	cmp    rsi,rdx
  411bce:	je     411bb0 <strcmp@plt+0xe418>
  411bd0:	mov    rdi,QWORD PTR [rsi+0x10]
  411bd4:	mov    WORD PTR [rdi+0x8],0x1
  411bda:	mov    rsi,QWORD PTR [rsi+0x8]
  411bde:	cmp    rsi,rdx
  411be1:	jne    411bd0 <strcmp@plt+0xe438>
  411be3:	jmp    411bb0 <strcmp@plt+0xe418>
  411be5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411bef:	nop
  411bf0:	lea    rax,[rip+0x531c9]        # 464dc0 <strcmp@plt+0x61628>
  411bf7:	cmp    DWORD PTR [rax],0x0
  411bfa:	jle    411f77 <strcmp@plt+0xe7df>
  411c00:	mov    rdi,rbp
  411c03:	call   422e20 <strcmp@plt+0x1f688>
  411c08:	mov    edi,0x5
  411c0d:	lea    rsi,[rip+0x349ea]        # 4465fe <strcmp@plt+0x42e66>
  411c14:	mov    rdx,rax
  411c17:	xor    eax,eax
  411c19:	call   42e520 <strcmp@plt+0x2ad88>
  411c1e:	jmp    411f77 <strcmp@plt+0xe7df>
  411c23:	mov    rdi,QWORD PTR [rsp+0x38]
  411c28:	mov    rsi,QWORD PTR [rsp+0x50]
  411c2d:	mov    rdx,rbx
  411c30:	call   422780 <strcmp@plt+0x1efe8>
  411c35:	lea    rcx,[rip+0x53184]        # 464dc0 <strcmp@plt+0x61628>
  411c3c:	mov    ecx,DWORD PTR [rcx]
  411c3e:	cmp    eax,0x1
  411c41:	jne    412b2f <strcmp@plt+0xf397>
  411c47:	cmp    ecx,0x2
  411c4a:	jl     411c6a <strcmp@plt+0xe4d2>
  411c4c:	mov    rdi,rbp
  411c4f:	call   422e20 <strcmp@plt+0x1f688>
  411c54:	mov    edi,0x6
  411c59:	lea    rsi,[rip+0x34a1f]        # 44667f <strcmp@plt+0x42ee7>
  411c60:	mov    rdx,rax
  411c63:	xor    eax,eax
  411c65:	call   42e520 <strcmp@plt+0x2ad88>
  411c6a:	mov    rax,QWORD PTR [r12+0x10]
  411c6f:	mov    QWORD PTR [rsp],rax
  411c73:	cmp    BYTE PTR [r12+0x9],0x1
  411c79:	mov    rdi,QWORD PTR [r12]
  411c7d:	jne    411ce0 <strcmp@plt+0xe548>
  411c7f:	call   422dd0 <strcmp@plt+0x1f638>
  411c84:	mov    rbx,rax
  411c87:	mov    rdi,rbp
  411c8a:	call   422dd0 <strcmp@plt+0x1f638>
  411c8f:	mov    rdi,rbx
  411c92:	mov    rsi,rax
  411c95:	call   433f90 <strcmp@plt+0x307f8>
  411c9a:	test   eax,eax
  411c9c:	jne    411d40 <strcmp@plt+0xe5a8>
  411ca2:	lea    rax,[rip+0x53117]        # 464dc0 <strcmp@plt+0x61628>
  411ca9:	cmp    DWORD PTR [rax],0x0
  411cac:	jle    411da2 <strcmp@plt+0xe60a>
  411cb2:	mov    rdi,rbp
  411cb5:	call   422e20 <strcmp@plt+0x1f688>
  411cba:	mov    edi,0x5
  411cbf:	lea    rsi,[rip+0x34a2f]        # 4466f5 <strcmp@plt+0x42f5d>
  411cc6:	mov    rdx,rax
  411cc9:	xor    eax,eax
  411ccb:	call   42e520 <strcmp@plt+0x2ad88>
  411cd0:	jmp    411da2 <strcmp@plt+0xe60a>
  411cd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411cdf:	nop
  411ce0:	mov    rsi,rbp
  411ce3:	call   423670 <strcmp@plt+0x1fed8>
  411ce8:	test   eax,eax
  411cea:	je     411d40 <strcmp@plt+0xe5a8>
  411cec:	lea    rax,[rip+0x530cd]        # 464dc0 <strcmp@plt+0x61628>
  411cf3:	cmp    DWORD PTR [rax],0x0
  411cf6:	jle    411da2 <strcmp@plt+0xe60a>
  411cfc:	mov    rdi,rbp
  411cff:	call   422e20 <strcmp@plt+0x1f688>
  411d04:	mov    rbx,rax
  411d07:	mov    rdi,QWORD PTR [r12]
  411d0b:	call   422e20 <strcmp@plt+0x1f688>
  411d10:	mov    edi,0x5
  411d15:	lea    rsi,[rip+0x34a15]        # 446731 <strcmp@plt+0x42f99>
  411d1c:	mov    rdx,rbx
  411d1f:	mov    rcx,rax
  411d22:	xor    eax,eax
  411d24:	call   42e520 <strcmp@plt+0x2ad88>
  411d29:	mov    rbx,QWORD PTR [rsp+0x8]
  411d2e:	jmp    411f77 <strcmp@plt+0xe7df>
  411d33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411d3d:	nop    DWORD PTR [rax]
  411d40:	mov    rdi,QWORD PTR [r13+0x20]
  411d44:	mov    rsi,rbp
  411d47:	call   42f9b0 <strcmp@plt+0x2c218>
  411d4c:	mov    rbx,r13
  411d4f:	mov    r13,rax
  411d52:	test   rax,rax
  411d55:	je     411dac <strcmp@plt+0xe614>
  411d57:	mov    r15,rbx
  411d5a:	mov    rdi,QWORD PTR [r13+0x0]
  411d5e:	mov    rsi,rbp
  411d61:	call   428c00 <strcmp@plt+0x25468>
  411d66:	test   eax,eax
  411d68:	mov    rbx,QWORD PTR [rsp+0x8]
  411d6d:	je     411ea4 <strcmp@plt+0xe70c>
  411d73:	cmp    BYTE PTR [r12+0x18],0x0
  411d79:	je     411e60 <strcmp@plt+0xe6c8>
  411d7f:	mov    rdi,rbp
  411d82:	call   422e20 <strcmp@plt+0x1f688>
  411d87:	mov    edi,0x3
  411d8c:	lea    rsi,[rip+0x34a21]        # 4467b4 <strcmp@plt+0x4301c>
  411d93:	mov    rdx,rax
  411d96:	xor    eax,eax
  411d98:	call   42e520 <strcmp@plt+0x2ad88>
  411d9d:	jmp    411e97 <strcmp@plt+0xe6ff>
  411da2:	mov    rbx,QWORD PTR [rsp+0x8]
  411da7:	jmp    411f77 <strcmp@plt+0xe7df>
  411dac:	mov    edi,0x10
  411db1:	call   431d60 <strcmp@plt+0x2e5c8>
  411db6:	mov    r12,rax
  411db9:	mov    QWORD PTR [rax],rbp
  411dbc:	mov    rdi,QWORD PTR [rbx+0x20]
  411dc0:	mov    rsi,rbp
  411dc3:	mov    rdx,rax
  411dc6:	call   42ee50 <strcmp@plt+0x2b6b8>
  411dcb:	mov    edi,0xb
  411dd0:	mov    r15,rbx
  411dd3:	mov    rsi,rbx
  411dd6:	lea    rdx,[rip+0x1223]        # 413000 <strcmp@plt+0xf868>
  411ddd:	mov    rcx,r12
  411de0:	xor    r8d,r8d
  411de3:	call   437140 <strcmp@plt+0x339a8>
  411de8:	mov    rbx,rax
  411deb:	lea    rax,[rip+0x5e7be]        # 4705b0 <strcmp@plt+0x6ce18>
  411df2:	mov    rdi,QWORD PTR [rax]
  411df5:	mov    rsi,r12
  411df8:	mov    rdx,rbx
  411dfb:	call   437490 <strcmp@plt+0x33cf8>
  411e00:	mov    rdi,rbx
  411e03:	mov    esi,0xb6
  411e08:	call   437020 <strcmp@plt+0x33888>
  411e0d:	lea    rax,[rip+0x52fac]        # 464dc0 <strcmp@plt+0x61628>
  411e14:	cmp    DWORD PTR [rax],0x2
  411e17:	jl     411e3d <strcmp@plt+0xe6a5>
  411e19:	mov    rdi,QWORD PTR [r12]
  411e1d:	call   422e20 <strcmp@plt+0x1f688>
  411e22:	mov    edi,0x6
  411e27:	lea    rsi,[rip+0x34a51]        # 44687f <strcmp@plt+0x430e7>
  411e2e:	mov    rdx,rax
  411e31:	mov    ecx,0xb4
  411e36:	xor    eax,eax
  411e38:	call   42e520 <strcmp@plt+0x2ad88>
  411e3d:	mov    rbx,QWORD PTR [rsp+0x8]
  411e42:	mov    al,BYTE PTR [rbx]
  411e44:	shr    al,0x3
  411e47:	and    al,0x1
  411e49:	mov    BYTE PTR [r12+0x8],al
  411e4e:	mov    rdi,r15
  411e51:	mov    esi,0x7
  411e56:	call   410f40 <strcmp@plt+0xd7a8>
  411e5b:	jmp    411f51 <strcmp@plt+0xe7b9>
  411e60:	lea    rax,[rip+0x52f59]        # 464dc0 <strcmp@plt+0x61628>
  411e67:	cmp    DWORD PTR [rax],0x3
  411e6a:	jl     411e8a <strcmp@plt+0xe6f2>
  411e6c:	mov    rdi,rbp
  411e6f:	call   422e20 <strcmp@plt+0x1f688>
  411e74:	mov    edi,0x7
  411e79:	lea    rsi,[rip+0x34904]        # 446784 <strcmp@plt+0x42fec>
  411e80:	mov    rdx,rax
  411e83:	xor    eax,eax
  411e85:	call   42e520 <strcmp@plt+0x2ad88>
  411e8a:	mov    rdi,QWORD PTR [r13+0x0]
  411e8e:	mov    rsi,QWORD PTR [rbp+0x28]
  411e92:	call   4291d0 <strcmp@plt+0x25a38>
  411e97:	mov    rdi,r15
  411e9a:	mov    esi,0x7
  411e9f:	call   410f40 <strcmp@plt+0xd7a8>
  411ea4:	mov    al,BYTE PTR [rbx]
  411ea6:	shr    al,0x3
  411ea9:	and    al,0x1
  411eab:	mov    BYTE PTR [r13+0x8],al
  411eaf:	lea    rax,[rip+0x5e6fa]        # 4705b0 <strcmp@plt+0x6ce18>
  411eb6:	mov    rdi,QWORD PTR [rax]
  411eb9:	mov    rsi,r13
  411ebc:	mov    edx,0xb
  411ec1:	call   437500 <strcmp@plt+0x33d68>
  411ec6:	mov    rbx,rax
  411ec9:	mov    edx,DWORD PTR [rax+0x18]
  411ecc:	cmp    edx,0x1
  411ecf:	jne    411f25 <strcmp@plt+0xe78d>
  411ed1:	mov    rax,QWORD PTR [rbx+0x8]
  411ed5:	mov    r12,QWORD PTR [rax+0x10]
  411ed9:	mov    rdi,rbx
  411edc:	call   42bff0 <strcmp@plt+0x28858>
  411ee1:	mov    rdi,r12
  411ee4:	mov    esi,0xb6
  411ee9:	call   437020 <strcmp@plt+0x33888>
  411eee:	lea    rax,[rip+0x52ecb]        # 464dc0 <strcmp@plt+0x61628>
  411ef5:	cmp    DWORD PTR [rax],0x2
  411ef8:	mov    rbx,QWORD PTR [rsp+0x8]
  411efd:	jl     411f51 <strcmp@plt+0xe7b9>
  411eff:	mov    rdi,QWORD PTR [r13+0x0]
  411f03:	call   422e20 <strcmp@plt+0x1f688>
  411f08:	mov    edi,0x6
  411f0d:	lea    rsi,[rip+0x3496b]        # 44687f <strcmp@plt+0x430e7>
  411f14:	mov    rdx,rax
  411f17:	mov    ecx,0xb4
  411f1c:	xor    eax,eax
  411f1e:	call   42e520 <strcmp@plt+0x2ad88>
  411f23:	jmp    411f51 <strcmp@plt+0xe7b9>
  411f25:	lea    rax,[rip+0x52e94]        # 464dc0 <strcmp@plt+0x61628>
  411f2c:	cmp    DWORD PTR [rax],0x0
  411f2f:	jle    411f44 <strcmp@plt+0xe7ac>
  411f31:	mov    edi,0x5
  411f36:	lea    rsi,[rip+0x348ef]        # 44682c <strcmp@plt+0x43094>
  411f3d:	xor    eax,eax
  411f3f:	call   42e520 <strcmp@plt+0x2ad88>
  411f44:	mov    rdi,rbx
  411f47:	call   42bff0 <strcmp@plt+0x28858>
  411f4c:	mov    rbx,QWORD PTR [rsp+0x8]
  411f51:	mov    rdi,QWORD PTR [rsp+0x10]
  411f56:	test   rdi,rdi
  411f59:	je     411f6f <strcmp@plt+0xe7d7>
  411f5b:	mov    rsi,rbp
  411f5e:	xor    edx,edx
  411f60:	call   421570 <strcmp@plt+0x1ddd8>
  411f65:	mov    eax,0x1
  411f6a:	mov    QWORD PTR [rsp+0x20],rax
  411f6f:	test   r13,r13
  411f72:	mov    r13,r15
  411f75:	je     411f81 <strcmp@plt+0xe7e9>
  411f77:	mov    rdi,rbp
  411f7a:	call   428bd0 <strcmp@plt+0x25438>
  411f7f:	xor    ebp,ebp
  411f81:	inc    r14d
  411f84:	movzx  eax,BYTE PTR [rbx+0x3]
  411f88:	cmp    r14d,eax
  411f8b:	jb     411af0 <strcmp@plt+0xe358>
  411f91:	test   BYTE PTR [rbx],0x2
  411f94:	jne    41206c <strcmp@plt+0xe8d4>
  411f9a:	mov    rbx,QWORD PTR [rsp+0x10]
  411f9f:	test   rbx,rbx
  411fa2:	mov    r14,QWORD PTR [rsp+0x20]
  411fa7:	jne    4120e0 <strcmp@plt+0xe948>
  411fad:	jmp    412d58 <strcmp@plt+0xf5c0>
  411fb2:	lea    rax,[rip+0x52e07]        # 464dc0 <strcmp@plt+0x61628>
  411fb9:	cmp    DWORD PTR [rax],0x0
  411fbc:	jle    412bed <strcmp@plt+0xf455>
  411fc2:	lea    rsi,[rip+0x3491b]        # 4468e4 <strcmp@plt+0x4314c>
  411fc9:	jmp    412037 <strcmp@plt+0xe89f>
  411fcb:	xor    r15d,r15d
  411fce:	mov    rdi,rbp
  411fd1:	call   420ac0 <strcmp@plt+0x1d328>
  411fd6:	mov    ebx,eax
  411fd8:	lea    rax,[rip+0x52de1]        # 464dc0 <strcmp@plt+0x61628>
  411fdf:	cmp    DWORD PTR [rax],0x0
  411fe2:	jle    412007 <strcmp@plt+0xe86f>
  411fe4:	mov    r12,rbp
  411fe7:	mov    rdi,rbp
  411fea:	call   422570 <strcmp@plt+0x1edd8>
  411fef:	lea    rsi,[rip+0x34245]        # 44623b <strcmp@plt+0x42aa3>
  411ff6:	mov    edi,0x5
  411ffb:	mov    rdx,rax
  411ffe:	xor    eax,eax
  412000:	call   42e520 <strcmp@plt+0x2ad88>
  412005:	jmp    41200a <strcmp@plt+0xe872>
  412007:	mov    r12,rbp
  41200a:	mov    rdx,r14
  41200d:	lea    rax,[rsp+0x140]
  412015:	mov    rbp,r15
  412018:	mov    r15,rax
  41201b:	jmp    411729 <strcmp@plt+0xdf91>
  412020:	lea    rax,[rip+0x52d99]        # 464dc0 <strcmp@plt+0x61628>
  412027:	cmp    DWORD PTR [rax],0x0
  41202a:	jle    412bed <strcmp@plt+0xf455>
  412030:	lea    rsi,[rip+0x34307]        # 44633e <strcmp@plt+0x42ba6>
  412037:	xor    r13d,r13d
  41203a:	mov    edi,0x5
  41203f:	xor    eax,eax
  412041:	call   42e520 <strcmp@plt+0x2ad88>
  412046:	test   r13d,r13d
  412049:	je     412bf9 <strcmp@plt+0xf461>
  41204f:	jmp    412b09 <strcmp@plt+0xf371>
  412054:	xor    eax,eax
  412056:	mov    QWORD PTR [rsp+0x20],rax
  41205b:	xor    eax,eax
  41205d:	mov    QWORD PTR [rsp],rax
  412061:	xor    ebp,ebp
  412063:	test   BYTE PTR [rbx],0x2
  412066:	je     411f9a <strcmp@plt+0xe802>
  41206c:	lea    rdi,[rsp+0x60]
  412071:	lea    rsi,[rsp+0xb0]
  412079:	lea    rdx,[rsp+0x100]
  412081:	call   421380 <strcmp@plt+0x1dbe8>
  412086:	lea    rax,[rip+0x52d33]        # 464dc0 <strcmp@plt+0x61628>
  41208d:	cmp    DWORD PTR [rax],0x0
  412090:	mov    rbx,QWORD PTR [rsp+0x10]
  412095:	mov    r14,QWORD PTR [rsp+0x20]
  41209a:	jle    4120bf <strcmp@plt+0xe927>
  41209c:	lea    rdi,[rsp+0xb0]
  4120a4:	call   437670 <strcmp@plt+0x33ed8>
  4120a9:	lea    rsi,[rip+0x34722]        # 4467d2 <strcmp@plt+0x4303a>
  4120b0:	mov    edi,0x5
  4120b5:	mov    rdx,rax
  4120b8:	xor    eax,eax
  4120ba:	call   42e520 <strcmp@plt+0x2ad88>
  4120bf:	test   rbx,rbx
  4120c2:	je     412d58 <strcmp@plt+0xf5c0>
  4120c8:	lea    rsi,[rsp+0xb0]
  4120d0:	lea    rdx,[rsp+0x100]
  4120d8:	mov    rdi,rbx
  4120db:	call   421d00 <strcmp@plt+0x1e568>
  4120e0:	cmp    QWORD PTR [rsp],0x0
  4120e5:	je     412bdd <strcmp@plt+0xf445>
  4120eb:	test   r14d,r14d
  4120ee:	je     412bdd <strcmp@plt+0xf445>
  4120f4:	movzx  r12d,WORD PTR [rbx+0x24]
  4120f9:	cmp    r12,0xffff
  412100:	je     4129f9 <strcmp@plt+0xf261>
  412106:	add    r12,QWORD PTR [rbx+0x30]
  41210a:	jmp    4129fc <strcmp@plt+0xf264>
  41210f:	mov    QWORD PTR [rsp+0x50],rbp
  412114:	xor    r12d,r12d
  412117:	xor    edi,edi
  412119:	call   42bff0 <strcmp@plt+0x28858>
  41211e:	mov    rdi,r12
  412121:	call   422c90 <strcmp@plt+0x1f4f8>
  412126:	mov    rdi,QWORD PTR [rsp+0x50]
  41212b:	call   422c90 <strcmp@plt+0x1f4f8>
  412130:	jmp    412bed <strcmp@plt+0xf455>
  412135:	mov    r14,QWORD PTR [rsp]
  412139:	mov    rbp,QWORD PTR [rsp+0x20]
  41213e:	mov    rdi,r12
  412141:	call   422c90 <strcmp@plt+0x1f4f8>
  412146:	inc    ebx
  412148:	movzx  eax,BYTE PTR [r14+0x3]
  41214d:	cmp    ebx,eax
  41214f:	jae    412b6d <strcmp@plt+0xf3d5>
  412155:	xor    eax,eax
  412157:	call   422c80 <strcmp@plt+0x1f4e8>
  41215c:	mov    r12,rax
  41215f:	lea    rdi,[rsp+0x100]
  412167:	mov    rsi,rax
  41216a:	call   420cb0 <strcmp@plt+0x1d518>
  41216f:	cmp    eax,0x1
  412172:	jne    412d90 <strcmp@plt+0xf5f8>
  412178:	mov    QWORD PTR [rsp+0x20],rbp
  41217d:	mov    rbp,QWORD PTR [rsp+0x8]
  412182:	mov    rdi,QWORD PTR [rbp+0x18]
  412186:	mov    rsi,r12
  412189:	call   42f990 <strcmp@plt+0x2c1f8>
  41218e:	mov    r13,rax
  412191:	mov    rdi,QWORD PTR [rbp+0x20]
  412195:	mov    rsi,r12
  412198:	call   42f990 <strcmp@plt+0x2c1f8>
  41219d:	mov    rbp,rax
  4121a0:	mov    rax,r13
  4121a3:	or     rax,rbp
  4121a6:	je     412274 <strcmp@plt+0xeadc>
  4121ac:	mov    DWORD PTR [rsp+0x10],ebx
  4121b0:	test   rbp,rbp
  4121b3:	mov    QWORD PTR [rsp+0x18],r12
  4121b8:	je     412455 <strcmp@plt+0xecbd>
  4121be:	test   BYTE PTR [rsp+0x34],0x4
  4121c3:	mov    r15,QWORD PTR [rsp+0x28]
  4121c8:	je     412648 <strcmp@plt+0xeeb0>
  4121ce:	mov    rbx,QWORD PTR [rbp+0x0]
  4121d2:	xor    r14d,r14d
  4121d5:	cmp    BYTE PTR [r13+0x19],0x0
  4121da:	sete   r14b
  4121de:	mov    edi,0x6
  4121e3:	xor    eax,eax
  4121e5:	call   421ec0 <strcmp@plt+0x1e728>
  4121ea:	mov    r12,rax
  4121ed:	mov    r9,QWORD PTR [r13+0x20]
  4121f1:	mov    rdi,rbx
  4121f4:	mov    esi,0x5a0
  4121f9:	mov    edx,0x2
  4121fe:	mov    ecx,0x1
  412203:	mov    r8d,r14d
  412206:	push   r15
  412208:	push   0x0
  41220a:	call   4297c0 <strcmp@plt+0x26028>
  41220f:	add    rsp,0x10
  412213:	mov    r14,rax
  412216:	mov    rdi,r12
  412219:	mov    rsi,rax
  41221c:	call   421880 <strcmp@plt+0x1e0e8>
  412221:	movzx  eax,WORD PTR [r12+0x24]
  412227:	mov    rcx,QWORD PTR [r12+0x30]
  41222c:	mov    rdx,QWORD PTR [rsp]
  412230:	mov    rdx,QWORD PTR [rdx+0x4]
  412234:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  412239:	mov    rdi,QWORD PTR [rsp+0x8]
  41223e:	mov    rsi,r12
  412241:	mov    rdx,r15
  412244:	call   407920 <strcmp@plt+0x4188>
  412249:	lea    rcx,[rip+0x52b70]        # 464dc0 <strcmp@plt+0x61628>
  412250:	mov    ecx,DWORD PTR [rcx]
  412252:	cmp    eax,0x1
  412255:	jne    41261c <strcmp@plt+0xee84>
  41225b:	test   ecx,ecx
  41225d:	jle    412633 <strcmp@plt+0xee9b>
  412263:	mov    edi,0x5
  412268:	lea    rsi,[rip+0x34214]        # 446483 <strcmp@plt+0x42ceb>
  41226f:	jmp    41262c <strcmp@plt+0xee94>
  412274:	test   BYTE PTR [rsp+0x34],0x4
  412279:	jne    4123a9 <strcmp@plt+0xec11>
  41227f:	mov    DWORD PTR [rsp+0x10],ebx
  412283:	mov    rax,QWORD PTR [rsp+0x8]
  412288:	mov    rdi,QWORD PTR [rax+0x18]
  41228c:	mov    rsi,r12
  41228f:	call   42f9d0 <strcmp@plt+0x2c238>
  412294:	mov    r13,rax
  412297:	mov    rdi,r12
  41229a:	call   4277a0 <strcmp@plt+0x24008>
  41229f:	xor    edx,edx
  4122a1:	test   eax,eax
  4122a3:	sete   dl
  4122a6:	mov    rax,QWORD PTR [rsp]
  4122aa:	mov    r8,QWORD PTR [rax+0x4]
  4122ae:	mov    rdi,r13
  4122b1:	mov    esi,0xf
  4122b6:	mov    ecx,0x1
  4122bb:	call   422090 <strcmp@plt+0x1e8f8>
  4122c0:	mov    rbp,rax
  4122c3:	lea    rax,[rip+0x52af6]        # 464dc0 <strcmp@plt+0x61628>
  4122ca:	cmp    DWORD PTR [rax],0x0
  4122cd:	jle    412325 <strcmp@plt+0xeb8d>
  4122cf:	mov    rdi,r12
  4122d2:	call   422e20 <strcmp@plt+0x1f688>
  4122d7:	mov    edi,0x5
  4122dc:	lea    rsi,[rip+0x34134]        # 446417 <strcmp@plt+0x42c7f>
  4122e3:	mov    rdx,rax
  4122e6:	xor    eax,eax
  4122e8:	call   42e520 <strcmp@plt+0x2ad88>
  4122ed:	lea    rax,[rip+0x52acc]        # 464dc0 <strcmp@plt+0x61628>
  4122f4:	cmp    DWORD PTR [rax],0x2
  4122f7:	jl     412325 <strcmp@plt+0xeb8d>
  4122f9:	mov    rdi,rbp
  4122fc:	call   422570 <strcmp@plt+0x1edd8>
  412301:	mov    rbx,rax
  412304:	mov    rdi,r12
  412307:	call   422e20 <strcmp@plt+0x1f688>
  41230c:	mov    edi,0x6
  412311:	lea    rsi,[rip+0x340e9]        # 446401 <strcmp@plt+0x42c69>
  412318:	mov    rdx,rbx
  41231b:	mov    rcx,rax
  41231e:	xor    eax,eax
  412320:	call   42e520 <strcmp@plt+0x2ad88>
  412325:	mov    rbx,QWORD PTR [rsp+0x8]
  41232a:	mov    rdi,rbx
  41232d:	mov    rsi,QWORD PTR [rsp+0x40]
  412332:	mov    rdx,QWORD PTR [rsp+0x48]
  412337:	mov    rcx,QWORD PTR [rsp+0x28]
  41233c:	lea    r15,[rsp+0xb0]
  412344:	mov    r8,r15
  412347:	call   407a60 <strcmp@plt+0x42c8>
  41234c:	cmp    eax,0x1
  41234f:	jne    412db0 <strcmp@plt+0xf618>
  412355:	mov    rdi,rbx
  412358:	mov    rsi,rbp
  41235b:	mov    rdx,r15
  41235e:	call   407920 <strcmp@plt+0x4188>
  412363:	cmp    eax,0x1
  412366:	je     412387 <strcmp@plt+0xebef>
  412368:	lea    rax,[rip+0x52a51]        # 464dc0 <strcmp@plt+0x61628>
  41236f:	cmp    DWORD PTR [rax],0x0
  412372:	jle    412387 <strcmp@plt+0xebef>
  412374:	mov    edi,0x5
  412379:	lea    rsi,[rip+0x340ce]        # 44644e <strcmp@plt+0x42cb6>
  412380:	xor    eax,eax
  412382:	call   42e520 <strcmp@plt+0x2ad88>
  412387:	test   rbp,rbp
  41238a:	mov    ebx,DWORD PTR [rsp+0x10]
  41238e:	je     412398 <strcmp@plt+0xec00>
  412390:	mov    rdi,rbp
  412393:	call   42dd40 <strcmp@plt+0x2a5a8>
  412398:	mov    rdi,r13
  41239b:	call   422c90 <strcmp@plt+0x1f4f8>
  4123a0:	mov    r14,QWORD PTR [rsp]
  4123a4:	jmp    41213e <strcmp@plt+0xe9a6>
  4123a9:	mov    rax,QWORD PTR [rsp]
  4123ad:	mov    r9,QWORD PTR [rax+0x4]
  4123b1:	mov    rdi,r12
  4123b4:	xor    esi,esi
  4123b6:	mov    edx,0x5
  4123bb:	xor    ecx,ecx
  4123bd:	mov    r8d,0x1
  4123c3:	call   422110 <strcmp@plt+0x1e978>
  4123c8:	mov    rbp,rax
  4123cb:	lea    rax,[rip+0x529ee]        # 464dc0 <strcmp@plt+0x61628>
  4123d2:	cmp    DWORD PTR [rax],0x0
  4123d5:	jle    41242d <strcmp@plt+0xec95>
  4123d7:	mov    rdi,r12
  4123da:	call   422e20 <strcmp@plt+0x1f688>
  4123df:	mov    edi,0x5
  4123e4:	lea    rsi,[rip+0x33fbc]        # 4463a7 <strcmp@plt+0x42c0f>
  4123eb:	mov    rdx,rax
  4123ee:	xor    eax,eax
  4123f0:	call   42e520 <strcmp@plt+0x2ad88>
  4123f5:	lea    rax,[rip+0x529c4]        # 464dc0 <strcmp@plt+0x61628>
  4123fc:	cmp    DWORD PTR [rax],0x2
  4123ff:	jl     41242d <strcmp@plt+0xec95>
  412401:	mov    rdi,rbp
  412404:	call   422570 <strcmp@plt+0x1edd8>
  412409:	mov    r15,rax
  41240c:	mov    rdi,r12
  41240f:	call   422e20 <strcmp@plt+0x1f688>
  412414:	mov    edi,0x6
  412419:	lea    rsi,[rip+0x33fe1]        # 446401 <strcmp@plt+0x42c69>
  412420:	mov    rdx,r15
  412423:	mov    rcx,rax
  412426:	xor    eax,eax
  412428:	call   42e520 <strcmp@plt+0x2ad88>
  41242d:	mov    rdi,QWORD PTR [rsp+0x8]
  412432:	mov    rsi,rbp
  412435:	mov    rdx,QWORD PTR [rsp+0x28]
  41243a:	call   407920 <strcmp@plt+0x4188>
  41243f:	test   rbp,rbp
  412442:	je     412135 <strcmp@plt+0xe99d>
  412448:	mov    rdi,rbp
  41244b:	call   42dd40 <strcmp@plt+0x2a5a8>
  412450:	jmp    412135 <strcmp@plt+0xe99d>
  412455:	cmp    BYTE PTR [r13+0x9],0x0
  41245a:	jne    412460 <strcmp@plt+0xecc8>
  41245c:	mov    r12,QWORD PTR [r13+0x0]
  412460:	test   BYTE PTR [rsp+0x34],0x4
  412465:	mov    r15,QWORD PTR [rsp+0x48]
  41246a:	jne    41256f <strcmp@plt+0xedd7>
  412470:	mov    r14,QWORD PTR [rsp]
  412474:	mov    r8,QWORD PTR [r14+0x4]
  412478:	mov    rdi,r12
  41247b:	mov    esi,0x1
  412480:	mov    edx,0x1
  412485:	mov    ecx,0x1
  41248a:	call   422090 <strcmp@plt+0x1e8f8>
  41248f:	mov    rbp,rax
  412492:	lea    rax,[rip+0x52927]        # 464dc0 <strcmp@plt+0x61628>
  412499:	cmp    DWORD PTR [rax],0x0
  41249c:	jle    4124f6 <strcmp@plt+0xed5e>
  41249e:	mov    rdi,QWORD PTR [rsp+0x18]
  4124a3:	call   422e20 <strcmp@plt+0x1f688>
  4124a8:	mov    edi,0x5
  4124ad:	lea    rsi,[rip+0x33fe2]        # 446496 <strcmp@plt+0x42cfe>
  4124b4:	mov    rdx,rax
  4124b7:	xor    eax,eax
  4124b9:	call   42e520 <strcmp@plt+0x2ad88>
  4124be:	lea    rax,[rip+0x528fb]        # 464dc0 <strcmp@plt+0x61628>
  4124c5:	cmp    DWORD PTR [rax],0x2
  4124c8:	jl     4124f6 <strcmp@plt+0xed5e>
  4124ca:	mov    rdi,rbp
  4124cd:	call   422570 <strcmp@plt+0x1edd8>
  4124d2:	mov    rbx,rax
  4124d5:	mov    rdi,r12
  4124d8:	call   422e20 <strcmp@plt+0x1f688>
  4124dd:	mov    edi,0x6
  4124e2:	lea    rsi,[rip+0x33f18]        # 446401 <strcmp@plt+0x42c69>
  4124e9:	mov    rdx,rbx
  4124ec:	mov    rcx,rax
  4124ef:	xor    eax,eax
  4124f1:	call   42e520 <strcmp@plt+0x2ad88>
  4124f6:	mov    rbx,QWORD PTR [rsp+0x8]
  4124fb:	mov    rdi,rbx
  4124fe:	mov    rsi,QWORD PTR [rsp+0x40]
  412503:	mov    rdx,r15
  412506:	mov    rcx,QWORD PTR [rsp+0x28]
  41250b:	lea    r12,[rsp+0xb0]
  412513:	mov    r8,r12
  412516:	call   407a60 <strcmp@plt+0x42c8>
  41251b:	cmp    eax,0x1
  41251e:	jne    412d6c <strcmp@plt+0xf5d4>
  412524:	mov    rdi,rbx
  412527:	mov    rsi,rbp
  41252a:	mov    rdx,r12
  41252d:	call   407920 <strcmp@plt+0x4188>
  412532:	cmp    eax,0x1
  412535:	je     412556 <strcmp@plt+0xedbe>
  412537:	lea    rax,[rip+0x52882]        # 464dc0 <strcmp@plt+0x61628>
  41253e:	cmp    DWORD PTR [rax],0x0
  412541:	jle    412556 <strcmp@plt+0xedbe>
  412543:	mov    edi,0x5
  412548:	lea    rsi,[rip+0x33eff]        # 44644e <strcmp@plt+0x42cb6>
  41254f:	xor    eax,eax
  412551:	call   42e520 <strcmp@plt+0x2ad88>
  412556:	test   rbp,rbp
  412559:	mov    ebx,DWORD PTR [rsp+0x10]
  41255d:	mov    r12,QWORD PTR [rsp+0x18]
  412562:	jne    41274d <strcmp@plt+0xefb5>
  412568:	xor    ebp,ebp
  41256a:	jmp    41213e <strcmp@plt+0xe9a6>
  41256f:	xor    ebp,ebp
  412571:	cmp    BYTE PTR [r13+0x19],0x0
  412576:	sete   bpl
  41257a:	mov    edi,0x6
  41257f:	xor    eax,eax
  412581:	call   421ec0 <strcmp@plt+0x1e728>
  412586:	mov    r15,QWORD PTR [rsp+0x28]
  41258b:	mov    r14,rax
  41258e:	mov    r9,QWORD PTR [r13+0x20]
  412592:	mov    rdi,r12
  412595:	mov    esi,0xf
  41259a:	mov    edx,0x3
  41259f:	mov    ecx,0x1
  4125a4:	mov    r8d,ebp
  4125a7:	push   r15
  4125a9:	push   0x0
  4125ab:	call   4297c0 <strcmp@plt+0x26028>
  4125b0:	add    rsp,0x10
  4125b4:	mov    rbp,rax
  4125b7:	mov    rdi,r14
  4125ba:	mov    rsi,rax
  4125bd:	call   421880 <strcmp@plt+0x1e0e8>
  4125c2:	movzx  eax,WORD PTR [r14+0x24]
  4125c7:	mov    rcx,QWORD PTR [r14+0x30]
  4125cb:	mov    rdx,QWORD PTR [rsp]
  4125cf:	mov    rdx,QWORD PTR [rdx+0x4]
  4125d3:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  4125d8:	mov    rdi,QWORD PTR [rsp+0x8]
  4125dd:	mov    rsi,r14
  4125e0:	mov    rdx,r15
  4125e3:	call   407920 <strcmp@plt+0x4188>
  4125e8:	lea    rcx,[rip+0x527d1]        # 464dc0 <strcmp@plt+0x61628>
  4125ef:	mov    ecx,DWORD PTR [rcx]
  4125f1:	cmp    eax,0x1
  4125f4:	jne    41275a <strcmp@plt+0xefc2>
  4125fa:	test   ecx,ecx
  4125fc:	mov    ebx,DWORD PTR [rsp+0x10]
  412600:	mov    r12,QWORD PTR [rsp+0x18]
  412605:	jle    41277a <strcmp@plt+0xefe2>
  41260b:	mov    edi,0x5
  412610:	lea    rsi,[rip+0x33e6c]        # 446483 <strcmp@plt+0x42ceb>
  412617:	jmp    412773 <strcmp@plt+0xefdb>
  41261c:	test   ecx,ecx
  41261e:	jle    412633 <strcmp@plt+0xee9b>
  412620:	mov    edi,0x5
  412625:	lea    rsi,[rip+0x33e3b]        # 446467 <strcmp@plt+0x42ccf>
  41262c:	xor    eax,eax
  41262e:	call   42e520 <strcmp@plt+0x2ad88>
  412633:	mov    rdi,r14
  412636:	call   429ad0 <strcmp@plt+0x26338>
  41263b:	test   r12,r12
  41263e:	je     412648 <strcmp@plt+0xeeb0>
  412640:	mov    rdi,r12
  412643:	call   42dd40 <strcmp@plt+0x2a5a8>
  412648:	mov    r12,QWORD PTR [rbp+0x0]
  41264c:	test   r13,r13
  41264f:	je     412662 <strcmp@plt+0xeeca>
  412651:	cmp    BYTE PTR [r13+0x8],0x0
  412656:	jne    412662 <strcmp@plt+0xeeca>
  412658:	cmp    BYTE PTR [rbp+0x8],0x0
  41265c:	je     412798 <strcmp@plt+0xf000>
  412662:	lea    rax,[rip+0x52757]        # 464dc0 <strcmp@plt+0x61628>
  412669:	cmp    DWORD PTR [rax],0x0
  41266c:	jle    41269c <strcmp@plt+0xef04>
  41266e:	mov    rdi,QWORD PTR [rsp+0x18]
  412673:	call   422e20 <strcmp@plt+0x1f688>
  412678:	mov    rbx,rax
  41267b:	mov    rdi,r12
  41267e:	call   422e20 <strcmp@plt+0x1f688>
  412683:	mov    edi,0x5
  412688:	lea    rsi,[rip+0x33e2e]        # 4464bd <strcmp@plt+0x42d25>
  41268f:	mov    rdx,rbx
  412692:	mov    rcx,rax
  412695:	xor    eax,eax
  412697:	call   42e520 <strcmp@plt+0x2ad88>
  41269c:	mov    edi,0x2
  4126a1:	xor    eax,eax
  4126a3:	call   421ec0 <strcmp@plt+0x1e728>
  4126a8:	mov    rbp,rax
  4126ab:	mov    rdi,rax
  4126ae:	mov    rsi,r12
  4126b1:	xor    edx,edx
  4126b3:	call   421570 <strcmp@plt+0x1ddd8>
  4126b8:	and    BYTE PTR [rax+0x6],0xef
  4126bc:	movzx  eax,WORD PTR [rbp+0x24]
  4126c0:	mov    rcx,QWORD PTR [rbp+0x30]
  4126c4:	and    BYTE PTR [rcx+rax*1],0xf7
  4126c8:	mov    rdx,QWORD PTR [rsp]
  4126cc:	mov    rdx,QWORD PTR [rdx+0x4]
  4126d0:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  4126d5:	mov    rbx,QWORD PTR [rsp+0x8]
  4126da:	mov    rdi,rbx
  4126dd:	mov    rsi,QWORD PTR [rsp+0x40]
  4126e2:	mov    rdx,QWORD PTR [rsp+0x48]
  4126e7:	mov    rcx,QWORD PTR [rsp+0x28]
  4126ec:	lea    r14,[rsp+0xb0]
  4126f4:	mov    r8,r14
  4126f7:	call   407a60 <strcmp@plt+0x42c8>
  4126fc:	cmp    eax,0x1
  4126ff:	jne    412d6c <strcmp@plt+0xf5d4>
  412705:	mov    rdi,rbx
  412708:	mov    rsi,rbp
  41270b:	mov    rdx,r14
  41270e:	call   407920 <strcmp@plt+0x4188>
  412713:	cmp    eax,0x1
  412716:	mov    r12,QWORD PTR [rsp+0x18]
  41271b:	je     41273c <strcmp@plt+0xefa4>
  41271d:	lea    rax,[rip+0x5269c]        # 464dc0 <strcmp@plt+0x61628>
  412724:	cmp    DWORD PTR [rax],0x0
  412727:	jle    41273c <strcmp@plt+0xefa4>
  412729:	mov    edi,0x5
  41272e:	lea    rsi,[rip+0x33d19]        # 44644e <strcmp@plt+0x42cb6>
  412735:	xor    eax,eax
  412737:	call   42e520 <strcmp@plt+0x2ad88>
  41273c:	test   rbp,rbp
  41273f:	mov    r14,QWORD PTR [rsp]
  412743:	mov    ebx,DWORD PTR [rsp+0x10]
  412747:	je     41213e <strcmp@plt+0xe9a6>
  41274d:	mov    rdi,rbp
  412750:	call   42dd40 <strcmp@plt+0x2a5a8>
  412755:	jmp    41213e <strcmp@plt+0xe9a6>
  41275a:	test   ecx,ecx
  41275c:	mov    ebx,DWORD PTR [rsp+0x10]
  412760:	mov    r12,QWORD PTR [rsp+0x18]
  412765:	jle    41277a <strcmp@plt+0xefe2>
  412767:	mov    edi,0x5
  41276c:	lea    rsi,[rip+0x33cf4]        # 446467 <strcmp@plt+0x42ccf>
  412773:	xor    eax,eax
  412775:	call   42e520 <strcmp@plt+0x2ad88>
  41277a:	mov    rdi,rbp
  41277d:	call   429ad0 <strcmp@plt+0x26338>
  412782:	test   r14,r14
  412785:	je     412135 <strcmp@plt+0xe99d>
  41278b:	mov    rdi,r14
  41278e:	call   42dd40 <strcmp@plt+0x2a5a8>
  412793:	jmp    412135 <strcmp@plt+0xe99d>
  412798:	mov    rdi,QWORD PTR [rsp+0x8]
  41279d:	call   407850 <strcmp@plt+0x40b8>
  4127a2:	mov    rbx,rax
  4127a5:	mov    rdi,rax
  4127a8:	call   4076e0 <strcmp@plt+0x3f48>
  4127ad:	test   al,0x1
  4127af:	je     4127c3 <strcmp@plt+0xf02b>
  4127b1:	mov    rdi,r12
  4127b4:	mov    esi,0x2
  4127b9:	call   412f40 <strcmp@plt+0xf7a8>
  4127be:	test   rax,rax
  4127c1:	jne    4127e1 <strcmp@plt+0xf049>
  4127c3:	mov    rdi,rbx
  4127c6:	call   4076e0 <strcmp@plt+0x3f48>
  4127cb:	test   al,0x2
  4127cd:	je     412818 <strcmp@plt+0xf080>
  4127cf:	mov    rdi,r12
  4127d2:	mov    esi,0xa
  4127d7:	call   412f40 <strcmp@plt+0xf7a8>
  4127dc:	test   rax,rax
  4127df:	je     412818 <strcmp@plt+0xf080>
  4127e1:	mov    rdi,QWORD PTR [rax]
  4127e4:	call   422fd0 <strcmp@plt+0x1f838>
  4127e9:	mov    r15,rax
  4127ec:	cmp    DWORD PTR [rax+0x18],0x3
  4127f0:	jne    412879 <strcmp@plt+0xf0e1>
  4127f6:	mov    rdi,r15
  4127f9:	call   4267b0 <strcmp@plt+0x23018>
  4127fe:	cmp    eax,0xa
  412801:	jne    412849 <strcmp@plt+0xf0b1>
  412803:	mov    rdi,r15
  412806:	call   428080 <strcmp@plt+0x248e8>
  41280b:	mov    rax,QWORD PTR [rax]
  41280e:	mov    rax,QWORD PTR [rax+0x10]
  412812:	mov    r15,QWORD PTR [rax+0x8]
  412816:	jmp    412879 <strcmp@plt+0xf0e1>
  412818:	lea    rax,[rip+0x525a1]        # 464dc0 <strcmp@plt+0x61628>
  41281f:	cmp    DWORD PTR [rax],0x0
  412822:	mov    ebx,DWORD PTR [rsp+0x10]
  412826:	mov    r12,QWORD PTR [rsp+0x18]
  41282b:	jle    4128f2 <strcmp@plt+0xf15a>
  412831:	mov    edi,0x5
  412836:	lea    rsi,[rip+0x33cc9]        # 446506 <strcmp@plt+0x42d6e>
  41283d:	xor    eax,eax
  41283f:	call   42e520 <strcmp@plt+0x2ad88>
  412844:	jmp    4128f2 <strcmp@plt+0xf15a>
  412849:	lea    rax,[rip+0x52570]        # 464dc0 <strcmp@plt+0x61628>
  412850:	cmp    DWORD PTR [rax],0x0
  412853:	jle    41290d <strcmp@plt+0xf175>
  412859:	mov    rdi,r15
  41285c:	call   4267b0 <strcmp@plt+0x23018>
  412861:	mov    edi,0x5
  412866:	lea    rsi,[rip+0x33d11]        # 44657e <strcmp@plt+0x42de6>
  41286d:	mov    edx,eax
  41286f:	xor    eax,eax
  412871:	call   42e520 <strcmp@plt+0x2ad88>
  412876:	xor    r15d,r15d
  412879:	lea    rax,[rip+0x52540]        # 464dc0 <strcmp@plt+0x61628>
  412880:	cmp    DWORD PTR [rax],0x2
  412883:	jle    4128a3 <strcmp@plt+0xf10b>
  412885:	mov    rdi,r15
  412888:	call   422e20 <strcmp@plt+0x1f688>
  41288d:	mov    edi,0x7
  412892:	lea    rsi,[rip+0x33cae]        # 446547 <strcmp@plt+0x42daf>
  412899:	mov    rdx,rax
  41289c:	xor    eax,eax
  41289e:	call   42e520 <strcmp@plt+0x2ad88>
  4128a3:	mov    ebx,DWORD PTR [rsp+0x10]
  4128a7:	mov    r12,QWORD PTR [rsp+0x18]
  4128ac:	mov    rbp,QWORD PTR [rsp+0x38]
  4128b1:	movzx  eax,WORD PTR [rbp+0x1e]
  4128b5:	mov    rcx,QWORD PTR [rbp+0x30]
  4128b9:	and    WORD PTR [rcx+rax*1],0xfffb
  4128be:	mov    rdi,rbp
  4128c1:	call   42e2b0 <strcmp@plt+0x2ab18>
  4128c6:	lea    r14,[rsp+0x60]
  4128cb:	mov    rdi,r14
  4128ce:	mov    esi,0x10f6
  4128d3:	mov    edx,0x10f6
  4128d8:	xor    ecx,ecx
  4128da:	mov    r8,r15
  4128dd:	call   435260 <strcmp@plt+0x31ac8>
  4128e2:	mov    rdi,QWORD PTR [rsp+0x8]
  4128e7:	mov    rsi,rbp
  4128ea:	mov    rdx,r14
  4128ed:	call   407920 <strcmp@plt+0x4188>
  4128f2:	mov    rbp,QWORD PTR [rsp+0x20]
  4128f7:	test   rbp,rbp
  4128fa:	je     412904 <strcmp@plt+0xf16c>
  4128fc:	mov    rdi,rbp
  4128ff:	call   42dd40 <strcmp@plt+0x2a5a8>
  412904:	mov    r14,QWORD PTR [rsp]
  412908:	jmp    41213e <strcmp@plt+0xe9a6>
  41290d:	xor    r15d,r15d
  412910:	jmp    4128a3 <strcmp@plt+0xf10b>
  412912:	lea    rax,[rip+0x524a7]        # 464dc0 <strcmp@plt+0x61628>
  412919:	xor    r13d,r13d
  41291c:	cmp    DWORD PTR [rax],0x2
  41291f:	jl     412b00 <strcmp@plt+0xf368>
  412925:	lea    rsi,[rip+0x33a47]        # 446373 <strcmp@plt+0x42bdb>
  41292c:	jmp    4129b3 <strcmp@plt+0xf21b>
  412931:	lea    rax,[rip+0x52488]        # 464dc0 <strcmp@plt+0x61628>
  412938:	cmp    DWORD PTR [rax],0x0
  41293b:	jle    412ae3 <strcmp@plt+0xf34b>
  412941:	mov    rdi,r15
  412944:	call   422e20 <strcmp@plt+0x1f688>
  412949:	lea    rsi,[rip+0x33fc9]        # 446919 <strcmp@plt+0x43181>
  412950:	xor    ebx,ebx
  412952:	mov    edi,0x5
  412957:	mov    rdx,rax
  41295a:	xor    eax,eax
  41295c:	call   42e520 <strcmp@plt+0x2ad88>
  412961:	jmp    412ae5 <strcmp@plt+0xf34d>
  412966:	lea    rax,[rip+0x52453]        # 464dc0 <strcmp@plt+0x61628>
  41296d:	cmp    DWORD PTR [rax],0x0
  412970:	jle    412b56 <strcmp@plt+0xf3be>
  412976:	mov    rdi,rbp
  412979:	call   422e20 <strcmp@plt+0x1f688>
  41297e:	lea    rsi,[rip+0x33d2a]        # 4466af <strcmp@plt+0x42f17>
  412985:	mov    edi,0x5
  41298a:	mov    rdx,rax
  41298d:	xor    eax,eax
  41298f:	call   42e520 <strcmp@plt+0x2ad88>
  412994:	jmp    412b56 <strcmp@plt+0xf3be>
  412999:	lea    rax,[rip+0x52420]        # 464dc0 <strcmp@plt+0x61628>
  4129a0:	xor    r13d,r13d
  4129a3:	cmp    DWORD PTR [rax],0x2
  4129a6:	jl     412b00 <strcmp@plt+0xf368>
  4129ac:	lea    rsi,[rip+0x339db]        # 44638e <strcmp@plt+0x42bf6>
  4129b3:	xor    r13d,r13d
  4129b6:	mov    edi,0x6
  4129bb:	jmp    41203f <strcmp@plt+0xe8a7>
  4129c0:	lea    rax,[rip+0x523f9]        # 464dc0 <strcmp@plt+0x61628>
  4129c7:	cmp    DWORD PTR [rax],0x0
  4129ca:	jle    412ae3 <strcmp@plt+0xf34b>
  4129d0:	mov    rdi,r15
  4129d3:	call   422e20 <strcmp@plt+0x1f688>
  4129d8:	mov    rcx,QWORD PTR [rbx+0x10]
  4129dc:	lea    rsi,[rip+0x33f78]        # 44695b <strcmp@plt+0x431c3>
  4129e3:	xor    ebx,ebx
  4129e5:	mov    edi,0x5
  4129ea:	mov    rdx,rax
  4129ed:	xor    eax,eax
  4129ef:	call   42e520 <strcmp@plt+0x2ad88>
  4129f4:	jmp    412ae5 <strcmp@plt+0xf34d>
  4129f9:	xor    r12d,r12d
  4129fc:	mov    r14,QWORD PTR [rsp+0x8]
  412a01:	mov    rax,QWORD PTR [r14+0x4]
  412a05:	mov    QWORD PTR [r12+0x4],rax
  412a0a:	mov    cl,BYTE PTR [r14]
  412a0d:	mov    al,BYTE PTR [r12]
  412a11:	shl    cl,0x2
  412a14:	and    cl,0x8
  412a17:	and    al,0xf7
  412a19:	or     al,cl
  412a1b:	mov    BYTE PTR [r12],al
  412a1f:	cmp    QWORD PTR [rsp+0x18],0x0
  412a25:	jne    412a38 <strcmp@plt+0xf2a0>
  412a27:	mov    cl,BYTE PTR [r14]
  412a2a:	shl    cl,0x2
  412a2d:	and    cl,0x4
  412a30:	and    al,0xfb
  412a32:	or     al,cl
  412a34:	mov    BYTE PTR [r12],al
  412a38:	lea    rsi,[r12+0xc]
  412a3d:	mov    rdi,rbx
  412a40:	mov    edx,0x1
  412a45:	mov    rcx,QWORD PTR [rsp]
  412a49:	call   4226c0 <strcmp@plt+0x1ef28>
  412a4e:	test   BYTE PTR [r14],0x2
  412a52:	je     412cdd <strcmp@plt+0xf545>
  412a58:	cmp    QWORD PTR [r13+0x40],0x0
  412a5d:	je     412cdd <strcmp@plt+0xf545>
  412a63:	mov    r14,QWORD PTR [r13+0x38]
  412a67:	mov    rax,QWORD PTR [rsp+0x28]
  412a6c:	lea    r15,[rax+0x20]
  412a70:	mov    rdi,r15
  412a73:	call   422e20 <strcmp@plt+0x1f688>
  412a78:	mov    rdi,r14
  412a7b:	mov    rsi,rax
  412a7e:	call   436340 <strcmp@plt+0x32ba8>
  412a83:	test   rax,rax
  412a86:	je     412bae <strcmp@plt+0xf416>
  412a8c:	mov    r14,rax
  412a8f:	cmp    QWORD PTR [rax+0x18],0x0
  412a94:	je     412cdd <strcmp@plt+0xf545>
  412a9a:	mov    rax,QWORD PTR [rsp+0x18]
  412a9f:	test   rax,rax
  412aa2:	je     412aae <strcmp@plt+0xf316>
  412aa4:	test   BYTE PTR [rax+0x1],0x20
  412aa8:	jne    412c91 <strcmp@plt+0xf4f9>
  412aae:	test   BYTE PTR [r12],0x4
  412ab3:	je     412cdd <strcmp@plt+0xf545>
  412ab9:	mov    rbx,QWORD PTR [rsp+0x10]
  412abe:	mov    rdi,rbx
  412ac1:	mov    esi,0x1
  412ac6:	call   4222b0 <strcmp@plt+0x1eb18>
  412acb:	mov    edx,DWORD PTR [r14+0x10]
  412acf:	mov    rcx,QWORD PTR [r14+0x18]
  412ad3:	mov    rdi,rbx
  412ad6:	mov    rsi,rax
  412ad9:	call   4226c0 <strcmp@plt+0x1ef28>
  412ade:	jmp    412cdd <strcmp@plt+0xf545>
  412ae3:	xor    ebx,ebx
  412ae5:	xor    r12d,r12d
  412ae8:	mov    rdi,r12
  412aeb:	call   42bff0 <strcmp@plt+0x28858>
  412af0:	mov    rdi,r15
  412af3:	call   422c90 <strcmp@plt+0x1f4f8>
  412af8:	mov    rdi,rbx
  412afb:	call   422c90 <strcmp@plt+0x1f4f8>
  412b00:	test   r13d,r13d
  412b03:	je     412bf9 <strcmp@plt+0xf461>
  412b09:	lea    rax,[rip+0x522b0]        # 464dc0 <strcmp@plt+0x61628>
  412b10:	mov    ebx,0x1
  412b15:	cmp    DWORD PTR [rax],0x3
  412b18:	jl     412c1f <strcmp@plt+0xf487>
  412b1e:	lea    rsi,[rip+0x337e5]        # 44630a <strcmp@plt+0x42b72>
  412b25:	mov    edi,0x7
  412b2a:	jmp    412c14 <strcmp@plt+0xf47c>
  412b2f:	test   ecx,ecx
  412b31:	jle    412b56 <strcmp@plt+0xf3be>
  412b33:	mov    rdi,rbp
  412b36:	call   422e20 <strcmp@plt+0x1f688>
  412b3b:	mov    rcx,QWORD PTR [r12+0x10]
  412b40:	lea    rsi,[rip+0x33af1]        # 446638 <strcmp@plt+0x42ea0>
  412b47:	mov    edi,0x5
  412b4c:	mov    rdx,rax
  412b4f:	xor    eax,eax
  412b51:	call   42e520 <strcmp@plt+0x2ad88>
  412b56:	mov    rdi,rbp
  412b59:	call   428bd0 <strcmp@plt+0x25438>
  412b5e:	mov    rbx,QWORD PTR [rsp+0x10]
  412b63:	test   rbx,rbx
  412b66:	jne    412be5 <strcmp@plt+0xf44d>
  412b68:	jmp    412bed <strcmp@plt+0xf455>
  412b6d:	mov    rdi,QWORD PTR [rsp+0x40]
  412b72:	call   42bff0 <strcmp@plt+0x28858>
  412b77:	mov    rdi,QWORD PTR [rsp+0x50]
  412b7c:	call   422c90 <strcmp@plt+0x1f4f8>
  412b81:	jmp    412d58 <strcmp@plt+0xf5c0>
  412b86:	lea    rax,[rip+0x52233]        # 464dc0 <strcmp@plt+0x61628>
  412b8d:	cmp    DWORD PTR [rax],0x0
  412b90:	jle    412ae8 <strcmp@plt+0xf350>
  412b96:	lea    rsi,[rip+0x33e0a]        # 4469a7 <strcmp@plt+0x4320f>
  412b9d:	mov    edi,0x5
  412ba2:	xor    eax,eax
  412ba4:	call   42e520 <strcmp@plt+0x2ad88>
  412ba9:	jmp    412ae8 <strcmp@plt+0xf350>
  412bae:	lea    rax,[rip+0x5220b]        # 464dc0 <strcmp@plt+0x61628>
  412bb5:	cmp    DWORD PTR [rax],0x0
  412bb8:	mov    rbx,QWORD PTR [rsp+0x10]
  412bbd:	jle    412bdd <strcmp@plt+0xf445>
  412bbf:	mov    rdi,r15
  412bc2:	call   422e20 <strcmp@plt+0x1f688>
  412bc7:	lea    rsi,[rip+0x33c11]        # 4467df <strcmp@plt+0x43047>
  412bce:	mov    edi,0x5
  412bd3:	mov    rdx,rax
  412bd6:	xor    eax,eax
  412bd8:	call   42e520 <strcmp@plt+0x2ad88>
  412bdd:	mov    rdi,rbp
  412be0:	call   428bd0 <strcmp@plt+0x25438>
  412be5:	mov    rdi,rbx
  412be8:	call   42dd40 <strcmp@plt+0x2a5a8>
  412bed:	xor    r13d,r13d
  412bf0:	test   r13d,r13d
  412bf3:	jne    412b09 <strcmp@plt+0xf371>
  412bf9:	lea    rax,[rip+0x521c0]        # 464dc0 <strcmp@plt+0x61628>
  412c00:	mov    eax,DWORD PTR [rax]
  412c02:	test   eax,eax
  412c04:	jle    412c1d <strcmp@plt+0xf485>
  412c06:	lea    rsi,[rip+0x336ce]        # 4462db <strcmp@plt+0x42b43>
  412c0d:	xor    ebx,ebx
  412c0f:	mov    edi,0x5
  412c14:	xor    eax,eax
  412c16:	call   42e520 <strcmp@plt+0x2ad88>
  412c1b:	jmp    412c1f <strcmp@plt+0xf487>
  412c1d:	xor    ebx,ebx
  412c1f:	mov    eax,ebx
  412c21:	add    rsp,0x188
  412c28:	pop    rbx
  412c29:	pop    r12
  412c2b:	pop    r13
  412c2d:	pop    r14
  412c2f:	pop    r15
  412c31:	pop    rbp
  412c32:	ret    
  412c33:	xor    esi,esi
  412c35:	mov    r12,QWORD PTR [rsp+0x8]
  412c3a:	mov    rax,QWORD PTR [rsp+0x10]
  412c3f:	mov    rcx,QWORD PTR [rsp]
  412c43:	mov    rbx,rbp
  412c46:	mov    rbp,QWORD PTR [rsp+0x38]
  412c4b:	mov    rax,QWORD PTR [rax+0x4]
  412c4f:	mov    QWORD PTR [rsi+0x4],rax
  412c53:	add    rsi,0xc
  412c57:	mov    edx,DWORD PTR [rcx+0xc]
  412c5a:	mov    rcx,QWORD PTR [rcx+0x10]
  412c5e:	mov    rdi,rbx
  412c61:	call   4226c0 <strcmp@plt+0x1ef28>
  412c66:	movzx  edx,WORD PTR [r14+0x42]
  412c6b:	lea    r15,[rsp+0x60]
  412c70:	mov    rdi,r15
  412c73:	mov    esi,0x10f6
  412c78:	mov    rcx,r14
  412c7b:	mov    r8,rbp
  412c7e:	call   435260 <strcmp@plt+0x31ac8>
  412c83:	mov    rdi,r12
  412c86:	mov    rsi,rbx
  412c89:	mov    rdx,r15
  412c8c:	jmp    412d4b <strcmp@plt+0xf5b3>
  412c91:	mov    rcx,QWORD PTR [rsp+0x48]
  412c96:	lea    r8,[rcx+0x20]
  412c9a:	mov    rbx,QWORD PTR [rsp+0x10]
  412c9f:	mov    rdi,rbx
  412ca2:	mov    esi,0x10f6
  412ca7:	mov    edx,0x10f6
  412cac:	call   432eb0 <strcmp@plt+0x2f718>
  412cb1:	mov    esi,DWORD PTR [r14+0x10]
  412cb5:	mov    rdi,rbx
  412cb8:	call   422840 <strcmp@plt+0x1f0a8>
  412cbd:	mov    edx,DWORD PTR [r14+0x10]
  412cc1:	mov    rcx,QWORD PTR [r14+0x18]
  412cc5:	mov    rdi,rbx
  412cc8:	mov    rsi,rax
  412ccb:	call   422630 <strcmp@plt+0x1ee98>
  412cd0:	mov    rdi,rbx
  412cd3:	call   421e50 <strcmp@plt+0x1e6b8>
  412cd8:	or     WORD PTR [rax],0x4008
  412cdd:	lea    rax,[rip+0x520dc]        # 464dc0 <strcmp@plt+0x61628>
  412ce4:	cmp    DWORD PTR [rax],0x0
  412ce7:	mov    rbp,QWORD PTR [rsp+0x28]
  412cec:	mov    rbx,QWORD PTR [rsp+0x10]
  412cf1:	jle    412d42 <strcmp@plt+0xf5aa>
  412cf3:	mov    rdi,rbx
  412cf6:	call   422570 <strcmp@plt+0x1edd8>
  412cfb:	mov    r14,rax
  412cfe:	mov    rdi,rbp
  412d01:	call   422e20 <strcmp@plt+0x1f688>
  412d06:	mov    r15,rax
  412d09:	lea    rdi,[rbp+0x20]
  412d0d:	call   422e20 <strcmp@plt+0x1f688>
  412d12:	movzx  r9d,WORD PTR [rbp+0x40]
  412d17:	movzx  r10d,WORD PTR [rbp+0x42]
  412d1c:	sub    rsp,0x8
  412d20:	lea    rsi,[rip+0x34814]        # 44753b <strcmp@plt+0x43da3>
  412d27:	mov    edi,0x5
  412d2c:	mov    rdx,r14
  412d2f:	mov    rcx,r15
  412d32:	mov    r8,rax
  412d35:	xor    eax,eax
  412d37:	push   r10
  412d39:	call   42e520 <strcmp@plt+0x2ad88>
  412d3e:	add    rsp,0x10
  412d42:	mov    rdi,r13
  412d45:	mov    rsi,rbx
  412d48:	mov    rdx,rbp
  412d4b:	call   407920 <strcmp@plt+0x4188>
  412d50:	mov    rdi,rbx
  412d53:	call   42dd40 <strcmp@plt+0x2a5a8>
  412d58:	mov    r13d,0x1
  412d5e:	test   r13d,r13d
  412d61:	je     412bf9 <strcmp@plt+0xf461>
  412d67:	jmp    412b09 <strcmp@plt+0xf371>
  412d6c:	lea    rax,[rip+0x5204d]        # 464dc0 <strcmp@plt+0x61628>
  412d73:	cmp    DWORD PTR [rax],0x0
  412d76:	mov    r12,QWORD PTR [rsp+0x18]
  412d7b:	jle    412d90 <strcmp@plt+0xf5f8>
  412d7d:	lea    rsi,[rip+0x313a5]        # 444129 <strcmp@plt+0x40991>
  412d84:	mov    edi,0x5
  412d89:	xor    eax,eax
  412d8b:	call   42e520 <strcmp@plt+0x2ad88>
  412d90:	mov    rdi,QWORD PTR [rsp+0x40]
  412d95:	call   42bff0 <strcmp@plt+0x28858>
  412d9a:	test   rbp,rbp
  412d9d:	je     41211e <strcmp@plt+0xe986>
  412da3:	mov    rdi,rbp
  412da6:	call   42dd40 <strcmp@plt+0x2a5a8>
  412dab:	jmp    41211e <strcmp@plt+0xe986>
  412db0:	lea    rax,[rip+0x52009]        # 464dc0 <strcmp@plt+0x61628>
  412db7:	cmp    DWORD PTR [rax],0x0
  412dba:	jg     412d7d <strcmp@plt+0xf5e5>
  412dbc:	jmp    412d90 <strcmp@plt+0xf5f8>
  412dbe:	lea    rdi,[rip+0x3332f]        # 4460f4 <strcmp@plt+0x4295c>
  412dc5:	lea    rsi,[rip+0x3333e]        # 44610a <strcmp@plt+0x42972>
  412dcc:	lea    rdx,[rip+0x33344]        # 446117 <strcmp@plt+0x4297f>
  412dd3:	call   431eb0 <strcmp@plt+0x2e718>
  412dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  412de0:	push   r15
  412de2:	push   r14
  412de4:	push   r12
  412de6:	push   rbx
  412de7:	push   rax
  412de8:	mov    r14,rdx
  412deb:	mov    r15,rsi
  412dee:	mov    r12,rdi
  412df1:	mov    edi,0x20
  412df6:	call   431d60 <strcmp@plt+0x2e5c8>
  412dfb:	test   rax,rax
  412dfe:	je     412e2f <strcmp@plt+0xf697>
  412e00:	mov    rbx,rax
  412e03:	mov    rdi,r12
  412e06:	call   403710 <strdup@plt>
  412e0b:	mov    QWORD PTR [rbx],rax
  412e0e:	mov    rdi,r15
  412e11:	call   423440 <strcmp@plt+0x1fca8>
  412e16:	mov    QWORD PTR [rbx+0x8],rax
  412e1a:	mov    rdi,r14
  412e1d:	call   403710 <strdup@plt>
  412e22:	mov    QWORD PTR [rbx+0x18],rax
  412e26:	mov    DWORD PTR [rbx+0x10],0x1
  412e2d:	jmp    412e54 <strcmp@plt+0xf6bc>
  412e2f:	lea    rax,[rip+0x51f8a]        # 464dc0 <strcmp@plt+0x61628>
  412e36:	cmp    DWORD PTR [rax],0x0
  412e39:	jle    412e52 <strcmp@plt+0xf6ba>
  412e3b:	lea    rsi,[rip+0x3336c]        # 4461ae <strcmp@plt+0x42a16>
  412e42:	xor    ebx,ebx
  412e44:	mov    edi,0x5
  412e49:	xor    eax,eax
  412e4b:	call   42e520 <strcmp@plt+0x2ad88>
  412e50:	jmp    412e54 <strcmp@plt+0xf6bc>
  412e52:	xor    ebx,ebx
  412e54:	mov    rax,rbx
  412e57:	add    rsp,0x8
  412e5b:	pop    rbx
  412e5c:	pop    r12
  412e5e:	pop    r14
  412e60:	pop    r15
  412e62:	ret    
  412e63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412e6d:	nop    DWORD PTR [rax]
  412e70:	push   rbx
  412e71:	mov    rbx,rdi
  412e74:	mov    rdi,QWORD PTR [rdi+0x8]
  412e78:	call   422c90 <strcmp@plt+0x1f4f8>
  412e7d:	mov    rdi,QWORD PTR [rbx]
  412e80:	call   403790 <free@plt>
  412e85:	mov    rdi,QWORD PTR [rbx+0x18]
  412e89:	call   403790 <free@plt>
  412e8e:	mov    rdi,rbx
  412e91:	pop    rbx
  412e92:	jmp    403790 <free@plt>
  412e97:	nop    WORD PTR [rax+rax*1+0x0]
  412ea0:	push   rbp
  412ea1:	push   r14
  412ea3:	push   rbx
  412ea4:	mov    r14d,esi
  412ea7:	mov    rbp,rdi
  412eaa:	mov    edi,0x18
  412eaf:	call   431d60 <strcmp@plt+0x2e5c8>
  412eb4:	test   rax,rax
  412eb7:	je     412ed6 <strcmp@plt+0xf73e>
  412eb9:	mov    rbx,rax
  412ebc:	mov    rdi,rbp
  412ebf:	call   403710 <strdup@plt>
  412ec4:	mov    QWORD PTR [rbx],rax
  412ec7:	mov    DWORD PTR [rbx+0x8],r14d
  412ecb:	call   42b980 <strcmp@plt+0x281e8>
  412ed0:	mov    QWORD PTR [rbx+0x10],rax
  412ed4:	jmp    412efb <strcmp@plt+0xf763>
  412ed6:	lea    rax,[rip+0x51ee3]        # 464dc0 <strcmp@plt+0x61628>
  412edd:	cmp    DWORD PTR [rax],0x0
  412ee0:	jle    412ef9 <strcmp@plt+0xf761>
  412ee2:	lea    rsi,[rip+0x332e5]        # 4461ce <strcmp@plt+0x42a36>
  412ee9:	xor    ebx,ebx
  412eeb:	mov    edi,0x5
  412ef0:	xor    eax,eax
  412ef2:	call   42e520 <strcmp@plt+0x2ad88>
  412ef7:	jmp    412efb <strcmp@plt+0xf763>
  412ef9:	xor    ebx,ebx
  412efb:	mov    rax,rbx
  412efe:	pop    rbx
  412eff:	pop    r14
  412f01:	pop    rbp
  412f02:	ret    
  412f03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f0d:	nop    DWORD PTR [rax]
  412f10:	push   rbx
  412f11:	mov    rbx,rdi
  412f14:	mov    rdi,QWORD PTR [rdi]
  412f17:	call   403790 <free@plt>
  412f1c:	mov    rdi,QWORD PTR [rbx+0x10]
  412f20:	call   42bff0 <strcmp@plt+0x28858>
  412f25:	mov    rdi,rbx
  412f28:	pop    rbx
  412f29:	jmp    403790 <free@plt>
  412f2e:	xchg   ax,ax
  412f30:	mov    edi,0x48
  412f35:	jmp    431d60 <strcmp@plt+0x2e5c8>
  412f3a:	nop    WORD PTR [rax+rax*1+0x0]
  412f40:	push   rbp
  412f41:	push   r15
  412f43:	push   r14
  412f45:	push   r13
  412f47:	push   r12
  412f49:	push   rbx
  412f4a:	push   rax
  412f4b:	mov    DWORD PTR [rsp+0x4],0x0
  412f53:	mov    DWORD PTR [rsp],0x0
  412f5a:	mov    rax,QWORD PTR [rdi+0x28]
  412f5e:	mov    r15,QWORD PTR [rax+0x8]
  412f62:	cmp    r15,rax
  412f65:	je     412fe0 <strcmp@plt+0xf848>
  412f67:	mov    r13d,esi
  412f6a:	mov    r14,rdi
  412f6d:	jmp    412f7a <strcmp@plt+0xf7e2>
  412f6f:	nop
  412f70:	mov    r15,QWORD PTR [r15+0x8]
  412f74:	cmp    r15,QWORD PTR [r14+0x28]
  412f78:	je     412fe0 <strcmp@plt+0xf848>
  412f7a:	mov    rbx,QWORD PTR [r15+0x10]
  412f7e:	mov    rdi,rbx
  412f81:	lea    rsi,[rsp+0x4]
  412f86:	mov    rdx,rsp
  412f89:	call   428730 <strcmp@plt+0x24f98>
  412f8e:	mov    eax,DWORD PTR [rsp+0x4]
  412f92:	test   eax,eax
  412f94:	je     412f70 <strcmp@plt+0xf7d8>
  412f96:	cmp    eax,0x1
  412f99:	jne    412fa1 <strcmp@plt+0xf809>
  412f9b:	cmp    DWORD PTR [rsp],r13d
  412f9f:	jne    412f70 <strcmp@plt+0xf7d8>
  412fa1:	mov    r12,QWORD PTR [rbx+0x8]
  412fa5:	cmp    r12,rbx
  412fa8:	jne    412fba <strcmp@plt+0xf822>
  412faa:	jmp    412f70 <strcmp@plt+0xf7d8>
  412fac:	nop    DWORD PTR [rax+0x0]
  412fb0:	mov    r12,QWORD PTR [r12+0x8]
  412fb5:	cmp    r12,rbx
  412fb8:	je     412f70 <strcmp@plt+0xf7d8>
  412fba:	mov    rbp,QWORD PTR [r12+0x10]
  412fbf:	cmp    BYTE PTR [rbp+0x8],0x0
  412fc3:	je     412fb0 <strcmp@plt+0xf818>
  412fc5:	mov    rdi,QWORD PTR [rbp+0x0]
  412fc9:	call   422fd0 <strcmp@plt+0x1f838>
  412fce:	mov    rdi,rax
  412fd1:	call   422ef0 <strcmp@plt+0x1f758>
  412fd6:	movzx  eax,ax
  412fd9:	cmp    eax,r13d
  412fdc:	jne    412fb0 <strcmp@plt+0xf818>
  412fde:	jmp    412fe2 <strcmp@plt+0xf84a>
  412fe0:	xor    ebp,ebp
  412fe2:	mov    rax,rbp
  412fe5:	add    rsp,0x8
  412fe9:	pop    rbx
  412fea:	pop    r12
  412fec:	pop    r13
  412fee:	pop    r14
  412ff0:	pop    r15
  412ff2:	pop    rbp
  412ff3:	ret    
  412ff4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ffe:	xchg   ax,ax
  413000:	push   r15
  413002:	push   r14
  413004:	push   rbx
  413005:	mov    r14,QWORD PTR [rdi+0x30]
  413009:	call   436ff0 <strcmp@plt+0x33858>
  41300e:	mov    rbx,rax
  413011:	mov    r15,QWORD PTR [rax]
  413014:	lea    rax,[rip+0x51da5]        # 464dc0 <strcmp@plt+0x61628>
  41301b:	cmp    DWORD PTR [rax],0x0
  41301e:	jle    41303e <strcmp@plt+0xf8a6>
  413020:	mov    rdi,r15
  413023:	call   422e20 <strcmp@plt+0x1f688>
  413028:	lea    rsi,[rip+0x3388a]        # 4468b9 <strcmp@plt+0x43121>
  41302f:	mov    edi,0x5
  413034:	mov    rdx,rax
  413037:	xor    eax,eax
  413039:	call   42e520 <strcmp@plt+0x2ad88>
  41303e:	mov    rdi,QWORD PTR [r14+0x20]
  413042:	mov    rsi,r15
  413045:	call   42f270 <strcmp@plt+0x2bad8>
  41304a:	mov    rdi,rbx
  41304d:	call   42e4f0 <strcmp@plt+0x2ad58>
  413052:	mov    rdi,r14
  413055:	mov    esi,0x7
  41305a:	call   410f40 <strcmp@plt+0xd7a8>
  41305f:	mov    eax,0x1
  413064:	pop    rbx
  413065:	pop    r14
  413067:	pop    r15
  413069:	ret    
  41306a:	nop    WORD PTR [rax+rax*1+0x0]
  413070:	push   rbp
  413071:	push   rbx
  413072:	push   rax
  413073:	mov    rax,QWORD PTR [rdi+0x8]
  413077:	cmp    rax,QWORD PTR [rip+0x50f02]        # 463f80 <strcmp@plt+0x607e8>
  41307e:	jne    4130d4 <strcmp@plt+0xf93c>
  413080:	mov    rbx,rdi
  413083:	xor    ebp,ebp
  413085:	xor    eax,eax
  413087:	call   42ea00 <strcmp@plt+0x2b268>
  41308c:	mov    QWORD PTR [rbx+0x18],rax
  413090:	xor    eax,eax
  413092:	call   42ea00 <strcmp@plt+0x2b268>
  413097:	mov    QWORD PTR [rbx+0x20],rax
  41309b:	test   rax,rax
  41309e:	je     4130cb <strcmp@plt+0xf933>
  4130a0:	cmp    QWORD PTR [rbx+0x18],0x0
  4130a5:	je     4130cb <strcmp@plt+0xf933>
  4130a7:	lea    rax,[rip+0x51d12]        # 464dc0 <strcmp@plt+0x61628>
  4130ae:	mov    ebp,0x1
  4130b3:	cmp    DWORD PTR [rax],0x0
  4130b6:	jle    4130cb <strcmp@plt+0xf933>
  4130b8:	lea    rsi,[rip+0x33c7c]        # 446d3b <strcmp@plt+0x435a3>
  4130bf:	mov    edi,0x5
  4130c4:	xor    eax,eax
  4130c6:	call   42e520 <strcmp@plt+0x2ad88>
  4130cb:	mov    eax,ebp
  4130cd:	add    rsp,0x8
  4130d1:	pop    rbx
  4130d2:	pop    rbp
  4130d3:	ret    
  4130d4:	lea    rdi,[rip+0x33c7f]        # 446d5a <strcmp@plt+0x435c2>
  4130db:	lea    rsi,[rip+0x33c94]        # 446d76 <strcmp@plt+0x435de>
  4130e2:	lea    rdx,[rip+0x33ca0]        # 446d89 <strcmp@plt+0x435f1>
  4130e9:	call   431eb0 <strcmp@plt+0x2e718>
  4130ee:	xchg   ax,ax
  4130f0:	push   rbx
  4130f1:	mov    rax,QWORD PTR [rdi+0x8]
  4130f5:	cmp    rax,QWORD PTR [rip+0x50e84]        # 463f80 <strcmp@plt+0x607e8>
  4130fc:	jne    413129 <strcmp@plt+0xf991>
  4130fe:	mov    rbx,rdi
  413101:	lea    rax,[rip+0x51cb8]        # 464dc0 <strcmp@plt+0x61628>
  413108:	cmp    DWORD PTR [rax],0x0
  41310b:	jle    413120 <strcmp@plt+0xf988>
  41310d:	lea    rsi,[rip+0x3399b]        # 446aaf <strcmp@plt+0x43317>
  413114:	mov    edi,0x5
  413119:	xor    eax,eax
  41311b:	call   42e520 <strcmp@plt+0x2ad88>
  413120:	mov    rdi,rbx
  413123:	pop    rbx
  413124:	jmp    403790 <free@plt>
  413129:	lea    rdi,[rip+0x33c2a]        # 446d5a <strcmp@plt+0x435c2>
  413130:	lea    rsi,[rip+0x33c3f]        # 446d76 <strcmp@plt+0x435de>
  413137:	lea    rdx,[rip+0x33c4b]        # 446d89 <strcmp@plt+0x435f1>
  41313e:	call   431eb0 <strcmp@plt+0x2e718>
  413143:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41314d:	nop    DWORD PTR [rax]
  413150:	push   rbx
  413151:	mov    rax,QWORD PTR [rdi+0x8]
  413155:	cmp    rax,QWORD PTR [rip+0x50e24]        # 463f80 <strcmp@plt+0x607e8>
  41315c:	jne    413182 <strcmp@plt+0xf9ea>
  41315e:	mov    rbx,rdi
  413161:	mov    rdi,QWORD PTR [rdi+0x20]
  413165:	lea    rsi,[rip+0x16f4]        # 414860 <strcmp@plt+0x110c8>
  41316c:	call   42ec10 <strcmp@plt+0x2b478>
  413171:	mov    rdi,QWORD PTR [rbx+0x18]
  413175:	lea    rsi,[rip+0x16c4]        # 414840 <strcmp@plt+0x110a8>
  41317c:	pop    rbx
  41317d:	jmp    42ec10 <strcmp@plt+0x2b478>
  413182:	lea    rdi,[rip+0x33bd1]        # 446d5a <strcmp@plt+0x435c2>
  413189:	lea    rsi,[rip+0x33be6]        # 446d76 <strcmp@plt+0x435de>
  413190:	lea    rdx,[rip+0x33bf2]        # 446d89 <strcmp@plt+0x435f1>
  413197:	call   431eb0 <strcmp@plt+0x2e718>
  41319c:	nop    DWORD PTR [rax+0x0]
  4131a0:	push   rbp
  4131a1:	push   r15
  4131a3:	push   r14
  4131a5:	push   r13
  4131a7:	push   r12
  4131a9:	push   rbx
  4131aa:	sub    rsp,0x858
  4131b1:	mov    rax,QWORD PTR [rdi+0x8]
  4131b5:	cmp    rax,QWORD PTR [rip+0x50dc4]        # 463f80 <strcmp@plt+0x607e8>
  4131bc:	jne    41395d <strcmp@plt+0x101c5>
  4131c2:	mov    r14,rdi
  4131c5:	call   42b980 <strcmp@plt+0x281e8>
  4131ca:	mov    rbx,rax
  4131cd:	call   42b980 <strcmp@plt+0x281e8>
  4131d2:	mov    QWORD PTR [rsp+0x28],rax
  4131d7:	call   42b980 <strcmp@plt+0x281e8>
  4131dc:	mov    rbp,rax
  4131df:	mov    rax,QWORD PTR [r14+0x18]
  4131e3:	mov    rdi,QWORD PTR [rax]
  4131e6:	mov    rsi,rbp
  4131e9:	call   42baa0 <strcmp@plt+0x28308>
  4131ee:	mov    rax,QWORD PTR [r14+0x18]
  4131f2:	mov    rdi,QWORD PTR [rax+0x8]
  4131f6:	mov    QWORD PTR [rsp+0x18],rbp
  4131fb:	mov    rsi,rbp
  4131fe:	call   42baa0 <strcmp@plt+0x28308>
  413203:	mov    QWORD PTR [rsp+0x8],r14
  413208:	mov    rax,QWORD PTR [r14+0x18]
  41320c:	mov    rcx,QWORD PTR [rax+0x10]
  413210:	mov    rcx,QWORD PTR [rcx]
  413213:	cmp    DWORD PTR [rcx],0x0
  413216:	je     41327a <strcmp@plt+0xfae2>
  413218:	xor    r15d,r15d
  41321b:	mov    r14d,0x3
  413221:	xor    ebp,ebp
  413223:	jmp    413241 <strcmp@plt+0xfaa9>
  413225:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41322f:	nop
  413230:	inc    ebp
  413232:	mov    rcx,QWORD PTR [rax+0x10]
  413236:	mov    rcx,QWORD PTR [rcx]
  413239:	add    r15d,0x2
  41323d:	cmp    ebp,DWORD PTR [rcx]
  41323f:	je     41327a <strcmp@plt+0xfae2>
  413241:	mov    rdx,QWORD PTR [rcx+0x10]
  413245:	mov    esi,ebp
  413247:	shr    esi,0x4
  41324a:	mov    edi,r15d
  41324d:	and    dil,0x1e
  413251:	shlx   edi,r14d,edi
  413256:	test   DWORD PTR [rdx+rsi*4],edi
  413259:	jne    413230 <strcmp@plt+0xfa98>
  41325b:	mov    rax,QWORD PTR [rcx+0x20]
  41325f:	mov    ecx,ebp
  413261:	mov    rdi,QWORD PTR [rax+rcx*8]
  413265:	mov    rsi,QWORD PTR [rsp+0x18]
  41326a:	call   42baa0 <strcmp@plt+0x28308>
  41326f:	mov    rax,QWORD PTR [rsp+0x8]
  413274:	mov    rax,QWORD PTR [rax+0x18]
  413278:	jmp    413230 <strcmp@plt+0xfa98>
  41327a:	mov    rcx,QWORD PTR [rax+0x18]
  41327e:	mov    rcx,QWORD PTR [rcx]
  413281:	cmp    DWORD PTR [rcx],0x0
  413284:	je     4132ea <strcmp@plt+0xfb52>
  413286:	xor    r15d,r15d
  413289:	mov    r14d,0x3
  41328f:	xor    ebp,ebp
  413291:	jmp    4132b1 <strcmp@plt+0xfb19>
  413293:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41329d:	nop    DWORD PTR [rax]
  4132a0:	inc    ebp
  4132a2:	mov    rcx,QWORD PTR [rax+0x18]
  4132a6:	mov    rcx,QWORD PTR [rcx]
  4132a9:	add    r15d,0x2
  4132ad:	cmp    ebp,DWORD PTR [rcx]
  4132af:	je     4132ea <strcmp@plt+0xfb52>
  4132b1:	mov    rdx,QWORD PTR [rcx+0x10]
  4132b5:	mov    esi,ebp
  4132b7:	shr    esi,0x4
  4132ba:	mov    edi,r15d
  4132bd:	and    dil,0x1e
  4132c1:	shlx   edi,r14d,edi
  4132c6:	test   DWORD PTR [rdx+rsi*4],edi
  4132c9:	jne    4132a0 <strcmp@plt+0xfb08>
  4132cb:	mov    rax,QWORD PTR [rcx+0x20]
  4132cf:	mov    ecx,ebp
  4132d1:	mov    rdi,QWORD PTR [rax+rcx*8]
  4132d5:	mov    rsi,QWORD PTR [rsp+0x18]
  4132da:	call   42baa0 <strcmp@plt+0x28308>
  4132df:	mov    rax,QWORD PTR [rsp+0x8]
  4132e4:	mov    rax,QWORD PTR [rax+0x18]
  4132e8:	jmp    4132a0 <strcmp@plt+0xfb08>
  4132ea:	mov    rdi,QWORD PTR [rax+0x20]
  4132ee:	mov    rbp,QWORD PTR [rsp+0x18]
  4132f3:	mov    rsi,rbp
  4132f6:	call   42baa0 <strcmp@plt+0x28308>
  4132fb:	mov    rax,QWORD PTR [rsp+0x8]
  413300:	mov    rax,QWORD PTR [rax+0x18]
  413304:	mov    rdi,QWORD PTR [rax+0x20]
  413308:	mov    rsi,rbp
  41330b:	call   42baa0 <strcmp@plt+0x28308>
  413310:	mov    rdx,QWORD PTR [rbp+0x8]
  413314:	cmp    rdx,rbp
  413317:	je     413512 <strcmp@plt+0xfd7a>
  41331d:	mov    DWORD PTR [rsp+0x4],0x0
  413325:	jmp    41333f <strcmp@plt+0xfba7>
  413327:	nop    WORD PTR [rax+rax*1+0x0]
  413330:	mov    rdx,QWORD PTR [rdx+0x8]
  413334:	cmp    rdx,QWORD PTR [rsp+0x18]
  413339:	je     41351a <strcmp@plt+0xfd82>
  41333f:	mov    rax,QWORD PTR [rdx+0x10]
  413343:	mov    rcx,QWORD PTR [rax]
  413346:	test   rcx,rcx
  413349:	je     413330 <strcmp@plt+0xfb98>
  41334b:	xor    esi,esi
  41334d:	mov    QWORD PTR [rsp+0x10],rdx
  413352:	cmp    QWORD PTR [rcx+0x8],0x0
  413357:	jne    41337f <strcmp@plt+0xfbe7>
  413359:	jmp    4134cf <strcmp@plt+0xfd37>
  41335e:	xchg   ax,ax
  413360:	test   rcx,rcx
  413363:	je     4134f9 <strcmp@plt+0xfd61>
  413369:	mov    rax,rcx
  41336c:	mov    rcx,rax
  41336f:	test   rax,rax
  413372:	je     413330 <strcmp@plt+0xfb98>
  413374:	cmp    QWORD PTR [rcx+0x8],0x0
  413379:	je     4134cf <strcmp@plt+0xfd37>
  41337f:	mov    QWORD PTR [rsp+0x38],rsi
  413384:	mov    QWORD PTR [rsp+0x30],rcx
  413389:	mov    rax,QWORD PTR [rcx+0x28]
  41338d:	mov    r12,QWORD PTR [rax]
  413390:	test   r12,r12
  413393:	je     4134c0 <strcmp@plt+0xfd28>
  413399:	xor    edx,edx
  41339b:	cmp    QWORD PTR [r12+0x8],0x0
  4133a1:	jne    4133d4 <strcmp@plt+0xfc3c>
  4133a3:	jmp    41348e <strcmp@plt+0xfcf6>
  4133a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4133b0:	test   rcx,rcx
  4133b3:	je     413445 <strcmp@plt+0xfcad>
  4133b9:	mov    rax,rcx
  4133bc:	mov    r12,rax
  4133bf:	test   rax,rax
  4133c2:	je     4134c0 <strcmp@plt+0xfd28>
  4133c8:	cmp    QWORD PTR [r12+0x8],0x0
  4133ce:	je     41348e <strcmp@plt+0xfcf6>
  4133d4:	mov    rax,QWORD PTR [r12+0x28]
  4133d9:	test   rax,rax
  4133dc:	je     41348e <strcmp@plt+0xfcf6>
  4133e2:	mov    QWORD PTR [rsp+0x20],rdx
  4133e7:	mov    rbp,QWORD PTR [rax]
  4133ea:	mov    rdi,rbp
  4133ed:	call   4230b0 <strcmp@plt+0x1f918>
  4133f2:	mov    r15d,eax
  4133f5:	mov    r14,QWORD PTR [rbx+0x8]
  4133f9:	cmp    r14,rbx
  4133fc:	je     413438 <strcmp@plt+0xfca0>
  4133fe:	xchg   ax,ax
  413400:	mov    r13,QWORD PTR [r14+0x10]
  413404:	mov    rdi,r13
  413407:	call   4230b0 <strcmp@plt+0x1f918>
  41340c:	cmp    r15b,al
  41340f:	jae    413420 <strcmp@plt+0xfc88>
  413411:	mov    rdi,rbp
  413414:	mov    rsi,r13
  413417:	jmp    413426 <strcmp@plt+0xfc8e>
  413419:	nop    DWORD PTR [rax+0x0]
  413420:	mov    rdi,r13
  413423:	mov    rsi,rbp
  413426:	call   433f90 <strcmp@plt+0x307f8>
  41342b:	cmp    al,0x1
  41342d:	je     413457 <strcmp@plt+0xfcbf>
  41342f:	mov    r14,QWORD PTR [r14+0x8]
  413433:	cmp    r14,rbx
  413436:	jne    413400 <strcmp@plt+0xfc68>
  413438:	mov    rdi,rbp
  41343b:	mov    rsi,rbx
  41343e:	call   42baa0 <strcmp@plt+0x28308>
  413443:	jmp    413489 <strcmp@plt+0xfcf1>
  413445:	test   rdx,rdx
  413448:	je     4134c0 <strcmp@plt+0xfd28>
  41344a:	mov    rax,QWORD PTR [rsp+rdx*8+0x38]
  41344f:	dec    rdx
  413452:	jmp    4133bc <strcmp@plt+0xfc24>
  413457:	mov    rdi,rbp
  41345a:	call   422e20 <strcmp@plt+0x1f688>
  41345f:	mov    rbp,rax
  413462:	mov    rdi,r13
  413465:	call   422e20 <strcmp@plt+0x1f688>
  41346a:	mov    edi,0x2
  41346f:	lea    rsi,[rip+0x3364e]        # 446ac4 <strcmp@plt+0x4332c>
  413476:	mov    rdx,rbp
  413479:	mov    rcx,rax
  41347c:	xor    eax,eax
  41347e:	call   42e520 <strcmp@plt+0x2ad88>
  413483:	mov    al,0x1
  413485:	mov    DWORD PTR [rsp+0x4],eax
  413489:	mov    rdx,QWORD PTR [rsp+0x20]
  41348e:	mov    rax,QWORD PTR [r12+0x10]
  413493:	mov    rcx,QWORD PTR [r12+0x18]
  413498:	test   rax,rax
  41349b:	je     4133b0 <strcmp@plt+0xfc18>
  4134a1:	test   rcx,rcx
  4134a4:	je     4133bc <strcmp@plt+0xfc24>
  4134aa:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  4134af:	inc    rdx
  4134b2:	jmp    4133bc <strcmp@plt+0xfc24>
  4134b7:	nop    WORD PTR [rax+rax*1+0x0]
  4134c0:	mov    rdx,QWORD PTR [rsp+0x10]
  4134c5:	mov    rsi,QWORD PTR [rsp+0x38]
  4134ca:	mov    rcx,QWORD PTR [rsp+0x30]
  4134cf:	mov    rax,QWORD PTR [rcx+0x10]
  4134d3:	mov    rcx,QWORD PTR [rcx+0x18]
  4134d7:	test   rax,rax
  4134da:	je     413360 <strcmp@plt+0xfbc8>
  4134e0:	test   rcx,rcx
  4134e3:	je     41336c <strcmp@plt+0xfbd4>
  4134e9:	mov    QWORD PTR [rsp+rsi*8+0x450],rcx
  4134f1:	inc    rsi
  4134f4:	jmp    41336c <strcmp@plt+0xfbd4>
  4134f9:	test   rsi,rsi
  4134fc:	je     413330 <strcmp@plt+0xfb98>
  413502:	mov    rax,QWORD PTR [rsp+rsi*8+0x448]
  41350a:	dec    rsi
  41350d:	jmp    41336c <strcmp@plt+0xfbd4>
  413512:	mov    DWORD PTR [rsp+0x4],0x0
  41351a:	mov    rdi,QWORD PTR [rsp+0x18]
  41351f:	call   42bff0 <strcmp@plt+0x28858>
  413524:	mov    rdi,rbx
  413527:	call   42bff0 <strcmp@plt+0x28858>
  41352c:	call   42b980 <strcmp@plt+0x281e8>
  413531:	mov    rbp,rax
  413534:	mov    rbx,QWORD PTR [rsp+0x8]
  413539:	mov    rax,QWORD PTR [rbx+0x20]
  41353d:	mov    rdi,QWORD PTR [rax]
  413540:	mov    rsi,rbp
  413543:	call   42baa0 <strcmp@plt+0x28308>
  413548:	mov    rax,QWORD PTR [rbx+0x20]
  41354c:	mov    rdi,QWORD PTR [rax+0x8]
  413550:	mov    QWORD PTR [rsp+0x10],rbp
  413555:	mov    rsi,rbp
  413558:	call   42baa0 <strcmp@plt+0x28308>
  41355d:	mov    rax,QWORD PTR [rbx+0x20]
  413561:	mov    rcx,QWORD PTR [rax+0x10]
  413565:	mov    rcx,QWORD PTR [rcx]
  413568:	cmp    DWORD PTR [rcx],0x0
  41356b:	je     4135c8 <strcmp@plt+0xfe30>
  41356d:	xor    ebx,ebx
  41356f:	mov    r14d,0x3
  413575:	xor    ebp,ebp
  413577:	jmp    413590 <strcmp@plt+0xfdf8>
  413579:	nop    DWORD PTR [rax+0x0]
  413580:	inc    ebp
  413582:	mov    rcx,QWORD PTR [rax+0x10]
  413586:	mov    rcx,QWORD PTR [rcx]
  413589:	add    ebx,0x2
  41358c:	cmp    ebp,DWORD PTR [rcx]
  41358e:	je     4135c8 <strcmp@plt+0xfe30>
  413590:	mov    rdx,QWORD PTR [rcx+0x10]
  413594:	mov    esi,ebp
  413596:	shr    esi,0x4
  413599:	mov    edi,ebx
  41359b:	and    dil,0x1e
  41359f:	shlx   edi,r14d,edi
  4135a4:	test   DWORD PTR [rdx+rsi*4],edi
  4135a7:	jne    413580 <strcmp@plt+0xfde8>
  4135a9:	mov    rax,QWORD PTR [rcx+0x20]
  4135ad:	mov    ecx,ebp
  4135af:	mov    rdi,QWORD PTR [rax+rcx*8]
  4135b3:	mov    rsi,QWORD PTR [rsp+0x10]
  4135b8:	call   42baa0 <strcmp@plt+0x28308>
  4135bd:	mov    rax,QWORD PTR [rsp+0x8]
  4135c2:	mov    rax,QWORD PTR [rax+0x20]
  4135c6:	jmp    413580 <strcmp@plt+0xfde8>
  4135c8:	mov    rcx,QWORD PTR [rax+0x18]
  4135cc:	mov    rcx,QWORD PTR [rcx]
  4135cf:	cmp    DWORD PTR [rcx],0x0
  4135d2:	je     413628 <strcmp@plt+0xfe90>
  4135d4:	xor    ebx,ebx
  4135d6:	mov    r14d,0x3
  4135dc:	xor    ebp,ebp
  4135de:	jmp    4135f0 <strcmp@plt+0xfe58>
  4135e0:	inc    ebp
  4135e2:	mov    rcx,QWORD PTR [rax+0x18]
  4135e6:	mov    rcx,QWORD PTR [rcx]
  4135e9:	add    ebx,0x2
  4135ec:	cmp    ebp,DWORD PTR [rcx]
  4135ee:	je     413628 <strcmp@plt+0xfe90>
  4135f0:	mov    rdx,QWORD PTR [rcx+0x10]
  4135f4:	mov    esi,ebp
  4135f6:	shr    esi,0x4
  4135f9:	mov    edi,ebx
  4135fb:	and    dil,0x1e
  4135ff:	shlx   edi,r14d,edi
  413604:	test   DWORD PTR [rdx+rsi*4],edi
  413607:	jne    4135e0 <strcmp@plt+0xfe48>
  413609:	mov    rax,QWORD PTR [rcx+0x20]
  41360d:	mov    ecx,ebp
  41360f:	mov    rdi,QWORD PTR [rax+rcx*8]
  413613:	mov    rsi,QWORD PTR [rsp+0x10]
  413618:	call   42baa0 <strcmp@plt+0x28308>
  41361d:	mov    rax,QWORD PTR [rsp+0x8]
  413622:	mov    rax,QWORD PTR [rax+0x20]
  413626:	jmp    4135e0 <strcmp@plt+0xfe48>
  413628:	mov    rdi,QWORD PTR [rax+0x20]
  41362c:	mov    rbp,QWORD PTR [rsp+0x10]
  413631:	mov    rsi,rbp
  413634:	call   42baa0 <strcmp@plt+0x28308>
  413639:	mov    rbx,QWORD PTR [rsp+0x8]
  41363e:	mov    rax,QWORD PTR [rbx+0x20]
  413642:	mov    rdi,QWORD PTR [rax+0x20]
  413646:	mov    rsi,rbp
  413649:	call   42baa0 <strcmp@plt+0x28308>
  41364e:	mov    rdx,QWORD PTR [rbp+0x8]
  413652:	cmp    rdx,rbp
  413655:	jne    41366f <strcmp@plt+0xfed7>
  413657:	jmp    4138c2 <strcmp@plt+0x1012a>
  41365c:	nop    DWORD PTR [rax+0x0]
  413660:	mov    rdx,QWORD PTR [rdx+0x8]
  413664:	cmp    rdx,QWORD PTR [rsp+0x10]
  413669:	je     4138c2 <strcmp@plt+0x1012a>
  41366f:	mov    rax,QWORD PTR [rdx+0x10]
  413673:	mov    rcx,QWORD PTR [rax]
  413676:	test   rcx,rcx
  413679:	je     413660 <strcmp@plt+0xfec8>
  41367b:	xor    esi,esi
  41367d:	mov    QWORD PTR [rsp+0x30],rdx
  413682:	cmp    QWORD PTR [rcx+0x8],0x0
  413687:	jne    4136af <strcmp@plt+0xff17>
  413689:	jmp    41387f <strcmp@plt+0x100e7>
  41368e:	xchg   ax,ax
  413690:	test   rcx,rcx
  413693:	je     4138a9 <strcmp@plt+0x10111>
  413699:	mov    rax,rcx
  41369c:	mov    rcx,rax
  41369f:	test   rax,rax
  4136a2:	je     413660 <strcmp@plt+0xfec8>
  4136a4:	cmp    QWORD PTR [rcx+0x8],0x0
  4136a9:	je     41387f <strcmp@plt+0x100e7>
  4136af:	mov    QWORD PTR [rsp+0x20],rsi
  4136b4:	mov    QWORD PTR [rsp+0x38],rcx
  4136b9:	mov    rax,QWORD PTR [rcx+0x28]
  4136bd:	mov    r14,QWORD PTR [rax]
  4136c0:	test   r14,r14
  4136c3:	je     413870 <strcmp@plt+0x100d8>
  4136c9:	xor    r12d,r12d
  4136cc:	cmp    QWORD PTR [r14+0x8],0x0
  4136d1:	jne    413703 <strcmp@plt+0xff6b>
  4136d3:	jmp    413840 <strcmp@plt+0x100a8>
  4136d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4136e0:	test   rcx,rcx
  4136e3:	je     4137d2 <strcmp@plt+0x1003a>
  4136e9:	mov    rax,rcx
  4136ec:	mov    r14,rax
  4136ef:	test   rax,rax
  4136f2:	je     413870 <strcmp@plt+0x100d8>
  4136f8:	cmp    QWORD PTR [r14+0x8],0x0
  4136fd:	je     413840 <strcmp@plt+0x100a8>
  413703:	mov    rax,QWORD PTR [r14+0x28]
  413707:	test   rax,rax
  41370a:	je     413840 <strcmp@plt+0x100a8>
  413710:	mov    r15,QWORD PTR [rax]
  413713:	mov    rdi,QWORD PTR [rbx+0x18]
  413717:	mov    rsi,r15
  41371a:	call   42f990 <strcmp@plt+0x2c1f8>
  41371f:	test   rax,rax
  413722:	je     4137ac <strcmp@plt+0x10014>
  413728:	mov    rbp,QWORD PTR [rax]
  41372b:	mov    rdi,r15
  41372e:	mov    rsi,rbp
  413731:	call   423670 <strcmp@plt+0x1fed8>
  413736:	test   eax,eax
  413738:	je     4137e8 <strcmp@plt+0x10050>
  41373e:	mov    rdi,r15
  413741:	call   4230b0 <strcmp@plt+0x1f918>
  413746:	mov    ebp,eax
  413748:	mov    rax,QWORD PTR [rsp+0x28]
  41374d:	mov    rbx,QWORD PTR [rax+0x8]
  413751:	cmp    rbx,rax
  413754:	je     41379a <strcmp@plt+0x10002>
  413756:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413760:	mov    r13,QWORD PTR [rbx+0x10]
  413764:	mov    rdi,r13
  413767:	call   4230b0 <strcmp@plt+0x1f918>
  41376c:	cmp    bpl,al
  41376f:	jae    413780 <strcmp@plt+0xffe8>
  413771:	mov    rdi,r15
  413774:	mov    rsi,r13
  413777:	jmp    413786 <strcmp@plt+0xffee>
  413779:	nop    DWORD PTR [rax+0x0]
  413780:	mov    rdi,r13
  413783:	mov    rsi,r15
  413786:	call   433f90 <strcmp@plt+0x307f8>
  41378b:	cmp    al,0x1
  41378d:	je     413809 <strcmp@plt+0x10071>
  41378f:	mov    rbx,QWORD PTR [rbx+0x8]
  413793:	cmp    rbx,QWORD PTR [rsp+0x28]
  413798:	jne    413760 <strcmp@plt+0xffc8>
  41379a:	mov    rdi,r15
  41379d:	mov    rsi,QWORD PTR [rsp+0x28]
  4137a2:	call   42baa0 <strcmp@plt+0x28308>
  4137a7:	jmp    41383b <strcmp@plt+0x100a3>
  4137ac:	mov    rdi,r15
  4137af:	call   422e20 <strcmp@plt+0x1f688>
  4137b4:	mov    edi,0x2
  4137b9:	lea    rsi,[rip+0x3333f]        # 446aff <strcmp@plt+0x43367>
  4137c0:	mov    rdx,rax
  4137c3:	xor    eax,eax
  4137c5:	call   42e520 <strcmp@plt+0x2ad88>
  4137ca:	mov    al,0x1
  4137cc:	mov    DWORD PTR [rsp+0x4],eax
  4137d0:	jmp    413840 <strcmp@plt+0x100a8>
  4137d2:	test   r12,r12
  4137d5:	je     413870 <strcmp@plt+0x100d8>
  4137db:	mov    rax,QWORD PTR [rsp+r12*8+0x38]
  4137e0:	dec    r12
  4137e3:	jmp    4136ec <strcmp@plt+0xff54>
  4137e8:	mov    rdi,r15
  4137eb:	call   422e20 <strcmp@plt+0x1f688>
  4137f0:	mov    rbx,rax
  4137f3:	mov    rdi,rbp
  4137f6:	call   422e20 <strcmp@plt+0x1f688>
  4137fb:	mov    edi,0x2
  413800:	lea    rsi,[rip+0x3333f]        # 446b46 <strcmp@plt+0x433ae>
  413807:	jmp    413828 <strcmp@plt+0x10090>
  413809:	mov    rdi,r15
  41380c:	call   422e20 <strcmp@plt+0x1f688>
  413811:	mov    rbx,rax
  413814:	mov    rdi,r13
  413817:	call   422e20 <strcmp@plt+0x1f688>
  41381c:	mov    edi,0x2
  413821:	lea    rsi,[rip+0x33363]        # 446b8b <strcmp@plt+0x433f3>
  413828:	mov    rdx,rbx
  41382b:	mov    rcx,rax
  41382e:	xor    eax,eax
  413830:	call   42e520 <strcmp@plt+0x2ad88>
  413835:	mov    al,0x1
  413837:	mov    DWORD PTR [rsp+0x4],eax
  41383b:	mov    rbx,QWORD PTR [rsp+0x8]
  413840:	mov    rax,QWORD PTR [r14+0x10]
  413844:	mov    rcx,QWORD PTR [r14+0x18]
  413848:	test   rax,rax
  41384b:	je     4136e0 <strcmp@plt+0xff48>
  413851:	test   rcx,rcx
  413854:	je     4136ec <strcmp@plt+0xff54>
  41385a:	mov    QWORD PTR [rsp+r12*8+0x40],rcx
  41385f:	inc    r12
  413862:	jmp    4136ec <strcmp@plt+0xff54>
  413867:	nop    WORD PTR [rax+rax*1+0x0]
  413870:	mov    rdx,QWORD PTR [rsp+0x30]
  413875:	mov    rsi,QWORD PTR [rsp+0x20]
  41387a:	mov    rcx,QWORD PTR [rsp+0x38]
  41387f:	mov    rax,QWORD PTR [rcx+0x10]
  413883:	mov    rcx,QWORD PTR [rcx+0x18]
  413887:	test   rax,rax
  41388a:	je     413690 <strcmp@plt+0xfef8>
  413890:	test   rcx,rcx
  413893:	je     41369c <strcmp@plt+0xff04>
  413899:	mov    QWORD PTR [rsp+rsi*8+0x450],rcx
  4138a1:	inc    rsi
  4138a4:	jmp    41369c <strcmp@plt+0xff04>
  4138a9:	test   rsi,rsi
  4138ac:	je     413660 <strcmp@plt+0xfec8>
  4138b2:	mov    rax,QWORD PTR [rsp+rsi*8+0x448]
  4138ba:	dec    rsi
  4138bd:	jmp    41369c <strcmp@plt+0xff04>
  4138c2:	mov    rdi,QWORD PTR [rsp+0x10]
  4138c7:	call   42bff0 <strcmp@plt+0x28858>
  4138cc:	mov    rdi,QWORD PTR [rsp+0x28]
  4138d1:	call   42bff0 <strcmp@plt+0x28858>
  4138d6:	cmp    BYTE PTR [rsp+0x4],0x0
  4138db:	je     4138e4 <strcmp@plt+0x1014c>
  4138dd:	xor    eax,eax
  4138df:	call   43aeb0 <strcmp@plt+0x37718>
  4138e4:	lea    rbx,[rip+0x514d5]        # 464dc0 <strcmp@plt+0x61628>
  4138eb:	cmp    DWORD PTR [rbx],0x0
  4138ee:	jle    413903 <strcmp@plt+0x1016b>
  4138f0:	lea    rsi,[rip+0x32859]        # 446150 <strcmp@plt+0x429b8>
  4138f7:	mov    edi,0x5
  4138fc:	xor    eax,eax
  4138fe:	call   42e520 <strcmp@plt+0x2ad88>
  413903:	mov    rbp,QWORD PTR [rsp+0x8]
  413908:	mov    rdi,rbp
  41390b:	mov    esi,0x5
  413910:	call   413ff0 <strcmp@plt+0x10858>
  413915:	mov    rdi,rbp
  413918:	mov    esi,0x5
  41391d:	call   414300 <strcmp@plt+0x10b68>
  413922:	cmp    DWORD PTR [rbx],0x0
  413925:	jle    41394b <strcmp@plt+0x101b3>
  413927:	lea    rsi,[rip+0x33294]        # 446bc2 <strcmp@plt+0x4342a>
  41392e:	mov    edi,0x5
  413933:	xor    eax,eax
  413935:	add    rsp,0x858
  41393c:	pop    rbx
  41393d:	pop    r12
  41393f:	pop    r13
  413941:	pop    r14
  413943:	pop    r15
  413945:	pop    rbp
  413946:	jmp    42e520 <strcmp@plt+0x2ad88>
  41394b:	add    rsp,0x858
  413952:	pop    rbx
  413953:	pop    r12
  413955:	pop    r13
  413957:	pop    r14
  413959:	pop    r15
  41395b:	pop    rbp
  41395c:	ret    
  41395d:	lea    rdi,[rip+0x333f6]        # 446d5a <strcmp@plt+0x435c2>
  413964:	lea    rsi,[rip+0x3340b]        # 446d76 <strcmp@plt+0x435de>
  41396b:	lea    rdx,[rip+0x33417]        # 446d89 <strcmp@plt+0x435f1>
  413972:	call   431eb0 <strcmp@plt+0x2e718>
  413977:	nop    WORD PTR [rax+rax*1+0x0]
  413980:	push   rbp
  413981:	push   r15
  413983:	push   r14
  413985:	push   r13
  413987:	push   r12
  413989:	push   rbx
  41398a:	sub    rsp,0xc8
  413991:	mov    rax,QWORD PTR [rdi+0x8]
  413995:	cmp    rax,QWORD PTR [rip+0x505e4]        # 463f80 <strcmp@plt+0x607e8>
  41399c:	jne    413f0d <strcmp@plt+0x10775>
  4139a2:	mov    r14,rdx
  4139a5:	mov    rbp,rsi
  4139a8:	mov    r15,rdi
  4139ab:	mov    rdi,rsi
  4139ae:	call   420ac0 <strcmp@plt+0x1d328>
  4139b3:	cmp    eax,0x8
  4139b6:	jne    413a43 <strcmp@plt+0x102ab>
  4139bc:	mov    rdi,rbp
  4139bf:	call   420ae0 <strcmp@plt+0x1d348>
  4139c4:	test   BYTE PTR [rax],0x8
  4139c7:	jne    413e0d <strcmp@plt+0x10675>
  4139cd:	mov    rdi,rbp
  4139d0:	call   420b10 <strcmp@plt+0x1d378>
  4139d5:	cmp    eax,0x1
  4139d8:	jne    413e3e <strcmp@plt+0x106a6>
  4139de:	lea    rbx,[rsp+0x30]
  4139e3:	mov    rdi,rbp
  4139e6:	mov    rsi,rbx
  4139e9:	call   433160 <strcmp@plt+0x2f9c8>
  4139ee:	movzx  esi,WORD PTR [rsp+0x72]
  4139f3:	movzx  edx,WORD PTR [rsp+0x70]
  4139f8:	lea    rcx,[rsp+0x50]
  4139fd:	lea    rdi,[rsp+0x80]
  413a05:	mov    r8,rbx
  413a08:	call   435260 <strcmp@plt+0x31ac8>
  413a0d:	mov    rdi,rbp
  413a10:	call   420ac0 <strcmp@plt+0x1d328>
  413a15:	mov    ebx,eax
  413a17:	lea    rax,[rip+0x513a2]        # 464dc0 <strcmp@plt+0x61628>
  413a1e:	cmp    DWORD PTR [rax],0x0
  413a21:	jle    413a48 <strcmp@plt+0x102b0>
  413a23:	mov    rdi,rbp
  413a26:	call   422570 <strcmp@plt+0x1edd8>
  413a2b:	lea    rsi,[rip+0x331a6]        # 446bd8 <strcmp@plt+0x43440>
  413a32:	mov    edi,0x5
  413a37:	mov    rdx,rax
  413a3a:	xor    eax,eax
  413a3c:	call   42e520 <strcmp@plt+0x2ad88>
  413a41:	jmp    413a48 <strcmp@plt+0x102b0>
  413a43:	mov    ebx,eax
  413a45:	xor    r14d,r14d
  413a48:	lea    eax,[rbx-0x2]
  413a4b:	cmp    eax,0x3
  413a4e:	jb     413dc6 <strcmp@plt+0x1062e>
  413a54:	cmp    ebx,0x7
  413a57:	je     413dc6 <strcmp@plt+0x1062e>
  413a5d:	cmp    ebx,0x1
  413a60:	jne    413e54 <strcmp@plt+0x106bc>
  413a66:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  413a6b:	vmovups ymm1,YMMWORD PTR [rbp+0x20]
  413a70:	vmovups YMMWORD PTR [rsp+0x50],ymm1
  413a76:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  413a7c:	xor    eax,eax
  413a7e:	vzeroupper 
  413a81:	call   422c80 <strcmp@plt+0x1f4e8>
  413a86:	mov    rbp,rax
  413a89:	lea    rbx,[rsp+0x30]
  413a8e:	mov    rdi,rbx
  413a91:	call   4213d0 <strcmp@plt+0x1dc38>
  413a96:	mov    r13,rax
  413a99:	mov    rdi,rbx
  413a9c:	mov    rsi,rbp
  413a9f:	call   420c80 <strcmp@plt+0x1d4e8>
  413aa4:	cmp    eax,0x1
  413aa7:	jne    413e6e <strcmp@plt+0x106d6>
  413aad:	lea    r12,[rip+0x5130c]        # 464dc0 <strcmp@plt+0x61628>
  413ab4:	cmp    DWORD PTR [r12],0x0
  413ab9:	jle    413ad9 <strcmp@plt+0x10341>
  413abb:	mov    rdi,rbp
  413abe:	call   422e20 <strcmp@plt+0x1f688>
  413ac3:	lea    rsi,[rip+0x33207]        # 446cd1 <strcmp@plt+0x43539>
  413aca:	mov    edi,0x5
  413acf:	mov    rdx,rax
  413ad2:	xor    eax,eax
  413ad4:	call   42e520 <strcmp@plt+0x2ad88>
  413ad9:	movzx  ecx,WORD PTR [r13+0x0]
  413ade:	movzx  eax,BYTE PTR [r13+0x2]
  413ae3:	shl    eax,0x10
  413ae6:	or     eax,ecx
  413ae8:	test   al,0x2
  413aea:	jne    413e8d <strcmp@plt+0x106f5>
  413af0:	test   al,0x1
  413af2:	jne    413ea1 <strcmp@plt+0x10709>
  413af8:	mov    QWORD PTR [rsp+0x8],rbp
  413afd:	lea    rdi,[rip+0xf18c]        # 422c90 <strcmp@plt+0x1f4f8>
  413b04:	call   42b9b0 <strcmp@plt+0x28218>
  413b09:	lea    rdi,[rsp+0x30]
  413b0e:	mov    QWORD PTR [rsp+0x18],rax
  413b13:	mov    rsi,rax
  413b16:	call   420cf0 <strcmp@plt+0x1d558>
  413b1b:	cmp    BYTE PTR [r13+0x3],0x0
  413b20:	je     413ec4 <strcmp@plt+0x1072c>
  413b26:	mov    QWORD PTR [rsp+0x10],r13
  413b2b:	xor    eax,eax
  413b2d:	call   422c80 <strcmp@plt+0x1f4e8>
  413b32:	mov    r13,rax
  413b35:	lea    rdi,[rsp+0x30]
  413b3a:	mov    rsi,rax
  413b3d:	call   420cb0 <strcmp@plt+0x1d518>
  413b42:	cmp    eax,0x1
  413b45:	jne    413ef9 <strcmp@plt+0x10761>
  413b4b:	xor    ebp,ebp
  413b4d:	mov    rdi,QWORD PTR [r15+0x18]
  413b51:	mov    rsi,r13
  413b54:	call   42f990 <strcmp@plt+0x2c1f8>
  413b59:	test   rax,rax
  413b5c:	je     413be9 <strcmp@plt+0x10451>
  413b62:	mov    rbx,rax
  413b65:	mov    rdi,QWORD PTR [r15+0x20]
  413b69:	mov    rsi,r13
  413b6c:	call   42f990 <strcmp@plt+0x2c1f8>
  413b71:	test   rax,rax
  413b74:	je     413c87 <strcmp@plt+0x104ef>
  413b7a:	mov    r12,rax
  413b7d:	mov    edi,0x6
  413b82:	xor    eax,eax
  413b84:	call   421ec0 <strcmp@plt+0x1e728>
  413b89:	mov    rbx,rax
  413b8c:	mov    rsi,QWORD PTR [r12]
  413b90:	mov    rdi,rax
  413b93:	call   421880 <strcmp@plt+0x1e0e8>
  413b98:	movzx  eax,WORD PTR [rbx+0x24]
  413b9c:	mov    rcx,QWORD PTR [rbx+0x30]
  413ba0:	mov    rdx,QWORD PTR [rsp+0x10]
  413ba5:	mov    rdx,QWORD PTR [rdx+0x4]
  413ba9:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  413bae:	mov    rdi,r15
  413bb1:	mov    rsi,rbx
  413bb4:	mov    rdx,r14
  413bb7:	call   407920 <strcmp@plt+0x4188>
  413bbc:	lea    r12,[rip+0x511fd]        # 464dc0 <strcmp@plt+0x61628>
  413bc3:	mov    ecx,DWORD PTR [r12]
  413bc7:	cmp    eax,0x1
  413bca:	jne    413d47 <strcmp@plt+0x105af>
  413bd0:	test   ecx,ecx
  413bd2:	jle    413d5e <strcmp@plt+0x105c6>
  413bd8:	mov    edi,0x5
  413bdd:	lea    rsi,[rip+0x3289f]        # 446483 <strcmp@plt+0x42ceb>
  413be4:	jmp    413d57 <strcmp@plt+0x105bf>
  413be9:	mov    rax,QWORD PTR [rsp+0x10]
  413bee:	mov    r9,QWORD PTR [rax+0x4]
  413bf2:	mov    rdi,r13
  413bf5:	xor    esi,esi
  413bf7:	mov    edx,0x5
  413bfc:	xor    ecx,ecx
  413bfe:	mov    r8d,0x1
  413c04:	call   422110 <strcmp@plt+0x1e978>
  413c09:	mov    rbx,rax
  413c0c:	cmp    DWORD PTR [r12],0x0
  413c11:	jle    413c6b <strcmp@plt+0x104d3>
  413c13:	mov    rdi,r13
  413c16:	call   422e20 <strcmp@plt+0x1f688>
  413c1b:	mov    edi,0x5
  413c20:	lea    rsi,[rip+0x32780]        # 4463a7 <strcmp@plt+0x42c0f>
  413c27:	mov    rdx,rax
  413c2a:	xor    eax,eax
  413c2c:	call   42e520 <strcmp@plt+0x2ad88>
  413c31:	cmp    DWORD PTR [r12],0x2
  413c36:	jl     413c6b <strcmp@plt+0x104d3>
  413c38:	mov    rdi,rbx
  413c3b:	call   422570 <strcmp@plt+0x1edd8>
  413c40:	mov    r12,rax
  413c43:	mov    rdi,r13
  413c46:	call   422e20 <strcmp@plt+0x1f688>
  413c4b:	mov    edi,0x6
  413c50:	lea    rsi,[rip+0x327aa]        # 446401 <strcmp@plt+0x42c69>
  413c57:	mov    rdx,r12
  413c5a:	lea    r12,[rip+0x5115f]        # 464dc0 <strcmp@plt+0x61628>
  413c61:	mov    rcx,rax
  413c64:	xor    eax,eax
  413c66:	call   42e520 <strcmp@plt+0x2ad88>
  413c6b:	mov    rdi,r15
  413c6e:	mov    rsi,rbx
  413c71:	mov    rdx,r14
  413c74:	call   407920 <strcmp@plt+0x4188>
  413c79:	test   rbx,rbx
  413c7c:	jne    413d63 <strcmp@plt+0x105cb>
  413c82:	jmp    413d6b <strcmp@plt+0x105d3>
  413c87:	mov    rdi,QWORD PTR [r15+0x20]
  413c8b:	mov    rsi,r13
  413c8e:	call   42f9d0 <strcmp@plt+0x2c238>
  413c93:	mov    r12,rax
  413c96:	mov    rdi,rax
  413c99:	call   422d90 <strcmp@plt+0x1f5f8>
  413c9e:	mov    WORD PTR [rsp+0x20],ax
  413ca3:	mov    rdi,QWORD PTR [rbx]
  413ca6:	call   422d90 <strcmp@plt+0x1f5f8>
  413cab:	mov    QWORD PTR [rsp+0x28],r12
  413cb0:	cmp    WORD PTR [rsp+0x20],ax
  413cb5:	jae    413cba <strcmp@plt+0x10522>
  413cb7:	mov    r12,QWORD PTR [rbx]
  413cba:	mov    rax,QWORD PTR [rsp+0x10]
  413cbf:	mov    r9,QWORD PTR [rax+0x4]
  413cc3:	mov    QWORD PTR [rsp+0x20],r12
  413cc8:	mov    rdi,r12
  413ccb:	mov    esi,0xf
  413cd0:	mov    edx,0x4
  413cd5:	mov    ecx,0x1
  413cda:	xor    r8d,r8d
  413cdd:	call   422110 <strcmp@plt+0x1e978>
  413ce2:	mov    rbx,rax
  413ce5:	lea    r12,[rip+0x510d4]        # 464dc0 <strcmp@plt+0x61628>
  413cec:	cmp    DWORD PTR [r12],0x0
  413cf1:	jle    413d28 <strcmp@plt+0x10590>
  413cf3:	mov    rdi,r13
  413cf6:	call   422e20 <strcmp@plt+0x1f688>
  413cfb:	mov    r12,rax
  413cfe:	mov    rdi,QWORD PTR [rsp+0x20]
  413d03:	call   422e20 <strcmp@plt+0x1f688>
  413d08:	mov    edi,0x5
  413d0d:	lea    rsi,[rip+0x32fca]        # 446cde <strcmp@plt+0x43546>
  413d14:	mov    rdx,r12
  413d17:	lea    r12,[rip+0x510a2]        # 464dc0 <strcmp@plt+0x61628>
  413d1e:	mov    rcx,rax
  413d21:	xor    eax,eax
  413d23:	call   42e520 <strcmp@plt+0x2ad88>
  413d28:	mov    rdi,r15
  413d2b:	mov    rsi,rbx
  413d2e:	mov    rdx,r14
  413d31:	call   407920 <strcmp@plt+0x4188>
  413d36:	mov    rdi,QWORD PTR [rsp+0x28]
  413d3b:	call   422c90 <strcmp@plt+0x1f4f8>
  413d40:	test   rbx,rbx
  413d43:	jne    413d63 <strcmp@plt+0x105cb>
  413d45:	jmp    413d6b <strcmp@plt+0x105d3>
  413d47:	test   ecx,ecx
  413d49:	jle    413d5e <strcmp@plt+0x105c6>
  413d4b:	mov    edi,0x5
  413d50:	lea    rsi,[rip+0x32710]        # 446467 <strcmp@plt+0x42ccf>
  413d57:	xor    eax,eax
  413d59:	call   42e520 <strcmp@plt+0x2ad88>
  413d5e:	test   rbx,rbx
  413d61:	je     413d6b <strcmp@plt+0x105d3>
  413d63:	mov    rdi,rbx
  413d66:	call   42dd40 <strcmp@plt+0x2a5a8>
  413d6b:	mov    rdi,r13
  413d6e:	call   422c90 <strcmp@plt+0x1f4f8>
  413d73:	inc    ebp
  413d75:	mov    rax,QWORD PTR [rsp+0x10]
  413d7a:	movzx  eax,BYTE PTR [rax+0x3]
  413d7e:	cmp    ebp,eax
  413d80:	jae    413ec4 <strcmp@plt+0x1072c>
  413d86:	xor    eax,eax
  413d88:	call   422c80 <strcmp@plt+0x1f4e8>
  413d8d:	mov    r13,rax
  413d90:	lea    rdi,[rsp+0x30]
  413d95:	mov    rsi,rax
  413d98:	call   420cb0 <strcmp@plt+0x1d518>
  413d9d:	cmp    eax,0x1
  413da0:	je     413b4d <strcmp@plt+0x103b5>
  413da6:	mov    rdi,QWORD PTR [rsp+0x18]
  413dab:	call   42bff0 <strcmp@plt+0x28858>
  413db0:	test   rbx,rbx
  413db3:	je     413f03 <strcmp@plt+0x1076b>
  413db9:	mov    rdi,rbx
  413dbc:	call   42dd40 <strcmp@plt+0x2a5a8>
  413dc1:	jmp    413f03 <strcmp@plt+0x1076b>
  413dc6:	lea    rax,[rip+0x50ff3]        # 464dc0 <strcmp@plt+0x61628>
  413dcd:	mov    eax,DWORD PTR [rax]
  413dcf:	cmp    eax,0x3
  413dd2:	jl     413df2 <strcmp@plt+0x1065a>
  413dd4:	lea    rsi,[rip+0x32e20]        # 446bfb <strcmp@plt+0x43463>
  413ddb:	mov    edi,0x7
  413de0:	mov    edx,ebx
  413de2:	xor    eax,eax
  413de4:	call   42e520 <strcmp@plt+0x2ad88>
  413de9:	lea    rax,[rip+0x50fd0]        # 464dc0 <strcmp@plt+0x61628>
  413df0:	mov    eax,DWORD PTR [rax]
  413df2:	test   eax,eax
  413df4:	jle    413e3e <strcmp@plt+0x106a6>
  413df6:	lea    rsi,[rip+0x32e75]        # 446c72 <strcmp@plt+0x434da>
  413dfd:	xor    ebx,ebx
  413dff:	mov    edi,0x5
  413e04:	xor    eax,eax
  413e06:	call   42e520 <strcmp@plt+0x2ad88>
  413e0b:	jmp    413e40 <strcmp@plt+0x106a8>
  413e0d:	mov    rdi,rbp
  413e10:	call   422600 <strcmp@plt+0x1ee68>
  413e15:	lea    rax,[rip+0x50fa4]        # 464dc0 <strcmp@plt+0x61628>
  413e1c:	cmp    DWORD PTR [rax],0x2
  413e1f:	jl     413e3e <strcmp@plt+0x106a6>
  413e21:	mov    rdi,rbp
  413e24:	call   422600 <strcmp@plt+0x1ee68>
  413e29:	lea    rsi,[rip+0x31a5e]        # 44588e <strcmp@plt+0x420f6>
  413e30:	mov    edi,0x6
  413e35:	mov    edx,eax
  413e37:	xor    eax,eax
  413e39:	call   42e520 <strcmp@plt+0x2ad88>
  413e3e:	xor    ebx,ebx
  413e40:	mov    eax,ebx
  413e42:	add    rsp,0xc8
  413e49:	pop    rbx
  413e4a:	pop    r12
  413e4c:	pop    r13
  413e4e:	pop    r14
  413e50:	pop    r15
  413e52:	pop    rbp
  413e53:	ret    
  413e54:	lea    rax,[rip+0x50f65]        # 464dc0 <strcmp@plt+0x61628>
  413e5b:	mov    eax,DWORD PTR [rax]
  413e5d:	cmp    eax,0x3
  413e60:	jl     413df2 <strcmp@plt+0x1065a>
  413e62:	lea    rsi,[rip+0x32dcf]        # 446c38 <strcmp@plt+0x434a0>
  413e69:	jmp    413ddb <strcmp@plt+0x10643>
  413e6e:	xor    r13d,r13d
  413e71:	xor    edi,edi
  413e73:	call   42bff0 <strcmp@plt+0x28858>
  413e78:	mov    rdi,r13
  413e7b:	call   422c90 <strcmp@plt+0x1f4f8>
  413e80:	mov    rdi,rbp
  413e83:	call   422c90 <strcmp@plt+0x1f4f8>
  413e88:	jmp    413de9 <strcmp@plt+0x10651>
  413e8d:	cmp    DWORD PTR [r12],0x2
  413e92:	jl     413de9 <strcmp@plt+0x10651>
  413e98:	lea    rsi,[rip+0x324d4]        # 446373 <strcmp@plt+0x42bdb>
  413e9f:	jmp    413eb3 <strcmp@plt+0x1071b>
  413ea1:	cmp    DWORD PTR [r12],0x2
  413ea6:	jl     413de9 <strcmp@plt+0x10651>
  413eac:	lea    rsi,[rip+0x324db]        # 44638e <strcmp@plt+0x42bf6>
  413eb3:	mov    edi,0x6
  413eb8:	xor    eax,eax
  413eba:	call   42e520 <strcmp@plt+0x2ad88>
  413ebf:	jmp    413de9 <strcmp@plt+0x10651>
  413ec4:	mov    rdi,QWORD PTR [rsp+0x18]
  413ec9:	call   42bff0 <strcmp@plt+0x28858>
  413ece:	mov    rdi,QWORD PTR [rsp+0x8]
  413ed3:	call   422c90 <strcmp@plt+0x1f4f8>
  413ed8:	mov    ebx,0x1
  413edd:	cmp    DWORD PTR [r12],0x3
  413ee2:	jl     413e40 <strcmp@plt+0x106a8>
  413ee8:	lea    rsi,[rip+0x32db0]        # 446c9f <strcmp@plt+0x43507>
  413eef:	mov    edi,0x7
  413ef4:	jmp    413e04 <strcmp@plt+0x1066c>
  413ef9:	mov    rdi,QWORD PTR [rsp+0x18]
  413efe:	call   42bff0 <strcmp@plt+0x28858>
  413f03:	mov    rbp,QWORD PTR [rsp+0x8]
  413f08:	jmp    413e78 <strcmp@plt+0x106e0>
  413f0d:	lea    rdi,[rip+0x32e46]        # 446d5a <strcmp@plt+0x435c2>
  413f14:	lea    rsi,[rip+0x32e5b]        # 446d76 <strcmp@plt+0x435de>
  413f1b:	lea    rdx,[rip+0x32e67]        # 446d89 <strcmp@plt+0x435f1>
  413f22:	call   431eb0 <strcmp@plt+0x2e718>
  413f27:	nop    WORD PTR [rax+rax*1+0x0]
  413f30:	mov    eax,0x1
  413f35:	ret    
  413f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f40:	mov    eax,0x1
  413f45:	ret    
  413f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f50:	mov    eax,0x1
  413f55:	ret    
  413f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f60:	xor    eax,eax
  413f62:	ret    
  413f63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f6d:	nop    DWORD PTR [rax]
  413f70:	test   rsi,rsi
  413f73:	je     413f93 <strcmp@plt+0x107fb>
  413f75:	push   rax
  413f76:	mov    rdx,rsi
  413f79:	mov    rdi,QWORD PTR [rdi+0x18]
  413f7d:	mov    rsi,QWORD PTR [rsi]
  413f80:	call   42ee50 <strcmp@plt+0x2b6b8>
  413f85:	mov    ecx,eax
  413f87:	xor    eax,eax
  413f89:	test   ecx,ecx
  413f8b:	setne  al
  413f8e:	add    rsp,0x8
  413f92:	ret    
  413f93:	xor    eax,eax
  413f95:	ret    
  413f96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413fa0:	mov    rdi,QWORD PTR [rdi+0x18]
  413fa4:	jmp    42f270 <strcmp@plt+0x2bad8>
  413fa9:	nop    DWORD PTR [rax+0x0]
  413fb0:	test   rsi,rsi
  413fb3:	je     413fd3 <strcmp@plt+0x1083b>
  413fb5:	push   rax
  413fb6:	mov    rdx,rsi
  413fb9:	mov    rdi,QWORD PTR [rdi+0x20]
  413fbd:	mov    rsi,QWORD PTR [rsi]
  413fc0:	call   42ee50 <strcmp@plt+0x2b6b8>
  413fc5:	mov    ecx,eax
  413fc7:	xor    eax,eax
  413fc9:	test   ecx,ecx
  413fcb:	setne  al
  413fce:	add    rsp,0x8
  413fd2:	ret    
  413fd3:	xor    eax,eax
  413fd5:	ret    
  413fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413fe0:	mov    rdi,QWORD PTR [rdi+0x20]
  413fe4:	jmp    42f270 <strcmp@plt+0x2bad8>
  413fe9:	nop    DWORD PTR [rax+0x0]
  413ff0:	push   rbp
  413ff1:	push   r15
  413ff3:	push   r14
  413ff5:	push   r13
  413ff7:	push   r12
  413ff9:	push   rbx
  413ffa:	sub    rsp,0x828
  414001:	mov    ebx,esi
  414003:	mov    r15,rdi
  414006:	cmp    esi,0x5
  414009:	jl     41401f <strcmp@plt+0x10887>
  41400b:	lea    rax,[rip+0x50dae]        # 464dc0 <strcmp@plt+0x61628>
  414012:	mov    eax,DWORD PTR [rax]
  414014:	add    eax,0x4
  414017:	cmp    eax,ebx
  414019:	jl     4142c1 <strcmp@plt+0x10b29>
  41401f:	lea    rsi,[rip+0x329ba]        # 4469e0 <strcmp@plt+0x43248>
  414026:	xor    r12d,r12d
  414029:	mov    edi,ebx
  41402b:	xor    eax,eax
  41402d:	call   42e520 <strcmp@plt+0x2ad88>
  414032:	call   42b980 <strcmp@plt+0x281e8>
  414037:	mov    rbp,rax
  41403a:	mov    rax,QWORD PTR [r15+0x18]
  41403e:	mov    rdi,QWORD PTR [rax]
  414041:	mov    rsi,rbp
  414044:	call   42baa0 <strcmp@plt+0x28308>
  414049:	mov    rax,QWORD PTR [r15+0x18]
  41404d:	mov    rdi,QWORD PTR [rax+0x8]
  414051:	mov    QWORD PTR [rsp],rbp
  414055:	mov    rsi,rbp
  414058:	call   42baa0 <strcmp@plt+0x28308>
  41405d:	mov    rax,QWORD PTR [r15+0x18]
  414061:	mov    rcx,QWORD PTR [rax+0x10]
  414065:	mov    rcx,QWORD PTR [rcx]
  414068:	cmp    DWORD PTR [rcx],0x0
  41406b:	je     4140c4 <strcmp@plt+0x1092c>
  41406d:	mov    r14d,0x3
  414073:	xor    ebp,ebp
  414075:	jmp    414091 <strcmp@plt+0x108f9>
  414077:	nop    WORD PTR [rax+rax*1+0x0]
  414080:	inc    ebp
  414082:	mov    rcx,QWORD PTR [rax+0x10]
  414086:	mov    rcx,QWORD PTR [rcx]
  414089:	add    r12d,0x2
  41408d:	cmp    ebp,DWORD PTR [rcx]
  41408f:	je     4140c4 <strcmp@plt+0x1092c>
  414091:	mov    rdx,QWORD PTR [rcx+0x10]
  414095:	mov    esi,ebp
  414097:	shr    esi,0x4
  41409a:	mov    edi,r12d
  41409d:	and    dil,0x1e
  4140a1:	shlx   edi,r14d,edi
  4140a6:	test   DWORD PTR [rdx+rsi*4],edi
  4140a9:	jne    414080 <strcmp@plt+0x108e8>
  4140ab:	mov    rax,QWORD PTR [rcx+0x20]
  4140af:	mov    ecx,ebp
  4140b1:	mov    rdi,QWORD PTR [rax+rcx*8]
  4140b5:	mov    rsi,QWORD PTR [rsp]
  4140b9:	call   42baa0 <strcmp@plt+0x28308>
  4140be:	mov    rax,QWORD PTR [r15+0x18]
  4140c2:	jmp    414080 <strcmp@plt+0x108e8>
  4140c4:	mov    rcx,QWORD PTR [rax+0x18]
  4140c8:	mov    rcx,QWORD PTR [rcx]
  4140cb:	cmp    DWORD PTR [rcx],0x0
  4140ce:	je     414124 <strcmp@plt+0x1098c>
  4140d0:	xor    r12d,r12d
  4140d3:	mov    r14d,0x3
  4140d9:	xor    ebp,ebp
  4140db:	jmp    4140f1 <strcmp@plt+0x10959>
  4140dd:	nop    DWORD PTR [rax]
  4140e0:	inc    ebp
  4140e2:	mov    rcx,QWORD PTR [rax+0x18]
  4140e6:	mov    rcx,QWORD PTR [rcx]
  4140e9:	add    r12d,0x2
  4140ed:	cmp    ebp,DWORD PTR [rcx]
  4140ef:	je     414124 <strcmp@plt+0x1098c>
  4140f1:	mov    rdx,QWORD PTR [rcx+0x10]
  4140f5:	mov    esi,ebp
  4140f7:	shr    esi,0x4
  4140fa:	mov    edi,r12d
  4140fd:	and    dil,0x1e
  414101:	shlx   edi,r14d,edi
  414106:	test   DWORD PTR [rdx+rsi*4],edi
  414109:	jne    4140e0 <strcmp@plt+0x10948>
  41410b:	mov    rax,QWORD PTR [rcx+0x20]
  41410f:	mov    ecx,ebp
  414111:	mov    rdi,QWORD PTR [rax+rcx*8]
  414115:	mov    rsi,QWORD PTR [rsp]
  414119:	call   42baa0 <strcmp@plt+0x28308>
  41411e:	mov    rax,QWORD PTR [r15+0x18]
  414122:	jmp    4140e0 <strcmp@plt+0x10948>
  414124:	mov    rdi,QWORD PTR [rax+0x20]
  414128:	mov    rbp,QWORD PTR [rsp]
  41412c:	mov    rsi,rbp
  41412f:	call   42baa0 <strcmp@plt+0x28308>
  414134:	mov    rax,QWORD PTR [r15+0x18]
  414138:	mov    rdi,QWORD PTR [rax+0x20]
  41413c:	mov    rsi,rbp
  41413f:	call   42baa0 <strcmp@plt+0x28308>
  414144:	mov    rax,QWORD PTR [rbp+0x8]
  414148:	cmp    rax,rbp
  41414b:	je     4142a3 <strcmp@plt+0x10b0b>
  414151:	lea    r15,[rip+0x328cb]        # 446a23 <strcmp@plt+0x4328b>
  414158:	jmp    414173 <strcmp@plt+0x109db>
  41415a:	nop    WORD PTR [rax+rax*1+0x0]
  414160:	mov    rax,QWORD PTR [rsp+0x8]
  414165:	mov    rax,QWORD PTR [rax+0x8]
  414169:	cmp    rax,QWORD PTR [rsp]
  41416d:	je     4142a3 <strcmp@plt+0x10b0b>
  414173:	mov    QWORD PTR [rsp+0x8],rax
  414178:	mov    rax,QWORD PTR [rax+0x10]
  41417c:	mov    r14,QWORD PTR [rax]
  41417f:	test   r14,r14
  414182:	je     414160 <strcmp@plt+0x109c8>
  414184:	xor    ebp,ebp
  414186:	cmp    QWORD PTR [r14+0x8],0x0
  41418b:	jne    4141bf <strcmp@plt+0x10a27>
  41418d:	jmp    414260 <strcmp@plt+0x10ac8>
  414192:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41419c:	nop    DWORD PTR [rax+0x0]
  4141a0:	test   rcx,rcx
  4141a3:	je     41428a <strcmp@plt+0x10af2>
  4141a9:	mov    rax,rcx
  4141ac:	mov    r14,rax
  4141af:	test   rax,rax
  4141b2:	je     414160 <strcmp@plt+0x109c8>
  4141b4:	cmp    QWORD PTR [r14+0x8],0x0
  4141b9:	je     414260 <strcmp@plt+0x10ac8>
  4141bf:	mov    rax,QWORD PTR [r14+0x28]
  4141c3:	mov    r13,QWORD PTR [rax]
  4141c6:	test   r13,r13
  4141c9:	je     414260 <strcmp@plt+0x10ac8>
  4141cf:	xor    r12d,r12d
  4141d2:	cmp    QWORD PTR [r13+0x8],0x0
  4141d7:	jne    4141f7 <strcmp@plt+0x10a5f>
  4141d9:	jmp    41422c <strcmp@plt+0x10a94>
  4141db:	nop    DWORD PTR [rax+rax*1+0x0]
  4141e0:	test   rcx,rcx
  4141e3:	je     414248 <strcmp@plt+0x10ab0>
  4141e5:	mov    rax,rcx
  4141e8:	mov    r13,rax
  4141eb:	test   rax,rax
  4141ee:	je     414260 <strcmp@plt+0x10ac8>
  4141f0:	cmp    QWORD PTR [r13+0x8],0x0
  4141f5:	je     41422c <strcmp@plt+0x10a94>
  4141f7:	mov    rax,QWORD PTR [r13+0x28]
  4141fb:	test   rax,rax
  4141fe:	je     41422c <strcmp@plt+0x10a94>
  414200:	cmp    ebx,0x5
  414203:	jl     414215 <strcmp@plt+0x10a7d>
  414205:	lea    rcx,[rip+0x50bb4]        # 464dc0 <strcmp@plt+0x61628>
  41420c:	mov    ecx,DWORD PTR [rcx]
  41420e:	add    ecx,0x4
  414211:	cmp    ecx,ebx
  414213:	jl     41422c <strcmp@plt+0x10a94>
  414215:	mov    rdi,QWORD PTR [rax]
  414218:	call   422e20 <strcmp@plt+0x1f688>
  41421d:	mov    edi,ebx
  41421f:	mov    rsi,r15
  414222:	mov    rdx,rax
  414225:	xor    eax,eax
  414227:	call   42e520 <strcmp@plt+0x2ad88>
  41422c:	mov    rax,QWORD PTR [r13+0x10]
  414230:	mov    rcx,QWORD PTR [r13+0x18]
  414234:	test   rax,rax
  414237:	je     4141e0 <strcmp@plt+0x10a48>
  414239:	test   rcx,rcx
  41423c:	je     4141e8 <strcmp@plt+0x10a50>
  41423e:	mov    QWORD PTR [rsp+r12*8+0x10],rcx
  414243:	inc    r12
  414246:	jmp    4141e8 <strcmp@plt+0x10a50>
  414248:	test   r12,r12
  41424b:	je     414260 <strcmp@plt+0x10ac8>
  41424d:	mov    rax,QWORD PTR [rsp+r12*8+0x8]
  414252:	dec    r12
  414255:	jmp    4141e8 <strcmp@plt+0x10a50>
  414257:	nop    WORD PTR [rax+rax*1+0x0]
  414260:	mov    rax,QWORD PTR [r14+0x10]
  414264:	mov    rcx,QWORD PTR [r14+0x18]
  414268:	test   rax,rax
  41426b:	je     4141a0 <strcmp@plt+0x10a08>
  414271:	test   rcx,rcx
  414274:	je     4141ac <strcmp@plt+0x10a14>
  41427a:	mov    QWORD PTR [rsp+rbp*8+0x420],rcx
  414282:	inc    rbp
  414285:	jmp    4141ac <strcmp@plt+0x10a14>
  41428a:	test   rbp,rbp
  41428d:	je     414160 <strcmp@plt+0x109c8>
  414293:	mov    rax,QWORD PTR [rsp+rbp*8+0x418]
  41429b:	dec    rbp
  41429e:	jmp    4141ac <strcmp@plt+0x10a14>
  4142a3:	mov    rdi,QWORD PTR [rsp]
  4142a7:	call   42bff0 <strcmp@plt+0x28858>
  4142ac:	cmp    ebx,0x5
  4142af:	jl     4142d3 <strcmp@plt+0x10b3b>
  4142b1:	lea    rax,[rip+0x50b08]        # 464dc0 <strcmp@plt+0x61628>
  4142b8:	mov    eax,DWORD PTR [rax]
  4142ba:	add    eax,0x4
  4142bd:	cmp    eax,ebx
  4142bf:	jge    4142d3 <strcmp@plt+0x10b3b>
  4142c1:	add    rsp,0x828
  4142c8:	pop    rbx
  4142c9:	pop    r12
  4142cb:	pop    r13
  4142cd:	pop    r14
  4142cf:	pop    r15
  4142d1:	pop    rbp
  4142d2:	ret    
  4142d3:	lea    rsi,[rip+0x30dd5]        # 4450af <strcmp@plt+0x41917>
  4142da:	mov    edi,ebx
  4142dc:	xor    eax,eax
  4142de:	add    rsp,0x828
  4142e5:	pop    rbx
  4142e6:	pop    r12
  4142e8:	pop    r13
  4142ea:	pop    r14
  4142ec:	pop    r15
  4142ee:	pop    rbp
  4142ef:	jmp    42e520 <strcmp@plt+0x2ad88>
  4142f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4142fe:	xchg   ax,ax
  414300:	push   rbp
  414301:	push   r15
  414303:	push   r14
  414305:	push   r13
  414307:	push   r12
  414309:	push   rbx
  41430a:	sub    rsp,0x858
  414311:	mov    ebx,esi
  414313:	mov    r15,rdi
  414316:	cmp    esi,0x5
  414319:	jl     41432f <strcmp@plt+0x10b97>
  41431b:	lea    rax,[rip+0x50a9e]        # 464dc0 <strcmp@plt+0x61628>
  414322:	mov    eax,DWORD PTR [rax]
  414324:	add    eax,0x4
  414327:	cmp    eax,ebx
  414329:	jl     4146fe <strcmp@plt+0x10f66>
  41432f:	lea    rsi,[rip+0x326f6]        # 446a2c <strcmp@plt+0x43294>
  414336:	xor    r12d,r12d
  414339:	mov    edi,ebx
  41433b:	xor    eax,eax
  41433d:	call   42e520 <strcmp@plt+0x2ad88>
  414342:	call   42b980 <strcmp@plt+0x281e8>
  414347:	mov    rbp,rax
  41434a:	mov    rax,QWORD PTR [r15+0x20]
  41434e:	mov    rdi,QWORD PTR [rax]
  414351:	mov    rsi,rbp
  414354:	call   42baa0 <strcmp@plt+0x28308>
  414359:	mov    rax,QWORD PTR [r15+0x20]
  41435d:	mov    rdi,QWORD PTR [rax+0x8]
  414361:	mov    QWORD PTR [rsp+0x8],rbp
  414366:	mov    rsi,rbp
  414369:	call   42baa0 <strcmp@plt+0x28308>
  41436e:	mov    rax,QWORD PTR [r15+0x20]
  414372:	mov    rcx,QWORD PTR [rax+0x10]
  414376:	mov    rcx,QWORD PTR [rcx]
  414379:	cmp    DWORD PTR [rcx],0x0
  41437c:	je     4143d5 <strcmp@plt+0x10c3d>
  41437e:	mov    r14d,0x3
  414384:	xor    ebp,ebp
  414386:	jmp    4143a1 <strcmp@plt+0x10c09>
  414388:	nop    DWORD PTR [rax+rax*1+0x0]
  414390:	inc    ebp
  414392:	mov    rcx,QWORD PTR [rax+0x10]
  414396:	mov    rcx,QWORD PTR [rcx]
  414399:	add    r12d,0x2
  41439d:	cmp    ebp,DWORD PTR [rcx]
  41439f:	je     4143d5 <strcmp@plt+0x10c3d>
  4143a1:	mov    rdx,QWORD PTR [rcx+0x10]
  4143a5:	mov    esi,ebp
  4143a7:	shr    esi,0x4
  4143aa:	mov    edi,r12d
  4143ad:	and    dil,0x1e
  4143b1:	shlx   edi,r14d,edi
  4143b6:	test   DWORD PTR [rdx+rsi*4],edi
  4143b9:	jne    414390 <strcmp@plt+0x10bf8>
  4143bb:	mov    rax,QWORD PTR [rcx+0x20]
  4143bf:	mov    ecx,ebp
  4143c1:	mov    rdi,QWORD PTR [rax+rcx*8]
  4143c5:	mov    rsi,QWORD PTR [rsp+0x8]
  4143ca:	call   42baa0 <strcmp@plt+0x28308>
  4143cf:	mov    rax,QWORD PTR [r15+0x20]
  4143d3:	jmp    414390 <strcmp@plt+0x10bf8>
  4143d5:	mov    rcx,QWORD PTR [rax+0x18]
  4143d9:	mov    rcx,QWORD PTR [rcx]
  4143dc:	cmp    DWORD PTR [rcx],0x0
  4143df:	je     414435 <strcmp@plt+0x10c9d>
  4143e1:	xor    r12d,r12d
  4143e4:	mov    r14d,0x3
  4143ea:	xor    ebp,ebp
  4143ec:	jmp    414401 <strcmp@plt+0x10c69>
  4143ee:	xchg   ax,ax
  4143f0:	inc    ebp
  4143f2:	mov    rcx,QWORD PTR [rax+0x18]
  4143f6:	mov    rcx,QWORD PTR [rcx]
  4143f9:	add    r12d,0x2
  4143fd:	cmp    ebp,DWORD PTR [rcx]
  4143ff:	je     414435 <strcmp@plt+0x10c9d>
  414401:	mov    rdx,QWORD PTR [rcx+0x10]
  414405:	mov    esi,ebp
  414407:	shr    esi,0x4
  41440a:	mov    edi,r12d
  41440d:	and    dil,0x1e
  414411:	shlx   edi,r14d,edi
  414416:	test   DWORD PTR [rdx+rsi*4],edi
  414419:	jne    4143f0 <strcmp@plt+0x10c58>
  41441b:	mov    rax,QWORD PTR [rcx+0x20]
  41441f:	mov    ecx,ebp
  414421:	mov    rdi,QWORD PTR [rax+rcx*8]
  414425:	mov    rsi,QWORD PTR [rsp+0x8]
  41442a:	call   42baa0 <strcmp@plt+0x28308>
  41442f:	mov    rax,QWORD PTR [r15+0x20]
  414433:	jmp    4143f0 <strcmp@plt+0x10c58>
  414435:	mov    rdi,QWORD PTR [rax+0x20]
  414439:	mov    rbp,QWORD PTR [rsp+0x8]
  41443e:	mov    rsi,rbp
  414441:	call   42baa0 <strcmp@plt+0x28308>
  414446:	mov    rax,QWORD PTR [r15+0x20]
  41444a:	mov    rdi,QWORD PTR [rax+0x20]
  41444e:	mov    rsi,rbp
  414451:	call   42baa0 <strcmp@plt+0x28308>
  414456:	mov    rax,QWORD PTR [rbp+0x8]
  41445a:	cmp    rax,rbp
  41445d:	je     4146df <strcmp@plt+0x10f47>
  414463:	lea    r12,[rip+0x3263c]        # 446aa6 <strcmp@plt+0x4330e>
  41446a:	lea    r13,[rip+0x5094f]        # 464dc0 <strcmp@plt+0x61628>
  414471:	jmp    414494 <strcmp@plt+0x10cfc>
  414473:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41447d:	nop    DWORD PTR [rax]
  414480:	mov    rax,QWORD PTR [rsp+0x30]
  414485:	mov    rax,QWORD PTR [rax+0x8]
  414489:	cmp    rax,QWORD PTR [rsp+0x8]
  41448e:	je     4146df <strcmp@plt+0x10f47>
  414494:	mov    QWORD PTR [rsp+0x30],rax
  414499:	mov    rax,QWORD PTR [rax+0x10]
  41449d:	mov    rcx,QWORD PTR [rax]
  4144a0:	test   rcx,rcx
  4144a3:	je     414480 <strcmp@plt+0x10ce8>
  4144a5:	xor    eax,eax
  4144a7:	mov    QWORD PTR [rsp+0x10],rax
  4144ac:	cmp    QWORD PTR [rcx+0x8],0x0
  4144b1:	jne    4144df <strcmp@plt+0x10d47>
  4144b3:	jmp    414685 <strcmp@plt+0x10eed>
  4144b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4144c0:	test   rcx,rcx
  4144c3:	je     4146b9 <strcmp@plt+0x10f21>
  4144c9:	mov    rax,rcx
  4144cc:	mov    rcx,rax
  4144cf:	test   rax,rax
  4144d2:	je     414480 <strcmp@plt+0x10ce8>
  4144d4:	cmp    QWORD PTR [rcx+0x8],0x0
  4144d9:	je     414685 <strcmp@plt+0x10eed>
  4144df:	mov    QWORD PTR [rsp+0x38],rcx
  4144e4:	mov    rax,QWORD PTR [rcx+0x28]
  4144e8:	mov    rcx,QWORD PTR [rax]
  4144eb:	test   rcx,rcx
  4144ee:	je     414680 <strcmp@plt+0x10ee8>
  4144f4:	xor    eax,eax
  4144f6:	mov    QWORD PTR [rsp+0x18],rax
  4144fb:	jmp    414518 <strcmp@plt+0x10d80>
  4144fd:	nop    DWORD PTR [rax]
  414500:	test   rcx,rcx
  414503:	je     414656 <strcmp@plt+0x10ebe>
  414509:	mov    rax,rcx
  41450c:	mov    rcx,rax
  41450f:	test   rax,rax
  414512:	je     414680 <strcmp@plt+0x10ee8>
  414518:	mov    QWORD PTR [rsp+0x28],rcx
  41451d:	cmp    QWORD PTR [rcx+0x8],0x0
  414522:	je     414620 <strcmp@plt+0x10e88>
  414528:	mov    rax,QWORD PTR [rsp+0x28]
  41452d:	mov    rax,QWORD PTR [rax+0x28]
  414531:	mov    QWORD PTR [rsp+0x20],rax
  414536:	test   rax,rax
  414539:	je     414620 <strcmp@plt+0x10e88>
  41453f:	cmp    ebx,0x5
  414542:	jl     41454f <strcmp@plt+0x10db7>
  414544:	mov    eax,DWORD PTR [r13+0x0]
  414548:	add    eax,0x4
  41454b:	cmp    eax,ebx
  41454d:	jl     41458a <strcmp@plt+0x10df2>
  41454f:	mov    rbp,QWORD PTR [rsp+0x20]
  414554:	mov    rdi,QWORD PTR [rbp+0x0]
  414558:	call   422e20 <strcmp@plt+0x1f688>
  41455d:	mov    rcx,QWORD PTR [rbp+0x0]
  414561:	cmp    BYTE PTR [rcx+0x3c],0x0
  414565:	lea    rcx,[rip+0x3c2fd]        # 450869 <strcmp@plt+0x4d0d1>
  41456c:	lea    rdx,[rip+0x32528]        # 446a9b <strcmp@plt+0x43303>
  414573:	cmove  rcx,rdx
  414577:	mov    edi,ebx
  414579:	lea    rsi,[rip+0x324eb]        # 446a6b <strcmp@plt+0x432d3>
  414580:	mov    rdx,rax
  414583:	xor    eax,eax
  414585:	call   42e520 <strcmp@plt+0x2ad88>
  41458a:	mov    rax,QWORD PTR [rsp+0x20]
  41458f:	mov    rax,QWORD PTR [rax]
  414592:	mov    rax,QWORD PTR [rax+0x28]
  414596:	mov    r15,QWORD PTR [rax+0x8]
  41459a:	cmp    r15,rax
  41459d:	jne    4145c2 <strcmp@plt+0x10e2a>
  41459f:	jmp    414620 <strcmp@plt+0x10e88>
  4145a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4145ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4145b0:	mov    r15,QWORD PTR [r15+0x8]
  4145b4:	mov    rax,QWORD PTR [rsp+0x20]
  4145b9:	mov    rax,QWORD PTR [rax]
  4145bc:	cmp    r15,QWORD PTR [rax+0x28]
  4145c0:	je     414620 <strcmp@plt+0x10e88>
  4145c2:	mov    rbp,QWORD PTR [r15+0x10]
  4145c6:	cmp    DWORD PTR [rbp+0x18],0x0
  4145ca:	je     4145b0 <strcmp@plt+0x10e18>
  4145cc:	mov    r14,QWORD PTR [rbp+0x8]
  4145d0:	cmp    r14,rbp
  4145d3:	jne    414600 <strcmp@plt+0x10e68>
  4145d5:	jmp    4145b0 <strcmp@plt+0x10e18>
  4145d7:	nop    WORD PTR [rax+rax*1+0x0]
  4145e0:	mov    rdi,QWORD PTR [rax]
  4145e3:	call   422e20 <strcmp@plt+0x1f688>
  4145e8:	mov    edi,ebx
  4145ea:	mov    rsi,r12
  4145ed:	mov    rdx,rax
  4145f0:	xor    eax,eax
  4145f2:	call   42e520 <strcmp@plt+0x2ad88>
  4145f7:	mov    r14,QWORD PTR [r14+0x8]
  4145fb:	cmp    r14,rbp
  4145fe:	je     4145b0 <strcmp@plt+0x10e18>
  414600:	mov    rax,QWORD PTR [r14+0x10]
  414604:	cmp    ebx,0x5
  414607:	jl     4145e0 <strcmp@plt+0x10e48>
  414609:	mov    ecx,DWORD PTR [r13+0x0]
  41460d:	add    ecx,0x4
  414610:	cmp    ecx,ebx
  414612:	jge    4145e0 <strcmp@plt+0x10e48>
  414614:	jmp    4145f7 <strcmp@plt+0x10e5f>
  414616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414620:	mov    rcx,QWORD PTR [rsp+0x28]
  414625:	mov    rax,QWORD PTR [rcx+0x10]
  414629:	mov    rcx,QWORD PTR [rcx+0x18]
  41462d:	test   rax,rax
  414630:	je     414500 <strcmp@plt+0x10d68>
  414636:	test   rcx,rcx
  414639:	je     41450c <strcmp@plt+0x10d74>
  41463f:	mov    rdx,QWORD PTR [rsp+0x18]
  414644:	mov    QWORD PTR [rsp+rdx*8+0x40],rcx
  414649:	inc    rdx
  41464c:	mov    QWORD PTR [rsp+0x18],rdx
  414651:	jmp    41450c <strcmp@plt+0x10d74>
  414656:	cmp    QWORD PTR [rsp+0x18],0x0
  41465c:	je     414680 <strcmp@plt+0x10ee8>
  41465e:	mov    rcx,QWORD PTR [rsp+0x18]
  414663:	mov    rax,QWORD PTR [rsp+rcx*8+0x38]
  414668:	dec    rcx
  41466b:	mov    QWORD PTR [rsp+0x18],rcx
  414670:	jmp    41450c <strcmp@plt+0x10d74>
  414675:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41467f:	nop
  414680:	mov    rcx,QWORD PTR [rsp+0x38]
  414685:	mov    rax,QWORD PTR [rcx+0x10]
  414689:	mov    rcx,QWORD PTR [rcx+0x18]
  41468d:	test   rax,rax
  414690:	je     4144c0 <strcmp@plt+0x10d28>
  414696:	test   rcx,rcx
  414699:	je     4144cc <strcmp@plt+0x10d34>
  41469f:	mov    rdx,QWORD PTR [rsp+0x10]
  4146a4:	mov    QWORD PTR [rsp+rdx*8+0x450],rcx
  4146ac:	inc    rdx
  4146af:	mov    QWORD PTR [rsp+0x10],rdx
  4146b4:	jmp    4144cc <strcmp@plt+0x10d34>
  4146b9:	cmp    QWORD PTR [rsp+0x10],0x0
  4146bf:	je     414480 <strcmp@plt+0x10ce8>
  4146c5:	mov    rcx,QWORD PTR [rsp+0x10]
  4146ca:	mov    rax,QWORD PTR [rsp+rcx*8+0x448]
  4146d2:	dec    rcx
  4146d5:	mov    QWORD PTR [rsp+0x10],rcx
  4146da:	jmp    4144cc <strcmp@plt+0x10d34>
  4146df:	mov    rdi,QWORD PTR [rsp+0x8]
  4146e4:	call   42bff0 <strcmp@plt+0x28858>
  4146e9:	cmp    ebx,0x5
  4146ec:	jl     414710 <strcmp@plt+0x10f78>
  4146ee:	lea    rax,[rip+0x506cb]        # 464dc0 <strcmp@plt+0x61628>
  4146f5:	mov    eax,DWORD PTR [rax]
  4146f7:	add    eax,0x4
  4146fa:	cmp    eax,ebx
  4146fc:	jge    414710 <strcmp@plt+0x10f78>
  4146fe:	add    rsp,0x858
  414705:	pop    rbx
  414706:	pop    r12
  414708:	pop    r13
  41470a:	pop    r14
  41470c:	pop    r15
  41470e:	pop    rbp
  41470f:	ret    
  414710:	lea    rsi,[rip+0x30998]        # 4450af <strcmp@plt+0x41917>
  414717:	mov    edi,ebx
  414719:	xor    eax,eax
  41471b:	add    rsp,0x858
  414722:	pop    rbx
  414723:	pop    r12
  414725:	pop    r13
  414727:	pop    r14
  414729:	pop    r15
  41472b:	pop    rbp
  41472c:	jmp    42e520 <strcmp@plt+0x2ad88>
  414731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41473b:	nop    DWORD PTR [rax+rax*1+0x0]
  414740:	push   rbp
  414741:	push   r14
  414743:	push   rbx
  414744:	mov    ebp,esi
  414746:	mov    rbx,rdi
  414749:	mov    edi,0x8
  41474e:	call   431d60 <strcmp@plt+0x2e5c8>
  414753:	mov    r14,rax
  414756:	test   ebp,ebp
  414758:	je     41477f <strcmp@plt+0x10fe7>
  41475a:	mov    rdi,rbx
  41475d:	call   422ef0 <strcmp@plt+0x1f758>
  414762:	cmp    ax,0x2
  414766:	mov    eax,0x20
  41476b:	mov    edx,0x80
  414770:	cmove  edx,eax
  414773:	mov    edi,ebp
  414775:	mov    rsi,rbx
  414778:	call   427820 <strcmp@plt+0x24088>
  41477d:	jmp    414787 <strcmp@plt+0x10fef>
  41477f:	mov    rdi,rbx
  414782:	call   423440 <strcmp@plt+0x1fca8>
  414787:	mov    QWORD PTR [r14],rax
  41478a:	mov    rax,r14
  41478d:	pop    rbx
  41478e:	pop    r14
  414790:	pop    rbp
  414791:	ret    
  414792:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41479c:	nop    DWORD PTR [rax+0x0]
  4147a0:	push   rbp
  4147a1:	push   r15
  4147a3:	push   r14
  4147a5:	push   r12
  4147a7:	push   rbx
  4147a8:	sub    rsp,0x10
  4147ac:	mov    r14,rcx
  4147af:	mov    r15d,edx
  4147b2:	mov    ebx,esi
  4147b4:	mov    rbp,rdi
  4147b7:	mov    edi,0x8
  4147bc:	call   431d60 <strcmp@plt+0x2e5c8>
  4147c1:	mov    r12,rax
  4147c4:	test   ebx,ebx
  4147c6:	je     4147ed <strcmp@plt+0x11055>
  4147c8:	mov    rdi,rbp
  4147cb:	call   422ef0 <strcmp@plt+0x1f758>
  4147d0:	cmp    ax,0x2
  4147d4:	mov    eax,0x20
  4147d9:	mov    edx,0x80
  4147de:	cmove  edx,eax
  4147e1:	mov    edi,ebx
  4147e3:	mov    rsi,rbp
  4147e6:	call   427820 <strcmp@plt+0x24088>
  4147eb:	jmp    4147f5 <strcmp@plt+0x1105d>
  4147ed:	mov    rdi,rbp
  4147f0:	call   423440 <strcmp@plt+0x1fca8>
  4147f5:	mov    rbp,rax
  4147f8:	vxorps xmm0,xmm0,xmm0
  4147fc:	vmovups XMMWORD PTR [rsp],xmm0
  414801:	mov    rdi,rax
  414804:	mov    esi,0x5a0
  414809:	mov    edx,r15d
  41480c:	mov    ecx,0x1
  414811:	xor    r8d,r8d
  414814:	mov    r9,r14
  414817:	call   4297c0 <strcmp@plt+0x26028>
  41481c:	mov    QWORD PTR [r12],rax
  414820:	mov    rdi,rbp
  414823:	call   422c90 <strcmp@plt+0x1f4f8>
  414828:	mov    rax,r12
  41482b:	add    rsp,0x10
  41482f:	pop    rbx
  414830:	pop    r12
  414832:	pop    r14
  414834:	pop    r15
  414836:	pop    rbp
  414837:	ret    
  414838:	nop    DWORD PTR [rax+rax*1+0x0]
  414840:	test   rdi,rdi
  414843:	je     41485a <strcmp@plt+0x110c2>
  414845:	push   rbx
  414846:	mov    rbx,rdi
  414849:	mov    rdi,QWORD PTR [rdi]
  41484c:	call   422c90 <strcmp@plt+0x1f4f8>
  414851:	mov    rdi,rbx
  414854:	pop    rbx
  414855:	jmp    403790 <free@plt>
  41485a:	ret    
  41485b:	nop    DWORD PTR [rax+rax*1+0x0]
  414860:	test   rdi,rdi
  414863:	je     41487a <strcmp@plt+0x110e2>
  414865:	push   rbx
  414866:	mov    rbx,rdi
  414869:	mov    rdi,QWORD PTR [rdi]
  41486c:	call   429ad0 <strcmp@plt+0x26338>
  414871:	mov    rdi,rbx
  414874:	pop    rbx
  414875:	jmp    403790 <free@plt>
  41487a:	ret    
  41487b:	nop    DWORD PTR [rax+rax*1+0x0]
  414880:	mov    edi,0x28
  414885:	jmp    431d60 <strcmp@plt+0x2e5c8>
  41488a:	nop    WORD PTR [rax+rax*1+0x0]
  414890:	push   rbp
  414891:	push   rbx
  414892:	push   rax
  414893:	mov    rax,QWORD PTR [rdi+0x8]
  414897:	cmp    rax,QWORD PTR [rip+0x4f6ea]        # 463f88 <strcmp@plt+0x607f0>
  41489e:	jne    4148f4 <strcmp@plt+0x1115c>
  4148a0:	mov    rbx,rdi
  4148a3:	xor    ebp,ebp
  4148a5:	xor    eax,eax
  4148a7:	call   42ea00 <strcmp@plt+0x2b268>
  4148ac:	mov    QWORD PTR [rbx+0x18],rax
  4148b0:	xor    eax,eax
  4148b2:	call   42ea00 <strcmp@plt+0x2b268>
  4148b7:	mov    QWORD PTR [rbx+0x20],rax
  4148bb:	test   rax,rax
  4148be:	je     4148eb <strcmp@plt+0x11153>
  4148c0:	cmp    QWORD PTR [rbx+0x18],0x0
  4148c5:	je     4148eb <strcmp@plt+0x11153>
  4148c7:	lea    rax,[rip+0x504f2]        # 464dc0 <strcmp@plt+0x61628>
  4148ce:	mov    ebp,0x1
  4148d3:	cmp    DWORD PTR [rax],0x0
  4148d6:	jle    4148eb <strcmp@plt+0x11153>
  4148d8:	lea    rsi,[rip+0x32b4b]        # 44742a <strcmp@plt+0x43c92>
  4148df:	mov    edi,0x5
  4148e4:	xor    eax,eax
  4148e6:	call   42e520 <strcmp@plt+0x2ad88>
  4148eb:	mov    eax,ebp
  4148ed:	add    rsp,0x8
  4148f1:	pop    rbx
  4148f2:	pop    rbp
  4148f3:	ret    
  4148f4:	lea    rdi,[rip+0x32b56]        # 447451 <strcmp@plt+0x43cb9>
  4148fb:	lea    rsi,[rip+0x32b69]        # 44746b <strcmp@plt+0x43cd3>
  414902:	lea    rdx,[rip+0x32b73]        # 44747c <strcmp@plt+0x43ce4>
  414909:	call   431eb0 <strcmp@plt+0x2e718>
  41490e:	xchg   ax,ax
  414910:	push   rbx
  414911:	mov    rax,QWORD PTR [rdi+0x8]
  414915:	cmp    rax,QWORD PTR [rip+0x4f66c]        # 463f88 <strcmp@plt+0x607f0>
  41491c:	jne    414949 <strcmp@plt+0x111b1>
  41491e:	mov    rbx,rdi
  414921:	lea    rax,[rip+0x50498]        # 464dc0 <strcmp@plt+0x61628>
  414928:	cmp    DWORD PTR [rax],0x0
  41492b:	jle    414940 <strcmp@plt+0x111a8>
  41492d:	lea    rsi,[rip+0x3262c]        # 446f60 <strcmp@plt+0x437c8>
  414934:	mov    edi,0x5
  414939:	xor    eax,eax
  41493b:	call   42e520 <strcmp@plt+0x2ad88>
  414940:	mov    rdi,rbx
  414943:	pop    rbx
  414944:	jmp    403790 <free@plt>
  414949:	lea    rdi,[rip+0x32b01]        # 447451 <strcmp@plt+0x43cb9>
  414950:	lea    rsi,[rip+0x32b14]        # 44746b <strcmp@plt+0x43cd3>
  414957:	lea    rdx,[rip+0x32b1e]        # 44747c <strcmp@plt+0x43ce4>
  41495e:	call   431eb0 <strcmp@plt+0x2e718>
  414963:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41496d:	nop    DWORD PTR [rax]
  414970:	push   rbx
  414971:	mov    rax,QWORD PTR [rdi+0x8]
  414975:	cmp    rax,QWORD PTR [rip+0x4f60c]        # 463f88 <strcmp@plt+0x607f0>
  41497c:	jne    4149b2 <strcmp@plt+0x1121a>
  41497e:	mov    rbx,rdi
  414981:	mov    rdi,QWORD PTR [rdi+0x18]
  414985:	lea    rsi,[rip+0x1824]        # 4161b0 <strcmp@plt+0x12a18>
  41498c:	call   42ec10 <strcmp@plt+0x2b478>
  414991:	mov    rdi,QWORD PTR [rbx+0x20]
  414995:	lea    rsi,[rip+0x1824]        # 4161c0 <strcmp@plt+0x12a28>
  41499c:	call   42ec10 <strcmp@plt+0x2b478>
  4149a1:	mov    rdi,QWORD PTR [rbx+0x28]
  4149a5:	test   rdi,rdi
  4149a8:	je     4149b0 <strcmp@plt+0x11218>
  4149aa:	pop    rbx
  4149ab:	jmp    4309e0 <strcmp@plt+0x2d248>
  4149b0:	pop    rbx
  4149b1:	ret    
  4149b2:	lea    rdi,[rip+0x32a98]        # 447451 <strcmp@plt+0x43cb9>
  4149b9:	lea    rsi,[rip+0x32aab]        # 44746b <strcmp@plt+0x43cd3>
  4149c0:	lea    rdx,[rip+0x32ab5]        # 44747c <strcmp@plt+0x43ce4>
  4149c7:	call   431eb0 <strcmp@plt+0x2e718>
  4149cc:	nop    DWORD PTR [rax+0x0]
  4149d0:	push   r14
  4149d2:	push   rbx
  4149d3:	push   rax
  4149d4:	mov    rax,QWORD PTR [rdi+0x8]
  4149d8:	cmp    rax,QWORD PTR [rip+0x4f5a9]        # 463f88 <strcmp@plt+0x607f0>
  4149df:	jne    414a39 <strcmp@plt+0x112a1>
  4149e1:	mov    rbx,rdi
  4149e4:	lea    r14,[rip+0x503d5]        # 464dc0 <strcmp@plt+0x61628>
  4149eb:	cmp    DWORD PTR [r14],0x0
  4149ef:	jle    414a04 <strcmp@plt+0x1126c>
  4149f1:	lea    rsi,[rip+0x31758]        # 446150 <strcmp@plt+0x429b8>
  4149f8:	mov    edi,0x5
  4149fd:	xor    eax,eax
  4149ff:	call   42e520 <strcmp@plt+0x2ad88>
  414a04:	mov    rdi,rbx
  414a07:	mov    esi,0x5
  414a0c:	call   415f60 <strcmp@plt+0x127c8>
  414a11:	cmp    DWORD PTR [r14],0x0
  414a15:	jle    414a31 <strcmp@plt+0x11299>
  414a17:	lea    rsi,[rip+0x3255f]        # 446f7d <strcmp@plt+0x437e5>
  414a1e:	mov    edi,0x5
  414a23:	xor    eax,eax
  414a25:	add    rsp,0x8
  414a29:	pop    rbx
  414a2a:	pop    r14
  414a2c:	jmp    42e520 <strcmp@plt+0x2ad88>
  414a31:	add    rsp,0x8
  414a35:	pop    rbx
  414a36:	pop    r14
  414a38:	ret    
  414a39:	lea    rdi,[rip+0x32a11]        # 447451 <strcmp@plt+0x43cb9>
  414a40:	lea    rsi,[rip+0x32a24]        # 44746b <strcmp@plt+0x43cd3>
  414a47:	lea    rdx,[rip+0x32a2e]        # 44747c <strcmp@plt+0x43ce4>
  414a4e:	call   431eb0 <strcmp@plt+0x2e718>
  414a53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414a5d:	nop    DWORD PTR [rax]
  414a60:	push   rbp
  414a61:	push   r15
  414a63:	push   r14
  414a65:	push   r13
  414a67:	push   r12
  414a69:	push   rbx
  414a6a:	sub    rsp,0x128
  414a71:	mov    rax,QWORD PTR [rdi+0x8]
  414a75:	cmp    rax,QWORD PTR [rip+0x4f50c]        # 463f88 <strcmp@plt+0x607f0>
  414a7c:	jne    415949 <strcmp@plt+0x121b1>
  414a82:	mov    r14,rdx
  414a85:	mov    rbx,rsi
  414a88:	mov    r12,rdi
  414a8b:	mov    rdi,rsi
  414a8e:	call   420ac0 <strcmp@plt+0x1d328>
  414a93:	cmp    eax,0x8
  414a96:	jne    414b32 <strcmp@plt+0x1139a>
  414a9c:	mov    rdi,rbx
  414a9f:	call   420ae0 <strcmp@plt+0x1d348>
  414aa4:	test   BYTE PTR [rax],0x8
  414aa7:	jne    414b82 <strcmp@plt+0x113ea>
  414aad:	mov    rdi,rbx
  414ab0:	call   420b10 <strcmp@plt+0x1d378>
  414ab5:	cmp    eax,0x1
  414ab8:	jne    41536d <strcmp@plt+0x11bd5>
  414abe:	lea    rbp,[rsp+0x90]
  414ac6:	mov    rdi,rbx
  414ac9:	mov    rsi,rbp
  414acc:	call   433160 <strcmp@plt+0x2f9c8>
  414ad1:	movzx  esi,WORD PTR [rsp+0xd2]
  414ad9:	movzx  edx,WORD PTR [rsp+0xd0]
  414ae1:	lea    rcx,[rsp+0xb0]
  414ae9:	lea    r13,[rsp+0xe0]
  414af1:	mov    rdi,r13
  414af4:	mov    r8,rbp
  414af7:	call   435260 <strcmp@plt+0x31ac8>
  414afc:	mov    rdi,rbx
  414aff:	call   420ac0 <strcmp@plt+0x1d328>
  414b04:	mov    ebp,eax
  414b06:	lea    rax,[rip+0x502b3]        # 464dc0 <strcmp@plt+0x61628>
  414b0d:	cmp    DWORD PTR [rax],0x0
  414b10:	jle    414b3a <strcmp@plt+0x113a2>
  414b12:	mov    rdi,rbx
  414b15:	call   422570 <strcmp@plt+0x1edd8>
  414b1a:	lea    rsi,[rip+0x32551]        # 447072 <strcmp@plt+0x438da>
  414b21:	mov    edi,0x5
  414b26:	mov    rdx,rax
  414b29:	xor    eax,eax
  414b2b:	call   42e520 <strcmp@plt+0x2ad88>
  414b30:	jmp    414b3a <strcmp@plt+0x113a2>
  414b32:	mov    ebp,eax
  414b34:	mov    r13,r14
  414b37:	xor    r14d,r14d
  414b3a:	lea    eax,[rbp-0x1]
  414b3d:	cmp    eax,0x6
  414b40:	ja     414e3c <strcmp@plt+0x116a4>
  414b46:	lea    rcx,[rip+0x32267]        # 446db4 <strcmp@plt+0x4361c>
  414b4d:	movsxd rax,DWORD PTR [rcx+rax*4]
  414b51:	add    rax,rcx
  414b54:	jmp    rax
  414b56:	lea    rax,[rip+0x50263]        # 464dc0 <strcmp@plt+0x61628>
  414b5d:	mov    eax,DWORD PTR [rax]
  414b5f:	cmp    eax,0x3
  414b62:	jl     415352 <strcmp@plt+0x11bba>
  414b68:	lea    rsi,[rip+0x3252a]        # 447099 <strcmp@plt+0x43901>
  414b6f:	mov    edi,0x7
  414b74:	mov    edx,ebp
  414b76:	xor    eax,eax
  414b78:	call   42e520 <strcmp@plt+0x2ad88>
  414b7d:	jmp    415349 <strcmp@plt+0x11bb1>
  414b82:	mov    rdi,rbx
  414b85:	call   422600 <strcmp@plt+0x1ee68>
  414b8a:	lea    rax,[rip+0x5022f]        # 464dc0 <strcmp@plt+0x61628>
  414b91:	cmp    DWORD PTR [rax],0x2
  414b94:	jl     41536d <strcmp@plt+0x11bd5>
  414b9a:	mov    rdi,rbx
  414b9d:	call   422600 <strcmp@plt+0x1ee68>
  414ba2:	lea    rsi,[rip+0x30ce5]        # 44588e <strcmp@plt+0x420f6>
  414ba9:	mov    edi,0x6
  414bae:	mov    edx,eax
  414bb0:	xor    eax,eax
  414bb2:	call   42e520 <strcmp@plt+0x2ad88>
  414bb7:	jmp    41536d <strcmp@plt+0x11bd5>
  414bbc:	vmovups ymm0,YMMWORD PTR [rbx]
  414bc0:	vmovups ymm1,YMMWORD PTR [rbx+0x20]
  414bc5:	vmovups YMMWORD PTR [rsp+0x70],ymm1
  414bcb:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  414bd1:	lea    rdi,[rsp+0x50]
  414bd6:	vzeroupper 
  414bd9:	call   4213d0 <strcmp@plt+0x1dc38>
  414bde:	mov    rbx,rax
  414be1:	lea    rax,[rip+0x5b9d0]        # 4705b8 <strcmp@plt+0x6ce20>
  414be8:	mov    rdi,QWORD PTR [rax]
  414beb:	mov    rsi,QWORD PTR [rbx+0x4]
  414bef:	call   432300 <strcmp@plt+0x2eb68>
  414bf4:	test   rax,rax
  414bf7:	je     415383 <strcmp@plt+0x11beb>
  414bfd:	mov    r15,rax
  414c00:	cmp    BYTE PTR [rbx+0x3],0x2
  414c04:	jb     414c19 <strcmp@plt+0x11481>
  414c06:	lea    rsi,[rip+0x32694]        # 4472a1 <strcmp@plt+0x43b09>
  414c0d:	mov    edi,0x4
  414c12:	xor    eax,eax
  414c14:	call   42e520 <strcmp@plt+0x2ad88>
  414c19:	xor    ebp,ebp
  414c1b:	xor    eax,eax
  414c1d:	call   4296d0 <strcmp@plt+0x25f38>
  414c22:	mov    rbx,rax
  414c25:	lea    rdi,[rsp+0x50]
  414c2a:	mov    rsi,rax
  414c2d:	call   421250 <strcmp@plt+0x1dab8>
  414c32:	cmp    eax,0x1
  414c35:	jne    415474 <strcmp@plt+0x11cdc>
  414c3b:	mov    rdi,r15
  414c3e:	call   4325a0 <strcmp@plt+0x2ee08>
  414c43:	mov    rbp,rax
  414c46:	mov    rdi,rax
  414c49:	call   436ff0 <strcmp@plt+0x33858>
  414c4e:	mov    rax,QWORD PTR [rax]
  414c51:	mov    QWORD PTR [rsp+0x18],rax
  414c56:	mov    rdi,QWORD PTR [rax+0x20]
  414c5a:	cmp    rdi,QWORD PTR [r12+0x28]
  414c5f:	je     414c79 <strcmp@plt+0x114e1>
  414c61:	call   430aa0 <strcmp@plt+0x2d308>
  414c66:	mov    rdi,rax
  414c69:	mov    rsi,rbx
  414c6c:	call   433f90 <strcmp@plt+0x307f8>
  414c71:	test   eax,eax
  414c73:	je     415407 <strcmp@plt+0x11c6f>
  414c79:	movzx  eax,BYTE PTR [rbx+0x3c]
  414c7d:	cmp    rax,0x5
  414c81:	ja     41591d <strcmp@plt+0x12185>
  414c87:	lea    rcx,[rip+0x32142]        # 446dd0 <strcmp@plt+0x43638>
  414c8e:	movsxd rax,DWORD PTR [rcx+rax*4]
  414c92:	add    rax,rcx
  414c95:	jmp    rax
  414c97:	mov    r13,rbp
  414c9a:	mov    rbp,QWORD PTR [rsp+0x18]
  414c9f:	mov    rdi,QWORD PTR [rbp+0x20]
  414ca3:	cmp    rdi,QWORD PTR [r12+0x28]
  414ca8:	je     4154cb <strcmp@plt+0x11d33>
  414cae:	call   430aa0 <strcmp@plt+0x2d308>
  414cb3:	mov    rdi,rbx
  414cb6:	mov    rsi,rax
  414cb9:	call   433f90 <strcmp@plt+0x307f8>
  414cbe:	test   eax,eax
  414cc0:	je     4154cb <strcmp@plt+0x11d33>
  414cc6:	mov    rdi,QWORD PTR [rbp+0x0]
  414cca:	call   422e20 <strcmp@plt+0x1f688>
  414ccf:	lea    rsi,[rip+0x32691]        # 447367 <strcmp@plt+0x43bcf>
  414cd6:	mov    edi,0x3
  414cdb:	mov    rdx,rax
  414cde:	xor    eax,eax
  414ce0:	call   42e520 <strcmp@plt+0x2ad88>
  414ce5:	cmp    DWORD PTR [rbp+0x10],0x1
  414ce9:	je     4158b8 <strcmp@plt+0x12120>
  414cef:	jmp    415829 <strcmp@plt+0x12091>
  414cf4:	vmovups ymm0,YMMWORD PTR [rbx]
  414cf8:	vmovups ymm1,YMMWORD PTR [rbx+0x20]
  414cfd:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  414d03:	vmovups YMMWORD PTR [rsp+0x70],ymm1
  414d09:	xor    eax,eax
  414d0b:	vzeroupper 
  414d0e:	call   422c80 <strcmp@plt+0x1f4e8>
  414d13:	mov    r15,rax
  414d16:	lea    rax,[rip+0x500a3]        # 464dc0 <strcmp@plt+0x61628>
  414d1d:	cmp    DWORD PTR [rax],0x0
  414d20:	jle    414d76 <strcmp@plt+0x115de>
  414d22:	mov    rdi,r13
  414d25:	call   422e20 <strcmp@plt+0x1f688>
  414d2a:	mov    QWORD PTR [rsp+0x10],r15
  414d2f:	mov    r15,rax
  414d32:	lea    rdi,[r13+0x20]
  414d36:	call   422e20 <strcmp@plt+0x1f688>
  414d3b:	mov    rbp,rax
  414d3e:	mov    rdi,r14
  414d41:	call   422e20 <strcmp@plt+0x1f688>
  414d46:	mov    rbx,rax
  414d49:	lea    rdi,[r14+0x20]
  414d4d:	call   422e20 <strcmp@plt+0x1f688>
  414d52:	lea    rsi,[rip+0x32436]        # 44718f <strcmp@plt+0x439f7>
  414d59:	mov    edi,0x5
  414d5e:	mov    rdx,r15
  414d61:	mov    r15,QWORD PTR [rsp+0x10]
  414d66:	mov    rcx,rbp
  414d69:	mov    r8,rbx
  414d6c:	mov    r9,rax
  414d6f:	xor    eax,eax
  414d71:	call   42e520 <strcmp@plt+0x2ad88>
  414d76:	lea    rbx,[rsp+0x50]
  414d7b:	mov    rdi,rbx
  414d7e:	call   4213d0 <strcmp@plt+0x1dc38>
  414d83:	mov    rbp,rax
  414d86:	mov    rdi,rbx
  414d89:	mov    rsi,r15
  414d8c:	call   420c80 <strcmp@plt+0x1d4e8>
  414d91:	cmp    eax,0x1
  414d94:	jne    415326 <strcmp@plt+0x11b8e>
  414d9a:	lea    rax,[rip+0x5001f]        # 464dc0 <strcmp@plt+0x61628>
  414da1:	cmp    DWORD PTR [rax],0x0
  414da4:	jle    414dc4 <strcmp@plt+0x1162c>
  414da6:	mov    rdi,r15
  414da9:	call   422e20 <strcmp@plt+0x1f688>
  414dae:	lea    rsi,[rip+0x31f1c]        # 446cd1 <strcmp@plt+0x43539>
  414db5:	mov    edi,0x5
  414dba:	mov    rdx,rax
  414dbd:	xor    eax,eax
  414dbf:	call   42e520 <strcmp@plt+0x2ad88>
  414dc4:	movzx  ecx,WORD PTR [rbp+0x0]
  414dc8:	movzx  eax,BYTE PTR [rbp+0x2]
  414dcc:	shl    eax,0x10
  414dcf:	or     eax,ecx
  414dd1:	test   al,0x2
  414dd3:	jne    4153b8 <strcmp@plt+0x11c20>
  414dd9:	test   al,0x1
  414ddb:	jne    4153d3 <strcmp@plt+0x11c3b>
  414de1:	lea    rdi,[rip+0xdea8]        # 422c90 <strcmp@plt+0x1f4f8>
  414de8:	call   42b9b0 <strcmp@plt+0x28218>
  414ded:	lea    rdi,[rsp+0x50]
  414df2:	mov    QWORD PTR [rsp+0x40],rax
  414df7:	mov    rsi,rax
  414dfa:	call   420cf0 <strcmp@plt+0x1d558>
  414dff:	cmp    BYTE PTR [rbp+0x3],0x0
  414e03:	je     4154aa <strcmp@plt+0x11d12>
  414e09:	add    r13,0x20
  414e0d:	mov    QWORD PTR [rsp+0x48],r13
  414e12:	lea    r13,[rsp+0x90]
  414e1a:	xor    eax,eax
  414e1c:	mov    QWORD PTR [rsp+0x20],rax
  414e21:	xor    ecx,ecx
  414e23:	mov    DWORD PTR [rsp+0x3c],0x0
  414e2b:	mov    QWORD PTR [rsp+0x8],rbp
  414e30:	mov    QWORD PTR [rsp+0x30],r12
  414e35:	mov    QWORD PTR [rsp+0x10],r15
  414e3a:	jmp    414e90 <strcmp@plt+0x116f8>
  414e3c:	lea    rax,[rip+0x4ff7d]        # 464dc0 <strcmp@plt+0x61628>
  414e43:	mov    eax,DWORD PTR [rax]
  414e45:	cmp    eax,0x3
  414e48:	jl     415352 <strcmp@plt+0x11bba>
  414e4e:	lea    rsi,[rip+0x32289]        # 4470de <strcmp@plt+0x43946>
  414e55:	jmp    414b6f <strcmp@plt+0x113d7>
  414e5a:	mov    rdi,rbx
  414e5d:	call   42baa0 <strcmp@plt+0x28308>
  414e62:	mov    r12,QWORD PTR [rsp+0x30]
  414e67:	mov    r15,QWORD PTR [rsp+0x10]
  414e6c:	mov    rbp,QWORD PTR [rsp+0x8]
  414e71:	mov    rbx,QWORD PTR [rsp+0x28]
  414e76:	lea    r13,[rsp+0x90]
  414e7e:	mov    ecx,DWORD PTR [rsp+0x18]
  414e82:	inc    ecx
  414e84:	movzx  eax,BYTE PTR [rbp+0x3]
  414e88:	cmp    ecx,eax
  414e8a:	jae    4154ac <strcmp@plt+0x11d14>
  414e90:	mov    DWORD PTR [rsp+0x18],ecx
  414e94:	xor    eax,eax
  414e96:	call   422c80 <strcmp@plt+0x1f4e8>
  414e9b:	mov    rbx,rax
  414e9e:	lea    rdi,[rsp+0x50]
  414ea3:	mov    rsi,rax
  414ea6:	call   420cb0 <strcmp@plt+0x1d518>
  414eab:	cmp    eax,0x1
  414eae:	jne    415542 <strcmp@plt+0x11daa>
  414eb4:	mov    rdi,QWORD PTR [r12+0x20]
  414eb9:	mov    rsi,rbx
  414ebc:	call   42f9b0 <strcmp@plt+0x2c218>
  414ec1:	mov    rsi,rbx
  414ec4:	test   rax,rax
  414ec7:	mov    QWORD PTR [rsp+0x28],rbx
  414ecc:	je     414f77 <strcmp@plt+0x117df>
  414ed2:	mov    r12,rax
  414ed5:	mov    edi,0x20
  414eda:	call   431d60 <strcmp@plt+0x2e5c8>
  414edf:	mov    rbx,rax
  414ee2:	mov    rax,QWORD PTR [rbp+0x4]
  414ee6:	mov    QWORD PTR [rbx],rax
  414ee9:	mov    rdi,r15
  414eec:	call   423440 <strcmp@plt+0x1fca8>
  414ef1:	mov    QWORD PTR [rbx+0x8],rax
  414ef5:	mov    rdi,QWORD PTR [rsp+0x48]
  414efa:	call   423440 <strcmp@plt+0x1fca8>
  414eff:	mov    QWORD PTR [rbx+0x10],rax
  414f03:	mov    rdi,QWORD PTR [rsp+0x40]
  414f08:	lea    rsi,[rip+0xe531]        # 423440 <strcmp@plt+0x1fca8>
  414f0f:	call   42ba20 <strcmp@plt+0x28288>
  414f14:	mov    QWORD PTR [rbx+0x18],rax
  414f18:	mov    rsi,QWORD PTR [r12+0x8]
  414f1d:	mov    rbp,QWORD PTR [rsi+0x8]
  414f21:	cmp    rbp,rsi
  414f24:	jne    414f42 <strcmp@plt+0x117aa>
  414f26:	jmp    414e5a <strcmp@plt+0x116c2>
  414f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  414f30:	mov    rbp,QWORD PTR [rbp+0x8]
  414f34:	mov    rsi,QWORD PTR [r12+0x8]
  414f39:	cmp    rbp,rsi
  414f3c:	je     414e5a <strcmp@plt+0x116c2>
  414f42:	mov    r15,QWORD PTR [rbp+0x10]
  414f46:	mov    rdi,QWORD PTR [r15+0x8]
  414f4a:	mov    rsi,QWORD PTR [rbx+0x8]
  414f4e:	call   423670 <strcmp@plt+0x1fed8>
  414f53:	test   eax,eax
  414f55:	jne    414f30 <strcmp@plt+0x11798>
  414f57:	mov    rdi,QWORD PTR [r15+0x10]
  414f5b:	mov    rsi,QWORD PTR [rbx+0x10]
  414f5f:	call   423670 <strcmp@plt+0x1fed8>
  414f64:	test   eax,eax
  414f66:	jne    414f30 <strcmp@plt+0x11798>
  414f68:	mov    rsi,QWORD PTR [r12+0x8]
  414f6d:	mov    rdi,rbp
  414f70:	call   42be10 <strcmp@plt+0x28678>
  414f75:	jmp    414f30 <strcmp@plt+0x11798>
  414f77:	mov    rbx,r12
  414f7a:	mov    rdi,QWORD PTR [r12+0x18]
  414f7f:	call   42f990 <strcmp@plt+0x2c1f8>
  414f84:	mov    rbp,rax
  414f87:	test   rax,rax
  414f8a:	jne    414f99 <strcmp@plt+0x11801>
  414f8c:	mov    rbp,QWORD PTR [r12+0x28]
  414f91:	mov    DWORD PTR [rsp+0x3c],0x1
  414f99:	mov    rdi,QWORD PTR [rbp+0x8]
  414f9d:	mov    al,BYTE PTR [rdi+0x3c]
  414fa0:	cmp    al,0x2
  414fa2:	mov    rbx,QWORD PTR [rsp+0x28]
  414fa7:	je     415014 <strcmp@plt+0x1187c>
  414fa9:	cmp    al,0x3
  414fab:	je     415093 <strcmp@plt+0x118fb>
  414fb1:	cmp    al,0x4
  414fb3:	jne    415122 <strcmp@plt+0x1198a>
  414fb9:	mov    rdi,rbp
  414fbc:	call   430aa0 <strcmp@plt+0x2d308>
  414fc1:	mov    rcx,QWORD PTR [rsp+0x8]
  414fc6:	mov    r8,QWORD PTR [rcx+0x4]
  414fca:	mov    rdi,rax
  414fcd:	mov    esi,0xf
  414fd2:	xor    edx,edx
  414fd4:	mov    ecx,0x1
  414fd9:	call   422090 <strcmp@plt+0x1e8f8>
  414fde:	mov    QWORD PTR [rsp+0x20],rax
  414fe3:	lea    rax,[rip+0x4fdd6]        # 464dc0 <strcmp@plt+0x61628>
  414fea:	cmp    DWORD PTR [rax],0x2
  414fed:	jl     4150f4 <strcmp@plt+0x1195c>
  414ff3:	mov    rdi,rbp
  414ff6:	call   430aa0 <strcmp@plt+0x2d308>
  414ffb:	mov    edi,0x6
  415000:	lea    rsi,[rip+0x321ca]        # 4471d1 <strcmp@plt+0x43a39>
  415007:	mov    rdx,rax
  41500a:	mov    ecx,0xf
  41500f:	jmp    4150ed <strcmp@plt+0x11955>
  415014:	call   42a140 <strcmp@plt+0x269a8>
  415019:	mov    rbx,rax
  41501c:	lea    r15,[rsp+0x50]
  415021:	mov    rdi,r15
  415024:	call   42e2b0 <strcmp@plt+0x2ab18>
  415029:	mov    rbp,QWORD PTR [rbx+0x8]
  41502d:	cmp    rbp,rbx
  415030:	je     415077 <strcmp@plt+0x118df>
  415032:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41503c:	nop    DWORD PTR [rax+0x0]
  415040:	mov    rdi,QWORD PTR [rbp+0x10]
  415044:	call   422fd0 <strcmp@plt+0x1f838>
  415049:	mov    rdi,r13
  41504c:	mov    esi,0x10f6
  415051:	mov    edx,0x10f6
  415056:	xor    ecx,ecx
  415058:	mov    r8,rax
  41505b:	call   435260 <strcmp@plt+0x31ac8>
  415060:	mov    rdi,r12
  415063:	mov    rsi,r15
  415066:	mov    rdx,r13
  415069:	call   407920 <strcmp@plt+0x4188>
  41506e:	mov    rbp,QWORD PTR [rbp+0x8]
  415072:	cmp    rbp,rbx
  415075:	jne    415040 <strcmp@plt+0x118a8>
  415077:	mov    rdi,rbx
  41507a:	call   42bff0 <strcmp@plt+0x28858>
  41507f:	mov    rbp,QWORD PTR [rsp+0x8]
  415084:	mov    rbx,QWORD PTR [rsp+0x28]
  415089:	mov    r15,QWORD PTR [rsp+0x10]
  41508e:	jmp    414e7e <strcmp@plt+0x116e6>
  415093:	mov    rdi,rbp
  415096:	call   430aa0 <strcmp@plt+0x2d308>
  41509b:	mov    rcx,QWORD PTR [rsp+0x8]
  4150a0:	mov    r8,QWORD PTR [rcx+0x4]
  4150a4:	mov    rdi,rax
  4150a7:	mov    esi,0x1
  4150ac:	xor    edx,edx
  4150ae:	mov    ecx,0x1
  4150b3:	call   422090 <strcmp@plt+0x1e8f8>
  4150b8:	mov    QWORD PTR [rsp+0x20],rax
  4150bd:	lea    rax,[rip+0x4fcfc]        # 464dc0 <strcmp@plt+0x61628>
  4150c4:	cmp    DWORD PTR [rax],0x2
  4150c7:	jl     4150f4 <strcmp@plt+0x1195c>
  4150c9:	mov    rdi,rbp
  4150cc:	call   430aa0 <strcmp@plt+0x2d308>
  4150d1:	mov    rdi,rax
  4150d4:	call   422e20 <strcmp@plt+0x1f688>
  4150d9:	mov    edi,0x6
  4150de:	lea    rsi,[rip+0x320ec]        # 4471d1 <strcmp@plt+0x43a39>
  4150e5:	mov    rdx,rax
  4150e8:	mov    ecx,0x1
  4150ed:	xor    eax,eax
  4150ef:	call   42e520 <strcmp@plt+0x2ad88>
  4150f4:	mov    rdi,r12
  4150f7:	mov    rbp,QWORD PTR [rsp+0x20]
  4150fc:	mov    rsi,rbp
  4150ff:	mov    rdx,r14
  415102:	call   407920 <strcmp@plt+0x4188>
  415107:	test   rbp,rbp
  41510a:	je     4151ad <strcmp@plt+0x11a15>
  415110:	mov    rdi,rbp
  415113:	call   42dd40 <strcmp@plt+0x2a5a8>
  415118:	mov    rbp,QWORD PTR [rsp+0x8]
  41511d:	jmp    414e7e <strcmp@plt+0x116e6>
  415122:	mov    edi,0x40
  415127:	call   431d60 <strcmp@plt+0x2e5c8>
  41512c:	mov    r12,rax
  41512f:	mov    rdi,rbx
  415132:	call   423440 <strcmp@plt+0x1fca8>
  415137:	mov    QWORD PTR [r12],rax
  41513b:	lea    rdi,[rip+0xf1e]        # 416060 <strcmp@plt+0x128c8>
  415142:	call   42b9b0 <strcmp@plt+0x28218>
  415147:	mov    QWORD PTR [r12+0x8],rax
  41514c:	mov    DWORD PTR [r12+0x10],0x0
  415155:	cmp    DWORD PTR [rsp+0x3c],0x1
  41515a:	jne    4151be <strcmp@plt+0x11a26>
  41515c:	mov    rax,QWORD PTR [rsp+0x30]
  415161:	mov    rbx,QWORD PTR [rax+0x28]
  415165:	mov    rdi,QWORD PTR [r12+0x28]
  41516a:	test   rdi,rdi
  41516d:	je     415174 <strcmp@plt+0x119dc>
  41516f:	call   42bff0 <strcmp@plt+0x28858>
  415174:	mov    QWORD PTR [r12+0x20],rbx
  415179:	mov    rdi,QWORD PTR [rbx+0x8]
  41517d:	call   42a140 <strcmp@plt+0x269a8>
  415182:	mov    QWORD PTR [r12+0x28],rax
  415187:	mov    QWORD PTR [r12+0x30],0x0
  415190:	mov    QWORD PTR [r12+0x18],0x0
  415199:	mov    DWORD PTR [r12+0x38],0x0
  4151a2:	mov    QWORD PTR [r12+0x10],0x1
  4151ab:	jmp    415204 <strcmp@plt+0x11a6c>
  4151ad:	xor    eax,eax
  4151af:	mov    QWORD PTR [rsp+0x20],rax
  4151b4:	mov    rbp,QWORD PTR [rsp+0x8]
  4151b9:	jmp    414e7e <strcmp@plt+0x116e6>
  4151be:	mov    rdi,QWORD PTR [r12+0x28]
  4151c3:	test   rdi,rdi
  4151c6:	je     4151cd <strcmp@plt+0x11a35>
  4151c8:	call   42bff0 <strcmp@plt+0x28858>
  4151cd:	mov    QWORD PTR [r12+0x20],rbp
  4151d2:	mov    rdi,QWORD PTR [rbp+0x8]
  4151d6:	call   42a140 <strcmp@plt+0x269a8>
  4151db:	mov    QWORD PTR [r12+0x28],rax
  4151e0:	mov    QWORD PTR [r12+0x30],0x0
  4151e9:	mov    DWORD PTR [r12+0x14],0x0
  4151f2:	mov    QWORD PTR [r12+0x18],0x0
  4151fb:	mov    DWORD PTR [r12+0x38],0x0
  415204:	mov    rbx,QWORD PTR [rsp+0x8]
  415209:	mov    edi,0x20
  41520e:	call   431d60 <strcmp@plt+0x2e5c8>
  415213:	mov    r15,rax
  415216:	mov    rax,QWORD PTR [rbx+0x4]
  41521a:	mov    QWORD PTR [r15],rax
  41521d:	mov    rdi,QWORD PTR [rsp+0x10]
  415222:	call   423440 <strcmp@plt+0x1fca8>
  415227:	mov    QWORD PTR [r15+0x8],rax
  41522b:	mov    rdi,QWORD PTR [rsp+0x48]
  415230:	call   423440 <strcmp@plt+0x1fca8>
  415235:	mov    QWORD PTR [r15+0x10],rax
  415239:	mov    rdi,QWORD PTR [rsp+0x40]
  41523e:	lea    rsi,[rip+0xe1fb]        # 423440 <strcmp@plt+0x1fca8>
  415245:	call   42ba20 <strcmp@plt+0x28288>
  41524a:	mov    QWORD PTR [r15+0x18],rax
  41524e:	mov    rsi,QWORD PTR [r12+0x8]
  415253:	mov    rbp,QWORD PTR [rsi+0x8]
  415257:	cmp    rbp,rsi
  41525a:	jne    41526e <strcmp@plt+0x11ad6>
  41525c:	jmp    4152a3 <strcmp@plt+0x11b0b>
  41525e:	xchg   ax,ax
  415260:	mov    rbp,QWORD PTR [rbp+0x8]
  415264:	mov    rsi,QWORD PTR [r12+0x8]
  415269:	cmp    rbp,rsi
  41526c:	je     4152a3 <strcmp@plt+0x11b0b>
  41526e:	mov    rbx,QWORD PTR [rbp+0x10]
  415272:	mov    rdi,QWORD PTR [rbx+0x8]
  415276:	mov    rsi,QWORD PTR [r15+0x8]
  41527a:	call   423670 <strcmp@plt+0x1fed8>
  41527f:	test   eax,eax
  415281:	jne    415260 <strcmp@plt+0x11ac8>
  415283:	mov    rdi,QWORD PTR [rbx+0x10]
  415287:	mov    rsi,QWORD PTR [r15+0x10]
  41528b:	call   423670 <strcmp@plt+0x1fed8>
  415290:	test   eax,eax
  415292:	jne    415260 <strcmp@plt+0x11ac8>
  415294:	mov    rsi,QWORD PTR [r12+0x8]
  415299:	mov    rdi,rbp
  41529c:	call   42be10 <strcmp@plt+0x28678>
  4152a1:	jmp    415260 <strcmp@plt+0x11ac8>
  4152a3:	mov    rdi,r15
  4152a6:	call   42baa0 <strcmp@plt+0x28308>
  4152ab:	mov    rbp,QWORD PTR [rsp+0x30]
  4152b0:	mov    rdi,QWORD PTR [rbp+0x20]
  4152b4:	mov    rsi,QWORD PTR [r12]
  4152b8:	mov    rdx,r12
  4152bb:	call   42ee50 <strcmp@plt+0x2b6b8>
  4152c0:	mov    edi,0x18
  4152c5:	call   431d90 <strcmp@plt+0x2e5f8>
  4152ca:	mov    rbx,rax
  4152cd:	mov    QWORD PTR [rax],r12
  4152d0:	mov    QWORD PTR [rax+0x8],rbp
  4152d4:	mov    rdi,r14
  4152d7:	call   423440 <strcmp@plt+0x1fca8>
  4152dc:	mov    QWORD PTR [rbx+0x10],rax
  4152e0:	mov    edi,0xc
  4152e5:	mov    rsi,rbp
  4152e8:	lea    rdx,[rip+0x1131]        # 416420 <strcmp@plt+0x12c88>
  4152ef:	mov    rcx,rbx
  4152f2:	lea    r8,[rip+0xfb7]        # 4162b0 <strcmp@plt+0x12b18>
  4152f9:	call   437190 <strcmp@plt+0x339f8>
  4152fe:	mov    rbx,rax
  415301:	lea    rax,[rip+0x5b2a8]        # 4705b0 <strcmp@plt+0x6ce18>
  415308:	mov    rdi,QWORD PTR [rax]
  41530b:	mov    rsi,r12
  41530e:	mov    r12,rbp
  415311:	mov    rdx,rbx
  415314:	call   437490 <strcmp@plt+0x33cf8>
  415319:	mov    rdi,rbx
  41531c:	call   416420 <strcmp@plt+0x12c88>
  415321:	jmp    414e67 <strcmp@plt+0x116cf>
  415326:	xor    ebx,ebx
  415328:	xor    edi,edi
  41532a:	call   42bff0 <strcmp@plt+0x28858>
  41532f:	mov    rdi,rbx
  415332:	call   422c90 <strcmp@plt+0x1f4f8>
  415337:	mov    rdi,r15
  41533a:	call   422c90 <strcmp@plt+0x1f4f8>
  41533f:	xor    ebp,ebp
  415341:	test   ebp,ebp
  415343:	jne    415484 <strcmp@plt+0x11cec>
  415349:	lea    rax,[rip+0x4fa70]        # 464dc0 <strcmp@plt+0x61628>
  415350:	mov    eax,DWORD PTR [rax]
  415352:	test   eax,eax
  415354:	jle    41536d <strcmp@plt+0x11bd5>
  415356:	lea    rsi,[rip+0x31dc3]        # 447120 <strcmp@plt+0x43988>
  41535d:	xor    ebx,ebx
  41535f:	mov    edi,0x5
  415364:	xor    eax,eax
  415366:	call   42e520 <strcmp@plt+0x2ad88>
  41536b:	jmp    41536f <strcmp@plt+0x11bd7>
  41536d:	xor    ebx,ebx
  41536f:	mov    eax,ebx
  415371:	add    rsp,0x128
  415378:	pop    rbx
  415379:	pop    r12
  41537b:	pop    r13
  41537d:	pop    r14
  41537f:	pop    r15
  415381:	pop    rbp
  415382:	ret    
  415383:	lea    rax,[rip+0x4fa36]        # 464dc0 <strcmp@plt+0x61628>
  41538a:	xor    ebp,ebp
  41538c:	cmp    DWORD PTR [rax],0x2
  41538f:	jl     41547c <strcmp@plt+0x11ce4>
  415395:	mov    rdx,QWORD PTR [rbx+0x4]
  415399:	lea    rsi,[rip+0x31eb9]        # 447259 <strcmp@plt+0x43ac1>
  4153a0:	xor    ebp,ebp
  4153a2:	mov    edi,0x6
  4153a7:	xor    eax,eax
  4153a9:	call   42e520 <strcmp@plt+0x2ad88>
  4153ae:	test   ebp,ebp
  4153b0:	jne    415484 <strcmp@plt+0x11cec>
  4153b6:	jmp    415349 <strcmp@plt+0x11bb1>
  4153b8:	xor    ebp,ebp
  4153ba:	lea    rax,[rip+0x4f9ff]        # 464dc0 <strcmp@plt+0x61628>
  4153c1:	cmp    DWORD PTR [rax],0x2
  4153c4:	jl     41547c <strcmp@plt+0x11ce4>
  4153ca:	lea    rsi,[rip+0x30fa2]        # 446373 <strcmp@plt+0x42bdb>
  4153d1:	jmp    4153ec <strcmp@plt+0x11c54>
  4153d3:	xor    ebp,ebp
  4153d5:	lea    rax,[rip+0x4f9e4]        # 464dc0 <strcmp@plt+0x61628>
  4153dc:	cmp    DWORD PTR [rax],0x2
  4153df:	jl     41547c <strcmp@plt+0x11ce4>
  4153e5:	lea    rsi,[rip+0x30fa2]        # 44638e <strcmp@plt+0x42bf6>
  4153ec:	xor    ebp,ebp
  4153ee:	mov    edi,0x6
  4153f3:	xor    eax,eax
  4153f5:	call   42e520 <strcmp@plt+0x2ad88>
  4153fa:	test   ebp,ebp
  4153fc:	jne    415484 <strcmp@plt+0x11cec>
  415402:	jmp    415349 <strcmp@plt+0x11bb1>
  415407:	lea    rax,[rip+0x4f9b2]        # 464dc0 <strcmp@plt+0x61628>
  41540e:	cmp    DWORD PTR [rax],0x2
  415411:	mov    rbp,QWORD PTR [rsp+0x18]
  415416:	jl     415453 <strcmp@plt+0x11cbb>
  415418:	mov    rdi,rbx
  41541b:	call   422e20 <strcmp@plt+0x1f688>
  415420:	mov    r14,rbx
  415423:	mov    rbx,rax
  415426:	mov    rdi,QWORD PTR [rbp+0x20]
  41542a:	call   430aa0 <strcmp@plt+0x2d308>
  41542f:	mov    rdi,rax
  415432:	call   422e20 <strcmp@plt+0x1f688>
  415437:	lea    rsi,[rip+0x31eb1]        # 4472ef <strcmp@plt+0x43b57>
  41543e:	mov    edi,0x6
  415443:	mov    rdx,rbx
  415446:	mov    rbx,r14
  415449:	mov    rcx,rax
  41544c:	xor    eax,eax
  41544e:	call   42e520 <strcmp@plt+0x2ad88>
  415453:	mov    rdi,QWORD PTR [rbp+0x0]
  415457:	call   422e20 <strcmp@plt+0x1f688>
  41545c:	lea    rsi,[rip+0x31edc]        # 44733f <strcmp@plt+0x43ba7>
  415463:	xor    ebp,ebp
  415465:	mov    edi,0x3
  41546a:	mov    rdx,rax
  41546d:	xor    eax,eax
  41546f:	call   42e520 <strcmp@plt+0x2ad88>
  415474:	mov    rdi,rbx
  415477:	call   429ad0 <strcmp@plt+0x26338>
  41547c:	test   ebp,ebp
  41547e:	je     415349 <strcmp@plt+0x11bb1>
  415484:	lea    rax,[rip+0x4f935]        # 464dc0 <strcmp@plt+0x61628>
  41548b:	mov    ebx,0x1
  415490:	cmp    DWORD PTR [rax],0x3
  415493:	jl     41536f <strcmp@plt+0x11bd7>
  415499:	lea    rsi,[rip+0x31cb5]        # 447155 <strcmp@plt+0x439bd>
  4154a0:	mov    edi,0x7
  4154a5:	jmp    415364 <strcmp@plt+0x11bcc>
  4154aa:	xor    ebx,ebx
  4154ac:	mov    rdi,QWORD PTR [rsp+0x40]
  4154b1:	call   42bff0 <strcmp@plt+0x28858>
  4154b6:	mov    rdi,r15
  4154b9:	call   422c90 <strcmp@plt+0x1f4f8>
  4154be:	mov    rdi,rbx
  4154c1:	call   422c90 <strcmp@plt+0x1f4f8>
  4154c6:	jmp    415937 <strcmp@plt+0x1219f>
  4154cb:	xor    eax,eax
  4154cd:	call   4309a0 <strcmp@plt+0x2d208>
  4154d2:	mov    rsi,rbx
  4154d5:	mov    rbx,rax
  4154d8:	mov    rdi,rax
  4154db:	call   4309c0 <strcmp@plt+0x2d228>
  4154e0:	mov    rdi,r12
  4154e3:	mov    rsi,rbx
  4154e6:	call   415de0 <strcmp@plt+0x12648>
  4154eb:	mov    rdi,QWORD PTR [rbp+0x28]
  4154ef:	test   rdi,rdi
  4154f2:	je     4154f9 <strcmp@plt+0x11d61>
  4154f4:	call   42bff0 <strcmp@plt+0x28858>
  4154f9:	mov    QWORD PTR [rbp+0x20],rbx
  4154fd:	mov    rdi,QWORD PTR [rbx+0x8]
  415501:	call   42a140 <strcmp@plt+0x269a8>
  415506:	mov    QWORD PTR [rbp+0x28],rax
  41550a:	mov    QWORD PTR [rbp+0x30],0x0
  415512:	mov    DWORD PTR [rbp+0x14],0x0
  415519:	mov    QWORD PTR [rbp+0x18],0x0
  415521:	mov    DWORD PTR [rbp+0x38],0x0
  415528:	lea    rax,[rip+0x5b089]        # 4705b8 <strcmp@plt+0x6ce20>
  41552f:	mov    rdi,QWORD PTR [rax]
  415532:	mov    rsi,r15
  415535:	call   4323d0 <strcmp@plt+0x2ec38>
  41553a:	mov    rdi,r13
  41553d:	jmp    415932 <strcmp@plt+0x1219a>
  415542:	mov    rdi,QWORD PTR [rsp+0x40]
  415547:	call   42bff0 <strcmp@plt+0x28858>
  41554c:	mov    rdi,QWORD PTR [rsp+0x20]
  415551:	test   rdi,rdi
  415554:	je     41532f <strcmp@plt+0x11b97>
  41555a:	call   42dd40 <strcmp@plt+0x2a5a8>
  41555f:	jmp    41532f <strcmp@plt+0x11b97>
  415564:	mov    QWORD PTR [rsp+0x8],rbx
  415569:	mov    QWORD PTR [rsp+0x30],r12
  41556e:	add    r13,0x20
  415572:	call   42b980 <strcmp@plt+0x281e8>
  415577:	test   r14,r14
  41557a:	lea    rdi,[r14+0x20]
  41557e:	cmove  rdi,r13
  415582:	mov    QWORD PTR [rsp+0x28],rax
  415587:	mov    rsi,rax
  41558a:	call   42baa0 <strcmp@plt+0x28308>
  41558f:	mov    rbx,QWORD PTR [rsp+0x18]
  415594:	mov    rax,QWORD PTR [rbx+0x8]
  415598:	mov    rcx,QWORD PTR [rax+0x8]
  41559c:	mov    QWORD PTR [rsp+0x10],rcx
  4155a1:	cmp    rcx,rax
  4155a4:	jne    4155c3 <strcmp@plt+0x11e2b>
  4155a6:	jmp    415700 <strcmp@plt+0x11f68>
  4155ab:	mov    rax,QWORD PTR [rsp+0x10]
  4155b0:	mov    rax,QWORD PTR [rax+0x8]
  4155b4:	mov    QWORD PTR [rsp+0x10],rax
  4155b9:	cmp    rax,QWORD PTR [rbx+0x8]
  4155bd:	je     415700 <strcmp@plt+0x11f68>
  4155c3:	mov    rax,QWORD PTR [rsp+0x28]
  4155c8:	mov    r12,QWORD PTR [rax+0x8]
  4155cc:	cmp    r12,rax
  4155cf:	je     4155ab <strcmp@plt+0x11e13>
  4155d1:	mov    rax,QWORD PTR [rsp+0x10]
  4155d6:	mov    r15,QWORD PTR [rax+0x10]
  4155da:	jmp    4155f1 <strcmp@plt+0x11e59>
  4155dc:	nop    DWORD PTR [rax+0x0]
  4155e0:	mov    r12,QWORD PTR [r12+0x8]
  4155e5:	cmp    r12,QWORD PTR [rsp+0x28]
  4155ea:	mov    rbx,QWORD PTR [rsp+0x18]
  4155ef:	je     4155ab <strcmp@plt+0x11e13>
  4155f1:	mov    rdi,QWORD PTR [r15+0x8]
  4155f5:	mov    rsi,QWORD PTR [r15+0x18]
  4155f9:	mov    rdx,QWORD PTR [rbx]
  4155fc:	call   421fc0 <strcmp@plt+0x1e828>
  415601:	mov    rbp,rax
  415604:	movzx  eax,WORD PTR [rax+0x24]
  415608:	mov    rcx,QWORD PTR [rbp+0x30]
  41560c:	mov    rdx,QWORD PTR [r15]
  41560f:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  415614:	mov    r14,QWORD PTR [r15+0x10]
  415618:	mov    rdi,QWORD PTR [rbx]
  41561b:	call   422dd0 <strcmp@plt+0x1f638>
  415620:	mov    rdi,rax
  415623:	call   423440 <strcmp@plt+0x1fca8>
  415628:	mov    r13,rax
  41562b:	mov    rdi,rax
  41562e:	mov    esi,0x1
  415633:	call   422e90 <strcmp@plt+0x1f6f8>
  415638:	mov    rdi,rbp
  41563b:	mov    esi,0x10f6
  415640:	mov    edx,0x10f6
  415645:	mov    rcx,r14
  415648:	mov    r8,r13
  41564b:	call   421d40 <strcmp@plt+0x1e5a8>
  415650:	mov    rdi,QWORD PTR [r12+0x10]
  415655:	call   422fd0 <strcmp@plt+0x1f838>
  41565a:	lea    rbx,[rsp+0x90]
  415662:	mov    rdi,rbx
  415665:	mov    esi,0x10f6
  41566a:	mov    edx,0x10f6
  41566f:	xor    ecx,ecx
  415671:	mov    r8,rax
  415674:	call   435260 <strcmp@plt+0x31ac8>
  415679:	mov    rdi,QWORD PTR [rsp+0x30]
  41567e:	mov    rsi,rbp
  415681:	mov    rdx,rbx
  415684:	call   407920 <strcmp@plt+0x4188>
  415689:	test   rbp,rbp
  41568c:	je     4155e0 <strcmp@plt+0x11e48>
  415692:	mov    rdi,rbp
  415695:	call   42dd40 <strcmp@plt+0x2a5a8>
  41569a:	jmp    4155e0 <strcmp@plt+0x11e48>
  41569f:	mov    r14,rbp
  4156a2:	mov    rbp,QWORD PTR [rsp+0x18]
  4156a7:	mov    DWORD PTR [rbp+0x14],0x1
  4156ae:	cmp    BYTE PTR [rbx+0x3e],0x0
  4156b2:	jne    41592f <strcmp@plt+0x12197>
  4156b8:	mov    rdi,QWORD PTR [rbp+0x18]
  4156bc:	test   rdi,rdi
  4156bf:	je     4156e2 <strcmp@plt+0x11f4a>
  4156c1:	call   430aa0 <strcmp@plt+0x2d308>
  4156c6:	mov    rdi,rax
  4156c9:	mov    rsi,rbx
  4156cc:	call   433f90 <strcmp@plt+0x307f8>
  4156d1:	test   eax,eax
  4156d3:	je     415927 <strcmp@plt+0x1218f>
  4156d9:	mov    rdi,QWORD PTR [rbp+0x18]
  4156dd:	call   4309e0 <strcmp@plt+0x2d248>
  4156e2:	xor    eax,eax
  4156e4:	call   4309a0 <strcmp@plt+0x2d208>
  4156e9:	mov    rsi,rbx
  4156ec:	mov    rbx,rax
  4156ef:	mov    rdi,rax
  4156f2:	call   4309c0 <strcmp@plt+0x2d228>
  4156f7:	mov    QWORD PTR [rbp+0x18],rbx
  4156fb:	jmp    41592f <strcmp@plt+0x12197>
  415700:	mov    rax,QWORD PTR [rsp+0x30]
  415705:	mov    rdi,QWORD PTR [rax+0x20]
  415709:	mov    rsi,QWORD PTR [rbx]
  41570c:	call   42f270 <strcmp@plt+0x2bad8>
  415711:	lea    rax,[rip+0x5ae98]        # 4705b0 <strcmp@plt+0x6ce18>
  415718:	mov    rsi,QWORD PTR [rax]
  41571b:	lea    rax,[rip+0x5ae96]        # 4705b8 <strcmp@plt+0x6ce20>
  415722:	mov    rdx,QWORD PTR [rax]
  415725:	mov    rdi,rbx
  415728:	call   437270 <strcmp@plt+0x33ad8>
  41572d:	mov    rdi,QWORD PTR [rbx]
  415730:	call   422c90 <strcmp@plt+0x1f4f8>
  415735:	mov    rdi,QWORD PTR [rbx+0x8]
  415739:	call   42bff0 <strcmp@plt+0x28858>
  41573e:	mov    rdi,QWORD PTR [rbx+0x18]
  415742:	call   4309e0 <strcmp@plt+0x2d248>
  415747:	mov    rdi,QWORD PTR [rbx+0x28]
  41574b:	call   42bff0 <strcmp@plt+0x28858>
  415750:	mov    rdi,rbx
  415753:	call   403790 <free@plt>
  415758:	mov    rdi,QWORD PTR [rsp+0x8]
  41575d:	call   429ad0 <strcmp@plt+0x26338>
  415762:	jmp    415937 <strcmp@plt+0x1219f>
  415767:	xor    eax,eax
  415769:	call   4309a0 <strcmp@plt+0x2d208>
  41576e:	mov    rsi,rbx
  415771:	mov    rbx,rax
  415774:	mov    rdi,rax
  415777:	call   4309c0 <strcmp@plt+0x2d228>
  41577c:	mov    rdi,r12
  41577f:	mov    rsi,rbx
  415782:	call   415de0 <strcmp@plt+0x12648>
  415787:	mov    rdi,rbx
  41578a:	call   430aa0 <strcmp@plt+0x2d308>
  41578f:	mov    rdi,r12
  415792:	mov    rbx,QWORD PTR [rsp+0x18]
  415797:	mov    rsi,rbx
  41579a:	mov    rdx,rax
  41579d:	call   4162d0 <strcmp@plt+0x12b38>
  4157a2:	mov    rdi,r12
  4157a5:	mov    rsi,rbx
  4157a8:	call   416210 <strcmp@plt+0x12a78>
  4157ad:	jmp    415937 <strcmp@plt+0x1219f>
  4157b2:	mov    r13,rbp
  4157b5:	mov    rbp,QWORD PTR [rsp+0x18]
  4157ba:	mov    rdi,QWORD PTR [rbp+0x0]
  4157be:	call   422e20 <strcmp@plt+0x1f688>
  4157c3:	lea    rsi,[rip+0x31be0]        # 4473aa <strcmp@plt+0x43c12>
  4157ca:	mov    edi,0x3
  4157cf:	mov    rdx,rax
  4157d2:	xor    eax,eax
  4157d4:	call   42e520 <strcmp@plt+0x2ad88>
  4157d9:	cmp    DWORD PTR [rbp+0x10],0x1
  4157dd:	jne    415829 <strcmp@plt+0x12091>
  4157df:	mov    rcx,QWORD PTR [rbp+0x28]
  4157e3:	mov    rax,QWORD PTR [rbp+0x30]
  4157e7:	cmp    DWORD PTR [rcx+0x18],0x0
  4157eb:	je     4158ad <strcmp@plt+0x12115>
  4157f1:	mov    rcx,QWORD PTR [rcx]
  4157f4:	cmp    rax,rcx
  4157f7:	je     4158b8 <strcmp@plt+0x12120>
  4157fd:	lea    rax,[rip+0x4f5bc]        # 464dc0 <strcmp@plt+0x61628>
  415804:	cmp    DWORD PTR [rax],0x2
  415807:	jl     41581c <strcmp@plt+0x12084>
  415809:	lea    rsi,[rip+0x31bdb]        # 4473eb <strcmp@plt+0x43c53>
  415810:	mov    edi,0x6
  415815:	xor    eax,eax
  415817:	call   42e520 <strcmp@plt+0x2ad88>
  41581c:	mov    rdi,r13
  41581f:	call   416420 <strcmp@plt+0x12c88>
  415824:	jmp    41591d <strcmp@plt+0x12185>
  415829:	mov    r14,rbx
  41582c:	lea    rax,[rip+0x4f58d]        # 464dc0 <strcmp@plt+0x61628>
  415833:	cmp    DWORD PTR [rax],0x0
  415836:	jle    41584b <strcmp@plt+0x120b3>
  415838:	lea    rsi,[rip+0x319e7]        # 447226 <strcmp@plt+0x43a8e>
  41583f:	mov    edi,0x5
  415844:	xor    eax,eax
  415846:	call   42e520 <strcmp@plt+0x2ad88>
  41584b:	mov    rbx,QWORD PTR [r12+0x28]
  415850:	mov    rdi,QWORD PTR [rbp+0x28]
  415854:	test   rdi,rdi
  415857:	je     41585e <strcmp@plt+0x120c6>
  415859:	call   42bff0 <strcmp@plt+0x28858>
  41585e:	mov    QWORD PTR [rbp+0x20],rbx
  415862:	mov    rdi,QWORD PTR [rbx+0x8]
  415866:	call   42a140 <strcmp@plt+0x269a8>
  41586b:	mov    QWORD PTR [rbp+0x28],rax
  41586f:	mov    QWORD PTR [rbp+0x30],0x0
  415877:	mov    QWORD PTR [rbp+0x18],0x0
  41587f:	mov    DWORD PTR [rbp+0x38],0x0
  415886:	mov    QWORD PTR [rbp+0x10],0x1
  41588e:	lea    rax,[rip+0x5ad23]        # 4705b8 <strcmp@plt+0x6ce20>
  415895:	mov    rdi,QWORD PTR [rax]
  415898:	mov    rsi,r15
  41589b:	call   4323d0 <strcmp@plt+0x2ec38>
  4158a0:	mov    rdi,r13
  4158a3:	call   416420 <strcmp@plt+0x12c88>
  4158a8:	mov    rbx,r14
  4158ab:	jmp    41591d <strcmp@plt+0x12185>
  4158ad:	xor    ecx,ecx
  4158af:	cmp    rax,rcx
  4158b2:	jne    4157fd <strcmp@plt+0x12065>
  4158b8:	mov    rdx,QWORD PTR [rbp+0x0]
  4158bc:	mov    rdi,r12
  4158bf:	mov    rsi,rbp
  4158c2:	call   4162d0 <strcmp@plt+0x12b38>
  4158c7:	mov    rdi,QWORD PTR [r12+0x20]
  4158cc:	mov    rsi,QWORD PTR [rbp+0x0]
  4158d0:	call   42f270 <strcmp@plt+0x2bad8>
  4158d5:	lea    rax,[rip+0x5acd4]        # 4705b0 <strcmp@plt+0x6ce18>
  4158dc:	mov    rsi,QWORD PTR [rax]
  4158df:	lea    rax,[rip+0x5acd2]        # 4705b8 <strcmp@plt+0x6ce20>
  4158e6:	mov    rdx,QWORD PTR [rax]
  4158e9:	mov    rdi,rbp
  4158ec:	call   437270 <strcmp@plt+0x33ad8>
  4158f1:	mov    rdi,QWORD PTR [rbp+0x0]
  4158f5:	call   422c90 <strcmp@plt+0x1f4f8>
  4158fa:	mov    rdi,QWORD PTR [rbp+0x8]
  4158fe:	call   42bff0 <strcmp@plt+0x28858>
  415903:	mov    rdi,QWORD PTR [rbp+0x18]
  415907:	call   4309e0 <strcmp@plt+0x2d248>
  41590c:	mov    rdi,QWORD PTR [rbp+0x28]
  415910:	call   42bff0 <strcmp@plt+0x28858>
  415915:	mov    rdi,rbp
  415918:	call   403790 <free@plt>
  41591d:	mov    rdi,rbx
  415920:	call   429ad0 <strcmp@plt+0x26338>
  415925:	jmp    415937 <strcmp@plt+0x1219f>
  415927:	mov    rdi,rbx
  41592a:	call   429ad0 <strcmp@plt+0x26338>
  41592f:	mov    rdi,r14
  415932:	call   416420 <strcmp@plt+0x12c88>
  415937:	mov    ebp,0x1
  41593c:	test   ebp,ebp
  41593e:	jne    415484 <strcmp@plt+0x11cec>
  415944:	jmp    415349 <strcmp@plt+0x11bb1>
  415949:	lea    rdi,[rip+0x31b01]        # 447451 <strcmp@plt+0x43cb9>
  415950:	lea    rsi,[rip+0x31b14]        # 44746b <strcmp@plt+0x43cd3>
  415957:	lea    rdx,[rip+0x31b1e]        # 44747c <strcmp@plt+0x43ce4>
  41595e:	call   431eb0 <strcmp@plt+0x2e718>
  415963:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41596d:	nop    DWORD PTR [rax]
  415970:	mov    eax,0x1
  415975:	ret    
  415976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415980:	mov    eax,0x1
  415985:	ret    
  415986:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415990:	mov    eax,0x1
  415995:	ret    
  415996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4159a0:	xor    eax,eax
  4159a2:	ret    
  4159a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4159ad:	nop    DWORD PTR [rax]
  4159b0:	push   rbp
  4159b1:	push   r15
  4159b3:	push   r14
  4159b5:	push   rbx
  4159b6:	push   rax
  4159b7:	xor    ebx,ebx
  4159b9:	test   rsi,rsi
  4159bc:	je     415acf <strcmp@plt+0x12337>
  4159c2:	mov    rbp,rsi
  4159c5:	mov    r15,rdi
  4159c8:	mov    r14,QWORD PTR [rdi+0x18]
  4159cc:	mov    rdi,rsi
  4159cf:	call   430aa0 <strcmp@plt+0x2d308>
  4159d4:	mov    rdi,r14
  4159d7:	mov    rsi,rax
  4159da:	mov    rdx,rbp
  4159dd:	call   42ee50 <strcmp@plt+0x2b6b8>
  4159e2:	test   eax,eax
  4159e4:	je     415acf <strcmp@plt+0x12337>
  4159ea:	mov    rax,QWORD PTR [rbp+0x8]
  4159ee:	imul   r14d,DWORD PTR [rax+0x38],0x3c
  4159f3:	xor    edi,edi
  4159f5:	call   436fa0 <strcmp@plt+0x33808>
  4159fa:	mov    rbx,rax
  4159fd:	lea    rdx,[rip+0x98c]        # 416390 <strcmp@plt+0x12bf8>
  415a04:	mov    rdi,rax
  415a07:	mov    rsi,r15
  415a0a:	mov    rcx,rbp
  415a0d:	xor    r8d,r8d
  415a10:	xor    r9d,r9d
  415a13:	call   436fc0 <strcmp@plt+0x33828>
  415a18:	lea    rax,[rip+0x5ab91]        # 4705b0 <strcmp@plt+0x6ce18>
  415a1f:	mov    rdi,QWORD PTR [rax]
  415a22:	mov    rsi,rbp
  415a25:	mov    rdx,rbx
  415a28:	call   437490 <strcmp@plt+0x33cf8>
  415a2d:	mov    rdi,rbx
  415a30:	mov    esi,r14d
  415a33:	call   437020 <strcmp@plt+0x33888>
  415a38:	mov    rbx,QWORD PTR [rbp+0x8]
  415a3c:	lea    rax,[rip+0x4f37d]        # 464dc0 <strcmp@plt+0x61628>
  415a43:	mov    eax,DWORD PTR [rax]
  415a45:	cmp    r14d,0x3d
  415a49:	jl     415a88 <strcmp@plt+0x122f0>
  415a4b:	test   eax,eax
  415a4d:	jle    415abc <strcmp@plt+0x12324>
  415a4f:	mov    rdi,rbx
  415a52:	call   422e20 <strcmp@plt+0x1f688>
  415a57:	mov    rbp,rax
  415a5a:	movzx  edi,BYTE PTR [rbx+0x3c]
  415a5e:	call   42abf0 <strcmp@plt+0x27458>
  415a63:	mov    ecx,r14d
  415a66:	mov    r8d,0x88888889
  415a6c:	imul   r8,rcx
  415a70:	shr    r8,0x25
  415a74:	lea    rsi,[rip+0x31520]        # 446f9b <strcmp@plt+0x43803>
  415a7b:	mov    edi,0x5
  415a80:	mov    rdx,rbp
  415a83:	mov    rcx,rax
  415a86:	jmp    415ab5 <strcmp@plt+0x1231d>
  415a88:	test   eax,eax
  415a8a:	jle    415abc <strcmp@plt+0x12324>
  415a8c:	mov    rdi,rbx
  415a8f:	call   422e20 <strcmp@plt+0x1f688>
  415a94:	mov    rbp,rax
  415a97:	movzx  edi,BYTE PTR [rbx+0x3c]
  415a9b:	call   42abf0 <strcmp@plt+0x27458>
  415aa0:	lea    rsi,[rip+0x31536]        # 446fdd <strcmp@plt+0x43845>
  415aa7:	mov    edi,0x5
  415aac:	mov    rdx,rbp
  415aaf:	mov    rcx,rax
  415ab2:	mov    r8d,r14d
  415ab5:	xor    eax,eax
  415ab7:	call   42e520 <strcmp@plt+0x2ad88>
  415abc:	mov    rdi,QWORD PTR [r15+0x18]
  415ac0:	mov    esi,0x7
  415ac5:	call   415ae0 <strcmp@plt+0x12348>
  415aca:	mov    ebx,0x1
  415acf:	mov    eax,ebx
  415ad1:	add    rsp,0x8
  415ad5:	pop    rbx
  415ad6:	pop    r14
  415ad8:	pop    r15
  415ada:	pop    rbp
  415adb:	ret    
  415adc:	nop    DWORD PTR [rax+0x0]
  415ae0:	push   rbp
  415ae1:	push   r15
  415ae3:	push   r14
  415ae5:	push   r13
  415ae7:	push   r12
  415ae9:	push   rbx
  415aea:	sub    rsp,0x828
  415af1:	mov    r13d,esi
  415af4:	mov    r15,rdi
  415af7:	cmp    esi,0x5
  415afa:	jl     415b11 <strcmp@plt+0x12379>
  415afc:	lea    rax,[rip+0x4f2bd]        # 464dc0 <strcmp@plt+0x61628>
  415b03:	mov    eax,DWORD PTR [rax]
  415b05:	add    eax,0x4
  415b08:	cmp    eax,r13d
  415b0b:	jl     415d64 <strcmp@plt+0x125cc>
  415b11:	lea    rsi,[rip+0x3140b]        # 446f23 <strcmp@plt+0x4378b>
  415b18:	xor    ebx,ebx
  415b1a:	mov    edi,r13d
  415b1d:	xor    eax,eax
  415b1f:	call   42e520 <strcmp@plt+0x2ad88>
  415b24:	call   42b980 <strcmp@plt+0x281e8>
  415b29:	mov    rbp,rax
  415b2c:	mov    rdi,QWORD PTR [r15]
  415b2f:	mov    rsi,rax
  415b32:	call   42baa0 <strcmp@plt+0x28308>
  415b37:	mov    rdi,QWORD PTR [r15+0x8]
  415b3b:	mov    QWORD PTR [rsp+0x8],rbp
  415b40:	mov    rsi,rbp
  415b43:	call   42baa0 <strcmp@plt+0x28308>
  415b48:	mov    rax,QWORD PTR [r15+0x10]
  415b4c:	mov    rcx,QWORD PTR [rax]
  415b4f:	cmp    DWORD PTR [rcx],0x0
  415b52:	je     415b9f <strcmp@plt+0x12407>
  415b54:	mov    r12d,0x3
  415b5a:	xor    ebp,ebp
  415b5c:	jmp    415b6c <strcmp@plt+0x123d4>
  415b5e:	xchg   ax,ax
  415b60:	inc    ebp
  415b62:	mov    rcx,QWORD PTR [rax]
  415b65:	add    ebx,0x2
  415b68:	cmp    ebp,DWORD PTR [rcx]
  415b6a:	je     415b9f <strcmp@plt+0x12407>
  415b6c:	mov    rdx,QWORD PTR [rcx+0x10]
  415b70:	mov    esi,ebp
  415b72:	shr    esi,0x4
  415b75:	mov    edi,ebx
  415b77:	and    dil,0x1e
  415b7b:	shlx   edi,r12d,edi
  415b80:	test   DWORD PTR [rdx+rsi*4],edi
  415b83:	jne    415b60 <strcmp@plt+0x123c8>
  415b85:	mov    rax,QWORD PTR [rcx+0x20]
  415b89:	mov    ecx,ebp
  415b8b:	mov    rdi,QWORD PTR [rax+rcx*8]
  415b8f:	mov    rsi,QWORD PTR [rsp+0x8]
  415b94:	call   42baa0 <strcmp@plt+0x28308>
  415b99:	mov    rax,QWORD PTR [r15+0x10]
  415b9d:	jmp    415b60 <strcmp@plt+0x123c8>
  415b9f:	mov    rax,QWORD PTR [r15+0x18]
  415ba3:	mov    rcx,QWORD PTR [rax]
  415ba6:	cmp    DWORD PTR [rcx],0x0
  415ba9:	je     415bff <strcmp@plt+0x12467>
  415bab:	xor    ebx,ebx
  415bad:	mov    r12d,0x3
  415bb3:	xor    ebp,ebp
  415bb5:	jmp    415bcc <strcmp@plt+0x12434>
  415bb7:	nop    WORD PTR [rax+rax*1+0x0]
  415bc0:	inc    ebp
  415bc2:	mov    rcx,QWORD PTR [rax]
  415bc5:	add    ebx,0x2
  415bc8:	cmp    ebp,DWORD PTR [rcx]
  415bca:	je     415bff <strcmp@plt+0x12467>
  415bcc:	mov    rdx,QWORD PTR [rcx+0x10]
  415bd0:	mov    esi,ebp
  415bd2:	shr    esi,0x4
  415bd5:	mov    edi,ebx
  415bd7:	and    dil,0x1e
  415bdb:	shlx   edi,r12d,edi
  415be0:	test   DWORD PTR [rdx+rsi*4],edi
  415be3:	jne    415bc0 <strcmp@plt+0x12428>
  415be5:	mov    rax,QWORD PTR [rcx+0x20]
  415be9:	mov    ecx,ebp
  415beb:	mov    rdi,QWORD PTR [rax+rcx*8]
  415bef:	mov    rsi,QWORD PTR [rsp+0x8]
  415bf4:	call   42baa0 <strcmp@plt+0x28308>
  415bf9:	mov    rax,QWORD PTR [r15+0x18]
  415bfd:	jmp    415bc0 <strcmp@plt+0x12428>
  415bff:	mov    rdi,QWORD PTR [r15+0x20]
  415c03:	mov    rbx,QWORD PTR [rsp+0x8]
  415c08:	mov    rsi,rbx
  415c0b:	call   42baa0 <strcmp@plt+0x28308>
  415c10:	mov    rdi,QWORD PTR [r15+0x20]
  415c14:	mov    rsi,rbx
  415c17:	call   42baa0 <strcmp@plt+0x28308>
  415c1c:	mov    r15,QWORD PTR [rbx+0x8]
  415c20:	cmp    r15,rbx
  415c23:	jne    415c3f <strcmp@plt+0x124a7>
  415c25:	jmp    415d43 <strcmp@plt+0x125ab>
  415c2a:	nop    WORD PTR [rax+rax*1+0x0]
  415c30:	mov    r15,QWORD PTR [r15+0x8]
  415c34:	cmp    r15,QWORD PTR [rsp+0x8]
  415c39:	je     415d43 <strcmp@plt+0x125ab>
  415c3f:	mov    rax,QWORD PTR [r15+0x10]
  415c43:	mov    rbx,QWORD PTR [rax]
  415c46:	test   rbx,rbx
  415c49:	je     415c30 <strcmp@plt+0x12498>
  415c4b:	xor    r12d,r12d
  415c4e:	cmp    QWORD PTR [rbx+0x8],0x0
  415c53:	jne    415c7f <strcmp@plt+0x124e7>
  415c55:	jmp    415d00 <strcmp@plt+0x12568>
  415c5a:	nop    WORD PTR [rax+rax*1+0x0]
  415c60:	test   rcx,rcx
  415c63:	je     415d2a <strcmp@plt+0x12592>
  415c69:	mov    rax,rcx
  415c6c:	mov    rbx,rax
  415c6f:	test   rax,rax
  415c72:	je     415c30 <strcmp@plt+0x12498>
  415c74:	cmp    QWORD PTR [rbx+0x8],0x0
  415c79:	je     415d00 <strcmp@plt+0x12568>
  415c7f:	mov    rax,QWORD PTR [rbx+0x28]
  415c83:	mov    r14,QWORD PTR [rax]
  415c86:	test   r14,r14
  415c89:	je     415d00 <strcmp@plt+0x12568>
  415c8b:	xor    ebp,ebp
  415c8d:	cmp    QWORD PTR [r14+0x8],0x0
  415c92:	jne    415cb7 <strcmp@plt+0x1251f>
  415c94:	jmp    415cc8 <strcmp@plt+0x12530>
  415c96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415ca0:	test   rcx,rcx
  415ca3:	je     415ce4 <strcmp@plt+0x1254c>
  415ca5:	mov    rax,rcx
  415ca8:	mov    r14,rax
  415cab:	test   rax,rax
  415cae:	je     415d00 <strcmp@plt+0x12568>
  415cb0:	cmp    QWORD PTR [r14+0x8],0x0
  415cb5:	je     415cc8 <strcmp@plt+0x12530>
  415cb7:	mov    rdi,QWORD PTR [r14+0x28]
  415cbb:	test   rdi,rdi
  415cbe:	je     415cc8 <strcmp@plt+0x12530>
  415cc0:	mov    esi,r13d
  415cc3:	call   430ac0 <strcmp@plt+0x2d328>
  415cc8:	mov    rax,QWORD PTR [r14+0x10]
  415ccc:	mov    rcx,QWORD PTR [r14+0x18]
  415cd0:	test   rax,rax
  415cd3:	je     415ca0 <strcmp@plt+0x12508>
  415cd5:	test   rcx,rcx
  415cd8:	je     415ca8 <strcmp@plt+0x12510>
  415cda:	mov    QWORD PTR [rsp+rbp*8+0x10],rcx
  415cdf:	inc    rbp
  415ce2:	jmp    415ca8 <strcmp@plt+0x12510>
  415ce4:	test   rbp,rbp
  415ce7:	je     415d00 <strcmp@plt+0x12568>
  415ce9:	mov    rax,QWORD PTR [rsp+rbp*8+0x8]
  415cee:	dec    rbp
  415cf1:	jmp    415ca8 <strcmp@plt+0x12510>
  415cf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415cfd:	nop    DWORD PTR [rax]
  415d00:	mov    rax,QWORD PTR [rbx+0x10]
  415d04:	mov    rcx,QWORD PTR [rbx+0x18]
  415d08:	test   rax,rax
  415d0b:	je     415c60 <strcmp@plt+0x124c8>
  415d11:	test   rcx,rcx
  415d14:	je     415c6c <strcmp@plt+0x124d4>
  415d1a:	mov    QWORD PTR [rsp+r12*8+0x420],rcx
  415d22:	inc    r12
  415d25:	jmp    415c6c <strcmp@plt+0x124d4>
  415d2a:	test   r12,r12
  415d2d:	je     415c30 <strcmp@plt+0x12498>
  415d33:	mov    rax,QWORD PTR [rsp+r12*8+0x418]
  415d3b:	dec    r12
  415d3e:	jmp    415c6c <strcmp@plt+0x124d4>
  415d43:	mov    rdi,QWORD PTR [rsp+0x8]
  415d48:	call   42bff0 <strcmp@plt+0x28858>
  415d4d:	cmp    r13d,0x5
  415d51:	jl     415d76 <strcmp@plt+0x125de>
  415d53:	lea    rax,[rip+0x4f066]        # 464dc0 <strcmp@plt+0x61628>
  415d5a:	mov    eax,DWORD PTR [rax]
  415d5c:	add    eax,0x4
  415d5f:	cmp    eax,r13d
  415d62:	jge    415d76 <strcmp@plt+0x125de>
  415d64:	add    rsp,0x828
  415d6b:	pop    rbx
  415d6c:	pop    r12
  415d6e:	pop    r13
  415d70:	pop    r14
  415d72:	pop    r15
  415d74:	pop    rbp
  415d75:	ret    
  415d76:	lea    rsi,[rip+0x2f332]        # 4450af <strcmp@plt+0x41917>
  415d7d:	mov    edi,r13d
  415d80:	xor    eax,eax
  415d82:	add    rsp,0x828
  415d89:	pop    rbx
  415d8a:	pop    r12
  415d8c:	pop    r13
  415d8e:	pop    r14
  415d90:	pop    r15
  415d92:	pop    rbp
  415d93:	jmp    42e520 <strcmp@plt+0x2ad88>
  415d98:	nop    DWORD PTR [rax+rax*1+0x0]
  415da0:	test   rsi,rsi
  415da3:	je     415dda <strcmp@plt+0x12642>
  415da5:	push   rbx
  415da6:	mov    rbx,rdi
  415da9:	mov    rdi,rsi
  415dac:	call   430aa0 <strcmp@plt+0x2d308>
  415db1:	mov    rdi,QWORD PTR [rbx+0x18]
  415db5:	mov    rsi,rax
  415db8:	call   42f270 <strcmp@plt+0x2bad8>
  415dbd:	mov    rdi,rax
  415dc0:	call   4309e0 <strcmp@plt+0x2d248>
  415dc5:	mov    rdi,QWORD PTR [rbx+0x18]
  415dc9:	mov    esi,0x7
  415dce:	call   415ae0 <strcmp@plt+0x12348>
  415dd3:	mov    eax,0x1
  415dd8:	pop    rbx
  415dd9:	ret    
  415dda:	xor    eax,eax
  415ddc:	ret    
  415ddd:	nop    DWORD PTR [rax]
  415de0:	push   r15
  415de2:	push   r14
  415de4:	push   r13
  415de6:	push   r12
  415de8:	push   rbx
  415de9:	test   rsi,rsi
  415dec:	je     415e9a <strcmp@plt+0x12702>
  415df2:	mov    r13,rsi
  415df5:	mov    r14,rdi
  415df8:	mov    rbx,QWORD PTR [rdi+0x18]
  415dfc:	mov    rdi,rsi
  415dff:	call   430aa0 <strcmp@plt+0x2d308>
  415e04:	mov    rdi,rbx
  415e07:	mov    rsi,rax
  415e0a:	call   42f9b0 <strcmp@plt+0x2c218>
  415e0f:	test   rax,rax
  415e12:	je     415e86 <strcmp@plt+0x126ee>
  415e14:	mov    r15,rax
  415e17:	mov    rdi,QWORD PTR [r13+0x8]
  415e1b:	mov    rsi,QWORD PTR [rax+0x8]
  415e1f:	call   429b00 <strcmp@plt+0x26368>
  415e24:	lea    rcx,[rip+0x4ef95]        # 464dc0 <strcmp@plt+0x61628>
  415e2b:	mov    ecx,DWORD PTR [rcx]
  415e2d:	test   eax,eax
  415e2f:	je     415e9e <strcmp@plt+0x12706>
  415e31:	cmp    ecx,0x2
  415e34:	jl     415e5c <strcmp@plt+0x126c4>
  415e36:	mov    rdi,r13
  415e39:	call   430aa0 <strcmp@plt+0x2d308>
  415e3e:	mov    rdi,rax
  415e41:	call   422e20 <strcmp@plt+0x1f688>
  415e46:	lea    rsi,[rip+0x30fe6]        # 446e33 <strcmp@plt+0x4369b>
  415e4d:	mov    edi,0x6
  415e52:	mov    rdx,rax
  415e55:	xor    eax,eax
  415e57:	call   42e520 <strcmp@plt+0x2ad88>
  415e5c:	mov    rdi,r15
  415e5f:	call   430aa0 <strcmp@plt+0x2d308>
  415e64:	mov    rdi,QWORD PTR [r14+0x18]
  415e68:	mov    rsi,rax
  415e6b:	call   42f270 <strcmp@plt+0x2bad8>
  415e70:	mov    rdi,rax
  415e73:	call   4309e0 <strcmp@plt+0x2d248>
  415e78:	mov    rdi,QWORD PTR [r14+0x18]
  415e7c:	mov    esi,0x7
  415e81:	call   415ae0 <strcmp@plt+0x12348>
  415e86:	mov    rdi,r14
  415e89:	mov    rsi,r13
  415e8c:	pop    rbx
  415e8d:	pop    r12
  415e8f:	pop    r13
  415e91:	pop    r14
  415e93:	pop    r15
  415e95:	jmp    4159b0 <strcmp@plt+0x12218>
  415e9a:	xor    eax,eax
  415e9c:	jmp    415f0d <strcmp@plt+0x12775>
  415e9e:	cmp    ecx,0x2
  415ea1:	jl     415ec9 <strcmp@plt+0x12731>
  415ea3:	mov    rdi,r13
  415ea6:	call   430aa0 <strcmp@plt+0x2d308>
  415eab:	mov    rdi,rax
  415eae:	call   422e20 <strcmp@plt+0x1f688>
  415eb3:	lea    rsi,[rip+0x30f2e]        # 446de8 <strcmp@plt+0x43650>
  415eba:	mov    edi,0x6
  415ebf:	mov    rdx,rax
  415ec2:	xor    eax,eax
  415ec4:	call   42e520 <strcmp@plt+0x2ad88>
  415ec9:	lea    rax,[rip+0x5a6e0]        # 4705b0 <strcmp@plt+0x6ce18>
  415ed0:	mov    rdi,QWORD PTR [rax]
  415ed3:	xor    r12d,r12d
  415ed6:	mov    rsi,r15
  415ed9:	xor    edx,edx
  415edb:	call   437400 <strcmp@plt+0x33c68>
  415ee0:	mov    r14,rax
  415ee3:	cmp    DWORD PTR [rax+0x18],0x0
  415ee7:	je     415ef1 <strcmp@plt+0x12759>
  415ee9:	mov    rax,QWORD PTR [r14+0x8]
  415eed:	mov    r12,QWORD PTR [rax+0x10]
  415ef1:	mov    rax,QWORD PTR [r13+0x8]
  415ef5:	mov    esi,DWORD PTR [rax+0x38]
  415ef8:	mov    rdi,r12
  415efb:	call   437020 <strcmp@plt+0x33888>
  415f00:	mov    rdi,r14
  415f03:	call   42bff0 <strcmp@plt+0x28858>
  415f08:	mov    eax,0x1
  415f0d:	pop    rbx
  415f0e:	pop    r12
  415f10:	pop    r13
  415f12:	pop    r14
  415f14:	pop    r15
  415f16:	ret    
  415f17:	nop    WORD PTR [rax+rax*1+0x0]
  415f20:	test   rsi,rsi
  415f23:	je     415f43 <strcmp@plt+0x127ab>
  415f25:	push   rax
  415f26:	mov    rdx,rsi
  415f29:	mov    rdi,QWORD PTR [rdi+0x20]
  415f2d:	mov    rsi,QWORD PTR [rsi]
  415f30:	call   42ee50 <strcmp@plt+0x2b6b8>
  415f35:	mov    ecx,eax
  415f37:	xor    eax,eax
  415f39:	test   ecx,ecx
  415f3b:	setne  al
  415f3e:	add    rsp,0x8
  415f42:	ret    
  415f43:	xor    eax,eax
  415f45:	ret    
  415f46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415f50:	mov    QWORD PTR [rdi+0x28],rsi
  415f54:	mov    eax,0x1
  415f59:	ret    
  415f5a:	nop    WORD PTR [rax+rax*1+0x0]
  415f60:	push   r15
  415f62:	push   r14
  415f64:	push   rbx
  415f65:	mov    ebx,esi
  415f67:	mov    r14,rdi
  415f6a:	cmp    esi,0x4
  415f6d:	jg     415f81 <strcmp@plt+0x127e9>
  415f6f:	lea    rsi,[rip+0x30f2f]        # 446ea5 <strcmp@plt+0x4370d>
  415f76:	mov    edi,ebx
  415f78:	xor    eax,eax
  415f7a:	call   42e520 <strcmp@plt+0x2ad88>
  415f7f:	jmp    415fb9 <strcmp@plt+0x12821>
  415f81:	lea    r15,[rip+0x4ee38]        # 464dc0 <strcmp@plt+0x61628>
  415f88:	mov    eax,DWORD PTR [r15]
  415f8b:	add    eax,0x4
  415f8e:	cmp    eax,ebx
  415f90:	jl     415fe9 <strcmp@plt+0x12851>
  415f92:	lea    rsi,[rip+0x30f0c]        # 446ea5 <strcmp@plt+0x4370d>
  415f99:	mov    edi,ebx
  415f9b:	xor    eax,eax
  415f9d:	call   42e520 <strcmp@plt+0x2ad88>
  415fa2:	mov    eax,DWORD PTR [r15]
  415fa5:	add    eax,0x4
  415fa8:	cmp    eax,ebx
  415faa:	jge    415fb9 <strcmp@plt+0x12821>
  415fac:	mov    rdi,QWORD PTR [r14+0x28]
  415fb0:	mov    esi,ebx
  415fb2:	call   430ac0 <strcmp@plt+0x2d328>
  415fb7:	jmp    415fd9 <strcmp@plt+0x12841>
  415fb9:	lea    rsi,[rip+0x30f21]        # 446ee1 <strcmp@plt+0x43749>
  415fc0:	mov    edi,ebx
  415fc2:	xor    eax,eax
  415fc4:	call   42e520 <strcmp@plt+0x2ad88>
  415fc9:	mov    rdi,QWORD PTR [r14+0x28]
  415fcd:	mov    esi,ebx
  415fcf:	call   430ac0 <strcmp@plt+0x2d328>
  415fd4:	cmp    ebx,0x5
  415fd7:	jl     415fef <strcmp@plt+0x12857>
  415fd9:	lea    rax,[rip+0x4ede0]        # 464dc0 <strcmp@plt+0x61628>
  415fe0:	mov    eax,DWORD PTR [rax]
  415fe2:	add    eax,0x4
  415fe5:	cmp    eax,ebx
  415fe7:	jge    415fef <strcmp@plt+0x12857>
  415fe9:	pop    rbx
  415fea:	pop    r14
  415fec:	pop    r15
  415fee:	ret    
  415fef:	lea    rsi,[rip+0x2f0b9]        # 4450af <strcmp@plt+0x41917>
  415ff6:	mov    edi,ebx
  415ff8:	xor    eax,eax
  415ffa:	pop    rbx
  415ffb:	pop    r14
  415ffd:	pop    r15
  415fff:	jmp    42e520 <strcmp@plt+0x2ad88>
  416004:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41600e:	xchg   ax,ax
  416010:	push   r14
  416012:	push   rbx
  416013:	push   rax
  416014:	mov    r14,rdi
  416017:	mov    edi,0x40
  41601c:	call   431d60 <strcmp@plt+0x2e5c8>
  416021:	mov    rbx,rax
  416024:	mov    rdi,r14
  416027:	call   423440 <strcmp@plt+0x1fca8>
  41602c:	mov    QWORD PTR [rbx],rax
  41602f:	lea    rdi,[rip+0x2a]        # 416060 <strcmp@plt+0x128c8>
  416036:	call   42b9b0 <strcmp@plt+0x28218>
  41603b:	mov    QWORD PTR [rbx+0x8],rax
  41603f:	mov    DWORD PTR [rbx+0x10],0x0
  416046:	mov    rax,rbx
  416049:	add    rsp,0x8
  41604d:	pop    rbx
  41604e:	pop    r14
  416050:	ret    
  416051:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41605b:	nop    DWORD PTR [rax+rax*1+0x0]
  416060:	push   rbx
  416061:	mov    rbx,rdi
  416064:	mov    rdi,QWORD PTR [rdi+0x8]
  416068:	call   422c90 <strcmp@plt+0x1f4f8>
  41606d:	mov    rdi,QWORD PTR [rbx+0x10]
  416071:	call   422c90 <strcmp@plt+0x1f4f8>
  416076:	mov    rdi,QWORD PTR [rbx+0x18]
  41607a:	call   42bff0 <strcmp@plt+0x28858>
  41607f:	mov    rdi,rbx
  416082:	pop    rbx
  416083:	jmp    403790 <free@plt>
  416088:	nop    DWORD PTR [rax+rax*1+0x0]
  416090:	push   r14
  416092:	push   rbx
  416093:	push   rax
  416094:	mov    r14,rsi
  416097:	mov    rbx,rdi
  41609a:	mov    rdi,QWORD PTR [rdi+0x28]
  41609e:	test   rdi,rdi
  4160a1:	je     4160a8 <strcmp@plt+0x12910>
  4160a3:	call   42bff0 <strcmp@plt+0x28858>
  4160a8:	mov    QWORD PTR [rbx+0x20],r14
  4160ac:	mov    rdi,QWORD PTR [r14+0x8]
  4160b0:	call   42a140 <strcmp@plt+0x269a8>
  4160b5:	mov    QWORD PTR [rbx+0x28],rax
  4160b9:	mov    QWORD PTR [rbx+0x30],0x0
  4160c1:	mov    DWORD PTR [rbx+0x14],0x0
  4160c8:	mov    QWORD PTR [rbx+0x18],0x0
  4160d0:	mov    DWORD PTR [rbx+0x38],0x0
  4160d7:	add    rsp,0x8
  4160db:	pop    rbx
  4160dc:	pop    r14
  4160de:	ret    
  4160df:	nop
  4160e0:	push   r14
  4160e2:	push   rbx
  4160e3:	push   rax
  4160e4:	mov    r14,rsi
  4160e7:	mov    rbx,rdi
  4160ea:	mov    rdi,QWORD PTR [rdi+0x28]
  4160ee:	test   rdi,rdi
  4160f1:	je     4160f8 <strcmp@plt+0x12960>
  4160f3:	call   42bff0 <strcmp@plt+0x28858>
  4160f8:	mov    QWORD PTR [rbx+0x20],r14
  4160fc:	mov    rdi,QWORD PTR [r14+0x8]
  416100:	call   42a140 <strcmp@plt+0x269a8>
  416105:	mov    QWORD PTR [rbx+0x28],rax
  416109:	mov    QWORD PTR [rbx+0x30],0x0
  416111:	mov    QWORD PTR [rbx+0x18],0x0
  416119:	mov    DWORD PTR [rbx+0x38],0x0
  416120:	mov    QWORD PTR [rbx+0x10],0x1
  416128:	add    rsp,0x8
  41612c:	pop    rbx
  41612d:	pop    r14
  41612f:	ret    
  416130:	push   r15
  416132:	push   r14
  416134:	push   r12
  416136:	push   rbx
  416137:	push   rax
  416138:	mov    r15,rsi
  41613b:	mov    rsi,QWORD PTR [rdi+0x8]
  41613f:	mov    rbx,QWORD PTR [rsi+0x8]
  416143:	cmp    rbx,rsi
  416146:	je     416193 <strcmp@plt+0x129fb>
  416148:	mov    r14,rdi
  41614b:	jmp    41615d <strcmp@plt+0x129c5>
  41614d:	nop    DWORD PTR [rax]
  416150:	mov    rbx,QWORD PTR [rbx+0x8]
  416154:	mov    rsi,QWORD PTR [r14+0x8]
  416158:	cmp    rbx,rsi
  41615b:	je     416193 <strcmp@plt+0x129fb>
  41615d:	mov    r12,QWORD PTR [rbx+0x10]
  416161:	mov    rdi,QWORD PTR [r12+0x8]
  416166:	mov    rsi,QWORD PTR [r15+0x8]
  41616a:	call   423670 <strcmp@plt+0x1fed8>
  41616f:	test   eax,eax
  416171:	jne    416150 <strcmp@plt+0x129b8>
  416173:	mov    rdi,QWORD PTR [r12+0x10]
  416178:	mov    rsi,QWORD PTR [r15+0x10]
  41617c:	call   423670 <strcmp@plt+0x1fed8>
  416181:	test   eax,eax
  416183:	jne    416150 <strcmp@plt+0x129b8>
  416185:	mov    rsi,QWORD PTR [r14+0x8]
  416189:	mov    rdi,rbx
  41618c:	call   42be10 <strcmp@plt+0x28678>
  416191:	jmp    416150 <strcmp@plt+0x129b8>
  416193:	mov    rdi,r15
  416196:	add    rsp,0x8
  41619a:	pop    rbx
  41619b:	pop    r12
  41619d:	pop    r14
  41619f:	pop    r15
  4161a1:	jmp    42baa0 <strcmp@plt+0x28308>
  4161a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4161b0:	test   rdi,rdi
  4161b3:	je     4161ba <strcmp@plt+0x12a22>
  4161b5:	jmp    4309e0 <strcmp@plt+0x2d248>
  4161ba:	ret    
  4161bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4161c0:	test   rdi,rdi
  4161c3:	je     41620e <strcmp@plt+0x12a76>
  4161c5:	push   rbx
  4161c6:	mov    rbx,rdi
  4161c9:	lea    rax,[rip+0x5a3e0]        # 4705b0 <strcmp@plt+0x6ce18>
  4161d0:	mov    rsi,QWORD PTR [rax]
  4161d3:	lea    rax,[rip+0x5a3de]        # 4705b8 <strcmp@plt+0x6ce20>
  4161da:	mov    rdx,QWORD PTR [rax]
  4161dd:	call   437270 <strcmp@plt+0x33ad8>
  4161e2:	mov    rdi,QWORD PTR [rbx]
  4161e5:	call   422c90 <strcmp@plt+0x1f4f8>
  4161ea:	mov    rdi,QWORD PTR [rbx+0x8]
  4161ee:	call   42bff0 <strcmp@plt+0x28858>
  4161f3:	mov    rdi,QWORD PTR [rbx+0x18]
  4161f7:	call   4309e0 <strcmp@plt+0x2d248>
  4161fc:	mov    rdi,QWORD PTR [rbx+0x28]
  416200:	call   42bff0 <strcmp@plt+0x28858>
  416205:	mov    rdi,rbx
  416208:	pop    rbx
  416209:	jmp    403790 <free@plt>
  41620e:	ret    
  41620f:	nop
  416210:	test   rsi,rsi
  416213:	je     41626d <strcmp@plt+0x12ad5>
  416215:	push   rbx
  416216:	mov    rbx,rsi
  416219:	mov    rdi,QWORD PTR [rdi+0x20]
  41621d:	mov    rsi,QWORD PTR [rsi]
  416220:	call   42f270 <strcmp@plt+0x2bad8>
  416225:	lea    rax,[rip+0x5a384]        # 4705b0 <strcmp@plt+0x6ce18>
  41622c:	mov    rsi,QWORD PTR [rax]
  41622f:	lea    rax,[rip+0x5a382]        # 4705b8 <strcmp@plt+0x6ce20>
  416236:	mov    rdx,QWORD PTR [rax]
  416239:	mov    rdi,rbx
  41623c:	call   437270 <strcmp@plt+0x33ad8>
  416241:	mov    rdi,QWORD PTR [rbx]
  416244:	call   422c90 <strcmp@plt+0x1f4f8>
  416249:	mov    rdi,QWORD PTR [rbx+0x8]
  41624d:	call   42bff0 <strcmp@plt+0x28858>
  416252:	mov    rdi,QWORD PTR [rbx+0x18]
  416256:	call   4309e0 <strcmp@plt+0x2d248>
  41625b:	mov    rdi,QWORD PTR [rbx+0x28]
  41625f:	call   42bff0 <strcmp@plt+0x28858>
  416264:	mov    rdi,rbx
  416267:	pop    rbx
  416268:	jmp    403790 <free@plt>
  41626d:	ret    
  41626e:	xchg   ax,ax
  416270:	push   r15
  416272:	push   r14
  416274:	push   r12
  416276:	push   rbx
  416277:	push   rax
  416278:	mov    r14,rdx
  41627b:	mov    r15,rsi
  41627e:	mov    r12,rdi
  416281:	mov    edi,0x18
  416286:	call   431d90 <strcmp@plt+0x2e5f8>
  41628b:	mov    rbx,rax
  41628e:	mov    QWORD PTR [rax],r12
  416291:	mov    QWORD PTR [rax+0x8],r15
  416295:	mov    rdi,r14
  416298:	call   423440 <strcmp@plt+0x1fca8>
  41629d:	mov    QWORD PTR [rbx+0x10],rax
  4162a1:	mov    rax,rbx
  4162a4:	add    rsp,0x8
  4162a8:	pop    rbx
  4162a9:	pop    r12
  4162ab:	pop    r14
  4162ad:	pop    r15
  4162af:	ret    
  4162b0:	push   rbx
  4162b1:	mov    rbx,rdi
  4162b4:	mov    rdi,QWORD PTR [rdi+0x10]
  4162b8:	call   422c90 <strcmp@plt+0x1f4f8>
  4162bd:	mov    rdi,rbx
  4162c0:	pop    rbx
  4162c1:	jmp    403790 <free@plt>
  4162c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4162d0:	push   rbp
  4162d1:	push   r15
  4162d3:	push   r14
  4162d5:	push   r13
  4162d7:	push   r12
  4162d9:	push   rbx
  4162da:	sub    rsp,0x58
  4162de:	mov    QWORD PTR [rsp+0x8],rdx
  4162e3:	mov    rax,QWORD PTR [rsi+0x8]
  4162e7:	mov    rbp,QWORD PTR [rax+0x8]
  4162eb:	cmp    rbp,rax
  4162ee:	je     41636d <strcmp@plt+0x12bd5>
  4162f0:	mov    r12,rsi
  4162f3:	mov    r15,rdi
  4162f6:	lea    r13,[rsp+0x10]
  4162fb:	jmp    41630b <strcmp@plt+0x12b73>
  4162fd:	nop    DWORD PTR [rax]
  416300:	mov    rbp,QWORD PTR [rbp+0x8]
  416304:	cmp    rbp,QWORD PTR [r12+0x8]
  416309:	je     41636d <strcmp@plt+0x12bd5>
  41630b:	mov    r14,QWORD PTR [rbp+0x10]
  41630f:	mov    r8,QWORD PTR [r14]
  416312:	mov    rdi,QWORD PTR [rsp+0x8]
  416317:	mov    esi,0xf
  41631c:	xor    edx,edx
  41631e:	xor    ecx,ecx
  416320:	call   422090 <strcmp@plt+0x1e8f8>
  416325:	mov    rbx,rax
  416328:	mov    rax,QWORD PTR [r14+0x18]
  41632c:	mov    rax,QWORD PTR [rax+0x8]
  416330:	mov    rdi,QWORD PTR [rax+0x10]
  416334:	call   422fd0 <strcmp@plt+0x1f838>
  416339:	mov    rdi,r13
  41633c:	mov    esi,0x10f6
  416341:	mov    edx,0x10f6
  416346:	xor    ecx,ecx
  416348:	mov    r8,rax
  41634b:	call   435260 <strcmp@plt+0x31ac8>
  416350:	mov    rdi,r15
  416353:	mov    rsi,rbx
  416356:	mov    rdx,r13
  416359:	call   407920 <strcmp@plt+0x4188>
  41635e:	test   rbx,rbx
  416361:	je     416300 <strcmp@plt+0x12b68>
  416363:	mov    rdi,rbx
  416366:	call   42dd40 <strcmp@plt+0x2a5a8>
  41636b:	jmp    416300 <strcmp@plt+0x12b68>
  41636d:	add    rsp,0x58
  416371:	pop    rbx
  416372:	pop    r12
  416374:	pop    r13
  416376:	pop    r14
  416378:	pop    r15
  41637a:	pop    rbp
  41637b:	ret    
  41637c:	nop    DWORD PTR [rax+0x0]
  416380:	mov    edi,0x20
  416385:	jmp    431d60 <strcmp@plt+0x2e5c8>
  41638a:	nop    WORD PTR [rax+rax*1+0x0]
  416390:	push   r15
  416392:	push   r14
  416394:	push   r12
  416396:	push   rbx
  416397:	push   rax
  416398:	mov    rbx,rdi
  41639b:	call   436ff0 <strcmp@plt+0x33858>
  4163a0:	mov    r12,rax
  4163a3:	mov    r15,QWORD PTR [rax+0x8]
  4163a7:	mov    rdi,rbx
  4163aa:	call   436fe0 <strcmp@plt+0x33848>
  4163af:	mov    r14,rax
  4163b2:	lea    rax,[rip+0x4ea07]        # 464dc0 <strcmp@plt+0x61628>
  4163b9:	cmp    DWORD PTR [rax],0x0
  4163bc:	jle    4163dc <strcmp@plt+0x12c44>
  4163be:	mov    rdi,r15
  4163c1:	call   422e20 <strcmp@plt+0x1f688>
  4163c6:	lea    rsi,[rip+0x30c52]        # 44701f <strcmp@plt+0x43887>
  4163cd:	mov    edi,0x5
  4163d2:	mov    rdx,rax
  4163d5:	xor    eax,eax
  4163d7:	call   42e520 <strcmp@plt+0x2ad88>
  4163dc:	mov    rbx,QWORD PTR [r14+0x18]
  4163e0:	mov    rdi,r12
  4163e3:	call   430aa0 <strcmp@plt+0x2d308>
  4163e8:	lea    rdx,[rip+0x1a5f1]        # 4309e0 <strcmp@plt+0x2d248>
  4163ef:	mov    rdi,rbx
  4163f2:	mov    rsi,rax
  4163f5:	call   42f590 <strcmp@plt+0x2bdf8>
  4163fa:	mov    rdi,QWORD PTR [r14+0x18]
  4163fe:	mov    esi,0x7
  416403:	call   415ae0 <strcmp@plt+0x12348>
  416408:	mov    eax,0x1
  41640d:	add    rsp,0x8
  416411:	pop    rbx
  416412:	pop    r12
  416414:	pop    r14
  416416:	pop    r15
  416418:	ret    
  416419:	nop    DWORD PTR [rax+0x0]
  416420:	push   rbp
  416421:	push   r15
  416423:	push   r14
  416425:	push   r13
  416427:	push   r12
  416429:	push   rbx
  41642a:	sub    rsp,0x58
  41642e:	mov    r15,rdi
  416431:	call   436ff0 <strcmp@plt+0x33858>
  416436:	mov    rbp,rax
  416439:	mov    rdi,r15
  41643c:	call   437010 <strcmp@plt+0x33878>
  416441:	mov    r13,rax
  416444:	mov    rbx,QWORD PTR [rbp+0x0]
  416448:	mov    r12,QWORD PTR [rbp+0x8]
  41644c:	mov    rax,QWORD PTR [rbx+0x8]
  416450:	mov    rdi,QWORD PTR [rbx+0x28]
  416454:	mov    rax,QWORD PTR [rax]
  416457:	mov    r14,QWORD PTR [rax+0x10]
  41645b:	mov    rax,QWORD PTR [rbx+0x30]
  41645f:	mov    ecx,DWORD PTR [rdi+0x18]
  416462:	test   rax,rax
  416465:	je     416476 <strcmp@plt+0x12cde>
  416467:	test   ecx,ecx
  416469:	je     416470 <strcmp@plt+0x12cd8>
  41646b:	cmp    rax,QWORD PTR [rdi]
  41646e:	je     416480 <strcmp@plt+0x12ce8>
  416470:	mov    rax,QWORD PTR [rax+0x8]
  416474:	jmp    4164c2 <strcmp@plt+0x12d2a>
  416476:	test   ecx,ecx
  416478:	je     4164c0 <strcmp@plt+0x12d28>
  41647a:	mov    rax,QWORD PTR [rdi+0x8]
  41647e:	jmp    4164c2 <strcmp@plt+0x12d2a>
  416480:	cmp    DWORD PTR [rbx+0x14],0x0
  416484:	je     4166aa <strcmp@plt+0x12f12>
  41648a:	mov    rdi,QWORD PTR [rbx+0x18]
  41648e:	test   rdi,rdi
  416491:	je     4166b2 <strcmp@plt+0x12f1a>
  416497:	mov    rax,QWORD PTR [rdi+0x8]
  41649b:	mov    DWORD PTR [rax+0x38],0x1
  4164a2:	call   430c20 <strcmp@plt+0x2d488>
  4164a7:	mov    rdi,r12
  4164aa:	mov    rsi,rax
  4164ad:	call   415de0 <strcmp@plt+0x12648>
  4164b2:	mov    rdi,QWORD PTR [rbx+0x18]
  4164b6:	call   430aa0 <strcmp@plt+0x2d308>
  4164bb:	mov    rdx,rax
  4164be:	jmp    4164d5 <strcmp@plt+0x12d3d>
  4164c0:	xor    eax,eax
  4164c2:	mov    QWORD PTR [rbx+0x30],rax
  4164c6:	cmp    DWORD PTR [rbx+0x38],0x3
  4164ca:	jl     4164f0 <strcmp@plt+0x12d58>
  4164cc:	cmp    DWORD PTR [rbx+0x10],0x1
  4164d0:	jne    416526 <strcmp@plt+0x12d8e>
  4164d2:	mov    rdx,QWORD PTR [rbx]
  4164d5:	mov    rdi,r12
  4164d8:	mov    rsi,rbx
  4164db:	call   4162d0 <strcmp@plt+0x12b38>
  4164e0:	mov    rdi,r12
  4164e3:	mov    rsi,rbx
  4164e6:	call   416210 <strcmp@plt+0x12a78>
  4164eb:	jmp    416696 <strcmp@plt+0x12efe>
  4164f0:	mov    QWORD PTR [rsp],r13
  4164f4:	mov    rdi,QWORD PTR [r14+0x8]
  4164f8:	mov    rsi,QWORD PTR [r14+0x18]
  4164fc:	mov    rdx,QWORD PTR [rbx]
  4164ff:	call   421fc0 <strcmp@plt+0x1e828>
  416504:	mov    r13,rax
  416507:	movzx  ebp,WORD PTR [rax+0x24]
  41650b:	cmp    rbp,0xffff
  416512:	mov    QWORD PTR [rsp+0x8],r12
  416517:	je     4165a7 <strcmp@plt+0x12e0f>
  41651d:	add    rbp,QWORD PTR [r13+0x30]
  416521:	jmp    4165a9 <strcmp@plt+0x12e11>
  416526:	lea    rax,[rip+0x4e893]        # 464dc0 <strcmp@plt+0x61628>
  41652d:	cmp    DWORD PTR [rax],0x0
  416530:	jle    416549 <strcmp@plt+0x12db1>
  416532:	lea    rsi,[rip+0x30ced]        # 447226 <strcmp@plt+0x43a8e>
  416539:	mov    edi,0x5
  41653e:	xor    eax,eax
  416540:	call   42e520 <strcmp@plt+0x2ad88>
  416545:	mov    rdi,QWORD PTR [rbx+0x28]
  416549:	mov    rbp,QWORD PTR [r12+0x28]
  41654e:	test   rdi,rdi
  416551:	je     416558 <strcmp@plt+0x12dc0>
  416553:	call   42bff0 <strcmp@plt+0x28858>
  416558:	mov    QWORD PTR [rbx+0x20],rbp
  41655c:	mov    rdi,QWORD PTR [rbp+0x8]
  416560:	call   42a140 <strcmp@plt+0x269a8>
  416565:	mov    QWORD PTR [rbx+0x28],rax
  416569:	mov    QWORD PTR [rbx+0x30],0x0
  416571:	mov    QWORD PTR [rbx+0x18],0x0
  416579:	mov    DWORD PTR [rbx+0x38],0x0
  416580:	mov    QWORD PTR [rbx+0x10],0x1
  416588:	lea    rax,[rip+0x5a029]        # 4705b8 <strcmp@plt+0x6ce20>
  41658f:	mov    rdi,QWORD PTR [rax]
  416592:	mov    rsi,r13
  416595:	call   4323d0 <strcmp@plt+0x2ec38>
  41659a:	mov    rdi,r15
  41659d:	call   416420 <strcmp@plt+0x12c88>
  4165a2:	jmp    416696 <strcmp@plt+0x12efe>
  4165a7:	xor    ebp,ebp
  4165a9:	xor    eax,eax
  4165ab:	call   432550 <strcmp@plt+0x2edb8>
  4165b0:	mov    QWORD PTR [rbp+0x4],rax
  4165b4:	mov    rbp,rax
  4165b7:	mov    r14,QWORD PTR [r14+0x10]
  4165bb:	mov    rdi,QWORD PTR [rbx]
  4165be:	call   422dd0 <strcmp@plt+0x1f638>
  4165c3:	mov    rdi,rax
  4165c6:	call   423440 <strcmp@plt+0x1fca8>
  4165cb:	mov    r12,rax
  4165ce:	mov    rdi,rax
  4165d1:	mov    esi,0x1
  4165d6:	call   422e90 <strcmp@plt+0x1f6f8>
  4165db:	mov    rdi,r13
  4165de:	mov    esi,0x10f6
  4165e3:	mov    edx,0x10f6
  4165e8:	mov    rcx,r14
  4165eb:	mov    r8,r12
  4165ee:	call   421d40 <strcmp@plt+0x1e5a8>
  4165f3:	movzx  eax,WORD PTR [r13+0x1e]
  4165f8:	mov    rcx,QWORD PTR [r13+0x30]
  4165fc:	or     WORD PTR [rcx+rax*1],0x4
  416601:	mov    rax,QWORD PTR [rbx+0x30]
  416605:	mov    rdi,QWORD PTR [rax+0x10]
  416609:	call   422fd0 <strcmp@plt+0x1f838>
  41660e:	lea    rdi,[rsp+0x10]
  416613:	mov    esi,0x10f6
  416618:	mov    edx,0x10f6
  41661d:	xor    ecx,ecx
  41661f:	mov    r8,rax
  416622:	call   435260 <strcmp@plt+0x31ac8>
  416627:	lea    rax,[rip+0x4e792]        # 464dc0 <strcmp@plt+0x61628>
  41662e:	cmp    DWORD PTR [rax],0x0
  416631:	jle    416651 <strcmp@plt+0x12eb9>
  416633:	mov    rdi,r13
  416636:	call   422570 <strcmp@plt+0x1edd8>
  41663b:	lea    rsi,[rip+0x30c06]        # 447248 <strcmp@plt+0x43ab0>
  416642:	mov    edi,0x5
  416647:	mov    rdx,rax
  41664a:	xor    eax,eax
  41664c:	call   42e520 <strcmp@plt+0x2ad88>
  416651:	lea    rdx,[rsp+0x10]
  416656:	mov    rdi,QWORD PTR [rsp+0x8]
  41665b:	mov    rsi,r13
  41665e:	call   407920 <strcmp@plt+0x4188>
  416663:	mov    rdi,r12
  416666:	call   422c90 <strcmp@plt+0x1f4f8>
  41666b:	lea    rax,[rip+0x59f46]        # 4705b8 <strcmp@plt+0x6ce20>
  416672:	mov    rdi,QWORD PTR [rax]
  416675:	mov    rsi,rbp
  416678:	mov    rdx,QWORD PTR [rsp]
  41667c:	call   431f60 <strcmp@plt+0x2e7c8>
  416681:	mov    rdi,r15
  416684:	mov    esi,0x2
  416689:	call   437020 <strcmp@plt+0x33888>
  41668e:	mov    rdi,r13
  416691:	call   42dd40 <strcmp@plt+0x2a5a8>
  416696:	mov    eax,0x1
  41669b:	add    rsp,0x58
  41669f:	pop    rbx
  4166a0:	pop    r12
  4166a2:	pop    r13
  4166a4:	pop    r14
  4166a6:	pop    r15
  4166a8:	pop    rbp
  4166a9:	ret    
  4166aa:	inc    DWORD PTR [rbx+0x38]
  4166ad:	jmp    41647a <strcmp@plt+0x12ce2>
  4166b2:	lea    rax,[rip+0x4e707]        # 464dc0 <strcmp@plt+0x61628>
  4166b9:	cmp    DWORD PTR [rax],0x3
  4166bc:	jl     4164d2 <strcmp@plt+0x12d3a>
  4166c2:	mov    rdi,QWORD PTR [rbx]
  4166c5:	call   422e20 <strcmp@plt+0x1f688>
  4166ca:	lea    rsi,[rip+0x30b2b]        # 4471fc <strcmp@plt+0x43a64>
  4166d1:	mov    edi,0x7
  4166d6:	mov    rdx,rax
  4166d9:	xor    eax,eax
  4166db:	call   42e520 <strcmp@plt+0x2ad88>
  4166e0:	jmp    4164d2 <strcmp@plt+0x12d3a>
  4166e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4166ef:	nop
  4166f0:	mov    edi,0x30
  4166f5:	jmp    431d60 <strcmp@plt+0x2e5c8>
  4166fa:	nop    WORD PTR [rax+rax*1+0x0]
  416700:	lea    rax,[rip+0x4e021]        # 464728 <strcmp@plt+0x60f90>
  416707:	ret    
  416708:	nop    DWORD PTR [rax+rax*1+0x0]
  416710:	push   r14
  416712:	push   rbx
  416713:	push   rax
  416714:	mov    rbx,rdi
  416717:	lea    r14,[rip+0x59df2]        # 470510 <strcmp@plt+0x6cd78>
  41671e:	cmp    DWORD PTR [r14],0xa
  416722:	je     41674f <strcmp@plt+0x12fb7>
  416724:	mov    edi,0x2
  416729:	call   434c00 <strcmp@plt+0x31468>
  41672e:	lea    rcx,[rip+0x59df3]        # 470528 <strcmp@plt+0x6cd90>
  416735:	mov    rdi,QWORD PTR [rcx]
  416738:	lea    rsi,[rip+0xc1]        # 416800 <strcmp@plt+0x13068>
  41673f:	mov    rdx,rbx
  416742:	mov    ecx,eax
  416744:	call   4349c0 <strcmp@plt+0x31228>
  416749:	cmp    DWORD PTR [r14],0x2
  41674d:	je     416774 <strcmp@plt+0x12fdc>
  41674f:	mov    edi,0xa
  416754:	call   434c00 <strcmp@plt+0x31468>
  416759:	lea    rcx,[rip+0x59dc8]        # 470528 <strcmp@plt+0x6cd90>
  416760:	mov    rdi,QWORD PTR [rcx]
  416763:	lea    rsi,[rip+0x96]        # 416800 <strcmp@plt+0x13068>
  41676a:	mov    rdx,rbx
  41676d:	mov    ecx,eax
  41676f:	call   4349c0 <strcmp@plt+0x31228>
  416774:	mov    edi,0x10
  416779:	call   431d90 <strcmp@plt+0x2e5f8>
  41677e:	mov    rcx,QWORD PTR [rbx+0x28]
  416782:	mov    QWORD PTR [rcx+0x50],rax
  416786:	mov    rdi,rax
  416789:	call   416ca0 <strcmp@plt+0x13508>
  41678e:	mov    eax,0x1
  416793:	add    rsp,0x8
  416797:	pop    rbx
  416798:	pop    r14
  41679a:	ret    
  41679b:	nop    DWORD PTR [rax+rax*1+0x0]
  4167a0:	mov    rax,QWORD PTR [rdi+0x28]
  4167a4:	mov    rdi,QWORD PTR [rax+0x50]
  4167a8:	jmp    403790 <free@plt>
  4167ad:	nop    DWORD PTR [rax]
  4167b0:	push   rax
  4167b1:	lea    rax,[rip+0x4df70]        # 464728 <strcmp@plt+0x60f90>
  4167b8:	mov    rdi,QWORD PTR [rax+0x50]
  4167bc:	cmp    edx,0xa
  4167bf:	je     4167d3 <strcmp@plt+0x1303b>
  4167c1:	cmp    edx,0x2
  4167c4:	jne    4167e4 <strcmp@plt+0x1304c>
  4167c6:	test   rdi,rdi
  4167c9:	je     4167e4 <strcmp@plt+0x1304c>
  4167cb:	cmp    QWORD PTR [rdi],0x0
  4167cf:	jne    4167e4 <strcmp@plt+0x1304c>
  4167d1:	jmp    4167df <strcmp@plt+0x13047>
  4167d3:	test   rdi,rdi
  4167d6:	je     4167e4 <strcmp@plt+0x1304c>
  4167d8:	cmp    QWORD PTR [rdi+0x8],0x0
  4167dd:	jne    4167e4 <strcmp@plt+0x1304c>
  4167df:	call   416ca0 <strcmp@plt+0x13508>
  4167e4:	mov    eax,0x1
  4167e9:	pop    rcx
  4167ea:	ret    
  4167eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4167f0:	mov    eax,0x1
  4167f5:	ret    
  4167f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416800:	push   r15
  416802:	push   r14
  416804:	push   r12
  416806:	push   rbx
  416807:	sub    rsp,0x58
  41680b:	mov    rbx,rdi
  41680e:	mov    rax,QWORD PTR [rdi+0x10]
  416812:	mov    rax,QWORD PTR [rax]
  416815:	cmp    DWORD PTR [rax+0x18],0x0
  416819:	je     416825 <strcmp@plt+0x1308d>
  41681b:	mov    rax,QWORD PTR [rax+0x8]
  41681f:	mov    r14,QWORD PTR [rax+0x10]
  416823:	jmp    416828 <strcmp@plt+0x13090>
  416825:	xor    r14d,r14d
  416828:	mov    WORD PTR [rsp+0x50],0x10f6
  41682f:	xor    eax,eax
  416831:	call   421ea0 <strcmp@plt+0x1e708>
  416836:	mov    r15,rax
  416839:	mov    edi,DWORD PTR [rbx+0x18]
  41683c:	lea    rdx,[rsp+0x10]
  416841:	mov    rsi,rax
  416844:	call   434e30 <strcmp@plt+0x31698>
  416849:	cmp    eax,0x1
  41684c:	jne    416881 <strcmp@plt+0x130e9>
  41684e:	cmp    DWORD PTR [r15+0x14],0x3
  416853:	ja     4168af <strcmp@plt+0x13117>
  416855:	lea    rax,[rip+0x4e564]        # 464dc0 <strcmp@plt+0x61628>
  41685c:	xor    ebx,ebx
  41685e:	cmp    DWORD PTR [rax],0x3
  416861:	jl     416931 <strcmp@plt+0x13199>
  416867:	lea    rsi,[rip+0x30c80]        # 4474ee <strcmp@plt+0x43d56>
  41686e:	xor    ebx,ebx
  416870:	mov    edi,0x7
  416875:	xor    eax,eax
  416877:	call   42e520 <strcmp@plt+0x2ad88>
  41687c:	jmp    416931 <strcmp@plt+0x13199>
  416881:	lea    rax,[rip+0x4e538]        # 464dc0 <strcmp@plt+0x61628>
  416888:	cmp    DWORD PTR [rax],0x0
  41688b:	jle    4168a0 <strcmp@plt+0x13108>
  41688d:	lea    rsi,[rip+0x30c0e]        # 4474a2 <strcmp@plt+0x43d0a>
  416894:	mov    edi,0x5
  416899:	xor    eax,eax
  41689b:	call   42e520 <strcmp@plt+0x2ad88>
  4168a0:	mov    rdi,r15
  4168a3:	call   42dd40 <strcmp@plt+0x2a5a8>
  4168a8:	xor    ebx,ebx
  4168aa:	jmp    416931 <strcmp@plt+0x13199>
  4168af:	mov    eax,DWORD PTR [r15+0x38]
  4168b3:	sub    eax,DWORD PTR [r15+0x30]
  4168b7:	mov    WORD PTR [r15+0x24],ax
  4168bc:	lea    rax,[rip+0x4e4fd]        # 464dc0 <strcmp@plt+0x61628>
  4168c3:	cmp    DWORD PTR [rax],0x0
  4168c6:	jle    416914 <strcmp@plt+0x1317c>
  4168c8:	mov    rdi,r15
  4168cb:	call   422570 <strcmp@plt+0x1edd8>
  4168d0:	mov    r12,rax
  4168d3:	lea    rdi,[rsp+0x30]
  4168d8:	call   422e20 <strcmp@plt+0x1f688>
  4168dd:	mov    rbx,rax
  4168e0:	lea    rdi,[rsp+0x10]
  4168e5:	call   422e20 <strcmp@plt+0x1f688>
  4168ea:	movzx  r9d,WORD PTR [rsp+0x52]
  4168f0:	movzx  ecx,WORD PTR [rsp+0x50]
  4168f5:	mov    DWORD PTR [rsp],ecx
  4168f8:	lea    rsi,[rip+0x30c33]        # 447532 <strcmp@plt+0x43d9a>
  4168ff:	mov    edi,0x5
  416904:	mov    rdx,r12
  416907:	mov    rcx,rbx
  41690a:	mov    r8,rax
  41690d:	xor    eax,eax
  41690f:	call   42e520 <strcmp@plt+0x2ad88>
  416914:	lea    rdx,[rsp+0x10]
  416919:	mov    rdi,r14
  41691c:	mov    rsi,r15
  41691f:	call   407860 <strcmp@plt+0x40c8>
  416924:	mov    rdi,r15
  416927:	call   42dd40 <strcmp@plt+0x2a5a8>
  41692c:	mov    ebx,0x1
  416931:	mov    eax,ebx
  416933:	add    rsp,0x58
  416937:	pop    rbx
  416938:	pop    r12
  41693a:	pop    r14
  41693c:	pop    r15
  41693e:	ret    
  41693f:	nop
  416940:	push   rbp
  416941:	push   r15
  416943:	push   r14
  416945:	push   r13
  416947:	push   r12
  416949:	push   rbx
  41694a:	push   rax
  41694b:	lea    r14,[rdx+0x20]
  41694f:	cmp    DWORD PTR [rdx+0x38],0x1
  416953:	jne    416a54 <strcmp@plt+0x132bc>
  416959:	mov    rbx,rdx
  41695c:	mov    r15,rsi
  41695f:	mov    rbp,rdi
  416962:	cmp    DWORD PTR [rdx+0x18],0x1
  416966:	je     416997 <strcmp@plt+0x131ff>
  416968:	lea    rax,[rip+0x591a9]        # 46fb18 <strcmp@plt+0x6c380>
  41696f:	mov    rax,QWORD PTR [rax]
  416972:	mov    rdi,r14
  416975:	call   QWORD PTR [rax+0x20]
  416978:	test   rax,rax
  41697b:	je     416abd <strcmp@plt+0x13325>
  416981:	mov    r12,rax
  416984:	mov    rdi,rbx
  416987:	mov    rsi,rax
  41698a:	call   423260 <strcmp@plt+0x1fac8>
  41698f:	mov    rdi,r12
  416992:	call   422c90 <strcmp@plt+0x1f4f8>
  416997:	mov    rax,QWORD PTR [rbp+0x28]
  41699b:	mov    rdi,QWORD PTR [rax+0x50]
  41699f:	mov    rsi,rbx
  4169a2:	call   416d60 <strcmp@plt+0x135c8>
  4169a7:	xor    r12d,r12d
  4169aa:	cmp    eax,0xfffffff7
  4169ad:	je     416b16 <strcmp@plt+0x1337e>
  4169b3:	mov    ebp,eax
  4169b5:	mov    rdi,rbx
  4169b8:	call   423a30 <strcmp@plt+0x20298>
  4169bd:	mov    r13d,eax
  4169c0:	mov    rdi,r14
  4169c3:	call   423a30 <strcmp@plt+0x20298>
  4169c8:	cmp    r13d,eax
  4169cb:	jne    416a8d <strcmp@plt+0x132f5>
  4169d1:	movzx  esi,WORD PTR [rbx+0x40]
  4169d5:	movzx  edx,WORD PTR [rbx+0x42]
  4169d9:	mov    rdi,r15
  4169dc:	mov    rcx,rbx
  4169df:	mov    r8,r14
  4169e2:	call   432d70 <strcmp@plt+0x2f5d8>
  4169e7:	mov    rsi,QWORD PTR [r15+0x38]
  4169eb:	mov    edx,DWORD PTR [r15+0x14]
  4169ef:	mov    edi,ebp
  4169f1:	mov    rcx,r14
  4169f4:	call   435ab0 <strcmp@plt+0x32318>
  4169f9:	lea    rcx,[rip+0x4e3c0]        # 464dc0 <strcmp@plt+0x61628>
  416a00:	mov    ecx,DWORD PTR [rcx]
  416a02:	cmp    eax,0x1
  416a05:	jne    416ae3 <strcmp@plt+0x1334b>
  416a0b:	mov    r12d,0x1
  416a11:	test   ecx,ecx
  416a13:	jle    416b16 <strcmp@plt+0x1337e>
  416a19:	mov    rdi,rbx
  416a1c:	call   422e20 <strcmp@plt+0x1f688>
  416a21:	mov    rbp,rax
  416a24:	mov    rdi,r14
  416a27:	call   422e20 <strcmp@plt+0x1f688>
  416a2c:	movzx  r8d,WORD PTR [rbx+0x40]
  416a31:	movzx  r9d,WORD PTR [rbx+0x42]
  416a36:	lea    rsi,[rip+0x30c44]        # 447681 <strcmp@plt+0x43ee9>
  416a3d:	mov    edi,0x5
  416a42:	mov    rdx,rbp
  416a45:	mov    rcx,rax
  416a48:	xor    eax,eax
  416a4a:	call   42e520 <strcmp@plt+0x2ad88>
  416a4f:	jmp    416b16 <strcmp@plt+0x1337e>
  416a54:	lea    rax,[rip+0x4e365]        # 464dc0 <strcmp@plt+0x61628>
  416a5b:	xor    r12d,r12d
  416a5e:	cmp    DWORD PTR [rax],0x2
  416a61:	jl     416b16 <strcmp@plt+0x1337e>
  416a67:	mov    rdi,r14
  416a6a:	call   422e20 <strcmp@plt+0x1f688>
  416a6f:	lea    rsi,[rip+0x30ae5]        # 44755b <strcmp@plt+0x43dc3>
  416a76:	xor    r12d,r12d
  416a79:	mov    edi,0x6
  416a7e:	mov    rdx,rax
  416a81:	xor    eax,eax
  416a83:	call   42e520 <strcmp@plt+0x2ad88>
  416a88:	jmp    416b16 <strcmp@plt+0x1337e>
  416a8d:	lea    rax,[rip+0x4e32c]        # 464dc0 <strcmp@plt+0x61628>
  416a94:	cmp    DWORD PTR [rax],0x2
  416a97:	jl     416b16 <strcmp@plt+0x1337e>
  416a99:	mov    rdi,rbx
  416a9c:	call   423c50 <strcmp@plt+0x204b8>
  416aa1:	mov    rbx,rax
  416aa4:	mov    rdi,r14
  416aa7:	call   423c50 <strcmp@plt+0x204b8>
  416aac:	lea    rsi,[rip+0x30b3c]        # 4475ef <strcmp@plt+0x43e57>
  416ab3:	xor    r12d,r12d
  416ab6:	mov    edi,0x6
  416abb:	jmp    416b09 <strcmp@plt+0x13371>
  416abd:	mov    rdi,r14
  416ac0:	call   422e20 <strcmp@plt+0x1f688>
  416ac5:	lea    rsi,[rip+0x30aea]        # 4475b6 <strcmp@plt+0x43e1e>
  416acc:	mov    edi,0x2
  416ad1:	mov    rdx,rax
  416ad4:	xor    eax,eax
  416ad6:	call   42e520 <strcmp@plt+0x2ad88>
  416adb:	mov    r12d,0xfffffff7
  416ae1:	jmp    416b16 <strcmp@plt+0x1337e>
  416ae3:	test   ecx,ecx
  416ae5:	jle    416b16 <strcmp@plt+0x1337e>
  416ae7:	mov    rdi,rbx
  416aea:	call   422e20 <strcmp@plt+0x1f688>
  416aef:	mov    rbx,rax
  416af2:	mov    rdi,r14
  416af5:	call   422e20 <strcmp@plt+0x1f688>
  416afa:	lea    rsi,[rip+0x30b4e]        # 44764f <strcmp@plt+0x43eb7>
  416b01:	xor    r12d,r12d
  416b04:	mov    edi,0x5
  416b09:	mov    rdx,rbx
  416b0c:	mov    rcx,rax
  416b0f:	xor    eax,eax
  416b11:	call   42e520 <strcmp@plt+0x2ad88>
  416b16:	mov    eax,r12d
  416b19:	add    rsp,0x8
  416b1d:	pop    rbx
  416b1e:	pop    r12
  416b20:	pop    r13
  416b22:	pop    r14
  416b24:	pop    r15
  416b26:	pop    rbp
  416b27:	ret    
  416b28:	nop    DWORD PTR [rax+rax*1+0x0]
  416b30:	push   rbx
  416b31:	mov    rax,QWORD PTR [rdi+0x28]
  416b35:	mov    rax,QWORD PTR [rax+0x50]
  416b39:	cmp    esi,0xa
  416b3c:	je     416b53 <strcmp@plt+0x133bb>
  416b3e:	mov    edx,esi
  416b40:	cmp    esi,0x2
  416b43:	jne    416b62 <strcmp@plt+0x133ca>
  416b45:	mov    rax,QWORD PTR [rax]
  416b48:	test   rax,rax
  416b4b:	je     416b6e <strcmp@plt+0x133d6>
  416b4d:	mov    rbx,QWORD PTR [rax+0x10]
  416b51:	jmp    416b87 <strcmp@plt+0x133ef>
  416b53:	mov    rax,QWORD PTR [rax+0x8]
  416b57:	test   rax,rax
  416b5a:	je     416b6e <strcmp@plt+0x133d6>
  416b5c:	mov    rbx,QWORD PTR [rax+0x18]
  416b60:	jmp    416b87 <strcmp@plt+0x133ef>
  416b62:	lea    rax,[rip+0x4e257]        # 464dc0 <strcmp@plt+0x61628>
  416b69:	cmp    DWORD PTR [rax],0x2
  416b6c:	jge    416b72 <strcmp@plt+0x133da>
  416b6e:	xor    ebx,ebx
  416b70:	jmp    416b87 <strcmp@plt+0x133ef>
  416b72:	lea    rsi,[rip+0x30c7d]        # 4477f6 <strcmp@plt+0x4405e>
  416b79:	xor    ebx,ebx
  416b7b:	mov    edi,0x6
  416b80:	xor    eax,eax
  416b82:	call   42e520 <strcmp@plt+0x2ad88>
  416b87:	mov    rax,rbx
  416b8a:	pop    rbx
  416b8b:	ret    
  416b8c:	nop    DWORD PTR [rax+0x0]
  416b90:	mov    eax,0x1
  416b95:	ret    
  416b96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ba0:	push   r14
  416ba2:	push   rbx
  416ba3:	push   rax
  416ba4:	mov    rbx,rsi
  416ba7:	mov    rax,QWORD PTR [rdi+0x28]
  416bab:	mov    r14,QWORD PTR [rax+0x50]
  416baf:	cmp    DWORD PTR [rcx+0x18],0x0
  416bb3:	je     416bf1 <strcmp@plt+0x13459>
  416bb5:	cmp    BYTE PTR [rbx+0xc],0x1
  416bb9:	jne    416c2f <strcmp@plt+0x13497>
  416bbb:	mov    rdi,rcx
  416bbe:	call   422ef0 <strcmp@plt+0x1f758>
  416bc3:	cmp    ax,0x2
  416bc7:	jne    416bcf <strcmp@plt+0x13437>
  416bc9:	cmp    QWORD PTR [r14],0x0
  416bcd:	je     416bdc <strcmp@plt+0x13444>
  416bcf:	cmp    ax,0xa
  416bd3:	jne    416c2f <strcmp@plt+0x13497>
  416bd5:	cmp    QWORD PTR [r14+0x8],0x0
  416bda:	jne    416c2f <strcmp@plt+0x13497>
  416bdc:	lea    rax,[rip+0x4e1dd]        # 464dc0 <strcmp@plt+0x61628>
  416be3:	cmp    DWORD PTR [rax],0x2
  416be6:	jl     416c27 <strcmp@plt+0x1348f>
  416be8:	lea    rsi,[rip+0x30b13]        # 447702 <strcmp@plt+0x43f6a>
  416bef:	jmp    416c1b <strcmp@plt+0x13483>
  416bf1:	mov    rdi,rdx
  416bf4:	call   422ef0 <strcmp@plt+0x1f758>
  416bf9:	xor    ecx,ecx
  416bfb:	cmp    ax,0x2
  416bff:	setne  cl
  416c02:	cmp    QWORD PTR [r14+rcx*8],rbx
  416c06:	jne    416c2f <strcmp@plt+0x13497>
  416c08:	lea    rax,[rip+0x4e1b1]        # 464dc0 <strcmp@plt+0x61628>
  416c0f:	cmp    DWORD PTR [rax],0x2
  416c12:	jl     416c27 <strcmp@plt+0x1348f>
  416c14:	lea    rsi,[rip+0x30a96]        # 4476b1 <strcmp@plt+0x43f19>
  416c1b:	mov    edi,0x6
  416c20:	xor    eax,eax
  416c22:	call   42e520 <strcmp@plt+0x2ad88>
  416c27:	mov    rdi,r14
  416c2a:	call   416ca0 <strcmp@plt+0x13508>
  416c2f:	mov    eax,0x1
  416c34:	add    rsp,0x8
  416c38:	pop    rbx
  416c39:	pop    r14
  416c3b:	ret    
  416c3c:	nop    DWORD PTR [rax+0x0]
  416c40:	push   rbx
  416c41:	mov    rax,QWORD PTR [rdi+0x28]
  416c45:	mov    rbx,QWORD PTR [rax+0x50]
  416c49:	mov    rax,QWORD PTR [rbx]
  416c4c:	cmp    rax,rsi
  416c4f:	je     416c64 <strcmp@plt+0x134cc>
  416c51:	mov    rcx,QWORD PTR [rbx+0x8]
  416c55:	test   rcx,rcx
  416c58:	je     416c64 <strcmp@plt+0x134cc>
  416c5a:	test   rax,rax
  416c5d:	je     416c64 <strcmp@plt+0x134cc>
  416c5f:	cmp    rcx,rsi
  416c62:	jne    416c8b <strcmp@plt+0x134f3>
  416c64:	lea    rax,[rip+0x4e155]        # 464dc0 <strcmp@plt+0x61628>
  416c6b:	cmp    DWORD PTR [rax],0x2
  416c6e:	jl     416c83 <strcmp@plt+0x134eb>
  416c70:	lea    rsi,[rip+0x30acb]        # 447742 <strcmp@plt+0x43faa>
  416c77:	mov    edi,0x6
  416c7c:	xor    eax,eax
  416c7e:	call   42e520 <strcmp@plt+0x2ad88>
  416c83:	mov    rdi,rbx
  416c86:	call   416ca0 <strcmp@plt+0x13508>
  416c8b:	mov    eax,0x1
  416c90:	pop    rbx
  416c91:	ret    
  416c92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c9c:	nop    DWORD PTR [rax+0x0]
  416ca0:	push   r15
  416ca2:	push   r14
  416ca4:	push   rbx
  416ca5:	mov    rbx,rdi
  416ca8:	mov    edi,0x2
  416cad:	call   43ac50 <strcmp@plt+0x374b8>
  416cb2:	mov    QWORD PTR [rbx],rax
  416cb5:	lea    r15,[rip+0x4e104]        # 464dc0 <strcmp@plt+0x61628>
  416cbc:	test   rax,rax
  416cbf:	je     416cec <strcmp@plt+0x13554>
  416cc1:	cmp    DWORD PTR [r15],0x2
  416cc5:	jl     416cec <strcmp@plt+0x13554>
  416cc7:	mov    r14,QWORD PTR [rax]
  416cca:	mov    rdi,QWORD PTR [rax+0x10]
  416cce:	call   422e20 <strcmp@plt+0x1f688>
  416cd3:	lea    rsi,[rip+0x30aaa]        # 447784 <strcmp@plt+0x43fec>
  416cda:	mov    edi,0x6
  416cdf:	mov    rdx,r14
  416ce2:	mov    rcx,rax
  416ce5:	xor    eax,eax
  416ce7:	call   42e520 <strcmp@plt+0x2ad88>
  416cec:	mov    edi,0xa
  416cf1:	call   43ac50 <strcmp@plt+0x374b8>
  416cf6:	mov    QWORD PTR [rbx+0x8],rax
  416cfa:	test   rax,rax
  416cfd:	je     416d2a <strcmp@plt+0x13592>
  416cff:	cmp    DWORD PTR [r15],0x2
  416d03:	jl     416d2a <strcmp@plt+0x13592>
  416d05:	mov    r14,QWORD PTR [rax]
  416d08:	mov    rdi,QWORD PTR [rax+0x18]
  416d0c:	call   422e20 <strcmp@plt+0x1f688>
  416d11:	lea    rsi,[rip+0x30a8f]        # 4477a7 <strcmp@plt+0x4400f>
  416d18:	mov    edi,0x6
  416d1d:	mov    rdx,r14
  416d20:	mov    rcx,rax
  416d23:	xor    eax,eax
  416d25:	call   42e520 <strcmp@plt+0x2ad88>
  416d2a:	cmp    QWORD PTR [rbx],0x0
  416d2e:	jne    416d37 <strcmp@plt+0x1359f>
  416d30:	cmp    QWORD PTR [rbx+0x8],0x0
  416d35:	je     416d3d <strcmp@plt+0x135a5>
  416d37:	pop    rbx
  416d38:	pop    r14
  416d3a:	pop    r15
  416d3c:	ret    
  416d3d:	lea    rsi,[rip+0x30a86]        # 4477ca <strcmp@plt+0x44032>
  416d44:	mov    edi,0x2
  416d49:	xor    eax,eax
  416d4b:	pop    rbx
  416d4c:	pop    r14
  416d4e:	pop    r15
  416d50:	jmp    42e520 <strcmp@plt+0x2ad88>
  416d55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416d5f:	nop
  416d60:	push   rbp
  416d61:	push   r15
  416d63:	push   r14
  416d65:	push   r12
  416d67:	push   rbx
  416d68:	mov    rbx,rsi
  416d6b:	mov    r14,rdi
  416d6e:	lea    rdi,[rsi+0x20]
  416d72:	call   422ef0 <strcmp@plt+0x1f758>
  416d77:	mov    ebp,eax
  416d79:	movzx  r15d,ax
  416d7d:	cmp    DWORD PTR [rbx+0x18],0x0
  416d81:	je     416dbb <strcmp@plt+0x13623>
  416d83:	mov    rdi,rbx
  416d86:	call   43a990 <strcmp@plt+0x371f8>
  416d8b:	test   rax,rax
  416d8e:	je     416ddd <strcmp@plt+0x13645>
  416d90:	mov    rdi,rax
  416d93:	mov    esi,r15d
  416d96:	call   43ad20 <strcmp@plt+0x37588>
  416d9b:	test   eax,eax
  416d9d:	jns    416f1e <strcmp@plt+0x13786>
  416da3:	lea    rsi,[rip+0x30b93]        # 44793d <strcmp@plt+0x441a5>
  416daa:	mov    edi,0x2
  416daf:	xor    eax,eax
  416db1:	call   42e520 <strcmp@plt+0x2ad88>
  416db6:	jmp    416f19 <strcmp@plt+0x13781>
  416dbb:	cmp    bp,0xa
  416dbf:	je     416e2b <strcmp@plt+0x13693>
  416dc1:	cmp    bp,0x2
  416dc5:	jne    416e4d <strcmp@plt+0x136b5>
  416dcb:	mov    rax,QWORD PTR [r14]
  416dce:	test   rax,rax
  416dd1:	je     416e6f <strcmp@plt+0x136d7>
  416dd7:	add    rax,0x10
  416ddb:	jmp    416e38 <strcmp@plt+0x136a0>
  416ddd:	lea    r12,[rip+0x4dfdc]        # 464dc0 <strcmp@plt+0x61628>
  416de4:	cmp    DWORD PTR [r12],0x2
  416de9:	jl     416e09 <strcmp@plt+0x13671>
  416deb:	mov    rdi,rbx
  416dee:	call   422e20 <strcmp@plt+0x1f688>
  416df3:	lea    rsi,[rip+0x30a89]        # 447883 <strcmp@plt+0x440eb>
  416dfa:	mov    edi,0x6
  416dff:	mov    rdx,rax
  416e02:	xor    eax,eax
  416e04:	call   42e520 <strcmp@plt+0x2ad88>
  416e09:	cmp    bp,0xa
  416e0d:	je     416e8e <strcmp@plt+0x136f6>
  416e0f:	cmp    bp,0x2
  416e13:	jne    416ed3 <strcmp@plt+0x1373b>
  416e19:	mov    rax,QWORD PTR [r14]
  416e1c:	test   rax,rax
  416e1f:	je     416ef0 <strcmp@plt+0x13758>
  416e25:	add    rax,0x10
  416e29:	jmp    416e9b <strcmp@plt+0x13703>
  416e2b:	mov    rax,QWORD PTR [r14+0x8]
  416e2f:	test   rax,rax
  416e32:	je     416e6f <strcmp@plt+0x136d7>
  416e34:	add    rax,0x18
  416e38:	mov    rsi,QWORD PTR [rax]
  416e3b:	test   rsi,rsi
  416e3e:	je     416e6f <strcmp@plt+0x136d7>
  416e40:	mov    rdi,rbx
  416e43:	call   423260 <strcmp@plt+0x1fac8>
  416e48:	jmp    416d83 <strcmp@plt+0x135eb>
  416e4d:	lea    rax,[rip+0x4df6c]        # 464dc0 <strcmp@plt+0x61628>
  416e54:	cmp    DWORD PTR [rax],0x2
  416e57:	jl     416e6f <strcmp@plt+0x136d7>
  416e59:	lea    rsi,[rip+0x30996]        # 4477f6 <strcmp@plt+0x4405e>
  416e60:	mov    edi,0x6
  416e65:	mov    edx,r15d
  416e68:	xor    eax,eax
  416e6a:	call   42e520 <strcmp@plt+0x2ad88>
  416e6f:	cmp    bp,0x2
  416e73:	lea    rax,[rip+0x2cac9]        # 443943 <strcmp@plt+0x401ab>
  416e7a:	lea    rdx,[rip+0x2cac7]        # 443948 <strcmp@plt+0x401b0>
  416e81:	cmove  rdx,rax
  416e85:	lea    rsi,[rip+0x309a7]        # 447833 <strcmp@plt+0x4409b>
  416e8c:	jmp    416f0d <strcmp@plt+0x13775>
  416e8e:	mov    rax,QWORD PTR [r14+0x8]
  416e92:	test   rax,rax
  416e95:	je     416ef0 <strcmp@plt+0x13758>
  416e97:	add    rax,0x18
  416e9b:	mov    rsi,QWORD PTR [rax]
  416e9e:	test   rsi,rsi
  416ea1:	je     416ef0 <strcmp@plt+0x13758>
  416ea3:	mov    rdi,rbx
  416ea6:	call   423260 <strcmp@plt+0x1fac8>
  416eab:	cmp    bp,0xa
  416eaf:	je     416f27 <strcmp@plt+0x1378f>
  416eb1:	cmp    bp,0x2
  416eb5:	jne    416da3 <strcmp@plt+0x1360b>
  416ebb:	mov    rax,QWORD PTR [r14]
  416ebe:	test   rax,rax
  416ec1:	je     416da3 <strcmp@plt+0x1360b>
  416ec7:	mov    eax,DWORD PTR [rax+0x30]
  416eca:	test   eax,eax
  416ecc:	jns    416f1e <strcmp@plt+0x13786>
  416ece:	jmp    416da3 <strcmp@plt+0x1360b>
  416ed3:	cmp    DWORD PTR [r12],0x2
  416ed8:	jl     416ef0 <strcmp@plt+0x13758>
  416eda:	lea    rsi,[rip+0x30915]        # 4477f6 <strcmp@plt+0x4405e>
  416ee1:	mov    edi,0x6
  416ee6:	mov    edx,r15d
  416ee9:	xor    eax,eax
  416eeb:	call   42e520 <strcmp@plt+0x2ad88>
  416ef0:	cmp    bp,0x2
  416ef4:	lea    rax,[rip+0x2ca48]        # 443943 <strcmp@plt+0x401ab>
  416efb:	lea    rdx,[rip+0x2ca46]        # 443948 <strcmp@plt+0x401b0>
  416f02:	cmove  rdx,rax
  416f06:	lea    rsi,[rip+0x309d8]        # 4478e5 <strcmp@plt+0x4414d>
  416f0d:	mov    edi,0x2
  416f12:	xor    eax,eax
  416f14:	call   42e520 <strcmp@plt+0x2ad88>
  416f19:	mov    eax,0xfffffff7
  416f1e:	pop    rbx
  416f1f:	pop    r12
  416f21:	pop    r14
  416f23:	pop    r15
  416f25:	pop    rbp
  416f26:	ret    
  416f27:	mov    rax,QWORD PTR [r14+0x8]
  416f2b:	test   rax,rax
  416f2e:	je     416da3 <strcmp@plt+0x1360b>
  416f34:	mov    eax,DWORD PTR [rax+0x34]
  416f37:	test   eax,eax
  416f39:	jns    416f1e <strcmp@plt+0x13786>
  416f3b:	jmp    416da3 <strcmp@plt+0x1360b>
  416f40:	push   rbx
  416f41:	cmp    esi,0xa
  416f44:	je     416f5b <strcmp@plt+0x137c3>
  416f46:	mov    edx,esi
  416f48:	cmp    esi,0x2
  416f4b:	jne    416f6a <strcmp@plt+0x137d2>
  416f4d:	mov    rax,QWORD PTR [rdi]
  416f50:	test   rax,rax
  416f53:	je     416f76 <strcmp@plt+0x137de>
  416f55:	mov    rbx,QWORD PTR [rax+0x10]
  416f59:	jmp    416f8f <strcmp@plt+0x137f7>
  416f5b:	mov    rax,QWORD PTR [rdi+0x8]
  416f5f:	test   rax,rax
  416f62:	je     416f76 <strcmp@plt+0x137de>
  416f64:	mov    rbx,QWORD PTR [rax+0x18]
  416f68:	jmp    416f8f <strcmp@plt+0x137f7>
  416f6a:	lea    rax,[rip+0x4de4f]        # 464dc0 <strcmp@plt+0x61628>
  416f71:	cmp    DWORD PTR [rax],0x2
  416f74:	jge    416f7a <strcmp@plt+0x137e2>
  416f76:	xor    ebx,ebx
  416f78:	jmp    416f8f <strcmp@plt+0x137f7>
  416f7a:	lea    rsi,[rip+0x30875]        # 4477f6 <strcmp@plt+0x4405e>
  416f81:	xor    ebx,ebx
  416f83:	mov    edi,0x6
  416f88:	xor    eax,eax
  416f8a:	call   42e520 <strcmp@plt+0x2ad88>
  416f8f:	mov    rax,rbx
  416f92:	pop    rbx
  416f93:	ret    
  416f94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416f9e:	xchg   ax,ax
  416fa0:	cmp    esi,0xa
  416fa3:	je     416fae <strcmp@plt+0x13816>
  416fa5:	cmp    esi,0x2
  416fa8:	jne    416fb6 <strcmp@plt+0x1381e>
  416faa:	mov    rax,QWORD PTR [rdi]
  416fad:	ret    
  416fae:	add    rdi,0x8
  416fb2:	mov    rax,QWORD PTR [rdi]
  416fb5:	ret    
  416fb6:	xor    eax,eax
  416fb8:	ret    
  416fb9:	nop    DWORD PTR [rax+0x0]
  416fc0:	cmp    esi,0xa
  416fc3:	je     416fdb <strcmp@plt+0x13843>
  416fc5:	mov    eax,0xffffffff
  416fca:	cmp    esi,0x2
  416fcd:	jne    416fe7 <strcmp@plt+0x1384f>
  416fcf:	mov    rax,QWORD PTR [rdi]
  416fd2:	test   rax,rax
  416fd5:	je     416fe8 <strcmp@plt+0x13850>
  416fd7:	mov    eax,DWORD PTR [rax+0x30]
  416fda:	ret    
  416fdb:	mov    rax,QWORD PTR [rdi+0x8]
  416fdf:	test   rax,rax
  416fe2:	je     416fe8 <strcmp@plt+0x13850>
  416fe4:	mov    eax,DWORD PTR [rax+0x34]
  416fe7:	ret    
  416fe8:	mov    eax,0xfffffff7
  416fed:	ret    
  416fee:	xchg   ax,ax
  416ff0:	push   rax
  416ff1:	call   422ef0 <strcmp@plt+0x1f758>
  416ff6:	xor    ecx,ecx
  416ff8:	cmp    ax,0x2
  416ffc:	sete   cl
  416fff:	mov    eax,0x2
  417004:	sub    eax,ecx
  417006:	pop    rcx
  417007:	ret    
  417008:	nop    DWORD PTR [rax+rax*1+0x0]
  417010:	push   rbp
  417011:	push   rbx
  417012:	push   rax
  417013:	mov    ebp,edx
  417015:	mov    rbx,rdi
  417018:	mov    QWORD PTR [rdi],0x8
  41701f:	add    rdi,0x4
  417023:	call   433cf0 <strcmp@plt+0x30558>
  417028:	or     BYTE PTR [rbx],0x4
  41702b:	mov    BYTE PTR [rbx+0x3],bpl
  41702f:	add    rsp,0x8
  417033:	pop    rbx
  417034:	pop    rbp
  417035:	ret    
  417036:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417040:	push   rbp
  417041:	push   r14
  417043:	push   rbx
  417044:	mov    r14d,edx
  417047:	mov    ebp,esi
  417049:	mov    esi,0x8
  41704e:	call   42e040 <strcmp@plt+0x2a8a8>
  417053:	mov    rbx,rax
  417056:	mov    QWORD PTR [rax],0x8
  41705d:	lea    rdi,[rax+0x4]
  417061:	mov    esi,ebp
  417063:	call   433cf0 <strcmp@plt+0x30558>
  417068:	or     BYTE PTR [rbx],0x4
  41706b:	mov    BYTE PTR [rbx+0x3],r14b
  41706f:	mov    rax,rbx
  417072:	pop    rbx
  417073:	pop    r14
  417075:	pop    rbp
  417076:	ret    
  417077:	nop    WORD PTR [rax+rax*1+0x0]
  417080:	push   rbp
  417081:	push   r15
  417083:	push   r14
  417085:	push   r13
  417087:	push   r12
  417089:	push   rbx
  41708a:	sub    rsp,0x18
  41708e:	mov    DWORD PTR [rsp+0x14],r9d
  417093:	mov    r12,r8
  417096:	mov    r13,rcx
  417099:	mov    r15d,edx
  41709c:	mov    ebp,esi
  41709e:	mov    rbx,rdi
  4170a1:	mov    r14,QWORD PTR [rsp+0x50]
  4170a6:	mov    DWORD PTR [rsp+0x10],0x0
  4170ae:	mov    DWORD PTR [rsp+0xc],0x0
  4170b6:	mov    rdi,QWORD PTR [rdi+0x38]
  4170ba:	lea    rsi,[rsp+0x10]
  4170bf:	lea    rdx,[rsp+0xc]
  4170c4:	call   4338d0 <strcmp@plt+0x30138>
  4170c9:	mov    rdi,r14
  4170cc:	call   422ef0 <strcmp@plt+0x1f758>
  4170d1:	cmp    ax,0x2
  4170d5:	je     4170e6 <strcmp@plt+0x1394e>
  4170d7:	cmp    ax,0xa
  4170db:	jne    417143 <strcmp@plt+0x139ab>
  4170dd:	mov    DWORD PTR [rsp+0x8],ebp
  4170e1:	mov    r14b,0x2
  4170e4:	jmp    4170ed <strcmp@plt+0x13955>
  4170e6:	mov    DWORD PTR [rsp+0x8],ebp
  4170ea:	mov    r14b,0x1
  4170ed:	mov    rdi,rbx
  4170f0:	mov    esi,0x8
  4170f5:	call   42e040 <strcmp@plt+0x2a8a8>
  4170fa:	mov    rbp,rax
  4170fd:	mov    QWORD PTR [rax],0x8
  417104:	lea    rdi,[rax+0x4]
  417108:	mov    esi,DWORD PTR [rsp+0x14]
  41710c:	call   433cf0 <strcmp@plt+0x30558>
  417111:	or     BYTE PTR [rbp+0x0],0x4
  417115:	mov    BYTE PTR [rbp+0x3],r14b
  417119:	movzx  esi,WORD PTR [rsp+0x8]
  41711e:	movzx  edx,r15w
  417122:	mov    rdi,rbx
  417125:	mov    rcx,r13
  417128:	mov    r8,r12
  41712b:	call   432d70 <strcmp@plt+0x2f5d8>
  417130:	movzx  edi,WORD PTR [rbx+0x1a]
  417134:	cmp    rdi,0xffff
  41713b:	je     417166 <strcmp@plt+0x139ce>
  41713d:	add    rdi,QWORD PTR [rbx+0x30]
  417141:	jmp    417168 <strcmp@plt+0x139d0>
  417143:	lea    rax,[rip+0x4dc76]        # 464dc0 <strcmp@plt+0x61628>
  41714a:	cmp    DWORD PTR [rax],0x0
  41714d:	jle    41718b <strcmp@plt+0x139f3>
  41714f:	lea    rsi,[rip+0x3080d]        # 447963 <strcmp@plt+0x441cb>
  417156:	xor    ebx,ebx
  417158:	mov    edi,0x5
  41715d:	xor    eax,eax
  41715f:	call   42e520 <strcmp@plt+0x2ad88>
  417164:	jmp    417179 <strcmp@plt+0x139e1>
  417166:	xor    edi,edi
  417168:	mov    esi,DWORD PTR [rsp+0x10]
  41716c:	mov    edx,DWORD PTR [rsp+0xc]
  417170:	call   433870 <strcmp@plt+0x300d8>
  417175:	mov    rbx,QWORD PTR [rbx+0x38]
  417179:	mov    rax,rbx
  41717c:	add    rsp,0x18
  417180:	pop    rbx
  417181:	pop    r12
  417183:	pop    r13
  417185:	pop    r14
  417187:	pop    r15
  417189:	pop    rbp
  41718a:	ret    
  41718b:	xor    ebx,ebx
  41718d:	jmp    417179 <strcmp@plt+0x139e1>
  41718f:	nop
  417190:	mov    ecx,DWORD PTR [rdi+0x14]
  417193:	cmp    ecx,0x8
  417196:	jae    41719b <strcmp@plt+0x13a03>
  417198:	xor    eax,eax
  41719a:	ret    
  41719b:	mov    rax,QWORD PTR [rdi+0x38]
  41719f:	lea    rdx,[rax+0x8]
  4171a3:	mov    QWORD PTR [rdi+0x38],rdx
  4171a7:	add    ecx,0xfffffff8
  4171aa:	mov    DWORD PTR [rdi+0x14],ecx
  4171ad:	ret    
  4171ae:	xchg   ax,ax
  4171b0:	add    rdi,0x4
  4171b4:	jmp    433d10 <strcmp@plt+0x30578>
  4171b9:	nop    DWORD PTR [rax+0x0]
  4171c0:	lea    rax,[rip+0x4d5b9]        # 464780 <strcmp@plt+0x60fe8>
  4171c7:	lea    rcx,[rip+0x5123a]        # 468408 <strcmp@plt+0x64c70>
  4171ce:	mov    QWORD PTR [rcx],rax
  4171d1:	ret    
  4171d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4171dc:	nop    DWORD PTR [rax+0x0]
  4171e0:	push   rbx
  4171e1:	mov    rbx,rdi
  4171e4:	mov    edi,0x1
  4171e9:	mov    esi,0x28
  4171ee:	call   4032d0 <calloc@plt>
  4171f3:	mov    QWORD PTR [rbx],rax
  4171f6:	lea    rax,[rbx+0x8]
  4171fa:	mov    QWORD PTR [rbx+0x8],rax
  4171fe:	mov    QWORD PTR [rbx+0x10],rax
  417202:	pop    rbx
  417203:	ret    
  417204:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41720e:	xchg   ax,ax
  417210:	push   rbp
  417211:	push   r15
  417213:	push   r14
  417215:	push   r12
  417217:	push   rbx
  417218:	mov    r12,QWORD PTR [rdi]
  41721b:	cmp    DWORD PTR [r12],0x0
  417220:	je     417279 <strcmp@plt+0x13ae1>
  417222:	mov    r14,rdi
  417225:	xor    ebp,ebp
  417227:	mov    r15d,0x3
  41722d:	xor    ebx,ebx
  41722f:	jmp    41724b <strcmp@plt+0x13ab3>
  417231:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41723b:	nop    DWORD PTR [rax+rax*1+0x0]
  417240:	inc    ebx
  417242:	add    ebp,0x2
  417245:	cmp    ebx,DWORD PTR [r12]
  417249:	je     417279 <strcmp@plt+0x13ae1>
  41724b:	mov    rax,QWORD PTR [r12+0x10]
  417250:	mov    ecx,ebx
  417252:	shr    ecx,0x4
  417255:	mov    edx,ebp
  417257:	and    dl,0x1e
  41725a:	shlx   edx,r15d,edx
  41725f:	test   DWORD PTR [rax+rcx*4],edx
  417262:	jne    417240 <strcmp@plt+0x13aa8>
  417264:	mov    rax,QWORD PTR [r12+0x20]
  417269:	mov    ecx,ebx
  41726b:	mov    rdi,QWORD PTR [rax+rcx*8]
  41726f:	call   41fef0 <strcmp@plt+0x1c758>
  417274:	mov    r12,QWORD PTR [r14]
  417277:	jmp    417240 <strcmp@plt+0x13aa8>
  417279:	test   r12,r12
  41727c:	je     4172ac <strcmp@plt+0x13b14>
  41727e:	mov    rdi,QWORD PTR [r12+0x18]
  417283:	call   403790 <free@plt>
  417288:	mov    rdi,QWORD PTR [r12+0x10]
  41728d:	call   403790 <free@plt>
  417292:	mov    rdi,QWORD PTR [r12+0x20]
  417297:	call   403790 <free@plt>
  41729c:	mov    rdi,r12
  41729f:	pop    rbx
  4172a0:	pop    r12
  4172a2:	pop    r14
  4172a4:	pop    r15
  4172a6:	pop    rbp
  4172a7:	jmp    403790 <free@plt>
  4172ac:	pop    rbx
  4172ad:	pop    r12
  4172af:	pop    r14
  4172b1:	pop    r15
  4172b3:	pop    rbp
  4172b4:	ret    
  4172b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4172bf:	nop
  4172c0:	push   rbx
  4172c1:	mov    edi,0x18
  4172c6:	call   431d60 <strcmp@plt+0x2e5c8>
  4172cb:	mov    rbx,rax
  4172ce:	mov    edi,0x1
  4172d3:	mov    esi,0x28
  4172d8:	call   4032d0 <calloc@plt>
  4172dd:	mov    QWORD PTR [rbx],rax
  4172e0:	lea    rax,[rbx+0x8]
  4172e4:	mov    QWORD PTR [rbx+0x8],rax
  4172e8:	mov    QWORD PTR [rbx+0x10],rax
  4172ec:	mov    rax,rbx
  4172ef:	pop    rbx
  4172f0:	ret    
  4172f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4172fb:	nop    DWORD PTR [rax+rax*1+0x0]
  417300:	push   rbx
  417301:	mov    rbx,rdi
  417304:	call   417210 <strcmp@plt+0x13a78>
  417309:	mov    rdi,rbx
  41730c:	pop    rbx
  41730d:	jmp    403790 <free@plt>
  417312:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41731c:	nop    DWORD PTR [rax+0x0]
  417320:	push   rbp
  417321:	push   r15
  417323:	push   r14
  417325:	push   r13
  417327:	push   r12
  417329:	push   rbx
  41732a:	sub    rsp,0x38
  41732e:	mov    rbx,QWORD PTR [rdi]
  417331:	mov    eax,DWORD PTR [rbx+0x4]
  417334:	cmp    eax,0x2710
  417339:	jb     417365 <strcmp@plt+0x13bcd>
  41733b:	lea    rax,[rip+0x4da7e]        # 464dc0 <strcmp@plt+0x61628>
  417342:	cmp    DWORD PTR [rax],0x0
  417345:	jle    417471 <strcmp@plt+0x13cd9>
  41734b:	lea    rsi,[rip+0x30656]        # 4479a8 <strcmp@plt+0x44210>
  417352:	xor    ebx,ebx
  417354:	mov    edi,0x5
  417359:	xor    eax,eax
  41735b:	call   42e520 <strcmp@plt+0x2ad88>
  417360:	jmp    417578 <strcmp@plt+0x13de0>
  417365:	mov    r15,rdx
  417368:	mov    r14,rsi
  41736b:	mov    r13,rdi
  41736e:	mov    ecx,DWORD PTR [rbx+0x8]
  417371:	cmp    ecx,DWORD PTR [rbx+0xc]
  417374:	jb     41738f <strcmp@plt+0x13bf7>
  417376:	mov    ecx,DWORD PTR [rbx]
  417378:	add    eax,eax
  41737a:	xor    edx,edx
  41737c:	cmp    ecx,eax
  41737e:	setbe  dl
  417381:	lea    esi,[rcx+rdx*2]
  417384:	add    esi,0xffffffff
  417387:	mov    rdi,rbx
  41738a:	call   417880 <strcmp@plt+0x140e8>
  41738f:	mov    r12d,DWORD PTR [rbx]
  417392:	lea    ebp,[r12-0x1]
  417397:	mov    rdi,r14
  41739a:	call   433320 <strcmp@plt+0x2fb88>
  41739f:	mov    ecx,ebp
  4173a1:	mov    edi,eax
  4173a3:	and    edi,ebp
  4173a5:	mov    r8,QWORD PTR [rbx+0x10]
  4173a9:	mov    ebp,edi
  4173ab:	shr    ebp,0x4
  4173ae:	lea    edx,[rdi+rdi*1]
  4173b1:	mov    esi,0x2
  4173b6:	shlx   edx,esi,edx
  4173bb:	test   DWORD PTR [r8+rbp*4],edx
  4173bf:	jne    4174d9 <strcmp@plt+0x13d41>
  4173c5:	mov    QWORD PTR [rsp+0x8],rbx
  4173ca:	mov    QWORD PTR [rsp+0x10],r13
  4173cf:	mov    QWORD PTR [rsp+0x18],r15
  4173d4:	mov    QWORD PTR [rsp+0x20],r14
  4173d9:	mov    edx,eax
  4173db:	shr    edx,0x3
  4173de:	shl    eax,0x3
  4173e1:	xor    eax,edx
  4173e3:	or     eax,0x1
  4173e6:	and    eax,ecx
  4173e8:	mov    QWORD PTR [rsp+0x30],r12
  4173ed:	mov    rbp,r12
  4173f0:	mov    r15d,ebp
  4173f3:	mov    r14d,edi
  4173f6:	mov    DWORD PTR [rsp+0x2c],eax
  4173fa:	jmp    417413 <strcmp@plt+0x13c7b>
  4173fc:	nop    DWORD PTR [rax+0x0]
  417400:	bt     esi,r13d
  417404:	cmovb  r15d,r14d
  417408:	add    r14d,eax
  41740b:	and    r14d,ecx
  41740e:	cmp    r14d,edi
  417411:	je     417489 <strcmp@plt+0x13cf1>
  417413:	mov    ebx,r14d
  417416:	shr    ebx,0x4
  417419:	mov    esi,DWORD PTR [r8+rbx*4]
  41741d:	lea    r13d,[r14+r14*1]
  417421:	and    r13d,0x1e
  417425:	shrx   edx,esi,r13d
  41742a:	test   dl,0x2
  41742d:	jne    417478 <strcmp@plt+0x13ce0>
  41742f:	test   dl,0x1
  417432:	jne    417400 <strcmp@plt+0x13c68>
  417434:	mov    rbp,rdi
  417437:	mov    r12d,ecx
  41743a:	mov    rax,QWORD PTR [rsp+0x8]
  41743f:	mov    rax,QWORD PTR [rax+0x18]
  417443:	mov    ecx,r14d
  417446:	mov    rdi,QWORD PTR [rax+rcx*8]
  41744a:	mov    rsi,QWORD PTR [rsp+0x20]
  41744f:	call   433490 <strcmp@plt+0x2fcf8>
  417454:	mov    rcx,QWORD PTR [rsp+0x8]
  417459:	mov    r8,QWORD PTR [rcx+0x10]
  41745d:	test   eax,eax
  41745f:	jne    417478 <strcmp@plt+0x13ce0>
  417461:	mov    esi,DWORD PTR [r8+rbx*4]
  417465:	mov    ecx,r12d
  417468:	mov    rdi,rbp
  41746b:	mov    eax,DWORD PTR [rsp+0x2c]
  41746f:	jmp    417400 <strcmp@plt+0x13c68>
  417471:	xor    ebx,ebx
  417473:	jmp    417578 <strcmp@plt+0x13de0>
  417478:	mov    rbp,QWORD PTR [rsp+0x18]
  41747d:	mov    r13,QWORD PTR [rsp+0x10]
  417482:	mov    rcx,QWORD PTR [rsp+0x30]
  417487:	jmp    417499 <strcmp@plt+0x13d01>
  417489:	mov    r14d,edi
  41748c:	mov    ecx,r15d
  41748f:	mov    rbp,QWORD PTR [rsp+0x18]
  417494:	mov    r13,QWORD PTR [rsp+0x10]
  417499:	mov    rax,QWORD PTR [rsp+0x8]
  41749e:	cmp    ecx,DWORD PTR [rax]
  4174a0:	jne    4174ca <strcmp@plt+0x13d32>
  4174a2:	mov    eax,r14d
  4174a5:	shr    eax,0x4
  4174a8:	lea    edx,[r14+r14*1]
  4174ac:	mov    esi,0x2
  4174b1:	shlx   edx,esi,edx
  4174b6:	test   DWORD PTR [r8+rax*4],edx
  4174ba:	mov    edi,r15d
  4174bd:	cmove  edi,r14d
  4174c1:	cmp    r15d,ecx
  4174c4:	cmove  edi,r14d
  4174c8:	jmp    4174cc <strcmp@plt+0x13d34>
  4174ca:	mov    edi,ecx
  4174cc:	mov    r14,QWORD PTR [rsp+0x20]
  4174d1:	mov    rbx,QWORD PTR [rsp+0x8]
  4174d6:	mov    r15,rbp
  4174d9:	mov    eax,edi
  4174db:	shr    eax,0x4
  4174de:	lea    edx,[rdi+rdi*1]
  4174e1:	and    edx,0x1e
  4174e4:	shrx   ecx,DWORD PTR [r8+rax*4],edx
  4174ea:	test   cl,0x2
  4174ed:	jne    4174f8 <strcmp@plt+0x13d60>
  4174ef:	test   cl,0x1
  4174f2:	jne    41751d <strcmp@plt+0x13d85>
  4174f4:	mov    ecx,edi
  4174f6:	jmp    41753d <strcmp@plt+0x13da5>
  4174f8:	mov    rsi,QWORD PTR [rbx+0x18]
  4174fc:	mov    ecx,edi
  4174fe:	mov    QWORD PTR [rsi+rcx*8],r14
  417502:	mov    rsi,QWORD PTR [rbx+0x10]
  417506:	mov    edi,0x3
  41750b:	shlx   edx,edi,edx
  417510:	not    edx
  417512:	and    DWORD PTR [rsi+rax*4],edx
  417515:	inc    DWORD PTR [rbx+0x4]
  417518:	inc    DWORD PTR [rbx+0x8]
  41751b:	jmp    41753d <strcmp@plt+0x13da5>
  41751d:	mov    rsi,QWORD PTR [rbx+0x18]
  417521:	mov    ecx,edi
  417523:	mov    QWORD PTR [rsi+rcx*8],r14
  417527:	mov    rsi,QWORD PTR [rbx+0x10]
  41752b:	mov    edi,0x3
  417530:	shlx   edx,edi,edx
  417535:	not    edx
  417537:	and    DWORD PTR [rsi+rax*4],edx
  41753a:	inc    DWORD PTR [rbx+0x4]
  41753d:	mov    rax,QWORD PTR [r13+0x0]
  417541:	mov    rax,QWORD PTR [rax+0x20]
  417545:	mov    QWORD PTR [rax+rcx*8],r15
  417549:	lea    rax,[rip+0x4d870]        # 464dc0 <strcmp@plt+0x61628>
  417550:	mov    ebx,0x1
  417555:	cmp    DWORD PTR [rax],0x3
  417558:	jl     417578 <strcmp@plt+0x13de0>
  41755a:	mov    rdi,r14
  41755d:	call   433570 <strcmp@plt+0x2fdd8>
  417562:	lea    rsi,[rip+0x30474]        # 4479dd <strcmp@plt+0x44245>
  417569:	mov    edi,0x7
  41756e:	mov    rdx,rax
  417571:	xor    eax,eax
  417573:	call   42e520 <strcmp@plt+0x2ad88>
  417578:	mov    eax,ebx
  41757a:	add    rsp,0x38
  41757e:	pop    rbx
  41757f:	pop    r12
  417581:	pop    r13
  417583:	pop    r14
  417585:	pop    r15
  417587:	pop    rbp
  417588:	ret    
  417589:	nop    DWORD PTR [rax+0x0]
  417590:	push   rbp
  417591:	push   r15
  417593:	push   r14
  417595:	push   r13
  417597:	push   r12
  417599:	push   rbx
  41759a:	sub    rsp,0x18
  41759e:	mov    rbx,rdi
  4175a1:	mov    rbp,QWORD PTR [rdi]
  4175a4:	mov    ecx,DWORD PTR [rbp+0x0]
  4175a7:	test   ecx,ecx
  4175a9:	je     41765f <strcmp@plt+0x13ec7>
  4175af:	mov    QWORD PTR [rsp+0x10],rbx
  4175b4:	mov    ebx,ecx
  4175b6:	dec    ebx
  4175b8:	mov    QWORD PTR [rsp],rsi
  4175bc:	mov    rdi,rsi
  4175bf:	call   433320 <strcmp@plt+0x2fb88>
  4175c4:	mov    r13d,eax
  4175c7:	mov    r12d,eax
  4175ca:	and    r12d,ebx
  4175cd:	shr    eax,0x3
  4175d0:	shl    r13d,0x3
  4175d4:	xor    r13d,eax
  4175d7:	or     r13d,0x1
  4175db:	mov    DWORD PTR [rsp+0xc],ebx
  4175df:	and    r13d,ebx
  4175e2:	mov    r14d,r12d
  4175e5:	jmp    4175fd <strcmp@plt+0x13e65>
  4175e7:	nop    WORD PTR [rax+rax*1+0x0]
  4175f0:	add    r14d,r13d
  4175f3:	and    r14d,DWORD PTR [rsp+0xc]
  4175f8:	cmp    r14d,r12d
  4175fb:	je     417664 <strcmp@plt+0x13ecc>
  4175fd:	mov    rax,QWORD PTR [rbp+0x10]
  417601:	mov    ebx,r14d
  417604:	shr    ebx,0x4
  417607:	mov    eax,DWORD PTR [rax+rbx*4]
  41760a:	lea    r15d,[r14+r14*1]
  41760e:	and    r15d,0x1e
  417612:	shrx   ecx,eax,r15d
  417617:	test   cl,0x2
  41761a:	jne    417642 <strcmp@plt+0x13eaa>
  41761c:	test   cl,0x1
  41761f:	jne    4175f0 <strcmp@plt+0x13e58>
  417621:	mov    rax,QWORD PTR [rbp+0x18]
  417625:	mov    ecx,r14d
  417628:	mov    rdi,QWORD PTR [rax+rcx*8]
  41762c:	mov    rsi,QWORD PTR [rsp]
  417630:	call   433490 <strcmp@plt+0x2fcf8>
  417635:	test   eax,eax
  417637:	je     4175f0 <strcmp@plt+0x13e58>
  417639:	mov    eax,ebx
  41763b:	mov    rcx,QWORD PTR [rbp+0x10]
  41763f:	mov    eax,DWORD PTR [rcx+rax*4]
  417642:	mov    ecx,0x3
  417647:	shlx   ecx,ecx,r15d
  41764c:	test   eax,ecx
  41764e:	mov    rbx,QWORD PTR [rsp+0x10]
  417653:	mov    rsi,QWORD PTR [rsp]
  417657:	je     417671 <strcmp@plt+0x13ed9>
  417659:	mov    r14d,DWORD PTR [rbp+0x0]
  41765d:	jmp    417671 <strcmp@plt+0x13ed9>
  41765f:	xor    r14d,r14d
  417662:	jmp    417671 <strcmp@plt+0x13ed9>
  417664:	mov    r14d,DWORD PTR [rbp+0x0]
  417668:	mov    rbx,QWORD PTR [rsp+0x10]
  41766d:	mov    rsi,QWORD PTR [rsp]
  417671:	mov    rax,QWORD PTR [rbx]
  417674:	cmp    r14d,DWORD PTR [rax]
  417677:	je     4176ea <strcmp@plt+0x13f52>
  417679:	mov    rax,QWORD PTR [rax+0x20]
  41767d:	mov    ecx,r14d
  417680:	mov    rbp,QWORD PTR [rax+rcx*8]
  417684:	lea    rax,[rip+0x4d735]        # 464dc0 <strcmp@plt+0x61628>
  41768b:	cmp    DWORD PTR [rax],0x3
  41768e:	jl     4176ae <strcmp@plt+0x13f16>
  417690:	mov    rdi,rsi
  417693:	call   433570 <strcmp@plt+0x2fdd8>
  417698:	lea    rsi,[rip+0x30361]        # 447a00 <strcmp@plt+0x44268>
  41769f:	mov    edi,0x7
  4176a4:	mov    rdx,rax
  4176a7:	xor    eax,eax
  4176a9:	call   42e520 <strcmp@plt+0x2ad88>
  4176ae:	mov    rdi,rbp
  4176b1:	call   41fef0 <strcmp@plt+0x1c758>
  4176b6:	mov    rax,QWORD PTR [rbx]
  4176b9:	cmp    DWORD PTR [rax],r14d
  4176bc:	je     4176ea <strcmp@plt+0x13f52>
  4176be:	mov    rcx,QWORD PTR [rax+0x10]
  4176c2:	mov    edx,r14d
  4176c5:	shr    edx,0x4
  4176c8:	mov    esi,DWORD PTR [rcx+rdx*4]
  4176cb:	add    r14d,r14d
  4176ce:	and    r14d,0x1e
  4176d2:	mov    edi,0x3
  4176d7:	shlx   edi,edi,r14d
  4176dc:	test   esi,edi
  4176de:	jne    4176ea <strcmp@plt+0x13f52>
  4176e0:	bts    esi,r14d
  4176e4:	mov    DWORD PTR [rcx+rdx*4],esi
  4176e7:	dec    DWORD PTR [rax+0x4]
  4176ea:	add    rsp,0x18
  4176ee:	pop    rbx
  4176ef:	pop    r12
  4176f1:	pop    r13
  4176f3:	pop    r14
  4176f5:	pop    r15
  4176f7:	pop    rbp
  4176f8:	ret    
  4176f9:	nop    DWORD PTR [rax+0x0]
  417700:	push   r15
  417702:	push   r14
  417704:	push   rbx
  417705:	mov    ebx,esi
  417707:	mov    r14,rdi
  41770a:	mov    rax,QWORD PTR [rdi]
  41770d:	mov    rax,QWORD PTR [rax+0x20]
  417711:	mov    ecx,esi
  417713:	mov    r15,QWORD PTR [rax+rcx*8]
  417717:	lea    rax,[rip+0x4d6a2]        # 464dc0 <strcmp@plt+0x61628>
  41771e:	cmp    DWORD PTR [rax],0x3
  417721:	jl     417742 <strcmp@plt+0x13faa>
  417723:	mov    rdi,QWORD PTR [r15+0x8]
  417727:	call   433570 <strcmp@plt+0x2fdd8>
  41772c:	lea    rsi,[rip+0x302ee]        # 447a21 <strcmp@plt+0x44289>
  417733:	mov    edi,0x7
  417738:	mov    rdx,rax
  41773b:	xor    eax,eax
  41773d:	call   42e520 <strcmp@plt+0x2ad88>
  417742:	mov    rdi,r15
  417745:	call   41fef0 <strcmp@plt+0x1c758>
  41774a:	mov    rax,QWORD PTR [r14]
  41774d:	cmp    DWORD PTR [rax],ebx
  41774f:	je     417779 <strcmp@plt+0x13fe1>
  417751:	mov    rcx,QWORD PTR [rax+0x10]
  417755:	mov    edx,ebx
  417757:	shr    edx,0x4
  41775a:	mov    esi,DWORD PTR [rcx+rdx*4]
  41775d:	add    ebx,ebx
  41775f:	and    ebx,0x1e
  417762:	mov    edi,0x3
  417767:	shlx   edi,edi,ebx
  41776c:	test   esi,edi
  41776e:	jne    417779 <strcmp@plt+0x13fe1>
  417770:	bts    esi,ebx
  417773:	mov    DWORD PTR [rcx+rdx*4],esi
  417776:	dec    DWORD PTR [rax+0x4]
  417779:	pop    rbx
  41777a:	pop    r14
  41777c:	pop    r15
  41777e:	ret    
  41777f:	nop
  417780:	push   rbp
  417781:	push   r15
  417783:	push   r14
  417785:	push   r13
  417787:	push   r12
  417789:	push   rbx
  41778a:	sub    rsp,0x18
  41778e:	mov    rbp,QWORD PTR [rdi]
  417791:	mov    ecx,DWORD PTR [rbp+0x0]
  417794:	test   ecx,ecx
  417796:	je     41784c <strcmp@plt+0x140b4>
  41779c:	mov    QWORD PTR [rsp+0x8],rdi
  4177a1:	mov    ebx,ecx
  4177a3:	dec    ebx
  4177a5:	mov    QWORD PTR [rsp+0x10],rsi
  4177aa:	mov    rdi,rsi
  4177ad:	call   433320 <strcmp@plt+0x2fb88>
  4177b2:	mov    r13d,eax
  4177b5:	mov    r12d,eax
  4177b8:	and    r12d,ebx
  4177bb:	shr    eax,0x3
  4177be:	shl    r13d,0x3
  4177c2:	xor    r13d,eax
  4177c5:	or     r13d,0x1
  4177c9:	mov    DWORD PTR [rsp+0x4],ebx
  4177cd:	and    r13d,ebx
  4177d0:	mov    r14d,r12d
  4177d3:	jmp    4177ed <strcmp@plt+0x14055>
  4177d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4177df:	nop
  4177e0:	add    r14d,r13d
  4177e3:	and    r14d,DWORD PTR [rsp+0x4]
  4177e8:	cmp    r14d,r12d
  4177eb:	je     417851 <strcmp@plt+0x140b9>
  4177ed:	mov    rax,QWORD PTR [rbp+0x10]
  4177f1:	mov    ebx,r14d
  4177f4:	shr    ebx,0x4
  4177f7:	mov    eax,DWORD PTR [rax+rbx*4]
  4177fa:	lea    r15d,[r14+r14*1]
  4177fe:	and    r15d,0x1e
  417802:	shrx   ecx,eax,r15d
  417807:	test   cl,0x2
  41780a:	jne    417833 <strcmp@plt+0x1409b>
  41780c:	test   cl,0x1
  41780f:	jne    4177e0 <strcmp@plt+0x14048>
  417811:	mov    rax,QWORD PTR [rbp+0x18]
  417815:	mov    ecx,r14d
  417818:	mov    rdi,QWORD PTR [rax+rcx*8]
  41781c:	mov    rsi,QWORD PTR [rsp+0x10]
  417821:	call   433490 <strcmp@plt+0x2fcf8>
  417826:	test   eax,eax
  417828:	je     4177e0 <strcmp@plt+0x14048>
  41782a:	mov    eax,ebx
  41782c:	mov    rcx,QWORD PTR [rbp+0x10]
  417830:	mov    eax,DWORD PTR [rcx+rax*4]
  417833:	mov    ecx,0x3
  417838:	shlx   ecx,ecx,r15d
  41783d:	test   eax,ecx
  41783f:	mov    rdi,QWORD PTR [rsp+0x8]
  417844:	je     41785a <strcmp@plt+0x140c2>
  417846:	mov    r14d,DWORD PTR [rbp+0x0]
  41784a:	jmp    41785a <strcmp@plt+0x140c2>
  41784c:	xor    r14d,r14d
  41784f:	jmp    41785a <strcmp@plt+0x140c2>
  417851:	mov    r14d,DWORD PTR [rbp+0x0]
  417855:	mov    rdi,QWORD PTR [rsp+0x8]
  41785a:	mov    rax,QWORD PTR [rdi]
  41785d:	cmp    r14d,DWORD PTR [rax]
  417860:	jne    417866 <strcmp@plt+0x140ce>
  417862:	xor    eax,eax
  417864:	jmp    417871 <strcmp@plt+0x140d9>
  417866:	mov    rax,QWORD PTR [rax+0x20]
  41786a:	mov    ecx,r14d
  41786d:	mov    rax,QWORD PTR [rax+rcx*8]
  417871:	add    rsp,0x18
  417875:	pop    rbx
  417876:	pop    r12
  417878:	pop    r13
  41787a:	pop    r14
  41787c:	pop    r15
  41787e:	pop    rbp
  41787f:	ret    
  417880:	push   rbp
  417881:	push   r15
  417883:	push   r14
  417885:	push   r13
  417887:	push   r12
  417889:	push   rbx
  41788a:	sub    rsp,0x28
  41788e:	dec    esi
  417890:	mov    eax,esi
  417892:	shr    eax,1
  417894:	or     eax,esi
  417896:	mov    ecx,eax
  417898:	shr    ecx,0x2
  41789b:	or     ecx,eax
  41789d:	mov    eax,ecx
  41789f:	shr    eax,0x4
  4178a2:	or     eax,ecx
  4178a4:	mov    ecx,eax
  4178a6:	shr    ecx,0x8
  4178a9:	or     ecx,eax
  4178ab:	mov    ebx,ecx
  4178ad:	shr    ebx,0x10
  4178b0:	or     ebx,ecx
  4178b2:	inc    ebx
  4178b4:	cmp    ebx,0x4
  4178b7:	mov    eax,0x4
  4178bc:	cmovbe ebx,eax
  4178bf:	vcvtsi2sd xmm0,xmm0,rbx
  4178c4:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x300cc]        # 447998 <strcmp@plt+0x44200>
  4178cc:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x300cc]        # 4479a0 <strcmp@plt+0x44208>
  4178d4:	vcvttsd2si r14,xmm0
  4178d9:	cmp    DWORD PTR [rdi+0x4],r14d
  4178dd:	jae    417b0d <strcmp@plt+0x14375>
  4178e3:	mov    rdx,rdi
  4178e6:	mov    r15d,ebx
  4178e9:	shr    r15d,0x2
  4178ed:	and    r15d,0xfffffffc
  4178f1:	cmp    ebx,0x10
  4178f4:	cmovb  r15d,eax
  4178f8:	mov    rdi,r15
  4178fb:	mov    QWORD PTR [rsp],rdx
  4178ff:	call   403520 <malloc@plt>
  417904:	mov    r13,rax
  417907:	mov    rdi,rax
  41790a:	mov    esi,0xaa
  41790f:	mov    rdx,r15
  417912:	call   403260 <memset@plt>
  417917:	mov    rbp,QWORD PTR [rsp]
  41791b:	mov    eax,DWORD PTR [rbp+0x0]
  41791e:	cmp    eax,ebx
  417920:	jae    417958 <strcmp@plt+0x141c0>
  417922:	mov    rdi,QWORD PTR [rbp+0x18]
  417926:	mov    r15d,ebx
  417929:	shl    r15,0x3
  41792d:	mov    rsi,r15
  417930:	call   403660 <realloc@plt>
  417935:	mov    rcx,QWORD PTR [rsp]
  417939:	mov    QWORD PTR [rcx+0x18],rax
  41793d:	mov    rax,QWORD PTR [rsp]
  417941:	mov    rdi,QWORD PTR [rax+0x20]
  417945:	mov    rsi,r15
  417948:	call   403660 <realloc@plt>
  41794d:	mov    rbp,QWORD PTR [rsp]
  417951:	mov    QWORD PTR [rbp+0x20],rax
  417955:	mov    eax,DWORD PTR [rbp+0x0]
  417958:	test   eax,eax
  41795a:	je     417af3 <strcmp@plt+0x1435b>
  417960:	mov    QWORD PTR [rsp+0x10],r14
  417965:	mov    QWORD PTR [rsp+0x18],rbx
  41796a:	lea    r14d,[rbx-0x1]
  41796e:	xor    edi,edi
  417970:	mov    r12d,0x2
  417976:	jmp    4179a6 <strcmp@plt+0x1420e>
  417978:	nop    DWORD PTR [rax+rax*1+0x0]
  417980:	mov    rcx,QWORD PTR [rbp+0x18]
  417984:	mov    edx,ebx
  417986:	mov    QWORD PTR [rcx+rdx*8],r15
  41798a:	mov    rcx,QWORD PTR [rbp+0x20]
  41798e:	mov    rsi,QWORD PTR [rsp+0x8]
  417993:	mov    QWORD PTR [rcx+rdx*8],rsi
  417997:	mov    rdi,QWORD PTR [rsp+0x20]
  41799c:	inc    edi
  41799e:	cmp    edi,eax
  4179a0:	je     417ab2 <strcmp@plt+0x1431a>
  4179a6:	mov    r8,QWORD PTR [rbp+0x10]
  4179aa:	mov    edx,edi
  4179ac:	shr    edx,0x4
  4179af:	mov    ecx,DWORD PTR [r8+rdx*4]
  4179b3:	lea    esi,[rdi+rdi*1]
  4179b6:	and    esi,0x1e
  4179b9:	mov    ebx,0x3
  4179be:	shlx   ebx,ebx,esi
  4179c3:	test   ecx,ebx
  4179c5:	jne    41799c <strcmp@plt+0x14204>
  4179c7:	lea    rdx,[r8+rdx*4]
  4179cb:	mov    QWORD PTR [rsp+0x20],rdi
  4179d0:	mov    eax,edi
  4179d2:	mov    rdi,QWORD PTR [rbp+0x18]
  4179d6:	mov    rbx,QWORD PTR [rbp+0x20]
  4179da:	mov    r15,QWORD PTR [rdi+rax*8]
  4179de:	mov    rax,QWORD PTR [rbx+rax*8]
  4179e2:	mov    QWORD PTR [rsp+0x8],rax
  4179e7:	mov    r8d,esi
  4179ea:	nop    WORD PTR [rax+rax*1+0x0]
  4179f0:	mov    esi,0x1
  4179f5:	shlx   rax,rsi,r8
  4179fa:	or     eax,ecx
  4179fc:	mov    DWORD PTR [rdx],eax
  4179fe:	mov    rdi,r15
  417a01:	call   433320 <strcmp@plt+0x2fb88>
  417a06:	mov    ecx,eax
  417a08:	shr    ecx,0x3
  417a0b:	mov    esi,eax
  417a0d:	shl    esi,0x3
  417a10:	xor    esi,ecx
  417a12:	or     esi,0x1
  417a15:	and    esi,r14d
  417a18:	nop    DWORD PTR [rax+rax*1+0x0]
  417a20:	mov    ebx,eax
  417a22:	and    ebx,r14d
  417a25:	mov    ecx,ebx
  417a27:	shr    ecx,0x4
  417a2a:	mov    edi,DWORD PTR [r13+rcx*4+0x0]
  417a2f:	lea    edx,[rbx+rbx*1]
  417a32:	and    edx,0x1e
  417a35:	shlx   ebp,r12d,edx
  417a3a:	lea    eax,[rbx+rsi*1]
  417a3d:	test   ebp,edi
  417a3f:	je     417a20 <strcmp@plt+0x14288>
  417a41:	mov    esi,ecx
  417a43:	shlx   eax,r12d,edx
  417a48:	andn   eax,eax,edi
  417a4d:	mov    DWORD PTR [r13+rsi*4+0x0],eax
  417a52:	mov    rbp,QWORD PTR [rsp]
  417a56:	mov    eax,DWORD PTR [rbp+0x0]
  417a59:	cmp    ebx,eax
  417a5b:	jae    417980 <strcmp@plt+0x141e8>
  417a61:	mov    rcx,QWORD PTR [rbp+0x10]
  417a65:	mov    edi,0x3
  417a6a:	shlx   edi,edi,edx
  417a6f:	test   DWORD PTR [rcx+rsi*4],edi
  417a72:	jne    417980 <strcmp@plt+0x141e8>
  417a78:	mov    r8d,edx
  417a7b:	mov    rcx,QWORD PTR [rbp+0x18]
  417a7f:	mov    edx,ebx
  417a81:	mov    rdi,QWORD PTR [rcx+rdx*8]
  417a85:	mov    QWORD PTR [rcx+rdx*8],r15
  417a89:	mov    rcx,QWORD PTR [rbp+0x20]
  417a8d:	mov    rbx,QWORD PTR [rcx+rdx*8]
  417a91:	mov    rax,QWORD PTR [rsp+0x8]
  417a96:	mov    QWORD PTR [rcx+rdx*8],rax
  417a9a:	mov    rcx,QWORD PTR [rbp+0x10]
  417a9e:	lea    rdx,[rcx+rsi*4]
  417aa2:	mov    ecx,DWORD PTR [rcx+rsi*4]
  417aa5:	mov    QWORD PTR [rsp+0x8],rbx
  417aaa:	mov    r15,rdi
  417aad:	jmp    4179f0 <strcmp@plt+0x14258>
  417ab2:	mov    rbx,QWORD PTR [rsp+0x18]
  417ab7:	cmp    eax,ebx
  417ab9:	mov    r14,QWORD PTR [rsp+0x10]
  417abe:	jbe    417af3 <strcmp@plt+0x1435b>
  417ac0:	mov    rdi,QWORD PTR [rbp+0x18]
  417ac4:	mov    r15d,ebx
  417ac7:	shl    r15,0x3
  417acb:	mov    rsi,r15
  417ace:	call   403660 <realloc@plt>
  417ad3:	mov    rcx,QWORD PTR [rsp]
  417ad7:	mov    QWORD PTR [rcx+0x18],rax
  417adb:	mov    rax,QWORD PTR [rsp]
  417adf:	mov    rdi,QWORD PTR [rax+0x20]
  417ae3:	mov    rsi,r15
  417ae6:	call   403660 <realloc@plt>
  417aeb:	mov    rbp,QWORD PTR [rsp]
  417aef:	mov    QWORD PTR [rbp+0x20],rax
  417af3:	mov    rdi,QWORD PTR [rbp+0x10]
  417af7:	call   403790 <free@plt>
  417afc:	mov    QWORD PTR [rbp+0x10],r13
  417b00:	mov    DWORD PTR [rbp+0x0],ebx
  417b03:	mov    eax,DWORD PTR [rbp+0x4]
  417b06:	mov    DWORD PTR [rbp+0x8],eax
  417b09:	mov    DWORD PTR [rbp+0xc],r14d
  417b0d:	add    rsp,0x28
  417b11:	pop    rbx
  417b12:	pop    r12
  417b14:	pop    r13
  417b16:	pop    r14
  417b18:	pop    r15
  417b1a:	pop    rbp
  417b1b:	ret    
  417b1c:	nop    DWORD PTR [rax+0x0]
  417b20:	push   rbp
  417b21:	push   r15
  417b23:	push   r14
  417b25:	push   rbx
  417b26:	push   rax
  417b27:	mov    r14,rdx
  417b2a:	mov    rbx,rsi
  417b2d:	mov    BYTE PTR [rsp+0x3],0x0
  417b32:	mov    BYTE PTR [rsp+0x2],0x0
  417b37:	lea    rdx,[rsp+0x4]
  417b3c:	lea    rcx,[rsp+0x3]
  417b41:	lea    r8,[rsp+0x2]
  417b46:	call   435040 <strcmp@plt+0x318a8>
  417b4b:	xor    ebp,ebp
  417b4d:	cmp    eax,0x1
  417b50:	jne    417c5d <strcmp@plt+0x144c5>
  417b56:	mov    eax,DWORD PTR [rbx+0x38]
  417b59:	sub    eax,DWORD PTR [rbx+0x30]
  417b5c:	cmp    DWORD PTR [rsp+0x4],0x2
  417b61:	jne    417b75 <strcmp@plt+0x143dd>
  417b63:	mov    WORD PTR [rbx+0x1a],ax
  417b67:	mov    rdi,rbx
  417b6a:	call   432a50 <strcmp@plt+0x2f2b8>
  417b6f:	mov    eax,DWORD PTR [rbx+0x38]
  417b72:	sub    eax,DWORD PTR [rbx+0x30]
  417b75:	mov    WORD PTR [rbx+0x1c],ax
  417b79:	mov    rdi,rbx
  417b7c:	call   432a90 <strcmp@plt+0x2f2f8>
  417b81:	movbe  cx,WORD PTR [rax+0x4]
  417b87:	mov    ebp,0xfffffff8
  417b8c:	cmp    cx,0x10
  417b90:	jb     417c5d <strcmp@plt+0x144c5>
  417b96:	movbe  ax,WORD PTR [rax+0x2]
  417b9c:	movzx  eax,ax
  417b9f:	cmp    eax,0x12b6
  417ba4:	je     417bd0 <strcmp@plt+0x14438>
  417ba6:	cmp    eax,0x10f5
  417bab:	jne    417c5d <strcmp@plt+0x144c5>
  417bb1:	mov    rdi,rbx
  417bb4:	call   422a70 <strcmp@plt+0x1f2d8>
  417bb9:	mov    rdi,rax
  417bbc:	mov    r15d,0x10f5
  417bc2:	xor    eax,eax
  417bc4:	test   BYTE PTR [rdi],0x8
  417bc7:	je     417bf1 <strcmp@plt+0x14459>
  417bc9:	call   4239b0 <strcmp@plt+0x20218>
  417bce:	jmp    417bf1 <strcmp@plt+0x14459>
  417bd0:	mov    rdi,rbx
  417bd3:	call   417190 <strcmp@plt+0x139f8>
  417bd8:	mov    r15d,0x12b6
  417bde:	test   BYTE PTR [rax],0x8
  417be1:	je     417bf4 <strcmp@plt+0x1445c>
  417be3:	mov    rdi,rax
  417be6:	call   4171b0 <strcmp@plt+0x13a18>
  417beb:	mov    r15d,0x12b6
  417bf1:	mov    DWORD PTR [r14],eax
  417bf4:	mov    rdi,QWORD PTR [rbx+0x38]
  417bf8:	mov    eax,DWORD PTR [rbx+0x30]
  417bfb:	mov    ecx,edi
  417bfd:	sub    ecx,eax
  417bff:	mov    WORD PTR [rbx+0x20],cx
  417c03:	movzx  esi,BYTE PTR [rsp+0x3]
  417c08:	movzx  edx,BYTE PTR [rsp+0x2]
  417c0d:	call   433870 <strcmp@plt+0x300d8>
  417c12:	lea    rax,[rip+0x4d1a7]        # 464dc0 <strcmp@plt+0x61628>
  417c19:	mov    ebp,0x1
  417c1e:	cmp    DWORD PTR [rax],0x3
  417c21:	jl     417c5d <strcmp@plt+0x144c5>
  417c23:	movzx  edi,WORD PTR [rbx+0x20]
  417c27:	cmp    rdi,0xffff
  417c2e:	je     417c36 <strcmp@plt+0x1449e>
  417c30:	add    rdi,QWORD PTR [rbx+0x30]
  417c34:	jmp    417c38 <strcmp@plt+0x144a0>
  417c36:	xor    edi,edi
  417c38:	lea    rsi,[rip+0x2fe1e]        # 447a5d <strcmp@plt+0x442c5>
  417c3f:	call   433c50 <strcmp@plt+0x304b8>
  417c44:	lea    rsi,[rip+0x2fe03]        # 447a4e <strcmp@plt+0x442b6>
  417c4b:	mov    edi,0x7
  417c50:	mov    edx,r15d
  417c53:	mov    rcx,rax
  417c56:	xor    eax,eax
  417c58:	call   42e520 <strcmp@plt+0x2ad88>
  417c5d:	mov    eax,ebp
  417c5f:	add    rsp,0x8
  417c63:	pop    rbx
  417c64:	pop    r14
  417c66:	pop    r15
  417c68:	pop    rbp
  417c69:	ret    
  417c6a:	nop    WORD PTR [rax+rax*1+0x0]
  417c70:	push   r14
  417c72:	push   rbx
  417c73:	push   rax
  417c74:	mov    rbx,rdi
  417c77:	lea    r14,[rip+0x50792]        # 468410 <strcmp@plt+0x64c78>
  417c7e:	lea    rsi,[rip+0x507cb]        # 468450 <strcmp@plt+0x64cb8>
  417c85:	mov    rdi,r14
  417c88:	mov    edx,0x1000
  417c8d:	call   42dc40 <strcmp@plt+0x2a4a8>
  417c92:	mov    edi,DWORD PTR [rbx+0x18]
  417c95:	lea    rdx,[rsp+0x4]
  417c9a:	mov    rsi,r14
  417c9d:	call   417b20 <strcmp@plt+0x14388>
  417ca2:	xor    ebx,ebx
  417ca4:	cmp    eax,0x1
  417ca7:	jne    417d12 <strcmp@plt+0x1457a>
  417ca9:	lea    rax,[rip+0x5888c]        # 47053c <strcmp@plt+0x6cda4>
  417cb0:	mov    edi,DWORD PTR [rax]
  417cb2:	movzx  eax,WORD PTR [rip+0x50777]        # 468430 <strcmp@plt+0x64c98>
  417cb9:	mov    rcx,QWORD PTR [rip+0x50780]        # 468440 <strcmp@plt+0x64ca8>
  417cc0:	add    rcx,rax
  417cc3:	xor    esi,esi
  417cc5:	cmp    rax,0xffff
  417ccb:	cmovne rsi,rcx
  417ccf:	mov    edx,DWORD PTR [rip+0x5074f]        # 468424 <strcmp@plt+0x64c8c>
  417cd5:	call   403180 <write@plt>
  417cda:	mov    ebx,0x1
  417cdf:	test   rax,rax
  417ce2:	jns    417d12 <strcmp@plt+0x1457a>
  417ce4:	lea    rax,[rip+0x4d0d5]        # 464dc0 <strcmp@plt+0x61628>
  417ceb:	cmp    DWORD PTR [rax],0x2
  417cee:	jl     417d12 <strcmp@plt+0x1457a>
  417cf0:	call   403040 <__errno_location@plt>
  417cf5:	mov    edi,DWORD PTR [rax]
  417cf7:	call   403170 <strerror@plt>
  417cfc:	lea    rsi,[rip+0x2fd6d]        # 447a70 <strcmp@plt+0x442d8>
  417d03:	mov    edi,0x6
  417d08:	mov    rdx,rax
  417d0b:	xor    eax,eax
  417d0d:	call   42e520 <strcmp@plt+0x2ad88>
  417d12:	mov    eax,ebx
  417d14:	add    rsp,0x8
  417d18:	pop    rbx
  417d19:	pop    r14
  417d1b:	ret    
  417d1c:	nop    DWORD PTR [rax+0x0]
  417d20:	push   r14
  417d22:	push   rbx
  417d23:	sub    rsp,0x58
  417d27:	mov    rbx,rdi
  417d2a:	lea    r14,[rip+0x506df]        # 468410 <strcmp@plt+0x64c78>
  417d31:	lea    rsi,[rip+0x50718]        # 468450 <strcmp@plt+0x64cb8>
  417d38:	mov    rdi,r14
  417d3b:	mov    edx,0x1000
  417d40:	call   42dc40 <strcmp@plt+0x2a4a8>
  417d45:	mov    rdi,r14
  417d48:	mov    esi,0x64
  417d4d:	call   42ddf0 <strcmp@plt+0x2a658>
  417d52:	mov    edi,DWORD PTR [rbx+0x18]
  417d55:	lea    rdx,[rsp+0x50]
  417d5a:	mov    rsi,r14
  417d5d:	call   417b20 <strcmp@plt+0x14388>
  417d62:	xor    ebx,ebx
  417d64:	cmp    eax,0x1
  417d67:	jne    417dd2 <strcmp@plt+0x1463a>
  417d69:	lea    rax,[rip+0x4d050]        # 464dc0 <strcmp@plt+0x61628>
  417d70:	cmp    DWORD PTR [rax],0x3
  417d73:	jl     417d88 <strcmp@plt+0x145f0>
  417d75:	lea    rsi,[rip+0x2fd12]        # 447a8e <strcmp@plt+0x442f6>
  417d7c:	mov    edi,0x7
  417d81:	xor    eax,eax
  417d83:	call   42e520 <strcmp@plt+0x2ad88>
  417d88:	lea    r14,[rip+0x50681]        # 468410 <strcmp@plt+0x64c78>
  417d8f:	mov    rdi,r14
  417d92:	call   42e300 <strcmp@plt+0x2ab68>
  417d97:	mov    eax,DWORD PTR [rip+0x506ab]        # 468448 <strcmp@plt+0x64cb0>
  417d9d:	sub    eax,DWORD PTR [rip+0x5069d]        # 468440 <strcmp@plt+0x64ca8>
  417da3:	mov    WORD PTR [rip+0x50680],ax        # 46842a <strcmp@plt+0x64c92>
  417daa:	lea    rsi,[rsp+0x8]
  417daf:	mov    rdi,r14
  417db2:	call   432ff0 <strcmp@plt+0x2f858>
  417db7:	cmp    eax,0x1
  417dba:	jne    417dd2 <strcmp@plt+0x1463a>
  417dbc:	lea    rdi,[rip+0x5064d]        # 468410 <strcmp@plt+0x64c78>
  417dc3:	lea    rsi,[rsp+0x8]
  417dc8:	call   417e00 <strcmp@plt+0x14668>
  417dcd:	mov    ebx,0x1
  417dd2:	mov    eax,ebx
  417dd4:	add    rsp,0x58
  417dd8:	pop    rbx
  417dd9:	pop    r14
  417ddb:	ret    
  417ddc:	nop    DWORD PTR [rax+0x0]
  417de0:	push   rbx
  417de1:	mov    rbx,rdi
  417de4:	xor    eax,eax
  417de6:	call   419270 <strcmp@plt+0x15ad8>
  417deb:	lea    rdi,[rax+0x20]
  417def:	mov    rsi,rbx
  417df2:	pop    rbx
  417df3:	jmp    417590 <strcmp@plt+0x13df8>
  417df8:	nop    DWORD PTR [rax+rax*1+0x0]
  417e00:	push   rbp
  417e01:	push   r15
  417e03:	push   r14
  417e05:	push   r13
  417e07:	push   r12
  417e09:	push   rbx
  417e0a:	sub    rsp,0x28
  417e0e:	mov    rbx,rsi
  417e11:	mov    r12,rdi
  417e14:	lea    r13,[rip+0x4cfa5]        # 464dc0 <strcmp@plt+0x61628>
  417e1b:	cmp    DWORD PTR [r13+0x0],0x3
  417e20:	jl     417e60 <strcmp@plt+0x146c8>
  417e22:	mov    rdi,rbx
  417e25:	call   422e20 <strcmp@plt+0x1f688>
  417e2a:	mov    rbp,rax
  417e2d:	lea    rdi,[rbx+0x20]
  417e31:	call   422e20 <strcmp@plt+0x1f688>
  417e36:	movzx  r8d,BYTE PTR [rbx+0x44]
  417e3b:	movzx  r9d,WORD PTR [rbx+0x40]
  417e40:	movzx  ecx,WORD PTR [rbx+0x42]
  417e44:	mov    DWORD PTR [rsp],ecx
  417e47:	lea    rsi,[rip+0x2fc70]        # 447abe <strcmp@plt+0x44326>
  417e4e:	mov    edi,0x7
  417e53:	mov    rdx,rbp
  417e56:	mov    rcx,rax
  417e59:	xor    eax,eax
  417e5b:	call   42e520 <strcmp@plt+0x2ad88>
  417e60:	mov    rdi,rbx
  417e63:	call   433830 <strcmp@plt+0x30098>
  417e68:	test   eax,eax
  417e6a:	je     417ea3 <strcmp@plt+0x1470b>
  417e6c:	cmp    DWORD PTR [r13+0x0],0x3
  417e71:	jl     417e86 <strcmp@plt+0x146ee>
  417e73:	lea    rsi,[rip+0x2fc7e]        # 447af8 <strcmp@plt+0x44360>
  417e7a:	mov    edi,0x7
  417e7f:	xor    eax,eax
  417e81:	call   42e520 <strcmp@plt+0x2ad88>
  417e86:	add    rbx,0x20
  417e8a:	mov    rdi,r12
  417e8d:	mov    rsi,rbx
  417e90:	add    rsp,0x28
  417e94:	pop    rbx
  417e95:	pop    r12
  417e97:	pop    r13
  417e99:	pop    r14
  417e9b:	pop    r15
  417e9d:	pop    rbp
  417e9e:	jmp    418230 <strcmp@plt+0x14a98>
  417ea3:	lea    rbp,[rbx+0x20]
  417ea7:	mov    rdi,rbp
  417eaa:	call   424600 <strcmp@plt+0x20e68>
  417eaf:	test   al,al
  417eb1:	je     417ed6 <strcmp@plt+0x1473e>
  417eb3:	cmp    DWORD PTR [r13+0x0],0x0
  417eb8:	jle    418173 <strcmp@plt+0x149db>
  417ebe:	lea    rsi,[rip+0x2fce3]        # 447ba8 <strcmp@plt+0x44410>
  417ec5:	mov    edi,0x5
  417eca:	xor    eax,eax
  417ecc:	call   42e520 <strcmp@plt+0x2ad88>
  417ed1:	jmp    418173 <strcmp@plt+0x149db>
  417ed6:	mov    QWORD PTR [rsp+0x20],rbp
  417edb:	mov    r14d,DWORD PTR [rbx+0x48]
  417edf:	xor    eax,eax
  417ee1:	call   419270 <strcmp@plt+0x15ad8>
  417ee6:	mov    rbp,rax
  417ee9:	lea    r15,[rax+0x20]
  417eed:	mov    rdi,r15
  417ef0:	mov    rsi,rbx
  417ef3:	call   417780 <strcmp@plt+0x13fe8>
  417ef8:	test   rax,rax
  417efb:	je     417fb4 <strcmp@plt+0x1481c>
  417f01:	mov    r14,QWORD PTR [rax+0x8]
  417f05:	mov    rdi,QWORD PTR [r14+0x8]
  417f09:	test   rdi,rdi
  417f0c:	je     417f15 <strcmp@plt+0x1477d>
  417f0e:	cmp    QWORD PTR [r14+0x10],0x0
  417f13:	jne    417f46 <strcmp@plt+0x147ae>
  417f15:	mov    edx,DWORD PTR [rax+0x10]
  417f18:	lea    ecx,[rdx-0x2]
  417f1b:	cmp    ecx,0x2
  417f1e:	jb     417f2d <strcmp@plt+0x14795>
  417f20:	cmp    edx,0x1
  417f23:	je     418187 <strcmp@plt+0x149ef>
  417f29:	test   edx,edx
  417f2b:	jne    417f46 <strcmp@plt+0x147ae>
  417f2d:	cmp    DWORD PTR [r13+0x0],0x3
  417f32:	jl     418173 <strcmp@plt+0x149db>
  417f38:	lea    rsi,[rip+0x2fd41]        # 447c80 <strcmp@plt+0x444e8>
  417f3f:	mov    edi,0x7
  417f44:	jmp    417eca <strcmp@plt+0x14732>
  417f46:	cmp    DWORD PTR [r13+0x0],0x3
  417f4b:	jl     417f7d <strcmp@plt+0x147e5>
  417f4d:	mov    rbp,rax
  417f50:	call   422e20 <strcmp@plt+0x1f688>
  417f55:	mov    rbx,rax
  417f58:	mov    rdi,QWORD PTR [r14+0x10]
  417f5c:	call   422e20 <strcmp@plt+0x1f688>
  417f61:	lea    rsi,[rip+0x2fd3b]        # 447ca3 <strcmp@plt+0x4450b>
  417f68:	mov    edi,0x7
  417f6d:	mov    rdx,rbx
  417f70:	mov    rcx,rax
  417f73:	xor    eax,eax
  417f75:	call   42e520 <strcmp@plt+0x2ad88>
  417f7a:	mov    rax,rbp
  417f7d:	mov    eax,DWORD PTR [rax+0x14]
  417f80:	cmp    eax,0x1
  417f83:	je     418133 <strcmp@plt+0x1499b>
  417f89:	test   eax,eax
  417f8b:	jne    41815a <strcmp@plt+0x149c2>
  417f91:	movzx  esi,WORD PTR [r14+0x18]
  417f96:	movzx  edx,WORD PTR [r14+0x1a]
  417f9b:	mov    rcx,QWORD PTR [r14+0x8]
  417f9f:	mov    r8,QWORD PTR [r14+0x10]
  417fa3:	mov    r9d,DWORD PTR [r14+0x28]
  417fa7:	mov    rdi,r12
  417faa:	call   4229e0 <strcmp@plt+0x1f248>
  417faf:	jmp    41815a <strcmp@plt+0x149c2>
  417fb4:	mov    DWORD PTR [rsp+0x10],r14d
  417fb9:	mov    QWORD PTR [rsp+0x18],rbp
  417fbe:	mov    rdi,rbx
  417fc1:	call   4076f0 <strcmp@plt+0x3f58>
  417fc6:	test   rax,rax
  417fc9:	je     418173 <strcmp@plt+0x149db>
  417fcf:	mov    rbp,rax
  417fd2:	mov    r14,QWORD PTR [rax+0x8]
  417fd6:	test   r14,r14
  417fd9:	je     418173 <strcmp@plt+0x149db>
  417fdf:	mov    rdi,QWORD PTR [r14+0x8]
  417fe3:	test   rdi,rdi
  417fe6:	je     417ff8 <strcmp@plt+0x14860>
  417fe8:	cmp    QWORD PTR [r14+0x10],0x0
  417fed:	je     417ff8 <strcmp@plt+0x14860>
  417fef:	call   43aa40 <strcmp@plt+0x372a8>
  417ff4:	mov    QWORD PTR [r14+0x20],rax
  417ff8:	mov    rsi,QWORD PTR [r14]
  417ffb:	mov    eax,DWORD PTR [rsp+0x10]
  417fff:	mov    DWORD PTR [rsi+0x48],eax
  418002:	mov    rdi,r15
  418005:	mov    rdx,rbp
  418008:	call   417320 <strcmp@plt+0x13b88>
  41800d:	cmp    eax,0x1
  418010:	je     418027 <strcmp@plt+0x1488f>
  418012:	xor    eax,eax
  418014:	call   419930 <strcmp@plt+0x16198>
  418019:	mov    rsi,QWORD PTR [r14]
  41801c:	mov    rdi,r15
  41801f:	mov    rdx,rbp
  418022:	call   417320 <strcmp@plt+0x13b88>
  418027:	mov    rax,QWORD PTR [rsp+0x18]
  41802c:	mov    r15,QWORD PTR [rax+0x18]
  418030:	mov    QWORD PTR [rsp+0x10],rbp
  418035:	mov    rdi,QWORD PTR [rbp+0x0]
  418039:	call   422e20 <strcmp@plt+0x1f688>
  41803e:	mov    rdi,r15
  418041:	mov    rsi,rax
  418044:	call   436340 <strcmp@plt+0x32ba8>
  418049:	mov    rbp,rax
  41804c:	test   rax,rax
  41804f:	jne    41808c <strcmp@plt+0x148f4>
  418051:	lea    rdi,[rip+0xfffffffffffffd88]        # 417de0 <strcmp@plt+0x14648>
  418058:	call   42b9b0 <strcmp@plt+0x28218>
  41805d:	mov    rbp,rax
  418060:	mov    rax,QWORD PTR [rsp+0x18]
  418065:	mov    r15,QWORD PTR [rax+0x18]
  418069:	mov    rax,QWORD PTR [rsp+0x10]
  41806e:	mov    rdi,QWORD PTR [rax]
  418071:	call   422e20 <strcmp@plt+0x1f688>
  418076:	mov    rdi,rax
  418079:	call   403710 <strdup@plt>
  41807e:	mov    rdi,r15
  418081:	mov    rsi,rax
  418084:	mov    rdx,rbp
  418087:	call   435eb0 <strcmp@plt+0x32718>
  41808c:	mov    rdi,QWORD PTR [r14]
  41808f:	mov    rsi,rbp
  418092:	call   42baa0 <strcmp@plt+0x28308>
  418097:	cmp    DWORD PTR [r13+0x0],0x3
  41809c:	jl     4180cf <strcmp@plt+0x14937>
  41809e:	mov    rdi,rbx
  4180a1:	call   433570 <strcmp@plt+0x2fdd8>
  4180a6:	mov    rbx,rax
  4180a9:	mov    rax,QWORD PTR [rsp+0x10]
  4180ae:	mov    rdi,QWORD PTR [rax]
  4180b1:	call   422e20 <strcmp@plt+0x1f688>
  4180b6:	lea    rsi,[rip+0x2fb14]        # 447bd1 <strcmp@plt+0x44439>
  4180bd:	mov    edi,0x7
  4180c2:	mov    rdx,rbx
  4180c5:	mov    rcx,rax
  4180c8:	xor    eax,eax
  4180ca:	call   42e520 <strcmp@plt+0x2ad88>
  4180cf:	mov    rax,QWORD PTR [rsp+0x10]
  4180d4:	cmp    DWORD PTR [rax+0x10],0x1
  4180d8:	jne    417f05 <strcmp@plt+0x1476d>
  4180de:	mov    rdi,QWORD PTR [rax]
  4180e1:	call   422ef0 <strcmp@plt+0x1f758>
  4180e6:	cmp    ax,0xa
  4180ea:	je     418196 <strcmp@plt+0x149fe>
  4180f0:	cmp    ax,0x2
  4180f4:	jne    4181cf <strcmp@plt+0x14a37>
  4180fa:	mov    rbp,QWORD PTR [rsp+0x18]
  4180ff:	mov    rdi,QWORD PTR [rbp+0x18]
  418103:	lea    rsi,[rip+0x2abca]        # 442cd4 <strcmp@plt+0x3f53c>
  41810a:	call   436340 <strcmp@plt+0x32ba8>
  41810f:	mov    rbx,rax
  418112:	test   rax,rax
  418115:	jne    4181b3 <strcmp@plt+0x14a1b>
  41811b:	call   42b980 <strcmp@plt+0x281e8>
  418120:	mov    rbx,rax
  418123:	mov    rbp,QWORD PTR [rbp+0x18]
  418127:	lea    rdi,[rip+0x2aba6]        # 442cd4 <strcmp@plt+0x3f53c>
  41812e:	jmp    418212 <strcmp@plt+0x14a7a>
  418133:	mov    rcx,QWORD PTR [r14+0x8]
  418137:	mov    r8,QWORD PTR [r14+0x10]
  41813b:	mov    r9d,DWORD PTR [r14+0x28]
  41813f:	mov    rax,QWORD PTR [rsp+0x20]
  418144:	mov    QWORD PTR [rsp],rax
  418148:	mov    rdi,r12
  41814b:	mov    esi,0x12b6
  418150:	mov    edx,0x12b6
  418155:	call   417080 <strcmp@plt+0x138e8>
  41815a:	mov    rcx,QWORD PTR [r14+0x10]
  41815e:	mov    rax,QWORD PTR [r14+0x20]
  418162:	mov    edi,DWORD PTR [rax]
  418164:	mov    rsi,QWORD PTR [r12+0x38]
  418169:	mov    edx,DWORD PTR [r12+0x14]
  41816e:	call   435ab0 <strcmp@plt+0x32318>
  418173:	mov    eax,0x1
  418178:	add    rsp,0x28
  41817c:	pop    rbx
  41817d:	pop    r12
  41817f:	pop    r13
  418181:	pop    r14
  418183:	pop    r15
  418185:	pop    rbp
  418186:	ret    
  418187:	mov    rdi,r12
  41818a:	mov    rsi,QWORD PTR [rsp+0x20]
  41818f:	call   418230 <strcmp@plt+0x14a98>
  418194:	jmp    418173 <strcmp@plt+0x149db>
  418196:	mov    rbp,QWORD PTR [rsp+0x18]
  41819b:	mov    rdi,QWORD PTR [rbp+0x18]
  41819f:	lea    rsi,[rip+0x2b9bc]        # 443b62 <strcmp@plt+0x403ca>
  4181a6:	call   436340 <strcmp@plt+0x32ba8>
  4181ab:	mov    rbx,rax
  4181ae:	test   rax,rax
  4181b1:	je     4181ff <strcmp@plt+0x14a67>
  4181b3:	mov    rdi,QWORD PTR [r14]
  4181b6:	mov    rsi,rbx
  4181b9:	call   42baa0 <strcmp@plt+0x28308>
  4181be:	cmp    DWORD PTR [r13+0x0],0x3
  4181c3:	jge    4181e2 <strcmp@plt+0x14a4a>
  4181c5:	mov    rax,QWORD PTR [rsp+0x10]
  4181ca:	jmp    417f05 <strcmp@plt+0x1476d>
  4181cf:	cmp    DWORD PTR [r13+0x0],0x3
  4181d4:	jl     418173 <strcmp@plt+0x149db>
  4181d6:	lea    rsi,[rip+0x2fa3b]        # 447c18 <strcmp@plt+0x44480>
  4181dd:	jmp    417f3f <strcmp@plt+0x147a7>
  4181e2:	lea    rsi,[rip+0x2fa86]        # 447c6f <strcmp@plt+0x444d7>
  4181e9:	mov    edi,0x7
  4181ee:	xor    eax,eax
  4181f0:	call   42e520 <strcmp@plt+0x2ad88>
  4181f5:	mov    rax,QWORD PTR [rsp+0x10]
  4181fa:	jmp    417f05 <strcmp@plt+0x1476d>
  4181ff:	call   42b980 <strcmp@plt+0x281e8>
  418204:	mov    rbx,rax
  418207:	mov    rbp,QWORD PTR [rbp+0x18]
  41820b:	lea    rdi,[rip+0x2b950]        # 443b62 <strcmp@plt+0x403ca>
  418212:	call   403710 <strdup@plt>
  418217:	mov    rdi,rbp
  41821a:	mov    rsi,rax
  41821d:	mov    rdx,rbx
  418220:	call   435eb0 <strcmp@plt+0x32718>
  418225:	jmp    4181b3 <strcmp@plt+0x14a1b>
  418227:	nop    WORD PTR [rax+rax*1+0x0]
  418230:	push   rbp
  418231:	push   r15
  418233:	push   r14
  418235:	push   rbx
  418236:	push   rax
  418237:	mov    rbx,rsi
  41823a:	mov    r14,rdi
  41823d:	lea    r15,[rip+0x4cb7c]        # 464dc0 <strcmp@plt+0x61628>
  418244:	cmp    DWORD PTR [r15],0x3
  418248:	jl     418268 <strcmp@plt+0x14ad0>
  41824a:	mov    rdi,rbx
  41824d:	call   422e20 <strcmp@plt+0x1f688>
  418252:	lea    rsi,[rip+0x2f8f8]        # 447b51 <strcmp@plt+0x443b9>
  418259:	mov    edi,0x7
  41825e:	mov    rdx,rax
  418261:	xor    eax,eax
  418263:	call   42e520 <strcmp@plt+0x2ad88>
  418268:	mov    rdi,rbx
  41826b:	call   422ef0 <strcmp@plt+0x1f758>
  418270:	movzx  ebp,ax
  418273:	mov    edi,ebp
  418275:	call   4198c0 <strcmp@plt+0x16128>
  41827a:	cmp    eax,0xfffffff7
  41827d:	jne    4182a7 <strcmp@plt+0x14b0f>
  41827f:	cmp    DWORD PTR [r15],0x2
  418283:	jl     41829a <strcmp@plt+0x14b02>
  418285:	lea    rsi,[rip+0x2f8e9]        # 447b75 <strcmp@plt+0x443dd>
  41828c:	mov    edi,0x6
  418291:	mov    edx,ebp
  418293:	xor    eax,eax
  418295:	call   42e520 <strcmp@plt+0x2ad88>
  41829a:	xor    eax,eax
  41829c:	add    rsp,0x8
  4182a0:	pop    rbx
  4182a1:	pop    r14
  4182a3:	pop    r15
  4182a5:	pop    rbp
  4182a6:	ret    
  4182a7:	mov    rsi,QWORD PTR [r14+0x38]
  4182ab:	mov    edx,DWORD PTR [r14+0x14]
  4182af:	mov    edi,eax
  4182b1:	mov    rcx,rbx
  4182b4:	add    rsp,0x8
  4182b8:	pop    rbx
  4182b9:	pop    r14
  4182bb:	pop    r15
  4182bd:	pop    rbp
  4182be:	jmp    435ab0 <strcmp@plt+0x32318>
  4182c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4182cd:	nop    DWORD PTR [rax]
  4182d0:	push   r14
  4182d2:	push   rbx
  4182d3:	sub    rsp,0x58
  4182d7:	mov    rbx,rdi
  4182da:	lea    r14,[rip+0x5117f]        # 469460 <strcmp@plt+0x65cc8>
  4182e1:	lea    rsi,[rip+0x511b8]        # 4694a0 <strcmp@plt+0x65d08>
  4182e8:	mov    rdi,r14
  4182eb:	mov    edx,0x800
  4182f0:	call   42dc40 <strcmp@plt+0x2a4a8>
  4182f5:	mov    rdi,r14
  4182f8:	mov    esi,0x64
  4182fd:	call   42ddf0 <strcmp@plt+0x2a658>
  418302:	mov    edi,DWORD PTR [rbx+0x18]
  418305:	mov    rsi,r14
  418308:	call   434de0 <strcmp@plt+0x31648>
  41830d:	cmp    eax,0x1
  418310:	jne    41835d <strcmp@plt+0x14bc5>
  418312:	lea    rdi,[rip+0x51147]        # 469460 <strcmp@plt+0x65cc8>
  418319:	mov    eax,DWORD PTR [rip+0x51179]        # 469498 <strcmp@plt+0x65d00>
  41831f:	sub    eax,DWORD PTR [rip+0x5116b]        # 469490 <strcmp@plt+0x65cf8>
  418325:	mov    WORD PTR [rip+0x5114e],ax        # 46947a <strcmp@plt+0x65ce2>
  41832c:	lea    rsi,[rsp+0x8]
  418331:	call   432ff0 <strcmp@plt+0x2f858>
  418336:	xor    ebx,ebx
  418338:	cmp    eax,0x1
  41833b:	jne    418372 <strcmp@plt+0x14bda>
  41833d:	mov    DWORD PTR [rsp+0x50],0x0
  418345:	lea    rdi,[rip+0x51114]        # 469460 <strcmp@plt+0x65cc8>
  41834c:	lea    rsi,[rsp+0x8]
  418351:	call   417e00 <strcmp@plt+0x14668>
  418356:	mov    ebx,0x1
  41835b:	jmp    418372 <strcmp@plt+0x14bda>
  41835d:	lea    rsi,[rip+0x2f7c7]        # 447b2b <strcmp@plt+0x44393>
  418364:	xor    ebx,ebx
  418366:	mov    edi,0x3
  41836b:	xor    eax,eax
  41836d:	call   42e520 <strcmp@plt+0x2ad88>
  418372:	mov    eax,ebx
  418374:	add    rsp,0x58
  418378:	pop    rbx
  418379:	pop    r14
  41837b:	ret    
  41837c:	nop    DWORD PTR [rax+0x0]
  418380:	push   rbp
  418381:	push   r15
  418383:	push   r14
  418385:	push   r12
  418387:	push   rbx
  418388:	sub    rsp,0xe0
  41838f:	mov    r15d,esi
  418392:	mov    ebx,edi
  418394:	test   al,al
  418396:	je     4183da <strcmp@plt+0x14c42>
  418398:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  41839e:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  4183a4:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  4183ad:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  4183b6:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  4183bf:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  4183c8:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  4183d1:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  4183da:	mov    QWORD PTR [rsp+0x40],rdx
  4183df:	mov    QWORD PTR [rsp+0x48],rcx
  4183e4:	mov    QWORD PTR [rsp+0x50],r8
  4183e9:	mov    QWORD PTR [rsp+0x58],r9
  4183ee:	lea    rax,[rsp+0x30]
  4183f3:	mov    QWORD PTR [rsp+0x20],rax
  4183f8:	lea    rax,[rsp+0x110]
  418400:	mov    QWORD PTR [rsp+0x18],rax
  418405:	movabs rax,0x3000000010
  41840f:	mov    QWORD PTR [rsp+0x10],rax
  418414:	mov    ecx,0x10
  418419:	cmp    rcx,0x28
  41841d:	ja     418432 <strcmp@plt+0x14c9a>
  41841f:	mov    eax,0x10
  418424:	add    rax,QWORD PTR [rsp+0x20]
  418429:	add    ecx,0x8
  41842c:	mov    DWORD PTR [rsp+0x10],ecx
  418430:	jmp    418440 <strcmp@plt+0x14ca8>
  418432:	mov    rax,QWORD PTR [rsp+0x18]
  418437:	lea    rcx,[rax+0x8]
  41843b:	mov    QWORD PTR [rsp+0x18],rcx
  418440:	mov    r14,QWORD PTR [rax]
  418443:	lea    rsi,[rip+0x2f88d]        # 447cd7 <strcmp@plt+0x4453f>
  41844a:	xor    ebp,ebp
  41844c:	xor    edi,edi
  41844e:	mov    edx,0x5a0
  418453:	call   42d580 <strcmp@plt+0x29de8>
  418458:	lea    r12,[rip+0x580dd]        # 47053c <strcmp@plt+0x6cda4>
  41845f:	mov    DWORD PTR [r12],eax
  418463:	test   eax,eax
  418465:	jle    4185ee <strcmp@plt+0x14e56>
  41846b:	lea    rdi,[rip+0x2f865]        # 447cd7 <strcmp@plt+0x4453f>
  418472:	call   4030c0 <if_nametoindex@plt>
  418477:	lea    rcx,[rip+0x580ba]        # 470538 <strcmp@plt+0x6cda0>
  41847e:	mov    DWORD PTR [rcx],eax
  418480:	cmp    ebx,0x3
  418483:	je     4184ed <strcmp@plt+0x14d55>
  418485:	cmp    ebx,0x2
  418488:	je     418525 <strcmp@plt+0x14d8d>
  41848e:	test   ebx,ebx
  418490:	jne    4185ee <strcmp@plt+0x14e56>
  418496:	lea    rbx,[rip+0x2f83a]        # 447cd7 <strcmp@plt+0x4453f>
  41849d:	mov    rdi,rbx
  4184a0:	call   4030c0 <if_nametoindex@plt>
  4184a5:	mov    DWORD PTR [rsp],0x64
  4184ac:	mov    edi,0x2
  4184b1:	mov    esi,eax
  4184b3:	xor    edx,edx
  4184b5:	xor    ecx,ecx
  4184b7:	xor    r8d,r8d
  4184ba:	mov    r9d,0x64
  4184c0:	call   434700 <strcmp@plt+0x30f68>
  4184c5:	mov    rdi,rbx
  4184c8:	call   4030c0 <if_nametoindex@plt>
  4184cd:	mov    DWORD PTR [rsp],0x64
  4184d4:	mov    edi,0xa
  4184d9:	mov    esi,eax
  4184db:	xor    edx,edx
  4184dd:	xor    ecx,ecx
  4184df:	xor    r8d,r8d
  4184e2:	mov    r9d,0x64
  4184e8:	call   434700 <strcmp@plt+0x30f68>
  4184ed:	lea    rax,[rip+0x58034]        # 470528 <strcmp@plt+0x6cd90>
  4184f4:	mov    rdi,QWORD PTR [rax]
  4184f7:	mov    ecx,DWORD PTR [r12]
  4184fb:	lea    rsi,[rip+0xfffffffffffffdce]        # 4182d0 <strcmp@plt+0x14b38>
  418502:	xor    edx,edx
  418504:	call   4349c0 <strcmp@plt+0x31228>
  418509:	lea    rbx,[rip+0xfffffffffffff760]        # 417c70 <strcmp@plt+0x144d8>
  418510:	test   r15d,r15d
  418513:	je     418531 <strcmp@plt+0x14d99>
  418515:	cmp    r15d,0x1
  418519:	jne    4185ee <strcmp@plt+0x14e56>
  41851f:	mov    ax,0x12b6
  418523:	jmp    418535 <strcmp@plt+0x14d9d>
  418525:	lea    rbx,[rip+0xfffffffffffff7f4]        # 417d20 <strcmp@plt+0x14588>
  41852c:	test   r15d,r15d
  41852f:	jne    418515 <strcmp@plt+0x14d7d>
  418531:	mov    ax,0x10f5
  418535:	lea    r12,[rip+0x57fd4]        # 470510 <strcmp@plt+0x6cd78>
  41853c:	cmp    DWORD PTR [r12],0xa
  418541:	movzx  ebp,ax
  418544:	je     41856f <strcmp@plt+0x14dd7>
  418546:	mov    edi,0x2
  41854b:	mov    esi,ebp
  41854d:	call   434cd0 <strcmp@plt+0x31538>
  418552:	lea    rcx,[rip+0x57fcf]        # 470528 <strcmp@plt+0x6cd90>
  418559:	mov    rdi,QWORD PTR [rcx]
  41855c:	mov    rsi,rbx
  41855f:	xor    edx,edx
  418561:	mov    ecx,eax
  418563:	call   4349c0 <strcmp@plt+0x31228>
  418568:	cmp    DWORD PTR [r12],0x2
  41856d:	je     418591 <strcmp@plt+0x14df9>
  41856f:	mov    edi,0xa
  418574:	mov    esi,ebp
  418576:	call   434cd0 <strcmp@plt+0x31538>
  41857b:	lea    rcx,[rip+0x57fa6]        # 470528 <strcmp@plt+0x6cd90>
  418582:	mov    rdi,QWORD PTR [rcx]
  418585:	mov    rsi,rbx
  418588:	xor    edx,edx
  41858a:	mov    ecx,eax
  41858c:	call   4349c0 <strcmp@plt+0x31228>
  418591:	mov    edi,0x40
  418596:	call   431d90 <strcmp@plt+0x2e5f8>
  41859b:	test   rax,rax
  41859e:	je     4185d7 <strcmp@plt+0x14e3f>
  4185a0:	mov    rbx,rax
  4185a3:	mov    DWORD PTR [rax],r15d
  4185a6:	lea    rdi,[rip+0x13a43]        # 42bff0 <strcmp@plt+0x28858>
  4185ad:	call   435e70 <strcmp@plt+0x326d8>
  4185b2:	mov    QWORD PTR [rbx+0x18],rax
  4185b6:	lea    rsi,[rip+0xae83]        # 423440 <strcmp@plt+0x1fca8>
  4185bd:	mov    rdi,r14
  4185c0:	call   42ba20 <strcmp@plt+0x28288>
  4185c5:	mov    QWORD PTR [rbx+0x38],rax
  4185c9:	mov    rdi,rbx
  4185cc:	add    rdi,0x20
  4185d0:	call   4171e0 <strcmp@plt+0x13a48>
  4185d5:	jmp    4185d9 <strcmp@plt+0x14e41>
  4185d7:	xor    ebx,ebx
  4185d9:	lea    rax,[rip+0x4c1a0]        # 464780 <strcmp@plt+0x60fe8>
  4185e0:	mov    QWORD PTR [rax+0x70],rbx
  4185e4:	call   4197a0 <strcmp@plt+0x16008>
  4185e9:	mov    ebp,0x1
  4185ee:	mov    eax,ebp
  4185f0:	add    rsp,0xe0
  4185f7:	pop    rbx
  4185f8:	pop    r12
  4185fa:	pop    r14
  4185fc:	pop    r15
  4185fe:	pop    rbp
  4185ff:	ret    
  418600:	push   rbp
  418601:	push   r15
  418603:	push   r14
  418605:	push   r13
  418607:	push   r12
  418609:	push   rbx
  41860a:	push   rax
  41860b:	mov    ebp,esi
  41860d:	mov    r12,rdi
  418610:	mov    r15d,DWORD PTR [rdi+0x8]
  418614:	lea    rax,[rip+0x4c165]        # 464780 <strcmp@plt+0x60fe8>
  41861b:	mov    r13,QWORD PTR [rax+0x70]
  41861f:	call   43a660 <strcmp@plt+0x36ec8>
  418624:	xor    r14d,r14d
  418627:	test   rax,rax
  41862a:	je     4186c2 <strcmp@plt+0x14f2a>
  418630:	mov    rbx,rax
  418633:	cmp    DWORD PTR [rax+0x18],0x0
  418637:	je     4186c2 <strcmp@plt+0x14f2a>
  41863d:	mov    QWORD PTR [rsp],r13
  418641:	add    r15d,0xa
  418645:	mov    edi,ebp
  418647:	call   435360 <strcmp@plt+0x31bc8>
  41864c:	mov    r13d,eax
  41864f:	mov    edi,eax
  418651:	mov    esi,ebp
  418653:	mov    rdx,rbx
  418656:	xor    ecx,ecx
  418658:	call   435970 <strcmp@plt+0x321d8>
  41865d:	movzx  edx,r15b
  418661:	mov    r14d,0x1
  418667:	mov    edi,ebp
  418669:	mov    esi,0x0
  41866e:	mov    ecx,r15d
  418671:	mov    r8d,0x1
  418677:	mov    r9,rbx
  41867a:	push   0x0
  41867c:	push   0x0
  41867e:	call   4343e0 <strcmp@plt+0x30c48>
  418683:	add    rsp,0x10
  418687:	cmp    ebp,0xa
  41868a:	je     4186a8 <strcmp@plt+0x14f10>
  41868c:	cmp    ebp,0x2
  41868f:	jne    4186c2 <strcmp@plt+0x14f2a>
  418691:	mov    DWORD PTR [r12+0x30],r13d
  418696:	mov    rax,QWORD PTR [rsp]
  41869a:	test   rax,rax
  41869d:	je     4186c2 <strcmp@plt+0x14f2a>
  41869f:	cmp    QWORD PTR [rax+0x8],0x0
  4186a4:	jne    4186c2 <strcmp@plt+0x14f2a>
  4186a6:	jmp    4186bd <strcmp@plt+0x14f25>
  4186a8:	mov    DWORD PTR [r12+0x34],r13d
  4186ad:	mov    rax,QWORD PTR [rsp]
  4186b1:	test   rax,rax
  4186b4:	je     4186c2 <strcmp@plt+0x14f2a>
  4186b6:	cmp    QWORD PTR [rax+0x10],0x0
  4186bb:	jne    4186c2 <strcmp@plt+0x14f2a>
  4186bd:	call   4197a0 <strcmp@plt+0x16008>
  4186c2:	mov    eax,r14d
  4186c5:	add    rsp,0x8
  4186c9:	pop    rbx
  4186ca:	pop    r12
  4186cc:	pop    r13
  4186ce:	pop    r14
  4186d0:	pop    r15
  4186d2:	pop    rbp
  4186d3:	ret    
  4186d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4186de:	xchg   ax,ax
  4186e0:	push   rbp
  4186e1:	push   r14
  4186e3:	push   rbx
  4186e4:	sub    rsp,0x10
  4186e8:	mov    r14d,esi
  4186eb:	mov    rbx,rdi
  4186ee:	mov    ebp,DWORD PTR [rdi+0x8]
  4186f1:	call   43a640 <strcmp@plt+0x36ea8>
  4186f6:	xor    ecx,ecx
  4186f8:	test   rax,rax
  4186fb:	je     418726 <strcmp@plt+0x14f8e>
  4186fd:	cmp    DWORD PTR [rax+0x18],0x0
  418701:	je     418726 <strcmp@plt+0x14f8e>
  418703:	add    ebp,0xa
  418706:	mov    esi,DWORD PTR [rbx+0x8]
  418709:	mov    DWORD PTR [rsp],ebp
  41870c:	mov    edi,r14d
  41870f:	xor    edx,edx
  418711:	xor    ecx,ecx
  418713:	mov    r8,rax
  418716:	mov    r9d,0x64
  41871c:	call   434700 <strcmp@plt+0x30f68>
  418721:	mov    ecx,0x1
  418726:	mov    eax,ecx
  418728:	add    rsp,0x10
  41872c:	pop    rbx
  41872d:	pop    r14
  41872f:	pop    rbp
  418730:	ret    
  418731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41873b:	nop    DWORD PTR [rax+rax*1+0x0]
  418740:	push   rbp
  418741:	push   r15
  418743:	push   r14
  418745:	push   r13
  418747:	push   r12
  418749:	push   rbx
  41874a:	push   rax
  41874b:	mov    ebx,edi
  41874d:	mov    rdi,rsi
  418750:	call   422dd0 <strcmp@plt+0x1f638>
  418755:	mov    r15,rax
  418758:	mov    rdi,rax
  41875b:	call   422ef0 <strcmp@plt+0x1f758>
  418760:	test   ax,ax
  418763:	je     4187fa <strcmp@plt+0x15062>
  418769:	cmp    ebx,0x3
  41876c:	je     4187fe <strcmp@plt+0x15066>
  418772:	test   ebx,ebx
  418774:	jne    418867 <strcmp@plt+0x150cf>
  41877a:	mov    r12d,eax
  41877d:	movzx  edi,ax
  418780:	lea    rax,[rip+0x4bff9]        # 464780 <strcmp@plt+0x60fe8>
  418787:	mov    r13,QWORD PTR [rax+0x70]
  41878b:	mov    rax,QWORD PTR [r13+0x38]
  41878f:	cmp    DWORD PTR [rax+0x18],0x0
  418793:	mov    DWORD PTR [rsp+0x4],edi
  418797:	je     418808 <strcmp@plt+0x15070>
  418799:	mov    r14,QWORD PTR [rax+0x8]
  41879d:	cmp    r14,rax
  4187a0:	jne    4187ba <strcmp@plt+0x15022>
  4187a2:	jmp    418834 <strcmp@plt+0x1509c>
  4187a7:	nop    WORD PTR [rax+rax*1+0x0]
  4187b0:	mov    r14,QWORD PTR [r14+0x8]
  4187b4:	cmp    r14,QWORD PTR [r13+0x38]
  4187b8:	je     418834 <strcmp@plt+0x1509c>
  4187ba:	mov    rbx,QWORD PTR [r14+0x10]
  4187be:	mov    rdi,rbx
  4187c1:	call   422ef0 <strcmp@plt+0x1f758>
  4187c6:	cmp    ax,r12w
  4187ca:	jne    4187b0 <strcmp@plt+0x15018>
  4187cc:	xor    ebp,ebp
  4187ce:	mov    edi,DWORD PTR [rsp+0x4]
  4187d2:	xor    esi,esi
  4187d4:	mov    edx,0x64
  4187d9:	mov    ecx,0x64
  4187de:	mov    r8d,0x1
  4187e4:	mov    r9,r15
  4187e7:	push   0x0
  4187e9:	push   rbx
  4187ea:	call   4343e0 <strcmp@plt+0x30c48>
  4187ef:	add    rsp,0x10
  4187f3:	cmp    eax,0x1
  4187f6:	je     4187b0 <strcmp@plt+0x15018>
  4187f8:	jmp    41886c <strcmp@plt+0x150d4>
  4187fa:	xor    ebp,ebp
  4187fc:	jmp    41886c <strcmp@plt+0x150d4>
  4187fe:	mov    rdi,r15
  418801:	call   4194a0 <strcmp@plt+0x15d08>
  418806:	jmp    418867 <strcmp@plt+0x150cf>
  418808:	xor    ebp,ebp
  41880a:	mov    esi,0x0
  41880f:	mov    edx,0x64
  418814:	mov    ecx,0x64
  418819:	mov    r8d,0x1
  41881f:	mov    r9,r15
  418822:	push   0x0
  418824:	push   0x0
  418826:	call   4343e0 <strcmp@plt+0x30c48>
  41882b:	add    rsp,0x10
  41882f:	cmp    eax,0x1
  418832:	jne    41886c <strcmp@plt+0x150d4>
  418834:	xor    ebp,ebp
  418836:	mov    edi,DWORD PTR [rsp+0x4]
  41883a:	mov    esi,0x0
  41883f:	mov    edx,0xfe
  418844:	mov    ecx,0x63
  418849:	mov    r8d,0x1
  41884f:	mov    r9d,0x0
  418855:	push   0x0
  418857:	push   r15
  418859:	call   4343e0 <strcmp@plt+0x30c48>
  41885e:	add    rsp,0x10
  418862:	cmp    eax,0x1
  418865:	jne    41886c <strcmp@plt+0x150d4>
  418867:	mov    ebp,0x1
  41886c:	mov    eax,ebp
  41886e:	add    rsp,0x8
  418872:	pop    rbx
  418873:	pop    r12
  418875:	pop    r13
  418877:	pop    r14
  418879:	pop    r15
  41887b:	pop    rbp
  41887c:	ret    
  41887d:	nop    DWORD PTR [rax]
  418880:	push   rbp
  418881:	push   r15
  418883:	push   r14
  418885:	push   r13
  418887:	push   r12
  418889:	push   rbx
  41888a:	push   rax
  41888b:	mov    ebx,edi
  41888d:	mov    rdi,rsi
  418890:	call   422dd0 <strcmp@plt+0x1f638>
  418895:	mov    r15,rax
  418898:	mov    rdi,rax
  41889b:	call   422ef0 <strcmp@plt+0x1f758>
  4188a0:	test   ax,ax
  4188a3:	je     41893a <strcmp@plt+0x151a2>
  4188a9:	cmp    ebx,0x3
  4188ac:	je     41893e <strcmp@plt+0x151a6>
  4188b2:	test   ebx,ebx
  4188b4:	jne    4189a7 <strcmp@plt+0x1520f>
  4188ba:	mov    r12d,eax
  4188bd:	movzx  edi,ax
  4188c0:	lea    rax,[rip+0x4beb9]        # 464780 <strcmp@plt+0x60fe8>
  4188c7:	mov    r13,QWORD PTR [rax+0x70]
  4188cb:	mov    rax,QWORD PTR [r13+0x38]
  4188cf:	cmp    DWORD PTR [rax+0x18],0x0
  4188d3:	mov    DWORD PTR [rsp+0x4],edi
  4188d7:	je     418948 <strcmp@plt+0x151b0>
  4188d9:	mov    r14,QWORD PTR [rax+0x8]
  4188dd:	cmp    r14,rax
  4188e0:	jne    4188fa <strcmp@plt+0x15162>
  4188e2:	jmp    418974 <strcmp@plt+0x151dc>
  4188e7:	nop    WORD PTR [rax+rax*1+0x0]
  4188f0:	mov    r14,QWORD PTR [r14+0x8]
  4188f4:	cmp    r14,QWORD PTR [r13+0x38]
  4188f8:	je     418974 <strcmp@plt+0x151dc>
  4188fa:	mov    rbx,QWORD PTR [r14+0x10]
  4188fe:	mov    rdi,rbx
  418901:	call   422ef0 <strcmp@plt+0x1f758>
  418906:	cmp    ax,r12w
  41890a:	jne    4188f0 <strcmp@plt+0x15158>
  41890c:	xor    ebp,ebp
  41890e:	mov    edi,DWORD PTR [rsp+0x4]
  418912:	xor    esi,esi
  418914:	mov    edx,0x64
  418919:	mov    ecx,0x64
  41891e:	mov    r8d,0x1
  418924:	mov    r9,r15
  418927:	push   0x0
  418929:	push   rbx
  41892a:	call   434470 <strcmp@plt+0x30cd8>
  41892f:	add    rsp,0x10
  418933:	cmp    eax,0x1
  418936:	je     4188f0 <strcmp@plt+0x15158>
  418938:	jmp    4189ac <strcmp@plt+0x15214>
  41893a:	xor    ebp,ebp
  41893c:	jmp    4189ac <strcmp@plt+0x15214>
  41893e:	mov    rdi,r15
  418941:	call   419570 <strcmp@plt+0x15dd8>
  418946:	jmp    4189a7 <strcmp@plt+0x1520f>
  418948:	xor    ebp,ebp
  41894a:	mov    esi,0x0
  41894f:	mov    edx,0x64
  418954:	mov    ecx,0x64
  418959:	mov    r8d,0x1
  41895f:	mov    r9,r15
  418962:	push   0x0
  418964:	push   0x0
  418966:	call   434470 <strcmp@plt+0x30cd8>
  41896b:	add    rsp,0x10
  41896f:	cmp    eax,0x1
  418972:	jne    4189ac <strcmp@plt+0x15214>
  418974:	xor    ebp,ebp
  418976:	mov    edi,DWORD PTR [rsp+0x4]
  41897a:	mov    esi,0x0
  41897f:	mov    edx,0xfe
  418984:	mov    ecx,0x63
  418989:	mov    r8d,0x1
  41898f:	mov    r9d,0x0
  418995:	push   0x0
  418997:	push   r15
  418999:	call   434470 <strcmp@plt+0x30cd8>
  41899e:	add    rsp,0x10
  4189a2:	cmp    eax,0x1
  4189a5:	jne    4189ac <strcmp@plt+0x15214>
  4189a7:	mov    ebp,0x1
  4189ac:	mov    eax,ebp
  4189ae:	add    rsp,0x8
  4189b2:	pop    rbx
  4189b3:	pop    r12
  4189b5:	pop    r13
  4189b7:	pop    r14
  4189b9:	pop    r15
  4189bb:	pop    rbp
  4189bc:	ret    
  4189bd:	nop    DWORD PTR [rax]
  4189c0:	push   rbp
  4189c1:	push   r15
  4189c3:	push   r14
  4189c5:	push   rbx
  4189c6:	push   rax
  4189c7:	mov    r15,r8
  4189ca:	mov    rbx,rcx
  4189cd:	mov    r14,rsi
  4189d0:	mov    ebp,edi
  4189d2:	mov    rdi,r8
  4189d5:	call   422ef0 <strcmp@plt+0x1f758>
  4189da:	cmp    ebp,0x1
  4189dd:	jne    418a47 <strcmp@plt+0x152af>
  4189df:	test   ax,ax
  4189e2:	je     418b33 <strcmp@plt+0x1539b>
  4189e8:	mov    rdi,rbx
  4189eb:	call   422ef0 <strcmp@plt+0x1f758>
  4189f0:	test   ax,ax
  4189f3:	jne    418b33 <strcmp@plt+0x1539b>
  4189f9:	mov    rdi,r15
  4189fc:	call   4244c0 <strcmp@plt+0x20d28>
  418a01:	lea    rcx,[rip+0x4c3b8]        # 464dc0 <strcmp@plt+0x61628>
  418a08:	mov    ecx,DWORD PTR [rcx]
  418a0a:	cmp    eax,0x1
  418a0d:	je     418a77 <strcmp@plt+0x152df>
  418a0f:	test   ecx,ecx
  418a11:	jle    418a37 <strcmp@plt+0x1529f>
  418a13:	mov    rbx,QWORD PTR [r14]
  418a16:	mov    rdi,r15
  418a19:	call   422e20 <strcmp@plt+0x1f688>
  418a1e:	lea    rsi,[rip+0x2f323]        # 447d48 <strcmp@plt+0x445b0>
  418a25:	mov    edi,0x5
  418a2a:	mov    rdx,rbx
  418a2d:	mov    rcx,rax
  418a30:	xor    eax,eax
  418a32:	call   42e520 <strcmp@plt+0x2ad88>
  418a37:	mov    rdi,r14
  418a3a:	mov    rsi,r15
  418a3d:	call   419640 <strcmp@plt+0x15ea8>
  418a42:	jmp    418b33 <strcmp@plt+0x1539b>
  418a47:	test   ax,ax
  418a4a:	je     418b33 <strcmp@plt+0x1539b>
  418a50:	mov    rdi,rbx
  418a53:	call   422ef0 <strcmp@plt+0x1f758>
  418a58:	test   ax,ax
  418a5b:	jne    418b33 <strcmp@plt+0x1539b>
  418a61:	mov    rdi,r15
  418a64:	call   4244c0 <strcmp@plt+0x20d28>
  418a69:	lea    rcx,[rip+0x4c350]        # 464dc0 <strcmp@plt+0x61628>
  418a70:	mov    ecx,DWORD PTR [rcx]
  418a72:	cmp    eax,0x1
  418a75:	jne    418aa3 <strcmp@plt+0x1530b>
  418a77:	cmp    ecx,0x3
  418a7a:	jl     418b33 <strcmp@plt+0x1539b>
  418a80:	mov    rdi,r15
  418a83:	call   422e20 <strcmp@plt+0x1f688>
  418a88:	lea    rsi,[rip+0x2f251]        # 447ce0 <strcmp@plt+0x44548>
  418a8f:	mov    edi,0x7
  418a94:	mov    rdx,rax
  418a97:	xor    eax,eax
  418a99:	call   42e520 <strcmp@plt+0x2ad88>
  418a9e:	jmp    418b33 <strcmp@plt+0x1539b>
  418aa3:	test   ecx,ecx
  418aa5:	jle    418acb <strcmp@plt+0x15333>
  418aa7:	mov    rbx,QWORD PTR [r14]
  418aaa:	mov    rdi,r15
  418aad:	call   422e20 <strcmp@plt+0x1f688>
  418ab2:	lea    rsi,[rip+0x2f2d9]        # 447d92 <strcmp@plt+0x445fa>
  418ab9:	mov    edi,0x5
  418abe:	mov    rdx,rbx
  418ac1:	mov    rcx,rax
  418ac4:	xor    eax,eax
  418ac6:	call   42e520 <strcmp@plt+0x2ad88>
  418acb:	mov    ebp,DWORD PTR [r14+0x8]
  418acf:	mov    rdi,r15
  418ad2:	call   422ef0 <strcmp@plt+0x1f758>
  418ad7:	cmp    ax,0xa
  418adb:	je     418aee <strcmp@plt+0x15356>
  418add:	cmp    ax,0x2
  418ae1:	jne    418b33 <strcmp@plt+0x1539b>
  418ae3:	lea    rbx,[r14+0x20]
  418ae7:	mov    edi,0x2
  418aec:	jmp    418af7 <strcmp@plt+0x1535f>
  418aee:	lea    rbx,[r14+0x28]
  418af2:	mov    edi,0xa
  418af7:	mov    rax,QWORD PTR [rbx]
  418afa:	test   rax,rax
  418afd:	je     418b33 <strcmp@plt+0x1539b>
  418aff:	cmp    DWORD PTR [rax+0x18],0x0
  418b03:	je     418b33 <strcmp@plt+0x1539b>
  418b05:	add    ebp,0xa
  418b08:	mov    esi,DWORD PTR [r14+0x8]
  418b0c:	mov    DWORD PTR [rsp],ebp
  418b0f:	xor    edx,edx
  418b11:	xor    ecx,ecx
  418b13:	mov    r8,r15
  418b16:	mov    r9d,0x64
  418b1c:	call   4347c0 <strcmp@plt+0x31028>
  418b21:	mov    rdi,QWORD PTR [rbx]
  418b24:	call   422c90 <strcmp@plt+0x1f4f8>
  418b29:	xor    edi,edi
  418b2b:	call   422be0 <strcmp@plt+0x1f448>
  418b30:	mov    QWORD PTR [rbx],rax
  418b33:	mov    eax,0x1
  418b38:	add    rsp,0x8
  418b3c:	pop    rbx
  418b3d:	pop    r14
  418b3f:	pop    r15
  418b41:	pop    rbp
  418b42:	ret    
  418b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418b4d:	nop    DWORD PTR [rax]
  418b50:	push   rbp
  418b51:	push   r15
  418b53:	push   r14
  418b55:	push   r13
  418b57:	push   r12
  418b59:	push   rbx
  418b5a:	sub    rsp,0x18
  418b5e:	mov    rbp,rsi
  418b61:	mov    r13,rdi
  418b64:	lea    rax,[rip+0x4bc15]        # 464780 <strcmp@plt+0x60fe8>
  418b6b:	mov    rax,QWORD PTR [rax+0x70]
  418b6f:	mov    QWORD PTR [rsp+0x10],rax
  418b74:	mov    r12d,DWORD PTR [rdi+0x8]
  418b78:	add    r12d,0xa
  418b7c:	cmp    DWORD PTR [rdx+0x18],0x0
  418b80:	je     418bd5 <strcmp@plt+0x1543d>
  418b82:	mov    r14,rdx
  418b85:	mov    ebx,DWORD PTR [rbp+0x18]
  418b88:	mov    rdi,rdx
  418b8b:	call   422ef0 <strcmp@plt+0x1f758>
  418b90:	mov    r15d,eax
  418b93:	mov    rdi,rbp
  418b96:	mov    rsi,r14
  418b99:	call   423670 <strcmp@plt+0x1fed8>
  418b9e:	test   eax,eax
  418ba0:	je     418c12 <strcmp@plt+0x1547a>
  418ba2:	movzx  eax,r15w
  418ba6:	mov    DWORD PTR [rsp+0xc],eax
  418baa:	test   ebx,ebx
  418bac:	mov    eax,r15d
  418baf:	je     418c6e <strcmp@plt+0x154d6>
  418bb5:	cmp    ax,0xa
  418bb9:	je     418d4e <strcmp@plt+0x155b6>
  418bbf:	xor    r15d,r15d
  418bc2:	cmp    ax,0x2
  418bc6:	jne    418dbc <strcmp@plt+0x15624>
  418bcc:	add    r13,0x30
  418bd0:	jmp    418d52 <strcmp@plt+0x155ba>
  418bd5:	mov    rdi,rbp
  418bd8:	call   422ef0 <strcmp@plt+0x1f758>
  418bdd:	movzx  r14d,ax
  418be1:	cmp    r14w,0xa
  418be6:	je     418cdf <strcmp@plt+0x15547>
  418bec:	cmp    ax,0x2
  418bf0:	jne    418d00 <strcmp@plt+0x15568>
  418bf6:	mov    edi,DWORD PTR [r13+0x30]
  418bfa:	call   403770 <close@plt>
  418bff:	mov    DWORD PTR [r13+0x30],0x0
  418c07:	add    QWORD PTR [rsp+0x10],0x8
  418c0d:	jmp    418cf6 <strcmp@plt+0x1555e>
  418c12:	mov    ebx,r15d
  418c15:	lea    rax,[rip+0x4c1a4]        # 464dc0 <strcmp@plt+0x61628>
  418c1c:	cmp    DWORD PTR [rax],0x2
  418c1f:	jl     418c46 <strcmp@plt+0x154ae>
  418c21:	mov    rbp,QWORD PTR [r13+0x0]
  418c25:	mov    rdi,r14
  418c28:	call   422e20 <strcmp@plt+0x1f688>
  418c2d:	lea    rsi,[rip+0x2f1f4]        # 447e28 <strcmp@plt+0x44690>
  418c34:	mov    edi,0x6
  418c39:	mov    rdx,rbp
  418c3c:	mov    rcx,rax
  418c3f:	xor    eax,eax
  418c41:	call   42e520 <strcmp@plt+0x2ad88>
  418c46:	mov    r15d,0x1
  418c4c:	cmp    bx,0xa
  418c50:	je     418da9 <strcmp@plt+0x15611>
  418c56:	cmp    bx,0x2
  418c5a:	jne    418dbc <strcmp@plt+0x15624>
  418c60:	mov    edi,DWORD PTR [r13+0x30]
  418c64:	mov    esi,0x2
  418c69:	jmp    418db2 <strcmp@plt+0x1561a>
  418c6e:	lea    rbp,[rip+0x4c14b]        # 464dc0 <strcmp@plt+0x61628>
  418c75:	cmp    DWORD PTR [rbp+0x0],0x2
  418c79:	jl     418c9d <strcmp@plt+0x15505>
  418c7b:	mov    rdi,r14
  418c7e:	mov    ebx,eax
  418c80:	call   422e20 <strcmp@plt+0x1f688>
  418c85:	lea    rsi,[rip+0x2f1f2]        # 447e7e <strcmp@plt+0x446e6>
  418c8c:	mov    edi,0x6
  418c91:	mov    rdx,rax
  418c94:	xor    eax,eax
  418c96:	call   42e520 <strcmp@plt+0x2ad88>
  418c9b:	mov    eax,ebx
  418c9d:	cmp    ax,0xa
  418ca1:	je     418dce <strcmp@plt+0x15636>
  418ca7:	xor    r15d,r15d
  418caa:	cmp    ax,0x2
  418cae:	jne    418dbc <strcmp@plt+0x15624>
  418cb4:	mov    edi,0x2
  418cb9:	mov    ebx,eax
  418cbb:	call   435360 <strcmp@plt+0x31bc8>
  418cc0:	mov    ecx,ebx
  418cc2:	mov    edx,eax
  418cc4:	mov    DWORD PTR [r13+0x30],eax
  418cc8:	cmp    BYTE PTR [r13+0xc],0x1
  418ccd:	je     418ded <strcmp@plt+0x15655>
  418cd3:	mov    ebx,DWORD PTR [rsp+0xc]
  418cd7:	mov    r13d,edx
  418cda:	jmp    418d7b <strcmp@plt+0x155e3>
  418cdf:	mov    edi,DWORD PTR [r13+0x34]
  418ce3:	call   403770 <close@plt>
  418ce8:	mov    DWORD PTR [r13+0x34],0x0
  418cf0:	add    QWORD PTR [rsp+0x10],0x10
  418cf6:	mov    rax,QWORD PTR [rsp+0x10]
  418cfb:	cmp    QWORD PTR [rax],r13
  418cfe:	jne    418d24 <strcmp@plt+0x1558c>
  418d00:	lea    rax,[rip+0x4c0b9]        # 464dc0 <strcmp@plt+0x61628>
  418d07:	cmp    DWORD PTR [rax],0x2
  418d0a:	jl     418d1f <strcmp@plt+0x15587>
  418d0c:	lea    rsi,[rip+0x2f0cc]        # 447ddf <strcmp@plt+0x44647>
  418d13:	mov    edi,0x6
  418d18:	xor    eax,eax
  418d1a:	call   42e520 <strcmp@plt+0x2ad88>
  418d1f:	call   4197a0 <strcmp@plt+0x16008>
  418d24:	movzx  edx,r12b
  418d28:	mov    r15d,0x1
  418d2e:	mov    edi,r14d
  418d31:	xor    esi,esi
  418d33:	mov    ecx,r12d
  418d36:	mov    r8d,0x1
  418d3c:	mov    r9,rbp
  418d3f:	push   0x0
  418d41:	push   0x0
  418d43:	call   434470 <strcmp@plt+0x30cd8>
  418d48:	add    rsp,0x10
  418d4c:	jmp    418dbc <strcmp@plt+0x15624>
  418d4e:	add    r13,0x34
  418d52:	mov    r13d,DWORD PTR [r13+0x0]
  418d56:	movzx  edx,r12b
  418d5a:	mov    ebx,DWORD PTR [rsp+0xc]
  418d5e:	mov    edi,ebx
  418d60:	xor    esi,esi
  418d62:	mov    ecx,r12d
  418d65:	mov    r8d,0x1
  418d6b:	mov    r9,rbp
  418d6e:	push   0x0
  418d70:	push   0x0
  418d72:	call   434470 <strcmp@plt+0x30cd8>
  418d77:	add    rsp,0x10
  418d7b:	movzx  edx,r12b
  418d7f:	mov    r15d,0x1
  418d85:	mov    edi,ebx
  418d87:	xor    esi,esi
  418d89:	mov    ecx,r12d
  418d8c:	mov    r8d,0x1
  418d92:	mov    r9,r14
  418d95:	push   0x0
  418d97:	push   0x0
  418d99:	call   4343e0 <strcmp@plt+0x30c48>
  418d9e:	add    rsp,0x10
  418da2:	mov    edi,r13d
  418da5:	mov    esi,ebx
  418da7:	jmp    418db2 <strcmp@plt+0x1561a>
  418da9:	mov    edi,DWORD PTR [r13+0x34]
  418dad:	mov    esi,0xa
  418db2:	mov    rdx,r14
  418db5:	xor    ecx,ecx
  418db7:	call   435970 <strcmp@plt+0x321d8>
  418dbc:	mov    eax,r15d
  418dbf:	add    rsp,0x18
  418dc3:	pop    rbx
  418dc4:	pop    r12
  418dc6:	pop    r13
  418dc8:	pop    r14
  418dca:	pop    r15
  418dcc:	pop    rbp
  418dcd:	ret    
  418dce:	mov    edi,0xa
  418dd3:	mov    ebx,eax
  418dd5:	call   435360 <strcmp@plt+0x31bc8>
  418dda:	mov    ecx,ebx
  418ddc:	mov    edx,eax
  418dde:	mov    DWORD PTR [r13+0x34],eax
  418de2:	cmp    BYTE PTR [r13+0xc],0x1
  418de7:	jne    418cd3 <strcmp@plt+0x1553b>
  418ded:	cmp    cx,0x2
  418df1:	mov    ebx,DWORD PTR [rsp+0xc]
  418df5:	mov    r13d,edx
  418df8:	jne    418e06 <strcmp@plt+0x1566e>
  418dfa:	mov    rax,QWORD PTR [rsp+0x10]
  418dff:	cmp    QWORD PTR [rax+0x8],0x0
  418e04:	je     418e20 <strcmp@plt+0x15688>
  418e06:	cmp    cx,0xa
  418e0a:	jne    418d7b <strcmp@plt+0x155e3>
  418e10:	mov    rax,QWORD PTR [rsp+0x10]
  418e15:	cmp    QWORD PTR [rax+0x10],0x0
  418e1a:	jne    418d7b <strcmp@plt+0x155e3>
  418e20:	cmp    DWORD PTR [rbp+0x0],0x2
  418e24:	jl     418e39 <strcmp@plt+0x156a1>
  418e26:	lea    rsi,[rip+0x2f097]        # 447ec4 <strcmp@plt+0x4472c>
  418e2d:	mov    edi,0x6
  418e32:	xor    eax,eax
  418e34:	call   42e520 <strcmp@plt+0x2ad88>
  418e39:	call   4197a0 <strcmp@plt+0x16008>
  418e3e:	jmp    418d7b <strcmp@plt+0x155e3>
  418e43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e4d:	nop    DWORD PTR [rax]
  418e50:	push   rbp
  418e51:	push   r15
  418e53:	push   r14
  418e55:	push   rbx
  418e56:	push   rax
  418e57:	mov    rbx,rdi
  418e5a:	lea    rax,[rip+0x4b91f]        # 464780 <strcmp@plt+0x60fe8>
  418e61:	mov    r15,QWORD PTR [rax+0x70]
  418e65:	cmp    esi,edx
  418e67:	je     418f9c <strcmp@plt+0x15804>
  418e6d:	mov    r14d,edx
  418e70:	mov    ebp,esi
  418e72:	lea    rax,[rip+0x4bf47]        # 464dc0 <strcmp@plt+0x61628>
  418e79:	cmp    DWORD PTR [rax],0x2
  418e7c:	jl     418e97 <strcmp@plt+0x156ff>
  418e7e:	mov    rdx,QWORD PTR [rbx]
  418e81:	mov    ecx,DWORD PTR [rbx+0x8]
  418e84:	lea    rsi,[rip+0x2f077]        # 447f02 <strcmp@plt+0x4476a>
  418e8b:	mov    edi,0x6
  418e90:	xor    eax,eax
  418e92:	call   42e520 <strcmp@plt+0x2ad88>
  418e97:	add    ebp,0xa
  418e9a:	add    r14d,0xa
  418e9e:	mov    r9,QWORD PTR [rbx+0x10]
  418ea2:	test   r9,r9
  418ea5:	je     418f1d <strcmp@plt+0x15785>
  418ea7:	cmp    DWORD PTR [r9+0x18],0x0
  418eac:	je     418f1d <strcmp@plt+0x15785>
  418eae:	movzx  edx,bpl
  418eb2:	mov    edi,0x2
  418eb7:	xor    esi,esi
  418eb9:	mov    ecx,ebp
  418ebb:	mov    r8d,0x1
  418ec1:	push   0x0
  418ec3:	push   0x0
  418ec5:	call   434470 <strcmp@plt+0x30cd8>
  418eca:	add    rsp,0x10
  418ece:	mov    r9,QWORD PTR [rbx+0x10]
  418ed2:	movzx  edx,r14b
  418ed6:	mov    edi,0x2
  418edb:	mov    esi,0x0
  418ee0:	mov    ecx,r14d
  418ee3:	mov    r8d,0x1
  418ee9:	push   0x0
  418eeb:	push   0x0
  418eed:	call   4343e0 <strcmp@plt+0x30c48>
  418ef2:	add    rsp,0x10
  418ef6:	mov    edi,DWORD PTR [rbx+0x30]
  418ef9:	call   403770 <close@plt>
  418efe:	mov    edi,0x2
  418f03:	call   435360 <strcmp@plt+0x31bc8>
  418f08:	mov    DWORD PTR [rbx+0x30],eax
  418f0b:	mov    rdx,QWORD PTR [rbx+0x10]
  418f0f:	mov    edi,eax
  418f11:	mov    esi,0x2
  418f16:	xor    ecx,ecx
  418f18:	call   435970 <strcmp@plt+0x321d8>
  418f1d:	mov    r9,QWORD PTR [rbx+0x18]
  418f21:	test   r9,r9
  418f24:	je     418f9c <strcmp@plt+0x15804>
  418f26:	cmp    DWORD PTR [r9+0x18],0x0
  418f2b:	je     418f9c <strcmp@plt+0x15804>
  418f2d:	movzx  edx,bpl
  418f31:	mov    edi,0xa
  418f36:	xor    esi,esi
  418f38:	mov    ecx,ebp
  418f3a:	mov    r8d,0x1
  418f40:	push   0x0
  418f42:	push   0x0
  418f44:	call   434470 <strcmp@plt+0x30cd8>
  418f49:	add    rsp,0x10
  418f4d:	mov    r9,QWORD PTR [rbx+0x18]
  418f51:	movzx  edx,r14b
  418f55:	mov    edi,0xa
  418f5a:	mov    esi,0x0
  418f5f:	mov    ecx,r14d
  418f62:	mov    r8d,0x1
  418f68:	push   0x0
  418f6a:	push   0x0
  418f6c:	call   4343e0 <strcmp@plt+0x30c48>
  418f71:	add    rsp,0x10
  418f75:	mov    edi,DWORD PTR [rbx+0x34]
  418f78:	call   403770 <close@plt>
  418f7d:	mov    edi,0xa
  418f82:	call   435360 <strcmp@plt+0x31bc8>
  418f87:	mov    DWORD PTR [rbx+0x34],eax
  418f8a:	mov    rdx,QWORD PTR [rbx+0x18]
  418f8e:	mov    edi,eax
  418f90:	mov    esi,0xa
  418f95:	xor    ecx,ecx
  418f97:	call   435970 <strcmp@plt+0x321d8>
  418f9c:	mov    rax,QWORD PTR [r15+0x8]
  418fa0:	cmp    rax,rbx
  418fa3:	je     418fb8 <strcmp@plt+0x15820>
  418fa5:	mov    rcx,QWORD PTR [r15+0x10]
  418fa9:	test   rcx,rcx
  418fac:	je     418fb8 <strcmp@plt+0x15820>
  418fae:	test   rax,rax
  418fb1:	je     418fb8 <strcmp@plt+0x15820>
  418fb3:	cmp    rcx,rbx
  418fb6:	jne    418fdc <strcmp@plt+0x15844>
  418fb8:	lea    rax,[rip+0x4be01]        # 464dc0 <strcmp@plt+0x61628>
  418fbf:	cmp    DWORD PTR [rax],0x2
  418fc2:	jl     418fd7 <strcmp@plt+0x1583f>
  418fc4:	lea    rsi,[rip+0x2ef86]        # 447f51 <strcmp@plt+0x447b9>
  418fcb:	mov    edi,0x6
  418fd0:	xor    eax,eax
  418fd2:	call   42e520 <strcmp@plt+0x2ad88>
  418fd7:	call   4197a0 <strcmp@plt+0x16008>
  418fdc:	mov    eax,0x1
  418fe1:	add    rsp,0x8
  418fe5:	pop    rbx
  418fe6:	pop    r14
  418fe8:	pop    r15
  418fea:	pop    rbp
  418feb:	ret    
  418fec:	nop    DWORD PTR [rax+0x0]
  418ff0:	push   rbp
  418ff1:	push   r15
  418ff3:	push   r14
  418ff5:	push   r13
  418ff7:	push   r12
  418ff9:	push   rbx
  418ffa:	push   rax
  418ffb:	mov    ebp,esi
  418ffd:	call   422e20 <strcmp@plt+0x1f688>
  419002:	mov    r14,rax
  419005:	lea    rax,[rip+0x4b774]        # 464780 <strcmp@plt+0x60fe8>
  41900c:	mov    rbx,QWORD PTR [rax+0x70]
  419010:	test   bpl,bpl
  419013:	je     419046 <strcmp@plt+0x158ae>
  419015:	mov    rdi,QWORD PTR [rbx+0x18]
  419019:	call   436460 <strcmp@plt+0x32cc8>
  41901e:	lea    rdi,[rip+0x12fcb]        # 42bff0 <strcmp@plt+0x28858>
  419025:	call   435e70 <strcmp@plt+0x326d8>
  41902a:	mov    QWORD PTR [rbx+0x18],rax
  41902e:	mov    r15d,0x1
  419034:	mov    eax,r15d
  419037:	add    rsp,0x8
  41903b:	pop    rbx
  41903c:	pop    r12
  41903e:	pop    r13
  419040:	pop    r14
  419042:	pop    r15
  419044:	pop    rbp
  419045:	ret    
  419046:	lea    r12,[rip+0x29c87]        # 442cd4 <strcmp@plt+0x3f53c>
  41904d:	mov    rdi,r14
  419050:	mov    rsi,r12
  419053:	call   403798 <strcmp@plt>
  419058:	test   eax,eax
  41905a:	je     4190ca <strcmp@plt+0x15932>
  41905c:	lea    r15,[rip+0x2aaff]        # 443b62 <strcmp@plt+0x403ca>
  419063:	mov    rdi,r14
  419066:	mov    rsi,r15
  419069:	call   403798 <strcmp@plt>
  41906e:	lea    rbp,[rip+0x4bd4b]        # 464dc0 <strcmp@plt+0x61628>
  419075:	mov    ecx,DWORD PTR [rbp+0x0]
  419078:	test   eax,eax
  41907a:	je     419145 <strcmp@plt+0x159ad>
  419080:	cmp    ecx,0x3
  419083:	jl     41909b <strcmp@plt+0x15903>
  419085:	lea    rsi,[rip+0x2f0ec]        # 448178 <strcmp@plt+0x449e0>
  41908c:	mov    edi,0x7
  419091:	mov    rdx,r14
  419094:	xor    eax,eax
  419096:	call   42e520 <strcmp@plt+0x2ad88>
  41909b:	mov    rdi,QWORD PTR [rbx+0x18]
  41909f:	mov    rsi,r14
  4190a2:	call   436340 <strcmp@plt+0x32ba8>
  4190a7:	test   rax,rax
  4190aa:	je     4191b5 <strcmp@plt+0x15a1d>
  4190b0:	mov    r13,rax
  4190b3:	cmp    DWORD PTR [rax+0x18],0x0
  4190b7:	je     4191e0 <strcmp@plt+0x15a48>
  4190bd:	mov    rax,QWORD PTR [r13+0x8]
  4190c1:	mov    rsi,QWORD PTR [rax+0x10]
  4190c5:	jmp    4191e2 <strcmp@plt+0x15a4a>
  4190ca:	lea    rax,[rip+0x4bcef]        # 464dc0 <strcmp@plt+0x61628>
  4190d1:	cmp    DWORD PTR [rax],0x3
  4190d4:	jl     4190e9 <strcmp@plt+0x15951>
  4190d6:	lea    rsi,[rip+0x2efd3]        # 4480b0 <strcmp@plt+0x44918>
  4190dd:	mov    edi,0x7
  4190e2:	xor    eax,eax
  4190e4:	call   42e520 <strcmp@plt+0x2ad88>
  4190e9:	mov    rdi,QWORD PTR [rbx+0x18]
  4190ed:	lea    rsi,[rip+0x29be0]        # 442cd4 <strcmp@plt+0x3f53c>
  4190f4:	call   436340 <strcmp@plt+0x32ba8>
  4190f9:	mov    r15d,0x1
  4190ff:	test   rax,rax
  419102:	je     419034 <strcmp@plt+0x1589c>
  419108:	mov    rbp,rax
  41910b:	cmp    DWORD PTR [rax+0x18],0x0
  41910f:	jle    419034 <strcmp@plt+0x1589c>
  419115:	add    rbx,0x20
  419119:	nop    DWORD PTR [rax+0x0]
  419120:	mov    rax,QWORD PTR [rbp+0x8]
  419124:	mov    rsi,QWORD PTR [rax+0x10]
  419128:	mov    rdi,rbx
  41912b:	call   417780 <strcmp@plt+0x13fe8>
  419130:	mov    rdi,QWORD PTR [rax]
  419133:	xor    esi,esi
  419135:	call   418ff0 <strcmp@plt+0x15858>
  41913a:	cmp    DWORD PTR [rbp+0x18],0x0
  41913e:	jg     419120 <strcmp@plt+0x15988>
  419140:	jmp    419034 <strcmp@plt+0x1589c>
  419145:	cmp    ecx,0x3
  419148:	jl     41915d <strcmp@plt+0x159c5>
  41914a:	lea    rsi,[rip+0x2efc3]        # 448114 <strcmp@plt+0x4497c>
  419151:	mov    edi,0x7
  419156:	xor    eax,eax
  419158:	call   42e520 <strcmp@plt+0x2ad88>
  41915d:	mov    rdi,QWORD PTR [rbx+0x18]
  419161:	lea    rsi,[rip+0x2a9fa]        # 443b62 <strcmp@plt+0x403ca>
  419168:	call   436340 <strcmp@plt+0x32ba8>
  41916d:	mov    r15d,0x1
  419173:	test   rax,rax
  419176:	je     419034 <strcmp@plt+0x1589c>
  41917c:	mov    rbp,rax
  41917f:	cmp    DWORD PTR [rax+0x18],0x0
  419183:	jle    419034 <strcmp@plt+0x1589c>
  419189:	add    rbx,0x20
  41918d:	nop    DWORD PTR [rax]
  419190:	mov    rax,QWORD PTR [rbp+0x8]
  419194:	mov    rsi,QWORD PTR [rax+0x10]
  419198:	mov    rdi,rbx
  41919b:	call   417780 <strcmp@plt+0x13fe8>
  4191a0:	mov    rdi,QWORD PTR [rax]
  4191a3:	xor    esi,esi
  4191a5:	call   418ff0 <strcmp@plt+0x15858>
  4191aa:	cmp    DWORD PTR [rbp+0x18],0x0
  4191ae:	jg     419190 <strcmp@plt+0x159f8>
  4191b0:	jmp    419034 <strcmp@plt+0x1589c>
  4191b5:	xor    r15d,r15d
  4191b8:	cmp    DWORD PTR [rbp+0x0],0x2
  4191bc:	jl     419034 <strcmp@plt+0x1589c>
  4191c2:	lea    rsi,[rip+0x2f006]        # 4481cf <strcmp@plt+0x44a37>
  4191c9:	xor    r15d,r15d
  4191cc:	mov    edi,0x6
  4191d1:	mov    rdx,r14
  4191d4:	xor    eax,eax
  4191d6:	call   42e520 <strcmp@plt+0x2ad88>
  4191db:	jmp    419034 <strcmp@plt+0x1589c>
  4191e0:	xor    esi,esi
  4191e2:	lea    rdi,[rbx+0x20]
  4191e6:	call   417780 <strcmp@plt+0x13fe8>
  4191eb:	cmp    DWORD PTR [rax+0x10],0x1
  4191ef:	jne    419235 <strcmp@plt+0x15a9d>
  4191f1:	mov    rdi,QWORD PTR [rax]
  4191f4:	call   422ef0 <strcmp@plt+0x1f758>
  4191f9:	cmp    ax,0x2
  4191fd:	je     419208 <strcmp@plt+0x15a70>
  4191ff:	cmp    ax,0xa
  419203:	jne    419246 <strcmp@plt+0x15aae>
  419205:	mov    r12,r15
  419208:	mov    rdi,QWORD PTR [rbx+0x18]
  41920c:	mov    rsi,r12
  41920f:	call   436340 <strcmp@plt+0x32ba8>
  419214:	mov    rbp,QWORD PTR [r13+0x8]
  419218:	cmp    rbp,r13
  41921b:	je     419235 <strcmp@plt+0x15a9d>
  41921d:	mov    r15,rax
  419220:	mov    rdi,QWORD PTR [rbp+0x10]
  419224:	mov    rsi,r15
  419227:	call   42be60 <strcmp@plt+0x286c8>
  41922c:	mov    rbp,QWORD PTR [rbp+0x8]
  419230:	cmp    rbp,r13
  419233:	jne    419220 <strcmp@plt+0x15a88>
  419235:	mov    rdi,QWORD PTR [rbx+0x18]
  419239:	mov    rsi,r14
  41923c:	call   4361c0 <strcmp@plt+0x32a28>
  419241:	jmp    41902e <strcmp@plt+0x15896>
  419246:	cmp    DWORD PTR [rbp+0x0],0x0
  41924a:	jle    419267 <strcmp@plt+0x15acf>
  41924c:	lea    rsi,[rip+0x2efb5]        # 448208 <strcmp@plt+0x44a70>
  419253:	xor    r15d,r15d
  419256:	mov    edi,0x5
  41925b:	xor    eax,eax
  41925d:	call   42e520 <strcmp@plt+0x2ad88>
  419262:	jmp    419034 <strcmp@plt+0x1589c>
  419267:	xor    r15d,r15d
  41926a:	jmp    419034 <strcmp@plt+0x1589c>
  41926f:	nop
  419270:	lea    rax,[rip+0x4b509]        # 464780 <strcmp@plt+0x60fe8>
  419277:	mov    rax,QWORD PTR [rax+0x70]
  41927b:	ret    
  41927c:	nop    DWORD PTR [rax+0x0]
  419280:	push   rbx
  419281:	sub    rsp,0x10
  419285:	mov    ebx,edi
  419287:	lea    rdi,[rip+0x2ea49]        # 447cd7 <strcmp@plt+0x4453f>
  41928e:	call   4030c0 <if_nametoindex@plt>
  419293:	mov    DWORD PTR [rsp],0x64
  41929a:	mov    edi,ebx
  41929c:	mov    esi,eax
  41929e:	xor    edx,edx
  4192a0:	xor    ecx,ecx
  4192a2:	xor    r8d,r8d
  4192a5:	mov    r9d,0x64
  4192ab:	call   434700 <strcmp@plt+0x30f68>
  4192b0:	add    rsp,0x10
  4192b4:	pop    rbx
  4192b5:	ret    
  4192b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4192c0:	push   rbp
  4192c1:	push   r14
  4192c3:	push   rbx
  4192c4:	mov    r14,rsi
  4192c7:	mov    ebp,edi
  4192c9:	mov    edi,0x40
  4192ce:	call   431d90 <strcmp@plt+0x2e5f8>
  4192d3:	test   rax,rax
  4192d6:	je     41930e <strcmp@plt+0x15b76>
  4192d8:	mov    rbx,rax
  4192db:	mov    DWORD PTR [rax],ebp
  4192dd:	lea    rdi,[rip+0x12d0c]        # 42bff0 <strcmp@plt+0x28858>
  4192e4:	call   435e70 <strcmp@plt+0x326d8>
  4192e9:	mov    QWORD PTR [rbx+0x18],rax
  4192ed:	lea    rsi,[rip+0xa14c]        # 423440 <strcmp@plt+0x1fca8>
  4192f4:	mov    rdi,r14
  4192f7:	call   42ba20 <strcmp@plt+0x28288>
  4192fc:	mov    QWORD PTR [rbx+0x38],rax
  419300:	mov    rdi,rbx
  419303:	add    rdi,0x20
  419307:	call   4171e0 <strcmp@plt+0x13a48>
  41930c:	jmp    419310 <strcmp@plt+0x15b78>
  41930e:	xor    ebx,ebx
  419310:	mov    rax,rbx
  419313:	pop    rbx
  419314:	pop    r14
  419316:	pop    rbp
  419317:	ret    
  419318:	nop    DWORD PTR [rax+rax*1+0x0]
  419320:	push   r15
  419322:	push   r14
  419324:	push   rbx
  419325:	lea    rax,[rip+0x4b454]        # 464780 <strcmp@plt+0x60fe8>
  41932c:	mov    r14,QWORD PTR [rax+0x70]
  419330:	test   r14,r14
  419333:	je     41938a <strcmp@plt+0x15bf2>
  419335:	lea    r15,[rip+0x567e4]        # 46fb20 <strcmp@plt+0x6c388>
  41933c:	mov    rax,QWORD PTR [r15]
  41933f:	mov    rbx,QWORD PTR [rax+0x8]
  419343:	cmp    rbx,rax
  419346:	je     419362 <strcmp@plt+0x15bca>
  419348:	nop    DWORD PTR [rax+rax*1+0x0]
  419350:	mov    rdi,QWORD PTR [rbx+0x10]
  419354:	call   419390 <strcmp@plt+0x15bf8>
  419359:	mov    rbx,QWORD PTR [rbx+0x8]
  41935d:	cmp    rbx,QWORD PTR [r15]
  419360:	jne    419350 <strcmp@plt+0x15bb8>
  419362:	mov    rdi,QWORD PTR [r14+0x18]
  419366:	call   436460 <strcmp@plt+0x32cc8>
  41936b:	mov    rdi,QWORD PTR [r14+0x38]
  41936f:	call   42bff0 <strcmp@plt+0x28858>
  419374:	lea    rdi,[r14+0x20]
  419378:	call   417210 <strcmp@plt+0x13a78>
  41937d:	mov    rdi,r14
  419380:	pop    rbx
  419381:	pop    r14
  419383:	pop    r15
  419385:	jmp    403790 <free@plt>
  41938a:	pop    rbx
  41938b:	pop    r14
  41938d:	pop    r15
  41938f:	ret    
  419390:	push   r14
  419392:	push   rbx
  419393:	push   rax
  419394:	mov    rbx,rdi
  419397:	mov    esi,DWORD PTR [rdi+0x8]
  41939a:	lea    r14d,[rsi+0xa]
  41939e:	mov    r9,QWORD PTR [rdi+0x10]
  4193a2:	test   r9,r9
  4193a5:	je     4193fe <strcmp@plt+0x15c66>
  4193a7:	cmp    DWORD PTR [r9+0x18],0x0
  4193ac:	je     4193fe <strcmp@plt+0x15c66>
  4193ae:	mov    r8,QWORD PTR [rbx+0x20]
  4193b2:	test   r8,r8
  4193b5:	je     4193dd <strcmp@plt+0x15c45>
  4193b7:	cmp    DWORD PTR [r8+0x18],0x0
  4193bc:	je     4193dd <strcmp@plt+0x15c45>
  4193be:	sub    rsp,0x8
  4193c2:	mov    edi,0x2
  4193c7:	xor    edx,edx
  4193c9:	xor    ecx,ecx
  4193cb:	xor    r9d,r9d
  4193ce:	push   r14
  4193d0:	call   4347c0 <strcmp@plt+0x31028>
  4193d5:	add    rsp,0x10
  4193d9:	mov    r9,QWORD PTR [rbx+0x10]
  4193dd:	movzx  edx,r14b
  4193e1:	mov    edi,0x2
  4193e6:	xor    esi,esi
  4193e8:	mov    ecx,r14d
  4193eb:	mov    r8d,0x1
  4193f1:	push   0x0
  4193f3:	push   0x0
  4193f5:	call   434470 <strcmp@plt+0x30cd8>
  4193fa:	add    rsp,0x10
  4193fe:	mov    r9,QWORD PTR [rbx+0x18]
  419402:	test   r9,r9
  419405:	je     419463 <strcmp@plt+0x15ccb>
  419407:	cmp    DWORD PTR [r9+0x18],0x0
  41940c:	je     419463 <strcmp@plt+0x15ccb>
  41940e:	mov    r8,QWORD PTR [rbx+0x28]
  419412:	test   r8,r8
  419415:	je     419440 <strcmp@plt+0x15ca8>
  419417:	cmp    DWORD PTR [r8+0x18],0x0
  41941c:	je     419440 <strcmp@plt+0x15ca8>
  41941e:	mov    esi,DWORD PTR [rbx+0x8]
  419421:	sub    rsp,0x8
  419425:	mov    edi,0xa
  41942a:	xor    edx,edx
  41942c:	xor    ecx,ecx
  41942e:	xor    r9d,r9d
  419431:	push   r14
  419433:	call   4347c0 <strcmp@plt+0x31028>
  419438:	add    rsp,0x10
  41943c:	mov    r9,QWORD PTR [rbx+0x18]
  419440:	movzx  edx,r14b
  419444:	mov    edi,0xa
  419449:	xor    esi,esi
  41944b:	mov    ecx,r14d
  41944e:	mov    r8d,0x1
  419454:	push   0x0
  419456:	push   0x0
  419458:	call   434470 <strcmp@plt+0x30cd8>
  41945d:	add    rsp,0x18
  419461:	jmp    419467 <strcmp@plt+0x15ccf>
  419463:	add    rsp,0x8
  419467:	pop    rbx
  419468:	pop    r14
  41946a:	ret    
  41946b:	nop    DWORD PTR [rax+rax*1+0x0]
  419470:	test   rdi,rdi
  419473:	je     41949d <strcmp@plt+0x15d05>
  419475:	push   rbx
  419476:	mov    rbx,rdi
  419479:	mov    rdi,QWORD PTR [rdi+0x18]
  41947d:	call   436460 <strcmp@plt+0x32cc8>
  419482:	mov    rdi,QWORD PTR [rbx+0x38]
  419486:	call   42bff0 <strcmp@plt+0x28858>
  41948b:	lea    rdi,[rbx+0x20]
  41948f:	call   417210 <strcmp@plt+0x13a78>
  419494:	mov    rdi,rbx
  419497:	pop    rbx
  419498:	jmp    403790 <free@plt>
  41949d:	ret    
  41949e:	xchg   ax,ax
  4194a0:	push   rbp
  4194a1:	push   r15
  4194a3:	push   r14
  4194a5:	push   r13
  4194a7:	push   r12
  4194a9:	push   rbx
  4194aa:	push   rax
  4194ab:	mov    r15,rdi
  4194ae:	lea    rax,[rip+0x4b2cb]        # 464780 <strcmp@plt+0x60fe8>
  4194b5:	mov    r13,QWORD PTR [rax+0x70]
  4194b9:	call   422ef0 <strcmp@plt+0x1f758>
  4194be:	xor    ebx,ebx
  4194c0:	test   ax,ax
  4194c3:	je     419554 <strcmp@plt+0x15dbc>
  4194c9:	mov    ebp,eax
  4194cb:	lea    rdi,[rip+0x2e805]        # 447cd7 <strcmp@plt+0x4453f>
  4194d2:	mov    rsi,r15
  4194d5:	call   42d8d0 <strcmp@plt+0x2a138>
  4194da:	cmp    eax,0x1
  4194dd:	jne    419554 <strcmp@plt+0x15dbc>
  4194df:	mov    rax,QWORD PTR [r13+0x38]
  4194e3:	mov    r14,QWORD PTR [rax+0x8]
  4194e7:	mov    ebx,0x1
  4194ec:	cmp    r14,rax
  4194ef:	je     419554 <strcmp@plt+0x15dbc>
  4194f1:	movzx  r12d,bp
  4194f5:	jmp    41950a <strcmp@plt+0x15d72>
  4194f7:	nop    WORD PTR [rax+rax*1+0x0]
  419500:	mov    r14,QWORD PTR [r14+0x8]
  419504:	cmp    r14,QWORD PTR [r13+0x38]
  419508:	je     41954f <strcmp@plt+0x15db7>
  41950a:	mov    rbx,QWORD PTR [r14+0x10]
  41950e:	mov    rdi,rbx
  419511:	call   422ef0 <strcmp@plt+0x1f758>
  419516:	cmp    ax,bp
  419519:	jne    419500 <strcmp@plt+0x15d68>
  41951b:	lea    rax,[rip+0x57016]        # 470538 <strcmp@plt+0x6cda0>
  419522:	mov    esi,DWORD PTR [rax]
  419524:	mov    DWORD PTR [rsp],0xfe
  41952b:	mov    edi,r12d
  41952e:	mov    rdx,rbx
  419531:	xor    ecx,ecx
  419533:	xor    r8d,r8d
  419536:	xor    r9d,r9d
  419539:	call   434700 <strcmp@plt+0x30f68>
  41953e:	cmp    eax,0x1
  419541:	je     419500 <strcmp@plt+0x15d68>
  419543:	mov    rdi,r15
  419546:	call   419570 <strcmp@plt+0x15dd8>
  41954b:	xor    ebx,ebx
  41954d:	jmp    419554 <strcmp@plt+0x15dbc>
  41954f:	mov    ebx,0x1
  419554:	mov    eax,ebx
  419556:	add    rsp,0x8
  41955a:	pop    rbx
  41955b:	pop    r12
  41955d:	pop    r13
  41955f:	pop    r14
  419561:	pop    r15
  419563:	pop    rbp
  419564:	ret    
  419565:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41956f:	nop
  419570:	push   rbp
  419571:	push   r15
  419573:	push   r14
  419575:	push   r13
  419577:	push   r12
  419579:	push   rbx
  41957a:	push   rax
  41957b:	mov    r15,rdi
  41957e:	lea    rax,[rip+0x4b1fb]        # 464780 <strcmp@plt+0x60fe8>
  419585:	mov    r13,QWORD PTR [rax+0x70]
  419589:	call   422ef0 <strcmp@plt+0x1f758>
  41958e:	xor    ebx,ebx
  419590:	test   ax,ax
  419593:	je     419624 <strcmp@plt+0x15e8c>
  419599:	mov    ebp,eax
  41959b:	lea    rdi,[rip+0x2e735]        # 447cd7 <strcmp@plt+0x4453f>
  4195a2:	mov    rsi,r15
  4195a5:	call   42da70 <strcmp@plt+0x2a2d8>
  4195aa:	cmp    eax,0x1
  4195ad:	jne    419624 <strcmp@plt+0x15e8c>
  4195af:	mov    rax,QWORD PTR [r13+0x38]
  4195b3:	mov    r14,QWORD PTR [rax+0x8]
  4195b7:	mov    ebx,0x1
  4195bc:	cmp    r14,rax
  4195bf:	je     419624 <strcmp@plt+0x15e8c>
  4195c1:	movzx  r12d,bp
  4195c5:	jmp    4195da <strcmp@plt+0x15e42>
  4195c7:	nop    WORD PTR [rax+rax*1+0x0]
  4195d0:	mov    r14,QWORD PTR [r14+0x8]
  4195d4:	cmp    r14,QWORD PTR [r13+0x38]
  4195d8:	je     41961f <strcmp@plt+0x15e87>
  4195da:	mov    rbx,QWORD PTR [r14+0x10]
  4195de:	mov    rdi,rbx
  4195e1:	call   422ef0 <strcmp@plt+0x1f758>
  4195e6:	cmp    ax,bp
  4195e9:	jne    4195d0 <strcmp@plt+0x15e38>
  4195eb:	lea    rax,[rip+0x56f46]        # 470538 <strcmp@plt+0x6cda0>
  4195f2:	mov    esi,DWORD PTR [rax]
  4195f4:	mov    DWORD PTR [rsp],0xfe
  4195fb:	mov    edi,r12d
  4195fe:	mov    rdx,rbx
  419601:	xor    ecx,ecx
  419603:	xor    r8d,r8d
  419606:	xor    r9d,r9d
  419609:	call   4347c0 <strcmp@plt+0x31028>
  41960e:	cmp    eax,0x1
  419611:	je     4195d0 <strcmp@plt+0x15e38>
  419613:	mov    rdi,r15
  419616:	call   419570 <strcmp@plt+0x15dd8>
  41961b:	xor    eax,eax
  41961d:	jmp    419626 <strcmp@plt+0x15e8e>
  41961f:	mov    ebx,0x1
  419624:	mov    eax,ebx
  419626:	add    rsp,0x8
  41962a:	pop    rbx
  41962b:	pop    r12
  41962d:	pop    r13
  41962f:	pop    r14
  419631:	pop    r15
  419633:	pop    rbp
  419634:	ret    
  419635:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41963f:	nop
  419640:	push   rbp
  419641:	push   r15
  419643:	push   r14
  419645:	push   r12
  419647:	push   rbx
  419648:	sub    rsp,0x10
  41964c:	mov    r14,rsi
  41964f:	mov    rbx,rdi
  419652:	mov    r12d,DWORD PTR [rdi+0x8]
  419656:	mov    rdi,rsi
  419659:	call   422ef0 <strcmp@plt+0x1f758>
  41965e:	cmp    ax,0xa
  419662:	je     419676 <strcmp@plt+0x15ede>
  419664:	cmp    ax,0x2
  419668:	jne    4196dc <strcmp@plt+0x15f44>
  41966a:	lea    rbp,[rbx+0x20]
  41966e:	mov    r15d,0x2
  419674:	jmp    419680 <strcmp@plt+0x15ee8>
  419676:	lea    rbp,[rbx+0x28]
  41967a:	mov    r15d,0xa
  419680:	add    r12d,0xa
  419684:	mov    rdi,QWORD PTR [rbp+0x0]
  419688:	test   rdi,rdi
  41968b:	je     4196a5 <strcmp@plt+0x15f0d>
  41968d:	cmp    DWORD PTR [rdi+0x18],0x0
  419691:	je     4196a5 <strcmp@plt+0x15f0d>
  419693:	mov    rsi,r14
  419696:	call   423670 <strcmp@plt+0x1fed8>
  41969b:	test   eax,eax
  41969d:	je     4196e9 <strcmp@plt+0x15f51>
  41969f:	mov    rdi,QWORD PTR [rbp+0x0]
  4196a3:	jmp    4196b8 <strcmp@plt+0x15f20>
  4196a5:	call   422c90 <strcmp@plt+0x1f4f8>
  4196aa:	xor    eax,eax
  4196ac:	call   422c80 <strcmp@plt+0x1f4e8>
  4196b1:	mov    QWORD PTR [rbp+0x0],rax
  4196b5:	mov    rdi,rax
  4196b8:	mov    rsi,r14
  4196bb:	call   423260 <strcmp@plt+0x1fac8>
  4196c0:	mov    esi,DWORD PTR [rbx+0x8]
  4196c3:	mov    DWORD PTR [rsp],r12d
  4196c7:	mov    edi,r15d
  4196ca:	xor    edx,edx
  4196cc:	xor    ecx,ecx
  4196ce:	mov    r8,r14
  4196d1:	mov    r9d,0x64
  4196d7:	call   434700 <strcmp@plt+0x30f68>
  4196dc:	add    rsp,0x10
  4196e0:	pop    rbx
  4196e1:	pop    r12
  4196e3:	pop    r14
  4196e5:	pop    r15
  4196e7:	pop    rbp
  4196e8:	ret    
  4196e9:	lea    rax,[rip+0x4b6d0]        # 464dc0 <strcmp@plt+0x61628>
  4196f0:	cmp    DWORD PTR [rax],0x3
  4196f3:	jl     4196c0 <strcmp@plt+0x15f28>
  4196f5:	mov    rdi,r14
  4196f8:	call   422e20 <strcmp@plt+0x1f688>
  4196fd:	lea    rsi,[rip+0x2e88d]        # 447f91 <strcmp@plt+0x447f9>
  419704:	mov    edi,0x7
  419709:	mov    rdx,rax
  41970c:	xor    eax,eax
  41970e:	call   42e520 <strcmp@plt+0x2ad88>
  419713:	jmp    4196c0 <strcmp@plt+0x15f28>
  419715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41971f:	nop
  419720:	push   rbp
  419721:	push   r15
  419723:	push   r14
  419725:	push   rbx
  419726:	push   rax
  419727:	mov    r14,rsi
  41972a:	mov    rbx,rdi
  41972d:	mov    ebp,DWORD PTR [rdi+0x8]
  419730:	mov    rdi,rsi
  419733:	call   422ef0 <strcmp@plt+0x1f758>
  419738:	cmp    ax,0xa
  41973c:	je     41974f <strcmp@plt+0x15fb7>
  41973e:	cmp    ax,0x2
  419742:	jne    419793 <strcmp@plt+0x15ffb>
  419744:	lea    r15,[rbx+0x20]
  419748:	mov    edi,0x2
  41974d:	jmp    419758 <strcmp@plt+0x15fc0>
  41974f:	lea    r15,[rbx+0x28]
  419753:	mov    edi,0xa
  419758:	mov    rax,QWORD PTR [r15]
  41975b:	test   rax,rax
  41975e:	je     419793 <strcmp@plt+0x15ffb>
  419760:	cmp    DWORD PTR [rax+0x18],0x0
  419764:	je     419793 <strcmp@plt+0x15ffb>
  419766:	add    ebp,0xa
  419769:	mov    esi,DWORD PTR [rbx+0x8]
  41976c:	mov    DWORD PTR [rsp],ebp
  41976f:	xor    edx,edx
  419771:	xor    ecx,ecx
  419773:	mov    r8,r14
  419776:	mov    r9d,0x64
  41977c:	call   4347c0 <strcmp@plt+0x31028>
  419781:	mov    rdi,QWORD PTR [r15]
  419784:	call   422c90 <strcmp@plt+0x1f4f8>
  419789:	xor    edi,edi
  41978b:	call   422be0 <strcmp@plt+0x1f448>
  419790:	mov    QWORD PTR [r15],rax
  419793:	add    rsp,0x8
  419797:	pop    rbx
  419798:	pop    r14
  41979a:	pop    r15
  41979c:	pop    rbp
  41979d:	ret    
  41979e:	xchg   ax,ax
  4197a0:	push   r15
  4197a2:	push   r14
  4197a4:	push   rbx
  4197a5:	lea    rax,[rip+0x4afd4]        # 464780 <strcmp@plt+0x60fe8>
  4197ac:	mov    rbx,QWORD PTR [rax+0x70]
  4197b0:	mov    edi,0x2
  4197b5:	call   43ac50 <strcmp@plt+0x374b8>
  4197ba:	mov    QWORD PTR [rbx+0x8],rax
  4197be:	lea    r15,[rip+0x4b5fb]        # 464dc0 <strcmp@plt+0x61628>
  4197c5:	test   rax,rax
  4197c8:	je     4197f5 <strcmp@plt+0x1605d>
  4197ca:	cmp    DWORD PTR [r15],0x2
  4197ce:	jl     4197f5 <strcmp@plt+0x1605d>
  4197d0:	mov    r14,QWORD PTR [rax]
  4197d3:	mov    rdi,QWORD PTR [rax+0x10]
  4197d7:	call   422e20 <strcmp@plt+0x1f688>
  4197dc:	lea    rsi,[rip+0x2e801]        # 447fe4 <strcmp@plt+0x4484c>
  4197e3:	mov    edi,0x6
  4197e8:	mov    rdx,r14
  4197eb:	mov    rcx,rax
  4197ee:	xor    eax,eax
  4197f0:	call   42e520 <strcmp@plt+0x2ad88>
  4197f5:	mov    edi,0xa
  4197fa:	call   43ac50 <strcmp@plt+0x374b8>
  4197ff:	mov    QWORD PTR [rbx+0x10],rax
  419803:	test   rax,rax
  419806:	je     419833 <strcmp@plt+0x1609b>
  419808:	cmp    DWORD PTR [r15],0x2
  41980c:	jl     419833 <strcmp@plt+0x1609b>
  41980e:	mov    r14,QWORD PTR [rax]
  419811:	mov    rdi,QWORD PTR [rax+0x18]
  419815:	call   422e20 <strcmp@plt+0x1f688>
  41981a:	lea    rsi,[rip+0x2e7e3]        # 448004 <strcmp@plt+0x4486c>
  419821:	mov    edi,0x6
  419826:	mov    rdx,r14
  419829:	mov    rcx,rax
  41982c:	xor    eax,eax
  41982e:	call   42e520 <strcmp@plt+0x2ad88>
  419833:	cmp    QWORD PTR [rbx+0x8],0x0
  419838:	jne    419841 <strcmp@plt+0x160a9>
  41983a:	cmp    QWORD PTR [rbx+0x10],0x0
  41983f:	je     419847 <strcmp@plt+0x160af>
  419841:	pop    rbx
  419842:	pop    r14
  419844:	pop    r15
  419846:	ret    
  419847:	lea    rsi,[rip+0x2e7d6]        # 448024 <strcmp@plt+0x4488c>
  41984e:	mov    edi,0x1
  419853:	xor    eax,eax
  419855:	pop    rbx
  419856:	pop    r14
  419858:	pop    r15
  41985a:	jmp    42e520 <strcmp@plt+0x2ad88>
  41985f:	nop
  419860:	push   rbx
  419861:	lea    rax,[rip+0x4af18]        # 464780 <strcmp@plt+0x60fe8>
  419868:	mov    rax,QWORD PTR [rax+0x70]
  41986c:	cmp    edi,0xa
  41986f:	je     419887 <strcmp@plt+0x160ef>
  419871:	mov    edx,edi
  419873:	cmp    edi,0x2
  419876:	jne    419896 <strcmp@plt+0x160fe>
  419878:	mov    rax,QWORD PTR [rax+0x8]
  41987c:	test   rax,rax
  41987f:	je     4198a2 <strcmp@plt+0x1610a>
  419881:	mov    rbx,QWORD PTR [rax+0x10]
  419885:	jmp    4198bb <strcmp@plt+0x16123>
  419887:	mov    rax,QWORD PTR [rax+0x10]
  41988b:	test   rax,rax
  41988e:	je     4198a2 <strcmp@plt+0x1610a>
  419890:	mov    rbx,QWORD PTR [rax+0x18]
  419894:	jmp    4198bb <strcmp@plt+0x16123>
  419896:	lea    rax,[rip+0x4b523]        # 464dc0 <strcmp@plt+0x61628>
  41989d:	cmp    DWORD PTR [rax],0x2
  4198a0:	jge    4198a6 <strcmp@plt+0x1610e>
  4198a2:	xor    ebx,ebx
  4198a4:	jmp    4198bb <strcmp@plt+0x16123>
  4198a6:	lea    rsi,[rip+0x2e7a2]        # 44804f <strcmp@plt+0x448b7>
  4198ad:	xor    ebx,ebx
  4198af:	mov    edi,0x6
  4198b4:	xor    eax,eax
  4198b6:	call   42e520 <strcmp@plt+0x2ad88>
  4198bb:	mov    rax,rbx
  4198be:	pop    rbx
  4198bf:	ret    
  4198c0:	push   rbx
  4198c1:	lea    rax,[rip+0x4aeb8]        # 464780 <strcmp@plt+0x60fe8>
  4198c8:	mov    rax,QWORD PTR [rax+0x70]
  4198cc:	cmp    edi,0xa
  4198cf:	je     4198e6 <strcmp@plt+0x1614e>
  4198d1:	mov    edx,edi
  4198d3:	cmp    edi,0x2
  4198d6:	jne    4198f4 <strcmp@plt+0x1615c>
  4198d8:	mov    rax,QWORD PTR [rax+0x8]
  4198dc:	test   rax,rax
  4198df:	je     41991a <strcmp@plt+0x16182>
  4198e1:	mov    ebx,DWORD PTR [rax+0x30]
  4198e4:	jmp    41991f <strcmp@plt+0x16187>
  4198e6:	mov    rax,QWORD PTR [rax+0x10]
  4198ea:	test   rax,rax
  4198ed:	je     41991a <strcmp@plt+0x16182>
  4198ef:	mov    ebx,DWORD PTR [rax+0x34]
  4198f2:	jmp    41991f <strcmp@plt+0x16187>
  4198f4:	lea    rax,[rip+0x4b4c5]        # 464dc0 <strcmp@plt+0x61628>
  4198fb:	mov    ebx,0xfffffff7
  419900:	cmp    DWORD PTR [rax],0x2
  419903:	jl     41991f <strcmp@plt+0x16187>
  419905:	lea    rsi,[rip+0x2e774]        # 448080 <strcmp@plt+0x448e8>
  41990c:	mov    edi,0x6
  419911:	xor    eax,eax
  419913:	call   42e520 <strcmp@plt+0x2ad88>
  419918:	jmp    41991f <strcmp@plt+0x16187>
  41991a:	mov    ebx,0xfffffff7
  41991f:	mov    eax,ebx
  419921:	pop    rbx
  419922:	ret    
  419923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41992d:	nop    DWORD PTR [rax]
  419930:	push   rbx
  419931:	lea    rax,[rip+0x4ae48]        # 464780 <strcmp@plt+0x60fe8>
  419938:	mov    rbx,QWORD PTR [rax+0x70]
  41993c:	mov    rdi,QWORD PTR [rbx+0x18]
  419940:	call   436460 <strcmp@plt+0x32cc8>
  419945:	lea    rdi,[rip+0x126a4]        # 42bff0 <strcmp@plt+0x28858>
  41994c:	call   435e70 <strcmp@plt+0x326d8>
  419951:	mov    QWORD PTR [rbx+0x18],rax
  419955:	mov    eax,0x1
  41995a:	pop    rbx
  41995b:	ret    
  41995c:	nop    DWORD PTR [rax+0x0]
  419960:	lea    rax,[rip+0x2e8d9]        # 448240 <strcmp@plt+0x44aa8>
  419967:	ret    
  419968:	nop    DWORD PTR [rax+rax*1+0x0]
  419970:	push   r14
  419972:	push   rbx
  419973:	push   rax
  419974:	test   rdi,rdi
  419977:	je     4199d8 <strcmp@plt+0x16240>
  419979:	mov    rbx,rdi
  41997c:	lea    rdi,[rip+0x2e8cd]        # 448250 <strcmp@plt+0x44ab8>
  419983:	mov    rsi,rbx
  419986:	call   403798 <strcmp@plt>
  41998b:	lea    r14,[rip+0x48ee6]        # 462878 <strcmp@plt+0x5f0e0>
  419992:	test   eax,eax
  419994:	je     4199e4 <strcmp@plt+0x1624c>
  419996:	lea    rdi,[rip+0x2e8b8]        # 448255 <strcmp@plt+0x44abd>
  41999d:	mov    rsi,rbx
  4199a0:	call   403798 <strcmp@plt>
  4199a5:	test   eax,eax
  4199a7:	je     4199e4 <strcmp@plt+0x1624c>
  4199a9:	lea    rdi,[rip+0x2e8a9]        # 448259 <strcmp@plt+0x44ac1>
  4199b0:	mov    rsi,rbx
  4199b3:	call   403798 <strcmp@plt>
  4199b8:	test   eax,eax
  4199ba:	je     4199dd <strcmp@plt+0x16245>
  4199bc:	lea    rdi,[rip+0x2e89d]        # 448260 <strcmp@plt+0x44ac8>
  4199c3:	mov    rsi,rbx
  4199c6:	call   403798 <strcmp@plt>
  4199cb:	test   eax,eax
  4199cd:	jne    4199ef <strcmp@plt+0x16257>
  4199cf:	lea    rax,[rip+0x48f52]        # 462928 <strcmp@plt+0x5f190>
  4199d6:	jmp    4199e7 <strcmp@plt+0x1624f>
  4199d8:	xor    r14d,r14d
  4199db:	jmp    4199e4 <strcmp@plt+0x1624c>
  4199dd:	lea    r14,[rip+0x48eec]        # 4628d0 <strcmp@plt+0x5f138>
  4199e4:	mov    rax,r14
  4199e7:	add    rsp,0x8
  4199eb:	pop    rbx
  4199ec:	pop    r14
  4199ee:	ret    
  4199ef:	xor    eax,eax
  4199f1:	jmp    4199e7 <strcmp@plt+0x1624f>
  4199f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4199fd:	nop    DWORD PTR [rax]
  419a00:	add    edi,0xfffffffc
  419a03:	cmp    edi,0x2
  419a06:	ja     419a17 <strcmp@plt+0x1627f>
  419a08:	movsxd rax,edi
  419a0b:	lea    rcx,[rip+0x48e4e]        # 462860 <strcmp@plt+0x5f0c8>
  419a12:	mov    rax,QWORD PTR [rcx+rax*8]
  419a16:	ret    
  419a17:	xor    eax,eax
  419a19:	ret    
  419a1a:	nop    WORD PTR [rax+rax*1+0x0]
  419a20:	vxorps xmm0,xmm0,xmm0
  419a24:	vmovups XMMWORD PTR [rdi],xmm0
  419a28:	mov    QWORD PTR [rdi+0x10],0x0
  419a30:	ret    
  419a31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a3b:	nop    DWORD PTR [rax+rax*1+0x0]
  419a40:	push   rbx
  419a41:	test   rdi,rdi
  419a44:	je     419b58 <strcmp@plt+0x163c0>
  419a4a:	mov    rbx,rdi
  419a4d:	mov    rax,QWORD PTR [rdi]
  419a50:	test   rax,rax
  419a53:	je     419b58 <strcmp@plt+0x163c0>
  419a59:	mov    rdi,QWORD PTR [rbx+0x8]
  419a5d:	test   rdi,rdi
  419a60:	je     419a65 <strcmp@plt+0x162cd>
  419a62:	call   QWORD PTR [rax+0x40]
  419a65:	mov    rdi,QWORD PTR [rbx+0x10]
  419a69:	test   rdi,rdi
  419a6c:	je     419af9 <strcmp@plt+0x16361>
  419a72:	mov    rax,QWORD PTR [rbx]
  419a75:	movsxd rax,DWORD PTR [rax+0x14]
  419a79:	test   rax,rax
  419a7c:	je     419af4 <strcmp@plt+0x1635c>
  419a7e:	lea    rcx,[rax+rax*1]
  419a82:	add    rcx,0xffffffffffffffff
  419a86:	add    rax,rax
  419a89:	mov    rsi,rax
  419a8c:	and    rsi,0x6
  419a90:	je     419ab2 <strcmp@plt+0x1631a>
  419a92:	xor    edx,edx
  419a94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a9e:	xchg   ax,ax
  419aa0:	mov    BYTE PTR [rdi+rdx*1],0x0
  419aa4:	inc    rdx
  419aa7:	cmp    rsi,rdx
  419aaa:	jne    419aa0 <strcmp@plt+0x16308>
  419aac:	add    rdi,rdx
  419aaf:	sub    rax,rdx
  419ab2:	cmp    rcx,0x7
  419ab6:	jb     419af0 <strcmp@plt+0x16358>
  419ab8:	xor    ecx,ecx
  419aba:	nop    WORD PTR [rax+rax*1+0x0]
  419ac0:	mov    BYTE PTR [rdi+rcx*1],0x0
  419ac4:	mov    BYTE PTR [rdi+rcx*1+0x1],0x0
  419ac9:	mov    BYTE PTR [rdi+rcx*1+0x2],0x0
  419ace:	mov    BYTE PTR [rdi+rcx*1+0x3],0x0
  419ad3:	mov    BYTE PTR [rdi+rcx*1+0x4],0x0
  419ad8:	mov    BYTE PTR [rdi+rcx*1+0x5],0x0
  419add:	mov    BYTE PTR [rdi+rcx*1+0x6],0x0
  419ae2:	mov    BYTE PTR [rdi+rcx*1+0x7],0x0
  419ae7:	add    rcx,0x8
  419aeb:	cmp    rax,rcx
  419aee:	jne    419ac0 <strcmp@plt+0x16328>
  419af0:	mov    rdi,QWORD PTR [rbx+0x10]
  419af4:	call   403790 <free@plt>
  419af9:	mov    BYTE PTR [rbx],0x0
  419afc:	mov    BYTE PTR [rbx+0x1],0x0
  419b00:	mov    BYTE PTR [rbx+0x2],0x0
  419b04:	mov    BYTE PTR [rbx+0x3],0x0
  419b08:	mov    BYTE PTR [rbx+0x4],0x0
  419b0c:	mov    BYTE PTR [rbx+0x5],0x0
  419b10:	mov    BYTE PTR [rbx+0x6],0x0
  419b14:	mov    BYTE PTR [rbx+0x7],0x0
  419b18:	mov    BYTE PTR [rbx+0x8],0x0
  419b1c:	mov    BYTE PTR [rbx+0x9],0x0
  419b20:	mov    BYTE PTR [rbx+0xa],0x0
  419b24:	mov    BYTE PTR [rbx+0xb],0x0
  419b28:	mov    BYTE PTR [rbx+0xc],0x0
  419b2c:	mov    BYTE PTR [rbx+0xd],0x0
  419b30:	mov    BYTE PTR [rbx+0xe],0x0
  419b34:	mov    BYTE PTR [rbx+0xf],0x0
  419b38:	mov    BYTE PTR [rbx+0x10],0x0
  419b3c:	mov    BYTE PTR [rbx+0x11],0x0
  419b40:	mov    BYTE PTR [rbx+0x12],0x0
  419b44:	mov    BYTE PTR [rbx+0x13],0x0
  419b48:	mov    BYTE PTR [rbx+0x14],0x0
  419b4c:	mov    BYTE PTR [rbx+0x15],0x0
  419b50:	mov    BYTE PTR [rbx+0x16],0x0
  419b54:	mov    BYTE PTR [rbx+0x17],0x0
  419b58:	pop    rbx
  419b59:	ret    
  419b5a:	nop    WORD PTR [rax+rax*1+0x0]
  419b60:	push   rax
  419b61:	mov    eax,0xffffaf00
  419b66:	test   rdi,rdi
  419b69:	je     419b92 <strcmp@plt+0x163fa>
  419b6b:	test   rsi,rsi
  419b6e:	je     419b92 <strcmp@plt+0x163fa>
  419b70:	mov    rcx,QWORD PTR [rdi]
  419b73:	test   rcx,rcx
  419b76:	je     419b92 <strcmp@plt+0x163fa>
  419b78:	mov    rdx,QWORD PTR [rsi]
  419b7b:	test   rdx,rdx
  419b7e:	je     419b92 <strcmp@plt+0x163fa>
  419b80:	cmp    rcx,rdx
  419b83:	jne    419b92 <strcmp@plt+0x163fa>
  419b85:	mov    rdi,QWORD PTR [rdi+0x8]
  419b89:	mov    rsi,QWORD PTR [rsi+0x8]
  419b8d:	call   QWORD PTR [rcx+0x48]
  419b90:	xor    eax,eax
  419b92:	pop    rcx
  419b93:	ret    
  419b94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b9e:	xchg   ax,ax
  419ba0:	push   rbp
  419ba1:	push   r15
  419ba3:	push   r14
  419ba5:	push   rbx
  419ba6:	push   rax
  419ba7:	mov    r14d,0xffffaf00
  419bad:	test   rdi,rdi
  419bb0:	je     419bf8 <strcmp@plt+0x16460>
  419bb2:	mov    rbx,rsi
  419bb5:	test   rsi,rsi
  419bb8:	je     419bf8 <strcmp@plt+0x16460>
  419bba:	mov    rbp,rdi
  419bbd:	call   QWORD PTR [rbx+0x38]
  419bc0:	mov    QWORD PTR [rbp+0x8],rax
  419bc4:	mov    r14d,0xffffae80
  419bca:	test   rax,rax
  419bcd:	je     419bf8 <strcmp@plt+0x16460>
  419bcf:	mov    r15,rax
  419bd2:	movsxd rsi,DWORD PTR [rbx+0x14]
  419bd6:	mov    edi,0x2
  419bdb:	call   4032d0 <calloc@plt>
  419be0:	mov    QWORD PTR [rbp+0x10],rax
  419be4:	test   rax,rax
  419be7:	je     419bf2 <strcmp@plt+0x1645a>
  419be9:	mov    QWORD PTR [rbp+0x0],rbx
  419bed:	xor    r14d,r14d
  419bf0:	jmp    419bf8 <strcmp@plt+0x16460>
  419bf2:	mov    rdi,r15
  419bf5:	call   QWORD PTR [rbx+0x40]
  419bf8:	mov    eax,r14d
  419bfb:	add    rsp,0x8
  419bff:	pop    rbx
  419c00:	pop    r14
  419c02:	pop    r15
  419c04:	pop    rbp
  419c05:	ret    
  419c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419c10:	push   rbp
  419c11:	push   r15
  419c13:	push   r14
  419c15:	push   r12
  419c17:	push   rbx
  419c18:	mov    r14d,0xffffaf00
  419c1e:	test   rdi,rdi
  419c21:	je     419c71 <strcmp@plt+0x164d9>
  419c23:	mov    rbx,rsi
  419c26:	test   rsi,rsi
  419c29:	je     419c71 <strcmp@plt+0x164d9>
  419c2b:	mov    r12d,edx
  419c2e:	mov    rbp,rdi
  419c31:	call   QWORD PTR [rbx+0x38]
  419c34:	mov    QWORD PTR [rbp+0x8],rax
  419c38:	mov    r14d,0xffffae80
  419c3e:	test   rax,rax
  419c41:	je     419c71 <strcmp@plt+0x164d9>
  419c43:	test   r12d,r12d
  419c46:	je     419c62 <strcmp@plt+0x164ca>
  419c48:	mov    r15,rax
  419c4b:	movsxd rsi,DWORD PTR [rbx+0x14]
  419c4f:	mov    edi,0x2
  419c54:	call   4032d0 <calloc@plt>
  419c59:	mov    QWORD PTR [rbp+0x10],rax
  419c5d:	test   rax,rax
  419c60:	je     419c6b <strcmp@plt+0x164d3>
  419c62:	mov    QWORD PTR [rbp+0x0],rbx
  419c66:	xor    r14d,r14d
  419c69:	jmp    419c71 <strcmp@plt+0x164d9>
  419c6b:	mov    rdi,r15
  419c6e:	call   QWORD PTR [rbx+0x40]
  419c71:	mov    eax,r14d
  419c74:	pop    rbx
  419c75:	pop    r12
  419c77:	pop    r14
  419c79:	pop    r15
  419c7b:	pop    rbp
  419c7c:	ret    
  419c7d:	nop    DWORD PTR [rax]
  419c80:	push   rax
  419c81:	mov    eax,0xffffaf00
  419c86:	test   rdi,rdi
  419c89:	je     419c9c <strcmp@plt+0x16504>
  419c8b:	mov    rcx,QWORD PTR [rdi]
  419c8e:	test   rcx,rcx
  419c91:	je     419c9c <strcmp@plt+0x16504>
  419c93:	mov    rdi,QWORD PTR [rdi+0x8]
  419c97:	call   QWORD PTR [rcx+0x18]
  419c9a:	xor    eax,eax
  419c9c:	pop    rcx
  419c9d:	ret    
  419c9e:	xchg   ax,ax
  419ca0:	push   rax
  419ca1:	mov    eax,0xffffaf00
  419ca6:	test   rdi,rdi
  419ca9:	je     419cbc <strcmp@plt+0x16524>
  419cab:	mov    rcx,QWORD PTR [rdi]
  419cae:	test   rcx,rcx
  419cb1:	je     419cbc <strcmp@plt+0x16524>
  419cb3:	mov    rdi,QWORD PTR [rdi+0x8]
  419cb7:	call   QWORD PTR [rcx+0x20]
  419cba:	xor    eax,eax
  419cbc:	pop    rcx
  419cbd:	ret    
  419cbe:	xchg   ax,ax
  419cc0:	push   rax
  419cc1:	mov    eax,0xffffaf00
  419cc6:	test   rdi,rdi
  419cc9:	je     419cdc <strcmp@plt+0x16544>
  419ccb:	mov    rcx,QWORD PTR [rdi]
  419cce:	test   rcx,rcx
  419cd1:	je     419cdc <strcmp@plt+0x16544>
  419cd3:	mov    rdi,QWORD PTR [rdi+0x8]
  419cd7:	call   QWORD PTR [rcx+0x28]
  419cda:	xor    eax,eax
  419cdc:	pop    rcx
  419cdd:	ret    
  419cde:	xchg   ax,ax
  419ce0:	test   rdi,rdi
  419ce3:	je     419cfc <strcmp@plt+0x16564>
  419ce5:	push   rax
  419ce6:	mov    rax,rdi
  419ce9:	mov    rdi,rsi
  419cec:	mov    rsi,rdx
  419cef:	mov    rdx,rcx
  419cf2:	call   QWORD PTR [rax+0x30]
  419cf5:	xor    eax,eax
  419cf7:	add    rsp,0x8
  419cfb:	ret    
  419cfc:	mov    eax,0xffffaf00
  419d01:	ret    
  419d02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419d0c:	nop    DWORD PTR [rax+0x0]
  419d10:	push   rbp
  419d11:	push   r15
  419d13:	push   r14
  419d15:	push   r13
  419d17:	push   r12
  419d19:	push   rbx
  419d1a:	sub    rsp,0x28
  419d1e:	mov    eax,0xffffaf00
  419d23:	test   rdi,rdi
  419d26:	je     41a0b1 <strcmp@plt+0x16919>
  419d2c:	mov    r14,rdi
  419d2f:	mov    rcx,QWORD PTR [rdi]
  419d32:	test   rcx,rcx
  419d35:	je     41a0b1 <strcmp@plt+0x16919>
  419d3b:	mov    r12,QWORD PTR [r14+0x10]
  419d3f:	test   r12,r12
  419d42:	je     41a0b1 <strcmp@plt+0x16919>
  419d48:	mov    r15,rdx
  419d4b:	mov    rbx,rsi
  419d4e:	movsxd r13,DWORD PTR [rcx+0x14]
  419d52:	cmp    r13,rdx
  419d55:	jae    419d90 <strcmp@plt+0x165f8>
  419d57:	mov    rbp,rsp
  419d5a:	mov    rdi,QWORD PTR [r14+0x8]
  419d5e:	call   QWORD PTR [rcx+0x18]
  419d61:	mov    rax,QWORD PTR [r14]
  419d64:	mov    rdi,QWORD PTR [r14+0x8]
  419d68:	mov    rsi,rbx
  419d6b:	mov    rdx,r15
  419d6e:	call   QWORD PTR [rax+0x20]
  419d71:	mov    rax,QWORD PTR [r14]
  419d74:	mov    rdi,QWORD PTR [r14+0x8]
  419d78:	mov    rsi,rbp
  419d7b:	call   QWORD PTR [rax+0x28]
  419d7e:	mov    rax,QWORD PTR [r14]
  419d81:	mov    r12,QWORD PTR [r14+0x10]
  419d85:	movsxd r15,DWORD PTR [rax+0x10]
  419d89:	movsxd r13,DWORD PTR [rax+0x14]
  419d8d:	mov    rbx,rbp
  419d90:	lea    rbp,[r12+r13*1]
  419d94:	mov    rdi,r12
  419d97:	mov    esi,0x36
  419d9c:	mov    rdx,r13
  419d9f:	call   403260 <memset@plt>
  419da4:	mov    rax,QWORD PTR [r14]
  419da7:	movsxd rdx,DWORD PTR [rax+0x14]
  419dab:	mov    rdi,rbp
  419dae:	mov    esi,0x5c
  419db3:	call   403260 <memset@plt>
  419db8:	test   r15,r15
  419dbb:	je     419ff2 <strcmp@plt+0x1685a>
  419dc1:	cmp    r15,0x3f
  419dc5:	ja     419e66 <strcmp@plt+0x166ce>
  419dcb:	xor    eax,eax
  419dcd:	mov    rsi,rax
  419dd0:	not    rsi
  419dd3:	add    rsi,r15
  419dd6:	mov    rdx,r15
  419dd9:	and    rdx,0x3
  419ddd:	je     419df8 <strcmp@plt+0x16660>
  419ddf:	nop
  419de0:	movzx  ecx,BYTE PTR [rbx+rax*1]
  419de4:	xor    BYTE PTR [r12+rax*1],cl
  419de8:	movzx  ecx,BYTE PTR [rbx+rax*1]
  419dec:	xor    BYTE PTR [rbp+rax*1+0x0],cl
  419df0:	inc    rax
  419df3:	dec    rdx
  419df6:	jne    419de0 <strcmp@plt+0x16648>
  419df8:	cmp    rsi,0x3
  419dfc:	jb     419ff2 <strcmp@plt+0x1685a>
  419e02:	lea    rcx,[r12+r13*1]
  419e06:	add    rcx,0x3
  419e0a:	nop    WORD PTR [rax+rax*1+0x0]
  419e10:	movzx  edx,BYTE PTR [rbx+rax*1]
  419e14:	xor    BYTE PTR [r12+rax*1],dl
  419e18:	movzx  edx,BYTE PTR [rbx+rax*1]
  419e1c:	xor    BYTE PTR [rcx+rax*1-0x3],dl
  419e20:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  419e25:	xor    BYTE PTR [r12+rax*1+0x1],dl
  419e2a:	movzx  edx,BYTE PTR [rbx+rax*1+0x1]
  419e2f:	xor    BYTE PTR [rcx+rax*1-0x2],dl
  419e33:	movzx  edx,BYTE PTR [rbx+rax*1+0x2]
  419e38:	xor    BYTE PTR [r12+rax*1+0x2],dl
  419e3d:	movzx  edx,BYTE PTR [rbx+rax*1+0x2]
  419e42:	xor    BYTE PTR [rcx+rax*1-0x1],dl
  419e46:	movzx  edx,BYTE PTR [rbx+rax*1+0x3]
  419e4b:	xor    BYTE PTR [r12+rax*1+0x3],dl
  419e50:	movzx  edx,BYTE PTR [rbx+rax*1+0x3]
  419e55:	xor    BYTE PTR [rcx+rax*1],dl
  419e58:	add    rax,0x4
  419e5c:	cmp    r15,rax
  419e5f:	jne    419e10 <strcmp@plt+0x16678>
  419e61:	jmp    419ff2 <strcmp@plt+0x1685a>
  419e66:	lea    rax,[r12+r15*1]
  419e6a:	lea    rdi,[r15+r13*1]
  419e6e:	add    rdi,r12
  419e71:	lea    rdx,[rbx+r15*1]
  419e75:	cmp    r12,rdi
  419e78:	setb   r8b
  419e7c:	cmp    rbp,rax
  419e7f:	setb   r9b
  419e83:	cmp    r12,rdx
  419e86:	setb   cl
  419e89:	cmp    rbx,rax
  419e8c:	setb   sil
  419e90:	cmp    rbp,rdx
  419e93:	setb   dl
  419e96:	cmp    rbx,rdi
  419e99:	setb   dil
  419e9d:	xor    eax,eax
  419e9f:	test   r8b,r9b
  419ea2:	jne    419dcd <strcmp@plt+0x16635>
  419ea8:	and    cl,sil
  419eab:	jne    419dcd <strcmp@plt+0x16635>
  419eb1:	and    dl,dil
  419eb4:	jne    419dcd <strcmp@plt+0x16635>
  419eba:	mov    rax,r15
  419ebd:	and    rax,0xffffffffffffffc0
  419ec1:	lea    rcx,[rax-0x40]
  419ec5:	mov    rsi,rcx
  419ec8:	shr    rsi,0x6
  419ecc:	inc    rsi
  419ecf:	mov    r8d,esi
  419ed2:	and    r8d,0x1
  419ed6:	test   rcx,rcx
  419ed9:	je     419f9a <strcmp@plt+0x16802>
  419edf:	sub    rsi,r8
  419ee2:	lea    rdi,[r12+0x60]
  419ee7:	lea    rdx,[r12+r13*1]
  419eeb:	add    rdx,0x60
  419eef:	xor    ecx,ecx
  419ef1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419efb:	nop    DWORD PTR [rax+rax*1+0x0]
  419f00:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1]
  419f05:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x20]
  419f0b:	vxorps ymm0,ymm0,YMMWORD PTR [rdi+rcx*1-0x60]
  419f11:	vxorps ymm1,ymm1,YMMWORD PTR [rdi+rcx*1-0x40]
  419f17:	vmovups YMMWORD PTR [rdi+rcx*1-0x60],ymm0
  419f1d:	vmovups YMMWORD PTR [rdi+rcx*1-0x40],ymm1
  419f23:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1]
  419f28:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x20]
  419f2e:	vxorps ymm0,ymm0,YMMWORD PTR [rdx+rcx*1-0x60]
  419f34:	vxorps ymm1,ymm1,YMMWORD PTR [rdx+rcx*1-0x40]
  419f3a:	vmovups YMMWORD PTR [rdx+rcx*1-0x60],ymm0
  419f40:	vmovups YMMWORD PTR [rdx+rcx*1-0x40],ymm1
  419f46:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1+0x40]
  419f4c:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x60]
  419f52:	vxorps ymm0,ymm0,YMMWORD PTR [rdi+rcx*1-0x20]
  419f58:	vxorps ymm1,ymm1,YMMWORD PTR [rdi+rcx*1]
  419f5d:	vmovups YMMWORD PTR [rdi+rcx*1-0x20],ymm0
  419f63:	vmovups YMMWORD PTR [rdi+rcx*1],ymm1
  419f68:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1+0x40]
  419f6e:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x60]
  419f74:	vxorps ymm0,ymm0,YMMWORD PTR [rdx+rcx*1-0x20]
  419f7a:	vxorps ymm1,ymm1,YMMWORD PTR [rdx+rcx*1]
  419f7f:	vmovups YMMWORD PTR [rdx+rcx*1-0x20],ymm0
  419f85:	vmovups YMMWORD PTR [rdx+rcx*1],ymm1
  419f8a:	sub    rcx,0xffffffffffffff80
  419f8e:	add    rsi,0xfffffffffffffffe
  419f92:	jne    419f00 <strcmp@plt+0x16768>
  419f98:	jmp    419f9c <strcmp@plt+0x16804>
  419f9a:	xor    ecx,ecx
  419f9c:	test   r8,r8
  419f9f:	je     419fe9 <strcmp@plt+0x16851>
  419fa1:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1]
  419fa6:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x20]
  419fac:	vxorps ymm0,ymm0,YMMWORD PTR [r12+rcx*1]
  419fb2:	vxorps ymm1,ymm1,YMMWORD PTR [r12+rcx*1+0x20]
  419fb9:	vmovups YMMWORD PTR [r12+rcx*1],ymm0
  419fbf:	vmovups YMMWORD PTR [r12+rcx*1+0x20],ymm1
  419fc6:	vmovups ymm0,YMMWORD PTR [rbx+rcx*1]
  419fcb:	vmovups ymm1,YMMWORD PTR [rbx+rcx*1+0x20]
  419fd1:	vxorps ymm0,ymm0,YMMWORD PTR [rbp+rcx*1+0x0]
  419fd7:	vxorps ymm1,ymm1,YMMWORD PTR [rbp+rcx*1+0x20]
  419fdd:	vmovups YMMWORD PTR [rbp+rcx*1+0x0],ymm0
  419fe3:	vmovups YMMWORD PTR [rbp+rcx*1+0x20],ymm1
  419fe9:	cmp    r15,rax
  419fec:	jne    419dcd <strcmp@plt+0x16635>
  419ff2:	mov    BYTE PTR [rsp],0x0
  419ff6:	mov    BYTE PTR [rsp+0x1],0x0
  419ffb:	mov    BYTE PTR [rsp+0x2],0x0
  41a000:	mov    BYTE PTR [rsp+0x3],0x0
  41a005:	mov    BYTE PTR [rsp+0x4],0x0
  41a00a:	mov    BYTE PTR [rsp+0x5],0x0
  41a00f:	mov    BYTE PTR [rsp+0x6],0x0
  41a014:	mov    BYTE PTR [rsp+0x7],0x0
  41a019:	mov    BYTE PTR [rsp+0x8],0x0
  41a01e:	mov    BYTE PTR [rsp+0x9],0x0
  41a023:	mov    BYTE PTR [rsp+0xa],0x0
  41a028:	mov    BYTE PTR [rsp+0xb],0x0
  41a02d:	mov    BYTE PTR [rsp+0xc],0x0
  41a032:	mov    BYTE PTR [rsp+0xd],0x0
  41a037:	mov    BYTE PTR [rsp+0xe],0x0
  41a03c:	mov    BYTE PTR [rsp+0xf],0x0
  41a041:	mov    BYTE PTR [rsp+0x10],0x0
  41a046:	mov    BYTE PTR [rsp+0x11],0x0
  41a04b:	mov    BYTE PTR [rsp+0x12],0x0
  41a050:	mov    BYTE PTR [rsp+0x13],0x0
  41a055:	mov    BYTE PTR [rsp+0x14],0x0
  41a05a:	mov    BYTE PTR [rsp+0x15],0x0
  41a05f:	mov    BYTE PTR [rsp+0x16],0x0
  41a064:	mov    BYTE PTR [rsp+0x17],0x0
  41a069:	mov    BYTE PTR [rsp+0x18],0x0
  41a06e:	mov    BYTE PTR [rsp+0x19],0x0
  41a073:	mov    BYTE PTR [rsp+0x1a],0x0
  41a078:	mov    BYTE PTR [rsp+0x1b],0x0
  41a07d:	mov    BYTE PTR [rsp+0x1c],0x0
  41a082:	mov    BYTE PTR [rsp+0x1d],0x0
  41a087:	mov    BYTE PTR [rsp+0x1e],0x0
  41a08c:	mov    BYTE PTR [rsp+0x1f],0x0
  41a091:	mov    rax,QWORD PTR [r14]
  41a094:	mov    rdi,QWORD PTR [r14+0x8]
  41a098:	vzeroupper 
  41a09b:	call   QWORD PTR [rax+0x18]
  41a09e:	mov    rax,QWORD PTR [r14]
  41a0a1:	mov    rdi,QWORD PTR [r14+0x8]
  41a0a5:	movsxd rdx,DWORD PTR [rax+0x14]
  41a0a9:	mov    rsi,r12
  41a0ac:	call   QWORD PTR [rax+0x20]
  41a0af:	xor    eax,eax
  41a0b1:	add    rsp,0x28
  41a0b5:	pop    rbx
  41a0b6:	pop    r12
  41a0b8:	pop    r13
  41a0ba:	pop    r14
  41a0bc:	pop    r15
  41a0be:	pop    rbp
  41a0bf:	ret    
  41a0c0:	push   rax
  41a0c1:	mov    eax,0xffffaf00
  41a0c6:	test   rdi,rdi
  41a0c9:	je     41a0e3 <strcmp@plt+0x1694b>
  41a0cb:	mov    rcx,QWORD PTR [rdi]
  41a0ce:	test   rcx,rcx
  41a0d1:	je     41a0e3 <strcmp@plt+0x1694b>
  41a0d3:	cmp    QWORD PTR [rdi+0x10],0x0
  41a0d8:	je     41a0e3 <strcmp@plt+0x1694b>
  41a0da:	mov    rdi,QWORD PTR [rdi+0x8]
  41a0de:	call   QWORD PTR [rcx+0x20]
  41a0e1:	xor    eax,eax
  41a0e3:	pop    rcx
  41a0e4:	ret    
  41a0e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a0ef:	nop
  41a0f0:	push   r15
  41a0f2:	push   r14
  41a0f4:	push   r12
  41a0f6:	push   rbx
  41a0f7:	sub    rsp,0x28
  41a0fb:	mov    eax,0xffffaf00
  41a100:	test   rdi,rdi
  41a103:	je     41a16b <strcmp@plt+0x169d3>
  41a105:	mov    rbx,rdi
  41a108:	mov    rcx,QWORD PTR [rdi]
  41a10b:	test   rcx,rcx
  41a10e:	je     41a16b <strcmp@plt+0x169d3>
  41a110:	mov    r15,QWORD PTR [rbx+0x10]
  41a114:	test   r15,r15
  41a117:	je     41a16b <strcmp@plt+0x169d3>
  41a119:	mov    r14,rsi
  41a11c:	movsxd rax,DWORD PTR [rcx+0x14]
  41a120:	add    r15,rax
  41a123:	mov    rdi,QWORD PTR [rbx+0x8]
  41a127:	mov    r12,rsp
  41a12a:	mov    rsi,r12
  41a12d:	call   QWORD PTR [rcx+0x28]
  41a130:	mov    rax,QWORD PTR [rbx]
  41a133:	mov    rdi,QWORD PTR [rbx+0x8]
  41a137:	call   QWORD PTR [rax+0x18]
  41a13a:	mov    rax,QWORD PTR [rbx]
  41a13d:	mov    rdi,QWORD PTR [rbx+0x8]
  41a141:	movsxd rdx,DWORD PTR [rax+0x14]
  41a145:	mov    rsi,r15
  41a148:	call   QWORD PTR [rax+0x20]
  41a14b:	mov    rax,QWORD PTR [rbx]
  41a14e:	mov    rdi,QWORD PTR [rbx+0x8]
  41a152:	movsxd rdx,DWORD PTR [rax+0x10]
  41a156:	mov    rsi,r12
  41a159:	call   QWORD PTR [rax+0x20]
  41a15c:	mov    rax,QWORD PTR [rbx]
  41a15f:	mov    rdi,QWORD PTR [rbx+0x8]
  41a163:	mov    rsi,r14
  41a166:	call   QWORD PTR [rax+0x28]
  41a169:	xor    eax,eax
  41a16b:	add    rsp,0x28
  41a16f:	pop    rbx
  41a170:	pop    r12
  41a172:	pop    r14
  41a174:	pop    r15
  41a176:	ret    
  41a177:	nop    WORD PTR [rax+rax*1+0x0]
  41a180:	push   r14
  41a182:	push   rbx
  41a183:	push   rax
  41a184:	mov    eax,0xffffaf00
  41a189:	test   rdi,rdi
  41a18c:	je     41a1bc <strcmp@plt+0x16a24>
  41a18e:	mov    rbx,rdi
  41a191:	mov    rcx,QWORD PTR [rdi]
  41a194:	test   rcx,rcx
  41a197:	je     41a1bc <strcmp@plt+0x16a24>
  41a199:	mov    r14,QWORD PTR [rbx+0x10]
  41a19d:	test   r14,r14
  41a1a0:	je     41a1bc <strcmp@plt+0x16a24>
  41a1a2:	mov    rdi,QWORD PTR [rbx+0x8]
  41a1a6:	call   QWORD PTR [rcx+0x18]
  41a1a9:	mov    rax,QWORD PTR [rbx]
  41a1ac:	mov    rdi,QWORD PTR [rbx+0x8]
  41a1b0:	movsxd rdx,DWORD PTR [rax+0x14]
  41a1b4:	mov    rsi,r14
  41a1b7:	call   QWORD PTR [rax+0x20]
  41a1ba:	xor    eax,eax
  41a1bc:	add    rsp,0x8
  41a1c0:	pop    rbx
  41a1c1:	pop    r14
  41a1c3:	ret    
  41a1c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a1ce:	xchg   ax,ax
  41a1d0:	push   rbp
  41a1d1:	push   r15
  41a1d3:	push   r14
  41a1d5:	push   r13
  41a1d7:	push   r12
  41a1d9:	push   rbx
  41a1da:	sub    rsp,0x58
  41a1de:	test   rdi,rdi
  41a1e1:	je     41a2f4 <strcmp@plt+0x16b5c>
  41a1e7:	mov    r12,rcx
  41a1ea:	mov    r13,rdx
  41a1ed:	mov    rbx,rsi
  41a1f0:	mov    r14,rdi
  41a1f3:	mov    QWORD PTR [rsp+0x28],r8
  41a1f8:	mov    QWORD PTR [rsp+0x20],r9
  41a1fd:	vxorps xmm0,xmm0,xmm0
  41a201:	vmovaps XMMWORD PTR [rsp],xmm0
  41a206:	mov    QWORD PTR [rsp+0x10],0x0
  41a20f:	call   QWORD PTR [rdi+0x38]
  41a212:	mov    QWORD PTR [rsp+0x8],rax
  41a217:	mov    ebp,0xffffae80
  41a21c:	test   rax,rax
  41a21f:	je     41a302 <strcmp@plt+0x16b6a>
  41a225:	mov    r15,rax
  41a228:	movsxd rsi,DWORD PTR [r14+0x14]
  41a22c:	mov    edi,0x2
  41a231:	call   4032d0 <calloc@plt>
  41a236:	mov    QWORD PTR [rsp+0x10],rax
  41a23b:	test   rax,rax
  41a23e:	je     41a2fb <strcmp@plt+0x16b63>
  41a244:	mov    QWORD PTR [rsp],r14
  41a248:	mov    rdi,rsp
  41a24b:	mov    rsi,rbx
  41a24e:	mov    rdx,r13
  41a251:	call   419d10 <strcmp@plt+0x16578>
  41a256:	mov    rax,QWORD PTR [rsp]
  41a25a:	test   rax,rax
  41a25d:	je     41a2e8 <strcmp@plt+0x16b50>
  41a263:	cmp    QWORD PTR [rsp+0x10],0x0
  41a269:	je     41a2e8 <strcmp@plt+0x16b50>
  41a26b:	mov    rdi,QWORD PTR [rsp+0x8]
  41a270:	mov    rsi,r12
  41a273:	mov    rdx,QWORD PTR [rsp+0x28]
  41a278:	call   QWORD PTR [rax+0x20]
  41a27b:	mov    rax,QWORD PTR [rsp]
  41a27f:	test   rax,rax
  41a282:	je     41a2e8 <strcmp@plt+0x16b50>
  41a284:	mov    rbx,QWORD PTR [rsp+0x10]
  41a289:	test   rbx,rbx
  41a28c:	je     41a2e8 <strcmp@plt+0x16b50>
  41a28e:	lea    rbp,[rsp+0x30]
  41a293:	movsxd rcx,DWORD PTR [rax+0x14]
  41a297:	add    rbx,rcx
  41a29a:	mov    rdi,QWORD PTR [rsp+0x8]
  41a29f:	mov    rsi,rbp
  41a2a2:	call   QWORD PTR [rax+0x28]
  41a2a5:	mov    rax,QWORD PTR [rsp]
  41a2a9:	mov    rdi,QWORD PTR [rsp+0x8]
  41a2ae:	call   QWORD PTR [rax+0x18]
  41a2b1:	mov    rax,QWORD PTR [rsp]
  41a2b5:	mov    rdi,QWORD PTR [rsp+0x8]
  41a2ba:	movsxd rdx,DWORD PTR [rax+0x14]
  41a2be:	mov    rsi,rbx
  41a2c1:	call   QWORD PTR [rax+0x20]
  41a2c4:	mov    rax,QWORD PTR [rsp]
  41a2c8:	mov    rdi,QWORD PTR [rsp+0x8]
  41a2cd:	movsxd rdx,DWORD PTR [rax+0x10]
  41a2d1:	mov    rsi,rbp
  41a2d4:	call   QWORD PTR [rax+0x20]
  41a2d7:	mov    rax,QWORD PTR [rsp]
  41a2db:	mov    rdi,QWORD PTR [rsp+0x8]
  41a2e0:	mov    rsi,QWORD PTR [rsp+0x20]
  41a2e5:	call   QWORD PTR [rax+0x28]
  41a2e8:	mov    rdi,rsp
  41a2eb:	call   419a40 <strcmp@plt+0x162a8>
  41a2f0:	xor    ebp,ebp
  41a2f2:	jmp    41a302 <strcmp@plt+0x16b6a>
  41a2f4:	mov    ebp,0xffffaf00
  41a2f9:	jmp    41a302 <strcmp@plt+0x16b6a>
  41a2fb:	mov    rdi,r15
  41a2fe:	call   QWORD PTR [r14+0x40]
  41a302:	mov    eax,ebp
  41a304:	add    rsp,0x58
  41a308:	pop    rbx
  41a309:	pop    r12
  41a30b:	pop    r13
  41a30d:	pop    r14
  41a30f:	pop    r15
  41a311:	pop    rbp
  41a312:	ret    
  41a313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a31d:	nop    DWORD PTR [rax]
  41a320:	push   rax
  41a321:	mov    eax,0xffffaf00
  41a326:	test   rdi,rdi
  41a329:	je     41a33c <strcmp@plt+0x16ba4>
  41a32b:	mov    rcx,QWORD PTR [rdi]
  41a32e:	test   rcx,rcx
  41a331:	je     41a33c <strcmp@plt+0x16ba4>
  41a333:	mov    rdi,QWORD PTR [rdi+0x8]
  41a337:	call   QWORD PTR [rcx+0x50]
  41a33a:	xor    eax,eax
  41a33c:	pop    rcx
  41a33d:	ret    
  41a33e:	xchg   ax,ax
  41a340:	test   rdi,rdi
  41a343:	je     41a349 <strcmp@plt+0x16bb1>
  41a345:	mov    al,BYTE PTR [rdi+0x10]
  41a348:	ret    
  41a349:	xor    eax,eax
  41a34b:	ret    
  41a34c:	nop    DWORD PTR [rax+0x0]
  41a350:	test   rdi,rdi
  41a353:	je     41a358 <strcmp@plt+0x16bc0>
  41a355:	mov    eax,DWORD PTR [rdi]
  41a357:	ret    
  41a358:	xor    eax,eax
  41a35a:	ret    
  41a35b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a360:	test   rdi,rdi
  41a363:	je     41a36a <strcmp@plt+0x16bd2>
  41a365:	mov    rax,QWORD PTR [rdi+0x8]
  41a369:	ret    
  41a36a:	xor    eax,eax
  41a36c:	ret    
  41a36d:	nop    DWORD PTR [rax]
  41a370:	vxorps xmm0,xmm0,xmm0
  41a374:	vmovups YMMWORD PTR [rdi+0x3c],ymm0
  41a379:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41a37e:	vmovups YMMWORD PTR [rdi],ymm0
  41a382:	vzeroupper 
  41a385:	ret    
  41a386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a390:	test   rdi,rdi
  41a393:	je     41a41c <strcmp@plt+0x16c84>
  41a399:	xor    eax,eax
  41a39b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a3a0:	mov    BYTE PTR [rdi+rax*1],0x0
  41a3a4:	mov    BYTE PTR [rdi+rax*1+0x1],0x0
  41a3a9:	mov    BYTE PTR [rdi+rax*1+0x2],0x0
  41a3ae:	mov    BYTE PTR [rdi+rax*1+0x3],0x0
  41a3b3:	mov    BYTE PTR [rdi+rax*1+0x4],0x0
  41a3b8:	mov    BYTE PTR [rdi+rax*1+0x5],0x0
  41a3bd:	mov    BYTE PTR [rdi+rax*1+0x6],0x0
  41a3c2:	mov    BYTE PTR [rdi+rax*1+0x7],0x0
  41a3c7:	mov    BYTE PTR [rdi+rax*1+0x8],0x0
  41a3cc:	mov    BYTE PTR [rdi+rax*1+0x9],0x0
  41a3d1:	mov    BYTE PTR [rdi+rax*1+0xa],0x0
  41a3d6:	mov    BYTE PTR [rdi+rax*1+0xb],0x0
  41a3db:	mov    BYTE PTR [rdi+rax*1+0xc],0x0
  41a3e0:	mov    BYTE PTR [rdi+rax*1+0xd],0x0
  41a3e5:	mov    BYTE PTR [rdi+rax*1+0xe],0x0
  41a3ea:	mov    BYTE PTR [rdi+rax*1+0xf],0x0
  41a3ef:	mov    BYTE PTR [rdi+rax*1+0x10],0x0
  41a3f4:	mov    BYTE PTR [rdi+rax*1+0x11],0x0
  41a3f9:	mov    BYTE PTR [rdi+rax*1+0x12],0x0
  41a3fe:	mov    BYTE PTR [rdi+rax*1+0x13],0x0
  41a403:	mov    BYTE PTR [rdi+rax*1+0x14],0x0
  41a408:	mov    BYTE PTR [rdi+rax*1+0x15],0x0
  41a40d:	mov    BYTE PTR [rdi+rax*1+0x16],0x0
  41a412:	add    rax,0x17
  41a416:	cmp    rax,0x5c
  41a41a:	jne    41a3a0 <strcmp@plt+0x16c08>
  41a41c:	ret    
  41a41d:	nop    DWORD PTR [rax]
  41a420:	vmovups ymm0,YMMWORD PTR [rsi]
  41a424:	vmovups ymm1,YMMWORD PTR [rsi+0x20]
  41a429:	vmovups ymm2,YMMWORD PTR [rsi+0x3c]
  41a42e:	vmovups YMMWORD PTR [rdi+0x3c],ymm2
  41a433:	vmovups YMMWORD PTR [rdi+0x20],ymm1
  41a438:	vmovups YMMWORD PTR [rdi],ymm0
  41a43c:	vzeroupper 
  41a43f:	ret    
  41a440:	vmovaps xmm0,XMMWORD PTR [rip+0x2de28]        # 448270 <strcmp@plt+0x44ad8>
  41a448:	vmovups XMMWORD PTR [rdi],xmm0
  41a44c:	movabs rax,0x1032547698badcfe
  41a456:	mov    QWORD PTR [rdi+0x10],rax
  41a45a:	mov    DWORD PTR [rdi+0x18],0xc3d2e1f0
  41a461:	ret    
  41a462:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a46c:	nop    DWORD PTR [rax+0x0]
  41a470:	push   rbp
  41a471:	push   r15
  41a473:	push   r14
  41a475:	push   r13
  41a477:	push   r12
  41a479:	push   rbx
  41a47a:	mov    r10,rsi
  41a47d:	mov    QWORD PTR [rsp-0x8],rdi
  41a482:	movbe  r8d,DWORD PTR [rsi]
  41a487:	mov    DWORD PTR [rsp-0x64],r8d
  41a48c:	movbe  r14d,DWORD PTR [rsi+0x4]
  41a492:	mov    DWORD PTR [rsp-0x5c],r14d
  41a497:	movbe  r15d,DWORD PTR [rsi+0x8]
  41a49d:	mov    DWORD PTR [rsp-0x48],r15d
  41a4a2:	movbe  r9d,DWORD PTR [rsi+0xc]
  41a4a8:	mov    DWORD PTR [rsp-0x60],r9d
  41a4ad:	movbe  r11d,DWORD PTR [rsi+0x10]
  41a4b3:	mov    DWORD PTR [rsp-0x44],r11d
  41a4b8:	mov    ecx,DWORD PTR [rdi+0x8]
  41a4bb:	vmovdqu xmm0,XMMWORD PTR [rdi+0xc]
  41a4c0:	rorx   eax,ecx,0x1b
  41a4c6:	mov    esi,ecx
  41a4c8:	mov    DWORD PTR [rsp-0xc],ecx
  41a4cc:	vpextrd ebx,xmm0,0x1
  41a4d2:	vpextrd edx,xmm0,0x2
  41a4d8:	vmovd  edi,xmm0
  41a4dc:	andn   ebp,edi,edx
  41a4e1:	mov    ecx,ebx
  41a4e3:	and    ecx,edi
  41a4e5:	or     ecx,ebp
  41a4e7:	add    eax,r8d
  41a4ea:	vpextrd ebp,xmm0,0x3
  41a4f0:	add    ebp,eax
  41a4f2:	lea    ecx,[rcx+rbp*1]
  41a4f5:	add    ecx,0x5a827999
  41a4fb:	rorx   eax,edi,0x2
  41a501:	rorx   r8d,ecx,0x1b
  41a507:	andn   ebp,esi,ebx
  41a50c:	mov    edi,eax
  41a50e:	and    edi,esi
  41a510:	or     edi,ebp
  41a512:	add    edx,r14d
  41a515:	add    edx,edi
  41a517:	lea    edi,[r8+rdx*1]
  41a51b:	add    edi,0x5a827999
  41a521:	rorx   edx,esi,0x2
  41a527:	andn   r8d,ecx,eax
  41a52c:	mov    ebp,edx
  41a52e:	and    ebp,ecx
  41a530:	or     ebp,r8d
  41a533:	rorx   r8d,edi,0x1b
  41a539:	add    ebx,r15d
  41a53c:	add    ebx,ebp
  41a53e:	lea    ebp,[r8+rbx*1]
  41a542:	add    ebp,0x5a827999
  41a548:	rorx   ecx,ecx,0x2
  41a54e:	andn   r8d,edi,edx
  41a553:	mov    ebx,ecx
  41a555:	and    ebx,edi
  41a557:	or     ebx,r8d
  41a55a:	rorx   r8d,ebp,0x1b
  41a560:	add    eax,r9d
  41a563:	add    eax,ebx
  41a565:	lea    ebx,[r8+rax*1]
  41a569:	add    ebx,0x5a827999
  41a56f:	rorx   eax,edi,0x2
  41a575:	andn   r8d,ebp,ecx
  41a57a:	mov    edi,eax
  41a57c:	and    edi,ebp
  41a57e:	or     edi,r8d
  41a581:	rorx   r8d,ebx,0x1b
  41a587:	add    edx,r11d
  41a58a:	add    edx,edi
  41a58c:	lea    r9d,[r8+rdx*1]
  41a590:	add    r9d,0x5a827999
  41a597:	rorx   edx,ebp,0x2
  41a59d:	andn   r8d,ebx,eax
  41a5a2:	mov    ebp,edx
  41a5a4:	and    ebp,ebx
  41a5a6:	or     ebp,r8d
  41a5a9:	movbe  esi,DWORD PTR [r10+0x14]
  41a5af:	mov    DWORD PTR [rsp-0x40],esi
  41a5b3:	add    ecx,esi
  41a5b5:	add    ecx,ebp
  41a5b7:	rorx   ebp,r9d,0x1b
  41a5bd:	lea    ebp,[rcx+rbp*1]
  41a5c0:	add    ebp,0x5a827999
  41a5c6:	rorx   ecx,ebx,0x2
  41a5cc:	mov    ebx,ecx
  41a5ce:	and    ebx,r9d
  41a5d1:	andn   edi,r9d,edx
  41a5d6:	or     ebx,edi
  41a5d8:	movbe  esi,DWORD PTR [r10+0x18]
  41a5de:	mov    DWORD PTR [rsp-0x3c],esi
  41a5e2:	add    eax,esi
  41a5e4:	add    eax,ebx
  41a5e6:	rorx   edi,ebp,0x1b
  41a5ec:	lea    r8d,[rdi+rax*1]
  41a5f0:	add    r8d,0x5a827999
  41a5f7:	rorx   eax,r9d,0x2
  41a5fd:	mov    ebx,eax
  41a5ff:	and    ebx,ebp
  41a601:	andn   edi,ebp,ecx
  41a606:	or     ebx,edi
  41a608:	movbe  esi,DWORD PTR [r10+0x1c]
  41a60e:	mov    DWORD PTR [rsp-0x4c],esi
  41a612:	add    edx,esi
  41a614:	add    edx,ebx
  41a616:	rorx   edi,r8d,0x1b
  41a61c:	lea    r9d,[rdi+rdx*1]
  41a620:	add    r9d,0x5a827999
  41a627:	rorx   edx,ebp,0x2
  41a62d:	mov    ebp,edx
  41a62f:	and    ebp,r8d
  41a632:	andn   ebx,r8d,eax
  41a637:	or     ebp,ebx
  41a639:	movbe  r13d,DWORD PTR [r10+0x20]
  41a63f:	add    ecx,r13d
  41a642:	add    ecx,ebp
  41a644:	rorx   ebp,r9d,0x1b
  41a64a:	lea    ebp,[rcx+rbp*1]
  41a64d:	add    ebp,0x5a827999
  41a653:	rorx   ecx,r8d,0x2
  41a659:	mov    ebx,ecx
  41a65b:	and    ebx,r9d
  41a65e:	andn   edi,r9d,edx
  41a663:	or     ebx,edi
  41a665:	movbe  r15d,DWORD PTR [r10+0x24]
  41a66b:	add    eax,r15d
  41a66e:	mov    DWORD PTR [rsp-0x28],r15d
  41a673:	add    eax,ebx
  41a675:	rorx   edi,ebp,0x1b
  41a67b:	lea    r8d,[rdi+rax*1]
  41a67f:	add    r8d,0x5a827999
  41a686:	rorx   eax,r9d,0x2
  41a68c:	mov    ebx,eax
  41a68e:	and    ebx,ebp
  41a690:	andn   edi,ebp,ecx
  41a695:	or     ebx,edi
  41a697:	movbe  esi,DWORD PTR [r10+0x28]
  41a69d:	mov    DWORD PTR [rsp-0x58],esi
  41a6a1:	add    edx,esi
  41a6a3:	add    edx,ebx
  41a6a5:	rorx   edi,r8d,0x1b
  41a6ab:	lea    r9d,[rdi+rdx*1]
  41a6af:	add    r9d,0x5a827999
  41a6b6:	rorx   edx,ebp,0x2
  41a6bc:	mov    ebp,edx
  41a6be:	and    ebp,r8d
  41a6c1:	andn   ebx,r8d,eax
  41a6c6:	or     ebp,ebx
  41a6c8:	movbe  esi,DWORD PTR [r10+0x2c]
  41a6ce:	mov    DWORD PTR [rsp-0x54],esi
  41a6d2:	add    ecx,esi
  41a6d4:	add    ecx,ebp
  41a6d6:	rorx   ebp,r9d,0x1b
  41a6dc:	lea    ebp,[rcx+rbp*1]
  41a6df:	add    ebp,0x5a827999
  41a6e5:	rorx   ecx,r8d,0x2
  41a6eb:	mov    ebx,ecx
  41a6ed:	and    ebx,r9d
  41a6f0:	andn   edi,r9d,edx
  41a6f5:	or     ebx,edi
  41a6f7:	movbe  esi,DWORD PTR [r10+0x30]
  41a6fd:	mov    DWORD PTR [rsp-0x50],esi
  41a701:	add    eax,esi
  41a703:	add    eax,ebx
  41a705:	rorx   edi,ebp,0x1b
  41a70b:	lea    r8d,[rdi+rax*1]
  41a70f:	add    r8d,0x5a827999
  41a716:	rorx   eax,r9d,0x2
  41a71c:	mov    edi,eax
  41a71e:	and    edi,ebp
  41a720:	andn   ebx,ebp,ecx
  41a725:	or     edi,ebx
  41a727:	movbe  esi,DWORD PTR [r10+0x34]
  41a72d:	add    edx,esi
  41a72f:	mov    r11d,esi
  41a732:	add    edx,edi
  41a734:	rorx   edi,r8d,0x1b
  41a73a:	lea    edx,[rdi+rdx*1]
  41a73d:	add    edx,0x5a827999
  41a743:	rorx   ebp,ebp,0x2
  41a749:	mov    edi,ebp
  41a74b:	and    edi,r8d
  41a74e:	andn   ebx,r8d,eax
  41a753:	or     edi,ebx
  41a755:	movbe  esi,DWORD PTR [r10+0x38]
  41a75b:	add    ecx,esi
  41a75d:	mov    r14d,esi
  41a760:	mov    DWORD PTR [rsp-0x30],esi
  41a764:	add    ecx,edi
  41a766:	rorx   edi,edx,0x1b
  41a76c:	lea    esi,[rdi+rcx*1]
  41a76f:	add    esi,0x5a827999
  41a775:	rorx   ebx,r8d,0x2
  41a77b:	mov    ecx,ebx
  41a77d:	and    ecx,edx
  41a77f:	andn   edi,edx,ebp
  41a784:	or     ecx,edi
  41a786:	movbe  edi,DWORD PTR [r10+0x3c]
  41a78c:	add    eax,edi
  41a78e:	mov    r8d,edi
  41a791:	mov    DWORD PTR [rsp-0x34],edi
  41a795:	add    eax,ecx
  41a797:	rorx   ecx,esi,0x1b
  41a79d:	lea    r10d,[rcx+rax*1]
  41a7a1:	add    r10d,0x5a827999
  41a7a8:	rorx   ecx,edx,0x2
  41a7ae:	mov    edx,ecx
  41a7b0:	and    edx,esi
  41a7b2:	andn   edi,esi,ebx
  41a7b7:	or     edx,edi
  41a7b9:	mov    r9d,DWORD PTR [rsp-0x48]
  41a7be:	mov    eax,DWORD PTR [rsp-0x64]
  41a7c2:	xor    eax,r9d
  41a7c5:	mov    edi,r13d
  41a7c8:	xor    edi,r11d
  41a7cb:	mov    r12d,r11d
  41a7ce:	mov    DWORD PTR [rsp-0x1c],r11d
  41a7d3:	xor    edi,eax
  41a7d5:	rorx   eax,edi,0x1f
  41a7db:	mov    DWORD PTR [rsp-0x64],eax
  41a7df:	add    ebp,eax
  41a7e1:	add    ebp,edx
  41a7e3:	rorx   edx,r10d,0x1b
  41a7e9:	lea    edx,[rdx+rbp*1]
  41a7ec:	add    edx,0x5a827999
  41a7f2:	rorx   esi,esi,0x2
  41a7f8:	mov    edi,esi
  41a7fa:	and    edi,r10d
  41a7fd:	andn   ebp,r10d,ecx
  41a802:	or     edi,ebp
  41a804:	mov    eax,DWORD PTR [rsp-0x5c]
  41a808:	mov    r11d,DWORD PTR [rsp-0x60]
  41a80d:	xor    eax,r11d
  41a810:	xor    r15d,r14d
  41a813:	xor    r15d,eax
  41a816:	rorx   eax,r15d,0x1f
  41a81c:	mov    DWORD PTR [rsp-0x5c],eax
  41a820:	add    ebx,eax
  41a822:	add    ebx,edi
  41a824:	rorx   edi,edx,0x1b
  41a82a:	lea    edi,[rdi+rbx*1]
  41a82d:	add    edi,0x5a827999
  41a833:	rorx   eax,r10d,0x2
  41a839:	mov    ebp,eax
  41a83b:	and    ebp,edx
  41a83d:	andn   ebx,edx,esi
  41a842:	or     ebp,ebx
  41a844:	mov    r10d,DWORD PTR [rsp-0x44]
  41a849:	xor    r9d,r10d
  41a84c:	mov    ebx,DWORD PTR [rsp-0x58]
  41a850:	xor    ebx,r8d
  41a853:	xor    ebx,r9d
  41a856:	rorx   r15d,ebx,0x1f
  41a85c:	add    ecx,r15d
  41a85f:	mov    DWORD PTR [rsp-0x48],r15d
  41a864:	add    ecx,ebp
  41a866:	rorx   ebp,edi,0x1b
  41a86c:	lea    r8d,[rcx+rbp*1]
  41a870:	add    r8d,0x5a827999
  41a877:	rorx   ecx,edx,0x2
  41a87d:	mov    edx,ecx
  41a87f:	and    edx,edi
  41a881:	andn   ebp,edi,eax
  41a886:	or     edx,ebp
  41a888:	mov    ebx,r11d
  41a88b:	mov    r11d,DWORD PTR [rsp-0x40]
  41a890:	xor    ebx,r11d
  41a893:	xor    ebx,DWORD PTR [rsp-0x54]
  41a897:	xor    ebx,DWORD PTR [rsp-0x64]
  41a89b:	rorx   r14d,ebx,0x1f
  41a8a1:	add    esi,r14d
  41a8a4:	mov    DWORD PTR [rsp-0x60],r14d
  41a8a9:	add    esi,edx
  41a8ab:	rorx   edx,r8d,0x1b
  41a8b1:	lea    edx,[rdx+rsi*1]
  41a8b4:	add    edx,0x5a827999
  41a8ba:	rorx   esi,edi,0x2
  41a8c0:	mov    edi,esi
  41a8c2:	xor    edi,ecx
  41a8c4:	xor    edi,r8d
  41a8c7:	mov    ebp,r10d
  41a8ca:	mov    r9d,DWORD PTR [rsp-0x3c]
  41a8cf:	xor    ebp,r9d
  41a8d2:	xor    ebp,DWORD PTR [rsp-0x50]
  41a8d6:	xor    ebp,DWORD PTR [rsp-0x5c]
  41a8da:	rorx   ebp,ebp,0x1f
  41a8e0:	add    eax,ebp
  41a8e2:	mov    DWORD PTR [rsp-0x38],ebp
  41a8e6:	add    eax,edi
  41a8e8:	rorx   edi,edx,0x1b
  41a8ee:	lea    edi,[rdi+rax*1]
  41a8f1:	add    edi,0x6ed9eba1
  41a8f7:	rorx   eax,r8d,0x2
  41a8fd:	mov    r8d,eax
  41a900:	xor    r8d,esi
  41a903:	xor    r8d,edx
  41a906:	mov    r10d,DWORD PTR [rsp-0x4c]
  41a90b:	xor    r11d,r10d
  41a90e:	xor    r11d,r12d
  41a911:	xor    r11d,r15d
  41a914:	rorx   ebx,r11d,0x1f
  41a91a:	add    ecx,ebx
  41a91c:	mov    r11d,ebx
  41a91f:	mov    DWORD PTR [rsp-0x24],ebx
  41a923:	add    ecx,r8d
  41a926:	rorx   ebx,edi,0x1b
  41a92c:	lea    r8d,[rbx+rcx*1]
  41a930:	add    r8d,0x6ed9eba1
  41a937:	rorx   ecx,edx,0x2
  41a93d:	mov    edx,ecx
  41a93f:	xor    edx,eax
  41a941:	xor    edx,edi
  41a943:	xor    r9d,r13d
  41a946:	xor    r9d,DWORD PTR [rsp-0x30]
  41a94b:	xor    r9d,r14d
  41a94e:	rorx   ebx,r9d,0x1f
  41a954:	add    esi,ebx
  41a956:	mov    r9d,ebx
  41a959:	add    esi,edx
  41a95b:	rorx   edx,r8d,0x1b
  41a961:	lea    esi,[rdx+rsi*1]
  41a964:	add    esi,0x6ed9eba1
  41a96a:	rorx   edx,edi,0x2
  41a970:	mov    edi,edx
  41a972:	xor    edi,ecx
  41a974:	xor    edi,r8d
  41a977:	mov    ebx,r10d
  41a97a:	mov    r15d,DWORD PTR [rsp-0x28]
  41a97f:	xor    ebx,r15d
  41a982:	xor    ebx,DWORD PTR [rsp-0x34]
  41a986:	xor    ebx,ebp
  41a988:	rorx   r12d,ebx,0x1f
  41a98e:	add    eax,r12d
  41a991:	mov    DWORD PTR [rsp-0x14],r12d
  41a996:	add    eax,edi
  41a998:	rorx   edi,esi,0x1b
  41a99e:	lea    edi,[rdi+rax*1]
  41a9a1:	add    edi,0x6ed9eba1
  41a9a7:	rorx   eax,r8d,0x2
  41a9ad:	mov    ebx,eax
  41a9af:	xor    ebx,edx
  41a9b1:	xor    ebx,esi
  41a9b3:	mov    r10d,DWORD PTR [rsp-0x58]
  41a9b8:	xor    r13d,r10d
  41a9bb:	xor    r13d,DWORD PTR [rsp-0x64]
  41a9c0:	xor    r13d,r11d
  41a9c3:	rorx   ebp,r13d,0x1f
  41a9c9:	add    ecx,ebp
  41a9cb:	mov    r14d,ebp
  41a9ce:	mov    DWORD PTR [rsp-0x20],ebp
  41a9d2:	add    ecx,ebx
  41a9d4:	rorx   ebx,edi,0x1b
  41a9da:	lea    r8d,[rbx+rcx*1]
  41a9de:	add    r8d,0x6ed9eba1
  41a9e5:	rorx   ecx,esi,0x2
  41a9eb:	mov    esi,ecx
  41a9ed:	xor    esi,eax
  41a9ef:	xor    esi,edi
  41a9f1:	mov    ebp,DWORD PTR [rsp-0x54]
  41a9f5:	mov    ebx,r15d
  41a9f8:	xor    ebx,ebp
  41a9fa:	xor    ebx,DWORD PTR [rsp-0x5c]
  41a9fe:	xor    ebx,r9d
  41aa01:	mov    r13d,r9d
  41aa04:	mov    DWORD PTR [rsp-0x2c],r9d
  41aa09:	rorx   ebx,ebx,0x1f
  41aa0f:	add    edx,ebx
  41aa11:	mov    r11d,ebx
  41aa14:	mov    DWORD PTR [rsp-0x10],ebx
  41aa18:	add    edx,esi
  41aa1a:	rorx   esi,r8d,0x1b
  41aa20:	lea    esi,[rsi+rdx*1]
  41aa23:	add    esi,0x6ed9eba1
  41aa29:	rorx   edx,edi,0x2
  41aa2f:	mov    edi,edx
  41aa31:	xor    edi,ecx
  41aa33:	xor    edi,r8d
  41aa36:	mov    r9d,DWORD PTR [rsp-0x50]
  41aa3b:	xor    r10d,r9d
  41aa3e:	xor    r10d,DWORD PTR [rsp-0x48]
  41aa43:	xor    r10d,r12d
  41aa46:	rorx   ebx,r10d,0x1f
  41aa4c:	add    eax,ebx
  41aa4e:	mov    r10d,ebx
  41aa51:	mov    DWORD PTR [rsp-0x18],ebx
  41aa55:	add    eax,edi
  41aa57:	rorx   edi,esi,0x1b
  41aa5d:	lea    edi,[rdi+rax*1]
  41aa60:	add    edi,0x6ed9eba1
  41aa66:	rorx   eax,r8d,0x2
  41aa6c:	mov    ebx,eax
  41aa6e:	xor    ebx,edx
  41aa70:	xor    ebx,esi
  41aa72:	mov    r12d,DWORD PTR [rsp-0x1c]
  41aa77:	xor    ebp,r12d
  41aa7a:	xor    ebp,DWORD PTR [rsp-0x60]
  41aa7e:	xor    ebp,r14d
  41aa81:	rorx   r8d,ebp,0x1f
  41aa87:	add    ecx,r8d
  41aa8a:	mov    r15d,r8d
  41aa8d:	mov    DWORD PTR [rsp-0x40],r8d
  41aa92:	add    ecx,ebx
  41aa94:	rorx   ebx,edi,0x1b
  41aa9a:	lea    r8d,[rbx+rcx*1]
  41aa9e:	add    r8d,0x6ed9eba1
  41aaa5:	rorx   ecx,esi,0x2
  41aaab:	mov    esi,ecx
  41aaad:	xor    esi,eax
  41aaaf:	xor    esi,edi
  41aab1:	mov    ebp,DWORD PTR [rsp-0x30]
  41aab5:	xor    r9d,ebp
  41aab8:	xor    r9d,DWORD PTR [rsp-0x38]
  41aabd:	xor    r9d,r11d
  41aac0:	rorx   ebx,r9d,0x1f
  41aac6:	add    edx,ebx
  41aac8:	mov    r9d,ebx
  41aacb:	mov    DWORD PTR [rsp-0x54],ebx
  41aacf:	add    edx,esi
  41aad1:	rorx   esi,r8d,0x1b
  41aad7:	lea    esi,[rsi+rdx*1]
  41aada:	add    esi,0x6ed9eba1
  41aae0:	rorx   edx,edi,0x2
  41aae6:	mov    edi,edx
  41aae8:	xor    edi,ecx
  41aaea:	xor    edi,r8d
  41aaed:	mov    r11d,DWORD PTR [rsp-0x34]
  41aaf2:	mov    ebx,r12d
  41aaf5:	xor    ebx,r11d
  41aaf8:	xor    ebx,DWORD PTR [rsp-0x24]
  41aafc:	xor    ebx,r10d
  41aaff:	rorx   r14d,ebx,0x1f
  41ab05:	add    eax,r14d
  41ab08:	mov    DWORD PTR [rsp-0x58],r14d
  41ab0d:	add    eax,edi
  41ab0f:	rorx   edi,esi,0x1b
  41ab15:	lea    edi,[rdi+rax*1]
  41ab18:	add    edi,0x6ed9eba1
  41ab1e:	rorx   eax,r8d,0x2
  41ab24:	mov    ebx,eax
  41ab26:	xor    ebx,edx
  41ab28:	xor    ebx,esi
  41ab2a:	mov    r10d,DWORD PTR [rsp-0x64]
  41ab2f:	xor    ebp,r10d
  41ab32:	xor    ebp,r13d
  41ab35:	xor    ebp,r15d
  41ab38:	rorx   r8d,ebp,0x1f
  41ab3e:	add    ecx,r8d
  41ab41:	mov    ebp,r8d
  41ab44:	mov    DWORD PTR [rsp-0x4c],r8d
  41ab49:	add    ecx,ebx
  41ab4b:	rorx   ebx,edi,0x1b
  41ab51:	lea    r8d,[rbx+rcx*1]
  41ab55:	add    r8d,0x6ed9eba1
  41ab5c:	rorx   ecx,esi,0x2
  41ab62:	mov    esi,ecx
  41ab64:	xor    esi,eax
  41ab66:	xor    esi,edi
  41ab68:	mov    ebx,r11d
  41ab6b:	mov    r11d,DWORD PTR [rsp-0x5c]
  41ab70:	xor    ebx,r11d
  41ab73:	mov    r13d,DWORD PTR [rsp-0x14]
  41ab78:	xor    ebx,r13d
  41ab7b:	xor    ebx,r9d
  41ab7e:	rorx   ebx,ebx,0x1f
  41ab84:	add    edx,ebx
  41ab86:	mov    r12d,ebx
  41ab89:	mov    DWORD PTR [rsp-0x3c],ebx
  41ab8d:	add    edx,esi
  41ab8f:	rorx   esi,r8d,0x1b
  41ab95:	lea    r9d,[rsi+rdx*1]
  41ab99:	add    r9d,0x6ed9eba1
  41aba0:	rorx   edx,edi,0x2
  41aba6:	mov    edi,edx
  41aba8:	xor    edi,ecx
  41abaa:	xor    edi,r8d
  41abad:	mov    esi,r10d
  41abb0:	mov    r10d,DWORD PTR [rsp-0x48]
  41abb5:	xor    esi,r10d
  41abb8:	xor    esi,DWORD PTR [rsp-0x20]
  41abbc:	xor    esi,r14d
  41abbf:	rorx   esi,esi,0x1f
  41abc5:	mov    DWORD PTR [rsp-0x64],esi
  41abc9:	add    eax,esi
  41abcb:	add    eax,edi
  41abcd:	rorx   edi,r9d,0x1b
  41abd3:	lea    edi,[rdi+rax*1]
  41abd6:	add    edi,0x6ed9eba1
  41abdc:	rorx   eax,r8d,0x2
  41abe2:	mov    ebx,eax
  41abe4:	xor    ebx,edx
  41abe6:	xor    ebx,r9d
  41abe9:	mov    esi,r11d
  41abec:	mov    r11d,DWORD PTR [rsp-0x60]
  41abf1:	xor    esi,r11d
  41abf4:	mov    r15d,DWORD PTR [rsp-0x10]
  41abf9:	xor    esi,r15d
  41abfc:	xor    esi,ebp
  41abfe:	rorx   r14d,esi,0x1f
  41ac04:	add    ecx,r14d
  41ac07:	mov    DWORD PTR [rsp-0x44],r14d
  41ac0c:	add    ecx,ebx
  41ac0e:	rorx   ebx,edi,0x1b
  41ac14:	lea    r8d,[rbx+rcx*1]
  41ac18:	add    r8d,0x6ed9eba1
  41ac1f:	rorx   ecx,r9d,0x2
  41ac25:	mov    esi,ecx
  41ac27:	xor    esi,eax
  41ac29:	xor    esi,edi
  41ac2b:	mov    ebx,r10d
  41ac2e:	mov    ebp,DWORD PTR [rsp-0x38]
  41ac32:	xor    ebx,ebp
  41ac34:	xor    ebx,DWORD PTR [rsp-0x18]
  41ac38:	xor    ebx,r12d
  41ac3b:	rorx   r9d,ebx,0x1f
  41ac41:	add    edx,r9d
  41ac44:	mov    DWORD PTR [rsp-0x28],r9d
  41ac49:	add    edx,esi
  41ac4b:	rorx   esi,r8d,0x1b
  41ac51:	lea    esi,[rsi+rdx*1]
  41ac54:	add    esi,0x6ed9eba1
  41ac5a:	rorx   edx,edi,0x2
  41ac60:	mov    r12d,edx
  41ac63:	xor    r12d,ecx
  41ac66:	xor    r12d,r8d
  41ac69:	mov    ebx,r11d
  41ac6c:	mov    r11d,DWORD PTR [rsp-0x24]
  41ac71:	xor    ebx,r11d
  41ac74:	xor    ebx,DWORD PTR [rsp-0x40]
  41ac78:	xor    ebx,DWORD PTR [rsp-0x64]
  41ac7c:	rorx   ebx,ebx,0x1f
  41ac82:	add    eax,ebx
  41ac84:	mov    r10d,ebx
  41ac87:	mov    DWORD PTR [rsp-0x60],ebx
  41ac8b:	add    eax,r12d
  41ac8e:	rorx   edi,esi,0x1b
  41ac94:	lea    edi,[rdi+rax*1]
  41ac97:	add    edi,0x6ed9eba1
  41ac9d:	rorx   eax,r8d,0x2
  41aca3:	mov    r8d,eax
  41aca6:	xor    r8d,edx
  41aca9:	xor    r8d,esi
  41acac:	mov    ebx,ebp
  41acae:	mov    r12d,DWORD PTR [rsp-0x2c]
  41acb3:	xor    ebx,r12d
  41acb6:	xor    ebx,DWORD PTR [rsp-0x54]
  41acba:	xor    ebx,r14d
  41acbd:	rorx   r14d,ebx,0x1f
  41acc3:	add    ecx,r14d
  41acc6:	add    ecx,r8d
  41acc9:	rorx   ebp,edi,0x1b
  41accf:	lea    ebx,[rcx+rbp*1]
  41acd2:	add    ebx,0x6ed9eba1
  41acd8:	rorx   ecx,esi,0x2
  41acde:	mov    esi,ecx
  41ace0:	xor    esi,eax
  41ace2:	xor    esi,edi
  41ace4:	mov    ebp,r11d
  41ace7:	xor    ebp,r13d
  41acea:	xor    ebp,DWORD PTR [rsp-0x58]
  41acee:	xor    ebp,r9d
  41acf1:	rorx   ebp,ebp,0x1f
  41acf7:	add    edx,ebp
  41acf9:	mov    r11d,ebp
  41acfc:	mov    DWORD PTR [rsp-0x50],ebp
  41ad00:	add    edx,esi
  41ad02:	rorx   esi,ebx,0x1b
  41ad08:	lea    r8d,[rsi+rdx*1]
  41ad0c:	add    r8d,0x6ed9eba1
  41ad13:	rorx   ebp,edi,0x2
  41ad19:	mov    edx,ebp
  41ad1b:	xor    edx,ecx
  41ad1d:	xor    edx,ebx
  41ad1f:	mov    esi,r12d
  41ad22:	mov    r9d,DWORD PTR [rsp-0x20]
  41ad27:	xor    esi,r9d
  41ad2a:	xor    esi,DWORD PTR [rsp-0x4c]
  41ad2e:	xor    esi,r10d
  41ad31:	rorx   esi,esi,0x1f
  41ad37:	add    eax,esi
  41ad39:	mov    r12d,esi
  41ad3c:	mov    DWORD PTR [rsp-0x38],esi
  41ad40:	add    eax,edx
  41ad42:	rorx   edx,r8d,0x1b
  41ad48:	lea    edx,[rdx+rax*1]
  41ad4b:	add    edx,0x6ed9eba1
  41ad51:	rorx   eax,ebx,0x2
  41ad57:	mov    esi,eax
  41ad59:	xor    esi,ebp
  41ad5b:	xor    esi,r8d
  41ad5e:	mov    edi,r13d
  41ad61:	xor    edi,r15d
  41ad64:	xor    edi,DWORD PTR [rsp-0x3c]
  41ad68:	xor    edi,r14d
  41ad6b:	mov    r13d,r14d
  41ad6e:	rorx   edi,edi,0x1f
  41ad74:	add    ecx,edi
  41ad76:	mov    r10d,edi
  41ad79:	mov    DWORD PTR [rsp-0x30],edi
  41ad7d:	add    ecx,esi
  41ad7f:	rorx   esi,edx,0x1b
  41ad85:	lea    esi,[rsi+rcx*1]
  41ad88:	add    esi,0x6ed9eba1
  41ad8e:	rorx   ecx,r8d,0x2
  41ad94:	mov    edi,edx
  41ad96:	and    edi,ecx
  41ad98:	mov    ebx,edx
  41ad9a:	or     ebx,ecx
  41ad9c:	and    ebx,eax
  41ad9e:	or     ebx,edi
  41ada0:	mov    edi,r9d
  41ada3:	mov    r14d,DWORD PTR [rsp-0x18]
  41ada8:	xor    edi,r14d
  41adab:	xor    edi,DWORD PTR [rsp-0x64]
  41adaf:	xor    edi,r11d
  41adb2:	rorx   edi,edi,0x1f
  41adb8:	add    ebp,edi
  41adba:	mov    r11d,edi
  41adbd:	mov    DWORD PTR [rsp-0x48],edi
  41adc1:	add    ebp,ebx
  41adc3:	rorx   edi,esi,0x1b
  41adc9:	lea    ebx,[rdi+rbp*1]
  41adcc:	add    ebx,0x8f1bbcdc
  41add2:	rorx   edx,edx,0x2
  41add8:	mov    edi,esi
  41adda:	and    edi,edx
  41addc:	mov    ebp,esi
  41adde:	or     ebp,edx
  41ade0:	and    ebp,ecx
  41ade2:	or     ebp,edi
  41ade4:	mov    r9d,DWORD PTR [rsp-0x40]
  41ade9:	mov    edi,r15d
  41adec:	xor    edi,r9d
  41adef:	xor    edi,DWORD PTR [rsp-0x44]
  41adf3:	xor    edi,r12d
  41adf6:	rorx   edi,edi,0x1f
  41adfc:	mov    DWORD PTR [rsp-0x2c],edi
  41ae00:	add    eax,edi
  41ae02:	add    eax,ebp
  41ae04:	rorx   edi,ebx,0x1b
  41ae0a:	lea    r8d,[rdi+rax*1]
  41ae0e:	add    r8d,0x8f1bbcdc
  41ae15:	rorx   ebp,esi,0x2
  41ae1b:	mov    esi,ebx
  41ae1d:	and    esi,ebp
  41ae1f:	mov    edi,ebx
  41ae21:	or     edi,ebp
  41ae23:	and    edi,edx
  41ae25:	or     edi,esi
  41ae27:	mov    r15d,DWORD PTR [rsp-0x54]
  41ae2c:	mov    eax,r14d
  41ae2f:	xor    eax,r15d
  41ae32:	xor    eax,DWORD PTR [rsp-0x28]
  41ae36:	xor    eax,r10d
  41ae39:	rorx   eax,eax,0x1f
  41ae3f:	add    ecx,eax
  41ae41:	mov    r14d,eax
  41ae44:	mov    DWORD PTR [rsp-0x34],eax
  41ae48:	add    ecx,edi
  41ae4a:	rorx   esi,r8d,0x1b
  41ae50:	lea    esi,[rsi+rcx*1]
  41ae53:	add    esi,0x8f1bbcdc
  41ae59:	rorx   ecx,ebx,0x2
  41ae5f:	mov    edi,r8d
  41ae62:	and    edi,ecx
  41ae64:	mov    eax,r8d
  41ae67:	or     eax,ecx
  41ae69:	and    eax,ebp
  41ae6b:	or     eax,edi
  41ae6d:	mov    edi,r9d
  41ae70:	mov    r9d,DWORD PTR [rsp-0x58]
  41ae75:	xor    edi,r9d
  41ae78:	xor    edi,DWORD PTR [rsp-0x60]
  41ae7c:	xor    edi,r11d
  41ae7f:	rorx   r12d,edi,0x1f
  41ae85:	add    edx,r12d
  41ae88:	mov    DWORD PTR [rsp-0x5c],r12d
  41ae8d:	add    edx,eax
  41ae8f:	rorx   eax,esi,0x1b
  41ae95:	lea    ebx,[rax+rdx*1]
  41ae98:	add    ebx,0x8f1bbcdc
  41ae9e:	rorx   edx,r8d,0x2
  41aea4:	mov    eax,esi
  41aea6:	and    eax,edx
  41aea8:	mov    edi,esi
  41aeaa:	or     edi,edx
  41aeac:	and    edi,ecx
  41aeae:	or     edi,eax
  41aeb0:	mov    eax,r15d
  41aeb3:	mov    r15d,DWORD PTR [rsp-0x4c]
  41aeb8:	xor    eax,r15d
  41aebb:	mov    DWORD PTR [rsp-0x1c],r13d
  41aec0:	xor    eax,r13d
  41aec3:	mov    r13d,DWORD PTR [rsp-0x2c]
  41aec8:	xor    eax,r13d
  41aecb:	rorx   r11d,eax,0x1f
  41aed1:	add    ebp,r11d
  41aed4:	mov    DWORD PTR [rsp-0x54],r11d
  41aed9:	add    ebp,edi
  41aedb:	rorx   eax,ebx,0x1b
  41aee1:	lea    r8d,[rax+rbp*1]
  41aee5:	add    r8d,0x8f1bbcdc
  41aeec:	rorx   eax,esi,0x2
  41aef2:	mov    esi,ebx
  41aef4:	and    esi,eax
  41aef6:	mov    edi,ebx
  41aef8:	or     edi,eax
  41aefa:	and    edi,edx
  41aefc:	or     edi,esi
  41aefe:	mov    esi,r9d
  41af01:	mov    r9d,DWORD PTR [rsp-0x3c]
  41af06:	xor    esi,r9d
  41af09:	xor    esi,DWORD PTR [rsp-0x50]
  41af0d:	xor    esi,r14d
  41af10:	rorx   r14d,esi,0x1f
  41af16:	add    ecx,r14d
  41af19:	mov    DWORD PTR [rsp-0x58],r14d
  41af1e:	add    ecx,edi
  41af20:	rorx   esi,r8d,0x1b
  41af26:	lea    ebp,[rsi+rcx*1]
  41af29:	add    ebp,0x8f1bbcdc
  41af2f:	rorx   ecx,ebx,0x2
  41af35:	mov    edi,r8d
  41af38:	and    edi,ecx
  41af3a:	mov    ebx,r8d
  41af3d:	or     ebx,ecx
  41af3f:	and    ebx,eax
  41af41:	or     ebx,edi
  41af43:	mov    esi,r15d
  41af46:	mov    r10d,DWORD PTR [rsp-0x64]
  41af4b:	xor    esi,r10d
  41af4e:	xor    esi,DWORD PTR [rsp-0x38]
  41af52:	xor    esi,r12d
  41af55:	rorx   r12d,esi,0x1f
  41af5b:	add    edx,r12d
  41af5e:	mov    DWORD PTR [rsp-0x4c],r12d
  41af63:	add    edx,ebx
  41af65:	rorx   edi,ebp,0x1b
  41af6b:	lea    ebx,[rdi+rdx*1]
  41af6e:	add    ebx,0x8f1bbcdc
  41af74:	rorx   edx,r8d,0x2
  41af7a:	mov    edi,ebp
  41af7c:	and    edi,edx
  41af7e:	mov    esi,ebp
  41af80:	or     esi,edx
  41af82:	and    esi,ecx
  41af84:	or     esi,edi
  41af86:	mov    edi,r9d
  41af89:	mov    r9d,DWORD PTR [rsp-0x44]
  41af8e:	xor    edi,r9d
  41af91:	xor    edi,DWORD PTR [rsp-0x30]
  41af95:	xor    edi,r11d
  41af98:	rorx   edi,edi,0x1f
  41af9e:	add    eax,edi
  41afa0:	mov    r11d,edi
  41afa3:	mov    DWORD PTR [rsp-0x3c],edi
  41afa7:	add    eax,esi
  41afa9:	rorx   esi,ebx,0x1b
  41afaf:	lea    r15d,[rsi+rax*1]
  41afb3:	add    r15d,0x8f1bbcdc
  41afba:	rorx   eax,ebp,0x2
  41afc0:	mov    esi,ebx
  41afc2:	and    esi,eax
  41afc4:	mov    edi,ebx
  41afc6:	or     edi,eax
  41afc8:	and    edi,edx
  41afca:	or     edi,esi
  41afcc:	mov    esi,r10d
  41afcf:	mov    r10d,DWORD PTR [rsp-0x28]
  41afd4:	xor    esi,r10d
  41afd7:	xor    esi,DWORD PTR [rsp-0x48]
  41afdb:	xor    esi,r14d
  41afde:	rorx   esi,esi,0x1f
  41afe4:	add    ecx,esi
  41afe6:	mov    r14d,esi
  41afe9:	mov    DWORD PTR [rsp-0x40],esi
  41afed:	add    ecx,edi
  41afef:	rorx   esi,r15d,0x1b
  41aff5:	lea    r8d,[rsi+rcx*1]
  41aff9:	add    r8d,0x8f1bbcdc
  41b000:	rorx   ecx,ebx,0x2
  41b006:	mov    edi,r15d
  41b009:	and    edi,ecx
  41b00b:	mov    ebp,r15d
  41b00e:	or     ebp,ecx
  41b010:	and    ebp,eax
  41b012:	or     ebp,edi
  41b014:	mov    esi,r9d
  41b017:	mov    r9d,DWORD PTR [rsp-0x60]
  41b01c:	xor    esi,r9d
  41b01f:	xor    esi,r13d
  41b022:	xor    esi,r12d
  41b025:	rorx   esi,esi,0x1f
  41b02b:	mov    DWORD PTR [rsp-0x64],esi
  41b02f:	add    edx,esi
  41b031:	add    edx,ebp
  41b033:	rorx   edi,r8d,0x1b
  41b039:	lea    ebp,[rdi+rdx*1]
  41b03c:	add    ebp,0x8f1bbcdc
  41b042:	rorx   edx,r15d,0x2
  41b048:	mov    edi,r8d
  41b04b:	and    edi,edx
  41b04d:	mov    esi,r8d
  41b050:	or     esi,edx
  41b052:	and    esi,ecx
  41b054:	or     esi,edi
  41b056:	mov    edi,r10d
  41b059:	mov    r12d,DWORD PTR [rsp-0x1c]
  41b05e:	xor    edi,r12d
  41b061:	xor    edi,DWORD PTR [rsp-0x34]
  41b065:	xor    edi,r11d
  41b068:	rorx   r13d,edi,0x1f
  41b06e:	add    eax,r13d
  41b071:	mov    DWORD PTR [rsp-0x44],r13d
  41b076:	add    eax,esi
  41b078:	rorx   esi,ebp,0x1b
  41b07e:	lea    r15d,[rsi+rax*1]
  41b082:	add    r15d,0x8f1bbcdc
  41b089:	rorx   eax,r8d,0x2
  41b08f:	mov    esi,ebp
  41b091:	and    esi,eax
  41b093:	mov    ebx,ebp
  41b095:	or     ebx,eax
  41b097:	and    ebx,edx
  41b099:	or     ebx,esi
  41b09b:	mov    esi,r9d
  41b09e:	mov    r10d,DWORD PTR [rsp-0x50]
  41b0a3:	xor    esi,r10d
  41b0a6:	xor    esi,DWORD PTR [rsp-0x5c]
  41b0aa:	xor    esi,r14d
  41b0ad:	rorx   esi,esi,0x1f
  41b0b3:	add    ecx,esi
  41b0b5:	mov    r11d,esi
  41b0b8:	mov    DWORD PTR [rsp-0x60],esi
  41b0bc:	add    ecx,ebx
  41b0be:	rorx   esi,r15d,0x1b
  41b0c4:	lea    r8d,[rsi+rcx*1]
  41b0c8:	add    r8d,0x8f1bbcdc
  41b0cf:	rorx   ecx,ebp,0x2
  41b0d5:	mov    edi,r15d
  41b0d8:	and    edi,ecx
  41b0da:	mov    ebp,r15d
  41b0dd:	or     ebp,ecx
  41b0df:	and    ebp,eax
  41b0e1:	or     ebp,edi
  41b0e3:	mov    esi,r12d
  41b0e6:	mov    r12d,DWORD PTR [rsp-0x38]
  41b0eb:	xor    esi,r12d
  41b0ee:	xor    esi,DWORD PTR [rsp-0x54]
  41b0f2:	xor    esi,DWORD PTR [rsp-0x64]
  41b0f6:	rorx   esi,esi,0x1f
  41b0fc:	mov    DWORD PTR [rsp-0x28],esi
  41b100:	add    edx,esi
  41b102:	add    edx,ebp
  41b104:	rorx   edi,r8d,0x1b
  41b10a:	lea    r9d,[rdi+rdx*1]
  41b10e:	add    r9d,0x8f1bbcdc
  41b115:	rorx   edx,r15d,0x2
  41b11b:	mov    edi,r8d
  41b11e:	and    edi,edx
  41b120:	mov    esi,r8d
  41b123:	or     esi,edx
  41b125:	and    esi,ecx
  41b127:	or     esi,edi
  41b129:	mov    ebx,DWORD PTR [rsp-0x30]
  41b12d:	mov    edi,r10d
  41b130:	xor    edi,ebx
  41b132:	xor    edi,DWORD PTR [rsp-0x58]
  41b136:	xor    edi,r13d
  41b139:	rorx   edi,edi,0x1f
  41b13f:	add    eax,edi
  41b141:	mov    r15d,edi
  41b144:	mov    DWORD PTR [rsp-0x24],edi
  41b148:	add    eax,esi
  41b14a:	rorx   esi,r9d,0x1b
  41b150:	lea    r10d,[rsi+rax*1]
  41b154:	add    r10d,0x8f1bbcdc
  41b15b:	rorx   eax,r8d,0x2
  41b161:	mov    esi,r9d
  41b164:	and    esi,eax
  41b166:	mov    ebp,r9d
  41b169:	or     ebp,eax
  41b16b:	and    ebp,edx
  41b16d:	or     ebp,esi
  41b16f:	mov    r14d,DWORD PTR [rsp-0x48]
  41b174:	mov    esi,r12d
  41b177:	xor    esi,r14d
  41b17a:	xor    esi,DWORD PTR [rsp-0x4c]
  41b17e:	xor    esi,r11d
  41b181:	rorx   esi,esi,0x1f
  41b187:	add    ecx,esi
  41b189:	mov    r12d,esi
  41b18c:	mov    DWORD PTR [rsp-0x20],esi
  41b190:	add    ecx,ebp
  41b192:	rorx   esi,r10d,0x1b
  41b198:	lea    r8d,[rsi+rcx*1]
  41b19c:	add    r8d,0x8f1bbcdc
  41b1a3:	rorx   ecx,r9d,0x2
  41b1a9:	mov    edi,r10d
  41b1ac:	and    edi,ecx
  41b1ae:	mov    ebp,r10d
  41b1b1:	or     ebp,ecx
  41b1b3:	and    ebp,eax
  41b1b5:	or     ebp,edi
  41b1b7:	mov    esi,ebx
  41b1b9:	mov    ebx,DWORD PTR [rsp-0x2c]
  41b1bd:	xor    esi,ebx
  41b1bf:	xor    esi,DWORD PTR [rsp-0x3c]
  41b1c3:	mov    r11d,DWORD PTR [rsp-0x28]
  41b1c8:	xor    esi,r11d
  41b1cb:	rorx   esi,esi,0x1f
  41b1d1:	mov    DWORD PTR [rsp-0x50],esi
  41b1d5:	add    edx,esi
  41b1d7:	add    edx,ebp
  41b1d9:	rorx   edi,r8d,0x1b
  41b1df:	lea    r9d,[rdi+rdx*1]
  41b1e3:	add    r9d,0x8f1bbcdc
  41b1ea:	rorx   edx,r10d,0x2
  41b1f0:	mov    edi,r8d
  41b1f3:	and    edi,edx
  41b1f5:	mov    esi,r8d
  41b1f8:	or     esi,edx
  41b1fa:	and    esi,ecx
  41b1fc:	or     esi,edi
  41b1fe:	mov    r10d,DWORD PTR [rsp-0x34]
  41b203:	mov    edi,r14d
  41b206:	xor    edi,r10d
  41b209:	xor    edi,DWORD PTR [rsp-0x40]
  41b20d:	xor    edi,r15d
  41b210:	rorx   edi,edi,0x1f
  41b216:	add    eax,edi
  41b218:	mov    r14d,edi
  41b21b:	mov    DWORD PTR [rsp-0x38],edi
  41b21f:	add    eax,esi
  41b221:	rorx   esi,r9d,0x1b
  41b227:	lea    r13d,[rsi+rax*1]
  41b22b:	add    r13d,0x8f1bbcdc
  41b232:	rorx   esi,r8d,0x2
  41b238:	mov    eax,r9d
  41b23b:	and    eax,esi
  41b23d:	mov    ebp,r9d
  41b240:	or     ebp,esi
  41b242:	and    ebp,edx
  41b244:	or     ebp,eax
  41b246:	mov    eax,ebx
  41b248:	mov    ebx,DWORD PTR [rsp-0x5c]
  41b24c:	xor    eax,ebx
  41b24e:	xor    eax,DWORD PTR [rsp-0x64]
  41b252:	xor    eax,r12d
  41b255:	rorx   eax,eax,0x1f
  41b25b:	add    ecx,eax
  41b25d:	mov    r12d,eax
  41b260:	mov    DWORD PTR [rsp-0x30],eax
  41b264:	add    ecx,ebp
  41b266:	rorx   eax,r13d,0x1b
  41b26c:	lea    r8d,[rax+rcx*1]
  41b270:	add    r8d,0x8f1bbcdc
  41b277:	rorx   eax,r9d,0x2
  41b27d:	mov    edi,r13d
  41b280:	and    edi,eax
  41b282:	mov    ecx,r13d
  41b285:	or     ecx,eax
  41b287:	and    ecx,esi
  41b289:	or     ecx,edi
  41b28b:	mov    edi,r10d
  41b28e:	mov    ebp,DWORD PTR [rsp-0x54]
  41b292:	xor    edi,ebp
  41b294:	xor    edi,DWORD PTR [rsp-0x44]
  41b298:	xor    edi,DWORD PTR [rsp-0x50]
  41b29c:	rorx   r15d,edi,0x1f
  41b2a2:	add    edx,r15d
  41b2a5:	mov    DWORD PTR [rsp-0x2c],r15d
  41b2aa:	add    edx,ecx
  41b2ac:	rorx   ecx,r8d,0x1b
  41b2b2:	lea    r10d,[rcx+rdx*1]
  41b2b6:	add    r10d,0x8f1bbcdc
  41b2bd:	rorx   edx,r13d,0x2
  41b2c3:	mov    ecx,r8d
  41b2c6:	and    ecx,edx
  41b2c8:	mov    edi,r8d
  41b2cb:	or     edi,edx
  41b2cd:	and    edi,eax
  41b2cf:	or     edi,ecx
  41b2d1:	mov    ecx,ebx
  41b2d3:	mov    ebx,DWORD PTR [rsp-0x58]
  41b2d7:	xor    ecx,ebx
  41b2d9:	xor    ecx,DWORD PTR [rsp-0x60]
  41b2dd:	xor    ecx,r14d
  41b2e0:	rorx   r14d,ecx,0x1f
  41b2e6:	add    esi,r14d
  41b2e9:	mov    DWORD PTR [rsp-0x34],r14d
  41b2ee:	add    esi,edi
  41b2f0:	rorx   ecx,r10d,0x1b
  41b2f6:	lea    edi,[rcx+rsi*1]
  41b2f9:	add    edi,0x8f1bbcdc
  41b2ff:	rorx   esi,r8d,0x2
  41b305:	mov    ecx,esi
  41b307:	xor    ecx,edx
  41b309:	xor    ecx,r10d
  41b30c:	mov    r9d,DWORD PTR [rsp-0x4c]
  41b311:	xor    ebp,r9d
  41b314:	xor    ebp,r11d
  41b317:	xor    ebp,r12d
  41b31a:	rorx   r11d,ebp,0x1f
  41b320:	add    eax,r11d
  41b323:	mov    DWORD PTR [rsp-0x5c],r11d
  41b328:	add    eax,ecx
  41b32a:	rorx   ecx,edi,0x1b
  41b330:	lea    r8d,[rcx+rax*1]
  41b334:	add    r8d,0xca62c1d6
  41b33b:	rorx   eax,r10d,0x2
  41b341:	mov    ecx,eax
  41b343:	xor    ecx,esi
  41b345:	xor    ecx,edi
  41b347:	mov    ebp,ebx
  41b349:	mov    ebx,DWORD PTR [rsp-0x3c]
  41b34d:	xor    ebp,ebx
  41b34f:	xor    ebp,DWORD PTR [rsp-0x24]
  41b353:	xor    ebp,r15d
  41b356:	rorx   ebp,ebp,0x1f
  41b35c:	add    edx,ebp
  41b35e:	mov    r13d,ebp
  41b361:	mov    DWORD PTR [rsp-0x48],ebp
  41b365:	add    edx,ecx
  41b367:	rorx   ecx,r8d,0x1b
  41b36d:	lea    r10d,[rcx+rdx*1]
  41b371:	add    r10d,0xca62c1d6
  41b378:	rorx   edx,edi,0x2
  41b37e:	mov    ecx,edx
  41b380:	xor    ecx,eax
  41b382:	xor    ecx,r8d
  41b385:	mov    edi,r9d
  41b388:	mov    r9d,DWORD PTR [rsp-0x40]
  41b38d:	xor    edi,r9d
  41b390:	xor    edi,DWORD PTR [rsp-0x20]
  41b394:	xor    edi,r14d
  41b397:	rorx   edi,edi,0x1f
  41b39d:	add    esi,edi
  41b39f:	mov    r12d,edi
  41b3a2:	mov    DWORD PTR [rsp-0x54],edi
  41b3a6:	add    esi,ecx
  41b3a8:	rorx   ecx,r10d,0x1b
  41b3ae:	lea    edi,[rcx+rsi*1]
  41b3b1:	add    edi,0xca62c1d6
  41b3b7:	rorx   esi,r8d,0x2
  41b3bd:	mov    ecx,esi
  41b3bf:	xor    ecx,edx
  41b3c1:	xor    ecx,r10d
  41b3c4:	mov    ebp,ebx
  41b3c6:	mov    r15d,DWORD PTR [rsp-0x64]
  41b3cb:	xor    ebp,r15d
  41b3ce:	xor    ebp,DWORD PTR [rsp-0x50]
  41b3d2:	xor    ebp,r11d
  41b3d5:	rorx   r14d,ebp,0x1f
  41b3db:	add    eax,r14d
  41b3de:	mov    DWORD PTR [rsp-0x58],r14d
  41b3e3:	add    eax,ecx
  41b3e5:	rorx   ecx,edi,0x1b
  41b3eb:	lea    r8d,[rcx+rax*1]
  41b3ef:	add    r8d,0xca62c1d6
  41b3f6:	rorx   eax,r10d,0x2
  41b3fc:	mov    ecx,eax
  41b3fe:	xor    ecx,esi
  41b400:	xor    ecx,edi
  41b402:	mov    ebp,r9d
  41b405:	mov    r11d,DWORD PTR [rsp-0x44]
  41b40a:	xor    ebp,r11d
  41b40d:	xor    ebp,DWORD PTR [rsp-0x38]
  41b411:	xor    ebp,r13d
  41b414:	rorx   r13d,ebp,0x1f
  41b41a:	add    edx,r13d
  41b41d:	add    edx,ecx
  41b41f:	rorx   ecx,r8d,0x1b
  41b425:	lea    edx,[rcx+rdx*1]
  41b428:	add    edx,0xca62c1d6
  41b42e:	rorx   ecx,edi,0x2
  41b434:	mov    edi,ecx
  41b436:	xor    edi,eax
  41b438:	xor    edi,r8d
  41b43b:	mov    ebp,r15d
  41b43e:	mov    r10d,DWORD PTR [rsp-0x60]
  41b443:	xor    ebp,r10d
  41b446:	xor    ebp,DWORD PTR [rsp-0x30]
  41b44a:	xor    ebp,r12d
  41b44d:	rorx   r15d,ebp,0x1f
  41b453:	add    esi,r15d
  41b456:	mov    DWORD PTR [rsp-0x64],r15d
  41b45b:	add    esi,edi
  41b45d:	rorx   edi,edx,0x1b
  41b463:	lea    edi,[rdi+rsi*1]
  41b466:	add    edi,0xca62c1d6
  41b46c:	rorx   esi,r8d,0x2
  41b472:	mov    r8d,esi
  41b475:	xor    r8d,ecx
  41b478:	xor    r8d,edx
  41b47b:	mov    ebp,r11d
  41b47e:	mov    r11d,DWORD PTR [rsp-0x28]
  41b483:	xor    ebp,r11d
  41b486:	xor    ebp,DWORD PTR [rsp-0x2c]
  41b48a:	xor    ebp,r14d
  41b48d:	rorx   r9d,ebp,0x1f
  41b493:	add    eax,r9d
  41b496:	mov    DWORD PTR [rsp-0x40],r9d
  41b49b:	add    eax,r8d
  41b49e:	rorx   ebx,edi,0x1b
  41b4a4:	lea    r8d,[rbx+rax*1]
  41b4a8:	add    r8d,0xca62c1d6
  41b4af:	rorx   eax,edx,0x2
  41b4b5:	mov    edx,eax
  41b4b7:	xor    edx,esi
  41b4b9:	xor    edx,edi
  41b4bb:	mov    ebp,r10d
  41b4be:	mov    r14d,DWORD PTR [rsp-0x24]
  41b4c3:	xor    ebp,r14d
  41b4c6:	xor    ebp,DWORD PTR [rsp-0x34]
  41b4ca:	xor    ebp,r13d
  41b4cd:	rorx   r12d,ebp,0x1f
  41b4d3:	add    ecx,r12d
  41b4d6:	mov    DWORD PTR [rsp-0x44],r12d
  41b4db:	add    ecx,edx
  41b4dd:	rorx   edx,r8d,0x1b
  41b4e3:	lea    edx,[rdx+rcx*1]
  41b4e6:	add    edx,0xca62c1d6
  41b4ec:	rorx   ecx,edi,0x2
  41b4f2:	mov    edi,ecx
  41b4f4:	xor    edi,eax
  41b4f6:	xor    edi,r8d
  41b4f9:	mov    ebp,r11d
  41b4fc:	mov    r10d,DWORD PTR [rsp-0x20]
  41b501:	xor    ebp,r10d
  41b504:	xor    ebp,DWORD PTR [rsp-0x5c]
  41b508:	xor    ebp,r15d
  41b50b:	rorx   r15d,ebp,0x1f
  41b511:	add    esi,r15d
  41b514:	mov    DWORD PTR [rsp-0x60],r15d
  41b519:	add    esi,edi
  41b51b:	rorx   edi,edx,0x1b
  41b521:	lea    edi,[rdi+rsi*1]
  41b524:	add    edi,0xca62c1d6
  41b52a:	rorx   esi,r8d,0x2
  41b530:	mov    ebx,esi
  41b532:	xor    ebx,ecx
  41b534:	xor    ebx,edx
  41b536:	mov    ebp,r14d
  41b539:	mov    r11d,DWORD PTR [rsp-0x50]
  41b53e:	xor    ebp,r11d
  41b541:	xor    ebp,DWORD PTR [rsp-0x48]
  41b545:	xor    ebp,r9d
  41b548:	rorx   ebp,ebp,0x1f
  41b54e:	mov    DWORD PTR [rsp-0x4c],ebp
  41b552:	add    eax,ebp
  41b554:	add    eax,ebx
  41b556:	rorx   ebx,edi,0x1b
  41b55c:	lea    r8d,[rbx+rax*1]
  41b560:	add    r8d,0xca62c1d6
  41b567:	rorx   eax,edx,0x2
  41b56d:	mov    edx,eax
  41b56f:	xor    edx,esi
  41b571:	xor    edx,edi
  41b573:	mov    ebp,r10d
  41b576:	mov    r9d,DWORD PTR [rsp-0x38]
  41b57b:	xor    ebp,r9d
  41b57e:	xor    ebp,DWORD PTR [rsp-0x54]
  41b582:	xor    ebp,r12d
  41b585:	rorx   r14d,ebp,0x1f
  41b58b:	add    ecx,r14d
  41b58e:	mov    DWORD PTR [rsp-0x24],r14d
  41b593:	add    ecx,edx
  41b595:	rorx   edx,r8d,0x1b
  41b59b:	lea    edx,[rdx+rcx*1]
  41b59e:	add    edx,0xca62c1d6
  41b5a4:	rorx   ebx,edi,0x2
  41b5aa:	mov    ecx,ebx
  41b5ac:	xor    ecx,eax
  41b5ae:	xor    ecx,r8d
  41b5b1:	mov    edi,r11d
  41b5b4:	mov    r10d,DWORD PTR [rsp-0x30]
  41b5b9:	xor    edi,r10d
  41b5bc:	xor    edi,DWORD PTR [rsp-0x58]
  41b5c0:	xor    edi,r15d
  41b5c3:	rorx   r15d,edi,0x1f
  41b5c9:	add    esi,r15d
  41b5cc:	mov    DWORD PTR [rsp-0x3c],r15d
  41b5d1:	add    esi,ecx
  41b5d3:	rorx   ecx,edx,0x1b
  41b5d9:	lea    edi,[rcx+rsi*1]
  41b5dc:	add    edi,0xca62c1d6
  41b5e2:	rorx   ecx,r8d,0x2
  41b5e8:	mov    r8d,ecx
  41b5eb:	xor    r8d,ebx
  41b5ee:	xor    r8d,edx
  41b5f1:	mov    esi,r9d
  41b5f4:	mov    r9d,DWORD PTR [rsp-0x2c]
  41b5f9:	xor    esi,r9d
  41b5fc:	xor    esi,r13d
  41b5ff:	xor    esi,DWORD PTR [rsp-0x4c]
  41b603:	rorx   esi,esi,0x1f
  41b609:	add    eax,esi
  41b60b:	add    eax,r8d
  41b60e:	rorx   ebp,edi,0x1b
  41b614:	lea    r12d,[rax+rbp*1]
  41b618:	add    r12d,0xca62c1d6
  41b61f:	rorx   r11d,edx,0x2
  41b625:	mov    eax,r11d
  41b628:	xor    eax,ecx
  41b62a:	xor    eax,edi
  41b62c:	mov    edx,r10d
  41b62f:	mov    r8d,DWORD PTR [rsp-0x34]
  41b634:	xor    edx,r8d
  41b637:	xor    edx,DWORD PTR [rsp-0x64]
  41b63b:	xor    edx,r14d
  41b63e:	rorx   edx,edx,0x1f
  41b644:	mov    DWORD PTR [rsp-0x50],edx
  41b648:	add    ebx,edx
  41b64a:	add    ebx,eax
  41b64c:	rorx   eax,r12d,0x1b
  41b652:	lea    ebp,[rax+rbx*1]
  41b655:	add    ebp,0xca62c1d6
  41b65b:	xor    r9d,DWORD PTR [rsp-0x5c]
  41b660:	xor    r9d,DWORD PTR [rsp-0x40]
  41b665:	rorx   ebx,edi,0x2
  41b66b:	mov    eax,ebx
  41b66d:	xor    eax,r11d
  41b670:	xor    eax,r12d
  41b673:	xor    r9d,r15d
  41b676:	rorx   edi,r9d,0x1f
  41b67c:	add    ecx,edi
  41b67e:	add    ecx,eax
  41b680:	rorx   eax,ebp,0x1b
  41b686:	mov    r15d,ebp
  41b689:	lea    r14d,[rax+rcx*1]
  41b68d:	add    r14d,0xca62c1d6
  41b694:	mov    eax,r8d
  41b697:	mov    ecx,DWORD PTR [rsp-0x48]
  41b69b:	xor    eax,ecx
  41b69d:	xor    eax,DWORD PTR [rsp-0x44]
  41b6a1:	xor    eax,esi
  41b6a3:	mov    r10d,DWORD PTR [rsp-0x58]
  41b6a8:	xor    ecx,r10d
  41b6ab:	xor    ecx,DWORD PTR [rsp-0x4c]
  41b6af:	xor    ecx,edi
  41b6b1:	mov    edx,ecx
  41b6b3:	mov    r8d,DWORD PTR [rsp-0x54]
  41b6b8:	xor    r13d,r8d
  41b6bb:	xor    r13d,DWORD PTR [rsp-0x24]
  41b6c0:	rorx   esi,r12d,0x2
  41b6c6:	rorx   edi,eax,0x1f
  41b6cc:	rorx   ebp,ebp,0x2
  41b6d2:	rorx   r9d,r14d,0x2
  41b6d8:	mov    ecx,r9d
  41b6db:	xor    ecx,ebp
  41b6dd:	xor    r13d,edi
  41b6e0:	rorx   eax,r13d,0x1f
  41b6e6:	add    eax,ebp
  41b6e8:	xor    ebp,esi
  41b6ea:	rorx   edx,edx,0x1f
  41b6f0:	add    edx,esi
  41b6f2:	xor    esi,ebx
  41b6f4:	xor    esi,r15d
  41b6f7:	add    r11d,edi
  41b6fa:	add    r11d,esi
  41b6fd:	rorx   esi,r14d,0x1b
  41b703:	lea    esi,[rsi+r11*1]
  41b707:	add    esi,0xca62c1d6
  41b70d:	xor    ebp,r14d
  41b710:	mov    edi,DWORD PTR [rsp-0x5c]
  41b714:	xor    edi,r8d
  41b717:	xor    edi,DWORD PTR [rsp-0x60]
  41b71b:	xor    edi,DWORD PTR [rsp-0x50]
  41b71f:	rorx   edi,edi,0x1f
  41b725:	add    ebx,edi
  41b727:	add    ebx,ebp
  41b729:	rorx   ebp,esi,0x1b
  41b72f:	lea    ebp,[rbx+rbp*1]
  41b732:	add    ebp,0xca62c1d6
  41b738:	xor    ecx,esi
  41b73a:	add    edx,ecx
  41b73c:	rorx   ecx,ebp,0x1b
  41b742:	lea    ecx,[rcx+rdx*1]
  41b745:	add    ecx,0xca62c1d6
  41b74b:	rorx   edx,esi,0x2
  41b751:	mov    esi,edx
  41b753:	xor    esi,r9d
  41b756:	xor    esi,ebp
  41b758:	add    eax,esi
  41b75a:	rorx   esi,ecx,0x1b
  41b760:	lea    eax,[rsi+rax*1]
  41b763:	add    eax,0xca62c1d6
  41b768:	rorx   esi,ecx,0x2
  41b76e:	vmovd  xmm1,eax
  41b772:	vpinsrd xmm1,xmm1,esi,0x1
  41b778:	rorx   esi,ebp,0x2
  41b77e:	vpinsrd xmm1,xmm1,esi,0x2
  41b784:	xor    esi,edx
  41b786:	xor    esi,ecx
  41b788:	mov    ecx,DWORD PTR [rsp-0x64]
  41b78c:	xor    ecx,r10d
  41b78f:	xor    ecx,DWORD PTR [rsp-0x3c]
  41b793:	xor    ecx,edi
  41b795:	rorx   ecx,ecx,0x1f
  41b79b:	add    ecx,DWORD PTR [rsp-0xc]
  41b79f:	add    ecx,r9d
  41b7a2:	add    ecx,esi
  41b7a4:	rorx   eax,eax,0x1b
  41b7aa:	lea    eax,[rax+rcx*1]
  41b7ad:	add    eax,0xca62c1d6
  41b7b2:	mov    rcx,QWORD PTR [rsp-0x8]
  41b7b7:	mov    DWORD PTR [rcx+0x8],eax
  41b7ba:	vpinsrd xmm1,xmm1,edx,0x3
  41b7c0:	vpaddd xmm0,xmm1,xmm0
  41b7c4:	vmovdqu XMMWORD PTR [rcx+0xc],xmm0
  41b7c9:	pop    rbx
  41b7ca:	pop    r12
  41b7cc:	pop    r13
  41b7ce:	pop    r14
  41b7d0:	pop    r15
  41b7d2:	pop    rbp
  41b7d3:	ret    
  41b7d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7de:	xchg   ax,ax
  41b7e0:	push   rbp
  41b7e1:	push   r15
  41b7e3:	push   r14
  41b7e5:	push   r13
  41b7e7:	push   r12
  41b7e9:	push   rbx
  41b7ea:	push   rax
  41b7eb:	test   rdx,rdx
  41b7ee:	je     41b8b6 <strcmp@plt+0x1811e>
  41b7f4:	mov    r14,rdx
  41b7f7:	mov    rbx,rsi
  41b7fa:	mov    r15,rdi
  41b7fd:	mov    ecx,DWORD PTR [rdi]
  41b7ff:	mov    eax,ecx
  41b801:	and    eax,0x3f
  41b804:	add    edx,ecx
  41b806:	mov    DWORD PTR [rdi],edx
  41b808:	jae    41b80e <strcmp@plt+0x18076>
  41b80a:	inc    DWORD PTR [r15+0x4]
  41b80e:	xor    r13d,r13d
  41b811:	test   eax,eax
  41b813:	je     41b826 <strcmp@plt+0x1808e>
  41b815:	mov    r12d,0x40
  41b81b:	sub    r12,rax
  41b81e:	cmp    r12,r14
  41b821:	jbe    41b859 <strcmp@plt+0x180c1>
  41b823:	mov    r13d,eax
  41b826:	cmp    r14,0x40
  41b82a:	jae    41b889 <strcmp@plt+0x180f1>
  41b82c:	test   r14,r14
  41b82f:	je     41b8b6 <strcmp@plt+0x1811e>
  41b835:	mov    eax,r13d
  41b838:	lea    rdi,[r15+rax*1]
  41b83c:	add    rdi,0x1c
  41b840:	mov    rsi,rbx
  41b843:	mov    rdx,r14
  41b846:	add    rsp,0x8
  41b84a:	pop    rbx
  41b84b:	pop    r12
  41b84d:	pop    r13
  41b84f:	pop    r14
  41b851:	pop    r15
  41b853:	pop    rbp
  41b854:	jmp    403330 <memcpy@plt>
  41b859:	lea    rbp,[r15+0x1c]
  41b85d:	mov    eax,eax
  41b85f:	lea    rdi,[r15+rax*1]
  41b863:	add    rdi,0x1c
  41b867:	mov    rsi,rbx
  41b86a:	mov    rdx,r12
  41b86d:	call   403330 <memcpy@plt>
  41b872:	mov    rdi,r15
  41b875:	mov    rsi,rbp
  41b878:	call   41a470 <strcmp@plt+0x16cd8>
  41b87d:	add    rbx,r12
  41b880:	sub    r14,r12
  41b883:	cmp    r14,0x40
  41b887:	jb     41b82c <strcmp@plt+0x18094>
  41b889:	mov    rbp,r14
  41b88c:	nop    DWORD PTR [rax+0x0]
  41b890:	mov    rdi,r15
  41b893:	mov    rsi,rbx
  41b896:	call   41a470 <strcmp@plt+0x16cd8>
  41b89b:	add    rbx,0x40
  41b89f:	add    rbp,0xffffffffffffffc0
  41b8a3:	cmp    rbp,0x3f
  41b8a7:	ja     41b890 <strcmp@plt+0x180f8>
  41b8a9:	and    r14d,0x3f
  41b8ad:	test   r14,r14
  41b8b0:	jne    41b835 <strcmp@plt+0x1809d>
  41b8b6:	add    rsp,0x8
  41b8ba:	pop    rbx
  41b8bb:	pop    r12
  41b8bd:	pop    r13
  41b8bf:	pop    r14
  41b8c1:	pop    r15
  41b8c3:	pop    rbp
  41b8c4:	ret    
  41b8c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b8cf:	nop
  41b8d0:	push   rbp
  41b8d1:	push   r15
  41b8d3:	push   r14
  41b8d5:	push   r13
  41b8d7:	push   r12
  41b8d9:	push   rbx
  41b8da:	sub    rsp,0x18
  41b8de:	mov    r14,rsi
  41b8e1:	mov    r12,rdi
  41b8e4:	mov    ecx,DWORD PTR [rdi]
  41b8e6:	mov    eax,DWORD PTR [rdi+0x4]
  41b8e9:	mov    edx,eax
  41b8eb:	shld   edx,ecx,0x3
  41b8ef:	mov    esi,eax
  41b8f1:	shr    esi,0x15
  41b8f4:	mov    BYTE PTR [rsp+0x8],sil
  41b8f9:	mov    esi,eax
  41b8fb:	shr    esi,0xd
  41b8fe:	mov    BYTE PTR [rsp+0x9],sil
  41b903:	mov    esi,eax
  41b905:	shr    esi,0x5
  41b908:	mov    BYTE PTR [rsp+0xa],sil
  41b90d:	mov    BYTE PTR [rsp+0xb],dl
  41b911:	mov    edx,ecx
  41b913:	shr    edx,0x15
  41b916:	mov    BYTE PTR [rsp+0xc],dl
  41b91a:	mov    edx,ecx
  41b91c:	shr    edx,0xd
  41b91f:	mov    BYTE PTR [rsp+0xd],dl
  41b923:	mov    edx,ecx
  41b925:	shr    edx,0x5
  41b928:	mov    BYTE PTR [rsp+0xe],dl
  41b92c:	mov    edx,ecx
  41b92e:	shl    dl,0x3
  41b931:	mov    BYTE PTR [rsp+0xf],dl
  41b935:	mov    edx,ecx
  41b937:	and    edx,0x3f
  41b93a:	xor    r15d,r15d
  41b93d:	cmp    edx,0x37
  41b940:	seta   r15b
  41b944:	shl    r15d,0x6
  41b948:	sub    r15d,edx
  41b94b:	add    r15d,0x38
  41b94f:	je     41b9a9 <strcmp@plt+0x18211>
  41b951:	add    ecx,r15d
  41b954:	mov    DWORD PTR [r12],ecx
  41b958:	cmp    ecx,r15d
  41b95b:	jae    41b964 <strcmp@plt+0x181cc>
  41b95d:	inc    eax
  41b95f:	mov    DWORD PTR [r12+0x4],eax
  41b964:	xor    ebp,ebp
  41b966:	lea    rbx,[rip+0x2c923]        # 448290 <strcmp@plt+0x44af8>
  41b96d:	test   edx,edx
  41b96f:	je     41b985 <strcmp@plt+0x181ed>
  41b971:	mov    r13d,0x40
  41b977:	sub    r13,rdx
  41b97a:	cmp    r15d,r13d
  41b97d:	jae    41baeb <strcmp@plt+0x18353>
  41b983:	mov    ebp,edx
  41b985:	cmp    r15,0x40
  41b989:	jae    41bb2e <strcmp@plt+0x18396>
  41b98f:	test   r15,r15
  41b992:	je     41b9a9 <strcmp@plt+0x18211>
  41b994:	mov    eax,ebp
  41b996:	lea    rdi,[r12+rax*1]
  41b99a:	add    rdi,0x1c
  41b99e:	mov    rsi,rbx
  41b9a1:	mov    rdx,r15
  41b9a4:	call   403330 <memcpy@plt>
  41b9a9:	mov    ecx,DWORD PTR [r12]
  41b9ad:	mov    eax,ecx
  41b9af:	and    eax,0x3f
  41b9b2:	add    ecx,0x8
  41b9b5:	mov    DWORD PTR [r12],ecx
  41b9b9:	jae    41b9c0 <strcmp@plt+0x18228>
  41b9bb:	inc    DWORD PTR [r12+0x4]
  41b9c0:	lea    rsi,[rsp+0x8]
  41b9c5:	mov    edx,0x8
  41b9ca:	xor    ebp,ebp
  41b9cc:	test   eax,eax
  41b9ce:	je     41ba1a <strcmp@plt+0x18282>
  41b9d0:	cmp    eax,0x38
  41b9d3:	jae    41b9d9 <strcmp@plt+0x18241>
  41b9d5:	mov    ebp,eax
  41b9d7:	jmp    41ba1a <strcmp@plt+0x18282>
  41b9d9:	mov    ebx,0x40
  41b9de:	sub    rbx,rax
  41b9e1:	lea    r15,[r12+0x1c]
  41b9e6:	mov    eax,eax
  41b9e8:	lea    rdi,[r12+rax*1]
  41b9ec:	add    rdi,0x1c
  41b9f0:	lea    rsi,[rsp+0x8]
  41b9f5:	mov    rdx,rbx
  41b9f8:	call   403330 <memcpy@plt>
  41b9fd:	mov    rdi,r12
  41ba00:	mov    rsi,r15
  41ba03:	call   41a470 <strcmp@plt+0x16cd8>
  41ba08:	mov    edx,0x8
  41ba0d:	sub    rdx,rbx
  41ba10:	je     41ba29 <strcmp@plt+0x18291>
  41ba12:	lea    rsi,[rsp+rbx*1]
  41ba16:	add    rsi,0x8
  41ba1a:	mov    eax,ebp
  41ba1c:	lea    rdi,[r12+rax*1]
  41ba20:	add    rdi,0x1c
  41ba24:	call   403330 <memcpy@plt>
  41ba29:	mov    al,BYTE PTR [r12+0xb]
  41ba2e:	mov    BYTE PTR [r14],al
  41ba31:	mov    al,BYTE PTR [r12+0xa]
  41ba36:	mov    BYTE PTR [r14+0x1],al
  41ba3a:	mov    al,BYTE PTR [r12+0x9]
  41ba3f:	mov    BYTE PTR [r14+0x2],al
  41ba43:	mov    al,BYTE PTR [r12+0x8]
  41ba48:	mov    BYTE PTR [r14+0x3],al
  41ba4c:	mov    al,BYTE PTR [r12+0xf]
  41ba51:	mov    BYTE PTR [r14+0x4],al
  41ba55:	mov    al,BYTE PTR [r12+0xe]
  41ba5a:	mov    BYTE PTR [r14+0x5],al
  41ba5e:	mov    al,BYTE PTR [r12+0xd]
  41ba63:	mov    BYTE PTR [r14+0x6],al
  41ba67:	mov    al,BYTE PTR [r12+0xc]
  41ba6c:	mov    BYTE PTR [r14+0x7],al
  41ba70:	mov    al,BYTE PTR [r12+0x13]
  41ba75:	mov    BYTE PTR [r14+0x8],al
  41ba79:	mov    al,BYTE PTR [r12+0x12]
  41ba7e:	mov    BYTE PTR [r14+0x9],al
  41ba82:	mov    al,BYTE PTR [r12+0x11]
  41ba87:	mov    BYTE PTR [r14+0xa],al
  41ba8b:	mov    al,BYTE PTR [r12+0x10]
  41ba90:	mov    BYTE PTR [r14+0xb],al
  41ba94:	mov    al,BYTE PTR [r12+0x17]
  41ba99:	mov    BYTE PTR [r14+0xc],al
  41ba9d:	mov    al,BYTE PTR [r12+0x16]
  41baa2:	mov    BYTE PTR [r14+0xd],al
  41baa6:	mov    al,BYTE PTR [r12+0x15]
  41baab:	mov    BYTE PTR [r14+0xe],al
  41baaf:	mov    al,BYTE PTR [r12+0x14]
  41bab4:	mov    BYTE PTR [r14+0xf],al
  41bab8:	mov    al,BYTE PTR [r12+0x1b]
  41babd:	mov    BYTE PTR [r14+0x10],al
  41bac1:	mov    al,BYTE PTR [r12+0x1a]
  41bac6:	mov    BYTE PTR [r14+0x11],al
  41baca:	mov    al,BYTE PTR [r12+0x19]
  41bacf:	mov    BYTE PTR [r14+0x12],al
  41bad3:	mov    al,BYTE PTR [r12+0x18]
  41bad8:	mov    BYTE PTR [r14+0x13],al
  41badc:	add    rsp,0x18
  41bae0:	pop    rbx
  41bae1:	pop    r12
  41bae3:	pop    r13
  41bae5:	pop    r14
  41bae7:	pop    r15
  41bae9:	pop    rbp
  41baea:	ret    
  41baeb:	lea    rax,[r12+0x1c]
  41baf0:	mov    QWORD PTR [rsp+0x10],rax
  41baf5:	mov    eax,edx
  41baf7:	lea    rdi,[r12+rax*1]
  41bafb:	add    rdi,0x1c
  41baff:	lea    rbx,[rip+0x2c78a]        # 448290 <strcmp@plt+0x44af8>
  41bb06:	mov    rsi,rbx
  41bb09:	mov    rdx,r13
  41bb0c:	call   403330 <memcpy@plt>
  41bb11:	mov    rdi,r12
  41bb14:	mov    rsi,QWORD PTR [rsp+0x10]
  41bb19:	call   41a470 <strcmp@plt+0x16cd8>
  41bb1e:	add    rbx,r13
  41bb21:	sub    r15,r13
  41bb24:	cmp    r15,0x40
  41bb28:	jb     41b98f <strcmp@plt+0x181f7>
  41bb2e:	mov    r13d,ebp
  41bb31:	mov    rbp,r15
  41bb34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb3e:	xchg   ax,ax
  41bb40:	mov    rdi,r12
  41bb43:	mov    rsi,rbx
  41bb46:	call   41a470 <strcmp@plt+0x16cd8>
  41bb4b:	add    rbx,0x40
  41bb4f:	add    rbp,0xffffffffffffffc0
  41bb53:	cmp    rbp,0x3f
  41bb57:	ja     41bb40 <strcmp@plt+0x183a8>
  41bb59:	and    r15d,0x3f
  41bb5d:	mov    ebp,r13d
  41bb60:	test   r15,r15
  41bb63:	jne    41b994 <strcmp@plt+0x181fc>
  41bb69:	jmp    41b9a9 <strcmp@plt+0x18211>
  41bb6e:	xchg   ax,ax
  41bb70:	push   rbp
  41bb71:	mov    rbp,rsp
  41bb74:	push   r15
  41bb76:	push   r14
  41bb78:	push   r13
  41bb7a:	push   r12
  41bb7c:	push   rbx
  41bb7d:	and    rsp,0xffffffffffffffe0
  41bb81:	sub    rsp,0x80
  41bb88:	vxorps xmm0,xmm0,xmm0
  41bb8c:	vmovaps YMMWORD PTR [rsp],ymm0
  41bb91:	vmovups YMMWORD PTR [rsp+0x3c],ymm0
  41bb97:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  41bb9d:	mov    r14,rdx
  41bba0:	vmovaps xmm0,XMMWORD PTR [rip+0x2c6d8]        # 448280 <strcmp@plt+0x44ae8>
  41bba8:	vmovups XMMWORD PTR [rsp+0x8],xmm0
  41bbae:	mov    DWORD PTR [rsp+0x18],0xc3d2e1f0
  41bbb6:	test   rsi,rsi
  41bbb9:	je     41bc15 <strcmp@plt+0x1847d>
  41bbbb:	mov    r15,rsi
  41bbbe:	mov    r13,rdi
  41bbc1:	mov    DWORD PTR [rsp],r15d
  41bbc5:	cmp    rsi,0x40
  41bbc9:	jb     41bc02 <strcmp@plt+0x1846a>
  41bbcb:	mov    r12,rsp
  41bbce:	mov    rbx,r15
  41bbd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bbdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bbe0:	mov    rdi,r12
  41bbe3:	mov    rsi,r13
  41bbe6:	vzeroupper 
  41bbe9:	call   41a470 <strcmp@plt+0x16cd8>
  41bbee:	add    r13,0x40
  41bbf2:	add    rbx,0xffffffffffffffc0
  41bbf6:	cmp    rbx,0x3f
  41bbfa:	ja     41bbe0 <strcmp@plt+0x18448>
  41bbfc:	and    r15,0x3f
  41bc00:	je     41bc15 <strcmp@plt+0x1847d>
  41bc02:	lea    rdi,[rsp+0x1c]
  41bc07:	mov    rsi,r13
  41bc0a:	mov    rdx,r15
  41bc0d:	vzeroupper 
  41bc10:	call   403330 <memcpy@plt>
  41bc15:	mov    rdi,rsp
  41bc18:	mov    rsi,r14
  41bc1b:	vzeroupper 
  41bc1e:	call   41b8d0 <strcmp@plt+0x18138>
  41bc23:	xor    eax,eax
  41bc25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bc2f:	nop
  41bc30:	mov    BYTE PTR [rsp+rax*1],0x0
  41bc34:	mov    BYTE PTR [rsp+rax*1+0x1],0x0
  41bc39:	mov    BYTE PTR [rsp+rax*1+0x2],0x0
  41bc3e:	mov    BYTE PTR [rsp+rax*1+0x3],0x0
  41bc43:	mov    BYTE PTR [rsp+rax*1+0x4],0x0
  41bc48:	mov    BYTE PTR [rsp+rax*1+0x5],0x0
  41bc4d:	mov    BYTE PTR [rsp+rax*1+0x6],0x0
  41bc52:	mov    BYTE PTR [rsp+rax*1+0x7],0x0
  41bc57:	mov    BYTE PTR [rsp+rax*1+0x8],0x0
  41bc5c:	mov    BYTE PTR [rsp+rax*1+0x9],0x0
  41bc61:	mov    BYTE PTR [rsp+rax*1+0xa],0x0
  41bc66:	mov    BYTE PTR [rsp+rax*1+0xb],0x0
  41bc6b:	mov    BYTE PTR [rsp+rax*1+0xc],0x0
  41bc70:	mov    BYTE PTR [rsp+rax*1+0xd],0x0
  41bc75:	mov    BYTE PTR [rsp+rax*1+0xe],0x0
  41bc7a:	mov    BYTE PTR [rsp+rax*1+0xf],0x0
  41bc7f:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  41bc84:	mov    BYTE PTR [rsp+rax*1+0x11],0x0
  41bc89:	mov    BYTE PTR [rsp+rax*1+0x12],0x0
  41bc8e:	mov    BYTE PTR [rsp+rax*1+0x13],0x0
  41bc93:	mov    BYTE PTR [rsp+rax*1+0x14],0x0
  41bc98:	mov    BYTE PTR [rsp+rax*1+0x15],0x0
  41bc9d:	mov    BYTE PTR [rsp+rax*1+0x16],0x0
  41bca2:	add    rax,0x17
  41bca6:	cmp    rax,0x5c
  41bcaa:	jne    41bc30 <strcmp@plt+0x18498>
  41bcac:	lea    rsp,[rbp-0x28]
  41bcb0:	pop    rbx
  41bcb1:	pop    r12
  41bcb3:	pop    r13
  41bcb5:	pop    r14
  41bcb7:	pop    r15
  41bcb9:	pop    rbp
  41bcba:	ret    
  41bcbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bcc0:	vxorps xmm0,xmm0,xmm0
  41bcc4:	vmovups YMMWORD PTR [rdi+0x4c],ymm0
  41bcc9:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  41bcce:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  41bcd3:	vmovups YMMWORD PTR [rdi],ymm0
  41bcd7:	vzeroupper 
  41bcda:	ret    
  41bcdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bce0:	test   rdi,rdi
  41bce3:	je     41bd53 <strcmp@plt+0x185bb>
  41bce5:	xor    eax,eax
  41bce7:	nop    WORD PTR [rax+rax*1+0x0]
  41bcf0:	mov    BYTE PTR [rdi+rax*1],0x0
  41bcf4:	mov    BYTE PTR [rdi+rax*1+0x1],0x0
  41bcf9:	mov    BYTE PTR [rdi+rax*1+0x2],0x0
  41bcfe:	mov    BYTE PTR [rdi+rax*1+0x3],0x0
  41bd03:	mov    BYTE PTR [rdi+rax*1+0x4],0x0
  41bd08:	mov    BYTE PTR [rdi+rax*1+0x5],0x0
  41bd0d:	mov    BYTE PTR [rdi+rax*1+0x6],0x0
  41bd12:	mov    BYTE PTR [rdi+rax*1+0x7],0x0
  41bd17:	mov    BYTE PTR [rdi+rax*1+0x8],0x0
  41bd1c:	mov    BYTE PTR [rdi+rax*1+0x9],0x0
  41bd21:	mov    BYTE PTR [rdi+rax*1+0xa],0x0
  41bd26:	mov    BYTE PTR [rdi+rax*1+0xb],0x0
  41bd2b:	mov    BYTE PTR [rdi+rax*1+0xc],0x0
  41bd30:	mov    BYTE PTR [rdi+rax*1+0xd],0x0
  41bd35:	mov    BYTE PTR [rdi+rax*1+0xe],0x0
  41bd3a:	mov    BYTE PTR [rdi+rax*1+0xf],0x0
  41bd3f:	mov    BYTE PTR [rdi+rax*1+0x10],0x0
  41bd44:	mov    BYTE PTR [rdi+rax*1+0x11],0x0
  41bd49:	add    rax,0x12
  41bd4d:	cmp    rax,0x6c
  41bd51:	jne    41bcf0 <strcmp@plt+0x18558>
  41bd53:	ret    
  41bd54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bd5e:	xchg   ax,ax
  41bd60:	vmovups ymm0,YMMWORD PTR [rsi]
  41bd64:	vmovups ymm1,YMMWORD PTR [rsi+0x20]
  41bd69:	vmovups ymm2,YMMWORD PTR [rsi+0x40]
  41bd6e:	vmovups ymm3,YMMWORD PTR [rsi+0x4c]
  41bd73:	vmovups YMMWORD PTR [rdi+0x4c],ymm3
  41bd78:	vmovups YMMWORD PTR [rdi+0x40],ymm2
  41bd7d:	vmovups YMMWORD PTR [rdi+0x20],ymm1
  41bd82:	vmovups YMMWORD PTR [rdi],ymm0
  41bd86:	vzeroupper 
  41bd89:	ret    
  41bd8a:	nop    WORD PTR [rax+rax*1+0x0]
  41bd90:	mov    QWORD PTR [rdi],0x0
  41bd97:	test   esi,esi
  41bd99:	sete   al
  41bd9c:	vmovd  xmm0,eax
  41bda0:	vpbroadcastb xmm0,xmm0
  41bda5:	vpmovzxwd ymm0,xmm0
  41bdaa:	vpslld ymm0,ymm0,0x1f
  41bdaf:	vmovaps ymm1,YMMWORD PTR [rip+0x2c549]        # 448300 <strcmp@plt+0x44b68>
  41bdb7:	vblendvps ymm0,ymm1,YMMWORD PTR [rip+0x2c51f],ymm0        # 4482e0 <strcmp@plt+0x44b48>
  41bdc1:	vmovups YMMWORD PTR [rdi+0x8],ymm0
  41bdc6:	mov    DWORD PTR [rdi+0x68],esi
  41bdc9:	vzeroupper 
  41bdcc:	ret    
  41bdcd:	nop    DWORD PTR [rax]
  41bdd0:	push   rbp
  41bdd1:	push   r15
  41bdd3:	push   r14
  41bdd5:	push   r13
  41bdd7:	push   r12
  41bdd9:	push   rbx
  41bdda:	sub    rsp,0xd8
  41bde1:	vmovups ymm0,YMMWORD PTR [rdi+0x8]
  41bde6:	add    rdi,0x8
  41bdea:	mov    QWORD PTR [rsp-0x38],rdi
  41bdef:	vmovups YMMWORD PTR [rsp-0x60],ymm0
  41bdf5:	vmovdqu xmm0,XMMWORD PTR [rsi]
  41bdf9:	vmovdqa xmm1,XMMWORD PTR [rip+0x2c51f]        # 448320 <strcmp@plt+0x44b88>
  41be01:	vpshufb xmm0,xmm0,xmm1
  41be06:	vmovdqa XMMWORD PTR [rsp-0x30],xmm0
  41be0c:	vmovdqu xmm0,XMMWORD PTR [rsi+0x10]
  41be11:	vpshufb xmm0,xmm0,xmm1
  41be16:	vmovdqa XMMWORD PTR [rsp-0x20],xmm0
  41be1c:	vmovdqu xmm0,XMMWORD PTR [rsi+0x20]
  41be21:	vpshufb xmm0,xmm0,xmm1
  41be26:	vmovdqa XMMWORD PTR [rsp-0x10],xmm0
  41be2c:	vmovdqu xmm0,XMMWORD PTR [rsi+0x30]
  41be31:	vpshufb xmm0,xmm0,xmm1
  41be36:	vmovdqa XMMWORD PTR [rsp],xmm0
  41be3b:	mov    r11d,DWORD PTR [rsp-0x44]
  41be40:	mov    r13d,DWORD PTR [rsp-0x50]
  41be45:	mov    ebx,DWORD PTR [rsp-0x48]
  41be49:	mov    r10d,DWORD PTR [rsp-0x4c]
  41be4e:	mov    esi,DWORD PTR [rsp-0x60]
  41be52:	mov    r12d,DWORD PTR [rsp-0x5c]
  41be57:	mov    edx,DWORD PTR [rsp-0x58]
  41be5b:	xor    ecx,ecx
  41be5d:	mov    r9d,DWORD PTR [rsp-0x54]
  41be62:	lea    r15,[rip+0x2c517]        # 448380 <strcmp@plt+0x44be8>
  41be69:	nop    DWORD PTR [rax+0x0]
  41be70:	rorx   edi,r13d,0x6
  41be76:	rorx   ebp,r13d,0xb
  41be7c:	xor    ebp,edi
  41be7e:	rorx   edi,r13d,0x19
  41be84:	xor    edi,ebp
  41be86:	mov    DWORD PTR [rsp-0x74],ebx
  41be8a:	andn   r8d,r13d,ebx
  41be8f:	mov    ebp,r10d
  41be92:	and    ebp,r13d
  41be95:	add    r11d,DWORD PTR [r15+rcx*4]
  41be99:	add    r11d,edi
  41be9c:	add    r11d,DWORD PTR [rsp+rcx*4-0x30]
  41bea1:	or     ebp,r8d
  41bea4:	add    r11d,ebp
  41bea7:	rorx   edi,esi,0x2
  41bead:	rorx   ebp,esi,0xd
  41beb3:	xor    ebp,edi
  41beb5:	rorx   r8d,esi,0x16
  41bebb:	xor    r8d,ebp
  41bebe:	mov    edi,r12d
  41bec1:	and    edi,esi
  41bec3:	mov    r14d,r12d
  41bec6:	or     r14d,esi
  41bec9:	and    r14d,edx
  41becc:	or     r14d,edi
  41becf:	add    r9d,r11d
  41bed2:	add    r14d,r11d
  41bed5:	add    r14d,r8d
  41bed8:	rorx   edi,r9d,0x6
  41bede:	mov    rax,r15
  41bee1:	rorx   r15d,r9d,0xb
  41bee7:	xor    r15d,edi
  41beea:	andn   r8d,r9d,r10d
  41beef:	mov    edi,r13d
  41bef2:	and    edi,r9d
  41bef5:	or     edi,r8d
  41bef8:	rorx   ebx,r9d,0x19
  41befe:	add    edi,DWORD PTR [rsp-0x74]
  41bf02:	add    edi,DWORD PTR [rax+rcx*4+0x4]
  41bf06:	xor    ebx,r15d
  41bf09:	mov    r15,rax
  41bf0c:	add    edi,DWORD PTR [rsp+rcx*4-0x2c]
  41bf10:	add    edi,ebx
  41bf12:	rorx   r8d,r14d,0x2
  41bf18:	rorx   ebx,r14d,0xd
  41bf1e:	xor    ebx,r8d
  41bf21:	rorx   ebp,r14d,0x16
  41bf27:	xor    ebp,ebx
  41bf29:	mov    eax,r14d
  41bf2c:	and    eax,esi
  41bf2e:	mov    ebx,r14d
  41bf31:	or     ebx,esi
  41bf33:	and    ebx,r12d
  41bf36:	or     ebx,eax
  41bf38:	add    ebx,ebp
  41bf3a:	add    edx,edi
  41bf3c:	add    ebx,edi
  41bf3e:	rorx   edi,edx,0x6
  41bf44:	rorx   ebp,edx,0xb
  41bf4a:	xor    ebp,edi
  41bf4c:	rorx   edi,edx,0x19
  41bf52:	xor    edi,ebp
  41bf54:	andn   ebp,edx,r13d
  41bf59:	mov    eax,r9d
  41bf5c:	and    eax,edx
  41bf5e:	or     eax,ebp
  41bf60:	add    r10d,DWORD PTR [r15+rcx*4+0x8]
  41bf65:	add    r10d,DWORD PTR [rsp+rcx*4-0x28]
  41bf6a:	add    r10d,eax
  41bf6d:	add    r10d,edi
  41bf70:	rorx   eax,ebx,0x2
  41bf76:	rorx   edi,ebx,0xd
  41bf7c:	xor    edi,eax
  41bf7e:	rorx   eax,ebx,0x16
  41bf84:	xor    eax,edi
  41bf86:	mov    edi,ebx
  41bf88:	and    edi,r14d
  41bf8b:	mov    ebp,ebx
  41bf8d:	or     ebp,r14d
  41bf90:	and    ebp,esi
  41bf92:	or     ebp,edi
  41bf94:	add    ebp,eax
  41bf96:	add    r12d,r10d
  41bf99:	add    r10d,ebp
  41bf9c:	rorx   eax,r12d,0x6
  41bfa2:	rorx   edi,r12d,0xb
  41bfa8:	xor    edi,eax
  41bfaa:	rorx   eax,r12d,0x19
  41bfb0:	xor    eax,edi
  41bfb2:	andn   edi,r12d,r9d
  41bfb7:	mov    rbp,rcx
  41bfba:	mov    ecx,edx
  41bfbc:	and    ecx,r12d
  41bfbf:	or     ecx,edi
  41bfc1:	add    r13d,DWORD PTR [r15+rbp*4+0xc]
  41bfc6:	add    r13d,DWORD PTR [rsp+rbp*4-0x24]
  41bfcb:	add    r13d,ecx
  41bfce:	add    r13d,eax
  41bfd1:	rorx   eax,r10d,0x2
  41bfd7:	rorx   ecx,r10d,0xd
  41bfdd:	xor    ecx,eax
  41bfdf:	rorx   eax,r10d,0x16
  41bfe5:	xor    eax,ecx
  41bfe7:	mov    ecx,r10d
  41bfea:	and    ecx,ebx
  41bfec:	mov    edi,r10d
  41bfef:	or     edi,ebx
  41bff1:	and    edi,r14d
  41bff4:	or     edi,ecx
  41bff6:	add    edi,eax
  41bff8:	add    esi,r13d
  41bffb:	add    r13d,edi
  41bffe:	rorx   eax,esi,0x6
  41c004:	rorx   ecx,esi,0xb
  41c00a:	xor    ecx,eax
  41c00c:	rorx   eax,esi,0x19
  41c012:	xor    eax,ecx
  41c014:	andn   ecx,esi,edx
  41c019:	mov    edi,r12d
  41c01c:	and    edi,esi
  41c01e:	or     edi,ecx
  41c020:	add    r9d,DWORD PTR [r15+rbp*4+0x10]
  41c025:	add    r9d,DWORD PTR [rsp+rbp*4-0x20]
  41c02a:	add    r9d,edi
  41c02d:	mov    ecx,r9d
  41c030:	add    ecx,eax
  41c032:	rorx   eax,r13d,0x2
  41c038:	rorx   edi,r13d,0xd
  41c03e:	xor    edi,eax
  41c040:	rorx   eax,r13d,0x16
  41c046:	xor    eax,edi
  41c048:	mov    edi,r13d
  41c04b:	and    edi,r10d
  41c04e:	mov    r9d,r13d
  41c051:	or     r9d,r10d
  41c054:	and    r9d,ebx
  41c057:	or     r9d,edi
  41c05a:	add    r9d,eax
  41c05d:	mov    r11d,r14d
  41c060:	add    r11d,ecx
  41c063:	add    r9d,ecx
  41c066:	rorx   eax,r11d,0x6
  41c06c:	rorx   ecx,r11d,0xb
  41c072:	xor    ecx,eax
  41c074:	rorx   eax,r11d,0x19
  41c07a:	xor    eax,ecx
  41c07c:	andn   ecx,r11d,r12d
  41c081:	mov    edi,esi
  41c083:	and    edi,r11d
  41c086:	or     edi,ecx
  41c088:	add    edx,DWORD PTR [r15+rbp*4+0x14]
  41c08d:	add    edx,DWORD PTR [rsp+rbp*4-0x1c]
  41c091:	add    edx,edi
  41c093:	mov    ecx,edx
  41c095:	add    ecx,eax
  41c097:	rorx   eax,r9d,0x2
  41c09d:	rorx   edx,r9d,0xd
  41c0a3:	xor    edx,eax
  41c0a5:	rorx   eax,r9d,0x16
  41c0ab:	xor    eax,edx
  41c0ad:	mov    edi,r9d
  41c0b0:	and    edi,r13d
  41c0b3:	mov    edx,r9d
  41c0b6:	or     edx,r13d
  41c0b9:	and    edx,r10d
  41c0bc:	or     edx,edi
  41c0be:	add    edx,eax
  41c0c0:	add    ebx,ecx
  41c0c2:	add    edx,ecx
  41c0c4:	rorx   eax,ebx,0x6
  41c0ca:	rorx   ecx,ebx,0xb
  41c0d0:	xor    ecx,eax
  41c0d2:	rorx   eax,ebx,0x19
  41c0d8:	xor    eax,ecx
  41c0da:	andn   ecx,ebx,esi
  41c0df:	mov    edi,r11d
  41c0e2:	and    edi,ebx
  41c0e4:	or     edi,ecx
  41c0e6:	add    r12d,DWORD PTR [r15+rbp*4+0x18]
  41c0eb:	add    r12d,DWORD PTR [rsp+rbp*4-0x18]
  41c0f0:	add    r12d,edi
  41c0f3:	mov    ecx,r12d
  41c0f6:	add    ecx,eax
  41c0f8:	rorx   eax,edx,0x2
  41c0fe:	rorx   edi,edx,0xd
  41c104:	xor    edi,eax
  41c106:	rorx   eax,edx,0x16
  41c10c:	xor    eax,edi
  41c10e:	mov    edi,edx
  41c110:	and    edi,r9d
  41c113:	mov    r12d,edx
  41c116:	or     r12d,r9d
  41c119:	and    r12d,r13d
  41c11c:	or     r12d,edi
  41c11f:	add    r12d,eax
  41c122:	add    r10d,ecx
  41c125:	add    r12d,ecx
  41c128:	rorx   eax,r10d,0x6
  41c12e:	rorx   ecx,r10d,0xb
  41c134:	xor    ecx,eax
  41c136:	rorx   eax,r10d,0x19
  41c13c:	xor    eax,ecx
  41c13e:	andn   ecx,r10d,r11d
  41c143:	mov    edi,ebx
  41c145:	and    edi,r10d
  41c148:	or     edi,ecx
  41c14a:	add    esi,DWORD PTR [r15+rbp*4+0x1c]
  41c14f:	add    esi,DWORD PTR [rsp+rbp*4-0x14]
  41c153:	add    esi,edi
  41c155:	mov    ecx,esi
  41c157:	add    ecx,eax
  41c159:	rorx   eax,r12d,0x2
  41c15f:	rorx   esi,r12d,0xd
  41c165:	xor    esi,eax
  41c167:	rorx   eax,r12d,0x16
  41c16d:	xor    eax,esi
  41c16f:	mov    edi,r12d
  41c172:	and    edi,edx
  41c174:	mov    esi,r12d
  41c177:	or     esi,edx
  41c179:	and    esi,r9d
  41c17c:	or     esi,edi
  41c17e:	add    esi,eax
  41c180:	add    r13d,ecx
  41c183:	add    esi,ecx
  41c185:	mov    rcx,rbp
  41c188:	add    rcx,0x8
  41c18c:	cmp    rcx,0x10
  41c190:	jb     41be70 <strcmp@plt+0x186d8>
  41c196:	mov    DWORD PTR [rsp-0x44],r11d
  41c19b:	mov    DWORD PTR [rsp-0x50],r13d
  41c1a0:	mov    DWORD PTR [rsp-0x74],ebx
  41c1a4:	mov    DWORD PTR [rsp-0x48],ebx
  41c1a8:	mov    DWORD PTR [rsp-0x4c],r10d
  41c1ad:	mov    DWORD PTR [rsp-0x60],esi
  41c1b1:	mov    DWORD PTR [rsp-0x5c],r12d
  41c1b6:	mov    DWORD PTR [rsp-0x58],edx
  41c1ba:	mov    DWORD PTR [rsp-0x54],r9d
  41c1bf:	mov    r14d,0x10
  41c1c5:	vpxor  xmm8,xmm8,xmm8
  41c1ca:	vmovdqa xmm9,XMMWORD PTR [rip+0x2c15e]        # 448330 <strcmp@plt+0x44b98>
  41c1d2:	vmovdqa xmm10,XMMWORD PTR [rip+0x2c166]        # 448340 <strcmp@plt+0x44ba8>
  41c1da:	vmovdqa xmm3,XMMWORD PTR [rip+0x2c16e]        # 448350 <strcmp@plt+0x44bb8>
  41c1e2:	vmovdqa xmm4,XMMWORD PTR [rip+0x2c176]        # 448360 <strcmp@plt+0x44bc8>
  41c1ea:	vmovdqa xmm5,XMMWORD PTR [rip+0x2c17e]        # 448370 <strcmp@plt+0x44bd8>
  41c1f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c1fc:	nop    DWORD PTR [rax+0x0]
  41c200:	rorx   eax,r13d,0x6
  41c206:	rorx   ecx,r13d,0xb
  41c20c:	xor    ecx,eax
  41c20e:	rorx   ebp,r13d,0x19
  41c214:	mov    ebx,DWORD PTR [rsp-0x74]
  41c218:	andn   eax,r13d,ebx
  41c21d:	mov    edi,r10d
  41c220:	xor    ebp,ecx
  41c222:	and    edi,r13d
  41c225:	or     edi,eax
  41c227:	mov    eax,DWORD PTR [rsp+r14*4-0x6c]
  41c22c:	mov    DWORD PTR [rsp-0x70],eax
  41c230:	vmovd  xmm6,DWORD PTR [rsp+r14*4-0x38]
  41c237:	vpinsrd xmm6,xmm6,eax,0x2
  41c23d:	mov    eax,DWORD PTR [rsp+r14*4-0x70]
  41c242:	vpblendd xmm7,xmm6,xmm8,0xa
  41c248:	vpsrlvq xmm0,xmm7,xmm9
  41c24d:	vpsllvq xmm1,xmm6,xmm10
  41c252:	vpsrlvq xmm2,xmm7,xmm3
  41c257:	vpor   xmm0,xmm0,xmm1
  41c25b:	vpsllvq xmm1,xmm6,xmm4
  41c260:	vpor   xmm1,xmm2,xmm1
  41c264:	vpsrlvq xmm2,xmm7,xmm5
  41c269:	add    eax,DWORD PTR [rsp+r14*4-0x4c]
  41c26e:	vpxor  xmm1,xmm1,xmm2
  41c272:	vpxor  xmm0,xmm1,xmm0
  41c276:	vmovd  ecx,xmm0
  41c27a:	add    ecx,eax
  41c27c:	vpextrd r15d,xmm0,0x2
  41c282:	add    r15d,ecx
  41c285:	mov    DWORD PTR [rsp+r14*4-0x30],r15d
  41c28a:	lea    rax,[rip+0x2c0ef]        # 448380 <strcmp@plt+0x44be8>
  41c291:	add    r11d,DWORD PTR [rax+r14*4]
  41c295:	add    r11d,ebp
  41c298:	rorx   eax,esi,0x2
  41c29e:	add    r11d,edi
  41c2a1:	rorx   ecx,esi,0xd
  41c2a7:	xor    ecx,eax
  41c2a9:	rorx   eax,esi,0x16
  41c2af:	xor    eax,ecx
  41c2b1:	mov    ecx,r12d
  41c2b4:	and    ecx,esi
  41c2b6:	mov    edi,r12d
  41c2b9:	add    r11d,r15d
  41c2bc:	or     edi,esi
  41c2be:	and    edi,edx
  41c2c0:	or     edi,ecx
  41c2c2:	add    edi,eax
  41c2c4:	add    r9d,r11d
  41c2c7:	add    r11d,edi
  41c2ca:	rorx   eax,r9d,0x6
  41c2d0:	rorx   ecx,r9d,0xb
  41c2d6:	xor    ecx,eax
  41c2d8:	rorx   r8d,r9d,0x19
  41c2de:	andn   eax,r9d,r10d
  41c2e3:	mov    ebp,r13d
  41c2e6:	xor    r8d,ecx
  41c2e9:	and    ebp,r9d
  41c2ec:	or     ebp,eax
  41c2ee:	mov    eax,DWORD PTR [rsp+r14*4-0x68]
  41c2f3:	mov    DWORD PTR [rsp-0x68],eax
  41c2f7:	vmovd  xmm0,DWORD PTR [rsp+r14*4-0x34]
  41c2fe:	vpinsrd xmm0,xmm0,eax,0x2
  41c304:	vpblendd xmm1,xmm0,xmm8,0xa
  41c30a:	vpsrlvq xmm2,xmm1,xmm9
  41c30f:	vpsllvq xmm6,xmm0,xmm10
  41c314:	vpsrlvq xmm7,xmm1,xmm3
  41c319:	vpsllvq xmm0,xmm0,xmm4
  41c31e:	vpor   xmm2,xmm2,xmm6
  41c322:	vpor   xmm0,xmm7,xmm0
  41c326:	vpsrlvq xmm1,xmm1,xmm5
  41c32b:	vpxor  xmm0,xmm0,xmm1
  41c32f:	mov    eax,DWORD PTR [rsp-0x70]
  41c333:	add    eax,DWORD PTR [rsp+r14*4-0x48]
  41c338:	vpxor  xmm0,xmm0,xmm2
  41c33c:	vmovd  ecx,xmm0
  41c340:	add    ecx,eax
  41c342:	vpextrd eax,xmm0,0x2
  41c348:	lea    rdi,[rip+0x2c031]        # 448380 <strcmp@plt+0x44be8>
  41c34f:	add    ebx,DWORD PTR [rdi+r14*4+0x4]
  41c354:	add    eax,ecx
  41c356:	mov    DWORD PTR [rsp-0x70],eax
  41c35a:	add    ebx,ebp
  41c35c:	add    ebx,r8d
  41c35f:	rorx   ecx,r11d,0x2
  41c365:	rorx   edi,r11d,0xd
  41c36b:	mov    DWORD PTR [rsp+r14*4-0x2c],eax
  41c370:	xor    edi,ecx
  41c372:	rorx   ecx,r11d,0x16
  41c378:	xor    ecx,edi
  41c37a:	mov    edi,r11d
  41c37d:	and    edi,esi
  41c37f:	mov    ebp,r11d
  41c382:	or     ebp,esi
  41c384:	add    ebx,eax
  41c386:	and    ebp,r12d
  41c389:	or     ebp,edi
  41c38b:	add    ebp,ecx
  41c38d:	add    edx,ebx
  41c38f:	add    ebx,ebp
  41c391:	rorx   ecx,edx,0x6
  41c397:	rorx   edi,edx,0xb
  41c39d:	xor    edi,ecx
  41c39f:	rorx   eax,edx,0x19
  41c3a5:	mov    DWORD PTR [rsp-0x6c],eax
  41c3a9:	andn   ecx,edx,r13d
  41c3ae:	mov    eax,r9d
  41c3b1:	and    eax,edx
  41c3b3:	or     eax,ecx
  41c3b5:	rorx   r8d,r15d,0x11
  41c3bb:	rorx   ecx,r15d,0x13
  41c3c1:	mov    DWORD PTR [rsp-0x64],r15d
  41c3c6:	shr    r15d,0xa
  41c3ca:	xor    r15d,ecx
  41c3cd:	xor    r15d,r8d
  41c3d0:	mov    r8d,DWORD PTR [rsp-0x6c]
  41c3d5:	xor    r8d,edi
  41c3d8:	add    r15d,DWORD PTR [rsp+r14*4-0x44]
  41c3dd:	mov    ebp,DWORD PTR [rsp+r14*4-0x64]
  41c3e2:	mov    DWORD PTR [rsp-0x6c],ebp
  41c3e6:	rorx   edi,ebp,0x12
  41c3ec:	mov    ecx,ebp
  41c3ee:	shr    ecx,0x3
  41c3f1:	xor    ecx,edi
  41c3f3:	rorx   edi,ebp,0x7
  41c3f9:	xor    ecx,edi
  41c3fb:	add    r15d,DWORD PTR [rsp-0x68]
  41c400:	add    r15d,ecx
  41c403:	mov    rbp,r14
  41c406:	lea    rcx,[rip+0x2bf73]        # 448380 <strcmp@plt+0x44be8>
  41c40d:	add    r10d,DWORD PTR [rcx+r14*4+0x8]
  41c412:	mov    DWORD PTR [rsp+r14*4-0x28],r15d
  41c417:	add    r10d,eax
  41c41a:	mov    edi,ebx
  41c41c:	mov    DWORD PTR [rsp-0x74],ebx
  41c420:	rorx   eax,ebx,0x2
  41c426:	rorx   ecx,ebx,0xd
  41c42c:	xor    ecx,eax
  41c42e:	add    r10d,r8d
  41c431:	rorx   eax,ebx,0x16
  41c437:	xor    eax,ecx
  41c439:	mov    ecx,ebx
  41c43b:	and    ecx,r11d
  41c43e:	or     edi,r11d
  41c441:	and    edi,esi
  41c443:	add    r10d,r15d
  41c446:	or     edi,ecx
  41c448:	add    edi,eax
  41c44a:	add    r12d,r10d
  41c44d:	add    r10d,edi
  41c450:	rorx   eax,r12d,0x6
  41c456:	rorx   ecx,r12d,0xb
  41c45c:	xor    ecx,eax
  41c45e:	rorx   ebx,r12d,0x19
  41c464:	andn   r14d,r12d,r9d
  41c469:	mov    eax,edx
  41c46b:	and    eax,r12d
  41c46e:	mov    edi,DWORD PTR [rsp+rbp*4-0x60]
  41c472:	mov    DWORD PTR [rsp-0x68],edi
  41c476:	or     eax,r14d
  41c479:	vmovd  xmm0,DWORD PTR [rsp-0x70]
  41c47f:	vpinsrd xmm0,xmm0,edi,0x2
  41c485:	vpblendd xmm1,xmm0,xmm8,0xa
  41c48b:	vpsllvq xmm2,xmm0,xmm10
  41c490:	vpsrlvq xmm6,xmm1,xmm9
  41c495:	vpor   xmm2,xmm6,xmm2
  41c499:	vpsrlvq xmm6,xmm1,xmm3
  41c49e:	vpsllvq xmm0,xmm0,xmm4
  41c4a3:	vpor   xmm0,xmm6,xmm0
  41c4a7:	vpsrlvq xmm1,xmm1,xmm5
  41c4ac:	vpxor  xmm0,xmm0,xmm1
  41c4b0:	vpxor  xmm0,xmm0,xmm2
  41c4b4:	mov    edi,DWORD PTR [rsp-0x6c]
  41c4b8:	add    edi,DWORD PTR [rsp+rbp*4-0x40]
  41c4bc:	vmovd  r8d,xmm0
  41c4c1:	mov    r14d,r13d
  41c4c4:	vpextrd r13d,xmm0,0x2
  41c4ca:	add    r8d,edi
  41c4cd:	add    r13d,r8d
  41c4d0:	mov    DWORD PTR [rsp+rbp*4-0x24],r13d
  41c4d5:	mov    r8d,r13d
  41c4d8:	mov    DWORD PTR [rsp-0x70],r13d
  41c4dd:	mov    r13d,r14d
  41c4e0:	lea    rdi,[rip+0x2be99]        # 448380 <strcmp@plt+0x44be8>
  41c4e7:	add    r13d,DWORD PTR [rdi+rbp*4+0xc]
  41c4ec:	xor    ebx,ecx
  41c4ee:	add    r13d,eax
  41c4f1:	rorx   eax,r10d,0x2
  41c4f7:	rorx   ecx,r10d,0xd
  41c4fd:	xor    ecx,eax
  41c4ff:	rorx   eax,r10d,0x16
  41c505:	add    r13d,ebx
  41c508:	xor    eax,ecx
  41c50a:	mov    ecx,r10d
  41c50d:	mov    ebx,DWORD PTR [rsp-0x74]
  41c511:	and    ecx,ebx
  41c513:	mov    edi,r10d
  41c516:	or     edi,ebx
  41c518:	and    edi,r11d
  41c51b:	or     edi,ecx
  41c51d:	add    r13d,r8d
  41c520:	add    edi,eax
  41c522:	add    esi,r13d
  41c525:	add    r13d,edi
  41c528:	rorx   eax,esi,0x6
  41c52e:	rorx   ecx,esi,0xb
  41c534:	xor    ecx,eax
  41c536:	rorx   r8d,esi,0x19
  41c53c:	andn   eax,esi,edx
  41c541:	mov    edi,r12d
  41c544:	and    edi,esi
  41c546:	or     edi,eax
  41c548:	mov    eax,DWORD PTR [rsp+rbp*4-0x5c]
  41c54c:	mov    DWORD PTR [rsp-0x6c],eax
  41c550:	xor    r8d,ecx
  41c553:	vmovd  xmm0,r15d
  41c558:	vpinsrd xmm0,xmm0,eax,0x2
  41c55e:	vpblendd xmm1,xmm0,xmm8,0xa
  41c564:	vpsllvq xmm2,xmm0,xmm10
  41c569:	vpsrlvq xmm6,xmm1,xmm9
  41c56e:	vpor   xmm2,xmm6,xmm2
  41c572:	vpsrlvq xmm6,xmm1,xmm3
  41c577:	vpsllvq xmm0,xmm0,xmm4
  41c57c:	vpor   xmm0,xmm6,xmm0
  41c580:	vpsrlvq xmm1,xmm1,xmm5
  41c585:	vpxor  xmm0,xmm0,xmm1
  41c589:	vpxor  xmm0,xmm0,xmm2
  41c58d:	mov    ebx,DWORD PTR [rsp-0x68]
  41c591:	add    ebx,DWORD PTR [rsp+rbp*4-0x3c]
  41c595:	vmovd  eax,xmm0
  41c599:	vpextrd ecx,xmm0,0x2
  41c59f:	add    eax,ebx
  41c5a1:	add    ecx,eax
  41c5a3:	mov    DWORD PTR [rsp-0x68],ecx
  41c5a7:	mov    DWORD PTR [rsp+rbp*4-0x20],ecx
  41c5ab:	lea    r14,[rip+0x2bdce]        # 448380 <strcmp@plt+0x44be8>
  41c5b2:	add    r9d,DWORD PTR [r14+rbp*4+0x10]
  41c5b7:	mov    r15,rbp
  41c5ba:	add    r9d,edi
  41c5bd:	add    r9d,ecx
  41c5c0:	mov    eax,r9d
  41c5c3:	rorx   edi,r13d,0x2
  41c5c9:	rorx   ebp,r13d,0xd
  41c5cf:	xor    ebp,edi
  41c5d1:	rorx   edi,r13d,0x16
  41c5d7:	add    eax,r8d
  41c5da:	xor    edi,ebp
  41c5dc:	mov    ebp,r13d
  41c5df:	and    ebp,r10d
  41c5e2:	mov    r9d,r13d
  41c5e5:	or     r9d,r10d
  41c5e8:	mov    ebx,DWORD PTR [rsp-0x74]
  41c5ec:	and    r9d,ebx
  41c5ef:	or     r9d,ebp
  41c5f2:	add    r9d,edi
  41c5f5:	add    r11d,eax
  41c5f8:	rorx   edi,r11d,0x6
  41c5fe:	rorx   ebp,r11d,0xb
  41c604:	xor    ebp,edi
  41c606:	rorx   r8d,r11d,0x19
  41c60c:	add    r9d,eax
  41c60f:	andn   eax,r11d,r12d
  41c614:	mov    edi,esi
  41c616:	and    edi,r11d
  41c619:	or     edi,eax
  41c61b:	vmovd  xmm0,DWORD PTR [rsp-0x70]
  41c621:	mov    eax,DWORD PTR [rsp+r15*4-0x58]
  41c626:	mov    DWORD PTR [rsp-0x70],eax
  41c62a:	xor    r8d,ebp
  41c62d:	vpinsrd xmm0,xmm0,eax,0x2
  41c633:	vpblendd xmm1,xmm0,xmm8,0xa
  41c639:	vpsrlvq xmm2,xmm1,xmm9
  41c63e:	vpsllvq xmm6,xmm0,xmm10
  41c643:	vpor   xmm2,xmm2,xmm6
  41c647:	vpsrlvq xmm6,xmm1,xmm3
  41c64c:	vpsllvq xmm0,xmm0,xmm4
  41c651:	vpor   xmm0,xmm6,xmm0
  41c655:	vpsrlvq xmm1,xmm1,xmm5
  41c65a:	vpxor  xmm0,xmm0,xmm1
  41c65e:	vpxor  xmm0,xmm0,xmm2
  41c662:	mov    rbp,r15
  41c665:	mov    ecx,r10d
  41c668:	mov    r10d,DWORD PTR [rsp-0x6c]
  41c66d:	add    r10d,DWORD PTR [rsp+r15*4-0x38]
  41c672:	vmovd  eax,xmm0
  41c676:	vpextrd r15d,xmm0,0x2
  41c67c:	add    eax,r10d
  41c67f:	mov    r10d,ecx
  41c682:	add    r15d,eax
  41c685:	add    edx,DWORD PTR [r14+rbp*4+0x14]
  41c68a:	add    edx,edi
  41c68c:	rorx   eax,r9d,0x2
  41c692:	add    edx,r15d
  41c695:	mov    edi,edx
  41c697:	rorx   edx,r9d,0xd
  41c69d:	xor    edx,eax
  41c69f:	rorx   eax,r9d,0x16
  41c6a5:	xor    eax,edx
  41c6a7:	mov    r14d,r9d
  41c6aa:	and    r14d,r13d
  41c6ad:	add    edi,r8d
  41c6b0:	mov    edx,r9d
  41c6b3:	or     edx,r13d
  41c6b6:	and    edx,ecx
  41c6b8:	or     edx,r14d
  41c6bb:	add    edx,eax
  41c6bd:	add    ebx,edi
  41c6bf:	add    edx,edi
  41c6c1:	rorx   eax,ebx,0x6
  41c6c7:	rorx   edi,ebx,0xb
  41c6cd:	xor    edi,eax
  41c6cf:	rorx   eax,ebx,0x19
  41c6d5:	andn   r8d,ebx,esi
  41c6da:	mov    r14d,r11d
  41c6dd:	xor    eax,edi
  41c6df:	mov    DWORD PTR [rsp-0x74],eax
  41c6e3:	and    r14d,ebx
  41c6e6:	or     r14d,r8d
  41c6e9:	mov    ecx,DWORD PTR [rsp-0x68]
  41c6ed:	rorx   r8d,ecx,0x11
  41c6f3:	rorx   eax,ecx,0x13
  41c6f9:	shr    ecx,0xa
  41c6fc:	mov    edi,DWORD PTR [rsp+rbp*4-0x54]
  41c700:	xor    ecx,eax
  41c702:	xor    ecx,r8d
  41c705:	rorx   eax,edi,0x12
  41c70b:	mov    r8d,edi
  41c70e:	shr    r8d,0x3
  41c712:	xor    r8d,eax
  41c715:	add    DWORD PTR [rsp-0x64],edi
  41c719:	rorx   eax,edi,0x7
  41c71f:	xor    r8d,eax
  41c722:	mov    DWORD PTR [rsp+rbp*4-0x1c],r15d
  41c727:	mov    eax,DWORD PTR [rsp-0x70]
  41c72b:	add    eax,DWORD PTR [rsp+rbp*4-0x34]
  41c72f:	add    eax,ecx
  41c731:	add    eax,r8d
  41c734:	mov    DWORD PTR [rsp+rbp*4-0x18],eax
  41c738:	lea    rcx,[rip+0x2bc41]        # 448380 <strcmp@plt+0x44be8>
  41c73f:	add    r12d,DWORD PTR [rcx+rbp*4+0x18]
  41c744:	add    r12d,eax
  41c747:	add    r12d,r14d
  41c74a:	mov    eax,r12d
  41c74d:	rorx   ecx,edx,0x2
  41c753:	rorx   edi,edx,0xd
  41c759:	xor    edi,ecx
  41c75b:	rorx   ecx,edx,0x16
  41c761:	xor    ecx,edi
  41c763:	mov    edi,edx
  41c765:	add    eax,DWORD PTR [rsp-0x74]
  41c769:	and    edi,r9d
  41c76c:	mov    r12d,edx
  41c76f:	or     r12d,r9d
  41c772:	and    r12d,r13d
  41c775:	or     r12d,edi
  41c778:	add    r10d,eax
  41c77b:	add    r12d,ecx
  41c77e:	rorx   ecx,r10d,0x6
  41c784:	rorx   edi,r10d,0xb
  41c78a:	xor    edi,ecx
  41c78c:	rorx   r14d,r10d,0x19
  41c792:	andn   r8d,r10d,r11d
  41c797:	mov    DWORD PTR [rsp-0x74],ebx
  41c79b:	mov    ecx,ebx
  41c79d:	add    r12d,eax
  41c7a0:	and    ecx,r10d
  41c7a3:	or     ecx,r8d
  41c7a6:	rorx   r8d,r15d,0x11
  41c7ac:	rorx   eax,r15d,0x13
  41c7b2:	shr    r15d,0xa
  41c7b6:	xor    r14d,edi
  41c7b9:	xor    r15d,eax
  41c7bc:	xor    r15d,r8d
  41c7bf:	mov    eax,DWORD PTR [rsp+rbp*4-0x50]
  41c7c3:	rorx   r8d,eax,0x7
  41c7c9:	rorx   edi,eax,0x12
  41c7cf:	shr    eax,0x3
  41c7d2:	xor    eax,edi
  41c7d4:	xor    eax,r8d
  41c7d7:	mov    edi,DWORD PTR [rsp-0x64]
  41c7db:	add    edi,r15d
  41c7de:	add    edi,eax
  41c7e0:	lea    rax,[rip+0x2bb99]        # 448380 <strcmp@plt+0x44be8>
  41c7e7:	add    esi,DWORD PTR [rax+rbp*4+0x1c]
  41c7eb:	mov    DWORD PTR [rsp+rbp*4-0x14],edi
  41c7ef:	add    esi,edi
  41c7f1:	add    esi,ecx
  41c7f3:	mov    eax,esi
  41c7f5:	rorx   ecx,r12d,0x2
  41c7fb:	rorx   esi,r12d,0xd
  41c801:	add    eax,r14d
  41c804:	xor    esi,ecx
  41c806:	rorx   ecx,r12d,0x16
  41c80c:	xor    ecx,esi
  41c80e:	mov    edi,r12d
  41c811:	and    edi,edx
  41c813:	mov    esi,r12d
  41c816:	or     esi,edx
  41c818:	and    esi,r9d
  41c81b:	or     esi,edi
  41c81d:	add    esi,ecx
  41c81f:	add    r13d,eax
  41c822:	add    esi,eax
  41c824:	add    rbp,0x8
  41c828:	mov    r14,rbp
  41c82b:	cmp    rbp,0x40
  41c82f:	jb     41c200 <strcmp@plt+0x18a68>
  41c835:	vmovd  xmm0,r13d
  41c83a:	vpinsrd xmm0,xmm0,r10d,0x1
  41c840:	vpinsrd xmm0,xmm0,DWORD PTR [rsp-0x74],0x2
  41c848:	vpinsrd xmm0,xmm0,r11d,0x3
  41c84e:	vmovd  xmm1,esi
  41c852:	vpinsrd xmm1,xmm1,r12d,0x1
  41c858:	vpinsrd xmm1,xmm1,edx,0x2
  41c85e:	vpinsrd xmm1,xmm1,r9d,0x3
  41c864:	vinserti128 ymm0,ymm1,xmm0,0x1
  41c86a:	mov    rax,QWORD PTR [rsp-0x38]
  41c86f:	vpaddd ymm0,ymm0,YMMWORD PTR [rax]
  41c873:	vmovdqu YMMWORD PTR [rax],ymm0
  41c877:	add    rsp,0xd8
  41c87e:	pop    rbx
  41c87f:	pop    r12
  41c881:	pop    r13
  41c883:	pop    r14
  41c885:	pop    r15
  41c887:	pop    rbp
  41c888:	vzeroupper 
  41c88b:	ret    
  41c88c:	nop    DWORD PTR [rax+0x0]
  41c890:	push   rbp
  41c891:	push   r15
  41c893:	push   r14
  41c895:	push   r13
  41c897:	push   r12
  41c899:	push   rbx
  41c89a:	push   rax
  41c89b:	test   rdx,rdx
  41c89e:	je     41c966 <strcmp@plt+0x191ce>
  41c8a4:	mov    r14,rdx
  41c8a7:	mov    rbx,rsi
  41c8aa:	mov    r15,rdi
  41c8ad:	mov    ecx,DWORD PTR [rdi]
  41c8af:	mov    eax,ecx
  41c8b1:	and    eax,0x3f
  41c8b4:	add    edx,ecx
  41c8b6:	mov    DWORD PTR [rdi],edx
  41c8b8:	jae    41c8be <strcmp@plt+0x19126>
  41c8ba:	inc    DWORD PTR [r15+0x4]
  41c8be:	xor    r13d,r13d
  41c8c1:	test   eax,eax
  41c8c3:	je     41c8d6 <strcmp@plt+0x1913e>
  41c8c5:	mov    r12d,0x40
  41c8cb:	sub    r12,rax
  41c8ce:	cmp    r12,r14
  41c8d1:	jbe    41c909 <strcmp@plt+0x19171>
  41c8d3:	mov    r13d,eax
  41c8d6:	cmp    r14,0x40
  41c8da:	jae    41c939 <strcmp@plt+0x191a1>
  41c8dc:	test   r14,r14
  41c8df:	je     41c966 <strcmp@plt+0x191ce>
  41c8e5:	mov    eax,r13d
  41c8e8:	lea    rdi,[r15+rax*1]
  41c8ec:	add    rdi,0x28
  41c8f0:	mov    rsi,rbx
  41c8f3:	mov    rdx,r14
  41c8f6:	add    rsp,0x8
  41c8fa:	pop    rbx
  41c8fb:	pop    r12
  41c8fd:	pop    r13
  41c8ff:	pop    r14
  41c901:	pop    r15
  41c903:	pop    rbp
  41c904:	jmp    403330 <memcpy@plt>
  41c909:	lea    rbp,[r15+0x28]
  41c90d:	mov    eax,eax
  41c90f:	lea    rdi,[r15+rax*1]
  41c913:	add    rdi,0x28
  41c917:	mov    rsi,rbx
  41c91a:	mov    rdx,r12
  41c91d:	call   403330 <memcpy@plt>
  41c922:	mov    rdi,r15
  41c925:	mov    rsi,rbp
  41c928:	call   41bdd0 <strcmp@plt+0x18638>
  41c92d:	add    rbx,r12
  41c930:	sub    r14,r12
  41c933:	cmp    r14,0x40
  41c937:	jb     41c8dc <strcmp@plt+0x19144>
  41c939:	mov    rbp,r14
  41c93c:	nop    DWORD PTR [rax+0x0]
  41c940:	mov    rdi,r15
  41c943:	mov    rsi,rbx
  41c946:	call   41bdd0 <strcmp@plt+0x18638>
  41c94b:	add    rbx,0x40
  41c94f:	add    rbp,0xffffffffffffffc0
  41c953:	cmp    rbp,0x3f
  41c957:	ja     41c940 <strcmp@plt+0x191a8>
  41c959:	and    r14d,0x3f
  41c95d:	test   r14,r14
  41c960:	jne    41c8e5 <strcmp@plt+0x1914d>
  41c966:	add    rsp,0x8
  41c96a:	pop    rbx
  41c96b:	pop    r12
  41c96d:	pop    r13
  41c96f:	pop    r14
  41c971:	pop    r15
  41c973:	pop    rbp
  41c974:	ret    
  41c975:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c97f:	nop
  41c980:	push   rbp
  41c981:	push   r15
  41c983:	push   r14
  41c985:	push   r13
  41c987:	push   r12
  41c989:	push   rbx
  41c98a:	sub    rsp,0x18
  41c98e:	mov    r14,rsi
  41c991:	mov    r12,rdi
  41c994:	mov    ecx,DWORD PTR [rdi]
  41c996:	mov    eax,DWORD PTR [rdi+0x4]
  41c999:	mov    edx,eax
  41c99b:	shld   edx,ecx,0x3
  41c99f:	mov    esi,eax
  41c9a1:	shr    esi,0x15
  41c9a4:	mov    BYTE PTR [rsp+0x8],sil
  41c9a9:	mov    esi,eax
  41c9ab:	shr    esi,0xd
  41c9ae:	mov    BYTE PTR [rsp+0x9],sil
  41c9b3:	mov    esi,eax
  41c9b5:	shr    esi,0x5
  41c9b8:	mov    BYTE PTR [rsp+0xa],sil
  41c9bd:	mov    BYTE PTR [rsp+0xb],dl
  41c9c1:	mov    edx,ecx
  41c9c3:	shr    edx,0x15
  41c9c6:	mov    BYTE PTR [rsp+0xc],dl
  41c9ca:	mov    edx,ecx
  41c9cc:	shr    edx,0xd
  41c9cf:	mov    BYTE PTR [rsp+0xd],dl
  41c9d3:	mov    edx,ecx
  41c9d5:	shr    edx,0x5
  41c9d8:	mov    BYTE PTR [rsp+0xe],dl
  41c9dc:	mov    edx,ecx
  41c9de:	shl    dl,0x3
  41c9e1:	mov    BYTE PTR [rsp+0xf],dl
  41c9e5:	mov    edx,ecx
  41c9e7:	and    edx,0x3f
  41c9ea:	xor    r15d,r15d
  41c9ed:	cmp    edx,0x37
  41c9f0:	seta   r15b
  41c9f4:	shl    r15d,0x6
  41c9f8:	sub    r15d,edx
  41c9fb:	add    r15d,0x38
  41c9ff:	je     41ca59 <strcmp@plt+0x192c1>
  41ca01:	add    ecx,r15d
  41ca04:	mov    DWORD PTR [r12],ecx
  41ca08:	cmp    ecx,r15d
  41ca0b:	jae    41ca14 <strcmp@plt+0x1927c>
  41ca0d:	inc    eax
  41ca0f:	mov    DWORD PTR [r12+0x4],eax
  41ca14:	xor    ebp,ebp
  41ca16:	lea    rbx,[rip+0x2ba63]        # 448480 <strcmp@plt+0x44ce8>
  41ca1d:	test   edx,edx
  41ca1f:	je     41ca35 <strcmp@plt+0x1929d>
  41ca21:	mov    r13d,0x40
  41ca27:	sub    r13,rdx
  41ca2a:	cmp    r15d,r13d
  41ca2d:	jae    41cc0f <strcmp@plt+0x19477>
  41ca33:	mov    ebp,edx
  41ca35:	cmp    r15,0x40
  41ca39:	jae    41cc52 <strcmp@plt+0x194ba>
  41ca3f:	test   r15,r15
  41ca42:	je     41ca59 <strcmp@plt+0x192c1>
  41ca44:	mov    eax,ebp
  41ca46:	lea    rdi,[r12+rax*1]
  41ca4a:	add    rdi,0x28
  41ca4e:	mov    rsi,rbx
  41ca51:	mov    rdx,r15
  41ca54:	call   403330 <memcpy@plt>
  41ca59:	mov    ecx,DWORD PTR [r12]
  41ca5d:	mov    eax,ecx
  41ca5f:	and    eax,0x3f
  41ca62:	add    ecx,0x8
  41ca65:	mov    DWORD PTR [r12],ecx
  41ca69:	jae    41ca70 <strcmp@plt+0x192d8>
  41ca6b:	inc    DWORD PTR [r12+0x4]
  41ca70:	lea    rsi,[rsp+0x8]
  41ca75:	mov    edx,0x8
  41ca7a:	xor    ebp,ebp
  41ca7c:	test   eax,eax
  41ca7e:	je     41caca <strcmp@plt+0x19332>
  41ca80:	cmp    eax,0x38
  41ca83:	jae    41ca89 <strcmp@plt+0x192f1>
  41ca85:	mov    ebp,eax
  41ca87:	jmp    41caca <strcmp@plt+0x19332>
  41ca89:	mov    ebx,0x40
  41ca8e:	sub    rbx,rax
  41ca91:	lea    r15,[r12+0x28]
  41ca96:	mov    eax,eax
  41ca98:	lea    rdi,[r12+rax*1]
  41ca9c:	add    rdi,0x28
  41caa0:	lea    rsi,[rsp+0x8]
  41caa5:	mov    rdx,rbx
  41caa8:	call   403330 <memcpy@plt>
  41caad:	mov    rdi,r12
  41cab0:	mov    rsi,r15
  41cab3:	call   41bdd0 <strcmp@plt+0x18638>
  41cab8:	mov    edx,0x8
  41cabd:	sub    rdx,rbx
  41cac0:	je     41cad9 <strcmp@plt+0x19341>
  41cac2:	lea    rsi,[rsp+rbx*1]
  41cac6:	add    rsi,0x8
  41caca:	mov    eax,ebp
  41cacc:	lea    rdi,[r12+rax*1]
  41cad0:	add    rdi,0x28
  41cad4:	call   403330 <memcpy@plt>
  41cad9:	mov    al,BYTE PTR [r12+0xb]
  41cade:	mov    BYTE PTR [r14],al
  41cae1:	mov    al,BYTE PTR [r12+0xa]
  41cae6:	mov    BYTE PTR [r14+0x1],al
  41caea:	mov    al,BYTE PTR [r12+0x9]
  41caef:	mov    BYTE PTR [r14+0x2],al
  41caf3:	mov    al,BYTE PTR [r12+0x8]
  41caf8:	mov    BYTE PTR [r14+0x3],al
  41cafc:	mov    al,BYTE PTR [r12+0xf]
  41cb01:	mov    BYTE PTR [r14+0x4],al
  41cb05:	mov    al,BYTE PTR [r12+0xe]
  41cb0a:	mov    BYTE PTR [r14+0x5],al
  41cb0e:	mov    al,BYTE PTR [r12+0xd]
  41cb13:	mov    BYTE PTR [r14+0x6],al
  41cb17:	mov    al,BYTE PTR [r12+0xc]
  41cb1c:	mov    BYTE PTR [r14+0x7],al
  41cb20:	mov    al,BYTE PTR [r12+0x13]
  41cb25:	mov    BYTE PTR [r14+0x8],al
  41cb29:	mov    al,BYTE PTR [r12+0x12]
  41cb2e:	mov    BYTE PTR [r14+0x9],al
  41cb32:	mov    al,BYTE PTR [r12+0x11]
  41cb37:	mov    BYTE PTR [r14+0xa],al
  41cb3b:	mov    al,BYTE PTR [r12+0x10]
  41cb40:	mov    BYTE PTR [r14+0xb],al
  41cb44:	mov    al,BYTE PTR [r12+0x17]
  41cb49:	mov    BYTE PTR [r14+0xc],al
  41cb4d:	mov    al,BYTE PTR [r12+0x16]
  41cb52:	mov    BYTE PTR [r14+0xd],al
  41cb56:	mov    al,BYTE PTR [r12+0x15]
  41cb5b:	mov    BYTE PTR [r14+0xe],al
  41cb5f:	mov    al,BYTE PTR [r12+0x14]
  41cb64:	mov    BYTE PTR [r14+0xf],al
  41cb68:	mov    al,BYTE PTR [r12+0x1b]
  41cb6d:	mov    BYTE PTR [r14+0x10],al
  41cb71:	mov    al,BYTE PTR [r12+0x1a]
  41cb76:	mov    BYTE PTR [r14+0x11],al
  41cb7a:	mov    al,BYTE PTR [r12+0x19]
  41cb7f:	mov    BYTE PTR [r14+0x12],al
  41cb83:	mov    al,BYTE PTR [r12+0x18]
  41cb88:	mov    BYTE PTR [r14+0x13],al
  41cb8c:	mov    al,BYTE PTR [r12+0x1f]
  41cb91:	mov    BYTE PTR [r14+0x14],al
  41cb95:	mov    al,BYTE PTR [r12+0x1e]
  41cb9a:	mov    BYTE PTR [r14+0x15],al
  41cb9e:	mov    al,BYTE PTR [r12+0x1d]
  41cba3:	mov    BYTE PTR [r14+0x16],al
  41cba7:	mov    al,BYTE PTR [r12+0x1c]
  41cbac:	mov    BYTE PTR [r14+0x17],al
  41cbb0:	mov    al,BYTE PTR [r12+0x23]
  41cbb5:	mov    BYTE PTR [r14+0x18],al
  41cbb9:	mov    al,BYTE PTR [r12+0x22]
  41cbbe:	mov    BYTE PTR [r14+0x19],al
  41cbc2:	mov    al,BYTE PTR [r12+0x21]
  41cbc7:	mov    BYTE PTR [r14+0x1a],al
  41cbcb:	mov    al,BYTE PTR [r12+0x20]
  41cbd0:	mov    BYTE PTR [r14+0x1b],al
  41cbd4:	cmp    DWORD PTR [r12+0x68],0x0
  41cbda:	jne    41cc00 <strcmp@plt+0x19468>
  41cbdc:	mov    al,BYTE PTR [r12+0x27]
  41cbe1:	mov    BYTE PTR [r14+0x1c],al
  41cbe5:	mov    al,BYTE PTR [r12+0x26]
  41cbea:	mov    BYTE PTR [r14+0x1d],al
  41cbee:	mov    al,BYTE PTR [r12+0x25]
  41cbf3:	mov    BYTE PTR [r14+0x1e],al
  41cbf7:	mov    al,BYTE PTR [r12+0x24]
  41cbfc:	mov    BYTE PTR [r14+0x1f],al
  41cc00:	add    rsp,0x18
  41cc04:	pop    rbx
  41cc05:	pop    r12
  41cc07:	pop    r13
  41cc09:	pop    r14
  41cc0b:	pop    r15
  41cc0d:	pop    rbp
  41cc0e:	ret    
  41cc0f:	lea    rax,[r12+0x28]
  41cc14:	mov    QWORD PTR [rsp+0x10],rax
  41cc19:	mov    eax,edx
  41cc1b:	lea    rdi,[r12+rax*1]
  41cc1f:	add    rdi,0x28
  41cc23:	lea    rbx,[rip+0x2b856]        # 448480 <strcmp@plt+0x44ce8>
  41cc2a:	mov    rsi,rbx
  41cc2d:	mov    rdx,r13
  41cc30:	call   403330 <memcpy@plt>
  41cc35:	mov    rdi,r12
  41cc38:	mov    rsi,QWORD PTR [rsp+0x10]
  41cc3d:	call   41bdd0 <strcmp@plt+0x18638>
  41cc42:	add    rbx,r13
  41cc45:	sub    r15,r13
  41cc48:	cmp    r15,0x40
  41cc4c:	jb     41ca3f <strcmp@plt+0x192a7>
  41cc52:	mov    r13d,ebp
  41cc55:	mov    rbp,r15
  41cc58:	nop    DWORD PTR [rax+rax*1+0x0]
  41cc60:	mov    rdi,r12
  41cc63:	mov    rsi,rbx
  41cc66:	call   41bdd0 <strcmp@plt+0x18638>
  41cc6b:	add    rbx,0x40
  41cc6f:	add    rbp,0xffffffffffffffc0
  41cc73:	cmp    rbp,0x3f
  41cc77:	ja     41cc60 <strcmp@plt+0x194c8>
  41cc79:	and    r15d,0x3f
  41cc7d:	mov    ebp,r13d
  41cc80:	test   r15,r15
  41cc83:	jne    41ca44 <strcmp@plt+0x192ac>
  41cc89:	jmp    41ca59 <strcmp@plt+0x192c1>
  41cc8e:	xchg   ax,ax
  41cc90:	push   rbp
  41cc91:	mov    rbp,rsp
  41cc94:	push   r15
  41cc96:	push   r14
  41cc98:	push   r13
  41cc9a:	push   r12
  41cc9c:	push   rbx
  41cc9d:	and    rsp,0xffffffffffffffe0
  41cca1:	sub    rsp,0xa0
  41cca8:	test   ecx,ecx
  41ccaa:	sete   al
  41ccad:	vmovd  xmm0,eax
  41ccb1:	vpbroadcastb xmm0,xmm0
  41ccb6:	vpmovzxwd ymm0,xmm0
  41ccbb:	vpslld ymm0,ymm0,0x1f
  41ccc0:	vmovaps ymm1,YMMWORD PTR [rip+0x2b638]        # 448300 <strcmp@plt+0x44b68>
  41ccc8:	vblendvps ymm0,ymm1,YMMWORD PTR [rip+0x2b60e],ymm0        # 4482e0 <strcmp@plt+0x44b48>
  41ccd2:	vxorps xmm1,xmm1,xmm1
  41ccd6:	vmovaps YMMWORD PTR [rsp+0x20],ymm1
  41ccdc:	vmovaps YMMWORD PTR [rsp],ymm1
  41cce1:	vmovaps YMMWORD PTR [rsp+0x40],ymm1
  41cce7:	mov    r14,rdx
  41ccea:	mov    QWORD PTR [rsp+0x60],0x0
  41ccf3:	vmovups YMMWORD PTR [rsp+0x8],ymm0
  41ccf9:	mov    DWORD PTR [rsp+0x68],ecx
  41ccfd:	test   rsi,rsi
  41cd00:	je     41cd55 <strcmp@plt+0x195bd>
  41cd02:	mov    r15,rsi
  41cd05:	mov    r13,rdi
  41cd08:	mov    DWORD PTR [rsp],r15d
  41cd0c:	cmp    rsi,0x40
  41cd10:	jb     41cd42 <strcmp@plt+0x195aa>
  41cd12:	mov    r12,rsp
  41cd15:	mov    rbx,r15
  41cd18:	nop    DWORD PTR [rax+rax*1+0x0]
  41cd20:	mov    rdi,r12
  41cd23:	mov    rsi,r13
  41cd26:	vzeroupper 
  41cd29:	call   41bdd0 <strcmp@plt+0x18638>
  41cd2e:	add    r13,0x40
  41cd32:	add    rbx,0xffffffffffffffc0
  41cd36:	cmp    rbx,0x3f
  41cd3a:	ja     41cd20 <strcmp@plt+0x19588>
  41cd3c:	and    r15,0x3f
  41cd40:	je     41cd55 <strcmp@plt+0x195bd>
  41cd42:	lea    rdi,[rsp+0x28]
  41cd47:	mov    rsi,r13
  41cd4a:	mov    rdx,r15
  41cd4d:	vzeroupper 
  41cd50:	call   403330 <memcpy@plt>
  41cd55:	mov    rdi,rsp
  41cd58:	mov    rsi,r14
  41cd5b:	vzeroupper 
  41cd5e:	call   41c980 <strcmp@plt+0x191e8>
  41cd63:	xor    eax,eax
  41cd65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cd6f:	nop
  41cd70:	mov    BYTE PTR [rsp+rax*1],0x0
  41cd74:	mov    BYTE PTR [rsp+rax*1+0x1],0x0
  41cd79:	mov    BYTE PTR [rsp+rax*1+0x2],0x0
  41cd7e:	mov    BYTE PTR [rsp+rax*1+0x3],0x0
  41cd83:	mov    BYTE PTR [rsp+rax*1+0x4],0x0
  41cd88:	mov    BYTE PTR [rsp+rax*1+0x5],0x0
  41cd8d:	mov    BYTE PTR [rsp+rax*1+0x6],0x0
  41cd92:	mov    BYTE PTR [rsp+rax*1+0x7],0x0
  41cd97:	mov    BYTE PTR [rsp+rax*1+0x8],0x0
  41cd9c:	mov    BYTE PTR [rsp+rax*1+0x9],0x0
  41cda1:	mov    BYTE PTR [rsp+rax*1+0xa],0x0
  41cda6:	mov    BYTE PTR [rsp+rax*1+0xb],0x0
  41cdab:	mov    BYTE PTR [rsp+rax*1+0xc],0x0
  41cdb0:	mov    BYTE PTR [rsp+rax*1+0xd],0x0
  41cdb5:	mov    BYTE PTR [rsp+rax*1+0xe],0x0
  41cdba:	mov    BYTE PTR [rsp+rax*1+0xf],0x0
  41cdbf:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  41cdc4:	mov    BYTE PTR [rsp+rax*1+0x11],0x0
  41cdc9:	add    rax,0x12
  41cdcd:	cmp    rax,0x6c
  41cdd1:	jne    41cd70 <strcmp@plt+0x195d8>
  41cdd3:	lea    rsp,[rbp-0x28]
  41cdd7:	pop    rbx
  41cdd8:	pop    r12
  41cdda:	pop    r13
  41cddc:	pop    r14
  41cdde:	pop    r15
  41cde0:	pop    rbp
  41cde1:	ret    
  41cde2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cdec:	nop    DWORD PTR [rax+0x0]
  41cdf0:	jmp    41a440 <strcmp@plt+0x16ca8>
  41cdf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cdff:	nop
  41ce00:	jmp    41b7e0 <strcmp@plt+0x18048>
  41ce05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce0f:	nop
  41ce10:	jmp    41b8d0 <strcmp@plt+0x18138>
  41ce15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce1f:	nop
  41ce20:	push   rbx
  41ce21:	mov    edi,0x1
  41ce26:	mov    esi,0x5c
  41ce2b:	call   4032d0 <calloc@plt>
  41ce30:	mov    rbx,rax
  41ce33:	test   rax,rax
  41ce36:	je     41ce40 <strcmp@plt+0x196a8>
  41ce38:	mov    rdi,rbx
  41ce3b:	call   41a370 <strcmp@plt+0x16bd8>
  41ce40:	mov    rax,rbx
  41ce43:	pop    rbx
  41ce44:	ret    
  41ce45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce4f:	nop
  41ce50:	push   rbx
  41ce51:	mov    rbx,rdi
  41ce54:	call   41a390 <strcmp@plt+0x16bf8>
  41ce59:	mov    rdi,rbx
  41ce5c:	pop    rbx
  41ce5d:	jmp    403790 <free@plt>
  41ce62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce6c:	nop    DWORD PTR [rax+0x0]
  41ce70:	jmp    41a420 <strcmp@plt+0x16c88>
  41ce75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce7f:	nop
  41ce80:	jmp    41a470 <strcmp@plt+0x16cd8>
  41ce85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ce8f:	nop
  41ce90:	mov    esi,0x1
  41ce95:	jmp    41bd90 <strcmp@plt+0x185f8>
  41ce9a:	nop    WORD PTR [rax+rax*1+0x0]
  41cea0:	jmp    41c890 <strcmp@plt+0x190f8>
  41cea5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ceaf:	nop
  41ceb0:	jmp    41c980 <strcmp@plt+0x191e8>
  41ceb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cebf:	nop
  41cec0:	mov    ecx,0x1
  41cec5:	jmp    41cc90 <strcmp@plt+0x194f8>
  41ceca:	nop    WORD PTR [rax+rax*1+0x0]
  41ced0:	push   rbx
  41ced1:	mov    edi,0x1
  41ced6:	mov    esi,0x6c
  41cedb:	call   4032d0 <calloc@plt>
  41cee0:	mov    rbx,rax
  41cee3:	test   rax,rax
  41cee6:	je     41cef0 <strcmp@plt+0x19758>
  41cee8:	mov    rdi,rbx
  41ceeb:	call   41bcc0 <strcmp@plt+0x18528>
  41cef0:	mov    rax,rbx
  41cef3:	pop    rbx
  41cef4:	ret    
  41cef5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ceff:	nop
  41cf00:	push   rbx
  41cf01:	mov    rbx,rdi
  41cf04:	call   41bce0 <strcmp@plt+0x18548>
  41cf09:	mov    rdi,rbx
  41cf0c:	pop    rbx
  41cf0d:	jmp    403790 <free@plt>
  41cf12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf1c:	nop    DWORD PTR [rax+0x0]
  41cf20:	jmp    41bd60 <strcmp@plt+0x185c8>
  41cf25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf2f:	nop
  41cf30:	jmp    41bdd0 <strcmp@plt+0x18638>
  41cf35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf3f:	nop
  41cf40:	xor    esi,esi
  41cf42:	jmp    41bd90 <strcmp@plt+0x185f8>
  41cf47:	nop    WORD PTR [rax+rax*1+0x0]
  41cf50:	xor    ecx,ecx
  41cf52:	jmp    41cc90 <strcmp@plt+0x194f8>
  41cf57:	nop    WORD PTR [rax+rax*1+0x0]
  41cf60:	lea    rax,[rdi+0x8]
  41cf64:	test   rdi,rdi
  41cf67:	cmove  rax,rdi
  41cf6b:	ret    
  41cf6c:	nop    DWORD PTR [rax+0x0]
  41cf70:	push   rbp
  41cf71:	push   r15
  41cf73:	push   r14
  41cf75:	push   rbx
  41cf76:	push   rax
  41cf77:	mov    ebp,edx
  41cf79:	mov    r15,rsi
  41cf7c:	mov    r14,rdi
  41cf7f:	mov    ebx,edx
  41cf81:	shr    rbx,0x3
  41cf85:	mov    rdx,rbx
  41cf88:	call   4033f0 <bcmp@plt>
  41cf8d:	mov    ecx,eax
  41cf8f:	xor    eax,eax
  41cf91:	test   ecx,ecx
  41cf93:	jne    41cfc2 <strcmp@plt+0x1982a>
  41cf95:	and    ebp,0x7
  41cf98:	je     41cfbd <strcmp@plt+0x19825>
  41cf9a:	mov    al,0x8
  41cf9c:	sub    al,bpl
  41cf9f:	mov    cl,BYTE PTR [r15+rbx*1]
  41cfa3:	xor    cl,BYTE PTR [r14+rbx*1]
  41cfa7:	movzx  ecx,cl
  41cfaa:	shrx   ecx,ecx,eax
  41cfaf:	shlx   ecx,ecx,eax
  41cfb4:	xor    eax,eax
  41cfb6:	test   ecx,ecx
  41cfb8:	sete   al
  41cfbb:	jmp    41cfc2 <strcmp@plt+0x1982a>
  41cfbd:	mov    eax,0x1
  41cfc2:	add    rsp,0x8
  41cfc6:	pop    rbx
  41cfc7:	pop    r14
  41cfc9:	pop    r15
  41cfcb:	pop    rbp
  41cfcc:	ret    
  41cfcd:	nop    DWORD PTR [rax]
  41cfd0:	push   r15
  41cfd2:	push   r14
  41cfd4:	push   rbx
  41cfd5:	sub    rsp,0x10
  41cfd9:	mov    r14,rdx
  41cfdc:	mov    r15,rsi
  41cfdf:	cmp    edi,0xa
  41cfe2:	je     41d017 <strcmp@plt+0x1987f>
  41cfe4:	mov    eax,0xffffffff
  41cfe9:	cmp    edi,0x2
  41cfec:	jne    41d16b <strcmp@plt+0x199d3>
  41cff2:	mov    DWORD PTR [rsp+0xc],0x0
  41cffa:	movsx  rbx,BYTE PTR [r15]
  41cffe:	call   403430 <__ctype_b_loc@plt>
  41d003:	mov    rcx,QWORD PTR [rax]
  41d006:	test   BYTE PTR [rcx+rbx*2+0x1],0x8
  41d00b:	jne    41d030 <strcmp@plt+0x19898>
  41d00d:	mov    eax,0xffffffff
  41d012:	jmp    41d16b <strcmp@plt+0x199d3>
  41d017:	mov    edi,0xa
  41d01c:	mov    rsi,r15
  41d01f:	mov    rdx,r14
  41d022:	add    rsp,0x10
  41d026:	pop    rbx
  41d027:	pop    r14
  41d029:	pop    r15
  41d02b:	jmp    403760 <inet_pton@plt>
  41d030:	add    r15,0x4
  41d034:	xor    eax,eax
  41d036:	xor    edx,edx
  41d038:	nop    DWORD PTR [rax+rax*1+0x0]
  41d040:	movsx  esi,bl
  41d043:	lea    edx,[rdx+rdx*4]
  41d046:	lea    edx,[rsi+rdx*2]
  41d049:	add    edx,0xffffffd0
  41d04c:	cmp    edx,0xff
  41d052:	jg     41d16b <strcmp@plt+0x199d3>
  41d058:	movsx  rbx,BYTE PTR [r15-0x3]
  41d05d:	test   rbx,rbx
  41d060:	je     41d15b <strcmp@plt+0x199c3>
  41d066:	inc    r15
  41d069:	test   BYTE PTR [rcx+rbx*2+0x1],0x8
  41d06e:	jne    41d040 <strcmp@plt+0x198a8>
  41d070:	mov    BYTE PTR [rsp+0xc],dl
  41d074:	cmp    bl,0x2e
  41d077:	jne    41d16b <strcmp@plt+0x199d3>
  41d07d:	movsx  rsi,BYTE PTR [r15-0x3]
  41d082:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d087:	je     41d00d <strcmp@plt+0x19875>
  41d089:	xor    eax,eax
  41d08b:	xor    edx,edx
  41d08d:	movsx  esi,sil
  41d091:	lea    edx,[rdx+rdx*4]
  41d094:	lea    edx,[rsi+rdx*2]
  41d097:	add    edx,0xffffffd0
  41d09a:	cmp    edx,0xff
  41d0a0:	jg     41d16b <strcmp@plt+0x199d3>
  41d0a6:	movsx  rsi,BYTE PTR [r15-0x2]
  41d0ab:	test   rsi,rsi
  41d0ae:	je     41d156 <strcmp@plt+0x199be>
  41d0b4:	inc    r15
  41d0b7:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d0bc:	jne    41d08d <strcmp@plt+0x198f5>
  41d0be:	mov    BYTE PTR [rsp+0xd],dl
  41d0c2:	cmp    sil,0x2e
  41d0c6:	jne    41d16b <strcmp@plt+0x199d3>
  41d0cc:	movsx  rsi,BYTE PTR [r15-0x2]
  41d0d1:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d0d6:	je     41d00d <strcmp@plt+0x19875>
  41d0dc:	xor    eax,eax
  41d0de:	xor    edx,edx
  41d0e0:	movsx  esi,sil
  41d0e4:	lea    edx,[rdx+rdx*4]
  41d0e7:	lea    edx,[rsi+rdx*2]
  41d0ea:	add    edx,0xffffffd0
  41d0ed:	cmp    edx,0xff
  41d0f3:	jg     41d16b <strcmp@plt+0x199d3>
  41d0f5:	movsx  rsi,BYTE PTR [r15-0x1]
  41d0fa:	test   rsi,rsi
  41d0fd:	je     41d175 <strcmp@plt+0x199dd>
  41d0ff:	inc    r15
  41d102:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d107:	jne    41d0e0 <strcmp@plt+0x19948>
  41d109:	mov    BYTE PTR [rsp+0xe],dl
  41d10d:	cmp    sil,0x2e
  41d111:	jne    41d16b <strcmp@plt+0x199d3>
  41d113:	movsx  rsi,BYTE PTR [r15-0x1]
  41d118:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d11d:	mov    eax,0xffffffff
  41d122:	je     41d16b <strcmp@plt+0x199d3>
  41d124:	xor    eax,eax
  41d126:	xor    edx,edx
  41d128:	movsx  esi,sil
  41d12c:	lea    edx,[rdx+rdx*4]
  41d12f:	lea    edx,[rsi+rdx*2]
  41d132:	add    edx,0xffffffd0
  41d135:	cmp    edx,0xff
  41d13b:	jg     41d16b <strcmp@plt+0x199d3>
  41d13d:	movsx  rsi,BYTE PTR [r15]
  41d141:	test   rsi,rsi
  41d144:	je     41d17c <strcmp@plt+0x199e4>
  41d146:	inc    r15
  41d149:	test   BYTE PTR [rcx+rsi*2+0x1],0x8
  41d14e:	jne    41d128 <strcmp@plt+0x19990>
  41d150:	mov    BYTE PTR [rsp+0xf],dl
  41d154:	jmp    41d16b <strcmp@plt+0x199d3>
  41d156:	mov    eax,0x1
  41d15b:	mov    BYTE PTR [rsp+rax*1+0xc],dl
  41d15f:	mov    eax,DWORD PTR [rsp+0xc]
  41d163:	mov    DWORD PTR [r14],eax
  41d166:	mov    eax,0x1
  41d16b:	add    rsp,0x10
  41d16f:	pop    rbx
  41d170:	pop    r14
  41d172:	pop    r15
  41d174:	ret    
  41d175:	mov    eax,0x2
  41d17a:	jmp    41d15b <strcmp@plt+0x199c3>
  41d17c:	mov    eax,0x3
  41d181:	jmp    41d15b <strcmp@plt+0x199c3>
  41d183:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d18d:	nop    DWORD PTR [rax]
  41d190:	push   rbp
  41d191:	push   r14
  41d193:	push   rbx
  41d194:	sub    rsp,0x10
  41d198:	test   rdi,rdi
  41d19b:	je     41d216 <strcmp@plt+0x19a7e>
  41d19d:	mov    rbx,rdi
  41d1a0:	cmp    DWORD PTR [rdi+0x4],0x0
  41d1a4:	js     41d28a <strcmp@plt+0x19af2>
  41d1aa:	mov    ebp,edx
  41d1ac:	mov    r14,rsi
  41d1af:	test   rsi,rsi
  41d1b2:	jne    41d1d4 <strcmp@plt+0x19a3c>
  41d1b4:	mov    eax,DWORD PTR [rip+0x4ce36]        # 469ff0 <strcmp@plt+0x66858>
  41d1ba:	lea    rcx,[rip+0x4cadf]        # 469ca0 <strcmp@plt+0x66508>
  41d1c1:	lea    edx,[rax+0x1]
  41d1c4:	mov    DWORD PTR [rip+0x4ce26],edx        # 469ff0 <strcmp@plt+0x66858>
  41d1ca:	and    eax,0xf
  41d1cd:	imul   r14,rax,0x35
  41d1d1:	add    r14,rcx
  41d1d4:	movzx  eax,WORD PTR [rbx]
  41d1d7:	cmp    ax,0xa
  41d1db:	je     41d21f <strcmp@plt+0x19a87>
  41d1dd:	cmp    ax,0x2
  41d1e1:	jne    41d268 <strcmp@plt+0x19ad0>
  41d1e7:	movzx  eax,WORD PTR [rbx+0x2]
  41d1eb:	cmp    eax,0x21
  41d1ee:	jae    41d2a9 <strcmp@plt+0x19b11>
  41d1f4:	movzx  edx,BYTE PTR [rbx+0x8]
  41d1f8:	movzx  ecx,BYTE PTR [rbx+0x9]
  41d1fc:	movzx  r8d,BYTE PTR [rbx+0xa]
  41d201:	movzx  r9d,BYTE PTR [rbx+0xb]
  41d206:	test   ebp,ebp
  41d208:	je     41d26d <strcmp@plt+0x19ad5>
  41d20a:	mov    DWORD PTR [rsp],eax
  41d20d:	lea    rsi,[rip+0x2b33d]        # 448551 <strcmp@plt+0x44db9>
  41d214:	jmp    41d274 <strcmp@plt+0x19adc>
  41d216:	lea    r14,[rip+0x2b2a3]        # 4484c0 <strcmp@plt+0x44d28>
  41d21d:	jmp    41d27e <strcmp@plt+0x19ae6>
  41d21f:	lea    rsi,[rbx+0x8]
  41d223:	mov    edi,0xa
  41d228:	mov    rdx,r14
  41d22b:	mov    ecx,0x30
  41d230:	call   403400 <inet_ntop@plt>
  41d235:	test   ebp,ebp
  41d237:	je     41d27e <strcmp@plt+0x19ae6>
  41d239:	test   rax,rax
  41d23c:	je     41d27e <strcmp@plt+0x19ae6>
  41d23e:	movzx  ebx,WORD PTR [rbx+0x2]
  41d242:	cmp    ebx,0x81
  41d248:	jae    41d2c8 <strcmp@plt+0x19b30>
  41d24a:	mov    rdi,r14
  41d24d:	call   4031e0 <strlen@plt>
  41d252:	lea    rdi,[rax+r14*1]
  41d256:	lea    rsi,[rip+0x2d562]        # 44a7bf <strcmp@plt+0x47027>
  41d25d:	mov    edx,ebx
  41d25f:	xor    eax,eax
  41d261:	call   4030b0 <sprintf@plt>
  41d266:	jmp    41d27e <strcmp@plt+0x19ae6>
  41d268:	xor    r14d,r14d
  41d26b:	jmp    41d27e <strcmp@plt+0x19ae6>
  41d26d:	lea    rsi,[rip+0x2b2ec]        # 448560 <strcmp@plt+0x44dc8>
  41d274:	mov    rdi,r14
  41d277:	xor    eax,eax
  41d279:	call   4030b0 <sprintf@plt>
  41d27e:	mov    rax,r14
  41d281:	add    rsp,0x10
  41d285:	pop    rbx
  41d286:	pop    r14
  41d288:	pop    rbp
  41d289:	ret    
  41d28a:	lea    rdi,[rip+0x2b236]        # 4484c7 <strcmp@plt+0x44d2f>
  41d291:	lea    rsi,[rip+0x2b246]        # 4484de <strcmp@plt+0x44d46>
  41d298:	lea    rcx,[rip+0x2b259]        # 4484f8 <strcmp@plt+0x44d60>
  41d29f:	mov    edx,0x71
  41d2a4:	call   4032b0 <__assert_fail@plt>
  41d2a9:	lea    rdi,[rip+0x2b274]        # 448524 <strcmp@plt+0x44d8c>
  41d2b0:	lea    rsi,[rip+0x2b227]        # 4484de <strcmp@plt+0x44d46>
  41d2b7:	lea    rcx,[rip+0x2b23a]        # 4484f8 <strcmp@plt+0x44d60>
  41d2be:	mov    edx,0x8b
  41d2c3:	call   4032b0 <__assert_fail@plt>
  41d2c8:	lea    rdi,[rip+0x2b29d]        # 44856c <strcmp@plt+0x44dd4>
  41d2cf:	lea    rsi,[rip+0x2b208]        # 4484de <strcmp@plt+0x44d46>
  41d2d6:	lea    rcx,[rip+0x2b21b]        # 4484f8 <strcmp@plt+0x44d60>
  41d2dd:	mov    edx,0x9b
  41d2e2:	call   4032b0 <__assert_fail@plt>
  41d2e7:	nop    WORD PTR [rax+rax*1+0x0]
  41d2f0:	mov    edx,0x1
  41d2f5:	jmp    41d190 <strcmp@plt+0x199f8>
  41d2fa:	nop    WORD PTR [rax+rax*1+0x0]
  41d300:	xor    esi,esi
  41d302:	mov    edx,0x1
  41d307:	jmp    41d190 <strcmp@plt+0x199f8>
  41d30c:	nop    DWORD PTR [rax+0x0]
  41d310:	push   rbp
  41d311:	push   r15
  41d313:	push   r14
  41d315:	push   rbx
  41d316:	push   rax
  41d317:	mov    rbx,rcx
  41d31a:	mov    r14d,edx
  41d31d:	mov    r15,rsi
  41d320:	mov    ebp,edi
  41d322:	xor    eax,eax
  41d324:	test   rcx,rcx
  41d327:	je     41d340 <strcmp@plt+0x19ba8>
  41d329:	cmp    ebp,0xa
  41d32c:	je     41d36c <strcmp@plt+0x19bd4>
  41d32e:	cmp    ebp,0x2
  41d331:	jne    41d38e <strcmp@plt+0x19bf6>
  41d333:	mov    ecx,DWORD PTR [r15]
  41d336:	mov    DWORD PTR [rbx+0x8],ecx
  41d339:	mov    ecx,0x20
  41d33e:	jmp    41d37b <strcmp@plt+0x19be3>
  41d340:	mov    edi,0x18
  41d345:	call   431d90 <strcmp@plt+0x2e5f8>
  41d34a:	test   rax,rax
  41d34d:	je     41d39a <strcmp@plt+0x19c02>
  41d34f:	mov    rbx,rax
  41d352:	vxorps xmm0,xmm0,xmm0
  41d356:	vmovups XMMWORD PTR [rax],xmm0
  41d35a:	mov    QWORD PTR [rax+0x10],0x0
  41d362:	mov    eax,0x1
  41d367:	cmp    ebp,0xa
  41d36a:	jne    41d32e <strcmp@plt+0x19b96>
  41d36c:	vmovups xmm0,XMMWORD PTR [r15]
  41d371:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  41d376:	mov    ecx,0x80
  41d37b:	test   r14d,r14d
  41d37e:	cmovns ecx,r14d
  41d382:	mov    WORD PTR [rbx+0x2],cx
  41d386:	mov    WORD PTR [rbx],bp
  41d389:	mov    DWORD PTR [rbx+0x4],eax
  41d38c:	jmp    41d3af <strcmp@plt+0x19c17>
  41d38e:	mov    rdi,rbx
  41d391:	call   403790 <free@plt>
  41d396:	xor    ebx,ebx
  41d398:	jmp    41d3af <strcmp@plt+0x19c17>
  41d39a:	lea    rsi,[rip+0x2b1f9]        # 44859a <strcmp@plt+0x44e02>
  41d3a1:	xor    ebx,ebx
  41d3a3:	mov    edi,0x18
  41d3a8:	xor    eax,eax
  41d3aa:	call   403070 <syslog@plt>
  41d3af:	mov    rax,rbx
  41d3b2:	add    rsp,0x8
  41d3b6:	pop    rbx
  41d3b7:	pop    r14
  41d3b9:	pop    r15
  41d3bb:	pop    rbp
  41d3bc:	ret    
  41d3bd:	nop    DWORD PTR [rax]
  41d3c0:	push   rbp
  41d3c1:	push   r15
  41d3c3:	push   r14
  41d3c5:	push   rbx
  41d3c6:	push   rax
  41d3c7:	mov    r14d,edx
  41d3ca:	mov    r15,rsi
  41d3cd:	mov    ebp,edi
  41d3cf:	mov    edi,0x18
  41d3d4:	call   431d90 <strcmp@plt+0x2e5f8>
  41d3d9:	test   rax,rax
  41d3dc:	je     41d408 <strcmp@plt+0x19c70>
  41d3de:	mov    rbx,rax
  41d3e1:	vxorps xmm0,xmm0,xmm0
  41d3e5:	vmovups XMMWORD PTR [rax],xmm0
  41d3e9:	mov    QWORD PTR [rax+0x10],0x0
  41d3f1:	cmp    ebp,0xa
  41d3f4:	je     41d41f <strcmp@plt+0x19c87>
  41d3f6:	cmp    ebp,0x2
  41d3f9:	jne    41d445 <strcmp@plt+0x19cad>
  41d3fb:	mov    eax,DWORD PTR [r15]
  41d3fe:	mov    DWORD PTR [rbx+0x8],eax
  41d401:	mov    eax,0x20
  41d406:	jmp    41d42e <strcmp@plt+0x19c96>
  41d408:	lea    rsi,[rip+0x2b18b]        # 44859a <strcmp@plt+0x44e02>
  41d40f:	xor    ebx,ebx
  41d411:	mov    edi,0x18
  41d416:	xor    eax,eax
  41d418:	call   403070 <syslog@plt>
  41d41d:	jmp    41d44f <strcmp@plt+0x19cb7>
  41d41f:	vmovups xmm0,XMMWORD PTR [r15]
  41d424:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  41d429:	mov    eax,0x80
  41d42e:	test   r14d,r14d
  41d431:	cmovns eax,r14d
  41d435:	mov    WORD PTR [rbx+0x2],ax
  41d439:	mov    WORD PTR [rbx],bp
  41d43c:	mov    DWORD PTR [rbx+0x4],0x1
  41d443:	jmp    41d44f <strcmp@plt+0x19cb7>
  41d445:	mov    rdi,rbx
  41d448:	call   403790 <free@plt>
  41d44d:	xor    ebx,ebx
  41d44f:	mov    rax,rbx
  41d452:	add    rsp,0x8
  41d456:	pop    rbx
  41d457:	pop    r14
  41d459:	pop    r15
  41d45b:	pop    rbp
  41d45c:	ret    
  41d45d:	nop    DWORD PTR [rax]
  41d460:	push   rbp
  41d461:	push   r15
  41d463:	push   r14
  41d465:	push   r13
  41d467:	push   r12
  41d469:	push   rbx
  41d46a:	sub    rsp,0x418
  41d471:	test   rsi,rsi
  41d474:	je     41d6aa <strcmp@plt+0x19f12>
  41d47a:	mov    rbx,rsi
  41d47d:	mov    r14d,edi
  41d480:	mov    r13d,0x20
  41d486:	cmp    edi,0x2
  41d489:	je     41d49b <strcmp@plt+0x19d03>
  41d48b:	cmp    r14d,0xa
  41d48f:	jne    41d6c1 <strcmp@plt+0x19f29>
  41d495:	mov    r13d,0x80
  41d49b:	mov    rdi,rbx
  41d49e:	mov    esi,0x2f
  41d4a3:	call   403190 <strchr@plt>
  41d4a8:	test   rax,rax
  41d4ab:	je     41d4f5 <strcmp@plt+0x19d5d>
  41d4ad:	mov    rbp,rax
  41d4b0:	lea    rdi,[rax+0x1]
  41d4b4:	xor    esi,esi
  41d4b6:	mov    edx,0xa
  41d4bb:	call   403580 <strtol@plt>
  41d4c0:	sub    rbp,rbx
  41d4c3:	cmp    rbp,0x400
  41d4ca:	jge    41d758 <strcmp@plt+0x19fc0>
  41d4d0:	mov    r15,rax
  41d4d3:	lea    r12,[rsp+0x10]
  41d4d8:	mov    rdi,r12
  41d4db:	mov    rsi,rbx
  41d4de:	mov    rdx,rbp
  41d4e1:	call   403330 <memcpy@plt>
  41d4e6:	mov    BYTE PTR [rsp+rbp*1+0x10],0x0
  41d4eb:	cmp    r15,r13
  41d4ee:	cmovbe r13,r15
  41d4f2:	mov    rbx,r12
  41d4f5:	cmp    r14d,0xa
  41d4f9:	je     41d64f <strcmp@plt+0x19eb7>
  41d4ff:	cmp    r14d,0x2
  41d503:	jne    41d6aa <strcmp@plt+0x19f12>
  41d509:	mov    DWORD PTR [rsp],0x0
  41d510:	movsx  rbp,BYTE PTR [rbx]
  41d514:	call   403430 <__ctype_b_loc@plt>
  41d519:	mov    rax,QWORD PTR [rax]
  41d51c:	test   BYTE PTR [rax+rbp*2+0x1],0x8
  41d521:	je     41d6aa <strcmp@plt+0x19f12>
  41d527:	add    rbx,0x4
  41d52b:	xor    edx,edx
  41d52d:	xor    ecx,ecx
  41d52f:	nop
  41d530:	movsx  esi,bpl
  41d534:	lea    ecx,[rcx+rcx*4]
  41d537:	lea    ecx,[rsi+rcx*2]
  41d53a:	add    ecx,0xffffffd0
  41d53d:	cmp    ecx,0xff
  41d543:	jg     41d6aa <strcmp@plt+0x19f12>
  41d549:	movsx  rbp,BYTE PTR [rbx-0x3]
  41d54e:	test   rbp,rbp
  41d551:	je     41d6e5 <strcmp@plt+0x19f4d>
  41d557:	inc    rbx
  41d55a:	test   BYTE PTR [rax+rbp*2+0x1],0x8
  41d55f:	jne    41d530 <strcmp@plt+0x19d98>
  41d561:	mov    BYTE PTR [rsp],cl
  41d564:	cmp    bpl,0x2e
  41d568:	jne    41d6aa <strcmp@plt+0x19f12>
  41d56e:	movsx  rdx,BYTE PTR [rbx-0x3]
  41d573:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  41d578:	je     41d6aa <strcmp@plt+0x19f12>
  41d57e:	xor    ecx,ecx
  41d580:	movsx  edx,dl
  41d583:	lea    ecx,[rcx+rcx*4]
  41d586:	lea    ecx,[rdx+rcx*2]
  41d589:	add    ecx,0xffffffd0
  41d58c:	cmp    ecx,0xff
  41d592:	jg     41d6aa <strcmp@plt+0x19f12>
  41d598:	movsx  rdx,BYTE PTR [rbx-0x2]
  41d59d:	test   rdx,rdx
  41d5a0:	je     41d6e0 <strcmp@plt+0x19f48>
  41d5a6:	inc    rbx
  41d5a9:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  41d5ae:	jne    41d580 <strcmp@plt+0x19de8>
  41d5b0:	mov    BYTE PTR [rsp+0x1],cl
  41d5b4:	cmp    dl,0x2e
  41d5b7:	jne    41d6aa <strcmp@plt+0x19f12>
  41d5bd:	movsx  rdx,BYTE PTR [rbx-0x2]
  41d5c2:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  41d5c7:	je     41d6aa <strcmp@plt+0x19f12>
  41d5cd:	xor    ecx,ecx
  41d5cf:	movsx  edx,dl
  41d5d2:	lea    ecx,[rcx+rcx*4]
  41d5d5:	lea    ecx,[rdx+rcx*2]
  41d5d8:	add    ecx,0xffffffd0
  41d5db:	cmp    ecx,0xff
  41d5e1:	jg     41d6aa <strcmp@plt+0x19f12>
  41d5e7:	movsx  rdx,BYTE PTR [rbx-0x1]
  41d5ec:	test   rdx,rdx
  41d5ef:	je     41d74a <strcmp@plt+0x19fb2>
  41d5f5:	inc    rbx
  41d5f8:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  41d5fd:	jne    41d5cf <strcmp@plt+0x19e37>
  41d5ff:	mov    BYTE PTR [rsp+0x2],cl
  41d603:	cmp    dl,0x2e
  41d606:	jne    41d6aa <strcmp@plt+0x19f12>
  41d60c:	movsx  rdx,BYTE PTR [rbx-0x1]
  41d611:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  41d616:	je     41d6aa <strcmp@plt+0x19f12>
  41d61c:	xor    ecx,ecx
  41d61e:	movsx  edx,dl
  41d621:	lea    ecx,[rcx+rcx*4]
  41d624:	lea    ecx,[rdx+rcx*2]
  41d627:	add    ecx,0xffffffd0
  41d62a:	cmp    ecx,0xff
  41d630:	jg     41d6aa <strcmp@plt+0x19f12>
  41d632:	movsx  rdx,BYTE PTR [rbx]
  41d636:	test   rdx,rdx
  41d639:	je     41d751 <strcmp@plt+0x19fb9>
  41d63f:	inc    rbx
  41d642:	test   BYTE PTR [rax+rdx*2+0x1],0x8
  41d647:	jne    41d61e <strcmp@plt+0x19e86>
  41d649:	mov    BYTE PTR [rsp+0x3],cl
  41d64d:	jmp    41d6aa <strcmp@plt+0x19f12>
  41d64f:	mov    rdx,rsp
  41d652:	mov    edi,0xa
  41d657:	mov    rsi,rbx
  41d65a:	call   403760 <inet_pton@plt>
  41d65f:	test   eax,eax
  41d661:	jle    41d6aa <strcmp@plt+0x19f12>
  41d663:	mov    edi,0x18
  41d668:	call   431d90 <strcmp@plt+0x2e5f8>
  41d66d:	test   rax,rax
  41d670:	je     41d730 <strcmp@plt+0x19f98>
  41d676:	mov    rbx,rax
  41d679:	vxorps xmm0,xmm0,xmm0
  41d67d:	vmovups XMMWORD PTR [rax],xmm0
  41d681:	mov    QWORD PTR [rax+0x10],0x0
  41d689:	vmovups xmm0,XMMWORD PTR [rsp]
  41d68e:	vmovups XMMWORD PTR [rax+0x8],xmm0
  41d693:	test   r13d,r13d
  41d696:	mov    eax,0x80
  41d69b:	cmovns eax,r13d
  41d69f:	mov    WORD PTR [rbx+0x2],ax
  41d6a3:	mov    WORD PTR [rbx],0xa
  41d6a8:	jmp    41d724 <strcmp@plt+0x19f8c>
  41d6aa:	xor    ebx,ebx
  41d6ac:	mov    rax,rbx
  41d6af:	add    rsp,0x418
  41d6b6:	pop    rbx
  41d6b7:	pop    r12
  41d6b9:	pop    r13
  41d6bb:	pop    r14
  41d6bd:	pop    r15
  41d6bf:	pop    rbp
  41d6c0:	ret    
  41d6c1:	mov    rax,QWORD PTR [rip+0x468e0]        # 463fa8 <strcmp@plt+0x60810>
  41d6c8:	mov    rdi,QWORD PTR [rax]
  41d6cb:	lea    rsi,[rip+0x2aeef]        # 4485c1 <strcmp@plt+0x44e29>
  41d6d2:	xor    ebx,ebx
  41d6d4:	mov    edx,r14d
  41d6d7:	xor    eax,eax
  41d6d9:	call   4035a0 <fprintf@plt>
  41d6de:	jmp    41d6ac <strcmp@plt+0x19f14>
  41d6e0:	mov    edx,0x1
  41d6e5:	mov    BYTE PTR [rsp+rdx*1],cl
  41d6e8:	mov    ebp,DWORD PTR [rsp]
  41d6eb:	mov    edi,0x18
  41d6f0:	call   431d90 <strcmp@plt+0x2e5f8>
  41d6f5:	test   rax,rax
  41d6f8:	je     41d730 <strcmp@plt+0x19f98>
  41d6fa:	mov    rbx,rax
  41d6fd:	mov    DWORD PTR [rax+0x14],0x0
  41d704:	mov    QWORD PTR [rax+0xc],0x0
  41d70c:	mov    DWORD PTR [rax+0x8],ebp
  41d70f:	test   r13d,r13d
  41d712:	mov    eax,0x20
  41d717:	cmovns eax,r13d
  41d71b:	mov    WORD PTR [rbx+0x2],ax
  41d71f:	mov    WORD PTR [rbx],0x2
  41d724:	mov    DWORD PTR [rbx+0x4],0x1
  41d72b:	jmp    41d6ac <strcmp@plt+0x19f14>
  41d730:	lea    rsi,[rip+0x2ae63]        # 44859a <strcmp@plt+0x44e02>
  41d737:	xor    ebx,ebx
  41d739:	mov    edi,0x18
  41d73e:	xor    eax,eax
  41d740:	call   403070 <syslog@plt>
  41d745:	jmp    41d6ac <strcmp@plt+0x19f14>
  41d74a:	mov    edx,0x2
  41d74f:	jmp    41d6e5 <strcmp@plt+0x19f4d>
  41d751:	mov    edx,0x3
  41d756:	jmp    41d6e5 <strcmp@plt+0x19f4d>
  41d758:	lea    rdi,[rip+0x2ae74]        # 4485d3 <strcmp@plt+0x44e3b>
  41d75f:	lea    rsi,[rip+0x2ad78]        # 4484de <strcmp@plt+0x44d46>
  41d766:	lea    rcx,[rip+0x2ae7c]        # 4485e9 <strcmp@plt+0x44e51>
  41d76d:	mov    edx,0xfe
  41d772:	call   4032b0 <__assert_fail@plt>
  41d777:	nop    WORD PTR [rax+rax*1+0x0]
  41d780:	push   rbp
  41d781:	push   r14
  41d783:	push   rbx
  41d784:	test   rdi,rdi
  41d787:	je     41d818 <strcmp@plt+0x1a080>
  41d78d:	mov    rbx,rdi
  41d790:	mov    eax,DWORD PTR [rdi+0x4]
  41d793:	test   eax,eax
  41d795:	je     41d79e <strcmp@plt+0x1a006>
  41d797:	inc    eax
  41d799:	mov    DWORD PTR [rbx+0x4],eax
  41d79c:	jmp    41d81a <strcmp@plt+0x1a082>
  41d79e:	movzx  ebp,WORD PTR [rbx]
  41d7a1:	movzx  r14d,WORD PTR [rbx+0x2]
  41d7a6:	mov    edi,0x18
  41d7ab:	call   431d90 <strcmp@plt+0x2e5f8>
  41d7b0:	test   rax,rax
  41d7b3:	je     41d7dc <strcmp@plt+0x1a044>
  41d7b5:	add    rbx,0x8
  41d7b9:	vxorps xmm0,xmm0,xmm0
  41d7bd:	vmovups XMMWORD PTR [rax],xmm0
  41d7c1:	mov    QWORD PTR [rax+0x10],0x0
  41d7c9:	cmp    bp,0xa
  41d7cd:	je     41d7f3 <strcmp@plt+0x1a05b>
  41d7cf:	cmp    bp,0x2
  41d7d3:	jne    41d810 <strcmp@plt+0x1a078>
  41d7d5:	mov    ecx,DWORD PTR [rbx]
  41d7d7:	mov    DWORD PTR [rax+0x8],ecx
  41d7da:	jmp    41d7fc <strcmp@plt+0x1a064>
  41d7dc:	lea    rsi,[rip+0x2adb7]        # 44859a <strcmp@plt+0x44e02>
  41d7e3:	xor    ebx,ebx
  41d7e5:	mov    edi,0x18
  41d7ea:	xor    eax,eax
  41d7ec:	call   403070 <syslog@plt>
  41d7f1:	jmp    41d81a <strcmp@plt+0x1a082>
  41d7f3:	vmovups xmm0,XMMWORD PTR [rbx]
  41d7f7:	vmovups XMMWORD PTR [rax+0x8],xmm0
  41d7fc:	mov    WORD PTR [rax+0x2],r14w
  41d801:	mov    WORD PTR [rax],bp
  41d804:	mov    DWORD PTR [rax+0x4],0x1
  41d80b:	mov    rbx,rax
  41d80e:	jmp    41d81a <strcmp@plt+0x1a082>
  41d810:	mov    rdi,rax
  41d813:	call   403790 <free@plt>
  41d818:	xor    ebx,ebx
  41d81a:	mov    rax,rbx
  41d81d:	pop    rbx
  41d81e:	pop    r14
  41d820:	pop    rbp
  41d821:	ret    
  41d822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d82c:	nop    DWORD PTR [rax+0x0]
  41d830:	push   rax
  41d831:	test   rdi,rdi
  41d834:	je     41d84e <strcmp@plt+0x1a0b6>
  41d836:	mov    eax,DWORD PTR [rdi+0x4]
  41d839:	test   eax,eax
  41d83b:	jle    41d850 <strcmp@plt+0x1a0b8>
  41d83d:	lea    ecx,[rax-0x1]
  41d840:	mov    DWORD PTR [rdi+0x4],ecx
  41d843:	cmp    eax,0x1
  41d846:	jne    41d84e <strcmp@plt+0x1a0b6>
  41d848:	pop    rax
  41d849:	jmp    403790 <free@plt>
  41d84e:	pop    rax
  41d84f:	ret    
  41d850:	lea    rdi,[rip+0x2adb6]        # 44860d <strcmp@plt+0x44e75>
  41d857:	lea    rsi,[rip+0x2ac80]        # 4484de <strcmp@plt+0x44d46>
  41d85e:	lea    rcx,[rip+0x2adbe]        # 448623 <strcmp@plt+0x44e8b>
  41d865:	mov    edx,0x12d
  41d86a:	call   4032b0 <__assert_fail@plt>
  41d86f:	nop
  41d870:	push   rbx
  41d871:	mov    ebx,edi
  41d873:	mov    edi,0x1
  41d878:	mov    esi,0x10
  41d87d:	call   431d10 <strcmp@plt+0x2e578>
  41d882:	mov    DWORD PTR [rax+0x8],ebx
  41d885:	mov    QWORD PTR [rax],0x0
  41d88c:	mov    DWORD PTR [rax+0xc],0x0
  41d893:	cmp    ebx,0x81
  41d899:	jae    41d8a3 <strcmp@plt+0x1a10b>
  41d89b:	inc    DWORD PTR [rip+0x4c753]        # 469ff4 <strcmp@plt+0x6685c>
  41d8a1:	pop    rbx
  41d8a2:	ret    
  41d8a3:	lea    rdi,[rip+0x2ad97]        # 448641 <strcmp@plt+0x44ea9>
  41d8aa:	lea    rsi,[rip+0x2ac2d]        # 4484de <strcmp@plt+0x44d46>
  41d8b1:	lea    rcx,[rip+0x2ada5]        # 44865d <strcmp@plt+0x44ec5>
  41d8b8:	mov    edx,0x147
  41d8bd:	call   4032b0 <__assert_fail@plt>
  41d8c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d8cc:	nop    DWORD PTR [rax+0x0]
  41d8d0:	push   rbp
  41d8d1:	push   r15
  41d8d3:	push   r14
  41d8d5:	push   r13
  41d8d7:	push   r12
  41d8d9:	push   rbx
  41d8da:	sub    rsp,0x408
  41d8e1:	test   rdi,rdi
  41d8e4:	je     41da09 <strcmp@plt+0x1a271>
  41d8ea:	mov    r15,rdi
  41d8ed:	mov    rbx,QWORD PTR [rdi]
  41d8f0:	test   rbx,rbx
  41d8f3:	je     41d9b1 <strcmp@plt+0x1a219>
  41d8f9:	mov    r14,rsi
  41d8fc:	xor    r12d,r12d
  41d8ff:	jmp    41d928 <strcmp@plt+0x1a190>
  41d901:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d90b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d910:	test   rbp,rbp
  41d913:	je     41d99f <strcmp@plt+0x1a207>
  41d919:	mov    r13,rbp
  41d91c:	mov    rbx,r13
  41d91f:	test   r13,r13
  41d922:	je     41d9b5 <strcmp@plt+0x1a21d>
  41d928:	mov    rdi,QWORD PTR [rbx+0x8]
  41d92c:	mov    r13,QWORD PTR [rbx+0x10]
  41d930:	mov    rbp,QWORD PTR [rbx+0x18]
  41d934:	test   rdi,rdi
  41d937:	je     41d970 <strcmp@plt+0x1a1d8>
  41d939:	mov    eax,DWORD PTR [rdi+0x4]
  41d93c:	test   eax,eax
  41d93e:	jle    41d9cb <strcmp@plt+0x1a233>
  41d944:	lea    ecx,[rax-0x1]
  41d947:	mov    DWORD PTR [rdi+0x4],ecx
  41d94a:	cmp    eax,0x1
  41d94d:	jne    41d954 <strcmp@plt+0x1a1bc>
  41d94f:	call   403790 <free@plt>
  41d954:	test   r14,r14
  41d957:	je     41d977 <strcmp@plt+0x1a1df>
  41d959:	mov    rdi,QWORD PTR [rbx+0x28]
  41d95d:	test   rdi,rdi
  41d960:	je     41d977 <strcmp@plt+0x1a1df>
  41d962:	xor    eax,eax
  41d964:	call   r14
  41d967:	jmp    41d977 <strcmp@plt+0x1a1df>
  41d969:	nop    DWORD PTR [rax+0x0]
  41d970:	cmp    QWORD PTR [rbx+0x28],0x0
  41d975:	jne    41d9ea <strcmp@plt+0x1a252>
  41d977:	mov    rdi,rbx
  41d97a:	call   403790 <free@plt>
  41d97f:	mov    eax,DWORD PTR [r15+0xc]
  41d983:	dec    eax
  41d985:	mov    DWORD PTR [r15+0xc],eax
  41d989:	test   r13,r13
  41d98c:	je     41d910 <strcmp@plt+0x1a178>
  41d98e:	test   rbp,rbp
  41d991:	je     41d91c <strcmp@plt+0x1a184>
  41d993:	mov    QWORD PTR [rsp+r12*8],rbp
  41d997:	inc    r12
  41d99a:	jmp    41d91c <strcmp@plt+0x1a184>
  41d99f:	test   r12,r12
  41d9a2:	je     41d9b5 <strcmp@plt+0x1a21d>
  41d9a4:	mov    r13,QWORD PTR [rsp+r12*8-0x8]
  41d9a9:	dec    r12
  41d9ac:	jmp    41d91c <strcmp@plt+0x1a184>
  41d9b1:	mov    eax,DWORD PTR [r15+0xc]
  41d9b5:	test   eax,eax
  41d9b7:	jne    41da28 <strcmp@plt+0x1a290>
  41d9b9:	add    rsp,0x408
  41d9c0:	pop    rbx
  41d9c1:	pop    r12
  41d9c3:	pop    r13
  41d9c5:	pop    r14
  41d9c7:	pop    r15
  41d9c9:	pop    rbp
  41d9ca:	ret    
  41d9cb:	lea    rdi,[rip+0x2ac3b]        # 44860d <strcmp@plt+0x44e75>
  41d9d2:	lea    rsi,[rip+0x2ab05]        # 4484de <strcmp@plt+0x44d46>
  41d9d9:	lea    rcx,[rip+0x2ac43]        # 448623 <strcmp@plt+0x44e8b>
  41d9e0:	mov    edx,0x12d
  41d9e5:	call   4032b0 <__assert_fail@plt>
  41d9ea:	lea    rdi,[rip+0x2acca]        # 4486bb <strcmp@plt+0x44f23>
  41d9f1:	lea    rsi,[rip+0x2aae6]        # 4484de <strcmp@plt+0x44d46>
  41d9f8:	lea    rcx,[rip+0x2ac8a]        # 448689 <strcmp@plt+0x44ef1>
  41d9ff:	mov    edx,0x164
  41da04:	call   4032b0 <__assert_fail@plt>
  41da09:	lea    rdi,[rip+0x2ac70]        # 448680 <strcmp@plt+0x44ee8>
  41da10:	lea    rsi,[rip+0x2aac7]        # 4484de <strcmp@plt+0x44d46>
  41da17:	lea    rcx,[rip+0x2ac6b]        # 448689 <strcmp@plt+0x44ef1>
  41da1e:	mov    edx,0x154
  41da23:	call   4032b0 <__assert_fail@plt>
  41da28:	lea    rdi,[rip+0x2ac9e]        # 4486cd <strcmp@plt+0x44f35>
  41da2f:	lea    rsi,[rip+0x2aaa8]        # 4484de <strcmp@plt+0x44d46>
  41da36:	lea    rcx,[rip+0x2ac4c]        # 448689 <strcmp@plt+0x44ef1>
  41da3d:	mov    edx,0x177
  41da42:	call   4032b0 <__assert_fail@plt>
  41da47:	nop    WORD PTR [rax+rax*1+0x0]
  41da50:	push   rbx
  41da51:	mov    rbx,rdi
  41da54:	call   41d8d0 <strcmp@plt+0x1a138>
  41da59:	mov    rdi,rbx
  41da5c:	call   403790 <free@plt>
  41da61:	dec    DWORD PTR [rip+0x4c58d]        # 469ff4 <strcmp@plt+0x6685c>
  41da67:	pop    rbx
  41da68:	ret    
  41da69:	nop    DWORD PTR [rax+0x0]
  41da70:	push   r15
  41da72:	push   r14
  41da74:	push   rbx
  41da75:	sub    rsp,0x410
  41da7c:	test   rsi,rsi
  41da7f:	je     41daf9 <strcmp@plt+0x1a361>
  41da81:	mov    rbx,QWORD PTR [rdi]
  41da84:	test   rbx,rbx
  41da87:	je     41daec <strcmp@plt+0x1a354>
  41da89:	mov    r14,rsi
  41da8c:	xor    r15d,r15d
  41da8f:	jmp    41dab0 <strcmp@plt+0x1a318>
  41da91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41da9b:	nop    DWORD PTR [rax+rax*1+0x0]
  41daa0:	test   rcx,rcx
  41daa3:	je     41dadd <strcmp@plt+0x1a345>
  41daa5:	mov    rax,rcx
  41daa8:	mov    rbx,rax
  41daab:	test   rax,rax
  41daae:	je     41daec <strcmp@plt+0x1a354>
  41dab0:	mov    rdi,QWORD PTR [rbx+0x8]
  41dab4:	test   rdi,rdi
  41dab7:	je     41dac2 <strcmp@plt+0x1a32a>
  41dab9:	mov    rsi,QWORD PTR [rbx+0x28]
  41dabd:	xor    eax,eax
  41dabf:	call   r14
  41dac2:	mov    rax,QWORD PTR [rbx+0x10]
  41dac6:	mov    rcx,QWORD PTR [rbx+0x18]
  41daca:	test   rax,rax
  41dacd:	je     41daa0 <strcmp@plt+0x1a308>
  41dacf:	test   rcx,rcx
  41dad2:	je     41daa8 <strcmp@plt+0x1a310>
  41dad4:	mov    QWORD PTR [rsp+r15*8],rcx
  41dad8:	inc    r15
  41dadb:	jmp    41daa8 <strcmp@plt+0x1a310>
  41dadd:	test   r15,r15
  41dae0:	je     41daec <strcmp@plt+0x1a354>
  41dae2:	mov    rax,QWORD PTR [rsp+r15*8-0x8]
  41dae7:	dec    r15
  41daea:	jmp    41daa8 <strcmp@plt+0x1a310>
  41daec:	add    rsp,0x410
  41daf3:	pop    rbx
  41daf4:	pop    r14
  41daf6:	pop    r15
  41daf8:	ret    
  41daf9:	lea    rdi,[rip+0x2abec]        # 4486ec <strcmp@plt+0x44f54>
  41db00:	lea    rsi,[rip+0x2a9d7]        # 4484de <strcmp@plt+0x44d46>
  41db07:	lea    rcx,[rip+0x2abe3]        # 4486f1 <strcmp@plt+0x44f59>
  41db0e:	mov    edx,0x18d
  41db13:	call   4032b0 <__assert_fail@plt>
  41db18:	nop    DWORD PTR [rax+rax*1+0x0]
  41db20:	push   r15
  41db22:	push   r14
  41db24:	push   rbx
  41db25:	test   rsi,rsi
  41db28:	je     41db7d <strcmp@plt+0x1a3e5>
  41db2a:	mov    r14,rsi
  41db2d:	mov    rbx,rdi
  41db30:	mov    rdi,QWORD PTR [rdi+0x10]
  41db34:	test   rdi,rdi
  41db37:	je     41db46 <strcmp@plt+0x1a3ae>
  41db39:	mov    rsi,r14
  41db3c:	call   41db20 <strcmp@plt+0x1a388>
  41db41:	mov    r15,rax
  41db44:	jmp    41db49 <strcmp@plt+0x1a3b1>
  41db46:	xor    r15d,r15d
  41db49:	mov    rdi,QWORD PTR [rbx+0x8]
  41db4d:	test   rdi,rdi
  41db50:	je     41db5e <strcmp@plt+0x1a3c6>
  41db52:	mov    rsi,QWORD PTR [rbx+0x28]
  41db56:	xor    eax,eax
  41db58:	call   r14
  41db5b:	inc    r15
  41db5e:	mov    rdi,QWORD PTR [rbx+0x18]
  41db62:	test   rdi,rdi
  41db65:	je     41db74 <strcmp@plt+0x1a3dc>
  41db67:	mov    rsi,r14
  41db6a:	call   41db20 <strcmp@plt+0x1a388>
  41db6f:	add    rax,r15
  41db72:	jmp    41db77 <strcmp@plt+0x1a3df>
  41db74:	mov    rax,r15
  41db77:	pop    rbx
  41db78:	pop    r14
  41db7a:	pop    r15
  41db7c:	ret    
  41db7d:	lea    rdi,[rip+0x2ab68]        # 4486ec <strcmp@plt+0x44f54>
  41db84:	lea    rsi,[rip+0x2a953]        # 4484de <strcmp@plt+0x44d46>
  41db8b:	lea    rcx,[rip+0x2ab93]        # 448725 <strcmp@plt+0x44f8d>
  41db92:	mov    edx,0x198
  41db97:	call   4032b0 <__assert_fail@plt>
  41db9c:	nop    DWORD PTR [rax+0x0]
  41dba0:	push   rbp
  41dba1:	push   r15
  41dba3:	push   r14
  41dba5:	push   r12
  41dba7:	push   rbx
  41dba8:	test   rdi,rdi
  41dbab:	je     41dc7c <strcmp@plt+0x1a4e4>
  41dbb1:	mov    r14,rsi
  41dbb4:	test   rsi,rsi
  41dbb7:	je     41dc9b <strcmp@plt+0x1a503>
  41dbbd:	movzx  ebp,WORD PTR [r14+0x2]
  41dbc2:	cmp    DWORD PTR [rdi+0x8],ebp
  41dbc5:	jb     41dcba <strcmp@plt+0x1a522>
  41dbcb:	mov    rbx,QWORD PTR [rdi]
  41dbce:	test   rbx,rbx
  41dbd1:	je     41dc49 <strcmp@plt+0x1a4b1>
  41dbd3:	mov    r15d,ebp
  41dbd6:	add    r14,0x8
  41dbda:	mov    eax,0x80
  41dbdf:	nop
  41dbe0:	mov    ecx,DWORD PTR [rbx]
  41dbe2:	cmp    ecx,ebp
  41dbe4:	jae    41dc0e <strcmp@plt+0x1a476>
  41dbe6:	mov    rdx,rcx
  41dbe9:	shr    rdx,0x3
  41dbed:	movzx  edx,BYTE PTR [r14+rdx*1]
  41dbf2:	and    cl,0x7
  41dbf5:	shrx   ecx,eax,ecx
  41dbfa:	xor    esi,esi
  41dbfc:	test   ecx,edx
  41dbfe:	setne  sil
  41dc02:	mov    rbx,QWORD PTR [rbx+rsi*8+0x10]
  41dc07:	test   rbx,rbx
  41dc0a:	jne    41dbe0 <strcmp@plt+0x1a448>
  41dc0c:	jmp    41dc49 <strcmp@plt+0x1a4b1>
  41dc0e:	cmp    ecx,ebp
  41dc10:	ja     41dc49 <strcmp@plt+0x1a4b1>
  41dc12:	mov    r12,QWORD PTR [rbx+0x8]
  41dc16:	test   r12,r12
  41dc19:	je     41dc49 <strcmp@plt+0x1a4b1>
  41dc1b:	cmp    ecx,ebp
  41dc1d:	jne    41dcd9 <strcmp@plt+0x1a541>
  41dc23:	cmp    bp,WORD PTR [r12+0x2]
  41dc29:	jne    41dcf8 <strcmp@plt+0x1a560>
  41dc2f:	add    r12,0x8
  41dc33:	shr    r15,0x3
  41dc37:	mov    rdi,r12
  41dc3a:	mov    rsi,r14
  41dc3d:	mov    rdx,r15
  41dc40:	call   4033f0 <bcmp@plt>
  41dc45:	test   eax,eax
  41dc47:	je     41dc57 <strcmp@plt+0x1a4bf>
  41dc49:	xor    ebx,ebx
  41dc4b:	mov    rax,rbx
  41dc4e:	pop    rbx
  41dc4f:	pop    r12
  41dc51:	pop    r14
  41dc53:	pop    r15
  41dc55:	pop    rbp
  41dc56:	ret    
  41dc57:	and    ebp,0x7
  41dc5a:	je     41dc4b <strcmp@plt+0x1a4b3>
  41dc5c:	mov    al,0x8
  41dc5e:	sub    al,bpl
  41dc61:	mov    cl,BYTE PTR [r14+r15*1]
  41dc65:	xor    cl,BYTE PTR [r12+r15*1]
  41dc69:	movzx  ecx,cl
  41dc6c:	shrx   ecx,ecx,eax
  41dc71:	shlx   eax,ecx,eax
  41dc76:	test   eax,eax
  41dc78:	jne    41dc49 <strcmp@plt+0x1a4b1>
  41dc7a:	jmp    41dc4b <strcmp@plt+0x1a4b3>
  41dc7c:	lea    rdi,[rip+0x2a9fd]        # 448680 <strcmp@plt+0x44ee8>
  41dc83:	lea    rsi,[rip+0x2a854]        # 4484de <strcmp@plt+0x44d46>
  41dc8a:	lea    rcx,[rip+0x2aacf]        # 448760 <strcmp@plt+0x44fc8>
  41dc91:	mov    edx,0x1b1
  41dc96:	call   4032b0 <__assert_fail@plt>
  41dc9b:	lea    rdi,[rip+0x31b2d]        # 44f7cf <strcmp@plt+0x4c037>
  41dca2:	lea    rsi,[rip+0x2a835]        # 4484de <strcmp@plt+0x44d46>
  41dca9:	lea    rcx,[rip+0x2aab0]        # 448760 <strcmp@plt+0x44fc8>
  41dcb0:	mov    edx,0x1b2
  41dcb5:	call   4032b0 <__assert_fail@plt>
  41dcba:	lea    rdi,[rip+0x2aae5]        # 4487a6 <strcmp@plt+0x4500e>
  41dcc1:	lea    rsi,[rip+0x2a816]        # 4484de <strcmp@plt+0x44d46>
  41dcc8:	lea    rcx,[rip+0x2aa91]        # 448760 <strcmp@plt+0x44fc8>
  41dccf:	mov    edx,0x1b3
  41dcd4:	call   4032b0 <__assert_fail@plt>
  41dcd9:	lea    rdi,[rip+0x2aaea]        # 4487ca <strcmp@plt+0x45032>
  41dce0:	lea    rsi,[rip+0x2a7f7]        # 4484de <strcmp@plt+0x44d46>
  41dce7:	lea    rcx,[rip+0x2aa72]        # 448760 <strcmp@plt+0x44fc8>
  41dcee:	mov    edx,0x1e1
  41dcf3:	call   4032b0 <__assert_fail@plt>
  41dcf8:	lea    rdi,[rip+0x2aadf]        # 4487de <strcmp@plt+0x45046>
  41dcff:	lea    rsi,[rip+0x2a7d8]        # 4484de <strcmp@plt+0x44d46>
  41dd06:	lea    rcx,[rip+0x2aa53]        # 448760 <strcmp@plt+0x44fc8>
  41dd0d:	mov    edx,0x1e2
  41dd12:	call   4032b0 <__assert_fail@plt>
  41dd17:	nop    WORD PTR [rax+rax*1+0x0]
  41dd20:	push   rbp
  41dd21:	push   r15
  41dd23:	push   r14
  41dd25:	push   r13
  41dd27:	push   r12
  41dd29:	push   rbx
  41dd2a:	sub    rsp,0x418
  41dd31:	test   rdi,rdi
  41dd34:	je     41de62 <strcmp@plt+0x1a6ca>
  41dd3a:	mov    r14,rsi
  41dd3d:	test   rsi,rsi
  41dd40:	je     41de81 <strcmp@plt+0x1a6e9>
  41dd46:	movzx  ebx,WORD PTR [r14+0x2]
  41dd4b:	cmp    DWORD PTR [rdi+0x8],ebx
  41dd4e:	jb     41dea0 <strcmp@plt+0x1a708>
  41dd54:	mov    rax,QWORD PTR [rdi]
  41dd57:	xor    r15d,r15d
  41dd5a:	test   rax,rax
  41dd5d:	je     41de4d <strcmp@plt+0x1a6b5>
  41dd63:	add    r14,0x8
  41dd67:	mov    ecx,0x80
  41dd6c:	jmp    41dd97 <strcmp@plt+0x1a5ff>
  41dd6e:	xchg   ax,ax
  41dd70:	mov    rdi,rsi
  41dd73:	shr    rdi,0x3
  41dd77:	movzx  edi,BYTE PTR [r14+rdi*1]
  41dd7c:	and    sil,0x7
  41dd80:	shrx   esi,ecx,esi
  41dd85:	xor    ebp,ebp
  41dd87:	test   esi,edi
  41dd89:	setne  bpl
  41dd8d:	mov    rax,QWORD PTR [rax+rbp*8+0x10]
  41dd92:	test   rax,rax
  41dd95:	je     41ddc7 <strcmp@plt+0x1a62f>
  41dd97:	mov    esi,DWORD PTR [rax]
  41dd99:	cmp    esi,ebx
  41dd9b:	jae    41ddb1 <strcmp@plt+0x1a619>
  41dd9d:	cmp    QWORD PTR [rax+0x8],0x0
  41dda2:	je     41dd70 <strcmp@plt+0x1a5d8>
  41dda4:	movsxd rdi,r15d
  41dda7:	inc    r15d
  41ddaa:	mov    QWORD PTR [rsp+rdi*8+0x10],rax
  41ddaf:	jmp    41dd70 <strcmp@plt+0x1a5d8>
  41ddb1:	test   edx,edx
  41ddb3:	je     41ddc7 <strcmp@plt+0x1a62f>
  41ddb5:	cmp    QWORD PTR [rax+0x8],0x0
  41ddba:	je     41ddc7 <strcmp@plt+0x1a62f>
  41ddbc:	movsxd rcx,r15d
  41ddbf:	inc    r15d
  41ddc2:	mov    QWORD PTR [rsp+rcx*8+0x10],rax
  41ddc7:	test   r15d,r15d
  41ddca:	jle    41de4a <strcmp@plt+0x1a6b2>
  41ddcc:	mov    DWORD PTR [rsp+0xc],ebx
  41ddd0:	movsxd rbp,r15d
  41ddd3:	jmp    41dde8 <strcmp@plt+0x1a650>
  41ddd5:	cmp    r13w,WORD PTR [rsp+0xc]
  41dddb:	jbe    41de4d <strcmp@plt+0x1a6b5>
  41dddd:	nop    DWORD PTR [rax]
  41dde0:	dec    rbp
  41dde3:	test   rbp,rbp
  41dde6:	jle    41de4a <strcmp@plt+0x1a6b2>
  41dde8:	mov    r15,QWORD PTR [rsp+rbp*8+0x8]
  41dded:	mov    rax,QWORD PTR [r15+0x8]
  41ddf1:	lea    r12,[rax+0x8]
  41ddf5:	test   rax,rax
  41ddf8:	cmove  r12,rax
  41ddfc:	movzx  r13d,WORD PTR [rax+0x2]
  41de01:	mov    rbx,r13
  41de04:	shr    rbx,0x3
  41de08:	mov    rdi,r12
  41de0b:	mov    rsi,r14
  41de0e:	mov    rdx,rbx
  41de11:	call   4033f0 <bcmp@plt>
  41de16:	test   eax,eax
  41de18:	jne    41dde0 <strcmp@plt+0x1a648>
  41de1a:	mov    eax,r13d
  41de1d:	and    eax,0x7
  41de20:	je     41ddd5 <strcmp@plt+0x1a63d>
  41de22:	cmp    r13w,WORD PTR [rsp+0xc]
  41de28:	ja     41dde0 <strcmp@plt+0x1a648>
  41de2a:	mov    cl,0x8
  41de2c:	sub    cl,al
  41de2e:	movzx  eax,BYTE PTR [r14+rbx*1]
  41de33:	xor    al,BYTE PTR [r12+rbx*1]
  41de37:	movzx  eax,al
  41de3a:	shrx   eax,eax,ecx
  41de3f:	shlx   eax,eax,ecx
  41de44:	test   eax,eax
  41de46:	jne    41dde0 <strcmp@plt+0x1a648>
  41de48:	jmp    41de4d <strcmp@plt+0x1a6b5>
  41de4a:	xor    r15d,r15d
  41de4d:	mov    rax,r15
  41de50:	add    rsp,0x418
  41de57:	pop    rbx
  41de58:	pop    r12
  41de5a:	pop    r13
  41de5c:	pop    r14
  41de5e:	pop    r15
  41de60:	pop    rbp
  41de61:	ret    
  41de62:	lea    rdi,[rip+0x2a817]        # 448680 <strcmp@plt+0x44ee8>
  41de69:	lea    rsi,[rip+0x2a66e]        # 4484de <strcmp@plt+0x44d46>
  41de70:	lea    rcx,[rip+0x2a989]        # 448800 <strcmp@plt+0x45068>
  41de77:	mov    edx,0x1f9
  41de7c:	call   4032b0 <__assert_fail@plt>
  41de81:	lea    rdi,[rip+0x31947]        # 44f7cf <strcmp@plt+0x4c037>
  41de88:	lea    rsi,[rip+0x2a64f]        # 4484de <strcmp@plt+0x44d46>
  41de8f:	lea    rcx,[rip+0x2a96a]        # 448800 <strcmp@plt+0x45068>
  41de96:	mov    edx,0x1fa
  41de9b:	call   4032b0 <__assert_fail@plt>
  41dea0:	lea    rdi,[rip+0x2a8ff]        # 4487a6 <strcmp@plt+0x4500e>
  41dea7:	lea    rsi,[rip+0x2a630]        # 4484de <strcmp@plt+0x44d46>
  41deae:	lea    rcx,[rip+0x2a94b]        # 448800 <strcmp@plt+0x45068>
  41deb5:	mov    edx,0x1fb
  41deba:	call   4032b0 <__assert_fail@plt>
  41debf:	nop
  41dec0:	mov    edx,0x1
  41dec5:	jmp    41dd20 <strcmp@plt+0x1a588>
  41deca:	nop    WORD PTR [rax+rax*1+0x0]
  41ded0:	push   rbp
  41ded1:	push   r15
  41ded3:	push   r14
  41ded5:	push   r13
  41ded7:	push   r12
  41ded9:	push   rbx
  41deda:	sub    rsp,0x28
  41dede:	test   rdi,rdi
  41dee1:	je     41e50e <strcmp@plt+0x1ad76>
  41dee7:	mov    r15,rsi
  41deea:	test   rsi,rsi
  41deed:	je     41e52d <strcmp@plt+0x1ad95>
  41def3:	mov    r14,rdi
  41def6:	movzx  r9d,WORD PTR [r15+0x2]
  41defb:	movzx  ebp,r9w
  41deff:	mov    edx,DWORD PTR [rdi+0x8]
  41df02:	cmp    edx,ebp
  41df04:	jb     41e54c <strcmp@plt+0x1adb4>
  41df0a:	mov    rdi,QWORD PTR [r14]
  41df0d:	test   rdi,rdi
  41df10:	je     41e02b <strcmp@plt+0x1a893>
  41df16:	lea    r13,[r15+0x8]
  41df1a:	mov    esi,0x80
  41df1f:	jmp    41df39 <strcmp@plt+0x1a7a1>
  41df21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df2b:	nop    DWORD PTR [rax+rax*1+0x0]
  41df30:	mov    rdi,QWORD PTR [rax+0x10]
  41df34:	test   rdi,rdi
  41df37:	je     41df71 <strcmp@plt+0x1a7d9>
  41df39:	mov    rax,rdi
  41df3c:	mov    ecx,DWORD PTR [rdi]
  41df3e:	cmp    ecx,ebp
  41df40:	jb     41df49 <strcmp@plt+0x1a7b1>
  41df42:	cmp    QWORD PTR [rax+0x8],0x0
  41df47:	jne    41df71 <strcmp@plt+0x1a7d9>
  41df49:	cmp    ecx,edx
  41df4b:	jae    41df30 <strcmp@plt+0x1a798>
  41df4d:	mov    rdi,rcx
  41df50:	shr    rdi,0x3
  41df54:	movzx  edi,BYTE PTR [r13+rdi*1+0x0]
  41df5a:	mov    ebx,ecx
  41df5c:	and    bl,0x7
  41df5f:	shrx   ebx,esi,ebx
  41df64:	test   ebx,edi
  41df66:	je     41df30 <strcmp@plt+0x1a798>
  41df68:	mov    rdi,QWORD PTR [rax+0x18]
  41df6c:	test   rdi,rdi
  41df6f:	jne    41df39 <strcmp@plt+0x1a7a1>
  41df71:	mov    rsi,QWORD PTR [rax+0x8]
  41df75:	test   rsi,rsi
  41df78:	je     41e56b <strcmp@plt+0x1add3>
  41df7e:	cmp    ecx,ebp
  41df80:	cmovae ecx,ebp
  41df83:	test   ecx,ecx
  41df85:	je     41e06f <strcmp@plt+0x1a8d7>
  41df8b:	mov    bl,BYTE PTR [rsi+0x8]
  41df8e:	xor    r8d,r8d
  41df91:	xor    bl,BYTE PTR [r13+0x0]
  41df95:	mov    edx,0x0
  41df9a:	jne    41dfce <strcmp@plt+0x1a836>
  41df9c:	mov    edi,0x9
  41dfa1:	xor    edx,edx
  41dfa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dfad:	nop    DWORD PTR [rax]
  41dfb0:	lea    r12d,[rdx+0x8]
  41dfb4:	cmp    r12d,ecx
  41dfb7:	jae    41e072 <strcmp@plt+0x1a8da>
  41dfbd:	movzx  ebx,BYTE PTR [rsi+rdi*1]
  41dfc1:	add    edx,0x8
  41dfc4:	xor    bl,BYTE PTR [r15+rdi*1]
  41dfc8:	lea    rdi,[rdi+0x1]
  41dfcc:	je     41dfb0 <strcmp@plt+0x1a818>
  41dfce:	test   bl,bl
  41dfd0:	js     41e023 <strcmp@plt+0x1a88b>
  41dfd2:	mov    r8d,0x1
  41dfd8:	test   bl,0x40
  41dfdb:	jne    41e023 <strcmp@plt+0x1a88b>
  41dfdd:	mov    r8d,0x2
  41dfe3:	test   bl,0x20
  41dfe6:	jne    41e023 <strcmp@plt+0x1a88b>
  41dfe8:	mov    r8d,0x3
  41dfee:	test   bl,0x10
  41dff1:	jne    41e023 <strcmp@plt+0x1a88b>
  41dff3:	mov    r8d,0x4
  41dff9:	test   bl,0x8
  41dffc:	jne    41e023 <strcmp@plt+0x1a88b>
  41dffe:	mov    r8d,0x5
  41e004:	test   bl,0x4
  41e007:	jne    41e023 <strcmp@plt+0x1a88b>
  41e009:	mov    r8d,0x6
  41e00f:	test   bl,0x2
  41e012:	jne    41e023 <strcmp@plt+0x1a88b>
  41e014:	mov    r8d,0x7
  41e01a:	test   bl,0x1
  41e01d:	je     41e5ce <strcmp@plt+0x1ae36>
  41e023:	or     r8d,edx
  41e026:	mov    r12d,r8d
  41e029:	jmp    41e072 <strcmp@plt+0x1a8da>
  41e02b:	mov    edi,0x1
  41e030:	mov    esi,0x38
  41e035:	call   431d10 <strcmp@plt+0x2e578>
  41e03a:	mov    rbx,rax
  41e03d:	movzx  ebp,WORD PTR [r15+0x2]
  41e042:	mov    DWORD PTR [rax],ebp
  41e044:	mov    eax,DWORD PTR [r15+0x4]
  41e048:	test   eax,eax
  41e04a:	je     41e232 <strcmp@plt+0x1aa9a>
  41e050:	inc    eax
  41e052:	mov    DWORD PTR [r15+0x4],eax
  41e056:	mov    QWORD PTR [rbx+0x8],r15
  41e05a:	vxorps xmm0,xmm0,xmm0
  41e05e:	vmovups YMMWORD PTR [rbx+0x10],ymm0
  41e063:	mov    QWORD PTR [r14],rbx
  41e066:	inc    DWORD PTR [r14+0xc]
  41e06a:	jmp    41e46d <strcmp@plt+0x1acd5>
  41e06f:	xor    r12d,r12d
  41e072:	cmp    r12d,ecx
  41e075:	cmova  r12d,ecx
  41e079:	nop    DWORD PTR [rax+0x0]
  41e080:	mov    rbx,rax
  41e083:	mov    rax,QWORD PTR [rax+0x20]
  41e087:	test   rax,rax
  41e08a:	je     41e091 <strcmp@plt+0x1a8f9>
  41e08c:	cmp    DWORD PTR [rax],r12d
  41e08f:	jae    41e080 <strcmp@plt+0x1a8e8>
  41e091:	cmp    r12d,ebp
  41e094:	jne    41e0e5 <strcmp@plt+0x1a94d>
  41e096:	cmp    DWORD PTR [rbx],ebp
  41e098:	jne    41e0e5 <strcmp@plt+0x1a94d>
  41e09a:	cmp    QWORD PTR [rbx+0x8],0x0
  41e09f:	jne    41e46d <strcmp@plt+0x1acd5>
  41e0a5:	mov    eax,DWORD PTR [r15+0x4]
  41e0a9:	test   eax,eax
  41e0ab:	je     41e482 <strcmp@plt+0x1acea>
  41e0b1:	inc    eax
  41e0b3:	mov    DWORD PTR [r15+0x4],eax
  41e0b7:	mov    QWORD PTR [rbx+0x8],r15
  41e0bb:	cmp    QWORD PTR [rbx+0x28],0x0
  41e0c0:	je     41e46d <strcmp@plt+0x1acd5>
  41e0c6:	lea    rdi,[rip+0x2a7d1]        # 44889e <strcmp@plt+0x45106>
  41e0cd:	lea    rsi,[rip+0x2a40a]        # 4484de <strcmp@plt+0x44d46>
  41e0d4:	lea    rcx,[rip+0x2a770]        # 44884b <strcmp@plt+0x450b3>
  41e0db:	mov    edx,0x2cc
  41e0e0:	call   4032b0 <__assert_fail@plt>
  41e0e5:	mov    QWORD PTR [rsp+0x10],rsi
  41e0ea:	mov    QWORD PTR [rsp+0x20],r14
  41e0ef:	mov    edi,0x1
  41e0f4:	mov    esi,0x38
  41e0f9:	call   431d10 <strcmp@plt+0x2e578>
  41e0fe:	movzx  r14d,WORD PTR [r15+0x2]
  41e103:	mov    DWORD PTR [rax],r14d
  41e106:	mov    ecx,DWORD PTR [r15+0x4]
  41e10a:	test   ecx,ecx
  41e10c:	je     41e1c1 <strcmp@plt+0x1aa29>
  41e112:	inc    ecx
  41e114:	mov    DWORD PTR [r15+0x4],ecx
  41e118:	mov    rdx,QWORD PTR [rsp+0x10]
  41e11d:	mov    QWORD PTR [rax+0x8],r15
  41e121:	vxorps xmm0,xmm0,xmm0
  41e125:	vmovups YMMWORD PTR [rax+0x10],ymm0
  41e12a:	mov    r14,QWORD PTR [rsp+0x20]
  41e12f:	inc    DWORD PTR [r14+0xc]
  41e133:	cmp    DWORD PTR [rbx],r12d
  41e136:	jne    41e180 <strcmp@plt+0x1a9e8>
  41e138:	mov    QWORD PTR [rax+0x20],rbx
  41e13c:	cmp    r12d,DWORD PTR [r14+0x8]
  41e140:	jae    41e21b <strcmp@plt+0x1aa83>
  41e146:	mov    ecx,r12d
  41e149:	shr    rcx,0x3
  41e14d:	movzx  edx,BYTE PTR [r13+rcx*1+0x0]
  41e153:	and    r12b,0x7
  41e157:	mov    ecx,0x80
  41e15c:	shrx   ecx,ecx,r12d
  41e161:	test   ecx,edx
  41e163:	je     41e21b <strcmp@plt+0x1aa83>
  41e169:	cmp    QWORD PTR [rbx+0x18],0x0
  41e16e:	jne    41e5ac <strcmp@plt+0x1ae14>
  41e174:	mov    QWORD PTR [rbx+0x18],rax
  41e178:	mov    rbx,rax
  41e17b:	jmp    41e46d <strcmp@plt+0x1acd5>
  41e180:	cmp    r12d,ebp
  41e183:	jne    41e281 <strcmp@plt+0x1aae9>
  41e189:	cmp    DWORD PTR [r14+0x8],ebp
  41e18d:	jbe    41e2e7 <strcmp@plt+0x1ab4f>
  41e193:	mov    rcx,rbp
  41e196:	shr    rcx,0x3
  41e19a:	movzx  edx,BYTE PTR [rdx+rcx*1+0x8]
  41e19f:	and    bpl,0x7
  41e1a3:	mov    ecx,0x80
  41e1a8:	shrx   ecx,ecx,ebp
  41e1ad:	test   ecx,edx
  41e1af:	je     41e2e7 <strcmp@plt+0x1ab4f>
  41e1b5:	mov    rcx,rax
  41e1b8:	add    rcx,0x18
  41e1bc:	jmp    41e2ee <strcmp@plt+0x1ab56>
  41e1c1:	mov    QWORD PTR [rsp+0x18],rax
  41e1c6:	movzx  eax,WORD PTR [r15]
  41e1ca:	mov    WORD PTR [rsp+0xe],ax
  41e1cf:	mov    edi,0x18
  41e1d4:	call   431d90 <strcmp@plt+0x2e5f8>
  41e1d9:	test   rax,rax
  41e1dc:	je     41e340 <strcmp@plt+0x1aba8>
  41e1e2:	mov    r15,rax
  41e1e5:	vxorps xmm0,xmm0,xmm0
  41e1e9:	vmovups XMMWORD PTR [rax],xmm0
  41e1ed:	mov    QWORD PTR [rax+0x10],0x0
  41e1f5:	movzx  ecx,WORD PTR [rsp+0xe]
  41e1fa:	cmp    cx,0xa
  41e1fe:	je     41e3d1 <strcmp@plt+0x1ac39>
  41e204:	cmp    cx,0x2
  41e208:	jne    41e3fd <strcmp@plt+0x1ac65>
  41e20e:	mov    eax,DWORD PTR [r13+0x0]
  41e212:	mov    DWORD PTR [r15+0x8],eax
  41e216:	jmp    41e3dd <strcmp@plt+0x1ac45>
  41e21b:	cmp    QWORD PTR [rbx+0x10],0x0
  41e220:	jne    41e58a <strcmp@plt+0x1adf2>
  41e226:	mov    QWORD PTR [rbx+0x10],rax
  41e22a:	mov    rbx,rax
  41e22d:	jmp    41e46d <strcmp@plt+0x1acd5>
  41e232:	mov    r12,r14
  41e235:	movzx  r14d,WORD PTR [r15]
  41e239:	mov    edi,0x18
  41e23e:	call   431d90 <strcmp@plt+0x2e5f8>
  41e243:	test   rax,rax
  41e246:	je     41e360 <strcmp@plt+0x1abc8>
  41e24c:	add    r15,0x8
  41e250:	vxorps xmm0,xmm0,xmm0
  41e254:	vmovups XMMWORD PTR [rax],xmm0
  41e258:	mov    QWORD PTR [rax+0x10],0x0
  41e260:	cmp    r14w,0xa
  41e265:	je     41e412 <strcmp@plt+0x1ac7a>
  41e26b:	cmp    r14w,0x2
  41e270:	jne    41e436 <strcmp@plt+0x1ac9e>
  41e276:	mov    ecx,DWORD PTR [r15]
  41e279:	mov    DWORD PTR [rax+0x8],ecx
  41e27c:	jmp    41e41c <strcmp@plt+0x1ac84>
  41e281:	mov    rbp,rax
  41e284:	mov    edi,0x1
  41e289:	mov    esi,0x38
  41e28e:	vzeroupper 
  41e291:	call   431d10 <strcmp@plt+0x2e578>
  41e296:	mov    DWORD PTR [rax],r12d
  41e299:	mov    QWORD PTR [rax+0x8],0x0
  41e2a1:	mov    rcx,QWORD PTR [rbx+0x20]
  41e2a5:	mov    QWORD PTR [rax+0x20],rcx
  41e2a9:	mov    QWORD PTR [rax+0x28],0x0
  41e2b1:	inc    DWORD PTR [r14+0xc]
  41e2b5:	cmp    r12d,DWORD PTR [r14+0x8]
  41e2b9:	jae    41e315 <strcmp@plt+0x1ab7d>
  41e2bb:	mov    ecx,r12d
  41e2be:	shr    rcx,0x3
  41e2c2:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  41e2c8:	and    r12b,0x7
  41e2cc:	mov    edx,0x80
  41e2d1:	shrx   edx,edx,r12d
  41e2d6:	test   edx,ecx
  41e2d8:	je     41e315 <strcmp@plt+0x1ab7d>
  41e2da:	mov    rdx,rbp
  41e2dd:	mov    QWORD PTR [rax+0x18],rbp
  41e2e1:	mov    QWORD PTR [rax+0x10],rbx
  41e2e5:	jmp    41e320 <strcmp@plt+0x1ab88>
  41e2e7:	mov    rcx,rax
  41e2ea:	add    rcx,0x10
  41e2ee:	mov    QWORD PTR [rcx],rbx
  41e2f1:	mov    rcx,QWORD PTR [rbx+0x20]
  41e2f5:	mov    QWORD PTR [rax+0x20],rcx
  41e2f9:	mov    rcx,QWORD PTR [rbx+0x20]
  41e2fd:	test   rcx,rcx
  41e300:	je     41e37e <strcmp@plt+0x1abe6>
  41e302:	cmp    QWORD PTR [rcx+0x18],rbx
  41e306:	je     41e449 <strcmp@plt+0x1acb1>
  41e30c:	add    rcx,0x10
  41e310:	jmp    41e44d <strcmp@plt+0x1acb5>
  41e315:	mov    QWORD PTR [rax+0x18],rbx
  41e319:	mov    rdx,rbp
  41e31c:	mov    QWORD PTR [rax+0x10],rbp
  41e320:	mov    QWORD PTR [rdx+0x20],rax
  41e324:	mov    rcx,QWORD PTR [rbx+0x20]
  41e328:	test   rcx,rcx
  41e32b:	je     41e3a9 <strcmp@plt+0x1ac11>
  41e32d:	cmp    QWORD PTR [rcx+0x18],rbx
  41e331:	je     41e45c <strcmp@plt+0x1acc4>
  41e337:	add    rcx,0x10
  41e33b:	jmp    41e460 <strcmp@plt+0x1acc8>
  41e340:	lea    rsi,[rip+0x2a253]        # 44859a <strcmp@plt+0x44e02>
  41e347:	xor    r15d,r15d
  41e34a:	mov    edi,0x18
  41e34f:	xor    eax,eax
  41e351:	call   403070 <syslog@plt>
  41e356:	mov    rax,QWORD PTR [rsp+0x18]
  41e35b:	jmp    41e118 <strcmp@plt+0x1a980>
  41e360:	lea    rsi,[rip+0x2a233]        # 44859a <strcmp@plt+0x44e02>
  41e367:	xor    r15d,r15d
  41e36a:	mov    edi,0x18
  41e36f:	xor    eax,eax
  41e371:	call   403070 <syslog@plt>
  41e376:	mov    r14,r12
  41e379:	jmp    41e056 <strcmp@plt+0x1a8be>
  41e37e:	cmp    QWORD PTR [r14],rbx
  41e381:	je     41e450 <strcmp@plt+0x1acb8>
  41e387:	lea    rdi,[rip+0x2a543]        # 4488d1 <strcmp@plt+0x45139>
  41e38e:	lea    rsi,[rip+0x2a149]        # 4484de <strcmp@plt+0x44d46>
  41e395:	lea    rcx,[rip+0x2a4af]        # 44884b <strcmp@plt+0x450b3>
  41e39c:	mov    edx,0x2f4
  41e3a1:	vzeroupper 
  41e3a4:	call   4032b0 <__assert_fail@plt>
  41e3a9:	cmp    QWORD PTR [r14],rbx
  41e3ac:	je     41e463 <strcmp@plt+0x1accb>
  41e3b2:	lea    rdi,[rip+0x2a518]        # 4488d1 <strcmp@plt+0x45139>
  41e3b9:	lea    rsi,[rip+0x2a11e]        # 4484de <strcmp@plt+0x44d46>
  41e3c0:	lea    rcx,[rip+0x2a484]        # 44884b <strcmp@plt+0x450b3>
  41e3c7:	mov    edx,0x316
  41e3cc:	call   4032b0 <__assert_fail@plt>
  41e3d1:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  41e3d7:	vmovups XMMWORD PTR [r15+0x8],xmm0
  41e3dd:	mov    rax,QWORD PTR [rsp+0x18]
  41e3e2:	mov    rdx,QWORD PTR [rsp+0x10]
  41e3e7:	mov    WORD PTR [r15+0x2],r14w
  41e3ec:	mov    WORD PTR [r15],cx
  41e3f0:	mov    DWORD PTR [r15+0x4],0x1
  41e3f8:	jmp    41e11d <strcmp@plt+0x1a985>
  41e3fd:	mov    rdi,r15
  41e400:	call   403790 <free@plt>
  41e405:	xor    r15d,r15d
  41e408:	mov    rax,QWORD PTR [rsp+0x18]
  41e40d:	jmp    41e118 <strcmp@plt+0x1a980>
  41e412:	vmovups xmm0,XMMWORD PTR [r15]
  41e417:	vmovups XMMWORD PTR [rax+0x8],xmm0
  41e41c:	mov    WORD PTR [rax+0x2],bp
  41e420:	mov    WORD PTR [rax],r14w
  41e424:	mov    DWORD PTR [rax+0x4],0x1
  41e42b:	mov    r15,rax
  41e42e:	mov    r14,r12
  41e431:	jmp    41e056 <strcmp@plt+0x1a8be>
  41e436:	mov    rdi,rax
  41e439:	call   403790 <free@plt>
  41e43e:	xor    r15d,r15d
  41e441:	mov    r14,r12
  41e444:	jmp    41e056 <strcmp@plt+0x1a8be>
  41e449:	add    rcx,0x18
  41e44d:	mov    r14,rcx
  41e450:	mov    QWORD PTR [r14],rax
  41e453:	mov    QWORD PTR [rbx+0x20],rax
  41e457:	mov    rbx,rax
  41e45a:	jmp    41e46d <strcmp@plt+0x1acd5>
  41e45c:	add    rcx,0x18
  41e460:	mov    r14,rcx
  41e463:	mov    QWORD PTR [r14],rax
  41e466:	mov    QWORD PTR [rbx+0x20],rax
  41e46a:	mov    rbx,rdx
  41e46d:	mov    rax,rbx
  41e470:	add    rsp,0x28
  41e474:	pop    rbx
  41e475:	pop    r12
  41e477:	pop    r13
  41e479:	pop    r14
  41e47b:	pop    r15
  41e47d:	pop    rbp
  41e47e:	vzeroupper 
  41e481:	ret    
  41e482:	mov    r14d,r9d
  41e485:	movzx  ebp,WORD PTR [r15]
  41e489:	mov    edi,0x18
  41e48e:	call   431d90 <strcmp@plt+0x2e5f8>
  41e493:	test   rax,rax
  41e496:	je     41e4c1 <strcmp@plt+0x1ad29>
  41e498:	mov    r15,rax
  41e49b:	vxorps xmm0,xmm0,xmm0
  41e49f:	vmovups XMMWORD PTR [rax],xmm0
  41e4a3:	mov    QWORD PTR [rax+0x10],0x0
  41e4ab:	cmp    bp,0xa
  41e4af:	je     41e4dc <strcmp@plt+0x1ad44>
  41e4b1:	cmp    bp,0x2
  41e4b5:	jne    41e4fe <strcmp@plt+0x1ad66>
  41e4b7:	mov    eax,DWORD PTR [r13+0x0]
  41e4bb:	mov    DWORD PTR [r15+0x8],eax
  41e4bf:	jmp    41e4e8 <strcmp@plt+0x1ad50>
  41e4c1:	lea    rsi,[rip+0x2a0d2]        # 44859a <strcmp@plt+0x44e02>
  41e4c8:	xor    r15d,r15d
  41e4cb:	mov    edi,0x18
  41e4d0:	xor    eax,eax
  41e4d2:	call   403070 <syslog@plt>
  41e4d7:	jmp    41e0b7 <strcmp@plt+0x1a91f>
  41e4dc:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  41e4e2:	vmovups XMMWORD PTR [r15+0x8],xmm0
  41e4e8:	mov    WORD PTR [r15+0x2],r14w
  41e4ed:	mov    WORD PTR [r15],bp
  41e4f1:	mov    DWORD PTR [r15+0x4],0x1
  41e4f9:	jmp    41e0b7 <strcmp@plt+0x1a91f>
  41e4fe:	mov    rdi,r15
  41e501:	call   403790 <free@plt>
  41e506:	xor    r15d,r15d
  41e509:	jmp    41e0b7 <strcmp@plt+0x1a91f>
  41e50e:	lea    rdi,[rip+0x2a16b]        # 448680 <strcmp@plt+0x44ee8>
  41e515:	lea    rsi,[rip+0x29fc2]        # 4484de <strcmp@plt+0x44d46>
  41e51c:	lea    rcx,[rip+0x2a328]        # 44884b <strcmp@plt+0x450b3>
  41e523:	mov    edx,0x25c
  41e528:	call   4032b0 <__assert_fail@plt>
  41e52d:	lea    rdi,[rip+0x3129b]        # 44f7cf <strcmp@plt+0x4c037>
  41e534:	lea    rsi,[rip+0x29fa3]        # 4484de <strcmp@plt+0x44d46>
  41e53b:	lea    rcx,[rip+0x2a309]        # 44884b <strcmp@plt+0x450b3>
  41e542:	mov    edx,0x25d
  41e547:	call   4032b0 <__assert_fail@plt>
  41e54c:	lea    rdi,[rip+0x2a253]        # 4487a6 <strcmp@plt+0x4500e>
  41e553:	lea    rsi,[rip+0x29f84]        # 4484de <strcmp@plt+0x44d46>
  41e55a:	lea    rcx,[rip+0x2a2ea]        # 44884b <strcmp@plt+0x450b3>
  41e561:	mov    edx,0x25e
  41e566:	call   4032b0 <__assert_fail@plt>
  41e56b:	lea    rdi,[rip+0x2a319]        # 44888b <strcmp@plt+0x450f3>
  41e572:	lea    rsi,[rip+0x29f65]        # 4484de <strcmp@plt+0x44d46>
  41e579:	lea    rcx,[rip+0x2a2cb]        # 44884b <strcmp@plt+0x450b3>
  41e580:	mov    edx,0x293
  41e585:	call   4032b0 <__assert_fail@plt>
  41e58a:	lea    rdi,[rip+0x2a330]        # 4488c1 <strcmp@plt+0x45129>
  41e591:	lea    rsi,[rip+0x29f46]        # 4484de <strcmp@plt+0x44d46>
  41e598:	lea    rcx,[rip+0x2a2ac]        # 44884b <strcmp@plt+0x450b3>
  41e59f:	mov    edx,0x2e0
  41e5a4:	vzeroupper 
  41e5a7:	call   4032b0 <__assert_fail@plt>
  41e5ac:	lea    rdi,[rip+0x2a2fe]        # 4488b1 <strcmp@plt+0x45119>
  41e5b3:	lea    rsi,[rip+0x29f24]        # 4484de <strcmp@plt+0x44d46>
  41e5ba:	lea    rcx,[rip+0x2a28a]        # 44884b <strcmp@plt+0x450b3>
  41e5c1:	mov    edx,0x2dc
  41e5c6:	vzeroupper 
  41e5c9:	call   4032b0 <__assert_fail@plt>
  41e5ce:	lea    rdi,[rip+0x2a2c3]        # 448898 <strcmp@plt+0x45100>
  41e5d5:	lea    rsi,[rip+0x29f02]        # 4484de <strcmp@plt+0x44d46>
  41e5dc:	lea    rcx,[rip+0x2a268]        # 44884b <strcmp@plt+0x450b3>
  41e5e3:	mov    edx,0x2a8
  41e5e8:	call   4032b0 <__assert_fail@plt>
  41e5ed:	nop    DWORD PTR [rax]
  41e5f0:	push   r15
  41e5f2:	push   r14
  41e5f4:	push   r12
  41e5f6:	push   rbx
  41e5f7:	push   rax
  41e5f8:	test   rdi,rdi
  41e5fb:	je     41e7ca <strcmp@plt+0x1b032>
  41e601:	mov    rbx,rsi
  41e604:	test   rsi,rsi
  41e607:	je     41e7e9 <strcmp@plt+0x1b051>
  41e60d:	mov    r14,rdi
  41e610:	mov    rax,QWORD PTR [rbx+0x10]
  41e614:	mov    r15,QWORD PTR [rbx+0x18]
  41e618:	test   r15,r15
  41e61b:	je     41e65b <strcmp@plt+0x1aec3>
  41e61d:	test   rax,rax
  41e620:	je     41e663 <strcmp@plt+0x1aecb>
  41e622:	mov    rdi,QWORD PTR [rbx+0x8]
  41e626:	test   rdi,rdi
  41e629:	je     41e646 <strcmp@plt+0x1aeae>
  41e62b:	mov    eax,DWORD PTR [rdi+0x4]
  41e62e:	test   eax,eax
  41e630:	jle    41e808 <strcmp@plt+0x1b070>
  41e636:	lea    ecx,[rax-0x1]
  41e639:	mov    DWORD PTR [rdi+0x4],ecx
  41e63c:	cmp    eax,0x1
  41e63f:	jne    41e646 <strcmp@plt+0x1aeae>
  41e641:	call   403790 <free@plt>
  41e646:	mov    QWORD PTR [rbx+0x8],0x0
  41e64e:	mov    QWORD PTR [rbx+0x28],0x0
  41e656:	jmp    41e7be <strcmp@plt+0x1b026>
  41e65b:	mov    r15,rax
  41e65e:	test   rax,rax
  41e661:	je     41e6d1 <strcmp@plt+0x1af39>
  41e663:	mov    r12,QWORD PTR [rbx+0x20]
  41e667:	mov    QWORD PTR [r15+0x20],r12
  41e66b:	mov    rdi,QWORD PTR [rbx+0x8]
  41e66f:	test   rdi,rdi
  41e672:	je     41e68f <strcmp@plt+0x1aef7>
  41e674:	mov    eax,DWORD PTR [rdi+0x4]
  41e677:	test   eax,eax
  41e679:	jle    41e808 <strcmp@plt+0x1b070>
  41e67f:	lea    ecx,[rax-0x1]
  41e682:	mov    DWORD PTR [rdi+0x4],ecx
  41e685:	cmp    eax,0x1
  41e688:	jne    41e68f <strcmp@plt+0x1aef7>
  41e68a:	call   403790 <free@plt>
  41e68f:	mov    rdi,rbx
  41e692:	call   403790 <free@plt>
  41e697:	dec    DWORD PTR [r14+0xc]
  41e69b:	test   r12,r12
  41e69e:	je     41e6c0 <strcmp@plt+0x1af28>
  41e6a0:	cmp    QWORD PTR [r12+0x18],rbx
  41e6a5:	je     41e732 <strcmp@plt+0x1af9a>
  41e6ab:	cmp    QWORD PTR [r12+0x10],rbx
  41e6b0:	jne    41e827 <strcmp@plt+0x1b08f>
  41e6b6:	mov    QWORD PTR [r12+0x10],r15
  41e6bb:	jmp    41e7be <strcmp@plt+0x1b026>
  41e6c0:	cmp    QWORD PTR [r14],rbx
  41e6c3:	jne    41e846 <strcmp@plt+0x1b0ae>
  41e6c9:	mov    QWORD PTR [r14],r15
  41e6cc:	jmp    41e7be <strcmp@plt+0x1b026>
  41e6d1:	mov    rdi,QWORD PTR [rbx+0x8]
  41e6d5:	mov    r15,QWORD PTR [rbx+0x20]
  41e6d9:	test   rdi,rdi
  41e6dc:	je     41e6f9 <strcmp@plt+0x1af61>
  41e6de:	mov    eax,DWORD PTR [rdi+0x4]
  41e6e1:	test   eax,eax
  41e6e3:	jle    41e808 <strcmp@plt+0x1b070>
  41e6e9:	lea    ecx,[rax-0x1]
  41e6ec:	mov    DWORD PTR [rdi+0x4],ecx
  41e6ef:	cmp    eax,0x1
  41e6f2:	jne    41e6f9 <strcmp@plt+0x1af61>
  41e6f4:	call   403790 <free@plt>
  41e6f9:	mov    rdi,rbx
  41e6fc:	call   403790 <free@plt>
  41e701:	dec    DWORD PTR [r14+0xc]
  41e705:	test   r15,r15
  41e708:	je     41e73c <strcmp@plt+0x1afa4>
  41e70a:	mov    rax,QWORD PTR [r15+0x18]
  41e70e:	cmp    rax,rbx
  41e711:	je     41e74e <strcmp@plt+0x1afb6>
  41e713:	cmp    QWORD PTR [r15+0x10],rbx
  41e717:	jne    41e865 <strcmp@plt+0x1b0cd>
  41e71d:	mov    QWORD PTR [r15+0x10],0x0
  41e725:	cmp    QWORD PTR [r15+0x8],0x0
  41e72a:	jne    41e7be <strcmp@plt+0x1b026>
  41e730:	jmp    41e761 <strcmp@plt+0x1afc9>
  41e732:	mov    QWORD PTR [r12+0x18],r15
  41e737:	jmp    41e7be <strcmp@plt+0x1b026>
  41e73c:	cmp    QWORD PTR [r14],rbx
  41e73f:	jne    41e884 <strcmp@plt+0x1b0ec>
  41e745:	mov    QWORD PTR [r14],0x0
  41e74c:	jmp    41e7be <strcmp@plt+0x1b026>
  41e74e:	mov    QWORD PTR [r15+0x18],0x0
  41e756:	mov    rax,QWORD PTR [r15+0x10]
  41e75a:	cmp    QWORD PTR [r15+0x8],0x0
  41e75f:	jne    41e7be <strcmp@plt+0x1b026>
  41e761:	mov    rcx,QWORD PTR [r15+0x20]
  41e765:	test   rcx,rcx
  41e768:	je     41e780 <strcmp@plt+0x1afe8>
  41e76a:	cmp    QWORD PTR [rcx+0x18],r15
  41e76e:	je     41e7a7 <strcmp@plt+0x1b00f>
  41e770:	cmp    QWORD PTR [rcx+0x10],r15
  41e774:	jne    41e8a3 <strcmp@plt+0x1b10b>
  41e77a:	lea    rdx,[rcx+0x10]
  41e77e:	jmp    41e7ab <strcmp@plt+0x1b013>
  41e780:	mov    rdx,r14
  41e783:	cmp    QWORD PTR [r14],r15
  41e786:	je     41e7ab <strcmp@plt+0x1b013>
  41e788:	lea    rdi,[rip+0x2a1a6]        # 448935 <strcmp@plt+0x4519d>
  41e78f:	lea    rsi,[rip+0x29d48]        # 4484de <strcmp@plt+0x44d46>
  41e796:	lea    rcx,[rip+0x2a14b]        # 4488e8 <strcmp@plt+0x45150>
  41e79d:	mov    edx,0x361
  41e7a2:	call   4032b0 <__assert_fail@plt>
  41e7a7:	lea    rdx,[rcx+0x18]
  41e7ab:	mov    QWORD PTR [rdx],rax
  41e7ae:	mov    QWORD PTR [rax+0x20],rcx
  41e7b2:	mov    rdi,r15
  41e7b5:	call   403790 <free@plt>
  41e7ba:	dec    DWORD PTR [r14+0xc]
  41e7be:	add    rsp,0x8
  41e7c2:	pop    rbx
  41e7c3:	pop    r12
  41e7c5:	pop    r14
  41e7c7:	pop    r15
  41e7c9:	ret    
  41e7ca:	lea    rdi,[rip+0x29eaf]        # 448680 <strcmp@plt+0x44ee8>
  41e7d1:	lea    rsi,[rip+0x29d06]        # 4484de <strcmp@plt+0x44d46>
  41e7d8:	lea    rcx,[rip+0x2a109]        # 4488e8 <strcmp@plt+0x45150>
  41e7df:	mov    edx,0x32e
  41e7e4:	call   4032b0 <__assert_fail@plt>
  41e7e9:	lea    rdi,[rip+0x2a0f3]        # 4488e3 <strcmp@plt+0x4514b>
  41e7f0:	lea    rsi,[rip+0x29ce7]        # 4484de <strcmp@plt+0x44d46>
  41e7f7:	lea    rcx,[rip+0x2a0ea]        # 4488e8 <strcmp@plt+0x45150>
  41e7fe:	mov    edx,0x32f
  41e803:	call   4032b0 <__assert_fail@plt>
  41e808:	lea    rdi,[rip+0x29dfe]        # 44860d <strcmp@plt+0x44e75>
  41e80f:	lea    rsi,[rip+0x29cc8]        # 4484de <strcmp@plt+0x44d46>
  41e816:	lea    rcx,[rip+0x29e06]        # 448623 <strcmp@plt+0x44e8b>
  41e81d:	mov    edx,0x12d
  41e822:	call   4032b0 <__assert_fail@plt>
  41e827:	lea    rdi,[rip+0x2a0f5]        # 448923 <strcmp@plt+0x4518b>
  41e82e:	lea    rsi,[rip+0x29ca9]        # 4484de <strcmp@plt+0x44d46>
  41e835:	lea    rcx,[rip+0x2a0ac]        # 4488e8 <strcmp@plt+0x45150>
  41e83c:	mov    edx,0x38d
  41e841:	call   4032b0 <__assert_fail@plt>
  41e846:	lea    rdi,[rip+0x2a084]        # 4488d1 <strcmp@plt+0x45139>
  41e84d:	lea    rsi,[rip+0x29c8a]        # 4484de <strcmp@plt+0x44d46>
  41e854:	lea    rcx,[rip+0x2a08d]        # 4488e8 <strcmp@plt+0x45150>
  41e85b:	mov    edx,0x384
  41e860:	call   4032b0 <__assert_fail@plt>
  41e865:	lea    rdi,[rip+0x2a0b7]        # 448923 <strcmp@plt+0x4518b>
  41e86c:	lea    rsi,[rip+0x29c6b]        # 4484de <strcmp@plt+0x44d46>
  41e873:	lea    rcx,[rip+0x2a06e]        # 4488e8 <strcmp@plt+0x45150>
  41e87a:	mov    edx,0x356
  41e87f:	call   4032b0 <__assert_fail@plt>
  41e884:	lea    rdi,[rip+0x2a046]        # 4488d1 <strcmp@plt+0x45139>
  41e88b:	lea    rsi,[rip+0x29c4c]        # 4484de <strcmp@plt+0x44d46>
  41e892:	lea    rcx,[rip+0x2a04f]        # 4488e8 <strcmp@plt+0x45150>
  41e899:	mov    edx,0x34c
  41e89e:	call   4032b0 <__assert_fail@plt>
  41e8a3:	lea    rdi,[rip+0x2a0a4]        # 44894e <strcmp@plt+0x451b6>
  41e8aa:	lea    rsi,[rip+0x29c2d]        # 4484de <strcmp@plt+0x44d46>
  41e8b1:	lea    rcx,[rip+0x2a030]        # 4488e8 <strcmp@plt+0x45150>
  41e8b8:	mov    edx,0x368
  41e8bd:	call   4032b0 <__assert_fail@plt>
  41e8c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e8cc:	nop    DWORD PTR [rax+0x0]
  41e8d0:	push   r14
  41e8d2:	push   rbx
  41e8d3:	push   rax
  41e8d4:	mov    r14,rdi
  41e8d7:	mov    edi,esi
  41e8d9:	mov    rsi,rdx
  41e8dc:	call   41d460 <strcmp@plt+0x19cc8>
  41e8e1:	mov    rbx,rax
  41e8e4:	mov    rdi,r14
  41e8e7:	mov    rsi,rax
  41e8ea:	call   41ded0 <strcmp@plt+0x1a738>
  41e8ef:	mov    r14,rax
  41e8f2:	test   rbx,rbx
  41e8f5:	je     41e911 <strcmp@plt+0x1b179>
  41e8f7:	mov    eax,DWORD PTR [rbx+0x4]
  41e8fa:	test   eax,eax
  41e8fc:	jle    41e91c <strcmp@plt+0x1b184>
  41e8fe:	lea    ecx,[rax-0x1]
  41e901:	mov    DWORD PTR [rbx+0x4],ecx
  41e904:	cmp    eax,0x1
  41e907:	jne    41e911 <strcmp@plt+0x1b179>
  41e909:	mov    rdi,rbx
  41e90c:	call   403790 <free@plt>
  41e911:	mov    rax,r14
  41e914:	add    rsp,0x8
  41e918:	pop    rbx
  41e919:	pop    r14
  41e91b:	ret    
  41e91c:	lea    rdi,[rip+0x29cea]        # 44860d <strcmp@plt+0x44e75>
  41e923:	lea    rsi,[rip+0x29bb4]        # 4484de <strcmp@plt+0x44d46>
  41e92a:	lea    rcx,[rip+0x29cf2]        # 448623 <strcmp@plt+0x44e8b>
  41e931:	mov    edx,0x12d
  41e936:	call   4032b0 <__assert_fail@plt>
  41e93b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e940:	push   r14
  41e942:	push   rbx
  41e943:	push   rax
  41e944:	mov    r14,rdi
  41e947:	mov    edi,esi
  41e949:	mov    rsi,rdx
  41e94c:	call   41d460 <strcmp@plt+0x19cc8>
  41e951:	mov    rbx,rax
  41e954:	mov    rdi,r14
  41e957:	mov    rsi,rax
  41e95a:	call   41dba0 <strcmp@plt+0x1a408>
  41e95f:	mov    r14,rax
  41e962:	test   rbx,rbx
  41e965:	je     41e981 <strcmp@plt+0x1b1e9>
  41e967:	mov    eax,DWORD PTR [rbx+0x4]
  41e96a:	test   eax,eax
  41e96c:	jle    41e98c <strcmp@plt+0x1b1f4>
  41e96e:	lea    ecx,[rax-0x1]
  41e971:	mov    DWORD PTR [rbx+0x4],ecx
  41e974:	cmp    eax,0x1
  41e977:	jne    41e981 <strcmp@plt+0x1b1e9>
  41e979:	mov    rdi,rbx
  41e97c:	call   403790 <free@plt>
  41e981:	mov    rax,r14
  41e984:	add    rsp,0x8
  41e988:	pop    rbx
  41e989:	pop    r14
  41e98b:	ret    
  41e98c:	lea    rdi,[rip+0x29c7a]        # 44860d <strcmp@plt+0x44e75>
  41e993:	lea    rsi,[rip+0x29b44]        # 4484de <strcmp@plt+0x44d46>
  41e99a:	lea    rcx,[rip+0x29c82]        # 448623 <strcmp@plt+0x44e8b>
  41e9a1:	mov    edx,0x12d
  41e9a6:	call   4032b0 <__assert_fail@plt>
  41e9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9b0:	push   r15
  41e9b2:	push   r14
  41e9b4:	push   rbx
  41e9b5:	mov    r14,rdi
  41e9b8:	mov    edi,esi
  41e9ba:	mov    rsi,rdx
  41e9bd:	call   41d460 <strcmp@plt+0x19cc8>
  41e9c2:	mov    rbx,rax
  41e9c5:	mov    rdi,r14
  41e9c8:	mov    rsi,rax
  41e9cb:	call   41dba0 <strcmp@plt+0x1a408>
  41e9d0:	mov    r15,rax
  41e9d3:	test   rbx,rbx
  41e9d6:	je     41e9f2 <strcmp@plt+0x1b25a>
  41e9d8:	mov    eax,DWORD PTR [rbx+0x4]
  41e9db:	test   eax,eax
  41e9dd:	jle    41ea0d <strcmp@plt+0x1b275>
  41e9df:	lea    ecx,[rax-0x1]
  41e9e2:	mov    DWORD PTR [rbx+0x4],ecx
  41e9e5:	cmp    eax,0x1
  41e9e8:	jne    41e9f2 <strcmp@plt+0x1b25a>
  41e9ea:	mov    rdi,rbx
  41e9ed:	call   403790 <free@plt>
  41e9f2:	test   r15,r15
  41e9f5:	je     41ea07 <strcmp@plt+0x1b26f>
  41e9f7:	mov    rdi,r14
  41e9fa:	mov    rsi,r15
  41e9fd:	pop    rbx
  41e9fe:	pop    r14
  41ea00:	pop    r15
  41ea02:	jmp    41e5f0 <strcmp@plt+0x1ae58>
  41ea07:	pop    rbx
  41ea08:	pop    r14
  41ea0a:	pop    r15
  41ea0c:	ret    
  41ea0d:	lea    rdi,[rip+0x29bf9]        # 44860d <strcmp@plt+0x44e75>
  41ea14:	lea    rsi,[rip+0x29ac3]        # 4484de <strcmp@plt+0x44d46>
  41ea1b:	lea    rcx,[rip+0x29c01]        # 448623 <strcmp@plt+0x44e8b>
  41ea22:	mov    edx,0x12d
  41ea27:	call   4032b0 <__assert_fail@plt>
  41ea2c:	nop    DWORD PTR [rax+0x0]
  41ea30:	push   r14
  41ea32:	push   rbx
  41ea33:	push   rax
  41ea34:	mov    r14,rdi
  41ea37:	mov    edi,esi
  41ea39:	mov    rsi,rdx
  41ea3c:	call   41d460 <strcmp@plt+0x19cc8>
  41ea41:	mov    rbx,rax
  41ea44:	mov    rdi,rax
  41ea47:	xor    esi,esi
  41ea49:	mov    edx,0x1
  41ea4e:	call   41d190 <strcmp@plt+0x199f8>
  41ea53:	movzx  edx,WORD PTR [rbx+0x2]
  41ea57:	lea    rdi,[rip+0x29f0c]        # 44896a <strcmp@plt+0x451d2>
  41ea5e:	mov    rsi,rax
  41ea61:	xor    eax,eax
  41ea63:	call   403050 <printf@plt>
  41ea68:	mov    rdi,r14
  41ea6b:	mov    rsi,rbx
  41ea6e:	mov    edx,0x1
  41ea73:	call   41dd20 <strcmp@plt+0x1a588>
  41ea78:	mov    r14,rax
  41ea7b:	test   rax,rax
  41ea7e:	je     41eab0 <strcmp@plt+0x1b318>
  41ea80:	mov    rdi,QWORD PTR [r14+0x8]
  41ea84:	xor    esi,esi
  41ea86:	mov    edx,0x1
  41ea8b:	call   41d190 <strcmp@plt+0x199f8>
  41ea90:	mov    rcx,QWORD PTR [r14+0x8]
  41ea94:	movzx  edx,WORD PTR [rcx+0x2]
  41ea98:	lea    rdi,[rip+0x29ee3]        # 448982 <strcmp@plt+0x451ea>
  41ea9f:	mov    rsi,rax
  41eaa2:	xor    eax,eax
  41eaa4:	call   403050 <printf@plt>
  41eaa9:	test   rbx,rbx
  41eaac:	jne    41eac1 <strcmp@plt+0x1b329>
  41eaae:	jmp    41eadb <strcmp@plt+0x1b343>
  41eab0:	lea    rdi,[rip+0x29ee9]        # 4489a0 <strcmp@plt+0x45208>
  41eab7:	call   403610 <puts@plt>
  41eabc:	test   rbx,rbx
  41eabf:	je     41eadb <strcmp@plt+0x1b343>
  41eac1:	mov    eax,DWORD PTR [rbx+0x4]
  41eac4:	test   eax,eax
  41eac6:	jle    41eae6 <strcmp@plt+0x1b34e>
  41eac8:	lea    ecx,[rax-0x1]
  41eacb:	mov    DWORD PTR [rbx+0x4],ecx
  41eace:	cmp    eax,0x1
  41ead1:	jne    41eadb <strcmp@plt+0x1b343>
  41ead3:	mov    rdi,rbx
  41ead6:	call   403790 <free@plt>
  41eadb:	mov    rax,r14
  41eade:	add    rsp,0x8
  41eae2:	pop    rbx
  41eae3:	pop    r14
  41eae5:	ret    
  41eae6:	lea    rdi,[rip+0x29b20]        # 44860d <strcmp@plt+0x44e75>
  41eaed:	lea    rsi,[rip+0x299ea]        # 4484de <strcmp@plt+0x44d46>
  41eaf4:	lea    rcx,[rip+0x29b28]        # 448623 <strcmp@plt+0x44e8b>
  41eafb:	mov    edx,0x12d
  41eb00:	call   4032b0 <__assert_fail@plt>
  41eb05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb0f:	nop
  41eb10:	push   rbp
  41eb11:	push   r15
  41eb13:	push   r14
  41eb15:	push   rbx
  41eb16:	push   rax
  41eb17:	mov    ebp,edx
  41eb19:	mov    r14,rsi
  41eb1c:	mov    r15,rdi
  41eb1f:	mov    edi,0x28
  41eb24:	call   431d60 <strcmp@plt+0x2e5c8>
  41eb29:	mov    rbx,rax
  41eb2c:	test   rax,rax
  41eb2f:	je     41eb45 <strcmp@plt+0x1b3ad>
  41eb31:	movzx  ecx,bpl
  41eb35:	mov    rdi,rbx
  41eb38:	mov    rsi,r15
  41eb3b:	mov    rdx,r14
  41eb3e:	call   41eb70 <strcmp@plt+0x1b3d8>
  41eb43:	jmp    41eb58 <strcmp@plt+0x1b3c0>
  41eb45:	lea    rsi,[rip+0x29f16]        # 448a62 <strcmp@plt+0x452ca>
  41eb4c:	mov    edi,0x3
  41eb51:	xor    eax,eax
  41eb53:	call   42e520 <strcmp@plt+0x2ad88>
  41eb58:	mov    rax,rbx
  41eb5b:	add    rsp,0x8
  41eb5f:	pop    rbx
  41eb60:	pop    r14
  41eb62:	pop    r15
  41eb64:	pop    rbp
  41eb65:	ret    
  41eb66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb70:	push   rbp
  41eb71:	push   r15
  41eb73:	push   r14
  41eb75:	push   r13
  41eb77:	push   r12
  41eb79:	push   rbx
  41eb7a:	sub    rsp,0x398
  41eb81:	mov    DWORD PTR [rsp+0x30],ecx
  41eb85:	mov    r14,rdx
  41eb88:	mov    rbx,rsi
  41eb8b:	mov    r13,rdi
  41eb8e:	call   42b980 <strcmp@plt+0x281e8>
  41eb93:	mov    rbp,rax
  41eb96:	call   42b980 <strcmp@plt+0x281e8>
  41eb9b:	mov    r12,rax
  41eb9e:	mov    QWORD PTR [rsp+0x80],0x0
  41ebaa:	mov    QWORD PTR [rsp+0x188],0x0
  41ebb6:	mov    rdi,QWORD PTR [r13+0x10]
  41ebba:	test   rdi,rdi
  41ebbd:	je     41ebd0 <strcmp@plt+0x1b438>
  41ebbf:	cmp    rdi,QWORD PTR [r13+0x0]
  41ebc3:	je     41ebd0 <strcmp@plt+0x1b438>
  41ebc5:	cmp    rdi,QWORD PTR [r13+0x8]
  41ebc9:	je     41ebd0 <strcmp@plt+0x1b438>
  41ebcb:	call   403790 <free@plt>
  41ebd0:	mov    rdi,QWORD PTR [r13+0x0]
  41ebd4:	test   rdi,rdi
  41ebd7:	je     41ebde <strcmp@plt+0x1b446>
  41ebd9:	call   403790 <free@plt>
  41ebde:	mov    rdi,QWORD PTR [r13+0x8]
  41ebe2:	test   rdi,rdi
  41ebe5:	je     41ebec <strcmp@plt+0x1b454>
  41ebe7:	call   403790 <free@plt>
  41ebec:	vxorps xmm0,xmm0,xmm0
  41ebf0:	vmovups YMMWORD PTR [r13+0x0],ymm0
  41ebf6:	mov    DWORD PTR [r13+0x20],0x0
  41ebfe:	lea    r8,[rip+0x100b]        # 41fc10 <strcmp@plt+0x1c478>
  41ec05:	mov    QWORD PTR [rsp+0x70],rbx
  41ec0a:	mov    rdi,rbx
  41ec0d:	mov    rsi,r14
  41ec10:	mov    rbx,rbp
  41ec13:	mov    rdx,rbp
  41ec16:	mov    rcx,r12
  41ec19:	vzeroupper 
  41ec1c:	call   41ff20 <strcmp@plt+0x1c788>
  41ec21:	mov    DWORD PTR [rsp+0x44],0xff
  41ec29:	xor    r8d,r8d
  41ec2c:	cmp    DWORD PTR [rbp+0x18],0x0
  41ec30:	mov    ecx,0x0
  41ec35:	mov    r15d,0x0
  41ec3b:	mov    edx,0xff
  41ec40:	mov    QWORD PTR [rsp+0x50],r12
  41ec45:	mov    QWORD PTR [rsp+0x38],r13
  41ec4a:	mov    QWORD PTR [rsp+0x78],rbp
  41ec4f:	je     41f02d <strcmp@plt+0x1b895>
  41ec55:	mov    rax,QWORD PTR [rbx+0x8]
  41ec59:	mov    ecx,0x0
  41ec5e:	mov    r15d,0x0
  41ec64:	mov    edx,0xff
  41ec69:	cmp    rax,rbx
  41ec6c:	je     41f02d <strcmp@plt+0x1b895>
  41ec72:	mov    r9d,0xff
  41ec78:	xor    ecx,ecx
  41ec7a:	mov    ebp,DWORD PTR [rsp+0x30]
  41ec7e:	jmp    41ec89 <strcmp@plt+0x1b4f1>
  41ec80:	mov    rax,QWORD PTR [rax+0x8]
  41ec84:	cmp    rax,rbx
  41ec87:	je     41ecf4 <strcmp@plt+0x1b55c>
  41ec89:	mov    rdx,QWORD PTR [rax+0x10]
  41ec8d:	cmp    BYTE PTR [rdx+0x8],0x0
  41ec91:	je     41ec80 <strcmp@plt+0x1b4e8>
  41ec93:	movzx  esi,BYTE PTR [rdx+0xb]
  41ec97:	cmp    esi,0xff
  41ec9d:	je     41ec80 <strcmp@plt+0x1b4e8>
  41ec9f:	test   bpl,bpl
  41eca2:	je     41ecec <strcmp@plt+0x1b554>
  41eca4:	cmp    BYTE PTR [rdx+0xa],0x0
  41eca8:	je     41ec80 <strcmp@plt+0x1b4e8>
  41ecaa:	cmp    r9d,esi
  41ecad:	jne    41ecc9 <strcmp@plt+0x1b531>
  41ecaf:	movsxd rdi,ecx
  41ecb2:	mov    QWORD PTR [rsp+rdi*8+0x80],rdx
  41ecba:	lea    ecx,[rdi+0x1]
  41ecbd:	mov    QWORD PTR [rsp+rdi*8+0x88],0x0
  41ecc9:	cmp    r9d,esi
  41eccc:	jle    41ec80 <strcmp@plt+0x1b4e8>
  41ecce:	mov    QWORD PTR [rsp+0x80],rdx
  41ecd6:	mov    QWORD PTR [rsp+0x88],0x0
  41ece2:	mov    ecx,0x1
  41ece7:	mov    r9d,esi
  41ecea:	jmp    41ec80 <strcmp@plt+0x1b4e8>
  41ecec:	cmp    BYTE PTR [rdx+0x9],0x0
  41ecf0:	jne    41ecaa <strcmp@plt+0x1b512>
  41ecf2:	jmp    41ec80 <strcmp@plt+0x1b4e8>
  41ecf4:	cmp    r9d,0xff
  41ecfb:	jne    41ed0c <strcmp@plt+0x1b574>
  41ecfd:	mov    edx,0xff
  41ed02:	xor    ecx,ecx
  41ed04:	xor    r15d,r15d
  41ed07:	jmp    41f02d <strcmp@plt+0x1b895>
  41ed0c:	mov    rbp,QWORD PTR [rsp+0x80]
  41ed14:	test   rbp,rbp
  41ed17:	mov    DWORD PTR [rsp+0x40],r9d
  41ed1c:	je     41ed95 <strcmp@plt+0x1b5fd>
  41ed1e:	mov    dl,BYTE PTR [rbp+0xc]
  41ed21:	movzx  eax,dl
  41ed24:	xor    ecx,ecx
  41ed26:	xor    edi,edi
  41ed28:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed30:	movzx  esi,dl
  41ed33:	test   sil,sil
  41ed36:	je     41ed60 <strcmp@plt+0x1b5c8>
  41ed38:	mov    r15d,esi
  41ed3b:	test   eax,eax
  41ed3d:	je     41ed63 <strcmp@plt+0x1b5cb>
  41ed3f:	mov    edx,esi
  41ed41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ed4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41ed50:	mov    r15d,edx
  41ed53:	cdq    
  41ed54:	idiv   r15d
  41ed57:	mov    eax,r15d
  41ed5a:	test   edx,edx
  41ed5c:	jne    41ed50 <strcmp@plt+0x1b5b8>
  41ed5e:	jmp    41ed63 <strcmp@plt+0x1b5cb>
  41ed60:	mov    r15d,eax
  41ed63:	add    edi,esi
  41ed65:	mov    rax,QWORD PTR [rsp+rcx*8+0x88]
  41ed6d:	test   rax,rax
  41ed70:	je     41ed7d <strcmp@plt+0x1b5e5>
  41ed72:	inc    rcx
  41ed75:	mov    dl,BYTE PTR [rax+0xc]
  41ed78:	mov    eax,r15d
  41ed7b:	jmp    41ed30 <strcmp@plt+0x1b598>
  41ed7d:	lea    r12,[r13+0x18]
  41ed81:	test   edi,edi
  41ed83:	je     41ed9c <strcmp@plt+0x1b604>
  41ed85:	mov    QWORD PTR [rsp+0x48],rdi
  41ed8a:	mov    eax,edi
  41ed8c:	cdq    
  41ed8d:	idiv   r15d
  41ed90:	mov    r14b,0x1
  41ed93:	jmp    41edcb <strcmp@plt+0x1b633>
  41ed95:	lea    r12,[r13+0x18]
  41ed99:	xor    r15d,r15d
  41ed9c:	xor    eax,eax
  41ed9e:	test   rbp,rbp
  41eda1:	je     41edc1 <strcmp@plt+0x1b629>
  41eda3:	mov    QWORD PTR [rsp+0x48],rax
  41eda8:	xor    eax,eax
  41edaa:	nop    WORD PTR [rax+rax*1+0x0]
  41edb0:	cmp    QWORD PTR [rsp+rax*8+0x88],0x0
  41edb9:	lea    rax,[rax+0x1]
  41edbd:	jne    41edb0 <strcmp@plt+0x1b618>
  41edbf:	jmp    41edc8 <strcmp@plt+0x1b630>
  41edc1:	mov    QWORD PTR [rsp+0x48],rax
  41edc6:	xor    eax,eax
  41edc8:	xor    r14d,r14d
  41edcb:	movsxd rbx,eax
  41edce:	lea    rdi,[rbx*8+0x0]
  41edd6:	call   431d90 <strcmp@plt+0x2e5f8>
  41eddb:	mov    rcx,rax
  41edde:	mov    DWORD PTR [r12],ebx
  41ede2:	test   rbp,rbp
  41ede5:	mov    r12,QWORD PTR [rsp+0x50]
  41edea:	je     41f01d <strcmp@plt+0x1b885>
  41edf0:	lea    rbx,[rsp+0x80]
  41edf8:	lea    rax,[rcx+0x8]
  41edfc:	mov    QWORD PTR [rsp+0x60],rax
  41ee01:	lea    rax,[rcx+0xe0]
  41ee08:	mov    QWORD PTR [rsp+0x58],rax
  41ee0d:	xor    r10d,r10d
  41ee10:	xor    edi,edi
  41ee12:	jmp    41ee44 <strcmp@plt+0x1b6ac>
  41ee14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ee1e:	xchg   ax,ax
  41ee20:	mov    r13,QWORD PTR [rsp+0x38]
  41ee25:	lea    rbx,[rsp+r10*8]
  41ee29:	add    rbx,0x88
  41ee30:	mov    rbp,QWORD PTR [rsp+r10*8+0x88]
  41ee38:	inc    r10
  41ee3b:	test   rbp,rbp
  41ee3e:	je     41f01d <strcmp@plt+0x1b885>
  41ee44:	mov    eax,0x1
  41ee49:	test   r14b,r14b
  41ee4c:	je     41ee5b <strcmp@plt+0x1b6c3>
  41ee4e:	movzx  eax,BYTE PTR [rbp+0xc]
  41ee52:	xor    edx,edx
  41ee54:	idiv   r15d
  41ee57:	test   eax,eax
  41ee59:	jle    41ee25 <strcmp@plt+0x1b68d>
  41ee5b:	movsxd rdi,edi
  41ee5e:	lea    esi,[rax-0x1]
  41ee61:	lea    r12,[rsi+0x1]
  41ee65:	xor    r13d,r13d
  41ee68:	cmp    r12,0x10
  41ee6c:	jb     41ee9c <strcmp@plt+0x1b704>
  41ee6e:	lea    rbp,[rsp+r10*8]
  41ee72:	add    rbp,0x81
  41ee79:	lea    rdx,[rcx+rdi*8]
  41ee7d:	cmp    rdx,rbp
  41ee80:	jae    41ef40 <strcmp@plt+0x1b7a8>
  41ee86:	shl    rsi,0x3
  41ee8a:	lea    rdx,[rsi+rdi*8]
  41ee8e:	add    rdx,QWORD PTR [rsp+0x60]
  41ee93:	cmp    rdx,rbx
  41ee96:	jbe    41ef40 <strcmp@plt+0x1b7a8>
  41ee9c:	mov    r12,QWORD PTR [rsp+0x50]
  41eea1:	mov    r9d,eax
  41eea4:	sub    r9d,r13d
  41eea7:	mov    r8d,r13d
  41eeaa:	not    r8d
  41eead:	add    r8d,eax
  41eeb0:	and    r9d,0x7
  41eeb4:	je     41eed8 <strcmp@plt+0x1b740>
  41eeb6:	lea    rsi,[rcx+rdi*8]
  41eeba:	neg    r9d
  41eebd:	xor    ebp,ebp
  41eebf:	nop
  41eec0:	mov    rdx,QWORD PTR [rbx]
  41eec3:	mov    QWORD PTR [rsi],rdx
  41eec6:	dec    rbp
  41eec9:	add    rsi,0x8
  41eecd:	cmp    r9d,ebp
  41eed0:	jne    41eec0 <strcmp@plt+0x1b728>
  41eed2:	sub    rdi,rbp
  41eed5:	sub    r13d,ebp
  41eed8:	cmp    r8d,0x7
  41eedc:	jb     41ee20 <strcmp@plt+0x1b688>
  41eee2:	sub    eax,r13d
  41eee5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eeef:	nop
  41eef0:	mov    rdx,QWORD PTR [rbx]
  41eef3:	mov    QWORD PTR [rcx+rdi*8],rdx
  41eef7:	mov    rdx,QWORD PTR [rbx]
  41eefa:	mov    QWORD PTR [rcx+rdi*8+0x8],rdx
  41eeff:	mov    rdx,QWORD PTR [rbx]
  41ef02:	mov    QWORD PTR [rcx+rdi*8+0x10],rdx
  41ef07:	mov    rdx,QWORD PTR [rbx]
  41ef0a:	mov    QWORD PTR [rcx+rdi*8+0x18],rdx
  41ef0f:	mov    rdx,QWORD PTR [rbx]
  41ef12:	mov    QWORD PTR [rcx+rdi*8+0x20],rdx
  41ef17:	mov    rdx,QWORD PTR [rbx]
  41ef1a:	mov    QWORD PTR [rcx+rdi*8+0x28],rdx
  41ef1f:	mov    rdx,QWORD PTR [rbx]
  41ef22:	mov    QWORD PTR [rcx+rdi*8+0x30],rdx
  41ef27:	mov    rdx,QWORD PTR [rbx]
  41ef2a:	mov    QWORD PTR [rcx+rdi*8+0x38],rdx
  41ef2f:	add    rdi,0x8
  41ef33:	add    eax,0xfffffff8
  41ef36:	jne    41eef0 <strcmp@plt+0x1b758>
  41ef38:	jmp    41ee20 <strcmp@plt+0x1b688>
  41ef3d:	nop    DWORD PTR [rax]
  41ef40:	mov    r13,r12
  41ef43:	movabs rdx,0x1fffffff0
  41ef4d:	and    r13,rdx
  41ef50:	lea    rdx,[r13-0x10]
  41ef54:	mov    rsi,rdx
  41ef57:	shr    rsi,0x4
  41ef5b:	inc    rsi
  41ef5e:	mov    r9d,esi
  41ef61:	and    r9d,0x1
  41ef65:	test   rdx,rdx
  41ef68:	je     41f014 <strcmp@plt+0x1b87c>
  41ef6e:	vbroadcastsd ymm0,QWORD PTR [rbx]
  41ef73:	mov    rdx,QWORD PTR [rsp+0x58]
  41ef78:	lea    r8,[rdx+rdi*8]
  41ef7c:	mov    r11,r9
  41ef7f:	sub    r11,rsi
  41ef82:	xor    ebp,ebp
  41ef84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ef8e:	xchg   ax,ax
  41ef90:	vmovups YMMWORD PTR [r8+rbp*8-0xe0],ymm0
  41ef9a:	vmovups YMMWORD PTR [r8+rbp*8-0xc0],ymm0
  41efa4:	vmovups YMMWORD PTR [r8+rbp*8-0xa0],ymm0
  41efae:	vmovups YMMWORD PTR [r8+rbp*8-0x80],ymm0
  41efb5:	vmovups YMMWORD PTR [r8+rbp*8-0x60],ymm0
  41efbc:	vmovups YMMWORD PTR [r8+rbp*8-0x40],ymm0
  41efc3:	vmovups YMMWORD PTR [r8+rbp*8-0x20],ymm0
  41efca:	vmovups YMMWORD PTR [r8+rbp*8],ymm0
  41efd0:	add    rbp,0x20
  41efd4:	add    r11,0x2
  41efd8:	jne    41ef90 <strcmp@plt+0x1b7f8>
  41efda:	test   r9,r9
  41efdd:	je     41effe <strcmp@plt+0x1b866>
  41efdf:	add    rbp,rdi
  41efe2:	vbroadcastsd ymm0,QWORD PTR [rbx]
  41efe7:	vmovups YMMWORD PTR [rcx+rbp*8],ymm0
  41efec:	vmovups YMMWORD PTR [rcx+rbp*8+0x20],ymm0
  41eff2:	vmovups YMMWORD PTR [rcx+rbp*8+0x40],ymm0
  41eff8:	vmovups YMMWORD PTR [rcx+rbp*8+0x60],ymm0
  41effe:	add    rdi,r13
  41f001:	cmp    r12,r13
  41f004:	mov    r12,QWORD PTR [rsp+0x50]
  41f009:	je     41ee20 <strcmp@plt+0x1b688>
  41f00f:	jmp    41eea1 <strcmp@plt+0x1b709>
  41f014:	xor    ebp,ebp
  41f016:	test   r9,r9
  41f019:	jne    41efdf <strcmp@plt+0x1b847>
  41f01b:	jmp    41effe <strcmp@plt+0x1b866>
  41f01d:	mov    QWORD PTR [r13+0x0],rcx
  41f021:	xor    r8d,r8d
  41f024:	mov    rcx,QWORD PTR [rsp+0x48]
  41f029:	mov    edx,DWORD PTR [rsp+0x40]
  41f02d:	mov    DWORD PTR [rsp+0x40],edx
  41f031:	mov    QWORD PTR [rsp+0x48],rcx
  41f036:	cmp    DWORD PTR [r12+0x18],0x0
  41f03c:	je     41f101 <strcmp@plt+0x1b969>
  41f042:	mov    rax,QWORD PTR [r12+0x8]
  41f047:	mov    r14d,0x0
  41f04d:	cmp    rax,r12
  41f050:	je     41f438 <strcmp@plt+0x1bca0>
  41f056:	lea    r13,[rsp+0x188]
  41f05e:	mov    ebx,0xff
  41f063:	xor    ecx,ecx
  41f065:	mov    ebp,DWORD PTR [rsp+0x30]
  41f069:	jmp    41f079 <strcmp@plt+0x1b8e1>
  41f06b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f070:	mov    rax,QWORD PTR [rax+0x8]
  41f074:	cmp    rax,r12
  41f077:	je     41f0e1 <strcmp@plt+0x1b949>
  41f079:	mov    rdx,QWORD PTR [rax+0x10]
  41f07d:	cmp    BYTE PTR [rdx+0x8],0x0
  41f081:	je     41f070 <strcmp@plt+0x1b8d8>
  41f083:	movzx  esi,BYTE PTR [rdx+0xb]
  41f087:	cmp    esi,0xff
  41f08d:	je     41f070 <strcmp@plt+0x1b8d8>
  41f08f:	test   bpl,bpl
  41f092:	je     41f0d9 <strcmp@plt+0x1b941>
  41f094:	cmp    BYTE PTR [rdx+0xa],0x0
  41f098:	je     41f070 <strcmp@plt+0x1b8d8>
  41f09a:	cmp    ebx,esi
  41f09c:	jne    41f0b8 <strcmp@plt+0x1b920>
  41f09e:	movsxd rdi,ecx
  41f0a1:	mov    QWORD PTR [rsp+rdi*8+0x188],rdx
  41f0a9:	lea    ecx,[rdi+0x1]
  41f0ac:	mov    QWORD PTR [rsp+rdi*8+0x190],0x0
  41f0b8:	cmp    ebx,esi
  41f0ba:	jle    41f070 <strcmp@plt+0x1b8d8>
  41f0bc:	mov    QWORD PTR [rsp+0x188],rdx
  41f0c4:	mov    QWORD PTR [rsp+0x190],0x0
  41f0d0:	mov    ecx,0x1
  41f0d5:	mov    ebx,esi
  41f0d7:	jmp    41f070 <strcmp@plt+0x1b8d8>
  41f0d9:	cmp    BYTE PTR [rdx+0x9],0x0
  41f0dd:	jne    41f09a <strcmp@plt+0x1b902>
  41f0df:	jmp    41f070 <strcmp@plt+0x1b8d8>
  41f0e1:	cmp    ebx,0xff
  41f0e7:	jne    41f109 <strcmp@plt+0x1b971>
  41f0e9:	mov    DWORD PTR [rsp+0x44],0xff
  41f0f1:	xor    r8d,r8d
  41f0f4:	xor    r14d,r14d
  41f0f7:	mov    r13,QWORD PTR [rsp+0x38]
  41f0fc:	jmp    41f438 <strcmp@plt+0x1bca0>
  41f101:	xor    r14d,r14d
  41f104:	jmp    41f438 <strcmp@plt+0x1bca0>
  41f109:	mov    rbp,QWORD PTR [rsp+0x188]
  41f111:	test   rbp,rbp
  41f114:	mov    DWORD PTR [rsp+0x44],ebx
  41f118:	je     41f199 <strcmp@plt+0x1ba01>
  41f11a:	mov    dl,BYTE PTR [rbp+0xc]
  41f11d:	movzx  eax,dl
  41f120:	xor    ecx,ecx
  41f122:	xor    edi,edi
  41f124:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f12e:	xchg   ax,ax
  41f130:	movzx  esi,dl
  41f133:	test   sil,sil
  41f136:	je     41f160 <strcmp@plt+0x1b9c8>
  41f138:	mov    r14d,esi
  41f13b:	test   eax,eax
  41f13d:	je     41f163 <strcmp@plt+0x1b9cb>
  41f13f:	mov    edx,esi
  41f141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f14b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f150:	mov    r14d,edx
  41f153:	cdq    
  41f154:	idiv   r14d
  41f157:	mov    eax,r14d
  41f15a:	test   edx,edx
  41f15c:	jne    41f150 <strcmp@plt+0x1b9b8>
  41f15e:	jmp    41f163 <strcmp@plt+0x1b9cb>
  41f160:	mov    r14d,eax
  41f163:	add    edi,esi
  41f165:	mov    rax,QWORD PTR [rsp+rcx*8+0x190]
  41f16d:	test   rax,rax
  41f170:	je     41f17d <strcmp@plt+0x1b9e5>
  41f172:	inc    rcx
  41f175:	mov    dl,BYTE PTR [rax+0xc]
  41f178:	mov    eax,r14d
  41f17b:	jmp    41f130 <strcmp@plt+0x1b998>
  41f17d:	mov    rax,QWORD PTR [rsp+0x38]
  41f182:	lea    r12,[rax+0x1c]
  41f186:	test   edi,edi
  41f188:	je     41f1a5 <strcmp@plt+0x1ba0d>
  41f18a:	mov    QWORD PTR [rsp+0x30],rdi
  41f18f:	mov    eax,edi
  41f191:	cdq    
  41f192:	idiv   r14d
  41f195:	mov    cl,0x1
  41f197:	jmp    41f1da <strcmp@plt+0x1ba42>
  41f199:	mov    rax,QWORD PTR [rsp+0x38]
  41f19e:	lea    r12,[rax+0x1c]
  41f1a2:	xor    r14d,r14d
  41f1a5:	xor    eax,eax
  41f1a7:	test   rbp,rbp
  41f1aa:	je     41f1d1 <strcmp@plt+0x1ba39>
  41f1ac:	mov    QWORD PTR [rsp+0x30],rax
  41f1b1:	xor    eax,eax
  41f1b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1bd:	nop    DWORD PTR [rax]
  41f1c0:	cmp    QWORD PTR [rsp+rax*8+0x190],0x0
  41f1c9:	lea    rax,[rax+0x1]
  41f1cd:	jne    41f1c0 <strcmp@plt+0x1ba28>
  41f1cf:	jmp    41f1d8 <strcmp@plt+0x1ba40>
  41f1d1:	mov    QWORD PTR [rsp+0x30],rax
  41f1d6:	xor    eax,eax
  41f1d8:	xor    ecx,ecx
  41f1da:	mov    QWORD PTR [rsp+0x58],rcx
  41f1df:	movsxd rbx,eax
  41f1e2:	lea    rdi,[rbx*8+0x0]
  41f1ea:	vzeroupper 
  41f1ed:	call   431d90 <strcmp@plt+0x2e5f8>
  41f1f2:	mov    rcx,rax
  41f1f5:	mov    DWORD PTR [r12],ebx
  41f1f9:	test   rbp,rbp
  41f1fc:	mov    r9,QWORD PTR [rsp+0x58]
  41f201:	je     41f425 <strcmp@plt+0x1bc8d>
  41f207:	lea    rax,[rcx+0x8]
  41f20b:	mov    QWORD PTR [rsp+0x60],rax
  41f210:	lea    rax,[rcx+0xe0]
  41f217:	mov    QWORD PTR [rsp+0x68],rax
  41f21c:	xor    r12d,r12d
  41f21f:	xor    edi,edi
  41f221:	jmp    41f24f <strcmp@plt+0x1bab7>
  41f223:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f22d:	nop    DWORD PTR [rax]
  41f230:	lea    r13,[rsp+r12*8]
  41f234:	add    r13,0x190
  41f23b:	mov    rbp,QWORD PTR [rsp+r12*8+0x190]
  41f243:	inc    r12
  41f246:	test   rbp,rbp
  41f249:	je     41f425 <strcmp@plt+0x1bc8d>
  41f24f:	mov    eax,0x1
  41f254:	test   r9b,r9b
  41f257:	je     41f266 <strcmp@plt+0x1bace>
  41f259:	movzx  eax,BYTE PTR [rbp+0xc]
  41f25d:	xor    edx,edx
  41f25f:	idiv   r14d
  41f262:	test   eax,eax
  41f264:	jle    41f230 <strcmp@plt+0x1ba98>
  41f266:	movsxd rdi,edi
  41f269:	lea    edx,[rax-0x1]
  41f26c:	lea    rbp,[rdx+0x1]
  41f270:	xor    r10d,r10d
  41f273:	cmp    rbp,0x10
  41f277:	jb     41f370 <strcmp@plt+0x1bbd8>
  41f27d:	lea    rsi,[rsp+r12*8]
  41f281:	add    rsi,0x189
  41f288:	lea    rbx,[rcx+rdi*8]
  41f28c:	cmp    rbx,rsi
  41f28f:	jae    41f2a7 <strcmp@plt+0x1bb0f>
  41f291:	shl    rdx,0x3
  41f295:	lea    rdx,[rdx+rdi*8]
  41f299:	add    rdx,QWORD PTR [rsp+0x60]
  41f29e:	cmp    rdx,r13
  41f2a1:	ja     41f370 <strcmp@plt+0x1bbd8>
  41f2a7:	mov    r10,rbp
  41f2aa:	movabs rdx,0x1fffffff0
  41f2b4:	and    r10,rdx
  41f2b7:	lea    rsi,[r10-0x10]
  41f2bb:	mov    rdx,rsi
  41f2be:	shr    rdx,0x4
  41f2c2:	inc    rdx
  41f2c5:	mov    r9d,edx
  41f2c8:	and    r9d,0x1
  41f2cc:	test   rsi,rsi
  41f2cf:	je     41f415 <strcmp@plt+0x1bc7d>
  41f2d5:	vbroadcastsd ymm0,QWORD PTR [r13+0x0]
  41f2db:	mov    rsi,QWORD PTR [rsp+0x68]
  41f2e0:	lea    r8,[rsi+rdi*8]
  41f2e4:	mov    r11,r9
  41f2e7:	sub    r11,rdx
  41f2ea:	xor    ebx,ebx
  41f2ec:	nop    DWORD PTR [rax+0x0]
  41f2f0:	vmovups YMMWORD PTR [r8+rbx*8-0xe0],ymm0
  41f2fa:	vmovups YMMWORD PTR [r8+rbx*8-0xc0],ymm0
  41f304:	vmovups YMMWORD PTR [r8+rbx*8-0xa0],ymm0
  41f30e:	vmovups YMMWORD PTR [r8+rbx*8-0x80],ymm0
  41f315:	vmovups YMMWORD PTR [r8+rbx*8-0x60],ymm0
  41f31c:	vmovups YMMWORD PTR [r8+rbx*8-0x40],ymm0
  41f323:	vmovups YMMWORD PTR [r8+rbx*8-0x20],ymm0
  41f32a:	vmovups YMMWORD PTR [r8+rbx*8],ymm0
  41f330:	add    rbx,0x20
  41f334:	add    r11,0x2
  41f338:	jne    41f2f0 <strcmp@plt+0x1bb58>
  41f33a:	test   r9,r9
  41f33d:	je     41f35f <strcmp@plt+0x1bbc7>
  41f33f:	add    rbx,rdi
  41f342:	vbroadcastsd ymm0,QWORD PTR [r13+0x0]
  41f348:	vmovups YMMWORD PTR [rcx+rbx*8],ymm0
  41f34d:	vmovups YMMWORD PTR [rcx+rbx*8+0x20],ymm0
  41f353:	vmovups YMMWORD PTR [rcx+rbx*8+0x40],ymm0
  41f359:	vmovups YMMWORD PTR [rcx+rbx*8+0x60],ymm0
  41f35f:	add    rdi,r10
  41f362:	cmp    rbp,r10
  41f365:	mov    r9,QWORD PTR [rsp+0x58]
  41f36a:	je     41f230 <strcmp@plt+0x1ba98>
  41f370:	mov    ebx,eax
  41f372:	sub    ebx,r10d
  41f375:	mov    r8d,r10d
  41f378:	not    r8d
  41f37b:	add    r8d,eax
  41f37e:	and    ebx,0x7
  41f381:	je     41f3a8 <strcmp@plt+0x1bc10>
  41f383:	lea    rdx,[rcx+rdi*8]
  41f387:	neg    ebx
  41f389:	xor    esi,esi
  41f38b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f390:	mov    rbp,QWORD PTR [r13+0x0]
  41f394:	mov    QWORD PTR [rdx],rbp
  41f397:	dec    rsi
  41f39a:	add    rdx,0x8
  41f39e:	cmp    ebx,esi
  41f3a0:	jne    41f390 <strcmp@plt+0x1bbf8>
  41f3a2:	sub    rdi,rsi
  41f3a5:	sub    r10d,esi
  41f3a8:	cmp    r8d,0x7
  41f3ac:	jb     41f230 <strcmp@plt+0x1ba98>
  41f3b2:	sub    eax,r10d
  41f3b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f3bf:	nop
  41f3c0:	mov    rdx,QWORD PTR [r13+0x0]
  41f3c4:	mov    QWORD PTR [rcx+rdi*8],rdx
  41f3c8:	mov    rdx,QWORD PTR [r13+0x0]
  41f3cc:	mov    QWORD PTR [rcx+rdi*8+0x8],rdx
  41f3d1:	mov    rdx,QWORD PTR [r13+0x0]
  41f3d5:	mov    QWORD PTR [rcx+rdi*8+0x10],rdx
  41f3da:	mov    rdx,QWORD PTR [r13+0x0]
  41f3de:	mov    QWORD PTR [rcx+rdi*8+0x18],rdx
  41f3e3:	mov    rdx,QWORD PTR [r13+0x0]
  41f3e7:	mov    QWORD PTR [rcx+rdi*8+0x20],rdx
  41f3ec:	mov    rdx,QWORD PTR [r13+0x0]
  41f3f0:	mov    QWORD PTR [rcx+rdi*8+0x28],rdx
  41f3f5:	mov    rdx,QWORD PTR [r13+0x0]
  41f3f9:	mov    QWORD PTR [rcx+rdi*8+0x30],rdx
  41f3fe:	mov    rdx,QWORD PTR [r13+0x0]
  41f402:	mov    QWORD PTR [rcx+rdi*8+0x38],rdx
  41f407:	add    rdi,0x8
  41f40b:	add    eax,0xfffffff8
  41f40e:	jne    41f3c0 <strcmp@plt+0x1bc28>
  41f410:	jmp    41f230 <strcmp@plt+0x1ba98>
  41f415:	xor    ebx,ebx
  41f417:	test   r9,r9
  41f41a:	jne    41f33f <strcmp@plt+0x1bba7>
  41f420:	jmp    41f35f <strcmp@plt+0x1bbc7>
  41f425:	mov    r13,QWORD PTR [rsp+0x38]
  41f42a:	mov    QWORD PTR [r13+0x8],rcx
  41f42e:	mov    r12,QWORD PTR [rsp+0x50]
  41f433:	mov    r8,QWORD PTR [rsp+0x30]
  41f438:	mov    rax,QWORD PTR [r13+0x0]
  41f43c:	test   rax,rax
  41f43f:	je     41f7bb <strcmp@plt+0x1c023>
  41f445:	mov    rcx,QWORD PTR [r13+0x8]
  41f449:	test   rcx,rcx
  41f44c:	je     41f7bb <strcmp@plt+0x1c023>
  41f452:	mov    edx,DWORD PTR [rsp+0x40]
  41f456:	cmp    edx,DWORD PTR [rsp+0x44]
  41f45a:	jge    41f46d <strcmp@plt+0x1bcd5>
  41f45c:	mov    QWORD PTR [r13+0x10],rax
  41f460:	mov    eax,DWORD PTR [r13+0x18]
  41f464:	mov    DWORD PTR [r13+0x20],eax
  41f468:	jmp    41f7bb <strcmp@plt+0x1c023>
  41f46d:	jle    41f480 <strcmp@plt+0x1bce8>
  41f46f:	mov    QWORD PTR [r13+0x10],rcx
  41f473:	mov    eax,DWORD PTR [r13+0x1c]
  41f477:	mov    DWORD PTR [r13+0x20],eax
  41f47b:	jmp    41f7bb <strcmp@plt+0x1c023>
  41f480:	test   r14d,r14d
  41f483:	je     41f4a6 <strcmp@plt+0x1bd0e>
  41f485:	test   r15d,r15d
  41f488:	je     41f4ab <strcmp@plt+0x1bd13>
  41f48a:	nop    WORD PTR [rax+rax*1+0x0]
  41f490:	mov    r13d,r14d
  41f493:	mov    eax,r15d
  41f496:	cdq    
  41f497:	idiv   r14d
  41f49a:	mov    r15d,r14d
  41f49d:	mov    r14d,edx
  41f4a0:	test   edx,edx
  41f4a2:	jne    41f490 <strcmp@plt+0x1bcf8>
  41f4a4:	jmp    41f4ae <strcmp@plt+0x1bd16>
  41f4a6:	mov    r13d,r15d
  41f4a9:	jmp    41f4ae <strcmp@plt+0x1bd16>
  41f4ab:	mov    r13d,r14d
  41f4ae:	mov    rcx,QWORD PTR [rsp+0x80]
  41f4b6:	xor    eax,eax
  41f4b8:	test   rcx,rcx
  41f4bb:	je     41f4d8 <strcmp@plt+0x1bd40>
  41f4bd:	nop    DWORD PTR [rax]
  41f4c0:	mov    QWORD PTR [rsp+rax*8+0x290],rcx
  41f4c8:	mov    rcx,QWORD PTR [rsp+rax*8+0x88]
  41f4d0:	inc    rax
  41f4d3:	test   rcx,rcx
  41f4d6:	jne    41f4c0 <strcmp@plt+0x1bd28>
  41f4d8:	mov    rdi,QWORD PTR [rsp+0x48]
  41f4dd:	mov    rcx,QWORD PTR [rsp+0x188]
  41f4e5:	test   rcx,rcx
  41f4e8:	je     41f516 <strcmp@plt+0x1bd7e>
  41f4ea:	movsxd rdx,eax
  41f4ed:	lea    rsi,[rsp+0x290]
  41f4f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f4ff:	nop
  41f500:	mov    QWORD PTR [rsi+rdx*8],rcx
  41f504:	mov    rcx,QWORD PTR [rsi-0x100]
  41f50b:	add    rsi,0x8
  41f50f:	inc    eax
  41f511:	test   rcx,rcx
  41f514:	jne    41f500 <strcmp@plt+0x1bd68>
  41f516:	cdqe   
  41f518:	mov    QWORD PTR [rsp+rax*8+0x290],0x0
  41f524:	add    r8d,edi
  41f527:	mov    QWORD PTR [rsp+0x30],r8
  41f52c:	je     41f537 <strcmp@plt+0x1bd9f>
  41f52e:	mov    eax,r8d
  41f531:	cdq    
  41f532:	idiv   r13d
  41f535:	jmp    41f55c <strcmp@plt+0x1bdc4>
  41f537:	lea    rcx,[rsp+0x290]
  41f53f:	mov    eax,0xffffffff
  41f544:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f54e:	xchg   ax,ax
  41f550:	inc    eax
  41f552:	cmp    QWORD PTR [rcx],0x0
  41f556:	lea    rcx,[rcx+0x8]
  41f55a:	jne    41f550 <strcmp@plt+0x1bdb8>
  41f55c:	movsxd rbx,eax
  41f55f:	lea    rdi,[rbx*8+0x0]
  41f567:	vzeroupper 
  41f56a:	call   431d90 <strcmp@plt+0x2e5f8>
  41f56f:	mov    rcx,rax
  41f572:	mov    rax,QWORD PTR [rsp+0x38]
  41f577:	mov    DWORD PTR [rax+0x20],ebx
  41f57a:	mov    rax,QWORD PTR [rsp+0x290]
  41f582:	test   rax,rax
  41f585:	mov    rsi,QWORD PTR [rsp+0x30]
  41f58a:	je     41f7ad <strcmp@plt+0x1c015>
  41f590:	lea    rdi,[rsp+0x290]
  41f598:	movabs r8,0x1fffffff0
  41f5a2:	lea    r10,[rcx+0x8]
  41f5a6:	lea    r9,[rcx+0xe0]
  41f5ad:	xor    r12d,r12d
  41f5b0:	xor    ebp,ebp
  41f5b2:	test   esi,esi
  41f5b4:	jne    41f5e3 <strcmp@plt+0x1be4b>
  41f5b6:	jmp    41f600 <strcmp@plt+0x1be68>
  41f5b8:	nop    DWORD PTR [rax+rax*1+0x0]
  41f5c0:	lea    rdi,[rsp+r12*8]
  41f5c4:	add    rdi,0x298
  41f5cb:	mov    rax,QWORD PTR [rsp+r12*8+0x298]
  41f5d3:	inc    r12
  41f5d6:	test   rax,rax
  41f5d9:	je     41f7ad <strcmp@plt+0x1c015>
  41f5df:	test   esi,esi
  41f5e1:	je     41f600 <strcmp@plt+0x1be68>
  41f5e3:	movzx  eax,BYTE PTR [rax+0xc]
  41f5e7:	xor    edx,edx
  41f5e9:	idiv   r13d
  41f5ec:	test   eax,eax
  41f5ee:	jg     41f605 <strcmp@plt+0x1be6d>
  41f5f0:	jmp    41f5c0 <strcmp@plt+0x1be28>
  41f5f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f5fc:	nop    DWORD PTR [rax+0x0]
  41f600:	mov    eax,0x1
  41f605:	movsxd rbp,ebp
  41f608:	lea    edx,[rax-0x1]
  41f60b:	lea    r14,[rdx+0x1]
  41f60f:	xor    r15d,r15d
  41f612:	cmp    r14,0x10
  41f616:	jb     41f700 <strcmp@plt+0x1bf68>
  41f61c:	lea    rsi,[rsp+r12*8]
  41f620:	add    rsi,0x291
  41f627:	lea    rbx,[rcx+rbp*8]
  41f62b:	cmp    rbx,rsi
  41f62e:	jae    41f64a <strcmp@plt+0x1beb2>
  41f630:	shl    rdx,0x3
  41f634:	lea    rdx,[rdx+rbp*8]
  41f638:	add    rdx,r10
  41f63b:	cmp    rdx,rdi
  41f63e:	jbe    41f64a <strcmp@plt+0x1beb2>
  41f640:	mov    rsi,QWORD PTR [rsp+0x30]
  41f645:	jmp    41f700 <strcmp@plt+0x1bf68>
  41f64a:	mov    r15,r14
  41f64d:	and    r15,r8
  41f650:	lea    rdx,[r15-0x10]
  41f654:	mov    rbx,rdx
  41f657:	shr    rbx,0x4
  41f65b:	inc    rbx
  41f65e:	mov    r11d,ebx
  41f661:	and    r11d,0x1
  41f665:	test   rdx,rdx
  41f668:	je     41f79d <strcmp@plt+0x1c005>
  41f66e:	vbroadcastsd ymm0,QWORD PTR [rdi]
  41f673:	lea    rdx,[r9+rbp*8]
  41f677:	mov    rsi,r11
  41f67a:	sub    rsi,rbx
  41f67d:	xor    ebx,ebx
  41f67f:	nop
  41f680:	vmovups YMMWORD PTR [rdx+rbx*8-0xe0],ymm0
  41f689:	vmovups YMMWORD PTR [rdx+rbx*8-0xc0],ymm0
  41f692:	vmovups YMMWORD PTR [rdx+rbx*8-0xa0],ymm0
  41f69b:	vmovups YMMWORD PTR [rdx+rbx*8-0x80],ymm0
  41f6a1:	vmovups YMMWORD PTR [rdx+rbx*8-0x60],ymm0
  41f6a7:	vmovups YMMWORD PTR [rdx+rbx*8-0x40],ymm0
  41f6ad:	vmovups YMMWORD PTR [rdx+rbx*8-0x20],ymm0
  41f6b3:	vmovups YMMWORD PTR [rdx+rbx*8],ymm0
  41f6b8:	add    rbx,0x20
  41f6bc:	add    rsi,0x2
  41f6c0:	jne    41f680 <strcmp@plt+0x1bee8>
  41f6c2:	test   r11,r11
  41f6c5:	je     41f6e6 <strcmp@plt+0x1bf4e>
  41f6c7:	add    rbx,rbp
  41f6ca:	vbroadcastsd ymm0,QWORD PTR [rdi]
  41f6cf:	vmovups YMMWORD PTR [rcx+rbx*8],ymm0
  41f6d4:	vmovups YMMWORD PTR [rcx+rbx*8+0x20],ymm0
  41f6da:	vmovups YMMWORD PTR [rcx+rbx*8+0x40],ymm0
  41f6e0:	vmovups YMMWORD PTR [rcx+rbx*8+0x60],ymm0
  41f6e6:	add    rbp,r15
  41f6e9:	cmp    r14,r15
  41f6ec:	mov    rsi,QWORD PTR [rsp+0x30]
  41f6f1:	je     41f5c0 <strcmp@plt+0x1be28>
  41f6f7:	nop    WORD PTR [rax+rax*1+0x0]
  41f700:	mov    r14d,eax
  41f703:	sub    r14d,r15d
  41f706:	mov    r11d,r15d
  41f709:	not    r11d
  41f70c:	add    r11d,eax
  41f70f:	and    r14d,0x7
  41f713:	je     41f73d <strcmp@plt+0x1bfa5>
  41f715:	lea    rsi,[rcx+rbp*8]
  41f719:	neg    r14d
  41f71c:	xor    ebx,ebx
  41f71e:	xchg   ax,ax
  41f720:	mov    rdx,QWORD PTR [rdi]
  41f723:	mov    QWORD PTR [rsi],rdx
  41f726:	dec    rbx
  41f729:	add    rsi,0x8
  41f72d:	cmp    r14d,ebx
  41f730:	jne    41f720 <strcmp@plt+0x1bf88>
  41f732:	sub    rbp,rbx
  41f735:	sub    r15d,ebx
  41f738:	mov    rsi,QWORD PTR [rsp+0x30]
  41f73d:	cmp    r11d,0x7
  41f741:	jb     41f5c0 <strcmp@plt+0x1be28>
  41f747:	sub    eax,r15d
  41f74a:	nop    WORD PTR [rax+rax*1+0x0]
  41f750:	mov    rdx,QWORD PTR [rdi]
  41f753:	mov    QWORD PTR [rcx+rbp*8],rdx
  41f757:	mov    rdx,QWORD PTR [rdi]
  41f75a:	mov    QWORD PTR [rcx+rbp*8+0x8],rdx
  41f75f:	mov    rdx,QWORD PTR [rdi]
  41f762:	mov    QWORD PTR [rcx+rbp*8+0x10],rdx
  41f767:	mov    rdx,QWORD PTR [rdi]
  41f76a:	mov    QWORD PTR [rcx+rbp*8+0x18],rdx
  41f76f:	mov    rdx,QWORD PTR [rdi]
  41f772:	mov    QWORD PTR [rcx+rbp*8+0x20],rdx
  41f777:	mov    rdx,QWORD PTR [rdi]
  41f77a:	mov    QWORD PTR [rcx+rbp*8+0x28],rdx
  41f77f:	mov    rdx,QWORD PTR [rdi]
  41f782:	mov    QWORD PTR [rcx+rbp*8+0x30],rdx
  41f787:	mov    rdx,QWORD PTR [rdi]
  41f78a:	mov    QWORD PTR [rcx+rbp*8+0x38],rdx
  41f78f:	add    rbp,0x8
  41f793:	add    eax,0xfffffff8
  41f796:	jne    41f750 <strcmp@plt+0x1bfb8>
  41f798:	jmp    41f5c0 <strcmp@plt+0x1be28>
  41f79d:	xor    ebx,ebx
  41f79f:	test   r11,r11
  41f7a2:	jne    41f6c7 <strcmp@plt+0x1bf2f>
  41f7a8:	jmp    41f6e6 <strcmp@plt+0x1bf4e>
  41f7ad:	mov    r13,QWORD PTR [rsp+0x38]
  41f7b2:	mov    QWORD PTR [r13+0x10],rcx
  41f7b6:	mov    r12,QWORD PTR [rsp+0x50]
  41f7bb:	mov    rax,QWORD PTR [r13+0x20]
  41f7bf:	mov    QWORD PTR [rsp+0x20],rax
  41f7c4:	vmovups ymm0,YMMWORD PTR [r13+0x0]
  41f7ca:	vmovups YMMWORD PTR [rsp],ymm0
  41f7cf:	mov    rdi,QWORD PTR [rsp+0x70]
  41f7d4:	mov    esi,0x5
  41f7d9:	vzeroupper 
  41f7dc:	call   41f860 <strcmp@plt+0x1c0c8>
  41f7e1:	mov    rdi,QWORD PTR [rsp+0x78]
  41f7e6:	call   42bff0 <strcmp@plt+0x28858>
  41f7eb:	mov    rdi,r12
  41f7ee:	call   42bff0 <strcmp@plt+0x28858>
  41f7f3:	mov    eax,0x1
  41f7f8:	add    rsp,0x398
  41f7ff:	pop    rbx
  41f800:	pop    r12
  41f802:	pop    r13
  41f804:	pop    r14
  41f806:	pop    r15
  41f808:	pop    rbp
  41f809:	ret    
  41f80a:	nop    WORD PTR [rax+rax*1+0x0]
  41f810:	push   rbx
  41f811:	mov    rbx,rdi
  41f814:	mov    rdi,QWORD PTR [rdi+0x10]
  41f818:	test   rdi,rdi
  41f81b:	je     41f830 <strcmp@plt+0x1c098>
  41f81d:	mov    rax,QWORD PTR [rbx]
  41f820:	cmp    rdi,rax
  41f823:	je     41f833 <strcmp@plt+0x1c09b>
  41f825:	cmp    rdi,QWORD PTR [rbx+0x8]
  41f829:	je     41f830 <strcmp@plt+0x1c098>
  41f82b:	call   403790 <free@plt>
  41f830:	mov    rax,QWORD PTR [rbx]
  41f833:	test   rax,rax
  41f836:	je     41f840 <strcmp@plt+0x1c0a8>
  41f838:	mov    rdi,rax
  41f83b:	call   403790 <free@plt>
  41f840:	mov    rdi,QWORD PTR [rbx+0x8]
  41f844:	test   rdi,rdi
  41f847:	je     41f84e <strcmp@plt+0x1c0b6>
  41f849:	call   403790 <free@plt>
  41f84e:	mov    rdi,rbx
  41f851:	pop    rbx
  41f852:	jmp    403790 <free@plt>
  41f857:	nop    WORD PTR [rax+rax*1+0x0]
  41f860:	push   rbp
  41f861:	push   r15
  41f863:	push   r14
  41f865:	push   r13
  41f867:	push   r12
  41f869:	push   rbx
  41f86a:	sub    rsp,0xbc8
  41f871:	mov    ebx,esi
  41f873:	cmp    esi,0x5
  41f876:	jl     41f88c <strcmp@plt+0x1c0f4>
  41f878:	lea    rax,[rip+0x45541]        # 464dc0 <strcmp@plt+0x61628>
  41f87f:	mov    eax,DWORD PTR [rax]
  41f881:	add    eax,0x4
  41f884:	cmp    eax,ebx
  41f886:	jl     41fad5 <strcmp@plt+0x1c33d>
  41f88c:	lea    rbp,[rsp+0xc00]
  41f894:	call   422e20 <strcmp@plt+0x1f688>
  41f899:	lea    rsi,[rip+0x2911b]        # 4489bb <strcmp@plt+0x45223>
  41f8a0:	mov    DWORD PTR [rsp+0xc],ebx
  41f8a4:	mov    edi,ebx
  41f8a6:	mov    rdx,rax
  41f8a9:	xor    eax,eax
  41f8ab:	call   42e520 <strcmp@plt+0x2ad88>
  41f8b0:	mov    ebx,DWORD PTR [rbp+0x18]
  41f8b3:	lea    rsi,[rip+0x29123]        # 4489dd <strcmp@plt+0x45245>
  41f8ba:	lea    rdi,[rsp+0x10]
  41f8bf:	mov    edx,ebx
  41f8c1:	xor    eax,eax
  41f8c3:	call   4030b0 <sprintf@plt>
  41f8c8:	test   ebx,ebx
  41f8ca:	jle    41f93a <strcmp@plt+0x1c1a2>
  41f8cc:	lea    rax,[rsp+0xc00]
  41f8d4:	mov    r13,QWORD PTR [rax]
  41f8d7:	lea    r12,[rsp+0x10]
  41f8dc:	lea    r15,[rip+0x29122]        # 448a05 <strcmp@plt+0x4526d>
  41f8e3:	xor    r14d,r14d
  41f8e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f8f0:	mov    rdi,r12
  41f8f3:	call   4031e0 <strlen@plt>
  41f8f8:	lea    rbp,[rsp+rax*1]
  41f8fc:	add    rbp,0x10
  41f900:	cmp    rax,0xb23
  41f906:	jae    41f92f <strcmp@plt+0x1c197>
  41f908:	mov    rax,QWORD PTR [r13+r14*8+0x0]
  41f90d:	mov    rdi,QWORD PTR [rax]
  41f910:	call   422e20 <strcmp@plt+0x1f688>
  41f915:	mov    rdi,rbp
  41f918:	mov    rsi,r15
  41f91b:	mov    rdx,rax
  41f91e:	xor    eax,eax
  41f920:	call   4030b0 <sprintf@plt>
  41f925:	inc    r14
  41f928:	cmp    rbx,r14
  41f92b:	jne    41f8f0 <strcmp@plt+0x1c158>
  41f92d:	jmp    41f93a <strcmp@plt+0x1c1a2>
  41f92f:	mov    BYTE PTR [rbp+0x4],0x0
  41f933:	mov    DWORD PTR [rbp+0x0],0x2e2e2e20
  41f93a:	mov    edi,DWORD PTR [rsp+0xc]
  41f93e:	cmp    edi,0x5
  41f941:	jl     41f953 <strcmp@plt+0x1c1bb>
  41f943:	lea    rax,[rip+0x45476]        # 464dc0 <strcmp@plt+0x61628>
  41f94a:	mov    eax,DWORD PTR [rax]
  41f94c:	add    eax,0x4
  41f94f:	cmp    eax,edi
  41f951:	jl     41f966 <strcmp@plt+0x1c1ce>
  41f953:	lea    rsi,[rip+0x23d5b]        # 4436b5 <strcmp@plt+0x3ff1d>
  41f95a:	lea    rdx,[rsp+0x10]
  41f95f:	xor    eax,eax
  41f961:	call   42e520 <strcmp@plt+0x2ad88>
  41f966:	lea    rax,[rsp+0xc00]
  41f96e:	mov    r13d,DWORD PTR [rax+0x1c]
  41f972:	lea    rsi,[rip+0x29092]        # 448a0b <strcmp@plt+0x45273>
  41f979:	lea    rdi,[rsp+0x10]
  41f97e:	mov    edx,r13d
  41f981:	xor    eax,eax
  41f983:	call   4030b0 <sprintf@plt>
  41f988:	test   r13d,r13d
  41f98b:	jle    41f9f9 <strcmp@plt+0x1c261>
  41f98d:	lea    rax,[rsp+0xc00]
  41f995:	mov    r14,QWORD PTR [rax+0x8]
  41f999:	lea    r12,[rsp+0x10]
  41f99e:	lea    r15,[rip+0x29060]        # 448a05 <strcmp@plt+0x4526d>
  41f9a5:	xor    ebx,ebx
  41f9a7:	nop    WORD PTR [rax+rax*1+0x0]
  41f9b0:	mov    rdi,r12
  41f9b3:	call   4031e0 <strlen@plt>
  41f9b8:	lea    rbp,[rsp+rax*1]
  41f9bc:	add    rbp,0x10
  41f9c0:	cmp    rax,0xb55
  41f9c6:	jae    41f9ee <strcmp@plt+0x1c256>
  41f9c8:	mov    rax,QWORD PTR [r14+rbx*8]
  41f9cc:	mov    rdi,QWORD PTR [rax]
  41f9cf:	call   422e20 <strcmp@plt+0x1f688>
  41f9d4:	mov    rdi,rbp
  41f9d7:	mov    rsi,r15
  41f9da:	mov    rdx,rax
  41f9dd:	xor    eax,eax
  41f9df:	call   4030b0 <sprintf@plt>
  41f9e4:	inc    rbx
  41f9e7:	cmp    r13,rbx
  41f9ea:	jne    41f9b0 <strcmp@plt+0x1c218>
  41f9ec:	jmp    41f9f9 <strcmp@plt+0x1c261>
  41f9ee:	mov    BYTE PTR [rbp+0x4],0x0
  41f9f2:	mov    DWORD PTR [rbp+0x0],0x2e2e2e20
  41f9f9:	mov    edi,DWORD PTR [rsp+0xc]
  41f9fd:	cmp    edi,0x5
  41fa00:	jl     41fa12 <strcmp@plt+0x1c27a>
  41fa02:	lea    rax,[rip+0x453b7]        # 464dc0 <strcmp@plt+0x61628>
  41fa09:	mov    eax,DWORD PTR [rax]
  41fa0b:	add    eax,0x4
  41fa0e:	cmp    eax,edi
  41fa10:	jl     41fa25 <strcmp@plt+0x1c28d>
  41fa12:	lea    rsi,[rip+0x23c9c]        # 4436b5 <strcmp@plt+0x3ff1d>
  41fa19:	lea    rdx,[rsp+0x10]
  41fa1e:	xor    eax,eax
  41fa20:	call   42e520 <strcmp@plt+0x2ad88>
  41fa25:	lea    rbx,[rsp+0xc00]
  41fa2d:	mov    r13d,DWORD PTR [rbx+0x20]
  41fa31:	lea    rsi,[rip+0x28ffb]        # 448a33 <strcmp@plt+0x4529b>
  41fa38:	lea    rdi,[rsp+0x10]
  41fa3d:	mov    edx,r13d
  41fa40:	xor    eax,eax
  41fa42:	call   4030b0 <sprintf@plt>
  41fa47:	test   r13d,r13d
  41fa4a:	jle    41faa9 <strcmp@plt+0x1c311>
  41fa4c:	mov    r14,QWORD PTR [rbx+0x10]
  41fa50:	lea    r12,[rsp+0x10]
  41fa55:	lea    r15,[rip+0x28fa9]        # 448a05 <strcmp@plt+0x4526d>
  41fa5c:	xor    ebx,ebx
  41fa5e:	xchg   ax,ax
  41fa60:	mov    rdi,r12
  41fa63:	call   4031e0 <strlen@plt>
  41fa68:	lea    rbp,[rsp+rax*1]
  41fa6c:	add    rbp,0x10
  41fa70:	cmp    rax,0xb87
  41fa76:	jae    41fa9e <strcmp@plt+0x1c306>
  41fa78:	mov    rax,QWORD PTR [r14+rbx*8]
  41fa7c:	mov    rdi,QWORD PTR [rax]
  41fa7f:	call   422e20 <strcmp@plt+0x1f688>
  41fa84:	mov    rdi,rbp
  41fa87:	mov    rsi,r15
  41fa8a:	mov    rdx,rax
  41fa8d:	xor    eax,eax
  41fa8f:	call   4030b0 <sprintf@plt>
  41fa94:	inc    rbx
  41fa97:	cmp    r13,rbx
  41fa9a:	jne    41fa60 <strcmp@plt+0x1c2c8>
  41fa9c:	jmp    41faa9 <strcmp@plt+0x1c311>
  41fa9e:	mov    BYTE PTR [rbp+0x4],0x0
  41faa2:	mov    DWORD PTR [rbp+0x0],0x2e2e2e20
  41faa9:	mov    edi,DWORD PTR [rsp+0xc]
  41faad:	cmp    edi,0x5
  41fab0:	jl     41fac2 <strcmp@plt+0x1c32a>
  41fab2:	lea    rax,[rip+0x45307]        # 464dc0 <strcmp@plt+0x61628>
  41fab9:	mov    eax,DWORD PTR [rax]
  41fabb:	add    eax,0x4
  41fabe:	cmp    eax,edi
  41fac0:	jl     41fad5 <strcmp@plt+0x1c33d>
  41fac2:	lea    rsi,[rip+0x23bec]        # 4436b5 <strcmp@plt+0x3ff1d>
  41fac9:	lea    rdx,[rsp+0x10]
  41face:	xor    eax,eax
  41fad0:	call   42e520 <strcmp@plt+0x2ad88>
  41fad5:	add    rsp,0xbc8
  41fadc:	pop    rbx
  41fadd:	pop    r12
  41fadf:	pop    r13
  41fae1:	pop    r14
  41fae3:	pop    r15
  41fae5:	pop    rbp
  41fae6:	ret    
  41fae7:	nop    WORD PTR [rax+rax*1+0x0]
  41faf0:	push   rbp
  41faf1:	push   r15
  41faf3:	push   r14
  41faf5:	push   r13
  41faf7:	push   r12
  41faf9:	push   rbx
  41fafa:	push   rax
  41fafb:	mov    r12,QWORD PTR [rdi]
  41fafe:	mov    r13d,DWORD PTR [r12+0x18]
  41fb03:	mov    rbp,QWORD PTR [r12+0x8]
  41fb08:	cmp    rbp,r12
  41fb0b:	je     41fb82 <strcmp@plt+0x1c3ea>
  41fb0d:	mov    r15,rsi
  41fb10:	dec    r13d
  41fb13:	lea    r14,[rip+0x3b56]        # 423670 <strcmp@plt+0x1fed8>
  41fb1a:	jmp    41fb49 <strcmp@plt+0x1c3b1>
  41fb1c:	nop    DWORD PTR [rax+0x0]
  41fb20:	mov    rdi,rbx
  41fb23:	call   422fd0 <strcmp@plt+0x1f838>
  41fb28:	mov    rbx,rax
  41fb2b:	mov    rdi,rax
  41fb2e:	mov    rsi,r15
  41fb31:	mov    rdx,r14
  41fb34:	call   42bc70 <strcmp@plt+0x284d8>
  41fb39:	cmp    al,0x1
  41fb3b:	je     41fb92 <strcmp@plt+0x1c3fa>
  41fb3d:	mov    rbp,QWORD PTR [rbp+0x8]
  41fb41:	dec    r13d
  41fb44:	cmp    rbp,r12
  41fb47:	je     41fb7d <strcmp@plt+0x1c3e5>
  41fb49:	mov    rdi,QWORD PTR [rbp+0x10]
  41fb4d:	call   428030 <strcmp@plt+0x24898>
  41fb52:	mov    rbx,rax
  41fb55:	cmp    DWORD PTR [rax+0x18],0x3
  41fb59:	jne    41fb20 <strcmp@plt+0x1c388>
  41fb5b:	mov    rdi,rbx
  41fb5e:	call   423020 <strcmp@plt+0x1f888>
  41fb63:	cmp    eax,0xa
  41fb66:	jne    41fb20 <strcmp@plt+0x1c388>
  41fb68:	mov    rdi,rbx
  41fb6b:	mov    rsi,r15
  41fb6e:	call   41fc10 <strcmp@plt+0x1c478>
  41fb73:	test   rax,rax
  41fb76:	je     41fb3d <strcmp@plt+0x1c3a5>
  41fb78:	mov    rbx,rax
  41fb7b:	jmp    41fbba <strcmp@plt+0x1c422>
  41fb7d:	mov    r13d,DWORD PTR [r12+0x18]
  41fb82:	test   r13d,r13d
  41fb85:	je     41fb8e <strcmp@plt+0x1c3f6>
  41fb87:	mov    rax,QWORD PTR [r12+0x8]
  41fb8c:	jmp    41fb9b <strcmp@plt+0x1c403>
  41fb8e:	xor    edi,edi
  41fb90:	jmp    41fb9f <strcmp@plt+0x1c407>
  41fb92:	test   r13d,r13d
  41fb95:	je     41fbba <strcmp@plt+0x1c422>
  41fb97:	mov    rax,QWORD PTR [rbp+0x8]
  41fb9b:	mov    rdi,QWORD PTR [rax+0x10]
  41fb9f:	call   428030 <strcmp@plt+0x24898>
  41fba4:	mov    rdi,rax
  41fba7:	add    rsp,0x8
  41fbab:	pop    rbx
  41fbac:	pop    r12
  41fbae:	pop    r13
  41fbb0:	pop    r14
  41fbb2:	pop    r15
  41fbb4:	pop    rbp
  41fbb5:	jmp    422fd0 <strcmp@plt+0x1f838>
  41fbba:	mov    rax,rbx
  41fbbd:	add    rsp,0x8
  41fbc1:	pop    rbx
  41fbc2:	pop    r12
  41fbc4:	pop    r13
  41fbc6:	pop    r14
  41fbc8:	pop    r15
  41fbca:	pop    rbp
  41fbcb:	ret    
  41fbcc:	nop    DWORD PTR [rax+0x0]
  41fbd0:	mov    r8,QWORD PTR [rdi]
  41fbd3:	mov    rdx,QWORD PTR [r8+0x8]
  41fbd7:	cmp    rdx,r8
  41fbda:	je     41fc0d <strcmp@plt+0x1c475>
  41fbdc:	mov    esi,0xffffffff
  41fbe1:	xor    eax,eax
  41fbe3:	jmp    41fbf9 <strcmp@plt+0x1c461>
  41fbe5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fbef:	nop
  41fbf0:	mov    rdx,QWORD PTR [rdx+0x8]
  41fbf4:	cmp    rdx,r8
  41fbf7:	je     41fc0c <strcmp@plt+0x1c474>
  41fbf9:	mov    rcx,QWORD PTR [rdx+0x10]
  41fbfd:	movzx  edi,BYTE PTR [rcx+0x8]
  41fc01:	cmp    esi,edi
  41fc03:	jge    41fbf0 <strcmp@plt+0x1c458>
  41fc05:	mov    rax,QWORD PTR [rcx]
  41fc08:	mov    esi,edi
  41fc0a:	jmp    41fbf0 <strcmp@plt+0x1c458>
  41fc0c:	ret    
  41fc0d:	xor    eax,eax
  41fc0f:	ret    
  41fc10:	push   r15
  41fc12:	push   r14
  41fc14:	push   rbx
  41fc15:	mov    rbx,rdi
  41fc18:	mov    eax,DWORD PTR [rdi+0x18]
  41fc1b:	cmp    eax,0x1
  41fc1e:	je     41fcb9 <strcmp@plt+0x1c521>
  41fc24:	cmp    eax,0x3
  41fc27:	je     41fc49 <strcmp@plt+0x1c4b1>
  41fc29:	cmp    eax,0x2
  41fc2c:	jne    41fcb7 <strcmp@plt+0x1c51f>
  41fc32:	lea    rsi,[rip+0x28e7b]        # 448ab4 <strcmp@plt+0x4531c>
  41fc39:	xor    ebx,ebx
  41fc3b:	mov    edi,0x3
  41fc40:	xor    eax,eax
  41fc42:	call   42e520 <strcmp@plt+0x2ad88>
  41fc47:	jmp    41fcb9 <strcmp@plt+0x1c521>
  41fc49:	mov    r14,rsi
  41fc4c:	mov    rdi,rbx
  41fc4f:	call   4267b0 <strcmp@plt+0x23018>
  41fc54:	mov    eax,eax
  41fc56:	lea    r15,[rip+0x44ba3]        # 464800 <strcmp@plt+0x61068>
  41fc5d:	cmp    QWORD PTR [r15+rax*8],0x0
  41fc62:	je     41fc8a <strcmp@plt+0x1c4f2>
  41fc64:	mov    rdi,rbx
  41fc67:	call   4267b0 <strcmp@plt+0x23018>
  41fc6c:	mov    eax,eax
  41fc6e:	mov    r15,QWORD PTR [r15+rax*8]
  41fc72:	mov    rdi,rbx
  41fc75:	call   426830 <strcmp@plt+0x23098>
  41fc7a:	mov    rdi,rax
  41fc7d:	mov    rsi,r14
  41fc80:	mov    rax,r15
  41fc83:	pop    rbx
  41fc84:	pop    r14
  41fc86:	pop    r15
  41fc88:	jmp    rax
  41fc8a:	lea    rax,[rip+0x4512f]        # 464dc0 <strcmp@plt+0x61628>
  41fc91:	cmp    DWORD PTR [rax],0x0
  41fc94:	jle    41fcb7 <strcmp@plt+0x1c51f>
  41fc96:	mov    rdi,rbx
  41fc99:	call   4267b0 <strcmp@plt+0x23018>
  41fc9e:	lea    rsi,[rip+0x28e41]        # 448ae6 <strcmp@plt+0x4534e>
  41fca5:	xor    ebx,ebx
  41fca7:	mov    edi,0x5
  41fcac:	mov    edx,eax
  41fcae:	xor    eax,eax
  41fcb0:	call   42e520 <strcmp@plt+0x2ad88>
  41fcb5:	jmp    41fcb9 <strcmp@plt+0x1c521>
  41fcb7:	xor    ebx,ebx
  41fcb9:	mov    rax,rbx
  41fcbc:	pop    rbx
  41fcbd:	pop    r14
  41fcbf:	pop    r15
  41fcc1:	ret    
  41fcc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fccc:	nop    DWORD PTR [rax+0x0]
  41fcd0:	push   r15
  41fcd2:	push   r14
  41fcd4:	push   rbx
  41fcd5:	mov    r14,rsi
  41fcd8:	mov    rbx,rdi
  41fcdb:	call   4267b0 <strcmp@plt+0x23018>
  41fce0:	mov    eax,eax
  41fce2:	lea    r15,[rip+0x44b17]        # 464800 <strcmp@plt+0x61068>
  41fce9:	cmp    QWORD PTR [r15+rax*8],0x0
  41fcee:	je     41fd16 <strcmp@plt+0x1c57e>
  41fcf0:	mov    rdi,rbx
  41fcf3:	call   4267b0 <strcmp@plt+0x23018>
  41fcf8:	mov    eax,eax
  41fcfa:	mov    r15,QWORD PTR [r15+rax*8]
  41fcfe:	mov    rdi,rbx
  41fd01:	call   426830 <strcmp@plt+0x23098>
  41fd06:	mov    rdi,rax
  41fd09:	mov    rsi,r14
  41fd0c:	mov    rax,r15
  41fd0f:	pop    rbx
  41fd10:	pop    r14
  41fd12:	pop    r15
  41fd14:	jmp    rax
  41fd16:	lea    rax,[rip+0x450a3]        # 464dc0 <strcmp@plt+0x61628>
  41fd1d:	cmp    DWORD PTR [rax],0x0
  41fd20:	jle    41fd3f <strcmp@plt+0x1c5a7>
  41fd22:	mov    rdi,rbx
  41fd25:	call   4267b0 <strcmp@plt+0x23018>
  41fd2a:	lea    rsi,[rip+0x28db5]        # 448ae6 <strcmp@plt+0x4534e>
  41fd31:	mov    edi,0x5
  41fd36:	mov    edx,eax
  41fd38:	xor    eax,eax
  41fd3a:	call   42e520 <strcmp@plt+0x2ad88>
  41fd3f:	xor    eax,eax
  41fd41:	pop    rbx
  41fd42:	pop    r14
  41fd44:	pop    r15
  41fd46:	ret    
  41fd47:	nop    WORD PTR [rax+rax*1+0x0]
  41fd50:	push   r14
  41fd52:	push   rbx
  41fd53:	push   rax
  41fd54:	mov    rbx,rdi
  41fd57:	lea    rsi,[rip+0x28db9]        # 448b17 <strcmp@plt+0x4537f>
  41fd5e:	call   403798 <strcmp@plt>
  41fd63:	test   eax,eax
  41fd65:	je     41fd95 <strcmp@plt+0x1c5fd>
  41fd67:	lea    rsi,[rip+0x28db8]        # 448b26 <strcmp@plt+0x4538e>
  41fd6e:	mov    rdi,rbx
  41fd71:	call   403798 <strcmp@plt>
  41fd76:	test   eax,eax
  41fd78:	je     41fd9e <strcmp@plt+0x1c606>
  41fd7a:	lea    rsi,[rip+0x28db3]        # 448b34 <strcmp@plt+0x4539c>
  41fd81:	xor    r14d,r14d
  41fd84:	mov    edi,0x2
  41fd89:	mov    rdx,rbx
  41fd8c:	xor    eax,eax
  41fd8e:	call   42e520 <strcmp@plt+0x2ad88>
  41fd93:	jmp    41fda5 <strcmp@plt+0x1c60d>
  41fd95:	lea    r14,[rip+0x44ae4]        # 464880 <strcmp@plt+0x610e8>
  41fd9c:	jmp    41fda5 <strcmp@plt+0x1c60d>
  41fd9e:	lea    r14,[rip+0x5079b]        # 470540 <strcmp@plt+0x6cda8>
  41fda5:	mov    rax,r14
  41fda8:	add    rsp,0x8
  41fdac:	pop    rbx
  41fdad:	pop    r14
  41fdaf:	ret    
  41fdb0:	push   rbx
  41fdb1:	mov    edi,0x8
  41fdb6:	call   431d60 <strcmp@plt+0x2e5c8>
  41fdbb:	mov    rbx,rax
  41fdbe:	mov    rdi,QWORD PTR [rip+0x441db]        # 463fa0 <strcmp@plt+0x60808>
  41fdc5:	call   435e70 <strcmp@plt+0x326d8>
  41fdca:	mov    QWORD PTR [rbx],rax
  41fdcd:	mov    rax,rbx
  41fdd0:	pop    rbx
  41fdd1:	ret    
  41fdd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fddc:	nop    DWORD PTR [rax+0x0]
  41fde0:	push   rbx
  41fde1:	mov    rbx,rdi
  41fde4:	mov    rdi,QWORD PTR [rdi]
  41fde7:	call   436460 <strcmp@plt+0x32cc8>
  41fdec:	mov    rdi,rbx
  41fdef:	pop    rbx
  41fdf0:	jmp    403790 <free@plt>
  41fdf5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fdff:	nop
  41fe00:	push   r14
  41fe02:	push   rbx
  41fe03:	push   rax
  41fe04:	mov    r14,rdi
  41fe07:	mov    edi,0x18
  41fe0c:	call   431d60 <strcmp@plt+0x2e5c8>
  41fe11:	mov    rbx,rax
  41fe14:	mov    rdi,r14
  41fe17:	call   423440 <strcmp@plt+0x1fca8>
  41fe1c:	mov    QWORD PTR [rbx],rax
  41fe1f:	xor    eax,eax
  41fe21:	call   435e40 <strcmp@plt+0x326a8>
  41fe26:	mov    QWORD PTR [rbx+0x8],rax
  41fe2a:	lea    rdi,[rip+0x1f]        # 41fe50 <strcmp@plt+0x1c6b8>
  41fe31:	call   42b9b0 <strcmp@plt+0x28218>
  41fe36:	mov    QWORD PTR [rbx+0x10],rax
  41fe3a:	mov    rax,rbx
  41fe3d:	add    rsp,0x8
  41fe41:	pop    rbx
  41fe42:	pop    r14
  41fe44:	ret    
  41fe45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fe4f:	nop
  41fe50:	push   rbx
  41fe51:	mov    rbx,rdi
  41fe54:	mov    rdi,QWORD PTR [rdi]
  41fe57:	call   422c90 <strcmp@plt+0x1f4f8>
  41fe5c:	mov    rdi,QWORD PTR [rbx+0x8]
  41fe60:	call   436460 <strcmp@plt+0x32cc8>
  41fe65:	mov    rdi,rbx
  41fe68:	pop    rbx
  41fe69:	jmp    403790 <free@plt>
  41fe6e:	xchg   ax,ax
  41fe70:	push   rbx
  41fe71:	mov    rbx,rdi
  41fe74:	mov    rdi,QWORD PTR [rdi]
  41fe77:	call   422c90 <strcmp@plt+0x1f4f8>
  41fe7c:	mov    rdi,QWORD PTR [rbx+0x8]
  41fe80:	call   436460 <strcmp@plt+0x32cc8>
  41fe85:	mov    rdi,QWORD PTR [rbx+0x10]
  41fe89:	call   42bff0 <strcmp@plt+0x28858>
  41fe8e:	mov    rdi,rbx
  41fe91:	pop    rbx
  41fe92:	jmp    403790 <free@plt>
  41fe97:	nop    WORD PTR [rax+rax*1+0x0]
  41fea0:	push   r14
  41fea2:	push   rbx
  41fea3:	push   rax
  41fea4:	mov    r14,rdi
  41fea7:	mov    edi,0x10
  41feac:	call   431d60 <strcmp@plt+0x2e5c8>
  41feb1:	mov    rbx,rax
  41feb4:	mov    rdi,r14
  41feb7:	call   423440 <strcmp@plt+0x1fca8>
  41febc:	mov    QWORD PTR [rbx],rax
  41febf:	xor    eax,eax
  41fec1:	call   435e40 <strcmp@plt+0x326a8>
  41fec6:	mov    QWORD PTR [rbx+0x8],rax
  41feca:	mov    rax,rbx
  41fecd:	add    rsp,0x8
  41fed1:	pop    rbx
  41fed2:	pop    r14
  41fed4:	ret    
  41fed5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fedf:	nop
  41fee0:	mov    edi,0x20
  41fee5:	jmp    431d60 <strcmp@plt+0x2e5c8>
  41feea:	nop    WORD PTR [rax+rax*1+0x0]
  41fef0:	push   rbx
  41fef1:	mov    rbx,rdi
  41fef4:	mov    rax,QWORD PTR [rdi+0x18]
  41fef8:	test   rax,rax
  41fefb:	je     41ff03 <strcmp@plt+0x1c76b>
  41fefd:	mov    rdi,QWORD PTR [rbx+0x8]
  41ff01:	call   rax
  41ff03:	mov    rdi,QWORD PTR [rbx]
  41ff06:	test   rdi,rdi
  41ff09:	je     41ff10 <strcmp@plt+0x1c778>
  41ff0b:	call   422c90 <strcmp@plt+0x1f4f8>
  41ff10:	mov    rdi,rbx
  41ff13:	pop    rbx
  41ff14:	jmp    403790 <free@plt>
  41ff19:	nop    DWORD PTR [rax+0x0]
  41ff20:	push   rbp
  41ff21:	push   r15
  41ff23:	push   r14
  41ff25:	push   r13
  41ff27:	push   r12
  41ff29:	push   rbx
  41ff2a:	sub    rsp,0x28
  41ff2e:	mov    QWORD PTR [rsp+0x20],r8
  41ff33:	mov    QWORD PTR [rsp+0x18],rcx
  41ff38:	mov    QWORD PTR [rsp+0x10],rdx
  41ff3d:	mov    QWORD PTR [rsp+0x8],rdi
  41ff42:	mov    rax,QWORD PTR [rdi+0x28]
  41ff46:	cmp    DWORD PTR [rax+0x18],0x0
  41ff4a:	je     42002d <strcmp@plt+0x1c895>
  41ff50:	mov    r15,QWORD PTR [rax+0x8]
  41ff54:	cmp    r15,rax
  41ff57:	je     420039 <strcmp@plt+0x1c8a1>
  41ff5d:	mov    rbx,rsi
  41ff60:	jmp    41ff86 <strcmp@plt+0x1c7ee>
  41ff62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ff6c:	nop    DWORD PTR [rax+0x0]
  41ff70:	mov    rax,QWORD PTR [rsp+0x8]
  41ff75:	mov    rax,QWORD PTR [rax+0x28]
  41ff79:	mov    r15,QWORD PTR [r15+0x8]
  41ff7d:	cmp    r15,rax
  41ff80:	je     420039 <strcmp@plt+0x1c8a1>
  41ff86:	mov    r12,QWORD PTR [r15+0x10]
  41ff8a:	cmp    DWORD PTR [r12+0x18],0x0
  41ff90:	je     41ff79 <strcmp@plt+0x1c7e1>
  41ff92:	mov    r13,QWORD PTR [r12+0x8]
  41ff97:	mov    r14,QWORD PTR [r13+0x10]
  41ff9b:	mov    rcx,QWORD PTR [r14]
  41ff9e:	cmp    DWORD PTR [rcx+0x18],0x0
  41ffa2:	je     41ff79 <strcmp@plt+0x1c7e1>
  41ffa4:	cmp    r13,r12
  41ffa7:	je     41ff79 <strcmp@plt+0x1c7e1>
  41ffa9:	nop    DWORD PTR [rax+0x0]
  41ffb0:	mov    rbp,QWORD PTR [r14]
  41ffb3:	mov    rdi,rbp
  41ffb6:	mov    rsi,rbx
  41ffb9:	call   QWORD PTR [rsp+0x20]
  41ffbd:	test   rax,rax
  41ffc0:	je     41ffe0 <strcmp@plt+0x1c848>
  41ffc2:	mov    rdi,rax
  41ffc5:	call   422ef0 <strcmp@plt+0x1f758>
  41ffca:	mov    rdi,r14
  41ffcd:	cmp    ax,0x2
  41ffd1:	jne    420010 <strcmp@plt+0x1c878>
  41ffd3:	mov    rsi,QWORD PTR [rsp+0x10]
  41ffd8:	jmp    420015 <strcmp@plt+0x1c87d>
  41ffda:	nop    WORD PTR [rax+rax*1+0x0]
  41ffe0:	lea    rax,[rip+0x44dd9]        # 464dc0 <strcmp@plt+0x61628>
  41ffe7:	cmp    DWORD PTR [rax],0x2
  41ffea:	jl     42001a <strcmp@plt+0x1c882>
  41ffec:	mov    rdi,rbp
  41ffef:	call   422e20 <strcmp@plt+0x1f688>
  41fff4:	mov    edi,0x6
  41fff9:	lea    rsi,[rip+0x28bb1]        # 448bb1 <strcmp@plt+0x45419>
  420000:	mov    rdx,rax
  420003:	xor    eax,eax
  420005:	call   42e520 <strcmp@plt+0x2ad88>
  42000a:	jmp    42001a <strcmp@plt+0x1c882>
  42000c:	nop    DWORD PTR [rax+0x0]
  420010:	mov    rsi,QWORD PTR [rsp+0x18]
  420015:	call   42baa0 <strcmp@plt+0x28308>
  42001a:	mov    r13,QWORD PTR [r13+0x8]
  42001e:	cmp    r13,r12
  420021:	je     41ff70 <strcmp@plt+0x1c7d8>
  420027:	mov    r14,QWORD PTR [r13+0x10]
  42002b:	jmp    41ffb0 <strcmp@plt+0x1c818>
  42002d:	lea    rax,[rip+0x44d8c]        # 464dc0 <strcmp@plt+0x61628>
  420034:	cmp    DWORD PTR [rax],0x3
  420037:	jge    420048 <strcmp@plt+0x1c8b0>
  420039:	add    rsp,0x28
  42003d:	pop    rbx
  42003e:	pop    r12
  420040:	pop    r13
  420042:	pop    r14
  420044:	pop    r15
  420046:	pop    rbp
  420047:	ret    
  420048:	mov    rdi,QWORD PTR [rsp+0x8]
  42004d:	call   422e20 <strcmp@plt+0x1f688>
  420052:	lea    rsi,[rip+0x28b0e]        # 448b67 <strcmp@plt+0x453cf>
  420059:	mov    edi,0x7
  42005e:	mov    rdx,rax
  420061:	xor    eax,eax
  420063:	add    rsp,0x28
  420067:	pop    rbx
  420068:	pop    r12
  42006a:	pop    r13
  42006c:	pop    r14
  42006e:	pop    r15
  420070:	pop    rbp
  420071:	jmp    42e520 <strcmp@plt+0x2ad88>
  420076:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420080:	push   r14
  420082:	push   rbx
  420083:	push   rax
  420084:	mov    r14,rdi
  420087:	mov    edi,0x10
  42008c:	call   431d60 <strcmp@plt+0x2e5c8>
  420091:	mov    rbx,rax
  420094:	test   rax,rax
  420097:	je     4200b9 <strcmp@plt+0x1c921>
  420099:	mov    rdi,r14
  42009c:	call   407840 <strcmp@plt+0x40a8>
  4200a1:	mov    DWORD PTR [rbx],eax
  4200a3:	mov    rdi,r14
  4200a6:	call   407850 <strcmp@plt+0x40b8>
  4200ab:	mov    rdi,rax
  4200ae:	call   4076b0 <strcmp@plt+0x3f18>
  4200b3:	mov    QWORD PTR [rbx+0x8],rax
  4200b7:	jmp    4200cc <strcmp@plt+0x1c934>
  4200b9:	lea    rsi,[rip+0x28b20]        # 448be0 <strcmp@plt+0x45448>
  4200c0:	mov    edi,0x3
  4200c5:	xor    eax,eax
  4200c7:	call   42e520 <strcmp@plt+0x2ad88>
  4200cc:	mov    rax,rbx
  4200cf:	add    rsp,0x8
  4200d3:	pop    rbx
  4200d4:	pop    r14
  4200d6:	ret    
  4200d7:	nop    WORD PTR [rax+rax*1+0x0]
  4200e0:	jmp    403790 <free@plt>
  4200e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4200ef:	nop
  4200f0:	push   rbp
  4200f1:	push   rbx
  4200f2:	push   rax
  4200f3:	mov    rbx,rsi
  4200f6:	mov    rbp,rdi
  4200f9:	mov    rdi,rsi
  4200fc:	call   4317d0 <strcmp@plt+0x2e038>
  420101:	mov    rsi,QWORD PTR [rbp+0x8]
  420105:	xor    ebp,ebp
  420107:	mov    rdi,rax
  42010a:	xor    edx,edx
  42010c:	call   41eb10 <strcmp@plt+0x1b378>
  420111:	test   rax,rax
  420114:	je     42012d <strcmp@plt+0x1c995>
  420116:	lea    rdx,[rip+0xfffffffffffff6f3]        # 41f810 <strcmp@plt+0x1c078>
  42011d:	mov    rdi,rbx
  420120:	mov    rsi,rax
  420123:	call   431800 <strcmp@plt+0x2e068>
  420128:	mov    ebp,0x1
  42012d:	mov    eax,ebp
  42012f:	add    rsp,0x8
  420133:	pop    rbx
  420134:	pop    rbp
  420135:	ret    
  420136:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420140:	push   rbp
  420141:	push   rbx
  420142:	push   rax
  420143:	mov    rbx,rsi
  420146:	mov    rax,QWORD PTR [rsi+0x8]
  42014a:	mov    rsi,QWORD PTR [rdi+0x8]
  42014e:	mov    ebp,0x1
  420153:	mov    rdi,rax
  420156:	mov    edx,0x1
  42015b:	call   41eb10 <strcmp@plt+0x1b378>
  420160:	test   rax,rax
  420163:	je     420176 <strcmp@plt+0x1c9de>
  420165:	mov    QWORD PTR [rbx+0x20],rax
  420169:	lea    rax,[rip+0xfffffffffffff6a0]        # 41f810 <strcmp@plt+0x1c078>
  420170:	mov    QWORD PTR [rbx+0x28],rax
  420174:	jmp    420178 <strcmp@plt+0x1c9e0>
  420176:	xor    ebp,ebp
  420178:	mov    eax,ebp
  42017a:	add    rsp,0x8
  42017e:	pop    rbx
  42017f:	pop    rbp
  420180:	ret    
  420181:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42018b:	nop    DWORD PTR [rax+rax*1+0x0]
  420190:	push   r15
  420192:	push   r14
  420194:	push   rbx
  420195:	mov    rbx,rsi
  420198:	mov    r14,rdi
  42019b:	mov    rdi,rsi
  42019e:	call   4317f0 <strcmp@plt+0x2e058>
  4201a3:	mov    r15,rax
  4201a6:	mov    rdi,rbx
  4201a9:	call   4317d0 <strcmp@plt+0x2e038>
  4201ae:	mov    rdx,QWORD PTR [r14+0x8]
  4201b2:	mov    rdi,r15
  4201b5:	mov    rsi,rax
  4201b8:	xor    ecx,ecx
  4201ba:	pop    rbx
  4201bb:	pop    r14
  4201bd:	pop    r15
  4201bf:	jmp    41eb70 <strcmp@plt+0x1b3d8>
  4201c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4201ce:	xchg   ax,ax
  4201d0:	mov    rax,QWORD PTR [rsi+0x8]
  4201d4:	mov    rcx,QWORD PTR [rsi+0x20]
  4201d8:	mov    rdx,QWORD PTR [rdi+0x8]
  4201dc:	mov    rdi,rcx
  4201df:	mov    rsi,rax
  4201e2:	mov    ecx,0x1
  4201e7:	jmp    41eb70 <strcmp@plt+0x1b3d8>
  4201ec:	nop    DWORD PTR [rax+0x0]
  4201f0:	push   rbp
  4201f1:	push   r15
  4201f3:	push   r14
  4201f5:	push   r13
  4201f7:	push   r12
  4201f9:	push   rbx
  4201fa:	sub    rsp,0x18
  4201fe:	mov    QWORD PTR [rsp+0x8],r9
  420203:	mov    r13,r8
  420206:	mov    QWORD PTR [rsp+0x10],rcx
  42020b:	mov    r14,rdx
  42020e:	mov    r12,rsi
  420211:	mov    r15,rdi
  420214:	mov    rdi,rsi
  420217:	call   431840 <strcmp@plt+0x2e0a8>
  42021c:	mov    rbx,rax
  42021f:	mov    rdi,r14
  420222:	call   4307e0 <strcmp@plt+0x2d048>
  420227:	mov    rbp,rax
  42022a:	mov    rdi,rbx
  42022d:	mov    rsi,rax
  420230:	call   423790 <strcmp@plt+0x1fff8>
  420235:	test   eax,eax
  420237:	je     42024f <strcmp@plt+0x1cab7>
  420239:	cmp    DWORD PTR [rbx+0x18],0x0
  42023d:	je     42024f <strcmp@plt+0x1cab7>
  42023f:	mov    rdi,rbp
  420242:	call   437d00 <strcmp@plt+0x34568>
  420247:	test   al,al
  420249:	je     420323 <strcmp@plt+0x1cb8b>
  42024f:	cmp    DWORD PTR [r15],0x2
  420253:	jne    42028a <strcmp@plt+0x1caf2>
  420255:	mov    rax,QWORD PTR [r14+0x30]
  420259:	test   rax,rax
  42025c:	je     42028a <strcmp@plt+0x1caf2>
  42025e:	cmp    QWORD PTR [rax],0x0
  420262:	je     42028a <strcmp@plt+0x1caf2>
  420264:	mov    rsi,r12
  420267:	mov    rdx,r14
  42026a:	mov    rcx,r13
  42026d:	mov    rbp,QWORD PTR [rsp+0x8]
  420272:	mov    r8,rbp
  420275:	call   420400 <strcmp@plt+0x1cc68>
  42027a:	mov    ebx,0x1
  42027f:	cmp    eax,0xfffffff6
  420282:	jne    4203b5 <strcmp@plt+0x1cc1d>
  420288:	jmp    4202bb <strcmp@plt+0x1cb23>
  42028a:	mov    rdi,r15
  42028d:	mov    rsi,r12
  420290:	mov    rdx,r14
  420293:	mov    rcx,r13
  420296:	mov    rbp,QWORD PTR [rsp+0x8]
  42029b:	mov    r8,rbp
  42029e:	call   4206d0 <strcmp@plt+0x1cf38>
  4202a3:	mov    ebx,0x1
  4202a8:	cmp    eax,0xfffffff6
  4202ab:	jne    4203b5 <strcmp@plt+0x1cc1d>
  4202b1:	mov    rax,QWORD PTR [r14+0x8]
  4202b5:	cmp    DWORD PTR [rax+0x18],0x3
  4202b9:	jne    4202c7 <strcmp@plt+0x1cb2f>
  4202bb:	mov    DWORD PTR [rbp+0x10],0x3
  4202c2:	jmp    4203b5 <strcmp@plt+0x1cc1d>
  4202c7:	cmp    BYTE PTR [rax+0x34],0x1
  4202cb:	jne    4203b5 <strcmp@plt+0x1cc1d>
  4202d1:	mov    r14,QWORD PTR [rsp+0x10]
  4202d6:	test   r14,r14
  4202d9:	je     4203ae <strcmp@plt+0x1cc16>
  4202df:	mov    rdi,r15
  4202e2:	mov    rsi,r12
  4202e5:	mov    rdx,r14
  4202e8:	mov    rcx,r13
  4202eb:	mov    r8,rbp
  4202ee:	call   4206d0 <strcmp@plt+0x1cf38>
  4202f3:	cmp    eax,0xfffffff6
  4202f6:	jne    42036e <strcmp@plt+0x1cbd6>
  4202f8:	mov    rdi,r14
  4202fb:	call   4307f0 <strcmp@plt+0x2d058>
  420300:	lea    rcx,[rip+0x44ab9]        # 464dc0 <strcmp@plt+0x61628>
  420307:	mov    ecx,DWORD PTR [rcx]
  420309:	cmp    al,0x1
  42030b:	jne    420396 <strcmp@plt+0x1cbfe>
  420311:	cmp    ecx,0x3
  420314:	jl     4203ae <strcmp@plt+0x1cc16>
  42031a:	lea    rsi,[rip+0x28940]        # 448c61 <strcmp@plt+0x454c9>
  420321:	jmp    4203a2 <strcmp@plt+0x1cc0a>
  420323:	lea    rax,[rip+0x44a96]        # 464dc0 <strcmp@plt+0x61628>
  42032a:	cmp    DWORD PTR [rax],0x3
  42032d:	jl     42035b <strcmp@plt+0x1cbc3>
  42032f:	mov    rdi,rbx
  420332:	call   422e20 <strcmp@plt+0x1f688>
  420337:	mov    rbx,rax
  42033a:	mov    rdi,rbp
  42033d:	call   422e20 <strcmp@plt+0x1f688>
  420342:	lea    rsi,[rip+0x288d1]        # 448c1a <strcmp@plt+0x45482>
  420349:	mov    edi,0x7
  42034e:	mov    rdx,rbx
  420351:	mov    rcx,rax
  420354:	xor    eax,eax
  420356:	call   42e520 <strcmp@plt+0x2ad88>
  42035b:	mov    rax,QWORD PTR [rsp+0x8]
  420360:	mov    DWORD PTR [rax+0x10],0x0
  420367:	mov    ebx,0xfffffff6
  42036c:	jmp    4203b5 <strcmp@plt+0x1cc1d>
  42036e:	mov    DWORD PTR [rbp+0x10],0x1
  420375:	lea    rax,[rip+0x44a44]        # 464dc0 <strcmp@plt+0x61628>
  42037c:	cmp    DWORD PTR [rax],0x3
  42037f:	jl     4203b5 <strcmp@plt+0x1cc1d>
  420381:	lea    rsi,[rip+0x2895d]        # 448ce5 <strcmp@plt+0x4554d>
  420388:	mov    edi,0x7
  42038d:	xor    eax,eax
  42038f:	call   42e520 <strcmp@plt+0x2ad88>
  420394:	jmp    4203b5 <strcmp@plt+0x1cc1d>
  420396:	cmp    ecx,0x3
  420399:	jl     4203ae <strcmp@plt+0x1cc16>
  42039b:	lea    rsi,[rip+0x288fc]        # 448c9e <strcmp@plt+0x45506>
  4203a2:	mov    edi,0x7
  4203a7:	xor    eax,eax
  4203a9:	call   42e520 <strcmp@plt+0x2ad88>
  4203ae:	mov    DWORD PTR [rbp+0x10],0x0
  4203b5:	mov    eax,ebx
  4203b7:	add    rsp,0x18
  4203bb:	pop    rbx
  4203bc:	pop    r12
  4203be:	pop    r13
  4203c0:	pop    r14
  4203c2:	pop    r15
  4203c4:	pop    rbp
  4203c5:	ret    
  4203c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4203d0:	push   rbx
  4203d1:	mov    edi,0x10
  4203d6:	call   431d60 <strcmp@plt+0x2e5c8>
  4203db:	mov    rbx,rax
  4203de:	test   rax,rax
  4203e1:	jne    4203f6 <strcmp@plt+0x1cc5e>
  4203e3:	lea    rsi,[rip+0x287f6]        # 448be0 <strcmp@plt+0x45448>
  4203ea:	mov    edi,0x3
  4203ef:	xor    eax,eax
  4203f1:	call   42e520 <strcmp@plt+0x2ad88>
  4203f6:	mov    rax,rbx
  4203f9:	pop    rbx
  4203fa:	ret    
  4203fb:	nop    DWORD PTR [rax+rax*1+0x0]
  420400:	push   rbp
  420401:	push   r15
  420403:	push   r14
  420405:	push   r13
  420407:	push   r12
  420409:	push   rbx
  42040a:	sub    rsp,0x28
  42040e:	mov    r14,r8
  420411:	mov    r13,rcx
  420414:	mov    rbp,rdx
  420417:	mov    rdi,rsi
  42041a:	mov    rax,QWORD PTR [rdx+0x30]
  42041e:	mov    r15,QWORD PTR [rax]
  420421:	call   4317f0 <strcmp@plt+0x2e058>
  420426:	mov    rcx,QWORD PTR [rbp+0x8]
  42042a:	cmp    WORD PTR [rcx+0x20],0x0
  42042f:	je     420565 <strcmp@plt+0x1cdcd>
  420435:	mov    rcx,QWORD PTR [rbp+0x20]
  420439:	cmp    QWORD PTR [rax+0x10],0x0
  42043e:	je     42044e <strcmp@plt+0x1ccb6>
  420440:	mov    rbx,QWORD PTR [rcx+0x10]
  420444:	mov    esi,0x20
  420449:	test   rbx,rbx
  42044c:	jne    420480 <strcmp@plt+0x1cce8>
  42044e:	mov    rdx,QWORD PTR [rax+0x8]
  420452:	test   rdx,rdx
  420455:	je     420465 <strcmp@plt+0x1cccd>
  420457:	mov    rbx,QWORD PTR [rcx+0x8]
  42045b:	mov    esi,0x1c
  420460:	test   rbx,rbx
  420463:	jne    420480 <strcmp@plt+0x1cce8>
  420465:	cmp    QWORD PTR [rax],0x0
  420469:	mov    rbx,QWORD PTR [rcx]
  42046c:	je     420608 <strcmp@plt+0x1ce70>
  420472:	mov    esi,0x18
  420477:	test   rbx,rbx
  42047a:	je     42060d <strcmp@plt+0x1ce75>
  420480:	mov    r12d,DWORD PTR [rcx+rsi*1]
  420484:	mov    rdi,r13
  420487:	call   433320 <strcmp@plt+0x2fb88>
  42048c:	test   eax,eax
  42048e:	je     42058b <strcmp@plt+0x1cdf3>
  420494:	xor    edx,edx
  420496:	div    r12d
  420499:	mov    r12,QWORD PTR [rbx+rdx*8]
  42049d:	mov    rdi,QWORD PTR [r15+0x8]
  4204a1:	mov    rsi,r12
  4204a4:	call   42c540 <strcmp@plt+0x28da8>
  4204a9:	test   rax,rax
  4204ac:	je     4205bb <strcmp@plt+0x1ce23>
  4204b2:	mov    rbx,rax
  4204b5:	mov    r12,QWORD PTR [rax+0x18]
  4204b9:	mov    rbp,QWORD PTR [rax]
  4204bc:	movzx  r15d,WORD PTR [rax+0x8]
  4204c1:	lea    rax,[rip+0x448f8]        # 464dc0 <strcmp@plt+0x61628>
  4204c8:	cmp    DWORD PTR [rax],0x3
  4204cb:	jl     42055b <strcmp@plt+0x1cdc3>
  4204d1:	mov    rdi,r13
  4204d4:	call   422e20 <strcmp@plt+0x1f688>
  4204d9:	mov    QWORD PTR [rsp+0x18],rax
  4204de:	lea    rdi,[r13+0x20]
  4204e2:	call   422e20 <strcmp@plt+0x1f688>
  4204e7:	mov    QWORD PTR [rsp+0x10],rax
  4204ec:	movzx  eax,BYTE PTR [r13+0x44]
  4204f1:	mov    DWORD PTR [rsp+0x4],eax
  4204f5:	movzx  eax,WORD PTR [r13+0x40]
  4204fa:	mov    DWORD PTR [rsp],eax
  4204fd:	movzx  eax,WORD PTR [r13+0x42]
  420502:	mov    QWORD PTR [rsp+0x20],rax
  420507:	mov    rdi,QWORD PTR [rbx+0x18]
  42050b:	call   422e20 <strcmp@plt+0x1f688>
  420510:	mov    QWORD PTR [rsp+0x8],rax
  420515:	mov    rdi,QWORD PTR [rbx]
  420518:	call   422e20 <strcmp@plt+0x1f688>
  42051d:	mov    rbx,rax
  420520:	sub    rsp,0x8
  420524:	lea    rsi,[rip+0x28919]        # 448e44 <strcmp@plt+0x456ac>
  42052b:	mov    edi,0x7
  420530:	mov    rdx,QWORD PTR [rsp+0x20]
  420535:	mov    rcx,QWORD PTR [rsp+0x18]
  42053a:	mov    r8d,DWORD PTR [rsp+0xc]
  42053f:	mov    r9d,DWORD PTR [rsp+0x8]
  420544:	mov    eax,0x0
  420549:	push   rbx
  42054a:	push   QWORD PTR [rsp+0x18]
  42054e:	push   QWORD PTR [rsp+0x38]
  420552:	call   42e520 <strcmp@plt+0x2ad88>
  420557:	add    rsp,0x20
  42055b:	mov    ebx,0x1
  420560:	jmp    42066c <strcmp@plt+0x1ced4>
  420565:	lea    rax,[rip+0x44854]        # 464dc0 <strcmp@plt+0x61628>
  42056c:	mov    ebx,0xfffffff6
  420571:	cmp    DWORD PTR [rax],0x3
  420574:	jl     420664 <strcmp@plt+0x1cecc>
  42057a:	lea    rsi,[rip+0x2891b]        # 448e9c <strcmp@plt+0x45704>
  420581:	xor    r12d,r12d
  420584:	mov    edi,0x7
  420589:	jmp    4205af <strcmp@plt+0x1ce17>
  42058b:	lea    rax,[rip+0x4482e]        # 464dc0 <strcmp@plt+0x61628>
  420592:	mov    ebx,0xfffffff6
  420597:	cmp    DWORD PTR [rax],0x0
  42059a:	jle    420664 <strcmp@plt+0x1cecc>
  4205a0:	lea    rsi,[rip+0x289e7]        # 448f8e <strcmp@plt+0x457f6>
  4205a7:	xor    r12d,r12d
  4205aa:	mov    edi,0x5
  4205af:	xor    eax,eax
  4205b1:	call   42e520 <strcmp@plt+0x2ad88>
  4205b6:	jmp    420667 <strcmp@plt+0x1cecf>
  4205bb:	lea    rax,[rip+0x447fe]        # 464dc0 <strcmp@plt+0x61628>
  4205c2:	mov    ebx,0xfffffff6
  4205c7:	cmp    DWORD PTR [rax],0x0
  4205ca:	jle    420664 <strcmp@plt+0x1cecc>
  4205d0:	mov    rdi,QWORD PTR [r12]
  4205d4:	call   422e20 <strcmp@plt+0x1f688>
  4205d9:	mov    rbx,rax
  4205dc:	mov    rdi,QWORD PTR [rbp+0x8]
  4205e0:	call   428d40 <strcmp@plt+0x255a8>
  4205e5:	lea    rsi,[rip+0x28a0a]        # 448ff6 <strcmp@plt+0x4585e>
  4205ec:	xor    r12d,r12d
  4205ef:	mov    edi,0x5
  4205f4:	mov    rdx,rbx
  4205f7:	mov    ebx,0xfffffff6
  4205fc:	mov    rcx,rax
  4205ff:	xor    eax,eax
  420601:	call   42e520 <strcmp@plt+0x2ad88>
  420606:	jmp    420667 <strcmp@plt+0x1cecf>
  420608:	test   rbx,rbx
  42060b:	jne    420619 <strcmp@plt+0x1ce81>
  42060d:	test   rdx,rdx
  420610:	je     420636 <strcmp@plt+0x1ce9e>
  420612:	cmp    QWORD PTR [rcx+0x8],0x0
  420617:	je     420653 <strcmp@plt+0x1cebb>
  420619:	lea    rax,[rip+0x447a0]        # 464dc0 <strcmp@plt+0x61628>
  420620:	mov    ebx,0xfffffff6
  420625:	cmp    DWORD PTR [rax],0x3
  420628:	jl     420664 <strcmp@plt+0x1cecc>
  42062a:	lea    rsi,[rip+0x28913]        # 448f44 <strcmp@plt+0x457ac>
  420631:	jmp    420581 <strcmp@plt+0x1cde9>
  420636:	lea    rax,[rip+0x44783]        # 464dc0 <strcmp@plt+0x61628>
  42063d:	mov    ebx,0xfffffff6
  420642:	cmp    DWORD PTR [rax],0x3
  420645:	jl     420664 <strcmp@plt+0x1cecc>
  420647:	lea    rsi,[rip+0x2888e]        # 448edc <strcmp@plt+0x45744>
  42064e:	jmp    420581 <strcmp@plt+0x1cde9>
  420653:	lea    rax,[rip+0x44766]        # 464dc0 <strcmp@plt+0x61628>
  42065a:	mov    ebx,0xfffffff6
  42065f:	cmp    DWORD PTR [rax],0x3
  420662:	jge    4206bf <strcmp@plt+0x1cf27>
  420664:	xor    r12d,r12d
  420667:	xor    ebp,ebp
  420669:	xor    r15d,r15d
  42066c:	mov    rdi,QWORD PTR [r14+0x8]
  420670:	test   rdi,rdi
  420673:	je     42067a <strcmp@plt+0x1cee2>
  420675:	call   420a90 <strcmp@plt+0x1d2f8>
  42067a:	mov    r9d,DWORD PTR [r13+0x48]
  42067e:	sub    rsp,0x8
  420682:	movzx  r8d,r15w
  420686:	mov    rdi,r13
  420689:	mov    rsi,r12
  42068c:	mov    rdx,rbp
  42068f:	mov    ecx,0x10f6
  420694:	push   0x0
  420696:	call   420a00 <strcmp@plt+0x1d268>
  42069b:	add    rsp,0x10
  42069f:	mov    QWORD PTR [r14+0x8],rax
  4206a3:	lea    rax,[rip+0x3e6]        # 420a90 <strcmp@plt+0x1d2f8>
  4206aa:	mov    QWORD PTR [r14+0x18],rax
  4206ae:	mov    eax,ebx
  4206b0:	add    rsp,0x28
  4206b4:	pop    rbx
  4206b5:	pop    r12
  4206b7:	pop    r13
  4206b9:	pop    r14
  4206bb:	pop    r15
  4206bd:	pop    rbp
  4206be:	ret    
  4206bf:	lea    rsi,[rip+0x2884a]        # 448f10 <strcmp@plt+0x45778>
  4206c6:	jmp    420581 <strcmp@plt+0x1cde9>
  4206cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4206d0:	push   rbp
  4206d1:	push   r15
  4206d3:	push   r14
  4206d5:	push   r13
  4206d7:	push   r12
  4206d9:	push   rbx
  4206da:	sub    rsp,0x28
  4206de:	mov    r15,r8
  4206e1:	mov    r13,rcx
  4206e4:	mov    rbx,rdx
  4206e7:	mov    r12,rdi
  4206ea:	mov    rdi,rsi
  4206ed:	call   4317f0 <strcmp@plt+0x2e058>
  4206f2:	mov    rcx,QWORD PTR [rbx+0x8]
  4206f6:	cmp    WORD PTR [rcx+0x20],0x0
  4206fb:	je     420730 <strcmp@plt+0x1cf98>
  4206fd:	mov    r14,QWORD PTR [rbx+0x20]
  420701:	mov    rbp,QWORD PTR [rax+0x10]
  420705:	test   rbp,rbp
  420708:	je     420716 <strcmp@plt+0x1cf7e>
  42070a:	mov    ecx,0x20
  42070f:	cmp    QWORD PTR [r14+0x10],0x0
  420714:	jne    42076e <strcmp@plt+0x1cfd6>
  420716:	mov    rdx,QWORD PTR [rax+0x8]
  42071a:	test   rdx,rdx
  42071d:	je     420753 <strcmp@plt+0x1cfbb>
  42071f:	mov    ecx,0x1c
  420724:	cmp    QWORD PTR [r14+0x8],0x0
  420729:	je     420753 <strcmp@plt+0x1cfbb>
  42072b:	mov    rbp,rdx
  42072e:	jmp    42076e <strcmp@plt+0x1cfd6>
  420730:	movzx  eax,BYTE PTR [rcx+0x34]
  420734:	mov    DWORD PTR [r15+0x10],eax
  420738:	lea    rax,[rip+0x44681]        # 464dc0 <strcmp@plt+0x61628>
  42073f:	mov    r12d,0xfffffff6
  420745:	cmp    DWORD PTR [rax],0x3
  420748:	jge    4207c8 <strcmp@plt+0x1d030>
  42074a:	xor    ebx,ebx
  42074c:	xor    ebp,ebp
  42074e:	jmp    420963 <strcmp@plt+0x1d1cb>
  420753:	mov    rbp,QWORD PTR [rax]
  420756:	test   rbp,rbp
  420759:	je     4208f6 <strcmp@plt+0x1d15e>
  42075f:	mov    ecx,0x18
  420764:	cmp    QWORD PTR [r14],0x0
  420768:	je     420905 <strcmp@plt+0x1d16d>
  42076e:	mov    ebx,DWORD PTR [rax+rcx*1]
  420771:	mov    QWORD PTR [rsp],r13
  420775:	mov    rdi,r13
  420778:	call   433320 <strcmp@plt+0x2fb88>
  42077d:	test   eax,eax
  42077f:	je     4207e4 <strcmp@plt+0x1d04c>
  420781:	mov    r13d,eax
  420784:	mov    QWORD PTR [rsp+0x8],r15
  420789:	xor    edx,edx
  42078b:	div    ebx
  42078d:	mov    rax,QWORD PTR [rbp+rdx*8+0x0]
  420792:	mov    r15,QWORD PTR [rax]
  420795:	mov    rsi,QWORD PTR [r12+0x8]
  42079a:	mov    rdi,r15
  42079d:	call   41fc10 <strcmp@plt+0x1c478>
  4207a2:	mov    rbx,rax
  4207a5:	mov    rdi,rax
  4207a8:	call   422ef0 <strcmp@plt+0x1f758>
  4207ad:	cmp    ax,0x2
  4207b1:	je     420814 <strcmp@plt+0x1d07c>
  4207b3:	cmp    ax,0xa
  4207b7:	jne    4208e0 <strcmp@plt+0x1d148>
  4207bd:	lea    rax,[r14+0x8]
  4207c1:	mov    ecx,0x1c
  4207c6:	jmp    42081c <strcmp@plt+0x1d084>
  4207c8:	lea    rsi,[rip+0x28530]        # 448cff <strcmp@plt+0x45567>
  4207cf:	xor    ebx,ebx
  4207d1:	mov    edi,0x7
  4207d6:	xor    eax,eax
  4207d8:	call   42e520 <strcmp@plt+0x2ad88>
  4207dd:	xor    ebp,ebp
  4207df:	jmp    420963 <strcmp@plt+0x1d1cb>
  4207e4:	lea    rax,[rip+0x445d5]        # 464dc0 <strcmp@plt+0x61628>
  4207eb:	mov    r12d,0xfffffff6
  4207f1:	cmp    DWORD PTR [rax],0x0
  4207f4:	jle    420932 <strcmp@plt+0x1d19a>
  4207fa:	lea    rsi,[rip+0x285b8]        # 448db9 <strcmp@plt+0x45621>
  420801:	xor    ebx,ebx
  420803:	mov    edi,0x5
  420808:	xor    eax,eax
  42080a:	call   42e520 <strcmp@plt+0x2ad88>
  42080f:	jmp    420934 <strcmp@plt+0x1d19c>
  420814:	mov    ecx,0x18
  420819:	mov    rax,r14
  42081c:	mov    rsi,QWORD PTR [rax]
  42081f:	mov    eax,r13d
  420822:	xor    edx,edx
  420824:	div    DWORD PTR [r14+rcx*1]
  420828:	mov    rax,QWORD PTR [rsi+rdx*8]
  42082c:	mov    rdi,QWORD PTR [rax]
  42082f:	mov    rsi,QWORD PTR [r12+0x8]
  420834:	call   41fc10 <strcmp@plt+0x1c478>
  420839:	mov    rbp,rax
  42083c:	lea    rax,[rip+0x4457d]        # 464dc0 <strcmp@plt+0x61628>
  420843:	mov    r12d,0x1
  420849:	cmp    DWORD PTR [rax],0x3
  42084c:	jl     42095a <strcmp@plt+0x1d1c2>
  420852:	mov    r13,QWORD PTR [rsp]
  420856:	mov    rdi,r13
  420859:	call   422e20 <strcmp@plt+0x1f688>
  42085e:	mov    QWORD PTR [rsp+0x20],rax
  420863:	lea    rdi,[r13+0x20]
  420867:	call   422e20 <strcmp@plt+0x1f688>
  42086c:	mov    QWORD PTR [rsp+0x18],rax
  420871:	movzx  eax,BYTE PTR [r13+0x44]
  420876:	mov    DWORD PTR [rsp+0x14],eax
  42087a:	movzx  eax,WORD PTR [r13+0x40]
  42087f:	mov    DWORD PTR [rsp+0x10],eax
  420883:	movzx  r14d,WORD PTR [r13+0x42]
  420888:	mov    rdi,rbx
  42088b:	call   422e20 <strcmp@plt+0x1f688>
  420890:	mov    r15,rax
  420893:	mov    rdi,rbp
  420896:	call   422e20 <strcmp@plt+0x1f688>
  42089b:	mov    r10,rax
  42089e:	sub    rsp,0x8
  4208a2:	lea    rsi,[rip+0x2859b]        # 448e44 <strcmp@plt+0x456ac>
  4208a9:	mov    edi,0x7
  4208ae:	mov    rdx,QWORD PTR [rsp+0x28]
  4208b3:	mov    rcx,QWORD PTR [rsp+0x20]
  4208b8:	mov    r8d,DWORD PTR [rsp+0x1c]
  4208bd:	mov    r9d,DWORD PTR [rsp+0x18]
  4208c2:	mov    eax,0x0
  4208c7:	push   r10
  4208c9:	push   r15
  4208cb:	push   r14
  4208cd:	call   42e520 <strcmp@plt+0x2ad88>
  4208d2:	add    rsp,0x20
  4208d6:	mov    r15,QWORD PTR [rsp+0x8]
  4208db:	jmp    420963 <strcmp@plt+0x1d1cb>
  4208e0:	lea    rax,[rip+0x444d9]        # 464dc0 <strcmp@plt+0x61628>
  4208e7:	mov    r12d,0xfffffff6
  4208ed:	cmp    DWORD PTR [rax],0x2
  4208f0:	jge    420938 <strcmp@plt+0x1d1a0>
  4208f2:	xor    ebx,ebx
  4208f4:	jmp    420958 <strcmp@plt+0x1d1c0>
  4208f6:	test   rdx,rdx
  4208f9:	je     4209b9 <strcmp@plt+0x1d221>
  4208ff:	cmp    QWORD PTR [r14],0x0
  420903:	jne    420910 <strcmp@plt+0x1d178>
  420905:	cmp    QWORD PTR [r14+0x8],0x0
  42090a:	je     4209db <strcmp@plt+0x1d243>
  420910:	lea    rax,[rip+0x444a9]        # 464dc0 <strcmp@plt+0x61628>
  420917:	mov    r12d,0xfffffff6
  42091d:	cmp    DWORD PTR [rax],0x3
  420920:	jl     42074a <strcmp@plt+0x1cfb2>
  420926:	lea    rsi,[rip+0x2844a]        # 448d77 <strcmp@plt+0x455df>
  42092d:	jmp    4207cf <strcmp@plt+0x1d037>
  420932:	xor    ebx,ebx
  420934:	xor    ebp,ebp
  420936:	jmp    42095f <strcmp@plt+0x1d1c7>
  420938:	mov    rdi,r15
  42093b:	call   422ef0 <strcmp@plt+0x1f758>
  420940:	movzx  edx,ax
  420943:	lea    rsi,[rip+0x284d1]        # 448e1b <strcmp@plt+0x45683>
  42094a:	xor    ebx,ebx
  42094c:	mov    edi,0x6
  420951:	xor    eax,eax
  420953:	call   42e520 <strcmp@plt+0x2ad88>
  420958:	xor    ebp,ebp
  42095a:	mov    r15,QWORD PTR [rsp+0x8]
  42095f:	mov    r13,QWORD PTR [rsp]
  420963:	mov    rdi,QWORD PTR [r15+0x8]
  420967:	test   rdi,rdi
  42096a:	je     420971 <strcmp@plt+0x1d1d9>
  42096c:	call   420a90 <strcmp@plt+0x1d2f8>
  420971:	mov    r9d,DWORD PTR [r13+0x48]
  420975:	sub    rsp,0x8
  420979:	mov    rdi,r13
  42097c:	mov    rsi,rbx
  42097f:	mov    rdx,rbp
  420982:	mov    ecx,0x10f5
  420987:	mov    r8d,0x10f5
  42098d:	push   0x0
  42098f:	call   420a00 <strcmp@plt+0x1d268>
  420994:	add    rsp,0x10
  420998:	mov    QWORD PTR [r15+0x8],rax
  42099c:	lea    rax,[rip+0xed]        # 420a90 <strcmp@plt+0x1d2f8>
  4209a3:	mov    QWORD PTR [r15+0x18],rax
  4209a7:	mov    eax,r12d
  4209aa:	add    rsp,0x28
  4209ae:	pop    rbx
  4209af:	pop    r12
  4209b1:	pop    r13
  4209b3:	pop    r14
  4209b5:	pop    r15
  4209b7:	pop    rbp
  4209b8:	ret    
  4209b9:	lea    rax,[rip+0x44400]        # 464dc0 <strcmp@plt+0x61628>
  4209c0:	mov    r12d,0xfffffff6
  4209c6:	cmp    DWORD PTR [rax],0x3
  4209c9:	jl     42074a <strcmp@plt+0x1cfb2>
  4209cf:	lea    rsi,[rip+0x28349]        # 448d1f <strcmp@plt+0x45587>
  4209d6:	jmp    4207cf <strcmp@plt+0x1d037>
  4209db:	lea    rax,[rip+0x443de]        # 464dc0 <strcmp@plt+0x61628>
  4209e2:	mov    r12d,0xfffffff6
  4209e8:	cmp    DWORD PTR [rax],0x3
  4209eb:	jl     42074a <strcmp@plt+0x1cfb2>
  4209f1:	lea    rsi,[rip+0x28353]        # 448d4b <strcmp@plt+0x455b3>
  4209f8:	jmp    4207cf <strcmp@plt+0x1d037>
  4209fd:	nop    DWORD PTR [rax]
  420a00:	push   rbp
  420a01:	push   r15
  420a03:	push   r14
  420a05:	push   r13
  420a07:	push   r12
  420a09:	push   rbx
  420a0a:	push   rax
  420a0b:	mov    DWORD PTR [rsp+0x4],r9d
  420a10:	mov    r15d,r8d
  420a13:	mov    r12d,ecx
  420a16:	mov    r13,rdx
  420a19:	mov    rbp,rsi
  420a1c:	mov    r14,rdi
  420a1f:	mov    edi,0x30
  420a24:	call   431d60 <strcmp@plt+0x2e5c8>
  420a29:	test   rax,rax
  420a2c:	je     420a70 <strcmp@plt+0x1d2d8>
  420a2e:	mov    rbx,rax
  420a31:	mov    rdi,r14
  420a34:	call   4334f0 <strcmp@plt+0x2fd58>
  420a39:	mov    QWORD PTR [rbx],rax
  420a3c:	mov    rdi,rbp
  420a3f:	call   423440 <strcmp@plt+0x1fca8>
  420a44:	mov    QWORD PTR [rbx+0x8],rax
  420a48:	mov    rdi,r13
  420a4b:	call   423440 <strcmp@plt+0x1fca8>
  420a50:	mov    QWORD PTR [rbx+0x10],rax
  420a54:	mov    WORD PTR [rbx+0x18],r12w
  420a59:	mov    WORD PTR [rbx+0x1a],r15w
  420a5e:	mov    eax,DWORD PTR [rsp+0x4]
  420a62:	mov    DWORD PTR [rbx+0x28],eax
  420a65:	mov    rax,QWORD PTR [rsp+0x40]
  420a6a:	mov    QWORD PTR [rbx+0x20],rax
  420a6e:	jmp    420a72 <strcmp@plt+0x1d2da>
  420a70:	xor    ebx,ebx
  420a72:	mov    rax,rbx
  420a75:	add    rsp,0x8
  420a79:	pop    rbx
  420a7a:	pop    r12
  420a7c:	pop    r13
  420a7e:	pop    r14
  420a80:	pop    r15
  420a82:	pop    rbp
  420a83:	ret    
  420a84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420a8e:	xchg   ax,ax
  420a90:	test   rdi,rdi
  420a93:	je     420abc <strcmp@plt+0x1d324>
  420a95:	push   rbx
  420a96:	mov    rbx,rdi
  420a99:	mov    rdi,QWORD PTR [rdi]
  420a9c:	call   433550 <strcmp@plt+0x2fdb8>
  420aa1:	mov    rdi,QWORD PTR [rbx+0x8]
  420aa5:	call   422c90 <strcmp@plt+0x1f4f8>
  420aaa:	mov    rdi,QWORD PTR [rbx+0x10]
  420aae:	call   422c90 <strcmp@plt+0x1f4f8>
  420ab3:	mov    rdi,rbx
  420ab6:	pop    rbx
  420ab7:	jmp    403790 <free@plt>
  420abc:	ret    
  420abd:	nop    DWORD PTR [rax]
  420ac0:	movzx  ecx,WORD PTR [rdi+0x24]
  420ac4:	xor    eax,eax
  420ac6:	cmp    rcx,0xffff
  420acd:	je     420ade <strcmp@plt+0x1d346>
  420acf:	add    rcx,QWORD PTR [rdi+0x30]
  420ad3:	je     420ade <strcmp@plt+0x1d346>
  420ad5:	movzx  eax,WORD PTR [rcx]
  420ad8:	shr    eax,0x4
  420adb:	and    eax,0xf
  420ade:	ret    
  420adf:	nop
  420ae0:	mov    rax,QWORD PTR [rdi+0x38]
  420ae4:	mov    ecx,DWORD PTR [rdi+0x30]
  420ae7:	mov    edx,eax
  420ae9:	sub    edx,ecx
  420aeb:	mov    WORD PTR [rdi+0x1e],dx
  420aef:	mov    ecx,DWORD PTR [rdi+0x14]
  420af2:	cmp    ecx,0x4
  420af5:	jae    420afa <strcmp@plt+0x1d362>
  420af7:	xor    eax,eax
  420af9:	ret    
  420afa:	mov    rdx,rax
  420afd:	add    rdx,0x4
  420b01:	mov    QWORD PTR [rdi+0x38],rdx
  420b05:	add    ecx,0xfffffffc
  420b08:	mov    DWORD PTR [rdi+0x14],ecx
  420b0b:	ret    
  420b0c:	nop    DWORD PTR [rax+0x0]
  420b10:	push   rbp
  420b11:	push   r15
  420b13:	push   r14
  420b15:	push   r12
  420b17:	push   rbx
  420b18:	mov    rbx,rdi
  420b1b:	mov    eax,DWORD PTR [rdi+0x38]
  420b1e:	sub    eax,DWORD PTR [rdi+0x30]
  420b21:	mov    WORD PTR [rdi+0x20],ax
  420b25:	call   432a50 <strcmp@plt+0x2f2b8>
  420b2a:	xor    r14d,r14d
  420b2d:	test   rax,rax
  420b30:	je     420c72 <strcmp@plt+0x1d4da>
  420b36:	mov    rbp,rax
  420b39:	mov    eax,DWORD PTR [rbx+0x38]
  420b3c:	sub    eax,DWORD PTR [rbx+0x30]
  420b3f:	mov    WORD PTR [rbx+0x22],ax
  420b43:	mov    rdi,rbx
  420b46:	call   432a90 <strcmp@plt+0x2f2f8>
  420b4b:	mov    r15,rax
  420b4e:	mov    eax,DWORD PTR [rbx+0x38]
  420b51:	sub    eax,DWORD PTR [rbx+0x30]
  420b54:	mov    WORD PTR [rbx+0x24],ax
  420b58:	movbe  bx,WORD PTR [r15+0x4]
  420b5f:	mov    al,BYTE PTR [rbp+0x0]
  420b62:	and    al,0xf0
  420b64:	cmp    al,0x40
  420b66:	jne    420b99 <strcmp@plt+0x1d401>
  420b68:	mov    rdi,rbp
  420b6b:	mov    esi,0x14
  420b70:	call   42b110 <strcmp@plt+0x27978>
  420b75:	test   ax,ax
  420b78:	je     420b99 <strcmp@plt+0x1d401>
  420b7a:	lea    rax,[rip+0x4423f]        # 464dc0 <strcmp@plt+0x61628>
  420b81:	cmp    DWORD PTR [rax],0x2
  420b84:	jl     420b99 <strcmp@plt+0x1d401>
  420b86:	lea    rsi,[rip+0x28597]        # 449124 <strcmp@plt+0x4598c>
  420b8d:	mov    edi,0x6
  420b92:	xor    eax,eax
  420b94:	call   42e520 <strcmp@plt+0x2ad88>
  420b99:	cmp    WORD PTR [r15+0x6],0x0
  420b9f:	je     420bf2 <strcmp@plt+0x1d45a>
  420ba1:	movzx  ebx,bx
  420ba4:	mov    al,BYTE PTR [rbp+0x0]
  420ba7:	shr    al,0x4
  420baa:	movzx  edi,al
  420bad:	call   4246b0 <strcmp@plt+0x20f18>
  420bb2:	movzx  ecx,al
  420bb5:	mov    rdi,r15
  420bb8:	mov    esi,ebx
  420bba:	mov    rdx,rbp
  420bbd:	call   42b750 <strcmp@plt+0x27fb8>
  420bc2:	test   ax,ax
  420bc5:	je     420bf2 <strcmp@plt+0x1d45a>
  420bc7:	lea    rax,[rip+0x441f2]        # 464dc0 <strcmp@plt+0x61628>
  420bce:	cmp    DWORD PTR [rax],0x2
  420bd1:	jl     420c72 <strcmp@plt+0x1d4da>
  420bd7:	lea    rsi,[rip+0x2855a]        # 449138 <strcmp@plt+0x459a0>
  420bde:	xor    r14d,r14d
  420be1:	mov    edi,0x6
  420be6:	xor    eax,eax
  420be8:	call   42e520 <strcmp@plt+0x2ad88>
  420bed:	jmp    420c72 <strcmp@plt+0x1d4da>
  420bf2:	lea    rax,[rip+0x441c7]        # 464dc0 <strcmp@plt+0x61628>
  420bf9:	mov    r14d,0x1
  420bff:	cmp    DWORD PTR [rax],0x2
  420c02:	jl     420c72 <strcmp@plt+0x1d4da>
  420c04:	lea    rbx,[rbp+0xc]
  420c08:	mov    al,BYTE PTR [rbp+0x0]
  420c0b:	shr    al,0x4
  420c0e:	movzx  edi,al
  420c11:	call   4246b0 <strcmp@plt+0x20f18>
  420c16:	movzx  esi,al
  420c19:	mov    rdi,rbx
  420c1c:	call   423ce0 <strcmp@plt+0x20548>
  420c21:	mov    r12,rax
  420c24:	mov    rbx,rbp
  420c27:	add    rbx,0x10
  420c2b:	mov    al,BYTE PTR [rbp+0x0]
  420c2e:	shr    al,0x4
  420c31:	movzx  edi,al
  420c34:	call   4246b0 <strcmp@plt+0x20f18>
  420c39:	movzx  esi,al
  420c3c:	mov    rdi,rbx
  420c3f:	call   423ce0 <strcmp@plt+0x20548>
  420c44:	movbe  cx,WORD PTR [r15]
  420c4a:	movzx  r8d,cx
  420c4e:	movbe  cx,WORD PTR [r15+0x2]
  420c55:	movzx  r9d,cx
  420c59:	lea    rsi,[rip+0x284ed]        # 44914d <strcmp@plt+0x459b5>
  420c60:	mov    edi,0x6
  420c65:	mov    rdx,r12
  420c68:	mov    rcx,rax
  420c6b:	xor    eax,eax
  420c6d:	call   42e520 <strcmp@plt+0x2ad88>
  420c72:	mov    eax,r14d
  420c75:	pop    rbx
  420c76:	pop    r12
  420c78:	pop    r14
  420c7a:	pop    r15
  420c7c:	pop    rbp
  420c7d:	ret    
  420c7e:	xchg   ax,ax
  420c80:	push   rbx
  420c81:	mov    rbx,rdi
  420c84:	mov    rdi,QWORD PTR [rdi+0x38]
  420c88:	call   4235c0 <strcmp@plt+0x1fe28>
  420c8d:	test   eax,eax
  420c8f:	js     420caa <strcmp@plt+0x1d512>
  420c91:	mov    ecx,eax
  420c93:	mov    edx,DWORD PTR [rbx+0x14]
  420c96:	mov    eax,0x1
  420c9b:	sub    edx,ecx
  420c9d:	jb     420ca8 <strcmp@plt+0x1d510>
  420c9f:	mov    ecx,ecx
  420ca1:	add    QWORD PTR [rbx+0x38],rcx
  420ca5:	mov    DWORD PTR [rbx+0x14],edx
  420ca8:	pop    rbx
  420ca9:	ret    
  420caa:	xor    eax,eax
  420cac:	pop    rbx
  420cad:	ret    
  420cae:	xchg   ax,ax
  420cb0:	push   r15
  420cb2:	push   r14
  420cb4:	push   rbx
  420cb5:	mov    r14,rsi
  420cb8:	mov    rbx,rdi
  420cbb:	mov    r15,QWORD PTR [rdi+0x38]
  420cbf:	lea    rdi,[r15+0x2]
  420cc3:	call   4235c0 <strcmp@plt+0x1fe28>
  420cc8:	mov    ecx,DWORD PTR [rbx+0x14]
  420ccb:	sub    ecx,eax
  420ccd:	jb     420cd8 <strcmp@plt+0x1d540>
  420ccf:	mov    eax,eax
  420cd1:	add    QWORD PTR [rbx+0x38],rax
  420cd5:	mov    DWORD PTR [rbx+0x14],ecx
  420cd8:	movzx  esi,BYTE PTR [r15+0x1]
  420cdd:	mov    rdi,r14
  420ce0:	call   423170 <strcmp@plt+0x1f9d8>
  420ce5:	mov    eax,0x1
  420cea:	pop    rbx
  420ceb:	pop    r14
  420ced:	pop    r15
  420cef:	ret    
  420cf0:	push   rbp
  420cf1:	push   r15
  420cf3:	push   r14
  420cf5:	push   r13
  420cf7:	push   r12
  420cf9:	push   rbx
  420cfa:	push   rax
  420cfb:	mov    r14,rsi
  420cfe:	mov    r15,rdi
  420d01:	movzx  r13d,WORD PTR [rdi+0x24]
  420d06:	cmp    r13,0xffff
  420d0d:	je     420d15 <strcmp@plt+0x1d57d>
  420d0f:	add    r13,QWORD PTR [r15+0x30]
  420d13:	jmp    420d18 <strcmp@plt+0x1d580>
  420d15:	xor    r13d,r13d
  420d18:	xor    eax,eax
  420d1a:	call   422c80 <strcmp@plt+0x1f4e8>
  420d1f:	mov    rbx,rax
  420d22:	lea    rbp,[rip+0x44097]        # 464dc0 <strcmp@plt+0x61628>
  420d29:	xor    r12d,r12d
  420d2c:	jmp    420d42 <strcmp@plt+0x1d5aa>
  420d2e:	xchg   ax,ax
  420d30:	inc    r12d
  420d33:	movzx  eax,BYTE PTR [r13+0x2]
  420d38:	and    eax,0x1f
  420d3b:	inc    eax
  420d3d:	cmp    r12d,eax
  420d40:	jae    420d9d <strcmp@plt+0x1d605>
  420d42:	mov    rdi,QWORD PTR [r15+0x38]
  420d46:	mov    rsi,rbx
  420d49:	call   4235c0 <strcmp@plt+0x1fe28>
  420d4e:	test   eax,eax
  420d50:	js     420dac <strcmp@plt+0x1d614>
  420d52:	mov    ecx,DWORD PTR [r15+0x14]
  420d56:	sub    ecx,eax
  420d58:	jb     420d64 <strcmp@plt+0x1d5cc>
  420d5a:	mov    eax,eax
  420d5c:	add    QWORD PTR [r15+0x38],rax
  420d60:	mov    DWORD PTR [r15+0x14],ecx
  420d64:	mov    rdi,rbx
  420d67:	call   423440 <strcmp@plt+0x1fca8>
  420d6c:	mov    rdi,rax
  420d6f:	mov    rsi,r14
  420d72:	call   42baa0 <strcmp@plt+0x28308>
  420d77:	cmp    DWORD PTR [rbp+0x0],0x0
  420d7b:	jle    420d30 <strcmp@plt+0x1d598>
  420d7d:	mov    rdi,rbx
  420d80:	call   422e20 <strcmp@plt+0x1f688>
  420d85:	mov    edi,0x5
  420d8a:	lea    rsi,[rip+0x283e4]        # 449175 <strcmp@plt+0x459dd>
  420d91:	mov    rdx,rax
  420d94:	xor    eax,eax
  420d96:	call   42e520 <strcmp@plt+0x2ad88>
  420d9b:	jmp    420d30 <strcmp@plt+0x1d598>
  420d9d:	mov    rdi,rbx
  420da0:	call   422c90 <strcmp@plt+0x1f4f8>
  420da5:	mov    eax,0x1
  420daa:	jmp    420dae <strcmp@plt+0x1d616>
  420dac:	xor    eax,eax
  420dae:	add    rsp,0x8
  420db2:	pop    rbx
  420db3:	pop    r12
  420db5:	pop    r13
  420db7:	pop    r14
  420db9:	pop    r15
  420dbb:	pop    rbp
  420dbc:	ret    
  420dbd:	nop    DWORD PTR [rax]
  420dc0:	push   rbp
  420dc1:	push   r15
  420dc3:	push   r14
  420dc5:	push   rbx
  420dc6:	push   rax
  420dc7:	mov    r15,rsi
  420dca:	mov    rbx,rdi
  420dcd:	mov    rbp,QWORD PTR [rdi+0x38]
  420dd1:	mov    rdi,rbp
  420dd4:	call   4285a0 <strcmp@plt+0x24e08>
  420dd9:	test   eax,eax
  420ddb:	jle    420e2d <strcmp@plt+0x1d695>
  420ddd:	mov    ecx,DWORD PTR [rbx+0x14]
  420de0:	sub    ecx,eax
  420de2:	jb     420ded <strcmp@plt+0x1d655>
  420de4:	mov    eax,eax
  420de6:	add    QWORD PTR [rbx+0x38],rax
  420dea:	mov    DWORD PTR [rbx+0x14],ecx
  420ded:	lea    rax,[rip+0x43fcc]        # 464dc0 <strcmp@plt+0x61628>
  420df4:	mov    r14d,0x1
  420dfa:	cmp    DWORD PTR [rax],0x0
  420dfd:	jle    420e30 <strcmp@plt+0x1d698>
  420dff:	mov    rdi,rbp
  420e02:	call   42b010 <strcmp@plt+0x27878>
  420e07:	mov    rbx,rax
  420e0a:	mov    rdi,QWORD PTR [r15]
  420e0d:	call   422e20 <strcmp@plt+0x1f688>
  420e12:	lea    rsi,[rip+0x2836a]        # 449183 <strcmp@plt+0x459eb>
  420e19:	mov    edi,0x5
  420e1e:	mov    rdx,rbx
  420e21:	mov    rcx,rax
  420e24:	xor    eax,eax
  420e26:	call   42e520 <strcmp@plt+0x2ad88>
  420e2b:	jmp    420e30 <strcmp@plt+0x1d698>
  420e2d:	xor    r14d,r14d
  420e30:	mov    eax,r14d
  420e33:	add    rsp,0x8
  420e37:	pop    rbx
  420e38:	pop    r14
  420e3a:	pop    r15
  420e3c:	pop    rbp
  420e3d:	ret    
  420e3e:	xchg   ax,ax
  420e40:	push   rbp
  420e41:	push   r15
  420e43:	push   r14
  420e45:	push   r13
  420e47:	push   r12
  420e49:	push   rbx
  420e4a:	sub    rsp,0x28
  420e4e:	mov    r15,rcx
  420e51:	mov    QWORD PTR [rsp+0x20],rdx
  420e56:	mov    r12,rsi
  420e59:	mov    r14,rdi
  420e5c:	mov    rbx,QWORD PTR [rdi+0x38]
  420e60:	mov    eax,DWORD PTR [rdi+0x14]
  420e63:	mov    rdi,rbx
  420e66:	cmp    eax,0xa
  420e69:	jb     420e7a <strcmp@plt+0x1d6e2>
  420e6b:	lea    rdi,[rbx+0xa]
  420e6f:	mov    QWORD PTR [r14+0x38],rdi
  420e73:	add    eax,0xfffffff6
  420e76:	mov    DWORD PTR [r14+0x14],eax
  420e7a:	mov    rsi,r12
  420e7d:	call   4235c0 <strcmp@plt+0x1fe28>
  420e82:	test   eax,eax
  420e84:	jle    420ff0 <strcmp@plt+0x1d858>
  420e8a:	mov    ecx,DWORD PTR [r14+0x14]
  420e8e:	sub    ecx,eax
  420e90:	jb     420e9c <strcmp@plt+0x1d704>
  420e92:	mov    eax,eax
  420e94:	add    QWORD PTR [r14+0x38],rax
  420e98:	mov    DWORD PTR [r14+0x14],ecx
  420e9c:	movzx  esi,BYTE PTR [rbx+0x5]
  420ea0:	mov    rdi,r12
  420ea3:	call   423170 <strcmp@plt+0x1f9d8>
  420ea8:	lea    rax,[rip+0x43f11]        # 464dc0 <strcmp@plt+0x61628>
  420eaf:	cmp    DWORD PTR [rax],0x0
  420eb2:	jle    420ee6 <strcmp@plt+0x1d74e>
  420eb4:	mov    rdi,rbx
  420eb7:	call   42acf0 <strcmp@plt+0x27558>
  420ebc:	mov    rbp,r14
  420ebf:	mov    r14,rax
  420ec2:	mov    rdi,r12
  420ec5:	call   422e20 <strcmp@plt+0x1f688>
  420eca:	lea    rsi,[rip+0x282c3]        # 449194 <strcmp@plt+0x459fc>
  420ed1:	mov    edi,0x5
  420ed6:	mov    rdx,r14
  420ed9:	mov    r14,rbp
  420edc:	mov    rcx,rax
  420edf:	xor    eax,eax
  420ee1:	call   42e520 <strcmp@plt+0x2ad88>
  420ee6:	cmp    BYTE PTR [rbx+0x4],0x0
  420eea:	mov    QWORD PTR [rsp+0x18],r15
  420eef:	je     420ff4 <strcmp@plt+0x1d85c>
  420ef5:	xor    r15d,r15d
  420ef8:	xor    eax,eax
  420efa:	mov    QWORD PTR [rsp+0x8],rax
  420eff:	mov    QWORD PTR [rsp+0x10],rbx
  420f04:	jmp    420f20 <strcmp@plt+0x1d788>
  420f06:	mov    QWORD PTR [rsp+0x8],r13
  420f0b:	mov    rbx,QWORD PTR [rsp+0x10]
  420f10:	inc    r15d
  420f13:	movzx  eax,BYTE PTR [rbx+0x4]
  420f17:	cmp    r15d,eax
  420f1a:	jae    420ffb <strcmp@plt+0x1d863>
  420f20:	mov    r12,QWORD PTR [r14+0x38]
  420f24:	xor    ebx,ebx
  420f26:	xor    eax,eax
  420f28:	call   428360 <strcmp@plt+0x24bc8>
  420f2d:	mov    r13,rax
  420f30:	mov    rbp,QWORD PTR [r14+0x38]
  420f34:	mov    rdi,rbp
  420f37:	mov    rsi,rax
  420f3a:	call   4285a0 <strcmp@plt+0x24e08>
  420f3f:	test   eax,eax
  420f41:	jle    421012 <strcmp@plt+0x1d87a>
  420f47:	mov    ecx,DWORD PTR [r14+0x14]
  420f4b:	sub    ecx,eax
  420f4d:	jb     420f59 <strcmp@plt+0x1d7c1>
  420f4f:	mov    eax,eax
  420f51:	add    QWORD PTR [r14+0x38],rax
  420f55:	mov    DWORD PTR [r14+0x14],ecx
  420f59:	lea    rax,[rip+0x43e60]        # 464dc0 <strcmp@plt+0x61628>
  420f60:	cmp    DWORD PTR [rax],0x0
  420f63:	jle    420f92 <strcmp@plt+0x1d7fa>
  420f65:	mov    rdi,rbp
  420f68:	call   42b010 <strcmp@plt+0x27878>
  420f6d:	mov    rbp,rax
  420f70:	mov    rdi,QWORD PTR [r13+0x0]
  420f74:	call   422e20 <strcmp@plt+0x1f688>
  420f79:	mov    edi,0x5
  420f7e:	lea    rsi,[rip+0x281fe]        # 449183 <strcmp@plt+0x459eb>
  420f85:	mov    rdx,rbp
  420f88:	mov    rcx,rax
  420f8b:	xor    eax,eax
  420f8d:	call   42e520 <strcmp@plt+0x2ad88>
  420f92:	mov    rdi,r13
  420f95:	mov    rsi,QWORD PTR [rsp+0x20]
  420f9a:	call   42baa0 <strcmp@plt+0x28308>
  420f9f:	test   BYTE PTR [r12+0x5],0x2
  420fa5:	je     420f0b <strcmp@plt+0x1d773>
  420fab:	cmp    QWORD PTR [rsp+0x8],0x0
  420fb1:	je     420f06 <strcmp@plt+0x1d76e>
  420fb7:	lea    rax,[rip+0x43e02]        # 464dc0 <strcmp@plt+0x61628>
  420fbe:	cmp    DWORD PTR [rax],0x0
  420fc1:	mov    rbx,QWORD PTR [rsp+0x10]
  420fc6:	jle    420f10 <strcmp@plt+0x1d778>
  420fcc:	mov    rdi,QWORD PTR [r13+0x0]
  420fd0:	call   422e20 <strcmp@plt+0x1f688>
  420fd5:	mov    edi,0x5
  420fda:	lea    rsi,[rip+0x281c0]        # 4491a1 <strcmp@plt+0x45a09>
  420fe1:	mov    rdx,rax
  420fe4:	xor    eax,eax
  420fe6:	call   42e520 <strcmp@plt+0x2ad88>
  420feb:	jmp    420f10 <strcmp@plt+0x1d778>
  420ff0:	xor    ebx,ebx
  420ff2:	jmp    421012 <strcmp@plt+0x1d87a>
  420ff4:	xor    eax,eax
  420ff6:	mov    QWORD PTR [rsp+0x8],rax
  420ffb:	mov    ebx,0x1
  421000:	mov    rax,QWORD PTR [rsp+0x18]
  421005:	test   rax,rax
  421008:	je     421012 <strcmp@plt+0x1d87a>
  42100a:	mov    rcx,QWORD PTR [rsp+0x8]
  42100f:	mov    QWORD PTR [rax],rcx
  421012:	mov    eax,ebx
  421014:	add    rsp,0x28
  421018:	pop    rbx
  421019:	pop    r12
  42101b:	pop    r13
  42101d:	pop    r14
  42101f:	pop    r15
  421021:	pop    rbp
  421022:	ret    
  421023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42102d:	nop    DWORD PTR [rax]
  421030:	push   rbp
  421031:	push   r15
  421033:	push   r14
  421035:	push   r13
  421037:	push   r12
  421039:	push   rbx
  42103a:	push   rax
  42103b:	test   rsi,rsi
  42103e:	je     4210ce <strcmp@plt+0x1d936>
  421044:	mov    r15,rdx
  421047:	mov    r12,rsi
  42104a:	mov    rbp,rdi
  42104d:	mov    rax,QWORD PTR [rdi+0x38]
  421051:	mov    ecx,DWORD PTR [rax]
  421053:	movbe  DWORD PTR [rsi+0x30],ecx
  421058:	mov    cl,BYTE PTR [rax+0x6]
  42105b:	shr    cl,0x5
  42105e:	mov    BYTE PTR [rsi+0x34],cl
  421061:	mov    al,BYTE PTR [rax+0x6]
  421064:	shr    al,0x4
  421067:	and    al,0x1
  421069:	mov    BYTE PTR [rsi+0x35],al
  42106c:	call   42b980 <strcmp@plt+0x281e8>
  421071:	mov    r14,rax
  421074:	mov    rdi,rbp
  421077:	mov    rsi,r12
  42107a:	mov    rdx,rax
  42107d:	mov    rcx,r15
  421080:	call   420e40 <strcmp@plt+0x1d6a8>
  421085:	xor    r15d,r15d
  421088:	cmp    eax,0x1
  42108b:	jne    4210d9 <strcmp@plt+0x1d941>
  42108d:	mov    rbp,QWORD PTR [r14+0x8]
  421091:	cmp    rbp,r14
  421094:	jne    4210a9 <strcmp@plt+0x1d911>
  421096:	jmp    4210d3 <strcmp@plt+0x1d93b>
  421098:	nop    DWORD PTR [rax+rax*1+0x0]
  4210a0:	mov    rbp,QWORD PTR [rbp+0x8]
  4210a4:	cmp    rbp,r14
  4210a7:	je     4210d3 <strcmp@plt+0x1d93b>
  4210a9:	mov    r13,QWORD PTR [rbp+0x10]
  4210ad:	mov    rdi,r12
  4210b0:	mov    rsi,r13
  4210b3:	call   428ee0 <strcmp@plt+0x25748>
  4210b8:	cmp    eax,0x1
  4210bb:	je     4210a0 <strcmp@plt+0x1d908>
  4210bd:	mov    ebx,eax
  4210bf:	mov    rdi,r13
  4210c2:	call   428670 <strcmp@plt+0x24ed8>
  4210c7:	cmp    ebx,0xfffffffb
  4210ca:	je     4210a0 <strcmp@plt+0x1d908>
  4210cc:	jmp    4210d9 <strcmp@plt+0x1d941>
  4210ce:	xor    r15d,r15d
  4210d1:	jmp    4210e1 <strcmp@plt+0x1d949>
  4210d3:	mov    r15d,0x1
  4210d9:	mov    rdi,r14
  4210dc:	call   42bff0 <strcmp@plt+0x28858>
  4210e1:	mov    eax,r15d
  4210e4:	add    rsp,0x8
  4210e8:	pop    rbx
  4210e9:	pop    r12
  4210eb:	pop    r13
  4210ed:	pop    r14
  4210ef:	pop    r15
  4210f1:	pop    rbp
  4210f2:	ret    
  4210f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4210fd:	nop    DWORD PTR [rax]
  421100:	push   rbp
  421101:	push   r15
  421103:	push   r14
  421105:	push   r13
  421107:	push   r12
  421109:	push   rbx
  42110a:	push   rax
  42110b:	mov    QWORD PTR [rsp],rdx
  42110f:	mov    rbp,rsi
  421112:	mov    r13,rdi
  421115:	mov    r15,QWORD PTR [rdi+0x38]
  421119:	mov    eax,DWORD PTR [rdi+0x14]
  42111c:	mov    rdi,r15
  42111f:	cmp    eax,0xa
  421122:	jb     421133 <strcmp@plt+0x1d99b>
  421124:	lea    rdi,[r15+0xa]
  421128:	mov    QWORD PTR [r13+0x38],rdi
  42112c:	add    eax,0xfffffff6
  42112f:	mov    DWORD PTR [r13+0x14],eax
  421133:	mov    rsi,rbp
  421136:	call   4235c0 <strcmp@plt+0x1fe28>
  42113b:	test   eax,eax
  42113d:	jle    421236 <strcmp@plt+0x1da9e>
  421143:	mov    ecx,DWORD PTR [r13+0x14]
  421147:	sub    ecx,eax
  421149:	jb     421155 <strcmp@plt+0x1d9bd>
  42114b:	mov    eax,eax
  42114d:	add    QWORD PTR [r13+0x38],rax
  421151:	mov    DWORD PTR [r13+0x14],ecx
  421155:	movzx  esi,BYTE PTR [r15+0x5]
  42115a:	mov    rdi,rbp
  42115d:	call   423170 <strcmp@plt+0x1f9d8>
  421162:	lea    rax,[rip+0x43c57]        # 464dc0 <strcmp@plt+0x61628>
  421169:	cmp    DWORD PTR [rax],0x0
  42116c:	jle    42119a <strcmp@plt+0x1da02>
  42116e:	mov    rdi,r15
  421171:	call   42ae10 <strcmp@plt+0x27678>
  421176:	mov    r12,rax
  421179:	mov    rdi,rbp
  42117c:	call   422e20 <strcmp@plt+0x1f688>
  421181:	lea    rsi,[rip+0x2800c]        # 449194 <strcmp@plt+0x459fc>
  421188:	mov    edi,0x5
  42118d:	mov    rdx,r12
  421190:	mov    rcx,rax
  421193:	xor    eax,eax
  421195:	call   42e520 <strcmp@plt+0x2ad88>
  42119a:	mov    eax,0x1
  42119f:	cmp    BYTE PTR [r15+0x4],0x0
  4211a4:	je     42123f <strcmp@plt+0x1daa7>
  4211aa:	xor    r14d,r14d
  4211ad:	jmp    4211c9 <strcmp@plt+0x1da31>
  4211af:	nop
  4211b0:	mov    rdi,rbp
  4211b3:	mov    rsi,QWORD PTR [rsp]
  4211b7:	call   42baa0 <strcmp@plt+0x28308>
  4211bc:	inc    r14d
  4211bf:	movzx  eax,BYTE PTR [r15+0x4]
  4211c4:	cmp    r14d,eax
  4211c7:	jae    42123a <strcmp@plt+0x1daa2>
  4211c9:	xor    eax,eax
  4211cb:	call   428360 <strcmp@plt+0x24bc8>
  4211d0:	mov    rbp,rax
  4211d3:	mov    r12,QWORD PTR [r13+0x38]
  4211d7:	mov    rdi,r12
  4211da:	mov    rsi,rax
  4211dd:	call   4285a0 <strcmp@plt+0x24e08>
  4211e2:	test   eax,eax
  4211e4:	jle    421236 <strcmp@plt+0x1da9e>
  4211e6:	mov    ecx,DWORD PTR [r13+0x14]
  4211ea:	sub    ecx,eax
  4211ec:	jb     4211f8 <strcmp@plt+0x1da60>
  4211ee:	mov    eax,eax
  4211f0:	add    QWORD PTR [r13+0x38],rax
  4211f4:	mov    DWORD PTR [r13+0x14],ecx
  4211f8:	lea    rax,[rip+0x43bc1]        # 464dc0 <strcmp@plt+0x61628>
  4211ff:	cmp    DWORD PTR [rax],0x0
  421202:	jle    4211b0 <strcmp@plt+0x1da18>
  421204:	mov    rdi,r12
  421207:	call   42b010 <strcmp@plt+0x27878>
  42120c:	mov    rbx,rax
  42120f:	mov    rdi,QWORD PTR [rbp+0x0]
  421213:	call   422e20 <strcmp@plt+0x1f688>
  421218:	mov    edi,0x5
  42121d:	lea    rsi,[rip+0x27f5f]        # 449183 <strcmp@plt+0x459eb>
  421224:	mov    rdx,rbx
  421227:	mov    rcx,rax
  42122a:	xor    eax,eax
  42122c:	call   42e520 <strcmp@plt+0x2ad88>
  421231:	jmp    4211b0 <strcmp@plt+0x1da18>
  421236:	xor    eax,eax
  421238:	jmp    42123f <strcmp@plt+0x1daa7>
  42123a:	mov    eax,0x1
  42123f:	add    rsp,0x8
  421243:	pop    rbx
  421244:	pop    r12
  421246:	pop    r13
  421248:	pop    r14
  42124a:	pop    r15
  42124c:	pop    rbp
  42124d:	ret    
  42124e:	xchg   ax,ax
  421250:	push   rbp
  421251:	push   r15
  421253:	push   r14
  421255:	push   r13
  421257:	push   r12
  421259:	push   rbx
  42125a:	push   rax
  42125b:	test   rsi,rsi
  42125e:	je     4212ee <strcmp@plt+0x1db56>
  421264:	mov    r12,rsi
  421267:	mov    rbp,rdi
  42126a:	mov    rax,QWORD PTR [rdi+0x38]
  42126e:	mov    ecx,DWORD PTR [rax]
  421270:	movbe  DWORD PTR [rsi+0x38],ecx
  421275:	mov    cl,BYTE PTR [rax+0x6]
  421278:	shr    cl,0x5
  42127b:	mov    BYTE PTR [rsi+0x3c],cl
  42127e:	mov    cl,BYTE PTR [rax+0x6]
  421281:	shr    cl,0x4
  421284:	and    cl,0x1
  421287:	mov    BYTE PTR [rsi+0x3d],cl
  42128a:	mov    al,BYTE PTR [rax+0x6]
  42128d:	shr    al,0x3
  421290:	and    al,0x1
  421292:	mov    BYTE PTR [rsi+0x3e],al
  421295:	call   42b980 <strcmp@plt+0x281e8>
  42129a:	mov    r14,rax
  42129d:	mov    rdi,rbp
  4212a0:	mov    rsi,r12
  4212a3:	mov    rdx,rax
  4212a6:	call   421100 <strcmp@plt+0x1d968>
  4212ab:	xor    r15d,r15d
  4212ae:	cmp    eax,0x1
  4212b1:	jne    4212f9 <strcmp@plt+0x1db61>
  4212b3:	mov    rbp,QWORD PTR [r14+0x8]
  4212b7:	cmp    rbp,r14
  4212ba:	jne    4212c9 <strcmp@plt+0x1db31>
  4212bc:	jmp    4212f3 <strcmp@plt+0x1db5b>
  4212be:	xchg   ax,ax
  4212c0:	mov    rbp,QWORD PTR [rbp+0x8]
  4212c4:	cmp    rbp,r14
  4212c7:	je     4212f3 <strcmp@plt+0x1db5b>
  4212c9:	mov    r13,QWORD PTR [rbp+0x10]
  4212cd:	mov    rdi,r12
  4212d0:	mov    rsi,r13
  4212d3:	call   429940 <strcmp@plt+0x261a8>
  4212d8:	cmp    eax,0x1
  4212db:	je     4212c0 <strcmp@plt+0x1db28>
  4212dd:	mov    ebx,eax
  4212df:	mov    rdi,r13
  4212e2:	call   428670 <strcmp@plt+0x24ed8>
  4212e7:	cmp    ebx,0xfffffffb
  4212ea:	je     4212c0 <strcmp@plt+0x1db28>
  4212ec:	jmp    4212f9 <strcmp@plt+0x1db61>
  4212ee:	xor    r15d,r15d
  4212f1:	jmp    421301 <strcmp@plt+0x1db69>
  4212f3:	mov    r15d,0x1
  4212f9:	mov    rdi,r14
  4212fc:	call   42bff0 <strcmp@plt+0x28858>
  421301:	mov    eax,r15d
  421304:	add    rsp,0x8
  421308:	pop    rbx
  421309:	pop    r12
  42130b:	pop    r13
  42130d:	pop    r14
  42130f:	pop    r15
  421311:	pop    rbp
  421312:	ret    
  421313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42131d:	nop    DWORD PTR [rax]
  421320:	push   r15
  421322:	push   r14
  421324:	push   rbx
  421325:	mov    r14,rsi
  421328:	mov    rbx,rdi
  42132b:	mov    r15,QWORD PTR [rdi+0x38]
  42132f:	mov    eax,DWORD PTR [r15]
  421332:	movbe  DWORD PTR [rdx],eax
  421336:	mov    eax,DWORD PTR [rdi+0x14]
  421339:	cmp    eax,0x4
  42133c:	jb     42134c <strcmp@plt+0x1dbb4>
  42133e:	add    r15,0x4
  421342:	mov    QWORD PTR [rbx+0x38],r15
  421346:	add    eax,0xfffffffc
  421349:	mov    DWORD PTR [rbx+0x14],eax
  42134c:	lea    rdi,[r15+0x2]
  421350:	mov    rsi,r14
  421353:	call   4235c0 <strcmp@plt+0x1fe28>
  421358:	mov    ecx,DWORD PTR [rbx+0x14]
  42135b:	sub    ecx,eax
  42135d:	jb     421368 <strcmp@plt+0x1dbd0>
  42135f:	mov    eax,eax
  421361:	add    QWORD PTR [rbx+0x38],rax
  421365:	mov    DWORD PTR [rbx+0x14],ecx
  421368:	movzx  esi,BYTE PTR [r15+0x1]
  42136d:	mov    rdi,r14
  421370:	call   423170 <strcmp@plt+0x1f9d8>
  421375:	mov    eax,0x1
  42137a:	pop    rbx
  42137b:	pop    r14
  42137d:	pop    r15
  42137f:	ret    
  421380:	mov    ecx,DWORD PTR [rdi+0x14]
  421383:	cmp    ecx,0x10
  421386:	jae    42138d <strcmp@plt+0x1dbf5>
  421388:	xor    r8d,r8d
  42138b:	jmp    42139f <strcmp@plt+0x1dc07>
  42138d:	mov    r8,QWORD PTR [rdi+0x38]
  421391:	lea    rax,[r8+0x10]
  421395:	mov    QWORD PTR [rdi+0x38],rax
  421399:	add    ecx,0xfffffff0
  42139c:	mov    DWORD PTR [rdi+0x14],ecx
  42139f:	vmovups xmm0,XMMWORD PTR [r8]
  4213a4:	vmovups XMMWORD PTR [rsi],xmm0
  4213a8:	mov    rax,QWORD PTR [rdi+0x38]
  4213ac:	lea    rcx,[rax+0x8]
  4213b0:	mov    QWORD PTR [rdi+0x38],rcx
  4213b4:	add    DWORD PTR [rdi+0x14],0xfffffff8
  4213b8:	mov    rax,QWORD PTR [rax]
  4213bb:	mov    QWORD PTR [rdx],rax
  4213be:	mov    eax,0x1
  4213c3:	ret    
  4213c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4213ce:	xchg   ax,ax
  4213d0:	movzx  eax,WORD PTR [rdi+0x24]
  4213d4:	cmp    rax,0xffff
  4213da:	je     42140a <strcmp@plt+0x1dc72>
  4213dc:	add    rax,QWORD PTR [rdi+0x30]
  4213e0:	je     42140a <strcmp@plt+0x1dc72>
  4213e2:	movzx  eax,WORD PTR [rax]
  4213e5:	shr    eax,0x4
  4213e8:	and    eax,0xf
  4213eb:	cmp    eax,0x7
  4213ee:	ja     42140a <strcmp@plt+0x1dc72>
  4213f0:	mov    ecx,0xde
  4213f5:	bt     ecx,eax
  4213f8:	jae    42140a <strcmp@plt+0x1dc72>
  4213fa:	mov    ecx,DWORD PTR [rdi+0x14]
  4213fd:	mov    edx,0xc
  421402:	cmp    ecx,0xc
  421405:	jae    42140f <strcmp@plt+0x1dc77>
  421407:	xor    eax,eax
  421409:	ret    
  42140a:	mov    ecx,DWORD PTR [rdi+0x14]
  42140d:	xor    edx,edx
  42140f:	mov    rax,QWORD PTR [rdi+0x38]
  421413:	mov    esi,edx
  421415:	add    rsi,rax
  421418:	mov    QWORD PTR [rdi+0x38],rsi
  42141c:	sub    ecx,edx
  42141e:	mov    DWORD PTR [rdi+0x14],ecx
  421421:	ret    
  421422:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42142c:	nop    DWORD PTR [rax+0x0]
  421430:	push   r14
  421432:	push   rbx
  421433:	push   rax
  421434:	mov    r14,rsi
  421437:	mov    rbx,rdi
  42143a:	mov    rdi,rsi
  42143d:	call   422d30 <strcmp@plt+0x1f598>
  421442:	mov    rdi,rbx
  421445:	mov    esi,eax
  421447:	call   42df90 <strcmp@plt+0x2a7f8>
  42144c:	mov    rbx,rax
  42144f:	mov    rdi,rax
  421452:	mov    rsi,r14
  421455:	call   423540 <strcmp@plt+0x1fda8>
  42145a:	test   eax,eax
  42145c:	jg     42148e <strcmp@plt+0x1dcf6>
  42145e:	lea    rax,[rip+0x4395b]        # 464dc0 <strcmp@plt+0x61628>
  421465:	cmp    DWORD PTR [rax],0x3
  421468:	jge    42146e <strcmp@plt+0x1dcd6>
  42146a:	xor    ebx,ebx
  42146c:	jmp    42148e <strcmp@plt+0x1dcf6>
  42146e:	mov    rdi,r14
  421471:	call   422e20 <strcmp@plt+0x1f688>
  421476:	lea    rsi,[rip+0x27d5d]        # 4491da <strcmp@plt+0x45a42>
  42147d:	xor    ebx,ebx
  42147f:	mov    edi,0x7
  421484:	mov    rdx,rax
  421487:	xor    eax,eax
  421489:	call   42e520 <strcmp@plt+0x2ad88>
  42148e:	mov    rax,rbx
  421491:	add    rsp,0x8
  421495:	pop    rbx
  421496:	pop    r14
  421498:	ret    
  421499:	nop    DWORD PTR [rax+0x0]
  4214a0:	push   r15
  4214a2:	push   r14
  4214a4:	push   rbx
  4214a5:	mov    rbx,rsi
  4214a8:	mov    r14,rdi
  4214ab:	mov    esi,0x6
  4214b0:	call   42df90 <strcmp@plt+0x2a7f8>
  4214b5:	mov    r15,rax
  4214b8:	mov    al,BYTE PTR [rbx+0xb]
  4214bb:	mov    BYTE PTR [r15],al
  4214be:	mov    al,BYTE PTR [rbx+0xc]
  4214c1:	mov    BYTE PTR [r15+0x1],al
  4214c5:	mov    al,BYTE PTR [rbx+0xd]
  4214c8:	mov    BYTE PTR [r15+0x2],al
  4214cc:	mov    al,BYTE PTR [rbx+0xe]
  4214cf:	mov    BYTE PTR [r15+0x3],al
  4214d3:	mov    al,BYTE PTR [rbx+0x9]
  4214d6:	mov    cl,BYTE PTR [r15+0x5]
  4214da:	shl    al,0x2
  4214dd:	and    al,0x4
  4214df:	and    cl,0xfb
  4214e2:	or     cl,al
  4214e4:	mov    BYTE PTR [r15+0x5],cl
  4214e8:	mov    al,BYTE PTR [rbx+0xa]
  4214eb:	and    al,0x1
  4214ed:	and    cl,0xfe
  4214f0:	or     cl,al
  4214f2:	mov    BYTE PTR [r15+0x5],cl
  4214f6:	mov    rbx,QWORD PTR [rbx]
  4214f9:	mov    rdi,rbx
  4214fc:	call   422d30 <strcmp@plt+0x1f598>
  421501:	mov    rdi,r14
  421504:	mov    esi,eax
  421506:	call   42df90 <strcmp@plt+0x2a7f8>
  42150b:	mov    rdi,rax
  42150e:	mov    rsi,rbx
  421511:	call   423540 <strcmp@plt+0x1fda8>
  421516:	test   eax,eax
  421518:	jg     421544 <strcmp@plt+0x1ddac>
  42151a:	lea    rax,[rip+0x4389f]        # 464dc0 <strcmp@plt+0x61628>
  421521:	cmp    DWORD PTR [rax],0x3
  421524:	jl     421544 <strcmp@plt+0x1ddac>
  421526:	mov    rdi,rbx
  421529:	call   422e20 <strcmp@plt+0x1f688>
  42152e:	lea    rsi,[rip+0x27ca5]        # 4491da <strcmp@plt+0x45a42>
  421535:	mov    edi,0x7
  42153a:	mov    rdx,rax
  42153d:	xor    eax,eax
  42153f:	call   42e520 <strcmp@plt+0x2ad88>
  421544:	mov    rax,r15
  421547:	pop    rbx
  421548:	pop    r14
  42154a:	pop    r15
  42154c:	ret    
  42154d:	nop    DWORD PTR [rax]
  421550:	push   rbx
  421551:	mov    esi,0xa
  421556:	call   42df90 <strcmp@plt+0x2a7f8>
  42155b:	mov    rbx,rax
  42155e:	mov    rdi,rax
  421561:	call   42aaf0 <strcmp@plt+0x27358>
  421566:	mov    rax,rbx
  421569:	pop    rbx
  42156a:	ret    
  42156b:	nop    DWORD PTR [rax+rax*1+0x0]
  421570:	push   rbp
  421571:	push   r15
  421573:	push   r14
  421575:	push   r13
  421577:	push   r12
  421579:	push   rbx
  42157a:	sub    rsp,0x28
  42157e:	mov    QWORD PTR [rsp+0x18],rdx
  421583:	mov    rbx,rsi
  421586:	mov    r15,rdi
  421589:	mov    esi,0xa
  42158e:	call   42df90 <strcmp@plt+0x2a7f8>
  421593:	mov    rbp,rax
  421596:	mov    rdi,rax
  421599:	call   42aaf0 <strcmp@plt+0x27358>
  42159e:	mov    rdi,rbx
  4215a1:	call   422d90 <strcmp@plt+0x1f5f8>
  4215a6:	mov    BYTE PTR [rbp+0x5],al
  4215a9:	mov    eax,DWORD PTR [rbx+0x30]
  4215ac:	movbe  DWORD PTR [rbp+0x0],eax
  4215b1:	mov    al,BYTE PTR [rbx+0x35]
  4215b4:	mov    cl,BYTE PTR [rbp+0x6]
  4215b7:	shl    al,0x4
  4215ba:	and    al,0x10
  4215bc:	and    cl,0xef
  4215bf:	or     cl,al
  4215c1:	mov    BYTE PTR [rbp+0x6],cl
  4215c4:	mov    rdi,rbx
  4215c7:	call   422d30 <strcmp@plt+0x1f598>
  4215cc:	mov    rdi,r15
  4215cf:	mov    esi,eax
  4215d1:	call   42df90 <strcmp@plt+0x2a7f8>
  4215d6:	mov    r12,rax
  4215d9:	mov    rdi,rax
  4215dc:	mov    QWORD PTR [rsp+0x8],rbx
  4215e1:	mov    rsi,rbx
  4215e4:	call   423540 <strcmp@plt+0x1fda8>
  4215e9:	test   eax,eax
  4215eb:	jle    42170c <strcmp@plt+0x1df74>
  4215f1:	xor    r14d,r14d
  4215f4:	test   r12,r12
  4215f7:	je     421718 <strcmp@plt+0x1df80>
  4215fd:	mov    QWORD PTR [rsp+0x10],r15
  421602:	mov    QWORD PTR [rsp+0x20],rbp
  421607:	mov    rax,QWORD PTR [rsp+0x8]
  42160c:	mov    rax,QWORD PTR [rax+0x28]
  421610:	mov    r15,QWORD PTR [rax+0x8]
  421614:	cmp    r15,rax
  421617:	je     4216c7 <strcmp@plt+0x1df2f>
  42161d:	xor    r14d,r14d
  421620:	jmp    421643 <strcmp@plt+0x1deab>
  421622:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42162c:	nop    DWORD PTR [rax+0x0]
  421630:	mov    r15,QWORD PTR [r15+0x8]
  421634:	mov    rax,QWORD PTR [rsp+0x8]
  421639:	cmp    r15,QWORD PTR [rax+0x28]
  42163d:	je     4216c7 <strcmp@plt+0x1df2f>
  421643:	mov    r12,QWORD PTR [r15+0x10]
  421647:	cmp    DWORD PTR [r12+0x18],0x0
  42164d:	je     421630 <strcmp@plt+0x1de98>
  42164f:	mov    r13,QWORD PTR [r12+0x8]
  421654:	mov    rbx,QWORD PTR [r13+0x10]
  421658:	mov    rax,QWORD PTR [rbx]
  42165b:	cmp    DWORD PTR [rax+0x18],0x0
  42165f:	je     421630 <strcmp@plt+0x1de98>
  421661:	cmp    r13,r12
  421664:	je     421630 <strcmp@plt+0x1de98>
  421666:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421670:	cmp    BYTE PTR [rbx+0x8],0x0
  421674:	je     4216ae <strcmp@plt+0x1df16>
  421676:	mov    rdi,QWORD PTR [rsp+0x10]
  42167b:	mov    rsi,rbx
  42167e:	call   4214a0 <strcmp@plt+0x1dd08>
  421683:	cmp    QWORD PTR [rsp+0x18],0x0
  421689:	je     4216ab <strcmp@plt+0x1df13>
  42168b:	mov    rbp,rax
  42168e:	mov    rdi,QWORD PTR [rbx]
  421691:	call   422fd0 <strcmp@plt+0x1f838>
  421696:	mov    rdi,rax
  421699:	mov    rsi,QWORD PTR [rsp+0x18]
  42169e:	call   423670 <strcmp@plt+0x1fed8>
  4216a3:	test   eax,eax
  4216a5:	jne    4216ab <strcmp@plt+0x1df13>
  4216a7:	or     BYTE PTR [rbp+0x5],0x2
  4216ab:	inc    r14d
  4216ae:	mov    r13,QWORD PTR [r13+0x8]
  4216b2:	cmp    r13,r12
  4216b5:	je     421630 <strcmp@plt+0x1de98>
  4216bb:	mov    rbx,QWORD PTR [r13+0x10]
  4216bf:	cmp    BYTE PTR [rbx+0x8],0x0
  4216c3:	jne    421676 <strcmp@plt+0x1dede>
  4216c5:	jmp    4216ae <strcmp@plt+0x1df16>
  4216c7:	mov    rbx,QWORD PTR [rsp+0x20]
  4216cc:	mov    BYTE PTR [rbx+0x4],r14b
  4216d0:	mov    rcx,QWORD PTR [rsp+0x10]
  4216d5:	movzx  eax,WORD PTR [rcx+0x24]
  4216d9:	cmp    rax,0xffff
  4216df:	je     42173e <strcmp@plt+0x1dfa6>
  4216e1:	add    rax,QWORD PTR [rcx+0x30]
  4216e5:	je     42173e <strcmp@plt+0x1dfa6>
  4216e7:	movzx  ecx,WORD PTR [rax]
  4216ea:	shr    ecx,0x4
  4216ed:	and    ecx,0xf
  4216f0:	dec    ecx
  4216f2:	cmp    ecx,0x5
  4216f5:	ja     42173e <strcmp@plt+0x1dfa6>
  4216f7:	lea    rdx,[rip+0x2796e]        # 44906c <strcmp@plt+0x458d4>
  4216fe:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  421702:	add    rcx,rdx
  421705:	jmp    rcx
  421707:	inc    BYTE PTR [rax+0x3]
  42170a:	jmp    42173e <strcmp@plt+0x1dfa6>
  42170c:	lea    rax,[rip+0x436ad]        # 464dc0 <strcmp@plt+0x61628>
  421713:	cmp    DWORD PTR [rax],0x3
  421716:	jge    42171c <strcmp@plt+0x1df84>
  421718:	xor    ebx,ebx
  42171a:	jmp    42173e <strcmp@plt+0x1dfa6>
  42171c:	mov    rdi,QWORD PTR [rsp+0x8]
  421721:	call   422e20 <strcmp@plt+0x1f688>
  421726:	lea    rsi,[rip+0x27aad]        # 4491da <strcmp@plt+0x45a42>
  42172d:	xor    ebx,ebx
  42172f:	mov    edi,0x7
  421734:	mov    rdx,rax
  421737:	xor    eax,eax
  421739:	call   42e520 <strcmp@plt+0x2ad88>
  42173e:	mov    rax,rbx
  421741:	add    rsp,0x28
  421745:	pop    rbx
  421746:	pop    r12
  421748:	pop    r13
  42174a:	pop    r14
  42174c:	pop    r15
  42174e:	pop    rbp
  42174f:	ret    
  421750:	push   rbp
  421751:	push   r15
  421753:	push   r14
  421755:	push   r13
  421757:	push   r12
  421759:	push   rbx
  42175a:	push   rax
  42175b:	mov    ebp,r8d
  42175e:	mov    ebx,ecx
  421760:	mov    r13d,edx
  421763:	mov    r15,rsi
  421766:	mov    r14,rdi
  421769:	mov    esi,0xa
  42176e:	call   42df90 <strcmp@plt+0x2a7f8>
  421773:	mov    r12,rax
  421776:	mov    rdi,rax
  421779:	call   42aaf0 <strcmp@plt+0x27358>
  42177e:	mov    rdi,r15
  421781:	call   422d90 <strcmp@plt+0x1f5f8>
  421786:	mov    BYTE PTR [r12+0x5],al
  42178b:	mov    BYTE PTR [r12+0x4],0x0
  421791:	movbe  DWORD PTR [r12],r13d
  421797:	mov    al,BYTE PTR [r12+0x6]
  42179c:	shl    bl,0x5
  42179f:	and    al,0xf
  4217a1:	shl    bpl,0x4
  4217a5:	and    bpl,0x10
  4217a9:	or     bpl,bl
  4217ac:	or     bpl,al
  4217af:	mov    BYTE PTR [r12+0x6],bpl
  4217b4:	mov    rdi,r15
  4217b7:	call   422d30 <strcmp@plt+0x1f598>
  4217bc:	mov    rdi,r14
  4217bf:	mov    esi,eax
  4217c1:	call   42df90 <strcmp@plt+0x2a7f8>
  4217c6:	mov    rbx,rax
  4217c9:	mov    rdi,rax
  4217cc:	mov    rsi,r15
  4217cf:	call   423540 <strcmp@plt+0x1fda8>
  4217d4:	test   eax,eax
  4217d6:	jle    421815 <strcmp@plt+0x1e07d>
  4217d8:	test   rbx,rbx
  4217db:	je     421821 <strcmp@plt+0x1e089>
  4217dd:	movzx  eax,WORD PTR [r14+0x24]
  4217e2:	cmp    rax,0xffff
  4217e8:	je     421847 <strcmp@plt+0x1e0af>
  4217ea:	add    rax,QWORD PTR [r14+0x30]
  4217ee:	je     421847 <strcmp@plt+0x1e0af>
  4217f0:	movzx  ecx,WORD PTR [rax]
  4217f3:	shr    ecx,0x4
  4217f6:	and    ecx,0xf
  4217f9:	dec    ecx
  4217fb:	cmp    ecx,0x5
  4217fe:	ja     421847 <strcmp@plt+0x1e0af>
  421800:	lea    rdx,[rip+0x2787d]        # 449084 <strcmp@plt+0x458ec>
  421807:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42180b:	add    rcx,rdx
  42180e:	jmp    rcx
  421810:	inc    BYTE PTR [rax+0x3]
  421813:	jmp    421847 <strcmp@plt+0x1e0af>
  421815:	lea    rax,[rip+0x435a4]        # 464dc0 <strcmp@plt+0x61628>
  42181c:	cmp    DWORD PTR [rax],0x3
  42181f:	jge    421826 <strcmp@plt+0x1e08e>
  421821:	xor    r12d,r12d
  421824:	jmp    421847 <strcmp@plt+0x1e0af>
  421826:	mov    rdi,r15
  421829:	call   422e20 <strcmp@plt+0x1f688>
  42182e:	lea    rsi,[rip+0x279a5]        # 4491da <strcmp@plt+0x45a42>
  421835:	xor    r12d,r12d
  421838:	mov    edi,0x7
  42183d:	mov    rdx,rax
  421840:	xor    eax,eax
  421842:	call   42e520 <strcmp@plt+0x2ad88>
  421847:	mov    rax,r12
  42184a:	add    rsp,0x8
  42184e:	pop    rbx
  42184f:	pop    r12
  421851:	pop    r13
  421853:	pop    r14
  421855:	pop    r15
  421857:	pop    rbp
  421858:	ret    
  421859:	nop    DWORD PTR [rax+0x0]
  421860:	push   rbx
  421861:	mov    esi,0xa
  421866:	call   42df90 <strcmp@plt+0x2a7f8>
  42186b:	mov    rbx,rax
  42186e:	mov    rdi,rax
  421871:	call   42ab10 <strcmp@plt+0x27378>
  421876:	mov    rax,rbx
  421879:	pop    rbx
  42187a:	ret    
  42187b:	nop    DWORD PTR [rax+rax*1+0x0]
  421880:	push   rbp
  421881:	push   r15
  421883:	push   r14
  421885:	push   r13
  421887:	push   r12
  421889:	push   rbx
  42188a:	push   rax
  42188b:	mov    r15,rsi
  42188e:	mov    r13,rdi
  421891:	mov    esi,0xa
  421896:	call   42df90 <strcmp@plt+0x2a7f8>
  42189b:	mov    rbp,rax
  42189e:	mov    rdi,rax
  4218a1:	call   42ab10 <strcmp@plt+0x27378>
  4218a6:	mov    rdi,r15
  4218a9:	call   422d90 <strcmp@plt+0x1f5f8>
  4218ae:	mov    BYTE PTR [rbp+0x5],al
  4218b1:	mov    eax,DWORD PTR [r15+0x38]
  4218b5:	movbe  DWORD PTR [rbp+0x0],eax
  4218ba:	mov    al,BYTE PTR [r15+0x3c]
  4218be:	mov    cl,BYTE PTR [rbp+0x6]
  4218c1:	shl    al,0x5
  4218c4:	and    cl,0x1f
  4218c7:	or     cl,al
  4218c9:	mov    BYTE PTR [rbp+0x6],cl
  4218cc:	mov    al,BYTE PTR [r15+0x3d]
  4218d0:	shl    al,0x4
  4218d3:	and    al,0x10
  4218d5:	and    cl,0xef
  4218d8:	or     cl,al
  4218da:	mov    BYTE PTR [rbp+0x6],cl
  4218dd:	mov    al,BYTE PTR [r15+0x3e]
  4218e1:	shl    al,0x3
  4218e4:	and    al,0x8
  4218e6:	and    cl,0xf7
  4218e9:	or     cl,al
  4218eb:	mov    BYTE PTR [rbp+0x6],cl
  4218ee:	mov    rdi,r15
  4218f1:	call   422d30 <strcmp@plt+0x1f598>
  4218f6:	mov    rdi,r13
  4218f9:	mov    esi,eax
  4218fb:	call   42df90 <strcmp@plt+0x2a7f8>
  421900:	mov    r12,rax
  421903:	mov    rdi,rax
  421906:	mov    rsi,r15
  421909:	call   423540 <strcmp@plt+0x1fda8>
  42190e:	test   eax,eax
  421910:	jle    4219d2 <strcmp@plt+0x1e23a>
  421916:	xor    ebx,ebx
  421918:	test   r12,r12
  42191b:	je     4219de <strcmp@plt+0x1e246>
  421921:	mov    QWORD PTR [rsp],rbp
  421925:	mov    rax,QWORD PTR [r15+0x28]
  421929:	mov    r12,QWORD PTR [rax+0x8]
  42192d:	cmp    r12,rax
  421930:	je     42198f <strcmp@plt+0x1e1f7>
  421932:	xor    ebx,ebx
  421934:	jmp    42194b <strcmp@plt+0x1e1b3>
  421936:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421940:	mov    r12,QWORD PTR [r12+0x8]
  421945:	cmp    r12,QWORD PTR [r15+0x28]
  421949:	je     42198f <strcmp@plt+0x1e1f7>
  42194b:	mov    rbp,QWORD PTR [r12+0x10]
  421950:	cmp    DWORD PTR [rbp+0x18],0x0
  421954:	je     421940 <strcmp@plt+0x1e1a8>
  421956:	mov    r14,QWORD PTR [rbp+0x8]
  42195a:	cmp    r14,rbp
  42195d:	jne    421979 <strcmp@plt+0x1e1e1>
  42195f:	jmp    421940 <strcmp@plt+0x1e1a8>
  421961:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42196b:	nop    DWORD PTR [rax+rax*1+0x0]
  421970:	mov    r14,QWORD PTR [r14+0x8]
  421974:	cmp    r14,rbp
  421977:	je     421940 <strcmp@plt+0x1e1a8>
  421979:	mov    rsi,QWORD PTR [r14+0x10]
  42197d:	cmp    BYTE PTR [rsi+0x8],0x0
  421981:	je     421970 <strcmp@plt+0x1e1d8>
  421983:	mov    rdi,r13
  421986:	call   4214a0 <strcmp@plt+0x1dd08>
  42198b:	inc    ebx
  42198d:	jmp    421970 <strcmp@plt+0x1e1d8>
  42198f:	mov    rbp,QWORD PTR [rsp]
  421993:	mov    BYTE PTR [rbp+0x4],bl
  421996:	and    BYTE PTR [rbp+0x8],0xf
  42199a:	movzx  eax,WORD PTR [r13+0x24]
  42199f:	cmp    rax,0xffff
  4219a5:	je     421a02 <strcmp@plt+0x1e26a>
  4219a7:	add    rax,QWORD PTR [r13+0x30]
  4219ab:	je     421a02 <strcmp@plt+0x1e26a>
  4219ad:	movzx  ecx,WORD PTR [rax]
  4219b0:	shr    ecx,0x4
  4219b3:	and    ecx,0xf
  4219b6:	dec    ecx
  4219b8:	cmp    ecx,0x5
  4219bb:	ja     421a02 <strcmp@plt+0x1e26a>
  4219bd:	lea    rdx,[rip+0x276d8]        # 44909c <strcmp@plt+0x45904>
  4219c4:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4219c8:	add    rcx,rdx
  4219cb:	jmp    rcx
  4219cd:	inc    BYTE PTR [rax+0x3]
  4219d0:	jmp    421a02 <strcmp@plt+0x1e26a>
  4219d2:	lea    rax,[rip+0x433e7]        # 464dc0 <strcmp@plt+0x61628>
  4219d9:	cmp    DWORD PTR [rax],0x3
  4219dc:	jge    4219e2 <strcmp@plt+0x1e24a>
  4219de:	xor    ebp,ebp
  4219e0:	jmp    421a02 <strcmp@plt+0x1e26a>
  4219e2:	mov    rdi,r15
  4219e5:	call   422e20 <strcmp@plt+0x1f688>
  4219ea:	lea    rsi,[rip+0x277e9]        # 4491da <strcmp@plt+0x45a42>
  4219f1:	xor    ebp,ebp
  4219f3:	mov    edi,0x7
  4219f8:	mov    rdx,rax
  4219fb:	xor    eax,eax
  4219fd:	call   42e520 <strcmp@plt+0x2ad88>
  421a02:	mov    rax,rbp
  421a05:	add    rsp,0x8
  421a09:	pop    rbx
  421a0a:	pop    r12
  421a0c:	pop    r13
  421a0e:	pop    r14
  421a10:	pop    r15
  421a12:	pop    rbp
  421a13:	ret    
  421a14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421a1e:	xchg   ax,ax
  421a20:	push   rbp
  421a21:	push   r15
  421a23:	push   r14
  421a25:	push   r13
  421a27:	push   r12
  421a29:	push   rbx
  421a2a:	push   rax
  421a2b:	mov    ebp,r9d
  421a2e:	mov    ebx,r8d
  421a31:	mov    r13d,ecx
  421a34:	mov    DWORD PTR [rsp+0x4],edx
  421a38:	mov    r15,rsi
  421a3b:	mov    r14,rdi
  421a3e:	mov    esi,0xa
  421a43:	call   42df90 <strcmp@plt+0x2a7f8>
  421a48:	mov    r12,rax
  421a4b:	mov    rdi,rax
  421a4e:	call   42ab10 <strcmp@plt+0x27378>
  421a53:	mov    rdi,r15
  421a56:	call   422d90 <strcmp@plt+0x1f5f8>
  421a5b:	mov    BYTE PTR [r12+0x5],al
  421a60:	mov    BYTE PTR [r12+0x4],0x0
  421a66:	mov    eax,DWORD PTR [rsp+0x4]
  421a6a:	movbe  DWORD PTR [r12],eax
  421a70:	mov    al,BYTE PTR [r12+0x6]
  421a75:	shl    r13b,0x5
  421a79:	and    al,0x7
  421a7b:	shl    bl,0x4
  421a7e:	and    bl,0x10
  421a81:	or     bl,r13b
  421a84:	shl    bpl,0x3
  421a88:	and    bpl,0x8
  421a8c:	or     bpl,bl
  421a8f:	or     bpl,al
  421a92:	mov    BYTE PTR [r12+0x6],bpl
  421a97:	and    BYTE PTR [r12+0x8],0xf
  421a9d:	mov    rdi,r15
  421aa0:	call   422d30 <strcmp@plt+0x1f598>
  421aa5:	mov    rdi,r14
  421aa8:	mov    esi,eax
  421aaa:	call   42df90 <strcmp@plt+0x2a7f8>
  421aaf:	mov    rbx,rax
  421ab2:	mov    rdi,rax
  421ab5:	mov    rsi,r15
  421ab8:	call   423540 <strcmp@plt+0x1fda8>
  421abd:	test   eax,eax
  421abf:	jle    421afe <strcmp@plt+0x1e366>
  421ac1:	test   rbx,rbx
  421ac4:	je     421b0a <strcmp@plt+0x1e372>
  421ac6:	movzx  eax,WORD PTR [r14+0x24]
  421acb:	cmp    rax,0xffff
  421ad1:	je     421b30 <strcmp@plt+0x1e398>
  421ad3:	add    rax,QWORD PTR [r14+0x30]
  421ad7:	je     421b30 <strcmp@plt+0x1e398>
  421ad9:	movzx  ecx,WORD PTR [rax]
  421adc:	shr    ecx,0x4
  421adf:	and    ecx,0xf
  421ae2:	dec    ecx
  421ae4:	cmp    ecx,0x5
  421ae7:	ja     421b30 <strcmp@plt+0x1e398>
  421ae9:	lea    rdx,[rip+0x275c4]        # 4490b4 <strcmp@plt+0x4591c>
  421af0:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  421af4:	add    rcx,rdx
  421af7:	jmp    rcx
  421af9:	inc    BYTE PTR [rax+0x3]
  421afc:	jmp    421b30 <strcmp@plt+0x1e398>
  421afe:	lea    rax,[rip+0x432bb]        # 464dc0 <strcmp@plt+0x61628>
  421b05:	cmp    DWORD PTR [rax],0x3
  421b08:	jge    421b0f <strcmp@plt+0x1e377>
  421b0a:	xor    r12d,r12d
  421b0d:	jmp    421b30 <strcmp@plt+0x1e398>
  421b0f:	mov    rdi,r15
  421b12:	call   422e20 <strcmp@plt+0x1f688>
  421b17:	lea    rsi,[rip+0x276bc]        # 4491da <strcmp@plt+0x45a42>
  421b1e:	xor    r12d,r12d
  421b21:	mov    edi,0x7
  421b26:	mov    rdx,rax
  421b29:	xor    eax,eax
  421b2b:	call   42e520 <strcmp@plt+0x2ad88>
  421b30:	mov    rax,r12
  421b33:	add    rsp,0x8
  421b37:	pop    rbx
  421b38:	pop    r12
  421b3a:	pop    r13
  421b3c:	pop    r14
  421b3e:	pop    r15
  421b40:	pop    rbp
  421b41:	ret    
  421b42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421b4c:	nop    DWORD PTR [rax+0x0]
  421b50:	push   rbp
  421b51:	push   r15
  421b53:	push   r14
  421b55:	push   r13
  421b57:	push   r12
  421b59:	push   rbx
  421b5a:	push   rax
  421b5b:	mov    eax,DWORD PTR [rsi+0x18]
  421b5e:	test   eax,eax
  421b60:	je     421bfc <strcmp@plt+0x1e464>
  421b66:	mov    r12,rsi
  421b69:	mov    r15,rdi
  421b6c:	mov    r14,QWORD PTR [rdi+0x38]
  421b70:	mov    rbp,QWORD PTR [rsi+0x8]
  421b74:	cmp    rbp,rsi
  421b77:	je     421bbb <strcmp@plt+0x1e423>
  421b79:	nop    DWORD PTR [rax+0x0]
  421b80:	mov    r13,QWORD PTR [rbp+0x10]
  421b84:	mov    rdi,r13
  421b87:	call   422d30 <strcmp@plt+0x1f598>
  421b8c:	mov    rdi,r15
  421b8f:	mov    esi,eax
  421b91:	call   42df90 <strcmp@plt+0x2a7f8>
  421b96:	mov    rbx,rax
  421b99:	mov    rdi,rax
  421b9c:	mov    rsi,r13
  421b9f:	call   423540 <strcmp@plt+0x1fda8>
  421ba4:	test   eax,eax
  421ba6:	jle    421bf0 <strcmp@plt+0x1e458>
  421ba8:	test   rbx,rbx
  421bab:	je     421bfc <strcmp@plt+0x1e464>
  421bad:	mov    rbp,QWORD PTR [rbp+0x8]
  421bb1:	cmp    rbp,r12
  421bb4:	jne    421b80 <strcmp@plt+0x1e3e8>
  421bb6:	mov    eax,DWORD PTR [r12+0x18]
  421bbb:	movzx  ecx,WORD PTR [r15+0x24]
  421bc0:	mov    rdx,QWORD PTR [r15+0x30]
  421bc4:	dec    al
  421bc6:	movzx  esi,WORD PTR [rdx+rcx*1]
  421bca:	movzx  edi,BYTE PTR [rdx+rcx*1+0x2]
  421bcf:	shl    edi,0x10
  421bd2:	and    al,0x1f
  421bd4:	movzx  eax,al
  421bd7:	shl    eax,0x10
  421bda:	and    edi,0xe00000
  421be0:	or     edi,eax
  421be2:	mov    WORD PTR [rdx+rcx*1],si
  421be6:	shr    edi,0x10
  421be9:	mov    BYTE PTR [rdx+rcx*1+0x2],dil
  421bee:	jmp    421bff <strcmp@plt+0x1e467>
  421bf0:	lea    rax,[rip+0x431c9]        # 464dc0 <strcmp@plt+0x61628>
  421bf7:	cmp    DWORD PTR [rax],0x3
  421bfa:	jge    421c11 <strcmp@plt+0x1e479>
  421bfc:	xor    r14d,r14d
  421bff:	mov    rax,r14
  421c02:	add    rsp,0x8
  421c06:	pop    rbx
  421c07:	pop    r12
  421c09:	pop    r13
  421c0b:	pop    r14
  421c0d:	pop    r15
  421c0f:	pop    rbp
  421c10:	ret    
  421c11:	mov    rdi,r13
  421c14:	call   422e20 <strcmp@plt+0x1f688>
  421c19:	lea    rsi,[rip+0x275ba]        # 4491da <strcmp@plt+0x45a42>
  421c20:	xor    r14d,r14d
  421c23:	mov    edi,0x7
  421c28:	mov    rdx,rax
  421c2b:	xor    eax,eax
  421c2d:	call   42e520 <strcmp@plt+0x2ad88>
  421c32:	jmp    421bff <strcmp@plt+0x1e467>
  421c34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c3e:	xchg   ax,ax
  421c40:	push   r15
  421c42:	push   r14
  421c44:	push   rbx
  421c45:	mov    rbx,rsi
  421c48:	mov    r15,rdi
  421c4b:	mov    esi,0x2
  421c50:	call   42df90 <strcmp@plt+0x2a7f8>
  421c55:	mov    r14,rax
  421c58:	mov    rdi,rax
  421c5b:	call   42b100 <strcmp@plt+0x27968>
  421c60:	mov    rdi,rbx
  421c63:	call   422d90 <strcmp@plt+0x1f5f8>
  421c68:	mov    BYTE PTR [r14+0x1],al
  421c6c:	mov    rdi,rbx
  421c6f:	call   422d30 <strcmp@plt+0x1f598>
  421c74:	mov    rdi,r15
  421c77:	mov    esi,eax
  421c79:	call   42df90 <strcmp@plt+0x2a7f8>
  421c7e:	mov    rdi,rax
  421c81:	mov    rsi,rbx
  421c84:	call   423540 <strcmp@plt+0x1fda8>
  421c89:	test   eax,eax
  421c8b:	jg     421cb7 <strcmp@plt+0x1e51f>
  421c8d:	lea    rax,[rip+0x4312c]        # 464dc0 <strcmp@plt+0x61628>
  421c94:	cmp    DWORD PTR [rax],0x3
  421c97:	jl     421cb7 <strcmp@plt+0x1e51f>
  421c99:	mov    rdi,rbx
  421c9c:	call   422e20 <strcmp@plt+0x1f688>
  421ca1:	lea    rsi,[rip+0x27532]        # 4491da <strcmp@plt+0x45a42>
  421ca8:	mov    edi,0x7
  421cad:	mov    rdx,rax
  421cb0:	xor    eax,eax
  421cb2:	call   42e520 <strcmp@plt+0x2ad88>
  421cb7:	movzx  eax,WORD PTR [r15+0x24]
  421cbc:	cmp    rax,0xffff
  421cc2:	je     421ced <strcmp@plt+0x1e555>
  421cc4:	add    rax,QWORD PTR [r15+0x30]
  421cc8:	je     421ced <strcmp@plt+0x1e555>
  421cca:	movzx  ecx,WORD PTR [rax]
  421ccd:	shr    ecx,0x4
  421cd0:	and    ecx,0xf
  421cd3:	dec    ecx
  421cd5:	cmp    ecx,0x5
  421cd8:	ja     421ced <strcmp@plt+0x1e555>
  421cda:	lea    rdx,[rip+0x273eb]        # 4490cc <strcmp@plt+0x45934>
  421ce1:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  421ce5:	add    rcx,rdx
  421ce8:	jmp    rcx
  421cea:	inc    BYTE PTR [rax+0x3]
  421ced:	mov    rax,r14
  421cf0:	pop    rbx
  421cf1:	pop    r14
  421cf3:	pop    r15
  421cf5:	ret    
  421cf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421d00:	push   r15
  421d02:	push   r14
  421d04:	push   rbx
  421d05:	mov    r14,rdx
  421d08:	mov    rbx,rdi
  421d0b:	mov    edx,0x10
  421d10:	call   42dfe0 <strcmp@plt+0x2a848>
  421d15:	mov    r15,rax
  421d18:	mov    rdi,rbx
  421d1b:	mov    rsi,r14
  421d1e:	mov    edx,0x8
  421d23:	call   42dfe0 <strcmp@plt+0x2a848>
  421d28:	mov    rax,r15
  421d2b:	pop    rbx
  421d2c:	pop    r14
  421d2e:	pop    r15
  421d30:	ret    
  421d31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421d3b:	nop    DWORD PTR [rax+rax*1+0x0]
  421d40:	push   rbp
  421d41:	push   r15
  421d43:	push   r14
  421d45:	push   r13
  421d47:	push   r12
  421d49:	push   rbx
  421d4a:	push   rax
  421d4b:	mov    r14,r8
  421d4e:	mov    r15,rcx
  421d51:	mov    r12d,edx
  421d54:	mov    r13d,esi
  421d57:	mov    rbx,rdi
  421d5a:	mov    eax,DWORD PTR [rdi+0x38]
  421d5d:	sub    eax,DWORD PTR [rdi+0x30]
  421d60:	mov    WORD PTR [rdi+0x24],ax
  421d64:	mov    rdi,rcx
  421d67:	call   422fd0 <strcmp@plt+0x1f838>
  421d6c:	mov    rbp,rax
  421d6f:	test   rax,rax
  421d72:	jne    421d7f <strcmp@plt+0x1e5e7>
  421d74:	mov    rdi,r15
  421d77:	call   422dd0 <strcmp@plt+0x1f638>
  421d7c:	mov    rbp,rax
  421d7f:	mov    rdi,r14
  421d82:	call   422fd0 <strcmp@plt+0x1f838>
  421d87:	test   rax,rax
  421d8a:	jne    421d94 <strcmp@plt+0x1e5fc>
  421d8c:	mov    rdi,r14
  421d8f:	call   422dd0 <strcmp@plt+0x1f638>
  421d94:	movzx  esi,r13w
  421d98:	movzx  edx,r12w
  421d9c:	mov    rdi,rbx
  421d9f:	mov    rcx,rbp
  421da2:	mov    r8,rax
  421da5:	call   432eb0 <strcmp@plt+0x2f718>
  421daa:	mov    rdi,rbx
  421dad:	mov    esi,0x4
  421db2:	call   42e040 <strcmp@plt+0x2a8a8>
  421db7:	mov    rdi,rax
  421dba:	call   42a230 <strcmp@plt+0x26a98>
  421dbf:	mov    rdi,QWORD PTR [rbx+0x30]
  421dc3:	mov    rax,QWORD PTR [rbx+0x38]
  421dc7:	mov    rcx,rax
  421dca:	sub    rcx,rdi
  421dcd:	mov    WORD PTR [rbx+0x1e],cx
  421dd1:	lea    rdx,[rip+0x42fe8]        # 464dc0 <strcmp@plt+0x61628>
  421dd8:	cmp    DWORD PTR [rdx],0x0
  421ddb:	jle    421e38 <strcmp@plt+0x1e6a0>
  421ddd:	cmp    cx,0xffff
  421de1:	je     421df5 <strcmp@plt+0x1e65d>
  421de3:	movzx  eax,cx
  421de6:	add    rdi,rax
  421de9:	je     421df5 <strcmp@plt+0x1e65d>
  421deb:	call   42a900 <strcmp@plt+0x27168>
  421df0:	mov    r12,rax
  421df3:	jmp    421df8 <strcmp@plt+0x1e660>
  421df5:	xor    r12d,r12d
  421df8:	mov    rdi,r15
  421dfb:	call   422e20 <strcmp@plt+0x1f688>
  421e00:	mov    rbp,rax
  421e03:	mov    rdi,r14
  421e06:	call   422e20 <strcmp@plt+0x1f688>
  421e0b:	mov    DWORD PTR [rsp],0x10f6
  421e12:	lea    rsi,[rip+0x273ef]        # 449208 <strcmp@plt+0x45a70>
  421e19:	mov    edi,0x5
  421e1e:	mov    rdx,r12
  421e21:	mov    rcx,rbp
  421e24:	mov    r8,rax
  421e27:	mov    r9d,0x10f6
  421e2d:	xor    eax,eax
  421e2f:	call   42e520 <strcmp@plt+0x2ad88>
  421e34:	mov    rax,QWORD PTR [rbx+0x38]
  421e38:	add    rsp,0x8
  421e3c:	pop    rbx
  421e3d:	pop    r12
  421e3f:	pop    r13
  421e41:	pop    r14
  421e43:	pop    r15
  421e45:	pop    rbp
  421e46:	ret    
  421e47:	nop    WORD PTR [rax+rax*1+0x0]
  421e50:	push   rbx
  421e51:	mov    rbx,rdi
  421e54:	mov    esi,0x4
  421e59:	call   42e040 <strcmp@plt+0x2a8a8>
  421e5e:	mov    rdi,rax
  421e61:	call   42a230 <strcmp@plt+0x26a98>
  421e66:	mov    rax,QWORD PTR [rbx+0x38]
  421e6a:	mov    ecx,DWORD PTR [rbx+0x30]
  421e6d:	mov    edx,eax
  421e6f:	sub    edx,ecx
  421e71:	mov    WORD PTR [rbx+0x1e],dx
  421e75:	pop    rbx
  421e76:	ret    
  421e77:	nop    WORD PTR [rax+rax*1+0x0]
  421e80:	mov    rax,rdi
  421e83:	movzx  edi,WORD PTR [rdi+0x1e]
  421e87:	cmp    rdi,0xffff
  421e8e:	je     421e9b <strcmp@plt+0x1e703>
  421e90:	add    rdi,QWORD PTR [rax+0x30]
  421e94:	je     421e9b <strcmp@plt+0x1e703>
  421e96:	jmp    42a900 <strcmp@plt+0x27168>
  421e9b:	xor    eax,eax
  421e9d:	ret    
  421e9e:	xchg   ax,ax
  421ea0:	push   rax
  421ea1:	mov    edi,0x1000
  421ea6:	mov    esi,0x64
  421eab:	call   42dd70 <strcmp@plt+0x2a5d8>
  421eb0:	mov    ecx,DWORD PTR [rax+0x38]
  421eb3:	sub    ecx,DWORD PTR [rax+0x30]
  421eb6:	mov    WORD PTR [rax+0x24],cx
  421eba:	pop    rcx
  421ebb:	ret    
  421ebc:	nop    DWORD PTR [rax+0x0]
  421ec0:	push   r14
  421ec2:	push   rbx
  421ec3:	push   rax
  421ec4:	mov    r14d,edi
  421ec7:	mov    edi,0x1000
  421ecc:	mov    esi,0x64
  421ed1:	call   42dd70 <strcmp@plt+0x2a5d8>
  421ed6:	mov    rbx,rax
  421ed9:	mov    eax,DWORD PTR [rax+0x38]
  421edc:	sub    eax,DWORD PTR [rbx+0x30]
  421edf:	mov    WORD PTR [rbx+0x24],ax
  421ee3:	lea    eax,[r14-0x1]
  421ee7:	cmp    eax,0x7
  421eea:	ja     421f16 <strcmp@plt+0x1e77e>
  421eec:	lea    rcx,[rip+0x271f1]        # 4490e4 <strcmp@plt+0x4594c>
  421ef3:	movsxd rax,DWORD PTR [rcx+rax*4]
  421ef7:	add    rax,rcx
  421efa:	jmp    rax
  421efc:	mov    rdi,rbx
  421eff:	mov    esi,0xc
  421f04:	call   42df90 <strcmp@plt+0x2a7f8>
  421f09:	mov    rdi,rax
  421f0c:	call   42a1d0 <strcmp@plt+0x26a38>
  421f11:	jmp    421faf <strcmp@plt+0x1e817>
  421f16:	lea    rax,[rip+0x42ea3]        # 464dc0 <strcmp@plt+0x61628>
  421f1d:	cmp    DWORD PTR [rax],0x3
  421f20:	jl     421faf <strcmp@plt+0x1e817>
  421f26:	lea    rsi,[rip+0x27307]        # 449234 <strcmp@plt+0x45a9c>
  421f2d:	mov    edi,0x7
  421f32:	mov    edx,r14d
  421f35:	xor    eax,eax
  421f37:	call   42e520 <strcmp@plt+0x2ad88>
  421f3c:	jmp    421faf <strcmp@plt+0x1e817>
  421f3e:	mov    rdi,rbx
  421f41:	mov    esi,0xc
  421f46:	call   42df90 <strcmp@plt+0x2a7f8>
  421f4b:	mov    rdi,rax
  421f4e:	call   42a1e0 <strcmp@plt+0x26a48>
  421f53:	jmp    421faf <strcmp@plt+0x1e817>
  421f55:	mov    rdi,rbx
  421f58:	mov    esi,0xc
  421f5d:	call   42df90 <strcmp@plt+0x2a7f8>
  421f62:	mov    rdi,rax
  421f65:	call   42a1f0 <strcmp@plt+0x26a58>
  421f6a:	jmp    421faf <strcmp@plt+0x1e817>
  421f6c:	mov    rdi,rbx
  421f6f:	mov    esi,0xc
  421f74:	call   42df90 <strcmp@plt+0x2a7f8>
  421f79:	mov    rdi,rax
  421f7c:	call   42a210 <strcmp@plt+0x26a78>
  421f81:	jmp    421faf <strcmp@plt+0x1e817>
  421f83:	mov    rdi,rbx
  421f86:	mov    esi,0xc
  421f8b:	call   42df90 <strcmp@plt+0x2a7f8>
  421f90:	mov    rdi,rax
  421f93:	call   42a260 <strcmp@plt+0x26ac8>
  421f98:	jmp    421faf <strcmp@plt+0x1e817>
  421f9a:	mov    rdi,rbx
  421f9d:	mov    esi,0xc
  421fa2:	call   42df90 <strcmp@plt+0x2a7f8>
  421fa7:	mov    rdi,rax
  421faa:	call   42a240 <strcmp@plt+0x26aa8>
  421faf:	mov    rax,rbx
  421fb2:	add    rsp,0x8
  421fb6:	pop    rbx
  421fb7:	pop    r14
  421fb9:	ret    
  421fba:	nop    WORD PTR [rax+rax*1+0x0]
  421fc0:	push   r15
  421fc2:	push   r14
  421fc4:	push   r13
  421fc6:	push   r12
  421fc8:	push   rbx
  421fc9:	mov    r14,rdx
  421fcc:	mov    r15,rsi
  421fcf:	mov    r12,rdi
  421fd2:	mov    edi,0x1000
  421fd7:	mov    esi,0x64
  421fdc:	call   42dd70 <strcmp@plt+0x2a5d8>
  421fe1:	mov    rbx,rax
  421fe4:	mov    eax,DWORD PTR [rax+0x38]
  421fe7:	sub    eax,DWORD PTR [rbx+0x30]
  421fea:	mov    WORD PTR [rbx+0x24],ax
  421fee:	mov    rdi,rbx
  421ff1:	mov    esi,0xc
  421ff6:	call   42df90 <strcmp@plt+0x2a7f8>
  421ffb:	mov    rdi,rax
  421ffe:	call   42a1d0 <strcmp@plt+0x26a38>
  422003:	mov    rdi,r12
  422006:	call   422d30 <strcmp@plt+0x1f598>
  42200b:	mov    rdi,rbx
  42200e:	mov    esi,eax
  422010:	call   42df90 <strcmp@plt+0x2a7f8>
  422015:	mov    r13,rax
  422018:	mov    rdi,rax
  42201b:	mov    rsi,r12
  42201e:	call   423540 <strcmp@plt+0x1fda8>
  422023:	test   eax,eax
  422025:	jle    42204e <strcmp@plt+0x1e8b6>
  422027:	test   r13,r13
  42202a:	je     422078 <strcmp@plt+0x1e8e0>
  42202c:	mov    rdi,rbx
  42202f:	mov    rsi,r15
  422032:	call   421b50 <strcmp@plt+0x1e3b8>
  422037:	test   rax,rax
  42203a:	je     422078 <strcmp@plt+0x1e8e0>
  42203c:	mov    rdi,rbx
  42203f:	mov    rsi,r14
  422042:	call   421c40 <strcmp@plt+0x1e4a8>
  422047:	test   rax,rax
  42204a:	jne    422082 <strcmp@plt+0x1e8ea>
  42204c:	jmp    422078 <strcmp@plt+0x1e8e0>
  42204e:	lea    rax,[rip+0x42d6b]        # 464dc0 <strcmp@plt+0x61628>
  422055:	cmp    DWORD PTR [rax],0x3
  422058:	jl     422078 <strcmp@plt+0x1e8e0>
  42205a:	mov    rdi,r12
  42205d:	call   422e20 <strcmp@plt+0x1f688>
  422062:	lea    rsi,[rip+0x27171]        # 4491da <strcmp@plt+0x45a42>
  422069:	mov    edi,0x7
  42206e:	mov    rdx,rax
  422071:	xor    eax,eax
  422073:	call   42e520 <strcmp@plt+0x2ad88>
  422078:	mov    rdi,rbx
  42207b:	call   42dd40 <strcmp@plt+0x2a5a8>
  422080:	xor    ebx,ebx
  422082:	mov    rax,rbx
  422085:	pop    rbx
  422086:	pop    r12
  422088:	pop    r13
  42208a:	pop    r14
  42208c:	pop    r15
  42208e:	ret    
  42208f:	nop
  422090:	push   rbp
  422091:	push   r15
  422093:	push   r14
  422095:	push   r13
  422097:	push   r12
  422099:	push   rbx
  42209a:	push   rax
  42209b:	mov    r14,r8
  42209e:	mov    r15d,ecx
  4220a1:	mov    r12d,edx
  4220a4:	mov    r13d,esi
  4220a7:	mov    rbx,rdi
  4220aa:	mov    edi,0x1000
  4220af:	mov    esi,0x64
  4220b4:	call   42dd70 <strcmp@plt+0x2a5d8>
  4220b9:	mov    rbp,rax
  4220bc:	mov    eax,DWORD PTR [rax+0x38]
  4220bf:	sub    eax,DWORD PTR [rbp+0x30]
  4220c2:	mov    WORD PTR [rbp+0x24],ax
  4220c6:	mov    rdi,rbp
  4220c9:	mov    esi,0xc
  4220ce:	call   42df90 <strcmp@plt+0x2a7f8>
  4220d3:	mov    rdi,rax
  4220d6:	call   42a1e0 <strcmp@plt+0x26a48>
  4220db:	mov    rdi,rbp
  4220de:	mov    rsi,rbx
  4220e1:	mov    edx,r13d
  4220e4:	mov    ecx,r12d
  4220e7:	mov    r8d,r15d
  4220ea:	call   421750 <strcmp@plt+0x1dfb8>
  4220ef:	movzx  eax,WORD PTR [rbp+0x24]
  4220f3:	mov    rcx,QWORD PTR [rbp+0x30]
  4220f7:	mov    QWORD PTR [rcx+rax*1+0x4],r14
  4220fc:	mov    rax,rbp
  4220ff:	add    rsp,0x8
  422103:	pop    rbx
  422104:	pop    r12
  422106:	pop    r13
  422108:	pop    r14
  42210a:	pop    r15
  42210c:	pop    rbp
  42210d:	ret    
  42210e:	xchg   ax,ax
  422110:	push   rbp
  422111:	push   r15
  422113:	push   r14
  422115:	push   r13
  422117:	push   r12
  422119:	push   rbx
  42211a:	push   rax
  42211b:	mov    QWORD PTR [rsp],r9
  42211f:	mov    r15d,r8d
  422122:	mov    r12d,ecx
  422125:	mov    r13d,edx
  422128:	mov    ebx,esi
  42212a:	mov    rbp,rdi
  42212d:	mov    edi,0x1000
  422132:	mov    esi,0x64
  422137:	call   42dd70 <strcmp@plt+0x2a5d8>
  42213c:	mov    r14,rax
  42213f:	mov    eax,DWORD PTR [rax+0x38]
  422142:	sub    eax,DWORD PTR [r14+0x30]
  422146:	mov    WORD PTR [r14+0x24],ax
  42214b:	mov    rdi,r14
  42214e:	mov    esi,0xc
  422153:	call   42df90 <strcmp@plt+0x2a7f8>
  422158:	mov    rdi,rax
  42215b:	call   42a260 <strcmp@plt+0x26ac8>
  422160:	mov    rdi,r14
  422163:	mov    rsi,rbp
  422166:	mov    edx,ebx
  422168:	mov    ecx,r13d
  42216b:	mov    r8d,r12d
  42216e:	mov    r9d,r15d
  422171:	call   421a20 <strcmp@plt+0x1e288>
  422176:	movzx  eax,WORD PTR [r14+0x24]
  42217b:	mov    rcx,QWORD PTR [r14+0x30]
  42217f:	mov    rdx,QWORD PTR [rsp]
  422183:	mov    QWORD PTR [rcx+rax*1+0x4],rdx
  422188:	mov    rax,r14
  42218b:	add    rsp,0x8
  42218f:	pop    rbx
  422190:	pop    r12
  422192:	pop    r13
  422194:	pop    r14
  422196:	pop    r15
  422198:	pop    rbp
  422199:	ret    
  42219a:	nop    WORD PTR [rax+rax*1+0x0]
  4221a0:	push   rbp
  4221a1:	push   r15
  4221a3:	push   r14
  4221a5:	push   r12
  4221a7:	push   rbx
  4221a8:	sub    rsp,0x20
  4221ac:	mov    r15d,esi
  4221af:	mov    r14,rdi
  4221b2:	mov    edi,0x1000
  4221b7:	mov    esi,0x64
  4221bc:	call   42dd70 <strcmp@plt+0x2a5d8>
  4221c1:	mov    r12,rax
  4221c4:	mov    eax,DWORD PTR [rax+0x38]
  4221c7:	sub    eax,DWORD PTR [r12+0x30]
  4221cc:	mov    WORD PTR [r12+0x24],ax
  4221d2:	mov    rdi,r12
  4221d5:	mov    esi,0xc
  4221da:	call   42df90 <strcmp@plt+0x2a7f8>
  4221df:	mov    rdi,rax
  4221e2:	call   42a240 <strcmp@plt+0x26aa8>
  4221e7:	mov    edi,r15d
  4221ea:	call   42b0f0 <strcmp@plt+0x27958>
  4221ef:	movzx  ebp,ax
  4221f2:	lea    esi,[rbp+0x4]
  4221f5:	mov    rdi,r12
  4221f8:	call   42df90 <strcmp@plt+0x2a7f8>
  4221fd:	mov    rbx,rax
  422200:	movbe  WORD PTR [rax],r15w
  422206:	movbe  WORD PTR [rax+0x2],bp
  42220c:	lea    rdi,[rax+0x4]
  422210:	xor    esi,esi
  422212:	mov    rdx,rbp
  422215:	call   403260 <memset@plt>
  42221a:	test   rbx,rbx
  42221d:	je     422293 <strcmp@plt+0x1eafb>
  42221f:	mov    rdi,r12
  422222:	mov    rsi,r14
  422225:	xor    edx,edx
  422227:	call   422300 <strcmp@plt+0x1eb68>
  42222c:	test   rax,rax
  42222f:	je     422293 <strcmp@plt+0x1eafb>
  422231:	mov    rbx,rsp
  422234:	mov    rdi,rbx
  422237:	xor    esi,esi
  422239:	call   422e90 <strcmp@plt+0x1f6f8>
  42223e:	mov    rdi,rbx
  422241:	call   422d30 <strcmp@plt+0x1f598>
  422246:	mov    rdi,r12
  422249:	mov    esi,eax
  42224b:	call   42df90 <strcmp@plt+0x2a7f8>
  422250:	mov    rbp,rax
  422253:	mov    rdi,rax
  422256:	mov    rsi,rbx
  422259:	call   423540 <strcmp@plt+0x1fda8>
  42225e:	test   eax,eax
  422260:	jle    422269 <strcmp@plt+0x1ead1>
  422262:	test   rbp,rbp
  422265:	jne    42229e <strcmp@plt+0x1eb06>
  422267:	jmp    422293 <strcmp@plt+0x1eafb>
  422269:	lea    rax,[rip+0x42b50]        # 464dc0 <strcmp@plt+0x61628>
  422270:	cmp    DWORD PTR [rax],0x3
  422273:	jl     422293 <strcmp@plt+0x1eafb>
  422275:	mov    rdi,rsp
  422278:	call   422e20 <strcmp@plt+0x1f688>
  42227d:	lea    rsi,[rip+0x26f56]        # 4491da <strcmp@plt+0x45a42>
  422284:	mov    edi,0x7
  422289:	mov    rdx,rax
  42228c:	xor    eax,eax
  42228e:	call   42e520 <strcmp@plt+0x2ad88>
  422293:	mov    rdi,r12
  422296:	call   42dd40 <strcmp@plt+0x2a5a8>
  42229b:	xor    r12d,r12d
  42229e:	mov    rax,r12
  4222a1:	add    rsp,0x20
  4222a5:	pop    rbx
  4222a6:	pop    r12
  4222a8:	pop    r14
  4222aa:	pop    r15
  4222ac:	pop    rbp
  4222ad:	ret    
  4222ae:	xchg   ax,ax
  4222b0:	push   rbp
  4222b1:	push   r15
  4222b3:	push   r14
  4222b5:	push   rbx
  4222b6:	push   rax
  4222b7:	mov    r15d,esi
  4222ba:	mov    r14,rdi
  4222bd:	mov    edi,esi
  4222bf:	call   42b0f0 <strcmp@plt+0x27958>
  4222c4:	movzx  ebx,ax
  4222c7:	lea    esi,[rbx+0x4]
  4222ca:	mov    rdi,r14
  4222cd:	call   42df90 <strcmp@plt+0x2a7f8>
  4222d2:	mov    rbp,rax
  4222d5:	movbe  WORD PTR [rax],r15w
  4222db:	movbe  WORD PTR [rax+0x2],bx
  4222e1:	lea    rdi,[rax+0x4]
  4222e5:	xor    esi,esi
  4222e7:	mov    rdx,rbx
  4222ea:	call   403260 <memset@plt>
  4222ef:	mov    rax,rbp
  4222f2:	add    rsp,0x8
  4222f6:	pop    rbx
  4222f7:	pop    r14
  4222f9:	pop    r15
  4222fb:	pop    rbp
  4222fc:	ret    
  4222fd:	nop    DWORD PTR [rax]
  422300:	push   rbp
  422301:	push   r15
  422303:	push   r14
  422305:	push   rbx
  422306:	push   rax
  422307:	mov    ebp,edx
  422309:	mov    r14,rsi
  42230c:	mov    rbx,rdi
  42230f:	mov    esi,0x6
  422314:	call   42df90 <strcmp@plt+0x2a7f8>
  422319:	mov    r15,rax
  42231c:	movbe  DWORD PTR [rax],ebp
  422320:	mov    rdi,r14
  422323:	call   422dd0 <strcmp@plt+0x1f638>
  422328:	mov    rdi,rax
  42232b:	call   4230b0 <strcmp@plt+0x1f918>
  422330:	mov    BYTE PTR [r15+0x5],al
  422334:	mov    rdi,r14
  422337:	call   422d30 <strcmp@plt+0x1f598>
  42233c:	mov    rdi,rbx
  42233f:	mov    esi,eax
  422341:	call   42df90 <strcmp@plt+0x2a7f8>
  422346:	mov    rbx,rax
  422349:	mov    rdi,rax
  42234c:	mov    rsi,r14
  42234f:	call   423540 <strcmp@plt+0x1fda8>
  422354:	test   eax,eax
  422356:	jg     422388 <strcmp@plt+0x1ebf0>
  422358:	lea    rax,[rip+0x42a61]        # 464dc0 <strcmp@plt+0x61628>
  42235f:	cmp    DWORD PTR [rax],0x3
  422362:	jge    422368 <strcmp@plt+0x1ebd0>
  422364:	xor    ebx,ebx
  422366:	jmp    422388 <strcmp@plt+0x1ebf0>
  422368:	mov    rdi,r14
  42236b:	call   422e20 <strcmp@plt+0x1f688>
  422370:	lea    rsi,[rip+0x26e63]        # 4491da <strcmp@plt+0x45a42>
  422377:	xor    ebx,ebx
  422379:	mov    edi,0x7
  42237e:	mov    rdx,rax
  422381:	xor    eax,eax
  422383:	call   42e520 <strcmp@plt+0x2ad88>
  422388:	test   rbx,rbx
  42238b:	cmove  r15,rbx
  42238f:	mov    rax,r15
  422392:	add    rsp,0x8
  422396:	pop    rbx
  422397:	pop    r14
  422399:	pop    r15
  42239b:	pop    rbp
  42239c:	ret    
  42239d:	nop    DWORD PTR [rax]
  4223a0:	push   rbp
  4223a1:	push   r15
  4223a3:	push   r14
  4223a5:	push   r13
  4223a7:	push   r12
  4223a9:	push   rbx
  4223aa:	push   rax
  4223ab:	mov    r15d,ecx
  4223ae:	mov    r13d,edx
  4223b1:	mov    QWORD PTR [rsp],rsi
  4223b5:	mov    r12,rdi
  4223b8:	mov    edi,0x1000
  4223bd:	mov    esi,0x64
  4223c2:	call   42dd70 <strcmp@plt+0x2a5d8>
  4223c7:	mov    rbx,rax
  4223ca:	mov    eax,DWORD PTR [rax+0x38]
  4223cd:	sub    eax,DWORD PTR [rbx+0x30]
  4223d0:	mov    WORD PTR [rbx+0x24],ax
  4223d4:	mov    rdi,rbx
  4223d7:	mov    esi,0xc
  4223dc:	call   42df90 <strcmp@plt+0x2a7f8>
  4223e1:	mov    rdi,rax
  4223e4:	call   42a240 <strcmp@plt+0x26aa8>
  4223e9:	mov    edi,r13d
  4223ec:	call   42b0f0 <strcmp@plt+0x27958>
  4223f1:	movzx  ebp,ax
  4223f4:	lea    esi,[rbp+0x4]
  4223f7:	mov    rdi,rbx
  4223fa:	call   42df90 <strcmp@plt+0x2a7f8>
  4223ff:	mov    r14,rax
  422402:	movbe  WORD PTR [rax],r13w
  422408:	movbe  WORD PTR [rax+0x2],bp
  42240e:	lea    rdi,[rax+0x4]
  422412:	xor    esi,esi
  422414:	mov    rdx,rbp
  422417:	call   403260 <memset@plt>
  42241c:	test   r14,r14
  42241f:	je     42249a <strcmp@plt+0x1ed02>
  422421:	movzx  edx,r15b
  422425:	mov    rdi,rbx
  422428:	mov    rsi,r12
  42242b:	call   422300 <strcmp@plt+0x1eb68>
  422430:	test   rax,rax
  422433:	je     42249a <strcmp@plt+0x1ed02>
  422435:	mov    r14,QWORD PTR [rsp]
  422439:	mov    rdi,r14
  42243c:	call   422d30 <strcmp@plt+0x1f598>
  422441:	mov    rdi,rbx
  422444:	mov    esi,eax
  422446:	call   42df90 <strcmp@plt+0x2a7f8>
  42244b:	mov    rbp,rax
  42244e:	mov    rdi,rax
  422451:	mov    rsi,r14
  422454:	call   423540 <strcmp@plt+0x1fda8>
  422459:	test   eax,eax
  42245b:	jle    422470 <strcmp@plt+0x1ecd8>
  42245d:	test   rbp,rbp
  422460:	je     42249a <strcmp@plt+0x1ed02>
  422462:	movzx  eax,WORD PTR [rbx+0x24]
  422466:	mov    rcx,QWORD PTR [rbx+0x30]
  42246a:	or     BYTE PTR [rcx+rax*1],0x8
  42246e:	jmp    4224a4 <strcmp@plt+0x1ed0c>
  422470:	lea    rax,[rip+0x42949]        # 464dc0 <strcmp@plt+0x61628>
  422477:	cmp    DWORD PTR [rax],0x3
  42247a:	jl     42249a <strcmp@plt+0x1ed02>
  42247c:	mov    rdi,r14
  42247f:	call   422e20 <strcmp@plt+0x1f688>
  422484:	lea    rsi,[rip+0x26d4f]        # 4491da <strcmp@plt+0x45a42>
  42248b:	mov    edi,0x7
  422490:	mov    rdx,rax
  422493:	xor    eax,eax
  422495:	call   42e520 <strcmp@plt+0x2ad88>
  42249a:	mov    rdi,rbx
  42249d:	call   42dd40 <strcmp@plt+0x2a5a8>
  4224a2:	xor    ebx,ebx
  4224a4:	mov    rax,rbx
  4224a7:	add    rsp,0x8
  4224ab:	pop    rbx
  4224ac:	pop    r12
  4224ae:	pop    r13
  4224b0:	pop    r14
  4224b2:	pop    r15
  4224b4:	pop    rbp
  4224b5:	ret    
  4224b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4224c0:	push   rbp
  4224c1:	push   r15
  4224c3:	push   r14
  4224c5:	push   r12
  4224c7:	push   rbx
  4224c8:	mov    r15d,esi
  4224cb:	mov    r14,rdi
  4224ce:	mov    edi,0x1000
  4224d3:	mov    esi,0x64
  4224d8:	call   42dd70 <strcmp@plt+0x2a5d8>
  4224dd:	mov    rbx,rax
  4224e0:	mov    eax,DWORD PTR [rax+0x38]
  4224e3:	sub    eax,DWORD PTR [rbx+0x30]
  4224e6:	mov    WORD PTR [rbx+0x24],ax
  4224ea:	mov    rdi,rbx
  4224ed:	mov    esi,0xc
  4224f2:	call   42df90 <strcmp@plt+0x2a7f8>
  4224f7:	mov    rdi,rax
  4224fa:	call   42a1f0 <strcmp@plt+0x26a58>
  4224ff:	mov    edi,r15d
  422502:	call   42b0f0 <strcmp@plt+0x27958>
  422507:	movzx  r12d,ax
  42250b:	lea    esi,[r12+0x4]
  422510:	mov    rdi,rbx
  422513:	call   42df90 <strcmp@plt+0x2a7f8>
  422518:	mov    rbp,rax
  42251b:	movbe  WORD PTR [rax],r15w
  422521:	movbe  WORD PTR [rax+0x2],r12w
  422528:	lea    rdi,[rax+0x4]
  42252c:	xor    esi,esi
  42252e:	mov    rdx,r12
  422531:	call   403260 <memset@plt>
  422536:	test   rbp,rbp
  422539:	je     42254d <strcmp@plt+0x1edb5>
  42253b:	mov    rdi,rbx
  42253e:	mov    rsi,r14
  422541:	xor    edx,edx
  422543:	call   421570 <strcmp@plt+0x1ddd8>
  422548:	test   rax,rax
  42254b:	jne    422557 <strcmp@plt+0x1edbf>
  42254d:	mov    rdi,rbx
  422550:	call   42dd40 <strcmp@plt+0x2a5a8>
  422555:	xor    ebx,ebx
  422557:	mov    rax,rbx
  42255a:	pop    rbx
  42255b:	pop    r12
  42255d:	pop    r14
  42255f:	pop    r15
  422561:	pop    rbp
  422562:	ret    
  422563:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42256d:	nop    DWORD PTR [rax]
  422570:	push   rax
  422571:	mov    rax,rdi
  422574:	movzx  edi,WORD PTR [rdi+0x24]
  422578:	cmp    rdi,0xffff
  42257f:	je     4225d5 <strcmp@plt+0x1ee3d>
  422581:	add    rdi,QWORD PTR [rax+0x30]
  422585:	je     4225d5 <strcmp@plt+0x1ee3d>
  422587:	movzx  eax,WORD PTR [rdi]
  42258a:	shr    eax,0x4
  42258d:	and    eax,0xf
  422590:	dec    eax
  422592:	cmp    eax,0x7
  422595:	ja     4225ad <strcmp@plt+0x1ee15>
  422597:	lea    rcx,[rip+0x26b66]        # 449104 <strcmp@plt+0x4596c>
  42259e:	movsxd rax,DWORD PTR [rcx+rax*4]
  4225a2:	add    rax,rcx
  4225a5:	jmp    rax
  4225a7:	pop    rax
  4225a8:	jmp    42a380 <strcmp@plt+0x26be8>
  4225ad:	lea    rax,[rip+0x4280c]        # 464dc0 <strcmp@plt+0x61628>
  4225b4:	cmp    DWORD PTR [rax],0x3
  4225b7:	jl     4225d5 <strcmp@plt+0x1ee3d>
  4225b9:	movzx  edx,WORD PTR [rdi]
  4225bc:	shr    edx,0x4
  4225bf:	and    edx,0xf
  4225c2:	lea    rsi,[rip+0x26c99]        # 449262 <strcmp@plt+0x45aca>
  4225c9:	mov    edi,0x7
  4225ce:	xor    eax,eax
  4225d0:	call   42e520 <strcmp@plt+0x2ad88>
  4225d5:	xor    eax,eax
  4225d7:	pop    rcx
  4225d8:	ret    
  4225d9:	pop    rax
  4225da:	jmp    42a490 <strcmp@plt+0x26cf8>
  4225df:	pop    rax
  4225e0:	jmp    42a670 <strcmp@plt+0x26ed8>
  4225e5:	pop    rax
  4225e6:	jmp    42a7a0 <strcmp@plt+0x27008>
  4225eb:	pop    rax
  4225ec:	jmp    42a9f0 <strcmp@plt+0x27258>
  4225f1:	pop    rax
  4225f2:	jmp    42a570 <strcmp@plt+0x26dd8>
  4225f7:	pop    rax
  4225f8:	jmp    42a900 <strcmp@plt+0x27168>
  4225fd:	nop    DWORD PTR [rax]
  422600:	movzx  ecx,WORD PTR [rdi+0x1e]
  422604:	cmp    rcx,0xffff
  42260b:	je     422613 <strcmp@plt+0x1ee7b>
  42260d:	add    rcx,QWORD PTR [rdi+0x30]
  422611:	jmp    422615 <strcmp@plt+0x1ee7d>
  422613:	xor    ecx,ecx
  422615:	mov    eax,0xffffffff
  42261a:	test   BYTE PTR [rcx],0x8
  42261d:	je     422623 <strcmp@plt+0x1ee8b>
  42261f:	movzx  eax,BYTE PTR [rcx+0x4]
  422623:	ret    
  422624:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42262e:	xchg   ax,ax
  422630:	push   rbp
  422631:	push   r14
  422633:	push   rbx
  422634:	sub    rsp,0x40
  422638:	mov    r14,rcx
  42263b:	mov    ebp,edx
  42263d:	mov    rbx,rsi
  422640:	vmovups ymm0,YMMWORD PTR [rdi]
  422644:	vmovups ymm1,YMMWORD PTR [rdi+0x20]
  422649:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  42264f:	vmovups YMMWORD PTR [rsp],ymm0
  422654:	mov    rdi,rsp
  422657:	vzeroupper 
  42265a:	call   42e3a0 <strcmp@plt+0x2ac08>
  42265f:	movbe  WORD PTR [rbx+0x4],bp
  422665:	mov    edi,ebp
  422667:	call   42b0f0 <strcmp@plt+0x27958>
  42266c:	movbe  WORD PTR [rbx+0x6],ax
  422672:	movzx  eax,WORD PTR [rsp+0x24]
  422677:	mov    rcx,QWORD PTR [rsp+0x30]
  42267c:	add    rcx,rax
  42267f:	xor    edx,edx
  422681:	cmp    rax,0xffff
  422687:	cmovne rdx,rcx
  42268b:	mov    ecx,DWORD PTR [rsp+0x14]
  42268f:	lea    r8,[rbx+0x8]
  422693:	movzx  edi,bpl
  422697:	mov    rsi,r14
  42269a:	call   42c060 <strcmp@plt+0x288c8>
  42269f:	xor    ecx,ecx
  4226a1:	cmp    eax,0x1
  4226a4:	sete   cl
  4226a7:	mov    eax,ecx
  4226a9:	add    rsp,0x40
  4226ad:	pop    rbx
  4226ae:	pop    r14
  4226b0:	pop    rbp
  4226b1:	ret    
  4226b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4226bc:	nop    DWORD PTR [rax+0x0]
  4226c0:	push   rbp
  4226c1:	push   r15
  4226c3:	push   r14
  4226c5:	push   rbx
  4226c6:	push   rax
  4226c7:	mov    r14,rcx
  4226ca:	mov    r15d,edx
  4226cd:	mov    rbx,rsi
  4226d0:	mov    rbp,rdi
  4226d3:	movbe  WORD PTR [rsi],r15w
  4226d9:	mov    edi,edx
  4226db:	call   42b0f0 <strcmp@plt+0x27958>
  4226e0:	movbe  WORD PTR [rbx+0x2],ax
  4226e6:	movzx  edx,WORD PTR [rbp+0x24]
  4226ea:	cmp    rdx,0xffff
  4226f1:	je     4226f9 <strcmp@plt+0x1ef61>
  4226f3:	add    rdx,QWORD PTR [rbp+0x30]
  4226f7:	jmp    4226fb <strcmp@plt+0x1ef63>
  4226f9:	xor    edx,edx
  4226fb:	mov    ecx,DWORD PTR [rbp+0x14]
  4226fe:	add    rbx,0x4
  422702:	movzx  edi,r15b
  422706:	mov    rsi,r14
  422709:	mov    r8,rbx
  42270c:	call   42c060 <strcmp@plt+0x288c8>
  422711:	xor    ecx,ecx
  422713:	cmp    eax,0x1
  422716:	sete   cl
  422719:	mov    eax,ecx
  42271b:	add    rsp,0x8
  42271f:	pop    rbx
  422720:	pop    r14
  422722:	pop    r15
  422724:	pop    rbp
  422725:	ret    
  422726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422730:	push   r15
  422732:	push   r14
  422734:	push   rbx
  422735:	sub    rsp,0x40
  422739:	mov    r14,rdx
  42273c:	mov    rbx,rsi
  42273f:	add    rbx,0x4
  422743:	vmovups ymm0,YMMWORD PTR [rdi]
  422747:	vmovups ymm1,YMMWORD PTR [rdi+0x20]
  42274c:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  422752:	vmovups YMMWORD PTR [rsp],ymm0
  422757:	mov    r15,rsp
  42275a:	mov    rdi,r15
  42275d:	vzeroupper 
  422760:	call   42e3a0 <strcmp@plt+0x2ac08>
  422765:	mov    rdi,r15
  422768:	mov    rsi,rbx
  42276b:	mov    rdx,r14
  42276e:	call   422780 <strcmp@plt+0x1efe8>
  422773:	add    rsp,0x40
  422777:	pop    rbx
  422778:	pop    r14
  42277a:	pop    r15
  42277c:	ret    
  42277d:	nop    DWORD PTR [rax]
  422780:	push   rbp
  422781:	push   r15
  422783:	push   r14
  422785:	push   rbx
  422786:	push   rax
  422787:	mov    r14,rdx
  42278a:	mov    rbx,rsi
  42278d:	mov    r15,rdi
  422790:	movbe  bp,WORD PTR [rsi]
  422795:	movzx  edi,bp
  422798:	call   42b0f0 <strcmp@plt+0x27958>
  42279d:	movbe  dx,WORD PTR [rbx+0x2]
  4227a3:	cmp    ax,dx
  4227a6:	jne    4227bc <strcmp@plt+0x1f024>
  4227a8:	movzx  edx,WORD PTR [r15+0x24]
  4227ad:	cmp    rdx,0xffff
  4227b4:	je     4227e7 <strcmp@plt+0x1f04f>
  4227b6:	add    rdx,QWORD PTR [r15+0x30]
  4227ba:	jmp    4227e9 <strcmp@plt+0x1f051>
  4227bc:	lea    rcx,[rip+0x425fd]        # 464dc0 <strcmp@plt+0x61628>
  4227c3:	xor    ebx,ebx
  4227c5:	cmp    DWORD PTR [rcx],0x3
  4227c8:	jl     42282d <strcmp@plt+0x1f095>
  4227ca:	movzx  ecx,ax
  4227cd:	movzx  edx,dx
  4227d0:	lea    rsi,[rip+0x26aa8]        # 44927f <strcmp@plt+0x45ae7>
  4227d7:	xor    ebx,ebx
  4227d9:	mov    edi,0x7
  4227de:	xor    eax,eax
  4227e0:	call   42e520 <strcmp@plt+0x2ad88>
  4227e5:	jmp    42282d <strcmp@plt+0x1f095>
  4227e7:	xor    edx,edx
  4227e9:	mov    ecx,DWORD PTR [r15+0x14]
  4227ed:	add    rbx,0x4
  4227f1:	movzx  edi,bpl
  4227f5:	mov    rsi,r14
  4227f8:	mov    r8,rbx
  4227fb:	call   42c130 <strcmp@plt+0x28998>
  422800:	mov    ebx,0x1
  422805:	cmp    eax,0x1
  422808:	je     42282d <strcmp@plt+0x1f095>
  42280a:	mov    ebp,eax
  42280c:	lea    rax,[rip+0x425ad]        # 464dc0 <strcmp@plt+0x61628>
  422813:	cmp    DWORD PTR [rax],0x3
  422816:	jl     42282b <strcmp@plt+0x1f093>
  422818:	lea    rsi,[rip+0x26a95]        # 4492b4 <strcmp@plt+0x45b1c>
  42281f:	mov    edi,0x7
  422824:	xor    eax,eax
  422826:	call   42e520 <strcmp@plt+0x2ad88>
  42282b:	mov    ebx,ebp
  42282d:	mov    eax,ebx
  42282f:	add    rsp,0x8
  422833:	pop    rbx
  422834:	pop    r14
  422836:	pop    r15
  422838:	pop    rbp
  422839:	ret    
  42283a:	nop    WORD PTR [rax+rax*1+0x0]
  422840:	push   rbp
  422841:	push   r15
  422843:	push   r14
  422845:	push   r12
  422847:	push   rbx
  422848:	mov    r15d,esi
  42284b:	mov    r14,rdi
  42284e:	mov    edi,esi
  422850:	call   42b0f0 <strcmp@plt+0x27958>
  422855:	movzx  r12d,ax
  422859:	lea    rbx,[r12+0x8]
  42285e:	mov    rdi,r14
  422861:	mov    esi,ebx
  422863:	call   42e040 <strcmp@plt+0x2a8a8>
  422868:	mov    rbp,rax
  42286b:	mov    rdi,rax
  42286e:	xor    esi,esi
  422870:	mov    rdx,rbx
  422873:	call   403260 <memset@plt>
  422878:	mov    BYTE PTR [rbp+0x0],0x2
  42287c:	movbe  WORD PTR [rbp+0x4],r15w
  422883:	movbe  WORD PTR [rbp+0x6],r12w
  42288a:	mov    rax,rbp
  42288d:	pop    rbx
  42288e:	pop    r12
  422890:	pop    r14
  422892:	pop    r15
  422894:	pop    rbp
  422895:	ret    
  422896:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4228a0:	push   r14
  4228a2:	push   rbx
  4228a3:	push   rax
  4228a4:	mov    rbx,rdi
  4228a7:	mov    eax,DWORD PTR [rdi+0x14]
  4228aa:	cmp    eax,0x8
  4228ad:	jae    4228b4 <strcmp@plt+0x1f11c>
  4228af:	xor    r14d,r14d
  4228b2:	jmp    4228c6 <strcmp@plt+0x1f12e>
  4228b4:	mov    r14,QWORD PTR [rbx+0x38]
  4228b8:	lea    rcx,[r14+0x8]
  4228bc:	mov    QWORD PTR [rbx+0x38],rcx
  4228c0:	add    eax,0xfffffff8
  4228c3:	mov    DWORD PTR [rbx+0x14],eax
  4228c6:	movbe  ax,WORD PTR [r14+0x4]
  4228cd:	movzx  edi,ax
  4228d0:	call   42b0f0 <strcmp@plt+0x27958>
  4228d5:	movzx  ecx,ax
  4228d8:	mov    eax,DWORD PTR [rbx+0x14]
  4228db:	sub    eax,ecx
  4228dd:	jb     4228e8 <strcmp@plt+0x1f150>
  4228df:	mov    ecx,ecx
  4228e1:	add    QWORD PTR [rbx+0x38],rcx
  4228e5:	mov    DWORD PTR [rbx+0x14],eax
  4228e8:	mov    rax,r14
  4228eb:	add    rsp,0x8
  4228ef:	pop    rbx
  4228f0:	pop    r14
  4228f2:	ret    
  4228f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4228fd:	nop    DWORD PTR [rax]
  422900:	push   rbp
  422901:	push   r15
  422903:	push   r14
  422905:	push   rbx
  422906:	push   rax
  422907:	mov    r15d,esi
  42290a:	mov    r14,rdi
  42290d:	mov    edi,esi
  42290f:	call   42b0f0 <strcmp@plt+0x27958>
  422914:	movzx  ebx,ax
  422917:	lea    esi,[rbx+0x4]
  42291a:	mov    rdi,r14
  42291d:	call   42e040 <strcmp@plt+0x2a8a8>
  422922:	mov    rbp,rax
  422925:	movbe  WORD PTR [rax],r15w
  42292b:	movbe  WORD PTR [rax+0x2],bx
  422931:	lea    rdi,[rax+0x4]
  422935:	xor    esi,esi
  422937:	mov    rdx,rbx
  42293a:	call   403260 <memset@plt>
  42293f:	mov    rax,rbp
  422942:	add    rsp,0x8
  422946:	pop    rbx
  422947:	pop    r14
  422949:	pop    r15
  42294b:	pop    rbp
  42294c:	ret    
  42294d:	nop    DWORD PTR [rax]
  422950:	push   r14
  422952:	push   rbx
  422953:	push   rax
  422954:	mov    rbx,rdi
  422957:	mov    eax,DWORD PTR [rdi+0x14]
  42295a:	cmp    eax,0x4
  42295d:	jae    422964 <strcmp@plt+0x1f1cc>
  42295f:	xor    r14d,r14d
  422962:	jmp    422976 <strcmp@plt+0x1f1de>
  422964:	mov    r14,QWORD PTR [rbx+0x38]
  422968:	lea    rcx,[r14+0x4]
  42296c:	mov    QWORD PTR [rbx+0x38],rcx
  422970:	add    eax,0xfffffffc
  422973:	mov    DWORD PTR [rbx+0x14],eax
  422976:	movbe  ax,WORD PTR [r14]
  42297c:	movzx  edi,ax
  42297f:	call   42b0f0 <strcmp@plt+0x27958>
  422984:	movzx  ecx,ax
  422987:	mov    eax,DWORD PTR [rbx+0x14]
  42298a:	sub    eax,ecx
  42298c:	jb     422997 <strcmp@plt+0x1f1ff>
  42298e:	mov    ecx,ecx
  422990:	add    QWORD PTR [rbx+0x38],rcx
  422994:	mov    DWORD PTR [rbx+0x14],eax
  422997:	mov    rax,r14
  42299a:	add    rsp,0x8
  42299e:	pop    rbx
  42299f:	pop    r14
  4229a1:	ret    
  4229a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4229ac:	nop    DWORD PTR [rax+0x0]
  4229b0:	push   rbp
  4229b1:	push   rbx
  4229b2:	push   rax
  4229b3:	mov    ebp,esi
  4229b5:	mov    esi,0x8
  4229ba:	call   42e040 <strcmp@plt+0x2a8a8>
  4229bf:	mov    rbx,rax
  4229c2:	mov    rdi,rax
  4229c5:	mov    esi,ebp
  4229c7:	call   4239c0 <strcmp@plt+0x20228>
  4229cc:	mov    rax,rbx
  4229cf:	add    rsp,0x8
  4229d3:	pop    rbx
  4229d4:	pop    rbp
  4229d5:	ret    
  4229d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4229e0:	push   rbp
  4229e1:	push   r15
  4229e3:	push   r14
  4229e5:	push   r13
  4229e7:	push   r12
  4229e9:	push   rbx
  4229ea:	push   rax
  4229eb:	mov    ebp,r9d
  4229ee:	mov    r14,r8
  4229f1:	mov    r15,rcx
  4229f4:	mov    r12d,edx
  4229f7:	mov    r13d,esi
  4229fa:	mov    rbx,rdi
  4229fd:	mov    DWORD PTR [rsp+0x4],0x0
  422a05:	mov    DWORD PTR [rsp],0x0
  422a0c:	mov    rdi,QWORD PTR [rdi+0x38]
  422a10:	lea    rsi,[rsp+0x4]
  422a15:	mov    rdx,rsp
  422a18:	call   4338d0 <strcmp@plt+0x30138>
  422a1d:	mov    rdi,rbx
  422a20:	mov    esi,0x8
  422a25:	call   42e040 <strcmp@plt+0x2a8a8>
  422a2a:	mov    rdi,rax
  422a2d:	mov    esi,ebp
  422a2f:	call   4239c0 <strcmp@plt+0x20228>
  422a34:	movzx  esi,r13w
  422a38:	movzx  edx,r12w
  422a3c:	mov    rdi,rbx
  422a3f:	mov    rcx,r15
  422a42:	mov    r8,r14
  422a45:	call   432d70 <strcmp@plt+0x2f5d8>
  422a4a:	mov    rdi,QWORD PTR [rbx+0x38]
  422a4e:	mov    esi,DWORD PTR [rsp+0x4]
  422a52:	mov    edx,DWORD PTR [rsp]
  422a55:	call   433870 <strcmp@plt+0x300d8>
  422a5a:	mov    rax,QWORD PTR [rbx+0x38]
  422a5e:	add    rsp,0x8
  422a62:	pop    rbx
  422a63:	pop    r12
  422a65:	pop    r13
  422a67:	pop    r14
  422a69:	pop    r15
  422a6b:	pop    rbp
  422a6c:	ret    
  422a6d:	nop    DWORD PTR [rax]
  422a70:	mov    ecx,DWORD PTR [rdi+0x14]
  422a73:	cmp    ecx,0x8
  422a76:	jae    422a7b <strcmp@plt+0x1f2e3>
  422a78:	xor    eax,eax
  422a7a:	ret    
  422a7b:	mov    rax,QWORD PTR [rdi+0x38]
  422a7f:	lea    rdx,[rax+0x8]
  422a83:	mov    QWORD PTR [rdi+0x38],rdx
  422a87:	add    ecx,0xfffffff8
  422a8a:	mov    DWORD PTR [rdi+0x14],ecx
  422a8d:	ret    
  422a8e:	xchg   ax,ax
  422a90:	push   rbp
  422a91:	push   r15
  422a93:	push   r14
  422a95:	push   rbx
  422a96:	push   rax
  422a97:	xor    r14d,r14d
  422a9a:	test   rsi,rsi
  422a9d:	je     422ad1 <strcmp@plt+0x1f339>
  422a9f:	mov    rbp,rdi
  422aa2:	mov    rbx,QWORD PTR [rdi+0x8]
  422aa6:	cmp    rbx,rdi
  422aa9:	je     422ad1 <strcmp@plt+0x1f339>
  422aab:	mov    r15,rsi
  422aae:	xchg   ax,ax
  422ab0:	mov    rsi,QWORD PTR [rbx+0x10]
  422ab4:	mov    rdi,r15
  422ab7:	call   423670 <strcmp@plt+0x1fed8>
  422abc:	test   eax,eax
  422abe:	je     422acb <strcmp@plt+0x1f333>
  422ac0:	mov    rbx,QWORD PTR [rbx+0x8]
  422ac4:	cmp    rbx,rbp
  422ac7:	jne    422ab0 <strcmp@plt+0x1f318>
  422ac9:	jmp    422ad1 <strcmp@plt+0x1f339>
  422acb:	mov    r14d,0x1
  422ad1:	mov    eax,r14d
  422ad4:	add    rsp,0x8
  422ad8:	pop    rbx
  422ad9:	pop    r14
  422adb:	pop    r15
  422add:	pop    rbp
  422ade:	ret    
  422adf:	nop
  422ae0:	push   rbp
  422ae1:	push   r15
  422ae3:	push   r14
  422ae5:	push   rbx
  422ae6:	push   rax
  422ae7:	mov    rbx,QWORD PTR [rdi+0x8]
  422aeb:	cmp    rbx,rdi
  422aee:	je     422b1d <strcmp@plt+0x1f385>
  422af0:	mov    r14d,esi
  422af3:	mov    r15,rdi
  422af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b00:	mov    rbp,QWORD PTR [rbx+0x10]
  422b04:	mov    rdi,rbp
  422b07:	call   422ef0 <strcmp@plt+0x1f758>
  422b0c:	movzx  eax,ax
  422b0f:	cmp    eax,r14d
  422b12:	je     422b1f <strcmp@plt+0x1f387>
  422b14:	mov    rbx,QWORD PTR [rbx+0x8]
  422b18:	cmp    rbx,r15
  422b1b:	jne    422b00 <strcmp@plt+0x1f368>
  422b1d:	xor    ebp,ebp
  422b1f:	mov    rax,rbp
  422b22:	add    rsp,0x8
  422b26:	pop    rbx
  422b27:	pop    r14
  422b29:	pop    r15
  422b2b:	pop    rbp
  422b2c:	ret    
  422b2d:	nop    DWORD PTR [rax]
  422b30:	push   rbp
  422b31:	push   r15
  422b33:	push   r14
  422b35:	push   r13
  422b37:	push   r12
  422b39:	push   rbx
  422b3a:	push   rax
  422b3b:	mov    eax,DWORD PTR [rdi+0x18]
  422b3e:	mov    DWORD PTR [rsp+0x4],eax
  422b42:	mov    BYTE PTR [rip+0x474b7],0x0        # 46a000 <strcmp@plt+0x66868>
  422b49:	mov    rbp,QWORD PTR [rdi+0x8]
  422b4d:	cmp    rbp,rdi
  422b50:	je     422bc0 <strcmp@plt+0x1f428>
  422b52:	mov    r15,rdi
  422b55:	mov    r13d,0x1
  422b5b:	lea    r14,[rip+0x4749e]        # 46a000 <strcmp@plt+0x66868>
  422b62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b6c:	nop    DWORD PTR [rax+0x0]
  422b70:	mov    rdi,r14
  422b73:	call   4031e0 <strlen@plt>
  422b78:	lea    r12,[r14+rax*1]
  422b7c:	mov    ebx,0x8fc
  422b81:	sub    rbx,rax
  422b84:	mov    rdi,QWORD PTR [rbp+0x10]
  422b88:	call   422e20 <strcmp@plt+0x1f688>
  422b8d:	cmp    r13d,DWORD PTR [rsp+0x4]
  422b92:	lea    rdx,[rip+0x20b1c]        # 4436b5 <strcmp@plt+0x3ff1d>
  422b99:	lea    rcx,[rip+0x2989b]        # 44c43b <strcmp@plt+0x48ca3>
  422ba0:	cmovl  rdx,rcx
  422ba4:	mov    rdi,r12
  422ba7:	mov    rsi,rbx
  422baa:	mov    rcx,rax
  422bad:	xor    eax,eax
  422baf:	call   403630 <snprintf@plt>
  422bb4:	inc    r13d
  422bb7:	mov    rbp,QWORD PTR [rbp+0x8]
  422bbb:	cmp    rbp,r15
  422bbe:	jne    422b70 <strcmp@plt+0x1f3d8>
  422bc0:	lea    rax,[rip+0x47439]        # 46a000 <strcmp@plt+0x66868>
  422bc7:	add    rsp,0x8
  422bcb:	pop    rbx
  422bcc:	pop    r12
  422bce:	pop    r13
  422bd0:	pop    r14
  422bd2:	pop    r15
  422bd4:	pop    rbp
  422bd5:	ret    
  422bd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422be0:	push   rbx
  422be1:	cmp    dil,0x3
  422be5:	ja     422c0f <strcmp@plt+0x1f477>
  422be7:	mov    eax,edi
  422be9:	lea    rcx,[rip+0x266e0]        # 4492d0 <strcmp@plt+0x45b38>
  422bf0:	movsxd rax,DWORD PTR [rcx+rax*4]
  422bf4:	add    rax,rcx
  422bf7:	jmp    rax
  422bf9:	mov    edi,0x20
  422bfe:	call   431d60 <strcmp@plt+0x2e5c8>
  422c03:	mov    rbx,rax
  422c06:	mov    DWORD PTR [rax+0x18],0x0
  422c0d:	jmp    422c74 <strcmp@plt+0x1f4dc>
  422c0f:	movzx  edx,dil
  422c13:	lea    rsi,[rip+0x26ce2]        # 4498fc <strcmp@plt+0x46164>
  422c1a:	xor    ebx,ebx
  422c1c:	mov    edi,0x3
  422c21:	xor    eax,eax
  422c23:	call   42e520 <strcmp@plt+0x2ad88>
  422c28:	jmp    422c74 <strcmp@plt+0x1f4dc>
  422c2a:	mov    edi,0x20
  422c2f:	call   431d60 <strcmp@plt+0x2e5c8>
  422c34:	mov    rbx,rax
  422c37:	mov    DWORD PTR [rax+0x18],0x1
  422c3e:	mov    rdi,rax
  422c41:	xor    esi,esi
  422c43:	call   423bb0 <strcmp@plt+0x20418>
  422c48:	jmp    422c74 <strcmp@plt+0x1f4dc>
  422c4a:	mov    edi,0x20
  422c4f:	call   431d60 <strcmp@plt+0x2e5c8>
  422c54:	mov    rbx,rax
  422c57:	mov    DWORD PTR [rax+0x18],0x2
  422c5e:	jmp    422c74 <strcmp@plt+0x1f4dc>
  422c60:	mov    edi,0x20
  422c65:	call   431d60 <strcmp@plt+0x2e5c8>
  422c6a:	mov    rbx,rax
  422c6d:	mov    DWORD PTR [rax+0x18],0x3
  422c74:	mov    rax,rbx
  422c77:	pop    rbx
  422c78:	ret    
  422c79:	nop    DWORD PTR [rax+0x0]
  422c80:	mov    edi,0x20
  422c85:	jmp    431d60 <strcmp@plt+0x2e5c8>
  422c8a:	nop    WORD PTR [rax+rax*1+0x0]
  422c90:	push   rbx
  422c91:	test   rdi,rdi
  422c94:	je     422cb4 <strcmp@plt+0x1f51c>
  422c96:	mov    rbx,rdi
  422c99:	mov    edx,DWORD PTR [rdi+0x18]
  422c9c:	cmp    edx,0x3
  422c9f:	jb     422cab <strcmp@plt+0x1f513>
  422ca1:	jne    422cb6 <strcmp@plt+0x1f51e>
  422ca3:	mov    rdi,rbx
  422ca6:	call   426650 <strcmp@plt+0x22eb8>
  422cab:	mov    rdi,rbx
  422cae:	pop    rbx
  422caf:	jmp    403790 <free@plt>
  422cb4:	pop    rbx
  422cb5:	ret    
  422cb6:	lea    rsi,[rip+0x26693]        # 449350 <strcmp@plt+0x45bb8>
  422cbd:	mov    edi,0x3
  422cc2:	xor    eax,eax
  422cc4:	pop    rbx
  422cc5:	jmp    42e520 <strcmp@plt+0x2ad88>
  422cca:	nop    WORD PTR [rax+rax*1+0x0]
  422cd0:	push   rbx
  422cd1:	mov    edx,DWORD PTR [rdi+0x18]
  422cd4:	cmp    rdx,0x3
  422cd8:	ja     422d02 <strcmp@plt+0x1f56a>
  422cda:	mov    bx,0x4003
  422cde:	lea    rax,[rip+0x265fb]        # 4492e0 <strcmp@plt+0x45b48>
  422ce5:	movsxd rcx,DWORD PTR [rax+rdx*4]
  422ce9:	add    rcx,rax
  422cec:	jmp    rcx
  422cee:	pop    rbx
  422cef:	jmp    423b30 <strcmp@plt+0x20398>
  422cf4:	call   424110 <strcmp@plt+0x20978>
  422cf9:	mov    rdi,rax
  422cfc:	pop    rbx
  422cfd:	jmp    423b30 <strcmp@plt+0x20398>
  422d02:	lea    rax,[rip+0x420b7]        # 464dc0 <strcmp@plt+0x61628>
  422d09:	cmp    DWORD PTR [rax],0x2
  422d0c:	jge    422d12 <strcmp@plt+0x1f57a>
  422d0e:	xor    ebx,ebx
  422d10:	jmp    422d27 <strcmp@plt+0x1f58f>
  422d12:	lea    rsi,[rip+0x26662]        # 44937b <strcmp@plt+0x45be3>
  422d19:	xor    ebx,ebx
  422d1b:	mov    edi,0x6
  422d20:	xor    eax,eax
  422d22:	call   42e520 <strcmp@plt+0x2ad88>
  422d27:	mov    eax,ebx
  422d29:	pop    rbx
  422d2a:	ret    
  422d2b:	nop    DWORD PTR [rax+rax*1+0x0]
  422d30:	push   rbx
  422d31:	mov    edx,DWORD PTR [rdi+0x18]
  422d34:	cmp    rdx,0x3
  422d38:	ja     422d67 <strcmp@plt+0x1f5cf>
  422d3a:	mov    ebx,0x2
  422d3f:	lea    rax,[rip+0x265aa]        # 4492f0 <strcmp@plt+0x45b58>
  422d46:	movsxd rcx,DWORD PTR [rax+rdx*4]
  422d4a:	add    rcx,rax
  422d4d:	jmp    rcx
  422d4f:	call   424110 <strcmp@plt+0x20978>
  422d54:	mov    rdi,rax
  422d57:	call   423af0 <strcmp@plt+0x20358>
  422d5c:	movzx  ebx,al
  422d5f:	jmp    422d8a <strcmp@plt+0x1f5f2>
  422d61:	pop    rbx
  422d62:	jmp    426a60 <strcmp@plt+0x232c8>
  422d67:	lea    rax,[rip+0x42052]        # 464dc0 <strcmp@plt+0x61628>
  422d6e:	xor    ebx,ebx
  422d70:	cmp    DWORD PTR [rax],0x3
  422d73:	jl     422d8a <strcmp@plt+0x1f5f2>
  422d75:	lea    rsi,[rip+0x26628]        # 4493a4 <strcmp@plt+0x45c0c>
  422d7c:	xor    ebx,ebx
  422d7e:	mov    edi,0x7
  422d83:	xor    eax,eax
  422d85:	call   42e520 <strcmp@plt+0x2ad88>
  422d8a:	mov    eax,ebx
  422d8c:	pop    rbx
  422d8d:	ret    
  422d8e:	xchg   ax,ax
  422d90:	push   rax
  422d91:	mov    eax,DWORD PTR [rdi+0x18]
  422d94:	cmp    eax,0x3
  422d97:	je     422daa <strcmp@plt+0x1f612>
  422d99:	cmp    eax,0x2
  422d9c:	je     422db7 <strcmp@plt+0x1f61f>
  422d9e:	cmp    eax,0x1
  422da1:	jne    422dbe <strcmp@plt+0x1f626>
  422da3:	call   4240c0 <strcmp@plt+0x20928>
  422da8:	jmp    422dbc <strcmp@plt+0x1f624>
  422daa:	call   428210 <strcmp@plt+0x24a78>
  422daf:	test   rax,rax
  422db2:	je     422dbe <strcmp@plt+0x1f626>
  422db4:	mov    rdi,rax
  422db7:	call   424100 <strcmp@plt+0x20968>
  422dbc:	jmp    422dc0 <strcmp@plt+0x1f628>
  422dbe:	xor    eax,eax
  422dc0:	movzx  eax,al
  422dc3:	pop    rcx
  422dc4:	ret    
  422dc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422dcf:	nop
  422dd0:	push   rbx
  422dd1:	mov    rbx,rdi
  422dd4:	mov    eax,DWORD PTR [rdi+0x18]
  422dd7:	cmp    eax,0x3
  422dda:	je     422df6 <strcmp@plt+0x1f65e>
  422ddc:	cmp    eax,0x2
  422ddf:	je     422e14 <strcmp@plt+0x1f67c>
  422de1:	cmp    eax,0x1
  422de4:	jne    422df2 <strcmp@plt+0x1f65a>
  422de6:	lea    rax,[rip+0x41fd3]        # 464dc0 <strcmp@plt+0x61628>
  422ded:	cmp    DWORD PTR [rax],0x3
  422df0:	jge    422dff <strcmp@plt+0x1f667>
  422df2:	xor    ebx,ebx
  422df4:	jmp    422e14 <strcmp@plt+0x1f67c>
  422df6:	mov    rdi,rbx
  422df9:	pop    rbx
  422dfa:	jmp    428210 <strcmp@plt+0x24a78>
  422dff:	lea    rsi,[rip+0x26abb]        # 4498c1 <strcmp@plt+0x46129>
  422e06:	xor    ebx,ebx
  422e08:	mov    edi,0x7
  422e0d:	xor    eax,eax
  422e0f:	call   42e520 <strcmp@plt+0x2ad88>
  422e14:	mov    rax,rbx
  422e17:	pop    rbx
  422e18:	ret    
  422e19:	nop    DWORD PTR [rax+0x0]
  422e20:	push   rbx
  422e21:	test   rdi,rdi
  422e24:	je     422e4c <strcmp@plt+0x1f6b4>
  422e26:	mov    edx,DWORD PTR [rdi+0x18]
  422e29:	cmp    rdx,0x3
  422e2d:	ja     422e64 <strcmp@plt+0x1f6cc>
  422e2f:	lea    rbx,[rip+0x265a0]        # 4493d6 <strcmp@plt+0x45c3e>
  422e36:	lea    rax,[rip+0x264c3]        # 449300 <strcmp@plt+0x45b68>
  422e3d:	movsxd rcx,DWORD PTR [rax+rdx*4]
  422e41:	add    rcx,rax
  422e44:	jmp    rcx
  422e46:	pop    rbx
  422e47:	jmp    423c50 <strcmp@plt+0x204b8>
  422e4c:	lea    rbx,[rip+0x20f63]        # 443db6 <strcmp@plt+0x4061e>
  422e53:	mov    rax,rbx
  422e56:	pop    rbx
  422e57:	ret    
  422e58:	pop    rbx
  422e59:	jmp    4241b0 <strcmp@plt+0x20a18>
  422e5e:	pop    rbx
  422e5f:	jmp    4267e0 <strcmp@plt+0x23048>
  422e64:	lea    rax,[rip+0x41f55]        # 464dc0 <strcmp@plt+0x61628>
  422e6b:	cmp    DWORD PTR [rax],0x3
  422e6e:	jge    422e74 <strcmp@plt+0x1f6dc>
  422e70:	xor    ebx,ebx
  422e72:	jmp    422e53 <strcmp@plt+0x1f6bb>
  422e74:	lea    rsi,[rip+0x26565]        # 4493e0 <strcmp@plt+0x45c48>
  422e7b:	xor    ebx,ebx
  422e7d:	mov    edi,0x7
  422e82:	xor    eax,eax
  422e84:	call   42e520 <strcmp@plt+0x2ad88>
  422e89:	jmp    422e53 <strcmp@plt+0x1f6bb>
  422e8b:	nop    DWORD PTR [rax+rax*1+0x0]
  422e90:	mov    DWORD PTR [rdi+0x18],esi
  422e93:	ret    
  422e94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e9e:	xchg   ax,ax
  422ea0:	push   rbx
  422ea1:	mov    edx,DWORD PTR [rdi+0x18]
  422ea4:	lea    eax,[rdx-0x1]
  422ea7:	cmp    eax,0x2
  422eaa:	jae    422ec7 <strcmp@plt+0x1f72f>
  422eac:	mov    rbx,rdi
  422eaf:	mov    DWORD PTR [rdi+0x18],0x2
  422eb6:	call   4240c0 <strcmp@plt+0x20928>
  422ebb:	movzx  esi,al
  422ebe:	mov    rdi,rbx
  422ec1:	pop    rbx
  422ec2:	jmp    424150 <strcmp@plt+0x209b8>
  422ec7:	lea    rax,[rip+0x41ef2]        # 464dc0 <strcmp@plt+0x61628>
  422ece:	cmp    DWORD PTR [rax],0x3
  422ed1:	jge    422ed5 <strcmp@plt+0x1f73d>
  422ed3:	pop    rbx
  422ed4:	ret    
  422ed5:	lea    rsi,[rip+0x26547]        # 449423 <strcmp@plt+0x45c8b>
  422edc:	mov    edi,0x7
  422ee1:	xor    eax,eax
  422ee3:	pop    rbx
  422ee4:	jmp    42e520 <strcmp@plt+0x2ad88>
  422ee9:	nop    DWORD PTR [rax+0x0]
  422ef0:	push   rbx
  422ef1:	mov    rax,rdi
  422ef4:	mov    rbx,rax
  422ef7:	nop    WORD PTR [rax+rax*1+0x0]
  422f00:	mov    edx,DWORD PTR [rbx+0x18]
  422f03:	cmp    edx,0x3
  422f06:	jne    422f31 <strcmp@plt+0x1f799>
  422f08:	mov    rdi,rbx
  422f0b:	call   428210 <strcmp@plt+0x24a78>
  422f10:	test   rax,rax
  422f13:	jne    422ef4 <strcmp@plt+0x1f75c>
  422f15:	mov    eax,DWORD PTR [rbx+0x18]
  422f18:	cmp    eax,0x1
  422f1b:	je     422f00 <strcmp@plt+0x1f768>
  422f1d:	cmp    eax,0x3
  422f20:	jne    422f4f <strcmp@plt+0x1f7b7>
  422f22:	mov    rdi,rbx
  422f25:	call   4281a0 <strcmp@plt+0x24a08>
  422f2a:	test   rax,rax
  422f2d:	jne    422ef4 <strcmp@plt+0x1f75c>
  422f2f:	jmp    422f75 <strcmp@plt+0x1f7dd>
  422f31:	test   edx,edx
  422f33:	je     422fbd <strcmp@plt+0x1f825>
  422f39:	cmp    edx,0x2
  422f3c:	je     422f8d <strcmp@plt+0x1f7f5>
  422f3e:	cmp    edx,0x1
  422f41:	jne    422f9a <strcmp@plt+0x1f802>
  422f43:	mov    rdi,rbx
  422f46:	call   423a30 <strcmp@plt+0x20298>
  422f4b:	mov    ebx,eax
  422f4d:	jmp    422fbf <strcmp@plt+0x1f827>
  422f4f:	cmp    eax,0x2
  422f52:	jne    422f75 <strcmp@plt+0x1f7dd>
  422f54:	lea    rax,[rip+0x41e65]        # 464dc0 <strcmp@plt+0x61628>
  422f5b:	mov    eax,DWORD PTR [rax]
  422f5d:	cmp    eax,0x3
  422f60:	jl     422f7e <strcmp@plt+0x1f7e6>
  422f62:	lea    rsi,[rip+0x26926]        # 44988f <strcmp@plt+0x460f7>
  422f69:	mov    edi,0x7
  422f6e:	xor    eax,eax
  422f70:	call   42e520 <strcmp@plt+0x2ad88>
  422f75:	lea    rax,[rip+0x41e44]        # 464dc0 <strcmp@plt+0x61628>
  422f7c:	mov    eax,DWORD PTR [rax]
  422f7e:	test   eax,eax
  422f80:	jle    422fbd <strcmp@plt+0x1f825>
  422f82:	mov    edx,DWORD PTR [rbx]
  422f84:	lea    rsi,[rip+0x264ce]        # 449459 <strcmp@plt+0x45cc1>
  422f8b:	jmp    422fad <strcmp@plt+0x1f815>
  422f8d:	mov    rdi,rbx
  422f90:	call   424120 <strcmp@plt+0x20988>
  422f95:	movzx  ebx,al
  422f98:	jmp    422fbf <strcmp@plt+0x1f827>
  422f9a:	lea    rax,[rip+0x41e1f]        # 464dc0 <strcmp@plt+0x61628>
  422fa1:	cmp    DWORD PTR [rax],0x0
  422fa4:	jle    422fbd <strcmp@plt+0x1f825>
  422fa6:	lea    rsi,[rip+0x264dd]        # 44948a <strcmp@plt+0x45cf2>
  422fad:	xor    ebx,ebx
  422faf:	mov    edi,0x5
  422fb4:	xor    eax,eax
  422fb6:	call   42e520 <strcmp@plt+0x2ad88>
  422fbb:	jmp    422fbf <strcmp@plt+0x1f827>
  422fbd:	xor    ebx,ebx
  422fbf:	mov    eax,ebx
  422fc1:	pop    rbx
  422fc2:	ret    
  422fc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422fcd:	nop    DWORD PTR [rax]
  422fd0:	push   rbx
  422fd1:	mov    rbx,rdi
  422fd4:	mov    eax,DWORD PTR [rdi+0x18]
  422fd7:	cmp    eax,0x1
  422fda:	je     423014 <strcmp@plt+0x1f87c>
  422fdc:	cmp    eax,0x3
  422fdf:	je     422ff6 <strcmp@plt+0x1f85e>
  422fe1:	cmp    eax,0x2
  422fe4:	jne    422ff2 <strcmp@plt+0x1f85a>
  422fe6:	lea    rax,[rip+0x41dd3]        # 464dc0 <strcmp@plt+0x61628>
  422fed:	cmp    DWORD PTR [rax],0x3
  422ff0:	jge    422fff <strcmp@plt+0x1f867>
  422ff2:	xor    ebx,ebx
  422ff4:	jmp    423014 <strcmp@plt+0x1f87c>
  422ff6:	mov    rdi,rbx
  422ff9:	pop    rbx
  422ffa:	jmp    4281a0 <strcmp@plt+0x24a08>
  422fff:	lea    rsi,[rip+0x26889]        # 44988f <strcmp@plt+0x460f7>
  423006:	xor    ebx,ebx
  423008:	mov    edi,0x7
  42300d:	xor    eax,eax
  42300f:	call   42e520 <strcmp@plt+0x2ad88>
  423014:	mov    rax,rbx
  423017:	pop    rbx
  423018:	ret    
  423019:	nop    DWORD PTR [rax+0x0]
  423020:	mov    eax,DWORD PTR [rdi]
  423022:	ret    
  423023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42302d:	nop    DWORD PTR [rax]
  423030:	mov    edx,DWORD PTR [rdi+0x18]
  423033:	cmp    edx,0x2
  423036:	je     423042 <strcmp@plt+0x1f8aa>
  423038:	cmp    edx,0x1
  42303b:	jne    423047 <strcmp@plt+0x1f8af>
  42303d:	jmp    423bb0 <strcmp@plt+0x20418>
  423042:	jmp    424160 <strcmp@plt+0x209c8>
  423047:	lea    rsi,[rip+0x26467]        # 4494b5 <strcmp@plt+0x45d1d>
  42304e:	mov    edi,0x3
  423053:	xor    eax,eax
  423055:	jmp    42e520 <strcmp@plt+0x2ad88>
  42305a:	nop    WORD PTR [rax+rax*1+0x0]
  423060:	push   rbx
  423061:	mov    rbx,rdi
  423064:	mov    edx,DWORD PTR [rdi+0x18]
  423067:	cmp    edx,0x1
  42306a:	je     42309f <strcmp@plt+0x1f907>
  42306c:	cmp    edx,0x2
  42306f:	jne    42307a <strcmp@plt+0x1f8e2>
  423071:	mov    rdi,rbx
  423074:	pop    rbx
  423075:	jmp    424110 <strcmp@plt+0x20978>
  42307a:	lea    rax,[rip+0x41d3f]        # 464dc0 <strcmp@plt+0x61628>
  423081:	cmp    DWORD PTR [rax],0x3
  423084:	jge    42308a <strcmp@plt+0x1f8f2>
  423086:	xor    ebx,ebx
  423088:	jmp    42309f <strcmp@plt+0x1f907>
  42308a:	lea    rsi,[rip+0x26453]        # 4494e4 <strcmp@plt+0x45d4c>
  423091:	xor    ebx,ebx
  423093:	mov    edi,0x7
  423098:	xor    eax,eax
  42309a:	call   42e520 <strcmp@plt+0x2ad88>
  42309f:	mov    rax,rbx
  4230a2:	pop    rbx
  4230a3:	ret    
  4230a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230ae:	xchg   ax,ax
  4230b0:	push   rbx
  4230b1:	mov    rbx,rdi
  4230b4:	mov    eax,DWORD PTR [rdi+0x18]
  4230b7:	cmp    eax,0x2
  4230ba:	je     4230e7 <strcmp@plt+0x1f94f>
  4230bc:	cmp    eax,0x1
  4230bf:	jne    4230f0 <strcmp@plt+0x1f958>
  4230c1:	mov    rdi,rbx
  4230c4:	call   423a30 <strcmp@plt+0x20298>
  4230c9:	test   eax,eax
  4230cb:	je     423110 <strcmp@plt+0x1f978>
  4230cd:	mov    rdi,rbx
  4230d0:	call   423a30 <strcmp@plt+0x20298>
  4230d5:	cmp    eax,0x2
  4230d8:	mov    eax,0x20
  4230dd:	mov    ebx,0x80
  4230e2:	cmove  ebx,eax
  4230e5:	jmp    423125 <strcmp@plt+0x1f98d>
  4230e7:	mov    rdi,rbx
  4230ea:	pop    rbx
  4230eb:	jmp    424100 <strcmp@plt+0x20968>
  4230f0:	lea    rax,[rip+0x41cc9]        # 464dc0 <strcmp@plt+0x61628>
  4230f7:	cmp    DWORD PTR [rax],0x3
  4230fa:	jge    423100 <strcmp@plt+0x1f968>
  4230fc:	xor    ebx,ebx
  4230fe:	jmp    423125 <strcmp@plt+0x1f98d>
  423100:	lea    rsi,[rip+0x2643f]        # 449546 <strcmp@plt+0x45dae>
  423107:	xor    ebx,ebx
  423109:	mov    edi,0x7
  42310e:	jmp    42311e <strcmp@plt+0x1f986>
  423110:	lea    rsi,[rip+0x26402]        # 449519 <strcmp@plt+0x45d81>
  423117:	xor    ebx,ebx
  423119:	mov    edi,0x3
  42311e:	xor    eax,eax
  423120:	call   42e520 <strcmp@plt+0x2ad88>
  423125:	mov    eax,ebx
  423127:	pop    rbx
  423128:	ret    
  423129:	nop    DWORD PTR [rax+0x0]
  423130:	mov    edx,DWORD PTR [rdi+0x18]
  423133:	cmp    edx,0x2
  423136:	je     423142 <strcmp@plt+0x1f9aa>
  423138:	cmp    edx,0x1
  42313b:	jne    423147 <strcmp@plt+0x1f9af>
  42313d:	jmp    423bb0 <strcmp@plt+0x20418>
  423142:	jmp    424160 <strcmp@plt+0x209c8>
  423147:	lea    rax,[rip+0x41c72]        # 464dc0 <strcmp@plt+0x61628>
  42314e:	cmp    DWORD PTR [rax],0x3
  423151:	jge    423154 <strcmp@plt+0x1f9bc>
  423153:	ret    
  423154:	lea    rsi,[rip+0x26423]        # 44957e <strcmp@plt+0x45de6>
  42315b:	mov    edi,0x7
  423160:	xor    eax,eax
  423162:	jmp    42e520 <strcmp@plt+0x2ad88>
  423167:	nop    WORD PTR [rax+rax*1+0x0]
  423170:	push   rbp
  423171:	push   rbx
  423172:	push   rax
  423173:	mov    ebp,esi
  423175:	mov    rbx,rdi
  423178:	nop    DWORD PTR [rax+rax*1+0x0]
  423180:	mov    edx,DWORD PTR [rbx+0x18]
  423183:	cmp    edx,0x3
  423186:	jne    4231b9 <strcmp@plt+0x1fa21>
  423188:	mov    rdi,rbx
  42318b:	call   428210 <strcmp@plt+0x24a78>
  423190:	test   rax,rax
  423193:	jne    4231b4 <strcmp@plt+0x1fa1c>
  423195:	mov    eax,DWORD PTR [rbx+0x18]
  423198:	cmp    eax,0x1
  42319b:	je     423180 <strcmp@plt+0x1f9e8>
  42319d:	cmp    eax,0x3
  4231a0:	jne    4231dc <strcmp@plt+0x1fa44>
  4231a2:	mov    rdi,rbx
  4231a5:	call   4281a0 <strcmp@plt+0x24a08>
  4231aa:	mov    rbx,rax
  4231ad:	test   rax,rax
  4231b0:	jne    423180 <strcmp@plt+0x1f9e8>
  4231b2:	jmp    423202 <strcmp@plt+0x1fa6a>
  4231b4:	mov    rbx,rax
  4231b7:	jmp    423180 <strcmp@plt+0x1f9e8>
  4231b9:	cmp    edx,0x2
  4231bc:	je     4231ca <strcmp@plt+0x1fa32>
  4231be:	cmp    edx,0x1
  4231c1:	jne    423229 <strcmp@plt+0x1fa91>
  4231c3:	mov    DWORD PTR [rbx+0x18],0x2
  4231ca:	movzx  esi,bpl
  4231ce:	mov    rdi,rbx
  4231d1:	add    rsp,0x8
  4231d5:	pop    rbx
  4231d6:	pop    rbp
  4231d7:	jmp    424150 <strcmp@plt+0x209b8>
  4231dc:	cmp    eax,0x2
  4231df:	jne    423202 <strcmp@plt+0x1fa6a>
  4231e1:	lea    rax,[rip+0x41bd8]        # 464dc0 <strcmp@plt+0x61628>
  4231e8:	mov    eax,DWORD PTR [rax]
  4231ea:	cmp    eax,0x3
  4231ed:	jl     42320b <strcmp@plt+0x1fa73>
  4231ef:	lea    rsi,[rip+0x26699]        # 44988f <strcmp@plt+0x460f7>
  4231f6:	mov    edi,0x7
  4231fb:	xor    eax,eax
  4231fd:	call   42e520 <strcmp@plt+0x2ad88>
  423202:	lea    rax,[rip+0x41bb7]        # 464dc0 <strcmp@plt+0x61628>
  423209:	mov    eax,DWORD PTR [rax]
  42320b:	cmp    eax,0x2
  42320e:	jl     423235 <strcmp@plt+0x1fa9d>
  423210:	lea    rsi,[rip+0x26393]        # 4495aa <strcmp@plt+0x45e12>
  423217:	mov    edi,0x6
  42321c:	xor    eax,eax
  42321e:	add    rsp,0x8
  423222:	pop    rbx
  423223:	pop    rbp
  423224:	jmp    42e520 <strcmp@plt+0x2ad88>
  423229:	lea    rax,[rip+0x41b90]        # 464dc0 <strcmp@plt+0x61628>
  423230:	cmp    DWORD PTR [rax],0x2
  423233:	jge    42323c <strcmp@plt+0x1faa4>
  423235:	add    rsp,0x8
  423239:	pop    rbx
  42323a:	pop    rbp
  42323b:	ret    
  42323c:	lea    rsi,[rip+0x2639f]        # 4495e2 <strcmp@plt+0x45e4a>
  423243:	mov    edi,0x6
  423248:	xor    eax,eax
  42324a:	add    rsp,0x8
  42324e:	pop    rbx
  42324f:	pop    rbp
  423250:	jmp    42e520 <strcmp@plt+0x2ad88>
  423255:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42325f:	nop
  423260:	mov    edx,DWORD PTR [rsi+0x18]
  423263:	mov    DWORD PTR [rdi+0x18],edx
  423266:	mov    eax,DWORD PTR [rsi+0x18]
  423269:	cmp    rax,0x3
  42326d:	ja     4232ad <strcmp@plt+0x1fb15>
  42326f:	lea    rcx,[rip+0x2609a]        # 449310 <strcmp@plt+0x45b78>
  423276:	movsxd rax,DWORD PTR [rcx+rax*4]
  42327a:	add    rax,rcx
  42327d:	jmp    rax
  42327f:	lea    rax,[rip+0x41b3a]        # 464dc0 <strcmp@plt+0x61628>
  423286:	cmp    DWORD PTR [rax],0x3
  423289:	jl     4232b9 <strcmp@plt+0x1fb21>
  42328b:	lea    rsi,[rip+0x2637d]        # 44960f <strcmp@plt+0x45e77>
  423292:	mov    edi,0x7
  423297:	xor    eax,eax
  423299:	jmp    42e520 <strcmp@plt+0x2ad88>
  42329e:	jmp    423d70 <strcmp@plt+0x205d8>
  4232a3:	jmp    424190 <strcmp@plt+0x209f8>
  4232a8:	jmp    426ac0 <strcmp@plt+0x23328>
  4232ad:	lea    rax,[rip+0x41b0c]        # 464dc0 <strcmp@plt+0x61628>
  4232b4:	cmp    DWORD PTR [rax],0x2
  4232b7:	jge    4232ba <strcmp@plt+0x1fb22>
  4232b9:	ret    
  4232ba:	lea    rsi,[rip+0x26379]        # 44963a <strcmp@plt+0x45ea2>
  4232c1:	mov    edi,0x6
  4232c6:	xor    eax,eax
  4232c8:	jmp    42e520 <strcmp@plt+0x2ad88>
  4232cd:	nop    DWORD PTR [rax]
  4232d0:	push   rbp
  4232d1:	push   rbx
  4232d2:	push   rax
  4232d3:	cmp    DWORD PTR [rsi+0x18],0x1
  4232d7:	jne    42330c <strcmp@plt+0x1fb74>
  4232d9:	mov    rbx,rsi
  4232dc:	mov    eax,DWORD PTR [rdi+0x18]
  4232df:	cmp    eax,0x1
  4232e2:	je     42333e <strcmp@plt+0x1fba6>
  4232e4:	xor    ebp,ebp
  4232e6:	cmp    eax,0x3
  4232e9:	je     423331 <strcmp@plt+0x1fb99>
  4232eb:	cmp    eax,0x2
  4232ee:	jne    42334b <strcmp@plt+0x1fbb3>
  4232f0:	lea    rax,[rip+0x41ac9]        # 464dc0 <strcmp@plt+0x61628>
  4232f7:	cmp    DWORD PTR [rax],0x3
  4232fa:	jl     42334b <strcmp@plt+0x1fbb3>
  4232fc:	lea    rsi,[rip+0x2658c]        # 44988f <strcmp@plt+0x460f7>
  423303:	xor    ebp,ebp
  423305:	mov    edi,0x7
  42330a:	jmp    423328 <strcmp@plt+0x1fb90>
  42330c:	lea    rax,[rip+0x41aad]        # 464dc0 <strcmp@plt+0x61628>
  423313:	xor    ebp,ebp
  423315:	cmp    DWORD PTR [rax],0x2
  423318:	jl     42334b <strcmp@plt+0x1fbb3>
  42331a:	lea    rsi,[rip+0x26345]        # 449666 <strcmp@plt+0x45ece>
  423321:	xor    ebp,ebp
  423323:	mov    edi,0x6
  423328:	xor    eax,eax
  42332a:	call   42e520 <strcmp@plt+0x2ad88>
  42332f:	jmp    42334b <strcmp@plt+0x1fbb3>
  423331:	call   4281a0 <strcmp@plt+0x24a08>
  423336:	mov    rdi,rax
  423339:	test   rax,rax
  42333c:	je     42334b <strcmp@plt+0x1fbb3>
  42333e:	mov    rsi,rbx
  423341:	call   423d70 <strcmp@plt+0x205d8>
  423346:	mov    ebp,0x1
  42334b:	mov    eax,ebp
  42334d:	add    rsp,0x8
  423351:	pop    rbx
  423352:	pop    rbp
  423353:	ret    
  423354:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42335e:	xchg   ax,ax
  423360:	push   rbp
  423361:	push   r14
  423363:	push   rbx
  423364:	cmp    DWORD PTR [rsi+0x18],0x2
  423368:	jne    4233ab <strcmp@plt+0x1fc13>
  42336a:	mov    r14,rsi
  42336d:	mov    rbx,rdi
  423370:	mov    eax,DWORD PTR [rdi+0x18]
  423373:	cmp    eax,0x3
  423376:	je     4233d0 <strcmp@plt+0x1fc38>
  423378:	cmp    eax,0x2
  42337b:	je     423427 <strcmp@plt+0x1fc8f>
  423381:	cmp    eax,0x1
  423384:	jne    4233e3 <strcmp@plt+0x1fc4b>
  423386:	lea    rax,[rip+0x41a33]        # 464dc0 <strcmp@plt+0x61628>
  42338d:	cmp    DWORD PTR [rax],0x3
  423390:	jl     423420 <strcmp@plt+0x1fc88>
  423396:	lea    rsi,[rip+0x26524]        # 4498c1 <strcmp@plt+0x46129>
  42339d:	mov    edi,0x7
  4233a2:	xor    eax,eax
  4233a4:	call   42e520 <strcmp@plt+0x2ad88>
  4233a9:	jmp    4233e0 <strcmp@plt+0x1fc48>
  4233ab:	lea    rax,[rip+0x41a0e]        # 464dc0 <strcmp@plt+0x61628>
  4233b2:	xor    ebp,ebp
  4233b4:	cmp    DWORD PTR [rax],0x2
  4233b7:	jl     423437 <strcmp@plt+0x1fc9f>
  4233b9:	lea    rsi,[rip+0x262db]        # 44969b <strcmp@plt+0x45f03>
  4233c0:	xor    ebp,ebp
  4233c2:	mov    edi,0x6
  4233c7:	xor    eax,eax
  4233c9:	call   42e520 <strcmp@plt+0x2ad88>
  4233ce:	jmp    423437 <strcmp@plt+0x1fc9f>
  4233d0:	mov    rdi,rbx
  4233d3:	call   428210 <strcmp@plt+0x24a78>
  4233d8:	mov    rdi,rax
  4233db:	test   rax,rax
  4233de:	jne    42342a <strcmp@plt+0x1fc92>
  4233e0:	mov    eax,DWORD PTR [rbx+0x18]
  4233e3:	cmp    eax,0x1
  4233e6:	je     423420 <strcmp@plt+0x1fc88>
  4233e8:	xor    ebp,ebp
  4233ea:	cmp    eax,0x3
  4233ed:	je     423410 <strcmp@plt+0x1fc78>
  4233ef:	cmp    eax,0x2
  4233f2:	jne    423437 <strcmp@plt+0x1fc9f>
  4233f4:	lea    rax,[rip+0x419c5]        # 464dc0 <strcmp@plt+0x61628>
  4233fb:	cmp    DWORD PTR [rax],0x3
  4233fe:	jl     423437 <strcmp@plt+0x1fc9f>
  423400:	lea    rsi,[rip+0x26488]        # 44988f <strcmp@plt+0x460f7>
  423407:	xor    ebp,ebp
  423409:	mov    edi,0x7
  42340e:	jmp    4233c7 <strcmp@plt+0x1fc2f>
  423410:	mov    rdi,rbx
  423413:	call   4281a0 <strcmp@plt+0x24a08>
  423418:	mov    rbx,rax
  42341b:	test   rax,rax
  42341e:	je     423437 <strcmp@plt+0x1fc9f>
  423420:	mov    DWORD PTR [rbx+0x18],0x2
  423427:	mov    rdi,rbx
  42342a:	mov    rsi,r14
  42342d:	call   424190 <strcmp@plt+0x209f8>
  423432:	mov    ebp,0x1
  423437:	mov    eax,ebp
  423439:	pop    rbx
  42343a:	pop    r14
  42343c:	pop    rbp
  42343d:	ret    
  42343e:	xchg   ax,ax
  423440:	test   rdi,rdi
  423443:	je     42346f <strcmp@plt+0x1fcd7>
  423445:	push   r14
  423447:	push   rbx
  423448:	push   rax
  423449:	mov    rbx,rdi
  42344c:	mov    edi,0x20
  423451:	call   431d60 <strcmp@plt+0x2e5c8>
  423456:	mov    r14,rax
  423459:	mov    rdi,rax
  42345c:	mov    rsi,rbx
  42345f:	call   423260 <strcmp@plt+0x1fac8>
  423464:	mov    rax,r14
  423467:	add    rsp,0x8
  42346b:	pop    rbx
  42346c:	pop    r14
  42346e:	ret    
  42346f:	xor    eax,eax
  423471:	ret    
  423472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42347c:	nop    DWORD PTR [rax+0x0]
  423480:	push   r14
  423482:	push   rbx
  423483:	push   rax
  423484:	mov    rbx,rsi
  423487:	mov    edx,DWORD PTR [rsi+0x18]
  42348a:	cmp    edx,0x3
  42348d:	je     4234ac <strcmp@plt+0x1fd14>
  42348f:	mov    r14,rdi
  423492:	cmp    edx,0x2
  423495:	je     4234da <strcmp@plt+0x1fd42>
  423497:	cmp    edx,0x1
  42349a:	jne    423501 <strcmp@plt+0x1fd69>
  42349c:	mov    rdi,r14
  42349f:	mov    rsi,rbx
  4234a2:	call   423d90 <strcmp@plt+0x205f8>
  4234a7:	mov    rdi,rbx
  4234aa:	jmp    4234f8 <strcmp@plt+0x1fd60>
  4234ac:	lea    rax,[rip+0x4190d]        # 464dc0 <strcmp@plt+0x61628>
  4234b3:	cmp    DWORD PTR [rax],0x3
  4234b6:	jl     42350d <strcmp@plt+0x1fd75>
  4234b8:	mov    rdi,rbx
  4234bb:	call   4267e0 <strcmp@plt+0x23048>
  4234c0:	lea    rsi,[rip+0x26212]        # 4496d9 <strcmp@plt+0x45f41>
  4234c7:	xor    ebx,ebx
  4234c9:	mov    edi,0x7
  4234ce:	mov    rdx,rax
  4234d1:	xor    eax,eax
  4234d3:	call   42e520 <strcmp@plt+0x2ad88>
  4234d8:	jmp    423526 <strcmp@plt+0x1fd8e>
  4234da:	mov    rdi,rbx
  4234dd:	call   424110 <strcmp@plt+0x20978>
  4234e2:	mov    rdi,r14
  4234e5:	mov    rsi,rax
  4234e8:	call   423d90 <strcmp@plt+0x205f8>
  4234ed:	mov    rdi,rbx
  4234f0:	call   424110 <strcmp@plt+0x20978>
  4234f5:	mov    rdi,rax
  4234f8:	call   423a70 <strcmp@plt+0x202d8>
  4234fd:	mov    ebx,eax
  4234ff:	jmp    423526 <strcmp@plt+0x1fd8e>
  423501:	lea    rax,[rip+0x418b8]        # 464dc0 <strcmp@plt+0x61628>
  423508:	cmp    DWORD PTR [rax],0x3
  42350b:	jge    423511 <strcmp@plt+0x1fd79>
  42350d:	xor    ebx,ebx
  42350f:	jmp    423526 <strcmp@plt+0x1fd8e>
  423511:	lea    rsi,[rip+0x261fe]        # 449716 <strcmp@plt+0x45f7e>
  423518:	xor    ebx,ebx
  42351a:	mov    edi,0x7
  42351f:	xor    eax,eax
  423521:	call   42e520 <strcmp@plt+0x2ad88>
  423526:	movzx  eax,bl
  423529:	add    rsp,0x8
  42352d:	pop    rbx
  42352e:	pop    r14
  423530:	ret    
  423531:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42353b:	nop    DWORD PTR [rax+rax*1+0x0]
  423540:	push   rbx
  423541:	mov    edx,DWORD PTR [rsi+0x18]
  423544:	cmp    rdx,0x3
  423548:	ja     42358d <strcmp@plt+0x1fdf5>
  42354a:	mov    rbx,rdi
  42354d:	lea    rax,[rip+0x25dcc]        # 449320 <strcmp@plt+0x45b88>
  423554:	movsxd rcx,DWORD PTR [rax+rdx*4]
  423558:	add    rcx,rax
  42355b:	jmp    rcx
  42355d:	mov    WORD PTR [rbx],0x0
  423562:	mov    ebx,0x2
  423567:	jmp    4235b0 <strcmp@plt+0x1fe18>
  423569:	mov    rdi,rbx
  42356c:	jmp    42357c <strcmp@plt+0x1fde4>
  42356e:	mov    rdi,rsi
  423571:	call   424110 <strcmp@plt+0x20978>
  423576:	mov    rdi,rbx
  423579:	mov    rsi,rax
  42357c:	xor    edx,edx
  42357e:	pop    rbx
  42357f:	jmp    423e00 <strcmp@plt+0x20668>
  423584:	mov    rdi,rbx
  423587:	pop    rbx
  423588:	jmp    426b90 <strcmp@plt+0x233f8>
  42358d:	lea    rax,[rip+0x4182c]        # 464dc0 <strcmp@plt+0x61628>
  423594:	xor    ebx,ebx
  423596:	cmp    DWORD PTR [rax],0x3
  423599:	jl     4235b0 <strcmp@plt+0x1fe18>
  42359b:	lea    rsi,[rip+0x261a3]        # 449745 <strcmp@plt+0x45fad>
  4235a2:	xor    ebx,ebx
  4235a4:	mov    edi,0x7
  4235a9:	xor    eax,eax
  4235ab:	call   42e520 <strcmp@plt+0x2ad88>
  4235b0:	mov    eax,ebx
  4235b2:	pop    rbx
  4235b3:	ret    
  4235b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4235be:	xchg   ax,ax
  4235c0:	push   rbx
  4235c1:	test   rsi,rsi
  4235c4:	je     4235f8 <strcmp@plt+0x1fe60>
  4235c6:	mov    rbx,rsi
  4235c9:	movbe  ax,WORD PTR [rdi]
  4235ce:	movzx  edx,ax
  4235d1:	lea    ecx,[rax-0x1]
  4235d4:	cmp    cx,0x2
  4235d8:	jb     42361d <strcmp@plt+0x1fe85>
  4235da:	test   ax,ax
  4235dd:	je     423630 <strcmp@plt+0x1fe98>
  4235df:	cmp    edx,0x4003
  4235e5:	jne    42363e <strcmp@plt+0x1fea6>
  4235e7:	mov    rsi,rbx
  4235ea:	call   4266d0 <strcmp@plt+0x22f38>
  4235ef:	mov    DWORD PTR [rbx+0x18],0x3
  4235f6:	pop    rbx
  4235f7:	ret    
  4235f8:	lea    rax,[rip+0x417c1]        # 464dc0 <strcmp@plt+0x61628>
  4235ff:	xor    ebx,ebx
  423601:	cmp    DWORD PTR [rax],0x3
  423604:	jl     423661 <strcmp@plt+0x1fec9>
  423606:	lea    rsi,[rip+0x2615f]        # 44976c <strcmp@plt+0x45fd4>
  42360d:	xor    ebx,ebx
  42360f:	mov    edi,0x7
  423614:	xor    eax,eax
  423616:	call   42e520 <strcmp@plt+0x2ad88>
  42361b:	jmp    423661 <strcmp@plt+0x1fec9>
  42361d:	mov    esi,edx
  42361f:	mov    rdx,rbx
  423622:	call   423f90 <strcmp@plt+0x207f8>
  423627:	mov    DWORD PTR [rbx+0x18],0x1
  42362e:	pop    rbx
  42362f:	ret    
  423630:	mov    DWORD PTR [rbx+0x18],0x0
  423637:	mov    ebx,0x2
  42363c:	jmp    423661 <strcmp@plt+0x1fec9>
  42363e:	lea    rax,[rip+0x4177b]        # 464dc0 <strcmp@plt+0x61628>
  423645:	xor    ebx,ebx
  423647:	cmp    DWORD PTR [rax],0x2
  42364a:	jl     423661 <strcmp@plt+0x1fec9>
  42364c:	lea    rsi,[rip+0x2614b]        # 44979e <strcmp@plt+0x46006>
  423653:	xor    ebx,ebx
  423655:	mov    edi,0x6
  42365a:	xor    eax,eax
  42365c:	call   42e520 <strcmp@plt+0x2ad88>
  423661:	mov    eax,ebx
  423663:	pop    rbx
  423664:	ret    
  423665:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42366f:	nop
  423670:	push   rbp
  423671:	push   r14
  423673:	push   rbx
  423674:	test   rdi,rdi
  423677:	je     4236b7 <strcmp@plt+0x1ff1f>
  423679:	mov    rbx,rsi
  42367c:	test   rsi,rsi
  42367f:	je     4236b7 <strcmp@plt+0x1ff1f>
  423681:	mov    rbp,rdi
  423684:	mov    edx,DWORD PTR [rdi+0x18]
  423687:	mov    ecx,DWORD PTR [rbx+0x18]
  42368a:	cmp    edx,ecx
  42368c:	jne    4236e5 <strcmp@plt+0x1ff4d>
  42368e:	cmp    edx,0x3
  423691:	ja     42370c <strcmp@plt+0x1ff74>
  423693:	mov    eax,edx
  423695:	lea    rcx,[rip+0x25c94]        # 449330 <strcmp@plt+0x45b98>
  42369c:	movsxd rax,DWORD PTR [rcx+rax*4]
  4236a0:	add    rax,rcx
  4236a3:	jmp    rax
  4236a5:	xor    r14d,r14d
  4236a8:	cmp    rbp,rbx
  4236ab:	setne  r14b
  4236af:	add    r14d,r14d
  4236b2:	jmp    423765 <strcmp@plt+0x1ffcd>
  4236b7:	lea    rax,[rip+0x41702]        # 464dc0 <strcmp@plt+0x61628>
  4236be:	mov    r14d,0xffffffff
  4236c4:	cmp    DWORD PTR [rax],0x3
  4236c7:	jl     423765 <strcmp@plt+0x1ffcd>
  4236cd:	lea    rsi,[rip+0x260ff]        # 4497d3 <strcmp@plt+0x4603b>
  4236d4:	mov    edi,0x7
  4236d9:	xor    eax,eax
  4236db:	call   42e520 <strcmp@plt+0x2ad88>
  4236e0:	jmp    423765 <strcmp@plt+0x1ffcd>
  4236e5:	lea    rax,[rip+0x416d4]        # 464dc0 <strcmp@plt+0x61628>
  4236ec:	mov    r14d,0xffffffff
  4236f2:	cmp    DWORD PTR [rax],0x3
  4236f5:	jl     423765 <strcmp@plt+0x1ffcd>
  4236f7:	lea    rsi,[rip+0x2610a]        # 449808 <strcmp@plt+0x46070>
  4236fe:	mov    edi,0x7
  423703:	xor    eax,eax
  423705:	call   42e520 <strcmp@plt+0x2ad88>
  42370a:	jmp    423765 <strcmp@plt+0x1ffcd>
  42370c:	mov    r14d,0xffffffff
  423712:	jmp    423765 <strcmp@plt+0x1ffcd>
  423714:	mov    rdi,rbp
  423717:	mov    rsi,rbx
  42371a:	pop    rbx
  42371b:	pop    r14
  42371d:	pop    rbp
  42371e:	jmp    423ef0 <strcmp@plt+0x20758>
  423723:	mov    rdi,rbp
  423726:	call   424110 <strcmp@plt+0x20978>
  42372b:	mov    r14,rax
  42372e:	mov    rdi,rbx
  423731:	call   424110 <strcmp@plt+0x20978>
  423736:	mov    rdi,r14
  423739:	mov    rsi,rax
  42373c:	call   423ef0 <strcmp@plt+0x20758>
  423741:	mov    r14d,eax
  423744:	test   eax,eax
  423746:	jne    423765 <strcmp@plt+0x1ffcd>
  423748:	mov    rdi,rbp
  42374b:	call   424100 <strcmp@plt+0x20968>
  423750:	mov    ebp,eax
  423752:	mov    rdi,rbx
  423755:	call   424100 <strcmp@plt+0x20968>
  42375a:	mov    r14d,0x1
  423760:	cmp    bpl,al
  423763:	jae    42377c <strcmp@plt+0x1ffe4>
  423765:	mov    eax,r14d
  423768:	pop    rbx
  423769:	pop    r14
  42376b:	pop    rbp
  42376c:	ret    
  42376d:	mov    rdi,rbp
  423770:	mov    rsi,rbx
  423773:	pop    rbx
  423774:	pop    r14
  423776:	pop    rbp
  423777:	jmp    426bf0 <strcmp@plt+0x23458>
  42377c:	seta   al
  42377f:	movzx  eax,al
  423782:	add    eax,eax
  423784:	jmp    423768 <strcmp@plt+0x1ffd0>
  423786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423790:	push   rbp
  423791:	push   rbx
  423792:	push   rax
  423793:	test   rdi,rdi
  423796:	je     423814 <strcmp@plt+0x2007c>
  423798:	mov    rbx,rsi
  42379b:	test   rsi,rsi
  42379e:	je     423814 <strcmp@plt+0x2007c>
  4237a0:	mov    ecx,DWORD PTR [rdi+0x18]
  4237a3:	mov    eax,0x1
  4237a8:	cmp    ecx,DWORD PTR [rbx+0x18]
  4237ab:	jg     423819 <strcmp@plt+0x20081>
  4237ad:	mov    eax,0x2
  4237b2:	jl     423819 <strcmp@plt+0x20081>
  4237b4:	lea    eax,[rcx-0x1]
  4237b7:	cmp    eax,0x2
  4237ba:	jb     4237cb <strcmp@plt+0x20033>
  4237bc:	test   ecx,ecx
  4237be:	je     4237f1 <strcmp@plt+0x20059>
  4237c0:	cmp    ecx,0x3
  4237c3:	jne    4237f5 <strcmp@plt+0x2005d>
  4237c5:	mov    ebp,DWORD PTR [rdi]
  4237c7:	mov    ecx,DWORD PTR [rbx]
  4237c9:	jmp    4237de <strcmp@plt+0x20046>
  4237cb:	call   422ef0 <strcmp@plt+0x1f758>
  4237d0:	movzx  ebp,ax
  4237d3:	mov    rdi,rbx
  4237d6:	call   422ef0 <strcmp@plt+0x1f758>
  4237db:	movzx  ecx,ax
  4237de:	mov    eax,0x1
  4237e3:	cmp    ebp,ecx
  4237e5:	jg     423819 <strcmp@plt+0x20081>
  4237e7:	setl   al
  4237ea:	movzx  eax,al
  4237ed:	add    eax,eax
  4237ef:	jmp    423819 <strcmp@plt+0x20081>
  4237f1:	mov    eax,ecx
  4237f3:	jmp    423819 <strcmp@plt+0x20081>
  4237f5:	lea    rax,[rip+0x415c4]        # 464dc0 <strcmp@plt+0x61628>
  4237fc:	cmp    DWORD PTR [rax],0x0
  4237ff:	jle    423814 <strcmp@plt+0x2007c>
  423801:	lea    rsi,[rip+0x26036]        # 44983e <strcmp@plt+0x460a6>
  423808:	mov    edi,0x5
  42380d:	xor    eax,eax
  42380f:	call   42e520 <strcmp@plt+0x2ad88>
  423814:	mov    eax,0xfffffffe
  423819:	add    rsp,0x8
  42381d:	pop    rbx
  42381e:	pop    rbp
  42381f:	ret    
  423820:	mov    QWORD PTR [rdi+0x8],rsi
  423824:	ret    
  423825:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42382f:	nop
  423830:	mov    rax,QWORD PTR [rdi+0x8]
  423834:	ret    
  423835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42383f:	nop
  423840:	mov    DWORD PTR [rdi],esi
  423842:	ret    
  423843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42384d:	nop    DWORD PTR [rax]
  423850:	mov    DWORD PTR [rdi+0x18],0x1
  423857:	movzx  edx,dl
  42385a:	jmp    423c10 <strcmp@plt+0x20478>
  42385f:	nop
  423860:	push   rax
  423861:	mov    DWORD PTR [rdi+0x18],0x1
  423868:	call   423d70 <strcmp@plt+0x205d8>
  42386d:	mov    eax,0x1
  423872:	pop    rcx
  423873:	ret    
  423874:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42387e:	xchg   ax,ax
  423880:	push   rax
  423881:	mov    DWORD PTR [rdi+0x18],0x2
  423888:	call   424130 <strcmp@plt+0x20998>
  42388d:	mov    eax,0x1
  423892:	pop    rcx
  423893:	ret    
  423894:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42389e:	xchg   ax,ax
  4238a0:	push   rax
  4238a1:	mov    DWORD PTR [rdi+0x18],0x3
  4238a8:	call   426ac0 <strcmp@plt+0x23328>
  4238ad:	mov    eax,0x1
  4238b2:	pop    rcx
  4238b3:	ret    
  4238b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4238be:	xchg   ax,ax
  4238c0:	push   rbx
  4238c1:	mov    bx,0x1
  4238c5:	lea    eax,[rdi-0x1]
  4238c8:	cmp    ax,0x2
  4238cc:	jb     4238f4 <strcmp@plt+0x2015c>
  4238ce:	movzx  edx,di
  4238d1:	cmp    edx,0x4003
  4238d7:	jne    4238df <strcmp@plt+0x20147>
  4238d9:	mov    bx,0x3
  4238dd:	jmp    4238f4 <strcmp@plt+0x2015c>
  4238df:	lea    rsi,[rip+0x25f75]        # 44985b <strcmp@plt+0x460c3>
  4238e6:	xor    ebx,ebx
  4238e8:	mov    edi,0x3
  4238ed:	xor    eax,eax
  4238ef:	call   42e520 <strcmp@plt+0x2ad88>
  4238f4:	mov    eax,ebx
  4238f6:	pop    rbx
  4238f7:	ret    
  4238f8:	nop    DWORD PTR [rax+rax*1+0x0]
  423900:	push   rax
  423901:	xor    eax,eax
  423903:	test   rdi,rdi
  423906:	je     42391e <strcmp@plt+0x20186>
  423908:	cmp    DWORD PTR [rdi+0x18],0x3
  42390c:	jne    423920 <strcmp@plt+0x20188>
  42390e:	call   426920 <strcmp@plt+0x23188>
  423913:	mov    ecx,eax
  423915:	mov    eax,0x1
  42391a:	test   ecx,ecx
  42391c:	je     423920 <strcmp@plt+0x20188>
  42391e:	pop    rcx
  42391f:	ret    
  423920:	xor    eax,eax
  423922:	pop    rcx
  423923:	ret    
  423924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42392e:	xchg   ax,ax
  423930:	cmp    DWORD PTR [rdi+0x18],0x3
  423934:	jne    42393b <strcmp@plt+0x201a3>
  423936:	jmp    426650 <strcmp@plt+0x22eb8>
  42393b:	ret    
  42393c:	nop    DWORD PTR [rax+0x0]
  423940:	push   rbx
  423941:	mov    rbx,rsi
  423944:	call   4242b0 <strcmp@plt+0x20b18>
  423949:	xor    ecx,ecx
  42394b:	cmp    eax,0x1
  42394e:	sete   cl
  423951:	mov    DWORD PTR [rbx+0x18],ecx
  423954:	mov    eax,ecx
  423956:	pop    rbx
  423957:	ret    
  423958:	nop    DWORD PTR [rax+rax*1+0x0]
  423960:	push   rbx
  423961:	mov    rbx,rsi
  423964:	call   424320 <strcmp@plt+0x20b88>
  423969:	xor    ecx,ecx
  42396b:	cmp    eax,0x1
  42396e:	sete   cl
  423971:	lea    eax,[rcx+rcx*1]
  423974:	mov    DWORD PTR [rbx+0x18],eax
  423977:	mov    eax,ecx
  423979:	pop    rbx
  42397a:	ret    
  42397b:	nop    DWORD PTR [rax+rax*1+0x0]
  423980:	mov    eax,DWORD PTR [rdi+0x18]
  423983:	cmp    rax,0x3
  423987:	ja     42399c <strcmp@plt+0x20204>
  423989:	lea    rcx,[rip+0x259b0]        # 449340 <strcmp@plt+0x45ba8>
  423990:	movsxd rdx,DWORD PTR [rcx+rax*4]
  423994:	add    rdx,rcx
  423997:	jmp    rdx
  423999:	mov    eax,DWORD PTR [rdi]
  42399b:	ret    
  42399c:	mov    eax,0xffffffff
  4239a1:	ret    
  4239a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4239ac:	nop    DWORD PTR [rax+0x0]
  4239b0:	add    rdi,0x4
  4239b4:	jmp    433d10 <strcmp@plt+0x30578>
  4239b9:	nop    DWORD PTR [rax+0x0]
  4239c0:	push   rbx
  4239c1:	mov    rbx,rdi
  4239c4:	mov    al,BYTE PTR [rdi]
  4239c6:	mov    BYTE PTR [rdi+0x7],0x0
  4239ca:	mov    ecx,eax
  4239cc:	and    cl,0x8f
  4239cf:	mov    BYTE PTR [rdi],cl
  4239d1:	mov    WORD PTR [rdi+0x1],0x0
  4239d7:	mov    BYTE PTR [rdi+0x3],0x0
  4239db:	test   esi,esi
  4239dd:	je     4239f1 <strcmp@plt+0x20259>
  4239df:	or     cl,0x8
  4239e2:	mov    BYTE PTR [rbx],cl
  4239e4:	lea    rdi,[rbx+0x4]
  4239e8:	call   433cf0 <strcmp@plt+0x30558>
  4239ed:	mov    al,BYTE PTR [rbx]
  4239ef:	jmp    4239ff <strcmp@plt+0x20267>
  4239f1:	and    al,0x87
  4239f3:	mov    BYTE PTR [rbx],al
  4239f5:	mov    WORD PTR [rbx+0x4],0x0
  4239fb:	mov    BYTE PTR [rbx+0x6],0x0
  4239ff:	and    al,0x78
  423a01:	mov    BYTE PTR [rbx],al
  423a03:	pop    rbx
  423a04:	ret    
  423a05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a0f:	nop
  423a10:	mov    edi,0x14
  423a15:	jmp    431d60 <strcmp@plt+0x2e5c8>
  423a1a:	nop    WORD PTR [rax+rax*1+0x0]
  423a20:	jmp    403790 <free@plt>
  423a25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a2f:	nop
  423a30:	mov    eax,DWORD PTR [rdi]
  423a32:	ret    
  423a33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a3d:	nop    DWORD PTR [rax]
  423a40:	lea    rax,[rdi+0x4]
  423a44:	ret    
  423a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a4f:	nop
  423a50:	lea    rax,[rdi+0x4]
  423a54:	ret    
  423a55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a5f:	nop
  423a60:	lea    rax,[rdi+0x4]
  423a64:	ret    
  423a65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423a6f:	nop
  423a70:	push   rbx
  423a71:	mov    eax,DWORD PTR [rdi]
  423a73:	cmp    ax,0x2
  423a77:	je     423a83 <strcmp@plt+0x202eb>
  423a79:	cmp    ax,0xa
  423a7d:	jne    423a87 <strcmp@plt+0x202ef>
  423a7f:	mov    bl,0x10
  423a81:	jmp    423a9f <strcmp@plt+0x20307>
  423a83:	mov    bl,0x4
  423a85:	jmp    423a9f <strcmp@plt+0x20307>
  423a87:	movzx  edx,ax
  423a8a:	lea    rsi,[rip+0x25ff0]        # 449a81 <strcmp@plt+0x462e9>
  423a91:	xor    ebx,ebx
  423a93:	mov    edi,0x3
  423a98:	xor    eax,eax
  423a9a:	call   42e520 <strcmp@plt+0x2ad88>
  423a9f:	mov    eax,ebx
  423aa1:	pop    rbx
  423aa2:	ret    
  423aa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423aad:	nop    DWORD PTR [rax]
  423ab0:	push   rbx
  423ab1:	cmp    di,0x2
  423ab5:	je     423ac1 <strcmp@plt+0x20329>
  423ab7:	cmp    di,0xa
  423abb:	jne    423ac5 <strcmp@plt+0x2032d>
  423abd:	mov    bl,0x10
  423abf:	jmp    423add <strcmp@plt+0x20345>
  423ac1:	mov    bl,0x4
  423ac3:	jmp    423add <strcmp@plt+0x20345>
  423ac5:	movzx  edx,di
  423ac8:	lea    rsi,[rip+0x25fb2]        # 449a81 <strcmp@plt+0x462e9>
  423acf:	xor    ebx,ebx
  423ad1:	mov    edi,0x3
  423ad6:	xor    eax,eax
  423ad8:	call   42e520 <strcmp@plt+0x2ad88>
  423add:	mov    eax,ebx
  423adf:	pop    rbx
  423ae0:	ret    
  423ae1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423aeb:	nop    DWORD PTR [rax+rax*1+0x0]
  423af0:	push   rax
  423af1:	mov    eax,DWORD PTR [rdi]
  423af3:	cmp    ax,0x2
  423af7:	je     423b03 <strcmp@plt+0x2036b>
  423af9:	cmp    ax,0xa
  423afd:	jne    423b07 <strcmp@plt+0x2036f>
  423aff:	mov    al,0x12
  423b01:	pop    rcx
  423b02:	ret    
  423b03:	mov    al,0x6
  423b05:	pop    rcx
  423b06:	ret    
  423b07:	movzx  edx,ax
  423b0a:	lea    rsi,[rip+0x25f70]        # 449a81 <strcmp@plt+0x462e9>
  423b11:	mov    edi,0x3
  423b16:	xor    eax,eax
  423b18:	call   42e520 <strcmp@plt+0x2ad88>
  423b1d:	mov    al,0x2
  423b1f:	pop    rcx
  423b20:	ret    
  423b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  423b30:	push   rbx
  423b31:	mov    eax,DWORD PTR [rdi]
  423b33:	cmp    ax,0x2
  423b37:	je     423b45 <strcmp@plt+0x203ad>
  423b39:	cmp    ax,0xa
  423b3d:	jne    423b4b <strcmp@plt+0x203b3>
  423b3f:	mov    bx,0x2
  423b43:	jmp    423b63 <strcmp@plt+0x203cb>
  423b45:	mov    bx,0x1
  423b49:	jmp    423b63 <strcmp@plt+0x203cb>
  423b4b:	movzx  edx,ax
  423b4e:	lea    rsi,[rip+0x25eda]        # 449a2f <strcmp@plt+0x46297>
  423b55:	xor    ebx,ebx
  423b57:	mov    edi,0x3
  423b5c:	xor    eax,eax
  423b5e:	call   42e520 <strcmp@plt+0x2ad88>
  423b63:	mov    eax,ebx
  423b65:	pop    rbx
  423b66:	ret    
  423b67:	nop    WORD PTR [rax+rax*1+0x0]
  423b70:	push   rbx
  423b71:	cmp    di,0x2
  423b75:	je     423b83 <strcmp@plt+0x203eb>
  423b77:	cmp    di,0xa
  423b7b:	jne    423b89 <strcmp@plt+0x203f1>
  423b7d:	mov    bx,0x2
  423b81:	jmp    423ba1 <strcmp@plt+0x20409>
  423b83:	mov    bx,0x1
  423b87:	jmp    423ba1 <strcmp@plt+0x20409>
  423b89:	movzx  edx,di
  423b8c:	lea    rsi,[rip+0x25e9c]        # 449a2f <strcmp@plt+0x46297>
  423b93:	xor    ebx,ebx
  423b95:	mov    edi,0x3
  423b9a:	xor    eax,eax
  423b9c:	call   42e520 <strcmp@plt+0x2ad88>
  423ba1:	mov    eax,ebx
  423ba3:	pop    rbx
  423ba4:	ret    
  423ba5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423baf:	nop
  423bb0:	push   rbx
  423bb1:	mov    edx,esi
  423bb3:	cmp    esi,0xa
  423bb6:	ja     423bcb <strcmp@plt+0x20433>
  423bb8:	mov    eax,0x405
  423bbd:	bt     eax,edx
  423bc0:	jae    423bcb <strcmp@plt+0x20433>
  423bc2:	mov    DWORD PTR [rdi],edx
  423bc4:	mov    ebx,0x1
  423bc9:	jmp    423be0 <strcmp@plt+0x20448>
  423bcb:	lea    rsi,[rip+0x25d56]        # 449928 <strcmp@plt+0x46190>
  423bd2:	xor    ebx,ebx
  423bd4:	mov    edi,0x3
  423bd9:	xor    eax,eax
  423bdb:	call   42e520 <strcmp@plt+0x2ad88>
  423be0:	mov    eax,ebx
  423be2:	pop    rbx
  423be3:	ret    
  423be4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423bee:	xchg   ax,ax
  423bf0:	mov    DWORD PTR [rdi],0x2
  423bf6:	mov    eax,DWORD PTR [rsi]
  423bf8:	mov    DWORD PTR [rdi+0x4],eax
  423bfb:	ret    
  423bfc:	nop    DWORD PTR [rax+0x0]
  423c00:	mov    DWORD PTR [rdi],0xa
  423c06:	vmovups xmm0,XMMWORD PTR [rsi]
  423c0a:	vmovups XMMWORD PTR [rdi+0x4],xmm0
  423c0f:	ret    
  423c10:	cmp    dl,0xa
  423c13:	je     423c26 <strcmp@plt+0x2048e>
  423c15:	cmp    dl,0x2
  423c18:	jne    423c36 <strcmp@plt+0x2049e>
  423c1a:	mov    DWORD PTR [rdi],0x2
  423c20:	mov    eax,DWORD PTR [rsi]
  423c22:	mov    DWORD PTR [rdi+0x4],eax
  423c25:	ret    
  423c26:	mov    DWORD PTR [rdi],0xa
  423c2c:	vmovups xmm0,XMMWORD PTR [rsi]
  423c30:	vmovups XMMWORD PTR [rdi+0x4],xmm0
  423c35:	ret    
  423c36:	movzx  edx,dl
  423c39:	lea    rsi,[rip+0x25d0d]        # 44994d <strcmp@plt+0x461b5>
  423c40:	mov    edi,0x3
  423c45:	xor    eax,eax
  423c47:	jmp    42e520 <strcmp@plt+0x2ad88>
  423c4c:	nop    DWORD PTR [rax+0x0]
  423c50:	push   rbx
  423c51:	mov    rsi,rdi
  423c54:	mov    eax,DWORD PTR [rdi]
  423c56:	add    rsi,0x4
  423c5a:	mov    ecx,DWORD PTR [rip+0x47088]        # 46ace8 <strcmp@plt+0x67550>
  423c60:	mov    edx,ecx
  423c62:	inc    edx
  423c64:	mov    edi,0xcccccccd
  423c69:	imul   rdi,rdx
  423c6d:	shr    rdi,0x23
  423c71:	add    edi,edi
  423c73:	lea    edx,[rdi+rdi*4]
  423c76:	neg    edx
  423c78:	lea    ecx,[rcx+rdx*1]
  423c7b:	add    ecx,0x1
  423c7e:	mov    DWORD PTR [rip+0x47064],ecx        # 46ace8 <strcmp@plt+0x67550>
  423c84:	imul   rcx,rcx,0x2f
  423c88:	lea    rbx,[rip+0x46e81]        # 46ab10 <strcmp@plt+0x67378>
  423c8f:	lea    rdx,[rbx+rcx*1]
  423c93:	mov    BYTE PTR [rcx+rbx*1],0x0
  423c97:	cmp    eax,0xa
  423c9a:	je     423cad <strcmp@plt+0x20515>
  423c9c:	cmp    eax,0x2
  423c9f:	jne    423ccb <strcmp@plt+0x20533>
  423ca1:	mov    edi,0x2
  423ca6:	mov    ecx,0x10
  423cab:	jmp    423cb7 <strcmp@plt+0x2051f>
  423cad:	mov    edi,0xa
  423cb2:	mov    ecx,0x2e
  423cb7:	call   403400 <inet_ntop@plt>
  423cbc:	mov    eax,DWORD PTR [rip+0x47026]        # 46ace8 <strcmp@plt+0x67550>
  423cc2:	imul   rax,rax,0x2f
  423cc6:	add    rbx,rax
  423cc9:	jmp    423ccd <strcmp@plt+0x20535>
  423ccb:	xor    ebx,ebx
  423ccd:	mov    rax,rbx
  423cd0:	pop    rbx
  423cd1:	ret    
  423cd2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423cdc:	nop    DWORD PTR [rax+0x0]
  423ce0:	push   rbx
  423ce1:	mov    rax,rdi
  423ce4:	mov    ecx,DWORD PTR [rip+0x46ffe]        # 46ace8 <strcmp@plt+0x67550>
  423cea:	mov    edx,ecx
  423cec:	inc    edx
  423cee:	mov    edi,0xcccccccd
  423cf3:	imul   rdi,rdx
  423cf7:	shr    rdi,0x23
  423cfb:	add    edi,edi
  423cfd:	lea    edx,[rdi+rdi*4]
  423d00:	neg    edx
  423d02:	lea    ecx,[rcx+rdx*1]
  423d05:	add    ecx,0x1
  423d08:	mov    DWORD PTR [rip+0x46fda],ecx        # 46ace8 <strcmp@plt+0x67550>
  423d0e:	imul   rcx,rcx,0x2f
  423d12:	lea    rbx,[rip+0x46df7]        # 46ab10 <strcmp@plt+0x67378>
  423d19:	lea    rdx,[rbx+rcx*1]
  423d1d:	mov    BYTE PTR [rcx+rbx*1],0x0
  423d21:	cmp    esi,0xa
  423d24:	je     423d3a <strcmp@plt+0x205a2>
  423d26:	cmp    esi,0x2
  423d29:	jne    423d5b <strcmp@plt+0x205c3>
  423d2b:	mov    edi,0x2
  423d30:	mov    rsi,rax
  423d33:	mov    ecx,0x10
  423d38:	jmp    423d47 <strcmp@plt+0x205af>
  423d3a:	mov    edi,0xa
  423d3f:	mov    rsi,rax
  423d42:	mov    ecx,0x2e
  423d47:	call   403400 <inet_ntop@plt>
  423d4c:	mov    eax,DWORD PTR [rip+0x46f96]        # 46ace8 <strcmp@plt+0x67550>
  423d52:	imul   rax,rax,0x2f
  423d56:	add    rbx,rax
  423d59:	jmp    423d5d <strcmp@plt+0x205c5>
  423d5b:	xor    ebx,ebx
  423d5d:	mov    rax,rbx
  423d60:	pop    rbx
  423d61:	ret    
  423d62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423d6c:	nop    DWORD PTR [rax+0x0]
  423d70:	test   rdi,rdi
  423d73:	je     423d88 <strcmp@plt+0x205f0>
  423d75:	test   rsi,rsi
  423d78:	je     423d88 <strcmp@plt+0x205f0>
  423d7a:	mov    eax,DWORD PTR [rsi+0x10]
  423d7d:	mov    DWORD PTR [rdi+0x10],eax
  423d80:	vmovups xmm0,XMMWORD PTR [rsi]
  423d84:	vmovups XMMWORD PTR [rdi],xmm0
  423d88:	ret    
  423d89:	nop    DWORD PTR [rax+0x0]
  423d90:	push   r15
  423d92:	push   r14
  423d94:	push   rbx
  423d95:	test   rdi,rdi
  423d98:	je     423dbf <strcmp@plt+0x20627>
  423d9a:	mov    rbx,rsi
  423d9d:	test   rsi,rsi
  423da0:	je     423dbf <strcmp@plt+0x20627>
  423da2:	mov    r14,rdi
  423da5:	mov    eax,DWORD PTR [rbx]
  423da7:	add    rbx,0x4
  423dab:	cmp    ax,0x2
  423daf:	je     423dc5 <strcmp@plt+0x2062d>
  423db1:	cmp    ax,0xa
  423db5:	jne    423dcd <strcmp@plt+0x20635>
  423db7:	mov    r15d,0x10
  423dbd:	jmp    423de6 <strcmp@plt+0x2064e>
  423dbf:	pop    rbx
  423dc0:	pop    r14
  423dc2:	pop    r15
  423dc4:	ret    
  423dc5:	mov    r15d,0x4
  423dcb:	jmp    423de6 <strcmp@plt+0x2064e>
  423dcd:	movzx  edx,ax
  423dd0:	lea    rsi,[rip+0x25caa]        # 449a81 <strcmp@plt+0x462e9>
  423dd7:	xor    r15d,r15d
  423dda:	mov    edi,0x3
  423ddf:	xor    eax,eax
  423de1:	call   42e520 <strcmp@plt+0x2ad88>
  423de6:	mov    rdi,r14
  423de9:	mov    rsi,rbx
  423dec:	mov    rdx,r15
  423def:	pop    rbx
  423df0:	pop    r14
  423df2:	pop    r15
  423df4:	jmp    403330 <memcpy@plt>
  423df9:	nop    DWORD PTR [rax+0x0]
  423e00:	push   rbp
  423e01:	push   r15
  423e03:	push   r14
  423e05:	push   rbx
  423e06:	push   rax
  423e07:	mov    r15d,edx
  423e0a:	mov    r14,rsi
  423e0d:	mov    rbx,rdi
  423e10:	mov    eax,DWORD PTR [rsi]
  423e12:	cmp    ax,0x2
  423e16:	je     423e24 <strcmp@plt+0x2068c>
  423e18:	cmp    ax,0xa
  423e1c:	jne    423e2a <strcmp@plt+0x20692>
  423e1e:	mov    bp,0x2
  423e22:	jmp    423e42 <strcmp@plt+0x206aa>
  423e24:	mov    bp,0x1
  423e28:	jmp    423e42 <strcmp@plt+0x206aa>
  423e2a:	movzx  edx,ax
  423e2d:	lea    rsi,[rip+0x25bfb]        # 449a2f <strcmp@plt+0x46297>
  423e34:	xor    ebp,ebp
  423e36:	mov    edi,0x3
  423e3b:	xor    eax,eax
  423e3d:	call   42e520 <strcmp@plt+0x2ad88>
  423e42:	movbe  WORD PTR [rbx],bp
  423e47:	add    rbx,0x2
  423e4b:	mov    eax,DWORD PTR [r14]
  423e4e:	test   r15b,r15b
  423e51:	je     423e62 <strcmp@plt+0x206ca>
  423e53:	cmp    eax,0x2
  423e56:	jne    423e62 <strcmp@plt+0x206ca>
  423e58:	mov    eax,DWORD PTR [r14+0x4]
  423e5c:	movbe  DWORD PTR [rbx],eax
  423e60:	jmp    423ea6 <strcmp@plt+0x2070e>
  423e62:	lea    r15,[r14+0x4]
  423e66:	cmp    ax,0x2
  423e6a:	je     423e79 <strcmp@plt+0x206e1>
  423e6c:	cmp    ax,0xa
  423e70:	jne    423e80 <strcmp@plt+0x206e8>
  423e72:	mov    ebp,0x10
  423e77:	jmp    423e98 <strcmp@plt+0x20700>
  423e79:	mov    ebp,0x4
  423e7e:	jmp    423e98 <strcmp@plt+0x20700>
  423e80:	movzx  edx,ax
  423e83:	lea    rsi,[rip+0x25bf7]        # 449a81 <strcmp@plt+0x462e9>
  423e8a:	xor    ebp,ebp
  423e8c:	mov    edi,0x3
  423e91:	xor    eax,eax
  423e93:	call   42e520 <strcmp@plt+0x2ad88>
  423e98:	mov    rdi,rbx
  423e9b:	mov    rsi,r15
  423e9e:	mov    rdx,rbp
  423ea1:	call   403330 <memcpy@plt>
  423ea6:	mov    eax,DWORD PTR [r14]
  423ea9:	cmp    ax,0x2
  423ead:	je     423ebc <strcmp@plt+0x20724>
  423eaf:	cmp    ax,0xa
  423eb3:	jne    423ec3 <strcmp@plt+0x2072b>
  423eb5:	mov    eax,0x12
  423eba:	jmp    423ede <strcmp@plt+0x20746>
  423ebc:	mov    eax,0x6
  423ec1:	jmp    423ede <strcmp@plt+0x20746>
  423ec3:	movzx  edx,ax
  423ec6:	lea    rsi,[rip+0x25bb4]        # 449a81 <strcmp@plt+0x462e9>
  423ecd:	mov    edi,0x3
  423ed2:	xor    eax,eax
  423ed4:	call   42e520 <strcmp@plt+0x2ad88>
  423ed9:	mov    eax,0x2
  423ede:	add    rsp,0x8
  423ee2:	pop    rbx
  423ee3:	pop    r14
  423ee5:	pop    r15
  423ee7:	pop    rbp
  423ee8:	ret    
  423ee9:	nop    DWORD PTR [rax+0x0]
  423ef0:	push   r15
  423ef2:	push   r14
  423ef4:	push   rbx
  423ef5:	mov    edx,DWORD PTR [rdi]
  423ef7:	mov    ecx,DWORD PTR [rsi]
  423ef9:	cmp    edx,ecx
  423efb:	jne    423f1f <strcmp@plt+0x20787>
  423efd:	mov    r14,rsi
  423f00:	mov    rbx,rdi
  423f03:	add    rbx,0x4
  423f07:	add    r14,0x4
  423f0b:	cmp    dx,0x2
  423f0f:	je     423f45 <strcmp@plt+0x207ad>
  423f11:	cmp    dx,0xa
  423f15:	jne    423f4d <strcmp@plt+0x207b5>
  423f17:	mov    r15d,0x10
  423f1d:	jmp    423f66 <strcmp@plt+0x207ce>
  423f1f:	lea    rax,[rip+0x40e9a]        # 464dc0 <strcmp@plt+0x61628>
  423f26:	mov    ebx,0xffffffff
  423f2b:	cmp    DWORD PTR [rax],0x3
  423f2e:	jl     423f7d <strcmp@plt+0x207e5>
  423f30:	lea    rsi,[rip+0x25a38]        # 44996f <strcmp@plt+0x461d7>
  423f37:	mov    edi,0x7
  423f3c:	xor    eax,eax
  423f3e:	call   42e520 <strcmp@plt+0x2ad88>
  423f43:	jmp    423f7d <strcmp@plt+0x207e5>
  423f45:	mov    r15d,0x4
  423f4b:	jmp    423f66 <strcmp@plt+0x207ce>
  423f4d:	movzx  edx,dx
  423f50:	lea    rsi,[rip+0x25b2a]        # 449a81 <strcmp@plt+0x462e9>
  423f57:	xor    r15d,r15d
  423f5a:	mov    edi,0x3
  423f5f:	xor    eax,eax
  423f61:	call   42e520 <strcmp@plt+0x2ad88>
  423f66:	mov    rdi,rbx
  423f69:	mov    rsi,r14
  423f6c:	mov    rdx,r15
  423f6f:	call   403200 <memcmp@plt>
  423f74:	mov    ebx,0x2
  423f79:	test   eax,eax
  423f7b:	jns    423f81 <strcmp@plt+0x207e9>
  423f7d:	mov    eax,ebx
  423f7f:	jmp    423f87 <strcmp@plt+0x207ef>
  423f81:	setne  al
  423f84:	movzx  eax,al
  423f87:	pop    rbx
  423f88:	pop    r14
  423f8a:	pop    r15
  423f8c:	ret    
  423f8d:	nop    DWORD PTR [rax]
  423f90:	push   rbp
  423f91:	push   r14
  423f93:	push   rbx
  423f94:	mov    rbx,rdx
  423f97:	cmp    si,0x2
  423f9b:	je     423fb6 <strcmp@plt+0x2081e>
  423f9d:	cmp    si,0x1
  423fa1:	jne    423fcd <strcmp@plt+0x20835>
  423fa3:	mov    DWORD PTR [rbx],0x2
  423fa9:	mov    eax,DWORD PTR [rdi+0x2]
  423fac:	mov    DWORD PTR [rbx+0x4],eax
  423faf:	mov    ebx,0x6
  423fb4:	jmp    42402d <strcmp@plt+0x20895>
  423fb6:	mov    DWORD PTR [rbx],0xa
  423fbc:	vmovups xmm0,XMMWORD PTR [rdi+0x2]
  423fc1:	vmovups XMMWORD PTR [rbx+0x4],xmm0
  423fc6:	mov    ebx,0x12
  423fcb:	jmp    42402d <strcmp@plt+0x20895>
  423fcd:	movzx  ebp,si
  423fd0:	lea    rsi,[rip+0x25a81]        # 449a58 <strcmp@plt+0x462c0>
  423fd7:	mov    edi,0x3
  423fdc:	mov    edx,ebp
  423fde:	xor    eax,eax
  423fe0:	call   42e520 <strcmp@plt+0x2ad88>
  423fe5:	mov    DWORD PTR [rbx],0x0
  423feb:	lea    r14,[rip+0x40dce]        # 464dc0 <strcmp@plt+0x61628>
  423ff2:	mov    ebx,0x2
  423ff7:	cmp    DWORD PTR [r14],0x3
  423ffb:	jl     42402d <strcmp@plt+0x20895>
  423ffd:	lea    rsi,[rip+0x25aca]        # 449ace <strcmp@plt+0x46336>
  424004:	mov    edi,0x7
  424009:	mov    edx,ebp
  42400b:	xor    eax,eax
  42400d:	call   42e520 <strcmp@plt+0x2ad88>
  424012:	cmp    DWORD PTR [r14],0x3
  424016:	jl     42402d <strcmp@plt+0x20895>
  424018:	lea    rsi,[rip+0x25aaf]        # 449ace <strcmp@plt+0x46336>
  42401f:	mov    edi,0x7
  424024:	mov    edx,ebp
  424026:	xor    eax,eax
  424028:	call   42e520 <strcmp@plt+0x2ad88>
  42402d:	mov    eax,ebx
  42402f:	pop    rbx
  424030:	pop    r14
  424032:	pop    rbp
  424033:	ret    
  424034:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42403e:	xchg   ax,ax
  424040:	push   rbx
  424041:	cmp    di,0x1
  424045:	je     424053 <strcmp@plt+0x208bb>
  424047:	cmp    di,0x2
  42404b:	jne    424059 <strcmp@plt+0x208c1>
  42404d:	mov    bx,0xa
  424051:	jmp    424071 <strcmp@plt+0x208d9>
  424053:	mov    bx,0x2
  424057:	jmp    424071 <strcmp@plt+0x208d9>
  424059:	movzx  edx,di
  42405c:	lea    rsi,[rip+0x259f5]        # 449a58 <strcmp@plt+0x462c0>
  424063:	xor    ebx,ebx
  424065:	mov    edi,0x3
  42406a:	xor    eax,eax
  42406c:	call   42e520 <strcmp@plt+0x2ad88>
  424071:	mov    eax,ebx
  424073:	pop    rbx
  424074:	ret    
  424075:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42407f:	nop
  424080:	push   rbx
  424081:	mov    edx,edi
  424083:	cmp    dx,0x1
  424087:	je     424093 <strcmp@plt+0x208fb>
  424089:	cmp    dx,0x2
  42408d:	jne    424097 <strcmp@plt+0x208ff>
  42408f:	mov    bl,0x10
  424091:	jmp    4240bc <strcmp@plt+0x20924>
  424093:	mov    bl,0x4
  424095:	jmp    4240bc <strcmp@plt+0x20924>
  424097:	lea    rax,[rip+0x40d22]        # 464dc0 <strcmp@plt+0x61628>
  42409e:	cmp    DWORD PTR [rax],0x3
  4240a1:	jge    4240a7 <strcmp@plt+0x2090f>
  4240a3:	xor    ebx,ebx
  4240a5:	jmp    4240bc <strcmp@plt+0x20924>
  4240a7:	lea    rsi,[rip+0x25a20]        # 449ace <strcmp@plt+0x46336>
  4240ae:	xor    ebx,ebx
  4240b0:	mov    edi,0x7
  4240b5:	xor    eax,eax
  4240b7:	call   42e520 <strcmp@plt+0x2ad88>
  4240bc:	mov    eax,ebx
  4240be:	pop    rbx
  4240bf:	ret    
  4240c0:	mov    eax,DWORD PTR [rdi]
  4240c2:	cmp    eax,0xa
  4240c5:	sete   cl
  4240c8:	shl    cl,0x7
  4240cb:	cmp    eax,0x2
  4240ce:	movzx  ecx,cl
  4240d1:	mov    eax,0x20
  4240d6:	cmovne eax,ecx
  4240d9:	ret    
  4240da:	nop    WORD PTR [rax+rax*1+0x0]
  4240e0:	xor    ecx,ecx
  4240e2:	cmp    edi,0xa
  4240e5:	sete   cl
  4240e8:	shl    ecx,0x7
  4240eb:	cmp    edi,0x2
  4240ee:	mov    eax,0x20
  4240f3:	cmovne eax,ecx
  4240f6:	ret    
  4240f7:	nop    WORD PTR [rax+rax*1+0x0]
  424100:	mov    al,BYTE PTR [rdi+0x14]
  424103:	ret    
  424104:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42410e:	xchg   ax,ax
  424110:	mov    rax,rdi
  424113:	ret    
  424114:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42411e:	xchg   ax,ax
  424120:	mov    al,BYTE PTR [rdi]
  424122:	ret    
  424123:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42412d:	nop    DWORD PTR [rax]
  424130:	test   rdi,rdi
  424133:	je     424148 <strcmp@plt+0x209b0>
  424135:	test   rsi,rsi
  424138:	je     424148 <strcmp@plt+0x209b0>
  42413a:	mov    eax,DWORD PTR [rsi+0x10]
  42413d:	mov    DWORD PTR [rdi+0x10],eax
  424140:	vmovups xmm0,XMMWORD PTR [rsi]
  424144:	vmovups XMMWORD PTR [rdi],xmm0
  424148:	mov    BYTE PTR [rdi+0x14],dl
  42414b:	ret    
  42414c:	nop    DWORD PTR [rax+0x0]
  424150:	mov    BYTE PTR [rdi+0x14],sil
  424154:	ret    
  424155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42415f:	nop
  424160:	mov    edx,esi
  424162:	cmp    esi,0xa
  424165:	ja     424174 <strcmp@plt+0x209dc>
  424167:	mov    eax,0x405
  42416c:	bt     eax,edx
  42416f:	jae    424174 <strcmp@plt+0x209dc>
  424171:	mov    DWORD PTR [rdi],edx
  424173:	ret    
  424174:	lea    rsi,[rip+0x257ad]        # 449928 <strcmp@plt+0x46190>
  42417b:	mov    edi,0x3
  424180:	xor    eax,eax
  424182:	jmp    42e520 <strcmp@plt+0x2ad88>
  424187:	nop    WORD PTR [rax+rax*1+0x0]
  424190:	mov    al,BYTE PTR [rsi+0x14]
  424193:	mov    BYTE PTR [rdi+0x14],al
  424196:	test   rdi,rdi
  424199:	je     4241ae <strcmp@plt+0x20a16>
  42419b:	test   rsi,rsi
  42419e:	je     4241ae <strcmp@plt+0x20a16>
  4241a0:	mov    eax,DWORD PTR [rsi+0x10]
  4241a3:	mov    DWORD PTR [rdi+0x10],eax
  4241a6:	vmovups xmm0,XMMWORD PTR [rsi]
  4241aa:	vmovups XMMWORD PTR [rdi],xmm0
  4241ae:	ret    
  4241af:	nop
  4241b0:	push   r15
  4241b2:	push   r14
  4241b4:	push   r12
  4241b6:	push   rbx
  4241b7:	push   rax
  4241b8:	mov    r14,rdi
  4241bb:	mov    eax,DWORD PTR [rip+0x4693f]        # 46ab00 <strcmp@plt+0x67368>
  4241c1:	mov    ecx,eax
  4241c3:	inc    ecx
  4241c5:	mov    edx,0xcccccccd
  4241ca:	imul   rcx,rdx
  4241ce:	shr    rcx,0x23
  4241d2:	add    ecx,ecx
  4241d4:	lea    ecx,[rcx+rcx*4]
  4241d7:	neg    ecx
  4241d9:	lea    eax,[rax+rcx*1]
  4241dc:	add    eax,0x1
  4241df:	mov    DWORD PTR [rip+0x4691b],eax        # 46ab00 <strcmp@plt+0x67368>
  4241e5:	imul   rax,rax,0x33
  4241e9:	lea    r12,[rip+0x46710]        # 46a900 <strcmp@plt+0x67168>
  4241f0:	lea    r15,[r12+rax*1]
  4241f4:	mov    BYTE PTR [rax+r12*1],0x0
  4241f9:	lea    rsi,[rdi+0x4]
  4241fd:	mov    eax,DWORD PTR [rdi]
  4241ff:	mov    ecx,DWORD PTR [rip+0x46ae3]        # 46ace8 <strcmp@plt+0x67550>
  424205:	mov    edi,ecx
  424207:	inc    edi
  424209:	imul   rdi,rdx
  42420d:	shr    rdi,0x23
  424211:	add    edi,edi
  424213:	lea    edx,[rdi+rdi*4]
  424216:	neg    edx
  424218:	lea    ecx,[rcx+rdx*1]
  42421b:	add    ecx,0x1
  42421e:	mov    DWORD PTR [rip+0x46ac4],ecx        # 46ace8 <strcmp@plt+0x67550>
  424224:	imul   rcx,rcx,0x2f
  424228:	lea    rbx,[rip+0x468e1]        # 46ab10 <strcmp@plt+0x67378>
  42422f:	lea    rdx,[rbx+rcx*1]
  424233:	mov    BYTE PTR [rcx+rbx*1],0x0
  424237:	cmp    eax,0xa
  42423a:	je     42424d <strcmp@plt+0x20ab5>
  42423c:	cmp    eax,0x2
  42423f:	jne    42426b <strcmp@plt+0x20ad3>
  424241:	mov    edi,0x2
  424246:	mov    ecx,0x10
  42424b:	jmp    424257 <strcmp@plt+0x20abf>
  42424d:	mov    edi,0xa
  424252:	mov    ecx,0x2e
  424257:	call   403400 <inet_ntop@plt>
  42425c:	mov    eax,DWORD PTR [rip+0x46a86]        # 46ace8 <strcmp@plt+0x67550>
  424262:	imul   rax,rax,0x2f
  424266:	add    rbx,rax
  424269:	jmp    42426d <strcmp@plt+0x20ad5>
  42426b:	xor    ebx,ebx
  42426d:	movzx  ecx,BYTE PTR [r14+0x14]
  424272:	lea    rsi,[rip+0x25729]        # 4499a2 <strcmp@plt+0x4620a>
  424279:	mov    rdi,r15
  42427c:	mov    rdx,rbx
  42427f:	xor    eax,eax
  424281:	call   4030b0 <sprintf@plt>
  424286:	mov    eax,DWORD PTR [rip+0x46874]        # 46ab00 <strcmp@plt+0x67368>
  42428c:	imul   rax,rax,0x33
  424290:	add    r12,rax
  424293:	mov    rax,r12
  424296:	add    rsp,0x8
  42429a:	pop    rbx
  42429b:	pop    r12
  42429d:	pop    r14
  42429f:	pop    r15
  4242a1:	ret    
  4242a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4242ac:	nop    DWORD PTR [rax+0x0]
  4242b0:	push   rbp
  4242b1:	push   r14
  4242b3:	push   rbx
  4242b4:	mov    r14,rsi
  4242b7:	mov    rbx,rdi
  4242ba:	mov    esi,0x3a
  4242bf:	call   403190 <strchr@plt>
  4242c4:	xor    ecx,ecx
  4242c6:	test   rax,rax
  4242c9:	setne  cl
  4242cc:	lea    ebp,[rcx*8+0x2]
  4242d3:	lea    rdx,[r14+0x4]
  4242d7:	mov    edi,ebp
  4242d9:	mov    rsi,rbx
  4242dc:	call   403760 <inet_pton@plt>
  4242e1:	mov    ecx,eax
  4242e3:	xor    eax,eax
  4242e5:	cmp    ecx,0x1
  4242e8:	jne    4242f2 <strcmp@plt+0x20b5a>
  4242ea:	mov    DWORD PTR [r14],ebp
  4242ed:	mov    eax,0x1
  4242f2:	pop    rbx
  4242f3:	pop    r14
  4242f5:	pop    rbp
  4242f6:	ret    
  4242f7:	nop    WORD PTR [rax+rax*1+0x0]
  424300:	push   rax
  424301:	mov    esi,0x3a
  424306:	call   403190 <strchr@plt>
  42430b:	xor    ecx,ecx
  42430d:	test   rax,rax
  424310:	setne  cl
  424313:	lea    eax,[rcx*8+0x2]
  42431a:	pop    rcx
  42431b:	ret    
  42431c:	nop    DWORD PTR [rax+0x0]
  424320:	push   rbp
  424321:	push   r15
  424323:	push   r14
  424325:	push   r12
  424327:	push   rbx
  424328:	mov    r15,rsi
  42432b:	mov    r14,rdi
  42432e:	call   403710 <strdup@plt>
  424333:	mov    r12,rax
  424336:	lea    rsi,[rip+0x2566b]        # 4499a8 <strcmp@plt+0x46210>
  42433d:	mov    rdi,rax
  424340:	call   403620 <strtok@plt>
  424345:	test   rax,rax
  424348:	je     4243ef <strcmp@plt+0x20c57>
  42434e:	mov    rbx,rax
  424351:	mov    rdi,rax
  424354:	mov    esi,0x3a
  424359:	call   403190 <strchr@plt>
  42435e:	xor    ecx,ecx
  424360:	test   rax,rax
  424363:	setne  cl
  424366:	lea    ebp,[rcx*8+0x2]
  42436d:	lea    rdx,[r15+0x4]
  424371:	mov    edi,ebp
  424373:	mov    rsi,rbx
  424376:	call   403760 <inet_pton@plt>
  42437b:	cmp    eax,0x1
  42437e:	jne    42443a <strcmp@plt+0x20ca2>
  424384:	mov    DWORD PTR [r15],ebp
  424387:	lea    rsi,[rip+0x2561a]        # 4499a8 <strcmp@plt+0x46210>
  42438e:	xor    edi,edi
  424390:	call   403620 <strtok@plt>
  424395:	test   rax,rax
  424398:	je     42440c <strcmp@plt+0x20c74>
  42439a:	mov    rdi,rax
  42439d:	xor    esi,esi
  42439f:	mov    edx,0xa
  4243a4:	call   403580 <strtol@plt>
  4243a9:	mov    rbx,rax
  4243ac:	mov    rdi,r12
  4243af:	call   403790 <free@plt>
  4243b4:	cmp    DWORD PTR [r15],0x2
  4243b8:	jne    42444f <strcmp@plt+0x20cb7>
  4243be:	cmp    ebx,0x21
  4243c1:	jb     42445b <strcmp@plt+0x20cc3>
  4243c7:	lea    rax,[rip+0x409f2]        # 464dc0 <strcmp@plt+0x61628>
  4243ce:	xor    ebx,ebx
  4243d0:	cmp    DWORD PTR [rax],0x2
  4243d3:	jl     424444 <strcmp@plt+0x20cac>
  4243d5:	lea    rsi,[rip+0x2562c]        # 449a08 <strcmp@plt+0x46270>
  4243dc:	xor    ebx,ebx
  4243de:	mov    edi,0x6
  4243e3:	mov    rdx,r14
  4243e6:	xor    eax,eax
  4243e8:	call   42e520 <strcmp@plt+0x2ad88>
  4243ed:	jmp    424444 <strcmp@plt+0x20cac>
  4243ef:	lea    rax,[rip+0x409ca]        # 464dc0 <strcmp@plt+0x61628>
  4243f6:	cmp    DWORD PTR [rax],0x0
  4243f9:	jle    42443a <strcmp@plt+0x20ca2>
  4243fb:	lea    rsi,[rip+0x255a8]        # 4499aa <strcmp@plt+0x46212>
  424402:	mov    edi,0x5
  424407:	mov    rdx,r14
  42440a:	jmp    424433 <strcmp@plt+0x20c9b>
  42440c:	lea    rax,[rip+0x409ad]        # 464dc0 <strcmp@plt+0x61628>
  424413:	cmp    DWORD PTR [rax],0x0
  424416:	jle    42443a <strcmp@plt+0x20ca2>
  424418:	call   403040 <__errno_location@plt>
  42441d:	mov    edi,DWORD PTR [rax]
  42441f:	call   403170 <strerror@plt>
  424424:	lea    rsi,[rip+0x255bd]        # 4499e8 <strcmp@plt+0x46250>
  42442b:	mov    edi,0x5
  424430:	mov    rdx,rax
  424433:	xor    eax,eax
  424435:	call   42e520 <strcmp@plt+0x2ad88>
  42443a:	mov    rdi,r12
  42443d:	call   403790 <free@plt>
  424442:	xor    ebx,ebx
  424444:	mov    eax,ebx
  424446:	pop    rbx
  424447:	pop    r12
  424449:	pop    r14
  42444b:	pop    r15
  42444d:	pop    rbp
  42444e:	ret    
  42444f:	cmp    ebx,0x81
  424455:	jae    4243c7 <strcmp@plt+0x20c2f>
  42445b:	mov    BYTE PTR [r15+0x14],bl
  42445f:	mov    ebx,0x1
  424464:	jmp    424444 <strcmp@plt+0x20cac>
  424466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424470:	push   rbx
  424471:	cmp    edi,0x2
  424474:	je     424484 <strcmp@plt+0x20cec>
  424476:	mov    edx,edi
  424478:	cmp    edi,0xa
  42447b:	jne    42448b <strcmp@plt+0x20cf3>
  42447d:	mov    ebx,0x28
  424482:	jmp    4244af <strcmp@plt+0x20d17>
  424484:	mov    ebx,0x14
  424489:	jmp    4244af <strcmp@plt+0x20d17>
  42448b:	lea    rax,[rip+0x4092e]        # 464dc0 <strcmp@plt+0x61628>
  424492:	mov    ebx,0xfffffffe
  424497:	cmp    DWORD PTR [rax],0x2
  42449a:	jl     4244af <strcmp@plt+0x20d17>
  42449c:	lea    rsi,[rip+0x25607]        # 449aaa <strcmp@plt+0x46312>
  4244a3:	mov    edi,0x6
  4244a8:	xor    eax,eax
  4244aa:	call   42e520 <strcmp@plt+0x2ad88>
  4244af:	mov    eax,ebx
  4244b1:	pop    rbx
  4244b2:	ret    
  4244b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4244bd:	nop    DWORD PTR [rax]
  4244c0:	push   rbx
  4244c1:	sub    rsp,0x10
  4244c5:	mov    rbx,rdi
  4244c8:	mov    eax,DWORD PTR [rdi]
  4244ca:	mov    DWORD PTR [rsp+0xc],0x0
  4244d2:	mov    DWORD PTR [rsp+0x8],0x0
  4244da:	cmp    eax,0xa
  4244dd:	je     42451d <strcmp@plt+0x20d85>
  4244df:	cmp    eax,0x2
  4244e2:	jne    42452f <strcmp@plt+0x20d97>
  4244e4:	lea    rsi,[rip+0x2562b]        # 449b16 <strcmp@plt+0x4637e>
  4244eb:	lea    rdx,[rsp+0xc]
  4244f0:	mov    edi,0x2
  4244f5:	call   403760 <inet_pton@plt>
  4244fa:	lea    rsi,[rip+0x25621]        # 449b22 <strcmp@plt+0x4638a>
  424501:	lea    rdx,[rsp+0x8]
  424506:	mov    edi,0x2
  42450b:	call   403760 <inet_pton@plt>
  424510:	mov    eax,DWORD PTR [rsp+0x8]
  424514:	and    eax,DWORD PTR [rbx+0x4]
  424517:	cmp    eax,DWORD PTR [rsp+0xc]
  42451b:	jmp    42452a <strcmp@plt+0x20d92>
  42451d:	mov    eax,0xc0ff
  424522:	and    eax,DWORD PTR [rbx+0x4]
  424525:	cmp    eax,0x80fe
  42452a:	sete   al
  42452d:	jmp    424531 <strcmp@plt+0x20d99>
  42452f:	xor    eax,eax
  424531:	movzx  eax,al
  424534:	add    rsp,0x10
  424538:	pop    rbx
  424539:	ret    
  42453a:	nop    WORD PTR [rax+rax*1+0x0]
  424540:	push   rbx
  424541:	sub    rsp,0x10
  424545:	mov    rbx,rdi
  424548:	mov    DWORD PTR [rsp+0xc],0x0
  424550:	mov    DWORD PTR [rsp+0x8],0x0
  424558:	cmp    esi,0xa
  42455b:	je     42459a <strcmp@plt+0x20e02>
  42455d:	cmp    esi,0x2
  424560:	jne    4245ab <strcmp@plt+0x20e13>
  424562:	lea    rsi,[rip+0x255ad]        # 449b16 <strcmp@plt+0x4637e>
  424569:	lea    rdx,[rsp+0xc]
  42456e:	mov    edi,0x2
  424573:	call   403760 <inet_pton@plt>
  424578:	lea    rsi,[rip+0x255a3]        # 449b22 <strcmp@plt+0x4638a>
  42457f:	lea    rdx,[rsp+0x8]
  424584:	mov    edi,0x2
  424589:	call   403760 <inet_pton@plt>
  42458e:	mov    eax,DWORD PTR [rsp+0x8]
  424592:	and    eax,DWORD PTR [rbx]
  424594:	cmp    eax,DWORD PTR [rsp+0xc]
  424598:	jmp    4245a6 <strcmp@plt+0x20e0e>
  42459a:	mov    eax,0xc0ff
  42459f:	and    eax,DWORD PTR [rbx]
  4245a1:	cmp    eax,0x80fe
  4245a6:	sete   al
  4245a9:	jmp    4245ad <strcmp@plt+0x20e15>
  4245ab:	xor    eax,eax
  4245ad:	add    rsp,0x10
  4245b1:	pop    rbx
  4245b2:	ret    
  4245b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4245bd:	nop    DWORD PTR [rax]
  4245c0:	mov    eax,DWORD PTR [rdi]
  4245c2:	cmp    eax,0xa
  4245c5:	je     4245d7 <strcmp@plt+0x20e3f>
  4245c7:	cmp    eax,0x2
  4245ca:	jne    4245e9 <strcmp@plt+0x20e51>
  4245cc:	cmp    DWORD PTR [rdi+0x4],0x0
  4245d0:	sete   al
  4245d3:	movzx  eax,al
  4245d6:	ret    
  4245d7:	cmp    DWORD PTR [rdi+0x4],0x0
  4245db:	jne    4245e9 <strcmp@plt+0x20e51>
  4245dd:	cmp    DWORD PTR [rdi+0x8],0x0
  4245e1:	jne    4245e9 <strcmp@plt+0x20e51>
  4245e3:	cmp    DWORD PTR [rdi+0xc],0x0
  4245e7:	je     4245ef <strcmp@plt+0x20e57>
  4245e9:	xor    eax,eax
  4245eb:	movzx  eax,al
  4245ee:	ret    
  4245ef:	cmp    DWORD PTR [rdi+0x10],0x0
  4245f3:	jmp    4245d0 <strcmp@plt+0x20e38>
  4245f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4245ff:	nop
  424600:	push   rbx
  424601:	mov    edx,DWORD PTR [rdi]
  424603:	cmp    edx,0xa
  424606:	je     42461f <strcmp@plt+0x20e87>
  424608:	cmp    edx,0x2
  42460b:	jne    424628 <strcmp@plt+0x20e90>
  42460d:	mov    eax,0xf0
  424612:	and    eax,DWORD PTR [rdi+0x4]
  424615:	cmp    eax,0xe0
  42461a:	sete   bl
  42461d:	jmp    42463d <strcmp@plt+0x20ea5>
  42461f:	cmp    BYTE PTR [rdi+0x4],0xff
  424623:	sete   bl
  424626:	jmp    42463d <strcmp@plt+0x20ea5>
  424628:	lea    rsi,[rip+0x254c5]        # 449af4 <strcmp@plt+0x4635c>
  42462f:	xor    ebx,ebx
  424631:	mov    edi,0x3
  424636:	xor    eax,eax
  424638:	call   42e520 <strcmp@plt+0x2ad88>
  42463d:	mov    eax,ebx
  42463f:	pop    rbx
  424640:	ret    
  424641:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42464b:	nop    DWORD PTR [rax+rax*1+0x0]
  424650:	push   rbx
  424651:	cmp    esi,0xa
  424654:	je     42466e <strcmp@plt+0x20ed6>
  424656:	mov    edx,esi
  424658:	cmp    esi,0x2
  42465b:	jne    424676 <strcmp@plt+0x20ede>
  42465d:	mov    eax,0xf0
  424662:	and    eax,DWORD PTR [rdi]
  424664:	cmp    eax,0xe0
  424669:	sete   bl
  42466c:	jmp    42468b <strcmp@plt+0x20ef3>
  42466e:	cmp    BYTE PTR [rdi],0xff
  424671:	sete   bl
  424674:	jmp    42468b <strcmp@plt+0x20ef3>
  424676:	lea    rsi,[rip+0x25477]        # 449af4 <strcmp@plt+0x4635c>
  42467d:	xor    ebx,ebx
  42467f:	mov    edi,0x3
  424684:	xor    eax,eax
  424686:	call   42e520 <strcmp@plt+0x2ad88>
  42468b:	mov    eax,ebx
  42468d:	pop    rbx
  42468e:	ret    
  42468f:	nop
  424690:	mov    eax,0xf0
  424695:	and    eax,DWORD PTR [rdi]
  424697:	cmp    eax,0xe0
  42469c:	sete   al
  42469f:	ret    
  4246a0:	cmp    BYTE PTR [rdi],0xff
  4246a3:	sete   al
  4246a6:	ret    
  4246a7:	nop    WORD PTR [rax+rax*1+0x0]
  4246b0:	xor    eax,eax
  4246b2:	cmp    dil,0x6
  4246b6:	mov    ecx,0xa
  4246bb:	cmovne ecx,eax
  4246be:	cmp    dil,0x4
  4246c2:	mov    eax,0x2
  4246c7:	cmovne eax,ecx
  4246ca:	ret    
  4246cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4246d0:	push   rbx
  4246d1:	cmp    edi,0x4
  4246d4:	je     4246e4 <strcmp@plt+0x20f4c>
  4246d6:	mov    edx,edi
  4246d8:	cmp    edi,0x6
  4246db:	jne    4246eb <strcmp@plt+0x20f53>
  4246dd:	mov    ebx,0x28
  4246e2:	jmp    42470e <strcmp@plt+0x20f76>
  4246e4:	mov    ebx,0x14
  4246e9:	jmp    42470e <strcmp@plt+0x20f76>
  4246eb:	lea    rax,[rip+0x406ce]        # 464dc0 <strcmp@plt+0x61628>
  4246f2:	xor    ebx,ebx
  4246f4:	cmp    DWORD PTR [rax],0x2
  4246f7:	jl     42470e <strcmp@plt+0x20f76>
  4246f9:	lea    rsi,[rip+0x2542e]        # 449b2e <strcmp@plt+0x46396>
  424700:	xor    ebx,ebx
  424702:	mov    edi,0x6
  424707:	xor    eax,eax
  424709:	call   42e520 <strcmp@plt+0x2ad88>
  42470e:	mov    eax,ebx
  424710:	pop    rbx
  424711:	ret    
  424712:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42471c:	nop    DWORD PTR [rax+0x0]
  424720:	mov    rdi,QWORD PTR [rdi]
  424723:	jmp    42bff0 <strcmp@plt+0x28858>
  424728:	nop    DWORD PTR [rax+rax*1+0x0]
  424730:	push   rbx
  424731:	test   rdi,rdi
  424734:	je     42474b <strcmp@plt+0x20fb3>
  424736:	mov    rbx,rdi
  424739:	mov    rdi,QWORD PTR [rdi+0x8]
  42473d:	call   422c90 <strcmp@plt+0x1f4f8>
  424742:	mov    rdi,rbx
  424745:	pop    rbx
  424746:	jmp    403790 <free@plt>
  42474b:	lea    rdi,[rip+0x27c30]        # 44c382 <strcmp@plt+0x48bea>
  424752:	lea    rsi,[rip+0x25404]        # 449b5d <strcmp@plt+0x463c5>
  424759:	lea    rcx,[rip+0x25b8e]        # 44a2ee <strcmp@plt+0x46b56>
  424760:	mov    edx,0x30a
  424765:	call   4032b0 <__assert_fail@plt>
  42476a:	nop    WORD PTR [rax+rax*1+0x0]
  424770:	push   rbx
  424771:	mov    rbx,rdi
  424774:	mov    rdi,QWORD PTR [rdi+0x10]
  424778:	call   422c90 <strcmp@plt+0x1f4f8>
  42477d:	mov    rdi,rbx
  424780:	pop    rbx
  424781:	jmp    403790 <free@plt>
  424786:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424790:	push   rbx
  424791:	mov    rbx,rdi
  424794:	mov    rdi,QWORD PTR [rdi+0x18]
  424798:	call   422c90 <strcmp@plt+0x1f4f8>
  42479d:	mov    rdi,QWORD PTR [rbx+0x8]
  4247a1:	call   422c90 <strcmp@plt+0x1f4f8>
  4247a6:	mov    rdi,QWORD PTR [rbx+0x20]
  4247aa:	call   422c90 <strcmp@plt+0x1f4f8>
  4247af:	mov    rdi,QWORD PTR [rbx+0x28]
  4247b3:	call   42bff0 <strcmp@plt+0x28858>
  4247b8:	mov    rdi,rbx
  4247bb:	pop    rbx
  4247bc:	jmp    403790 <free@plt>
  4247c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4247cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4247d0:	push   rbx
  4247d1:	test   rdi,rdi
  4247d4:	je     4247f4 <strcmp@plt+0x2105c>
  4247d6:	mov    rbx,rdi
  4247d9:	mov    rdi,QWORD PTR [rdi+0x8]
  4247dd:	call   422c90 <strcmp@plt+0x1f4f8>
  4247e2:	mov    rdi,QWORD PTR [rbx+0x10]
  4247e6:	call   422c90 <strcmp@plt+0x1f4f8>
  4247eb:	mov    rdi,rbx
  4247ee:	pop    rbx
  4247ef:	jmp    403790 <free@plt>
  4247f4:	lea    rdi,[rip+0x2574b]        # 449f46 <strcmp@plt+0x467ae>
  4247fb:	lea    rsi,[rip+0x2535b]        # 449b5d <strcmp@plt+0x463c5>
  424802:	lea    rcx,[rip+0x259bc]        # 44a1c5 <strcmp@plt+0x46a2d>
  424809:	mov    edx,0x235
  42480e:	call   4032b0 <__assert_fail@plt>
  424813:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42481d:	nop    DWORD PTR [rax]
  424820:	push   rbx
  424821:	mov    rbx,rdi
  424824:	mov    rdi,QWORD PTR [rdi]
  424827:	call   42bff0 <strcmp@plt+0x28858>
  42482c:	mov    rdi,rbx
  42482f:	pop    rbx
  424830:	jmp    403790 <free@plt>
  424835:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42483f:	nop
  424840:	test   rdi,rdi
  424843:	je     42485a <strcmp@plt+0x210c2>
  424845:	push   rbx
  424846:	mov    rbx,rdi
  424849:	mov    rdi,QWORD PTR [rdi]
  42484c:	call   42bff0 <strcmp@plt+0x28858>
  424851:	mov    rdi,rbx
  424854:	pop    rbx
  424855:	jmp    403790 <free@plt>
  42485a:	ret    
  42485b:	nop    DWORD PTR [rax+rax*1+0x0]
  424860:	push   rbp
  424861:	push   r15
  424863:	push   r14
  424865:	push   r13
  424867:	push   r12
  424869:	push   rbx
  42486a:	push   rax
  42486b:	mov    r14,rdi
  42486e:	mov    r15,QWORD PTR [rsi]
  424871:	test   r15,r15
  424874:	jne    424897 <strcmp@plt+0x210ff>
  424876:	mov    edi,0x8
  42487b:	call   431d60 <strcmp@plt+0x2e5c8>
  424880:	mov    r15,rax
  424883:	lea    rdi,[rip+0xffffffffffffe406]        # 422c90 <strcmp@plt+0x1f4f8>
  42488a:	call   42b9b0 <strcmp@plt+0x28218>
  42488f:	mov    QWORD PTR [r15],rax
  424892:	test   r15,r15
  424895:	je     4248f3 <strcmp@plt+0x2115b>
  424897:	movzx  eax,WORD PTR [r14+0x6]
  42489c:	lea    r12,[r14+0x8]
  4248a0:	test   ax,ax
  4248a3:	je     4248e6 <strcmp@plt+0x2114e>
  4248a5:	rol    ax,0x8
  4248a9:	movzx  r13d,ax
  4248ad:	nop    DWORD PTR [rax]
  4248b0:	xor    eax,eax
  4248b2:	call   422c80 <strcmp@plt+0x1f4e8>
  4248b7:	test   rax,rax
  4248ba:	je     4248eb <strcmp@plt+0x21153>
  4248bc:	mov    rbx,rax
  4248bf:	mov    rdi,r12
  4248c2:	mov    rsi,rax
  4248c5:	call   4235c0 <strcmp@plt+0x1fe28>
  4248ca:	mov    ebp,eax
  4248cc:	mov    rsi,QWORD PTR [r15]
  4248cf:	mov    rdi,rbx
  4248d2:	call   42bbd0 <strcmp@plt+0x28438>
  4248d7:	test   ebp,ebp
  4248d9:	jle    4248eb <strcmp@plt+0x21153>
  4248db:	movsxd rax,ebp
  4248de:	add    r12,rax
  4248e1:	sub    r13d,ebp
  4248e4:	jg     4248b0 <strcmp@plt+0x21118>
  4248e6:	sub    r12d,r14d
  4248e9:	jmp    4248f6 <strcmp@plt+0x2115e>
  4248eb:	mov    rdi,QWORD PTR [r15]
  4248ee:	call   42bff0 <strcmp@plt+0x28858>
  4248f3:	xor    r12d,r12d
  4248f6:	mov    eax,r12d
  4248f9:	add    rsp,0x8
  4248fd:	pop    rbx
  4248fe:	pop    r12
  424900:	pop    r13
  424902:	pop    r14
  424904:	pop    r15
  424906:	pop    rbp
  424907:	ret    
  424908:	nop    DWORD PTR [rax+rax*1+0x0]
  424910:	push   r15
  424912:	push   r14
  424914:	push   rbx
  424915:	mov    r15,rsi
  424918:	mov    r14,rdi
  42491b:	mov    edi,0x10
  424920:	call   431d60 <strcmp@plt+0x2e5c8>
  424925:	mov    rbx,rax
  424928:	xor    eax,eax
  42492a:	call   422c80 <strcmp@plt+0x1f4e8>
  42492f:	mov    QWORD PTR [rbx+0x8],rax
  424933:	mov    QWORD PTR [r15],rbx
  424936:	test   rbx,rbx
  424939:	je     424963 <strcmp@plt+0x211cb>
  42493b:	mov    al,BYTE PTR [r14+0x5]
  42493f:	mov    BYTE PTR [rbx+0x4],al
  424942:	mov    eax,DWORD PTR [r14+0x8]
  424946:	movbe  DWORD PTR [rbx],eax
  42494a:	add    r14,0xc
  42494e:	mov    rsi,QWORD PTR [rbx+0x8]
  424952:	mov    rdi,r14
  424955:	call   4235c0 <strcmp@plt+0x1fe28>
  42495a:	add    eax,0xc
  42495d:	pop    rbx
  42495e:	pop    r14
  424960:	pop    r15
  424962:	ret    
  424963:	lea    rdi,[rip+0x27a18]        # 44c382 <strcmp@plt+0x48bea>
  42496a:	lea    rsi,[rip+0x251ec]        # 449b5d <strcmp@plt+0x463c5>
  424971:	lea    rcx,[rip+0x25a02]        # 44a37a <strcmp@plt+0x46be2>
  424978:	mov    edx,0x320
  42497d:	call   4032b0 <__assert_fail@plt>
  424982:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42498c:	nop    DWORD PTR [rax+0x0]
  424990:	push   r15
  424992:	push   r14
  424994:	push   rbx
  424995:	mov    r15,rsi
  424998:	mov    r14,rdi
  42499b:	mov    edi,0x1
  4249a0:	mov    esi,0x18
  4249a5:	call   4032d0 <calloc@plt>
  4249aa:	mov    rbx,rax
  4249ad:	xor    eax,eax
  4249af:	call   422c80 <strcmp@plt+0x1f4e8>
  4249b4:	mov    QWORD PTR [rbx+0x10],rax
  4249b8:	mov    QWORD PTR [r15],rbx
  4249bb:	test   rbx,rbx
  4249be:	je     424a1e <strcmp@plt+0x21286>
  4249c0:	movzx  ecx,WORD PTR [r14+0xa]
  4249c5:	movzx  edx,WORD PTR [r14+0x8]
  4249ca:	mov    esi,edx
  4249cc:	and    esi,0x7fff
  4249d2:	shr    edx,0xf
  4249d5:	mov    BYTE PTR [rbx],dl
  4249d7:	mov    WORD PTR [rbx+0x2],si
  4249db:	mov    WORD PTR [rbx+0x4],cx
  4249df:	movzx  ecx,WORD PTR [r14+0xc]
  4249e4:	movzx  edx,WORD PTR [r14+0xe]
  4249e9:	mov    esi,ecx
  4249eb:	and    esi,0x7fff
  4249f1:	shr    ecx,0xf
  4249f4:	mov    BYTE PTR [rbx+0x6],cl
  4249f7:	mov    WORD PTR [rbx+0x8],si
  4249fb:	mov    WORD PTR [rbx+0xa],dx
  4249ff:	mov    ecx,DWORD PTR [r14+0x10]
  424a03:	mov    DWORD PTR [rbx+0xc],ecx
  424a06:	add    r14,0x14
  424a0a:	mov    rdi,r14
  424a0d:	mov    rsi,rax
  424a10:	call   4235c0 <strcmp@plt+0x1fe28>
  424a15:	add    eax,0x14
  424a18:	pop    rbx
  424a19:	pop    r14
  424a1b:	pop    r15
  424a1d:	ret    
  424a1e:	lea    rdi,[rip+0x259c1]        # 44a3e6 <strcmp@plt+0x46c4e>
  424a25:	lea    rsi,[rip+0x25131]        # 449b5d <strcmp@plt+0x463c5>
  424a2c:	lea    rcx,[rip+0x259b7]        # 44a3ea <strcmp@plt+0x46c52>
  424a33:	mov    edx,0x3c2
  424a38:	call   4032b0 <__assert_fail@plt>
  424a3d:	nop    DWORD PTR [rax]
  424a40:	push   rbp
  424a41:	push   r15
  424a43:	push   r14
  424a45:	push   r13
  424a47:	push   r12
  424a49:	push   rbx
  424a4a:	push   rax
  424a4b:	mov    rbp,rsi
  424a4e:	mov    r12,rdi
  424a51:	mov    edi,0x30
  424a56:	call   431d60 <strcmp@plt+0x2e5c8>
  424a5b:	mov    r14,rax
  424a5e:	xor    eax,eax
  424a60:	call   422c80 <strcmp@plt+0x1f4e8>
  424a65:	mov    QWORD PTR [r14+0x18],rax
  424a69:	xor    eax,eax
  424a6b:	call   422c80 <strcmp@plt+0x1f4e8>
  424a70:	mov    QWORD PTR [r14+0x8],rax
  424a74:	xor    eax,eax
  424a76:	call   422c80 <strcmp@plt+0x1f4e8>
  424a7b:	mov    QWORD PTR [r14+0x20],rax
  424a7f:	lea    rdi,[rip+0xffffffffffffe20a]        # 422c90 <strcmp@plt+0x1f4f8>
  424a86:	call   42b9b0 <strcmp@plt+0x28218>
  424a8b:	mov    QWORD PTR [r14+0x28],rax
  424a8f:	mov    QWORD PTR [rbp+0x0],r14
  424a93:	movbe  bx,WORD PTR [r12+0x6]
  424a9b:	movzx  eax,WORD PTR [r12+0x8]
  424aa1:	mov    WORD PTR [r14+0x10],ax
  424aa6:	movzx  eax,WORD PTR [r12+0xa]
  424aac:	mov    WORD PTR [r14],ax
  424ab0:	add    r12,0xc
  424ab4:	mov    rsi,QWORD PTR [r14+0x8]
  424ab8:	mov    rdi,r12
  424abb:	call   4235c0 <strcmp@plt+0x1fe28>
  424ac0:	test   eax,eax
  424ac2:	jle    424b43 <strcmp@plt+0x213ab>
  424ac4:	mov    ebp,eax
  424ac6:	cdqe   
  424ac8:	add    r12,rax
  424acb:	mov    rsi,QWORD PTR [r14+0x18]
  424acf:	mov    rdi,r12
  424ad2:	call   4235c0 <strcmp@plt+0x1fe28>
  424ad7:	test   eax,eax
  424ad9:	jle    424b43 <strcmp@plt+0x213ab>
  424adb:	mov    r15d,eax
  424ade:	cdqe   
  424ae0:	add    r12,rax
  424ae3:	mov    rsi,QWORD PTR [r14+0x20]
  424ae7:	mov    rdi,r12
  424aea:	call   4235c0 <strcmp@plt+0x1fe28>
  424aef:	test   eax,eax
  424af1:	jle    424b43 <strcmp@plt+0x213ab>
  424af3:	movzx  r13d,bx
  424af7:	add    r13d,0x8
  424afb:	add    ebp,r15d
  424afe:	lea    ebp,[rax+rbp*1]
  424b01:	add    ebp,0xc
  424b04:	cmp    r13d,ebp
  424b07:	jle    424b71 <strcmp@plt+0x213d9>
  424b09:	cdqe   
  424b0b:	add    r12,rax
  424b0e:	xchg   ax,ax
  424b10:	xor    eax,eax
  424b12:	call   422c80 <strcmp@plt+0x1f4e8>
  424b17:	mov    rbx,rax
  424b1a:	mov    rdi,r12
  424b1d:	mov    rsi,rax
  424b20:	call   4235c0 <strcmp@plt+0x1fe28>
  424b25:	test   eax,eax
  424b27:	jle    424b43 <strcmp@plt+0x213ab>
  424b29:	add    ebp,eax
  424b2b:	cdqe   
  424b2d:	add    r12,rax
  424b30:	mov    rsi,QWORD PTR [r14+0x28]
  424b34:	mov    rdi,rbx
  424b37:	call   42bbd0 <strcmp@plt+0x28438>
  424b3c:	cmp    r13d,ebp
  424b3f:	jg     424b10 <strcmp@plt+0x21378>
  424b41:	jmp    424b71 <strcmp@plt+0x213d9>
  424b43:	mov    rdi,QWORD PTR [r14+0x18]
  424b47:	call   422c90 <strcmp@plt+0x1f4f8>
  424b4c:	mov    rdi,QWORD PTR [r14+0x8]
  424b50:	call   422c90 <strcmp@plt+0x1f4f8>
  424b55:	mov    rdi,QWORD PTR [r14+0x20]
  424b59:	call   422c90 <strcmp@plt+0x1f4f8>
  424b5e:	mov    rdi,QWORD PTR [r14+0x28]
  424b62:	call   42bff0 <strcmp@plt+0x28858>
  424b67:	mov    rdi,r14
  424b6a:	call   403790 <free@plt>
  424b6f:	xor    ebp,ebp
  424b71:	mov    eax,ebp
  424b73:	add    rsp,0x8
  424b77:	pop    rbx
  424b78:	pop    r12
  424b7a:	pop    r13
  424b7c:	pop    r14
  424b7e:	pop    r15
  424b80:	pop    rbp
  424b81:	ret    
  424b82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b8c:	nop    DWORD PTR [rax+0x0]
  424b90:	push   r15
  424b92:	push   r14
  424b94:	push   r12
  424b96:	push   rbx
  424b97:	push   rax
  424b98:	mov    r14,rsi
  424b9b:	mov    r15,rdi
  424b9e:	mov    edi,0x1
  424ba3:	mov    esi,0x18
  424ba8:	call   4032d0 <calloc@plt>
  424bad:	mov    rbx,rax
  424bb0:	xor    eax,eax
  424bb2:	call   422c80 <strcmp@plt+0x1f4e8>
  424bb7:	mov    r12,rax
  424bba:	mov    QWORD PTR [rbx+0x8],rax
  424bbe:	xor    eax,eax
  424bc0:	call   422c80 <strcmp@plt+0x1f4e8>
  424bc5:	mov    QWORD PTR [rbx+0x10],rax
  424bc9:	mov    QWORD PTR [r14],rbx
  424bcc:	test   rbx,rbx
  424bcf:	je     424c22 <strcmp@plt+0x2148a>
  424bd1:	mov    eax,DWORD PTR [r15+0x8]
  424bd5:	movbe  DWORD PTR [rbx+0x4],eax
  424bda:	mov    al,BYTE PTR [r15+0xe]
  424bde:	mov    BYTE PTR [rbx],al
  424be0:	mov    al,BYTE PTR [r15+0xf]
  424be4:	mov    BYTE PTR [rbx+0x1],al
  424be7:	add    r15,0x10
  424beb:	mov    rdi,r15
  424bee:	mov    rsi,r12
  424bf1:	call   4235c0 <strcmp@plt+0x1fe28>
  424bf6:	mov    rcx,QWORD PTR [r14]
  424bf9:	test   rcx,rcx
  424bfc:	je     424c41 <strcmp@plt+0x214a9>
  424bfe:	movsxd rbx,eax
  424c01:	add    r15,rbx
  424c04:	mov    rsi,QWORD PTR [rcx+0x10]
  424c08:	mov    rdi,r15
  424c0b:	call   4235c0 <strcmp@plt+0x1fe28>
  424c10:	lea    eax,[rbx+rax*1]
  424c13:	add    eax,0x10
  424c16:	add    rsp,0x8
  424c1a:	pop    rbx
  424c1b:	pop    r12
  424c1d:	pop    r14
  424c1f:	pop    r15
  424c21:	ret    
  424c22:	lea    rdi,[rip+0x2531d]        # 449f46 <strcmp@plt+0x467ae>
  424c29:	lea    rsi,[rip+0x24f2d]        # 449b5d <strcmp@plt+0x463c5>
  424c30:	lea    rcx,[rip+0x25467]        # 44a09e <strcmp@plt+0x46906>
  424c37:	mov    edx,0x1d7
  424c3c:	call   4032b0 <__assert_fail@plt>
  424c41:	lea    rdi,[rip+0x252fe]        # 449f46 <strcmp@plt+0x467ae>
  424c48:	lea    rsi,[rip+0x24f0e]        # 449b5d <strcmp@plt+0x463c5>
  424c4f:	lea    rcx,[rip+0x25594]        # 44a1ea <strcmp@plt+0x46a52>
  424c56:	mov    edx,0x23c
  424c5b:	call   4032b0 <__assert_fail@plt>
  424c60:	push   rbp
  424c61:	push   r15
  424c63:	push   r14
  424c65:	push   r12
  424c67:	push   rbx
  424c68:	mov    r14,rsi
  424c6b:	mov    rbx,rdi
  424c6e:	mov    edi,0x8
  424c73:	call   431d60 <strcmp@plt+0x2e5c8>
  424c78:	mov    r15,rax
  424c7b:	lea    rdi,[rip+0x32be]        # 427f40 <strcmp@plt+0x247a8>
  424c82:	call   42b9b0 <strcmp@plt+0x28218>
  424c87:	mov    QWORD PTR [r15],rax
  424c8a:	mov    QWORD PTR [r14],r15
  424c8d:	movzx  eax,WORD PTR [rbx+0x6]
  424c91:	mov    ecx,eax
  424c93:	rol    cx,0x8
  424c97:	movzx  ebp,cx
  424c9a:	test   ax,ax
  424c9d:	je     424d32 <strcmp@plt+0x2159a>
  424ca3:	add    rbx,0x8
  424ca7:	mov    r14d,0x8
  424cad:	nop    DWORD PTR [rax]
  424cb0:	mov    edi,0x1
  424cb5:	mov    esi,0x10
  424cba:	call   4032d0 <calloc@plt>
  424cbf:	mov    r12,rax
  424cc2:	movzx  eax,BYTE PTR [rbx+0x1]
  424cc6:	shr    al,0x2
  424cc9:	and    al,0x1
  424ccb:	mov    BYTE PTR [r12],al
  424ccf:	movzx  ecx,BYTE PTR [rbx+0x1]
  424cd3:	and    cl,0x2
  424cd6:	or     cl,al
  424cd8:	mov    BYTE PTR [r12],cl
  424cdc:	movzx  eax,BYTE PTR [rbx+0x1]
  424ce0:	shl    al,0x2
  424ce3:	and    al,0x4
  424ce5:	or     al,cl
  424ce7:	mov    BYTE PTR [r12],al
  424ceb:	add    rbx,0x2
  424cef:	xor    eax,eax
  424cf1:	call   422c80 <strcmp@plt+0x1f4e8>
  424cf6:	mov    QWORD PTR [r12+0x8],rax
  424cfb:	mov    rdi,rbx
  424cfe:	mov    rsi,rax
  424d01:	call   4235c0 <strcmp@plt+0x1fe28>
  424d06:	test   eax,eax
  424d08:	jle    424d5d <strcmp@plt+0x215c5>
  424d0a:	movsxd rcx,eax
  424d0d:	add    rbx,rcx
  424d10:	sub    ebp,eax
  424d12:	add    ebp,0xfffffffe
  424d15:	lea    r14d,[r14+rax*1]
  424d19:	add    r14d,0x2
  424d1d:	mov    rsi,QWORD PTR [r15]
  424d20:	mov    rdi,r12
  424d23:	call   42bbd0 <strcmp@plt+0x28438>
  424d28:	test   ebp,ebp
  424d2a:	jg     424cb0 <strcmp@plt+0x21518>
  424d2c:	test   ebp,ebp
  424d2e:	jne    424d3c <strcmp@plt+0x215a4>
  424d30:	jmp    424d68 <strcmp@plt+0x215d0>
  424d32:	mov    r14d,0x8
  424d38:	test   ebp,ebp
  424d3a:	je     424d68 <strcmp@plt+0x215d0>
  424d3c:	lea    rax,[rip+0x4007d]        # 464dc0 <strcmp@plt+0x61628>
  424d43:	cmp    DWORD PTR [rax],0x0
  424d46:	jle    424d68 <strcmp@plt+0x215d0>
  424d48:	lea    rsi,[rip+0x258fe]        # 44a64d <strcmp@plt+0x46eb5>
  424d4f:	mov    edi,0x5
  424d54:	xor    eax,eax
  424d56:	call   42e520 <strcmp@plt+0x2ad88>
  424d5b:	jmp    424d68 <strcmp@plt+0x215d0>
  424d5d:	mov    rdi,QWORD PTR [r15]
  424d60:	call   42bff0 <strcmp@plt+0x28858>
  424d65:	xor    r14d,r14d
  424d68:	mov    eax,r14d
  424d6b:	pop    rbx
  424d6c:	pop    r12
  424d6e:	pop    r14
  424d70:	pop    r15
  424d72:	pop    rbp
  424d73:	ret    
  424d74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424d7e:	xchg   ax,ax
  424d80:	push   rbp
  424d81:	push   r15
  424d83:	push   r14
  424d85:	push   r12
  424d87:	push   rbx
  424d88:	mov    r14,rsi
  424d8b:	mov    rbx,rdi
  424d8e:	mov    edi,0x8
  424d93:	call   431d60 <strcmp@plt+0x2e5c8>
  424d98:	mov    r15,rax
  424d9b:	lea    rdi,[rip+0x333e]        # 4280e0 <strcmp@plt+0x24948>
  424da2:	call   42b9b0 <strcmp@plt+0x28218>
  424da7:	mov    QWORD PTR [r15],rax
  424daa:	mov    QWORD PTR [r14],r15
  424dad:	movzx  eax,WORD PTR [rbx+0x6]
  424db1:	mov    ecx,eax
  424db3:	rol    cx,0x8
  424db7:	movzx  ebp,cx
  424dba:	test   ax,ax
  424dbd:	je     424e2c <strcmp@plt+0x21694>
  424dbf:	add    rbx,0x8
  424dc3:	mov    r14d,0x8
  424dc9:	nop    DWORD PTR [rax+0x0]
  424dd0:	mov    edi,0x10
  424dd5:	call   431d60 <strcmp@plt+0x2e5c8>
  424dda:	mov    r12,rax
  424ddd:	movzx  eax,BYTE PTR [rbx+0x3]
  424de1:	mov    BYTE PTR [r12+0x8],al
  424de6:	add    rbx,0x4
  424dea:	xor    eax,eax
  424dec:	call   422c80 <strcmp@plt+0x1f4e8>
  424df1:	mov    QWORD PTR [r12],rax
  424df5:	mov    rdi,rbx
  424df8:	mov    rsi,rax
  424dfb:	call   4235c0 <strcmp@plt+0x1fe28>
  424e00:	test   eax,eax
  424e02:	jle    424e57 <strcmp@plt+0x216bf>
  424e04:	movsxd rcx,eax
  424e07:	add    rbx,rcx
  424e0a:	sub    ebp,eax
  424e0c:	add    ebp,0xfffffffc
  424e0f:	lea    r14d,[r14+rax*1]
  424e13:	add    r14d,0x4
  424e17:	mov    rsi,QWORD PTR [r15]
  424e1a:	mov    rdi,r12
  424e1d:	call   42bbd0 <strcmp@plt+0x28438>
  424e22:	test   ebp,ebp
  424e24:	jg     424dd0 <strcmp@plt+0x21638>
  424e26:	test   ebp,ebp
  424e28:	jne    424e36 <strcmp@plt+0x2169e>
  424e2a:	jmp    424e62 <strcmp@plt+0x216ca>
  424e2c:	mov    r14d,0x8
  424e32:	test   ebp,ebp
  424e34:	je     424e62 <strcmp@plt+0x216ca>
  424e36:	lea    rax,[rip+0x3ff83]        # 464dc0 <strcmp@plt+0x61628>
  424e3d:	cmp    DWORD PTR [rax],0x0
  424e40:	jle    424e62 <strcmp@plt+0x216ca>
  424e42:	lea    rsi,[rip+0x25834]        # 44a67d <strcmp@plt+0x46ee5>
  424e49:	mov    edi,0x5
  424e4e:	xor    eax,eax
  424e50:	call   42e520 <strcmp@plt+0x2ad88>
  424e55:	jmp    424e62 <strcmp@plt+0x216ca>
  424e57:	mov    rdi,QWORD PTR [r15]
  424e5a:	call   42bff0 <strcmp@plt+0x28858>
  424e5f:	xor    r14d,r14d
  424e62:	mov    eax,r14d
  424e65:	pop    rbx
  424e66:	pop    r12
  424e68:	pop    r14
  424e6a:	pop    r15
  424e6c:	pop    rbp
  424e6d:	ret    
  424e6e:	xchg   ax,ax
  424e70:	push   rbp
  424e71:	push   r15
  424e73:	push   r14
  424e75:	push   r13
  424e77:	push   r12
  424e79:	push   rbx
  424e7a:	push   rax
  424e7b:	mov    eax,DWORD PTR [rip+0x4899b]        # 46d81c <strcmp@plt+0x6a084>
  424e81:	mov    ecx,eax
  424e83:	inc    ecx
  424e85:	movsxd rcx,ecx
  424e88:	imul   rcx,rcx,0x66666667
  424e8f:	mov    rdx,rcx
  424e92:	shr    rdx,0x3f
  424e96:	sar    rcx,0x22
  424e9a:	add    ecx,edx
  424e9c:	add    ecx,ecx
  424e9e:	lea    ecx,[rcx+rcx*4]
  424ea1:	neg    ecx
  424ea3:	lea    eax,[rax+rcx*1]
  424ea6:	add    eax,0x1
  424ea9:	mov    DWORD PTR [rip+0x4896d],eax        # 46d81c <strcmp@plt+0x6a084>
  424eaf:	movsxd rcx,eax
  424eb2:	imul   rdx,rcx,0x1f4
  424eb9:	lea    r12,[rip+0x48380]        # 46d240 <strcmp@plt+0x69aa8>
  424ec0:	mov    BYTE PTR [rdx+r12*1],0x0
  424ec5:	mov    QWORD PTR [rsp],rdi
  424ec9:	mov    rdx,QWORD PTR [rdi]
  424ecc:	mov    r14,QWORD PTR [rdx+0x8]
  424ed0:	cmp    r14,rdx
  424ed3:	je     424f45 <strcmp@plt+0x217ad>
  424ed5:	xor    r13d,r13d
  424ed8:	nop    DWORD PTR [rax+rax*1+0x0]
  424ee0:	mov    rbx,QWORD PTR [r14+0x10]
  424ee4:	cdqe   
  424ee6:	imul   rbp,rax,0x1f4
  424eed:	add    rbp,r12
  424ef0:	mov    rdi,rbp
  424ef3:	call   4031e0 <strlen@plt>
  424ef8:	add    rbp,rax
  424efb:	mov    r15d,0x1f4
  424f01:	sub    r15,rax
  424f04:	mov    rdi,rbx
  424f07:	call   422e20 <strcmp@plt+0x1f688>
  424f0c:	mov    rdi,rbp
  424f0f:	mov    rsi,r15
  424f12:	lea    rdx,[rip+0x25794]        # 44a6ad <strcmp@plt+0x46f15>
  424f19:	mov    ecx,r13d
  424f1c:	mov    r8,rax
  424f1f:	xor    eax,eax
  424f21:	call   403630 <snprintf@plt>
  424f26:	mov    r14,QWORD PTR [r14+0x8]
  424f2a:	mov    rax,QWORD PTR [rsp]
  424f2e:	cmp    r14,QWORD PTR [rax]
  424f31:	je     424f3e <strcmp@plt+0x217a6>
  424f33:	inc    r13d
  424f36:	mov    eax,DWORD PTR [rip+0x488e0]        # 46d81c <strcmp@plt+0x6a084>
  424f3c:	jmp    424ee0 <strcmp@plt+0x21748>
  424f3e:	movsxd rcx,DWORD PTR [rip+0x488d7]        # 46d81c <strcmp@plt+0x6a084>
  424f45:	imul   rax,rcx,0x1f4
  424f4c:	add    r12,rax
  424f4f:	mov    rax,r12
  424f52:	add    rsp,0x8
  424f56:	pop    rbx
  424f57:	pop    r12
  424f59:	pop    r13
  424f5b:	pop    r14
  424f5d:	pop    r15
  424f5f:	pop    rbp
  424f60:	ret    
  424f61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  424f70:	push   rbp
  424f71:	push   r15
  424f73:	push   r14
  424f75:	push   rbx
  424f76:	push   rax
  424f77:	mov    eax,DWORD PTR [rip+0x46503]        # 46b480 <strcmp@plt+0x67ce8>
  424f7d:	mov    ecx,eax
  424f7f:	inc    ecx
  424f81:	mov    edx,0xcccccccd
  424f86:	imul   rdx,rcx
  424f8a:	shr    rdx,0x23
  424f8e:	add    edx,edx
  424f90:	lea    ecx,[rdx+rdx*4]
  424f93:	neg    ecx
  424f95:	lea    eax,[rax+rcx*1]
  424f98:	add    eax,0x1
  424f9b:	mov    DWORD PTR [rip+0x464df],eax        # 46b480 <strcmp@plt+0x67ce8>
  424fa1:	lea    rbx,[rax+rax*2]
  424fa5:	shl    rbx,0x5
  424fa9:	lea    r15,[rip+0x46110]        # 46b0c0 <strcmp@plt+0x67928>
  424fb0:	mov    BYTE PTR [rbx+r15*1],0x0
  424fb5:	test   rdi,rdi
  424fb8:	je     425007 <strcmp@plt+0x2186f>
  424fba:	add    rbx,r15
  424fbd:	movzx  r14d,BYTE PTR [rdi+0x4]
  424fc2:	mov    ebp,DWORD PTR [rdi]
  424fc4:	mov    rdi,QWORD PTR [rdi+0x8]
  424fc8:	call   422e20 <strcmp@plt+0x1f688>
  424fcd:	lea    rdx,[rip+0x253cf]        # 44a3a3 <strcmp@plt+0x46c0b>
  424fd4:	mov    esi,0x60
  424fd9:	mov    rdi,rbx
  424fdc:	mov    ecx,ebp
  424fde:	mov    r8d,r14d
  424fe1:	mov    r9,rax
  424fe4:	xor    eax,eax
  424fe6:	call   403630 <snprintf@plt>
  424feb:	mov    eax,DWORD PTR [rip+0x4648f]        # 46b480 <strcmp@plt+0x67ce8>
  424ff1:	lea    rax,[rax+rax*2]
  424ff5:	shl    rax,0x5
  424ff9:	add    rax,r15
  424ffc:	add    rsp,0x8
  425000:	pop    rbx
  425001:	pop    r14
  425003:	pop    r15
  425005:	pop    rbp
  425006:	ret    
  425007:	lea    rdi,[rip+0x27374]        # 44c382 <strcmp@plt+0x48bea>
  42500e:	lea    rsi,[rip+0x24b48]        # 449b5d <strcmp@plt+0x463c5>
  425015:	lea    rcx,[rip+0x252af]        # 44a2cb <strcmp@plt+0x46b33>
  42501c:	mov    edx,0x303
  425021:	call   4032b0 <__assert_fail@plt>
  425026:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425030:	push   rbp
  425031:	push   r15
  425033:	push   r14
  425035:	push   r13
  425037:	push   r12
  425039:	push   rbx
  42503a:	push   rax
  42503b:	mov    eax,DWORD PTR [rip+0x4680f]        # 46b850 <strcmp@plt+0x680b8>
  425041:	mov    ecx,eax
  425043:	inc    ecx
  425045:	mov    edx,0xcccccccd
  42504a:	imul   rdx,rcx
  42504e:	shr    rdx,0x23
  425052:	add    edx,edx
  425054:	lea    ecx,[rdx+rdx*4]
  425057:	neg    ecx
  425059:	lea    eax,[rax+rcx*1]
  42505c:	add    eax,0x1
  42505f:	mov    DWORD PTR [rip+0x467eb],eax        # 46b850 <strcmp@plt+0x680b8>
  425065:	lea    r14,[rax+rax*2]
  425069:	shl    r14,0x5
  42506d:	lea    r13,[rip+0x4641c]        # 46b490 <strcmp@plt+0x67cf8>
  425074:	mov    BYTE PTR [r14+r13*1],0x0
  425079:	test   rdi,rdi
  42507c:	je     425140 <strcmp@plt+0x219a8>
  425082:	mov    rbx,rdi
  425085:	add    r14,r13
  425088:	mov    BYTE PTR [rip+0x467d1],0x0        # 46b860 <strcmp@plt+0x680c8>
  42508f:	lea    r15,[rip+0x467ca]        # 46b860 <strcmp@plt+0x680c8>
  425096:	movzx  ecx,BYTE PTR [rdi]
  425099:	movzx  r8d,WORD PTR [rdi+0x2]
  42509e:	movzx  r9d,BYTE PTR [rdi+0x4]
  4250a3:	movzx  eax,BYTE PTR [rdi+0x5]
  4250a7:	mov    DWORD PTR [rsp],eax
  4250aa:	lea    r12,[rip+0x25520]        # 44a5d1 <strcmp@plt+0x46e39>
  4250b1:	mov    esi,0x60
  4250b6:	mov    rdi,r15
  4250b9:	mov    rdx,r12
  4250bc:	xor    eax,eax
  4250be:	call   403630 <snprintf@plt>
  4250c3:	mov    BYTE PTR [rip+0x46796],0x0        # 46b860 <strcmp@plt+0x680c8>
  4250ca:	movzx  ecx,BYTE PTR [rbx+0x6]
  4250ce:	movzx  r8d,WORD PTR [rbx+0x8]
  4250d3:	movzx  r9d,BYTE PTR [rbx+0xa]
  4250d8:	movzx  eax,BYTE PTR [rbx+0xb]
  4250dc:	mov    DWORD PTR [rsp],eax
  4250df:	mov    esi,0x60
  4250e4:	mov    rdi,r15
  4250e7:	mov    rdx,r12
  4250ea:	xor    eax,eax
  4250ec:	call   403630 <snprintf@plt>
  4250f1:	mov    ebp,DWORD PTR [rbx+0xc]
  4250f4:	mov    rdi,QWORD PTR [rbx+0x10]
  4250f8:	call   422e20 <strcmp@plt+0x1f688>
  4250fd:	mov    QWORD PTR [rsp],rax
  425101:	lea    rdx,[rip+0x25493]        # 44a59b <strcmp@plt+0x46e03>
  425108:	mov    esi,0x60
  42510d:	mov    rdi,r14
  425110:	mov    rcx,r15
  425113:	mov    r8,r15
  425116:	mov    r9d,ebp
  425119:	xor    eax,eax
  42511b:	call   403630 <snprintf@plt>
  425120:	mov    eax,DWORD PTR [rip+0x4672a]        # 46b850 <strcmp@plt+0x680b8>
  425126:	lea    rax,[rax+rax*2]
  42512a:	shl    rax,0x5
  42512e:	add    rax,r13
  425131:	add    rsp,0x8
  425135:	pop    rbx
  425136:	pop    r12
  425138:	pop    r13
  42513a:	pop    r14
  42513c:	pop    r15
  42513e:	pop    rbp
  42513f:	ret    
  425140:	lea    rdi,[rip+0x2529f]        # 44a3e6 <strcmp@plt+0x46c4e>
  425147:	lea    rsi,[rip+0x24a0f]        # 449b5d <strcmp@plt+0x463c5>
  42514e:	lea    rcx,[rip+0x253c7]        # 44a51c <strcmp@plt+0x46d84>
  425155:	mov    edx,0x3f2
  42515a:	call   4032b0 <__assert_fail@plt>
  42515f:	nop
  425160:	push   rbp
  425161:	push   r15
  425163:	push   r14
  425165:	push   r13
  425167:	push   r12
  425169:	push   rbx
  42516a:	sub    rsp,0x18
  42516e:	mov    r14,rdi
  425171:	mov    eax,DWORD PTR [rip+0x4710d]        # 46c284 <strcmp@plt+0x68aec>
  425177:	mov    ecx,eax
  425179:	inc    ecx
  42517b:	mov    edx,0xcccccccd
  425180:	imul   rdx,rcx
  425184:	shr    rdx,0x22
  425188:	lea    ecx,[rdx+rdx*4]
  42518b:	neg    ecx
  42518d:	lea    eax,[rax+rcx*1]
  425190:	add    eax,0x1
  425193:	mov    DWORD PTR [rip+0x470eb],eax        # 46c284 <strcmp@plt+0x68aec>
  425199:	imul   rax,rax,0x1f4
  4251a0:	lea    r12,[rip+0x46719]        # 46b8c0 <strcmp@plt+0x68128>
  4251a7:	lea    rcx,[r12+rax*1]
  4251ab:	mov    QWORD PTR [rsp+0x10],rcx
  4251b0:	mov    BYTE PTR [rax+r12*1],0x0
  4251b5:	mov    rdi,QWORD PTR [rdi+0x8]
  4251b9:	call   422e20 <strcmp@plt+0x1f688>
  4251be:	mov    r13,rax
  4251c1:	movzx  eax,WORD PTR [r14]
  4251c5:	mov    DWORD PTR [rsp+0xc],eax
  4251c9:	mov    rdi,QWORD PTR [r14+0x20]
  4251cd:	call   422e20 <strcmp@plt+0x1f688>
  4251d2:	mov    r15,rax
  4251d5:	mov    rdi,QWORD PTR [r14+0x18]
  4251d9:	call   422e20 <strcmp@plt+0x1f688>
  4251de:	mov    rbp,rax
  4251e1:	movzx  ebx,WORD PTR [r14+0x10]
  4251e6:	lea    rdx,[rip+0x25424]        # 44a611 <strcmp@plt+0x46e79>
  4251ed:	mov    esi,0x1f4
  4251f2:	mov    rdi,QWORD PTR [rsp+0x10]
  4251f7:	mov    rcx,r13
  4251fa:	mov    r8d,DWORD PTR [rsp+0xc]
  4251ff:	mov    r9,r15
  425202:	mov    eax,0x0
  425207:	push   rbx
  425208:	push   rbp
  425209:	call   403630 <snprintf@plt>
  42520e:	add    rsp,0x10
  425212:	mov    rax,QWORD PTR [r14+0x28]
  425216:	mov    r15,QWORD PTR [rax+0x8]
  42521a:	cmp    r15,rax
  42521d:	je     425283 <strcmp@plt+0x21aeb>
  42521f:	mov    r13d,0x1
  425225:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42522f:	nop
  425230:	mov    eax,DWORD PTR [rip+0x4704e]        # 46c284 <strcmp@plt+0x68aec>
  425236:	imul   rbx,rax,0x1f4
  42523d:	add    rbx,r12
  425240:	mov    rdi,rbx
  425243:	call   4031e0 <strlen@plt>
  425248:	add    rbx,rax
  42524b:	mov    ebp,0x1f4
  425250:	sub    rbp,rax
  425253:	mov    rdi,QWORD PTR [r15+0x10]
  425257:	call   422e20 <strcmp@plt+0x1f688>
  42525c:	mov    rdi,rbx
  42525f:	mov    rsi,rbp
  425262:	lea    rdx,[rip+0x253db]        # 44a644 <strcmp@plt+0x46eac>
  425269:	mov    ecx,r13d
  42526c:	mov    r8,rax
  42526f:	xor    eax,eax
  425271:	call   403630 <snprintf@plt>
  425276:	mov    r15,QWORD PTR [r15+0x8]
  42527a:	inc    r13d
  42527d:	cmp    r15,QWORD PTR [r14+0x28]
  425281:	jne    425230 <strcmp@plt+0x21a98>
  425283:	mov    eax,DWORD PTR [rip+0x46ffb]        # 46c284 <strcmp@plt+0x68aec>
  425289:	imul   rax,rax,0x1f4
  425290:	add    r12,rax
  425293:	mov    rax,r12
  425296:	add    rsp,0x18
  42529a:	pop    rbx
  42529b:	pop    r12
  42529d:	pop    r13
  42529f:	pop    r14
  4252a1:	pop    r15
  4252a3:	pop    rbp
  4252a4:	ret    
  4252a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4252af:	nop
  4252b0:	push   rbp
  4252b1:	push   r15
  4252b3:	push   r14
  4252b5:	push   r12
  4252b7:	push   rbx
  4252b8:	sub    rsp,0x10
  4252bc:	mov    eax,DWORD PTR [rip+0x45dee]        # 46b0b0 <strcmp@plt+0x67918>
  4252c2:	mov    ecx,eax
  4252c4:	inc    ecx
  4252c6:	mov    edx,0xcccccccd
  4252cb:	imul   rdx,rcx
  4252cf:	shr    rdx,0x23
  4252d3:	add    edx,edx
  4252d5:	lea    ecx,[rdx+rdx*4]
  4252d8:	neg    ecx
  4252da:	lea    eax,[rax+rcx*1]
  4252dd:	add    eax,0x1
  4252e0:	mov    DWORD PTR [rip+0x45dca],eax        # 46b0b0 <strcmp@plt+0x67918>
  4252e6:	lea    rbx,[rax+rax*2]
  4252ea:	shl    rbx,0x5
  4252ee:	lea    r12,[rip+0x459fb]        # 46acf0 <strcmp@plt+0x67558>
  4252f5:	mov    BYTE PTR [rbx+r12*1],0x0
  4252fa:	test   rdi,rdi
  4252fd:	je     425362 <strcmp@plt+0x21bca>
  4252ff:	mov    r14,rdi
  425302:	add    rbx,r12
  425305:	mov    rdi,QWORD PTR [rdi+0x8]
  425309:	call   422e20 <strcmp@plt+0x1f688>
  42530e:	mov    r15,rax
  425311:	movzx  ebp,BYTE PTR [r14]
  425315:	mov    rdi,QWORD PTR [r14+0x10]
  425319:	call   422e20 <strcmp@plt+0x1f688>
  42531e:	movzx  ecx,BYTE PTR [r14]
  425322:	mov    DWORD PTR [rsp],ecx
  425325:	lea    rdx,[rip+0x24f6e]        # 44a29a <strcmp@plt+0x46b02>
  42532c:	mov    esi,0x60
  425331:	mov    rdi,rbx
  425334:	mov    rcx,r15
  425337:	mov    r8d,ebp
  42533a:	mov    r9,rax
  42533d:	xor    eax,eax
  42533f:	call   403630 <snprintf@plt>
  425344:	mov    eax,DWORD PTR [rip+0x45d66]        # 46b0b0 <strcmp@plt+0x67918>
  42534a:	lea    rax,[rax+rax*2]
  42534e:	shl    rax,0x5
  425352:	add    rax,r12
  425355:	add    rsp,0x10
  425359:	pop    rbx
  42535a:	pop    r12
  42535c:	pop    r14
  42535e:	pop    r15
  425360:	pop    rbp
  425361:	ret    
  425362:	lea    rdi,[rip+0x24bdd]        # 449f46 <strcmp@plt+0x467ae>
  425369:	lea    rsi,[rip+0x247ed]        # 449b5d <strcmp@plt+0x463c5>
  425370:	lea    rcx,[rip+0x24e4e]        # 44a1c5 <strcmp@plt+0x46a2d>
  425377:	mov    edx,0x235
  42537c:	call   4032b0 <__assert_fail@plt>
  425381:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42538b:	nop    DWORD PTR [rax+rax*1+0x0]
  425390:	push   rbp
  425391:	push   r15
  425393:	push   r14
  425395:	push   r13
  425397:	push   r12
  425399:	push   rbx
  42539a:	push   rax
  42539b:	mov    eax,DWORD PTR [rip+0x478b3]        # 46cc54 <strcmp@plt+0x694bc>
  4253a1:	mov    ecx,eax
  4253a3:	inc    ecx
  4253a5:	mov    edx,0xcccccccd
  4253aa:	imul   rdx,rcx
  4253ae:	shr    rdx,0x22
  4253b2:	lea    ecx,[rdx+rdx*4]
  4253b5:	neg    ecx
  4253b7:	lea    edx,[rax+rcx*1]
  4253ba:	add    edx,0x1
  4253bd:	mov    DWORD PTR [rip+0x47891],edx        # 46cc54 <strcmp@plt+0x694bc>
  4253c3:	imul   rcx,rdx,0x1f4
  4253ca:	lea    rax,[rip+0x46ebf]        # 46c290 <strcmp@plt+0x68af8>
  4253d1:	mov    BYTE PTR [rcx+rax*1+0x4],0x0
  4253d6:	mov    DWORD PTR [rcx+rax*1],0x3a504c45
  4253dd:	mov    rcx,QWORD PTR [rdi]
  4253e0:	mov    r15,QWORD PTR [rcx+0x8]
  4253e4:	cmp    r15,rcx
  4253e7:	je     425460 <strcmp@plt+0x21cc8>
  4253e9:	mov    r12,rdi
  4253ec:	mov    r13d,0x1
  4253f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253fc:	nop    DWORD PTR [rax+0x0]
  425400:	mov    r14,QWORD PTR [r15+0x10]
  425404:	mov    ecx,edx
  425406:	imul   rbx,rcx,0x1f4
  42540d:	add    rbx,rax
  425410:	mov    rdi,rbx
  425413:	call   4031e0 <strlen@plt>
  425418:	add    rbx,rax
  42541b:	mov    ebp,0x1f4
  425420:	sub    rbp,rax
  425423:	mov    rdi,QWORD PTR [r14+0x8]
  425427:	call   422e20 <strcmp@plt+0x1f688>
  42542c:	mov    rdi,rbx
  42542f:	mov    rsi,rbp
  425432:	lea    rdx,[rip+0x2520b]        # 44a644 <strcmp@plt+0x46eac>
  425439:	mov    ecx,r13d
  42543c:	mov    r8,rax
  42543f:	xor    eax,eax
  425441:	call   403630 <snprintf@plt>
  425446:	lea    rax,[rip+0x46e43]        # 46c290 <strcmp@plt+0x68af8>
  42544d:	mov    r15,QWORD PTR [r15+0x8]
  425451:	inc    r13d
  425454:	mov    edx,DWORD PTR [rip+0x477fa]        # 46cc54 <strcmp@plt+0x694bc>
  42545a:	cmp    r15,QWORD PTR [r12]
  42545e:	jne    425400 <strcmp@plt+0x21c68>
  425460:	imul   rcx,rdx,0x1f4
  425467:	add    rax,rcx
  42546a:	add    rsp,0x8
  42546e:	pop    rbx
  42546f:	pop    r12
  425471:	pop    r13
  425473:	pop    r14
  425475:	pop    r15
  425477:	pop    rbp
  425478:	ret    
  425479:	nop    DWORD PTR [rax+0x0]
  425480:	push   rbp
  425481:	push   r15
  425483:	push   r14
  425485:	push   r13
  425487:	push   r12
  425489:	push   rbx
  42548a:	push   rax
  42548b:	mov    eax,DWORD PTR [rip+0x47dab]        # 46d23c <strcmp@plt+0x69aa4>
  425491:	mov    ecx,eax
  425493:	inc    ecx
  425495:	mov    edx,0xcccccccd
  42549a:	imul   rdx,rcx
  42549e:	shr    rdx,0x23
  4254a2:	add    edx,edx
  4254a4:	lea    ecx,[rdx+rdx*4]
  4254a7:	neg    ecx
  4254a9:	lea    edx,[rax+rcx*1]
  4254ac:	add    edx,0x1
  4254af:	mov    DWORD PTR [rip+0x47d87],edx        # 46d23c <strcmp@plt+0x69aa4>
  4254b5:	imul   rcx,rdx,0x1f4
  4254bc:	lea    rax,[rip+0x4779d]        # 46cc60 <strcmp@plt+0x694c8>
  4254c3:	mov    BYTE PTR [rcx+rax*1+0x4],0x0
  4254c8:	mov    DWORD PTR [rcx+rax*1],0x3a454c52
  4254cf:	mov    rcx,QWORD PTR [rdi]
  4254d2:	mov    r15,QWORD PTR [rcx+0x8]
  4254d6:	cmp    r15,rcx
  4254d9:	je     425541 <strcmp@plt+0x21da9>
  4254db:	mov    r12,rdi
  4254de:	xchg   ax,ax
  4254e0:	mov    r14,QWORD PTR [r15+0x10]
  4254e4:	mov    ecx,edx
  4254e6:	imul   rbx,rcx,0x1f4
  4254ed:	add    rbx,rax
  4254f0:	mov    rdi,rbx
  4254f3:	call   4031e0 <strlen@plt>
  4254f8:	add    rbx,rax
  4254fb:	mov    r13d,0x1f4
  425501:	sub    r13,rax
  425504:	movzx  ebp,BYTE PTR [r14+0x8]
  425509:	mov    rdi,QWORD PTR [r14]
  42550c:	call   422e20 <strcmp@plt+0x1f688>
  425511:	mov    rdi,rbx
  425514:	mov    rsi,r13
  425517:	lea    rdx,[rip+0x25126]        # 44a644 <strcmp@plt+0x46eac>
  42551e:	mov    ecx,ebp
  425520:	mov    r8,rax
  425523:	xor    eax,eax
  425525:	call   403630 <snprintf@plt>
  42552a:	lea    rax,[rip+0x4772f]        # 46cc60 <strcmp@plt+0x694c8>
  425531:	mov    r15,QWORD PTR [r15+0x8]
  425535:	mov    edx,DWORD PTR [rip+0x47d01]        # 46d23c <strcmp@plt+0x69aa4>
  42553b:	cmp    r15,QWORD PTR [r12]
  42553f:	jne    4254e0 <strcmp@plt+0x21d48>
  425541:	imul   rcx,rdx,0x1f4
  425548:	add    rax,rcx
  42554b:	add    rsp,0x8
  42554f:	pop    rbx
  425550:	pop    r12
  425552:	pop    r13
  425554:	pop    r14
  425556:	pop    r15
  425558:	pop    rbp
  425559:	ret    
  42555a:	nop    WORD PTR [rax+rax*1+0x0]
  425560:	push   r15
  425562:	push   r14
  425564:	push   r12
  425566:	push   rbx
  425567:	push   rax
  425568:	mov    r14,rdi
  42556b:	mov    DWORD PTR [rdi],0x340
  425571:	mov    WORD PTR [rdi+0x4],0x1
  425577:	lea    r12,[rdi+0x8]
  42557b:	mov    rax,QWORD PTR [rsi]
  42557e:	mov    rbx,QWORD PTR [rax+0x8]
  425582:	cmp    rbx,rax
  425585:	je     4255ae <strcmp@plt+0x21e16>
  425587:	mov    r15,rsi
  42558a:	nop    WORD PTR [rax+rax*1+0x0]
  425590:	mov    rsi,QWORD PTR [rbx+0x10]
  425594:	mov    rdi,r12
  425597:	call   423540 <strcmp@plt+0x1fda8>
  42559c:	test   eax,eax
  42559e:	jle    4255c1 <strcmp@plt+0x21e29>
  4255a0:	cdqe   
  4255a2:	add    r12,rax
  4255a5:	mov    rbx,QWORD PTR [rbx+0x8]
  4255a9:	cmp    rbx,QWORD PTR [r15]
  4255ac:	jne    425590 <strcmp@plt+0x21df8>
  4255ae:	mov    eax,r12d
  4255b1:	sub    eax,r14d
  4255b4:	lea    ecx,[rax-0x8]
  4255b7:	movbe  WORD PTR [r12+0x6],cx
  4255bf:	jmp    4255c3 <strcmp@plt+0x21e2b>
  4255c1:	xor    eax,eax
  4255c3:	add    rsp,0x8
  4255c7:	pop    rbx
  4255c8:	pop    r12
  4255ca:	pop    r14
  4255cc:	pop    r15
  4255ce:	ret    
  4255cf:	nop
  4255d0:	push   rbx
  4255d1:	mov    DWORD PTR [rdi],0x340
  4255d7:	mov    BYTE PTR [rdi+0x4],0x2
  4255db:	test   rsi,rsi
  4255de:	je     42560b <strcmp@plt+0x21e73>
  4255e0:	mov    rbx,rdi
  4255e3:	mov    al,BYTE PTR [rsi+0x4]
  4255e6:	mov    BYTE PTR [rdi+0x5],al
  4255e9:	mov    eax,DWORD PTR [rsi]
  4255eb:	movbe  DWORD PTR [rdi+0x8],eax
  4255f0:	add    rdi,0xc
  4255f4:	mov    rsi,QWORD PTR [rsi+0x8]
  4255f8:	call   423540 <strcmp@plt+0x1fda8>
  4255fd:	lea    ecx,[rax+0x4]
  425600:	movbe  WORD PTR [rbx+0x6],cx
  425606:	add    eax,0xc
  425609:	pop    rbx
  42560a:	ret    
  42560b:	lea    rdi,[rip+0x26d70]        # 44c382 <strcmp@plt+0x48bea>
  425612:	lea    rsi,[rip+0x24544]        # 449b5d <strcmp@plt+0x463c5>
  425619:	lea    rcx,[rip+0x24c88]        # 44a2a8 <strcmp@plt+0x46b10>
  425620:	mov    edx,0x2f6
  425625:	call   4032b0 <__assert_fail@plt>
  42562a:	nop    WORD PTR [rax+rax*1+0x0]
  425630:	push   rbp
  425631:	push   r15
  425633:	push   r14
  425635:	push   r13
  425637:	push   r12
  425639:	push   rbx
  42563a:	push   rax
  42563b:	mov    r15,rsi
  42563e:	mov    r14,rdi
  425641:	mov    DWORD PTR [rdi],0x340
  425647:	mov    WORD PTR [rdi+0x4],0x7
  42564d:	movzx  eax,WORD PTR [rsi+0x10]
  425651:	movbe  WORD PTR [rdi+0x8],ax
  425657:	movzx  eax,WORD PTR [rsi]
  42565a:	movbe  WORD PTR [rdi+0xa],ax
  425660:	lea    rbp,[rdi+0xc]
  425664:	mov    rsi,QWORD PTR [rsi+0x8]
  425668:	mov    rdi,rbp
  42566b:	call   423540 <strcmp@plt+0x1fda8>
  425670:	xor    ebx,ebx
  425672:	test   eax,eax
  425674:	je     425705 <strcmp@plt+0x21f6d>
  42567a:	mov    r12d,eax
  42567d:	mov    eax,eax
  42567f:	add    rbp,rax
  425682:	mov    rsi,QWORD PTR [r15+0x18]
  425686:	mov    rdi,rbp
  425689:	call   423540 <strcmp@plt+0x1fda8>
  42568e:	test   eax,eax
  425690:	je     425705 <strcmp@plt+0x21f6d>
  425692:	mov    r13d,eax
  425695:	mov    eax,eax
  425697:	add    rbp,rax
  42569a:	mov    rsi,QWORD PTR [r15+0x20]
  42569e:	mov    rdi,rbp
  4256a1:	call   423540 <strcmp@plt+0x1fda8>
  4256a6:	test   eax,eax
  4256a8:	je     425705 <strcmp@plt+0x21f6d>
  4256aa:	add    r12d,r13d
  4256ad:	lea    r12d,[rax+r12*1]
  4256b1:	add    r12d,0xc
  4256b5:	mov    rcx,QWORD PTR [r15+0x28]
  4256b9:	mov    rbx,QWORD PTR [rcx+0x8]
  4256bd:	cmp    rbx,rcx
  4256c0:	je     4256f2 <strcmp@plt+0x21f5a>
  4256c2:	mov    eax,eax
  4256c4:	add    rbp,rax
  4256c7:	nop    WORD PTR [rax+rax*1+0x0]
  4256d0:	mov    rsi,QWORD PTR [rbx+0x10]
  4256d4:	mov    rdi,rbp
  4256d7:	call   423540 <strcmp@plt+0x1fda8>
  4256dc:	test   eax,eax
  4256de:	je     425703 <strcmp@plt+0x21f6b>
  4256e0:	add    r12d,eax
  4256e3:	mov    eax,eax
  4256e5:	add    rbp,rax
  4256e8:	mov    rbx,QWORD PTR [rbx+0x8]
  4256ec:	cmp    rbx,QWORD PTR [r15+0x28]
  4256f0:	jne    4256d0 <strcmp@plt+0x21f38>
  4256f2:	lea    eax,[r12-0x8]
  4256f7:	movbe  WORD PTR [r14+0x6],ax
  4256fe:	mov    ebx,r12d
  425701:	jmp    425705 <strcmp@plt+0x21f6d>
  425703:	xor    ebx,ebx
  425705:	mov    eax,ebx
  425707:	add    rsp,0x8
  42570b:	pop    rbx
  42570c:	pop    r12
  42570e:	pop    r13
  425710:	pop    r14
  425712:	pop    r15
  425714:	pop    rbp
  425715:	ret    
  425716:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425720:	push   r15
  425722:	push   r14
  425724:	push   rbx
  425725:	mov    WORD PTR [rdi],0x340
  42572a:	mov    DWORD PTR [rdi+0x2],0x90000
  425731:	test   rsi,rsi
  425734:	je     42578e <strcmp@plt+0x21ff6>
  425736:	mov    r14,rsi
  425739:	mov    rbx,rdi
  42573c:	mov    eax,DWORD PTR [rsi+0x4]
  42573f:	movbe  DWORD PTR [rdi+0x8],eax
  425744:	mov    WORD PTR [rdi+0xc],0x0
  42574a:	mov    al,BYTE PTR [rsi]
  42574c:	mov    BYTE PTR [rdi+0xe],al
  42574f:	mov    al,BYTE PTR [rsi+0x1]
  425752:	mov    BYTE PTR [rdi+0xf],al
  425755:	add    rdi,0x10
  425759:	mov    rsi,QWORD PTR [rsi+0x8]
  42575d:	call   423540 <strcmp@plt+0x1fda8>
  425762:	movsxd r15,eax
  425765:	lea    rdi,[rbx+r15*1]
  425769:	add    rdi,0x10
  42576d:	mov    rsi,QWORD PTR [r14+0x10]
  425771:	call   423540 <strcmp@plt+0x1fda8>
  425776:	lea    ecx,[rax+r15*1]
  42577a:	add    ecx,0x8
  42577d:	movbe  WORD PTR [rbx+0x6],cx
  425783:	lea    eax,[rax+r15*1+0x10]
  425788:	pop    rbx
  425789:	pop    r14
  42578b:	pop    r15
  42578d:	ret    
  42578e:	lea    rdi,[rip+0x247b1]        # 449f46 <strcmp@plt+0x467ae>
  425795:	lea    rsi,[rip+0x243c1]        # 449b5d <strcmp@plt+0x463c5>
  42579c:	lea    rcx,[rip+0x24a8c]        # 44a22f <strcmp@plt+0x46a97>
  4257a3:	mov    edx,0x24a
  4257a8:	call   4032b0 <__assert_fail@plt>
  4257ad:	nop    DWORD PTR [rax]
  4257b0:	push   r15
  4257b2:	push   r14
  4257b4:	push   r13
  4257b6:	push   r12
  4257b8:	push   rbx
  4257b9:	mov    r14,rdi
  4257bc:	mov    DWORD PTR [rdi],0x340
  4257c2:	mov    WORD PTR [rdi+0x4],0xa
  4257c8:	mov    rax,QWORD PTR [rsi]
  4257cb:	mov    r13,QWORD PTR [rax+0x8]
  4257cf:	cmp    r13,rax
  4257d2:	je     425855 <strcmp@plt+0x220bd>
  4257d8:	mov    r15,rsi
  4257db:	lea    rbx,[r14+0x8]
  4257df:	mov    r12d,0x8
  4257e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4257ef:	nop
  4257f0:	mov    rsi,QWORD PTR [r13+0x10]
  4257f4:	movzx  ecx,BYTE PTR [rsi]
  4257f7:	movzx  edx,BYTE PTR [rbx+0x1]
  4257fb:	shl    cl,0x2
  4257fe:	and    cl,0x4
  425801:	and    dl,0xfb
  425804:	or     dl,cl
  425806:	mov    BYTE PTR [rbx+0x1],dl
  425809:	movzx  eax,BYTE PTR [rsi]
  42580c:	and    al,0x2
  42580e:	and    dl,0xfd
  425811:	or     dl,al
  425813:	mov    BYTE PTR [rbx+0x1],dl
  425816:	movzx  edx,BYTE PTR [rsi]
  425819:	shr    dl,0x2
  42581c:	and    dl,0x1
  42581f:	or     al,cl
  425821:	or     al,dl
  425823:	mov    BYTE PTR [rbx],0x0
  425826:	mov    BYTE PTR [rbx+0x1],al
  425829:	add    rbx,0x2
  42582d:	mov    rsi,QWORD PTR [rsi+0x8]
  425831:	mov    rdi,rbx
  425834:	call   423540 <strcmp@plt+0x1fda8>
  425839:	test   eax,eax
  42583b:	je     425869 <strcmp@plt+0x220d1>
  42583d:	mov    ecx,eax
  42583f:	add    rbx,rcx
  425842:	lea    r12d,[r12+rax*1]
  425846:	add    r12d,0x2
  42584a:	mov    r13,QWORD PTR [r13+0x8]
  42584e:	cmp    r13,QWORD PTR [r15]
  425851:	jne    4257f0 <strcmp@plt+0x22058>
  425853:	jmp    42585b <strcmp@plt+0x220c3>
  425855:	mov    r12d,0x8
  42585b:	lea    eax,[r12-0x8]
  425860:	movbe  WORD PTR [r14+0x6],ax
  425867:	jmp    42586c <strcmp@plt+0x220d4>
  425869:	xor    r12d,r12d
  42586c:	mov    eax,r12d
  42586f:	pop    rbx
  425870:	pop    r12
  425872:	pop    r13
  425874:	pop    r14
  425876:	pop    r15
  425878:	ret    
  425879:	nop    DWORD PTR [rax+0x0]
  425880:	push   r15
  425882:	push   r14
  425884:	push   r13
  425886:	push   r12
  425888:	push   rbx
  425889:	mov    r14,rdi
  42588c:	mov    DWORD PTR [rdi],0x340
  425892:	mov    WORD PTR [rdi+0x4],0xd
  425898:	mov    rax,QWORD PTR [rsi]
  42589b:	mov    r13,QWORD PTR [rax+0x8]
  42589f:	cmp    r13,rax
  4258a2:	je     4258ff <strcmp@plt+0x22167>
  4258a4:	mov    r15,rsi
  4258a7:	lea    rbx,[r14+0x8]
  4258ab:	mov    r12d,0x8
  4258b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4258c0:	mov    rax,QWORD PTR [r13+0x10]
  4258c4:	movzx  ecx,BYTE PTR [rax+0x8]
  4258c8:	mov    BYTE PTR [rbx+0x3],cl
  4258cb:	mov    WORD PTR [rbx],0x0
  4258d0:	mov    BYTE PTR [rbx+0x2],0x0
  4258d4:	add    rbx,0x4
  4258d8:	mov    rsi,QWORD PTR [rax]
  4258db:	mov    rdi,rbx
  4258de:	call   423540 <strcmp@plt+0x1fda8>
  4258e3:	test   eax,eax
  4258e5:	je     425913 <strcmp@plt+0x2217b>
  4258e7:	mov    ecx,eax
  4258e9:	add    rbx,rcx
  4258ec:	lea    r12d,[r12+rax*1]
  4258f0:	add    r12d,0x4
  4258f4:	mov    r13,QWORD PTR [r13+0x8]
  4258f8:	cmp    r13,QWORD PTR [r15]
  4258fb:	jne    4258c0 <strcmp@plt+0x22128>
  4258fd:	jmp    425905 <strcmp@plt+0x2216d>
  4258ff:	mov    r12d,0x8
  425905:	lea    eax,[r12-0x8]
  42590a:	movbe  WORD PTR [r14+0x6],ax
  425911:	jmp    425916 <strcmp@plt+0x2217e>
  425913:	xor    r12d,r12d
  425916:	mov    eax,r12d
  425919:	pop    rbx
  42591a:	pop    r12
  42591c:	pop    r13
  42591e:	pop    r14
  425920:	pop    r15
  425922:	ret    
  425923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42592d:	nop    DWORD PTR [rax]
  425930:	push   r15
  425932:	push   r14
  425934:	push   r12
  425936:	push   rbx
  425937:	push   rax
  425938:	mov    r14,rsi
  42593b:	mov    r12,rdi
  42593e:	cmp    QWORD PTR [rdi],0x0
  425942:	jne    425964 <strcmp@plt+0x221cc>
  425944:	mov    edi,0x8
  425949:	call   431d60 <strcmp@plt+0x2e5c8>
  42594e:	mov    r15,rax
  425951:	lea    rdi,[rip+0xffffffffffffd338]        # 422c90 <strcmp@plt+0x1f4f8>
  425958:	call   42b9b0 <strcmp@plt+0x28218>
  42595d:	mov    QWORD PTR [r15],rax
  425960:	mov    QWORD PTR [r12],r15
  425964:	mov    rax,QWORD PTR [r14]
  425967:	mov    rbx,QWORD PTR [rax+0x8]
  42596b:	cmp    rbx,rax
  42596e:	je     425991 <strcmp@plt+0x221f9>
  425970:	mov    rdi,QWORD PTR [rbx+0x10]
  425974:	call   423440 <strcmp@plt+0x1fca8>
  425979:	mov    rcx,QWORD PTR [r12]
  42597d:	mov    rsi,QWORD PTR [rcx]
  425980:	mov    rdi,rax
  425983:	call   42bbd0 <strcmp@plt+0x28438>
  425988:	mov    rbx,QWORD PTR [rbx+0x8]
  42598c:	cmp    rbx,QWORD PTR [r14]
  42598f:	jne    425970 <strcmp@plt+0x221d8>
  425991:	add    rsp,0x8
  425995:	pop    rbx
  425996:	pop    r12
  425998:	pop    r14
  42599a:	pop    r15
  42599c:	ret    
  42599d:	nop    DWORD PTR [rax]
  4259a0:	push   rbp
  4259a1:	push   r15
  4259a3:	push   r14
  4259a5:	push   r12
  4259a7:	push   rbx
  4259a8:	mov    rbx,rsi
  4259ab:	mov    r14,rdi
  4259ae:	mov    rax,QWORD PTR [rdi]
  4259b1:	test   rax,rax
  4259b4:	je     4259dc <strcmp@plt+0x22244>
  4259b6:	test   rbx,rbx
  4259b9:	je     425a20 <strcmp@plt+0x22288>
  4259bb:	mov    rdi,QWORD PTR [rax+0x8]
  4259bf:	mov    rsi,QWORD PTR [rbx+0x8]
  4259c3:	call   423260 <strcmp@plt+0x1fac8>
  4259c8:	mov    rax,QWORD PTR [r14]
  4259cb:	test   rax,rax
  4259ce:	je     425a3f <strcmp@plt+0x222a7>
  4259d0:	mov    ecx,DWORD PTR [rbx]
  4259d2:	mov    DWORD PTR [rax],ecx
  4259d4:	mov    cl,BYTE PTR [rbx+0x4]
  4259d7:	mov    BYTE PTR [rax+0x4],cl
  4259da:	jmp    425a17 <strcmp@plt+0x2227f>
  4259dc:	test   rbx,rbx
  4259df:	je     425a5e <strcmp@plt+0x222c6>
  4259e1:	mov    ebp,DWORD PTR [rbx]
  4259e3:	mov    r15,QWORD PTR [rbx+0x8]
  4259e7:	mov    r12b,BYTE PTR [rbx+0x4]
  4259eb:	mov    edi,0x10
  4259f0:	call   431d60 <strcmp@plt+0x2e5c8>
  4259f5:	mov    rbx,rax
  4259f8:	xor    eax,eax
  4259fa:	call   422c80 <strcmp@plt+0x1f4e8>
  4259ff:	mov    QWORD PTR [rbx+0x8],rax
  425a03:	mov    DWORD PTR [rbx],ebp
  425a05:	mov    rdi,rax
  425a08:	mov    rsi,r15
  425a0b:	call   423260 <strcmp@plt+0x1fac8>
  425a10:	mov    BYTE PTR [rbx+0x4],r12b
  425a14:	mov    QWORD PTR [r14],rbx
  425a17:	pop    rbx
  425a18:	pop    r12
  425a1a:	pop    r14
  425a1c:	pop    r15
  425a1e:	pop    rbp
  425a1f:	ret    
  425a20:	lea    rdi,[rip+0x2695b]        # 44c382 <strcmp@plt+0x48bea>
  425a27:	lea    rsi,[rip+0x2412f]        # 449b5d <strcmp@plt+0x463c5>
  425a2e:	lea    rcx,[rip+0x248b9]        # 44a2ee <strcmp@plt+0x46b56>
  425a35:	mov    edx,0x30a
  425a3a:	call   4032b0 <__assert_fail@plt>
  425a3f:	lea    rdi,[rip+0x248cf]        # 44a315 <strcmp@plt+0x46b7d>
  425a46:	lea    rsi,[rip+0x24110]        # 449b5d <strcmp@plt+0x463c5>
  425a4d:	lea    rcx,[rip+0x248c6]        # 44a31a <strcmp@plt+0x46b82>
  425a54:	mov    edx,0x311
  425a59:	call   4032b0 <__assert_fail@plt>
  425a5e:	lea    rdi,[rip+0x2691d]        # 44c382 <strcmp@plt+0x48bea>
  425a65:	lea    rsi,[rip+0x240f1]        # 449b5d <strcmp@plt+0x463c5>
  425a6c:	lea    rcx,[rip+0x24858]        # 44a2cb <strcmp@plt+0x46b33>
  425a73:	mov    edx,0x303
  425a78:	call   4032b0 <__assert_fail@plt>
  425a7d:	nop    DWORD PTR [rax]
  425a80:	push   r15
  425a82:	push   r14
  425a84:	push   rbx
  425a85:	test   rsi,rsi
  425a88:	je     425b14 <strcmp@plt+0x2237c>
  425a8e:	mov    r14,rsi
  425a91:	mov    r15,rdi
  425a94:	mov    rbx,QWORD PTR [rdi]
  425a97:	test   rbx,rbx
  425a9a:	jne    425ac1 <strcmp@plt+0x22329>
  425a9c:	mov    edi,0x1
  425aa1:	mov    esi,0x18
  425aa6:	call   4032d0 <calloc@plt>
  425aab:	mov    rbx,rax
  425aae:	xor    eax,eax
  425ab0:	call   422c80 <strcmp@plt+0x1f4e8>
  425ab5:	mov    QWORD PTR [rbx+0x10],rax
  425ab9:	mov    QWORD PTR [r15],rbx
  425abc:	test   rbx,rbx
  425abf:	je     425b33 <strcmp@plt+0x2239b>
  425ac1:	mov    al,BYTE PTR [r14]
  425ac4:	mov    BYTE PTR [rbx],al
  425ac6:	movzx  eax,WORD PTR [r14+0x2]
  425acb:	mov    WORD PTR [rbx+0x2],ax
  425acf:	mov    al,BYTE PTR [r14+0x4]
  425ad3:	mov    BYTE PTR [rbx+0x4],al
  425ad6:	mov    al,BYTE PTR [r14+0x5]
  425ada:	mov    BYTE PTR [rbx+0x5],al
  425add:	mov    al,BYTE PTR [r14+0x6]
  425ae1:	mov    BYTE PTR [rbx+0x6],al
  425ae4:	movzx  eax,WORD PTR [r14+0x8]
  425ae9:	mov    WORD PTR [rbx+0x8],ax
  425aed:	mov    al,BYTE PTR [r14+0xa]
  425af1:	mov    BYTE PTR [rbx+0xa],al
  425af4:	mov    al,BYTE PTR [r14+0xb]
  425af8:	mov    BYTE PTR [rbx+0xb],al
  425afb:	mov    eax,DWORD PTR [r14+0xc]
  425aff:	mov    DWORD PTR [rbx+0xc],eax
  425b02:	mov    rdi,QWORD PTR [rbx+0x10]
  425b06:	mov    rsi,QWORD PTR [r14+0x10]
  425b0a:	pop    rbx
  425b0b:	pop    r14
  425b0d:	pop    r15
  425b0f:	jmp    423260 <strcmp@plt+0x1fac8>
  425b14:	lea    rdi,[rip+0x242ec]        # 449e07 <strcmp@plt+0x4666f>
  425b1b:	lea    rsi,[rip+0x2403b]        # 449b5d <strcmp@plt+0x463c5>
  425b22:	lea    rcx,[rip+0x24ac4]        # 44a5ed <strcmp@plt+0x46e55>
  425b29:	mov    edx,0x43e
  425b2e:	call   4032b0 <__assert_fail@plt>
  425b33:	lea    rdi,[rip+0x248ac]        # 44a3e6 <strcmp@plt+0x46c4e>
  425b3a:	lea    rsi,[rip+0x2401c]        # 449b5d <strcmp@plt+0x463c5>
  425b41:	lea    rcx,[rip+0x2492b]        # 44a473 <strcmp@plt+0x46cdb>
  425b48:	mov    edx,0x3d7
  425b4d:	call   4032b0 <__assert_fail@plt>
  425b52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b5c:	nop    DWORD PTR [rax+0x0]
  425b60:	push   r15
  425b62:	push   r14
  425b64:	push   r12
  425b66:	push   rbx
  425b67:	push   rax
  425b68:	mov    r14,rsi
  425b6b:	mov    r12,QWORD PTR [rdi]
  425b6e:	test   r12,r12
  425b71:	jne    425bbb <strcmp@plt+0x22423>
  425b73:	mov    r15,rdi
  425b76:	mov    edi,0x30
  425b7b:	call   431d60 <strcmp@plt+0x2e5c8>
  425b80:	mov    r12,rax
  425b83:	xor    eax,eax
  425b85:	call   422c80 <strcmp@plt+0x1f4e8>
  425b8a:	mov    QWORD PTR [r12+0x18],rax
  425b8f:	xor    eax,eax
  425b91:	call   422c80 <strcmp@plt+0x1f4e8>
  425b96:	mov    QWORD PTR [r12+0x8],rax
  425b9b:	xor    eax,eax
  425b9d:	call   422c80 <strcmp@plt+0x1f4e8>
  425ba2:	mov    QWORD PTR [r12+0x20],rax
  425ba7:	lea    rdi,[rip+0xffffffffffffd0e2]        # 422c90 <strcmp@plt+0x1f4f8>
  425bae:	call   42b9b0 <strcmp@plt+0x28218>
  425bb3:	mov    QWORD PTR [r12+0x28],rax
  425bb8:	mov    QWORD PTR [r15],r12
  425bbb:	movzx  eax,WORD PTR [r14]
  425bbf:	mov    WORD PTR [r12],ax
  425bc4:	movzx  eax,WORD PTR [r14+0x10]
  425bc9:	mov    WORD PTR [r12+0x10],ax
  425bcf:	mov    rdi,QWORD PTR [r12+0x8]
  425bd4:	mov    rsi,QWORD PTR [r14+0x8]
  425bd8:	call   423260 <strcmp@plt+0x1fac8>
  425bdd:	mov    rdi,QWORD PTR [r12+0x18]
  425be2:	mov    rsi,QWORD PTR [r14+0x18]
  425be6:	call   423260 <strcmp@plt+0x1fac8>
  425beb:	mov    rdi,QWORD PTR [r12+0x20]
  425bf0:	mov    rsi,QWORD PTR [r14+0x20]
  425bf4:	call   423260 <strcmp@plt+0x1fac8>
  425bf9:	mov    rdi,QWORD PTR [r12+0x28]
  425bfe:	call   42bf80 <strcmp@plt+0x287e8>
  425c03:	mov    rax,QWORD PTR [r14+0x28]
  425c07:	mov    rbx,QWORD PTR [rax+0x8]
  425c0b:	cmp    rbx,rax
  425c0e:	je     425c30 <strcmp@plt+0x22498>
  425c10:	mov    rdi,QWORD PTR [rbx+0x10]
  425c14:	call   423440 <strcmp@plt+0x1fca8>
  425c19:	mov    rsi,QWORD PTR [r12+0x28]
  425c1e:	mov    rdi,rax
  425c21:	call   42baa0 <strcmp@plt+0x28308>
  425c26:	mov    rbx,QWORD PTR [rbx+0x8]
  425c2a:	cmp    rbx,QWORD PTR [r14+0x28]
  425c2e:	jne    425c10 <strcmp@plt+0x22478>
  425c30:	add    rsp,0x8
  425c34:	pop    rbx
  425c35:	pop    r12
  425c37:	pop    r14
  425c39:	pop    r15
  425c3b:	ret    
  425c3c:	nop    DWORD PTR [rax+0x0]
  425c40:	push   r15
  425c42:	push   r14
  425c44:	push   rbx
  425c45:	mov    r15,rsi
  425c48:	mov    r14,rdi
  425c4b:	mov    rbx,QWORD PTR [rdi]
  425c4e:	test   rbx,rbx
  425c51:	jne    425c7e <strcmp@plt+0x224e6>
  425c53:	mov    edi,0x1
  425c58:	mov    esi,0x18
  425c5d:	call   4032d0 <calloc@plt>
  425c62:	mov    rbx,rax
  425c65:	xor    eax,eax
  425c67:	call   422c80 <strcmp@plt+0x1f4e8>
  425c6c:	mov    QWORD PTR [rbx+0x8],rax
  425c70:	xor    eax,eax
  425c72:	call   422c80 <strcmp@plt+0x1f4e8>
  425c77:	mov    QWORD PTR [rbx+0x10],rax
  425c7b:	mov    QWORD PTR [r14],rbx
  425c7e:	test   r15,r15
  425c81:	je     425cc2 <strcmp@plt+0x2252a>
  425c83:	test   rbx,rbx
  425c86:	je     425ce1 <strcmp@plt+0x22549>
  425c88:	mov    eax,DWORD PTR [r15+0x4]
  425c8c:	mov    DWORD PTR [rbx+0x4],eax
  425c8f:	mov    al,BYTE PTR [r15]
  425c92:	mov    BYTE PTR [rbx],al
  425c94:	mov    al,BYTE PTR [r15+0x1]
  425c98:	mov    BYTE PTR [rbx+0x1],al
  425c9b:	mov    rdi,QWORD PTR [rbx+0x8]
  425c9f:	mov    rsi,QWORD PTR [r15+0x8]
  425ca3:	call   423260 <strcmp@plt+0x1fac8>
  425ca8:	mov    rax,QWORD PTR [r14]
  425cab:	test   rax,rax
  425cae:	je     425d00 <strcmp@plt+0x22568>
  425cb0:	mov    rdi,QWORD PTR [rax+0x10]
  425cb4:	mov    rsi,QWORD PTR [r15+0x10]
  425cb8:	pop    rbx
  425cb9:	pop    r14
  425cbb:	pop    r15
  425cbd:	jmp    423260 <strcmp@plt+0x1fac8>
  425cc2:	lea    rdi,[rip+0x2427d]        # 449f46 <strcmp@plt+0x467ae>
  425cc9:	lea    rsi,[rip+0x23e8d]        # 449b5d <strcmp@plt+0x463c5>
  425cd0:	lea    rcx,[rip+0x24558]        # 44a22f <strcmp@plt+0x46a97>
  425cd7:	mov    edx,0x24a
  425cdc:	call   4032b0 <__assert_fail@plt>
  425ce1:	lea    rdi,[rip+0x2425e]        # 449f46 <strcmp@plt+0x467ae>
  425ce8:	lea    rsi,[rip+0x23e6e]        # 449b5d <strcmp@plt+0x463c5>
  425cef:	lea    rcx,[rip+0x243a8]        # 44a09e <strcmp@plt+0x46906>
  425cf6:	mov    edx,0x1d7
  425cfb:	call   4032b0 <__assert_fail@plt>
  425d00:	lea    rdi,[rip+0x2423f]        # 449f46 <strcmp@plt+0x467ae>
  425d07:	lea    rsi,[rip+0x23e4f]        # 449b5d <strcmp@plt+0x463c5>
  425d0e:	lea    rcx,[rip+0x244d5]        # 44a1ea <strcmp@plt+0x46a52>
  425d15:	mov    edx,0x23c
  425d1a:	call   4032b0 <__assert_fail@plt>
  425d1f:	nop
  425d20:	push   r15
  425d22:	push   r14
  425d24:	push   r13
  425d26:	push   r12
  425d28:	push   rbx
  425d29:	mov    r14,rsi
  425d2c:	mov    r15,QWORD PTR [rdi]
  425d2f:	test   r15,r15
  425d32:	jne    425d56 <strcmp@plt+0x225be>
  425d34:	mov    rbx,rdi
  425d37:	mov    edi,0x8
  425d3c:	call   431d60 <strcmp@plt+0x2e5c8>
  425d41:	mov    r15,rax
  425d44:	lea    rdi,[rip+0x21f5]        # 427f40 <strcmp@plt+0x247a8>
  425d4b:	call   42b9b0 <strcmp@plt+0x28218>
  425d50:	mov    QWORD PTR [r15],rax
  425d53:	mov    QWORD PTR [rbx],r15
  425d56:	mov    rax,QWORD PTR [r14]
  425d59:	mov    r12,QWORD PTR [rax+0x8]
  425d5d:	cmp    r12,rax
  425d60:	je     425dd1 <strcmp@plt+0x22639>
  425d62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d6c:	nop    DWORD PTR [rax+0x0]
  425d70:	mov    r13,QWORD PTR [r12+0x10]
  425d75:	mov    edi,0x10
  425d7a:	call   431d60 <strcmp@plt+0x2e5c8>
  425d7f:	mov    rbx,rax
  425d82:	movzx  eax,BYTE PTR [r13+0x0]
  425d87:	and    al,0x1
  425d89:	movzx  ecx,BYTE PTR [rbx]
  425d8c:	and    cl,0xfe
  425d8f:	or     cl,al
  425d91:	mov    BYTE PTR [rbx],cl
  425d93:	movzx  eax,BYTE PTR [r13+0x0]
  425d98:	and    al,0x2
  425d9a:	and    cl,0xfd
  425d9d:	or     cl,al
  425d9f:	mov    BYTE PTR [rbx],cl
  425da1:	movzx  eax,BYTE PTR [r13+0x0]
  425da6:	and    al,0x4
  425da8:	and    cl,0xfb
  425dab:	or     cl,al
  425dad:	mov    BYTE PTR [rbx],cl
  425daf:	mov    rdi,QWORD PTR [r13+0x8]
  425db3:	call   423440 <strcmp@plt+0x1fca8>
  425db8:	mov    QWORD PTR [rbx+0x8],rax
  425dbc:	mov    rsi,QWORD PTR [r15]
  425dbf:	mov    rdi,rbx
  425dc2:	call   42bbd0 <strcmp@plt+0x28438>
  425dc7:	mov    r12,QWORD PTR [r12+0x8]
  425dcc:	cmp    r12,QWORD PTR [r14]
  425dcf:	jne    425d70 <strcmp@plt+0x225d8>
  425dd1:	pop    rbx
  425dd2:	pop    r12
  425dd4:	pop    r13
  425dd6:	pop    r14
  425dd8:	pop    r15
  425dda:	ret    
  425ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  425de0:	push   r15
  425de2:	push   r14
  425de4:	push   r13
  425de6:	push   r12
  425de8:	push   rbx
  425de9:	mov    r14,rsi
  425dec:	mov    r12,QWORD PTR [rdi]
  425def:	test   r12,r12
  425df2:	jne    425e17 <strcmp@plt+0x2267f>
  425df4:	mov    r15,rdi
  425df7:	mov    edi,0x8
  425dfc:	call   431d60 <strcmp@plt+0x2e5c8>
  425e01:	mov    r12,rax
  425e04:	lea    rdi,[rip+0x22d5]        # 4280e0 <strcmp@plt+0x24948>
  425e0b:	call   42b9b0 <strcmp@plt+0x28218>
  425e10:	mov    QWORD PTR [r12],rax
  425e14:	mov    QWORD PTR [r15],r12
  425e17:	mov    rax,QWORD PTR [r14]
  425e1a:	mov    rbx,QWORD PTR [rax+0x8]
  425e1e:	cmp    rbx,rax
  425e21:	je     425e6b <strcmp@plt+0x226d3>
  425e23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e2d:	nop    DWORD PTR [rax]
  425e30:	mov    r13,QWORD PTR [rbx+0x10]
  425e34:	mov    edi,0x10
  425e39:	call   431d60 <strcmp@plt+0x2e5c8>
  425e3e:	mov    r15,rax
  425e41:	movzx  eax,BYTE PTR [r13+0x8]
  425e46:	mov    BYTE PTR [r15+0x8],al
  425e4a:	mov    rdi,QWORD PTR [r13+0x0]
  425e4e:	call   423440 <strcmp@plt+0x1fca8>
  425e53:	mov    QWORD PTR [r15],rax
  425e56:	mov    rsi,QWORD PTR [r12]
  425e5a:	mov    rdi,r15
  425e5d:	call   42bbd0 <strcmp@plt+0x28438>
  425e62:	mov    rbx,QWORD PTR [rbx+0x8]
  425e66:	cmp    rbx,QWORD PTR [r14]
  425e69:	jne    425e30 <strcmp@plt+0x22698>
  425e6b:	pop    rbx
  425e6c:	pop    r12
  425e6e:	pop    r13
  425e70:	pop    r14
  425e72:	pop    r15
  425e74:	ret    
  425e75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425e7f:	nop
  425e80:	push   r15
  425e82:	push   r14
  425e84:	push   r12
  425e86:	push   rbx
  425e87:	push   rax
  425e88:	mov    rax,QWORD PTR [rdi]
  425e8b:	mov    rcx,QWORD PTR [rsi]
  425e8e:	mov    edx,DWORD PTR [rcx+0x18]
  425e91:	mov    r14d,0x1
  425e97:	cmp    DWORD PTR [rax+0x18],edx
  425e9a:	jg     425ee5 <strcmp@plt+0x2274d>
  425e9c:	mov    r14d,0x2
  425ea2:	jl     425ee5 <strcmp@plt+0x2274d>
  425ea4:	mov    r15,rdi
  425ea7:	xor    r14d,r14d
  425eaa:	test   edx,edx
  425eac:	je     425eb4 <strcmp@plt+0x2271c>
  425eae:	mov    r12,QWORD PTR [rcx+0x8]
  425eb2:	jmp    425eb7 <strcmp@plt+0x2271f>
  425eb4:	xor    r12d,r12d
  425eb7:	mov    rbx,QWORD PTR [rax+0x8]
  425ebb:	cmp    rbx,rax
  425ebe:	je     425ee5 <strcmp@plt+0x2274d>
  425ec0:	mov    rdi,QWORD PTR [rbx+0x10]
  425ec4:	mov    rsi,QWORD PTR [r12+0x10]
  425ec9:	call   423670 <strcmp@plt+0x1fed8>
  425ece:	test   eax,eax
  425ed0:	jne    425ee2 <strcmp@plt+0x2274a>
  425ed2:	mov    r12,QWORD PTR [r12+0x8]
  425ed7:	mov    rbx,QWORD PTR [rbx+0x8]
  425edb:	cmp    rbx,QWORD PTR [r15]
  425ede:	jne    425ec0 <strcmp@plt+0x22728>
  425ee0:	jmp    425ee5 <strcmp@plt+0x2274d>
  425ee2:	mov    r14d,eax
  425ee5:	mov    eax,r14d
  425ee8:	add    rsp,0x8
  425eec:	pop    rbx
  425eed:	pop    r12
  425eef:	pop    r14
  425ef1:	pop    r15
  425ef3:	ret    
  425ef4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425efe:	xchg   ax,ax
  425f00:	push   rax
  425f01:	test   rdi,rdi
  425f04:	je     425f3b <strcmp@plt+0x227a3>
  425f06:	test   rsi,rsi
  425f09:	je     425f3b <strcmp@plt+0x227a3>
  425f0b:	mov    eax,DWORD PTR [rdi]
  425f0d:	mov    ecx,DWORD PTR [rsi]
  425f0f:	cmp    eax,ecx
  425f11:	jne    425f2b <strcmp@plt+0x22793>
  425f13:	mov    al,BYTE PTR [rdi+0x4]
  425f16:	mov    cl,BYTE PTR [rsi+0x4]
  425f19:	cmp    al,cl
  425f1b:	jne    425f2f <strcmp@plt+0x22797>
  425f1d:	mov    rdi,QWORD PTR [rdi+0x8]
  425f21:	mov    rsi,QWORD PTR [rsi+0x8]
  425f25:	pop    rax
  425f26:	jmp    423670 <strcmp@plt+0x1fed8>
  425f2b:	cmp    ecx,eax
  425f2d:	jmp    425f31 <strcmp@plt+0x22799>
  425f2f:	cmp    cl,al
  425f31:	mov    eax,0x2
  425f36:	sbb    eax,0x0
  425f39:	pop    rcx
  425f3a:	ret    
  425f3b:	lea    rdi,[rip+0x26440]        # 44c382 <strcmp@plt+0x48bea>
  425f42:	lea    rsi,[rip+0x23c14]        # 449b5d <strcmp@plt+0x463c5>
  425f49:	lea    rcx,[rip+0x2437b]        # 44a2cb <strcmp@plt+0x46b33>
  425f50:	mov    edx,0x303
  425f55:	call   4032b0 <__assert_fail@plt>
  425f5a:	nop    WORD PTR [rax+rax*1+0x0]
  425f60:	push   r15
  425f62:	push   r14
  425f64:	push   r12
  425f66:	push   rbx
  425f67:	push   rax
  425f68:	mov    r14,rsi
  425f6b:	mov    rbx,rdi
  425f6e:	mov    rdi,QWORD PTR [rdi+0x8]
  425f72:	mov    rsi,QWORD PTR [rsi+0x8]
  425f76:	call   423670 <strcmp@plt+0x1fed8>
  425f7b:	test   eax,eax
  425f7d:	jne    42602e <strcmp@plt+0x22896>
  425f83:	mov    rdi,QWORD PTR [rbx+0x20]
  425f87:	mov    rsi,QWORD PTR [r14+0x20]
  425f8b:	call   423670 <strcmp@plt+0x1fed8>
  425f90:	test   eax,eax
  425f92:	jne    42602e <strcmp@plt+0x22896>
  425f98:	mov    rdi,QWORD PTR [rbx+0x18]
  425f9c:	mov    rsi,QWORD PTR [r14+0x18]
  425fa0:	call   423670 <strcmp@plt+0x1fed8>
  425fa5:	test   eax,eax
  425fa7:	jne    42602e <strcmp@plt+0x22896>
  425fad:	movzx  eax,WORD PTR [rbx]
  425fb0:	movzx  ecx,WORD PTR [r14]
  425fb4:	cmp    ax,cx
  425fb7:	jne    42600d <strcmp@plt+0x22875>
  425fb9:	mov    rsi,QWORD PTR [rbx+0x28]
  425fbd:	mov    rax,QWORD PTR [r14+0x28]
  425fc1:	mov    eax,DWORD PTR [rax+0x18]
  425fc4:	cmp    DWORD PTR [rsi+0x18],eax
  425fc7:	jne    42601a <strcmp@plt+0x22882>
  425fc9:	mov    r12,QWORD PTR [rsi+0x8]
  425fcd:	cmp    r12,rsi
  425fd0:	je     425ff8 <strcmp@plt+0x22860>
  425fd2:	lea    r15,[rip+0xffffffffffffd697]        # 423670 <strcmp@plt+0x1fed8>
  425fd9:	mov    rdi,QWORD PTR [r12+0x10]
  425fde:	mov    rdx,r15
  425fe1:	call   42bc70 <strcmp@plt+0x284d8>
  425fe6:	test   al,al
  425fe8:	jne    426029 <strcmp@plt+0x22891>
  425fea:	mov    r12,QWORD PTR [r12+0x8]
  425fef:	mov    rsi,QWORD PTR [rbx+0x28]
  425ff3:	cmp    r12,rsi
  425ff6:	jne    425fd9 <strcmp@plt+0x22841>
  425ff8:	movzx  ecx,WORD PTR [rbx+0x10]
  425ffc:	movzx  edx,WORD PTR [r14+0x10]
  426001:	xor    eax,eax
  426003:	cmp    cx,dx
  426006:	je     42602e <strcmp@plt+0x22896>
  426008:	cmp    dx,cx
  42600b:	jmp    426010 <strcmp@plt+0x22878>
  42600d:	cmp    cx,ax
  426010:	mov    eax,0x2
  426015:	sbb    eax,0x0
  426018:	jmp    42602e <strcmp@plt+0x22896>
  42601a:	setg   al
  42601d:	movzx  ecx,al
  426020:	mov    eax,0x2
  426025:	sub    eax,ecx
  426027:	jmp    42602e <strcmp@plt+0x22896>
  426029:	mov    eax,0x1
  42602e:	add    rsp,0x8
  426032:	pop    rbx
  426033:	pop    r12
  426035:	pop    r14
  426037:	pop    r15
  426039:	ret    
  42603a:	nop    WORD PTR [rax+rax*1+0x0]
  426040:	push   r14
  426042:	push   rbx
  426043:	push   rax
  426044:	test   rdi,rdi
  426047:	je     42609f <strcmp@plt+0x22907>
  426049:	mov    r14,rsi
  42604c:	test   rsi,rsi
  42604f:	je     42609f <strcmp@plt+0x22907>
  426051:	mov    rbx,rdi
  426054:	mov    ecx,DWORD PTR [rdi+0x4]
  426057:	mov    eax,0xffffffff
  42605c:	cmp    ecx,DWORD PTR [r14+0x4]
  426060:	jne    426083 <strcmp@plt+0x228eb>
  426062:	mov    cl,BYTE PTR [rbx]
  426064:	cmp    cl,BYTE PTR [r14]
  426067:	jne    426083 <strcmp@plt+0x228eb>
  426069:	mov    cl,BYTE PTR [rbx+0x1]
  42606c:	cmp    cl,BYTE PTR [r14+0x1]
  426070:	jne    426083 <strcmp@plt+0x228eb>
  426072:	mov    rdi,QWORD PTR [rbx+0x8]
  426076:	mov    rsi,QWORD PTR [r14+0x8]
  42607a:	call   423670 <strcmp@plt+0x1fed8>
  42607f:	test   eax,eax
  426081:	je     42608b <strcmp@plt+0x228f3>
  426083:	add    rsp,0x8
  426087:	pop    rbx
  426088:	pop    r14
  42608a:	ret    
  42608b:	mov    rdi,QWORD PTR [rbx+0x10]
  42608f:	mov    rsi,QWORD PTR [r14+0x10]
  426093:	add    rsp,0x8
  426097:	pop    rbx
  426098:	pop    r14
  42609a:	jmp    423670 <strcmp@plt+0x1fed8>
  42609f:	lea    rdi,[rip+0x23ea0]        # 449f46 <strcmp@plt+0x467ae>
  4260a6:	lea    rsi,[rip+0x23ab0]        # 449b5d <strcmp@plt+0x463c5>
  4260ad:	lea    rcx,[rip+0x2417b]        # 44a22f <strcmp@plt+0x46a97>
  4260b4:	mov    edx,0x24a
  4260b9:	call   4032b0 <__assert_fail@plt>
  4260be:	xchg   ax,ax
  4260c0:	push   rbp
  4260c1:	push   r15
  4260c3:	push   r14
  4260c5:	push   r13
  4260c7:	push   r12
  4260c9:	push   rbx
  4260ca:	push   rax
  4260cb:	mov    r15,rsi
  4260ce:	mov    r12,rdi
  4260d1:	mov    rdx,QWORD PTR [rdi]
  4260d4:	cmp    DWORD PTR [rdx+0x18],0x0
  4260d8:	je     4260e0 <strcmp@plt+0x22948>
  4260da:	mov    r13,QWORD PTR [rdx+0x8]
  4260de:	jmp    4260e3 <strcmp@plt+0x2294b>
  4260e0:	xor    r13d,r13d
  4260e3:	mov    rcx,QWORD PTR [r15]
  4260e6:	xor    eax,eax
  4260e8:	cmp    DWORD PTR [rcx+0x18],0x0
  4260ec:	je     42613a <strcmp@plt+0x229a2>
  4260ee:	mov    rbx,QWORD PTR [rcx+0x8]
  4260f2:	cmp    r13,rdx
  4260f5:	je     426165 <strcmp@plt+0x229cd>
  4260f7:	cmp    rbx,rcx
  4260fa:	je     426165 <strcmp@plt+0x229cd>
  4260fc:	nop    DWORD PTR [rax+0x0]
  426100:	mov    rbp,QWORD PTR [r13+0x10]
  426104:	mov    r14,QWORD PTR [rbx+0x10]
  426108:	mov    rdi,QWORD PTR [rbp+0x8]
  42610c:	mov    rsi,QWORD PTR [r14+0x8]
  426110:	call   423670 <strcmp@plt+0x1fed8>
  426115:	test   eax,eax
  426117:	jne    426143 <strcmp@plt+0x229ab>
  426119:	movzx  eax,BYTE PTR [r14]
  42611d:	xor    al,BYTE PTR [rbp+0x0]
  426120:	test   al,0x7
  426122:	jne    426160 <strcmp@plt+0x229c8>
  426124:	mov    r13,QWORD PTR [r13+0x0]
  426128:	cmp    r13,QWORD PTR [r12]
  42612c:	je     426136 <strcmp@plt+0x2299e>
  42612e:	mov    rbx,QWORD PTR [rbx]
  426131:	cmp    rbx,QWORD PTR [r15]
  426134:	jne    426100 <strcmp@plt+0x22968>
  426136:	xor    eax,eax
  426138:	jmp    426165 <strcmp@plt+0x229cd>
  42613a:	xor    ebx,ebx
  42613c:	cmp    r13,rdx
  42613f:	jne    4260f7 <strcmp@plt+0x2295f>
  426141:	jmp    426165 <strcmp@plt+0x229cd>
  426143:	jns    426165 <strcmp@plt+0x229cd>
  426145:	mov    rdi,QWORD PTR [rbp+0x8]
  426149:	mov    rsi,QWORD PTR [r14+0x8]
  42614d:	add    rsp,0x8
  426151:	pop    rbx
  426152:	pop    r12
  426154:	pop    r13
  426156:	pop    r14
  426158:	pop    r15
  42615a:	pop    rbp
  42615b:	jmp    423790 <strcmp@plt+0x1fff8>
  426160:	mov    eax,0x1
  426165:	add    rsp,0x8
  426169:	pop    rbx
  42616a:	pop    r12
  42616c:	pop    r13
  42616e:	pop    r14
  426170:	pop    r15
  426172:	pop    rbp
  426173:	ret    
  426174:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42617e:	xchg   ax,ax
  426180:	push   r15
  426182:	push   r14
  426184:	push   r13
  426186:	push   r12
  426188:	push   rbx
  426189:	mov    r15,rsi
  42618c:	mov    r12,rdi
  42618f:	mov    rax,QWORD PTR [rdi]
  426192:	cmp    DWORD PTR [rax+0x18],0x0
  426196:	je     42619e <strcmp@plt+0x22a06>
  426198:	mov    r13,QWORD PTR [rax+0x8]
  42619c:	jmp    4261a1 <strcmp@plt+0x22a09>
  42619e:	xor    r13d,r13d
  4261a1:	mov    rcx,QWORD PTR [r15]
  4261a4:	xor    r14d,r14d
  4261a7:	cmp    DWORD PTR [rcx+0x18],0x0
  4261ab:	je     4261f5 <strcmp@plt+0x22a5d>
  4261ad:	mov    rbx,QWORD PTR [rcx+0x8]
  4261b1:	cmp    r13,rax
  4261b4:	je     42620d <strcmp@plt+0x22a75>
  4261b6:	cmp    rbx,rcx
  4261b9:	je     42620d <strcmp@plt+0x22a75>
  4261bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4261c0:	mov    rax,QWORD PTR [r13+0x10]
  4261c4:	mov    rcx,QWORD PTR [rbx+0x10]
  4261c8:	movzx  edx,BYTE PTR [rcx+0x8]
  4261cc:	cmp    BYTE PTR [rax+0x8],dl
  4261cf:	jne    4261fe <strcmp@plt+0x22a66>
  4261d1:	mov    rdi,QWORD PTR [rax]
  4261d4:	mov    rsi,QWORD PTR [rcx]
  4261d7:	call   423670 <strcmp@plt+0x1fed8>
  4261dc:	test   eax,eax
  4261de:	jne    42620a <strcmp@plt+0x22a72>
  4261e0:	mov    r13,QWORD PTR [r13+0x8]
  4261e4:	cmp    r13,QWORD PTR [r12]
  4261e8:	je     42620d <strcmp@plt+0x22a75>
  4261ea:	mov    rbx,QWORD PTR [rbx+0x8]
  4261ee:	cmp    rbx,QWORD PTR [r15]
  4261f1:	jne    4261c0 <strcmp@plt+0x22a28>
  4261f3:	jmp    42620d <strcmp@plt+0x22a75>
  4261f5:	xor    ebx,ebx
  4261f7:	cmp    r13,rax
  4261fa:	jne    4261b6 <strcmp@plt+0x22a1e>
  4261fc:	jmp    42620d <strcmp@plt+0x22a75>
  4261fe:	mov    r14d,0x2
  426204:	sbb    r14d,0x0
  426208:	jmp    42620d <strcmp@plt+0x22a75>
  42620a:	mov    r14d,eax
  42620d:	mov    eax,r14d
  426210:	pop    rbx
  426211:	pop    r12
  426213:	pop    r13
  426215:	pop    r14
  426217:	pop    r15
  426219:	ret    
  42621a:	nop    WORD PTR [rax+rax*1+0x0]
  426220:	push   rbp
  426221:	push   r14
  426223:	push   rbx
  426224:	mov    rax,QWORD PTR [rdi]
  426227:	mov    rbx,QWORD PTR [rax+0x8]
  42622b:	cmp    rbx,rax
  42622e:	je     426256 <strcmp@plt+0x22abe>
  426230:	mov    r14,rdi
  426233:	mov    ebp,0x8
  426238:	nop    DWORD PTR [rax+rax*1+0x0]
  426240:	mov    rdi,QWORD PTR [rbx+0x10]
  426244:	call   422d30 <strcmp@plt+0x1f598>
  426249:	add    ebp,eax
  42624b:	mov    rbx,QWORD PTR [rbx+0x8]
  42624f:	cmp    rbx,QWORD PTR [r14]
  426252:	jne    426240 <strcmp@plt+0x22aa8>
  426254:	jmp    42625b <strcmp@plt+0x22ac3>
  426256:	mov    ebp,0x8
  42625b:	mov    eax,ebp
  42625d:	pop    rbx
  42625e:	pop    r14
  426260:	pop    rbp
  426261:	ret    
  426262:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42626c:	nop    DWORD PTR [rax+0x0]
  426270:	push   rax
  426271:	test   rdi,rdi
  426274:	je     426284 <strcmp@plt+0x22aec>
  426276:	mov    rdi,QWORD PTR [rdi+0x8]
  42627a:	call   422d30 <strcmp@plt+0x1f598>
  42627f:	add    eax,0xc
  426282:	pop    rcx
  426283:	ret    
  426284:	lea    rdi,[rip+0x260f7]        # 44c382 <strcmp@plt+0x48bea>
  42628b:	lea    rsi,[rip+0x238cb]        # 449b5d <strcmp@plt+0x463c5>
  426292:	lea    rcx,[rip+0x24055]        # 44a2ee <strcmp@plt+0x46b56>
  426299:	mov    edx,0x30a
  42629e:	call   4032b0 <__assert_fail@plt>
  4262a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4262ad:	nop    DWORD PTR [rax]
  4262b0:	push   rbp
  4262b1:	push   r15
  4262b3:	push   r14
  4262b5:	push   rbx
  4262b6:	push   rax
  4262b7:	mov    r15,rdi
  4262ba:	mov    rdi,QWORD PTR [rdi+0x8]
  4262be:	call   422d30 <strcmp@plt+0x1f598>
  4262c3:	mov    r14d,eax
  4262c6:	mov    rdi,QWORD PTR [r15+0x18]
  4262ca:	call   422d30 <strcmp@plt+0x1f598>
  4262cf:	mov    ebp,eax
  4262d1:	add    ebp,r14d
  4262d4:	mov    rdi,QWORD PTR [r15+0x20]
  4262d8:	call   422d30 <strcmp@plt+0x1f598>
  4262dd:	lea    ebp,[rax+rbp*1]
  4262e0:	add    ebp,0xc
  4262e3:	mov    rax,QWORD PTR [r15+0x28]
  4262e7:	mov    rbx,QWORD PTR [rax+0x8]
  4262eb:	cmp    rbx,rax
  4262ee:	je     426305 <strcmp@plt+0x22b6d>
  4262f0:	mov    rdi,QWORD PTR [rbx+0x10]
  4262f4:	call   422d30 <strcmp@plt+0x1f598>
  4262f9:	add    ebp,eax
  4262fb:	mov    rbx,QWORD PTR [rbx+0x8]
  4262ff:	cmp    rbx,QWORD PTR [r15+0x28]
  426303:	jne    4262f0 <strcmp@plt+0x22b58>
  426305:	mov    eax,ebp
  426307:	add    rsp,0x8
  42630b:	pop    rbx
  42630c:	pop    r14
  42630e:	pop    r15
  426310:	pop    rbp
  426311:	ret    
  426312:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42631c:	nop    DWORD PTR [rax+0x0]
  426320:	push   r14
  426322:	push   rbx
  426323:	push   rax
  426324:	test   rdi,rdi
  426327:	je     426350 <strcmp@plt+0x22bb8>
  426329:	mov    rbx,rdi
  42632c:	mov    rdi,QWORD PTR [rdi+0x8]
  426330:	call   422d30 <strcmp@plt+0x1f598>
  426335:	mov    r14d,eax
  426338:	mov    rdi,QWORD PTR [rbx+0x10]
  42633c:	call   422d30 <strcmp@plt+0x1f598>
  426341:	lea    eax,[r14+rax*1]
  426345:	add    eax,0x10
  426348:	add    rsp,0x8
  42634c:	pop    rbx
  42634d:	pop    r14
  42634f:	ret    
  426350:	lea    rdi,[rip+0x23bef]        # 449f46 <strcmp@plt+0x467ae>
  426357:	lea    rsi,[rip+0x237ff]        # 449b5d <strcmp@plt+0x463c5>
  42635e:	lea    rcx,[rip+0x23e60]        # 44a1c5 <strcmp@plt+0x46a2d>
  426365:	mov    edx,0x235
  42636a:	call   4032b0 <__assert_fail@plt>
  42636f:	nop
  426370:	push   r15
  426372:	push   r14
  426374:	push   rbx
  426375:	mov    rax,QWORD PTR [rdi]
  426378:	mov    rbx,QWORD PTR [rax+0x8]
  42637c:	cmp    rbx,rax
  42637f:	je     4263b0 <strcmp@plt+0x22c18>
  426381:	mov    r14,rdi
  426384:	mov    r15d,0x8
  42638a:	nop    WORD PTR [rax+rax*1+0x0]
  426390:	mov    rax,QWORD PTR [rbx+0x10]
  426394:	mov    rdi,QWORD PTR [rax+0x8]
  426398:	call   422d30 <strcmp@plt+0x1f598>
  42639d:	lea    r15d,[r15+rax*1]
  4263a1:	add    r15d,0x2
  4263a5:	mov    rbx,QWORD PTR [rbx+0x8]
  4263a9:	cmp    rbx,QWORD PTR [r14]
  4263ac:	jne    426390 <strcmp@plt+0x22bf8>
  4263ae:	jmp    4263b6 <strcmp@plt+0x22c1e>
  4263b0:	mov    r15d,0x8
  4263b6:	mov    eax,r15d
  4263b9:	pop    rbx
  4263ba:	pop    r14
  4263bc:	pop    r15
  4263be:	ret    
  4263bf:	nop
  4263c0:	push   r15
  4263c2:	push   r14
  4263c4:	push   rbx
  4263c5:	mov    rax,QWORD PTR [rdi]
  4263c8:	mov    rbx,QWORD PTR [rax+0x8]
  4263cc:	cmp    rbx,rax
  4263cf:	je     4263ff <strcmp@plt+0x22c67>
  4263d1:	mov    r14,rdi
  4263d4:	mov    r15d,0x8
  4263da:	nop    WORD PTR [rax+rax*1+0x0]
  4263e0:	mov    rax,QWORD PTR [rbx+0x10]
  4263e4:	mov    rdi,QWORD PTR [rax]
  4263e7:	call   422d30 <strcmp@plt+0x1f598>
  4263ec:	lea    r15d,[r15+rax*1]
  4263f0:	add    r15d,0x4
  4263f4:	mov    rbx,QWORD PTR [rbx+0x8]
  4263f8:	cmp    rbx,QWORD PTR [r14]
  4263fb:	jne    4263e0 <strcmp@plt+0x22c48>
  4263fd:	jmp    426405 <strcmp@plt+0x22c6d>
  4263ff:	mov    r15d,0x8
  426405:	mov    eax,r15d
  426408:	pop    rbx
  426409:	pop    r14
  42640b:	pop    r15
  42640d:	ret    
  42640e:	xchg   ax,ax
  426410:	push   r15
  426412:	push   r14
  426414:	push   rbx
  426415:	mov    rax,QWORD PTR [rdi]
  426418:	mov    rbx,QWORD PTR [rax+0x8]
  42641c:	cmp    rbx,rax
  42641f:	je     426449 <strcmp@plt+0x22cb1>
  426421:	mov    r15,rdi
  426424:	xor    r14d,r14d
  426427:	nop    WORD PTR [rax+rax*1+0x0]
  426430:	mov    rdi,QWORD PTR [rbx+0x10]
  426434:	call   422fd0 <strcmp@plt+0x1f838>
  426439:	test   rax,rax
  42643c:	jne    42644e <strcmp@plt+0x22cb6>
  42643e:	mov    rbx,QWORD PTR [rbx+0x8]
  426442:	cmp    rbx,QWORD PTR [r15]
  426445:	jne    426430 <strcmp@plt+0x22c98>
  426447:	jmp    426451 <strcmp@plt+0x22cb9>
  426449:	xor    r14d,r14d
  42644c:	jmp    426451 <strcmp@plt+0x22cb9>
  42644e:	mov    r14,rax
  426451:	mov    rax,r14
  426454:	pop    rbx
  426455:	pop    r14
  426457:	pop    r15
  426459:	ret    
  42645a:	nop    WORD PTR [rax+rax*1+0x0]
  426460:	mov    rdi,QWORD PTR [rdi+0x8]
  426464:	jmp    422fd0 <strcmp@plt+0x1f838>
  426469:	nop    DWORD PTR [rax+0x0]
  426470:	mov    rdi,QWORD PTR [rdi+0x20]
  426474:	jmp    422fd0 <strcmp@plt+0x1f838>
  426479:	nop    DWORD PTR [rax+0x0]
  426480:	push   rax
  426481:	test   rdi,rdi
  426484:	je     426490 <strcmp@plt+0x22cf8>
  426486:	mov    rdi,QWORD PTR [rdi+0x8]
  42648a:	pop    rax
  42648b:	jmp    422fd0 <strcmp@plt+0x1f838>
  426490:	lea    rdi,[rip+0x23aaf]        # 449f46 <strcmp@plt+0x467ae>
  426497:	lea    rsi,[rip+0x236bf]        # 449b5d <strcmp@plt+0x463c5>
  42649e:	lea    rcx,[rip+0x23d20]        # 44a1c5 <strcmp@plt+0x46a2d>
  4264a5:	mov    edx,0x235
  4264aa:	call   4032b0 <__assert_fail@plt>
  4264af:	nop
  4264b0:	mov    rax,QWORD PTR [rdi]
  4264b3:	mov    rax,QWORD PTR [rax]
  4264b6:	mov    rax,QWORD PTR [rax+0x10]
  4264ba:	test   rax,rax
  4264bd:	je     4264c8 <strcmp@plt+0x22d30>
  4264bf:	mov    rdi,QWORD PTR [rax+0x8]
  4264c3:	jmp    422fd0 <strcmp@plt+0x1f838>
  4264c8:	xor    eax,eax
  4264ca:	ret    
  4264cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4264d0:	push   r15
  4264d2:	push   r14
  4264d4:	push   rbx
  4264d5:	mov    rax,QWORD PTR [rdi]
  4264d8:	mov    rbx,QWORD PTR [rax+0x8]
  4264dc:	cmp    rbx,rax
  4264df:	je     426509 <strcmp@plt+0x22d71>
  4264e1:	mov    r15,rdi
  4264e4:	xor    r14d,r14d
  4264e7:	nop    WORD PTR [rax+rax*1+0x0]
  4264f0:	mov    rdi,QWORD PTR [rbx+0x10]
  4264f4:	call   422dd0 <strcmp@plt+0x1f638>
  4264f9:	test   rax,rax
  4264fc:	jne    42650e <strcmp@plt+0x22d76>
  4264fe:	mov    rbx,QWORD PTR [rbx+0x8]
  426502:	cmp    rbx,QWORD PTR [r15]
  426505:	jne    4264f0 <strcmp@plt+0x22d58>
  426507:	jmp    426511 <strcmp@plt+0x22d79>
  426509:	xor    r14d,r14d
  42650c:	jmp    426511 <strcmp@plt+0x22d79>
  42650e:	mov    r14,rax
  426511:	mov    rax,r14
  426514:	pop    rbx
  426515:	pop    r14
  426517:	pop    r15
  426519:	ret    
  42651a:	nop    WORD PTR [rax+rax*1+0x0]
  426520:	mov    rdi,QWORD PTR [rdi+0x8]
  426524:	jmp    422dd0 <strcmp@plt+0x1f638>
  426529:	nop    DWORD PTR [rax+0x0]
  426530:	mov    rdi,QWORD PTR [rdi+0x20]
  426534:	jmp    422dd0 <strcmp@plt+0x1f638>
  426539:	nop    DWORD PTR [rax+0x0]
  426540:	push   rax
  426541:	test   rdi,rdi
  426544:	je     426550 <strcmp@plt+0x22db8>
  426546:	mov    rdi,QWORD PTR [rdi+0x8]
  42654a:	pop    rax
  42654b:	jmp    422dd0 <strcmp@plt+0x1f638>
  426550:	lea    rdi,[rip+0x239ef]        # 449f46 <strcmp@plt+0x467ae>
  426557:	lea    rsi,[rip+0x235ff]        # 449b5d <strcmp@plt+0x463c5>
  42655e:	lea    rcx,[rip+0x23c60]        # 44a1c5 <strcmp@plt+0x46a2d>
  426565:	mov    edx,0x235
  42656a:	call   4032b0 <__assert_fail@plt>
  42656f:	nop
  426570:	mov    edi,0x10
  426575:	jmp    431d60 <strcmp@plt+0x2e5c8>
  42657a:	nop    WORD PTR [rax+rax*1+0x0]
  426580:	push   rbp
  426581:	push   r14
  426583:	push   rbx
  426584:	mov    ebp,edi
  426586:	mov    edi,0x10
  42658b:	call   431d60 <strcmp@plt+0x2e5c8>
  426590:	test   rax,rax
  426593:	je     4265ff <strcmp@plt+0x22e67>
  426595:	mov    rbx,rax
  426598:	movzx  eax,bpl
  42659c:	mov    DWORD PTR [rbx],eax
  42659e:	cmp    al,0x9
  4265a0:	je     4265c5 <strcmp@plt+0x22e2d>
  4265a2:	cmp    bpl,0x2
  4265a6:	jne    4265f7 <strcmp@plt+0x22e5f>
  4265a8:	mov    edi,0x10
  4265ad:	call   431d60 <strcmp@plt+0x2e5c8>
  4265b2:	mov    r14,rax
  4265b5:	xor    eax,eax
  4265b7:	call   422c80 <strcmp@plt+0x1f4e8>
  4265bc:	mov    rcx,r14
  4265bf:	add    rcx,0x8
  4265c3:	jmp    4265f0 <strcmp@plt+0x22e58>
  4265c5:	mov    edi,0x1
  4265ca:	mov    esi,0x18
  4265cf:	call   4032d0 <calloc@plt>
  4265d4:	mov    r14,rax
  4265d7:	xor    eax,eax
  4265d9:	call   422c80 <strcmp@plt+0x1f4e8>
  4265de:	mov    QWORD PTR [r14+0x8],rax
  4265e2:	xor    eax,eax
  4265e4:	call   422c80 <strcmp@plt+0x1f4e8>
  4265e9:	mov    rcx,r14
  4265ec:	add    rcx,0x10
  4265f0:	mov    QWORD PTR [rcx],rax
  4265f3:	mov    QWORD PTR [rbx+0x8],r14
  4265f7:	mov    rax,rbx
  4265fa:	pop    rbx
  4265fb:	pop    r14
  4265fd:	pop    rbp
  4265fe:	ret    
  4265ff:	lea    rdi,[rip+0x23552]        # 449b58 <strcmp@plt+0x463c0>
  426606:	lea    rsi,[rip+0x23550]        # 449b5d <strcmp@plt+0x463c5>
  42660d:	lea    rcx,[rip+0x23780]        # 449d94 <strcmp@plt+0x465fc>
  426614:	mov    edx,0x12a
  426619:	call   4032b0 <__assert_fail@plt>
  42661e:	xchg   ax,ax
  426620:	push   rax
  426621:	test   rdi,rdi
  426624:	je     42662e <strcmp@plt+0x22e96>
  426626:	movzx  eax,sil
  42662a:	mov    DWORD PTR [rdi],eax
  42662c:	pop    rax
  42662d:	ret    
  42662e:	lea    rdi,[rip+0x23523]        # 449b58 <strcmp@plt+0x463c0>
  426635:	lea    rsi,[rip+0x23521]        # 449b5d <strcmp@plt+0x463c5>
  42663c:	lea    rcx,[rip+0x23751]        # 449d94 <strcmp@plt+0x465fc>
  426643:	mov    edx,0x12a
  426648:	call   4032b0 <__assert_fail@plt>
  42664d:	nop    DWORD PTR [rax]
  426650:	mov    rax,rdi
  426653:	mov    rdi,QWORD PTR [rdi+0x8]
  426657:	test   rdi,rdi
  42665a:	je     426670 <strcmp@plt+0x22ed8>
  42665c:	mov    eax,DWORD PTR [rax]
  42665e:	lea    rcx,[rip+0x3e26b]        # 4648d0 <strcmp@plt+0x61138>
  426665:	mov    rax,QWORD PTR [rcx+rax*8]
  426669:	test   rax,rax
  42666c:	je     426670 <strcmp@plt+0x22ed8>
  42666e:	jmp    rax
  426670:	ret    
  426671:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42667b:	nop    DWORD PTR [rax+rax*1+0x0]
  426680:	push   rbx
  426681:	test   rdi,rdi
  426684:	je     4266ac <strcmp@plt+0x22f14>
  426686:	mov    rbx,rdi
  426689:	mov    eax,DWORD PTR [rdi]
  42668b:	lea    rcx,[rip+0x3e23e]        # 4648d0 <strcmp@plt+0x61138>
  426692:	mov    rax,QWORD PTR [rcx+rax*8]
  426696:	test   rax,rax
  426699:	je     4266aa <strcmp@plt+0x22f12>
  42669b:	mov    rdi,QWORD PTR [rbx+0x8]
  42669f:	call   rax
  4266a1:	mov    rdi,rbx
  4266a4:	pop    rbx
  4266a5:	jmp    403790 <free@plt>
  4266aa:	pop    rbx
  4266ab:	ret    
  4266ac:	lea    rdi,[rip+0x234a5]        # 449b58 <strcmp@plt+0x463c0>
  4266b3:	lea    rsi,[rip+0x234a3]        # 449b5d <strcmp@plt+0x463c5>
  4266ba:	lea    rcx,[rip+0x234b0]        # 449b71 <strcmp@plt+0x463d9>
  4266c1:	mov    edx,0xa4
  4266c6:	call   4032b0 <__assert_fail@plt>
  4266cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4266d0:	push   r14
  4266d2:	push   rbx
  4266d3:	push   rax
  4266d4:	test   rsi,rsi
  4266d7:	je     426791 <strcmp@plt+0x22ff9>
  4266dd:	mov    rbx,rsi
  4266e0:	mov    r14,rdi
  4266e3:	mov    rdi,QWORD PTR [rsi+0x8]
  4266e7:	test   rdi,rdi
  4266ea:	je     426700 <strcmp@plt+0x22f68>
  4266ec:	mov    eax,DWORD PTR [rbx]
  4266ee:	lea    rcx,[rip+0x3e1db]        # 4648d0 <strcmp@plt+0x61138>
  4266f5:	mov    rax,QWORD PTR [rcx+rax*8]
  4266f9:	test   rax,rax
  4266fc:	je     426700 <strcmp@plt+0x22f68>
  4266fe:	call   rax
  426700:	movzx  edx,BYTE PTR [r14+0x4]
  426705:	mov    DWORD PTR [rbx],edx
  426707:	lea    rax,[rip+0x3e242]        # 464950 <strcmp@plt+0x611b8>
  42670e:	mov    rax,QWORD PTR [rax+rdx*8]
  426712:	test   rax,rax
  426715:	je     42673d <strcmp@plt+0x22fa5>
  426717:	add    rbx,0x8
  42671b:	mov    rdi,r14
  42671e:	mov    rsi,rbx
  426721:	call   rax
  426723:	movsxd rcx,eax
  426726:	movbe  dx,WORD PTR [r14+0x6]
  42672d:	movzx  edx,dx
  426730:	lea    rsi,[rdx+0x8]
  426734:	cmp    rsi,rcx
  426737:	jne    426762 <strcmp@plt+0x22fca>
  426739:	mov    ebx,eax
  42673b:	jmp    426787 <strcmp@plt+0x22fef>
  42673d:	lea    rax,[rip+0x3e67c]        # 464dc0 <strcmp@plt+0x61628>
  426744:	xor    ebx,ebx
  426746:	cmp    DWORD PTR [rax],0x3
  426749:	jl     426787 <strcmp@plt+0x22fef>
  42674b:	lea    rsi,[rip+0x23441]        # 449b93 <strcmp@plt+0x463fb>
  426752:	xor    ebx,ebx
  426754:	mov    edi,0x7
  426759:	xor    eax,eax
  42675b:	call   42e520 <strcmp@plt+0x2ad88>
  426760:	jmp    426787 <strcmp@plt+0x22fef>
  426762:	lea    rcx,[rip+0x3e657]        # 464dc0 <strcmp@plt+0x61628>
  426769:	xor    ebx,ebx
  42676b:	cmp    DWORD PTR [rcx],0x3
  42676e:	jl     426787 <strcmp@plt+0x22fef>
  426770:	lea    rsi,[rip+0x23450]        # 449bc7 <strcmp@plt+0x4642f>
  426777:	xor    ebx,ebx
  426779:	mov    edi,0x7
  42677e:	mov    ecx,eax
  426780:	xor    eax,eax
  426782:	call   42e520 <strcmp@plt+0x2ad88>
  426787:	mov    eax,ebx
  426789:	add    rsp,0x8
  42678d:	pop    rbx
  42678e:	pop    r14
  426790:	ret    
  426791:	lea    rdi,[rip+0x233c0]        # 449b58 <strcmp@plt+0x463c0>
  426798:	lea    rsi,[rip+0x233be]        # 449b5d <strcmp@plt+0x463c5>
  42679f:	lea    rcx,[rip+0x23fc8]        # 44a76e <strcmp@plt+0x46fd6>
  4267a6:	mov    edx,0x6f
  4267ab:	call   4032b0 <__assert_fail@plt>
  4267b0:	push   rax
  4267b1:	test   rdi,rdi
  4267b4:	je     4267ba <strcmp@plt+0x23022>
  4267b6:	mov    eax,DWORD PTR [rdi]
  4267b8:	pop    rcx
  4267b9:	ret    
  4267ba:	lea    rdi,[rip+0x23397]        # 449b58 <strcmp@plt+0x463c0>
  4267c1:	lea    rsi,[rip+0x23395]        # 449b5d <strcmp@plt+0x463c5>
  4267c8:	lea    rcx,[rip+0x234a2]        # 449c71 <strcmp@plt+0x464d9>
  4267cf:	mov    edx,0xdb
  4267d4:	call   4032b0 <__assert_fail@plt>
  4267d9:	nop    DWORD PTR [rax+0x0]
  4267e0:	push   rax
  4267e1:	test   rdi,rdi
  4267e4:	je     426808 <strcmp@plt+0x23070>
  4267e6:	mov    eax,DWORD PTR [rdi]
  4267e8:	lea    rcx,[rip+0x3e1e1]        # 4649d0 <strcmp@plt+0x61238>
  4267ef:	mov    rax,QWORD PTR [rcx+rax*8]
  4267f3:	test   rax,rax
  4267f6:	je     4267ff <strcmp@plt+0x23067>
  4267f8:	mov    rdi,QWORD PTR [rdi+0x8]
  4267fc:	pop    rcx
  4267fd:	jmp    rax
  4267ff:	lea    rax,[rip+0x23458]        # 449c5e <strcmp@plt+0x464c6>
  426806:	pop    rcx
  426807:	ret    
  426808:	lea    rdi,[rip+0x23349]        # 449b58 <strcmp@plt+0x463c0>
  42680f:	lea    rsi,[rip+0x23347]        # 449b5d <strcmp@plt+0x463c5>
  426816:	lea    rcx,[rip+0x2341a]        # 449c37 <strcmp@plt+0x4649f>
  42681d:	mov    edx,0xd0
  426822:	call   4032b0 <__assert_fail@plt>
  426827:	nop    WORD PTR [rax+rax*1+0x0]
  426830:	push   rax
  426831:	test   rdi,rdi
  426834:	je     42683c <strcmp@plt+0x230a4>
  426836:	mov    rax,QWORD PTR [rdi+0x8]
  42683a:	pop    rcx
  42683b:	ret    
  42683c:	lea    rdi,[rip+0x23315]        # 449b58 <strcmp@plt+0x463c0>
  426843:	lea    rsi,[rip+0x23313]        # 449b5d <strcmp@plt+0x463c5>
  42684a:	lea    rcx,[rip+0x234ec]        # 449d3d <strcmp@plt+0x465a5>
  426851:	mov    edx,0xfe
  426856:	call   4032b0 <__assert_fail@plt>
  42685b:	nop    DWORD PTR [rax+rax*1+0x0]
  426860:	push   rax
  426861:	test   rdi,rdi
  426864:	je     42686c <strcmp@plt+0x230d4>
  426866:	mov    rax,QWORD PTR [rdi+0x8]
  42686a:	pop    rcx
  42686b:	ret    
  42686c:	lea    rdi,[rip+0x232e5]        # 449b58 <strcmp@plt+0x463c0>
  426873:	lea    rsi,[rip+0x232e3]        # 449b5d <strcmp@plt+0x463c5>
  42687a:	lea    rcx,[rip+0x2341e]        # 449c9f <strcmp@plt+0x46507>
  426881:	mov    edx,0xe2
  426886:	call   4032b0 <__assert_fail@plt>
  42688b:	nop    DWORD PTR [rax+rax*1+0x0]
  426890:	push   rax
  426891:	test   rdi,rdi
  426894:	je     42689c <strcmp@plt+0x23104>
  426896:	mov    rax,QWORD PTR [rdi+0x8]
  42689a:	pop    rcx
  42689b:	ret    
  42689c:	lea    rdi,[rip+0x232b5]        # 449b58 <strcmp@plt+0x463c0>
  4268a3:	lea    rsi,[rip+0x232b3]        # 449b5d <strcmp@plt+0x463c5>
  4268aa:	lea    rcx,[rip+0x23414]        # 449cc5 <strcmp@plt+0x4652d>
  4268b1:	mov    edx,0xe9
  4268b6:	call   4032b0 <__assert_fail@plt>
  4268bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4268c0:	push   rax
  4268c1:	test   rdi,rdi
  4268c4:	je     4268cc <strcmp@plt+0x23134>
  4268c6:	mov    rax,QWORD PTR [rdi+0x8]
  4268ca:	pop    rcx
  4268cb:	ret    
  4268cc:	lea    rdi,[rip+0x23285]        # 449b58 <strcmp@plt+0x463c0>
  4268d3:	lea    rsi,[rip+0x23283]        # 449b5d <strcmp@plt+0x463c5>
  4268da:	lea    rcx,[rip+0x2340c]        # 449ced <strcmp@plt+0x46555>
  4268e1:	mov    edx,0xf0
  4268e6:	call   4032b0 <__assert_fail@plt>
  4268eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4268f0:	push   rax
  4268f1:	test   rdi,rdi
  4268f4:	je     4268fc <strcmp@plt+0x23164>
  4268f6:	mov    rax,QWORD PTR [rdi+0x8]
  4268fa:	pop    rcx
  4268fb:	ret    
  4268fc:	lea    rdi,[rip+0x23255]        # 449b58 <strcmp@plt+0x463c0>
  426903:	lea    rsi,[rip+0x23253]        # 449b5d <strcmp@plt+0x463c5>
  42690a:	lea    rcx,[rip+0x23404]        # 449d15 <strcmp@plt+0x4657d>
  426911:	mov    edx,0xf7
  426916:	call   4032b0 <__assert_fail@plt>
  42691b:	nop    DWORD PTR [rax+rax*1+0x0]
  426920:	push   rax
  426921:	test   rdi,rdi
  426924:	je     426930 <strcmp@plt+0x23198>
  426926:	xor    eax,eax
  426928:	cmp    DWORD PTR [rdi],0x9
  42692b:	sete   al
  42692e:	pop    rcx
  42692f:	ret    
  426930:	lea    rdi,[rip+0x23221]        # 449b58 <strcmp@plt+0x463c0>
  426937:	lea    rsi,[rip+0x2321f]        # 449b5d <strcmp@plt+0x463c5>
  42693e:	lea    rcx,[rip+0x2332c]        # 449c71 <strcmp@plt+0x464d9>
  426945:	mov    edx,0xdb
  42694a:	call   4032b0 <__assert_fail@plt>
  42694f:	nop
  426950:	push   rax
  426951:	test   rdi,rdi
  426954:	je     426960 <strcmp@plt+0x231c8>
  426956:	xor    eax,eax
  426958:	cmp    DWORD PTR [rdi],0x2
  42695b:	sete   al
  42695e:	pop    rcx
  42695f:	ret    
  426960:	lea    rdi,[rip+0x231f1]        # 449b58 <strcmp@plt+0x463c0>
  426967:	lea    rsi,[rip+0x231ef]        # 449b5d <strcmp@plt+0x463c5>
  42696e:	lea    rcx,[rip+0x232fc]        # 449c71 <strcmp@plt+0x464d9>
  426975:	mov    edx,0xdb
  42697a:	call   4032b0 <__assert_fail@plt>
  42697f:	nop
  426980:	push   rbp
  426981:	push   r14
  426983:	push   rbx
  426984:	test   rdi,rdi
  426987:	je     4269cb <strcmp@plt+0x23233>
  426989:	mov    ebp,edx
  42698b:	mov    r14,rsi
  42698e:	mov    rbx,rdi
  426991:	mov    rax,QWORD PTR [rdi+0x8]
  426995:	test   rax,rax
  426998:	je     4269b7 <strcmp@plt+0x2321f>
  42699a:	mov    rdi,QWORD PTR [rax+0x8]
  42699e:	test   rdi,rdi
  4269a1:	je     4269b7 <strcmp@plt+0x2321f>
  4269a3:	mov    eax,DWORD PTR [rax]
  4269a5:	lea    rcx,[rip+0x3df24]        # 4648d0 <strcmp@plt+0x61138>
  4269ac:	mov    rax,QWORD PTR [rcx+rax*8]
  4269b0:	test   rax,rax
  4269b3:	je     4269b7 <strcmp@plt+0x2321f>
  4269b5:	call   rax
  4269b7:	movzx  eax,bpl
  4269bb:	mov    DWORD PTR [rbx],eax
  4269bd:	test   r14,r14
  4269c0:	je     4269ea <strcmp@plt+0x23252>
  4269c2:	mov    QWORD PTR [rbx+0x8],r14
  4269c6:	pop    rbx
  4269c7:	pop    r14
  4269c9:	pop    rbp
  4269ca:	ret    
  4269cb:	lea    rdi,[rip+0x23186]        # 449b58 <strcmp@plt+0x463c0>
  4269d2:	lea    rsi,[rip+0x23184]        # 449b5d <strcmp@plt+0x463c5>
  4269d9:	lea    rcx,[rip+0x2335d]        # 449d3d <strcmp@plt+0x465a5>
  4269e0:	mov    edx,0xfe
  4269e5:	call   4032b0 <__assert_fail@plt>
  4269ea:	lea    rdi,[rip+0x23984]        # 44a375 <strcmp@plt+0x46bdd>
  4269f1:	lea    rsi,[rip+0x23165]        # 449b5d <strcmp@plt+0x463c5>
  4269f8:	lea    rcx,[rip+0x23366]        # 449d65 <strcmp@plt+0x465cd>
  4269ff:	mov    edx,0x124
  426a04:	call   4032b0 <__assert_fail@plt>
  426a09:	nop    DWORD PTR [rax+0x0]
  426a10:	push   rax
  426a11:	test   rdi,rdi
  426a14:	je     426a21 <strcmp@plt+0x23289>
  426a16:	test   rsi,rsi
  426a19:	je     426a40 <strcmp@plt+0x232a8>
  426a1b:	mov    QWORD PTR [rdi+0x8],rsi
  426a1f:	pop    rax
  426a20:	ret    
  426a21:	lea    rdi,[rip+0x23130]        # 449b58 <strcmp@plt+0x463c0>
  426a28:	lea    rsi,[rip+0x2312e]        # 449b5d <strcmp@plt+0x463c5>
  426a2f:	lea    rcx,[rip+0x2332f]        # 449d65 <strcmp@plt+0x465cd>
  426a36:	mov    edx,0x123
  426a3b:	call   4032b0 <__assert_fail@plt>
  426a40:	lea    rdi,[rip+0x2392e]        # 44a375 <strcmp@plt+0x46bdd>
  426a47:	lea    rsi,[rip+0x2310f]        # 449b5d <strcmp@plt+0x463c5>
  426a4e:	lea    rcx,[rip+0x23310]        # 449d65 <strcmp@plt+0x465cd>
  426a55:	mov    edx,0x124
  426a5a:	call   4032b0 <__assert_fail@plt>
  426a5f:	nop
  426a60:	push   rax
  426a61:	test   rdi,rdi
  426a64:	je     426a96 <strcmp@plt+0x232fe>
  426a66:	mov    edx,DWORD PTR [rdi]
  426a68:	lea    rax,[rip+0x3e161]        # 464bd0 <strcmp@plt+0x61438>
  426a6f:	mov    rax,QWORD PTR [rax+rdx*8]
  426a73:	test   rax,rax
  426a76:	je     426a7f <strcmp@plt+0x232e7>
  426a78:	mov    rdi,QWORD PTR [rdi+0x8]
  426a7c:	pop    rcx
  426a7d:	jmp    rax
  426a7f:	lea    rsi,[rip+0x2333e]        # 449dc4 <strcmp@plt+0x4662c>
  426a86:	mov    edi,0x3
  426a8b:	xor    eax,eax
  426a8d:	call   42e520 <strcmp@plt+0x2ad88>
  426a92:	xor    eax,eax
  426a94:	pop    rcx
  426a95:	ret    
  426a96:	lea    rdi,[rip+0x230bb]        # 449b58 <strcmp@plt+0x463c0>
  426a9d:	lea    rsi,[rip+0x230b9]        # 449b5d <strcmp@plt+0x463c5>
  426aa4:	lea    rcx,[rip+0x23c9e]        # 44a749 <strcmp@plt+0x46fb1>
  426aab:	mov    edx,0x6a
  426ab0:	call   4032b0 <__assert_fail@plt>
  426ab5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426abf:	nop
  426ac0:	push   r15
  426ac2:	push   r14
  426ac4:	push   r12
  426ac6:	push   rbx
  426ac7:	push   rax
  426ac8:	test   rsi,rsi
  426acb:	je     426b52 <strcmp@plt+0x233ba>
  426ad1:	mov    rbx,rsi
  426ad4:	mov    edx,DWORD PTR [rsi]
  426ad6:	lea    r12,[rip+0x3dff3]        # 464ad0 <strcmp@plt+0x61338>
  426add:	cmp    QWORD PTR [r12+rdx*8],0x0
  426ae2:	je     426b2f <strcmp@plt+0x23397>
  426ae4:	mov    r14,rdi
  426ae7:	test   rdi,rdi
  426aea:	je     426b71 <strcmp@plt+0x233d9>
  426af0:	lea    r15,[r14+0x8]
  426af4:	mov    rdi,QWORD PTR [r14+0x8]
  426af8:	test   rdi,rdi
  426afb:	je     426b15 <strcmp@plt+0x2337d>
  426afd:	mov    eax,DWORD PTR [r14]
  426b00:	lea    rcx,[rip+0x3ddc9]        # 4648d0 <strcmp@plt+0x61138>
  426b07:	mov    rax,QWORD PTR [rcx+rax*8]
  426b0b:	test   rax,rax
  426b0e:	je     426b15 <strcmp@plt+0x2337d>
  426b10:	call   rax
  426b12:	movzx  edx,BYTE PTR [rbx]
  426b15:	movzx  eax,dl
  426b18:	mov    DWORD PTR [r14],eax
  426b1b:	mov    eax,DWORD PTR [rbx]
  426b1d:	mov    rsi,QWORD PTR [rbx+0x8]
  426b21:	mov    rdi,r15
  426b24:	call   QWORD PTR [r12+rax*8]
  426b28:	mov    ebx,0x1
  426b2d:	jmp    426b44 <strcmp@plt+0x233ac>
  426b2f:	lea    rsi,[rip+0x23306]        # 449e3c <strcmp@plt+0x466a4>
  426b36:	xor    ebx,ebx
  426b38:	mov    edi,0x3
  426b3d:	xor    eax,eax
  426b3f:	call   42e520 <strcmp@plt+0x2ad88>
  426b44:	mov    eax,ebx
  426b46:	add    rsp,0x8
  426b4a:	pop    rbx
  426b4b:	pop    r12
  426b4d:	pop    r14
  426b4f:	pop    r15
  426b51:	ret    
  426b52:	lea    rdi,[rip+0x232ae]        # 449e07 <strcmp@plt+0x4666f>
  426b59:	lea    rsi,[rip+0x22ffd]        # 449b5d <strcmp@plt+0x463c5>
  426b60:	lea    rcx,[rip+0x232a4]        # 449e0b <strcmp@plt+0x46673>
  426b67:	mov    edx,0x13f
  426b6c:	call   4032b0 <__assert_fail@plt>
  426b71:	lea    rdi,[rip+0x22fe0]        # 449b58 <strcmp@plt+0x463c0>
  426b78:	lea    rsi,[rip+0x22fde]        # 449b5d <strcmp@plt+0x463c5>
  426b7f:	lea    rcx,[rip+0x23be8]        # 44a76e <strcmp@plt+0x46fd6>
  426b86:	mov    edx,0x6f
  426b8b:	call   4032b0 <__assert_fail@plt>
  426b90:	push   rax
  426b91:	test   rsi,rsi
  426b94:	je     426bc6 <strcmp@plt+0x2342e>
  426b96:	mov    edx,DWORD PTR [rsi]
  426b98:	lea    rax,[rip+0x3deb1]        # 464a50 <strcmp@plt+0x612b8>
  426b9f:	mov    rax,QWORD PTR [rax+rdx*8]
  426ba3:	test   rax,rax
  426ba6:	je     426baf <strcmp@plt+0x23417>
  426ba8:	mov    rsi,QWORD PTR [rsi+0x8]
  426bac:	pop    rcx
  426bad:	jmp    rax
  426baf:	lea    rsi,[rip+0x232e7]        # 449e9d <strcmp@plt+0x46705>
  426bb6:	mov    edi,0x3
  426bbb:	xor    eax,eax
  426bbd:	call   42e520 <strcmp@plt+0x2ad88>
  426bc2:	xor    eax,eax
  426bc4:	pop    rcx
  426bc5:	ret    
  426bc6:	lea    rdi,[rip+0x22f8b]        # 449b58 <strcmp@plt+0x463c0>
  426bcd:	lea    rsi,[rip+0x22f89]        # 449b5d <strcmp@plt+0x463c5>
  426bd4:	lea    rcx,[rip+0x23297]        # 449e72 <strcmp@plt+0x466da>
  426bdb:	mov    edx,0x153
  426be0:	call   4032b0 <__assert_fail@plt>
  426be5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426bef:	nop
  426bf0:	push   rax
  426bf1:	test   rdi,rdi
  426bf4:	je     426c65 <strcmp@plt+0x234cd>
  426bf6:	test   rsi,rsi
  426bf9:	je     426c65 <strcmp@plt+0x234cd>
  426bfb:	mov    edx,DWORD PTR [rdi]
  426bfd:	mov    ecx,DWORD PTR [rsi]
  426bff:	cmp    edx,ecx
  426c01:	jne    426c1e <strcmp@plt+0x23486>
  426c03:	lea    rax,[rip+0x3df46]        # 464b50 <strcmp@plt+0x613b8>
  426c0a:	mov    rax,QWORD PTR [rax+rdx*8]
  426c0e:	test   rax,rax
  426c11:	je     426c3f <strcmp@plt+0x234a7>
  426c13:	mov    rdi,QWORD PTR [rdi+0x8]
  426c17:	mov    rsi,QWORD PTR [rsi+0x8]
  426c1b:	pop    rcx
  426c1c:	jmp    rax
  426c1e:	lea    rax,[rip+0x3e19b]        # 464dc0 <strcmp@plt+0x61628>
  426c25:	cmp    DWORD PTR [rax],0x0
  426c28:	jle    426c5e <strcmp@plt+0x234c6>
  426c2a:	lea    rsi,[rip+0x232ab]        # 449edc <strcmp@plt+0x46744>
  426c31:	mov    edi,0x5
  426c36:	xor    eax,eax
  426c38:	call   42e520 <strcmp@plt+0x2ad88>
  426c3d:	jmp    426c5e <strcmp@plt+0x234c6>
  426c3f:	lea    rax,[rip+0x3e17a]        # 464dc0 <strcmp@plt+0x61628>
  426c46:	cmp    DWORD PTR [rax],0x0
  426c49:	jle    426c5e <strcmp@plt+0x234c6>
  426c4b:	lea    rsi,[rip+0x232c5]        # 449f17 <strcmp@plt+0x4677f>
  426c52:	mov    edi,0x5
  426c57:	xor    eax,eax
  426c59:	call   42e520 <strcmp@plt+0x2ad88>
  426c5e:	mov    eax,0xffffffff
  426c63:	pop    rcx
  426c64:	ret    
  426c65:	lea    rdi,[rip+0x22eec]        # 449b58 <strcmp@plt+0x463c0>
  426c6c:	lea    rsi,[rip+0x22eea]        # 449b5d <strcmp@plt+0x463c5>
  426c73:	lea    rcx,[rip+0x22ff7]        # 449c71 <strcmp@plt+0x464d9>
  426c7a:	mov    edx,0xdb
  426c7f:	call   4032b0 <__assert_fail@plt>
  426c84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426c8e:	xchg   ax,ax
  426c90:	push   rax
  426c91:	test   rdi,rdi
  426c94:	je     426cdb <strcmp@plt+0x23543>
  426c96:	test   rsi,rsi
  426c99:	je     426cdb <strcmp@plt+0x23543>
  426c9b:	mov    eax,DWORD PTR [rdi]
  426c9d:	cmp    eax,DWORD PTR [rsi]
  426c9f:	jne    426cc3 <strcmp@plt+0x2352b>
  426ca1:	cmp    eax,0x9
  426ca4:	je     426cc7 <strcmp@plt+0x2352f>
  426ca6:	cmp    eax,0x2
  426ca9:	jne    426cc3 <strcmp@plt+0x2352b>
  426cab:	mov    rax,QWORD PTR [rdi+0x8]
  426caf:	test   rax,rax
  426cb2:	je     426cfa <strcmp@plt+0x23562>
  426cb4:	mov    rcx,QWORD PTR [rsi+0x8]
  426cb8:	test   rcx,rcx
  426cbb:	je     426cfa <strcmp@plt+0x23562>
  426cbd:	mov    eax,DWORD PTR [rax]
  426cbf:	cmp    eax,DWORD PTR [rcx]
  426cc1:	jmp    426cd6 <strcmp@plt+0x2353e>
  426cc3:	xor    eax,eax
  426cc5:	pop    rcx
  426cc6:	ret    
  426cc7:	mov    rax,QWORD PTR [rdi+0x8]
  426ccb:	test   rax,rax
  426cce:	je     426d19 <strcmp@plt+0x23581>
  426cd0:	mov    eax,DWORD PTR [rax+0x4]
  426cd3:	cmp    eax,DWORD PTR [rsi+0x4]
  426cd6:	sete   al
  426cd9:	pop    rcx
  426cda:	ret    
  426cdb:	lea    rdi,[rip+0x22e76]        # 449b58 <strcmp@plt+0x463c0>
  426ce2:	lea    rsi,[rip+0x22e74]        # 449b5d <strcmp@plt+0x463c5>
  426ce9:	lea    rcx,[rip+0x23a59]        # 44a749 <strcmp@plt+0x46fb1>
  426cf0:	mov    edx,0x6a
  426cf5:	call   4032b0 <__assert_fail@plt>
  426cfa:	lea    rdi,[rip+0x25681]        # 44c382 <strcmp@plt+0x48bea>
  426d01:	lea    rsi,[rip+0x22e55]        # 449b5d <strcmp@plt+0x463c5>
  426d08:	lea    rcx,[rip+0x235bc]        # 44a2cb <strcmp@plt+0x46b33>
  426d0f:	mov    edx,0x303
  426d14:	call   4032b0 <__assert_fail@plt>
  426d19:	lea    rdi,[rip+0x23226]        # 449f46 <strcmp@plt+0x467ae>
  426d20:	lea    rsi,[rip+0x22e36]        # 449b5d <strcmp@plt+0x463c5>
  426d27:	lea    rcx,[rip+0x23501]        # 44a22f <strcmp@plt+0x46a97>
  426d2e:	mov    edx,0x24a
  426d33:	call   4032b0 <__assert_fail@plt>
  426d38:	nop    DWORD PTR [rax+rax*1+0x0]
  426d40:	push   rax
  426d41:	test   rdi,rdi
  426d44:	je     426d53 <strcmp@plt+0x235bb>
  426d46:	mov    rax,QWORD PTR [rdi+0x8]
  426d4a:	test   rax,rax
  426d4d:	je     426d72 <strcmp@plt+0x235da>
  426d4f:	mov    eax,DWORD PTR [rax]
  426d51:	pop    rcx
  426d52:	ret    
  426d53:	lea    rdi,[rip+0x22dfe]        # 449b58 <strcmp@plt+0x463c0>
  426d5a:	lea    rsi,[rip+0x22dfc]        # 449b5d <strcmp@plt+0x463c5>
  426d61:	lea    rcx,[rip+0x23a06]        # 44a76e <strcmp@plt+0x46fd6>
  426d68:	mov    edx,0x6f
  426d6d:	call   4032b0 <__assert_fail@plt>
  426d72:	lea    rdi,[rip+0x25609]        # 44c382 <strcmp@plt+0x48bea>
  426d79:	lea    rsi,[rip+0x22ddd]        # 449b5d <strcmp@plt+0x463c5>
  426d80:	lea    rcx,[rip+0x23544]        # 44a2cb <strcmp@plt+0x46b33>
  426d87:	mov    edx,0x303
  426d8c:	call   4032b0 <__assert_fail@plt>
  426d91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d9b:	nop    DWORD PTR [rax+rax*1+0x0]
  426da0:	push   rax
  426da1:	test   rdi,rdi
  426da4:	je     426dab <strcmp@plt+0x23613>
  426da6:	mov    eax,DWORD PTR [rdi+0x4]
  426da9:	pop    rcx
  426daa:	ret    
  426dab:	lea    rdi,[rip+0x23194]        # 449f46 <strcmp@plt+0x467ae>
  426db2:	lea    rsi,[rip+0x22da4]        # 449b5d <strcmp@plt+0x463c5>
  426db9:	lea    rcx,[rip+0x2346f]        # 44a22f <strcmp@plt+0x46a97>
  426dc0:	mov    edx,0x24a
  426dc5:	call   4032b0 <__assert_fail@plt>
  426dca:	nop    WORD PTR [rax+rax*1+0x0]
  426dd0:	push   rax
  426dd1:	test   rdi,rdi
  426dd4:	je     426dee <strcmp@plt+0x23656>
  426dd6:	cmp    DWORD PTR [rdi],0x9
  426dd9:	jne    426dea <strcmp@plt+0x23652>
  426ddb:	mov    rax,QWORD PTR [rdi+0x8]
  426ddf:	test   rax,rax
  426de2:	je     426e0d <strcmp@plt+0x23675>
  426de4:	mov    rax,QWORD PTR [rax+0x8]
  426de8:	pop    rcx
  426de9:	ret    
  426dea:	xor    eax,eax
  426dec:	pop    rcx
  426ded:	ret    
  426dee:	lea    rdi,[rip+0x23151]        # 449f46 <strcmp@plt+0x467ae>
  426df5:	lea    rsi,[rip+0x22d61]        # 449b5d <strcmp@plt+0x463c5>
  426dfc:	lea    rcx,[rip+0x23146]        # 449f49 <strcmp@plt+0x467b1>
  426e03:	mov    edx,0x185
  426e08:	call   4032b0 <__assert_fail@plt>
  426e0d:	lea    rdi,[rip+0x23132]        # 449f46 <strcmp@plt+0x467ae>
  426e14:	lea    rsi,[rip+0x22d42]        # 449b5d <strcmp@plt+0x463c5>
  426e1b:	lea    rcx,[rip+0x233a3]        # 44a1c5 <strcmp@plt+0x46a2d>
  426e22:	mov    edx,0x235
  426e27:	call   4032b0 <__assert_fail@plt>
  426e2c:	nop    DWORD PTR [rax+0x0]
  426e30:	push   rax
  426e31:	test   rdi,rdi
  426e34:	je     426e3c <strcmp@plt+0x236a4>
  426e36:	mov    rax,QWORD PTR [rdi+0x8]
  426e3a:	pop    rcx
  426e3b:	ret    
  426e3c:	lea    rdi,[rip+0x23103]        # 449f46 <strcmp@plt+0x467ae>
  426e43:	lea    rsi,[rip+0x22d13]        # 449b5d <strcmp@plt+0x463c5>
  426e4a:	lea    rcx,[rip+0x23374]        # 44a1c5 <strcmp@plt+0x46a2d>
  426e51:	mov    edx,0x235
  426e56:	call   4032b0 <__assert_fail@plt>
  426e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  426e60:	push   rax
  426e61:	test   rdi,rdi
  426e64:	je     426e7e <strcmp@plt+0x236e6>
  426e66:	cmp    DWORD PTR [rdi],0x9
  426e69:	jne    426e7a <strcmp@plt+0x236e2>
  426e6b:	mov    rax,QWORD PTR [rdi+0x8]
  426e6f:	test   rax,rax
  426e72:	je     426e9d <strcmp@plt+0x23705>
  426e74:	mov    rax,QWORD PTR [rax+0x10]
  426e78:	pop    rcx
  426e79:	ret    
  426e7a:	xor    eax,eax
  426e7c:	pop    rcx
  426e7d:	ret    
  426e7e:	lea    rdi,[rip+0x230c1]        # 449f46 <strcmp@plt+0x467ae>
  426e85:	lea    rsi,[rip+0x22cd1]        # 449b5d <strcmp@plt+0x463c5>
  426e8c:	lea    rcx,[rip+0x230e2]        # 449f75 <strcmp@plt+0x467dd>
  426e93:	mov    edx,0x18e
  426e98:	call   4032b0 <__assert_fail@plt>
  426e9d:	lea    rdi,[rip+0x230a2]        # 449f46 <strcmp@plt+0x467ae>
  426ea4:	lea    rsi,[rip+0x22cb2]        # 449b5d <strcmp@plt+0x463c5>
  426eab:	lea    rcx,[rip+0x23338]        # 44a1ea <strcmp@plt+0x46a52>
  426eb2:	mov    edx,0x23c
  426eb7:	call   4032b0 <__assert_fail@plt>
  426ebc:	nop    DWORD PTR [rax+0x0]
  426ec0:	push   rax
  426ec1:	test   rdi,rdi
  426ec4:	je     426ecc <strcmp@plt+0x23734>
  426ec6:	mov    rax,QWORD PTR [rdi+0x10]
  426eca:	pop    rcx
  426ecb:	ret    
  426ecc:	lea    rdi,[rip+0x23073]        # 449f46 <strcmp@plt+0x467ae>
  426ed3:	lea    rsi,[rip+0x22c83]        # 449b5d <strcmp@plt+0x463c5>
  426eda:	lea    rcx,[rip+0x23309]        # 44a1ea <strcmp@plt+0x46a52>
  426ee1:	mov    edx,0x23c
  426ee6:	call   4032b0 <__assert_fail@plt>
  426eeb:	nop    DWORD PTR [rax+rax*1+0x0]
  426ef0:	push   rax
  426ef1:	test   rdi,rdi
  426ef4:	je     426f04 <strcmp@plt+0x2376c>
  426ef6:	mov    rax,QWORD PTR [rdi+0x8]
  426efa:	test   rax,rax
  426efd:	je     426f23 <strcmp@plt+0x2378b>
  426eff:	mov    eax,DWORD PTR [rax+0x4]
  426f02:	pop    rcx
  426f03:	ret    
  426f04:	lea    rdi,[rip+0x2303b]        # 449f46 <strcmp@plt+0x467ae>
  426f0b:	lea    rsi,[rip+0x22c4b]        # 449b5d <strcmp@plt+0x463c5>
  426f12:	lea    rcx,[rip+0x23088]        # 449fa1 <strcmp@plt+0x46809>
  426f19:	mov    edx,0x197
  426f1e:	call   4032b0 <__assert_fail@plt>
  426f23:	lea    rdi,[rip+0x2301c]        # 449f46 <strcmp@plt+0x467ae>
  426f2a:	lea    rsi,[rip+0x22c2c]        # 449b5d <strcmp@plt+0x463c5>
  426f31:	lea    rcx,[rip+0x232f7]        # 44a22f <strcmp@plt+0x46a97>
  426f38:	mov    edx,0x24a
  426f3d:	call   4032b0 <__assert_fail@plt>
  426f42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426f4c:	nop    DWORD PTR [rax+0x0]
  426f50:	push   rax
  426f51:	test   rdi,rdi
  426f54:	je     426f63 <strcmp@plt+0x237cb>
  426f56:	mov    rax,QWORD PTR [rdi+0x8]
  426f5a:	test   rax,rax
  426f5d:	je     426f82 <strcmp@plt+0x237ea>
  426f5f:	mov    al,BYTE PTR [rax]
  426f61:	pop    rcx
  426f62:	ret    
  426f63:	lea    rdi,[rip+0x22fdc]        # 449f46 <strcmp@plt+0x467ae>
  426f6a:	lea    rsi,[rip+0x22bec]        # 449b5d <strcmp@plt+0x463c5>
  426f71:	lea    rcx,[rip+0x23051]        # 449fc9 <strcmp@plt+0x46831>
  426f78:	mov    edx,0x19e
  426f7d:	call   4032b0 <__assert_fail@plt>
  426f82:	lea    rdi,[rip+0x22fbd]        # 449f46 <strcmp@plt+0x467ae>
  426f89:	lea    rsi,[rip+0x22bcd]        # 449b5d <strcmp@plt+0x463c5>
  426f90:	lea    rcx,[rip+0x232b9]        # 44a250 <strcmp@plt+0x46ab8>
  426f97:	mov    edx,0x251
  426f9c:	call   4032b0 <__assert_fail@plt>
  426fa1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426fab:	nop    DWORD PTR [rax+rax*1+0x0]
  426fb0:	push   rax
  426fb1:	test   rdi,rdi
  426fb4:	je     426fba <strcmp@plt+0x23822>
  426fb6:	mov    al,BYTE PTR [rdi]
  426fb8:	pop    rcx
  426fb9:	ret    
  426fba:	lea    rdi,[rip+0x22f85]        # 449f46 <strcmp@plt+0x467ae>
  426fc1:	lea    rsi,[rip+0x22b95]        # 449b5d <strcmp@plt+0x463c5>
  426fc8:	lea    rcx,[rip+0x23281]        # 44a250 <strcmp@plt+0x46ab8>
  426fcf:	mov    edx,0x251
  426fd4:	call   4032b0 <__assert_fail@plt>
  426fd9:	nop    DWORD PTR [rax+0x0]
  426fe0:	push   rax
  426fe1:	test   rdi,rdi
  426fe4:	je     426ff4 <strcmp@plt+0x2385c>
  426fe6:	mov    rax,QWORD PTR [rdi+0x8]
  426fea:	test   rax,rax
  426fed:	je     427013 <strcmp@plt+0x2387b>
  426fef:	mov    al,BYTE PTR [rax+0x1]
  426ff2:	pop    rcx
  426ff3:	ret    
  426ff4:	lea    rdi,[rip+0x22f4b]        # 449f46 <strcmp@plt+0x467ae>
  426ffb:	lea    rsi,[rip+0x22b5b]        # 449b5d <strcmp@plt+0x463c5>
  427002:	lea    rcx,[rip+0x22fec]        # 449ff5 <strcmp@plt+0x4685d>
  427009:	mov    edx,0x1a5
  42700e:	call   4032b0 <__assert_fail@plt>
  427013:	lea    rdi,[rip+0x22f2c]        # 449f46 <strcmp@plt+0x467ae>
  42701a:	lea    rsi,[rip+0x22b3c]        # 449b5d <strcmp@plt+0x463c5>
  427021:	lea    rcx,[rip+0x2324d]        # 44a275 <strcmp@plt+0x46add>
  427028:	mov    edx,0x258
  42702d:	call   4032b0 <__assert_fail@plt>
  427032:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42703c:	nop    DWORD PTR [rax+0x0]
  427040:	push   rax
  427041:	test   rdi,rdi
  427044:	je     42704b <strcmp@plt+0x238b3>
  427046:	mov    al,BYTE PTR [rdi+0x1]
  427049:	pop    rcx
  42704a:	ret    
  42704b:	lea    rdi,[rip+0x22ef4]        # 449f46 <strcmp@plt+0x467ae>
  427052:	lea    rsi,[rip+0x22b04]        # 449b5d <strcmp@plt+0x463c5>
  427059:	lea    rcx,[rip+0x23215]        # 44a275 <strcmp@plt+0x46add>
  427060:	mov    edx,0x258
  427065:	call   4032b0 <__assert_fail@plt>
  42706a:	nop    WORD PTR [rax+rax*1+0x0]
  427070:	push   rax
  427071:	test   rdi,rdi
  427074:	je     42708a <strcmp@plt+0x238f2>
  427076:	mov    rax,QWORD PTR [rdi+0x8]
  42707a:	test   rax,rax
  42707d:	je     4270a9 <strcmp@plt+0x23911>
  42707f:	mov    rdi,QWORD PTR [rax+0x10]
  427083:	call   422ef0 <strcmp@plt+0x1f758>
  427088:	pop    rcx
  427089:	ret    
  42708a:	lea    rdi,[rip+0x22eb5]        # 449f46 <strcmp@plt+0x467ae>
  427091:	lea    rsi,[rip+0x22ac5]        # 449b5d <strcmp@plt+0x463c5>
  427098:	lea    rcx,[rip+0x22f82]        # 44a021 <strcmp@plt+0x46889>
  42709f:	mov    edx,0x1ac
  4270a4:	call   4032b0 <__assert_fail@plt>
  4270a9:	lea    rdi,[rip+0x22e96]        # 449f46 <strcmp@plt+0x467ae>
  4270b0:	lea    rsi,[rip+0x22aa6]        # 449b5d <strcmp@plt+0x463c5>
  4270b7:	lea    rcx,[rip+0x23151]        # 44a20f <strcmp@plt+0x46a77>
  4270be:	mov    edx,0x243
  4270c3:	call   4032b0 <__assert_fail@plt>
  4270c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4270d0:	push   rax
  4270d1:	test   rdi,rdi
  4270d4:	je     4270e1 <strcmp@plt+0x23949>
  4270d6:	mov    rdi,QWORD PTR [rdi+0x10]
  4270da:	call   422ef0 <strcmp@plt+0x1f758>
  4270df:	pop    rcx
  4270e0:	ret    
  4270e1:	lea    rdi,[rip+0x22e5e]        # 449f46 <strcmp@plt+0x467ae>
  4270e8:	lea    rsi,[rip+0x22a6e]        # 449b5d <strcmp@plt+0x463c5>
  4270ef:	lea    rcx,[rip+0x23119]        # 44a20f <strcmp@plt+0x46a77>
  4270f6:	mov    edx,0x243
  4270fb:	call   4032b0 <__assert_fail@plt>
  427100:	push   rbx
  427101:	mov    edi,0x1
  427106:	mov    esi,0x18
  42710b:	call   4032d0 <calloc@plt>
  427110:	mov    rbx,rax
  427113:	xor    eax,eax
  427115:	call   422c80 <strcmp@plt+0x1f4e8>
  42711a:	mov    QWORD PTR [rbx+0x8],rax
  42711e:	xor    eax,eax
  427120:	call   422c80 <strcmp@plt+0x1f4e8>
  427125:	mov    QWORD PTR [rbx+0x10],rax
  427129:	mov    rax,rbx
  42712c:	pop    rbx
  42712d:	ret    
  42712e:	xchg   ax,ax
  427130:	push   rax
  427131:	test   rdi,rdi
  427134:	je     42713b <strcmp@plt+0x239a3>
  427136:	mov    BYTE PTR [rdi],sil
  427139:	pop    rax
  42713a:	ret    
  42713b:	lea    rdi,[rip+0x22e04]        # 449f46 <strcmp@plt+0x467ae>
  427142:	lea    rsi,[rip+0x22a14]        # 449b5d <strcmp@plt+0x463c5>
  427149:	lea    rcx,[rip+0x22ef8]        # 44a048 <strcmp@plt+0x468b0>
  427150:	mov    edx,0x1c9
  427155:	call   4032b0 <__assert_fail@plt>
  42715a:	nop    WORD PTR [rax+rax*1+0x0]
  427160:	push   rax
  427161:	test   rdi,rdi
  427164:	je     42716c <strcmp@plt+0x239d4>
  427166:	mov    BYTE PTR [rdi+0x1],sil
  42716a:	pop    rax
  42716b:	ret    
  42716c:	lea    rdi,[rip+0x22dd3]        # 449f46 <strcmp@plt+0x467ae>
  427173:	lea    rsi,[rip+0x229e3]        # 449b5d <strcmp@plt+0x463c5>
  42717a:	lea    rcx,[rip+0x22ef2]        # 44a073 <strcmp@plt+0x468db>
  427181:	mov    edx,0x1d0
  427186:	call   4032b0 <__assert_fail@plt>
  42718b:	nop    DWORD PTR [rax+rax*1+0x0]
  427190:	push   rax
  427191:	test   rdi,rdi
  427194:	je     42719b <strcmp@plt+0x23a03>
  427196:	mov    DWORD PTR [rdi+0x4],esi
  427199:	pop    rax
  42719a:	ret    
  42719b:	lea    rdi,[rip+0x22da4]        # 449f46 <strcmp@plt+0x467ae>
  4271a2:	lea    rsi,[rip+0x229b4]        # 449b5d <strcmp@plt+0x463c5>
  4271a9:	lea    rcx,[rip+0x22eee]        # 44a09e <strcmp@plt+0x46906>
  4271b0:	mov    edx,0x1d7
  4271b5:	call   4032b0 <__assert_fail@plt>
  4271ba:	nop    WORD PTR [rax+rax*1+0x0]
  4271c0:	push   rax
  4271c1:	test   rdi,rdi
  4271c4:	je     4271d5 <strcmp@plt+0x23a3d>
  4271c6:	test   rsi,rsi
  4271c9:	je     4271f4 <strcmp@plt+0x23a5c>
  4271cb:	mov    rdi,QWORD PTR [rdi+0x8]
  4271cf:	pop    rax
  4271d0:	jmp    423260 <strcmp@plt+0x1fac8>
  4271d5:	lea    rdi,[rip+0x22d6a]        # 449f46 <strcmp@plt+0x467ae>
  4271dc:	lea    rsi,[rip+0x2297a]        # 449b5d <strcmp@plt+0x463c5>
  4271e3:	lea    rcx,[rip+0x22edb]        # 44a0c5 <strcmp@plt+0x4692d>
  4271ea:	mov    edx,0x1de
  4271ef:	call   4032b0 <__assert_fail@plt>
  4271f4:	lea    rdi,[rip+0x22c0c]        # 449e07 <strcmp@plt+0x4666f>
  4271fb:	lea    rsi,[rip+0x2295b]        # 449b5d <strcmp@plt+0x463c5>
  427202:	lea    rcx,[rip+0x22ebc]        # 44a0c5 <strcmp@plt+0x4692d>
  427209:	mov    edx,0x1df
  42720e:	call   4032b0 <__assert_fail@plt>
  427213:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42721d:	nop    DWORD PTR [rax]
  427220:	push   rax
  427221:	test   rdi,rdi
  427224:	je     427235 <strcmp@plt+0x23a9d>
  427226:	test   rsi,rsi
  427229:	je     427254 <strcmp@plt+0x23abc>
  42722b:	mov    rdi,QWORD PTR [rdi+0x10]
  42722f:	pop    rax
  427230:	jmp    423260 <strcmp@plt+0x1fac8>
  427235:	lea    rdi,[rip+0x22d0a]        # 449f46 <strcmp@plt+0x467ae>
  42723c:	lea    rsi,[rip+0x2291a]        # 449b5d <strcmp@plt+0x463c5>
  427243:	lea    rcx,[rip+0x22ea7]        # 44a0f1 <strcmp@plt+0x46959>
  42724a:	mov    edx,0x1e6
  42724f:	call   4032b0 <__assert_fail@plt>
  427254:	lea    rdi,[rip+0x22ec2]        # 44a11d <strcmp@plt+0x46985>
  42725b:	lea    rsi,[rip+0x228fb]        # 449b5d <strcmp@plt+0x463c5>
  427262:	lea    rcx,[rip+0x22e88]        # 44a0f1 <strcmp@plt+0x46959>
  427269:	mov    edx,0x1e7
  42726e:	call   4032b0 <__assert_fail@plt>
  427273:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42727d:	nop    DWORD PTR [rax]
  427280:	push   rbp
  427281:	push   r15
  427283:	push   r14
  427285:	push   r12
  427287:	push   rbx
  427288:	test   rsi,rsi
  42728b:	je     4272d0 <strcmp@plt+0x23b38>
  42728d:	mov    rbp,rdi
  427290:	test   rdi,rdi
  427293:	je     4272ef <strcmp@plt+0x23b57>
  427295:	mov    rbx,rdx
  427298:	test   rdx,rdx
  42729b:	je     42730e <strcmp@plt+0x23b76>
  42729d:	mov    r14d,r9d
  4272a0:	mov    r15d,r8d
  4272a3:	mov    r12d,ecx
  4272a6:	mov    rdi,QWORD PTR [rbp+0x8]
  4272aa:	call   423260 <strcmp@plt+0x1fac8>
  4272af:	mov    rdi,QWORD PTR [rbp+0x10]
  4272b3:	mov    rsi,rbx
  4272b6:	call   423260 <strcmp@plt+0x1fac8>
  4272bb:	mov    BYTE PTR [rbp+0x0],r12b
  4272bf:	mov    BYTE PTR [rbp+0x1],r15b
  4272c3:	mov    DWORD PTR [rbp+0x4],r14d
  4272c7:	pop    rbx
  4272c8:	pop    r12
  4272ca:	pop    r14
  4272cc:	pop    r15
  4272ce:	pop    rbp
  4272cf:	ret    
  4272d0:	lea    rdi,[rip+0x22b30]        # 449e07 <strcmp@plt+0x4666f>
  4272d7:	lea    rsi,[rip+0x2287f]        # 449b5d <strcmp@plt+0x463c5>
  4272de:	lea    rcx,[rip+0x22e3c]        # 44a121 <strcmp@plt+0x46989>
  4272e5:	mov    edx,0x20e
  4272ea:	call   4032b0 <__assert_fail@plt>
  4272ef:	lea    rdi,[rip+0x22e7e]        # 44a174 <strcmp@plt+0x469dc>
  4272f6:	lea    rsi,[rip+0x22860]        # 449b5d <strcmp@plt+0x463c5>
  4272fd:	lea    rcx,[rip+0x22e1d]        # 44a121 <strcmp@plt+0x46989>
  427304:	mov    edx,0x20f
  427309:	call   4032b0 <__assert_fail@plt>
  42730e:	lea    rdi,[rip+0x22e08]        # 44a11d <strcmp@plt+0x46985>
  427315:	lea    rsi,[rip+0x22841]        # 449b5d <strcmp@plt+0x463c5>
  42731c:	lea    rcx,[rip+0x22dfe]        # 44a121 <strcmp@plt+0x46989>
  427323:	mov    edx,0x210
  427328:	call   4032b0 <__assert_fail@plt>
  42732d:	nop    DWORD PTR [rax]
  427330:	push   rbp
  427331:	push   r15
  427333:	push   r14
  427335:	push   r13
  427337:	push   r12
  427339:	push   rbx
  42733a:	push   rax
  42733b:	test   rdi,rdi
  42733e:	je     4273ca <strcmp@plt+0x23c32>
  427344:	mov    r13,rsi
  427347:	mov    DWORD PTR [rsp],ecx
  42734a:	mov    DWORD PTR [rsp+0x4],r8d
  42734f:	test   rsi,rsi
  427352:	je     4273e9 <strcmp@plt+0x23c51>
  427358:	mov    rbx,rdi
  42735b:	mov    r12d,edx
  42735e:	mov    edi,0x1
  427363:	mov    esi,0x18
  427368:	call   4032d0 <calloc@plt>
  42736d:	mov    rbp,rax
  427370:	xor    eax,eax
  427372:	call   422c80 <strcmp@plt+0x1f4e8>
  427377:	mov    r14,rax
  42737a:	mov    QWORD PTR [rbp+0x8],rax
  42737e:	xor    eax,eax
  427380:	call   422c80 <strcmp@plt+0x1f4e8>
  427385:	mov    QWORD PTR [rbp+0x10],rax
  427389:	test   rbp,rbp
  42738c:	je     427408 <strcmp@plt+0x23c70>
  42738e:	mov    r15,rax
  427391:	mov    rdi,r14
  427394:	mov    rsi,rbx
  427397:	call   423260 <strcmp@plt+0x1fac8>
  42739c:	mov    rdi,r15
  42739f:	mov    rsi,r13
  4273a2:	call   423260 <strcmp@plt+0x1fac8>
  4273a7:	mov    BYTE PTR [rbp+0x0],r12b
  4273ab:	mov    eax,DWORD PTR [rsp]
  4273ae:	mov    BYTE PTR [rbp+0x1],al
  4273b1:	mov    eax,DWORD PTR [rsp+0x4]
  4273b5:	mov    DWORD PTR [rbp+0x4],eax
  4273b8:	mov    rax,rbp
  4273bb:	add    rsp,0x8
  4273bf:	pop    rbx
  4273c0:	pop    r12
  4273c2:	pop    r13
  4273c4:	pop    r14
  4273c6:	pop    r15
  4273c8:	pop    rbp
  4273c9:	ret    
  4273ca:	lea    rdi,[rip+0x22a36]        # 449e07 <strcmp@plt+0x4666f>
  4273d1:	lea    rsi,[rip+0x22785]        # 449b5d <strcmp@plt+0x463c5>
  4273d8:	lea    rcx,[rip+0x22d99]        # 44a178 <strcmp@plt+0x469e0>
  4273df:	mov    edx,0x226
  4273e4:	call   4032b0 <__assert_fail@plt>
  4273e9:	lea    rdi,[rip+0x22d2d]        # 44a11d <strcmp@plt+0x46985>
  4273f0:	lea    rsi,[rip+0x22766]        # 449b5d <strcmp@plt+0x463c5>
  4273f7:	lea    rcx,[rip+0x22d7a]        # 44a178 <strcmp@plt+0x469e0>
  4273fe:	mov    edx,0x227
  427403:	call   4032b0 <__assert_fail@plt>
  427408:	lea    rdi,[rip+0x22b37]        # 449f46 <strcmp@plt+0x467ae>
  42740f:	lea    rsi,[rip+0x22747]        # 449b5d <strcmp@plt+0x463c5>
  427416:	lea    rcx,[rip+0x22da8]        # 44a1c5 <strcmp@plt+0x46a2d>
  42741d:	mov    edx,0x235
  427422:	call   4032b0 <__assert_fail@plt>
  427427:	nop    WORD PTR [rax+rax*1+0x0]
  427430:	push   rbp
  427431:	push   r15
  427433:	push   r14
  427435:	push   r13
  427437:	push   r12
  427439:	push   rbx
  42743a:	push   rax
  42743b:	test   rdi,rdi
  42743e:	je     4274a8 <strcmp@plt+0x23d10>
  427440:	mov    r14d,r9d
  427443:	mov    r15d,r8d
  427446:	mov    r13d,ecx
  427449:	mov    r12,rdx
  42744c:	mov    rbp,rsi
  42744f:	mov    rbx,rdi
  427452:	mov    rdi,QWORD PTR [rdi+0x8]
  427456:	test   rdi,rdi
  427459:	je     42746f <strcmp@plt+0x23cd7>
  42745b:	mov    eax,DWORD PTR [rbx]
  42745d:	lea    rcx,[rip+0x3d46c]        # 4648d0 <strcmp@plt+0x61138>
  427464:	mov    rax,QWORD PTR [rcx+rax*8]
  427468:	test   rax,rax
  42746b:	je     42746f <strcmp@plt+0x23cd7>
  42746d:	call   rax
  42746f:	movzx  edx,r13b
  427473:	movzx  ecx,r15b
  427477:	mov    rdi,rbp
  42747a:	mov    rsi,r12
  42747d:	mov    r8d,r14d
  427480:	call   427330 <strcmp@plt+0x23b98>
  427485:	mov    DWORD PTR [rbx],0x9
  42748b:	test   rax,rax
  42748e:	je     4274c7 <strcmp@plt+0x23d2f>
  427490:	mov    QWORD PTR [rbx+0x8],rax
  427494:	mov    eax,0x1
  427499:	add    rsp,0x8
  42749d:	pop    rbx
  42749e:	pop    r12
  4274a0:	pop    r13
  4274a2:	pop    r14
  4274a4:	pop    r15
  4274a6:	pop    rbp
  4274a7:	ret    
  4274a8:	lea    rdi,[rip+0x226a9]        # 449b58 <strcmp@plt+0x463c0>
  4274af:	lea    rsi,[rip+0x226a7]        # 449b5d <strcmp@plt+0x463c5>
  4274b6:	lea    rcx,[rip+0x232b1]        # 44a76e <strcmp@plt+0x46fd6>
  4274bd:	mov    edx,0x6f
  4274c2:	call   4032b0 <__assert_fail@plt>
  4274c7:	lea    rdi,[rip+0x22ea7]        # 44a375 <strcmp@plt+0x46bdd>
  4274ce:	lea    rsi,[rip+0x22688]        # 449b5d <strcmp@plt+0x463c5>
  4274d5:	lea    rcx,[rip+0x22889]        # 449d65 <strcmp@plt+0x465cd>
  4274dc:	mov    edx,0x124
  4274e1:	call   4032b0 <__assert_fail@plt>
  4274e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4274f0:	push   rbp
  4274f1:	push   r15
  4274f3:	push   r14
  4274f5:	push   rbx
  4274f6:	push   rax
  4274f7:	mov    r14,rsi
  4274fa:	mov    r15,rdi
  4274fd:	call   422ef0 <strcmp@plt+0x1f758>
  427502:	cmp    ax,0x2
  427506:	mov    eax,0x20
  42750b:	mov    ebp,0x80
  427510:	cmove  ebp,eax
  427513:	mov    edi,0x3
  427518:	call   422be0 <strcmp@plt+0x1f448>
  42751d:	test   rax,rax
  427520:	je     427573 <strcmp@plt+0x23ddb>
  427522:	mov    rbx,rax
  427525:	mov    rdi,QWORD PTR [rax+0x8]
  427529:	test   rdi,rdi
  42752c:	je     427542 <strcmp@plt+0x23daa>
  42752e:	mov    eax,DWORD PTR [rbx]
  427530:	lea    rcx,[rip+0x3d399]        # 4648d0 <strcmp@plt+0x61138>
  427537:	mov    rax,QWORD PTR [rcx+rax*8]
  42753b:	test   rax,rax
  42753e:	je     427542 <strcmp@plt+0x23daa>
  427540:	call   rax
  427542:	movzx  ecx,bpl
  427546:	mov    rdi,r15
  427549:	mov    rsi,r14
  42754c:	mov    edx,ecx
  42754e:	xor    r8d,r8d
  427551:	call   427330 <strcmp@plt+0x23b98>
  427556:	mov    DWORD PTR [rbx],0x9
  42755c:	test   rax,rax
  42755f:	je     427592 <strcmp@plt+0x23dfa>
  427561:	mov    QWORD PTR [rbx+0x8],rax
  427565:	mov    rax,rbx
  427568:	add    rsp,0x8
  42756c:	pop    rbx
  42756d:	pop    r14
  42756f:	pop    r15
  427571:	pop    rbp
  427572:	ret    
  427573:	lea    rdi,[rip+0x225de]        # 449b58 <strcmp@plt+0x463c0>
  42757a:	lea    rsi,[rip+0x225dc]        # 449b5d <strcmp@plt+0x463c5>
  427581:	lea    rcx,[rip+0x231e6]        # 44a76e <strcmp@plt+0x46fd6>
  427588:	mov    edx,0x6f
  42758d:	call   4032b0 <__assert_fail@plt>
  427592:	lea    rdi,[rip+0x22ddc]        # 44a375 <strcmp@plt+0x46bdd>
  427599:	lea    rsi,[rip+0x225bd]        # 449b5d <strcmp@plt+0x463c5>
  4275a0:	lea    rcx,[rip+0x227be]        # 449d65 <strcmp@plt+0x465cd>
  4275a7:	mov    edx,0x124
  4275ac:	call   4032b0 <__assert_fail@plt>
  4275b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4275bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4275c0:	push   rax
  4275c1:	xor    eax,eax
  4275c3:	cmp    DWORD PTR [rdi+0x18],0x3
  4275c7:	jne    4275d8 <strcmp@plt+0x23e40>
  4275c9:	call   423020 <strcmp@plt+0x1f888>
  4275ce:	mov    ecx,eax
  4275d0:	xor    eax,eax
  4275d2:	cmp    ecx,0x9
  4275d5:	sete   al
  4275d8:	pop    rcx
  4275d9:	ret    
  4275da:	nop    WORD PTR [rax+rax*1+0x0]
  4275e0:	push   rbx
  4275e1:	mov    edi,0x10
  4275e6:	call   431d60 <strcmp@plt+0x2e5c8>
  4275eb:	mov    rbx,rax
  4275ee:	xor    eax,eax
  4275f0:	call   422c80 <strcmp@plt+0x1f4e8>
  4275f5:	mov    QWORD PTR [rbx+0x8],rax
  4275f9:	mov    rax,rbx
  4275fc:	pop    rbx
  4275fd:	ret    
  4275fe:	xchg   ax,ax
  427600:	push   rbp
  427601:	push   r15
  427603:	push   r14
  427605:	push   rbx
  427606:	push   rax
  427607:	mov    r14d,edx
  42760a:	mov    r15,rsi
  42760d:	mov    ebp,edi
  42760f:	mov    edi,0x10
  427614:	call   431d60 <strcmp@plt+0x2e5c8>
  427619:	mov    rbx,rax
  42761c:	xor    eax,eax
  42761e:	call   422c80 <strcmp@plt+0x1f4e8>
  427623:	mov    QWORD PTR [rbx+0x8],rax
  427627:	mov    DWORD PTR [rbx],ebp
  427629:	mov    rdi,rax
  42762c:	mov    rsi,r15
  42762f:	call   423260 <strcmp@plt+0x1fac8>
  427634:	mov    BYTE PTR [rbx+0x4],r14b
  427638:	mov    rax,rbx
  42763b:	add    rsp,0x8
  42763f:	pop    rbx
  427640:	pop    r14
  427642:	pop    r15
  427644:	pop    rbp
  427645:	ret    
  427646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427650:	push   rax
  427651:	test   rdi,rdi
  427654:	je     42765c <strcmp@plt+0x23ec4>
  427656:	mov    rax,QWORD PTR [rdi+0x8]
  42765a:	pop    rcx
  42765b:	ret    
  42765c:	lea    rdi,[rip+0x24d1f]        # 44c382 <strcmp@plt+0x48bea>
  427663:	lea    rsi,[rip+0x224f3]        # 449b5d <strcmp@plt+0x463c5>
  42766a:	lea    rcx,[rip+0x22c7d]        # 44a2ee <strcmp@plt+0x46b56>
  427671:	mov    edx,0x30a
  427676:	call   4032b0 <__assert_fail@plt>
  42767b:	nop    DWORD PTR [rax+rax*1+0x0]
  427680:	push   rax
  427681:	test   rdi,rdi
  427684:	je     42768b <strcmp@plt+0x23ef3>
  427686:	mov    al,BYTE PTR [rdi+0x4]
  427689:	pop    rcx
  42768a:	ret    
  42768b:	lea    rdi,[rip+0x24cf0]        # 44c382 <strcmp@plt+0x48bea>
  427692:	lea    rsi,[rip+0x224c4]        # 449b5d <strcmp@plt+0x463c5>
  427699:	lea    rcx,[rip+0x22c08]        # 44a2a8 <strcmp@plt+0x46b10>
  4276a0:	mov    edx,0x2f6
  4276a5:	call   4032b0 <__assert_fail@plt>
  4276aa:	nop    WORD PTR [rax+rax*1+0x0]
  4276b0:	push   rax
  4276b1:	test   rdi,rdi
  4276b4:	je     4276ba <strcmp@plt+0x23f22>
  4276b6:	mov    eax,DWORD PTR [rdi]
  4276b8:	pop    rcx
  4276b9:	ret    
  4276ba:	lea    rdi,[rip+0x24cc1]        # 44c382 <strcmp@plt+0x48bea>
  4276c1:	lea    rsi,[rip+0x22495]        # 449b5d <strcmp@plt+0x463c5>
  4276c8:	lea    rcx,[rip+0x22bfc]        # 44a2cb <strcmp@plt+0x46b33>
  4276cf:	mov    edx,0x303
  4276d4:	call   4032b0 <__assert_fail@plt>
  4276d9:	nop    DWORD PTR [rax+0x0]
  4276e0:	push   rax
  4276e1:	test   rdi,rdi
  4276e4:	je     4276ea <strcmp@plt+0x23f52>
  4276e6:	mov    DWORD PTR [rdi],esi
  4276e8:	pop    rax
  4276e9:	ret    
  4276ea:	lea    rdi,[rip+0x22c24]        # 44a315 <strcmp@plt+0x46b7d>
  4276f1:	lea    rsi,[rip+0x22465]        # 449b5d <strcmp@plt+0x463c5>
  4276f8:	lea    rcx,[rip+0x22c1b]        # 44a31a <strcmp@plt+0x46b82>
  4276ff:	mov    edx,0x311
  427704:	call   4032b0 <__assert_fail@plt>
  427709:	nop    DWORD PTR [rax+0x0]
  427710:	push   rax
  427711:	test   rdi,rdi
  427714:	je     427725 <strcmp@plt+0x23f8d>
  427716:	test   rsi,rsi
  427719:	je     427744 <strcmp@plt+0x23fac>
  42771b:	mov    rdi,QWORD PTR [rdi+0x8]
  42771f:	pop    rax
  427720:	jmp    423260 <strcmp@plt+0x1fac8>
  427725:	lea    rdi,[rip+0x22be9]        # 44a315 <strcmp@plt+0x46b7d>
  42772c:	lea    rsi,[rip+0x2242a]        # 449b5d <strcmp@plt+0x463c5>
  427733:	lea    rcx,[rip+0x22c09]        # 44a343 <strcmp@plt+0x46bab>
  42773a:	mov    edx,0x318
  42773f:	call   4032b0 <__assert_fail@plt>
  427744:	lea    rdi,[rip+0x22c27]        # 44a372 <strcmp@plt+0x46bda>
  42774b:	lea    rsi,[rip+0x2240b]        # 449b5d <strcmp@plt+0x463c5>
  427752:	lea    rcx,[rip+0x22bea]        # 44a343 <strcmp@plt+0x46bab>
  427759:	mov    edx,0x319
  42775e:	call   4032b0 <__assert_fail@plt>
  427763:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42776d:	nop    DWORD PTR [rax]
  427770:	push   rax
  427771:	test   rdi,rdi
  427774:	je     42777c <strcmp@plt+0x23fe4>
  427776:	mov    BYTE PTR [rdi+0x4],sil
  42777a:	pop    rax
  42777b:	ret    
  42777c:	lea    rdi,[rip+0x24bff]        # 44c382 <strcmp@plt+0x48bea>
  427783:	lea    rsi,[rip+0x223d3]        # 449b5d <strcmp@plt+0x463c5>
  42778a:	lea    rcx,[rip+0x22be9]        # 44a37a <strcmp@plt+0x46be2>
  427791:	mov    edx,0x320
  427796:	call   4032b0 <__assert_fail@plt>
  42779b:	nop    DWORD PTR [rax+rax*1+0x0]
  4277a0:	push   rax
  4277a1:	xor    eax,eax
  4277a3:	cmp    DWORD PTR [rdi+0x18],0x3
  4277a7:	jne    4277b8 <strcmp@plt+0x24020>
  4277a9:	call   423020 <strcmp@plt+0x1f888>
  4277ae:	mov    ecx,eax
  4277b0:	xor    eax,eax
  4277b2:	cmp    ecx,0x2
  4277b5:	sete   al
  4277b8:	pop    rcx
  4277b9:	ret    
  4277ba:	nop    WORD PTR [rax+rax*1+0x0]
  4277c0:	push   rbp
  4277c1:	push   r15
  4277c3:	push   r14
  4277c5:	push   r12
  4277c7:	push   rbx
  4277c8:	mov    r14d,ecx
  4277cb:	mov    r15,rdx
  4277ce:	mov    r12d,esi
  4277d1:	mov    rbx,rdi
  4277d4:	mov    DWORD PTR [rdi],0x2
  4277da:	mov    edi,0x10
  4277df:	call   431d60 <strcmp@plt+0x2e5c8>
  4277e4:	mov    rbp,rax
  4277e7:	xor    eax,eax
  4277e9:	call   422c80 <strcmp@plt+0x1f4e8>
  4277ee:	mov    QWORD PTR [rbp+0x8],rax
  4277f2:	mov    DWORD PTR [rbp+0x0],r12d
  4277f6:	mov    rdi,rax
  4277f9:	mov    rsi,r15
  4277fc:	call   423260 <strcmp@plt+0x1fac8>
  427801:	mov    BYTE PTR [rbp+0x4],r14b
  427805:	mov    QWORD PTR [rbx+0x8],rbp
  427809:	pop    rbx
  42780a:	pop    r12
  42780c:	pop    r14
  42780e:	pop    r15
  427810:	pop    rbp
  427811:	ret    
  427812:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42781c:	nop    DWORD PTR [rax+0x0]
  427820:	push   rbp
  427821:	push   r15
  427823:	push   r14
  427825:	push   r12
  427827:	push   rbx
  427828:	mov    r14d,edx
  42782b:	mov    r15,rsi
  42782e:	mov    r12d,edi
  427831:	mov    edi,0x3
  427836:	call   422be0 <strcmp@plt+0x1f448>
  42783b:	mov    rbx,rax
  42783e:	mov    DWORD PTR [rax],0x2
  427844:	mov    edi,0x10
  427849:	call   431d60 <strcmp@plt+0x2e5c8>
  42784e:	mov    rbp,rax
  427851:	xor    eax,eax
  427853:	call   422c80 <strcmp@plt+0x1f4e8>
  427858:	mov    QWORD PTR [rbp+0x8],rax
  42785c:	mov    DWORD PTR [rbp+0x0],r12d
  427860:	mov    rdi,rax
  427863:	mov    rsi,r15
  427866:	call   423260 <strcmp@plt+0x1fac8>
  42786b:	mov    BYTE PTR [rbp+0x4],r14b
  42786f:	mov    QWORD PTR [rbx+0x8],rbp
  427873:	mov    rax,rbx
  427876:	pop    rbx
  427877:	pop    r12
  427879:	pop    r14
  42787b:	pop    r15
  42787d:	pop    rbp
  42787e:	ret    
  42787f:	nop
  427880:	push   rbx
  427881:	mov    edi,0x1
  427886:	mov    esi,0x18
  42788b:	call   4032d0 <calloc@plt>
  427890:	mov    rbx,rax
  427893:	xor    eax,eax
  427895:	call   422c80 <strcmp@plt+0x1f4e8>
  42789a:	mov    QWORD PTR [rbx+0x10],rax
  42789e:	mov    rax,rbx
  4278a1:	pop    rbx
  4278a2:	ret    
  4278a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4278ad:	nop    DWORD PTR [rax]
  4278b0:	mov    rax,QWORD PTR [rdi+0x10]
  4278b4:	ret    
  4278b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4278bf:	nop
  4278c0:	push   rax
  4278c1:	test   rsi,rsi
  4278c4:	je     4278d5 <strcmp@plt+0x2413d>
  4278c6:	test   rdi,rdi
  4278c9:	je     4278f4 <strcmp@plt+0x2415c>
  4278cb:	mov    rdi,QWORD PTR [rdi+0x10]
  4278cf:	pop    rax
  4278d0:	jmp    423260 <strcmp@plt+0x1fac8>
  4278d5:	lea    rdi,[rip+0x22a99]        # 44a375 <strcmp@plt+0x46bdd>
  4278dc:	lea    rsi,[rip+0x2227a]        # 449b5d <strcmp@plt+0x463c5>
  4278e3:	lea    rcx,[rip+0x22acd]        # 44a3b7 <strcmp@plt+0x46c1f>
  4278ea:	mov    edx,0x3b9
  4278ef:	call   4032b0 <__assert_fail@plt>
  4278f4:	lea    rdi,[rip+0x22aeb]        # 44a3e6 <strcmp@plt+0x46c4e>
  4278fb:	lea    rsi,[rip+0x2225b]        # 449b5d <strcmp@plt+0x463c5>
  427902:	lea    rcx,[rip+0x22aae]        # 44a3b7 <strcmp@plt+0x46c1f>
  427909:	mov    edx,0x3ba
  42790e:	call   4032b0 <__assert_fail@plt>
  427913:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42791d:	nop    DWORD PTR [rax]
  427920:	push   rax
  427921:	test   rdi,rdi
  427924:	je     427936 <strcmp@plt+0x2419e>
  427926:	mov    BYTE PTR [rdi],sil
  427929:	mov    WORD PTR [rdi+0x2],dx
  42792d:	mov    BYTE PTR [rdi+0x4],cl
  427930:	mov    BYTE PTR [rdi+0x5],r8b
  427934:	pop    rax
  427935:	ret    
  427936:	lea    rdi,[rip+0x22aa9]        # 44a3e6 <strcmp@plt+0x46c4e>
  42793d:	lea    rsi,[rip+0x22219]        # 449b5d <strcmp@plt+0x463c5>
  427944:	lea    rcx,[rip+0x22a9f]        # 44a3ea <strcmp@plt+0x46c52>
  42794b:	mov    edx,0x3c2
  427950:	call   4032b0 <__assert_fail@plt>
  427955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42795f:	nop
  427960:	push   rax
  427961:	test   rdi,rdi
  427964:	je     427977 <strcmp@plt+0x241df>
  427966:	mov    BYTE PTR [rdi+0x6],sil
  42796a:	mov    WORD PTR [rdi+0x8],dx
  42796e:	mov    BYTE PTR [rdi+0xa],cl
  427971:	mov    BYTE PTR [rdi+0xb],r8b
  427975:	pop    rax
  427976:	ret    
  427977:	lea    rdi,[rip+0x22a68]        # 44a3e6 <strcmp@plt+0x46c4e>
  42797e:	lea    rsi,[rip+0x221d8]        # 449b5d <strcmp@plt+0x463c5>
  427985:	lea    rcx,[rip+0x22aa2]        # 44a42e <strcmp@plt+0x46c96>
  42798c:	mov    edx,0x3cd
  427991:	call   4032b0 <__assert_fail@plt>
  427996:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4279a0:	push   rax
  4279a1:	test   rdi,rdi
  4279a4:	je     4279c0 <strcmp@plt+0x24228>
  4279a6:	mov    al,BYTE PTR [rsi]
  4279a8:	mov    BYTE PTR [rdi],al
  4279aa:	movzx  eax,WORD PTR [rsi+0x2]
  4279ae:	mov    WORD PTR [rdi+0x2],ax
  4279b2:	mov    al,BYTE PTR [rsi+0x4]
  4279b5:	mov    BYTE PTR [rdi+0x4],al
  4279b8:	mov    al,BYTE PTR [rsi+0x5]
  4279bb:	mov    BYTE PTR [rdi+0x5],al
  4279be:	pop    rax
  4279bf:	ret    
  4279c0:	lea    rdi,[rip+0x22a1f]        # 44a3e6 <strcmp@plt+0x46c4e>
  4279c7:	lea    rsi,[rip+0x2218f]        # 449b5d <strcmp@plt+0x463c5>
  4279ce:	lea    rcx,[rip+0x22a9e]        # 44a473 <strcmp@plt+0x46cdb>
  4279d5:	mov    edx,0x3d7
  4279da:	call   4032b0 <__assert_fail@plt>
  4279df:	nop
  4279e0:	push   rax
  4279e1:	test   rdi,rdi
  4279e4:	je     427a01 <strcmp@plt+0x24269>
  4279e6:	mov    al,BYTE PTR [rsi]
  4279e8:	mov    BYTE PTR [rdi+0x6],al
  4279eb:	movzx  eax,WORD PTR [rsi+0x2]
  4279ef:	mov    WORD PTR [rdi+0x8],ax
  4279f3:	mov    al,BYTE PTR [rsi+0x4]
  4279f6:	mov    BYTE PTR [rdi+0xa],al
  4279f9:	mov    al,BYTE PTR [rsi+0x5]
  4279fc:	mov    BYTE PTR [rdi+0xb],al
  4279ff:	pop    rax
  427a00:	ret    
  427a01:	lea    rdi,[rip+0x229de]        # 44a3e6 <strcmp@plt+0x46c4e>
  427a08:	lea    rsi,[rip+0x2214e]        # 449b5d <strcmp@plt+0x463c5>
  427a0f:	lea    rcx,[rip+0x22a9a]        # 44a4b0 <strcmp@plt+0x46d18>
  427a16:	mov    edx,0x3e1
  427a1b:	call   4032b0 <__assert_fail@plt>
  427a20:	push   rax
  427a21:	test   rdi,rdi
  427a24:	je     427a2b <strcmp@plt+0x24293>
  427a26:	mov    DWORD PTR [rdi+0xc],esi
  427a29:	pop    rax
  427a2a:	ret    
  427a2b:	lea    rdi,[rip+0x229b4]        # 44a3e6 <strcmp@plt+0x46c4e>
  427a32:	lea    rsi,[rip+0x22124]        # 449b5d <strcmp@plt+0x463c5>
  427a39:	lea    rcx,[rip+0x22aae]        # 44a4ee <strcmp@plt+0x46d56>
  427a40:	mov    edx,0x3eb
  427a45:	call   4032b0 <__assert_fail@plt>
  427a4a:	nop    WORD PTR [rax+rax*1+0x0]
  427a50:	test   rdi,rdi
  427a53:	je     427a59 <strcmp@plt+0x242c1>
  427a55:	mov    rax,rdi
  427a58:	ret    
  427a59:	push   rax
  427a5a:	lea    rdi,[rip+0x22985]        # 44a3e6 <strcmp@plt+0x46c4e>
  427a61:	lea    rsi,[rip+0x220f5]        # 449b5d <strcmp@plt+0x463c5>
  427a68:	lea    rcx,[rip+0x22aad]        # 44a51c <strcmp@plt+0x46d84>
  427a6f:	mov    edx,0x3f2
  427a74:	call   4032b0 <__assert_fail@plt>
  427a79:	nop    DWORD PTR [rax+0x0]
  427a80:	test   rdi,rdi
  427a83:	je     427a8d <strcmp@plt+0x242f5>
  427a85:	mov    rax,rdi
  427a88:	add    rax,0x6
  427a8c:	ret    
  427a8d:	push   rax
  427a8e:	lea    rdi,[rip+0x22951]        # 44a3e6 <strcmp@plt+0x46c4e>
  427a95:	lea    rsi,[rip+0x220c1]        # 449b5d <strcmp@plt+0x463c5>
  427a9c:	lea    rcx,[rip+0x22aa4]        # 44a547 <strcmp@plt+0x46daf>
  427aa3:	mov    edx,0x3f9
  427aa8:	call   4032b0 <__assert_fail@plt>
  427aad:	nop    DWORD PTR [rax]
  427ab0:	push   rax
  427ab1:	test   rdi,rdi
  427ab4:	je     427abb <strcmp@plt+0x24323>
  427ab6:	mov    eax,DWORD PTR [rdi+0xc]
  427ab9:	pop    rcx
  427aba:	ret    
  427abb:	lea    rdi,[rip+0x22924]        # 44a3e6 <strcmp@plt+0x46c4e>
  427ac2:	lea    rsi,[rip+0x22094]        # 449b5d <strcmp@plt+0x463c5>
  427ac9:	lea    rcx,[rip+0x22aa3]        # 44a573 <strcmp@plt+0x46ddb>
  427ad0:	mov    edx,0x400
  427ad5:	call   4032b0 <__assert_fail@plt>
  427ada:	nop    WORD PTR [rax+rax*1+0x0]
  427ae0:	push   rbx
  427ae1:	sub    rsp,0x10
  427ae5:	mov    BYTE PTR [rip+0x43d74],0x0        # 46b860 <strcmp@plt+0x680c8>
  427aec:	lea    rbx,[rip+0x43d6d]        # 46b860 <strcmp@plt+0x680c8>
  427af3:	movzx  ecx,BYTE PTR [rdi]
  427af6:	movzx  r8d,WORD PTR [rdi+0x2]
  427afb:	movzx  r9d,BYTE PTR [rdi+0x4]
  427b00:	movzx  eax,BYTE PTR [rdi+0x5]
  427b04:	mov    DWORD PTR [rsp],eax
  427b07:	lea    rdx,[rip+0x22ac3]        # 44a5d1 <strcmp@plt+0x46e39>
  427b0e:	mov    esi,0x60
  427b13:	mov    rdi,rbx
  427b16:	xor    eax,eax
  427b18:	call   403630 <snprintf@plt>
  427b1d:	mov    rax,rbx
  427b20:	add    rsp,0x10
  427b24:	pop    rbx
  427b25:	ret    
  427b26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b30:	push   rbx
  427b31:	mov    edi,0x30
  427b36:	call   431d60 <strcmp@plt+0x2e5c8>
  427b3b:	mov    rbx,rax
  427b3e:	xor    eax,eax
  427b40:	call   422c80 <strcmp@plt+0x1f4e8>
  427b45:	mov    QWORD PTR [rbx+0x18],rax
  427b49:	xor    eax,eax
  427b4b:	call   422c80 <strcmp@plt+0x1f4e8>
  427b50:	mov    QWORD PTR [rbx+0x8],rax
  427b54:	xor    eax,eax
  427b56:	call   422c80 <strcmp@plt+0x1f4e8>
  427b5b:	mov    QWORD PTR [rbx+0x20],rax
  427b5f:	lea    rdi,[rip+0xffffffffffffb12a]        # 422c90 <strcmp@plt+0x1f4f8>
  427b66:	call   42b9b0 <strcmp@plt+0x28218>
  427b6b:	mov    QWORD PTR [rbx+0x28],rax
  427b6f:	mov    rax,rbx
  427b72:	pop    rbx
  427b73:	ret    
  427b74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427b7e:	xchg   ax,ax
  427b80:	push   rbp
  427b81:	push   r15
  427b83:	push   r14
  427b85:	push   r13
  427b87:	push   r12
  427b89:	push   rbx
  427b8a:	push   rax
  427b8b:	mov    QWORD PTR [rsp],r9
  427b8f:	mov    r15,r8
  427b92:	mov    r12,rcx
  427b95:	mov    ebp,edx
  427b97:	mov    r13,rsi
  427b9a:	mov    r14d,edi
  427b9d:	mov    edi,0x30
  427ba2:	call   431d60 <strcmp@plt+0x2e5c8>
  427ba7:	mov    rbx,rax
  427baa:	mov    WORD PTR [rax+0x10],r14w
  427baf:	mov    WORD PTR [rax],bp
  427bb2:	mov    rdi,r13
  427bb5:	call   423440 <strcmp@plt+0x1fca8>
  427bba:	lea    rbp,[rip+0xffffffffffffb87f]        # 423440 <strcmp@plt+0x1fca8>
  427bc1:	mov    QWORD PTR [rbx+0x18],rax
  427bc5:	mov    rdi,r12
  427bc8:	call   423440 <strcmp@plt+0x1fca8>
  427bcd:	mov    QWORD PTR [rbx+0x8],rax
  427bd1:	mov    rdi,r15
  427bd4:	call   423440 <strcmp@plt+0x1fca8>
  427bd9:	mov    QWORD PTR [rbx+0x20],rax
  427bdd:	mov    rdi,QWORD PTR [rsp]
  427be1:	mov    rsi,rbp
  427be4:	call   42ba20 <strcmp@plt+0x28288>
  427be9:	mov    QWORD PTR [rbx+0x28],rax
  427bed:	lea    rsi,[rip+0xffffffffffffb09c]        # 422c90 <strcmp@plt+0x1f4f8>
  427bf4:	mov    rdi,rax
  427bf7:	call   42ba10 <strcmp@plt+0x28278>
  427bfc:	mov    rax,rbx
  427bff:	add    rsp,0x8
  427c03:	pop    rbx
  427c04:	pop    r12
  427c06:	pop    r13
  427c08:	pop    r14
  427c0a:	pop    r15
  427c0c:	pop    rbp
  427c0d:	ret    
  427c0e:	xchg   ax,ax
  427c10:	movzx  eax,WORD PTR [rdi+0x10]
  427c14:	ret    
  427c15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c1f:	nop
  427c20:	movzx  eax,WORD PTR [rdi]
  427c23:	ret    
  427c24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c2e:	xchg   ax,ax
  427c30:	mov    rax,QWORD PTR [rdi+0x18]
  427c34:	ret    
  427c35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c3f:	nop
  427c40:	mov    rax,QWORD PTR [rdi+0x8]
  427c44:	ret    
  427c45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c4f:	nop
  427c50:	mov    rax,QWORD PTR [rdi+0x20]
  427c54:	ret    
  427c55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c5f:	nop
  427c60:	mov    rax,QWORD PTR [rdi+0x28]
  427c64:	ret    
  427c65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c6f:	nop
  427c70:	mov    WORD PTR [rdi+0x10],si
  427c74:	ret    
  427c75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c7f:	nop
  427c80:	mov    WORD PTR [rdi],si
  427c83:	ret    
  427c84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c8e:	xchg   ax,ax
  427c90:	mov    rdi,QWORD PTR [rdi+0x18]
  427c94:	jmp    423260 <strcmp@plt+0x1fac8>
  427c99:	nop    DWORD PTR [rax+0x0]
  427ca0:	mov    rdi,QWORD PTR [rdi+0x8]
  427ca4:	jmp    423260 <strcmp@plt+0x1fac8>
  427ca9:	nop    DWORD PTR [rax+0x0]
  427cb0:	mov    rdi,QWORD PTR [rdi+0x20]
  427cb4:	jmp    423260 <strcmp@plt+0x1fac8>
  427cb9:	nop    DWORD PTR [rax+0x0]
  427cc0:	push   r14
  427cc2:	push   rbx
  427cc3:	push   rax
  427cc4:	mov    r14,rsi
  427cc7:	mov    rbx,rdi
  427cca:	mov    rdi,QWORD PTR [rdi+0x28]
  427cce:	call   42bff0 <strcmp@plt+0x28858>
  427cd3:	lea    rsi,[rip+0xffffffffffffb766]        # 423440 <strcmp@plt+0x1fca8>
  427cda:	mov    rdi,r14
  427cdd:	call   42ba20 <strcmp@plt+0x28288>
  427ce2:	mov    QWORD PTR [rbx+0x28],rax
  427ce6:	lea    rsi,[rip+0xffffffffffffafa3]        # 422c90 <strcmp@plt+0x1f4f8>
  427ced:	mov    rdi,rax
  427cf0:	add    rsp,0x8
  427cf4:	pop    rbx
  427cf5:	pop    r14
  427cf7:	jmp    42ba10 <strcmp@plt+0x28278>
  427cfc:	nop    DWORD PTR [rax+0x0]
  427d00:	push   rbp
  427d01:	push   r15
  427d03:	push   r14
  427d05:	push   r13
  427d07:	push   r12
  427d09:	push   rbx
  427d0a:	push   rax
  427d0b:	mov    QWORD PTR [rsp],r9
  427d0f:	mov    r12,r8
  427d12:	mov    ebp,ecx
  427d14:	mov    r13,rdx
  427d17:	mov    r15d,esi
  427d1a:	mov    r14,rdi
  427d1d:	mov    DWORD PTR [rdi],0x7
  427d23:	mov    edi,0x30
  427d28:	call   431d60 <strcmp@plt+0x2e5c8>
  427d2d:	mov    rbx,rax
  427d30:	mov    WORD PTR [rax+0x10],r15w
  427d35:	mov    WORD PTR [rax],bp
  427d38:	mov    rdi,r13
  427d3b:	call   423440 <strcmp@plt+0x1fca8>
  427d40:	lea    rbp,[rip+0xffffffffffffb6f9]        # 423440 <strcmp@plt+0x1fca8>
  427d47:	mov    QWORD PTR [rbx+0x18],rax
  427d4b:	mov    rdi,r12
  427d4e:	call   423440 <strcmp@plt+0x1fca8>
  427d53:	mov    QWORD PTR [rbx+0x8],rax
  427d57:	mov    rdi,QWORD PTR [rsp]
  427d5b:	call   423440 <strcmp@plt+0x1fca8>
  427d60:	mov    QWORD PTR [rbx+0x20],rax
  427d64:	mov    rdi,QWORD PTR [rsp+0x40]
  427d69:	mov    rsi,rbp
  427d6c:	call   42ba20 <strcmp@plt+0x28288>
  427d71:	mov    QWORD PTR [rbx+0x28],rax
  427d75:	lea    rsi,[rip+0xffffffffffffaf14]        # 422c90 <strcmp@plt+0x1f4f8>
  427d7c:	mov    rdi,rax
  427d7f:	call   42ba10 <strcmp@plt+0x28278>
  427d84:	mov    QWORD PTR [r14+0x8],rbx
  427d88:	add    rsp,0x8
  427d8c:	pop    rbx
  427d8d:	pop    r12
  427d8f:	pop    r13
  427d91:	pop    r14
  427d93:	pop    r15
  427d95:	pop    rbp
  427d96:	ret    
  427d97:	nop    WORD PTR [rax+rax*1+0x0]
  427da0:	push   rax
  427da1:	xor    eax,eax
  427da3:	cmp    DWORD PTR [rdi+0x18],0x3
  427da7:	jne    427db8 <strcmp@plt+0x24620>
  427da9:	call   423020 <strcmp@plt+0x1f888>
  427dae:	mov    ecx,eax
  427db0:	xor    eax,eax
  427db2:	cmp    ecx,0x7
  427db5:	sete   al
  427db8:	pop    rcx
  427db9:	ret    
  427dba:	nop    WORD PTR [rax+rax*1+0x0]
  427dc0:	push   rbp
  427dc1:	push   r15
  427dc3:	push   r14
  427dc5:	push   r13
  427dc7:	push   r12
  427dc9:	push   rbx
  427dca:	sub    rsp,0x18
  427dce:	mov    QWORD PTR [rsp+0x10],r9
  427dd3:	mov    QWORD PTR [rsp+0x8],r8
  427dd8:	mov    r13,rcx
  427ddb:	mov    ebp,edx
  427ddd:	mov    r14,rsi
  427de0:	mov    r15d,edi
  427de3:	mov    edi,0x3
  427de8:	call   422be0 <strcmp@plt+0x1f448>
  427ded:	mov    r12,rax
  427df0:	mov    DWORD PTR [rax],0x7
  427df6:	mov    edi,0x30
  427dfb:	call   431d60 <strcmp@plt+0x2e5c8>
  427e00:	mov    rbx,rax
  427e03:	mov    WORD PTR [rax+0x10],r15w
  427e08:	mov    WORD PTR [rax],bp
  427e0b:	mov    rdi,r14
  427e0e:	call   423440 <strcmp@plt+0x1fca8>
  427e13:	lea    rbp,[rip+0xffffffffffffb626]        # 423440 <strcmp@plt+0x1fca8>
  427e1a:	mov    QWORD PTR [rbx+0x18],rax
  427e1e:	mov    rdi,r13
  427e21:	call   423440 <strcmp@plt+0x1fca8>
  427e26:	mov    QWORD PTR [rbx+0x8],rax
  427e2a:	mov    rdi,QWORD PTR [rsp+0x8]
  427e2f:	call   423440 <strcmp@plt+0x1fca8>
  427e34:	mov    QWORD PTR [rbx+0x20],rax
  427e38:	mov    rdi,QWORD PTR [rsp+0x10]
  427e3d:	mov    rsi,rbp
  427e40:	call   42ba20 <strcmp@plt+0x28288>
  427e45:	mov    QWORD PTR [rbx+0x28],rax
  427e49:	lea    rsi,[rip+0xffffffffffffae40]        # 422c90 <strcmp@plt+0x1f4f8>
  427e50:	mov    rdi,rax
  427e53:	call   42ba10 <strcmp@plt+0x28278>
  427e58:	mov    QWORD PTR [r12+0x8],rbx
  427e5d:	mov    rax,r12
  427e60:	add    rsp,0x18
  427e64:	pop    rbx
  427e65:	pop    r12
  427e67:	pop    r13
  427e69:	pop    r14
  427e6b:	pop    r15
  427e6d:	pop    rbp
  427e6e:	ret    
  427e6f:	nop
  427e70:	push   r14
  427e72:	push   rbx
  427e73:	push   rax
  427e74:	mov    edi,0x8
  427e79:	call   431d60 <strcmp@plt+0x2e5c8>
  427e7e:	mov    r14,rax
  427e81:	lea    rdi,[rip+0xb8]        # 427f40 <strcmp@plt+0x247a8>
  427e88:	call   42b9b0 <strcmp@plt+0x28218>
  427e8d:	mov    QWORD PTR [r14],rax
  427e90:	test   r14,r14
  427e93:	je     427ed1 <strcmp@plt+0x24739>
  427e95:	mov    edi,0x3
  427e9a:	call   422be0 <strcmp@plt+0x1f448>
  427e9f:	test   rax,rax
  427ea2:	je     427ec1 <strcmp@plt+0x24729>
  427ea4:	mov    rbx,rax
  427ea7:	mov    rdi,rax
  427eaa:	mov    esi,0xa
  427eaf:	call   423840 <strcmp@plt+0x200a8>
  427eb4:	mov    rdi,rbx
  427eb7:	mov    rsi,r14
  427eba:	call   423820 <strcmp@plt+0x20088>
  427ebf:	jmp    427ed3 <strcmp@plt+0x2473b>
  427ec1:	mov    rdi,QWORD PTR [r14]
  427ec4:	call   42bff0 <strcmp@plt+0x28858>
  427ec9:	mov    rdi,r14
  427ecc:	call   403790 <free@plt>
  427ed1:	xor    ebx,ebx
  427ed3:	mov    rax,rbx
  427ed6:	add    rsp,0x8
  427eda:	pop    rbx
  427edb:	pop    r14
  427edd:	ret    
  427ede:	xchg   ax,ax
  427ee0:	push   rax
  427ee1:	test   rdi,rdi
  427ee4:	je     427eec <strcmp@plt+0x24754>
  427ee6:	mov    rax,QWORD PTR [rdi+0x8]
  427eea:	pop    rcx
  427eeb:	ret    
  427eec:	lea    rdi,[rip+0x21c65]        # 449b58 <strcmp@plt+0x463c0>
  427ef3:	lea    rsi,[rip+0x21c63]        # 449b5d <strcmp@plt+0x463c5>
  427efa:	lea    rcx,[rip+0x2286d]        # 44a76e <strcmp@plt+0x46fd6>
  427f01:	mov    edx,0x6f
  427f06:	call   4032b0 <__assert_fail@plt>
  427f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  427f10:	push   rbx
  427f11:	mov    edi,0x8
  427f16:	call   431d60 <strcmp@plt+0x2e5c8>
  427f1b:	mov    rbx,rax
  427f1e:	lea    rdi,[rip+0x1b]        # 427f40 <strcmp@plt+0x247a8>
  427f25:	call   42b9b0 <strcmp@plt+0x28218>
  427f2a:	mov    QWORD PTR [rbx],rax
  427f2d:	mov    rax,rbx
  427f30:	pop    rbx
  427f31:	ret    
  427f32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f3c:	nop    DWORD PTR [rax+0x0]
  427f40:	push   rbx
  427f41:	mov    rbx,rdi
  427f44:	mov    rdi,QWORD PTR [rdi+0x8]
  427f48:	call   422c90 <strcmp@plt+0x1f4f8>
  427f4d:	mov    rdi,rbx
  427f50:	pop    rbx
  427f51:	jmp    403790 <free@plt>
  427f56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f60:	push   r14
  427f62:	push   rbx
  427f63:	push   rax
  427f64:	mov    r14,rdi
  427f67:	mov    edi,0x10
  427f6c:	call   431d60 <strcmp@plt+0x2e5c8>
  427f71:	mov    rbx,rax
  427f74:	mov    al,BYTE PTR [r14]
  427f77:	and    al,0x1
  427f79:	mov    cl,BYTE PTR [rbx]
  427f7b:	and    cl,0xfe
  427f7e:	or     cl,al
  427f80:	mov    BYTE PTR [rbx],cl
  427f82:	mov    al,BYTE PTR [r14]
  427f85:	and    al,0x2
  427f87:	and    cl,0xfd
  427f8a:	or     cl,al
  427f8c:	mov    BYTE PTR [rbx],cl
  427f8e:	mov    al,BYTE PTR [r14]
  427f91:	and    al,0x4
  427f93:	and    cl,0xfb
  427f96:	or     cl,al
  427f98:	mov    BYTE PTR [rbx],cl
  427f9a:	mov    rdi,QWORD PTR [r14+0x8]
  427f9e:	call   423440 <strcmp@plt+0x1fca8>
  427fa3:	mov    QWORD PTR [rbx+0x8],rax
  427fa7:	mov    rax,rbx
  427faa:	add    rsp,0x8
  427fae:	pop    rbx
  427faf:	pop    r14
  427fb1:	ret    
  427fb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427fbc:	nop    DWORD PTR [rax+0x0]
  427fc0:	push   rbp
  427fc1:	push   r15
  427fc3:	push   r14
  427fc5:	push   r12
  427fc7:	push   rbx
  427fc8:	mov    ebx,ecx
  427fca:	mov    ebp,edx
  427fcc:	mov    r15d,esi
  427fcf:	mov    r12,rdi
  427fd2:	mov    edi,0x10
  427fd7:	call   431d60 <strcmp@plt+0x2e5c8>
  427fdc:	test   rax,rax
  427fdf:	je     428013 <strcmp@plt+0x2487b>
  427fe1:	mov    r14,rax
  427fe4:	mov    rdi,r12
  427fe7:	call   423440 <strcmp@plt+0x1fca8>
  427fec:	mov    QWORD PTR [r14+0x8],rax
  427ff0:	mov    al,BYTE PTR [r14]
  427ff3:	and    r15b,0x1
  427ff7:	and    al,0xf8
  427ff9:	add    bpl,bpl
  427ffc:	and    bpl,0x2
  428000:	or     bpl,r15b
  428003:	shl    bl,0x2
  428006:	and    bl,0x4
  428009:	or     bl,bpl
  42800c:	or     bl,al
  42800e:	mov    BYTE PTR [r14],bl
  428011:	jmp    428016 <strcmp@plt+0x2487e>
  428013:	xor    r14d,r14d
  428016:	mov    rax,r14
  428019:	pop    rbx
  42801a:	pop    r12
  42801c:	pop    r14
  42801e:	pop    r15
  428020:	pop    rbp
  428021:	ret    
  428022:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42802c:	nop    DWORD PTR [rax+0x0]
  428030:	mov    rax,QWORD PTR [rdi+0x8]
  428034:	ret    
  428035:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42803f:	nop
  428040:	push   r14
  428042:	push   rbx
  428043:	push   rax
  428044:	mov    r14,rsi
  428047:	mov    rsi,QWORD PTR [rdi]
  42804a:	test   rsi,rsi
  42804d:	jne    428064 <strcmp@plt+0x248cc>
  42804f:	mov    rbx,rdi
  428052:	lea    rdi,[rip+0xfffffffffffffee7]        # 427f40 <strcmp@plt+0x247a8>
  428059:	call   42b9b0 <strcmp@plt+0x28218>
  42805e:	mov    rsi,rax
  428061:	mov    QWORD PTR [rbx],rax
  428064:	mov    rdi,r14
  428067:	add    rsp,0x8
  42806b:	pop    rbx
  42806c:	pop    r14
  42806e:	jmp    42bbd0 <strcmp@plt+0x28438>
  428073:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42807d:	nop    DWORD PTR [rax]
  428080:	mov    rax,QWORD PTR [rdi+0x8]
  428084:	mov    rax,QWORD PTR [rax]
  428087:	ret    
  428088:	nop    DWORD PTR [rax+rax*1+0x0]
  428090:	push   rax
  428091:	xor    eax,eax
  428093:	cmp    DWORD PTR [rdi+0x18],0x3
  428097:	jne    4280a8 <strcmp@plt+0x24910>
  428099:	call   423020 <strcmp@plt+0x1f888>
  42809e:	mov    ecx,eax
  4280a0:	xor    eax,eax
  4280a2:	cmp    ecx,0xa
  4280a5:	sete   al
  4280a8:	pop    rcx
  4280a9:	ret    
  4280aa:	nop    WORD PTR [rax+rax*1+0x0]
  4280b0:	push   rbx
  4280b1:	mov    edi,0x8
  4280b6:	call   431d60 <strcmp@plt+0x2e5c8>
  4280bb:	mov    rbx,rax
  4280be:	lea    rdi,[rip+0x1b]        # 4280e0 <strcmp@plt+0x24948>
  4280c5:	call   42b9b0 <strcmp@plt+0x28218>
  4280ca:	mov    QWORD PTR [rbx],rax
  4280cd:	mov    rax,rbx
  4280d0:	pop    rbx
  4280d1:	ret    
  4280d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280dc:	nop    DWORD PTR [rax+0x0]
  4280e0:	push   rbx
  4280e1:	mov    rbx,rdi
  4280e4:	mov    rdi,QWORD PTR [rdi]
  4280e7:	call   422c90 <strcmp@plt+0x1f4f8>
  4280ec:	mov    rdi,rbx
  4280ef:	pop    rbx
  4280f0:	jmp    403790 <free@plt>
  4280f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4280ff:	nop
  428100:	push   r14
  428102:	push   rbx
  428103:	push   rax
  428104:	mov    r14,rdi
  428107:	mov    edi,0x10
  42810c:	call   431d60 <strcmp@plt+0x2e5c8>
  428111:	mov    rbx,rax
  428114:	mov    al,BYTE PTR [r14+0x8]
  428118:	mov    BYTE PTR [rbx+0x8],al
  42811b:	mov    rdi,QWORD PTR [r14]
  42811e:	call   423440 <strcmp@plt+0x1fca8>
  428123:	mov    QWORD PTR [rbx],rax
  428126:	mov    rax,rbx
  428129:	add    rsp,0x8
  42812d:	pop    rbx
  42812e:	pop    r14
  428130:	ret    
  428131:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42813b:	nop    DWORD PTR [rax+rax*1+0x0]
  428140:	push   rbx
  428141:	mov    edi,0x10
  428146:	call   431d60 <strcmp@plt+0x2e5c8>
  42814b:	mov    rbx,rax
  42814e:	xor    eax,eax
  428150:	call   422c80 <strcmp@plt+0x1f4e8>
  428155:	mov    QWORD PTR [rbx],rax
  428158:	mov    rax,rbx
  42815b:	pop    rbx
  42815c:	ret    
  42815d:	nop    DWORD PTR [rax]
  428160:	mov    rax,QWORD PTR [rdi+0x8]
  428164:	mov    rax,QWORD PTR [rax]
  428167:	ret    
  428168:	nop    DWORD PTR [rax+rax*1+0x0]
  428170:	push   rbx
  428171:	mov    edi,0x8
  428176:	call   431d60 <strcmp@plt+0x2e5c8>
  42817b:	mov    rbx,rax
  42817e:	lea    rdi,[rip+0xffffffffffffab0b]        # 422c90 <strcmp@plt+0x1f4f8>
  428185:	call   42b9b0 <strcmp@plt+0x28218>
  42818a:	mov    QWORD PTR [rbx],rax
  42818d:	mov    rax,rbx
  428190:	pop    rbx
  428191:	ret    
  428192:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42819c:	nop    DWORD PTR [rax+0x0]
  4281a0:	push   rax
  4281a1:	test   rdi,rdi
  4281a4:	je     4281e2 <strcmp@plt+0x24a4a>
  4281a6:	mov    edx,DWORD PTR [rdi]
  4281a8:	lea    rax,[rip+0x3caa1]        # 464c50 <strcmp@plt+0x614b8>
  4281af:	mov    rax,QWORD PTR [rax+rdx*8]
  4281b3:	test   rax,rax
  4281b6:	je     4281bf <strcmp@plt+0x24a27>
  4281b8:	mov    rdi,QWORD PTR [rdi+0x8]
  4281bc:	pop    rcx
  4281bd:	jmp    rax
  4281bf:	lea    rax,[rip+0x3cbfa]        # 464dc0 <strcmp@plt+0x61628>
  4281c6:	cmp    DWORD PTR [rax],0x0
  4281c9:	jle    4281de <strcmp@plt+0x24a46>
  4281cb:	lea    rsi,[rip+0x224e6]        # 44a6b8 <strcmp@plt+0x46f20>
  4281d2:	mov    edi,0x5
  4281d7:	xor    eax,eax
  4281d9:	call   42e520 <strcmp@plt+0x2ad88>
  4281de:	xor    eax,eax
  4281e0:	pop    rcx
  4281e1:	ret    
  4281e2:	lea    rdi,[rip+0x2196f]        # 449b58 <strcmp@plt+0x463c0>
  4281e9:	lea    rsi,[rip+0x2196d]        # 449b5d <strcmp@plt+0x463c5>
  4281f0:	lea    rcx,[rip+0x22552]        # 44a749 <strcmp@plt+0x46fb1>
  4281f7:	mov    edx,0x6a
  4281fc:	call   4032b0 <__assert_fail@plt>
  428201:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42820b:	nop    DWORD PTR [rax+rax*1+0x0]
  428210:	push   rax
  428211:	test   rdi,rdi
  428214:	je     428252 <strcmp@plt+0x24aba>
  428216:	mov    edx,DWORD PTR [rdi]
  428218:	lea    rax,[rip+0x3cab1]        # 464cd0 <strcmp@plt+0x61538>
  42821f:	mov    rax,QWORD PTR [rax+rdx*8]
  428223:	test   rax,rax
  428226:	je     42822f <strcmp@plt+0x24a97>
  428228:	mov    rdi,QWORD PTR [rdi+0x8]
  42822c:	pop    rcx
  42822d:	jmp    rax
  42822f:	lea    rax,[rip+0x3cb8a]        # 464dc0 <strcmp@plt+0x61628>
  428236:	cmp    DWORD PTR [rax],0x0
  428239:	jle    42824e <strcmp@plt+0x24ab6>
  42823b:	lea    rsi,[rip+0x224a3]        # 44a6e5 <strcmp@plt+0x46f4d>
  428242:	mov    edi,0x5
  428247:	xor    eax,eax
  428249:	call   42e520 <strcmp@plt+0x2ad88>
  42824e:	xor    eax,eax
  428250:	pop    rcx
  428251:	ret    
  428252:	lea    rdi,[rip+0x218ff]        # 449b58 <strcmp@plt+0x463c0>
  428259:	lea    rsi,[rip+0x218fd]        # 449b5d <strcmp@plt+0x463c5>
  428260:	lea    rcx,[rip+0x224e2]        # 44a749 <strcmp@plt+0x46fb1>
  428267:	mov    edx,0x6a
  42826c:	call   4032b0 <__assert_fail@plt>
  428271:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42827b:	nop    DWORD PTR [rax+rax*1+0x0]
  428280:	push   rbp
  428281:	push   r15
  428283:	push   r14
  428285:	push   r12
  428287:	push   rbx
  428288:	test   rdi,rdi
  42828b:	je     428334 <strcmp@plt+0x24b9c>
  428291:	mov    r15,rsi
  428294:	mov    r12,rdi
  428297:	mov    edx,DWORD PTR [rdi]
  428299:	cmp    edx,0xd
  42829c:	je     4282c7 <strcmp@plt+0x24b2f>
  42829e:	cmp    edx,0xa
  4282a1:	jne    428301 <strcmp@plt+0x24b69>
  4282a3:	mov    rax,QWORD PTR [r12+0x8]
  4282a8:	mov    rax,QWORD PTR [rax]
  4282ab:	mov    rax,QWORD PTR [rax]
  4282ae:	mov    rbx,QWORD PTR [rax+0x10]
  4282b2:	mov    rdi,QWORD PTR [rbx+0x8]
  4282b6:	call   422c90 <strcmp@plt+0x1f4f8>
  4282bb:	mov    QWORD PTR [rbx+0x8],r15
  4282bf:	mov    r14d,0x1
  4282c5:	jmp    428328 <strcmp@plt+0x24b90>
  4282c7:	mov    rax,QWORD PTR [r12+0x8]
  4282cc:	mov    rax,QWORD PTR [rax]
  4282cf:	mov    rbx,QWORD PTR [rax+0x8]
  4282d3:	mov    r14d,0x1
  4282d9:	cmp    rbx,rax
  4282dc:	je     428328 <strcmp@plt+0x24b90>
  4282de:	xchg   ax,ax
  4282e0:	mov    rbp,QWORD PTR [rbx+0x10]
  4282e4:	mov    rdi,QWORD PTR [rbp+0x0]
  4282e8:	call   422c90 <strcmp@plt+0x1f4f8>
  4282ed:	mov    QWORD PTR [rbp+0x0],r15
  4282f1:	mov    rbx,QWORD PTR [rbx+0x8]
  4282f5:	mov    rax,QWORD PTR [r12+0x8]
  4282fa:	cmp    rbx,QWORD PTR [rax]
  4282fd:	jne    4282e0 <strcmp@plt+0x24b48>
  4282ff:	jmp    428328 <strcmp@plt+0x24b90>
  428301:	lea    rax,[rip+0x3cab8]        # 464dc0 <strcmp@plt+0x61628>
  428308:	cmp    DWORD PTR [rax],0x0
  42830b:	jle    428325 <strcmp@plt+0x24b8d>
  42830d:	lea    rsi,[rip+0x22403]        # 44a717 <strcmp@plt+0x46f7f>
  428314:	xor    r14d,r14d
  428317:	mov    edi,0x5
  42831c:	xor    eax,eax
  42831e:	call   42e520 <strcmp@plt+0x2ad88>
  428323:	jmp    428328 <strcmp@plt+0x24b90>
  428325:	xor    r14d,r14d
  428328:	mov    eax,r14d
  42832b:	pop    rbx
  42832c:	pop    r12
  42832e:	pop    r14
  428330:	pop    r15
  428332:	pop    rbp
  428333:	ret    
  428334:	lea    rdi,[rip+0x2181d]        # 449b58 <strcmp@plt+0x463c0>
  42833b:	lea    rsi,[rip+0x2181b]        # 449b5d <strcmp@plt+0x463c5>
  428342:	lea    rcx,[rip+0x21928]        # 449c71 <strcmp@plt+0x464d9>
  428349:	mov    edx,0xdb
  42834e:	call   4032b0 <__assert_fail@plt>
  428353:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42835d:	nop    DWORD PTR [rax]
  428360:	mov    edi,0x10
  428365:	jmp    431d60 <strcmp@plt+0x2e5c8>
  42836a:	nop    WORD PTR [rax+rax*1+0x0]
  428370:	push   rbp
  428371:	push   r15
  428373:	push   r14
  428375:	push   r13
  428377:	push   r12
  428379:	push   rbx
  42837a:	push   rax
  42837b:	mov    DWORD PTR [rsp+0x4],r9d
  428380:	mov    r15d,r8d
  428383:	mov    r12d,ecx
  428386:	mov    r13d,edx
  428389:	mov    ebp,esi
  42838b:	mov    r14,rdi
  42838e:	mov    edi,0x10
  428393:	call   431d60 <strcmp@plt+0x2e5c8>
  428398:	mov    rbx,rax
  42839b:	test   rax,rax
  42839e:	je     4283d0 <strcmp@plt+0x24c38>
  4283a0:	mov    rdi,r14
  4283a3:	call   423440 <strcmp@plt+0x1fca8>
  4283a8:	mov    QWORD PTR [rbx],rax
  4283ab:	mov    BYTE PTR [rbx+0x8],bpl
  4283af:	mov    BYTE PTR [rbx+0x9],r13b
  4283b3:	mov    BYTE PTR [rbx+0xa],r12b
  4283b7:	mov    BYTE PTR [rbx+0xb],r15b
  4283bb:	mov    eax,DWORD PTR [rsp+0x4]
  4283bf:	mov    BYTE PTR [rbx+0xc],al
  4283c2:	mov    al,BYTE PTR [rsp+0x40]
  4283c6:	mov    BYTE PTR [rbx+0xd],al
  4283c9:	mov    al,BYTE PTR [rsp+0x48]
  4283cd:	mov    BYTE PTR [rbx+0xe],al
  4283d0:	mov    rax,rbx
  4283d3:	add    rsp,0x8
  4283d7:	pop    rbx
  4283d8:	pop    r12
  4283da:	pop    r13
  4283dc:	pop    r14
  4283de:	pop    r15
  4283e0:	pop    rbp
  4283e1:	ret    
  4283e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4283ec:	nop    DWORD PTR [rax+0x0]
  4283f0:	push   rbp
  4283f1:	push   r15
  4283f3:	push   r14
  4283f5:	push   r13
  4283f7:	push   r12
  4283f9:	push   rbx
  4283fa:	push   rax
  4283fb:	movsxd rax,DWORD PTR [rip+0x45de2]        # 46e1e4 <strcmp@plt+0x6aa4c>
  428402:	test   rdi,rdi
  428405:	je     42855f <strcmp@plt+0x24dc7>
  42840b:	mov    r15,rdi
  42840e:	inc    eax
  428410:	cdqe   
  428412:	imul   rcx,rax,0x66666667
  428419:	mov    rdx,rcx
  42841c:	shr    rdx,0x3f
  428420:	sar    rcx,0x21
  428424:	add    ecx,edx
  428426:	lea    ecx,[rcx+rcx*4]
  428429:	sub    eax,ecx
  42842b:	mov    DWORD PTR [rip+0x45db3],eax        # 46e1e4 <strcmp@plt+0x6aa4c>
  428431:	cdqe   
  428433:	imul   rax,rax,0x1f4
  42843a:	lea    rbp,[rip+0x453df]        # 46d820 <strcmp@plt+0x6a088>
  428441:	lea    rbx,[rax+rbp*1]
  428445:	mov    BYTE PTR [rax+rbp*1],0x0
  428449:	mov    rdi,rbx
  42844c:	call   4031e0 <strlen@plt>
  428451:	add    rbx,rax
  428454:	mov    r14d,0x1f4
  42845a:	mov    r12d,0x1f4
  428460:	sub    r12,rax
  428463:	mov    rdi,QWORD PTR [r15]
  428466:	call   422e20 <strcmp@plt+0x1f688>
  42846b:	lea    r13,[rip+0x23fc9]        # 44c43b <strcmp@plt+0x48ca3>
  428472:	mov    rdi,rbx
  428475:	mov    rsi,r12
  428478:	mov    rdx,r13
  42847b:	mov    rcx,rax
  42847e:	xor    eax,eax
  428480:	call   403630 <snprintf@plt>
  428485:	movsxd rax,DWORD PTR [rip+0x45d58]        # 46e1e4 <strcmp@plt+0x6aa4c>
  42848c:	imul   rbx,rax,0x1f4
  428493:	add    rbx,rbp
  428496:	mov    rdi,rbx
  428499:	call   4031e0 <strlen@plt>
  42849e:	add    rbx,rax
  4284a1:	mov    esi,0x1f4
  4284a6:	sub    rsi,rax
  4284a9:	cmp    BYTE PTR [r15+0x8],0x0
  4284ae:	lea    rax,[rip+0x222ee]        # 44a7a3 <strcmp@plt+0x4700b>
  4284b5:	lea    rcx,[rip+0x222e4]        # 44a7a0 <strcmp@plt+0x47008>
  4284bc:	cmove  rcx,rax
  4284c0:	mov    rdi,rbx
  4284c3:	mov    rdx,r13
  4284c6:	xor    eax,eax
  4284c8:	call   403630 <snprintf@plt>
  4284cd:	movsxd rax,DWORD PTR [rip+0x45d10]        # 46e1e4 <strcmp@plt+0x6aa4c>
  4284d4:	imul   rbx,rax,0x1f4
  4284db:	add    rbx,rbp
  4284de:	mov    rdi,rbx
  4284e1:	call   4031e0 <strlen@plt>
  4284e6:	add    rbx,rax
  4284e9:	mov    esi,0x1f4
  4284ee:	sub    rsi,rax
  4284f1:	movzx  ecx,BYTE PTR [r15+0x9]
  4284f6:	movzx  r8d,BYTE PTR [r15+0xa]
  4284fb:	lea    rdx,[rip+0x222a6]        # 44a7a8 <strcmp@plt+0x47010>
  428502:	mov    rdi,rbx
  428505:	xor    eax,eax
  428507:	call   403630 <snprintf@plt>
  42850c:	movsxd rax,DWORD PTR [rip+0x45cd1]        # 46e1e4 <strcmp@plt+0x6aa4c>
  428513:	imul   rbx,rax,0x1f4
  42851a:	add    rbx,rbp
  42851d:	mov    rdi,rbx
  428520:	call   4031e0 <strlen@plt>
  428525:	add    rbx,rax
  428528:	sub    r14,rax
  42852b:	movzx  ecx,BYTE PTR [r15+0xb]
  428530:	movzx  r8d,BYTE PTR [r15+0xc]
  428535:	movzx  r9d,BYTE PTR [r15+0xd]
  42853a:	movzx  eax,BYTE PTR [r15+0xe]
  42853f:	mov    DWORD PTR [rsp],eax
  428542:	lea    rdx,[rip+0x2226c]        # 44a7b5 <strcmp@plt+0x4701d>
  428549:	mov    rdi,rbx
  42854c:	mov    rsi,r14
  42854f:	xor    eax,eax
  428551:	call   403630 <snprintf@plt>
  428556:	movsxd rax,DWORD PTR [rip+0x45c87]        # 46e1e4 <strcmp@plt+0x6aa4c>
  42855d:	jmp    42857c <strcmp@plt+0x24de4>
  42855f:	imul   rcx,rax,0x1f4
  428566:	lea    rdx,[rip+0x452b3]        # 46d820 <strcmp@plt+0x6a088>
  42856d:	mov    DWORD PTR [rcx+rdx*1+0x3],0x5f4c4c
  428575:	mov    DWORD PTR [rcx+rdx*1],0x4c554e5f
  42857c:	imul   rcx,rax,0x1f4
  428583:	lea    rax,[rip+0x45296]        # 46d820 <strcmp@plt+0x6a088>
  42858a:	add    rax,rcx
  42858d:	add    rsp,0x8
  428591:	pop    rbx
  428592:	pop    r12
  428594:	pop    r13
  428596:	pop    r14
  428598:	pop    r15
  42859a:	pop    rbp
  42859b:	ret    
  42859c:	nop    DWORD PTR [rax+0x0]
  4285a0:	push   rbp
  4285a1:	push   r14
  4285a3:	push   rbx
  4285a4:	mov    r14,rsi
  4285a7:	mov    rbx,rdi
  4285aa:	mov    al,BYTE PTR [rdi+0x5]
  4285ad:	and    al,0x5
  4285af:	cmp    al,0x4
  4285b1:	setne  bpl
  4285b5:	mov    rsi,QWORD PTR [rsi]
  4285b8:	test   rsi,rsi
  4285bb:	jne    4285ca <strcmp@plt+0x24e32>
  4285bd:	xor    eax,eax
  4285bf:	call   422c80 <strcmp@plt+0x1f4e8>
  4285c4:	mov    rsi,rax
  4285c7:	mov    QWORD PTR [r14],rax
  4285ca:	lea    rdi,[rbx+0x6]
  4285ce:	call   4235c0 <strcmp@plt+0x1fe28>
  4285d3:	test   eax,eax
  4285d5:	jle    428612 <strcmp@plt+0x24e7a>
  4285d7:	mov    BYTE PTR [r14+0x8],bpl
  4285db:	mov    cl,BYTE PTR [rbx+0x5]
  4285de:	shr    cl,0x2
  4285e1:	and    cl,0x1
  4285e4:	mov    BYTE PTR [r14+0x9],cl
  4285e8:	mov    cl,BYTE PTR [rbx+0x5]
  4285eb:	and    cl,0x1
  4285ee:	mov    BYTE PTR [r14+0xa],cl
  4285f2:	mov    cl,BYTE PTR [rbx]
  4285f4:	mov    BYTE PTR [r14+0xb],cl
  4285f8:	mov    cl,BYTE PTR [rbx+0x1]
  4285fb:	mov    BYTE PTR [r14+0xc],cl
  4285ff:	mov    cl,BYTE PTR [rbx+0x2]
  428602:	mov    BYTE PTR [r14+0xd],cl
  428606:	mov    cl,BYTE PTR [rbx+0x3]
  428609:	mov    BYTE PTR [r14+0xe],cl
  42860d:	add    eax,0x6
  428610:	jmp    428614 <strcmp@plt+0x24e7c>
  428612:	xor    eax,eax
  428614:	pop    rbx
  428615:	pop    r14
  428617:	pop    rbp
  428618:	ret    
  428619:	nop    DWORD PTR [rax+0x0]
  428620:	push   r14
  428622:	push   rbx
  428623:	push   rax
  428624:	mov    r14,rsi
  428627:	mov    rbx,rdi
  42862a:	mov    rdi,QWORD PTR [rdi]
  42862d:	mov    rsi,QWORD PTR [rsi]
  428630:	call   423670 <strcmp@plt+0x1fed8>
  428635:	mov    ecx,eax
  428637:	mov    eax,0x1
  42863c:	test   ecx,ecx
  42863e:	jne    428667 <strcmp@plt+0x24ecf>
  428640:	mov    cl,BYTE PTR [rbx+0xb]
  428643:	cmp    cl,BYTE PTR [r14+0xb]
  428647:	jne    428667 <strcmp@plt+0x24ecf>
  428649:	mov    cl,BYTE PTR [rbx+0xc]
  42864c:	cmp    cl,BYTE PTR [r14+0xc]
  428650:	jne    428667 <strcmp@plt+0x24ecf>
  428652:	mov    cl,BYTE PTR [rbx+0xd]
  428655:	cmp    cl,BYTE PTR [r14+0xd]
  428659:	jne    428667 <strcmp@plt+0x24ecf>
  42865b:	mov    cl,BYTE PTR [rbx+0xe]
  42865e:	xor    eax,eax
  428660:	cmp    cl,BYTE PTR [r14+0xe]
  428664:	setne  al
  428667:	add    rsp,0x8
  42866b:	pop    rbx
  42866c:	pop    r14
  42866e:	ret    
  42866f:	nop
  428670:	test   rdi,rdi
  428673:	je     42868a <strcmp@plt+0x24ef2>
  428675:	push   rbx
  428676:	mov    rbx,rdi
  428679:	mov    rdi,QWORD PTR [rdi]
  42867c:	call   422c90 <strcmp@plt+0x1f4f8>
  428681:	mov    rdi,rbx
  428684:	pop    rbx
  428685:	jmp    403790 <free@plt>
  42868a:	ret    
  42868b:	nop    DWORD PTR [rax+rax*1+0x0]
  428690:	push   rbp
  428691:	push   r15
  428693:	push   r14
  428695:	push   r13
  428697:	push   r12
  428699:	push   rbx
  42869a:	push   rax
  42869b:	mov    r14,QWORD PTR [rdi]
  42869e:	mov    bpl,BYTE PTR [rdi+0x8]
  4286a2:	mov    r15b,BYTE PTR [rdi+0x9]
  4286a6:	mov    r12b,BYTE PTR [rdi+0xa]
  4286aa:	mov    r13b,BYTE PTR [rdi+0xb]
  4286ae:	mov    al,BYTE PTR [rdi+0xc]
  4286b1:	mov    BYTE PTR [rsp+0x7],al
  4286b5:	mov    al,BYTE PTR [rdi+0xd]
  4286b8:	mov    BYTE PTR [rsp+0x6],al
  4286bc:	mov    al,BYTE PTR [rdi+0xe]
  4286bf:	mov    BYTE PTR [rsp+0x5],al
  4286c3:	mov    edi,0x10
  4286c8:	call   431d60 <strcmp@plt+0x2e5c8>
  4286cd:	mov    rbx,rax
  4286d0:	test   rax,rax
  4286d3:	je     428705 <strcmp@plt+0x24f6d>
  4286d5:	mov    rdi,r14
  4286d8:	call   423440 <strcmp@plt+0x1fca8>
  4286dd:	mov    QWORD PTR [rbx],rax
  4286e0:	mov    BYTE PTR [rbx+0x8],bpl
  4286e4:	mov    BYTE PTR [rbx+0x9],r15b
  4286e8:	mov    BYTE PTR [rbx+0xa],r12b
  4286ec:	mov    BYTE PTR [rbx+0xb],r13b
  4286f0:	mov    al,BYTE PTR [rsp+0x7]
  4286f4:	mov    BYTE PTR [rbx+0xc],al
  4286f7:	mov    al,BYTE PTR [rsp+0x6]
  4286fb:	mov    BYTE PTR [rbx+0xd],al
  4286fe:	mov    al,BYTE PTR [rsp+0x5]
  428702:	mov    BYTE PTR [rbx+0xe],al
  428705:	mov    rax,rbx
  428708:	add    rsp,0x8
  42870c:	pop    rbx
  42870d:	pop    r12
  42870f:	pop    r13
  428711:	pop    r14
  428713:	pop    r15
  428715:	pop    rbp
  428716:	ret    
  428717:	nop    WORD PTR [rax+rax*1+0x0]
  428720:	mov    rdi,QWORD PTR [rdi]
  428723:	mov    rsi,QWORD PTR [rsi]
  428726:	jmp    423670 <strcmp@plt+0x1fed8>
  42872b:	nop    DWORD PTR [rax+rax*1+0x0]
  428730:	push   rbx
  428731:	mov    DWORD PTR [rsi],0x0
  428737:	mov    DWORD PTR [rdx],0x0
  42873d:	test   rdi,rdi
  428740:	je     4287aa <strcmp@plt+0x25012>
  428742:	cmp    DWORD PTR [rdi+0x18],0x0
  428746:	je     4287aa <strcmp@plt+0x25012>
  428748:	mov    rax,QWORD PTR [rdi+0x8]
  42874c:	mov    rax,QWORD PTR [rax+0x10]
  428750:	mov    rdi,QWORD PTR [rax]
  428753:	mov    eax,DWORD PTR [rdi+0x18]
  428756:	mov    DWORD PTR [rsi],eax
  428758:	cmp    rax,0x3
  42875c:	ja     4287aa <strcmp@plt+0x25012>
  42875e:	mov    rbx,rdx
  428761:	lea    rcx,[rip+0x22028]        # 44a790 <strcmp@plt+0x46ff8>
  428768:	movsxd rax,DWORD PTR [rcx+rax*4]
  42876c:	add    rax,rcx
  42876f:	jmp    rax
  428771:	mov    DWORD PTR [rbx],0x0
  428777:	pop    rbx
  428778:	ret    
  428779:	call   422ef0 <strcmp@plt+0x1f758>
  42877e:	movzx  eax,ax
  428781:	jmp    4287a8 <strcmp@plt+0x25010>
  428783:	lea    rax,[rip+0x3c636]        # 464dc0 <strcmp@plt+0x61628>
  42878a:	cmp    DWORD PTR [rax],0x2
  42878d:	jl     4287aa <strcmp@plt+0x25012>
  42878f:	lea    rsi,[rip+0x2202d]        # 44a7c3 <strcmp@plt+0x4702b>
  428796:	mov    edi,0x6
  42879b:	xor    eax,eax
  42879d:	pop    rbx
  42879e:	jmp    42e520 <strcmp@plt+0x2ad88>
  4287a3:	call   423020 <strcmp@plt+0x1f888>
  4287a8:	mov    DWORD PTR [rbx],eax
  4287aa:	pop    rbx
  4287ab:	ret    
  4287ac:	nop    DWORD PTR [rax+0x0]
  4287b0:	push   r15
  4287b2:	push   r14
  4287b4:	push   r12
  4287b6:	push   rbx
  4287b7:	push   rax
  4287b8:	test   rdi,rdi
  4287bb:	je     4287fd <strcmp@plt+0x25065>
  4287bd:	mov    r14,rsi
  4287c0:	xor    r12d,r12d
  4287c3:	test   rsi,rsi
  4287c6:	je     428800 <strcmp@plt+0x25068>
  4287c8:	mov    r15,rdi
  4287cb:	cmp    DWORD PTR [rdi+0x18],0x0
  4287cf:	je     428800 <strcmp@plt+0x25068>
  4287d1:	mov    rbx,QWORD PTR [r15+0x8]
  4287d5:	cmp    rbx,r15
  4287d8:	je     4287fd <strcmp@plt+0x25065>
  4287da:	nop    WORD PTR [rax+rax*1+0x0]
  4287e0:	mov    r12,QWORD PTR [rbx+0x10]
  4287e4:	mov    rdi,QWORD PTR [r12]
  4287e8:	mov    rsi,r14
  4287eb:	call   423670 <strcmp@plt+0x1fed8>
  4287f0:	test   eax,eax
  4287f2:	je     428800 <strcmp@plt+0x25068>
  4287f4:	mov    rbx,QWORD PTR [rbx+0x8]
  4287f8:	cmp    rbx,r15
  4287fb:	jne    4287e0 <strcmp@plt+0x25048>
  4287fd:	xor    r12d,r12d
  428800:	mov    rax,r12
  428803:	add    rsp,0x8
  428807:	pop    rbx
  428808:	pop    r12
  42880a:	pop    r14
  42880c:	pop    r15
  42880e:	ret    
  42880f:	nop
  428810:	push   r15
  428812:	push   r14
  428814:	push   r12
  428816:	push   rbx
  428817:	push   rax
  428818:	test   rdi,rdi
  42881b:	je     42885d <strcmp@plt+0x250c5>
  42881d:	mov    r15,rsi
  428820:	xor    r12d,r12d
  428823:	test   rsi,rsi
  428826:	je     428860 <strcmp@plt+0x250c8>
  428828:	mov    r14,rdi
  42882b:	cmp    DWORD PTR [rdi+0x18],0x0
  42882f:	je     428860 <strcmp@plt+0x250c8>
  428831:	mov    rbx,QWORD PTR [r14+0x8]
  428835:	cmp    rbx,r14
  428838:	je     42885d <strcmp@plt+0x250c5>
  42883a:	nop    WORD PTR [rax+rax*1+0x0]
  428840:	mov    r12,QWORD PTR [rbx+0x10]
  428844:	mov    rdi,QWORD PTR [r12]
  428848:	mov    rsi,r15
  42884b:	call   423670 <strcmp@plt+0x1fed8>
  428850:	test   eax,eax
  428852:	je     42886f <strcmp@plt+0x250d7>
  428854:	mov    rbx,QWORD PTR [rbx+0x8]
  428858:	cmp    rbx,r14
  42885b:	jne    428840 <strcmp@plt+0x250a8>
  42885d:	xor    r12d,r12d
  428860:	mov    rax,r12
  428863:	add    rsp,0x8
  428867:	pop    rbx
  428868:	pop    r12
  42886a:	pop    r14
  42886c:	pop    r15
  42886e:	ret    
  42886f:	mov    rdi,rbx
  428872:	mov    rsi,r14
  428875:	call   42bd60 <strcmp@plt+0x285c8>
  42887a:	jmp    428860 <strcmp@plt+0x250c8>
  42887c:	nop    DWORD PTR [rax+0x0]
  428880:	push   rax
  428881:	xor    eax,eax
  428883:	test   rdi,rdi
  428886:	je     4288bf <strcmp@plt+0x25127>
  428888:	test   rsi,rsi
  42888b:	je     4288bf <strcmp@plt+0x25127>
  42888d:	mov    rcx,rdi
  428890:	cmp    DWORD PTR [rdi+0x18],0x0
  428894:	je     4288bf <strcmp@plt+0x25127>
  428896:	mov    rdi,QWORD PTR [rcx+0x8]
  42889a:	mov    eax,0xfffffffa
  42889f:	cmp    rdi,rcx
  4288a2:	je     4288bf <strcmp@plt+0x25127>
  4288a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4288ae:	xchg   ax,ax
  4288b0:	cmp    QWORD PTR [rdi+0x10],rsi
  4288b4:	je     4288c1 <strcmp@plt+0x25129>
  4288b6:	mov    rdi,QWORD PTR [rdi+0x8]
  4288ba:	cmp    rdi,rcx
  4288bd:	jne    4288b0 <strcmp@plt+0x25118>
  4288bf:	pop    rcx
  4288c0:	ret    
  4288c1:	mov    rsi,rcx
  4288c4:	call   42bd60 <strcmp@plt+0x285c8>
  4288c9:	mov    eax,0x1
  4288ce:	pop    rcx
  4288cf:	ret    
  4288d0:	push   rbp
  4288d1:	push   r15
  4288d3:	push   r14
  4288d5:	push   r13
  4288d7:	push   r12
  4288d9:	push   rbx
  4288da:	sub    rsp,0x18
  4288de:	test   rdi,rdi
  4288e1:	je     4289d5 <strcmp@plt+0x2523d>
  4288e7:	mov    rbp,rdi
  4288ea:	cmp    DWORD PTR [rdi+0x18],0x0
  4288ee:	je     4289d5 <strcmp@plt+0x2523d>
  4288f4:	lea    rdi,[rip+0xfffffffffffffe25]        # 428720 <strcmp@plt+0x24f88>
  4288fb:	lea    rsi,[rip+0xfffffffffffffd6e]        # 428670 <strcmp@plt+0x24ed8>
  428902:	call   42b940 <strcmp@plt+0x281a8>
  428907:	mov    rbx,rax
  42890a:	mov    r13,QWORD PTR [rbp+0x8]
  42890e:	cmp    r13,rbp
  428911:	je     4289d7 <strcmp@plt+0x2523f>
  428917:	mov    QWORD PTR [rsp+0x10],rbx
  42891c:	mov    QWORD PTR [rsp+0x8],rbp
  428921:	jmp    428952 <strcmp@plt+0x251ba>
  428923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42892d:	nop    DWORD PTR [rax]
  428930:	mov    rdi,rbx
  428933:	mov    rbx,QWORD PTR [rsp+0x10]
  428938:	mov    rsi,rbx
  42893b:	call   42baa0 <strcmp@plt+0x28308>
  428940:	mov    r13,QWORD PTR [r13+0x8]
  428944:	mov    rbp,QWORD PTR [rsp+0x8]
  428949:	cmp    r13,rbp
  42894c:	je     4289d7 <strcmp@plt+0x2523f>
  428952:	mov    rax,QWORD PTR [r13+0x10]
  428956:	mov    r12,QWORD PTR [rax]
  428959:	movzx  ebp,BYTE PTR [rax+0x8]
  42895d:	movzx  r14d,BYTE PTR [rax+0x9]
  428962:	movzx  r15d,BYTE PTR [rax+0xa]
  428967:	movzx  ecx,BYTE PTR [rax+0xb]
  42896b:	mov    BYTE PTR [rsp+0x7],cl
  42896f:	movzx  ecx,BYTE PTR [rax+0xc]
  428973:	mov    BYTE PTR [rsp+0x6],cl
  428977:	movzx  ecx,BYTE PTR [rax+0xd]
  42897b:	mov    BYTE PTR [rsp+0x5],cl
  42897f:	movzx  eax,BYTE PTR [rax+0xe]
  428983:	mov    BYTE PTR [rsp+0x4],al
  428987:	mov    edi,0x10
  42898c:	call   431d60 <strcmp@plt+0x2e5c8>
  428991:	mov    rbx,rax
  428994:	test   rax,rax
  428997:	je     428930 <strcmp@plt+0x25198>
  428999:	mov    rdi,r12
  42899c:	call   423440 <strcmp@plt+0x1fca8>
  4289a1:	mov    QWORD PTR [rbx],rax
  4289a4:	mov    BYTE PTR [rbx+0x8],bpl
  4289a8:	mov    BYTE PTR [rbx+0x9],r14b
  4289ac:	mov    BYTE PTR [rbx+0xa],r15b
  4289b0:	movzx  eax,BYTE PTR [rsp+0x7]
  4289b5:	mov    BYTE PTR [rbx+0xb],al
  4289b8:	movzx  eax,BYTE PTR [rsp+0x6]
  4289bd:	mov    BYTE PTR [rbx+0xc],al
  4289c0:	movzx  eax,BYTE PTR [rsp+0x5]
  4289c5:	mov    BYTE PTR [rbx+0xd],al
  4289c8:	movzx  eax,BYTE PTR [rsp+0x4]
  4289cd:	mov    BYTE PTR [rbx+0xe],al
  4289d0:	jmp    428930 <strcmp@plt+0x25198>
  4289d5:	xor    ebx,ebx
  4289d7:	mov    rax,rbx
  4289da:	add    rsp,0x18
  4289de:	pop    rbx
  4289df:	pop    r12
  4289e1:	pop    r13
  4289e3:	pop    r14
  4289e5:	pop    r15
  4289e7:	pop    rbp
  4289e8:	ret    
  4289e9:	nop    DWORD PTR [rax+0x0]
  4289f0:	push   rax
  4289f1:	test   rdi,rdi
  4289f4:	je     428a42 <strcmp@plt+0x252aa>
  4289f6:	test   rsi,rsi
  4289f9:	je     428a42 <strcmp@plt+0x252aa>
  4289fb:	cmp    DWORD PTR [rdi+0x18],0x0
  4289ff:	je     428a23 <strcmp@plt+0x2528b>
  428a01:	cmp    DWORD PTR [rsi+0x18],0x0
  428a05:	je     428a23 <strcmp@plt+0x2528b>
  428a07:	mov    rax,QWORD PTR [rdi+0x8]
  428a0b:	mov    rax,QWORD PTR [rax+0x10]
  428a0f:	mov    rcx,QWORD PTR [rsi+0x8]
  428a13:	mov    rcx,QWORD PTR [rcx+0x10]
  428a17:	mov    rdi,QWORD PTR [rax]
  428a1a:	mov    rsi,QWORD PTR [rcx]
  428a1d:	pop    rax
  428a1e:	jmp    423790 <strcmp@plt+0x1fff8>
  428a23:	lea    rax,[rip+0x3c396]        # 464dc0 <strcmp@plt+0x61628>
  428a2a:	cmp    DWORD PTR [rax],0x2
  428a2d:	jl     428a42 <strcmp@plt+0x252aa>
  428a2f:	lea    rsi,[rip+0x21dce]        # 44a804 <strcmp@plt+0x4706c>
  428a36:	mov    edi,0x6
  428a3b:	xor    eax,eax
  428a3d:	call   42e520 <strcmp@plt+0x2ad88>
  428a42:	mov    eax,0xfffffffe
  428a47:	pop    rcx
  428a48:	ret    
  428a49:	nop    DWORD PTR [rax+0x0]
  428a50:	push   rax
  428a51:	test   rdi,rdi
  428a54:	je     428aa2 <strcmp@plt+0x2530a>
  428a56:	test   rsi,rsi
  428a59:	je     428aa2 <strcmp@plt+0x2530a>
  428a5b:	cmp    DWORD PTR [rdi+0x18],0x0
  428a5f:	je     428a83 <strcmp@plt+0x252eb>
  428a61:	cmp    DWORD PTR [rsi+0x18],0x0
  428a65:	je     428a83 <strcmp@plt+0x252eb>
  428a67:	mov    rax,QWORD PTR [rdi+0x8]
  428a6b:	mov    rax,QWORD PTR [rax+0x10]
  428a6f:	mov    rcx,QWORD PTR [rsi+0x8]
  428a73:	mov    rcx,QWORD PTR [rcx+0x10]
  428a77:	mov    rdi,QWORD PTR [rax]
  428a7a:	mov    rsi,QWORD PTR [rcx]
  428a7d:	pop    rax
  428a7e:	jmp    423790 <strcmp@plt+0x1fff8>
  428a83:	lea    rax,[rip+0x3c336]        # 464dc0 <strcmp@plt+0x61628>
  428a8a:	cmp    DWORD PTR [rax],0x2
  428a8d:	jl     428aa2 <strcmp@plt+0x2530a>
  428a8f:	lea    rsi,[rip+0x21d6e]        # 44a804 <strcmp@plt+0x4706c>
  428a96:	mov    edi,0x6
  428a9b:	xor    eax,eax
  428a9d:	call   42e520 <strcmp@plt+0x2ad88>
  428aa2:	mov    eax,0xfffffffe
  428aa7:	pop    rcx
  428aa8:	ret    
  428aa9:	nop    DWORD PTR [rax+0x0]
  428ab0:	push   r14
  428ab2:	push   rbx
  428ab3:	push   rax
  428ab4:	mov    r14,rsi
  428ab7:	mov    rbx,rdi
  428aba:	mov    rdi,QWORD PTR [rdi]
  428abd:	test   rdi,rdi
  428ac0:	jne    428acf <strcmp@plt+0x25337>
  428ac2:	xor    eax,eax
  428ac4:	call   422c80 <strcmp@plt+0x1f4e8>
  428ac9:	mov    rdi,rax
  428acc:	mov    QWORD PTR [rbx],rax
  428acf:	mov    rsi,r14
  428ad2:	add    rsp,0x8
  428ad6:	pop    rbx
  428ad7:	pop    r14
  428ad9:	jmp    423260 <strcmp@plt+0x1fac8>
  428ade:	xchg   ax,ax
  428ae0:	push   rbx
  428ae1:	mov    edi,0x40
  428ae6:	call   431d60 <strcmp@plt+0x2e5c8>
  428aeb:	test   rax,rax
  428aee:	je     428b17 <strcmp@plt+0x2537f>
  428af0:	mov    rbx,rax
  428af3:	lea    rdi,[rip+0xffffffffffffff56]        # 428a50 <strcmp@plt+0x252b8>
  428afa:	lea    rsi,[rip+0x34ef]        # 42bff0 <strcmp@plt+0x28858>
  428b01:	call   42b940 <strcmp@plt+0x281a8>
  428b06:	mov    QWORD PTR [rbx+0x28],rax
  428b0a:	test   rax,rax
  428b0d:	jne    428b19 <strcmp@plt+0x25381>
  428b0f:	mov    rdi,rbx
  428b12:	call   403790 <free@plt>
  428b17:	xor    ebx,ebx
  428b19:	mov    rax,rbx
  428b1c:	pop    rbx
  428b1d:	ret    
  428b1e:	xchg   ax,ax
  428b20:	push   r14
  428b22:	push   rbx
  428b23:	push   rax
  428b24:	mov    r14,rdi
  428b27:	call   422dd0 <strcmp@plt+0x1f638>
  428b2c:	test   rax,rax
  428b2f:	jne    428b46 <strcmp@plt+0x253ae>
  428b31:	mov    rdi,r14
  428b34:	call   422fd0 <strcmp@plt+0x1f838>
  428b39:	test   rax,rax
  428b3c:	je     428ba0 <strcmp@plt+0x25408>
  428b3e:	mov    rdi,rax
  428b41:	call   422ea0 <strcmp@plt+0x1f708>
  428b46:	mov    edi,0x40
  428b4b:	call   431d60 <strcmp@plt+0x2e5c8>
  428b50:	test   rax,rax
  428b53:	je     428b89 <strcmp@plt+0x253f1>
  428b55:	mov    rbx,rax
  428b58:	lea    rdi,[rip+0xfffffffffffffef1]        # 428a50 <strcmp@plt+0x252b8>
  428b5f:	lea    rsi,[rip+0x348a]        # 42bff0 <strcmp@plt+0x28858>
  428b66:	call   42b940 <strcmp@plt+0x281a8>
  428b6b:	mov    QWORD PTR [rbx+0x28],rax
  428b6f:	test   rax,rax
  428b72:	je     428b81 <strcmp@plt+0x253e9>
  428b74:	mov    rdi,rbx
  428b77:	mov    rsi,r14
  428b7a:	call   423260 <strcmp@plt+0x1fac8>
  428b7f:	jmp    428bc0 <strcmp@plt+0x25428>
  428b81:	mov    rdi,rbx
  428b84:	call   403790 <free@plt>
  428b89:	lea    rsi,[rip+0x21cbc]        # 44a84c <strcmp@plt+0x470b4>
  428b90:	xor    ebx,ebx
  428b92:	mov    edi,0x3
  428b97:	xor    eax,eax
  428b99:	call   42e520 <strcmp@plt+0x2ad88>
  428b9e:	jmp    428bc0 <strcmp@plt+0x25428>
  428ba0:	mov    rdi,r14
  428ba3:	call   422e20 <strcmp@plt+0x1f688>
  428ba8:	lea    rsi,[rip+0x220d6]        # 44ac85 <strcmp@plt+0x474ed>
  428baf:	xor    ebx,ebx
  428bb1:	mov    edi,0x3
  428bb6:	mov    rdx,rax
  428bb9:	xor    eax,eax
  428bbb:	call   42e520 <strcmp@plt+0x2ad88>
  428bc0:	mov    rax,rbx
  428bc3:	add    rsp,0x8
  428bc7:	pop    rbx
  428bc8:	pop    r14
  428bca:	ret    
  428bcb:	nop    DWORD PTR [rax+rax*1+0x0]
  428bd0:	test   rdi,rdi
  428bd3:	je     428bf3 <strcmp@plt+0x2545b>
  428bd5:	push   rbx
  428bd6:	mov    rbx,rdi
  428bd9:	mov    rdi,QWORD PTR [rdi+0x28]
  428bdd:	call   42bff0 <strcmp@plt+0x28858>
  428be2:	mov    rdi,rbx
  428be5:	call   423930 <strcmp@plt+0x20198>
  428bea:	mov    rdi,rbx
  428bed:	pop    rbx
  428bee:	jmp    403790 <free@plt>
  428bf3:	ret    
  428bf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bfe:	xchg   ax,ax
  428c00:	push   rbp
  428c01:	push   r15
  428c03:	push   r14
  428c05:	push   r13
  428c07:	push   r12
  428c09:	push   rbx
  428c0a:	push   rax
  428c0b:	mov    rbx,rsi
  428c0e:	mov    r14,rdi
  428c11:	call   423670 <strcmp@plt+0x1fed8>
  428c16:	test   eax,eax
  428c18:	jne    428cb4 <strcmp@plt+0x2551c>
  428c1e:	movzx  eax,WORD PTR [r14+0x20]
  428c23:	cmp    ax,WORD PTR [rbx+0x20]
  428c27:	jne    428cb4 <strcmp@plt+0x2551c>
  428c2d:	mov    rcx,QWORD PTR [r14+0x28]
  428c31:	mov    esi,DWORD PTR [rcx+0x18]
  428c34:	mov    rdx,QWORD PTR [rbx+0x28]
  428c38:	cmp    esi,DWORD PTR [rdx+0x18]
  428c3b:	jne    428cb4 <strcmp@plt+0x2551c>
  428c3d:	xor    eax,eax
  428c3f:	test   esi,esi
  428c41:	je     428c49 <strcmp@plt+0x254b1>
  428c43:	mov    r15,QWORD PTR [rdx+0x8]
  428c47:	jmp    428c4c <strcmp@plt+0x254b4>
  428c49:	xor    r15d,r15d
  428c4c:	mov    r12,QWORD PTR [rcx+0x8]
  428c50:	cmp    r12,rcx
  428c53:	jne    428c67 <strcmp@plt+0x254cf>
  428c55:	jmp    428cb9 <strcmp@plt+0x25521>
  428c57:	mov    r15,QWORD PTR [r15+0x8]
  428c5b:	mov    r12,QWORD PTR [r12+0x8]
  428c60:	xor    eax,eax
  428c62:	cmp    r12,rcx
  428c65:	je     428cb9 <strcmp@plt+0x25521>
  428c67:	mov    r13,QWORD PTR [r12+0x10]
  428c6c:	mov    rax,QWORD PTR [r15+0x10]
  428c70:	mov    edx,DWORD PTR [r13+0x18]
  428c74:	cmp    edx,DWORD PTR [rax+0x18]
  428c77:	jne    428cb4 <strcmp@plt+0x2551c>
  428c79:	test   edx,edx
  428c7b:	je     428c83 <strcmp@plt+0x254eb>
  428c7d:	mov    rbx,QWORD PTR [rax+0x8]
  428c81:	jmp    428c85 <strcmp@plt+0x254ed>
  428c83:	xor    ebx,ebx
  428c85:	mov    rbp,QWORD PTR [r13+0x8]
  428c89:	cmp    rbp,r13
  428c8c:	je     428c57 <strcmp@plt+0x254bf>
  428c8e:	xchg   ax,ax
  428c90:	mov    rdi,QWORD PTR [rbp+0x10]
  428c94:	mov    rsi,QWORD PTR [rbx+0x10]
  428c98:	call   428620 <strcmp@plt+0x24e88>
  428c9d:	test   eax,eax
  428c9f:	jne    428cb4 <strcmp@plt+0x2551c>
  428ca1:	mov    rbx,QWORD PTR [rbx+0x8]
  428ca5:	mov    rbp,QWORD PTR [rbp+0x8]
  428ca9:	cmp    rbp,r13
  428cac:	jne    428c90 <strcmp@plt+0x254f8>
  428cae:	mov    rcx,QWORD PTR [r14+0x28]
  428cb2:	jmp    428c57 <strcmp@plt+0x254bf>
  428cb4:	mov    eax,0x1
  428cb9:	add    rsp,0x8
  428cbd:	pop    rbx
  428cbe:	pop    r12
  428cc0:	pop    r13
  428cc2:	pop    r14
  428cc4:	pop    r15
  428cc6:	pop    rbp
  428cc7:	ret    
  428cc8:	nop    DWORD PTR [rax+rax*1+0x0]
  428cd0:	push   r14
  428cd2:	push   rbx
  428cd3:	push   rax
  428cd4:	mov    r14,rdi
  428cd7:	mov    edi,0x40
  428cdc:	call   431d60 <strcmp@plt+0x2e5c8>
  428ce1:	test   rax,rax
  428ce4:	je     428d0d <strcmp@plt+0x25575>
  428ce6:	mov    rbx,rax
  428ce9:	lea    rdi,[rip+0xfffffffffffffd60]        # 428a50 <strcmp@plt+0x252b8>
  428cf0:	lea    rsi,[rip+0x32f9]        # 42bff0 <strcmp@plt+0x28858>
  428cf7:	call   42b940 <strcmp@plt+0x281a8>
  428cfc:	mov    QWORD PTR [rbx+0x28],rax
  428d00:	test   rax,rax
  428d03:	jne    428d0f <strcmp@plt+0x25577>
  428d05:	mov    rdi,rbx
  428d08:	call   403790 <free@plt>
  428d0d:	xor    ebx,ebx
  428d0f:	mov    rdi,rbx
  428d12:	mov    rsi,r14
  428d15:	call   423260 <strcmp@plt+0x1fac8>
  428d1a:	mov    al,BYTE PTR [r14+0x34]
  428d1e:	mov    BYTE PTR [rbx+0x34],al
  428d21:	mov    al,BYTE PTR [r14+0x35]
  428d25:	mov    BYTE PTR [rbx+0x35],al
  428d28:	mov    eax,DWORD PTR [r14+0x30]
  428d2c:	mov    DWORD PTR [rbx+0x30],eax
  428d2f:	mov    WORD PTR [rbx+0x20],0x0
  428d35:	mov    rax,rbx
  428d38:	add    rsp,0x8
  428d3c:	pop    rbx
  428d3d:	pop    r14
  428d3f:	ret    
  428d40:	push   rbp
  428d41:	push   r15
  428d43:	push   r14
  428d45:	push   r13
  428d47:	push   r12
  428d49:	push   rbx
  428d4a:	sub    rsp,0x18
  428d4e:	mov    rbx,rdi
  428d51:	mov    BYTE PTR [rip+0x45498],0x0        # 46e1f0 <strcmp@plt+0x6aa58>
  428d58:	lea    r12,[rip+0x45491]        # 46e1f0 <strcmp@plt+0x6aa58>
  428d5f:	call   422e20 <strcmp@plt+0x1f688>
  428d64:	mov    r13,rax
  428d67:	mov    r14d,DWORD PTR [rbx+0x30]
  428d6b:	movzx  r15d,WORD PTR [rbx+0x20]
  428d70:	movzx  edi,BYTE PTR [rbx+0x34]
  428d74:	call   42ab30 <strcmp@plt+0x27398>
  428d79:	mov    r10,rax
  428d7c:	movzx  ebp,BYTE PTR [rbx+0x35]
  428d80:	lea    rdx,[rip+0x21afd]        # 44a884 <strcmp@plt+0x470ec>
  428d87:	mov    esi,0x3e8
  428d8c:	mov    rdi,r12
  428d8f:	mov    rcx,r13
  428d92:	mov    r8d,r14d
  428d95:	mov    r9d,r15d
  428d98:	mov    eax,0x0
  428d9d:	push   rbp
  428d9e:	push   r10
  428da0:	call   403630 <snprintf@plt>
  428da5:	add    rsp,0x10
  428da9:	mov    QWORD PTR [rsp],rbx
  428dad:	cmp    WORD PTR [rbx+0x20],0x0
  428db2:	je     428ebb <strcmp@plt+0x25723>
  428db8:	mov    rax,QWORD PTR [rsp]
  428dbc:	mov    rax,QWORD PTR [rax+0x28]
  428dc0:	mov    rdx,QWORD PTR [rax+0x8]
  428dc4:	cmp    rdx,rax
  428dc7:	je     428ebb <strcmp@plt+0x25723>
  428dcd:	lea    r13,[rip+0x21ae7]        # 44a8bb <strcmp@plt+0x47123>
  428dd4:	jmp    428e00 <strcmp@plt+0x25668>
  428dd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428de0:	mov    rax,QWORD PTR [rsp]
  428de4:	mov    rax,QWORD PTR [rax+0x28]
  428de8:	mov    r12,r14
  428deb:	mov    rdx,QWORD PTR [rsp+0x10]
  428df0:	mov    r13,rbx
  428df3:	mov    rdx,QWORD PTR [rdx+0x8]
  428df7:	cmp    rdx,rax
  428dfa:	je     428ebb <strcmp@plt+0x25723>
  428e00:	mov    rdi,QWORD PTR [rdx+0x10]
  428e04:	cmp    DWORD PTR [rdi+0x18],0x0
  428e08:	je     428df3 <strcmp@plt+0x2565b>
  428e0a:	mov    rbp,QWORD PTR [rdi+0x8]
  428e0e:	mov    rbx,QWORD PTR [rbp+0x10]
  428e12:	mov    rcx,QWORD PTR [rbx]
  428e15:	cmp    DWORD PTR [rcx+0x18],0x0
  428e19:	je     428df3 <strcmp@plt+0x2565b>
  428e1b:	cmp    rbp,rdi
  428e1e:	je     428df3 <strcmp@plt+0x2565b>
  428e20:	mov    QWORD PTR [rsp+0x10],rdx
  428e25:	mov    QWORD PTR [rsp+0x8],rdi
  428e2a:	mov    rdi,r12
  428e2d:	call   4031e0 <strlen@plt>
  428e32:	lea    r15,[r12+rax*1]
  428e36:	mov    r14,r12
  428e39:	mov    r12d,0x3e8
  428e3f:	sub    r12,rax
  428e42:	mov    rdi,rbx
  428e45:	mov    rbx,r13
  428e48:	call   4283f0 <strcmp@plt+0x24c58>
  428e4d:	mov    rdi,r15
  428e50:	mov    rsi,r12
  428e53:	mov    rdx,r13
  428e56:	mov    rcx,rax
  428e59:	xor    eax,eax
  428e5b:	call   403630 <snprintf@plt>
  428e60:	mov    r12,QWORD PTR [rbp+0x8]
  428e64:	cmp    r12,QWORD PTR [rsp+0x8]
  428e69:	je     428de0 <strcmp@plt+0x25648>
  428e6f:	nop
  428e70:	mov    r13,QWORD PTR [r12+0x10]
  428e75:	mov    rdi,r14
  428e78:	call   4031e0 <strlen@plt>
  428e7d:	lea    rbp,[r14+rax*1]
  428e81:	mov    r15,rbx
  428e84:	mov    ebx,0x3e8
  428e89:	sub    rbx,rax
  428e8c:	mov    rdi,r13
  428e8f:	call   4283f0 <strcmp@plt+0x24c58>
  428e94:	mov    rdi,rbp
  428e97:	mov    rsi,rbx
  428e9a:	mov    rbx,r15
  428e9d:	mov    rdx,r15
  428ea0:	mov    rcx,rax
  428ea3:	xor    eax,eax
  428ea5:	call   403630 <snprintf@plt>
  428eaa:	mov    r12,QWORD PTR [r12+0x8]
  428eaf:	cmp    r12,QWORD PTR [rsp+0x8]
  428eb4:	jne    428e70 <strcmp@plt+0x256d8>
  428eb6:	jmp    428de0 <strcmp@plt+0x25648>
  428ebb:	lea    rax,[rip+0x4532e]        # 46e1f0 <strcmp@plt+0x6aa58>
  428ec2:	add    rsp,0x18
  428ec6:	pop    rbx
  428ec7:	pop    r12
  428ec9:	pop    r13
  428ecb:	pop    r14
  428ecd:	pop    r15
  428ecf:	pop    rbp
  428ed0:	ret    
  428ed1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428edb:	nop    DWORD PTR [rax+rax*1+0x0]
  428ee0:	push   rbp
  428ee1:	push   r15
  428ee3:	push   r14
  428ee5:	push   r12
  428ee7:	push   rbx
  428ee8:	mov    r15,rsi
  428eeb:	mov    r14,rdi
  428eee:	mov    r12,QWORD PTR [rsi]
  428ef1:	mov    ebx,DWORD PTR [r12+0x18]
  428ef6:	mov    rdi,r12
  428ef9:	call   423980 <strcmp@plt+0x201e8>
  428efe:	mov    rdi,r14
  428f01:	mov    esi,ebx
  428f03:	mov    edx,eax
  428f05:	call   429250 <strcmp@plt+0x25ab8>
  428f0a:	test   rax,rax
  428f0d:	je     428fb8 <strcmp@plt+0x25820>
  428f13:	mov    rbx,rax
  428f16:	mov    rdi,r15
  428f19:	mov    rsi,rax
  428f1c:	call   42bc20 <strcmp@plt+0x28488>
  428f21:	cmp    al,0x1
  428f23:	jne    428fe7 <strcmp@plt+0x2584f>
  428f29:	lea    rax,[rip+0x3be90]        # 464dc0 <strcmp@plt+0x61628>
  428f30:	cmp    DWORD PTR [rax],0x2
  428f33:	jl     428f61 <strcmp@plt+0x257c9>
  428f35:	mov    rdi,QWORD PTR [r15]
  428f38:	call   422e20 <strcmp@plt+0x1f688>
  428f3d:	mov    rbp,rax
  428f40:	mov    rdi,r14
  428f43:	call   422e20 <strcmp@plt+0x1f688>
  428f48:	lea    rsi,[rip+0x21978]        # 44a8c7 <strcmp@plt+0x4712f>
  428f4f:	mov    edi,0x6
  428f54:	mov    rdx,rbp
  428f57:	mov    rcx,rax
  428f5a:	xor    eax,eax
  428f5c:	call   42e520 <strcmp@plt+0x2ad88>
  428f61:	mov    rbp,QWORD PTR [r15]
  428f64:	mov    r12d,DWORD PTR [rbp+0x18]
  428f68:	mov    rdi,rbp
  428f6b:	call   423980 <strcmp@plt+0x201e8>
  428f70:	mov    rdi,r14
  428f73:	mov    esi,r12d
  428f76:	mov    edx,eax
  428f78:	call   429250 <strcmp@plt+0x25ab8>
  428f7d:	mov    rdi,rax
  428f80:	mov    rsi,rbp
  428f83:	call   4287b0 <strcmp@plt+0x25018>
  428f88:	mov    cl,BYTE PTR [rax+0xb]
  428f8b:	mov    ebp,0xfffffffb
  428f90:	cmp    cl,BYTE PTR [r15+0xb]
  428f94:	jbe    429057 <strcmp@plt+0x258bf>
  428f9a:	mov    rdi,rax
  428f9d:	mov    rsi,rbx
  428fa0:	call   42bf10 <strcmp@plt+0x28778>
  428fa5:	mov    rdi,r15
  428fa8:	mov    rsi,rbx
  428fab:	pop    rbx
  428fac:	pop    r12
  428fae:	pop    r14
  428fb0:	pop    r15
  428fb2:	pop    rbp
  428fb3:	jmp    42baa0 <strcmp@plt+0x28308>
  428fb8:	lea    rdi,[rip+0xfffffffffffff761]        # 428720 <strcmp@plt+0x24f88>
  428fbf:	lea    rsi,[rip+0xfffffffffffff6aa]        # 428670 <strcmp@plt+0x24ed8>
  428fc6:	call   42b940 <strcmp@plt+0x281a8>
  428fcb:	mov    rbx,rax
  428fce:	mov    rdi,r15
  428fd1:	mov    rsi,rax
  428fd4:	call   42baa0 <strcmp@plt+0x28308>
  428fd9:	cmp    eax,0x1
  428fdc:	jne    429043 <strcmp@plt+0x258ab>
  428fde:	mov    rsi,QWORD PTR [r14+0x28]
  428fe2:	mov    rdi,rbx
  428fe5:	jmp    428fed <strcmp@plt+0x25855>
  428fe7:	mov    rdi,r15
  428fea:	mov    rsi,rbx
  428fed:	call   42baa0 <strcmp@plt+0x28308>
  428ff2:	cmp    eax,0x1
  428ff5:	jne    429043 <strcmp@plt+0x258ab>
  428ff7:	lea    rax,[rip+0x3bdc2]        # 464dc0 <strcmp@plt+0x61628>
  428ffe:	cmp    DWORD PTR [rax],0x2
  429001:	jl     42902f <strcmp@plt+0x25897>
  429003:	mov    rdi,r15
  429006:	call   4283f0 <strcmp@plt+0x24c58>
  42900b:	mov    rbx,rax
  42900e:	mov    rdi,r14
  429011:	call   422e20 <strcmp@plt+0x1f688>
  429016:	lea    rsi,[rip+0x21913]        # 44a930 <strcmp@plt+0x47198>
  42901d:	mov    edi,0x6
  429022:	mov    rdx,rbx
  429025:	mov    rcx,rax
  429028:	xor    eax,eax
  42902a:	call   42e520 <strcmp@plt+0x2ad88>
  42902f:	mov    ebp,0x1
  429034:	cmp    DWORD PTR [r12+0x18],0x0
  42903a:	je     429057 <strcmp@plt+0x258bf>
  42903c:	inc    WORD PTR [r14+0x20]
  429041:	jmp    429057 <strcmp@plt+0x258bf>
  429043:	xor    ebp,ebp
  429045:	cmp    DWORD PTR [rbx+0x18],0x0
  429049:	jne    429057 <strcmp@plt+0x258bf>
  42904b:	mov    rsi,QWORD PTR [r14+0x28]
  42904f:	mov    rdi,rbx
  429052:	call   42bf10 <strcmp@plt+0x28778>
  429057:	mov    eax,ebp
  429059:	pop    rbx
  42905a:	pop    r12
  42905c:	pop    r14
  42905e:	pop    r15
  429060:	pop    rbp
  429061:	ret    
  429062:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42906c:	nop    DWORD PTR [rax+0x0]
  429070:	push   rbp
  429071:	push   rbx
  429072:	push   rax
  429073:	mov    rbx,rdi
  429076:	mov    ebp,DWORD PTR [rsi+0x18]
  429079:	mov    rdi,rsi
  42907c:	call   423980 <strcmp@plt+0x201e8>
  429081:	mov    rdi,rbx
  429084:	mov    esi,ebp
  429086:	mov    edx,eax
  429088:	add    rsp,0x8
  42908c:	pop    rbx
  42908d:	pop    rbp
  42908e:	jmp    429250 <strcmp@plt+0x25ab8>
  429093:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42909d:	nop    DWORD PTR [rax]
  4290a0:	push   rbp
  4290a1:	push   r14
  4290a3:	push   rbx
  4290a4:	mov    rbx,rsi
  4290a7:	mov    r14,rdi
  4290aa:	mov    ebp,DWORD PTR [rsi+0x18]
  4290ad:	mov    rdi,rsi
  4290b0:	call   423980 <strcmp@plt+0x201e8>
  4290b5:	mov    rdi,r14
  4290b8:	mov    esi,ebp
  4290ba:	mov    edx,eax
  4290bc:	call   429250 <strcmp@plt+0x25ab8>
  4290c1:	mov    rdi,rax
  4290c4:	mov    rsi,rbx
  4290c7:	pop    rbx
  4290c8:	pop    r14
  4290ca:	pop    rbp
  4290cb:	jmp    4287b0 <strcmp@plt+0x25018>
  4290d0:	push   r15
  4290d2:	push   r14
  4290d4:	push   r12
  4290d6:	push   rbx
  4290d7:	push   rax
  4290d8:	mov    r15,rsi
  4290db:	mov    r14,rdi
  4290de:	mov    r12,QWORD PTR [rsi]
  4290e1:	mov    ebx,DWORD PTR [r12+0x18]
  4290e6:	mov    rdi,r12
  4290e9:	call   423980 <strcmp@plt+0x201e8>
  4290ee:	mov    rdi,r14
  4290f1:	mov    esi,ebx
  4290f3:	mov    edx,eax
  4290f5:	call   429250 <strcmp@plt+0x25ab8>
  4290fa:	test   rax,rax
  4290fd:	je     42916b <strcmp@plt+0x259d3>
  4290ff:	mov    rbx,rax
  429102:	mov    rdi,rax
  429105:	mov    rsi,r15
  429108:	call   428880 <strcmp@plt+0x250e8>
  42910d:	cmp    eax,0x1
  429110:	jne    42916b <strcmp@plt+0x259d3>
  429112:	cmp    DWORD PTR [rbx+0x18],0x0
  429116:	jne    429124 <strcmp@plt+0x2598c>
  429118:	mov    rsi,QWORD PTR [r14+0x28]
  42911c:	mov    rdi,rbx
  42911f:	call   42bf10 <strcmp@plt+0x28778>
  429124:	cmp    DWORD PTR [r12+0x18],0x0
  42912a:	je     429131 <strcmp@plt+0x25999>
  42912c:	dec    WORD PTR [r14+0x20]
  429131:	lea    rax,[rip+0x3bc88]        # 464dc0 <strcmp@plt+0x61628>
  429138:	cmp    DWORD PTR [rax],0x2
  42913b:	jl     429195 <strcmp@plt+0x259fd>
  42913d:	mov    rdi,QWORD PTR [r15]
  429140:	call   422e20 <strcmp@plt+0x1f688>
  429145:	mov    rbx,rax
  429148:	mov    rdi,r14
  42914b:	call   422e20 <strcmp@plt+0x1f688>
  429150:	lea    rsi,[rip+0x21866]        # 44a9bd <strcmp@plt+0x47225>
  429157:	mov    edi,0x6
  42915c:	mov    rdx,rbx
  42915f:	mov    rcx,rax
  429162:	xor    eax,eax
  429164:	call   42e520 <strcmp@plt+0x2ad88>
  429169:	jmp    429195 <strcmp@plt+0x259fd>
  42916b:	lea    rax,[rip+0x3bc4e]        # 464dc0 <strcmp@plt+0x61628>
  429172:	cmp    DWORD PTR [rax],0x2
  429175:	jl     429195 <strcmp@plt+0x259fd>
  429177:	mov    rdi,QWORD PTR [r15]
  42917a:	call   422e20 <strcmp@plt+0x1f688>
  42917f:	lea    rsi,[rip+0x217ee]        # 44a974 <strcmp@plt+0x471dc>
  429186:	mov    edi,0x6
  42918b:	mov    rdx,rax
  42918e:	xor    eax,eax
  429190:	call   42e520 <strcmp@plt+0x2ad88>
  429195:	mov    eax,0x1
  42919a:	add    rsp,0x8
  42919e:	pop    rbx
  42919f:	pop    r12
  4291a1:	pop    r14
  4291a3:	pop    r15
  4291a5:	ret    
  4291a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4291b0:	push   rbx
  4291b1:	mov    rbx,rdi
  4291b4:	mov    rdi,QWORD PTR [rdi+0x28]
  4291b8:	call   42bf80 <strcmp@plt+0x287e8>
  4291bd:	mov    WORD PTR [rbx+0x20],0x0
  4291c3:	pop    rbx
  4291c4:	ret    
  4291c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4291cf:	nop
  4291d0:	push   rbp
  4291d1:	push   r15
  4291d3:	push   r14
  4291d5:	push   r12
  4291d7:	push   rbx
  4291d8:	test   rdi,rdi
  4291db:	je     429240 <strcmp@plt+0x25aa8>
  4291dd:	mov    r15,rsi
  4291e0:	test   rsi,rsi
  4291e3:	je     429240 <strcmp@plt+0x25aa8>
  4291e5:	mov    r14,rdi
  4291e8:	mov    rdi,QWORD PTR [rdi+0x28]
  4291ec:	call   42bf80 <strcmp@plt+0x287e8>
  4291f1:	mov    rbp,QWORD PTR [r15+0x8]
  4291f5:	xor    r12d,r12d
  4291f8:	cmp    rbp,r15
  4291fb:	jne    42920c <strcmp@plt+0x25a74>
  4291fd:	jmp    42923b <strcmp@plt+0x25aa3>
  4291ff:	nop
  429200:	add    r12d,eax
  429203:	mov    rbp,QWORD PTR [rbp+0x8]
  429207:	cmp    rbp,r15
  42920a:	je     42923b <strcmp@plt+0x25aa3>
  42920c:	mov    rdi,QWORD PTR [rbp+0x10]
  429210:	call   4288d0 <strcmp@plt+0x25138>
  429215:	mov    rbx,rax
  429218:	mov    rsi,QWORD PTR [r14+0x28]
  42921c:	mov    rdi,rax
  42921f:	call   42baa0 <strcmp@plt+0x28308>
  429224:	mov    rax,QWORD PTR [rbx+0x8]
  429228:	mov    rax,QWORD PTR [rax+0x10]
  42922c:	mov    rax,QWORD PTR [rax]
  42922f:	mov    eax,DWORD PTR [rax+0x18]
  429232:	test   eax,eax
  429234:	je     429200 <strcmp@plt+0x25a68>
  429236:	mov    eax,DWORD PTR [rbx+0x18]
  429239:	jmp    429200 <strcmp@plt+0x25a68>
  42923b:	mov    WORD PTR [r14+0x20],r12w
  429240:	pop    rbx
  429241:	pop    r12
  429243:	pop    r14
  429245:	pop    r15
  429247:	pop    rbp
  429248:	ret    
  429249:	nop    DWORD PTR [rax+0x0]
  429250:	push   rbp
  429251:	push   r15
  429253:	push   r14
  429255:	push   r13
  429257:	push   r12
  429259:	push   rbx
  42925a:	push   rax
  42925b:	mov    DWORD PTR [rsp+0x4],edx
  42925f:	mov    r12d,esi
  429262:	mov    rax,QWORD PTR [rdi+0x28]
  429266:	mov    rbp,QWORD PTR [rax+0x8]
  42926a:	cmp    rbp,rax
  42926d:	je     4292cb <strcmp@plt+0x25b33>
  42926f:	mov    r15,rdi
  429272:	mov    r13d,r12d
  429275:	lea    r14,[rip+0x215c0]        # 44a83c <strcmp@plt+0x470a4>
  42927c:	jmp    42929a <strcmp@plt+0x25b02>
  42927e:	call   422ef0 <strcmp@plt+0x1f758>
  429283:	movzx  eax,ax
  429286:	cmp    eax,DWORD PTR [rsp+0x4]
  42928a:	je     4292f7 <strcmp@plt+0x25b5f>
  42928c:	nop    DWORD PTR [rax+0x0]
  429290:	mov    rbp,QWORD PTR [rbp+0x8]
  429294:	cmp    rbp,QWORD PTR [r15+0x28]
  429298:	je     4292cb <strcmp@plt+0x25b33>
  42929a:	mov    rbx,QWORD PTR [rbp+0x10]
  42929e:	mov    rax,QWORD PTR [rbx+0x8]
  4292a2:	mov    rax,QWORD PTR [rax+0x10]
  4292a6:	mov    rdi,QWORD PTR [rax]
  4292a9:	cmp    DWORD PTR [rdi+0x18],r12d
  4292ad:	jne    429290 <strcmp@plt+0x25af8>
  4292af:	cmp    r12d,0x3
  4292b3:	ja     429290 <strcmp@plt+0x25af8>
  4292b5:	movsxd rax,DWORD PTR [r14+r13*4]
  4292b9:	add    rax,r14
  4292bc:	jmp    rax
  4292be:	call   423020 <strcmp@plt+0x1f888>
  4292c3:	cmp    eax,DWORD PTR [rsp+0x4]
  4292c7:	jne    429290 <strcmp@plt+0x25af8>
  4292c9:	jmp    4292f7 <strcmp@plt+0x25b5f>
  4292cb:	lea    rax,[rip+0x3baee]        # 464dc0 <strcmp@plt+0x61628>
  4292d2:	cmp    DWORD PTR [rax],0x3
  4292d5:	jge    4292db <strcmp@plt+0x25b43>
  4292d7:	xor    ebx,ebx
  4292d9:	jmp    4292f7 <strcmp@plt+0x25b5f>
  4292db:	lea    rsi,[rip+0x2175e]        # 44aa40 <strcmp@plt+0x472a8>
  4292e2:	xor    ebx,ebx
  4292e4:	mov    edi,0x7
  4292e9:	mov    edx,r12d
  4292ec:	mov    ecx,DWORD PTR [rsp+0x4]
  4292f0:	xor    eax,eax
  4292f2:	call   42e520 <strcmp@plt+0x2ad88>
  4292f7:	mov    rax,rbx
  4292fa:	add    rsp,0x8
  4292fe:	pop    rbx
  4292ff:	pop    r12
  429301:	pop    r13
  429303:	pop    r14
  429305:	pop    r15
  429307:	pop    rbp
  429308:	ret    
  429309:	lea    rax,[rip+0x3bab0]        # 464dc0 <strcmp@plt+0x61628>
  429310:	cmp    DWORD PTR [rax],0x0
  429313:	jle    4292d7 <strcmp@plt+0x25b3f>
  429315:	lea    rsi,[rip+0x216ea]        # 44aa06 <strcmp@plt+0x4726e>
  42931c:	xor    ebx,ebx
  42931e:	mov    edi,0x5
  429323:	xor    eax,eax
  429325:	call   42e520 <strcmp@plt+0x2ad88>
  42932a:	jmp    4292f7 <strcmp@plt+0x25b5f>
  42932c:	nop    DWORD PTR [rax+0x0]
  429330:	push   rbp
  429331:	push   r15
  429333:	push   r14
  429335:	push   rbx
  429336:	push   rax
  429337:	mov    r14,rsi
  42933a:	mov    r15,rdi
  42933d:	mov    rbx,QWORD PTR [rsi]
  429340:	mov    ebp,DWORD PTR [rbx+0x18]
  429343:	mov    rdi,rbx
  429346:	call   423980 <strcmp@plt+0x201e8>
  42934b:	mov    rdi,r15
  42934e:	mov    esi,ebp
  429350:	mov    edx,eax
  429352:	call   429250 <strcmp@plt+0x25ab8>
  429357:	xor    ecx,ecx
  429359:	test   rax,rax
  42935c:	je     429395 <strcmp@plt+0x25bfd>
  42935e:	test   rbx,rbx
  429361:	je     429395 <strcmp@plt+0x25bfd>
  429363:	cmp    DWORD PTR [rax+0x18],0x0
  429367:	je     429395 <strcmp@plt+0x25bfd>
  429369:	mov    rcx,QWORD PTR [rax+0x8]
  42936d:	cmp    rcx,rax
  429370:	je     42938f <strcmp@plt+0x25bf7>
  429372:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42937c:	nop    DWORD PTR [rax+0x0]
  429380:	cmp    QWORD PTR [rcx+0x10],r14
  429384:	je     429393 <strcmp@plt+0x25bfb>
  429386:	mov    rcx,QWORD PTR [rcx+0x8]
  42938a:	cmp    rcx,rax
  42938d:	jne    429380 <strcmp@plt+0x25be8>
  42938f:	xor    ecx,ecx
  429391:	jmp    429395 <strcmp@plt+0x25bfd>
  429393:	mov    cl,0x1
  429395:	mov    eax,ecx
  429397:	add    rsp,0x8
  42939b:	pop    rbx
  42939c:	pop    r14
  42939e:	pop    r15
  4293a0:	pop    rbp
  4293a1:	ret    
  4293a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4293ac:	nop    DWORD PTR [rax+0x0]
  4293b0:	push   rbp
  4293b1:	push   r14
  4293b3:	push   rbx
  4293b4:	mov    rbx,rsi
  4293b7:	mov    r14,rdi
  4293ba:	mov    ebp,DWORD PTR [rsi+0x18]
  4293bd:	mov    rdi,rsi
  4293c0:	call   423980 <strcmp@plt+0x201e8>
  4293c5:	mov    rdi,r14
  4293c8:	mov    esi,ebp
  4293ca:	mov    edx,eax
  4293cc:	call   429250 <strcmp@plt+0x25ab8>
  4293d1:	mov    r14,rax
  4293d4:	mov    rdi,rax
  4293d7:	mov    rsi,rbx
  4293da:	call   428810 <strcmp@plt+0x25078>
  4293df:	test   rax,rax
  4293e2:	je     4293f3 <strcmp@plt+0x25c5b>
  4293e4:	mov    rdi,rax
  4293e7:	mov    rsi,r14
  4293ea:	pop    rbx
  4293eb:	pop    r14
  4293ed:	pop    rbp
  4293ee:	jmp    42baa0 <strcmp@plt+0x28308>
  4293f3:	xor    eax,eax
  4293f5:	pop    rbx
  4293f6:	pop    r14
  4293f8:	pop    rbp
  4293f9:	ret    
  4293fa:	nop    WORD PTR [rax+rax*1+0x0]
  429400:	push   rbp
  429401:	push   r15
  429403:	push   r14
  429405:	push   r12
  429407:	push   rbx
  429408:	mov    rbx,rdx
  42940b:	mov    rbp,rsi
  42940e:	mov    r15,rdi
  429411:	call   4290d0 <strcmp@plt+0x25938>
  429416:	mov    rdi,rbp
  429419:	mov    rsi,rbx
  42941c:	call   428ab0 <strcmp@plt+0x25318>
  429421:	mov    rdi,r15
  429424:	mov    rsi,rbp
  429427:	call   428ee0 <strcmp@plt+0x25748>
  42942c:	mov    r14d,eax
  42942f:	cmp    eax,0x1
  429432:	jne    42949e <strcmp@plt+0x25d06>
  429434:	lea    r12,[rip+0x3b985]        # 464dc0 <strcmp@plt+0x61628>
  42943b:	cmp    DWORD PTR [r12],0x0
  429440:	jle    4294df <strcmp@plt+0x25d47>
  429446:	mov    rdi,QWORD PTR [rbp+0x0]
  42944a:	call   422e20 <strcmp@plt+0x1f688>
  42944f:	mov    rbx,rax
  429452:	mov    rdi,r15
  429455:	call   422e20 <strcmp@plt+0x1f688>
  42945a:	lea    rsi,[rip+0x2162d]        # 44aa8e <strcmp@plt+0x472f6>
  429461:	mov    edi,0x5
  429466:	mov    rdx,rbx
  429469:	mov    rcx,rax
  42946c:	xor    eax,eax
  42946e:	call   42e520 <strcmp@plt+0x2ad88>
  429473:	cmp    DWORD PTR [r12],0x2
  429478:	jl     4294df <strcmp@plt+0x25d47>
  42947a:	mov    rdi,r15
  42947d:	call   428d40 <strcmp@plt+0x255a8>
  429482:	lea    rsi,[rip+0x21653]        # 44aadc <strcmp@plt+0x47344>
  429489:	lea    rdx,[rip+0x44d60]        # 46e1f0 <strcmp@plt+0x6aa58>
  429490:	mov    edi,0x6
  429495:	xor    eax,eax
  429497:	call   42e520 <strcmp@plt+0x2ad88>
  42949c:	jmp    4294df <strcmp@plt+0x25d47>
  42949e:	mov    rdi,rbp
  4294a1:	call   428670 <strcmp@plt+0x24ed8>
  4294a6:	lea    rax,[rip+0x3b913]        # 464dc0 <strcmp@plt+0x61628>
  4294ad:	cmp    DWORD PTR [rax],0x0
  4294b0:	jle    4294df <strcmp@plt+0x25d47>
  4294b2:	mov    rdi,QWORD PTR [rbp+0x0]
  4294b6:	call   422e20 <strcmp@plt+0x1f688>
  4294bb:	mov    rbx,rax
  4294be:	mov    rdi,r15
  4294c1:	call   422e20 <strcmp@plt+0x1f688>
  4294c6:	lea    rsi,[rip+0x2163f]        # 44ab0c <strcmp@plt+0x47374>
  4294cd:	mov    edi,0x5
  4294d2:	mov    rdx,rbx
  4294d5:	mov    rcx,rax
  4294d8:	xor    eax,eax
  4294da:	call   42e520 <strcmp@plt+0x2ad88>
  4294df:	mov    eax,r14d
  4294e2:	pop    rbx
  4294e3:	pop    r12
  4294e5:	pop    r14
  4294e7:	pop    r15
  4294e9:	pop    rbp
  4294ea:	ret    
  4294eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4294f0:	push   rbp
  4294f1:	push   r15
  4294f3:	push   r14
  4294f5:	push   r12
  4294f7:	push   rbx
  4294f8:	mov    rbp,rsi
  4294fb:	mov    rbx,rdi
  4294fe:	call   4290d0 <strcmp@plt+0x25938>
  429503:	mov    r14,QWORD PTR [rbp+0x0]
  429507:	xor    edi,edi
  429509:	call   422be0 <strcmp@plt+0x1f448>
  42950e:	mov    QWORD PTR [rbp+0x0],rax
  429512:	mov    rdi,rbx
  429515:	mov    rsi,rbp
  429518:	call   428ee0 <strcmp@plt+0x25748>
  42951d:	mov    r15d,eax
  429520:	cmp    eax,0x1
  429523:	jne    42958e <strcmp@plt+0x25df6>
  429525:	lea    r12,[rip+0x3b894]        # 464dc0 <strcmp@plt+0x61628>
  42952c:	cmp    DWORD PTR [r12],0x0
  429531:	jle    4295ce <strcmp@plt+0x25e36>
  429537:	mov    rdi,r14
  42953a:	call   422e20 <strcmp@plt+0x1f688>
  42953f:	mov    rbp,rax
  429542:	mov    rdi,rbx
  429545:	call   422e20 <strcmp@plt+0x1f688>
  42954a:	lea    rsi,[rip+0x21627]        # 44ab78 <strcmp@plt+0x473e0>
  429551:	mov    edi,0x5
  429556:	mov    rdx,rbp
  429559:	mov    rcx,rax
  42955c:	xor    eax,eax
  42955e:	call   42e520 <strcmp@plt+0x2ad88>
  429563:	cmp    DWORD PTR [r12],0x2
  429568:	jl     4295ce <strcmp@plt+0x25e36>
  42956a:	mov    rdi,rbx
  42956d:	call   428d40 <strcmp@plt+0x255a8>
  429572:	lea    rsi,[rip+0x21653]        # 44abcc <strcmp@plt+0x47434>
  429579:	lea    rdx,[rip+0x44c70]        # 46e1f0 <strcmp@plt+0x6aa58>
  429580:	mov    edi,0x6
  429585:	xor    eax,eax
  429587:	call   42e520 <strcmp@plt+0x2ad88>
  42958c:	jmp    4295ce <strcmp@plt+0x25e36>
  42958e:	mov    rdi,rbp
  429591:	call   428670 <strcmp@plt+0x24ed8>
  429596:	lea    rax,[rip+0x3b823]        # 464dc0 <strcmp@plt+0x61628>
  42959d:	cmp    DWORD PTR [rax],0x0
  4295a0:	jle    4295ce <strcmp@plt+0x25e36>
  4295a2:	mov    rdi,r14
  4295a5:	call   422e20 <strcmp@plt+0x1f688>
  4295aa:	mov    rbp,rax
  4295ad:	mov    rdi,rbx
  4295b0:	call   422e20 <strcmp@plt+0x1f688>
  4295b5:	lea    rsi,[rip+0x21643]        # 44abff <strcmp@plt+0x47467>
  4295bc:	mov    edi,0x5
  4295c1:	mov    rdx,rbp
  4295c4:	mov    rcx,rax
  4295c7:	xor    eax,eax
  4295c9:	call   42e520 <strcmp@plt+0x2ad88>
  4295ce:	mov    rdi,r14
  4295d1:	call   422c90 <strcmp@plt+0x1f4f8>
  4295d6:	mov    eax,r15d
  4295d9:	pop    rbx
  4295da:	pop    r12
  4295dc:	pop    r14
  4295de:	pop    r15
  4295e0:	pop    rbp
  4295e1:	ret    
  4295e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4295ec:	nop    DWORD PTR [rax+0x0]
  4295f0:	push   rbp
  4295f1:	push   r14
  4295f3:	push   rbx
  4295f4:	mov    rax,QWORD PTR [rdi+0x28]
  4295f8:	mov    rbp,QWORD PTR [rax+0x8]
  4295fc:	cmp    rbp,rax
  4295ff:	je     42963e <strcmp@plt+0x25ea6>
  429601:	mov    r14,rdi
  429604:	jmp    429619 <strcmp@plt+0x25e81>
  429606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429610:	mov    rbp,QWORD PTR [rbp+0x8]
  429614:	cmp    rbp,rax
  429617:	je     42963e <strcmp@plt+0x25ea6>
  429619:	mov    rbx,QWORD PTR [rbp+0x10]
  42961d:	mov    rcx,QWORD PTR [rbx+0x8]
  429621:	mov    rcx,QWORD PTR [rcx+0x10]
  429625:	mov    rdi,QWORD PTR [rcx]
  429628:	cmp    DWORD PTR [rdi+0x18],0x3
  42962c:	jne    429610 <strcmp@plt+0x25e78>
  42962e:	call   423020 <strcmp@plt+0x1f888>
  429633:	cmp    eax,0xa
  429636:	je     429675 <strcmp@plt+0x25edd>
  429638:	mov    rax,QWORD PTR [r14+0x28]
  42963c:	jmp    429610 <strcmp@plt+0x25e78>
  42963e:	lea    rax,[rip+0x3b77b]        # 464dc0 <strcmp@plt+0x61628>
  429645:	xor    r14d,r14d
  429648:	cmp    DWORD PTR [rax],0x3
  42964b:	jl     42966d <strcmp@plt+0x25ed5>
  42964d:	lea    rsi,[rip+0x213ec]        # 44aa40 <strcmp@plt+0x472a8>
  429654:	xor    r14d,r14d
  429657:	mov    edi,0x7
  42965c:	mov    edx,0x3
  429661:	mov    ecx,0xa
  429666:	xor    eax,eax
  429668:	call   42e520 <strcmp@plt+0x2ad88>
  42966d:	mov    eax,r14d
  429670:	pop    rbx
  429671:	pop    r14
  429673:	pop    rbp
  429674:	ret    
  429675:	xor    r14d,r14d
  429678:	test   rbx,rbx
  42967b:	je     42966d <strcmp@plt+0x25ed5>
  42967d:	mov    rbp,QWORD PTR [rbx+0x8]
  429681:	cmp    rbp,rbx
  429684:	jne    429691 <strcmp@plt+0x25ef9>
  429686:	jmp    42966d <strcmp@plt+0x25ed5>
  429688:	mov    rbp,QWORD PTR [rbp+0x8]
  42968c:	cmp    rbp,rbx
  42968f:	je     42966d <strcmp@plt+0x25ed5>
  429691:	mov    rax,QWORD PTR [rbp+0x10]
  429695:	mov    rdi,QWORD PTR [rax]
  429698:	call   423830 <strcmp@plt+0x20098>
  42969d:	mov    rax,QWORD PTR [rax]
  4296a0:	mov    rcx,QWORD PTR [rax+0x8]
  4296a4:	cmp    rcx,rax
  4296a7:	je     429688 <strcmp@plt+0x25ef0>
  4296a9:	nop    DWORD PTR [rax+0x0]
  4296b0:	mov    rdx,QWORD PTR [rcx+0x10]
  4296b4:	test   BYTE PTR [rdx],0x1
  4296b7:	jne    4296c4 <strcmp@plt+0x25f2c>
  4296b9:	mov    rcx,QWORD PTR [rcx+0x8]
  4296bd:	cmp    rcx,rax
  4296c0:	jne    4296b0 <strcmp@plt+0x25f18>
  4296c2:	jmp    429688 <strcmp@plt+0x25ef0>
  4296c4:	mov    r14d,0x1
  4296ca:	jmp    42966d <strcmp@plt+0x25ed5>
  4296cc:	nop    DWORD PTR [rax+0x0]
  4296d0:	push   rbx
  4296d1:	mov    edi,0x48
  4296d6:	call   431d60 <strcmp@plt+0x2e5c8>
  4296db:	test   rax,rax
  4296de:	je     429707 <strcmp@plt+0x25f6f>
  4296e0:	mov    rbx,rax
  4296e3:	lea    rdi,[rip+0xfffffffffffff366]        # 428a50 <strcmp@plt+0x252b8>
  4296ea:	lea    rsi,[rip+0x28ff]        # 42bff0 <strcmp@plt+0x28858>
  4296f1:	call   42b940 <strcmp@plt+0x281a8>
  4296f6:	mov    QWORD PTR [rbx+0x28],rax
  4296fa:	test   rax,rax
  4296fd:	jne    429709 <strcmp@plt+0x25f71>
  4296ff:	mov    rdi,rbx
  429702:	call   403790 <free@plt>
  429707:	xor    ebx,ebx
  429709:	mov    rax,rbx
  42970c:	pop    rbx
  42970d:	ret    
  42970e:	xchg   ax,ax
  429710:	push   r14
  429712:	push   rbx
  429713:	push   rax
  429714:	mov    r14,rdi
  429717:	call   422dd0 <strcmp@plt+0x1f638>
  42971c:	test   rax,rax
  42971f:	jne    429736 <strcmp@plt+0x25f9e>
  429721:	mov    rdi,r14
  429724:	call   422fd0 <strcmp@plt+0x1f838>
  429729:	test   rax,rax
  42972c:	je     429790 <strcmp@plt+0x25ff8>
  42972e:	mov    rdi,rax
  429731:	call   422ea0 <strcmp@plt+0x1f708>
  429736:	mov    edi,0x48
  42973b:	call   431d60 <strcmp@plt+0x2e5c8>
  429740:	test   rax,rax
  429743:	je     429779 <strcmp@plt+0x25fe1>
  429745:	mov    rbx,rax
  429748:	lea    rdi,[rip+0xfffffffffffff301]        # 428a50 <strcmp@plt+0x252b8>
  42974f:	lea    rsi,[rip+0x289a]        # 42bff0 <strcmp@plt+0x28858>
  429756:	call   42b940 <strcmp@plt+0x281a8>
  42975b:	mov    QWORD PTR [rbx+0x28],rax
  42975f:	test   rax,rax
  429762:	je     429771 <strcmp@plt+0x25fd9>
  429764:	mov    rdi,rbx
  429767:	mov    rsi,r14
  42976a:	call   423260 <strcmp@plt+0x1fac8>
  42976f:	jmp    4297b0 <strcmp@plt+0x26018>
  429771:	mov    rdi,rbx
  429774:	call   403790 <free@plt>
  429779:	lea    rsi,[rip+0x21537]        # 44acb7 <strcmp@plt+0x4751f>
  429780:	xor    ebx,ebx
  429782:	mov    edi,0x3
  429787:	xor    eax,eax
  429789:	call   42e520 <strcmp@plt+0x2ad88>
  42978e:	jmp    4297b0 <strcmp@plt+0x26018>
  429790:	mov    rdi,r14
  429793:	call   422e20 <strcmp@plt+0x1f688>
  429798:	lea    rsi,[rip+0x214e1]        # 44ac80 <strcmp@plt+0x474e8>
  42979f:	xor    ebx,ebx
  4297a1:	mov    edi,0x3
  4297a6:	mov    rdx,rax
  4297a9:	xor    eax,eax
  4297ab:	call   42e520 <strcmp@plt+0x2ad88>
  4297b0:	mov    rax,rbx
  4297b3:	add    rsp,0x8
  4297b7:	pop    rbx
  4297b8:	pop    r14
  4297ba:	ret    
  4297bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4297c0:	push   rbp
  4297c1:	push   r15
  4297c3:	push   r14
  4297c5:	push   r13
  4297c7:	push   r12
  4297c9:	push   rbx
  4297ca:	push   rax
  4297cb:	mov    r14,r9
  4297ce:	mov    r12d,r8d
  4297d1:	mov    ebp,ecx
  4297d3:	mov    r13d,edx
  4297d6:	mov    ebx,esi
  4297d8:	mov    r15,rdi
  4297db:	call   422dd0 <strcmp@plt+0x1f638>
  4297e0:	test   rax,rax
  4297e3:	jne    4297fe <strcmp@plt+0x26066>
  4297e5:	mov    rdi,r15
  4297e8:	call   422fd0 <strcmp@plt+0x1f838>
  4297ed:	test   rax,rax
  4297f0:	je     429908 <strcmp@plt+0x26170>
  4297f6:	mov    rdi,rax
  4297f9:	call   422ea0 <strcmp@plt+0x1f708>
  4297fe:	mov    DWORD PTR [rsp+0x4],ebx
  429802:	mov    edi,0x48
  429807:	call   431d60 <strcmp@plt+0x2e5c8>
  42980c:	test   rax,rax
  42980f:	je     4298f1 <strcmp@plt+0x26159>
  429815:	mov    rbx,rax
  429818:	lea    rdi,[rip+0xfffffffffffff231]        # 428a50 <strcmp@plt+0x252b8>
  42981f:	lea    rsi,[rip+0x27ca]        # 42bff0 <strcmp@plt+0x28858>
  429826:	call   42b940 <strcmp@plt+0x281a8>
  42982b:	mov    QWORD PTR [rbx+0x28],rax
  42982f:	test   rax,rax
  429832:	je     4298e9 <strcmp@plt+0x26151>
  429838:	mov    rdi,rbx
  42983b:	mov    rsi,r15
  42983e:	call   423260 <strcmp@plt+0x1fac8>
  429843:	mov    eax,DWORD PTR [rsp+0x4]
  429847:	mov    DWORD PTR [rbx+0x38],eax
  42984a:	mov    BYTE PTR [rbx+0x3c],r13b
  42984e:	mov    BYTE PTR [rbx+0x3d],bpl
  429852:	mov    BYTE PTR [rbx+0x3e],r12b
  429856:	or     r13d,0x1
  42985a:	cmp    r13d,0x3
  42985e:	jne    429898 <strcmp@plt+0x26100>
  429860:	mov    rdi,QWORD PTR [rsp+0x48]
  429865:	mov    esi,0x1
  42986a:	mov    edx,0x1
  42986f:	mov    ecx,0x1
  429874:	mov    r8d,0x0
  42987a:	mov    r9d,0x0
  429880:	push   0x0
  429882:	push   0x0
  429884:	call   428370 <strcmp@plt+0x24bd8>
  429889:	add    rsp,0x10
  42988d:	mov    rdi,rbx
  429890:	mov    rsi,rax
  429893:	call   429940 <strcmp@plt+0x261a8>
  429898:	mov    rbp,QWORD PTR [r14+0x8]
  42989c:	cmp    rbp,r14
  42989f:	je     429928 <strcmp@plt+0x26190>
  4298a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4298af:	nop
  4298b0:	mov    rdi,QWORD PTR [rbp+0x10]
  4298b4:	mov    esi,0x1
  4298b9:	xor    edx,edx
  4298bb:	mov    ecx,0x1
  4298c0:	xor    r8d,r8d
  4298c3:	xor    r9d,r9d
  4298c6:	push   0x0
  4298c8:	push   0x0
  4298ca:	call   428370 <strcmp@plt+0x24bd8>
  4298cf:	add    rsp,0x10
  4298d3:	mov    rdi,rbx
  4298d6:	mov    rsi,rax
  4298d9:	call   429940 <strcmp@plt+0x261a8>
  4298de:	mov    rbp,QWORD PTR [rbp+0x8]
  4298e2:	cmp    rbp,r14
  4298e5:	jne    4298b0 <strcmp@plt+0x26118>
  4298e7:	jmp    429928 <strcmp@plt+0x26190>
  4298e9:	mov    rdi,rbx
  4298ec:	call   403790 <free@plt>
  4298f1:	lea    rsi,[rip+0x2143d]        # 44ad35 <strcmp@plt+0x4759d>
  4298f8:	xor    ebx,ebx
  4298fa:	mov    edi,0x3
  4298ff:	xor    eax,eax
  429901:	call   42e520 <strcmp@plt+0x2ad88>
  429906:	jmp    429928 <strcmp@plt+0x26190>
  429908:	mov    rdi,r15
  42990b:	call   422e20 <strcmp@plt+0x1f688>
  429910:	lea    rsi,[rip+0x213e2]        # 44acf9 <strcmp@plt+0x47561>
  429917:	xor    ebx,ebx
  429919:	mov    edi,0x3
  42991e:	mov    rdx,rax
  429921:	xor    eax,eax
  429923:	call   42e520 <strcmp@plt+0x2ad88>
  429928:	mov    rax,rbx
  42992b:	add    rsp,0x8
  42992f:	pop    rbx
  429930:	pop    r12
  429932:	pop    r13
  429934:	pop    r14
  429936:	pop    r15
  429938:	pop    rbp
  429939:	ret    
  42993a:	nop    WORD PTR [rax+rax*1+0x0]
  429940:	push   rbp
  429941:	push   r15
  429943:	push   r14
  429945:	push   r12
  429947:	push   rbx
  429948:	mov    r15,rsi
  42994b:	mov    r14,rdi
  42994e:	mov    r12,QWORD PTR [rsi]
  429951:	mov    ebx,DWORD PTR [r12+0x18]
  429956:	mov    rdi,r12
  429959:	call   423980 <strcmp@plt+0x201e8>
  42995e:	mov    rdi,r14
  429961:	mov    esi,ebx
  429963:	mov    edx,eax
  429965:	call   429f90 <strcmp@plt+0x267f8>
  42996a:	test   rax,rax
  42996d:	je     429a18 <strcmp@plt+0x26280>
  429973:	mov    rbx,rax
  429976:	mov    rdi,r15
  429979:	mov    rsi,rax
  42997c:	call   42bc20 <strcmp@plt+0x28488>
  429981:	cmp    al,0x1
  429983:	jne    429a47 <strcmp@plt+0x262af>
  429989:	lea    rax,[rip+0x3b430]        # 464dc0 <strcmp@plt+0x61628>
  429990:	cmp    DWORD PTR [rax],0x2
  429993:	jl     4299c1 <strcmp@plt+0x26229>
  429995:	mov    rdi,QWORD PTR [r15]
  429998:	call   422e20 <strcmp@plt+0x1f688>
  42999d:	mov    rbp,rax
  4299a0:	mov    rdi,r14
  4299a3:	call   422e20 <strcmp@plt+0x1f688>
  4299a8:	lea    rsi,[rip+0x21414]        # 44adc3 <strcmp@plt+0x4762b>
  4299af:	mov    edi,0x6
  4299b4:	mov    rdx,rbp
  4299b7:	mov    rcx,rax
  4299ba:	xor    eax,eax
  4299bc:	call   42e520 <strcmp@plt+0x2ad88>
  4299c1:	mov    rbp,QWORD PTR [r15]
  4299c4:	mov    r12d,DWORD PTR [rbp+0x18]
  4299c8:	mov    rdi,rbp
  4299cb:	call   423980 <strcmp@plt+0x201e8>
  4299d0:	mov    rdi,r14
  4299d3:	mov    esi,r12d
  4299d6:	mov    edx,eax
  4299d8:	call   429f90 <strcmp@plt+0x267f8>
  4299dd:	mov    rdi,rax
  4299e0:	mov    rsi,rbp
  4299e3:	call   4287b0 <strcmp@plt+0x25018>
  4299e8:	mov    cl,BYTE PTR [rax+0xb]
  4299eb:	mov    ebp,0xfffffffb
  4299f0:	cmp    cl,BYTE PTR [r15+0xb]
  4299f4:	jbe    429ab7 <strcmp@plt+0x2631f>
  4299fa:	mov    rdi,rax
  4299fd:	mov    rsi,rbx
  429a00:	call   42bf10 <strcmp@plt+0x28778>
  429a05:	mov    rdi,r15
  429a08:	mov    rsi,rbx
  429a0b:	pop    rbx
  429a0c:	pop    r12
  429a0e:	pop    r14
  429a10:	pop    r15
  429a12:	pop    rbp
  429a13:	jmp    42baa0 <strcmp@plt+0x28308>
  429a18:	lea    rdi,[rip+0xffffffffffffed01]        # 428720 <strcmp@plt+0x24f88>
  429a1f:	lea    rsi,[rip+0xffffffffffffec4a]        # 428670 <strcmp@plt+0x24ed8>
  429a26:	call   42b940 <strcmp@plt+0x281a8>
  429a2b:	mov    rbx,rax
  429a2e:	mov    rdi,r15
  429a31:	mov    rsi,rax
  429a34:	call   42baa0 <strcmp@plt+0x28308>
  429a39:	cmp    eax,0x1
  429a3c:	jne    429aa3 <strcmp@plt+0x2630b>
  429a3e:	mov    rsi,QWORD PTR [r14+0x28]
  429a42:	mov    rdi,rbx
  429a45:	jmp    429a4d <strcmp@plt+0x262b5>
  429a47:	mov    rdi,r15
  429a4a:	mov    rsi,rbx
  429a4d:	call   42baa0 <strcmp@plt+0x28308>
  429a52:	cmp    eax,0x1
  429a55:	jne    429aa3 <strcmp@plt+0x2630b>
  429a57:	lea    rax,[rip+0x3b362]        # 464dc0 <strcmp@plt+0x61628>
  429a5e:	cmp    DWORD PTR [rax],0x2
  429a61:	jl     429a8f <strcmp@plt+0x262f7>
  429a63:	mov    rdi,QWORD PTR [r15]
  429a66:	call   422e20 <strcmp@plt+0x1f688>
  429a6b:	mov    rbx,rax
  429a6e:	mov    rdi,r14
  429a71:	call   422e20 <strcmp@plt+0x1f688>
  429a76:	lea    rsi,[rip+0x213b6]        # 44ae33 <strcmp@plt+0x4769b>
  429a7d:	mov    edi,0x6
  429a82:	mov    rdx,rbx
  429a85:	mov    rcx,rax
  429a88:	xor    eax,eax
  429a8a:	call   42e520 <strcmp@plt+0x2ad88>
  429a8f:	mov    ebp,0x1
  429a94:	cmp    DWORD PTR [r12+0x18],0x0
  429a9a:	je     429ab7 <strcmp@plt+0x2631f>
  429a9c:	inc    WORD PTR [r14+0x20]
  429aa1:	jmp    429ab7 <strcmp@plt+0x2631f>
  429aa3:	xor    ebp,ebp
  429aa5:	cmp    DWORD PTR [rbx+0x18],0x0
  429aa9:	jne    429ab7 <strcmp@plt+0x2631f>
  429aab:	mov    rsi,QWORD PTR [r14+0x28]
  429aaf:	mov    rdi,rbx
  429ab2:	call   42bf10 <strcmp@plt+0x28778>
  429ab7:	mov    eax,ebp
  429ab9:	pop    rbx
  429aba:	pop    r12
  429abc:	pop    r14
  429abe:	pop    r15
  429ac0:	pop    rbp
  429ac1:	ret    
  429ac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429acc:	nop    DWORD PTR [rax+0x0]
  429ad0:	test   rdi,rdi
  429ad3:	je     429afc <strcmp@plt+0x26364>
  429ad5:	push   rbx
  429ad6:	mov    rbx,rdi
  429ad9:	mov    rdi,QWORD PTR [rdi+0x28]
  429add:	call   42bff0 <strcmp@plt+0x28858>
  429ae2:	mov    rdi,QWORD PTR [rbx+0x30]
  429ae6:	call   42bff0 <strcmp@plt+0x28858>
  429aeb:	mov    rdi,rbx
  429aee:	call   423930 <strcmp@plt+0x20198>
  429af3:	mov    rdi,rbx
  429af6:	pop    rbx
  429af7:	jmp    403790 <free@plt>
  429afc:	ret    
  429afd:	nop    DWORD PTR [rax]
  429b00:	push   rbp
  429b01:	push   r15
  429b03:	push   r14
  429b05:	push   r13
  429b07:	push   r12
  429b09:	push   rbx
  429b0a:	push   rax
  429b0b:	mov    rbx,rsi
  429b0e:	mov    r14,rdi
  429b11:	call   423670 <strcmp@plt+0x1fed8>
  429b16:	test   eax,eax
  429b18:	jne    429bb4 <strcmp@plt+0x2641c>
  429b1e:	movzx  eax,WORD PTR [r14+0x20]
  429b23:	cmp    ax,WORD PTR [rbx+0x20]
  429b27:	jne    429bb4 <strcmp@plt+0x2641c>
  429b2d:	mov    rcx,QWORD PTR [r14+0x28]
  429b31:	mov    esi,DWORD PTR [rcx+0x18]
  429b34:	mov    rdx,QWORD PTR [rbx+0x28]
  429b38:	cmp    esi,DWORD PTR [rdx+0x18]
  429b3b:	jne    429bb4 <strcmp@plt+0x2641c>
  429b3d:	xor    eax,eax
  429b3f:	test   esi,esi
  429b41:	je     429b49 <strcmp@plt+0x263b1>
  429b43:	mov    r15,QWORD PTR [rdx+0x8]
  429b47:	jmp    429b4c <strcmp@plt+0x263b4>
  429b49:	xor    r15d,r15d
  429b4c:	mov    r12,QWORD PTR [rcx+0x8]
  429b50:	cmp    r12,rcx
  429b53:	jne    429b67 <strcmp@plt+0x263cf>
  429b55:	jmp    429bb9 <strcmp@plt+0x26421>
  429b57:	mov    r15,QWORD PTR [r15+0x8]
  429b5b:	mov    r12,QWORD PTR [r12+0x8]
  429b60:	xor    eax,eax
  429b62:	cmp    r12,rcx
  429b65:	je     429bb9 <strcmp@plt+0x26421>
  429b67:	mov    r13,QWORD PTR [r12+0x10]
  429b6c:	mov    rax,QWORD PTR [r15+0x10]
  429b70:	mov    edx,DWORD PTR [r13+0x18]
  429b74:	cmp    edx,DWORD PTR [rax+0x18]
  429b77:	jne    429bb4 <strcmp@plt+0x2641c>
  429b79:	test   edx,edx
  429b7b:	je     429b83 <strcmp@plt+0x263eb>
  429b7d:	mov    rbx,QWORD PTR [rax+0x8]
  429b81:	jmp    429b85 <strcmp@plt+0x263ed>
  429b83:	xor    ebx,ebx
  429b85:	mov    rbp,QWORD PTR [r13+0x8]
  429b89:	cmp    rbp,r13
  429b8c:	je     429b57 <strcmp@plt+0x263bf>
  429b8e:	xchg   ax,ax
  429b90:	mov    rdi,QWORD PTR [rbp+0x10]
  429b94:	mov    rsi,QWORD PTR [rbx+0x10]
  429b98:	call   428620 <strcmp@plt+0x24e88>
  429b9d:	test   eax,eax
  429b9f:	jne    429bb4 <strcmp@plt+0x2641c>
  429ba1:	mov    rbx,QWORD PTR [rbx+0x8]
  429ba5:	mov    rbp,QWORD PTR [rbp+0x8]
  429ba9:	cmp    rbp,r13
  429bac:	jne    429b90 <strcmp@plt+0x263f8>
  429bae:	mov    rcx,QWORD PTR [r14+0x28]
  429bb2:	jmp    429b57 <strcmp@plt+0x263bf>
  429bb4:	mov    eax,0x1
  429bb9:	add    rsp,0x8
  429bbd:	pop    rbx
  429bbe:	pop    r12
  429bc0:	pop    r13
  429bc2:	pop    r14
  429bc4:	pop    r15
  429bc6:	pop    rbp
  429bc7:	ret    
  429bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  429bd0:	push   r14
  429bd2:	push   rbx
  429bd3:	push   rax
  429bd4:	mov    r14,rdi
  429bd7:	mov    edi,0x48
  429bdc:	call   431d60 <strcmp@plt+0x2e5c8>
  429be1:	test   rax,rax
  429be4:	je     429c0d <strcmp@plt+0x26475>
  429be6:	mov    rbx,rax
  429be9:	lea    rdi,[rip+0xffffffffffffee60]        # 428a50 <strcmp@plt+0x252b8>
  429bf0:	lea    rsi,[rip+0x23f9]        # 42bff0 <strcmp@plt+0x28858>
  429bf7:	call   42b940 <strcmp@plt+0x281a8>
  429bfc:	mov    QWORD PTR [rbx+0x28],rax
  429c00:	test   rax,rax
  429c03:	jne    429c0f <strcmp@plt+0x26477>
  429c05:	mov    rdi,rbx
  429c08:	call   403790 <free@plt>
  429c0d:	xor    ebx,ebx
  429c0f:	mov    rdi,rbx
  429c12:	mov    rsi,r14
  429c15:	call   423260 <strcmp@plt+0x1fac8>
  429c1a:	mov    al,BYTE PTR [r14+0x3c]
  429c1e:	mov    BYTE PTR [rbx+0x3c],al
  429c21:	mov    al,BYTE PTR [r14+0x3d]
  429c25:	mov    BYTE PTR [rbx+0x3d],al
  429c28:	mov    al,BYTE PTR [r14+0x3e]
  429c2c:	mov    BYTE PTR [rbx+0x3e],al
  429c2f:	movzx  eax,WORD PTR [r14+0x20]
  429c34:	mov    WORD PTR [rbx+0x20],ax
  429c38:	mov    eax,DWORD PTR [r14+0x38]
  429c3c:	mov    DWORD PTR [rbx+0x38],eax
  429c3f:	mov    rax,rbx
  429c42:	add    rsp,0x8
  429c46:	pop    rbx
  429c47:	pop    r14
  429c49:	ret    
  429c4a:	nop    WORD PTR [rax+rax*1+0x0]
  429c50:	push   rbp
  429c51:	push   r15
  429c53:	push   r14
  429c55:	push   r13
  429c57:	push   r12
  429c59:	push   rbx
  429c5a:	sub    rsp,0x18
  429c5e:	mov    r14,rdi
  429c61:	mov    BYTE PTR [rip+0x44978],0x0        # 46e5e0 <strcmp@plt+0x6ae48>
  429c68:	lea    r13,[rip+0x44971]        # 46e5e0 <strcmp@plt+0x6ae48>
  429c6f:	call   422e20 <strcmp@plt+0x1f688>
  429c74:	mov    r15,rax
  429c77:	mov    eax,DWORD PTR [r14+0x38]
  429c7b:	mov    DWORD PTR [rsp],eax
  429c7e:	movzx  r12d,WORD PTR [r14+0x20]
  429c83:	movzx  edi,BYTE PTR [r14+0x3c]
  429c88:	call   42abf0 <strcmp@plt+0x27458>
  429c8d:	mov    r10,rax
  429c90:	movzx  ebx,BYTE PTR [r14+0x3d]
  429c95:	movzx  ebp,BYTE PTR [r14+0x3e]
  429c9a:	sub    rsp,0x8
  429c9e:	lea    rdx,[rip+0x210d7]        # 44ad7c <strcmp@plt+0x475e4>
  429ca5:	mov    esi,0x1f4
  429caa:	mov    rdi,r13
  429cad:	mov    rcx,r15
  429cb0:	mov    r8d,DWORD PTR [rsp+0x8]
  429cb5:	mov    r9d,r12d
  429cb8:	mov    eax,0x0
  429cbd:	push   rbp
  429cbe:	push   rbx
  429cbf:	push   r10
  429cc1:	call   403630 <snprintf@plt>
  429cc6:	add    rsp,0x20
  429cca:	mov    QWORD PTR [rsp+0x8],r14
  429ccf:	cmp    WORD PTR [r14+0x20],0x0
  429cd5:	je     429d8f <strcmp@plt+0x265f7>
  429cdb:	mov    rax,QWORD PTR [rsp+0x8]
  429ce0:	mov    rax,QWORD PTR [rax+0x28]
  429ce4:	mov    rcx,QWORD PTR [rax+0x8]
  429ce8:	cmp    rcx,rax
  429ceb:	je     429d8f <strcmp@plt+0x265f7>
  429cf1:	lea    rbx,[rip+0x20bc3]        # 44a8bb <strcmp@plt+0x47123>
  429cf8:	jmp    429d0d <strcmp@plt+0x26575>
  429cfa:	nop    WORD PTR [rax+rax*1+0x0]
  429d00:	mov    rcx,QWORD PTR [rcx+0x8]
  429d04:	cmp    rcx,rax
  429d07:	je     429d8f <strcmp@plt+0x265f7>
  429d0d:	mov    rdx,QWORD PTR [rcx+0x10]
  429d11:	cmp    DWORD PTR [rdx+0x18],0x0
  429d15:	je     429d00 <strcmp@plt+0x26568>
  429d17:	mov    r14,QWORD PTR [rdx+0x8]
  429d1b:	cmp    r14,rdx
  429d1e:	je     429d00 <strcmp@plt+0x26568>
  429d20:	mov    QWORD PTR [rsp+0x10],rcx
  429d25:	mov    QWORD PTR [rsp],rdx
  429d29:	nop    DWORD PTR [rax+0x0]
  429d30:	mov    rbp,QWORD PTR [r14+0x10]
  429d34:	mov    rdi,r13
  429d37:	call   4031e0 <strlen@plt>
  429d3c:	lea    r12,[rax+r13*1]
  429d40:	mov    r15,r13
  429d43:	mov    r13,rbx
  429d46:	mov    ebx,0x1f4
  429d4b:	sub    rbx,rax
  429d4e:	mov    rdi,rbp
  429d51:	call   4283f0 <strcmp@plt+0x24c58>
  429d56:	mov    rdi,r12
  429d59:	mov    rsi,rbx
  429d5c:	mov    rbx,r13
  429d5f:	mov    r13,r15
  429d62:	mov    rdx,rbx
  429d65:	mov    rcx,rax
  429d68:	xor    eax,eax
  429d6a:	call   403630 <snprintf@plt>
  429d6f:	mov    rdx,QWORD PTR [rsp]
  429d73:	mov    r14,QWORD PTR [r14+0x8]
  429d77:	cmp    r14,rdx
  429d7a:	jne    429d30 <strcmp@plt+0x26598>
  429d7c:	mov    rax,QWORD PTR [rsp+0x8]
  429d81:	mov    rax,QWORD PTR [rax+0x28]
  429d85:	mov    rcx,QWORD PTR [rsp+0x10]
  429d8a:	jmp    429d00 <strcmp@plt+0x26568>
  429d8f:	lea    rax,[rip+0x4484a]        # 46e5e0 <strcmp@plt+0x6ae48>
  429d96:	add    rsp,0x18
  429d9a:	pop    rbx
  429d9b:	pop    r12
  429d9d:	pop    r13
  429d9f:	pop    r14
  429da1:	pop    r15
  429da3:	pop    rbp
  429da4:	ret    
  429da5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429daf:	nop
  429db0:	push   rbp
  429db1:	push   rbx
  429db2:	push   rax
  429db3:	mov    rbx,rdi
  429db6:	mov    ebp,DWORD PTR [rsi+0x18]
  429db9:	mov    rdi,rsi
  429dbc:	call   423980 <strcmp@plt+0x201e8>
  429dc1:	mov    rdi,rbx
  429dc4:	mov    esi,ebp
  429dc6:	mov    edx,eax
  429dc8:	add    rsp,0x8
  429dcc:	pop    rbx
  429dcd:	pop    rbp
  429dce:	jmp    429f90 <strcmp@plt+0x267f8>
  429dd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429ddd:	nop    DWORD PTR [rax]
  429de0:	push   rbp
  429de1:	push   r14
  429de3:	push   rbx
  429de4:	mov    rbx,rsi
  429de7:	mov    r14,rdi
  429dea:	mov    ebp,DWORD PTR [rsi+0x18]
  429ded:	mov    rdi,rsi
  429df0:	call   423980 <strcmp@plt+0x201e8>
  429df5:	mov    rdi,r14
  429df8:	mov    esi,ebp
  429dfa:	mov    edx,eax
  429dfc:	call   429f90 <strcmp@plt+0x267f8>
  429e01:	mov    rdi,rax
  429e04:	mov    rsi,rbx
  429e07:	pop    rbx
  429e08:	pop    r14
  429e0a:	pop    rbp
  429e0b:	jmp    4287b0 <strcmp@plt+0x25018>
  429e10:	push   r15
  429e12:	push   r14
  429e14:	push   r12
  429e16:	push   rbx
  429e17:	push   rax
  429e18:	mov    r15,rsi
  429e1b:	mov    r14,rdi
  429e1e:	mov    r12,QWORD PTR [rsi]
  429e21:	mov    ebx,DWORD PTR [r12+0x18]
  429e26:	mov    rdi,r12
  429e29:	call   423980 <strcmp@plt+0x201e8>
  429e2e:	mov    rdi,r14
  429e31:	mov    esi,ebx
  429e33:	mov    edx,eax
  429e35:	call   429f90 <strcmp@plt+0x267f8>
  429e3a:	test   rax,rax
  429e3d:	je     429eab <strcmp@plt+0x26713>
  429e3f:	mov    rbx,rax
  429e42:	mov    rdi,rax
  429e45:	mov    rsi,r15
  429e48:	call   428880 <strcmp@plt+0x250e8>
  429e4d:	cmp    eax,0x1
  429e50:	jne    429eab <strcmp@plt+0x26713>
  429e52:	cmp    DWORD PTR [rbx+0x18],0x0
  429e56:	jne    429e64 <strcmp@plt+0x266cc>
  429e58:	mov    rsi,QWORD PTR [r14+0x28]
  429e5c:	mov    rdi,rbx
  429e5f:	call   42bf10 <strcmp@plt+0x28778>
  429e64:	cmp    DWORD PTR [r12+0x18],0x0
  429e6a:	je     429e71 <strcmp@plt+0x266d9>
  429e6c:	dec    WORD PTR [r14+0x20]
  429e71:	lea    rax,[rip+0x3af48]        # 464dc0 <strcmp@plt+0x61628>
  429e78:	cmp    DWORD PTR [rax],0x2
  429e7b:	jl     429ed5 <strcmp@plt+0x2673d>
  429e7d:	mov    rdi,QWORD PTR [r15]
  429e80:	call   422e20 <strcmp@plt+0x1f688>
  429e85:	mov    rbx,rax
  429e88:	mov    rdi,r14
  429e8b:	call   422e20 <strcmp@plt+0x1f688>
  429e90:	lea    rsi,[rip+0x2103f]        # 44aed6 <strcmp@plt+0x4773e>
  429e97:	mov    edi,0x6
  429e9c:	mov    rdx,rbx
  429e9f:	mov    rcx,rax
  429ea2:	xor    eax,eax
  429ea4:	call   42e520 <strcmp@plt+0x2ad88>
  429ea9:	jmp    429ed5 <strcmp@plt+0x2673d>
  429eab:	lea    rax,[rip+0x3af0e]        # 464dc0 <strcmp@plt+0x61628>
  429eb2:	cmp    DWORD PTR [rax],0x2
  429eb5:	jl     429ed5 <strcmp@plt+0x2673d>
  429eb7:	mov    rdi,QWORD PTR [r15]
  429eba:	call   422e20 <strcmp@plt+0x1f688>
  429ebf:	lea    rsi,[rip+0x20fbb]        # 44ae81 <strcmp@plt+0x476e9>
  429ec6:	mov    edi,0x6
  429ecb:	mov    rdx,rax
  429ece:	xor    eax,eax
  429ed0:	call   42e520 <strcmp@plt+0x2ad88>
  429ed5:	mov    eax,0x1
  429eda:	add    rsp,0x8
  429ede:	pop    rbx
  429edf:	pop    r12
  429ee1:	pop    r14
  429ee3:	pop    r15
  429ee5:	ret    
  429ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429ef0:	push   rbx
  429ef1:	mov    rbx,rdi
  429ef4:	mov    rdi,QWORD PTR [rdi+0x28]
  429ef8:	call   42bf80 <strcmp@plt+0x287e8>
  429efd:	mov    WORD PTR [rbx+0x20],0x0
  429f03:	pop    rbx
  429f04:	ret    
  429f05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429f0f:	nop
  429f10:	push   rbp
  429f11:	push   r15
  429f13:	push   r14
  429f15:	push   r12
  429f17:	push   rbx
  429f18:	test   rdi,rdi
  429f1b:	je     429f80 <strcmp@plt+0x267e8>
  429f1d:	mov    r15,rsi
  429f20:	test   rsi,rsi
  429f23:	je     429f80 <strcmp@plt+0x267e8>
  429f25:	mov    r14,rdi
  429f28:	mov    rdi,QWORD PTR [rdi+0x28]
  429f2c:	call   42bf80 <strcmp@plt+0x287e8>
  429f31:	mov    rbp,QWORD PTR [r15+0x8]
  429f35:	xor    r12d,r12d
  429f38:	cmp    rbp,r15
  429f3b:	jne    429f4c <strcmp@plt+0x267b4>
  429f3d:	jmp    429f7b <strcmp@plt+0x267e3>
  429f3f:	nop
  429f40:	add    r12d,eax
  429f43:	mov    rbp,QWORD PTR [rbp+0x8]
  429f47:	cmp    rbp,r15
  429f4a:	je     429f7b <strcmp@plt+0x267e3>
  429f4c:	mov    rdi,QWORD PTR [rbp+0x10]
  429f50:	call   4288d0 <strcmp@plt+0x25138>
  429f55:	mov    rbx,rax
  429f58:	mov    rsi,QWORD PTR [r14+0x28]
  429f5c:	mov    rdi,rax
  429f5f:	call   42baa0 <strcmp@plt+0x28308>
  429f64:	mov    rax,QWORD PTR [rbx+0x8]
  429f68:	mov    rax,QWORD PTR [rax+0x10]
  429f6c:	mov    rax,QWORD PTR [rax]
  429f6f:	mov    eax,DWORD PTR [rax+0x18]
  429f72:	test   eax,eax
  429f74:	je     429f40 <strcmp@plt+0x267a8>
  429f76:	mov    eax,DWORD PTR [rbx+0x18]
  429f79:	jmp    429f40 <strcmp@plt+0x267a8>
  429f7b:	mov    WORD PTR [r14+0x20],r12w
  429f80:	pop    rbx
  429f81:	pop    r12
  429f83:	pop    r14
  429f85:	pop    r15
  429f87:	pop    rbp
  429f88:	ret    
  429f89:	nop    DWORD PTR [rax+0x0]
  429f90:	push   rbp
  429f91:	push   r15
  429f93:	push   r14
  429f95:	push   r13
  429f97:	push   r12
  429f99:	push   rbx
  429f9a:	push   rax
  429f9b:	mov    DWORD PTR [rsp+0x4],edx
  429f9f:	mov    r12d,esi
  429fa2:	mov    rax,QWORD PTR [rdi+0x28]
  429fa6:	mov    rbp,QWORD PTR [rax+0x8]
  429faa:	cmp    rbp,rax
  429fad:	je     42a00b <strcmp@plt+0x26873>
  429faf:	mov    r15,rdi
  429fb2:	mov    r13d,r12d
  429fb5:	lea    r14,[rip+0x20cb4]        # 44ac70 <strcmp@plt+0x474d8>
  429fbc:	jmp    429fda <strcmp@plt+0x26842>
  429fbe:	call   422ef0 <strcmp@plt+0x1f758>
  429fc3:	movzx  eax,ax
  429fc6:	cmp    eax,DWORD PTR [rsp+0x4]
  429fca:	je     42a037 <strcmp@plt+0x2689f>
  429fcc:	nop    DWORD PTR [rax+0x0]
  429fd0:	mov    rbp,QWORD PTR [rbp+0x8]
  429fd4:	cmp    rbp,QWORD PTR [r15+0x28]
  429fd8:	je     42a00b <strcmp@plt+0x26873>
  429fda:	mov    rbx,QWORD PTR [rbp+0x10]
  429fde:	mov    rax,QWORD PTR [rbx+0x8]
  429fe2:	mov    rax,QWORD PTR [rax+0x10]
  429fe6:	mov    rdi,QWORD PTR [rax]
  429fe9:	cmp    DWORD PTR [rdi+0x18],r12d
  429fed:	jne    429fd0 <strcmp@plt+0x26838>
  429fef:	cmp    r12d,0x3
  429ff3:	ja     429fd0 <strcmp@plt+0x26838>
  429ff5:	movsxd rax,DWORD PTR [r14+r13*4]
  429ff9:	add    rax,r14
  429ffc:	jmp    rax
  429ffe:	call   423020 <strcmp@plt+0x1f888>
  42a003:	cmp    eax,DWORD PTR [rsp+0x4]
  42a007:	jne    429fd0 <strcmp@plt+0x26838>
  42a009:	jmp    42a037 <strcmp@plt+0x2689f>
  42a00b:	lea    rax,[rip+0x3adae]        # 464dc0 <strcmp@plt+0x61628>
  42a012:	cmp    DWORD PTR [rax],0x3
  42a015:	jge    42a01b <strcmp@plt+0x26883>
  42a017:	xor    ebx,ebx
  42a019:	jmp    42a037 <strcmp@plt+0x2689f>
  42a01b:	lea    rsi,[rip+0x20a1e]        # 44aa40 <strcmp@plt+0x472a8>
  42a022:	xor    ebx,ebx
  42a024:	mov    edi,0x7
  42a029:	mov    edx,r12d
  42a02c:	mov    ecx,DWORD PTR [rsp+0x4]
  42a030:	xor    eax,eax
  42a032:	call   42e520 <strcmp@plt+0x2ad88>
  42a037:	mov    rax,rbx
  42a03a:	add    rsp,0x8
  42a03e:	pop    rbx
  42a03f:	pop    r12
  42a041:	pop    r13
  42a043:	pop    r14
  42a045:	pop    r15
  42a047:	pop    rbp
  42a048:	ret    
  42a049:	lea    rax,[rip+0x3ad70]        # 464dc0 <strcmp@plt+0x61628>
  42a050:	cmp    DWORD PTR [rax],0x0
  42a053:	jle    42a017 <strcmp@plt+0x2687f>
  42a055:	lea    rsi,[rip+0x20ecf]        # 44af2b <strcmp@plt+0x47793>
  42a05c:	xor    ebx,ebx
  42a05e:	mov    edi,0x5
  42a063:	xor    eax,eax
  42a065:	call   42e520 <strcmp@plt+0x2ad88>
  42a06a:	jmp    42a037 <strcmp@plt+0x2689f>
  42a06c:	nop    DWORD PTR [rax+0x0]
  42a070:	push   rbp
  42a071:	push   r15
  42a073:	push   r14
  42a075:	push   rbx
  42a076:	push   rax
  42a077:	mov    r14,rsi
  42a07a:	mov    r15,rdi
  42a07d:	mov    rbx,QWORD PTR [rsi]
  42a080:	mov    ebp,DWORD PTR [rbx+0x18]
  42a083:	mov    rdi,rbx
  42a086:	call   423980 <strcmp@plt+0x201e8>
  42a08b:	mov    rdi,r15
  42a08e:	mov    esi,ebp
  42a090:	mov    edx,eax
  42a092:	call   429f90 <strcmp@plt+0x267f8>
  42a097:	xor    ecx,ecx
  42a099:	test   rax,rax
  42a09c:	je     42a0d5 <strcmp@plt+0x2693d>
  42a09e:	test   rbx,rbx
  42a0a1:	je     42a0d5 <strcmp@plt+0x2693d>
  42a0a3:	cmp    DWORD PTR [rax+0x18],0x0
  42a0a7:	je     42a0d5 <strcmp@plt+0x2693d>
  42a0a9:	mov    rcx,QWORD PTR [rax+0x8]
  42a0ad:	cmp    rcx,rax
  42a0b0:	je     42a0cf <strcmp@plt+0x26937>
  42a0b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0bc:	nop    DWORD PTR [rax+0x0]
  42a0c0:	cmp    QWORD PTR [rcx+0x10],r14
  42a0c4:	je     42a0d3 <strcmp@plt+0x2693b>
  42a0c6:	mov    rcx,QWORD PTR [rcx+0x8]
  42a0ca:	cmp    rcx,rax
  42a0cd:	jne    42a0c0 <strcmp@plt+0x26928>
  42a0cf:	xor    ecx,ecx
  42a0d1:	jmp    42a0d5 <strcmp@plt+0x2693d>
  42a0d3:	mov    cl,0x1
  42a0d5:	mov    eax,ecx
  42a0d7:	add    rsp,0x8
  42a0db:	pop    rbx
  42a0dc:	pop    r14
  42a0de:	pop    r15
  42a0e0:	pop    rbp
  42a0e1:	ret    
  42a0e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0ec:	nop    DWORD PTR [rax+0x0]
  42a0f0:	push   rbp
  42a0f1:	push   r14
  42a0f3:	push   rbx
  42a0f4:	mov    rbx,rsi
  42a0f7:	mov    r14,rdi
  42a0fa:	mov    ebp,DWORD PTR [rsi+0x18]
  42a0fd:	mov    rdi,rsi
  42a100:	call   423980 <strcmp@plt+0x201e8>
  42a105:	mov    rdi,r14
  42a108:	mov    esi,ebp
  42a10a:	mov    edx,eax
  42a10c:	call   429f90 <strcmp@plt+0x267f8>
  42a111:	mov    r14,rax
  42a114:	mov    rdi,rax
  42a117:	mov    rsi,rbx
  42a11a:	call   428810 <strcmp@plt+0x25078>
  42a11f:	test   rax,rax
  42a122:	je     42a133 <strcmp@plt+0x2699b>
  42a124:	mov    rdi,rax
  42a127:	mov    rsi,r14
  42a12a:	pop    rbx
  42a12b:	pop    r14
  42a12d:	pop    rbp
  42a12e:	jmp    42baa0 <strcmp@plt+0x28308>
  42a133:	xor    eax,eax
  42a135:	pop    rbx
  42a136:	pop    r14
  42a138:	pop    rbp
  42a139:	ret    
  42a13a:	nop    WORD PTR [rax+rax*1+0x0]
  42a140:	push   r15
  42a142:	push   r14
  42a144:	push   r13
  42a146:	push   r12
  42a148:	push   rbx
  42a149:	mov    r14,rdi
  42a14c:	lea    rdi,[rip+0xffffffffffff8b3d]        # 422c90 <strcmp@plt+0x1f4f8>
  42a153:	call   42b9b0 <strcmp@plt+0x28218>
  42a158:	mov    r12,rax
  42a15b:	mov    rax,QWORD PTR [r14+0x28]
  42a15f:	mov    r15,QWORD PTR [rax+0x8]
  42a163:	cmp    r15,rax
  42a166:	jne    42a179 <strcmp@plt+0x269e1>
  42a168:	jmp    42a1b6 <strcmp@plt+0x26a1e>
  42a16a:	nop    WORD PTR [rax+rax*1+0x0]
  42a170:	mov    r15,QWORD PTR [r15+0x8]
  42a174:	cmp    r15,rax
  42a177:	je     42a1b6 <strcmp@plt+0x26a1e>
  42a179:	mov    r13,QWORD PTR [r15+0x10]
  42a17d:	cmp    DWORD PTR [r13+0x18],0x0
  42a182:	je     42a170 <strcmp@plt+0x269d8>
  42a184:	mov    rbx,QWORD PTR [r13+0x8]
  42a188:	cmp    rbx,r13
  42a18b:	je     42a170 <strcmp@plt+0x269d8>
  42a18d:	nop    DWORD PTR [rax]
  42a190:	mov    rax,QWORD PTR [rbx+0x10]
  42a194:	mov    rdi,QWORD PTR [rax]
  42a197:	call   423440 <strcmp@plt+0x1fca8>
  42a19c:	mov    rdi,rax
  42a19f:	mov    rsi,r12
  42a1a2:	call   42bbd0 <strcmp@plt+0x28438>
  42a1a7:	mov    rbx,QWORD PTR [rbx+0x8]
  42a1ab:	cmp    rbx,r13
  42a1ae:	jne    42a190 <strcmp@plt+0x269f8>
  42a1b0:	mov    rax,QWORD PTR [r14+0x28]
  42a1b4:	jmp    42a170 <strcmp@plt+0x269d8>
  42a1b6:	mov    rax,r12
  42a1b9:	pop    rbx
  42a1ba:	pop    r12
  42a1bc:	pop    r13
  42a1be:	pop    r14
  42a1c0:	pop    r15
  42a1c2:	ret    
  42a1c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a1cd:	nop    DWORD PTR [rax]
  42a1d0:	mov    QWORD PTR [rdi+0x4],0x0
  42a1d8:	mov    DWORD PTR [rdi],0x10
  42a1de:	ret    
  42a1df:	nop
  42a1e0:	mov    QWORD PTR [rdi+0x4],0x0
  42a1e8:	mov    DWORD PTR [rdi],0x20
  42a1ee:	ret    
  42a1ef:	nop
  42a1f0:	mov    al,BYTE PTR [rdi+0x2]
  42a1f3:	mov    QWORD PTR [rdi+0x4],0x0
  42a1fb:	mov    BYTE PTR [rdi+0x3],0x0
  42a1ff:	mov    WORD PTR [rdi],0x30
  42a204:	and    al,0x2
  42a206:	or     al,0x1
  42a208:	mov    BYTE PTR [rdi+0x2],al
  42a20b:	ret    
  42a20c:	nop    DWORD PTR [rax+0x0]
  42a210:	mov    BYTE PTR [rdi+0x3],0x0
  42a214:	mov    QWORD PTR [rdi+0x4],0x0
  42a21c:	mov    BYTE PTR [rdi],0x40
  42a21f:	mov    WORD PTR [rdi+0x1],0x0
  42a225:	ret    
  42a226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a230:	mov    DWORD PTR [rdi],0x80
  42a236:	ret    
  42a237:	nop    WORD PTR [rax+rax*1+0x0]
  42a240:	mov    QWORD PTR [rdi+0x4],0x0
  42a248:	mov    DWORD PTR [rdi],0x70
  42a24e:	ret    
  42a24f:	nop
  42a250:	mov    DWORD PTR [rdi],0x0
  42a256:	mov    WORD PTR [rdi+0x4],0x0
  42a25c:	ret    
  42a25d:	nop    DWORD PTR [rax]
  42a260:	mov    QWORD PTR [rdi+0x4],0x0
  42a268:	mov    DWORD PTR [rdi],0x60
  42a26e:	ret    
  42a26f:	nop
  42a270:	push   rbp
  42a271:	push   r14
  42a273:	push   rbx
  42a274:	mov    rbx,rdi
  42a277:	mov    BYTE PTR [rip+0x44562],0x0        # 46e7e0 <strcmp@plt+0x6b048>
  42a27e:	lea    r14,[rip+0x4455b]        # 46e7e0 <strcmp@plt+0x6b048>
  42a285:	movzx  ebp,WORD PTR [rdi]
  42a288:	mov    rdi,r14
  42a28b:	call   4031e0 <strlen@plt>
  42a290:	add    rax,r14
  42a293:	test   bpl,0x8
  42a297:	jne    42a2a5 <strcmp@plt+0x26b0d>
  42a299:	mov    BYTE PTR [rax+0x4],0x0
  42a29d:	mov    DWORD PTR [rax],0x2c303d61
  42a2a3:	jmp    42a2af <strcmp@plt+0x26b17>
  42a2a5:	mov    BYTE PTR [rax+0x4],0x0
  42a2a9:	mov    DWORD PTR [rax],0x2c313d61
  42a2af:	movzx  ebp,WORD PTR [rbx]
  42a2b2:	mov    rdi,r14
  42a2b5:	call   4031e0 <strlen@plt>
  42a2ba:	add    rax,r14
  42a2bd:	test   bpl,0x4
  42a2c1:	jne    42a2cf <strcmp@plt+0x26b37>
  42a2c3:	mov    BYTE PTR [rax+0x4],0x0
  42a2c7:	mov    DWORD PTR [rax],0x2c303d6d
  42a2cd:	jmp    42a2d9 <strcmp@plt+0x26b41>
  42a2cf:	mov    BYTE PTR [rax+0x4],0x0
  42a2d3:	mov    DWORD PTR [rax],0x2c313d6d
  42a2d9:	movzx  ebp,WORD PTR [rbx]
  42a2dc:	mov    rdi,r14
  42a2df:	call   4031e0 <strlen@plt>
  42a2e4:	add    rax,r14
  42a2e7:	test   bpl,0x2
  42a2eb:	jne    42a2f9 <strcmp@plt+0x26b61>
  42a2ed:	mov    BYTE PTR [rax+0x4],0x0
  42a2f1:	mov    DWORD PTR [rax],0x2c303d70
  42a2f7:	jmp    42a303 <strcmp@plt+0x26b6b>
  42a2f9:	mov    BYTE PTR [rax+0x4],0x0
  42a2fd:	mov    DWORD PTR [rax],0x2c313d70
  42a303:	movzx  ebp,WORD PTR [rbx]
  42a306:	mov    rdi,r14
  42a309:	call   4031e0 <strlen@plt>
  42a30e:	add    rax,r14
  42a311:	test   bpl,0x1
  42a315:	jne    42a323 <strcmp@plt+0x26b8b>
  42a317:	mov    BYTE PTR [rax+0x4],0x0
  42a31b:	mov    DWORD PTR [rax],0x2c303d73
  42a321:	jmp    42a32d <strcmp@plt+0x26b95>
  42a323:	mov    BYTE PTR [rax+0x4],0x0
  42a327:	mov    DWORD PTR [rax],0x2c313d73
  42a32d:	movzx  ebp,WORD PTR [rbx]
  42a330:	mov    rdi,r14
  42a333:	call   4031e0 <strlen@plt>
  42a338:	add    rax,r14
  42a33b:	test   bp,bp
  42a33e:	js     42a34c <strcmp@plt+0x26bb4>
  42a340:	mov    BYTE PTR [rax+0x4],0x0
  42a344:	mov    DWORD PTR [rax],0x2c303d50
  42a34a:	jmp    42a356 <strcmp@plt+0x26bbe>
  42a34c:	mov    BYTE PTR [rax+0x4],0x0
  42a350:	mov    DWORD PTR [rax],0x2c313d50
  42a356:	movzx  ebx,WORD PTR [rbx]
  42a359:	and    ebx,0x4000
  42a35f:	mov    rdi,r14
  42a362:	call   4031e0 <strlen@plt>
  42a367:	lea    ecx,[rbx*4+0x303d53]
  42a36e:	mov    DWORD PTR [rax+r14*1],ecx
  42a372:	mov    rax,r14
  42a375:	pop    rbx
  42a376:	pop    r14
  42a378:	pop    rbp
  42a379:	ret    
  42a37a:	nop    WORD PTR [rax+rax*1+0x0]
  42a380:	push   rbp
  42a381:	push   r15
  42a383:	push   r14
  42a385:	push   rbx
  42a386:	push   rax
  42a387:	test   rdi,rdi
  42a38a:	je     42a3e0 <strcmp@plt+0x26c48>
  42a38c:	mov    rbx,rdi
  42a38f:	mov    BYTE PTR [rip+0x4446a],0x0        # 46e800 <strcmp@plt+0x6b068>
  42a396:	lea    r14,[rip+0x44463]        # 46e800 <strcmp@plt+0x6b068>
  42a39d:	call   42a270 <strcmp@plt+0x26ad8>
  42a3a2:	movzx  ebp,BYTE PTR [rbx+0x2]
  42a3a6:	and    ebp,0x1f
  42a3a9:	movzx  r15d,BYTE PTR [rbx+0x3]
  42a3ae:	mov    rdi,QWORD PTR [rbx+0x4]
  42a3b2:	call   431f10 <strcmp@plt+0x2e778>
  42a3b7:	mov    QWORD PTR [rsp],rax
  42a3bb:	lea    rdx,[rip+0x20bd6]        # 44af98 <strcmp@plt+0x47800>
  42a3c2:	lea    rcx,[rip+0x44417]        # 46e7e0 <strcmp@plt+0x6b048>
  42a3c9:	mov    esi,0x78
  42a3ce:	mov    rdi,r14
  42a3d1:	mov    r8d,ebp
  42a3d4:	mov    r9d,r15d
  42a3d7:	xor    eax,eax
  42a3d9:	call   403630 <snprintf@plt>
  42a3de:	jmp    42a3e3 <strcmp@plt+0x26c4b>
  42a3e0:	xor    r14d,r14d
  42a3e3:	mov    rax,r14
  42a3e6:	add    rsp,0x8
  42a3ea:	pop    rbx
  42a3eb:	pop    r14
  42a3ed:	pop    r15
  42a3ef:	pop    rbp
  42a3f0:	ret    
  42a3f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a3fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42a400:	push   rbp
  42a401:	push   r14
  42a403:	push   rbx
  42a404:	mov    rbx,rdi
  42a407:	mov    BYTE PTR [rip+0x4446a],0x0        # 46e878 <strcmp@plt+0x6b0e0>
  42a40e:	lea    r14,[rip+0x44463]        # 46e878 <strcmp@plt+0x6b0e0>
  42a415:	mov    bpl,BYTE PTR [rdi]
  42a418:	mov    rdi,r14
  42a41b:	call   4031e0 <strlen@plt>
  42a420:	add    rax,r14
  42a423:	test   bpl,0x8
  42a427:	jne    42a435 <strcmp@plt+0x26c9d>
  42a429:	mov    BYTE PTR [rax+0x4],0x0
  42a42d:	mov    DWORD PTR [rax],0x2c303d50
  42a433:	jmp    42a43f <strcmp@plt+0x26ca7>
  42a435:	mov    BYTE PTR [rax+0x4],0x0
  42a439:	mov    DWORD PTR [rax],0x2c313d50
  42a43f:	mov    bpl,BYTE PTR [rbx]
  42a442:	mov    rdi,r14
  42a445:	call   4031e0 <strlen@plt>
  42a44a:	add    rax,r14
  42a44d:	test   bpl,0x4
  42a451:	jne    42a45f <strcmp@plt+0x26cc7>
  42a453:	mov    BYTE PTR [rax+0x4],0x0
  42a457:	mov    DWORD PTR [rax],0x2c303d45
  42a45d:	jmp    42a469 <strcmp@plt+0x26cd1>
  42a45f:	mov    BYTE PTR [rax+0x4],0x0
  42a463:	mov    DWORD PTR [rax],0x2c313d45
  42a469:	mov    bl,BYTE PTR [rbx]
  42a46b:	and    bl,0x2
  42a46e:	shr    bl,1
  42a470:	mov    rdi,r14
  42a473:	call   4031e0 <strlen@plt>
  42a478:	movzx  ecx,bl
  42a47b:	shl    ecx,0x10
  42a47e:	or     ecx,0x303d53
  42a484:	mov    DWORD PTR [rax+r14*1],ecx
  42a488:	mov    rax,r14
  42a48b:	pop    rbx
  42a48c:	pop    r14
  42a48e:	pop    rbp
  42a48f:	ret    
  42a490:	push   rbp
  42a491:	push   r15
  42a493:	push   r14
  42a495:	push   rbx
  42a496:	push   rax
  42a497:	test   rdi,rdi
  42a49a:	je     42a4cb <strcmp@plt+0x26d33>
  42a49c:	mov    rbp,rdi
  42a49f:	mov    BYTE PTR [rip+0x443d2],0x0        # 46e878 <strcmp@plt+0x6b0e0>
  42a4a6:	lea    r14,[rip+0x443cb]        # 46e878 <strcmp@plt+0x6b0e0>
  42a4ad:	mov    bl,BYTE PTR [rdi]
  42a4af:	mov    rdi,r14
  42a4b2:	call   4031e0 <strlen@plt>
  42a4b7:	add    rax,r14
  42a4ba:	test   bl,0x8
  42a4bd:	jne    42a4d2 <strcmp@plt+0x26d3a>
  42a4bf:	mov    BYTE PTR [rax+0x4],0x0
  42a4c3:	mov    DWORD PTR [rax],0x2c303d50
  42a4c9:	jmp    42a4dc <strcmp@plt+0x26d44>
  42a4cb:	xor    ebx,ebx
  42a4cd:	jmp    42a559 <strcmp@plt+0x26dc1>
  42a4d2:	mov    BYTE PTR [rax+0x4],0x0
  42a4d6:	mov    DWORD PTR [rax],0x2c313d50
  42a4dc:	mov    bl,BYTE PTR [rbp+0x0]
  42a4df:	mov    rdi,r14
  42a4e2:	call   4031e0 <strlen@plt>
  42a4e7:	add    rax,r14
  42a4ea:	test   bl,0x4
  42a4ed:	jne    42a4fb <strcmp@plt+0x26d63>
  42a4ef:	mov    BYTE PTR [rax+0x4],0x0
  42a4f3:	mov    DWORD PTR [rax],0x2c303d45
  42a4f9:	jmp    42a505 <strcmp@plt+0x26d6d>
  42a4fb:	mov    BYTE PTR [rax+0x4],0x0
  42a4ff:	mov    DWORD PTR [rax],0x2c313d45
  42a505:	mov    bl,BYTE PTR [rbp+0x0]
  42a508:	and    bl,0x2
  42a50b:	shr    bl,1
  42a50d:	mov    rdi,r14
  42a510:	call   4031e0 <strlen@plt>
  42a515:	movzx  ecx,bl
  42a518:	shl    ecx,0x10
  42a51b:	or     ecx,0x303d53
  42a521:	mov    DWORD PTR [rax+r14*1],ecx
  42a525:	movzx  r15d,BYTE PTR [rbp+0x3]
  42a52a:	mov    rdi,QWORD PTR [rbp+0x4]
  42a52e:	call   431f10 <strcmp@plt+0x2e778>
  42a533:	lea    rbx,[rip+0x44356]        # 46e890 <strcmp@plt+0x6b0f8>
  42a53a:	lea    rdx,[rip+0x20aac]        # 44afed <strcmp@plt+0x47855>
  42a541:	mov    esi,0x64
  42a546:	mov    rdi,rbx
  42a549:	mov    rcx,r14
  42a54c:	mov    r8d,r15d
  42a54f:	mov    r9,rax
  42a552:	xor    eax,eax
  42a554:	call   403630 <snprintf@plt>
  42a559:	mov    rax,rbx
  42a55c:	add    rsp,0x8
  42a560:	pop    rbx
  42a561:	pop    r14
  42a563:	pop    r15
  42a565:	pop    rbp
  42a566:	ret    
  42a567:	nop    WORD PTR [rax+rax*1+0x0]
  42a570:	push   r14
  42a572:	push   rbx
  42a573:	push   rax
  42a574:	test   rdi,rdi
  42a577:	je     42a5b7 <strcmp@plt+0x26e1f>
  42a579:	mov    BYTE PTR [rip+0x44380],0x0        # 46e900 <strcmp@plt+0x6b168>
  42a580:	lea    r14,[rip+0x44379]        # 46e900 <strcmp@plt+0x6b168>
  42a587:	test   BYTE PTR [rdi],0x8
  42a58a:	mov    rdi,QWORD PTR [rdi+0x4]
  42a58e:	lea    rax,[rip+0x20a93]        # 44b028 <strcmp@plt+0x47890>
  42a595:	lea    rbx,[rip+0x20aae]        # 44b04a <strcmp@plt+0x478b2>
  42a59c:	cmove  rbx,rax
  42a5a0:	call   431f10 <strcmp@plt+0x2e778>
  42a5a5:	mov    rdi,r14
  42a5a8:	mov    rsi,rbx
  42a5ab:	mov    rdx,rax
  42a5ae:	xor    eax,eax
  42a5b0:	call   4030b0 <sprintf@plt>
  42a5b5:	jmp    42a5ba <strcmp@plt+0x26e22>
  42a5b7:	xor    r14d,r14d
  42a5ba:	mov    rax,r14
  42a5bd:	add    rsp,0x8
  42a5c1:	pop    rbx
  42a5c2:	pop    r14
  42a5c4:	ret    
  42a5c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a5cf:	nop
  42a5d0:	push   rbp
  42a5d1:	push   r14
  42a5d3:	push   rbx
  42a5d4:	mov    rbx,rdi
  42a5d7:	mov    BYTE PTR [rip+0x44386],0x0        # 46e964 <strcmp@plt+0x6b1cc>
  42a5de:	test   BYTE PTR [rdi],0x8
  42a5e1:	jne    42a5fb <strcmp@plt+0x26e63>
  42a5e3:	lea    r14,[rip+0x4437a]        # 46e964 <strcmp@plt+0x6b1cc>
  42a5ea:	mov    rdi,r14
  42a5ed:	call   4031e0 <strlen@plt>
  42a5f2:	mov    WORD PTR [rax+r14*1],0x70
  42a5f9:	jmp    42a604 <strcmp@plt+0x26e6c>
  42a5fb:	mov    WORD PTR [rip+0x44360],0x50        # 46e964 <strcmp@plt+0x6b1cc>
  42a604:	xor    ebp,ebp
  42a606:	test   BYTE PTR [rbx],0x2
  42a609:	sete   bpl
  42a60d:	lea    r14,[rip+0x44350]        # 46e964 <strcmp@plt+0x6b1cc>
  42a614:	mov    rdi,r14
  42a617:	call   4031e0 <strlen@plt>
  42a61c:	shl    ebp,0x5
  42a61f:	or     ebp,0x49
  42a622:	mov    WORD PTR [rax+r14*1],bp
  42a627:	xor    ebp,ebp
  42a629:	test   BYTE PTR [rbx],0x1
  42a62c:	sete   bpl
  42a630:	mov    rdi,r14
  42a633:	call   4031e0 <strlen@plt>
  42a638:	shl    ebp,0x5
  42a63b:	or     ebp,0x52
  42a63e:	mov    WORD PTR [rax+r14*1],bp
  42a643:	xor    ebp,ebp
  42a645:	test   BYTE PTR [rbx+0x2],0x1
  42a649:	sete   bpl
  42a64d:	mov    rdi,r14
  42a650:	call   4031e0 <strlen@plt>
  42a655:	shl    ebp,0x5
  42a658:	or     ebp,0x4d
  42a65b:	mov    WORD PTR [rax+r14*1],bp
  42a660:	mov    rax,r14
  42a663:	pop    rbx
  42a664:	pop    r14
  42a666:	pop    rbp
  42a667:	ret    
  42a668:	nop    DWORD PTR [rax+rax*1+0x0]
  42a670:	push   rbp
  42a671:	push   r14
  42a673:	push   rbx
  42a674:	test   rdi,rdi
  42a677:	je     42a6a7 <strcmp@plt+0x26f0f>
  42a679:	mov    rbx,rdi
  42a67c:	mov    BYTE PTR [rip+0x442ed],0x0        # 46e970 <strcmp@plt+0x6b1d8>
  42a683:	mov    BYTE PTR [rip+0x442da],0x0        # 46e964 <strcmp@plt+0x6b1cc>
  42a68a:	test   BYTE PTR [rdi],0x8
  42a68d:	jne    42a6ae <strcmp@plt+0x26f16>
  42a68f:	lea    r14,[rip+0x442ce]        # 46e964 <strcmp@plt+0x6b1cc>
  42a696:	mov    rdi,r14
  42a699:	call   4031e0 <strlen@plt>
  42a69e:	mov    WORD PTR [rax+r14*1],0x70
  42a6a5:	jmp    42a6b7 <strcmp@plt+0x26f1f>
  42a6a7:	xor    ebx,ebx
  42a6a9:	jmp    42a746 <strcmp@plt+0x26fae>
  42a6ae:	mov    WORD PTR [rip+0x442ad],0x50        # 46e964 <strcmp@plt+0x6b1cc>
  42a6b7:	xor    ebp,ebp
  42a6b9:	test   BYTE PTR [rbx],0x2
  42a6bc:	sete   bpl
  42a6c0:	lea    r14,[rip+0x4429d]        # 46e964 <strcmp@plt+0x6b1cc>
  42a6c7:	mov    rdi,r14
  42a6ca:	call   4031e0 <strlen@plt>
  42a6cf:	shl    ebp,0x5
  42a6d2:	or     ebp,0x49
  42a6d5:	mov    WORD PTR [rax+r14*1],bp
  42a6da:	xor    ebp,ebp
  42a6dc:	test   BYTE PTR [rbx],0x1
  42a6df:	sete   bpl
  42a6e3:	mov    rdi,r14
  42a6e6:	call   4031e0 <strlen@plt>
  42a6eb:	shl    ebp,0x5
  42a6ee:	or     ebp,0x52
  42a6f1:	mov    WORD PTR [rax+r14*1],bp
  42a6f6:	xor    ebp,ebp
  42a6f8:	test   BYTE PTR [rbx+0x2],0x1
  42a6fc:	sete   bpl
  42a700:	mov    rdi,r14
  42a703:	call   4031e0 <strlen@plt>
  42a708:	shl    ebp,0x5
  42a70b:	or     ebp,0x4d
  42a70e:	mov    WORD PTR [rax+r14*1],bp
  42a713:	movzx  ebp,BYTE PTR [rbx+0x3]
  42a717:	mov    rdi,QWORD PTR [rbx+0x4]
  42a71b:	call   431f10 <strcmp@plt+0x2e778>
  42a720:	lea    rbx,[rip+0x44249]        # 46e970 <strcmp@plt+0x6b1d8>
  42a727:	lea    rdx,[rip+0x2093c]        # 44b06a <strcmp@plt+0x478d2>
  42a72e:	mov    esi,0x64
  42a733:	mov    rdi,rbx
  42a736:	mov    rcx,r14
  42a739:	mov    r8d,ebp
  42a73c:	mov    r9,rax
  42a73f:	xor    eax,eax
  42a741:	call   403630 <snprintf@plt>
  42a746:	mov    rax,rbx
  42a749:	pop    rbx
  42a74a:	pop    r14
  42a74c:	pop    rbp
  42a74d:	ret    
  42a74e:	xchg   ax,ax
  42a750:	push   rbp
  42a751:	push   rbx
  42a752:	push   rax
  42a753:	xor    eax,eax
  42a755:	test   BYTE PTR [rdi],0x8
  42a758:	sete   al
  42a75b:	shl    eax,0x5
  42a75e:	or     eax,0x49
  42a761:	mov    WORD PTR [rip+0x4426c],ax        # 46e9d4 <strcmp@plt+0x6b23c>
  42a768:	lea    rbx,[rip+0x44265]        # 46e9d4 <strcmp@plt+0x6b23c>
  42a76f:	xor    ebp,ebp
  42a771:	test   BYTE PTR [rdi],0x4
  42a774:	sete   bpl
  42a778:	mov    rdi,rbx
  42a77b:	call   4031e0 <strlen@plt>
  42a780:	shl    ebp,0x5
  42a783:	or     ebp,0x52
  42a786:	mov    WORD PTR [rax+rbx*1],bp
  42a78a:	mov    rax,rbx
  42a78d:	add    rsp,0x8
  42a791:	pop    rbx
  42a792:	pop    rbp
  42a793:	ret    
  42a794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a79e:	xchg   ax,ax
  42a7a0:	push   rbp
  42a7a1:	push   r15
  42a7a3:	push   r14
  42a7a5:	push   rbx
  42a7a6:	push   rax
  42a7a7:	test   rdi,rdi
  42a7aa:	je     42a823 <strcmp@plt+0x2708b>
  42a7ac:	mov    rbx,rdi
  42a7af:	mov    BYTE PTR [rip+0x4422a],0x0        # 46e9e0 <strcmp@plt+0x6b248>
  42a7b6:	lea    r14,[rip+0x44223]        # 46e9e0 <strcmp@plt+0x6b248>
  42a7bd:	xor    eax,eax
  42a7bf:	test   BYTE PTR [rdi],0x8
  42a7c2:	sete   al
  42a7c5:	shl    eax,0x5
  42a7c8:	or     eax,0x49
  42a7cb:	mov    WORD PTR [rip+0x44202],ax        # 46e9d4 <strcmp@plt+0x6b23c>
  42a7d2:	lea    r15,[rip+0x441fb]        # 46e9d4 <strcmp@plt+0x6b23c>
  42a7d9:	xor    ebp,ebp
  42a7db:	test   BYTE PTR [rdi],0x4
  42a7de:	sete   bpl
  42a7e2:	mov    rdi,r15
  42a7e5:	call   4031e0 <strlen@plt>
  42a7ea:	shl    ebp,0x5
  42a7ed:	or     ebp,0x52
  42a7f0:	mov    WORD PTR [rax+r15*1],bp
  42a7f5:	movzx  ebp,BYTE PTR [rbx+0x3]
  42a7f9:	mov    rdi,QWORD PTR [rbx+0x4]
  42a7fd:	call   431f10 <strcmp@plt+0x2e778>
  42a802:	lea    rdx,[rip+0x2089d]        # 44b0a6 <strcmp@plt+0x4790e>
  42a809:	mov    esi,0x64
  42a80e:	mov    rdi,r14
  42a811:	mov    rcx,r15
  42a814:	mov    r8d,ebp
  42a817:	mov    r9,rax
  42a81a:	xor    eax,eax
  42a81c:	call   403630 <snprintf@plt>
  42a821:	jmp    42a826 <strcmp@plt+0x2708e>
  42a823:	xor    r14d,r14d
  42a826:	mov    rax,r14
  42a829:	add    rsp,0x8
  42a82d:	pop    rbx
  42a82e:	pop    r14
  42a830:	pop    r15
  42a832:	pop    rbp
  42a833:	ret    
  42a834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a83e:	xchg   ax,ax
  42a840:	push   rbp
  42a841:	push   r14
  42a843:	push   rbx
  42a844:	mov    rbx,rdi
  42a847:	mov    BYTE PTR [rip+0x44202],0x0        # 46ea50 <strcmp@plt+0x6b2b8>
  42a84e:	test   BYTE PTR [rdi],0x8
  42a851:	jne    42a866 <strcmp@plt+0x270ce>
  42a853:	mov    BYTE PTR [rip+0x441fa],0x0        # 46ea54 <strcmp@plt+0x6b2bc>
  42a85a:	mov    DWORD PTR [rip+0x441ec],0x2c303d53        # 46ea50 <strcmp@plt+0x6b2b8>
  42a864:	jmp    42a877 <strcmp@plt+0x270df>
  42a866:	mov    BYTE PTR [rip+0x441e7],0x0        # 46ea54 <strcmp@plt+0x6b2bc>
  42a86d:	mov    DWORD PTR [rip+0x441d9],0x2c313d53        # 46ea50 <strcmp@plt+0x6b2b8>
  42a877:	movzx  ebp,WORD PTR [rbx]
  42a87a:	lea    r14,[rip+0x441cf]        # 46ea50 <strcmp@plt+0x6b2b8>
  42a881:	mov    rdi,r14
  42a884:	call   4031e0 <strlen@plt>
  42a889:	add    rax,r14
  42a88c:	test   bpl,0x4
  42a890:	jne    42a89e <strcmp@plt+0x27106>
  42a892:	mov    BYTE PTR [rax+0x4],0x0
  42a896:	mov    DWORD PTR [rax],0x2c303d44
  42a89c:	jmp    42a8a8 <strcmp@plt+0x27110>
  42a89e:	mov    BYTE PTR [rax+0x4],0x0
  42a8a2:	mov    DWORD PTR [rax],0x2c313d44
  42a8a8:	movzx  ebp,WORD PTR [rbx]
  42a8ab:	mov    rdi,r14
  42a8ae:	call   4031e0 <strlen@plt>
  42a8b3:	add    rax,r14
  42a8b6:	test   ebp,0x4000
  42a8bc:	jne    42a8ca <strcmp@plt+0x27132>
  42a8be:	mov    BYTE PTR [rax+0x4],0x0
  42a8c2:	mov    DWORD PTR [rax],0x2c303d52
  42a8c8:	jmp    42a8d4 <strcmp@plt+0x2713c>
  42a8ca:	mov    BYTE PTR [rax+0x4],0x0
  42a8ce:	mov    DWORD PTR [rax],0x2c313d52
  42a8d4:	movzx  ebx,WORD PTR [rbx]
  42a8d7:	shr    ebx,0xd
  42a8da:	and    ebx,0x1
  42a8dd:	mov    rdi,r14
  42a8e0:	call   4031e0 <strlen@plt>
  42a8e5:	shl    ebx,0x10
  42a8e8:	or     ebx,0x303d4e
  42a8ee:	mov    DWORD PTR [rax+r14*1],ebx
  42a8f2:	mov    rax,r14
  42a8f5:	pop    rbx
  42a8f6:	pop    r14
  42a8f8:	pop    rbp
  42a8f9:	ret    
  42a8fa:	nop    WORD PTR [rax+rax*1+0x0]
  42a900:	push   rbp
  42a901:	push   r14
  42a903:	push   rbx
  42a904:	test   rdi,rdi
  42a907:	je     42a92b <strcmp@plt+0x27193>
  42a909:	mov    rbx,rdi
  42a90c:	mov    BYTE PTR [rip+0x4413d],0x0        # 46ea50 <strcmp@plt+0x6b2b8>
  42a913:	test   BYTE PTR [rdi],0x8
  42a916:	jne    42a932 <strcmp@plt+0x2719a>
  42a918:	mov    BYTE PTR [rip+0x44135],0x0        # 46ea54 <strcmp@plt+0x6b2bc>
  42a91f:	mov    DWORD PTR [rip+0x44127],0x2c303d53        # 46ea50 <strcmp@plt+0x6b2b8>
  42a929:	jmp    42a943 <strcmp@plt+0x271ab>
  42a92b:	xor    ebx,ebx
  42a92d:	jmp    42a9de <strcmp@plt+0x27246>
  42a932:	mov    BYTE PTR [rip+0x4411b],0x0        # 46ea54 <strcmp@plt+0x6b2bc>
  42a939:	mov    DWORD PTR [rip+0x4410d],0x2c313d53        # 46ea50 <strcmp@plt+0x6b2b8>
  42a943:	movzx  ebp,WORD PTR [rbx]
  42a946:	lea    r14,[rip+0x44103]        # 46ea50 <strcmp@plt+0x6b2b8>
  42a94d:	mov    rdi,r14
  42a950:	call   4031e0 <strlen@plt>
  42a955:	add    rax,r14
  42a958:	test   bpl,0x4
  42a95c:	jne    42a96a <strcmp@plt+0x271d2>
  42a95e:	mov    BYTE PTR [rax+0x4],0x0
  42a962:	mov    DWORD PTR [rax],0x2c303d44
  42a968:	jmp    42a974 <strcmp@plt+0x271dc>
  42a96a:	mov    BYTE PTR [rax+0x4],0x0
  42a96e:	mov    DWORD PTR [rax],0x2c313d44
  42a974:	movzx  ebp,WORD PTR [rbx]
  42a977:	mov    rdi,r14
  42a97a:	call   4031e0 <strlen@plt>
  42a97f:	add    rax,r14
  42a982:	test   ebp,0x4000
  42a988:	jne    42a996 <strcmp@plt+0x271fe>
  42a98a:	mov    BYTE PTR [rax+0x4],0x0
  42a98e:	mov    DWORD PTR [rax],0x2c303d52
  42a994:	jmp    42a9a0 <strcmp@plt+0x27208>
  42a996:	mov    BYTE PTR [rax+0x4],0x0
  42a99a:	mov    DWORD PTR [rax],0x2c313d52
  42a9a0:	movzx  ebx,WORD PTR [rbx]
  42a9a3:	shr    ebx,0xd
  42a9a6:	and    ebx,0x1
  42a9a9:	mov    rdi,r14
  42a9ac:	call   4031e0 <strlen@plt>
  42a9b1:	shl    ebx,0x10
  42a9b4:	or     ebx,0x303d4e
  42a9ba:	mov    DWORD PTR [rax+r14*1],ebx
  42a9be:	lea    rbx,[rip+0x4409b]        # 46ea60 <strcmp@plt+0x6b2c8>
  42a9c5:	lea    rdx,[rip+0x20733]        # 44b0ff <strcmp@plt+0x47967>
  42a9cc:	mov    esi,0x32
  42a9d1:	mov    rdi,rbx
  42a9d4:	mov    rcx,r14
  42a9d7:	xor    eax,eax
  42a9d9:	call   403630 <snprintf@plt>
  42a9de:	mov    rax,rbx
  42a9e1:	pop    rbx
  42a9e2:	pop    r14
  42a9e4:	pop    rbp
  42a9e5:	ret    
  42a9e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a9f0:	push   rbx
  42a9f1:	test   rdi,rdi
  42a9f4:	je     42aa24 <strcmp@plt+0x2728c>
  42a9f6:	mov    BYTE PTR [rip+0x440a3],0x0        # 46eaa0 <strcmp@plt+0x6b308>
  42a9fd:	lea    rbx,[rip+0x4409c]        # 46eaa0 <strcmp@plt+0x6b308>
  42aa04:	movzx  ecx,BYTE PTR [rdi+0x3]
  42aa08:	mov    r8,QWORD PTR [rdi+0x4]
  42aa0c:	lea    rdx,[rip+0x20704]        # 44b117 <strcmp@plt+0x4797f>
  42aa13:	mov    esi,0x64
  42aa18:	mov    rdi,rbx
  42aa1b:	xor    eax,eax
  42aa1d:	call   403630 <snprintf@plt>
  42aa22:	jmp    42aa26 <strcmp@plt+0x2728e>
  42aa24:	xor    ebx,ebx
  42aa26:	mov    rax,rbx
  42aa29:	pop    rbx
  42aa2a:	ret    
  42aa2b:	nop    DWORD PTR [rax+rax*1+0x0]
  42aa30:	movzx  eax,WORD PTR [rdi]
  42aa33:	cmp    eax,0x340
  42aa38:	jne    42aa52 <strcmp@plt+0x272ba>
  42aa3a:	cmp    BYTE PTR [rdi+0x4],0x9
  42aa3e:	jne    42aa52 <strcmp@plt+0x272ba>
  42aa40:	mov    cl,BYTE PTR [rdi+0x5]
  42aa43:	mov    al,0x1
  42aa45:	test   cl,0x1
  42aa48:	jne    42aa51 <strcmp@plt+0x272b9>
  42aa4a:	shr    cl,1
  42aa4c:	and    cl,0x1
  42aa4f:	mov    eax,ecx
  42aa51:	ret    
  42aa52:	xor    eax,eax
  42aa54:	ret    
  42aa55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aa5f:	nop
  42aa60:	movzx  ecx,WORD PTR [rdi]
  42aa63:	xor    eax,eax
  42aa65:	cmp    ecx,0x340
  42aa6b:	jne    42aab3 <strcmp@plt+0x2731b>
  42aa6d:	cmp    BYTE PTR [rdi+0x4],0x9
  42aa71:	jne    42aab3 <strcmp@plt+0x2731b>
  42aa73:	mov    dil,BYTE PTR [rdi+0x5]
  42aa77:	mov    edx,edi
  42aa79:	and    dl,0x3
  42aa7c:	je     42aab3 <strcmp@plt+0x2731b>
  42aa7e:	mov    ecx,0x0
  42aa83:	mov    esi,0x0
  42aa88:	cmp    dl,0x3
  42aa8b:	je     42aab7 <strcmp@plt+0x2731f>
  42aa8d:	mov    ecx,edi
  42aa8f:	and    cl,0x1
  42aa92:	mov    edx,edi
  42aa94:	shr    dl,0x2
  42aa97:	and    dl,0x1
  42aa9a:	shr    dil,1
  42aa9d:	and    dil,0x1
  42aaa1:	movzx  eax,dil
  42aaa5:	shl    eax,0x10
  42aaa8:	movzx  ecx,cl
  42aaab:	shl    ecx,0x8
  42aaae:	movzx  esi,dl
  42aab1:	jmp    42aab7 <strcmp@plt+0x2731f>
  42aab3:	xor    ecx,ecx
  42aab5:	xor    esi,esi
  42aab7:	or     eax,esi
  42aab9:	or     eax,ecx
  42aabb:	ret    
  42aabc:	nop    DWORD PTR [rax+0x0]
  42aac0:	mov    al,BYTE PTR [rsi+0x1]
  42aac3:	mov    cl,BYTE PTR [rdi+0x5]
  42aac6:	and    al,0x1
  42aac8:	and    cl,0xfe
  42aacb:	or     cl,al
  42aacd:	mov    BYTE PTR [rdi+0x5],cl
  42aad0:	mov    al,BYTE PTR [rsi+0x2]
  42aad3:	add    al,al
  42aad5:	and    al,0x2
  42aad7:	and    cl,0xfd
  42aada:	or     cl,al
  42aadc:	mov    BYTE PTR [rdi+0x5],cl
  42aadf:	mov    al,BYTE PTR [rsi]
  42aae1:	shl    al,0x2
  42aae4:	and    al,0x4
  42aae6:	and    cl,0xfb
  42aae9:	or     cl,al
  42aaeb:	mov    BYTE PTR [rdi+0x5],cl
  42aaee:	ret    
  42aaef:	nop
  42aaf0:	movabs rax,0x1000010a000000
  42aafa:	mov    QWORD PTR [rdi],rax
  42aafd:	mov    WORD PTR [rdi+0x8],0x0
  42ab03:	ret    
  42ab04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ab0e:	xchg   ax,ax
  42ab10:	movabs rax,0x1000010a000000
  42ab1a:	mov    QWORD PTR [rdi],rax
  42ab1d:	mov    WORD PTR [rdi+0x8],0x0
  42ab23:	ret    
  42ab24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ab2e:	xchg   ax,ax
  42ab30:	mov    BYTE PTR [rip+0x43fd9],0x0        # 46eb10 <strcmp@plt+0x6b378>
  42ab37:	cmp    edi,0x3
  42ab3a:	ja     42ab70 <strcmp@plt+0x273d8>
  42ab3c:	mov    eax,edi
  42ab3e:	lea    rcx,[rip+0x20607]        # 44b14c <strcmp@plt+0x479b4>
  42ab45:	movsxd rax,DWORD PTR [rcx+rax*4]
  42ab49:	add    rax,rcx
  42ab4c:	jmp    rax
  42ab4e:	movabs rax,0x6f697463612d6f6e
  42ab58:	mov    QWORD PTR [rip+0x43fb1],rax        # 46eb10 <strcmp@plt+0x6b378>
  42ab5f:	mov    WORD PTR [rip+0x43fb0],0x6e        # 46eb18 <strcmp@plt+0x6b380>
  42ab68:	lea    rax,[rip+0x43fa1]        # 46eb10 <strcmp@plt+0x6b378>
  42ab6f:	ret    
  42ab70:	movabs rax,0x6e6f697463612d
  42ab7a:	mov    QWORD PTR [rip+0x43f96],rax        # 46eb17 <strcmp@plt+0x6b37f>
  42ab81:	movabs rax,0x2d6e776f6e6b6e75
  42ab8b:	jmp    42aba8 <strcmp@plt+0x27410>
  42ab8d:	movabs rax,0x64726177726f66
  42ab97:	mov    QWORD PTR [rip+0x43f79],rax        # 46eb17 <strcmp@plt+0x6b37f>
  42ab9e:	movabs rax,0x662d65766974616e
  42aba8:	mov    QWORD PTR [rip+0x43f61],rax        # 46eb10 <strcmp@plt+0x6b378>
  42abaf:	lea    rax,[rip+0x43f5a]        # 46eb10 <strcmp@plt+0x6b378>
  42abb6:	ret    
  42abb7:	vmovups xmm0,XMMWORD PTR [rip+0x205f6]        # 44b1b5 <strcmp@plt+0x47a1d>
  42abbf:	vmovaps XMMWORD PTR [rip+0x43f49],xmm0        # 46eb10 <strcmp@plt+0x6b378>
  42abc7:	mov    BYTE PTR [rip+0x43f52],0x0        # 46eb20 <strcmp@plt+0x6b388>
  42abce:	lea    rax,[rip+0x43f3b]        # 46eb10 <strcmp@plt+0x6b378>
  42abd5:	ret    
  42abd6:	mov    BYTE PTR [rip+0x43f37],0x0        # 46eb14 <strcmp@plt+0x6b37c>
  42abdd:	mov    DWORD PTR [rip+0x43f29],0x706f7264        # 46eb10 <strcmp@plt+0x6b378>
  42abe7:	lea    rax,[rip+0x43f22]        # 46eb10 <strcmp@plt+0x6b378>
  42abee:	ret    
  42abef:	nop
  42abf0:	mov    BYTE PTR [rip+0x43f39],0x0        # 46eb30 <strcmp@plt+0x6b398>
  42abf7:	cmp    edi,0x5
  42abfa:	ja     42ac2b <strcmp@plt+0x27493>
  42abfc:	mov    eax,edi
  42abfe:	lea    rcx,[rip+0x20557]        # 44b15c <strcmp@plt+0x479c4>
  42ac05:	movsxd rax,DWORD PTR [rcx+rax*4]
  42ac09:	add    rax,rcx
  42ac0c:	jmp    rax
  42ac0e:	movabs rax,0x6c617272656665
  42ac18:	mov    QWORD PTR [rip+0x43f17],rax        # 46eb36 <strcmp@plt+0x6b39e>
  42ac1f:	movabs rax,0x6665722d65646f6e
  42ac29:	jmp    42ac46 <strcmp@plt+0x274ae>
  42ac2b:	movabs rax,0x6e6f697463612d
  42ac35:	mov    QWORD PTR [rip+0x43efb],rax        # 46eb37 <strcmp@plt+0x6b39f>
  42ac3c:	movabs rax,0x2d6e776f6e6b6e75
  42ac46:	mov    QWORD PTR [rip+0x43ee3],rax        # 46eb30 <strcmp@plt+0x6b398>
  42ac4d:	lea    rax,[rip+0x43edc]        # 46eb30 <strcmp@plt+0x6b398>
  42ac54:	ret    
  42ac55:	movabs rax,0x72656665722d736d
  42ac5f:	mov    QWORD PTR [rip+0x43eca],rax        # 46eb30 <strcmp@plt+0x6b398>
  42ac66:	mov    DWORD PTR [rip+0x43ec8],0x6c6172        # 46eb38 <strcmp@plt+0x6b3a0>
  42ac70:	lea    rax,[rip+0x43eb9]        # 46eb30 <strcmp@plt+0x6b398>
  42ac77:	ret    
  42ac78:	mov    DWORD PTR [rip+0x43eb1],0x6b6361        # 46eb33 <strcmp@plt+0x6b39b>
  42ac82:	mov    DWORD PTR [rip+0x43ea4],0x612d736d        # 46eb30 <strcmp@plt+0x6b398>
  42ac8c:	lea    rax,[rip+0x43e9d]        # 46eb30 <strcmp@plt+0x6b398>
  42ac93:	ret    
  42ac94:	vmovups xmm0,XMMWORD PTR [rip+0x2055f]        # 44b1fb <strcmp@plt+0x47a63>
  42ac9c:	vmovaps XMMWORD PTR [rip+0x43e8c],xmm0        # 46eb30 <strcmp@plt+0x6b398>
  42aca4:	mov    WORD PTR [rip+0x43e93],0x64        # 46eb40 <strcmp@plt+0x6b3a8>
  42acad:	lea    rax,[rip+0x43e7c]        # 46eb30 <strcmp@plt+0x6b398>
  42acb4:	ret    
  42acb5:	vmovups xmm0,XMMWORD PTR [rip+0x20550]        # 44b20d <strcmp@plt+0x47a75>
  42acbd:	vmovaps XMMWORD PTR [rip+0x43e6b],xmm0        # 46eb30 <strcmp@plt+0x6b398>
  42acc5:	lea    rax,[rip+0x43e64]        # 46eb30 <strcmp@plt+0x6b398>
  42accc:	ret    
  42accd:	vmovups xmm0,XMMWORD PTR [rip+0x20548]        # 44b21d <strcmp@plt+0x47a85>
  42acd5:	vmovaps XMMWORD PTR [rip+0x43e53],xmm0        # 46eb30 <strcmp@plt+0x6b398>
  42acdd:	mov    WORD PTR [rip+0x43e5a],0x65        # 46eb40 <strcmp@plt+0x6b3a8>
  42ace6:	lea    rax,[rip+0x43e43]        # 46eb30 <strcmp@plt+0x6b398>
  42aced:	ret    
  42acee:	xchg   ax,ax
  42acf0:	push   r14
  42acf2:	push   rbx
  42acf3:	push   rax
  42acf4:	test   rdi,rdi
  42acf7:	je     42ad48 <strcmp@plt+0x275b0>
  42acf9:	mov    BYTE PTR [rip+0x43e50],0x0        # 46eb50 <strcmp@plt+0x6b3b8>
  42ad00:	movbe  ecx,DWORD PTR [rdi]
  42ad04:	movzx  r8d,BYTE PTR [rdi+0x4]
  42ad09:	movzx  eax,BYTE PTR [rdi+0x6]
  42ad0d:	shr    eax,0x5
  42ad10:	mov    BYTE PTR [rip+0x43df9],0x0        # 46eb10 <strcmp@plt+0x6b378>
  42ad17:	cmp    eax,0x3
  42ad1a:	ja     42ad50 <strcmp@plt+0x275b8>
  42ad1c:	lea    rdx,[rip+0x20451]        # 44b174 <strcmp@plt+0x479dc>
  42ad23:	movsxd rax,DWORD PTR [rdx+rax*4]
  42ad27:	add    rax,rdx
  42ad2a:	jmp    rax
  42ad2c:	movabs rax,0x6f697463612d6f6e
  42ad36:	mov    QWORD PTR [rip+0x43dd3],rax        # 46eb10 <strcmp@plt+0x6b378>
  42ad3d:	mov    WORD PTR [rip+0x43dd2],0x6e        # 46eb18 <strcmp@plt+0x6b380>
  42ad46:	jmp    42adbb <strcmp@plt+0x27623>
  42ad48:	xor    r14d,r14d
  42ad4b:	jmp    42ae05 <strcmp@plt+0x2766d>
  42ad50:	movabs rax,0x6e6f697463612d
  42ad5a:	mov    QWORD PTR [rip+0x43db6],rax        # 46eb17 <strcmp@plt+0x6b37f>
  42ad61:	movabs rax,0x2d6e776f6e6b6e75
  42ad6b:	jmp    42ad88 <strcmp@plt+0x275f0>
  42ad6d:	movabs rax,0x64726177726f66
  42ad77:	mov    QWORD PTR [rip+0x43d99],rax        # 46eb17 <strcmp@plt+0x6b37f>
  42ad7e:	movabs rax,0x662d65766974616e
  42ad88:	mov    QWORD PTR [rip+0x43d81],rax        # 46eb10 <strcmp@plt+0x6b378>
  42ad8f:	jmp    42adbb <strcmp@plt+0x27623>
  42ad91:	vmovups xmm0,XMMWORD PTR [rip+0x2041c]        # 44b1b5 <strcmp@plt+0x47a1d>
  42ad99:	vmovaps XMMWORD PTR [rip+0x43d6f],xmm0        # 46eb10 <strcmp@plt+0x6b378>
  42ada1:	mov    BYTE PTR [rip+0x43d78],0x0        # 46eb20 <strcmp@plt+0x6b388>
  42ada8:	jmp    42adbb <strcmp@plt+0x27623>
  42adaa:	mov    BYTE PTR [rip+0x43d63],0x0        # 46eb14 <strcmp@plt+0x6b37c>
  42adb1:	mov    DWORD PTR [rip+0x43d55],0x706f7264        # 46eb10 <strcmp@plt+0x6b378>
  42adbb:	movzx  ebx,BYTE PTR [rdi+0x6]
  42adbf:	shr    ebx,0x4
  42adc2:	and    ebx,0x1
  42adc5:	movzx  eax,BYTE PTR [rdi+0x8]
  42adc9:	and    eax,0xf
  42adcc:	shl    eax,0x8
  42adcf:	movzx  r10d,BYTE PTR [rdi+0x9]
  42add4:	or     r10d,eax
  42add7:	lea    r14,[rip+0x43d72]        # 46eb50 <strcmp@plt+0x6b3b8>
  42adde:	lea    rdx,[rip+0x2044a]        # 44b22f <strcmp@plt+0x47a97>
  42ade5:	lea    r9,[rip+0x43d24]        # 46eb10 <strcmp@plt+0x6b378>
  42adec:	mov    esi,0x64
  42adf1:	mov    rdi,r14
  42adf4:	mov    eax,0x0
  42adf9:	push   r10
  42adfb:	push   rbx
  42adfc:	call   403630 <snprintf@plt>
  42ae01:	add    rsp,0x10
  42ae05:	mov    rax,r14
  42ae08:	add    rsp,0x8
  42ae0c:	pop    rbx
  42ae0d:	pop    r14
  42ae0f:	ret    
  42ae10:	push   r14
  42ae12:	push   rbx
  42ae13:	push   rax
  42ae14:	test   rdi,rdi
  42ae17:	je     42ae70 <strcmp@plt+0x276d8>
  42ae19:	mov    BYTE PTR [rip+0x43da0],0x0        # 46ebc0 <strcmp@plt+0x6b428>
  42ae20:	movbe  ecx,DWORD PTR [rdi]
  42ae24:	movzx  r8d,BYTE PTR [rdi+0x4]
  42ae29:	movzx  eax,BYTE PTR [rdi+0x6]
  42ae2d:	shr    eax,0x5
  42ae30:	mov    BYTE PTR [rip+0x43cf9],0x0        # 46eb30 <strcmp@plt+0x6b398>
  42ae37:	cmp    eax,0x5
  42ae3a:	ja     42aef6 <strcmp@plt+0x2775e>
  42ae40:	lea    rdx,[rip+0x2033d]        # 44b184 <strcmp@plt+0x479ec>
  42ae47:	movsxd rax,DWORD PTR [rdx+rax*4]
  42ae4b:	add    rax,rdx
  42ae4e:	jmp    rax
  42ae50:	movabs rax,0x6c617272656665
  42ae5a:	mov    QWORD PTR [rip+0x43cd5],rax        # 46eb36 <strcmp@plt+0x6b39e>
  42ae61:	movabs rax,0x6665722d65646f6e
  42ae6b:	jmp    42af11 <strcmp@plt+0x27779>
  42ae70:	xor    r14d,r14d
  42ae73:	jmp    42af73 <strcmp@plt+0x277db>
  42ae78:	movabs rax,0x72656665722d736d
  42ae82:	mov    QWORD PTR [rip+0x43ca7],rax        # 46eb30 <strcmp@plt+0x6b398>
  42ae89:	mov    DWORD PTR [rip+0x43ca5],0x6c6172        # 46eb38 <strcmp@plt+0x6b3a0>
  42ae93:	jmp    42af18 <strcmp@plt+0x27780>
  42ae98:	mov    DWORD PTR [rip+0x43c91],0x6b6361        # 46eb33 <strcmp@plt+0x6b39b>
  42aea2:	mov    DWORD PTR [rip+0x43c84],0x612d736d        # 46eb30 <strcmp@plt+0x6b398>
  42aeac:	jmp    42af18 <strcmp@plt+0x27780>
  42aeae:	vmovups xmm0,XMMWORD PTR [rip+0x20345]        # 44b1fb <strcmp@plt+0x47a63>
  42aeb6:	vmovaps XMMWORD PTR [rip+0x43c72],xmm0        # 46eb30 <strcmp@plt+0x6b398>
  42aebe:	mov    WORD PTR [rip+0x43c79],0x64        # 46eb40 <strcmp@plt+0x6b3a8>
  42aec7:	jmp    42af18 <strcmp@plt+0x27780>
  42aec9:	vmovups xmm0,XMMWORD PTR [rip+0x2033c]        # 44b20d <strcmp@plt+0x47a75>
  42aed1:	vmovaps XMMWORD PTR [rip+0x43c57],xmm0        # 46eb30 <strcmp@plt+0x6b398>
  42aed9:	jmp    42af18 <strcmp@plt+0x27780>
  42aedb:	vmovups xmm0,XMMWORD PTR [rip+0x2033a]        # 44b21d <strcmp@plt+0x47a85>
  42aee3:	vmovaps XMMWORD PTR [rip+0x43c45],xmm0        # 46eb30 <strcmp@plt+0x6b398>
  42aeeb:	mov    WORD PTR [rip+0x43c4c],0x65        # 46eb40 <strcmp@plt+0x6b3a8>
  42aef4:	jmp    42af18 <strcmp@plt+0x27780>
  42aef6:	movabs rax,0x6e6f697463612d
  42af00:	mov    QWORD PTR [rip+0x43c30],rax        # 46eb37 <strcmp@plt+0x6b39f>
  42af07:	movabs rax,0x2d6e776f6e6b6e75
  42af11:	mov    QWORD PTR [rip+0x43c18],rax        # 46eb30 <strcmp@plt+0x6b398>
  42af18:	movzx  ebx,BYTE PTR [rdi+0x6]
  42af1c:	mov    r10d,ebx
  42af1f:	shr    r10d,0x4
  42af23:	and    r10d,0x1
  42af27:	shr    ebx,0x3
  42af2a:	and    ebx,0x1
  42af2d:	movzx  eax,BYTE PTR [rdi+0x8]
  42af31:	and    eax,0xf
  42af34:	shl    eax,0x8
  42af37:	movzx  r11d,BYTE PTR [rdi+0x9]
  42af3c:	or     r11d,eax
  42af3f:	sub    rsp,0x8
  42af43:	lea    r14,[rip+0x43c76]        # 46ebc0 <strcmp@plt+0x6b428>
  42af4a:	lea    rdx,[rip+0x2032a]        # 44b27b <strcmp@plt+0x47ae3>
  42af51:	lea    r9,[rip+0x43bd8]        # 46eb30 <strcmp@plt+0x6b398>
  42af58:	mov    esi,0x64
  42af5d:	mov    rdi,r14
  42af60:	mov    eax,0x0
  42af65:	push   r11
  42af67:	push   rbx
  42af68:	push   r10
  42af6a:	call   403630 <snprintf@plt>
  42af6f:	add    rsp,0x20
  42af73:	mov    rax,r14
  42af76:	add    rsp,0x8
  42af7a:	pop    rbx
  42af7b:	pop    r14
  42af7d:	ret    
  42af7e:	xchg   ax,ax
  42af80:	push   rbp
  42af81:	push   r14
  42af83:	push   rbx
  42af84:	mov    rbx,rdi
  42af87:	mov    BYTE PTR [rip+0x43c96],0x0        # 46ec24 <strcmp@plt+0x6b48c>
  42af8e:	lea    r14,[rip+0x43c8f]        # 46ec24 <strcmp@plt+0x6b48c>
  42af95:	mov    bpl,BYTE PTR [rdi+0x5]
  42af99:	mov    rdi,r14
  42af9c:	call   4031e0 <strlen@plt>
  42afa1:	add    rax,r14
  42afa4:	test   bpl,0x4
  42afa8:	jne    42afb6 <strcmp@plt+0x2781e>
  42afaa:	mov    BYTE PTR [rax+0x4],0x0
  42afae:	mov    DWORD PTR [rax],0x2c303d4c
  42afb4:	jmp    42afc0 <strcmp@plt+0x27828>
  42afb6:	mov    BYTE PTR [rax+0x4],0x0
  42afba:	mov    DWORD PTR [rax],0x2c313d4c
  42afc0:	mov    bpl,BYTE PTR [rbx+0x5]
  42afc4:	mov    rdi,r14
  42afc7:	call   4031e0 <strlen@plt>
  42afcc:	add    rax,r14
  42afcf:	test   bpl,0x2
  42afd3:	jne    42afe1 <strcmp@plt+0x27849>
  42afd5:	mov    BYTE PTR [rax+0x4],0x0
  42afd9:	mov    DWORD PTR [rax],0x2c303d70
  42afdf:	jmp    42afeb <strcmp@plt+0x27853>
  42afe1:	mov    BYTE PTR [rax+0x4],0x0
  42afe5:	mov    DWORD PTR [rax],0x2c313d70
  42afeb:	movzx  ebx,BYTE PTR [rbx+0x5]
  42afef:	mov    rdi,r14
  42aff2:	call   4031e0 <strlen@plt>
  42aff7:	and    ebx,0x1
  42affa:	shl    ebx,0x10
  42affd:	or     ebx,0x303d52
  42b003:	mov    DWORD PTR [rax+r14*1],ebx
  42b007:	mov    rax,r14
  42b00a:	pop    rbx
  42b00b:	pop    r14
  42b00d:	pop    rbp
  42b00e:	ret    
  42b00f:	nop
  42b010:	push   rbp
  42b011:	push   r14
  42b013:	push   rbx
  42b014:	test   rdi,rdi
  42b017:	je     42b052 <strcmp@plt+0x278ba>
  42b019:	mov    rbx,rdi
  42b01c:	mov    BYTE PTR [rip+0x43c1d],0x0        # 46ec40 <strcmp@plt+0x6b4a8>
  42b023:	mov    BYTE PTR [rip+0x43bfa],0x0        # 46ec24 <strcmp@plt+0x6b48c>
  42b02a:	lea    r14,[rip+0x43bf3]        # 46ec24 <strcmp@plt+0x6b48c>
  42b031:	mov    bpl,BYTE PTR [rdi+0x5]
  42b035:	mov    rdi,r14
  42b038:	call   4031e0 <strlen@plt>
  42b03d:	add    rax,r14
  42b040:	test   bpl,0x4
  42b044:	jne    42b059 <strcmp@plt+0x278c1>
  42b046:	mov    BYTE PTR [rax+0x4],0x0
  42b04a:	mov    DWORD PTR [rax],0x2c303d4c
  42b050:	jmp    42b063 <strcmp@plt+0x278cb>
  42b052:	xor    ebx,ebx
  42b054:	jmp    42b0e6 <strcmp@plt+0x2794e>
  42b059:	mov    BYTE PTR [rax+0x4],0x0
  42b05d:	mov    DWORD PTR [rax],0x2c313d4c
  42b063:	mov    bpl,BYTE PTR [rbx+0x5]
  42b067:	mov    rdi,r14
  42b06a:	call   4031e0 <strlen@plt>
  42b06f:	add    rax,r14
  42b072:	test   bpl,0x2
  42b076:	jne    42b084 <strcmp@plt+0x278ec>
  42b078:	mov    BYTE PTR [rax+0x4],0x0
  42b07c:	mov    DWORD PTR [rax],0x2c303d70
  42b082:	jmp    42b08e <strcmp@plt+0x278f6>
  42b084:	mov    BYTE PTR [rax+0x4],0x0
  42b088:	mov    DWORD PTR [rax],0x2c313d70
  42b08e:	movzx  ebp,BYTE PTR [rbx+0x5]
  42b092:	mov    rdi,r14
  42b095:	call   4031e0 <strlen@plt>
  42b09a:	and    ebp,0x1
  42b09d:	shl    ebp,0x10
  42b0a0:	or     ebp,0x303d52
  42b0a6:	mov    DWORD PTR [rax+r14*1],ebp
  42b0aa:	movzx  r8d,BYTE PTR [rbx]
  42b0ae:	movzx  r9d,BYTE PTR [rbx+0x1]
  42b0b3:	movzx  r10d,BYTE PTR [rbx+0x2]
  42b0b8:	movzx  ebp,BYTE PTR [rbx+0x3]
  42b0bc:	lea    rbx,[rip+0x43b7d]        # 46ec40 <strcmp@plt+0x6b4a8>
  42b0c3:	lea    rdx,[rip+0x20216]        # 44b2e0 <strcmp@plt+0x47b48>
  42b0ca:	mov    esi,0x64
  42b0cf:	mov    rdi,rbx
  42b0d2:	mov    rcx,r14
  42b0d5:	mov    eax,0x0
  42b0da:	push   rbp
  42b0db:	push   r10
  42b0dd:	call   403630 <snprintf@plt>
  42b0e2:	add    rsp,0x10
  42b0e6:	mov    rax,rbx
  42b0e9:	pop    rbx
  42b0ea:	pop    r14
  42b0ec:	pop    rbp
  42b0ed:	ret    
  42b0ee:	xchg   ax,ax
  42b0f0:	test   edi,edi
  42b0f2:	mov    eax,0x14
  42b0f7:	cmove  eax,edi
  42b0fa:	ret    
  42b0fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b100:	mov    WORD PTR [rdi],0x0
  42b105:	ret    
  42b106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b110:	xor    eax,eax
  42b112:	cmp    esi,0x2
  42b115:	jl     42b30c <strcmp@plt+0x27b74>
  42b11b:	lea    r9d,[rsi-0x2]
  42b11f:	mov    r10d,r9d
  42b122:	shr    r10d,1
  42b125:	inc    r10d
  42b128:	xor    eax,eax
  42b12a:	cmp    r10d,0x20
  42b12e:	jae    42b138 <strcmp@plt+0x279a0>
  42b130:	mov    rcx,rdi
  42b133:	jmp    42b2f0 <strcmp@plt+0x27b58>
  42b138:	mov    r8d,r10d
  42b13b:	and    r8d,0xffffffe0
  42b13f:	lea    rdx,[r8-0x20]
  42b143:	mov    rax,rdx
  42b146:	shr    rax,0x5
  42b14a:	inc    rax
  42b14d:	mov    ecx,eax
  42b14f:	and    ecx,0x3
  42b152:	cmp    rdx,0x60
  42b156:	jae    42b178 <strcmp@plt+0x279e0>
  42b158:	vpxor  xmm0,xmm0,xmm0
  42b15c:	xor    eax,eax
  42b15e:	vpxor  xmm1,xmm1,xmm1
  42b162:	vpxor  xmm2,xmm2,xmm2
  42b166:	vpxor  xmm3,xmm3,xmm3
  42b16a:	test   rcx,rcx
  42b16d:	jne    42b26b <strcmp@plt+0x27ad3>
  42b173:	jmp    42b2b0 <strcmp@plt+0x27b18>
  42b178:	mov    rdx,rcx
  42b17b:	sub    rdx,rax
  42b17e:	vpxor  xmm0,xmm0,xmm0
  42b182:	xor    eax,eax
  42b184:	vpxor  xmm1,xmm1,xmm1
  42b188:	vpxor  xmm2,xmm2,xmm2
  42b18c:	vpxor  xmm3,xmm3,xmm3
  42b190:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2]
  42b196:	vpaddd ymm0,ymm0,ymm4
  42b19a:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0x10]
  42b1a1:	vpaddd ymm1,ymm1,ymm4
  42b1a5:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0x20]
  42b1ac:	vpaddd ymm2,ymm2,ymm4
  42b1b0:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0x30]
  42b1b7:	vpaddd ymm3,ymm3,ymm4
  42b1bb:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0x40]
  42b1c2:	vpmovzxwd ymm5,XMMWORD PTR [rdi+rax*2+0x50]
  42b1c9:	vpmovzxwd ymm6,XMMWORD PTR [rdi+rax*2+0x60]
  42b1d0:	vpmovzxwd ymm7,XMMWORD PTR [rdi+rax*2+0x70]
  42b1d7:	vpmovzxwd ymm8,XMMWORD PTR [rdi+rax*2+0x80]
  42b1e1:	vpaddd ymm4,ymm4,ymm8
  42b1e6:	vpaddd ymm0,ymm0,ymm4
  42b1ea:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0x90]
  42b1f4:	vpaddd ymm4,ymm5,ymm4
  42b1f8:	vpaddd ymm1,ymm1,ymm4
  42b1fc:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0xa0]
  42b206:	vpaddd ymm4,ymm6,ymm4
  42b20a:	vpaddd ymm2,ymm2,ymm4
  42b20e:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0xb0]
  42b218:	vpaddd ymm4,ymm7,ymm4
  42b21c:	vpaddd ymm3,ymm3,ymm4
  42b220:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0xc0]
  42b22a:	vpaddd ymm0,ymm0,ymm4
  42b22e:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0xd0]
  42b238:	vpaddd ymm1,ymm1,ymm4
  42b23c:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0xe0]
  42b246:	vpaddd ymm2,ymm2,ymm4
  42b24a:	vpmovzxwd ymm4,XMMWORD PTR [rdi+rax*2+0xf0]
  42b254:	vpaddd ymm3,ymm3,ymm4
  42b258:	sub    rax,0xffffffffffffff80
  42b25c:	add    rdx,0x4
  42b260:	jne    42b190 <strcmp@plt+0x279f8>
  42b266:	test   rcx,rcx
  42b269:	je     42b2b0 <strcmp@plt+0x27b18>
  42b26b:	lea    rax,[rdi+rax*2]
  42b26f:	add    rax,0x30
  42b273:	neg    rcx
  42b276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b280:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x30]
  42b286:	vpaddd ymm0,ymm0,ymm4
  42b28a:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x20]
  42b290:	vpaddd ymm1,ymm1,ymm4
  42b294:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x10]
  42b29a:	vpaddd ymm2,ymm2,ymm4
  42b29e:	vpmovzxwd ymm4,XMMWORD PTR [rax]
  42b2a3:	vpaddd ymm3,ymm3,ymm4
  42b2a7:	add    rax,0x40
  42b2ab:	inc    rcx
  42b2ae:	jne    42b280 <strcmp@plt+0x27ae8>
  42b2b0:	vpaddd ymm1,ymm1,ymm3
  42b2b4:	vpaddd ymm0,ymm0,ymm2
  42b2b8:	vpaddd ymm0,ymm0,ymm1
  42b2bc:	vextracti128 xmm1,ymm0,0x1
  42b2c2:	vpaddd xmm0,xmm0,xmm1
  42b2c6:	vpshufd xmm1,xmm0,0x4e
  42b2cb:	vpaddd xmm0,xmm0,xmm1
  42b2cf:	vpshufd xmm1,xmm0,0xe5
  42b2d4:	vpaddd xmm0,xmm0,xmm1
  42b2d8:	vmovd  eax,xmm0
  42b2dc:	cmp    r8,r10
  42b2df:	je     42b301 <strcmp@plt+0x27b69>
  42b2e1:	lea    ecx,[r8+r8*1]
  42b2e5:	sub    esi,ecx
  42b2e7:	lea    rcx,[rdi+r8*2]
  42b2eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b2f0:	movzx  edx,WORD PTR [rcx]
  42b2f3:	add    rcx,0x2
  42b2f7:	add    eax,edx
  42b2f9:	add    esi,0xfffffffe
  42b2fc:	cmp    esi,0x1
  42b2ff:	jg     42b2f0 <strcmp@plt+0x27b58>
  42b301:	lea    rdi,[rdi+r10*2]
  42b305:	and    r9d,0x1
  42b309:	mov    esi,r9d
  42b30c:	test   esi,esi
  42b30e:	je     42b315 <strcmp@plt+0x27b7d>
  42b310:	movzx  ecx,BYTE PTR [rdi]
  42b313:	add    eax,ecx
  42b315:	mov    ecx,eax
  42b317:	shr    ecx,0x10
  42b31a:	movzx  edx,ax
  42b31d:	add    edx,ecx
  42b31f:	mov    eax,edx
  42b321:	shr    eax,0x10
  42b324:	add    eax,edx
  42b326:	not    eax
  42b328:	vzeroupper 
  42b32b:	ret    
  42b32c:	nop    DWORD PTR [rax+0x0]
  42b330:	push   rbp
  42b331:	push   r14
  42b333:	push   rbx
  42b334:	xor    eax,eax
  42b336:	cmp    esi,0x2
  42b339:	jb     42b364 <strcmp@plt+0x27bcc>
  42b33b:	lea    r8d,[rsi-0x2]
  42b33f:	mov    r11d,r8d
  42b342:	and    r11d,0xfffffffe
  42b346:	mov    r10d,r8d
  42b349:	shr    r10d,1
  42b34c:	lea    ebp,[r10+0x1]
  42b350:	mov    r14d,ebp
  42b353:	and    r14d,0x3
  42b357:	cmp    r8d,0x6
  42b35b:	jae    42b36c <strcmp@plt+0x27bd4>
  42b35d:	xor    eax,eax
  42b35f:	mov    r9,rdi
  42b362:	jmp    42b3d4 <strcmp@plt+0x27c3c>
  42b364:	mov    r8d,esi
  42b367:	jmp    42b40d <strcmp@plt+0x27c75>
  42b36c:	sub    ebp,r14d
  42b36f:	xor    eax,eax
  42b371:	mov    rbx,rdi
  42b374:	jmp    42b389 <strcmp@plt+0x27bf1>
  42b376:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b380:	lea    rbx,[r9+0x8]
  42b384:	add    ebp,0xfffffffc
  42b387:	je     42b3d0 <strcmp@plt+0x27c38>
  42b389:	mov    r9,rbx
  42b38c:	movzx  ebx,WORD PTR [rbx]
  42b38f:	add    ebx,eax
  42b391:	jns    42b39b <strcmp@plt+0x27c03>
  42b393:	movzx  eax,bx
  42b396:	shr    ebx,0x10
  42b399:	add    ebx,eax
  42b39b:	movzx  eax,WORD PTR [r9+0x2]
  42b3a0:	add    eax,ebx
  42b3a2:	jns    42b3ac <strcmp@plt+0x27c14>
  42b3a4:	movzx  ebx,ax
  42b3a7:	shr    eax,0x10
  42b3aa:	add    eax,ebx
  42b3ac:	movzx  ebx,WORD PTR [r9+0x4]
  42b3b1:	add    ebx,eax
  42b3b3:	jns    42b3bd <strcmp@plt+0x27c25>
  42b3b5:	movzx  eax,bx
  42b3b8:	shr    ebx,0x10
  42b3bb:	add    ebx,eax
  42b3bd:	movzx  eax,WORD PTR [r9+0x6]
  42b3c2:	add    eax,ebx
  42b3c4:	jns    42b380 <strcmp@plt+0x27be8>
  42b3c6:	movzx  ebx,ax
  42b3c9:	shr    eax,0x10
  42b3cc:	add    eax,ebx
  42b3ce:	jmp    42b380 <strcmp@plt+0x27be8>
  42b3d0:	add    r9,0x8
  42b3d4:	add    rdi,r11
  42b3d7:	add    rdi,0x2
  42b3db:	test   r14d,r14d
  42b3de:	je     42b40d <strcmp@plt+0x27c75>
  42b3e0:	inc    r10b
  42b3e3:	movzx  r10d,r10b
  42b3e7:	and    r10d,0x3
  42b3eb:	xor    ebx,ebx
  42b3ed:	jmp    42b3f8 <strcmp@plt+0x27c60>
  42b3ef:	nop
  42b3f0:	inc    rbx
  42b3f3:	cmp    r10d,ebx
  42b3f6:	je     42b40d <strcmp@plt+0x27c75>
  42b3f8:	mov    ebp,eax
  42b3fa:	movzx  eax,WORD PTR [r9+rbx*2]
  42b3ff:	add    eax,ebp
  42b401:	jns    42b3f0 <strcmp@plt+0x27c58>
  42b403:	movzx  ebp,ax
  42b406:	shr    eax,0x10
  42b409:	add    eax,ebp
  42b40b:	jmp    42b3f0 <strcmp@plt+0x27c58>
  42b40d:	mov    ebx,edx
  42b40f:	shr    ebx,0x10
  42b412:	mov    ebp,ecx
  42b414:	shr    ebp,0x10
  42b417:	test   r8b,0x1
  42b41b:	je     42b422 <strcmp@plt+0x27c8a>
  42b41d:	movzx  edi,BYTE PTR [rdi]
  42b420:	add    eax,edi
  42b422:	movzx  edx,dx
  42b425:	add    edx,ebx
  42b427:	movzx  ecx,cx
  42b42a:	add    ecx,edx
  42b42c:	add    ecx,ebp
  42b42e:	rol    si,0x8
  42b432:	movzx  edx,si
  42b435:	add    edx,ecx
  42b437:	lea    eax,[rax+rdx*1]
  42b43a:	add    eax,0x1100
  42b43f:	nop
  42b440:	mov    ecx,eax
  42b442:	shr    ecx,0x10
  42b445:	je     42b44e <strcmp@plt+0x27cb6>
  42b447:	movzx  eax,ax
  42b44a:	add    eax,ecx
  42b44c:	jmp    42b440 <strcmp@plt+0x27ca8>
  42b44e:	not    eax
  42b450:	pop    rbx
  42b451:	pop    r14
  42b453:	pop    rbp
  42b454:	ret    
  42b455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b45f:	nop
  42b460:	mov    DWORD PTR [rsp-0x4],0x0
  42b468:	vmovups xmm0,XMMWORD PTR [rdi+0x8]
  42b46d:	vmovaps XMMWORD PTR [rsp-0x28],xmm0
  42b473:	vmovdqu xmm0,XMMWORD PTR [rdi+0x18]
  42b478:	vmovdqa XMMWORD PTR [rsp-0x18],xmm0
  42b47e:	mov    ecx,edx
  42b480:	bswap  ecx
  42b482:	movbe  DWORD PTR [rsp-0x8],edx
  42b488:	mov    BYTE PTR [rsp-0x1],0x11
  42b48d:	movzx  eax,WORD PTR [rsp-0x28]
  42b492:	movzx  edi,WORD PTR [rsp-0x26]
  42b497:	add    edi,eax
  42b499:	movzx  eax,WORD PTR [rsp-0x24]
  42b49e:	add    eax,edi
  42b4a0:	movzx  edi,WORD PTR [rsp-0x22]
  42b4a5:	add    edi,eax
  42b4a7:	movzx  eax,WORD PTR [rsp-0x20]
  42b4ac:	add    eax,edi
  42b4ae:	movzx  edi,WORD PTR [rsp-0x1e]
  42b4b3:	add    edi,eax
  42b4b5:	movzx  eax,WORD PTR [rsp-0x1c]
  42b4ba:	add    eax,edi
  42b4bc:	movzx  edi,WORD PTR [rsp-0x1a]
  42b4c1:	add    edi,eax
  42b4c3:	movzx  eax,WORD PTR [rsp-0x18]
  42b4c8:	add    eax,edi
  42b4ca:	movzx  edi,WORD PTR [rsp-0x16]
  42b4cf:	add    edi,eax
  42b4d1:	movzx  eax,WORD PTR [rsp-0x14]
  42b4d6:	add    eax,edi
  42b4d8:	movzx  edi,WORD PTR [rsp-0x12]
  42b4dd:	add    edi,eax
  42b4df:	movzx  eax,WORD PTR [rsp-0x10]
  42b4e4:	add    eax,edi
  42b4e6:	movzx  edi,WORD PTR [rsp-0xe]
  42b4eb:	add    edi,eax
  42b4ed:	movzx  eax,WORD PTR [rsp-0xc]
  42b4f2:	add    eax,edi
  42b4f4:	movzx  edi,WORD PTR [rsp-0xa]
  42b4f9:	add    edi,eax
  42b4fb:	movzx  eax,cx
  42b4fe:	add    eax,edi
  42b500:	shr    ecx,0x10
  42b503:	add    ecx,eax
  42b505:	movzx  eax,WORD PTR [rsp-0x2]
  42b50a:	add    eax,ecx
  42b50c:	mov    r10d,edx
  42b50f:	and    r10d,0xfffffffe
  42b513:	je     42b530 <strcmp@plt+0x27d98>
  42b515:	lea    r8,[rsi+r10*1]
  42b519:	lea    r9,[r10-0x1]
  42b51d:	shr    r9,1
  42b520:	inc    r9
  42b523:	cmp    r9,0x20
  42b527:	jae    42b541 <strcmp@plt+0x27da9>
  42b529:	xor    ecx,ecx
  42b52b:	jmp    42b700 <strcmp@plt+0x27f68>
  42b530:	mov    r8,rsi
  42b533:	test   dl,0x1
  42b536:	jne    42b717 <strcmp@plt+0x27f7f>
  42b53c:	jmp    42b727 <strcmp@plt+0x27f8f>
  42b541:	mov    rcx,r9
  42b544:	and    rcx,0xffffffffffffffe0
  42b548:	vmovd  xmm0,eax
  42b54c:	lea    rax,[rcx-0x20]
  42b550:	mov    rdi,rax
  42b553:	shr    rdi,0x5
  42b557:	inc    rdi
  42b55a:	mov    r11d,edi
  42b55d:	and    r11d,0x3
  42b561:	cmp    rax,0x60
  42b565:	jae    42b583 <strcmp@plt+0x27deb>
  42b567:	vpxor  xmm1,xmm1,xmm1
  42b56b:	xor    edi,edi
  42b56d:	vpxor  xmm2,xmm2,xmm2
  42b571:	vpxor  xmm3,xmm3,xmm3
  42b575:	test   r11,r11
  42b578:	jne    42b67b <strcmp@plt+0x27ee3>
  42b57e:	jmp    42b6c0 <strcmp@plt+0x27f28>
  42b583:	mov    rax,r11
  42b586:	sub    rax,rdi
  42b589:	vpxor  xmm1,xmm1,xmm1
  42b58d:	xor    edi,edi
  42b58f:	vpxor  xmm2,xmm2,xmm2
  42b593:	vpxor  xmm3,xmm3,xmm3
  42b597:	nop    WORD PTR [rax+rax*1+0x0]
  42b5a0:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2]
  42b5a6:	vpaddd ymm0,ymm0,ymm4
  42b5aa:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x10]
  42b5b1:	vpaddd ymm1,ymm1,ymm4
  42b5b5:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x20]
  42b5bc:	vpaddd ymm2,ymm2,ymm4
  42b5c0:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x30]
  42b5c7:	vpaddd ymm3,ymm3,ymm4
  42b5cb:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x40]
  42b5d2:	vpmovzxwd ymm5,XMMWORD PTR [rsi+rdi*2+0x50]
  42b5d9:	vpmovzxwd ymm6,XMMWORD PTR [rsi+rdi*2+0x60]
  42b5e0:	vpmovzxwd ymm7,XMMWORD PTR [rsi+rdi*2+0x70]
  42b5e7:	vpmovzxwd ymm8,XMMWORD PTR [rsi+rdi*2+0x80]
  42b5f1:	vpaddd ymm4,ymm4,ymm8
  42b5f6:	vpaddd ymm0,ymm0,ymm4
  42b5fa:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0x90]
  42b604:	vpaddd ymm4,ymm5,ymm4
  42b608:	vpaddd ymm1,ymm1,ymm4
  42b60c:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xa0]
  42b616:	vpaddd ymm4,ymm6,ymm4
  42b61a:	vpaddd ymm2,ymm2,ymm4
  42b61e:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xb0]
  42b628:	vpaddd ymm4,ymm7,ymm4
  42b62c:	vpaddd ymm3,ymm3,ymm4
  42b630:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xc0]
  42b63a:	vpaddd ymm0,ymm0,ymm4
  42b63e:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xd0]
  42b648:	vpaddd ymm1,ymm1,ymm4
  42b64c:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xe0]
  42b656:	vpaddd ymm2,ymm2,ymm4
  42b65a:	vpmovzxwd ymm4,XMMWORD PTR [rsi+rdi*2+0xf0]
  42b664:	vpaddd ymm3,ymm3,ymm4
  42b668:	sub    rdi,0xffffffffffffff80
  42b66c:	add    rax,0x4
  42b670:	jne    42b5a0 <strcmp@plt+0x27e08>
  42b676:	test   r11,r11
  42b679:	je     42b6c0 <strcmp@plt+0x27f28>
  42b67b:	lea    rax,[rsi+rdi*2]
  42b67f:	add    rax,0x30
  42b683:	neg    r11
  42b686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b690:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x30]
  42b696:	vpaddd ymm0,ymm0,ymm4
  42b69a:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x20]
  42b6a0:	vpaddd ymm1,ymm1,ymm4
  42b6a4:	vpmovzxwd ymm4,XMMWORD PTR [rax-0x10]
  42b6aa:	vpaddd ymm2,ymm2,ymm4
  42b6ae:	vpmovzxwd ymm4,XMMWORD PTR [rax]
  42b6b3:	vpaddd ymm3,ymm3,ymm4
  42b6b7:	add    rax,0x40
  42b6bb:	inc    r11
  42b6be:	jne    42b690 <strcmp@plt+0x27ef8>
  42b6c0:	vpaddd ymm1,ymm1,ymm3
  42b6c4:	vpaddd ymm0,ymm0,ymm2
  42b6c8:	vpaddd ymm0,ymm0,ymm1
  42b6cc:	vextracti128 xmm1,ymm0,0x1
  42b6d2:	vpaddd xmm0,xmm0,xmm1
  42b6d6:	vpshufd xmm1,xmm0,0x4e
  42b6db:	vpaddd xmm0,xmm0,xmm1
  42b6df:	vpshufd xmm1,xmm0,0xe5
  42b6e4:	vpaddd xmm0,xmm0,xmm1
  42b6e8:	vmovd  eax,xmm0
  42b6ec:	cmp    r9,rcx
  42b6ef:	je     42b712 <strcmp@plt+0x27f7a>
  42b6f1:	lea    rsi,[rsi+rcx*2]
  42b6f5:	add    rcx,rcx
  42b6f8:	nop    DWORD PTR [rax+rax*1+0x0]
  42b700:	movzx  edi,WORD PTR [rsi]
  42b703:	add    rsi,0x2
  42b707:	add    eax,edi
  42b709:	add    rcx,0x2
  42b70d:	cmp    rcx,r10
  42b710:	jb     42b700 <strcmp@plt+0x27f68>
  42b712:	test   dl,0x1
  42b715:	je     42b727 <strcmp@plt+0x27f8f>
  42b717:	movzx  ecx,BYTE PTR [r8]
  42b71b:	shl    ecx,0x8
  42b71e:	rol    cx,0x8
  42b722:	movzx  ecx,cx
  42b725:	add    eax,ecx
  42b727:	cmp    eax,0x10000
  42b72c:	jb     42b73f <strcmp@plt+0x27fa7>
  42b72e:	xchg   ax,ax
  42b730:	movzx  ecx,ax
  42b733:	shr    eax,0x10
  42b736:	add    eax,ecx
  42b738:	cmp    eax,0xffff
  42b73d:	ja     42b730 <strcmp@plt+0x27f98>
  42b73f:	not    eax
  42b741:	vzeroupper 
  42b744:	ret    
  42b745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b74f:	nop
  42b750:	push   rbp
  42b751:	push   r14
  42b753:	push   rbx
  42b754:	mov    eax,esi
  42b756:	mov    rbx,rdi
  42b759:	cmp    ecx,0xa
  42b75c:	je     42b79a <strcmp@plt+0x28002>
  42b75e:	cmp    ecx,0x2
  42b761:	jne    42b7ab <strcmp@plt+0x28013>
  42b763:	mov    r9d,DWORD PTR [rdx+0xc]
  42b767:	mov    r8d,DWORD PTR [rdx+0x10]
  42b76b:	cmp    eax,0x2
  42b76e:	jb     42b7d7 <strcmp@plt+0x2803f>
  42b770:	lea    r14d,[rax-0x2]
  42b774:	mov    r10d,r14d
  42b777:	and    r10d,0xfffffffe
  42b77b:	mov    edi,r14d
  42b77e:	shr    edi,1
  42b780:	lea    ecx,[rdi+0x1]
  42b783:	mov    r11d,ecx
  42b786:	and    r11d,0x3
  42b78a:	cmp    r14d,0x6
  42b78e:	jae    42b7e1 <strcmp@plt+0x28049>
  42b790:	xor    ebp,ebp
  42b792:	mov    rsi,rbx
  42b795:	jmp    42b841 <strcmp@plt+0x280a9>
  42b79a:	mov    rdi,rdx
  42b79d:	mov    rsi,rbx
  42b7a0:	mov    edx,eax
  42b7a2:	pop    rbx
  42b7a3:	pop    r14
  42b7a5:	pop    rbp
  42b7a6:	jmp    42b460 <strcmp@plt+0x27cc8>
  42b7ab:	lea    rax,[rip+0x3960e]        # 464dc0 <strcmp@plt+0x61628>
  42b7b2:	mov    bx,0xffff
  42b7b6:	cmp    DWORD PTR [rax],0x2
  42b7b9:	jl     42b8d0 <strcmp@plt+0x28138>
  42b7bf:	lea    rsi,[rip+0x1fb48]        # 44b30e <strcmp@plt+0x47b76>
  42b7c6:	mov    edi,0x6
  42b7cb:	xor    eax,eax
  42b7cd:	call   42e520 <strcmp@plt+0x2ad88>
  42b7d2:	jmp    42b8d0 <strcmp@plt+0x28138>
  42b7d7:	xor    ecx,ecx
  42b7d9:	mov    r14d,eax
  42b7dc:	jmp    42b87e <strcmp@plt+0x280e6>
  42b7e1:	sub    ecx,r11d
  42b7e4:	xor    ebp,ebp
  42b7e6:	mov    rdx,rbx
  42b7e9:	jmp    42b7f9 <strcmp@plt+0x28061>
  42b7eb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b7f0:	lea    rdx,[rsi+0x8]
  42b7f4:	add    ecx,0xfffffffc
  42b7f7:	je     42b83d <strcmp@plt+0x280a5>
  42b7f9:	mov    rsi,rdx
  42b7fc:	movzx  edx,WORD PTR [rdx]
  42b7ff:	add    edx,ebp
  42b801:	jns    42b80b <strcmp@plt+0x28073>
  42b803:	movzx  ebp,dx
  42b806:	shr    edx,0x10
  42b809:	add    edx,ebp
  42b80b:	movzx  ebp,WORD PTR [rsi+0x2]
  42b80f:	add    ebp,edx
  42b811:	jns    42b81b <strcmp@plt+0x28083>
  42b813:	movzx  edx,bp
  42b816:	shr    ebp,0x10
  42b819:	add    ebp,edx
  42b81b:	movzx  edx,WORD PTR [rsi+0x4]
  42b81f:	add    edx,ebp
  42b821:	jns    42b82b <strcmp@plt+0x28093>
  42b823:	movzx  ebp,dx
  42b826:	shr    edx,0x10
  42b829:	add    edx,ebp
  42b82b:	movzx  ebp,WORD PTR [rsi+0x6]
  42b82f:	add    ebp,edx
  42b831:	jns    42b7f0 <strcmp@plt+0x28058>
  42b833:	movzx  edx,bp
  42b836:	shr    ebp,0x10
  42b839:	add    ebp,edx
  42b83b:	jmp    42b7f0 <strcmp@plt+0x28058>
  42b83d:	add    rsi,0x8
  42b841:	add    r10,0x2
  42b845:	mov    ecx,ebp
  42b847:	test   r11d,r11d
  42b84a:	je     42b87b <strcmp@plt+0x280e3>
  42b84c:	inc    dil
  42b84f:	movzx  edi,dil
  42b853:	and    edi,0x3
  42b856:	xor    edx,edx
  42b858:	jmp    42b869 <strcmp@plt+0x280d1>
  42b85a:	nop    WORD PTR [rax+rax*1+0x0]
  42b860:	inc    rdx
  42b863:	mov    ebp,ecx
  42b865:	cmp    edi,edx
  42b867:	je     42b87b <strcmp@plt+0x280e3>
  42b869:	movzx  ecx,WORD PTR [rsi+rdx*2]
  42b86d:	add    ecx,ebp
  42b86f:	jns    42b860 <strcmp@plt+0x280c8>
  42b871:	movzx  ebp,cx
  42b874:	shr    ecx,0x10
  42b877:	add    ecx,ebp
  42b879:	jmp    42b860 <strcmp@plt+0x280c8>
  42b87b:	add    rbx,r10
  42b87e:	mov    esi,r9d
  42b881:	shr    esi,0x10
  42b884:	mov    edx,r8d
  42b887:	shr    edx,0x10
  42b88a:	test   r14b,0x1
  42b88e:	je     42b895 <strcmp@plt+0x280fd>
  42b890:	movzx  edi,BYTE PTR [rbx]
  42b893:	add    ecx,edi
  42b895:	movzx  edi,r9w
  42b899:	movzx  ebp,r8w
  42b89d:	rol    ax,0x8
  42b8a1:	movzx  eax,ax
  42b8a4:	add    eax,edi
  42b8a6:	add    eax,esi
  42b8a8:	add    eax,ebp
  42b8aa:	add    eax,edx
  42b8ac:	lea    ebx,[rcx+rax*1]
  42b8af:	add    ebx,0x1100
  42b8b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b8bf:	nop
  42b8c0:	mov    eax,ebx
  42b8c2:	shr    eax,0x10
  42b8c5:	je     42b8ce <strcmp@plt+0x28136>
  42b8c7:	movzx  ebx,bx
  42b8ca:	add    ebx,eax
  42b8cc:	jmp    42b8c0 <strcmp@plt+0x28128>
  42b8ce:	not    ebx
  42b8d0:	mov    eax,ebx
  42b8d2:	pop    rbx
  42b8d3:	pop    r14
  42b8d5:	pop    rbp
  42b8d6:	ret    
  42b8d7:	nop    WORD PTR [rax+rax*1+0x0]
  42b8e0:	mov    QWORD PTR [rdi+0x20],rsi
  42b8e4:	mov    QWORD PTR [rdi+0x28],rdx
  42b8e8:	mov    DWORD PTR [rdi+0x18],0x0
  42b8ef:	mov    QWORD PTR [rdi],rdi
  42b8f2:	mov    QWORD PTR [rdi+0x8],rdi
  42b8f6:	ret    
  42b8f7:	nop    WORD PTR [rax+rax*1+0x0]
  42b900:	mov    DWORD PTR [rdi+0x18],0x0
  42b907:	vxorps xmm0,xmm0,xmm0
  42b90b:	vmovups XMMWORD PTR [rdi+0x20],xmm0
  42b910:	mov    QWORD PTR [rdi],rdi
  42b913:	mov    QWORD PTR [rdi+0x8],rdi
  42b917:	ret    
  42b918:	nop    DWORD PTR [rax+rax*1+0x0]
  42b920:	mov    QWORD PTR [rdi+0x20],0x0
  42b928:	mov    QWORD PTR [rdi+0x28],rsi
  42b92c:	mov    DWORD PTR [rdi+0x18],0x0
  42b933:	mov    QWORD PTR [rdi],rdi
  42b936:	mov    QWORD PTR [rdi+0x8],rdi
  42b93a:	ret    
  42b93b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b940:	push   r14
  42b942:	push   rbx
  42b943:	push   rax
  42b944:	mov    r14,rsi
  42b947:	mov    rbx,rdi
  42b94a:	mov    edi,0x30
  42b94f:	call   431d60 <strcmp@plt+0x2e5c8>
  42b954:	mov    QWORD PTR [rax+0x20],rbx
  42b958:	mov    QWORD PTR [rax+0x28],r14
  42b95c:	mov    DWORD PTR [rax+0x18],0x0
  42b963:	mov    QWORD PTR [rax],rax
  42b966:	mov    QWORD PTR [rax+0x8],rax
  42b96a:	add    rsp,0x8
  42b96e:	pop    rbx
  42b96f:	pop    r14
  42b971:	ret    
  42b972:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b97c:	nop    DWORD PTR [rax+0x0]
  42b980:	push   rax
  42b981:	mov    edi,0x30
  42b986:	call   431d60 <strcmp@plt+0x2e5c8>
  42b98b:	mov    DWORD PTR [rax+0x18],0x0
  42b992:	vxorps xmm0,xmm0,xmm0
  42b996:	vmovups XMMWORD PTR [rax+0x20],xmm0
  42b99b:	mov    QWORD PTR [rax],rax
  42b99e:	mov    QWORD PTR [rax+0x8],rax
  42b9a2:	pop    rcx
  42b9a3:	ret    
  42b9a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9ae:	xchg   ax,ax
  42b9b0:	push   rbx
  42b9b1:	mov    rbx,rdi
  42b9b4:	mov    edi,0x30
  42b9b9:	call   431d60 <strcmp@plt+0x2e5c8>
  42b9be:	mov    QWORD PTR [rax+0x20],0x0
  42b9c6:	mov    QWORD PTR [rax+0x28],rbx
  42b9ca:	mov    DWORD PTR [rax+0x18],0x0
  42b9d1:	mov    QWORD PTR [rax],rax
  42b9d4:	mov    QWORD PTR [rax+0x8],rax
  42b9d8:	pop    rbx
  42b9d9:	ret    
  42b9da:	nop    WORD PTR [rax+rax*1+0x0]
  42b9e0:	mov    rax,QWORD PTR [rdi+0x20]
  42b9e4:	ret    
  42b9e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9ef:	nop
  42b9f0:	mov    rax,QWORD PTR [rdi+0x28]
  42b9f4:	ret    
  42b9f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b9ff:	nop
  42ba00:	mov    QWORD PTR [rdi+0x20],rsi
  42ba04:	ret    
  42ba05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ba0f:	nop
  42ba10:	mov    QWORD PTR [rdi+0x28],rsi
  42ba14:	ret    
  42ba15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ba1f:	nop
  42ba20:	push   r15
  42ba22:	push   r14
  42ba24:	push   r12
  42ba26:	push   rbx
  42ba27:	sub    rsp,0x18
  42ba2b:	mov    r14,rsi
  42ba2e:	mov    r15,rdi
  42ba31:	vmovups xmm0,XMMWORD PTR [rdi+0x20]
  42ba36:	vmovaps XMMWORD PTR [rsp],xmm0
  42ba3b:	mov    edi,0x30
  42ba40:	call   431d60 <strcmp@plt+0x2e5c8>
  42ba45:	mov    r12,rax
  42ba48:	vmovaps xmm0,XMMWORD PTR [rsp]
  42ba4d:	vmovups XMMWORD PTR [rax+0x20],xmm0
  42ba52:	mov    DWORD PTR [rax+0x18],0x0
  42ba59:	mov    QWORD PTR [rax],rax
  42ba5c:	mov    QWORD PTR [rax+0x8],rax
  42ba60:	mov    rbx,QWORD PTR [r15+0x8]
  42ba64:	cmp    rbx,r15
  42ba67:	je     42ba8b <strcmp@plt+0x282f3>
  42ba69:	nop    DWORD PTR [rax+0x0]
  42ba70:	mov    rdi,QWORD PTR [rbx+0x10]
  42ba74:	call   r14
  42ba77:	mov    rdi,rax
  42ba7a:	mov    rsi,r12
  42ba7d:	call   42baa0 <strcmp@plt+0x28308>
  42ba82:	mov    rbx,QWORD PTR [rbx+0x8]
  42ba86:	cmp    rbx,r15
  42ba89:	jne    42ba70 <strcmp@plt+0x282d8>
  42ba8b:	mov    rax,r12
  42ba8e:	add    rsp,0x18
  42ba92:	pop    rbx
  42ba93:	pop    r12
  42ba95:	pop    r14
  42ba97:	pop    r15
  42ba99:	ret    
  42ba9a:	nop    WORD PTR [rax+rax*1+0x0]
  42baa0:	push   r15
  42baa2:	push   r14
  42baa4:	push   r13
  42baa6:	push   r12
  42baa8:	push   rbx
  42baa9:	mov    r14,rsi
  42baac:	mov    r15,rdi
  42baaf:	mov    edi,0x18
  42bab4:	call   431d60 <strcmp@plt+0x2e5c8>
  42bab9:	mov    r12,rax
  42babc:	mov    QWORD PTR [rax+0x10],r15
  42bac0:	mov    QWORD PTR [rax],rax
  42bac3:	mov    QWORD PTR [rax+0x8],rax
  42bac7:	mov    rcx,QWORD PTR [r14+0x20]
  42bacb:	test   rcx,rcx
  42bace:	je     42bb49 <strcmp@plt+0x283b1>
  42bad0:	mov    eax,DWORD PTR [r14+0x18]
  42bad4:	test   eax,eax
  42bad6:	je     42bb69 <strcmp@plt+0x283d1>
  42badc:	mov    rbx,QWORD PTR [r14+0x8]
  42bae0:	cmp    rbx,r14
  42bae3:	je     42bb87 <strcmp@plt+0x283ef>
  42bae9:	mov    rsi,QWORD PTR [rbx+0x10]
  42baed:	mov    rdi,r15
  42baf0:	call   rcx
  42baf2:	xor    r13d,r13d
  42baf5:	cmp    eax,0x2
  42baf8:	je     42bb28 <strcmp@plt+0x28390>
  42bafa:	mov    ecx,0x1
  42baff:	nop
  42bb00:	test   eax,eax
  42bb02:	js     42bbc1 <strcmp@plt+0x28429>
  42bb08:	mov    r13d,ecx
  42bb0b:	mov    rbx,QWORD PTR [rbx+0x8]
  42bb0f:	cmp    rbx,r14
  42bb12:	je     42bb28 <strcmp@plt+0x28390>
  42bb14:	mov    rsi,QWORD PTR [rbx+0x10]
  42bb18:	mov    rdi,r15
  42bb1b:	call   QWORD PTR [r14+0x20]
  42bb1f:	lea    ecx,[r13+0x1]
  42bb23:	cmp    eax,0x2
  42bb26:	jne    42bb00 <strcmp@plt+0x28368>
  42bb28:	mov    eax,DWORD PTR [r14+0x18]
  42bb2c:	cmp    r13d,eax
  42bb2f:	jne    42bb8f <strcmp@plt+0x283f7>
  42bb31:	mov    rcx,QWORD PTR [r14]
  42bb34:	mov    QWORD PTR [r12],rcx
  42bb38:	mov    QWORD PTR [r12+0x8],r14
  42bb3d:	mov    rcx,QWORD PTR [r14]
  42bb40:	mov    QWORD PTR [rcx+0x8],r12
  42bb44:	mov    QWORD PTR [r14],r12
  42bb47:	jmp    42bbac <strcmp@plt+0x28414>
  42bb49:	mov    rax,QWORD PTR [r14+0x8]
  42bb4d:	mov    rcx,QWORD PTR [rax]
  42bb50:	mov    QWORD PTR [r12],rcx
  42bb54:	mov    QWORD PTR [r12+0x8],rax
  42bb59:	mov    rcx,QWORD PTR [rax]
  42bb5c:	mov    QWORD PTR [rcx+0x8],r12
  42bb60:	mov    QWORD PTR [rax],r12
  42bb63:	mov    eax,DWORD PTR [r14+0x18]
  42bb67:	jmp    42bbac <strcmp@plt+0x28414>
  42bb69:	mov    rax,QWORD PTR [r14+0x8]
  42bb6d:	mov    rcx,QWORD PTR [rax]
  42bb70:	mov    QWORD PTR [r12],rcx
  42bb74:	mov    QWORD PTR [r12+0x8],rax
  42bb79:	mov    rcx,QWORD PTR [rax]
  42bb7c:	mov    QWORD PTR [rcx+0x8],r12
  42bb80:	mov    QWORD PTR [rax],r12
  42bb83:	xor    eax,eax
  42bb85:	jmp    42bbac <strcmp@plt+0x28414>
  42bb87:	xor    r13d,r13d
  42bb8a:	cmp    r13d,eax
  42bb8d:	je     42bb31 <strcmp@plt+0x28399>
  42bb8f:	mov    rcx,QWORD PTR [rbx]
  42bb92:	mov    rcx,QWORD PTR [rcx+0x8]
  42bb96:	mov    rdx,QWORD PTR [rcx]
  42bb99:	mov    QWORD PTR [r12],rdx
  42bb9d:	mov    QWORD PTR [r12+0x8],rcx
  42bba2:	mov    rdx,QWORD PTR [rcx]
  42bba5:	mov    QWORD PTR [rdx+0x8],r12
  42bba9:	mov    QWORD PTR [rcx],r12
  42bbac:	inc    eax
  42bbae:	mov    DWORD PTR [r14+0x18],eax
  42bbb2:	mov    eax,0x1
  42bbb7:	pop    rbx
  42bbb8:	pop    r12
  42bbba:	pop    r13
  42bbbc:	pop    r14
  42bbbe:	pop    r15
  42bbc0:	ret    
  42bbc1:	mov    rdi,r12
  42bbc4:	call   403790 <free@plt>
  42bbc9:	xor    eax,eax
  42bbcb:	jmp    42bbb7 <strcmp@plt+0x2841f>
  42bbcd:	nop    DWORD PTR [rax]
  42bbd0:	push   r14
  42bbd2:	push   rbx
  42bbd3:	push   rax
  42bbd4:	xor    eax,eax
  42bbd6:	cmp    QWORD PTR [rsi+0x20],0x0
  42bbdb:	jne    42bc10 <strcmp@plt+0x28478>
  42bbdd:	mov    rbx,rsi
  42bbe0:	mov    r14,rdi
  42bbe3:	mov    edi,0x18
  42bbe8:	call   431d60 <strcmp@plt+0x2e5c8>
  42bbed:	mov    QWORD PTR [rax+0x10],r14
  42bbf1:	mov    QWORD PTR [rax],rax
  42bbf4:	mov    rcx,QWORD PTR [rbx]
  42bbf7:	mov    QWORD PTR [rax],rcx
  42bbfa:	mov    QWORD PTR [rax+0x8],rbx
  42bbfe:	mov    rcx,QWORD PTR [rbx]
  42bc01:	mov    QWORD PTR [rcx+0x8],rax
  42bc05:	mov    QWORD PTR [rbx],rax
  42bc08:	inc    DWORD PTR [rbx+0x18]
  42bc0b:	mov    eax,0x1
  42bc10:	add    rsp,0x8
  42bc14:	pop    rbx
  42bc15:	pop    r14
  42bc17:	ret    
  42bc18:	nop    DWORD PTR [rax+rax*1+0x0]
  42bc20:	push   r15
  42bc22:	push   r14
  42bc24:	push   rbx
  42bc25:	cmp    DWORD PTR [rsi+0x18],0x0
  42bc29:	je     42bc68 <strcmp@plt+0x284d0>
  42bc2b:	mov    r15,rsi
  42bc2e:	mov    rbx,QWORD PTR [rsi+0x8]
  42bc32:	cmp    rbx,rsi
  42bc35:	je     42bc68 <strcmp@plt+0x284d0>
  42bc37:	mov    r14,rdi
  42bc3a:	jmp    42bc4e <strcmp@plt+0x284b6>
  42bc3c:	nop    DWORD PTR [rax+0x0]
  42bc40:	cmp    rsi,r14
  42bc43:	je     42bc64 <strcmp@plt+0x284cc>
  42bc45:	mov    rbx,QWORD PTR [rbx+0x8]
  42bc49:	cmp    rbx,r15
  42bc4c:	je     42bc68 <strcmp@plt+0x284d0>
  42bc4e:	mov    rax,QWORD PTR [r15+0x20]
  42bc52:	mov    rsi,QWORD PTR [rbx+0x10]
  42bc56:	test   rax,rax
  42bc59:	je     42bc40 <strcmp@plt+0x284a8>
  42bc5b:	mov    rdi,r14
  42bc5e:	call   rax
  42bc60:	test   eax,eax
  42bc62:	jne    42bc45 <strcmp@plt+0x284ad>
  42bc64:	mov    al,0x1
  42bc66:	jmp    42bc6a <strcmp@plt+0x284d2>
  42bc68:	xor    eax,eax
  42bc6a:	pop    rbx
  42bc6b:	pop    r14
  42bc6d:	pop    r15
  42bc6f:	ret    
  42bc70:	push   r15
  42bc72:	push   r14
  42bc74:	push   r12
  42bc76:	push   rbx
  42bc77:	push   rax
  42bc78:	cmp    DWORD PTR [rsi+0x18],0x0
  42bc7c:	je     42bcc5 <strcmp@plt+0x2852d>
  42bc7e:	mov    r14,rsi
  42bc81:	mov    rbx,QWORD PTR [rsi+0x8]
  42bc85:	cmp    rbx,rsi
  42bc88:	je     42bcc5 <strcmp@plt+0x2852d>
  42bc8a:	mov    r12,rdx
  42bc8d:	mov    r15,rdi
  42bc90:	jmp    42bcae <strcmp@plt+0x28516>
  42bc92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bc9c:	nop    DWORD PTR [rax+0x0]
  42bca0:	cmp    rsi,r15
  42bca3:	je     42bcc1 <strcmp@plt+0x28529>
  42bca5:	mov    rbx,QWORD PTR [rbx+0x8]
  42bca9:	cmp    rbx,r14
  42bcac:	je     42bcc5 <strcmp@plt+0x2852d>
  42bcae:	mov    rsi,QWORD PTR [rbx+0x10]
  42bcb2:	test   r12,r12
  42bcb5:	je     42bca0 <strcmp@plt+0x28508>
  42bcb7:	mov    rdi,r15
  42bcba:	call   r12
  42bcbd:	test   eax,eax
  42bcbf:	jne    42bca5 <strcmp@plt+0x2850d>
  42bcc1:	mov    al,0x1
  42bcc3:	jmp    42bcc7 <strcmp@plt+0x2852f>
  42bcc5:	xor    eax,eax
  42bcc7:	add    rsp,0x8
  42bccb:	pop    rbx
  42bccc:	pop    r12
  42bcce:	pop    r14
  42bcd0:	pop    r15
  42bcd2:	ret    
  42bcd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bcdd:	nop    DWORD PTR [rax]
  42bce0:	push   rbp
  42bce1:	push   r15
  42bce3:	push   r14
  42bce5:	push   r13
  42bce7:	push   r12
  42bce9:	push   rbx
  42bcea:	push   rax
  42bceb:	mov    rbx,QWORD PTR [rdi+0x8]
  42bcef:	cmp    rbx,rdi
  42bcf2:	je     42bd4d <strcmp@plt+0x285b5>
  42bcf4:	mov    r13d,edx
  42bcf7:	mov    r14,rsi
  42bcfa:	mov    r15,rdi
  42bcfd:	mov    ebp,0x1
  42bd02:	lea    r12,[rip+0x1a505]        # 44620e <strcmp@plt+0x42a76>
  42bd09:	jmp    42bd30 <strcmp@plt+0x28598>
  42bd0b:	nop    DWORD PTR [rax+rax*1+0x0]
  42bd10:	call   r14
  42bd13:	mov    edi,r13d
  42bd16:	mov    rsi,r12
  42bd19:	mov    edx,ebp
  42bd1b:	mov    rcx,rax
  42bd1e:	xor    eax,eax
  42bd20:	call   42e520 <strcmp@plt+0x2ad88>
  42bd25:	mov    rbx,QWORD PTR [rbx+0x8]
  42bd29:	inc    ebp
  42bd2b:	cmp    rbx,r15
  42bd2e:	je     42bd4d <strcmp@plt+0x285b5>
  42bd30:	mov    rdi,QWORD PTR [rbx+0x10]
  42bd34:	cmp    r13d,0x5
  42bd38:	jl     42bd10 <strcmp@plt+0x28578>
  42bd3a:	lea    rax,[rip+0x3907f]        # 464dc0 <strcmp@plt+0x61628>
  42bd41:	mov    eax,DWORD PTR [rax]
  42bd43:	add    eax,0x4
  42bd46:	cmp    eax,r13d
  42bd49:	jge    42bd10 <strcmp@plt+0x28578>
  42bd4b:	jmp    42bd25 <strcmp@plt+0x2858d>
  42bd4d:	add    rsp,0x8
  42bd51:	pop    rbx
  42bd52:	pop    r12
  42bd54:	pop    r13
  42bd56:	pop    r14
  42bd58:	pop    r15
  42bd5a:	pop    rbp
  42bd5b:	ret    
  42bd5c:	nop    DWORD PTR [rax+0x0]
  42bd60:	push   rbx
  42bd61:	test   rdi,rdi
  42bd64:	je     42bd88 <strcmp@plt+0x285f0>
  42bd66:	mov    rbx,rsi
  42bd69:	test   rsi,rsi
  42bd6c:	je     42bd88 <strcmp@plt+0x285f0>
  42bd6e:	mov    rax,QWORD PTR [rdi]
  42bd71:	mov    rcx,QWORD PTR [rdi+0x8]
  42bd75:	mov    QWORD PTR [rax+0x8],rcx
  42bd79:	mov    rcx,QWORD PTR [rdi+0x8]
  42bd7d:	mov    QWORD PTR [rcx],rax
  42bd80:	call   403790 <free@plt>
  42bd85:	dec    DWORD PTR [rbx+0x18]
  42bd88:	pop    rbx
  42bd89:	ret    
  42bd8a:	nop    WORD PTR [rax+rax*1+0x0]
  42bd90:	push   r14
  42bd92:	push   rbx
  42bd93:	push   rax
  42bd94:	cmp    DWORD PTR [rdi+0x18],0x0
  42bd98:	je     42bdc1 <strcmp@plt+0x28629>
  42bd9a:	mov    rbx,rdi
  42bd9d:	mov    rdi,QWORD PTR [rdi+0x8]
  42bda1:	mov    r14,QWORD PTR [rdi+0x10]
  42bda5:	mov    rax,QWORD PTR [rdi]
  42bda8:	mov    rcx,QWORD PTR [rdi+0x8]
  42bdac:	mov    QWORD PTR [rax+0x8],rcx
  42bdb0:	mov    rcx,QWORD PTR [rdi+0x8]
  42bdb4:	mov    QWORD PTR [rcx],rax
  42bdb7:	call   403790 <free@plt>
  42bdbc:	dec    DWORD PTR [rbx+0x18]
  42bdbf:	jmp    42bdc4 <strcmp@plt+0x2862c>
  42bdc1:	xor    r14d,r14d
  42bdc4:	mov    rax,r14
  42bdc7:	add    rsp,0x8
  42bdcb:	pop    rbx
  42bdcc:	pop    r14
  42bdce:	ret    
  42bdcf:	nop
  42bdd0:	push   r14
  42bdd2:	push   rbx
  42bdd3:	push   rax
  42bdd4:	cmp    DWORD PTR [rdi+0x18],0x0
  42bdd8:	je     42be00 <strcmp@plt+0x28668>
  42bdda:	mov    rbx,rdi
  42bddd:	mov    rdi,QWORD PTR [rdi]
  42bde0:	mov    r14,QWORD PTR [rdi+0x10]
  42bde4:	mov    rax,QWORD PTR [rdi]
  42bde7:	mov    rcx,QWORD PTR [rdi+0x8]
  42bdeb:	mov    QWORD PTR [rax+0x8],rcx
  42bdef:	mov    rcx,QWORD PTR [rdi+0x8]
  42bdf3:	mov    QWORD PTR [rcx],rax
  42bdf6:	call   403790 <free@plt>
  42bdfb:	dec    DWORD PTR [rbx+0x18]
  42bdfe:	jmp    42be03 <strcmp@plt+0x2866b>
  42be00:	xor    r14d,r14d
  42be03:	mov    rax,r14
  42be06:	add    rsp,0x8
  42be0a:	pop    rbx
  42be0b:	pop    r14
  42be0d:	ret    
  42be0e:	xchg   ax,ax
  42be10:	push   r14
  42be12:	push   rbx
  42be13:	push   rax
  42be14:	test   rdi,rdi
  42be17:	je     42be51 <strcmp@plt+0x286b9>
  42be19:	mov    r14,rsi
  42be1c:	test   rsi,rsi
  42be1f:	je     42be51 <strcmp@plt+0x286b9>
  42be21:	mov    rbx,rdi
  42be24:	mov    rax,QWORD PTR [rdi]
  42be27:	mov    rcx,QWORD PTR [rdi+0x8]
  42be2b:	mov    QWORD PTR [rax+0x8],rcx
  42be2f:	mov    rcx,QWORD PTR [rdi+0x8]
  42be33:	mov    QWORD PTR [rcx],rax
  42be36:	mov    rax,QWORD PTR [r14+0x28]
  42be3a:	test   rax,rax
  42be3d:	je     42be45 <strcmp@plt+0x286ad>
  42be3f:	mov    rdi,QWORD PTR [rbx+0x10]
  42be43:	call   rax
  42be45:	mov    rdi,rbx
  42be48:	call   403790 <free@plt>
  42be4d:	dec    DWORD PTR [r14+0x18]
  42be51:	add    rsp,0x8
  42be55:	pop    rbx
  42be56:	pop    r14
  42be58:	ret    
  42be59:	nop    DWORD PTR [rax+0x0]
  42be60:	push   r15
  42be62:	push   r14
  42be64:	push   rbx
  42be65:	test   rsi,rsi
  42be68:	je     42befc <strcmp@plt+0x28764>
  42be6e:	mov    r14,rsi
  42be71:	cmp    DWORD PTR [rsi+0x18],0x0
  42be75:	je     42befc <strcmp@plt+0x28764>
  42be7b:	mov    r15,rdi
  42be7e:	mov    rbx,QWORD PTR [r14+0x8]
  42be82:	mov    rax,QWORD PTR [r14+0x20]
  42be86:	test   rax,rax
  42be89:	je     42bec4 <strcmp@plt+0x2872c>
  42be8b:	cmp    rbx,r14
  42be8e:	je     42befc <strcmp@plt+0x28764>
  42be90:	mov    rsi,QWORD PTR [rbx+0x10]
  42be94:	mov    rdi,r15
  42be97:	call   rax
  42be99:	test   eax,eax
  42be9b:	je     42becf <strcmp@plt+0x28737>
  42be9d:	nop    DWORD PTR [rax]
  42bea0:	mov    rbx,QWORD PTR [rbx+0x8]
  42bea4:	cmp    rbx,r14
  42bea7:	je     42befc <strcmp@plt+0x28764>
  42bea9:	mov    rsi,QWORD PTR [rbx+0x10]
  42bead:	mov    rdi,r15
  42beb0:	call   QWORD PTR [r14+0x20]
  42beb4:	test   eax,eax
  42beb6:	jne    42bea0 <strcmp@plt+0x28708>
  42beb8:	jmp    42becf <strcmp@plt+0x28737>
  42beba:	nop    WORD PTR [rax+rax*1+0x0]
  42bec0:	mov    rbx,QWORD PTR [rbx+0x8]
  42bec4:	cmp    rbx,r14
  42bec7:	je     42befc <strcmp@plt+0x28764>
  42bec9:	cmp    QWORD PTR [rbx+0x10],r15
  42becd:	jne    42bec0 <strcmp@plt+0x28728>
  42becf:	mov    rax,QWORD PTR [rbx]
  42bed2:	mov    rcx,QWORD PTR [rbx+0x8]
  42bed6:	mov    QWORD PTR [rax+0x8],rcx
  42beda:	mov    rcx,QWORD PTR [rbx+0x8]
  42bede:	mov    QWORD PTR [rcx],rax
  42bee1:	mov    rax,QWORD PTR [r14+0x28]
  42bee5:	test   rax,rax
  42bee8:	je     42bef0 <strcmp@plt+0x28758>
  42beea:	mov    rdi,QWORD PTR [rbx+0x10]
  42beee:	call   rax
  42bef0:	mov    rdi,rbx
  42bef3:	call   403790 <free@plt>
  42bef8:	dec    DWORD PTR [r14+0x18]
  42befc:	pop    rbx
  42befd:	pop    r14
  42beff:	pop    r15
  42bf01:	ret    
  42bf02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf0c:	nop    DWORD PTR [rax+0x0]
  42bf10:	push   r14
  42bf12:	push   rbx
  42bf13:	push   rax
  42bf14:	test   rsi,rsi
  42bf17:	je     42bf6b <strcmp@plt+0x287d3>
  42bf19:	mov    r14,rsi
  42bf1c:	cmp    DWORD PTR [rsi+0x18],0x0
  42bf20:	je     42bf6b <strcmp@plt+0x287d3>
  42bf22:	lea    rax,[r14+0x8]
  42bf26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf30:	mov    rbx,QWORD PTR [rax]
  42bf33:	cmp    rbx,r14
  42bf36:	je     42bf6b <strcmp@plt+0x287d3>
  42bf38:	lea    rax,[rbx+0x8]
  42bf3c:	cmp    QWORD PTR [rbx+0x10],rdi
  42bf40:	jne    42bf30 <strcmp@plt+0x28798>
  42bf42:	mov    rax,QWORD PTR [rbx]
  42bf45:	mov    rcx,QWORD PTR [rbx+0x8]
  42bf49:	mov    QWORD PTR [rax+0x8],rcx
  42bf4d:	mov    rcx,QWORD PTR [rbx+0x8]
  42bf51:	mov    QWORD PTR [rcx],rax
  42bf54:	mov    rax,QWORD PTR [r14+0x28]
  42bf58:	test   rax,rax
  42bf5b:	je     42bf5f <strcmp@plt+0x287c7>
  42bf5d:	call   rax
  42bf5f:	mov    rdi,rbx
  42bf62:	call   403790 <free@plt>
  42bf67:	dec    DWORD PTR [r14+0x18]
  42bf6b:	add    rsp,0x8
  42bf6f:	pop    rbx
  42bf70:	pop    r14
  42bf72:	ret    
  42bf73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf7d:	nop    DWORD PTR [rax]
  42bf80:	push   r15
  42bf82:	push   r14
  42bf84:	push   rbx
  42bf85:	test   rdi,rdi
  42bf88:	je     42bfdc <strcmp@plt+0x28844>
  42bf8a:	mov    r14,rdi
  42bf8d:	cmp    DWORD PTR [rdi+0x18],0x0
  42bf91:	je     42bfdc <strcmp@plt+0x28844>
  42bf93:	mov    rbx,QWORD PTR [r14+0x8]
  42bf97:	cmp    rbx,r14
  42bf9a:	jne    42bfb4 <strcmp@plt+0x2881c>
  42bf9c:	jmp    42bfdc <strcmp@plt+0x28844>
  42bf9e:	xchg   ax,ax
  42bfa0:	mov    rdi,rbx
  42bfa3:	call   403790 <free@plt>
  42bfa8:	dec    DWORD PTR [r14+0x18]
  42bfac:	mov    rbx,r15
  42bfaf:	cmp    r15,r14
  42bfb2:	je     42bfdc <strcmp@plt+0x28844>
  42bfb4:	mov    r15,QWORD PTR [rbx+0x8]
  42bfb8:	test   rbx,rbx
  42bfbb:	je     42bfac <strcmp@plt+0x28814>
  42bfbd:	mov    rax,QWORD PTR [rbx]
  42bfc0:	mov    QWORD PTR [rax+0x8],r15
  42bfc4:	mov    rcx,QWORD PTR [rbx+0x8]
  42bfc8:	mov    QWORD PTR [rcx],rax
  42bfcb:	mov    rax,QWORD PTR [r14+0x28]
  42bfcf:	test   rax,rax
  42bfd2:	je     42bfa0 <strcmp@plt+0x28808>
  42bfd4:	mov    rdi,QWORD PTR [rbx+0x10]
  42bfd8:	call   rax
  42bfda:	jmp    42bfa0 <strcmp@plt+0x28808>
  42bfdc:	pop    rbx
  42bfdd:	pop    r14
  42bfdf:	pop    r15
  42bfe1:	ret    
  42bfe2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bfec:	nop    DWORD PTR [rax+0x0]
  42bff0:	test   rdi,rdi
  42bff3:	je     42c059 <strcmp@plt+0x288c1>
  42bff5:	push   r15
  42bff7:	push   r14
  42bff9:	push   rbx
  42bffa:	mov    r14,rdi
  42bffd:	cmp    DWORD PTR [rdi+0x18],0x0
  42c001:	je     42c04c <strcmp@plt+0x288b4>
  42c003:	mov    rbx,QWORD PTR [r14+0x8]
  42c007:	cmp    rbx,r14
  42c00a:	jne    42c024 <strcmp@plt+0x2888c>
  42c00c:	jmp    42c04c <strcmp@plt+0x288b4>
  42c00e:	xchg   ax,ax
  42c010:	mov    rdi,rbx
  42c013:	call   403790 <free@plt>
  42c018:	dec    DWORD PTR [r14+0x18]
  42c01c:	mov    rbx,r15
  42c01f:	cmp    r15,r14
  42c022:	je     42c04c <strcmp@plt+0x288b4>
  42c024:	mov    r15,QWORD PTR [rbx+0x8]
  42c028:	test   rbx,rbx
  42c02b:	je     42c01c <strcmp@plt+0x28884>
  42c02d:	mov    rax,QWORD PTR [rbx]
  42c030:	mov    QWORD PTR [rax+0x8],r15
  42c034:	mov    rcx,QWORD PTR [rbx+0x8]
  42c038:	mov    QWORD PTR [rcx],rax
  42c03b:	mov    rax,QWORD PTR [r14+0x28]
  42c03f:	test   rax,rax
  42c042:	je     42c010 <strcmp@plt+0x28878>
  42c044:	mov    rdi,QWORD PTR [rbx+0x10]
  42c048:	call   rax
  42c04a:	jmp    42c010 <strcmp@plt+0x28878>
  42c04c:	mov    rdi,r14
  42c04f:	pop    rbx
  42c050:	pop    r14
  42c052:	pop    r15
  42c054:	jmp    403790 <free@plt>
  42c059:	ret    
  42c05a:	nop    WORD PTR [rax+rax*1+0x0]
  42c060:	push   rbp
  42c061:	push   r15
  42c063:	push   r14
  42c065:	push   r13
  42c067:	push   r12
  42c069:	push   rbx
  42c06a:	push   rax
  42c06b:	mov    r15,rdx
  42c06e:	mov    edx,edi
  42c070:	mov    r12d,0x1
  42c076:	test   dl,dl
  42c078:	je     42c117 <strcmp@plt+0x2897f>
  42c07e:	cmp    dl,0x1
  42c081:	jne    42c0f2 <strcmp@plt+0x2895a>
  42c083:	mov    rbx,r8
  42c086:	mov    r14,rcx
  42c089:	mov    rbp,rsi
  42c08c:	mov    edi,0x4
  42c091:	call   419a00 <strcmp@plt+0x16268>
  42c096:	mov    r13,rax
  42c099:	vxorps xmm0,xmm0,xmm0
  42c09d:	vmovups XMMWORD PTR [rbx],xmm0
  42c0a1:	mov    DWORD PTR [rbx+0x10],0x0
  42c0a8:	mov    rdi,rbp
  42c0ab:	call   4031e0 <strlen@plt>
  42c0b0:	mov    rdi,r13
  42c0b3:	mov    rsi,rbp
  42c0b6:	mov    rdx,rax
  42c0b9:	mov    rcx,r15
  42c0bc:	mov    r8,r14
  42c0bf:	mov    r9,rbx
  42c0c2:	call   41a1d0 <strcmp@plt+0x16a38>
  42c0c7:	test   eax,eax
  42c0c9:	je     42c117 <strcmp@plt+0x2897f>
  42c0cb:	lea    rax,[rip+0x38cee]        # 464dc0 <strcmp@plt+0x61628>
  42c0d2:	xor    r12d,r12d
  42c0d5:	cmp    DWORD PTR [rax],0x2
  42c0d8:	jl     42c117 <strcmp@plt+0x2897f>
  42c0da:	lea    rsi,[rip+0x1f277]        # 44b358 <strcmp@plt+0x47bc0>
  42c0e1:	xor    r12d,r12d
  42c0e4:	mov    edi,0x6
  42c0e9:	xor    eax,eax
  42c0eb:	call   42e520 <strcmp@plt+0x2ad88>
  42c0f0:	jmp    42c117 <strcmp@plt+0x2897f>
  42c0f2:	lea    rax,[rip+0x38cc7]        # 464dc0 <strcmp@plt+0x61628>
  42c0f9:	xor    r12d,r12d
  42c0fc:	cmp    DWORD PTR [rax],0x2
  42c0ff:	jl     42c117 <strcmp@plt+0x2897f>
  42c101:	lea    rsi,[rip+0x1f220]        # 44b328 <strcmp@plt+0x47b90>
  42c108:	xor    r12d,r12d
  42c10b:	mov    edi,0x6
  42c110:	xor    eax,eax
  42c112:	call   42e520 <strcmp@plt+0x2ad88>
  42c117:	mov    eax,r12d
  42c11a:	add    rsp,0x8
  42c11e:	pop    rbx
  42c11f:	pop    r12
  42c121:	pop    r13
  42c123:	pop    r14
  42c125:	pop    r15
  42c127:	pop    rbp
  42c128:	ret    
  42c129:	nop    DWORD PTR [rax+0x0]
  42c130:	push   rbp
  42c131:	push   r15
  42c133:	push   r14
  42c135:	push   r13
  42c137:	push   r12
  42c139:	push   rbx
  42c13a:	push   rax
  42c13b:	mov    r12,rdx
  42c13e:	mov    edx,edi
  42c140:	cmp    dl,0x1
  42c143:	jne    42c1dc <strcmp@plt+0x28a44>
  42c149:	mov    rbx,r8
  42c14c:	mov    r15,rcx
  42c14f:	mov    r13,rsi
  42c152:	mov    edi,0x14
  42c157:	call   431d90 <strcmp@plt+0x2e5f8>
  42c15c:	test   rax,rax
  42c15f:	je     42c201 <strcmp@plt+0x28a69>
  42c165:	mov    r14,rax
  42c168:	mov    eax,DWORD PTR [rbx+0x10]
  42c16b:	mov    DWORD PTR [r14+0x10],eax
  42c16f:	vmovups xmm0,XMMWORD PTR [rbx]
  42c173:	vmovups XMMWORD PTR [r14],xmm0
  42c178:	vxorps xmm0,xmm0,xmm0
  42c17c:	vmovups XMMWORD PTR [rbx],xmm0
  42c180:	mov    DWORD PTR [rbx+0x10],0x0
  42c187:	mov    edi,0x4
  42c18c:	call   419a00 <strcmp@plt+0x16268>
  42c191:	mov    rbp,rax
  42c194:	mov    rdi,r13
  42c197:	call   4031e0 <strlen@plt>
  42c19c:	mov    rdi,rbp
  42c19f:	mov    rsi,r13
  42c1a2:	mov    rdx,rax
  42c1a5:	mov    rcx,r12
  42c1a8:	mov    r8,r15
  42c1ab:	mov    r9,rbx
  42c1ae:	call   41a1d0 <strcmp@plt+0x16a38>
  42c1b3:	test   eax,eax
  42c1b5:	je     42c21b <strcmp@plt+0x28a83>
  42c1b7:	lea    rax,[rip+0x38c02]        # 464dc0 <strcmp@plt+0x61628>
  42c1be:	xor    ebx,ebx
  42c1c0:	cmp    DWORD PTR [rax],0x2
  42c1c3:	jl     42c23a <strcmp@plt+0x28aa2>
  42c1c5:	lea    rsi,[rip+0x1f1d7]        # 44b3a3 <strcmp@plt+0x47c0b>
  42c1cc:	xor    ebx,ebx
  42c1ce:	mov    edi,0x6
  42c1d3:	xor    eax,eax
  42c1d5:	call   42e520 <strcmp@plt+0x2ad88>
  42c1da:	jmp    42c23a <strcmp@plt+0x28aa2>
  42c1dc:	lea    rax,[rip+0x38bdd]        # 464dc0 <strcmp@plt+0x61628>
  42c1e3:	xor    ebx,ebx
  42c1e5:	cmp    DWORD PTR [rax],0x2
  42c1e8:	jl     42c23a <strcmp@plt+0x28aa2>
  42c1ea:	lea    rsi,[rip+0x1f137]        # 44b328 <strcmp@plt+0x47b90>
  42c1f1:	xor    ebx,ebx
  42c1f3:	mov    edi,0x6
  42c1f8:	xor    eax,eax
  42c1fa:	call   42e520 <strcmp@plt+0x2ad88>
  42c1ff:	jmp    42c23a <strcmp@plt+0x28aa2>
  42c201:	lea    rsi,[rip+0x1f17a]        # 44b382 <strcmp@plt+0x47bea>
  42c208:	mov    edi,0x2
  42c20d:	xor    eax,eax
  42c20f:	call   42e520 <strcmp@plt+0x2ad88>
  42c214:	mov    ebx,0xfffffffc
  42c219:	jmp    42c23a <strcmp@plt+0x28aa2>
  42c21b:	mov    edx,0x14
  42c220:	mov    rdi,rbx
  42c223:	mov    rsi,r14
  42c226:	call   403220 <strncmp@plt>
  42c22b:	xor    ebx,ebx
  42c22d:	test   eax,eax
  42c22f:	sete   bl
  42c232:	mov    rdi,r14
  42c235:	call   403790 <free@plt>
  42c23a:	mov    eax,ebx
  42c23c:	add    rsp,0x8
  42c240:	pop    rbx
  42c241:	pop    r12
  42c243:	pop    r13
  42c245:	pop    r14
  42c247:	pop    r15
  42c249:	pop    rbp
  42c24a:	ret    
  42c24b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c250:	push   rbx
  42c251:	mov    edi,0x10
  42c256:	call   431d60 <strcmp@plt+0x2e5c8>
  42c25b:	mov    rbx,rax
  42c25e:	mov    edi,0x1
  42c263:	mov    esi,0x28
  42c268:	call   4032d0 <calloc@plt>
  42c26d:	mov    QWORD PTR [rbx],rax
  42c270:	mov    rax,rbx
  42c273:	pop    rbx
  42c274:	ret    
  42c275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c27f:	nop
  42c280:	push   r14
  42c282:	push   rbx
  42c283:	push   rax
  42c284:	mov    r14,rdi
  42c287:	mov    edi,0x10
  42c28c:	call   431d60 <strcmp@plt+0x2e5c8>
  42c291:	mov    rbx,rax
  42c294:	mov    edi,0x1
  42c299:	mov    esi,0x28
  42c29e:	call   4032d0 <calloc@plt>
  42c2a3:	mov    QWORD PTR [rbx],rax
  42c2a6:	mov    QWORD PTR [rbx+0x8],r14
  42c2aa:	mov    rax,rbx
  42c2ad:	add    rsp,0x8
  42c2b1:	pop    rbx
  42c2b2:	pop    r14
  42c2b4:	ret    
  42c2b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c2bf:	nop
  42c2c0:	push   rbp
  42c2c1:	push   r15
  42c2c3:	push   r14
  42c2c5:	push   r13
  42c2c7:	push   r12
  42c2c9:	push   rbx
  42c2ca:	push   rax
  42c2cb:	mov    r14,rdx
  42c2ce:	mov    r12,rsi
  42c2d1:	mov    r15,rdi
  42c2d4:	mov    r13,QWORD PTR [rdi]
  42c2d7:	mov    eax,DWORD PTR [r13+0x8]
  42c2db:	cmp    eax,DWORD PTR [r13+0xc]
  42c2df:	jb     42c300 <strcmp@plt+0x28b68>
  42c2e1:	mov    eax,DWORD PTR [r13+0x0]
  42c2e5:	mov    ecx,DWORD PTR [r13+0x4]
  42c2e9:	add    ecx,ecx
  42c2eb:	xor    edx,edx
  42c2ed:	cmp    eax,ecx
  42c2ef:	setbe  dl
  42c2f2:	lea    esi,[rax+rdx*2]
  42c2f5:	add    esi,0xffffffff
  42c2f8:	mov    rdi,r13
  42c2fb:	call   42c7c0 <strcmp@plt+0x29028>
  42c300:	mov    r8d,DWORD PTR [r13+0x0]
  42c304:	lea    r10d,[r8-0x1]
  42c308:	mov    rax,r12
  42c30b:	shr    rax,0x21
  42c30f:	xor    eax,r12d
  42c312:	mov    ecx,r12d
  42c315:	shl    ecx,0xb
  42c318:	xor    ecx,eax
  42c31a:	mov    r11d,r10d
  42c31d:	and    r11d,ecx
  42c320:	mov    r9,QWORD PTR [r13+0x10]
  42c324:	mov    eax,r11d
  42c327:	shr    eax,0x4
  42c32a:	lea    edx,[r11+r11*1]
  42c32e:	mov    esi,0x2
  42c333:	shlx   edx,esi,edx
  42c338:	test   DWORD PTR [r9+rax*4],edx
  42c33c:	je     42c346 <strcmp@plt+0x28bae>
  42c33e:	mov    edx,r11d
  42c341:	jmp    42c3c9 <strcmp@plt+0x28c31>
  42c346:	mov    eax,ecx
  42c348:	shr    eax,0x3
  42c34b:	shl    ecx,0x3
  42c34e:	xor    ecx,eax
  42c350:	or     ecx,0x1
  42c353:	and    ecx,r10d
  42c356:	mov    edx,r8d
  42c359:	mov    esi,r11d
  42c35c:	jmp    42c370 <strcmp@plt+0x28bd8>
  42c35e:	xchg   ax,ax
  42c360:	bt     eax,edi
  42c363:	cmovb  edx,esi
  42c366:	add    esi,ecx
  42c368:	and    esi,r10d
  42c36b:	cmp    esi,r11d
  42c36e:	je     42c3b0 <strcmp@plt+0x28c18>
  42c370:	mov    eax,esi
  42c372:	shr    eax,0x4
  42c375:	mov    eax,DWORD PTR [r9+rax*4]
  42c379:	lea    edi,[rsi+rsi*1]
  42c37c:	and    edi,0x1e
  42c37f:	shrx   ebx,eax,edi
  42c384:	test   bl,0x2
  42c387:	jne    42c39a <strcmp@plt+0x28c02>
  42c389:	test   bl,0x1
  42c38c:	jne    42c360 <strcmp@plt+0x28bc8>
  42c38e:	mov    rbx,QWORD PTR [r13+0x18]
  42c392:	mov    ebp,esi
  42c394:	cmp    QWORD PTR [rbx+rbp*8],r12
  42c398:	jne    42c360 <strcmp@plt+0x28bc8>
  42c39a:	mov    ecx,0x2
  42c39f:	shlx   ecx,ecx,edi
  42c3a4:	test   ecx,eax
  42c3a6:	sete   al
  42c3a9:	mov    r11d,esi
  42c3ac:	mov    ecx,edx
  42c3ae:	jmp    42c3ba <strcmp@plt+0x28c22>
  42c3b0:	mov    al,0x1
  42c3b2:	mov    ecx,r8d
  42c3b5:	cmp    edx,r8d
  42c3b8:	jne    42c3c9 <strcmp@plt+0x28c31>
  42c3ba:	cmp    ecx,r8d
  42c3bd:	cmove  ecx,r11d
  42c3c1:	test   al,al
  42c3c3:	cmovne ecx,r11d
  42c3c7:	mov    edx,ecx
  42c3c9:	mov    ecx,edx
  42c3cb:	shr    ecx,0x4
  42c3ce:	lea    esi,[rdx+rdx*1]
  42c3d1:	and    esi,0x1e
  42c3d4:	shrx   eax,DWORD PTR [r9+rcx*4],esi
  42c3da:	test   al,0x2
  42c3dc:	jne    42c3e6 <strcmp@plt+0x28c4e>
  42c3de:	test   al,0x1
  42c3e0:	jne    42c40d <strcmp@plt+0x28c75>
  42c3e2:	mov    eax,edx
  42c3e4:	jmp    42c42e <strcmp@plt+0x28c96>
  42c3e6:	mov    rdi,QWORD PTR [r13+0x18]
  42c3ea:	mov    eax,edx
  42c3ec:	mov    QWORD PTR [rdi+rax*8],r12
  42c3f0:	mov    rdx,QWORD PTR [r13+0x10]
  42c3f4:	mov    edi,0x3
  42c3f9:	shlx   esi,edi,esi
  42c3fe:	not    esi
  42c400:	and    DWORD PTR [rdx+rcx*4],esi
  42c403:	inc    DWORD PTR [r13+0x4]
  42c407:	inc    DWORD PTR [r13+0x8]
  42c40b:	jmp    42c42e <strcmp@plt+0x28c96>
  42c40d:	mov    rdi,QWORD PTR [r13+0x18]
  42c411:	mov    eax,edx
  42c413:	mov    QWORD PTR [rdi+rax*8],r12
  42c417:	mov    rdx,QWORD PTR [r13+0x10]
  42c41b:	mov    edi,0x3
  42c420:	shlx   esi,edi,esi
  42c425:	not    esi
  42c427:	and    DWORD PTR [rdx+rcx*4],esi
  42c42a:	inc    DWORD PTR [r13+0x4]
  42c42e:	mov    rcx,QWORD PTR [r15]
  42c431:	mov    rcx,QWORD PTR [rcx+0x20]
  42c435:	mov    QWORD PTR [rcx+rax*8],r14
  42c439:	add    rsp,0x8
  42c43d:	pop    rbx
  42c43e:	pop    r12
  42c440:	pop    r13
  42c442:	pop    r14
  42c444:	pop    r15
  42c446:	pop    rbp
  42c447:	ret    
  42c448:	nop    DWORD PTR [rax+rax*1+0x0]
  42c450:	push   rbp
  42c451:	push   r15
  42c453:	push   r14
  42c455:	push   rbx
  42c456:	mov    r9,QWORD PTR [rdi]
  42c459:	mov    r8d,DWORD PTR [r9]
  42c45c:	test   r8d,r8d
  42c45f:	je     42c4fa <strcmp@plt+0x28d62>
  42c465:	lea    r11d,[r8-0x1]
  42c469:	mov    rax,rsi
  42c46c:	shr    rax,0x21
  42c470:	xor    eax,esi
  42c472:	mov    r15d,esi
  42c475:	shl    r15d,0xb
  42c479:	xor    r15d,eax
  42c47c:	mov    r14d,r11d
  42c47f:	and    r14d,r15d
  42c482:	mov    eax,r15d
  42c485:	shr    eax,0x3
  42c488:	shl    r15d,0x3
  42c48c:	xor    r15d,eax
  42c48f:	or     r15d,0x1
  42c493:	and    r15d,r11d
  42c496:	mov    r10,QWORD PTR [r9+0x10]
  42c49a:	xor    eax,eax
  42c49c:	mov    edx,r14d
  42c49f:	jmp    42c4bb <strcmp@plt+0x28d23>
  42c4a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c4ab:	nop    DWORD PTR [rax+rax*1+0x0]
  42c4b0:	add    edx,r15d
  42c4b3:	and    edx,r11d
  42c4b6:	cmp    edx,r14d
  42c4b9:	je     42c4fc <strcmp@plt+0x28d64>
  42c4bb:	mov    ecx,edx
  42c4bd:	shr    ecx,0x4
  42c4c0:	mov    ebx,DWORD PTR [r10+rcx*4]
  42c4c4:	lea    ebp,[rdx+rdx*1]
  42c4c7:	and    ebp,0x1e
  42c4ca:	shrx   ecx,ebx,ebp
  42c4cf:	test   cl,0x2
  42c4d2:	jne    42c4e5 <strcmp@plt+0x28d4d>
  42c4d4:	test   cl,0x1
  42c4d7:	jne    42c4b0 <strcmp@plt+0x28d18>
  42c4d9:	mov    rcx,QWORD PTR [r9+0x18]
  42c4dd:	mov    edi,edx
  42c4df:	cmp    QWORD PTR [rcx+rdi*8],rsi
  42c4e3:	jne    42c4b0 <strcmp@plt+0x28d18>
  42c4e5:	mov    ecx,0x3
  42c4ea:	shlx   eax,ecx,ebp
  42c4ef:	test   eax,ebx
  42c4f1:	cmovne edx,r8d
  42c4f5:	cmp    edx,r8d
  42c4f8:	jne    42c503 <strcmp@plt+0x28d6b>
  42c4fa:	xor    eax,eax
  42c4fc:	pop    rbx
  42c4fd:	pop    r14
  42c4ff:	pop    r15
  42c501:	pop    rbp
  42c502:	ret    
  42c503:	mov    rax,QWORD PTR [r9+0x20]
  42c507:	mov    esi,edx
  42c509:	mov    rax,QWORD PTR [rax+rsi*8]
  42c50d:	mov    esi,edx
  42c50f:	shr    esi,0x4
  42c512:	mov    edi,DWORD PTR [r10+rsi*4]
  42c516:	add    edx,edx
  42c518:	and    edx,0x1e
  42c51b:	shlx   ecx,ecx,edx
  42c520:	test   edi,ecx
  42c522:	jne    42c4fc <strcmp@plt+0x28d64>
  42c524:	bts    edi,edx
  42c527:	mov    DWORD PTR [r10+rsi*4],edi
  42c52b:	dec    DWORD PTR [r9+0x4]
  42c52f:	jmp    42c4fc <strcmp@plt+0x28d64>
  42c531:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c53b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c540:	push   rbp
  42c541:	push   r15
  42c543:	push   r14
  42c545:	push   rbx
  42c546:	mov    r9,QWORD PTR [rdi]
  42c549:	mov    r8d,DWORD PTR [r9]
  42c54c:	test   r8d,r8d
  42c54f:	je     42c5ec <strcmp@plt+0x28e54>
  42c555:	lea    r10d,[r8-0x1]
  42c559:	mov    rax,rsi
  42c55c:	shr    rax,0x21
  42c560:	xor    eax,esi
  42c562:	mov    r15d,esi
  42c565:	shl    r15d,0xb
  42c569:	xor    r15d,eax
  42c56c:	mov    r11d,r10d
  42c56f:	and    r11d,r15d
  42c572:	mov    eax,r15d
  42c575:	shr    eax,0x3
  42c578:	shl    r15d,0x3
  42c57c:	xor    r15d,eax
  42c57f:	or     r15d,0x1
  42c583:	and    r15d,r10d
  42c586:	mov    r14,QWORD PTR [r9+0x10]
  42c58a:	xor    eax,eax
  42c58c:	mov    ecx,r11d
  42c58f:	jmp    42c5ab <strcmp@plt+0x28e13>
  42c591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c59b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c5a0:	add    ecx,r15d
  42c5a3:	and    ecx,r10d
  42c5a6:	cmp    ecx,r11d
  42c5a9:	je     42c5fa <strcmp@plt+0x28e62>
  42c5ab:	mov    edi,ecx
  42c5ad:	shr    edi,0x4
  42c5b0:	mov    ebx,DWORD PTR [r14+rdi*4]
  42c5b4:	lea    ebp,[rcx+rcx*1]
  42c5b7:	and    ebp,0x1e
  42c5ba:	shrx   edi,ebx,ebp
  42c5bf:	test   dil,0x2
  42c5c3:	jne    42c5d7 <strcmp@plt+0x28e3f>
  42c5c5:	test   dil,0x1
  42c5c9:	jne    42c5a0 <strcmp@plt+0x28e08>
  42c5cb:	mov    rdi,QWORD PTR [r9+0x18]
  42c5cf:	mov    edx,ecx
  42c5d1:	cmp    QWORD PTR [rdi+rdx*8],rsi
  42c5d5:	jne    42c5a0 <strcmp@plt+0x28e08>
  42c5d7:	mov    eax,0x3
  42c5dc:	shlx   eax,eax,ebp
  42c5e1:	test   eax,ebx
  42c5e3:	cmovne ecx,r8d
  42c5e7:	cmp    ecx,r8d
  42c5ea:	jne    42c5f0 <strcmp@plt+0x28e58>
  42c5ec:	xor    eax,eax
  42c5ee:	jmp    42c5fa <strcmp@plt+0x28e62>
  42c5f0:	mov    rax,QWORD PTR [r9+0x20]
  42c5f4:	mov    ecx,ecx
  42c5f6:	mov    rax,QWORD PTR [rax+rcx*8]
  42c5fa:	pop    rbx
  42c5fb:	pop    r14
  42c5fd:	pop    r15
  42c5ff:	pop    rbp
  42c600:	ret    
  42c601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c60b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c610:	test   rdi,rdi
  42c613:	je     42c6ba <strcmp@plt+0x28f22>
  42c619:	push   rbp
  42c61a:	push   r15
  42c61c:	push   r14
  42c61e:	push   r12
  42c620:	push   rbx
  42c621:	mov    r14,rdi
  42c624:	mov    r12,QWORD PTR [rdi]
  42c627:	cmp    DWORD PTR [r12],0x0
  42c62c:	je     42c67f <strcmp@plt+0x28ee7>
  42c62e:	xor    ebp,ebp
  42c630:	mov    r15d,0x3
  42c636:	xor    ebx,ebx
  42c638:	jmp    42c64b <strcmp@plt+0x28eb3>
  42c63a:	nop    WORD PTR [rax+rax*1+0x0]
  42c640:	inc    ebx
  42c642:	add    ebp,0x2
  42c645:	cmp    ebx,DWORD PTR [r12]
  42c649:	je     42c67f <strcmp@plt+0x28ee7>
  42c64b:	mov    rax,QWORD PTR [r12+0x10]
  42c650:	mov    ecx,ebx
  42c652:	shr    ecx,0x4
  42c655:	mov    edx,ebp
  42c657:	and    dl,0x1e
  42c65a:	shlx   edx,r15d,edx
  42c65f:	test   DWORD PTR [rax+rcx*4],edx
  42c662:	jne    42c640 <strcmp@plt+0x28ea8>
  42c664:	mov    rax,QWORD PTR [r14+0x8]
  42c668:	test   rax,rax
  42c66b:	je     42c640 <strcmp@plt+0x28ea8>
  42c66d:	mov    rcx,QWORD PTR [r12+0x20]
  42c672:	mov    edx,ebx
  42c674:	mov    rdi,QWORD PTR [rcx+rdx*8]
  42c678:	call   rax
  42c67a:	mov    r12,QWORD PTR [r14]
  42c67d:	jmp    42c640 <strcmp@plt+0x28ea8>
  42c67f:	test   r12,r12
  42c682:	je     42c6aa <strcmp@plt+0x28f12>
  42c684:	mov    rdi,QWORD PTR [r12+0x18]
  42c689:	call   403790 <free@plt>
  42c68e:	mov    rdi,QWORD PTR [r12+0x10]
  42c693:	call   403790 <free@plt>
  42c698:	mov    rdi,QWORD PTR [r12+0x20]
  42c69d:	call   403790 <free@plt>
  42c6a2:	mov    rdi,r12
  42c6a5:	call   403790 <free@plt>
  42c6aa:	mov    rdi,r14
  42c6ad:	pop    rbx
  42c6ae:	pop    r12
  42c6b0:	pop    r14
  42c6b2:	pop    r15
  42c6b4:	pop    rbp
  42c6b5:	jmp    403790 <free@plt>
  42c6ba:	ret    
  42c6bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42c6c0:	push   rbp
  42c6c1:	push   r15
  42c6c3:	push   r14
  42c6c5:	push   r12
  42c6c7:	push   rbx
  42c6c8:	mov    r14,rdi
  42c6cb:	call   42b980 <strcmp@plt+0x281e8>
  42c6d0:	mov    r15,rax
  42c6d3:	mov    rax,QWORD PTR [r14]
  42c6d6:	cmp    DWORD PTR [rax],0x0
  42c6d9:	je     42c729 <strcmp@plt+0x28f91>
  42c6db:	xor    ebp,ebp
  42c6dd:	mov    r12d,0x3
  42c6e3:	xor    ebx,ebx
  42c6e5:	jmp    42c6f9 <strcmp@plt+0x28f61>
  42c6e7:	nop    WORD PTR [rax+rax*1+0x0]
  42c6f0:	inc    ebx
  42c6f2:	add    ebp,0x2
  42c6f5:	cmp    ebx,DWORD PTR [rax]
  42c6f7:	je     42c729 <strcmp@plt+0x28f91>
  42c6f9:	mov    rcx,QWORD PTR [rax+0x10]
  42c6fd:	mov    edx,ebx
  42c6ff:	shr    edx,0x4
  42c702:	mov    esi,ebp
  42c704:	and    sil,0x1e
  42c708:	shlx   esi,r12d,esi
  42c70d:	test   DWORD PTR [rcx+rdx*4],esi
  42c710:	jne    42c6f0 <strcmp@plt+0x28f58>
  42c712:	mov    rax,QWORD PTR [rax+0x18]
  42c716:	mov    ecx,ebx
  42c718:	mov    rdi,QWORD PTR [rax+rcx*8]
  42c71c:	mov    rsi,r15
  42c71f:	call   42baa0 <strcmp@plt+0x28308>
  42c724:	mov    rax,QWORD PTR [r14]
  42c727:	jmp    42c6f0 <strcmp@plt+0x28f58>
  42c729:	mov    rax,r15
  42c72c:	pop    rbx
  42c72d:	pop    r12
  42c72f:	pop    r14
  42c731:	pop    r15
  42c733:	pop    rbp
  42c734:	ret    
  42c735:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c73f:	nop
  42c740:	push   rbp
  42c741:	push   r15
  42c743:	push   r14
  42c745:	push   r12
  42c747:	push   rbx
  42c748:	mov    r14,rdi
  42c74b:	call   42b980 <strcmp@plt+0x281e8>
  42c750:	mov    r15,rax
  42c753:	mov    rax,QWORD PTR [r14]
  42c756:	cmp    DWORD PTR [rax],0x0
  42c759:	je     42c7a9 <strcmp@plt+0x29011>
  42c75b:	xor    ebp,ebp
  42c75d:	mov    r12d,0x3
  42c763:	xor    ebx,ebx
  42c765:	jmp    42c779 <strcmp@plt+0x28fe1>
  42c767:	nop    WORD PTR [rax+rax*1+0x0]
  42c770:	inc    ebx
  42c772:	add    ebp,0x2
  42c775:	cmp    ebx,DWORD PTR [rax]
  42c777:	je     42c7a9 <strcmp@plt+0x29011>
  42c779:	mov    rcx,QWORD PTR [rax+0x10]
  42c77d:	mov    edx,ebx
  42c77f:	shr    edx,0x4
  42c782:	mov    esi,ebp
  42c784:	and    sil,0x1e
  42c788:	shlx   esi,r12d,esi
  42c78d:	test   DWORD PTR [rcx+rdx*4],esi
  42c790:	jne    42c770 <strcmp@plt+0x28fd8>
  42c792:	mov    rax,QWORD PTR [rax+0x20]
  42c796:	mov    ecx,ebx
  42c798:	mov    rdi,QWORD PTR [rax+rcx*8]
  42c79c:	mov    rsi,r15
  42c79f:	call   42baa0 <strcmp@plt+0x28308>
  42c7a4:	mov    rax,QWORD PTR [r14]
  42c7a7:	jmp    42c770 <strcmp@plt+0x28fd8>
  42c7a9:	mov    rax,r15
  42c7ac:	pop    rbx
  42c7ad:	pop    r12
  42c7af:	pop    r14
  42c7b1:	pop    r15
  42c7b3:	pop    rbp
  42c7b4:	ret    
  42c7b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c7bf:	nop
  42c7c0:	push   rbp
  42c7c1:	push   r15
  42c7c3:	push   r14
  42c7c5:	push   r13
  42c7c7:	push   r12
  42c7c9:	push   rbx
  42c7ca:	sub    rsp,0x18
  42c7ce:	dec    esi
  42c7d0:	mov    eax,esi
  42c7d2:	shr    eax,1
  42c7d4:	or     eax,esi
  42c7d6:	mov    ecx,eax
  42c7d8:	shr    ecx,0x2
  42c7db:	or     ecx,eax
  42c7dd:	mov    eax,ecx
  42c7df:	shr    eax,0x4
  42c7e2:	or     eax,ecx
  42c7e4:	mov    ecx,eax
  42c7e6:	shr    ecx,0x8
  42c7e9:	or     ecx,eax
  42c7eb:	mov    r12d,ecx
  42c7ee:	shr    r12d,0x10
  42c7f2:	or     r12d,ecx
  42c7f5:	inc    r12d
  42c7f8:	cmp    r12d,0x4
  42c7fc:	mov    eax,0x4
  42c801:	cmovbe r12d,eax
  42c805:	vcvtsi2sd xmm0,xmm0,r12
  42c80a:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1b186]        # 447998 <strcmp@plt+0x44200>
  42c812:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x1b186]        # 4479a0 <strcmp@plt+0x44208>
  42c81a:	vcvttsd2si rcx,xmm0
  42c81f:	cmp    DWORD PTR [rdi+0x4],ecx
  42c822:	jae    42ca58 <strcmp@plt+0x292c0>
  42c828:	mov    rbp,rdi
  42c82b:	mov    QWORD PTR [rsp+0x10],rcx
  42c830:	mov    r15d,r12d
  42c833:	shr    r15d,0x2
  42c837:	and    r15d,0xfffffffc
  42c83b:	cmp    r12d,0x10
  42c83f:	cmovb  r15d,eax
  42c843:	mov    rdi,r15
  42c846:	call   403520 <malloc@plt>
  42c84b:	mov    r14,rax
  42c84e:	mov    rdi,rax
  42c851:	mov    esi,0xaa
  42c856:	mov    rdx,r15
  42c859:	call   403260 <memset@plt>
  42c85e:	mov    ebx,DWORD PTR [rbp+0x0]
  42c861:	cmp    ebx,r12d
  42c864:	jae    42c890 <strcmp@plt+0x290f8>
  42c866:	mov    rdi,QWORD PTR [rbp+0x18]
  42c86a:	mov    r15d,r12d
  42c86d:	shl    r15,0x3
  42c871:	mov    rsi,r15
  42c874:	call   403660 <realloc@plt>
  42c879:	mov    QWORD PTR [rbp+0x18],rax
  42c87d:	mov    rdi,QWORD PTR [rbp+0x20]
  42c881:	mov    rsi,r15
  42c884:	call   403660 <realloc@plt>
  42c889:	mov    QWORD PTR [rbp+0x20],rax
  42c88d:	mov    ebx,DWORD PTR [rbp+0x0]
  42c890:	test   ebx,ebx
  42c892:	je     42ca39 <strcmp@plt+0x292a1>
  42c898:	mov    QWORD PTR [rsp+0x8],r12
  42c89d:	lea    eax,[r12-0x1]
  42c8a2:	xor    r10d,r10d
  42c8a5:	mov    r9d,0x2
  42c8ab:	mov    QWORD PTR [rsp],rbp
  42c8af:	jmp    42c8e2 <strcmp@plt+0x2914a>
  42c8b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c8bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42c8c0:	mov    rcx,QWORD PTR [rbp+0x18]
  42c8c4:	mov    edx,edx
  42c8c6:	mov    QWORD PTR [rcx+rdx*8],r8
  42c8ca:	mov    rcx,QWORD PTR [rbp+0x20]
  42c8ce:	mov    QWORD PTR [rcx+rdx*8],r11
  42c8d2:	inc    r10d
  42c8d5:	cmp    r10d,ebx
  42c8d8:	mov    rbp,QWORD PTR [rsp]
  42c8dc:	je     42ca08 <strcmp@plt+0x29270>
  42c8e2:	mov    r15,QWORD PTR [rbp+0x10]
  42c8e6:	mov    esi,r10d
  42c8e9:	shr    esi,0x4
  42c8ec:	mov    edx,DWORD PTR [r15+rsi*4]
  42c8f0:	lea    r12d,[r10+r10*1]
  42c8f4:	and    r12d,0x1e
  42c8f8:	mov    ecx,0x3
  42c8fd:	shlx   ecx,ecx,r12d
  42c902:	test   edx,ecx
  42c904:	jne    42c8d2 <strcmp@plt+0x2913a>
  42c906:	lea    rdi,[r15+rsi*4]
  42c90a:	mov    ecx,r10d
  42c90d:	mov    rbp,QWORD PTR [rsp]
  42c911:	mov    rsi,QWORD PTR [rbp+0x18]
  42c915:	mov    r11,QWORD PTR [rbp+0x20]
  42c919:	mov    r8,QWORD PTR [rsi+rcx*8]
  42c91d:	mov    r11,QWORD PTR [r11+rcx*8]
  42c921:	mov    ecx,r12d
  42c924:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c92e:	xchg   ax,ax
  42c930:	mov    esi,0x1
  42c935:	shlx   rcx,rsi,rcx
  42c93a:	or     ecx,edx
  42c93c:	mov    DWORD PTR [rdi],ecx
  42c93e:	mov    rcx,r8
  42c941:	shr    rcx,0x21
  42c945:	xor    ecx,r8d
  42c948:	mov    ebp,r8d
  42c94b:	shl    ebp,0xb
  42c94e:	xor    ebp,ecx
  42c950:	mov    edx,eax
  42c952:	and    edx,ebp
  42c954:	mov    esi,edx
  42c956:	shr    esi,0x4
  42c959:	mov    r12d,DWORD PTR [r14+rsi*4]
  42c95d:	lea    r13d,[rdx+rdx*1]
  42c961:	and    r13d,0x1e
  42c965:	shlx   ecx,r9d,r13d
  42c96a:	test   ecx,r12d
  42c96d:	jne    42c9a1 <strcmp@plt+0x29209>
  42c96f:	mov    ecx,ebp
  42c971:	shr    ecx,0x3
  42c974:	shl    ebp,0x3
  42c977:	xor    ebp,ecx
  42c979:	or     ebp,0x1
  42c97c:	and    ebp,eax
  42c97e:	xchg   ax,ax
  42c980:	add    edx,ebp
  42c982:	and    edx,eax
  42c984:	mov    ecx,edx
  42c986:	shr    ecx,0x4
  42c989:	mov    r12d,DWORD PTR [r14+rcx*4]
  42c98d:	lea    r13d,[rdx+rdx*1]
  42c991:	and    r13d,0x1e
  42c995:	shlx   esi,r9d,r13d
  42c99a:	test   esi,r12d
  42c99d:	je     42c980 <strcmp@plt+0x291e8>
  42c99f:	mov    esi,ecx
  42c9a1:	lea    rcx,[r14+rsi*4]
  42c9a5:	shlx   ebp,r9d,r13d
  42c9aa:	andn   ebp,ebp,r12d
  42c9af:	mov    DWORD PTR [rcx],ebp
  42c9b1:	mov    rbp,QWORD PTR [rsp]
  42c9b5:	mov    ebx,DWORD PTR [rbp+0x0]
  42c9b8:	cmp    edx,ebx
  42c9ba:	jae    42c8c0 <strcmp@plt+0x29128>
  42c9c0:	mov    ecx,r13d
  42c9c3:	mov    edi,0x3
  42c9c8:	shlx   edi,edi,ecx
  42c9cd:	test   DWORD PTR [r15+rsi*4],edi
  42c9d1:	jne    42c8c0 <strcmp@plt+0x29128>
  42c9d7:	mov    rdi,QWORD PTR [rbp+0x18]
  42c9db:	mov    edx,edx
  42c9dd:	mov    r12,QWORD PTR [rdi+rdx*8]
  42c9e1:	mov    QWORD PTR [rdi+rdx*8],r8
  42c9e5:	mov    rdi,QWORD PTR [rbp+0x20]
  42c9e9:	mov    rbx,QWORD PTR [rdi+rdx*8]
  42c9ed:	mov    QWORD PTR [rdi+rdx*8],r11
  42c9f1:	mov    r15,QWORD PTR [rbp+0x10]
  42c9f5:	lea    rdi,[r15+rsi*4]
  42c9f9:	mov    edx,DWORD PTR [r15+rsi*4]
  42c9fd:	mov    r11,rbx
  42ca00:	mov    r8,r12
  42ca03:	jmp    42c930 <strcmp@plt+0x29198>
  42ca08:	mov    r12,QWORD PTR [rsp+0x8]
  42ca0d:	cmp    ebx,r12d
  42ca10:	jbe    42ca39 <strcmp@plt+0x292a1>
  42ca12:	mov    rdi,QWORD PTR [rbp+0x18]
  42ca16:	mov    r15d,r12d
  42ca19:	shl    r15,0x3
  42ca1d:	mov    rsi,r15
  42ca20:	call   403660 <realloc@plt>
  42ca25:	mov    QWORD PTR [rbp+0x18],rax
  42ca29:	mov    rdi,QWORD PTR [rbp+0x20]
  42ca2d:	mov    rsi,r15
  42ca30:	call   403660 <realloc@plt>
  42ca35:	mov    QWORD PTR [rbp+0x20],rax
  42ca39:	mov    rdi,QWORD PTR [rbp+0x10]
  42ca3d:	call   403790 <free@plt>
  42ca42:	mov    QWORD PTR [rbp+0x10],r14
  42ca46:	mov    DWORD PTR [rbp+0x0],r12d
  42ca4a:	mov    eax,DWORD PTR [rbp+0x4]
  42ca4d:	mov    DWORD PTR [rbp+0x8],eax
  42ca50:	mov    rax,QWORD PTR [rsp+0x10]
  42ca55:	mov    DWORD PTR [rbp+0xc],eax
  42ca58:	add    rsp,0x18
  42ca5c:	pop    rbx
  42ca5d:	pop    r12
  42ca5f:	pop    r13
  42ca61:	pop    r14
  42ca63:	pop    r15
  42ca65:	pop    rbp
  42ca66:	ret    
  42ca67:	nop    WORD PTR [rax+rax*1+0x0]
  42ca70:	push   r14
  42ca72:	push   rbx
  42ca73:	push   rax
  42ca74:	mov    r14,rdi
  42ca77:	mov    edi,0x38
  42ca7c:	call   431d60 <strcmp@plt+0x2e5c8>
  42ca81:	mov    rbx,rax
  42ca84:	mov    rdi,r14
  42ca87:	call   431e60 <strcmp@plt+0x2e6c8>
  42ca8c:	mov    QWORD PTR [rbx],rax
  42ca8f:	call   42b980 <strcmp@plt+0x281e8>
  42ca94:	mov    QWORD PTR [rbx+0x8],rax
  42ca98:	call   42b980 <strcmp@plt+0x281e8>
  42ca9d:	mov    QWORD PTR [rbx+0x10],rax
  42caa1:	call   42b980 <strcmp@plt+0x281e8>
  42caa6:	mov    QWORD PTR [rbx+0x18],rax
  42caaa:	mov    BYTE PTR [rbx+0x20],0x1
  42caae:	vxorps xmm0,xmm0,xmm0
  42cab2:	vmovups XMMWORD PTR [rbx+0x28],xmm0
  42cab7:	mov    rax,rbx
  42caba:	add    rsp,0x8
  42cabe:	pop    rbx
  42cabf:	pop    r14
  42cac1:	ret    
  42cac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cacc:	nop    DWORD PTR [rax+0x0]
  42cad0:	push   rbx
  42cad1:	mov    rbx,rdi
  42cad4:	mov    rdi,QWORD PTR [rdi]
  42cad7:	call   403790 <free@plt>
  42cadc:	mov    rdi,QWORD PTR [rbx+0x8]
  42cae0:	call   42bff0 <strcmp@plt+0x28858>
  42cae5:	mov    rdi,QWORD PTR [rbx+0x10]
  42cae9:	call   42bff0 <strcmp@plt+0x28858>
  42caee:	mov    rdi,QWORD PTR [rbx+0x18]
  42caf2:	call   42bff0 <strcmp@plt+0x28858>
  42caf7:	mov    rdi,QWORD PTR [rbx+0x28]
  42cafb:	test   rdi,rdi
  42cafe:	je     42cb05 <strcmp@plt+0x2936d>
  42cb00:	call   422c90 <strcmp@plt+0x1f4f8>
  42cb05:	mov    rdi,QWORD PTR [rbx+0x30]
  42cb09:	test   rdi,rdi
  42cb0c:	je     42cb13 <strcmp@plt+0x2937b>
  42cb0e:	call   422c90 <strcmp@plt+0x1f4f8>
  42cb13:	mov    rdi,rbx
  42cb16:	pop    rbx
  42cb17:	jmp    403790 <free@plt>
  42cb1c:	nop    DWORD PTR [rax+0x0]
  42cb20:	push   rbp
  42cb21:	push   r15
  42cb23:	push   r14
  42cb25:	push   r13
  42cb27:	push   r12
  42cb29:	push   rbx
  42cb2a:	push   rax
  42cb2b:	mov    r14,rsi
  42cb2e:	mov    r12,rdi
  42cb31:	mov    rdi,rsi
  42cb34:	call   4317d0 <strcmp@plt+0x2e038>
  42cb39:	mov    QWORD PTR [rsp],rax
  42cb3d:	mov    rax,QWORD PTR [rax+0x28]
  42cb41:	mov    r13,QWORD PTR [rax+0x8]
  42cb45:	cmp    r13,rax
  42cb48:	jne    42cb61 <strcmp@plt+0x293c9>
  42cb4a:	jmp    42cbbb <strcmp@plt+0x29423>
  42cb4c:	nop    DWORD PTR [rax+0x0]
  42cb50:	mov    rax,QWORD PTR [rsp]
  42cb54:	mov    rax,QWORD PTR [rax+0x28]
  42cb58:	mov    r13,QWORD PTR [r13+0x8]
  42cb5c:	cmp    r13,rax
  42cb5f:	je     42cbbb <strcmp@plt+0x29423>
  42cb61:	mov    rbp,QWORD PTR [r13+0x10]
  42cb65:	cmp    DWORD PTR [rbp+0x18],0x0
  42cb69:	je     42cb58 <strcmp@plt+0x293c0>
  42cb6b:	mov    r15,QWORD PTR [rbp+0x8]
  42cb6f:	cmp    r15,rbp
  42cb72:	jne    42cb89 <strcmp@plt+0x293f1>
  42cb74:	jmp    42cb58 <strcmp@plt+0x293c0>
  42cb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cb80:	mov    r15,QWORD PTR [r15+0x8]
  42cb84:	cmp    r15,rbp
  42cb87:	je     42cb50 <strcmp@plt+0x293b8>
  42cb89:	mov    rsi,QWORD PTR [r15+0x10]
  42cb8d:	mov    rdi,r12
  42cb90:	call   42cbd0 <strcmp@plt+0x29438>
  42cb95:	test   rax,rax
  42cb98:	je     42cb80 <strcmp@plt+0x293e8>
  42cb9a:	mov    rbx,rax
  42cb9d:	mov    rsi,QWORD PTR [rax+0x8]
  42cba1:	mov    rdi,r14
  42cba4:	call   42bc20 <strcmp@plt+0x28488>
  42cba9:	test   al,al
  42cbab:	jne    42cb80 <strcmp@plt+0x293e8>
  42cbad:	mov    rsi,QWORD PTR [rbx+0x8]
  42cbb1:	mov    rdi,r14
  42cbb4:	call   42baa0 <strcmp@plt+0x28308>
  42cbb9:	jmp    42cb80 <strcmp@plt+0x293e8>
  42cbbb:	add    rsp,0x8
  42cbbf:	pop    rbx
  42cbc0:	pop    r12
  42cbc2:	pop    r13
  42cbc4:	pop    r14
  42cbc6:	pop    r15
  42cbc8:	pop    rbp
  42cbc9:	ret    
  42cbca:	nop    WORD PTR [rax+rax*1+0x0]
  42cbd0:	push   r15
  42cbd2:	push   r14
  42cbd4:	push   rbx
  42cbd5:	mov    r14,rdi
  42cbd8:	mov    r15,QWORD PTR [rsi]
  42cbdb:	cmp    DWORD PTR [r15+0x18],0x0
  42cbe0:	je     42cc14 <strcmp@plt+0x2947c>
  42cbe2:	mov    rdi,r15
  42cbe5:	call   422fd0 <strcmp@plt+0x1f838>
  42cbea:	test   rax,rax
  42cbed:	je     42cc85 <strcmp@plt+0x294ed>
  42cbf3:	mov    rdi,rax
  42cbf6:	call   43ad40 <strcmp@plt+0x375a8>
  42cbfb:	test   rax,rax
  42cbfe:	je     42cca0 <strcmp@plt+0x29508>
  42cc04:	mov    rdi,r14
  42cc07:	mov    rsi,rax
  42cc0a:	pop    rbx
  42cc0b:	pop    r14
  42cc0d:	pop    r15
  42cc0f:	jmp    436340 <strcmp@plt+0x32ba8>
  42cc14:	mov    rbx,rsi
  42cc17:	mov    rdi,r14
  42cc1a:	call   4365a0 <strcmp@plt+0x32e08>
  42cc1f:	mov    rcx,QWORD PTR [rax+0x8]
  42cc23:	cmp    rcx,rax
  42cc26:	je     42cc78 <strcmp@plt+0x294e0>
  42cc28:	mov    r14,QWORD PTR [rcx+0x10]
  42cc2c:	mov    rsi,QWORD PTR [r14+0x10]
  42cc30:	mov    rdx,QWORD PTR [r14+0x18]
  42cc34:	mov    rdi,QWORD PTR [rsi+0x8]
  42cc38:	cmp    rdi,rsi
  42cc3b:	je     42cc4f <strcmp@plt+0x294b7>
  42cc3d:	nop    DWORD PTR [rax]
  42cc40:	cmp    QWORD PTR [rdi+0x10],rbx
  42cc44:	je     42cc96 <strcmp@plt+0x294fe>
  42cc46:	mov    rdi,QWORD PTR [rdi+0x8]
  42cc4a:	cmp    rdi,rsi
  42cc4d:	jne    42cc40 <strcmp@plt+0x294a8>
  42cc4f:	mov    rsi,QWORD PTR [rdx+0x8]
  42cc53:	cmp    rsi,rdx
  42cc56:	je     42cc6f <strcmp@plt+0x294d7>
  42cc58:	nop    DWORD PTR [rax+rax*1+0x0]
  42cc60:	cmp    QWORD PTR [rsi+0x10],rbx
  42cc64:	je     42cc96 <strcmp@plt+0x294fe>
  42cc66:	mov    rsi,QWORD PTR [rsi+0x8]
  42cc6a:	cmp    rsi,rdx
  42cc6d:	jne    42cc60 <strcmp@plt+0x294c8>
  42cc6f:	mov    rcx,QWORD PTR [rcx+0x8]
  42cc73:	cmp    rcx,rax
  42cc76:	jne    42cc28 <strcmp@plt+0x29490>
  42cc78:	mov    rdi,rax
  42cc7b:	call   42bff0 <strcmp@plt+0x28858>
  42cc80:	xor    r14d,r14d
  42cc83:	jmp    42ccc1 <strcmp@plt+0x29529>
  42cc85:	mov    rdi,r15
  42cc88:	call   422e20 <strcmp@plt+0x1f688>
  42cc8d:	lea    rsi,[rip+0x1e777]        # 44b40b <strcmp@plt+0x47c73>
  42cc94:	jmp    42ccaf <strcmp@plt+0x29517>
  42cc96:	mov    rdi,rax
  42cc99:	call   42bff0 <strcmp@plt+0x28858>
  42cc9e:	jmp    42ccc1 <strcmp@plt+0x29529>
  42cca0:	mov    rdi,r15
  42cca3:	call   422e20 <strcmp@plt+0x1f688>
  42cca8:	lea    rsi,[rip+0x1e7a7]        # 44b456 <strcmp@plt+0x47cbe>
  42ccaf:	xor    r14d,r14d
  42ccb2:	mov    edi,0x2
  42ccb7:	mov    rdx,rax
  42ccba:	xor    eax,eax
  42ccbc:	call   42e520 <strcmp@plt+0x2ad88>
  42ccc1:	mov    rax,r14
  42ccc4:	pop    rbx
  42ccc5:	pop    r14
  42ccc7:	pop    r15
  42ccc9:	ret    
  42ccca:	nop    WORD PTR [rax+rax*1+0x0]
  42ccd0:	push   rbp
  42ccd1:	push   r15
  42ccd3:	push   r14
  42ccd5:	push   r13
  42ccd7:	push   r12
  42ccd9:	push   rbx
  42ccda:	push   rax
  42ccdb:	mov    r14,rsi
  42ccde:	mov    r13,rdi
  42cce1:	mov    rdi,rsi
  42cce4:	call   4317d0 <strcmp@plt+0x2e038>
  42cce9:	mov    r15,rax
  42ccec:	mov    rax,QWORD PTR [rax+0x28]
  42ccf0:	mov    r12,QWORD PTR [rax+0x8]
  42ccf4:	cmp    r12,rax
  42ccf7:	jne    42cd0a <strcmp@plt+0x29572>
  42ccf9:	jmp    42cd3b <strcmp@plt+0x295a3>
  42ccfb:	nop    DWORD PTR [rax+rax*1+0x0]
  42cd00:	mov    r12,QWORD PTR [r12+0x8]
  42cd05:	cmp    r12,rax
  42cd08:	je     42cd3b <strcmp@plt+0x295a3>
  42cd0a:	mov    rbx,QWORD PTR [r12+0x10]
  42cd0f:	cmp    DWORD PTR [rbx+0x18],0x0
  42cd13:	je     42cd00 <strcmp@plt+0x29568>
  42cd15:	mov    rbp,QWORD PTR [rbx+0x8]
  42cd19:	cmp    rbp,rbx
  42cd1c:	je     42cd00 <strcmp@plt+0x29568>
  42cd1e:	xchg   ax,ax
  42cd20:	mov    rsi,QWORD PTR [rbp+0x10]
  42cd24:	mov    rdi,r13
  42cd27:	call   42cd80 <strcmp@plt+0x295e8>
  42cd2c:	mov    rbp,QWORD PTR [rbp+0x8]
  42cd30:	cmp    rbp,rbx
  42cd33:	jne    42cd20 <strcmp@plt+0x29588>
  42cd35:	mov    rax,QWORD PTR [r15+0x28]
  42cd39:	jmp    42cd00 <strcmp@plt+0x29568>
  42cd3b:	mov    rdi,r13
  42cd3e:	call   4365a0 <strcmp@plt+0x32e08>
  42cd43:	mov    rbp,QWORD PTR [rax+0x8]
  42cd47:	cmp    rbp,rax
  42cd4a:	je     42cd69 <strcmp@plt+0x295d1>
  42cd4c:	mov    rbx,rax
  42cd4f:	nop
  42cd50:	mov    rax,QWORD PTR [rbp+0x10]
  42cd54:	mov    rsi,QWORD PTR [rax+0x8]
  42cd58:	mov    rdi,r14
  42cd5b:	call   42be60 <strcmp@plt+0x286c8>
  42cd60:	mov    rbp,QWORD PTR [rbp+0x8]
  42cd64:	cmp    rbp,rbx
  42cd67:	jne    42cd50 <strcmp@plt+0x295b8>
  42cd69:	add    rsp,0x8
  42cd6d:	pop    rbx
  42cd6e:	pop    r12
  42cd70:	pop    r13
  42cd72:	pop    r14
  42cd74:	pop    r15
  42cd76:	pop    rbp
  42cd77:	ret    
  42cd78:	nop    DWORD PTR [rax+rax*1+0x0]
  42cd80:	push   r15
  42cd82:	push   r14
  42cd84:	push   rbx
  42cd85:	mov    rbx,rsi
  42cd88:	mov    r15,QWORD PTR [rsi]
  42cd8b:	call   42cbd0 <strcmp@plt+0x29438>
  42cd90:	test   rax,rax
  42cd93:	je     42ce0f <strcmp@plt+0x29677>
  42cd95:	mov    r14,rax
  42cd98:	cmp    DWORD PTR [r15+0x18],0x0
  42cd9d:	je     42cdca <strcmp@plt+0x29632>
  42cd9f:	mov    rdi,r15
  42cda2:	call   422fd0 <strcmp@plt+0x1f838>
  42cda7:	test   rax,rax
  42cdaa:	je     42ce1d <strcmp@plt+0x29685>
  42cdac:	mov    rdi,rax
  42cdaf:	call   422ef0 <strcmp@plt+0x1f758>
  42cdb4:	cmp    ax,0xa
  42cdb8:	je     42ce40 <strcmp@plt+0x296a8>
  42cdbe:	cmp    ax,0x2
  42cdc2:	jne    42ce0f <strcmp@plt+0x29677>
  42cdc4:	mov    rax,QWORD PTR [r14+0x10]
  42cdc8:	jmp    42ce15 <strcmp@plt+0x2967d>
  42cdca:	mov    rax,QWORD PTR [r14+0x10]
  42cdce:	mov    rsi,QWORD PTR [r14+0x18]
  42cdd2:	mov    rcx,QWORD PTR [rax+0x8]
  42cdd6:	cmp    rcx,rax
  42cdd9:	je     42cdef <strcmp@plt+0x29657>
  42cddb:	nop    DWORD PTR [rax+rax*1+0x0]
  42cde0:	cmp    QWORD PTR [rcx+0x10],rbx
  42cde4:	je     42ce15 <strcmp@plt+0x2967d>
  42cde6:	mov    rcx,QWORD PTR [rcx+0x8]
  42cdea:	cmp    rcx,rax
  42cded:	jne    42cde0 <strcmp@plt+0x29648>
  42cdef:	mov    rax,QWORD PTR [rsi+0x8]
  42cdf3:	cmp    rax,rsi
  42cdf6:	je     42ce0f <strcmp@plt+0x29677>
  42cdf8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ce00:	cmp    QWORD PTR [rax+0x10],rbx
  42ce04:	je     42ce44 <strcmp@plt+0x296ac>
  42ce06:	mov    rax,QWORD PTR [rax+0x8]
  42ce0a:	cmp    rax,rsi
  42ce0d:	jne    42ce00 <strcmp@plt+0x29668>
  42ce0f:	pop    rbx
  42ce10:	pop    r14
  42ce12:	pop    r15
  42ce14:	ret    
  42ce15:	mov    rdi,rbx
  42ce18:	mov    rsi,rax
  42ce1b:	jmp    42ce47 <strcmp@plt+0x296af>
  42ce1d:	mov    rdi,r15
  42ce20:	call   422e20 <strcmp@plt+0x1f688>
  42ce25:	lea    rsi,[rip+0x1e59d]        # 44b3c9 <strcmp@plt+0x47c31>
  42ce2c:	mov    edi,0x2
  42ce31:	mov    rdx,rax
  42ce34:	xor    eax,eax
  42ce36:	pop    rbx
  42ce37:	pop    r14
  42ce39:	pop    r15
  42ce3b:	jmp    42e520 <strcmp@plt+0x2ad88>
  42ce40:	mov    rsi,QWORD PTR [r14+0x18]
  42ce44:	mov    rdi,rbx
  42ce47:	pop    rbx
  42ce48:	pop    r14
  42ce4a:	pop    r15
  42ce4c:	jmp    42be60 <strcmp@plt+0x286c8>
  42ce51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ce5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ce60:	push   rbx
  42ce61:	mov    edi,0x1
  42ce66:	mov    esi,0x10
  42ce6b:	call   431d10 <strcmp@plt+0x2e578>
  42ce70:	mov    rbx,rax
  42ce73:	mov    edi,0x1
  42ce78:	mov    esi,0x28
  42ce7d:	call   4032d0 <calloc@plt>
  42ce82:	mov    QWORD PTR [rbx],rax
  42ce85:	mov    rax,rbx
  42ce88:	pop    rbx
  42ce89:	ret    
  42ce8a:	nop    WORD PTR [rax+rax*1+0x0]
  42ce90:	push   r14
  42ce92:	push   rbx
  42ce93:	push   rax
  42ce94:	mov    r14,rdi
  42ce97:	mov    edi,0x1
  42ce9c:	mov    esi,0x10
  42cea1:	call   431d10 <strcmp@plt+0x2e578>
  42cea6:	mov    rbx,rax
  42cea9:	mov    edi,0x1
  42ceae:	mov    esi,0x28
  42ceb3:	call   4032d0 <calloc@plt>
  42ceb8:	mov    QWORD PTR [rbx],rax
  42cebb:	mov    QWORD PTR [rbx+0x8],r14
  42cebf:	mov    rax,rbx
  42cec2:	add    rsp,0x8
  42cec6:	pop    rbx
  42cec7:	pop    r14
  42cec9:	ret    
  42ceca:	nop    WORD PTR [rax+rax*1+0x0]
  42ced0:	push   rbp
  42ced1:	push   r15
  42ced3:	push   r14
  42ced5:	push   r13
  42ced7:	push   r12
  42ced9:	push   rbx
  42ceda:	push   rax
  42cedb:	mov    r14,rdx
  42cede:	mov    r12d,esi
  42cee1:	mov    r15,rdi
  42cee4:	mov    r13,QWORD PTR [rdi]
  42cee7:	mov    eax,DWORD PTR [r13+0x8]
  42ceeb:	cmp    eax,DWORD PTR [r13+0xc]
  42ceef:	jb     42cf10 <strcmp@plt+0x29778>
  42cef1:	mov    eax,DWORD PTR [r13+0x0]
  42cef5:	mov    ecx,DWORD PTR [r13+0x4]
  42cef9:	add    ecx,ecx
  42cefb:	xor    edx,edx
  42cefd:	cmp    eax,ecx
  42ceff:	setbe  dl
  42cf02:	lea    esi,[rax+rdx*2]
  42cf05:	add    esi,0xffffffff
  42cf08:	mov    rdi,r13
  42cf0b:	call   42d300 <strcmp@plt+0x29b68>
  42cf10:	mov    r8d,DWORD PTR [r13+0x0]
  42cf14:	lea    r10d,[r8-0x1]
  42cf18:	mov    ecx,r10d
  42cf1b:	and    ecx,r12d
  42cf1e:	mov    r9,QWORD PTR [r13+0x10]
  42cf22:	mov    eax,ecx
  42cf24:	shr    eax,0x4
  42cf27:	lea    edx,[rcx+rcx*1]
  42cf2a:	mov    esi,0x2
  42cf2f:	shlx   edx,esi,edx
  42cf34:	test   DWORD PTR [r9+rax*4],edx
  42cf38:	je     42cf41 <strcmp@plt+0x297a9>
  42cf3a:	mov    edx,ecx
  42cf3c:	jmp    42cfc4 <strcmp@plt+0x2982c>
  42cf41:	mov    eax,r12d
  42cf44:	shr    eax,0x3
  42cf47:	lea    r11d,[r12*8+0x0]
  42cf4f:	xor    r11d,eax
  42cf52:	or     r11d,0x1
  42cf56:	and    r11d,r10d
  42cf59:	mov    edx,r8d
  42cf5c:	mov    esi,ecx
  42cf5e:	jmp    42cf70 <strcmp@plt+0x297d8>
  42cf60:	bt     ebx,edi
  42cf63:	cmovb  edx,esi
  42cf66:	add    esi,r11d
  42cf69:	and    esi,r10d
  42cf6c:	cmp    esi,ecx
  42cf6e:	je     42cfad <strcmp@plt+0x29815>
  42cf70:	mov    eax,esi
  42cf72:	shr    eax,0x4
  42cf75:	mov    ebx,DWORD PTR [r9+rax*4]
  42cf79:	lea    edi,[rsi+rsi*1]
  42cf7c:	and    edi,0x1e
  42cf7f:	shrx   eax,ebx,edi
  42cf84:	test   al,0x2
  42cf86:	jne    42cf98 <strcmp@plt+0x29800>
  42cf88:	test   al,0x1
  42cf8a:	jne    42cf60 <strcmp@plt+0x297c8>
  42cf8c:	mov    rax,QWORD PTR [r13+0x18]
  42cf90:	mov    ebp,esi
  42cf92:	cmp    DWORD PTR [rax+rbp*4],r12d
  42cf96:	jne    42cf60 <strcmp@plt+0x297c8>
  42cf98:	mov    eax,0x2
  42cf9d:	shlx   eax,eax,edi
  42cfa2:	test   eax,ebx
  42cfa4:	sete   al
  42cfa7:	mov    ecx,esi
  42cfa9:	mov    esi,edx
  42cfab:	jmp    42cfb7 <strcmp@plt+0x2981f>
  42cfad:	mov    al,0x1
  42cfaf:	mov    esi,r8d
  42cfb2:	cmp    edx,r8d
  42cfb5:	jne    42cfc4 <strcmp@plt+0x2982c>
  42cfb7:	cmp    esi,r8d
  42cfba:	cmove  esi,ecx
  42cfbd:	test   al,al
  42cfbf:	cmovne esi,ecx
  42cfc2:	mov    edx,esi
  42cfc4:	mov    eax,edx
  42cfc6:	shr    eax,0x4
  42cfc9:	lea    esi,[rdx+rdx*1]
  42cfcc:	and    esi,0x1e
  42cfcf:	shrx   ecx,DWORD PTR [r9+rax*4],esi
  42cfd5:	test   cl,0x2
  42cfd8:	jne    42cfe3 <strcmp@plt+0x2984b>
  42cfda:	test   cl,0x1
  42cfdd:	jne    42d007 <strcmp@plt+0x2986f>
  42cfdf:	mov    ecx,edx
  42cfe1:	jmp    42d025 <strcmp@plt+0x2988d>
  42cfe3:	mov    rdi,QWORD PTR [r13+0x18]
  42cfe7:	mov    ecx,edx
  42cfe9:	mov    DWORD PTR [rdi+rcx*4],r12d
  42cfed:	mov    edx,0x3
  42cff2:	shlx   edx,edx,esi
  42cff7:	not    edx
  42cff9:	and    DWORD PTR [r9+rax*4],edx
  42cffd:	inc    DWORD PTR [r13+0x4]
  42d001:	inc    DWORD PTR [r13+0x8]
  42d005:	jmp    42d025 <strcmp@plt+0x2988d>
  42d007:	mov    rdi,QWORD PTR [r13+0x18]
  42d00b:	mov    ecx,edx
  42d00d:	mov    DWORD PTR [rdi+rcx*4],r12d
  42d011:	mov    edx,0x3
  42d016:	shlx   edx,edx,esi
  42d01b:	not    edx
  42d01d:	and    DWORD PTR [r9+rax*4],edx
  42d021:	inc    DWORD PTR [r13+0x4]
  42d025:	mov    rax,QWORD PTR [r15]
  42d028:	mov    rax,QWORD PTR [rax+0x20]
  42d02c:	mov    QWORD PTR [rax+rcx*8],r14
  42d030:	add    rsp,0x8
  42d034:	pop    rbx
  42d035:	pop    r12
  42d037:	pop    r13
  42d039:	pop    r14
  42d03b:	pop    r15
  42d03d:	pop    rbp
  42d03e:	ret    
  42d03f:	nop
  42d040:	push   rbp
  42d041:	push   r15
  42d043:	push   r14
  42d045:	push   rbx
  42d046:	push   rax
  42d047:	mov    r9,QWORD PTR [rdi]
  42d04a:	mov    r8d,DWORD PTR [r9]
  42d04d:	test   r8d,r8d
  42d050:	je     42d118 <strcmp@plt+0x29980>
  42d056:	mov    r14,rdi
  42d059:	lea    r10d,[r8-0x1]
  42d05d:	mov    r11d,r10d
  42d060:	and    r11d,esi
  42d063:	mov    eax,esi
  42d065:	shr    eax,0x3
  42d068:	lea    ecx,[rsi*8+0x0]
  42d06f:	xor    ecx,eax
  42d071:	or     ecx,0x1
  42d074:	and    ecx,r10d
  42d077:	mov    r15,QWORD PTR [r9+0x10]
  42d07b:	mov    ebx,r11d
  42d07e:	jmp    42d08e <strcmp@plt+0x298f6>
  42d080:	add    ebx,ecx
  42d082:	and    ebx,r10d
  42d085:	cmp    ebx,r11d
  42d088:	je     42d118 <strcmp@plt+0x29980>
  42d08e:	mov    edx,ebx
  42d090:	shr    edx,0x4
  42d093:	mov    edx,DWORD PTR [r15+rdx*4]
  42d097:	lea    edi,[rbx+rbx*1]
  42d09a:	and    edi,0x1e
  42d09d:	shrx   ebp,edx,edi
  42d0a2:	test   bpl,0x2
  42d0a6:	jne    42d0ba <strcmp@plt+0x29922>
  42d0a8:	test   bpl,0x1
  42d0ac:	jne    42d080 <strcmp@plt+0x298e8>
  42d0ae:	mov    rbp,QWORD PTR [r9+0x18]
  42d0b2:	mov    eax,ebx
  42d0b4:	cmp    DWORD PTR [rbp+rax*4+0x0],esi
  42d0b8:	jne    42d080 <strcmp@plt+0x298e8>
  42d0ba:	mov    eax,0x3
  42d0bf:	shlx   eax,eax,edi
  42d0c4:	test   eax,edx
  42d0c6:	cmovne ebx,r8d
  42d0ca:	cmp    ebx,r8d
  42d0cd:	je     42d118 <strcmp@plt+0x29980>
  42d0cf:	mov    rax,QWORD PTR [r14+0x8]
  42d0d3:	test   rax,rax
  42d0d6:	je     42d0ea <strcmp@plt+0x29952>
  42d0d8:	mov    rcx,QWORD PTR [r9+0x20]
  42d0dc:	mov    edx,ebx
  42d0de:	mov    rdi,QWORD PTR [rcx+rdx*8]
  42d0e2:	call   rax
  42d0e4:	mov    r9,QWORD PTR [r14]
  42d0e7:	mov    r8d,DWORD PTR [r9]
  42d0ea:	cmp    r8d,ebx
  42d0ed:	je     42d118 <strcmp@plt+0x29980>
  42d0ef:	mov    rax,QWORD PTR [r9+0x10]
  42d0f3:	mov    ecx,ebx
  42d0f5:	shr    ecx,0x4
  42d0f8:	mov    edx,DWORD PTR [rax+rcx*4]
  42d0fb:	add    ebx,ebx
  42d0fd:	and    ebx,0x1e
  42d100:	mov    esi,0x3
  42d105:	shlx   esi,esi,ebx
  42d10a:	test   edx,esi
  42d10c:	jne    42d118 <strcmp@plt+0x29980>
  42d10e:	bts    edx,ebx
  42d111:	mov    DWORD PTR [rax+rcx*4],edx
  42d114:	dec    DWORD PTR [r9+0x4]
  42d118:	add    rsp,0x8
  42d11c:	pop    rbx
  42d11d:	pop    r14
  42d11f:	pop    r15
  42d121:	pop    rbp
  42d122:	ret    
  42d123:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d12d:	nop    DWORD PTR [rax]
  42d130:	push   rbp
  42d131:	push   r15
  42d133:	push   r14
  42d135:	push   rbx
  42d136:	mov    r9,QWORD PTR [rdi]
  42d139:	mov    r8d,DWORD PTR [r9]
  42d13c:	test   r8d,r8d
  42d13f:	je     42d1bb <strcmp@plt+0x29a23>
  42d141:	lea    r10d,[r8-0x1]
  42d145:	mov    r11d,r10d
  42d148:	and    r11d,esi
  42d14b:	mov    eax,esi
  42d14d:	shr    eax,0x3
  42d150:	lea    r15d,[rsi*8+0x0]
  42d158:	xor    r15d,eax
  42d15b:	or     r15d,0x1
  42d15f:	and    r15d,r10d
  42d162:	mov    r14,QWORD PTR [r9+0x10]
  42d166:	xor    eax,eax
  42d168:	mov    ecx,r11d
  42d16b:	jmp    42d17b <strcmp@plt+0x299e3>
  42d16d:	nop    DWORD PTR [rax]
  42d170:	add    ecx,r15d
  42d173:	and    ecx,r10d
  42d176:	cmp    ecx,r11d
  42d179:	je     42d1c9 <strcmp@plt+0x29a31>
  42d17b:	mov    edi,ecx
  42d17d:	shr    edi,0x4
  42d180:	mov    ebx,DWORD PTR [r14+rdi*4]
  42d184:	lea    ebp,[rcx+rcx*1]
  42d187:	and    ebp,0x1e
  42d18a:	shrx   edi,ebx,ebp
  42d18f:	test   dil,0x2
  42d193:	jne    42d1a6 <strcmp@plt+0x29a0e>
  42d195:	test   dil,0x1
  42d199:	jne    42d170 <strcmp@plt+0x299d8>
  42d19b:	mov    rdi,QWORD PTR [r9+0x18]
  42d19f:	mov    edx,ecx
  42d1a1:	cmp    DWORD PTR [rdi+rdx*4],esi
  42d1a4:	jne    42d170 <strcmp@plt+0x299d8>
  42d1a6:	mov    eax,0x3
  42d1ab:	shlx   eax,eax,ebp
  42d1b0:	test   eax,ebx
  42d1b2:	cmovne ecx,r8d
  42d1b6:	cmp    ecx,r8d
  42d1b9:	jne    42d1bf <strcmp@plt+0x29a27>
  42d1bb:	xor    eax,eax
  42d1bd:	jmp    42d1c9 <strcmp@plt+0x29a31>
  42d1bf:	mov    rax,QWORD PTR [r9+0x20]
  42d1c3:	mov    ecx,ecx
  42d1c5:	mov    rax,QWORD PTR [rax+rcx*8]
  42d1c9:	pop    rbx
  42d1ca:	pop    r14
  42d1cc:	pop    r15
  42d1ce:	pop    rbp
  42d1cf:	ret    
  42d1d0:	test   rdi,rdi
  42d1d3:	je     42d27a <strcmp@plt+0x29ae2>
  42d1d9:	push   rbp
  42d1da:	push   r15
  42d1dc:	push   r14
  42d1de:	push   r12
  42d1e0:	push   rbx
  42d1e1:	mov    r14,rdi
  42d1e4:	mov    r12,QWORD PTR [rdi]
  42d1e7:	cmp    DWORD PTR [r12],0x0
  42d1ec:	je     42d23f <strcmp@plt+0x29aa7>
  42d1ee:	xor    ebp,ebp
  42d1f0:	mov    r15d,0x3
  42d1f6:	xor    ebx,ebx
  42d1f8:	jmp    42d20b <strcmp@plt+0x29a73>
  42d1fa:	nop    WORD PTR [rax+rax*1+0x0]
  42d200:	inc    ebx
  42d202:	add    ebp,0x2
  42d205:	cmp    ebx,DWORD PTR [r12]
  42d209:	je     42d23f <strcmp@plt+0x29aa7>
  42d20b:	mov    rax,QWORD PTR [r12+0x10]
  42d210:	mov    ecx,ebx
  42d212:	shr    ecx,0x4
  42d215:	mov    edx,ebp
  42d217:	and    dl,0x1e
  42d21a:	shlx   edx,r15d,edx
  42d21f:	test   DWORD PTR [rax+rcx*4],edx
  42d222:	jne    42d200 <strcmp@plt+0x29a68>
  42d224:	mov    rax,QWORD PTR [r14+0x8]
  42d228:	test   rax,rax
  42d22b:	je     42d200 <strcmp@plt+0x29a68>
  42d22d:	mov    rcx,QWORD PTR [r12+0x20]
  42d232:	mov    edx,ebx
  42d234:	mov    rdi,QWORD PTR [rcx+rdx*8]
  42d238:	call   rax
  42d23a:	mov    r12,QWORD PTR [r14]
  42d23d:	jmp    42d200 <strcmp@plt+0x29a68>
  42d23f:	test   r12,r12
  42d242:	je     42d26a <strcmp@plt+0x29ad2>
  42d244:	mov    rdi,QWORD PTR [r12+0x18]
  42d249:	call   403790 <free@plt>
  42d24e:	mov    rdi,QWORD PTR [r12+0x10]
  42d253:	call   403790 <free@plt>
  42d258:	mov    rdi,QWORD PTR [r12+0x20]
  42d25d:	call   403790 <free@plt>
  42d262:	mov    rdi,r12
  42d265:	call   403790 <free@plt>
  42d26a:	mov    rdi,r14
  42d26d:	pop    rbx
  42d26e:	pop    r12
  42d270:	pop    r14
  42d272:	pop    r15
  42d274:	pop    rbp
  42d275:	jmp    403790 <free@plt>
  42d27a:	ret    
  42d27b:	nop    DWORD PTR [rax+rax*1+0x0]
  42d280:	push   rbp
  42d281:	push   r15
  42d283:	push   r14
  42d285:	push   r12
  42d287:	push   rbx
  42d288:	mov    r14,rdi
  42d28b:	call   42b980 <strcmp@plt+0x281e8>
  42d290:	mov    r15,rax
  42d293:	mov    rax,QWORD PTR [r14]
  42d296:	cmp    DWORD PTR [rax],0x0
  42d299:	je     42d2e9 <strcmp@plt+0x29b51>
  42d29b:	xor    ebp,ebp
  42d29d:	mov    r12d,0x3
  42d2a3:	xor    ebx,ebx
  42d2a5:	jmp    42d2b9 <strcmp@plt+0x29b21>
  42d2a7:	nop    WORD PTR [rax+rax*1+0x0]
  42d2b0:	inc    ebx
  42d2b2:	add    ebp,0x2
  42d2b5:	cmp    ebx,DWORD PTR [rax]
  42d2b7:	je     42d2e9 <strcmp@plt+0x29b51>
  42d2b9:	mov    rcx,QWORD PTR [rax+0x10]
  42d2bd:	mov    edx,ebx
  42d2bf:	shr    edx,0x4
  42d2c2:	mov    esi,ebp
  42d2c4:	and    sil,0x1e
  42d2c8:	shlx   esi,r12d,esi
  42d2cd:	test   DWORD PTR [rcx+rdx*4],esi
  42d2d0:	jne    42d2b0 <strcmp@plt+0x29b18>
  42d2d2:	mov    rax,QWORD PTR [rax+0x20]
  42d2d6:	mov    ecx,ebx
  42d2d8:	mov    rdi,QWORD PTR [rax+rcx*8]
  42d2dc:	mov    rsi,r15
  42d2df:	call   42baa0 <strcmp@plt+0x28308>
  42d2e4:	mov    rax,QWORD PTR [r14]
  42d2e7:	jmp    42d2b0 <strcmp@plt+0x29b18>
  42d2e9:	mov    rax,r15
  42d2ec:	pop    rbx
  42d2ed:	pop    r12
  42d2ef:	pop    r14
  42d2f1:	pop    r15
  42d2f3:	pop    rbp
  42d2f4:	ret    
  42d2f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d2ff:	nop
  42d300:	push   rbp
  42d301:	push   r15
  42d303:	push   r14
  42d305:	push   r13
  42d307:	push   r12
  42d309:	push   rbx
  42d30a:	sub    rsp,0x18
  42d30e:	dec    esi
  42d310:	mov    eax,esi
  42d312:	shr    eax,1
  42d314:	or     eax,esi
  42d316:	mov    ecx,eax
  42d318:	shr    ecx,0x2
  42d31b:	or     ecx,eax
  42d31d:	mov    eax,ecx
  42d31f:	shr    eax,0x4
  42d322:	or     eax,ecx
  42d324:	mov    ecx,eax
  42d326:	shr    ecx,0x8
  42d329:	or     ecx,eax
  42d32b:	mov    ebp,ecx
  42d32d:	shr    ebp,0x10
  42d330:	or     ebp,ecx
  42d332:	inc    ebp
  42d334:	cmp    ebp,0x4
  42d337:	mov    eax,0x4
  42d33c:	cmovbe ebp,eax
  42d33f:	vcvtsi2sd xmm0,xmm0,rbp
  42d344:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1a64c]        # 447998 <strcmp@plt+0x44200>
  42d34c:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x1a64c]        # 4479a0 <strcmp@plt+0x44208>
  42d354:	vcvttsd2si rcx,xmm0
  42d359:	cmp    DWORD PTR [rdi+0x4],ecx
  42d35c:	jae    42d56d <strcmp@plt+0x29dd5>
  42d362:	mov    r14,rdi
  42d365:	mov    QWORD PTR [rsp+0x8],rcx
  42d36a:	mov    r15d,ebp
  42d36d:	shr    r15d,0x2
  42d371:	and    r15d,0xfffffffc
  42d375:	cmp    ebp,0x10
  42d378:	cmovb  r15d,eax
  42d37c:	mov    rdi,r15
  42d37f:	call   403520 <malloc@plt>
  42d384:	mov    rbx,rax
  42d387:	mov    rdi,rax
  42d38a:	mov    esi,0xaa
  42d38f:	mov    rdx,r15
  42d392:	call   403260 <memset@plt>
  42d397:	mov    r8d,DWORD PTR [r14]
  42d39a:	cmp    r8d,ebp
  42d39d:	jae    42d3ce <strcmp@plt+0x29c36>
  42d39f:	mov    rdi,QWORD PTR [r14+0x18]
  42d3a3:	mov    r15d,ebp
  42d3a6:	lea    rsi,[r15*4+0x0]
  42d3ae:	call   403660 <realloc@plt>
  42d3b3:	mov    QWORD PTR [r14+0x18],rax
  42d3b7:	mov    rdi,QWORD PTR [r14+0x20]
  42d3bb:	shl    r15,0x3
  42d3bf:	mov    rsi,r15
  42d3c2:	call   403660 <realloc@plt>
  42d3c7:	mov    QWORD PTR [r14+0x20],rax
  42d3cb:	mov    r8d,DWORD PTR [r14]
  42d3ce:	test   r8d,r8d
  42d3d1:	je     42d54c <strcmp@plt+0x29db4>
  42d3d7:	mov    QWORD PTR [rsp],rbp
  42d3db:	lea    eax,[rbp-0x1]
  42d3de:	xor    edi,edi
  42d3e0:	mov    r10d,0x2
  42d3e6:	jmp    42d416 <strcmp@plt+0x29c7e>
  42d3e8:	nop    DWORD PTR [rax+rax*1+0x0]
  42d3f0:	mov    rcx,QWORD PTR [r14+0x18]
  42d3f4:	mov    edx,r8d
  42d3f7:	mov    DWORD PTR [rcx+rdx*4],r9d
  42d3fb:	mov    rcx,QWORD PTR [r14+0x20]
  42d3ff:	mov    QWORD PTR [rcx+rdx*8],r11
  42d403:	mov    r8d,DWORD PTR [r14]
  42d406:	mov    rdi,QWORD PTR [rsp+0x10]
  42d40b:	inc    edi
  42d40d:	cmp    edi,r8d
  42d410:	je     42d517 <strcmp@plt+0x29d7f>
  42d416:	mov    r15,QWORD PTR [r14+0x10]
  42d41a:	mov    ebp,edi
  42d41c:	shr    ebp,0x4
  42d41f:	mov    edx,DWORD PTR [r15+rbp*4]
  42d423:	lea    esi,[rdi+rdi*1]
  42d426:	and    esi,0x1e
  42d429:	mov    ecx,0x3
  42d42e:	shlx   ecx,ecx,esi
  42d433:	test   edx,ecx
  42d435:	jne    42d40b <strcmp@plt+0x29c73>
  42d437:	lea    rbp,[r15+rbp*4]
  42d43b:	mov    QWORD PTR [rsp+0x10],rdi
  42d440:	mov    ecx,edi
  42d442:	mov    r8,QWORD PTR [r14+0x18]
  42d446:	mov    r11,QWORD PTR [r14+0x20]
  42d44a:	mov    r9d,DWORD PTR [r8+rcx*4]
  42d44e:	mov    r11,QWORD PTR [r11+rcx*8]
  42d452:	mov    r12d,esi
  42d455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42d45f:	nop
  42d460:	mov    ecx,0x1
  42d465:	shlx   rcx,rcx,r12
  42d46a:	or     ecx,edx
  42d46c:	mov    DWORD PTR [rbp+0x0],ecx
  42d46f:	mov    ecx,r9d
  42d472:	shr    ecx,0x3
  42d475:	lea    ebp,[r9*8+0x0]
  42d47d:	xor    ebp,ecx
  42d47f:	or     ebp,0x1
  42d482:	and    ebp,eax
  42d484:	mov    ecx,r9d
  42d487:	nop    WORD PTR [rax+rax*1+0x0]
  42d490:	mov    r8d,ecx
  42d493:	and    r8d,eax
  42d496:	mov    edx,r8d
  42d499:	shr    edx,0x4
  42d49c:	mov    r12d,DWORD PTR [rbx+rdx*4]
  42d4a0:	lea    esi,[r8+r8*1]
  42d4a4:	and    esi,0x1e
  42d4a7:	shlx   edi,r10d,esi
  42d4ac:	lea    ecx,[r8+rbp*1]
  42d4b0:	test   edi,r12d
  42d4b3:	je     42d490 <strcmp@plt+0x29cf8>
  42d4b5:	mov    r13d,edx
  42d4b8:	shlx   ecx,r10d,esi
  42d4bd:	andn   ecx,ecx,r12d
  42d4c2:	mov    DWORD PTR [rbx+r13*4],ecx
  42d4c6:	cmp    r8d,DWORD PTR [r14]
  42d4c9:	jae    42d3f0 <strcmp@plt+0x29c58>
  42d4cf:	mov    ecx,0x3
  42d4d4:	shlx   ecx,ecx,esi
  42d4d9:	test   DWORD PTR [r15+r13*4],ecx
  42d4dd:	jne    42d3f0 <strcmp@plt+0x29c58>
  42d4e3:	mov    r12d,esi
  42d4e6:	mov    rcx,QWORD PTR [r14+0x18]
  42d4ea:	mov    edx,r8d
  42d4ed:	mov    edi,DWORD PTR [rcx+rdx*4]
  42d4f0:	mov    DWORD PTR [rcx+rdx*4],r9d
  42d4f4:	mov    rcx,QWORD PTR [r14+0x20]
  42d4f8:	mov    rsi,QWORD PTR [rcx+rdx*8]
  42d4fc:	mov    QWORD PTR [rcx+rdx*8],r11
  42d500:	mov    r15,QWORD PTR [r14+0x10]
  42d504:	lea    rbp,[r15+r13*4]
  42d508:	mov    edx,DWORD PTR [r15+r13*4]
  42d50c:	mov    r11,rsi
  42d50f:	mov    r9d,edi
  42d512:	jmp    42d460 <strcmp@plt+0x29cc8>
  42d517:	mov    rbp,QWORD PTR [rsp]
  42d51b:	cmp    r8d,ebp
  42d51e:	jbe    42d54c <strcmp@plt+0x29db4>
  42d520:	mov    rdi,QWORD PTR [r14+0x18]
  42d524:	mov    r15d,ebp
  42d527:	lea    rsi,[r15*4+0x0]
  42d52f:	call   403660 <realloc@plt>
  42d534:	mov    QWORD PTR [r14+0x18],rax
  42d538:	mov    rdi,QWORD PTR [r14+0x20]
  42d53c:	shl    r15,0x3
  42d540:	mov    rsi,r15
  42d543:	call   403660 <realloc@plt>
  42d548:	mov    QWORD PTR [r14+0x20],rax
  42d54c:	mov    rdi,QWORD PTR [r14+0x10]
  42d550:	call   403790 <free@plt>
  42d555:	mov    QWORD PTR [r14+0x10],rbx
  42d559:	mov    DWORD PTR [r14],ebp
  42d55c:	mov    eax,DWORD PTR [r14+0x4]
  42d560:	mov    DWORD PTR [r14+0x8],eax
  42d564:	mov    rax,QWORD PTR [rsp+0x8]
  42d569:	mov    DWORD PTR [r14+0xc],eax
  42d56d:	add    rsp,0x18
  42d571:	pop    rbx
  42d572:	pop    r12
  42d574:	pop    r13
  42d576:	pop    r14
  42d578:	pop    r15
  42d57a:	pop    rbp
  42d57b:	ret    
  42d57c:	nop    DWORD PTR [rax+0x0]
  42d580:	push   rbp
  42d581:	mov    rbp,rsp
  42d584:	push   r15
  42d586:	push   r14
  42d588:	push   r13
  42d58a:	push   r12
  42d58c:	push   rbx
  42d58d:	and    rsp,0xffffffffffffffe0
  42d591:	sub    rsp,0x60
  42d595:	mov    r13d,edx
  42d598:	mov    r14,rsi
  42d59b:	test   edi,edi
  42d59d:	je     42d5ae <strcmp@plt+0x29e16>
  42d59f:	cmp    edi,0x1
  42d5a2:	jne    42d6fb <strcmp@plt+0x29f63>
  42d5a8:	mov    bx,0x1002
  42d5ac:	jmp    42d5b2 <strcmp@plt+0x29e1a>
  42d5ae:	mov    bx,0x1003
  42d5b2:	lea    rdi,[rip+0x1deed]        # 44b4a6 <strcmp@plt+0x47d0e>
  42d5b9:	xor    r15d,r15d
  42d5bc:	mov    esi,0x2
  42d5c1:	xor    eax,eax
  42d5c3:	call   4032f0 <open@plt>
  42d5c8:	test   eax,eax
  42d5ca:	js     42d707 <strcmp@plt+0x29f6f>
  42d5d0:	mov    r12d,eax
  42d5d3:	vxorps xmm0,xmm0,xmm0
  42d5d7:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  42d5dd:	mov    QWORD PTR [rsp+0x40],0x0
  42d5e6:	mov    WORD PTR [rsp+0x30],bx
  42d5eb:	lea    rbx,[rsp+0x20]
  42d5f0:	mov    edx,0xf
  42d5f5:	mov    rdi,rbx
  42d5f8:	mov    rsi,r14
  42d5fb:	vzeroupper 
  42d5fe:	call   403250 <strncpy@plt>
  42d603:	xor    r15d,r15d
  42d606:	mov    esi,0x400454ca
  42d60b:	mov    edi,r12d
  42d60e:	mov    rdx,rbx
  42d611:	xor    eax,eax
  42d613:	call   403590 <ioctl@plt>
  42d618:	test   eax,eax
  42d61a:	js     42d72c <strcmp@plt+0x29f94>
  42d620:	mov    DWORD PTR [rsp+0x1c],r13d
  42d625:	xor    r15d,r15d
  42d628:	mov    edi,0x2
  42d62d:	mov    esi,0x2
  42d632:	xor    edx,edx
  42d634:	call   4030f0 <socket@plt>
  42d639:	mov    r13d,eax
  42d63c:	lea    rdx,[rsp+0x20]
  42d641:	mov    esi,0x8933
  42d646:	mov    edi,eax
  42d648:	xor    eax,eax
  42d64a:	call   403590 <ioctl@plt>
  42d64f:	test   eax,eax
  42d651:	js     42d767 <strcmp@plt+0x29fcf>
  42d657:	lea    rax,[rip+0x37762]        # 464dc0 <strcmp@plt+0x61628>
  42d65e:	cmp    DWORD PTR [rax],0x3
  42d661:	jl     42d67a <strcmp@plt+0x29ee2>
  42d663:	mov    edx,DWORD PTR [rsp+0x30]
  42d667:	lea    rsi,[rip+0x1df3e]        # 44b5ac <strcmp@plt+0x47e14>
  42d66e:	mov    edi,0x7
  42d673:	xor    eax,eax
  42d675:	call   42e520 <strcmp@plt+0x2ad88>
  42d67a:	mov    ebx,DWORD PTR [rsp+0x1c]
  42d67e:	mov    DWORD PTR [rsp+0x30],ebx
  42d682:	xor    r15d,r15d
  42d685:	lea    rdx,[rsp+0x20]
  42d68a:	mov    esi,0x8922
  42d68f:	mov    edi,r13d
  42d692:	xor    eax,eax
  42d694:	call   403590 <ioctl@plt>
  42d699:	test   eax,eax
  42d69b:	js     42d793 <strcmp@plt+0x29ffb>
  42d6a1:	lea    rbx,[rip+0x37718]        # 464dc0 <strcmp@plt+0x61628>
  42d6a8:	cmp    DWORD PTR [rbx],0x0
  42d6ab:	jle    42d6c4 <strcmp@plt+0x29f2c>
  42d6ad:	lea    rsi,[rip+0x1df46]        # 44b5fa <strcmp@plt+0x47e62>
  42d6b4:	mov    edi,0x5
  42d6b9:	mov    edx,DWORD PTR [rsp+0x1c]
  42d6bd:	xor    eax,eax
  42d6bf:	call   42e520 <strcmp@plt+0x2ad88>
  42d6c4:	mov    edi,r13d
  42d6c7:	call   403770 <close@plt>
  42d6cc:	cmp    DWORD PTR [rbx],0x2
  42d6cf:	jl     42d6e7 <strcmp@plt+0x29f4f>
  42d6d1:	lea    rsi,[rip+0x1df38]        # 44b610 <strcmp@plt+0x47e78>
  42d6d8:	mov    edi,0x6
  42d6dd:	mov    edx,r12d
  42d6e0:	xor    eax,eax
  42d6e2:	call   42e520 <strcmp@plt+0x2ad88>
  42d6e7:	mov    rdi,r14
  42d6ea:	call   42d7c0 <strcmp@plt+0x2a028>
  42d6ef:	xor    r15d,r15d
  42d6f2:	cmp    eax,0x1
  42d6f5:	cmove  r15d,r12d
  42d6f9:	jmp    42d71a <strcmp@plt+0x29f82>
  42d6fb:	lea    rsi,[rip+0x1ddb1]        # 44b4b3 <strcmp@plt+0x47d1b>
  42d702:	xor    r15d,r15d
  42d705:	jmp    42d70e <strcmp@plt+0x29f76>
  42d707:	lea    rsi,[rip+0x1ddcc]        # 44b4da <strcmp@plt+0x47d42>
  42d70e:	mov    edi,0x1
  42d713:	xor    eax,eax
  42d715:	call   42e520 <strcmp@plt+0x2ad88>
  42d71a:	mov    eax,r15d
  42d71d:	lea    rsp,[rbp-0x28]
  42d721:	pop    rbx
  42d722:	pop    r12
  42d724:	pop    r13
  42d726:	pop    r14
  42d728:	pop    r15
  42d72a:	pop    rbp
  42d72b:	ret    
  42d72c:	mov    edi,r12d
  42d72f:	call   403770 <close@plt>
  42d734:	call   403040 <__errno_location@plt>
  42d739:	mov    rbx,rax
  42d73c:	mov    edi,DWORD PTR [rax]
  42d73e:	call   403170 <strerror@plt>
  42d743:	lea    rsi,[rip+0x1ddb5]        # 44b4ff <strcmp@plt+0x47d67>
  42d74a:	mov    edi,0x1
  42d74f:	mov    rdx,rax
  42d752:	xor    eax,eax
  42d754:	call   42e520 <strcmp@plt+0x2ad88>
  42d759:	cmp    DWORD PTR [rbx],0x10
  42d75c:	jne    42d71a <strcmp@plt+0x29f82>
  42d75e:	lea    rsi,[rip+0x1ddca]        # 44b52f <strcmp@plt+0x47d97>
  42d765:	jmp    42d702 <strcmp@plt+0x29f6a>
  42d767:	mov    edi,r12d
  42d76a:	call   403770 <close@plt>
  42d76f:	mov    edi,r13d
  42d772:	call   403770 <close@plt>
  42d777:	call   403040 <__errno_location@plt>
  42d77c:	mov    edx,DWORD PTR [rax]
  42d77e:	lea    rsi,[rip+0x1dde1]        # 44b566 <strcmp@plt+0x47dce>
  42d785:	mov    edi,0x1
  42d78a:	xor    eax,eax
  42d78c:	call   42e520 <strcmp@plt+0x2ad88>
  42d791:	jmp    42d71a <strcmp@plt+0x29f82>
  42d793:	mov    edi,r13d
  42d796:	call   403770 <close@plt>
  42d79b:	call   403040 <__errno_location@plt>
  42d7a0:	mov    ecx,DWORD PTR [rax]
  42d7a2:	lea    rsi,[rip+0x1de1a]        # 44b5c3 <strcmp@plt+0x47e2b>
  42d7a9:	mov    edi,0x1
  42d7ae:	mov    edx,ebx
  42d7b0:	xor    eax,eax
  42d7b2:	call   42e520 <strcmp@plt+0x2ad88>
  42d7b7:	jmp    42d71a <strcmp@plt+0x29f82>
  42d7bc:	nop    DWORD PTR [rax+0x0]
  42d7c0:	push   rbp
  42d7c1:	push   r15
  42d7c3:	push   r14
  42d7c5:	push   r12
  42d7c7:	push   rbx
  42d7c8:	sub    rsp,0x1000
  42d7cf:	mov    r14,rdi
  42d7d2:	call   4030c0 <if_nametoindex@plt>
  42d7d7:	mov    ebx,eax
  42d7d9:	xor    r15d,r15d
  42d7dc:	mov    edi,0x10
  42d7e1:	mov    esi,0x2
  42d7e6:	xor    edx,edx
  42d7e8:	call   4030f0 <socket@plt>
  42d7ed:	test   eax,eax
  42d7ef:	js     42d87f <strcmp@plt+0x2a0e7>
  42d7f5:	mov    ebp,eax
  42d7f7:	mov    r12,rsp
  42d7fa:	xor    r15d,r15d
  42d7fd:	mov    edx,0x1000
  42d802:	mov    rdi,r12
  42d805:	xor    esi,esi
  42d807:	call   403260 <memset@plt>
  42d80c:	movabs rax,0x501001300000020
  42d816:	mov    QWORD PTR [rsp],rax
  42d81a:	mov    BYTE PTR [rsp+0x10],0x0
  42d81f:	mov    WORD PTR [rsp+0x12],0x0
  42d826:	mov    DWORD PTR [rsp+0x14],ebx
  42d82a:	movabs rax,0xffffffff00000041
  42d834:	mov    QWORD PTR [rsp+0x18],rax
  42d839:	mov    edx,0x20
  42d83e:	mov    edi,ebp
  42d840:	mov    rsi,r12
  42d843:	xor    ecx,ecx
  42d845:	call   403230 <send@plt>
  42d84a:	test   eax,eax
  42d84c:	js     42d894 <strcmp@plt+0x2a0fc>
  42d84e:	lea    rax,[rip+0x3756b]        # 464dc0 <strcmp@plt+0x61628>
  42d855:	cmp    DWORD PTR [rax],0x0
  42d858:	jle    42d870 <strcmp@plt+0x2a0d8>
  42d85a:	lea    rsi,[rip+0x1de20]        # 44b681 <strcmp@plt+0x47ee9>
  42d861:	mov    edi,0x5
  42d866:	mov    rdx,r14
  42d869:	xor    eax,eax
  42d86b:	call   42e520 <strcmp@plt+0x2ad88>
  42d870:	mov    edi,ebp
  42d872:	call   403770 <close@plt>
  42d877:	mov    r15d,0x1
  42d87d:	jmp    42d8bd <strcmp@plt+0x2a125>
  42d87f:	lea    rsi,[rip+0x1dda6]        # 44b62c <strcmp@plt+0x47e94>
  42d886:	mov    edi,0x2
  42d88b:	xor    eax,eax
  42d88d:	call   42e520 <strcmp@plt+0x2ad88>
  42d892:	jmp    42d8bd <strcmp@plt+0x2a125>
  42d894:	call   403040 <__errno_location@plt>
  42d899:	mov    edi,DWORD PTR [rax]
  42d89b:	call   403170 <strerror@plt>
  42d8a0:	lea    rsi,[rip+0x1ddb9]        # 44b660 <strcmp@plt+0x47ec8>
  42d8a7:	mov    edi,0x2
  42d8ac:	mov    rdx,rax
  42d8af:	xor    eax,eax
  42d8b1:	call   42e520 <strcmp@plt+0x2ad88>
  42d8b6:	mov    edi,ebp
  42d8b8:	call   403770 <close@plt>
  42d8bd:	mov    eax,r15d
  42d8c0:	add    rsp,0x1000
  42d8c7:	pop    rbx
  42d8c8:	pop    r12
  42d8ca:	pop    r14
  42d8cc:	pop    r15
  42d8ce:	pop    rbp
  42d8cf:	ret    
  42d8d0:	push   rbp
  42d8d1:	push   r15
  42d8d3:	push   r14
  42d8d5:	push   r13
  42d8d7:	push   r12
  42d8d9:	push   rbx
  42d8da:	sub    rsp,0x1018
  42d8e1:	mov    rbx,rsi
  42d8e4:	mov    r14,rdi
  42d8e7:	call   4030c0 <if_nametoindex@plt>
  42d8ec:	mov    r12d,eax
  42d8ef:	xor    ebp,ebp
  42d8f1:	mov    edi,0x10
  42d8f6:	mov    esi,0x2
  42d8fb:	xor    edx,edx
  42d8fd:	call   4030f0 <socket@plt>
  42d902:	test   eax,eax
  42d904:	js     42d92e <strcmp@plt+0x2a196>
  42d906:	mov    r15d,eax
  42d909:	mov    rdi,rbx
  42d90c:	call   422ef0 <strcmp@plt+0x1f758>
  42d911:	cmp    ax,0x2
  42d915:	je     42d946 <strcmp@plt+0x2a1ae>
  42d917:	cmp    ax,0xa
  42d91b:	jne    42da05 <strcmp@plt+0x2a26d>
  42d921:	mov    BYTE PTR [rsp+0xf],0x80
  42d926:	mov    r13d,0x10
  42d92c:	jmp    42d951 <strcmp@plt+0x2a1b9>
  42d92e:	lea    rsi,[rip+0x1dd5d]        # 44b692 <strcmp@plt+0x47efa>
  42d935:	mov    edi,0x2
  42d93a:	xor    eax,eax
  42d93c:	call   42e520 <strcmp@plt+0x2ad88>
  42d941:	jmp    42da51 <strcmp@plt+0x2a2b9>
  42d946:	mov    BYTE PTR [rsp+0xf],0x20
  42d94b:	mov    r13d,0x4
  42d951:	lea    rdi,[rsp+0x10]
  42d956:	xor    ebp,ebp
  42d958:	mov    edx,0x1000
  42d95d:	xor    esi,esi
  42d95f:	call   403260 <memset@plt>
  42d964:	lea    eax,[r13+0x1c]
  42d968:	mov    DWORD PTR [rsp+0x10],eax
  42d96c:	mov    DWORD PTR [rsp+0x14],0x5010014
  42d974:	mov    al,BYTE PTR [rsp+0xf]
  42d978:	mov    BYTE PTR [rsp+0x21],al
  42d97c:	mov    rdi,rbx
  42d97f:	call   422ef0 <strcmp@plt+0x1f758>
  42d984:	mov    BYTE PTR [rsp+0x20],al
  42d988:	mov    DWORD PTR [rsp+0x24],r12d
  42d98d:	mov    WORD PTR [rsp+0x22],0x0
  42d994:	mov    WORD PTR [rsp+0x2a],0x2
  42d99b:	add    r13d,0x4
  42d99f:	mov    WORD PTR [rsp+0x28],r13w
  42d9a5:	lea    rdi,[rsp+0x2c]
  42d9aa:	mov    rsi,rbx
  42d9ad:	call   423480 <strcmp@plt+0x1fce8>
  42d9b2:	mov    edx,DWORD PTR [rsp+0x10]
  42d9b6:	mov    edi,r15d
  42d9b9:	lea    rsi,[rsp+0x10]
  42d9be:	xor    ecx,ecx
  42d9c0:	call   403230 <send@plt>
  42d9c5:	test   eax,eax
  42d9c7:	js     42da27 <strcmp@plt+0x2a28f>
  42d9c9:	lea    rax,[rip+0x373f0]        # 464dc0 <strcmp@plt+0x61628>
  42d9d0:	cmp    DWORD PTR [rax],0x0
  42d9d3:	jle    42d9f6 <strcmp@plt+0x2a25e>
  42d9d5:	mov    rdi,rbx
  42d9d8:	call   422e20 <strcmp@plt+0x1f688>
  42d9dd:	lea    rsi,[rip+0x1dd35]        # 44b719 <strcmp@plt+0x47f81>
  42d9e4:	mov    edi,0x5
  42d9e9:	mov    rdx,rax
  42d9ec:	mov    rcx,r14
  42d9ef:	xor    eax,eax
  42d9f1:	call   42e520 <strcmp@plt+0x2ad88>
  42d9f6:	mov    edi,r15d
  42d9f9:	call   403770 <close@plt>
  42d9fe:	mov    ebp,0x1
  42da03:	jmp    42da51 <strcmp@plt+0x2a2b9>
  42da05:	mov    rdi,rbx
  42da08:	call   422e20 <strcmp@plt+0x1f688>
  42da0d:	lea    rsi,[rip+0x1dcb5]        # 44b6c9 <strcmp@plt+0x47f31>
  42da14:	xor    ebp,ebp
  42da16:	mov    edi,0x2
  42da1b:	mov    rdx,rax
  42da1e:	xor    eax,eax
  42da20:	call   42e520 <strcmp@plt+0x2ad88>
  42da25:	jmp    42da51 <strcmp@plt+0x2a2b9>
  42da27:	call   403040 <__errno_location@plt>
  42da2c:	mov    edi,DWORD PTR [rax]
  42da2e:	call   403170 <strerror@plt>
  42da33:	lea    rsi,[rip+0x1dcbb]        # 44b6f5 <strcmp@plt+0x47f5d>
  42da3a:	mov    edi,0x2
  42da3f:	mov    rdx,rax
  42da42:	xor    eax,eax
  42da44:	call   42e520 <strcmp@plt+0x2ad88>
  42da49:	mov    edi,r15d
  42da4c:	call   403770 <close@plt>
  42da51:	mov    eax,ebp
  42da53:	add    rsp,0x1018
  42da5a:	pop    rbx
  42da5b:	pop    r12
  42da5d:	pop    r13
  42da5f:	pop    r14
  42da61:	pop    r15
  42da63:	pop    rbp
  42da64:	ret    
  42da65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42da6f:	nop
  42da70:	push   rbp
  42da71:	push   r15
  42da73:	push   r14
  42da75:	push   r13
  42da77:	push   r12
  42da79:	push   rbx
  42da7a:	sub    rsp,0x1018
  42da81:	mov    rbx,rsi
  42da84:	mov    r14,rdi
  42da87:	call   4030c0 <if_nametoindex@plt>
  42da8c:	mov    r12d,eax
  42da8f:	xor    ebp,ebp
  42da91:	mov    edi,0x10
  42da96:	mov    esi,0x2
  42da9b:	xor    edx,edx
  42da9d:	call   4030f0 <socket@plt>
  42daa2:	test   eax,eax
  42daa4:	js     42dace <strcmp@plt+0x2a336>
  42daa6:	mov    r15d,eax
  42daa9:	mov    rdi,rbx
  42daac:	call   422ef0 <strcmp@plt+0x1f758>
  42dab1:	cmp    ax,0x2
  42dab5:	je     42dae6 <strcmp@plt+0x2a34e>
  42dab7:	cmp    ax,0xa
  42dabb:	jne    42dba5 <strcmp@plt+0x2a40d>
  42dac1:	mov    BYTE PTR [rsp+0xf],0x80
  42dac6:	mov    r13d,0x10
  42dacc:	jmp    42daf1 <strcmp@plt+0x2a359>
  42dace:	lea    rsi,[rip+0x1dc5e]        # 44b733 <strcmp@plt+0x47f9b>
  42dad5:	mov    edi,0x2
  42dada:	xor    eax,eax
  42dadc:	call   42e520 <strcmp@plt+0x2ad88>
  42dae1:	jmp    42dbf1 <strcmp@plt+0x2a459>
  42dae6:	mov    BYTE PTR [rsp+0xf],0x20
  42daeb:	mov    r13d,0x4
  42daf1:	lea    rdi,[rsp+0x10]
  42daf6:	xor    ebp,ebp
  42daf8:	mov    edx,0x1000
  42dafd:	xor    esi,esi
  42daff:	call   403260 <memset@plt>
  42db04:	lea    eax,[r13+0x1c]
  42db08:	mov    DWORD PTR [rsp+0x10],eax
  42db0c:	mov    DWORD PTR [rsp+0x14],0x5010015
  42db14:	mov    al,BYTE PTR [rsp+0xf]
  42db18:	mov    BYTE PTR [rsp+0x21],al
  42db1c:	mov    rdi,rbx
  42db1f:	call   422ef0 <strcmp@plt+0x1f758>
  42db24:	mov    BYTE PTR [rsp+0x20],al
  42db28:	mov    DWORD PTR [rsp+0x24],r12d
  42db2d:	mov    WORD PTR [rsp+0x22],0x0
  42db34:	mov    WORD PTR [rsp+0x2a],0x2
  42db3b:	add    r13d,0x4
  42db3f:	mov    WORD PTR [rsp+0x28],r13w
  42db45:	lea    rdi,[rsp+0x2c]
  42db4a:	mov    rsi,rbx
  42db4d:	call   423480 <strcmp@plt+0x1fce8>
  42db52:	mov    edx,DWORD PTR [rsp+0x10]
  42db56:	mov    edi,r15d
  42db59:	lea    rsi,[rsp+0x10]
  42db5e:	xor    ecx,ecx
  42db60:	call   403230 <send@plt>
  42db65:	test   eax,eax
  42db67:	js     42dbc7 <strcmp@plt+0x2a42f>
  42db69:	lea    rax,[rip+0x37250]        # 464dc0 <strcmp@plt+0x61628>
  42db70:	cmp    DWORD PTR [rax],0x0
  42db73:	jle    42db96 <strcmp@plt+0x2a3fe>
  42db75:	mov    rdi,rbx
  42db78:	call   422e20 <strcmp@plt+0x1f688>
  42db7d:	lea    rsi,[rip+0x1dc3c]        # 44b7c0 <strcmp@plt+0x48028>
  42db84:	mov    edi,0x5
  42db89:	mov    rdx,rax
  42db8c:	mov    rcx,r14
  42db8f:	xor    eax,eax
  42db91:	call   42e520 <strcmp@plt+0x2ad88>
  42db96:	mov    edi,r15d
  42db99:	call   403770 <close@plt>
  42db9e:	mov    ebp,0x1
  42dba3:	jmp    42dbf1 <strcmp@plt+0x2a459>
  42dba5:	mov    rdi,rbx
  42dba8:	call   422e20 <strcmp@plt+0x1f688>
  42dbad:	lea    rsi,[rip+0x1dbb8]        # 44b76c <strcmp@plt+0x47fd4>
  42dbb4:	xor    ebp,ebp
  42dbb6:	mov    edi,0x2
  42dbbb:	mov    rdx,rax
  42dbbe:	xor    eax,eax
  42dbc0:	call   42e520 <strcmp@plt+0x2ad88>
  42dbc5:	jmp    42dbf1 <strcmp@plt+0x2a459>
  42dbc7:	call   403040 <__errno_location@plt>
  42dbcc:	mov    edi,DWORD PTR [rax]
  42dbce:	call   403170 <strerror@plt>
  42dbd3:	lea    rsi,[rip+0x1dbc0]        # 44b79a <strcmp@plt+0x48002>
  42dbda:	mov    edi,0x2
  42dbdf:	mov    rdx,rax
  42dbe2:	xor    eax,eax
  42dbe4:	call   42e520 <strcmp@plt+0x2ad88>
  42dbe9:	mov    edi,r15d
  42dbec:	call   403770 <close@plt>
  42dbf1:	mov    eax,ebp
  42dbf3:	add    rsp,0x1018
  42dbfa:	pop    rbx
  42dbfb:	pop    r12
  42dbfd:	pop    r13
  42dbff:	pop    r14
  42dc01:	pop    r15
  42dc03:	pop    rbp
  42dc04:	ret    
  42dc05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dc0f:	nop
  42dc10:	mov    QWORD PTR [rdi+0x30],rsi
  42dc14:	mov    QWORD PTR [rdi+0x38],rsi
  42dc18:	mov    DWORD PTR [rdi+0x10],edx
  42dc1b:	mov    DWORD PTR [rdi+0x28],0x0
  42dc22:	mov    DWORD PTR [rdi+0x14],0x0
  42dc29:	mov    QWORD PTR [rdi+0x1a],0xffffffffffffffff
  42dc31:	mov    DWORD PTR [rdi+0x22],0xffffffff
  42dc38:	ret    
  42dc39:	nop    DWORD PTR [rax+0x0]
  42dc40:	mov    QWORD PTR [rdi+0x30],rsi
  42dc44:	mov    QWORD PTR [rdi+0x38],rsi
  42dc48:	mov    DWORD PTR [rdi+0x10],edx
  42dc4b:	mov    DWORD PTR [rdi+0x28],0x1
  42dc52:	mov    DWORD PTR [rdi+0x14],0x0
  42dc59:	mov    QWORD PTR [rdi+0x1a],0xffffffffffffffff
  42dc61:	mov    DWORD PTR [rdi+0x22],0xffffffff
  42dc68:	ret    
  42dc69:	nop    DWORD PTR [rax+0x0]
  42dc70:	push   rbp
  42dc71:	push   rbx
  42dc72:	push   rax
  42dc73:	mov    ebp,esi
  42dc75:	mov    rbx,rdi
  42dc78:	test   esi,esi
  42dc7a:	je     42dc85 <strcmp@plt+0x2a4ed>
  42dc7c:	mov    edi,ebp
  42dc7e:	call   431d60 <strcmp@plt+0x2e5c8>
  42dc83:	jmp    42dc87 <strcmp@plt+0x2a4ef>
  42dc85:	xor    eax,eax
  42dc87:	mov    QWORD PTR [rbx+0x30],rax
  42dc8b:	mov    QWORD PTR [rbx+0x38],rax
  42dc8f:	mov    DWORD PTR [rbx+0x10],ebp
  42dc92:	mov    DWORD PTR [rbx+0x28],0x0
  42dc99:	mov    DWORD PTR [rbx+0x14],0x0
  42dca0:	mov    QWORD PTR [rbx+0x1a],0xffffffffffffffff
  42dca8:	mov    DWORD PTR [rbx+0x22],0xffffffff
  42dcaf:	add    rsp,0x8
  42dcb3:	pop    rbx
  42dcb4:	pop    rbp
  42dcb5:	ret    
  42dcb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dcc0:	test   rdi,rdi
  42dcc3:	je     42dccb <strcmp@plt+0x2a533>
  42dcc5:	cmp    DWORD PTR [rdi+0x28],0x0
  42dcc9:	je     42dccc <strcmp@plt+0x2a534>
  42dccb:	ret    
  42dccc:	mov    rdi,QWORD PTR [rdi+0x30]
  42dcd0:	jmp    403790 <free@plt>
  42dcd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dcdf:	nop
  42dce0:	push   rbp
  42dce1:	push   rbx
  42dce2:	push   rax
  42dce3:	mov    ebp,edi
  42dce5:	mov    edi,0x40
  42dcea:	call   431d60 <strcmp@plt+0x2e5c8>
  42dcef:	mov    rbx,rax
  42dcf2:	test   ebp,ebp
  42dcf4:	je     42dcff <strcmp@plt+0x2a567>
  42dcf6:	mov    edi,ebp
  42dcf8:	call   431d60 <strcmp@plt+0x2e5c8>
  42dcfd:	jmp    42dd01 <strcmp@plt+0x2a569>
  42dcff:	xor    eax,eax
  42dd01:	mov    QWORD PTR [rbx+0x30],rax
  42dd05:	mov    QWORD PTR [rbx+0x38],rax
  42dd09:	mov    DWORD PTR [rbx+0x10],ebp
  42dd0c:	mov    DWORD PTR [rbx+0x28],0x0
  42dd13:	mov    DWORD PTR [rbx+0x14],0x0
  42dd1a:	mov    QWORD PTR [rbx+0x1a],0xffffffffffffffff
  42dd22:	mov    DWORD PTR [rbx+0x22],0xffffffff
  42dd29:	mov    rax,rbx
  42dd2c:	add    rsp,0x8
  42dd30:	pop    rbx
  42dd31:	pop    rbp
  42dd32:	ret    
  42dd33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dd3d:	nop    DWORD PTR [rax]
  42dd40:	test   rdi,rdi
  42dd43:	je     42dd61 <strcmp@plt+0x2a5c9>
  42dd45:	push   rbx
  42dd46:	mov    rbx,rdi
  42dd49:	cmp    DWORD PTR [rdi+0x28],0x0
  42dd4d:	jne    42dd58 <strcmp@plt+0x2a5c0>
  42dd4f:	mov    rdi,QWORD PTR [rbx+0x30]
  42dd53:	call   403790 <free@plt>
  42dd58:	mov    rdi,rbx
  42dd5b:	pop    rbx
  42dd5c:	jmp    403790 <free@plt>
  42dd61:	ret    
  42dd62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42dd6c:	nop    DWORD PTR [rax+0x0]
  42dd70:	push   rbp
  42dd71:	push   r14
  42dd73:	push   rbx
  42dd74:	mov    r14d,esi
  42dd77:	mov    ebp,edi
  42dd79:	mov    edi,0x40
  42dd7e:	call   431d60 <strcmp@plt+0x2e5c8>
  42dd83:	mov    rbx,rax
  42dd86:	add    ebp,r14d
  42dd89:	je     42dd94 <strcmp@plt+0x2a5fc>
  42dd8b:	mov    edi,ebp
  42dd8d:	call   431d60 <strcmp@plt+0x2e5c8>
  42dd92:	jmp    42dd96 <strcmp@plt+0x2a5fe>
  42dd94:	xor    eax,eax
  42dd96:	mov    QWORD PTR [rbx+0x30],rax
  42dd9a:	mov    QWORD PTR [rbx+0x38],rax
  42dd9e:	mov    DWORD PTR [rbx+0x10],ebp
  42dda1:	mov    DWORD PTR [rbx+0x28],0x0
  42dda8:	mov    DWORD PTR [rbx+0x14],0x0
  42ddaf:	mov    QWORD PTR [rbx+0x1a],0xffffffffffffffff
  42ddb7:	mov    DWORD PTR [rbx+0x22],0xffffffff
  42ddbe:	cmp    ebp,r14d
  42ddc1:	jae    42ddde <strcmp@plt+0x2a646>
  42ddc3:	cmp    r14d,0x40
  42ddc7:	mov    edx,0x40
  42ddcc:	cmova  edx,r14d
  42ddd0:	mov    rdi,rbx
  42ddd3:	xor    esi,esi
  42ddd5:	call   42de70 <strcmp@plt+0x2a6d8>
  42ddda:	mov    rax,QWORD PTR [rbx+0x30]
  42ddde:	mov    ecx,r14d
  42dde1:	add    rcx,rax
  42dde4:	mov    QWORD PTR [rbx+0x38],rcx
  42dde8:	mov    rax,rbx
  42ddeb:	pop    rbx
  42ddec:	pop    r14
  42ddee:	pop    rbp
  42ddef:	ret    
  42ddf0:	push   rbp
  42ddf1:	push   rbx
  42ddf2:	push   rax
  42ddf3:	mov    ebp,esi
  42ddf5:	mov    rbx,rdi
  42ddf8:	mov    rax,QWORD PTR [rdi+0x30]
  42ddfc:	mov    rsi,QWORD PTR [rdi+0x38]
  42de00:	mov    ecx,DWORD PTR [rdi+0x10]
  42de03:	add    ecx,eax
  42de05:	mov    edx,DWORD PTR [rdi+0x14]
  42de08:	add    edx,esi
  42de0a:	sub    ecx,edx
  42de0c:	cmp    ecx,ebp
  42de0e:	jae    42de29 <strcmp@plt+0x2a691>
  42de10:	sub    esi,eax
  42de12:	cmp    ebp,0x40
  42de15:	mov    edx,0x40
  42de1a:	cmova  edx,ebp
  42de1d:	mov    rdi,rbx
  42de20:	call   42de70 <strcmp@plt+0x2a6d8>
  42de25:	mov    rax,QWORD PTR [rbx+0x30]
  42de29:	mov    ecx,ebp
  42de2b:	add    rcx,rax
  42de2e:	mov    QWORD PTR [rbx+0x38],rcx
  42de32:	add    rsp,0x8
  42de36:	pop    rbx
  42de37:	pop    rbp
  42de38:	ret    
  42de39:	nop    DWORD PTR [rax+0x0]
  42de40:	mov    eax,esi
  42de42:	mov    r8,QWORD PTR [rdi+0x30]
  42de46:	mov    rsi,QWORD PTR [rdi+0x38]
  42de4a:	mov    edx,DWORD PTR [rdi+0x10]
  42de4d:	add    edx,r8d
  42de50:	mov    ecx,DWORD PTR [rdi+0x14]
  42de53:	add    ecx,esi
  42de55:	sub    edx,ecx
  42de57:	cmp    edx,eax
  42de59:	jae    42de6b <strcmp@plt+0x2a6d3>
  42de5b:	sub    esi,r8d
  42de5e:	cmp    eax,0x40
  42de61:	mov    edx,0x40
  42de66:	cmova  edx,eax
  42de69:	jmp    42de70 <strcmp@plt+0x2a6d8>
  42de6b:	ret    
  42de6c:	nop    DWORD PTR [rax+0x0]
  42de70:	push   rbp
  42de71:	push   r15
  42de73:	push   r14
  42de75:	push   r12
  42de77:	push   rbx
  42de78:	mov    r14,rdx
  42de7b:	mov    ebp,esi
  42de7d:	mov    rbx,rdi
  42de80:	add    r14d,esi
  42de83:	add    r14d,DWORD PTR [rdi+0x14]
  42de87:	mov    eax,DWORD PTR [rdi+0x38]
  42de8a:	mov    rdi,QWORD PTR [rdi+0x30]
  42de8e:	sub    eax,edi
  42de90:	mov    r12d,esi
  42de93:	sub    r12d,eax
  42de96:	jne    42deae <strcmp@plt+0x2a716>
  42de98:	mov    esi,r14d
  42de9b:	call   431db0 <strcmp@plt+0x2e618>
  42dea0:	mov    r15,rax
  42dea3:	mov    QWORD PTR [rbx+0x30],rax
  42dea7:	mov    ebp,ebp
  42dea9:	jmp    42df3e <strcmp@plt+0x2a7a6>
  42deae:	mov    edi,r14d
  42deb1:	call   431d90 <strcmp@plt+0x2e5f8>
  42deb6:	mov    r15,rax
  42deb9:	mov    ebp,ebp
  42debb:	lea    rdi,[rax+rbp*1]
  42debf:	mov    rsi,QWORD PTR [rbx+0x38]
  42dec3:	mov    edx,DWORD PTR [rbx+0x14]
  42dec6:	call   403330 <memcpy@plt>
  42decb:	mov    rdi,QWORD PTR [rbx+0x30]
  42decf:	call   403790 <free@plt>
  42ded4:	mov    QWORD PTR [rbx+0x30],r15
  42ded8:	movzx  eax,WORD PTR [rbx+0x1a]
  42dedc:	cmp    ax,0xffff
  42dee0:	je     42dee9 <strcmp@plt+0x2a751>
  42dee2:	add    eax,r12d
  42dee5:	mov    WORD PTR [rbx+0x1a],ax
  42dee9:	movzx  eax,WORD PTR [rbx+0x1c]
  42deed:	cmp    ax,0xffff
  42def1:	je     42defa <strcmp@plt+0x2a762>
  42def3:	add    eax,r12d
  42def6:	mov    WORD PTR [rbx+0x1c],ax
  42defa:	movzx  eax,WORD PTR [rbx+0x1e]
  42defe:	cmp    ax,0xffff
  42df02:	je     42df0b <strcmp@plt+0x2a773>
  42df04:	add    eax,r12d
  42df07:	mov    WORD PTR [rbx+0x1e],ax
  42df0b:	movzx  eax,WORD PTR [rbx+0x20]
  42df0f:	cmp    ax,0xffff
  42df13:	je     42df1c <strcmp@plt+0x2a784>
  42df15:	add    eax,r12d
  42df18:	mov    WORD PTR [rbx+0x20],ax
  42df1c:	movzx  eax,WORD PTR [rbx+0x22]
  42df20:	cmp    ax,0xffff
  42df24:	je     42df2d <strcmp@plt+0x2a795>
  42df26:	add    eax,r12d
  42df29:	mov    WORD PTR [rbx+0x22],ax
  42df2d:	movzx  eax,WORD PTR [rbx+0x24]
  42df31:	cmp    ax,0xffff
  42df35:	je     42df3e <strcmp@plt+0x2a7a6>
  42df37:	add    eax,r12d
  42df3a:	mov    WORD PTR [rbx+0x24],ax
  42df3e:	add    rbp,r15
  42df41:	mov    DWORD PTR [rbx+0x10],r14d
  42df45:	mov    QWORD PTR [rbx+0x38],rbp
  42df49:	pop    rbx
  42df4a:	pop    r12
  42df4c:	pop    r14
  42df4e:	pop    r15
  42df50:	pop    rbp
  42df51:	ret    
  42df52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42df5c:	nop    DWORD PTR [rax+0x0]
  42df60:	mov    rdx,QWORD PTR [rdi+0x30]
  42df64:	mov    rcx,QWORD PTR [rdi+0x38]
  42df68:	mov    eax,ecx
  42df6a:	sub    eax,edx
  42df6c:	cmp    eax,esi
  42df6e:	jae    42df8a <strcmp@plt+0x2a7f2>
  42df70:	cmp    esi,0x40
  42df73:	mov    eax,0x40
  42df78:	cmova  eax,esi
  42df7b:	add    edx,DWORD PTR [rdi+0x10]
  42df7e:	add    ecx,DWORD PTR [rdi+0x14]
  42df81:	sub    edx,ecx
  42df83:	mov    esi,eax
  42df85:	jmp    42de70 <strcmp@plt+0x2a6d8>
  42df8a:	ret    
  42df8b:	nop    DWORD PTR [rax+rax*1+0x0]
  42df90:	push   rbp
  42df91:	push   rbx
  42df92:	push   rax
  42df93:	mov    ebp,esi
  42df95:	mov    rbx,rdi
  42df98:	mov    rax,QWORD PTR [rdi+0x30]
  42df9c:	mov    edx,DWORD PTR [rdi+0x10]
  42df9f:	add    edx,eax
  42dfa1:	mov    rsi,QWORD PTR [rdi+0x38]
  42dfa5:	mov    ecx,DWORD PTR [rdi+0x14]
  42dfa8:	lea    edi,[rsi+rcx*1]
  42dfab:	sub    edx,edi
  42dfad:	cmp    edx,ebp
  42dfaf:	jae    42dfcd <strcmp@plt+0x2a835>
  42dfb1:	sub    esi,eax
  42dfb3:	cmp    ebp,0x40
  42dfb6:	mov    edx,0x40
  42dfbb:	cmova  edx,ebp
  42dfbe:	mov    rdi,rbx
  42dfc1:	call   42de70 <strcmp@plt+0x2a6d8>
  42dfc6:	mov    rsi,QWORD PTR [rbx+0x38]
  42dfca:	mov    ecx,DWORD PTR [rbx+0x14]
  42dfcd:	mov    rax,rcx
  42dfd0:	add    rax,rsi
  42dfd3:	add    ecx,ebp
  42dfd5:	mov    DWORD PTR [rbx+0x14],ecx
  42dfd8:	add    rsp,0x8
  42dfdc:	pop    rbx
  42dfdd:	pop    rbp
  42dfde:	ret    
  42dfdf:	nop
  42dfe0:	push   rbp
  42dfe1:	push   r14
  42dfe3:	push   rbx
  42dfe4:	mov    ebp,edx
  42dfe6:	mov    r14,rsi
  42dfe9:	mov    rbx,rdi
  42dfec:	mov    rcx,QWORD PTR [rdi+0x30]
  42dff0:	mov    edx,DWORD PTR [rdi+0x10]
  42dff3:	add    edx,ecx
  42dff5:	mov    rsi,QWORD PTR [rdi+0x38]
  42dff9:	mov    eax,DWORD PTR [rdi+0x14]
  42dffc:	lea    edi,[rsi+rax*1]
  42dfff:	sub    edx,edi
  42e001:	cmp    edx,ebp
  42e003:	jae    42e021 <strcmp@plt+0x2a889>
  42e005:	sub    esi,ecx
  42e007:	cmp    ebp,0x40
  42e00a:	mov    edx,0x40
  42e00f:	cmova  edx,ebp
  42e012:	mov    rdi,rbx
  42e015:	call   42de70 <strcmp@plt+0x2a6d8>
  42e01a:	mov    rsi,QWORD PTR [rbx+0x38]
  42e01e:	mov    eax,DWORD PTR [rbx+0x14]
  42e021:	mov    rdi,rax
  42e024:	add    rdi,rsi
  42e027:	add    eax,ebp
  42e029:	mov    DWORD PTR [rbx+0x14],eax
  42e02c:	mov    edx,ebp
  42e02e:	mov    rsi,r14
  42e031:	pop    rbx
  42e032:	pop    r14
  42e034:	pop    rbp
  42e035:	jmp    403330 <memcpy@plt>
  42e03a:	nop    WORD PTR [rax+rax*1+0x0]
  42e040:	push   rbp
  42e041:	push   rbx
  42e042:	push   rax
  42e043:	mov    ebp,esi
  42e045:	mov    rbx,rdi
  42e048:	mov    rdx,QWORD PTR [rdi+0x30]
  42e04c:	mov    rax,QWORD PTR [rdi+0x38]
  42e050:	mov    ecx,eax
  42e052:	sub    ecx,edx
  42e054:	cmp    ecx,esi
  42e056:	jae    42e077 <strcmp@plt+0x2a8df>
  42e058:	cmp    ebp,0x40
  42e05b:	mov    esi,0x40
  42e060:	cmova  esi,ebp
  42e063:	add    edx,DWORD PTR [rbx+0x10]
  42e066:	add    eax,DWORD PTR [rbx+0x14]
  42e069:	sub    edx,eax
  42e06b:	mov    rdi,rbx
  42e06e:	call   42de70 <strcmp@plt+0x2a6d8>
  42e073:	mov    rax,QWORD PTR [rbx+0x38]
  42e077:	mov    ecx,ebp
  42e079:	sub    rax,rcx
  42e07c:	mov    QWORD PTR [rbx+0x38],rax
  42e080:	add    DWORD PTR [rbx+0x14],ebp
  42e083:	add    rsp,0x8
  42e087:	pop    rbx
  42e088:	pop    rbp
  42e089:	ret    
  42e08a:	nop    WORD PTR [rax+rax*1+0x0]
  42e090:	push   rbp
  42e091:	push   r14
  42e093:	push   rbx
  42e094:	mov    ebp,edx
  42e096:	mov    r14,rsi
  42e099:	mov    rbx,rdi
  42e09c:	mov    rdx,QWORD PTR [rdi+0x30]
  42e0a0:	mov    rdi,QWORD PTR [rdi+0x38]
  42e0a4:	mov    eax,edi
  42e0a6:	sub    eax,edx
  42e0a8:	cmp    eax,ebp
  42e0aa:	jae    42e0cb <strcmp@plt+0x2a933>
  42e0ac:	cmp    ebp,0x40
  42e0af:	mov    esi,0x40
  42e0b4:	cmova  esi,ebp
  42e0b7:	add    edx,DWORD PTR [rbx+0x10]
  42e0ba:	add    edi,DWORD PTR [rbx+0x14]
  42e0bd:	sub    edx,edi
  42e0bf:	mov    rdi,rbx
  42e0c2:	call   42de70 <strcmp@plt+0x2a6d8>
  42e0c7:	mov    rdi,QWORD PTR [rbx+0x38]
  42e0cb:	mov    edx,ebp
  42e0cd:	sub    rdi,rdx
  42e0d0:	mov    QWORD PTR [rbx+0x38],rdi
  42e0d4:	add    DWORD PTR [rbx+0x14],ebp
  42e0d7:	mov    rsi,r14
  42e0da:	pop    rbx
  42e0db:	pop    r14
  42e0dd:	pop    rbp
  42e0de:	jmp    403330 <memcpy@plt>
  42e0e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e0ed:	nop    DWORD PTR [rax]
  42e0f0:	push   r15
  42e0f2:	push   r14
  42e0f4:	push   r13
  42e0f6:	push   r12
  42e0f8:	push   rbx
  42e0f9:	mov    r14,rdi
  42e0fc:	mov    r12d,DWORD PTR [rdi+0x14]
  42e100:	mov    edi,0x40
  42e105:	call   431d60 <strcmp@plt+0x2e5c8>
  42e10a:	mov    r15,rax
  42e10d:	test   r12,r12
  42e110:	je     42e11f <strcmp@plt+0x2a987>
  42e112:	mov    rdi,r12
  42e115:	call   431d60 <strcmp@plt+0x2e5c8>
  42e11a:	mov    rbx,rax
  42e11d:	jmp    42e121 <strcmp@plt+0x2a989>
  42e11f:	xor    ebx,ebx
  42e121:	mov    QWORD PTR [r15+0x30],rbx
  42e125:	mov    QWORD PTR [r15+0x38],rbx
  42e129:	mov    DWORD PTR [r15+0x10],r12d
  42e12d:	mov    DWORD PTR [r15+0x28],0x0
  42e135:	mov    DWORD PTR [r15+0x14],0x0
  42e13d:	mov    QWORD PTR [r15+0x1a],0xffffffffffffffff
  42e145:	mov    DWORD PTR [r15+0x22],0xffffffff
  42e14d:	mov    r12,QWORD PTR [r14+0x38]
  42e151:	mov    r13d,DWORD PTR [r14+0x14]
  42e155:	mov    rcx,QWORD PTR [rbx+0x30]
  42e159:	mov    edx,DWORD PTR [rbx+0x10]
  42e15c:	add    edx,ecx
  42e15e:	mov    rsi,QWORD PTR [rbx+0x38]
  42e162:	mov    eax,DWORD PTR [rbx+0x14]
  42e165:	lea    edi,[rsi+rax*1]
  42e168:	sub    edx,edi
  42e16a:	cmp    r13d,edx
  42e16d:	jbe    42e18d <strcmp@plt+0x2a9f5>
  42e16f:	sub    esi,ecx
  42e171:	cmp    r13d,0x40
  42e175:	mov    edx,0x40
  42e17a:	cmova  edx,r13d
  42e17e:	mov    rdi,rbx
  42e181:	call   42de70 <strcmp@plt+0x2a6d8>
  42e186:	mov    rsi,QWORD PTR [rbx+0x38]
  42e18a:	mov    eax,DWORD PTR [rbx+0x14]
  42e18d:	mov    rdi,rax
  42e190:	add    rdi,rsi
  42e193:	add    eax,r13d
  42e196:	mov    DWORD PTR [rbx+0x14],eax
  42e199:	mov    rsi,r12
  42e19c:	mov    rdx,r13
  42e19f:	call   403330 <memcpy@plt>
  42e1a4:	movzx  eax,WORD PTR [r14+0x24]
  42e1a9:	mov    WORD PTR [r15+0x24],ax
  42e1ae:	mov    rax,r15
  42e1b1:	pop    rbx
  42e1b2:	pop    r12
  42e1b4:	pop    r13
  42e1b6:	pop    r14
  42e1b8:	pop    r15
  42e1ba:	ret    
  42e1bb:	nop    DWORD PTR [rax+rax*1+0x0]
  42e1c0:	push   rbx
  42e1c1:	movzx  eax,WORD PTR [rdi+0x18]
  42e1c5:	cmp    rax,0xffff
  42e1cb:	je     42e1e7 <strcmp@plt+0x2aa4f>
  42e1cd:	mov    ecx,DWORD PTR [rdi+0x38]
  42e1d0:	add    ecx,DWORD PTR [rdi+0x14]
  42e1d3:	add    rax,QWORD PTR [rdi+0x30]
  42e1d7:	sub    ecx,eax
  42e1d9:	mov    DWORD PTR [rdi+0x14],ecx
  42e1dc:	mov    QWORD PTR [rdi+0x38],rax
  42e1e0:	mov    ebx,0x1
  42e1e5:	jmp    42e20a <strcmp@plt+0x2aa72>
  42e1e7:	lea    rax,[rip+0x36bd2]        # 464dc0 <strcmp@plt+0x61628>
  42e1ee:	xor    ebx,ebx
  42e1f0:	cmp    DWORD PTR [rax],0x2
  42e1f3:	jl     42e20a <strcmp@plt+0x2aa72>
  42e1f5:	lea    rsi,[rip+0x1d5e2]        # 44b7de <strcmp@plt+0x48046>
  42e1fc:	xor    ebx,ebx
  42e1fe:	mov    edi,0x6
  42e203:	xor    eax,eax
  42e205:	call   42e520 <strcmp@plt+0x2ad88>
  42e20a:	mov    eax,ebx
  42e20c:	pop    rbx
  42e20d:	ret    
  42e20e:	xchg   ax,ax
  42e210:	push   rbx
  42e211:	movzx  eax,WORD PTR [rdi+0x1a]
  42e215:	cmp    rax,0xffff
  42e21b:	je     42e237 <strcmp@plt+0x2aa9f>
  42e21d:	mov    ecx,DWORD PTR [rdi+0x38]
  42e220:	add    ecx,DWORD PTR [rdi+0x14]
  42e223:	add    rax,QWORD PTR [rdi+0x30]
  42e227:	sub    ecx,eax
  42e229:	mov    DWORD PTR [rdi+0x14],ecx
  42e22c:	mov    QWORD PTR [rdi+0x38],rax
  42e230:	mov    ebx,0x1
  42e235:	jmp    42e25a <strcmp@plt+0x2aac2>
  42e237:	lea    rax,[rip+0x36b82]        # 464dc0 <strcmp@plt+0x61628>
  42e23e:	xor    ebx,ebx
  42e240:	cmp    DWORD PTR [rax],0x2
  42e243:	jl     42e25a <strcmp@plt+0x2aac2>
  42e245:	lea    rsi,[rip+0x1d5cc]        # 44b818 <strcmp@plt+0x48080>
  42e24c:	xor    ebx,ebx
  42e24e:	mov    edi,0x6
  42e253:	xor    eax,eax
  42e255:	call   42e520 <strcmp@plt+0x2ad88>
  42e25a:	mov    eax,ebx
  42e25c:	pop    rbx
  42e25d:	ret    
  42e25e:	xchg   ax,ax
  42e260:	push   rbx
  42e261:	movzx  eax,WORD PTR [rdi+0x1c]
  42e265:	cmp    rax,0xffff
  42e26b:	je     42e287 <strcmp@plt+0x2aaef>
  42e26d:	mov    ecx,DWORD PTR [rdi+0x38]
  42e270:	add    ecx,DWORD PTR [rdi+0x14]
  42e273:	add    rax,QWORD PTR [rdi+0x30]
  42e277:	sub    ecx,eax
  42e279:	mov    DWORD PTR [rdi+0x14],ecx
  42e27c:	mov    QWORD PTR [rdi+0x38],rax
  42e280:	mov    ebx,0x1
  42e285:	jmp    42e2aa <strcmp@plt+0x2ab12>
  42e287:	lea    rax,[rip+0x36b32]        # 464dc0 <strcmp@plt+0x61628>
  42e28e:	xor    ebx,ebx
  42e290:	cmp    DWORD PTR [rax],0x2
  42e293:	jl     42e2aa <strcmp@plt+0x2ab12>
  42e295:	lea    rsi,[rip+0x1d5af]        # 44b84b <strcmp@plt+0x480b3>
  42e29c:	xor    ebx,ebx
  42e29e:	mov    edi,0x6
  42e2a3:	xor    eax,eax
  42e2a5:	call   42e520 <strcmp@plt+0x2ad88>
  42e2aa:	mov    eax,ebx
  42e2ac:	pop    rbx
  42e2ad:	ret    
  42e2ae:	xchg   ax,ax
  42e2b0:	push   rbx
  42e2b1:	movzx  eax,WORD PTR [rdi+0x1e]
  42e2b5:	cmp    rax,0xffff
  42e2bb:	je     42e2d7 <strcmp@plt+0x2ab3f>
  42e2bd:	mov    ecx,DWORD PTR [rdi+0x38]
  42e2c0:	add    ecx,DWORD PTR [rdi+0x14]
  42e2c3:	add    rax,QWORD PTR [rdi+0x30]
  42e2c7:	sub    ecx,eax
  42e2c9:	mov    DWORD PTR [rdi+0x14],ecx
  42e2cc:	mov    QWORD PTR [rdi+0x38],rax
  42e2d0:	mov    ebx,0x1
  42e2d5:	jmp    42e2fa <strcmp@plt+0x2ab62>
  42e2d7:	lea    rax,[rip+0x36ae2]        # 464dc0 <strcmp@plt+0x61628>
  42e2de:	xor    ebx,ebx
  42e2e0:	cmp    DWORD PTR [rax],0x2
  42e2e3:	jl     42e2fa <strcmp@plt+0x2ab62>
  42e2e5:	lea    rsi,[rip+0x1d594]        # 44b880 <strcmp@plt+0x480e8>
  42e2ec:	xor    ebx,ebx
  42e2ee:	mov    edi,0x6
  42e2f3:	xor    eax,eax
  42e2f5:	call   42e520 <strcmp@plt+0x2ad88>
  42e2fa:	mov    eax,ebx
  42e2fc:	pop    rbx
  42e2fd:	ret    
  42e2fe:	xchg   ax,ax
  42e300:	push   rbx
  42e301:	movzx  eax,WORD PTR [rdi+0x20]
  42e305:	cmp    rax,0xffff
  42e30b:	je     42e327 <strcmp@plt+0x2ab8f>
  42e30d:	mov    ecx,DWORD PTR [rdi+0x38]
  42e310:	add    ecx,DWORD PTR [rdi+0x14]
  42e313:	add    rax,QWORD PTR [rdi+0x30]
  42e317:	sub    ecx,eax
  42e319:	mov    DWORD PTR [rdi+0x14],ecx
  42e31c:	mov    QWORD PTR [rdi+0x38],rax
  42e320:	mov    ebx,0x1
  42e325:	jmp    42e34a <strcmp@plt+0x2abb2>
  42e327:	lea    rax,[rip+0x36a92]        # 464dc0 <strcmp@plt+0x61628>
  42e32e:	xor    ebx,ebx
  42e330:	cmp    DWORD PTR [rax],0x2
  42e333:	jl     42e34a <strcmp@plt+0x2abb2>
  42e335:	lea    rsi,[rip+0x1d585]        # 44b8c1 <strcmp@plt+0x48129>
  42e33c:	xor    ebx,ebx
  42e33e:	mov    edi,0x6
  42e343:	xor    eax,eax
  42e345:	call   42e520 <strcmp@plt+0x2ad88>
  42e34a:	mov    eax,ebx
  42e34c:	pop    rbx
  42e34d:	ret    
  42e34e:	xchg   ax,ax
  42e350:	push   rbx
  42e351:	movzx  eax,WORD PTR [rdi+0x22]
  42e355:	cmp    rax,0xffff
  42e35b:	je     42e377 <strcmp@plt+0x2abdf>
  42e35d:	mov    ecx,DWORD PTR [rdi+0x38]
  42e360:	add    ecx,DWORD PTR [rdi+0x14]
  42e363:	add    rax,QWORD PTR [rdi+0x30]
  42e367:	sub    ecx,eax
  42e369:	mov    DWORD PTR [rdi+0x14],ecx
  42e36c:	mov    QWORD PTR [rdi+0x38],rax
  42e370:	mov    ebx,0x1
  42e375:	jmp    42e39a <strcmp@plt+0x2ac02>
  42e377:	lea    rax,[rip+0x36a42]        # 464dc0 <strcmp@plt+0x61628>
  42e37e:	xor    ebx,ebx
  42e380:	cmp    DWORD PTR [rax],0x2
  42e383:	jl     42e39a <strcmp@plt+0x2ac02>
  42e385:	lea    rsi,[rip+0x1d56e]        # 44b8fa <strcmp@plt+0x48162>
  42e38c:	xor    ebx,ebx
  42e38e:	mov    edi,0x6
  42e393:	xor    eax,eax
  42e395:	call   42e520 <strcmp@plt+0x2ad88>
  42e39a:	mov    eax,ebx
  42e39c:	pop    rbx
  42e39d:	ret    
  42e39e:	xchg   ax,ax
  42e3a0:	push   rbx
  42e3a1:	movzx  eax,WORD PTR [rdi+0x24]
  42e3a5:	cmp    rax,0xffff
  42e3ab:	je     42e3c7 <strcmp@plt+0x2ac2f>
  42e3ad:	mov    ecx,DWORD PTR [rdi+0x38]
  42e3b0:	add    ecx,DWORD PTR [rdi+0x14]
  42e3b3:	add    rax,QWORD PTR [rdi+0x30]
  42e3b7:	sub    ecx,eax
  42e3b9:	mov    DWORD PTR [rdi+0x14],ecx
  42e3bc:	mov    QWORD PTR [rdi+0x38],rax
  42e3c0:	mov    ebx,0x1
  42e3c5:	jmp    42e3ea <strcmp@plt+0x2ac52>
  42e3c7:	lea    rax,[rip+0x369f2]        # 464dc0 <strcmp@plt+0x61628>
  42e3ce:	xor    ebx,ebx
  42e3d0:	cmp    DWORD PTR [rax],0x2
  42e3d3:	jl     42e3ea <strcmp@plt+0x2ac52>
  42e3d5:	lea    rsi,[rip+0x1d558]        # 44b934 <strcmp@plt+0x4819c>
  42e3dc:	xor    ebx,ebx
  42e3de:	mov    edi,0x6
  42e3e3:	xor    eax,eax
  42e3e5:	call   42e520 <strcmp@plt+0x2ad88>
  42e3ea:	mov    eax,ebx
  42e3ec:	pop    rbx
  42e3ed:	ret    
  42e3ee:	xchg   ax,ax
  42e3f0:	push   rbp
  42e3f1:	push   r15
  42e3f3:	push   r14
  42e3f5:	push   r13
  42e3f7:	push   r12
  42e3f9:	push   rbx
  42e3fa:	push   rax
  42e3fb:	mov    DWORD PTR [rsp+0x4],r9d
  42e400:	mov    r15d,r8d
  42e403:	mov    r12,rcx
  42e406:	mov    r13d,edx
  42e409:	mov    r14d,esi
  42e40c:	mov    rbp,rdi
  42e40f:	mov    edi,0x28
  42e414:	call   431d60 <strcmp@plt+0x2e5c8>
  42e419:	mov    rbx,rax
  42e41c:	test   r14d,r14d
  42e41f:	je     42e433 <strcmp@plt+0x2ac9b>
  42e421:	mov    edi,r14d
  42e424:	mov    rsi,rbp
  42e427:	mov    edx,0x20
  42e42c:	call   427820 <strcmp@plt+0x24088>
  42e431:	jmp    42e43b <strcmp@plt+0x2aca3>
  42e433:	mov    rdi,rbp
  42e436:	call   423440 <strcmp@plt+0x1fca8>
  42e43b:	mov    QWORD PTR [rbx],rax
  42e43e:	mov    DWORD PTR [rbx+0xc],r13d
  42e442:	mov    rdi,r12
  42e445:	call   403710 <strdup@plt>
  42e44a:	mov    QWORD PTR [rbx+0x10],rax
  42e44e:	mov    BYTE PTR [rbx+0x9],r15b
  42e452:	mov    eax,DWORD PTR [rsp+0x4]
  42e456:	mov    BYTE PTR [rbx+0x8],al
  42e459:	mov    al,BYTE PTR [rsp+0x40]
  42e45d:	mov    BYTE PTR [rbx+0x18],al
  42e460:	mov    BYTE PTR [rbx+0x19],0x1
  42e464:	lea    rdi,[rip+0xffffffffffff4825]        # 422c90 <strcmp@plt+0x1f4f8>
  42e46b:	call   42b9b0 <strcmp@plt+0x28218>
  42e470:	mov    QWORD PTR [rbx+0x20],rax
  42e474:	mov    rax,rbx
  42e477:	add    rsp,0x8
  42e47b:	pop    rbx
  42e47c:	pop    r12
  42e47e:	pop    r13
  42e480:	pop    r14
  42e482:	pop    r15
  42e484:	pop    rbp
  42e485:	ret    
  42e486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e490:	push   rbx
  42e491:	mov    rbx,rdi
  42e494:	mov    rdi,rsi
  42e497:	call   423440 <strcmp@plt+0x1fca8>
  42e49c:	mov    rsi,QWORD PTR [rbx+0x20]
  42e4a0:	mov    rdi,rax
  42e4a3:	pop    rbx
  42e4a4:	jmp    42baa0 <strcmp@plt+0x28308>
  42e4a9:	nop    DWORD PTR [rax+0x0]
  42e4b0:	test   rdi,rdi
  42e4b3:	je     42e4e1 <strcmp@plt+0x2ad49>
  42e4b5:	push   rbx
  42e4b6:	mov    rbx,rdi
  42e4b9:	mov    rdi,QWORD PTR [rdi]
  42e4bc:	call   422c90 <strcmp@plt+0x1f4f8>
  42e4c1:	mov    rdi,QWORD PTR [rbx+0x10]
  42e4c5:	test   rdi,rdi
  42e4c8:	je     42e4cf <strcmp@plt+0x2ad37>
  42e4ca:	call   403790 <free@plt>
  42e4cf:	mov    rdi,QWORD PTR [rbx+0x20]
  42e4d3:	call   42bff0 <strcmp@plt+0x28858>
  42e4d8:	mov    rdi,rbx
  42e4db:	pop    rbx
  42e4dc:	jmp    403790 <free@plt>
  42e4e1:	ret    
  42e4e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e4ec:	nop    DWORD PTR [rax+0x0]
  42e4f0:	push   rbx
  42e4f1:	mov    rbx,rdi
  42e4f4:	lea    rax,[rip+0x420b5]        # 4705b0 <strcmp@plt+0x6ce18>
  42e4fb:	mov    rsi,QWORD PTR [rax]
  42e4fe:	lea    rax,[rip+0x420b3]        # 4705b8 <strcmp@plt+0x6ce20>
  42e505:	mov    rdx,QWORD PTR [rax]
  42e508:	call   437270 <strcmp@plt+0x33ad8>
  42e50d:	mov    rdi,QWORD PTR [rbx]
  42e510:	call   428bd0 <strcmp@plt+0x25438>
  42e515:	mov    rdi,rbx
  42e518:	pop    rbx
  42e519:	jmp    403790 <free@plt>
  42e51e:	xchg   ax,ax
  42e520:	sub    rsp,0xd8
  42e527:	mov    r10,rsi
  42e52a:	test   al,al
  42e52c:	je     42e56d <strcmp@plt+0x2add5>
  42e52e:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  42e534:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  42e53a:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  42e540:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  42e549:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  42e552:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  42e55b:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  42e564:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  42e56d:	mov    QWORD PTR [rsp+0x30],rdx
  42e572:	mov    QWORD PTR [rsp+0x38],rcx
  42e577:	mov    QWORD PTR [rsp+0x40],r8
  42e57c:	mov    QWORD PTR [rsp+0x48],r9
  42e581:	lea    rax,[rsp+0x20]
  42e586:	mov    QWORD PTR [rsp+0x10],rax
  42e58b:	lea    rax,[rsp+0xe0]
  42e593:	mov    QWORD PTR [rsp+0x8],rax
  42e598:	movabs rax,0x3000000010
  42e5a2:	mov    QWORD PTR [rsp],rax
  42e5a6:	dec    edi
  42e5a8:	cmp    edi,0x6
  42e5ab:	ja     42e5d1 <strcmp@plt+0x2ae39>
  42e5ad:	lea    rax,[rip+0x1d3b8]        # 44b96c <strcmp@plt+0x481d4>
  42e5b4:	movsxd rcx,DWORD PTR [rax+rdi*4]
  42e5b8:	add    rcx,rax
  42e5bb:	jmp    rcx
  42e5bd:	lea    rsi,[rip+0x1d3c4]        # 44b988 <strcmp@plt+0x481f0>
  42e5c4:	mov    rcx,rsp
  42e5c7:	mov    edi,0x2
  42e5cc:	jmp    42e652 <strcmp@plt+0x2aeba>
  42e5d1:	lea    rsi,[rip+0x1d3dc]        # 44b9b4 <strcmp@plt+0x4821c>
  42e5d8:	jmp    42e603 <strcmp@plt+0x2ae6b>
  42e5da:	lea    rsi,[rip+0x1d3ac]        # 44b98d <strcmp@plt+0x481f5>
  42e5e1:	mov    rcx,rsp
  42e5e4:	mov    edi,0x3
  42e5e9:	jmp    42e652 <strcmp@plt+0x2aeba>
  42e5eb:	lea    rsi,[rip+0x1d39f]        # 44b991 <strcmp@plt+0x481f9>
  42e5f2:	mov    rcx,rsp
  42e5f5:	mov    edi,0x4
  42e5fa:	jmp    42e652 <strcmp@plt+0x2aeba>
  42e5fc:	lea    rsi,[rip+0x1d396]        # 44b999 <strcmp@plt+0x48201>
  42e603:	mov    rcx,rsp
  42e606:	mov    edi,0x6
  42e60b:	jmp    42e652 <strcmp@plt+0x2aeba>
  42e60d:	lea    rax,[rip+0x367ac]        # 464dc0 <strcmp@plt+0x61628>
  42e614:	cmp    DWORD PTR [rax],0x0
  42e617:	jle    42e65a <strcmp@plt+0x2aec2>
  42e619:	lea    rsi,[rip+0x1d37e]        # 44b99e <strcmp@plt+0x48206>
  42e620:	jmp    42e64a <strcmp@plt+0x2aeb2>
  42e622:	lea    rax,[rip+0x36797]        # 464dc0 <strcmp@plt+0x61628>
  42e629:	cmp    DWORD PTR [rax],0x2
  42e62c:	jl     42e65a <strcmp@plt+0x2aec2>
  42e62e:	lea    rsi,[rip+0x1d36f]        # 44b9a4 <strcmp@plt+0x4820c>
  42e635:	jmp    42e64a <strcmp@plt+0x2aeb2>
  42e637:	lea    rax,[rip+0x36782]        # 464dc0 <strcmp@plt+0x61628>
  42e63e:	cmp    DWORD PTR [rax],0x3
  42e641:	jl     42e65a <strcmp@plt+0x2aec2>
  42e643:	lea    rsi,[rip+0x1d362]        # 44b9ac <strcmp@plt+0x48214>
  42e64a:	mov    rcx,rsp
  42e64d:	mov    edi,0x7
  42e652:	mov    rdx,r10
  42e655:	call   42e670 <strcmp@plt+0x2aed8>
  42e65a:	add    rsp,0xd8
  42e661:	ret    
  42e662:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e66c:	nop    DWORD PTR [rax+0x0]
  42e670:	push   rbp
  42e671:	push   r15
  42e673:	push   r14
  42e675:	push   r13
  42e677:	push   r12
  42e679:	push   rbx
  42e67a:	push   rax
  42e67b:	mov    rbp,rcx
  42e67e:	mov    r15,rdx
  42e681:	mov    r12,rsi
  42e684:	mov    r13d,edi
  42e687:	xor    edi,edi
  42e689:	call   403370 <time@plt>
  42e68e:	mov    QWORD PTR [rsp],rax
  42e692:	mov    rdi,rsp
  42e695:	call   403300 <localtime@plt>
  42e69a:	mov    r10d,DWORD PTR [rax]
  42e69d:	mov    ebx,DWORD PTR [rax+0x4]
  42e6a0:	mov    r9d,DWORD PTR [rax+0x8]
  42e6a4:	mov    r8d,DWORD PTR [rax+0xc]
  42e6a8:	mov    ecx,DWORD PTR [rax+0x10]
  42e6ab:	mov    edx,DWORD PTR [rax+0x14]
  42e6ae:	lea    rax,[rip+0x41e5f]        # 470514 <strcmp@plt+0x6cd7c>
  42e6b5:	cmp    DWORD PTR [rax],0x0
  42e6b8:	je     42e718 <strcmp@plt+0x2af80>
  42e6ba:	lea    r14,[rip+0x405e7]        # 46eca8 <strcmp@plt+0x6b510>
  42e6c1:	mov    rdi,QWORD PTR [r14]
  42e6c4:	test   rdi,rdi
  42e6c7:	je     42e767 <strcmp@plt+0x2afcf>
  42e6cd:	add    edx,0x76c
  42e6d3:	inc    ecx
  42e6d5:	sub    rsp,0x8
  42e6d9:	lea    rsi,[rip+0x1d2d8]        # 44b9b8 <strcmp@plt+0x48220>
  42e6e0:	mov    eax,0x0
  42e6e5:	push   r12
  42e6e7:	push   r10
  42e6e9:	push   rbx
  42e6ea:	call   4035a0 <fprintf@plt>
  42e6ef:	add    rsp,0x20
  42e6f3:	mov    rdi,QWORD PTR [r14]
  42e6f6:	mov    rsi,r15
  42e6f9:	mov    rdx,rbp
  42e6fc:	call   403530 <vfprintf@plt>
  42e701:	mov    rsi,QWORD PTR [r14]
  42e704:	mov    edi,0xa
  42e709:	call   4034d0 <fputc@plt>
  42e70e:	mov    rdi,QWORD PTR [r14]
  42e711:	call   403470 <fflush@plt>
  42e716:	jmp    42e775 <strcmp@plt+0x2afdd>
  42e718:	add    edx,0x76c
  42e71e:	inc    ecx
  42e720:	lea    rdi,[rip+0x1d291]        # 44b9b8 <strcmp@plt+0x48220>
  42e727:	mov    esi,edx
  42e729:	mov    edx,ecx
  42e72b:	mov    ecx,r8d
  42e72e:	mov    r8d,r9d
  42e731:	mov    r9d,ebx
  42e734:	mov    eax,0x0
  42e739:	push   r12
  42e73b:	push   r10
  42e73d:	call   403050 <printf@plt>
  42e742:	add    rsp,0x10
  42e746:	mov    rax,QWORD PTR [rip+0x3582b]        # 463f78 <strcmp@plt+0x607e0>
  42e74d:	mov    rdi,QWORD PTR [rax]
  42e750:	mov    rsi,r15
  42e753:	mov    rdx,rbp
  42e756:	call   403530 <vfprintf@plt>
  42e75b:	mov    edi,0xa
  42e760:	call   403570 <putchar@plt>
  42e765:	jmp    42e775 <strcmp@plt+0x2afdd>
  42e767:	mov    edi,r13d
  42e76a:	mov    rsi,r15
  42e76d:	mov    rdx,rbp
  42e770:	call   4036d0 <vsyslog@plt>
  42e775:	add    rsp,0x8
  42e779:	pop    rbx
  42e77a:	pop    r12
  42e77c:	pop    r13
  42e77e:	pop    r14
  42e780:	pop    r15
  42e782:	pop    rbp
  42e783:	ret    
  42e784:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e78e:	xchg   ax,ax
  42e790:	push   rbx
  42e791:	test   rdi,rdi
  42e794:	je     42e7be <strcmp@plt+0x2b026>
  42e796:	mov    rbx,rdi
  42e799:	mov    rax,QWORD PTR [rip+0x35808]        # 463fa8 <strcmp@plt+0x60810>
  42e7a0:	mov    rdx,QWORD PTR [rax]
  42e7a3:	lea    rsi,[rip+0x13b51]        # 4422fb <strcmp@plt+0x3eb63>
  42e7aa:	call   403420 <freopen@plt>
  42e7af:	lea    rcx,[rip+0x404f2]        # 46eca8 <strcmp@plt+0x6b510>
  42e7b6:	mov    QWORD PTR [rcx],rax
  42e7b9:	test   rax,rax
  42e7bc:	je     42e7c0 <strcmp@plt+0x2b028>
  42e7be:	pop    rbx
  42e7bf:	ret    
  42e7c0:	call   403040 <__errno_location@plt>
  42e7c5:	mov    edi,DWORD PTR [rax]
  42e7c7:	call   403170 <strerror@plt>
  42e7cc:	lea    rsi,[rip+0x1d1fe]        # 44b9d1 <strcmp@plt+0x48239>
  42e7d3:	mov    edi,0x2
  42e7d8:	mov    rdx,rbx
  42e7db:	mov    rcx,rax
  42e7de:	xor    eax,eax
  42e7e0:	pop    rbx
  42e7e1:	jmp    42e520 <strcmp@plt+0x2ad88>
  42e7e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e7f0:	lea    rax,[rip+0x404b1]        # 46eca8 <strcmp@plt+0x6b510>
  42e7f7:	mov    rdi,QWORD PTR [rax]
  42e7fa:	test   rdi,rdi
  42e7fd:	je     42e804 <strcmp@plt+0x2b06c>
  42e7ff:	jmp    4033e0 <fclose@plt>
  42e804:	ret    
  42e805:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42e80f:	nop
  42e810:	push   r14
  42e812:	push   rbx
  42e813:	push   rax
  42e814:	mov    rbx,rsi
  42e817:	mov    r14,rdi
  42e81a:	mov    rdi,rsi
  42e81d:	call   4267b0 <strcmp@plt+0x23018>
  42e822:	cmp    eax,0x9
  42e825:	je     42e83b <strcmp@plt+0x2b0a3>
  42e827:	cmp    eax,0x2
  42e82a:	jne    42e851 <strcmp@plt+0x2b0b9>
  42e82c:	mov    rdi,r14
  42e82f:	mov    rsi,rbx
  42e832:	add    rsp,0x8
  42e836:	pop    rbx
  42e837:	pop    r14
  42e839:	jmp    42e8b0 <strcmp@plt+0x2b118>
  42e83b:	mov    rdi,rbx
  42e83e:	call   427070 <strcmp@plt+0x238d8>
  42e843:	cmp    al,0xa
  42e845:	je     42e87b <strcmp@plt+0x2b0e3>
  42e847:	cmp    al,0x2
  42e849:	jne    42e881 <strcmp@plt+0x2b0e9>
  42e84b:	mov    rbx,QWORD PTR [r14+0x20]
  42e84f:	jmp    42e8a5 <strcmp@plt+0x2b10d>
  42e851:	lea    rax,[rip+0x36568]        # 464dc0 <strcmp@plt+0x61628>
  42e858:	cmp    DWORD PTR [rax],0x3
  42e85b:	jge    42e861 <strcmp@plt+0x2b0c9>
  42e85d:	xor    ebx,ebx
  42e85f:	jmp    42e8a5 <strcmp@plt+0x2b10d>
  42e861:	mov    rdi,rbx
  42e864:	call   4267b0 <strcmp@plt+0x23018>
  42e869:	lea    rsi,[rip+0x1d192]        # 44ba02 <strcmp@plt+0x4826a>
  42e870:	xor    ebx,ebx
  42e872:	mov    edi,0x7
  42e877:	mov    edx,eax
  42e879:	jmp    42e89e <strcmp@plt+0x2b106>
  42e87b:	mov    rbx,QWORD PTR [r14+0x28]
  42e87f:	jmp    42e8a5 <strcmp@plt+0x2b10d>
  42e881:	lea    rcx,[rip+0x36538]        # 464dc0 <strcmp@plt+0x61628>
  42e888:	cmp    DWORD PTR [rcx],0x0
  42e88b:	jle    42e85d <strcmp@plt+0x2b0c5>
  42e88d:	movzx  edx,al
  42e890:	lea    rsi,[rip+0x1d7b1]        # 44c048 <strcmp@plt+0x488b0>
  42e897:	xor    ebx,ebx
  42e899:	mov    edi,0x5
  42e89e:	xor    eax,eax
  42e8a0:	call   42e520 <strcmp@plt+0x2ad88>
  42e8a5:	mov    rax,rbx
  42e8a8:	add    rsp,0x8
  42e8ac:	pop    rbx
  42e8ad:	pop    r14
  42e8af:	ret    
  42e8b0:	push   rbp
  42e8b1:	push   r14
  42e8b3:	push   rbx
  42e8b4:	mov    rbp,rsi
  42e8b7:	mov    rbx,rdi
  42e8ba:	mov    rdi,rsi
  42e8bd:	call   4268c0 <strcmp@plt+0x23128>
  42e8c2:	mov    rdi,rax
  42e8c5:	call   4276b0 <strcmp@plt+0x23f18>
  42e8ca:	mov    r14d,eax
  42e8cd:	mov    rdi,rbp
  42e8d0:	call   4268c0 <strcmp@plt+0x23128>
  42e8d5:	mov    rdi,rax
  42e8d8:	call   427650 <strcmp@plt+0x23eb8>
  42e8dd:	cmp    DWORD PTR [rax+0x18],0x3
  42e8e1:	jne    42e906 <strcmp@plt+0x2b16e>
  42e8e3:	lea    rax,[rip+0x364d6]        # 464dc0 <strcmp@plt+0x61628>
  42e8ea:	cmp    DWORD PTR [rax],0x0
  42e8ed:	jle    42e963 <strcmp@plt+0x2b1cb>
  42e8ef:	lea    rsi,[rip+0x1d6e9]        # 44bfdf <strcmp@plt+0x48847>
  42e8f6:	xor    ebx,ebx
  42e8f8:	mov    edi,0x5
  42e8fd:	xor    eax,eax
  42e8ff:	call   42e520 <strcmp@plt+0x2ad88>
  42e904:	jmp    42e965 <strcmp@plt+0x2b1cd>
  42e906:	mov    rdi,rax
  42e909:	call   422ef0 <strcmp@plt+0x1f758>
  42e90e:	cmp    ax,0xa
  42e912:	je     42e920 <strcmp@plt+0x2b188>
  42e914:	cmp    ax,0x2
  42e918:	jne    42e93d <strcmp@plt+0x2b1a5>
  42e91a:	add    rbx,0x10
  42e91e:	jmp    42e924 <strcmp@plt+0x2b18c>
  42e920:	add    rbx,0x18
  42e924:	mov    rdi,QWORD PTR [rbx]
  42e927:	mov    esi,r14d
  42e92a:	call   42d130 <strcmp@plt+0x29998>
  42e92f:	test   rax,rax
  42e932:	je     42e963 <strcmp@plt+0x2b1cb>
  42e934:	mov    rax,QWORD PTR [rax]
  42e937:	mov    rbx,QWORD PTR [rax+0x28]
  42e93b:	jmp    42e965 <strcmp@plt+0x2b1cd>
  42e93d:	lea    rcx,[rip+0x3647c]        # 464dc0 <strcmp@plt+0x61628>
  42e944:	cmp    DWORD PTR [rcx],0x0
  42e947:	jle    42e963 <strcmp@plt+0x2b1cb>
  42e949:	movzx  edx,ax
  42e94c:	lea    rsi,[rip+0x1d6c8]        # 44c01b <strcmp@plt+0x48883>
  42e953:	xor    ebx,ebx
  42e955:	mov    edi,0x5
  42e95a:	xor    eax,eax
  42e95c:	call   42e520 <strcmp@plt+0x2ad88>
  42e961:	jmp    42e965 <strcmp@plt+0x2b1cd>
  42e963:	xor    ebx,ebx
  42e965:	mov    rax,rbx
  42e968:	pop    rbx
  42e969:	pop    r14
  42e96b:	pop    rbp
  42e96c:	ret    
  42e96d:	nop    DWORD PTR [rax]
  42e970:	push   rbx
  42e971:	mov    rbx,rdi
  42e974:	mov    edx,DWORD PTR [rsi+0x18]
  42e977:	lea    eax,[rdx-0x1]
  42e97a:	cmp    eax,0x2
  42e97d:	jae    42e998 <strcmp@plt+0x2b200>
  42e97f:	mov    rdi,rsi
  42e982:	call   422ef0 <strcmp@plt+0x1f758>
  42e987:	cmp    ax,0xa
  42e98b:	je     42e9c2 <strcmp@plt+0x2b22a>
  42e98d:	cmp    ax,0x2
  42e991:	jne    42e9cf <strcmp@plt+0x2b237>
  42e993:	mov    rax,QWORD PTR [rbx]
  42e996:	jmp    42e9c6 <strcmp@plt+0x2b22e>
  42e998:	cmp    edx,0x3
  42e99b:	jne    42e9a6 <strcmp@plt+0x2b20e>
  42e99d:	mov    rdi,rbx
  42e9a0:	pop    rbx
  42e9a1:	jmp    42e810 <strcmp@plt+0x2b078>
  42e9a6:	lea    rax,[rip+0x36413]        # 464dc0 <strcmp@plt+0x61628>
  42e9ad:	cmp    DWORD PTR [rax],0x3
  42e9b0:	jl     42e9f5 <strcmp@plt+0x2b25d>
  42e9b2:	lea    rsi,[rip+0x1d082]        # 44ba3b <strcmp@plt+0x482a3>
  42e9b9:	xor    ebx,ebx
  42e9bb:	mov    edi,0x7
  42e9c0:	jmp    42e9ec <strcmp@plt+0x2b254>
  42e9c2:	mov    rax,QWORD PTR [rbx+0x8]
  42e9c6:	mov    rax,QWORD PTR [rax]
  42e9c9:	mov    rbx,QWORD PTR [rax+0x28]
  42e9cd:	jmp    42e9f7 <strcmp@plt+0x2b25f>
  42e9cf:	lea    rcx,[rip+0x363ea]        # 464dc0 <strcmp@plt+0x61628>
  42e9d6:	cmp    DWORD PTR [rcx],0x0
  42e9d9:	jle    42e9f5 <strcmp@plt+0x2b25d>
  42e9db:	movzx  edx,ax
  42e9de:	lea    rsi,[rip+0x1d690]        # 44c075 <strcmp@plt+0x488dd>
  42e9e5:	xor    ebx,ebx
  42e9e7:	mov    edi,0x5
  42e9ec:	xor    eax,eax
  42e9ee:	call   42e520 <strcmp@plt+0x2ad88>
  42e9f3:	jmp    42e9f7 <strcmp@plt+0x2b25f>
  42e9f5:	xor    ebx,ebx
  42e9f7:	mov    rax,rbx
  42e9fa:	pop    rbx
  42e9fb:	ret    
  42e9fc:	nop    DWORD PTR [rax+0x0]
  42ea00:	push   r15
  42ea02:	push   r14
  42ea04:	push   r12
  42ea06:	push   rbx
  42ea07:	sub    rsp,0x38
  42ea0b:	mov    edi,0x38
  42ea10:	call   431d60 <strcmp@plt+0x2e5c8>
  42ea15:	mov    rbx,rax
  42ea18:	lea    rax,[rip+0x363a1]        # 464dc0 <strcmp@plt+0x61628>
  42ea1f:	cmp    DWORD PTR [rax],0x3
  42ea22:	jl     42ea37 <strcmp@plt+0x2b29f>
  42ea24:	lea    rsi,[rip+0x1d042]        # 44ba6d <strcmp@plt+0x482d5>
  42ea2b:	mov    edi,0x7
  42ea30:	xor    eax,eax
  42ea32:	call   42e520 <strcmp@plt+0x2ad88>
  42ea37:	mov    edi,0x20
  42ea3c:	call   41d870 <strcmp@plt+0x1a0d8>
  42ea41:	mov    QWORD PTR [rbx],rax
  42ea44:	mov    edi,0x80
  42ea49:	call   41d870 <strcmp@plt+0x1a0d8>
  42ea4e:	mov    QWORD PTR [rbx+0x8],rax
  42ea52:	xor    eax,eax
  42ea54:	call   42ce60 <strcmp@plt+0x296c8>
  42ea59:	mov    QWORD PTR [rbx+0x10],rax
  42ea5d:	xor    eax,eax
  42ea5f:	call   42ce60 <strcmp@plt+0x296c8>
  42ea64:	mov    QWORD PTR [rbx+0x18],rax
  42ea68:	vxorps xmm0,xmm0,xmm0
  42ea6c:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  42ea72:	mov    DWORD PTR [rsp+0x30],0x0
  42ea7a:	lea    r14,[rsp+0x20]
  42ea7f:	mov    rdi,r14
  42ea82:	mov    esi,0x2
  42ea87:	call   423bb0 <strcmp@plt+0x20418>
  42ea8c:	vxorps xmm0,xmm0,xmm0
  42ea90:	vmovaps XMMWORD PTR [rsp],xmm0
  42ea95:	mov    DWORD PTR [rsp+0x10],0x0
  42ea9d:	mov    r15,rsp
  42eaa0:	mov    rdi,r15
  42eaa3:	mov    esi,0xa
  42eaa8:	call   423bb0 <strcmp@plt+0x20418>
  42eaad:	mov    r12,QWORD PTR [rbx]
  42eab0:	mov    edi,0x20
  42eab5:	call   41d870 <strcmp@plt+0x1a0d8>
  42eaba:	mov    rdi,r12
  42eabd:	mov    rsi,r14
  42eac0:	xor    edx,edx
  42eac2:	mov    rcx,rax
  42eac5:	call   42eb60 <strcmp@plt+0x2b3c8>
  42eaca:	mov    r14,QWORD PTR [rbx+0x8]
  42eace:	mov    edi,0x80
  42ead3:	call   41d870 <strcmp@plt+0x1a0d8>
  42ead8:	mov    rdi,r14
  42eadb:	mov    rsi,r15
  42eade:	xor    edx,edx
  42eae0:	mov    rcx,rax
  42eae3:	call   42eb60 <strcmp@plt+0x2b3c8>
  42eae8:	mov    edi,0x20
  42eaed:	call   41d870 <strcmp@plt+0x1a0d8>
  42eaf2:	mov    QWORD PTR [rbx+0x20],rax
  42eaf6:	mov    edi,0x80
  42eafb:	call   41d870 <strcmp@plt+0x1a0d8>
  42eb00:	mov    QWORD PTR [rbx+0x28],rax
  42eb04:	mov    rcx,QWORD PTR [rbx]
  42eb07:	mov    rcx,QWORD PTR [rcx]
  42eb0a:	cmp    QWORD PTR [rcx+0x28],0x0
  42eb0f:	je     42eb34 <strcmp@plt+0x2b39c>
  42eb11:	mov    rcx,QWORD PTR [rbx+0x8]
  42eb15:	mov    rcx,QWORD PTR [rcx]
  42eb18:	cmp    QWORD PTR [rcx+0x28],0x0
  42eb1d:	je     42eb34 <strcmp@plt+0x2b39c>
  42eb1f:	test   rax,rax
  42eb22:	je     42eb34 <strcmp@plt+0x2b39c>
  42eb24:	cmp    QWORD PTR [rbx+0x20],0x0
  42eb29:	je     42eb34 <strcmp@plt+0x2b39c>
  42eb2b:	mov    DWORD PTR [rbx+0x30],0x0
  42eb32:	jmp    42eb49 <strcmp@plt+0x2b3b1>
  42eb34:	lea    rsi,[rip+0x1cf43]        # 44ba7e <strcmp@plt+0x482e6>
  42eb3b:	xor    ebx,ebx
  42eb3d:	mov    edi,0x1
  42eb42:	xor    eax,eax
  42eb44:	call   42e520 <strcmp@plt+0x2ad88>
  42eb49:	mov    rax,rbx
  42eb4c:	add    rsp,0x38
  42eb50:	pop    rbx
  42eb51:	pop    r12
  42eb53:	pop    r14
  42eb55:	pop    r15
  42eb57:	ret    
  42eb58:	nop    DWORD PTR [rax+rax*1+0x0]
  42eb60:	push   r15
  42eb62:	push   r14
  42eb64:	push   r12
  42eb66:	push   rbx
  42eb67:	push   rax
  42eb68:	mov    r15,rcx
  42eb6b:	mov    r14,rsi
  42eb6e:	mov    r12,rdi
  42eb71:	mov    rdi,rsi
  42eb74:	mov    esi,edx
  42eb76:	call   42ffe0 <strcmp@plt+0x2c848>
  42eb7b:	mov    rbx,rax
  42eb7e:	mov    rdi,r12
  42eb81:	mov    rsi,rax
  42eb84:	call   41ded0 <strcmp@plt+0x1a738>
  42eb89:	mov    r12,rax
  42eb8c:	mov    rdi,rbx
  42eb8f:	call   41d830 <strcmp@plt+0x1a098>
  42eb94:	test   r12,r12
  42eb97:	je     42ebcd <strcmp@plt+0x2b435>
  42eb99:	cmp    QWORD PTR [r12+0x28],0x0
  42eb9f:	je     42ebee <strcmp@plt+0x2b456>
  42eba1:	lea    rax,[rip+0x36218]        # 464dc0 <strcmp@plt+0x61628>
  42eba8:	cmp    DWORD PTR [rax],0x3
  42ebab:	jl     42ebf3 <strcmp@plt+0x2b45b>
  42ebad:	mov    rdi,r14
  42ebb0:	call   423c50 <strcmp@plt+0x204b8>
  42ebb5:	lea    rsi,[rip+0x1d2ae]        # 44be6a <strcmp@plt+0x486d2>
  42ebbc:	mov    edi,0x7
  42ebc1:	mov    rdx,rax
  42ebc4:	xor    eax,eax
  42ebc6:	call   42e520 <strcmp@plt+0x2ad88>
  42ebcb:	jmp    42ebf3 <strcmp@plt+0x2b45b>
  42ebcd:	lea    rax,[rip+0x361ec]        # 464dc0 <strcmp@plt+0x61628>
  42ebd4:	cmp    DWORD PTR [rax],0x3
  42ebd7:	jl     42ebf3 <strcmp@plt+0x2b45b>
  42ebd9:	lea    rsi,[rip+0x1d256]        # 44be36 <strcmp@plt+0x4869e>
  42ebe0:	mov    edi,0x7
  42ebe5:	xor    eax,eax
  42ebe7:	call   42e520 <strcmp@plt+0x2ad88>
  42ebec:	jmp    42ebf3 <strcmp@plt+0x2b45b>
  42ebee:	mov    QWORD PTR [r12+0x28],r15
  42ebf3:	mov    rax,r12
  42ebf6:	add    rsp,0x8
  42ebfa:	pop    rbx
  42ebfb:	pop    r12
  42ebfd:	pop    r14
  42ebff:	pop    r15
  42ec01:	ret    
  42ec02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ec0c:	nop    DWORD PTR [rax+0x0]
  42ec10:	push   rbp
  42ec11:	push   r15
  42ec13:	push   r14
  42ec15:	push   r13
  42ec17:	push   r12
  42ec19:	push   rbx
  42ec1a:	sub    rsp,0x408
  42ec21:	mov    r15,rsi
  42ec24:	mov    r14,rdi
  42ec27:	mov    rax,QWORD PTR [rdi]
  42ec2a:	mov    rax,QWORD PTR [rax]
  42ec2d:	mov    rdi,QWORD PTR [rax+0x28]
  42ec31:	call   41da50 <strcmp@plt+0x1a2b8>
  42ec36:	mov    rdi,QWORD PTR [r14]
  42ec39:	xor    ebx,ebx
  42ec3b:	xor    esi,esi
  42ec3d:	call   41da50 <strcmp@plt+0x1a2b8>
  42ec42:	mov    rax,QWORD PTR [r14+0x8]
  42ec46:	mov    rax,QWORD PTR [rax]
  42ec49:	mov    rdi,QWORD PTR [rax+0x28]
  42ec4d:	mov    rsi,r15
  42ec50:	call   41da50 <strcmp@plt+0x1a2b8>
  42ec55:	mov    rdi,QWORD PTR [r14+0x8]
  42ec59:	xor    esi,esi
  42ec5b:	call   41da50 <strcmp@plt+0x1a2b8>
  42ec60:	mov    rdi,QWORD PTR [r14+0x10]
  42ec64:	mov    rax,QWORD PTR [rdi]
  42ec67:	cmp    DWORD PTR [rax],0x0
  42ec6a:	je     42eccf <strcmp@plt+0x2b537>
  42ec6c:	mov    r13d,0x3
  42ec72:	xor    ebp,ebp
  42ec74:	jmp    42ec8c <strcmp@plt+0x2b4f4>
  42ec76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ec80:	inc    ebp
  42ec82:	mov    rax,QWORD PTR [rdi]
  42ec85:	add    ebx,0x2
  42ec88:	cmp    ebp,DWORD PTR [rax]
  42ec8a:	je     42eccf <strcmp@plt+0x2b537>
  42ec8c:	mov    rcx,QWORD PTR [rax+0x10]
  42ec90:	mov    edx,ebp
  42ec92:	shr    edx,0x4
  42ec95:	mov    esi,ebx
  42ec97:	and    sil,0x1e
  42ec9b:	shlx   esi,r13d,esi
  42eca0:	test   DWORD PTR [rcx+rdx*4],esi
  42eca3:	jne    42ec80 <strcmp@plt+0x2b4e8>
  42eca5:	mov    rax,QWORD PTR [rax+0x20]
  42eca9:	mov    ecx,ebp
  42ecab:	mov    r12,QWORD PTR [rax+rcx*8]
  42ecaf:	mov    rax,QWORD PTR [r12]
  42ecb3:	mov    rdi,QWORD PTR [rax+0x28]
  42ecb7:	mov    rsi,r15
  42ecba:	call   41da50 <strcmp@plt+0x1a2b8>
  42ecbf:	mov    rdi,r12
  42ecc2:	xor    esi,esi
  42ecc4:	call   41da50 <strcmp@plt+0x1a2b8>
  42ecc9:	mov    rdi,QWORD PTR [r14+0x10]
  42eccd:	jmp    42ec80 <strcmp@plt+0x2b4e8>
  42eccf:	call   42d1d0 <strcmp@plt+0x29a38>
  42ecd4:	mov    rdi,QWORD PTR [r14+0x18]
  42ecd8:	mov    rax,QWORD PTR [rdi]
  42ecdb:	cmp    DWORD PTR [rax],0x0
  42ecde:	je     42ed3f <strcmp@plt+0x2b5a7>
  42ece0:	xor    ebx,ebx
  42ece2:	mov    r13d,0x3
  42ece8:	xor    ebp,ebp
  42ecea:	jmp    42ecfc <strcmp@plt+0x2b564>
  42ecec:	nop    DWORD PTR [rax+0x0]
  42ecf0:	inc    ebp
  42ecf2:	mov    rax,QWORD PTR [rdi]
  42ecf5:	add    ebx,0x2
  42ecf8:	cmp    ebp,DWORD PTR [rax]
  42ecfa:	je     42ed3f <strcmp@plt+0x2b5a7>
  42ecfc:	mov    rcx,QWORD PTR [rax+0x10]
  42ed00:	mov    edx,ebp
  42ed02:	shr    edx,0x4
  42ed05:	mov    esi,ebx
  42ed07:	and    sil,0x1e
  42ed0b:	shlx   esi,r13d,esi
  42ed10:	test   DWORD PTR [rcx+rdx*4],esi
  42ed13:	jne    42ecf0 <strcmp@plt+0x2b558>
  42ed15:	mov    rax,QWORD PTR [rax+0x20]
  42ed19:	mov    ecx,ebp
  42ed1b:	mov    r12,QWORD PTR [rax+rcx*8]
  42ed1f:	mov    rax,QWORD PTR [r12]
  42ed23:	mov    rdi,QWORD PTR [rax+0x28]
  42ed27:	mov    rsi,r15
  42ed2a:	call   41da50 <strcmp@plt+0x1a2b8>
  42ed2f:	mov    rdi,r12
  42ed32:	xor    esi,esi
  42ed34:	call   41da50 <strcmp@plt+0x1a2b8>
  42ed39:	mov    rdi,QWORD PTR [r14+0x18]
  42ed3d:	jmp    42ecf0 <strcmp@plt+0x2b558>
  42ed3f:	call   42d1d0 <strcmp@plt+0x29a38>
  42ed44:	mov    rdi,QWORD PTR [r14+0x20]
  42ed48:	mov    rbp,QWORD PTR [rdi]
  42ed4b:	test   rbp,rbp
  42ed4e:	je     42edb1 <strcmp@plt+0x2b619>
  42ed50:	xor    ebx,ebx
  42ed52:	cmp    QWORD PTR [rbp+0x8],0x0
  42ed57:	jne    42ed77 <strcmp@plt+0x2b5df>
  42ed59:	jmp    42ed83 <strcmp@plt+0x2b5eb>
  42ed5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ed60:	test   rcx,rcx
  42ed63:	je     42ed9e <strcmp@plt+0x2b606>
  42ed65:	mov    rax,rcx
  42ed68:	mov    rbp,rax
  42ed6b:	test   rax,rax
  42ed6e:	je     42edad <strcmp@plt+0x2b615>
  42ed70:	cmp    QWORD PTR [rbp+0x8],0x0
  42ed75:	je     42ed83 <strcmp@plt+0x2b5eb>
  42ed77:	mov    rdi,QWORD PTR [rbp+0x28]
  42ed7b:	mov    rsi,r15
  42ed7e:	call   41da50 <strcmp@plt+0x1a2b8>
  42ed83:	mov    rax,QWORD PTR [rbp+0x10]
  42ed87:	mov    rcx,QWORD PTR [rbp+0x18]
  42ed8b:	test   rax,rax
  42ed8e:	je     42ed60 <strcmp@plt+0x2b5c8>
  42ed90:	test   rcx,rcx
  42ed93:	je     42ed68 <strcmp@plt+0x2b5d0>
  42ed95:	mov    QWORD PTR [rsp+rbx*8],rcx
  42ed99:	inc    rbx
  42ed9c:	jmp    42ed68 <strcmp@plt+0x2b5d0>
  42ed9e:	test   rbx,rbx
  42eda1:	je     42edad <strcmp@plt+0x2b615>
  42eda3:	mov    rax,QWORD PTR [rsp+rbx*8-0x8]
  42eda8:	dec    rbx
  42edab:	jmp    42ed68 <strcmp@plt+0x2b5d0>
  42edad:	mov    rdi,QWORD PTR [r14+0x20]
  42edb1:	xor    esi,esi
  42edb3:	call   41da50 <strcmp@plt+0x1a2b8>
  42edb8:	mov    rdi,QWORD PTR [r14+0x28]
  42edbc:	mov    rbp,QWORD PTR [rdi]
  42edbf:	test   rbp,rbp
  42edc2:	je     42ee21 <strcmp@plt+0x2b689>
  42edc4:	xor    ebx,ebx
  42edc6:	cmp    QWORD PTR [rbp+0x8],0x0
  42edcb:	jne    42ede7 <strcmp@plt+0x2b64f>
  42edcd:	jmp    42edf3 <strcmp@plt+0x2b65b>
  42edcf:	nop
  42edd0:	test   rcx,rcx
  42edd3:	je     42ee0e <strcmp@plt+0x2b676>
  42edd5:	mov    rax,rcx
  42edd8:	mov    rbp,rax
  42eddb:	test   rax,rax
  42edde:	je     42ee1d <strcmp@plt+0x2b685>
  42ede0:	cmp    QWORD PTR [rbp+0x8],0x0
  42ede5:	je     42edf3 <strcmp@plt+0x2b65b>
  42ede7:	mov    rdi,QWORD PTR [rbp+0x28]
  42edeb:	mov    rsi,r15
  42edee:	call   41da50 <strcmp@plt+0x1a2b8>
  42edf3:	mov    rax,QWORD PTR [rbp+0x10]
  42edf7:	mov    rcx,QWORD PTR [rbp+0x18]
  42edfb:	test   rax,rax
  42edfe:	je     42edd0 <strcmp@plt+0x2b638>
  42ee00:	test   rcx,rcx
  42ee03:	je     42edd8 <strcmp@plt+0x2b640>
  42ee05:	mov    QWORD PTR [rsp+rbx*8],rcx
  42ee09:	inc    rbx
  42ee0c:	jmp    42edd8 <strcmp@plt+0x2b640>
  42ee0e:	test   rbx,rbx
  42ee11:	je     42ee1d <strcmp@plt+0x2b685>
  42ee13:	mov    rax,QWORD PTR [rsp+rbx*8-0x8]
  42ee18:	dec    rbx
  42ee1b:	jmp    42edd8 <strcmp@plt+0x2b640>
  42ee1d:	mov    rdi,QWORD PTR [r14+0x28]
  42ee21:	xor    esi,esi
  42ee23:	call   41da50 <strcmp@plt+0x1a2b8>
  42ee28:	mov    rdi,r14
  42ee2b:	add    rsp,0x408
  42ee32:	pop    rbx
  42ee33:	pop    r12
  42ee35:	pop    r13
  42ee37:	pop    r14
  42ee39:	pop    r15
  42ee3b:	pop    rbp
  42ee3c:	jmp    403790 <free@plt>
  42ee41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ee4b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ee50:	push   rbp
  42ee51:	push   r15
  42ee53:	push   r14
  42ee55:	push   r13
  42ee57:	push   r12
  42ee59:	push   rbx
  42ee5a:	sub    rsp,0x28
  42ee5e:	mov    r15,rdx
  42ee61:	mov    r12,rsi
  42ee64:	mov    r14,rdi
  42ee67:	mov    edx,DWORD PTR [rsi+0x18]
  42ee6a:	cmp    edx,0x3
  42ee6d:	je     42ee99 <strcmp@plt+0x2b701>
  42ee6f:	cmp    edx,0x2
  42ee72:	je     42ef46 <strcmp@plt+0x2b7ae>
  42ee78:	cmp    edx,0x1
  42ee7b:	jne    42ef5b <strcmp@plt+0x2b7c3>
  42ee81:	lea    rsi,[rip+0x1cc22]        # 44baaa <strcmp@plt+0x48312>
  42ee88:	mov    edi,0x3
  42ee8d:	xor    eax,eax
  42ee8f:	call   42e520 <strcmp@plt+0x2ad88>
  42ee94:	jmp    42f0f3 <strcmp@plt+0x2b95b>
  42ee99:	mov    rdi,r12
  42ee9c:	call   4267b0 <strcmp@plt+0x23018>
  42eea1:	cmp    eax,0x9
  42eea4:	je     42ef73 <strcmp@plt+0x2b7db>
  42eeaa:	cmp    eax,0x2
  42eead:	jne    42ef94 <strcmp@plt+0x2b7fc>
  42eeb3:	mov    rdi,r12
  42eeb6:	call   426d40 <strcmp@plt+0x235a8>
  42eebb:	mov    ebp,eax
  42eebd:	mov    rdi,r12
  42eec0:	call   428210 <strcmp@plt+0x24a78>
  42eec5:	test   rax,rax
  42eec8:	je     42f0f3 <strcmp@plt+0x2b95b>
  42eece:	mov    rbx,rax
  42eed1:	mov    DWORD PTR [rsp+0xc],ebp
  42eed5:	mov    rdi,rax
  42eed8:	call   422ef0 <strcmp@plt+0x1f758>
  42eedd:	mov    ebp,eax
  42eedf:	mov    rdi,r14
  42eee2:	mov    rsi,r12
  42eee5:	call   42e8b0 <strcmp@plt+0x2b118>
  42eeea:	mov    r13,rax
  42eeed:	test   rax,rax
  42eef0:	jne    42f188 <strcmp@plt+0x2b9f0>
  42eef6:	vxorps xmm0,xmm0,xmm0
  42eefa:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  42ef00:	mov    DWORD PTR [rsp+0x20],0x0
  42ef08:	cmp    bp,0xa
  42ef0c:	je     42f12c <strcmp@plt+0x2b994>
  42ef12:	cmp    bp,0x2
  42ef16:	jne    42f23e <strcmp@plt+0x2baa6>
  42ef1c:	lea    rdi,[rsp+0x10]
  42ef21:	mov    esi,0x2
  42ef26:	call   423bb0 <strcmp@plt+0x20418>
  42ef2b:	mov    edi,0x20
  42ef30:	call   41d870 <strcmp@plt+0x1a0d8>
  42ef35:	mov    edi,0x20
  42ef3a:	mov    r13,rax
  42ef3d:	lea    rax,[r14+0x10]
  42ef41:	jmp    42f151 <strcmp@plt+0x2b9b9>
  42ef46:	mov    rdi,r12
  42ef49:	call   424120 <strcmp@plt+0x20988>
  42ef4e:	cmp    al,0xa
  42ef50:	je     42efbe <strcmp@plt+0x2b826>
  42ef52:	cmp    al,0x2
  42ef54:	jne    42efcb <strcmp@plt+0x2b833>
  42ef56:	mov    rax,QWORD PTR [r14]
  42ef59:	jmp    42efc2 <strcmp@plt+0x2b82a>
  42ef5b:	lea    rsi,[rip+0x1cb7e]        # 44bae0 <strcmp@plt+0x48348>
  42ef62:	mov    edi,0x3
  42ef67:	xor    eax,eax
  42ef69:	call   42e520 <strcmp@plt+0x2ad88>
  42ef6e:	jmp    42f0f3 <strcmp@plt+0x2b95b>
  42ef73:	mov    rdi,r12
  42ef76:	call   427070 <strcmp@plt+0x238d8>
  42ef7b:	cmp    al,0xa
  42ef7d:	je     42f066 <strcmp@plt+0x2b8ce>
  42ef83:	cmp    al,0x2
  42ef85:	jne    42f06c <strcmp@plt+0x2b8d4>
  42ef8b:	mov    rbp,QWORD PTR [r14+0x20]
  42ef8f:	jmp    42f094 <strcmp@plt+0x2b8fc>
  42ef94:	lea    rax,[rip+0x35e25]        # 464dc0 <strcmp@plt+0x61628>
  42ef9b:	xor    ebp,ebp
  42ef9d:	cmp    DWORD PTR [rax],0x3
  42efa0:	jl     42f212 <strcmp@plt+0x2ba7a>
  42efa6:	mov    rdi,r12
  42efa9:	call   4267b0 <strcmp@plt+0x23018>
  42efae:	lea    rsi,[rip+0x1d17e]        # 44c133 <strcmp@plt+0x4899b>
  42efb5:	mov    edi,0x7
  42efba:	mov    edx,eax
  42efbc:	jmp    42ef67 <strcmp@plt+0x2b7cf>
  42efbe:	mov    rax,QWORD PTR [r14+0x8]
  42efc2:	mov    rax,QWORD PTR [rax]
  42efc5:	mov    rbp,QWORD PTR [rax+0x28]
  42efc9:	jmp    42eff3 <strcmp@plt+0x2b85b>
  42efcb:	lea    rcx,[rip+0x35dee]        # 464dc0 <strcmp@plt+0x61628>
  42efd2:	cmp    DWORD PTR [rcx],0x0
  42efd5:	jle    42eff1 <strcmp@plt+0x2b859>
  42efd7:	movzx  edx,al
  42efda:	lea    rsi,[rip+0x1d094]        # 44c075 <strcmp@plt+0x488dd>
  42efe1:	xor    ebp,ebp
  42efe3:	mov    edi,0x5
  42efe8:	xor    eax,eax
  42efea:	call   42e520 <strcmp@plt+0x2ad88>
  42efef:	jmp    42eff3 <strcmp@plt+0x2b85b>
  42eff1:	xor    ebp,ebp
  42eff3:	mov    rdi,r12
  42eff6:	call   424110 <strcmp@plt+0x20978>
  42effb:	mov    rbx,rax
  42effe:	mov    rdi,r12
  42f001:	call   424100 <strcmp@plt+0x20968>
  42f006:	movzx  edx,al
  42f009:	mov    rdi,rbp
  42f00c:	mov    rsi,rbx
  42f00f:	mov    rcx,r15
  42f012:	call   42eb60 <strcmp@plt+0x2b3c8>
  42f017:	lea    rcx,[rip+0x35da2]        # 464dc0 <strcmp@plt+0x61628>
  42f01e:	mov    ecx,DWORD PTR [rcx]
  42f020:	test   rax,rax
  42f023:	je     42f042 <strcmp@plt+0x2b8aa>
  42f025:	cmp    ecx,0x3
  42f028:	jl     42f209 <strcmp@plt+0x2ba71>
  42f02e:	mov    rdi,r12
  42f031:	call   4241b0 <strcmp@plt+0x20a18>
  42f036:	lea    rsi,[rip+0x1d0c7]        # 44c104 <strcmp@plt+0x4896c>
  42f03d:	jmp    42f1ce <strcmp@plt+0x2ba36>
  42f042:	xor    ebp,ebp
  42f044:	cmp    ecx,0x3
  42f047:	jl     42f212 <strcmp@plt+0x2ba7a>
  42f04d:	mov    rdi,r12
  42f050:	call   4241b0 <strcmp@plt+0x20a18>
  42f055:	lea    rsi,[rip+0x1d044]        # 44c0a0 <strcmp@plt+0x48908>
  42f05c:	mov    edi,0x7
  42f061:	jmp    42f0e9 <strcmp@plt+0x2b951>
  42f066:	mov    rbp,QWORD PTR [r14+0x28]
  42f06a:	jmp    42f094 <strcmp@plt+0x2b8fc>
  42f06c:	lea    rcx,[rip+0x35d4d]        # 464dc0 <strcmp@plt+0x61628>
  42f073:	cmp    DWORD PTR [rcx],0x0
  42f076:	jle    42f092 <strcmp@plt+0x2b8fa>
  42f078:	movzx  edx,al
  42f07b:	lea    rsi,[rip+0x1cfc6]        # 44c048 <strcmp@plt+0x488b0>
  42f082:	xor    ebp,ebp
  42f084:	mov    edi,0x5
  42f089:	xor    eax,eax
  42f08b:	call   42e520 <strcmp@plt+0x2ad88>
  42f090:	jmp    42f094 <strcmp@plt+0x2b8fc>
  42f092:	xor    ebp,ebp
  42f094:	mov    rdi,rbp
  42f097:	mov    rsi,r12
  42f09a:	mov    rdx,r15
  42f09d:	call   42fb60 <strcmp@plt+0x2c3c8>
  42f0a2:	lea    rcx,[rip+0x35d17]        # 464dc0 <strcmp@plt+0x61628>
  42f0a9:	mov    ecx,DWORD PTR [rcx]
  42f0ab:	lea    edx,[rcx+0x4]
  42f0ae:	cmp    eax,0x1
  42f0b1:	jne    42f0d0 <strcmp@plt+0x2b938>
  42f0b3:	cmp    edx,0x7
  42f0b6:	jl     42f1e6 <strcmp@plt+0x2ba4e>
  42f0bc:	mov    rdi,r12
  42f0bf:	call   4267e0 <strcmp@plt+0x23048>
  42f0c4:	lea    rsi,[rip+0x1d192]        # 44c25d <strcmp@plt+0x48ac5>
  42f0cb:	jmp    42f1ce <strcmp@plt+0x2ba36>
  42f0d0:	cmp    edx,0x6
  42f0d3:	jl     42f0fc <strcmp@plt+0x2b964>
  42f0d5:	mov    rdi,r12
  42f0d8:	call   4252b0 <strcmp@plt+0x21b18>
  42f0dd:	lea    rsi,[rip+0x1d138]        # 44c21c <strcmp@plt+0x48a84>
  42f0e4:	mov    edi,0x6
  42f0e9:	mov    rdx,rax
  42f0ec:	xor    eax,eax
  42f0ee:	call   42e520 <strcmp@plt+0x2ad88>
  42f0f3:	lea    rax,[rip+0x35cc6]        # 464dc0 <strcmp@plt+0x61628>
  42f0fa:	mov    ecx,DWORD PTR [rax]
  42f0fc:	xor    ebp,ebp
  42f0fe:	cmp    ecx,0x3
  42f101:	jl     42f212 <strcmp@plt+0x2ba7a>
  42f107:	mov    rdi,r12
  42f10a:	call   422e20 <strcmp@plt+0x1f688>
  42f10f:	lea    rsi,[rip+0x1c9f4]        # 44bb0a <strcmp@plt+0x48372>
  42f116:	xor    ebp,ebp
  42f118:	mov    edi,0x7
  42f11d:	mov    rdx,rax
  42f120:	xor    eax,eax
  42f122:	call   42e520 <strcmp@plt+0x2ad88>
  42f127:	jmp    42f212 <strcmp@plt+0x2ba7a>
  42f12c:	lea    rdi,[rsp+0x10]
  42f131:	mov    esi,0xa
  42f136:	call   423bb0 <strcmp@plt+0x20418>
  42f13b:	mov    edi,0x80
  42f140:	call   41d870 <strcmp@plt+0x1a0d8>
  42f145:	mov    edi,0x80
  42f14a:	mov    r13,rax
  42f14d:	lea    rax,[r14+0x18]
  42f151:	mov    rbp,QWORD PTR [rax]
  42f154:	call   41d870 <strcmp@plt+0x1a0d8>
  42f159:	lea    rsi,[rsp+0x10]
  42f15e:	mov    rdi,r13
  42f161:	xor    edx,edx
  42f163:	mov    rcx,rax
  42f166:	call   42eb60 <strcmp@plt+0x2b3c8>
  42f16b:	mov    rdi,rbp
  42f16e:	mov    esi,DWORD PTR [rsp+0xc]
  42f172:	mov    rdx,r13
  42f175:	call   42ced0 <strcmp@plt+0x29738>
  42f17a:	mov    rdi,r14
  42f17d:	mov    rsi,r12
  42f180:	call   42e8b0 <strcmp@plt+0x2b118>
  42f185:	mov    r13,rax
  42f188:	mov    rdi,rbx
  42f18b:	call   424110 <strcmp@plt+0x20978>
  42f190:	mov    rbp,rax
  42f193:	mov    rdi,rbx
  42f196:	call   424100 <strcmp@plt+0x20968>
  42f19b:	movzx  edx,al
  42f19e:	mov    rdi,r13
  42f1a1:	mov    rsi,rbp
  42f1a4:	mov    rcx,r15
  42f1a7:	call   42eb60 <strcmp@plt+0x2b3c8>
  42f1ac:	lea    rcx,[rip+0x35c0d]        # 464dc0 <strcmp@plt+0x61628>
  42f1b3:	mov    ecx,DWORD PTR [rcx]
  42f1b5:	test   rax,rax
  42f1b8:	je     42f223 <strcmp@plt+0x2ba8b>
  42f1ba:	cmp    ecx,0x3
  42f1bd:	jl     42f209 <strcmp@plt+0x2ba71>
  42f1bf:	mov    rdi,r12
  42f1c2:	call   4267e0 <strcmp@plt+0x23048>
  42f1c7:	lea    rsi,[rip+0x1cffe]        # 44c1cc <strcmp@plt+0x48a34>
  42f1ce:	mov    edi,0x7
  42f1d3:	mov    rdx,rax
  42f1d6:	xor    eax,eax
  42f1d8:	call   42e520 <strcmp@plt+0x2ad88>
  42f1dd:	lea    rax,[rip+0x35bdc]        # 464dc0 <strcmp@plt+0x61628>
  42f1e4:	mov    ecx,DWORD PTR [rax]
  42f1e6:	cmp    ecx,0x3
  42f1e9:	jl     42f209 <strcmp@plt+0x2ba71>
  42f1eb:	mov    rdi,r12
  42f1ee:	call   422e20 <strcmp@plt+0x1f688>
  42f1f3:	lea    rsi,[rip+0x1c939]        # 44bb33 <strcmp@plt+0x4839b>
  42f1fa:	mov    edi,0x7
  42f1ff:	mov    rdx,rax
  42f202:	xor    eax,eax
  42f204:	call   42e520 <strcmp@plt+0x2ad88>
  42f209:	inc    DWORD PTR [r14+0x30]
  42f20d:	mov    ebp,0x1
  42f212:	mov    eax,ebp
  42f214:	add    rsp,0x28
  42f218:	pop    rbx
  42f219:	pop    r12
  42f21b:	pop    r13
  42f21d:	pop    r14
  42f21f:	pop    r15
  42f221:	pop    rbp
  42f222:	ret    
  42f223:	xor    ebp,ebp
  42f225:	cmp    ecx,0x3
  42f228:	jl     42f212 <strcmp@plt+0x2ba7a>
  42f22a:	mov    rdi,r12
  42f22d:	call   4267e0 <strcmp@plt+0x23048>
  42f232:	lea    rsi,[rip+0x1cf27]        # 44c160 <strcmp@plt+0x489c8>
  42f239:	jmp    42f05c <strcmp@plt+0x2b8c4>
  42f23e:	lea    rax,[rip+0x35b7b]        # 464dc0 <strcmp@plt+0x61628>
  42f245:	cmp    DWORD PTR [rax],0x0
  42f248:	jle    42f0f3 <strcmp@plt+0x2b95b>
  42f24e:	movzx  edx,bp
  42f251:	lea    rsi,[rip+0x1cfa0]        # 44c1f8 <strcmp@plt+0x48a60>
  42f258:	mov    edi,0x5
  42f25d:	jmp    42ef67 <strcmp@plt+0x2b7cf>
  42f262:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f26c:	nop    DWORD PTR [rax+0x0]
  42f270:	push   r15
  42f272:	push   r14
  42f274:	push   rbx
  42f275:	mov    rbx,rsi
  42f278:	mov    r14,rdi
  42f27b:	mov    edx,DWORD PTR [rsi+0x18]
  42f27e:	cmp    edx,0x3
  42f281:	je     42f2c8 <strcmp@plt+0x2bb30>
  42f283:	cmp    edx,0x2
  42f286:	je     42f31a <strcmp@plt+0x2bb82>
  42f28c:	cmp    edx,0x1
  42f28f:	jne    42f333 <strcmp@plt+0x2bb9b>
  42f295:	mov    rdi,rbx
  42f298:	call   423440 <strcmp@plt+0x1fca8>
  42f29d:	mov    r15,rax
  42f2a0:	mov    rdi,rax
  42f2a3:	call   422ea0 <strcmp@plt+0x1f708>
  42f2a8:	mov    rdi,r15
  42f2ab:	call   424120 <strcmp@plt+0x20988>
  42f2b0:	cmp    al,0xa
  42f2b2:	je     42f34d <strcmp@plt+0x2bbb5>
  42f2b8:	cmp    al,0x2
  42f2ba:	jne    42f38e <strcmp@plt+0x2bbf6>
  42f2c0:	mov    rax,QWORD PTR [r14]
  42f2c3:	jmp    42f351 <strcmp@plt+0x2bbb9>
  42f2c8:	mov    rdi,rbx
  42f2cb:	call   4267b0 <strcmp@plt+0x23018>
  42f2d0:	cmp    eax,0x9
  42f2d3:	je     42f35d <strcmp@plt+0x2bbc5>
  42f2d9:	cmp    eax,0x2
  42f2dc:	jne    42f3bb <strcmp@plt+0x2bc23>
  42f2e2:	mov    rdi,r14
  42f2e5:	mov    rsi,rbx
  42f2e8:	call   42e8b0 <strcmp@plt+0x2b118>
  42f2ed:	test   rax,rax
  42f2f0:	je     42f40f <strcmp@plt+0x2bc77>
  42f2f6:	mov    r15,rax
  42f2f9:	mov    rdi,rbx
  42f2fc:	call   428210 <strcmp@plt+0x24a78>
  42f301:	test   rax,rax
  42f304:	je     42f45a <strcmp@plt+0x2bcc2>
  42f30a:	mov    rdi,r15
  42f30d:	mov    rsi,rax
  42f310:	call   42f4c0 <strcmp@plt+0x2bd28>
  42f315:	jmp    42f4a9 <strcmp@plt+0x2bd11>
  42f31a:	mov    rdi,rbx
  42f31d:	call   424120 <strcmp@plt+0x20988>
  42f322:	cmp    al,0xa
  42f324:	je     42f37e <strcmp@plt+0x2bbe6>
  42f326:	cmp    al,0x2
  42f328:	jne    42f3e8 <strcmp@plt+0x2bc50>
  42f32e:	mov    rax,QWORD PTR [r14]
  42f331:	jmp    42f382 <strcmp@plt+0x2bbea>
  42f333:	lea    rsi,[rip+0x1c814]        # 44bb4e <strcmp@plt+0x483b6>
  42f33a:	xor    ebx,ebx
  42f33c:	mov    edi,0x3
  42f341:	xor    eax,eax
  42f343:	call   42e520 <strcmp@plt+0x2ad88>
  42f348:	jmp    42f4b5 <strcmp@plt+0x2bd1d>
  42f34d:	mov    rax,QWORD PTR [r14+0x8]
  42f351:	mov    rax,QWORD PTR [rax]
  42f354:	mov    rbx,QWORD PTR [rax+0x28]
  42f358:	jmp    42f43f <strcmp@plt+0x2bca7>
  42f35d:	mov    rdi,rbx
  42f360:	call   427070 <strcmp@plt+0x238d8>
  42f365:	cmp    al,0xa
  42f367:	je     42f46e <strcmp@plt+0x2bcd6>
  42f36d:	cmp    al,0x2
  42f36f:	jne    42f474 <strcmp@plt+0x2bcdc>
  42f375:	mov    r15,QWORD PTR [r14+0x20]
  42f379:	jmp    42f49e <strcmp@plt+0x2bd06>
  42f37e:	mov    rax,QWORD PTR [r14+0x8]
  42f382:	mov    rax,QWORD PTR [rax]
  42f385:	mov    r15,QWORD PTR [rax+0x28]
  42f389:	jmp    42f461 <strcmp@plt+0x2bcc9>
  42f38e:	lea    rcx,[rip+0x35a2b]        # 464dc0 <strcmp@plt+0x61628>
  42f395:	cmp    DWORD PTR [rcx],0x0
  42f398:	jle    42f43d <strcmp@plt+0x2bca5>
  42f39e:	movzx  edx,al
  42f3a1:	lea    rsi,[rip+0x1cccd]        # 44c075 <strcmp@plt+0x488dd>
  42f3a8:	xor    ebx,ebx
  42f3aa:	mov    edi,0x5
  42f3af:	xor    eax,eax
  42f3b1:	call   42e520 <strcmp@plt+0x2ad88>
  42f3b6:	jmp    42f43f <strcmp@plt+0x2bca7>
  42f3bb:	lea    rax,[rip+0x359fe]        # 464dc0 <strcmp@plt+0x61628>
  42f3c2:	cmp    DWORD PTR [rax],0x3
  42f3c5:	jl     42f45a <strcmp@plt+0x2bcc2>
  42f3cb:	mov    rdi,rbx
  42f3ce:	call   4267b0 <strcmp@plt+0x23018>
  42f3d3:	lea    rsi,[rip+0x1cea9]        # 44c283 <strcmp@plt+0x48aeb>
  42f3da:	xor    ebx,ebx
  42f3dc:	mov    edi,0x7
  42f3e1:	mov    edx,eax
  42f3e3:	jmp    42f341 <strcmp@plt+0x2bba9>
  42f3e8:	lea    rcx,[rip+0x359d1]        # 464dc0 <strcmp@plt+0x61628>
  42f3ef:	cmp    DWORD PTR [rcx],0x0
  42f3f2:	jle    42f45e <strcmp@plt+0x2bcc6>
  42f3f4:	movzx  edx,al
  42f3f7:	lea    rsi,[rip+0x1cc77]        # 44c075 <strcmp@plt+0x488dd>
  42f3fe:	xor    r15d,r15d
  42f401:	mov    edi,0x5
  42f406:	xor    eax,eax
  42f408:	call   42e520 <strcmp@plt+0x2ad88>
  42f40d:	jmp    42f461 <strcmp@plt+0x2bcc9>
  42f40f:	lea    rax,[rip+0x359aa]        # 464dc0 <strcmp@plt+0x61628>
  42f416:	cmp    DWORD PTR [rax],0x3
  42f419:	jl     42f45a <strcmp@plt+0x2bcc2>
  42f41b:	mov    rdi,rbx
  42f41e:	call   4267e0 <strcmp@plt+0x23048>
  42f423:	lea    rsi,[rip+0x1ce8b]        # 44c2b5 <strcmp@plt+0x48b1d>
  42f42a:	xor    ebx,ebx
  42f42c:	mov    edi,0x7
  42f431:	mov    rdx,rax
  42f434:	xor    eax,eax
  42f436:	call   42e520 <strcmp@plt+0x2ad88>
  42f43b:	jmp    42f4b5 <strcmp@plt+0x2bd1d>
  42f43d:	xor    ebx,ebx
  42f43f:	mov    rdi,rbx
  42f442:	mov    rsi,r15
  42f445:	call   42f4c0 <strcmp@plt+0x2bd28>
  42f44a:	mov    rbx,rax
  42f44d:	mov    rdi,r15
  42f450:	call   422c90 <strcmp@plt+0x1f4f8>
  42f455:	test   rbx,rbx
  42f458:	jne    42f4b1 <strcmp@plt+0x2bd19>
  42f45a:	xor    ebx,ebx
  42f45c:	jmp    42f4b5 <strcmp@plt+0x2bd1d>
  42f45e:	xor    r15d,r15d
  42f461:	mov    rdi,r15
  42f464:	mov    rsi,rbx
  42f467:	call   42f4c0 <strcmp@plt+0x2bd28>
  42f46c:	jmp    42f4a9 <strcmp@plt+0x2bd11>
  42f46e:	mov    r15,QWORD PTR [r14+0x28]
  42f472:	jmp    42f49e <strcmp@plt+0x2bd06>
  42f474:	lea    rcx,[rip+0x35945]        # 464dc0 <strcmp@plt+0x61628>
  42f47b:	cmp    DWORD PTR [rcx],0x0
  42f47e:	jle    42f49b <strcmp@plt+0x2bd03>
  42f480:	movzx  edx,al
  42f483:	lea    rsi,[rip+0x1cbbe]        # 44c048 <strcmp@plt+0x488b0>
  42f48a:	xor    r15d,r15d
  42f48d:	mov    edi,0x5
  42f492:	xor    eax,eax
  42f494:	call   42e520 <strcmp@plt+0x2ad88>
  42f499:	jmp    42f49e <strcmp@plt+0x2bd06>
  42f49b:	xor    r15d,r15d
  42f49e:	mov    rdi,r15
  42f4a1:	mov    rsi,rbx
  42f4a4:	call   42fd30 <strcmp@plt+0x2c598>
  42f4a9:	mov    rbx,rax
  42f4ac:	test   rbx,rbx
  42f4af:	je     42f45a <strcmp@plt+0x2bcc2>
  42f4b1:	dec    DWORD PTR [r14+0x30]
  42f4b5:	mov    rax,rbx
  42f4b8:	pop    rbx
  42f4b9:	pop    r14
  42f4bb:	pop    r15
  42f4bd:	ret    
  42f4be:	xchg   ax,ax
  42f4c0:	push   r15
  42f4c2:	push   r14
  42f4c4:	push   r12
  42f4c6:	push   rbx
  42f4c7:	push   rax
  42f4c8:	mov    r15,rsi
  42f4cb:	mov    r14,rdi
  42f4ce:	mov    rdi,rsi
  42f4d1:	call   424110 <strcmp@plt+0x20978>
  42f4d6:	mov    rbx,rax
  42f4d9:	mov    rdi,r15
  42f4dc:	call   424100 <strcmp@plt+0x20968>
  42f4e1:	movzx  esi,al
  42f4e4:	mov    rdi,rbx
  42f4e7:	call   42ffe0 <strcmp@plt+0x2c848>
  42f4ec:	mov    rbx,rax
  42f4ef:	mov    rdi,r14
  42f4f2:	mov    rsi,rax
  42f4f5:	call   41dba0 <strcmp@plt+0x1a408>
  42f4fa:	mov    r12,rax
  42f4fd:	mov    rdi,rbx
  42f500:	call   41d830 <strcmp@plt+0x1a098>
  42f505:	lea    rax,[rip+0x358b4]        # 464dc0 <strcmp@plt+0x61628>
  42f50c:	mov    eax,DWORD PTR [rax]
  42f50e:	test   r12,r12
  42f511:	je     42f548 <strcmp@plt+0x2bdb0>
  42f513:	cmp    eax,0x3
  42f516:	jl     42f536 <strcmp@plt+0x2bd9e>
  42f518:	mov    rdi,r15
  42f51b:	call   4241b0 <strcmp@plt+0x20a18>
  42f520:	lea    rsi,[rip+0x1c7f0]        # 44bd17 <strcmp@plt+0x4857f>
  42f527:	mov    edi,0x7
  42f52c:	mov    rdx,rax
  42f52f:	xor    eax,eax
  42f531:	call   42e520 <strcmp@plt+0x2ad88>
  42f536:	mov    r15,QWORD PTR [r12+0x28]
  42f53b:	mov    rdi,r14
  42f53e:	mov    rsi,r12
  42f541:	call   41e5f0 <strcmp@plt+0x1ae58>
  42f546:	jmp    42f573 <strcmp@plt+0x2bddb>
  42f548:	cmp    eax,0x3
  42f54b:	jl     42f570 <strcmp@plt+0x2bdd8>
  42f54d:	mov    rdi,r15
  42f550:	call   4241b0 <strcmp@plt+0x20a18>
  42f555:	lea    rsi,[rip+0x1c77b]        # 44bcd7 <strcmp@plt+0x4853f>
  42f55c:	xor    r15d,r15d
  42f55f:	mov    edi,0x7
  42f564:	mov    rdx,rax
  42f567:	xor    eax,eax
  42f569:	call   42e520 <strcmp@plt+0x2ad88>
  42f56e:	jmp    42f573 <strcmp@plt+0x2bddb>
  42f570:	xor    r15d,r15d
  42f573:	mov    rax,r15
  42f576:	add    rsp,0x8
  42f57a:	pop    rbx
  42f57b:	pop    r12
  42f57d:	pop    r14
  42f57f:	pop    r15
  42f581:	ret    
  42f582:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f58c:	nop    DWORD PTR [rax+0x0]
  42f590:	push   rbp
  42f591:	push   r15
  42f593:	push   r14
  42f595:	push   r13
  42f597:	push   r12
  42f599:	push   rbx
  42f59a:	sub    rsp,0x418
  42f5a1:	mov    QWORD PTR [rsp+0x8],rdx
  42f5a6:	mov    r15,rsi
  42f5a9:	mov    r12,rdi
  42f5ac:	call   42b980 <strcmp@plt+0x281e8>
  42f5b1:	mov    r13,rax
  42f5b4:	mov    rdi,r12
  42f5b7:	mov    rsi,r15
  42f5ba:	mov    edx,0x1
  42f5bf:	call   42f710 <strcmp@plt+0x2bf78>
  42f5c4:	test   rax,rax
  42f5c7:	je     42f6b5 <strcmp@plt+0x2bf1d>
  42f5cd:	mov    rbx,rax
  42f5d0:	mov    rdi,r12
  42f5d3:	mov    rsi,r15
  42f5d6:	call   42e970 <strcmp@plt+0x2b1d8>
  42f5db:	mov    r15,rax
  42f5de:	xor    ebp,ebp
  42f5e0:	cmp    QWORD PTR [rbx+0x8],0x0
  42f5e5:	jne    42f607 <strcmp@plt+0x2be6f>
  42f5e7:	jmp    42f612 <strcmp@plt+0x2be7a>
  42f5e9:	nop    DWORD PTR [rax+0x0]
  42f5f0:	test   rcx,rcx
  42f5f3:	je     42f62e <strcmp@plt+0x2be96>
  42f5f5:	mov    rax,rcx
  42f5f8:	mov    rbx,rax
  42f5fb:	test   rax,rax
  42f5fe:	je     42f63d <strcmp@plt+0x2bea5>
  42f600:	cmp    QWORD PTR [rbx+0x8],0x0
  42f605:	je     42f612 <strcmp@plt+0x2be7a>
  42f607:	mov    rdi,rbx
  42f60a:	mov    rsi,r13
  42f60d:	call   42baa0 <strcmp@plt+0x28308>
  42f612:	mov    rax,QWORD PTR [rbx+0x10]
  42f616:	mov    rcx,QWORD PTR [rbx+0x18]
  42f61a:	test   rax,rax
  42f61d:	je     42f5f0 <strcmp@plt+0x2be58>
  42f61f:	test   rcx,rcx
  42f622:	je     42f5f8 <strcmp@plt+0x2be60>
  42f624:	mov    QWORD PTR [rsp+rbp*8+0x10],rcx
  42f629:	inc    rbp
  42f62c:	jmp    42f5f8 <strcmp@plt+0x2be60>
  42f62e:	test   rbp,rbp
  42f631:	je     42f63d <strcmp@plt+0x2bea5>
  42f633:	mov    rax,QWORD PTR [rsp+rbp*8+0x8]
  42f638:	dec    rbp
  42f63b:	jmp    42f5f8 <strcmp@plt+0x2be60>
  42f63d:	mov    r12,QWORD PTR [r13+0x8]
  42f641:	cmp    r12,r13
  42f644:	je     42f69c <strcmp@plt+0x2bf04>
  42f646:	lea    r14,[rip+0x35773]        # 464dc0 <strcmp@plt+0x61628>
  42f64d:	jmp    42f670 <strcmp@plt+0x2bed8>
  42f64f:	nop
  42f650:	mov    rbp,QWORD PTR [rbx+0x28]
  42f654:	mov    rdi,r15
  42f657:	mov    rsi,rbx
  42f65a:	call   41e5f0 <strcmp@plt+0x1ae58>
  42f65f:	mov    rdi,rbp
  42f662:	call   QWORD PTR [rsp+0x8]
  42f666:	mov    r12,QWORD PTR [r12+0x8]
  42f66b:	cmp    r12,r13
  42f66e:	je     42f69c <strcmp@plt+0x2bf04>
  42f670:	mov    rbx,QWORD PTR [r12+0x10]
  42f675:	cmp    DWORD PTR [r14],0x2
  42f679:	jl     42f650 <strcmp@plt+0x2beb8>
  42f67b:	mov    rdi,QWORD PTR [rbx+0x8]
  42f67f:	call   41d300 <strcmp@plt+0x19b68>
  42f684:	mov    edi,0x6
  42f689:	lea    rsi,[rip+0x1c521]        # 44bbb1 <strcmp@plt+0x48419>
  42f690:	mov    rdx,rax
  42f693:	xor    eax,eax
  42f695:	call   42e520 <strcmp@plt+0x2ad88>
  42f69a:	jmp    42f650 <strcmp@plt+0x2beb8>
  42f69c:	mov    rdi,r13
  42f69f:	add    rsp,0x418
  42f6a6:	pop    rbx
  42f6a7:	pop    r12
  42f6a9:	pop    r13
  42f6ab:	pop    r14
  42f6ad:	pop    r15
  42f6af:	pop    rbp
  42f6b0:	jmp    42bff0 <strcmp@plt+0x28858>
  42f6b5:	lea    rax,[rip+0x35704]        # 464dc0 <strcmp@plt+0x61628>
  42f6bc:	cmp    DWORD PTR [rax],0x2
  42f6bf:	jge    42f6d3 <strcmp@plt+0x2bf3b>
  42f6c1:	add    rsp,0x418
  42f6c8:	pop    rbx
  42f6c9:	pop    r12
  42f6cb:	pop    r13
  42f6cd:	pop    r14
  42f6cf:	pop    r15
  42f6d1:	pop    rbp
  42f6d2:	ret    
  42f6d3:	mov    rdi,r15
  42f6d6:	call   422e20 <strcmp@plt+0x1f688>
  42f6db:	lea    rsi,[rip+0x1c496]        # 44bb78 <strcmp@plt+0x483e0>
  42f6e2:	mov    edi,0x6
  42f6e7:	mov    rdx,rax
  42f6ea:	xor    eax,eax
  42f6ec:	add    rsp,0x418
  42f6f3:	pop    rbx
  42f6f4:	pop    r12
  42f6f6:	pop    r13
  42f6f8:	pop    r14
  42f6fa:	pop    r15
  42f6fc:	pop    rbp
  42f6fd:	jmp    42e520 <strcmp@plt+0x2ad88>
  42f702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f70c:	nop    DWORD PTR [rax+0x0]
  42f710:	push   rbp
  42f711:	push   r15
  42f713:	push   r14
  42f715:	push   rbx
  42f716:	push   rax
  42f717:	mov    r15d,edx
  42f71a:	mov    rbx,rsi
  42f71d:	mov    rbp,rdi
  42f720:	mov    edx,DWORD PTR [rsi+0x18]
  42f723:	lea    eax,[rdx-0x1]
  42f726:	cmp    eax,0x2
  42f729:	jae    42f74d <strcmp@plt+0x2bfb5>
  42f72b:	mov    rdi,rbx
  42f72e:	call   422ef0 <strcmp@plt+0x1f758>
  42f733:	cmp    ax,0xa
  42f737:	je     42f7be <strcmp@plt+0x2c026>
  42f73d:	cmp    ax,0x2
  42f741:	jne    42f7cb <strcmp@plt+0x2c033>
  42f747:	mov    rax,QWORD PTR [rbp+0x0]
  42f74b:	jmp    42f7c2 <strcmp@plt+0x2c02a>
  42f74d:	cmp    edx,0x3
  42f750:	jne    42f7b0 <strcmp@plt+0x2c018>
  42f752:	mov    rdi,rbx
  42f755:	call   4267b0 <strcmp@plt+0x23018>
  42f75a:	cmp    eax,0x9
  42f75d:	je     42f7f2 <strcmp@plt+0x2c05a>
  42f763:	cmp    eax,0x2
  42f766:	jne    42f813 <strcmp@plt+0x2c07b>
  42f76c:	mov    rdi,rbp
  42f76f:	mov    rsi,rbx
  42f772:	call   42e8b0 <strcmp@plt+0x2b118>
  42f777:	test   rax,rax
  42f77a:	je     42f8b1 <strcmp@plt+0x2c119>
  42f780:	mov    r14,rax
  42f783:	test   r15b,r15b
  42f786:	je     42f910 <strcmp@plt+0x2c178>
  42f78c:	mov    rdi,rbx
  42f78f:	call   428210 <strcmp@plt+0x24a78>
  42f794:	test   rax,rax
  42f797:	je     42f830 <strcmp@plt+0x2c098>
  42f79d:	mov    rbx,rax
  42f7a0:	mov    rdi,rax
  42f7a3:	call   423060 <strcmp@plt+0x1f8c8>
  42f7a8:	mov    rbp,rax
  42f7ab:	jmp    42f847 <strcmp@plt+0x2c0af>
  42f7b0:	lea    rsi,[rip+0x1cb4d]        # 44c304 <strcmp@plt+0x48b6c>
  42f7b7:	mov    edi,0x3
  42f7bc:	jmp    42f829 <strcmp@plt+0x2c091>
  42f7be:	mov    rax,QWORD PTR [rbp+0x8]
  42f7c2:	mov    rax,QWORD PTR [rax]
  42f7c5:	mov    r14,QWORD PTR [rax+0x28]
  42f7c9:	jmp    42f837 <strcmp@plt+0x2c09f>
  42f7cb:	lea    rcx,[rip+0x355ee]        # 464dc0 <strcmp@plt+0x61628>
  42f7d2:	cmp    DWORD PTR [rcx],0x0
  42f7d5:	jle    42f834 <strcmp@plt+0x2c09c>
  42f7d7:	movzx  edx,ax
  42f7da:	lea    rsi,[rip+0x1c894]        # 44c075 <strcmp@plt+0x488dd>
  42f7e1:	xor    r14d,r14d
  42f7e4:	mov    edi,0x5
  42f7e9:	xor    eax,eax
  42f7eb:	call   42e520 <strcmp@plt+0x2ad88>
  42f7f0:	jmp    42f837 <strcmp@plt+0x2c09f>
  42f7f2:	mov    rdi,rbx
  42f7f5:	call   427070 <strcmp@plt+0x238d8>
  42f7fa:	cmp    al,0xa
  42f7fc:	je     42f8e4 <strcmp@plt+0x2c14c>
  42f802:	cmp    al,0x2
  42f804:	jne    42f8ea <strcmp@plt+0x2c152>
  42f80a:	mov    rbp,QWORD PTR [rbp+0x20]
  42f80e:	jmp    42f95b <strcmp@plt+0x2c1c3>
  42f813:	mov    rdi,rbx
  42f816:	call   4267b0 <strcmp@plt+0x23018>
  42f81b:	lea    rsi,[rip+0x1cb01]        # 44c323 <strcmp@plt+0x48b8b>
  42f822:	mov    edi,0x3
  42f827:	mov    edx,eax
  42f829:	xor    eax,eax
  42f82b:	call   42e520 <strcmp@plt+0x2ad88>
  42f830:	xor    eax,eax
  42f832:	jmp    42f8a6 <strcmp@plt+0x2c10e>
  42f834:	xor    r14d,r14d
  42f837:	mov    rdi,rbx
  42f83a:	call   423060 <strcmp@plt+0x1f8c8>
  42f83f:	mov    rbp,rax
  42f842:	test   r15b,r15b
  42f845:	je     42f86a <strcmp@plt+0x2c0d2>
  42f847:	mov    rdi,rbx
  42f84a:	call   4230b0 <strcmp@plt+0x1f918>
  42f84f:	movzx  esi,al
  42f852:	mov    rdi,rbp
  42f855:	call   42ffe0 <strcmp@plt+0x2c848>
  42f85a:	mov    rbx,rax
  42f85d:	mov    rdi,r14
  42f860:	mov    rsi,rax
  42f863:	call   41dba0 <strcmp@plt+0x1a408>
  42f868:	jmp    42f898 <strcmp@plt+0x2c100>
  42f86a:	mov    rdi,rbp
  42f86d:	call   423a30 <strcmp@plt+0x20298>
  42f872:	cmp    eax,0x2
  42f875:	mov    eax,0x20
  42f87a:	mov    esi,0x80
  42f87f:	cmove  esi,eax
  42f882:	mov    rdi,rbp
  42f885:	call   42ffe0 <strcmp@plt+0x2c848>
  42f88a:	mov    rbx,rax
  42f88d:	mov    rdi,r14
  42f890:	mov    rsi,rax
  42f893:	call   41dec0 <strcmp@plt+0x1a728>
  42f898:	mov    rbp,rax
  42f89b:	mov    rdi,rbx
  42f89e:	call   41d830 <strcmp@plt+0x1a098>
  42f8a3:	mov    rax,rbp
  42f8a6:	add    rsp,0x8
  42f8aa:	pop    rbx
  42f8ab:	pop    r14
  42f8ad:	pop    r15
  42f8af:	pop    rbp
  42f8b0:	ret    
  42f8b1:	lea    rax,[rip+0x35508]        # 464dc0 <strcmp@plt+0x61628>
  42f8b8:	cmp    DWORD PTR [rax],0x3
  42f8bb:	jl     42f830 <strcmp@plt+0x2c098>
  42f8c1:	mov    rdi,rbx
  42f8c4:	call   4267e0 <strcmp@plt+0x23048>
  42f8c9:	lea    rsi,[rip+0x1ca79]        # 44c349 <strcmp@plt+0x48bb1>
  42f8d0:	mov    edi,0x7
  42f8d5:	mov    rdx,rax
  42f8d8:	xor    eax,eax
  42f8da:	call   42e520 <strcmp@plt+0x2ad88>
  42f8df:	jmp    42f830 <strcmp@plt+0x2c098>
  42f8e4:	mov    rbp,QWORD PTR [rbp+0x28]
  42f8e8:	jmp    42f95b <strcmp@plt+0x2c1c3>
  42f8ea:	lea    rcx,[rip+0x354cf]        # 464dc0 <strcmp@plt+0x61628>
  42f8f1:	cmp    DWORD PTR [rcx],0x0
  42f8f4:	jle    42f959 <strcmp@plt+0x2c1c1>
  42f8f6:	movzx  edx,al
  42f8f9:	lea    rsi,[rip+0x1c748]        # 44c048 <strcmp@plt+0x488b0>
  42f900:	xor    ebp,ebp
  42f902:	mov    edi,0x5
  42f907:	xor    eax,eax
  42f909:	call   42e520 <strcmp@plt+0x2ad88>
  42f90e:	jmp    42f95b <strcmp@plt+0x2c1c3>
  42f910:	mov    rdi,rbx
  42f913:	call   4281a0 <strcmp@plt+0x24a08>
  42f918:	test   rax,rax
  42f91b:	jne    42f92e <strcmp@plt+0x2c196>
  42f91d:	mov    rdi,rbx
  42f920:	call   428210 <strcmp@plt+0x24a78>
  42f925:	test   rax,rax
  42f928:	je     42f830 <strcmp@plt+0x2c098>
  42f92e:	mov    rdi,rax
  42f931:	call   423060 <strcmp@plt+0x1f8c8>
  42f936:	mov    rbx,rax
  42f939:	mov    rdi,rax
  42f93c:	call   423a30 <strcmp@plt+0x20298>
  42f941:	cmp    eax,0x2
  42f944:	mov    eax,0x20
  42f949:	mov    esi,0x80
  42f94e:	cmove  esi,eax
  42f951:	mov    rdi,rbx
  42f954:	jmp    42f885 <strcmp@plt+0x2c0ed>
  42f959:	xor    ebp,ebp
  42f95b:	movzx  edx,r15b
  42f95f:	mov    rdi,rbp
  42f962:	mov    rsi,rbx
  42f965:	add    rsp,0x8
  42f969:	pop    rbx
  42f96a:	pop    r14
  42f96c:	pop    r15
  42f96e:	pop    rbp
  42f96f:	jmp    430100 <strcmp@plt+0x2c968>
  42f974:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f97e:	xchg   ax,ax
  42f980:	jmp    41e5f0 <strcmp@plt+0x1ae58>
  42f985:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42f98f:	nop
  42f990:	push   rbx
  42f991:	xor    ebx,ebx
  42f993:	xor    edx,edx
  42f995:	call   42f710 <strcmp@plt+0x2bf78>
  42f99a:	test   rax,rax
  42f99d:	je     42f9a3 <strcmp@plt+0x2c20b>
  42f99f:	mov    rbx,QWORD PTR [rax+0x28]
  42f9a3:	mov    rax,rbx
  42f9a6:	pop    rbx
  42f9a7:	ret    
  42f9a8:	nop    DWORD PTR [rax+rax*1+0x0]
  42f9b0:	push   rax
  42f9b1:	mov    edx,0x1
  42f9b6:	call   42f710 <strcmp@plt+0x2bf78>
  42f9bb:	test   rax,rax
  42f9be:	je     42f9c6 <strcmp@plt+0x2c22e>
  42f9c0:	mov    rax,QWORD PTR [rax+0x28]
  42f9c4:	pop    rcx
  42f9c5:	ret    
  42f9c6:	xor    eax,eax
  42f9c8:	pop    rcx
  42f9c9:	ret    
  42f9ca:	nop    WORD PTR [rax+rax*1+0x0]
  42f9d0:	push   rbp
  42f9d1:	push   r15
  42f9d3:	push   r14
  42f9d5:	push   r12
  42f9d7:	push   rbx
  42f9d8:	sub    rsp,0x20
  42f9dc:	mov    rbx,rsi
  42f9df:	mov    r14,rdi
  42f9e2:	mov    edi,0x2
  42f9e7:	call   422be0 <strcmp@plt+0x1f448>
  42f9ec:	mov    r15,rax
  42f9ef:	mov    rdi,rbx
  42f9f2:	call   422ef0 <strcmp@plt+0x1f758>
  42f9f7:	mov    r12d,eax
  42f9fa:	xor    ebp,ebp
  42f9fc:	mov    rdi,r14
  42f9ff:	mov    rsi,rbx
  42fa02:	xor    edx,edx
  42fa04:	call   42ee50 <strcmp@plt+0x2b6b8>
  42fa09:	cmp    eax,0x1
  42fa0c:	jne    42faec <strcmp@plt+0x2c354>
  42fa12:	mov    rdi,r14
  42fa15:	mov    rsi,rbx
  42fa18:	mov    edx,0x1
  42fa1d:	call   42f710 <strcmp@plt+0x2bf78>
  42fa22:	test   rax,rax
  42fa25:	je     42fa98 <strcmp@plt+0x2c300>
  42fa27:	mov    rcx,QWORD PTR [rax+0x20]
  42fa2b:	test   rcx,rcx
  42fa2e:	je     42fa98 <strcmp@plt+0x2c300>
  42fa30:	mov    rdx,QWORD PTR [rax+0x8]
  42fa34:	mov    rsi,QWORD PTR [rdx+0x10]
  42fa38:	mov    QWORD PTR [rsp+0x10],rsi
  42fa3d:	vmovups xmm0,XMMWORD PTR [rdx]
  42fa41:	vmovaps XMMWORD PTR [rsp],xmm0
  42fa46:	mov    bpl,BYTE PTR [rcx]
  42fa49:	inc    bpl
  42fa4c:	cmp    QWORD PTR [rcx+0x18],rax
  42fa50:	jne    42fa6b <strcmp@plt+0x2c2d3>
  42fa52:	mov    eax,ebp
  42fa54:	shr    al,0x5
  42fa57:	mov    ecx,ebp
  42fa59:	and    cl,0x1f
  42fa5c:	xor    edx,edx
  42fa5e:	cmp    cl,0x1f
  42fa61:	setne  dl
  42fa64:	movzx  eax,al
  42fa67:	or     DWORD PTR [rsp+rax*4+0x8],edx
  42fa6b:	lea    rsi,[rsp+0x8]
  42fa70:	movzx  edx,r12b
  42fa74:	mov    rdi,r15
  42fa77:	call   423c10 <strcmp@plt+0x20478>
  42fa7c:	movzx  esi,bpl
  42fa80:	mov    rdi,r15
  42fa83:	call   423170 <strcmp@plt+0x1f9d8>
  42fa88:	mov    rdi,r15
  42fa8b:	call   4340a0 <strcmp@plt+0x30908>
  42fa90:	cmp    DWORD PTR [rbx+0x18],0x3
  42fa94:	je     42fabd <strcmp@plt+0x2c325>
  42fa96:	jmp    42fade <strcmp@plt+0x2c346>
  42fa98:	cmp    r12w,0x2
  42fa9d:	jne    42faa8 <strcmp@plt+0x2c310>
  42fa9f:	lea    rdi,[rip+0x1322e]        # 442cd4 <strcmp@plt+0x3f53c>
  42faa6:	jmp    42faaf <strcmp@plt+0x2c317>
  42faa8:	lea    rdi,[rip+0x140b3]        # 443b62 <strcmp@plt+0x403ca>
  42faaf:	mov    rsi,r15
  42fab2:	call   423960 <strcmp@plt+0x201c8>
  42fab7:	cmp    DWORD PTR [rbx+0x18],0x3
  42fabb:	jne    42fade <strcmp@plt+0x2c346>
  42fabd:	mov    rdi,rbx
  42fac0:	call   423440 <strcmp@plt+0x1fca8>
  42fac5:	mov    rbp,rax
  42fac8:	mov    rdi,rax
  42facb:	mov    rsi,r15
  42face:	call   423360 <strcmp@plt+0x1fbc8>
  42fad3:	mov    rdi,r15
  42fad6:	call   422c90 <strcmp@plt+0x1f4f8>
  42fadb:	mov    r15,rbp
  42fade:	mov    rdi,r14
  42fae1:	mov    rsi,rbx
  42fae4:	call   42f270 <strcmp@plt+0x2bad8>
  42fae9:	mov    rbp,r15
  42faec:	mov    rax,rbp
  42faef:	add    rsp,0x20
  42faf3:	pop    rbx
  42faf4:	pop    r12
  42faf6:	pop    r14
  42faf8:	pop    r15
  42fafa:	pop    rbp
  42fafb:	ret    
  42fafc:	nop    DWORD PTR [rax+0x0]
  42fb00:	mov    eax,DWORD PTR [rdi+0x30]
  42fb03:	ret    
  42fb04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fb0e:	xchg   ax,ax
  42fb10:	push   r15
  42fb12:	push   r14
  42fb14:	push   r12
  42fb16:	push   rbx
  42fb17:	push   rax
  42fb18:	mov    r14,rdx
  42fb1b:	mov    rbx,rsi
  42fb1e:	mov    r15,rdi
  42fb21:	mov    rdi,rsi
  42fb24:	call   424110 <strcmp@plt+0x20978>
  42fb29:	mov    r12,rax
  42fb2c:	mov    rdi,rbx
  42fb2f:	call   424100 <strcmp@plt+0x20968>
  42fb34:	movzx  edx,al
  42fb37:	mov    rdi,r15
  42fb3a:	mov    rsi,r12
  42fb3d:	mov    rcx,r14
  42fb40:	call   42eb60 <strcmp@plt+0x2b3c8>
  42fb45:	xor    ecx,ecx
  42fb47:	test   rax,rax
  42fb4a:	setne  cl
  42fb4d:	mov    eax,ecx
  42fb4f:	add    rsp,0x8
  42fb53:	pop    rbx
  42fb54:	pop    r12
  42fb56:	pop    r14
  42fb58:	pop    r15
  42fb5a:	ret    
  42fb5b:	nop    DWORD PTR [rax+rax*1+0x0]
  42fb60:	push   rbp
  42fb61:	push   r15
  42fb63:	push   r14
  42fb65:	push   r13
  42fb67:	push   r12
  42fb69:	push   rbx
  42fb6a:	push   rax
  42fb6b:	mov    r14,rdx
  42fb6e:	mov    rbp,rsi
  42fb71:	mov    r13,rdi
  42fb74:	mov    rdi,rsi
  42fb77:	call   426dd0 <strcmp@plt+0x23638>
  42fb7c:	mov    rbx,rax
  42fb7f:	mov    rdi,rbp
  42fb82:	call   426e60 <strcmp@plt+0x236c8>
  42fb87:	mov    r15,rax
  42fb8a:	cmp    DWORD PTR [rbx+0x18],0x1
  42fb8e:	jne    42fc51 <strcmp@plt+0x2c4b9>
  42fb94:	cmp    DWORD PTR [r15+0x18],0x1
  42fb99:	jne    42fc51 <strcmp@plt+0x2c4b9>
  42fb9f:	mov    rdi,rbp
  42fba2:	call   426f50 <strcmp@plt+0x237b8>
  42fba7:	mov    r12d,eax
  42fbaa:	mov    rdi,rbp
  42fbad:	call   426fe0 <strcmp@plt+0x23848>
  42fbb2:	mov    BYTE PTR [rsp+0x7],al
  42fbb6:	movzx  eax,r12b
  42fbba:	xor    r12d,r12d
  42fbbd:	mov    rdi,r13
  42fbc0:	mov    r13d,eax
  42fbc3:	mov    rsi,rbx
  42fbc6:	mov    edx,eax
  42fbc8:	xor    ecx,ecx
  42fbca:	call   42eb60 <strcmp@plt+0x2b3c8>
  42fbcf:	test   rax,rax
  42fbd2:	je     42fc92 <strcmp@plt+0x2c4fa>
  42fbd8:	mov    rbp,rax
  42fbdb:	mov    rdi,QWORD PTR [rax+0x28]
  42fbdf:	test   rdi,rdi
  42fbe2:	jne    42fc07 <strcmp@plt+0x2c46f>
  42fbe4:	mov    rdi,r15
  42fbe7:	call   423a70 <strcmp@plt+0x202d8>
  42fbec:	movzx  edi,al
  42fbef:	shl    edi,0x3
  42fbf2:	call   41d870 <strcmp@plt+0x1a0d8>
  42fbf7:	mov    rdi,rax
  42fbfa:	mov    QWORD PTR [rbp+0x28],rax
  42fbfe:	test   rax,rax
  42fc01:	je     42fcc4 <strcmp@plt+0x2c52c>
  42fc07:	movzx  ebx,BYTE PTR [rsp+0x7]
  42fc0c:	mov    rsi,r15
  42fc0f:	mov    edx,ebx
  42fc11:	mov    rcx,r14
  42fc14:	call   42eb60 <strcmp@plt+0x2b3c8>
  42fc19:	mov    r12d,0x1
  42fc1f:	test   rax,rax
  42fc22:	jne    42fc80 <strcmp@plt+0x2c4e8>
  42fc24:	lea    rax,[rip+0x35195]        # 464dc0 <strcmp@plt+0x61628>
  42fc2b:	xor    r12d,r12d
  42fc2e:	cmp    DWORD PTR [rax],0x3
  42fc31:	jl     42fc80 <strcmp@plt+0x2c4e8>
  42fc33:	mov    rdi,r15
  42fc36:	call   423c50 <strcmp@plt+0x204b8>
  42fc3b:	lea    rsi,[rip+0x1c04b]        # 44bc8d <strcmp@plt+0x484f5>
  42fc42:	xor    r12d,r12d
  42fc45:	mov    edi,0x7
  42fc4a:	mov    rdx,rax
  42fc4d:	mov    ecx,ebx
  42fc4f:	jmp    42fcbb <strcmp@plt+0x2c523>
  42fc51:	mov    rdi,rbx
  42fc54:	call   422e20 <strcmp@plt+0x1f688>
  42fc59:	mov    rbx,rax
  42fc5c:	mov    rdi,r15
  42fc5f:	call   422e20 <strcmp@plt+0x1f688>
  42fc64:	lea    rsi,[rip+0x1bf71]        # 44bbdc <strcmp@plt+0x48444>
  42fc6b:	xor    r12d,r12d
  42fc6e:	mov    edi,0x3
  42fc73:	mov    rdx,rbx
  42fc76:	mov    rcx,rax
  42fc79:	xor    eax,eax
  42fc7b:	call   42e520 <strcmp@plt+0x2ad88>
  42fc80:	mov    eax,r12d
  42fc83:	add    rsp,0x8
  42fc87:	pop    rbx
  42fc88:	pop    r12
  42fc8a:	pop    r13
  42fc8c:	pop    r14
  42fc8e:	pop    r15
  42fc90:	pop    rbp
  42fc91:	ret    
  42fc92:	lea    rax,[rip+0x35127]        # 464dc0 <strcmp@plt+0x61628>
  42fc99:	cmp    DWORD PTR [rax],0x3
  42fc9c:	jl     42fc80 <strcmp@plt+0x2c4e8>
  42fc9e:	mov    rdi,rbx
  42fca1:	call   423c50 <strcmp@plt+0x204b8>
  42fca6:	lea    rsi,[rip+0x1bf71]        # 44bc1e <strcmp@plt+0x48486>
  42fcad:	xor    r12d,r12d
  42fcb0:	mov    edi,0x7
  42fcb5:	mov    rdx,rax
  42fcb8:	mov    ecx,r13d
  42fcbb:	xor    eax,eax
  42fcbd:	call   42e520 <strcmp@plt+0x2ad88>
  42fcc2:	jmp    42fc80 <strcmp@plt+0x2c4e8>
  42fcc4:	lea    rax,[rip+0x350f5]        # 464dc0 <strcmp@plt+0x61628>
  42fccb:	xor    r12d,r12d
  42fcce:	cmp    DWORD PTR [rax],0x3
  42fcd1:	jl     42fc80 <strcmp@plt+0x2c4e8>
  42fcd3:	lea    rsi,[rip+0x1bf8c]        # 44bc66 <strcmp@plt+0x484ce>
  42fcda:	xor    r12d,r12d
  42fcdd:	mov    edi,0x7
  42fce2:	xor    eax,eax
  42fce4:	call   42e520 <strcmp@plt+0x2ad88>
  42fce9:	jmp    42fc80 <strcmp@plt+0x2c4e8>
  42fceb:	nop    DWORD PTR [rax+rax*1+0x0]
  42fcf0:	push   r14
  42fcf2:	push   rbx
  42fcf3:	push   rax
  42fcf4:	mov    r14,rdi
  42fcf7:	mov    rdi,rsi
  42fcfa:	mov    esi,edx
  42fcfc:	call   42ffe0 <strcmp@plt+0x2c848>
  42fd01:	mov    rbx,rax
  42fd04:	mov    rdi,r14
  42fd07:	mov    rsi,rax
  42fd0a:	call   41dba0 <strcmp@plt+0x1a408>
  42fd0f:	mov    r14,rax
  42fd12:	mov    rdi,rbx
  42fd15:	call   41d830 <strcmp@plt+0x1a098>
  42fd1a:	mov    rax,r14
  42fd1d:	add    rsp,0x8
  42fd21:	pop    rbx
  42fd22:	pop    r14
  42fd24:	ret    
  42fd25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42fd2f:	nop
  42fd30:	push   rbp
  42fd31:	push   r15
  42fd33:	push   r14
  42fd35:	push   r13
  42fd37:	push   r12
  42fd39:	push   rbx
  42fd3a:	push   rax
  42fd3b:	mov    rbx,rsi
  42fd3e:	test   rdi,rdi
  42fd41:	je     42fe4f <strcmp@plt+0x2c6b7>
  42fd47:	mov    r15,rdi
  42fd4a:	mov    rdi,rbx
  42fd4d:	call   426dd0 <strcmp@plt+0x23638>
  42fd52:	mov    r12,rax
  42fd55:	mov    rdi,rbx
  42fd58:	call   426e60 <strcmp@plt+0x236c8>
  42fd5d:	cmp    DWORD PTR [r12+0x18],0x1
  42fd63:	jne    42fe2b <strcmp@plt+0x2c693>
  42fd69:	mov    r14,rax
  42fd6c:	cmp    DWORD PTR [rax+0x18],0x1
  42fd70:	jne    42fe2b <strcmp@plt+0x2c693>
  42fd76:	mov    rdi,r15
  42fd79:	mov    rsi,rbx
  42fd7c:	mov    edx,0x1
  42fd81:	call   42fed0 <strcmp@plt+0x2c738>
  42fd86:	test   rax,rax
  42fd89:	je     42fe93 <strcmp@plt+0x2c6fb>
  42fd8f:	mov    rbp,rax
  42fd92:	mov    rdi,rbx
  42fd95:	call   426fe0 <strcmp@plt+0x23848>
  42fd9a:	movzx  esi,al
  42fd9d:	mov    rdi,r14
  42fda0:	call   42ffe0 <strcmp@plt+0x2c848>
  42fda5:	mov    r14,rax
  42fda8:	mov    QWORD PTR [rsp],rbp
  42fdac:	mov    rdi,rbp
  42fdaf:	mov    rsi,rax
  42fdb2:	call   41dba0 <strcmp@plt+0x1a408>
  42fdb7:	mov    r13,rax
  42fdba:	mov    rdi,r14
  42fdbd:	call   41d830 <strcmp@plt+0x1a098>
  42fdc2:	test   r13,r13
  42fdc5:	je     42feb0 <strcmp@plt+0x2c718>
  42fdcb:	mov    r14,QWORD PTR [r13+0x28]
  42fdcf:	mov    rbp,QWORD PTR [rsp]
  42fdd3:	mov    rdi,rbp
  42fdd6:	mov    rsi,r13
  42fdd9:	call   41e5f0 <strcmp@plt+0x1ae58>
  42fdde:	cmp    DWORD PTR [rbp+0xc],0x0
  42fde2:	jg     42fe81 <strcmp@plt+0x2c6e9>
  42fde8:	mov    rdi,rbp
  42fdeb:	xor    esi,esi
  42fded:	call   41da50 <strcmp@plt+0x1a2b8>
  42fdf2:	mov    rdi,rbx
  42fdf5:	call   426f50 <strcmp@plt+0x237b8>
  42fdfa:	movzx  esi,al
  42fdfd:	mov    rdi,r12
  42fe00:	call   42ffe0 <strcmp@plt+0x2c848>
  42fe05:	mov    rbx,rax
  42fe08:	mov    rdi,r15
  42fe0b:	mov    rsi,rax
  42fe0e:	call   41dba0 <strcmp@plt+0x1a408>
  42fe13:	mov    rbp,rax
  42fe16:	mov    rdi,rbx
  42fe19:	call   41d830 <strcmp@plt+0x1a098>
  42fe1e:	mov    rdi,r15
  42fe21:	mov    rsi,rbp
  42fe24:	call   41e5f0 <strcmp@plt+0x1ae58>
  42fe29:	jmp    42fe81 <strcmp@plt+0x2c6e9>
  42fe2b:	lea    rax,[rip+0x34f8e]        # 464dc0 <strcmp@plt+0x61628>
  42fe32:	cmp    DWORD PTR [rax],0x3
  42fe35:	jl     42fe5b <strcmp@plt+0x2c6c3>
  42fe37:	lea    rsi,[rip+0x1bf43]        # 44bd81 <strcmp@plt+0x485e9>
  42fe3e:	xor    r14d,r14d
  42fe41:	mov    edi,0x7
  42fe46:	xor    eax,eax
  42fe48:	call   42e520 <strcmp@plt+0x2ad88>
  42fe4d:	jmp    42fe81 <strcmp@plt+0x2c6e9>
  42fe4f:	lea    rax,[rip+0x34f6a]        # 464dc0 <strcmp@plt+0x61628>
  42fe56:	cmp    DWORD PTR [rax],0x3
  42fe59:	jge    42fe60 <strcmp@plt+0x2c6c8>
  42fe5b:	xor    r14d,r14d
  42fe5e:	jmp    42fe81 <strcmp@plt+0x2c6e9>
  42fe60:	mov    rdi,rbx
  42fe63:	call   4267e0 <strcmp@plt+0x23048>
  42fe68:	lea    rsi,[rip+0x1bed7]        # 44bd46 <strcmp@plt+0x485ae>
  42fe6f:	xor    r14d,r14d
  42fe72:	mov    edi,0x7
  42fe77:	mov    rdx,rax
  42fe7a:	xor    eax,eax
  42fe7c:	call   42e520 <strcmp@plt+0x2ad88>
  42fe81:	mov    rax,r14
  42fe84:	add    rsp,0x8
  42fe88:	pop    rbx
  42fe89:	pop    r12
  42fe8b:	pop    r13
  42fe8d:	pop    r14
  42fe8f:	pop    r15
  42fe91:	pop    rbp
  42fe92:	ret    
  42fe93:	lea    rax,[rip+0x34f26]        # 464dc0 <strcmp@plt+0x61628>
  42fe9a:	cmp    DWORD PTR [rax],0x3
  42fe9d:	jl     42fe5b <strcmp@plt+0x2c6c3>
  42fe9f:	mov    rdi,rbx
  42fea2:	call   4267e0 <strcmp@plt+0x23048>
  42fea7:	lea    rsi,[rip+0x1bf08]        # 44bdb6 <strcmp@plt+0x4861e>
  42feae:	jmp    42fe6f <strcmp@plt+0x2c6d7>
  42feb0:	lea    rax,[rip+0x34f09]        # 464dc0 <strcmp@plt+0x61628>
  42feb7:	cmp    DWORD PTR [rax],0x3
  42feba:	jl     42fe5b <strcmp@plt+0x2c6c3>
  42febc:	mov    rdi,rbx
  42febf:	call   4267e0 <strcmp@plt+0x23048>
  42fec4:	lea    rsi,[rip+0x1bf2b]        # 44bdf6 <strcmp@plt+0x4865e>
  42fecb:	jmp    42fe6f <strcmp@plt+0x2c6d7>
  42fecd:	nop    DWORD PTR [rax]
  42fed0:	push   rbp
  42fed1:	push   r15
  42fed3:	push   r14
  42fed5:	push   r12
  42fed7:	push   rbx
  42fed8:	mov    ebx,edx
  42feda:	mov    rbp,rsi
  42fedd:	mov    r15,rdi
  42fee0:	mov    rdi,rsi
  42fee3:	call   426dd0 <strcmp@plt+0x23638>
  42fee8:	cmp    DWORD PTR [rax+0x18],0x1
  42feec:	jne    42ff1c <strcmp@plt+0x2c784>
  42feee:	mov    r12,rax
  42fef1:	mov    rdi,rbp
  42fef4:	call   426f50 <strcmp@plt+0x237b8>
  42fef9:	mov    r14d,eax
  42fefc:	test   bl,bl
  42fefe:	je     42ff3f <strcmp@plt+0x2c7a7>
  42ff00:	movzx  esi,r14b
  42ff04:	mov    rdi,r12
  42ff07:	call   42ffe0 <strcmp@plt+0x2c848>
  42ff0c:	mov    rbp,rax
  42ff0f:	mov    rdi,r15
  42ff12:	mov    rsi,rax
  42ff15:	call   41dba0 <strcmp@plt+0x1a408>
  42ff1a:	jmp    42ff6d <strcmp@plt+0x2c7d5>
  42ff1c:	lea    rax,[rip+0x34e9d]        # 464dc0 <strcmp@plt+0x61628>
  42ff23:	cmp    DWORD PTR [rax],0x3
  42ff26:	jl     42ff8f <strcmp@plt+0x2c7f7>
  42ff28:	lea    rsi,[rip+0x1be52]        # 44bd81 <strcmp@plt+0x485e9>
  42ff2f:	xor    ebx,ebx
  42ff31:	mov    edi,0x7
  42ff36:	xor    eax,eax
  42ff38:	call   42e520 <strcmp@plt+0x2ad88>
  42ff3d:	jmp    42ffb7 <strcmp@plt+0x2c81f>
  42ff3f:	mov    rdi,r12
  42ff42:	call   423a30 <strcmp@plt+0x20298>
  42ff47:	cmp    eax,0x2
  42ff4a:	mov    eax,0x20
  42ff4f:	mov    esi,0x80
  42ff54:	cmove  esi,eax
  42ff57:	mov    rdi,r12
  42ff5a:	call   42ffe0 <strcmp@plt+0x2c848>
  42ff5f:	mov    rbp,rax
  42ff62:	mov    rdi,r15
  42ff65:	mov    rsi,rax
  42ff68:	call   41dec0 <strcmp@plt+0x1a728>
  42ff6d:	mov    rbx,rax
  42ff70:	mov    rdi,rbp
  42ff73:	call   41d830 <strcmp@plt+0x1a098>
  42ff78:	test   rbx,rbx
  42ff7b:	je     42ff83 <strcmp@plt+0x2c7eb>
  42ff7d:	mov    rbx,QWORD PTR [rbx+0x28]
  42ff81:	jmp    42ffb7 <strcmp@plt+0x2c81f>
  42ff83:	lea    rax,[rip+0x34e36]        # 464dc0 <strcmp@plt+0x61628>
  42ff8a:	cmp    DWORD PTR [rax],0x3
  42ff8d:	jge    42ff93 <strcmp@plt+0x2c7fb>
  42ff8f:	xor    ebx,ebx
  42ff91:	jmp    42ffb7 <strcmp@plt+0x2c81f>
  42ff93:	mov    rdi,r12
  42ff96:	call   423c50 <strcmp@plt+0x204b8>
  42ff9b:	movzx  ecx,r14b
  42ff9f:	lea    rsi,[rip+0x1c3e0]        # 44c386 <strcmp@plt+0x48bee>
  42ffa6:	xor    ebx,ebx
  42ffa8:	mov    edi,0x7
  42ffad:	mov    rdx,rax
  42ffb0:	xor    eax,eax
  42ffb2:	call   42e520 <strcmp@plt+0x2ad88>
  42ffb7:	mov    rax,rbx
  42ffba:	pop    rbx
  42ffbb:	pop    r12
  42ffbd:	pop    r14
  42ffbf:	pop    r15
  42ffc1:	pop    rbp
  42ffc2:	ret    
  42ffc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ffcd:	nop    DWORD PTR [rax]
  42ffd0:	cmp    DWORD PTR [rdi+0xc],0x0
  42ffd4:	setle  al
  42ffd7:	ret    
  42ffd8:	nop    DWORD PTR [rax+rax*1+0x0]
  42ffe0:	push   rbp
  42ffe1:	push   r14
  42ffe3:	push   rbx
  42ffe4:	mov    ebx,esi
  42ffe6:	mov    r14,rdi
  42ffe9:	call   423a30 <strcmp@plt+0x20298>
  42ffee:	mov    ebp,eax
  42fff0:	or     eax,0x8
  42fff3:	cmp    eax,0xa
  42fff6:	jne    43000b <strcmp@plt+0x2c873>
  42fff8:	cmp    ebp,0x2
  42fffb:	jne    430024 <strcmp@plt+0x2c88c>
  42fffd:	cmp    bl,0x21
  430000:	jb     430029 <strcmp@plt+0x2c891>
  430002:	lea    rdi,[rip+0x1bf2f]        # 44bf38 <strcmp@plt+0x487a0>
  430009:	jmp    430089 <strcmp@plt+0x2c8f1>
  43000b:	lea    rsi,[rip+0x1befc]        # 44bf0e <strcmp@plt+0x48776>
  430012:	xor    ebx,ebx
  430014:	mov    edi,0x3
  430019:	mov    edx,ebp
  43001b:	xor    eax,eax
  43001d:	call   42e520 <strcmp@plt+0x2ad88>
  430022:	jmp    43007a <strcmp@plt+0x2c8e2>
  430024:	cmp    bl,0x81
  430027:	jae    430082 <strcmp@plt+0x2c8ea>
  430029:	movzx  ebx,bl
  43002c:	mov    rdi,r14
  43002f:	call   423a40 <strcmp@plt+0x202a8>
  430034:	mov    edi,ebp
  430036:	mov    rsi,rax
  430039:	mov    edx,ebx
  43003b:	call   41d3c0 <strcmp@plt+0x19c28>
  430040:	mov    rbx,rax
  430043:	test   rax,rax
  430046:	jne    43007a <strcmp@plt+0x2c8e2>
  430048:	mov    rdi,r14
  43004b:	call   423c50 <strcmp@plt+0x204b8>
  430050:	mov    rbp,rax
  430053:	call   403040 <__errno_location@plt>
  430058:	mov    edi,DWORD PTR [rax]
  43005a:	call   403170 <strerror@plt>
  43005f:	lea    rsi,[rip+0x1bf36]        # 44bf9c <strcmp@plt+0x48804>
  430066:	xor    ebx,ebx
  430068:	mov    edi,0x3
  43006d:	mov    rdx,rbp
  430070:	mov    rcx,rax
  430073:	xor    eax,eax
  430075:	call   42e520 <strcmp@plt+0x2ad88>
  43007a:	mov    rax,rbx
  43007d:	pop    rbx
  43007e:	pop    r14
  430080:	pop    rbp
  430081:	ret    
  430082:	lea    rdi,[rip+0x1bf02]        # 44bf8b <strcmp@plt+0x487f3>
  430089:	lea    rsi,[rip+0x1beb8]        # 44bf48 <strcmp@plt+0x487b0>
  430090:	lea    rcx,[rip+0x1bec2]        # 44bf59 <strcmp@plt+0x487c1>
  430097:	mov    edx,0x3e8
  43009c:	call   4032b0 <__assert_fail@plt>
  4300a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4300ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4300b0:	push   r14
  4300b2:	push   rbx
  4300b3:	push   rax
  4300b4:	mov    rbx,rsi
  4300b7:	mov    r14,rdi
  4300ba:	mov    rdi,rsi
  4300bd:	call   423a30 <strcmp@plt+0x20298>
  4300c2:	cmp    eax,0x2
  4300c5:	mov    eax,0x20
  4300ca:	mov    esi,0x80
  4300cf:	cmove  esi,eax
  4300d2:	mov    rdi,rbx
  4300d5:	call   42ffe0 <strcmp@plt+0x2c848>
  4300da:	mov    rbx,rax
  4300dd:	mov    rdi,r14
  4300e0:	mov    rsi,rax
  4300e3:	call   41dec0 <strcmp@plt+0x1a728>
  4300e8:	mov    r14,rax
  4300eb:	mov    rdi,rbx
  4300ee:	call   41d830 <strcmp@plt+0x1a098>
  4300f3:	mov    rax,r14
  4300f6:	add    rsp,0x8
  4300fa:	pop    rbx
  4300fb:	pop    r14
  4300fd:	ret    
  4300fe:	xchg   ax,ax
  430100:	push   rbp
  430101:	push   r15
  430103:	push   r14
  430105:	push   r12
  430107:	push   rbx
  430108:	test   rdi,rdi
  43010b:	je     4301aa <strcmp@plt+0x2ca12>
  430111:	mov    r15d,edx
  430114:	mov    r12,rsi
  430117:	mov    rbp,rdi
  43011a:	mov    rdi,rsi
  43011d:	call   426dd0 <strcmp@plt+0x23638>
  430122:	mov    rbx,rax
  430125:	mov    rdi,r12
  430128:	call   426e60 <strcmp@plt+0x236c8>
  43012d:	cmp    DWORD PTR [rbx+0x18],0x1
  430131:	jne    430195 <strcmp@plt+0x2c9fd>
  430133:	mov    r14,rax
  430136:	cmp    DWORD PTR [rax+0x18],0x1
  43013a:	jne    430195 <strcmp@plt+0x2c9fd>
  43013c:	movzx  edx,r15b
  430140:	mov    rdi,rbp
  430143:	mov    rsi,r12
  430146:	call   42fed0 <strcmp@plt+0x2c738>
  43014b:	test   rax,rax
  43014e:	je     4301d4 <strcmp@plt+0x2ca3c>
  430154:	mov    rbp,rax
  430157:	mov    rdi,r14
  43015a:	call   423a30 <strcmp@plt+0x20298>
  43015f:	cmp    eax,0x2
  430162:	mov    eax,0x20
  430167:	mov    esi,0x80
  43016c:	cmove  esi,eax
  43016f:	mov    rdi,r14
  430172:	call   42ffe0 <strcmp@plt+0x2c848>
  430177:	mov    rbx,rax
  43017a:	mov    rdi,rbp
  43017d:	mov    rsi,rax
  430180:	call   41dec0 <strcmp@plt+0x1a728>
  430185:	mov    rbp,rax
  430188:	mov    rdi,rbx
  43018b:	call   41d830 <strcmp@plt+0x1a098>
  430190:	mov    rax,rbp
  430193:	jmp    4301cb <strcmp@plt+0x2ca33>
  430195:	lea    rax,[rip+0x34c24]        # 464dc0 <strcmp@plt+0x61628>
  43019c:	cmp    DWORD PTR [rax],0x3
  43019f:	jl     4301c9 <strcmp@plt+0x2ca31>
  4301a1:	lea    rsi,[rip+0x1bbd9]        # 44bd81 <strcmp@plt+0x485e9>
  4301a8:	jmp    4301bd <strcmp@plt+0x2ca25>
  4301aa:	lea    rax,[rip+0x34c0f]        # 464dc0 <strcmp@plt+0x61628>
  4301b1:	cmp    DWORD PTR [rax],0x3
  4301b4:	jl     4301c9 <strcmp@plt+0x2ca31>
  4301b6:	lea    rsi,[rip+0x1bcec]        # 44bea9 <strcmp@plt+0x48711>
  4301bd:	mov    edi,0x7
  4301c2:	xor    eax,eax
  4301c4:	call   42e520 <strcmp@plt+0x2ad88>
  4301c9:	xor    eax,eax
  4301cb:	pop    rbx
  4301cc:	pop    r12
  4301ce:	pop    r14
  4301d0:	pop    r15
  4301d2:	pop    rbp
  4301d3:	ret    
  4301d4:	lea    rax,[rip+0x34be5]        # 464dc0 <strcmp@plt+0x61628>
  4301db:	cmp    DWORD PTR [rax],0x3
  4301de:	jl     4301c9 <strcmp@plt+0x2ca31>
  4301e0:	mov    rdi,r12
  4301e3:	call   4267e0 <strcmp@plt+0x23048>
  4301e8:	lea    rsi,[rip+0x1bce1]        # 44bed0 <strcmp@plt+0x48738>
  4301ef:	mov    edi,0x7
  4301f4:	mov    rdx,rax
  4301f7:	xor    eax,eax
  4301f9:	call   42e520 <strcmp@plt+0x2ad88>
  4301fe:	jmp    4301c9 <strcmp@plt+0x2ca31>
  430200:	push   rbp
  430201:	push   r15
  430203:	push   r14
  430205:	push   r13
  430207:	push   r12
  430209:	push   rbx
  43020a:	sub    rsp,0x838
  430211:	mov    rbx,rdx
  430214:	mov    r14,rsi
  430217:	mov    rbp,rdi
  43021a:	call   42b980 <strcmp@plt+0x281e8>
  43021f:	mov    r15,rax
  430222:	mov    rdi,QWORD PTR [rbp+0x0]
  430226:	mov    rsi,rax
  430229:	call   42baa0 <strcmp@plt+0x28308>
  43022e:	mov    rdi,QWORD PTR [rbp+0x8]
  430232:	mov    QWORD PTR [rsp+0x8],r15
  430237:	mov    rsi,r15
  43023a:	call   42baa0 <strcmp@plt+0x28308>
  43023f:	mov    QWORD PTR [rsp+0x10],rbp
  430244:	mov    rax,QWORD PTR [rbp+0x10]
  430248:	mov    rcx,QWORD PTR [rax]
  43024b:	cmp    DWORD PTR [rcx],0x0
  43024e:	je     4302a6 <strcmp@plt+0x2cb0e>
  430250:	xor    r12d,r12d
  430253:	mov    r15d,0x3
  430259:	xor    ebp,ebp
  43025b:	jmp    43026d <strcmp@plt+0x2cad5>
  43025d:	nop    DWORD PTR [rax]
  430260:	inc    ebp
  430262:	mov    rcx,QWORD PTR [rax]
  430265:	add    r12d,0x2
  430269:	cmp    ebp,DWORD PTR [rcx]
  43026b:	je     4302a6 <strcmp@plt+0x2cb0e>
  43026d:	mov    rdx,QWORD PTR [rcx+0x10]
  430271:	mov    esi,ebp
  430273:	shr    esi,0x4
  430276:	mov    edi,r12d
  430279:	and    dil,0x1e
  43027d:	shlx   edi,r15d,edi
  430282:	test   DWORD PTR [rdx+rsi*4],edi
  430285:	jne    430260 <strcmp@plt+0x2cac8>
  430287:	mov    rax,QWORD PTR [rcx+0x20]
  43028b:	mov    ecx,ebp
  43028d:	mov    rdi,QWORD PTR [rax+rcx*8]
  430291:	mov    rsi,QWORD PTR [rsp+0x8]
  430296:	call   42baa0 <strcmp@plt+0x28308>
  43029b:	mov    rax,QWORD PTR [rsp+0x10]
  4302a0:	mov    rax,QWORD PTR [rax+0x10]
  4302a4:	jmp    430260 <strcmp@plt+0x2cac8>
  4302a6:	mov    rax,QWORD PTR [rsp+0x10]
  4302ab:	mov    rax,QWORD PTR [rax+0x18]
  4302af:	mov    rcx,QWORD PTR [rax]
  4302b2:	cmp    DWORD PTR [rcx],0x0
  4302b5:	je     430316 <strcmp@plt+0x2cb7e>
  4302b7:	xor    r12d,r12d
  4302ba:	mov    r15d,0x3
  4302c0:	xor    ebp,ebp
  4302c2:	jmp    4302dd <strcmp@plt+0x2cb45>
  4302c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4302ce:	xchg   ax,ax
  4302d0:	inc    ebp
  4302d2:	mov    rcx,QWORD PTR [rax]
  4302d5:	add    r12d,0x2
  4302d9:	cmp    ebp,DWORD PTR [rcx]
  4302db:	je     430316 <strcmp@plt+0x2cb7e>
  4302dd:	mov    rdx,QWORD PTR [rcx+0x10]
  4302e1:	mov    esi,ebp
  4302e3:	shr    esi,0x4
  4302e6:	mov    edi,r12d
  4302e9:	and    dil,0x1e
  4302ed:	shlx   edi,r15d,edi
  4302f2:	test   DWORD PTR [rdx+rsi*4],edi
  4302f5:	jne    4302d0 <strcmp@plt+0x2cb38>
  4302f7:	mov    rax,QWORD PTR [rcx+0x20]
  4302fb:	mov    ecx,ebp
  4302fd:	mov    rdi,QWORD PTR [rax+rcx*8]
  430301:	mov    rsi,QWORD PTR [rsp+0x8]
  430306:	call   42baa0 <strcmp@plt+0x28308>
  43030b:	mov    rax,QWORD PTR [rsp+0x10]
  430310:	mov    rax,QWORD PTR [rax+0x18]
  430314:	jmp    4302d0 <strcmp@plt+0x2cb38>
  430316:	mov    rax,QWORD PTR [rsp+0x8]
  43031b:	mov    rcx,QWORD PTR [rax+0x8]
  43031f:	cmp    rcx,rax
  430322:	jne    430344 <strcmp@plt+0x2cbac>
  430324:	jmp    430453 <strcmp@plt+0x2ccbb>
  430329:	nop    DWORD PTR [rax+0x0]
  430330:	mov    rcx,QWORD PTR [rsp+0x18]
  430335:	mov    rcx,QWORD PTR [rcx+0x8]
  430339:	cmp    rcx,QWORD PTR [rsp+0x8]
  43033e:	je     430453 <strcmp@plt+0x2ccbb>
  430344:	mov    QWORD PTR [rsp+0x18],rcx
  430349:	mov    rax,QWORD PTR [rcx+0x10]
  43034d:	mov    r15,QWORD PTR [rax]
  430350:	test   r15,r15
  430353:	je     430330 <strcmp@plt+0x2cb98>
  430355:	xor    ebp,ebp
  430357:	cmp    QWORD PTR [r15+0x8],0x0
  43035c:	jne    43038f <strcmp@plt+0x2cbf7>
  43035e:	jmp    430410 <strcmp@plt+0x2cc78>
  430363:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43036d:	nop    DWORD PTR [rax]
  430370:	test   rcx,rcx
  430373:	je     43043a <strcmp@plt+0x2cca2>
  430379:	mov    rax,rcx
  43037c:	mov    r15,rax
  43037f:	test   rax,rax
  430382:	je     430330 <strcmp@plt+0x2cb98>
  430384:	cmp    QWORD PTR [r15+0x8],0x0
  430389:	je     430410 <strcmp@plt+0x2cc78>
  43038f:	mov    rax,QWORD PTR [r15+0x28]
  430393:	mov    r13,QWORD PTR [rax]
  430396:	test   r13,r13
  430399:	je     430410 <strcmp@plt+0x2cc78>
  43039b:	xor    r12d,r12d
  43039e:	cmp    QWORD PTR [r13+0x8],0x0
  4303a3:	jne    4303c7 <strcmp@plt+0x2cc2f>
  4303a5:	jmp    4303d6 <strcmp@plt+0x2cc3e>
  4303a7:	nop    WORD PTR [rax+rax*1+0x0]
  4303b0:	test   rcx,rcx
  4303b3:	je     4303f2 <strcmp@plt+0x2cc5a>
  4303b5:	mov    rax,rcx
  4303b8:	mov    r13,rax
  4303bb:	test   rax,rax
  4303be:	je     430410 <strcmp@plt+0x2cc78>
  4303c0:	cmp    QWORD PTR [r13+0x8],0x0
  4303c5:	je     4303d6 <strcmp@plt+0x2cc3e>
  4303c7:	mov    rdi,QWORD PTR [r13+0x28]
  4303cb:	test   rdi,rdi
  4303ce:	je     4303d6 <strcmp@plt+0x2cc3e>
  4303d0:	mov    rsi,rbx
  4303d3:	call   r14
  4303d6:	mov    rax,QWORD PTR [r13+0x10]
  4303da:	mov    rcx,QWORD PTR [r13+0x18]
  4303de:	test   rax,rax
  4303e1:	je     4303b0 <strcmp@plt+0x2cc18>
  4303e3:	test   rcx,rcx
  4303e6:	je     4303b8 <strcmp@plt+0x2cc20>
  4303e8:	mov    QWORD PTR [rsp+r12*8+0x20],rcx
  4303ed:	inc    r12
  4303f0:	jmp    4303b8 <strcmp@plt+0x2cc20>
  4303f2:	test   r12,r12
  4303f5:	je     430410 <strcmp@plt+0x2cc78>
  4303f7:	mov    rax,QWORD PTR [rsp+r12*8+0x18]
  4303fc:	dec    r12
  4303ff:	jmp    4303b8 <strcmp@plt+0x2cc20>
  430401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43040b:	nop    DWORD PTR [rax+rax*1+0x0]
  430410:	mov    rax,QWORD PTR [r15+0x10]
  430414:	mov    rcx,QWORD PTR [r15+0x18]
  430418:	test   rax,rax
  43041b:	je     430370 <strcmp@plt+0x2cbd8>
  430421:	test   rcx,rcx
  430424:	je     43037c <strcmp@plt+0x2cbe4>
  43042a:	mov    QWORD PTR [rsp+rbp*8+0x430],rcx
  430432:	inc    rbp
  430435:	jmp    43037c <strcmp@plt+0x2cbe4>
  43043a:	test   rbp,rbp
  43043d:	je     430330 <strcmp@plt+0x2cb98>
  430443:	mov    rax,QWORD PTR [rsp+rbp*8+0x428]
  43044b:	dec    rbp
  43044e:	jmp    43037c <strcmp@plt+0x2cbe4>
  430453:	mov    rdi,QWORD PTR [rsp+0x8]
  430458:	call   42bff0 <strcmp@plt+0x28858>
  43045d:	mov    rcx,QWORD PTR [rsp+0x10]
  430462:	mov    rax,QWORD PTR [rcx+0x20]
  430466:	mov    rcx,QWORD PTR [rcx+0x28]
  43046a:	mov    QWORD PTR [rsp+0x18],rcx
  43046f:	mov    r13,QWORD PTR [rax]
  430472:	test   r13,r13
  430475:	je     43056f <strcmp@plt+0x2cdd7>
  43047b:	xor    r12d,r12d
  43047e:	cmp    QWORD PTR [r13+0x8],0x0
  430483:	jne    4304b3 <strcmp@plt+0x2cd1b>
  430485:	jmp    430530 <strcmp@plt+0x2cd98>
  43048a:	nop    WORD PTR [rax+rax*1+0x0]
  430490:	test   rcx,rcx
  430493:	je     43055a <strcmp@plt+0x2cdc2>
  430499:	mov    rax,rcx
  43049c:	mov    r13,rax
  43049f:	test   rax,rax
  4304a2:	je     43056f <strcmp@plt+0x2cdd7>
  4304a8:	cmp    QWORD PTR [r13+0x8],0x0
  4304ad:	je     430530 <strcmp@plt+0x2cd98>
  4304b3:	mov    rax,QWORD PTR [r13+0x28]
  4304b7:	mov    r15,QWORD PTR [rax]
  4304ba:	test   r15,r15
  4304bd:	je     430530 <strcmp@plt+0x2cd98>
  4304bf:	xor    ebp,ebp
  4304c1:	cmp    QWORD PTR [r15+0x8],0x0
  4304c6:	jne    4304e7 <strcmp@plt+0x2cd4f>
  4304c8:	jmp    4304f6 <strcmp@plt+0x2cd5e>
  4304ca:	nop    WORD PTR [rax+rax*1+0x0]
  4304d0:	test   rcx,rcx
  4304d3:	je     430512 <strcmp@plt+0x2cd7a>
  4304d5:	mov    rax,rcx
  4304d8:	mov    r15,rax
  4304db:	test   rax,rax
  4304de:	je     430530 <strcmp@plt+0x2cd98>
  4304e0:	cmp    QWORD PTR [r15+0x8],0x0
  4304e5:	je     4304f6 <strcmp@plt+0x2cd5e>
  4304e7:	mov    rdi,QWORD PTR [r15+0x28]
  4304eb:	test   rdi,rdi
  4304ee:	je     4304f6 <strcmp@plt+0x2cd5e>
  4304f0:	mov    rsi,rbx
  4304f3:	call   r14
  4304f6:	mov    rax,QWORD PTR [r15+0x10]
  4304fa:	mov    rcx,QWORD PTR [r15+0x18]
  4304fe:	test   rax,rax
  430501:	je     4304d0 <strcmp@plt+0x2cd38>
  430503:	test   rcx,rcx
  430506:	je     4304d8 <strcmp@plt+0x2cd40>
  430508:	mov    QWORD PTR [rsp+rbp*8+0x20],rcx
  43050d:	inc    rbp
  430510:	jmp    4304d8 <strcmp@plt+0x2cd40>
  430512:	test   rbp,rbp
  430515:	je     430530 <strcmp@plt+0x2cd98>
  430517:	mov    rax,QWORD PTR [rsp+rbp*8+0x18]
  43051c:	dec    rbp
  43051f:	jmp    4304d8 <strcmp@plt+0x2cd40>
  430521:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43052b:	nop    DWORD PTR [rax+rax*1+0x0]
  430530:	mov    rax,QWORD PTR [r13+0x10]
  430534:	mov    rcx,QWORD PTR [r13+0x18]
  430538:	test   rax,rax
  43053b:	je     430490 <strcmp@plt+0x2ccf8>
  430541:	test   rcx,rcx
  430544:	je     43049c <strcmp@plt+0x2cd04>
  43054a:	mov    QWORD PTR [rsp+r12*8+0x430],rcx
  430552:	inc    r12
  430555:	jmp    43049c <strcmp@plt+0x2cd04>
  43055a:	test   r12,r12
  43055d:	je     43056f <strcmp@plt+0x2cdd7>
  43055f:	mov    rax,QWORD PTR [rsp+r12*8+0x428]
  430567:	dec    r12
  43056a:	jmp    43049c <strcmp@plt+0x2cd04>
  43056f:	mov    rax,QWORD PTR [rsp+0x18]
  430574:	mov    r12,QWORD PTR [rax]
  430577:	test   r12,r12
  43057a:	je     430674 <strcmp@plt+0x2cedc>
  430580:	xor    r15d,r15d
  430583:	cmp    QWORD PTR [r12+0x8],0x0
  430589:	jne    4305b4 <strcmp@plt+0x2ce1c>
  43058b:	jmp    430633 <strcmp@plt+0x2ce9b>
  430590:	test   rcx,rcx
  430593:	je     43065f <strcmp@plt+0x2cec7>
  430599:	mov    rax,rcx
  43059c:	mov    r12,rax
  43059f:	test   rax,rax
  4305a2:	je     430674 <strcmp@plt+0x2cedc>
  4305a8:	cmp    QWORD PTR [r12+0x8],0x0
  4305ae:	je     430633 <strcmp@plt+0x2ce9b>
  4305b4:	mov    r13,rbx
  4305b7:	mov    rax,QWORD PTR [r12+0x28]
  4305bc:	mov    rbx,QWORD PTR [rax]
  4305bf:	test   rbx,rbx
  4305c2:	je     430630 <strcmp@plt+0x2ce98>
  4305c4:	xor    ebp,ebp
  4305c6:	cmp    QWORD PTR [rbx+0x8],0x0
  4305cb:	jne    4305e7 <strcmp@plt+0x2ce4f>
  4305cd:	jmp    4305f6 <strcmp@plt+0x2ce5e>
  4305cf:	nop
  4305d0:	test   rcx,rcx
  4305d3:	je     430612 <strcmp@plt+0x2ce7a>
  4305d5:	mov    rax,rcx
  4305d8:	mov    rbx,rax
  4305db:	test   rax,rax
  4305de:	je     430630 <strcmp@plt+0x2ce98>
  4305e0:	cmp    QWORD PTR [rbx+0x8],0x0
  4305e5:	je     4305f6 <strcmp@plt+0x2ce5e>
  4305e7:	mov    rdi,QWORD PTR [rbx+0x28]
  4305eb:	test   rdi,rdi
  4305ee:	je     4305f6 <strcmp@plt+0x2ce5e>
  4305f0:	mov    rsi,r13
  4305f3:	call   r14
  4305f6:	mov    rax,QWORD PTR [rbx+0x10]
  4305fa:	mov    rcx,QWORD PTR [rbx+0x18]
  4305fe:	test   rax,rax
  430601:	je     4305d0 <strcmp@plt+0x2ce38>
  430603:	test   rcx,rcx
  430606:	je     4305d8 <strcmp@plt+0x2ce40>
  430608:	mov    QWORD PTR [rsp+rbp*8+0x20],rcx
  43060d:	inc    rbp
  430610:	jmp    4305d8 <strcmp@plt+0x2ce40>
  430612:	test   rbp,rbp
  430615:	je     430630 <strcmp@plt+0x2ce98>
  430617:	mov    rax,QWORD PTR [rsp+rbp*8+0x18]
  43061c:	dec    rbp
  43061f:	jmp    4305d8 <strcmp@plt+0x2ce40>
  430621:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43062b:	nop    DWORD PTR [rax+rax*1+0x0]
  430630:	mov    rbx,r13
  430633:	mov    rax,QWORD PTR [r12+0x10]
  430638:	mov    rcx,QWORD PTR [r12+0x18]
  43063d:	test   rax,rax
  430640:	je     430590 <strcmp@plt+0x2cdf8>
  430646:	test   rcx,rcx
  430649:	je     43059c <strcmp@plt+0x2ce04>
  43064f:	mov    QWORD PTR [rsp+r15*8+0x430],rcx
  430657:	inc    r15
  43065a:	jmp    43059c <strcmp@plt+0x2ce04>
  43065f:	test   r15,r15
  430662:	je     430674 <strcmp@plt+0x2cedc>
  430664:	mov    rax,QWORD PTR [rsp+r15*8+0x428]
  43066c:	dec    r15
  43066f:	jmp    43059c <strcmp@plt+0x2ce04>
  430674:	add    rsp,0x838
  43067b:	pop    rbx
  43067c:	pop    r12
  43067e:	pop    r13
  430680:	pop    r14
  430682:	pop    r15
  430684:	pop    rbp
  430685:	ret    
  430686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430690:	push   rbx
  430691:	mov    edi,0x48
  430696:	call   431d60 <strcmp@plt+0x2e5c8>
  43069b:	mov    rbx,rax
  43069e:	mov    BYTE PTR [rax+0x10],0x0
  4306a2:	xor    edi,edi
  4306a4:	call   403370 <time@plt>
  4306a9:	mov    QWORD PTR [rbx+0x18],rax
  4306ad:	mov    rax,rbx
  4306b0:	pop    rbx
  4306b1:	ret    
  4306b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4306bc:	nop    DWORD PTR [rax+0x0]
  4306c0:	mov    QWORD PTR [rdi+0x8],rsi
  4306c4:	mov    BYTE PTR [rdi],0x1
  4306c7:	ret    
  4306c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4306d0:	mov    BYTE PTR [rdi+0x10],0x1
  4306d4:	mov    QWORD PTR [rdi+0x8],rsi
  4306d8:	mov    BYTE PTR [rdi],0x2
  4306db:	ret    
  4306dc:	nop    DWORD PTR [rax+0x0]
  4306e0:	push   rbp
  4306e1:	push   r15
  4306e3:	push   r14
  4306e5:	push   r13
  4306e7:	push   r12
  4306e9:	push   rbx
  4306ea:	push   rax
  4306eb:	test   rdi,rdi
  4306ee:	je     4307b4 <strcmp@plt+0x2d01c>
  4306f4:	mov    r14,rdi
  4306f7:	mov    rax,QWORD PTR [rdi+0x8]
  4306fb:	mov    rcx,QWORD PTR [rax+0x28]
  4306ff:	mov    r13,QWORD PTR [rcx+0x8]
  430703:	cmp    r13,rcx
  430706:	je     43075f <strcmp@plt+0x2cfc7>
  430708:	lea    r15,[rip+0x3fea1]        # 4705b0 <strcmp@plt+0x6ce18>
  43070f:	lea    r12,[rip+0x3fea2]        # 4705b8 <strcmp@plt+0x6ce20>
  430716:	jmp    43072a <strcmp@plt+0x2cf92>
  430718:	nop    DWORD PTR [rax+rax*1+0x0]
  430720:	mov    r13,QWORD PTR [r13+0x8]
  430724:	cmp    r13,QWORD PTR [rax+0x28]
  430728:	je     43075f <strcmp@plt+0x2cfc7>
  43072a:	mov    rbx,QWORD PTR [r13+0x10]
  43072e:	cmp    DWORD PTR [rbx+0x18],0x0
  430732:	je     430720 <strcmp@plt+0x2cf88>
  430734:	mov    rbp,QWORD PTR [rbx+0x8]
  430738:	cmp    rbp,rbx
  43073b:	je     430720 <strcmp@plt+0x2cf88>
  43073d:	nop    DWORD PTR [rax]
  430740:	mov    rdi,QWORD PTR [rbp+0x10]
  430744:	mov    rsi,QWORD PTR [r15]
  430747:	mov    rdx,QWORD PTR [r12]
  43074b:	call   437270 <strcmp@plt+0x33ad8>
  430750:	mov    rbp,QWORD PTR [rbp+0x8]
  430754:	cmp    rbp,rbx
  430757:	jne    430740 <strcmp@plt+0x2cfa8>
  430759:	mov    rax,QWORD PTR [r14+0x8]
  43075d:	jmp    430720 <strcmp@plt+0x2cf88>
  43075f:	lea    rax,[rip+0x3fe4a]        # 4705b0 <strcmp@plt+0x6ce18>
  430766:	mov    rsi,QWORD PTR [rax]
  430769:	lea    rax,[rip+0x3fe48]        # 4705b8 <strcmp@plt+0x6ce20>
  430770:	mov    rdx,QWORD PTR [rax]
  430773:	mov    rdi,r14
  430776:	call   437270 <strcmp@plt+0x33ad8>
  43077b:	mov    rdi,QWORD PTR [r14+0x8]
  43077f:	call   428bd0 <strcmp@plt+0x25438>
  430784:	mov    rdi,QWORD PTR [r14+0x20]
  430788:	test   rdi,rdi
  43078b:	je     430791 <strcmp@plt+0x2cff9>
  43078d:	call   QWORD PTR [r14+0x28]
  430791:	mov    rdi,QWORD PTR [r14+0x30]
  430795:	test   rdi,rdi
  430798:	je     43079e <strcmp@plt+0x2d006>
  43079a:	call   QWORD PTR [r14+0x38]
  43079e:	mov    rdi,r14
  4307a1:	add    rsp,0x8
  4307a5:	pop    rbx
  4307a6:	pop    r12
  4307a8:	pop    r13
  4307aa:	pop    r14
  4307ac:	pop    r15
  4307ae:	pop    rbp
  4307af:	jmp    403790 <free@plt>
  4307b4:	lea    rdi,[rip+0x1bc18]        # 44c3d3 <strcmp@plt+0x48c3b>
  4307bb:	lea    rsi,[rip+0x1bc17]        # 44c3d9 <strcmp@plt+0x48c41>
  4307c2:	lea    rcx,[rip+0x1bc26]        # 44c3ef <strcmp@plt+0x48c57>
  4307c9:	mov    edx,0x40
  4307ce:	call   4032b0 <__assert_fail@plt>
  4307d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4307dd:	nop    DWORD PTR [rax]
  4307e0:	mov    rax,QWORD PTR [rdi+0x8]
  4307e4:	ret    
  4307e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4307ef:	nop
  4307f0:	mov    rax,QWORD PTR [rdi+0x8]
  4307f4:	cmp    WORD PTR [rax+0x20],0x0
  4307f9:	setne  al
  4307fc:	ret    
  4307fd:	nop    DWORD PTR [rax]
  430800:	push   rbp
  430801:	push   r15
  430803:	push   r14
  430805:	push   r13
  430807:	push   r12
  430809:	push   rbx
  43080a:	sub    rsp,0x2e8
  430811:	mov    r15d,esi
  430814:	mov    r13,rdi
  430817:	cmp    esi,0x5
  43081a:	jl     430831 <strcmp@plt+0x2d099>
  43081c:	lea    rax,[rip+0x3459d]        # 464dc0 <strcmp@plt+0x61628>
  430823:	mov    eax,DWORD PTR [rax]
  430825:	add    eax,0x4
  430828:	cmp    eax,r15d
  43082b:	jl     430985 <strcmp@plt+0x2d1ed>
  430831:	mov    BYTE PTR [rsp+0x1e0],0x0
  430839:	mov    BYTE PTR [rsp+0x10],0x0
  43083e:	mov    BYTE PTR [rsp+0x50],0x0
  430843:	mov    r14,QWORD PTR [r13+0x8]
  430847:	xor    edi,edi
  430849:	call   403370 <time@plt>
  43084e:	sub    rax,QWORD PTR [r13+0x18]
  430852:	mov    QWORD PTR [rsp],rax
  430856:	mov    rdi,rsp
  430859:	call   403300 <localtime@plt>
  43085e:	lea    rdx,[rip+0x1bbb2]        # 44c417 <strcmp@plt+0x48c7f>
  430865:	lea    rdi,[rsp+0x1e0]
  43086d:	mov    esi,0x14
  430872:	mov    rcx,rax
  430875:	call   403320 <strftime@plt>
  43087a:	mov    rax,QWORD PTR [r13+0x8]
  43087e:	imul   eax,DWORD PTR [rax+0x30],0x3c
  430882:	sub    rax,QWORD PTR [rsp]
  430886:	mov    QWORD PTR [rsp+0x8],rax
  43088b:	jle    4308b0 <strcmp@plt+0x2d118>
  43088d:	lea    rdi,[rsp+0x8]
  430892:	call   403300 <localtime@plt>
  430897:	lea    rdx,[rip+0x1bb79]        # 44c417 <strcmp@plt+0x48c7f>
  43089e:	lea    rdi,[rsp+0x10]
  4308a3:	mov    esi,0x14
  4308a8:	mov    rcx,rax
  4308ab:	call   403320 <strftime@plt>
  4308b0:	lea    rdx,[rip+0x1bb69]        # 44c420 <strcmp@plt+0x48c88>
  4308b7:	lea    r12,[rsp+0x50]
  4308bc:	mov    ebp,0x190
  4308c1:	lea    rcx,[rsp+0x1e0]
  4308c9:	lea    r8,[rsp+0x10]
  4308ce:	mov    esi,0x190
  4308d3:	mov    rdi,r12
  4308d6:	xor    eax,eax
  4308d8:	call   403630 <snprintf@plt>
  4308dd:	mov    bl,BYTE PTR [r13+0x0]
  4308e1:	mov    rdi,r12
  4308e4:	call   4031e0 <strlen@plt>
  4308e9:	mov    esi,0x190
  4308ee:	sub    rsi,rax
  4308f1:	cmp    bl,0x2
  4308f4:	lea    rdi,[rsp+rax*1+0x50]
  4308f9:	lea    rax,[rip+0x1bb40]        # 44c440 <strcmp@plt+0x48ca8>
  430900:	lea    rdx,[rip+0x1bb48]        # 44c44f <strcmp@plt+0x48cb7>
  430907:	cmove  rdx,rax
  43090b:	xor    eax,eax
  43090d:	call   403630 <snprintf@plt>
  430912:	mov    rdi,r12
  430915:	call   4031e0 <strlen@plt>
  43091a:	lea    rdi,[rsp+rax*1]
  43091e:	add    rdi,0x50
  430922:	sub    rbp,rax
  430925:	cmp    BYTE PTR [r13+0x10],0x1
  43092a:	lea    rax,[rip+0x1bb39]        # 44c46a <strcmp@plt+0x48cd2>
  430931:	lea    rcx,[rip+0x1bb36]        # 44c46e <strcmp@plt+0x48cd6>
  430938:	cmove  rcx,rax
  43093c:	lea    rdx,[rip+0x1bb1c]        # 44c45f <strcmp@plt+0x48cc7>
  430943:	mov    rsi,rbp
  430946:	xor    eax,eax
  430948:	call   403630 <snprintf@plt>
  43094d:	cmp    r15d,0x5
  430951:	jl     430964 <strcmp@plt+0x2d1cc>
  430953:	lea    rax,[rip+0x34466]        # 464dc0 <strcmp@plt+0x61628>
  43095a:	mov    eax,DWORD PTR [rax]
  43095c:	add    eax,0x4
  43095f:	cmp    eax,r15d
  430962:	jl     430985 <strcmp@plt+0x2d1ed>
  430964:	mov    rdi,r14
  430967:	call   428d40 <strcmp@plt+0x255a8>
  43096c:	lea    rsi,[rip+0x1bafe]        # 44c471 <strcmp@plt+0x48cd9>
  430973:	lea    rdx,[rsp+0x50]
  430978:	mov    edi,r15d
  43097b:	mov    rcx,rax
  43097e:	xor    eax,eax
  430980:	call   42e520 <strcmp@plt+0x2ad88>
  430985:	add    rsp,0x2e8
  43098c:	pop    rbx
  43098d:	pop    r12
  43098f:	pop    r13
  430991:	pop    r14
  430993:	pop    r15
  430995:	pop    rbp
  430996:	ret    
  430997:	nop    WORD PTR [rax+rax*1+0x0]
  4309a0:	push   rbx
  4309a1:	mov    edi,0x18
  4309a6:	call   431d60 <strcmp@plt+0x2e5c8>
  4309ab:	mov    rbx,rax
  4309ae:	xor    edi,edi
  4309b0:	call   403370 <time@plt>
  4309b5:	mov    QWORD PTR [rbx+0x10],rax
  4309b9:	mov    rax,rbx
  4309bc:	pop    rbx
  4309bd:	ret    
  4309be:	xchg   ax,ax
  4309c0:	mov    QWORD PTR [rdi+0x8],rsi
  4309c4:	mov    BYTE PTR [rdi],0x1
  4309c7:	ret    
  4309c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4309d0:	mov    QWORD PTR [rdi+0x8],rsi
  4309d4:	mov    BYTE PTR [rdi],0x2
  4309d7:	ret    
  4309d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4309e0:	test   rdi,rdi
  4309e3:	je     430a9a <strcmp@plt+0x2d302>
  4309e9:	push   rbp
  4309ea:	push   r15
  4309ec:	push   r14
  4309ee:	push   r13
  4309f0:	push   r12
  4309f2:	push   rbx
  4309f3:	push   rax
  4309f4:	mov    r14,rdi
  4309f7:	mov    rax,QWORD PTR [rdi+0x8]
  4309fb:	mov    rcx,QWORD PTR [rax+0x28]
  4309ff:	mov    r13,QWORD PTR [rcx+0x8]
  430a03:	cmp    r13,rcx
  430a06:	je     430a5f <strcmp@plt+0x2d2c7>
  430a08:	lea    r15,[rip+0x3fba1]        # 4705b0 <strcmp@plt+0x6ce18>
  430a0f:	lea    r12,[rip+0x3fba2]        # 4705b8 <strcmp@plt+0x6ce20>
  430a16:	jmp    430a2a <strcmp@plt+0x2d292>
  430a18:	nop    DWORD PTR [rax+rax*1+0x0]
  430a20:	mov    r13,QWORD PTR [r13+0x8]
  430a24:	cmp    r13,QWORD PTR [rax+0x28]
  430a28:	je     430a5f <strcmp@plt+0x2d2c7>
  430a2a:	mov    rbx,QWORD PTR [r13+0x10]
  430a2e:	cmp    DWORD PTR [rbx+0x18],0x0
  430a32:	je     430a20 <strcmp@plt+0x2d288>
  430a34:	mov    rbp,QWORD PTR [rbx+0x8]
  430a38:	cmp    rbp,rbx
  430a3b:	je     430a20 <strcmp@plt+0x2d288>
  430a3d:	nop    DWORD PTR [rax]
  430a40:	mov    rdi,QWORD PTR [rbp+0x10]
  430a44:	mov    rsi,QWORD PTR [r15]
  430a47:	mov    rdx,QWORD PTR [r12]
  430a4b:	call   437270 <strcmp@plt+0x33ad8>
  430a50:	mov    rbp,QWORD PTR [rbp+0x8]
  430a54:	cmp    rbp,rbx
  430a57:	jne    430a40 <strcmp@plt+0x2d2a8>
  430a59:	mov    rax,QWORD PTR [r14+0x8]
  430a5d:	jmp    430a20 <strcmp@plt+0x2d288>
  430a5f:	lea    rax,[rip+0x3fb4a]        # 4705b0 <strcmp@plt+0x6ce18>
  430a66:	mov    rsi,QWORD PTR [rax]
  430a69:	lea    rax,[rip+0x3fb48]        # 4705b8 <strcmp@plt+0x6ce20>
  430a70:	mov    rdx,QWORD PTR [rax]
  430a73:	mov    rdi,r14
  430a76:	call   437270 <strcmp@plt+0x33ad8>
  430a7b:	mov    rdi,QWORD PTR [r14+0x8]
  430a7f:	call   429ad0 <strcmp@plt+0x26338>
  430a84:	mov    rdi,r14
  430a87:	add    rsp,0x8
  430a8b:	pop    rbx
  430a8c:	pop    r12
  430a8e:	pop    r13
  430a90:	pop    r14
  430a92:	pop    r15
  430a94:	pop    rbp
  430a95:	jmp    403790 <free@plt>
  430a9a:	ret    
  430a9b:	nop    DWORD PTR [rax+rax*1+0x0]
  430aa0:	mov    rax,QWORD PTR [rdi+0x8]
  430aa4:	ret    
  430aa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430aaf:	nop
  430ab0:	mov    rax,QWORD PTR [rdi+0x8]
  430ab4:	cmp    WORD PTR [rax+0x20],0x0
  430ab9:	setne  al
  430abc:	ret    
  430abd:	nop    DWORD PTR [rax]
  430ac0:	push   rbp
  430ac1:	push   r15
  430ac3:	push   r14
  430ac5:	push   r12
  430ac7:	push   rbx
  430ac8:	sub    rsp,0x2e0
  430acf:	mov    r15d,esi
  430ad2:	mov    rbx,rdi
  430ad5:	cmp    esi,0x5
  430ad8:	jl     430aef <strcmp@plt+0x2d357>
  430ada:	lea    rax,[rip+0x342df]        # 464dc0 <strcmp@plt+0x61628>
  430ae1:	mov    eax,DWORD PTR [rax]
  430ae3:	add    eax,0x4
  430ae6:	cmp    eax,r15d
  430ae9:	jl     430c07 <strcmp@plt+0x2d46f>
  430aef:	mov    BYTE PTR [rsp+0x50],0x0
  430af4:	mov    BYTE PTR [rsp+0x10],0x0
  430af9:	mov    BYTE PTR [rsp+0x150],0x0
  430b01:	mov    r14,QWORD PTR [rbx+0x8]
  430b05:	xor    edi,edi
  430b07:	call   403370 <time@plt>
  430b0c:	sub    rax,QWORD PTR [rbx+0x10]
  430b10:	mov    QWORD PTR [rsp],rax
  430b14:	mov    rdi,rsp
  430b17:	call   403300 <localtime@plt>
  430b1c:	lea    rdx,[rip+0x1b8f4]        # 44c417 <strcmp@plt+0x48c7f>
  430b23:	lea    rdi,[rsp+0x50]
  430b28:	mov    esi,0x14
  430b2d:	mov    rcx,rax
  430b30:	call   403320 <strftime@plt>
  430b35:	mov    rax,QWORD PTR [rbx+0x8]
  430b39:	imul   eax,DWORD PTR [rax+0x38],0x3c
  430b3d:	sub    rax,QWORD PTR [rsp]
  430b41:	mov    QWORD PTR [rsp+0x8],rax
  430b46:	jle    430b6b <strcmp@plt+0x2d3d3>
  430b48:	lea    rdi,[rsp+0x8]
  430b4d:	call   403300 <localtime@plt>
  430b52:	lea    rdx,[rip+0x1b8be]        # 44c417 <strcmp@plt+0x48c7f>
  430b59:	lea    rdi,[rsp+0x10]
  430b5e:	mov    esi,0x14
  430b63:	mov    rcx,rax
  430b66:	call   403320 <strftime@plt>
  430b6b:	lea    rdx,[rip+0x1b8ae]        # 44c420 <strcmp@plt+0x48c88>
  430b72:	lea    r12,[rsp+0x150]
  430b7a:	mov    ebp,0x190
  430b7f:	lea    rcx,[rsp+0x50]
  430b84:	lea    r8,[rsp+0x10]
  430b89:	mov    esi,0x190
  430b8e:	mov    rdi,r12
  430b91:	xor    eax,eax
  430b93:	call   403630 <snprintf@plt>
  430b98:	mov    bl,BYTE PTR [rbx]
  430b9a:	mov    rdi,r12
  430b9d:	call   4031e0 <strlen@plt>
  430ba2:	sub    rbp,rax
  430ba5:	cmp    bl,0x2
  430ba8:	lea    rdi,[rsp+rax*1+0x150]
  430bb0:	lea    rax,[rip+0x1b889]        # 44c440 <strcmp@plt+0x48ca8>
  430bb7:	lea    rdx,[rip+0x1b891]        # 44c44f <strcmp@plt+0x48cb7>
  430bbe:	cmove  rdx,rax
  430bc2:	mov    rsi,rbp
  430bc5:	xor    eax,eax
  430bc7:	call   403630 <snprintf@plt>
  430bcc:	cmp    r15d,0x5
  430bd0:	jl     430be3 <strcmp@plt+0x2d44b>
  430bd2:	lea    rax,[rip+0x341e7]        # 464dc0 <strcmp@plt+0x61628>
  430bd9:	mov    eax,DWORD PTR [rax]
  430bdb:	add    eax,0x4
  430bde:	cmp    eax,r15d
  430be1:	jl     430c07 <strcmp@plt+0x2d46f>
  430be3:	mov    rdi,r14
  430be6:	call   429c50 <strcmp@plt+0x264b8>
  430beb:	lea    rsi,[rip+0x1b87f]        # 44c471 <strcmp@plt+0x48cd9>
  430bf2:	lea    rdx,[rsp+0x150]
  430bfa:	mov    edi,r15d
  430bfd:	mov    rcx,rax
  430c00:	xor    eax,eax
  430c02:	call   42e520 <strcmp@plt+0x2ad88>
  430c07:	add    rsp,0x2e0
  430c0e:	pop    rbx
  430c0f:	pop    r12
  430c11:	pop    r14
  430c13:	pop    r15
  430c15:	pop    rbp
  430c16:	ret    
  430c17:	nop    WORD PTR [rax+rax*1+0x0]
  430c20:	push   r14
  430c22:	push   rbx
  430c23:	push   rax
  430c24:	mov    r14,rdi
  430c27:	mov    edi,0x18
  430c2c:	call   431d60 <strcmp@plt+0x2e5c8>
  430c31:	mov    rbx,rax
  430c34:	xor    edi,edi
  430c36:	call   403370 <time@plt>
  430c3b:	mov    QWORD PTR [rbx+0x10],rax
  430c3f:	mov    al,BYTE PTR [r14]
  430c42:	mov    BYTE PTR [rbx],al
  430c44:	mov    rdi,QWORD PTR [r14+0x8]
  430c48:	call   429bd0 <strcmp@plt+0x26438>
  430c4d:	mov    QWORD PTR [rbx+0x8],rax
  430c51:	mov    rax,QWORD PTR [r14+0x10]
  430c55:	mov    QWORD PTR [rbx+0x10],rax
  430c59:	mov    rax,rbx
  430c5c:	add    rsp,0x8
  430c60:	pop    rbx
  430c61:	pop    r14
  430c63:	ret    
  430c64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430c6e:	xchg   ax,ax
  430c70:	mov    edi,0x8
  430c75:	jmp    431d60 <strcmp@plt+0x2e5c8>
  430c7a:	nop    WORD PTR [rax+rax*1+0x0]
  430c80:	push   r14
  430c82:	push   rbx
  430c83:	push   rax
  430c84:	mov    edi,0x8
  430c89:	call   431d60 <strcmp@plt+0x2e5c8>
  430c8e:	test   rax,rax
  430c91:	je     430cc7 <strcmp@plt+0x2d52f>
  430c93:	mov    rbx,rax
  430c96:	mov    edi,0x10
  430c9b:	call   431d60 <strcmp@plt+0x2e5c8>
  430ca0:	test   rax,rax
  430ca3:	je     430cc7 <strcmp@plt+0x2d52f>
  430ca5:	mov    r14,rax
  430ca8:	mov    QWORD PTR [rbx],rax
  430cab:	lea    rdi,[rip+0xffffffffffffb33e]        # 42bff0 <strcmp@plt+0x28858>
  430cb2:	call   435e70 <strcmp@plt+0x326d8>
  430cb7:	mov    QWORD PTR [r14],rax
  430cba:	xor    eax,eax
  430cbc:	call   42c250 <strcmp@plt+0x28ab8>
  430cc1:	mov    QWORD PTR [r14+0x8],rax
  430cc5:	jmp    430cc9 <strcmp@plt+0x2d531>
  430cc7:	xor    ebx,ebx
  430cc9:	mov    rax,rbx
  430ccc:	add    rsp,0x8
  430cd0:	pop    rbx
  430cd1:	pop    r14
  430cd3:	ret    
  430cd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430cde:	xchg   ax,ax
  430ce0:	test   rdi,rdi
  430ce3:	je     430d16 <strcmp@plt+0x2d57e>
  430ce5:	push   rbx
  430ce6:	mov    rbx,rdi
  430ce9:	mov    rax,QWORD PTR [rdi]
  430cec:	test   rax,rax
  430cef:	je     430d0d <strcmp@plt+0x2d575>
  430cf1:	mov    rdi,QWORD PTR [rax]
  430cf4:	call   436460 <strcmp@plt+0x32cc8>
  430cf9:	mov    rax,QWORD PTR [rbx]
  430cfc:	mov    rdi,QWORD PTR [rax+0x8]
  430d00:	call   42c610 <strcmp@plt+0x28e78>
  430d05:	mov    rdi,QWORD PTR [rbx]
  430d08:	call   403790 <free@plt>
  430d0d:	mov    rdi,rbx
  430d10:	pop    rbx
  430d11:	jmp    403790 <free@plt>
  430d16:	ret    
  430d17:	nop    WORD PTR [rax+rax*1+0x0]
  430d20:	push   rbp
  430d21:	push   r15
  430d23:	push   r14
  430d25:	push   r13
  430d27:	push   r12
  430d29:	push   rbx
  430d2a:	push   rax
  430d2b:	mov    DWORD PTR [rsp+0x4],r9d
  430d30:	mov    r15,r8
  430d33:	mov    rbp,rcx
  430d36:	mov    r12d,edx
  430d39:	mov    r14,rsi
  430d3c:	mov    r13,rdi
  430d3f:	mov    edi,0x38
  430d44:	call   431d60 <strcmp@plt+0x2e5c8>
  430d49:	test   rax,rax
  430d4c:	je     430d93 <strcmp@plt+0x2d5fb>
  430d4e:	mov    rbx,rax
  430d51:	mov    rdi,r14
  430d54:	call   423440 <strcmp@plt+0x1fca8>
  430d59:	mov    QWORD PTR [rbx],rax
  430d5c:	mov    rdi,rbp
  430d5f:	call   423440 <strcmp@plt+0x1fca8>
  430d64:	mov    QWORD PTR [rbx+0x10],rax
  430d68:	mov    rdi,r13
  430d6b:	call   423440 <strcmp@plt+0x1fca8>
  430d70:	mov    QWORD PTR [rbx+0x18],rax
  430d74:	mov    WORD PTR [rbx+0x8],r12w
  430d79:	vmovups xmm0,XMMWORD PTR [r15]
  430d7e:	vmovups XMMWORD PTR [rbx+0x20],xmm0
  430d83:	mov    eax,DWORD PTR [rsp+0x4]
  430d87:	mov    BYTE PTR [rbx+0x30],al
  430d8a:	mov    al,BYTE PTR [rsp+0x40]
  430d8e:	mov    BYTE PTR [rbx+0x31],al
  430d91:	jmp    430d95 <strcmp@plt+0x2d5fd>
  430d93:	xor    ebx,ebx
  430d95:	mov    rax,rbx
  430d98:	add    rsp,0x8
  430d9c:	pop    rbx
  430d9d:	pop    r12
  430d9f:	pop    r13
  430da1:	pop    r14
  430da3:	pop    r15
  430da5:	pop    rbp
  430da6:	ret    
  430da7:	nop    WORD PTR [rax+rax*1+0x0]
  430db0:	push   rbx
  430db1:	mov    rbx,rdi
  430db4:	lea    rax,[rip+0x3f7f5]        # 4705b0 <strcmp@plt+0x6ce18>
  430dbb:	mov    rsi,QWORD PTR [rax]
  430dbe:	lea    rax,[rip+0x3f7f3]        # 4705b8 <strcmp@plt+0x6ce20>
  430dc5:	mov    rdx,QWORD PTR [rax]
  430dc8:	call   437270 <strcmp@plt+0x33ad8>
  430dcd:	mov    rdi,QWORD PTR [rbx+0x10]
  430dd1:	call   422c90 <strcmp@plt+0x1f4f8>
  430dd6:	mov    rdi,QWORD PTR [rbx]
  430dd9:	call   422c90 <strcmp@plt+0x1f4f8>
  430dde:	mov    rdi,QWORD PTR [rbx+0x18]
  430de2:	call   422c90 <strcmp@plt+0x1f4f8>
  430de7:	mov    rdi,rbx
  430dea:	pop    rbx
  430deb:	jmp    403790 <free@plt>
  430df0:	push   rbp
  430df1:	push   r15
  430df3:	push   r14
  430df5:	push   r13
  430df7:	push   r12
  430df9:	push   rbx
  430dfa:	sub    rsp,0x18
  430dfe:	mov    eax,DWORD PTR [rip+0x3ea64]        # 46f868 <strcmp@plt+0x6c0d0>
  430e04:	mov    ecx,eax
  430e06:	inc    ecx
  430e08:	movsxd rcx,ecx
  430e0b:	imul   rcx,rcx,0x55555556
  430e12:	mov    rdx,rcx
  430e15:	shr    rdx,0x3f
  430e19:	shr    rcx,0x20
  430e1d:	add    ecx,edx
  430e1f:	lea    ecx,[rcx+rcx*2]
  430e22:	neg    ecx
  430e24:	lea    eax,[rax+rcx*1]
  430e27:	add    eax,0x1
  430e2a:	mov    DWORD PTR [rip+0x3ea38],eax        # 46f868 <strcmp@plt+0x6c0d0>
  430e30:	cdqe   
  430e32:	imul   rcx,rax,0x3e8
  430e39:	lea    r14,[rip+0x3de70]        # 46ecb0 <strcmp@plt+0x6b518>
  430e40:	lea    r15,[r14+rcx*1]
  430e44:	mov    BYTE PTR [rcx+r14*1],0x0
  430e49:	test   rdi,rdi
  430e4c:	je     430ed6 <strcmp@plt+0x2d73e>
  430e52:	mov    rbx,rdi
  430e55:	mov    rdi,r15
  430e58:	call   4031e0 <strlen@plt>
  430e5d:	add    r15,rax
  430e60:	mov    r12d,0x3e8
  430e66:	sub    r12,rax
  430e69:	mov    rdi,QWORD PTR [rbx+0x10]
  430e6d:	call   422e20 <strcmp@plt+0x1f688>
  430e72:	mov    QWORD PTR [rsp+0x10],rax
  430e77:	mov    rdi,QWORD PTR [rbx]
  430e7a:	call   422e20 <strcmp@plt+0x1f688>
  430e7f:	mov    QWORD PTR [rsp+0x8],rax
  430e84:	movzx  r13d,WORD PTR [rbx+0x8]
  430e89:	mov    rdi,QWORD PTR [rbx+0x18]
  430e8d:	call   422e20 <strcmp@plt+0x1f688>
  430e92:	mov    r10,rax
  430e95:	movzx  ebp,BYTE PTR [rbx+0x30]
  430e99:	movzx  ebx,BYTE PTR [rbx+0x31]
  430e9d:	sub    rsp,0x8
  430ea1:	lea    rdx,[rip+0x1b5d0]        # 44c478 <strcmp@plt+0x48ce0>
  430ea8:	mov    rdi,r15
  430eab:	mov    rsi,r12
  430eae:	mov    rcx,QWORD PTR [rsp+0x18]
  430eb3:	mov    r8,QWORD PTR [rsp+0x10]
  430eb8:	mov    r9d,r13d
  430ebb:	mov    eax,0x0
  430ec0:	push   rbx
  430ec1:	push   rbp
  430ec2:	push   r10
  430ec4:	call   403630 <snprintf@plt>
  430ec9:	add    rsp,0x20
  430ecd:	movsxd rax,DWORD PTR [rip+0x3e994]        # 46f868 <strcmp@plt+0x6c0d0>
  430ed4:	jmp    430ee5 <strcmp@plt+0x2d74d>
  430ed6:	mov    DWORD PTR [r15+0x3],0x5f4c4c
  430ede:	mov    DWORD PTR [r15],0x4c554e5f
  430ee5:	imul   rax,rax,0x3e8
  430eec:	add    r14,rax
  430eef:	mov    rax,r14
  430ef2:	add    rsp,0x18
  430ef6:	pop    rbx
  430ef7:	pop    r12
  430ef9:	pop    r13
  430efb:	pop    r14
  430efd:	pop    r15
  430eff:	pop    rbp
  430f00:	ret    
  430f01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  430f0b:	nop    DWORD PTR [rax+rax*1+0x0]
  430f10:	push   rbp
  430f11:	push   r15
  430f13:	push   r14
  430f15:	push   r13
  430f17:	push   r12
  430f19:	push   rbx
  430f1a:	sub    rsp,0x58
  430f1e:	mov    QWORD PTR [rsp+0x28],r9
  430f23:	mov    DWORD PTR [rsp+0x1c],r8d
  430f28:	mov    QWORD PTR [rsp+0x38],rcx
  430f2d:	mov    QWORD PTR [rsp+0x40],rdx
  430f32:	mov    r12,rsi
  430f35:	mov    rcx,QWORD PTR [rsp+0x90]
  430f3d:	mov    rbp,QWORD PTR [rdi+0x30]
  430f41:	mov    rax,QWORD PTR [rbp+0x0]
  430f45:	mov    rbx,QWORD PTR [rax]
  430f48:	mov    rdi,rcx
  430f4b:	call   437670 <strcmp@plt+0x33ed8>
  430f50:	mov    rdi,rbx
  430f53:	mov    rsi,rax
  430f56:	call   436340 <strcmp@plt+0x32ba8>
  430f5b:	mov    r14,rax
  430f5e:	test   rax,rax
  430f61:	jne    430ffd <strcmp@plt+0x2d865>
  430f67:	lea    rax,[rip+0x33e52]        # 464dc0 <strcmp@plt+0x61628>
  430f6e:	cmp    DWORD PTR [rax],0x3
  430f71:	jl     430fa4 <strcmp@plt+0x2d80c>
  430f73:	mov    rdi,QWORD PTR [rsp+0x90]
  430f7b:	call   437670 <strcmp@plt+0x33ed8>
  430f80:	mov    rbx,rax
  430f83:	mov    rdi,r12
  430f86:	call   422e20 <strcmp@plt+0x1f688>
  430f8b:	lea    rsi,[rip+0x1b533]        # 44c4c5 <strcmp@plt+0x48d2d>
  430f92:	mov    edi,0x7
  430f97:	mov    rdx,rbx
  430f9a:	mov    rcx,rax
  430f9d:	xor    eax,eax
  430f9f:	call   42e520 <strcmp@plt+0x2ad88>
  430fa4:	lea    rdi,[rip+0xfffffffffffffe05]        # 430db0 <strcmp@plt+0x2d618>
  430fab:	call   42b9b0 <strcmp@plt+0x28218>
  430fb0:	mov    r14,rax
  430fb3:	mov    rax,QWORD PTR [rbp+0x0]
  430fb7:	mov    rbx,QWORD PTR [rax]
  430fba:	mov    r15,QWORD PTR [rsp+0x90]
  430fc2:	mov    rdi,r15
  430fc5:	call   437670 <strcmp@plt+0x33ed8>
  430fca:	mov    rdi,rax
  430fcd:	call   403710 <strdup@plt>
  430fd2:	mov    rdi,rbx
  430fd5:	mov    rsi,rax
  430fd8:	mov    rdx,r14
  430fdb:	call   435eb0 <strcmp@plt+0x32718>
  430fe0:	mov    rax,QWORD PTR [rbp+0x0]
  430fe4:	mov    rbx,QWORD PTR [rax]
  430fe7:	mov    rdi,r15
  430fea:	call   437670 <strcmp@plt+0x33ed8>
  430fef:	mov    rdi,rbx
  430ff2:	mov    rsi,rax
  430ff5:	call   436340 <strcmp@plt+0x32ba8>
  430ffa:	mov    r14,rax
  430ffd:	call   42b980 <strcmp@plt+0x281e8>
  431002:	mov    QWORD PTR [rsp+0x10],rax
  431007:	mov    rax,QWORD PTR [r12+0x28]
  43100c:	mov    rdx,QWORD PTR [rax+0x8]
  431010:	cmp    rdx,rax
  431013:	je     431224 <strcmp@plt+0x2da8c>
  431019:	mov    rcx,r12
  43101c:	xor    esi,esi
  43101e:	mov    QWORD PTR [rsp+0x20],rsi
  431023:	xor    esi,esi
  431025:	mov    QWORD PTR [rsp+0x8],rsi
  43102a:	mov    QWORD PTR [rsp+0x50],rcx
  43102f:	jmp    43105e <strcmp@plt+0x2d8c6>
  431031:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43103b:	nop    DWORD PTR [rax+rax*1+0x0]
  431040:	mov    rcx,QWORD PTR [rsp+0x50]
  431045:	mov    rax,QWORD PTR [rcx+0x28]
  431049:	mov    r12,r15
  43104c:	mov    rdx,QWORD PTR [rsp+0x30]
  431051:	mov    rdx,QWORD PTR [rdx+0x8]
  431055:	cmp    rdx,rax
  431058:	je     43120d <strcmp@plt+0x2da75>
  43105e:	mov    rbp,QWORD PTR [rdx+0x10]
  431062:	cmp    DWORD PTR [rbp+0x18],0x0
  431066:	je     431051 <strcmp@plt+0x2d8b9>
  431068:	mov    QWORD PTR [rsp+0x30],rdx
  43106d:	mov    rbx,QWORD PTR [rbp+0x8]
  431071:	mov    r15,QWORD PTR [rbx+0x10]
  431075:	mov    rcx,QWORD PTR [r15]
  431078:	cmp    DWORD PTR [rcx+0x18],0x0
  43107c:	je     43104c <strcmp@plt+0x2d8b4>
  43107e:	cmp    rbx,rbp
  431081:	je     43104c <strcmp@plt+0x2d8b4>
  431083:	mov    QWORD PTR [rsp+0x48],rbp
  431088:	cmp    BYTE PTR [r15+0xa],0x0
  43108d:	jne    4311f0 <strcmp@plt+0x2da58>
  431093:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43109d:	nop    DWORD PTR [rax]
  4310a0:	mov    rdi,QWORD PTR [r15]
  4310a3:	mov    rsi,QWORD PTR [rsp+0x28]
  4310a8:	call   423670 <strcmp@plt+0x1fed8>
  4310ad:	mov    r13d,eax
  4310b0:	mov    rbp,QWORD PTR [r14+0x8]
  4310b4:	cmp    rbp,r14
  4310b7:	je     4310e2 <strcmp@plt+0x2d94a>
  4310b9:	nop    DWORD PTR [rax+0x0]
  4310c0:	mov    r12,QWORD PTR [rbp+0x10]
  4310c4:	mov    rdi,QWORD PTR [r15]
  4310c7:	mov    rsi,QWORD PTR [r12+0x10]
  4310cc:	call   423670 <strcmp@plt+0x1fed8>
  4310d1:	test   eax,eax
  4310d3:	je     431180 <strcmp@plt+0x2d9e8>
  4310d9:	mov    rbp,QWORD PTR [rbp+0x8]
  4310dd:	cmp    rbp,r14
  4310e0:	jne    4310c0 <strcmp@plt+0x2d928>
  4310e2:	test   r13d,r13d
  4310e5:	mov    rbp,QWORD PTR [rsp+0x48]
  4310ea:	jne    4311f0 <strcmp@plt+0x2da58>
  4310f0:	mov    r12b,BYTE PTR [r15+0xb]
  4310f4:	mov    r13b,BYTE PTR [r15+0xc]
  4310f8:	mov    edi,0x38
  4310fd:	call   431d60 <strcmp@plt+0x2e5c8>
  431102:	test   rax,rax
  431105:	mov    rcx,rax
  431108:	mov    QWORD PTR [rsp+0x8],rax
  43110d:	je     4311a6 <strcmp@plt+0x2da0e>
  431113:	mov    rdi,QWORD PTR [rsp+0x38]
  431118:	call   423440 <strcmp@plt+0x1fca8>
  43111d:	mov    rcx,QWORD PTR [rsp+0x8]
  431122:	mov    QWORD PTR [rcx],rax
  431125:	mov    rdi,QWORD PTR [rsp+0x28]
  43112a:	call   423440 <strcmp@plt+0x1fca8>
  43112f:	mov    rcx,QWORD PTR [rsp+0x8]
  431134:	mov    QWORD PTR [rcx+0x10],rax
  431138:	mov    rdi,QWORD PTR [rsp+0x40]
  43113d:	call   423440 <strcmp@plt+0x1fca8>
  431142:	mov    rcx,QWORD PTR [rsp+0x8]
  431147:	mov    QWORD PTR [rcx+0x18],rax
  43114b:	mov    eax,DWORD PTR [rsp+0x1c]
  43114f:	mov    rcx,QWORD PTR [rsp+0x8]
  431154:	mov    WORD PTR [rcx+0x8],ax
  431158:	mov    rax,QWORD PTR [rsp+0x90]
  431160:	vmovups xmm0,XMMWORD PTR [rax]
  431164:	mov    rax,QWORD PTR [rsp+0x8]
  431169:	vmovups XMMWORD PTR [rax+0x20],xmm0
  43116e:	mov    BYTE PTR [rax+0x30],r12b
  431172:	mov    BYTE PTR [rax+0x31],r13b
  431176:	mov    rcx,rax
  431179:	mov    QWORD PTR [rsp+0x20],rax
  43117e:	jmp    4311ad <strcmp@plt+0x2da15>
  431180:	mov    al,BYTE PTR [r15+0xb]
  431184:	mov    BYTE PTR [r12+0x30],al
  431189:	mov    al,BYTE PTR [r15+0xc]
  43118d:	mov    BYTE PTR [r12+0x31],al
  431192:	mov    rdi,r12
  431195:	mov    rsi,QWORD PTR [rsp+0x10]
  43119a:	call   42baa0 <strcmp@plt+0x28308>
  43119f:	mov    rbp,QWORD PTR [rsp+0x48]
  4311a4:	jmp    4311f0 <strcmp@plt+0x2da58>
  4311a6:	xor    ecx,ecx
  4311a8:	mov    QWORD PTR [rsp+0x20],rcx
  4311ad:	mov    rdi,rax
  4311b0:	mov    rsi,QWORD PTR [rsp+0x10]
  4311b5:	call   42baa0 <strcmp@plt+0x28308>
  4311ba:	lea    rax,[rip+0x33bff]        # 464dc0 <strcmp@plt+0x61628>
  4311c1:	cmp    DWORD PTR [rax],0x2
  4311c4:	jl     4311f0 <strcmp@plt+0x2da58>
  4311c6:	mov    rdi,QWORD PTR [rsp+0x20]
  4311cb:	call   430df0 <strcmp@plt+0x2d658>
  4311d0:	mov    edi,0x6
  4311d5:	lea    rsi,[rip+0x1b327]        # 44c503 <strcmp@plt+0x48d6b>
  4311dc:	mov    rdx,rax
  4311df:	xor    eax,eax
  4311e1:	call   42e520 <strcmp@plt+0x2ad88>
  4311e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4311f0:	mov    rbx,QWORD PTR [rbx+0x8]
  4311f4:	cmp    rbx,rbp
  4311f7:	je     431040 <strcmp@plt+0x2d8a8>
  4311fd:	mov    r15,QWORD PTR [rbx+0x10]
  431201:	cmp    BYTE PTR [r15+0xa],0x0
  431206:	jne    4311f0 <strcmp@plt+0x2da58>
  431208:	jmp    4310a0 <strcmp@plt+0x2d908>
  43120d:	cmp    QWORD PTR [rsp+0x20],0x0
  431213:	je     431224 <strcmp@plt+0x2da8c>
  431215:	mov    rdi,QWORD PTR [rsp+0x8]
  43121a:	mov    rsi,r14
  43121d:	call   42baa0 <strcmp@plt+0x28308>
  431222:	jmp    431224 <strcmp@plt+0x2da8c>
  431224:	mov    rax,QWORD PTR [rsp+0x10]
  431229:	cmp    DWORD PTR [rax+0x18],0x0
  43122d:	mov    rbx,QWORD PTR [r14+0x8]
  431231:	jne    431264 <strcmp@plt+0x2dacc>
  431233:	jmp    4312aa <strcmp@plt+0x2db12>
  431235:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43123f:	nop
  431240:	mov    rbp,QWORD PTR [rbx+0x10]
  431244:	mov    rbx,QWORD PTR [rbx+0x8]
  431248:	mov    rdi,rbp
  43124b:	mov    rsi,QWORD PTR [rsp+0x10]
  431250:	call   42bc20 <strcmp@plt+0x28488>
  431255:	test   al,al
  431257:	jne    431264 <strcmp@plt+0x2dacc>
  431259:	mov    rdi,rbp
  43125c:	mov    rsi,r14
  43125f:	call   42be60 <strcmp@plt+0x286c8>
  431264:	cmp    rbx,r14
  431267:	jne    431240 <strcmp@plt+0x2daa8>
  431269:	mov    rdi,QWORD PTR [rsp+0x10]
  43126e:	call   42bff0 <strcmp@plt+0x28858>
  431273:	mov    eax,0x1
  431278:	add    rsp,0x58
  43127c:	pop    rbx
  43127d:	pop    r12
  43127f:	pop    r13
  431281:	pop    r14
  431283:	pop    r15
  431285:	pop    rbp
  431286:	ret    
  431287:	nop    WORD PTR [rax+rax*1+0x0]
  431290:	mov    rbp,QWORD PTR [rbx+0x10]
  431294:	mov    rsi,QWORD PTR [rbp+0x10]
  431298:	mov    rdi,QWORD PTR [rsp+0x28]
  43129d:	call   423670 <strcmp@plt+0x1fed8>
  4312a2:	test   eax,eax
  4312a4:	je     43131c <strcmp@plt+0x2db84>
  4312a6:	mov    rbx,QWORD PTR [rbx+0x8]
  4312aa:	cmp    rbx,r14
  4312ad:	jne    431290 <strcmp@plt+0x2daf8>
  4312af:	mov    bl,BYTE PTR [r12+0xb]
  4312b4:	mov    bpl,BYTE PTR [r12+0xc]
  4312b9:	mov    edi,0x38
  4312be:	call   431d60 <strcmp@plt+0x2e5c8>
  4312c3:	mov    r15,rax
  4312c6:	test   rax,rax
  4312c9:	je     431327 <strcmp@plt+0x2db8f>
  4312cb:	mov    rdi,QWORD PTR [rsp+0x38]
  4312d0:	call   423440 <strcmp@plt+0x1fca8>
  4312d5:	mov    QWORD PTR [r15],rax
  4312d8:	mov    rdi,QWORD PTR [rsp+0x28]
  4312dd:	call   423440 <strcmp@plt+0x1fca8>
  4312e2:	mov    QWORD PTR [r15+0x10],rax
  4312e6:	mov    rdi,QWORD PTR [rsp+0x40]
  4312eb:	call   423440 <strcmp@plt+0x1fca8>
  4312f0:	mov    QWORD PTR [r15+0x18],rax
  4312f4:	mov    eax,DWORD PTR [rsp+0x1c]
  4312f8:	mov    WORD PTR [r15+0x8],ax
  4312fd:	mov    rax,QWORD PTR [rsp+0x90]
  431305:	vmovups xmm0,XMMWORD PTR [rax]
  431309:	vmovups XMMWORD PTR [r15+0x20],xmm0
  43130f:	mov    BYTE PTR [r15+0x30],bl
  431313:	mov    BYTE PTR [r15+0x31],bpl
  431317:	mov    rbp,r15
  43131a:	jmp    431329 <strcmp@plt+0x2db91>
  43131c:	mov    WORD PTR [rbp+0x30],0x6401
  431322:	jmp    431269 <strcmp@plt+0x2dad1>
  431327:	xor    ebp,ebp
  431329:	mov    rdi,r15
  43132c:	mov    rsi,r14
  43132f:	call   42baa0 <strcmp@plt+0x28308>
  431334:	lea    rax,[rip+0x33a85]        # 464dc0 <strcmp@plt+0x61628>
  43133b:	cmp    DWORD PTR [rax],0x2
  43133e:	jl     431269 <strcmp@plt+0x2dad1>
  431344:	mov    rdi,rbp
  431347:	call   430df0 <strcmp@plt+0x2d658>
  43134c:	lea    rsi,[rip+0x1b1da]        # 44c52d <strcmp@plt+0x48d95>
  431353:	mov    edi,0x6
  431358:	mov    rdx,rax
  43135b:	xor    eax,eax
  43135d:	call   42e520 <strcmp@plt+0x2ad88>
  431362:	jmp    431269 <strcmp@plt+0x2dad1>
  431367:	nop    WORD PTR [rax+rax*1+0x0]
  431370:	push   rbp
  431371:	push   r15
  431373:	push   r14
  431375:	push   r13
  431377:	push   r12
  431379:	push   rbx
  43137a:	sub    rsp,0x38
  43137e:	mov    QWORD PTR [rsp+0x18],r9
  431383:	mov    DWORD PTR [rsp+0x8],r8d
  431388:	mov    rbx,rcx
  43138b:	mov    r15,rdx
  43138e:	mov    r13,rsi
  431391:	mov    rbp,rdi
  431394:	mov    rdi,QWORD PTR [rdi+0x8]
  431398:	mov    r14,QWORD PTR [rbp+0x30]
  43139c:	mov    QWORD PTR [rsp+0x30],rdi
  4313a1:	call   428cd0 <strcmp@plt+0x25538>
  4313a6:	mov    QWORD PTR [rsp+0x20],rax
  4313ab:	xor    eax,eax
  4313ad:	call   42c250 <strcmp@plt+0x28ab8>
  4313b2:	mov    r12,rax
  4313b5:	sub    rsp,0x8
  4313b9:	mov    QWORD PTR [rsp+0x30],rbp
  4313be:	mov    rdi,rbp
  4313c1:	mov    rsi,r13
  4313c4:	mov    rdx,r15
  4313c7:	mov    rcx,rbx
  4313ca:	mov    r8d,DWORD PTR [rsp+0x10]
  4313cf:	mov    r9,QWORD PTR [rsp+0x20]
  4313d4:	push   QWORD PTR [rsp+0x78]
  4313d8:	call   430f10 <strcmp@plt+0x2d778>
  4313dd:	add    rsp,0x10
  4313e1:	mov    QWORD PTR [rsp+0x10],r14
  4313e6:	mov    rax,QWORD PTR [r14]
  4313e9:	mov    rdi,QWORD PTR [rax]
  4313ec:	call   4365a0 <strcmp@plt+0x32e08>
  4313f1:	mov    rcx,QWORD PTR [rax+0x8]
  4313f5:	mov    QWORD PTR [rsp+0x8],rax
  4313fa:	cmp    rcx,rax
  4313fd:	je     431498 <strcmp@plt+0x2dd00>
  431403:	mov    r15,QWORD PTR [rsp+0x20]
  431408:	jmp    431420 <strcmp@plt+0x2dc88>
  43140a:	nop    WORD PTR [rax+rax*1+0x0]
  431410:	mov    rcx,QWORD PTR [rsp+0x18]
  431415:	mov    rcx,QWORD PTR [rcx+0x8]
  431419:	cmp    rcx,QWORD PTR [rsp+0x8]
  43141e:	je     431498 <strcmp@plt+0x2dd00>
  431420:	mov    QWORD PTR [rsp+0x18],rcx
  431425:	mov    r13,QWORD PTR [rcx+0x10]
  431429:	mov    r14,QWORD PTR [r13+0x8]
  43142d:	cmp    r14,r13
  431430:	je     431410 <strcmp@plt+0x2dc78>
  431432:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43143c:	nop    DWORD PTR [rax+0x0]
  431440:	mov    rbp,QWORD PTR [r14+0x10]
  431444:	mov    rdi,QWORD PTR [rbp+0x10]
  431448:	movzx  r8d,BYTE PTR [rbp+0x30]
  43144d:	movzx  r9d,BYTE PTR [rbp+0x31]
  431452:	mov    esi,0x1
  431457:	xor    edx,edx
  431459:	mov    ecx,0x1
  43145e:	push   0x0
  431460:	push   0xff
  431465:	call   428370 <strcmp@plt+0x24bd8>
  43146a:	add    rsp,0x10
  43146e:	mov    rbx,rax
  431471:	mov    rdi,r15
  431474:	mov    rsi,rax
  431477:	call   428ee0 <strcmp@plt+0x25748>
  43147c:	mov    rdi,r12
  43147f:	mov    rsi,rbx
  431482:	mov    rdx,rbp
  431485:	call   42c2c0 <strcmp@plt+0x28b28>
  43148a:	mov    r14,QWORD PTR [r14+0x8]
  43148e:	cmp    r14,r13
  431491:	jne    431440 <strcmp@plt+0x2dca8>
  431493:	jmp    431410 <strcmp@plt+0x2dc78>
  431498:	mov    rdi,QWORD PTR [rsp+0x8]
  43149d:	call   42bff0 <strcmp@plt+0x28858>
  4314a2:	mov    r14,QWORD PTR [rsp+0x20]
  4314a7:	mov    rdi,r14
  4314aa:	mov    rbp,QWORD PTR [rsp+0x30]
  4314af:	mov    rsi,rbp
  4314b2:	call   428c00 <strcmp@plt+0x25468>
  4314b7:	test   eax,eax
  4314b9:	je     4315c3 <strcmp@plt+0x2de2b>
  4314bf:	mov    rbx,QWORD PTR [rsp+0x10]
  4314c4:	mov    rax,QWORD PTR [rbx]
  4314c7:	mov    rdi,QWORD PTR [rax+0x8]
  4314cb:	call   42c610 <strcmp@plt+0x28e78>
  4314d0:	mov    rdi,rbp
  4314d3:	call   428bd0 <strcmp@plt+0x25438>
  4314d8:	mov    rax,QWORD PTR [rsp+0x28]
  4314dd:	mov    QWORD PTR [rax+0x8],r14
  4314e1:	mov    rax,QWORD PTR [rbx]
  4314e4:	mov    QWORD PTR [rax+0x8],r12
  4314e8:	lea    rbp,[rip+0x338d1]        # 464dc0 <strcmp@plt+0x61628>
  4314ef:	cmp    DWORD PTR [rbp+0x0],0x2
  4314f3:	jl     43151b <strcmp@plt+0x2dd83>
  4314f5:	mov    rdi,r14
  4314f8:	call   422e20 <strcmp@plt+0x1f688>
  4314fd:	lea    rsi,[rip+0x1b054]        # 44c558 <strcmp@plt+0x48dc0>
  431504:	mov    edi,0x6
  431509:	mov    rdx,rax
  43150c:	xor    eax,eax
  43150e:	call   42e520 <strcmp@plt+0x2ad88>
  431513:	mov    rax,QWORD PTR [rsp+0x10]
  431518:	mov    rax,QWORD PTR [rax]
  43151b:	mov    rdi,QWORD PTR [rax]
  43151e:	call   436520 <strcmp@plt+0x32d88>
  431523:	mov    r13,rax
  431526:	mov    r12,QWORD PTR [rax+0x8]
  43152a:	cmp    r12,rax
  43152d:	je     431590 <strcmp@plt+0x2ddf8>
  43152f:	lea    r15,[rip+0xfffffffffffff8ba]        # 430df0 <strcmp@plt+0x2d658>
  431536:	jmp    43156d <strcmp@plt+0x2ddd5>
  431538:	nop    DWORD PTR [rax+rax*1+0x0]
  431540:	mov    rax,QWORD PTR [rsp+0x10]
  431545:	mov    rax,QWORD PTR [rax]
  431548:	mov    rdi,QWORD PTR [rax]
  43154b:	mov    rsi,rbx
  43154e:	call   436340 <strcmp@plt+0x32ba8>
  431553:	mov    rdi,rax
  431556:	mov    rsi,r15
  431559:	mov    edx,0x6
  43155e:	call   42bce0 <strcmp@plt+0x28548>
  431563:	mov    r12,QWORD PTR [r12+0x8]
  431568:	cmp    r12,r13
  43156b:	je     431590 <strcmp@plt+0x2ddf8>
  43156d:	mov    rbx,QWORD PTR [r12+0x10]
  431572:	cmp    DWORD PTR [rbp+0x0],0x2
  431576:	jl     431540 <strcmp@plt+0x2dda8>
  431578:	mov    edi,0x6
  43157d:	lea    rsi,[rip+0x1b00c]        # 44c590 <strcmp@plt+0x48df8>
  431584:	mov    rdx,rbx
  431587:	xor    eax,eax
  431589:	call   42e520 <strcmp@plt+0x2ad88>
  43158e:	jmp    431540 <strcmp@plt+0x2dda8>
  431590:	mov    rdi,r13
  431593:	call   42bff0 <strcmp@plt+0x28858>
  431598:	mov    ebx,0x2
  43159d:	cmp    DWORD PTR [rbp+0x0],0x2
  4315a1:	jl     4315f7 <strcmp@plt+0x2de5f>
  4315a3:	mov    rdi,r14
  4315a6:	call   428d40 <strcmp@plt+0x255a8>
  4315ab:	lea    rsi,[rip+0x1afff]        # 44c5b1 <strcmp@plt+0x48e19>
  4315b2:	mov    edi,0x6
  4315b7:	mov    rdx,rax
  4315ba:	xor    eax,eax
  4315bc:	call   42e520 <strcmp@plt+0x2ad88>
  4315c1:	jmp    4315f7 <strcmp@plt+0x2de5f>
  4315c3:	lea    rax,[rip+0x337f6]        # 464dc0 <strcmp@plt+0x61628>
  4315ca:	cmp    DWORD PTR [rax],0x2
  4315cd:	jl     4315e2 <strcmp@plt+0x2de4a>
  4315cf:	lea    rsi,[rip+0x1b013]        # 44c5e9 <strcmp@plt+0x48e51>
  4315d6:	mov    edi,0x6
  4315db:	xor    eax,eax
  4315dd:	call   42e520 <strcmp@plt+0x2ad88>
  4315e2:	mov    rdi,r14
  4315e5:	call   428bd0 <strcmp@plt+0x25438>
  4315ea:	mov    rdi,r12
  4315ed:	call   42c610 <strcmp@plt+0x28e78>
  4315f2:	mov    ebx,0x1
  4315f7:	mov    eax,ebx
  4315f9:	add    rsp,0x38
  4315fd:	pop    rbx
  4315fe:	pop    r12
  431600:	pop    r13
  431602:	pop    r14
  431604:	pop    r15
  431606:	pop    rbp
  431607:	ret    
  431608:	nop    DWORD PTR [rax+rax*1+0x0]
  431610:	push   rbp
  431611:	push   r15
  431613:	push   r14
  431615:	push   r13
  431617:	push   r12
  431619:	push   rbx
  43161a:	push   rax
  43161b:	mov    r15,rsi
  43161e:	mov    r14,QWORD PTR [rdi+0x8]
  431622:	mov    r13,QWORD PTR [rdi+0x30]
  431626:	lea    rax,[rip+0x33793]        # 464dc0 <strcmp@plt+0x61628>
  43162d:	cmp    DWORD PTR [rax],0x2
  431630:	jl     43166e <strcmp@plt+0x2ded6>
  431632:	lea    rdi,[r15+0x20]
  431636:	call   437670 <strcmp@plt+0x33ed8>
  43163b:	mov    r12,rax
  43163e:	mov    rdi,QWORD PTR [r15+0x10]
  431642:	call   422e20 <strcmp@plt+0x1f688>
  431647:	mov    rbx,rax
  43164a:	mov    rdi,r14
  43164d:	call   422e20 <strcmp@plt+0x1f688>
  431652:	lea    rsi,[rip+0x1afc3]        # 44c61c <strcmp@plt+0x48e84>
  431659:	mov    edi,0x6
  43165e:	mov    rdx,r12
  431661:	mov    rcx,rbx
  431664:	mov    r8,rax
  431667:	xor    eax,eax
  431669:	call   42e520 <strcmp@plt+0x2ad88>
  43166e:	mov    rax,QWORD PTR [r13+0x0]
  431672:	mov    rdi,QWORD PTR [rax+0x8]
  431676:	call   42c6c0 <strcmp@plt+0x28f28>
  43167b:	mov    r12,rax
  43167e:	mov    rbp,QWORD PTR [rax+0x8]
  431682:	cmp    rbp,rax
  431685:	je     4316d7 <strcmp@plt+0x2df3f>
  431687:	nop    WORD PTR [rax+rax*1+0x0]
  431690:	mov    rbx,QWORD PTR [rbp+0x10]
  431694:	mov    rax,QWORD PTR [r13+0x0]
  431698:	mov    rdi,QWORD PTR [rax+0x8]
  43169c:	mov    rsi,rbx
  43169f:	call   42c540 <strcmp@plt+0x28da8>
  4316a4:	cmp    rax,r15
  4316a7:	je     4316b4 <strcmp@plt+0x2df1c>
  4316a9:	mov    rbp,QWORD PTR [rbp+0x8]
  4316ad:	cmp    rbp,r12
  4316b0:	jne    431690 <strcmp@plt+0x2def8>
  4316b2:	jmp    4316d7 <strcmp@plt+0x2df3f>
  4316b4:	mov    rax,QWORD PTR [r13+0x0]
  4316b8:	mov    rdi,QWORD PTR [rax+0x8]
  4316bc:	mov    rsi,rbx
  4316bf:	call   42c450 <strcmp@plt+0x28cb8>
  4316c4:	mov    rdi,r14
  4316c7:	mov    rsi,rbx
  4316ca:	call   4290d0 <strcmp@plt+0x25938>
  4316cf:	mov    rdi,rbx
  4316d2:	call   428670 <strcmp@plt+0x24ed8>
  4316d7:	mov    rdi,r12
  4316da:	call   42bff0 <strcmp@plt+0x28858>
  4316df:	mov    rax,QWORD PTR [r13+0x0]
  4316e3:	mov    rbx,QWORD PTR [rax]
  4316e6:	lea    rdi,[r15+0x20]
  4316ea:	call   437670 <strcmp@plt+0x33ed8>
  4316ef:	mov    rdi,rbx
  4316f2:	mov    rsi,rax
  4316f5:	call   436340 <strcmp@plt+0x32ba8>
  4316fa:	mov    rdi,r15
  4316fd:	mov    rsi,rax
  431700:	call   42bf10 <strcmp@plt+0x28778>
  431705:	mov    eax,0x1
  43170a:	add    rsp,0x8
  43170e:	pop    rbx
  43170f:	pop    r12
  431711:	pop    r13
  431713:	pop    r14
  431715:	pop    r15
  431717:	pop    rbp
  431718:	ret    
  431719:	nop    DWORD PTR [rax+0x0]
  431720:	push   r15
  431722:	push   r14
  431724:	push   r13
  431726:	push   r12
  431728:	push   rbx
  431729:	mov    r15,rdx
  43172c:	mov    r14,rsi
  43172f:	mov    rax,QWORD PTR [rdi+0x30]
  431733:	mov    rax,QWORD PTR [rax]
  431736:	mov    rbx,QWORD PTR [rax]
  431739:	mov    rdi,rsi
  43173c:	call   437670 <strcmp@plt+0x33ed8>
  431741:	mov    rdi,rbx
  431744:	mov    rsi,rax
  431747:	call   436340 <strcmp@plt+0x32ba8>
  43174c:	test   rax,rax
  43174f:	je     43177d <strcmp@plt+0x2dfe5>
  431751:	mov    r12,rax
  431754:	mov    rbx,QWORD PTR [rax+0x8]
  431758:	cmp    rbx,r12
  43175b:	je     43177d <strcmp@plt+0x2dfe5>
  43175d:	nop    DWORD PTR [rax]
  431760:	mov    r13,QWORD PTR [rbx+0x10]
  431764:	mov    rdi,QWORD PTR [r13+0x10]
  431768:	mov    rsi,r15
  43176b:	call   423670 <strcmp@plt+0x1fed8>
  431770:	test   eax,eax
  431772:	je     4317bd <strcmp@plt+0x2e025>
  431774:	mov    rbx,QWORD PTR [rbx+0x8]
  431778:	cmp    rbx,r12
  43177b:	jne    431760 <strcmp@plt+0x2dfc8>
  43177d:	lea    rax,[rip+0x3363c]        # 464dc0 <strcmp@plt+0x61628>
  431784:	cmp    DWORD PTR [rax],0x2
  431787:	jge    43178e <strcmp@plt+0x2dff6>
  431789:	xor    r13d,r13d
  43178c:	jmp    4317bd <strcmp@plt+0x2e025>
  43178e:	mov    rdi,r15
  431791:	call   422e20 <strcmp@plt+0x1f688>
  431796:	mov    r15,rax
  431799:	mov    rdi,r14
  43179c:	call   437670 <strcmp@plt+0x33ed8>
  4317a1:	lea    rsi,[rip+0x1aed1]        # 44c679 <strcmp@plt+0x48ee1>
  4317a8:	xor    r13d,r13d
  4317ab:	mov    edi,0x6
  4317b0:	mov    rdx,r15
  4317b3:	mov    rcx,rax
  4317b6:	xor    eax,eax
  4317b8:	call   42e520 <strcmp@plt+0x2ad88>
  4317bd:	mov    rax,r13
  4317c0:	pop    rbx
  4317c1:	pop    r12
  4317c3:	pop    r13
  4317c5:	pop    r14
  4317c7:	pop    r15
  4317c9:	ret    
  4317ca:	nop    WORD PTR [rax+rax*1+0x0]
  4317d0:	mov    rax,QWORD PTR [rdi]
  4317d3:	ret    
  4317d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4317de:	xchg   ax,ax
  4317e0:	mov    QWORD PTR [rdi],rsi
  4317e3:	ret    
  4317e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4317ee:	xchg   ax,ax
  4317f0:	mov    rax,QWORD PTR [rdi+0x8]
  4317f4:	ret    
  4317f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4317ff:	nop
  431800:	push   r14
  431802:	push   rbx
  431803:	push   rax
  431804:	mov    r14,rdx
  431807:	mov    rbx,rdi
  43180a:	mov    QWORD PTR [rdi+0x8],rsi
  43180e:	test   rdx,rdx
  431811:	jne    431832 <strcmp@plt+0x2e09a>
  431813:	lea    rax,[rip+0x335a6]        # 464dc0 <strcmp@plt+0x61628>
  43181a:	cmp    DWORD PTR [rax],0x0
  43181d:	jle    431832 <strcmp@plt+0x2e09a>
  43181f:	lea    rsi,[rip+0x1ae8a]        # 44c6b0 <strcmp@plt+0x48f18>
  431826:	mov    edi,0x5
  43182b:	xor    eax,eax
  43182d:	call   42e520 <strcmp@plt+0x2ad88>
  431832:	mov    QWORD PTR [rbx+0x10],r14
  431836:	add    rsp,0x8
  43183a:	pop    rbx
  43183b:	pop    r14
  43183d:	ret    
  43183e:	xchg   ax,ax
  431840:	mov    rax,QWORD PTR [rdi]
  431843:	ret    
  431844:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43184e:	xchg   ax,ax
  431850:	mov    edi,0x20
  431855:	jmp    431d60 <strcmp@plt+0x2e5c8>
  43185a:	nop    WORD PTR [rax+rax*1+0x0]
  431860:	push   r15
  431862:	push   r14
  431864:	push   rbx
  431865:	mov    rbx,rdi
  431868:	mov    edi,0x20
  43186d:	call   431d60 <strcmp@plt+0x2e5c8>
  431872:	test   rax,rax
  431875:	je     4318af <strcmp@plt+0x2e117>
  431877:	mov    r14,rax
  43187a:	mov    QWORD PTR [rax],rbx
  43187d:	mov    edi,0x10
  431882:	call   431d90 <strcmp@plt+0x2e5f8>
  431887:	test   rax,rax
  43188a:	je     4318de <strcmp@plt+0x2e146>
  43188c:	mov    rbx,rax
  43188f:	lea    r15,[rip+0xffffffffffffa75a]        # 42bff0 <strcmp@plt+0x28858>
  431896:	mov    rdi,r15
  431899:	call   435e70 <strcmp@plt+0x326d8>
  43189e:	mov    QWORD PTR [rbx],rax
  4318a1:	mov    rdi,r15
  4318a4:	call   435e70 <strcmp@plt+0x326d8>
  4318a9:	mov    QWORD PTR [rbx+0x8],rax
  4318ad:	jmp    4318e0 <strcmp@plt+0x2e148>
  4318af:	lea    rax,[rip+0x3350a]        # 464dc0 <strcmp@plt+0x61628>
  4318b6:	cmp    DWORD PTR [rax],0x0
  4318b9:	jle    4318ed <strcmp@plt+0x2e155>
  4318bb:	mov    rdi,rbx
  4318be:	call   422e20 <strcmp@plt+0x1f688>
  4318c3:	lea    rsi,[rip+0x1ae2e]        # 44c6f8 <strcmp@plt+0x48f60>
  4318ca:	xor    r14d,r14d
  4318cd:	mov    edi,0x5
  4318d2:	mov    rdx,rax
  4318d5:	xor    eax,eax
  4318d7:	call   42e520 <strcmp@plt+0x2ad88>
  4318dc:	jmp    4318e4 <strcmp@plt+0x2e14c>
  4318de:	xor    ebx,ebx
  4318e0:	mov    QWORD PTR [r14+0x18],rbx
  4318e4:	mov    rax,r14
  4318e7:	pop    rbx
  4318e8:	pop    r14
  4318ea:	pop    r15
  4318ec:	ret    
  4318ed:	xor    r14d,r14d
  4318f0:	jmp    4318e4 <strcmp@plt+0x2e14c>
  4318f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4318fc:	nop    DWORD PTR [rax+0x0]
  431900:	mov    QWORD PTR [rdi],rsi
  431903:	ret    
  431904:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43190e:	xchg   ax,ax
  431910:	push   rbp
  431911:	push   r15
  431913:	push   r14
  431915:	push   r13
  431917:	push   r12
  431919:	push   rbx
  43191a:	push   rax
  43191b:	test   rdi,rdi
  43191e:	je     4319f2 <strcmp@plt+0x2e25a>
  431924:	mov    r15,rdi
  431927:	mov    rax,QWORD PTR [rdi]
  43192a:	mov    rcx,QWORD PTR [rax+0x28]
  43192e:	mov    r13,QWORD PTR [rcx+0x8]
  431932:	cmp    r13,rcx
  431935:	je     43198e <strcmp@plt+0x2e1f6>
  431937:	lea    r14,[rip+0x3ec72]        # 4705b0 <strcmp@plt+0x6ce18>
  43193e:	lea    r12,[rip+0x3ec73]        # 4705b8 <strcmp@plt+0x6ce20>
  431945:	jmp    43195a <strcmp@plt+0x2e1c2>
  431947:	nop    WORD PTR [rax+rax*1+0x0]
  431950:	mov    r13,QWORD PTR [r13+0x8]
  431954:	cmp    r13,QWORD PTR [rax+0x28]
  431958:	je     43198e <strcmp@plt+0x2e1f6>
  43195a:	mov    rbx,QWORD PTR [r13+0x10]
  43195e:	cmp    DWORD PTR [rbx+0x18],0x0
  431962:	je     431950 <strcmp@plt+0x2e1b8>
  431964:	mov    rbp,QWORD PTR [rbx+0x8]
  431968:	cmp    rbp,rbx
  43196b:	je     431950 <strcmp@plt+0x2e1b8>
  43196d:	nop    DWORD PTR [rax]
  431970:	mov    rdi,QWORD PTR [rbp+0x10]
  431974:	mov    rsi,QWORD PTR [r14]
  431977:	mov    rdx,QWORD PTR [r12]
  43197b:	call   437270 <strcmp@plt+0x33ad8>
  431980:	mov    rbp,QWORD PTR [rbp+0x8]
  431984:	cmp    rbp,rbx
  431987:	jne    431970 <strcmp@plt+0x2e1d8>
  431989:	mov    rax,QWORD PTR [r15]
  43198c:	jmp    431950 <strcmp@plt+0x2e1b8>
  43198e:	lea    rax,[rip+0x3ec1b]        # 4705b0 <strcmp@plt+0x6ce18>
  431995:	mov    rsi,QWORD PTR [rax]
  431998:	lea    rax,[rip+0x3ec19]        # 4705b8 <strcmp@plt+0x6ce20>
  43199f:	mov    rdx,QWORD PTR [rax]
  4319a2:	mov    rdi,r15
  4319a5:	call   437270 <strcmp@plt+0x33ad8>
  4319aa:	mov    rdi,QWORD PTR [r15]
  4319ad:	call   428bd0 <strcmp@plt+0x25438>
  4319b2:	mov    rdi,QWORD PTR [r15+0x8]
  4319b6:	test   rdi,rdi
  4319b9:	je     4319bf <strcmp@plt+0x2e227>
  4319bb:	call   QWORD PTR [r15+0x10]
  4319bf:	mov    r14,QWORD PTR [r15+0x18]
  4319c3:	mov    rdi,QWORD PTR [r14]
  4319c6:	call   436460 <strcmp@plt+0x32cc8>
  4319cb:	mov    rdi,QWORD PTR [r14+0x8]
  4319cf:	call   436460 <strcmp@plt+0x32cc8>
  4319d4:	mov    rdi,r14
  4319d7:	call   403790 <free@plt>
  4319dc:	mov    rdi,r15
  4319df:	add    rsp,0x8
  4319e3:	pop    rbx
  4319e4:	pop    r12
  4319e6:	pop    r13
  4319e8:	pop    r14
  4319ea:	pop    r15
  4319ec:	pop    rbp
  4319ed:	jmp    403790 <free@plt>
  4319f2:	lea    rdi,[rip+0x1ad51]        # 44c74a <strcmp@plt+0x48fb2>
  4319f9:	lea    rsi,[rip+0x1ad4e]        # 44c74e <strcmp@plt+0x48fb6>
  431a00:	lea    rcx,[rip+0x1ad5d]        # 44c764 <strcmp@plt+0x48fcc>
  431a07:	mov    edx,0x66
  431a0c:	call   4032b0 <__assert_fail@plt>
  431a11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  431a20:	push   rbx
  431a21:	mov    ebx,esi
  431a23:	cmp    esi,0x5
  431a26:	jl     431a3a <strcmp@plt+0x2e2a2>
  431a28:	lea    rax,[rip+0x33391]        # 464dc0 <strcmp@plt+0x61628>
  431a2f:	mov    eax,DWORD PTR [rax]
  431a31:	add    eax,0x4
  431a34:	cmp    eax,ebx
  431a36:	jge    431a3a <strcmp@plt+0x2e2a2>
  431a38:	pop    rbx
  431a39:	ret    
  431a3a:	mov    rdi,QWORD PTR [rdi]
  431a3d:	call   428d40 <strcmp@plt+0x255a8>
  431a42:	mov    edi,ebx
  431a44:	mov    rsi,rax
  431a47:	xor    eax,eax
  431a49:	pop    rbx
  431a4a:	jmp    42e520 <strcmp@plt+0x2ad88>
  431a4f:	nop
  431a50:	mov    rdi,QWORD PTR [rdi]
  431a53:	jmp    428d40 <strcmp@plt+0x255a8>
  431a58:	nop    DWORD PTR [rax+rax*1+0x0]
  431a60:	push   rbp
  431a61:	push   r15
  431a63:	push   r14
  431a65:	push   r13
  431a67:	push   r12
  431a69:	push   rbx
  431a6a:	sub    rsp,0x28
  431a6e:	mov    rbx,rdx
  431a71:	mov    rax,QWORD PTR [rdi]
  431a74:	mov    QWORD PTR [rsp+0x8],rax
  431a79:	mov    r14,QWORD PTR [rdi+0x18]
  431a7d:	mov    QWORD PTR [rsp+0x10],rsi
  431a82:	mov    rbp,QWORD PTR [rsi]
  431a85:	mov    r15,QWORD PTR [r14]
  431a88:	mov    rdi,rbp
  431a8b:	call   422e20 <strcmp@plt+0x1f688>
  431a90:	mov    rdi,r15
  431a93:	mov    rsi,rax
  431a96:	call   436340 <strcmp@plt+0x32ba8>
  431a9b:	test   rax,rax
  431a9e:	je     431b59 <strcmp@plt+0x2e3c1>
  431aa4:	mov    r15,rax
  431aa7:	mov    QWORD PTR [rsp+0x18],rbx
  431aac:	mov    QWORD PTR [rsp+0x20],rbp
  431ab1:	mov    rbp,QWORD PTR [rax+0x8]
  431ab5:	cmp    rbp,r15
  431ab8:	jne    431ac9 <strcmp@plt+0x2e331>
  431aba:	jmp    431b39 <strcmp@plt+0x2e3a1>
  431abf:	nop
  431ac0:	mov    rbp,QWORD PTR [rbp+0x8]
  431ac4:	cmp    rbp,r15
  431ac7:	je     431b39 <strcmp@plt+0x2e3a1>
  431ac9:	mov    r12,QWORD PTR [rbp+0x10]
  431acd:	mov    r13,QWORD PTR [r14+0x8]
  431ad1:	mov    rdi,r12
  431ad4:	call   422e20 <strcmp@plt+0x1f688>
  431ad9:	mov    rdi,r13
  431adc:	mov    rsi,rax
  431adf:	call   436340 <strcmp@plt+0x32ba8>
  431ae4:	mov    rbx,rax
  431ae7:	mov    rdi,QWORD PTR [rsp+0x10]
  431aec:	mov    rsi,rax
  431aef:	call   42bf10 <strcmp@plt+0x28778>
  431af4:	cmp    DWORD PTR [rbx+0x18],0x0
  431af8:	jne    431ac0 <strcmp@plt+0x2e328>
  431afa:	mov    rbx,QWORD PTR [r14+0x8]
  431afe:	mov    rdi,r12
  431b01:	call   422e20 <strcmp@plt+0x1f688>
  431b06:	mov    rdi,rbx
  431b09:	mov    rsi,rax
  431b0c:	call   4361c0 <strcmp@plt+0x32a28>
  431b11:	mov    rbx,QWORD PTR [rsp+0x8]
  431b16:	mov    rdi,rbx
  431b19:	mov    rsi,r12
  431b1c:	call   4290a0 <strcmp@plt+0x25908>
  431b21:	mov    r12,rax
  431b24:	mov    rdi,rbx
  431b27:	mov    rsi,rax
  431b2a:	call   4290d0 <strcmp@plt+0x25938>
  431b2f:	mov    rdi,r12
  431b32:	call   428670 <strcmp@plt+0x24ed8>
  431b37:	jmp    431ac0 <strcmp@plt+0x2e328>
  431b39:	mov    rbx,QWORD PTR [r14]
  431b3c:	mov    rbp,QWORD PTR [rsp+0x20]
  431b41:	mov    rdi,rbp
  431b44:	call   422e20 <strcmp@plt+0x1f688>
  431b49:	mov    rdi,rbx
  431b4c:	mov    rsi,rax
  431b4f:	call   4361c0 <strcmp@plt+0x32a28>
  431b54:	mov    rbx,QWORD PTR [rsp+0x18]
  431b59:	lea    rsi,[rip+0xffffffffffff18e0]        # 423440 <strcmp@plt+0x1fca8>
  431b60:	mov    rdi,rbx
  431b63:	call   42ba20 <strcmp@plt+0x28288>
  431b68:	mov    r13,rax
  431b6b:	mov    rbx,QWORD PTR [r14]
  431b6e:	mov    rdi,rbp
  431b71:	call   422e20 <strcmp@plt+0x1f688>
  431b76:	mov    rdi,rax
  431b79:	call   403710 <strdup@plt>
  431b7e:	mov    rdi,rbx
  431b81:	mov    rsi,rax
  431b84:	mov    rdx,r13
  431b87:	call   435eb0 <strcmp@plt+0x32718>
  431b8c:	mov    r12,QWORD PTR [r13+0x8]
  431b90:	cmp    r12,r13
  431b93:	jne    431bbb <strcmp@plt+0x2e423>
  431b95:	jmp    431c46 <strcmp@plt+0x2e4ae>
  431b9a:	nop    WORD PTR [rax+rax*1+0x0]
  431ba0:	mov    rdi,QWORD PTR [rsp+0x10]
  431ba5:	mov    rsi,rbx
  431ba8:	call   42baa0 <strcmp@plt+0x28308>
  431bad:	mov    r12,QWORD PTR [r12+0x8]
  431bb2:	cmp    r12,r13
  431bb5:	je     431c46 <strcmp@plt+0x2e4ae>
  431bbb:	mov    r15,QWORD PTR [r12+0x10]
  431bc0:	mov    rbx,QWORD PTR [r14+0x8]
  431bc4:	mov    rdi,r15
  431bc7:	call   422e20 <strcmp@plt+0x1f688>
  431bcc:	mov    rdi,rbx
  431bcf:	mov    rsi,rax
  431bd2:	call   436340 <strcmp@plt+0x32ba8>
  431bd7:	mov    rbx,rax
  431bda:	test   rax,rax
  431bdd:	jne    431ba0 <strcmp@plt+0x2e408>
  431bdf:	call   42b980 <strcmp@plt+0x281e8>
  431be4:	mov    rbx,rax
  431be7:	mov    rbp,QWORD PTR [r14+0x8]
  431beb:	mov    rdi,r15
  431bee:	call   422e20 <strcmp@plt+0x1f688>
  431bf3:	mov    rdi,rax
  431bf6:	call   403710 <strdup@plt>
  431bfb:	mov    rdi,rbp
  431bfe:	mov    rsi,rax
  431c01:	mov    rdx,rbx
  431c04:	call   435eb0 <strcmp@plt+0x32718>
  431c09:	mov    rdi,r15
  431c0c:	mov    esi,0x1
  431c11:	xor    edx,edx
  431c13:	mov    ecx,0x1
  431c18:	mov    r8d,0x1
  431c1e:	mov    r9d,0x64
  431c24:	push   0x0
  431c26:	push   0xff
  431c2b:	call   428370 <strcmp@plt+0x24bd8>
  431c30:	add    rsp,0x10
  431c34:	mov    rdi,QWORD PTR [rsp+0x8]
  431c39:	mov    rsi,rax
  431c3c:	call   428ee0 <strcmp@plt+0x25748>
  431c41:	jmp    431ba0 <strcmp@plt+0x2e408>
  431c46:	add    rsp,0x28
  431c4a:	pop    rbx
  431c4b:	pop    r12
  431c4d:	pop    r13
  431c4f:	pop    r14
  431c51:	pop    r15
  431c53:	pop    rbp
  431c54:	ret    
  431c55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431c5f:	nop
  431c60:	push   r15
  431c62:	push   r14
  431c64:	push   r13
  431c66:	push   r12
  431c68:	push   rbx
  431c69:	mov    rbx,rdi
  431c6c:	lea    rdi,[rip+0xffffffffffff101d]        # 422c90 <strcmp@plt+0x1f4f8>
  431c73:	call   42b9b0 <strcmp@plt+0x28218>
  431c78:	mov    r14,rax
  431c7b:	mov    rax,QWORD PTR [rbx+0x18]
  431c7f:	mov    rdi,QWORD PTR [rax+0x8]
  431c83:	call   436520 <strcmp@plt+0x32d88>
  431c88:	mov    r15,rax
  431c8b:	mov    rbx,QWORD PTR [rax+0x8]
  431c8f:	cmp    rbx,rax
  431c92:	je     431ccd <strcmp@plt+0x2e535>
  431c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431c9e:	xchg   ax,ax
  431ca0:	mov    r12,QWORD PTR [rbx+0x10]
  431ca4:	xor    eax,eax
  431ca6:	call   422c80 <strcmp@plt+0x1f4e8>
  431cab:	mov    r13,rax
  431cae:	mov    rdi,r12
  431cb1:	mov    rsi,rax
  431cb4:	call   423940 <strcmp@plt+0x201a8>
  431cb9:	mov    rdi,r13
  431cbc:	mov    rsi,r14
  431cbf:	call   42baa0 <strcmp@plt+0x28308>
  431cc4:	mov    rbx,QWORD PTR [rbx+0x8]
  431cc8:	cmp    rbx,r15
  431ccb:	jne    431ca0 <strcmp@plt+0x2e508>
  431ccd:	mov    rdi,r15
  431cd0:	call   42bff0 <strcmp@plt+0x28858>
  431cd5:	mov    rax,r14
  431cd8:	pop    rbx
  431cd9:	pop    r12
  431cdb:	pop    r13
  431cdd:	pop    r14
  431cdf:	pop    r15
  431ce1:	ret    
  431ce2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431cec:	nop    DWORD PTR [rax+0x0]
  431cf0:	push   rbx
  431cf1:	mov    rax,QWORD PTR [rdi+0x18]
  431cf5:	mov    rbx,QWORD PTR [rax]
  431cf8:	mov    rdi,rsi
  431cfb:	call   422e20 <strcmp@plt+0x1f688>
  431d00:	mov    rdi,rbx
  431d03:	mov    rsi,rax
  431d06:	pop    rbx
  431d07:	jmp    436340 <strcmp@plt+0x32ba8>
  431d0c:	nop    DWORD PTR [rax+0x0]
  431d10:	push   rax
  431d11:	test   rdi,rdi
  431d14:	je     431d27 <strcmp@plt+0x2e58f>
  431d16:	test   rsi,rsi
  431d19:	je     431d27 <strcmp@plt+0x2e58f>
  431d1b:	call   4032d0 <calloc@plt>
  431d20:	test   rax,rax
  431d23:	jne    431d36 <strcmp@plt+0x2e59e>
  431d25:	jmp    431d38 <strcmp@plt+0x2e5a0>
  431d27:	mov    edi,0x1
  431d2c:	call   403520 <malloc@plt>
  431d31:	test   rax,rax
  431d34:	je     431d38 <strcmp@plt+0x2e5a0>
  431d36:	pop    rcx
  431d37:	ret    
  431d38:	call   431d40 <strcmp@plt+0x2e5a8>
  431d3d:	nop    DWORD PTR [rax]
  431d40:	push   rax
  431d41:	lea    rsi,[rip+0x1aa6a]        # 44c7b2 <strcmp@plt+0x4901a>
  431d48:	mov    edi,0x1
  431d4d:	xor    eax,eax
  431d4f:	call   42e520 <strcmp@plt+0x2ad88>
  431d54:	call   403270 <abort@plt>
  431d59:	nop    DWORD PTR [rax+0x0]
  431d60:	push   rax
  431d61:	test   rdi,rdi
  431d64:	je     431d7a <strcmp@plt+0x2e5e2>
  431d66:	mov    rsi,rdi
  431d69:	mov    edi,0x1
  431d6e:	call   4032d0 <calloc@plt>
  431d73:	test   rax,rax
  431d76:	je     431d89 <strcmp@plt+0x2e5f1>
  431d78:	pop    rcx
  431d79:	ret    
  431d7a:	mov    edi,0x1
  431d7f:	call   403520 <malloc@plt>
  431d84:	test   rax,rax
  431d87:	jne    431d78 <strcmp@plt+0x2e5e0>
  431d89:	call   431d40 <strcmp@plt+0x2e5a8>
  431d8e:	xchg   ax,ax
  431d90:	push   rax
  431d91:	test   rdi,rdi
  431d94:	mov    eax,0x1
  431d99:	cmove  rdi,rax
  431d9d:	call   403520 <malloc@plt>
  431da2:	test   rax,rax
  431da5:	je     431da9 <strcmp@plt+0x2e611>
  431da7:	pop    rcx
  431da8:	ret    
  431da9:	call   431d40 <strcmp@plt+0x2e5a8>
  431dae:	xchg   ax,ax
  431db0:	push   rax
  431db1:	test   rsi,rsi
  431db4:	mov    eax,0x1
  431db9:	cmove  rsi,rax
  431dbd:	call   403660 <realloc@plt>
  431dc2:	test   rax,rax
  431dc5:	je     431dc9 <strcmp@plt+0x2e631>
  431dc7:	pop    rcx
  431dc8:	ret    
  431dc9:	call   431d40 <strcmp@plt+0x2e5a8>
  431dce:	xchg   ax,ax
  431dd0:	push   r14
  431dd2:	push   rbx
  431dd3:	push   rax
  431dd4:	mov    rbx,rsi
  431dd7:	mov    r14,rdi
  431dda:	test   rsi,rsi
  431ddd:	mov    edi,0x1
  431de2:	cmovne rdi,rsi
  431de6:	call   403520 <malloc@plt>
  431deb:	test   rax,rax
  431dee:	je     431e05 <strcmp@plt+0x2e66d>
  431df0:	mov    rdi,rax
  431df3:	mov    rsi,r14
  431df6:	mov    rdx,rbx
  431df9:	add    rsp,0x8
  431dfd:	pop    rbx
  431dfe:	pop    r14
  431e00:	jmp    403330 <memcpy@plt>
  431e05:	call   431d40 <strcmp@plt+0x2e5a8>
  431e0a:	nop    WORD PTR [rax+rax*1+0x0]
  431e10:	push   r15
  431e12:	push   r14
  431e14:	push   rbx
  431e15:	mov    r15,rsi
  431e18:	mov    r14,rdi
  431e1b:	mov    rax,rsi
  431e1e:	inc    rax
  431e21:	mov    edi,0x1
  431e26:	cmovne rdi,rax
  431e2a:	call   403520 <malloc@plt>
  431e2f:	test   rax,rax
  431e32:	je     431e53 <strcmp@plt+0x2e6bb>
  431e34:	mov    rbx,rax
  431e37:	mov    rdi,rax
  431e3a:	mov    rsi,r14
  431e3d:	mov    rdx,r15
  431e40:	call   403330 <memcpy@plt>
  431e45:	mov    BYTE PTR [rbx+r15*1],0x0
  431e4a:	mov    rax,rbx
  431e4d:	pop    rbx
  431e4e:	pop    r14
  431e50:	pop    r15
  431e52:	ret    
  431e53:	call   431d40 <strcmp@plt+0x2e5a8>
  431e58:	nop    DWORD PTR [rax+rax*1+0x0]
  431e60:	push   r15
  431e62:	push   r14
  431e64:	push   rbx
  431e65:	mov    r14,rdi
  431e68:	call   4031e0 <strlen@plt>
  431e6d:	mov    r15,rax
  431e70:	inc    rax
  431e73:	mov    edi,0x1
  431e78:	cmovne rdi,rax
  431e7c:	call   403520 <malloc@plt>
  431e81:	test   rax,rax
  431e84:	je     431ea5 <strcmp@plt+0x2e70d>
  431e86:	mov    rbx,rax
  431e89:	mov    rdi,rax
  431e8c:	mov    rsi,r14
  431e8f:	mov    rdx,r15
  431e92:	call   403330 <memcpy@plt>
  431e97:	mov    BYTE PTR [rbx+r15*1],0x0
  431e9c:	mov    rax,rbx
  431e9f:	pop    rbx
  431ea0:	pop    r14
  431ea2:	pop    r15
  431ea4:	ret    
  431ea5:	call   431d40 <strcmp@plt+0x2e5a8>
  431eaa:	nop    WORD PTR [rax+rax*1+0x0]
  431eb0:	push   rax
  431eb1:	mov    rcx,rdx
  431eb4:	mov    r8,rsi
  431eb7:	mov    rdx,rdi
  431eba:	mov    eax,DWORD PTR [rip+0x3d9ac]        # 46f86c <strcmp@plt+0x6c0d4>
  431ec0:	lea    esi,[rax+0x1]
  431ec3:	mov    DWORD PTR [rip+0x3d9a3],esi        # 46f86c <strcmp@plt+0x6c0d4>
  431ec9:	cmp    eax,0x1
  431ecc:	je     431eea <strcmp@plt+0x2e752>
  431ece:	test   eax,eax
  431ed0:	jne    431f02 <strcmp@plt+0x2e76a>
  431ed2:	lea    rsi,[rip+0x1a8b9]        # 44c792 <strcmp@plt+0x48ffa>
  431ed9:	mov    edi,0x1
  431ede:	xor    eax,eax
  431ee0:	call   42e520 <strcmp@plt+0x2ad88>
  431ee5:	call   403270 <abort@plt>
  431eea:	mov    rax,QWORD PTR [rip+0x320b7]        # 463fa8 <strcmp@plt+0x60810>
  431ef1:	mov    rdi,QWORD PTR [rax]
  431ef4:	lea    rsi,[rip+0x1a897]        # 44c792 <strcmp@plt+0x48ffa>
  431efb:	xor    eax,eax
  431efd:	call   4035a0 <fprintf@plt>
  431f02:	call   403270 <abort@plt>
  431f07:	nop    WORD PTR [rax+rax*1+0x0]
  431f10:	mov    eax,edi
  431f12:	bswap  eax
  431f14:	shl    rax,0x20
  431f18:	shr    rdi,0x20
  431f1c:	bswap  edi
  431f1e:	or     rax,rdi
  431f21:	ret    
  431f22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431f2c:	nop    DWORD PTR [rax+0x0]
  431f30:	push   rbx
  431f31:	mov    edi,0x8
  431f36:	call   403520 <malloc@plt>
  431f3b:	mov    rbx,rax
  431f3e:	mov    edi,0x1
  431f43:	mov    esi,0x28
  431f48:	call   4032d0 <calloc@plt>
  431f4d:	mov    QWORD PTR [rbx],rax
  431f50:	mov    rax,rbx
  431f53:	pop    rbx
  431f54:	ret    
  431f55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  431f5f:	nop
  431f60:	push   rbp
  431f61:	push   r15
  431f63:	push   r14
  431f65:	push   r13
  431f67:	push   r12
  431f69:	push   rbx
  431f6a:	push   rax
  431f6b:	mov    r14,rdx
  431f6e:	mov    r12,rsi
  431f71:	mov    r15,rdi
  431f74:	mov    edi,0x8
  431f79:	call   431d90 <strcmp@plt+0x2e5f8>
  431f7e:	mov    QWORD PTR [rax],r12
  431f81:	mov    rsi,QWORD PTR [r14]
  431f84:	mov    rdi,rax
  431f87:	call   42baa0 <strcmp@plt+0x28308>
  431f8c:	mov    r13,QWORD PTR [r15]
  431f8f:	mov    eax,DWORD PTR [r13+0x8]
  431f93:	cmp    eax,DWORD PTR [r13+0xc]
  431f97:	jb     431fb8 <strcmp@plt+0x2e820>
  431f99:	mov    eax,DWORD PTR [r13+0x0]
  431f9d:	mov    ecx,DWORD PTR [r13+0x4]
  431fa1:	add    ecx,ecx
  431fa3:	xor    edx,edx
  431fa5:	cmp    eax,ecx
  431fa7:	setbe  dl
  431faa:	lea    esi,[rax+rdx*2]
  431fad:	add    esi,0xffffffff
  431fb0:	mov    rdi,r13
  431fb3:	call   432630 <strcmp@plt+0x2ee98>
  431fb8:	mov    r8d,DWORD PTR [r13+0x0]
  431fbc:	lea    r10d,[r8-0x1]
  431fc0:	mov    rax,r12
  431fc3:	shr    rax,0x21
  431fc7:	xor    eax,r12d
  431fca:	mov    ecx,r12d
  431fcd:	shl    ecx,0xb
  431fd0:	xor    ecx,eax
  431fd2:	mov    r11d,r10d
  431fd5:	and    r11d,ecx
  431fd8:	mov    r9,QWORD PTR [r13+0x10]
  431fdc:	mov    eax,r11d
  431fdf:	shr    eax,0x4
  431fe2:	lea    edx,[r11+r11*1]
  431fe6:	mov    esi,0x2
  431feb:	shlx   edx,esi,edx
  431ff0:	test   DWORD PTR [r9+rax*4],edx
  431ff4:	je     431ffe <strcmp@plt+0x2e866>
  431ff6:	mov    edx,r11d
  431ff9:	jmp    432087 <strcmp@plt+0x2e8ef>
  431ffe:	mov    eax,ecx
  432000:	shr    eax,0x3
  432003:	shl    ecx,0x3
  432006:	xor    ecx,eax
  432008:	or     ecx,0x1
  43200b:	and    ecx,r10d
  43200e:	mov    edx,r8d
  432011:	mov    esi,r11d
  432014:	jmp    432030 <strcmp@plt+0x2e898>
  432016:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432020:	bt     ebx,edi
  432023:	cmovb  edx,esi
  432026:	add    esi,ecx
  432028:	and    esi,r10d
  43202b:	cmp    esi,r11d
  43202e:	je     43206e <strcmp@plt+0x2e8d6>
  432030:	mov    eax,esi
  432032:	shr    eax,0x4
  432035:	mov    ebx,DWORD PTR [r9+rax*4]
  432039:	lea    edi,[rsi+rsi*1]
  43203c:	and    edi,0x1e
  43203f:	shrx   eax,ebx,edi
  432044:	test   al,0x2
  432046:	jne    432058 <strcmp@plt+0x2e8c0>
  432048:	test   al,0x1
  43204a:	jne    432020 <strcmp@plt+0x2e888>
  43204c:	mov    rax,QWORD PTR [r13+0x18]
  432050:	mov    ebp,esi
  432052:	cmp    QWORD PTR [rax+rbp*8],r12
  432056:	jne    432020 <strcmp@plt+0x2e888>
  432058:	mov    eax,0x2
  43205d:	shlx   eax,eax,edi
  432062:	test   eax,ebx
  432064:	sete   cl
  432067:	mov    r11d,esi
  43206a:	mov    esi,edx
  43206c:	jmp    432078 <strcmp@plt+0x2e8e0>
  43206e:	mov    cl,0x1
  432070:	mov    esi,r8d
  432073:	cmp    edx,r8d
  432076:	jne    432087 <strcmp@plt+0x2e8ef>
  432078:	cmp    esi,r8d
  43207b:	cmove  esi,r11d
  43207f:	test   cl,cl
  432081:	cmovne esi,r11d
  432085:	mov    edx,esi
  432087:	mov    eax,edx
  432089:	shr    eax,0x4
  43208c:	mov    ecx,DWORD PTR [r9+rax*4]
  432090:	lea    esi,[rdx+rdx*1]
  432093:	and    esi,0x1e
  432096:	shrx   edi,ecx,esi
  43209b:	test   dil,0x2
  43209f:	jne    4320ab <strcmp@plt+0x2e913>
  4320a1:	test   dil,0x1
  4320a5:	jne    4320d2 <strcmp@plt+0x2e93a>
  4320a7:	mov    edx,edx
  4320a9:	jmp    4320f3 <strcmp@plt+0x2e95b>
  4320ab:	mov    rdi,QWORD PTR [r13+0x18]
  4320af:	mov    edx,edx
  4320b1:	mov    QWORD PTR [rdi+rdx*8],r12
  4320b5:	mov    edi,0x3
  4320ba:	shlx   esi,edi,esi
  4320bf:	andn   ecx,esi,ecx
  4320c4:	mov    DWORD PTR [r9+rax*4],ecx
  4320c8:	inc    DWORD PTR [r13+0x4]
  4320cc:	inc    DWORD PTR [r13+0x8]
  4320d0:	jmp    4320f3 <strcmp@plt+0x2e95b>
  4320d2:	mov    rdi,QWORD PTR [r13+0x18]
  4320d6:	mov    edx,edx
  4320d8:	mov    QWORD PTR [rdi+rdx*8],r12
  4320dc:	mov    edi,0x3
  4320e1:	shlx   esi,edi,esi
  4320e6:	andn   ecx,esi,ecx
  4320eb:	mov    DWORD PTR [r9+rax*4],ecx
  4320ef:	inc    DWORD PTR [r13+0x4]
  4320f3:	mov    rax,QWORD PTR [r15]
  4320f6:	mov    rax,QWORD PTR [rax+0x20]
  4320fa:	mov    QWORD PTR [rax+rdx*8],r14
  4320fe:	add    rsp,0x8
  432102:	pop    rbx
  432103:	pop    r12
  432105:	pop    r13
  432107:	pop    r14
  432109:	pop    r15
  43210b:	pop    rbp
  43210c:	ret    
  43210d:	nop    DWORD PTR [rax]
  432110:	push   rbp
  432111:	push   r15
  432113:	push   r14
  432115:	push   r12
  432117:	push   rbx
  432118:	sub    rsp,0x10
  43211c:	mov    QWORD PTR [rsp+0x8],rsi
  432121:	mov    r9,QWORD PTR [rdi]
  432124:	mov    r8d,DWORD PTR [r9]
  432127:	test   r8d,r8d
  43212a:	je     4321bc <strcmp@plt+0x2ea24>
  432130:	mov    r14,rdi
  432133:	lea    r10d,[r8-0x1]
  432137:	mov    rax,rsi
  43213a:	shr    rax,0x21
  43213e:	xor    eax,esi
  432140:	mov    edi,esi
  432142:	shl    edi,0xb
  432145:	xor    edi,eax
  432147:	mov    r11d,r10d
  43214a:	and    r11d,edi
  43214d:	mov    eax,edi
  43214f:	shr    eax,0x3
  432152:	shl    edi,0x3
  432155:	xor    edi,eax
  432157:	or     edi,0x1
  43215a:	and    edi,r10d
  43215d:	mov    r12,QWORD PTR [r9+0x10]
  432161:	xor    r15d,r15d
  432164:	mov    ebx,r11d
  432167:	jmp    43217a <strcmp@plt+0x2e9e2>
  432169:	nop    DWORD PTR [rax+0x0]
  432170:	add    ebx,edi
  432172:	and    ebx,r10d
  432175:	cmp    ebx,r11d
  432178:	je     4321bf <strcmp@plt+0x2ea27>
  43217a:	mov    ecx,ebx
  43217c:	shr    ecx,0x4
  43217f:	mov    ecx,DWORD PTR [r12+rcx*4]
  432183:	lea    edx,[rbx+rbx*1]
  432186:	and    edx,0x1e
  432189:	shrx   ebp,ecx,edx
  43218e:	test   bpl,0x2
  432192:	jne    4321a7 <strcmp@plt+0x2ea0f>
  432194:	test   bpl,0x1
  432198:	jne    432170 <strcmp@plt+0x2e9d8>
  43219a:	mov    rbp,QWORD PTR [r9+0x18]
  43219e:	mov    eax,ebx
  4321a0:	cmp    QWORD PTR [rbp+rax*8+0x0],rsi
  4321a5:	jne    432170 <strcmp@plt+0x2e9d8>
  4321a7:	mov    eax,0x3
  4321ac:	shlx   eax,eax,edx
  4321b1:	test   eax,ecx
  4321b3:	cmovne ebx,r8d
  4321b7:	cmp    ebx,r8d
  4321ba:	jne    4321cf <strcmp@plt+0x2ea37>
  4321bc:	xor    r15d,r15d
  4321bf:	mov    rax,r15
  4321c2:	add    rsp,0x10
  4321c6:	pop    rbx
  4321c7:	pop    r12
  4321c9:	pop    r14
  4321cb:	pop    r15
  4321cd:	pop    rbp
  4321ce:	ret    
  4321cf:	mov    rax,QWORD PTR [r9+0x20]
  4321d3:	mov    ecx,ebx
  4321d5:	mov    r15,QWORD PTR [rax+rcx*8]
  4321d9:	mov    rsi,QWORD PTR [r15]
  4321dc:	lea    rdi,[rsp+0x8]
  4321e1:	call   42be60 <strcmp@plt+0x286c8>
  4321e6:	mov    rax,QWORD PTR [r14]
  4321e9:	cmp    DWORD PTR [rax],ebx
  4321eb:	je     4321bf <strcmp@plt+0x2ea27>
  4321ed:	mov    rcx,QWORD PTR [rax+0x10]
  4321f1:	mov    edx,ebx
  4321f3:	shr    edx,0x4
  4321f6:	mov    esi,DWORD PTR [rcx+rdx*4]
  4321f9:	add    ebx,ebx
  4321fb:	and    ebx,0x1e
  4321fe:	mov    edi,0x3
  432203:	shlx   edi,edi,ebx
  432208:	test   esi,edi
  43220a:	jne    4321bf <strcmp@plt+0x2ea27>
  43220c:	bts    esi,ebx
  43220f:	mov    DWORD PTR [rcx+rdx*4],esi
  432212:	dec    DWORD PTR [rax+0x4]
  432215:	jmp    4321bf <strcmp@plt+0x2ea27>
  432217:	nop    WORD PTR [rax+rax*1+0x0]
  432220:	test   rdi,rdi
  432223:	je     4322d0 <strcmp@plt+0x2eb38>
  432229:	push   rbp
  43222a:	push   r15
  43222c:	push   r14
  43222e:	push   r12
  432230:	push   rbx
  432231:	mov    r14,rdi
  432234:	mov    r12,QWORD PTR [rdi]
  432237:	cmp    DWORD PTR [r12],0x0
  43223c:	je     432295 <strcmp@plt+0x2eafd>
  43223e:	xor    ebp,ebp
  432240:	mov    r15d,0x3
  432246:	xor    ebx,ebx
  432248:	jmp    43225b <strcmp@plt+0x2eac3>
  43224a:	nop    WORD PTR [rax+rax*1+0x0]
  432250:	inc    ebx
  432252:	add    ebp,0x2
  432255:	cmp    ebx,DWORD PTR [r12]
  432259:	je     432295 <strcmp@plt+0x2eafd>
  43225b:	mov    rax,QWORD PTR [r12+0x10]
  432260:	mov    ecx,ebx
  432262:	shr    ecx,0x4
  432265:	mov    edx,ebp
  432267:	and    dl,0x1e
  43226a:	shlx   edx,r15d,edx
  43226f:	test   DWORD PTR [rax+rcx*4],edx
  432272:	jne    432250 <strcmp@plt+0x2eab8>
  432274:	mov    rax,QWORD PTR [r12+0x20]
  432279:	mov    ecx,ebx
  43227b:	mov    r12,QWORD PTR [rax+rcx*8]
  43227f:	mov    rdi,QWORD PTR [r12]
  432283:	call   42bff0 <strcmp@plt+0x28858>
  432288:	mov    rdi,r12
  43228b:	call   403790 <free@plt>
  432290:	mov    r12,QWORD PTR [r14]
  432293:	jmp    432250 <strcmp@plt+0x2eab8>
  432295:	test   r12,r12
  432298:	je     4322c0 <strcmp@plt+0x2eb28>
  43229a:	mov    rdi,QWORD PTR [r12+0x18]
  43229f:	call   403790 <free@plt>
  4322a4:	mov    rdi,QWORD PTR [r12+0x10]
  4322a9:	call   403790 <free@plt>
  4322ae:	mov    rdi,QWORD PTR [r12+0x20]
  4322b3:	call   403790 <free@plt>
  4322b8:	mov    rdi,r12
  4322bb:	call   403790 <free@plt>
  4322c0:	mov    rdi,r14
  4322c3:	pop    rbx
  4322c4:	pop    r12
  4322c6:	pop    r14
  4322c8:	pop    r15
  4322ca:	pop    rbp
  4322cb:	jmp    403790 <free@plt>
  4322d0:	ret    
  4322d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4322db:	nop    DWORD PTR [rax+rax*1+0x0]
  4322e0:	push   rbx
  4322e1:	mov    rbx,rdi
  4322e4:	mov    rdi,QWORD PTR [rdi]
  4322e7:	call   42bff0 <strcmp@plt+0x28858>
  4322ec:	mov    rdi,rbx
  4322ef:	pop    rbx
  4322f0:	jmp    403790 <free@plt>
  4322f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4322ff:	nop
  432300:	push   rbp
  432301:	push   r15
  432303:	push   r14
  432305:	push   rbx
  432306:	mov    r9,QWORD PTR [rdi]
  432309:	mov    r8d,DWORD PTR [r9]
  43230c:	test   r8d,r8d
  43230f:	je     4323ac <strcmp@plt+0x2ec14>
  432315:	lea    r10d,[r8-0x1]
  432319:	mov    rax,rsi
  43231c:	shr    rax,0x21
  432320:	xor    eax,esi
  432322:	mov    r15d,esi
  432325:	shl    r15d,0xb
  432329:	xor    r15d,eax
  43232c:	mov    r11d,r10d
  43232f:	and    r11d,r15d
  432332:	mov    eax,r15d
  432335:	shr    eax,0x3
  432338:	shl    r15d,0x3
  43233c:	xor    r15d,eax
  43233f:	or     r15d,0x1
  432343:	and    r15d,r10d
  432346:	mov    r14,QWORD PTR [r9+0x10]
  43234a:	xor    eax,eax
  43234c:	mov    ecx,r11d
  43234f:	jmp    43236b <strcmp@plt+0x2ebd3>
  432351:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43235b:	nop    DWORD PTR [rax+rax*1+0x0]
  432360:	add    ecx,r15d
  432363:	and    ecx,r10d
  432366:	cmp    ecx,r11d
  432369:	je     4323ba <strcmp@plt+0x2ec22>
  43236b:	mov    edi,ecx
  43236d:	shr    edi,0x4
  432370:	mov    ebx,DWORD PTR [r14+rdi*4]
  432374:	lea    ebp,[rcx+rcx*1]
  432377:	and    ebp,0x1e
  43237a:	shrx   edi,ebx,ebp
  43237f:	test   dil,0x2
  432383:	jne    432397 <strcmp@plt+0x2ebff>
  432385:	test   dil,0x1
  432389:	jne    432360 <strcmp@plt+0x2ebc8>
  43238b:	mov    rdi,QWORD PTR [r9+0x18]
  43238f:	mov    edx,ecx
  432391:	cmp    QWORD PTR [rdi+rdx*8],rsi
  432395:	jne    432360 <strcmp@plt+0x2ebc8>
  432397:	mov    eax,0x3
  43239c:	shlx   eax,eax,ebp
  4323a1:	test   eax,ebx
  4323a3:	cmovne ecx,r8d
  4323a7:	cmp    ecx,r8d
  4323aa:	jne    4323b0 <strcmp@plt+0x2ec18>
  4323ac:	xor    eax,eax
  4323ae:	jmp    4323ba <strcmp@plt+0x2ec22>
  4323b0:	mov    rax,QWORD PTR [r9+0x20]
  4323b4:	mov    ecx,ecx
  4323b6:	mov    rax,QWORD PTR [rax+rcx*8]
  4323ba:	pop    rbx
  4323bb:	pop    r14
  4323bd:	pop    r15
  4323bf:	pop    rbp
  4323c0:	ret    
  4323c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4323cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4323d0:	push   rbp
  4323d1:	push   r15
  4323d3:	push   r14
  4323d5:	push   r13
  4323d7:	push   r12
  4323d9:	push   rbx
  4323da:	sub    rsp,0x18
  4323de:	mov    QWORD PTR [rsp+0x8],rdi
  4323e3:	mov    rax,QWORD PTR [rsi]
  4323e6:	mov    r13,QWORD PTR [rax+0x8]
  4323ea:	mov    QWORD PTR [rsp+0x10],rax
  4323ef:	cmp    r13,rax
  4323f2:	je     43250d <strcmp@plt+0x2ed75>
  4323f8:	mov    rax,QWORD PTR [rsp+0x8]
  4323fd:	mov    r9,QWORD PTR [rax]
  432400:	jmp    43241b <strcmp@plt+0x2ec83>
  432402:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43240c:	nop    DWORD PTR [rax+0x0]
  432410:	cmp    r13,QWORD PTR [rsp+0x10]
  432415:	je     43250d <strcmp@plt+0x2ed75>
  43241b:	mov    rdi,r13
  43241e:	mov    r13,QWORD PTR [r13+0x8]
  432422:	mov    r8d,DWORD PTR [r9]
  432425:	test   r8d,r8d
  432428:	je     432410 <strcmp@plt+0x2ec78>
  43242a:	mov    rax,QWORD PTR [rdi+0x10]
  43242e:	mov    r10,QWORD PTR [rax]
  432431:	lea    r14d,[r8-0x1]
  432435:	mov    rax,r10
  432438:	shr    rax,0x21
  43243c:	xor    eax,r10d
  43243f:	mov    ebx,r10d
  432442:	shl    ebx,0xb
  432445:	xor    ebx,eax
  432447:	mov    r11d,r14d
  43244a:	and    r11d,ebx
  43244d:	mov    eax,ebx
  43244f:	shr    eax,0x3
  432452:	shl    ebx,0x3
  432455:	xor    ebx,eax
  432457:	or     ebx,0x1
  43245a:	and    ebx,r14d
  43245d:	mov    r15,QWORD PTR [r9+0x10]
  432461:	mov    ebp,r11d
  432464:	jmp    43247a <strcmp@plt+0x2ece2>
  432466:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432470:	add    ebp,ebx
  432472:	and    ebp,r14d
  432475:	cmp    ebp,r11d
  432478:	je     432410 <strcmp@plt+0x2ec78>
  43247a:	mov    ecx,ebp
  43247c:	shr    ecx,0x4
  43247f:	mov    edx,DWORD PTR [r15+rcx*4]
  432483:	lea    ecx,[rbp+rbp*1+0x0]
  432487:	and    ecx,0x1e
  43248a:	shrx   r12d,edx,ecx
  43248f:	test   r12b,0x2
  432493:	jne    4324a7 <strcmp@plt+0x2ed0f>
  432495:	test   r12b,0x1
  432499:	jne    432470 <strcmp@plt+0x2ecd8>
  43249b:	mov    rsi,QWORD PTR [r9+0x18]
  43249f:	mov    eax,ebp
  4324a1:	cmp    QWORD PTR [rsi+rax*8],r10
  4324a5:	jne    432470 <strcmp@plt+0x2ecd8>
  4324a7:	mov    eax,0x3
  4324ac:	shlx   eax,eax,ecx
  4324b1:	test   eax,edx
  4324b3:	cmovne ebp,r8d
  4324b7:	cmp    ebp,r8d
  4324ba:	je     432410 <strcmp@plt+0x2ec78>
  4324c0:	mov    rsi,QWORD PTR [rsp+0x10]
  4324c5:	call   42be10 <strcmp@plt+0x28678>
  4324ca:	mov    rax,QWORD PTR [rsp+0x8]
  4324cf:	mov    r9,QWORD PTR [rax]
  4324d2:	cmp    DWORD PTR [r9],ebp
  4324d5:	je     432410 <strcmp@plt+0x2ec78>
  4324db:	mov    rax,QWORD PTR [r9+0x10]
  4324df:	mov    ecx,ebp
  4324e1:	shr    ecx,0x4
  4324e4:	mov    edx,DWORD PTR [rax+rcx*4]
  4324e7:	add    ebp,ebp
  4324e9:	and    ebp,0x1e
  4324ec:	mov    esi,0x3
  4324f1:	shlx   esi,esi,ebp
  4324f6:	test   edx,esi
  4324f8:	jne    432410 <strcmp@plt+0x2ec78>
  4324fe:	bts    edx,ebp
  432501:	mov    DWORD PTR [rax+rcx*4],edx
  432504:	dec    DWORD PTR [r9+0x4]
  432508:	jmp    432410 <strcmp@plt+0x2ec78>
  43250d:	add    rsp,0x18
  432511:	pop    rbx
  432512:	pop    r12
  432514:	pop    r13
  432516:	pop    r14
  432518:	pop    r15
  43251a:	pop    rbp
  43251b:	ret    
  43251c:	nop    DWORD PTR [rax+0x0]
  432520:	push   rbx
  432521:	sub    rsp,0x10
  432525:	mov    ebx,edi
  432527:	mov    rsi,rsp
  43252a:	mov    edi,0x1
  43252f:	call   403360 <clock_gettime@plt>
  432534:	mov    eax,DWORD PTR [rsp+0x8]
  432538:	or     ebx,eax
  43253a:	bswap  eax
  43253c:	xor    eax,DWORD PTR [rsp]
  43253f:	shl    rax,0x20
  432543:	or     rax,rbx
  432546:	add    rsp,0x10
  43254a:	pop    rbx
  43254b:	ret    
  43254c:	nop    DWORD PTR [rax+0x0]
  432550:	push   rbx
  432551:	sub    rsp,0x10
  432555:	xor    edi,edi
  432557:	call   403370 <time@plt>
  43255c:	mov    rbx,rax
  43255f:	mov    rsi,rsp
  432562:	mov    edi,0x1
  432567:	call   403360 <clock_gettime@plt>
  43256c:	mov    eax,DWORD PTR [rsp+0x8]
  432570:	or     ebx,eax
  432572:	bswap  eax
  432574:	xor    eax,DWORD PTR [rsp]
  432577:	shl    rax,0x20
  43257b:	or     rbx,rax
  43257e:	mov    rax,rbx
  432581:	add    rsp,0x10
  432585:	pop    rbx
  432586:	ret    
  432587:	nop    WORD PTR [rax+rax*1+0x0]
  432590:	mov    rax,QWORD PTR [rdi]
  432593:	ret    
  432594:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43259e:	xchg   ax,ax
  4325a0:	mov    rax,QWORD PTR [rdi+0x8]
  4325a4:	ret    
  4325a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4325af:	nop
  4325b0:	push   r14
  4325b2:	push   rbx
  4325b3:	push   rax
  4325b4:	mov    r14,rdi
  4325b7:	mov    edi,0x10
  4325bc:	call   431d60 <strcmp@plt+0x2e5c8>
  4325c1:	test   rax,rax
  4325c4:	je     4325e5 <strcmp@plt+0x2ee4d>
  4325c6:	mov    rbx,rax
  4325c9:	mov    QWORD PTR [rax+0x8],r14
  4325cd:	lea    rdi,[rip+0x2c]        # 432600 <strcmp@plt+0x2ee68>
  4325d4:	lea    rsi,[rip+0x35]        # 432610 <strcmp@plt+0x2ee78>
  4325db:	call   42b940 <strcmp@plt+0x281a8>
  4325e0:	mov    QWORD PTR [rbx],rax
  4325e3:	jmp    4325e7 <strcmp@plt+0x2ee4f>
  4325e5:	xor    ebx,ebx
  4325e7:	mov    rax,rbx
  4325ea:	add    rsp,0x8
  4325ee:	pop    rbx
  4325ef:	pop    r14
  4325f1:	ret    
  4325f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4325fc:	nop    DWORD PTR [rax+0x0]
  432600:	mov    rcx,QWORD PTR [rdi]
  432603:	xor    eax,eax
  432605:	cmp    rcx,QWORD PTR [rsi]
  432608:	sete   al
  43260b:	ret    
  43260c:	nop    DWORD PTR [rax+0x0]
  432610:	jmp    403790 <free@plt>
  432615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43261f:	nop
  432620:	mov    rax,QWORD PTR [rdi]
  432623:	mov    eax,DWORD PTR [rax+0x18]
  432626:	ret    
  432627:	nop    WORD PTR [rax+rax*1+0x0]
  432630:	push   rbp
  432631:	push   r15
  432633:	push   r14
  432635:	push   r13
  432637:	push   r12
  432639:	push   rbx
  43263a:	sub    rsp,0x18
  43263e:	dec    esi
  432640:	mov    eax,esi
  432642:	shr    eax,1
  432644:	or     eax,esi
  432646:	mov    ecx,eax
  432648:	shr    ecx,0x2
  43264b:	or     ecx,eax
  43264d:	mov    eax,ecx
  43264f:	shr    eax,0x4
  432652:	or     eax,ecx
  432654:	mov    ecx,eax
  432656:	shr    ecx,0x8
  432659:	or     ecx,eax
  43265b:	mov    r12d,ecx
  43265e:	shr    r12d,0x10
  432662:	or     r12d,ecx
  432665:	inc    r12d
  432668:	cmp    r12d,0x4
  43266c:	mov    eax,0x4
  432671:	cmovbe r12d,eax
  432675:	vcvtsi2sd xmm0,xmm0,r12
  43267a:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x15316]        # 447998 <strcmp@plt+0x44200>
  432682:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x15316]        # 4479a0 <strcmp@plt+0x44208>
  43268a:	vcvttsd2si rcx,xmm0
  43268f:	cmp    DWORD PTR [rdi+0x4],ecx
  432692:	jae    4328c8 <strcmp@plt+0x2f130>
  432698:	mov    rbp,rdi
  43269b:	mov    QWORD PTR [rsp+0x10],rcx
  4326a0:	mov    r15d,r12d
  4326a3:	shr    r15d,0x2
  4326a7:	and    r15d,0xfffffffc
  4326ab:	cmp    r12d,0x10
  4326af:	cmovb  r15d,eax
  4326b3:	mov    rdi,r15
  4326b6:	call   403520 <malloc@plt>
  4326bb:	mov    r14,rax
  4326be:	mov    rdi,rax
  4326c1:	mov    esi,0xaa
  4326c6:	mov    rdx,r15
  4326c9:	call   403260 <memset@plt>
  4326ce:	mov    ebx,DWORD PTR [rbp+0x0]
  4326d1:	cmp    ebx,r12d
  4326d4:	jae    432700 <strcmp@plt+0x2ef68>
  4326d6:	mov    rdi,QWORD PTR [rbp+0x18]
  4326da:	mov    r15d,r12d
  4326dd:	shl    r15,0x3
  4326e1:	mov    rsi,r15
  4326e4:	call   403660 <realloc@plt>
  4326e9:	mov    QWORD PTR [rbp+0x18],rax
  4326ed:	mov    rdi,QWORD PTR [rbp+0x20]
  4326f1:	mov    rsi,r15
  4326f4:	call   403660 <realloc@plt>
  4326f9:	mov    QWORD PTR [rbp+0x20],rax
  4326fd:	mov    ebx,DWORD PTR [rbp+0x0]
  432700:	test   ebx,ebx
  432702:	je     4328a9 <strcmp@plt+0x2f111>
  432708:	mov    QWORD PTR [rsp+0x8],r12
  43270d:	lea    eax,[r12-0x1]
  432712:	xor    r10d,r10d
  432715:	mov    r9d,0x2
  43271b:	mov    QWORD PTR [rsp],rbp
  43271f:	jmp    432752 <strcmp@plt+0x2efba>
  432721:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43272b:	nop    DWORD PTR [rax+rax*1+0x0]
  432730:	mov    rcx,QWORD PTR [rbp+0x18]
  432734:	mov    edx,edx
  432736:	mov    QWORD PTR [rcx+rdx*8],r8
  43273a:	mov    rcx,QWORD PTR [rbp+0x20]
  43273e:	mov    QWORD PTR [rcx+rdx*8],r11
  432742:	inc    r10d
  432745:	cmp    r10d,ebx
  432748:	mov    rbp,QWORD PTR [rsp]
  43274c:	je     432878 <strcmp@plt+0x2f0e0>
  432752:	mov    r15,QWORD PTR [rbp+0x10]
  432756:	mov    esi,r10d
  432759:	shr    esi,0x4
  43275c:	mov    edx,DWORD PTR [r15+rsi*4]
  432760:	lea    r12d,[r10+r10*1]
  432764:	and    r12d,0x1e
  432768:	mov    ecx,0x3
  43276d:	shlx   ecx,ecx,r12d
  432772:	test   edx,ecx
  432774:	jne    432742 <strcmp@plt+0x2efaa>
  432776:	lea    rdi,[r15+rsi*4]
  43277a:	mov    ecx,r10d
  43277d:	mov    rbp,QWORD PTR [rsp]
  432781:	mov    rsi,QWORD PTR [rbp+0x18]
  432785:	mov    r11,QWORD PTR [rbp+0x20]
  432789:	mov    r8,QWORD PTR [rsi+rcx*8]
  43278d:	mov    r11,QWORD PTR [r11+rcx*8]
  432791:	mov    ecx,r12d
  432794:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43279e:	xchg   ax,ax
  4327a0:	mov    esi,0x1
  4327a5:	shlx   rcx,rsi,rcx
  4327aa:	or     ecx,edx
  4327ac:	mov    DWORD PTR [rdi],ecx
  4327ae:	mov    rcx,r8
  4327b1:	shr    rcx,0x21
  4327b5:	xor    ecx,r8d
  4327b8:	mov    ebp,r8d
  4327bb:	shl    ebp,0xb
  4327be:	xor    ebp,ecx
  4327c0:	mov    edx,eax
  4327c2:	and    edx,ebp
  4327c4:	mov    esi,edx
  4327c6:	shr    esi,0x4
  4327c9:	mov    r12d,DWORD PTR [r14+rsi*4]
  4327cd:	lea    r13d,[rdx+rdx*1]
  4327d1:	and    r13d,0x1e
  4327d5:	shlx   ecx,r9d,r13d
  4327da:	test   ecx,r12d
  4327dd:	jne    432811 <strcmp@plt+0x2f079>
  4327df:	mov    ecx,ebp
  4327e1:	shr    ecx,0x3
  4327e4:	shl    ebp,0x3
  4327e7:	xor    ebp,ecx
  4327e9:	or     ebp,0x1
  4327ec:	and    ebp,eax
  4327ee:	xchg   ax,ax
  4327f0:	add    edx,ebp
  4327f2:	and    edx,eax
  4327f4:	mov    ecx,edx
  4327f6:	shr    ecx,0x4
  4327f9:	mov    r12d,DWORD PTR [r14+rcx*4]
  4327fd:	lea    r13d,[rdx+rdx*1]
  432801:	and    r13d,0x1e
  432805:	shlx   esi,r9d,r13d
  43280a:	test   esi,r12d
  43280d:	je     4327f0 <strcmp@plt+0x2f058>
  43280f:	mov    esi,ecx
  432811:	lea    rcx,[r14+rsi*4]
  432815:	shlx   ebp,r9d,r13d
  43281a:	andn   ebp,ebp,r12d
  43281f:	mov    DWORD PTR [rcx],ebp
  432821:	mov    rbp,QWORD PTR [rsp]
  432825:	mov    ebx,DWORD PTR [rbp+0x0]
  432828:	cmp    edx,ebx
  43282a:	jae    432730 <strcmp@plt+0x2ef98>
  432830:	mov    ecx,r13d
  432833:	mov    edi,0x3
  432838:	shlx   edi,edi,ecx
  43283d:	test   DWORD PTR [r15+rsi*4],edi
  432841:	jne    432730 <strcmp@plt+0x2ef98>
  432847:	mov    rdi,QWORD PTR [rbp+0x18]
  43284b:	mov    edx,edx
  43284d:	mov    r12,QWORD PTR [rdi+rdx*8]
  432851:	mov    QWORD PTR [rdi+rdx*8],r8
  432855:	mov    rdi,QWORD PTR [rbp+0x20]
  432859:	mov    rbx,QWORD PTR [rdi+rdx*8]
  43285d:	mov    QWORD PTR [rdi+rdx*8],r11
  432861:	mov    r15,QWORD PTR [rbp+0x10]
  432865:	lea    rdi,[r15+rsi*4]
  432869:	mov    edx,DWORD PTR [r15+rsi*4]
  43286d:	mov    r11,rbx
  432870:	mov    r8,r12
  432873:	jmp    4327a0 <strcmp@plt+0x2f008>
  432878:	mov    r12,QWORD PTR [rsp+0x8]
  43287d:	cmp    ebx,r12d
  432880:	jbe    4328a9 <strcmp@plt+0x2f111>
  432882:	mov    rdi,QWORD PTR [rbp+0x18]
  432886:	mov    r15d,r12d
  432889:	shl    r15,0x3
  43288d:	mov    rsi,r15
  432890:	call   403660 <realloc@plt>
  432895:	mov    QWORD PTR [rbp+0x18],rax
  432899:	mov    rdi,QWORD PTR [rbp+0x20]
  43289d:	mov    rsi,r15
  4328a0:	call   403660 <realloc@plt>
  4328a5:	mov    QWORD PTR [rbp+0x20],rax
  4328a9:	mov    rdi,QWORD PTR [rbp+0x10]
  4328ad:	call   403790 <free@plt>
  4328b2:	mov    QWORD PTR [rbp+0x10],r14
  4328b6:	mov    DWORD PTR [rbp+0x0],r12d
  4328ba:	mov    eax,DWORD PTR [rbp+0x4]
  4328bd:	mov    DWORD PTR [rbp+0x8],eax
  4328c0:	mov    rax,QWORD PTR [rsp+0x10]
  4328c5:	mov    DWORD PTR [rbp+0xc],eax
  4328c8:	add    rsp,0x18
  4328cc:	pop    rbx
  4328cd:	pop    r12
  4328cf:	pop    r13
  4328d1:	pop    r14
  4328d3:	pop    r15
  4328d5:	pop    rbp
  4328d6:	ret    
  4328d7:	nop    WORD PTR [rax+rax*1+0x0]
  4328e0:	lea    eax,[rdx+rsi*4]
  4328e3:	add    eax,0xdeadbeef
  4328e8:	cmp    rsi,0x4
  4328ec:	jb     43298a <strcmp@plt+0x2f1f2>
  4328f2:	mov    r8d,eax
  4328f5:	mov    r9d,eax
  4328f8:	nop    DWORD PTR [rax+rax*1+0x0]
  432900:	add    r9d,DWORD PTR [rdi]
  432903:	add    r8d,DWORD PTR [rdi+0x4]
  432907:	add    eax,DWORD PTR [rdi+0x8]
  43290a:	sub    r9d,eax
  43290d:	rorx   ecx,eax,0x1c
  432913:	xor    ecx,r9d
  432916:	add    eax,r8d
  432919:	sub    r8d,ecx
  43291c:	rorx   edx,ecx,0x1a
  432922:	xor    edx,r8d
  432925:	add    ecx,eax
  432927:	sub    eax,edx
  432929:	rorx   r10d,edx,0x18
  43292f:	xor    r10d,eax
  432932:	add    edx,ecx
  432934:	sub    ecx,r10d
  432937:	rorx   r9d,r10d,0x10
  43293d:	xor    r9d,ecx
  432940:	add    r10d,edx
  432943:	sub    edx,r9d
  432946:	rorx   r8d,r9d,0xd
  43294c:	xor    r8d,edx
  43294f:	add    r9d,r10d
  432952:	sub    r10d,r8d
  432955:	rorx   eax,r8d,0x1c
  43295b:	xor    eax,r10d
  43295e:	add    r8d,r9d
  432961:	add    rsi,0xfffffffffffffffd
  432965:	add    rdi,0xc
  432969:	cmp    rsi,0x3
  43296d:	ja     432900 <strcmp@plt+0x2f168>
  43296f:	cmp    rsi,0x1
  432973:	je     432996 <strcmp@plt+0x2f1fe>
  432975:	cmp    rsi,0x2
  432979:	je     432984 <strcmp@plt+0x2f1ec>
  43297b:	cmp    rsi,0x3
  43297f:	jne    4329ea <strcmp@plt+0x2f252>
  432981:	add    eax,DWORD PTR [rdi+0x8]
  432984:	add    r8d,DWORD PTR [rdi+0x4]
  432988:	jmp    432996 <strcmp@plt+0x2f1fe>
  43298a:	mov    r9d,eax
  43298d:	mov    r8d,eax
  432990:	cmp    rsi,0x1
  432994:	jne    432975 <strcmp@plt+0x2f1dd>
  432996:	add    r9d,DWORD PTR [rdi]
  432999:	xor    eax,r8d
  43299c:	rorx   ecx,r8d,0x12
  4329a2:	sub    eax,ecx
  4329a4:	xor    r9d,eax
  4329a7:	rorx   ecx,eax,0x15
  4329ad:	sub    r9d,ecx
  4329b0:	xor    r8d,r9d
  4329b3:	rorx   ecx,r9d,0x7
  4329b9:	sub    r8d,ecx
  4329bc:	xor    eax,r8d
  4329bf:	rorx   ecx,r8d,0x10
  4329c5:	sub    eax,ecx
  4329c7:	xor    r9d,eax
  4329ca:	rorx   ecx,eax,0x1c
  4329d0:	sub    r9d,ecx
  4329d3:	xor    r8d,r9d
  4329d6:	rorx   ecx,r9d,0x12
  4329dc:	sub    r8d,ecx
  4329df:	xor    eax,r8d
  4329e2:	rorx   ecx,r8d,0x8
  4329e8:	sub    eax,ecx
  4329ea:	ret    
  4329eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4329f0:	mov    ecx,DWORD PTR [rdi+0x14]
  4329f3:	cmp    ecx,0xe
  4329f6:	jae    4329fb <strcmp@plt+0x2f263>
  4329f8:	xor    eax,eax
  4329fa:	ret    
  4329fb:	mov    rax,QWORD PTR [rdi+0x38]
  4329ff:	lea    rdx,[rax+0xe]
  432a03:	mov    QWORD PTR [rdi+0x38],rdx
  432a07:	add    ecx,0xfffffff2
  432a0a:	mov    DWORD PTR [rdi+0x14],ecx
  432a0d:	ret    
  432a0e:	xchg   ax,ax
  432a10:	mov    ecx,DWORD PTR [rdi+0x14]
  432a13:	cmp    ecx,0x14
  432a16:	jae    432a1b <strcmp@plt+0x2f283>
  432a18:	xor    eax,eax
  432a1a:	ret    
  432a1b:	mov    rax,QWORD PTR [rdi+0x38]
  432a1f:	lea    rdx,[rax+0x14]
  432a23:	mov    QWORD PTR [rdi+0x38],rdx
  432a27:	add    ecx,0xffffffec
  432a2a:	mov    DWORD PTR [rdi+0x14],ecx
  432a2d:	ret    
  432a2e:	xchg   ax,ax
  432a30:	mov    ecx,DWORD PTR [rdi+0x14]
  432a33:	cmp    ecx,0x28
  432a36:	jae    432a3b <strcmp@plt+0x2f2a3>
  432a38:	xor    eax,eax
  432a3a:	ret    
  432a3b:	mov    rax,QWORD PTR [rdi+0x38]
  432a3f:	lea    rdx,[rax+0x28]
  432a43:	mov    QWORD PTR [rdi+0x38],rdx
  432a47:	add    ecx,0xffffffd8
  432a4a:	mov    DWORD PTR [rdi+0x14],ecx
  432a4d:	ret    
  432a4e:	xchg   ax,ax
  432a50:	push   rbx
  432a51:	mov    rbx,rdi
  432a54:	mov    rax,QWORD PTR [rdi+0x38]
  432a58:	movzx  edi,BYTE PTR [rax]
  432a5b:	shr    edi,0x4
  432a5e:	call   4246d0 <strcmp@plt+0x20f38>
  432a63:	test   eax,eax
  432a65:	jle    432a70 <strcmp@plt+0x2f2d8>
  432a67:	mov    ecx,eax
  432a69:	mov    edx,DWORD PTR [rbx+0x14]
  432a6c:	sub    edx,eax
  432a6e:	jae    432a74 <strcmp@plt+0x2f2dc>
  432a70:	xor    eax,eax
  432a72:	pop    rbx
  432a73:	ret    
  432a74:	mov    rax,QWORD PTR [rbx+0x38]
  432a78:	mov    ecx,ecx
  432a7a:	add    rcx,rax
  432a7d:	mov    QWORD PTR [rbx+0x38],rcx
  432a81:	mov    DWORD PTR [rbx+0x14],edx
  432a84:	pop    rbx
  432a85:	ret    
  432a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432a90:	mov    rax,QWORD PTR [rdi+0x38]
  432a94:	mov    ecx,DWORD PTR [rdi+0x14]
  432a97:	cmp    ecx,0x8
  432a9a:	jb     432aaa <strcmp@plt+0x2f312>
  432a9c:	lea    rdx,[rax+0x8]
  432aa0:	mov    QWORD PTR [rdi+0x38],rdx
  432aa4:	add    ecx,0xfffffff8
  432aa7:	mov    DWORD PTR [rdi+0x14],ecx
  432aaa:	ret    
  432aab:	nop    DWORD PTR [rax+rax*1+0x0]
  432ab0:	push   rbp
  432ab1:	push   r14
  432ab3:	push   rbx
  432ab4:	mov    r14d,edx
  432ab7:	mov    ebp,esi
  432ab9:	mov    ebx,DWORD PTR [rdi+0x14]
  432abc:	mov    esi,0x8
  432ac1:	call   42e040 <strcmp@plt+0x2a8a8>
  432ac6:	movbe  WORD PTR [rax],bp
  432acb:	movbe  WORD PTR [rax+0x2],r14w
  432ad2:	add    ebx,0x8
  432ad5:	movbe  WORD PTR [rax+0x4],bx
  432adb:	mov    WORD PTR [rax+0x6],0x0
  432ae1:	pop    rbx
  432ae2:	pop    r14
  432ae4:	pop    rbp
  432ae5:	ret    
  432ae6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  432af0:	push   rbp
  432af1:	push   r14
  432af3:	push   rbx
  432af4:	mov    r14d,ecx
  432af7:	mov    rbx,rdx
  432afa:	mov    rbp,rsi
  432afd:	mov    esi,0xe
  432b02:	call   42e040 <strcmp@plt+0x2a8a8>
  432b07:	movbe  WORD PTR [rax+0xc],r14w
  432b0e:	mov    ecx,DWORD PTR [rbp+0x0]
  432b11:	mov    DWORD PTR [rax],ecx
  432b13:	movzx  ecx,WORD PTR [rbp+0x4]
  432b17:	mov    WORD PTR [rax+0x4],cx
  432b1b:	mov    ecx,DWORD PTR [rbx]
  432b1d:	mov    DWORD PTR [rax+0x6],ecx
  432b20:	movzx  ecx,WORD PTR [rbx+0x4]
  432b24:	mov    WORD PTR [rax+0xa],cx
  432b28:	pop    rbx
  432b29:	pop    r14
  432b2b:	pop    rbp
  432b2c:	ret    
  432b2d:	nop    DWORD PTR [rax]
  432b30:	push   rbp
  432b31:	push   r15
  432b33:	push   r14
  432b35:	push   r12
  432b37:	push   rbx
  432b38:	mov    r15d,ecx
  432b3b:	mov    r14,rdx
  432b3e:	mov    r12,rsi
  432b41:	mov    rbp,rdi
  432b44:	mov    esi,0x14
  432b49:	call   42e040 <strcmp@plt+0x2a8a8>
  432b4e:	mov    rbx,rax
  432b51:	mov    WORD PTR [rax],0x45
  432b56:	movzx  eax,WORD PTR [rbp+0x14]
  432b5a:	movbe  WORD PTR [rbx+0x2],ax
  432b60:	lea    rax,[rip+0x3cd09]        # 46f870 <strcmp@plt+0x6c0d8>
  432b67:	movzx  ecx,WORD PTR [rax]
  432b6a:	inc    ecx
  432b6c:	mov    WORD PTR [rax],cx
  432b6f:	movbe  WORD PTR [rbx+0x4],cx
  432b75:	mov    WORD PTR [rbx+0x6],0x40
  432b7b:	mov    BYTE PTR [rbx+0x8],0xff
  432b7f:	mov    BYTE PTR [rbx+0x9],r15b
  432b83:	mov    eax,DWORD PTR [r12]
  432b87:	mov    DWORD PTR [rbx+0xc],eax
  432b8a:	mov    eax,DWORD PTR [r14]
  432b8d:	mov    DWORD PTR [rbx+0x10],eax
  432b90:	mov    rdi,rbx
  432b93:	mov    esi,0x14
  432b98:	call   42b110 <strcmp@plt+0x27978>
  432b9d:	mov    WORD PTR [rbx+0xa],ax
  432ba1:	mov    rax,rbx
  432ba4:	pop    rbx
  432ba5:	pop    r12
  432ba7:	pop    r14
  432ba9:	pop    r15
  432bab:	pop    rbp
  432bac:	ret    
  432bad:	nop    DWORD PTR [rax]
  432bb0:	push   rbp
  432bb1:	push   r15
  432bb3:	push   r14
  432bb5:	push   rbx
  432bb6:	push   rax
  432bb7:	mov    ebx,ecx
  432bb9:	mov    r14,rdx
  432bbc:	mov    r15,rsi
  432bbf:	movzx  ebp,WORD PTR [rdi+0x14]
  432bc3:	mov    esi,0x28
  432bc8:	call   42e040 <strcmp@plt+0x2a8a8>
  432bcd:	mov    BYTE PTR [rax+0x7],0xff
  432bd1:	mov    BYTE PTR [rax],0x60
  432bd4:	mov    BYTE PTR [rax+0x6],bl
  432bd7:	movbe  WORD PTR [rax+0x4],bp
  432bdd:	vmovups xmm0,XMMWORD PTR [r15]
  432be2:	vmovups XMMWORD PTR [rax+0x8],xmm0
  432be7:	vmovups xmm0,XMMWORD PTR [r14]
  432bec:	vmovups XMMWORD PTR [rax+0x18],xmm0
  432bf1:	add    rsp,0x8
  432bf5:	pop    rbx
  432bf6:	pop    r14
  432bf8:	pop    r15
  432bfa:	pop    rbp
  432bfb:	ret    
  432bfc:	nop    DWORD PTR [rax+0x0]
  432c00:	push   rbp
  432c01:	push   r15
  432c03:	push   r14
  432c05:	push   r13
  432c07:	push   r12
  432c09:	push   rbx
  432c0a:	push   rax
  432c0b:	mov    r14d,ecx
  432c0e:	mov    r12,rdx
  432c11:	mov    rbp,rsi
  432c14:	mov    r15,rdi
  432c17:	mov    rdi,rsi
  432c1a:	call   423a30 <strcmp@plt+0x20298>
  432c1f:	mov    ebx,eax
  432c21:	mov    rdi,r12
  432c24:	call   423a30 <strcmp@plt+0x20298>
  432c29:	cmp    ebx,eax
  432c2b:	jne    432cc7 <strcmp@plt+0x2f52f>
  432c31:	mov    rdi,rbp
  432c34:	call   423a30 <strcmp@plt+0x20298>
  432c39:	cmp    eax,0xa
  432c3c:	je     432d07 <strcmp@plt+0x2f56f>
  432c42:	cmp    eax,0x2
  432c45:	jne    432d03 <strcmp@plt+0x2f56b>
  432c4b:	mov    rdi,rbp
  432c4e:	call   423a40 <strcmp@plt+0x202a8>
  432c53:	mov    r13,rax
  432c56:	mov    rdi,r12
  432c59:	call   423a40 <strcmp@plt+0x202a8>
  432c5e:	mov    rbp,rax
  432c61:	mov    rdi,r15
  432c64:	mov    esi,0x14
  432c69:	call   42e040 <strcmp@plt+0x2a8a8>
  432c6e:	mov    rbx,rax
  432c71:	mov    WORD PTR [rax],0x45
  432c76:	movzx  eax,WORD PTR [r15+0x14]
  432c7b:	movbe  WORD PTR [rbx+0x2],ax
  432c81:	lea    rax,[rip+0x3cbe8]        # 46f870 <strcmp@plt+0x6c0d8>
  432c88:	movzx  ecx,WORD PTR [rax]
  432c8b:	inc    ecx
  432c8d:	mov    WORD PTR [rax],cx
  432c90:	movbe  WORD PTR [rbx+0x4],cx
  432c96:	mov    WORD PTR [rbx+0x6],0x40
  432c9c:	mov    BYTE PTR [rbx+0x8],0xff
  432ca0:	mov    BYTE PTR [rbx+0x9],r14b
  432ca4:	mov    eax,DWORD PTR [r13+0x0]
  432ca8:	mov    DWORD PTR [rbx+0xc],eax
  432cab:	mov    eax,DWORD PTR [rbp+0x0]
  432cae:	mov    DWORD PTR [rbx+0x10],eax
  432cb1:	mov    rdi,rbx
  432cb4:	mov    esi,0x14
  432cb9:	call   42b110 <strcmp@plt+0x27978>
  432cbe:	mov    WORD PTR [rbx+0xa],ax
  432cc2:	jmp    432d59 <strcmp@plt+0x2f5c1>
  432cc7:	lea    rax,[rip+0x320f2]        # 464dc0 <strcmp@plt+0x61628>
  432cce:	cmp    DWORD PTR [rax],0x0
  432cd1:	jle    432d03 <strcmp@plt+0x2f56b>
  432cd3:	mov    rdi,rbp
  432cd6:	call   423c50 <strcmp@plt+0x204b8>
  432cdb:	mov    rbp,rax
  432cde:	mov    rdi,r12
  432ce1:	call   423c50 <strcmp@plt+0x204b8>
  432ce6:	lea    rsi,[rip+0x19ade]        # 44c7cb <strcmp@plt+0x49033>
  432ced:	xor    ebx,ebx
  432cef:	mov    edi,0x5
  432cf4:	mov    rdx,rbp
  432cf7:	mov    rcx,rax
  432cfa:	xor    eax,eax
  432cfc:	call   42e520 <strcmp@plt+0x2ad88>
  432d01:	jmp    432d59 <strcmp@plt+0x2f5c1>
  432d03:	xor    ebx,ebx
  432d05:	jmp    432d59 <strcmp@plt+0x2f5c1>
  432d07:	mov    rdi,rbp
  432d0a:	call   423a40 <strcmp@plt+0x202a8>
  432d0f:	mov    r13,rax
  432d12:	mov    rdi,r12
  432d15:	call   423a40 <strcmp@plt+0x202a8>
  432d1a:	mov    r12,rax
  432d1d:	movzx  ebp,WORD PTR [r15+0x14]
  432d22:	mov    rdi,r15
  432d25:	mov    esi,0x28
  432d2a:	call   42e040 <strcmp@plt+0x2a8a8>
  432d2f:	mov    rbx,rax
  432d32:	mov    BYTE PTR [rax+0x7],0xff
  432d36:	mov    BYTE PTR [rax],0x60
  432d39:	mov    BYTE PTR [rax+0x6],r14b
  432d3d:	movbe  WORD PTR [rax+0x4],bp
  432d43:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  432d49:	vmovups XMMWORD PTR [rax+0x8],xmm0
  432d4e:	vmovups xmm0,XMMWORD PTR [r12]
  432d54:	vmovups XMMWORD PTR [rax+0x18],xmm0
  432d59:	mov    rax,rbx
  432d5c:	add    rsp,0x8
  432d60:	pop    rbx
  432d61:	pop    r12
  432d63:	pop    r13
  432d65:	pop    r14
  432d67:	pop    r15
  432d69:	pop    rbp
  432d6a:	ret    
  432d6b:	nop    DWORD PTR [rax+rax*1+0x0]
  432d70:	push   rbp
  432d71:	push   r15
  432d73:	push   r14
  432d75:	push   r13
  432d77:	push   r12
  432d79:	push   rbx
  432d7a:	push   rax
  432d7b:	mov    r15,r8
  432d7e:	mov    r14,rcx
  432d81:	mov    r12d,edx
  432d84:	mov    r13d,esi
  432d87:	mov    rbx,rdi
  432d8a:	mov    ebp,DWORD PTR [rdi+0x14]
  432d8d:	mov    esi,0x8
  432d92:	call   42e040 <strcmp@plt+0x2a8a8>
  432d97:	movbe  WORD PTR [rax],r13w
  432d9d:	movbe  WORD PTR [rax+0x2],r12w
  432da4:	add    ebp,0x8
  432da7:	movbe  WORD PTR [rax+0x4],bp
  432dad:	mov    WORD PTR [rax+0x6],0x0
  432db3:	test   rax,rax
  432db6:	je     432e46 <strcmp@plt+0x2f6ae>
  432dbc:	mov    eax,DWORD PTR [rbx+0x38]
  432dbf:	sub    eax,DWORD PTR [rbx+0x30]
  432dc2:	mov    WORD PTR [rbx+0x1c],ax
  432dc6:	mov    rdi,rbx
  432dc9:	mov    rsi,r14
  432dcc:	mov    rdx,r15
  432dcf:	mov    ecx,0x11
  432dd4:	call   432c00 <strcmp@plt+0x2f468>
  432dd9:	test   rax,rax
  432ddc:	je     432e5b <strcmp@plt+0x2f6c3>
  432dde:	mov    rax,QWORD PTR [rbx+0x30]
  432de2:	mov    rcx,QWORD PTR [rbx+0x38]
  432de6:	sub    rcx,rax
  432de9:	mov    WORD PTR [rbx+0x1a],cx
  432ded:	movzx  edx,WORD PTR [rbx+0x1c]
  432df1:	lea    rbx,[rax+rdx*1]
  432df5:	xor    r15d,r15d
  432df8:	cmp    rdx,0xffff
  432dff:	cmove  rbx,r15
  432e03:	movbe  dx,WORD PTR [rbx+0x4]
  432e09:	movzx  r12d,dx
  432e0d:	movzx  ecx,cx
  432e10:	lea    rbp,[rcx+rax*1]
  432e14:	cmp    cx,0xffff
  432e18:	cmove  rbp,r15
  432e1c:	mov    rdi,r14
  432e1f:	call   423a30 <strcmp@plt+0x20298>
  432e24:	mov    rdi,rbx
  432e27:	mov    esi,r12d
  432e2a:	mov    rdx,rbp
  432e2d:	mov    ecx,eax
  432e2f:	call   42b750 <strcmp@plt+0x27fb8>
  432e34:	cmp    ax,0xffff
  432e38:	je     432e75 <strcmp@plt+0x2f6dd>
  432e3a:	mov    WORD PTR [rbx+0x6],ax
  432e3e:	mov    r15d,0x1
  432e44:	jmp    432e97 <strcmp@plt+0x2f6ff>
  432e46:	lea    rax,[rip+0x31f73]        # 464dc0 <strcmp@plt+0x61628>
  432e4d:	cmp    DWORD PTR [rax],0x0
  432e50:	jle    432e70 <strcmp@plt+0x2f6d8>
  432e52:	lea    rsi,[rip+0x199a7]        # 44c800 <strcmp@plt+0x49068>
  432e59:	jmp    432e88 <strcmp@plt+0x2f6f0>
  432e5b:	lea    rax,[rip+0x31f5e]        # 464dc0 <strcmp@plt+0x61628>
  432e62:	cmp    DWORD PTR [rax],0x0
  432e65:	jle    432e70 <strcmp@plt+0x2f6d8>
  432e67:	lea    rsi,[rip+0x199b8]        # 44c826 <strcmp@plt+0x4908e>
  432e6e:	jmp    432e88 <strcmp@plt+0x2f6f0>
  432e70:	xor    r15d,r15d
  432e73:	jmp    432e97 <strcmp@plt+0x2f6ff>
  432e75:	lea    rax,[rip+0x31f44]        # 464dc0 <strcmp@plt+0x61628>
  432e7c:	cmp    DWORD PTR [rax],0x0
  432e7f:	jle    432e97 <strcmp@plt+0x2f6ff>
  432e81:	lea    rsi,[rip+0x199c3]        # 44c84b <strcmp@plt+0x490b3>
  432e88:	xor    r15d,r15d
  432e8b:	mov    edi,0x5
  432e90:	xor    eax,eax
  432e92:	call   42e520 <strcmp@plt+0x2ad88>
  432e97:	mov    eax,r15d
  432e9a:	add    rsp,0x8
  432e9e:	pop    rbx
  432e9f:	pop    r12
  432ea1:	pop    r13
  432ea3:	pop    r14
  432ea5:	pop    r15
  432ea7:	pop    rbp
  432ea8:	ret    
  432ea9:	nop    DWORD PTR [rax+0x0]
  432eb0:	push   rbp
  432eb1:	push   r15
  432eb3:	push   r14
  432eb5:	push   r13
  432eb7:	push   r12
  432eb9:	push   rbx
  432eba:	push   rax
  432ebb:	mov    r15,r8
  432ebe:	mov    r14,rcx
  432ec1:	mov    r12d,edx
  432ec4:	mov    r13d,esi
  432ec7:	mov    rbx,rdi
  432eca:	mov    ebp,DWORD PTR [rdi+0x14]
  432ecd:	mov    esi,0x8
  432ed2:	call   42e040 <strcmp@plt+0x2a8a8>
  432ed7:	movbe  WORD PTR [rax],r13w
  432edd:	movbe  WORD PTR [rax+0x2],r12w
  432ee4:	add    ebp,0x8
  432ee7:	movbe  WORD PTR [rax+0x4],bp
  432eed:	mov    WORD PTR [rax+0x6],0x0
  432ef3:	test   rax,rax
  432ef6:	je     432f86 <strcmp@plt+0x2f7ee>
  432efc:	mov    eax,DWORD PTR [rbx+0x38]
  432eff:	sub    eax,DWORD PTR [rbx+0x30]
  432f02:	mov    WORD PTR [rbx+0x22],ax
  432f06:	mov    rdi,rbx
  432f09:	mov    rsi,r14
  432f0c:	mov    rdx,r15
  432f0f:	mov    ecx,0x11
  432f14:	call   432c00 <strcmp@plt+0x2f468>
  432f19:	test   rax,rax
  432f1c:	je     432f9b <strcmp@plt+0x2f803>
  432f1e:	mov    rax,QWORD PTR [rbx+0x30]
  432f22:	mov    rcx,QWORD PTR [rbx+0x38]
  432f26:	sub    rcx,rax
  432f29:	mov    WORD PTR [rbx+0x20],cx
  432f2d:	movzx  edx,WORD PTR [rbx+0x22]
  432f31:	lea    rbx,[rax+rdx*1]
  432f35:	xor    r15d,r15d
  432f38:	cmp    rdx,0xffff
  432f3f:	cmove  rbx,r15
  432f43:	movbe  dx,WORD PTR [rbx+0x4]
  432f49:	movzx  r12d,dx
  432f4d:	movzx  ecx,cx
  432f50:	lea    rbp,[rcx+rax*1]
  432f54:	cmp    cx,0xffff
  432f58:	cmove  rbp,r15
  432f5c:	mov    rdi,r14
  432f5f:	call   423a30 <strcmp@plt+0x20298>
  432f64:	mov    rdi,rbx
  432f67:	mov    esi,r12d
  432f6a:	mov    rdx,rbp
  432f6d:	mov    ecx,eax
  432f6f:	call   42b750 <strcmp@plt+0x27fb8>
  432f74:	cmp    ax,0xffff
  432f78:	je     432fb5 <strcmp@plt+0x2f81d>
  432f7a:	mov    WORD PTR [rbx+0x6],ax
  432f7e:	mov    r15d,0x1
  432f84:	jmp    432fd7 <strcmp@plt+0x2f83f>
  432f86:	lea    rax,[rip+0x31e33]        # 464dc0 <strcmp@plt+0x61628>
  432f8d:	cmp    DWORD PTR [rax],0x0
  432f90:	jle    432fb0 <strcmp@plt+0x2f818>
  432f92:	lea    rsi,[rip+0x19867]        # 44c800 <strcmp@plt+0x49068>
  432f99:	jmp    432fc8 <strcmp@plt+0x2f830>
  432f9b:	lea    rax,[rip+0x31e1e]        # 464dc0 <strcmp@plt+0x61628>
  432fa2:	cmp    DWORD PTR [rax],0x0
  432fa5:	jle    432fb0 <strcmp@plt+0x2f818>
  432fa7:	lea    rsi,[rip+0x19878]        # 44c826 <strcmp@plt+0x4908e>
  432fae:	jmp    432fc8 <strcmp@plt+0x2f830>
  432fb0:	xor    r15d,r15d
  432fb3:	jmp    432fd7 <strcmp@plt+0x2f83f>
  432fb5:	lea    rax,[rip+0x31e04]        # 464dc0 <strcmp@plt+0x61628>
  432fbc:	cmp    DWORD PTR [rax],0x0
  432fbf:	jle    432fd7 <strcmp@plt+0x2f83f>
  432fc1:	lea    rsi,[rip+0x19883]        # 44c84b <strcmp@plt+0x490b3>
  432fc8:	xor    r15d,r15d
  432fcb:	mov    edi,0x5
  432fd0:	xor    eax,eax
  432fd2:	call   42e520 <strcmp@plt+0x2ad88>
  432fd7:	mov    eax,r15d
  432fda:	add    rsp,0x8
  432fde:	pop    rbx
  432fdf:	pop    r12
  432fe1:	pop    r13
  432fe3:	pop    r14
  432fe5:	pop    r15
  432fe7:	pop    rbp
  432fe8:	ret    
  432fe9:	nop    DWORD PTR [rax+0x0]
  432ff0:	push   r15
  432ff2:	push   r14
  432ff4:	push   rbx
  432ff5:	sub    rsp,0x40
  432ff9:	mov    r14,rsi
  432ffc:	vmovups ymm0,YMMWORD PTR [rdi]
  433000:	vmovups ymm1,YMMWORD PTR [rdi+0x20]
  433005:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  43300b:	vmovups YMMWORD PTR [rsp],ymm0
  433010:	mov    rdi,rsp
  433013:	vzeroupper 
  433016:	call   42e210 <strcmp@plt+0x2aa78>
  43301b:	xor    ebx,ebx
  43301d:	cmp    eax,0x1
  433020:	jne    43314e <strcmp@plt+0x2f9b6>
  433026:	movzx  eax,WORD PTR [rsp+0x1a]
  43302b:	mov    rcx,QWORD PTR [rsp+0x30]
  433030:	add    rcx,rax
  433033:	xor    ebx,ebx
  433035:	cmp    rax,0xffff
  43303b:	cmovne rbx,rcx
  43303f:	mov    rdi,r14
  433042:	mov    esi,0x1
  433047:	call   422e90 <strcmp@plt+0x1f6f8>
  43304c:	lea    r15,[r14+0x20]
  433050:	mov    rdi,r15
  433053:	mov    esi,0x1
  433058:	call   422e90 <strcmp@plt+0x1f6f8>
  43305d:	movzx  eax,BYTE PTR [rbx]
  433060:	shr    eax,0x4
  433063:	cmp    eax,0x6
  433066:	je     4330b9 <strcmp@plt+0x2f921>
  433068:	cmp    eax,0x4
  43306b:	jne    43311c <strcmp@plt+0x2f984>
  433071:	lea    rsi,[rbx+0xc]
  433075:	mov    rdi,r14
  433078:	mov    edx,0x2
  43307d:	call   423850 <strcmp@plt+0x200b8>
  433082:	lea    rsi,[rbx+0x10]
  433086:	mov    rdi,r15
  433089:	mov    edx,0x2
  43308e:	call   423850 <strcmp@plt+0x200b8>
  433093:	mov    al,BYTE PTR [rbx+0x9]
  433096:	mov    BYTE PTR [r14+0x44],al
  43309a:	mov    ecx,DWORD PTR [rbx]
  43309c:	shl    ecx,0x2
  43309f:	and    ecx,0x3c
  4330a2:	mov    edx,DWORD PTR [rsp+0x14]
  4330a6:	sub    edx,ecx
  4330a8:	jb     4330f8 <strcmp@plt+0x2f960>
  4330aa:	add    QWORD PTR [rsp+0x38],rcx
  4330af:	mov    DWORD PTR [rsp+0x14],edx
  4330b3:	cmp    al,0x6
  4330b5:	jne    4330fc <strcmp@plt+0x2f964>
  4330b7:	jmp    433100 <strcmp@plt+0x2f968>
  4330b9:	lea    rsi,[rbx+0x8]
  4330bd:	mov    rdi,r14
  4330c0:	mov    edx,0xa
  4330c5:	call   423850 <strcmp@plt+0x200b8>
  4330ca:	lea    rsi,[rbx+0x18]
  4330ce:	mov    rdi,r15
  4330d1:	mov    edx,0xa
  4330d6:	call   423850 <strcmp@plt+0x200b8>
  4330db:	mov    al,BYTE PTR [rbx+0x6]
  4330de:	mov    BYTE PTR [r14+0x44],al
  4330e2:	mov    ecx,DWORD PTR [rsp+0x14]
  4330e6:	cmp    ecx,0x28
  4330e9:	jb     4330f8 <strcmp@plt+0x2f960>
  4330eb:	add    QWORD PTR [rsp+0x38],0x28
  4330f1:	add    ecx,0xffffffd8
  4330f4:	mov    DWORD PTR [rsp+0x14],ecx
  4330f8:	cmp    al,0x6
  4330fa:	je     433100 <strcmp@plt+0x2f968>
  4330fc:	cmp    al,0x11
  4330fe:	jne    433141 <strcmp@plt+0x2f9a9>
  433100:	mov    rax,QWORD PTR [rsp+0x38]
  433105:	movzx  ecx,WORD PTR [rax]
  433108:	movbe  WORD PTR [r14+0x40],cx
  43310f:	movzx  eax,WORD PTR [rax+0x2]
  433113:	movbe  WORD PTR [r14+0x42],ax
  43311a:	jmp    433149 <strcmp@plt+0x2f9b1>
  43311c:	lea    rax,[rip+0x31c9d]        # 464dc0 <strcmp@plt+0x61628>
  433123:	xor    ebx,ebx
  433125:	cmp    DWORD PTR [rax],0x2
  433128:	jl     43314e <strcmp@plt+0x2f9b6>
  43312a:	lea    rsi,[rip+0x1973a]        # 44c86b <strcmp@plt+0x490d3>
  433131:	xor    ebx,ebx
  433133:	mov    edi,0x6
  433138:	xor    eax,eax
  43313a:	call   42e520 <strcmp@plt+0x2ad88>
  43313f:	jmp    43314e <strcmp@plt+0x2f9b6>
  433141:	mov    DWORD PTR [r14+0x40],0x0
  433149:	mov    ebx,0x1
  43314e:	mov    eax,ebx
  433150:	add    rsp,0x40
  433154:	pop    rbx
  433155:	pop    r14
  433157:	pop    r15
  433159:	ret    
  43315a:	nop    WORD PTR [rax+rax*1+0x0]
  433160:	push   r15
  433162:	push   r14
  433164:	push   rbx
  433165:	sub    rsp,0x40
  433169:	mov    r14,rsi
  43316c:	vmovups ymm0,YMMWORD PTR [rdi]
  433170:	vmovups ymm1,YMMWORD PTR [rdi+0x20]
  433175:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  43317b:	vmovups YMMWORD PTR [rsp],ymm0
  433180:	mov    rdi,rsp
  433183:	vzeroupper 
  433186:	call   42e300 <strcmp@plt+0x2ab68>
  43318b:	xor    ebx,ebx
  43318d:	cmp    eax,0x1
  433190:	jne    4332be <strcmp@plt+0x2fb26>
  433196:	movzx  eax,WORD PTR [rsp+0x20]
  43319b:	mov    rcx,QWORD PTR [rsp+0x30]
  4331a0:	add    rcx,rax
  4331a3:	xor    ebx,ebx
  4331a5:	cmp    rax,0xffff
  4331ab:	cmovne rbx,rcx
  4331af:	mov    rdi,r14
  4331b2:	mov    esi,0x1
  4331b7:	call   422e90 <strcmp@plt+0x1f6f8>
  4331bc:	lea    r15,[r14+0x20]
  4331c0:	mov    rdi,r15
  4331c3:	mov    esi,0x1
  4331c8:	call   422e90 <strcmp@plt+0x1f6f8>
  4331cd:	movzx  eax,BYTE PTR [rbx]
  4331d0:	shr    eax,0x4
  4331d3:	cmp    eax,0x6
  4331d6:	je     433229 <strcmp@plt+0x2fa91>
  4331d8:	cmp    eax,0x4
  4331db:	jne    43328c <strcmp@plt+0x2faf4>
  4331e1:	lea    rsi,[rbx+0xc]
  4331e5:	mov    rdi,r14
  4331e8:	mov    edx,0x2
  4331ed:	call   423850 <strcmp@plt+0x200b8>
  4331f2:	lea    rsi,[rbx+0x10]
  4331f6:	mov    rdi,r15
  4331f9:	mov    edx,0x2
  4331fe:	call   423850 <strcmp@plt+0x200b8>
  433203:	mov    al,BYTE PTR [rbx+0x9]
  433206:	mov    BYTE PTR [r14+0x44],al
  43320a:	mov    ecx,DWORD PTR [rbx]
  43320c:	shl    ecx,0x2
  43320f:	and    ecx,0x3c
  433212:	mov    edx,DWORD PTR [rsp+0x14]
  433216:	sub    edx,ecx
  433218:	jb     433268 <strcmp@plt+0x2fad0>
  43321a:	add    QWORD PTR [rsp+0x38],rcx
  43321f:	mov    DWORD PTR [rsp+0x14],edx
  433223:	cmp    al,0x6
  433225:	jne    43326c <strcmp@plt+0x2fad4>
  433227:	jmp    433270 <strcmp@plt+0x2fad8>
  433229:	lea    rsi,[rbx+0x8]
  43322d:	mov    rdi,r14
  433230:	mov    edx,0xa
  433235:	call   423850 <strcmp@plt+0x200b8>
  43323a:	lea    rsi,[rbx+0x18]
  43323e:	mov    rdi,r15
  433241:	mov    edx,0xa
  433246:	call   423850 <strcmp@plt+0x200b8>
  43324b:	mov    al,BYTE PTR [rbx+0x6]
  43324e:	mov    BYTE PTR [r14+0x44],al
  433252:	mov    ecx,DWORD PTR [rsp+0x14]
  433256:	cmp    ecx,0x28
  433259:	jb     433268 <strcmp@plt+0x2fad0>
  43325b:	add    QWORD PTR [rsp+0x38],0x28
  433261:	add    ecx,0xffffffd8
  433264:	mov    DWORD PTR [rsp+0x14],ecx
  433268:	cmp    al,0x6
  43326a:	je     433270 <strcmp@plt+0x2fad8>
  43326c:	cmp    al,0x11
  43326e:	jne    4332b1 <strcmp@plt+0x2fb19>
  433270:	mov    rax,QWORD PTR [rsp+0x38]
  433275:	movzx  ecx,WORD PTR [rax]
  433278:	movbe  WORD PTR [r14+0x40],cx
  43327f:	movzx  eax,WORD PTR [rax+0x2]
  433283:	movbe  WORD PTR [r14+0x42],ax
  43328a:	jmp    4332b9 <strcmp@plt+0x2fb21>
  43328c:	lea    rax,[rip+0x31b2d]        # 464dc0 <strcmp@plt+0x61628>
  433293:	xor    ebx,ebx
  433295:	cmp    DWORD PTR [rax],0x2
  433298:	jl     4332be <strcmp@plt+0x2fb26>
  43329a:	lea    rsi,[rip+0x195ef]        # 44c890 <strcmp@plt+0x490f8>
  4332a1:	xor    ebx,ebx
  4332a3:	mov    edi,0x6
  4332a8:	xor    eax,eax
  4332aa:	call   42e520 <strcmp@plt+0x2ad88>
  4332af:	jmp    4332be <strcmp@plt+0x2fb26>
  4332b1:	mov    DWORD PTR [r14+0x40],0x0
  4332b9:	mov    ebx,0x1
  4332be:	mov    eax,ebx
  4332c0:	add    rsp,0x40
  4332c4:	pop    rbx
  4332c5:	pop    r14
  4332c7:	pop    r15
  4332c9:	ret    
  4332ca:	nop    WORD PTR [rax+rax*1+0x0]
  4332d0:	push   rbx
  4332d1:	movzx  eax,BYTE PTR [rdi]
  4332d4:	shr    eax,0x4
  4332d7:	cmp    eax,0x4
  4332da:	je     4332e8 <strcmp@plt+0x2fb50>
  4332dc:	cmp    eax,0x6
  4332df:	jne    4332ef <strcmp@plt+0x2fb57>
  4332e1:	mov    ebx,0xa
  4332e6:	jmp    433312 <strcmp@plt+0x2fb7a>
  4332e8:	mov    ebx,0x2
  4332ed:	jmp    433312 <strcmp@plt+0x2fb7a>
  4332ef:	lea    rax,[rip+0x31aca]        # 464dc0 <strcmp@plt+0x61628>
  4332f6:	xor    ebx,ebx
  4332f8:	cmp    DWORD PTR [rax],0x2
  4332fb:	jl     433312 <strcmp@plt+0x2fb7a>
  4332fd:	lea    rsi,[rip+0x195b7]        # 44c8bb <strcmp@plt+0x49123>
  433304:	xor    ebx,ebx
  433306:	mov    edi,0x6
  43330b:	xor    eax,eax
  43330d:	call   42e520 <strcmp@plt+0x2ad88>
  433312:	mov    eax,ebx
  433314:	pop    rbx
  433315:	ret    
  433316:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433320:	push   rbp
  433321:	push   r14
  433323:	push   rbx
  433324:	mov    r14,rdi
  433327:	mov    ebp,DWORD PTR [rdi+0x40]
  43332a:	call   422ef0 <strcmp@plt+0x1f758>
  43332f:	cmp    ax,0xa
  433333:	je     43337d <strcmp@plt+0x2fbe5>
  433335:	cmp    ax,0x2
  433339:	jne    4333c1 <strcmp@plt+0x2fc29>
  43333f:	mov    edi,0x14
  433344:	call   431d90 <strcmp@plt+0x2e5f8>
  433349:	mov    rbx,rax
  43334c:	mov    rdi,rax
  43334f:	mov    rsi,r14
  433352:	call   423480 <strcmp@plt+0x1fce8>
  433357:	lea    rdi,[rbx+0x4]
  43335b:	lea    rsi,[r14+0x20]
  43335f:	call   423480 <strcmp@plt+0x1fce8>
  433364:	mov    DWORD PTR [rbx+0x8],ebp
  433367:	movzx  eax,BYTE PTR [r14+0x44]
  43336c:	mov    DWORD PTR [rbx+0xc],eax
  43336f:	mov    rax,rbx
  433372:	add    rax,0x10
  433376:	mov    esi,0x5
  43337b:	jmp    4333b9 <strcmp@plt+0x2fc21>
  43337d:	mov    edi,0x2c
  433382:	call   431d90 <strcmp@plt+0x2e5f8>
  433387:	mov    rbx,rax
  43338a:	mov    rdi,rax
  43338d:	mov    rsi,r14
  433390:	call   423480 <strcmp@plt+0x1fce8>
  433395:	lea    rdi,[rbx+0x10]
  433399:	lea    rsi,[r14+0x20]
  43339d:	call   423480 <strcmp@plt+0x1fce8>
  4333a2:	mov    DWORD PTR [rbx+0x20],ebp
  4333a5:	movzx  eax,BYTE PTR [r14+0x44]
  4333aa:	mov    DWORD PTR [rbx+0x24],eax
  4333ad:	mov    rax,rbx
  4333b0:	add    rax,0x28
  4333b4:	mov    esi,0xb
  4333b9:	mov    ecx,DWORD PTR [r14+0x48]
  4333bd:	mov    DWORD PTR [rax],ecx
  4333bf:	jmp    4333c5 <strcmp@plt+0x2fc2d>
  4333c1:	xor    esi,esi
  4333c3:	xor    ebx,ebx
  4333c5:	mov    rdi,rbx
  4333c8:	mov    edx,0x7dd
  4333cd:	call   4328e0 <strcmp@plt+0x2f148>
  4333d2:	mov    ebp,eax
  4333d4:	mov    rdi,rbx
  4333d7:	call   403790 <free@plt>
  4333dc:	mov    eax,ebp
  4333de:	pop    rbx
  4333df:	pop    r14
  4333e1:	pop    rbp
  4333e2:	ret    
  4333e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4333ed:	nop    DWORD PTR [rax]
  4333f0:	push   rbp
  4333f1:	push   r15
  4333f3:	push   r14
  4333f5:	push   rbx
  4333f6:	push   rax
  4333f7:	mov    r14,rsi
  4333fa:	mov    r15,rdi
  4333fd:	call   422ef0 <strcmp@plt+0x1f758>
  433402:	cmp    ax,0xa
  433406:	je     433435 <strcmp@plt+0x2fc9d>
  433408:	cmp    ax,0x2
  43340c:	jne    433464 <strcmp@plt+0x2fccc>
  43340e:	mov    edi,0x8
  433413:	call   431d90 <strcmp@plt+0x2e5f8>
  433418:	mov    rbx,rax
  43341b:	mov    rdi,rax
  43341e:	mov    rsi,r15
  433421:	call   423480 <strcmp@plt+0x1fce8>
  433426:	mov    rdi,rbx
  433429:	add    rdi,0x4
  43342d:	mov    r15d,0x2
  433433:	jmp    43345a <strcmp@plt+0x2fcc2>
  433435:	mov    edi,0x20
  43343a:	call   431d90 <strcmp@plt+0x2e5f8>
  43343f:	mov    rbx,rax
  433442:	mov    rdi,rax
  433445:	mov    rsi,r15
  433448:	call   423480 <strcmp@plt+0x1fce8>
  43344d:	mov    rdi,rbx
  433450:	add    rdi,0x10
  433454:	mov    r15d,0x8
  43345a:	mov    rsi,r14
  43345d:	call   423480 <strcmp@plt+0x1fce8>
  433462:	jmp    433469 <strcmp@plt+0x2fcd1>
  433464:	xor    r15d,r15d
  433467:	xor    ebx,ebx
  433469:	mov    rdi,rbx
  43346c:	mov    rsi,r15
  43346f:	mov    edx,0x7dd
  433474:	call   4328e0 <strcmp@plt+0x2f148>
  433479:	mov    ebp,eax
  43347b:	mov    rdi,rbx
  43347e:	call   403790 <free@plt>
  433483:	mov    eax,ebp
  433485:	add    rsp,0x8
  433489:	pop    rbx
  43348a:	pop    r14
  43348c:	pop    r15
  43348e:	pop    rbp
  43348f:	ret    
  433490:	push   rbp
  433491:	push   r14
  433493:	push   rbx
  433494:	movzx  eax,WORD PTR [rdi+0x40]
  433498:	xor    r14d,r14d
  43349b:	cmp    ax,WORD PTR [rsi+0x40]
  43349f:	jne    4334de <strcmp@plt+0x2fd46>
  4334a1:	mov    rbx,rsi
  4334a4:	mov    rbp,rdi
  4334a7:	movzx  eax,WORD PTR [rdi+0x42]
  4334ab:	cmp    ax,WORD PTR [rsi+0x42]
  4334af:	jne    4334de <strcmp@plt+0x2fd46>
  4334b1:	mov    rdi,rbp
  4334b4:	mov    rsi,rbx
  4334b7:	call   423670 <strcmp@plt+0x1fed8>
  4334bc:	test   eax,eax
  4334be:	jne    4334de <strcmp@plt+0x2fd46>
  4334c0:	lea    rdi,[rbp+0x20]
  4334c4:	lea    rsi,[rbx+0x20]
  4334c8:	call   423670 <strcmp@plt+0x1fed8>
  4334cd:	test   eax,eax
  4334cf:	jne    4334de <strcmp@plt+0x2fd46>
  4334d1:	mov    eax,DWORD PTR [rbp+0x48]
  4334d4:	xor    r14d,r14d
  4334d7:	cmp    eax,DWORD PTR [rbx+0x48]
  4334da:	sete   r14b
  4334de:	mov    eax,r14d
  4334e1:	pop    rbx
  4334e2:	pop    r14
  4334e4:	pop    rbp
  4334e5:	ret    
  4334e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4334f0:	push   r14
  4334f2:	push   rbx
  4334f3:	push   rax
  4334f4:	mov    r14,rdi
  4334f7:	mov    edi,0x50
  4334fc:	call   431d60 <strcmp@plt+0x2e5c8>
  433501:	mov    rbx,rax
  433504:	movzx  eax,WORD PTR [r14+0x40]
  433509:	mov    WORD PTR [rbx+0x40],ax
  43350d:	movzx  eax,WORD PTR [r14+0x42]
  433512:	mov    WORD PTR [rbx+0x42],ax
  433516:	mov    al,BYTE PTR [r14+0x44]
  43351a:	mov    BYTE PTR [rbx+0x44],al
  43351d:	mov    rdi,rbx
  433520:	mov    rsi,r14
  433523:	call   423260 <strcmp@plt+0x1fac8>
  433528:	lea    rdi,[rbx+0x20]
  43352c:	lea    rsi,[r14+0x20]
  433530:	call   423260 <strcmp@plt+0x1fac8>
  433535:	mov    eax,DWORD PTR [r14+0x48]
  433539:	mov    DWORD PTR [rbx+0x48],eax
  43353c:	mov    rax,rbx
  43353f:	add    rsp,0x8
  433543:	pop    rbx
  433544:	pop    r14
  433546:	ret    
  433547:	nop    WORD PTR [rax+rax*1+0x0]
  433550:	push   rbx
  433551:	mov    rbx,rdi
  433554:	add    rdi,0x20
  433558:	call   423930 <strcmp@plt+0x20198>
  43355d:	mov    rdi,rbx
  433560:	call   423930 <strcmp@plt+0x20198>
  433565:	mov    rdi,rbx
  433568:	pop    rbx
  433569:	jmp    403790 <free@plt>
  43356e:	xchg   ax,ax
  433570:	push   rbp
  433571:	push   r15
  433573:	push   r14
  433575:	push   r12
  433577:	push   rbx
  433578:	mov    eax,DWORD PTR [rip+0x3c492]        # 46fa10 <strcmp@plt+0x6c278>
  43357e:	mov    ecx,eax
  433580:	inc    ecx
  433582:	shr    ecx,0x1f
  433585:	lea    ecx,[rax+rcx*1]
  433588:	add    ecx,0x1
  43358b:	and    ecx,0xfffffffe
  43358e:	neg    ecx
  433590:	lea    eax,[rax+rcx*1]
  433593:	add    eax,0x1
  433596:	mov    DWORD PTR [rip+0x3c474],eax        # 46fa10 <strcmp@plt+0x6c278>
  43359c:	cdqe   
  43359e:	imul   rcx,rax,0xc8
  4335a5:	lea    r12,[rip+0x3c2d4]        # 46f880 <strcmp@plt+0x6c0e8>
  4335ac:	lea    rbp,[r12+rcx*1]
  4335b0:	mov    BYTE PTR [rcx+r12*1],0x0
  4335b5:	test   rdi,rdi
  4335b8:	je     4336a5 <strcmp@plt+0x2ff0d>
  4335be:	mov    r14,rdi
  4335c1:	call   422e20 <strcmp@plt+0x1f688>
  4335c6:	lea    rdx,[rip+0x19309]        # 44c8d6 <strcmp@plt+0x4913e>
  4335cd:	mov    r15d,0xc8
  4335d3:	mov    esi,0xc8
  4335d8:	mov    rdi,rbp
  4335db:	mov    rcx,rax
  4335de:	xor    eax,eax
  4335e0:	call   403630 <snprintf@plt>
  4335e5:	movsxd rax,DWORD PTR [rip+0x3c424]        # 46fa10 <strcmp@plt+0x6c278>
  4335ec:	imul   rbp,rax,0xc8
  4335f3:	add    rbp,r12
  4335f6:	mov    rdi,rbp
  4335f9:	call   4031e0 <strlen@plt>
  4335fe:	add    rbp,rax
  433601:	mov    ebx,0xc8
  433606:	sub    rbx,rax
  433609:	lea    rdi,[r14+0x20]
  43360d:	call   422e20 <strcmp@plt+0x1f688>
  433612:	lea    rdx,[rip+0x192cc]        # 44c8e5 <strcmp@plt+0x4914d>
  433619:	mov    rdi,rbp
  43361c:	mov    rsi,rbx
  43361f:	mov    rcx,rax
  433622:	xor    eax,eax
  433624:	call   403630 <snprintf@plt>
  433629:	movsxd rax,DWORD PTR [rip+0x3c3e0]        # 46fa10 <strcmp@plt+0x6c278>
  433630:	imul   rbx,rax,0xc8
  433637:	add    rbx,r12
  43363a:	mov    rdi,rbx
  43363d:	call   4031e0 <strlen@plt>
  433642:	add    rbx,rax
  433645:	mov    esi,0xc8
  43364a:	sub    rsi,rax
  43364d:	lea    rdx,[rip+0x192a0]        # 44c8f4 <strcmp@plt+0x4915c>
  433654:	mov    rdi,rbx
  433657:	xor    eax,eax
  433659:	call   403630 <snprintf@plt>
  43365e:	movzx  ebp,BYTE PTR [r14+0x44]
  433663:	cmp    ebp,0x1
  433666:	je     4336b8 <strcmp@plt+0x2ff20>
  433668:	cmp    bpl,0x6
  43366c:	je     4336e6 <strcmp@plt+0x2ff4e>
  43366e:	cmp    bpl,0x11
  433672:	jne    43371d <strcmp@plt+0x2ff85>
  433678:	movsxd rax,DWORD PTR [rip+0x3c391]        # 46fa10 <strcmp@plt+0x6c278>
  43367f:	imul   rbx,rax,0xc8
  433686:	add    rbx,r12
  433689:	mov    rdi,rbx
  43368c:	call   4031e0 <strlen@plt>
  433691:	add    rbx,rax
  433694:	mov    esi,0xc8
  433699:	sub    rsi,rax
  43369c:	lea    rdx,[rip+0x19259]        # 44c8fc <strcmp@plt+0x49164>
  4336a3:	jmp    433711 <strcmp@plt+0x2ff79>
  4336a5:	mov    DWORD PTR [rbp+0x3],0x5f4c4c
  4336ac:	mov    DWORD PTR [rbp+0x0],0x4c554e5f
  4336b3:	jmp    43380c <strcmp@plt+0x30074>
  4336b8:	movsxd rax,DWORD PTR [rip+0x3c351]        # 46fa10 <strcmp@plt+0x6c278>
  4336bf:	imul   rbx,rax,0xc8
  4336c6:	add    rbx,r12
  4336c9:	mov    rdi,rbx
  4336cc:	call   4031e0 <strlen@plt>
  4336d1:	add    rbx,rax
  4336d4:	sub    r15,rax
  4336d7:	lea    rdx,[rip+0x1922a]        # 44c908 <strcmp@plt+0x49170>
  4336de:	mov    rdi,rbx
  4336e1:	mov    rsi,r15
  4336e4:	jmp    433714 <strcmp@plt+0x2ff7c>
  4336e6:	movsxd rax,DWORD PTR [rip+0x3c323]        # 46fa10 <strcmp@plt+0x6c278>
  4336ed:	imul   rbx,rax,0xc8
  4336f4:	add    rbx,r12
  4336f7:	mov    rdi,rbx
  4336fa:	call   4031e0 <strlen@plt>
  4336ff:	add    rbx,rax
  433702:	mov    esi,0xc8
  433707:	sub    rsi,rax
  43370a:	lea    rdx,[rip+0x191f1]        # 44c902 <strcmp@plt+0x4916a>
  433711:	mov    rdi,rbx
  433714:	xor    eax,eax
  433716:	call   403630 <snprintf@plt>
  43371b:	jmp    433754 <strcmp@plt+0x2ffbc>
  43371d:	movsxd rax,DWORD PTR [rip+0x3c2ec]        # 46fa10 <strcmp@plt+0x6c278>
  433724:	imul   rbx,rax,0xc8
  43372b:	add    rbx,r12
  43372e:	mov    rdi,rbx
  433731:	call   4031e0 <strlen@plt>
  433736:	add    rbx,rax
  433739:	mov    esi,0xc8
  43373e:	sub    rsi,rax
  433741:	lea    rdx,[rip+0x191d1]        # 44c919 <strcmp@plt+0x49181>
  433748:	mov    rdi,rbx
  43374b:	mov    ecx,ebp
  43374d:	xor    eax,eax
  43374f:	call   403630 <snprintf@plt>
  433754:	movsxd rax,DWORD PTR [rip+0x3c2b5]        # 46fa10 <strcmp@plt+0x6c278>
  43375b:	imul   rbx,rax,0xc8
  433762:	add    rbx,r12
  433765:	mov    rdi,rbx
  433768:	call   4031e0 <strlen@plt>
  43376d:	add    rbx,rax
  433770:	mov    r15d,0xc8
  433776:	mov    esi,0xc8
  43377b:	sub    rsi,rax
  43377e:	movzx  ecx,WORD PTR [r14+0x40]
  433783:	lea    rdx,[rip+0x19185]        # 44c90f <strcmp@plt+0x49177>
  43378a:	mov    rdi,rbx
  43378d:	xor    eax,eax
  43378f:	call   403630 <snprintf@plt>
  433794:	movsxd rax,DWORD PTR [rip+0x3c275]        # 46fa10 <strcmp@plt+0x6c278>
  43379b:	imul   rbx,rax,0xc8
  4337a2:	add    rbx,r12
  4337a5:	mov    rdi,rbx
  4337a8:	call   4031e0 <strlen@plt>
  4337ad:	add    rbx,rax
  4337b0:	mov    esi,0xc8
  4337b5:	sub    rsi,rax
  4337b8:	movzx  ecx,WORD PTR [r14+0x42]
  4337bd:	lea    rdx,[rip+0x1915a]        # 44c91e <strcmp@plt+0x49186>
  4337c4:	mov    rdi,rbx
  4337c7:	xor    eax,eax
  4337c9:	call   403630 <snprintf@plt>
  4337ce:	movsxd rax,DWORD PTR [rip+0x3c23b]        # 46fa10 <strcmp@plt+0x6c278>
  4337d5:	imul   rbx,rax,0xc8
  4337dc:	add    rbx,r12
  4337df:	mov    rdi,rbx
  4337e2:	call   4031e0 <strlen@plt>
  4337e7:	add    rbx,rax
  4337ea:	sub    r15,rax
  4337ed:	mov    ecx,DWORD PTR [r14+0x48]
  4337f1:	lea    rdx,[rip+0x19134]        # 44c92c <strcmp@plt+0x49194>
  4337f8:	mov    rdi,rbx
  4337fb:	mov    rsi,r15
  4337fe:	xor    eax,eax
  433800:	call   403630 <snprintf@plt>
  433805:	movsxd rax,DWORD PTR [rip+0x3c204]        # 46fa10 <strcmp@plt+0x6c278>
  43380c:	imul   rax,rax,0xc8
  433813:	add    r12,rax
  433816:	mov    rax,r12
  433819:	pop    rbx
  43381a:	pop    r12
  43381c:	pop    r14
  43381e:	pop    r15
  433820:	pop    rbp
  433821:	ret    
  433822:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43382c:	nop    DWORD PTR [rax+0x0]
  433830:	xor    eax,eax
  433832:	cmp    BYTE PTR [rdi+0x44],0x11
  433836:	jne    433863 <strcmp@plt+0x300cb>
  433838:	movzx  ecx,WORD PTR [rdi+0x42]
  43383c:	cmp    ecx,0x10f6
  433842:	jne    43384a <strcmp@plt+0x300b2>
  433844:	mov    eax,0x1
  433849:	ret    
  43384a:	movzx  ecx,cx
  43384d:	cmp    ecx,0x10f5
  433853:	je     433844 <strcmp@plt+0x300ac>
  433855:	mov    ecx,0xffffef0b
  43385a:	add    ecx,DWORD PTR [rdi+0x40]
  43385d:	cmp    cx,0x1
  433861:	jbe    433844 <strcmp@plt+0x300ac>
  433863:	ret    
  433864:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43386e:	xchg   ax,ax
  433870:	push   rbx
  433871:	mov    rbx,rdi
  433874:	mov    cl,BYTE PTR [rdi]
  433876:	shr    cl,0x4
  433879:	cmp    cl,0x6
  43387c:	je     4338a9 <strcmp@plt+0x30111>
  43387e:	xor    eax,eax
  433880:	cmp    cl,0x4
  433883:	jne    4338c9 <strcmp@plt+0x30131>
  433885:	test   esi,esi
  433887:	je     43388d <strcmp@plt+0x300f5>
  433889:	mov    BYTE PTR [rbx+0x8],sil
  43388d:	mov    BYTE PTR [rbx+0x1],dl
  433890:	mov    WORD PTR [rbx+0xa],0x0
  433896:	mov    rdi,rbx
  433899:	mov    esi,0x14
  43389e:	call   42b110 <strcmp@plt+0x27978>
  4338a3:	mov    WORD PTR [rbx+0xa],ax
  4338a7:	jmp    4338c4 <strcmp@plt+0x3012c>
  4338a9:	test   esi,esi
  4338ab:	je     4338b1 <strcmp@plt+0x30119>
  4338ad:	mov    BYTE PTR [rbx+0x7],sil
  4338b1:	mov    eax,0xffff0ff0
  4338b6:	and    eax,DWORD PTR [rbx]
  4338b8:	movzx  ecx,dl
  4338bb:	shl    ecx,0x14
  4338be:	bswap  ecx
  4338c0:	or     ecx,eax
  4338c2:	mov    DWORD PTR [rbx],ecx
  4338c4:	mov    eax,0x1
  4338c9:	pop    rbx
  4338ca:	ret    
  4338cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4338d0:	movzx  ecx,BYTE PTR [rdi]
  4338d3:	shr    ecx,0x4
  4338d6:	cmp    ecx,0x6
  4338d9:	je     4338f0 <strcmp@plt+0x30158>
  4338db:	xor    eax,eax
  4338dd:	cmp    ecx,0x4
  4338e0:	jne    433907 <strcmp@plt+0x3016f>
  4338e2:	movzx  eax,BYTE PTR [rdi+0x1]
  4338e6:	mov    DWORD PTR [rdx],eax
  4338e8:	movzx  eax,BYTE PTR [rdi+0x8]
  4338ec:	mov    DWORD PTR [rsi],eax
  4338ee:	jmp    433902 <strcmp@plt+0x3016a>
  4338f0:	movzx  eax,BYTE PTR [rdi+0x7]
  4338f4:	mov    DWORD PTR [rsi],eax
  4338f6:	movbe  eax,DWORD PTR [rdi]
  4338fa:	shr    eax,0x14
  4338fd:	movzx  eax,al
  433900:	mov    DWORD PTR [rdx],eax
  433902:	mov    eax,0x1
  433907:	ret    
  433908:	nop    DWORD PTR [rax+rax*1+0x0]
  433910:	push   rbp
  433911:	push   r15
  433913:	push   r14
  433915:	push   rbx
  433916:	push   rax
  433917:	mov    ebp,ecx
  433919:	mov    r14,rdx
  43391c:	mov    r15,rsi
  43391f:	mov    rbx,rdi
  433922:	mov    rdi,rsi
  433925:	call   422ef0 <strcmp@plt+0x1f758>
  43392a:	cmp    ax,0xa
  43392e:	je     43399c <strcmp@plt+0x30204>
  433930:	cmp    ax,0x2
  433934:	jne    4339d7 <strcmp@plt+0x3023f>
  43393a:	mov    WORD PTR [rbx],0x45
  43393f:	add    ebp,0x14
  433942:	movbe  WORD PTR [rbx+0x2],bp
  433948:	lea    rax,[rip+0x3bf21]        # 46f870 <strcmp@plt+0x6c0d8>
  43394f:	movzx  ecx,WORD PTR [rax]
  433952:	inc    ecx
  433954:	mov    WORD PTR [rax],cx
  433957:	movbe  WORD PTR [rbx+0x4],cx
  43395d:	mov    DWORD PTR [rbx+0x6],0x11ff0000
  433964:	mov    rdi,r15
  433967:	call   423a50 <strcmp@plt+0x202b8>
  43396c:	mov    eax,DWORD PTR [rax]
  43396e:	mov    DWORD PTR [rbx+0xc],eax
  433971:	mov    rdi,r14
  433974:	call   423a50 <strcmp@plt+0x202b8>
  433979:	mov    eax,DWORD PTR [rax]
  43397b:	mov    DWORD PTR [rbx+0x10],eax
  43397e:	mov    WORD PTR [rbx+0xa],0x0
  433984:	mov    rdi,rbx
  433987:	mov    esi,0x14
  43398c:	call   42b110 <strcmp@plt+0x27978>
  433991:	mov    WORD PTR [rbx+0xa],ax
  433995:	mov    eax,0x14
  43399a:	jmp    4339d2 <strcmp@plt+0x3023a>
  43399c:	mov    BYTE PTR [rbx],0x60
  43399f:	mov    WORD PTR [rbx+0x6],0xff11
  4339a5:	movbe  WORD PTR [rbx+0x4],bp
  4339ab:	mov    rdi,r15
  4339ae:	call   423a60 <strcmp@plt+0x202c8>
  4339b3:	vmovups xmm0,XMMWORD PTR [rax]
  4339b7:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  4339bc:	mov    rdi,r14
  4339bf:	call   423a60 <strcmp@plt+0x202c8>
  4339c4:	vmovups xmm0,XMMWORD PTR [rax]
  4339c8:	vmovups XMMWORD PTR [rbx+0x18],xmm0
  4339cd:	mov    eax,0x28
  4339d2:	add    rbx,rax
  4339d5:	jmp    433a07 <strcmp@plt+0x3026f>
  4339d7:	lea    rax,[rip+0x313e2]        # 464dc0 <strcmp@plt+0x61628>
  4339de:	cmp    DWORD PTR [rax],0x2
  4339e1:	jge    4339e7 <strcmp@plt+0x3024f>
  4339e3:	xor    ebx,ebx
  4339e5:	jmp    433a07 <strcmp@plt+0x3026f>
  4339e7:	mov    rdi,r15
  4339ea:	call   422ef0 <strcmp@plt+0x1f758>
  4339ef:	movzx  edx,ax
  4339f2:	lea    rsi,[rip+0x18f40]        # 44c939 <strcmp@plt+0x491a1>
  4339f9:	xor    ebx,ebx
  4339fb:	mov    edi,0x6
  433a00:	xor    eax,eax
  433a02:	call   42e520 <strcmp@plt+0x2ad88>
  433a07:	mov    rax,rbx
  433a0a:	add    rsp,0x8
  433a0e:	pop    rbx
  433a0f:	pop    r14
  433a11:	pop    r15
  433a13:	pop    rbp
  433a14:	ret    
  433a15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433a1f:	nop
  433a20:	push   rbp
  433a21:	push   r15
  433a23:	push   r14
  433a25:	push   r13
  433a27:	push   r12
  433a29:	push   rbx
  433a2a:	sub    rsp,0x18
  433a2e:	mov    r14d,r9d
  433a31:	mov    DWORD PTR [rsp+0xc],r8d
  433a36:	mov    r15,rcx
  433a39:	mov    rbx,rdx
  433a3c:	mov    r13d,esi
  433a3f:	mov    r12,rdi
  433a42:	mov    rdi,rdx
  433a45:	call   422ef0 <strcmp@plt+0x1f758>
  433a4a:	mov    ebp,eax
  433a4c:	mov    rdi,r15
  433a4f:	call   422ef0 <strcmp@plt+0x1f758>
  433a54:	cmp    bp,ax
  433a57:	jne    433b4c <strcmp@plt+0x303b4>
  433a5d:	mov    rdi,rbx
  433a60:	call   422ef0 <strcmp@plt+0x1f758>
  433a65:	cmp    ax,0x2
  433a69:	je     433a7d <strcmp@plt+0x302e5>
  433a6b:	mov    rdi,rbx
  433a6e:	call   422ef0 <strcmp@plt+0x1f758>
  433a73:	cmp    ax,0xa
  433a77:	jne    433be0 <strcmp@plt+0x30448>
  433a7d:	mov    DWORD PTR [rsp+0x8],r14d
  433a82:	mov    rbp,QWORD PTR [rsp+0x50]
  433a87:	mov    rdi,rbx
  433a8a:	call   422ef0 <strcmp@plt+0x1f758>
  433a8f:	movzx  edi,ax
  433a92:	call   424470 <strcmp@plt+0x20cd8>
  433a97:	lea    eax,[rax+r13*1]
  433a9b:	add    eax,0x8
  433a9e:	mov    DWORD PTR [rbp+0x0],eax
  433aa1:	movsxd rbp,eax
  433aa4:	mov    rdi,rbp
  433aa7:	call   403520 <malloc@plt>
  433aac:	test   rax,rax
  433aaf:	je     433bad <strcmp@plt+0x30415>
  433ab5:	mov    r14,rax
  433ab8:	mov    QWORD PTR [rsp+0x10],r12
  433abd:	lea    r12d,[r13+0x8]
  433ac1:	mov    rdi,rax
  433ac4:	xor    esi,esi
  433ac6:	mov    rdx,rbp
  433ac9:	call   403260 <memset@plt>
  433ace:	mov    rdi,r14
  433ad1:	mov    rsi,rbx
  433ad4:	mov    rdx,r15
  433ad7:	mov    ecx,r12d
  433ada:	call   433910 <strcmp@plt+0x30178>
  433adf:	test   rax,rax
  433ae2:	je     433c0f <strcmp@plt+0x30477>
  433ae8:	mov    rbp,rax
  433aeb:	mov    eax,DWORD PTR [rsp+0xc]
  433aef:	movbe  WORD PTR [rbp+0x0],ax
  433af5:	mov    eax,DWORD PTR [rsp+0x8]
  433af9:	movbe  WORD PTR [rbp+0x2],ax
  433aff:	movbe  WORD PTR [rbp+0x4],r12w
  433b06:	mov    WORD PTR [rbp+0x6],0x0
  433b0c:	mov    rdi,rbp
  433b0f:	add    rdi,0x8
  433b13:	movsxd rdx,r13d
  433b16:	mov    rsi,QWORD PTR [rsp+0x10]
  433b1b:	call   403330 <memcpy@plt>
  433b20:	mov    rdi,rbx
  433b23:	call   422ef0 <strcmp@plt+0x1f758>
  433b28:	movzx  ecx,ax
  433b2b:	mov    rdi,rbp
  433b2e:	mov    esi,r12d
  433b31:	mov    rdx,r14
  433b34:	call   42b750 <strcmp@plt+0x27fb8>
  433b39:	cmp    ax,0xffff
  433b3d:	je     433c2e <strcmp@plt+0x30496>
  433b43:	mov    WORD PTR [rbp+0x6],ax
  433b47:	jmp    433c39 <strcmp@plt+0x304a1>
  433b4c:	lea    rax,[rip+0x3126d]        # 464dc0 <strcmp@plt+0x61628>
  433b53:	cmp    DWORD PTR [rax],0x2
  433b56:	jl     433c36 <strcmp@plt+0x3049e>
  433b5c:	mov    rdi,rbx
  433b5f:	call   422ef0 <strcmp@plt+0x1f758>
  433b64:	movzx  r12d,ax
  433b68:	mov    rdi,rbx
  433b6b:	call   422e20 <strcmp@plt+0x1f688>
  433b70:	mov    rbx,rax
  433b73:	mov    rdi,r15
  433b76:	call   422ef0 <strcmp@plt+0x1f758>
  433b7b:	movzx  ebp,ax
  433b7e:	mov    rdi,r15
  433b81:	call   422e20 <strcmp@plt+0x1f688>
  433b86:	lea    rsi,[rip+0x18de3]        # 44c970 <strcmp@plt+0x491d8>
  433b8d:	xor    r14d,r14d
  433b90:	mov    edi,0x6
  433b95:	mov    edx,r12d
  433b98:	mov    rcx,rbx
  433b9b:	mov    r8d,ebp
  433b9e:	mov    r9,rax
  433ba1:	xor    eax,eax
  433ba3:	call   42e520 <strcmp@plt+0x2ad88>
  433ba8:	jmp    433c39 <strcmp@plt+0x304a1>
  433bad:	lea    rax,[rip+0x3120c]        # 464dc0 <strcmp@plt+0x61628>
  433bb4:	cmp    DWORD PTR [rax],0x2
  433bb7:	jl     433c36 <strcmp@plt+0x3049e>
  433bb9:	call   403040 <__errno_location@plt>
  433bbe:	mov    edi,DWORD PTR [rax]
  433bc0:	call   403170 <strerror@plt>
  433bc5:	lea    rsi,[rip+0x18e05]        # 44c9d1 <strcmp@plt+0x49239>
  433bcc:	xor    r14d,r14d
  433bcf:	mov    edi,0x6
  433bd4:	mov    rdx,rax
  433bd7:	xor    eax,eax
  433bd9:	call   42e520 <strcmp@plt+0x2ad88>
  433bde:	jmp    433c39 <strcmp@plt+0x304a1>
  433be0:	lea    rax,[rip+0x311d9]        # 464dc0 <strcmp@plt+0x61628>
  433be7:	cmp    DWORD PTR [rax],0x2
  433bea:	jl     433c36 <strcmp@plt+0x3049e>
  433bec:	mov    rdi,rbx
  433bef:	call   422ef0 <strcmp@plt+0x1f758>
  433bf4:	movzx  edx,ax
  433bf7:	lea    rsi,[rip+0x18db1]        # 44c9af <strcmp@plt+0x49217>
  433bfe:	xor    r14d,r14d
  433c01:	mov    edi,0x6
  433c06:	xor    eax,eax
  433c08:	call   42e520 <strcmp@plt+0x2ad88>
  433c0d:	jmp    433c39 <strcmp@plt+0x304a1>
  433c0f:	lea    rax,[rip+0x311aa]        # 464dc0 <strcmp@plt+0x61628>
  433c16:	cmp    DWORD PTR [rax],0x2
  433c19:	jl     433c2e <strcmp@plt+0x30496>
  433c1b:	lea    rsi,[rip+0x18dfd]        # 44ca1f <strcmp@plt+0x49287>
  433c22:	mov    edi,0x6
  433c27:	xor    eax,eax
  433c29:	call   42e520 <strcmp@plt+0x2ad88>
  433c2e:	mov    rdi,r14
  433c31:	call   403790 <free@plt>
  433c36:	xor    r14d,r14d
  433c39:	mov    rax,r14
  433c3c:	add    rsp,0x18
  433c40:	pop    rbx
  433c41:	pop    r12
  433c43:	pop    r13
  433c45:	pop    r14
  433c47:	pop    r15
  433c49:	pop    rbp
  433c4a:	ret    
  433c4b:	nop    DWORD PTR [rax+rax*1+0x0]
  433c50:	push   r15
  433c52:	push   r14
  433c54:	push   rbx
  433c55:	mov    r14,rsi
  433c58:	mov    rbx,rdi
  433c5b:	mov    BYTE PTR [rip+0x3bdbe],0x0        # 46fa20 <strcmp@plt+0x6c288>
  433c62:	movzx  eax,BYTE PTR [rdi]
  433c65:	shr    eax,0x4
  433c68:	cmp    eax,0x6
  433c6b:	je     433c91 <strcmp@plt+0x304f9>
  433c6d:	cmp    eax,0x4
  433c70:	jne    433cc5 <strcmp@plt+0x3052d>
  433c72:	lea    rdi,[rbx+0xc]
  433c76:	mov    esi,0x2
  433c7b:	call   423ce0 <strcmp@plt+0x20548>
  433c80:	mov    r15,rax
  433c83:	add    rbx,0x10
  433c87:	mov    rdi,rbx
  433c8a:	mov    esi,0x2
  433c8f:	jmp    433cae <strcmp@plt+0x30516>
  433c91:	lea    rdi,[rbx+0x8]
  433c95:	mov    esi,0xa
  433c9a:	call   423ce0 <strcmp@plt+0x20548>
  433c9f:	mov    r15,rax
  433ca2:	add    rbx,0x18
  433ca6:	mov    rdi,rbx
  433ca9:	mov    esi,0xa
  433cae:	call   423ce0 <strcmp@plt+0x20548>
  433cb3:	lea    rdi,[rip+0x3bd66]        # 46fa20 <strcmp@plt+0x6c288>
  433cba:	mov    rsi,r14
  433cbd:	mov    rdx,r15
  433cc0:	mov    rcx,rax
  433cc3:	jmp    433cd9 <strcmp@plt+0x30541>
  433cc5:	lea    rdi,[rip+0x3bd54]        # 46fa20 <strcmp@plt+0x6c288>
  433ccc:	lea    rcx,[rip+0x18d82]        # 44ca55 <strcmp@plt+0x492bd>
  433cd3:	mov    rsi,r14
  433cd6:	mov    rdx,rcx
  433cd9:	xor    eax,eax
  433cdb:	call   4030b0 <sprintf@plt>
  433ce0:	lea    rax,[rip+0x3bd39]        # 46fa20 <strcmp@plt+0x6c288>
  433ce7:	pop    rbx
  433ce8:	pop    r14
  433cea:	pop    r15
  433cec:	ret    
  433ced:	nop    DWORD PTR [rax]
  433cf0:	mov    eax,esi
  433cf2:	bswap  eax
  433cf4:	mov    ecx,eax
  433cf6:	mov    BYTE PTR [rdi],ah
  433cf8:	shr    eax,0x10
  433cfb:	shr    ecx,0x18
  433cfe:	mov    BYTE PTR [rdi+0x1],al
  433d01:	mov    BYTE PTR [rdi+0x2],cl
  433d04:	ret    
  433d05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433d0f:	nop
  433d10:	movzx  eax,BYTE PTR [rdi]
  433d13:	shl    eax,0x10
  433d16:	movzx  ecx,BYTE PTR [rdi+0x1]
  433d1a:	shl    ecx,0x8
  433d1d:	or     ecx,eax
  433d1f:	movzx  eax,BYTE PTR [rdi+0x2]
  433d23:	or     eax,ecx
  433d25:	ret    
  433d26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433d30:	push   rbp
  433d31:	push   r15
  433d33:	push   r14
  433d35:	push   rbx
  433d36:	sub    rsp,0x28
  433d3a:	xor    ebp,ebp
  433d3c:	cmp    DWORD PTR [rsi+0x18],0x2
  433d40:	jne    433dd5 <strcmp@plt+0x3063d>
  433d46:	mov    r15,rdi
  433d49:	cmp    DWORD PTR [rdi+0x18],0x1
  433d4d:	jne    433dd5 <strcmp@plt+0x3063d>
  433d53:	mov    rbx,rsi
  433d56:	mov    rdi,r15
  433d59:	call   422ef0 <strcmp@plt+0x1f758>
  433d5e:	mov    r14d,eax
  433d61:	mov    rdi,rbx
  433d64:	call   422ef0 <strcmp@plt+0x1f758>
  433d69:	cmp    r14w,ax
  433d6d:	jne    433dd5 <strcmp@plt+0x3063d>
  433d6f:	mov    rdi,rbx
  433d72:	call   433df0 <strcmp@plt+0x30658>
  433d77:	mov    r14,rax
  433d7a:	mov    rdi,rbx
  433d7d:	call   422d90 <strcmp@plt+0x1f5f8>
  433d82:	mov    ebx,eax
  433d84:	lea    rbp,[rsp+0x8]
  433d89:	mov    rdi,rbp
  433d8c:	mov    rsi,r15
  433d8f:	call   423260 <strcmp@plt+0x1fac8>
  433d94:	mov    rdi,rbp
  433d97:	call   422ea0 <strcmp@plt+0x1f708>
  433d9c:	movzx  esi,bl
  433d9f:	mov    rdi,rbp
  433da2:	call   423170 <strcmp@plt+0x1f9d8>
  433da7:	mov    rdi,rbp
  433daa:	call   433df0 <strcmp@plt+0x30658>
  433daf:	mov    rbx,rax
  433db2:	mov    rdi,rax
  433db5:	mov    rsi,r14
  433db8:	call   423670 <strcmp@plt+0x1fed8>
  433dbd:	xor    ebp,ebp
  433dbf:	test   eax,eax
  433dc1:	sete   bpl
  433dc5:	mov    rdi,r14
  433dc8:	call   422c90 <strcmp@plt+0x1f4f8>
  433dcd:	mov    rdi,rbx
  433dd0:	call   422c90 <strcmp@plt+0x1f4f8>
  433dd5:	mov    eax,ebp
  433dd7:	add    rsp,0x28
  433ddb:	pop    rbx
  433ddc:	pop    r14
  433dde:	pop    r15
  433de0:	pop    rbp
  433de1:	ret    
  433de2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433dec:	nop    DWORD PTR [rax+0x0]
  433df0:	push   rbp
  433df1:	push   r14
  433df3:	push   rbx
  433df4:	sub    rsp,0x20
  433df8:	mov    rbx,rdi
  433dfb:	cmp    DWORD PTR [rdi+0x18],0x2
  433dff:	jne    433e57 <strcmp@plt+0x306bf>
  433e01:	mov    rdi,rbx
  433e04:	call   422ef0 <strcmp@plt+0x1f758>
  433e09:	cmp    ax,0xa
  433e0d:	je     433e8c <strcmp@plt+0x306f4>
  433e0f:	cmp    ax,0x2
  433e13:	jne    433f1d <strcmp@plt+0x30785>
  433e19:	mov    rdi,rbx
  433e1c:	call   422d90 <strcmp@plt+0x1f5f8>
  433e21:	mov    ebp,eax
  433e23:	mov    rdi,rbx
  433e26:	call   423060 <strcmp@plt+0x1f8c8>
  433e2b:	mov    rdi,rax
  433e2e:	call   423a50 <strcmp@plt+0x202b8>
  433e33:	mov    eax,DWORD PTR [rax]
  433e35:	movbe  DWORD PTR [rsp],eax
  433e3a:	bswap  eax
  433e3c:	test   bp,bp
  433e3f:	je     433f4f <strcmp@plt+0x307b7>
  433e45:	neg    bpl
  433e48:	mov    ecx,0xffffffff
  433e4d:	shlx   ebp,ecx,ebp
  433e52:	jmp    433f51 <strcmp@plt+0x307b9>
  433e57:	lea    rax,[rip+0x30f62]        # 464dc0 <strcmp@plt+0x61628>
  433e5e:	cmp    DWORD PTR [rax],0x2
  433e61:	jl     433f29 <strcmp@plt+0x30791>
  433e67:	mov    rdi,rbx
  433e6a:	call   422e20 <strcmp@plt+0x1f688>
  433e6f:	lea    rsi,[rip+0x18be6]        # 44ca5c <strcmp@plt+0x492c4>
  433e76:	xor    ebx,ebx
  433e78:	mov    edi,0x6
  433e7d:	mov    rdx,rax
  433e80:	xor    eax,eax
  433e82:	call   42e520 <strcmp@plt+0x2ad88>
  433e87:	jmp    433f78 <strcmp@plt+0x307e0>
  433e8c:	vxorps xmm0,xmm0,xmm0
  433e90:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  433e96:	mov    rdi,rbx
  433e99:	call   422d90 <strcmp@plt+0x1f5f8>
  433e9e:	mov    ebp,eax
  433ea0:	movzx  edx,ax
  433ea3:	mov    r14,rdx
  433ea6:	shr    r14,0x3
  433eaa:	and    ebp,0x7
  433ead:	test   r14d,r14d
  433eb0:	je     433ec4 <strcmp@plt+0x3072c>
  433eb2:	shr    edx,0x3
  433eb5:	lea    rdi,[rsp+0x10]
  433eba:	mov    esi,0xff
  433ebf:	call   403260 <memset@plt>
  433ec4:	test   ebp,ebp
  433ec6:	je     433edc <strcmp@plt+0x30744>
  433ec8:	mov    al,0x8
  433eca:	sub    al,bpl
  433ecd:	mov    ecx,0xff
  433ed2:	shlx   eax,ecx,eax
  433ed7:	mov    BYTE PTR [rsp+r14*1+0x10],al
  433edc:	mov    rdi,rbx
  433edf:	call   423060 <strcmp@plt+0x1f8c8>
  433ee4:	mov    rdi,rax
  433ee7:	call   423a60 <strcmp@plt+0x202c8>
  433eec:	vmovaps xmm0,XMMWORD PTR [rsp+0x10]
  433ef2:	vandps xmm0,xmm0,XMMWORD PTR [rax]
  433ef6:	vmovaps XMMWORD PTR [rsp],xmm0
  433efb:	mov    edi,0x1
  433f00:	call   422be0 <strcmp@plt+0x1f448>
  433f05:	mov    rbx,rax
  433f08:	mov    rdi,rax
  433f0b:	call   423060 <strcmp@plt+0x1f8c8>
  433f10:	mov    rsi,rsp
  433f13:	mov    rdi,rax
  433f16:	call   423c00 <strcmp@plt+0x20468>
  433f1b:	jmp    433f78 <strcmp@plt+0x307e0>
  433f1d:	lea    rax,[rip+0x30e9c]        # 464dc0 <strcmp@plt+0x61628>
  433f24:	cmp    DWORD PTR [rax],0x2
  433f27:	jge    433f2d <strcmp@plt+0x30795>
  433f29:	xor    ebx,ebx
  433f2b:	jmp    433f78 <strcmp@plt+0x307e0>
  433f2d:	mov    rdi,rbx
  433f30:	call   422ef0 <strcmp@plt+0x1f758>
  433f35:	movzx  edx,ax
  433f38:	lea    rsi,[rip+0x18b4e]        # 44ca8d <strcmp@plt+0x492f5>
  433f3f:	xor    ebx,ebx
  433f41:	mov    edi,0x6
  433f46:	xor    eax,eax
  433f48:	call   42e520 <strcmp@plt+0x2ad88>
  433f4d:	jmp    433f78 <strcmp@plt+0x307e0>
  433f4f:	xor    ebp,ebp
  433f51:	and    ebp,eax
  433f53:	mov    edi,0x1
  433f58:	call   422be0 <strcmp@plt+0x1f448>
  433f5d:	mov    rbx,rax
  433f60:	movbe  DWORD PTR [rsp],ebp
  433f65:	mov    rdi,rax
  433f68:	call   423060 <strcmp@plt+0x1f8c8>
  433f6d:	mov    rsi,rsp
  433f70:	mov    rdi,rax
  433f73:	call   423bf0 <strcmp@plt+0x20458>
  433f78:	mov    rax,rbx
  433f7b:	add    rsp,0x20
  433f7f:	pop    rbx
  433f80:	pop    r14
  433f82:	pop    rbp
  433f83:	ret    
  433f84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  433f8e:	xchg   ax,ax
  433f90:	push   rbp
  433f91:	push   r15
  433f93:	push   r14
  433f95:	push   r12
  433f97:	push   rbx
  433f98:	mov    eax,DWORD PTR [rdi+0x18]
  433f9b:	xor    ebx,ebx
  433f9d:	cmp    eax,DWORD PTR [rsi+0x18]
  433fa0:	jne    43404f <strcmp@plt+0x308b7>
  433fa6:	mov    rbp,rsi
  433fa9:	call   422dd0 <strcmp@plt+0x1f638>
  433fae:	mov    r15,rax
  433fb1:	mov    rdi,rbp
  433fb4:	call   422dd0 <strcmp@plt+0x1f638>
  433fb9:	test   r15,r15
  433fbc:	je     43404f <strcmp@plt+0x308b7>
  433fc2:	mov    r14,rax
  433fc5:	test   rax,rax
  433fc8:	je     43404f <strcmp@plt+0x308b7>
  433fce:	mov    rdi,r15
  433fd1:	call   422ef0 <strcmp@plt+0x1f758>
  433fd6:	mov    ebp,eax
  433fd8:	mov    rdi,r14
  433fdb:	call   422ef0 <strcmp@plt+0x1f758>
  433fe0:	cmp    bp,ax
  433fe3:	jne    43404f <strcmp@plt+0x308b7>
  433fe5:	mov    rdi,r15
  433fe8:	call   422d90 <strcmp@plt+0x1f5f8>
  433fed:	mov    ebp,eax
  433fef:	mov    rdi,r14
  433ff2:	call   422d90 <strcmp@plt+0x1f5f8>
  433ff7:	cmp    bp,ax
  433ffa:	ja     43404f <strcmp@plt+0x308b7>
  433ffc:	mov    r12d,eax
  433fff:	mov    rdi,r15
  434002:	call   433df0 <strcmp@plt+0x30658>
  434007:	mov    r15,rax
  43400a:	movzx  esi,bpl
  43400e:	mov    rdi,r14
  434011:	call   423170 <strcmp@plt+0x1f9d8>
  434016:	mov    rdi,r14
  434019:	call   433df0 <strcmp@plt+0x30658>
  43401e:	mov    rbp,rax
  434021:	movzx  esi,r12b
  434025:	mov    rdi,r14
  434028:	call   423170 <strcmp@plt+0x1f9d8>
  43402d:	mov    rdi,r15
  434030:	mov    rsi,rbp
  434033:	call   423670 <strcmp@plt+0x1fed8>
  434038:	xor    ebx,ebx
  43403a:	test   eax,eax
  43403c:	sete   bl
  43403f:	mov    rdi,r15
  434042:	call   422c90 <strcmp@plt+0x1f4f8>
  434047:	mov    rdi,rbp
  43404a:	call   422c90 <strcmp@plt+0x1f4f8>
  43404f:	mov    eax,ebx
  434051:	pop    rbx
  434052:	pop    r12
  434054:	pop    r14
  434056:	pop    r15
  434058:	pop    rbp
  434059:	ret    
  43405a:	nop    WORD PTR [rax+rax*1+0x0]
  434060:	push   r14
  434062:	push   rbx
  434063:	push   rax
  434064:	mov    r14,rdi
  434067:	call   433df0 <strcmp@plt+0x30658>
  43406c:	mov    rbx,rax
  43406f:	test   rax,rax
  434072:	je     434087 <strcmp@plt+0x308ef>
  434074:	mov    rdi,r14
  434077:	call   422d90 <strcmp@plt+0x1f5f8>
  43407c:	movzx  esi,al
  43407f:	mov    rdi,rbx
  434082:	call   423170 <strcmp@plt+0x1f9d8>
  434087:	mov    rax,rbx
  43408a:	add    rsp,0x8
  43408e:	pop    rbx
  43408f:	pop    r14
  434091:	ret    
  434092:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43409c:	nop    DWORD PTR [rax+0x0]
  4340a0:	push   r14
  4340a2:	push   rbx
  4340a3:	push   rax
  4340a4:	call   422dd0 <strcmp@plt+0x1f638>
  4340a9:	test   rax,rax
  4340ac:	je     4340ee <strcmp@plt+0x30956>
  4340ae:	mov    rbx,rax
  4340b1:	mov    rdi,rax
  4340b4:	call   433df0 <strcmp@plt+0x30658>
  4340b9:	mov    r14,rax
  4340bc:	test   rax,rax
  4340bf:	je     4340d4 <strcmp@plt+0x3093c>
  4340c1:	mov    rdi,rbx
  4340c4:	call   422d90 <strcmp@plt+0x1f5f8>
  4340c9:	movzx  esi,al
  4340cc:	mov    rdi,r14
  4340cf:	call   423170 <strcmp@plt+0x1f9d8>
  4340d4:	mov    rdi,rbx
  4340d7:	mov    rsi,r14
  4340da:	call   423260 <strcmp@plt+0x1fac8>
  4340df:	mov    rdi,r14
  4340e2:	call   422c90 <strcmp@plt+0x1f4f8>
  4340e7:	mov    eax,0x1
  4340ec:	jmp    4340f0 <strcmp@plt+0x30958>
  4340ee:	xor    eax,eax
  4340f0:	add    rsp,0x8
  4340f4:	pop    rbx
  4340f5:	pop    r14
  4340f7:	ret    
  4340f8:	nop    DWORD PTR [rax+rax*1+0x0]
  434100:	push   rbx
  434101:	mov    rbx,rdi
  434104:	call   422ef0 <strcmp@plt+0x1f758>
  434109:	cmp    ax,0xa
  43410d:	je     434128 <strcmp@plt+0x30990>
  43410f:	mov    ecx,eax
  434111:	mov    eax,0xffffffff
  434116:	cmp    cx,0x2
  43411a:	jne    434199 <strcmp@plt+0x30a01>
  43411c:	mov    rdi,rbx
  43411f:	call   423a50 <strcmp@plt+0x202b8>
  434124:	mov    eax,DWORD PTR [rax]
  434126:	pop    rbx
  434127:	ret    
  434128:	mov    rdi,rbx
  43412b:	call   423060 <strcmp@plt+0x1f8c8>
  434130:	mov    rdi,rax
  434133:	call   423a60 <strcmp@plt+0x202c8>
  434138:	movzx  ecx,BYTE PTR [rax]
  43413b:	movzx  edx,BYTE PTR [rax+0x1]
  43413f:	add    edx,ecx
  434141:	movzx  ecx,BYTE PTR [rax+0x2]
  434145:	add    ecx,edx
  434147:	movzx  edx,BYTE PTR [rax+0x3]
  43414b:	add    edx,ecx
  43414d:	movzx  ecx,BYTE PTR [rax+0x4]
  434151:	add    ecx,edx
  434153:	movzx  edx,BYTE PTR [rax+0x5]
  434157:	add    edx,ecx
  434159:	movzx  ecx,BYTE PTR [rax+0x6]
  43415d:	add    ecx,edx
  43415f:	movzx  edx,BYTE PTR [rax+0x7]
  434163:	add    edx,ecx
  434165:	movzx  ecx,BYTE PTR [rax+0x8]
  434169:	add    ecx,edx
  43416b:	movzx  edx,BYTE PTR [rax+0x9]
  43416f:	add    edx,ecx
  434171:	movzx  ecx,BYTE PTR [rax+0xa]
  434175:	add    ecx,edx
  434177:	movzx  edx,BYTE PTR [rax+0xb]
  43417b:	add    edx,ecx
  43417d:	movzx  ecx,BYTE PTR [rax+0xc]
  434181:	add    ecx,edx
  434183:	movzx  edx,BYTE PTR [rax+0xd]
  434187:	add    edx,ecx
  434189:	movzx  ecx,BYTE PTR [rax+0xe]
  43418d:	add    ecx,edx
  43418f:	movzx  eax,BYTE PTR [rax+0xf]
  434193:	lea    eax,[rax+rcx*1]
  434196:	add    eax,0xffffffff
  434199:	pop    rbx
  43419a:	ret    
  43419b:	nop    DWORD PTR [rax+rax*1+0x0]
  4341a0:	push   rbp
  4341a1:	push   r15
  4341a3:	push   r14
  4341a5:	push   r13
  4341a7:	push   r12
  4341a9:	push   rbx
  4341aa:	sub    rsp,0x1028
  4341b1:	mov    DWORD PTR [rsp+0x18],r9d
  4341b6:	mov    DWORD PTR [rsp+0x8],r8d
  4341bb:	mov    DWORD PTR [rsp+0x1c],ecx
  4341bf:	mov    DWORD PTR [rsp+0x10],edx
  4341c3:	mov    DWORD PTR [rsp+0x4],esi
  4341c7:	mov    ebx,edi
  4341c9:	mov    rbp,QWORD PTR [rsp+0x1060]
  4341d1:	mov    edi,0x10
  4341d6:	mov    esi,0x2
  4341db:	xor    edx,edx
  4341dd:	call   4030f0 <socket@plt>
  4341e2:	mov    DWORD PTR [rsp+0xc],eax
  4341e6:	test   eax,eax
  4341e8:	jns    434204 <strcmp@plt+0x30a6c>
  4341ea:	lea    rsi,[rip+0x188ea]        # 44cadb <strcmp@plt+0x49343>
  4341f1:	mov    edi,0x1
  4341f6:	xor    eax,eax
  4341f8:	call   42e520 <strcmp@plt+0x2ad88>
  4341fd:	xor    eax,eax
  4341ff:	call   43aeb0 <strcmp@plt+0x37718>
  434204:	mov    r13,QWORD PTR [rsp+0x1068]
  43420c:	mov    DWORD PTR [rsp+0x14],ebx
  434210:	cmp    ebx,0x2
  434213:	mov    eax,0x8
  434218:	mov    r12d,0x14
  43421e:	cmove  r12d,eax
  434222:	lea    rdi,[rsp+0x20]
  434227:	xor    r15d,r15d
  43422a:	mov    edx,0x1000
  43422f:	xor    esi,esi
  434231:	call   403260 <memset@plt>
  434236:	test   rbp,rbp
  434239:	je     43426c <strcmp@plt+0x30ad4>
  43423b:	mov    WORD PTR [rsp+0x3e],0x2
  434242:	mov    WORD PTR [rsp+0x3c],r12w
  434248:	lea    rdi,[rsp+0x40]
  43424d:	mov    rsi,rbp
  434250:	call   423480 <strcmp@plt+0x1fce8>
  434255:	movzx  r14d,WORD PTR [rsp+0x3c]
  43425b:	add    r14d,0xc
  43425f:	mov    rdi,rbp
  434262:	call   4230b0 <strcmp@plt+0x1f918>
  434267:	mov    r15d,eax
  43426a:	jmp    434272 <strcmp@plt+0x30ada>
  43426c:	mov    r14d,0xc
  434272:	lea    rbp,[rsp+0x3c]
  434277:	test   r13,r13
  43427a:	je     4342b7 <strcmp@plt+0x30b1f>
  43427c:	movzx  eax,WORD PTR [rsp+0x3c]
  434281:	add    rax,rbp
  434284:	cmp    r14d,0xc
  434288:	cmova  rbp,rax
  43428c:	mov    WORD PTR [rbp+0x2],0x1
  434292:	mov    WORD PTR [rbp+0x0],r12w
  434297:	lea    rdi,[rbp+0x4]
  43429b:	mov    rsi,r13
  43429e:	call   423480 <strcmp@plt+0x1fce8>
  4342a3:	movzx  ebx,WORD PTR [rbp+0x0]
  4342a7:	add    ebx,r14d
  4342aa:	mov    rdi,r13
  4342ad:	call   4230b0 <strcmp@plt+0x1f918>
  4342b2:	mov    r14d,ebx
  4342b5:	jmp    4342b9 <strcmp@plt+0x30b21>
  4342b7:	xor    eax,eax
  4342b9:	mov    esi,DWORD PTR [rsp+0x4]
  4342bd:	mov    edx,DWORD PTR [rsp+0x8]
  4342c1:	test   edx,edx
  4342c3:	je     4342e0 <strcmp@plt+0x30b48>
  4342c5:	cmp    r14d,0xd
  4342c9:	jb     4342d2 <strcmp@plt+0x30b3a>
  4342cb:	movzx  ecx,WORD PTR [rbp+0x0]
  4342cf:	add    rbp,rcx
  4342d2:	mov    DWORD PTR [rbp+0x0],0x60008
  4342d9:	mov    DWORD PTR [rbp+0x4],edx
  4342dc:	add    r14d,0x8
  4342e0:	mov    ecx,DWORD PTR [rsp+0x1070]
  4342e7:	test   esi,esi
  4342e9:	je     434306 <strcmp@plt+0x30b6e>
  4342eb:	cmp    r14d,0xd
  4342ef:	jb     4342f8 <strcmp@plt+0x30b60>
  4342f1:	movzx  edx,WORD PTR [rbp+0x0]
  4342f5:	add    rbp,rdx
  4342f8:	mov    DWORD PTR [rbp+0x0],0x30008
  4342ff:	mov    DWORD PTR [rbp+0x4],esi
  434302:	add    r14d,0x8
  434306:	add    r14d,0x10
  43430a:	mov    DWORD PTR [rsp+0x20],r14d
  43430f:	xor    edx,edx
  434311:	cmp    DWORD PTR [rsp+0x10],0x20
  434316:	sete   dl
  434319:	mov    esi,0x505
  43431e:	mov    edi,0x5
  434323:	cmove  edi,esi
  434326:	mov    WORD PTR [rsp+0x26],di
  43432b:	xor    edx,0x21
  43432e:	mov    WORD PTR [rsp+0x24],dx
  434333:	mov    edx,DWORD PTR [rsp+0x14]
  434337:	mov    BYTE PTR [rsp+0x30],dl
  43433b:	mov    BYTE PTR [rsp+0x31],al
  43433f:	mov    BYTE PTR [rsp+0x32],r15b
  434344:	mov    eax,DWORD PTR [rsp+0x1c]
  434348:	test   al,al
  43434a:	movzx  eax,al
  43434d:	mov    edx,0xfe
  434352:	cmovne edx,eax
  434355:	mov    BYTE PTR [rsp+0x34],dl
  434359:	mov    BYTE PTR [rsp+0x36],0x0
  43435e:	mov    eax,DWORD PTR [rsp+0x18]
  434362:	mov    BYTE PTR [rsp+0x37],al
  434366:	mov    DWORD PTR [rsp+0x38],ecx
  43436a:	lea    rsi,[rsp+0x20]
  43436f:	mov    ebx,DWORD PTR [rsp+0xc]
  434373:	mov    edi,ebx
  434375:	mov    rdx,r14
  434378:	xor    ecx,ecx
  43437a:	call   403230 <send@plt>
  43437f:	test   eax,eax
  434381:	jns    4343b3 <strcmp@plt+0x30c1b>
  434383:	call   403040 <__errno_location@plt>
  434388:	mov    edi,DWORD PTR [rax]
  43438a:	call   403170 <strerror@plt>
  43438f:	lea    rsi,[rip+0x1877c]        # 44cb12 <strcmp@plt+0x4937a>
  434396:	mov    edi,0x1
  43439b:	mov    rdx,rax
  43439e:	xor    eax,eax
  4343a0:	call   42e520 <strcmp@plt+0x2ad88>
  4343a5:	mov    edi,ebx
  4343a7:	call   403770 <close@plt>
  4343ac:	xor    eax,eax
  4343ae:	call   43aeb0 <strcmp@plt+0x37718>
  4343b3:	mov    edi,ebx
  4343b5:	call   403770 <close@plt>
  4343ba:	mov    eax,0x1
  4343bf:	add    rsp,0x1028
  4343c6:	pop    rbx
  4343c7:	pop    r12
  4343c9:	pop    r13
  4343cb:	pop    r14
  4343cd:	pop    r15
  4343cf:	pop    rbp
  4343d0:	ret    
  4343d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4343db:	nop    DWORD PTR [rax+rax*1+0x0]
  4343e0:	push   rbp
  4343e1:	push   r15
  4343e3:	push   r14
  4343e5:	push   rbx
  4343e6:	push   rax
  4343e7:	mov    rbx,r9
  4343ea:	mov    r9d,r8d
  4343ed:	mov    r14d,ecx
  4343f0:	mov    ebp,edx
  4343f2:	mov    r15,QWORD PTR [rsp+0x30]
  4343f7:	mov    eax,DWORD PTR [rsp+0x38]
  4343fb:	sub    rsp,0x8
  4343ff:	mov    edx,0x20
  434404:	mov    ecx,ebp
  434406:	mov    r8d,r14d
  434409:	push   rax
  43440a:	push   r15
  43440c:	push   rbx
  43440d:	call   4341a0 <strcmp@plt+0x30a08>
  434412:	add    rsp,0x20
  434416:	lea    rax,[rip+0x309a3]        # 464dc0 <strcmp@plt+0x61628>
  43441d:	cmp    DWORD PTR [rax],0x0
  434420:	jle    434455 <strcmp@plt+0x30cbd>
  434422:	mov    rdi,rbx
  434425:	call   422e20 <strcmp@plt+0x1f688>
  43442a:	mov    rbx,rax
  43442d:	mov    rdi,r15
  434430:	call   422e20 <strcmp@plt+0x1f688>
  434435:	movzx  r8d,bpl
  434439:	lea    rsi,[rip+0x186fc]        # 44cb3c <strcmp@plt+0x493a4>
  434440:	mov    edi,0x5
  434445:	mov    rdx,rbx
  434448:	mov    rcx,rax
  43444b:	mov    r9d,r14d
  43444e:	xor    eax,eax
  434450:	call   42e520 <strcmp@plt+0x2ad88>
  434455:	mov    eax,0x1
  43445a:	add    rsp,0x8
  43445e:	pop    rbx
  43445f:	pop    r14
  434461:	pop    r15
  434463:	pop    rbp
  434464:	ret    
  434465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43446f:	nop
  434470:	push   rbx
  434471:	mov    rbx,r9
  434474:	mov    r9d,r8d
  434477:	mov    r8d,ecx
  43447a:	mov    ecx,edx
  43447c:	mov    eax,DWORD PTR [rsp+0x18]
  434480:	sub    rsp,0x8
  434484:	mov    edx,0x21
  434489:	push   rax
  43448a:	push   QWORD PTR [rsp+0x20]
  43448e:	push   rbx
  43448f:	call   4341a0 <strcmp@plt+0x30a08>
  434494:	add    rsp,0x20
  434498:	lea    rax,[rip+0x30921]        # 464dc0 <strcmp@plt+0x61628>
  43449f:	cmp    DWORD PTR [rax],0x0
  4344a2:	jle    4344c2 <strcmp@plt+0x30d2a>
  4344a4:	mov    rdi,rbx
  4344a7:	call   422e20 <strcmp@plt+0x1f688>
  4344ac:	lea    rsi,[rip+0x18700]        # 44cbb3 <strcmp@plt+0x4941b>
  4344b3:	mov    edi,0x5
  4344b8:	mov    rdx,rax
  4344bb:	xor    eax,eax
  4344bd:	call   42e520 <strcmp@plt+0x2ad88>
  4344c2:	mov    eax,0x1
  4344c7:	pop    rbx
  4344c8:	ret    
  4344c9:	nop    DWORD PTR [rax+0x0]
  4344d0:	push   rbp
  4344d1:	push   r15
  4344d3:	push   r14
  4344d5:	push   r13
  4344d7:	push   r12
  4344d9:	push   rbx
  4344da:	sub    rsp,0x1028
  4344e1:	mov    QWORD PTR [rsp+0x18],r9
  4344e6:	mov    r15,r8
  4344e9:	mov    r12,rcx
  4344ec:	mov    r14d,edx
  4344ef:	mov    DWORD PTR [rsp+0xc],edi
  4344f3:	mov    DWORD PTR [rsp+0x10],esi
  4344f7:	movzx  edi,si
  4344fa:	call   423ab0 <strcmp@plt+0x20318>
  4344ff:	mov    ebx,eax
  434501:	mov    edi,0x10
  434506:	mov    esi,0x2
  43450b:	xor    edx,edx
  43450d:	call   4030f0 <socket@plt>
  434512:	mov    DWORD PTR [rsp+0x14],eax
  434516:	test   eax,eax
  434518:	jns    434534 <strcmp@plt+0x30d9c>
  43451a:	lea    rsi,[rip+0x186cc]        # 44cbed <strcmp@plt+0x49455>
  434521:	mov    edi,0x1
  434526:	xor    eax,eax
  434528:	call   42e520 <strcmp@plt+0x2ad88>
  43452d:	xor    eax,eax
  43452f:	call   43aeb0 <strcmp@plt+0x37718>
  434534:	lea    rdi,[rsp+0x20]
  434539:	mov    edx,0x1000
  43453e:	xor    esi,esi
  434540:	call   403260 <memset@plt>
  434545:	movzx  r13d,bl
  434549:	test   r12,r12
  43454c:	je     434580 <strcmp@plt+0x30de8>
  43454e:	mov    WORD PTR [rsp+0x3e],0x1
  434555:	lea    eax,[r13+0x4]
  434559:	mov    WORD PTR [rsp+0x3c],ax
  43455e:	lea    rdi,[rsp+0x40]
  434563:	mov    rsi,r12
  434566:	call   423480 <strcmp@plt+0x1fce8>
  43456b:	movzx  ebp,WORD PTR [rsp+0x3c]
  434570:	add    ebp,0xc
  434573:	mov    rdi,r12
  434576:	call   4230b0 <strcmp@plt+0x1f918>
  43457b:	mov    r12d,eax
  43457e:	jmp    434588 <strcmp@plt+0x30df0>
  434580:	mov    ebp,0xc
  434585:	xor    r12d,r12d
  434588:	lea    rbx,[rsp+0x3c]
  43458d:	test   r15,r15
  434590:	je     4345c1 <strcmp@plt+0x30e29>
  434592:	movzx  eax,WORD PTR [rsp+0x3c]
  434597:	add    rax,rbx
  43459a:	cmp    ebp,0xc
  43459d:	cmova  rbx,rax
  4345a1:	mov    WORD PTR [rbx+0x2],0x7
  4345a7:	lea    eax,[r13+0x4]
  4345ab:	mov    WORD PTR [rbx],ax
  4345ae:	lea    rdi,[rbx+0x4]
  4345b2:	mov    rsi,r15
  4345b5:	call   423480 <strcmp@plt+0x1fce8>
  4345ba:	movzx  eax,WORD PTR [rbx]
  4345bd:	add    eax,ebp
  4345bf:	mov    ebp,eax
  4345c1:	mov    rsi,QWORD PTR [rsp+0x18]
  4345c6:	test   r14d,r14d
  4345c9:	je     4345e3 <strcmp@plt+0x30e4b>
  4345cb:	cmp    ebp,0xd
  4345ce:	jb     4345d6 <strcmp@plt+0x30e3e>
  4345d0:	movzx  eax,WORD PTR [rbx]
  4345d3:	add    rbx,rax
  4345d6:	mov    DWORD PTR [rbx],0x40008
  4345dc:	mov    DWORD PTR [rbx+0x4],r14d
  4345e0:	add    ebp,0x8
  4345e3:	mov    r14d,DWORD PTR [rsp+0x1060]
  4345eb:	test   rsi,rsi
  4345ee:	je     434617 <strcmp@plt+0x30e7f>
  4345f0:	cmp    ebp,0xd
  4345f3:	jb     4345fb <strcmp@plt+0x30e63>
  4345f5:	movzx  eax,WORD PTR [rbx]
  4345f8:	add    rbx,rax
  4345fb:	mov    WORD PTR [rbx+0x2],0x5
  434601:	add    r13d,0x4
  434605:	mov    WORD PTR [rbx],r13w
  434609:	lea    rdi,[rbx+0x4]
  43460d:	call   423480 <strcmp@plt+0x1fce8>
  434612:	movzx  eax,WORD PTR [rbx]
  434615:	add    ebp,eax
  434617:	mov    eax,DWORD PTR [rsp+0x1068]
  43461e:	test   r14d,r14d
  434621:	je     43463b <strcmp@plt+0x30ea3>
  434623:	cmp    ebp,0xd
  434626:	jb     43462e <strcmp@plt+0x30e96>
  434628:	movzx  ecx,WORD PTR [rbx]
  43462b:	add    rbx,rcx
  43462e:	mov    DWORD PTR [rbx],0x60008
  434634:	mov    DWORD PTR [rbx+0x4],r14d
  434638:	add    ebp,0x8
  43463b:	add    ebp,0x10
  43463e:	mov    DWORD PTR [rsp+0x20],ebp
  434642:	xor    ecx,ecx
  434644:	cmp    DWORD PTR [rsp+0xc],0x18
  434649:	sete   cl
  43464c:	mov    edx,0x501
  434651:	mov    esi,0x1
  434656:	cmove  esi,edx
  434659:	xor    ecx,0x19
  43465c:	mov    WORD PTR [rsp+0x26],si
  434661:	mov    WORD PTR [rsp+0x24],cx
  434666:	mov    ecx,DWORD PTR [rsp+0x10]
  43466a:	mov    BYTE PTR [rsp+0x30],cl
  43466e:	test   eax,eax
  434670:	mov    ecx,0xfe
  434675:	cmovne ecx,eax
  434678:	mov    BYTE PTR [rsp+0x34],cl
  43467c:	mov    WORD PTR [rsp+0x35],0x4
  434683:	mov    BYTE PTR [rsp+0x37],0x1
  434688:	mov    WORD PTR [rsp+0x32],0x0
  43468f:	mov    BYTE PTR [rsp+0x31],r12b
  434694:	lea    rsi,[rsp+0x20]
  434699:	mov    ebx,DWORD PTR [rsp+0x14]
  43469d:	mov    edi,ebx
  43469f:	mov    rdx,rbp
  4346a2:	xor    ecx,ecx
  4346a4:	call   403230 <send@plt>
  4346a9:	test   eax,eax
  4346ab:	jns    4346dd <strcmp@plt+0x30f45>
  4346ad:	call   403040 <__errno_location@plt>
  4346b2:	mov    edi,DWORD PTR [rax]
  4346b4:	call   403170 <strerror@plt>
  4346b9:	lea    rsi,[rip+0x1855f]        # 44cc1f <strcmp@plt+0x49487>
  4346c0:	mov    edi,0x1
  4346c5:	mov    rdx,rax
  4346c8:	xor    eax,eax
  4346ca:	call   42e520 <strcmp@plt+0x2ad88>
  4346cf:	mov    edi,ebx
  4346d1:	call   403770 <close@plt>
  4346d6:	xor    eax,eax
  4346d8:	call   43aeb0 <strcmp@plt+0x37718>
  4346dd:	mov    edi,ebx
  4346df:	call   403770 <close@plt>
  4346e4:	mov    eax,0x1
  4346e9:	add    rsp,0x1028
  4346f0:	pop    rbx
  4346f1:	pop    r12
  4346f3:	pop    r13
  4346f5:	pop    r14
  4346f7:	pop    r15
  4346f9:	pop    rbp
  4346fa:	ret    
  4346fb:	nop    DWORD PTR [rax+rax*1+0x0]
  434700:	push   rbp
  434701:	push   r15
  434703:	push   r14
  434705:	push   r13
  434707:	push   r12
  434709:	push   rbx
  43470a:	push   rax
  43470b:	mov    eax,r9d
  43470e:	mov    r15,r8
  434711:	mov    rbp,rcx
  434714:	mov    rbx,rdx
  434717:	mov    edx,esi
  434719:	mov    esi,edi
  43471b:	mov    r14d,DWORD PTR [rsp+0x40]
  434720:	mov    edi,0x18
  434725:	mov    rcx,rbx
  434728:	mov    r8,rbp
  43472b:	mov    r9,r15
  43472e:	push   r14
  434730:	push   rax
  434731:	call   4344d0 <strcmp@plt+0x30d38>
  434736:	add    rsp,0x10
  43473a:	lea    rax,[rip+0x3067f]        # 464dc0 <strcmp@plt+0x61628>
  434741:	cmp    DWORD PTR [rax],0x0
  434744:	jle    4347a2 <strcmp@plt+0x3100a>
  434746:	lea    r12,[rip+0x18554]        # 44cca1 <strcmp@plt+0x49509>
  43474d:	mov    r13,r12
  434750:	test   rbp,rbp
  434753:	je     434760 <strcmp@plt+0x30fc8>
  434755:	mov    rdi,rbp
  434758:	call   422e20 <strcmp@plt+0x1f688>
  43475d:	mov    r13,rax
  434760:	mov    rbp,r12
  434763:	test   rbx,rbx
  434766:	je     434773 <strcmp@plt+0x30fdb>
  434768:	mov    rdi,rbx
  43476b:	call   422e20 <strcmp@plt+0x1f688>
  434770:	mov    rbp,rax
  434773:	test   r15,r15
  434776:	je     434783 <strcmp@plt+0x30feb>
  434778:	mov    rdi,r15
  43477b:	call   422e20 <strcmp@plt+0x1f688>
  434780:	mov    r12,rax
  434783:	lea    rsi,[rip+0x184c2]        # 44cc4c <strcmp@plt+0x494b4>
  43478a:	mov    edi,0x5
  43478f:	mov    rdx,r13
  434792:	mov    rcx,rbp
  434795:	mov    r8,r12
  434798:	mov    r9d,r14d
  43479b:	xor    eax,eax
  43479d:	call   42e520 <strcmp@plt+0x2ad88>
  4347a2:	mov    eax,0x1
  4347a7:	add    rsp,0x8
  4347ab:	pop    rbx
  4347ac:	pop    r12
  4347ae:	pop    r13
  4347b0:	pop    r14
  4347b2:	pop    r15
  4347b4:	pop    rbp
  4347b5:	ret    
  4347b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4347c0:	push   rbp
  4347c1:	push   r15
  4347c3:	push   r14
  4347c5:	push   r13
  4347c7:	push   r12
  4347c9:	push   rbx
  4347ca:	push   rax
  4347cb:	mov    eax,r9d
  4347ce:	mov    r15,r8
  4347d1:	mov    rbp,rcx
  4347d4:	mov    rbx,rdx
  4347d7:	mov    edx,esi
  4347d9:	mov    esi,edi
  4347db:	mov    r14d,DWORD PTR [rsp+0x40]
  4347e0:	mov    edi,0x19
  4347e5:	mov    rcx,rbx
  4347e8:	mov    r8,rbp
  4347eb:	mov    r9,r15
  4347ee:	push   r14
  4347f0:	push   rax
  4347f1:	call   4344d0 <strcmp@plt+0x30d38>
  4347f6:	add    rsp,0x10
  4347fa:	lea    rax,[rip+0x305bf]        # 464dc0 <strcmp@plt+0x61628>
  434801:	cmp    DWORD PTR [rax],0x0
  434804:	jle    434862 <strcmp@plt+0x310ca>
  434806:	lea    r12,[rip+0x18494]        # 44cca1 <strcmp@plt+0x49509>
  43480d:	mov    r13,r12
  434810:	test   rbp,rbp
  434813:	je     434820 <strcmp@plt+0x31088>
  434815:	mov    rdi,rbp
  434818:	call   422e20 <strcmp@plt+0x1f688>
  43481d:	mov    r13,rax
  434820:	mov    rbp,r12
  434823:	test   rbx,rbx
  434826:	je     434833 <strcmp@plt+0x3109b>
  434828:	mov    rdi,rbx
  43482b:	call   422e20 <strcmp@plt+0x1f688>
  434830:	mov    rbp,rax
  434833:	test   r15,r15
  434836:	je     434843 <strcmp@plt+0x310ab>
  434838:	mov    rdi,r15
  43483b:	call   422e20 <strcmp@plt+0x1f688>
  434840:	mov    r12,rax
  434843:	lea    rsi,[rip+0x18459]        # 44cca3 <strcmp@plt+0x4950b>
  43484a:	mov    edi,0x5
  43484f:	mov    rdx,r13
  434852:	mov    rcx,rbp
  434855:	mov    r8,r12
  434858:	mov    r9d,r14d
  43485b:	xor    eax,eax
  43485d:	call   42e520 <strcmp@plt+0x2ad88>
  434862:	mov    eax,0x1
  434867:	add    rsp,0x8
  43486b:	pop    rbx
  43486c:	pop    r12
  43486e:	pop    r13
  434870:	pop    r14
  434872:	pop    r15
  434874:	pop    rbp
  434875:	ret    
  434876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434880:	mov    edi,0x98
  434885:	jmp    431d60 <strcmp@plt+0x2e5c8>
  43488a:	nop    WORD PTR [rax+rax*1+0x0]
  434890:	test   rdi,rdi
  434893:	je     4348f8 <strcmp@plt+0x31160>
  434895:	push   r15
  434897:	push   r14
  434899:	push   rbx
  43489a:	mov    r14,rdi
  43489d:	mov    rbx,QWORD PTR [rdi]
  4348a0:	test   rbx,rbx
  4348a3:	je     4348cc <strcmp@plt+0x31134>
  4348a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4348af:	nop
  4348b0:	mov    r15,QWORD PTR [rbx+0x20]
  4348b4:	mov    edi,DWORD PTR [rbx+0x18]
  4348b7:	call   403770 <close@plt>
  4348bc:	mov    rdi,rbx
  4348bf:	call   403790 <free@plt>
  4348c4:	mov    rbx,r15
  4348c7:	test   r15,r15
  4348ca:	jne    4348b0 <strcmp@plt+0x31118>
  4348cc:	mov    rdi,r14
  4348cf:	call   403790 <free@plt>
  4348d4:	lea    rax,[rip+0x304e5]        # 464dc0 <strcmp@plt+0x61628>
  4348db:	cmp    DWORD PTR [rax],0x0
  4348de:	pop    rbx
  4348df:	pop    r14
  4348e1:	pop    r15
  4348e3:	jle    4348f8 <strcmp@plt+0x31160>
  4348e5:	lea    rsi,[rip+0x18424]        # 44cd10 <strcmp@plt+0x49578>
  4348ec:	mov    edi,0x5
  4348f1:	xor    eax,eax
  4348f3:	jmp    42e520 <strcmp@plt+0x2ad88>
  4348f8:	ret    
  4348f9:	nop    DWORD PTR [rax+0x0]
  434900:	mov    rax,QWORD PTR [rdi]
  434903:	test   rax,rax
  434906:	je     43491e <strcmp@plt+0x31186>
  434908:	nop    DWORD PTR [rax+rax*1+0x0]
  434910:	cmp    DWORD PTR [rax+0x18],esi
  434913:	je     434920 <strcmp@plt+0x31188>
  434915:	mov    rax,QWORD PTR [rax+0x20]
  434919:	test   rax,rax
  43491c:	jne    434910 <strcmp@plt+0x31178>
  43491e:	xor    eax,eax
  434920:	ret    
  434921:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43492b:	nop    DWORD PTR [rax+rax*1+0x0]
  434930:	push   rbp
  434931:	push   r15
  434933:	push   r14
  434935:	push   r12
  434937:	push   rbx
  434938:	sub    rsp,0x20
  43493c:	mov    DWORD PTR [rsp+0xc],0x10
  434944:	mov    rbx,QWORD PTR [rdi]
  434947:	test   rbx,rbx
  43494a:	je     4349a7 <strcmp@plt+0x3120f>
  43494c:	mov    r14d,edx
  43494f:	mov    ebp,esi
  434951:	lea    r15,[rsp+0x10]
  434956:	lea    r12,[rsp+0xc]
  43495b:	jmp    434976 <strcmp@plt+0x311de>
  43495d:	nop    DWORD PTR [rax]
  434960:	movbe  ax,WORD PTR [rsp+0x12]
  434967:	cmp    ax,r14w
  43496b:	je     4349a9 <strcmp@plt+0x31211>
  43496d:	mov    rbx,QWORD PTR [rbx+0x20]
  434971:	test   rbx,rbx
  434974:	je     4349a7 <strcmp@plt+0x3120f>
  434976:	mov    edi,DWORD PTR [rbx+0x18]
  434979:	mov    rsi,r15
  43497c:	mov    rdx,r12
  43497f:	call   403380 <getsockname@plt>
  434984:	cmp    eax,0xffffffff
  434987:	je     43496d <strcmp@plt+0x311d5>
  434989:	cmp    DWORD PTR [rsp+0xc],0x10
  43498e:	jne    4349a0 <strcmp@plt+0x31208>
  434990:	cmp    ebp,0x2
  434993:	je     434960 <strcmp@plt+0x311c8>
  434995:	jmp    43496d <strcmp@plt+0x311d5>
  434997:	nop    WORD PTR [rax+rax*1+0x0]
  4349a0:	cmp    ebp,0xa
  4349a3:	je     434960 <strcmp@plt+0x311c8>
  4349a5:	jmp    43496d <strcmp@plt+0x311d5>
  4349a7:	xor    ebx,ebx
  4349a9:	mov    rax,rbx
  4349ac:	add    rsp,0x20
  4349b0:	pop    rbx
  4349b1:	pop    r12
  4349b3:	pop    r14
  4349b5:	pop    r15
  4349b7:	pop    rbp
  4349b8:	ret    
  4349b9:	nop    DWORD PTR [rax+0x0]
  4349c0:	push   rbp
  4349c1:	push   r15
  4349c3:	push   r14
  4349c5:	push   rbx
  4349c6:	push   rax
  4349c7:	mov    ebp,ecx
  4349c9:	mov    r14,rdx
  4349cc:	mov    r15,rsi
  4349cf:	mov    rbx,rdi
  4349d2:	mov    edi,0x30
  4349d7:	call   431d60 <strcmp@plt+0x2e5c8>
  4349dc:	mov    QWORD PTR [rax+0x8],r15
  4349e0:	mov    DWORD PTR [rax],0x0
  4349e6:	mov    QWORD PTR [rax+0x10],r14
  4349ea:	mov    DWORD PTR [rax+0x18],ebp
  4349ed:	mov    QWORD PTR [rax+0x20],0x0
  4349f5:	mov    rcx,QWORD PTR [rbx+0x8]
  4349f9:	mov    QWORD PTR [rax+0x28],rcx
  4349fd:	test   rcx,rcx
  434a00:	lea    rcx,[rcx+0x20]
  434a04:	cmove  rcx,rbx
  434a08:	mov    QWORD PTR [rcx],rax
  434a0b:	mov    QWORD PTR [rbx+0x8],rax
  434a0f:	inc    DWORD PTR [rbx+0x10]
  434a12:	cmp    DWORD PTR [rbx+0x14],ebp
  434a15:	jge    434a1a <strcmp@plt+0x31282>
  434a17:	mov    DWORD PTR [rbx+0x14],ebp
  434a1a:	add    rsp,0x8
  434a1e:	pop    rbx
  434a1f:	pop    r14
  434a21:	pop    r15
  434a23:	pop    rbp
  434a24:	ret    
  434a25:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434a2f:	nop
  434a30:	mov    eax,DWORD PTR [rdi+0x18]
  434a33:	ret    
  434a34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434a3e:	xchg   ax,ax
  434a40:	push   rbp
  434a41:	push   r14
  434a43:	push   rbx
  434a44:	mov    r14,rsi
  434a47:	mov    rbx,rdi
  434a4a:	mov    rcx,QWORD PTR [rsi+0x20]
  434a4e:	mov    rax,QWORD PTR [rsi+0x28]
  434a52:	test   rax,rax
  434a55:	je     434a6a <strcmp@plt+0x312d2>
  434a57:	mov    QWORD PTR [rax+0x20],rcx
  434a5b:	mov    rcx,QWORD PTR [r14+0x20]
  434a5f:	test   rcx,rcx
  434a62:	je     434a7c <strcmp@plt+0x312e4>
  434a64:	mov    QWORD PTR [rcx+0x28],rax
  434a68:	jmp    434a80 <strcmp@plt+0x312e8>
  434a6a:	mov    QWORD PTR [rbx],rcx
  434a6d:	test   rcx,rcx
  434a70:	je     434a7c <strcmp@plt+0x312e4>
  434a72:	mov    QWORD PTR [rcx+0x28],0x0
  434a7a:	jmp    434a80 <strcmp@plt+0x312e8>
  434a7c:	mov    QWORD PTR [rbx+0x8],rax
  434a80:	mov    ebp,DWORD PTR [r14+0x18]
  434a84:	mov    edi,ebp
  434a86:	call   403770 <close@plt>
  434a8b:	mov    rdi,r14
  434a8e:	call   403790 <free@plt>
  434a93:	dec    DWORD PTR [rbx+0x10]
  434a96:	cmp    ebp,DWORD PTR [rbx+0x14]
  434a99:	jne    434ac7 <strcmp@plt+0x3132f>
  434a9b:	mov    rax,QWORD PTR [rbx]
  434a9e:	test   rax,rax
  434aa1:	jne    434ab9 <strcmp@plt+0x31321>
  434aa3:	mov    DWORD PTR [rbx+0x14],0x0
  434aaa:	jmp    434ac7 <strcmp@plt+0x3132f>
  434aac:	nop    DWORD PTR [rax+0x0]
  434ab0:	mov    rax,QWORD PTR [rax+0x20]
  434ab4:	test   rax,rax
  434ab7:	je     434ac7 <strcmp@plt+0x3132f>
  434ab9:	mov    ecx,DWORD PTR [rax+0x18]
  434abc:	cmp    ecx,ebp
  434abe:	jle    434ab0 <strcmp@plt+0x31318>
  434ac0:	mov    DWORD PTR [rbx+0x14],ecx
  434ac3:	mov    ebp,ecx
  434ac5:	jmp    434ab0 <strcmp@plt+0x31318>
  434ac7:	mov    eax,0x1
  434acc:	pop    rbx
  434acd:	pop    r14
  434acf:	pop    rbp
  434ad0:	ret    
  434ad1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434adb:	nop    DWORD PTR [rax+rax*1+0x0]
  434ae0:	push   r15
  434ae2:	push   r14
  434ae4:	push   rbx
  434ae5:	sub    rsp,0x10
  434ae9:	mov    r14,rdi
  434aec:	vmovaps xmm0,XMMWORD PTR [rip+0x1820c]        # 44cd00 <strcmp@plt+0x49568>
  434af4:	vmovaps XMMWORD PTR [rsp],xmm0
  434af9:	lea    rbx,[rdi+0x18]
  434afd:	mov    r15,rsp
  434b00:	mov    edi,DWORD PTR [r14+0x14]
  434b04:	inc    edi
  434b06:	mov    rsi,rbx
  434b09:	xor    edx,edx
  434b0b:	xor    ecx,ecx
  434b0d:	mov    r8,r15
  434b10:	call   4033b0 <select@plt>
  434b15:	cmp    eax,0xffffffff
  434b18:	jne    434b4f <strcmp@plt+0x313b7>
  434b1a:	call   403040 <__errno_location@plt>
  434b1f:	mov    edi,DWORD PTR [rax]
  434b21:	cmp    edi,0x4
  434b24:	je     434b00 <strcmp@plt+0x31368>
  434b26:	lea    rax,[rip+0x30293]        # 464dc0 <strcmp@plt+0x61628>
  434b2d:	cmp    DWORD PTR [rax],0x2
  434b30:	jl     434b99 <strcmp@plt+0x31401>
  434b32:	call   403170 <strerror@plt>
  434b37:	lea    rsi,[rip+0x181e1]        # 44cd1f <strcmp@plt+0x49587>
  434b3e:	mov    edi,0x6
  434b43:	mov    rdx,rax
  434b46:	xor    eax,eax
  434b48:	call   42e520 <strcmp@plt+0x2ad88>
  434b4d:	jmp    434b99 <strcmp@plt+0x31401>
  434b4f:	mov    rbx,QWORD PTR [r14]
  434b52:	test   rbx,rbx
  434b55:	jne    434b69 <strcmp@plt+0x313d1>
  434b57:	jmp    434b99 <strcmp@plt+0x31401>
  434b59:	nop    DWORD PTR [rax+0x0]
  434b60:	mov    rbx,QWORD PTR [rbx+0x20]
  434b64:	test   rbx,rbx
  434b67:	je     434b99 <strcmp@plt+0x31401>
  434b69:	mov    eax,DWORD PTR [rbx+0x18]
  434b6c:	mov    ecx,eax
  434b6e:	sar    ecx,0x1f
  434b71:	shr    ecx,0x1a
  434b74:	add    ecx,eax
  434b76:	mov    edx,ecx
  434b78:	sar    edx,0x6
  434b7b:	movsxd rdx,edx
  434b7e:	mov    rdx,QWORD PTR [r14+rdx*8+0x18]
  434b83:	and    ecx,0xc0
  434b89:	sub    eax,ecx
  434b8b:	bt     rdx,rax
  434b8f:	jae    434b60 <strcmp@plt+0x313c8>
  434b91:	mov    rdi,rbx
  434b94:	call   QWORD PTR [rbx+0x8]
  434b97:	jmp    434b60 <strcmp@plt+0x313c8>
  434b99:	add    rsp,0x10
  434b9d:	pop    rbx
  434b9e:	pop    r14
  434ba0:	pop    r15
  434ba2:	ret    
  434ba3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434bad:	nop    DWORD PTR [rax]
  434bb0:	mov    rax,QWORD PTR [rdi]
  434bb3:	test   rax,rax
  434bb6:	je     434bf0 <strcmp@plt+0x31458>
  434bb8:	mov    r8d,0x1
  434bbe:	xchg   ax,ax
  434bc0:	mov    edx,DWORD PTR [rax+0x18]
  434bc3:	mov    ecx,edx
  434bc5:	sar    ecx,0x1f
  434bc8:	shr    ecx,0x1a
  434bcb:	add    ecx,edx
  434bcd:	mov    esi,ecx
  434bcf:	and    esi,0xc0
  434bd5:	sub    edx,esi
  434bd7:	shlx   rdx,r8,rdx
  434bdc:	sar    ecx,0x6
  434bdf:	movsxd rcx,ecx
  434be2:	or     QWORD PTR [rdi+rcx*8+0x18],rdx
  434be7:	mov    rax,QWORD PTR [rax+0x20]
  434beb:	test   rax,rax
  434bee:	jne    434bc0 <strcmp@plt+0x31428>
  434bf0:	ret    
  434bf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  434c00:	push   rbp
  434c01:	push   r14
  434c03:	push   rbx
  434c04:	sub    rsp,0x10
  434c08:	mov    ebx,edi
  434c0a:	mov    DWORD PTR [rsp+0xc],0x1
  434c12:	call   435550 <strcmp@plt+0x31db8>
  434c17:	mov    ebp,0xfffffff7
  434c1c:	cmp    eax,0xfffffff7
  434c1f:	je     434cbb <strcmp@plt+0x31523>
  434c25:	mov    r14d,eax
  434c28:	mov    edi,eax
  434c2a:	mov    esi,ebx
  434c2c:	xor    edx,edx
  434c2e:	mov    ecx,0x10f6
  434c33:	call   435970 <strcmp@plt+0x321d8>
  434c38:	cmp    ebx,0xa
  434c3b:	je     434c75 <strcmp@plt+0x314dd>
  434c3d:	cmp    ebx,0x2
  434c40:	jne    434cbb <strcmp@plt+0x31523>
  434c42:	lea    rcx,[rsp+0xc]
  434c47:	mov    edi,r14d
  434c4a:	xor    esi,esi
  434c4c:	mov    edx,0x8
  434c51:	mov    r8d,0x4
  434c57:	call   403700 <setsockopt@plt>
  434c5c:	test   eax,eax
  434c5e:	jns    434cb8 <strcmp@plt+0x31520>
  434c60:	call   403040 <__errno_location@plt>
  434c65:	mov    edi,DWORD PTR [rax]
  434c67:	call   403170 <strerror@plt>
  434c6c:	lea    rsi,[rip+0x180cf]        # 44cd42 <strcmp@plt+0x495aa>
  434c73:	jmp    434ca9 <strcmp@plt+0x31511>
  434c75:	lea    rcx,[rsp+0xc]
  434c7a:	mov    edi,r14d
  434c7d:	mov    esi,0x29
  434c82:	mov    edx,0x31
  434c87:	mov    r8d,0x4
  434c8d:	call   403700 <setsockopt@plt>
  434c92:	test   eax,eax
  434c94:	jns    434cb8 <strcmp@plt+0x31520>
  434c96:	call   403040 <__errno_location@plt>
  434c9b:	mov    edi,DWORD PTR [rax]
  434c9d:	call   403170 <strerror@plt>
  434ca2:	lea    rsi,[rip+0x180b3]        # 44cd5c <strcmp@plt+0x495c4>
  434ca9:	mov    edi,0x3
  434cae:	mov    rdx,rax
  434cb1:	xor    eax,eax
  434cb3:	call   42e520 <strcmp@plt+0x2ad88>
  434cb8:	mov    ebp,r14d
  434cbb:	mov    eax,ebp
  434cbd:	add    rsp,0x10
  434cc1:	pop    rbx
  434cc2:	pop    r14
  434cc4:	pop    rbp
  434cc5:	ret    
  434cc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434cd0:	push   rbp
  434cd1:	push   r15
  434cd3:	push   r14
  434cd5:	push   rbx
  434cd6:	push   rax
  434cd7:	mov    r15d,esi
  434cda:	mov    ebx,edi
  434cdc:	call   435430 <strcmp@plt+0x31c98>
  434ce1:	mov    r14d,0xfffffff7
  434ce7:	cmp    eax,0xfffffff7
  434cea:	je     434d29 <strcmp@plt+0x31591>
  434cec:	mov    ebp,eax
  434cee:	mov    edi,ebx
  434cf0:	call   435550 <strcmp@plt+0x31db8>
  434cf5:	movzx  ecx,r15w
  434cf9:	mov    edi,eax
  434cfb:	mov    esi,ebx
  434cfd:	xor    edx,edx
  434cff:	call   435970 <strcmp@plt+0x321d8>
  434d04:	mov    r15d,eax
  434d07:	mov    edi,ebp
  434d09:	mov    esi,ebx
  434d0b:	call   435710 <strcmp@plt+0x31f78>
  434d10:	cmp    eax,0x1
  434d13:	jne    434d1a <strcmp@plt+0x31582>
  434d15:	mov    r14d,ebp
  434d18:	jmp    434d29 <strcmp@plt+0x31591>
  434d1a:	mov    edi,ebp
  434d1c:	call   403770 <close@plt>
  434d21:	mov    edi,r15d
  434d24:	call   403770 <close@plt>
  434d29:	mov    eax,r14d
  434d2c:	add    rsp,0x8
  434d30:	pop    rbx
  434d31:	pop    r14
  434d33:	pop    r15
  434d35:	pop    rbp
  434d36:	ret    
  434d37:	nop    WORD PTR [rax+rax*1+0x0]
  434d40:	push   rbp
  434d41:	push   r14
  434d43:	push   rbx
  434d44:	sub    rsp,0x10
  434d48:	mov    r14d,esi
  434d4b:	mov    ebp,edi
  434d4d:	call   435550 <strcmp@plt+0x31db8>
  434d52:	test   eax,eax
  434d54:	js     434dcf <strcmp@plt+0x31637>
  434d56:	mov    ebx,eax
  434d58:	mov    DWORD PTR [rsp+0xc],0x1
  434d60:	cmp    ebp,0xa
  434d63:	jne    434da7 <strcmp@plt+0x3160f>
  434d65:	lea    rcx,[rsp+0xc]
  434d6a:	mov    edi,ebx
  434d6c:	mov    esi,0x11
  434d71:	mov    edx,0x66
  434d76:	mov    r8d,0x4
  434d7c:	call   403700 <setsockopt@plt>
  434d81:	test   eax,eax
  434d83:	jns    434da7 <strcmp@plt+0x3160f>
  434d85:	call   403040 <__errno_location@plt>
  434d8a:	mov    edi,DWORD PTR [rax]
  434d8c:	call   403170 <strerror@plt>
  434d91:	lea    rsi,[rip+0x17fe4]        # 44cd7c <strcmp@plt+0x495e4>
  434d98:	mov    edi,0x3
  434d9d:	mov    rdx,rax
  434da0:	xor    eax,eax
  434da2:	call   42e520 <strcmp@plt+0x2ad88>
  434da7:	mov    edi,ebx
  434da9:	mov    esi,ebp
  434dab:	xor    edx,edx
  434dad:	mov    ecx,r14d
  434db0:	call   435970 <strcmp@plt+0x321d8>
  434db5:	cmp    eax,0x1
  434db8:	jne    434dc8 <strcmp@plt+0x31630>
  434dba:	mov    edi,ebx
  434dbc:	mov    esi,ebp
  434dbe:	call   435710 <strcmp@plt+0x31f78>
  434dc3:	cmp    eax,0x1
  434dc6:	je     434dd4 <strcmp@plt+0x3163c>
  434dc8:	mov    edi,ebx
  434dca:	call   403770 <close@plt>
  434dcf:	mov    ebx,0xfffffff7
  434dd4:	mov    eax,ebx
  434dd6:	add    rsp,0x10
  434dda:	pop    rbx
  434ddb:	pop    r14
  434ddd:	pop    rbp
  434dde:	ret    
  434ddf:	nop
  434de0:	push   rbx
  434de1:	mov    rbx,rsi
  434de4:	mov    rsi,QWORD PTR [rsi+0x38]
  434de8:	mov    edx,DWORD PTR [rbx+0x30]
  434deb:	add    edx,DWORD PTR [rbx+0x10]
  434dee:	mov    eax,DWORD PTR [rbx+0x14]
  434df1:	add    eax,esi
  434df3:	sub    edx,eax
  434df5:	call   4035b0 <read@plt>
  434dfa:	test   eax,eax
  434dfc:	je     434e08 <strcmp@plt+0x31670>
  434dfe:	add    DWORD PTR [rbx+0x14],eax
  434e01:	mov    ebx,0x1
  434e06:	jmp    434e2c <strcmp@plt+0x31694>
  434e08:	call   403040 <__errno_location@plt>
  434e0d:	mov    edi,DWORD PTR [rax]
  434e0f:	call   403170 <strerror@plt>
  434e14:	lea    rsi,[rip+0x17fa2]        # 44cdbd <strcmp@plt+0x49625>
  434e1b:	xor    ebx,ebx
  434e1d:	mov    edi,0x3
  434e22:	mov    rdx,rax
  434e25:	xor    eax,eax
  434e27:	call   42e520 <strcmp@plt+0x2ad88>
  434e2c:	mov    eax,ebx
  434e2e:	pop    rbx
  434e2f:	ret    
  434e30:	push   rbp
  434e31:	mov    rbp,rsp
  434e34:	push   r15
  434e36:	push   r14
  434e38:	push   rbx
  434e39:	and    rsp,0xffffffffffffffe0
  434e3d:	sub    rsp,0xa0
  434e44:	mov    r14,rdx
  434e47:	mov    rbx,rsi
  434e4a:	mov    rax,QWORD PTR [rsi+0x38]
  434e4e:	mov    QWORD PTR [rsp+0x60],rax
  434e53:	mov    ecx,DWORD PTR [rsi+0x30]
  434e56:	add    ecx,DWORD PTR [rsi+0x10]
  434e59:	add    eax,DWORD PTR [rsi+0x14]
  434e5c:	sub    ecx,eax
  434e5e:	vxorps xmm0,xmm0,xmm0
  434e62:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  434e68:	mov    QWORD PTR [rsp+0x68],rcx
  434e6d:	vmovups YMMWORD PTR [rsp+0x38],ymm0
  434e73:	lea    rax,[rsp+0x60]
  434e78:	mov    QWORD PTR [rsp+0x30],rax
  434e7d:	mov    QWORD PTR [rsp+0x38],0x1
  434e86:	lea    rax,[rsp+0x70]
  434e8b:	mov    QWORD PTR [rsp+0x40],rax
  434e90:	mov    QWORD PTR [rsp+0x48],0x28
  434e99:	mov    rax,rsp
  434e9c:	mov    QWORD PTR [rsp+0x20],rax
  434ea1:	mov    DWORD PTR [rsp+0x28],0x1c
  434ea9:	lea    rsi,[rsp+0x20]
  434eae:	xor    r15d,r15d
  434eb1:	xor    edx,edx
  434eb3:	vzeroupper 
  434eb6:	call   403130 <recvmsg@plt>
  434ebb:	cmp    eax,0xffffffff
  434ebe:	je     434f5a <strcmp@plt+0x317c2>
  434ec4:	add    DWORD PTR [rbx+0x14],eax
  434ec7:	mov    rsi,QWORD PTR [rsp+0x40]
  434ecc:	mov    rax,QWORD PTR [rsp+0x48]
  434ed1:	cmp    rax,0x10
  434ed5:	setb   dl
  434ed8:	test   rsi,rsi
  434edb:	sete   cl
  434ede:	or     cl,dl
  434ee0:	cmp    WORD PTR [rsp],0x2
  434ee5:	jne    434f81 <strcmp@plt+0x317e9>
  434eeb:	test   cl,cl
  434eed:	jne    435009 <strcmp@plt+0x31871>
  434ef3:	add    rax,rsi
  434ef6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  434f00:	cmp    DWORD PTR [rsi+0x8],0x0
  434f04:	jne    434f10 <strcmp@plt+0x31778>
  434f06:	cmp    DWORD PTR [rsi+0xc],0x8
  434f0a:	je     434ff8 <strcmp@plt+0x31860>
  434f10:	mov    rcx,QWORD PTR [rsi]
  434f13:	cmp    rcx,0x10
  434f17:	jb     435009 <strcmp@plt+0x31871>
  434f1d:	add    rcx,0x7
  434f21:	and    rcx,0xfffffffffffffff8
  434f25:	lea    rdx,[rsi+rcx*1]
  434f29:	add    rdx,0x10
  434f2d:	cmp    rdx,rax
  434f30:	ja     435009 <strcmp@plt+0x31871>
  434f36:	add    rsi,rcx
  434f39:	mov    rcx,QWORD PTR [rsi]
  434f3c:	add    rcx,0x7
  434f40:	and    rcx,0xfffffffffffffff8
  434f44:	add    rcx,rsi
  434f47:	cmp    rcx,rax
  434f4a:	ja     435009 <strcmp@plt+0x31871>
  434f50:	test   rsi,rsi
  434f53:	jne    434f00 <strcmp@plt+0x31768>
  434f55:	jmp    435009 <strcmp@plt+0x31871>
  434f5a:	call   403040 <__errno_location@plt>
  434f5f:	mov    edi,DWORD PTR [rax]
  434f61:	call   403170 <strerror@plt>
  434f66:	lea    rsi,[rip+0x17e6d]        # 44cdda <strcmp@plt+0x49642>
  434f6d:	mov    edi,0x3
  434f72:	mov    rdx,rax
  434f75:	xor    eax,eax
  434f77:	call   42e520 <strcmp@plt+0x2ad88>
  434f7c:	jmp    43502e <strcmp@plt+0x31896>
  434f81:	test   cl,cl
  434f83:	jne    434fe8 <strcmp@plt+0x31850>
  434f85:	add    rax,rsi
  434f88:	nop    DWORD PTR [rax+rax*1+0x0]
  434f90:	cmp    DWORD PTR [rsi+0x8],0x29
  434f94:	jne    434f9c <strcmp@plt+0x31804>
  434f96:	cmp    DWORD PTR [rsi+0xc],0x32
  434f9a:	je     434fd7 <strcmp@plt+0x3183f>
  434f9c:	mov    rcx,QWORD PTR [rsi]
  434f9f:	cmp    rcx,0x10
  434fa3:	jb     434fe8 <strcmp@plt+0x31850>
  434fa5:	add    rcx,0x7
  434fa9:	and    rcx,0xfffffffffffffff8
  434fad:	lea    rdx,[rsi+rcx*1]
  434fb1:	add    rdx,0x10
  434fb5:	cmp    rdx,rax
  434fb8:	ja     434fe8 <strcmp@plt+0x31850>
  434fba:	add    rsi,rcx
  434fbd:	mov    rcx,QWORD PTR [rsi]
  434fc0:	add    rcx,0x7
  434fc4:	and    rcx,0xfffffffffffffff8
  434fc8:	add    rcx,rsi
  434fcb:	cmp    rcx,rax
  434fce:	ja     434fe8 <strcmp@plt+0x31850>
  434fd0:	test   rsi,rsi
  434fd3:	jne    434f90 <strcmp@plt+0x317f8>
  434fd5:	jmp    434fe8 <strcmp@plt+0x31850>
  434fd7:	add    rsi,0x10
  434fdb:	mov    rdi,r14
  434fde:	mov    edx,0xa
  434fe3:	call   423850 <strcmp@plt+0x200b8>
  434fe8:	lea    rdi,[r14+0x20]
  434fec:	lea    rsi,[rsp+0x8]
  434ff1:	mov    edx,0xa
  434ff6:	jmp    435017 <strcmp@plt+0x3187f>
  434ff8:	add    rsi,0x18
  434ffc:	mov    rdi,r14
  434fff:	mov    edx,0x2
  435004:	call   423850 <strcmp@plt+0x200b8>
  435009:	lea    rdi,[r14+0x20]
  43500d:	lea    rsi,[rsp+0x4]
  435012:	mov    edx,0x2
  435017:	call   423850 <strcmp@plt+0x200b8>
  43501c:	movzx  eax,WORD PTR [rsp+0x2]
  435021:	movbe  WORD PTR [r14+0x42],ax
  435028:	mov    r15d,0x1
  43502e:	mov    eax,r15d
  435031:	lea    rsp,[rbp-0x18]
  435035:	pop    rbx
  435036:	pop    r14
  435038:	pop    r15
  43503a:	pop    rbp
  43503b:	ret    
  43503c:	nop    DWORD PTR [rax+0x0]
  435040:	push   rbp
  435041:	mov    rbp,rsp
  435044:	push   r15
  435046:	push   r14
  435048:	push   r13
  43504a:	push   r12
  43504c:	push   rbx
  43504d:	and    rsp,0xffffffffffffffe0
  435051:	sub    rsp,0xc0
  435058:	mov    r15,r8
  43505b:	mov    r12,rcx
  43505e:	mov    r14,rdx
  435061:	mov    rbx,rsi
  435064:	mov    rax,QWORD PTR [rsi+0x38]
  435068:	mov    QWORD PTR [rsp+0x40],rax
  43506d:	mov    ecx,DWORD PTR [rsi+0x30]
  435070:	add    ecx,DWORD PTR [rsi+0x10]
  435073:	add    eax,DWORD PTR [rsi+0x14]
  435076:	sub    ecx,eax
  435078:	vxorps xmm0,xmm0,xmm0
  43507c:	vmovaps YMMWORD PTR [rsp],ymm0
  435081:	mov    QWORD PTR [rsp+0x48],rcx
  435086:	vmovups YMMWORD PTR [rsp+0x18],ymm0
  43508c:	lea    rax,[rsp+0x40]
  435091:	mov    QWORD PTR [rsp+0x10],rax
  435096:	mov    QWORD PTR [rsp+0x18],0x1
  43509f:	lea    rax,[rsp+0x78]
  4350a4:	mov    QWORD PTR [rsp+0x20],rax
  4350a9:	mov    QWORD PTR [rsp+0x28],0x30
  4350b2:	lea    rax,[rsp+0x58]
  4350b7:	mov    QWORD PTR [rsp],rax
  4350bb:	mov    DWORD PTR [rsp+0x8],0x1c
  4350c3:	mov    rsi,rsp
  4350c6:	xor    r13d,r13d
  4350c9:	xor    edx,edx
  4350cb:	vzeroupper 
  4350ce:	call   403130 <recvmsg@plt>
  4350d3:	cmp    eax,0xffffffff
  4350d6:	je     435197 <strcmp@plt+0x319ff>
  4350dc:	add    DWORD PTR [rbx+0x14],eax
  4350df:	mov    rcx,QWORD PTR [rsp+0x20]
  4350e4:	mov    rdx,QWORD PTR [rsp+0x28]
  4350e9:	cmp    rdx,0x10
  4350ed:	setb   al
  4350f0:	test   rcx,rcx
  4350f3:	sete   bl
  4350f6:	or     bl,al
  4350f8:	cmp    WORD PTR [rsp+0x58],0x2
  4350fe:	jne    4351be <strcmp@plt+0x31a26>
  435104:	mov    eax,0x2
  435109:	test   bl,bl
  43510b:	jne    435239 <strcmp@plt+0x31aa1>
  435111:	add    rdx,rcx
  435114:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43511e:	xchg   ax,ax
  435120:	cmp    DWORD PTR [rcx+0x8],0x0
  435124:	je     435170 <strcmp@plt+0x319d8>
  435126:	mov    rsi,QWORD PTR [rcx]
  435129:	cmp    rsi,0x10
  43512d:	jb     435239 <strcmp@plt+0x31aa1>
  435133:	add    rsi,0x7
  435137:	and    rsi,0xfffffffffffffff8
  43513b:	lea    rdi,[rcx+rsi*1]
  43513f:	add    rdi,0x10
  435143:	cmp    rdi,rdx
  435146:	ja     435239 <strcmp@plt+0x31aa1>
  43514c:	add    rcx,rsi
  43514f:	mov    rsi,QWORD PTR [rcx]
  435152:	add    rsi,0x7
  435156:	and    rsi,0xfffffffffffffff8
  43515a:	add    rsi,rcx
  43515d:	cmp    rsi,rdx
  435160:	ja     435239 <strcmp@plt+0x31aa1>
  435166:	test   rcx,rcx
  435169:	jne    435120 <strcmp@plt+0x31988>
  43516b:	jmp    435239 <strcmp@plt+0x31aa1>
  435170:	mov    esi,DWORD PTR [rcx+0xc]
  435173:	cmp    esi,0x2
  435176:	jne    435189 <strcmp@plt+0x319f1>
  435178:	movzx  ebx,BYTE PTR [rcx+0x10]
  43517c:	mov    BYTE PTR [r12],bl
  435180:	cmp    DWORD PTR [rcx+0x8],0x0
  435184:	jne    435126 <strcmp@plt+0x3198e>
  435186:	mov    esi,DWORD PTR [rcx+0xc]
  435189:	cmp    esi,0x1
  43518c:	jne    435126 <strcmp@plt+0x3198e>
  43518e:	movzx  ebx,BYTE PTR [rcx+0x10]
  435192:	mov    BYTE PTR [r15],bl
  435195:	jmp    435126 <strcmp@plt+0x3198e>
  435197:	call   403040 <__errno_location@plt>
  43519c:	mov    edi,DWORD PTR [rax]
  43519e:	call   403170 <strerror@plt>
  4351a3:	lea    rsi,[rip+0x17c52]        # 44cdfc <strcmp@plt+0x49664>
  4351aa:	mov    edi,0x3
  4351af:	mov    rdx,rax
  4351b2:	xor    eax,eax
  4351b4:	call   42e520 <strcmp@plt+0x2ad88>
  4351b9:	jmp    435242 <strcmp@plt+0x31aaa>
  4351be:	mov    eax,0xa
  4351c3:	test   bl,bl
  4351c5:	jne    435239 <strcmp@plt+0x31aa1>
  4351c7:	add    rdx,rcx
  4351ca:	nop    WORD PTR [rax+rax*1+0x0]
  4351d0:	cmp    DWORD PTR [rcx+0x8],0x29
  4351d4:	jne    435200 <strcmp@plt+0x31a68>
  4351d6:	mov    esi,DWORD PTR [rcx+0xc]
  4351d9:	cmp    esi,0x34
  4351dc:	jne    4351ef <strcmp@plt+0x31a57>
  4351de:	movzx  ebx,BYTE PTR [rcx+0x10]
  4351e2:	mov    BYTE PTR [r12],bl
  4351e6:	cmp    DWORD PTR [rcx+0x8],0x29
  4351ea:	jne    435200 <strcmp@plt+0x31a68>
  4351ec:	mov    esi,DWORD PTR [rcx+0xc]
  4351ef:	cmp    esi,0x43
  4351f2:	jne    435200 <strcmp@plt+0x31a68>
  4351f4:	movzx  ebx,BYTE PTR [rcx+0x10]
  4351f8:	mov    BYTE PTR [r15],bl
  4351fb:	nop    DWORD PTR [rax+rax*1+0x0]
  435200:	mov    rsi,QWORD PTR [rcx]
  435203:	cmp    rsi,0x10
  435207:	jb     435239 <strcmp@plt+0x31aa1>
  435209:	add    rsi,0x7
  43520d:	and    rsi,0xfffffffffffffff8
  435211:	lea    rdi,[rcx+rsi*1]
  435215:	add    rdi,0x10
  435219:	cmp    rdi,rdx
  43521c:	ja     435239 <strcmp@plt+0x31aa1>
  43521e:	add    rcx,rsi
  435221:	mov    rsi,QWORD PTR [rcx]
  435224:	add    rsi,0x7
  435228:	and    rsi,0xfffffffffffffff8
  43522c:	add    rsi,rcx
  43522f:	cmp    rsi,rdx
  435232:	ja     435239 <strcmp@plt+0x31aa1>
  435234:	test   rcx,rcx
  435237:	jne    4351d0 <strcmp@plt+0x31a38>
  435239:	mov    DWORD PTR [r14],eax
  43523c:	mov    r13d,0x1
  435242:	mov    eax,r13d
  435245:	lea    rsp,[rbp-0x28]
  435249:	pop    rbx
  43524a:	pop    r12
  43524c:	pop    r13
  43524e:	pop    r14
  435250:	pop    r15
  435252:	pop    rbp
  435253:	ret    
  435254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43525e:	xchg   ax,ax
  435260:	push   r14
  435262:	push   rbx
  435263:	push   rax
  435264:	mov    r14,r8
  435267:	mov    rbx,rdi
  43526a:	mov    WORD PTR [rdi+0x40],si
  43526e:	mov    WORD PTR [rdi+0x42],dx
  435272:	test   rcx,rcx
  435275:	je     435281 <strcmp@plt+0x31ae9>
  435277:	mov    rsi,rcx
  43527a:	call   423260 <strcmp@plt+0x1fac8>
  43527f:	jmp    435288 <strcmp@plt+0x31af0>
  435281:	xor    esi,esi
  435283:	call   422e90 <strcmp@plt+0x1f6f8>
  435288:	add    rbx,0x20
  43528c:	mov    rdi,rbx
  43528f:	test   r14,r14
  435292:	je     43529e <strcmp@plt+0x31b06>
  435294:	mov    rsi,r14
  435297:	call   423260 <strcmp@plt+0x1fac8>
  43529c:	jmp    4352a5 <strcmp@plt+0x31b0d>
  43529e:	xor    esi,esi
  4352a0:	call   422e90 <strcmp@plt+0x1f6f8>
  4352a5:	mov    eax,0x1
  4352aa:	add    rsp,0x8
  4352ae:	pop    rbx
  4352af:	pop    r14
  4352b1:	ret    
  4352b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4352bc:	nop    DWORD PTR [rax+0x0]
  4352c0:	push   rbx
  4352c1:	mov    rbx,rdi
  4352c4:	mov    edi,0x48
  4352c9:	call   431d90 <strcmp@plt+0x2e5f8>
  4352ce:	vmovups ymm0,YMMWORD PTR [rbx]
  4352d2:	vmovups ymm1,YMMWORD PTR [rbx+0x20]
  4352d7:	vmovups YMMWORD PTR [rax],ymm0
  4352db:	vmovups YMMWORD PTR [rax+0x20],ymm1
  4352e0:	mov    rcx,QWORD PTR [rbx+0x40]
  4352e4:	mov    QWORD PTR [rax+0x40],rcx
  4352e8:	pop    rbx
  4352e9:	vzeroupper 
  4352ec:	ret    
  4352ed:	nop    DWORD PTR [rax]
  4352f0:	push   r14
  4352f2:	push   rbx
  4352f3:	push   rax
  4352f4:	mov    r14,rsi
  4352f7:	mov    rbx,rdi
  4352fa:	test   dl,dl
  4352fc:	je     435320 <strcmp@plt+0x31b88>
  4352fe:	lea    rsi,[rbx+0x20]
  435302:	mov    rdi,r14
  435305:	call   423260 <strcmp@plt+0x1fac8>
  43530a:	lea    rdi,[r14+0x20]
  43530e:	mov    rsi,rbx
  435311:	call   423260 <strcmp@plt+0x1fac8>
  435316:	lea    rax,[rbx+0x42]
  43531a:	add    rbx,0x40
  43531e:	jmp    435340 <strcmp@plt+0x31ba8>
  435320:	mov    rdi,r14
  435323:	mov    rsi,rbx
  435326:	call   423260 <strcmp@plt+0x1fac8>
  43532b:	lea    rdi,[r14+0x20]
  43532f:	lea    rsi,[rbx+0x20]
  435333:	call   423260 <strcmp@plt+0x1fac8>
  435338:	lea    rax,[rbx+0x40]
  43533c:	add    rbx,0x42
  435340:	movzx  ecx,WORD PTR [rbx]
  435343:	movzx  eax,WORD PTR [rax]
  435346:	mov    WORD PTR [r14+0x40],ax
  43534b:	mov    WORD PTR [r14+0x42],cx
  435350:	add    rsp,0x8
  435354:	pop    rbx
  435355:	pop    r14
  435357:	ret    
  435358:	nop    DWORD PTR [rax+rax*1+0x0]
  435360:	push   rbp
  435361:	push   rbx
  435362:	push   rax
  435363:	mov    ebp,edi
  435365:	mov    DWORD PTR [rsp+0x4],0x1
  43536d:	mov    esi,0x3
  435372:	mov    edx,0xff
  435377:	call   4030f0 <socket@plt>
  43537c:	test   eax,eax
  43537e:	js     4353c8 <strcmp@plt+0x31c30>
  435380:	mov    ebx,eax
  435382:	lea    rcx,[rsp+0x4]
  435387:	mov    edi,eax
  435389:	mov    esi,0x1
  43538e:	mov    edx,0x2
  435393:	mov    r8d,0x4
  435399:	call   403700 <setsockopt@plt>
  43539e:	cmp    eax,0xffffffff
  4353a1:	je     4353ec <strcmp@plt+0x31c54>
  4353a3:	lea    rax,[rip+0x2fa16]        # 464dc0 <strcmp@plt+0x61628>
  4353aa:	cmp    DWORD PTR [rax],0x3
  4353ad:	jl     43541a <strcmp@plt+0x31c82>
  4353af:	lea    rsi,[rip+0x17abe]        # 44ce74 <strcmp@plt+0x496dc>
  4353b6:	mov    edi,0x7
  4353bb:	mov    edx,ebx
  4353bd:	mov    ecx,ebp
  4353bf:	xor    eax,eax
  4353c1:	call   42e520 <strcmp@plt+0x2ad88>
  4353c6:	jmp    43541a <strcmp@plt+0x31c82>
  4353c8:	call   403040 <__errno_location@plt>
  4353cd:	mov    edi,DWORD PTR [rax]
  4353cf:	call   403170 <strerror@plt>
  4353d4:	lea    rsi,[rip+0x17a40]        # 44ce1b <strcmp@plt+0x49683>
  4353db:	mov    edi,0x2
  4353e0:	mov    rdx,rax
  4353e3:	xor    eax,eax
  4353e5:	call   42e520 <strcmp@plt+0x2ad88>
  4353ea:	jmp    435415 <strcmp@plt+0x31c7d>
  4353ec:	call   403040 <__errno_location@plt>
  4353f1:	mov    edi,DWORD PTR [rax]
  4353f3:	call   403170 <strerror@plt>
  4353f8:	lea    rsi,[rip+0x17a4a]        # 44ce49 <strcmp@plt+0x496b1>
  4353ff:	mov    edi,0x3
  435404:	mov    rdx,rax
  435407:	xor    eax,eax
  435409:	call   42e520 <strcmp@plt+0x2ad88>
  43540e:	mov    edi,ebx
  435410:	call   403770 <close@plt>
  435415:	mov    ebx,0xfffffff7
  43541a:	mov    eax,ebx
  43541c:	add    rsp,0x8
  435420:	pop    rbx
  435421:	pop    rbp
  435422:	ret    
  435423:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43542d:	nop    DWORD PTR [rax]
  435430:	push   rbp
  435431:	push   rbx
  435432:	push   rax
  435433:	mov    ebp,edi
  435435:	mov    DWORD PTR [rsp+0x4],0x1
  43543d:	lea    rdi,[rip+0x17a60]        # 44cea4 <strcmp@plt+0x4970c>
  435444:	call   4031c0 <getprotobyname@plt>
  435449:	test   rax,rax
  43544c:	je     4354ed <strcmp@plt+0x31d55>
  435452:	mov    edx,DWORD PTR [rax+0x10]
  435455:	mov    edi,ebp
  435457:	mov    esi,0x3
  43545c:	call   4030f0 <socket@plt>
  435461:	test   eax,eax
  435463:	js     435516 <strcmp@plt+0x31d7e>
  435469:	mov    ebx,eax
  43546b:	lea    rax,[rip+0x2f94e]        # 464dc0 <strcmp@plt+0x61628>
  435472:	cmp    DWORD PTR [rax],0x3
  435475:	jl     4354a1 <strcmp@plt+0x31d09>
  435477:	cmp    ebp,0x2
  43547a:	lea    rax,[rip+0xe4c2]        # 443943 <strcmp@plt+0x401ab>
  435481:	lea    rcx,[rip+0xe4c0]        # 443948 <strcmp@plt+0x401b0>
  435488:	cmove  rcx,rax
  43548c:	lea    rsi,[rip+0x17a5d]        # 44cef0 <strcmp@plt+0x49758>
  435493:	mov    edi,0x7
  435498:	mov    edx,ebx
  43549a:	xor    eax,eax
  43549c:	call   42e520 <strcmp@plt+0x2ad88>
  4354a1:	lea    rcx,[rsp+0x4]
  4354a6:	mov    edi,ebx
  4354a8:	mov    esi,0x1
  4354ad:	mov    edx,0x2
  4354b2:	mov    r8d,0x4
  4354b8:	call   403700 <setsockopt@plt>
  4354bd:	cmp    eax,0xffffffff
  4354c0:	jne    43553d <strcmp@plt+0x31da5>
  4354c2:	call   403040 <__errno_location@plt>
  4354c7:	mov    edi,DWORD PTR [rax]
  4354c9:	call   403170 <strerror@plt>
  4354ce:	lea    rsi,[rip+0x17a5e]        # 44cf33 <strcmp@plt+0x4979b>
  4354d5:	mov    edi,0x3
  4354da:	mov    rdx,rax
  4354dd:	xor    eax,eax
  4354df:	call   42e520 <strcmp@plt+0x2ad88>
  4354e4:	mov    edi,ebx
  4354e6:	call   403770 <close@plt>
  4354eb:	jmp    435538 <strcmp@plt+0x31da0>
  4354ed:	call   403040 <__errno_location@plt>
  4354f2:	mov    edi,DWORD PTR [rax]
  4354f4:	call   403170 <strerror@plt>
  4354f9:	lea    rsi,[rip+0x179a8]        # 44cea8 <strcmp@plt+0x49710>
  435500:	mov    edi,0x2
  435505:	mov    rdx,rax
  435508:	xor    eax,eax
  43550a:	call   42e520 <strcmp@plt+0x2ad88>
  43550f:	mov    ebx,0xffffffff
  435514:	jmp    43553d <strcmp@plt+0x31da5>
  435516:	call   403040 <__errno_location@plt>
  43551b:	mov    edi,DWORD PTR [rax]
  43551d:	call   403170 <strerror@plt>
  435522:	lea    rsi,[rip+0x179a7]        # 44ced0 <strcmp@plt+0x49738>
  435529:	mov    edi,0x2
  43552e:	mov    rdx,rax
  435531:	xor    eax,eax
  435533:	call   42e520 <strcmp@plt+0x2ad88>
  435538:	mov    ebx,0xfffffff7
  43553d:	mov    eax,ebx
  43553f:	add    rsp,0x8
  435543:	pop    rbx
  435544:	pop    rbp
  435545:	ret    
  435546:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435550:	push   rbp
  435551:	push   rbx
  435552:	push   rax
  435553:	mov    ebp,edi
  435555:	mov    DWORD PTR [rsp+0x4],0x1
  43555d:	lea    rdi,[rip+0x17940]        # 44cea4 <strcmp@plt+0x4970c>
  435564:	call   4031c0 <getprotobyname@plt>
  435569:	test   rax,rax
  43556c:	je     4355fc <strcmp@plt+0x31e64>
  435572:	mov    edx,DWORD PTR [rax+0x10]
  435575:	mov    edi,ebp
  435577:	mov    esi,0x2
  43557c:	call   4030f0 <socket@plt>
  435581:	test   eax,eax
  435583:	js     435611 <strcmp@plt+0x31e79>
  435589:	mov    ebx,eax
  43558b:	lea    rax,[rip+0x2f82e]        # 464dc0 <strcmp@plt+0x61628>
  435592:	cmp    DWORD PTR [rax],0x3
  435595:	jl     4355c1 <strcmp@plt+0x31e29>
  435597:	cmp    ebp,0x2
  43559a:	lea    rax,[rip+0xe3a2]        # 443943 <strcmp@plt+0x401ab>
  4355a1:	lea    rcx,[rip+0xe3a0]        # 443948 <strcmp@plt+0x401b0>
  4355a8:	cmove  rcx,rax
  4355ac:	lea    rsi,[rip+0x17a03]        # 44cfb6 <strcmp@plt+0x4981e>
  4355b3:	mov    edi,0x7
  4355b8:	mov    edx,ebx
  4355ba:	xor    eax,eax
  4355bc:	call   42e520 <strcmp@plt+0x2ad88>
  4355c1:	lea    rcx,[rsp+0x4]
  4355c6:	mov    edi,ebx
  4355c8:	mov    esi,0x1
  4355cd:	mov    edx,0x2
  4355d2:	mov    r8d,0x4
  4355d8:	call   403700 <setsockopt@plt>
  4355dd:	cmp    eax,0xffffffff
  4355e0:	jne    435638 <strcmp@plt+0x31ea0>
  4355e2:	call   403040 <__errno_location@plt>
  4355e7:	mov    edi,DWORD PTR [rax]
  4355e9:	call   403170 <strerror@plt>
  4355ee:	lea    rsi,[rip+0x17a09]        # 44cffe <strcmp@plt+0x49866>
  4355f5:	mov    edi,0x3
  4355fa:	jmp    435629 <strcmp@plt+0x31e91>
  4355fc:	call   403040 <__errno_location@plt>
  435601:	mov    edi,DWORD PTR [rax]
  435603:	call   403170 <strerror@plt>
  435608:	lea    rsi,[rip+0x17955]        # 44cf64 <strcmp@plt+0x497cc>
  43560f:	jmp    435624 <strcmp@plt+0x31e8c>
  435611:	call   403040 <__errno_location@plt>
  435616:	mov    edi,DWORD PTR [rax]
  435618:	call   403170 <strerror@plt>
  43561d:	lea    rsi,[rip+0x1796d]        # 44cf91 <strcmp@plt+0x497f9>
  435624:	mov    edi,0x2
  435629:	mov    rdx,rax
  43562c:	xor    eax,eax
  43562e:	call   42e520 <strcmp@plt+0x2ad88>
  435633:	mov    ebx,0xfffffff7
  435638:	mov    eax,ebx
  43563a:	add    rsp,0x8
  43563e:	pop    rbx
  43563f:	pop    rbp
  435640:	ret    
  435641:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43564b:	nop    DWORD PTR [rax+rax*1+0x0]
  435650:	push   rbx
  435651:	sub    rsp,0x10
  435655:	mov    QWORD PTR [rsp],0x10
  43565d:	mov    DWORD PTR [rsp+0x8],0x771
  435665:	mov    edi,0x10
  43566a:	mov    esi,0x3
  43566f:	xor    edx,edx
  435671:	call   4030f0 <socket@plt>
  435676:	test   eax,eax
  435678:	js     43568d <strcmp@plt+0x31ef5>
  43567a:	mov    ebx,eax
  43567c:	mov    rsi,rsp
  43567f:	mov    edi,eax
  435681:	mov    edx,0xc
  435686:	call   403090 <bind@plt>
  43568b:	jmp    4356a5 <strcmp@plt+0x31f0d>
  43568d:	lea    rsi,[rip+0x179a0]        # 44d034 <strcmp@plt+0x4989c>
  435694:	mov    edi,0x2
  435699:	xor    eax,eax
  43569b:	call   42e520 <strcmp@plt+0x2ad88>
  4356a0:	mov    ebx,0xfffffff7
  4356a5:	mov    eax,ebx
  4356a7:	add    rsp,0x10
  4356ab:	pop    rbx
  4356ac:	ret    
  4356ad:	nop    DWORD PTR [rax]
  4356b0:	push   rbp
  4356b1:	push   r14
  4356b3:	push   rbx
  4356b4:	mov    rbx,rsi
  4356b7:	mov    ebp,edi
  4356b9:	mov    rdi,rsi
  4356bc:	call   4031e0 <strlen@plt>
  4356c1:	mov    r14d,0x1
  4356c7:	mov    edi,ebp
  4356c9:	mov    esi,0x1
  4356ce:	mov    edx,0x19
  4356d3:	mov    rcx,rbx
  4356d6:	mov    r8d,eax
  4356d9:	call   403700 <setsockopt@plt>
  4356de:	cmp    eax,0xffffffff
  4356e1:	jne    435708 <strcmp@plt+0x31f70>
  4356e3:	call   403040 <__errno_location@plt>
  4356e8:	mov    edi,DWORD PTR [rax]
  4356ea:	call   403170 <strerror@plt>
  4356ef:	lea    rsi,[rip+0x17978]        # 44d06e <strcmp@plt+0x498d6>
  4356f6:	xor    r14d,r14d
  4356f9:	mov    edi,0x3
  4356fe:	mov    rdx,rax
  435701:	xor    eax,eax
  435703:	call   42e520 <strcmp@plt+0x2ad88>
  435708:	mov    eax,r14d
  43570b:	pop    rbx
  43570c:	pop    r14
  43570e:	pop    rbp
  43570f:	ret    
  435710:	push   rbp
  435711:	push   rbx
  435712:	push   rax
  435713:	mov    ebp,edi
  435715:	mov    DWORD PTR [rsp+0x4],0x1
  43571d:	cmp    esi,0xa
  435720:	je     43579f <strcmp@plt+0x32007>
  435722:	xor    ebx,ebx
  435724:	cmp    esi,0x2
  435727:	jne    435832 <strcmp@plt+0x3209a>
  43572d:	xor    ebx,ebx
  43572f:	lea    rcx,[rsp+0x4]
  435734:	mov    edi,ebp
  435736:	xor    esi,esi
  435738:	mov    edx,0xd
  43573d:	mov    r8d,0x4
  435743:	call   403700 <setsockopt@plt>
  435748:	test   eax,eax
  43574a:	js     4357f9 <strcmp@plt+0x32061>
  435750:	lea    rcx,[rsp+0x4]
  435755:	mov    edi,ebp
  435757:	xor    esi,esi
  435759:	mov    edx,0xc
  43575e:	mov    r8d,0x4
  435764:	call   403700 <setsockopt@plt>
  435769:	mov    ebx,0x1
  43576e:	test   eax,eax
  435770:	jns    435832 <strcmp@plt+0x3209a>
  435776:	call   403040 <__errno_location@plt>
  43577b:	mov    edi,DWORD PTR [rax]
  43577d:	call   403170 <strerror@plt>
  435782:	lea    rsi,[rip+0x17950]        # 44d0d9 <strcmp@plt+0x49941>
  435789:	mov    edi,0x3
  43578e:	mov    rdx,rax
  435791:	xor    eax,eax
  435793:	call   42e520 <strcmp@plt+0x2ad88>
  435798:	xor    ebx,ebx
  43579a:	jmp    435832 <strcmp@plt+0x3209a>
  43579f:	lea    rcx,[rsp+0x4]
  4357a4:	mov    edi,ebp
  4357a6:	mov    esi,0x29
  4357ab:	mov    edx,0x42
  4357b0:	mov    r8d,0x4
  4357b6:	call   403700 <setsockopt@plt>
  4357bb:	test   eax,eax
  4357bd:	js     43580e <strcmp@plt+0x32076>
  4357bf:	lea    rcx,[rsp+0x4]
  4357c4:	mov    edi,ebp
  4357c6:	mov    esi,0x29
  4357cb:	mov    edx,0x33
  4357d0:	mov    r8d,0x4
  4357d6:	call   403700 <setsockopt@plt>
  4357db:	mov    ebx,0x1
  4357e0:	test   eax,eax
  4357e2:	jns    435832 <strcmp@plt+0x3209a>
  4357e4:	call   403040 <__errno_location@plt>
  4357e9:	mov    edi,DWORD PTR [rax]
  4357eb:	call   403170 <strerror@plt>
  4357f0:	lea    rsi,[rip+0x1794d]        # 44d144 <strcmp@plt+0x499ac>
  4357f7:	jmp    435821 <strcmp@plt+0x32089>
  4357f9:	call   403040 <__errno_location@plt>
  4357fe:	mov    edi,DWORD PTR [rax]
  435800:	call   403170 <strerror@plt>
  435805:	lea    rsi,[rip+0x1789a]        # 44d0a6 <strcmp@plt+0x4990e>
  43580c:	jmp    435823 <strcmp@plt+0x3208b>
  43580e:	call   403040 <__errno_location@plt>
  435813:	mov    edi,DWORD PTR [rax]
  435815:	call   403170 <strerror@plt>
  43581a:	lea    rsi,[rip+0x178eb]        # 44d10c <strcmp@plt+0x49974>
  435821:	xor    ebx,ebx
  435823:	mov    edi,0x3
  435828:	mov    rdx,rax
  43582b:	xor    eax,eax
  43582d:	call   42e520 <strcmp@plt+0x2ad88>
  435832:	mov    eax,ebx
  435834:	add    rsp,0x8
  435838:	pop    rbx
  435839:	pop    rbp
  43583a:	ret    
  43583b:	nop    DWORD PTR [rax+rax*1+0x0]
  435840:	push   rbp
  435841:	push   rbx
  435842:	push   rax
  435843:	mov    ebp,edi
  435845:	mov    DWORD PTR [rsp+0x4],edx
  435849:	mov    DWORD PTR [rsp],ecx
  43584c:	cmp    esi,0xa
  43584f:	je     4358b6 <strcmp@plt+0x3211e>
  435851:	xor    ebx,ebx
  435853:	cmp    esi,0x2
  435856:	jne    435958 <strcmp@plt+0x321c0>
  43585c:	mov    ebx,0x1
  435861:	mov    rcx,rsp
  435864:	mov    edi,ebp
  435866:	xor    esi,esi
  435868:	mov    edx,0x1
  43586d:	mov    r8d,0x4
  435873:	call   403700 <setsockopt@plt>
  435878:	test   eax,eax
  43587a:	js     43590e <strcmp@plt+0x32176>
  435880:	lea    rcx,[rsp+0x4]
  435885:	mov    edi,ebp
  435887:	xor    esi,esi
  435889:	mov    edx,0x2
  43588e:	mov    r8d,0x4
  435894:	call   403700 <setsockopt@plt>
  435899:	test   eax,eax
  43589b:	jns    435958 <strcmp@plt+0x321c0>
  4358a1:	call   403040 <__errno_location@plt>
  4358a6:	mov    edi,DWORD PTR [rax]
  4358a8:	call   403170 <strerror@plt>
  4358ad:	lea    rsi,[rip+0x178f9]        # 44d1ad <strcmp@plt+0x49a15>
  4358b4:	jmp    435921 <strcmp@plt+0x32189>
  4358b6:	mov    rcx,rsp
  4358b9:	mov    edi,ebp
  4358bb:	mov    esi,0x29
  4358c0:	mov    edx,0x43
  4358c5:	mov    r8d,0x4
  4358cb:	call   403700 <setsockopt@plt>
  4358d0:	test   eax,eax
  4358d2:	js     435934 <strcmp@plt+0x3219c>
  4358d4:	lea    rcx,[rsp+0x4]
  4358d9:	mov    edi,ebp
  4358db:	mov    esi,0x29
  4358e0:	mov    edx,0x34
  4358e5:	mov    r8d,0x4
  4358eb:	call   403700 <setsockopt@plt>
  4358f0:	mov    ebx,0x1
  4358f5:	test   eax,eax
  4358f7:	jns    435958 <strcmp@plt+0x321c0>
  4358f9:	call   403040 <__errno_location@plt>
  4358fe:	mov    edi,DWORD PTR [rax]
  435900:	call   403170 <strerror@plt>
  435905:	lea    rsi,[rip+0x17908]        # 44d214 <strcmp@plt+0x49a7c>
  43590c:	jmp    435947 <strcmp@plt+0x321af>
  43590e:	call   403040 <__errno_location@plt>
  435913:	mov    edi,DWORD PTR [rax]
  435915:	call   403170 <strerror@plt>
  43591a:	lea    rsi,[rip+0x1785d]        # 44d17e <strcmp@plt+0x499e6>
  435921:	mov    edi,0x3
  435926:	mov    rdx,rax
  435929:	xor    eax,eax
  43592b:	call   42e520 <strcmp@plt+0x2ad88>
  435930:	xor    ebx,ebx
  435932:	jmp    435958 <strcmp@plt+0x321c0>
  435934:	call   403040 <__errno_location@plt>
  435939:	mov    edi,DWORD PTR [rax]
  43593b:	call   403170 <strerror@plt>
  435940:	lea    rsi,[rip+0x17899]        # 44d1e0 <strcmp@plt+0x49a48>
  435947:	xor    ebx,ebx
  435949:	mov    edi,0x3
  43594e:	mov    rdx,rax
  435951:	xor    eax,eax
  435953:	call   42e520 <strcmp@plt+0x2ad88>
  435958:	mov    eax,ebx
  43595a:	add    rsp,0x8
  43595e:	pop    rbx
  43595f:	pop    rbp
  435960:	ret    
  435961:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43596b:	nop    DWORD PTR [rax+rax*1+0x0]
  435970:	push   rbp
  435971:	push   r15
  435973:	push   r14
  435975:	push   r13
  435977:	push   r12
  435979:	push   rbx
  43597a:	sub    rsp,0x28
  43597e:	mov    r12d,ecx
  435981:	mov    rbp,rdx
  435984:	mov    ebx,esi
  435986:	mov    r15d,edi
  435989:	xor    r14d,r14d
  43598c:	cmp    esi,0xa
  43598f:	je     4359c7 <strcmp@plt+0x3222f>
  435991:	cmp    ebx,0x2
  435994:	jne    435a94 <strcmp@plt+0x322fc>
  43599a:	vxorps xmm0,xmm0,xmm0
  43599e:	vmovaps XMMWORD PTR [rsp],xmm0
  4359a3:	mov    WORD PTR [rsp],0x2
  4359a9:	test   r12d,r12d
  4359ac:	je     4359b6 <strcmp@plt+0x3221e>
  4359ae:	movbe  WORD PTR [rsp+0x2],r12w
  4359b6:	test   rbp,rbp
  4359b9:	je     4359fd <strcmp@plt+0x32265>
  4359bb:	mov    rdi,rbp
  4359be:	call   423a50 <strcmp@plt+0x202b8>
  4359c3:	mov    eax,DWORD PTR [rax]
  4359c5:	jmp    4359ff <strcmp@plt+0x32267>
  4359c7:	vxorps xmm0,xmm0,xmm0
  4359cb:	vmovaps XMMWORD PTR [rsp],xmm0
  4359d0:	vmovups XMMWORD PTR [rsp+0xc],xmm0
  4359d6:	mov    WORD PTR [rsp],0xa
  4359dc:	test   r12d,r12d
  4359df:	je     4359e9 <strcmp@plt+0x32251>
  4359e1:	movbe  WORD PTR [rsp+0x2],r12w
  4359e9:	lea    r13,[rsp+0x8]
  4359ee:	test   rbp,rbp
  4359f1:	je     435a0a <strcmp@plt+0x32272>
  4359f3:	mov    rdi,rbp
  4359f6:	call   423a60 <strcmp@plt+0x202c8>
  4359fb:	jmp    435a11 <strcmp@plt+0x32279>
  4359fd:	xor    eax,eax
  4359ff:	mov    DWORD PTR [rsp+0x4],eax
  435a03:	mov    edx,0x10
  435a08:	jmp    435a20 <strcmp@plt+0x32288>
  435a0a:	mov    rax,QWORD PTR [rip+0x2e5af]        # 463fc0 <strcmp@plt+0x60828>
  435a11:	vmovups xmm0,XMMWORD PTR [rax]
  435a15:	vmovups XMMWORD PTR [r13+0x0],xmm0
  435a1b:	mov    edx,0x1c
  435a20:	mov    rsi,rsp
  435a23:	mov    edi,r15d
  435a26:	call   403090 <bind@plt>
  435a2b:	lea    rcx,[rip+0x2f38e]        # 464dc0 <strcmp@plt+0x61628>
  435a32:	mov    ecx,DWORD PTR [rcx]
  435a34:	test   eax,eax
  435a36:	je     435a63 <strcmp@plt+0x322cb>
  435a38:	test   ecx,ecx
  435a3a:	jle    435a94 <strcmp@plt+0x322fc>
  435a3c:	call   403040 <__errno_location@plt>
  435a41:	mov    edi,DWORD PTR [rax]
  435a43:	call   403170 <strerror@plt>
  435a48:	lea    rsi,[rip+0x177fb]        # 44d24a <strcmp@plt+0x49ab2>
  435a4f:	xor    r14d,r14d
  435a52:	mov    edi,0x5
  435a57:	mov    rdx,rax
  435a5a:	xor    eax,eax
  435a5c:	call   42e520 <strcmp@plt+0x2ad88>
  435a61:	jmp    435a94 <strcmp@plt+0x322fc>
  435a63:	mov    r14d,0x1
  435a69:	test   ecx,ecx
  435a6b:	jle    435a94 <strcmp@plt+0x322fc>
  435a6d:	mov    rdi,rbp
  435a70:	call   422e20 <strcmp@plt+0x1f688>
  435a75:	lea    rsi,[rip+0x177de]        # 44d25a <strcmp@plt+0x49ac2>
  435a7c:	mov    edi,0x5
  435a81:	mov    edx,r15d
  435a84:	mov    rcx,rax
  435a87:	mov    r8d,r12d
  435a8a:	mov    r9d,ebx
  435a8d:	xor    eax,eax
  435a8f:	call   42e520 <strcmp@plt+0x2ad88>
  435a94:	mov    eax,r14d
  435a97:	add    rsp,0x28
  435a9b:	pop    rbx
  435a9c:	pop    r12
  435a9e:	pop    r13
  435aa0:	pop    r14
  435aa2:	pop    r15
  435aa4:	pop    rbp
  435aa5:	ret    
  435aa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435ab0:	push   rbp
  435ab1:	push   r15
  435ab3:	push   r14
  435ab5:	push   r13
  435ab7:	push   r12
  435ab9:	push   rbx
  435aba:	sub    rsp,0x28
  435abe:	mov    r13,rcx
  435ac1:	mov    r12d,edx
  435ac4:	mov    r15,rsi
  435ac7:	mov    r14d,edi
  435aca:	mov    rdi,rcx
  435acd:	call   423a30 <strcmp@plt+0x20298>
  435ad2:	cmp    eax,0xa
  435ad5:	je     435b06 <strcmp@plt+0x3236e>
  435ad7:	xor    ebp,ebp
  435ad9:	cmp    eax,0x2
  435adc:	jne    435b93 <strcmp@plt+0x323fb>
  435ae2:	vxorps xmm0,xmm0,xmm0
  435ae6:	vmovaps XMMWORD PTR [rsp],xmm0
  435aeb:	mov    WORD PTR [rsp],0x2
  435af1:	lea    rdi,[rsp+0x4]
  435af6:	mov    rsi,r13
  435af9:	call   423d90 <strcmp@plt+0x205f8>
  435afe:	mov    r9d,0x10
  435b04:	jmp    435b2e <strcmp@plt+0x32396>
  435b06:	vxorps xmm0,xmm0,xmm0
  435b0a:	vmovaps XMMWORD PTR [rsp],xmm0
  435b0f:	vmovups XMMWORD PTR [rsp+0xc],xmm0
  435b15:	mov    WORD PTR [rsp],0xa
  435b1b:	lea    rdi,[rsp+0x8]
  435b20:	mov    rsi,r13
  435b23:	call   423d90 <strcmp@plt+0x205f8>
  435b28:	mov    r9d,0x1c
  435b2e:	mov    r8,rsp
  435b31:	movsxd rbx,r12d
  435b34:	mov    edi,r14d
  435b37:	mov    rsi,r15
  435b3a:	mov    rdx,rbx
  435b3d:	xor    ecx,ecx
  435b3f:	call   403060 <sendto@plt>
  435b44:	mov    ebp,0x1
  435b49:	cmp    eax,ebx
  435b4b:	je     435b93 <strcmp@plt+0x323fb>
  435b4d:	lea    rax,[rip+0x2f26c]        # 464dc0 <strcmp@plt+0x61628>
  435b54:	cmp    DWORD PTR [rax],0x2
  435b57:	mov    ebp,0x0
  435b5c:	jl     435b93 <strcmp@plt+0x323fb>
  435b5e:	mov    rdi,r13
  435b61:	call   423c50 <strcmp@plt+0x204b8>
  435b66:	mov    rbx,rax
  435b69:	call   403040 <__errno_location@plt>
  435b6e:	mov    edi,DWORD PTR [rax]
  435b70:	call   403170 <strerror@plt>
  435b75:	lea    rsi,[rip+0x17729]        # 44d2a5 <strcmp@plt+0x49b0d>
  435b7c:	xor    ebp,ebp
  435b7e:	mov    edi,0x6
  435b83:	mov    rdx,rbx
  435b86:	mov    ecx,r14d
  435b89:	mov    r8,rax
  435b8c:	xor    eax,eax
  435b8e:	call   42e520 <strcmp@plt+0x2ad88>
  435b93:	mov    eax,ebp
  435b95:	add    rsp,0x28
  435b99:	pop    rbx
  435b9a:	pop    r12
  435b9c:	pop    r13
  435b9e:	pop    r14
  435ba0:	pop    r15
  435ba2:	pop    rbp
  435ba3:	ret    
  435ba4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435bae:	xchg   ax,ax
  435bb0:	push   rbp
  435bb1:	push   r15
  435bb3:	push   r14
  435bb5:	push   r12
  435bb7:	push   rbx
  435bb8:	sub    rsp,0x20
  435bbc:	mov    ebp,r8d
  435bbf:	mov    rbx,rcx
  435bc2:	mov    r12d,edx
  435bc5:	mov    r15,rsi
  435bc8:	mov    r14d,edi
  435bcb:	mov    rdi,rcx
  435bce:	call   422ef0 <strcmp@plt+0x1f758>
  435bd3:	cmp    ax,0xa
  435bd7:	je     435c17 <strcmp@plt+0x3247f>
  435bd9:	cmp    ax,0x2
  435bdd:	jne    435ca6 <strcmp@plt+0x3250e>
  435be3:	mov    DWORD PTR [rsp+0xc],0x0
  435beb:	mov    QWORD PTR [rsp+0x4],0x0
  435bf4:	movbe  WORD PTR [rsp+0x2],bp
  435bfb:	mov    WORD PTR [rsp],0x2
  435c01:	mov    rdi,rbx
  435c04:	call   423a50 <strcmp@plt+0x202b8>
  435c09:	mov    eax,DWORD PTR [rax]
  435c0b:	mov    DWORD PTR [rsp+0x4],eax
  435c0f:	mov    r9d,0x10
  435c15:	jmp    435c4f <strcmp@plt+0x324b7>
  435c17:	vxorps xmm0,xmm0,xmm0
  435c1b:	vmovups XMMWORD PTR [rsp+0x4],xmm0
  435c21:	mov    QWORD PTR [rsp+0x14],0x0
  435c2a:	mov    WORD PTR [rsp],0xa
  435c30:	movbe  WORD PTR [rsp+0x2],bp
  435c37:	mov    rdi,rbx
  435c3a:	call   423a60 <strcmp@plt+0x202c8>
  435c3f:	vmovups xmm0,XMMWORD PTR [rax]
  435c43:	vmovups XMMWORD PTR [rsp+0x8],xmm0
  435c49:	mov    r9d,0x1c
  435c4f:	mov    r8,rsp
  435c52:	movsxd rdx,r12d
  435c55:	mov    edi,r14d
  435c58:	mov    rsi,r15
  435c5b:	xor    ecx,ecx
  435c5d:	call   403060 <sendto@plt>
  435c62:	mov    ebp,0x1
  435c67:	test   rax,rax
  435c6a:	jns    435cd4 <strcmp@plt+0x3253c>
  435c6c:	lea    rax,[rip+0x2f14d]        # 464dc0 <strcmp@plt+0x61628>
  435c73:	cmp    DWORD PTR [rax],0x2
  435c76:	mov    ebp,0x0
  435c7b:	jl     435cd4 <strcmp@plt+0x3253c>
  435c7d:	call   403040 <__errno_location@plt>
  435c82:	mov    edi,DWORD PTR [rax]
  435c84:	call   403170 <strerror@plt>
  435c89:	lea    rsi,[rip+0x17683]        # 44d313 <strcmp@plt+0x49b7b>
  435c90:	xor    ebp,ebp
  435c92:	mov    edi,0x6
  435c97:	mov    rdx,rax
  435c9a:	mov    ecx,r14d
  435c9d:	xor    eax,eax
  435c9f:	call   42e520 <strcmp@plt+0x2ad88>
  435ca4:	jmp    435cd4 <strcmp@plt+0x3253c>
  435ca6:	lea    rax,[rip+0x2f113]        # 464dc0 <strcmp@plt+0x61628>
  435cad:	xor    ebp,ebp
  435caf:	cmp    DWORD PTR [rax],0x2
  435cb2:	jl     435cd4 <strcmp@plt+0x3253c>
  435cb4:	mov    rdi,rbx
  435cb7:	call   422ef0 <strcmp@plt+0x1f758>
  435cbc:	movzx  edx,ax
  435cbf:	lea    rsi,[rip+0x17628]        # 44d2ee <strcmp@plt+0x49b56>
  435cc6:	xor    ebp,ebp
  435cc8:	mov    edi,0x6
  435ccd:	xor    eax,eax
  435ccf:	call   42e520 <strcmp@plt+0x2ad88>
  435cd4:	mov    eax,ebp
  435cd6:	add    rsp,0x20
  435cda:	pop    rbx
  435cdb:	pop    r12
  435cdd:	pop    r14
  435cdf:	pop    r15
  435ce1:	pop    rbp
  435ce2:	ret    
  435ce3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435ced:	nop    DWORD PTR [rax]
  435cf0:	push   rbp
  435cf1:	push   rbx
  435cf2:	push   rax
  435cf3:	mov    rbx,rsi
  435cf6:	mov    rsi,rdi
  435cf9:	movzx  edx,WORD PTR [rdi]
  435cfc:	cmp    edx,0xa
  435cff:	je     435d15 <strcmp@plt+0x3257d>
  435d01:	cmp    dx,0x2
  435d05:	jne    435d3a <strcmp@plt+0x325a2>
  435d07:	add    rsi,0x4
  435d0b:	mov    rdi,rbx
  435d0e:	mov    edx,0x2
  435d13:	jmp    435d21 <strcmp@plt+0x32589>
  435d15:	add    rsi,0x8
  435d19:	mov    rdi,rbx
  435d1c:	mov    edx,0xa
  435d21:	call   423850 <strcmp@plt+0x200b8>
  435d26:	mov    ebp,0x1
  435d2b:	mov    rdi,rbx
  435d2e:	mov    esi,0x1
  435d33:	call   422e90 <strcmp@plt+0x1f6f8>
  435d38:	jmp    435d5d <strcmp@plt+0x325c5>
  435d3a:	lea    rax,[rip+0x2f07f]        # 464dc0 <strcmp@plt+0x61628>
  435d41:	xor    ebp,ebp
  435d43:	cmp    DWORD PTR [rax],0x3
  435d46:	jl     435d5d <strcmp@plt+0x325c5>
  435d48:	lea    rsi,[rip+0x175f3]        # 44d342 <strcmp@plt+0x49baa>
  435d4f:	xor    ebp,ebp
  435d51:	mov    edi,0x7
  435d56:	xor    eax,eax
  435d58:	call   42e520 <strcmp@plt+0x2ad88>
  435d5d:	mov    eax,ebp
  435d5f:	add    rsp,0x8
  435d63:	pop    rbx
  435d64:	pop    rbp
  435d65:	ret    
  435d66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435d70:	push   r14
  435d72:	push   rbx
  435d73:	push   rax
  435d74:	mov    rbx,rdi
  435d77:	cmp    DWORD PTR [rdi+0x18],0x1
  435d7b:	jne    435db3 <strcmp@plt+0x3261b>
  435d7d:	mov    rdi,rbx
  435d80:	call   422ef0 <strcmp@plt+0x1f758>
  435d85:	cmp    ax,0xa
  435d89:	je     435ddd <strcmp@plt+0x32645>
  435d8b:	cmp    ax,0x2
  435d8f:	jne    435e03 <strcmp@plt+0x3266b>
  435d91:	mov    edi,0x10
  435d96:	call   431d90 <strcmp@plt+0x2e5f8>
  435d9b:	mov    r14,rax
  435d9e:	mov    WORD PTR [rax],0x2
  435da3:	mov    rdi,rbx
  435da6:	call   423a50 <strcmp@plt+0x202b8>
  435dab:	mov    eax,DWORD PTR [rax]
  435dad:	mov    DWORD PTR [r14+0x4],eax
  435db1:	jmp    435e30 <strcmp@plt+0x32698>
  435db3:	lea    rax,[rip+0x2f006]        # 464dc0 <strcmp@plt+0x61628>
  435dba:	cmp    DWORD PTR [rax],0x2
  435dbd:	jge    435dc4 <strcmp@plt+0x3262c>
  435dbf:	xor    r14d,r14d
  435dc2:	jmp    435e30 <strcmp@plt+0x32698>
  435dc4:	mov    rdi,rbx
  435dc7:	call   422e20 <strcmp@plt+0x1f688>
  435dcc:	lea    rsi,[rip+0x17595]        # 44d368 <strcmp@plt+0x49bd0>
  435dd3:	xor    r14d,r14d
  435dd6:	mov    edi,0x6
  435ddb:	jmp    435e26 <strcmp@plt+0x3268e>
  435ddd:	mov    edi,0x1c
  435de2:	call   431d90 <strcmp@plt+0x2e5f8>
  435de7:	mov    r14,rax
  435dea:	mov    WORD PTR [rax],0xa
  435def:	mov    rdi,rbx
  435df2:	call   423a60 <strcmp@plt+0x202c8>
  435df7:	vmovups xmm0,XMMWORD PTR [rax]
  435dfb:	vmovups XMMWORD PTR [r14+0x8],xmm0
  435e01:	jmp    435e30 <strcmp@plt+0x32698>
  435e03:	lea    rax,[rip+0x2efb6]        # 464dc0 <strcmp@plt+0x61628>
  435e0a:	cmp    DWORD PTR [rax],0x0
  435e0d:	jle    435dbf <strcmp@plt+0x32627>
  435e0f:	mov    rdi,rbx
  435e12:	call   422e20 <strcmp@plt+0x1f688>
  435e17:	lea    rsi,[rip+0x17588]        # 44d3a6 <strcmp@plt+0x49c0e>
  435e1e:	xor    r14d,r14d
  435e21:	mov    edi,0x5
  435e26:	mov    rdx,rax
  435e29:	xor    eax,eax
  435e2b:	call   42e520 <strcmp@plt+0x2ad88>
  435e30:	mov    rax,r14
  435e33:	add    rsp,0x8
  435e37:	pop    rbx
  435e38:	pop    r14
  435e3a:	ret    
  435e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  435e40:	push   rbx
  435e41:	mov    edi,0x1
  435e46:	mov    esi,0x10
  435e4b:	call   431d10 <strcmp@plt+0x2e578>
  435e50:	mov    rbx,rax
  435e53:	mov    edi,0x1
  435e58:	mov    esi,0x28
  435e5d:	call   4032d0 <calloc@plt>
  435e62:	mov    QWORD PTR [rbx],rax
  435e65:	mov    rax,rbx
  435e68:	pop    rbx
  435e69:	ret    
  435e6a:	nop    WORD PTR [rax+rax*1+0x0]
  435e70:	push   r14
  435e72:	push   rbx
  435e73:	push   rax
  435e74:	mov    r14,rdi
  435e77:	mov    edi,0x1
  435e7c:	mov    esi,0x10
  435e81:	call   431d10 <strcmp@plt+0x2e578>
  435e86:	mov    rbx,rax
  435e89:	mov    edi,0x1
  435e8e:	mov    esi,0x28
  435e93:	call   4032d0 <calloc@plt>
  435e98:	mov    QWORD PTR [rbx],rax
  435e9b:	mov    QWORD PTR [rbx+0x8],r14
  435e9f:	mov    rax,rbx
  435ea2:	add    rsp,0x8
  435ea6:	pop    rbx
  435ea7:	pop    r14
  435ea9:	ret    
  435eaa:	nop    WORD PTR [rax+rax*1+0x0]
  435eb0:	push   rbp
  435eb1:	push   r15
  435eb3:	push   r14
  435eb5:	push   r13
  435eb7:	push   r12
  435eb9:	push   rbx
  435eba:	sub    rsp,0x38
  435ebe:	mov    QWORD PTR [rsp],rdx
  435ec2:	mov    QWORD PTR [rsp+0x10],rdi
  435ec7:	mov    rdi,QWORD PTR [rdi]
  435eca:	mov    eax,DWORD PTR [rdi]
  435ecc:	mov    QWORD PTR [rsp+0x8],rax
  435ed1:	test   eax,eax
  435ed3:	mov    QWORD PTR [rsp+0x18],rdi
  435ed8:	mov    QWORD PTR [rsp+0x28],rsi
  435edd:	je     435fa7 <strcmp@plt+0x3280f>
  435ee3:	mov    rax,QWORD PTR [rsp+0x8]
  435ee8:	lea    r14d,[rax-0x1]
  435eec:	movsx  ebp,BYTE PTR [rsi]
  435eef:	test   ebp,ebp
  435ef1:	je     435f18 <strcmp@plt+0x32780>
  435ef3:	mov    al,BYTE PTR [rsi+0x1]
  435ef6:	test   al,al
  435ef8:	je     435f1a <strcmp@plt+0x32782>
  435efa:	lea    rcx,[rsi+0x2]
  435efe:	xchg   ax,ax
  435f00:	mov    edx,ebp
  435f02:	shl    edx,0x5
  435f05:	sub    edx,ebp
  435f07:	movsx  ebp,al
  435f0a:	add    ebp,edx
  435f0c:	movzx  eax,BYTE PTR [rcx]
  435f0f:	inc    rcx
  435f12:	test   al,al
  435f14:	jne    435f00 <strcmp@plt+0x32768>
  435f16:	jmp    435f1a <strcmp@plt+0x32782>
  435f18:	xor    ebp,ebp
  435f1a:	mov    r12d,ebp
  435f1d:	and    r12d,r14d
  435f20:	mov    eax,ebp
  435f22:	shr    eax,0x3
  435f25:	shl    ebp,0x3
  435f28:	xor    ebp,eax
  435f2a:	or     ebp,0x1
  435f2d:	and    ebp,r14d
  435f30:	mov    rcx,QWORD PTR [rdi+0x10]
  435f34:	mov    ebx,r12d
  435f37:	mov    QWORD PTR [rsp+0x20],rcx
  435f3c:	jmp    435f4a <strcmp@plt+0x327b2>
  435f3e:	xchg   ax,ax
  435f40:	add    ebx,ebp
  435f42:	and    ebx,r14d
  435f45:	cmp    ebx,r12d
  435f48:	je     435fa7 <strcmp@plt+0x3280f>
  435f4a:	mov    eax,ebx
  435f4c:	shr    eax,0x4
  435f4f:	mov    r13d,DWORD PTR [rcx+rax*4]
  435f53:	lea    r15d,[rbx+rbx*1]
  435f57:	and    r15d,0x1e
  435f5b:	shrx   eax,r13d,r15d
  435f60:	test   al,0x2
  435f62:	jne    435f8a <strcmp@plt+0x327f2>
  435f64:	test   al,0x1
  435f66:	jne    435f40 <strcmp@plt+0x327a8>
  435f68:	mov    rax,QWORD PTR [rdi+0x18]
  435f6c:	mov    ecx,ebx
  435f6e:	mov    rdi,QWORD PTR [rax+rcx*8]
  435f72:	call   403798 <strcmp@plt>
  435f77:	mov    rcx,QWORD PTR [rsp+0x20]
  435f7c:	mov    rsi,QWORD PTR [rsp+0x28]
  435f81:	mov    rdi,QWORD PTR [rsp+0x18]
  435f86:	test   eax,eax
  435f88:	jne    435f40 <strcmp@plt+0x327a8>
  435f8a:	mov    eax,0x3
  435f8f:	shlx   eax,eax,r15d
  435f94:	test   eax,r13d
  435f97:	mov    rax,QWORD PTR [rsp+0x8]
  435f9c:	cmovne ebx,eax
  435f9f:	cmp    ebx,eax
  435fa1:	jne    4360ef <strcmp@plt+0x32957>
  435fa7:	mov    eax,DWORD PTR [rdi+0x8]
  435faa:	cmp    eax,DWORD PTR [rdi+0xc]
  435fad:	jb     435fda <strcmp@plt+0x32842>
  435faf:	mov    eax,DWORD PTR [rdi+0x4]
  435fb2:	add    eax,eax
  435fb4:	xor    ecx,ecx
  435fb6:	mov    rdx,QWORD PTR [rsp+0x8]
  435fbb:	cmp    edx,eax
  435fbd:	setbe  cl
  435fc0:	lea    esi,[rdx+rcx*2]
  435fc3:	add    esi,0xffffffff
  435fc6:	mov    rdi,QWORD PTR [rsp+0x18]
  435fcb:	call   436620 <strcmp@plt+0x32e88>
  435fd0:	mov    rsi,QWORD PTR [rsp+0x28]
  435fd5:	mov    rdi,QWORD PTR [rsp+0x18]
  435fda:	mov    ebx,DWORD PTR [rdi]
  435fdc:	lea    r9d,[rbx-0x1]
  435fe0:	movsx  ebp,BYTE PTR [rsi]
  435fe3:	test   ebp,ebp
  435fe5:	je     436018 <strcmp@plt+0x32880>
  435fe7:	mov    al,BYTE PTR [rsi+0x1]
  435fea:	test   al,al
  435fec:	je     43601a <strcmp@plt+0x32882>
  435fee:	lea    rcx,[rsi+0x2]
  435ff2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  435ffc:	nop    DWORD PTR [rax+0x0]
  436000:	mov    edx,ebp
  436002:	shl    edx,0x5
  436005:	sub    edx,ebp
  436007:	movsx  ebp,al
  43600a:	add    ebp,edx
  43600c:	movzx  eax,BYTE PTR [rcx]
  43600f:	inc    rcx
  436012:	test   al,al
  436014:	jne    436000 <strcmp@plt+0x32868>
  436016:	jmp    43601a <strcmp@plt+0x32882>
  436018:	xor    ebp,ebp
  43601a:	mov    r10d,ebp
  43601d:	and    r10d,r9d
  436020:	mov    r15,QWORD PTR [rdi+0x10]
  436024:	mov    eax,r10d
  436027:	shr    eax,0x4
  43602a:	lea    ecx,[r10+r10*1]
  43602e:	mov    edx,0x2
  436033:	shlx   ecx,edx,ecx
  436038:	test   DWORD PTR [r15+rax*4],ecx
  43603c:	je     43604b <strcmp@plt+0x328b3>
  43603e:	mov    ebx,r10d
  436041:	mov    r14,QWORD PTR [rsp+0x10]
  436046:	jmp    43613d <strcmp@plt+0x329a5>
  43604b:	mov    eax,ebp
  43604d:	shr    eax,0x3
  436050:	shl    ebp,0x3
  436053:	xor    ebp,eax
  436055:	or     ebp,0x1
  436058:	and    ebp,r9d
  43605b:	mov    QWORD PTR [rsp+0x30],rbx
  436060:	mov    r12d,r10d
  436063:	mov    DWORD PTR [rsp+0x20],r9d
  436068:	mov    QWORD PTR [rsp+0x8],r10
  43606d:	jmp    436087 <strcmp@plt+0x328ef>
  43606f:	nop
  436070:	bt     r13d,r14d
  436074:	cmovb  ebx,r12d
  436078:	add    r12d,ebp
  43607b:	and    r12d,r9d
  43607e:	cmp    r12d,r10d
  436081:	je     43611d <strcmp@plt+0x32985>
  436087:	mov    eax,r12d
  43608a:	shr    eax,0x4
  43608d:	mov    r13d,DWORD PTR [r15+rax*4]
  436091:	lea    r14d,[r12+r12*1]
  436095:	and    r14d,0x1e
  436099:	shrx   eax,r13d,r14d
  43609e:	test   al,0x2
  4360a0:	jne    4360ce <strcmp@plt+0x32936>
  4360a2:	test   al,0x1
  4360a4:	jne    436070 <strcmp@plt+0x328d8>
  4360a6:	mov    rax,QWORD PTR [rdi+0x18]
  4360aa:	mov    ecx,r12d
  4360ad:	mov    rdi,QWORD PTR [rax+rcx*8]
  4360b1:	call   403798 <strcmp@plt>
  4360b6:	mov    r9d,DWORD PTR [rsp+0x20]
  4360bb:	mov    r10,QWORD PTR [rsp+0x8]
  4360c0:	mov    rsi,QWORD PTR [rsp+0x28]
  4360c5:	mov    rdi,QWORD PTR [rsp+0x18]
  4360ca:	test   eax,eax
  4360cc:	jne    436070 <strcmp@plt+0x328d8>
  4360ce:	mov    eax,0x2
  4360d3:	shlx   eax,eax,r14d
  4360d8:	test   eax,r13d
  4360db:	sete   al
  4360de:	mov    r10d,r12d
  4360e1:	mov    ecx,ebx
  4360e3:	mov    r14,QWORD PTR [rsp+0x10]
  4360e8:	mov    rdx,QWORD PTR [rsp+0x30]
  4360ed:	jmp    43612f <strcmp@plt+0x32997>
  4360ef:	mov    rdi,rsi
  4360f2:	call   403790 <free@plt>
  4360f7:	mov    r14,QWORD PTR [rsp+0x10]
  4360fc:	mov    rax,QWORD PTR [r14+0x8]
  436100:	test   rax,rax
  436103:	je     43619d <strcmp@plt+0x32a05>
  436109:	mov    rcx,QWORD PTR [r14]
  43610c:	mov    rcx,QWORD PTR [rcx+0x20]
  436110:	mov    edx,ebx
  436112:	mov    rdi,QWORD PTR [rcx+rdx*8]
  436116:	call   rax
  436118:	jmp    43619d <strcmp@plt+0x32a05>
  43611d:	mov    al,0x1
  43611f:	mov    rdx,QWORD PTR [rsp+0x30]
  436124:	mov    ecx,edx
  436126:	cmp    ebx,edx
  436128:	mov    r14,QWORD PTR [rsp+0x10]
  43612d:	jne    43613d <strcmp@plt+0x329a5>
  43612f:	cmp    ecx,edx
  436131:	cmove  ecx,r10d
  436135:	test   al,al
  436137:	cmovne ecx,r10d
  43613b:	mov    ebx,ecx
  43613d:	mov    eax,ebx
  43613f:	shr    eax,0x4
  436142:	lea    ecx,[rbx+rbx*1]
  436145:	and    ecx,0x1e
  436148:	shrx   edx,DWORD PTR [r15+rax*4],ecx
  43614e:	test   dl,0x2
  436151:	jne    43617a <strcmp@plt+0x329e2>
  436153:	test   dl,0x1
  436156:	je     43619d <strcmp@plt+0x32a05>
  436158:	mov    rdx,QWORD PTR [rdi+0x18]
  43615c:	mov    ebp,ebx
  43615e:	mov    QWORD PTR [rdx+rbp*8],rsi
  436162:	mov    rdx,QWORD PTR [rdi+0x10]
  436166:	mov    esi,0x3
  43616b:	shlx   ecx,esi,ecx
  436170:	not    ecx
  436172:	and    DWORD PTR [rdx+rax*4],ecx
  436175:	inc    DWORD PTR [rdi+0x4]
  436178:	jmp    43619d <strcmp@plt+0x32a05>
  43617a:	mov    rdx,QWORD PTR [rdi+0x18]
  43617e:	mov    ebp,ebx
  436180:	mov    QWORD PTR [rdx+rbp*8],rsi
  436184:	mov    rdx,QWORD PTR [rdi+0x10]
  436188:	mov    esi,0x3
  43618d:	shlx   ecx,esi,ecx
  436192:	not    ecx
  436194:	and    DWORD PTR [rdx+rax*4],ecx
  436197:	inc    DWORD PTR [rdi+0x4]
  43619a:	inc    DWORD PTR [rdi+0x8]
  43619d:	mov    rdx,QWORD PTR [rsp]
  4361a1:	mov    rax,QWORD PTR [r14]
  4361a4:	mov    rax,QWORD PTR [rax+0x20]
  4361a8:	mov    ecx,ebx
  4361aa:	mov    QWORD PTR [rax+rcx*8],rdx
  4361ae:	add    rsp,0x38
  4361b2:	pop    rbx
  4361b3:	pop    r12
  4361b5:	pop    r13
  4361b7:	pop    r14
  4361b9:	pop    r15
  4361bb:	pop    rbp
  4361bc:	ret    
  4361bd:	nop    DWORD PTR [rax]
  4361c0:	push   rbp
  4361c1:	push   r15
  4361c3:	push   r14
  4361c5:	push   r13
  4361c7:	push   r12
  4361c9:	push   rbx
  4361ca:	sub    rsp,0x28
  4361ce:	mov    QWORD PTR [rsp+0x10],rsi
  4361d3:	mov    QWORD PTR [rsp+0x18],rdi
  4361d8:	mov    rax,QWORD PTR [rdi]
  4361db:	mov    QWORD PTR [rsp],rax
  4361df:	mov    eax,DWORD PTR [rax]
  4361e1:	mov    QWORD PTR [rsp+0x8],rax
  4361e6:	test   eax,eax
  4361e8:	je     436325 <strcmp@plt+0x32b8d>
  4361ee:	mov    rax,QWORD PTR [rsp+0x8]
  4361f3:	lea    r15d,[rax-0x1]
  4361f7:	mov    rcx,QWORD PTR [rsp+0x10]
  4361fc:	movsx  r14d,BYTE PTR [rcx]
  436200:	test   r14d,r14d
  436203:	je     43622c <strcmp@plt+0x32a94>
  436205:	mov    al,BYTE PTR [rcx+0x1]
  436208:	test   al,al
  43620a:	je     43622f <strcmp@plt+0x32a97>
  43620c:	add    rcx,0x2
  436210:	mov    edx,r14d
  436213:	shl    edx,0x5
  436216:	sub    edx,r14d
  436219:	movsx  r14d,al
  43621d:	add    r14d,edx
  436220:	movzx  eax,BYTE PTR [rcx]
  436223:	inc    rcx
  436226:	test   al,al
  436228:	jne    436210 <strcmp@plt+0x32a78>
  43622a:	jmp    43622f <strcmp@plt+0x32a97>
  43622c:	xor    r14d,r14d
  43622f:	mov    r12d,r14d
  436232:	and    r12d,r15d
  436235:	mov    eax,r14d
  436238:	shr    eax,0x3
  43623b:	shl    r14d,0x3
  43623f:	xor    r14d,eax
  436242:	or     r14d,0x1
  436246:	and    r14d,r15d
  436249:	mov    rax,QWORD PTR [rsp]
  43624d:	mov    rcx,QWORD PTR [rax+0x10]
  436251:	mov    ebx,r12d
  436254:	mov    QWORD PTR [rsp+0x20],rcx
  436259:	jmp    43626f <strcmp@plt+0x32ad7>
  43625b:	nop    DWORD PTR [rax+rax*1+0x0]
  436260:	add    ebx,r14d
  436263:	and    ebx,r15d
  436266:	cmp    ebx,r12d
  436269:	je     436325 <strcmp@plt+0x32b8d>
  43626f:	mov    eax,ebx
  436271:	shr    eax,0x4
  436274:	mov    r13d,DWORD PTR [rcx+rax*4]
  436278:	lea    ebp,[rbx+rbx*1]
  43627b:	and    ebp,0x1e
  43627e:	shrx   eax,r13d,ebp
  436283:	test   al,0x2
  436285:	jne    4362ac <strcmp@plt+0x32b14>
  436287:	test   al,0x1
  436289:	jne    436260 <strcmp@plt+0x32ac8>
  43628b:	mov    rax,QWORD PTR [rsp]
  43628f:	mov    rax,QWORD PTR [rax+0x18]
  436293:	mov    ecx,ebx
  436295:	mov    rdi,QWORD PTR [rax+rcx*8]
  436299:	mov    rsi,QWORD PTR [rsp+0x10]
  43629e:	call   403798 <strcmp@plt>
  4362a3:	mov    rcx,QWORD PTR [rsp+0x20]
  4362a8:	test   eax,eax
  4362aa:	jne    436260 <strcmp@plt+0x32ac8>
  4362ac:	mov    eax,0x3
  4362b1:	shlx   eax,eax,ebp
  4362b6:	test   eax,r13d
  4362b9:	mov    rax,QWORD PTR [rsp+0x8]
  4362be:	cmovne ebx,eax
  4362c1:	cmp    ebx,eax
  4362c3:	je     436325 <strcmp@plt+0x32b8d>
  4362c5:	mov    rax,QWORD PTR [rsp]
  4362c9:	mov    rax,QWORD PTR [rax+0x18]
  4362cd:	mov    r14d,ebx
  4362d0:	mov    rdi,QWORD PTR [rax+r14*8]
  4362d4:	call   403790 <free@plt>
  4362d9:	mov    rbp,QWORD PTR [rsp+0x18]
  4362de:	mov    rax,QWORD PTR [rbp+0x8]
  4362e2:	test   rax,rax
  4362e5:	je     4362f5 <strcmp@plt+0x32b5d>
  4362e7:	mov    rcx,QWORD PTR [rbp+0x0]
  4362eb:	mov    rcx,QWORD PTR [rcx+0x20]
  4362ef:	mov    rdi,QWORD PTR [rcx+r14*8]
  4362f3:	call   rax
  4362f5:	mov    rax,QWORD PTR [rbp+0x0]
  4362f9:	cmp    DWORD PTR [rax],ebx
  4362fb:	je     436325 <strcmp@plt+0x32b8d>
  4362fd:	mov    rcx,QWORD PTR [rax+0x10]
  436301:	mov    edx,ebx
  436303:	shr    edx,0x4
  436306:	mov    esi,DWORD PTR [rcx+rdx*4]
  436309:	add    ebx,ebx
  43630b:	and    ebx,0x1e
  43630e:	mov    edi,0x3
  436313:	shlx   edi,edi,ebx
  436318:	test   esi,edi
  43631a:	jne    436325 <strcmp@plt+0x32b8d>
  43631c:	bts    esi,ebx
  43631f:	mov    DWORD PTR [rcx+rdx*4],esi
  436322:	dec    DWORD PTR [rax+0x4]
  436325:	add    rsp,0x28
  436329:	pop    rbx
  43632a:	pop    r12
  43632c:	pop    r13
  43632e:	pop    r14
  436330:	pop    r15
  436332:	pop    rbp
  436333:	ret    
  436334:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43633e:	xchg   ax,ax
  436340:	push   rbp
  436341:	push   r15
  436343:	push   r14
  436345:	push   r13
  436347:	push   r12
  436349:	push   rbx
  43634a:	sub    rsp,0x28
  43634e:	mov    rax,QWORD PTR [rdi]
  436351:	mov    QWORD PTR [rsp+0x8],rax
  436356:	mov    eax,DWORD PTR [rax]
  436358:	xor    ebx,ebx
  43635a:	test   eax,eax
  43635c:	je     43644c <strcmp@plt+0x32cb4>
  436362:	mov    QWORD PTR [rsp+0x10],rax
  436367:	lea    r14d,[rax-0x1]
  43636b:	movsx  edx,BYTE PTR [rsi]
  43636e:	test   edx,edx
  436370:	je     43639a <strcmp@plt+0x32c02>
  436372:	mov    al,BYTE PTR [rsi+0x1]
  436375:	test   al,al
  436377:	je     436398 <strcmp@plt+0x32c00>
  436379:	lea    rcx,[rsi+0x2]
  43637d:	mov    ebx,edx
  43637f:	nop
  436380:	mov    edx,ebx
  436382:	shl    edx,0x5
  436385:	sub    edx,ebx
  436387:	movsx  ebx,al
  43638a:	add    ebx,edx
  43638c:	movzx  eax,BYTE PTR [rcx]
  43638f:	inc    rcx
  436392:	test   al,al
  436394:	jne    436380 <strcmp@plt+0x32be8>
  436396:	jmp    43639a <strcmp@plt+0x32c02>
  436398:	mov    ebx,edx
  43639a:	mov    QWORD PTR [rsp+0x20],rsi
  43639f:	mov    ebp,ebx
  4363a1:	and    ebp,r14d
  4363a4:	mov    eax,ebx
  4363a6:	shr    eax,0x3
  4363a9:	shl    ebx,0x3
  4363ac:	xor    ebx,eax
  4363ae:	or     ebx,0x1
  4363b1:	and    ebx,r14d
  4363b4:	mov    rax,QWORD PTR [rsp+0x8]
  4363b9:	mov    rcx,QWORD PTR [rax+0x10]
  4363bd:	mov    r12d,ebp
  4363c0:	mov    QWORD PTR [rsp+0x18],rcx
  4363c5:	jmp    4363db <strcmp@plt+0x32c43>
  4363c7:	nop    WORD PTR [rax+rax*1+0x0]
  4363d0:	add    r12d,ebx
  4363d3:	and    r12d,r14d
  4363d6:	cmp    r12d,ebp
  4363d9:	je     436438 <strcmp@plt+0x32ca0>
  4363db:	mov    eax,r12d
  4363de:	shr    eax,0x4
  4363e1:	mov    r15d,DWORD PTR [rcx+rax*4]
  4363e5:	lea    r13d,[r12+r12*1]
  4363e9:	and    r13d,0x1e
  4363ed:	shrx   eax,r15d,r13d
  4363f2:	test   al,0x2
  4363f4:	jne    43641d <strcmp@plt+0x32c85>
  4363f6:	test   al,0x1
  4363f8:	jne    4363d0 <strcmp@plt+0x32c38>
  4363fa:	mov    rax,QWORD PTR [rsp+0x8]
  4363ff:	mov    rax,QWORD PTR [rax+0x18]
  436403:	mov    ecx,r12d
  436406:	mov    rdi,QWORD PTR [rax+rcx*8]
  43640a:	mov    rsi,QWORD PTR [rsp+0x20]
  43640f:	call   403798 <strcmp@plt>
  436414:	mov    rcx,QWORD PTR [rsp+0x18]
  436419:	test   eax,eax
  43641b:	jne    4363d0 <strcmp@plt+0x32c38>
  43641d:	mov    eax,0x3
  436422:	shlx   eax,eax,r13d
  436427:	test   eax,r15d
  43642a:	mov    rax,QWORD PTR [rsp+0x10]
  43642f:	cmovne r12d,eax
  436433:	cmp    r12d,eax
  436436:	jne    43643c <strcmp@plt+0x32ca4>
  436438:	xor    ebx,ebx
  43643a:	jmp    43644c <strcmp@plt+0x32cb4>
  43643c:	mov    rax,QWORD PTR [rsp+0x8]
  436441:	mov    rax,QWORD PTR [rax+0x20]
  436445:	mov    ecx,r12d
  436448:	mov    rbx,QWORD PTR [rax+rcx*8]
  43644c:	mov    rax,rbx
  43644f:	add    rsp,0x28
  436453:	pop    rbx
  436454:	pop    r12
  436456:	pop    r13
  436458:	pop    r14
  43645a:	pop    r15
  43645c:	pop    rbp
  43645d:	ret    
  43645e:	xchg   ax,ax
  436460:	test   rdi,rdi
  436463:	je     43651b <strcmp@plt+0x32d83>
  436469:	push   rbp
  43646a:	push   r15
  43646c:	push   r14
  43646e:	push   r12
  436470:	push   rbx
  436471:	mov    r14,rdi
  436474:	mov    r12,QWORD PTR [rdi]
  436477:	cmp    DWORD PTR [r12],0x0
  43647c:	je     4364e0 <strcmp@plt+0x32d48>
  43647e:	xor    ebp,ebp
  436480:	mov    r15d,0x3
  436486:	xor    ebx,ebx
  436488:	jmp    43649e <strcmp@plt+0x32d06>
  43648a:	nop    WORD PTR [rax+rax*1+0x0]
  436490:	inc    ebx
  436492:	mov    r12,QWORD PTR [r14]
  436495:	add    ebp,0x2
  436498:	cmp    ebx,DWORD PTR [r12]
  43649c:	je     4364e0 <strcmp@plt+0x32d48>
  43649e:	mov    rax,QWORD PTR [r12+0x10]
  4364a3:	mov    ecx,ebx
  4364a5:	shr    ecx,0x4
  4364a8:	mov    edx,ebp
  4364aa:	and    dl,0x1e
  4364ad:	shlx   edx,r15d,edx
  4364b2:	test   DWORD PTR [rax+rcx*4],edx
  4364b5:	jne    436490 <strcmp@plt+0x32cf8>
  4364b7:	mov    rax,QWORD PTR [r12+0x18]
  4364bc:	mov    r12d,ebx
  4364bf:	mov    rdi,QWORD PTR [rax+r12*8]
  4364c3:	call   403790 <free@plt>
  4364c8:	mov    rax,QWORD PTR [r14+0x8]
  4364cc:	test   rax,rax
  4364cf:	je     436490 <strcmp@plt+0x32cf8>
  4364d1:	mov    rcx,QWORD PTR [r14]
  4364d4:	mov    rcx,QWORD PTR [rcx+0x20]
  4364d8:	mov    rdi,QWORD PTR [rcx+r12*8]
  4364dc:	call   rax
  4364de:	jmp    436490 <strcmp@plt+0x32cf8>
  4364e0:	test   r12,r12
  4364e3:	je     43650b <strcmp@plt+0x32d73>
  4364e5:	mov    rdi,QWORD PTR [r12+0x18]
  4364ea:	call   403790 <free@plt>
  4364ef:	mov    rdi,QWORD PTR [r12+0x10]
  4364f4:	call   403790 <free@plt>
  4364f9:	mov    rdi,QWORD PTR [r12+0x20]
  4364fe:	call   403790 <free@plt>
  436503:	mov    rdi,r12
  436506:	call   403790 <free@plt>
  43650b:	mov    rdi,r14
  43650e:	pop    rbx
  43650f:	pop    r12
  436511:	pop    r14
  436513:	pop    r15
  436515:	pop    rbp
  436516:	jmp    403790 <free@plt>
  43651b:	ret    
  43651c:	nop    DWORD PTR [rax+0x0]
  436520:	push   rbp
  436521:	push   r15
  436523:	push   r14
  436525:	push   r12
  436527:	push   rbx
  436528:	mov    r14,rdi
  43652b:	call   42b980 <strcmp@plt+0x281e8>
  436530:	mov    r15,rax
  436533:	mov    rax,QWORD PTR [r14]
  436536:	cmp    DWORD PTR [rax],0x0
  436539:	je     436589 <strcmp@plt+0x32df1>
  43653b:	xor    ebp,ebp
  43653d:	mov    r12d,0x3
  436543:	xor    ebx,ebx
  436545:	jmp    436559 <strcmp@plt+0x32dc1>
  436547:	nop    WORD PTR [rax+rax*1+0x0]
  436550:	inc    ebx
  436552:	add    ebp,0x2
  436555:	cmp    ebx,DWORD PTR [rax]
  436557:	je     436589 <strcmp@plt+0x32df1>
  436559:	mov    rcx,QWORD PTR [rax+0x10]
  43655d:	mov    edx,ebx
  43655f:	shr    edx,0x4
  436562:	mov    esi,ebp
  436564:	and    sil,0x1e
  436568:	shlx   esi,r12d,esi
  43656d:	test   DWORD PTR [rcx+rdx*4],esi
  436570:	jne    436550 <strcmp@plt+0x32db8>
  436572:	mov    rax,QWORD PTR [rax+0x18]
  436576:	mov    ecx,ebx
  436578:	mov    rdi,QWORD PTR [rax+rcx*8]
  43657c:	mov    rsi,r15
  43657f:	call   42baa0 <strcmp@plt+0x28308>
  436584:	mov    rax,QWORD PTR [r14]
  436587:	jmp    436550 <strcmp@plt+0x32db8>
  436589:	mov    rax,r15
  43658c:	pop    rbx
  43658d:	pop    r12
  43658f:	pop    r14
  436591:	pop    r15
  436593:	pop    rbp
  436594:	ret    
  436595:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43659f:	nop
  4365a0:	push   rbp
  4365a1:	push   r15
  4365a3:	push   r14
  4365a5:	push   r12
  4365a7:	push   rbx
  4365a8:	mov    r14,rdi
  4365ab:	call   42b980 <strcmp@plt+0x281e8>
  4365b0:	mov    r15,rax
  4365b3:	mov    rax,QWORD PTR [r14]
  4365b6:	cmp    DWORD PTR [rax],0x0
  4365b9:	je     436609 <strcmp@plt+0x32e71>
  4365bb:	xor    ebp,ebp
  4365bd:	mov    r12d,0x3
  4365c3:	xor    ebx,ebx
  4365c5:	jmp    4365d9 <strcmp@plt+0x32e41>
  4365c7:	nop    WORD PTR [rax+rax*1+0x0]
  4365d0:	inc    ebx
  4365d2:	add    ebp,0x2
  4365d5:	cmp    ebx,DWORD PTR [rax]
  4365d7:	je     436609 <strcmp@plt+0x32e71>
  4365d9:	mov    rcx,QWORD PTR [rax+0x10]
  4365dd:	mov    edx,ebx
  4365df:	shr    edx,0x4
  4365e2:	mov    esi,ebp
  4365e4:	and    sil,0x1e
  4365e8:	shlx   esi,r12d,esi
  4365ed:	test   DWORD PTR [rcx+rdx*4],esi
  4365f0:	jne    4365d0 <strcmp@plt+0x32e38>
  4365f2:	mov    rax,QWORD PTR [rax+0x20]
  4365f6:	mov    ecx,ebx
  4365f8:	mov    rdi,QWORD PTR [rax+rcx*8]
  4365fc:	mov    rsi,r15
  4365ff:	call   42baa0 <strcmp@plt+0x28308>
  436604:	mov    rax,QWORD PTR [r14]
  436607:	jmp    4365d0 <strcmp@plt+0x32e38>
  436609:	mov    rax,r15
  43660c:	pop    rbx
  43660d:	pop    r12
  43660f:	pop    r14
  436611:	pop    r15
  436613:	pop    rbp
  436614:	ret    
  436615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43661f:	nop
  436620:	push   rbp
  436621:	push   r15
  436623:	push   r14
  436625:	push   r13
  436627:	push   r12
  436629:	push   rbx
  43662a:	sub    rsp,0x18
  43662e:	dec    esi
  436630:	mov    eax,esi
  436632:	shr    eax,1
  436634:	or     eax,esi
  436636:	mov    ecx,eax
  436638:	shr    ecx,0x2
  43663b:	or     ecx,eax
  43663d:	mov    eax,ecx
  43663f:	shr    eax,0x4
  436642:	or     eax,ecx
  436644:	mov    ecx,eax
  436646:	shr    ecx,0x8
  436649:	or     ecx,eax
  43664b:	mov    ebp,ecx
  43664d:	shr    ebp,0x10
  436650:	or     ebp,ecx
  436652:	inc    ebp
  436654:	cmp    ebp,0x4
  436657:	mov    eax,0x4
  43665c:	cmovbe ebp,eax
  43665f:	vcvtsi2sd xmm0,xmm0,rbp
  436664:	vmulsd xmm0,xmm0,QWORD PTR [rip+0x1132c]        # 447998 <strcmp@plt+0x44200>
  43666c:	vaddsd xmm0,xmm0,QWORD PTR [rip+0x1132c]        # 4479a0 <strcmp@plt+0x44208>
  436674:	vcvttsd2si rcx,xmm0
  436679:	cmp    DWORD PTR [rdi+0x4],ecx
  43667c:	jae    4368b8 <strcmp@plt+0x33120>
  436682:	mov    r14,rdi
  436685:	mov    QWORD PTR [rsp+0x10],rcx
  43668a:	mov    r15d,ebp
  43668d:	shr    r15d,0x2
  436691:	and    r15d,0xfffffffc
  436695:	cmp    ebp,0x10
  436698:	cmovb  r15d,eax
  43669c:	mov    rdi,r15
  43669f:	call   403520 <malloc@plt>
  4366a4:	mov    rbx,rax
  4366a7:	mov    rdi,rax
  4366aa:	mov    esi,0xaa
  4366af:	mov    rdx,r15
  4366b2:	call   403260 <memset@plt>
  4366b7:	mov    esi,DWORD PTR [r14]
  4366ba:	cmp    esi,ebp
  4366bc:	jae    4366e8 <strcmp@plt+0x32f50>
  4366be:	mov    rdi,QWORD PTR [r14+0x18]
  4366c2:	mov    r15d,ebp
  4366c5:	shl    r15,0x3
  4366c9:	mov    rsi,r15
  4366cc:	call   403660 <realloc@plt>
  4366d1:	mov    QWORD PTR [r14+0x18],rax
  4366d5:	mov    rdi,QWORD PTR [r14+0x20]
  4366d9:	mov    rsi,r15
  4366dc:	call   403660 <realloc@plt>
  4366e1:	mov    QWORD PTR [r14+0x20],rax
  4366e5:	mov    esi,DWORD PTR [r14]
  4366e8:	test   esi,esi
  4366ea:	je     436897 <strcmp@plt+0x330ff>
  4366f0:	mov    QWORD PTR [rsp+0x8],rbp
  4366f5:	lea    eax,[rbp-0x1]
  4366f8:	xor    r10d,r10d
  4366fb:	mov    edi,0x2
  436700:	jmp    43672e <strcmp@plt+0x32f96>
  436702:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43670c:	nop    DWORD PTR [rax+0x0]
  436710:	mov    rcx,QWORD PTR [r14+0x18]
  436714:	mov    edx,ebp
  436716:	mov    QWORD PTR [rcx+rdx*8],r9
  43671a:	mov    rcx,QWORD PTR [r14+0x20]
  43671e:	mov    QWORD PTR [rcx+rdx*8],r11
  436722:	inc    r10d
  436725:	cmp    r10d,esi
  436728:	je     436867 <strcmp@plt+0x330cf>
  43672e:	mov    r15,QWORD PTR [r14+0x10]
  436732:	mov    edx,r10d
  436735:	shr    edx,0x4
  436738:	mov    ebp,DWORD PTR [r15+rdx*4]
  43673c:	lea    r8d,[r10+r10*1]
  436740:	and    r8d,0x1e
  436744:	mov    ecx,0x3
  436749:	shlx   ecx,ecx,r8d
  43674e:	test   ebp,ecx
  436750:	jne    436722 <strcmp@plt+0x32f8a>
  436752:	lea    rdx,[r15+rdx*4]
  436756:	mov    ecx,r10d
  436759:	mov    rsi,QWORD PTR [r14+0x18]
  43675d:	mov    r11,QWORD PTR [r14+0x20]
  436761:	mov    r9,QWORD PTR [rsi+rcx*8]
  436765:	mov    r11,QWORD PTR [r11+rcx*8]
  436769:	mov    r8d,r8d
  43676c:	nop    DWORD PTR [rax+0x0]
  436770:	mov    ecx,0x1
  436775:	shlx   rcx,rcx,r8
  43677a:	or     ecx,ebp
  43677c:	mov    DWORD PTR [rdx],ecx
  43677e:	movsx  r8d,BYTE PTR [r9]
  436782:	test   r8d,r8d
  436785:	je     4367c0 <strcmp@plt+0x33028>
  436787:	mov    dl,BYTE PTR [r9+0x1]
  43678b:	test   dl,dl
  43678d:	je     4367c3 <strcmp@plt+0x3302b>
  43678f:	lea    rsi,[r9+0x2]
  436793:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43679d:	nop    DWORD PTR [rax]
  4367a0:	mov    ecx,r8d
  4367a3:	shl    ecx,0x5
  4367a6:	sub    ecx,r8d
  4367a9:	movsx  r8d,dl
  4367ad:	add    r8d,ecx
  4367b0:	movzx  edx,BYTE PTR [rsi]
  4367b3:	inc    rsi
  4367b6:	test   dl,dl
  4367b8:	jne    4367a0 <strcmp@plt+0x33008>
  4367ba:	jmp    4367c3 <strcmp@plt+0x3302b>
  4367bc:	nop    DWORD PTR [rax+0x0]
  4367c0:	xor    r8d,r8d
  4367c3:	mov    ecx,r8d
  4367c6:	shr    ecx,0x3
  4367c9:	lea    esi,[r8*8+0x0]
  4367d1:	xor    esi,ecx
  4367d3:	or     esi,0x1
  4367d6:	and    esi,eax
  4367d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4367e0:	mov    ebp,r8d
  4367e3:	and    ebp,eax
  4367e5:	mov    edx,ebp
  4367e7:	shr    edx,0x4
  4367ea:	mov    r12d,DWORD PTR [rbx+rdx*4]
  4367ee:	lea    r13d,[rbp+rbp*1+0x0]
  4367f3:	and    r13d,0x1e
  4367f7:	shlx   ecx,edi,r13d
  4367fc:	lea    r8d,[rsi+rbp*1]
  436800:	test   ecx,r12d
  436803:	je     4367e0 <strcmp@plt+0x33048>
  436805:	mov    ecx,edx
  436807:	shlx   edx,edi,r13d
  43680c:	andn   edx,edx,r12d
  436811:	mov    DWORD PTR [rbx+rcx*4],edx
  436814:	mov    esi,DWORD PTR [r14]
  436817:	cmp    ebp,esi
  436819:	jae    436710 <strcmp@plt+0x32f78>
  43681f:	mov    edx,0x3
  436824:	shlx   edx,edx,r13d
  436829:	test   DWORD PTR [r15+rcx*4],edx
  43682d:	jne    436710 <strcmp@plt+0x32f78>
  436833:	mov    r8d,r13d
  436836:	mov    rdx,QWORD PTR [r14+0x18]
  43683a:	mov    ebp,ebp
  43683c:	mov    r12,QWORD PTR [rdx+rbp*8]
  436840:	mov    QWORD PTR [rdx+rbp*8],r9
  436844:	mov    rdx,QWORD PTR [r14+0x20]
  436848:	mov    rsi,QWORD PTR [rdx+rbp*8]
  43684c:	mov    QWORD PTR [rdx+rbp*8],r11
  436850:	mov    r15,QWORD PTR [r14+0x10]
  436854:	lea    rdx,[r15+rcx*4]
  436858:	mov    ebp,DWORD PTR [r15+rcx*4]
  43685c:	mov    r11,rsi
  43685f:	mov    r9,r12
  436862:	jmp    436770 <strcmp@plt+0x32fd8>
  436867:	mov    rbp,QWORD PTR [rsp+0x8]
  43686c:	cmp    esi,ebp
  43686e:	jbe    436897 <strcmp@plt+0x330ff>
  436870:	mov    rdi,QWORD PTR [r14+0x18]
  436874:	mov    r15d,ebp
  436877:	shl    r15,0x3
  43687b:	mov    rsi,r15
  43687e:	call   403660 <realloc@plt>
  436883:	mov    QWORD PTR [r14+0x18],rax
  436887:	mov    rdi,QWORD PTR [r14+0x20]
  43688b:	mov    rsi,r15
  43688e:	call   403660 <realloc@plt>
  436893:	mov    QWORD PTR [r14+0x20],rax
  436897:	mov    rdi,QWORD PTR [r14+0x10]
  43689b:	call   403790 <free@plt>
  4368a0:	mov    QWORD PTR [r14+0x10],rbx
  4368a4:	mov    DWORD PTR [r14],ebp
  4368a7:	mov    eax,DWORD PTR [r14+0x4]
  4368ab:	mov    DWORD PTR [r14+0x8],eax
  4368af:	mov    rax,QWORD PTR [rsp+0x10]
  4368b4:	mov    DWORD PTR [r14+0xc],eax
  4368b8:	add    rsp,0x18
  4368bc:	pop    rbx
  4368bd:	pop    r12
  4368bf:	pop    r13
  4368c1:	pop    r14
  4368c3:	pop    r15
  4368c5:	pop    rbp
  4368c6:	ret    
  4368c7:	nop    WORD PTR [rax+rax*1+0x0]
  4368d0:	push   rbp
  4368d1:	mov    rbp,rsp
  4368d4:	push   r14
  4368d6:	push   rbx
  4368d7:	and    rsp,0xffffffffffffffe0
  4368db:	sub    rsp,0xc0
  4368e2:	lea    rax,[rip+0x2e4d7]        # 464dc0 <strcmp@plt+0x61628>
  4368e9:	cmp    DWORD PTR [rax],0x0
  4368ec:	jle    436901 <strcmp@plt+0x33169>
  4368ee:	lea    rsi,[rip+0x16b0b]        # 44d400 <strcmp@plt+0x49c68>
  4368f5:	mov    edi,0x5
  4368fa:	xor    eax,eax
  4368fc:	call   42e520 <strcmp@plt+0x2ad88>
  436901:	lea    rdi,[rip+0x391e0]        # 46fae8 <strcmp@plt+0x6c350>
  436908:	call   403540 <pipe@plt>
  43690d:	cmp    eax,0xffffffff
  436910:	je     436c16 <strcmp@plt+0x3347e>
  436916:	mov    edi,DWORD PTR [rip+0x391cc]        # 46fae8 <strcmp@plt+0x6c350>
  43691c:	lea    r14,[rip+0x391b5]        # 46fad8 <strcmp@plt+0x6c340>
  436923:	mov    DWORD PTR [r14],edi
  436926:	mov    esi,0x3
  43692b:	xor    edx,edx
  43692d:	xor    eax,eax
  43692f:	call   403290 <fcntl@plt>
  436934:	cmp    eax,0xffffffff
  436937:	je     436c1f <strcmp@plt+0x33487>
  43693d:	mov    edi,DWORD PTR [r14]
  436940:	or     eax,0x800
  436945:	mov    esi,0x4
  43694a:	mov    edx,eax
  43694c:	xor    eax,eax
  43694e:	call   403290 <fcntl@plt>
  436953:	cmp    eax,0xffffffff
  436956:	je     436c28 <strcmp@plt+0x33490>
  43695c:	vpxor  xmm0,xmm0,xmm0
  436960:	vmovdqu YMMWORD PTR [rsp+0x80],ymm0
  436969:	vmovdqu YMMWORD PTR [rsp+0x70],ymm0
  43696f:	vmovdqu YMMWORD PTR [rsp+0x50],ymm0
  436975:	vmovdqu YMMWORD PTR [rsp+0x30],ymm0
  43697b:	lea    rdi,[rsp+0x10]
  436980:	vmovdqu YMMWORD PTR [rsp+0x10],ymm0
  436986:	lea    rax,[rip+0x753]        # 4370e0 <strcmp@plt+0x33948>
  43698d:	mov    QWORD PTR [rsp+0x8],rax
  436992:	mov    DWORD PTR [rsp+0x90],0x0
  43699d:	vzeroupper 
  4369a0:	call   4034e0 <sigemptyset@plt>
  4369a5:	lea    rsi,[rsp+0x8]
  4369aa:	mov    edi,0xc
  4369af:	xor    edx,edx
  4369b1:	call   4034f0 <sigaction@plt>
  4369b6:	cmp    eax,0xffffffff
  4369b9:	jne    4369e4 <strcmp@plt+0x3324c>
  4369bb:	call   403040 <__errno_location@plt>
  4369c0:	mov    edi,DWORD PTR [rax]
  4369c2:	call   403170 <strerror@plt>
  4369c7:	lea    rsi,[rip+0x16bc1]        # 44d58f <strcmp@plt+0x49df7>
  4369ce:	mov    edi,0x2
  4369d3:	mov    rdx,rax
  4369d6:	xor    eax,eax
  4369d8:	call   42e520 <strcmp@plt+0x2ad88>
  4369dd:	xor    eax,eax
  4369df:	call   43aeb0 <strcmp@plt+0x37718>
  4369e4:	mov    QWORD PTR [rsp+0x10],0xc
  4369ed:	lea    rdx,[rip+0x390ec]        # 46fae0 <strcmp@plt+0x6c348>
  4369f4:	mov    QWORD PTR [rsp+0x8],rdx
  4369f9:	lea    rsi,[rsp+0x8]
  4369fe:	mov    edi,0x1
  436a03:	call   403690 <timer_create@plt>
  436a08:	cmp    eax,0xffffffff
  436a0b:	je     436c6d <strcmp@plt+0x334d5>
  436a11:	vmovdqa ymm0,YMMWORD PTR [rip+0x169c7]        # 44d3e0 <strcmp@plt+0x49c48>
  436a19:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  436a22:	mov    rdi,QWORD PTR [rip+0x390b7]        # 46fae0 <strcmp@plt+0x6c348>
  436a29:	lea    rdx,[rsp+0xa0]
  436a31:	xor    esi,esi
  436a33:	xor    ecx,ecx
  436a35:	vzeroupper 
  436a38:	call   403340 <timer_settime@plt>
  436a3d:	cmp    eax,0xffffffff
  436a40:	je     436c91 <strcmp@plt+0x334f9>
  436a46:	lea    rbx,[rip+0x3906b]        # 46fab8 <strcmp@plt+0x6c320>
  436a4d:	mov    DWORD PTR [rbx],0x1000
  436a53:	mov    edi,0x10000
  436a58:	call   431d90 <strcmp@plt+0x2e5f8>
  436a5d:	mov    QWORD PTR [rbx+0x8],rax
  436a61:	mov    DWORD PTR [rbx+0x4],0x0
  436a68:	mov    QWORD PTR [rbx+0x18],0x0
  436a70:	xor    ecx,ecx
  436a72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436a7c:	nop    DWORD PTR [rax+0x0]
  436a80:	lea    rdx,[rax+rcx*1]
  436a84:	add    rdx,0x30
  436a88:	vmovq  xmm0,rdx
  436a8d:	lea    rdx,[rax+rcx*1+0x20]
  436a92:	vmovq  xmm1,rdx
  436a97:	lea    rdx,[rax+rcx*1+0x10]
  436a9c:	vmovq  xmm2,rdx
  436aa1:	lea    rdx,[rax+rcx*1]
  436aa5:	vmovq  xmm3,rdx
  436aaa:	lea    rdx,[rax+rcx*1+0x70]
  436aaf:	vpunpcklqdq xmm0,xmm1,xmm0
  436ab3:	vmovq  xmm1,rdx
  436ab8:	lea    rdx,[rax+rcx*1+0x60]
  436abd:	vpunpcklqdq xmm2,xmm3,xmm2
  436ac1:	vmovq  xmm3,rdx
  436ac6:	lea    rdx,[rax+rcx*1+0x50]
  436acb:	vinserti128 ymm0,ymm2,xmm0,0x1
  436ad1:	vpermq ymm2,ymm2,0x50
  436ad7:	vmovdqu YMMWORD PTR [rax+rcx*1],ymm2
  436adc:	vmovq  xmm2,rdx
  436ae1:	lea    rdx,[rax+rcx*1+0x40]
  436ae6:	vpermq ymm0,ymm0,0xfa
  436aec:	vmovdqu YMMWORD PTR [rax+rcx*1+0x20],ymm0
  436af2:	vmovq  xmm0,rdx
  436af7:	lea    rdx,[rax+rcx*1+0xb0]
  436aff:	vpunpcklqdq xmm1,xmm3,xmm1
  436b03:	vmovq  xmm3,rdx
  436b08:	lea    rdx,[rax+rcx*1+0xa0]
  436b10:	vpunpcklqdq xmm0,xmm0,xmm2
  436b14:	vmovq  xmm2,rdx
  436b19:	lea    rdx,[rax+rcx*1+0x90]
  436b21:	vinserti128 ymm1,ymm0,xmm1,0x1
  436b27:	vpermq ymm1,ymm1,0xfa
  436b2d:	vpermq ymm0,ymm0,0x50
  436b33:	vmovdqu YMMWORD PTR [rax+rcx*1+0x40],ymm0
  436b39:	vmovdqu YMMWORD PTR [rax+rcx*1+0x60],ymm1
  436b3f:	vmovq  xmm0,rdx
  436b44:	lea    rdx,[rax+rcx*1+0x80]
  436b4c:	vmovq  xmm1,rdx
  436b51:	lea    rdx,[rax+rcx*1+0xf0]
  436b59:	vpunpcklqdq xmm2,xmm2,xmm3
  436b5d:	vmovq  xmm3,rdx
  436b62:	lea    rdx,[rax+rcx*1+0xe0]
  436b6a:	vpunpcklqdq xmm0,xmm1,xmm0
  436b6e:	vpermq ymm1,ymm0,0x50
  436b74:	vmovdqu YMMWORD PTR [rax+rcx*1+0x80],ymm1
  436b7d:	vmovq  xmm1,rdx
  436b82:	lea    rdx,[rax+rcx*1+0xd0]
  436b8a:	vinserti128 ymm0,ymm0,xmm2,0x1
  436b90:	vmovq  xmm2,rdx
  436b95:	lea    rdx,[rax+rcx*1+0xc0]
  436b9d:	vpermq ymm0,ymm0,0xfa
  436ba3:	vmovdqu YMMWORD PTR [rax+rcx*1+0xa0],ymm0
  436bac:	vmovq  xmm0,rdx
  436bb1:	vpunpcklqdq xmm1,xmm1,xmm3
  436bb5:	vpunpcklqdq xmm0,xmm0,xmm2
  436bb9:	vinserti128 ymm1,ymm0,xmm1,0x1
  436bbf:	vpermq ymm1,ymm1,0xfa
  436bc5:	vpermq ymm0,ymm0,0x50
  436bcb:	vmovdqu YMMWORD PTR [rax+rcx*1+0xc0],ymm0
  436bd4:	vmovdqu YMMWORD PTR [rax+rcx*1+0xe0],ymm1
  436bdd:	add    rcx,0x100
  436be4:	cmp    rcx,0x10000
  436beb:	jne    436a80 <strcmp@plt+0x332e8>
  436bf1:	lea    rax,[rip+0x39930]        # 470528 <strcmp@plt+0x6cd90>
  436bf8:	mov    rdi,QWORD PTR [rax]
  436bfb:	mov    ecx,DWORD PTR [r14]
  436bfe:	lea    rsi,[rip+0xcb]        # 436cd0 <strcmp@plt+0x33538>
  436c05:	xor    edx,edx
  436c07:	vzeroupper 
  436c0a:	call   4349c0 <strcmp@plt+0x31228>
  436c0f:	mov    ebx,0x1
  436c14:	jmp    436c62 <strcmp@plt+0x334ca>
  436c16:	lea    r14,[rip+0x168ca]        # 44d4e7 <strcmp@plt+0x49d4f>
  436c1d:	jmp    436c2f <strcmp@plt+0x33497>
  436c1f:	lea    r14,[rip+0x168f8]        # 44d51e <strcmp@plt+0x49d86>
  436c26:	jmp    436c2f <strcmp@plt+0x33497>
  436c28:	lea    r14,[rip+0x16924]        # 44d553 <strcmp@plt+0x49dbb>
  436c2f:	call   403040 <__errno_location@plt>
  436c34:	mov    edi,DWORD PTR [rax]
  436c36:	call   403170 <strerror@plt>
  436c3b:	xor    ebx,ebx
  436c3d:	mov    edi,0x2
  436c42:	mov    rsi,r14
  436c45:	mov    rdx,rax
  436c48:	xor    eax,eax
  436c4a:	call   42e520 <strcmp@plt+0x2ad88>
  436c4f:	lea    rsi,[rip+0x167c3]        # 44d419 <strcmp@plt+0x49c81>
  436c56:	mov    edi,0x1
  436c5b:	xor    eax,eax
  436c5d:	call   42e520 <strcmp@plt+0x2ad88>
  436c62:	mov    eax,ebx
  436c64:	lea    rsp,[rbp-0x10]
  436c68:	pop    rbx
  436c69:	pop    r14
  436c6b:	pop    rbp
  436c6c:	ret    
  436c6d:	call   403040 <__errno_location@plt>
  436c72:	mov    edi,DWORD PTR [rax]
  436c74:	call   403170 <strerror@plt>
  436c79:	lea    rsi,[rip+0x167fb]        # 44d47b <strcmp@plt+0x49ce3>
  436c80:	mov    edi,0x4
  436c85:	mov    rdx,rax
  436c88:	xor    eax,eax
  436c8a:	call   42e520 <strcmp@plt+0x2ad88>
  436c8f:	jmp    436cbd <strcmp@plt+0x33525>
  436c91:	mov    rbx,QWORD PTR [rip+0x38e48]        # 46fae0 <strcmp@plt+0x6c348>
  436c98:	call   403040 <__errno_location@plt>
  436c9d:	mov    edi,DWORD PTR [rax]
  436c9f:	call   403170 <strerror@plt>
  436ca4:	lea    rsi,[rip+0x167e3]        # 44d48e <strcmp@plt+0x49cf6>
  436cab:	mov    edi,0x4
  436cb0:	mov    rdx,rbx
  436cb3:	mov    rcx,rax
  436cb6:	xor    eax,eax
  436cb8:	call   42e520 <strcmp@plt+0x2ad88>
  436cbd:	lea    rsi,[rip+0x16785]        # 44d449 <strcmp@plt+0x49cb1>
  436cc4:	xor    ebx,ebx
  436cc6:	mov    edi,0x4
  436ccb:	jmp    436c5b <strcmp@plt+0x334c3>
  436ccd:	nop    DWORD PTR [rax]
  436cd0:	push   r15
  436cd2:	push   r14
  436cd4:	push   r12
  436cd6:	push   rbx
  436cd7:	sub    rsp,0x18
  436cdb:	mov    edi,DWORD PTR [rdi+0x18]
  436cde:	lea    rsi,[rsp+0x4]
  436ce3:	mov    edx,0x4
  436ce8:	call   4035b0 <read@plt>
  436ced:	cmp    eax,0x4
  436cf0:	jne    436d91 <strcmp@plt+0x335f9>
  436cf6:	xor    r14d,r14d
  436cf9:	cmp    DWORD PTR [rsp+0x4],0xc
  436cfe:	jne    436daa <strcmp@plt+0x33612>
  436d04:	xor    r14d,r14d
  436d07:	lea    rdi,[rsp+0x8]
  436d0c:	xor    esi,esi
  436d0e:	call   403650 <gettimeofday@plt>
  436d13:	lea    r15,[rip+0x38d9e]        # 46fab8 <strcmp@plt+0x6c320>
  436d1a:	mov    eax,DWORD PTR [r15+0x4]
  436d1e:	inc    eax
  436d20:	cdq    
  436d21:	idiv   DWORD PTR [r15]
  436d24:	mov    DWORD PTR [r15+0x4],edx
  436d28:	mov    rax,QWORD PTR [r15+0x8]
  436d2c:	movsxd rcx,edx
  436d2f:	shl    rcx,0x4
  436d33:	lea    r12,[rax+rcx*1]
  436d37:	mov    rdi,QWORD PTR [rax+rcx*1+0x8]
  436d3c:	cmp    rdi,r12
  436d3f:	jne    436d5e <strcmp@plt+0x335c6>
  436d41:	jmp    436daa <strcmp@plt+0x33612>
  436d43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436d4d:	nop    DWORD PTR [rax]
  436d50:	dec    eax
  436d52:	mov    DWORD PTR [rdi+0x14],eax
  436d55:	mov    rdi,QWORD PTR [rbx+0x8]
  436d59:	cmp    rdi,r12
  436d5c:	je     436daa <strcmp@plt+0x33612>
  436d5e:	mov    rbx,QWORD PTR [rdi]
  436d61:	mov    eax,DWORD PTR [rdi+0x14]
  436d64:	test   eax,eax
  436d66:	jg     436d50 <strcmp@plt+0x335b8>
  436d68:	mov    rax,QWORD PTR [rdi+0x8]
  436d6c:	mov    QWORD PTR [rbx+0x8],rax
  436d70:	mov    QWORD PTR [rax],rbx
  436d73:	vxorps xmm0,xmm0,xmm0
  436d77:	vmovups XMMWORD PTR [rdi],xmm0
  436d7b:	dec    DWORD PTR [r15+0x18]
  436d7f:	inc    DWORD PTR [r15+0x1c]
  436d83:	call   QWORD PTR [rdi+0x18]
  436d86:	mov    rdi,QWORD PTR [rbx+0x8]
  436d8a:	cmp    rdi,r12
  436d8d:	jne    436d5e <strcmp@plt+0x335c6>
  436d8f:	jmp    436daa <strcmp@plt+0x33612>
  436d91:	lea    rsi,[rip+0x16727]        # 44d4bf <strcmp@plt+0x49d27>
  436d98:	mov    edi,0x3
  436d9d:	xor    eax,eax
  436d9f:	call   42e520 <strcmp@plt+0x2ad88>
  436da4:	mov    r14d,0xffffffff
  436daa:	mov    eax,r14d
  436dad:	add    rsp,0x18
  436db1:	pop    rbx
  436db2:	pop    r12
  436db4:	pop    r14
  436db6:	pop    r15
  436db8:	ret    
  436db9:	nop    DWORD PTR [rax+0x0]
  436dc0:	push   rbp
  436dc1:	mov    rbp,rsp
  436dc4:	push   r15
  436dc6:	push   r14
  436dc8:	push   r13
  436dca:	push   r12
  436dcc:	push   rbx
  436dcd:	and    rsp,0xffffffffffffffe0
  436dd1:	sub    rsp,0xc0
  436dd8:	lea    r14,[rip+0x38cd9]        # 46fab8 <strcmp@plt+0x6c320>
  436ddf:	cmp    QWORD PTR [r14+0x8],0x0
  436de4:	je     436f27 <strcmp@plt+0x3378f>
  436dea:	lea    rax,[rip+0x2dfcf]        # 464dc0 <strcmp@plt+0x61628>
  436df1:	cmp    DWORD PTR [rax],0x0
  436df4:	jle    436e09 <strcmp@plt+0x33671>
  436df6:	lea    rsi,[rip+0x16665]        # 44d462 <strcmp@plt+0x49cca>
  436dfd:	mov    edi,0x5
  436e02:	xor    eax,eax
  436e04:	call   42e520 <strcmp@plt+0x2ad88>
  436e09:	lea    rdi,[rsp+0x8]
  436e0e:	vxorps xmm0,xmm0,xmm0
  436e12:	vmovups YMMWORD PTR [rsp+0x78],ymm0
  436e18:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  436e1e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  436e24:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  436e2a:	vmovaps YMMWORD PTR [rsp],ymm0
  436e2f:	vzeroupper 
  436e32:	call   4034e0 <sigemptyset@plt>
  436e37:	xor    r15d,r15d
  436e3a:	mov    rsi,rsp
  436e3d:	mov    edi,0xc
  436e42:	xor    edx,edx
  436e44:	call   4034f0 <sigaction@plt>
  436e49:	cmp    eax,0xffffffff
  436e4c:	jne    436e70 <strcmp@plt+0x336d8>
  436e4e:	call   403040 <__errno_location@plt>
  436e53:	mov    edi,DWORD PTR [rax]
  436e55:	call   403170 <strerror@plt>
  436e5a:	lea    rsi,[rip+0x16773]        # 44d5d4 <strcmp@plt+0x49e3c>
  436e61:	mov    edi,0x2
  436e66:	mov    rdx,rax
  436e69:	xor    eax,eax
  436e6b:	call   42e520 <strcmp@plt+0x2ad88>
  436e70:	mov    edi,DWORD PTR [rip+0x38c72]        # 46fae8 <strcmp@plt+0x6c350>
  436e76:	call   403770 <close@plt>
  436e7b:	mov    edi,DWORD PTR [rip+0x38c6b]        # 46faec <strcmp@plt+0x6c354>
  436e81:	call   403770 <close@plt>
  436e86:	mov    r12,QWORD PTR [r14+0x8]
  436e8a:	jmp    436ea0 <strcmp@plt+0x33708>
  436e8c:	nop    DWORD PTR [rax+0x0]
  436e90:	add    r12,0x10
  436e94:	inc    r15d
  436e97:	cmp    r15d,0x1000
  436e9e:	je     436f12 <strcmp@plt+0x3377a>
  436ea0:	mov    rbx,QWORD PTR [r12+0x8]
  436ea5:	cmp    rbx,r12
  436ea8:	jne    436ec0 <strcmp@plt+0x33728>
  436eaa:	jmp    436e90 <strcmp@plt+0x336f8>
  436eac:	nop    DWORD PTR [rax+0x0]
  436eb0:	mov    rdi,rbx
  436eb3:	call   403790 <free@plt>
  436eb8:	mov    rbx,r13
  436ebb:	cmp    r13,r12
  436ebe:	je     436e90 <strcmp@plt+0x336f8>
  436ec0:	mov    r13,QWORD PTR [rbx+0x8]
  436ec4:	test   rbx,rbx
  436ec7:	je     436eb8 <strcmp@plt+0x33720>
  436ec9:	mov    rax,QWORD PTR [rbx]
  436ecc:	test   r13,r13
  436ecf:	je     436ed5 <strcmp@plt+0x3373d>
  436ed1:	mov    QWORD PTR [r13+0x0],rax
  436ed5:	test   rax,rax
  436ed8:	je     436ef0 <strcmp@plt+0x33758>
  436eda:	mov    QWORD PTR [rax+0x8],r13
  436ede:	vxorps xmm0,xmm0,xmm0
  436ee2:	vmovups XMMWORD PTR [rbx],xmm0
  436ee6:	jmp    436efd <strcmp@plt+0x33765>
  436ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  436ef0:	vxorps xmm0,xmm0,xmm0
  436ef4:	vmovups XMMWORD PTR [rbx],xmm0
  436ef8:	test   r13,r13
  436efb:	je     436f01 <strcmp@plt+0x33769>
  436efd:	dec    DWORD PTR [r14+0x18]
  436f01:	mov    rax,QWORD PTR [rbx+0x20]
  436f05:	test   rax,rax
  436f08:	je     436eb0 <strcmp@plt+0x33718>
  436f0a:	mov    rdi,QWORD PTR [rbx+0x28]
  436f0e:	call   rax
  436f10:	jmp    436eb0 <strcmp@plt+0x33718>
  436f12:	mov    rdi,QWORD PTR [r14+0x8]
  436f16:	call   403790 <free@plt>
  436f1b:	mov    rdi,QWORD PTR [rip+0x38bbe]        # 46fae0 <strcmp@plt+0x6c348>
  436f22:	call   4034c0 <timer_delete@plt>
  436f27:	lea    rsp,[rbp-0x28]
  436f2b:	pop    rbx
  436f2c:	pop    r12
  436f2e:	pop    r13
  436f30:	pop    r14
  436f32:	pop    r15
  436f34:	pop    rbp
  436f35:	ret    
  436f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436f40:	test   rdi,rdi
  436f43:	je     436f6b <strcmp@plt+0x337d3>
  436f45:	push   rbx
  436f46:	mov    rbx,rdi
  436f49:	mov    rcx,QWORD PTR [rdi]
  436f4c:	mov    rax,QWORD PTR [rdi+0x8]
  436f50:	test   rax,rax
  436f53:	je     436f58 <strcmp@plt+0x337c0>
  436f55:	mov    QWORD PTR [rax],rcx
  436f58:	test   rcx,rcx
  436f5b:	je     436f6c <strcmp@plt+0x337d4>
  436f5d:	mov    QWORD PTR [rcx+0x8],rax
  436f61:	vxorps xmm0,xmm0,xmm0
  436f65:	vmovups XMMWORD PTR [rbx],xmm0
  436f69:	jmp    436f79 <strcmp@plt+0x337e1>
  436f6b:	ret    
  436f6c:	vxorps xmm0,xmm0,xmm0
  436f70:	vmovups XMMWORD PTR [rbx],xmm0
  436f74:	test   rax,rax
  436f77:	je     436f83 <strcmp@plt+0x337eb>
  436f79:	lea    rax,[rip+0x38b38]        # 46fab8 <strcmp@plt+0x6c320>
  436f80:	dec    DWORD PTR [rax+0x18]
  436f83:	mov    rax,QWORD PTR [rbx+0x20]
  436f87:	test   rax,rax
  436f8a:	je     436f92 <strcmp@plt+0x337fa>
  436f8c:	mov    rdi,QWORD PTR [rbx+0x28]
  436f90:	call   rax
  436f92:	mov    rdi,rbx
  436f95:	pop    rbx
  436f96:	jmp    403790 <free@plt>
  436f9b:	nop    DWORD PTR [rax+rax*1+0x0]
  436fa0:	push   rbx
  436fa1:	mov    ebx,edi
  436fa3:	mov    edi,0x48
  436fa8:	call   431d60 <strcmp@plt+0x2e5c8>
  436fad:	mov    DWORD PTR [rax+0x40],ebx
  436fb0:	vxorps xmm0,xmm0,xmm0
  436fb4:	vmovups XMMWORD PTR [rax],xmm0
  436fb8:	pop    rbx
  436fb9:	ret    
  436fba:	nop    WORD PTR [rax+rax*1+0x0]
  436fc0:	mov    QWORD PTR [rdi+0x18],rdx
  436fc4:	mov    QWORD PTR [rdi+0x20],r8
  436fc8:	mov    QWORD PTR [rdi+0x28],rcx
  436fcc:	mov    QWORD PTR [rdi+0x30],rsi
  436fd0:	mov    QWORD PTR [rdi+0x38],r9
  436fd4:	ret    
  436fd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436fdf:	nop
  436fe0:	mov    rax,QWORD PTR [rdi+0x30]
  436fe4:	ret    
  436fe5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436fef:	nop
  436ff0:	mov    rax,QWORD PTR [rdi+0x28]
  436ff4:	ret    
  436ff5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  436fff:	nop
  437000:	mov    eax,DWORD PTR [rdi+0x40]
  437003:	ret    
  437004:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43700e:	xchg   ax,ax
  437010:	mov    rax,QWORD PTR [rdi+0x38]
  437014:	ret    
  437015:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43701f:	nop
  437020:	mov    eax,esi
  437022:	mov    rcx,QWORD PTR [rdi+0x8]
  437026:	test   rcx,rcx
  437029:	je     437046 <strcmp@plt+0x338ae>
  43702b:	mov    rdx,QWORD PTR [rdi]
  43702e:	mov    QWORD PTR [rcx],rdx
  437031:	mov    QWORD PTR [rdx+0x8],rcx
  437035:	lea    rdx,[rip+0x38a7c]        # 46fab8 <strcmp@plt+0x6c320>
  43703c:	mov    ecx,DWORD PTR [rdx+0x18]
  43703f:	dec    ecx
  437041:	mov    DWORD PTR [rdx+0x18],ecx
  437044:	jmp    437050 <strcmp@plt+0x338b8>
  437046:	lea    rcx,[rip+0x38a6b]        # 46fab8 <strcmp@plt+0x6c320>
  43704d:	mov    ecx,DWORD PTR [rcx+0x18]
  437050:	mov    DWORD PTR [rdi+0x10],eax
  437053:	lea    r8,[rip+0x38a5e]        # 46fab8 <strcmp@plt+0x6c320>
  43705a:	mov    esi,DWORD PTR [r8]
  43705d:	xor    edx,edx
  43705f:	div    esi
  437061:	mov    DWORD PTR [rdi+0x14],eax
  437064:	add    edx,DWORD PTR [r8+0x4]
  437068:	mov    eax,edx
  43706a:	xor    edx,edx
  43706c:	div    esi
  43706e:	mov    rax,QWORD PTR [r8+0x8]
  437072:	shl    rdx,0x4
  437076:	lea    r9,[rax+rdx*1]
  43707a:	mov    rsi,QWORD PTR [rax+rdx*1]
  43707e:	mov    QWORD PTR [rdi+0x8],r9
  437082:	mov    QWORD PTR [rdi],rsi
  437085:	mov    QWORD PTR [rsi+0x8],rdi
  437089:	mov    QWORD PTR [rax+rdx*1],rdi
  43708d:	inc    ecx
  43708f:	mov    DWORD PTR [r8+0x18],ecx
  437093:	ret    
  437094:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43709e:	xchg   ax,ax
  4370a0:	push   rbx
  4370a1:	sub    rsp,0x10
  4370a5:	movsxd rax,edi
  4370a8:	mov    QWORD PTR [rsp],rax
  4370ac:	mov    QWORD PTR [rsp+0x8],0x0
  4370b5:	mov    rbx,rsp
  4370b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4370c0:	mov    rdi,rbx
  4370c3:	mov    rsi,rbx
  4370c6:	call   403140 <nanosleep@plt>
  4370cb:	cmp    eax,0xffffffff
  4370ce:	jne    4370da <strcmp@plt+0x33942>
  4370d0:	call   403040 <__errno_location@plt>
  4370d5:	cmp    DWORD PTR [rax],0x4
  4370d8:	je     4370c0 <strcmp@plt+0x33928>
  4370da:	add    rsp,0x10
  4370de:	pop    rbx
  4370df:	ret    
  4370e0:	push   rbx
  4370e1:	sub    rsp,0x10
  4370e5:	mov    ebx,edi
  4370e7:	mov    DWORD PTR [rsp+0xc],edi
  4370eb:	mov    edi,DWORD PTR [rip+0x389fb]        # 46faec <strcmp@plt+0x6c354>
  4370f1:	lea    rsi,[rsp+0xc]
  4370f6:	mov    edx,0x4
  4370fb:	call   403180 <write@plt>
  437100:	cmp    rax,0x4
  437104:	jne    43710c <strcmp@plt+0x33974>
  437106:	add    rsp,0x10
  43710a:	pop    rbx
  43710b:	ret    
  43710c:	call   403040 <__errno_location@plt>
  437111:	mov    edi,DWORD PTR [rax]
  437113:	call   403170 <strerror@plt>
  437118:	lea    rsi,[rip+0x164a1]        # 44d5c0 <strcmp@plt+0x49e28>
  43711f:	mov    edi,0x3
  437124:	mov    edx,ebx
  437126:	mov    rcx,rax
  437129:	xor    eax,eax
  43712b:	add    rsp,0x10
  43712f:	pop    rbx
  437130:	jmp    42e520 <strcmp@plt+0x2ad88>
  437135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43713f:	nop
  437140:	push   r15
  437142:	push   r14
  437144:	push   r13
  437146:	push   r12
  437148:	push   rbx
  437149:	mov    r14,r8
  43714c:	mov    r15,rcx
  43714f:	mov    r12,rdx
  437152:	mov    r13,rsi
  437155:	call   436fa0 <strcmp@plt+0x33808>
  43715a:	mov    rbx,rax
  43715d:	mov    rdi,rax
  437160:	mov    rsi,r13
  437163:	mov    rdx,r12
  437166:	mov    rcx,r15
  437169:	mov    r8,r14
  43716c:	xor    r9d,r9d
  43716f:	call   436fc0 <strcmp@plt+0x33828>
  437174:	mov    rax,rbx
  437177:	pop    rbx
  437178:	pop    r12
  43717a:	pop    r13
  43717c:	pop    r14
  43717e:	pop    r15
  437180:	ret    
  437181:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43718b:	nop    DWORD PTR [rax+rax*1+0x0]
  437190:	push   r15
  437192:	push   r14
  437194:	push   r13
  437196:	push   r12
  437198:	push   rbx
  437199:	mov    r14,r8
  43719c:	mov    r15,rcx
  43719f:	mov    r12,rdx
  4371a2:	mov    r13,rsi
  4371a5:	call   436fa0 <strcmp@plt+0x33808>
  4371aa:	mov    rbx,rax
  4371ad:	mov    rdi,rax
  4371b0:	call   4325b0 <strcmp@plt+0x2ee18>
  4371b5:	mov    rdi,rbx
  4371b8:	mov    rsi,r13
  4371bb:	mov    rdx,r12
  4371be:	mov    rcx,r15
  4371c1:	mov    r8,r14
  4371c4:	mov    r9,rax
  4371c7:	call   436fc0 <strcmp@plt+0x33828>
  4371cc:	mov    rax,rbx
  4371cf:	pop    rbx
  4371d0:	pop    r12
  4371d2:	pop    r13
  4371d4:	pop    r14
  4371d6:	pop    r15
  4371d8:	ret    
  4371d9:	nop    DWORD PTR [rax+0x0]
  4371e0:	push   r15
  4371e2:	push   r14
  4371e4:	push   rbx
  4371e5:	mov    r14,rcx
  4371e8:	mov    r15,rsi
  4371eb:	mov    rsi,rdi
  4371ee:	mov    rdi,rdx
  4371f1:	call   42c540 <strcmp@plt+0x28da8>
  4371f6:	test   rax,rax
  4371f9:	je     437206 <strcmp@plt+0x33a6e>
  4371fb:	mov    rdi,r15
  4371fe:	mov    rsi,rax
  437201:	call   42be60 <strcmp@plt+0x286c8>
  437206:	mov    rdi,r15
  437209:	call   437010 <strcmp@plt+0x33878>
  43720e:	test   rax,rax
  437211:	je     437229 <strcmp@plt+0x33a91>
  437213:	mov    rbx,rax
  437216:	mov    rdi,r14
  437219:	mov    rsi,rax
  43721c:	call   4323d0 <strcmp@plt+0x2ec38>
  437221:	mov    rdi,rbx
  437224:	call   4322e0 <strcmp@plt+0x2eb48>
  437229:	mov    rdi,r15
  43722c:	call   436f40 <strcmp@plt+0x337a8>
  437231:	mov    eax,0x1
  437236:	pop    rbx
  437237:	pop    r14
  437239:	pop    r15
  43723b:	ret    
  43723c:	nop    DWORD PTR [rax+0x0]
  437240:	push   rbx
  437241:	mov    rbx,rdx
  437244:	call   42c540 <strcmp@plt+0x28da8>
  437249:	test   rax,rax
  43724c:	je     437260 <strcmp@plt+0x33ac8>
  43724e:	mov    rdi,rbx
  437251:	mov    rsi,rax
  437254:	call   42be60 <strcmp@plt+0x286c8>
  437259:	mov    eax,0x1
  43725e:	pop    rbx
  43725f:	ret    
  437260:	mov    eax,0xfffffffa
  437265:	pop    rbx
  437266:	ret    
  437267:	nop    WORD PTR [rax+rax*1+0x0]
  437270:	push   r15
  437272:	push   r14
  437274:	push   r13
  437276:	push   r12
  437278:	push   rbx
  437279:	mov    r14,rdx
  43727c:	mov    rax,rdi
  43727f:	mov    rdi,rsi
  437282:	mov    rsi,rax
  437285:	call   42c450 <strcmp@plt+0x28cb8>
  43728a:	test   rax,rax
  43728d:	je     4372e9 <strcmp@plt+0x33b51>
  43728f:	mov    r15,rax
  437292:	mov    rbx,QWORD PTR [rax+0x8]
  437296:	cmp    rbx,r15
  437299:	jne    4372b1 <strcmp@plt+0x33b19>
  43729b:	jmp    4372da <strcmp@plt+0x33b42>
  43729d:	nop    DWORD PTR [rax]
  4372a0:	mov    rdi,r12
  4372a3:	call   436f40 <strcmp@plt+0x337a8>
  4372a8:	mov    rbx,QWORD PTR [rbx+0x8]
  4372ac:	cmp    rbx,r15
  4372af:	je     4372da <strcmp@plt+0x33b42>
  4372b1:	mov    r12,QWORD PTR [rbx+0x10]
  4372b5:	mov    rdi,r12
  4372b8:	call   437010 <strcmp@plt+0x33878>
  4372bd:	test   rax,rax
  4372c0:	je     4372a0 <strcmp@plt+0x33b08>
  4372c2:	mov    r13,rax
  4372c5:	mov    rdi,r14
  4372c8:	mov    rsi,rax
  4372cb:	call   4323d0 <strcmp@plt+0x2ec38>
  4372d0:	mov    rdi,r13
  4372d3:	call   4322e0 <strcmp@plt+0x2eb48>
  4372d8:	jmp    4372a0 <strcmp@plt+0x33b08>
  4372da:	mov    rdi,r15
  4372dd:	call   42bff0 <strcmp@plt+0x28858>
  4372e2:	mov    eax,0x1
  4372e7:	jmp    4372eb <strcmp@plt+0x33b53>
  4372e9:	xor    eax,eax
  4372eb:	pop    rbx
  4372ec:	pop    r12
  4372ee:	pop    r13
  4372f0:	pop    r14
  4372f2:	pop    r15
  4372f4:	ret    
  4372f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4372ff:	nop
  437300:	jmp    42c450 <strcmp@plt+0x28cb8>
  437305:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43730f:	nop
  437310:	push   rbp
  437311:	push   r15
  437313:	push   r14
  437315:	push   r13
  437317:	push   r12
  437319:	push   rbx
  43731a:	push   rax
  43731b:	mov    QWORD PTR [rsp],rcx
  43731f:	mov    rbx,rdx
  437322:	mov    r15d,esi
  437325:	mov    rbp,rdi
  437328:	call   42b980 <strcmp@plt+0x281e8>
  43732d:	mov    r12,rax
  437330:	mov    rdi,rbx
  437333:	mov    rsi,rbp
  437336:	call   42c540 <strcmp@plt+0x28da8>
  43733b:	test   rax,rax
  43733e:	je     437385 <strcmp@plt+0x33bed>
  437340:	mov    r13,rax
  437343:	mov    rbx,QWORD PTR [rax+0x8]
  437347:	cmp    rbx,rax
  43734a:	jne    437358 <strcmp@plt+0x33bc0>
  43734c:	jmp    437385 <strcmp@plt+0x33bed>
  43734e:	xchg   ax,ax
  437350:	mov    rbx,r14
  437353:	cmp    r14,r13
  437356:	je     437385 <strcmp@plt+0x33bed>
  437358:	mov    r14,QWORD PTR [rbx+0x8]
  43735c:	mov    rbp,QWORD PTR [rbx+0x10]
  437360:	mov    rdi,rbp
  437363:	call   437000 <strcmp@plt+0x33868>
  437368:	cmp    eax,r15d
  43736b:	jne    437350 <strcmp@plt+0x33bb8>
  43736d:	mov    rdi,rbp
  437370:	mov    rsi,r12
  437373:	call   42baa0 <strcmp@plt+0x28308>
  437378:	mov    rdi,rbx
  43737b:	mov    rsi,r13
  43737e:	call   42be10 <strcmp@plt+0x28678>
  437383:	jmp    437350 <strcmp@plt+0x33bb8>
  437385:	mov    rbx,QWORD PTR [r12+0x8]
  43738a:	cmp    rbx,r12
  43738d:	mov    r14,QWORD PTR [rsp]
  437391:	jne    4373b1 <strcmp@plt+0x33c19>
  437393:	jmp    4373da <strcmp@plt+0x33c42>
  437395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43739f:	nop
  4373a0:	mov    rdi,r15
  4373a3:	call   436f40 <strcmp@plt+0x337a8>
  4373a8:	mov    rbx,QWORD PTR [rbx+0x8]
  4373ac:	cmp    rbx,r12
  4373af:	je     4373da <strcmp@plt+0x33c42>
  4373b1:	mov    r15,QWORD PTR [rbx+0x10]
  4373b5:	mov    rdi,r15
  4373b8:	call   437010 <strcmp@plt+0x33878>
  4373bd:	test   rax,rax
  4373c0:	je     4373a0 <strcmp@plt+0x33c08>
  4373c2:	mov    rbp,rax
  4373c5:	mov    rdi,r14
  4373c8:	mov    rsi,rax
  4373cb:	call   4323d0 <strcmp@plt+0x2ec38>
  4373d0:	mov    rdi,rbp
  4373d3:	call   4322e0 <strcmp@plt+0x2eb48>
  4373d8:	jmp    4373a0 <strcmp@plt+0x33c08>
  4373da:	mov    rdi,r12
  4373dd:	call   42bff0 <strcmp@plt+0x28858>
  4373e2:	mov    eax,0x1
  4373e7:	add    rsp,0x8
  4373eb:	pop    rbx
  4373ec:	pop    r12
  4373ee:	pop    r13
  4373f0:	pop    r14
  4373f2:	pop    r15
  4373f4:	pop    rbp
  4373f5:	ret    
  4373f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437400:	push   rbp
  437401:	push   r15
  437403:	push   r14
  437405:	push   r13
  437407:	push   r12
  437409:	push   rbx
  43740a:	push   rax
  43740b:	mov    r15d,edx
  43740e:	mov    rbx,rsi
  437411:	mov    rbp,rdi
  437414:	call   42b980 <strcmp@plt+0x281e8>
  437419:	mov    r14,rax
  43741c:	mov    rdi,rbp
  43741f:	mov    rsi,rbx
  437422:	call   42c540 <strcmp@plt+0x28da8>
  437427:	test   rax,rax
  43742a:	je     437475 <strcmp@plt+0x33cdd>
  43742c:	mov    r12,rax
  43742f:	mov    rbp,QWORD PTR [rax+0x8]
  437433:	cmp    rbp,rax
  437436:	jne    437448 <strcmp@plt+0x33cb0>
  437438:	jmp    437475 <strcmp@plt+0x33cdd>
  43743a:	nop    WORD PTR [rax+rax*1+0x0]
  437440:	mov    rbp,r13
  437443:	cmp    r13,r12
  437446:	je     437475 <strcmp@plt+0x33cdd>
  437448:	mov    r13,QWORD PTR [rbp+0x8]
  43744c:	mov    rbx,QWORD PTR [rbp+0x10]
  437450:	mov    rdi,rbx
  437453:	call   437000 <strcmp@plt+0x33868>
  437458:	cmp    eax,r15d
  43745b:	jne    437440 <strcmp@plt+0x33ca8>
  43745d:	mov    rdi,rbx
  437460:	mov    rsi,r14
  437463:	call   42baa0 <strcmp@plt+0x28308>
  437468:	mov    rdi,rbp
  43746b:	mov    rsi,r12
  43746e:	call   42be10 <strcmp@plt+0x28678>
  437473:	jmp    437440 <strcmp@plt+0x33ca8>
  437475:	mov    rax,r14
  437478:	add    rsp,0x8
  43747c:	pop    rbx
  43747d:	pop    r12
  43747f:	pop    r13
  437481:	pop    r14
  437483:	pop    r15
  437485:	pop    rbp
  437486:	ret    
  437487:	nop    WORD PTR [rax+rax*1+0x0]
  437490:	push   r15
  437492:	push   r14
  437494:	push   r12
  437496:	push   rbx
  437497:	push   rax
  437498:	mov    r14,rdx
  43749b:	mov    r15,rsi
  43749e:	mov    r12,rdi
  4374a1:	call   42c540 <strcmp@plt+0x28da8>
  4374a6:	mov    rbx,rax
  4374a9:	test   rax,rax
  4374ac:	jne    4374c9 <strcmp@plt+0x33d31>
  4374ae:	call   42b980 <strcmp@plt+0x281e8>
  4374b3:	test   rax,rax
  4374b6:	je     4374df <strcmp@plt+0x33d47>
  4374b8:	mov    rbx,rax
  4374bb:	mov    rdi,r12
  4374be:	mov    rsi,r15
  4374c1:	mov    rdx,rax
  4374c4:	call   42c2c0 <strcmp@plt+0x28b28>
  4374c9:	mov    rdi,r14
  4374cc:	mov    rsi,rbx
  4374cf:	add    rsp,0x8
  4374d3:	pop    rbx
  4374d4:	pop    r12
  4374d6:	pop    r14
  4374d8:	pop    r15
  4374da:	jmp    42baa0 <strcmp@plt+0x28308>
  4374df:	xor    eax,eax
  4374e1:	add    rsp,0x8
  4374e5:	pop    rbx
  4374e6:	pop    r12
  4374e8:	pop    r14
  4374ea:	pop    r15
  4374ec:	ret    
  4374ed:	nop    DWORD PTR [rax]
  4374f0:	jmp    42c540 <strcmp@plt+0x28da8>
  4374f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4374ff:	nop
  437500:	push   rbp
  437501:	push   r15
  437503:	push   r14
  437505:	push   r12
  437507:	push   rbx
  437508:	mov    r15d,edx
  43750b:	mov    rbx,rsi
  43750e:	mov    rbp,rdi
  437511:	call   42b980 <strcmp@plt+0x281e8>
  437516:	mov    r14,rax
  437519:	mov    rdi,rbp
  43751c:	mov    rsi,rbx
  43751f:	call   42c540 <strcmp@plt+0x28da8>
  437524:	test   rax,rax
  437527:	je     43755a <strcmp@plt+0x33dc2>
  437529:	mov    r12,rax
  43752c:	mov    rbx,QWORD PTR [rax+0x8]
  437530:	cmp    rbx,r12
  437533:	je     43755a <strcmp@plt+0x33dc2>
  437535:	mov    rbp,QWORD PTR [rbx+0x10]
  437539:	mov    rbx,QWORD PTR [rbx+0x8]
  43753d:	mov    rdi,rbp
  437540:	call   437000 <strcmp@plt+0x33868>
  437545:	cmp    eax,r15d
  437548:	jne    437530 <strcmp@plt+0x33d98>
  43754a:	mov    rdi,rbp
  43754d:	mov    rsi,r14
  437550:	call   42baa0 <strcmp@plt+0x28308>
  437555:	cmp    rbx,r12
  437558:	jne    437535 <strcmp@plt+0x33d9d>
  43755a:	mov    rax,r14
  43755d:	pop    rbx
  43755e:	pop    r12
  437560:	pop    r14
  437562:	pop    r15
  437564:	pop    rbp
  437565:	ret    
  437566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437570:	push   rbp
  437571:	push   r15
  437573:	push   r14
  437575:	push   rbx
  437576:	push   rax
  437577:	mov    ebp,edx
  437579:	mov    r14,rsi
  43757c:	mov    rbx,rdi
  43757f:	lea    eax,[rbp+rbp*1+0x0]
  437583:	movsxd rdx,eax
  437586:	xor    ecx,ecx
  437588:	nop    DWORD PTR [rax+rax*1+0x0]
  437590:	movzx  eax,BYTE PTR [rbx+rcx*1]
  437594:	cmp    rcx,rdx
  437597:	lea    rcx,[rcx+0x1]
  43759b:	jg     4375a1 <strcmp@plt+0x33e09>
  43759d:	test   al,al
  43759f:	jne    437590 <strcmp@plt+0x33df8>
  4375a1:	lea    edx,[rbp+rbp*1+0x1]
  4375a5:	cmp    edx,ecx
  4375a7:	je     4375b4 <strcmp@plt+0x33e1c>
  4375a9:	xor    r15d,r15d
  4375ac:	test   al,al
  4375ae:	jne    43765a <strcmp@plt+0x33ec2>
  4375b4:	mov    r15d,0x1
  4375ba:	test   ebp,ebp
  4375bc:	jle    43765a <strcmp@plt+0x33ec2>
  4375c2:	call   403080 <__ctype_toupper_loc@plt>
  4375c7:	mov    r11d,ebp
  4375ca:	xor    edx,edx
  4375cc:	lea    r8,[rip+0x16071]        # 44d644 <strcmp@plt+0x49eac>
  4375d3:	mov    r10d,0x7e03ff
  4375d9:	lea    r9,[rip+0x160c0]        # 44d6a0 <strcmp@plt+0x49f08>
  4375e0:	movsx  rcx,BYTE PTR [rbx+rdx*2]
  4375e5:	movsx  rbp,BYTE PTR [rbx+rdx*2+0x1]
  4375eb:	mov    rdi,QWORD PTR [rax]
  4375ee:	movsx  ecx,BYTE PTR [rdi+rcx*4]
  4375f2:	add    ecx,0xffffffd0
  4375f5:	mov    esi,0xffffffff
  4375fa:	cmp    ecx,0x16
  4375fd:	ja     437606 <strcmp@plt+0x33e6e>
  4375ff:	movsxd rcx,ecx
  437602:	mov    esi,DWORD PTR [r8+rcx*4]
  437606:	movsx  edi,BYTE PTR [rdi+rbp*4]
  43760a:	add    edi,0xffffffd0
  43760d:	cmp    edi,0x16
  437610:	ja     437635 <strcmp@plt+0x33e9d>
  437612:	bt     r10d,edi
  437616:	jae    437635 <strcmp@plt+0x33e9d>
  437618:	cmp    esi,0xffffffff
  43761b:	je     437635 <strcmp@plt+0x33e9d>
  43761d:	movsxd rcx,edi
  437620:	shl    esi,0x4
  437623:	or     esi,DWORD PTR [r9+rcx*4]
  437627:	mov    BYTE PTR [r14+rdx*1],sil
  43762b:	inc    rdx
  43762e:	cmp    r11,rdx
  437631:	jne    4375e0 <strcmp@plt+0x33e48>
  437633:	jmp    43765a <strcmp@plt+0x33ec2>
  437635:	lea    rax,[rip+0x2d784]        # 464dc0 <strcmp@plt+0x61628>
  43763c:	xor    r15d,r15d
  43763f:	cmp    DWORD PTR [rax],0x2
  437642:	jl     43765a <strcmp@plt+0x33ec2>
  437644:	lea    rsi,[rip+0x15fbc]        # 44d607 <strcmp@plt+0x49e6f>
  43764b:	xor    r15d,r15d
  43764e:	mov    edi,0x6
  437653:	xor    eax,eax
  437655:	call   42e520 <strcmp@plt+0x2ad88>
  43765a:	mov    eax,r15d
  43765d:	add    rsp,0x8
  437661:	pop    rbx
  437662:	pop    r14
  437664:	pop    r15
  437666:	pop    rbp
  437667:	ret    
  437668:	nop    DWORD PTR [rax+rax*1+0x0]
  437670:	push   r15
  437672:	push   r14
  437674:	push   rbx
  437675:	mov    rbx,rdi
  437678:	vxorps xmm0,xmm0,xmm0
  43767c:	vmovups YMMWORD PTR [rip+0x3846c],ymm0        # 46faf0 <strcmp@plt+0x6c358>
  437684:	mov    BYTE PTR [rip+0x38485],0x0        # 46fb10 <strcmp@plt+0x6c378>
  43768b:	lea    r14,[rip+0x3845e]        # 46faf0 <strcmp@plt+0x6c358>
  437692:	mov    rdi,r14
  437695:	vzeroupper 
  437698:	call   4031e0 <strlen@plt>
  43769d:	lea    rdi,[rax+r14*1]
  4376a1:	movzx  edx,BYTE PTR [rbx]
  4376a4:	lea    r15,[rip+0x15f94]        # 44d63f <strcmp@plt+0x49ea7>
  4376ab:	mov    rsi,r15
  4376ae:	xor    eax,eax
  4376b0:	call   4030b0 <sprintf@plt>
  4376b5:	mov    rdi,r14
  4376b8:	call   4031e0 <strlen@plt>
  4376bd:	lea    rdi,[rax+r14*1]
  4376c1:	movzx  edx,BYTE PTR [rbx+0x1]
  4376c5:	mov    rsi,r15
  4376c8:	xor    eax,eax
  4376ca:	call   4030b0 <sprintf@plt>
  4376cf:	mov    rdi,r14
  4376d2:	call   4031e0 <strlen@plt>
  4376d7:	lea    rdi,[rax+r14*1]
  4376db:	movzx  edx,BYTE PTR [rbx+0x2]
  4376df:	mov    rsi,r15
  4376e2:	xor    eax,eax
  4376e4:	call   4030b0 <sprintf@plt>
  4376e9:	mov    rdi,r14
  4376ec:	call   4031e0 <strlen@plt>
  4376f1:	lea    rdi,[rax+r14*1]
  4376f5:	movzx  edx,BYTE PTR [rbx+0x3]
  4376f9:	mov    rsi,r15
  4376fc:	xor    eax,eax
  4376fe:	call   4030b0 <sprintf@plt>
  437703:	mov    rdi,r14
  437706:	call   4031e0 <strlen@plt>
  43770b:	lea    rdi,[rax+r14*1]
  43770f:	movzx  edx,BYTE PTR [rbx+0x4]
  437713:	mov    rsi,r15
  437716:	xor    eax,eax
  437718:	call   4030b0 <sprintf@plt>
  43771d:	mov    rdi,r14
  437720:	call   4031e0 <strlen@plt>
  437725:	lea    rdi,[rax+r14*1]
  437729:	movzx  edx,BYTE PTR [rbx+0x5]
  43772d:	mov    rsi,r15
  437730:	xor    eax,eax
  437732:	call   4030b0 <sprintf@plt>
  437737:	mov    rdi,r14
  43773a:	call   4031e0 <strlen@plt>
  43773f:	lea    rdi,[rax+r14*1]
  437743:	movzx  edx,BYTE PTR [rbx+0x6]
  437747:	mov    rsi,r15
  43774a:	xor    eax,eax
  43774c:	call   4030b0 <sprintf@plt>
  437751:	mov    rdi,r14
  437754:	call   4031e0 <strlen@plt>
  437759:	lea    rdi,[rax+r14*1]
  43775d:	movzx  edx,BYTE PTR [rbx+0x7]
  437761:	mov    rsi,r15
  437764:	xor    eax,eax
  437766:	call   4030b0 <sprintf@plt>
  43776b:	mov    rdi,r14
  43776e:	call   4031e0 <strlen@plt>
  437773:	lea    rdi,[rax+r14*1]
  437777:	movzx  edx,BYTE PTR [rbx+0x8]
  43777b:	mov    rsi,r15
  43777e:	xor    eax,eax
  437780:	call   4030b0 <sprintf@plt>
  437785:	mov    rdi,r14
  437788:	call   4031e0 <strlen@plt>
  43778d:	lea    rdi,[rax+r14*1]
  437791:	movzx  edx,BYTE PTR [rbx+0x9]
  437795:	mov    rsi,r15
  437798:	xor    eax,eax
  43779a:	call   4030b0 <sprintf@plt>
  43779f:	mov    rdi,r14
  4377a2:	call   4031e0 <strlen@plt>
  4377a7:	lea    rdi,[rax+r14*1]
  4377ab:	movzx  edx,BYTE PTR [rbx+0xa]
  4377af:	mov    rsi,r15
  4377b2:	xor    eax,eax
  4377b4:	call   4030b0 <sprintf@plt>
  4377b9:	mov    rdi,r14
  4377bc:	call   4031e0 <strlen@plt>
  4377c1:	lea    rdi,[rax+r14*1]
  4377c5:	movzx  edx,BYTE PTR [rbx+0xb]
  4377c9:	mov    rsi,r15
  4377cc:	xor    eax,eax
  4377ce:	call   4030b0 <sprintf@plt>
  4377d3:	mov    rdi,r14
  4377d6:	call   4031e0 <strlen@plt>
  4377db:	lea    rdi,[rax+r14*1]
  4377df:	movzx  edx,BYTE PTR [rbx+0xc]
  4377e3:	mov    rsi,r15
  4377e6:	xor    eax,eax
  4377e8:	call   4030b0 <sprintf@plt>
  4377ed:	mov    rdi,r14
  4377f0:	call   4031e0 <strlen@plt>
  4377f5:	lea    rdi,[rax+r14*1]
  4377f9:	movzx  edx,BYTE PTR [rbx+0xd]
  4377fd:	mov    rsi,r15
  437800:	xor    eax,eax
  437802:	call   4030b0 <sprintf@plt>
  437807:	mov    rdi,r14
  43780a:	call   4031e0 <strlen@plt>
  43780f:	lea    rdi,[rax+r14*1]
  437813:	movzx  edx,BYTE PTR [rbx+0xe]
  437817:	mov    rsi,r15
  43781a:	xor    eax,eax
  43781c:	call   4030b0 <sprintf@plt>
  437821:	mov    rdi,r14
  437824:	call   4031e0 <strlen@plt>
  437829:	lea    rdi,[rax+r14*1]
  43782d:	movzx  edx,BYTE PTR [rbx+0xf]
  437831:	mov    rsi,r15
  437834:	xor    eax,eax
  437836:	call   4030b0 <sprintf@plt>
  43783b:	mov    rax,r14
  43783e:	pop    rbx
  43783f:	pop    r14
  437841:	pop    r15
  437843:	ret    
  437844:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43784e:	xchg   ax,ax
  437850:	push   rbp
  437851:	push   r15
  437853:	push   r14
  437855:	push   r12
  437857:	push   rbx
  437858:	mov    rbp,QWORD PTR [rdi+0x8]
  43785c:	cmp    rbp,rdi
  43785f:	je     4378b1 <strcmp@plt+0x34119>
  437861:	mov    r14d,esi
  437864:	mov    r12,rdi
  437867:	mov    r15d,esi
  43786a:	shr    r15d,1
  43786d:	jmp    437883 <strcmp@plt+0x340eb>
  43786f:	nop
  437870:	mov    rdi,rbp
  437873:	mov    rsi,r12
  437876:	call   42be10 <strcmp@plt+0x28678>
  43787b:	mov    rbp,rbx
  43787e:	cmp    rbx,r12
  437881:	je     4378b1 <strcmp@plt+0x34119>
  437883:	mov    rbx,QWORD PTR [rbp+0x8]
  437887:	mov    rdi,QWORD PTR [rbp+0x10]
  43788b:	call   422fd0 <strcmp@plt+0x1f838>
  437890:	mov    rdi,rax
  437893:	call   422ef0 <strcmp@plt+0x1f758>
  437898:	mov    ecx,r14d
  43789b:	cmp    ax,0x2
  43789f:	je     4378aa <strcmp@plt+0x34112>
  4378a1:	cmp    ax,0xa
  4378a5:	jne    437870 <strcmp@plt+0x340d8>
  4378a7:	mov    ecx,r15d
  4378aa:	test   cl,0x1
  4378ad:	je     437870 <strcmp@plt+0x340d8>
  4378af:	jmp    43787b <strcmp@plt+0x340e3>
  4378b1:	pop    rbx
  4378b2:	pop    r12
  4378b4:	pop    r14
  4378b6:	pop    r15
  4378b8:	pop    rbp
  4378b9:	ret    
  4378ba:	nop    WORD PTR [rax+rax*1+0x0]
  4378c0:	push   rbx
  4378c1:	mov    ebx,esi
  4378c3:	call   422fd0 <strcmp@plt+0x1f838>
  4378c8:	mov    rdi,rax
  4378cb:	call   422ef0 <strcmp@plt+0x1f758>
  4378d0:	cmp    ax,0xa
  4378d4:	je     4378e0 <strcmp@plt+0x34148>
  4378d6:	cmp    ax,0x2
  4378da:	je     4378e2 <strcmp@plt+0x3414a>
  4378dc:	xor    ebx,ebx
  4378de:	jmp    4378e5 <strcmp@plt+0x3414d>
  4378e0:	shr    bl,1
  4378e2:	and    bl,0x1
  4378e5:	mov    eax,ebx
  4378e7:	pop    rbx
  4378e8:	ret    
  4378e9:	nop    DWORD PTR [rax+0x0]
  4378f0:	xor    eax,eax
  4378f2:	jmp    437903 <strcmp@plt+0x3416b>
  4378f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4378fe:	xchg   ax,ax
  437900:	inc    rdi
  437903:	movzx  ecx,BYTE PTR [rdi]
  437906:	cmp    cl,0x20
  437909:	je     437900 <strcmp@plt+0x34168>
  43790b:	cdqe   
  43790d:	test   cl,cl
  43790f:	je     437918 <strcmp@plt+0x34180>
  437911:	mov    BYTE PTR [rsi+rax*1],cl
  437914:	inc    eax
  437916:	jmp    437900 <strcmp@plt+0x34168>
  437918:	mov    BYTE PTR [rsi+rax*1],0x0
  43791c:	ret    
  43791d:	nop    DWORD PTR [rax]
  437920:	xor    r9d,r9d
  437923:	xor    r8d,r8d
  437926:	jmp    437943 <strcmp@plt+0x341ab>
  437928:	nop    DWORD PTR [rax+rax*1+0x0]
  437930:	test   cl,cl
  437932:	je     437958 <strcmp@plt+0x341c0>
  437934:	movsxd rax,r9d
  437937:	mov    BYTE PTR [rsi+rax*1],cl
  43793a:	inc    r9d
  43793d:	mov    r8d,edx
  437940:	inc    rdi
  437943:	movzx  ecx,BYTE PTR [rdi]
  437946:	xor    edx,edx
  437948:	cmp    cl,0x20
  43794b:	jne    437930 <strcmp@plt+0x34198>
  43794d:	test   r8b,r8b
  437950:	jne    437940 <strcmp@plt+0x341a8>
  437952:	mov    dl,0x1
  437954:	mov    cl,0x20
  437956:	jmp    437934 <strcmp@plt+0x3419c>
  437958:	movsxd rax,r9d
  43795b:	mov    BYTE PTR [rsi+rax*1],0x0
  43795f:	ret    
  437960:	push   r15
  437962:	push   r14
  437964:	push   rbx
  437965:	mov    rbx,rdi
  437968:	call   4031e0 <strlen@plt>
  43796d:	mov    r14,rax
  437970:	shl    rax,0x20
  437974:	movabs rdi,0x100000000
  43797e:	add    rdi,rax
  437981:	sar    rdi,0x20
  437985:	call   431d90 <strcmp@plt+0x2e5f8>
  43798a:	mov    r15,rax
  43798d:	test   r14d,r14d
  437990:	jle    4379bb <strcmp@plt+0x34223>
  437992:	call   4030a0 <__ctype_tolower_loc@plt>
  437997:	mov    esi,r14d
  43799a:	lea    rdx,[rsi-0x1]
  43799e:	mov    r8d,r14d
  4379a1:	and    r8d,0x7
  4379a5:	cmp    rdx,0x7
  4379a9:	jae    4379c2 <strcmp@plt+0x3422a>
  4379ab:	xor    edx,edx
  4379ad:	test   r8,r8
  4379b0:	jne    437a70 <strcmp@plt+0x342d8>
  4379b6:	jmp    437a97 <strcmp@plt+0x342ff>
  4379bb:	xor    eax,eax
  4379bd:	jmp    437a9a <strcmp@plt+0x34302>
  4379c2:	sub    rsi,r8
  4379c5:	xor    edx,edx
  4379c7:	nop    WORD PTR [rax+rax*1+0x0]
  4379d0:	mov    rdi,QWORD PTR [rax]
  4379d3:	movsx  rcx,BYTE PTR [rbx+rdx*1]
  4379d8:	movzx  ecx,BYTE PTR [rdi+rcx*4]
  4379dc:	mov    BYTE PTR [r15+rdx*1],cl
  4379e0:	mov    rcx,QWORD PTR [rax]
  4379e3:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x1]
  4379e9:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  4379ed:	mov    BYTE PTR [r15+rdx*1+0x1],cl
  4379f2:	mov    rcx,QWORD PTR [rax]
  4379f5:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x2]
  4379fb:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  4379ff:	mov    BYTE PTR [r15+rdx*1+0x2],cl
  437a04:	mov    rcx,QWORD PTR [rax]
  437a07:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x3]
  437a0d:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437a11:	mov    BYTE PTR [r15+rdx*1+0x3],cl
  437a16:	mov    rcx,QWORD PTR [rax]
  437a19:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x4]
  437a1f:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437a23:	mov    BYTE PTR [r15+rdx*1+0x4],cl
  437a28:	mov    rcx,QWORD PTR [rax]
  437a2b:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x5]
  437a31:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437a35:	mov    BYTE PTR [r15+rdx*1+0x5],cl
  437a3a:	mov    rcx,QWORD PTR [rax]
  437a3d:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x6]
  437a43:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437a47:	mov    BYTE PTR [r15+rdx*1+0x6],cl
  437a4c:	mov    rcx,QWORD PTR [rax]
  437a4f:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x7]
  437a55:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437a59:	mov    BYTE PTR [r15+rdx*1+0x7],cl
  437a5e:	add    rdx,0x8
  437a62:	cmp    rsi,rdx
  437a65:	jne    4379d0 <strcmp@plt+0x34238>
  437a6b:	test   r8,r8
  437a6e:	je     437a97 <strcmp@plt+0x342ff>
  437a70:	mov    rsi,r15
  437a73:	add    rsi,rdx
  437a76:	add    rbx,rdx
  437a79:	xor    edx,edx
  437a7b:	nop    DWORD PTR [rax+rax*1+0x0]
  437a80:	mov    rcx,QWORD PTR [rax]
  437a83:	movsx  rdi,BYTE PTR [rbx+rdx*1]
  437a88:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437a8c:	mov    BYTE PTR [rsi+rdx*1],cl
  437a8f:	inc    rdx
  437a92:	cmp    r8,rdx
  437a95:	jne    437a80 <strcmp@plt+0x342e8>
  437a97:	mov    eax,r14d
  437a9a:	mov    BYTE PTR [r15+rax*1],0x0
  437a9f:	mov    rax,r15
  437aa2:	pop    rbx
  437aa3:	pop    r14
  437aa5:	pop    r15
  437aa7:	ret    
  437aa8:	nop    DWORD PTR [rax+rax*1+0x0]
  437ab0:	push   r15
  437ab2:	push   r14
  437ab4:	push   r12
  437ab6:	push   rbx
  437ab7:	sub    rsp,0x18
  437abb:	mov    rbx,rdi
  437abe:	call   4031e0 <strlen@plt>
  437ac3:	mov    r15,rax
  437ac6:	shl    rax,0x20
  437aca:	movabs rdi,0x100000000
  437ad4:	add    rdi,rax
  437ad7:	sar    rdi,0x20
  437adb:	call   431d90 <strcmp@plt+0x2e5f8>
  437ae0:	mov    r14,rax
  437ae3:	xor    r12d,r12d
  437ae6:	test   r15d,r15d
  437ae9:	jle    437b11 <strcmp@plt+0x34379>
  437aeb:	call   4030a0 <__ctype_tolower_loc@plt>
  437af0:	mov    r8d,r15d
  437af3:	lea    rdx,[r8-0x1]
  437af7:	and    r15d,0x7
  437afb:	cmp    rdx,0x7
  437aff:	jae    437b19 <strcmp@plt+0x34381>
  437b01:	xor    edx,edx
  437b03:	test   r15,r15
  437b06:	jne    437bd0 <strcmp@plt+0x34438>
  437b0c:	jmp    437bf7 <strcmp@plt+0x3445f>
  437b11:	xor    r8d,r8d
  437b14:	jmp    437bf7 <strcmp@plt+0x3445f>
  437b19:	mov    rsi,r8
  437b1c:	sub    rsi,r15
  437b1f:	xor    edx,edx
  437b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  437b30:	mov    rdi,QWORD PTR [rax]
  437b33:	movsx  rcx,BYTE PTR [rbx+rdx*1]
  437b38:	movzx  ecx,BYTE PTR [rdi+rcx*4]
  437b3c:	mov    BYTE PTR [r14+rdx*1],cl
  437b40:	mov    rcx,QWORD PTR [rax]
  437b43:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x1]
  437b49:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437b4d:	mov    BYTE PTR [r14+rdx*1+0x1],cl
  437b52:	mov    rcx,QWORD PTR [rax]
  437b55:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x2]
  437b5b:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437b5f:	mov    BYTE PTR [r14+rdx*1+0x2],cl
  437b64:	mov    rcx,QWORD PTR [rax]
  437b67:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x3]
  437b6d:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437b71:	mov    BYTE PTR [r14+rdx*1+0x3],cl
  437b76:	mov    rcx,QWORD PTR [rax]
  437b79:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x4]
  437b7f:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437b83:	mov    BYTE PTR [r14+rdx*1+0x4],cl
  437b88:	mov    rcx,QWORD PTR [rax]
  437b8b:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x5]
  437b91:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437b95:	mov    BYTE PTR [r14+rdx*1+0x5],cl
  437b9a:	mov    rcx,QWORD PTR [rax]
  437b9d:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x6]
  437ba3:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437ba7:	mov    BYTE PTR [r14+rdx*1+0x6],cl
  437bac:	mov    rcx,QWORD PTR [rax]
  437baf:	movsx  rdi,BYTE PTR [rbx+rdx*1+0x7]
  437bb5:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437bb9:	mov    BYTE PTR [r14+rdx*1+0x7],cl
  437bbe:	add    rdx,0x8
  437bc2:	cmp    rsi,rdx
  437bc5:	jne    437b30 <strcmp@plt+0x34398>
  437bcb:	test   r15,r15
  437bce:	je     437bf7 <strcmp@plt+0x3445f>
  437bd0:	mov    rsi,r14
  437bd3:	add    rsi,rdx
  437bd6:	add    rbx,rdx
  437bd9:	xor    edx,edx
  437bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  437be0:	mov    rcx,QWORD PTR [rax]
  437be3:	movsx  rdi,BYTE PTR [rbx+rdx*1]
  437be8:	movzx  ecx,BYTE PTR [rcx+rdi*4]
  437bec:	mov    BYTE PTR [rsi+rdx*1],cl
  437bef:	inc    rdx
  437bf2:	cmp    r15,rdx
  437bf5:	jne    437be0 <strcmp@plt+0x34448>
  437bf7:	mov    BYTE PTR [r14+r8*1],0x0
  437bfc:	mov    rax,r14
  437bff:	jmp    437c13 <strcmp@plt+0x3447b>
  437c01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437c0b:	nop    DWORD PTR [rax+rax*1+0x0]
  437c10:	inc    rax
  437c13:	movzx  ecx,BYTE PTR [rax]
  437c16:	cmp    cl,0x20
  437c19:	je     437c10 <strcmp@plt+0x34478>
  437c1b:	test   cl,cl
  437c1d:	je     437c2b <strcmp@plt+0x34493>
  437c1f:	movsxd rdx,r12d
  437c22:	mov    BYTE PTR [rsp+rdx*1+0xe],cl
  437c26:	inc    r12d
  437c29:	jmp    437c10 <strcmp@plt+0x34478>
  437c2b:	movsxd rax,r12d
  437c2e:	mov    BYTE PTR [rsp+rax*1+0xe],0x0
  437c33:	movzx  eax,WORD PTR [rsp+0xe]
  437c38:	xor    eax,0x6e6f
  437c3d:	movzx  ecx,BYTE PTR [rsp+0x10]
  437c42:	mov    bl,0x1
  437c44:	or     cx,ax
  437c47:	je     437c81 <strcmp@plt+0x344e9>
  437c49:	mov    eax,0x65757274
  437c4e:	xor    eax,DWORD PTR [rsp+0xe]
  437c52:	movzx  ecx,BYTE PTR [rsp+0x12]
  437c57:	or     ecx,eax
  437c59:	je     437c81 <strcmp@plt+0x344e9>
  437c5b:	cmp    DWORD PTR [rsp+0xe],0x66666f
  437c63:	je     437c7f <strcmp@plt+0x344e7>
  437c65:	mov    eax,0x736c6166
  437c6a:	xor    eax,DWORD PTR [rsp+0xe]
  437c6e:	movzx  ecx,WORD PTR [rsp+0x12]
  437c73:	xor    ecx,0x65
  437c76:	or     ecx,eax
  437c78:	setne  bl
  437c7b:	neg    bl
  437c7d:	jmp    437c81 <strcmp@plt+0x344e9>
  437c7f:	xor    ebx,ebx
  437c81:	mov    rdi,r14
  437c84:	call   403790 <free@plt>
  437c89:	mov    eax,ebx
  437c8b:	add    rsp,0x18
  437c8f:	pop    rbx
  437c90:	pop    r12
  437c92:	pop    r14
  437c94:	pop    r15
  437c96:	ret    
  437c97:	nop    WORD PTR [rax+rax*1+0x0]
  437ca0:	push   r14
  437ca2:	push   rbx
  437ca3:	push   rax
  437ca4:	call   423440 <strcmp@plt+0x1fca8>
  437ca9:	mov    r14,rax
  437cac:	mov    rdi,rax
  437caf:	call   422dd0 <strcmp@plt+0x1f638>
  437cb4:	test   rax,rax
  437cb7:	je     437cd9 <strcmp@plt+0x34541>
  437cb9:	mov    rbx,rax
  437cbc:	mov    rdi,rax
  437cbf:	call   422ef0 <strcmp@plt+0x1f758>
  437cc4:	cmp    ax,0xa
  437cc8:	je     437cde <strcmp@plt+0x34546>
  437cca:	cmp    ax,0x2
  437cce:	jne    437ced <strcmp@plt+0x34555>
  437cd0:	lea    rdi,[rip+0xaffd]        # 442cd4 <strcmp@plt+0x3f53c>
  437cd7:	jmp    437ce5 <strcmp@plt+0x3454d>
  437cd9:	xor    r14d,r14d
  437cdc:	jmp    437ced <strcmp@plt+0x34555>
  437cde:	lea    rdi,[rip+0xbe7d]        # 443b62 <strcmp@plt+0x403ca>
  437ce5:	mov    rsi,rbx
  437ce8:	call   423960 <strcmp@plt+0x201c8>
  437ced:	mov    rax,r14
  437cf0:	add    rsp,0x8
  437cf4:	pop    rbx
  437cf5:	pop    r14
  437cf7:	ret    
  437cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  437d00:	push   rax
  437d01:	cmp    DWORD PTR [rdi+0x18],0x2
  437d05:	jne    437d14 <strcmp@plt+0x3457c>
  437d07:	call   422d90 <strcmp@plt+0x1f5f8>
  437d0c:	test   ax,ax
  437d0f:	sete   al
  437d12:	pop    rcx
  437d13:	ret    
  437d14:	xor    eax,eax
  437d16:	pop    rcx
  437d17:	ret    
  437d18:	nop    DWORD PTR [rax+rax*1+0x0]
  437d20:	lea    rax,[rip+0x2d029]        # 464d50 <strcmp@plt+0x615b8>
  437d27:	lea    rcx,[rip+0x37dea]        # 46fb18 <strcmp@plt+0x6c380>
  437d2e:	mov    QWORD PTR [rcx],rax
  437d31:	ret    
  437d32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  437d3c:	nop    DWORD PTR [rax+0x0]
  437d40:	push   rbp
  437d41:	push   r15
  437d43:	push   r14
  437d45:	push   r13
  437d47:	push   r12
  437d49:	push   rbx
  437d4a:	push   rax
  437d4b:	mov    r14,rdx
  437d4e:	mov    ebx,esi
  437d50:	mov    ebp,edi
  437d52:	mov    edi,esi
  437d54:	call   43a910 <strcmp@plt+0x37178>
  437d59:	test   rax,rax
  437d5c:	je     437dbf <strcmp@plt+0x34627>
  437d5e:	mov    r13,rax
  437d61:	mov    rdi,r14
  437d64:	call   422ef0 <strcmp@plt+0x1f758>
  437d69:	mov    r12d,eax
  437d6c:	movzx  ebx,ax
  437d6f:	mov    rdi,r13
  437d72:	mov    esi,ebx
  437d74:	call   43a660 <strcmp@plt+0x36ec8>
  437d79:	test   rax,rax
  437d7c:	je     437df2 <strcmp@plt+0x3465a>
  437d7e:	mov    r15,rax
  437d81:	test   bpl,bpl
  437d84:	je     437e29 <strcmp@plt+0x34691>
  437d8a:	mov    rdi,r14
  437d8d:	call   4244c0 <strcmp@plt+0x20d28>
  437d92:	cmp    eax,0x1
  437d95:	jne    437eaa <strcmp@plt+0x34712>
  437d9b:	lea    rax,[rip+0x2d01e]        # 464dc0 <strcmp@plt+0x61628>
  437da2:	cmp    DWORD PTR [rax],0x2
  437da5:	jl     438140 <strcmp@plt+0x349a8>
  437dab:	mov    rdi,r14
  437dae:	call   422e20 <strcmp@plt+0x1f688>
  437db3:	lea    rsi,[rip+0x15ac5]        # 44d87f <strcmp@plt+0x4a0e7>
  437dba:	jmp    437e8d <strcmp@plt+0x346f5>
  437dbf:	lea    rax,[rip+0x2cffa]        # 464dc0 <strcmp@plt+0x61628>
  437dc6:	cmp    DWORD PTR [rax],0x2
  437dc9:	jl     438140 <strcmp@plt+0x349a8>
  437dcf:	lea    rsi,[rip+0x15926]        # 44d6fc <strcmp@plt+0x49f64>
  437dd6:	mov    edi,0x6
  437ddb:	mov    edx,ebx
  437ddd:	xor    eax,eax
  437ddf:	add    rsp,0x8
  437de3:	pop    rbx
  437de4:	pop    r12
  437de6:	pop    r13
  437de8:	pop    r14
  437dea:	pop    r15
  437dec:	pop    rbp
  437ded:	jmp    42e520 <strcmp@plt+0x2ad88>
  437df2:	lea    rax,[rip+0x2cfc7]        # 464dc0 <strcmp@plt+0x61628>
  437df9:	cmp    DWORD PTR [rax],0x2
  437dfc:	jl     438140 <strcmp@plt+0x349a8>
  437e02:	cmp    r12w,0x2
  437e07:	lea    rax,[rip+0xbb35]        # 443943 <strcmp@plt+0x401ab>
  437e0e:	lea    rdx,[rip+0xbb33]        # 443948 <strcmp@plt+0x401b0>
  437e15:	cmove  rdx,rax
  437e19:	mov    rcx,QWORD PTR [r13+0x0]
  437e1d:	lea    rsi,[rip+0x15940]        # 44d764 <strcmp@plt+0x49fcc>
  437e24:	jmp    437eed <strcmp@plt+0x34755>
  437e29:	lea    rbx,[rip+0x2cf90]        # 464dc0 <strcmp@plt+0x61628>
  437e30:	cmp    DWORD PTR [rbx],0x2
  437e33:	jl     437e57 <strcmp@plt+0x346bf>
  437e35:	mov    rdi,r14
  437e38:	call   422e20 <strcmp@plt+0x1f688>
  437e3d:	mov    rcx,QWORD PTR [r13+0x0]
  437e41:	lea    rsi,[rip+0x15971]        # 44d7b9 <strcmp@plt+0x4a021>
  437e48:	mov    edi,0x6
  437e4d:	mov    rdx,rax
  437e50:	xor    eax,eax
  437e52:	call   42e520 <strcmp@plt+0x2ad88>
  437e57:	cmp    r12w,0xa
  437e5c:	jne    437fbd <strcmp@plt+0x34825>
  437e62:	mov    rdi,r15
  437e65:	mov    rsi,r14
  437e68:	call   423670 <strcmp@plt+0x1fed8>
  437e6d:	test   eax,eax
  437e6f:	je     437f8b <strcmp@plt+0x347f3>
  437e75:	cmp    DWORD PTR [rbx],0x2
  437e78:	jl     438140 <strcmp@plt+0x349a8>
  437e7e:	mov    rdi,r14
  437e81:	call   422e20 <strcmp@plt+0x1f688>
  437e86:	lea    rsi,[rip+0x159a7]        # 44d834 <strcmp@plt+0x4a09c>
  437e8d:	mov    edi,0x6
  437e92:	mov    rdx,rax
  437e95:	xor    eax,eax
  437e97:	add    rsp,0x8
  437e9b:	pop    rbx
  437e9c:	pop    r12
  437e9e:	pop    r13
  437ea0:	pop    r14
  437ea2:	pop    r15
  437ea4:	pop    rbp
  437ea5:	jmp    42e520 <strcmp@plt+0x2ad88>
  437eaa:	lea    rax,[rip+0x3865f]        # 470510 <strcmp@plt+0x6cd78>
  437eb1:	mov    eax,DWORD PTR [rax]
  437eb3:	test   eax,eax
  437eb5:	je     437f07 <strcmp@plt+0x3476f>
  437eb7:	cmp    eax,ebx
  437eb9:	je     437f07 <strcmp@plt+0x3476f>
  437ebb:	lea    rax,[rip+0x2cefe]        # 464dc0 <strcmp@plt+0x61628>
  437ec2:	cmp    DWORD PTR [rax],0x2
  437ec5:	jl     438140 <strcmp@plt+0x349a8>
  437ecb:	cmp    r12w,0x2
  437ed0:	lea    rax,[rip+0xba6c]        # 443943 <strcmp@plt+0x401ab>
  437ed7:	lea    rdx,[rip+0xba6a]        # 443948 <strcmp@plt+0x401b0>
  437ede:	cmove  rdx,rax
  437ee2:	mov    rcx,QWORD PTR [r13+0x0]
  437ee6:	lea    rsi,[rip+0x159df]        # 44d8cc <strcmp@plt+0x4a134>
  437eed:	mov    edi,0x6
  437ef2:	xor    eax,eax
  437ef4:	add    rsp,0x8
  437ef8:	pop    rbx
  437ef9:	pop    r12
  437efb:	pop    r13
  437efd:	pop    r14
  437eff:	pop    r15
  437f01:	pop    rbp
  437f02:	jmp    42e520 <strcmp@plt+0x2ad88>
  437f07:	cmp    r12w,0xa
  437f0c:	jne    43803c <strcmp@plt+0x348a4>
  437f12:	lea    rax,[rip+0x37bff]        # 46fb18 <strcmp@plt+0x6c380>
  437f19:	mov    rax,QWORD PTR [rax]
  437f1c:	mov    rdi,QWORD PTR [r13+0x0]
  437f20:	mov    esi,0xa
  437f25:	call   QWORD PTR [rax+0x18]
  437f28:	mov    rbp,rax
  437f2b:	mov    rdi,QWORD PTR [r13+0x18]
  437f2f:	lea    rdx,[rip+0xfffffffffffeb73a]        # 423670 <strcmp@plt+0x1fed8>
  437f36:	mov    rsi,rax
  437f39:	call   42bc70 <strcmp@plt+0x284d8>
  437f3e:	test   al,al
  437f40:	je     437fcb <strcmp@plt+0x34833>
  437f46:	lea    rax,[rip+0x2ce73]        # 464dc0 <strcmp@plt+0x61628>
  437f4d:	cmp    DWORD PTR [rax],0x2
  437f50:	jl     437f75 <strcmp@plt+0x347dd>
  437f52:	mov    rdi,QWORD PTR [r13+0x18]
  437f56:	call   422e20 <strcmp@plt+0x1f688>
  437f5b:	mov    rcx,QWORD PTR [r13+0x0]
  437f5f:	lea    rsi,[rip+0x159c1]        # 44d927 <strcmp@plt+0x4a18f>
  437f66:	mov    edi,0x6
  437f6b:	mov    rdx,rax
  437f6e:	xor    eax,eax
  437f70:	call   42e520 <strcmp@plt+0x2ad88>
  437f75:	mov    rdi,rbp
  437f78:	add    rsp,0x8
  437f7c:	pop    rbx
  437f7d:	pop    r12
  437f7f:	pop    r13
  437f81:	pop    r14
  437f83:	pop    r15
  437f85:	pop    rbp
  437f86:	jmp    42bff0 <strcmp@plt+0x28858>
  437f8b:	lea    rax,[rip+0x37b86]        # 46fb18 <strcmp@plt+0x6c380>
  437f92:	mov    rax,QWORD PTR [rax]
  437f95:	mov    rdi,QWORD PTR [r13+0x0]
  437f99:	lea    rcx,[rip+0x37b90]        # 46fb30 <strcmp@plt+0x6c398>
  437fa0:	mov    esi,DWORD PTR [rcx]
  437fa2:	call   QWORD PTR [rax+0x30]
  437fa5:	test   rax,rax
  437fa8:	je     437fbd <strcmp@plt+0x34825>
  437faa:	mov    r14,rax
  437fad:	cmp    DWORD PTR [rbx],0x2
  437fb0:	jge    43800e <strcmp@plt+0x34876>
  437fb2:	mov    al,0x1
  437fb4:	mov    DWORD PTR [rsp+0x4],eax
  437fb8:	jmp    438081 <strcmp@plt+0x348e9>
  437fbd:	xor    edi,edi
  437fbf:	call   422be0 <strcmp@plt+0x1f448>
  437fc4:	mov    r14,rax
  437fc7:	mov    dl,0x1
  437fc9:	jmp    43803e <strcmp@plt+0x348a6>
  437fcb:	mov    rdi,rbp
  437fce:	call   42bff0 <strcmp@plt+0x28858>
  437fd3:	lea    rax,[rip+0x37b56]        # 46fb30 <strcmp@plt+0x6c398>
  437fda:	mov    ebx,DWORD PTR [rax]
  437fdc:	mov    rdi,r14
  437fdf:	call   423a60 <strcmp@plt+0x202c8>
  437fe4:	mov    eax,DWORD PTR [rax]
  437fe6:	test   ebx,ebx
  437fe8:	je     43802e <strcmp@plt+0x34896>
  437fea:	mov    ecx,eax
  437fec:	and    ecx,0xc0ff
  437ff2:	xor    edx,edx
  437ff4:	cmp    ecx,0xc0fe
  437ffa:	je     43803e <strcmp@plt+0x348a6>
  437ffc:	and    eax,0xfe
  438001:	cmp    eax,0xfc
  438006:	jne    438134 <strcmp@plt+0x3499c>
  43800c:	jmp    43803e <strcmp@plt+0x348a6>
  43800e:	mov    rdi,r14
  438011:	call   422e20 <strcmp@plt+0x1f688>
  438016:	lea    rsi,[rip+0x157dc]        # 44d7f9 <strcmp@plt+0x4a061>
  43801d:	mov    edi,0x6
  438022:	mov    rdx,rax
  438025:	xor    eax,eax
  438027:	call   42e520 <strcmp@plt+0x2ad88>
  43802c:	jmp    437fc7 <strcmp@plt+0x3482f>
  43802e:	and    eax,0xe0
  438033:	cmp    eax,0x20
  438036:	jne    438134 <strcmp@plt+0x3499c>
  43803c:	xor    edx,edx
  43803e:	lea    rax,[rip+0x2cd7b]        # 464dc0 <strcmp@plt+0x61628>
  438045:	cmp    DWORD PTR [rax],0x2
  438048:	mov    DWORD PTR [rsp+0x4],edx
  43804c:	jl     438081 <strcmp@plt+0x348e9>
  43804e:	mov    rbx,QWORD PTR [r13+0x0]
  438052:	mov    rdi,r15
  438055:	call   422e20 <strcmp@plt+0x1f688>
  43805a:	mov    rbp,rax
  43805d:	mov    rdi,r14
  438060:	call   422e20 <strcmp@plt+0x1f688>
  438065:	lea    rsi,[rip+0x15998]        # 44da04 <strcmp@plt+0x4a26c>
  43806c:	mov    edi,0x6
  438071:	mov    rdx,rbx
  438074:	mov    rcx,rbp
  438077:	mov    r8,rax
  43807a:	xor    eax,eax
  43807c:	call   42e520 <strcmp@plt+0x2ad88>
  438081:	mov    rdi,r15
  438084:	call   423440 <strcmp@plt+0x1fca8>
  438089:	mov    r12,rax
  43808c:	mov    rdi,r14
  43808f:	call   423440 <strcmp@plt+0x1fca8>
  438094:	mov    rbp,rax
  438097:	mov    rdi,r15
  43809a:	mov    rsi,r14
  43809d:	call   423260 <strcmp@plt+0x1fac8>
  4380a2:	lea    rbx,[rip+0x2cd17]        # 464dc0 <strcmp@plt+0x61628>
  4380a9:	cmp    DWORD PTR [rbx],0x3
  4380ac:	jl     4380c1 <strcmp@plt+0x34929>
  4380ae:	lea    rsi,[rip+0x159af]        # 44da64 <strcmp@plt+0x4a2cc>
  4380b5:	mov    edi,0x7
  4380ba:	xor    eax,eax
  4380bc:	call   42e520 <strcmp@plt+0x2ad88>
  4380c1:	lea    rax,[rip+0x30340]        # 468408 <strcmp@plt+0x64c70>
  4380c8:	mov    rax,QWORD PTR [rax]
  4380cb:	mov    rdi,r13
  4380ce:	mov    rsi,r12
  4380d1:	mov    rdx,rbp
  4380d4:	call   QWORD PTR [rax+0x50]
  4380d7:	cmp    DWORD PTR [rbx],0x3
  4380da:	jl     4380ef <strcmp@plt+0x34957>
  4380dc:	lea    rsi,[rip+0x159b0]        # 44da93 <strcmp@plt+0x4a2fb>
  4380e3:	mov    edi,0x7
  4380e8:	xor    eax,eax
  4380ea:	call   42e520 <strcmp@plt+0x2ad88>
  4380ef:	lea    rax,[rip+0x3849a]        # 470590 <strcmp@plt+0x6cdf8>
  4380f6:	mov    rdi,QWORD PTR [rax]
  4380f9:	mov    rsi,r13
  4380fc:	mov    rdx,r12
  4380ff:	mov    rcx,rbp
  438102:	call   4074f0 <strcmp@plt+0x3d58>
  438107:	mov    rdi,r12
  43810a:	call   422c90 <strcmp@plt+0x1f4f8>
  43810f:	mov    rdi,rbp
  438112:	call   422c90 <strcmp@plt+0x1f4f8>
  438117:	cmp    BYTE PTR [rsp+0x4],0x0
  43811c:	je     438140 <strcmp@plt+0x349a8>
  43811e:	mov    rdi,r14
  438121:	add    rsp,0x8
  438125:	pop    rbx
  438126:	pop    r12
  438128:	pop    r13
  43812a:	pop    r14
  43812c:	pop    r15
  43812e:	pop    rbp
  43812f:	jmp    422c90 <strcmp@plt+0x1f4f8>
  438134:	lea    rax,[rip+0x2cc85]        # 464dc0 <strcmp@plt+0x61628>
  43813b:	cmp    DWORD PTR [rax],0x2
  43813e:	jge    43814f <strcmp@plt+0x349b7>
  438140:	add    rsp,0x8
  438144:	pop    rbx
  438145:	pop    r12
  438147:	pop    r13
  438149:	pop    r14
  43814b:	pop    r15
  43814d:	pop    rbp
  43814e:	ret    
  43814f:	mov    rdi,r14
  438152:	call   422e20 <strcmp@plt+0x1f688>
  438157:	lea    rsi,[rip+0x1583c]        # 44d99a <strcmp@plt+0x4a202>
  43815e:	jmp    437e8d <strcmp@plt+0x346f5>
  438163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43816d:	nop    DWORD PTR [rax]
  438170:	push   rbp
  438171:	push   r15
  438173:	push   r14
  438175:	push   r13
  438177:	push   r12
  438179:	push   rbx
  43817a:	push   rax
  43817b:	mov    ebp,edx
  43817d:	mov    r14d,esi
  438180:	mov    r12d,edi
  438183:	call   43a910 <strcmp@plt+0x37178>
  438188:	test   rax,rax
  43818b:	je     4381af <strcmp@plt+0x34a17>
  43818d:	mov    rbx,rax
  438190:	lea    r13,[rip+0x2cc29]        # 464dc0 <strcmp@plt+0x61628>
  438197:	mov    eax,DWORD PTR [r13+0x0]
  43819b:	cmp    BYTE PTR [rbx+0xc],bpl
  43819f:	jne    4381ca <strcmp@plt+0x34a32>
  4381a1:	cmp    eax,0x2
  4381a4:	jl     4381bb <strcmp@plt+0x34a23>
  4381a6:	lea    rsi,[rip+0x15982]        # 44db2f <strcmp@plt+0x4a397>
  4381ad:	jmp    43822c <strcmp@plt+0x34a94>
  4381af:	lea    rax,[rip+0x2cc0a]        # 464dc0 <strcmp@plt+0x61628>
  4381b6:	cmp    DWORD PTR [rax],0x2
  4381b9:	jge    438225 <strcmp@plt+0x34a8d>
  4381bb:	add    rsp,0x8
  4381bf:	pop    rbx
  4381c0:	pop    r12
  4381c2:	pop    r13
  4381c4:	pop    r14
  4381c6:	pop    r15
  4381c8:	pop    rbp
  4381c9:	ret    
  4381ca:	movzx  r15d,bpl
  4381ce:	cmp    eax,0x1
  4381d1:	jle    438246 <strcmp@plt+0x34aae>
  4381d3:	mov    rdx,QWORD PTR [rbx]
  4381d6:	cmp    bpl,0x1
  4381da:	lea    rax,[rip+0xc986]        # 444b67 <strcmp@plt+0x413cf>
  4381e1:	lea    rcx,[rip+0xc867]        # 444a4f <strcmp@plt+0x412b7>
  4381e8:	cmove  rcx,rax
  4381ec:	lea    rsi,[rip+0x15981]        # 44db74 <strcmp@plt+0x4a3dc>
  4381f3:	mov    edi,0x6
  4381f8:	xor    eax,eax
  4381fa:	call   42e520 <strcmp@plt+0x2ad88>
  4381ff:	mov    eax,DWORD PTR [r13+0x0]
  438203:	mov    BYTE PTR [rbx+0xc],bpl
  438207:	mov    DWORD PTR [rbx+0x8],r14d
  43820b:	cmp    eax,0x3
  43820e:	jl     43824e <strcmp@plt+0x34ab6>
  438210:	lea    rsi,[rip+0x159a3]        # 44dbba <strcmp@plt+0x4a422>
  438217:	mov    edi,0x7
  43821c:	xor    eax,eax
  43821e:	call   42e520 <strcmp@plt+0x2ad88>
  438223:	jmp    43824e <strcmp@plt+0x34ab6>
  438225:	lea    rsi,[rip+0x1589e]        # 44daca <strcmp@plt+0x4a332>
  43822c:	mov    edi,0x6
  438231:	xor    eax,eax
  438233:	add    rsp,0x8
  438237:	pop    rbx
  438238:	pop    r12
  43823a:	pop    r13
  43823c:	pop    r14
  43823e:	pop    r15
  438240:	pop    rbp
  438241:	jmp    42e520 <strcmp@plt+0x2ad88>
  438246:	mov    BYTE PTR [rbx+0xc],bpl
  43824a:	mov    DWORD PTR [rbx+0x8],r14d
  43824e:	lea    rax,[rip+0x301b3]        # 468408 <strcmp@plt+0x64c70>
  438255:	mov    rax,QWORD PTR [rax]
  438258:	mov    rdi,rbx
  43825b:	mov    esi,r12d
  43825e:	mov    edx,r14d
  438261:	mov    ecx,r15d
  438264:	call   QWORD PTR [rax+0x58]
  438267:	cmp    DWORD PTR [r13+0x0],0x3
  43826c:	jl     438281 <strcmp@plt+0x34ae9>
  43826e:	lea    rsi,[rip+0x15971]        # 44dbe6 <strcmp@plt+0x4a44e>
  438275:	mov    edi,0x7
  43827a:	xor    eax,eax
  43827c:	call   42e520 <strcmp@plt+0x2ad88>
  438281:	lea    rax,[rip+0x38308]        # 470590 <strcmp@plt+0x6cdf8>
  438288:	mov    rdi,QWORD PTR [rax]
  43828b:	mov    rsi,rbx
  43828e:	mov    edx,r12d
  438291:	mov    ecx,r14d
  438294:	mov    r8d,r15d
  438297:	add    rsp,0x8
  43829b:	pop    rbx
  43829c:	pop    r12
  43829e:	pop    r13
  4382a0:	pop    r14
  4382a2:	pop    r15
  4382a4:	pop    rbp
  4382a5:	jmp    407560 <strcmp@plt+0x3dc8>
  4382aa:	nop    WORD PTR [rax+rax*1+0x0]
  4382b0:	push   rbp
  4382b1:	push   r15
  4382b3:	push   r14
  4382b5:	push   r13
  4382b7:	push   r12
  4382b9:	push   rbx
  4382ba:	sub    rsp,0x18
  4382be:	mov    r13,r8
  4382c1:	mov    r12,rcx
  4382c4:	mov    r14,rdx
  4382c7:	mov    ebp,esi
  4382c9:	mov    ebx,edi
  4382cb:	mov    edi,esi
  4382cd:	call   43a910 <strcmp@plt+0x37178>
  4382d2:	test   rax,rax
  4382d5:	je     438455 <strcmp@plt+0x34cbd>
  4382db:	mov    r15,rax
  4382de:	mov    DWORD PTR [rsp+0x4],ebx
  4382e2:	mov    rbx,r13
  4382e5:	mov    rdi,r14
  4382e8:	call   422ef0 <strcmp@plt+0x1f758>
  4382ed:	lea    rcx,[rip+0x3821c]        # 470510 <strcmp@plt+0x6cd78>
  4382f4:	test   ax,ax
  4382f7:	je     438315 <strcmp@plt+0x34b7d>
  4382f9:	mov    r13d,DWORD PTR [rcx]
  4382fc:	test   r13d,r13d
  4382ff:	je     438315 <strcmp@plt+0x34b7d>
  438301:	mov    rdi,r14
  438304:	call   422ef0 <strcmp@plt+0x1f758>
  438309:	movzx  eax,ax
  43830c:	cmp    r13d,eax
  43830f:	jne    438488 <strcmp@plt+0x34cf0>
  438315:	mov    rdi,r12
  438318:	call   422ef0 <strcmp@plt+0x1f758>
  43831d:	test   ax,ax
  438320:	je     438342 <strcmp@plt+0x34baa>
  438322:	lea    rax,[rip+0x381e7]        # 470510 <strcmp@plt+0x6cd78>
  438329:	mov    ebp,DWORD PTR [rax]
  43832b:	test   ebp,ebp
  43832d:	je     438342 <strcmp@plt+0x34baa>
  43832f:	mov    rdi,r12
  438332:	call   422ef0 <strcmp@plt+0x1f758>
  438337:	movzx  eax,ax
  43833a:	cmp    ebp,eax
  43833c:	jne    4384c2 <strcmp@plt+0x34d2a>
  438342:	mov    r13,rbx
  438345:	mov    rdi,rbx
  438348:	call   422ef0 <strcmp@plt+0x1f758>
  43834d:	test   ax,ax
  438350:	je     438372 <strcmp@plt+0x34bda>
  438352:	lea    rax,[rip+0x381b7]        # 470510 <strcmp@plt+0x6cd78>
  438359:	mov    ebp,DWORD PTR [rax]
  43835b:	test   ebp,ebp
  43835d:	je     438372 <strcmp@plt+0x34bda>
  43835f:	mov    rdi,r13
  438362:	call   422ef0 <strcmp@plt+0x1f758>
  438367:	movzx  eax,ax
  43836a:	cmp    ebp,eax
  43836c:	jne    4384f8 <strcmp@plt+0x34d60>
  438372:	lea    rbx,[rip+0x2ca47]        # 464dc0 <strcmp@plt+0x61628>
  438379:	cmp    DWORD PTR [rbx],0x2
  43837c:	jl     4383f2 <strcmp@plt+0x34c5a>
  43837e:	cmp    BYTE PTR [rsp+0x4],0x1
  438383:	lea    rax,[rip+0x15a37]        # 44ddc1 <strcmp@plt+0x4a629>
  43838a:	lea    rbp,[rip+0x15a36]        # 44ddc7 <strcmp@plt+0x4a62f>
  438391:	cmove  rbp,rax
  438395:	mov    rdi,r14
  438398:	call   422e20 <strcmp@plt+0x1f688>
  43839d:	mov    QWORD PTR [rsp+0x10],rax
  4383a2:	mov    rdi,r12
  4383a5:	call   422e20 <strcmp@plt+0x1f688>
  4383aa:	mov    QWORD PTR [rsp+0x8],rax
  4383af:	mov    rdi,r13
  4383b2:	call   422e20 <strcmp@plt+0x1f688>
  4383b7:	lea    rsi,[rip+0x159c6]        # 44dd84 <strcmp@plt+0x4a5ec>
  4383be:	mov    edi,0x6
  4383c3:	mov    rdx,rbp
  4383c6:	mov    rcx,QWORD PTR [rsp+0x10]
  4383cb:	mov    r8,QWORD PTR [rsp+0x8]
  4383d0:	mov    r9,rax
  4383d3:	xor    eax,eax
  4383d5:	call   42e520 <strcmp@plt+0x2ad88>
  4383da:	cmp    DWORD PTR [rbx],0x3
  4383dd:	jl     4383f2 <strcmp@plt+0x34c5a>
  4383df:	lea    rsi,[rip+0x159e9]        # 44ddcf <strcmp@plt+0x4a637>
  4383e6:	mov    edi,0x7
  4383eb:	xor    eax,eax
  4383ed:	call   42e520 <strcmp@plt+0x2ad88>
  4383f2:	lea    rax,[rip+0x3000f]        # 468408 <strcmp@plt+0x64c70>
  4383f9:	mov    rax,QWORD PTR [rax]
  4383fc:	movzx  ebp,BYTE PTR [rsp+0x4]
  438401:	mov    edi,ebp
  438403:	mov    rsi,r15
  438406:	mov    rdx,r14
  438409:	mov    rcx,r12
  43840c:	mov    r8,r13
  43840f:	call   QWORD PTR [rax+0x48]
  438412:	cmp    DWORD PTR [rbx],0x3
  438415:	jl     43842a <strcmp@plt+0x34c92>
  438417:	lea    rsi,[rip+0x159de]        # 44ddfc <strcmp@plt+0x4a664>
  43841e:	mov    edi,0x7
  438423:	xor    eax,eax
  438425:	call   42e520 <strcmp@plt+0x2ad88>
  43842a:	lea    rax,[rip+0x3815f]        # 470590 <strcmp@plt+0x6cdf8>
  438431:	mov    rdi,QWORD PTR [rax]
  438434:	mov    esi,ebp
  438436:	mov    rdx,r15
  438439:	mov    rcx,r14
  43843c:	mov    r8,r12
  43843f:	mov    r9,r13
  438442:	add    rsp,0x18
  438446:	pop    rbx
  438447:	pop    r12
  438449:	pop    r13
  43844b:	pop    r14
  43844d:	pop    r15
  43844f:	pop    rbp
  438450:	jmp    4075c0 <strcmp@plt+0x3e28>
  438455:	lea    rax,[rip+0x2c964]        # 464dc0 <strcmp@plt+0x61628>
  43845c:	cmp    DWORD PTR [rax],0x2
  43845f:	jl     438546 <strcmp@plt+0x34dae>
  438465:	lea    rsi,[rip+0x157ae]        # 44dc1a <strcmp@plt+0x4a482>
  43846c:	mov    edi,0x6
  438471:	mov    edx,ebp
  438473:	xor    eax,eax
  438475:	add    rsp,0x18
  438479:	pop    rbx
  43847a:	pop    r12
  43847c:	pop    r13
  43847e:	pop    r14
  438480:	pop    r15
  438482:	pop    rbp
  438483:	jmp    42e520 <strcmp@plt+0x2ad88>
  438488:	lea    rax,[rip+0x2c931]        # 464dc0 <strcmp@plt+0x61628>
  43848f:	cmp    DWORD PTR [rax],0x0
  438492:	jle    438546 <strcmp@plt+0x34dae>
  438498:	mov    rdi,r14
  43849b:	call   422ef0 <strcmp@plt+0x1f758>
  4384a0:	cmp    ax,0x2
  4384a4:	lea    rax,[rip+0xb498]        # 443943 <strcmp@plt+0x401ab>
  4384ab:	lea    rdx,[rip+0xb496]        # 443948 <strcmp@plt+0x401b0>
  4384b2:	cmove  rdx,rax
  4384b6:	mov    rcx,QWORD PTR [r15]
  4384b9:	lea    rsi,[rip+0x157b9]        # 44dc79 <strcmp@plt+0x4a4e1>
  4384c0:	jmp    43852c <strcmp@plt+0x34d94>
  4384c2:	lea    rax,[rip+0x2c8f7]        # 464dc0 <strcmp@plt+0x61628>
  4384c9:	cmp    DWORD PTR [rax],0x0
  4384cc:	jle    438546 <strcmp@plt+0x34dae>
  4384ce:	mov    rdi,r12
  4384d1:	call   422ef0 <strcmp@plt+0x1f758>
  4384d6:	cmp    ax,0x2
  4384da:	lea    rax,[rip+0xb462]        # 443943 <strcmp@plt+0x401ab>
  4384e1:	lea    rdx,[rip+0xb460]        # 443948 <strcmp@plt+0x401b0>
  4384e8:	cmove  rdx,rax
  4384ec:	mov    rcx,QWORD PTR [r15]
  4384ef:	lea    rsi,[rip+0x157ee]        # 44dce4 <strcmp@plt+0x4a54c>
  4384f6:	jmp    43852c <strcmp@plt+0x34d94>
  4384f8:	lea    rax,[rip+0x2c8c1]        # 464dc0 <strcmp@plt+0x61628>
  4384ff:	cmp    DWORD PTR [rax],0x0
  438502:	jle    438546 <strcmp@plt+0x34dae>
  438504:	mov    rdi,r13
  438507:	call   422ef0 <strcmp@plt+0x1f758>
  43850c:	cmp    ax,0x2
  438510:	lea    rax,[rip+0xb42c]        # 443943 <strcmp@plt+0x401ab>
  438517:	lea    rdx,[rip+0xb42a]        # 443948 <strcmp@plt+0x401b0>
  43851e:	cmove  rdx,rax
  438522:	mov    rcx,QWORD PTR [r15]
  438525:	lea    rsi,[rip+0x15828]        # 44dd54 <strcmp@plt+0x4a5bc>
  43852c:	mov    edi,0x5
  438531:	xor    eax,eax
  438533:	add    rsp,0x18
  438537:	pop    rbx
  438538:	pop    r12
  43853a:	pop    r13
  43853c:	pop    r14
  43853e:	pop    r15
  438540:	pop    rbp
  438541:	jmp    42e520 <strcmp@plt+0x2ad88>
  438546:	add    rsp,0x18
  43854a:	pop    rbx
  43854b:	pop    r12
  43854d:	pop    r13
  43854f:	pop    r14
  438551:	pop    r15
  438553:	pop    rbp
  438554:	ret    
  438555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43855f:	nop
  438560:	push   rbp
  438561:	push   r15
  438563:	push   r14
  438565:	push   r13
  438567:	push   r12
  438569:	push   rbx
  43856a:	sub    rsp,0x28
  43856e:	mov    r14d,esi
  438571:	mov    r13,rdi
  438574:	lea    rdi,[rip+0xfffffffffffea715]        # 422c90 <strcmp@plt+0x1f4f8>
  43857b:	call   42b9b0 <strcmp@plt+0x28218>
  438580:	mov    rbp,rax
  438583:	lea    rdi,[rsp+0x8]
  438588:	call   403750 <getifaddrs@plt>
  43858d:	test   eax,eax
  43858f:	je     4385c8 <strcmp@plt+0x34e30>
  438591:	lea    rax,[rip+0x2c828]        # 464dc0 <strcmp@plt+0x61628>
  438598:	cmp    DWORD PTR [rax],0x2
  43859b:	jl     438710 <strcmp@plt+0x34f78>
  4385a1:	call   403040 <__errno_location@plt>
  4385a6:	mov    edi,DWORD PTR [rax]
  4385a8:	call   403170 <strerror@plt>
  4385ad:	lea    rsi,[rip+0x158e6]        # 44de9a <strcmp@plt+0x4a702>
  4385b4:	mov    edi,0x6
  4385b9:	mov    rdx,rax
  4385bc:	xor    eax,eax
  4385be:	call   42e520 <strcmp@plt+0x2ad88>
  4385c3:	jmp    438710 <strcmp@plt+0x34f78>
  4385c8:	mov    r12,QWORD PTR [rsp+0x8]
  4385cd:	test   r12,r12
  4385d0:	jne    43860d <strcmp@plt+0x34e75>
  4385d2:	xor    edi,edi
  4385d4:	jmp    4386cd <strcmp@plt+0x34f35>
  4385d9:	xor    eax,eax
  4385db:	call   422c80 <strcmp@plt+0x1f4e8>
  4385e0:	mov    rbx,rax
  4385e3:	mov    rdi,rax
  4385e6:	mov    rsi,rbp
  4385e9:	call   423860 <strcmp@plt+0x200c8>
  4385ee:	mov    rdi,rbx
  4385f1:	mov    rbp,r15
  4385f4:	mov    rsi,r15
  4385f7:	call   42baa0 <strcmp@plt+0x28308>
  4385fc:	nop    DWORD PTR [rax+0x0]
  438600:	mov    r12,QWORD PTR [r12]
  438604:	test   r12,r12
  438607:	je     4386c8 <strcmp@plt+0x34f30>
  43860d:	mov    rbx,QWORD PTR [r12+0x18]
  438612:	test   rbx,rbx
  438615:	je     438600 <strcmp@plt+0x34e68>
  438617:	test   BYTE PTR [r12+0x10],0x1
  43861d:	je     438600 <strcmp@plt+0x34e68>
  43861f:	movzx  r15d,WORD PTR [rbx]
  438623:	cmp    r15d,r14d
  438626:	jne    438600 <strcmp@plt+0x34e68>
  438628:	mov    rdi,QWORD PTR [r12+0x8]
  43862d:	mov    rsi,r13
  438630:	call   403798 <strcmp@plt>
  438635:	test   eax,eax
  438637:	jne    438600 <strcmp@plt+0x34e68>
  438639:	cmp    r15w,0xa
  43863e:	je     438660 <strcmp@plt+0x34ec8>
  438640:	cmp    r15w,0x2
  438645:	jne    438600 <strcmp@plt+0x34e68>
  438647:	mov    r15,rbp
  43864a:	add    rbx,0x4
  43864e:	lea    rbp,[rsp+0x10]
  438653:	mov    rdi,rbp
  438656:	mov    rsi,rbx
  438659:	mov    edx,0x2
  43865e:	jmp    438677 <strcmp@plt+0x34edf>
  438660:	mov    r15,rbp
  438663:	add    rbx,0x8
  438667:	lea    rbp,[rsp+0x10]
  43866c:	mov    rdi,rbp
  43866f:	mov    rsi,rbx
  438672:	mov    edx,0xa
  438677:	call   423c10 <strcmp@plt+0x20478>
  43867c:	mov    rdi,rbp
  43867f:	call   4244c0 <strcmp@plt+0x20d28>
  438684:	cmp    eax,0x1
  438687:	jne    4385d9 <strcmp@plt+0x34e41>
  43868d:	lea    rax,[rip+0x2c72c]        # 464dc0 <strcmp@plt+0x61628>
  438694:	cmp    DWORD PTR [rax],0x2
  438697:	mov    rbp,r15
  43869a:	jl     438600 <strcmp@plt+0x34e68>
  4386a0:	lea    rdi,[rsp+0x10]
  4386a5:	call   423c50 <strcmp@plt+0x204b8>
  4386aa:	mov    edi,0x6
  4386af:	lea    rsi,[rip+0x15812]        # 44dec8 <strcmp@plt+0x4a730>
  4386b6:	mov    rdx,r13
  4386b9:	mov    rcx,rax
  4386bc:	xor    eax,eax
  4386be:	call   42e520 <strcmp@plt+0x2ad88>
  4386c3:	jmp    438600 <strcmp@plt+0x34e68>
  4386c8:	mov    rdi,QWORD PTR [rsp+0x8]
  4386cd:	call   4036b0 <freeifaddrs@plt>
  4386d2:	cmp    DWORD PTR [rbp+0x18],0x0
  4386d6:	jne    438710 <strcmp@plt+0x34f78>
  4386d8:	lea    rax,[rip+0x2c6e1]        # 464dc0 <strcmp@plt+0x61628>
  4386df:	cmp    DWORD PTR [rax],0x3
  4386e2:	jl     438710 <strcmp@plt+0x34f78>
  4386e4:	cmp    r14d,0x2
  4386e8:	lea    rax,[rip+0xb254]        # 443943 <strcmp@plt+0x401ab>
  4386ef:	lea    rdx,[rip+0xb252]        # 443948 <strcmp@plt+0x401b0>
  4386f6:	cmove  rdx,rax
  4386fa:	lea    rsi,[rip+0x15809]        # 44df0a <strcmp@plt+0x4a772>
  438701:	mov    edi,0x7
  438706:	mov    rcx,r13
  438709:	xor    eax,eax
  43870b:	call   42e520 <strcmp@plt+0x2ad88>
  438710:	mov    rax,rbp
  438713:	add    rsp,0x28
  438717:	pop    rbx
  438718:	pop    r12
  43871a:	pop    r13
  43871c:	pop    r14
  43871e:	pop    r15
  438720:	pop    rbp
  438721:	ret    
  438722:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43872c:	nop    DWORD PTR [rax+0x0]
  438730:	push   rbp
  438731:	push   r15
  438733:	push   r14
  438735:	push   rbx
  438736:	sub    rsp,0x2038
  43873d:	mov    rbx,rdi
  438740:	call   422ef0 <strcmp@plt+0x1f758>
  438745:	mov    ebp,eax
  438747:	mov    QWORD PTR [rsp],0x10
  43874f:	cmp    ax,0x2
  438753:	mov    eax,0x40
  438758:	mov    ecx,0x400
  43875d:	cmove  ecx,eax
  438760:	mov    DWORD PTR [rsp+0x8],ecx
  438764:	mov    edi,0x10
  438769:	mov    esi,0x3
  43876e:	xor    edx,edx
  438770:	call   4030f0 <socket@plt>
  438775:	test   eax,eax
  438777:	js     4388a5 <strcmp@plt+0x3510d>
  43877d:	mov    r15d,eax
  438780:	mov    rsi,rsp
  438783:	mov    edi,eax
  438785:	mov    edx,0xc
  43878a:	call   403090 <bind@plt>
  43878f:	lea    r14,[rsp+0x30]
  438794:	mov    edx,0x1000
  438799:	mov    rdi,r14
  43879c:	xor    esi,esi
  43879e:	call   403260 <memset@plt>
  4387a3:	cmp    bp,0x2
  4387a7:	mov    DWORD PTR [rsp+0x34],0x1001a
  4387af:	mov    BYTE PTR [rsp+0x40],bpl
  4387b4:	mov    DWORD PTR [rsp+0x44],0x10004fe
  4387bc:	mov    WORD PTR [rsp+0x42],0x0
  4387c3:	mov    eax,0x20
  4387c8:	mov    ecx,0x80
  4387cd:	cmove  ecx,eax
  4387d0:	mov    BYTE PTR [rsp+0x41],cl
  4387d4:	mov    WORD PTR [rsp+0x4e],0x1
  4387db:	movzx  edi,bp
  4387de:	call   423ab0 <strcmp@plt+0x20318>
  4387e3:	movzx  eax,al
  4387e6:	add    eax,0x4
  4387e9:	mov    WORD PTR [rsp+0x4c],ax
  4387ee:	lea    rdi,[rsp+0x50]
  4387f3:	mov    rsi,rbx
  4387f6:	call   423480 <strcmp@plt+0x1fce8>
  4387fb:	movzx  edx,WORD PTR [rsp+0x4c]
  438800:	add    rdx,0x1c
  438804:	mov    DWORD PTR [rsp+0x30],edx
  438808:	mov    edi,r15d
  43880b:	mov    rsi,r14
  43880e:	xor    ecx,ecx
  438810:	call   403230 <send@plt>
  438815:	test   eax,eax
  438817:	js     4388bc <strcmp@plt+0x35124>
  43881d:	lea    r14,[rsp+0x1030]
  438825:	mov    edx,0x1000
  43882a:	mov    edi,r15d
  43882d:	mov    rsi,r14
  438830:	mov    ecx,0x40
  438835:	call   403160 <recv@plt>
  43883a:	test   eax,eax
  43883c:	jle    438915 <strcmp@plt+0x3517d>
  438842:	cmp    eax,0x10
  438845:	jb     438825 <strcmp@plt+0x3508d>
  438847:	mov    rcx,r14
  43884a:	jmp    438860 <strcmp@plt+0x350c8>
  43884c:	nop    DWORD PTR [rax+0x0]
  438850:	add    edx,0x3
  438853:	and    edx,0xfffffffc
  438856:	sub    eax,edx
  438858:	add    rcx,rdx
  43885b:	cmp    eax,0xf
  43885e:	jbe    438825 <strcmp@plt+0x3508d>
  438860:	mov    edx,DWORD PTR [rcx]
  438862:	cmp    edx,0x10
  438865:	jb     438825 <strcmp@plt+0x3508d>
  438867:	cmp    edx,eax
  438869:	ja     438825 <strcmp@plt+0x3508d>
  43886b:	cmp    WORD PTR [rcx+0x4],0x18
  438870:	jne    438850 <strcmp@plt+0x350b8>
  438872:	lea    edi,[rdx-0x1c]
  438875:	cmp    edi,0x4
  438878:	jl     438850 <strcmp@plt+0x350b8>
  43887a:	lea    rsi,[rcx+0x1c]
  43887e:	xchg   ax,ax
  438880:	movzx  ebp,WORD PTR [rsi]
  438883:	cmp    ebp,0x4
  438886:	jb     438850 <strcmp@plt+0x350b8>
  438888:	cmp    edi,ebp
  43888a:	jl     438850 <strcmp@plt+0x350b8>
  43888c:	cmp    WORD PTR [rsi+0x2],0x7
  438891:	je     4388ea <strcmp@plt+0x35152>
  438893:	add    ebp,0x3
  438896:	and    ebp,0xfffffffc
  438899:	sub    edi,ebp
  43889b:	add    rsi,rbp
  43889e:	cmp    edi,0x3
  4388a1:	jg     438880 <strcmp@plt+0x350e8>
  4388a3:	jmp    438850 <strcmp@plt+0x350b8>
  4388a5:	lea    rsi,[rip+0x1569f]        # 44df4b <strcmp@plt+0x4a7b3>
  4388ac:	xor    ebx,ebx
  4388ae:	mov    edi,0x2
  4388b3:	xor    eax,eax
  4388b5:	call   42e520 <strcmp@plt+0x2ad88>
  4388ba:	jmp    43891f <strcmp@plt+0x35187>
  4388bc:	call   403040 <__errno_location@plt>
  4388c1:	mov    edi,DWORD PTR [rax]
  4388c3:	call   403170 <strerror@plt>
  4388c8:	lea    rsi,[rip+0x156b5]        # 44df84 <strcmp@plt+0x4a7ec>
  4388cf:	xor    ebx,ebx
  4388d1:	mov    edi,0x1
  4388d6:	mov    rdx,rax
  4388d9:	xor    eax,eax
  4388db:	call   42e520 <strcmp@plt+0x2ad88>
  4388e0:	mov    edi,r15d
  4388e3:	call   403770 <close@plt>
  4388e8:	jmp    43891f <strcmp@plt+0x35187>
  4388ea:	add    rsi,0x4
  4388ee:	movzx  edx,BYTE PTR [rsp+0x40]
  4388f3:	lea    rbx,[rsp+0x10]
  4388f8:	mov    rdi,rbx
  4388fb:	call   423850 <strcmp@plt+0x200b8>
  438900:	mov    edi,r15d
  438903:	call   403770 <close@plt>
  438908:	mov    rdi,rbx
  43890b:	call   423440 <strcmp@plt+0x1fca8>
  438910:	mov    rbx,rax
  438913:	jmp    43891f <strcmp@plt+0x35187>
  438915:	mov    edi,r15d
  438918:	call   403770 <close@plt>
  43891d:	xor    ebx,ebx
  43891f:	mov    rax,rbx
  438922:	add    rsp,0x2038
  438929:	pop    rbx
  43892a:	pop    r14
  43892c:	pop    r15
  43892e:	pop    rbp
  43892f:	ret    
  438930:	push   rbp
  438931:	push   r15
  438933:	push   r14
  438935:	push   r13
  438937:	push   r12
  438939:	push   rbx
  43893a:	sub    rsp,0x2048
  438941:	mov    ebp,esi
  438943:	mov    r15,rdi
  438946:	vmovups ymm0,YMMWORD PTR [rip+0x158ba]        # 44e208 <strcmp@plt+0x4aa70>
  43894e:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  438954:	vzeroupper 
  438957:	call   4030c0 <if_nametoindex@plt>
  43895c:	mov    DWORD PTR [rsp+0x4],eax
  438960:	mov    QWORD PTR [rsp+0x10],0x10
  438969:	cmp    ebp,0x2
  43896c:	mov    eax,0x40
  438971:	mov    ecx,0x400
  438976:	cmove  ecx,eax
  438979:	mov    DWORD PTR [rsp+0x18],ecx
  43897d:	mov    edi,0x10
  438982:	mov    esi,0x3
  438987:	xor    edx,edx
  438989:	call   4030f0 <socket@plt>
  43898e:	test   eax,eax
  438990:	js     438b7d <strcmp@plt+0x353e5>
  438996:	mov    ebx,eax
  438998:	lea    rsi,[rsp+0x10]
  43899d:	mov    edi,eax
  43899f:	mov    edx,0xc
  4389a4:	call   403090 <bind@plt>
  4389a9:	lea    r14,[rsp+0x40]
  4389ae:	mov    edx,0x1000
  4389b3:	mov    rdi,r14
  4389b6:	xor    esi,esi
  4389b8:	call   403260 <memset@plt>
  4389bd:	movabs rax,0x301001a0000001c
  4389c7:	mov    QWORD PTR [rsp+0x40],rax
  4389cc:	mov    BYTE PTR [rsp+0x50],bpl
  4389d1:	mov    BYTE PTR [rsp+0x57],0x1
  4389d6:	mov    DWORD PTR [rsp+0x53],0x4fe00
  4389de:	mov    WORD PTR [rsp+0x51],0x0
  4389e5:	mov    edx,0x1c
  4389ea:	mov    edi,ebx
  4389ec:	mov    rsi,r14
  4389ef:	xor    ecx,ecx
  4389f1:	call   403230 <send@plt>
  4389f6:	test   eax,eax
  4389f8:	js     438b94 <strcmp@plt+0x353fc>
  4389fe:	mov    QWORD PTR [rsp+0x8],r15
  438a03:	lea    rsi,[rsp+0x1040]
  438a0b:	mov    edx,0x1000
  438a10:	mov    edi,ebx
  438a12:	mov    ecx,0x40
  438a17:	call   403160 <recv@plt>
  438a1c:	mov    rbp,rax
  438a1f:	test   ebp,ebp
  438a21:	jle    438bba <strcmp@plt+0x35422>
  438a27:	mov    DWORD PTR [rsp],ebx
  438a2a:	cmp    ebp,0x10
  438a2d:	jae    438a5c <strcmp@plt+0x352c4>
  438a2f:	nop
  438a30:	mov    edx,0x1000
  438a35:	mov    ebx,DWORD PTR [rsp]
  438a38:	mov    edi,ebx
  438a3a:	lea    rsi,[rsp+0x1040]
  438a42:	mov    ecx,0x40
  438a47:	call   403160 <recv@plt>
  438a4c:	mov    rbp,rax
  438a4f:	test   ebp,ebp
  438a51:	jle    438bba <strcmp@plt+0x35422>
  438a57:	cmp    ebp,0x10
  438a5a:	jb     438a30 <strcmp@plt+0x35298>
  438a5c:	lea    r15,[rsp+0x1040]
  438a64:	jmp    438a86 <strcmp@plt+0x352ee>
  438a66:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438a70:	mov    r14d,DWORD PTR [r15]
  438a73:	add    r14d,0x3
  438a77:	and    r14d,0xfffffffc
  438a7b:	sub    ebp,r14d
  438a7e:	add    r15,r14
  438a81:	cmp    ebp,0xf
  438a84:	jbe    438a30 <strcmp@plt+0x35298>
  438a86:	mov    r14d,DWORD PTR [r15]
  438a89:	cmp    r14d,0x10
  438a8d:	jb     438a30 <strcmp@plt+0x35298>
  438a8f:	cmp    r14d,ebp
  438a92:	ja     438a30 <strcmp@plt+0x35298>
  438a94:	cmp    WORD PTR [r15+0x4],0x18
  438a9a:	jne    438a73 <strcmp@plt+0x352db>
  438a9c:	add    r14d,0xffffffe4
  438aa0:	cmp    r14d,0x4
  438aa4:	jl     438a70 <strcmp@plt+0x352d8>
  438aa6:	lea    rbx,[r15+0x1c]
  438aaa:	xor    r12d,r12d
  438aad:	xor    r13d,r13d
  438ab0:	jmp    438aeb <strcmp@plt+0x35353>
  438ab2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438abc:	nop    DWORD PTR [rax+0x0]
  438ac0:	lea    rsi,[rbx+0x4]
  438ac4:	movzx  edx,BYTE PTR [rsp+0x50]
  438ac9:	lea    rdi,[rsp+0x20]
  438ace:	call   423850 <strcmp@plt+0x200b8>
  438ad3:	inc    r12d
  438ad6:	movzx  eax,WORD PTR [rbx]
  438ad9:	add    eax,0x3
  438adc:	and    eax,0xfffffffc
  438adf:	sub    r14d,eax
  438ae2:	add    rbx,rax
  438ae5:	cmp    r14d,0x3
  438ae9:	jle    438b20 <strcmp@plt+0x35388>
  438aeb:	movzx  eax,WORD PTR [rbx]
  438aee:	cmp    eax,0x4
  438af1:	jb     438b20 <strcmp@plt+0x35388>
  438af3:	cmp    r14d,eax
  438af6:	jl     438b20 <strcmp@plt+0x35388>
  438af8:	movzx  ecx,WORD PTR [rbx+0x2]
  438afc:	cmp    cx,0x5
  438b00:	je     438ac0 <strcmp@plt+0x35328>
  438b02:	cmp    cx,0x4
  438b06:	jne    438ad9 <strcmp@plt+0x35341>
  438b08:	mov    r13d,DWORD PTR [rbx+0x4]
  438b0c:	inc    r12d
  438b0f:	jmp    438ad9 <strcmp@plt+0x35341>
  438b11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438b1b:	nop    DWORD PTR [rax+rax*1+0x0]
  438b20:	cmp    r13d,DWORD PTR [rsp+0x4]
  438b25:	jne    438a70 <strcmp@plt+0x352d8>
  438b2b:	cmp    r12d,0x2
  438b2f:	jne    438a70 <strcmp@plt+0x352d8>
  438b35:	mov    edi,DWORD PTR [rsp]
  438b38:	call   403770 <close@plt>
  438b3d:	lea    rax,[rip+0x2c27c]        # 464dc0 <strcmp@plt+0x61628>
  438b44:	cmp    DWORD PTR [rax],0x3
  438b47:	jl     438b6e <strcmp@plt+0x353d6>
  438b49:	lea    rdi,[rsp+0x20]
  438b4e:	call   422e20 <strcmp@plt+0x1f688>
  438b53:	lea    rsi,[rip+0x154fc]        # 44e056 <strcmp@plt+0x4a8be>
  438b5a:	mov    edi,0x7
  438b5f:	mov    rdx,QWORD PTR [rsp+0x8]
  438b64:	mov    rcx,rax
  438b67:	xor    eax,eax
  438b69:	call   42e520 <strcmp@plt+0x2ad88>
  438b6e:	lea    rdi,[rsp+0x20]
  438b73:	call   423440 <strcmp@plt+0x1fca8>
  438b78:	mov    rbx,rax
  438b7b:	jmp    438be7 <strcmp@plt+0x3544f>
  438b7d:	lea    rsi,[rip+0x15434]        # 44dfb8 <strcmp@plt+0x4a820>
  438b84:	xor    ebx,ebx
  438b86:	mov    edi,0x2
  438b8b:	xor    eax,eax
  438b8d:	call   42e520 <strcmp@plt+0x2ad88>
  438b92:	jmp    438be7 <strcmp@plt+0x3544f>
  438b94:	call   403040 <__errno_location@plt>
  438b99:	mov    edi,DWORD PTR [rax]
  438b9b:	call   403170 <strerror@plt>
  438ba0:	lea    rsi,[rip+0x15447]        # 44dfee <strcmp@plt+0x4a856>
  438ba7:	xor    ebx,ebx
  438ba9:	mov    edi,0x1
  438bae:	mov    rdx,rax
  438bb1:	xor    eax,eax
  438bb3:	call   42e520 <strcmp@plt+0x2ad88>
  438bb8:	jmp    438be7 <strcmp@plt+0x3544f>
  438bba:	lea    rax,[rip+0x2c1ff]        # 464dc0 <strcmp@plt+0x61628>
  438bc1:	cmp    DWORD PTR [rax],0x3
  438bc4:	jl     438bde <strcmp@plt+0x35446>
  438bc6:	lea    rsi,[rip+0x15452]        # 44e01f <strcmp@plt+0x4a887>
  438bcd:	mov    edi,0x7
  438bd2:	mov    rdx,QWORD PTR [rsp+0x8]
  438bd7:	xor    eax,eax
  438bd9:	call   42e520 <strcmp@plt+0x2ad88>
  438bde:	mov    edi,ebx
  438be0:	call   403770 <close@plt>
  438be5:	xor    ebx,ebx
  438be7:	mov    rax,rbx
  438bea:	add    rsp,0x2048
  438bf1:	pop    rbx
  438bf2:	pop    r12
  438bf4:	pop    r13
  438bf6:	pop    r14
  438bf8:	pop    r15
  438bfa:	pop    rbp
  438bfb:	ret    
  438bfc:	nop    DWORD PTR [rax+0x0]
  438c00:	push   rbp
  438c01:	push   r15
  438c03:	push   r14
  438c05:	push   r13
  438c07:	push   r12
  438c09:	push   rbx
  438c0a:	push   rax
  438c0b:	mov    esi,0xa
  438c10:	call   438560 <strcmp@plt+0x34dc8>
  438c15:	mov    r15,rax
  438c18:	lea    r12,[rip+0x36f11]        # 46fb30 <strcmp@plt+0x6c398>
  438c1f:	mov    eax,DWORD PTR [r12]
  438c23:	test   eax,eax
  438c25:	je     438c34 <strcmp@plt+0x3549c>
  438c27:	xor    r14d,r14d
  438c2a:	cmp    eax,0x1
  438c2d:	je     438c89 <strcmp@plt+0x354f1>
  438c2f:	jmp    438ce0 <strcmp@plt+0x35548>
  438c34:	mov    rbx,QWORD PTR [r15+0x8]
  438c38:	cmp    rbx,r15
  438c3b:	je     438c70 <strcmp@plt+0x354d8>
  438c3d:	mov    ebp,0xe0
  438c42:	xor    r14d,r14d
  438c45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438c4f:	nop
  438c50:	mov    r13,QWORD PTR [rbx+0x10]
  438c54:	mov    rdi,r13
  438c57:	call   423a60 <strcmp@plt+0x202c8>
  438c5c:	mov    eax,DWORD PTR [rax]
  438c5e:	and    eax,ebp
  438c60:	cmp    eax,0x20
  438c63:	je     438c75 <strcmp@plt+0x354dd>
  438c65:	mov    rbx,QWORD PTR [rbx+0x8]
  438c69:	cmp    rbx,r15
  438c6c:	jne    438c50 <strcmp@plt+0x354b8>
  438c6e:	jmp    438c80 <strcmp@plt+0x354e8>
  438c70:	xor    r14d,r14d
  438c73:	jmp    438c80 <strcmp@plt+0x354e8>
  438c75:	mov    rdi,r13
  438c78:	call   423440 <strcmp@plt+0x1fca8>
  438c7d:	mov    r14,rax
  438c80:	mov    eax,DWORD PTR [r12]
  438c84:	cmp    eax,0x1
  438c87:	jne    438ce0 <strcmp@plt+0x35548>
  438c89:	mov    rbx,QWORD PTR [r15+0x8]
  438c8d:	cmp    rbx,r15
  438c90:	je     438ce0 <strcmp@plt+0x35548>
  438c92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438c9c:	nop    DWORD PTR [rax+0x0]
  438ca0:	mov    r12,QWORD PTR [rbx+0x10]
  438ca4:	mov    rdi,r12
  438ca7:	call   423a60 <strcmp@plt+0x202c8>
  438cac:	mov    eax,DWORD PTR [rax]
  438cae:	mov    ecx,eax
  438cb0:	and    ecx,0xc0ff
  438cb6:	cmp    ecx,0xc0fe
  438cbc:	je     438cd5 <strcmp@plt+0x3553d>
  438cbe:	and    eax,0xfe
  438cc3:	cmp    eax,0xfc
  438cc8:	je     438cd5 <strcmp@plt+0x3553d>
  438cca:	mov    rbx,QWORD PTR [rbx+0x8]
  438cce:	cmp    rbx,r15
  438cd1:	jne    438ca0 <strcmp@plt+0x35508>
  438cd3:	jmp    438ce0 <strcmp@plt+0x35548>
  438cd5:	mov    rdi,r12
  438cd8:	call   423440 <strcmp@plt+0x1fca8>
  438cdd:	mov    r14,rax
  438ce0:	mov    rdi,r15
  438ce3:	call   42bff0 <strcmp@plt+0x28858>
  438ce8:	mov    rax,r14
  438ceb:	add    rsp,0x8
  438cef:	pop    rbx
  438cf0:	pop    r12
  438cf2:	pop    r13
  438cf4:	pop    r14
  438cf6:	pop    r15
  438cf8:	pop    rbp
  438cf9:	ret    
  438cfa:	nop    WORD PTR [rax+rax*1+0x0]
  438d00:	push   rbp
  438d01:	push   r15
  438d03:	push   r14
  438d05:	push   rbx
  438d06:	sub    rsp,0x2008
  438d0d:	mov    rbx,rdi
  438d10:	call   4030c0 <if_nametoindex@plt>
  438d15:	test   eax,eax
  438d17:	je     438d3f <strcmp@plt+0x355a7>
  438d19:	mov    ebp,eax
  438d1b:	xor    eax,eax
  438d1d:	call   435650 <strcmp@plt+0x31eb8>
  438d22:	cmp    eax,0xfffffff7
  438d25:	jne    438d5d <strcmp@plt+0x355c5>
  438d27:	lea    rsi,[rip+0x1538a]        # 44e0b8 <strcmp@plt+0x4a920>
  438d2e:	mov    edi,0x2
  438d33:	xor    eax,eax
  438d35:	call   42e520 <strcmp@plt+0x2ad88>
  438d3a:	jmp    438e67 <strcmp@plt+0x356cf>
  438d3f:	lea    rsi,[rip+0x15345]        # 44e08b <strcmp@plt+0x4a8f3>
  438d46:	mov    edi,0x2
  438d4b:	mov    rdx,rbx
  438d4e:	xor    eax,eax
  438d50:	call   42e520 <strcmp@plt+0x2ad88>
  438d55:	mov    r14b,0xfa
  438d58:	jmp    438e6a <strcmp@plt+0x356d2>
  438d5d:	mov    ebx,eax
  438d5f:	mov    r14,rsp
  438d62:	mov    edx,0x1000
  438d67:	mov    rdi,r14
  438d6a:	xor    esi,esi
  438d6c:	call   403260 <memset@plt>
  438d71:	movabs rax,0x301001200000020
  438d7b:	mov    QWORD PTR [rsp],rax
  438d7f:	mov    BYTE PTR [rsp+0x10],0x11
  438d84:	mov    edx,0x20
  438d89:	mov    edi,ebx
  438d8b:	mov    rsi,r14
  438d8e:	xor    ecx,ecx
  438d90:	call   403230 <send@plt>
  438d95:	test   eax,eax
  438d97:	js     438e3e <strcmp@plt+0x356a6>
  438d9d:	lea    r15,[rsp+0x1000]
  438da5:	mov    edx,0x1000
  438daa:	mov    edi,ebx
  438dac:	mov    rsi,r15
  438daf:	mov    ecx,0x40
  438db4:	call   403160 <recv@plt>
  438db9:	mov    r14b,0xfa
  438dbc:	test   eax,eax
  438dbe:	jg     438de8 <strcmp@plt+0x35650>
  438dc0:	jmp    438e35 <strcmp@plt+0x3569d>
  438dc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438dcc:	nop    DWORD PTR [rax+0x0]
  438dd0:	mov    edx,0x1000
  438dd5:	mov    edi,ebx
  438dd7:	mov    rsi,r15
  438dda:	mov    ecx,0x40
  438ddf:	call   403160 <recv@plt>
  438de4:	test   eax,eax
  438de6:	jle    438e35 <strcmp@plt+0x3569d>
  438de8:	cmp    eax,0x10
  438deb:	jb     438dd0 <strcmp@plt+0x35638>
  438ded:	mov    rcx,r15
  438df0:	jmp    438e10 <strcmp@plt+0x35678>
  438df2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438dfc:	nop    DWORD PTR [rax+0x0]
  438e00:	add    edx,0x3
  438e03:	and    edx,0xfffffffc
  438e06:	sub    eax,edx
  438e08:	add    rcx,rdx
  438e0b:	cmp    eax,0xf
  438e0e:	jbe    438dd0 <strcmp@plt+0x35638>
  438e10:	mov    edx,DWORD PTR [rcx]
  438e12:	cmp    edx,0x10
  438e15:	jb     438dd0 <strcmp@plt+0x35638>
  438e17:	cmp    edx,eax
  438e19:	ja     438dd0 <strcmp@plt+0x35638>
  438e1b:	cmp    WORD PTR [rcx+0x4],0x10
  438e20:	jne    438e00 <strcmp@plt+0x35668>
  438e22:	cmp    DWORD PTR [rcx+0x14],ebp
  438e25:	jne    438e00 <strcmp@plt+0x35668>
  438e27:	mov    r14b,BYTE PTR [rcx+0x18]
  438e2b:	shr    r14b,0x6
  438e2f:	and    r14b,0x1
  438e33:	jmp    438dd0 <strcmp@plt+0x35638>
  438e35:	mov    edi,ebx
  438e37:	call   403770 <close@plt>
  438e3c:	jmp    438e6a <strcmp@plt+0x356d2>
  438e3e:	call   403040 <__errno_location@plt>
  438e43:	mov    edi,DWORD PTR [rax]
  438e45:	call   403170 <strerror@plt>
  438e4a:	lea    rsi,[rip+0x1529a]        # 44e0eb <strcmp@plt+0x4a953>
  438e51:	mov    edi,0x2
  438e56:	mov    rdx,rax
  438e59:	xor    eax,eax
  438e5b:	call   42e520 <strcmp@plt+0x2ad88>
  438e60:	mov    edi,ebx
  438e62:	call   403770 <close@plt>
  438e67:	mov    r14b,0xf7
  438e6a:	mov    eax,r14d
  438e6d:	add    rsp,0x2008
  438e74:	pop    rbx
  438e75:	pop    r14
  438e77:	pop    r15
  438e79:	pop    rbp
  438e7a:	ret    
  438e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  438e80:	jmp    4030c0 <if_nametoindex@plt>
  438e85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438e8f:	nop
  438e90:	push   rbp
  438e91:	mov    rbp,rsp
  438e94:	push   r15
  438e96:	push   r14
  438e98:	push   r12
  438e9a:	push   rbx
  438e9b:	and    rsp,0xffffffffffffffe0
  438e9f:	sub    rsp,0x40
  438ea3:	mov    r15,rsi
  438ea6:	mov    r14,rdi
  438ea9:	mov    edi,0x2
  438eae:	mov    esi,0x2
  438eb3:	xor    edx,edx
  438eb5:	call   4030f0 <socket@plt>
  438eba:	mov    ebx,eax
  438ebc:	vxorps xmm0,xmm0,xmm0
  438ec0:	vmovaps YMMWORD PTR [rsp],ymm0
  438ec5:	mov    QWORD PTR [rsp+0x20],0x0
  438ece:	mov    WORD PTR [rsp+0x10],0x2
  438ed5:	mov    r12,rsp
  438ed8:	mov    edx,0xf
  438edd:	mov    rdi,r12
  438ee0:	mov    rsi,r14
  438ee3:	vzeroupper 
  438ee6:	call   403250 <strncpy@plt>
  438eeb:	mov    esi,0x8927
  438ef0:	mov    edi,ebx
  438ef2:	mov    rdx,r12
  438ef5:	xor    eax,eax
  438ef7:	call   403590 <ioctl@plt>
  438efc:	mov    edi,ebx
  438efe:	call   403770 <close@plt>
  438f03:	mov    eax,DWORD PTR [rsp+0x12]
  438f07:	mov    DWORD PTR [r15],eax
  438f0a:	movzx  eax,WORD PTR [rsp+0x16]
  438f0f:	mov    WORD PTR [r15+0x4],ax
  438f14:	lea    rsp,[rbp-0x20]
  438f18:	pop    rbx
  438f19:	pop    r12
  438f1b:	pop    r14
  438f1d:	pop    r15
  438f1f:	pop    rbp
  438f20:	ret    
  438f21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438f2b:	nop    DWORD PTR [rax+rax*1+0x0]
  438f30:	push   rbp
  438f31:	push   r14
  438f33:	push   rbx
  438f34:	sub    rsp,0x1000
  438f3b:	mov    ebx,esi
  438f3d:	mov    ebp,edi
  438f3f:	mov    r14,rsp
  438f42:	mov    edx,0x1000
  438f47:	mov    rdi,r14
  438f4a:	xor    esi,esi
  438f4c:	call   403260 <memset@plt>
  438f51:	movabs rax,0x301001a0000001c
  438f5b:	mov    QWORD PTR [rsp],rax
  438f5f:	mov    BYTE PTR [rsp+0x10],bl
  438f63:	test   ebp,ebp
  438f65:	mov    eax,0xfe
  438f6a:	cmovne eax,ebp
  438f6d:	mov    BYTE PTR [rsp+0x14],al
  438f71:	mov    WORD PTR [rsp+0x15],0x4
  438f78:	mov    BYTE PTR [rsp+0x17],0x1
  438f7d:	mov    BYTE PTR [rsp+0x13],0x0
  438f82:	mov    WORD PTR [rsp+0x11],0x0
  438f89:	lea    rax,[rip+0x2bdc0]        # 464d50 <strcmp@plt+0x615b8>
  438f90:	mov    rax,QWORD PTR [rax+0x68]
  438f94:	mov    edi,DWORD PTR [rax]
  438f96:	mov    edx,0x1c
  438f9b:	mov    rsi,r14
  438f9e:	xor    ecx,ecx
  438fa0:	call   403230 <send@plt>
  438fa5:	mov    rcx,rax
  438fa8:	mov    eax,0x1
  438fad:	test   ecx,ecx
  438faf:	jns    438fd5 <strcmp@plt+0x3583d>
  438fb1:	call   403040 <__errno_location@plt>
  438fb6:	mov    edi,DWORD PTR [rax]
  438fb8:	call   403170 <strerror@plt>
  438fbd:	lea    rsi,[rip+0x1515d]        # 44e121 <strcmp@plt+0x4a989>
  438fc4:	mov    edi,0x1
  438fc9:	mov    rdx,rax
  438fcc:	xor    eax,eax
  438fce:	call   42e520 <strcmp@plt+0x2ad88>
  438fd3:	xor    eax,eax
  438fd5:	add    rsp,0x1000
  438fdc:	pop    rbx
  438fdd:	pop    r14
  438fdf:	pop    rbp
  438fe0:	ret    
  438fe1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  438feb:	nop    DWORD PTR [rax+rax*1+0x0]
  438ff0:	push   rbx
  438ff1:	mov    edi,0x4
  438ff6:	call   431d60 <strcmp@plt+0x2e5c8>
  438ffb:	test   rax,rax
  438ffe:	je     439038 <strcmp@plt+0x358a0>
  439000:	mov    rbx,rax
  439003:	lea    rax,[rip+0x2bd46]        # 464d50 <strcmp@plt+0x615b8>
  43900a:	mov    QWORD PTR [rax+0x68],rbx
  43900e:	xor    eax,eax
  439010:	call   435650 <strcmp@plt+0x31eb8>
  439015:	mov    DWORD PTR [rbx],eax
  439017:	lea    rcx,[rip+0x3750a]        # 470528 <strcmp@plt+0x6cd90>
  43901e:	mov    rdi,QWORD PTR [rcx]
  439021:	lea    rsi,[rip+0x318]        # 439340 <strcmp@plt+0x35ba8>
  439028:	xor    edx,edx
  43902a:	mov    ecx,eax
  43902c:	call   4349c0 <strcmp@plt+0x31228>
  439031:	mov    eax,0x1
  439036:	pop    rbx
  439037:	ret    
  439038:	xor    eax,eax
  43903a:	pop    rbx
  43903b:	ret    
  43903c:	nop    DWORD PTR [rax+0x0]
  439040:	lea    rax,[rip+0x2bd09]        # 464d50 <strcmp@plt+0x615b8>
  439047:	mov    rdi,QWORD PTR [rax+0x68]
  43904b:	jmp    403790 <free@plt>
  439050:	push   rbp
  439051:	push   r15
  439053:	push   r14
  439055:	push   r13
  439057:	push   r12
  439059:	push   rbx
  43905a:	sub    rsp,0x2018
  439061:	mov    rdi,QWORD PTR [rip+0x2af38]        # 463fa0 <strcmp@plt+0x60808>
  439068:	call   42b9b0 <strcmp@plt+0x28218>
  43906d:	mov    r12,rax
  439070:	xor    eax,eax
  439072:	call   435650 <strcmp@plt+0x31eb8>
  439077:	cmp    eax,0xfffffff7
  43907a:	jne    439097 <strcmp@plt+0x358ff>
  43907c:	lea    rsi,[rip+0x14dae]        # 44de31 <strcmp@plt+0x4a699>
  439083:	xor    r12d,r12d
  439086:	mov    edi,0x2
  43908b:	xor    eax,eax
  43908d:	call   42e520 <strcmp@plt+0x2ad88>
  439092:	jmp    4391b8 <strcmp@plt+0x35a20>
  439097:	mov    r15d,eax
  43909a:	lea    rbx,[rsp+0x10]
  43909f:	mov    edx,0x1000
  4390a4:	mov    rdi,rbx
  4390a7:	xor    esi,esi
  4390a9:	call   403260 <memset@plt>
  4390ae:	movabs rax,0x301001200000020
  4390b8:	mov    QWORD PTR [rsp+0x10],rax
  4390bd:	mov    BYTE PTR [rsp+0x20],0x11
  4390c2:	mov    edx,0x20
  4390c7:	mov    edi,r15d
  4390ca:	mov    rsi,rbx
  4390cd:	xor    ecx,ecx
  4390cf:	call   403230 <send@plt>
  4390d4:	test   eax,eax
  4390d6:	js     43918b <strcmp@plt+0x359f3>
  4390dc:	lea    r14,[rsp+0x1010]
  4390e4:	mov    edx,0x1000
  4390e9:	mov    edi,r15d
  4390ec:	mov    rsi,r14
  4390ef:	mov    ecx,0x40
  4390f4:	call   403160 <recv@plt>
  4390f9:	mov    rbx,rax
  4390fc:	test   ebx,ebx
  4390fe:	jle    4391b0 <strcmp@plt+0x35a18>
  439104:	mov    r13,rsp
  439107:	cmp    ebx,0x10
  43910a:	jae    439135 <strcmp@plt+0x3599d>
  43910c:	nop    DWORD PTR [rax+0x0]
  439110:	mov    edx,0x1000
  439115:	mov    edi,r15d
  439118:	mov    rsi,r14
  43911b:	mov    ecx,0x40
  439120:	call   403160 <recv@plt>
  439125:	mov    rbx,rax
  439128:	test   ebx,ebx
  43912a:	jle    4391b0 <strcmp@plt+0x35a18>
  439130:	cmp    ebx,0x10
  439133:	jb     439110 <strcmp@plt+0x35978>
  439135:	mov    rbp,r14
  439138:	jmp    439153 <strcmp@plt+0x359bb>
  43913a:	nop    WORD PTR [rax+rax*1+0x0]
  439140:	mov    eax,DWORD PTR [rbp+0x0]
  439143:	add    eax,0x3
  439146:	and    eax,0xfffffffc
  439149:	sub    ebx,eax
  43914b:	add    rbp,rax
  43914e:	cmp    ebx,0xf
  439151:	jbe    439110 <strcmp@plt+0x35978>
  439153:	mov    eax,DWORD PTR [rbp+0x0]
  439156:	cmp    eax,0x10
  439159:	jb     439110 <strcmp@plt+0x35978>
  43915b:	cmp    eax,ebx
  43915d:	ja     439110 <strcmp@plt+0x35978>
  43915f:	cmp    WORD PTR [rbp+0x4],0x10
  439164:	jne    439140 <strcmp@plt+0x359a8>
  439166:	mov    edi,DWORD PTR [rbp+0x14]
  439169:	mov    rsi,r13
  43916c:	call   403740 <if_indextoname@plt>
  439171:	test   rax,rax
  439174:	je     439140 <strcmp@plt+0x359a8>
  439176:	mov    rdi,r13
  439179:	call   403710 <strdup@plt>
  43917e:	mov    rdi,rax
  439181:	mov    rsi,r12
  439184:	call   42baa0 <strcmp@plt+0x28308>
  439189:	jmp    439140 <strcmp@plt+0x359a8>
  43918b:	call   403040 <__errno_location@plt>
  439190:	mov    edi,DWORD PTR [rax]
  439192:	call   403170 <strerror@plt>
  439197:	lea    rsi,[rip+0x14cc6]        # 44de64 <strcmp@plt+0x4a6cc>
  43919e:	xor    r12d,r12d
  4391a1:	mov    edi,0x2
  4391a6:	mov    rdx,rax
  4391a9:	xor    eax,eax
  4391ab:	call   42e520 <strcmp@plt+0x2ad88>
  4391b0:	mov    edi,r15d
  4391b3:	call   403770 <close@plt>
  4391b8:	mov    rax,r12
  4391bb:	add    rsp,0x2018
  4391c2:	pop    rbx
  4391c3:	pop    r12
  4391c5:	pop    r13
  4391c7:	pop    r14
  4391c9:	pop    r15
  4391cb:	pop    rbp
  4391cc:	ret    
  4391cd:	nop    DWORD PTR [rax]
  4391d0:	push   rbp
  4391d1:	push   r15
  4391d3:	push   r14
  4391d5:	push   r13
  4391d7:	push   r12
  4391d9:	push   rbx
  4391da:	sub    rsp,0x418
  4391e1:	lea    rbp,[rip+0x2bbd8]        # 464dc0 <strcmp@plt+0x61628>
  4391e8:	cmp    DWORD PTR [rbp+0x0],0x0
  4391ec:	jle    439201 <strcmp@plt+0x35a69>
  4391ee:	lea    rsi,[rip+0x14f5e]        # 44e153 <strcmp@plt+0x4a9bb>
  4391f5:	mov    edi,0x5
  4391fa:	xor    eax,eax
  4391fc:	call   42e520 <strcmp@plt+0x2ad88>
  439201:	lea    rdi,[rsp+0x8]
  439206:	call   403750 <getifaddrs@plt>
  43920b:	cmp    eax,0xffffffff
  43920e:	jne    43922a <strcmp@plt+0x35a92>
  439210:	lea    rsi,[rip+0x14f65]        # 44e17c <strcmp@plt+0x4a9e4>
  439217:	mov    edi,0x1
  43921c:	xor    eax,eax
  43921e:	call   42e520 <strcmp@plt+0x2ad88>
  439223:	xor    eax,eax
  439225:	call   43aeb0 <strcmp@plt+0x37718>
  43922a:	mov    rdi,QWORD PTR [rip+0x2ad6f]        # 463fa0 <strcmp@plt+0x60808>
  439231:	call   435e70 <strcmp@plt+0x326d8>
  439236:	mov    r14,rax
  439239:	mov    r15,QWORD PTR [rsp+0x8]
  43923e:	test   r15,r15
  439241:	je     43931c <strcmp@plt+0x35b84>
  439247:	lea    r13,[rsp+0x10]
  43924c:	lea    r12,[rip+0x14f5e]        # 44e1b1 <strcmp@plt+0x4aa19>
  439253:	jmp    4392a8 <strcmp@plt+0x35b10>
  439255:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43925f:	nop
  439260:	mov    DWORD PTR [rsp],0x1
  439267:	mov    rdx,r13
  43926a:	mov    ecx,0x401
  43926f:	xor    r8d,r8d
  439272:	xor    r9d,r9d
  439275:	call   4032a0 <getnameinfo@plt>
  43927a:	test   eax,eax
  43927c:	je     4392d1 <strcmp@plt+0x35b39>
  43927e:	mov    edi,eax
  439280:	call   403560 <gai_strerror@plt>
  439285:	mov    edi,0x3
  43928a:	mov    rsi,r12
  43928d:	mov    rdx,rax
  439290:	xor    eax,eax
  439292:	call   42e520 <strcmp@plt+0x2ad88>
  439297:	nop    WORD PTR [rax+rax*1+0x0]
  4392a0:	mov    r15,QWORD PTR [r15]
  4392a3:	test   r15,r15
  4392a6:	je     439315 <strcmp@plt+0x35b7d>
  4392a8:	mov    rdi,QWORD PTR [r15+0x18]
  4392ac:	test   rdi,rdi
  4392af:	je     4392a0 <strcmp@plt+0x35b08>
  4392b1:	movzx  eax,WORD PTR [rdi]
  4392b4:	mov    ecx,eax
  4392b6:	or     ecx,0x8
  4392b9:	cmp    cx,0xa
  4392bd:	jne    4392a0 <strcmp@plt+0x35b08>
  4392bf:	mov    esi,0x10
  4392c4:	cmp    ax,0x2
  4392c8:	je     439260 <strcmp@plt+0x35ac8>
  4392ca:	mov    esi,0x1c
  4392cf:	jmp    439260 <strcmp@plt+0x35ac8>
  4392d1:	mov    rdi,r13
  4392d4:	call   403710 <strdup@plt>
  4392d9:	mov    rbx,rax
  4392dc:	mov    rdi,QWORD PTR [r15+0x8]
  4392e0:	call   403710 <strdup@plt>
  4392e5:	mov    rdi,r14
  4392e8:	mov    rsi,rbx
  4392eb:	mov    rdx,rax
  4392ee:	call   435eb0 <strcmp@plt+0x32718>
  4392f3:	cmp    DWORD PTR [rbp+0x0],0x2
  4392f7:	jl     4392a0 <strcmp@plt+0x35b08>
  4392f9:	mov    rdx,QWORD PTR [r15+0x8]
  4392fd:	mov    edi,0x6
  439302:	lea    rsi,[rip+0x14ed7]        # 44e1e0 <strcmp@plt+0x4aa48>
  439309:	mov    rcx,r13
  43930c:	xor    eax,eax
  43930e:	call   42e520 <strcmp@plt+0x2ad88>
  439313:	jmp    4392a0 <strcmp@plt+0x35b08>
  439315:	mov    rdi,QWORD PTR [rsp+0x8]
  43931a:	jmp    43931e <strcmp@plt+0x35b86>
  43931c:	xor    edi,edi
  43931e:	call   4036b0 <freeifaddrs@plt>
  439323:	mov    rax,r14
  439326:	add    rsp,0x418
  43932d:	pop    rbx
  43932e:	pop    r12
  439330:	pop    r13
  439332:	pop    r14
  439334:	pop    r15
  439336:	pop    rbp
  439337:	ret    
  439338:	nop    DWORD PTR [rax+rax*1+0x0]
  439340:	push   rbp
  439341:	mov    rbp,rsp
  439344:	push   r15
  439346:	push   r14
  439348:	push   r13
  43934a:	push   r12
  43934c:	push   rbx
  43934d:	and    rsp,0xffffffffffffffe0
  439351:	sub    rsp,0x1080
  439358:	mov    QWORD PTR [rsp+0x18],rdi
  43935d:	mov    edi,DWORD PTR [rdi+0x18]
  439360:	lea    rsi,[rsp+0x60]
  439365:	mov    edx,0x1000
  43936a:	mov    ecx,0x40
  43936f:	call   403160 <recv@plt>
  439374:	mov    r12,rax
  439377:	test   r12d,r12d
  43937a:	jle    439634 <strcmp@plt+0x35e9c>
  439380:	lea    r14,[rip+0x14ef9]        # 44e280 <strcmp@plt+0x4aae8>
  439387:	lea    r15,[rip+0x2ba32]        # 464dc0 <strcmp@plt+0x61628>
  43938e:	cmp    r12d,0x10
  439392:	jge    4393e3 <strcmp@plt+0x35c4b>
  439394:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43939e:	xchg   ax,ax
  4393a0:	mov    edx,0x1000
  4393a5:	lea    rbx,[rsp+0x60]
  4393aa:	mov    rdi,rbx
  4393ad:	xor    esi,esi
  4393af:	vzeroupper 
  4393b2:	call   403260 <memset@plt>
  4393b7:	mov    rax,QWORD PTR [rsp+0x18]
  4393bc:	mov    edi,DWORD PTR [rax+0x18]
  4393bf:	mov    edx,0x1000
  4393c4:	mov    rsi,rbx
  4393c7:	mov    ecx,0x40
  4393cc:	call   403160 <recv@plt>
  4393d1:	mov    r12,rax
  4393d4:	test   r12d,r12d
  4393d7:	jle    439634 <strcmp@plt+0x35e9c>
  4393dd:	cmp    r12d,0x10
  4393e1:	jl     4393a0 <strcmp@plt+0x35c08>
  4393e3:	lea    rbx,[rsp+0x60]
  4393e8:	jmp    439414 <strcmp@plt+0x35c7c>
  4393ea:	mov    rdi,rbx
  4393ed:	vzeroupper 
  4393f0:	call   4397d0 <strcmp@plt+0x36038>
  4393f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4393ff:	nop
  439400:	mov    eax,DWORD PTR [rbx]
  439402:	add    eax,0x3
  439405:	and    eax,0xfffffffc
  439408:	sub    r12d,eax
  43940b:	add    rbx,rax
  43940e:	cmp    r12d,0xf
  439412:	jle    4393a0 <strcmp@plt+0x35c08>
  439414:	mov    esi,DWORD PTR [rbx]
  439416:	cmp    esi,0x10
  439419:	jb     4393a0 <strcmp@plt+0x35c08>
  43941b:	cmp    esi,r12d
  43941e:	ja     4393a0 <strcmp@plt+0x35c08>
  439420:	mov    eax,DWORD PTR [rbx+0x4]
  439423:	add    eax,0xfffffffd
  439426:	cmp    ax,0x16
  43942a:	ja     439400 <strcmp@plt+0x35c68>
  43942c:	movzx  eax,ax
  43942f:	movsxd rax,DWORD PTR [r14+rax*4]
  439433:	add    rax,r14
  439436:	jmp    rax
  439438:	cmp    DWORD PTR [r15],0x2
  43943c:	jl     4393ea <strcmp@plt+0x35c52>
  43943e:	mov    edi,0x6
  439443:	lea    rsi,[rip+0x14f24]        # 44e36e <strcmp@plt+0x4abd6>
  43944a:	xor    eax,eax
  43944c:	vzeroupper 
  43944f:	call   42e520 <strcmp@plt+0x2ad88>
  439454:	jmp    4393ea <strcmp@plt+0x35c52>
  439456:	cmp    DWORD PTR [r15],0x2
  43945a:	jl     439472 <strcmp@plt+0x35cda>
  43945c:	mov    edi,0x6
  439461:	lea    rsi,[rip+0x14e9c]        # 44e304 <strcmp@plt+0x4ab6c>
  439468:	xor    eax,eax
  43946a:	vzeroupper 
  43946d:	call   42e520 <strcmp@plt+0x2ad88>
  439472:	mov    rdi,rbx
  439475:	vzeroupper 
  439478:	call   439650 <strcmp@plt+0x35eb8>
  43947d:	jmp    439400 <strcmp@plt+0x35c68>
  43947f:	cmp    DWORD PTR [r15],0x2
  439483:	jl     43949b <strcmp@plt+0x35d03>
  439485:	mov    edi,0x6
  43948a:	lea    rsi,[rip+0x14ea8]        # 44e339 <strcmp@plt+0x4aba1>
  439491:	xor    eax,eax
  439493:	vzeroupper 
  439496:	call   42e520 <strcmp@plt+0x2ad88>
  43949b:	vxorps xmm0,xmm0,xmm0
  43949f:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  4394a5:	mov    eax,DWORD PTR [rbx]
  4394a7:	mov    r13d,DWORD PTR [rbx+0x14]
  4394ab:	add    eax,0xffffffe8
  4394ae:	cmp    eax,0x4
  4394b1:	jl     43961d <strcmp@plt+0x35e85>
  4394b7:	lea    rsi,[rbx+0x18]
  4394bb:	jmp    4394df <strcmp@plt+0x35d47>
  4394bd:	nop    DWORD PTR [rax]
  4394c0:	cmp    WORD PTR [rsi+0x2],0x1
  4394c5:	je     439607 <strcmp@plt+0x35e6f>
  4394cb:	add    ecx,0x3
  4394ce:	and    ecx,0xfffffffc
  4394d1:	sub    eax,ecx
  4394d3:	add    rsi,rcx
  4394d6:	cmp    eax,0x3
  4394d9:	jle    43961d <strcmp@plt+0x35e85>
  4394df:	movzx  ecx,WORD PTR [rsi]
  4394e2:	cmp    ecx,0x4
  4394e5:	jb     43961d <strcmp@plt+0x35e85>
  4394eb:	cmp    eax,ecx
  4394ed:	jl     43961d <strcmp@plt+0x35e85>
  4394f3:	movzx  edx,BYTE PTR [rbx+0x10]
  4394f7:	cmp    dl,0xa
  4394fa:	je     4394c0 <strcmp@plt+0x35d28>
  4394fc:	cmp    dl,0x2
  4394ff:	jne    4394cb <strcmp@plt+0x35d33>
  439501:	cmp    WORD PTR [rsi+0x2],0x2
  439506:	jne    4394cb <strcmp@plt+0x35d33>
  439508:	mov    edx,0x2
  43950d:	jmp    43960c <strcmp@plt+0x35e74>
  439512:	cmp    DWORD PTR [r15],0x2
  439516:	jl     43952e <strcmp@plt+0x35d96>
  439518:	mov    edi,0x6
  43951d:	lea    rsi,[rip+0x14e78]        # 44e39c <strcmp@plt+0x4ac04>
  439524:	xor    eax,eax
  439526:	vzeroupper 
  439529:	call   42e520 <strcmp@plt+0x2ad88>
  43952e:	mov    al,BYTE PTR [rbx+0x17]
  439531:	cmp    al,0x5
  439533:	je     439594 <strcmp@plt+0x35dfc>
  439535:	cmp    al,0x1
  439537:	jne    439400 <strcmp@plt+0x35c68>
  43953d:	lea    rdi,[rbx+0x10]
  439541:	mov    esi,DWORD PTR [rbx]
  439543:	add    esi,0xffffffe4
  439546:	vzeroupper 
  439549:	call   439900 <strcmp@plt+0x36168>
  43954e:	jmp    439400 <strcmp@plt+0x35c68>
  439553:	cmp    DWORD PTR [r15],0x2
  439557:	jl     439571 <strcmp@plt+0x35dd9>
  439559:	mov    edi,0x6
  43955e:	lea    rsi,[rip+0x14e6a]        # 44e3cf <strcmp@plt+0x4ac37>
  439565:	xor    eax,eax
  439567:	vzeroupper 
  43956a:	call   42e520 <strcmp@plt+0x2ad88>
  43956f:	mov    esi,DWORD PTR [rbx]
  439571:	lea    rdi,[rbx+0x10]
  439575:	add    esi,0xffffffe4
  439578:	mov    al,BYTE PTR [rbx+0x17]
  43957b:	cmp    al,0x5
  43957d:	je     4395b9 <strcmp@plt+0x35e21>
  43957f:	cmp    al,0x1
  439581:	jne    439400 <strcmp@plt+0x35c68>
  439587:	vzeroupper 
  43958a:	call   439d00 <strcmp@plt+0x36568>
  43958f:	jmp    439400 <strcmp@plt+0x35c68>
  439594:	cmp    DWORD PTR [r15],0x0
  439598:	jle    439400 <strcmp@plt+0x35c68>
  43959e:	mov    edi,0x5
  4395a3:	lea    rsi,[rip+0x14f06]        # 44e4b0 <strcmp@plt+0x4ad18>
  4395aa:	xor    eax,eax
  4395ac:	vzeroupper 
  4395af:	call   42e520 <strcmp@plt+0x2ad88>
  4395b4:	jmp    439400 <strcmp@plt+0x35c68>
  4395b9:	vmovups ymm0,YMMWORD PTR [rip+0x14c9f]        # 44e260 <strcmp@plt+0x4aac8>
  4395c1:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  4395c7:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  4395cd:	mov    al,BYTE PTR [rbx+0x14]
  4395d0:	cmp    al,0xfe
  4395d2:	je     4395e7 <strcmp@plt+0x35e4f>
  4395d4:	cmp    al,0xfd
  4395d6:	jne    439400 <strcmp@plt+0x35c68>
  4395dc:	cmp    BYTE PTR [rdi],0x80
  4395df:	jne    439400 <strcmp@plt+0x35c68>
  4395e5:	jmp    4395f0 <strcmp@plt+0x35e58>
  4395e7:	cmp    BYTE PTR [rdi],0x81
  4395ea:	jne    439400 <strcmp@plt+0x35c68>
  4395f0:	lea    rdx,[rsp+0x40]
  4395f5:	lea    rcx,[rsp+0x20]
  4395fa:	vzeroupper 
  4395fd:	call   439ac0 <strcmp@plt+0x36328>
  439602:	jmp    439400 <strcmp@plt+0x35c68>
  439607:	mov    edx,0xa
  43960c:	add    rsi,0x4
  439610:	lea    rdi,[rsp+0x20]
  439615:	vzeroupper 
  439618:	call   423850 <strcmp@plt+0x200b8>
  43961d:	xor    edi,edi
  43961f:	mov    esi,r13d
  439622:	lea    rdx,[rsp+0x20]
  439627:	vzeroupper 
  43962a:	call   437d40 <strcmp@plt+0x345a8>
  43962f:	jmp    439400 <strcmp@plt+0x35c68>
  439634:	mov    eax,0x1
  439639:	lea    rsp,[rbp-0x28]
  43963d:	pop    rbx
  43963e:	pop    r12
  439640:	pop    r13
  439642:	pop    r14
  439644:	pop    r15
  439646:	pop    rbp
  439647:	ret    
  439648:	nop    DWORD PTR [rax+rax*1+0x0]
  439650:	push   rbp
  439651:	push   r15
  439653:	push   r14
  439655:	push   r12
  439657:	push   rbx
  439658:	sub    rsp,0x20
  43965c:	vmovups ymm0,YMMWORD PTR [rip+0x14bfc]        # 44e260 <strcmp@plt+0x4aac8>
  439664:	vmovups YMMWORD PTR [rsp],ymm0
  439669:	mov    ebp,DWORD PTR [rdi]
  43966b:	add    ebp,0xffffffe8
  43966e:	cmp    ebp,0x4
  439671:	jl     43971e <strcmp@plt+0x35f86>
  439677:	mov    r12,rdi
  43967a:	mov    r15d,DWORD PTR [rdi+0x14]
  43967e:	lea    rbx,[rdi+0x18]
  439682:	mov    r14,rsp
  439685:	jmp    4396a3 <strcmp@plt+0x35f0b>
  439687:	nop    WORD PTR [rax+rax*1+0x0]
  439690:	movzx  eax,WORD PTR [rbx]
  439693:	add    eax,0x3
  439696:	and    eax,0xfffffffc
  439699:	sub    ebp,eax
  43969b:	add    rbx,rax
  43969e:	cmp    ebp,0x3
  4396a1:	jle    43971e <strcmp@plt+0x35f86>
  4396a3:	movzx  eax,WORD PTR [rbx]
  4396a6:	cmp    eax,0x4
  4396a9:	jb     43971e <strcmp@plt+0x35f86>
  4396ab:	cmp    ebp,eax
  4396ad:	jl     43971e <strcmp@plt+0x35f86>
  4396af:	movzx  eax,BYTE PTR [r12+0x10]
  4396b5:	cmp    al,0x2
  4396b7:	jne    4396ea <strcmp@plt+0x35f52>
  4396b9:	cmp    WORD PTR [rbx+0x2],0x2
  4396be:	jne    439690 <strcmp@plt+0x35ef8>
  4396c0:	lea    rsi,[rbx+0x4]
  4396c4:	mov    rdi,r14
  4396c7:	mov    edx,0x2
  4396cc:	vzeroupper 
  4396cf:	call   423850 <strcmp@plt+0x200b8>
  4396d4:	mov    edi,0x1
  4396d9:	mov    esi,r15d
  4396dc:	mov    rdx,r14
  4396df:	call   437d40 <strcmp@plt+0x345a8>
  4396e4:	movzx  eax,BYTE PTR [r12+0x10]
  4396ea:	cmp    al,0xa
  4396ec:	jne    439690 <strcmp@plt+0x35ef8>
  4396ee:	cmp    WORD PTR [rbx+0x2],0x1
  4396f3:	jne    439690 <strcmp@plt+0x35ef8>
  4396f5:	lea    rsi,[rbx+0x4]
  4396f9:	mov    rdi,r14
  4396fc:	mov    edx,0xa
  439701:	vzeroupper 
  439704:	call   423850 <strcmp@plt+0x200b8>
  439709:	mov    edi,0x1
  43970e:	mov    esi,r15d
  439711:	mov    rdx,r14
  439714:	call   437d40 <strcmp@plt+0x345a8>
  439719:	jmp    439690 <strcmp@plt+0x35ef8>
  43971e:	add    rsp,0x20
  439722:	pop    rbx
  439723:	pop    r12
  439725:	pop    r14
  439727:	pop    r15
  439729:	pop    rbp
  43972a:	vzeroupper 
  43972d:	ret    
  43972e:	xchg   ax,ax
  439730:	push   rbp
  439731:	mov    rbp,rsp
  439734:	push   rbx
  439735:	and    rsp,0xffffffffffffffe0
  439739:	sub    rsp,0x40
  43973d:	vxorps xmm0,xmm0,xmm0
  439741:	vmovaps YMMWORD PTR [rsp],ymm0
  439746:	mov    eax,DWORD PTR [rdi]
  439748:	mov    ebx,DWORD PTR [rdi+0x14]
  43974b:	add    eax,0xffffffe8
  43974e:	cmp    eax,0x4
  439751:	jl     4397b3 <strcmp@plt+0x3601b>
  439753:	lea    rsi,[rdi+0x18]
  439757:	jmp    439777 <strcmp@plt+0x35fdf>
  439759:	nop    DWORD PTR [rax+0x0]
  439760:	cmp    WORD PTR [rsi+0x2],0x1
  439765:	je     43979f <strcmp@plt+0x36007>
  439767:	add    ecx,0x3
  43976a:	and    ecx,0xfffffffc
  43976d:	sub    eax,ecx
  43976f:	add    rsi,rcx
  439772:	cmp    eax,0x3
  439775:	jle    4397b3 <strcmp@plt+0x3601b>
  439777:	movzx  ecx,WORD PTR [rsi]
  43977a:	cmp    ecx,0x4
  43977d:	jb     4397b3 <strcmp@plt+0x3601b>
  43977f:	cmp    eax,ecx
  439781:	jl     4397b3 <strcmp@plt+0x3601b>
  439783:	movzx  edx,BYTE PTR [rdi+0x10]
  439787:	cmp    dl,0xa
  43978a:	je     439760 <strcmp@plt+0x35fc8>
  43978c:	cmp    dl,0x2
  43978f:	jne    439767 <strcmp@plt+0x35fcf>
  439791:	cmp    WORD PTR [rsi+0x2],0x2
  439796:	jne    439767 <strcmp@plt+0x35fcf>
  439798:	mov    edx,0x2
  43979d:	jmp    4397a4 <strcmp@plt+0x3600c>
  43979f:	mov    edx,0xa
  4397a4:	add    rsi,0x4
  4397a8:	mov    rdi,rsp
  4397ab:	vzeroupper 
  4397ae:	call   423850 <strcmp@plt+0x200b8>
  4397b3:	mov    rdx,rsp
  4397b6:	xor    edi,edi
  4397b8:	mov    esi,ebx
  4397ba:	vzeroupper 
  4397bd:	call   437d40 <strcmp@plt+0x345a8>
  4397c2:	lea    rsp,[rbp-0x8]
  4397c6:	pop    rbx
  4397c7:	pop    rbp
  4397c8:	ret    
  4397c9:	nop    DWORD PTR [rax+0x0]
  4397d0:	push   r14
  4397d2:	push   rbx
  4397d3:	sub    rsp,0x18
  4397d7:	mov    r14,rdi
  4397da:	mov    ebx,DWORD PTR [rdi+0x14]
  4397dd:	mov    edi,ebx
  4397df:	call   43a910 <strcmp@plt+0x37178>
  4397e4:	mov    edi,ebx
  4397e6:	test   rax,rax
  4397e9:	je     439804 <strcmp@plt+0x3606c>
  4397eb:	mov    edx,DWORD PTR [r14+0x18]
  4397ef:	shr    edx,0x6
  4397f2:	and    edx,0x1
  4397f5:	mov    esi,ebx
  4397f7:	call   438170 <strcmp@plt+0x349d8>
  4397fc:	add    rsp,0x18
  439800:	pop    rbx
  439801:	pop    r14
  439803:	ret    
  439804:	mov    rsi,rsp
  439807:	mov    edi,ebx
  439809:	call   403740 <if_indextoname@plt>
  43980e:	test   rax,rax
  439811:	je     439825 <strcmp@plt+0x3608d>
  439813:	mov    rdi,rsp
  439816:	call   43a8a0 <strcmp@plt+0x37108>
  43981b:	test   rax,rax
  43981e:	je     439825 <strcmp@plt+0x3608d>
  439820:	mov    edi,DWORD PTR [rax+0x8]
  439823:	jmp    4397eb <strcmp@plt+0x36053>
  439825:	lea    rax,[rip+0x2b594]        # 464dc0 <strcmp@plt+0x61628>
  43982c:	cmp    DWORD PTR [rax],0x2
  43982f:	jl     4397fc <strcmp@plt+0x36064>
  439831:	lea    rsi,[rip+0x14bcd]        # 44e405 <strcmp@plt+0x4ac6d>
  439838:	mov    rdx,rsp
  43983b:	mov    edi,0x6
  439840:	xor    eax,eax
  439842:	call   42e520 <strcmp@plt+0x2ad88>
  439847:	jmp    4397fc <strcmp@plt+0x36064>
  439849:	nop    DWORD PTR [rax+0x0]
  439850:	mov    al,BYTE PTR [rdi+0x17]
  439853:	cmp    al,0x5
  439855:	je     439869 <strcmp@plt+0x360d1>
  439857:	cmp    al,0x1
  439859:	jne    439888 <strcmp@plt+0x360f0>
  43985b:	mov    esi,DWORD PTR [rdi]
  43985d:	add    rdi,0x10
  439861:	add    esi,0xffffffe4
  439864:	jmp    439900 <strcmp@plt+0x36168>
  439869:	lea    rax,[rip+0x2b550]        # 464dc0 <strcmp@plt+0x61628>
  439870:	cmp    DWORD PTR [rax],0x0
  439873:	jle    439888 <strcmp@plt+0x360f0>
  439875:	lea    rsi,[rip+0x14c34]        # 44e4b0 <strcmp@plt+0x4ad18>
  43987c:	mov    edi,0x5
  439881:	xor    eax,eax
  439883:	jmp    42e520 <strcmp@plt+0x2ad88>
  439888:	ret    
  439889:	nop    DWORD PTR [rax+0x0]
  439890:	sub    rsp,0x48
  439894:	mov    rax,rdi
  439897:	add    rdi,0x10
  43989b:	mov    esi,DWORD PTR [rax]
  43989d:	add    esi,0xffffffe4
  4398a0:	mov    cl,BYTE PTR [rax+0x17]
  4398a3:	cmp    cl,0x5
  4398a6:	je     4398b6 <strcmp@plt+0x3611e>
  4398a8:	cmp    cl,0x1
  4398ab:	jne    4398f0 <strcmp@plt+0x36158>
  4398ad:	add    rsp,0x48
  4398b1:	jmp    439d00 <strcmp@plt+0x36568>
  4398b6:	vmovups ymm0,YMMWORD PTR [rip+0x149a2]        # 44e260 <strcmp@plt+0x4aac8>
  4398be:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  4398c4:	vmovups YMMWORD PTR [rsp],ymm0
  4398c9:	mov    al,BYTE PTR [rax+0x14]
  4398cc:	cmp    al,0xfe
  4398ce:	je     4398db <strcmp@plt+0x36143>
  4398d0:	cmp    al,0xfd
  4398d2:	jne    4398f0 <strcmp@plt+0x36158>
  4398d4:	cmp    BYTE PTR [rdi],0x80
  4398d7:	je     4398e0 <strcmp@plt+0x36148>
  4398d9:	jmp    4398f0 <strcmp@plt+0x36158>
  4398db:	cmp    BYTE PTR [rdi],0x81
  4398de:	jne    4398f0 <strcmp@plt+0x36158>
  4398e0:	mov    rdx,rsp
  4398e3:	lea    rcx,[rsp+0x20]
  4398e8:	vzeroupper 
  4398eb:	call   439ac0 <strcmp@plt+0x36328>
  4398f0:	add    rsp,0x48
  4398f4:	vzeroupper 
  4398f7:	ret    
  4398f8:	nop    DWORD PTR [rax+rax*1+0x0]
  439900:	push   rbp
  439901:	mov    rbp,rsp
  439904:	push   r15
  439906:	push   r14
  439908:	push   r13
  43990a:	push   r12
  43990c:	push   rbx
  43990d:	and    rsp,0xffffffffffffffe0
  439911:	sub    rsp,0xa0
  439918:	vxorps xmm0,xmm0,xmm0
  43991c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  439922:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  439928:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  43992e:	cmp    BYTE PTR [rdi+0x4],0xfe
  439932:	jne    439a80 <strcmp@plt+0x362e8>
  439938:	mov    r14,rdi
  43993b:	movzx  edx,BYTE PTR [rdi]
  43993e:	mov    eax,edx
  439940:	or     al,0x8
  439942:	cmp    al,0xa
  439944:	jne    439a5e <strcmp@plt+0x362c6>
  43994a:	mov    ebx,esi
  43994c:	mov    DWORD PTR [rsp+0x14],0xffffffff
  439954:	cmp    esi,0x4
  439957:	jl     439a3c <strcmp@plt+0x362a4>
  43995d:	mov    al,BYTE PTR [r14+0x1]
  439961:	mov    BYTE PTR [rsp+0x13],al
  439965:	mov    al,BYTE PTR [r14+0x2]
  439969:	mov    BYTE PTR [rsp+0x12],al
  43996d:	lea    r12,[r14+0xc]
  439971:	mov    DWORD PTR [rsp+0x14],0xffffffff
  439979:	lea    r13,[rip+0x1495c]        # 44e2dc <strcmp@plt+0x4ab44>
  439980:	mov    QWORD PTR [rsp+0x18],r14
  439985:	jmp    4399ca <strcmp@plt+0x36232>
  439987:	lea    rsi,[r12+0x4]
  43998c:	movzx  edx,BYTE PTR [r14]
  439990:	mov    r14,r13
  439993:	lea    r15,[rsp+0x20]
  439998:	mov    rdi,r15
  43999b:	vzeroupper 
  43999e:	call   423850 <strcmp@plt+0x200b8>
  4399a3:	movzx  esi,BYTE PTR [rsp+0x13]
  4399a8:	mov    rdi,r15
  4399ab:	mov    r14,QWORD PTR [rsp+0x18]
  4399b0:	call   423170 <strcmp@plt+0x1f9d8>
  4399b5:	movzx  eax,WORD PTR [r12]
  4399ba:	add    eax,0x3
  4399bd:	and    eax,0xfffffffc
  4399c0:	sub    ebx,eax
  4399c2:	add    r12,rax
  4399c5:	cmp    ebx,0x3
  4399c8:	jle    439a3c <strcmp@plt+0x362a4>
  4399ca:	movzx  eax,WORD PTR [r12]
  4399cf:	cmp    eax,0x4
  4399d2:	jb     439a3c <strcmp@plt+0x362a4>
  4399d4:	cmp    ebx,eax
  4399d6:	jl     439a3c <strcmp@plt+0x362a4>
  4399d8:	movzx  eax,WORD PTR [r12+0x2]
  4399de:	dec    eax
  4399e0:	cmp    ax,0x4
  4399e4:	ja     4399b5 <strcmp@plt+0x3621d>
  4399e6:	movzx  eax,ax
  4399e9:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  4399ee:	add    rax,r13
  4399f1:	jmp    rax
  4399f3:	lea    rsi,[r12+0x4]
  4399f8:	movzx  edx,BYTE PTR [r14]
  4399fc:	lea    r15,[rsp+0x40]
  439a01:	mov    rdi,r15
  439a04:	vzeroupper 
  439a07:	call   423850 <strcmp@plt+0x200b8>
  439a0c:	movzx  esi,BYTE PTR [rsp+0x12]
  439a11:	mov    rdi,r15
  439a14:	jmp    4399b0 <strcmp@plt+0x36218>
  439a16:	mov    eax,DWORD PTR [r12+0x4]
  439a1b:	mov    DWORD PTR [rsp+0x14],eax
  439a1f:	jmp    4399b5 <strcmp@plt+0x3621d>
  439a21:	lea    rsi,[r12+0x4]
  439a26:	movzx  edx,BYTE PTR [r14]
  439a2a:	lea    rdi,[rsp+0x60]
  439a2f:	vzeroupper 
  439a32:	call   423850 <strcmp@plt+0x200b8>
  439a37:	jmp    4399b5 <strcmp@plt+0x3621d>
  439a3c:	lea    rdx,[rsp+0x40]
  439a41:	lea    rcx,[rsp+0x20]
  439a46:	lea    r8,[rsp+0x60]
  439a4b:	mov    edi,0x1
  439a50:	mov    esi,DWORD PTR [rsp+0x14]
  439a54:	vzeroupper 
  439a57:	call   4382b0 <strcmp@plt+0x34b18>
  439a5c:	jmp    439a80 <strcmp@plt+0x362e8>
  439a5e:	lea    rax,[rip+0x2b35b]        # 464dc0 <strcmp@plt+0x61628>
  439a65:	cmp    DWORD PTR [rax],0x3
  439a68:	jl     439a80 <strcmp@plt+0x362e8>
  439a6a:	lea    rsi,[rip+0x149f2]        # 44e463 <strcmp@plt+0x4accb>
  439a71:	mov    edi,0x7
  439a76:	xor    eax,eax
  439a78:	vzeroupper 
  439a7b:	call   42e520 <strcmp@plt+0x2ad88>
  439a80:	lea    rsp,[rbp-0x28]
  439a84:	pop    rbx
  439a85:	pop    r12
  439a87:	pop    r13
  439a89:	pop    r14
  439a8b:	pop    r15
  439a8d:	pop    rbp
  439a8e:	vzeroupper 
  439a91:	ret    
  439a92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439a9c:	nop    DWORD PTR [rax+0x0]
  439aa0:	lea    rax,[rip+0x2b319]        # 464dc0 <strcmp@plt+0x61628>
  439aa7:	cmp    DWORD PTR [rax],0x0
  439aaa:	jle    439abf <strcmp@plt+0x36327>
  439aac:	lea    rsi,[rip+0x149fd]        # 44e4b0 <strcmp@plt+0x4ad18>
  439ab3:	mov    edi,0x5
  439ab8:	xor    eax,eax
  439aba:	jmp    42e520 <strcmp@plt+0x2ad88>
  439abf:	ret    
  439ac0:	push   rbp
  439ac1:	push   r15
  439ac3:	push   r14
  439ac5:	push   r13
  439ac7:	push   r12
  439ac9:	push   rbx
  439aca:	sub    rsp,0x458
  439ad1:	mov    QWORD PTR [rsp+0x10],rcx
  439ad6:	mov    QWORD PTR [rsp+0x8],rdx
  439adb:	mov    ebp,esi
  439add:	mov    rbx,rdi
  439ae0:	lea    rdi,[rsp+0x50]
  439ae5:	xor    r14d,r14d
  439ae8:	mov    edx,0x400
  439aed:	xor    esi,esi
  439aef:	call   403260 <memset@plt>
  439af4:	cmp    ebp,0x4
  439af7:	jl     439cc7 <strcmp@plt+0x3652f>
  439afd:	mov    QWORD PTR [rsp+0x20],rbx
  439b02:	lea    r14,[rbx+0xc]
  439b06:	xor    r13d,r13d
  439b09:	jmp    439b3a <strcmp@plt+0x363a2>
  439b0b:	lea    rsi,[r14+0x4]
  439b0f:	mov    rdi,QWORD PTR [rsp+0x10]
  439b14:	mov    edx,0xa
  439b19:	call   423850 <strcmp@plt+0x200b8>
  439b1e:	movzx  eax,WORD PTR [r14]
  439b22:	add    eax,0x3
  439b25:	and    eax,0xfffffffc
  439b28:	mov    ebp,DWORD PTR [rsp+0x1c]
  439b2c:	sub    ebp,eax
  439b2e:	add    r14,rax
  439b31:	cmp    ebp,0x3
  439b34:	jle    439c7f <strcmp@plt+0x364e7>
  439b3a:	movzx  r15d,WORD PTR [r14]
  439b3e:	cmp    r15d,0x4
  439b42:	jb     439c7f <strcmp@plt+0x364e7>
  439b48:	cmp    ebp,r15d
  439b4b:	jl     439c7f <strcmp@plt+0x364e7>
  439b51:	movzx  eax,WORD PTR [r14+0x2]
  439b56:	cmp    ax,0x9
  439b5a:	mov    DWORD PTR [rsp+0x1c],ebp
  439b5e:	je     439b90 <strcmp@plt+0x363f8>
  439b60:	cmp    ax,0x2
  439b64:	je     439c20 <strcmp@plt+0x36488>
  439b6a:	cmp    ax,0x1
  439b6e:	jne    439b1e <strcmp@plt+0x36386>
  439b70:	mov    rax,QWORD PTR [rsp+0x20]
  439b75:	mov    al,BYTE PTR [rax]
  439b77:	cmp    al,0x81
  439b79:	je     439b0b <strcmp@plt+0x36373>
  439b7b:	cmp    al,0x80
  439b7d:	jne    439b1e <strcmp@plt+0x36386>
  439b7f:	lea    rsi,[r14+0x4]
  439b83:	mov    rdi,QWORD PTR [rsp+0x10]
  439b88:	jmp    439c3c <strcmp@plt+0x364a4>
  439b8d:	nop    DWORD PTR [rax]
  439b90:	movzx  eax,WORD PTR [r14+0x4]
  439b95:	cmp    eax,0x8
  439b98:	jb     439b1e <strcmp@plt+0x36386>
  439b9a:	add    r15d,0xfffffffc
  439b9e:	cmp    r15d,eax
  439ba1:	jl     439b1e <strcmp@plt+0x36386>
  439ba7:	lea    rbx,[r14+0x4]
  439bab:	mov    QWORD PTR [rsp+0x28],rbx
  439bb0:	mov    edi,DWORD PTR [rbx+0x4]
  439bb3:	call   43a910 <strcmp@plt+0x37178>
  439bb8:	mov    rax,QWORD PTR [rsp+0x28]
  439bbd:	mov    r12d,DWORD PTR [rax]
  439bc0:	mov    edi,r12d
  439bc3:	call   43a910 <strcmp@plt+0x37178>
  439bc8:	test   rax,rax
  439bcb:	jne    439c54 <strcmp@plt+0x364bc>
  439bd1:	mov    edi,DWORD PTR [rbx+0x4]
  439bd4:	lea    rbp,[rsp+0x30]
  439bd9:	mov    rsi,rbp
  439bdc:	call   403740 <if_indextoname@plt>
  439be1:	lea    rdi,[rsp+0x50]
  439be6:	lea    rsi,[rip+0xde0f]        # 4479fc <strcmp@plt+0x44264>
  439bed:	mov    rdx,rbp
  439bf0:	xor    eax,eax
  439bf2:	call   4030b0 <sprintf@plt>
  439bf7:	inc    r13d
  439bfa:	movzx  eax,WORD PTR [rbx]
  439bfd:	add    eax,0x3
  439c00:	and    eax,0xfffffffc
  439c03:	movzx  ecx,WORD PTR [rbx+rax*1]
  439c07:	cmp    ecx,0x8
  439c0a:	jb     439b1e <strcmp@plt+0x36386>
  439c10:	add    rbx,rax
  439c13:	cmp    r15d,ecx
  439c16:	jge    439bb0 <strcmp@plt+0x36418>
  439c18:	jmp    439b1e <strcmp@plt+0x36386>
  439c1d:	nop    DWORD PTR [rax]
  439c20:	mov    rax,QWORD PTR [rsp+0x20]
  439c25:	mov    al,BYTE PTR [rax]
  439c27:	cmp    al,0x81
  439c29:	je     439c46 <strcmp@plt+0x364ae>
  439c2b:	cmp    al,0x80
  439c2d:	jne    439b1e <strcmp@plt+0x36386>
  439c33:	lea    rsi,[r14+0x4]
  439c37:	mov    rdi,QWORD PTR [rsp+0x8]
  439c3c:	mov    edx,0x2
  439c41:	jmp    439b19 <strcmp@plt+0x36381>
  439c46:	lea    rsi,[r14+0x4]
  439c4a:	mov    rdi,QWORD PTR [rsp+0x8]
  439c4f:	jmp    439b14 <strcmp@plt+0x3637c>
  439c54:	lea    rbp,[rsp+0x30]
  439c59:	mov    edi,r12d
  439c5c:	mov    rsi,rbp
  439c5f:	call   403740 <if_indextoname@plt>
  439c64:	lea    rsi,[rip+0x14883]        # 44e4ee <strcmp@plt+0x4ad56>
  439c6b:	xor    r14d,r14d
  439c6e:	mov    edi,0x4
  439c73:	mov    rdx,rbp
  439c76:	xor    eax,eax
  439c78:	call   42e520 <strcmp@plt+0x2ad88>
  439c7d:	jmp    439ce9 <strcmp@plt+0x36551>
  439c7f:	test   r13d,r13d
  439c82:	mov    r14d,0x0
  439c88:	je     439cc7 <strcmp@plt+0x3652f>
  439c8a:	mov    rdi,QWORD PTR [rsp+0x8]
  439c8f:	call   422e20 <strcmp@plt+0x1f688>
  439c94:	mov    rbx,rax
  439c97:	mov    rdi,QWORD PTR [rsp+0x10]
  439c9c:	call   422e20 <strcmp@plt+0x1f688>
  439ca1:	lea    rsi,[rip+0x1491b]        # 44e5c3 <strcmp@plt+0x4ae2b>
  439ca8:	lea    r8,[rsp+0x50]
  439cad:	mov    edi,0x4
  439cb2:	mov    rdx,rbx
  439cb5:	mov    rcx,rax
  439cb8:	xor    eax,eax
  439cba:	call   42e520 <strcmp@plt+0x2ad88>
  439cbf:	mov    r14d,0x1
  439cc5:	jmp    439ce9 <strcmp@plt+0x36551>
  439cc7:	lea    rax,[rip+0x2b0f2]        # 464dc0 <strcmp@plt+0x61628>
  439cce:	cmp    DWORD PTR [rax],0x0
  439cd1:	jle    439ce9 <strcmp@plt+0x36551>
  439cd3:	lea    rsi,[rip+0x1488e]        # 44e568 <strcmp@plt+0x4add0>
  439cda:	xor    r14d,r14d
  439cdd:	mov    edi,0x5
  439ce2:	xor    eax,eax
  439ce4:	call   42e520 <strcmp@plt+0x2ad88>
  439ce9:	mov    eax,r14d
  439cec:	add    rsp,0x458
  439cf3:	pop    rbx
  439cf4:	pop    r12
  439cf6:	pop    r13
  439cf8:	pop    r14
  439cfa:	pop    r15
  439cfc:	pop    rbp
  439cfd:	ret    
  439cfe:	xchg   ax,ax
  439d00:	push   rbp
  439d01:	mov    rbp,rsp
  439d04:	push   r15
  439d06:	push   r14
  439d08:	push   r13
  439d0a:	push   r12
  439d0c:	push   rbx
  439d0d:	and    rsp,0xffffffffffffffe0
  439d11:	sub    rsp,0xa0
  439d18:	vxorps xmm0,xmm0,xmm0
  439d1c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  439d22:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  439d28:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  439d2e:	cmp    BYTE PTR [rdi+0x4],0xfe
  439d32:	jne    439e80 <strcmp@plt+0x366e8>
  439d38:	mov    r14,rdi
  439d3b:	movzx  edx,BYTE PTR [rdi]
  439d3e:	mov    eax,edx
  439d40:	or     al,0x8
  439d42:	cmp    al,0xa
  439d44:	jne    439e5e <strcmp@plt+0x366c6>
  439d4a:	mov    ebx,esi
  439d4c:	mov    DWORD PTR [rsp+0x14],0xffffffff
  439d54:	cmp    esi,0x4
  439d57:	jl     439e3c <strcmp@plt+0x366a4>
  439d5d:	mov    al,BYTE PTR [r14+0x1]
  439d61:	mov    BYTE PTR [rsp+0x13],al
  439d65:	mov    al,BYTE PTR [r14+0x2]
  439d69:	mov    BYTE PTR [rsp+0x12],al
  439d6d:	lea    r12,[r14+0xc]
  439d71:	mov    DWORD PTR [rsp+0x14],0xffffffff
  439d79:	lea    r13,[rip+0x14570]        # 44e2f0 <strcmp@plt+0x4ab58>
  439d80:	mov    QWORD PTR [rsp+0x18],r14
  439d85:	jmp    439dca <strcmp@plt+0x36632>
  439d87:	lea    rsi,[r12+0x4]
  439d8c:	movzx  edx,BYTE PTR [r14]
  439d90:	mov    r14,r13
  439d93:	lea    r15,[rsp+0x20]
  439d98:	mov    rdi,r15
  439d9b:	vzeroupper 
  439d9e:	call   423850 <strcmp@plt+0x200b8>
  439da3:	movzx  esi,BYTE PTR [rsp+0x13]
  439da8:	mov    rdi,r15
  439dab:	mov    r14,QWORD PTR [rsp+0x18]
  439db0:	call   423170 <strcmp@plt+0x1f9d8>
  439db5:	movzx  eax,WORD PTR [r12]
  439dba:	add    eax,0x3
  439dbd:	and    eax,0xfffffffc
  439dc0:	sub    ebx,eax
  439dc2:	add    r12,rax
  439dc5:	cmp    ebx,0x3
  439dc8:	jle    439e3c <strcmp@plt+0x366a4>
  439dca:	movzx  eax,WORD PTR [r12]
  439dcf:	cmp    eax,0x4
  439dd2:	jb     439e3c <strcmp@plt+0x366a4>
  439dd4:	cmp    ebx,eax
  439dd6:	jl     439e3c <strcmp@plt+0x366a4>
  439dd8:	movzx  eax,WORD PTR [r12+0x2]
  439dde:	dec    eax
  439de0:	cmp    ax,0x4
  439de4:	ja     439db5 <strcmp@plt+0x3661d>
  439de6:	movzx  eax,ax
  439de9:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  439dee:	add    rax,r13
  439df1:	jmp    rax
  439df3:	lea    rsi,[r12+0x4]
  439df8:	movzx  edx,BYTE PTR [r14]
  439dfc:	lea    r15,[rsp+0x40]
  439e01:	mov    rdi,r15
  439e04:	vzeroupper 
  439e07:	call   423850 <strcmp@plt+0x200b8>
  439e0c:	movzx  esi,BYTE PTR [rsp+0x12]
  439e11:	mov    rdi,r15
  439e14:	jmp    439db0 <strcmp@plt+0x36618>
  439e16:	mov    eax,DWORD PTR [r12+0x4]
  439e1b:	mov    DWORD PTR [rsp+0x14],eax
  439e1f:	jmp    439db5 <strcmp@plt+0x3661d>
  439e21:	lea    rsi,[r12+0x4]
  439e26:	movzx  edx,BYTE PTR [r14]
  439e2a:	lea    rdi,[rsp+0x60]
  439e2f:	vzeroupper 
  439e32:	call   423850 <strcmp@plt+0x200b8>
  439e37:	jmp    439db5 <strcmp@plt+0x3661d>
  439e3c:	lea    rdx,[rsp+0x40]
  439e41:	lea    rcx,[rsp+0x20]
  439e46:	lea    r8,[rsp+0x60]
  439e4b:	mov    edi,0x0
  439e50:	mov    esi,DWORD PTR [rsp+0x14]
  439e54:	vzeroupper 
  439e57:	call   4382b0 <strcmp@plt+0x34b18>
  439e5c:	jmp    439e80 <strcmp@plt+0x366e8>
  439e5e:	lea    rax,[rip+0x2af5b]        # 464dc0 <strcmp@plt+0x61628>
  439e65:	cmp    DWORD PTR [rax],0x3
  439e68:	jl     439e80 <strcmp@plt+0x366e8>
  439e6a:	lea    rsi,[rip+0x14791]        # 44e602 <strcmp@plt+0x4ae6a>
  439e71:	mov    edi,0x7
  439e76:	xor    eax,eax
  439e78:	vzeroupper 
  439e7b:	call   42e520 <strcmp@plt+0x2ad88>
  439e80:	lea    rsp,[rbp-0x28]
  439e84:	pop    rbx
  439e85:	pop    r12
  439e87:	pop    r13
  439e89:	pop    r14
  439e8b:	pop    r15
  439e8d:	pop    rbp
  439e8e:	vzeroupper 
  439e91:	ret    
  439e92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439e9c:	nop    DWORD PTR [rax+0x0]
  439ea0:	sub    rsp,0x48
  439ea4:	vmovups ymm0,YMMWORD PTR [rip+0x143b4]        # 44e260 <strcmp@plt+0x4aac8>
  439eac:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  439eb2:	vmovups YMMWORD PTR [rsp],ymm0
  439eb7:	mov    al,BYTE PTR [rdi+0x4]
  439eba:	cmp    al,0xfe
  439ebc:	je     439ec9 <strcmp@plt+0x36731>
  439ebe:	cmp    al,0xfd
  439ec0:	jne    439ede <strcmp@plt+0x36746>
  439ec2:	cmp    BYTE PTR [rdi],0x80
  439ec5:	je     439ece <strcmp@plt+0x36736>
  439ec7:	jmp    439ede <strcmp@plt+0x36746>
  439ec9:	cmp    BYTE PTR [rdi],0x81
  439ecc:	jne    439ede <strcmp@plt+0x36746>
  439ece:	mov    rdx,rsp
  439ed1:	lea    rcx,[rsp+0x20]
  439ed6:	vzeroupper 
  439ed9:	call   439ac0 <strcmp@plt+0x36328>
  439ede:	add    rsp,0x48
  439ee2:	vzeroupper 
  439ee5:	ret    
  439ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439ef0:	push   rbp
  439ef1:	mov    rbp,rsp
  439ef4:	push   r15
  439ef6:	push   r14
  439ef8:	push   r12
  439efa:	push   rbx
  439efb:	and    rsp,0xffffffffffffffe0
  439eff:	sub    rsp,0x40
  439f03:	mov    r15,rsi
  439f06:	mov    r14,rdi
  439f09:	mov    edi,0x2
  439f0e:	mov    esi,0x2
  439f13:	xor    edx,edx
  439f15:	call   4030f0 <socket@plt>
  439f1a:	mov    ebx,eax
  439f1c:	vxorps xmm0,xmm0,xmm0
  439f20:	vmovaps YMMWORD PTR [rsp],ymm0
  439f25:	mov    QWORD PTR [rsp+0x20],0x0
  439f2e:	mov    WORD PTR [rsp+0x10],0x2
  439f35:	mov    r12,rsp
  439f38:	mov    edx,0xf
  439f3d:	mov    rdi,r12
  439f40:	mov    rsi,r14
  439f43:	vzeroupper 
  439f46:	call   403250 <strncpy@plt>
  439f4b:	mov    esi,0x8927
  439f50:	mov    edi,ebx
  439f52:	mov    rdx,r12
  439f55:	xor    eax,eax
  439f57:	call   403590 <ioctl@plt>
  439f5c:	mov    edi,ebx
  439f5e:	call   403770 <close@plt>
  439f63:	mov    eax,DWORD PTR [rsp+0x12]
  439f67:	mov    DWORD PTR [r15],eax
  439f6a:	movzx  eax,WORD PTR [rsp+0x16]
  439f6f:	mov    WORD PTR [r15+0x4],ax
  439f74:	lea    rsp,[rbp-0x20]
  439f78:	pop    rbx
  439f79:	pop    r12
  439f7b:	pop    r14
  439f7d:	pop    r15
  439f7f:	pop    rbp
  439f80:	ret    
  439f81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  439f8b:	nop    DWORD PTR [rax+rax*1+0x0]
  439f90:	push   rbp
  439f91:	push   r15
  439f93:	push   r14
  439f95:	push   r13
  439f97:	push   r12
  439f99:	push   rbx
  439f9a:	sub    rsp,0x2048
  439fa1:	mov    r12,rdi
  439fa4:	vmovups ymm0,YMMWORD PTR [rip+0x142b4]        # 44e260 <strcmp@plt+0x4aac8>
  439fac:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  439fb2:	mov    QWORD PTR [rsp+0x10],0x10
  439fbb:	vzeroupper 
  439fbe:	call   422ef0 <strcmp@plt+0x1f758>
  439fc3:	mov    ebx,eax
  439fc5:	cmp    ax,0x2
  439fc9:	mov    eax,0x40
  439fce:	mov    ecx,0x400
  439fd3:	cmove  ecx,eax
  439fd6:	mov    DWORD PTR [rsp+0x18],ecx
  439fda:	mov    edi,0x10
  439fdf:	mov    esi,0x3
  439fe4:	xor    edx,edx
  439fe6:	call   4030f0 <socket@plt>
  439feb:	test   eax,eax
  439fed:	js     43a1a7 <strcmp@plt+0x36a0f>
  439ff3:	mov    ebp,eax
  439ff5:	cmp    bx,0x2
  439ff9:	setne  bl
  439ffc:	shl    bl,0x3
  439fff:	or     bl,0x2
  43a002:	lea    rsi,[rsp+0x10]
  43a007:	mov    edi,eax
  43a009:	mov    edx,0xc
  43a00e:	call   403090 <bind@plt>
  43a013:	lea    r14,[rsp+0x40]
  43a018:	mov    edx,0x1000
  43a01d:	mov    rdi,r14
  43a020:	xor    esi,esi
  43a022:	call   403260 <memset@plt>
  43a027:	movabs rax,0x301001a0000001c
  43a031:	mov    QWORD PTR [rsp+0x40],rax
  43a036:	mov    BYTE PTR [rsp+0x50],bl
  43a03a:	mov    BYTE PTR [rsp+0x57],0x1
  43a03f:	mov    DWORD PTR [rsp+0x53],0x4fe00
  43a047:	mov    WORD PTR [rsp+0x51],0x0
  43a04e:	mov    edx,0x1c
  43a053:	mov    edi,ebp
  43a055:	mov    rsi,r14
  43a058:	xor    ecx,ecx
  43a05a:	call   403230 <send@plt>
  43a05f:	test   eax,eax
  43a061:	js     43a1c1 <strcmp@plt+0x36a29>
  43a067:	lea    rsi,[rsp+0x1040]
  43a06f:	mov    edx,0x1000
  43a074:	mov    DWORD PTR [rsp+0xc],ebp
  43a078:	mov    edi,ebp
  43a07a:	mov    ecx,0x40
  43a07f:	call   403160 <recv@plt>
  43a084:	mov    rbx,rax
  43a087:	test   ebx,ebx
  43a089:	jle    43a232 <strcmp@plt+0x36a9a>
  43a08f:	lea    r13,[rsp+0x20]
  43a094:	cmp    ebx,0x10
  43a097:	jae    43a0cb <strcmp@plt+0x36933>
  43a099:	nop    DWORD PTR [rax+0x0]
  43a0a0:	mov    edx,0x1000
  43a0a5:	mov    edi,DWORD PTR [rsp+0xc]
  43a0a9:	lea    rsi,[rsp+0x1040]
  43a0b1:	mov    ecx,0x40
  43a0b6:	call   403160 <recv@plt>
  43a0bb:	mov    rbx,rax
  43a0be:	test   ebx,ebx
  43a0c0:	jle    43a232 <strcmp@plt+0x36a9a>
  43a0c6:	cmp    ebx,0x10
  43a0c9:	jb     43a0a0 <strcmp@plt+0x36908>
  43a0cb:	lea    rbp,[rsp+0x1040]
  43a0d3:	jmp    43a0f3 <strcmp@plt+0x3695b>
  43a0d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a0df:	nop
  43a0e0:	mov    eax,DWORD PTR [rbp+0x0]
  43a0e3:	add    eax,0x3
  43a0e6:	and    eax,0xfffffffc
  43a0e9:	sub    ebx,eax
  43a0eb:	add    rbp,rax
  43a0ee:	cmp    ebx,0xf
  43a0f1:	jbe    43a0a0 <strcmp@plt+0x36908>
  43a0f3:	mov    eax,DWORD PTR [rbp+0x0]
  43a0f6:	cmp    eax,0x10
  43a0f9:	jb     43a0a0 <strcmp@plt+0x36908>
  43a0fb:	cmp    eax,ebx
  43a0fd:	ja     43a0a0 <strcmp@plt+0x36908>
  43a0ff:	cmp    WORD PTR [rbp+0x4],0x18
  43a104:	jne    43a0e3 <strcmp@plt+0x3694b>
  43a106:	lea    r14d,[rax-0x1c]
  43a10a:	cmp    r14d,0x4
  43a10e:	jl     43a0e3 <strcmp@plt+0x3694b>
  43a110:	lea    r15,[rbp+0x1c]
  43a114:	jmp    43a166 <strcmp@plt+0x369ce>
  43a116:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a120:	lea    rsi,[r15+0x4]
  43a124:	mov    rdi,r13
  43a127:	call   423850 <strcmp@plt+0x200b8>
  43a12c:	movzx  esi,BYTE PTR [rbp+0x11]
  43a130:	mov    rdi,r13
  43a133:	call   423170 <strcmp@plt+0x1f9d8>
  43a138:	mov    rdi,r12
  43a13b:	mov    rsi,r13
  43a13e:	call   433d30 <strcmp@plt+0x30598>
  43a143:	cmp    eax,0x1
  43a146:	je     43a1e0 <strcmp@plt+0x36a48>
  43a14c:	movzx  eax,WORD PTR [r15]
  43a150:	add    eax,0x3
  43a153:	and    eax,0xfffffffc
  43a156:	sub    r14d,eax
  43a159:	add    r15,rax
  43a15c:	cmp    r14d,0x3
  43a160:	jle    43a0e0 <strcmp@plt+0x36948>
  43a166:	movzx  eax,WORD PTR [r15]
  43a16a:	cmp    eax,0x4
  43a16d:	jb     43a0e0 <strcmp@plt+0x36948>
  43a173:	cmp    r14d,eax
  43a176:	jl     43a0e0 <strcmp@plt+0x36948>
  43a17c:	cmp    WORD PTR [r15+0x2],0x1
  43a182:	jne    43a150 <strcmp@plt+0x369b8>
  43a184:	movzx  edx,BYTE PTR [rsp+0x50]
  43a189:	cmp    edx,0xa
  43a18c:	je     43a19b <strcmp@plt+0x36a03>
  43a18e:	cmp    dl,0x2
  43a191:	jne    43a120 <strcmp@plt+0x36988>
  43a193:	cmp    BYTE PTR [rbp+0x11],0x20
  43a197:	jne    43a120 <strcmp@plt+0x36988>
  43a199:	jmp    43a150 <strcmp@plt+0x369b8>
  43a19b:	cmp    BYTE PTR [rbp+0x11],0x80
  43a19f:	jne    43a120 <strcmp@plt+0x36988>
  43a1a5:	jmp    43a150 <strcmp@plt+0x369b8>
  43a1a7:	lea    rsi,[rip+0x144a1]        # 44e64f <strcmp@plt+0x4aeb7>
  43a1ae:	xor    ebx,ebx
  43a1b0:	mov    edi,0x2
  43a1b5:	xor    eax,eax
  43a1b7:	call   42e520 <strcmp@plt+0x2ad88>
  43a1bc:	jmp    43a26b <strcmp@plt+0x36ad3>
  43a1c1:	call   403040 <__errno_location@plt>
  43a1c6:	mov    edi,DWORD PTR [rax]
  43a1c8:	call   403170 <strerror@plt>
  43a1cd:	lea    rsi,[rip+0x144c0]        # 44e694 <strcmp@plt+0x4aefc>
  43a1d4:	xor    ebx,ebx
  43a1d6:	mov    edi,0x1
  43a1db:	jmp    43a261 <strcmp@plt+0x36ac9>
  43a1e0:	mov    edi,DWORD PTR [rsp+0xc]
  43a1e4:	call   403770 <close@plt>
  43a1e9:	lea    rax,[rip+0x2abd0]        # 464dc0 <strcmp@plt+0x61628>
  43a1f0:	cmp    DWORD PTR [rax],0x3
  43a1f3:	jl     43a223 <strcmp@plt+0x36a8b>
  43a1f5:	mov    rdi,r12
  43a1f8:	call   422e20 <strcmp@plt+0x1f688>
  43a1fd:	mov    rbx,rax
  43a200:	lea    rdi,[rsp+0x20]
  43a205:	call   422e20 <strcmp@plt+0x1f688>
  43a20a:	lea    rsi,[rip+0x14501]        # 44e712 <strcmp@plt+0x4af7a>
  43a211:	mov    edi,0x7
  43a216:	mov    rdx,rbx
  43a219:	mov    rcx,rax
  43a21c:	xor    eax,eax
  43a21e:	call   42e520 <strcmp@plt+0x2ad88>
  43a223:	lea    rdi,[rsp+0x20]
  43a228:	call   423440 <strcmp@plt+0x1fca8>
  43a22d:	mov    rbx,rax
  43a230:	jmp    43a26b <strcmp@plt+0x36ad3>
  43a232:	mov    edi,DWORD PTR [rsp+0xc]
  43a236:	call   403770 <close@plt>
  43a23b:	lea    rax,[rip+0x2ab7e]        # 464dc0 <strcmp@plt+0x61628>
  43a242:	cmp    DWORD PTR [rax],0x3
  43a245:	jge    43a24b <strcmp@plt+0x36ab3>
  43a247:	xor    ebx,ebx
  43a249:	jmp    43a26b <strcmp@plt+0x36ad3>
  43a24b:	mov    rdi,r12
  43a24e:	call   422e20 <strcmp@plt+0x1f688>
  43a253:	lea    rsi,[rip+0x1447a]        # 44e6d4 <strcmp@plt+0x4af3c>
  43a25a:	xor    ebx,ebx
  43a25c:	mov    edi,0x7
  43a261:	mov    rdx,rax
  43a264:	xor    eax,eax
  43a266:	call   42e520 <strcmp@plt+0x2ad88>
  43a26b:	mov    rax,rbx
  43a26e:	add    rsp,0x2048
  43a275:	pop    rbx
  43a276:	pop    r12
  43a278:	pop    r13
  43a27a:	pop    r14
  43a27c:	pop    r15
  43a27e:	pop    rbp
  43a27f:	ret    
  43a280:	push   rax
  43a281:	lea    rdi,[rip+0x38]        # 43a2c0 <strcmp@plt+0x36b28>
  43a288:	call   42b9b0 <strcmp@plt+0x28218>
  43a28d:	lea    rcx,[rip+0x3588c]        # 46fb20 <strcmp@plt+0x6c388>
  43a294:	mov    QWORD PTR [rcx],rax
  43a297:	lea    rax,[rip+0x3587a]        # 46fb18 <strcmp@plt+0x6c380>
  43a29e:	mov    rcx,QWORD PTR [rax]
  43a2a1:	xor    eax,eax
  43a2a3:	call   QWORD PTR [rcx+0x58]
  43a2a6:	lea    rcx,[rip+0x3587b]        # 46fb28 <strcmp@plt+0x6c390>
  43a2ad:	mov    QWORD PTR [rcx],rax
  43a2b0:	xor    ecx,ecx
  43a2b2:	test   rax,rax
  43a2b5:	setne  cl
  43a2b8:	mov    eax,ecx
  43a2ba:	pop    rcx
  43a2bb:	ret    
  43a2bc:	nop    DWORD PTR [rax+0x0]
  43a2c0:	push   rbx
  43a2c1:	mov    rbx,rdi
  43a2c4:	mov    edi,DWORD PTR [rdi+0x30]
  43a2c7:	cmp    edi,0xffffffff
  43a2ca:	je     43a2d1 <strcmp@plt+0x36b39>
  43a2cc:	call   403770 <close@plt>
  43a2d1:	mov    edi,DWORD PTR [rbx+0x34]
  43a2d4:	cmp    edi,0xffffffff
  43a2d7:	je     43a2de <strcmp@plt+0x36b46>
  43a2d9:	call   403770 <close@plt>
  43a2de:	mov    rdi,QWORD PTR [rbx]
  43a2e1:	call   403790 <free@plt>
  43a2e6:	mov    rdi,QWORD PTR [rbx+0x10]
  43a2ea:	call   422c90 <strcmp@plt+0x1f4f8>
  43a2ef:	mov    rdi,QWORD PTR [rbx+0x18]
  43a2f3:	call   422c90 <strcmp@plt+0x1f4f8>
  43a2f8:	mov    rdi,QWORD PTR [rbx+0x20]
  43a2fc:	call   422c90 <strcmp@plt+0x1f4f8>
  43a301:	mov    rdi,QWORD PTR [rbx+0x28]
  43a305:	call   422c90 <strcmp@plt+0x1f4f8>
  43a30a:	mov    rdi,rbx
  43a30d:	pop    rbx
  43a30e:	jmp    403790 <free@plt>
  43a313:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a31d:	nop    DWORD PTR [rax]
  43a320:	push   rax
  43a321:	lea    rax,[rip+0x357f8]        # 46fb20 <strcmp@plt+0x6c388>
  43a328:	mov    rdi,QWORD PTR [rax]
  43a32b:	call   42bff0 <strcmp@plt+0x28858>
  43a330:	lea    rax,[rip+0x357f1]        # 46fb28 <strcmp@plt+0x6c390>
  43a337:	mov    rdi,QWORD PTR [rax]
  43a33a:	pop    rax
  43a33b:	jmp    436460 <strcmp@plt+0x32cc8>
  43a340:	push   rbp
  43a341:	push   r15
  43a343:	push   r14
  43a345:	push   r12
  43a347:	push   rbx
  43a348:	mov    ebx,esi
  43a34a:	mov    r14,rdi
  43a34d:	xor    ebp,ebp
  43a34f:	lea    rax,[rip+0x361ba]        # 470510 <strcmp@plt+0x6cd78>
  43a356:	mov    eax,DWORD PTR [rax]
  43a358:	cmp    esi,0x2
  43a35b:	jne    43a366 <strcmp@plt+0x36bce>
  43a35d:	cmp    eax,0xa
  43a360:	je     43a62e <strcmp@plt+0x36e96>
  43a366:	cmp    ebx,0xa
  43a369:	jne    43a374 <strcmp@plt+0x36bdc>
  43a36b:	cmp    eax,0x2
  43a36e:	je     43a62e <strcmp@plt+0x36e96>
  43a374:	cmp    ebx,0xa
  43a377:	je     43a38e <strcmp@plt+0x36bf6>
  43a379:	cmp    ebx,0x2
  43a37c:	jne    43a39c <strcmp@plt+0x36c04>
  43a37e:	lea    rax,[r14+0x20]
  43a382:	cmp    QWORD PTR [rax],0x0
  43a386:	jne    43a482 <strcmp@plt+0x36cea>
  43a38c:	jmp    43a39c <strcmp@plt+0x36c04>
  43a38e:	lea    rax,[r14+0x28]
  43a392:	cmp    QWORD PTR [rax],0x0
  43a396:	jne    43a482 <strcmp@plt+0x36cea>
  43a39c:	lea    rax,[rip+0x35775]        # 46fb18 <strcmp@plt+0x6c380>
  43a3a3:	mov    rax,QWORD PTR [rax]
  43a3a6:	mov    rdi,QWORD PTR [r14]
  43a3a9:	mov    esi,ebx
  43a3ab:	call   QWORD PTR [rax+0x28]
  43a3ae:	cmp    ebx,0xa
  43a3b1:	je     43a3c2 <strcmp@plt+0x36c2a>
  43a3b3:	cmp    ebx,0x2
  43a3b6:	jne    43a4e7 <strcmp@plt+0x36d4f>
  43a3bc:	lea    rcx,[r14+0x20]
  43a3c0:	jmp    43a3c6 <strcmp@plt+0x36c2e>
  43a3c2:	lea    rcx,[r14+0x28]
  43a3c6:	mov    QWORD PTR [rcx],rax
  43a3c9:	test   rax,rax
  43a3cc:	je     43a44b <strcmp@plt+0x36cb3>
  43a3ce:	cmp    DWORD PTR [rax+0x18],0x0
  43a3d2:	je     43a44b <strcmp@plt+0x36cb3>
  43a3d4:	lea    rcx,[rip+0x2a9e5]        # 464dc0 <strcmp@plt+0x61628>
  43a3db:	cmp    DWORD PTR [rcx],0x0
  43a3de:	jle    43a41c <strcmp@plt+0x36c84>
  43a3e0:	cmp    ebx,0x2
  43a3e3:	lea    rcx,[rip+0x9559]        # 443943 <strcmp@plt+0x401ab>
  43a3ea:	lea    rbp,[rip+0x9557]        # 443948 <strcmp@plt+0x401b0>
  43a3f1:	cmove  rbp,rcx
  43a3f5:	mov    r15,QWORD PTR [r14]
  43a3f8:	mov    rdi,rax
  43a3fb:	call   422e20 <strcmp@plt+0x1f688>
  43a400:	lea    rsi,[rip+0x14399]        # 44e7a0 <strcmp@plt+0x4b008>
  43a407:	mov    edi,0x5
  43a40c:	mov    rdx,rbp
  43a40f:	mov    rcx,r15
  43a412:	mov    r8,rax
  43a415:	xor    eax,eax
  43a417:	call   42e520 <strcmp@plt+0x2ad88>
  43a41c:	lea    rax,[rip+0x2dfe5]        # 468408 <strcmp@plt+0x64c70>
  43a423:	mov    rax,QWORD PTR [rax]
  43a426:	mov    rdi,r14
  43a429:	mov    esi,ebx
  43a42b:	call   QWORD PTR [rax+0x18]
  43a42e:	lea    rax,[rip+0x3615b]        # 470590 <strcmp@plt+0x6cdf8>
  43a435:	mov    rdi,QWORD PTR [rax]
  43a438:	mov    rax,QWORD PTR [rdi+0x28]
  43a43c:	mov    rsi,r14
  43a43f:	mov    edx,ebx
  43a441:	call   QWORD PTR [rax+0x18]
  43a444:	cmp    ebx,0xa
  43a447:	jne    43a487 <strcmp@plt+0x36cef>
  43a449:	jmp    43a492 <strcmp@plt+0x36cfa>
  43a44b:	lea    rax,[rip+0x2a96e]        # 464dc0 <strcmp@plt+0x61628>
  43a452:	cmp    DWORD PTR [rax],0x0
  43a455:	jle    43a482 <strcmp@plt+0x36cea>
  43a457:	cmp    ebx,0x2
  43a45a:	lea    rax,[rip+0x94e2]        # 443943 <strcmp@plt+0x401ab>
  43a461:	lea    rdx,[rip+0x94e0]        # 443948 <strcmp@plt+0x401b0>
  43a468:	cmove  rdx,rax
  43a46c:	mov    rcx,QWORD PTR [r14]
  43a46f:	lea    rsi,[rip+0x142f4]        # 44e76a <strcmp@plt+0x4afd2>
  43a476:	mov    edi,0x5
  43a47b:	xor    eax,eax
  43a47d:	call   42e520 <strcmp@plt+0x2ad88>
  43a482:	cmp    ebx,0xa
  43a485:	je     43a492 <strcmp@plt+0x36cfa>
  43a487:	cmp    ebx,0x2
  43a48a:	jne    43a4e7 <strcmp@plt+0x36d4f>
  43a48c:	lea    rax,[r14+0x10]
  43a490:	jmp    43a496 <strcmp@plt+0x36cfe>
  43a492:	lea    rax,[r14+0x18]
  43a496:	mov    ebp,0x1
  43a49b:	cmp    QWORD PTR [rax],0x0
  43a49f:	jne    43a62e <strcmp@plt+0x36e96>
  43a4a5:	cmp    ebx,0xa
  43a4a8:	je     43a516 <strcmp@plt+0x36d7e>
  43a4aa:	cmp    ebx,0x2
  43a4ad:	jne    43a4e7 <strcmp@plt+0x36d4f>
  43a4af:	lea    r12,[r14+0x10]
  43a4b3:	lea    rax,[rip+0x3565e]        # 46fb18 <strcmp@plt+0x6c380>
  43a4ba:	mov    rax,QWORD PTR [rax]
  43a4bd:	mov    rdi,QWORD PTR [r14]
  43a4c0:	mov    esi,0x2
  43a4c5:	call   QWORD PTR [rax+0x18]
  43a4c8:	mov    r15,rax
  43a4cb:	cmp    DWORD PTR [rax+0x18],0x0
  43a4cf:	je     43a582 <strcmp@plt+0x36dea>
  43a4d5:	mov    rax,QWORD PTR [r15+0x8]
  43a4d9:	mov    rdi,QWORD PTR [rax+0x10]
  43a4dd:	call   423440 <strcmp@plt+0x1fca8>
  43a4e2:	jmp    43a5ab <strcmp@plt+0x36e13>
  43a4e7:	lea    rax,[rip+0x2a8d2]        # 464dc0 <strcmp@plt+0x61628>
  43a4ee:	mov    ebp,0xfffffffe
  43a4f3:	cmp    DWORD PTR [rax],0x2
  43a4f6:	jl     43a62e <strcmp@plt+0x36e96>
  43a4fc:	lea    rsi,[rip+0x1424a]        # 44e74d <strcmp@plt+0x4afb5>
  43a503:	mov    edi,0x6
  43a508:	mov    edx,ebx
  43a50a:	xor    eax,eax
  43a50c:	call   42e520 <strcmp@plt+0x2ad88>
  43a511:	jmp    43a62e <strcmp@plt+0x36e96>
  43a516:	lea    r12,[r14+0x18]
  43a51a:	lea    rax,[rip+0x355f7]        # 46fb18 <strcmp@plt+0x6c380>
  43a521:	mov    rax,QWORD PTR [rax]
  43a524:	mov    rdi,QWORD PTR [r14]
  43a527:	lea    r15,[rip+0x35602]        # 46fb30 <strcmp@plt+0x6c398>
  43a52e:	mov    esi,DWORD PTR [r15]
  43a531:	call   QWORD PTR [rax+0x30]
  43a534:	mov    QWORD PTR [r14+0x18],rax
  43a538:	test   rax,rax
  43a53b:	jne    43a5b7 <strcmp@plt+0x36e1f>
  43a53d:	lea    rax,[rip+0x2a87c]        # 464dc0 <strcmp@plt+0x61628>
  43a544:	cmp    DWORD PTR [rax],0x0
  43a547:	jle    43a575 <strcmp@plt+0x36ddd>
  43a549:	mov    rdx,QWORD PTR [r14]
  43a54c:	cmp    DWORD PTR [r15],0x1
  43a550:	lea    rax,[rip+0x14300]        # 44e857 <strcmp@plt+0x4b0bf>
  43a557:	lea    rcx,[rip+0x14304]        # 44e862 <strcmp@plt+0x4b0ca>
  43a55e:	cmove  rcx,rax
  43a562:	lea    rsi,[rip+0x142a8]        # 44e811 <strcmp@plt+0x4b079>
  43a569:	mov    edi,0x5
  43a56e:	xor    eax,eax
  43a570:	call   42e520 <strcmp@plt+0x2ad88>
  43a575:	xor    edi,edi
  43a577:	call   422be0 <strcmp@plt+0x1f448>
  43a57c:	mov    QWORD PTR [r12],rax
  43a580:	jmp    43a5b7 <strcmp@plt+0x36e1f>
  43a582:	lea    rax,[rip+0x2a837]        # 464dc0 <strcmp@plt+0x61628>
  43a589:	cmp    DWORD PTR [rax],0x0
  43a58c:	jle    43a5a4 <strcmp@plt+0x36e0c>
  43a58e:	mov    rdx,QWORD PTR [r14]
  43a591:	lea    rsi,[rip+0x1423f]        # 44e7d7 <strcmp@plt+0x4b03f>
  43a598:	mov    edi,0x5
  43a59d:	xor    eax,eax
  43a59f:	call   42e520 <strcmp@plt+0x2ad88>
  43a5a4:	xor    edi,edi
  43a5a6:	call   422be0 <strcmp@plt+0x1f448>
  43a5ab:	mov    QWORD PTR [r12],rax
  43a5af:	mov    rdi,r15
  43a5b2:	call   42bff0 <strcmp@plt+0x28858>
  43a5b7:	mov    rdi,QWORD PTR [r12]
  43a5bb:	cmp    DWORD PTR [rdi+0x18],0x0
  43a5bf:	je     43a62e <strcmp@plt+0x36e96>
  43a5c1:	lea    rax,[rip+0x2a7f8]        # 464dc0 <strcmp@plt+0x61628>
  43a5c8:	cmp    DWORD PTR [rax],0x0
  43a5cb:	jle    43a606 <strcmp@plt+0x36e6e>
  43a5cd:	cmp    ebx,0x2
  43a5d0:	lea    rax,[rip+0x936c]        # 443943 <strcmp@plt+0x401ab>
  43a5d7:	lea    r15,[rip+0x936a]        # 443948 <strcmp@plt+0x401b0>
  43a5de:	cmove  r15,rax
  43a5e2:	mov    r12,QWORD PTR [r14]
  43a5e5:	call   422e20 <strcmp@plt+0x1f688>
  43a5ea:	lea    rsi,[rip+0x14278]        # 44e869 <strcmp@plt+0x4b0d1>
  43a5f1:	mov    edi,0x5
  43a5f6:	mov    rdx,r15
  43a5f9:	mov    rcx,r12
  43a5fc:	mov    r8,rax
  43a5ff:	xor    eax,eax
  43a601:	call   42e520 <strcmp@plt+0x2ad88>
  43a606:	lea    rax,[rip+0x2ddfb]        # 468408 <strcmp@plt+0x64c70>
  43a60d:	mov    rax,QWORD PTR [rax]
  43a610:	mov    rdi,r14
  43a613:	mov    esi,ebx
  43a615:	call   QWORD PTR [rax+0x10]
  43a618:	lea    rax,[rip+0x35f71]        # 470590 <strcmp@plt+0x6cdf8>
  43a61f:	mov    rdi,QWORD PTR [rax]
  43a622:	mov    rax,QWORD PTR [rdi+0x28]
  43a626:	mov    rsi,r14
  43a629:	mov    edx,ebx
  43a62b:	call   QWORD PTR [rax+0x10]
  43a62e:	mov    eax,ebp
  43a630:	pop    rbx
  43a631:	pop    r12
  43a633:	pop    r14
  43a635:	pop    r15
  43a637:	pop    rbp
  43a638:	ret    
  43a639:	nop    DWORD PTR [rax+0x0]
  43a640:	cmp    esi,0xa
  43a643:	je     43a652 <strcmp@plt+0x36eba>
  43a645:	cmp    esi,0x2
  43a648:	jne    43a65a <strcmp@plt+0x36ec2>
  43a64a:	add    rdi,0x20
  43a64e:	mov    rax,QWORD PTR [rdi]
  43a651:	ret    
  43a652:	add    rdi,0x28
  43a656:	mov    rax,QWORD PTR [rdi]
  43a659:	ret    
  43a65a:	xor    eax,eax
  43a65c:	ret    
  43a65d:	nop    DWORD PTR [rax]
  43a660:	cmp    esi,0xa
  43a663:	je     43a672 <strcmp@plt+0x36eda>
  43a665:	cmp    esi,0x2
  43a668:	jne    43a67a <strcmp@plt+0x36ee2>
  43a66a:	add    rdi,0x10
  43a66e:	mov    rax,QWORD PTR [rdi]
  43a671:	ret    
  43a672:	add    rdi,0x18
  43a676:	mov    rax,QWORD PTR [rdi]
  43a679:	ret    
  43a67a:	xor    eax,eax
  43a67c:	ret    
  43a67d:	nop    DWORD PTR [rax]
  43a680:	push   rbp
  43a681:	push   r15
  43a683:	push   r14
  43a685:	push   r13
  43a687:	push   r12
  43a689:	push   rbx
  43a68a:	sub    rsp,0x18
  43a68e:	movsxd rax,DWORD PTR [rip+0x35e6f]        # 470504 <strcmp@plt+0x6cd6c>
  43a695:	test   rdi,rdi
  43a698:	je     43a772 <strcmp@plt+0x36fda>
  43a69e:	mov    rbx,rdi
  43a6a1:	inc    eax
  43a6a3:	cdqe   
  43a6a5:	imul   rcx,rax,0x66666667
  43a6ac:	mov    rdx,rcx
  43a6af:	shr    rdx,0x3f
  43a6b3:	sar    rcx,0x21
  43a6b7:	add    ecx,edx
  43a6b9:	lea    ecx,[rcx+rcx*4]
  43a6bc:	sub    eax,ecx
  43a6be:	mov    DWORD PTR [rip+0x35e40],eax        # 470504 <strcmp@plt+0x6cd6c>
  43a6c4:	cdqe   
  43a6c6:	imul   rax,rax,0x1f4
  43a6cd:	lea    r14,[rip+0x3546c]        # 46fb40 <strcmp@plt+0x6c3a8>
  43a6d4:	add    r14,rax
  43a6d7:	cmp    BYTE PTR [rdi+0xc],0x0
  43a6db:	lea    rax,[rip+0x100c1]        # 44a7a3 <strcmp@plt+0x4700b>
  43a6e2:	lea    r15,[rip+0x100b7]        # 44a7a0 <strcmp@plt+0x47008>
  43a6e9:	cmove  r15,rax
  43a6ed:	mov    rax,QWORD PTR [rdi]
  43a6f0:	mov    QWORD PTR [rsp+0x8],rax
  43a6f5:	mov    rdi,QWORD PTR [rdi+0x10]
  43a6f9:	call   422e20 <strcmp@plt+0x1f688>
  43a6fe:	mov    r13,rax
  43a701:	mov    rdi,QWORD PTR [rbx+0x20]
  43a705:	call   422e20 <strcmp@plt+0x1f688>
  43a70a:	mov    QWORD PTR [rsp+0x10],rax
  43a70f:	mov    eax,DWORD PTR [rbx+0x30]
  43a712:	mov    QWORD PTR [rsp],rax
  43a716:	mov    rdi,QWORD PTR [rbx+0x18]
  43a71a:	call   422e20 <strcmp@plt+0x1f688>
  43a71f:	mov    r12,rax
  43a722:	mov    rdi,QWORD PTR [rbx+0x28]
  43a726:	call   422e20 <strcmp@plt+0x1f688>
  43a72b:	mov    rbp,rax
  43a72e:	mov    ebx,DWORD PTR [rbx+0x34]
  43a731:	sub    rsp,0x8
  43a735:	lea    rdx,[rip+0x14167]        # 44e8a3 <strcmp@plt+0x4b10b>
  43a73c:	mov    esi,0x1f4
  43a741:	mov    rdi,r14
  43a744:	mov    rcx,QWORD PTR [rsp+0x10]
  43a749:	mov    r8,r15
  43a74c:	mov    r9,r13
  43a74f:	mov    eax,0x0
  43a754:	push   rbx
  43a755:	push   rbp
  43a756:	push   r12
  43a758:	push   QWORD PTR [rsp+0x20]
  43a75c:	push   QWORD PTR [rsp+0x38]
  43a760:	call   403630 <snprintf@plt>
  43a765:	add    rsp,0x30
  43a769:	movsxd rax,DWORD PTR [rip+0x35d94]        # 470504 <strcmp@plt+0x6cd6c>
  43a770:	jmp    43a78f <strcmp@plt+0x36ff7>
  43a772:	imul   rcx,rax,0x1f4
  43a779:	lea    rdx,[rip+0x353c0]        # 46fb40 <strcmp@plt+0x6c3a8>
  43a780:	mov    DWORD PTR [rcx+rdx*1+0x3],0x5f4c4c
  43a788:	mov    DWORD PTR [rcx+rdx*1],0x4c554e5f
  43a78f:	imul   rcx,rax,0x1f4
  43a796:	lea    rax,[rip+0x353a3]        # 46fb40 <strcmp@plt+0x6c3a8>
  43a79d:	add    rax,rcx
  43a7a0:	add    rsp,0x18
  43a7a4:	pop    rbx
  43a7a5:	pop    r12
  43a7a7:	pop    r13
  43a7a9:	pop    r14
  43a7ab:	pop    r15
  43a7ad:	pop    rbp
  43a7ae:	ret    
  43a7af:	nop
  43a7b0:	push   r15
  43a7b2:	push   r14
  43a7b4:	push   rbx
  43a7b5:	mov    r14,rdi
  43a7b8:	lea    r15,[rip+0x35359]        # 46fb18 <strcmp@plt+0x6c380>
  43a7bf:	mov    rax,QWORD PTR [r15]
  43a7c2:	call   QWORD PTR [rax+0x40]
  43a7c5:	test   eax,eax
  43a7c7:	je     43a879 <strcmp@plt+0x370e1>
  43a7cd:	mov    edi,0x38
  43a7d2:	call   431d60 <strcmp@plt+0x2e5c8>
  43a7d7:	mov    rbx,rax
  43a7da:	mov    rdi,r14
  43a7dd:	call   403710 <strdup@plt>
  43a7e2:	mov    QWORD PTR [rbx],rax
  43a7e5:	mov    rax,QWORD PTR [r15]
  43a7e8:	mov    rdi,r14
  43a7eb:	call   QWORD PTR [rax+0x40]
  43a7ee:	mov    DWORD PTR [rbx+0x8],eax
  43a7f1:	vxorps xmm0,xmm0,xmm0
  43a7f5:	vmovups XMMWORD PTR [rbx+0x10],xmm0
  43a7fa:	movabs rax,0xfffffff7fffffff7
  43a804:	mov    QWORD PTR [rbx+0x30],rax
  43a808:	mov    rax,QWORD PTR [r15]
  43a80b:	mov    rdi,r14
  43a80e:	call   QWORD PTR [rax+0x38]
  43a811:	cmp    al,0x1
  43a813:	sete   BYTE PTR [rbx+0xc]
  43a817:	lea    r15,[rip+0x2a5a2]        # 464dc0 <strcmp@plt+0x61628>
  43a81e:	cmp    DWORD PTR [r15],0x0
  43a822:	jle    43a83d <strcmp@plt+0x370a5>
  43a824:	mov    ecx,DWORD PTR [rbx+0x8]
  43a827:	lea    rsi,[rip+0x14124]        # 44e952 <strcmp@plt+0x4b1ba>
  43a82e:	mov    edi,0x5
  43a833:	mov    rdx,r14
  43a836:	xor    eax,eax
  43a838:	call   42e520 <strcmp@plt+0x2ad88>
  43a83d:	vxorps xmm0,xmm0,xmm0
  43a841:	vmovups XMMWORD PTR [rbx+0x20],xmm0
  43a846:	lea    rax,[rip+0x352d3]        # 46fb20 <strcmp@plt+0x6c388>
  43a84d:	mov    rsi,QWORD PTR [rax]
  43a850:	mov    rdi,rbx
  43a853:	call   42baa0 <strcmp@plt+0x28308>
  43a858:	cmp    DWORD PTR [r15],0x2
  43a85c:	jl     43a891 <strcmp@plt+0x370f9>
  43a85e:	mov    ecx,DWORD PTR [rbx+0x8]
  43a861:	lea    rsi,[rip+0x1411a]        # 44e982 <strcmp@plt+0x4b1ea>
  43a868:	mov    edi,0x6
  43a86d:	mov    rdx,r14
  43a870:	xor    eax,eax
  43a872:	call   42e520 <strcmp@plt+0x2ad88>
  43a877:	jmp    43a891 <strcmp@plt+0x370f9>
  43a879:	lea    rsi,[rip+0x14082]        # 44e902 <strcmp@plt+0x4b16a>
  43a880:	xor    ebx,ebx
  43a882:	mov    edi,0x2
  43a887:	mov    rdx,r14
  43a88a:	xor    eax,eax
  43a88c:	call   42e520 <strcmp@plt+0x2ad88>
  43a891:	mov    rax,rbx
  43a894:	pop    rbx
  43a895:	pop    r14
  43a897:	pop    r15
  43a899:	ret    
  43a89a:	nop    WORD PTR [rax+rax*1+0x0]
  43a8a0:	push   r15
  43a8a2:	push   r14
  43a8a4:	push   r13
  43a8a6:	push   r12
  43a8a8:	push   rbx
  43a8a9:	lea    rax,[rip+0x35270]        # 46fb20 <strcmp@plt+0x6c388>
  43a8b0:	mov    r12,QWORD PTR [rax]
  43a8b3:	mov    rbx,QWORD PTR [r12+0x8]
  43a8b8:	cmp    rbx,r12
  43a8bb:	je     43a8ef <strcmp@plt+0x37157>
  43a8bd:	mov    r15,rdi
  43a8c0:	xor    r14d,r14d
  43a8c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a8cd:	nop    DWORD PTR [rax]
  43a8d0:	mov    r13,QWORD PTR [rbx+0x10]
  43a8d4:	mov    rdi,QWORD PTR [r13+0x0]
  43a8d8:	mov    rsi,r15
  43a8db:	call   403798 <strcmp@plt>
  43a8e0:	test   eax,eax
  43a8e2:	je     43a8f4 <strcmp@plt+0x3715c>
  43a8e4:	mov    rbx,QWORD PTR [rbx+0x8]
  43a8e8:	cmp    rbx,r12
  43a8eb:	jne    43a8d0 <strcmp@plt+0x37138>
  43a8ed:	jmp    43a8f7 <strcmp@plt+0x3715f>
  43a8ef:	xor    r14d,r14d
  43a8f2:	jmp    43a8f7 <strcmp@plt+0x3715f>
  43a8f4:	mov    r14,r13
  43a8f7:	mov    rax,r14
  43a8fa:	pop    rbx
  43a8fb:	pop    r12
  43a8fd:	pop    r13
  43a8ff:	pop    r14
  43a901:	pop    r15
  43a903:	ret    
  43a904:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a90e:	xchg   ax,ax
  43a910:	push   rbp
  43a911:	push   r15
  43a913:	push   r14
  43a915:	push   r13
  43a917:	push   r12
  43a919:	push   rbx
  43a91a:	push   rax
  43a91b:	lea    r15,[rip+0x351fe]        # 46fb20 <strcmp@plt+0x6c388>
  43a922:	mov    rax,QWORD PTR [r15]
  43a925:	mov    rbx,QWORD PTR [rax+0x8]
  43a929:	cmp    rbx,rax
  43a92c:	je     43a969 <strcmp@plt+0x371d1>
  43a92e:	mov    r13d,edi
  43a931:	lea    r12,[rip+0x351e0]        # 46fb18 <strcmp@plt+0x6c380>
  43a938:	xor    r14d,r14d
  43a93b:	nop    DWORD PTR [rax+rax*1+0x0]
  43a940:	mov    rbp,QWORD PTR [rbx+0x10]
  43a944:	mov    eax,DWORD PTR [rbp+0x8]
  43a947:	test   eax,eax
  43a949:	jne    43a959 <strcmp@plt+0x371c1>
  43a94b:	mov    rax,QWORD PTR [r12]
  43a94f:	mov    rdi,QWORD PTR [rbp+0x0]
  43a953:	call   QWORD PTR [rax+0x40]
  43a956:	mov    DWORD PTR [rbp+0x8],eax
  43a959:	cmp    eax,r13d
  43a95c:	je     43a96e <strcmp@plt+0x371d6>
  43a95e:	mov    rbx,QWORD PTR [rbx+0x8]
  43a962:	cmp    rbx,QWORD PTR [r15]
  43a965:	jne    43a940 <strcmp@plt+0x371a8>
  43a967:	jmp    43a971 <strcmp@plt+0x371d9>
  43a969:	xor    r14d,r14d
  43a96c:	jmp    43a971 <strcmp@plt+0x371d9>
  43a96e:	mov    r14,rbp
  43a971:	mov    rax,r14
  43a974:	add    rsp,0x8
  43a978:	pop    rbx
  43a979:	pop    r12
  43a97b:	pop    r13
  43a97d:	pop    r14
  43a97f:	pop    r15
  43a981:	pop    rbp
  43a982:	ret    
  43a983:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43a98d:	nop    DWORD PTR [rax]
  43a990:	push   r15
  43a992:	push   r14
  43a994:	push   r12
  43a996:	push   rbx
  43a997:	push   rax
  43a998:	mov    r14,rdi
  43a99b:	lea    r15,[rip+0x3517e]        # 46fb20 <strcmp@plt+0x6c388>
  43a9a2:	mov    rax,QWORD PTR [r15]
  43a9a5:	mov    rbx,QWORD PTR [rax+0x8]
  43a9a9:	cmp    rbx,rax
  43a9ac:	jne    43a9b9 <strcmp@plt+0x37221>
  43a9ae:	jmp    43a9f8 <strcmp@plt+0x37260>
  43a9b0:	mov    rbx,QWORD PTR [rbx+0x8]
  43a9b4:	cmp    rbx,QWORD PTR [r15]
  43a9b7:	je     43a9f8 <strcmp@plt+0x37260>
  43a9b9:	mov    r12,QWORD PTR [rbx+0x10]
  43a9bd:	mov    rdi,r14
  43a9c0:	call   422ef0 <strcmp@plt+0x1f758>
  43a9c5:	cmp    ax,0xa
  43a9c9:	je     43a9e0 <strcmp@plt+0x37248>
  43a9cb:	cmp    ax,0x2
  43a9cf:	jne    43a9b0 <strcmp@plt+0x37218>
  43a9d1:	mov    rsi,QWORD PTR [r12+0x10]
  43a9d6:	test   rsi,rsi
  43a9d9:	jne    43a9ea <strcmp@plt+0x37252>
  43a9db:	jmp    43a9b0 <strcmp@plt+0x37218>
  43a9dd:	nop    DWORD PTR [rax]
  43a9e0:	mov    rsi,QWORD PTR [r12+0x18]
  43a9e5:	test   rsi,rsi
  43a9e8:	je     43a9b0 <strcmp@plt+0x37218>
  43a9ea:	mov    rdi,r14
  43a9ed:	call   423670 <strcmp@plt+0x1fed8>
  43a9f2:	test   eax,eax
  43a9f4:	jne    43a9b0 <strcmp@plt+0x37218>
  43a9f6:	jmp    43aa2a <strcmp@plt+0x37292>
  43a9f8:	lea    rax,[rip+0x2a3c1]        # 464dc0 <strcmp@plt+0x61628>
  43a9ff:	cmp    DWORD PTR [rax],0x2
  43aa02:	jge    43aa09 <strcmp@plt+0x37271>
  43aa04:	xor    r12d,r12d
  43aa07:	jmp    43aa2a <strcmp@plt+0x37292>
  43aa09:	mov    rdi,r14
  43aa0c:	call   422e20 <strcmp@plt+0x1f688>
  43aa11:	lea    rsi,[rip+0x13fa0]        # 44e9b8 <strcmp@plt+0x4b220>
  43aa18:	xor    r12d,r12d
  43aa1b:	mov    edi,0x6
  43aa20:	mov    rdx,rax
  43aa23:	xor    eax,eax
  43aa25:	call   42e520 <strcmp@plt+0x2ad88>
  43aa2a:	mov    rax,r12
  43aa2d:	add    rsp,0x8
  43aa31:	pop    rbx
  43aa32:	pop    r12
  43aa34:	pop    r14
  43aa36:	pop    r15
  43aa38:	ret    
  43aa39:	nop    DWORD PTR [rax+0x0]
  43aa40:	push   rbp
  43aa41:	push   rbx
  43aa42:	push   rax
  43aa43:	mov    rbx,rdi
  43aa46:	call   422ef0 <strcmp@plt+0x1f758>
  43aa4b:	mov    ebp,eax
  43aa4d:	mov    rdi,rbx
  43aa50:	call   43a990 <strcmp@plt+0x371f8>
  43aa55:	test   rax,rax
  43aa58:	je     43aa6c <strcmp@plt+0x372d4>
  43aa5a:	cmp    bp,0xa
  43aa5e:	je     43aa70 <strcmp@plt+0x372d8>
  43aa60:	cmp    bp,0x2
  43aa64:	jne    43aa6c <strcmp@plt+0x372d4>
  43aa66:	add    rax,0x30
  43aa6a:	jmp    43aa74 <strcmp@plt+0x372dc>
  43aa6c:	xor    eax,eax
  43aa6e:	jmp    43aa74 <strcmp@plt+0x372dc>
  43aa70:	add    rax,0x34
  43aa74:	add    rsp,0x8
  43aa78:	pop    rbx
  43aa79:	pop    rbp
  43aa7a:	ret    
  43aa7b:	nop    DWORD PTR [rax+rax*1+0x0]
  43aa80:	mov    rax,rdi
  43aa83:	cmp    esi,0xa
  43aa86:	je     43aa92 <strcmp@plt+0x372fa>
  43aa88:	cmp    esi,0x2
  43aa8b:	jne    43aa97 <strcmp@plt+0x372ff>
  43aa8d:	add    rax,0x30
  43aa91:	ret    
  43aa92:	add    rax,0x34
  43aa96:	ret    
  43aa97:	xor    eax,eax
  43aa99:	ret    
  43aa9a:	nop    WORD PTR [rax+rax*1+0x0]
  43aaa0:	push   rbp
  43aaa1:	push   r15
  43aaa3:	push   r14
  43aaa5:	push   r13
  43aaa7:	push   r12
  43aaa9:	push   rbx
  43aaaa:	sub    rsp,0xfb8
  43aab1:	lea    rax,[rip+0x35068]        # 46fb20 <strcmp@plt+0x6c388>
  43aab8:	mov    rax,QWORD PTR [rax]
  43aabb:	test   rax,rax
  43aabe:	je     43aaca <strcmp@plt+0x37332>
  43aac0:	cmp    DWORD PTR [rax+0x18],0x0
  43aac4:	je     43ac33 <strcmp@plt+0x3749b>
  43aaca:	cmp    edi,0x5
  43aacd:	jl     43aae3 <strcmp@plt+0x3734b>
  43aacf:	lea    rcx,[rip+0x2a2ea]        # 464dc0 <strcmp@plt+0x61628>
  43aad6:	mov    ecx,DWORD PTR [rcx]
  43aad8:	add    ecx,0x4
  43aadb:	cmp    ecx,edi
  43aadd:	jl     43ac33 <strcmp@plt+0x3749b>
  43aae3:	mov    DWORD PTR [rsp+0xc],edi
  43aae7:	vmovups ymm0,YMMWORD PTR [rip+0x13f0b]        # 44e9fa <strcmp@plt+0x4b262>
  43aaef:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  43aaf5:	mov    DWORD PTR [rsp+0x30],0xa0a2a
  43aafd:	mov    r13,QWORD PTR [rax+0x8]
  43ab01:	cmp    r13,rax
  43ab04:	je     43ac04 <strcmp@plt+0x3746c>
  43ab0a:	lea    r12,[rsp+0x10]
  43ab0f:	jmp    43ab34 <strcmp@plt+0x3739c>
  43ab11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ab1b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ab20:	mov    r13,QWORD PTR [r13+0x8]
  43ab24:	lea    rax,[rip+0x34ff5]        # 46fb20 <strcmp@plt+0x6c388>
  43ab2b:	cmp    r13,QWORD PTR [rax]
  43ab2e:	je     43ac04 <strcmp@plt+0x3746c>
  43ab34:	mov    rbx,QWORD PTR [r13+0x10]
  43ab38:	mov    rdi,r12
  43ab3b:	vzeroupper 
  43ab3e:	call   4031e0 <strlen@plt>
  43ab43:	lea    rdi,[rsp+rax*1]
  43ab47:	add    rdi,0x10
  43ab4b:	mov    esi,0xfa0
  43ab50:	sub    rsi,rax
  43ab53:	mov    rcx,QWORD PTR [rbx]
  43ab56:	cmp    BYTE PTR [rbx+0xc],0x0
  43ab5a:	lea    r8,[rip+0xfc3f]        # 44a7a0 <strcmp@plt+0x47008>
  43ab61:	lea    rax,[rip+0xfc3b]        # 44a7a3 <strcmp@plt+0x4700b>
  43ab68:	cmove  r8,rax
  43ab6c:	lea    rdx,[rip+0x13eab]        # 44ea1e <strcmp@plt+0x4b286>
  43ab73:	xor    eax,eax
  43ab75:	call   403630 <snprintf@plt>
  43ab7a:	mov    rbp,QWORD PTR [rbx+0x10]
  43ab7e:	test   rbp,rbp
  43ab81:	je     43abbb <strcmp@plt+0x37423>
  43ab83:	mov    rdi,r12
  43ab86:	call   4031e0 <strlen@plt>
  43ab8b:	lea    r14,[rsp+rax*1]
  43ab8f:	add    r14,0x10
  43ab93:	mov    r15d,0xfa0
  43ab99:	sub    r15,rax
  43ab9c:	mov    rdi,rbp
  43ab9f:	call   422e20 <strcmp@plt+0x1f688>
  43aba4:	mov    rdi,r14
  43aba7:	mov    rsi,r15
  43abaa:	lea    rdx,[rip+0x13e7d]        # 44ea2e <strcmp@plt+0x4b296>
  43abb1:	mov    rcx,rax
  43abb4:	xor    eax,eax
  43abb6:	call   403630 <snprintf@plt>
  43abbb:	mov    rbp,QWORD PTR [rbx+0x18]
  43abbf:	test   rbp,rbp
  43abc2:	je     43ab20 <strcmp@plt+0x37388>
  43abc8:	mov    rdi,r12
  43abcb:	call   4031e0 <strlen@plt>
  43abd0:	lea    r14,[rsp+rax*1]
  43abd4:	add    r14,0x10
  43abd8:	mov    ebx,0xfa0
  43abdd:	sub    rbx,rax
  43abe0:	mov    rdi,rbp
  43abe3:	call   422e20 <strcmp@plt+0x1f688>
  43abe8:	mov    rdi,r14
  43abeb:	mov    rsi,rbx
  43abee:	lea    rdx,[rip+0x13e4b]        # 44ea40 <strcmp@plt+0x4b2a8>
  43abf5:	mov    rcx,rax
  43abf8:	xor    eax,eax
  43abfa:	call   403630 <snprintf@plt>
  43abff:	jmp    43ab20 <strcmp@plt+0x37388>
  43ac04:	mov    edi,DWORD PTR [rsp+0xc]
  43ac08:	cmp    edi,0x5
  43ac0b:	jl     43ac1d <strcmp@plt+0x37485>
  43ac0d:	lea    rax,[rip+0x2a1ac]        # 464dc0 <strcmp@plt+0x61628>
  43ac14:	mov    eax,DWORD PTR [rax]
  43ac16:	add    eax,0x4
  43ac19:	cmp    eax,edi
  43ac1b:	jl     43ac33 <strcmp@plt+0x3749b>
  43ac1d:	lea    rsi,[rip+0x8a91]        # 4436b5 <strcmp@plt+0x3ff1d>
  43ac24:	lea    rdx,[rsp+0x10]
  43ac29:	xor    eax,eax
  43ac2b:	vzeroupper 
  43ac2e:	call   42e520 <strcmp@plt+0x2ad88>
  43ac33:	add    rsp,0xfb8
  43ac3a:	pop    rbx
  43ac3b:	pop    r12
  43ac3d:	pop    r13
  43ac3f:	pop    r14
  43ac41:	pop    r15
  43ac43:	pop    rbp
  43ac44:	vzeroupper 
  43ac47:	ret    
  43ac48:	nop    DWORD PTR [rax+rax*1+0x0]
  43ac50:	push   rbx
  43ac51:	cmp    edi,0xa
  43ac54:	je     43aca8 <strcmp@plt+0x37510>
  43ac56:	mov    edx,edi
  43ac58:	cmp    edi,0x2
  43ac5b:	jne    43ace7 <strcmp@plt+0x3754f>
  43ac61:	lea    rax,[rip+0x34eb8]        # 46fb20 <strcmp@plt+0x6c388>
  43ac68:	mov    rax,QWORD PTR [rax]
  43ac6b:	mov    rcx,QWORD PTR [rax+0x8]
  43ac6f:	xor    ebx,ebx
  43ac71:	cmp    rcx,rax
  43ac74:	jne    43ac8d <strcmp@plt+0x374f5>
  43ac76:	jmp    43ad0c <strcmp@plt+0x37574>
  43ac7b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ac80:	mov    rcx,QWORD PTR [rcx+0x8]
  43ac84:	cmp    rcx,rax
  43ac87:	je     43ad0c <strcmp@plt+0x37574>
  43ac8d:	mov    rdx,QWORD PTR [rcx+0x10]
  43ac91:	mov    rsi,QWORD PTR [rdx+0x10]
  43ac95:	test   rsi,rsi
  43ac98:	je     43ac80 <strcmp@plt+0x374e8>
  43ac9a:	cmp    DWORD PTR [rsi+0x18],0x0
  43ac9e:	je     43ac80 <strcmp@plt+0x374e8>
  43aca0:	cmp    BYTE PTR [rdx+0xc],0x1
  43aca4:	jne    43ac80 <strcmp@plt+0x374e8>
  43aca6:	jmp    43ace2 <strcmp@plt+0x3754a>
  43aca8:	lea    rax,[rip+0x34e71]        # 46fb20 <strcmp@plt+0x6c388>
  43acaf:	mov    rax,QWORD PTR [rax]
  43acb2:	mov    rcx,QWORD PTR [rax+0x8]
  43acb6:	xor    ebx,ebx
  43acb8:	cmp    rcx,rax
  43acbb:	jne    43acc9 <strcmp@plt+0x37531>
  43acbd:	jmp    43ad0c <strcmp@plt+0x37574>
  43acbf:	nop
  43acc0:	mov    rcx,QWORD PTR [rcx+0x8]
  43acc4:	cmp    rcx,rax
  43acc7:	je     43ad0c <strcmp@plt+0x37574>
  43acc9:	mov    rdx,QWORD PTR [rcx+0x10]
  43accd:	mov    rsi,QWORD PTR [rdx+0x18]
  43acd1:	test   rsi,rsi
  43acd4:	je     43acc0 <strcmp@plt+0x37528>
  43acd6:	cmp    DWORD PTR [rsi+0x18],0x0
  43acda:	je     43acc0 <strcmp@plt+0x37528>
  43acdc:	cmp    BYTE PTR [rdx+0xc],0x1
  43ace0:	jne    43acc0 <strcmp@plt+0x37528>
  43ace2:	mov    rbx,rdx
  43ace5:	jmp    43ad0c <strcmp@plt+0x37574>
  43ace7:	lea    rax,[rip+0x2a0d2]        # 464dc0 <strcmp@plt+0x61628>
  43acee:	cmp    DWORD PTR [rax],0x2
  43acf1:	jge    43acf7 <strcmp@plt+0x3755f>
  43acf3:	xor    ebx,ebx
  43acf5:	jmp    43ad0c <strcmp@plt+0x37574>
  43acf7:	lea    rsi,[rip+0x13d54]        # 44ea52 <strcmp@plt+0x4b2ba>
  43acfe:	xor    ebx,ebx
  43ad00:	mov    edi,0x6
  43ad05:	xor    eax,eax
  43ad07:	call   42e520 <strcmp@plt+0x2ad88>
  43ad0c:	mov    rax,rbx
  43ad0f:	pop    rbx
  43ad10:	ret    
  43ad11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ad1b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ad20:	cmp    esi,0xa
  43ad23:	je     43ad33 <strcmp@plt+0x3759b>
  43ad25:	mov    eax,0xfffffff7
  43ad2a:	cmp    esi,0x2
  43ad2d:	jne    43ad36 <strcmp@plt+0x3759e>
  43ad2f:	mov    eax,DWORD PTR [rdi+0x30]
  43ad32:	ret    
  43ad33:	mov    eax,DWORD PTR [rdi+0x34]
  43ad36:	ret    
  43ad37:	nop    WORD PTR [rax+rax*1+0x0]
  43ad40:	push   rbx
  43ad41:	cmp    DWORD PTR [rdi+0x18],0x1
  43ad45:	jne    43ad62 <strcmp@plt+0x375ca>
  43ad47:	lea    rax,[rip+0x34dda]        # 46fb28 <strcmp@plt+0x6c390>
  43ad4e:	mov    rbx,QWORD PTR [rax]
  43ad51:	call   422e20 <strcmp@plt+0x1f688>
  43ad56:	mov    rdi,rbx
  43ad59:	mov    rsi,rax
  43ad5c:	pop    rbx
  43ad5d:	jmp    436340 <strcmp@plt+0x32ba8>
  43ad62:	lea    rax,[rip+0x2a057]        # 464dc0 <strcmp@plt+0x61628>
  43ad69:	cmp    DWORD PTR [rax],0x0
  43ad6c:	jle    43ad89 <strcmp@plt+0x375f1>
  43ad6e:	call   422e20 <strcmp@plt+0x1f688>
  43ad73:	lea    rsi,[rip+0x13cf9]        # 44ea73 <strcmp@plt+0x4b2db>
  43ad7a:	mov    edi,0x5
  43ad7f:	mov    rdx,rax
  43ad82:	xor    eax,eax
  43ad84:	call   42e520 <strcmp@plt+0x2ad88>
  43ad89:	xor    eax,eax
  43ad8b:	pop    rbx
  43ad8c:	ret    
  43ad8d:	nop    DWORD PTR [rax]
  43ad90:	push   rbx
  43ad91:	sub    rsp,0x20
  43ad95:	call   4035d0 <getpid@plt>
  43ad9a:	mov    DWORD PTR [rsp+0xc],eax
  43ad9e:	mov    DWORD PTR [rsp+0x8],0x19980330
  43ada6:	lea    rdi,[rsp+0x8]
  43adab:	lea    rsi,[rsp+0x10]
  43adb0:	call   403480 <capget@plt>
  43adb5:	test   eax,eax
  43adb7:	js     43adfe <strcmp@plt+0x37666>
  43adb9:	lea    rax,[rip+0x2a000]        # 464dc0 <strcmp@plt+0x61628>
  43adc0:	cmp    DWORD PTR [rax],0x0
  43adc3:	jle    43ade0 <strcmp@plt+0x37648>
  43adc5:	mov    edx,DWORD PTR [rsp+0x10]
  43adc9:	mov    ecx,DWORD PTR [rsp+0x14]
  43adcd:	lea    rsi,[rip+0x13d1b]        # 44eaef <strcmp@plt+0x4b357>
  43add4:	mov    edi,0x5
  43add9:	xor    eax,eax
  43addb:	call   42e520 <strcmp@plt+0x2ad88>
  43ade0:	mov    eax,0x3000
  43ade5:	and    eax,DWORD PTR [rsp+0x10]
  43ade9:	mov    ebx,0x1
  43adee:	cmp    eax,0x3000
  43adf3:	je     43ae13 <strcmp@plt+0x3767b>
  43adf5:	lea    rsi,[rip+0x13d1a]        # 44eb16 <strcmp@plt+0x4b37e>
  43adfc:	jmp    43ae05 <strcmp@plt+0x3766d>
  43adfe:	lea    rsi,[rip+0x13cca]        # 44eacf <strcmp@plt+0x4b337>
  43ae05:	xor    ebx,ebx
  43ae07:	mov    edi,0x1
  43ae0c:	xor    eax,eax
  43ae0e:	call   42e520 <strcmp@plt+0x2ad88>
  43ae13:	mov    eax,ebx
  43ae15:	add    rsp,0x20
  43ae19:	pop    rbx
  43ae1a:	ret    
  43ae1b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ae20:	push   rax
  43ae21:	cmp    edi,0x1
  43ae24:	jne    43ae48 <strcmp@plt+0x376b0>
  43ae26:	lea    rax,[rip+0x29f93]        # 464dc0 <strcmp@plt+0x61628>
  43ae2d:	cmp    DWORD PTR [rax],0x0
  43ae30:	jle    43ae46 <strcmp@plt+0x376ae>
  43ae32:	lea    rsi,[rip+0x13d25]        # 44eb5e <strcmp@plt+0x4b3c6>
  43ae39:	mov    edi,0x5
  43ae3e:	xor    eax,eax
  43ae40:	pop    rcx
  43ae41:	jmp    42e520 <strcmp@plt+0x2ad88>
  43ae46:	pop    rax
  43ae47:	ret    
  43ae48:	mov    edx,edi
  43ae4a:	lea    rax,[rip+0x29f6f]        # 464dc0 <strcmp@plt+0x61628>
  43ae51:	cmp    edi,0x2
  43ae54:	je     43ae69 <strcmp@plt+0x376d1>
  43ae56:	cmp    edx,0xf
  43ae59:	jne    43ae86 <strcmp@plt+0x376ee>
  43ae5b:	cmp    DWORD PTR [rax],0x0
  43ae5e:	jle    43ae81 <strcmp@plt+0x376e9>
  43ae60:	lea    rsi,[rip+0x13d0f]        # 44eb76 <strcmp@plt+0x4b3de>
  43ae67:	jmp    43ae75 <strcmp@plt+0x376dd>
  43ae69:	cmp    DWORD PTR [rax],0x0
  43ae6c:	jle    43ae81 <strcmp@plt+0x376e9>
  43ae6e:	lea    rsi,[rip+0x13d29]        # 44eb9e <strcmp@plt+0x4b406>
  43ae75:	mov    edi,0x5
  43ae7a:	xor    eax,eax
  43ae7c:	call   42e520 <strcmp@plt+0x2ad88>
  43ae81:	call   43aeb0 <strcmp@plt+0x37718>
  43ae86:	cmp    DWORD PTR [rax],0x0
  43ae89:	jle    43ae9e <strcmp@plt+0x37706>
  43ae8b:	lea    rsi,[rip+0x13d2f]        # 44ebc1 <strcmp@plt+0x4b429>
  43ae92:	mov    edi,0x5
  43ae97:	xor    eax,eax
  43ae99:	call   42e520 <strcmp@plt+0x2ad88>
  43ae9e:	mov    edi,0x1
  43aea3:	call   4034b0 <exit@plt>
  43aea8:	nop    DWORD PTR [rax+rax*1+0x0]
  43aeb0:	push   rax
  43aeb1:	lea    rax,[rip+0x29f08]        # 464dc0 <strcmp@plt+0x61628>
  43aeb8:	cmp    DWORD PTR [rax],0x2
  43aebb:	jl     43aed0 <strcmp@plt+0x37738>
  43aebd:	lea    rsi,[rip+0x13d13]        # 44ebd7 <strcmp@plt+0x4b43f>
  43aec4:	mov    edi,0x6
  43aec9:	xor    eax,eax
  43aecb:	call   42e520 <strcmp@plt+0x2ad88>
  43aed0:	lea    rax,[rip+0x356b9]        # 470590 <strcmp@plt+0x6cdf8>
  43aed7:	mov    rdi,QWORD PTR [rax]
  43aeda:	call   407260 <strcmp@plt+0x3ac8>
  43aedf:	lea    rax,[rip+0x2d522]        # 468408 <strcmp@plt+0x64c70>
  43aee6:	mov    rcx,QWORD PTR [rax]
  43aee9:	test   rcx,rcx
  43aeec:	je     43aef3 <strcmp@plt+0x3775b>
  43aeee:	xor    eax,eax
  43aef0:	call   QWORD PTR [rcx+0x8]
  43aef3:	lea    rax,[rip+0x34c1e]        # 46fb18 <strcmp@plt+0x6c380>
  43aefa:	mov    rcx,QWORD PTR [rax]
  43aefd:	test   rcx,rcx
  43af00:	je     43af07 <strcmp@plt+0x3776f>
  43af02:	xor    eax,eax
  43af04:	call   QWORD PTR [rcx+0x8]
  43af07:	xor    eax,eax
  43af09:	call   43a320 <strcmp@plt+0x36b88>
  43af0e:	lea    rax,[rip+0x35613]        # 470528 <strcmp@plt+0x6cd90>
  43af15:	mov    rdi,QWORD PTR [rax]
  43af18:	call   434890 <strcmp@plt+0x310f8>
  43af1d:	xor    eax,eax
  43af1f:	call   436dc0 <strcmp@plt+0x33628>
  43af24:	lea    rax,[rip+0x35685]        # 4705b0 <strcmp@plt+0x6ce18>
  43af2b:	mov    rdi,QWORD PTR [rax]
  43af2e:	call   42c610 <strcmp@plt+0x28e78>
  43af33:	lea    rax,[rip+0x3567e]        # 4705b8 <strcmp@plt+0x6ce20>
  43af3a:	mov    rdi,QWORD PTR [rax]
  43af3d:	call   432220 <strcmp@plt+0x2ea88>
  43af42:	xor    eax,eax
  43af44:	call   42e7f0 <strcmp@plt+0x2b058>
  43af49:	lea    rsi,[rip+0x1060a]        # 44b55a <strcmp@plt+0x47dc2>
  43af50:	mov    edi,0x4
  43af55:	xor    eax,eax
  43af57:	call   42e520 <strcmp@plt+0x2ad88>
  43af5c:	xor    edi,edi
  43af5e:	call   4034b0 <exit@plt>
  43af63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43af6d:	nop    DWORD PTR [rax]
  43af70:	push   rbp
  43af71:	push   r15
  43af73:	push   r14
  43af75:	push   r13
  43af77:	push   r12
  43af79:	push   rbx
  43af7a:	sub    rsp,0x88
  43af81:	mov    r14,rsi
  43af84:	mov    ebp,edi
  43af86:	lea    rsi,[rip+0x13cd5]        # 44ec62 <strcmp@plt+0x4b4ca>
  43af8d:	lea    rdx,[rip+0x13cc7]        # 44ec5b <strcmp@plt+0x4b4c3>
  43af94:	mov    edi,0x4
  43af99:	xor    eax,eax
  43af9b:	call   42e520 <strcmp@plt+0x2ad88>
  43afa0:	lea    r15,[rip+0x29e19]        # 464dc0 <strcmp@plt+0x61628>
  43afa7:	cmp    DWORD PTR [r15],0x0
  43afab:	jle    43afc0 <strcmp@plt+0x37828>
  43afad:	lea    rsi,[rip+0x13cd9]        # 44ec8d <strcmp@plt+0x4b4f5>
  43afb4:	mov    edi,0x5
  43afb9:	xor    eax,eax
  43afbb:	call   42e520 <strcmp@plt+0x2ad88>
  43afc0:	call   43ad90 <strcmp@plt+0x375f8>
  43afc5:	cmp    eax,0x1
  43afc8:	jne    43b311 <strcmp@plt+0x37b79>
  43afce:	xor    edi,edi
  43afd0:	call   403370 <time@plt>
  43afd5:	lea    rcx,[rip+0x3553c]        # 470518 <strcmp@plt+0x6cd80>
  43afdc:	mov    DWORD PTR [rcx],eax
  43afde:	mov    edi,eax
  43afe0:	call   4030e0 <srandom@plt>
  43afe5:	lea    rbx,[rip+0xfffffffffffffe34]        # 43ae20 <strcmp@plt+0x37688>
  43afec:	mov    edi,0x1
  43aff1:	mov    rsi,rbx
  43aff4:	call   4034a0 <signal@plt>
  43aff9:	mov    edi,0xf
  43affe:	mov    rsi,rbx
  43b001:	call   4034a0 <signal@plt>
  43b006:	mov    edi,0x2
  43b00b:	mov    rsi,rbx
  43b00e:	call   4034a0 <signal@plt>
  43b013:	mov    edi,0x3
  43b018:	mov    rsi,rbx
  43b01b:	call   4034a0 <signal@plt>
  43b020:	xor    eax,eax
  43b022:	call   431f30 <strcmp@plt+0x2e798>
  43b027:	lea    rcx,[rip+0x3558a]        # 4705b8 <strcmp@plt+0x6ce20>
  43b02e:	mov    QWORD PTR [rcx],rax
  43b031:	xor    eax,eax
  43b033:	call   42c250 <strcmp@plt+0x28ab8>
  43b038:	lea    rcx,[rip+0x35571]        # 4705b0 <strcmp@plt+0x6ce18>
  43b03f:	mov    QWORD PTR [rcx],rax
  43b042:	lea    rdx,[rsp+0x8]
  43b047:	mov    edi,ebp
  43b049:	mov    rsi,r14
  43b04c:	call   403e80 <strcmp@plt+0x6e8>
  43b051:	test   eax,eax
  43b053:	jne    43b30c <strcmp@plt+0x37b74>
  43b059:	cmp    DWORD PTR [rsp+0x7c],0x0
  43b05e:	je     43b067 <strcmp@plt+0x378cf>
  43b060:	mov    rdi,QWORD PTR [rsp+0x50]
  43b065:	jmp    43b06e <strcmp@plt+0x378d6>
  43b067:	lea    rdi,[rip+0x13c2a]        # 44ec98 <strcmp@plt+0x4b500>
  43b06e:	call   403710 <strdup@plt>
  43b073:	lea    rbx,[rip+0x3548e]        # 470508 <strcmp@plt+0x6cd70>
  43b07a:	mov    QWORD PTR [rbx],rax
  43b07d:	cmp    DWORD PTR [rsp+0x78],0x0
  43b082:	je     43b0ac <strcmp@plt+0x37914>
  43b084:	cmp    BYTE PTR [rax],0x2f
  43b087:	je     43b09f <strcmp@plt+0x37907>
  43b089:	lea    rsi,[rip+0x13c16]        # 44eca6 <strcmp@plt+0x4b50e>
  43b090:	mov    edi,0x1
  43b095:	mov    rdx,rax
  43b098:	xor    eax,eax
  43b09a:	call   42e520 <strcmp@plt+0x2ad88>
  43b09f:	lea    rax,[rip+0x3546e]        # 470514 <strcmp@plt+0x6cd7c>
  43b0a6:	mov    DWORD PTR [rax],0x1
  43b0ac:	cmp    DWORD PTR [rsp+0x70],0x0
  43b0b1:	je     43b0ba <strcmp@plt+0x37922>
  43b0b3:	mov    eax,DWORD PTR [rsp+0x18]
  43b0b7:	mov    DWORD PTR [r15],eax
  43b0ba:	cmp    DWORD PTR [rsp+0x74],0x0
  43b0bf:	je     43b0dd <strcmp@plt+0x37945>
  43b0c1:	mov    eax,DWORD PTR [rsp+0x30]
  43b0c5:	cmp    eax,0x1
  43b0c8:	je     43b0ec <strcmp@plt+0x37954>
  43b0ca:	test   eax,eax
  43b0cc:	jne    43b0fb <strcmp@plt+0x37963>
  43b0ce:	lea    rax,[rip+0x3543b]        # 470510 <strcmp@plt+0x6cd78>
  43b0d5:	mov    DWORD PTR [rax],0x2
  43b0db:	jmp    43b10e <strcmp@plt+0x37976>
  43b0dd:	lea    rax,[rip+0x3542c]        # 470510 <strcmp@plt+0x6cd78>
  43b0e4:	mov    DWORD PTR [rax],0x0
  43b0ea:	jmp    43b10e <strcmp@plt+0x37976>
  43b0ec:	lea    rax,[rip+0x3541d]        # 470510 <strcmp@plt+0x6cd78>
  43b0f3:	mov    DWORD PTR [rax],0xa
  43b0f9:	jmp    43b10e <strcmp@plt+0x37976>
  43b0fb:	lea    rsi,[rip+0x13c0a]        # 44ed0c <strcmp@plt+0x4b574>
  43b102:	mov    edi,0x4
  43b107:	xor    eax,eax
  43b109:	call   42e520 <strcmp@plt+0x2ad88>
  43b10e:	lea    rdi,[rsp+0x8]
  43b113:	call   403e10 <strcmp@plt+0x678>
  43b118:	mov    rdi,QWORD PTR [rbx]
  43b11b:	xor    esi,esi
  43b11d:	call   403680 <access@plt>
  43b122:	cmp    eax,0xffffffff
  43b125:	je     43b318 <strcmp@plt+0x37b80>
  43b12b:	lea    rax,[rip+0x353e2]        # 470514 <strcmp@plt+0x6cd7c>
  43b132:	cmp    DWORD PTR [rax],0x0
  43b135:	je     43b1bf <strcmp@plt+0x37a27>
  43b13b:	cmp    DWORD PTR [r15],0x0
  43b13f:	jle    43b154 <strcmp@plt+0x379bc>
  43b141:	lea    rsi,[rip+0x13bec]        # 44ed34 <strcmp@plt+0x4b59c>
  43b148:	mov    edi,0x5
  43b14d:	xor    eax,eax
  43b14f:	call   42e520 <strcmp@plt+0x2ad88>
  43b154:	call   403110 <fork@plt>
  43b159:	lea    rbx,[rip+0x353bc]        # 47051c <strcmp@plt+0x6cd84>
  43b160:	mov    DWORD PTR [rbx],eax
  43b162:	test   eax,eax
  43b164:	js     43b30c <strcmp@plt+0x37b74>
  43b16a:	xor    edi,edi
  43b16c:	call   4036e0 <umask@plt>
  43b171:	cmp    DWORD PTR [rbx],0x0
  43b174:	jg     43b311 <strcmp@plt+0x37b79>
  43b17a:	call   403450 <setsid@plt>
  43b17f:	lea    rcx,[rip+0x3539a]        # 470520 <strcmp@plt+0x6cd88>
  43b186:	mov    DWORD PTR [rcx],eax
  43b188:	test   eax,eax
  43b18a:	js     43b30c <strcmp@plt+0x37b74>
  43b190:	lea    rdi,[rip+0xe811]        # 4499a8 <strcmp@plt+0x46210>
  43b197:	call   4035f0 <chdir@plt>
  43b19c:	test   eax,eax
  43b19e:	js     43b30c <strcmp@plt+0x37b74>
  43b1a4:	xor    edi,edi
  43b1a6:	call   403770 <close@plt>
  43b1ab:	mov    edi,0x1
  43b1b0:	call   403770 <close@plt>
  43b1b5:	mov    edi,0x2
  43b1ba:	call   403770 <close@plt>
  43b1bf:	xor    eax,eax
  43b1c1:	call   4171c0 <strcmp@plt+0x13a28>
  43b1c6:	xor    eax,eax
  43b1c8:	call   437d20 <strcmp@plt+0x34588>
  43b1cd:	xor    eax,eax
  43b1cf:	call   434880 <strcmp@plt+0x310e8>
  43b1d4:	lea    rbp,[rip+0x3534d]        # 470528 <strcmp@plt+0x6cd90>
  43b1db:	mov    QWORD PTR [rbp+0x0],rax
  43b1df:	xor    eax,eax
  43b1e1:	call   4368d0 <strcmp@plt+0x33138>
  43b1e6:	xor    eax,eax
  43b1e8:	call   43a280 <strcmp@plt+0x36ae8>
  43b1ed:	cmp    eax,0x1
  43b1f0:	jne    43b30c <strcmp@plt+0x37b74>
  43b1f6:	xor    eax,eax
  43b1f8:	call   4071f0 <strcmp@plt+0x3a58>
  43b1fd:	lea    r12,[rip+0x3538c]        # 470590 <strcmp@plt+0x6cdf8>
  43b204:	mov    QWORD PTR [r12],rax
  43b208:	test   rax,rax
  43b20b:	je     43b30c <strcmp@plt+0x37b74>
  43b211:	xor    eax,eax
  43b213:	call   441530 <strcmp@plt+0x3dd98>
  43b218:	cmp    eax,0x1
  43b21b:	jne    43b30c <strcmp@plt+0x37b74>
  43b221:	lea    r14,[rip+0x35380]        # 4705a8 <strcmp@plt+0x6ce10>
  43b228:	mov    rdi,QWORD PTR [r14]
  43b22b:	call   407840 <strcmp@plt+0x40a8>
  43b230:	cmp    eax,0x3
  43b233:	ja     43b297 <strcmp@plt+0x37aff>
  43b235:	mov    ebx,eax
  43b237:	cmp    eax,0x1
  43b23a:	je     43b297 <strcmp@plt+0x37aff>
  43b23c:	cmp    DWORD PTR [r15],0x2
  43b240:	jl     43b255 <strcmp@plt+0x37abd>
  43b242:	lea    rsi,[rip+0x139b9]        # 44ec02 <strcmp@plt+0x4b46a>
  43b249:	mov    edi,0x6
  43b24e:	xor    eax,eax
  43b250:	call   42e520 <strcmp@plt+0x2ad88>
  43b255:	mov    rdi,QWORD PTR [r14]
  43b258:	call   40a4c0 <strcmp@plt+0x6d28>
  43b25d:	lea    r13,[rip+0x2d1a4]        # 468408 <strcmp@plt+0x64c70>
  43b264:	mov    rcx,QWORD PTR [r13+0x0]
  43b268:	mov    esi,DWORD PTR [rax+0x58]
  43b26b:	mov    rdx,QWORD PTR [rax+0x60]
  43b26f:	mov    edi,ebx
  43b271:	xor    eax,eax
  43b273:	call   QWORD PTR [rcx]
  43b275:	cmp    eax,0x1
  43b278:	jne    43b335 <strcmp@plt+0x37b9d>
  43b27e:	cmp    DWORD PTR [r15],0x0
  43b282:	jle    43b297 <strcmp@plt+0x37aff>
  43b284:	lea    rsi,[rip+0x1398e]        # 44ec19 <strcmp@plt+0x4b481>
  43b28b:	mov    edi,0x5
  43b290:	xor    eax,eax
  43b292:	call   42e520 <strcmp@plt+0x2ad88>
  43b297:	mov    rdi,QWORD PTR [r12]
  43b29b:	call   4072d0 <strcmp@plt+0x3b38>
  43b2a0:	cmp    eax,0x1
  43b2a3:	jne    43b30c <strcmp@plt+0x37b74>
  43b2a5:	lea    rax,[rip+0x3486c]        # 46fb18 <strcmp@plt+0x6c380>
  43b2ac:	mov    rcx,QWORD PTR [rax]
  43b2af:	xor    eax,eax
  43b2b1:	call   QWORD PTR [rcx]
  43b2b3:	cmp    eax,0x1
  43b2b6:	jne    43b30c <strcmp@plt+0x37b74>
  43b2b8:	mov    rdi,QWORD PTR [r14]
  43b2bb:	call   407870 <strcmp@plt+0x40d8>
  43b2c0:	lea    rsi,[rip+0x13969]        # 44ec30 <strcmp@plt+0x4b498>
  43b2c7:	lea    rdx,[rip+0x1398d]        # 44ec5b <strcmp@plt+0x4b4c3>
  43b2ce:	mov    edi,0x4
  43b2d3:	xor    eax,eax
  43b2d5:	call   42e520 <strcmp@plt+0x2ad88>
  43b2da:	lea    rbx,[rip+0x352b7]        # 470598 <strcmp@plt+0x6ce00>
  43b2e1:	mov    rdi,rbx
  43b2e4:	call   43d0b0 <strcmp@plt+0x39918>
  43b2e9:	nop    DWORD PTR [rax+0x0]
  43b2f0:	mov    rdi,QWORD PTR [rbp+0x0]
  43b2f4:	call   434bb0 <strcmp@plt+0x31418>
  43b2f9:	mov    rdi,QWORD PTR [rbp+0x0]
  43b2fd:	call   434ae0 <strcmp@plt+0x31348>
  43b302:	mov    rdi,rbx
  43b305:	call   43ed50 <strcmp@plt+0x3b5b8>
  43b30a:	jmp    43b2f0 <strcmp@plt+0x37b58>
  43b30c:	call   43aeb0 <strcmp@plt+0x37718>
  43b311:	xor    edi,edi
  43b313:	call   4034b0 <exit@plt>
  43b318:	mov    rdx,QWORD PTR [rbx]
  43b31b:	lea    rsi,[rip+0x138c2]        # 44ebe4 <strcmp@plt+0x4b44c>
  43b322:	mov    edi,0x1
  43b327:	xor    eax,eax
  43b329:	call   42e520 <strcmp@plt+0x2ad88>
  43b32e:	xor    edi,edi
  43b330:	call   4034b0 <exit@plt>
  43b335:	mov    QWORD PTR [r13+0x0],0x0
  43b33d:	call   43aeb0 <strcmp@plt+0x37718>
  43b342:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b34c:	nop    DWORD PTR [rax+0x0]
  43b350:	push   rbx
  43b351:	mov    rbx,rdi
  43b354:	call   4036a0 <zmq_ctx_new@plt>
  43b359:	mov    QWORD PTR [rbx],rax
  43b35c:	mov    rdi,rax
  43b35f:	mov    esi,0x3
  43b364:	call   4036f0 <zmq_socket@plt>
  43b369:	mov    QWORD PTR [rbx+0x8],rax
  43b36d:	lea    rsi,[rip+0x139e1]        # 44ed55 <strcmp@plt+0x4b5bd>
  43b374:	mov    rdi,rax
  43b377:	call   4033c0 <zmq_connect@plt>
  43b37c:	lea    rcx,[rip+0x29a3d]        # 464dc0 <strcmp@plt+0x61628>
  43b383:	mov    ecx,DWORD PTR [rcx]
  43b385:	test   eax,eax
  43b387:	je     43b3bb <strcmp@plt+0x37c23>
  43b389:	cmp    ecx,0x2
  43b38c:	jl     43b3ab <strcmp@plt+0x37c13>
  43b38e:	mov    edi,eax
  43b390:	call   403100 <zmq_strerror@plt>
  43b395:	lea    rsi,[rip+0x139cc]        # 44ed68 <strcmp@plt+0x4b5d0>
  43b39c:	mov    edi,0x6
  43b3a1:	mov    rdx,rax
  43b3a4:	xor    eax,eax
  43b3a6:	call   42e520 <strcmp@plt+0x2ad88>
  43b3ab:	lea    rsi,[rip+0x13a0b]        # 44edbd <strcmp@plt+0x4b625>
  43b3b2:	xor    ebx,ebx
  43b3b4:	mov    edi,0x2
  43b3b9:	jmp    43b3d1 <strcmp@plt+0x37c39>
  43b3bb:	mov    ebx,0x1
  43b3c0:	cmp    ecx,0x2
  43b3c3:	jl     43b3d8 <strcmp@plt+0x37c40>
  43b3c5:	lea    rsi,[rip+0x139ca]        # 44ed96 <strcmp@plt+0x4b5fe>
  43b3cc:	mov    edi,0x6
  43b3d1:	xor    eax,eax
  43b3d3:	call   42e520 <strcmp@plt+0x2ad88>
  43b3d8:	mov    eax,ebx
  43b3da:	pop    rbx
  43b3db:	ret    
  43b3dc:	nop    DWORD PTR [rax+0x0]
  43b3e0:	push   r14
  43b3e2:	push   rbx
  43b3e3:	push   rax
  43b3e4:	mov    rbx,rdi
  43b3e7:	lea    r14,[rip+0x299d2]        # 464dc0 <strcmp@plt+0x61628>
  43b3ee:	cmp    DWORD PTR [r14],0x2
  43b3f2:	jl     43b407 <strcmp@plt+0x37c6f>
  43b3f4:	lea    rsi,[rip+0x139f2]        # 44eded <strcmp@plt+0x4b655>
  43b3fb:	mov    edi,0x6
  43b400:	xor    eax,eax
  43b402:	call   42e520 <strcmp@plt+0x2ad88>
  43b407:	mov    rdi,QWORD PTR [rbx+0x8]
  43b40b:	call   4035e0 <zmq_close@plt>
  43b410:	mov    rdi,QWORD PTR [rbx]
  43b413:	call   403640 <zmq_ctx_destroy@plt>
  43b418:	cmp    DWORD PTR [r14],0x2
  43b41c:	jge    43b426 <strcmp@plt+0x37c8e>
  43b41e:	add    rsp,0x8
  43b422:	pop    rbx
  43b423:	pop    r14
  43b425:	ret    
  43b426:	lea    rsi,[rip+0x139de]        # 44ee0b <strcmp@plt+0x4b673>
  43b42d:	mov    edi,0x6
  43b432:	xor    eax,eax
  43b434:	add    rsp,0x8
  43b438:	pop    rbx
  43b439:	pop    r14
  43b43b:	jmp    42e520 <strcmp@plt+0x2ad88>
  43b440:	mov    rax,QWORD PTR [rsi]
  43b443:	mov    QWORD PTR [rdi],rax
  43b446:	lea    rax,[rdi+0x8]
  43b44a:	ret    
  43b44b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b450:	mov    BYTE PTR [rdi],sil
  43b453:	mov    BYTE PTR [rdi+0x1],dl
  43b456:	mov    BYTE PTR [rdi+0x2],cl
  43b459:	mov    BYTE PTR [rdi+0x3],r8b
  43b45d:	mov    DWORD PTR [rdi+0x4],r9d
  43b461:	ret    
  43b462:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b46c:	nop    DWORD PTR [rax+0x0]
  43b470:	push   rbp
  43b471:	push   r15
  43b473:	push   r14
  43b475:	push   r12
  43b477:	push   rbx
  43b478:	mov    r14d,r8d
  43b47b:	mov    r12d,ecx
  43b47e:	mov    ebx,edx
  43b480:	mov    r15d,esi
  43b483:	mov    rbp,rdi
  43b486:	mov    edi,0xc
  43b48b:	call   431d60 <strcmp@plt+0x2e5c8>
  43b490:	mov    QWORD PTR [rbp+0x0],rax
  43b494:	movzx  ecx,r12b
  43b498:	shl    ecx,0x10
  43b49b:	shl    ebx,0x8
  43b49e:	movzx  edx,bx
  43b4a1:	movzx  esi,r15b
  43b4a5:	or     esi,edx
  43b4a7:	or     esi,ecx
  43b4a9:	movabs rcx,0x401000000
  43b4b3:	or     rcx,rsi
  43b4b6:	mov    QWORD PTR [rax],rcx
  43b4b9:	mov    DWORD PTR [rax+0x8],r14d
  43b4bd:	mov    eax,0xc
  43b4c2:	pop    rbx
  43b4c3:	pop    r12
  43b4c5:	pop    r14
  43b4c7:	pop    r15
  43b4c9:	pop    rbp
  43b4ca:	ret    
  43b4cb:	nop    DWORD PTR [rax+rax*1+0x0]
  43b4d0:	push   r15
  43b4d2:	push   r14
  43b4d4:	push   r12
  43b4d6:	push   rbx
  43b4d7:	sub    rsp,0x18
  43b4db:	mov    r14,rsi
  43b4de:	mov    r15,rdi
  43b4e1:	xor    ebx,ebx
  43b4e3:	cmp    edx,0x1
  43b4e6:	sete   bl
  43b4e9:	lea    rdx,[rbx-0x1]
  43b4ed:	mov    rax,QWORD PTR [rdi+0x8]
  43b4f1:	mov    QWORD PTR [rsp],rax
  43b4f5:	mov    WORD PTR [rsp+0xc],0x1
  43b4fc:	mov    rdi,rsp
  43b4ff:	mov    esi,0x1
  43b504:	call   403410 <zmq_poll@plt>
  43b509:	test   eax,eax
  43b50b:	je     43b591 <strcmp@plt+0x37df9>
  43b511:	lea    r12,[rip+0x298a8]        # 464dc0 <strcmp@plt+0x61628>
  43b518:	cmp    DWORD PTR [r12],0x3
  43b51d:	jl     43b532 <strcmp@plt+0x37d9a>
  43b51f:	lea    rsi,[rip+0x13902]        # 44ee28 <strcmp@plt+0x4b690>
  43b526:	mov    edi,0x7
  43b52b:	xor    eax,eax
  43b52d:	call   42e520 <strcmp@plt+0x2ad88>
  43b532:	mov    rdi,QWORD PTR [r15+0x8]
  43b536:	mov    edx,0x1000
  43b53b:	mov    rsi,r14
  43b53e:	mov    ecx,ebx
  43b540:	call   403550 <zmq_recv@plt>
  43b545:	mov    ebx,eax
  43b547:	cmp    DWORD PTR [r12],0x3
  43b54c:	jl     43b563 <strcmp@plt+0x37dcb>
  43b54e:	lea    rsi,[rip+0x138f8]        # 44ee4d <strcmp@plt+0x4b6b5>
  43b555:	mov    edi,0x7
  43b55a:	mov    edx,ebx
  43b55c:	xor    eax,eax
  43b55e:	call   42e520 <strcmp@plt+0x2ad88>
  43b563:	cmp    ebx,0xffffffff
  43b566:	jne    43b596 <strcmp@plt+0x37dfe>
  43b568:	call   403040 <__errno_location@plt>
  43b56d:	mov    edi,DWORD PTR [rax]
  43b56f:	call   403100 <zmq_strerror@plt>
  43b574:	lea    rsi,[rip+0x138fa]        # 44ee75 <strcmp@plt+0x4b6dd>
  43b57b:	mov    edi,0x2
  43b580:	mov    rdx,rax
  43b583:	xor    eax,eax
  43b585:	call   42e520 <strcmp@plt+0x2ad88>
  43b58a:	mov    ebx,0xffffffff
  43b58f:	jmp    43b596 <strcmp@plt+0x37dfe>
  43b591:	mov    ebx,0xfffffffe
  43b596:	mov    eax,ebx
  43b598:	add    rsp,0x18
  43b59c:	pop    rbx
  43b59d:	pop    r12
  43b59f:	pop    r14
  43b5a1:	pop    r15
  43b5a3:	ret    
  43b5a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b5ae:	xchg   ax,ax
  43b5b0:	push   rbp
  43b5b1:	push   r15
  43b5b3:	push   r14
  43b5b5:	push   rbx
  43b5b6:	push   rax
  43b5b7:	mov    ebp,edx
  43b5b9:	mov    r14,rsi
  43b5bc:	mov    rbx,rdi
  43b5bf:	lea    r15,[rip+0x297fa]        # 464dc0 <strcmp@plt+0x61628>
  43b5c6:	cmp    DWORD PTR [r15],0x3
  43b5ca:	jl     43b5e1 <strcmp@plt+0x37e49>
  43b5cc:	lea    rsi,[rip+0x138c8]        # 44ee9b <strcmp@plt+0x4b703>
  43b5d3:	mov    edi,0x7
  43b5d8:	mov    edx,ebp
  43b5da:	xor    eax,eax
  43b5dc:	call   42e520 <strcmp@plt+0x2ad88>
  43b5e1:	mov    rdi,QWORD PTR [rbx+0x8]
  43b5e5:	movsxd rdx,ebp
  43b5e8:	mov    rsi,r14
  43b5eb:	xor    ecx,ecx
  43b5ed:	call   4033d0 <zmq_send@plt>
  43b5f2:	mov    ebx,eax
  43b5f4:	cmp    DWORD PTR [r15],0x3
  43b5f8:	jl     43b60f <strcmp@plt+0x37e77>
  43b5fa:	lea    rsi,[rip+0x138cc]        # 44eecd <strcmp@plt+0x4b735>
  43b601:	mov    edi,0x7
  43b606:	mov    edx,ebx
  43b608:	xor    eax,eax
  43b60a:	call   42e520 <strcmp@plt+0x2ad88>
  43b60f:	cmp    ebx,0xffffffff
  43b612:	jne    43b636 <strcmp@plt+0x37e9e>
  43b614:	call   403040 <__errno_location@plt>
  43b619:	mov    edi,DWORD PTR [rax]
  43b61b:	call   403100 <zmq_strerror@plt>
  43b620:	lea    rsi,[rip+0x138d5]        # 44eefc <strcmp@plt+0x4b764>
  43b627:	mov    edi,0x2
  43b62c:	mov    rdx,rax
  43b62f:	xor    eax,eax
  43b631:	call   42e520 <strcmp@plt+0x2ad88>
  43b636:	mov    eax,0x1
  43b63b:	add    rsp,0x8
  43b63f:	pop    rbx
  43b640:	pop    r14
  43b642:	pop    r15
  43b644:	pop    rbp
  43b645:	ret    
  43b646:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b650:	push   rbp
  43b651:	push   r15
  43b653:	push   r14
  43b655:	push   r13
  43b657:	push   r12
  43b659:	push   rbx
  43b65a:	push   rax
  43b65b:	mov    ebx,r9d
  43b65e:	mov    QWORD PTR [rsp],r8
  43b662:	mov    r12d,ecx
  43b665:	mov    r13d,edx
  43b668:	mov    ebp,esi
  43b66a:	mov    r14,rdi
  43b66d:	mov    edi,0x1000
  43b672:	call   431d60 <strcmp@plt+0x2e5c8>
  43b677:	mov    r15,rax
  43b67a:	lea    rdi,[rax+0x8]
  43b67e:	mov    BYTE PTR [rax],bpl
  43b681:	mov    BYTE PTR [rax+0x1],r13b
  43b685:	mov    BYTE PTR [rax+0x2],r12b
  43b689:	mov    BYTE PTR [rax+0x3],0x0
  43b68d:	mov    DWORD PTR [rax+0x4],ebx
  43b690:	movsxd rbx,ebx
  43b693:	mov    rsi,QWORD PTR [rsp]
  43b697:	mov    rdx,rbx
  43b69a:	call   403330 <memcpy@plt>
  43b69f:	add    ebx,0x8
  43b6a2:	mov    rdi,r14
  43b6a5:	mov    rsi,r15
  43b6a8:	mov    edx,ebx
  43b6aa:	call   43b5b0 <strcmp@plt+0x37e18>
  43b6af:	mov    rdi,r15
  43b6b2:	call   403790 <free@plt>
  43b6b7:	mov    edi,0x1000
  43b6bc:	call   431d60 <strcmp@plt+0x2e5c8>
  43b6c1:	mov    rbx,rax
  43b6c4:	mov    rdi,r14
  43b6c7:	mov    rsi,rax
  43b6ca:	xor    edx,edx
  43b6cc:	call   43b4d0 <strcmp@plt+0x37d38>
  43b6d1:	cmp    BYTE PTR [rbx+0x3],0x1
  43b6d5:	jne    43b6e3 <strcmp@plt+0x37f4b>
  43b6d7:	cmp    DWORD PTR [rbx+0x4],0x4
  43b6db:	jne    43b6e3 <strcmp@plt+0x37f4b>
  43b6dd:	cmp    BYTE PTR [rbx+0x8],0x0
  43b6e1:	je     43b6ff <strcmp@plt+0x37f67>
  43b6e3:	mov    rdi,rbx
  43b6e6:	call   403790 <free@plt>
  43b6eb:	mov    eax,0x1
  43b6f0:	add    rsp,0x8
  43b6f4:	pop    rbx
  43b6f5:	pop    r12
  43b6f7:	pop    r13
  43b6f9:	pop    r14
  43b6fb:	pop    r15
  43b6fd:	pop    rbp
  43b6fe:	ret    
  43b6ff:	mov    rdi,rbx
  43b702:	call   403790 <free@plt>
  43b707:	xor    eax,eax
  43b709:	jmp    43b6f0 <strcmp@plt+0x37f58>
  43b70b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b710:	push   r14
  43b712:	push   rbx
  43b713:	push   rax
  43b714:	mov    rbx,rdi
  43b717:	mov    rdi,rsi
  43b71a:	call   4035c0 <xmlCharStrdup@plt>
  43b71f:	mov    r14,rax
  43b722:	mov    rdi,rbx
  43b725:	call   403310 <xmlFirstElementChild@plt>
  43b72a:	test   rax,rax
  43b72d:	je     43b760 <strcmp@plt+0x37fc8>
  43b72f:	mov    rbx,rax
  43b732:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b73c:	nop    DWORD PTR [rax+0x0]
  43b740:	mov    rdi,QWORD PTR [rbx+0x10]
  43b744:	mov    rsi,r14
  43b747:	call   403780 <xmlStrEqual@plt>
  43b74c:	test   eax,eax
  43b74e:	jne    43b762 <strcmp@plt+0x37fca>
  43b750:	mov    rdi,rbx
  43b753:	call   403210 <xmlNextElementSibling@plt>
  43b758:	mov    rbx,rax
  43b75b:	test   rax,rax
  43b75e:	jne    43b740 <strcmp@plt+0x37fa8>
  43b760:	xor    ebx,ebx
  43b762:	mov    rdi,r14
  43b765:	call   403790 <free@plt>
  43b76a:	mov    rax,rbx
  43b76d:	add    rsp,0x8
  43b771:	pop    rbx
  43b772:	pop    r14
  43b774:	ret    
  43b775:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b77f:	nop
  43b780:	push   r14
  43b782:	push   rbx
  43b783:	push   rax
  43b784:	mov    rbx,rdi
  43b787:	mov    r14,QWORD PTR [rdi+0x10]
  43b78b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b790:	mov    rdi,rbx
  43b793:	call   403210 <xmlNextElementSibling@plt>
  43b798:	mov    rbx,rax
  43b79b:	test   rax,rax
  43b79e:	je     43b7b0 <strcmp@plt+0x38018>
  43b7a0:	mov    rdi,QWORD PTR [rbx+0x10]
  43b7a4:	mov    rsi,r14
  43b7a7:	call   403798 <strcmp@plt>
  43b7ac:	test   eax,eax
  43b7ae:	jne    43b790 <strcmp@plt+0x37ff8>
  43b7b0:	mov    rax,rbx
  43b7b3:	add    rsp,0x8
  43b7b7:	pop    rbx
  43b7b8:	pop    r14
  43b7ba:	ret    
  43b7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  43b7c0:	push   r15
  43b7c2:	push   r14
  43b7c4:	push   r12
  43b7c6:	push   rbx
  43b7c7:	push   rax
  43b7c8:	mov    r15,rdi
  43b7cb:	lea    rdi,[rip+0xd4c8]        # 448c9a <strcmp@plt+0x45502>
  43b7d2:	call   4035c0 <xmlCharStrdup@plt>
  43b7d7:	mov    r14,rax
  43b7da:	mov    rdi,r15
  43b7dd:	call   403310 <xmlFirstElementChild@plt>
  43b7e2:	test   rax,rax
  43b7e5:	je     43b810 <strcmp@plt+0x38078>
  43b7e7:	mov    rbx,rax
  43b7ea:	nop    WORD PTR [rax+rax*1+0x0]
  43b7f0:	mov    rdi,QWORD PTR [rbx+0x10]
  43b7f4:	mov    rsi,r14
  43b7f7:	call   403780 <xmlStrEqual@plt>
  43b7fc:	test   eax,eax
  43b7fe:	jne    43b812 <strcmp@plt+0x3807a>
  43b800:	mov    rdi,rbx
  43b803:	call   403210 <xmlNextElementSibling@plt>
  43b808:	mov    rbx,rax
  43b80b:	test   rax,rax
  43b80e:	jne    43b7f0 <strcmp@plt+0x38058>
  43b810:	xor    ebx,ebx
  43b812:	mov    rdi,r14
  43b815:	call   403790 <free@plt>
  43b81a:	mov    rdi,rbx
  43b81d:	call   403440 <xmlNodeGetContent@plt>
  43b822:	mov    rbx,rax
  43b825:	lea    rsi,[rip+0x1497d]        # 4501a9 <strcmp@plt+0x4ca11>
  43b82c:	mov    rdi,rax
  43b82f:	call   403798 <strcmp@plt>
  43b834:	test   eax,eax
  43b836:	je     43b87e <strcmp@plt+0x380e6>
  43b838:	lea    rsi,[rip+0x149fd]        # 45023c <strcmp@plt+0x4caa4>
  43b83f:	mov    rdi,rbx
  43b842:	call   403798 <strcmp@plt>
  43b847:	test   eax,eax
  43b849:	je     43b8d2 <strcmp@plt+0x3813a>
  43b84f:	lea    rsi,[rip+0xe302]        # 449b58 <strcmp@plt+0x463c0>
  43b856:	mov    rdi,rbx
  43b859:	call   403798 <strcmp@plt>
  43b85e:	test   eax,eax
  43b860:	je     43b93f <strcmp@plt+0x381a7>
  43b866:	lea    rax,[rip+0x29553]        # 464dc0 <strcmp@plt+0x61628>
  43b86d:	cmp    DWORD PTR [rax],0x2
  43b870:	jge    43ba29 <strcmp@plt+0x38291>
  43b876:	xor    r14d,r14d
  43b879:	jmp    43ba42 <strcmp@plt+0x382aa>
  43b87e:	xor    ebx,ebx
  43b880:	xor    eax,eax
  43b882:	call   422c80 <strcmp@plt+0x1f4e8>
  43b887:	mov    r14,rax
  43b88a:	lea    rdi,[rip+0x14918]        # 4501a9 <strcmp@plt+0x4ca11>
  43b891:	call   4035c0 <xmlCharStrdup@plt>
  43b896:	mov    r12,rax
  43b899:	mov    rdi,r15
  43b89c:	call   403310 <xmlFirstElementChild@plt>
  43b8a1:	test   rax,rax
  43b8a4:	je     43b922 <strcmp@plt+0x3818a>
  43b8aa:	mov    rbx,rax
  43b8ad:	nop    DWORD PTR [rax]
  43b8b0:	mov    rdi,QWORD PTR [rbx+0x10]
  43b8b4:	mov    rsi,r12
  43b8b7:	call   403780 <xmlStrEqual@plt>
  43b8bc:	test   eax,eax
  43b8be:	jne    43b922 <strcmp@plt+0x3818a>
  43b8c0:	mov    rdi,rbx
  43b8c3:	call   403210 <xmlNextElementSibling@plt>
  43b8c8:	mov    rbx,rax
  43b8cb:	test   rax,rax
  43b8ce:	jne    43b8b0 <strcmp@plt+0x38118>
  43b8d0:	jmp    43b920 <strcmp@plt+0x38188>
  43b8d2:	xor    ebx,ebx
  43b8d4:	xor    eax,eax
  43b8d6:	call   422c80 <strcmp@plt+0x1f4e8>
  43b8db:	mov    r14,rax
  43b8de:	lea    rdi,[rip+0x14957]        # 45023c <strcmp@plt+0x4caa4>
  43b8e5:	call   4035c0 <xmlCharStrdup@plt>
  43b8ea:	mov    r12,rax
  43b8ed:	mov    rdi,r15
  43b8f0:	call   403310 <xmlFirstElementChild@plt>
  43b8f5:	test   rax,rax
  43b8f8:	je     43b922 <strcmp@plt+0x3818a>
  43b8fa:	mov    rbx,rax
  43b8fd:	nop    DWORD PTR [rax]
  43b900:	mov    rdi,QWORD PTR [rbx+0x10]
  43b904:	mov    rsi,r12
  43b907:	call   403780 <xmlStrEqual@plt>
  43b90c:	test   eax,eax
  43b90e:	jne    43b922 <strcmp@plt+0x3818a>
  43b910:	mov    rdi,rbx
  43b913:	call   403210 <xmlNextElementSibling@plt>
  43b918:	mov    rbx,rax
  43b91b:	test   rax,rax
  43b91e:	jne    43b900 <strcmp@plt+0x38168>
  43b920:	xor    ebx,ebx
  43b922:	mov    rdi,r12
  43b925:	call   403790 <free@plt>
  43b92a:	mov    rdi,rbx
  43b92d:	call   403440 <xmlNodeGetContent@plt>
  43b932:	mov    rdi,rax
  43b935:	mov    rsi,r14
  43b938:	call   423940 <strcmp@plt+0x201a8>
  43b93d:	jmp    43b942 <strcmp@plt+0x381aa>
  43b93f:	xor    r14d,r14d
  43b942:	lea    rdi,[rip+0x1361e]        # 44ef67 <strcmp@plt+0x4b7cf>
  43b949:	call   4035c0 <xmlCharStrdup@plt>
  43b94e:	mov    r12,rax
  43b951:	mov    rdi,r15
  43b954:	call   403310 <xmlFirstElementChild@plt>
  43b959:	test   rax,rax
  43b95c:	je     43b990 <strcmp@plt+0x381f8>
  43b95e:	mov    rbx,rax
  43b961:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b96b:	nop    DWORD PTR [rax+rax*1+0x0]
  43b970:	mov    rdi,QWORD PTR [rbx+0x10]
  43b974:	mov    rsi,r12
  43b977:	call   403780 <xmlStrEqual@plt>
  43b97c:	test   eax,eax
  43b97e:	jne    43b99d <strcmp@plt+0x38205>
  43b980:	mov    rdi,rbx
  43b983:	call   403210 <xmlNextElementSibling@plt>
  43b988:	mov    rbx,rax
  43b98b:	test   rax,rax
  43b98e:	jne    43b970 <strcmp@plt+0x381d8>
  43b990:	mov    rdi,r12
  43b993:	call   403790 <free@plt>
  43b998:	jmp    43ba42 <strcmp@plt+0x382aa>
  43b99d:	mov    rdi,r12
  43b9a0:	call   403790 <free@plt>
  43b9a5:	lea    rdi,[rip+0x135bb]        # 44ef67 <strcmp@plt+0x4b7cf>
  43b9ac:	call   4035c0 <xmlCharStrdup@plt>
  43b9b1:	mov    r12,rax
  43b9b4:	mov    rdi,r15
  43b9b7:	call   403310 <xmlFirstElementChild@plt>
  43b9bc:	test   rax,rax
  43b9bf:	je     43b9f0 <strcmp@plt+0x38258>
  43b9c1:	mov    rbx,rax
  43b9c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43b9ce:	xchg   ax,ax
  43b9d0:	mov    rdi,QWORD PTR [rbx+0x10]
  43b9d4:	mov    rsi,r12
  43b9d7:	call   403780 <xmlStrEqual@plt>
  43b9dc:	test   eax,eax
  43b9de:	jne    43b9f2 <strcmp@plt+0x3825a>
  43b9e0:	mov    rdi,rbx
  43b9e3:	call   403210 <xmlNextElementSibling@plt>
  43b9e8:	mov    rbx,rax
  43b9eb:	test   rax,rax
  43b9ee:	jne    43b9d0 <strcmp@plt+0x38238>
  43b9f0:	xor    ebx,ebx
  43b9f2:	mov    rdi,r12
  43b9f5:	call   403790 <free@plt>
  43b9fa:	mov    rdi,rbx
  43b9fd:	call   403440 <xmlNodeGetContent@plt>
  43ba02:	mov    rdi,rax
  43ba05:	xor    esi,esi
  43ba07:	mov    edx,0xa
  43ba0c:	call   403580 <strtol@plt>
  43ba11:	mov    rbx,rax
  43ba14:	mov    rdi,r14
  43ba17:	call   422ea0 <strcmp@plt+0x1f708>
  43ba1c:	movzx  esi,bl
  43ba1f:	mov    rdi,r14
  43ba22:	call   424150 <strcmp@plt+0x209b8>
  43ba27:	jmp    43ba42 <strcmp@plt+0x382aa>
  43ba29:	lea    rsi,[rip+0x13504]        # 44ef34 <strcmp@plt+0x4b79c>
  43ba30:	xor    r14d,r14d
  43ba33:	mov    edi,0x6
  43ba38:	mov    rdx,rbx
  43ba3b:	xor    eax,eax
  43ba3d:	call   42e520 <strcmp@plt+0x2ad88>
  43ba42:	mov    rax,r14
  43ba45:	add    rsp,0x8
  43ba49:	pop    rbx
  43ba4a:	pop    r12
  43ba4c:	pop    r14
  43ba4e:	pop    r15
  43ba50:	ret    
  43ba51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ba5b:	nop    DWORD PTR [rax+rax*1+0x0]
  43ba60:	push   r15
  43ba62:	push   r14
  43ba64:	push   r13
  43ba66:	push   r12
  43ba68:	push   rbx
  43ba69:	mov    r12,rdx
  43ba6c:	mov    r15,rsi
  43ba6f:	mov    r14,rdi
  43ba72:	lea    rdi,[rip+0xd221]        # 448c9a <strcmp@plt+0x45502>
  43ba79:	call   4035c0 <xmlCharStrdup@plt>
  43ba7e:	mov    r13,rax
  43ba81:	mov    rdi,r14
  43ba84:	call   403310 <xmlFirstElementChild@plt>
  43ba89:	test   rax,rax
  43ba8c:	je     43bac0 <strcmp@plt+0x38328>
  43ba8e:	mov    rbx,rax
  43ba91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ba9b:	nop    DWORD PTR [rax+rax*1+0x0]
  43baa0:	mov    rdi,QWORD PTR [rbx+0x10]
  43baa4:	mov    rsi,r13
  43baa7:	call   403780 <xmlStrEqual@plt>
  43baac:	test   eax,eax
  43baae:	jne    43bac2 <strcmp@plt+0x3832a>
  43bab0:	mov    rdi,rbx
  43bab3:	call   403210 <xmlNextElementSibling@plt>
  43bab8:	mov    rbx,rax
  43babb:	test   rax,rax
  43babe:	jne    43baa0 <strcmp@plt+0x38308>
  43bac0:	xor    ebx,ebx
  43bac2:	mov    rdi,r13
  43bac5:	call   403790 <free@plt>
  43baca:	mov    rdi,rbx
  43bacd:	call   403440 <xmlNodeGetContent@plt>
  43bad2:	mov    r13,rax
  43bad5:	lea    rsi,[rip+0x146cd]        # 4501a9 <strcmp@plt+0x4ca11>
  43badc:	mov    rdi,rax
  43badf:	call   403798 <strcmp@plt>
  43bae4:	test   eax,eax
  43bae6:	je     43bb48 <strcmp@plt+0x383b0>
  43bae8:	lea    rsi,[rip+0x1474d]        # 45023c <strcmp@plt+0x4caa4>
  43baef:	mov    rdi,r13
  43baf2:	call   403798 <strcmp@plt>
  43baf7:	test   eax,eax
  43baf9:	je     43bb92 <strcmp@plt+0x383fa>
  43baff:	lea    rsi,[rip+0xe052]        # 449b58 <strcmp@plt+0x463c0>
  43bb06:	mov    rdi,r13
  43bb09:	call   403798 <strcmp@plt>
  43bb0e:	test   eax,eax
  43bb10:	je     43bd0f <strcmp@plt+0x38577>
  43bb16:	lea    rax,[rip+0x292a3]        # 464dc0 <strcmp@plt+0x61628>
  43bb1d:	cmp    DWORD PTR [rax],0x2
  43bb20:	jl     43bb38 <strcmp@plt+0x383a0>
  43bb22:	lea    rsi,[rip+0x13483]        # 44efac <strcmp@plt+0x4b814>
  43bb29:	mov    edi,0x6
  43bb2e:	mov    rdx,r13
  43bb31:	xor    eax,eax
  43bb33:	call   42e520 <strcmp@plt+0x2ad88>
  43bb38:	mov    rdi,r13
  43bb3b:	call   403790 <free@plt>
  43bb40:	xor    r15d,r15d
  43bb43:	jmp    43bd02 <strcmp@plt+0x3856a>
  43bb48:	lea    rdi,[rip+0x1465a]        # 4501a9 <strcmp@plt+0x4ca11>
  43bb4f:	call   4035c0 <xmlCharStrdup@plt>
  43bb54:	mov    r15,rax
  43bb57:	mov    rdi,r14
  43bb5a:	call   403310 <xmlFirstElementChild@plt>
  43bb5f:	test   rax,rax
  43bb62:	je     43bbe0 <strcmp@plt+0x38448>
  43bb64:	mov    rbx,rax
  43bb67:	nop    WORD PTR [rax+rax*1+0x0]
  43bb70:	mov    rdi,QWORD PTR [rbx+0x10]
  43bb74:	mov    rsi,r15
  43bb77:	call   403780 <xmlStrEqual@plt>
  43bb7c:	test   eax,eax
  43bb7e:	jne    43bbe2 <strcmp@plt+0x3844a>
  43bb80:	mov    rdi,rbx
  43bb83:	call   403210 <xmlNextElementSibling@plt>
  43bb88:	mov    rbx,rax
  43bb8b:	test   rax,rax
  43bb8e:	jne    43bb70 <strcmp@plt+0x383d8>
  43bb90:	jmp    43bbe0 <strcmp@plt+0x38448>
  43bb92:	lea    rdi,[rip+0x146a3]        # 45023c <strcmp@plt+0x4caa4>
  43bb99:	call   4035c0 <xmlCharStrdup@plt>
  43bb9e:	mov    r15,rax
  43bba1:	mov    rdi,r14
  43bba4:	call   403310 <xmlFirstElementChild@plt>
  43bba9:	test   rax,rax
  43bbac:	je     43bbe0 <strcmp@plt+0x38448>
  43bbae:	mov    rbx,rax
  43bbb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bbbb:	nop    DWORD PTR [rax+rax*1+0x0]
  43bbc0:	mov    rdi,QWORD PTR [rbx+0x10]
  43bbc4:	mov    rsi,r15
  43bbc7:	call   403780 <xmlStrEqual@plt>
  43bbcc:	test   eax,eax
  43bbce:	jne    43bbe2 <strcmp@plt+0x3844a>
  43bbd0:	mov    rdi,rbx
  43bbd3:	call   403210 <xmlNextElementSibling@plt>
  43bbd8:	mov    rbx,rax
  43bbdb:	test   rax,rax
  43bbde:	jne    43bbc0 <strcmp@plt+0x38428>
  43bbe0:	xor    ebx,ebx
  43bbe2:	mov    rdi,r15
  43bbe5:	call   403790 <free@plt>
  43bbea:	mov    rdi,rbx
  43bbed:	call   403440 <xmlNodeGetContent@plt>
  43bbf2:	mov    r15,rax
  43bbf5:	mov    rdi,r13
  43bbf8:	call   403790 <free@plt>
  43bbfd:	lea    rdi,[rip+0x13363]        # 44ef67 <strcmp@plt+0x4b7cf>
  43bc04:	call   4035c0 <xmlCharStrdup@plt>
  43bc09:	mov    r12,rax
  43bc0c:	mov    rdi,r14
  43bc0f:	call   403310 <xmlFirstElementChild@plt>
  43bc14:	test   rax,rax
  43bc17:	je     43bc40 <strcmp@plt+0x384a8>
  43bc19:	mov    rbx,rax
  43bc1c:	nop    DWORD PTR [rax+0x0]
  43bc20:	mov    rdi,QWORD PTR [rbx+0x10]
  43bc24:	mov    rsi,r12
  43bc27:	call   403780 <xmlStrEqual@plt>
  43bc2c:	test   eax,eax
  43bc2e:	jne    43bc4d <strcmp@plt+0x384b5>
  43bc30:	mov    rdi,rbx
  43bc33:	call   403210 <xmlNextElementSibling@plt>
  43bc38:	mov    rbx,rax
  43bc3b:	test   rax,rax
  43bc3e:	jne    43bc20 <strcmp@plt+0x38488>
  43bc40:	mov    rdi,r12
  43bc43:	call   403790 <free@plt>
  43bc48:	jmp    43bd02 <strcmp@plt+0x3856a>
  43bc4d:	mov    rdi,r12
  43bc50:	call   403790 <free@plt>
  43bc55:	lea    rdi,[rip+0x1330b]        # 44ef67 <strcmp@plt+0x4b7cf>
  43bc5c:	call   4035c0 <xmlCharStrdup@plt>
  43bc61:	mov    r12,rax
  43bc64:	mov    rdi,r14
  43bc67:	call   403310 <xmlFirstElementChild@plt>
  43bc6c:	test   rax,rax
  43bc6f:	je     43bca0 <strcmp@plt+0x38508>
  43bc71:	mov    rbx,rax
  43bc74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bc7e:	xchg   ax,ax
  43bc80:	mov    rdi,QWORD PTR [rbx+0x10]
  43bc84:	mov    rsi,r12
  43bc87:	call   403780 <xmlStrEqual@plt>
  43bc8c:	test   eax,eax
  43bc8e:	jne    43bca2 <strcmp@plt+0x3850a>
  43bc90:	mov    rdi,rbx
  43bc93:	call   403210 <xmlNextElementSibling@plt>
  43bc98:	mov    rbx,rax
  43bc9b:	test   rax,rax
  43bc9e:	jne    43bc80 <strcmp@plt+0x384e8>
  43bca0:	xor    ebx,ebx
  43bca2:	mov    rdi,r12
  43bca5:	call   403790 <free@plt>
  43bcaa:	mov    rdi,rbx
  43bcad:	call   403440 <xmlNodeGetContent@plt>
  43bcb2:	mov    rbx,rax
  43bcb5:	mov    rdi,r15
  43bcb8:	call   4031e0 <strlen@plt>
  43bcbd:	mov    r14,rax
  43bcc0:	mov    rdi,rbx
  43bcc3:	call   4031e0 <strlen@plt>
  43bcc8:	lea    rdi,[r14+rax*1]
  43bccc:	add    rdi,0x2
  43bcd0:	call   431d90 <strcmp@plt+0x2e5f8>
  43bcd5:	mov    r14,rax
  43bcd8:	lea    rsi,[rip+0x75fa]        # 4432d9 <strcmp@plt+0x3fb41>
  43bcdf:	mov    rdi,rax
  43bce2:	mov    rdx,r15
  43bce5:	mov    rcx,rbx
  43bce8:	xor    eax,eax
  43bcea:	call   4030b0 <sprintf@plt>
  43bcef:	mov    rdi,r15
  43bcf2:	call   403790 <free@plt>
  43bcf7:	mov    rdi,rbx
  43bcfa:	call   403790 <free@plt>
  43bcff:	mov    r15,r14
  43bd02:	mov    rax,r15
  43bd05:	pop    rbx
  43bd06:	pop    r12
  43bd08:	pop    r13
  43bd0a:	pop    r14
  43bd0c:	pop    r15
  43bd0e:	ret    
  43bd0f:	mov    rdi,r13
  43bd12:	call   403790 <free@plt>
  43bd17:	lea    rdi,[rip+0xde3a]        # 449b58 <strcmp@plt+0x463c0>
  43bd1e:	call   4035c0 <xmlCharStrdup@plt>
  43bd23:	mov    r13,rax
  43bd26:	mov    rdi,r14
  43bd29:	call   403310 <xmlFirstElementChild@plt>
  43bd2e:	test   rax,rax
  43bd31:	je     43bd60 <strcmp@plt+0x385c8>
  43bd33:	mov    rbx,rax
  43bd36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bd40:	mov    rdi,QWORD PTR [rbx+0x10]
  43bd44:	mov    rsi,r13
  43bd47:	call   403780 <xmlStrEqual@plt>
  43bd4c:	test   eax,eax
  43bd4e:	jne    43bd62 <strcmp@plt+0x385ca>
  43bd50:	mov    rdi,rbx
  43bd53:	call   403210 <xmlNextElementSibling@plt>
  43bd58:	mov    rbx,rax
  43bd5b:	test   rax,rax
  43bd5e:	jne    43bd40 <strcmp@plt+0x385a8>
  43bd60:	xor    ebx,ebx
  43bd62:	mov    rdi,r13
  43bd65:	call   403790 <free@plt>
  43bd6a:	mov    rdi,rbx
  43bd6d:	call   43bdd0 <strcmp@plt+0x38638>
  43bd72:	test   rax,rax
  43bd75:	je     43bda1 <strcmp@plt+0x38609>
  43bd77:	mov    rbx,rax
  43bd7a:	mov    rdi,r15
  43bd7d:	call   403710 <strdup@plt>
  43bd82:	mov    rdi,r12
  43bd85:	mov    rsi,rax
  43bd88:	mov    rdx,rbx
  43bd8b:	call   435eb0 <strcmp@plt+0x32718>
  43bd90:	mov    rdi,r15
  43bd93:	pop    rbx
  43bd94:	pop    r12
  43bd96:	pop    r13
  43bd98:	pop    r14
  43bd9a:	pop    r15
  43bd9c:	jmp    403710 <strdup@plt>
  43bda1:	lea    rax,[rip+0x29018]        # 464dc0 <strcmp@plt+0x61628>
  43bda8:	cmp    DWORD PTR [rax],0x2
  43bdab:	jge    43bdb5 <strcmp@plt+0x3861d>
  43bdad:	xor    r15d,r15d
  43bdb0:	jmp    43bd02 <strcmp@plt+0x3856a>
  43bdb5:	lea    rsi,[rip+0x131b0]        # 44ef6c <strcmp@plt+0x4b7d4>
  43bdbc:	xor    r15d,r15d
  43bdbf:	mov    edi,0x6
  43bdc4:	xor    eax,eax
  43bdc6:	call   42e520 <strcmp@plt+0x2ad88>
  43bdcb:	jmp    43bd02 <strcmp@plt+0x3856a>
  43bdd0:	push   rbp
  43bdd1:	push   r15
  43bdd3:	push   r14
  43bdd5:	push   r13
  43bdd7:	push   r12
  43bdd9:	push   rbx
  43bdda:	sub    rsp,0x38
  43bdde:	mov    r13,rdi
  43bde1:	lea    rdi,[rip+0x13208]        # 44eff0 <strcmp@plt+0x4b858>
  43bde8:	call   4035c0 <xmlCharStrdup@plt>
  43bded:	mov    rbp,rax
  43bdf0:	mov    rdi,r13
  43bdf3:	call   403310 <xmlFirstElementChild@plt>
  43bdf8:	test   rax,rax
  43bdfb:	je     43be20 <strcmp@plt+0x38688>
  43bdfd:	mov    rbx,rax
  43be00:	mov    rdi,QWORD PTR [rbx+0x10]
  43be04:	mov    rsi,rbp
  43be07:	call   403780 <xmlStrEqual@plt>
  43be0c:	test   eax,eax
  43be0e:	jne    43be22 <strcmp@plt+0x3868a>
  43be10:	mov    rdi,rbx
  43be13:	call   403210 <xmlNextElementSibling@plt>
  43be18:	mov    rbx,rax
  43be1b:	test   rax,rax
  43be1e:	jne    43be00 <strcmp@plt+0x38668>
  43be20:	xor    ebx,ebx
  43be22:	mov    rdi,rbp
  43be25:	call   403790 <free@plt>
  43be2a:	mov    rdi,rbx
  43be2d:	call   403440 <xmlNodeGetContent@plt>
  43be32:	mov    r12,rax
  43be35:	lea    rsi,[rip+0x131be]        # 44effa <strcmp@plt+0x4b862>
  43be3c:	mov    rdi,rax
  43be3f:	call   403798 <strcmp@plt>
  43be44:	test   eax,eax
  43be46:	je     43be60 <strcmp@plt+0x386c8>
  43be48:	lea    rax,[rip+0x28f71]        # 464dc0 <strcmp@plt+0x61628>
  43be4f:	cmp    DWORD PTR [rax],0x2
  43be52:	jge    43bf1d <strcmp@plt+0x38785>
  43be58:	xor    r14d,r14d
  43be5b:	jmp    43c139 <strcmp@plt+0x389a1>
  43be60:	xor    ebp,ebp
  43be62:	xor    eax,eax
  43be64:	call   427e70 <strcmp@plt+0x246d8>
  43be69:	mov    r14,rax
  43be6c:	mov    rdi,rax
  43be6f:	call   423830 <strcmp@plt+0x20098>
  43be74:	mov    r15,rax
  43be77:	lea    rdi,[rip+0x1317c]        # 44effa <strcmp@plt+0x4b862>
  43be7e:	call   4035c0 <xmlCharStrdup@plt>
  43be83:	mov    rbx,rax
  43be86:	mov    rdi,r13
  43be89:	call   403310 <xmlFirstElementChild@plt>
  43be8e:	test   rax,rax
  43be91:	je     43bec2 <strcmp@plt+0x3872a>
  43be93:	mov    rbp,rax
  43be96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43bea0:	mov    rdi,QWORD PTR [rbp+0x10]
  43bea4:	mov    rsi,rbx
  43bea7:	call   403780 <xmlStrEqual@plt>
  43beac:	test   eax,eax
  43beae:	jne    43bec2 <strcmp@plt+0x3872a>
  43beb0:	mov    rdi,rbp
  43beb3:	call   403210 <xmlNextElementSibling@plt>
  43beb8:	mov    rbp,rax
  43bebb:	test   rax,rax
  43bebe:	jne    43bea0 <strcmp@plt+0x38708>
  43bec0:	xor    ebp,ebp
  43bec2:	mov    rdi,rbx
  43bec5:	call   403790 <free@plt>
  43beca:	lea    rdi,[rip+0x1313f]        # 44f010 <strcmp@plt+0x4b878>
  43bed1:	call   4035c0 <xmlCharStrdup@plt>
  43bed6:	mov    r13,rax
  43bed9:	mov    rdi,rbp
  43bedc:	call   403310 <xmlFirstElementChild@plt>
  43bee1:	test   rax,rax
  43bee4:	je     43bf10 <strcmp@plt+0x38778>
  43bee6:	mov    rbx,rax
  43bee9:	nop    DWORD PTR [rax+0x0]
  43bef0:	mov    rdi,QWORD PTR [rbx+0x10]
  43bef4:	mov    rsi,r13
  43bef7:	call   403780 <xmlStrEqual@plt>
  43befc:	test   eax,eax
  43befe:	jne    43bf3b <strcmp@plt+0x387a3>
  43bf00:	mov    rdi,rbx
  43bf03:	call   403210 <xmlNextElementSibling@plt>
  43bf08:	mov    rbx,rax
  43bf0b:	test   rax,rax
  43bf0e:	jne    43bef0 <strcmp@plt+0x38758>
  43bf10:	mov    rdi,r13
  43bf13:	call   403790 <free@plt>
  43bf18:	jmp    43c131 <strcmp@plt+0x38999>
  43bf1d:	lea    rsi,[rip+0x13112]        # 44f036 <strcmp@plt+0x4b89e>
  43bf24:	xor    r14d,r14d
  43bf27:	mov    edi,0x6
  43bf2c:	mov    rdx,r12
  43bf2f:	xor    eax,eax
  43bf31:	call   42e520 <strcmp@plt+0x2ad88>
  43bf36:	jmp    43c139 <strcmp@plt+0x389a1>
  43bf3b:	mov    rdi,r13
  43bf3e:	call   403790 <free@plt>
  43bf43:	lea    rdi,[rip+0x9bd2]        # 445b1c <strcmp@plt+0x42384>
  43bf4a:	mov    DWORD PTR [rsp+0xc],0x0
  43bf52:	mov    DWORD PTR [rsp+0x14],0x0
  43bf5a:	mov    DWORD PTR [rsp+0x10],0x0
  43bf62:	mov    QWORD PTR [rsp+0x28],r14
  43bf67:	mov    QWORD PTR [rsp+0x20],r15
  43bf6c:	mov    QWORD PTR [rsp+0x18],r12
  43bf71:	call   4035c0 <xmlCharStrdup@plt>
  43bf76:	mov    r13,rax
  43bf79:	mov    rdi,rbx
  43bf7c:	call   403310 <xmlFirstElementChild@plt>
  43bf81:	test   rax,rax
  43bf84:	je     43bfb0 <strcmp@plt+0x38818>
  43bf86:	mov    rbp,rax
  43bf89:	nop    DWORD PTR [rax+0x0]
  43bf90:	mov    rdi,QWORD PTR [rbp+0x10]
  43bf94:	mov    rsi,r13
  43bf97:	call   403780 <xmlStrEqual@plt>
  43bf9c:	test   eax,eax
  43bf9e:	jne    43bfb2 <strcmp@plt+0x3881a>
  43bfa0:	mov    rdi,rbp
  43bfa3:	call   403210 <xmlNextElementSibling@plt>
  43bfa8:	mov    rbp,rax
  43bfab:	test   rax,rax
  43bfae:	jne    43bf90 <strcmp@plt+0x387f8>
  43bfb0:	xor    ebp,ebp
  43bfb2:	mov    rdi,r13
  43bfb5:	call   403790 <free@plt>
  43bfba:	mov    rdi,rbp
  43bfbd:	call   403440 <xmlNodeGetContent@plt>
  43bfc2:	mov    rbp,rax
  43bfc5:	xor    eax,eax
  43bfc7:	call   422c80 <strcmp@plt+0x1f4e8>
  43bfcc:	mov    r14,rax
  43bfcf:	mov    rdi,rbp
  43bfd2:	mov    rsi,rax
  43bfd5:	call   423940 <strcmp@plt+0x201a8>
  43bfda:	mov    rdi,rbp
  43bfdd:	call   403790 <free@plt>
  43bfe2:	lea    rdi,[rip+0x1302b]        # 44f014 <strcmp@plt+0x4b87c>
  43bfe9:	call   4035c0 <xmlCharStrdup@plt>
  43bfee:	mov    r13,rax
  43bff1:	mov    rdi,rbx
  43bff4:	call   403310 <xmlFirstElementChild@plt>
  43bff9:	test   rax,rax
  43bffc:	mov    QWORD PTR [rsp+0x30],r14
  43c001:	je     43c030 <strcmp@plt+0x38898>
  43c003:	mov    r15,rax
  43c006:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c010:	mov    rdi,QWORD PTR [r15+0x10]
  43c014:	mov    rsi,r13
  43c017:	call   403780 <xmlStrEqual@plt>
  43c01c:	test   eax,eax
  43c01e:	jne    43c033 <strcmp@plt+0x3889b>
  43c020:	mov    rdi,r15
  43c023:	call   403210 <xmlNextElementSibling@plt>
  43c028:	mov    r15,rax
  43c02b:	test   rax,rax
  43c02e:	jne    43c010 <strcmp@plt+0x38878>
  43c030:	xor    r15d,r15d
  43c033:	mov    rdi,r13
  43c036:	call   403790 <free@plt>
  43c03b:	mov    rdi,r15
  43c03e:	call   403440 <xmlNodeGetContent@plt>
  43c043:	mov    rbp,rax
  43c046:	mov    rdi,rax
  43c049:	lea    rsi,[rip+0x12fcd]        # 44f01d <strcmp@plt+0x4b885>
  43c050:	call   4030d0 <strstr@plt>
  43c055:	test   rax,rax
  43c058:	mov    r13d,DWORD PTR [rsp+0xc]
  43c05d:	movzx  r13d,r13b
  43c061:	mov    r15d,0x1
  43c067:	cmovne r13d,r15d
  43c06b:	mov    rdi,rbp
  43c06e:	lea    rsi,[rip+0x12faf]        # 44f024 <strcmp@plt+0x4b88c>
  43c075:	call   4030d0 <strstr@plt>
  43c07a:	test   rax,rax
  43c07d:	mov    r14d,DWORD PTR [rsp+0x14]
  43c082:	movzx  r14d,r14b
  43c086:	cmovne r14d,r15d
  43c08a:	mov    rdi,rbp
  43c08d:	lea    rsi,[rip+0x12f9b]        # 44f02f <strcmp@plt+0x4b897>
  43c094:	call   4030d0 <strstr@plt>
  43c099:	test   rax,rax
  43c09c:	mov    r12d,DWORD PTR [rsp+0x10]
  43c0a1:	movzx  r12d,r12b
  43c0a5:	cmovne r12d,r15d
  43c0a9:	mov    rdi,rbp
  43c0ac:	call   403790 <free@plt>
  43c0b1:	movzx  esi,r13b
  43c0b5:	mov    DWORD PTR [rsp+0x14],r14d
  43c0ba:	movzx  edx,r14b
  43c0be:	mov    DWORD PTR [rsp+0x10],r12d
  43c0c3:	movzx  ecx,r12b
  43c0c7:	mov    rbp,QWORD PTR [rsp+0x30]
  43c0cc:	mov    rdi,rbp
  43c0cf:	call   427fc0 <strcmp@plt+0x24828>
  43c0d4:	test   rax,rax
  43c0d7:	mov    rdi,QWORD PTR [rsp+0x20]
  43c0dc:	je     43c0e6 <strcmp@plt+0x3894e>
  43c0de:	mov    rsi,rax
  43c0e1:	call   428040 <strcmp@plt+0x248a8>
  43c0e6:	mov    rdi,rbp
  43c0e9:	call   422c90 <strcmp@plt+0x1f4f8>
  43c0ee:	mov    rbp,QWORD PTR [rbx+0x10]
  43c0f2:	mov    r14,QWORD PTR [rsp+0x28]
  43c0f7:	mov    r12,QWORD PTR [rsp+0x18]
  43c0fc:	nop    DWORD PTR [rax+0x0]
  43c100:	mov    rdi,rbx
  43c103:	call   403210 <xmlNextElementSibling@plt>
  43c108:	test   rax,rax
  43c10b:	je     43c131 <strcmp@plt+0x38999>
  43c10d:	mov    rbx,rax
  43c110:	mov    rdi,QWORD PTR [rax+0x10]
  43c114:	mov    rsi,rbp
  43c117:	call   403798 <strcmp@plt>
  43c11c:	test   eax,eax
  43c11e:	jne    43c100 <strcmp@plt+0x38968>
  43c120:	mov    DWORD PTR [rsp+0xc],r13d
  43c125:	lea    rdi,[rip+0x99f0]        # 445b1c <strcmp@plt+0x42384>
  43c12c:	jmp    43bf71 <strcmp@plt+0x387d9>
  43c131:	mov    rdi,r12
  43c134:	call   403790 <free@plt>
  43c139:	mov    rax,r14
  43c13c:	add    rsp,0x38
  43c140:	pop    rbx
  43c141:	pop    r12
  43c143:	pop    r13
  43c145:	pop    r14
  43c147:	pop    r15
  43c149:	pop    rbp
  43c14a:	ret    
  43c14b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c150:	push   r15
  43c152:	push   r14
  43c154:	push   rbx
  43c155:	mov    r14,rdi
  43c158:	lea    rdi,[rip+0x12e85]        # 44efe4 <strcmp@plt+0x4b84c>
  43c15f:	call   4035c0 <xmlCharStrdup@plt>
  43c164:	mov    r15,rax
  43c167:	mov    rdi,r14
  43c16a:	call   403310 <xmlFirstElementChild@plt>
  43c16f:	test   rax,rax
  43c172:	je     43c1a0 <strcmp@plt+0x38a08>
  43c174:	mov    rbx,rax
  43c177:	nop    WORD PTR [rax+rax*1+0x0]
  43c180:	mov    rdi,QWORD PTR [rbx+0x10]
  43c184:	mov    rsi,r15
  43c187:	call   403780 <xmlStrEqual@plt>
  43c18c:	test   eax,eax
  43c18e:	jne    43c1ac <strcmp@plt+0x38a14>
  43c190:	mov    rdi,rbx
  43c193:	call   403210 <xmlNextElementSibling@plt>
  43c198:	mov    rbx,rax
  43c19b:	test   rax,rax
  43c19e:	jne    43c180 <strcmp@plt+0x389e8>
  43c1a0:	mov    rdi,r15
  43c1a3:	call   403790 <free@plt>
  43c1a8:	xor    eax,eax
  43c1aa:	jmp    43c221 <strcmp@plt+0x38a89>
  43c1ac:	mov    rdi,r15
  43c1af:	call   403790 <free@plt>
  43c1b4:	lea    rdi,[rip+0x12e29]        # 44efe4 <strcmp@plt+0x4b84c>
  43c1bb:	call   4035c0 <xmlCharStrdup@plt>
  43c1c0:	mov    r15,rax
  43c1c3:	mov    rdi,r14
  43c1c6:	call   403310 <xmlFirstElementChild@plt>
  43c1cb:	test   rax,rax
  43c1ce:	je     43c200 <strcmp@plt+0x38a68>
  43c1d0:	mov    rbx,rax
  43c1d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c1dd:	nop    DWORD PTR [rax]
  43c1e0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c1e4:	mov    rsi,r15
  43c1e7:	call   403780 <xmlStrEqual@plt>
  43c1ec:	test   eax,eax
  43c1ee:	jne    43c202 <strcmp@plt+0x38a6a>
  43c1f0:	mov    rdi,rbx
  43c1f3:	call   403210 <xmlNextElementSibling@plt>
  43c1f8:	mov    rbx,rax
  43c1fb:	test   rax,rax
  43c1fe:	jne    43c1e0 <strcmp@plt+0x38a48>
  43c200:	xor    ebx,ebx
  43c202:	mov    rdi,r15
  43c205:	call   403790 <free@plt>
  43c20a:	mov    rdi,rbx
  43c20d:	call   403440 <xmlNodeGetContent@plt>
  43c212:	mov    rdi,rax
  43c215:	xor    esi,esi
  43c217:	mov    edx,0xa
  43c21c:	call   403580 <strtol@plt>
  43c221:	pop    rbx
  43c222:	pop    r14
  43c224:	pop    r15
  43c226:	ret    
  43c227:	nop    WORD PTR [rax+rax*1+0x0]
  43c230:	push   rbp
  43c231:	push   r15
  43c233:	push   r14
  43c235:	push   r13
  43c237:	push   r12
  43c239:	push   rbx
  43c23a:	sub    rsp,0x48
  43c23e:	mov    r14,rsi
  43c241:	mov    r12,rdi
  43c244:	lea    rdi,[rip+0x12da2]        # 44efed <strcmp@plt+0x4b855>
  43c24b:	call   4035c0 <xmlCharStrdup@plt>
  43c250:	mov    rbp,rax
  43c253:	mov    rdi,r12
  43c256:	call   403310 <xmlFirstElementChild@plt>
  43c25b:	test   rax,rax
  43c25e:	je     43c290 <strcmp@plt+0x38af8>
  43c260:	mov    rbx,rax
  43c263:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c26d:	nop    DWORD PTR [rax]
  43c270:	mov    rdi,QWORD PTR [rbx+0x10]
  43c274:	mov    rsi,rbp
  43c277:	call   403780 <xmlStrEqual@plt>
  43c27c:	test   eax,eax
  43c27e:	jne    43c292 <strcmp@plt+0x38afa>
  43c280:	mov    rdi,rbx
  43c283:	call   403210 <xmlNextElementSibling@plt>
  43c288:	mov    rbx,rax
  43c28b:	test   rax,rax
  43c28e:	jne    43c270 <strcmp@plt+0x38ad8>
  43c290:	xor    ebx,ebx
  43c292:	mov    rdi,rbp
  43c295:	call   403790 <free@plt>
  43c29a:	mov    rdi,rbx
  43c29d:	call   403440 <xmlNodeGetContent@plt>
  43c2a2:	mov    r15,rax
  43c2a5:	lea    rdi,[rip+0x12dc8]        # 44f074 <strcmp@plt+0x4b8dc>
  43c2ac:	call   4035c0 <xmlCharStrdup@plt>
  43c2b1:	mov    rbx,rax
  43c2b4:	mov    rdi,r12
  43c2b7:	call   403310 <xmlFirstElementChild@plt>
  43c2bc:	test   rax,rax
  43c2bf:	je     43c2f0 <strcmp@plt+0x38b58>
  43c2c1:	mov    rbp,rax
  43c2c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c2ce:	xchg   ax,ax
  43c2d0:	mov    rdi,QWORD PTR [rbp+0x10]
  43c2d4:	mov    rsi,rbx
  43c2d7:	call   403780 <xmlStrEqual@plt>
  43c2dc:	test   eax,eax
  43c2de:	jne    43c2f2 <strcmp@plt+0x38b5a>
  43c2e0:	mov    rdi,rbp
  43c2e3:	call   403210 <xmlNextElementSibling@plt>
  43c2e8:	mov    rbp,rax
  43c2eb:	test   rax,rax
  43c2ee:	jne    43c2d0 <strcmp@plt+0x38b38>
  43c2f0:	xor    ebp,ebp
  43c2f2:	mov    rdi,rbx
  43c2f5:	call   403790 <free@plt>
  43c2fa:	mov    rdi,rbp
  43c2fd:	mov    rsi,r15
  43c300:	mov    rdx,r14
  43c303:	call   43ba60 <strcmp@plt+0x382c8>
  43c308:	mov    rbx,rax
  43c30b:	mov    rdi,r15
  43c30e:	call   403790 <free@plt>
  43c313:	test   rbx,rbx
  43c316:	je     43c3ed <strcmp@plt+0x38c55>
  43c31c:	xor    eax,eax
  43c31e:	call   404740 <strcmp@plt+0xfa8>
  43c323:	test   rax,rax
  43c326:	je     43c414 <strcmp@plt+0x38c7c>
  43c32c:	mov    r15,rax
  43c32f:	mov    QWORD PTR [rax],rbx
  43c332:	lea    rdi,[rip+0x12d3b]        # 44f074 <strcmp@plt+0x4b8dc>
  43c339:	call   4035c0 <xmlCharStrdup@plt>
  43c33e:	mov    rbx,rax
  43c341:	mov    rdi,r12
  43c344:	call   403310 <xmlFirstElementChild@plt>
  43c349:	test   rax,rax
  43c34c:	je     43c380 <strcmp@plt+0x38be8>
  43c34e:	mov    rbp,rax
  43c351:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c35b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c360:	mov    rdi,QWORD PTR [rbp+0x10]
  43c364:	mov    rsi,rbx
  43c367:	call   403780 <xmlStrEqual@plt>
  43c36c:	test   eax,eax
  43c36e:	jne    43c382 <strcmp@plt+0x38bea>
  43c370:	mov    rdi,rbp
  43c373:	call   403210 <xmlNextElementSibling@plt>
  43c378:	mov    rbp,rax
  43c37b:	test   rax,rax
  43c37e:	jne    43c360 <strcmp@plt+0x38bc8>
  43c380:	xor    ebp,ebp
  43c382:	mov    rdi,rbx
  43c385:	call   403790 <free@plt>
  43c38a:	mov    rdi,rbp
  43c38d:	call   43c150 <strcmp@plt+0x389b8>
  43c392:	mov    DWORD PTR [r15+0xc],eax
  43c396:	lea    rdi,[rip+0x12d1b]        # 44f0b8 <strcmp@plt+0x4b920>
  43c39d:	call   4035c0 <xmlCharStrdup@plt>
  43c3a2:	mov    rbx,rax
  43c3a5:	mov    rdi,r12
  43c3a8:	call   403310 <xmlFirstElementChild@plt>
  43c3ad:	test   rax,rax
  43c3b0:	je     43c3e0 <strcmp@plt+0x38c48>
  43c3b2:	mov    rbp,rax
  43c3b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c3bf:	nop
  43c3c0:	mov    rdi,QWORD PTR [rbp+0x10]
  43c3c4:	mov    rsi,rbx
  43c3c7:	call   403780 <xmlStrEqual@plt>
  43c3cc:	test   eax,eax
  43c3ce:	jne    43c424 <strcmp@plt+0x38c8c>
  43c3d0:	mov    rdi,rbp
  43c3d3:	call   403210 <xmlNextElementSibling@plt>
  43c3d8:	mov    rbp,rax
  43c3db:	test   rax,rax
  43c3de:	jne    43c3c0 <strcmp@plt+0x38c28>
  43c3e0:	mov    rdi,rbx
  43c3e3:	call   403790 <free@plt>
  43c3e8:	jmp    43c495 <strcmp@plt+0x38cfd>
  43c3ed:	lea    rax,[rip+0x289cc]        # 464dc0 <strcmp@plt+0x61628>
  43c3f4:	cmp    DWORD PTR [rax],0x0
  43c3f7:	jle    43c41c <strcmp@plt+0x38c84>
  43c3f9:	lea    rsi,[rip+0x12c80]        # 44f080 <strcmp@plt+0x4b8e8>
  43c400:	xor    r15d,r15d
  43c403:	mov    edi,0x5
  43c408:	xor    eax,eax
  43c40a:	call   42e520 <strcmp@plt+0x2ad88>
  43c40f:	jmp    43c539 <strcmp@plt+0x38da1>
  43c414:	mov    rdi,rbx
  43c417:	call   403790 <free@plt>
  43c41c:	xor    r15d,r15d
  43c41f:	jmp    43c539 <strcmp@plt+0x38da1>
  43c424:	mov    rdi,rbx
  43c427:	call   403790 <free@plt>
  43c42c:	lea    rdi,[rip+0x12c85]        # 44f0b8 <strcmp@plt+0x4b920>
  43c433:	call   4035c0 <xmlCharStrdup@plt>
  43c438:	mov    rbx,rax
  43c43b:	mov    rdi,r12
  43c43e:	call   403310 <xmlFirstElementChild@plt>
  43c443:	test   rax,rax
  43c446:	je     43c470 <strcmp@plt+0x38cd8>
  43c448:	mov    rbp,rax
  43c44b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c450:	mov    rdi,QWORD PTR [rbp+0x10]
  43c454:	mov    rsi,rbx
  43c457:	call   403780 <xmlStrEqual@plt>
  43c45c:	test   eax,eax
  43c45e:	jne    43c472 <strcmp@plt+0x38cda>
  43c460:	mov    rdi,rbp
  43c463:	call   403210 <xmlNextElementSibling@plt>
  43c468:	mov    rbp,rax
  43c46b:	test   rax,rax
  43c46e:	jne    43c450 <strcmp@plt+0x38cb8>
  43c470:	xor    ebp,ebp
  43c472:	mov    rdi,rbx
  43c475:	call   403790 <free@plt>
  43c47a:	mov    rdi,rbp
  43c47d:	call   403440 <xmlNodeGetContent@plt>
  43c482:	mov    rdi,rax
  43c485:	xor    esi,esi
  43c487:	mov    edx,0xa
  43c48c:	call   403580 <strtol@plt>
  43c491:	mov    DWORD PTR [r15+0x8],eax
  43c495:	lea    rdi,[rip+0x12c27]        # 44f0c3 <strcmp@plt+0x4b92b>
  43c49c:	call   4035c0 <xmlCharStrdup@plt>
  43c4a1:	mov    rbx,rax
  43c4a4:	mov    rdi,r12
  43c4a7:	call   403310 <xmlFirstElementChild@plt>
  43c4ac:	test   rax,rax
  43c4af:	je     43c4e0 <strcmp@plt+0x38d48>
  43c4b1:	mov    rbp,rax
  43c4b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c4be:	xchg   ax,ax
  43c4c0:	mov    rdi,QWORD PTR [rbp+0x10]
  43c4c4:	mov    rsi,rbx
  43c4c7:	call   403780 <xmlStrEqual@plt>
  43c4cc:	test   eax,eax
  43c4ce:	jne    43c4e2 <strcmp@plt+0x38d4a>
  43c4d0:	mov    rdi,rbp
  43c4d3:	call   403210 <xmlNextElementSibling@plt>
  43c4d8:	mov    rbp,rax
  43c4db:	test   rax,rax
  43c4de:	jne    43c4c0 <strcmp@plt+0x38d28>
  43c4e0:	xor    ebp,ebp
  43c4e2:	mov    rdi,rbx
  43c4e5:	call   403790 <free@plt>
  43c4ea:	lea    rdi,[rip+0xc925]        # 448e16 <strcmp@plt+0x4567e>
  43c4f1:	call   4035c0 <xmlCharStrdup@plt>
  43c4f6:	mov    rbx,rax
  43c4f9:	mov    rdi,rbp
  43c4fc:	call   403310 <xmlFirstElementChild@plt>
  43c501:	test   rax,rax
  43c504:	je     43c531 <strcmp@plt+0x38d99>
  43c506:	mov    r12,rax
  43c509:	nop    DWORD PTR [rax+0x0]
  43c510:	mov    rdi,QWORD PTR [r12+0x10]
  43c515:	mov    rsi,rbx
  43c518:	call   403780 <xmlStrEqual@plt>
  43c51d:	test   eax,eax
  43c51f:	jne    43c54b <strcmp@plt+0x38db3>
  43c521:	mov    rdi,r12
  43c524:	call   403210 <xmlNextElementSibling@plt>
  43c529:	mov    r12,rax
  43c52c:	test   rax,rax
  43c52f:	jne    43c510 <strcmp@plt+0x38d78>
  43c531:	mov    rdi,rbx
  43c534:	call   403790 <free@plt>
  43c539:	mov    rax,r15
  43c53c:	add    rsp,0x48
  43c540:	pop    rbx
  43c541:	pop    r12
  43c543:	pop    r13
  43c545:	pop    r14
  43c547:	pop    r15
  43c549:	pop    rbp
  43c54a:	ret    
  43c54b:	mov    rdi,rbx
  43c54e:	call   403790 <free@plt>
  43c553:	lea    r13,[r15+0x18]
  43c557:	mov    rax,r15
  43c55a:	add    rax,0x10
  43c55e:	mov    QWORD PTR [rsp+0x40],rax
  43c563:	mov    eax,0xff
  43c568:	mov    QWORD PTR [rsp+0x20],rax
  43c56d:	xor    eax,eax
  43c56f:	mov    QWORD PTR [rsp+0x18],rax
  43c574:	lea    rdi,[rip+0x65a4]        # 442b1f <strcmp@plt+0x3f387>
  43c57b:	xor    eax,eax
  43c57d:	mov    QWORD PTR [rsp+0x10],rax
  43c582:	mov    eax,0xff
  43c587:	mov    QWORD PTR [rsp+0x8],rax
  43c58c:	mov    QWORD PTR [rsp+0x38],r13
  43c591:	call   4035c0 <xmlCharStrdup@plt>
  43c596:	mov    rbp,rax
  43c599:	mov    rdi,r12
  43c59c:	call   403310 <xmlFirstElementChild@plt>
  43c5a1:	test   rax,rax
  43c5a4:	je     43c5d0 <strcmp@plt+0x38e38>
  43c5a6:	mov    rbx,rax
  43c5a9:	nop    DWORD PTR [rax+0x0]
  43c5b0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c5b4:	mov    rsi,rbp
  43c5b7:	call   403780 <xmlStrEqual@plt>
  43c5bc:	test   eax,eax
  43c5be:	jne    43c5da <strcmp@plt+0x38e42>
  43c5c0:	mov    rdi,rbx
  43c5c3:	call   403210 <xmlNextElementSibling@plt>
  43c5c8:	mov    rbx,rax
  43c5cb:	test   rax,rax
  43c5ce:	jne    43c5b0 <strcmp@plt+0x38e18>
  43c5d0:	mov    rdi,rbp
  43c5d3:	call   403790 <free@plt>
  43c5d8:	jmp    43c656 <strcmp@plt+0x38ebe>
  43c5da:	mov    rdi,rbp
  43c5dd:	call   403790 <free@plt>
  43c5e2:	lea    rdi,[rip+0x6536]        # 442b1f <strcmp@plt+0x3f387>
  43c5e9:	call   4035c0 <xmlCharStrdup@plt>
  43c5ee:	mov    rbp,rax
  43c5f1:	mov    rdi,r12
  43c5f4:	call   403310 <xmlFirstElementChild@plt>
  43c5f9:	test   rax,rax
  43c5fc:	je     43c630 <strcmp@plt+0x38e98>
  43c5fe:	mov    rbx,rax
  43c601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c60b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c610:	mov    rdi,QWORD PTR [rbx+0x10]
  43c614:	mov    rsi,rbp
  43c617:	call   403780 <xmlStrEqual@plt>
  43c61c:	test   eax,eax
  43c61e:	jne    43c632 <strcmp@plt+0x38e9a>
  43c620:	mov    rdi,rbx
  43c623:	call   403210 <xmlNextElementSibling@plt>
  43c628:	mov    rbx,rax
  43c62b:	test   rax,rax
  43c62e:	jne    43c610 <strcmp@plt+0x38e78>
  43c630:	xor    ebx,ebx
  43c632:	mov    rdi,rbp
  43c635:	call   403790 <free@plt>
  43c63a:	mov    rdi,rbx
  43c63d:	call   403440 <xmlNodeGetContent@plt>
  43c642:	mov    rdi,rax
  43c645:	xor    esi,esi
  43c647:	mov    edx,0xa
  43c64c:	call   403580 <strtol@plt>
  43c651:	mov    QWORD PTR [rsp+0x8],rax
  43c656:	lea    rdi,[rip+0x12a9b]        # 44f0f8 <strcmp@plt+0x4b960>
  43c65d:	call   4035c0 <xmlCharStrdup@plt>
  43c662:	mov    rbp,rax
  43c665:	mov    rdi,r12
  43c668:	call   403310 <xmlFirstElementChild@plt>
  43c66d:	test   rax,rax
  43c670:	je     43c6a0 <strcmp@plt+0x38f08>
  43c672:	mov    rbx,rax
  43c675:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c67f:	nop
  43c680:	mov    rdi,QWORD PTR [rbx+0x10]
  43c684:	mov    rsi,rbp
  43c687:	call   403780 <xmlStrEqual@plt>
  43c68c:	test   eax,eax
  43c68e:	jne    43c6aa <strcmp@plt+0x38f12>
  43c690:	mov    rdi,rbx
  43c693:	call   403210 <xmlNextElementSibling@plt>
  43c698:	mov    rbx,rax
  43c69b:	test   rax,rax
  43c69e:	jne    43c680 <strcmp@plt+0x38ee8>
  43c6a0:	mov    rdi,rbp
  43c6a3:	call   403790 <free@plt>
  43c6a8:	jmp    43c726 <strcmp@plt+0x38f8e>
  43c6aa:	mov    rdi,rbp
  43c6ad:	call   403790 <free@plt>
  43c6b2:	lea    rdi,[rip+0x12a3f]        # 44f0f8 <strcmp@plt+0x4b960>
  43c6b9:	call   4035c0 <xmlCharStrdup@plt>
  43c6be:	mov    rbp,rax
  43c6c1:	mov    rdi,r12
  43c6c4:	call   403310 <xmlFirstElementChild@plt>
  43c6c9:	test   rax,rax
  43c6cc:	je     43c700 <strcmp@plt+0x38f68>
  43c6ce:	mov    rbx,rax
  43c6d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c6db:	nop    DWORD PTR [rax+rax*1+0x0]
  43c6e0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c6e4:	mov    rsi,rbp
  43c6e7:	call   403780 <xmlStrEqual@plt>
  43c6ec:	test   eax,eax
  43c6ee:	jne    43c702 <strcmp@plt+0x38f6a>
  43c6f0:	mov    rdi,rbx
  43c6f3:	call   403210 <xmlNextElementSibling@plt>
  43c6f8:	mov    rbx,rax
  43c6fb:	test   rax,rax
  43c6fe:	jne    43c6e0 <strcmp@plt+0x38f48>
  43c700:	xor    ebx,ebx
  43c702:	mov    rdi,rbp
  43c705:	call   403790 <free@plt>
  43c70a:	mov    rdi,rbx
  43c70d:	call   403440 <xmlNodeGetContent@plt>
  43c712:	mov    rdi,rax
  43c715:	xor    esi,esi
  43c717:	mov    edx,0xa
  43c71c:	call   403580 <strtol@plt>
  43c721:	mov    QWORD PTR [rsp+0x10],rax
  43c726:	lea    rdi,[rip+0x1299c]        # 44f0c9 <strcmp@plt+0x4b931>
  43c72d:	call   4035c0 <xmlCharStrdup@plt>
  43c732:	mov    rbp,rax
  43c735:	mov    rdi,r12
  43c738:	call   403310 <xmlFirstElementChild@plt>
  43c73d:	test   rax,rax
  43c740:	je     43c770 <strcmp@plt+0x38fd8>
  43c742:	mov    rbx,rax
  43c745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c74f:	nop
  43c750:	mov    rdi,QWORD PTR [rbx+0x10]
  43c754:	mov    rsi,rbp
  43c757:	call   403780 <xmlStrEqual@plt>
  43c75c:	test   eax,eax
  43c75e:	jne    43c77a <strcmp@plt+0x38fe2>
  43c760:	mov    rdi,rbx
  43c763:	call   403210 <xmlNextElementSibling@plt>
  43c768:	mov    rbx,rax
  43c76b:	test   rax,rax
  43c76e:	jne    43c750 <strcmp@plt+0x38fb8>
  43c770:	mov    rdi,rbp
  43c773:	call   403790 <free@plt>
  43c778:	jmp    43c7f6 <strcmp@plt+0x3905e>
  43c77a:	mov    rdi,rbp
  43c77d:	call   403790 <free@plt>
  43c782:	lea    rdi,[rip+0x1294a]        # 44f0d3 <strcmp@plt+0x4b93b>
  43c789:	call   4035c0 <xmlCharStrdup@plt>
  43c78e:	mov    rbp,rax
  43c791:	mov    rdi,r12
  43c794:	call   403310 <xmlFirstElementChild@plt>
  43c799:	test   rax,rax
  43c79c:	je     43c7d0 <strcmp@plt+0x39038>
  43c79e:	mov    rbx,rax
  43c7a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c7ab:	nop    DWORD PTR [rax+rax*1+0x0]
  43c7b0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c7b4:	mov    rsi,rbp
  43c7b7:	call   403780 <xmlStrEqual@plt>
  43c7bc:	test   eax,eax
  43c7be:	jne    43c7d2 <strcmp@plt+0x3903a>
  43c7c0:	mov    rdi,rbx
  43c7c3:	call   403210 <xmlNextElementSibling@plt>
  43c7c8:	mov    rbx,rax
  43c7cb:	test   rax,rax
  43c7ce:	jne    43c7b0 <strcmp@plt+0x39018>
  43c7d0:	xor    ebx,ebx
  43c7d2:	mov    rdi,rbp
  43c7d5:	call   403790 <free@plt>
  43c7da:	mov    rdi,rbx
  43c7dd:	call   403440 <xmlNodeGetContent@plt>
  43c7e2:	mov    rdi,rax
  43c7e5:	xor    esi,esi
  43c7e7:	mov    edx,0xa
  43c7ec:	call   403580 <strtol@plt>
  43c7f1:	mov    QWORD PTR [rsp+0x20],rax
  43c7f6:	lea    rdi,[rip+0x128e9]        # 44f0e6 <strcmp@plt+0x4b94e>
  43c7fd:	call   4035c0 <xmlCharStrdup@plt>
  43c802:	mov    rbp,rax
  43c805:	mov    rdi,r12
  43c808:	call   403310 <xmlFirstElementChild@plt>
  43c80d:	test   rax,rax
  43c810:	je     43c840 <strcmp@plt+0x390a8>
  43c812:	mov    rbx,rax
  43c815:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c81f:	nop
  43c820:	mov    rdi,QWORD PTR [rbx+0x10]
  43c824:	mov    rsi,rbp
  43c827:	call   403780 <xmlStrEqual@plt>
  43c82c:	test   eax,eax
  43c82e:	jne    43c84a <strcmp@plt+0x390b2>
  43c830:	mov    rdi,rbx
  43c833:	call   403210 <xmlNextElementSibling@plt>
  43c838:	mov    rbx,rax
  43c83b:	test   rax,rax
  43c83e:	jne    43c820 <strcmp@plt+0x39088>
  43c840:	mov    rdi,rbp
  43c843:	call   403790 <free@plt>
  43c848:	jmp    43c8c6 <strcmp@plt+0x3912e>
  43c84a:	mov    rdi,rbp
  43c84d:	call   403790 <free@plt>
  43c852:	lea    rdi,[rip+0x12895]        # 44f0ee <strcmp@plt+0x4b956>
  43c859:	call   4035c0 <xmlCharStrdup@plt>
  43c85e:	mov    rbp,rax
  43c861:	mov    rdi,r12
  43c864:	call   403310 <xmlFirstElementChild@plt>
  43c869:	test   rax,rax
  43c86c:	je     43c8a0 <strcmp@plt+0x39108>
  43c86e:	mov    rbx,rax
  43c871:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c87b:	nop    DWORD PTR [rax+rax*1+0x0]
  43c880:	mov    rdi,QWORD PTR [rbx+0x10]
  43c884:	mov    rsi,rbp
  43c887:	call   403780 <xmlStrEqual@plt>
  43c88c:	test   eax,eax
  43c88e:	jne    43c8a2 <strcmp@plt+0x3910a>
  43c890:	mov    rdi,rbx
  43c893:	call   403210 <xmlNextElementSibling@plt>
  43c898:	mov    rbx,rax
  43c89b:	test   rax,rax
  43c89e:	jne    43c880 <strcmp@plt+0x390e8>
  43c8a0:	xor    ebx,ebx
  43c8a2:	mov    rdi,rbp
  43c8a5:	call   403790 <free@plt>
  43c8aa:	mov    rdi,rbx
  43c8ad:	call   403440 <xmlNodeGetContent@plt>
  43c8b2:	mov    rdi,rax
  43c8b5:	xor    esi,esi
  43c8b7:	mov    edx,0xa
  43c8bc:	call   403580 <strtol@plt>
  43c8c1:	mov    QWORD PTR [rsp+0x18],rax
  43c8c6:	lea    rdi,[rip+0x6dad]        # 44367a <strcmp@plt+0x3fee2>
  43c8cd:	call   4035c0 <xmlCharStrdup@plt>
  43c8d2:	mov    rbp,rax
  43c8d5:	mov    rdi,r12
  43c8d8:	call   403310 <xmlFirstElementChild@plt>
  43c8dd:	test   rax,rax
  43c8e0:	je     43c914 <strcmp@plt+0x3917c>
  43c8e2:	mov    rbx,rax
  43c8e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c8ef:	nop
  43c8f0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c8f4:	mov    rsi,rbp
  43c8f7:	call   403780 <xmlStrEqual@plt>
  43c8fc:	test   eax,eax
  43c8fe:	jne    43ca7d <strcmp@plt+0x392e5>
  43c904:	mov    rdi,rbx
  43c907:	call   403210 <xmlNextElementSibling@plt>
  43c90c:	mov    rbx,rax
  43c90f:	test   rax,rax
  43c912:	jne    43c8f0 <strcmp@plt+0x39158>
  43c914:	mov    rdi,rbp
  43c917:	call   403790 <free@plt>
  43c91c:	lea    rdi,[rip+0x127dc]        # 44f0ff <strcmp@plt+0x4b967>
  43c923:	call   4035c0 <xmlCharStrdup@plt>
  43c928:	mov    rbp,rax
  43c92b:	mov    rdi,r12
  43c92e:	call   403310 <xmlFirstElementChild@plt>
  43c933:	test   rax,rax
  43c936:	je     43cbb0 <strcmp@plt+0x39418>
  43c93c:	mov    rbx,rax
  43c93f:	nop
  43c940:	mov    rdi,QWORD PTR [rbx+0x10]
  43c944:	mov    rsi,rbp
  43c947:	call   403780 <xmlStrEqual@plt>
  43c94c:	test   eax,eax
  43c94e:	jne    43c965 <strcmp@plt+0x391cd>
  43c950:	mov    rdi,rbx
  43c953:	call   403210 <xmlNextElementSibling@plt>
  43c958:	mov    rbx,rax
  43c95b:	test   rax,rax
  43c95e:	jne    43c940 <strcmp@plt+0x391a8>
  43c960:	jmp    43cbb0 <strcmp@plt+0x39418>
  43c965:	mov    rdi,rbp
  43c968:	call   403790 <free@plt>
  43c96d:	lea    rdi,[rip+0x13d36]        # 4506aa <strcmp@plt+0x4cf12>
  43c974:	call   4035c0 <xmlCharStrdup@plt>
  43c979:	mov    rbp,rax
  43c97c:	mov    rdi,r12
  43c97f:	call   403310 <xmlFirstElementChild@plt>
  43c984:	test   rax,rax
  43c987:	je     43c9b0 <strcmp@plt+0x39218>
  43c989:	mov    rbx,rax
  43c98c:	nop    DWORD PTR [rax+0x0]
  43c990:	mov    rdi,QWORD PTR [rbx+0x10]
  43c994:	mov    rsi,rbp
  43c997:	call   403780 <xmlStrEqual@plt>
  43c99c:	test   eax,eax
  43c99e:	jne    43c9b2 <strcmp@plt+0x3921a>
  43c9a0:	mov    rdi,rbx
  43c9a3:	call   403210 <xmlNextElementSibling@plt>
  43c9a8:	mov    rbx,rax
  43c9ab:	test   rax,rax
  43c9ae:	jne    43c990 <strcmp@plt+0x391f8>
  43c9b0:	xor    ebx,ebx
  43c9b2:	mov    rdi,rbp
  43c9b5:	call   403790 <free@plt>
  43c9ba:	mov    rdi,rbx
  43c9bd:	call   403440 <xmlNodeGetContent@plt>
  43c9c2:	mov    r13,rax
  43c9c5:	lea    rdi,[rip+0x12733]        # 44f0ff <strcmp@plt+0x4b967>
  43c9cc:	call   4035c0 <xmlCharStrdup@plt>
  43c9d1:	mov    rbp,rax
  43c9d4:	mov    rdi,r12
  43c9d7:	call   403310 <xmlFirstElementChild@plt>
  43c9dc:	test   rax,rax
  43c9df:	je     43ca10 <strcmp@plt+0x39278>
  43c9e1:	mov    rbx,rax
  43c9e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43c9ee:	xchg   ax,ax
  43c9f0:	mov    rdi,QWORD PTR [rbx+0x10]
  43c9f4:	mov    rsi,rbp
  43c9f7:	call   403780 <xmlStrEqual@plt>
  43c9fc:	test   eax,eax
  43c9fe:	jne    43ca12 <strcmp@plt+0x3927a>
  43ca00:	mov    rdi,rbx
  43ca03:	call   403210 <xmlNextElementSibling@plt>
  43ca08:	mov    rbx,rax
  43ca0b:	test   rax,rax
  43ca0e:	jne    43c9f0 <strcmp@plt+0x39258>
  43ca10:	xor    ebx,ebx
  43ca12:	mov    rdi,rbp
  43ca15:	call   403790 <free@plt>
  43ca1a:	mov    rdi,rbx
  43ca1d:	mov    rsi,r13
  43ca20:	mov    rdx,r14
  43ca23:	call   43ba60 <strcmp@plt+0x382c8>
  43ca28:	mov    rbx,rax
  43ca2b:	mov    rdi,r13
  43ca2e:	call   403790 <free@plt>
  43ca33:	test   rbx,rbx
  43ca36:	je     43cbdc <strcmp@plt+0x39444>
  43ca3c:	movzx  esi,BYTE PTR [rsp+0x8]
  43ca41:	movzx  edx,BYTE PTR [rsp+0x10]
  43ca46:	movzx  ecx,BYTE PTR [rsp+0x20]
  43ca4b:	movzx  r8d,BYTE PTR [rsp+0x18]
  43ca51:	mov    rdi,rbx
  43ca54:	mov    r9d,0x1
  43ca5a:	call   404af0 <strcmp@plt+0x1358>
  43ca5f:	mov    rbp,rax
  43ca62:	mov    rdi,rbx
  43ca65:	call   403790 <free@plt>
  43ca6a:	test   rbp,rbp
  43ca6d:	je     43cbdc <strcmp@plt+0x39444>
  43ca73:	mov    rax,QWORD PTR [rsp+0x40]
  43ca78:	jmp    43cb66 <strcmp@plt+0x393ce>
  43ca7d:	mov    rdi,rbp
  43ca80:	call   403790 <free@plt>
  43ca85:	lea    rdi,[rip+0x6bee]        # 44367a <strcmp@plt+0x3fee2>
  43ca8c:	call   4035c0 <xmlCharStrdup@plt>
  43ca91:	mov    rbp,rax
  43ca94:	mov    rdi,r12
  43ca97:	call   403310 <xmlFirstElementChild@plt>
  43ca9c:	test   rax,rax
  43ca9f:	mov    QWORD PTR [rsp+0x30],r14
  43caa4:	mov    QWORD PTR [rsp],r15
  43caa8:	je     43cad0 <strcmp@plt+0x39338>
  43caaa:	mov    r13,rax
  43caad:	nop    DWORD PTR [rax]
  43cab0:	mov    rdi,QWORD PTR [r13+0x10]
  43cab4:	mov    rsi,rbp
  43cab7:	call   403780 <xmlStrEqual@plt>
  43cabc:	test   eax,eax
  43cabe:	jne    43cad3 <strcmp@plt+0x3933b>
  43cac0:	mov    rdi,r13
  43cac3:	call   403210 <xmlNextElementSibling@plt>
  43cac8:	mov    r13,rax
  43cacb:	test   rax,rax
  43cace:	jne    43cab0 <strcmp@plt+0x39318>
  43cad0:	xor    r13d,r13d
  43cad3:	mov    rdi,rbp
  43cad6:	call   403790 <free@plt>
  43cadb:	mov    rdi,r13
  43cade:	call   403440 <xmlNodeGetContent@plt>
  43cae3:	movzx  ebx,BYTE PTR [rsp+0x8]
  43cae8:	movzx  ebp,BYTE PTR [rsp+0x10]
  43caed:	movzx  r14d,BYTE PTR [rsp+0x20]
  43caf3:	movzx  r15d,BYTE PTR [rsp+0x18]
  43caf9:	mov    rdi,rax
  43cafc:	mov    esi,0x4
  43cb01:	mov    edx,ebx
  43cb03:	mov    ecx,ebp
  43cb05:	mov    r8d,r14d
  43cb08:	mov    r9d,r15d
  43cb0b:	call   404c40 <strcmp@plt+0x14a8>
  43cb10:	test   rax,rax
  43cb13:	je     43cbe1 <strcmp@plt+0x39449>
  43cb19:	mov    DWORD PTR [rsp+0x2c],ebx
  43cb1d:	mov    rbx,QWORD PTR [rsp+0x38]
  43cb22:	mov    rsi,QWORD PTR [rbx]
  43cb25:	mov    rdi,rax
  43cb28:	call   42baa0 <strcmp@plt+0x28308>
  43cb2d:	mov    rdi,r13
  43cb30:	call   403440 <xmlNodeGetContent@plt>
  43cb35:	mov    rdi,rax
  43cb38:	mov    esi,0x6
  43cb3d:	mov    edx,DWORD PTR [rsp+0x2c]
  43cb41:	mov    ecx,ebp
  43cb43:	mov    r8d,r14d
  43cb46:	mov    r9d,r15d
  43cb49:	call   404c40 <strcmp@plt+0x14a8>
  43cb4e:	test   rax,rax
  43cb51:	je     43cbe1 <strcmp@plt+0x39449>
  43cb57:	mov    rbp,rax
  43cb5a:	mov    rax,rbx
  43cb5d:	mov    r14,QWORD PTR [rsp+0x30]
  43cb62:	mov    r15,QWORD PTR [rsp]
  43cb66:	mov    rsi,QWORD PTR [rax]
  43cb69:	mov    rdi,rbp
  43cb6c:	call   42baa0 <strcmp@plt+0x28308>
  43cb71:	mov    rbx,QWORD PTR [r12+0x10]
  43cb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cb80:	mov    rdi,r12
  43cb83:	call   403210 <xmlNextElementSibling@plt>
  43cb88:	test   rax,rax
  43cb8b:	je     43c539 <strcmp@plt+0x38da1>
  43cb91:	mov    r12,rax
  43cb94:	mov    rdi,QWORD PTR [rax+0x10]
  43cb98:	mov    rsi,rbx
  43cb9b:	call   403798 <strcmp@plt>
  43cba0:	test   eax,eax
  43cba2:	jne    43cb80 <strcmp@plt+0x393e8>
  43cba4:	lea    rdi,[rip+0x5f74]        # 442b1f <strcmp@plt+0x3f387>
  43cbab:	jmp    43c591 <strcmp@plt+0x38df9>
  43cbb0:	mov    rdi,rbp
  43cbb3:	call   403790 <free@plt>
  43cbb8:	mov    rdi,r15
  43cbbb:	call   4047e0 <strcmp@plt+0x1048>
  43cbc0:	lea    rax,[rip+0x281f9]        # 464dc0 <strcmp@plt+0x61628>
  43cbc7:	cmp    DWORD PTR [rax],0x0
  43cbca:	jle    43c41c <strcmp@plt+0x38c84>
  43cbd0:	lea    rsi,[rip+0x12538]        # 44f10f <strcmp@plt+0x4b977>
  43cbd7:	jmp    43c400 <strcmp@plt+0x38c68>
  43cbdc:	mov    rdi,r15
  43cbdf:	jmp    43cbe5 <strcmp@plt+0x3944d>
  43cbe1:	mov    rdi,QWORD PTR [rsp]
  43cbe5:	call   4047e0 <strcmp@plt+0x1048>
  43cbea:	xor    r15d,r15d
  43cbed:	jmp    43c539 <strcmp@plt+0x38da1>
  43cbf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cbfc:	nop    DWORD PTR [rax+0x0]
  43cc00:	push   rbp
  43cc01:	push   r15
  43cc03:	push   r14
  43cc05:	push   r13
  43cc07:	push   r12
  43cc09:	push   rbx
  43cc0a:	sub    rsp,0x18
  43cc0e:	mov    r13,rdx
  43cc11:	mov    r14d,esi
  43cc14:	mov    rbp,rdi
  43cc17:	lea    rdi,[rip+0x1252d]        # 44f14b <strcmp@plt+0x4b9b3>
  43cc1e:	call   4035c0 <xmlCharStrdup@plt>
  43cc23:	mov    rbx,rax
  43cc26:	mov    rdi,rbp
  43cc29:	call   403310 <xmlFirstElementChild@plt>
  43cc2e:	test   rax,rax
  43cc31:	je     43cc60 <strcmp@plt+0x394c8>
  43cc33:	mov    rbp,rax
  43cc36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cc40:	mov    rdi,QWORD PTR [rbp+0x10]
  43cc44:	mov    rsi,rbx
  43cc47:	call   403780 <xmlStrEqual@plt>
  43cc4c:	test   eax,eax
  43cc4e:	jne    43cc72 <strcmp@plt+0x394da>
  43cc50:	mov    rdi,rbp
  43cc53:	call   403210 <xmlNextElementSibling@plt>
  43cc58:	mov    rbp,rax
  43cc5b:	test   rax,rax
  43cc5e:	jne    43cc40 <strcmp@plt+0x394a8>
  43cc60:	mov    rdi,rbx
  43cc63:	call   403790 <free@plt>
  43cc68:	mov    ebp,0x1
  43cc6d:	jmp    43d00b <strcmp@plt+0x39873>
  43cc72:	mov    rdi,rbx
  43cc75:	call   403790 <free@plt>
  43cc7a:	lea    rdi,[rip+0x8e9b]        # 445b1c <strcmp@plt+0x42384>
  43cc81:	call   4035c0 <xmlCharStrdup@plt>
  43cc86:	mov    r15,rax
  43cc89:	mov    rdi,rbp
  43cc8c:	call   403310 <xmlFirstElementChild@plt>
  43cc91:	test   rax,rax
  43cc94:	je     43cfee <strcmp@plt+0x39856>
  43cc9a:	mov    rbx,rax
  43cc9d:	lea    r12,[rip+0x124f0]        # 44f194 <strcmp@plt+0x4b9fc>
  43cca4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ccae:	xchg   ax,ax
  43ccb0:	mov    rdi,QWORD PTR [rbx+0x10]
  43ccb4:	mov    rsi,r15
  43ccb7:	call   403780 <xmlStrEqual@plt>
  43ccbc:	test   eax,eax
  43ccbe:	jne    43ccd5 <strcmp@plt+0x3953d>
  43ccc0:	mov    rdi,rbx
  43ccc3:	call   403210 <xmlNextElementSibling@plt>
  43ccc8:	mov    rbx,rax
  43cccb:	test   rax,rax
  43ccce:	jne    43ccb0 <strcmp@plt+0x39518>
  43ccd0:	jmp    43cfee <strcmp@plt+0x39856>
  43ccd5:	mov    rdi,r15
  43ccd8:	call   403790 <free@plt>
  43ccdd:	mov    rdi,r12
  43cce0:	call   4035c0 <xmlCharStrdup@plt>
  43cce5:	mov    r12,rax
  43cce8:	mov    rdi,rbp
  43cceb:	call   403310 <xmlFirstElementChild@plt>
  43ccf0:	test   rax,rax
  43ccf3:	je     43d01c <strcmp@plt+0x39884>
  43ccf9:	mov    r15,rax
  43ccfc:	nop    DWORD PTR [rax+0x0]
  43cd00:	mov    rdi,QWORD PTR [r15+0x10]
  43cd04:	mov    rsi,r12
  43cd07:	call   403780 <xmlStrEqual@plt>
  43cd0c:	test   eax,eax
  43cd0e:	jne    43cd25 <strcmp@plt+0x3958d>
  43cd10:	mov    rdi,r15
  43cd13:	call   403210 <xmlNextElementSibling@plt>
  43cd18:	mov    r15,rax
  43cd1b:	test   rax,rax
  43cd1e:	jne    43cd00 <strcmp@plt+0x39568>
  43cd20:	jmp    43d01c <strcmp@plt+0x39884>
  43cd25:	mov    DWORD PTR [rsp+0xc],r14d
  43cd2a:	mov    rdi,r12
  43cd2d:	call   403790 <free@plt>
  43cd32:	lea    rdi,[rip+0x124ab]        # 44f1e4 <strcmp@plt+0x4ba4c>
  43cd39:	call   4035c0 <xmlCharStrdup@plt>
  43cd3e:	mov    r12,rax
  43cd41:	mov    rdi,rbp
  43cd44:	call   403310 <xmlFirstElementChild@plt>
  43cd49:	test   rax,rax
  43cd4c:	je     43d02d <strcmp@plt+0x39895>
  43cd52:	mov    r14,rax
  43cd55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43cd5f:	nop
  43cd60:	mov    rdi,QWORD PTR [r14+0x10]
  43cd64:	mov    rsi,r12
  43cd67:	call   403780 <xmlStrEqual@plt>
  43cd6c:	test   eax,eax
  43cd6e:	jne    43cd85 <strcmp@plt+0x395ed>
  43cd70:	mov    rdi,r14
  43cd73:	call   403210 <xmlNextElementSibling@plt>
  43cd78:	mov    r14,rax
  43cd7b:	test   rax,rax
  43cd7e:	jne    43cd60 <strcmp@plt+0x395c8>
  43cd80:	jmp    43d02d <strcmp@plt+0x39895>
  43cd85:	mov    rdi,r12
  43cd88:	call   403790 <free@plt>
  43cd8d:	mov    rdi,rbx
  43cd90:	call   403440 <xmlNodeGetContent@plt>
  43cd95:	mov    QWORD PTR [rsp+0x10],rax
  43cd9a:	mov    rdi,r14
  43cd9d:	call   403440 <xmlNodeGetContent@plt>
  43cda2:	mov    r12,rax
  43cda5:	mov    rdi,r15
  43cda8:	call   403440 <xmlNodeGetContent@plt>
  43cdad:	mov    rbx,rax
  43cdb0:	mov    rdi,rax
  43cdb3:	lea    rsi,[rip+0x12470]        # 44f22a <strcmp@plt+0x4ba92>
  43cdba:	call   403798 <strcmp@plt>
  43cdbf:	test   eax,eax
  43cdc1:	je     43d03e <strcmp@plt+0x398a6>
  43cdc7:	mov    rdi,rbx
  43cdca:	lea    rsi,[rip+0x1245e]        # 44f22f <strcmp@plt+0x4ba97>
  43cdd1:	call   403798 <strcmp@plt>
  43cdd6:	test   eax,eax
  43cdd8:	je     43cdfe <strcmp@plt+0x39666>
  43cdda:	mov    rdi,rbx
  43cddd:	lea    rsi,[rip+0x12459]        # 44f23d <strcmp@plt+0x4baa5>
  43cde4:	call   403798 <strcmp@plt>
  43cde9:	mov    r14d,eax
  43cdec:	mov    rdi,rbx
  43cdef:	call   403790 <free@plt>
  43cdf4:	test   r14d,r14d
  43cdf7:	jne    43ce06 <strcmp@plt+0x3966e>
  43cdf9:	jmp    43d046 <strcmp@plt+0x398ae>
  43cdfe:	mov    rdi,rbx
  43ce01:	call   403790 <free@plt>
  43ce06:	xor    eax,eax
  43ce08:	call   422c80 <strcmp@plt+0x1f4e8>
  43ce0d:	test   rax,rax
  43ce10:	mov    rbx,QWORD PTR [rsp+0x10]
  43ce15:	je     43d062 <strcmp@plt+0x398ca>
  43ce1b:	mov    r15,rax
  43ce1e:	mov    rdi,rbx
  43ce21:	mov    rsi,rax
  43ce24:	call   423940 <strcmp@plt+0x201a8>
  43ce29:	cmp    eax,0x1
  43ce2c:	jne    43d079 <strcmp@plt+0x398e1>
  43ce32:	mov    rdi,rbx
  43ce35:	call   403790 <free@plt>
  43ce3a:	mov    r14,QWORD PTR [r13+0x8]
  43ce3e:	cmp    r14,r13
  43ce41:	jne    43ce5d <strcmp@plt+0x396c5>
  43ce43:	jmp    43cee4 <strcmp@plt+0x3974c>
  43ce48:	nop    DWORD PTR [rax+rax*1+0x0]
  43ce50:	mov    r14,QWORD PTR [r14+0x8]
  43ce54:	cmp    r14,r13
  43ce57:	je     43cee4 <strcmp@plt+0x3974c>
  43ce5d:	mov    rax,QWORD PTR [r14+0x10]
  43ce61:	mov    rdi,QWORD PTR [rax]
  43ce64:	mov    rsi,r15
  43ce67:	call   423670 <strcmp@plt+0x1fed8>
  43ce6c:	test   eax,eax
  43ce6e:	jne    43ce50 <strcmp@plt+0x396b8>
  43ce70:	mov    rdi,r15
  43ce73:	call   422c90 <strcmp@plt+0x1f4f8>
  43ce78:	mov    rdi,r12
  43ce7b:	call   403790 <free@plt>
  43ce80:	lea    rax,[rip+0x27f39]        # 464dc0 <strcmp@plt+0x61628>
  43ce87:	cmp    DWORD PTR [rax],0x2
  43ce8a:	jl     43ceaa <strcmp@plt+0x39712>
  43ce8c:	mov    rdi,r15
  43ce8f:	call   422e20 <strcmp@plt+0x1f688>
  43ce94:	mov    edi,0x6
  43ce99:	lea    rsi,[rip+0x1243a]        # 44f2da <strcmp@plt+0x4bb42>
  43cea0:	mov    rdx,rax
  43cea3:	xor    eax,eax
  43cea5:	call   42e520 <strcmp@plt+0x2ad88>
  43ceaa:	mov    rbx,QWORD PTR [rbp+0x10]
  43ceae:	xchg   ax,ax
  43ceb0:	mov    rdi,rbp
  43ceb3:	call   403210 <xmlNextElementSibling@plt>
  43ceb8:	test   rax,rax
  43cebb:	je     43ced5 <strcmp@plt+0x3973d>
  43cebd:	mov    rbp,rax
  43cec0:	mov    rdi,QWORD PTR [rax+0x10]
  43cec4:	mov    rsi,rbx
  43cec7:	call   403798 <strcmp@plt>
  43cecc:	test   eax,eax
  43cece:	jne    43ceb0 <strcmp@plt+0x39718>
  43ced0:	jmp    43ce50 <strcmp@plt+0x396b8>
  43ced5:	xor    ebp,ebp
  43ced7:	mov    r14,QWORD PTR [r14+0x8]
  43cedb:	cmp    r14,r13
  43cede:	jne    43ce5d <strcmp@plt+0x396c5>
  43cee4:	lea    rax,[rip+0x33625]        # 470510 <strcmp@plt+0x6cd78>
  43ceeb:	mov    ebx,DWORD PTR [rax]
  43ceed:	test   ebx,ebx
  43ceef:	je     43cf00 <strcmp@plt+0x39768>
  43cef1:	mov    rdi,r15
  43cef4:	call   422ef0 <strcmp@plt+0x1f758>
  43cef9:	movzx  eax,ax
  43cefc:	cmp    ebx,eax
  43cefe:	jne    43cf76 <strcmp@plt+0x397de>
  43cf00:	mov    r14d,DWORD PTR [rsp+0xc]
  43cf05:	movzx  ecx,r14b
  43cf09:	mov    rdi,r15
  43cf0c:	mov    esi,0x1
  43cf11:	mov    rdx,r12
  43cf14:	call   40fd30 <strcmp@plt+0xc598>
  43cf19:	mov    rbx,rax
  43cf1c:	mov    rdi,r12
  43cf1f:	call   403790 <free@plt>
  43cf24:	mov    rdi,r15
  43cf27:	call   422c90 <strcmp@plt+0x1f4f8>
  43cf2c:	test   rbx,rbx
  43cf2f:	je     43d0a6 <strcmp@plt+0x3990e>
  43cf35:	mov    rdi,rbx
  43cf38:	mov    rsi,r13
  43cf3b:	call   42baa0 <strcmp@plt+0x28308>
  43cf40:	mov    rbx,QWORD PTR [rbp+0x10]
  43cf44:	lea    r12,[rip+0x12249]        # 44f194 <strcmp@plt+0x4b9fc>
  43cf4b:	nop    DWORD PTR [rax+rax*1+0x0]
  43cf50:	mov    rdi,rbp
  43cf53:	call   403210 <xmlNextElementSibling@plt>
  43cf58:	test   rax,rax
  43cf5b:	je     43cc68 <strcmp@plt+0x394d0>
  43cf61:	mov    rbp,rax
  43cf64:	mov    rdi,QWORD PTR [rax+0x10]
  43cf68:	mov    rsi,rbx
  43cf6b:	call   403798 <strcmp@plt>
  43cf70:	test   eax,eax
  43cf72:	jne    43cf50 <strcmp@plt+0x397b8>
  43cf74:	jmp    43cfd2 <strcmp@plt+0x3983a>
  43cf76:	mov    edi,0x3
  43cf7b:	lea    rsi,[rip+0x59f2]        # 442974 <strcmp@plt+0x3f1dc>
  43cf82:	mov    rdx,QWORD PTR [rsp+0x10]
  43cf87:	xor    eax,eax
  43cf89:	call   42e520 <strcmp@plt+0x2ad88>
  43cf8e:	mov    rdi,r15
  43cf91:	call   422c90 <strcmp@plt+0x1f4f8>
  43cf96:	mov    rdi,r12
  43cf99:	call   403790 <free@plt>
  43cf9e:	mov    rbx,QWORD PTR [rbp+0x10]
  43cfa2:	mov    r14d,DWORD PTR [rsp+0xc]
  43cfa7:	lea    r12,[rip+0x121e6]        # 44f194 <strcmp@plt+0x4b9fc>
  43cfae:	mov    rdi,rbp
  43cfb1:	call   403210 <xmlNextElementSibling@plt>
  43cfb6:	test   rax,rax
  43cfb9:	je     43cc68 <strcmp@plt+0x394d0>
  43cfbf:	mov    rbp,rax
  43cfc2:	mov    rdi,QWORD PTR [rax+0x10]
  43cfc6:	mov    rsi,rbx
  43cfc9:	call   403798 <strcmp@plt>
  43cfce:	test   eax,eax
  43cfd0:	jne    43cfae <strcmp@plt+0x39816>
  43cfd2:	lea    rdi,[rip+0x8b43]        # 445b1c <strcmp@plt+0x42384>
  43cfd9:	call   4035c0 <xmlCharStrdup@plt>
  43cfde:	mov    r15,rax
  43cfe1:	mov    rdi,rbp
  43cfe4:	call   403310 <xmlFirstElementChild@plt>
  43cfe9:	jmp    43ccc8 <strcmp@plt+0x39530>
  43cfee:	mov    rdi,r15
  43cff1:	call   403790 <free@plt>
  43cff6:	lea    rsi,[rip+0x12159]        # 44f156 <strcmp@plt+0x4b9be>
  43cffd:	xor    ebp,ebp
  43cfff:	mov    edi,0x3
  43d004:	xor    eax,eax
  43d006:	call   42e520 <strcmp@plt+0x2ad88>
  43d00b:	mov    eax,ebp
  43d00d:	add    rsp,0x18
  43d011:	pop    rbx
  43d012:	pop    r12
  43d014:	pop    r13
  43d016:	pop    r14
  43d018:	pop    r15
  43d01a:	pop    rbp
  43d01b:	ret    
  43d01c:	mov    rdi,r12
  43d01f:	call   403790 <free@plt>
  43d024:	lea    rsi,[rip+0x12177]        # 44f1a2 <strcmp@plt+0x4ba0a>
  43d02b:	jmp    43cffd <strcmp@plt+0x39865>
  43d02d:	mov    rdi,r12
  43d030:	call   403790 <free@plt>
  43d035:	lea    rsi,[rip+0x121b1]        # 44f1ed <strcmp@plt+0x4ba55>
  43d03c:	jmp    43cffd <strcmp@plt+0x39865>
  43d03e:	mov    rdi,rbx
  43d041:	call   403790 <free@plt>
  43d046:	lea    rsi,[rip+0x58ba]        # 442907 <strcmp@plt+0x3f16f>
  43d04d:	xor    ebp,ebp
  43d04f:	mov    edi,0x2
  43d054:	xor    eax,eax
  43d056:	call   42e520 <strcmp@plt+0x2ad88>
  43d05b:	mov    rdi,QWORD PTR [rsp+0x10]
  43d060:	jmp    43d094 <strcmp@plt+0x398fc>
  43d062:	lea    rsi,[rip+0x121e5]        # 44f24e <strcmp@plt+0x4bab6>
  43d069:	xor    ebp,ebp
  43d06b:	mov    edi,0x3
  43d070:	xor    eax,eax
  43d072:	call   42e520 <strcmp@plt+0x2ad88>
  43d077:	jmp    43d091 <strcmp@plt+0x398f9>
  43d079:	lea    rsi,[rip+0x12220]        # 44f2a0 <strcmp@plt+0x4bb08>
  43d080:	xor    ebp,ebp
  43d082:	mov    edi,0x3
  43d087:	mov    rdx,rbx
  43d08a:	xor    eax,eax
  43d08c:	call   42e520 <strcmp@plt+0x2ad88>
  43d091:	mov    rdi,rbx
  43d094:	call   403790 <free@plt>
  43d099:	mov    rdi,r12
  43d09c:	call   403790 <free@plt>
  43d0a1:	jmp    43d00b <strcmp@plt+0x39873>
  43d0a6:	xor    ebp,ebp
  43d0a8:	jmp    43d00b <strcmp@plt+0x39873>
  43d0ad:	nop    DWORD PTR [rax]
  43d0b0:	push   r14
  43d0b2:	push   rbx
  43d0b3:	push   rax
  43d0b4:	mov    rbx,rdi
  43d0b7:	call   4036a0 <zmq_ctx_new@plt>
  43d0bc:	mov    QWORD PTR [rbx],rax
  43d0bf:	lea    r14,[rip+0x27cfa]        # 464dc0 <strcmp@plt+0x61628>
  43d0c6:	cmp    DWORD PTR [r14],0x3
  43d0ca:	jl     43d0f1 <strcmp@plt+0x39959>
  43d0cc:	call   403040 <__errno_location@plt>
  43d0d1:	mov    edi,DWORD PTR [rax]
  43d0d3:	call   403100 <zmq_strerror@plt>
  43d0d8:	lea    rsi,[rip+0x12245]        # 44f324 <strcmp@plt+0x4bb8c>
  43d0df:	mov    edi,0x7
  43d0e4:	mov    rdx,rax
  43d0e7:	xor    eax,eax
  43d0e9:	call   42e520 <strcmp@plt+0x2ad88>
  43d0ee:	mov    rax,QWORD PTR [rbx]
  43d0f1:	mov    rdi,rax
  43d0f4:	mov    esi,0x4
  43d0f9:	call   4036f0 <zmq_socket@plt>
  43d0fe:	mov    QWORD PTR [rbx+0x8],rax
  43d102:	cmp    DWORD PTR [r14],0x3
  43d106:	jl     43d12e <strcmp@plt+0x39996>
  43d108:	call   403040 <__errno_location@plt>
  43d10d:	mov    edi,DWORD PTR [rax]
  43d10f:	call   403100 <zmq_strerror@plt>
  43d114:	lea    rsi,[rip+0x12229]        # 44f344 <strcmp@plt+0x4bbac>
  43d11b:	mov    edi,0x7
  43d120:	mov    rdx,rax
  43d123:	xor    eax,eax
  43d125:	call   42e520 <strcmp@plt+0x2ad88>
  43d12a:	mov    rax,QWORD PTR [rbx+0x8]
  43d12e:	lea    rsi,[rip+0x11c20]        # 44ed55 <strcmp@plt+0x4b5bd>
  43d135:	mov    rdi,rax
  43d138:	call   4032e0 <zmq_bind@plt>
  43d13d:	mov    ecx,DWORD PTR [r14]
  43d140:	test   eax,eax
  43d142:	je     43d176 <strcmp@plt+0x399de>
  43d144:	cmp    ecx,0x2
  43d147:	jl     43d166 <strcmp@plt+0x399ce>
  43d149:	mov    edi,eax
  43d14b:	call   403100 <zmq_strerror@plt>
  43d150:	lea    rsi,[rip+0x12206]        # 44f35d <strcmp@plt+0x4bbc5>
  43d157:	mov    edi,0x6
  43d15c:	mov    rdx,rax
  43d15f:	xor    eax,eax
  43d161:	call   42e520 <strcmp@plt+0x2ad88>
  43d166:	lea    rsi,[rip+0x12249]        # 44f3b6 <strcmp@plt+0x4bc1e>
  43d16d:	xor    ebx,ebx
  43d16f:	mov    edi,0x2
  43d174:	jmp    43d18c <strcmp@plt+0x399f4>
  43d176:	mov    ebx,0x1
  43d17b:	cmp    ecx,0x2
  43d17e:	jl     43d193 <strcmp@plt+0x399fb>
  43d180:	lea    rsi,[rip+0x12206]        # 44f38d <strcmp@plt+0x4bbf5>
  43d187:	mov    edi,0x6
  43d18c:	xor    eax,eax
  43d18e:	call   42e520 <strcmp@plt+0x2ad88>
  43d193:	mov    eax,ebx
  43d195:	add    rsp,0x8
  43d199:	pop    rbx
  43d19a:	pop    r14
  43d19c:	ret    
  43d19d:	nop    DWORD PTR [rax]
  43d1a0:	push   rbp
  43d1a1:	push   r15
  43d1a3:	push   r14
  43d1a5:	push   r13
  43d1a7:	push   r12
  43d1a9:	push   rbx
  43d1aa:	sub    rsp,0x28
  43d1ae:	mov    rbx,rdx
  43d1b1:	mov    r13,rsi
  43d1b4:	mov    r15,rdi
  43d1b7:	lea    rax,[rip+0x27c02]        # 464dc0 <strcmp@plt+0x61628>
  43d1be:	cmp    DWORD PTR [rax],0x0
  43d1c1:	jle    43d1d6 <strcmp@plt+0x39a3e>
  43d1c3:	lea    rsi,[rip+0x1221e]        # 44f3e8 <strcmp@plt+0x4bc50>
  43d1ca:	mov    edi,0x5
  43d1cf:	xor    eax,eax
  43d1d1:	call   42e520 <strcmp@plt+0x2ad88>
  43d1d6:	lea    rax,[rip+0x333cb]        # 4705a8 <strcmp@plt+0x6ce10>
  43d1dd:	mov    rdi,QWORD PTR [rax]
  43d1e0:	call   40e830 <strcmp@plt+0xb098>
  43d1e5:	mov    r12,rax
  43d1e8:	lea    rdi,[rip+0xfffffffffffe5aa1]        # 422c90 <strcmp@plt+0x1f4f8>
  43d1ef:	call   42b9b0 <strcmp@plt+0x28218>
  43d1f4:	mov    QWORD PTR [rsp+0x8],rax
  43d1f9:	mov    esi,DWORD PTR [r13+0x4]
  43d1fd:	lea    rcx,[rip+0x12210]        # 44f414 <strcmp@plt+0x4bc7c>
  43d204:	xor    ebp,ebp
  43d206:	mov    rdi,rbx
  43d209:	xor    edx,edx
  43d20b:	mov    r8d,0x2160
  43d211:	call   403030 <xmlReadMemory@plt>
  43d216:	mov    QWORD PTR [rsp+0x20],rax
  43d21b:	mov    rdi,rax
  43d21e:	call   403600 <xmlDocGetRootElement@plt>
  43d223:	mov    r14,rax
  43d226:	lea    rdi,[rip+0x121ed]        # 44f41a <strcmp@plt+0x4bc82>
  43d22d:	call   4035c0 <xmlCharStrdup@plt>
  43d232:	mov    rbx,rax
  43d235:	mov    rdi,r14
  43d238:	call   403310 <xmlFirstElementChild@plt>
  43d23d:	test   rax,rax
  43d240:	je     43d272 <strcmp@plt+0x39ada>
  43d242:	mov    rbp,rax
  43d245:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d24f:	nop
  43d250:	mov    rdi,QWORD PTR [rbp+0x10]
  43d254:	mov    rsi,rbx
  43d257:	call   403780 <xmlStrEqual@plt>
  43d25c:	test   eax,eax
  43d25e:	jne    43d272 <strcmp@plt+0x39ada>
  43d260:	mov    rdi,rbp
  43d263:	call   403210 <xmlNextElementSibling@plt>
  43d268:	mov    rbp,rax
  43d26b:	test   rax,rax
  43d26e:	jne    43d250 <strcmp@plt+0x39ab8>
  43d270:	xor    ebp,ebp
  43d272:	mov    rdi,rbx
  43d275:	call   403790 <free@plt>
  43d27a:	lea    rdi,[rip+0x121a7]        # 44f428 <strcmp@plt+0x4bc90>
  43d281:	call   4035c0 <xmlCharStrdup@plt>
  43d286:	mov    rbx,rax
  43d289:	mov    rdi,rbp
  43d28c:	call   403310 <xmlFirstElementChild@plt>
  43d291:	test   rax,rax
  43d294:	je     43d2c0 <strcmp@plt+0x39b28>
  43d296:	mov    rbp,rax
  43d299:	nop    DWORD PTR [rax+0x0]
  43d2a0:	mov    rdi,QWORD PTR [rbp+0x10]
  43d2a4:	mov    rsi,rbx
  43d2a7:	call   403780 <xmlStrEqual@plt>
  43d2ac:	test   eax,eax
  43d2ae:	jne    43d2cd <strcmp@plt+0x39b35>
  43d2b0:	mov    rdi,rbp
  43d2b3:	call   403210 <xmlNextElementSibling@plt>
  43d2b8:	mov    rbp,rax
  43d2bb:	test   rax,rax
  43d2be:	jne    43d2a0 <strcmp@plt+0x39b08>
  43d2c0:	mov    rdi,rbx
  43d2c3:	call   403790 <free@plt>
  43d2c8:	jmp    43d425 <strcmp@plt+0x39c8d>
  43d2cd:	mov    rdi,rbx
  43d2d0:	call   403790 <free@plt>
  43d2d5:	lea    rdi,[rip+0x12159]        # 44f435 <strcmp@plt+0x4bc9d>
  43d2dc:	call   4035c0 <xmlCharStrdup@plt>
  43d2e1:	mov    rbx,rax
  43d2e4:	mov    rdi,rbp
  43d2e7:	call   403310 <xmlFirstElementChild@plt>
  43d2ec:	test   rax,rax
  43d2ef:	je     43d320 <strcmp@plt+0x39b88>
  43d2f1:	mov    r14,rax
  43d2f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d2fe:	xchg   ax,ax
  43d300:	mov    rdi,QWORD PTR [r14+0x10]
  43d304:	mov    rsi,rbx
  43d307:	call   403780 <xmlStrEqual@plt>
  43d30c:	test   eax,eax
  43d30e:	jne    43d32d <strcmp@plt+0x39b95>
  43d310:	mov    rdi,r14
  43d313:	call   403210 <xmlNextElementSibling@plt>
  43d318:	mov    r14,rax
  43d31b:	test   rax,rax
  43d31e:	jne    43d300 <strcmp@plt+0x39b68>
  43d320:	mov    rdi,rbx
  43d323:	call   403790 <free@plt>
  43d328:	jmp    43d3f0 <strcmp@plt+0x39c58>
  43d32d:	mov    QWORD PTR [rsp+0x18],r15
  43d332:	mov    rdi,rbx
  43d335:	call   403790 <free@plt>
  43d33a:	xor    eax,eax
  43d33c:	call   422c80 <strcmp@plt+0x1f4e8>
  43d341:	mov    r15,rax
  43d344:	mov    rdi,r14
  43d347:	call   403440 <xmlNodeGetContent@plt>
  43d34c:	mov    rdi,rax
  43d34f:	mov    rsi,r15
  43d352:	call   423940 <strcmp@plt+0x201a8>
  43d357:	cmp    eax,0x1
  43d35a:	jne    43d4e8 <strcmp@plt+0x39d50>
  43d360:	lea    rax,[rip+0x331a9]        # 470510 <strcmp@plt+0x6cd78>
  43d367:	mov    ebx,DWORD PTR [rax]
  43d369:	test   ebx,ebx
  43d36b:	je     43d380 <strcmp@plt+0x39be8>
  43d36d:	mov    rdi,r15
  43d370:	call   422ef0 <strcmp@plt+0x1f758>
  43d375:	movzx  eax,ax
  43d378:	cmp    ebx,eax
  43d37a:	jne    43d50a <strcmp@plt+0x39d72>
  43d380:	mov    rdi,r15
  43d383:	mov    rbx,QWORD PTR [rsp+0x8]
  43d388:	mov    rsi,rbx
  43d38b:	lea    rdx,[rip+0xfffffffffffe62de]        # 423670 <strcmp@plt+0x1fed8>
  43d392:	call   42bc70 <strcmp@plt+0x284d8>
  43d397:	mov    rdi,r15
  43d39a:	test   al,al
  43d39c:	jne    43d4da <strcmp@plt+0x39d42>
  43d3a2:	call   423440 <strcmp@plt+0x1fca8>
  43d3a7:	mov    rdi,rax
  43d3aa:	mov    rsi,rbx
  43d3ad:	call   42bbd0 <strcmp@plt+0x28438>
  43d3b2:	mov    rbx,QWORD PTR [r14+0x10]
  43d3b6:	mov    r15,QWORD PTR [rsp+0x18]
  43d3bb:	nop    DWORD PTR [rax+rax*1+0x0]
  43d3c0:	mov    rdi,r14
  43d3c3:	call   403210 <xmlNextElementSibling@plt>
  43d3c8:	test   rax,rax
  43d3cb:	je     43d3f0 <strcmp@plt+0x39c58>
  43d3cd:	mov    r14,rax
  43d3d0:	mov    rdi,QWORD PTR [rax+0x10]
  43d3d4:	mov    rsi,rbx
  43d3d7:	call   403798 <strcmp@plt>
  43d3dc:	test   eax,eax
  43d3de:	jne    43d3c0 <strcmp@plt+0x39c28>
  43d3e0:	jmp    43d33a <strcmp@plt+0x39ba2>
  43d3e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d3ef:	nop
  43d3f0:	mov    rbx,QWORD PTR [rbp+0x10]
  43d3f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d3fe:	xchg   ax,ax
  43d400:	mov    rdi,rbp
  43d403:	call   403210 <xmlNextElementSibling@plt>
  43d408:	test   rax,rax
  43d40b:	je     43d425 <strcmp@plt+0x39c8d>
  43d40d:	mov    rbp,rax
  43d410:	mov    rdi,QWORD PTR [rax+0x10]
  43d414:	mov    rsi,rbx
  43d417:	call   403798 <strcmp@plt>
  43d41c:	test   eax,eax
  43d41e:	jne    43d400 <strcmp@plt+0x39c68>
  43d420:	jmp    43d2d5 <strcmp@plt+0x39b3d>
  43d425:	mov    rdi,QWORD PTR [rsp+0x20]
  43d42a:	call   403720 <xmlFreeDoc@plt>
  43d42f:	mov    rdi,QWORD PTR [r12+0x48]
  43d434:	call   42bff0 <strcmp@plt+0x28858>
  43d439:	mov    rax,QWORD PTR [rsp+0x8]
  43d43e:	mov    QWORD PTR [r12+0x48],rax
  43d443:	lea    rbx,[rip+0x27976]        # 464dc0 <strcmp@plt+0x61628>
  43d44a:	cmp    DWORD PTR [rbx],0x0
  43d44d:	jle    43d481 <strcmp@plt+0x39ce9>
  43d44f:	lea    rsi,[rip+0x120ed]        # 44f543 <strcmp@plt+0x4bdab>
  43d456:	mov    edi,0x5
  43d45b:	xor    eax,eax
  43d45d:	call   42e520 <strcmp@plt+0x2ad88>
  43d462:	cmp    DWORD PTR [rbx],0x2
  43d465:	jl     43d481 <strcmp@plt+0x39ce9>
  43d467:	lea    rsi,[rip+0x8185]        # 4455f3 <strcmp@plt+0x41e5b>
  43d46e:	lea    rdx,[rip+0x11f91]        # 44f406 <strcmp@plt+0x4bc6e>
  43d475:	mov    edi,0x6
  43d47a:	xor    eax,eax
  43d47c:	call   42e520 <strcmp@plt+0x2ad88>
  43d481:	mov    rdi,QWORD PTR [r12+0x48]
  43d486:	lea    rsi,[rip+0xfffffffffffe5993]        # 422e20 <strcmp@plt+0x1f688>
  43d48d:	mov    edx,0x5
  43d492:	call   42bce0 <strcmp@plt+0x28548>
  43d497:	movzx  esi,BYTE PTR [r13+0x0]
  43d49c:	movzx  edx,BYTE PTR [r13+0x1]
  43d4a1:	movzx  ecx,BYTE PTR [r13+0x2]
  43d4a6:	lea    rdi,[rsp+0x10]
  43d4ab:	xor    r8d,r8d
  43d4ae:	call   43b470 <strcmp@plt+0x37cd8>
  43d4b3:	mov    rsi,QWORD PTR [rsp+0x10]
  43d4b8:	mov    rdi,r15
  43d4bb:	mov    edx,eax
  43d4bd:	xor    ecx,ecx
  43d4bf:	call   43b5b0 <strcmp@plt+0x37e18>
  43d4c4:	mov    ebx,0x1
  43d4c9:	mov    eax,ebx
  43d4cb:	add    rsp,0x28
  43d4cf:	pop    rbx
  43d4d0:	pop    r12
  43d4d2:	pop    r13
  43d4d4:	pop    r14
  43d4d6:	pop    r15
  43d4d8:	pop    rbp
  43d4d9:	ret    
  43d4da:	call   422e20 <strcmp@plt+0x1f688>
  43d4df:	lea    rsi,[rip+0x1200a]        # 44f4f0 <strcmp@plt+0x4bd58>
  43d4e6:	jmp    43d519 <strcmp@plt+0x39d81>
  43d4e8:	lea    rax,[rip+0x278d1]        # 464dc0 <strcmp@plt+0x61628>
  43d4ef:	cmp    DWORD PTR [rax],0x0
  43d4f2:	jle    43d528 <strcmp@plt+0x39d90>
  43d4f4:	mov    rdi,r14
  43d4f7:	call   403440 <xmlNodeGetContent@plt>
  43d4fc:	lea    rsi,[rip+0x11f47]        # 44f44a <strcmp@plt+0x4bcb2>
  43d503:	mov    edi,0x5
  43d508:	jmp    43d51e <strcmp@plt+0x39d86>
  43d50a:	mov    rdi,r15
  43d50d:	call   422e20 <strcmp@plt+0x1f688>
  43d512:	lea    rsi,[rip+0x11f69]        # 44f482 <strcmp@plt+0x4bcea>
  43d519:	mov    edi,0x3
  43d51e:	mov    rdx,rax
  43d521:	xor    eax,eax
  43d523:	call   42e520 <strcmp@plt+0x2ad88>
  43d528:	lea    rsi,[rip+0x12048]        # 44f577 <strcmp@plt+0x4bddf>
  43d52f:	xor    ebx,ebx
  43d531:	mov    edi,0x2
  43d536:	xor    eax,eax
  43d538:	call   42e520 <strcmp@plt+0x2ad88>
  43d53d:	mov    rdi,QWORD PTR [rsp+0x8]
  43d542:	call   42bff0 <strcmp@plt+0x28858>
  43d547:	mov    rdi,QWORD PTR [rsp+0x20]
  43d54c:	test   rdi,rdi
  43d54f:	mov    rbp,QWORD PTR [rsp+0x18]
  43d554:	je     43d55b <strcmp@plt+0x39dc3>
  43d556:	call   403720 <xmlFreeDoc@plt>
  43d55b:	movzx  esi,BYTE PTR [r13+0x0]
  43d560:	movzx  edx,BYTE PTR [r13+0x1]
  43d565:	movzx  ecx,BYTE PTR [r13+0x2]
  43d56a:	lea    rdi,[rsp+0x10]
  43d56f:	mov    r8d,0x1
  43d575:	call   43b470 <strcmp@plt+0x37cd8>
  43d57a:	mov    rsi,QWORD PTR [rsp+0x10]
  43d57f:	mov    rdi,rbp
  43d582:	mov    edx,eax
  43d584:	xor    ecx,ecx
  43d586:	call   43b5b0 <strcmp@plt+0x37e18>
  43d58b:	jmp    43d4c9 <strcmp@plt+0x39d31>
  43d590:	push   r15
  43d592:	push   r14
  43d594:	push   rbx
  43d595:	sub    rsp,0x10
  43d599:	mov    rbx,rsi
  43d59c:	mov    r14,rdi
  43d59f:	lea    r15,[rip+0x2781a]        # 464dc0 <strcmp@plt+0x61628>
  43d5a6:	cmp    DWORD PTR [r15],0x2
  43d5aa:	jl     43d5bf <strcmp@plt+0x39e27>
  43d5ac:	lea    rsi,[rip+0x11ff4]        # 44f5a7 <strcmp@plt+0x4be0f>
  43d5b3:	mov    edi,0x6
  43d5b8:	xor    eax,eax
  43d5ba:	call   42e520 <strcmp@plt+0x2ad88>
  43d5bf:	lea    rax,[rip+0x32fe2]        # 4705a8 <strcmp@plt+0x6ce10>
  43d5c6:	mov    rdi,QWORD PTR [rax]
  43d5c9:	call   40e830 <strcmp@plt+0xb098>
  43d5ce:	mov    rdi,QWORD PTR [rax+0x48]
  43d5d2:	cmp    DWORD PTR [rdi+0x18],0x0
  43d5d6:	je     43d61f <strcmp@plt+0x39e87>
  43d5d8:	call   42bf80 <strcmp@plt+0x287e8>
  43d5dd:	movzx  esi,BYTE PTR [rbx]
  43d5e0:	movzx  edx,BYTE PTR [rbx+0x1]
  43d5e4:	movzx  ecx,BYTE PTR [rbx+0x2]
  43d5e8:	lea    rdi,[rsp+0x8]
  43d5ed:	xor    r8d,r8d
  43d5f0:	call   43b470 <strcmp@plt+0x37cd8>
  43d5f5:	mov    rsi,QWORD PTR [rsp+0x8]
  43d5fa:	mov    rdi,r14
  43d5fd:	mov    edx,eax
  43d5ff:	xor    ecx,ecx
  43d601:	call   43b5b0 <strcmp@plt+0x37e18>
  43d606:	mov    ebx,0x1
  43d60b:	cmp    DWORD PTR [r15],0x0
  43d60f:	jle    43d660 <strcmp@plt+0x39ec8>
  43d611:	lea    rsi,[rip+0x11ffb]        # 44f613 <strcmp@plt+0x4be7b>
  43d618:	mov    edi,0x5
  43d61d:	jmp    43d659 <strcmp@plt+0x39ec1>
  43d61f:	movzx  esi,BYTE PTR [rbx]
  43d622:	movzx  edx,BYTE PTR [rbx+0x1]
  43d626:	movzx  ecx,BYTE PTR [rbx+0x2]
  43d62a:	lea    rdi,[rsp+0x8]
  43d62f:	mov    r8d,0x1
  43d635:	call   43b470 <strcmp@plt+0x37cd8>
  43d63a:	mov    rsi,QWORD PTR [rsp+0x8]
  43d63f:	xor    ebx,ebx
  43d641:	mov    rdi,r14
  43d644:	mov    edx,eax
  43d646:	xor    ecx,ecx
  43d648:	call   43b5b0 <strcmp@plt+0x37e18>
  43d64d:	lea    rsi,[rip+0x11f77]        # 44f5cb <strcmp@plt+0x4be33>
  43d654:	mov    edi,0x3
  43d659:	xor    eax,eax
  43d65b:	call   42e520 <strcmp@plt+0x2ad88>
  43d660:	mov    eax,ebx
  43d662:	add    rsp,0x10
  43d666:	pop    rbx
  43d667:	pop    r14
  43d669:	pop    r15
  43d66b:	ret    
  43d66c:	nop    DWORD PTR [rax+0x0]
  43d670:	push   rbp
  43d671:	push   r15
  43d673:	push   r14
  43d675:	push   r13
  43d677:	push   r12
  43d679:	push   rbx
  43d67a:	sub    rsp,0x18
  43d67e:	mov    rbx,rdx
  43d681:	mov    r12,rsi
  43d684:	mov    QWORD PTR [rsp+0x8],rdi
  43d689:	lea    rax,[rip+0x27730]        # 464dc0 <strcmp@plt+0x61628>
  43d690:	cmp    DWORD PTR [rax],0x0
  43d693:	jle    43d6a8 <strcmp@plt+0x39f10>
  43d695:	lea    rsi,[rip+0x11f9a]        # 44f636 <strcmp@plt+0x4be9e>
  43d69c:	mov    edi,0x5
  43d6a1:	xor    eax,eax
  43d6a3:	call   42e520 <strcmp@plt+0x2ad88>
  43d6a8:	lea    rax,[rip+0x32ef9]        # 4705a8 <strcmp@plt+0x6ce10>
  43d6af:	mov    rdi,QWORD PTR [rax]
  43d6b2:	call   40e830 <strcmp@plt+0xb098>
  43d6b7:	mov    QWORD PTR [rsp+0x10],rax
  43d6bc:	mov    esi,DWORD PTR [r12+0x4]
  43d6c1:	lea    rcx,[rip+0x11d4c]        # 44f414 <strcmp@plt+0x4bc7c>
  43d6c8:	mov    rdi,rbx
  43d6cb:	xor    edx,edx
  43d6cd:	mov    r8d,0x2160
  43d6d3:	call   403030 <xmlReadMemory@plt>
  43d6d8:	mov    r13,rax
  43d6db:	mov    rdi,rax
  43d6de:	call   403600 <xmlDocGetRootElement@plt>
  43d6e3:	mov    rdi,rax
  43d6e6:	call   403310 <xmlFirstElementChild@plt>
  43d6eb:	mov    r15,rax
  43d6ee:	lea    rdi,[rip+0x11f68]        # 44f65d <strcmp@plt+0x4bec5>
  43d6f5:	call   4035c0 <xmlCharStrdup@plt>
  43d6fa:	mov    rbp,rax
  43d6fd:	mov    rdi,r15
  43d700:	call   403310 <xmlFirstElementChild@plt>
  43d705:	test   rax,rax
  43d708:	je     43d730 <strcmp@plt+0x39f98>
  43d70a:	mov    r14,rax
  43d70d:	nop    DWORD PTR [rax]
  43d710:	mov    rdi,QWORD PTR [r14+0x10]
  43d714:	mov    rsi,rbp
  43d717:	call   403780 <xmlStrEqual@plt>
  43d71c:	test   eax,eax
  43d71e:	jne    43d73c <strcmp@plt+0x39fa4>
  43d720:	mov    rdi,r14
  43d723:	call   403210 <xmlNextElementSibling@plt>
  43d728:	mov    r14,rax
  43d72b:	test   rax,rax
  43d72e:	jne    43d710 <strcmp@plt+0x39f78>
  43d730:	mov    rdi,rbp
  43d733:	call   403790 <free@plt>
  43d738:	xor    ebx,ebx
  43d73a:	jmp    43d760 <strcmp@plt+0x39fc8>
  43d73c:	mov    rdi,rbp
  43d73f:	call   403790 <free@plt>
  43d744:	mov    rdi,r14
  43d747:	call   403440 <xmlNodeGetContent@plt>
  43d74c:	lea    rsi,[rip+0x4e07]        # 44255a <strcmp@plt+0x3edc2>
  43d753:	mov    rdi,rax
  43d756:	call   403798 <strcmp@plt>
  43d75b:	test   eax,eax
  43d75d:	sete   bl
  43d760:	lea    rdi,[rip+0xfffffffffffd2639]        # 40fda0 <strcmp@plt+0xc608>
  43d767:	call   42b9b0 <strcmp@plt+0x28218>
  43d76c:	mov    rbp,rax
  43d76f:	movzx  esi,bl
  43d772:	mov    rdi,r15
  43d775:	mov    rdx,rax
  43d778:	call   43cc00 <strcmp@plt+0x39468>
  43d77d:	cmp    eax,0x1
  43d780:	jne    43d809 <strcmp@plt+0x3a071>
  43d786:	mov    rdi,r13
  43d789:	call   403720 <xmlFreeDoc@plt>
  43d78e:	mov    rbx,QWORD PTR [rsp+0x10]
  43d793:	mov    rdi,QWORD PTR [rbx+0x78]
  43d797:	call   42bff0 <strcmp@plt+0x28858>
  43d79c:	mov    QWORD PTR [rbx+0x78],rbp
  43d7a0:	mov    rdi,rbx
  43d7a3:	call   40ee60 <strcmp@plt+0xb6c8>
  43d7a8:	lea    rax,[rip+0x27611]        # 464dc0 <strcmp@plt+0x61628>
  43d7af:	cmp    DWORD PTR [rax],0x0
  43d7b2:	jle    43d7c7 <strcmp@plt+0x3a02f>
  43d7b4:	lea    rsi,[rip+0x11ede]        # 44f699 <strcmp@plt+0x4bf01>
  43d7bb:	mov    edi,0x5
  43d7c0:	xor    eax,eax
  43d7c2:	call   42e520 <strcmp@plt+0x2ad88>
  43d7c7:	mov    rdi,rbx
  43d7ca:	mov    esi,0x5
  43d7cf:	call   40fb90 <strcmp@plt+0xc3f8>
  43d7d4:	movzx  esi,BYTE PTR [r12]
  43d7d9:	movzx  edx,BYTE PTR [r12+0x1]
  43d7df:	movzx  ecx,BYTE PTR [r12+0x2]
  43d7e5:	mov    rdi,rsp
  43d7e8:	xor    r8d,r8d
  43d7eb:	call   43b470 <strcmp@plt+0x37cd8>
  43d7f0:	mov    rsi,QWORD PTR [rsp]
  43d7f4:	mov    rdi,QWORD PTR [rsp+0x8]
  43d7f9:	mov    edx,eax
  43d7fb:	xor    ecx,ecx
  43d7fd:	call   43b5b0 <strcmp@plt+0x37e18>
  43d802:	mov    ebx,0x1
  43d807:	jmp    43d883 <strcmp@plt+0x3a0eb>
  43d809:	lea    rax,[rip+0x275b0]        # 464dc0 <strcmp@plt+0x61628>
  43d810:	cmp    DWORD PTR [rax],0x0
  43d813:	jle    43d828 <strcmp@plt+0x3a090>
  43d815:	lea    rsi,[rip+0x11e4d]        # 44f669 <strcmp@plt+0x4bed1>
  43d81c:	mov    edi,0x5
  43d821:	xor    eax,eax
  43d823:	call   42e520 <strcmp@plt+0x2ad88>
  43d828:	mov    rdi,rbp
  43d82b:	call   42bff0 <strcmp@plt+0x28858>
  43d830:	test   r13,r13
  43d833:	je     43d83d <strcmp@plt+0x3a0a5>
  43d835:	mov    rdi,r13
  43d838:	call   403720 <xmlFreeDoc@plt>
  43d83d:	movzx  esi,BYTE PTR [r12]
  43d842:	movzx  edx,BYTE PTR [r12+0x1]
  43d848:	movzx  ecx,BYTE PTR [r12+0x2]
  43d84e:	mov    rdi,rsp
  43d851:	mov    r8d,0x1
  43d857:	call   43b470 <strcmp@plt+0x37cd8>
  43d85c:	mov    rsi,QWORD PTR [rsp]
  43d860:	xor    ebx,ebx
  43d862:	mov    rdi,QWORD PTR [rsp+0x8]
  43d867:	mov    edx,eax
  43d869:	xor    ecx,ecx
  43d86b:	call   43b5b0 <strcmp@plt+0x37e18>
  43d870:	lea    rsi,[rip+0x11e54]        # 44f6cb <strcmp@plt+0x4bf33>
  43d877:	mov    edi,0x3
  43d87c:	xor    eax,eax
  43d87e:	call   42e520 <strcmp@plt+0x2ad88>
  43d883:	mov    eax,ebx
  43d885:	add    rsp,0x18
  43d889:	pop    rbx
  43d88a:	pop    r12
  43d88c:	pop    r13
  43d88e:	pop    r14
  43d890:	pop    r15
  43d892:	pop    rbp
  43d893:	ret    
  43d894:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43d89e:	xchg   ax,ax
  43d8a0:	push   r15
  43d8a2:	push   r14
  43d8a4:	push   rbx
  43d8a5:	sub    rsp,0x10
  43d8a9:	mov    rbx,rsi
  43d8ac:	mov    r14,rdi
  43d8af:	lea    r15,[rip+0x2750a]        # 464dc0 <strcmp@plt+0x61628>
  43d8b6:	cmp    DWORD PTR [r15],0x2
  43d8ba:	jl     43d8cf <strcmp@plt+0x3a137>
  43d8bc:	lea    rsi,[rip+0x11e3a]        # 44f6fd <strcmp@plt+0x4bf65>
  43d8c3:	mov    edi,0x6
  43d8c8:	xor    eax,eax
  43d8ca:	call   42e520 <strcmp@plt+0x2ad88>
  43d8cf:	lea    rax,[rip+0x32cd2]        # 4705a8 <strcmp@plt+0x6ce10>
  43d8d6:	mov    rdi,QWORD PTR [rax]
  43d8d9:	call   40e830 <strcmp@plt+0xb098>
  43d8de:	mov    rdi,QWORD PTR [rax+0x78]
  43d8e2:	cmp    DWORD PTR [rdi+0x18],0x0
  43d8e6:	je     43d92f <strcmp@plt+0x3a197>
  43d8e8:	call   42bf80 <strcmp@plt+0x287e8>
  43d8ed:	movzx  esi,BYTE PTR [rbx]
  43d8f0:	movzx  edx,BYTE PTR [rbx+0x1]
  43d8f4:	movzx  ecx,BYTE PTR [rbx+0x2]
  43d8f8:	lea    rdi,[rsp+0x8]
  43d8fd:	xor    r8d,r8d
  43d900:	call   43b470 <strcmp@plt+0x37cd8>
  43d905:	mov    rsi,QWORD PTR [rsp+0x8]
  43d90a:	mov    rdi,r14
  43d90d:	mov    edx,eax
  43d90f:	xor    ecx,ecx
  43d911:	call   43b5b0 <strcmp@plt+0x37e18>
  43d916:	mov    ebx,0x1
  43d91b:	cmp    DWORD PTR [r15],0x0
  43d91f:	jle    43d970 <strcmp@plt+0x3a1d8>
  43d921:	lea    rsi,[rip+0x11df8]        # 44f720 <strcmp@plt+0x4bf88>
  43d928:	mov    edi,0x5
  43d92d:	jmp    43d969 <strcmp@plt+0x3a1d1>
  43d92f:	movzx  esi,BYTE PTR [rbx]
  43d932:	movzx  edx,BYTE PTR [rbx+0x1]
  43d936:	movzx  ecx,BYTE PTR [rbx+0x2]
  43d93a:	lea    rdi,[rsp+0x8]
  43d93f:	mov    r8d,0x1
  43d945:	call   43b470 <strcmp@plt+0x37cd8>
  43d94a:	mov    rsi,QWORD PTR [rsp+0x8]
  43d94f:	xor    ebx,ebx
  43d951:	mov    rdi,r14
  43d954:	mov    edx,eax
  43d956:	xor    ecx,ecx
  43d958:	call   43b5b0 <strcmp@plt+0x37e18>
  43d95d:	lea    rsi,[rip+0x11c67]        # 44f5cb <strcmp@plt+0x4be33>
  43d964:	mov    edi,0x3
  43d969:	xor    eax,eax
  43d96b:	call   42e520 <strcmp@plt+0x2ad88>
  43d970:	mov    eax,ebx
  43d972:	add    rsp,0x10
  43d976:	pop    rbx
  43d977:	pop    r14
  43d979:	pop    r15
  43d97b:	ret    
  43d97c:	nop    DWORD PTR [rax+0x0]
  43d980:	push   rbp
  43d981:	push   r15
  43d983:	push   r14
  43d985:	push   r13
  43d987:	push   r12
  43d989:	push   rbx
  43d98a:	sub    rsp,0x868
  43d991:	mov    rbx,rdx
  43d994:	mov    rbp,rsi
  43d997:	mov    QWORD PTR [rsp+0x8],rdi
  43d99c:	lea    rax,[rip+0x2741d]        # 464dc0 <strcmp@plt+0x61628>
  43d9a3:	cmp    DWORD PTR [rax],0x0
  43d9a6:	jle    43d9bb <strcmp@plt+0x3a223>
  43d9a8:	lea    rsi,[rip+0x11d93]        # 44f742 <strcmp@plt+0x4bfaa>
  43d9af:	mov    edi,0x5
  43d9b4:	xor    eax,eax
  43d9b6:	call   42e520 <strcmp@plt+0x2ad88>
  43d9bb:	lea    rdi,[rip+0xfffffffffffe52ce]        # 422c90 <strcmp@plt+0x1f4f8>
  43d9c2:	call   435e70 <strcmp@plt+0x326d8>
  43d9c7:	mov    r12,rax
  43d9ca:	lea    rdi,[rip+0xfffffffffffc6e0f]        # 4047e0 <strcmp@plt+0x1048>
  43d9d1:	call   42b9b0 <strcmp@plt+0x28218>
  43d9d6:	mov    QWORD PTR [rsp+0x20],rax
  43d9db:	call   42b980 <strcmp@plt+0x281e8>
  43d9e0:	mov    QWORD PTR [rsp],rax
  43d9e4:	call   42b980 <strcmp@plt+0x281e8>
  43d9e9:	mov    QWORD PTR [rsp+0x28],rax
  43d9ee:	lea    r13,[rip+0x32bb3]        # 4705a8 <strcmp@plt+0x6ce10>
  43d9f5:	mov    rdi,QWORD PTR [r13+0x0]
  43d9f9:	call   40e830 <strcmp@plt+0xb098>
  43d9fe:	mov    QWORD PTR [rsp+0x18],rax
  43da03:	mov    QWORD PTR [rsp+0x48],rbp
  43da08:	mov    esi,DWORD PTR [rbp+0x4]
  43da0b:	lea    rcx,[rip+0x11a02]        # 44f414 <strcmp@plt+0x4bc7c>
  43da12:	mov    rdi,rbx
  43da15:	xor    edx,edx
  43da17:	mov    r8d,0x2160
  43da1d:	call   403030 <xmlReadMemory@plt>
  43da22:	mov    r15,rax
  43da25:	mov    rdi,rax
  43da28:	call   403600 <xmlDocGetRootElement@plt>
  43da2d:	mov    rdi,rax
  43da30:	call   403310 <xmlFirstElementChild@plt>
  43da35:	mov    rdi,rax
  43da38:	call   403310 <xmlFirstElementChild@plt>
  43da3d:	test   rax,rax
  43da40:	je     43da92 <strcmp@plt+0x3a2fa>
  43da42:	mov    rbx,rax
  43da45:	mov    rdi,rbx
  43da48:	mov    rsi,r12
  43da4b:	call   43c230 <strcmp@plt+0x38a98>
  43da50:	test   rax,rax
  43da53:	je     43e0b5 <strcmp@plt+0x3a91d>
  43da59:	mov    rdi,rax
  43da5c:	mov    rsi,QWORD PTR [rsp+0x20]
  43da61:	call   42baa0 <strcmp@plt+0x28308>
  43da66:	mov    rbp,QWORD PTR [rbx+0x10]
  43da6a:	nop    WORD PTR [rax+rax*1+0x0]
  43da70:	mov    rdi,rbx
  43da73:	call   403210 <xmlNextElementSibling@plt>
  43da78:	test   rax,rax
  43da7b:	je     43da92 <strcmp@plt+0x3a2fa>
  43da7d:	mov    rbx,rax
  43da80:	mov    rdi,QWORD PTR [rax+0x10]
  43da84:	mov    rsi,rbp
  43da87:	call   403798 <strcmp@plt>
  43da8c:	test   eax,eax
  43da8e:	jne    43da70 <strcmp@plt+0x3a2d8>
  43da90:	jmp    43da45 <strcmp@plt+0x3a2ad>
  43da92:	mov    rdi,r15
  43da95:	call   403720 <xmlFreeDoc@plt>
  43da9a:	mov    rax,QWORD PTR [rsp+0x20]
  43da9f:	mov    rbp,QWORD PTR [rax+0x8]
  43daa3:	cmp    rbp,rax
  43daa6:	je     43dc40 <strcmp@plt+0x3a4a8>
  43daac:	xor    eax,eax
  43daae:	mov    QWORD PTR [rsp+0x38],rax
  43dab3:	mov    DWORD PTR [rsp+0x10],0x0
  43dabb:	mov    r14,QWORD PTR [rsp+0x18]
  43dac0:	jmp    43daf1 <strcmp@plt+0x3a359>
  43dac2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43dacc:	nop    DWORD PTR [rax+0x0]
  43dad0:	mov    rdi,rbp
  43dad3:	mov    rsi,QWORD PTR [rsp+0x28]
  43dad8:	call   42baa0 <strcmp@plt+0x28308>
  43dadd:	mov    rbp,QWORD PTR [rsp+0x40]
  43dae2:	mov    rbp,QWORD PTR [rbp+0x8]
  43dae6:	cmp    rbp,QWORD PTR [rsp+0x20]
  43daeb:	je     43dc40 <strcmp@plt+0x3a4a8>
  43daf1:	mov    r15,QWORD PTR [rbp+0x10]
  43daf5:	mov    rdi,QWORD PTR [rsp+0x18]
  43dafa:	mov    rsi,r12
  43dafd:	mov    rdx,r15
  43db00:	mov    ecx,0x1
  43db05:	call   405ed0 <strcmp@plt+0x2738>
  43db0a:	test   rax,rax
  43db0d:	je     43dbdf <strcmp@plt+0x3a447>
  43db13:	mov    rbx,rax
  43db16:	mov    rdi,QWORD PTR [r13+0x0]
  43db1a:	call   407840 <strcmp@plt+0x40a8>
  43db1f:	cmp    eax,0x3
  43db22:	jne    43db70 <strcmp@plt+0x3a3d8>
  43db24:	mov    rdi,rbx
  43db27:	call   422dd0 <strcmp@plt+0x1f638>
  43db2c:	mov    rdi,rax
  43db2f:	call   422ef0 <strcmp@plt+0x1f758>
  43db34:	cmp    ax,0xa
  43db38:	je     43db48 <strcmp@plt+0x3a3b0>
  43db3a:	cmp    ax,0x2
  43db3e:	jne    43db54 <strcmp@plt+0x3a3bc>
  43db40:	mov    eax,DWORD PTR [rsp+0x10]
  43db44:	inc    eax
  43db46:	jmp    43db58 <strcmp@plt+0x3a3c0>
  43db48:	mov    rax,QWORD PTR [rsp+0x38]
  43db4d:	inc    eax
  43db4f:	mov    QWORD PTR [rsp+0x38],rax
  43db54:	mov    eax,DWORD PTR [rsp+0x10]
  43db58:	mov    DWORD PTR [rsp+0x10],eax
  43db5c:	cmp    eax,0x1
  43db5f:	jg     43dc2d <strcmp@plt+0x3a495>
  43db65:	cmp    DWORD PTR [rsp+0x38],0x2
  43db6a:	jge    43dc2d <strcmp@plt+0x3a495>
  43db70:	mov    QWORD PTR [rsp+0x40],rbp
  43db75:	mov    BYTE PTR [rbx+0x35],0x1
  43db79:	mov    rdi,rbx
  43db7c:	call   431860 <strcmp@plt+0x2e0c8>
  43db81:	test   rax,rax
  43db84:	je     43dbfa <strcmp@plt+0x3a462>
  43db86:	mov    rbp,rax
  43db89:	mov    rax,QWORD PTR [r14+0x38]
  43db8d:	mov    rdi,QWORD PTR [r14+0x40]
  43db91:	mov    rsi,rbp
  43db94:	xor    edx,edx
  43db96:	call   QWORD PTR [rax+0x10]
  43db99:	cmp    eax,0x1
  43db9c:	jne    43dc15 <strcmp@plt+0x3a47d>
  43db9e:	mov    rdi,QWORD PTR [r14+0x70]
  43dba2:	mov    rsi,rbx
  43dba5:	call   407d80 <strcmp@plt+0x45e8>
  43dbaa:	test   rax,rax
  43dbad:	je     43dad0 <strcmp@plt+0x3a338>
  43dbb3:	mov    rdi,rax
  43dbb6:	call   4317d0 <strcmp@plt+0x2e038>
  43dbbb:	mov    rdi,rax
  43dbbe:	mov    rsi,rbx
  43dbc1:	call   428c00 <strcmp@plt+0x25468>
  43dbc6:	test   eax,eax
  43dbc8:	je     43dad0 <strcmp@plt+0x3a338>
  43dbce:	mov    rdi,rbp
  43dbd1:	mov    rsi,QWORD PTR [rsp]
  43dbd5:	call   42baa0 <strcmp@plt+0x28308>
  43dbda:	jmp    43dad0 <strcmp@plt+0x3a338>
  43dbdf:	lea    rax,[rip+0x271da]        # 464dc0 <strcmp@plt+0x61628>
  43dbe6:	cmp    DWORD PTR [rax],0x2
  43dbe9:	jl     43dc25 <strcmp@plt+0x3a48d>
  43dbeb:	mov    rdx,QWORD PTR [r15]
  43dbee:	lea    rsi,[rip+0x11b73]        # 44f768 <strcmp@plt+0x4bfd0>
  43dbf5:	jmp    43e0a6 <strcmp@plt+0x3a90e>
  43dbfa:	lea    rax,[rip+0x271bf]        # 464dc0 <strcmp@plt+0x61628>
  43dc01:	cmp    DWORD PTR [rax],0x2
  43dc04:	jl     43dc25 <strcmp@plt+0x3a48d>
  43dc06:	mov    rdx,QWORD PTR [r15]
  43dc09:	lea    rsi,[rip+0x11bc6]        # 44f7d6 <strcmp@plt+0x4c03e>
  43dc10:	jmp    43e0a6 <strcmp@plt+0x3a90e>
  43dc15:	lea    rax,[rip+0x271a4]        # 464dc0 <strcmp@plt+0x61628>
  43dc1c:	cmp    DWORD PTR [rax],0x2
  43dc1f:	jge    43e09c <strcmp@plt+0x3a904>
  43dc25:	xor    r15d,r15d
  43dc28:	jmp    43e0b5 <strcmp@plt+0x3a91d>
  43dc2d:	lea    rsi,[rip+0x11b59]        # 44f78d <strcmp@plt+0x4bff5>
  43dc34:	mov    edi,0x3
  43dc39:	xor    eax,eax
  43dc3b:	call   42e520 <strcmp@plt+0x2ad88>
  43dc40:	call   42b980 <strcmp@plt+0x281e8>
  43dc45:	mov    rbp,rax
  43dc48:	mov    rbx,QWORD PTR [rsp+0x18]
  43dc4d:	mov    rax,QWORD PTR [rbx+0x70]
  43dc51:	mov    rax,QWORD PTR [rax]
  43dc54:	mov    rdi,QWORD PTR [rax]
  43dc57:	mov    rsi,rbp
  43dc5a:	call   42baa0 <strcmp@plt+0x28308>
  43dc5f:	mov    rax,QWORD PTR [rbx+0x70]
  43dc63:	mov    rax,QWORD PTR [rax]
  43dc66:	mov    rdi,QWORD PTR [rax+0x8]
  43dc6a:	mov    QWORD PTR [rsp+0x10],rbp
  43dc6f:	mov    rsi,rbp
  43dc72:	call   42baa0 <strcmp@plt+0x28308>
  43dc77:	mov    rax,QWORD PTR [rbx+0x70]
  43dc7b:	mov    rcx,QWORD PTR [rax]
  43dc7e:	mov    rdx,QWORD PTR [rcx+0x10]
  43dc82:	mov    rdx,QWORD PTR [rdx]
  43dc85:	cmp    DWORD PTR [rdx],0x0
  43dc88:	mov    QWORD PTR [rsp+0x30],r12
  43dc8d:	je     43dceb <strcmp@plt+0x3a553>
  43dc8f:	xor    ebx,ebx
  43dc91:	mov    r14d,0x3
  43dc97:	xor    ebp,ebp
  43dc99:	jmp    43dcb3 <strcmp@plt+0x3a51b>
  43dc9b:	nop    DWORD PTR [rax+rax*1+0x0]
  43dca0:	inc    ebp
  43dca2:	mov    rcx,QWORD PTR [rax]
  43dca5:	mov    rdx,QWORD PTR [rcx+0x10]
  43dca9:	mov    rdx,QWORD PTR [rdx]
  43dcac:	add    ebx,0x2
  43dcaf:	cmp    ebp,DWORD PTR [rdx]
  43dcb1:	je     43dceb <strcmp@plt+0x3a553>
  43dcb3:	mov    rcx,QWORD PTR [rdx+0x10]
  43dcb7:	mov    esi,ebp
  43dcb9:	shr    esi,0x4
  43dcbc:	mov    edi,ebx
  43dcbe:	and    dil,0x1e
  43dcc2:	shlx   edi,r14d,edi
  43dcc7:	test   DWORD PTR [rcx+rsi*4],edi
  43dcca:	jne    43dca0 <strcmp@plt+0x3a508>
  43dccc:	mov    rax,QWORD PTR [rdx+0x20]
  43dcd0:	mov    ecx,ebp
  43dcd2:	mov    rdi,QWORD PTR [rax+rcx*8]
  43dcd6:	mov    rsi,QWORD PTR [rsp+0x10]
  43dcdb:	call   42baa0 <strcmp@plt+0x28308>
  43dce0:	mov    rax,QWORD PTR [rsp+0x18]
  43dce5:	mov    rax,QWORD PTR [rax+0x70]
  43dce9:	jmp    43dca0 <strcmp@plt+0x3a508>
  43dceb:	mov    rdx,QWORD PTR [rcx+0x18]
  43dcef:	mov    rdx,QWORD PTR [rdx]
  43dcf2:	cmp    DWORD PTR [rdx],0x0
  43dcf5:	je     43dd5b <strcmp@plt+0x3a5c3>
  43dcf7:	xor    ebx,ebx
  43dcf9:	mov    r14d,0x3
  43dcff:	xor    ebp,ebp
  43dd01:	jmp    43dd23 <strcmp@plt+0x3a58b>
  43dd03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43dd0d:	nop    DWORD PTR [rax]
  43dd10:	inc    ebp
  43dd12:	mov    rcx,QWORD PTR [rax]
  43dd15:	mov    rdx,QWORD PTR [rcx+0x18]
  43dd19:	mov    rdx,QWORD PTR [rdx]
  43dd1c:	add    ebx,0x2
  43dd1f:	cmp    ebp,DWORD PTR [rdx]
  43dd21:	je     43dd5b <strcmp@plt+0x3a5c3>
  43dd23:	mov    rcx,QWORD PTR [rdx+0x10]
  43dd27:	mov    esi,ebp
  43dd29:	shr    esi,0x4
  43dd2c:	mov    edi,ebx
  43dd2e:	and    dil,0x1e
  43dd32:	shlx   edi,r14d,edi
  43dd37:	test   DWORD PTR [rcx+rsi*4],edi
  43dd3a:	jne    43dd10 <strcmp@plt+0x3a578>
  43dd3c:	mov    rax,QWORD PTR [rdx+0x20]
  43dd40:	mov    ecx,ebp
  43dd42:	mov    rdi,QWORD PTR [rax+rcx*8]
  43dd46:	mov    rsi,QWORD PTR [rsp+0x10]
  43dd4b:	call   42baa0 <strcmp@plt+0x28308>
  43dd50:	mov    rax,QWORD PTR [rsp+0x18]
  43dd55:	mov    rax,QWORD PTR [rax+0x70]
  43dd59:	jmp    43dd10 <strcmp@plt+0x3a578>
  43dd5b:	mov    rdi,QWORD PTR [rcx+0x20]
  43dd5f:	mov    rbx,QWORD PTR [rsp+0x10]
  43dd64:	mov    rsi,rbx
  43dd67:	call   42baa0 <strcmp@plt+0x28308>
  43dd6c:	mov    rax,QWORD PTR [rsp+0x18]
  43dd71:	mov    rax,QWORD PTR [rax+0x70]
  43dd75:	mov    rax,QWORD PTR [rax]
  43dd78:	mov    rdi,QWORD PTR [rax+0x20]
  43dd7c:	mov    rsi,rbx
  43dd7f:	call   42baa0 <strcmp@plt+0x28308>
  43dd84:	mov    rax,QWORD PTR [rbx+0x8]
  43dd88:	cmp    rax,rbx
  43dd8b:	jne    43ddb4 <strcmp@plt+0x3a61c>
  43dd8d:	jmp    43decd <strcmp@plt+0x3a735>
  43dd92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43dd9c:	nop    DWORD PTR [rax+0x0]
  43dda0:	mov    rax,QWORD PTR [rsp+0x40]
  43dda5:	mov    rax,QWORD PTR [rax+0x8]
  43dda9:	cmp    rax,QWORD PTR [rsp+0x10]
  43ddae:	je     43decd <strcmp@plt+0x3a735>
  43ddb4:	mov    QWORD PTR [rsp+0x40],rax
  43ddb9:	mov    rax,QWORD PTR [rax+0x10]
  43ddbd:	mov    r14,QWORD PTR [rax]
  43ddc0:	test   r14,r14
  43ddc3:	je     43dda0 <strcmp@plt+0x3a608>
  43ddc5:	xor    ebp,ebp
  43ddc7:	cmp    QWORD PTR [r14+0x8],0x0
  43ddcc:	jne    43ddff <strcmp@plt+0x3a667>
  43ddce:	jmp    43de90 <strcmp@plt+0x3a6f8>
  43ddd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43dddd:	nop    DWORD PTR [rax]
  43dde0:	test   rcx,rcx
  43dde3:	je     43deb7 <strcmp@plt+0x3a71f>
  43dde9:	mov    rax,rcx
  43ddec:	mov    r14,rax
  43ddef:	test   rax,rax
  43ddf2:	je     43dda0 <strcmp@plt+0x3a608>
  43ddf4:	cmp    QWORD PTR [r14+0x8],0x0
  43ddf9:	je     43de90 <strcmp@plt+0x3a6f8>
  43ddff:	mov    rax,QWORD PTR [r14+0x28]
  43de03:	mov    r12,QWORD PTR [rax]
  43de06:	test   r12,r12
  43de09:	je     43de90 <strcmp@plt+0x3a6f8>
  43de0f:	xor    r15d,r15d
  43de12:	cmp    QWORD PTR [r12+0x8],0x0
  43de18:	jne    43de38 <strcmp@plt+0x3a6a0>
  43de1a:	jmp    43de56 <strcmp@plt+0x3a6be>
  43de1c:	nop    DWORD PTR [rax+0x0]
  43de20:	test   rcx,rcx
  43de23:	je     43de77 <strcmp@plt+0x3a6df>
  43de25:	mov    rax,rcx
  43de28:	mov    r12,rax
  43de2b:	test   rax,rax
  43de2e:	je     43de90 <strcmp@plt+0x3a6f8>
  43de30:	cmp    QWORD PTR [r12+0x8],0x0
  43de36:	je     43de56 <strcmp@plt+0x3a6be>
  43de38:	mov    rdi,QWORD PTR [r12+0x28]
  43de3d:	test   rdi,rdi
  43de40:	je     43de56 <strcmp@plt+0x3a6be>
  43de42:	mov    rbx,QWORD PTR [r13+0x0]
  43de46:	call   4317d0 <strcmp@plt+0x2e038>
  43de4b:	mov    rdi,rbx
  43de4e:	mov    rsi,rax
  43de51:	call   4077b0 <strcmp@plt+0x4018>
  43de56:	mov    rax,QWORD PTR [r12+0x10]
  43de5b:	mov    rcx,QWORD PTR [r12+0x18]
  43de60:	test   rax,rax
  43de63:	je     43de20 <strcmp@plt+0x3a688>
  43de65:	test   rcx,rcx
  43de68:	je     43de28 <strcmp@plt+0x3a690>
  43de6a:	mov    QWORD PTR [rsp+r15*8+0x460],rcx
  43de72:	inc    r15
  43de75:	jmp    43de28 <strcmp@plt+0x3a690>
  43de77:	test   r15,r15
  43de7a:	je     43de90 <strcmp@plt+0x3a6f8>
  43de7c:	mov    rax,QWORD PTR [rsp+r15*8+0x458]
  43de84:	dec    r15
  43de87:	jmp    43de28 <strcmp@plt+0x3a690>
  43de89:	nop    DWORD PTR [rax+0x0]
  43de90:	mov    rax,QWORD PTR [r14+0x10]
  43de94:	mov    rcx,QWORD PTR [r14+0x18]
  43de98:	test   rax,rax
  43de9b:	je     43dde0 <strcmp@plt+0x3a648>
  43dea1:	test   rcx,rcx
  43dea4:	je     43ddec <strcmp@plt+0x3a654>
  43deaa:	mov    QWORD PTR [rsp+rbp*8+0x50],rcx
  43deaf:	inc    rbp
  43deb2:	jmp    43ddec <strcmp@plt+0x3a654>
  43deb7:	test   rbp,rbp
  43deba:	je     43dda0 <strcmp@plt+0x3a608>
  43dec0:	mov    rax,QWORD PTR [rsp+rbp*8+0x48]
  43dec5:	dec    rbp
  43dec8:	jmp    43ddec <strcmp@plt+0x3a654>
  43decd:	mov    rdi,QWORD PTR [rsp+0x10]
  43ded2:	call   42bff0 <strcmp@plt+0x28858>
  43ded7:	mov    rbx,QWORD PTR [rsp+0x18]
  43dedc:	mov    rdi,QWORD PTR [rbx+0x70]
  43dee0:	call   407bc0 <strcmp@plt+0x4428>
  43dee5:	xor    eax,eax
  43dee7:	call   407b80 <strcmp@plt+0x43e8>
  43deec:	mov    QWORD PTR [rbx+0x70],rax
  43def0:	mov    rax,QWORD PTR [rsp+0x28]
  43def5:	mov    rbx,QWORD PTR [rax+0x8]
  43def9:	cmp    rbx,rax
  43defc:	lea    r14,[rip+0x26ebd]        # 464dc0 <strcmp@plt+0x61628>
  43df03:	je     43df85 <strcmp@plt+0x3a7ed>
  43df09:	lea    r15,[rip+0x11971]        # 44f881 <strcmp@plt+0x4c0e9>
  43df10:	mov    rbp,QWORD PTR [rbx+0x10]
  43df14:	mov    rdi,rbp
  43df17:	mov    rsi,QWORD PTR [rsp+0x18]
  43df1c:	call   4068d0 <strcmp@plt+0x3138>
  43df21:	mov    ecx,DWORD PTR [r14]
  43df24:	cmp    eax,0x1
  43df27:	jne    43e071 <strcmp@plt+0x3a8d9>
  43df2d:	test   ecx,ecx
  43df2f:	jle    43df53 <strcmp@plt+0x3a7bb>
  43df31:	mov    rdi,rbp
  43df34:	call   431840 <strcmp@plt+0x2e0a8>
  43df39:	mov    rdi,rax
  43df3c:	call   422e20 <strcmp@plt+0x1f688>
  43df41:	mov    edi,0x5
  43df46:	mov    rsi,r15
  43df49:	mov    rdx,rax
  43df4c:	xor    eax,eax
  43df4e:	call   42e520 <strcmp@plt+0x2ad88>
  43df53:	mov    r14,QWORD PTR [r13+0x0]
  43df57:	mov    rdi,rbp
  43df5a:	call   4317d0 <strcmp@plt+0x2e038>
  43df5f:	mov    rdi,r14
  43df62:	mov    rsi,rax
  43df65:	call   407760 <strcmp@plt+0x3fc8>
  43df6a:	cmp    eax,0x1
  43df6d:	jne    43e07b <strcmp@plt+0x3a8e3>
  43df73:	mov    rbx,QWORD PTR [rbx+0x8]
  43df77:	cmp    rbx,QWORD PTR [rsp+0x28]
  43df7c:	lea    r14,[rip+0x26e3d]        # 464dc0 <strcmp@plt+0x61628>
  43df83:	jne    43df10 <strcmp@plt+0x3a778>
  43df85:	mov    rax,QWORD PTR [r13+0x0]
  43df89:	mov    rdi,QWORD PTR [rax+0x10]
  43df8d:	call   407420 <strcmp@plt+0x3c88>
  43df92:	cmp    DWORD PTR [r14],0x0
  43df96:	jle    43dfcb <strcmp@plt+0x3a833>
  43df98:	lea    rsi,[rip+0x11945]        # 44f8e4 <strcmp@plt+0x4c14c>
  43df9f:	mov    edi,0x5
  43dfa4:	xor    eax,eax
  43dfa6:	call   42e520 <strcmp@plt+0x2ad88>
  43dfab:	cmp    DWORD PTR [r14],0x2
  43dfaf:	jl     43dfcb <strcmp@plt+0x3a833>
  43dfb1:	lea    rsi,[rip+0x11951]        # 44f909 <strcmp@plt+0x4c171>
  43dfb8:	lea    rdx,[rip+0x1196d]        # 44f92c <strcmp@plt+0x4c194>
  43dfbf:	mov    edi,0x6
  43dfc4:	xor    eax,eax
  43dfc6:	call   42e520 <strcmp@plt+0x2ad88>
  43dfcb:	mov    rbp,QWORD PTR [rsp+0x18]
  43dfd0:	mov    rdi,QWORD PTR [rbp+0x70]
  43dfd4:	mov    esi,0x5
  43dfd9:	call   408370 <strcmp@plt+0x4bd8>
  43dfde:	mov    rdi,rbp
  43dfe1:	call   40ee60 <strcmp@plt+0xb6c8>
  43dfe6:	mov    r12,QWORD PTR [rsp]
  43dfea:	mov    rbx,QWORD PTR [r12+0x8]
  43dfef:	cmp    rbx,r12
  43dff2:	mov    r14,QWORD PTR [rsp+0x8]
  43dff7:	mov    r15,QWORD PTR [rsp+0x48]
  43dffc:	je     43e015 <strcmp@plt+0x3a87d>
  43dffe:	xchg   ax,ax
  43e000:	mov    rsi,QWORD PTR [rbx+0x10]
  43e004:	mov    rdi,rbp
  43e007:	call   40f490 <strcmp@plt+0xbcf8>
  43e00c:	mov    rbx,QWORD PTR [rbx+0x8]
  43e010:	cmp    rbx,r12
  43e013:	jne    43e000 <strcmp@plt+0x3a868>
  43e015:	movzx  esi,BYTE PTR [r15]
  43e019:	movzx  edx,BYTE PTR [r15+0x1]
  43e01e:	movzx  ecx,BYTE PTR [r15+0x2]
  43e023:	lea    rdi,[rsp+0x50]
  43e028:	xor    r8d,r8d
  43e02b:	call   43b470 <strcmp@plt+0x37cd8>
  43e030:	mov    rsi,QWORD PTR [rsp+0x50]
  43e035:	mov    rdi,r14
  43e038:	mov    edx,eax
  43e03a:	xor    ecx,ecx
  43e03c:	call   43b5b0 <strcmp@plt+0x37e18>
  43e041:	mov    rdi,QWORD PTR [rsp+0x20]
  43e046:	call   42bff0 <strcmp@plt+0x28858>
  43e04b:	mov    rdi,r12
  43e04e:	call   42bff0 <strcmp@plt+0x28858>
  43e053:	mov    rdi,QWORD PTR [rsp+0x28]
  43e058:	call   42bff0 <strcmp@plt+0x28858>
  43e05d:	mov    rdi,QWORD PTR [rsp+0x30]
  43e062:	call   436460 <strcmp@plt+0x32cc8>
  43e067:	mov    ebx,0x1
  43e06c:	jmp    43e16a <strcmp@plt+0x3a9d2>
  43e071:	cmp    ecx,0x2
  43e074:	jge    43e0bc <strcmp@plt+0x3a924>
  43e076:	xor    r15d,r15d
  43e079:	jmp    43e0e5 <strcmp@plt+0x3a94d>
  43e07b:	mov    rdi,rbp
  43e07e:	call   431840 <strcmp@plt+0x2e0a8>
  43e083:	mov    rdi,rax
  43e086:	call   422e20 <strcmp@plt+0x1f688>
  43e08b:	lea    rsi,[rip+0x1181e]        # 44f8b0 <strcmp@plt+0x4c118>
  43e092:	xor    r15d,r15d
  43e095:	mov    edi,0x2
  43e09a:	jmp    43e0db <strcmp@plt+0x3a943>
  43e09c:	mov    rdx,QWORD PTR [r15]
  43e09f:	lea    rsi,[rip+0x11760]        # 44f806 <strcmp@plt+0x4c06e>
  43e0a6:	xor    r15d,r15d
  43e0a9:	mov    edi,0x6
  43e0ae:	xor    eax,eax
  43e0b0:	call   42e520 <strcmp@plt+0x2ad88>
  43e0b5:	mov    rbp,QWORD PTR [rsp+0x8]
  43e0ba:	jmp    43e0ef <strcmp@plt+0x3a957>
  43e0bc:	mov    rdi,rbp
  43e0bf:	call   431840 <strcmp@plt+0x2e0a8>
  43e0c4:	mov    rdi,rax
  43e0c7:	call   422e20 <strcmp@plt+0x1f688>
  43e0cc:	lea    rsi,[rip+0x1177b]        # 44f84e <strcmp@plt+0x4c0b6>
  43e0d3:	xor    r15d,r15d
  43e0d6:	mov    edi,0x6
  43e0db:	mov    rdx,rax
  43e0de:	xor    eax,eax
  43e0e0:	call   42e520 <strcmp@plt+0x2ad88>
  43e0e5:	mov    rbp,QWORD PTR [rsp+0x8]
  43e0ea:	mov    r12,QWORD PTR [rsp+0x30]
  43e0ef:	mov    rbx,QWORD PTR [rsp]
  43e0f3:	mov    rdi,QWORD PTR [rsp+0x20]
  43e0f8:	call   42bff0 <strcmp@plt+0x28858>
  43e0fd:	mov    rdi,rbx
  43e100:	call   42bff0 <strcmp@plt+0x28858>
  43e105:	mov    rdi,QWORD PTR [rsp+0x28]
  43e10a:	call   42bff0 <strcmp@plt+0x28858>
  43e10f:	mov    rdi,r12
  43e112:	call   436460 <strcmp@plt+0x32cc8>
  43e117:	test   r15,r15
  43e11a:	je     43e124 <strcmp@plt+0x3a98c>
  43e11c:	mov    rdi,r15
  43e11f:	call   403720 <xmlFreeDoc@plt>
  43e124:	mov    rax,QWORD PTR [rsp+0x48]
  43e129:	movzx  esi,BYTE PTR [rax]
  43e12c:	movzx  edx,BYTE PTR [rax+0x1]
  43e130:	movzx  ecx,BYTE PTR [rax+0x2]
  43e134:	lea    rdi,[rsp+0x50]
  43e139:	mov    r8d,0x1
  43e13f:	call   43b470 <strcmp@plt+0x37cd8>
  43e144:	mov    rsi,QWORD PTR [rsp+0x50]
  43e149:	xor    ebx,ebx
  43e14b:	mov    rdi,rbp
  43e14e:	mov    edx,eax
  43e150:	xor    ecx,ecx
  43e152:	call   43b5b0 <strcmp@plt+0x37e18>
  43e157:	lea    rsi,[rip+0x117e1]        # 44f93f <strcmp@plt+0x4c1a7>
  43e15e:	mov    edi,0x3
  43e163:	xor    eax,eax
  43e165:	call   42e520 <strcmp@plt+0x2ad88>
  43e16a:	mov    eax,ebx
  43e16c:	add    rsp,0x868
  43e173:	pop    rbx
  43e174:	pop    r12
  43e176:	pop    r13
  43e178:	pop    r14
  43e17a:	pop    r15
  43e17c:	pop    rbp
  43e17d:	ret    
  43e17e:	xchg   ax,ax
  43e180:	push   rbp
  43e181:	push   r15
  43e183:	push   r14
  43e185:	push   r13
  43e187:	push   r12
  43e189:	push   rbx
  43e18a:	sub    rsp,0x848
  43e191:	mov    QWORD PTR [rsp+0x18],rsi
  43e196:	mov    QWORD PTR [rsp+0x20],rdi
  43e19b:	lea    rax,[rip+0x26c1e]        # 464dc0 <strcmp@plt+0x61628>
  43e1a2:	cmp    DWORD PTR [rax],0x2
  43e1a5:	jl     43e1ba <strcmp@plt+0x3aa22>
  43e1a7:	lea    rsi,[rip+0x117cb]        # 44f979 <strcmp@plt+0x4c1e1>
  43e1ae:	mov    edi,0x6
  43e1b3:	xor    eax,eax
  43e1b5:	call   42e520 <strcmp@plt+0x2ad88>
  43e1ba:	lea    rbp,[rip+0x323e7]        # 4705a8 <strcmp@plt+0x6ce10>
  43e1c1:	mov    rdi,QWORD PTR [rbp+0x0]
  43e1c5:	call   40e830 <strcmp@plt+0xb098>
  43e1ca:	mov    r12,rax
  43e1cd:	call   42b980 <strcmp@plt+0x281e8>
  43e1d2:	mov    rbx,rax
  43e1d5:	mov    rax,QWORD PTR [r12+0x70]
  43e1da:	mov    rax,QWORD PTR [rax]
  43e1dd:	mov    rdi,QWORD PTR [rax]
  43e1e0:	mov    rsi,rbx
  43e1e3:	call   42baa0 <strcmp@plt+0x28308>
  43e1e8:	mov    rax,QWORD PTR [r12+0x70]
  43e1ed:	mov    rax,QWORD PTR [rax]
  43e1f0:	mov    rdi,QWORD PTR [rax+0x8]
  43e1f4:	mov    QWORD PTR [rsp+0x8],rbx
  43e1f9:	mov    rsi,rbx
  43e1fc:	call   42baa0 <strcmp@plt+0x28308>
  43e201:	mov    rax,QWORD PTR [r12+0x70]
  43e206:	mov    rcx,QWORD PTR [rax]
  43e209:	mov    rdx,QWORD PTR [rcx+0x10]
  43e20d:	mov    rdx,QWORD PTR [rdx]
  43e210:	cmp    DWORD PTR [rdx],0x0
  43e213:	je     43e279 <strcmp@plt+0x3aae1>
  43e215:	xor    r15d,r15d
  43e218:	mov    r14d,0x3
  43e21e:	xor    ebx,ebx
  43e220:	jmp    43e244 <strcmp@plt+0x3aaac>
  43e222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e22c:	nop    DWORD PTR [rax+0x0]
  43e230:	inc    ebx
  43e232:	mov    rcx,QWORD PTR [rax]
  43e235:	mov    rdx,QWORD PTR [rcx+0x10]
  43e239:	mov    rdx,QWORD PTR [rdx]
  43e23c:	add    r15d,0x2
  43e240:	cmp    ebx,DWORD PTR [rdx]
  43e242:	je     43e279 <strcmp@plt+0x3aae1>
  43e244:	mov    rcx,QWORD PTR [rdx+0x10]
  43e248:	mov    esi,ebx
  43e24a:	shr    esi,0x4
  43e24d:	mov    edi,r15d
  43e250:	and    dil,0x1e
  43e254:	shlx   edi,r14d,edi
  43e259:	test   DWORD PTR [rcx+rsi*4],edi
  43e25c:	jne    43e230 <strcmp@plt+0x3aa98>
  43e25e:	mov    rax,QWORD PTR [rdx+0x20]
  43e262:	mov    ecx,ebx
  43e264:	mov    rdi,QWORD PTR [rax+rcx*8]
  43e268:	mov    rsi,QWORD PTR [rsp+0x8]
  43e26d:	call   42baa0 <strcmp@plt+0x28308>
  43e272:	mov    rax,QWORD PTR [r12+0x70]
  43e277:	jmp    43e230 <strcmp@plt+0x3aa98>
  43e279:	mov    rdx,QWORD PTR [rcx+0x18]
  43e27d:	mov    rdx,QWORD PTR [rdx]
  43e280:	cmp    DWORD PTR [rdx],0x0
  43e283:	je     43e2e9 <strcmp@plt+0x3ab51>
  43e285:	xor    r15d,r15d
  43e288:	mov    r14d,0x3
  43e28e:	xor    ebx,ebx
  43e290:	jmp    43e2b4 <strcmp@plt+0x3ab1c>
  43e292:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e29c:	nop    DWORD PTR [rax+0x0]
  43e2a0:	inc    ebx
  43e2a2:	mov    rcx,QWORD PTR [rax]
  43e2a5:	mov    rdx,QWORD PTR [rcx+0x18]
  43e2a9:	mov    rdx,QWORD PTR [rdx]
  43e2ac:	add    r15d,0x2
  43e2b0:	cmp    ebx,DWORD PTR [rdx]
  43e2b2:	je     43e2e9 <strcmp@plt+0x3ab51>
  43e2b4:	mov    rcx,QWORD PTR [rdx+0x10]
  43e2b8:	mov    esi,ebx
  43e2ba:	shr    esi,0x4
  43e2bd:	mov    edi,r15d
  43e2c0:	and    dil,0x1e
  43e2c4:	shlx   edi,r14d,edi
  43e2c9:	test   DWORD PTR [rcx+rsi*4],edi
  43e2cc:	jne    43e2a0 <strcmp@plt+0x3ab08>
  43e2ce:	mov    rax,QWORD PTR [rdx+0x20]
  43e2d2:	mov    ecx,ebx
  43e2d4:	mov    rdi,QWORD PTR [rax+rcx*8]
  43e2d8:	mov    rsi,QWORD PTR [rsp+0x8]
  43e2dd:	call   42baa0 <strcmp@plt+0x28308>
  43e2e2:	mov    rax,QWORD PTR [r12+0x70]
  43e2e7:	jmp    43e2a0 <strcmp@plt+0x3ab08>
  43e2e9:	mov    rdi,QWORD PTR [rcx+0x20]
  43e2ed:	mov    rbx,QWORD PTR [rsp+0x8]
  43e2f2:	mov    rsi,rbx
  43e2f5:	call   42baa0 <strcmp@plt+0x28308>
  43e2fa:	mov    QWORD PTR [rsp+0x10],r12
  43e2ff:	mov    rax,QWORD PTR [r12+0x70]
  43e304:	mov    rax,QWORD PTR [rax]
  43e307:	mov    rdi,QWORD PTR [rax+0x20]
  43e30b:	mov    rsi,rbx
  43e30e:	call   42baa0 <strcmp@plt+0x28308>
  43e313:	mov    rax,QWORD PTR [rbx+0x8]
  43e317:	cmp    rax,rbx
  43e31a:	jne    43e344 <strcmp@plt+0x3abac>
  43e31c:	jmp    43e45f <strcmp@plt+0x3acc7>
  43e321:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e32b:	nop    DWORD PTR [rax+rax*1+0x0]
  43e330:	mov    rax,QWORD PTR [rsp+0x28]
  43e335:	mov    rax,QWORD PTR [rax+0x8]
  43e339:	cmp    rax,QWORD PTR [rsp+0x8]
  43e33e:	je     43e45f <strcmp@plt+0x3acc7>
  43e344:	mov    QWORD PTR [rsp+0x28],rax
  43e349:	mov    rax,QWORD PTR [rax+0x10]
  43e34d:	mov    r12,QWORD PTR [rax]
  43e350:	test   r12,r12
  43e353:	je     43e330 <strcmp@plt+0x3ab98>
  43e355:	xor    r15d,r15d
  43e358:	cmp    QWORD PTR [r12+0x8],0x0
  43e35e:	jne    43e390 <strcmp@plt+0x3abf8>
  43e360:	jmp    43e420 <strcmp@plt+0x3ac88>
  43e365:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e36f:	nop
  43e370:	test   rcx,rcx
  43e373:	je     43e449 <strcmp@plt+0x3acb1>
  43e379:	mov    rax,rcx
  43e37c:	mov    r12,rax
  43e37f:	test   rax,rax
  43e382:	je     43e330 <strcmp@plt+0x3ab98>
  43e384:	cmp    QWORD PTR [r12+0x8],0x0
  43e38a:	je     43e420 <strcmp@plt+0x3ac88>
  43e390:	mov    rax,QWORD PTR [r12+0x28]
  43e395:	mov    r14,QWORD PTR [rax]
  43e398:	test   r14,r14
  43e39b:	je     43e420 <strcmp@plt+0x3ac88>
  43e3a1:	xor    r13d,r13d
  43e3a4:	cmp    QWORD PTR [r14+0x8],0x0
  43e3a9:	jne    43e3c7 <strcmp@plt+0x3ac2f>
  43e3ab:	jmp    43e3e4 <strcmp@plt+0x3ac4c>
  43e3ad:	nop    DWORD PTR [rax]
  43e3b0:	test   rcx,rcx
  43e3b3:	je     43e403 <strcmp@plt+0x3ac6b>
  43e3b5:	mov    rax,rcx
  43e3b8:	mov    r14,rax
  43e3bb:	test   rax,rax
  43e3be:	je     43e420 <strcmp@plt+0x3ac88>
  43e3c0:	cmp    QWORD PTR [r14+0x8],0x0
  43e3c5:	je     43e3e4 <strcmp@plt+0x3ac4c>
  43e3c7:	mov    rdi,QWORD PTR [r14+0x28]
  43e3cb:	test   rdi,rdi
  43e3ce:	je     43e3e4 <strcmp@plt+0x3ac4c>
  43e3d0:	mov    rbx,QWORD PTR [rbp+0x0]
  43e3d4:	call   4317d0 <strcmp@plt+0x2e038>
  43e3d9:	mov    rdi,rbx
  43e3dc:	mov    rsi,rax
  43e3df:	call   4077b0 <strcmp@plt+0x4018>
  43e3e4:	mov    rax,QWORD PTR [r14+0x10]
  43e3e8:	mov    rcx,QWORD PTR [r14+0x18]
  43e3ec:	test   rax,rax
  43e3ef:	je     43e3b0 <strcmp@plt+0x3ac18>
  43e3f1:	test   rcx,rcx
  43e3f4:	je     43e3b8 <strcmp@plt+0x3ac20>
  43e3f6:	mov    QWORD PTR [rsp+r13*8+0x440],rcx
  43e3fe:	inc    r13
  43e401:	jmp    43e3b8 <strcmp@plt+0x3ac20>
  43e403:	test   r13,r13
  43e406:	je     43e420 <strcmp@plt+0x3ac88>
  43e408:	mov    rax,QWORD PTR [rsp+r13*8+0x438]
  43e410:	dec    r13
  43e413:	jmp    43e3b8 <strcmp@plt+0x3ac20>
  43e415:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e41f:	nop
  43e420:	mov    rax,QWORD PTR [r12+0x10]
  43e425:	mov    rcx,QWORD PTR [r12+0x18]
  43e42a:	test   rax,rax
  43e42d:	je     43e370 <strcmp@plt+0x3abd8>
  43e433:	test   rcx,rcx
  43e436:	je     43e37c <strcmp@plt+0x3abe4>
  43e43c:	mov    QWORD PTR [rsp+r15*8+0x30],rcx
  43e441:	inc    r15
  43e444:	jmp    43e37c <strcmp@plt+0x3abe4>
  43e449:	test   r15,r15
  43e44c:	je     43e330 <strcmp@plt+0x3ab98>
  43e452:	mov    rax,QWORD PTR [rsp+r15*8+0x28]
  43e457:	dec    r15
  43e45a:	jmp    43e37c <strcmp@plt+0x3abe4>
  43e45f:	mov    rdi,QWORD PTR [rsp+0x8]
  43e464:	call   42bff0 <strcmp@plt+0x28858>
  43e469:	mov    rbx,QWORD PTR [rsp+0x10]
  43e46e:	mov    rdi,QWORD PTR [rbx+0x70]
  43e472:	call   407bc0 <strcmp@plt+0x4428>
  43e477:	xor    eax,eax
  43e479:	call   407b80 <strcmp@plt+0x43e8>
  43e47e:	mov    QWORD PTR [rbx+0x70],rax
  43e482:	mov    rax,QWORD PTR [rsp+0x18]
  43e487:	movzx  esi,BYTE PTR [rax]
  43e48a:	movzx  edx,BYTE PTR [rax+0x1]
  43e48e:	movzx  ecx,BYTE PTR [rax+0x2]
  43e492:	lea    rdi,[rsp+0x30]
  43e497:	xor    r8d,r8d
  43e49a:	call   43b470 <strcmp@plt+0x37cd8>
  43e49f:	mov    rsi,QWORD PTR [rsp+0x30]
  43e4a4:	mov    rdi,QWORD PTR [rsp+0x20]
  43e4a9:	mov    edx,eax
  43e4ab:	xor    ecx,ecx
  43e4ad:	call   43b5b0 <strcmp@plt+0x37e18>
  43e4b2:	lea    rax,[rip+0x26907]        # 464dc0 <strcmp@plt+0x61628>
  43e4b9:	cmp    DWORD PTR [rax],0x0
  43e4bc:	jle    43e4d1 <strcmp@plt+0x3ad39>
  43e4be:	lea    rsi,[rip+0x114e2]        # 44f9a7 <strcmp@plt+0x4c20f>
  43e4c5:	mov    edi,0x5
  43e4ca:	xor    eax,eax
  43e4cc:	call   42e520 <strcmp@plt+0x2ad88>
  43e4d1:	mov    eax,0x1
  43e4d6:	add    rsp,0x848
  43e4dd:	pop    rbx
  43e4de:	pop    r12
  43e4e0:	pop    r13
  43e4e2:	pop    r14
  43e4e4:	pop    r15
  43e4e6:	pop    rbp
  43e4e7:	ret    
  43e4e8:	nop    DWORD PTR [rax+rax*1+0x0]
  43e4f0:	push   rbp
  43e4f1:	push   r15
  43e4f3:	push   r14
  43e4f5:	push   r13
  43e4f7:	push   r12
  43e4f9:	push   rbx
  43e4fa:	sub    rsp,0x28
  43e4fe:	mov    rbp,rdx
  43e501:	mov    rbx,rsi
  43e504:	mov    QWORD PTR [rsp+0x8],rdi
  43e509:	lea    rax,[rip+0x268b0]        # 464dc0 <strcmp@plt+0x61628>
  43e510:	cmp    DWORD PTR [rax],0x0
  43e513:	jle    43e528 <strcmp@plt+0x3ad90>
  43e515:	lea    rsi,[rip+0x114b3]        # 44f9cf <strcmp@plt+0x4c237>
  43e51c:	mov    edi,0x5
  43e521:	xor    eax,eax
  43e523:	call   42e520 <strcmp@plt+0x2ad88>
  43e528:	lea    rax,[rip+0x32079]        # 4705a8 <strcmp@plt+0x6ce10>
  43e52f:	mov    rdi,QWORD PTR [rax]
  43e532:	call   40e830 <strcmp@plt+0xb098>
  43e537:	mov    r12,rax
  43e53a:	mov    rdi,QWORD PTR [rip+0x25a5f]        # 463fa0 <strcmp@plt+0x60808>
  43e541:	call   42b9b0 <strcmp@plt+0x28218>
  43e546:	mov    r13,rax
  43e549:	mov    QWORD PTR [rsp],rbx
  43e54d:	mov    esi,DWORD PTR [rbx+0x4]
  43e550:	lea    rcx,[rip+0x10ebd]        # 44f414 <strcmp@plt+0x4bc7c>
  43e557:	xor    ebx,ebx
  43e559:	mov    rdi,rbp
  43e55c:	xor    edx,edx
  43e55e:	mov    r8d,0x2160
  43e564:	call   403030 <xmlReadMemory@plt>
  43e569:	mov    r15,rax
  43e56c:	mov    rdi,rax
  43e56f:	call   403600 <xmlDocGetRootElement@plt>
  43e574:	mov    r14,rax
  43e577:	lea    rdi,[rip+0x1147a]        # 44f9f8 <strcmp@plt+0x4c260>
  43e57e:	call   4035c0 <xmlCharStrdup@plt>
  43e583:	mov    rbp,rax
  43e586:	mov    rdi,r14
  43e589:	call   403310 <xmlFirstElementChild@plt>
  43e58e:	test   rax,rax
  43e591:	je     43e5c2 <strcmp@plt+0x3ae2a>
  43e593:	mov    rbx,rax
  43e596:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e5a0:	mov    rdi,QWORD PTR [rbx+0x10]
  43e5a4:	mov    rsi,rbp
  43e5a7:	call   403780 <xmlStrEqual@plt>
  43e5ac:	test   eax,eax
  43e5ae:	jne    43e5c2 <strcmp@plt+0x3ae2a>
  43e5b0:	mov    rdi,rbx
  43e5b3:	call   403210 <xmlNextElementSibling@plt>
  43e5b8:	mov    rbx,rax
  43e5bb:	test   rax,rax
  43e5be:	jne    43e5a0 <strcmp@plt+0x3ae08>
  43e5c0:	xor    ebx,ebx
  43e5c2:	mov    rdi,rbp
  43e5c5:	call   403790 <free@plt>
  43e5ca:	lea    rdi,[rip+0x11432]        # 44fa03 <strcmp@plt+0x4c26b>
  43e5d1:	call   4035c0 <xmlCharStrdup@plt>
  43e5d6:	mov    r14,rax
  43e5d9:	mov    rdi,rbx
  43e5dc:	call   403310 <xmlFirstElementChild@plt>
  43e5e1:	test   rax,rax
  43e5e4:	je     43e610 <strcmp@plt+0x3ae78>
  43e5e6:	mov    rbp,rax
  43e5e9:	nop    DWORD PTR [rax+0x0]
  43e5f0:	mov    rdi,QWORD PTR [rbp+0x10]
  43e5f4:	mov    rsi,r14
  43e5f7:	call   403780 <xmlStrEqual@plt>
  43e5fc:	test   eax,eax
  43e5fe:	jne    43e61d <strcmp@plt+0x3ae85>
  43e600:	mov    rdi,rbp
  43e603:	call   403210 <xmlNextElementSibling@plt>
  43e608:	mov    rbp,rax
  43e60b:	test   rax,rax
  43e60e:	jne    43e5f0 <strcmp@plt+0x3ae58>
  43e610:	mov    rdi,r14
  43e613:	call   403790 <free@plt>
  43e618:	jmp    43e785 <strcmp@plt+0x3afed>
  43e61d:	mov    rdi,r14
  43e620:	call   403790 <free@plt>
  43e625:	lea    rdi,[rip+0x113e1]        # 44fa0d <strcmp@plt+0x4c275>
  43e62c:	call   4035c0 <xmlCharStrdup@plt>
  43e631:	mov    rbx,rax
  43e634:	mov    rdi,rbp
  43e637:	call   403310 <xmlFirstElementChild@plt>
  43e63c:	test   rax,rax
  43e63f:	je     43e670 <strcmp@plt+0x3aed8>
  43e641:	mov    r14,rax
  43e644:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e64e:	xchg   ax,ax
  43e650:	mov    rdi,QWORD PTR [r14+0x10]
  43e654:	mov    rsi,rbx
  43e657:	call   403780 <xmlStrEqual@plt>
  43e65c:	test   eax,eax
  43e65e:	jne    43e67d <strcmp@plt+0x3aee5>
  43e660:	mov    rdi,r14
  43e663:	call   403210 <xmlNextElementSibling@plt>
  43e668:	mov    r14,rax
  43e66b:	test   rax,rax
  43e66e:	jne    43e650 <strcmp@plt+0x3aeb8>
  43e670:	mov    rdi,rbx
  43e673:	call   403790 <free@plt>
  43e678:	jmp    43e750 <strcmp@plt+0x3afb8>
  43e67d:	mov    QWORD PTR [rsp+0x18],r15
  43e682:	mov    rdi,rbx
  43e685:	call   403790 <free@plt>
  43e68a:	mov    rdi,r14
  43e68d:	call   403440 <xmlNodeGetContent@plt>
  43e692:	mov    rbx,rax
  43e695:	xor    eax,eax
  43e697:	call   422c80 <strcmp@plt+0x1f4e8>
  43e69c:	mov    r15,rax
  43e69f:	mov    rdi,rbx
  43e6a2:	mov    rsi,rax
  43e6a5:	call   423940 <strcmp@plt+0x201a8>
  43e6aa:	cmp    eax,0x1
  43e6ad:	jne    43e8ef <strcmp@plt+0x3b157>
  43e6b3:	mov    QWORD PTR [rsp+0x20],rbx
  43e6b8:	lea    rax,[rip+0x31e51]        # 470510 <strcmp@plt+0x6cd78>
  43e6bf:	mov    ebx,DWORD PTR [rax]
  43e6c1:	test   ebx,ebx
  43e6c3:	je     43e6d8 <strcmp@plt+0x3af40>
  43e6c5:	mov    rdi,r15
  43e6c8:	call   422ef0 <strcmp@plt+0x1f758>
  43e6cd:	movzx  eax,ax
  43e6d0:	cmp    ebx,eax
  43e6d2:	jne    43e92a <strcmp@plt+0x3b192>
  43e6d8:	mov    rbx,QWORD PTR [rsp+0x20]
  43e6dd:	mov    rdi,rbx
  43e6e0:	mov    rsi,r13
  43e6e3:	mov    rdx,QWORD PTR [rip+0x258ce]        # 463fb8 <strcmp@plt+0x60820>
  43e6ea:	call   42bc70 <strcmp@plt+0x284d8>
  43e6ef:	test   al,al
  43e6f1:	jne    43e91c <strcmp@plt+0x3b184>
  43e6f7:	mov    rdi,rbx
  43e6fa:	mov    rsi,r13
  43e6fd:	call   42bbd0 <strcmp@plt+0x28438>
  43e702:	mov    rdi,r15
  43e705:	call   422c90 <strcmp@plt+0x1f4f8>
  43e70a:	mov    rbx,QWORD PTR [r14+0x10]
  43e70e:	mov    r15,QWORD PTR [rsp+0x18]
  43e713:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e71d:	nop    DWORD PTR [rax]
  43e720:	mov    rdi,r14
  43e723:	call   403210 <xmlNextElementSibling@plt>
  43e728:	test   rax,rax
  43e72b:	je     43e750 <strcmp@plt+0x3afb8>
  43e72d:	mov    r14,rax
  43e730:	mov    rdi,QWORD PTR [rax+0x10]
  43e734:	mov    rsi,rbx
  43e737:	call   403798 <strcmp@plt>
  43e73c:	test   eax,eax
  43e73e:	jne    43e720 <strcmp@plt+0x3af88>
  43e740:	jmp    43e68a <strcmp@plt+0x3aef2>
  43e745:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e74f:	nop
  43e750:	mov    rbx,QWORD PTR [rbp+0x10]
  43e754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e75e:	xchg   ax,ax
  43e760:	mov    rdi,rbp
  43e763:	call   403210 <xmlNextElementSibling@plt>
  43e768:	test   rax,rax
  43e76b:	je     43e785 <strcmp@plt+0x3afed>
  43e76d:	mov    rbp,rax
  43e770:	mov    rdi,QWORD PTR [rax+0x10]
  43e774:	mov    rsi,rbx
  43e777:	call   403798 <strcmp@plt>
  43e77c:	test   eax,eax
  43e77e:	jne    43e760 <strcmp@plt+0x3afc8>
  43e780:	jmp    43e625 <strcmp@plt+0x3ae8d>
  43e785:	mov    rdi,r15
  43e788:	call   403720 <xmlFreeDoc@plt>
  43e78d:	mov    rdi,QWORD PTR [r12+0x30]
  43e792:	mov    esi,0x2
  43e797:	call   408720 <strcmp@plt+0x4f88>
  43e79c:	mov    r14,rax
  43e79f:	mov    rdi,QWORD PTR [r12+0x30]
  43e7a4:	mov    esi,0xa
  43e7a9:	call   408720 <strcmp@plt+0x4f88>
  43e7ae:	mov    r15,rax
  43e7b1:	mov    rax,QWORD PTR [r14+0x8]
  43e7b5:	mov    rdi,QWORD PTR [rax+0x28]
  43e7b9:	call   42bf80 <strcmp@plt+0x287e8>
  43e7be:	mov    rax,QWORD PTR [r15+0x8]
  43e7c2:	mov    rdi,QWORD PTR [rax+0x28]
  43e7c6:	call   42bf80 <strcmp@plt+0x287e8>
  43e7cb:	mov    rbx,QWORD PTR [r13+0x8]
  43e7cf:	cmp    rbx,r13
  43e7d2:	je     43e817 <strcmp@plt+0x3b07f>
  43e7d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43e7de:	xchg   ax,ax
  43e7e0:	mov    rbp,QWORD PTR [rbx+0x10]
  43e7e4:	mov    rdi,r14
  43e7e7:	mov    rsi,rbp
  43e7ea:	mov    edx,0x1
  43e7ef:	mov    ecx,0x64
  43e7f4:	call   4052e0 <strcmp@plt+0x1b48>
  43e7f9:	mov    rdi,r15
  43e7fc:	mov    rsi,rbp
  43e7ff:	mov    edx,0x1
  43e804:	mov    ecx,0x64
  43e809:	call   4052e0 <strcmp@plt+0x1b48>
  43e80e:	mov    rbx,QWORD PTR [rbx+0x8]
  43e812:	cmp    rbx,r13
  43e815:	jne    43e7e0 <strcmp@plt+0x3b048>
  43e817:	mov    rax,QWORD PTR [r12+0x38]
  43e81c:	mov    rdi,QWORD PTR [r12+0x40]
  43e821:	mov    rsi,r14
  43e824:	call   QWORD PTR [rax+0x38]
  43e827:	mov    rdi,r14
  43e82a:	call   4307e0 <strcmp@plt+0x2d048>
  43e82f:	mov    rdi,r12
  43e832:	mov    rsi,rax
  43e835:	xor    edx,edx
  43e837:	call   407930 <strcmp@plt+0x4198>
  43e83c:	mov    rax,QWORD PTR [r12+0x38]
  43e841:	mov    rdi,QWORD PTR [r12+0x40]
  43e846:	mov    rsi,r15
  43e849:	call   QWORD PTR [rax+0x38]
  43e84c:	mov    rdi,r15
  43e84f:	call   4307e0 <strcmp@plt+0x2d048>
  43e854:	mov    rdi,r12
  43e857:	mov    rsi,rax
  43e85a:	xor    edx,edx
  43e85c:	call   407930 <strcmp@plt+0x4198>
  43e861:	lea    rbx,[rip+0x26558]        # 464dc0 <strcmp@plt+0x61628>
  43e868:	cmp    DWORD PTR [rbx],0x0
  43e86b:	jle    43e898 <strcmp@plt+0x3b100>
  43e86d:	lea    rsi,[rip+0x112a5]        # 44fb19 <strcmp@plt+0x4c381>
  43e874:	mov    edi,0x5
  43e879:	xor    eax,eax
  43e87b:	call   42e520 <strcmp@plt+0x2ad88>
  43e880:	cmp    DWORD PTR [rbx],0x0
  43e883:	jle    43e898 <strcmp@plt+0x3b100>
  43e885:	lea    rsi,[rip+0x112be]        # 44fb4a <strcmp@plt+0x4c3b2>
  43e88c:	mov    edi,0x5
  43e891:	xor    eax,eax
  43e893:	call   42e520 <strcmp@plt+0x2ad88>
  43e898:	mov    rdi,QWORD PTR [r14+0x8]
  43e89c:	call   428d40 <strcmp@plt+0x255a8>
  43e8a1:	mov    rdi,QWORD PTR [r15+0x8]
  43e8a5:	call   428d40 <strcmp@plt+0x255a8>
  43e8aa:	mov    rax,QWORD PTR [rsp]
  43e8ae:	movzx  esi,BYTE PTR [rax]
  43e8b1:	movzx  edx,BYTE PTR [rax+0x1]
  43e8b5:	movzx  ecx,BYTE PTR [rax+0x2]
  43e8b9:	lea    rdi,[rsp+0x10]
  43e8be:	xor    r8d,r8d
  43e8c1:	call   43b470 <strcmp@plt+0x37cd8>
  43e8c6:	mov    rsi,QWORD PTR [rsp+0x10]
  43e8cb:	mov    rdi,QWORD PTR [rsp+0x8]
  43e8d0:	mov    edx,eax
  43e8d2:	xor    ecx,ecx
  43e8d4:	call   43b5b0 <strcmp@plt+0x37e18>
  43e8d9:	mov    ebx,0x1
  43e8de:	mov    eax,ebx
  43e8e0:	add    rsp,0x28
  43e8e4:	pop    rbx
  43e8e5:	pop    r12
  43e8e7:	pop    r13
  43e8e9:	pop    r14
  43e8eb:	pop    r15
  43e8ed:	pop    rbp
  43e8ee:	ret    
  43e8ef:	lea    rax,[rip+0x264ca]        # 464dc0 <strcmp@plt+0x61628>
  43e8f6:	cmp    DWORD PTR [rax],0x0
  43e8f9:	mov    r14,QWORD PTR [rsp+0x8]
  43e8fe:	mov    rbp,QWORD PTR [rsp]
  43e902:	jle    43e94e <strcmp@plt+0x3b1b6>
  43e904:	lea    rsi,[rip+0x11114]        # 44fa1f <strcmp@plt+0x4c287>
  43e90b:	mov    edi,0x5
  43e910:	mov    rdx,rbx
  43e913:	xor    eax,eax
  43e915:	call   42e520 <strcmp@plt+0x2ad88>
  43e91a:	jmp    43e94e <strcmp@plt+0x3b1b6>
  43e91c:	lea    rsi,[rip+0x111a4]        # 44fac7 <strcmp@plt+0x4c32f>
  43e923:	mov    edi,0x3
  43e928:	jmp    43e93b <strcmp@plt+0x3b1a3>
  43e92a:	lea    rsi,[rip+0x1112b]        # 44fa5c <strcmp@plt+0x4c2c4>
  43e931:	mov    edi,0x3
  43e936:	mov    rbx,QWORD PTR [rsp+0x20]
  43e93b:	mov    rdx,rbx
  43e93e:	xor    eax,eax
  43e940:	call   42e520 <strcmp@plt+0x2ad88>
  43e945:	mov    r14,QWORD PTR [rsp+0x8]
  43e94a:	mov    rbp,QWORD PTR [rsp]
  43e94e:	mov    rdi,r15
  43e951:	call   422c90 <strcmp@plt+0x1f4f8>
  43e956:	mov    rdi,rbx
  43e959:	call   403790 <free@plt>
  43e95e:	mov    rdi,QWORD PTR [rsp+0x18]
  43e963:	call   403720 <xmlFreeDoc@plt>
  43e968:	lea    rsi,[rip+0x10c08]        # 44f577 <strcmp@plt+0x4bddf>
  43e96f:	xor    ebx,ebx
  43e971:	mov    edi,0x2
  43e976:	xor    eax,eax
  43e978:	call   42e520 <strcmp@plt+0x2ad88>
  43e97d:	mov    rdi,r13
  43e980:	call   42bff0 <strcmp@plt+0x28858>
  43e985:	movzx  esi,BYTE PTR [rbp+0x0]
  43e989:	movzx  edx,BYTE PTR [rbp+0x1]
  43e98d:	movzx  ecx,BYTE PTR [rbp+0x2]
  43e991:	lea    rdi,[rsp+0x10]
  43e996:	mov    r8d,0x1
  43e99c:	call   43b470 <strcmp@plt+0x37cd8>
  43e9a1:	mov    rsi,QWORD PTR [rsp+0x10]
  43e9a6:	mov    rdi,r14
  43e9a9:	mov    edx,eax
  43e9ab:	xor    ecx,ecx
  43e9ad:	call   43b5b0 <strcmp@plt+0x37e18>
  43e9b2:	jmp    43e8de <strcmp@plt+0x3b146>
  43e9b7:	nop    WORD PTR [rax+rax*1+0x0]
  43e9c0:	push   r15
  43e9c2:	push   r14
  43e9c4:	push   r12
  43e9c6:	push   rbx
  43e9c7:	push   rax
  43e9c8:	mov    r15,rsi
  43e9cb:	mov    r14,rdi
  43e9ce:	lea    rax,[rip+0x263eb]        # 464dc0 <strcmp@plt+0x61628>
  43e9d5:	cmp    DWORD PTR [rax],0x2
  43e9d8:	jl     43e9ed <strcmp@plt+0x3b255>
  43e9da:	lea    rsi,[rip+0x111b0]        # 44fb91 <strcmp@plt+0x4c3f9>
  43e9e1:	mov    edi,0x6
  43e9e6:	xor    eax,eax
  43e9e8:	call   42e520 <strcmp@plt+0x2ad88>
  43e9ed:	lea    rax,[rip+0x31bb4]        # 4705a8 <strcmp@plt+0x6ce10>
  43e9f4:	mov    rdi,QWORD PTR [rax]
  43e9f7:	call   40e830 <strcmp@plt+0xb098>
  43e9fc:	mov    rbx,rax
  43e9ff:	mov    rdi,QWORD PTR [rax+0x30]
  43ea03:	mov    esi,0x2
  43ea08:	call   408720 <strcmp@plt+0x4f88>
  43ea0d:	mov    r12,rax
  43ea10:	mov    rdi,QWORD PTR [rbx+0x30]
  43ea14:	mov    esi,0xa
  43ea19:	call   408720 <strcmp@plt+0x4f88>
  43ea1e:	mov    rbx,rax
  43ea21:	mov    rax,QWORD PTR [r12+0x8]
  43ea26:	mov    rdi,QWORD PTR [rax+0x28]
  43ea2a:	call   42bf80 <strcmp@plt+0x287e8>
  43ea2f:	mov    rax,QWORD PTR [rbx+0x8]
  43ea33:	mov    rdi,QWORD PTR [rax+0x28]
  43ea37:	call   42bf80 <strcmp@plt+0x287e8>
  43ea3c:	movzx  esi,BYTE PTR [r15]
  43ea40:	movzx  edx,BYTE PTR [r15+0x1]
  43ea45:	movzx  ecx,BYTE PTR [r15+0x2]
  43ea4a:	mov    rdi,rsp
  43ea4d:	xor    r8d,r8d
  43ea50:	call   43b470 <strcmp@plt+0x37cd8>
  43ea55:	mov    rsi,QWORD PTR [rsp]
  43ea59:	mov    rdi,r14
  43ea5c:	mov    edx,eax
  43ea5e:	xor    ecx,ecx
  43ea60:	call   43b5b0 <strcmp@plt+0x37e18>
  43ea65:	mov    eax,0x1
  43ea6a:	add    rsp,0x8
  43ea6e:	pop    rbx
  43ea6f:	pop    r12
  43ea71:	pop    r14
  43ea73:	pop    r15
  43ea75:	ret    
  43ea76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ea80:	push   rbp
  43ea81:	push   r14
  43ea83:	push   rbx
  43ea84:	mov    al,BYTE PTR [rdi]
  43ea86:	mov    bl,BYTE PTR [rdi+0x1]
  43ea89:	mov    bpl,BYTE PTR [rdi+0x2]
  43ea8d:	cmp    al,0x3
  43ea8f:	je     43eb0d <strcmp@plt+0x3b375>
  43ea91:	test   al,al
  43ea93:	jne    43eb2e <strcmp@plt+0x3b396>
  43ea99:	lea    r14,[rip+0x31b08]        # 4705a8 <strcmp@plt+0x6ce10>
  43eaa0:	mov    rdi,QWORD PTR [r14]
  43eaa3:	call   407840 <strcmp@plt+0x40a8>
  43eaa8:	test   eax,eax
  43eaaa:	je     43eabd <strcmp@plt+0x3b325>
  43eaac:	mov    rdi,QWORD PTR [r14]
  43eaaf:	call   407840 <strcmp@plt+0x40a8>
  43eab4:	cmp    eax,0x3
  43eab7:	jne    43eb3e <strcmp@plt+0x3b3a6>
  43eabd:	cmp    bl,0x4
  43eac0:	ja     43ec0a <strcmp@plt+0x3b472>
  43eac6:	movzx  eax,bl
  43eac9:	lea    rcx,[rip+0x10450]        # 44ef20 <strcmp@plt+0x4b788>
  43ead0:	movsxd rax,DWORD PTR [rcx+rax*4]
  43ead4:	add    rax,rcx
  43ead7:	jmp    rax
  43ead9:	cmp    bpl,0x3
  43eadd:	je     43ec8d <strcmp@plt+0x3b4f5>
  43eae3:	test   bpl,bpl
  43eae6:	jne    43ed2d <strcmp@plt+0x3b595>
  43eaec:	lea    rax,[rip+0x262cd]        # 464dc0 <strcmp@plt+0x61628>
  43eaf3:	lea    rbx,[rip+0xffffffffffffe6a6]        # 43d1a0 <strcmp@plt+0x39a08>
  43eafa:	cmp    DWORD PTR [rax],0x2
  43eafd:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43eaff:	lea    rsi,[rip+0x110d7]        # 44fbdd <strcmp@plt+0x4c445>
  43eb06:	mov    edi,0x6
  43eb0b:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43eb0d:	lea    rax,[rip+0x31a94]        # 4705a8 <strcmp@plt+0x6ce10>
  43eb14:	mov    rdi,QWORD PTR [rax]
  43eb17:	call   407840 <strcmp@plt+0x40a8>
  43eb1c:	cmp    eax,0x2
  43eb1f:	jne    43eb3e <strcmp@plt+0x3b3a6>
  43eb21:	test   bl,bl
  43eb23:	je     43eb6b <strcmp@plt+0x3b3d3>
  43eb25:	lea    rsi,[rip+0x114b1]        # 44ffdd <strcmp@plt+0x4c845>
  43eb2c:	jmp    43eb35 <strcmp@plt+0x3b39d>
  43eb2e:	lea    rsi,[rip+0x114db]        # 450010 <strcmp@plt+0x4c878>
  43eb35:	xor    ebx,ebx
  43eb37:	mov    edi,0x3
  43eb3c:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43eb3e:	lea    rax,[rip+0x2627b]        # 464dc0 <strcmp@plt+0x61628>
  43eb45:	cmp    DWORD PTR [rax],0x0
  43eb48:	jle    43eb67 <strcmp@plt+0x3b3cf>
  43eb4a:	lea    rsi,[rip+0x11062]        # 44fbb3 <strcmp@plt+0x4c41b>
  43eb51:	xor    ebx,ebx
  43eb53:	mov    edi,0x5
  43eb58:	xor    eax,eax
  43eb5a:	call   42e520 <strcmp@plt+0x2ad88>
  43eb5f:	mov    rax,rbx
  43eb62:	pop    rbx
  43eb63:	pop    r14
  43eb65:	pop    rbp
  43eb66:	ret    
  43eb67:	xor    ebx,ebx
  43eb69:	jmp    43eb5f <strcmp@plt+0x3b3c7>
  43eb6b:	cmp    bpl,0x3
  43eb6f:	je     43ec59 <strcmp@plt+0x3b4c1>
  43eb75:	test   bpl,bpl
  43eb78:	jne    43ec81 <strcmp@plt+0x3b4e9>
  43eb7e:	lea    rax,[rip+0x2623b]        # 464dc0 <strcmp@plt+0x61628>
  43eb85:	lea    rbx,[rip+0xffffffffffffe614]        # 43d1a0 <strcmp@plt+0x39a08>
  43eb8c:	cmp    DWORD PTR [rax],0x2
  43eb8f:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43eb91:	lea    rsi,[rip+0x11377]        # 44ff0f <strcmp@plt+0x4c777>
  43eb98:	mov    edi,0x6
  43eb9d:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43eb9f:	cmp    bpl,0x3
  43eba3:	je     43ecb5 <strcmp@plt+0x3b51d>
  43eba9:	test   bpl,bpl
  43ebac:	jne    43ed39 <strcmp@plt+0x3b5a1>
  43ebb2:	lea    rax,[rip+0x26207]        # 464dc0 <strcmp@plt+0x61628>
  43ebb9:	lea    rbx,[rip+0xffffffffffffeab0]        # 43d670 <strcmp@plt+0x39ed8>
  43ebc0:	cmp    DWORD PTR [rax],0x2
  43ebc3:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43ebc5:	lea    rsi,[rip+0x110df]        # 44fcab <strcmp@plt+0x4c513>
  43ebcc:	mov    edi,0x6
  43ebd1:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43ebd3:	cmp    bpl,0x3
  43ebd7:	je     43ecdd <strcmp@plt+0x3b545>
  43ebdd:	test   bpl,bpl
  43ebe0:	jne    43ec4d <strcmp@plt+0x3b4b5>
  43ebe2:	lea    rax,[rip+0x261d7]        # 464dc0 <strcmp@plt+0x61628>
  43ebe9:	lea    rbx,[rip+0xfffffffffffff900]        # 43e4f0 <strcmp@plt+0x3ad58>
  43ebf0:	cmp    DWORD PTR [rax],0x2
  43ebf3:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43ebf9:	lea    rsi,[rip+0x11250]        # 44fe50 <strcmp@plt+0x4c6b8>
  43ec00:	mov    edi,0x6
  43ec05:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43ec0a:	lea    rsi,[rip+0x112cb]        # 44fedc <strcmp@plt+0x4c744>
  43ec11:	jmp    43eb35 <strcmp@plt+0x3b39d>
  43ec16:	cmp    bpl,0x3
  43ec1a:	je     43ed05 <strcmp@plt+0x3b56d>
  43ec20:	test   bpl,bpl
  43ec23:	jne    43ec4d <strcmp@plt+0x3b4b5>
  43ec25:	lea    rax,[rip+0x26194]        # 464dc0 <strcmp@plt+0x61628>
  43ec2c:	lea    rbx,[rip+0xffffffffffffed4d]        # 43d980 <strcmp@plt+0x3a1e8>
  43ec33:	cmp    DWORD PTR [rax],0x2
  43ec36:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43ec3c:	lea    rsi,[rip+0x11136]        # 44fd79 <strcmp@plt+0x4c5e1>
  43ec43:	mov    edi,0x6
  43ec48:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43ec4d:	lea    rsi,[rip+0x111b1]        # 44fe05 <strcmp@plt+0x4c66d>
  43ec54:	jmp    43eb35 <strcmp@plt+0x3b39d>
  43ec59:	lea    rax,[rip+0x26160]        # 464dc0 <strcmp@plt+0x61628>
  43ec60:	lea    rbx,[rip+0xffffffffffffe929]        # 43d590 <strcmp@plt+0x39df8>
  43ec67:	cmp    DWORD PTR [rax],0x2
  43ec6a:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43ec70:	lea    rsi,[rip+0x112db]        # 44ff52 <strcmp@plt+0x4c7ba>
  43ec77:	mov    edi,0x6
  43ec7c:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43ec81:	lea    rsi,[rip+0x1130d]        # 44ff95 <strcmp@plt+0x4c7fd>
  43ec88:	jmp    43eb35 <strcmp@plt+0x3b39d>
  43ec8d:	lea    rax,[rip+0x2612c]        # 464dc0 <strcmp@plt+0x61628>
  43ec94:	lea    rbx,[rip+0xffffffffffffe8f5]        # 43d590 <strcmp@plt+0x39df8>
  43ec9b:	cmp    DWORD PTR [rax],0x2
  43ec9e:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43eca4:	lea    rsi,[rip+0x10f75]        # 44fc20 <strcmp@plt+0x4c488>
  43ecab:	mov    edi,0x6
  43ecb0:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43ecb5:	lea    rax,[rip+0x26104]        # 464dc0 <strcmp@plt+0x61628>
  43ecbc:	lea    rbx,[rip+0xffffffffffffebdd]        # 43d8a0 <strcmp@plt+0x3a108>
  43ecc3:	cmp    DWORD PTR [rax],0x2
  43ecc6:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43eccc:	lea    rsi,[rip+0x1101b]        # 44fcee <strcmp@plt+0x4c556>
  43ecd3:	mov    edi,0x6
  43ecd8:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43ecdd:	lea    rax,[rip+0x260dc]        # 464dc0 <strcmp@plt+0x61628>
  43ece4:	lea    rbx,[rip+0xfffffffffffffcd5]        # 43e9c0 <strcmp@plt+0x3b228>
  43eceb:	cmp    DWORD PTR [rax],0x2
  43ecee:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43ecf4:	lea    rsi,[rip+0x1119b]        # 44fe96 <strcmp@plt+0x4c6fe>
  43ecfb:	mov    edi,0x6
  43ed00:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43ed05:	lea    rax,[rip+0x260b4]        # 464dc0 <strcmp@plt+0x61628>
  43ed0c:	lea    rbx,[rip+0xfffffffffffff46d]        # 43e180 <strcmp@plt+0x3a9e8>
  43ed13:	cmp    DWORD PTR [rax],0x2
  43ed16:	jl     43eb5f <strcmp@plt+0x3b3c7>
  43ed1c:	lea    rsi,[rip+0x1109c]        # 44fdbf <strcmp@plt+0x4c627>
  43ed23:	mov    edi,0x6
  43ed28:	jmp    43eb58 <strcmp@plt+0x3b3c0>
  43ed2d:	lea    rsi,[rip+0x10f2f]        # 44fc63 <strcmp@plt+0x4c4cb>
  43ed34:	jmp    43eb35 <strcmp@plt+0x3b39d>
  43ed39:	lea    rsi,[rip+0x10ff1]        # 44fd31 <strcmp@plt+0x4c599>
  43ed40:	jmp    43eb35 <strcmp@plt+0x3b39d>
  43ed45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ed4f:	nop
  43ed50:	push   r14
  43ed52:	push   rbx
  43ed53:	push   rax
  43ed54:	mov    r14,rdi
  43ed57:	mov    edi,0x1000
  43ed5c:	call   431d60 <strcmp@plt+0x2e5c8>
  43ed61:	mov    rbx,rax
  43ed64:	mov    rdi,r14
  43ed67:	mov    rsi,rax
  43ed6a:	mov    edx,0x1
  43ed6f:	call   43b4d0 <strcmp@plt+0x37d38>
  43ed74:	cmp    eax,0xfffffffe
  43ed77:	je     43ee06 <strcmp@plt+0x3b66e>
  43ed7d:	cmp    eax,0xffffffff
  43ed80:	jne    43ed8b <strcmp@plt+0x3b5f3>
  43ed82:	lea    rsi,[rip+0x112ac]        # 450035 <strcmp@plt+0x4c89d>
  43ed89:	jmp    43edb1 <strcmp@plt+0x3b619>
  43ed8b:	add    eax,0xfffffff8
  43ed8e:	cmp    DWORD PTR [rbx+0x4],eax
  43ed91:	jae    43eda8 <strcmp@plt+0x3b610>
  43ed93:	lea    rsi,[rip+0x112d4]        # 45006e <strcmp@plt+0x4c8d6>
  43ed9a:	mov    edi,0x3
  43ed9f:	xor    eax,eax
  43eda1:	call   42e520 <strcmp@plt+0x2ad88>
  43eda6:	jmp    43edbf <strcmp@plt+0x3b627>
  43eda8:	jbe    43edbf <strcmp@plt+0x3b627>
  43edaa:	lea    rsi,[rip+0x112ec]        # 45009d <strcmp@plt+0x4c905>
  43edb1:	mov    edi,0x2
  43edb6:	xor    eax,eax
  43edb8:	call   42e520 <strcmp@plt+0x2ad88>
  43edbd:	jmp    43ee06 <strcmp@plt+0x3b66e>
  43edbf:	mov    rdi,rbx
  43edc2:	call   43ea80 <strcmp@plt+0x3b2e8>
  43edc7:	test   rax,rax
  43edca:	je     43eddd <strcmp@plt+0x3b645>
  43edcc:	mov    rdx,rbx
  43edcf:	add    rdx,0x8
  43edd3:	mov    rdi,r14
  43edd6:	mov    rsi,rbx
  43edd9:	call   rax
  43eddb:	jmp    43ee06 <strcmp@plt+0x3b66e>
  43eddd:	movzx  esi,BYTE PTR [rbx]
  43ede0:	movzx  edx,BYTE PTR [rbx+0x1]
  43ede4:	movzx  ecx,BYTE PTR [rbx+0x2]
  43ede8:	mov    rdi,rsp
  43edeb:	mov    r8d,0x1
  43edf1:	call   43b470 <strcmp@plt+0x37cd8>
  43edf6:	mov    rsi,QWORD PTR [rsp]
  43edfa:	mov    rdi,r14
  43edfd:	mov    edx,eax
  43edff:	xor    ecx,ecx
  43ee01:	call   43b5b0 <strcmp@plt+0x37e18>
  43ee06:	mov    rdi,rbx
  43ee09:	call   403790 <free@plt>
  43ee0e:	add    rsp,0x8
  43ee12:	pop    rbx
  43ee13:	pop    r14
  43ee15:	ret    
  43ee16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43ee20:	push   rbp
  43ee21:	push   r15
  43ee23:	push   r14
  43ee25:	push   r13
  43ee27:	push   r12
  43ee29:	push   rbx
  43ee2a:	sub    rsp,0x18
  43ee2e:	mov    r14d,ecx
  43ee31:	mov    ebp,edx
  43ee33:	mov    QWORD PTR [rsp+0x8],rsi
  43ee38:	mov    r12,rdi
  43ee3b:	lea    rsi,[rip+0x1128b]        # 4500cd <strcmp@plt+0x4c935>
  43ee42:	call   4032c0 <cfg_getstr@plt>
  43ee47:	test   rax,rax
  43ee4a:	je     43f090 <strcmp@plt+0x3b8f8>
  43ee50:	mov    DWORD PTR [rsp+0x14],ebp
  43ee54:	lea    rsi,[rip+0x11272]        # 4500cd <strcmp@plt+0x4c935>
  43ee5b:	mov    rdi,r12
  43ee5e:	call   4032c0 <cfg_getstr@plt>
  43ee63:	mov    rdi,rax
  43ee66:	call   403710 <strdup@plt>
  43ee6b:	mov    rbp,QWORD PTR [rsp+0x8]
  43ee70:	mov    QWORD PTR [rbp+0x0],rax
  43ee74:	lea    rsi,[rip+0xd507]        # 44c382 <strcmp@plt+0x48bea>
  43ee7b:	mov    rdi,r12
  43ee7e:	call   4031b0 <cfg_getint@plt>
  43ee83:	mov    DWORD PTR [rbp+0xc],eax
  43ee86:	test   r14b,r14b
  43ee89:	jne    43eea2 <strcmp@plt+0x3b70a>
  43ee8b:	lea    rsi,[rip+0x1022d]        # 44f0bf <strcmp@plt+0x4b927>
  43ee92:	mov    rdi,r12
  43ee95:	call   4031b0 <cfg_getint@plt>
  43ee9a:	mov    rcx,QWORD PTR [rsp+0x8]
  43ee9f:	mov    DWORD PTR [rcx+0x8],eax
  43eea2:	lea    rsi,[rip+0x3624]        # 4424cd <strcmp@plt+0x3ed35>
  43eea9:	mov    rdi,r12
  43eeac:	call   403730 <cfg_size@plt>
  43eeb1:	test   eax,eax
  43eeb3:	je     43ef93 <strcmp@plt+0x3b7fb>
  43eeb9:	xor    r14d,r14d
  43eebc:	lea    rbx,[rip+0x360a]        # 4424cd <strcmp@plt+0x3ed35>
  43eec3:	lea    rbp,[rip+0x6c52]        # 445b1c <strcmp@plt+0x42384>
  43eeca:	nop    WORD PTR [rax+rax*1+0x0]
  43eed0:	mov    rdi,r12
  43eed3:	mov    rsi,rbx
  43eed6:	mov    edx,r14d
  43eed9:	call   4031f0 <cfg_getnsec@plt>
  43eede:	mov    r15,rax
  43eee1:	mov    rdi,rax
  43eee4:	mov    rsi,rbp
  43eee7:	call   4032c0 <cfg_getstr@plt>
  43eeec:	test   rax,rax
  43eeef:	je     43f094 <strcmp@plt+0x3b8fc>
  43eef5:	mov    rdi,r15
  43eef8:	mov    rsi,rbp
  43eefb:	call   4032c0 <cfg_getstr@plt>
  43ef00:	mov    rbp,rax
  43ef03:	mov    rdi,r15
  43ef06:	lea    rsi,[rip+0x3c12]        # 442b1f <strcmp@plt+0x3f387>
  43ef0d:	call   4031b0 <cfg_getint@plt>
  43ef12:	mov    rbx,r12
  43ef15:	mov    r12,rax
  43ef18:	mov    rdi,r15
  43ef1b:	lea    rsi,[rip+0x101d6]        # 44f0f8 <strcmp@plt+0x4b960>
  43ef22:	call   4031b0 <cfg_getint@plt>
  43ef27:	mov    r13,rax
  43ef2a:	mov    rdi,r15
  43ef2d:	lea    rsi,[rip+0x1220d]        # 451141 <strcmp@plt+0x4d9a9>
  43ef34:	call   403350 <cfg_getbool@plt>
  43ef39:	xor    r9d,r9d
  43ef3c:	test   eax,eax
  43ef3e:	setne  r9b
  43ef42:	movzx  esi,r12b
  43ef46:	mov    r12,rbx
  43ef49:	movzx  edx,r13b
  43ef4d:	mov    rdi,rbp
  43ef50:	lea    rbp,[rip+0x6bc5]        # 445b1c <strcmp@plt+0x42384>
  43ef57:	lea    rbx,[rip+0x356f]        # 4424cd <strcmp@plt+0x3ed35>
  43ef5e:	mov    ecx,0xff
  43ef63:	xor    r8d,r8d
  43ef66:	call   404af0 <strcmp@plt+0x1358>
  43ef6b:	mov    rcx,QWORD PTR [rsp+0x8]
  43ef70:	mov    rsi,QWORD PTR [rcx+0x10]
  43ef74:	mov    rdi,rax
  43ef77:	call   42bbd0 <strcmp@plt+0x28438>
  43ef7c:	inc    r14d
  43ef7f:	mov    rdi,r12
  43ef82:	mov    rsi,rbx
  43ef85:	call   403730 <cfg_size@plt>
  43ef8a:	cmp    r14d,eax
  43ef8d:	jb     43eed0 <strcmp@plt+0x3b738>
  43ef93:	mov    ebp,0x1
  43ef98:	cmp    BYTE PTR [rsp+0x14],0x0
  43ef9d:	je     43f0c2 <strcmp@plt+0x3b92a>
  43efa3:	lea    rsi,[rip+0x1116b]        # 450115 <strcmp@plt+0x4c97d>
  43efaa:	mov    rdi,r12
  43efad:	call   403730 <cfg_size@plt>
  43efb2:	test   eax,eax
  43efb4:	je     43f0c2 <strcmp@plt+0x3b92a>
  43efba:	xor    ebp,ebp
  43efbc:	lea    rbx,[rip+0x11152]        # 450115 <strcmp@plt+0x4c97d>
  43efc3:	lea    r14,[rip+0x46b0]        # 44367a <strcmp@plt+0x3fee2>
  43efca:	nop    WORD PTR [rax+rax*1+0x0]
  43efd0:	mov    rdi,r12
  43efd3:	mov    rsi,rbx
  43efd6:	mov    edx,ebp
  43efd8:	call   4031f0 <cfg_getnsec@plt>
  43efdd:	mov    r15,r12
  43efe0:	mov    r12,rax
  43efe3:	mov    rdi,rax
  43efe6:	lea    rsi,[rip+0x11133]        # 450120 <strcmp@plt+0x4c988>
  43efed:	call   4031b0 <cfg_getint@plt>
  43eff2:	mov    r13,rax
  43eff5:	mov    rdi,r12
  43eff8:	mov    rsi,r14
  43effb:	call   4032c0 <cfg_getstr@plt>
  43f000:	test   rax,rax
  43f003:	je     43f0a5 <strcmp@plt+0x3b90d>
  43f009:	mov    rdi,r12
  43f00c:	mov    rsi,r14
  43f00f:	call   4032c0 <cfg_getstr@plt>
  43f014:	mov    r14,rax
  43f017:	mov    rdi,r12
  43f01a:	lea    rsi,[rip+0x3afe]        # 442b1f <strcmp@plt+0x3f387>
  43f021:	call   4031b0 <cfg_getint@plt>
  43f026:	mov    rbx,rax
  43f029:	mov    rdi,r12
  43f02c:	lea    rsi,[rip+0x100c5]        # 44f0f8 <strcmp@plt+0x4b960>
  43f033:	call   4031b0 <cfg_getint@plt>
  43f038:	movzx  edx,bl
  43f03b:	mov    rbx,QWORD PTR [rsp+0x8]
  43f040:	movzx  ecx,al
  43f043:	mov    rdi,r14
  43f046:	lea    r14,[rip+0x462d]        # 44367a <strcmp@plt+0x3fee2>
  43f04d:	mov    esi,r13d
  43f050:	mov    r8d,0xff
  43f056:	xor    r9d,r9d
  43f059:	call   404c40 <strcmp@plt+0x14a8>
  43f05e:	mov    rsi,QWORD PTR [rbx+0x18]
  43f062:	lea    rbx,[rip+0x110ac]        # 450115 <strcmp@plt+0x4c97d>
  43f069:	mov    rdi,rax
  43f06c:	call   42bbd0 <strcmp@plt+0x28438>
  43f071:	inc    ebp
  43f073:	mov    rdi,r15
  43f076:	mov    rsi,rbx
  43f079:	call   403730 <cfg_size@plt>
  43f07e:	cmp    ebp,eax
  43f080:	mov    r12,r15
  43f083:	jb     43efd0 <strcmp@plt+0x3b838>
  43f089:	mov    ebp,0x1
  43f08e:	jmp    43f0c2 <strcmp@plt+0x3b92a>
  43f090:	xor    ebp,ebp
  43f092:	jmp    43f0c2 <strcmp@plt+0x3b92a>
  43f094:	mov    rax,QWORD PTR [rsp+0x8]
  43f099:	mov    rdx,QWORD PTR [rax]
  43f09c:	lea    rsi,[rip+0x11035]        # 4500d8 <strcmp@plt+0x4c940>
  43f0a3:	jmp    43f0b4 <strcmp@plt+0x3b91c>
  43f0a5:	mov    rax,QWORD PTR [rsp+0x8]
  43f0aa:	mov    rdx,QWORD PTR [rax]
  43f0ad:	lea    rsi,[rip+0x11077]        # 45012b <strcmp@plt+0x4c993>
  43f0b4:	xor    ebp,ebp
  43f0b6:	mov    edi,0x3
  43f0bb:	xor    eax,eax
  43f0bd:	call   42e520 <strcmp@plt+0x2ad88>
  43f0c2:	mov    eax,ebp
  43f0c4:	add    rsp,0x18
  43f0c8:	pop    rbx
  43f0c9:	pop    r12
  43f0cb:	pop    r13
  43f0cd:	pop    r14
  43f0cf:	pop    r15
  43f0d1:	pop    rbp
  43f0d2:	ret    
  43f0d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f0dd:	nop    DWORD PTR [rax]
  43f0e0:	push   rbp
  43f0e1:	push   r15
  43f0e3:	push   r14
  43f0e5:	push   r13
  43f0e7:	push   r12
  43f0e9:	push   rbx
  43f0ea:	push   rax
  43f0eb:	mov    r12d,r8d
  43f0ee:	mov    r13d,ecx
  43f0f1:	mov    r14,rdx
  43f0f4:	mov    r15,rsi
  43f0f7:	mov    rbp,rdi
  43f0fa:	xor    eax,eax
  43f0fc:	call   404740 <strcmp@plt+0xfa8>
  43f101:	mov    rbx,rax
  43f104:	mov    rdi,rbp
  43f107:	mov    rsi,rax
  43f10a:	mov    edx,r13d
  43f10d:	mov    ecx,r12d
  43f110:	call   43ee20 <strcmp@plt+0x3b688>
  43f115:	cmp    eax,0x1
  43f118:	jne    43f13c <strcmp@plt+0x3b9a4>
  43f11a:	movzx  ecx,r13b
  43f11e:	mov    rdi,r15
  43f121:	mov    rsi,r14
  43f124:	mov    rdx,rbx
  43f127:	call   405ed0 <strcmp@plt+0x2738>
  43f12c:	mov    rbp,rax
  43f12f:	mov    rdi,rbx
  43f132:	call   4047e0 <strcmp@plt+0x1048>
  43f137:	mov    rax,rbp
  43f13a:	jmp    43f13e <strcmp@plt+0x3b9a6>
  43f13c:	xor    eax,eax
  43f13e:	add    rsp,0x8
  43f142:	pop    rbx
  43f143:	pop    r12
  43f145:	pop    r13
  43f147:	pop    r14
  43f149:	pop    r15
  43f14b:	pop    rbp
  43f14c:	ret    
  43f14d:	nop    DWORD PTR [rax]
  43f150:	push   rbp
  43f151:	push   r15
  43f153:	push   r14
  43f155:	push   r13
  43f157:	push   r12
  43f159:	push   rbx
  43f15a:	sub    rsp,0x18
  43f15e:	mov    QWORD PTR [rsp+0x10],rsi
  43f163:	lea    rsi,[rip+0xffe1]        # 44f14b <strcmp@plt+0x4b9b3>
  43f16a:	mov    QWORD PTR [rsp+0x8],rdi
  43f16f:	call   403730 <cfg_size@plt>
  43f174:	mov    DWORD PTR [rsp+0x4],eax
  43f178:	test   eax,eax
  43f17a:	jle    43f27c <strcmp@plt+0x3bae4>
  43f180:	lea    rbx,[rip+0x6995]        # 445b1c <strcmp@plt+0x42384>
  43f187:	xor    r15d,r15d
  43f18a:	jmp    43f1c6 <strcmp@plt+0x3ba2e>
  43f18c:	nop    DWORD PTR [rax+0x0]
  43f190:	mov    rdi,r13
  43f193:	lea    rbx,[rip+0x6982]        # 445b1c <strcmp@plt+0x42384>
  43f19a:	mov    rsi,rbx
  43f19d:	call   4032c0 <cfg_getstr@plt>
  43f1a2:	mov    edi,0x3
  43f1a7:	lea    rsi,[rip+0x10fd8]        # 450186 <strcmp@plt+0x4c9ee>
  43f1ae:	mov    rdx,rax
  43f1b1:	xor    eax,eax
  43f1b3:	call   42e520 <strcmp@plt+0x2ad88>
  43f1b8:	inc    r15d
  43f1bb:	cmp    DWORD PTR [rsp+0x4],r15d
  43f1c0:	je     43f27c <strcmp@plt+0x3bae4>
  43f1c6:	mov    rdi,QWORD PTR [rsp+0x8]
  43f1cb:	lea    rsi,[rip+0xff79]        # 44f14b <strcmp@plt+0x4b9b3>
  43f1d2:	mov    edx,r15d
  43f1d5:	call   4031f0 <cfg_getnsec@plt>
  43f1da:	mov    r13,rax
  43f1dd:	mov    rax,QWORD PTR [rsp+0x10]
  43f1e2:	mov    r12,QWORD PTR [rax+0x78]
  43f1e6:	mov    rdi,r13
  43f1e9:	mov    rsi,rbx
  43f1ec:	call   4032c0 <cfg_getstr@plt>
  43f1f1:	mov    r14,rax
  43f1f4:	mov    rdi,r13
  43f1f7:	lea    rsi,[rip+0xff9b]        # 44f199 <strcmp@plt+0x4ba01>
  43f1fe:	call   4031b0 <cfg_getint@plt>
  43f203:	mov    rbx,rax
  43f206:	mov    rdi,r13
  43f209:	lea    rsi,[rip+0x3db9]        # 442fc9 <strcmp@plt+0x3f831>
  43f210:	call   4032c0 <cfg_getstr@plt>
  43f215:	mov    rbp,rax
  43f218:	mov    rdi,r13
  43f21b:	lea    rsi,[rip+0x1043b]        # 44f65d <strcmp@plt+0x4bec5>
  43f222:	call   403350 <cfg_getbool@plt>
  43f227:	xor    r8d,r8d
  43f22a:	test   eax,eax
  43f22c:	setne  r8b
  43f230:	mov    rdi,r12
  43f233:	mov    rsi,r14
  43f236:	mov    edx,ebx
  43f238:	mov    rcx,rbp
  43f23b:	call   405190 <strcmp@plt+0x19f8>
  43f240:	cmp    eax,0x1
  43f243:	jne    43f190 <strcmp@plt+0x3b9f8>
  43f249:	lea    rax,[rip+0x25b70]        # 464dc0 <strcmp@plt+0x61628>
  43f250:	cmp    DWORD PTR [rax],0x0
  43f253:	lea    rbx,[rip+0x68c2]        # 445b1c <strcmp@plt+0x42384>
  43f25a:	jle    43f1b8 <strcmp@plt+0x3ba20>
  43f260:	mov    rdi,r13
  43f263:	mov    rsi,rbx
  43f266:	call   4032c0 <cfg_getstr@plt>
  43f26b:	mov    edi,0x5
  43f270:	lea    rsi,[rip+0x10ef3]        # 45016a <strcmp@plt+0x4c9d2>
  43f277:	jmp    43f1ae <strcmp@plt+0x3ba16>
  43f27c:	mov    eax,0x1
  43f281:	add    rsp,0x18
  43f285:	pop    rbx
  43f286:	pop    r12
  43f288:	pop    r13
  43f28a:	pop    r14
  43f28c:	pop    r15
  43f28e:	pop    rbp
  43f28f:	ret    
  43f290:	push   rbp
  43f291:	push   r15
  43f293:	push   r14
  43f295:	push   r13
  43f297:	push   r12
  43f299:	push   rbx
  43f29a:	sub    rsp,0x28
  43f29e:	mov    rbx,rsi
  43f2a1:	mov    rbp,rdi
  43f2a4:	mov    rdi,QWORD PTR [rsi+0x30]
  43f2a8:	mov    esi,0x2
  43f2ad:	call   408720 <strcmp@plt+0x4f88>
  43f2b2:	mov    QWORD PTR [rsp+0x18],rax
  43f2b7:	mov    QWORD PTR [rsp+0x20],rbx
  43f2bc:	mov    rdi,QWORD PTR [rbx+0x30]
  43f2c0:	mov    esi,0xa
  43f2c5:	call   408720 <strcmp@plt+0x4f88>
  43f2ca:	mov    QWORD PTR [rsp+0x10],rax
  43f2cf:	lea    rsi,[rip+0x10ec9]        # 45019f <strcmp@plt+0x4ca07>
  43f2d6:	mov    QWORD PTR [rsp+0x8],rbp
  43f2db:	mov    rdi,rbp
  43f2de:	call   403730 <cfg_size@plt>
  43f2e3:	test   eax,eax
  43f2e5:	jle    43f3cd <strcmp@plt+0x3bc35>
  43f2eb:	mov    ebp,eax
  43f2ed:	lea    r14,[rip+0x6828]        # 445b1c <strcmp@plt+0x42384>
  43f2f4:	xor    r15d,r15d
  43f2f7:	jmp    43f32d <strcmp@plt+0x3bb95>
  43f2f9:	nop    DWORD PTR [rax+0x0]
  43f300:	mov    rdi,r12
  43f303:	mov    rsi,r14
  43f306:	call   4032c0 <cfg_getstr@plt>
  43f30b:	mov    edi,0x2
  43f310:	lea    rsi,[rip+0x10f04]        # 45021b <strcmp@plt+0x4ca83>
  43f317:	mov    rdx,rax
  43f31a:	xor    eax,eax
  43f31c:	call   42e520 <strcmp@plt+0x2ad88>
  43f321:	inc    r15d
  43f324:	cmp    ebp,r15d
  43f327:	je     43f3cd <strcmp@plt+0x3bc35>
  43f32d:	mov    rdi,QWORD PTR [rsp+0x8]
  43f332:	lea    rsi,[rip+0x10e66]        # 45019f <strcmp@plt+0x4ca07>
  43f339:	mov    edx,r15d
  43f33c:	call   4031f0 <cfg_getnsec@plt>
  43f341:	mov    r12,rax
  43f344:	mov    rdi,rax
  43f347:	mov    rsi,r14
  43f34a:	call   4032c0 <cfg_getstr@plt>
  43f34f:	test   rax,rax
  43f352:	je     43f51e <strcmp@plt+0x3bd86>
  43f358:	mov    rdi,r12
  43f35b:	mov    rsi,r14
  43f35e:	call   4032c0 <cfg_getstr@plt>
  43f363:	mov    r13,rax
  43f366:	mov    rdi,r12
  43f369:	lea    rsi,[rip+0x37af]        # 442b1f <strcmp@plt+0x3f387>
  43f370:	call   4031b0 <cfg_getint@plt>
  43f375:	mov    rbx,rax
  43f378:	mov    rdi,r12
  43f37b:	lea    rsi,[rip+0xfd76]        # 44f0f8 <strcmp@plt+0x4b960>
  43f382:	call   4031b0 <cfg_getint@plt>
  43f387:	mov    rdi,QWORD PTR [rsp+0x18]
  43f38c:	mov    rsi,r13
  43f38f:	mov    edx,ebx
  43f391:	mov    ecx,eax
  43f393:	call   4052e0 <strcmp@plt+0x1b48>
  43f398:	cmp    eax,0x1
  43f39b:	jne    43f300 <strcmp@plt+0x3bb68>
  43f3a1:	lea    rax,[rip+0x25a18]        # 464dc0 <strcmp@plt+0x61628>
  43f3a8:	cmp    DWORD PTR [rax],0x0
  43f3ab:	jle    43f321 <strcmp@plt+0x3bb89>
  43f3b1:	mov    rdi,r12
  43f3b4:	mov    rsi,r14
  43f3b7:	call   4032c0 <cfg_getstr@plt>
  43f3bc:	mov    edi,0x5
  43f3c1:	lea    rsi,[rip+0x10e2a]        # 4501f2 <strcmp@plt+0x4ca5a>
  43f3c8:	jmp    43f317 <strcmp@plt+0x3bb7f>
  43f3cd:	lea    rsi,[rip+0x10e5e]        # 450232 <strcmp@plt+0x4ca9a>
  43f3d4:	mov    rdi,QWORD PTR [rsp+0x8]
  43f3d9:	call   403730 <cfg_size@plt>
  43f3de:	test   eax,eax
  43f3e0:	jle    43f4ce <strcmp@plt+0x3bd36>
  43f3e6:	mov    r14d,eax
  43f3e9:	lea    rbp,[rip+0x672c]        # 445b1c <strcmp@plt+0x42384>
  43f3f0:	xor    r15d,r15d
  43f3f3:	jmp    43f42d <strcmp@plt+0x3bc95>
  43f3f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f3ff:	nop
  43f400:	mov    rdi,r12
  43f403:	mov    rsi,rbp
  43f406:	call   4032c0 <cfg_getstr@plt>
  43f40b:	mov    edi,0x2
  43f410:	lea    rsi,[rip+0x10e04]        # 45021b <strcmp@plt+0x4ca83>
  43f417:	mov    rdx,rax
  43f41a:	xor    eax,eax
  43f41c:	call   42e520 <strcmp@plt+0x2ad88>
  43f421:	inc    r15d
  43f424:	cmp    r14d,r15d
  43f427:	je     43f4ce <strcmp@plt+0x3bd36>
  43f42d:	mov    rdi,QWORD PTR [rsp+0x8]
  43f432:	lea    rsi,[rip+0x10df9]        # 450232 <strcmp@plt+0x4ca9a>
  43f439:	mov    edx,r15d
  43f43c:	call   4031f0 <cfg_getnsec@plt>
  43f441:	mov    r12,rax
  43f444:	mov    rdi,rax
  43f447:	mov    rsi,rbp
  43f44a:	call   4032c0 <cfg_getstr@plt>
  43f44f:	test   rax,rax
  43f452:	je     43f527 <strcmp@plt+0x3bd8f>
  43f458:	mov    rdi,r12
  43f45b:	mov    rsi,rbp
  43f45e:	call   4032c0 <cfg_getstr@plt>
  43f463:	mov    rbx,rax
  43f466:	mov    rdi,r12
  43f469:	lea    rsi,[rip+0x36af]        # 442b1f <strcmp@plt+0x3f387>
  43f470:	call   4031b0 <cfg_getint@plt>
  43f475:	mov    r13,rax
  43f478:	mov    rdi,r12
  43f47b:	lea    rsi,[rip+0xfc76]        # 44f0f8 <strcmp@plt+0x4b960>
  43f482:	call   4031b0 <cfg_getint@plt>
  43f487:	mov    rdi,QWORD PTR [rsp+0x10]
  43f48c:	mov    rsi,rbx
  43f48f:	mov    edx,r13d
  43f492:	mov    ecx,eax
  43f494:	call   4052e0 <strcmp@plt+0x1b48>
  43f499:	cmp    eax,0x1
  43f49c:	jne    43f400 <strcmp@plt+0x3bc68>
  43f4a2:	lea    rax,[rip+0x25917]        # 464dc0 <strcmp@plt+0x61628>
  43f4a9:	cmp    DWORD PTR [rax],0x0
  43f4ac:	jle    43f421 <strcmp@plt+0x3bc89>
  43f4b2:	mov    rdi,r12
  43f4b5:	mov    rsi,rbp
  43f4b8:	call   4032c0 <cfg_getstr@plt>
  43f4bd:	mov    edi,0x5
  43f4c2:	lea    rsi,[rip+0x10dbc]        # 450285 <strcmp@plt+0x4caed>
  43f4c9:	jmp    43f417 <strcmp@plt+0x3bc7f>
  43f4ce:	mov    rbx,QWORD PTR [rsp+0x20]
  43f4d3:	mov    rax,QWORD PTR [rbx+0x38]
  43f4d7:	mov    rdi,QWORD PTR [rbx+0x40]
  43f4db:	mov    rsi,QWORD PTR [rsp+0x18]
  43f4e0:	call   QWORD PTR [rax+0x20]
  43f4e3:	cmp    eax,0x1
  43f4e6:	jne    43f502 <strcmp@plt+0x3bd6a>
  43f4e8:	mov    rax,QWORD PTR [rbx+0x38]
  43f4ec:	mov    rdi,QWORD PTR [rbx+0x40]
  43f4f0:	mov    rsi,QWORD PTR [rsp+0x10]
  43f4f5:	call   QWORD PTR [rax+0x20]
  43f4f8:	mov    ebx,0x1
  43f4fd:	cmp    eax,0x1
  43f500:	je     43f53c <strcmp@plt+0x3bda4>
  43f502:	lea    rax,[rip+0x258b7]        # 464dc0 <strcmp@plt+0x61628>
  43f509:	cmp    DWORD PTR [rax],0x0
  43f50c:	jle    43f54d <strcmp@plt+0x3bdb5>
  43f50e:	lea    rsi,[rip+0x10d99]        # 4502ae <strcmp@plt+0x4cb16>
  43f515:	xor    ebx,ebx
  43f517:	mov    edi,0x5
  43f51c:	jmp    43f535 <strcmp@plt+0x3bd9d>
  43f51e:	lea    rsi,[rip+0x10c89]        # 4501ae <strcmp@plt+0x4ca16>
  43f525:	jmp    43f52e <strcmp@plt+0x3bd96>
  43f527:	lea    rsi,[rip+0x10d13]        # 450241 <strcmp@plt+0x4caa9>
  43f52e:	xor    ebx,ebx
  43f530:	mov    edi,0x2
  43f535:	xor    eax,eax
  43f537:	call   42e520 <strcmp@plt+0x2ad88>
  43f53c:	mov    eax,ebx
  43f53e:	add    rsp,0x28
  43f542:	pop    rbx
  43f543:	pop    r12
  43f545:	pop    r13
  43f547:	pop    r14
  43f549:	pop    r15
  43f54b:	pop    rbp
  43f54c:	ret    
  43f54d:	xor    ebx,ebx
  43f54f:	jmp    43f53c <strcmp@plt+0x3bda4>
  43f551:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f55b:	nop    DWORD PTR [rax+rax*1+0x0]
  43f560:	push   rbp
  43f561:	push   r15
  43f563:	push   r14
  43f565:	push   r13
  43f567:	push   r12
  43f569:	push   rbx
  43f56a:	push   rax
  43f56b:	mov    r14,rsi
  43f56e:	mov    rbx,rdi
  43f571:	lea    rsi,[rip+0x10d73]        # 4502eb <strcmp@plt+0x4cb53>
  43f578:	call   403730 <cfg_size@plt>
  43f57d:	test   eax,eax
  43f57f:	jle    43f5ef <strcmp@plt+0x3be57>
  43f581:	mov    ebp,eax
  43f583:	lea    r15,[rip+0x10d61]        # 4502eb <strcmp@plt+0x4cb53>
  43f58a:	xor    r12d,r12d
  43f58d:	jmp    43f5ae <strcmp@plt+0x3be16>
  43f58f:	nop
  43f590:	mov    edi,0x2
  43f595:	lea    rsi,[rip+0x10d75]        # 450311 <strcmp@plt+0x4cb79>
  43f59c:	mov    rdx,r13
  43f59f:	xor    eax,eax
  43f5a1:	call   42e520 <strcmp@plt+0x2ad88>
  43f5a6:	inc    r12d
  43f5a9:	cmp    ebp,r12d
  43f5ac:	je     43f5ef <strcmp@plt+0x3be57>
  43f5ae:	mov    rdi,rbx
  43f5b1:	mov    rsi,r15
  43f5b4:	mov    edx,r12d
  43f5b7:	call   403120 <cfg_getnstr@plt>
  43f5bc:	test   rax,rax
  43f5bf:	je     43f5a6 <strcmp@plt+0x3be0e>
  43f5c1:	mov    r13,rax
  43f5c4:	mov    rsi,QWORD PTR [r14+0x68]
  43f5c8:	mov    rdi,rax
  43f5cb:	call   405000 <strcmp@plt+0x1868>
  43f5d0:	cmp    eax,0x1
  43f5d3:	jne    43f590 <strcmp@plt+0x3bdf8>
  43f5d5:	lea    rax,[rip+0x257e4]        # 464dc0 <strcmp@plt+0x61628>
  43f5dc:	cmp    DWORD PTR [rax],0x0
  43f5df:	jle    43f5a6 <strcmp@plt+0x3be0e>
  43f5e1:	mov    edi,0x5
  43f5e6:	lea    rsi,[rip+0x10d09]        # 4502f6 <strcmp@plt+0x4cb5e>
  43f5ed:	jmp    43f59c <strcmp@plt+0x3be04>
  43f5ef:	mov    eax,0x1
  43f5f4:	add    rsp,0x8
  43f5f8:	pop    rbx
  43f5f9:	pop    r12
  43f5fb:	pop    r13
  43f5fd:	pop    r14
  43f5ff:	pop    r15
  43f601:	pop    rbp
  43f602:	ret    
  43f603:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f60d:	nop    DWORD PTR [rax]
  43f610:	push   rbp
  43f611:	push   r15
  43f613:	push   r14
  43f615:	push   r13
  43f617:	push   r12
  43f619:	push   rbx
  43f61a:	push   rax
  43f61b:	mov    r15,rsi
  43f61e:	mov    rbp,rdi
  43f621:	lea    rsi,[rip+0x10d17]        # 45033f <strcmp@plt+0x4cba7>
  43f628:	call   403730 <cfg_size@plt>
  43f62d:	mov    r14d,0x1
  43f633:	test   eax,eax
  43f635:	jle    43f6e5 <strcmp@plt+0x3bf4d>
  43f63b:	mov    ebx,eax
  43f63d:	xor    r14d,r14d
  43f640:	jmp    43f658 <strcmp@plt+0x3bec0>
  43f642:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f64c:	nop    DWORD PTR [rax+0x0]
  43f650:	inc    r14d
  43f653:	cmp    ebx,r14d
  43f656:	je     43f6bc <strcmp@plt+0x3bf24>
  43f658:	mov    rdi,rbp
  43f65b:	lea    rsi,[rip+0x10cdd]        # 45033f <strcmp@plt+0x4cba7>
  43f662:	mov    edx,r14d
  43f665:	call   403120 <cfg_getnstr@plt>
  43f66a:	test   rax,rax
  43f66d:	je     43f650 <strcmp@plt+0x3beb8>
  43f66f:	mov    r13,rax
  43f672:	xor    eax,eax
  43f674:	call   422c80 <strcmp@plt+0x1f4e8>
  43f679:	mov    r12,rax
  43f67c:	mov    rdi,r13
  43f67f:	mov    rsi,rax
  43f682:	call   423960 <strcmp@plt+0x201c8>
  43f687:	cmp    eax,0x1
  43f68a:	jne    43f6c4 <strcmp@plt+0x3bf2c>
  43f68c:	mov    rsi,QWORD PTR [r15+0x48]
  43f690:	mov    rdi,r12
  43f693:	call   42baa0 <strcmp@plt+0x28308>
  43f698:	lea    rax,[rip+0x25721]        # 464dc0 <strcmp@plt+0x61628>
  43f69f:	cmp    DWORD PTR [rax],0x0
  43f6a2:	jle    43f650 <strcmp@plt+0x3beb8>
  43f6a4:	mov    edi,0x5
  43f6a9:	lea    rsi,[rip+0x10cc9]        # 450379 <strcmp@plt+0x4cbe1>
  43f6b0:	mov    rdx,r13
  43f6b3:	xor    eax,eax
  43f6b5:	call   42e520 <strcmp@plt+0x2ad88>
  43f6ba:	jmp    43f650 <strcmp@plt+0x3beb8>
  43f6bc:	mov    r14d,0x1
  43f6c2:	jmp    43f6e5 <strcmp@plt+0x3bf4d>
  43f6c4:	mov    rdi,r12
  43f6c7:	call   422c90 <strcmp@plt+0x1f4f8>
  43f6cc:	lea    rsi,[rip+0x10c7d]        # 450350 <strcmp@plt+0x4cbb8>
  43f6d3:	xor    r14d,r14d
  43f6d6:	mov    edi,0x2
  43f6db:	mov    rdx,r13
  43f6de:	xor    eax,eax
  43f6e0:	call   42e520 <strcmp@plt+0x2ad88>
  43f6e5:	mov    eax,r14d
  43f6e8:	add    rsp,0x8
  43f6ec:	pop    rbx
  43f6ed:	pop    r12
  43f6ef:	pop    r13
  43f6f1:	pop    r14
  43f6f3:	pop    r15
  43f6f5:	pop    rbp
  43f6f6:	ret    
  43f6f7:	nop    WORD PTR [rax+rax*1+0x0]
  43f700:	push   rbp
  43f701:	push   r15
  43f703:	push   r14
  43f705:	push   r13
  43f707:	push   r12
  43f709:	push   rbx
  43f70a:	sub    rsp,0x18
  43f70e:	mov    QWORD PTR [rsp+0x8],rdx
  43f713:	mov    r12,rsi
  43f716:	lea    rsi,[rip+0x118d1]        # 450fee <strcmp@plt+0x4d856>
  43f71d:	mov    QWORD PTR [rsp+0x10],rdi
  43f722:	call   403730 <cfg_size@plt>
  43f727:	mov    DWORD PTR [rsp+0x4],eax
  43f72b:	test   eax,eax
  43f72d:	jle    43f82b <strcmp@plt+0x3c093>
  43f733:	xor    r14d,r14d
  43f736:	jmp    43f756 <strcmp@plt+0x3bfbe>
  43f738:	nop    DWORD PTR [rax+rax*1+0x0]
  43f740:	mov    rdi,r15
  43f743:	call   428bd0 <strcmp@plt+0x25438>
  43f748:	inc    r14d
  43f74b:	cmp    DWORD PTR [rsp+0x4],r14d
  43f750:	je     43f82b <strcmp@plt+0x3c093>
  43f756:	mov    rdi,QWORD PTR [rsp+0x10]
  43f75b:	lea    rsi,[rip+0x1188c]        # 450fee <strcmp@plt+0x4d856>
  43f762:	mov    edx,r14d
  43f765:	call   4031f0 <cfg_getnsec@plt>
  43f76a:	mov    rbx,rax
  43f76d:	xor    eax,eax
  43f76f:	call   404740 <strcmp@plt+0xfa8>
  43f774:	mov    rbp,rax
  43f777:	mov    rdi,rbx
  43f77a:	mov    rsi,rax
  43f77d:	mov    edx,0x1
  43f782:	xor    ecx,ecx
  43f784:	call   43ee20 <strcmp@plt+0x3b688>
  43f789:	cmp    eax,0x1
  43f78c:	jne    43f832 <strcmp@plt+0x3c09a>
  43f792:	mov    rdi,r12
  43f795:	mov    rsi,QWORD PTR [rsp+0x8]
  43f79a:	mov    rdx,rbp
  43f79d:	mov    ecx,0x1
  43f7a2:	call   405ed0 <strcmp@plt+0x2738>
  43f7a7:	mov    r15,rax
  43f7aa:	mov    rdi,rbp
  43f7ad:	call   4047e0 <strcmp@plt+0x1048>
  43f7b2:	test   r15,r15
  43f7b5:	je     43f832 <strcmp@plt+0x3c09a>
  43f7b7:	mov    rdi,r15
  43f7ba:	call   431860 <strcmp@plt+0x2e0c8>
  43f7bf:	test   rax,rax
  43f7c2:	je     43f740 <strcmp@plt+0x3bfa8>
  43f7c8:	mov    r13,rax
  43f7cb:	mov    rax,QWORD PTR [r12+0x38]
  43f7d0:	mov    rdi,QWORD PTR [r12+0x40]
  43f7d5:	mov    rsi,r13
  43f7d8:	xor    edx,edx
  43f7da:	call   QWORD PTR [rax+0x10]
  43f7dd:	cmp    eax,0x1
  43f7e0:	jne    43f800 <strcmp@plt+0x3c068>
  43f7e2:	mov    rdi,r13
  43f7e5:	mov    rsi,r12
  43f7e8:	call   4068d0 <strcmp@plt+0x3138>
  43f7ed:	cmp    eax,0x1
  43f7f0:	je     43f748 <strcmp@plt+0x3bfb0>
  43f7f6:	jmp    43f81e <strcmp@plt+0x3c086>
  43f7f8:	nop    DWORD PTR [rax+rax*1+0x0]
  43f800:	mov    rdi,r15
  43f803:	call   422e20 <strcmp@plt+0x1f688>
  43f808:	mov    edi,0x2
  43f80d:	lea    rsi,[rip+0x10b86]        # 45039a <strcmp@plt+0x4cc02>
  43f814:	mov    rdx,rax
  43f817:	xor    eax,eax
  43f819:	call   42e520 <strcmp@plt+0x2ad88>
  43f81e:	mov    rdi,r13
  43f821:	call   431910 <strcmp@plt+0x2e178>
  43f826:	jmp    43f748 <strcmp@plt+0x3bfb0>
  43f82b:	mov    eax,0x1
  43f830:	jmp    43f834 <strcmp@plt+0x3c09c>
  43f832:	xor    eax,eax
  43f834:	add    rsp,0x18
  43f838:	pop    rbx
  43f839:	pop    r12
  43f83b:	pop    r13
  43f83d:	pop    r14
  43f83f:	pop    r15
  43f841:	pop    rbp
  43f842:	ret    
  43f843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43f84d:	nop    DWORD PTR [rax]
  43f850:	push   rbp
  43f851:	push   r15
  43f853:	push   r14
  43f855:	push   r13
  43f857:	push   r12
  43f859:	push   rbx
  43f85a:	sub    rsp,0x18
  43f85e:	mov    QWORD PTR [rsp+0x10],rcx
  43f863:	mov    r12,rdx
  43f866:	mov    QWORD PTR [rsp+0x8],rsi
  43f86b:	mov    r13,rdi
  43f86e:	lea    rdi,[rip+0x92a2]        # 448b17 <strcmp@plt+0x4537f>
  43f875:	call   41fd50 <strcmp@plt+0x1c5b8>
  43f87a:	mov    QWORD PTR [r12+0x20],rax
  43f87f:	lea    rcx,[rip+0x30d22]        # 4705a8 <strcmp@plt+0x6ce10>
  43f886:	mov    rdi,QWORD PTR [rcx]
  43f889:	xor    ebp,ebp
  43f88b:	xor    esi,esi
  43f88d:	call   QWORD PTR [rax]
  43f88f:	mov    QWORD PTR [r12+0x28],rax
  43f894:	lea    rsi,[rip+0x8215]        # 447ab0 <strcmp@plt+0x44318>
  43f89b:	mov    rdi,r13
  43f89e:	call   4032c0 <cfg_getstr@plt>
  43f8a3:	test   rax,rax
  43f8a6:	je     43f920 <strcmp@plt+0x3c188>
  43f8a8:	mov    rdi,rax
  43f8ab:	call   437960 <strcmp@plt+0x341c8>
  43f8b0:	mov    rbx,rax
  43f8b3:	lea    rsi,[rip+0x10b32]        # 4503ec <strcmp@plt+0x4cc54>
  43f8ba:	mov    rdi,rax
  43f8bd:	call   403798 <strcmp@plt>
  43f8c2:	test   eax,eax
  43f8c4:	je     43f8fe <strcmp@plt+0x3c166>
  43f8c6:	lea    rsi,[rip+0x10b24]        # 4503f1 <strcmp@plt+0x4cc59>
  43f8cd:	mov    rdi,rbx
  43f8d0:	call   403798 <strcmp@plt>
  43f8d5:	test   eax,eax
  43f8d7:	je     43f904 <strcmp@plt+0x3c16c>
  43f8d9:	lea    rsi,[rip+0x10b1b]        # 4503fb <strcmp@plt+0x4cc63>
  43f8e0:	xor    ebp,ebp
  43f8e2:	mov    edi,0x2
  43f8e7:	mov    rdx,rbx
  43f8ea:	xor    eax,eax
  43f8ec:	call   42e520 <strcmp@plt+0x2ad88>
  43f8f1:	mov    rdi,rbx
  43f8f4:	call   403790 <free@plt>
  43f8f9:	jmp    43fbdd <strcmp@plt+0x3c445>
  43f8fe:	mov    ax,0x10f5
  43f902:	jmp    43f90d <strcmp@plt+0x3c175>
  43f904:	mov    ax,0x12b6
  43f908:	mov    ebp,0x1
  43f90d:	mov    DWORD PTR [r12+0x40],ebp
  43f912:	mov    WORD PTR [r12+0x44],ax
  43f918:	mov    rdi,rbx
  43f91b:	call   403790 <free@plt>
  43f920:	lea    rsi,[rip+0x10af3]        # 45041a <strcmp@plt+0x4cc82>
  43f927:	mov    rdi,r13
  43f92a:	call   4031b0 <cfg_getint@plt>
  43f92f:	test   eax,eax
  43f931:	mov    ecx,0x3
  43f936:	cmovne ecx,eax
  43f939:	mov    DWORD PTR [r12+0x8],ecx
  43f93e:	lea    rsi,[rip+0x10ae9]        # 45042e <strcmp@plt+0x4cc96>
  43f945:	mov    rdi,r13
  43f948:	xor    edx,edx
  43f94a:	call   4031f0 <cfg_getnsec@plt>
  43f94f:	test   rax,rax
  43f952:	je     43f9af <strcmp@plt+0x3c217>
  43f954:	mov    rbx,rax
  43f957:	lea    rsi,[rip+0x10add]        # 45043b <strcmp@plt+0x4cca3>
  43f95e:	mov    rdi,rax
  43f961:	call   4031b0 <cfg_getint@plt>
  43f966:	lea    r14,[r12+0xc]
  43f96b:	mov    DWORD PTR [r12+0xc],eax
  43f970:	lea    rsi,[rip+0x10ad8]        # 45044f <strcmp@plt+0x4ccb7>
  43f977:	mov    rdi,rbx
  43f97a:	call   4031b0 <cfg_getint@plt>
  43f97f:	lea    rbp,[r12+0x10]
  43f984:	mov    DWORD PTR [r12+0x10],eax
  43f989:	lea    rsi,[rip+0x10ad2]        # 450462 <strcmp@plt+0x4ccca>
  43f990:	mov    rdi,rbx
  43f993:	call   4031b0 <cfg_getint@plt>
  43f998:	lea    rdx,[r12+0x14]
  43f99d:	mov    DWORD PTR [r12+0x14],eax
  43f9a2:	mov    rdi,r14
  43f9a5:	mov    rsi,rbp
  43f9a8:	call   404e70 <strcmp@plt+0x16d8>
  43f9ad:	jmp    43f9eb <strcmp@plt+0x3c253>
  43f9af:	lea    rax,[rip+0x2540a]        # 464dc0 <strcmp@plt+0x61628>
  43f9b6:	cmp    DWORD PTR [rax],0x0
  43f9b9:	jle    43f9d3 <strcmp@plt+0x3c23b>
  43f9bb:	lea    rsi,[rip+0x10abc]        # 45047e <strcmp@plt+0x4cce6>
  43f9c2:	mov    edi,0x5
  43f9c7:	mov    edx,0x1e
  43f9cc:	xor    eax,eax
  43f9ce:	call   42e520 <strcmp@plt+0x2ad88>
  43f9d3:	movabs rax,0x20000001e
  43f9dd:	mov    QWORD PTR [r12+0xc],rax
  43f9e2:	mov    DWORD PTR [r12+0x14],0x5
  43f9eb:	lea    rsi,[rip+0xfa36]        # 44f428 <strcmp@plt+0x4bc90>
  43f9f2:	mov    rdi,r13
  43f9f5:	call   403730 <cfg_size@plt>
  43f9fa:	test   eax,eax
  43f9fc:	jle    43fa70 <strcmp@plt+0x3c2d8>
  43f9fe:	mov    ebp,eax
  43fa00:	lea    rbx,[rip+0xfa21]        # 44f428 <strcmp@plt+0x4bc90>
  43fa07:	xor    r14d,r14d
  43fa0a:	jmp    43fa2e <strcmp@plt+0x3c296>
  43fa0c:	nop    DWORD PTR [rax+0x0]
  43fa10:	mov    edi,0x1
  43fa15:	lea    rsi,[rip+0x10ae5]        # 450501 <strcmp@plt+0x4cd69>
  43fa1c:	mov    rdx,r15
  43fa1f:	xor    eax,eax
  43fa21:	call   42e520 <strcmp@plt+0x2ad88>
  43fa26:	inc    r14d
  43fa29:	cmp    ebp,r14d
  43fa2c:	je     43fa70 <strcmp@plt+0x3c2d8>
  43fa2e:	mov    rdi,r13
  43fa31:	mov    rsi,rbx
  43fa34:	mov    edx,r14d
  43fa37:	call   403120 <cfg_getnstr@plt>
  43fa3c:	test   rax,rax
  43fa3f:	je     43fa26 <strcmp@plt+0x3c28e>
  43fa41:	mov    r15,rax
  43fa44:	mov    rsi,QWORD PTR [r12+0x30]
  43fa49:	mov    rdi,rax
  43fa4c:	call   405000 <strcmp@plt+0x1868>
  43fa51:	cmp    eax,0x1
  43fa54:	jne    43fa10 <strcmp@plt+0x3c278>
  43fa56:	lea    rax,[rip+0x25363]        # 464dc0 <strcmp@plt+0x61628>
  43fa5d:	cmp    DWORD PTR [rax],0x0
  43fa60:	jle    43fa26 <strcmp@plt+0x3c28e>
  43fa62:	mov    edi,0x5
  43fa67:	lea    rsi,[rip+0x10a75]        # 4504e3 <strcmp@plt+0x4cd4b>
  43fa6e:	jmp    43fa1c <strcmp@plt+0x3c284>
  43fa70:	lea    rsi,[rip+0x10aa5]        # 45051c <strcmp@plt+0x4cd84>
  43fa77:	mov    rdi,r13
  43fa7a:	call   403730 <cfg_size@plt>
  43fa7f:	mov    DWORD PTR [rsp+0x4],eax
  43fa83:	test   eax,eax
  43fa85:	jle    43fbaf <strcmp@plt+0x3c417>
  43fa8b:	xor    r14d,r14d
  43fa8e:	jmp    43facb <strcmp@plt+0x3c333>
  43fa90:	mov    rdi,rbx
  43fa93:	lea    rsi,[rip+0x10633]        # 4500cd <strcmp@plt+0x4c935>
  43fa9a:	call   4032c0 <cfg_getstr@plt>
  43fa9f:	mov    edi,0x2
  43faa4:	lea    rsi,[rip+0x10b06]        # 4505b1 <strcmp@plt+0x4ce19>
  43faab:	mov    rdx,rax
  43faae:	xor    eax,eax
  43fab0:	call   42e520 <strcmp@plt+0x2ad88>
  43fab5:	mov    rdi,r15
  43fab8:	call   428bd0 <strcmp@plt+0x25438>
  43fabd:	inc    r14d
  43fac0:	cmp    DWORD PTR [rsp+0x4],r14d
  43fac5:	je     43fbaf <strcmp@plt+0x3c417>
  43facb:	mov    rdi,r13
  43face:	lea    rsi,[rip+0x10a47]        # 45051c <strcmp@plt+0x4cd84>
  43fad5:	mov    edx,r14d
  43fad8:	call   4031f0 <cfg_getnsec@plt>
  43fadd:	mov    rbx,rax
  43fae0:	xor    eax,eax
  43fae2:	call   404740 <strcmp@plt+0xfa8>
  43fae7:	mov    rbp,rax
  43faea:	mov    rdi,rbx
  43faed:	mov    rsi,rax
  43faf0:	xor    edx,edx
  43faf2:	mov    ecx,0x1
  43faf7:	call   43ee20 <strcmp@plt+0x3b688>
  43fafc:	cmp    eax,0x1
  43faff:	jne    43fbb6 <strcmp@plt+0x3c41e>
  43fb05:	mov    rdi,QWORD PTR [rsp+0x8]
  43fb0a:	mov    rsi,QWORD PTR [rsp+0x10]
  43fb0f:	mov    rdx,rbp
  43fb12:	xor    ecx,ecx
  43fb14:	call   405ed0 <strcmp@plt+0x2738>
  43fb19:	mov    r15,rax
  43fb1c:	mov    rdi,rbp
  43fb1f:	call   4047e0 <strcmp@plt+0x1048>
  43fb24:	test   r15,r15
  43fb27:	je     43fbb6 <strcmp@plt+0x3c41e>
  43fb2d:	mov    rdi,QWORD PTR [r12+0x18]
  43fb32:	mov    rsi,r15
  43fb35:	call   408710 <strcmp@plt+0x4f78>
  43fb3a:	test   rax,rax
  43fb3d:	jne    43fa90 <strcmp@plt+0x3c2f8>
  43fb43:	mov    rdi,r12
  43fb46:	mov    rsi,r15
  43fb49:	mov    edx,0x2
  43fb4e:	mov    ecx,0x1
  43fb53:	call   40a930 <strcmp@plt+0x7198>
  43fb58:	test   rax,rax
  43fb5b:	je     43fb9b <strcmp@plt+0x3c403>
  43fb5d:	mov    rdi,r12
  43fb60:	mov    rsi,rax
  43fb63:	call   40aa00 <strcmp@plt+0x7268>
  43fb68:	lea    rax,[rip+0x25251]        # 464dc0 <strcmp@plt+0x61628>
  43fb6f:	cmp    DWORD PTR [rax],0x0
  43fb72:	jle    43fabd <strcmp@plt+0x3c325>
  43fb78:	mov    rdi,r15
  43fb7b:	call   422e20 <strcmp@plt+0x1f688>
  43fb80:	mov    edi,0x5
  43fb85:	lea    rsi,[rip+0x109e4]        # 450570 <strcmp@plt+0x4cdd8>
  43fb8c:	mov    rdx,rax
  43fb8f:	xor    eax,eax
  43fb91:	call   42e520 <strcmp@plt+0x2ad88>
  43fb96:	jmp    43fabd <strcmp@plt+0x3c325>
  43fb9b:	mov    edi,0x2
  43fba0:	lea    rsi,[rip+0x10986]        # 45052d <strcmp@plt+0x4cd95>
  43fba7:	mov    rdx,r15
  43fbaa:	jmp    43faae <strcmp@plt+0x3c316>
  43fbaf:	mov    ebp,0x1
  43fbb4:	jmp    43fbdd <strcmp@plt+0x3c445>
  43fbb6:	lea    rsi,[rip+0x10510]        # 4500cd <strcmp@plt+0x4c935>
  43fbbd:	mov    rdi,rbx
  43fbc0:	call   4032c0 <cfg_getstr@plt>
  43fbc5:	lea    rsi,[rip+0x10961]        # 45052d <strcmp@plt+0x4cd95>
  43fbcc:	xor    ebp,ebp
  43fbce:	mov    edi,0x2
  43fbd3:	mov    rdx,rax
  43fbd6:	xor    eax,eax
  43fbd8:	call   42e520 <strcmp@plt+0x2ad88>
  43fbdd:	mov    eax,ebp
  43fbdf:	add    rsp,0x18
  43fbe3:	pop    rbx
  43fbe4:	pop    r12
  43fbe6:	pop    r13
  43fbe8:	pop    r14
  43fbea:	pop    r15
  43fbec:	pop    rbp
  43fbed:	ret    
  43fbee:	xchg   ax,ax
  43fbf0:	push   rbp
  43fbf1:	push   r15
  43fbf3:	push   r14
  43fbf5:	push   r13
  43fbf7:	push   r12
  43fbf9:	push   rbx
  43fbfa:	sub    rsp,0x28
  43fbfe:	mov    rbp,rdi
  43fc01:	lea    rbx,[rip+0x309a0]        # 4705a8 <strcmp@plt+0x6ce10>
  43fc08:	mov    edi,0x2
  43fc0d:	mov    rsi,rbx
  43fc10:	call   407880 <strcmp@plt+0x40e8>
  43fc15:	cmp    eax,0x1
  43fc18:	jne    43fcb0 <strcmp@plt+0x3c518>
  43fc1e:	mov    rdi,rbp
  43fc21:	call   43ff00 <strcmp@plt+0x3c768>
  43fc26:	mov    r14,rax
  43fc29:	mov    rdi,QWORD PTR [rbx]
  43fc2c:	call   40a080 <strcmp@plt+0x68e8>
  43fc31:	lea    rdx,[rax+0x18]
  43fc35:	mov    rdi,rbp
  43fc38:	mov    QWORD PTR [rsp],rax
  43fc3c:	mov    rsi,rax
  43fc3f:	mov    rcx,r14
  43fc42:	call   43f850 <strcmp@plt+0x3c0b8>
  43fc47:	xor    ebx,ebx
  43fc49:	cmp    eax,0x1
  43fc4c:	jne    43fcc5 <strcmp@plt+0x3c52d>
  43fc4e:	lea    rsi,[rip+0x109d3]        # 450628 <strcmp@plt+0x4ce90>
  43fc55:	mov    rdi,rbp
  43fc58:	call   403730 <cfg_size@plt>
  43fc5d:	test   eax,eax
  43fc5f:	mov    QWORD PTR [rsp+0x18],r14
  43fc64:	je     43fe1e <strcmp@plt+0x3c686>
  43fc6a:	lea    rsi,[rip+0x109b7]        # 450628 <strcmp@plt+0x4ce90>
  43fc71:	mov    rdi,rbp
  43fc74:	call   403280 <cfg_getsec@plt>
  43fc79:	lea    rsi,[rip+0x109b3]        # 450633 <strcmp@plt+0x4ce9b>
  43fc80:	mov    QWORD PTR [rsp+0x20],rax
  43fc85:	mov    rdi,rax
  43fc88:	call   403730 <cfg_size@plt>
  43fc8d:	mov    DWORD PTR [rsp+0xc],eax
  43fc91:	test   eax,eax
  43fc93:	mov    QWORD PTR [rsp+0x10],rbp
  43fc98:	je     43fdc4 <strcmp@plt+0x3c62c>
  43fc9e:	jle    43fdd7 <strcmp@plt+0x3c63f>
  43fca4:	lea    r15,[rip+0x109c2]        # 45066d <strcmp@plt+0x4ced5>
  43fcab:	xor    r13d,r13d
  43fcae:	jmp    43fd0f <strcmp@plt+0x3c577>
  43fcb0:	lea    rsi,[rip+0x10951]        # 450608 <strcmp@plt+0x4ce70>
  43fcb7:	xor    ebx,ebx
  43fcb9:	mov    edi,0x1
  43fcbe:	xor    eax,eax
  43fcc0:	call   42e520 <strcmp@plt+0x2ad88>
  43fcc5:	mov    eax,ebx
  43fcc7:	add    rsp,0x28
  43fccb:	pop    rbx
  43fccc:	pop    r12
  43fcce:	pop    r13
  43fcd0:	pop    r14
  43fcd2:	pop    r15
  43fcd4:	pop    rbp
  43fcd5:	ret    
  43fcd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fce0:	mov    rdi,r12
  43fce3:	mov    rsi,r15
  43fce6:	call   4032c0 <cfg_getstr@plt>
  43fceb:	mov    edi,0x2
  43fcf0:	lea    rsi,[rip+0x109d8]        # 4506cf <strcmp@plt+0x4cf37>
  43fcf7:	mov    rdx,rax
  43fcfa:	xor    eax,eax
  43fcfc:	call   42e520 <strcmp@plt+0x2ad88>
  43fd01:	inc    r13d
  43fd04:	cmp    DWORD PTR [rsp+0xc],r13d
  43fd09:	je     43fdd7 <strcmp@plt+0x3c63f>
  43fd0f:	mov    rdi,QWORD PTR [rsp+0x20]
  43fd14:	lea    rsi,[rip+0x10918]        # 450633 <strcmp@plt+0x4ce9b>
  43fd1b:	mov    edx,r13d
  43fd1e:	call   4031f0 <cfg_getnsec@plt>
  43fd23:	mov    r12,rax
  43fd26:	mov    rdi,rax
  43fd29:	mov    rsi,r15
  43fd2c:	call   4032c0 <cfg_getstr@plt>
  43fd31:	test   rax,rax
  43fd34:	je     43fec8 <strcmp@plt+0x3c730>
  43fd3a:	mov    rdi,r12
  43fd3d:	mov    rsi,r15
  43fd40:	call   4032c0 <cfg_getstr@plt>
  43fd45:	mov    rbp,rax
  43fd48:	mov    rdi,r12
  43fd4b:	lea    rsi,[rip+0x103ce]        # 450120 <strcmp@plt+0x4c988>
  43fd52:	call   4031b0 <cfg_getint@plt>
  43fd57:	mov    rbx,rax
  43fd5a:	mov    rdi,r12
  43fd5d:	lea    rsi,[rip+0x2dbb]        # 442b1f <strcmp@plt+0x3f387>
  43fd64:	call   4031b0 <cfg_getint@plt>
  43fd69:	mov    r14,rax
  43fd6c:	mov    rdi,r12
  43fd6f:	lea    rsi,[rip+0xf382]        # 44f0f8 <strcmp@plt+0x4b960>
  43fd76:	call   4031b0 <cfg_getint@plt>
  43fd7b:	mov    rdi,QWORD PTR [rsp]
  43fd7f:	mov    rsi,rbp
  43fd82:	mov    edx,ebx
  43fd84:	mov    ecx,r14d
  43fd87:	mov    r8d,eax
  43fd8a:	call   405590 <strcmp@plt+0x1df8>
  43fd8f:	cmp    eax,0x1
  43fd92:	jne    43fce0 <strcmp@plt+0x3c548>
  43fd98:	lea    rax,[rip+0x25021]        # 464dc0 <strcmp@plt+0x61628>
  43fd9f:	cmp    DWORD PTR [rax],0x0
  43fda2:	jle    43fd01 <strcmp@plt+0x3c569>
  43fda8:	mov    rdi,r12
  43fdab:	mov    rsi,r15
  43fdae:	call   4032c0 <cfg_getstr@plt>
  43fdb3:	mov    edi,0x5
  43fdb8:	lea    rsi,[rip+0x108f0]        # 4506af <strcmp@plt+0x4cf17>
  43fdbf:	jmp    43fcf7 <strcmp@plt+0x3c55f>
  43fdc4:	lea    rsi,[rip+0x10872]        # 45063d <strcmp@plt+0x4cea5>
  43fdcb:	mov    edi,0x2
  43fdd0:	xor    eax,eax
  43fdd2:	call   42e520 <strcmp@plt+0x2ad88>
  43fdd7:	mov    rax,QWORD PTR [rsp]
  43fddb:	mov    rax,QWORD PTR [rax+0x68]
  43fddf:	cmp    QWORD PTR [rax+0x8],0x0
  43fde4:	mov    rbp,QWORD PTR [rsp+0x10]
  43fde9:	jne    43fe1e <strcmp@plt+0x3c686>
  43fdeb:	lea    rsi,[rip+0x108fe]        # 4506f0 <strcmp@plt+0x4cf58>
  43fdf2:	xor    ebx,ebx
  43fdf4:	mov    edi,0x2
  43fdf9:	xor    eax,eax
  43fdfb:	call   42e520 <strcmp@plt+0x2ad88>
  43fe00:	mov    rcx,QWORD PTR [rsp]
  43fe04:	mov    rax,QWORD PTR [rcx+0x38]
  43fe08:	mov    rdi,QWORD PTR [rcx+0x40]
  43fe0c:	mov    rsi,QWORD PTR [rcx+0x68]
  43fe10:	xor    edx,edx
  43fe12:	call   QWORD PTR [rax+0x10]
  43fe15:	cmp    eax,0x1
  43fe18:	jne    43fedb <strcmp@plt+0x3c743>
  43fe1e:	lea    rsi,[rip+0x10917]        # 45073c <strcmp@plt+0x4cfa4>
  43fe25:	mov    rdi,rbp
  43fe28:	call   403730 <cfg_size@plt>
  43fe2d:	test   eax,eax
  43fe2f:	jle    43fead <strcmp@plt+0x3c715>
  43fe31:	mov    ebx,eax
  43fe33:	xor    r12d,r12d
  43fe36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  43fe40:	mov    r14,rbp
  43fe43:	mov    rdi,rbp
  43fe46:	lea    rsi,[rip+0x108ef]        # 45073c <strcmp@plt+0x4cfa4>
  43fe4d:	mov    edx,r12d
  43fe50:	call   4031f0 <cfg_getnsec@plt>
  43fe55:	mov    rbp,rax
  43fe58:	mov    rdi,rax
  43fe5b:	lea    rsi,[rip+0x5cba]        # 445b1c <strcmp@plt+0x42384>
  43fe62:	call   4032c0 <cfg_getstr@plt>
  43fe67:	mov    r13,rax
  43fe6a:	mov    rdi,rbp
  43fe6d:	lea    rsi,[rip+0x3155]        # 442fc9 <strcmp@plt+0x3f831>
  43fe74:	call   4032c0 <cfg_getstr@plt>
  43fe79:	mov    r15,rax
  43fe7c:	mov    rdi,rbp
  43fe7f:	lea    rsi,[rip+0x108c2]        # 450748 <strcmp@plt+0x4cfb0>
  43fe86:	call   4032c0 <cfg_getstr@plt>
  43fe8b:	mov    rdi,QWORD PTR [rsp]
  43fe8f:	mov    rsi,r13
  43fe92:	mov    rdx,r15
  43fe95:	mov    rcx,rax
  43fe98:	call   406d50 <strcmp@plt+0x35b8>
  43fe9d:	cmp    eax,0x1
  43fea0:	jne    43fec1 <strcmp@plt+0x3c729>
  43fea2:	inc    r12d
  43fea5:	cmp    ebx,r12d
  43fea8:	mov    rbp,r14
  43feab:	jne    43fe40 <strcmp@plt+0x3c6a8>
  43fead:	mov    rdi,QWORD PTR [rsp+0x18]
  43feb2:	call   436460 <strcmp@plt+0x32cc8>
  43feb7:	mov    ebx,0x1
  43febc:	jmp    43fcc5 <strcmp@plt+0x3c52d>
  43fec1:	xor    ebx,ebx
  43fec3:	jmp    43fcc5 <strcmp@plt+0x3c52d>
  43fec8:	lea    rsi,[rip+0x107a4]        # 450673 <strcmp@plt+0x4cedb>
  43fecf:	xor    ebx,ebx
  43fed1:	mov    edi,0x2
  43fed6:	jmp    43fcbe <strcmp@plt+0x3c526>
  43fedb:	lea    rsi,[rip+0x2d01]        # 442be3 <strcmp@plt+0x3f44b>
  43fee2:	mov    edi,0x2
  43fee7:	xor    eax,eax
  43fee9:	call   42e520 <strcmp@plt+0x2ad88>
  43feee:	mov    rax,QWORD PTR [rsp]
  43fef2:	mov    rdi,QWORD PTR [rax+0x68]
  43fef6:	call   431910 <strcmp@plt+0x2e178>
  43fefb:	jmp    43fcc5 <strcmp@plt+0x3c52d>
  43ff00:	push   rbp
  43ff01:	push   r15
  43ff03:	push   r14
  43ff05:	push   r13
  43ff07:	push   r12
  43ff09:	push   rbx
  43ff0a:	sub    rsp,0x28
  43ff0e:	mov    r12,rdi
  43ff11:	lea    rdi,[rip+0xfffffffffffe2d78]        # 422c90 <strcmp@plt+0x1f4f8>
  43ff18:	call   435e70 <strcmp@plt+0x326d8>
  43ff1d:	mov    QWORD PTR [rsp+0x10],rax
  43ff22:	lea    rsi,[rip+0xf0d1]        # 44effa <strcmp@plt+0x4b862>
  43ff29:	mov    rdi,r12
  43ff2c:	call   403730 <cfg_size@plt>
  43ff31:	test   eax,eax
  43ff33:	mov    QWORD PTR [rsp+0x18],r12
  43ff38:	je     4401e9 <strcmp@plt+0x3ca51>
  43ff3e:	lea    r15,[rip+0xf0b5]        # 44effa <strcmp@plt+0x4b862>
  43ff45:	lea    r14,[rip+0x11035]        # 450f81 <strcmp@plt+0x4d7e9>
  43ff4c:	xor    ebx,ebx
  43ff4e:	jmp    43ff78 <strcmp@plt+0x3c7e0>
  43ff50:	mov    edi,0x3
  43ff55:	lea    rsi,[rip+0x1125a]        # 4511b6 <strcmp@plt+0x4da1e>
  43ff5c:	xor    eax,eax
  43ff5e:	call   42e520 <strcmp@plt+0x2ad88>
  43ff63:	inc    ebx
  43ff65:	mov    rdi,r12
  43ff68:	mov    rsi,r15
  43ff6b:	call   403730 <cfg_size@plt>
  43ff70:	cmp    ebx,eax
  43ff72:	jae    4401e9 <strcmp@plt+0x3ca51>
  43ff78:	mov    rdi,r12
  43ff7b:	mov    rsi,r15
  43ff7e:	mov    edx,ebx
  43ff80:	call   4031f0 <cfg_getnsec@plt>
  43ff85:	mov    r13,rax
  43ff88:	mov    rdi,rax
  43ff8b:	mov    rsi,r14
  43ff8e:	call   4032c0 <cfg_getstr@plt>
  43ff93:	test   rax,rax
  43ff96:	je     43ff50 <strcmp@plt+0x3c7b8>
  43ff98:	mov    QWORD PTR [rsp+0x20],rax
  43ff9d:	mov    rdi,r13
  43ffa0:	lea    rbp,[rip+0x10fe3]        # 450f8a <strcmp@plt+0x4d7f2>
  43ffa7:	mov    rsi,rbp
  43ffaa:	call   403730 <cfg_size@plt>
  43ffaf:	test   eax,eax
  43ffb1:	je     4401a0 <strcmp@plt+0x3ca08>
  43ffb7:	mov    DWORD PTR [rsp+0x8],ebx
  43ffbb:	xor    eax,eax
  43ffbd:	call   427f10 <strcmp@plt+0x24778>
  43ffc2:	mov    QWORD PTR [rsp],rax
  43ffc6:	mov    rdi,r13
  43ffc9:	mov    rsi,rbp
  43ffcc:	call   403730 <cfg_size@plt>
  43ffd1:	test   eax,eax
  43ffd3:	lea    r12,[rip+0x5b42]        # 445b1c <strcmp@plt+0x42384>
  43ffda:	je     440110 <strcmp@plt+0x3c978>
  43ffe0:	mov    rbx,rbp
  43ffe3:	xor    r15d,r15d
  43ffe6:	jmp    44007b <strcmp@plt+0x3c8e3>
  43ffeb:	nop    DWORD PTR [rax+rax*1+0x0]
  43fff0:	mov    rdi,r14
  43fff3:	lea    rsi,[rip+0xf023]        # 44f01d <strcmp@plt+0x4b885>
  43fffa:	call   403350 <cfg_getbool@plt>
  43ffff:	test   eax,eax
  440001:	setne  al
  440004:	movzx  ecx,BYTE PTR [rbp+0x0]
  440008:	and    cl,0xfe
  44000b:	or     cl,al
  44000d:	mov    BYTE PTR [rbp+0x0],cl
  440010:	mov    rdi,r14
  440013:	lea    rsi,[rip+0x4771]        # 44478b <strcmp@plt+0x40ff3>
  44001a:	call   403350 <cfg_getbool@plt>
  44001f:	test   eax,eax
  440021:	setne  al
  440024:	movzx  ecx,BYTE PTR [rbp+0x0]
  440028:	add    al,al
  44002a:	and    cl,0xfd
  44002d:	or     cl,al
  44002f:	mov    BYTE PTR [rbp+0x0],cl
  440032:	mov    rdi,r14
  440035:	lea    rsi,[rip+0xeff3]        # 44f02f <strcmp@plt+0x4b897>
  44003c:	call   403350 <cfg_getbool@plt>
  440041:	test   eax,eax
  440043:	setne  al
  440046:	movzx  ecx,BYTE PTR [rbp+0x0]
  44004a:	shl    al,0x2
  44004d:	and    cl,0xfb
  440050:	or     cl,al
  440052:	mov    BYTE PTR [rbp+0x0],cl
  440055:	mov    rax,QWORD PTR [rsp]
  440059:	mov    rsi,QWORD PTR [rax]
  44005c:	mov    rdi,rbp
  44005f:	call   42bbd0 <strcmp@plt+0x28438>
  440064:	inc    r15d
  440067:	mov    rdi,r13
  44006a:	mov    rsi,rbx
  44006d:	call   403730 <cfg_size@plt>
  440072:	cmp    r15d,eax
  440075:	jae    440110 <strcmp@plt+0x3c978>
  44007b:	mov    rdi,r13
  44007e:	mov    rsi,rbx
  440081:	mov    edx,r15d
  440084:	call   4031f0 <cfg_getnsec@plt>
  440089:	mov    r14,rax
  44008c:	mov    rdi,rax
  44008f:	mov    rsi,r12
  440092:	call   4032c0 <cfg_getstr@plt>
  440097:	test   rax,rax
  44009a:	je     4401b1 <strcmp@plt+0x3ca19>
  4400a0:	mov    edi,0x10
  4400a5:	call   431d60 <strcmp@plt+0x2e5c8>
  4400aa:	mov    rbp,rax
  4400ad:	xor    eax,eax
  4400af:	call   422c80 <strcmp@plt+0x1f4e8>
  4400b4:	mov    QWORD PTR [rbp+0x8],rax
  4400b8:	mov    rdi,r14
  4400bb:	mov    rsi,r12
  4400be:	call   4032c0 <cfg_getstr@plt>
  4400c3:	mov    rsi,QWORD PTR [rbp+0x8]
  4400c7:	mov    rdi,rax
  4400ca:	call   423940 <strcmp@plt+0x201a8>
  4400cf:	cmp    eax,0x1
  4400d2:	je     43fff0 <strcmp@plt+0x3c858>
  4400d8:	mov    rdi,rbp
  4400db:	call   427f40 <strcmp@plt+0x247a8>
  4400e0:	mov    rdi,r14
  4400e3:	mov    rsi,r12
  4400e6:	call   4032c0 <cfg_getstr@plt>
  4400eb:	mov    edi,0x3
  4400f0:	lea    rsi,[rip+0x111b2]        # 4512a9 <strcmp@plt+0x4db11>
  4400f7:	mov    rdx,rax
  4400fa:	xor    eax,eax
  4400fc:	call   42e520 <strcmp@plt+0x2ad88>
  440101:	jmp    440064 <strcmp@plt+0x3c8cc>
  440106:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440110:	mov    edi,0x3
  440115:	call   422be0 <strcmp@plt+0x1f448>
  44011a:	mov    r14,rax
  44011d:	mov    rdi,rax
  440120:	mov    esi,0xa
  440125:	call   423840 <strcmp@plt+0x200a8>
  44012a:	mov    rdi,r14
  44012d:	mov    rsi,QWORD PTR [rsp]
  440131:	call   423820 <strcmp@plt+0x20088>
  440136:	lea    rax,[rip+0x24c83]        # 464dc0 <strcmp@plt+0x61628>
  44013d:	cmp    DWORD PTR [rax],0x0
  440140:	mov    r12,QWORD PTR [rsp+0x18]
  440145:	lea    r15,[rip+0xeeae]        # 44effa <strcmp@plt+0x4b862>
  44014c:	mov    ebx,DWORD PTR [rsp+0x8]
  440150:	jle    440170 <strcmp@plt+0x3c9d8>
  440152:	mov    rdi,r14
  440155:	call   422e20 <strcmp@plt+0x1f688>
  44015a:	mov    edi,0x5
  44015f:	lea    rsi,[rip+0x11172]        # 4512d8 <strcmp@plt+0x4db40>
  440166:	mov    rdx,rax
  440169:	xor    eax,eax
  44016b:	call   42e520 <strcmp@plt+0x2ad88>
  440170:	mov    rdi,QWORD PTR [rsp+0x20]
  440175:	call   403710 <strdup@plt>
  44017a:	mov    rdi,QWORD PTR [rsp+0x10]
  44017f:	mov    rsi,rax
  440182:	mov    rdx,r14
  440185:	call   435eb0 <strcmp@plt+0x32718>
  44018a:	lea    r14,[rip+0x10df0]        # 450f81 <strcmp@plt+0x4d7e9>
  440191:	jmp    43ff63 <strcmp@plt+0x3c7cb>
  440196:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4401a0:	mov    edi,0x3
  4401a5:	lea    rsi,[rip+0x11059]        # 451205 <strcmp@plt+0x4da6d>
  4401ac:	jmp    43ff5c <strcmp@plt+0x3c7c4>
  4401b1:	mov    edi,0x3
  4401b6:	lea    rsi,[rip+0x1109e]        # 45125b <strcmp@plt+0x4dac3>
  4401bd:	xor    eax,eax
  4401bf:	call   42e520 <strcmp@plt+0x2ad88>
  4401c4:	mov    rdi,QWORD PTR [rsp]
  4401c8:	call   424820 <strcmp@plt+0x21088>
  4401cd:	mov    r12,QWORD PTR [rsp+0x18]
  4401d2:	lea    r15,[rip+0xee21]        # 44effa <strcmp@plt+0x4b862>
  4401d9:	lea    r14,[rip+0x10da1]        # 450f81 <strcmp@plt+0x4d7e9>
  4401e0:	mov    ebx,DWORD PTR [rsp+0x8]
  4401e4:	jmp    43ff63 <strcmp@plt+0x3c7cb>
  4401e9:	lea    rsi,[rip+0x10e69]        # 451059 <strcmp@plt+0x4d8c1>
  4401f0:	mov    rdi,r12
  4401f3:	call   403730 <cfg_size@plt>
  4401f8:	test   eax,eax
  4401fa:	je     4403b3 <strcmp@plt+0x3cc1b>
  440200:	lea    rbx,[rip+0x10e52]        # 451059 <strcmp@plt+0x4d8c1>
  440207:	xor    ebp,ebp
  440209:	jmp    44024e <strcmp@plt+0x3cab6>
  44020b:	nop    DWORD PTR [rax+rax*1+0x0]
  440210:	mov    rdi,QWORD PTR [rsp+0x8]
  440215:	call   403710 <strdup@plt>
  44021a:	mov    rdi,QWORD PTR [rsp+0x10]
  44021f:	mov    rsi,rax
  440222:	mov    rdx,rbp
  440225:	call   435eb0 <strcmp@plt+0x32718>
  44022a:	mov    ebp,DWORD PTR [rsp]
  44022d:	inc    ebp
  44022f:	mov    r12,QWORD PTR [rsp+0x18]
  440234:	mov    rdi,r12
  440237:	lea    rbx,[rip+0x10e1b]        # 451059 <strcmp@plt+0x4d8c1>
  44023e:	mov    rsi,rbx
  440241:	call   403730 <cfg_size@plt>
  440246:	cmp    ebp,eax
  440248:	jae    4403b3 <strcmp@plt+0x3cc1b>
  44024e:	mov    rdi,r12
  440251:	mov    rsi,rbx
  440254:	mov    DWORD PTR [rsp],ebp
  440257:	mov    edx,ebp
  440259:	call   4031f0 <cfg_getnsec@plt>
  44025e:	mov    r14,rax
  440261:	mov    rdi,rax
  440264:	lea    rsi,[rip+0x10d2e]        # 450f99 <strcmp@plt+0x4d801>
  44026b:	call   4032c0 <cfg_getstr@plt>
  440270:	mov    QWORD PTR [rsp+0x8],rax
  440275:	mov    edi,0x3
  44027a:	call   422be0 <strcmp@plt+0x1f448>
  44027f:	mov    QWORD PTR [rsp+0x20],rax
  440284:	mov    rdi,rax
  440287:	mov    esi,0xd
  44028c:	call   423840 <strcmp@plt+0x200a8>
  440291:	xor    eax,eax
  440293:	call   4280b0 <strcmp@plt+0x24918>
  440298:	mov    rbx,rax
  44029b:	mov    rdi,r14
  44029e:	lea    rbp,[rip+0x10cfd]        # 450fa2 <strcmp@plt+0x4d80a>
  4402a5:	mov    rsi,rbp
  4402a8:	call   403730 <cfg_size@plt>
  4402ad:	test   eax,eax
  4402af:	je     440370 <strcmp@plt+0x3cbd8>
  4402b5:	xor    r12d,r12d
  4402b8:	jmp    4402f1 <strcmp@plt+0x3cb59>
  4402ba:	nop    WORD PTR [rax+rax*1+0x0]
  4402c0:	mov    rdi,r13
  4402c3:	lea    rsi,[rip+0x10cc9]        # 450f93 <strcmp@plt+0x4d7fb>
  4402ca:	call   4031b0 <cfg_getint@plt>
  4402cf:	mov    BYTE PTR [r15+0x8],al
  4402d3:	mov    rsi,QWORD PTR [rbx]
  4402d6:	mov    rdi,r15
  4402d9:	call   42bbd0 <strcmp@plt+0x28438>
  4402de:	inc    r12d
  4402e1:	mov    rdi,r14
  4402e4:	mov    rsi,rbp
  4402e7:	call   403730 <cfg_size@plt>
  4402ec:	cmp    r12d,eax
  4402ef:	jae    440370 <strcmp@plt+0x3cbd8>
  4402f1:	mov    rdi,r14
  4402f4:	mov    rsi,rbp
  4402f7:	mov    edx,r12d
  4402fa:	call   4031f0 <cfg_getnsec@plt>
  4402ff:	mov    r13,rax
  440302:	xor    eax,eax
  440304:	call   428140 <strcmp@plt+0x249a8>
  440309:	mov    r15,rax
  44030c:	mov    rdi,r13
  44030f:	lea    rsi,[rip+0x5806]        # 445b1c <strcmp@plt+0x42384>
  440316:	call   4032c0 <cfg_getstr@plt>
  44031b:	mov    rsi,QWORD PTR [r15]
  44031e:	mov    rdi,rax
  440321:	call   423940 <strcmp@plt+0x201a8>
  440326:	cmp    eax,0x1
  440329:	je     4402c0 <strcmp@plt+0x3cb28>
  44032b:	mov    rdi,r15
  44032e:	call   4280e0 <strcmp@plt+0x24948>
  440333:	lea    rax,[rip+0x24a86]        # 464dc0 <strcmp@plt+0x61628>
  44033a:	cmp    DWORD PTR [rax],0x0
  44033d:	jle    4402c0 <strcmp@plt+0x3cb28>
  44033f:	mov    rdi,r13
  440342:	lea    rsi,[rip+0x57d3]        # 445b1c <strcmp@plt+0x42384>
  440349:	call   4032c0 <cfg_getstr@plt>
  44034e:	mov    edi,0x5
  440353:	lea    rsi,[rip+0x10fb3]        # 45130d <strcmp@plt+0x4db75>
  44035a:	mov    rdx,rax
  44035d:	xor    eax,eax
  44035f:	call   42e520 <strcmp@plt+0x2ad88>
  440364:	jmp    4402c0 <strcmp@plt+0x3cb28>
  440369:	nop    DWORD PTR [rax+0x0]
  440370:	mov    rbp,QWORD PTR [rsp+0x20]
  440375:	mov    rdi,rbp
  440378:	mov    rsi,rbx
  44037b:	call   423820 <strcmp@plt+0x20088>
  440380:	lea    rax,[rip+0x24a39]        # 464dc0 <strcmp@plt+0x61628>
  440387:	cmp    DWORD PTR [rax],0x0
  44038a:	jle    440210 <strcmp@plt+0x3ca78>
  440390:	mov    rdi,rbp
  440393:	call   422e20 <strcmp@plt+0x1f688>
  440398:	mov    edi,0x5
  44039d:	lea    rsi,[rip+0x10f94]        # 451338 <strcmp@plt+0x4dba0>
  4403a4:	mov    rdx,rax
  4403a7:	xor    eax,eax
  4403a9:	call   42e520 <strcmp@plt+0x2ad88>
  4403ae:	jmp    440210 <strcmp@plt+0x3ca78>
  4403b3:	lea    rsi,[rip+0x10cb0]        # 45106a <strcmp@plt+0x4d8d2>
  4403ba:	mov    rdi,r12
  4403bd:	call   403730 <cfg_size@plt>
  4403c2:	test   eax,eax
  4403c4:	je     440519 <strcmp@plt+0x3cd81>
  4403ca:	lea    rbx,[rip+0x10c99]        # 45106a <strcmp@plt+0x4d8d2>
  4403d1:	xor    r15d,r15d
  4403d4:	jmp    440414 <strcmp@plt+0x3cc7c>
  4403d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4403e0:	mov    rdi,r13
  4403e3:	call   403710 <strdup@plt>
  4403e8:	mov    rdi,QWORD PTR [rsp+0x10]
  4403ed:	mov    rsi,rax
  4403f0:	mov    rdx,r12
  4403f3:	call   435eb0 <strcmp@plt+0x32718>
  4403f8:	inc    r15d
  4403fb:	mov    r12,QWORD PTR [rsp+0x18]
  440400:	mov    rdi,r12
  440403:	mov    rsi,rbx
  440406:	call   403730 <cfg_size@plt>
  44040b:	cmp    r15d,eax
  44040e:	jae    440506 <strcmp@plt+0x3cd6e>
  440414:	mov    rdi,r12
  440417:	mov    rsi,rbx
  44041a:	mov    edx,r15d
  44041d:	call   4031f0 <cfg_getnsec@plt>
  440422:	mov    rbp,rax
  440425:	mov    rdi,rax
  440428:	lea    rsi,[rip+0x10b7c]        # 450fab <strcmp@plt+0x4d813>
  44042f:	call   4032c0 <cfg_getstr@plt>
  440434:	mov    r13,rax
  440437:	mov    edi,0x3
  44043c:	call   422be0 <strcmp@plt+0x1f448>
  440441:	mov    r12,rax
  440444:	mov    rdi,rax
  440447:	mov    esi,0x9
  44044c:	call   423840 <strcmp@plt+0x200a8>
  440451:	xor    eax,eax
  440453:	call   427100 <strcmp@plt+0x23968>
  440458:	mov    r14,rax
  44045b:	mov    rdi,rbp
  44045e:	lea    rsi,[rip+0x10b53]        # 450fb8 <strcmp@plt+0x4d820>
  440465:	call   4032c0 <cfg_getstr@plt>
  44046a:	mov    rsi,QWORD PTR [r14+0x8]
  44046e:	mov    rdi,rax
  440471:	call   423940 <strcmp@plt+0x201a8>
  440476:	mov    rdi,rbp
  440479:	lea    rsi,[rip+0x10b3f]        # 450fbf <strcmp@plt+0x4d827>
  440480:	call   4031b0 <cfg_getint@plt>
  440485:	mov    BYTE PTR [r14],al
  440488:	mov    rdi,rbp
  44048b:	lea    rsi,[rip+0x10b40]        # 450fd2 <strcmp@plt+0x4d83a>
  440492:	call   4032c0 <cfg_getstr@plt>
  440497:	mov    rsi,QWORD PTR [r14+0x10]
  44049b:	mov    rdi,rax
  44049e:	call   423940 <strcmp@plt+0x201a8>
  4404a3:	mov    rdi,rbp
  4404a6:	lea    rsi,[rip+0x10b2b]        # 450fd8 <strcmp@plt+0x4d840>
  4404ad:	call   4031b0 <cfg_getint@plt>
  4404b2:	mov    BYTE PTR [r14],al
  4404b5:	mov    rdi,rbp
  4404b8:	lea    rsi,[rip+0xbec3]        # 44c382 <strcmp@plt+0x48bea>
  4404bf:	call   4031b0 <cfg_getint@plt>
  4404c4:	mov    DWORD PTR [r14+0x4],eax
  4404c8:	mov    rdi,r12
  4404cb:	mov    rsi,r14
  4404ce:	call   423820 <strcmp@plt+0x20088>
  4404d3:	lea    rax,[rip+0x248e6]        # 464dc0 <strcmp@plt+0x61628>
  4404da:	cmp    DWORD PTR [rax],0x0
  4404dd:	jle    4403e0 <strcmp@plt+0x3cc48>
  4404e3:	mov    rdi,r12
  4404e6:	call   422e20 <strcmp@plt+0x1f688>
  4404eb:	mov    edi,0x5
  4404f0:	lea    rsi,[rip+0x10e71]        # 451368 <strcmp@plt+0x4dbd0>
  4404f7:	mov    rdx,rax
  4404fa:	xor    eax,eax
  4404fc:	call   42e520 <strcmp@plt+0x2ad88>
  440501:	jmp    4403e0 <strcmp@plt+0x3cc48>
  440506:	lea    rsi,[rip+0x10e89]        # 451396 <strcmp@plt+0x4dbfe>
  44050d:	mov    edi,0x4
  440512:	xor    eax,eax
  440514:	call   42e520 <strcmp@plt+0x2ad88>
  440519:	mov    rax,QWORD PTR [rsp+0x10]
  44051e:	add    rsp,0x28
  440522:	pop    rbx
  440523:	pop    r12
  440525:	pop    r13
  440527:	pop    r14
  440529:	pop    r15
  44052b:	pop    rbp
  44052c:	ret    
  44052d:	nop    DWORD PTR [rax]
  440530:	push   rbp
  440531:	push   r15
  440533:	push   r14
  440535:	push   r12
  440537:	push   rbx
  440538:	mov    r12,rdi
  44053b:	lea    rbx,[rip+0x30066]        # 4705a8 <strcmp@plt+0x6ce10>
  440542:	xor    edi,edi
  440544:	mov    rsi,rbx
  440547:	call   407880 <strcmp@plt+0x40e8>
  44054c:	cmp    eax,0x1
  44054f:	je     44056b <strcmp@plt+0x3cdd3>
  440551:	lea    rsi,[rip+0x101fe]        # 450756 <strcmp@plt+0x4cfbe>
  440558:	mov    edi,0x1
  44055d:	xor    eax,eax
  44055f:	call   42e520 <strcmp@plt+0x2ad88>
  440564:	xor    eax,eax
  440566:	call   43aeb0 <strcmp@plt+0x37718>
  44056b:	mov    rdi,r12
  44056e:	call   43ff00 <strcmp@plt+0x3c768>
  440573:	mov    r14,rax
  440576:	mov    rdi,QWORD PTR [rbx]
  440579:	call   40e830 <strcmp@plt+0xb098>
  44057e:	mov    rbx,rax
  440581:	mov    r15,rax
  440584:	lea    rsi,[rip+0x101eb]        # 450776 <strcmp@plt+0x4cfde>
  44058b:	mov    rdi,r12
  44058e:	call   403350 <cfg_getbool@plt>
  440593:	xor    ecx,ecx
  440595:	test   eax,eax
  440597:	setne  cl
  44059a:	mov    DWORD PTR [rbx+0x80],ecx
  4405a0:	je     4405ce <strcmp@plt+0x3ce36>
  4405a2:	lea    rax,[rip+0x2ff67]        # 470510 <strcmp@plt+0x6cd78>
  4405a9:	mov    DWORD PTR [rax],0x2
  4405af:	lea    rax,[rip+0x2480a]        # 464dc0 <strcmp@plt+0x61628>
  4405b6:	cmp    DWORD PTR [rax],0x0
  4405b9:	jle    4405ce <strcmp@plt+0x3ce36>
  4405bb:	lea    rsi,[rip+0x101ca]        # 45078c <strcmp@plt+0x4cff4>
  4405c2:	mov    edi,0x5
  4405c7:	xor    eax,eax
  4405c9:	call   42e520 <strcmp@plt+0x2ad88>
  4405ce:	add    rbx,0x18
  4405d2:	mov    rdi,r12
  4405d5:	mov    rsi,r15
  4405d8:	mov    rdx,rbx
  4405db:	mov    rcx,r14
  4405de:	call   43f850 <strcmp@plt+0x3c0b8>
  4405e3:	xor    ebp,ebp
  4405e5:	cmp    eax,0x1
  4405e8:	jne    440672 <strcmp@plt+0x3ceda>
  4405ee:	mov    rdi,r12
  4405f1:	mov    rsi,r15
  4405f4:	call   43f150 <strcmp@plt+0x3b9b8>
  4405f9:	mov    rdi,r12
  4405fc:	mov    rsi,r15
  4405ff:	call   43f290 <strcmp@plt+0x3baf8>
  440604:	cmp    eax,0x1
  440607:	jne    440672 <strcmp@plt+0x3ceda>
  440609:	mov    rdi,r12
  44060c:	mov    rsi,r15
  44060f:	call   43f560 <strcmp@plt+0x3bdc8>
  440614:	mov    rdi,r12
  440617:	mov    rsi,rbx
  44061a:	call   43f610 <strcmp@plt+0x3be78>
  44061f:	cmp    eax,0x1
  440622:	jne    440672 <strcmp@plt+0x3ceda>
  440624:	mov    rdi,r12
  440627:	mov    rsi,r15
  44062a:	mov    rdx,r14
  44062d:	call   43f700 <strcmp@plt+0x3bf68>
  440632:	cmp    eax,0x1
  440635:	jne    440672 <strcmp@plt+0x3ceda>
  440637:	mov    rdi,r15
  44063a:	call   406eb0 <strcmp@plt+0x3718>
  44063f:	cmp    eax,0x1
  440642:	jne    44065d <strcmp@plt+0x3cec5>
  440644:	mov    rdi,r15
  440647:	xor    esi,esi
  440649:	call   406ea0 <strcmp@plt+0x3708>
  44064e:	mov    rdi,r14
  440651:	call   436460 <strcmp@plt+0x32cc8>
  440656:	mov    ebp,0x1
  44065b:	jmp    440672 <strcmp@plt+0x3ceda>
  44065d:	lea    rsi,[rip+0x1015c]        # 4507c0 <strcmp@plt+0x4d028>
  440664:	xor    ebp,ebp
  440666:	mov    edi,0x2
  44066b:	xor    eax,eax
  44066d:	call   42e520 <strcmp@plt+0x2ad88>
  440672:	mov    eax,ebp
  440674:	pop    rbx
  440675:	pop    r12
  440677:	pop    r14
  440679:	pop    r15
  44067b:	pop    rbp
  44067c:	ret    
  44067d:	nop    DWORD PTR [rax]
  440680:	push   rbp
  440681:	push   r15
  440683:	push   r14
  440685:	push   r12
  440687:	push   rbx
  440688:	mov    r12,rdi
  44068b:	lea    rbx,[rip+0x2ff16]        # 4705a8 <strcmp@plt+0x6ce10>
  440692:	mov    edi,0x3
  440697:	mov    rsi,rbx
  44069a:	call   407880 <strcmp@plt+0x40e8>
  44069f:	cmp    eax,0x1
  4406a2:	je     4406be <strcmp@plt+0x3cf26>
  4406a4:	lea    rsi,[rip+0x1012f]        # 4507da <strcmp@plt+0x4d042>
  4406ab:	mov    edi,0x1
  4406b0:	xor    eax,eax
  4406b2:	call   42e520 <strcmp@plt+0x2ad88>
  4406b7:	xor    eax,eax
  4406b9:	call   43aeb0 <strcmp@plt+0x37718>
  4406be:	mov    rdi,r12
  4406c1:	call   43ff00 <strcmp@plt+0x3c768>
  4406c6:	mov    r14,rax
  4406c9:	mov    rdi,QWORD PTR [rbx]
  4406cc:	call   40e830 <strcmp@plt+0xb098>
  4406d1:	mov    rbx,rax
  4406d4:	mov    r15,rax
  4406d7:	lea    rsi,[rip+0x10098]        # 450776 <strcmp@plt+0x4cfde>
  4406de:	mov    rdi,r12
  4406e1:	call   403350 <cfg_getbool@plt>
  4406e6:	xor    ecx,ecx
  4406e8:	test   eax,eax
  4406ea:	setne  cl
  4406ed:	mov    DWORD PTR [rbx+0x80],ecx
  4406f3:	je     440721 <strcmp@plt+0x3cf89>
  4406f5:	lea    rax,[rip+0x2fe14]        # 470510 <strcmp@plt+0x6cd78>
  4406fc:	mov    DWORD PTR [rax],0x2
  440702:	lea    rax,[rip+0x246b7]        # 464dc0 <strcmp@plt+0x61628>
  440709:	cmp    DWORD PTR [rax],0x0
  44070c:	jle    440721 <strcmp@plt+0x3cf89>
  44070e:	lea    rsi,[rip+0x10077]        # 45078c <strcmp@plt+0x4cff4>
  440715:	mov    edi,0x5
  44071a:	xor    eax,eax
  44071c:	call   42e520 <strcmp@plt+0x2ad88>
  440721:	add    rbx,0x18
  440725:	mov    rdi,r12
  440728:	mov    rsi,r15
  44072b:	mov    rdx,rbx
  44072e:	mov    rcx,r14
  440731:	call   43f850 <strcmp@plt+0x3c0b8>
  440736:	xor    ebp,ebp
  440738:	cmp    eax,0x1
  44073b:	jne    4407d7 <strcmp@plt+0x3d03f>
  440741:	mov    rdi,r12
  440744:	mov    rsi,r15
  440747:	call   43f150 <strcmp@plt+0x3b9b8>
  44074c:	mov    rdi,r12
  44074f:	mov    rsi,r15
  440752:	call   43f290 <strcmp@plt+0x3baf8>
  440757:	cmp    eax,0x1
  44075a:	jne    4407d7 <strcmp@plt+0x3d03f>
  44075c:	mov    rdi,r12
  44075f:	mov    rsi,r15
  440762:	call   43f560 <strcmp@plt+0x3bdc8>
  440767:	mov    rdi,r12
  44076a:	mov    rsi,rbx
  44076d:	call   43f610 <strcmp@plt+0x3be78>
  440772:	cmp    eax,0x1
  440775:	jne    4407d7 <strcmp@plt+0x3d03f>
  440777:	mov    rax,QWORD PTR [r15+0x60]
  44077b:	cmp    DWORD PTR [rax+0x18],0x0
  44077f:	jne    440789 <strcmp@plt+0x3cff1>
  440781:	mov    rdi,rbx
  440784:	call   407150 <strcmp@plt+0x39b8>
  440789:	mov    rdi,r12
  44078c:	mov    rsi,r15
  44078f:	mov    rdx,r14
  440792:	call   43f700 <strcmp@plt+0x3bf68>
  440797:	cmp    eax,0x1
  44079a:	jne    4407d7 <strcmp@plt+0x3d03f>
  44079c:	mov    rdi,r15
  44079f:	call   406eb0 <strcmp@plt+0x3718>
  4407a4:	cmp    eax,0x1
  4407a7:	jne    4407c2 <strcmp@plt+0x3d02a>
  4407a9:	mov    rdi,r15
  4407ac:	xor    esi,esi
  4407ae:	call   406ea0 <strcmp@plt+0x3708>
  4407b3:	mov    rdi,r14
  4407b6:	call   436460 <strcmp@plt+0x32cc8>
  4407bb:	mov    ebp,0x1
  4407c0:	jmp    4407d7 <strcmp@plt+0x3d03f>
  4407c2:	lea    rsi,[rip+0xfff7]        # 4507c0 <strcmp@plt+0x4d028>
  4407c9:	xor    ebp,ebp
  4407cb:	mov    edi,0x2
  4407d0:	xor    eax,eax
  4407d2:	call   42e520 <strcmp@plt+0x2ad88>
  4407d7:	mov    eax,ebp
  4407d9:	pop    rbx
  4407da:	pop    r12
  4407dc:	pop    r14
  4407de:	pop    r15
  4407e0:	pop    rbp
  4407e1:	ret    
  4407e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4407ec:	nop    DWORD PTR [rax+0x0]
  4407f0:	push   rbp
  4407f1:	push   r15
  4407f3:	push   r14
  4407f5:	push   r13
  4407f7:	push   r12
  4407f9:	push   rbx
  4407fa:	sub    rsp,0x48
  4407fe:	mov    r13,rdi
  440801:	lea    rbx,[rip+0x2fda0]        # 4705a8 <strcmp@plt+0x6ce10>
  440808:	mov    edi,0x1
  44080d:	mov    rsi,rbx
  440810:	call   407880 <strcmp@plt+0x40e8>
  440815:	cmp    eax,0x1
  440818:	je     440834 <strcmp@plt+0x3d09c>
  44081a:	lea    rsi,[rip+0xffe1]        # 450802 <strcmp@plt+0x4d06a>
  440821:	mov    edi,0x1
  440826:	xor    eax,eax
  440828:	call   42e520 <strcmp@plt+0x2ad88>
  44082d:	xor    eax,eax
  44082f:	call   43aeb0 <strcmp@plt+0x37718>
  440834:	mov    rdi,QWORD PTR [rbx]
  440837:	call   411250 <strcmp@plt+0xdab8>
  44083c:	mov    r14,rax
  44083f:	mov    rdi,r13
  440842:	call   43ff00 <strcmp@plt+0x3c768>
  440847:	mov    QWORD PTR [rsp+0x20],rax
  44084c:	lea    rsi,[rip+0xffce]        # 450821 <strcmp@plt+0x4d089>
  440853:	mov    rdi,r13
  440856:	call   4032c0 <cfg_getstr@plt>
  44085b:	test   rax,rax
  44085e:	je     440b42 <strcmp@plt+0x3d3aa>
  440864:	mov    rdi,rax
  440867:	call   43a7b0 <strcmp@plt+0x37018>
  44086c:	test   rax,rax
  44086f:	je     440b4e <strcmp@plt+0x3d3b6>
  440875:	mov    rbx,rax
  440878:	mov    QWORD PTR [rsp+0x18],r14
  44087d:	mov    rdi,rax
  440880:	mov    esi,0x2
  440885:	call   43a340 <strcmp@plt+0x36ba8>
  44088a:	mov    rdi,rbx
  44088d:	mov    esi,0xa
  440892:	call   43a340 <strcmp@plt+0x36ba8>
  440897:	lea    rsi,[rip+0x10016]        # 4508b4 <strcmp@plt+0x4d11c>
  44089e:	mov    rdi,r13
  4408a1:	call   403730 <cfg_size@plt>
  4408a6:	test   eax,eax
  4408a8:	mov    QWORD PTR [rsp+0x8],r13
  4408ad:	je     440b5a <strcmp@plt+0x3d3c2>
  4408b3:	lea    rbx,[rip+0xfffa]        # 4508b4 <strcmp@plt+0x4d11c>
  4408ba:	lea    r14,[rip+0xf80c]        # 4500cd <strcmp@plt+0x4c935>
  4408c1:	lea    r15,[rip+0x2701]        # 442fc9 <strcmp@plt+0x3f831>
  4408c8:	xor    ebp,ebp
  4408ca:	jmp    440924 <strcmp@plt+0x3d18c>
  4408cc:	nop    DWORD PTR [rax+0x0]
  4408d0:	mov    rdi,r12
  4408d3:	lea    r14,[rip+0xf7f3]        # 4500cd <strcmp@plt+0x4c935>
  4408da:	mov    rsi,r14
  4408dd:	call   4032c0 <cfg_getstr@plt>
  4408e2:	mov    edi,0x2
  4408e7:	lea    rsi,[rip+0x100cd]        # 4509bb <strcmp@plt+0x4d223>
  4408ee:	mov    rdx,rax
  4408f1:	xor    eax,eax
  4408f3:	call   42e520 <strcmp@plt+0x2ad88>
  4408f8:	mov    r13,QWORD PTR [rsp+0x8]
  4408fd:	lea    rbx,[rip+0xffb0]        # 4508b4 <strcmp@plt+0x4d11c>
  440904:	lea    r15,[rip+0x26be]        # 442fc9 <strcmp@plt+0x3f831>
  44090b:	mov    ebp,DWORD PTR [rsp+0x14]
  44090f:	inc    ebp
  440911:	mov    rdi,r13
  440914:	mov    rsi,rbx
  440917:	call   403730 <cfg_size@plt>
  44091c:	cmp    ebp,eax
  44091e:	jae    440b5a <strcmp@plt+0x3d3c2>
  440924:	mov    rdi,r13
  440927:	mov    rsi,rbx
  44092a:	mov    edx,ebp
  44092c:	call   4031f0 <cfg_getnsec@plt>
  440931:	mov    r12,rax
  440934:	mov    rdi,rax
  440937:	mov    rsi,r14
  44093a:	call   4032c0 <cfg_getstr@plt>
  44093f:	test   rax,rax
  440942:	je     440ca8 <strcmp@plt+0x3d510>
  440948:	mov    rdi,r12
  44094b:	mov    rsi,r15
  44094e:	call   4032c0 <cfg_getstr@plt>
  440953:	test   rax,rax
  440956:	je     440ca8 <strcmp@plt+0x3d510>
  44095c:	mov    DWORD PTR [rsp+0x14],ebp
  440960:	call   42b980 <strcmp@plt+0x281e8>
  440965:	mov    r13,rax
  440968:	mov    rdi,r12
  44096b:	lea    rsi,[rip+0xff97]        # 450909 <strcmp@plt+0x4d171>
  440972:	call   403730 <cfg_size@plt>
  440977:	test   eax,eax
  440979:	jle    4409c0 <strcmp@plt+0x3d228>
  44097b:	mov    ebx,eax
  44097d:	xor    ebp,ebp
  44097f:	jmp    440996 <strcmp@plt+0x3d1fe>
  440981:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44098b:	nop    DWORD PTR [rax+rax*1+0x0]
  440990:	inc    ebp
  440992:	cmp    ebx,ebp
  440994:	je     4409c0 <strcmp@plt+0x3d228>
  440996:	mov    rdi,r12
  440999:	lea    rsi,[rip+0xff69]        # 450909 <strcmp@plt+0x4d171>
  4409a0:	mov    edx,ebp
  4409a2:	call   403120 <cfg_getnstr@plt>
  4409a7:	test   rax,rax
  4409aa:	je     440990 <strcmp@plt+0x3d1f8>
  4409ac:	mov    rdi,rax
  4409af:	mov    rsi,r13
  4409b2:	call   42bbd0 <strcmp@plt+0x28438>
  4409b7:	jmp    440990 <strcmp@plt+0x3d1f8>
  4409b9:	nop    DWORD PTR [rax+0x0]
  4409c0:	mov    rdi,r12
  4409c3:	mov    rsi,r14
  4409c6:	call   4032c0 <cfg_getstr@plt>
  4409cb:	mov    QWORD PTR [rsp+0x40],rax
  4409d0:	mov    rdi,r12
  4409d3:	lea    rsi,[rip+0xb9a8]        # 44c382 <strcmp@plt+0x48bea>
  4409da:	call   4031b0 <cfg_getint@plt>
  4409df:	mov    QWORD PTR [rsp+0x38],rax
  4409e4:	mov    rdi,r12
  4409e7:	lea    rsi,[rip+0xe7ab]        # 44f199 <strcmp@plt+0x4ba01>
  4409ee:	call   4031b0 <cfg_getint@plt>
  4409f3:	mov    QWORD PTR [rsp+0x30],rax
  4409f8:	mov    rdi,r12
  4409fb:	mov    rsi,r15
  4409fe:	call   4032c0 <cfg_getstr@plt>
  440a03:	mov    QWORD PTR [rsp+0x28],rax
  440a08:	mov    rdi,r12
  440a0b:	lea    rsi,[rip+0xff04]        # 450916 <strcmp@plt+0x4d17e>
  440a12:	call   403350 <cfg_getbool@plt>
  440a17:	xor    ebx,ebx
  440a19:	test   eax,eax
  440a1b:	setne  bl
  440a1e:	mov    rdi,r12
  440a21:	lea    rsi,[rip+0xec35]        # 44f65d <strcmp@plt+0x4bec5>
  440a28:	call   403350 <cfg_getbool@plt>
  440a2d:	xor    r14d,r14d
  440a30:	test   eax,eax
  440a32:	setne  r14b
  440a36:	mov    rdi,r12
  440a39:	lea    rsi,[rip+0xfeec]        # 45092c <strcmp@plt+0x4d194>
  440a40:	call   403350 <cfg_getbool@plt>
  440a45:	xor    r15d,r15d
  440a48:	test   eax,eax
  440a4a:	setne  r15b
  440a4e:	mov    rdi,r12
  440a51:	lea    rsi,[rip+0xfeda]        # 450932 <strcmp@plt+0x4d19a>
  440a58:	call   403350 <cfg_getbool@plt>
  440a5d:	xor    ebp,ebp
  440a5f:	test   eax,eax
  440a61:	setne  bpl
  440a65:	sub    rsp,0x8
  440a69:	mov    rdi,QWORD PTR [rsp+0x20]
  440a6e:	mov    rsi,QWORD PTR [rsp+0x48]
  440a73:	mov    rdx,QWORD PTR [rsp+0x40]
  440a78:	mov    rcx,QWORD PTR [rsp+0x38]
  440a7d:	mov    r8,QWORD PTR [rsp+0x30]
  440a82:	mov    r9d,ebx
  440a85:	push   QWORD PTR [rsp+0x28]
  440a89:	push   r13
  440a8b:	push   rbp
  440a8c:	push   r15
  440a8e:	push   r14
  440a90:	call   4057b0 <strcmp@plt+0x2018>
  440a95:	add    rsp,0x30
  440a99:	mov    rbx,rax
  440a9c:	mov    rdi,r13
  440a9f:	call   42bff0 <strcmp@plt+0x28858>
  440aa4:	test   rbx,rbx
  440aa7:	je     4408d0 <strcmp@plt+0x3d138>
  440aad:	lea    r14,[rip+0xf619]        # 4500cd <strcmp@plt+0x4c935>
  440ab4:	mov    rbp,QWORD PTR [rsp+0x18]
  440ab9:	mov    rdi,QWORD PTR [rbp+0x18]
  440abd:	mov    rsi,QWORD PTR [rbx]
  440ac0:	call   42f990 <strcmp@plt+0x2c1f8>
  440ac5:	lea    rcx,[rip+0x242f4]        # 464dc0 <strcmp@plt+0x61628>
  440acc:	mov    ecx,DWORD PTR [rcx]
  440ace:	test   rax,rax
  440ad1:	je     440b10 <strcmp@plt+0x3d378>
  440ad3:	test   ecx,ecx
  440ad5:	jle    440af5 <strcmp@plt+0x3d35d>
  440ad7:	mov    rdi,QWORD PTR [rbx]
  440ada:	call   422e20 <strcmp@plt+0x1f688>
  440adf:	mov    edi,0x5
  440ae4:	lea    rsi,[rip+0xfe5d]        # 450948 <strcmp@plt+0x4d1b0>
  440aeb:	mov    rdx,rax
  440aee:	xor    eax,eax
  440af0:	call   42e520 <strcmp@plt+0x2ad88>
  440af5:	mov    rdi,rbx
  440af8:	call   42e4b0 <strcmp@plt+0x2ad18>
  440afd:	jmp    4408f8 <strcmp@plt+0x3d160>
  440b02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440b0c:	nop    DWORD PTR [rax+0x0]
  440b10:	test   ecx,ecx
  440b12:	jle    440b32 <strcmp@plt+0x3d39a>
  440b14:	mov    rdi,QWORD PTR [rbx]
  440b17:	call   422e20 <strcmp@plt+0x1f688>
  440b1c:	mov    edi,0x5
  440b21:	lea    rsi,[rip+0xfe5d]        # 450985 <strcmp@plt+0x4d1ed>
  440b28:	mov    rdx,rax
  440b2b:	xor    eax,eax
  440b2d:	call   42e520 <strcmp@plt+0x2ad88>
  440b32:	mov    rdi,rbp
  440b35:	mov    rsi,rbx
  440b38:	call   410ad0 <strcmp@plt+0xd338>
  440b3d:	jmp    4408f8 <strcmp@plt+0x3d160>
  440b42:	lea    rsi,[rip+0xfd2b]        # 450874 <strcmp@plt+0x4d0dc>
  440b49:	jmp    440caf <strcmp@plt+0x3d517>
  440b4e:	lea    rsi,[rip+0xfcda]        # 45082f <strcmp@plt+0x4d097>
  440b55:	jmp    440caf <strcmp@plt+0x3d517>
  440b5a:	lea    rsi,[rip+0xfe87]        # 4509e8 <strcmp@plt+0x4d250>
  440b61:	mov    rdi,r13
  440b64:	call   403730 <cfg_size@plt>
  440b69:	test   eax,eax
  440b6b:	je     440cce <strcmp@plt+0x3d536>
  440b71:	lea    r15,[rip+0xfe70]        # 4509e8 <strcmp@plt+0x4d250>
  440b78:	xor    r12d,r12d
  440b7b:	mov    r14,QWORD PTR [rsp+0x18]
  440b80:	jmp    440bd9 <strcmp@plt+0x3d441>
  440b82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440b8c:	nop    DWORD PTR [rax+0x0]
  440b90:	mov    rdi,rbp
  440b93:	lea    rsi,[rip+0xf533]        # 4500cd <strcmp@plt+0x4c935>
  440b9a:	call   4032c0 <cfg_getstr@plt>
  440b9f:	mov    edi,0x2
  440ba4:	lea    rsi,[rip+0xff0c]        # 450ab7 <strcmp@plt+0x4d31f>
  440bab:	mov    rdx,rax
  440bae:	xor    eax,eax
  440bb0:	call   42e520 <strcmp@plt+0x2ad88>
  440bb5:	mov    rdi,rbx
  440bb8:	call   428bd0 <strcmp@plt+0x25438>
  440bbd:	mov    r13,QWORD PTR [rsp+0x8]
  440bc2:	inc    r12d
  440bc5:	mov    rdi,r13
  440bc8:	mov    rsi,r15
  440bcb:	call   403730 <cfg_size@plt>
  440bd0:	cmp    r12d,eax
  440bd3:	jae    440cce <strcmp@plt+0x3d536>
  440bd9:	mov    rdi,r13
  440bdc:	mov    rsi,r15
  440bdf:	mov    edx,r12d
  440be2:	call   4031f0 <cfg_getnsec@plt>
  440be7:	mov    rbp,rax
  440bea:	xor    eax,eax
  440bec:	call   404740 <strcmp@plt+0xfa8>
  440bf1:	mov    r13,rax
  440bf4:	mov    rdi,rbp
  440bf7:	mov    rsi,rax
  440bfa:	xor    edx,edx
  440bfc:	xor    ecx,ecx
  440bfe:	call   43ee20 <strcmp@plt+0x3b688>
  440c03:	cmp    eax,0x1
  440c06:	jne    440e94 <strcmp@plt+0x3d6fc>
  440c0c:	mov    rdi,r14
  440c0f:	mov    rsi,QWORD PTR [rsp+0x20]
  440c14:	mov    rdx,r13
  440c17:	xor    ecx,ecx
  440c19:	call   405ed0 <strcmp@plt+0x2738>
  440c1e:	mov    rbx,rax
  440c21:	mov    rdi,r13
  440c24:	call   4047e0 <strcmp@plt+0x1048>
  440c29:	test   rbx,rbx
  440c2c:	je     440e94 <strcmp@plt+0x3d6fc>
  440c32:	mov    rdi,QWORD PTR [r14+0x20]
  440c36:	mov    rsi,rbx
  440c39:	call   42f9b0 <strcmp@plt+0x2c218>
  440c3e:	test   rax,rax
  440c41:	jne    440b90 <strcmp@plt+0x3d3f8>
  440c47:	mov    rdi,r14
  440c4a:	mov    rsi,rbx
  440c4d:	call   410b00 <strcmp@plt+0xd368>
  440c52:	cmp    eax,0x1
  440c55:	jne    440c8f <strcmp@plt+0x3d4f7>
  440c57:	lea    rax,[rip+0x24162]        # 464dc0 <strcmp@plt+0x61628>
  440c5e:	cmp    DWORD PTR [rax],0x0
  440c61:	mov    r13,QWORD PTR [rsp+0x8]
  440c66:	jle    440bc2 <strcmp@plt+0x3d42a>
  440c6c:	mov    rdi,rbx
  440c6f:	call   422e20 <strcmp@plt+0x1f688>
  440c74:	mov    edi,0x5
  440c79:	lea    rsi,[rip+0xfdab]        # 450a2b <strcmp@plt+0x4d293>
  440c80:	mov    rdx,rax
  440c83:	xor    eax,eax
  440c85:	call   42e520 <strcmp@plt+0x2ad88>
  440c8a:	jmp    440bc2 <strcmp@plt+0x3d42a>
  440c8f:	mov    rdi,rbx
  440c92:	call   422e20 <strcmp@plt+0x1f688>
  440c97:	mov    edi,0x2
  440c9c:	lea    rsi,[rip+0xfdca]        # 450a6d <strcmp@plt+0x4d2d5>
  440ca3:	jmp    440bab <strcmp@plt+0x3d413>
  440ca8:	lea    rsi,[rip+0xfc0f]        # 4508be <strcmp@plt+0x4d126>
  440caf:	xor    ebx,ebx
  440cb1:	mov    edi,0x2
  440cb6:	xor    eax,eax
  440cb8:	call   42e520 <strcmp@plt+0x2ad88>
  440cbd:	mov    eax,ebx
  440cbf:	add    rsp,0x48
  440cc3:	pop    rbx
  440cc4:	pop    r12
  440cc6:	pop    r13
  440cc8:	pop    r14
  440cca:	pop    r15
  440ccc:	pop    rbp
  440ccd:	ret    
  440cce:	lea    rsi,[rip+0xfe2e]        # 450b03 <strcmp@plt+0x4d36b>
  440cd5:	mov    rdi,r13
  440cd8:	call   403730 <cfg_size@plt>
  440cdd:	test   eax,eax
  440cdf:	je     440d60 <strcmp@plt+0x3d5c8>
  440ce1:	lea    rbx,[rip+0xfe1b]        # 450b03 <strcmp@plt+0x4d36b>
  440ce8:	xor    ebp,ebp
  440cea:	nop    WORD PTR [rax+rax*1+0x0]
  440cf0:	mov    rdi,r13
  440cf3:	mov    rsi,rbx
  440cf6:	mov    edx,ebp
  440cf8:	call   4031f0 <cfg_getnsec@plt>
  440cfd:	mov    r14,rax
  440d00:	mov    rdi,rax
  440d03:	lea    rsi,[rip+0xf9a0]        # 4506aa <strcmp@plt+0x4cf12>
  440d0a:	call   4032c0 <cfg_getstr@plt>
  440d0f:	mov    r15,rax
  440d12:	mov    rdi,r14
  440d15:	lea    rsi,[rip+0x4e00]        # 445b1c <strcmp@plt+0x42384>
  440d1c:	call   4032c0 <cfg_getstr@plt>
  440d21:	mov    r12,rax
  440d24:	mov    rdi,r14
  440d27:	lea    rsi,[rip+0x229b]        # 442fc9 <strcmp@plt+0x3f831>
  440d2e:	call   4032c0 <cfg_getstr@plt>
  440d33:	mov    rdi,QWORD PTR [rsp+0x18]
  440d38:	mov    rsi,r15
  440d3b:	mov    rdx,r12
  440d3e:	mov    rcx,rax
  440d41:	call   4069b0 <strcmp@plt+0x3218>
  440d46:	cmp    eax,0x1
  440d49:	jne    440ec0 <strcmp@plt+0x3d728>
  440d4f:	inc    ebp
  440d51:	mov    rdi,r13
  440d54:	mov    rsi,rbx
  440d57:	call   403730 <cfg_size@plt>
  440d5c:	cmp    ebp,eax
  440d5e:	jb     440cf0 <strcmp@plt+0x3d558>
  440d60:	lea    rsi,[rip+0xfda8]        # 450b0f <strcmp@plt+0x4d377>
  440d67:	mov    rdi,r13
  440d6a:	call   403730 <cfg_size@plt>
  440d6f:	test   eax,eax
  440d71:	je     440e59 <strcmp@plt+0x3d6c1>
  440d77:	xor    r15d,r15d
  440d7a:	lea    rbp,[rip+0xfd8e]        # 450b0f <strcmp@plt+0x4d377>
  440d81:	lea    rbx,[rip+0xfd93]        # 450b1b <strcmp@plt+0x4d383>
  440d88:	nop    DWORD PTR [rax+rax*1+0x0]
  440d90:	mov    rdi,r13
  440d93:	mov    rsi,rbp
  440d96:	mov    edx,r15d
  440d99:	call   4031f0 <cfg_getnsec@plt>
  440d9e:	mov    rbp,rax
  440da1:	call   42b980 <strcmp@plt+0x281e8>
  440da6:	mov    r12,rax
  440da9:	mov    rdi,rbp
  440dac:	mov    rsi,rbx
  440daf:	call   403730 <cfg_size@plt>
  440db4:	test   eax,eax
  440db6:	jle    440df0 <strcmp@plt+0x3d658>
  440db8:	mov    r13d,eax
  440dbb:	xor    r14d,r14d
  440dbe:	jmp    440dc8 <strcmp@plt+0x3d630>
  440dc0:	inc    r14d
  440dc3:	cmp    r13d,r14d
  440dc6:	je     440df0 <strcmp@plt+0x3d658>
  440dc8:	mov    rdi,rbp
  440dcb:	mov    rsi,rbx
  440dce:	mov    edx,r14d
  440dd1:	call   403120 <cfg_getnstr@plt>
  440dd6:	test   rax,rax
  440dd9:	je     440dc0 <strcmp@plt+0x3d628>
  440ddb:	mov    rdi,rax
  440dde:	mov    rsi,r12
  440de1:	call   42baa0 <strcmp@plt+0x28308>
  440de6:	jmp    440dc0 <strcmp@plt+0x3d628>
  440de8:	nop    DWORD PTR [rax+rax*1+0x0]
  440df0:	mov    rdi,rbp
  440df3:	lea    rsi,[rip+0xf8b0]        # 4506aa <strcmp@plt+0x4cf12>
  440dfa:	call   4032c0 <cfg_getstr@plt>
  440dff:	mov    r14,rax
  440e02:	mov    rdi,rbp
  440e05:	lea    rsi,[rip+0xe2b3]        # 44f0bf <strcmp@plt+0x4b927>
  440e0c:	call   4031b0 <cfg_getint@plt>
  440e11:	mov    rdi,QWORD PTR [rsp+0x18]
  440e16:	mov    rsi,r14
  440e19:	mov    edx,eax
  440e1b:	mov    rcx,r12
  440e1e:	call   406b60 <strcmp@plt+0x33c8>
  440e23:	mov    ebp,eax
  440e25:	mov    rdi,r12
  440e28:	call   42bff0 <strcmp@plt+0x28858>
  440e2d:	cmp    ebp,0x1
  440e30:	jne    440ec0 <strcmp@plt+0x3d728>
  440e36:	inc    r15d
  440e39:	mov    r13,QWORD PTR [rsp+0x8]
  440e3e:	mov    rdi,r13
  440e41:	lea    rbp,[rip+0xfcc7]        # 450b0f <strcmp@plt+0x4d377>
  440e48:	mov    rsi,rbp
  440e4b:	call   403730 <cfg_size@plt>
  440e50:	cmp    r15d,eax
  440e53:	jb     440d90 <strcmp@plt+0x3d5f8>
  440e59:	lea    rsi,[rip+0xfcc0]        # 450b20 <strcmp@plt+0x4d388>
  440e60:	mov    rdi,r13
  440e63:	call   4032c0 <cfg_getstr@plt>
  440e68:	mov    rdi,QWORD PTR [rsp+0x18]
  440e6d:	mov    rsi,rax
  440e70:	call   406cd0 <strcmp@plt+0x3538>
  440e75:	xor    ebx,ebx
  440e77:	cmp    eax,0x1
  440e7a:	jne    440cbd <strcmp@plt+0x3d525>
  440e80:	mov    rdi,QWORD PTR [rsp+0x20]
  440e85:	call   436460 <strcmp@plt+0x32cc8>
  440e8a:	mov    ebx,0x1
  440e8f:	jmp    440cbd <strcmp@plt+0x3d525>
  440e94:	lea    rsi,[rip+0xf232]        # 4500cd <strcmp@plt+0x4c935>
  440e9b:	mov    rdi,rbp
  440e9e:	call   4032c0 <cfg_getstr@plt>
  440ea3:	lea    rsi,[rip+0xfb58]        # 450a02 <strcmp@plt+0x4d26a>
  440eaa:	xor    ebx,ebx
  440eac:	mov    edi,0x2
  440eb1:	mov    rdx,rax
  440eb4:	xor    eax,eax
  440eb6:	call   42e520 <strcmp@plt+0x2ad88>
  440ebb:	jmp    440cbd <strcmp@plt+0x3d525>
  440ec0:	xor    ebx,ebx
  440ec2:	jmp    440cbd <strcmp@plt+0x3d525>
  440ec7:	nop    WORD PTR [rax+rax*1+0x0]
  440ed0:	push   rbp
  440ed1:	push   r15
  440ed3:	push   r14
  440ed5:	push   r13
  440ed7:	push   r12
  440ed9:	push   rbx
  440eda:	sub    rsp,0x28
  440ede:	mov    rbp,rdi
  440ee1:	lea    rbx,[rip+0x2f6c0]        # 4705a8 <strcmp@plt+0x6ce10>
  440ee8:	mov    edi,0x4
  440eed:	mov    rsi,rbx
  440ef0:	call   407880 <strcmp@plt+0x40e8>
  440ef5:	cmp    eax,0x1
  440ef8:	je     440f14 <strcmp@plt+0x3d77c>
  440efa:	lea    rsi,[rip+0xfc36]        # 450b37 <strcmp@plt+0x4d39f>
  440f01:	mov    edi,0x1
  440f06:	xor    eax,eax
  440f08:	call   42e520 <strcmp@plt+0x2ad88>
  440f0d:	xor    eax,eax
  440f0f:	call   43aeb0 <strcmp@plt+0x37718>
  440f14:	mov    r14,QWORD PTR [rbx]
  440f17:	mov    rdi,rbp
  440f1a:	call   43ff00 <strcmp@plt+0x3c768>
  440f1f:	mov    QWORD PTR [rsp+0x18],rax
  440f24:	lea    rsi,[rip+0xf8f6]        # 450821 <strcmp@plt+0x4d089>
  440f2b:	mov    rdi,rbp
  440f2e:	call   4032c0 <cfg_getstr@plt>
  440f33:	test   rax,rax
  440f36:	je     4410d9 <strcmp@plt+0x3d941>
  440f3c:	mov    rdi,rax
  440f3f:	call   43a7b0 <strcmp@plt+0x37018>
  440f44:	test   rax,rax
  440f47:	je     441342 <strcmp@plt+0x3dbaa>
  440f4d:	mov    rbx,rax
  440f50:	mov    QWORD PTR [rsp+0x20],r14
  440f55:	mov    rdi,rax
  440f58:	mov    esi,0x2
  440f5d:	call   43a340 <strcmp@plt+0x36ba8>
  440f62:	mov    rdi,rbx
  440f65:	mov    esi,0xa
  440f6a:	call   43a340 <strcmp@plt+0x36ba8>
  440f6f:	lea    rsi,[rip+0xfc67]        # 450bdd <strcmp@plt+0x4d445>
  440f76:	mov    rdi,rbp
  440f79:	call   403730 <cfg_size@plt>
  440f7e:	test   eax,eax
  440f80:	mov    QWORD PTR [rsp+0x10],rbp
  440f85:	je     4410e5 <strcmp@plt+0x3d94d>
  440f8b:	lea    r12,[rip+0xfc4b]        # 450bdd <strcmp@plt+0x4d445>
  440f92:	lea    r14,[rip+0xf134]        # 4500cd <strcmp@plt+0x4c935>
  440f99:	xor    r13d,r13d
  440f9c:	mov    r15,QWORD PTR [rsp+0x20]
  440fa1:	jmp    440fed <strcmp@plt+0x3d855>
  440fa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  440fad:	nop    DWORD PTR [rax]
  440fb0:	mov    rdi,rbp
  440fb3:	mov    rsi,r14
  440fb6:	call   4032c0 <cfg_getstr@plt>
  440fbb:	mov    edi,0x2
  440fc0:	lea    rsi,[rip+0xfcf3]        # 450cba <strcmp@plt+0x4d522>
  440fc7:	mov    rdx,rax
  440fca:	xor    eax,eax
  440fcc:	call   42e520 <strcmp@plt+0x2ad88>
  440fd1:	mov    rbp,QWORD PTR [rsp+0x10]
  440fd6:	inc    r13d
  440fd9:	mov    rdi,rbp
  440fdc:	mov    rsi,r12
  440fdf:	call   403730 <cfg_size@plt>
  440fe4:	cmp    r13d,eax
  440fe7:	jae    4410e5 <strcmp@plt+0x3d94d>
  440fed:	mov    rdi,rbp
  440ff0:	mov    rsi,r12
  440ff3:	mov    edx,r13d
  440ff6:	call   4031f0 <cfg_getnsec@plt>
  440ffb:	mov    rbp,rax
  440ffe:	mov    rdi,rax
  441001:	mov    rsi,r14
  441004:	call   4032c0 <cfg_getstr@plt>
  441009:	test   rax,rax
  44100c:	je     44135c <strcmp@plt+0x3dbc4>
  441012:	mov    rdi,rbp
  441015:	mov    rsi,r14
  441018:	call   4032c0 <cfg_getstr@plt>
  44101d:	mov    rbx,rax
  441020:	mov    rdi,rbp
  441023:	lea    rsi,[rip+0xb358]        # 44c382 <strcmp@plt+0x48bea>
  44102a:	call   4031b0 <cfg_getint@plt>
  44102f:	mov    rdi,r15
  441032:	mov    rsi,rbx
  441035:	mov    edx,eax
  441037:	mov    rcx,QWORD PTR [rsp+0x18]
  44103c:	call   405a00 <strcmp@plt+0x2268>
  441041:	test   rax,rax
  441044:	je     440fb0 <strcmp@plt+0x3d818>
  44104a:	mov    rbx,rax
  44104d:	mov    rdi,QWORD PTR [r15+0x18]
  441051:	mov    rsi,QWORD PTR [rax]
  441054:	call   42f990 <strcmp@plt+0x2c1f8>
  441059:	lea    rcx,[rip+0x23d60]        # 464dc0 <strcmp@plt+0x61628>
  441060:	mov    ecx,DWORD PTR [rcx]
  441062:	test   rax,rax
  441065:	je     4410a0 <strcmp@plt+0x3d908>
  441067:	test   ecx,ecx
  441069:	mov    rbp,QWORD PTR [rsp+0x10]
  44106e:	jle    44108e <strcmp@plt+0x3d8f6>
  441070:	mov    rdi,QWORD PTR [rbx]
  441073:	call   422e20 <strcmp@plt+0x1f688>
  441078:	mov    edi,0x5
  44107d:	lea    rsi,[rip+0xfbb8]        # 450c3c <strcmp@plt+0x4d4a4>
  441084:	mov    rdx,rax
  441087:	xor    eax,eax
  441089:	call   42e520 <strcmp@plt+0x2ad88>
  44108e:	mov    rdi,rbx
  441091:	call   414840 <strcmp@plt+0x110a8>
  441096:	jmp    440fd6 <strcmp@plt+0x3d83e>
  44109b:	nop    DWORD PTR [rax+rax*1+0x0]
  4410a0:	test   ecx,ecx
  4410a2:	mov    rbp,QWORD PTR [rsp+0x10]
  4410a7:	jle    4410c7 <strcmp@plt+0x3d92f>
  4410a9:	mov    rdi,QWORD PTR [rbx]
  4410ac:	call   422e20 <strcmp@plt+0x1f688>
  4410b1:	mov    edi,0x5
  4410b6:	lea    rsi,[rip+0xfbbc]        # 450c79 <strcmp@plt+0x4d4e1>
  4410bd:	mov    rdx,rax
  4410c0:	xor    eax,eax
  4410c2:	call   42e520 <strcmp@plt+0x2ad88>
  4410c7:	mov    rdi,QWORD PTR [rsp+0x20]
  4410cc:	mov    rsi,rbx
  4410cf:	call   413f70 <strcmp@plt+0x107d8>
  4410d4:	jmp    440fd6 <strcmp@plt+0x3d83e>
  4410d9:	lea    rsi,[rip+0xfabf]        # 450b9f <strcmp@plt+0x4d407>
  4410e0:	jmp    44136c <strcmp@plt+0x3dbd4>
  4410e5:	lea    rsi,[rip+0xfbfe]        # 450cea <strcmp@plt+0x4d552>
  4410ec:	mov    rdi,rbp
  4410ef:	call   403730 <cfg_size@plt>
  4410f4:	test   eax,eax
  4410f6:	je     44134b <strcmp@plt+0x3dbb3>
  4410fc:	lea    r15,[rip+0xfbe7]        # 450cea <strcmp@plt+0x4d552>
  441103:	lea    r12,[rip+0xefc3]        # 4500cd <strcmp@plt+0x4c935>
  44110a:	lea    r14,[rip+0xfc3e]        # 450d4f <strcmp@plt+0x4d5b7>
  441111:	xor    ebx,ebx
  441113:	jmp    441170 <strcmp@plt+0x3d9d8>
  441115:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44111f:	nop
  441120:	mov    rdi,r13
  441123:	mov    rsi,r14
  441126:	call   4032c0 <cfg_getstr@plt>
  44112b:	mov    edi,0x2
  441130:	lea    rsi,[rip+0xfd0e]        # 450e45 <strcmp@plt+0x4d6ad>
  441137:	mov    rdx,rax
  44113a:	xor    eax,eax
  44113c:	call   42e520 <strcmp@plt+0x2ad88>
  441141:	mov    rbp,QWORD PTR [rsp+0x10]
  441146:	lea    r15,[rip+0xfb9d]        # 450cea <strcmp@plt+0x4d552>
  44114d:	mov    r12,r14
  441150:	lea    r14,[rip+0xfbf8]        # 450d4f <strcmp@plt+0x4d5b7>
  441157:	mov    ebx,DWORD PTR [rsp+0xc]
  44115b:	inc    ebx
  44115d:	mov    rdi,rbp
  441160:	mov    rsi,r15
  441163:	call   403730 <cfg_size@plt>
  441168:	cmp    ebx,eax
  44116a:	jae    44134b <strcmp@plt+0x3dbb3>
  441170:	mov    rdi,rbp
  441173:	mov    rsi,r15
  441176:	mov    DWORD PTR [rsp+0xc],ebx
  44117a:	mov    edx,ebx
  44117c:	call   4031f0 <cfg_getnsec@plt>
  441181:	mov    r13,rax
  441184:	call   42b980 <strcmp@plt+0x281e8>
  441189:	mov    r15,rax
  44118c:	mov    rdi,r13
  44118f:	mov    rsi,r12
  441192:	call   4032c0 <cfg_getstr@plt>
  441197:	test   rax,rax
  44119a:	je     441365 <strcmp@plt+0x3dbcd>
  4411a0:	mov    rdi,r13
  4411a3:	mov    rsi,r14
  4411a6:	call   4032c0 <cfg_getstr@plt>
  4411ab:	test   rax,rax
  4411ae:	je     441365 <strcmp@plt+0x3dbcd>
  4411b4:	mov    rdi,r13
  4411b7:	lea    rsi,[rip+0xfba1]        # 450d5f <strcmp@plt+0x4d5c7>
  4411be:	call   403730 <cfg_size@plt>
  4411c3:	test   eax,eax
  4411c5:	jle    441200 <strcmp@plt+0x3da68>
  4411c7:	mov    ebx,eax
  4411c9:	xor    ebp,ebp
  4411cb:	jmp    4411d6 <strcmp@plt+0x3da3e>
  4411cd:	nop    DWORD PTR [rax]
  4411d0:	inc    ebp
  4411d2:	cmp    ebx,ebp
  4411d4:	je     441200 <strcmp@plt+0x3da68>
  4411d6:	mov    rdi,r13
  4411d9:	lea    rsi,[rip+0xfb7f]        # 450d5f <strcmp@plt+0x4d5c7>
  4411e0:	mov    edx,ebp
  4411e2:	call   403120 <cfg_getnstr@plt>
  4411e7:	test   rax,rax
  4411ea:	je     4411d0 <strcmp@plt+0x3da38>
  4411ec:	mov    rdi,rax
  4411ef:	mov    rsi,r15
  4411f2:	call   42bbd0 <strcmp@plt+0x28438>
  4411f7:	jmp    4411d0 <strcmp@plt+0x3da38>
  4411f9:	nop    DWORD PTR [rax+0x0]
  441200:	mov    rdi,r13
  441203:	mov    rsi,r14
  441206:	call   4032c0 <cfg_getstr@plt>
  44120b:	test   rax,rax
  44120e:	je     44138b <strcmp@plt+0x3dbf3>
  441214:	mov    rbp,rax
  441217:	mov    rdi,rax
  44121a:	call   437960 <strcmp@plt+0x341c8>
  44121f:	mov    r14,rax
  441222:	mov    rdi,rax
  441225:	lea    rsi,[rip+0xfb6f]        # 450d9b <strcmp@plt+0x4d603>
  44122c:	call   403798 <strcmp@plt>
  441231:	test   eax,eax
  441233:	je     441260 <strcmp@plt+0x3dac8>
  441235:	mov    rdi,r14
  441238:	lea    rsi,[rip+0xfb6b]        # 450daa <strcmp@plt+0x4d612>
  44123f:	call   403798 <strcmp@plt>
  441244:	mov    ebx,0x1
  441249:	test   eax,eax
  44124b:	je     441262 <strcmp@plt+0x3daca>
  44124d:	jmp    4413a4 <strcmp@plt+0x3dc0c>
  441252:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44125c:	nop    DWORD PTR [rax+0x0]
  441260:	xor    ebx,ebx
  441262:	mov    rdi,r14
  441265:	call   403790 <free@plt>
  44126a:	mov    rdi,r13
  44126d:	mov    rsi,r12
  441270:	call   4032c0 <cfg_getstr@plt>
  441275:	mov    rbp,rax
  441278:	mov    rdi,r13
  44127b:	lea    rsi,[rip+0xb100]        # 44c382 <strcmp@plt+0x48bea>
  441282:	call   4031b0 <cfg_getint@plt>
  441287:	mov    r14,r12
  44128a:	mov    r12,QWORD PTR [rsp+0x20]
  44128f:	mov    rdi,r12
  441292:	mov    rsi,rbp
  441295:	mov    edx,eax
  441297:	mov    ecx,ebx
  441299:	mov    r8,r15
  44129c:	mov    r9,QWORD PTR [rsp+0x18]
  4412a1:	call   405ac0 <strcmp@plt+0x2328>
  4412a6:	mov    rbx,rax
  4412a9:	mov    rdi,r15
  4412ac:	call   42bff0 <strcmp@plt+0x28858>
  4412b1:	test   rbx,rbx
  4412b4:	je     441120 <strcmp@plt+0x3d988>
  4412ba:	mov    rdi,QWORD PTR [r12+0x20]
  4412bf:	mov    rsi,QWORD PTR [rbx]
  4412c2:	call   42f990 <strcmp@plt+0x2c1f8>
  4412c7:	lea    rcx,[rip+0x23af2]        # 464dc0 <strcmp@plt+0x61628>
  4412ce:	mov    ecx,DWORD PTR [rcx]
  4412d0:	test   rax,rax
  4412d3:	mov    rbp,QWORD PTR [rsp+0x10]
  4412d8:	je     441310 <strcmp@plt+0x3db78>
  4412da:	test   ecx,ecx
  4412dc:	lea    r15,[rip+0xfa07]        # 450cea <strcmp@plt+0x4d552>
  4412e3:	jle    441303 <strcmp@plt+0x3db6b>
  4412e5:	mov    rdi,QWORD PTR [rbx]
  4412e8:	call   422e20 <strcmp@plt+0x1f688>
  4412ed:	mov    edi,0x5
  4412f2:	lea    rsi,[rip+0xfac5]        # 450dbe <strcmp@plt+0x4d626>
  4412f9:	mov    rdx,rax
  4412fc:	xor    eax,eax
  4412fe:	call   42e520 <strcmp@plt+0x2ad88>
  441303:	mov    rdi,rbx
  441306:	call   414860 <strcmp@plt+0x110c8>
  44130b:	jmp    44114d <strcmp@plt+0x3d9b5>
  441310:	test   ecx,ecx
  441312:	jle    441332 <strcmp@plt+0x3db9a>
  441314:	mov    rdi,QWORD PTR [rbx]
  441317:	call   422e20 <strcmp@plt+0x1f688>
  44131c:	mov    edi,0x5
  441321:	lea    rsi,[rip+0xfae2]        # 450e0a <strcmp@plt+0x4d672>
  441328:	mov    rdx,rax
  44132b:	xor    eax,eax
  44132d:	call   42e520 <strcmp@plt+0x2ad88>
  441332:	mov    rdi,r12
  441335:	mov    rsi,rbx
  441338:	call   413fb0 <strcmp@plt+0x10818>
  44133d:	jmp    441146 <strcmp@plt+0x3d9ae>
  441342:	lea    rsi,[rip+0xf813]        # 450b5c <strcmp@plt+0x4d3c4>
  441349:	jmp    44136c <strcmp@plt+0x3dbd4>
  44134b:	mov    rdi,QWORD PTR [rsp+0x18]
  441350:	call   436460 <strcmp@plt+0x32cc8>
  441355:	mov    ebx,0x1
  44135a:	jmp    44137a <strcmp@plt+0x3dbe2>
  44135c:	lea    rsi,[rip+0xf888]        # 450beb <strcmp@plt+0x4d453>
  441363:	jmp    44136c <strcmp@plt+0x3dbd4>
  441365:	lea    rsi,[rip+0xf98d]        # 450cf9 <strcmp@plt+0x4d561>
  44136c:	xor    ebx,ebx
  44136e:	mov    edi,0x2
  441373:	xor    eax,eax
  441375:	call   42e520 <strcmp@plt+0x2ad88>
  44137a:	mov    eax,ebx
  44137c:	add    rsp,0x28
  441380:	pop    rbx
  441381:	pop    r12
  441383:	pop    r13
  441385:	pop    r14
  441387:	pop    r15
  441389:	pop    rbp
  44138a:	ret    
  44138b:	lea    rsi,[rip+0xf9d9]        # 450d6b <strcmp@plt+0x4d5d3>
  441392:	xor    ebx,ebx
  441394:	mov    edi,0x1
  441399:	xor    edx,edx
  44139b:	xor    eax,eax
  44139d:	call   42e520 <strcmp@plt+0x2ad88>
  4413a2:	jmp    44137a <strcmp@plt+0x3dbe2>
  4413a4:	lea    rsi,[rip+0xf9c0]        # 450d6b <strcmp@plt+0x4d5d3>
  4413ab:	xor    ebx,ebx
  4413ad:	mov    edi,0x1
  4413b2:	mov    rdx,rbp
  4413b5:	xor    eax,eax
  4413b7:	call   42e520 <strcmp@plt+0x2ad88>
  4413bc:	mov    rdi,r14
  4413bf:	call   403790 <free@plt>
  4413c4:	jmp    44137a <strcmp@plt+0x3dbe2>
  4413c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4413d0:	push   rbp
  4413d1:	push   r15
  4413d3:	push   r14
  4413d5:	push   r13
  4413d7:	push   r12
  4413d9:	push   rbx
  4413da:	push   rax
  4413db:	mov    r13,rdi
  4413de:	lea    rbx,[rip+0x2f1c3]        # 4705a8 <strcmp@plt+0x6ce10>
  4413e5:	mov    edi,0x5
  4413ea:	mov    rsi,rbx
  4413ed:	call   407880 <strcmp@plt+0x40e8>
  4413f2:	cmp    eax,0x1
  4413f5:	je     441411 <strcmp@plt+0x3dc79>
  4413f7:	lea    rsi,[rip+0xfa74]        # 450e72 <strcmp@plt+0x4d6da>
  4413fe:	mov    edi,0x1
  441403:	xor    eax,eax
  441405:	call   42e520 <strcmp@plt+0x2ad88>
  44140a:	xor    eax,eax
  44140c:	call   43aeb0 <strcmp@plt+0x37718>
  441411:	mov    r15,QWORD PTR [rbx]
  441414:	mov    rdi,r13
  441417:	call   43ff00 <strcmp@plt+0x3c768>
  44141c:	mov    r14,rax
  44141f:	lea    rsi,[rip+0xf3fb]        # 450821 <strcmp@plt+0x4d089>
  441426:	mov    rdi,r13
  441429:	call   4032c0 <cfg_getstr@plt>
  44142e:	test   rax,rax
  441431:	je     4414c5 <strcmp@plt+0x3dd2d>
  441437:	mov    rdi,rax
  44143a:	call   43a7b0 <strcmp@plt+0x37018>
  44143f:	test   rax,rax
  441442:	je     4414f4 <strcmp@plt+0x3dd5c>
  441448:	mov    rbx,rax
  44144b:	mov    rdi,rax
  44144e:	mov    esi,0x2
  441453:	call   43a340 <strcmp@plt+0x36ba8>
  441458:	mov    rdi,rbx
  44145b:	mov    esi,0xa
  441460:	call   43a340 <strcmp@plt+0x36ba8>
  441465:	call   42b980 <strcmp@plt+0x281e8>
  44146a:	mov    r12,rax
  44146d:	lea    rsi,[rip+0xfabc]        # 450f30 <strcmp@plt+0x4d798>
  441474:	mov    rdi,r13
  441477:	call   403730 <cfg_size@plt>
  44147c:	test   eax,eax
  44147e:	jle    4414fd <strcmp@plt+0x3dd65>
  441480:	mov    ebp,eax
  441482:	mov    QWORD PTR [rsp],r15
  441486:	xor    ebx,ebx
  441488:	lea    r15,[rip+0xfaa1]        # 450f30 <strcmp@plt+0x4d798>
  44148f:	jmp    4414a6 <strcmp@plt+0x3dd0e>
  441491:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44149b:	nop    DWORD PTR [rax+rax*1+0x0]
  4414a0:	inc    ebx
  4414a2:	cmp    ebp,ebx
  4414a4:	je     4414ce <strcmp@plt+0x3dd36>
  4414a6:	mov    rdi,r13
  4414a9:	mov    rsi,r15
  4414ac:	mov    edx,ebx
  4414ae:	call   403120 <cfg_getnstr@plt>
  4414b3:	test   rax,rax
  4414b6:	je     4414a0 <strcmp@plt+0x3dd08>
  4414b8:	mov    rdi,rax
  4414bb:	mov    rsi,r12
  4414be:	call   42bbd0 <strcmp@plt+0x28438>
  4414c3:	jmp    4414a0 <strcmp@plt+0x3dd08>
  4414c5:	lea    rsi,[rip+0xfa1e]        # 450eea <strcmp@plt+0x4d752>
  4414cc:	jmp    441504 <strcmp@plt+0x3dd6c>
  4414ce:	mov    rdi,QWORD PTR [rsp]
  4414d2:	mov    rsi,r12
  4414d5:	mov    rdx,r14
  4414d8:	call   405c30 <strcmp@plt+0x2498>
  4414dd:	mov    rdi,r14
  4414e0:	call   436460 <strcmp@plt+0x32cc8>
  4414e5:	mov    rdi,r12
  4414e8:	call   42bff0 <strcmp@plt+0x28858>
  4414ed:	mov    ebx,0x1
  4414f2:	jmp    441512 <strcmp@plt+0x3dd7a>
  4414f4:	lea    rsi,[rip+0xf9a4]        # 450e9f <strcmp@plt+0x4d707>
  4414fb:	jmp    441504 <strcmp@plt+0x3dd6c>
  4414fd:	lea    rsi,[rip+0xfa3f]        # 450f43 <strcmp@plt+0x4d7ab>
  441504:	xor    ebx,ebx
  441506:	mov    edi,0x2
  44150b:	xor    eax,eax
  44150d:	call   42e520 <strcmp@plt+0x2ad88>
  441512:	mov    eax,ebx
  441514:	add    rsp,0x8
  441518:	pop    rbx
  441519:	pop    r12
  44151b:	pop    r13
  44151d:	pop    r14
  44151f:	pop    r15
  441521:	pop    rbp
  441522:	ret    
  441523:	nop    WORD PTR cs:[rax+rax*1+0x0]
  44152d:	nop    DWORD PTR [rax]
  441530:	push   rbp
  441531:	push   r15
  441533:	push   r14
  441535:	push   r13
  441537:	push   r12
  441539:	push   rbx
  44153a:	sub    rsp,0x13b8
  441541:	lea    rsi,[rip+0x21438]        # 462980 <strcmp@plt+0x5f1e8>
  441548:	mov    rbx,rsp
  44154b:	mov    edx,0x13b0
  441550:	mov    rdi,rbx
  441553:	call   403330 <memcpy@plt>
  441558:	mov    rdi,rbx
  44155b:	mov    esi,0x4
  441560:	call   4033a0 <cfg_init@plt>
  441565:	mov    r14,rax
  441568:	lea    rbx,[rip+0x2ef99]        # 470508 <strcmp@plt+0x6cd70>
  44156f:	mov    rsi,QWORD PTR [rbx]
  441572:	mov    rdi,rax
  441575:	call   4036c0 <cfg_parse@plt>
  44157a:	cmp    eax,0x1
  44157d:	je     441592 <strcmp@plt+0x3ddfa>
  44157f:	mov    ebp,eax
  441581:	cmp    eax,0xffffffff
  441584:	jne    4415c6 <strcmp@plt+0x3de2e>
  441586:	mov    rdx,QWORD PTR [rbx]
  441589:	lea    rsi,[rip+0xd716]        # 44eca6 <strcmp@plt+0x4b50e>
  441590:	jmp    44159c <strcmp@plt+0x3de04>
  441592:	mov    rdx,QWORD PTR [rbx]
  441595:	lea    rsi,[rip+0xfadd]        # 451079 <strcmp@plt+0x4d8e1>
  44159c:	xor    ebp,ebp
  44159e:	mov    edi,0x1
  4415a3:	xor    eax,eax
  4415a5:	call   42e520 <strcmp@plt+0x2ad88>
  4415aa:	mov    rdi,r14
  4415ad:	call   403150 <cfg_free@plt>
  4415b2:	mov    eax,ebp
  4415b4:	add    rsp,0x13b8
  4415bb:	pop    rbx
  4415bc:	pop    r12
  4415be:	pop    r13
  4415c0:	pop    r14
  4415c2:	pop    r15
  4415c4:	pop    rbp
  4415c5:	ret    
  4415c6:	lea    r13,[rip+0x237f3]        # 464dc0 <strcmp@plt+0x61628>
  4415cd:	mov    eax,DWORD PTR [r13+0x0]
  4415d1:	cmp    eax,0xffffffff
  4415d4:	jne    4415ff <strcmp@plt+0x3de67>
  4415d6:	lea    rsi,[rip+0xfb0b]        # 4510e8 <strcmp@plt+0x4d950>
  4415dd:	mov    rdi,r14
  4415e0:	call   4031b0 <cfg_getint@plt>
  4415e5:	mov    rbp,rax
  4415e8:	sar    eax,0x1f
  4415eb:	andn   ecx,eax,ebp
  4415f0:	cmp    ecx,0x4
  4415f3:	mov    eax,0x3
  4415f8:	cmovl  eax,ecx
  4415fb:	mov    DWORD PTR [r13+0x0],eax
  4415ff:	dec    eax
  441601:	cmp    eax,0x2
  441604:	ja     44161f <strcmp@plt+0x3de87>
  441606:	cdqe   
  441608:	lea    rcx,[rip+0x22721]        # 463d30 <strcmp@plt+0x60598>
  44160f:	mov    rsi,QWORD PTR [rcx+rax*8]
  441613:	mov    edi,0x4
  441618:	xor    eax,eax
  44161a:	call   42e520 <strcmp@plt+0x2ad88>
  44161f:	lea    rsi,[rip+0xf9eb]        # 451011 <strcmp@plt+0x4d879>
  441626:	mov    rdi,r14
  441629:	call   4032c0 <cfg_getstr@plt>
  44162e:	lea    rcx,[rip+0x2eedf]        # 470514 <strcmp@plt+0x6cd7c>
  441635:	cmp    DWORD PTR [rcx],0x1
  441638:	jne    441642 <strcmp@plt+0x3deaa>
  44163a:	mov    rdi,rax
  44163d:	call   42e790 <strcmp@plt+0x2aff8>
  441642:	lea    rsi,[rip+0xf9d1]        # 45101a <strcmp@plt+0x4d882>
  441649:	mov    rdi,r14
  44164c:	call   4032c0 <cfg_getstr@plt>
  441651:	mov    r12,rax
  441654:	mov    rdi,rax
  441657:	call   437960 <strcmp@plt+0x341c8>
  44165c:	mov    r15,rax
  44165f:	lea    rsi,[rip+0xfa9e]        # 451104 <strcmp@plt+0x4d96c>
  441666:	mov    rdi,rax
  441669:	call   403798 <strcmp@plt>
  44166e:	test   eax,eax
  441670:	je     4416aa <strcmp@plt+0x3df12>
  441672:	lea    rsi,[rip+0x54c8]        # 446b41 <strcmp@plt+0x433a9>
  441679:	mov    rdi,r15
  44167c:	call   403798 <strcmp@plt>
  441681:	test   eax,eax
  441683:	je     4416c7 <strcmp@plt+0x3df2f>
  441685:	lea    rsi,[rip+0xfabb]        # 451147 <strcmp@plt+0x4d9af>
  44168c:	xor    ebp,ebp
  44168e:	mov    edi,0x1
  441693:	mov    rdx,r12
  441696:	xor    eax,eax
  441698:	call   42e520 <strcmp@plt+0x2ad88>
  44169d:	mov    rdi,r15
  4416a0:	call   403790 <free@plt>
  4416a5:	jmp    4415b2 <strcmp@plt+0x3de1a>
  4416aa:	lea    rax,[rip+0x2e47f]        # 46fb30 <strcmp@plt+0x6c398>
  4416b1:	mov    DWORD PTR [rax],0x0
  4416b7:	cmp    DWORD PTR [r13+0x0],0x0
  4416bc:	jle    4416ee <strcmp@plt+0x3df56>
  4416be:	lea    rsi,[rip+0xfa46]        # 45110b <strcmp@plt+0x4d973>
  4416c5:	jmp    4416e2 <strcmp@plt+0x3df4a>
  4416c7:	lea    rax,[rip+0x2e462]        # 46fb30 <strcmp@plt+0x6c398>
  4416ce:	mov    DWORD PTR [rax],0x1
  4416d4:	cmp    DWORD PTR [r13+0x0],0x0
  4416d9:	jle    4416ee <strcmp@plt+0x3df56>
  4416db:	lea    rsi,[rip+0xfa45]        # 451127 <strcmp@plt+0x4d98f>
  4416e2:	mov    edi,0x5
  4416e7:	xor    eax,eax
  4416e9:	call   42e520 <strcmp@plt+0x2ad88>
  4416ee:	mov    rdi,r15
  4416f1:	call   403790 <free@plt>
  4416f6:	lea    rsi,[rip+0xf93e]        # 45103b <strcmp@plt+0x4d8a3>
  4416fd:	mov    rdi,r14
  441700:	call   4032c0 <cfg_getstr@plt>
  441705:	test   rax,rax
  441708:	je     4415aa <strcmp@plt+0x3de12>
  44170e:	mov    rdi,rax
  441711:	call   437960 <strcmp@plt+0x341c8>
  441716:	mov    r15,rax
  441719:	lea    rsi,[rip+0xfa52]        # 451172 <strcmp@plt+0x4d9da>
  441720:	mov    rdi,rax
  441723:	call   403798 <strcmp@plt>
  441728:	test   eax,eax
  44172a:	je     4417b4 <strcmp@plt+0x3e01c>
  441730:	lea    rsi,[rip+0xfa3f]        # 451176 <strcmp@plt+0x4d9de>
  441737:	mov    rdi,r15
  44173a:	call   403798 <strcmp@plt>
  44173f:	test   eax,eax
  441741:	je     4417be <strcmp@plt+0x3e026>
  441743:	lea    rsi,[rip+0x2724]        # 443e6e <strcmp@plt+0x406d6>
  44174a:	mov    rdi,r15
  44174d:	call   403798 <strcmp@plt>
  441752:	test   eax,eax
  441754:	je     4417c8 <strcmp@plt+0x3e030>
  441756:	lea    rsi,[rip+0xfa1c]        # 451179 <strcmp@plt+0x4d9e1>
  44175d:	mov    rdi,r15
  441760:	call   403798 <strcmp@plt>
  441765:	test   eax,eax
  441767:	je     4417d2 <strcmp@plt+0x3e03a>
  441769:	lea    rsi,[rip+0xfa0c]        # 45117c <strcmp@plt+0x4d9e4>
  441770:	mov    rdi,r15
  441773:	call   403798 <strcmp@plt>
  441778:	test   eax,eax
  44177a:	je     4417dc <strcmp@plt+0x3e044>
  44177c:	lea    rsi,[rip+0xf9fd]        # 451180 <strcmp@plt+0x4d9e8>
  441783:	mov    rdi,r15
  441786:	call   403798 <strcmp@plt>
  44178b:	test   eax,eax
  44178d:	je     4417e6 <strcmp@plt+0x3e04e>
  44178f:	lea    rsi,[rip+0xf9f1]        # 451187 <strcmp@plt+0x4d9ef>
  441796:	xor    ebp,ebp
  441798:	mov    edi,0x1
  44179d:	mov    rdx,r15
  4417a0:	xor    eax,eax
  4417a2:	call   42e520 <strcmp@plt+0x2ad88>
  4417a7:	mov    rdi,r14
  4417aa:	call   403150 <cfg_free@plt>
  4417af:	jmp    44169d <strcmp@plt+0x3df05>
  4417b4:	mov    rdi,r14
  4417b7:	call   440530 <strcmp@plt+0x3cd98>
  4417bc:	jmp    4417ee <strcmp@plt+0x3e056>
  4417be:	mov    rdi,r14
  4417c1:	call   4407f0 <strcmp@plt+0x3d058>
  4417c6:	jmp    4417ee <strcmp@plt+0x3e056>
  4417c8:	mov    rdi,r14
  4417cb:	call   43fbf0 <strcmp@plt+0x3c458>
  4417d0:	jmp    4417ee <strcmp@plt+0x3e056>
  4417d2:	mov    rdi,r14
  4417d5:	call   440680 <strcmp@plt+0x3cee8>
  4417da:	jmp    4417ee <strcmp@plt+0x3e056>
  4417dc:	mov    rdi,r14
  4417df:	call   440ed0 <strcmp@plt+0x3d738>
  4417e4:	jmp    4417ee <strcmp@plt+0x3e056>
  4417e6:	mov    rdi,r14
  4417e9:	call   4413d0 <strcmp@plt+0x3dc38>
  4417ee:	mov    ebp,eax
  4417f0:	mov    rdi,r15
  4417f3:	call   403790 <free@plt>
  4417f8:	jmp    4415aa <strcmp@plt+0x3de12>
  4417fd:	nop    DWORD PTR [rax]
  441800:	endbr64 
  441804:	push   r15
  441806:	lea    r15,[rip+0x21013]        # 462820 <strcmp@plt+0x5f088>
  44180d:	push   r14
  44180f:	mov    r14,rdx
  441812:	push   r13
  441814:	mov    r13,rsi
  441817:	push   r12
  441819:	mov    r12d,edi
  44181c:	push   rbp
  44181d:	lea    rbp,[rip+0x21004]        # 462828 <strcmp@plt+0x5f090>
  441824:	push   rbx
  441825:	sub    rbp,r15
  441828:	sub    rsp,0x8
  44182c:	call   403000 <xmlReadMemory@plt-0x30>
  441831:	sar    rbp,0x3
  441835:	je     441856 <strcmp@plt+0x3e0be>
  441837:	xor    ebx,ebx
  441839:	nop    DWORD PTR [rax+0x0]
  441840:	mov    rdx,r14
  441843:	mov    rsi,r13
  441846:	mov    edi,r12d
  441849:	call   QWORD PTR [r15+rbx*8]
  44184d:	add    rbx,0x1
  441851:	cmp    rbp,rbx
  441854:	jne    441840 <strcmp@plt+0x3e0a8>
  441856:	add    rsp,0x8
  44185a:	pop    rbx
  44185b:	pop    rbp
  44185c:	pop    r12
  44185e:	pop    r13
  441860:	pop    r14
  441862:	pop    r15
  441864:	ret    
  441865:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  441870:	endbr64 
  441874:	ret    

Disassembly of section .fini:

0000000000441878 <.fini>:
  441878:	endbr64 
  44187c:	sub    rsp,0x8
  441880:	add    rsp,0x8
  441884:	ret    
