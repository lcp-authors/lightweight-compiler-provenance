
../repos/prog2/7.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 405ff8 <__gmon_start__>
  40200f:	test   rax,rax
  402012:	je     402016 <free@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <free@plt-0x10>:
  402020:	push   QWORD PTR [rip+0x3fe2]        # 406008 <_IO_stdin_used@@Base+0x2008>
  402026:	jmp    QWORD PTR [rip+0x3fe4]        # 406010 <_IO_stdin_used@@Base+0x2010>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <free@plt>:
  402030:	jmp    QWORD PTR [rip+0x3fe2]        # 406018 <free@GLIBC_2.2.5>
  402036:	push   0x0
  40203b:	jmp    402020 <free@plt-0x10>

0000000000402040 <putchar@plt>:
  402040:	jmp    QWORD PTR [rip+0x3fda]        # 406020 <putchar@GLIBC_2.2.5>
  402046:	push   0x1
  40204b:	jmp    402020 <free@plt-0x10>

0000000000402050 <strcpy@plt>:
  402050:	jmp    QWORD PTR [rip+0x3fd2]        # 406028 <strcpy@GLIBC_2.2.5>
  402056:	push   0x2
  40205b:	jmp    402020 <free@plt-0x10>

0000000000402060 <puts@plt>:
  402060:	jmp    QWORD PTR [rip+0x3fca]        # 406030 <puts@GLIBC_2.2.5>
  402066:	push   0x3
  40206b:	jmp    402020 <free@plt-0x10>

0000000000402070 <fclose@plt>:
  402070:	jmp    QWORD PTR [rip+0x3fc2]        # 406038 <fclose@GLIBC_2.2.5>
  402076:	push   0x4
  40207b:	jmp    402020 <free@plt-0x10>

0000000000402080 <strlen@plt>:
  402080:	jmp    QWORD PTR [rip+0x3fba]        # 406040 <strlen@GLIBC_2.2.5>
  402086:	push   0x5
  40208b:	jmp    402020 <free@plt-0x10>

0000000000402090 <printf@plt>:
  402090:	jmp    QWORD PTR [rip+0x3fb2]        # 406048 <printf@GLIBC_2.2.5>
  402096:	push   0x6
  40209b:	jmp    402020 <free@plt-0x10>

00000000004020a0 <strcmp@plt>:
  4020a0:	jmp    QWORD PTR [rip+0x3faa]        # 406050 <strcmp@GLIBC_2.2.5>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <free@plt-0x10>

00000000004020b0 <fgets_unlocked@plt>:
  4020b0:	jmp    QWORD PTR [rip+0x3fa2]        # 406058 <fgets_unlocked@GLIBC_2.2.5>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <free@plt-0x10>

00000000004020c0 <malloc@plt>:
  4020c0:	jmp    QWORD PTR [rip+0x3f9a]        # 406060 <malloc@GLIBC_2.2.5>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <free@plt-0x10>

00000000004020d0 <realloc@plt>:
  4020d0:	jmp    QWORD PTR [rip+0x3f92]        # 406068 <realloc@GLIBC_2.2.5>
  4020d6:	push   0xa
  4020db:	jmp    402020 <free@plt-0x10>

00000000004020e0 <fopen@plt>:
  4020e0:	jmp    QWORD PTR [rip+0x3f8a]        # 406070 <fopen@GLIBC_2.2.5>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <free@plt-0x10>

00000000004020f0 <strtok@plt>:
  4020f0:	jmp    QWORD PTR [rip+0x3f82]        # 406078 <strtok@GLIBC_2.2.5>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <free@plt-0x10>

Disassembly of section .text:

0000000000402100 <_start@@Base>:
  402100:	endbr64 
  402104:	xor    ebp,ebp
  402106:	mov    r9,rdx
  402109:	pop    rsi
  40210a:	mov    rdx,rsp
  40210d:	and    rsp,0xfffffffffffffff0
  402111:	push   rax
  402112:	push   rsp
  402113:	mov    r8,0x4034d0
  40211a:	mov    rcx,0x403460
  402121:	mov    rdi,0x4021f0
  402128:	call   QWORD PTR [rip+0x3ec2]        # 405ff0 <__libc_start_main@GLIBC_2.2.5>
  40212e:	hlt    
  40212f:	nop
  402130:	endbr64 
  402134:	ret    
  402135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40213f:	nop
  402140:	mov    eax,0x406090
  402145:	cmp    rax,0x406090
  40214b:	je     402160 <_start@@Base+0x60>
  40214d:	mov    eax,0x0
  402152:	test   rax,rax
  402155:	je     402160 <_start@@Base+0x60>
  402157:	mov    edi,0x406090
  40215c:	jmp    rax
  40215e:	xchg   ax,ax
  402160:	ret    
  402161:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40216c:	nop    DWORD PTR [rax+0x0]
  402170:	mov    esi,0x406090
  402175:	sub    rsi,0x406090
  40217c:	mov    rax,rsi
  40217f:	shr    rsi,0x3f
  402183:	sar    rax,0x3
  402187:	add    rsi,rax
  40218a:	sar    rsi,1
  40218d:	je     4021a0 <_start@@Base+0xa0>
  40218f:	mov    eax,0x0
  402194:	test   rax,rax
  402197:	je     4021a0 <_start@@Base+0xa0>
  402199:	mov    edi,0x406090
  40219e:	jmp    rax
  4021a0:	ret    
  4021a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021ac:	nop    DWORD PTR [rax+0x0]
  4021b0:	endbr64 
  4021b4:	cmp    BYTE PTR [rip+0x3ed5],0x0        # 406090 <__bss_start@@Base>
  4021bb:	jne    4021d0 <_start@@Base+0xd0>
  4021bd:	push   rbp
  4021be:	mov    rbp,rsp
  4021c1:	call   402140 <_start@@Base+0x40>
  4021c6:	mov    BYTE PTR [rip+0x3ec3],0x1        # 406090 <__bss_start@@Base>
  4021cd:	pop    rbp
  4021ce:	ret    
  4021cf:	nop
  4021d0:	ret    
  4021d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4021dc:	nop    DWORD PTR [rax+0x0]
  4021e0:	endbr64 
  4021e4:	jmp    402170 <_start@@Base+0x70>
  4021e6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004021f0 <main@@Base>:
  4021f0:	push   r15
  4021f2:	push   r14
  4021f4:	push   r12
  4021f6:	push   rbx
  4021f7:	sub    rsp,0x68
  4021fb:	lea    rdi,[rip+0x1e57]        # 404059 <_IO_stdin_used@@Base+0x59>
  402202:	call   402060 <puts@plt>
  402207:	xor    eax,eax
  402209:	call   402fb0 <bst_nova@@Base>
  40220e:	mov    rbx,rax
  402211:	lea    rsi,[rip+0x1dec]        # 404004 <_IO_stdin_used@@Base+0x4>
  402218:	mov    rdi,rax
  40221b:	call   4031d0 <bst_insere@@Base>
  402220:	lea    rsi,[rip+0x1ddf]        # 404006 <_IO_stdin_used@@Base+0x6>
  402227:	mov    rdi,rbx
  40222a:	call   4031d0 <bst_insere@@Base>
  40222f:	lea    rsi,[rip+0x1dd2]        # 404008 <_IO_stdin_used@@Base+0x8>
  402236:	mov    rdi,rbx
  402239:	call   4031d0 <bst_insere@@Base>
  40223e:	lea    rsi,[rip+0x1dc5]        # 40400a <_IO_stdin_used@@Base+0xa>
  402245:	mov    rdi,rbx
  402248:	call   4031d0 <bst_insere@@Base>
  40224d:	lea    rsi,[rip+0x1e0b]        # 40405f <_IO_stdin_used@@Base+0x5f>
  402254:	mov    rdi,rbx
  402257:	call   4031d0 <bst_insere@@Base>
  40225c:	lea    rsi,[rip+0x1da9]        # 40400c <_IO_stdin_used@@Base+0xc>
  402263:	mov    rdi,rbx
  402266:	call   4031d0 <bst_insere@@Base>
  40226b:	lea    rsi,[rip+0x1d9c]        # 40400e <_IO_stdin_used@@Base+0xe>
  402272:	mov    rdi,rbx
  402275:	call   4031d0 <bst_insere@@Base>
  40227a:	lea    rsi,[rip+0x1d8f]        # 404010 <_IO_stdin_used@@Base+0x10>
  402281:	mov    rdi,rbx
  402284:	call   4031d0 <bst_insere@@Base>
  402289:	lea    rsi,[rip+0x1d82]        # 404012 <_IO_stdin_used@@Base+0x12>
  402290:	mov    rdi,rbx
  402293:	call   4031d0 <bst_insere@@Base>
  402298:	lea    rsi,[rip+0x1d75]        # 404014 <_IO_stdin_used@@Base+0x14>
  40229f:	mov    rdi,rbx
  4022a2:	call   4031d0 <bst_insere@@Base>
  4022a7:	mov    rdi,QWORD PTR [rbx]
  4022aa:	call   403410 <bst_altura@@Base>
  4022af:	mov    ecx,eax
  4022b1:	lea    rdi,[rip+0x1d5e]        # 404016 <_IO_stdin_used@@Base+0x16>
  4022b8:	xor    eax,eax
  4022ba:	mov    esi,ecx
  4022bc:	call   402090 <printf@plt>
  4022c1:	mov    rdi,rbx
  4022c4:	call   403340 <bst_imprime@@Base>
  4022c9:	lea    rdi,[rip+0x1d8d]        # 40405d <_IO_stdin_used@@Base+0x5d>
  4022d0:	call   402060 <puts@plt>
  4022d5:	xor    eax,eax
  4022d7:	call   402410 <avl_nova@@Base>
  4022dc:	mov    r14,rax
  4022df:	lea    rdi,[rip+0x1d44]        # 40402a <_IO_stdin_used@@Base+0x2a>
  4022e6:	lea    rsi,[rip+0x1d49]        # 404036 <_IO_stdin_used@@Base+0x36>
  4022ed:	call   4020e0 <fopen@plt>
  4022f2:	mov    r15,rax
  4022f5:	mov    rdi,rsp
  4022f8:	mov    esi,0x64
  4022fd:	mov    rdx,rax
  402300:	call   4020b0 <fgets_unlocked@plt>
  402305:	test   rax,rax
  402308:	je     402378 <main@@Base+0x188>
  40230a:	lea    r12,[rip+0x1d27]        # 404038 <_IO_stdin_used@@Base+0x38>
  402311:	mov    rbx,rsp
  402314:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40231e:	xchg   ax,ax
  402320:	mov    rdi,rbx
  402323:	mov    rsi,r12
  402326:	call   4020f0 <strtok@plt>
  40232b:	mov    rdi,rbx
  40232e:	mov    rsi,rax
  402331:	call   402050 <strcpy@plt>
  402336:	xor    edi,edi
  402338:	mov    rsi,r12
  40233b:	call   4020f0 <strtok@plt>
  402340:	mov    rdi,rbx
  402343:	mov    rsi,rax
  402346:	call   402050 <strcpy@plt>
  40234b:	mov    rdi,rbx
  40234e:	call   402080 <strlen@plt>
  402353:	mov    BYTE PTR [rsp+rax*1-0x1],0x0
  402358:	mov    rdi,r14
  40235b:	mov    rsi,rbx
  40235e:	call   402950 <avl_insere@@Base>
  402363:	mov    esi,0x64
  402368:	mov    rdi,rbx
  40236b:	mov    rdx,r15
  40236e:	call   4020b0 <fgets_unlocked@plt>
  402373:	test   rax,rax
  402376:	jne    402320 <main@@Base+0x130>
  402378:	mov    rdi,r15
  40237b:	call   402070 <fclose@plt>
  402380:	lea    rsi,[rip+0x1cb3]        # 40403a <_IO_stdin_used@@Base+0x3a>
  402387:	mov    rdi,r14
  40238a:	call   4028a0 <avl_pesquisa@@Base>
  40238f:	test   rax,rax
  402392:	je     4023a8 <main@@Base+0x1b8>
  402394:	mov    rsi,QWORD PTR [rax]
  402397:	mov    edx,DWORD PTR [rax+0x1c]
  40239a:	lea    rdi,[rip+0x1ca2]        # 404043 <_IO_stdin_used@@Base+0x43>
  4023a1:	xor    eax,eax
  4023a3:	call   402090 <printf@plt>
  4023a8:	lea    rsi,[rip+0x1c9d]        # 40404c <_IO_stdin_used@@Base+0x4c>
  4023af:	mov    rdi,r14
  4023b2:	call   4028a0 <avl_pesquisa@@Base>
  4023b7:	test   rax,rax
  4023ba:	je     4023d0 <main@@Base+0x1e0>
  4023bc:	mov    rsi,QWORD PTR [rax]
  4023bf:	mov    edx,DWORD PTR [rax+0x1c]
  4023c2:	lea    rdi,[rip+0x1c7a]        # 404043 <_IO_stdin_used@@Base+0x43>
  4023c9:	xor    eax,eax
  4023cb:	call   402090 <printf@plt>
  4023d0:	lea    rsi,[rip+0x1c7b]        # 404052 <_IO_stdin_used@@Base+0x52>
  4023d7:	mov    rdi,r14
  4023da:	call   4028a0 <avl_pesquisa@@Base>
  4023df:	test   rax,rax
  4023e2:	je     4023f8 <main@@Base+0x208>
  4023e4:	mov    rsi,QWORD PTR [rax]
  4023e7:	mov    edx,DWORD PTR [rax+0x1c]
  4023ea:	lea    rdi,[rip+0x1c52]        # 404043 <_IO_stdin_used@@Base+0x43>
  4023f1:	xor    eax,eax
  4023f3:	call   402090 <printf@plt>
  4023f8:	xor    eax,eax
  4023fa:	add    rsp,0x68
  4023fe:	pop    rbx
  4023ff:	pop    r12
  402401:	pop    r14
  402403:	pop    r15
  402405:	ret    
  402406:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402410 <avl_nova@@Base>:
  402410:	push   rax
  402411:	mov    edi,0x8
  402416:	call   4020c0 <malloc@plt>
  40241b:	test   rax,rax
  40241e:	je     402429 <avl_nova@@Base+0x19>
  402420:	mov    QWORD PTR [rax],0x0
  402427:	pop    rcx
  402428:	ret    
  402429:	xor    eax,eax
  40242b:	pop    rcx
  40242c:	ret    
  40242d:	nop    DWORD PTR [rax]

0000000000402430 <avl_apaga@@Base>:
  402430:	test   rdi,rdi
  402433:	je     40246c <avl_apaga@@Base+0x3c>
  402435:	push   rbx
  402436:	mov    rbx,rdi
  402439:	mov    rax,QWORD PTR [rdi]
  40243c:	test   rax,rax
  40243f:	je     402463 <avl_apaga@@Base+0x33>
  402441:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40244b:	nop    DWORD PTR [rax+rax*1+0x0]
  402450:	mov    rsi,QWORD PTR [rax]
  402453:	mov    rdi,rax
  402456:	call   402470 <avl_remove_impl@@Base>
  40245b:	mov    QWORD PTR [rbx],rax
  40245e:	test   rax,rax
  402461:	jne    402450 <avl_apaga@@Base+0x20>
  402463:	mov    rdi,rbx
  402466:	pop    rbx
  402467:	jmp    402030 <free@plt>
  40246c:	ret    
  40246d:	nop    DWORD PTR [rax]

0000000000402470 <avl_remove_impl@@Base>:
  402470:	push   r15
  402472:	push   r14
  402474:	push   r12
  402476:	push   rbx
  402477:	push   rax
  402478:	test   rdi,rdi
  40247b:	je     402884 <avl_remove_impl@@Base+0x414>
  402481:	mov    rbx,rsi
  402484:	mov    r12,rdi
  402487:	mov    r14,QWORD PTR [rdi]
  40248a:	mov    rdi,rsi
  40248d:	mov    rsi,r14
  402490:	call   4020a0 <strcmp@plt>
  402495:	test   eax,eax
  402497:	jns    4024a5 <avl_remove_impl@@Base+0x35>
  402499:	lea    r15,[r12+0x8]
  40249e:	mov    rdi,QWORD PTR [r12+0x8]
  4024a3:	jmp    4024b5 <avl_remove_impl@@Base+0x45>
  4024a5:	je     4026ee <avl_remove_impl@@Base+0x27e>
  4024ab:	lea    r15,[r12+0x10]
  4024b0:	mov    rdi,QWORD PTR [r12+0x10]
  4024b5:	mov    rsi,rbx
  4024b8:	call   402470 <avl_remove_impl@@Base>
  4024bd:	mov    QWORD PTR [r15],rax
  4024c0:	mov    rdx,QWORD PTR [r12+0x8]
  4024c5:	test   rdx,rdx
  4024c8:	je     4024cf <avl_remove_impl@@Base+0x5f>
  4024ca:	mov    edi,DWORD PTR [rdx+0x18]
  4024cd:	jmp    4024d4 <avl_remove_impl@@Base+0x64>
  4024cf:	mov    edi,0xffffffff
  4024d4:	mov    rsi,QWORD PTR [r12+0x10]
  4024d9:	test   rsi,rsi
  4024dc:	je     402500 <avl_remove_impl@@Base+0x90>
  4024de:	mov    eax,DWORD PTR [rsi+0x18]
  4024e1:	cmp    edi,eax
  4024e3:	cmovge eax,edi
  4024e6:	add    eax,0x1
  4024e9:	lea    r8,[r12+0x18]
  4024ee:	mov    DWORD PTR [r12+0x18],eax
  4024f3:	mov    eax,DWORD PTR [rsi+0x18]
  4024f6:	test   rdx,rdx
  4024f9:	je     40251d <avl_remove_impl@@Base+0xad>
  4024fb:	mov    edi,DWORD PTR [rdx+0x18]
  4024fe:	jmp    402522 <avl_remove_impl@@Base+0xb2>
  402500:	cmp    edi,0xfffffffe
  402503:	mov    eax,0xffffffff
  402508:	cmovle edi,eax
  40250b:	add    edi,0x1
  40250e:	lea    r8,[r12+0x18]
  402513:	mov    DWORD PTR [r12+0x18],edi
  402518:	test   rdx,rdx
  40251b:	jne    4024fb <avl_remove_impl@@Base+0x8b>
  40251d:	mov    edi,0xffffffff
  402522:	sub    eax,edi
  402524:	cmp    eax,0x2
  402527:	jl     402605 <avl_remove_impl@@Base+0x195>
  40252d:	test   rsi,rsi
  402530:	je     40274c <avl_remove_impl@@Base+0x2dc>
  402536:	mov    rax,QWORD PTR [rsi+0x10]
  40253a:	mov    edx,0xffffffff
  40253f:	mov    edi,0xffffffff
  402544:	test   rax,rax
  402547:	je     40254c <avl_remove_impl@@Base+0xdc>
  402549:	mov    edi,DWORD PTR [rax+0x18]
  40254c:	mov    rax,QWORD PTR [rsi+0x8]
  402550:	test   rax,rax
  402553:	je     402558 <avl_remove_impl@@Base+0xe8>
  402555:	mov    edx,DWORD PTR [rax+0x18]
  402558:	cmp    edi,edx
  40255a:	jge    40275b <avl_remove_impl@@Base+0x2eb>
  402560:	mov    rbx,QWORD PTR [rax+0x10]
  402564:	mov    QWORD PTR [rax+0x10],rsi
  402568:	mov    QWORD PTR [rsi+0x8],rbx
  40256c:	mov    edx,0xffffffff
  402571:	mov    edi,0xffffffff
  402576:	test   rbx,rbx
  402579:	je     40257e <avl_remove_impl@@Base+0x10e>
  40257b:	mov    edi,DWORD PTR [rbx+0x18]
  40257e:	mov    rcx,QWORD PTR [rsi+0x10]
  402582:	test   rcx,rcx
  402585:	je     40258a <avl_remove_impl@@Base+0x11a>
  402587:	mov    edx,DWORD PTR [rcx+0x18]
  40258a:	cmp    edi,edx
  40258c:	cmovge edx,edi
  40258f:	add    edx,0x1
  402592:	mov    DWORD PTR [rsi+0x18],edx
  402595:	mov    rdi,QWORD PTR [rax+0x8]
  402599:	mov    esi,0xffffffff
  40259e:	mov    ebx,0xffffffff
  4025a3:	test   rdi,rdi
  4025a6:	je     4025ab <avl_remove_impl@@Base+0x13b>
  4025a8:	mov    ebx,DWORD PTR [rdi+0x18]
  4025ab:	cmp    ebx,edx
  4025ad:	cmovge edx,ebx
  4025b0:	add    edx,0x1
  4025b3:	mov    DWORD PTR [rax+0x18],edx
  4025b6:	mov    QWORD PTR [rax+0x8],r12
  4025ba:	mov    QWORD PTR [r12+0x10],rdi
  4025bf:	mov    rcx,QWORD PTR [r12+0x8]
  4025c4:	test   rcx,rcx
  4025c7:	je     4025cc <avl_remove_impl@@Base+0x15c>
  4025c9:	mov    esi,DWORD PTR [rcx+0x18]
  4025cc:	mov    edx,0xffffffff
  4025d1:	mov    ebx,0xffffffff
  4025d6:	test   rdi,rdi
  4025d9:	je     4025de <avl_remove_impl@@Base+0x16e>
  4025db:	mov    ebx,DWORD PTR [rdi+0x18]
  4025de:	cmp    esi,ebx
  4025e0:	cmovge ebx,esi
  4025e3:	add    ebx,0x1
  4025e6:	mov    DWORD PTR [r8],ebx
  4025e9:	mov    rcx,QWORD PTR [rax+0x10]
  4025ed:	test   rcx,rcx
  4025f0:	je     4025f5 <avl_remove_impl@@Base+0x185>
  4025f2:	mov    edx,DWORD PTR [rcx+0x18]
  4025f5:	cmp    ebx,edx
  4025f7:	cmovge edx,ebx
  4025fa:	add    edx,0x1
  4025fd:	mov    DWORD PTR [rax+0x18],edx
  402600:	jmp    402886 <avl_remove_impl@@Base+0x416>
  402605:	cmp    eax,0xfffffffe
  402608:	jg     4026e6 <avl_remove_impl@@Base+0x276>
  40260e:	test   rdx,rdx
  402611:	je     4027b7 <avl_remove_impl@@Base+0x347>
  402617:	mov    rax,QWORD PTR [rdx+0x10]
  40261b:	mov    esi,0xffffffff
  402620:	mov    edi,0xffffffff
  402625:	test   rax,rax
  402628:	je     40262d <avl_remove_impl@@Base+0x1bd>
  40262a:	mov    edi,DWORD PTR [rax+0x18]
  40262d:	mov    rcx,QWORD PTR [rdx+0x8]
  402631:	test   rcx,rcx
  402634:	je     402639 <avl_remove_impl@@Base+0x1c9>
  402636:	mov    esi,DWORD PTR [rcx+0x18]
  402639:	cmp    edi,esi
  40263b:	jle    4027c6 <avl_remove_impl@@Base+0x356>
  402641:	mov    rdi,QWORD PTR [rax+0x8]
  402645:	mov    QWORD PTR [rax+0x8],rdx
  402649:	mov    QWORD PTR [rdx+0x10],rdi
  40264d:	mov    rcx,QWORD PTR [rdx+0x8]
  402651:	mov    esi,0xffffffff
  402656:	mov    ebx,0xffffffff
  40265b:	test   rcx,rcx
  40265e:	je     402663 <avl_remove_impl@@Base+0x1f3>
  402660:	mov    ebx,DWORD PTR [rcx+0x18]
  402663:	test   rdi,rdi
  402666:	je     40266b <avl_remove_impl@@Base+0x1fb>
  402668:	mov    esi,DWORD PTR [rdi+0x18]
  40266b:	cmp    ebx,esi
  40266d:	cmovge esi,ebx
  402670:	add    esi,0x1
  402673:	mov    DWORD PTR [rdx+0x18],esi
  402676:	mov    rdi,QWORD PTR [rax+0x10]
  40267a:	mov    edx,0xffffffff
  40267f:	mov    ebx,0xffffffff
  402684:	test   rdi,rdi
  402687:	je     40268c <avl_remove_impl@@Base+0x21c>
  402689:	mov    ebx,DWORD PTR [rdi+0x18]
  40268c:	cmp    esi,ebx
  40268e:	cmovge ebx,esi
  402691:	add    ebx,0x1
  402694:	mov    DWORD PTR [rax+0x18],ebx
  402697:	mov    QWORD PTR [rax+0x10],r12
  40269b:	mov    QWORD PTR [r12+0x8],rdi
  4026a0:	test   rdi,rdi
  4026a3:	je     4026a8 <avl_remove_impl@@Base+0x238>
  4026a5:	mov    edx,DWORD PTR [rdi+0x18]
  4026a8:	mov    rcx,QWORD PTR [r12+0x10]
  4026ad:	mov    edi,0xffffffff
  4026b2:	mov    esi,0xffffffff
  4026b7:	test   rcx,rcx
  4026ba:	je     4026bf <avl_remove_impl@@Base+0x24f>
  4026bc:	mov    esi,DWORD PTR [rcx+0x18]
  4026bf:	cmp    edx,esi
  4026c1:	cmovge esi,edx
  4026c4:	add    esi,0x1
  4026c7:	mov    DWORD PTR [r8],esi
  4026ca:	mov    rcx,QWORD PTR [rax+0x8]
  4026ce:	test   rcx,rcx
  4026d1:	je     4026d6 <avl_remove_impl@@Base+0x266>
  4026d3:	mov    edi,DWORD PTR [rcx+0x18]
  4026d6:	cmp    edi,esi
  4026d8:	cmovge esi,edi
  4026db:	add    esi,0x1
  4026de:	mov    DWORD PTR [rax+0x18],esi
  4026e1:	jmp    402886 <avl_remove_impl@@Base+0x416>
  4026e6:	mov    rax,r12
  4026e9:	jmp    402886 <avl_remove_impl@@Base+0x416>
  4026ee:	mov    r15,QWORD PTR [r12+0x8]
  4026f3:	mov    rax,QWORD PTR [r12+0x10]
  4026f8:	test   r15,r15
  4026fb:	je     40280a <avl_remove_impl@@Base+0x39a>
  402701:	test   rax,rax
  402704:	je     402812 <avl_remove_impl@@Base+0x3a2>
  40270a:	lea    r15,[r12+0x10]
  40270f:	nop
  402710:	mov    rbx,rax
  402713:	mov    rax,QWORD PTR [rax+0x8]
  402717:	test   rax,rax
  40271a:	jne    402710 <avl_remove_impl@@Base+0x2a0>
  40271c:	mov    rdi,QWORD PTR [rbx]
  40271f:	call   402080 <strlen@plt>
  402724:	lea    rsi,[rax+0x1]
  402728:	mov    rdi,r14
  40272b:	call   4020d0 <realloc@plt>
  402730:	mov    QWORD PTR [r12],rax
  402734:	mov    rsi,QWORD PTR [rbx]
  402737:	mov    rdi,rax
  40273a:	call   402050 <strcpy@plt>
  40273f:	mov    rdi,QWORD PTR [r12+0x10]
  402744:	mov    rsi,QWORD PTR [rbx]
  402747:	jmp    4024b8 <avl_remove_impl@@Base+0x48>
  40274c:	mov    rax,QWORD PTR ds:0x8
  402754:	mov    edx,0x8
  402759:	jmp    40275f <avl_remove_impl@@Base+0x2ef>
  40275b:	lea    rdx,[rsi+0x8]
  40275f:	mov    QWORD PTR [rdx],r12
  402762:	mov    QWORD PTR [r12+0x10],rax
  402767:	mov    rbx,QWORD PTR [r12+0x8]
  40276c:	mov    edx,0xffffffff
  402771:	mov    edi,0xffffffff
  402776:	test   rbx,rbx
  402779:	je     40277e <avl_remove_impl@@Base+0x30e>
  40277b:	mov    edi,DWORD PTR [rbx+0x18]
  40277e:	test   rax,rax
  402781:	je     402786 <avl_remove_impl@@Base+0x316>
  402783:	mov    edx,DWORD PTR [rax+0x18]
  402786:	cmp    edi,edx
  402788:	cmovge edx,edi
  40278b:	add    edx,0x1
  40278e:	mov    DWORD PTR [r8],edx
  402791:	mov    rax,QWORD PTR [rsi+0x10]
  402795:	test   rax,rax
  402798:	je     40279f <avl_remove_impl@@Base+0x32f>
  40279a:	mov    eax,DWORD PTR [rax+0x18]
  40279d:	jmp    4027a4 <avl_remove_impl@@Base+0x334>
  40279f:	mov    eax,0xffffffff
  4027a4:	cmp    edx,eax
  4027a6:	cmovge eax,edx
  4027a9:	add    eax,0x1
  4027ac:	mov    DWORD PTR [rsi+0x18],eax
  4027af:	mov    rax,rsi
  4027b2:	jmp    402886 <avl_remove_impl@@Base+0x416>
  4027b7:	mov    rax,QWORD PTR ds:0x10
  4027bf:	mov    esi,0x10
  4027c4:	jmp    4027ca <avl_remove_impl@@Base+0x35a>
  4027c6:	lea    rsi,[rdx+0x10]
  4027ca:	mov    QWORD PTR [rsi],r12
  4027cd:	mov    QWORD PTR [r12+0x8],rax
  4027d2:	mov    esi,0xffffffff
  4027d7:	mov    edi,0xffffffff
  4027dc:	test   rax,rax
  4027df:	je     4027e4 <avl_remove_impl@@Base+0x374>
  4027e1:	mov    edi,DWORD PTR [rax+0x18]
  4027e4:	mov    rax,QWORD PTR [r12+0x10]
  4027e9:	test   rax,rax
  4027ec:	je     4027f1 <avl_remove_impl@@Base+0x381>
  4027ee:	mov    esi,DWORD PTR [rax+0x18]
  4027f1:	cmp    edi,esi
  4027f3:	cmovge esi,edi
  4027f6:	add    esi,0x1
  4027f9:	mov    DWORD PTR [r8],esi
  4027fc:	mov    rax,QWORD PTR [rdx+0x8]
  402800:	test   rax,rax
  402803:	je     402850 <avl_remove_impl@@Base+0x3e0>
  402805:	mov    eax,DWORD PTR [rax+0x18]
  402808:	jmp    402855 <avl_remove_impl@@Base+0x3e5>
  40280a:	mov    r15,rax
  40280d:	test   rax,rax
  402810:	je     402865 <avl_remove_impl@@Base+0x3f5>
  402812:	mov    rdi,QWORD PTR [r15]
  402815:	call   402080 <strlen@plt>
  40281a:	lea    rsi,[rax+0x1]
  40281e:	mov    rdi,r14
  402821:	call   4020d0 <realloc@plt>
  402826:	mov    QWORD PTR [r12],rax
  40282a:	mov    rsi,QWORD PTR [r15]
  40282d:	mov    rdi,rax
  402830:	call   402050 <strcpy@plt>
  402835:	vmovups xmm0,XMMWORD PTR [r15+0x8]
  40283b:	vmovups XMMWORD PTR [r12+0x8],xmm0
  402842:	mov    eax,DWORD PTR [r15+0x18]
  402846:	mov    DWORD PTR [r12+0x18],eax
  40284b:	mov    r14,QWORD PTR [r15]
  40284e:	jmp    40286b <avl_remove_impl@@Base+0x3fb>
  402850:	mov    eax,0xffffffff
  402855:	cmp    eax,esi
  402857:	cmovge esi,eax
  40285a:	add    esi,0x1
  40285d:	mov    DWORD PTR [rdx+0x18],esi
  402860:	mov    rax,rdx
  402863:	jmp    402886 <avl_remove_impl@@Base+0x416>
  402865:	mov    r15,r12
  402868:	xor    r12d,r12d
  40286b:	mov    rdi,r14
  40286e:	call   402030 <free@plt>
  402873:	mov    rdi,r15
  402876:	call   402030 <free@plt>
  40287b:	test   r12,r12
  40287e:	jne    4024c0 <avl_remove_impl@@Base+0x50>
  402884:	xor    eax,eax
  402886:	add    rsp,0x8
  40288a:	pop    rbx
  40288b:	pop    r12
  40288d:	pop    r14
  40288f:	pop    r15
  402891:	ret    
  402892:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40289c:	nop    DWORD PTR [rax+0x0]

00000000004028a0 <avl_pesquisa@@Base>:
  4028a0:	push   r14
  4028a2:	push   rbx
  4028a3:	push   rax
  4028a4:	xor    ebx,ebx
  4028a6:	test   rdi,rdi
  4028a9:	je     4028eb <avl_pesquisa@@Base+0x4b>
  4028ab:	mov    r14,rsi
  4028ae:	test   rsi,rsi
  4028b1:	je     4028eb <avl_pesquisa@@Base+0x4b>
  4028b3:	mov    rbx,QWORD PTR [rdi]
  4028b6:	test   rbx,rbx
  4028b9:	jne    4028cc <avl_pesquisa@@Base+0x2c>
  4028bb:	jmp    4028e9 <avl_pesquisa@@Base+0x49>
  4028bd:	nop    DWORD PTR [rax]
  4028c0:	add    rbx,0x8
  4028c4:	mov    rbx,QWORD PTR [rbx]
  4028c7:	test   rbx,rbx
  4028ca:	je     4028e9 <avl_pesquisa@@Base+0x49>
  4028cc:	mov    rsi,QWORD PTR [rbx]
  4028cf:	mov    rdi,r14
  4028d2:	call   4020a0 <strcmp@plt>
  4028d7:	test   eax,eax
  4028d9:	js     4028c0 <avl_pesquisa@@Base+0x20>
  4028db:	je     4028eb <avl_pesquisa@@Base+0x4b>
  4028dd:	add    rbx,0x10
  4028e1:	mov    rbx,QWORD PTR [rbx]
  4028e4:	test   rbx,rbx
  4028e7:	jne    4028cc <avl_pesquisa@@Base+0x2c>
  4028e9:	xor    ebx,ebx
  4028eb:	mov    rax,rbx
  4028ee:	add    rsp,0x8
  4028f2:	pop    rbx
  4028f3:	pop    r14
  4028f5:	ret    
  4028f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000402900 <avl_pesquisa_impl@@Base>:
  402900:	push   r14
  402902:	push   rbx
  402903:	push   rax
  402904:	test   rdi,rdi
  402907:	je     40293e <avl_pesquisa_impl@@Base+0x3e>
  402909:	mov    r14,rsi
  40290c:	mov    rbx,rdi
  40290f:	nop
  402910:	mov    rsi,QWORD PTR [rbx]
  402913:	mov    rdi,r14
  402916:	call   4020a0 <strcmp@plt>
  40291b:	test   eax,eax
  40291d:	jns    402930 <avl_pesquisa_impl@@Base+0x30>
  40291f:	add    rbx,0x8
  402923:	jmp    402936 <avl_pesquisa_impl@@Base+0x36>
  402925:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40292f:	nop
  402930:	je     402940 <avl_pesquisa_impl@@Base+0x40>
  402932:	add    rbx,0x10
  402936:	mov    rbx,QWORD PTR [rbx]
  402939:	test   rbx,rbx
  40293c:	jne    402910 <avl_pesquisa_impl@@Base+0x10>
  40293e:	xor    ebx,ebx
  402940:	mov    rax,rbx
  402943:	add    rsp,0x8
  402947:	pop    rbx
  402948:	pop    r14
  40294a:	ret    
  40294b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402950 <avl_insere@@Base>:
  402950:	mov    eax,0xffffffff
  402955:	test   rdi,rdi
  402958:	je     402971 <avl_insere@@Base+0x21>
  40295a:	test   rsi,rsi
  40295d:	je     402971 <avl_insere@@Base+0x21>
  40295f:	push   rbx
  402960:	mov    rbx,rdi
  402963:	mov    rdi,QWORD PTR [rdi]
  402966:	call   402980 <avl_insere_impl@@Base>
  40296b:	mov    QWORD PTR [rbx],rax
  40296e:	xor    eax,eax
  402970:	pop    rbx
  402971:	ret    
  402972:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40297c:	nop    DWORD PTR [rax+0x0]

0000000000402980 <avl_insere_impl@@Base>:
  402980:	push   r15
  402982:	push   r14
  402984:	push   rbx
  402985:	mov    rbx,rsi
  402988:	test   rdi,rdi
  40298b:	je     4029b9 <avl_insere_impl@@Base+0x39>
  40298d:	mov    r15,rdi
  402990:	mov    rsi,QWORD PTR [rdi]
  402993:	mov    rdi,rbx
  402996:	call   4020a0 <strcmp@plt>
  40299b:	test   eax,eax
  40299d:	jns    402a02 <avl_insere_impl@@Base+0x82>
  40299f:	mov    rdi,QWORD PTR [r15+0x8]
  4029a3:	mov    rsi,rbx
  4029a6:	call   402980 <avl_insere_impl@@Base>
  4029ab:	mov    QWORD PTR [r15+0x8],rax
  4029af:	test   rax,rax
  4029b2:	je     402a21 <avl_insere_impl@@Base+0xa1>
  4029b4:	mov    edi,DWORD PTR [rax+0x18]
  4029b7:	jmp    402a26 <avl_insere_impl@@Base+0xa6>
  4029b9:	mov    edi,0x20
  4029be:	call   4020c0 <malloc@plt>
  4029c3:	mov    r14,rax
  4029c6:	mov    rdi,rbx
  4029c9:	call   402080 <strlen@plt>
  4029ce:	lea    rdi,[rax+0x1]
  4029d2:	call   4020c0 <malloc@plt>
  4029d7:	mov    QWORD PTR [r14],rax
  4029da:	mov    rdi,rax
  4029dd:	mov    rsi,rbx
  4029e0:	call   402050 <strcpy@plt>
  4029e5:	vxorps xmm0,xmm0,xmm0
  4029e9:	vmovups XMMWORD PTR [r14+0x8],xmm0
  4029ef:	movabs rax,0x100000000
  4029f9:	mov    QWORD PTR [r14+0x18],rax
  4029fd:	jmp    402d12 <avl_insere_impl@@Base+0x392>
  402a02:	je     402c3b <avl_insere_impl@@Base+0x2bb>
  402a08:	mov    rdi,QWORD PTR [r15+0x10]
  402a0c:	mov    rsi,rbx
  402a0f:	call   402980 <avl_insere_impl@@Base>
  402a14:	mov    QWORD PTR [r15+0x10],rax
  402a18:	mov    rax,QWORD PTR [r15+0x8]
  402a1c:	test   rax,rax
  402a1f:	jne    4029b4 <avl_insere_impl@@Base+0x34>
  402a21:	mov    edi,0xffffffff
  402a26:	mov    rdx,QWORD PTR [r15+0x10]
  402a2a:	test   rdx,rdx
  402a2d:	je     402a4f <avl_insere_impl@@Base+0xcf>
  402a2f:	mov    esi,DWORD PTR [rdx+0x18]
  402a32:	cmp    edi,esi
  402a34:	cmovge esi,edi
  402a37:	add    esi,0x1
  402a3a:	lea    rcx,[r15+0x18]
  402a3e:	mov    DWORD PTR [r15+0x18],esi
  402a42:	mov    esi,DWORD PTR [rdx+0x18]
  402a45:	test   rax,rax
  402a48:	je     402a6a <avl_insere_impl@@Base+0xea>
  402a4a:	mov    edi,DWORD PTR [rax+0x18]
  402a4d:	jmp    402a6f <avl_insere_impl@@Base+0xef>
  402a4f:	cmp    edi,0xfffffffe
  402a52:	mov    esi,0xffffffff
  402a57:	cmovle edi,esi
  402a5a:	add    edi,0x1
  402a5d:	lea    rcx,[r15+0x18]
  402a61:	mov    DWORD PTR [r15+0x18],edi
  402a65:	test   rax,rax
  402a68:	jne    402a4a <avl_insere_impl@@Base+0xca>
  402a6a:	mov    edi,0xffffffff
  402a6f:	sub    esi,edi
  402a71:	cmp    esi,0x2
  402a74:	jl     402b52 <avl_insere_impl@@Base+0x1d2>
  402a7a:	test   rdx,rdx
  402a7d:	je     402c48 <avl_insere_impl@@Base+0x2c8>
  402a83:	mov    rdi,QWORD PTR [rdx+0x10]
  402a87:	mov    eax,0xffffffff
  402a8c:	mov    esi,0xffffffff
  402a91:	test   rdi,rdi
  402a94:	je     402a99 <avl_insere_impl@@Base+0x119>
  402a96:	mov    esi,DWORD PTR [rdi+0x18]
  402a99:	mov    r14,QWORD PTR [rdx+0x8]
  402a9d:	test   r14,r14
  402aa0:	je     402aa6 <avl_insere_impl@@Base+0x126>
  402aa2:	mov    eax,DWORD PTR [r14+0x18]
  402aa6:	cmp    esi,eax
  402aa8:	jge    402c57 <avl_insere_impl@@Base+0x2d7>
  402aae:	mov    rdi,QWORD PTR [r14+0x10]
  402ab2:	mov    QWORD PTR [r14+0x10],rdx
  402ab6:	mov    QWORD PTR [rdx+0x8],rdi
  402aba:	mov    eax,0xffffffff
  402abf:	mov    esi,0xffffffff
  402ac4:	test   rdi,rdi
  402ac7:	je     402acc <avl_insere_impl@@Base+0x14c>
  402ac9:	mov    esi,DWORD PTR [rdi+0x18]
  402acc:	mov    rdi,QWORD PTR [rdx+0x10]
  402ad0:	test   rdi,rdi
  402ad3:	je     402ad8 <avl_insere_impl@@Base+0x158>
  402ad5:	mov    eax,DWORD PTR [rdi+0x18]
  402ad8:	cmp    esi,eax
  402ada:	cmovge eax,esi
  402add:	add    eax,0x1
  402ae0:	mov    DWORD PTR [rdx+0x18],eax
  402ae3:	mov    rsi,QWORD PTR [r14+0x8]
  402ae7:	mov    edx,0xffffffff
  402aec:	mov    edi,0xffffffff
  402af1:	test   rsi,rsi
  402af4:	je     402af9 <avl_insere_impl@@Base+0x179>
  402af6:	mov    edi,DWORD PTR [rsi+0x18]
  402af9:	cmp    edi,eax
  402afb:	cmovge eax,edi
  402afe:	add    eax,0x1
  402b01:	mov    DWORD PTR [r14+0x18],eax
  402b05:	mov    QWORD PTR [r14+0x8],r15
  402b09:	mov    QWORD PTR [r15+0x10],rsi
  402b0d:	mov    rax,QWORD PTR [r15+0x8]
  402b11:	test   rax,rax
  402b14:	je     402b19 <avl_insere_impl@@Base+0x199>
  402b16:	mov    edx,DWORD PTR [rax+0x18]
  402b19:	mov    eax,0xffffffff
  402b1e:	mov    edi,0xffffffff
  402b23:	test   rsi,rsi
  402b26:	je     402b2b <avl_insere_impl@@Base+0x1ab>
  402b28:	mov    edi,DWORD PTR [rsi+0x18]
  402b2b:	cmp    edx,edi
  402b2d:	cmovge edi,edx
  402b30:	add    edi,0x1
  402b33:	mov    DWORD PTR [rcx],edi
  402b35:	mov    rcx,QWORD PTR [r14+0x10]
  402b39:	test   rcx,rcx
  402b3c:	je     402b41 <avl_insere_impl@@Base+0x1c1>
  402b3e:	mov    eax,DWORD PTR [rcx+0x18]
  402b41:	cmp    edi,eax
  402b43:	cmovge eax,edi
  402b46:	add    eax,0x1
  402b49:	mov    DWORD PTR [r14+0x18],eax
  402b4d:	jmp    402d12 <avl_insere_impl@@Base+0x392>
  402b52:	cmp    esi,0xfffffffe
  402b55:	jg     402c33 <avl_insere_impl@@Base+0x2b3>
  402b5b:	test   rax,rax
  402b5e:	je     402cae <avl_insere_impl@@Base+0x32e>
  402b64:	mov    r14,QWORD PTR [rax+0x10]
  402b68:	mov    edx,0xffffffff
  402b6d:	mov    esi,0xffffffff
  402b72:	test   r14,r14
  402b75:	je     402b7b <avl_insere_impl@@Base+0x1fb>
  402b77:	mov    esi,DWORD PTR [r14+0x18]
  402b7b:	mov    rdi,QWORD PTR [rax+0x8]
  402b7f:	test   rdi,rdi
  402b82:	je     402b87 <avl_insere_impl@@Base+0x207>
  402b84:	mov    edx,DWORD PTR [rdi+0x18]
  402b87:	cmp    esi,edx
  402b89:	jle    402cbd <avl_insere_impl@@Base+0x33d>
  402b8f:	mov    rsi,QWORD PTR [r14+0x8]
  402b93:	mov    QWORD PTR [r14+0x8],rax
  402b97:	mov    QWORD PTR [rax+0x10],rsi
  402b9b:	mov    rbx,QWORD PTR [rax+0x8]
  402b9f:	mov    edx,0xffffffff
  402ba4:	mov    edi,0xffffffff
  402ba9:	test   rbx,rbx
  402bac:	je     402bb1 <avl_insere_impl@@Base+0x231>
  402bae:	mov    edi,DWORD PTR [rbx+0x18]
  402bb1:	test   rsi,rsi
  402bb4:	je     402bb9 <avl_insere_impl@@Base+0x239>
  402bb6:	mov    edx,DWORD PTR [rsi+0x18]
  402bb9:	cmp    edi,edx
  402bbb:	cmovge edx,edi
  402bbe:	add    edx,0x1
  402bc1:	mov    DWORD PTR [rax+0x18],edx
  402bc4:	mov    rsi,QWORD PTR [r14+0x10]
  402bc8:	mov    eax,0xffffffff
  402bcd:	mov    edi,0xffffffff
  402bd2:	test   rsi,rsi
  402bd5:	je     402bda <avl_insere_impl@@Base+0x25a>
  402bd7:	mov    edi,DWORD PTR [rsi+0x18]
  402bda:	cmp    edx,edi
  402bdc:	cmovge edi,edx
  402bdf:	add    edi,0x1
  402be2:	mov    DWORD PTR [r14+0x18],edi
  402be6:	mov    QWORD PTR [r14+0x10],r15
  402bea:	mov    QWORD PTR [r15+0x8],rsi
  402bee:	test   rsi,rsi
  402bf1:	je     402bf6 <avl_insere_impl@@Base+0x276>
  402bf3:	mov    eax,DWORD PTR [rsi+0x18]
  402bf6:	mov    rdi,QWORD PTR [r15+0x10]
  402bfa:	mov    esi,0xffffffff
  402bff:	mov    edx,0xffffffff
  402c04:	test   rdi,rdi
  402c07:	je     402c0c <avl_insere_impl@@Base+0x28c>
  402c09:	mov    edx,DWORD PTR [rdi+0x18]
  402c0c:	cmp    eax,edx
  402c0e:	cmovge edx,eax
  402c11:	add    edx,0x1
  402c14:	mov    DWORD PTR [rcx],edx
  402c16:	mov    rax,QWORD PTR [r14+0x8]
  402c1a:	test   rax,rax
  402c1d:	je     402c22 <avl_insere_impl@@Base+0x2a2>
  402c1f:	mov    esi,DWORD PTR [rax+0x18]
  402c22:	cmp    esi,edx
  402c24:	cmovge edx,esi
  402c27:	add    edx,0x1
  402c2a:	mov    DWORD PTR [r14+0x18],edx
  402c2e:	jmp    402d12 <avl_insere_impl@@Base+0x392>
  402c33:	mov    r14,r15
  402c36:	jmp    402d12 <avl_insere_impl@@Base+0x392>
  402c3b:	add    DWORD PTR [r15+0x1c],0x1
  402c40:	mov    r14,r15
  402c43:	jmp    402d12 <avl_insere_impl@@Base+0x392>
  402c48:	mov    r14,QWORD PTR ds:0x8
  402c50:	mov    eax,0x8
  402c55:	jmp    402c5b <avl_insere_impl@@Base+0x2db>
  402c57:	lea    rax,[rdx+0x8]
  402c5b:	mov    QWORD PTR [rax],r15
  402c5e:	mov    QWORD PTR [r15+0x10],r14
  402c62:	mov    rdi,QWORD PTR [r15+0x8]
  402c66:	mov    eax,0xffffffff
  402c6b:	mov    esi,0xffffffff
  402c70:	test   rdi,rdi
  402c73:	je     402c78 <avl_insere_impl@@Base+0x2f8>
  402c75:	mov    esi,DWORD PTR [rdi+0x18]
  402c78:	test   r14,r14
  402c7b:	je     402c81 <avl_insere_impl@@Base+0x301>
  402c7d:	mov    eax,DWORD PTR [r14+0x18]
  402c81:	cmp    esi,eax
  402c83:	cmovge eax,esi
  402c86:	add    eax,0x1
  402c89:	mov    DWORD PTR [rcx],eax
  402c8b:	mov    rcx,QWORD PTR [rdx+0x10]
  402c8f:	test   rcx,rcx
  402c92:	je     402c99 <avl_insere_impl@@Base+0x319>
  402c94:	mov    ecx,DWORD PTR [rcx+0x18]
  402c97:	jmp    402c9e <avl_insere_impl@@Base+0x31e>
  402c99:	mov    ecx,0xffffffff
  402c9e:	cmp    eax,ecx
  402ca0:	cmovge ecx,eax
  402ca3:	add    ecx,0x1
  402ca6:	mov    DWORD PTR [rdx+0x18],ecx
  402ca9:	mov    r14,rdx
  402cac:	jmp    402d12 <avl_insere_impl@@Base+0x392>
  402cae:	mov    r14,QWORD PTR ds:0x10
  402cb6:	mov    edx,0x10
  402cbb:	jmp    402cc1 <avl_insere_impl@@Base+0x341>
  402cbd:	lea    rdx,[rax+0x10]
  402cc1:	mov    QWORD PTR [rdx],r15
  402cc4:	mov    QWORD PTR [r15+0x8],r14
  402cc8:	mov    edx,0xffffffff
  402ccd:	mov    esi,0xffffffff
  402cd2:	test   r14,r14
  402cd5:	je     402cdb <avl_insere_impl@@Base+0x35b>
  402cd7:	mov    esi,DWORD PTR [r14+0x18]
  402cdb:	mov    rdi,QWORD PTR [r15+0x10]
  402cdf:	test   rdi,rdi
  402ce2:	je     402ce7 <avl_insere_impl@@Base+0x367>
  402ce4:	mov    edx,DWORD PTR [rdi+0x18]
  402ce7:	cmp    esi,edx
  402ce9:	cmovge edx,esi
  402cec:	add    edx,0x1
  402cef:	mov    DWORD PTR [rcx],edx
  402cf1:	mov    rcx,QWORD PTR [rax+0x8]
  402cf5:	test   rcx,rcx
  402cf8:	je     402cff <avl_insere_impl@@Base+0x37f>
  402cfa:	mov    ecx,DWORD PTR [rcx+0x18]
  402cfd:	jmp    402d04 <avl_insere_impl@@Base+0x384>
  402cff:	mov    ecx,0xffffffff
  402d04:	cmp    ecx,edx
  402d06:	cmovge edx,ecx
  402d09:	add    edx,0x1
  402d0c:	mov    DWORD PTR [rax+0x18],edx
  402d0f:	mov    r14,rax
  402d12:	mov    rax,r14
  402d15:	pop    rbx
  402d16:	pop    r14
  402d18:	pop    r15
  402d1a:	ret    
  402d1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402d20 <avl_remove@@Base>:
  402d20:	mov    eax,0xffffffff
  402d25:	test   rdi,rdi
  402d28:	je     402d41 <avl_remove@@Base+0x21>
  402d2a:	test   rsi,rsi
  402d2d:	je     402d41 <avl_remove@@Base+0x21>
  402d2f:	push   rbx
  402d30:	mov    rbx,rdi
  402d33:	mov    rdi,QWORD PTR [rdi]
  402d36:	call   402470 <avl_remove_impl@@Base>
  402d3b:	mov    QWORD PTR [rbx],rax
  402d3e:	xor    eax,eax
  402d40:	pop    rbx
  402d41:	ret    
  402d42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d4c:	nop    DWORD PTR [rax+0x0]

0000000000402d50 <avl_min@@Base>:
  402d50:	test   rdi,rdi
  402d53:	je     402d70 <avl_min@@Base+0x20>
  402d55:	mov    rax,QWORD PTR [rdi]
  402d58:	nop    DWORD PTR [rax+rax*1+0x0]
  402d60:	mov    rcx,rax
  402d63:	mov    rax,QWORD PTR [rax+0x8]
  402d67:	test   rax,rax
  402d6a:	jne    402d60 <avl_min@@Base+0x10>
  402d6c:	mov    rax,QWORD PTR [rcx]
  402d6f:	ret    
  402d70:	xor    eax,eax
  402d72:	ret    
  402d73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d7d:	nop    DWORD PTR [rax]

0000000000402d80 <avl_no_valormin@@Base>:
  402d80:	mov    rax,rdi
  402d83:	mov    rdi,QWORD PTR [rdi+0x8]
  402d87:	test   rdi,rdi
  402d8a:	jne    402d80 <avl_no_valormin@@Base>
  402d8c:	ret    
  402d8d:	nop    DWORD PTR [rax]

0000000000402d90 <avl_max@@Base>:
  402d90:	test   rdi,rdi
  402d93:	je     402db0 <avl_max@@Base+0x20>
  402d95:	mov    rax,QWORD PTR [rdi]
  402d98:	nop    DWORD PTR [rax+rax*1+0x0]
  402da0:	mov    rcx,rax
  402da3:	mov    rax,QWORD PTR [rax+0x10]
  402da7:	test   rax,rax
  402daa:	jne    402da0 <avl_max@@Base+0x10>
  402dac:	mov    rax,QWORD PTR [rcx]
  402daf:	ret    
  402db0:	xor    eax,eax
  402db2:	ret    
  402db3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402dbd:	nop    DWORD PTR [rax]

0000000000402dc0 <avl_no_valormax@@Base>:
  402dc0:	mov    rax,rdi
  402dc3:	mov    rdi,QWORD PTR [rdi+0x10]
  402dc7:	test   rdi,rdi
  402dca:	jne    402dc0 <avl_no_valormax@@Base>
  402dcc:	ret    
  402dcd:	nop    DWORD PTR [rax]

0000000000402dd0 <avl_imprime@@Base>:
  402dd0:	test   rdi,rdi
  402dd3:	je     402de9 <avl_imprime@@Base+0x19>
  402dd5:	push   rax
  402dd6:	mov    rdi,QWORD PTR [rdi]
  402dd9:	call   402df0 <avl_preordem_impl@@Base>
  402dde:	mov    edi,0xa
  402de3:	pop    rax
  402de4:	jmp    402040 <putchar@plt>
  402de9:	ret    
  402dea:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402df0 <avl_preordem_impl@@Base>:
  402df0:	push   r14
  402df2:	push   rbx
  402df3:	push   rax
  402df4:	test   rdi,rdi
  402df7:	je     402e32 <avl_preordem_impl@@Base+0x42>
  402df9:	mov    rbx,rdi
  402dfc:	lea    r14,[rip+0x125e]        # 404061 <_IO_stdin_used@@Base+0x61>
  402e03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402e0d:	nop    DWORD PTR [rax]
  402e10:	mov    rsi,QWORD PTR [rbx]
  402e13:	mov    edx,DWORD PTR [rbx+0x1c]
  402e16:	xor    eax,eax
  402e18:	mov    rdi,r14
  402e1b:	call   402090 <printf@plt>
  402e20:	mov    rdi,QWORD PTR [rbx+0x8]
  402e24:	call   402df0 <avl_preordem_impl@@Base>
  402e29:	mov    rbx,QWORD PTR [rbx+0x10]
  402e2d:	test   rbx,rbx
  402e30:	jne    402e10 <avl_preordem_impl@@Base+0x20>
  402e32:	add    rsp,0x8
  402e36:	pop    rbx
  402e37:	pop    r14
  402e39:	ret    
  402e3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000402e40 <avl_altura@@Base>:
  402e40:	test   rdi,rdi
  402e43:	je     402e49 <avl_altura@@Base+0x9>
  402e45:	mov    eax,DWORD PTR [rdi+0x18]
  402e48:	ret    
  402e49:	mov    eax,0xffffffff
  402e4e:	ret    
  402e4f:	nop

0000000000402e50 <max@@Base>:
  402e50:	cmp    edi,esi
  402e52:	cmovge esi,edi
  402e55:	mov    eax,esi
  402e57:	ret    
  402e58:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402e60 <avl_novo_no@@Base>:
  402e60:	push   r14
  402e62:	push   rbx
  402e63:	push   rax
  402e64:	mov    r14,rdi
  402e67:	mov    edi,0x20
  402e6c:	call   4020c0 <malloc@plt>
  402e71:	mov    rbx,rax
  402e74:	mov    rdi,r14
  402e77:	call   402080 <strlen@plt>
  402e7c:	lea    rdi,[rax+0x1]
  402e80:	call   4020c0 <malloc@plt>
  402e85:	mov    QWORD PTR [rbx],rax
  402e88:	mov    rdi,rax
  402e8b:	mov    rsi,r14
  402e8e:	call   402050 <strcpy@plt>
  402e93:	vxorps xmm0,xmm0,xmm0
  402e97:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  402e9c:	movabs rax,0x100000000
  402ea6:	mov    QWORD PTR [rbx+0x18],rax
  402eaa:	mov    rax,rbx
  402ead:	add    rsp,0x8
  402eb1:	pop    rbx
  402eb2:	pop    r14
  402eb4:	ret    
  402eb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402ebf:	nop

0000000000402ec0 <roda_direita@@Base>:
  402ec0:	mov    rax,QWORD PTR [rdi+0x8]
  402ec4:	mov    rsi,QWORD PTR [rax+0x10]
  402ec8:	mov    QWORD PTR [rax+0x10],rdi
  402ecc:	mov    QWORD PTR [rdi+0x8],rsi
  402ed0:	mov    ecx,0xffffffff
  402ed5:	mov    edx,0xffffffff
  402eda:	test   rsi,rsi
  402edd:	je     402ee2 <roda_direita@@Base+0x22>
  402edf:	mov    edx,DWORD PTR [rsi+0x18]
  402ee2:	mov    rsi,QWORD PTR [rdi+0x10]
  402ee6:	test   rsi,rsi
  402ee9:	je     402eee <roda_direita@@Base+0x2e>
  402eeb:	mov    ecx,DWORD PTR [rsi+0x18]
  402eee:	cmp    edx,ecx
  402ef0:	cmovge ecx,edx
  402ef3:	add    ecx,0x1
  402ef6:	mov    DWORD PTR [rdi+0x18],ecx
  402ef9:	mov    rdx,QWORD PTR [rax+0x8]
  402efd:	test   rdx,rdx
  402f00:	je     402f07 <roda_direita@@Base+0x47>
  402f02:	mov    edx,DWORD PTR [rdx+0x18]
  402f05:	jmp    402f0c <roda_direita@@Base+0x4c>
  402f07:	mov    edx,0xffffffff
  402f0c:	cmp    edx,ecx
  402f0e:	cmovge ecx,edx
  402f11:	add    ecx,0x1
  402f14:	mov    DWORD PTR [rax+0x18],ecx
  402f17:	ret    
  402f18:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000402f20 <roda_esquerda@@Base>:
  402f20:	mov    rax,QWORD PTR [rdi+0x10]
  402f24:	mov    rdx,QWORD PTR [rax+0x8]
  402f28:	mov    QWORD PTR [rax+0x8],rdi
  402f2c:	mov    QWORD PTR [rdi+0x10],rdx
  402f30:	mov    r8,QWORD PTR [rdi+0x8]
  402f34:	mov    ecx,0xffffffff
  402f39:	mov    esi,0xffffffff
  402f3e:	test   r8,r8
  402f41:	je     402f47 <roda_esquerda@@Base+0x27>
  402f43:	mov    esi,DWORD PTR [r8+0x18]
  402f47:	test   rdx,rdx
  402f4a:	je     402f4f <roda_esquerda@@Base+0x2f>
  402f4c:	mov    ecx,DWORD PTR [rdx+0x18]
  402f4f:	cmp    esi,ecx
  402f51:	cmovge ecx,esi
  402f54:	add    ecx,0x1
  402f57:	mov    DWORD PTR [rdi+0x18],ecx
  402f5a:	mov    rdx,QWORD PTR [rax+0x10]
  402f5e:	test   rdx,rdx
  402f61:	je     402f68 <roda_esquerda@@Base+0x48>
  402f63:	mov    edx,DWORD PTR [rdx+0x18]
  402f66:	jmp    402f6d <roda_esquerda@@Base+0x4d>
  402f68:	mov    edx,0xffffffff
  402f6d:	cmp    ecx,edx
  402f6f:	cmovge edx,ecx
  402f72:	add    edx,0x1
  402f75:	mov    DWORD PTR [rax+0x18],edx
  402f78:	ret    
  402f79:	nop    DWORD PTR [rax+0x0]

0000000000402f80 <calc_balanceamento@@Base>:
  402f80:	test   rdi,rdi
  402f83:	je     402faa <calc_balanceamento@@Base+0x2a>
  402f85:	mov    rdx,QWORD PTR [rdi+0x10]
  402f89:	mov    ecx,0xffffffff
  402f8e:	mov    eax,0xffffffff
  402f93:	test   rdx,rdx
  402f96:	je     402f9b <calc_balanceamento@@Base+0x1b>
  402f98:	mov    eax,DWORD PTR [rdx+0x18]
  402f9b:	mov    rdx,QWORD PTR [rdi+0x8]
  402f9f:	test   rdx,rdx
  402fa2:	je     402fa7 <calc_balanceamento@@Base+0x27>
  402fa4:	mov    ecx,DWORD PTR [rdx+0x18]
  402fa7:	sub    eax,ecx
  402fa9:	ret    
  402faa:	xor    eax,eax
  402fac:	ret    
  402fad:	nop    DWORD PTR [rax]

0000000000402fb0 <bst_nova@@Base>:
  402fb0:	push   rax
  402fb1:	mov    edi,0x8
  402fb6:	call   4020c0 <malloc@plt>
  402fbb:	test   rax,rax
  402fbe:	je     402fc9 <bst_nova@@Base+0x19>
  402fc0:	mov    QWORD PTR [rax],0x0
  402fc7:	pop    rcx
  402fc8:	ret    
  402fc9:	xor    eax,eax
  402fcb:	pop    rcx
  402fcc:	ret    
  402fcd:	nop    DWORD PTR [rax]

0000000000402fd0 <bst_apaga@@Base>:
  402fd0:	push   rbx
  402fd1:	mov    rbx,rdi
  402fd4:	mov    rax,QWORD PTR [rdi]
  402fd7:	test   rax,rax
  402fda:	je     402ff3 <bst_apaga@@Base+0x23>
  402fdc:	nop    DWORD PTR [rax+0x0]
  402fe0:	mov    rsi,QWORD PTR [rax]
  402fe3:	mov    rdi,rax
  402fe6:	call   403000 <bst_remove_impl@@Base>
  402feb:	mov    QWORD PTR [rbx],rax
  402fee:	test   rax,rax
  402ff1:	jne    402fe0 <bst_apaga@@Base+0x10>
  402ff3:	mov    rdi,rbx
  402ff6:	pop    rbx
  402ff7:	jmp    402030 <free@plt>
  402ffc:	nop    DWORD PTR [rax+0x0]

0000000000403000 <bst_remove_impl@@Base>:
  403000:	push   r15
  403002:	push   r14
  403004:	push   r12
  403006:	push   rbx
  403007:	push   rax
  403008:	test   rdi,rdi
  40300b:	je     403039 <bst_remove_impl@@Base+0x39>
  40300d:	mov    rbx,rsi
  403010:	mov    r12,rdi
  403013:	mov    r14,QWORD PTR [rdi]
  403016:	mov    rdi,rsi
  403019:	mov    rsi,r14
  40301c:	call   4020a0 <strcmp@plt>
  403021:	test   eax,eax
  403023:	jns    403041 <bst_remove_impl@@Base+0x41>
  403025:	mov    rdi,QWORD PTR [r12+0x8]
  40302a:	mov    rsi,rbx
  40302d:	call   403000 <bst_remove_impl@@Base>
  403032:	mov    QWORD PTR [r12+0x8],rax
  403037:	jmp    403055 <bst_remove_impl@@Base+0x55>
  403039:	xor    r15d,r15d
  40303c:	mov    rax,r15
  40303f:	jmp    403058 <bst_remove_impl@@Base+0x58>
  403041:	je     403064 <bst_remove_impl@@Base+0x64>
  403043:	mov    rdi,QWORD PTR [r12+0x10]
  403048:	mov    rsi,rbx
  40304b:	call   403000 <bst_remove_impl@@Base>
  403050:	mov    QWORD PTR [r12+0x10],rax
  403055:	mov    rax,r12
  403058:	add    rsp,0x8
  40305c:	pop    rbx
  40305d:	pop    r12
  40305f:	pop    r14
  403061:	pop    r15
  403063:	ret    
  403064:	mov    rbx,QWORD PTR [r12+0x8]
  403069:	mov    rax,QWORD PTR [r12+0x10]
  40306e:	test   rbx,rbx
  403071:	je     4030b9 <bst_remove_impl@@Base+0xb9>
  403073:	test   rax,rax
  403076:	je     4030c1 <bst_remove_impl@@Base+0xc1>
  403078:	nop    DWORD PTR [rax+rax*1+0x0]
  403080:	mov    rbx,rax
  403083:	mov    rax,QWORD PTR [rax+0x8]
  403087:	test   rax,rax
  40308a:	jne    403080 <bst_remove_impl@@Base+0x80>
  40308c:	mov    rdi,QWORD PTR [rbx]
  40308f:	call   402080 <strlen@plt>
  403094:	lea    rsi,[rax+0x1]
  403098:	mov    rdi,r14
  40309b:	call   4020d0 <realloc@plt>
  4030a0:	mov    QWORD PTR [r12],rax
  4030a4:	mov    rsi,QWORD PTR [rbx]
  4030a7:	mov    rdi,rax
  4030aa:	call   402050 <strcpy@plt>
  4030af:	mov    rdi,QWORD PTR [r12+0x10]
  4030b4:	mov    rsi,QWORD PTR [rbx]
  4030b7:	jmp    40304b <bst_remove_impl@@Base+0x4b>
  4030b9:	mov    rbx,rax
  4030bc:	test   rax,rax
  4030bf:	je     4030fb <bst_remove_impl@@Base+0xfb>
  4030c1:	mov    rdi,QWORD PTR [rbx]
  4030c4:	call   402080 <strlen@plt>
  4030c9:	lea    rsi,[rax+0x1]
  4030cd:	mov    rdi,r14
  4030d0:	call   4020d0 <realloc@plt>
  4030d5:	mov    QWORD PTR [r12],rax
  4030d9:	mov    rsi,QWORD PTR [rbx]
  4030dc:	mov    rdi,rax
  4030df:	call   402050 <strcpy@plt>
  4030e4:	vmovups xmm0,XMMWORD PTR [rbx+0x8]
  4030e9:	vmovups XMMWORD PTR [r12+0x8],xmm0
  4030f0:	mov    r14,QWORD PTR [rbx]
  4030f3:	mov    r15,r12
  4030f6:	mov    r12,rbx
  4030f9:	jmp    4030fe <bst_remove_impl@@Base+0xfe>
  4030fb:	xor    r15d,r15d
  4030fe:	mov    rdi,r14
  403101:	call   402030 <free@plt>
  403106:	mov    rdi,r12
  403109:	call   402030 <free@plt>
  40310e:	mov    rax,r15
  403111:	jmp    403058 <bst_remove_impl@@Base+0x58>
  403116:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403120 <bst_pesquisa@@Base>:
  403120:	push   r14
  403122:	push   rbx
  403123:	push   rax
  403124:	xor    ebx,ebx
  403126:	test   rdi,rdi
  403129:	je     40316b <bst_pesquisa@@Base+0x4b>
  40312b:	mov    r14,rsi
  40312e:	test   rsi,rsi
  403131:	je     40316b <bst_pesquisa@@Base+0x4b>
  403133:	mov    rbx,QWORD PTR [rdi]
  403136:	test   rbx,rbx
  403139:	jne    40314c <bst_pesquisa@@Base+0x2c>
  40313b:	jmp    403169 <bst_pesquisa@@Base+0x49>
  40313d:	nop    DWORD PTR [rax]
  403140:	add    rbx,0x8
  403144:	mov    rbx,QWORD PTR [rbx]
  403147:	test   rbx,rbx
  40314a:	je     403169 <bst_pesquisa@@Base+0x49>
  40314c:	mov    rsi,QWORD PTR [rbx]
  40314f:	mov    rdi,r14
  403152:	call   4020a0 <strcmp@plt>
  403157:	test   eax,eax
  403159:	js     403140 <bst_pesquisa@@Base+0x20>
  40315b:	je     40316b <bst_pesquisa@@Base+0x4b>
  40315d:	add    rbx,0x10
  403161:	mov    rbx,QWORD PTR [rbx]
  403164:	test   rbx,rbx
  403167:	jne    40314c <bst_pesquisa@@Base+0x2c>
  403169:	xor    ebx,ebx
  40316b:	mov    rax,rbx
  40316e:	add    rsp,0x8
  403172:	pop    rbx
  403173:	pop    r14
  403175:	ret    
  403176:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403180 <bst_pesquisa_impl@@Base>:
  403180:	push   r14
  403182:	push   rbx
  403183:	push   rax
  403184:	test   rdi,rdi
  403187:	je     4031be <bst_pesquisa_impl@@Base+0x3e>
  403189:	mov    r14,rsi
  40318c:	mov    rbx,rdi
  40318f:	nop
  403190:	mov    rsi,QWORD PTR [rbx]
  403193:	mov    rdi,r14
  403196:	call   4020a0 <strcmp@plt>
  40319b:	test   eax,eax
  40319d:	jns    4031b0 <bst_pesquisa_impl@@Base+0x30>
  40319f:	add    rbx,0x8
  4031a3:	jmp    4031b6 <bst_pesquisa_impl@@Base+0x36>
  4031a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031af:	nop
  4031b0:	je     4031c0 <bst_pesquisa_impl@@Base+0x40>
  4031b2:	add    rbx,0x10
  4031b6:	mov    rbx,QWORD PTR [rbx]
  4031b9:	test   rbx,rbx
  4031bc:	jne    403190 <bst_pesquisa_impl@@Base+0x10>
  4031be:	xor    ebx,ebx
  4031c0:	mov    rax,rbx
  4031c3:	add    rsp,0x8
  4031c7:	pop    rbx
  4031c8:	pop    r14
  4031ca:	ret    
  4031cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004031d0 <bst_insere@@Base>:
  4031d0:	mov    eax,0xffffffff
  4031d5:	test   rdi,rdi
  4031d8:	je     4031f1 <bst_insere@@Base+0x21>
  4031da:	test   rsi,rsi
  4031dd:	je     4031f1 <bst_insere@@Base+0x21>
  4031df:	push   rbx
  4031e0:	mov    rbx,rdi
  4031e3:	mov    rdi,QWORD PTR [rdi]
  4031e6:	call   403200 <bst_insere_impl@@Base>
  4031eb:	mov    QWORD PTR [rbx],rax
  4031ee:	xor    eax,eax
  4031f0:	pop    rbx
  4031f1:	ret    
  4031f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4031fc:	nop    DWORD PTR [rax+0x0]

0000000000403200 <bst_insere_impl@@Base>:
  403200:	push   r14
  403202:	push   rbx
  403203:	push   rax
  403204:	mov    r14,rsi
  403207:	test   rdi,rdi
  40320a:	je     403230 <bst_insere_impl@@Base+0x30>
  40320c:	mov    rbx,rdi
  40320f:	mov    rsi,QWORD PTR [rdi]
  403212:	mov    rdi,r14
  403215:	call   4020a0 <strcmp@plt>
  40321a:	test   eax,eax
  40321c:	jns    403267 <bst_insere_impl@@Base+0x67>
  40321e:	mov    rdi,QWORD PTR [rbx+0x8]
  403222:	mov    rsi,r14
  403225:	call   403200 <bst_insere_impl@@Base>
  40322a:	mov    QWORD PTR [rbx+0x8],rax
  40322e:	jmp    403279 <bst_insere_impl@@Base+0x79>
  403230:	mov    edi,0x18
  403235:	call   4020c0 <malloc@plt>
  40323a:	mov    rbx,rax
  40323d:	mov    rdi,r14
  403240:	call   402080 <strlen@plt>
  403245:	lea    rdi,[rax+0x1]
  403249:	call   4020c0 <malloc@plt>
  40324e:	mov    QWORD PTR [rbx],rax
  403251:	mov    rdi,rax
  403254:	mov    rsi,r14
  403257:	call   402050 <strcpy@plt>
  40325c:	vxorps xmm0,xmm0,xmm0
  403260:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  403265:	jmp    403279 <bst_insere_impl@@Base+0x79>
  403267:	je     403279 <bst_insere_impl@@Base+0x79>
  403269:	mov    rdi,QWORD PTR [rbx+0x10]
  40326d:	mov    rsi,r14
  403270:	call   403200 <bst_insere_impl@@Base>
  403275:	mov    QWORD PTR [rbx+0x10],rax
  403279:	mov    rax,rbx
  40327c:	add    rsp,0x8
  403280:	pop    rbx
  403281:	pop    r14
  403283:	ret    
  403284:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40328e:	xchg   ax,ax

0000000000403290 <bst_remove@@Base>:
  403290:	mov    eax,0xffffffff
  403295:	test   rdi,rdi
  403298:	je     4032b1 <bst_remove@@Base+0x21>
  40329a:	test   rsi,rsi
  40329d:	je     4032b1 <bst_remove@@Base+0x21>
  40329f:	push   rbx
  4032a0:	mov    rbx,rdi
  4032a3:	mov    rdi,QWORD PTR [rdi]
  4032a6:	call   403000 <bst_remove_impl@@Base>
  4032ab:	mov    QWORD PTR [rbx],rax
  4032ae:	xor    eax,eax
  4032b0:	pop    rbx
  4032b1:	ret    
  4032b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032bc:	nop    DWORD PTR [rax+0x0]

00000000004032c0 <bst_min@@Base>:
  4032c0:	test   rdi,rdi
  4032c3:	je     4032e0 <bst_min@@Base+0x20>
  4032c5:	mov    rax,QWORD PTR [rdi]
  4032c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032d0:	mov    rcx,rax
  4032d3:	mov    rax,QWORD PTR [rax+0x8]
  4032d7:	test   rax,rax
  4032da:	jne    4032d0 <bst_min@@Base+0x10>
  4032dc:	mov    rax,QWORD PTR [rcx]
  4032df:	ret    
  4032e0:	xor    eax,eax
  4032e2:	ret    
  4032e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4032ed:	nop    DWORD PTR [rax]

00000000004032f0 <bst_no_valormin@@Base>:
  4032f0:	mov    rax,rdi
  4032f3:	mov    rdi,QWORD PTR [rdi+0x8]
  4032f7:	test   rdi,rdi
  4032fa:	jne    4032f0 <bst_no_valormin@@Base>
  4032fc:	ret    
  4032fd:	nop    DWORD PTR [rax]

0000000000403300 <bst_max@@Base>:
  403300:	test   rdi,rdi
  403303:	je     403320 <bst_max@@Base+0x20>
  403305:	mov    rax,QWORD PTR [rdi]
  403308:	nop    DWORD PTR [rax+rax*1+0x0]
  403310:	mov    rcx,rax
  403313:	mov    rax,QWORD PTR [rax+0x10]
  403317:	test   rax,rax
  40331a:	jne    403310 <bst_max@@Base+0x10>
  40331c:	mov    rax,QWORD PTR [rcx]
  40331f:	ret    
  403320:	xor    eax,eax
  403322:	ret    
  403323:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40332d:	nop    DWORD PTR [rax]

0000000000403330 <bst_no_valormax@@Base>:
  403330:	mov    rax,rdi
  403333:	mov    rdi,QWORD PTR [rdi+0x10]
  403337:	test   rdi,rdi
  40333a:	jne    403330 <bst_no_valormax@@Base>
  40333c:	ret    
  40333d:	nop    DWORD PTR [rax]

0000000000403340 <bst_imprime@@Base>:
  403340:	test   rdi,rdi
  403343:	je     40336a <bst_imprime@@Base+0x2a>
  403345:	push   rbx
  403346:	mov    rbx,rdi
  403349:	lea    rdi,[rip+0xd18]        # 404068 <_IO_stdin_used@@Base+0x68>
  403350:	xor    eax,eax
  403352:	call   402090 <printf@plt>
  403357:	mov    rdi,QWORD PTR [rbx]
  40335a:	call   403370 <bst_preordem_impl@@Base>
  40335f:	mov    edi,0xa
  403364:	pop    rbx
  403365:	jmp    402040 <putchar@plt>
  40336a:	ret    
  40336b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403370 <bst_preordem_impl@@Base>:
  403370:	push   r14
  403372:	push   rbx
  403373:	push   rax
  403374:	test   rdi,rdi
  403377:	je     4033af <bst_preordem_impl@@Base+0x3f>
  403379:	mov    rbx,rdi
  40337c:	lea    r14,[rip+0xcf0]        # 404073 <_IO_stdin_used@@Base+0x73>
  403383:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40338d:	nop    DWORD PTR [rax]
  403390:	mov    rsi,QWORD PTR [rbx]
  403393:	xor    eax,eax
  403395:	mov    rdi,r14
  403398:	call   402090 <printf@plt>
  40339d:	mov    rdi,QWORD PTR [rbx+0x8]
  4033a1:	call   403370 <bst_preordem_impl@@Base>
  4033a6:	mov    rbx,QWORD PTR [rbx+0x10]
  4033aa:	test   rbx,rbx
  4033ad:	jne    403390 <bst_preordem_impl@@Base+0x20>
  4033af:	add    rsp,0x8
  4033b3:	pop    rbx
  4033b4:	pop    r14
  4033b6:	ret    
  4033b7:	nop    WORD PTR [rax+rax*1+0x0]

00000000004033c0 <bst_novo_no@@Base>:
  4033c0:	push   r14
  4033c2:	push   rbx
  4033c3:	push   rax
  4033c4:	mov    r14,rdi
  4033c7:	mov    edi,0x18
  4033cc:	call   4020c0 <malloc@plt>
  4033d1:	mov    rbx,rax
  4033d4:	mov    rdi,r14
  4033d7:	call   402080 <strlen@plt>
  4033dc:	lea    rdi,[rax+0x1]
  4033e0:	call   4020c0 <malloc@plt>
  4033e5:	mov    QWORD PTR [rbx],rax
  4033e8:	mov    rdi,rax
  4033eb:	mov    rsi,r14
  4033ee:	call   402050 <strcpy@plt>
  4033f3:	vxorps xmm0,xmm0,xmm0
  4033f7:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  4033fc:	mov    rax,rbx
  4033ff:	add    rsp,0x8
  403403:	pop    rbx
  403404:	pop    r14
  403406:	ret    
  403407:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403410 <bst_altura@@Base>:
  403410:	push   r14
  403412:	push   rbx
  403413:	push   rax
  403414:	test   rdi,rdi
  403417:	je     403446 <bst_altura@@Base+0x36>
  403419:	mov    rax,rdi
  40341c:	mov    rdi,QWORD PTR [rdi+0x8]
  403420:	mov    r14,QWORD PTR [rax+0x10]
  403424:	xor    ebx,ebx
  403426:	mov    rax,r14
  403429:	or     rax,rdi
  40342c:	je     403452 <bst_altura@@Base+0x42>
  40342e:	call   403410 <bst_altura@@Base>
  403433:	mov    ebx,eax
  403435:	mov    rdi,r14
  403438:	call   403410 <bst_altura@@Base>
  40343d:	cmp    ebx,eax
  40343f:	jle    40344d <bst_altura@@Base+0x3d>
  403441:	add    ebx,0x1
  403444:	jmp    403452 <bst_altura@@Base+0x42>
  403446:	mov    ebx,0xffffffff
  40344b:	jmp    403452 <bst_altura@@Base+0x42>
  40344d:	add    eax,0x1
  403450:	mov    ebx,eax
  403452:	mov    eax,ebx
  403454:	add    rsp,0x8
  403458:	pop    rbx
  403459:	pop    r14
  40345b:	ret    
  40345c:	nop    DWORD PTR [rax+0x0]

0000000000403460 <__libc_csu_init@@Base>:
  403460:	endbr64 
  403464:	push   r15
  403466:	lea    r15,[rip+0x2993]        # 405e00 <_IO_stdin_used@@Base+0x1e00>
  40346d:	push   r14
  40346f:	mov    r14,rdx
  403472:	push   r13
  403474:	mov    r13,rsi
  403477:	push   r12
  403479:	mov    r12d,edi
  40347c:	push   rbp
  40347d:	lea    rbp,[rip+0x2984]        # 405e08 <_IO_stdin_used@@Base+0x1e08>
  403484:	push   rbx
  403485:	sub    rbp,r15
  403488:	sub    rsp,0x8
  40348c:	call   402000 <free@plt-0x30>
  403491:	sar    rbp,0x3
  403495:	je     4034b6 <__libc_csu_init@@Base+0x56>
  403497:	xor    ebx,ebx
  403499:	nop    DWORD PTR [rax+0x0]
  4034a0:	mov    rdx,r14
  4034a3:	mov    rsi,r13
  4034a6:	mov    edi,r12d
  4034a9:	call   QWORD PTR [r15+rbx*8]
  4034ad:	add    rbx,0x1
  4034b1:	cmp    rbp,rbx
  4034b4:	jne    4034a0 <__libc_csu_init@@Base+0x40>
  4034b6:	add    rsp,0x8
  4034ba:	pop    rbx
  4034bb:	pop    rbp
  4034bc:	pop    r12
  4034be:	pop    r13
  4034c0:	pop    r14
  4034c2:	pop    r15
  4034c4:	ret    
  4034c5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

00000000004034d0 <__libc_csu_fini@@Base>:
  4034d0:	endbr64 
  4034d4:	ret    

Disassembly of section .fini:

00000000004034d8 <.fini>:
  4034d8:	endbr64 
  4034dc:	sub    rsp,0x8
  4034e0:	add    rsp,0x8
  4034e4:	ret    
